
cd010d87c17d9b6e2c61d917526d7f27ef9e852a8c2b1d0210b9dc6123e117a4.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x10],rbx
   140001005:	mov    QWORD PTR [rsp+0x18],rbp
   14000100a:	push   rsi
   14000100b:	sub    rsp,0x20
   14000100f:	movsxd rax,DWORD PTR [rdx+0xc]
   140001013:	mov    rbp,rdx
   140001016:	lea    rbx,[rdx+rax*8+0x10]
   14000101b:	movsxd rax,DWORD PTR [rdx+0x8]
   14000101f:	lea    rsi,[rdx+rax*8+0x10]
   140001024:	cmp    rsi,rbx
   140001027:	je     0x140001059
   140001029:	mov    QWORD PTR [rsp+0x30],rdi
   14000102e:	xchg   ax,ax
   140001030:	mov    rdi,QWORD PTR [rbx-0x8]
   140001034:	sub    rbx,0x8
   140001038:	test   rdi,rdi
   14000103b:	je     0x14000104f
   14000103d:	lea    rcx,[rdi+0x18]
   140001041:	call   QWORD PTR [rip+0x14371]        # 0x1400153b8
   140001047:	mov    rcx,rdi
   14000104a:	call   0x140014638
   14000104f:	cmp    rbx,rsi
   140001052:	jne    0x140001030
   140001054:	mov    rdi,QWORD PTR [rsp+0x30]
   140001059:	mov    rcx,rbp
   14000105c:	mov    rbx,QWORD PTR [rsp+0x38]
   140001061:	mov    rbp,QWORD PTR [rsp+0x40]
   140001066:	add    rsp,0x20
   14000106a:	pop    rsi
   14000106b:	rex.W jmp QWORD PTR [rip+0x14336]        # 0x1400153a8
   140001072:	int3   
   140001073:	int3   
   140001074:	int3   
   140001075:	int3   
   140001076:	int3   
   140001077:	int3   
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	cmp    rdx,r8
   140001083:	je     0x14000110e
   140001089:	mov    QWORD PTR [rsp+0x10],rbp
   14000108e:	mov    QWORD PTR [rsp+0x18],rsi
   140001093:	push   rdi
   140001094:	sub    rsp,0x20
   140001098:	mov    rsi,r9
   14000109b:	mov    rbp,r8
   14000109e:	mov    rdi,rdx
   1400010a1:	mov    QWORD PTR [rsp+0x30],rbx
   1400010a6:	mov    ecx,0x20
   1400010ab:	call   0x14001463e
   1400010b0:	mov    rbx,rax
   1400010b3:	test   rax,rax
   1400010b6:	je     0x1400010e8
   1400010b8:	mov    rdx,QWORD PTR [rsi]
   1400010bb:	add    rdx,0x18
   1400010bf:	mov    ecx,DWORD PTR [rdx-0x18]
   1400010c2:	mov    DWORD PTR [rax],ecx
   1400010c4:	mov    ecx,DWORD PTR [rdx-0x14]
   1400010c7:	mov    DWORD PTR [rax+0x4],ecx
   1400010ca:	mov    ecx,DWORD PTR [rdx-0x10]
   1400010cd:	mov    DWORD PTR [rax+0x8],ecx
   1400010d0:	mov    ecx,DWORD PTR [rdx-0xc]
   1400010d3:	mov    DWORD PTR [rax+0xc],ecx
   1400010d6:	mov    eax,DWORD PTR [rdx-0x8]
   1400010d9:	lea    rcx,[rbx+0x18]
   1400010dd:	mov    DWORD PTR [rbx+0x10],eax
   1400010e0:	call   QWORD PTR [rip+0x142e2]        # 0x1400153c8
   1400010e6:	jmp    0x1400010ea
   1400010e8:	xor    ebx,ebx
   1400010ea:	mov    QWORD PTR [rdi],rbx
   1400010ed:	add    rdi,0x8
   1400010f1:	add    rsi,0x8
   1400010f5:	cmp    rdi,rbp
   1400010f8:	jne    0x1400010a6
   1400010fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400010ff:	mov    rbp,QWORD PTR [rsp+0x38]
   140001104:	mov    rsi,QWORD PTR [rsp+0x40]
   140001109:	add    rsp,0x20
   14000110d:	pop    rdi
   14000110e:	repz ret 
   140001110:	mov    QWORD PTR [rsp+0x8],rbx
   140001115:	mov    QWORD PTR [rsp+0x18],rbp
   14000111a:	mov    DWORD PTR [rsp+0x10],edx
   14000111e:	push   rsi
   14000111f:	push   rdi
   140001120:	push   r12
   140001122:	push   r13
   140001124:	push   r14
   140001126:	sub    rsp,0x20
   14000112a:	mov    rdx,QWORD PTR [rcx]
   14000112d:	movsxd r13,r8d
   140001130:	mov    r12,rcx
   140001133:	movsxd rax,DWORD PTR [rdx+0x8]
   140001137:	mov    r8d,r13d
   14000113a:	lea    r14,[rdx+rax*8+0x10]
   14000113f:	lea    rdx,[rsp+0x58]
   140001144:	call   QWORD PTR [rip+0x1424e]        # 0x140015398
   14000114a:	mov    r10,QWORD PTR [r12]
   14000114e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140001153:	movsxd r9,DWORD PTR [r10+0x8]
   140001157:	mov    rsi,rax
   14000115a:	mov    rdi,r14
   14000115d:	add    rdx,r9
   140001160:	lea    rbx,[r10+r9*8+0x10]
   140001165:	lea    rbp,[r10+rdx*8+0x10]
   14000116a:	cmp    rbx,rbp
   14000116d:	je     0x14000118e
   14000116f:	nop
   140001170:	test   rbx,rbx
   140001173:	je     0x140001181
   140001175:	mov    rdx,rdi
   140001178:	mov    rcx,rbx
   14000117b:	call   QWORD PTR [rip+0x14247]        # 0x1400153c8
   140001181:	add    rbx,0x8
   140001185:	add    rdi,0x8
   140001189:	cmp    rbx,rbp
   14000118c:	jne    0x140001170
   14000118e:	mov    r8,QWORD PTR [r12]
   140001192:	movsxd rdx,DWORD PTR [rsp+0x58]
   140001197:	movsxd rcx,DWORD PTR [r8+0x8]
   14000119b:	movsxd rax,DWORD PTR [r8+0xc]
   14000119f:	lea    rdi,[r14+rdx*8]
   1400011a3:	add    rcx,rdx
   1400011a6:	lea    rbp,[r8+rax*8+0x10]
   1400011ab:	add    rcx,r13
   1400011ae:	lea    rbx,[r8+rcx*8+0x10]
   1400011b3:	cmp    rbx,rbp
   1400011b6:	je     0x1400011d6
   1400011b8:	test   rbx,rbx
   1400011bb:	je     0x1400011c9
   1400011bd:	mov    rdx,rdi
   1400011c0:	mov    rcx,rbx
   1400011c3:	call   QWORD PTR [rip+0x141ff]        # 0x1400153c8
   1400011c9:	add    rbx,0x8
   1400011cd:	add    rdi,0x8
   1400011d1:	cmp    rbx,rbp
   1400011d4:	jne    0x1400011b8
   1400011d6:	mov    eax,DWORD PTR [rsi]
   1400011d8:	test   eax,eax
   1400011da:	je     0x1400011ec
   1400011dc:	cmp    eax,0xffffffff
   1400011df:	je     0x14000121e
   1400011e1:	lock add DWORD PTR [rsi],0xffffffff
   1400011e5:	setne  al
   1400011e8:	test   al,al
   1400011ea:	jne    0x14000121e
   1400011ec:	movsxd rax,DWORD PTR [rsi+0xc]
   1400011f0:	lea    rbx,[rsi+rax*8+0x10]
   1400011f5:	movsxd rax,DWORD PTR [rsi+0x8]
   1400011f9:	lea    rdi,[rsi+rax*8+0x10]
   1400011fe:	cmp    rdi,rbx
   140001201:	je     0x140001215
   140001203:	sub    rbx,0x8
   140001207:	mov    rcx,rbx
   14000120a:	call   QWORD PTR [rip+0x141a8]        # 0x1400153b8
   140001210:	cmp    rbx,rdi
   140001213:	jne    0x140001203
   140001215:	mov    rcx,rsi
   140001218:	call   QWORD PTR [rip+0x1418a]        # 0x1400153a8
   14000121e:	mov    rdx,QWORD PTR [r12]
   140001222:	movsxd rax,DWORD PTR [rsp+0x58]
   140001227:	mov    rbx,QWORD PTR [rsp+0x50]
   14000122c:	movsxd rcx,DWORD PTR [rdx+0x8]
   140001230:	mov    rbp,QWORD PTR [rsp+0x60]
   140001235:	add    rcx,rax
   140001238:	lea    rax,[rdx+rcx*8+0x10]
   14000123d:	add    rsp,0x20
   140001241:	pop    r14
   140001243:	pop    r13
   140001245:	pop    r12
   140001247:	pop    rdi
   140001248:	pop    rsi
   140001249:	ret    
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    QWORD PTR [rsp+0x8],rcx
   140001255:	push   rbx
   140001256:	push   rbp
   140001257:	push   rdi
   140001258:	sub    rsp,0x370
   14000125f:	movzx  ebx,dl
   140001262:	mov    rdi,rcx
   140001265:	mov    rdx,rcx
   140001268:	lea    rcx,[rsp+0x58]
   14000126d:	xor    ebp,ebp
   14000126f:	mov    DWORD PTR [rsp+0x3a0],ebp
   140001276:	call   QWORD PTR [rip+0x1405c]        # 0x1400152d8
   14000127c:	lea    edx,[rbp+0x1]
   14000127f:	lea    rcx,[rsp+0x58]
   140001284:	mov    DWORD PTR [rsp+0x3a8],0x1
   14000128f:	call   QWORD PTR [rip+0x1404b]        # 0x1400152e0
   140001295:	test   al,al
   140001297:	jne    0x14000132a
   14000129d:	lea    rcx,[rsp+0x58]
   1400012a2:	call   QWORD PTR [rip+0x14040]        # 0x1400152e8
   1400012a8:	lea    rcx,[rsp+0x1f0]
   1400012b0:	xor    r9d,r9d
   1400012b3:	xor    r8d,r8d
   1400012b6:	xor    edx,edx
   1400012b8:	mov    ebx,eax
   1400012ba:	call   QWORD PTR [rip+0x14030]        # 0x1400152f0
   1400012c0:	lea    rdx,[rsp+0xe8]
   1400012c8:	mov    rcx,rax
   1400012cb:	call   QWORD PTR [rip+0x14027]        # 0x1400152f8
   1400012d1:	lea    rdx,[rip+0x14158]        # 0x140015430
   1400012d8:	mov    rcx,rax
   1400012db:	call   QWORD PTR [rip+0x1401f]        # 0x140015300
   1400012e1:	mov    rdx,rdi
   1400012e4:	mov    rcx,rax
   1400012e7:	call   QWORD PTR [rip+0x1401b]        # 0x140015308
   1400012ed:	mov    edx,ebx
   1400012ef:	mov    rcx,QWORD PTR [rax]
   1400012f2:	mov    rdi,rax
   1400012f5:	call   QWORD PTR [rip+0x14015]        # 0x140015310
   1400012fb:	mov    rcx,rdi
   1400012fe:	call   QWORD PTR [rip+0x14014]        # 0x140015318
   140001304:	lea    rcx,[rsp+0xe8]
   14000130c:	call   QWORD PTR [rip+0x1400e]        # 0x140015320
   140001312:	lea    rcx,[rsp+0x58]
   140001317:	call   QWORD PTR [rip+0x1400b]        # 0x140015328
   14000131d:	xor    al,al
   14000131f:	add    rsp,0x370
   140001326:	pop    rdi
   140001327:	pop    rbp
   140001328:	pop    rbx
   140001329:	ret    
   14000132a:	lea    rdx,[rsp+0x98]
   140001332:	lea    rcx,[rsp+0x58]
   140001337:	mov    QWORD PTR [rsp+0x358],r14
   14000133f:	mov    QWORD PTR [rsp+0x350],r15
   140001347:	call   QWORD PTR [rip+0x13fe3]        # 0x140015330
   14000134d:	lea    rcx,[rsp+0x68]
   140001352:	mov    rdx,rax
   140001355:	call   QWORD PTR [rip+0x13fdd]        # 0x140015338
   14000135b:	lea    rcx,[rsp+0x98]
   140001363:	call   QWORD PTR [rip+0x13fd7]        # 0x140015340
   140001369:	lea    rcx,[rsp+0x58]
   14000136e:	call   QWORD PTR [rip+0x13fd4]        # 0x140015348
   140001374:	lea    rcx,[rsp+0x100]
   14000137c:	call   0x14000c6c0
   140001381:	lea    rdx,[rsp+0x100]
   140001389:	lea    rcx,[rsp+0x150]
   140001391:	call   0x14000d830
   140001396:	lea    rcx,[rsp+0x70]
   14000139b:	mov    rdx,rdi
   14000139e:	call   QWORD PTR [rip+0x13fac]        # 0x140015350
   1400013a4:	lea    rdx,[rip+0x14081]        # 0x14001542c
   1400013ab:	xor    eax,eax
   1400013ad:	mov    rdi,rdx
   1400013b0:	mov    QWORD PTR [rsp+0x88],rdx
   1400013b8:	or     r14,0xffffffffffffffff
   1400013bc:	mov    rcx,r14
   1400013bf:	lea    rdx,[rsp+0xc0]
   1400013c7:	repnz scas al,BYTE PTR es:[rdi]
   1400013c9:	not    rcx
   1400013cc:	dec    rcx
   1400013cf:	mov    DWORD PTR [rsp+0x80],ecx
   1400013d6:	lea    rcx,[rsp+0x70]
   1400013db:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   1400013e3:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   1400013ec:	call   QWORD PTR [rip+0x13f66]        # 0x140015358
   1400013f2:	lea    rdx,[rsp+0xa8]
   1400013fa:	mov    rcx,rax
   1400013fd:	call   QWORD PTR [rip+0x13f5d]        # 0x140015360
   140001403:	lea    rdx,[rsp+0xf0]
   14000140b:	mov    rcx,rax
   14000140e:	call   QWORD PTR [rip+0x13f54]        # 0x140015368
   140001414:	lea    rcx,[rsp+0xa8]
   14000141c:	movzx  edi,al
   14000141f:	call   QWORD PTR [rip+0x13f93]        # 0x1400153b8
   140001425:	lea    rcx,[rsp+0xc0]
   14000142d:	call   QWORD PTR [rip+0x13f85]        # 0x1400153b8
   140001433:	test   dil,dil
   140001436:	lea    r8d,[r14+0x2]
   14000143a:	lea    rdx,[rsp+0x68]
   14000143f:	lea    rcx,[rsp+0x150]
   140001447:	sete   r9b
   14000144b:	call   0x14000d920
   140001450:	lea    rdx,[rsp+0x100]
   140001458:	lea    rcx,[rsp+0x230]
   140001460:	call   0x140004aa0
   140001465:	test   dil,dil
   140001468:	je     0x140001488
   14000146a:	lea    edx,[r14+0x68]
   14000146e:	lea    rcx,[rsp+0x230]
   140001476:	call   0x140004c70
   14000147b:	movzx  r15d,al
   14000147f:	mov    BYTE PTR [rsp+0x3a0],al
   140001486:	jmp    0x1400014a4
   140001488:	lea    rcx,[rsp+0x230]
   140001490:	mov    edx,0x62
   140001495:	call   0x140004c70
   14000149a:	mov    r15b,al
   14000149d:	mov    BYTE PTR [rsp+0x3a0],al
   1400014a4:	test   r15b,r15b
   1400014a7:	jne    0x140001b0d
   1400014ad:	test   bl,bl
   1400014af:	jne    0x140001b0d
   1400014b5:	mov    rdi,QWORD PTR [rsp+0x348]
   1400014bd:	mov    QWORD PTR [rsp+0x398],rsi
   1400014c5:	mov    QWORD PTR [rsp+0x368],r12
   1400014cd:	mov    QWORD PTR [rsp+0x30],rdi
   1400014d2:	mov    eax,DWORD PTR [rdi]
   1400014d4:	mov    QWORD PTR [rsp+0x360],r13
   1400014dc:	test   eax,eax
   1400014de:	je     0x1400014f7
   1400014e0:	cmp    eax,0xffffffff
   1400014e3:	je     0x14000158c
   1400014e9:	lock add DWORD PTR [rdi],0x1
   1400014ed:	mov    rdi,QWORD PTR [rsp+0x30]
   1400014f2:	jmp    0x14000158c
   1400014f7:	mov    edx,DWORD PTR [rdi+0x4]
   1400014fa:	lea    rcx,[rsp+0x30]
   1400014ff:	call   QWORD PTR [rip+0x13e9b]        # 0x1400153a0
   140001505:	mov    rdi,QWORD PTR [rsp+0x30]
   14000150a:	mov    rcx,QWORD PTR [rsp+0x348]
   140001512:	movsxd rax,DWORD PTR [rdi+0xc]
   140001516:	lea    r12,[rdi+rax*8+0x10]
   14000151b:	movsxd rax,DWORD PTR [rcx+0x8]
   14000151f:	lea    rsi,[rcx+rax*8+0x10]
   140001524:	movsxd rax,DWORD PTR [rdi+0x8]
   140001528:	lea    rbx,[rdi+rax*8+0x10]
   14000152d:	cmp    rbx,r12
   140001530:	je     0x14000158c
   140001532:	mov    ecx,0x20
   140001537:	call   0x14001463e
   14000153c:	mov    rdi,rax
   14000153f:	test   rax,rax
   140001542:	je     0x140001574
   140001544:	mov    rdx,QWORD PTR [rsi]
   140001547:	add    rdx,0x18
   14000154b:	mov    ecx,DWORD PTR [rdx-0x18]
   14000154e:	mov    DWORD PTR [rax],ecx
   140001550:	mov    ecx,DWORD PTR [rdx-0x14]
   140001553:	mov    DWORD PTR [rax+0x4],ecx
   140001556:	mov    ecx,DWORD PTR [rdx-0x10]
   140001559:	mov    DWORD PTR [rax+0x8],ecx
   14000155c:	mov    ecx,DWORD PTR [rdx-0xc]
   14000155f:	mov    DWORD PTR [rax+0xc],ecx
   140001562:	mov    eax,DWORD PTR [rdx-0x8]
   140001565:	lea    rcx,[rdi+0x18]
   140001569:	mov    DWORD PTR [rdi+0x10],eax
   14000156c:	call   QWORD PTR [rip+0x13e56]        # 0x1400153c8
   140001572:	jmp    0x140001577
   140001574:	mov    rdi,rbp
   140001577:	mov    QWORD PTR [rbx],rdi
   14000157a:	add    rbx,0x8
   14000157e:	add    rsi,0x8
   140001582:	cmp    rbx,r12
   140001585:	jne    0x140001532
   140001587:	mov    rdi,QWORD PTR [rsp+0x30]
   14000158c:	mov    rdx,rdi
   14000158f:	mov    QWORD PTR [rsp+0x38],rdx
   140001594:	mov    eax,DWORD PTR [rdi]
   140001596:	test   eax,eax
   140001598:	je     0x1400015b6
   14000159a:	cmp    eax,0xffffffff
   14000159d:	je     0x14000164f
   1400015a3:	lock add DWORD PTR [rdi],0x1
   1400015a7:	mov    rdi,QWORD PTR [rsp+0x30]
   1400015ac:	mov    rdx,QWORD PTR [rsp+0x38]
   1400015b1:	jmp    0x14000164f
   1400015b6:	mov    edx,DWORD PTR [rdi+0x4]
   1400015b9:	lea    rcx,[rsp+0x38]
   1400015be:	call   QWORD PTR [rip+0x13ddc]        # 0x1400153a0
   1400015c4:	mov    rdx,QWORD PTR [rsp+0x38]
   1400015c9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400015ce:	movsxd rax,DWORD PTR [rdx+0xc]
   1400015d2:	lea    r12,[rdx+rax*8+0x10]
   1400015d7:	movsxd rax,DWORD PTR [rdi+0x8]
   1400015db:	lea    rsi,[rdi+rax*8+0x10]
   1400015e0:	movsxd rax,DWORD PTR [rdx+0x8]
   1400015e4:	lea    rbx,[rdx+rax*8+0x10]
   1400015e9:	cmp    rbx,r12
   1400015ec:	je     0x14000164f
   1400015ee:	xchg   ax,ax
   1400015f0:	mov    ecx,0x20
   1400015f5:	call   0x14001463e
   1400015fa:	mov    rdi,rax
   1400015fd:	test   rax,rax
   140001600:	je     0x140001632
   140001602:	mov    rdx,QWORD PTR [rsi]
   140001605:	add    rdx,0x18
   140001609:	mov    ecx,DWORD PTR [rdx-0x18]
   14000160c:	mov    DWORD PTR [rax],ecx
   14000160e:	mov    ecx,DWORD PTR [rdx-0x14]
   140001611:	mov    DWORD PTR [rax+0x4],ecx
   140001614:	mov    ecx,DWORD PTR [rdx-0x10]
   140001617:	mov    DWORD PTR [rax+0x8],ecx
   14000161a:	mov    ecx,DWORD PTR [rdx-0xc]
   14000161d:	mov    DWORD PTR [rax+0xc],ecx
   140001620:	mov    eax,DWORD PTR [rdx-0x8]
   140001623:	lea    rcx,[rdi+0x18]
   140001627:	mov    DWORD PTR [rdi+0x10],eax
   14000162a:	call   QWORD PTR [rip+0x13d98]        # 0x1400153c8
   140001630:	jmp    0x140001635
   140001632:	mov    rdi,rbp
   140001635:	mov    QWORD PTR [rbx],rdi
   140001638:	add    rbx,0x8
   14000163c:	add    rsi,0x8
   140001640:	cmp    rbx,r12
   140001643:	jne    0x1400015f0
   140001645:	mov    rdi,QWORD PTR [rsp+0x30]
   14000164a:	mov    rdx,QWORD PTR [rsp+0x38]
   14000164f:	mov    DWORD PTR [rsp+0x40],ebp
   140001653:	movsxd rax,DWORD PTR [rdx+0x8]
   140001657:	lea    rcx,[rdx+rax*8+0x10]
   14000165c:	mov    QWORD PTR [rsp+0x48],rcx
   140001661:	movsxd rax,DWORD PTR [rdx+0xc]
   140001665:	lea    rcx,[rdx+rax*8+0x10]
   14000166a:	mov    QWORD PTR [rsp+0x50],rcx
   14000166f:	mov    eax,DWORD PTR [rdi]
   140001671:	test   eax,eax
   140001673:	je     0x140001690
   140001675:	cmp    eax,0xffffffff
   140001678:	je     0x1400016e0
   14000167a:	mov    eax,r14d
   14000167d:	lock xadd DWORD PTR [rdi],eax
   140001681:	add    eax,0xffffffff
   140001684:	setne  al
   140001687:	test   al,al
   140001689:	jne    0x1400016e0
   14000168b:	mov    rdi,QWORD PTR [rsp+0x30]
   140001690:	movsxd rax,DWORD PTR [rdi+0xc]
   140001694:	lea    rbx,[rdi+rax*8+0x10]
   140001699:	movsxd rax,DWORD PTR [rdi+0x8]
   14000169d:	lea    r12,[rdi+rax*8+0x10]
   1400016a2:	cmp    r12,rbx
   1400016a5:	je     0x1400016d4
   1400016a7:	nop    WORD PTR [rax+rax*1+0x0]
   1400016b0:	mov    rsi,QWORD PTR [rbx-0x8]
   1400016b4:	sub    rbx,0x8
   1400016b8:	test   rsi,rsi
   1400016bb:	je     0x1400016cf
   1400016bd:	lea    rcx,[rsi+0x18]
   1400016c1:	call   QWORD PTR [rip+0x13cf1]        # 0x1400153b8
   1400016c7:	mov    rcx,rsi
   1400016ca:	call   0x140014638
   1400016cf:	cmp    rbx,r12
   1400016d2:	jne    0x1400016b0
   1400016d4:	mov    rcx,rdi
   1400016d7:	call   QWORD PTR [rip+0x13ccb]        # 0x1400153a8
   1400016dd:	nop    DWORD PTR [rax]
   1400016e0:	mov    eax,DWORD PTR [rsp+0x40]
   1400016e4:	inc    DWORD PTR [rsp+0x40]
   1400016e8:	test   eax,eax
   1400016ea:	jne    0x1400016fd
   1400016ec:	mov    rax,QWORD PTR [rsp+0x50]
   1400016f1:	cmp    QWORD PTR [rsp+0x48],rax
   1400016f6:	je     0x1400016fd
   1400016f8:	mov    r13b,0x1
   1400016fb:	jmp    0x140001700
   1400016fd:	xor    r13b,r13b
   140001700:	test   bpl,0x2
   140001704:	je     0x14000177d
   140001706:	mov    rsi,QWORD PTR [rsp+0xa0]
   14000170e:	and    ebp,0xfffffffd
   140001711:	mov    eax,DWORD PTR [rsi]
   140001713:	test   eax,eax
   140001715:	je     0x140001735
   140001717:	cmp    eax,0xffffffff
   14000171a:	je     0x14000177d
   14000171c:	mov    eax,r14d
   14000171f:	lock xadd DWORD PTR [rsi],eax
   140001723:	add    eax,0xffffffff
   140001726:	setne  al
   140001729:	test   al,al
   14000172b:	jne    0x14000177d
   14000172d:	mov    rsi,QWORD PTR [rsp+0xa0]
   140001735:	movsxd rax,DWORD PTR [rsi+0xc]
   140001739:	lea    rdi,[rsi+rax*8+0x10]
   14000173e:	movsxd rax,DWORD PTR [rsi+0x8]
   140001742:	lea    r12,[rsi+rax*8+0x10]
   140001747:	cmp    r12,rdi
   14000174a:	je     0x140001774
   14000174c:	nop    DWORD PTR [rax+0x0]
   140001750:	mov    rbx,QWORD PTR [rdi-0x8]
   140001754:	sub    rdi,0x8
   140001758:	test   rbx,rbx
   14000175b:	je     0x14000176f
   14000175d:	lea    rcx,[rbx+0x18]
   140001761:	call   QWORD PTR [rip+0x13c51]        # 0x1400153b8
   140001767:	mov    rcx,rbx
   14000176a:	call   0x140014638
   14000176f:	cmp    rdi,r12
   140001772:	jne    0x140001750
   140001774:	mov    rcx,rsi
   140001777:	call   QWORD PTR [rip+0x13c2b]        # 0x1400153a8
   14000177d:	test   r13b,r13b
   140001780:	je     0x140001a82
   140001786:	mov    rax,QWORD PTR [rsp+0x48]
   14000178b:	mov    r15,QWORD PTR [rax]
   14000178e:	test   bpl,0x4
   140001792:	je     0x140001810
   140001794:	mov    rsi,QWORD PTR [rsp+0xc8]
   14000179c:	and    ebp,0xfffffffb
   14000179f:	mov    eax,DWORD PTR [rsi]
   1400017a1:	test   eax,eax
   1400017a3:	je     0x1400017c3
   1400017a5:	cmp    eax,0xffffffff
   1400017a8:	je     0x140001810
   1400017aa:	mov    eax,r14d
   1400017ad:	lock xadd DWORD PTR [rsi],eax
   1400017b1:	add    eax,0xffffffff
   1400017b4:	setne  al
   1400017b7:	test   al,al
   1400017b9:	jne    0x140001810
   1400017bb:	mov    rsi,QWORD PTR [rsp+0xc8]
   1400017c3:	movsxd rax,DWORD PTR [rsi+0xc]
   1400017c7:	lea    rdi,[rsi+rax*8+0x10]
   1400017cc:	movsxd rax,DWORD PTR [rsi+0x8]
   1400017d0:	lea    r12,[rsi+rax*8+0x10]
   1400017d5:	cmp    r12,rdi
   1400017d8:	je     0x140001804
   1400017da:	nop    WORD PTR [rax+rax*1+0x0]
   1400017e0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400017e4:	sub    rdi,0x8
   1400017e8:	test   rbx,rbx
   1400017eb:	je     0x1400017ff
   1400017ed:	lea    rcx,[rbx+0x18]
   1400017f1:	call   QWORD PTR [rip+0x13bc1]        # 0x1400153b8
   1400017f7:	mov    rcx,rbx
   1400017fa:	call   0x140014638
   1400017ff:	cmp    rdi,r12
   140001802:	jne    0x1400017e0
   140001804:	mov    rcx,rsi
   140001807:	call   QWORD PTR [rip+0x13b9b]        # 0x1400153a8
   14000180d:	nop    DWORD PTR [rax]
   140001810:	mov    r13d,DWORD PTR [rsp+0x40]
   140001815:	test   bpl,0x10
   140001819:	je     0x14000188e
   14000181b:	mov    rsi,QWORD PTR [rsp+0xb0]
   140001823:	and    ebp,0xffffffef
   140001826:	mov    eax,DWORD PTR [rsi]
   140001828:	test   eax,eax
   14000182a:	je     0x140001842
   14000182c:	cmp    eax,0xffffffff
   14000182f:	je     0x14000188e
   140001831:	mov    eax,r14d
   140001834:	lock xadd DWORD PTR [rsi],eax
   140001838:	add    eax,0xffffffff
   14000183b:	setne  al
   14000183e:	test   al,al
   140001840:	jne    0x14000188e
   140001842:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000184a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000184e:	lea    rdi,[rsi+rax*8+0x10]
   140001853:	movsxd rax,DWORD PTR [rsi+0x8]
   140001857:	lea    r12,[rsi+rax*8+0x10]
   14000185c:	cmp    r12,rdi
   14000185f:	je     0x140001885
   140001861:	mov    rbx,QWORD PTR [rdi-0x8]
   140001865:	sub    rdi,0x8
   140001869:	test   rbx,rbx
   14000186c:	je     0x140001880
   14000186e:	lea    rcx,[rbx+0x18]
   140001872:	call   QWORD PTR [rip+0x13b40]        # 0x1400153b8
   140001878:	mov    rcx,rbx
   14000187b:	call   0x140014638
   140001880:	cmp    rdi,r12
   140001883:	jne    0x140001861
   140001885:	mov    rcx,rsi
   140001888:	call   QWORD PTR [rip+0x13b1a]        # 0x1400153a8
   14000188e:	test   r13d,r13d
   140001891:	je     0x1400019f2
   140001897:	lea    rdx,[r15+0x18]
   14000189b:	lea    rcx,[rsp+0xd0]
   1400018a3:	call   QWORD PTR [rip+0x13b1f]        # 0x1400153c8
   1400018a9:	lea    rdx,[rsp+0xe0]
   1400018b1:	mov    rcx,rax
   1400018b4:	call   QWORD PTR [rip+0x13ab6]        # 0x140015370
   1400018ba:	mov    rcx,rax
   1400018bd:	call   QWORD PTR [rip+0x13ab5]        # 0x140015378
   1400018c3:	mov    rdx,QWORD PTR [rsp+0x390]
   1400018cb:	lea    rcx,[rsp+0x90]
   1400018d3:	mov    rbx,rax
   1400018d6:	call   QWORD PTR [rip+0x13aec]        # 0x1400153c8
   1400018dc:	lea    rdx,[rsp+0xd8]
   1400018e4:	mov    rcx,rax
   1400018e7:	call   QWORD PTR [rip+0x13a83]        # 0x140015370
   1400018ed:	mov    rcx,rax
   1400018f0:	call   QWORD PTR [rip+0x13a82]        # 0x140015378
   1400018f6:	lea    rcx,[rsp+0x210]
   1400018fe:	xor    r9d,r9d
   140001901:	xor    r8d,r8d
   140001904:	xor    edx,edx
   140001906:	mov    rdi,rax
   140001909:	call   QWORD PTR [rip+0x139e1]        # 0x1400152f0
   14000190f:	mov    r9d,DWORD PTR [r15+0xc]
   140001913:	lea    rdx,[rip+0x13b06]        # 0x140015420
   14000191a:	mov    rcx,rax
   14000191d:	mov    r8,rdi
   140001920:	mov    QWORD PTR [rsp+0x20],rbx
   140001925:	call   QWORD PTR [rip+0x13a5d]        # 0x140015388
   14000192b:	lea    rcx,[rsp+0xd8]
   140001933:	call   QWORD PTR [rip+0x13a07]        # 0x140015340
   140001939:	lea    rcx,[rsp+0x90]
   140001941:	call   QWORD PTR [rip+0x13a71]        # 0x1400153b8
   140001947:	lea    rcx,[rsp+0xe0]
   14000194f:	call   QWORD PTR [rip+0x139eb]        # 0x140015340
   140001955:	lea    rcx,[rsp+0xd0]
   14000195d:	call   QWORD PTR [rip+0x13a55]        # 0x1400153b8
   140001963:	dec    DWORD PTR [rsp+0x40]
   140001967:	test   bpl,0x8
   14000196b:	je     0x140001810
   140001971:	mov    rsi,QWORD PTR [rsp+0xb8]
   140001979:	and    ebp,0xfffffff7
   14000197c:	mov    eax,DWORD PTR [rsi]
   14000197e:	test   eax,eax
   140001980:	je     0x1400019a0
   140001982:	cmp    eax,0xffffffff
   140001985:	je     0x140001810
   14000198b:	mov    eax,r14d
   14000198e:	lock xadd DWORD PTR [rsi],eax
   140001992:	add    eax,0xffffffff
   140001995:	setne  al
   140001998:	test   al,al
   14000199a:	jne    0x140001810
   1400019a0:	mov    rsi,QWORD PTR [rsp+0xb8]
   1400019a8:	movsxd rax,DWORD PTR [rsi+0xc]
   1400019ac:	lea    rdi,[rsi+rax*8+0x10]
   1400019b1:	movsxd rax,DWORD PTR [rsi+0x8]
   1400019b5:	lea    r12,[rsi+rax*8+0x10]
   1400019ba:	cmp    r12,rdi
   1400019bd:	je     0x1400019e4
   1400019bf:	nop
   1400019c0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400019c4:	sub    rdi,0x8
   1400019c8:	test   rbx,rbx
   1400019cb:	je     0x1400019df
   1400019cd:	lea    rcx,[rbx+0x18]
   1400019d1:	call   QWORD PTR [rip+0x139e1]        # 0x1400153b8
   1400019d7:	mov    rcx,rbx
   1400019da:	call   0x140014638
   1400019df:	cmp    rdi,r12
   1400019e2:	jne    0x1400019c0
   1400019e4:	mov    rcx,rsi
   1400019e7:	call   QWORD PTR [rip+0x139bb]        # 0x1400153a8
   1400019ed:	jmp    0x140001810
   1400019f2:	add    QWORD PTR [rsp+0x48],0x8
   1400019f8:	test   bpl,0x1
   1400019fc:	je     0x1400016e0
   140001a02:	mov    rsi,QWORD PTR [rsp+0x80]
   140001a0a:	and    ebp,0xfffffffe
   140001a0d:	mov    eax,DWORD PTR [rsi]
   140001a0f:	test   eax,eax
   140001a11:	je     0x140001a39
   140001a13:	cmp    eax,0xffffffff
   140001a16:	je     0x1400016e0
   140001a1c:	mov    eax,r14d
   140001a1f:	lock xadd DWORD PTR [rsi],eax
   140001a23:	add    eax,0xffffffff
   140001a26:	setne  al
   140001a29:	test   al,al
   140001a2b:	jne    0x1400016e0
   140001a31:	mov    rsi,QWORD PTR [rsp+0x80]
   140001a39:	movsxd rax,DWORD PTR [rsi+0xc]
   140001a3d:	lea    rdi,[rsi+rax*8+0x10]
   140001a42:	movsxd rax,DWORD PTR [rsi+0x8]
   140001a46:	lea    r12,[rsi+rax*8+0x10]
   140001a4b:	cmp    r12,rdi
   140001a4e:	je     0x140001a74
   140001a50:	mov    rbx,QWORD PTR [rdi-0x8]
   140001a54:	sub    rdi,0x8
   140001a58:	test   rbx,rbx
   140001a5b:	je     0x140001a6f
   140001a5d:	lea    rcx,[rbx+0x18]
   140001a61:	call   QWORD PTR [rip+0x13951]        # 0x1400153b8
   140001a67:	mov    rcx,rbx
   140001a6a:	call   0x140014638
   140001a6f:	cmp    rdi,r12
   140001a72:	jne    0x140001a50
   140001a74:	mov    rcx,rsi
   140001a77:	call   QWORD PTR [rip+0x1392b]        # 0x1400153a8
   140001a7d:	jmp    0x1400016e0
   140001a82:	mov    rsi,QWORD PTR [rsp+0x38]
   140001a87:	mov    r13,QWORD PTR [rsp+0x360]
   140001a8f:	mov    r12,QWORD PTR [rsp+0x368]
   140001a97:	mov    eax,DWORD PTR [rsi]
   140001a99:	test   eax,eax
   140001a9b:	je     0x140001ab7
   140001a9d:	cmp    eax,0xffffffff
   140001aa0:	je     0x140001afd
   140001aa2:	lock xadd DWORD PTR [rsi],r14d
   140001aa7:	add    r14d,0xffffffff
   140001aab:	setne  al
   140001aae:	test   al,al
   140001ab0:	jne    0x140001afd
   140001ab2:	mov    rsi,QWORD PTR [rsp+0x38]
   140001ab7:	movsxd rax,DWORD PTR [rsi+0xc]
   140001abb:	lea    rdi,[rsi+rax*8+0x10]
   140001ac0:	movsxd rax,DWORD PTR [rsi+0x8]
   140001ac4:	lea    rbp,[rsi+rax*8+0x10]
   140001ac9:	cmp    rbp,rdi
   140001acc:	je     0x140001af4
   140001ace:	xchg   ax,ax
   140001ad0:	mov    rbx,QWORD PTR [rdi-0x8]
   140001ad4:	sub    rdi,0x8
   140001ad8:	test   rbx,rbx
   140001adb:	je     0x140001aef
   140001add:	lea    rcx,[rbx+0x18]
   140001ae1:	call   QWORD PTR [rip+0x138d1]        # 0x1400153b8
   140001ae7:	mov    rcx,rbx
   140001aea:	call   0x140014638
   140001aef:	cmp    rdi,rbp
   140001af2:	jne    0x140001ad0
   140001af4:	mov    rcx,rsi
   140001af7:	call   QWORD PTR [rip+0x138ab]        # 0x1400153a8
   140001afd:	mov    r15b,BYTE PTR [rsp+0x3a0]
   140001b05:	mov    rsi,QWORD PTR [rsp+0x398]
   140001b0d:	lea    rcx,[rsp+0x230]
   140001b15:	call   0x140004ba0
   140001b1a:	lea    rcx,[rsp+0x70]
   140001b1f:	call   QWORD PTR [rip+0x1385b]        # 0x140015380
   140001b25:	lea    rcx,[rsp+0x168]
   140001b2d:	call   QWORD PTR [rip+0x13885]        # 0x1400153b8
   140001b33:	lea    rcx,[rsp+0x160]
   140001b3b:	call   QWORD PTR [rip+0x13877]        # 0x1400153b8
   140001b41:	lea    rcx,[rsp+0x158]
   140001b49:	call   QWORD PTR [rip+0x13869]        # 0x1400153b8
   140001b4f:	lea    rcx,[rsp+0x100]
   140001b57:	call   0x14000c730
   140001b5c:	lea    rcx,[rsp+0x68]
   140001b61:	call   QWORD PTR [rip+0x13851]        # 0x1400153b8
   140001b67:	lea    rcx,[rsp+0x58]
   140001b6c:	call   QWORD PTR [rip+0x137b6]        # 0x140015328
   140001b72:	mov    r14,QWORD PTR [rsp+0x358]
   140001b7a:	mov    al,r15b
   140001b7d:	mov    r15,QWORD PTR [rsp+0x350]
   140001b85:	add    rsp,0x370
   140001b8c:	pop    rdi
   140001b8d:	pop    rbp
   140001b8e:	pop    rbx
   140001b8f:	ret    
   140001b90:	mov    DWORD PTR [rsp+0x8],ecx
   140001b94:	push   rbx
   140001b95:	push   rsi
   140001b96:	push   rdi
   140001b97:	push   r12
   140001b99:	push   r13
   140001b9b:	sub    rsp,0x190
   140001ba2:	mov    r8,rdx
   140001ba5:	lea    rcx,[rsp+0x128]
   140001bad:	lea    rdx,[rsp+0x1c0]
   140001bb5:	xor    esi,esi
   140001bb7:	mov    r9d,0x50602
   140001bbd:	mov    DWORD PTR [rsp+0x1d0],esi
   140001bc4:	call   QWORD PTR [rip+0x135be]        # 0x140015188
   140001bca:	xor    eax,eax
   140001bcc:	or     r12,0xffffffffffffffff
   140001bd0:	lea    rdi,[rip+0x138e1]        # 0x1400154b8
   140001bd7:	mov    rcx,r12
   140001bda:	repnz scas al,BYTE PTR es:[rdi]
   140001bdc:	not    rcx
   140001bdf:	lea    rdx,[rcx-0x1]
   140001be3:	lea    rcx,[rip+0x138ce]        # 0x1400154b8
   140001bea:	call   QWORD PTR [rip+0x13590]        # 0x140015180
   140001bf0:	lea    rcx,[rsp+0xa8]
   140001bf8:	mov    QWORD PTR [rsp+0xa8],rax
   140001c00:	call   QWORD PTR [rip+0x13572]        # 0x140015178
   140001c06:	lea    rcx,[rsp+0xa8]
   140001c0e:	call   QWORD PTR [rip+0x137a4]        # 0x1400153b8
   140001c14:	xor    eax,eax
   140001c16:	lea    rdi,[rip+0x13897]        # 0x1400154b4
   140001c1d:	mov    rcx,r12
   140001c20:	repnz scas al,BYTE PTR es:[rdi]
   140001c22:	not    rcx
   140001c25:	lea    rdx,[rcx-0x1]
   140001c29:	lea    rcx,[rip+0x13884]        # 0x1400154b4
   140001c30:	call   QWORD PTR [rip+0x1354a]        # 0x140015180
   140001c36:	lea    rcx,[rsp+0xa0]
   140001c3e:	mov    QWORD PTR [rsp+0xa0],rax
   140001c46:	call   QWORD PTR [rip+0x13524]        # 0x140015170
   140001c4c:	lea    rcx,[rsp+0xa0]
   140001c54:	call   QWORD PTR [rip+0x1375e]        # 0x1400153b8
   140001c5a:	lea    rcx,[rsp+0x1d8]
   140001c62:	call   QWORD PTR [rip+0x13500]        # 0x140015168
   140001c68:	lea    rdx,[rip+0x13831]        # 0x1400154a0
   140001c6f:	xor    eax,eax
   140001c71:	mov    rdi,rdx
   140001c74:	mov    QWORD PTR [rsp+0x78],rdx
   140001c79:	mov    rcx,r12
   140001c7c:	repnz scas al,BYTE PTR es:[rdi]
   140001c7e:	lea    rdx,[rsp+0x170]
   140001c86:	not    rcx
   140001c89:	dec    rcx
   140001c8c:	mov    DWORD PTR [rsp+0x70],ecx
   140001c90:	lea    rcx,[rsp+0xb0]
   140001c98:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140001c9d:	movdqa XMMWORD PTR [rsp+0x170],xmm0
   140001ca6:	call   QWORD PTR [rip+0x134b4]        # 0x140015160
   140001cac:	lea    rdx,[rsp+0xb0]
   140001cb4:	lea    rcx,[rsp+0x1d8]
   140001cbc:	call   QWORD PTR [rip+0x13496]        # 0x140015158
   140001cc2:	lea    rcx,[rsp+0xb0]
   140001cca:	call   QWORD PTR [rip+0x136e8]        # 0x1400153b8
   140001cd0:	lea    rdx,[rsp+0x118]
   140001cd8:	lea    rcx,[rsp+0x1d8]
   140001ce0:	call   QWORD PTR [rip+0x1346a]        # 0x140015150
   140001ce6:	lea    rcx,[rsp+0x118]
   140001cee:	call   QWORD PTR [rip+0x13454]        # 0x140015148
   140001cf4:	lea    rdx,[rsp+0xd8]
   140001cfc:	lea    rcx,[rsp+0x1d8]
   140001d04:	call   QWORD PTR [rip+0x13436]        # 0x140015140
   140001d0a:	lea    rcx,[rsp+0xd8]
   140001d12:	call   QWORD PTR [rip+0x13430]        # 0x140015148
   140001d18:	lea    rdx,[rip+0x13761]        # 0x140015480
   140001d1f:	xor    eax,eax
   140001d21:	mov    rdi,rdx
   140001d24:	mov    QWORD PTR [rsp+0x78],rdx
   140001d29:	mov    rcx,r12
   140001d2c:	repnz scas al,BYTE PTR es:[rdi]
   140001d2e:	lea    rdx,[rsp+0x160]
   140001d36:	not    rcx
   140001d39:	dec    rcx
   140001d3c:	mov    DWORD PTR [rsp+0x70],ecx
   140001d40:	lea    rcx,[rsp+0x80]
   140001d48:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140001d4d:	movdqa XMMWORD PTR [rsp+0x160],xmm0
   140001d56:	call   QWORD PTR [rip+0x13404]        # 0x140015160
   140001d5c:	xor    eax,eax
   140001d5e:	mov    rcx,r12
   140001d61:	lea    rdi,[rip+0x13710]        # 0x140015478
   140001d68:	repnz scas al,BYTE PTR es:[rdi]
   140001d6a:	not    rcx
   140001d6d:	lea    rdx,[rcx-0x1]
   140001d71:	lea    rcx,[rip+0x13700]        # 0x140015478
   140001d78:	call   QWORD PTR [rip+0x13402]        # 0x140015180
   140001d7e:	lea    rdi,[rip+0x136ef]        # 0x140015474
   140001d85:	mov    rcx,r12
   140001d88:	mov    QWORD PTR [rsp+0x58],rax
   140001d8d:	xor    eax,eax
   140001d8f:	repnz scas al,BYTE PTR es:[rdi]
   140001d91:	not    rcx
   140001d94:	lea    rdx,[rcx-0x1]
   140001d98:	lea    rcx,[rip+0x136d5]        # 0x140015474
   140001d9f:	call   QWORD PTR [rip+0x133db]        # 0x140015180
   140001da5:	mov    QWORD PTR [rsp+0x60],rax
   140001daa:	mov    rax,QWORD PTR [rip+0x135ff]        # 0x1400153b0
   140001db1:	mov    QWORD PTR [rsp+0x30],rax
   140001db6:	mov    ecx,DWORD PTR [rax]
   140001db8:	cmp    ecx,0x1
   140001dbb:	je     0x140001de9
   140001dbd:	test   ecx,ecx
   140001dbf:	je     0x140001de9
   140001dc1:	lea    r8d,[rsi+0x1]
   140001dc5:	lea    rcx,[rsp+0x30]
   140001dca:	mov    edx,0x7fffffff
   140001dcf:	call   0x140001110
   140001dd4:	test   rax,rax
   140001dd7:	je     0x140001e12
   140001dd9:	lea    rdx,[rsp+0x60]
   140001dde:	mov    rcx,rax
   140001de1:	call   QWORD PTR [rip+0x135e1]        # 0x1400153c8
   140001de7:	jmp    0x140001e12
   140001de9:	lea    rdx,[rsp+0x60]
   140001dee:	lea    rcx,[rsp+0xe8]
   140001df6:	call   QWORD PTR [rip+0x135cc]        # 0x1400153c8
   140001dfc:	lea    rcx,[rsp+0x30]
   140001e01:	call   QWORD PTR [rip+0x13589]        # 0x140015390
   140001e07:	mov    rcx,QWORD PTR [rsp+0xe8]
   140001e0f:	mov    QWORD PTR [rax],rcx
   140001e12:	mov    rax,QWORD PTR [rsp+0x30]
   140001e17:	mov    ecx,DWORD PTR [rax]
   140001e19:	cmp    ecx,0x1
   140001e1c:	je     0x140001e4c
   140001e1e:	test   ecx,ecx
   140001e20:	je     0x140001e4c
   140001e22:	lea    rcx,[rsp+0x30]
   140001e27:	mov    edx,0x7fffffff
   140001e2c:	mov    r8d,0x1
   140001e32:	call   0x140001110
   140001e37:	test   rax,rax
   140001e3a:	je     0x140001e75
   140001e3c:	lea    rdx,[rsp+0x58]
   140001e41:	mov    rcx,rax
   140001e44:	call   QWORD PTR [rip+0x1357e]        # 0x1400153c8
   140001e4a:	jmp    0x140001e75
   140001e4c:	lea    rdx,[rsp+0x58]
   140001e51:	lea    rcx,[rsp+0xd0]
   140001e59:	call   QWORD PTR [rip+0x13569]        # 0x1400153c8
   140001e5f:	lea    rcx,[rsp+0x30]
   140001e64:	call   QWORD PTR [rip+0x13526]        # 0x140015390
   140001e6a:	mov    rcx,QWORD PTR [rsp+0xd0]
   140001e72:	mov    QWORD PTR [rax],rcx
   140001e75:	lea    rcx,[rsp+0x100]
   140001e7d:	mov    QWORD PTR [rsp+0x1c8],rbp
   140001e85:	call   QWORD PTR [rip+0x13365]        # 0x1400151f0
   140001e8b:	lea    rcx,[rsp+0xe0]
   140001e93:	mov    rdi,rax
   140001e96:	call   QWORD PTR [rip+0x13354]        # 0x1400151f0
   140001e9c:	lea    r8,[rsp+0x80]
   140001ea4:	lea    rdx,[rsp+0x30]
   140001ea9:	lea    rcx,[rsp+0x68]
   140001eae:	mov    r9,rax
   140001eb1:	mov    QWORD PTR [rsp+0x20],rdi
   140001eb6:	call   QWORD PTR [rip+0x133d4]        # 0x140015290
   140001ebc:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ec1:	mov    eax,DWORD PTR [rbx]
   140001ec3:	test   eax,eax
   140001ec5:	je     0x140001ee2
   140001ec7:	cmp    eax,0xffffffff
   140001eca:	je     0x140001f1b
   140001ecc:	mov    eax,r12d
   140001ecf:	lock xadd DWORD PTR [rbx],eax
   140001ed3:	add    eax,0xffffffff
   140001ed6:	setne  al
   140001ed9:	test   al,al
   140001edb:	jne    0x140001f1b
   140001edd:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ee2:	movsxd rax,DWORD PTR [rbx+0xc]
   140001ee6:	lea    rdi,[rbx+rax*8+0x10]
   140001eeb:	movsxd rax,DWORD PTR [rbx+0x8]
   140001eef:	lea    rbp,[rbx+rax*8+0x10]
   140001ef4:	cmp    rbp,rdi
   140001ef7:	je     0x140001f12
   140001ef9:	nop    DWORD PTR [rax+0x0]
   140001f00:	sub    rdi,0x8
   140001f04:	mov    rcx,rdi
   140001f07:	call   QWORD PTR [rip+0x134ab]        # 0x1400153b8
   140001f0d:	cmp    rdi,rbp
   140001f10:	jne    0x140001f00
   140001f12:	mov    rcx,rbx
   140001f15:	call   QWORD PTR [rip+0x1348d]        # 0x1400153a8
   140001f1b:	lea    rcx,[rsp+0xe0]
   140001f23:	call   QWORD PTR [rip+0x1348f]        # 0x1400153b8
   140001f29:	lea    rcx,[rsp+0x100]
   140001f31:	call   QWORD PTR [rip+0x13481]        # 0x1400153b8
   140001f37:	lea    rcx,[rsp+0x60]
   140001f3c:	call   QWORD PTR [rip+0x13476]        # 0x1400153b8
   140001f42:	lea    rcx,[rsp+0x58]
   140001f47:	call   QWORD PTR [rip+0x1346b]        # 0x1400153b8
   140001f4d:	lea    rcx,[rsp+0x80]
   140001f55:	call   QWORD PTR [rip+0x1345d]        # 0x1400153b8
   140001f5b:	lea    rdx,[rsp+0x68]
   140001f60:	lea    rcx,[rsp+0x1d8]
   140001f68:	call   QWORD PTR [rip+0x1332a]        # 0x140015298
   140001f6e:	lea    rdx,[rip+0x134db]        # 0x140015450
   140001f75:	xor    eax,eax
   140001f77:	mov    rdi,rdx
   140001f7a:	mov    QWORD PTR [rsp+0xc8],rdx
   140001f82:	mov    rcx,r12
   140001f85:	repnz scas al,BYTE PTR es:[rdi]
   140001f87:	lea    rdx,[rsp+0x140]
   140001f8f:	not    rcx
   140001f92:	dec    rcx
   140001f95:	mov    DWORD PTR [rsp+0xc0],ecx
   140001f9c:	lea    rcx,[rsp+0xb8]
   140001fa4:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   140001fac:	movdqa XMMWORD PTR [rsp+0x140],xmm0
   140001fb5:	call   QWORD PTR [rip+0x131a5]        # 0x140015160
   140001fbb:	lea    rdx,[rip+0x13482]        # 0x140015444
   140001fc2:	mov    rdi,rdx
   140001fc5:	mov    QWORD PTR [rsp+0xc8],rdx
   140001fcd:	xor    eax,eax
   140001fcf:	mov    rcx,r12
   140001fd2:	lea    rdx,[rsp+0x150]
   140001fda:	repnz scas al,BYTE PTR es:[rdi]
   140001fdc:	not    rcx
   140001fdf:	dec    rcx
   140001fe2:	mov    DWORD PTR [rsp+0xc0],ecx
   140001fe9:	lea    rcx,[rsp+0x98]
   140001ff1:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   140001ff9:	movdqa XMMWORD PTR [rsp+0x150],xmm0
   140002002:	call   QWORD PTR [rip+0x13158]        # 0x140015160
   140002008:	lea    rcx,[rsp+0xf0]
   140002010:	call   QWORD PTR [rip+0x131da]        # 0x1400151f0
   140002016:	lea    r8,[rsp+0xb8]
   14000201e:	lea    rdx,[rsp+0x98]
   140002026:	lea    rcx,[rsp+0x1d8]
   14000202e:	mov    r9,rax
   140002031:	call   QWORD PTR [rip+0x13269]        # 0x1400152a0
   140002037:	lea    rcx,[rsp+0xf0]
   14000203f:	call   QWORD PTR [rip+0x13373]        # 0x1400153b8
   140002045:	lea    rcx,[rsp+0x98]
   14000204d:	call   QWORD PTR [rip+0x13365]        # 0x1400153b8
   140002053:	lea    rcx,[rsp+0xb8]
   14000205b:	call   QWORD PTR [rip+0x13357]        # 0x1400153b8
   140002061:	lea    rdx,[rsp+0x128]
   140002069:	lea    rcx,[rsp+0x1d8]
   140002071:	call   QWORD PTR [rip+0x13231]        # 0x1400152a8
   140002077:	lea    rdx,[rsp+0x88]
   14000207f:	lea    rcx,[rsp+0x1d8]
   140002087:	call   QWORD PTR [rip+0x13223]        # 0x1400152b0
   14000208d:	mov    rbx,QWORD PTR [rsp+0x88]
   140002095:	mov    rcx,QWORD PTR [rax]
   140002098:	mov    eax,DWORD PTR [rcx+0x8]
   14000209b:	cmp    DWORD PTR [rcx+0xc],eax
   14000209e:	mov    eax,DWORD PTR [rbx]
   1400020a0:	sete   r13b
   1400020a4:	test   eax,eax
   1400020a6:	je     0x1400020c6
   1400020a8:	cmp    eax,0xffffffff
   1400020ab:	je     0x1400020fb
   1400020ad:	mov    eax,r12d
   1400020b0:	lock xadd DWORD PTR [rbx],eax
   1400020b4:	add    eax,0xffffffff
   1400020b7:	setne  al
   1400020ba:	test   al,al
   1400020bc:	jne    0x1400020fb
   1400020be:	mov    rbx,QWORD PTR [rsp+0x88]
   1400020c6:	movsxd rax,DWORD PTR [rbx+0xc]
   1400020ca:	lea    rdi,[rbx+rax*8+0x10]
   1400020cf:	movsxd rax,DWORD PTR [rbx+0x8]
   1400020d3:	lea    rbp,[rbx+rax*8+0x10]
   1400020d8:	cmp    rbp,rdi
   1400020db:	je     0x1400020f2
   1400020dd:	nop    DWORD PTR [rax]
   1400020e0:	sub    rdi,0x8
   1400020e4:	mov    rcx,rdi
   1400020e7:	call   QWORD PTR [rip+0x132cb]        # 0x1400153b8
   1400020ed:	cmp    rdi,rbp
   1400020f0:	jne    0x1400020e0
   1400020f2:	mov    rcx,rbx
   1400020f5:	call   QWORD PTR [rip+0x132ad]        # 0x1400153a8
   1400020fb:	test   r13b,r13b
   1400020fe:	je     0x140002112
   140002100:	lea    rcx,[rsp+0x1d8]
   140002108:	mov    edx,r12d
   14000210b:	call   QWORD PTR [rip+0x131a7]        # 0x1400152b8
   140002111:	int3   
   140002112:	lea    rdx,[rsp+0x68]
   140002117:	lea    rcx,[rsp+0x1d8]
   14000211f:	mov    QWORD PTR [rsp+0x188],r14
   140002127:	mov    QWORD PTR [rsp+0x180],r15
   14000212f:	call   QWORD PTR [rip+0x1318b]        # 0x1400152c0
   140002135:	lea    rdx,[rsp+0x90]
   14000213d:	lea    rcx,[rsp+0x1d8]
   140002145:	mov    r14b,0x1
   140002148:	mov    BYTE PTR [rsp+0x1d0],al
   14000214f:	call   QWORD PTR [rip+0x1315b]        # 0x1400152b0
   140002155:	mov    rdi,rax
   140002158:	mov    rdx,QWORD PTR [rax]
   14000215b:	mov    QWORD PTR [rsp+0x38],rdx
   140002160:	mov    ecx,DWORD PTR [rdx]
   140002162:	test   ecx,ecx
   140002164:	je     0x140002176
   140002166:	cmp    ecx,0xffffffff
   140002169:	je     0x1400021d3
   14000216b:	lock add DWORD PTR [rdx],0x1
   14000216f:	mov    rdx,QWORD PTR [rsp+0x38]
   140002174:	jmp    0x1400021d3
   140002176:	mov    edx,DWORD PTR [rdx+0x4]
   140002179:	lea    rcx,[rsp+0x38]
   14000217e:	call   QWORD PTR [rip+0x1321c]        # 0x1400153a0
   140002184:	mov    rdx,QWORD PTR [rsp+0x38]
   140002189:	mov    rcx,QWORD PTR [rdi]
   14000218c:	movsxd rax,DWORD PTR [rdx+0xc]
   140002190:	lea    rbp,[rdx+rax*8+0x10]
   140002195:	movsxd rax,DWORD PTR [rcx+0x8]
   140002199:	lea    rbx,[rcx+rax*8+0x10]
   14000219e:	movsxd rax,DWORD PTR [rdx+0x8]
   1400021a2:	lea    rdi,[rdx+rax*8+0x10]
   1400021a7:	cmp    rdi,rbp
   1400021aa:	je     0x1400021d3
   1400021ac:	nop    DWORD PTR [rax+0x0]
   1400021b0:	test   rdi,rdi
   1400021b3:	je     0x1400021c1
   1400021b5:	mov    rdx,rbx
   1400021b8:	mov    rcx,rdi
   1400021bb:	call   QWORD PTR [rip+0x13207]        # 0x1400153c8
   1400021c1:	add    rdi,0x8
   1400021c5:	add    rbx,0x8
   1400021c9:	cmp    rdi,rbp
   1400021cc:	jne    0x1400021b0
   1400021ce:	mov    rdx,QWORD PTR [rsp+0x38]
   1400021d3:	mov    rbx,QWORD PTR [rsp+0x90]
   1400021db:	mov    DWORD PTR [rsp+0x40],esi
   1400021df:	movsxd rax,DWORD PTR [rdx+0x8]
   1400021e3:	lea    rcx,[rdx+rax*8+0x10]
   1400021e8:	mov    QWORD PTR [rsp+0x48],rcx
   1400021ed:	movsxd rax,DWORD PTR [rdx+0xc]
   1400021f1:	lea    rcx,[rdx+rax*8+0x10]
   1400021f6:	mov    QWORD PTR [rsp+0x50],rcx
   1400021fb:	mov    eax,DWORD PTR [rbx]
   1400021fd:	test   eax,eax
   1400021ff:	je     0x14000221f
   140002201:	cmp    eax,0xffffffff
   140002204:	je     0x140002260
   140002206:	mov    eax,r12d
   140002209:	lock xadd DWORD PTR [rbx],eax
   14000220d:	add    eax,0xffffffff
   140002210:	setne  al
   140002213:	test   al,al
   140002215:	jne    0x140002260
   140002217:	mov    rbx,QWORD PTR [rsp+0x90]
   14000221f:	movsxd rax,DWORD PTR [rbx+0xc]
   140002223:	lea    rdi,[rbx+rax*8+0x10]
   140002228:	movsxd rax,DWORD PTR [rbx+0x8]
   14000222c:	lea    rbp,[rbx+rax*8+0x10]
   140002231:	cmp    rbp,rdi
   140002234:	je     0x140002252
   140002236:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002240:	sub    rdi,0x8
   140002244:	mov    rcx,rdi
   140002247:	call   QWORD PTR [rip+0x1316b]        # 0x1400153b8
   14000224d:	cmp    rdi,rbp
   140002250:	jne    0x140002240
   140002252:	mov    rcx,rbx
   140002255:	call   QWORD PTR [rip+0x1314d]        # 0x1400153a8
   14000225b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002260:	mov    eax,DWORD PTR [rsp+0x40]
   140002264:	inc    DWORD PTR [rsp+0x40]
   140002268:	test   eax,eax
   14000226a:	jne    0x14000227d
   14000226c:	mov    rax,QWORD PTR [rsp+0x50]
   140002271:	cmp    QWORD PTR [rsp+0x48],rax
   140002276:	je     0x14000227d
   140002278:	mov    r13b,0x1
   14000227b:	jmp    0x140002280
   14000227d:	xor    r13b,r13b
   140002280:	test   sil,0x2
   140002284:	je     0x1400022eb
   140002286:	mov    rbx,QWORD PTR [rsp+0x110]
   14000228e:	and    esi,0xfffffffd
   140002291:	mov    eax,DWORD PTR [rbx]
   140002293:	test   eax,eax
   140002295:	je     0x1400022b5
   140002297:	cmp    eax,0xffffffff
   14000229a:	je     0x1400022eb
   14000229c:	mov    eax,r12d
   14000229f:	lock xadd DWORD PTR [rbx],eax
   1400022a3:	add    eax,0xffffffff
   1400022a6:	setne  al
   1400022a9:	test   al,al
   1400022ab:	jne    0x1400022eb
   1400022ad:	mov    rbx,QWORD PTR [rsp+0x110]
   1400022b5:	movsxd rax,DWORD PTR [rbx+0xc]
   1400022b9:	lea    rdi,[rbx+rax*8+0x10]
   1400022be:	movsxd rax,DWORD PTR [rbx+0x8]
   1400022c2:	lea    rbp,[rbx+rax*8+0x10]
   1400022c7:	cmp    rbp,rdi
   1400022ca:	je     0x1400022e2
   1400022cc:	nop    DWORD PTR [rax+0x0]
   1400022d0:	sub    rdi,0x8
   1400022d4:	mov    rcx,rdi
   1400022d7:	call   QWORD PTR [rip+0x130db]        # 0x1400153b8
   1400022dd:	cmp    rdi,rbp
   1400022e0:	jne    0x1400022d0
   1400022e2:	mov    rcx,rbx
   1400022e5:	call   QWORD PTR [rip+0x130bd]        # 0x1400153a8
   1400022eb:	test   r13b,r13b
   1400022ee:	je     0x140002500
   1400022f4:	mov    r15,QWORD PTR [rsp+0x48]
   1400022f9:	test   sil,0x4
   1400022fd:	je     0x140002370
   1400022ff:	mov    rbx,QWORD PTR [rsp+0x120]
   140002307:	and    esi,0xfffffffb
   14000230a:	mov    eax,DWORD PTR [rbx]
   14000230c:	test   eax,eax
   14000230e:	je     0x14000232e
   140002310:	cmp    eax,0xffffffff
   140002313:	je     0x140002370
   140002315:	mov    eax,r12d
   140002318:	lock xadd DWORD PTR [rbx],eax
   14000231c:	add    eax,0xffffffff
   14000231f:	setne  al
   140002322:	test   al,al
   140002324:	jne    0x140002370
   140002326:	mov    rbx,QWORD PTR [rsp+0x120]
   14000232e:	movsxd rax,DWORD PTR [rbx+0xc]
   140002332:	lea    rdi,[rbx+rax*8+0x10]
   140002337:	movsxd rax,DWORD PTR [rbx+0x8]
   14000233b:	lea    rbp,[rbx+rax*8+0x10]
   140002340:	cmp    rbp,rdi
   140002343:	je     0x140002362
   140002345:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002350:	sub    rdi,0x8
   140002354:	mov    rcx,rdi
   140002357:	call   QWORD PTR [rip+0x1305b]        # 0x1400153b8
   14000235d:	cmp    rdi,rbp
   140002360:	jne    0x140002350
   140002362:	mov    rcx,rbx
   140002365:	call   QWORD PTR [rip+0x1303d]        # 0x1400153a8
   14000236b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002370:	mov    r13d,DWORD PTR [rsp+0x40]
   140002375:	test   sil,0x10
   140002379:	je     0x1400023dc
   14000237b:	mov    rbx,QWORD PTR [rsp+0x108]
   140002383:	and    esi,0xffffffef
   140002386:	mov    eax,DWORD PTR [rbx]
   140002388:	test   eax,eax
   14000238a:	je     0x1400023a2
   14000238c:	cmp    eax,0xffffffff
   14000238f:	je     0x1400023dc
   140002391:	mov    eax,r12d
   140002394:	lock xadd DWORD PTR [rbx],eax
   140002398:	add    eax,0xffffffff
   14000239b:	setne  al
   14000239e:	test   al,al
   1400023a0:	jne    0x1400023dc
   1400023a2:	mov    rbx,QWORD PTR [rsp+0x108]
   1400023aa:	movsxd rax,DWORD PTR [rbx+0xc]
   1400023ae:	lea    rdi,[rbx+rax*8+0x10]
   1400023b3:	movsxd rax,DWORD PTR [rbx+0x8]
   1400023b7:	lea    rbp,[rbx+rax*8+0x10]
   1400023bc:	cmp    rbp,rdi
   1400023bf:	je     0x1400023d3
   1400023c1:	sub    rdi,0x8
   1400023c5:	mov    rcx,rdi
   1400023c8:	call   QWORD PTR [rip+0x12fea]        # 0x1400153b8
   1400023ce:	cmp    rdi,rbp
   1400023d1:	jne    0x1400023c1
   1400023d3:	mov    rcx,rbx
   1400023d6:	call   QWORD PTR [rip+0x12fcc]        # 0x1400153a8
   1400023dc:	test   r13d,r13d
   1400023df:	je     0x140002480
   1400023e5:	movzx  edx,BYTE PTR [rsp+0x1d0]
   1400023ed:	mov    rcx,r15
   1400023f0:	call   0x140001250
   1400023f5:	dec    DWORD PTR [rsp+0x40]
   1400023f9:	and    r14b,al
   1400023fc:	test   sil,0x8
   140002400:	je     0x140002370
   140002406:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000240e:	and    esi,0xfffffff7
   140002411:	mov    eax,DWORD PTR [rbx]
   140002413:	test   eax,eax
   140002415:	je     0x140002435
   140002417:	cmp    eax,0xffffffff
   14000241a:	je     0x140002370
   140002420:	mov    eax,r12d
   140002423:	lock xadd DWORD PTR [rbx],eax
   140002427:	add    eax,0xffffffff
   14000242a:	setne  al
   14000242d:	test   al,al
   14000242f:	jne    0x140002370
   140002435:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000243d:	movsxd rax,DWORD PTR [rbx+0xc]
   140002441:	lea    rdi,[rbx+rax*8+0x10]
   140002446:	movsxd rax,DWORD PTR [rbx+0x8]
   14000244a:	lea    rbp,[rbx+rax*8+0x10]
   14000244f:	cmp    rbp,rdi
   140002452:	je     0x140002472
   140002454:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002460:	sub    rdi,0x8
   140002464:	mov    rcx,rdi
   140002467:	call   QWORD PTR [rip+0x12f4b]        # 0x1400153b8
   14000246d:	cmp    rdi,rbp
   140002470:	jne    0x140002460
   140002472:	mov    rcx,rbx
   140002475:	call   QWORD PTR [rip+0x12f2d]        # 0x1400153a8
   14000247b:	jmp    0x140002370
   140002480:	add    QWORD PTR [rsp+0x48],0x8
   140002486:	test   sil,0x1
   14000248a:	je     0x140002260
   140002490:	mov    rbx,QWORD PTR [rsp+0x70]
   140002495:	and    esi,0xfffffffe
   140002498:	mov    eax,DWORD PTR [rbx]
   14000249a:	test   eax,eax
   14000249c:	je     0x1400024c1
   14000249e:	cmp    eax,0xffffffff
   1400024a1:	je     0x140002260
   1400024a7:	mov    eax,r12d
   1400024aa:	lock xadd DWORD PTR [rbx],eax
   1400024ae:	add    eax,0xffffffff
   1400024b1:	setne  al
   1400024b4:	test   al,al
   1400024b6:	jne    0x140002260
   1400024bc:	mov    rbx,QWORD PTR [rsp+0x70]
   1400024c1:	movsxd rax,DWORD PTR [rbx+0xc]
   1400024c5:	lea    rdi,[rbx+rax*8+0x10]
   1400024ca:	movsxd rax,DWORD PTR [rbx+0x8]
   1400024ce:	lea    rbp,[rbx+rax*8+0x10]
   1400024d3:	cmp    rbp,rdi
   1400024d6:	je     0x1400024f2
   1400024d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400024e0:	sub    rdi,0x8
   1400024e4:	mov    rcx,rdi
   1400024e7:	call   QWORD PTR [rip+0x12ecb]        # 0x1400153b8
   1400024ed:	cmp    rdi,rbp
   1400024f0:	jne    0x1400024e0
   1400024f2:	mov    rcx,rbx
   1400024f5:	call   QWORD PTR [rip+0x12ead]        # 0x1400153a8
   1400024fb:	jmp    0x140002260
   140002500:	mov    rbx,QWORD PTR [rsp+0x38]
   140002505:	mov    r15,QWORD PTR [rsp+0x180]
   14000250d:	mov    eax,DWORD PTR [rbx]
   14000250f:	test   eax,eax
   140002511:	je     0x14000252d
   140002513:	cmp    eax,0xffffffff
   140002516:	je     0x14000256b
   140002518:	lock xadd DWORD PTR [rbx],r12d
   14000251d:	add    r12d,0xffffffff
   140002521:	setne  al
   140002524:	test   al,al
   140002526:	jne    0x14000256b
   140002528:	mov    rbx,QWORD PTR [rsp+0x38]
   14000252d:	movsxd rax,DWORD PTR [rbx+0xc]
   140002531:	lea    rdi,[rbx+rax*8+0x10]
   140002536:	movsxd rax,DWORD PTR [rbx+0x8]
   14000253a:	lea    rsi,[rbx+rax*8+0x10]
   14000253f:	cmp    rsi,rdi
   140002542:	je     0x140002562
   140002544:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002550:	sub    rdi,0x8
   140002554:	mov    rcx,rdi
   140002557:	call   QWORD PTR [rip+0x12e5b]        # 0x1400153b8
   14000255d:	cmp    rdi,rsi
   140002560:	jne    0x140002550
   140002562:	mov    rcx,rbx
   140002565:	call   QWORD PTR [rip+0x12e3d]        # 0x1400153a8
   14000256b:	lea    rcx,[rsp+0x68]
   140002570:	call   QWORD PTR [rip+0x12bd2]        # 0x140015148
   140002576:	lea    rcx,[rsp+0x1d8]
   14000257e:	call   QWORD PTR [rip+0x12d44]        # 0x1400152c8
   140002584:	lea    rcx,[rsp+0x128]
   14000258c:	call   QWORD PTR [rip+0x12d3e]        # 0x1400152d0
   140002592:	mov    rbp,QWORD PTR [rsp+0x1c8]
   14000259a:	neg    r14b
   14000259d:	mov    r14,QWORD PTR [rsp+0x188]
   1400025a5:	sbb    eax,eax
   1400025a7:	neg    eax
   1400025a9:	dec    eax
   1400025ab:	add    rsp,0x190
   1400025b2:	pop    r13
   1400025b4:	pop    r12
   1400025b6:	pop    rdi
   1400025b7:	pop    rsi
   1400025b8:	pop    rbx
   1400025b9:	ret    
   1400025ba:	int3   
   1400025bb:	int3   
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400025ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400025cf:	push   rdi
   1400025d0:	sub    rsp,0x20
   1400025d4:	mov    eax,DWORD PTR [rcx+0x10]
   1400025d7:	inc    DWORD PTR [rcx+0x14]
   1400025da:	mov    rbp,rdx
   1400025dd:	mov    rbx,rcx
   1400025e0:	cmp    DWORD PTR [rcx+0x14],eax
   1400025e3:	jne    0x140002634
   1400025e5:	test   eax,eax
   1400025e7:	jne    0x1400025f2
   1400025e9:	mov    DWORD PTR [rcx+0x10],0x8
   1400025f0:	jmp    0x1400025f7
   1400025f2:	add    eax,eax
   1400025f4:	mov    DWORD PTR [rcx+0x10],eax
   1400025f7:	movsxd rdx,DWORD PTR [rcx+0x10]
   1400025fb:	mov    rcx,QWORD PTR [rcx+0x8]
   1400025ff:	shl    rdx,0x3
   140002603:	call   QWORD PTR [rip+0x12b07]        # 0x140015110
   140002609:	movsxd rdx,DWORD PTR [rbx+0x14]
   14000260d:	cmp    edx,DWORD PTR [rbx+0x10]
   140002610:	mov    QWORD PTR [rbx+0x8],rax
   140002614:	mov    rcx,rdx
   140002617:	jge    0x140002634
   140002619:	shl    rcx,0x3
   14000261d:	xor    r8d,r8d
   140002620:	mov    rax,QWORD PTR [rbx+0x8]
   140002624:	inc    edx
   140002626:	add    rcx,0x8
   14000262a:	mov    QWORD PTR [rcx+rax*1-0x8],r8
   14000262f:	cmp    edx,DWORD PTR [rbx+0x10]
   140002632:	jl     0x140002620
   140002634:	movsxd rdi,DWORD PTR [rbx+0x14]
   140002638:	mov    rsi,QWORD PTR [rbx+0x8]
   14000263c:	cmp    QWORD PTR [rsi+rdi*8],0x0
   140002641:	jne    0x140002652
   140002643:	mov    ecx,0x2000
   140002648:	call   QWORD PTR [rip+0x12aca]        # 0x140015118
   14000264e:	mov    QWORD PTR [rsi+rdi*8],rax
   140002652:	mov    rax,QWORD PTR [rsi+rdi*8]
   140002656:	mov    rsi,QWORD PTR [rsp+0x40]
   14000265b:	lea    rcx,[rax+0x2000]
   140002662:	mov    QWORD PTR [rbx+0x20],rcx
   140002666:	lea    rcx,[rax+rbp*1]
   14000266a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000266f:	mov    QWORD PTR [rbx+0x18],rcx
   140002673:	mov    rbx,QWORD PTR [rsp+0x30]
   140002678:	add    rsp,0x20
   14000267c:	pop    rdi
   14000267d:	ret    
   14000267e:	int3   
   14000267f:	int3   
   140002680:	lea    r9,[rip+0xffffffffffffd979]        # 0x140000000
   140002687:	movsxd r8,ecx
   14000268a:	movsx  eax,WORD PTR [r9+r8*2+0x187c0]
   140002693:	add    eax,edx
   140002695:	js     0x1400026b1
   140002697:	movsxd rcx,eax
   14000269a:	movsx  eax,WORD PTR [r9+rcx*2+0x1ae70]
   1400026a3:	cmp    eax,edx
   1400026a5:	jne    0x1400026b1
   1400026a7:	movsx  eax,WORD PTR [r9+rcx*2+0x19230]
   1400026b0:	ret    
   1400026b1:	movsx  eax,WORD PTR [r9+r8*2+0x181a0]
   1400026ba:	neg    eax
   1400026bc:	ret    
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	ret    0x0
   1400026c3:	int3   
   1400026c4:	int3   
   1400026c5:	int3   
   1400026c6:	int3   
   1400026c7:	int3   
   1400026c8:	int3   
   1400026c9:	int3   
   1400026ca:	int3   
   1400026cb:	int3   
   1400026cc:	int3   
   1400026cd:	int3   
   1400026ce:	int3   
   1400026cf:	int3   
   1400026d0:	rex push rbx
   1400026d2:	sub    rsp,0x20
   1400026d6:	lea    rax,[rip+0x12deb]        # 0x1400154c8
   1400026dd:	mov    rbx,rcx
   1400026e0:	mov    QWORD PTR [rcx],rax
   1400026e3:	test   dl,0x1
   1400026e6:	je     0x1400026ed
   1400026e8:	call   0x140014638
   1400026ed:	mov    rax,rbx
   1400026f0:	add    rsp,0x20
   1400026f4:	pop    rbx
   1400026f5:	ret    
   1400026f6:	int3   
   1400026f7:	int3   
   1400026f8:	int3   
   1400026f9:	int3   
   1400026fa:	int3   
   1400026fb:	int3   
   1400026fc:	int3   
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	mov    eax,DWORD PTR [rcx+0x10]
   140002703:	mov    DWORD PTR [rdx],eax
   140002705:	mov    eax,DWORD PTR [rcx+0x14]
   140002708:	mov    DWORD PTR [rdx+0x4],eax
   14000270b:	mov    eax,DWORD PTR [rcx+0x18]
   14000270e:	mov    DWORD PTR [rdx+0x8],eax
   140002711:	mov    eax,DWORD PTR [rcx+0x1c]
   140002714:	mov    DWORD PTR [rdx+0xc],eax
   140002717:	mov    rax,rdx
   14000271a:	ret    
   14000271b:	int3   
   14000271c:	int3   
   14000271d:	int3   
   14000271e:	int3   
   14000271f:	int3   
   140002720:	xor    r9d,r9d
   140002723:	lea    rax,[rip+0x1309e]        # 0x1400157c8
   14000272a:	mov    QWORD PTR [rcx],rax
   14000272d:	mov    DWORD PTR [rcx+0x8],r9d
   140002731:	mov    rax,QWORD PTR [rdx]
   140002734:	mov    QWORD PTR [rcx+0x10],rax
   140002738:	mov    eax,DWORD PTR [rdx+0x8]
   14000273b:	mov    DWORD PTR [rcx+0x18],eax
   14000273e:	mov    eax,DWORD PTR [rdx+0xc]
   140002741:	mov    DWORD PTR [rcx+0x1c],eax
   140002744:	mov    DWORD PTR [rcx+0x20],r8d
   140002748:	mov    DWORD PTR [rcx+0x24],r9d
   14000274c:	mov    DWORD PTR [rcx+0x28],r9d
   140002750:	mov    DWORD PTR [rcx+0x2c],r9d
   140002754:	mov    DWORD PTR [rcx+0x30],r9d
   140002758:	mov    DWORD PTR [rcx+0x8],0x37
   14000275f:	mov    rax,rcx
   140002762:	ret    
   140002763:	int3   
   140002764:	int3   
   140002765:	int3   
   140002766:	int3   
   140002767:	int3   
   140002768:	int3   
   140002769:	int3   
   14000276a:	int3   
   14000276b:	int3   
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	mov    eax,DWORD PTR [rcx+0x24]
   140002773:	mov    DWORD PTR [rdx],eax
   140002775:	mov    eax,DWORD PTR [rcx+0x28]
   140002778:	mov    DWORD PTR [rdx+0x4],eax
   14000277b:	mov    eax,DWORD PTR [rcx+0x2c]
   14000277e:	mov    DWORD PTR [rdx+0x8],eax
   140002781:	mov    eax,DWORD PTR [rcx+0x30]
   140002784:	mov    DWORD PTR [rdx+0xc],eax
   140002787:	mov    rax,rdx
   14000278a:	ret    
   14000278b:	int3   
   14000278c:	int3   
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	mov    QWORD PTR [rcx+0x18],rdx
   140002794:	lea    rax,[rip+0x1307d]        # 0x140015818
   14000279b:	mov    QWORD PTR [rcx],rax
   14000279e:	xor    eax,eax
   1400027a0:	mov    QWORD PTR [rcx+0x10],rax
   1400027a4:	mov    DWORD PTR [rcx+0x20],eax
   1400027a7:	mov    DWORD PTR [rcx+0x24],eax
   1400027aa:	mov    DWORD PTR [rcx+0x28],eax
   1400027ad:	mov    DWORD PTR [rcx+0x2c],eax
   1400027b0:	mov    DWORD PTR [rcx+0x30],eax
   1400027b3:	mov    DWORD PTR [rcx+0x34],eax
   1400027b6:	mov    DWORD PTR [rcx+0x38],eax
   1400027b9:	mov    DWORD PTR [rcx+0x3c],eax
   1400027bc:	mov    DWORD PTR [rcx+0x40],eax
   1400027bf:	mov    DWORD PTR [rcx+0x44],eax
   1400027c2:	mov    DWORD PTR [rcx+0x48],eax
   1400027c5:	mov    DWORD PTR [rcx+0x4c],eax
   1400027c8:	mov    DWORD PTR [rcx+0x8],0x2
   1400027cf:	mov    rax,rcx
   1400027d2:	ret    
   1400027d3:	int3   
   1400027d4:	int3   
   1400027d5:	int3   
   1400027d6:	int3   
   1400027d7:	int3   
   1400027d8:	int3   
   1400027d9:	int3   
   1400027da:	int3   
   1400027db:	int3   
   1400027dc:	int3   
   1400027dd:	int3   
   1400027de:	int3   
   1400027df:	int3   
   1400027e0:	mov    QWORD PTR [rcx+0x10],rdx
   1400027e4:	lea    rax,[rip+0x1302d]        # 0x140015818
   1400027eb:	mov    QWORD PTR [rcx],rax
   1400027ee:	xor    eax,eax
   1400027f0:	mov    QWORD PTR [rcx+0x18],rax
   1400027f4:	mov    DWORD PTR [rcx+0x20],eax
   1400027f7:	mov    DWORD PTR [rcx+0x24],eax
   1400027fa:	mov    DWORD PTR [rcx+0x28],eax
   1400027fd:	mov    DWORD PTR [rcx+0x2c],eax
   140002800:	mov    DWORD PTR [rcx+0x30],eax
   140002803:	mov    DWORD PTR [rcx+0x34],eax
   140002806:	mov    DWORD PTR [rcx+0x38],eax
   140002809:	mov    DWORD PTR [rcx+0x3c],eax
   14000280c:	mov    DWORD PTR [rcx+0x40],eax
   14000280f:	mov    DWORD PTR [rcx+0x44],eax
   140002812:	mov    DWORD PTR [rcx+0x48],eax
   140002815:	mov    DWORD PTR [rcx+0x4c],eax
   140002818:	mov    DWORD PTR [rcx+0x8],0x2
   14000281f:	mov    rax,rcx
   140002822:	ret    
   140002823:	int3   
   140002824:	int3   
   140002825:	int3   
   140002826:	int3   
   140002827:	int3   
   140002828:	int3   
   140002829:	int3   
   14000282a:	int3   
   14000282b:	int3   
   14000282c:	int3   
   14000282d:	int3   
   14000282e:	int3   
   14000282f:	int3   
   140002830:	mov    QWORD PTR [rcx+0x10],rdx
   140002834:	mov    QWORD PTR [rcx+0x18],r8
   140002838:	lea    rax,[rip+0x12fd9]        # 0x140015818
   14000283f:	mov    QWORD PTR [rcx],rax
   140002842:	xor    eax,eax
   140002844:	mov    DWORD PTR [rcx+0x20],eax
   140002847:	mov    DWORD PTR [rcx+0x24],eax
   14000284a:	mov    DWORD PTR [rcx+0x28],eax
   14000284d:	mov    DWORD PTR [rcx+0x2c],eax
   140002850:	mov    DWORD PTR [rcx+0x30],eax
   140002853:	mov    DWORD PTR [rcx+0x34],eax
   140002856:	mov    DWORD PTR [rcx+0x38],eax
   140002859:	mov    DWORD PTR [rcx+0x3c],eax
   14000285c:	mov    DWORD PTR [rcx+0x40],eax
   14000285f:	mov    DWORD PTR [rcx+0x44],eax
   140002862:	mov    DWORD PTR [rcx+0x48],eax
   140002865:	mov    DWORD PTR [rcx+0x4c],eax
   140002868:	mov    DWORD PTR [rcx+0x8],0x2
   14000286f:	mov    rax,rcx
   140002872:	ret    
   140002873:	int3   
   140002874:	int3   
   140002875:	int3   
   140002876:	int3   
   140002877:	int3   
   140002878:	int3   
   140002879:	int3   
   14000287a:	int3   
   14000287b:	int3   
   14000287c:	int3   
   14000287d:	int3   
   14000287e:	int3   
   14000287f:	int3   
   140002880:	rex push rbx
   140002882:	sub    rsp,0x30
   140002886:	cmp    QWORD PTR [rcx+0x10],0x0
   14000288b:	mov    rbx,rdx
   14000288e:	je     0x1400028a4
   140002890:	mov    rcx,QWORD PTR [rcx+0x10]
   140002894:	lea    rdx,[rsp+0x20]
   140002899:	mov    rax,QWORD PTR [rcx]
   14000289c:	call   QWORD PTR [rax+0x38]
   14000289f:	mov    rcx,rax
   1400028a2:	jmp    0x1400028a8
   1400028a4:	add    rcx,0x18
   1400028a8:	mov    eax,DWORD PTR [rcx]
   1400028aa:	mov    DWORD PTR [rbx],eax
   1400028ac:	mov    eax,DWORD PTR [rcx+0x4]
   1400028af:	mov    DWORD PTR [rbx+0x4],eax
   1400028b2:	mov    eax,DWORD PTR [rcx+0x8]
   1400028b5:	mov    DWORD PTR [rbx+0x8],eax
   1400028b8:	mov    eax,DWORD PTR [rcx+0xc]
   1400028bb:	mov    DWORD PTR [rbx+0xc],eax
   1400028be:	mov    rax,rbx
   1400028c1:	add    rsp,0x30
   1400028c5:	pop    rbx
   1400028c6:	ret    
   1400028c7:	int3   
   1400028c8:	int3   
   1400028c9:	int3   
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	rex push rbx
   1400028d2:	sub    rsp,0x20
   1400028d6:	cmp    QWORD PTR [rcx+0x10],0x0
   1400028db:	mov    rbx,rdx
   1400028de:	je     0x1400028f3
   1400028e0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400028e4:	mov    rax,QWORD PTR [rcx]
   1400028e7:	call   QWORD PTR [rax+0x30]
   1400028ea:	mov    rax,rbx
   1400028ed:	add    rsp,0x20
   1400028f1:	pop    rbx
   1400028f2:	ret    
   1400028f3:	mov    rcx,QWORD PTR [rcx+0x18]
   1400028f7:	mov    rax,QWORD PTR [rcx]
   1400028fa:	call   QWORD PTR [rax+0x30]
   1400028fd:	mov    rax,rbx
   140002900:	add    rsp,0x20
   140002904:	pop    rbx
   140002905:	ret    
   140002906:	int3   
   140002907:	int3   
   140002908:	int3   
   140002909:	int3   
   14000290a:	int3   
   14000290b:	int3   
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	mov    QWORD PTR [rcx+0x10],rdx
   140002914:	lea    rax,[rip+0x130dd]        # 0x1400159f8
   14000291b:	mov    QWORD PTR [rcx],rax
   14000291e:	xor    eax,eax
   140002920:	mov    DWORD PTR [rcx+0x18],eax
   140002923:	mov    DWORD PTR [rcx+0x1c],eax
   140002926:	mov    DWORD PTR [rcx+0x20],eax
   140002929:	mov    DWORD PTR [rcx+0x24],eax
   14000292c:	mov    DWORD PTR [rcx+0x28],eax
   14000292f:	mov    DWORD PTR [rcx+0x2c],eax
   140002932:	mov    DWORD PTR [rcx+0x30],eax
   140002935:	mov    DWORD PTR [rcx+0x34],eax
   140002938:	mov    DWORD PTR [rcx+0x38],eax
   14000293b:	mov    QWORD PTR [rcx+0x40],rax
   14000293f:	mov    DWORD PTR [rcx+0x48],eax
   140002942:	mov    DWORD PTR [rcx+0x4c],eax
   140002945:	mov    DWORD PTR [rcx+0x50],eax
   140002948:	mov    DWORD PTR [rcx+0x54],eax
   14000294b:	mov    DWORD PTR [rcx+0x58],eax
   14000294e:	mov    DWORD PTR [rcx+0x5c],eax
   140002951:	mov    DWORD PTR [rcx+0x60],eax
   140002954:	mov    DWORD PTR [rcx+0x64],eax
   140002957:	mov    QWORD PTR [rcx+0x68],r8
   14000295b:	mov    DWORD PTR [rcx+0x70],eax
   14000295e:	mov    DWORD PTR [rcx+0x74],eax
   140002961:	mov    DWORD PTR [rcx+0x78],eax
   140002964:	mov    DWORD PTR [rcx+0x7c],eax
   140002967:	mov    DWORD PTR [rcx+0x8],0x34
   14000296e:	mov    rax,rcx
   140002971:	ret    
   140002972:	int3   
   140002973:	int3   
   140002974:	int3   
   140002975:	int3   
   140002976:	int3   
   140002977:	int3   
   140002978:	int3   
   140002979:	int3   
   14000297a:	int3   
   14000297b:	int3   
   14000297c:	int3   
   14000297d:	int3   
   14000297e:	int3   
   14000297f:	int3   
   140002980:	mov    QWORD PTR [rcx+0x10],rdx
   140002984:	mov    DWORD PTR [rcx+0x18],0x1
   14000298b:	lea    rax,[rip+0x13066]        # 0x1400159f8
   140002992:	mov    QWORD PTR [rcx],rax
   140002995:	xor    eax,eax
   140002997:	mov    DWORD PTR [rcx+0x1c],eax
   14000299a:	mov    DWORD PTR [rcx+0x20],eax
   14000299d:	mov    DWORD PTR [rcx+0x24],eax
   1400029a0:	mov    DWORD PTR [rcx+0x28],eax
   1400029a3:	mov    DWORD PTR [rcx+0x2c],eax
   1400029a6:	mov    DWORD PTR [rcx+0x30],eax
   1400029a9:	mov    DWORD PTR [rcx+0x34],eax
   1400029ac:	mov    DWORD PTR [rcx+0x38],eax
   1400029af:	mov    QWORD PTR [rcx+0x40],r8
   1400029b3:	mov    DWORD PTR [rcx+0x48],eax
   1400029b6:	mov    DWORD PTR [rcx+0x4c],eax
   1400029b9:	mov    DWORD PTR [rcx+0x50],eax
   1400029bc:	mov    DWORD PTR [rcx+0x54],eax
   1400029bf:	mov    DWORD PTR [rcx+0x58],eax
   1400029c2:	mov    DWORD PTR [rcx+0x5c],eax
   1400029c5:	mov    DWORD PTR [rcx+0x60],eax
   1400029c8:	mov    DWORD PTR [rcx+0x64],eax
   1400029cb:	mov    QWORD PTR [rcx+0x68],r9
   1400029cf:	mov    DWORD PTR [rcx+0x70],eax
   1400029d2:	mov    DWORD PTR [rcx+0x74],eax
   1400029d5:	mov    DWORD PTR [rcx+0x78],eax
   1400029d8:	mov    DWORD PTR [rcx+0x7c],eax
   1400029db:	mov    DWORD PTR [rcx+0x8],0x34
   1400029e2:	mov    rax,rcx
   1400029e5:	ret    
   1400029e6:	int3   
   1400029e7:	int3   
   1400029e8:	int3   
   1400029e9:	int3   
   1400029ea:	int3   
   1400029eb:	int3   
   1400029ec:	int3   
   1400029ed:	int3   
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	mov    eax,DWORD PTR [rcx+0x1c]
   1400029f3:	mov    DWORD PTR [rdx],eax
   1400029f5:	mov    eax,DWORD PTR [rcx+0x20]
   1400029f8:	mov    DWORD PTR [rdx+0x4],eax
   1400029fb:	mov    eax,DWORD PTR [rcx+0x24]
   1400029fe:	mov    DWORD PTR [rdx+0x8],eax
   140002a01:	mov    eax,DWORD PTR [rcx+0x28]
   140002a04:	mov    DWORD PTR [rdx+0xc],eax
   140002a07:	mov    rax,rdx
   140002a0a:	ret    
   140002a0b:	int3   
   140002a0c:	int3   
   140002a0d:	int3   
   140002a0e:	int3   
   140002a0f:	int3   
   140002a10:	mov    eax,DWORD PTR [rcx+0x70]
   140002a13:	mov    DWORD PTR [rdx],eax
   140002a15:	mov    eax,DWORD PTR [rcx+0x74]
   140002a18:	mov    DWORD PTR [rdx+0x4],eax
   140002a1b:	mov    eax,DWORD PTR [rcx+0x78]
   140002a1e:	mov    DWORD PTR [rdx+0x8],eax
   140002a21:	mov    eax,DWORD PTR [rcx+0x7c]
   140002a24:	mov    DWORD PTR [rdx+0xc],eax
   140002a27:	mov    rax,rdx
   140002a2a:	ret    
   140002a2b:	int3   
   140002a2c:	int3   
   140002a2d:	int3   
   140002a2e:	int3   
   140002a2f:	int3   
   140002a30:	rex push rbx
   140002a32:	sub    rsp,0x20
   140002a36:	add    rcx,0x20
   140002a3a:	mov    rbx,rdx
   140002a3d:	call   QWORD PTR [rip+0x12755]        # 0x140015198
   140002a43:	mov    rax,rbx
   140002a46:	add    rsp,0x20
   140002a4a:	pop    rbx
   140002a4b:	ret    
   140002a4c:	int3   
   140002a4d:	int3   
   140002a4e:	int3   
   140002a4f:	int3   
   140002a50:	rex push rbx
   140002a52:	sub    rsp,0x20
   140002a56:	movsd  xmm1,QWORD PTR [rcx+0x20]
   140002a5b:	mov    r9d,0x10
   140002a61:	mov    r8b,0x67
   140002a64:	mov    rcx,rdx
   140002a67:	mov    rbx,rdx
   140002a6a:	call   QWORD PTR [rip+0x12730]        # 0x1400151a0
   140002a70:	mov    rax,rbx
   140002a73:	add    rsp,0x20
   140002a77:	pop    rbx
   140002a78:	ret    
   140002a79:	int3   
   140002a7a:	int3   
   140002a7b:	int3   
   140002a7c:	int3   
   140002a7d:	int3   
   140002a7e:	int3   
   140002a7f:	int3   
   140002a80:	mov    eax,DWORD PTR [rcx+0x30]
   140002a83:	mov    DWORD PTR [rdx],eax
   140002a85:	mov    eax,DWORD PTR [rcx+0x34]
   140002a88:	mov    DWORD PTR [rdx+0x4],eax
   140002a8b:	mov    eax,DWORD PTR [rcx+0x38]
   140002a8e:	mov    DWORD PTR [rdx+0x8],eax
   140002a91:	mov    eax,DWORD PTR [rcx+0x3c]
   140002a94:	mov    DWORD PTR [rdx+0xc],eax
   140002a97:	mov    rax,rdx
   140002a9a:	ret    
   140002a9b:	int3   
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	mov    QWORD PTR [rcx+0x10],rdx
   140002aa4:	xor    r9d,r9d
   140002aa7:	lea    rax,[rip+0x130da]        # 0x140015b88
   140002aae:	mov    QWORD PTR [rcx],rax
   140002ab1:	mov    DWORD PTR [rcx+0x8],r9d
   140002ab5:	mov    rax,QWORD PTR [r8]
   140002ab8:	mov    QWORD PTR [rcx+0x18],rax
   140002abc:	mov    eax,DWORD PTR [r8+0x8]
   140002ac0:	mov    DWORD PTR [rcx+0x20],eax
   140002ac3:	mov    eax,DWORD PTR [r8+0xc]
   140002ac7:	mov    DWORD PTR [rcx+0x24],eax
   140002aca:	mov    DWORD PTR [rcx+0x28],r9d
   140002ace:	mov    DWORD PTR [rcx+0x2c],r9d
   140002ad2:	mov    DWORD PTR [rcx+0x30],r9d
   140002ad6:	mov    DWORD PTR [rcx+0x34],r9d
   140002ada:	mov    DWORD PTR [rcx+0x38],r9d
   140002ade:	mov    DWORD PTR [rcx+0x3c],r9d
   140002ae2:	mov    DWORD PTR [rcx+0x40],r9d
   140002ae6:	mov    DWORD PTR [rcx+0x44],r9d
   140002aea:	mov    DWORD PTR [rcx+0x8],0x18
   140002af1:	mov    rax,rcx
   140002af4:	ret    
   140002af5:	int3   
   140002af6:	int3   
   140002af7:	int3   
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	mov    QWORD PTR [rcx+0x10],rdx
   140002b04:	mov    QWORD PTR [rcx+0x18],r8
   140002b08:	lea    rax,[rip+0x130c9]        # 0x140015bd8
   140002b0f:	mov    QWORD PTR [rcx],rax
   140002b12:	xor    eax,eax
   140002b14:	mov    DWORD PTR [rcx+0x20],eax
   140002b17:	mov    DWORD PTR [rcx+0x24],eax
   140002b1a:	mov    DWORD PTR [rcx+0x28],eax
   140002b1d:	mov    DWORD PTR [rcx+0x2c],eax
   140002b20:	mov    DWORD PTR [rcx+0x30],eax
   140002b23:	mov    DWORD PTR [rcx+0x34],eax
   140002b26:	mov    DWORD PTR [rcx+0x38],eax
   140002b29:	mov    DWORD PTR [rcx+0x3c],eax
   140002b2c:	mov    DWORD PTR [rcx+0x40],eax
   140002b2f:	mov    DWORD PTR [rcx+0x44],eax
   140002b32:	mov    DWORD PTR [rcx+0x48],eax
   140002b35:	mov    DWORD PTR [rcx+0x4c],eax
   140002b38:	mov    DWORD PTR [rcx+0x8],0x28
   140002b3f:	mov    rax,rcx
   140002b42:	ret    
   140002b43:	int3   
   140002b44:	int3   
   140002b45:	int3   
   140002b46:	int3   
   140002b47:	int3   
   140002b48:	int3   
   140002b49:	int3   
   140002b4a:	int3   
   140002b4b:	int3   
   140002b4c:	int3   
   140002b4d:	int3   
   140002b4e:	int3   
   140002b4f:	int3   
   140002b50:	mov    eax,DWORD PTR [rcx+0x18]
   140002b53:	mov    DWORD PTR [rdx],eax
   140002b55:	mov    eax,DWORD PTR [rcx+0x1c]
   140002b58:	mov    DWORD PTR [rdx+0x4],eax
   140002b5b:	mov    eax,DWORD PTR [rcx+0x20]
   140002b5e:	mov    DWORD PTR [rdx+0x8],eax
   140002b61:	mov    eax,DWORD PTR [rcx+0x24]
   140002b64:	mov    DWORD PTR [rdx+0xc],eax
   140002b67:	mov    rax,rdx
   140002b6a:	ret    
   140002b6b:	int3   
   140002b6c:	int3   
   140002b6d:	int3   
   140002b6e:	int3   
   140002b6f:	int3   
   140002b70:	rex push rbx
   140002b72:	sub    rsp,0x20
   140002b76:	mov    rcx,QWORD PTR [rcx+0x10]
   140002b7a:	mov    rbx,rdx
   140002b7d:	mov    rax,QWORD PTR [rcx]
   140002b80:	call   QWORD PTR [rax+0x38]
   140002b83:	mov    rax,rbx
   140002b86:	add    rsp,0x20
   140002b8a:	pop    rbx
   140002b8b:	ret    
   140002b8c:	int3   
   140002b8d:	int3   
   140002b8e:	int3   
   140002b8f:	int3   
   140002b90:	mov    QWORD PTR [rcx+0x10],rdx
   140002b94:	mov    QWORD PTR [rcx+0x18],r8
   140002b98:	mov    QWORD PTR [rcx+0x20],r9
   140002b9c:	lea    rax,[rip+0x13535]        # 0x1400160d8
   140002ba3:	mov    QWORD PTR [rcx],rax
   140002ba6:	xor    eax,eax
   140002ba8:	mov    DWORD PTR [rcx+0x28],eax
   140002bab:	mov    DWORD PTR [rcx+0x2c],eax
   140002bae:	mov    DWORD PTR [rcx+0x30],eax
   140002bb1:	mov    DWORD PTR [rcx+0x34],eax
   140002bb4:	mov    DWORD PTR [rcx+0x38],eax
   140002bb7:	mov    DWORD PTR [rcx+0x3c],eax
   140002bba:	mov    DWORD PTR [rcx+0x40],eax
   140002bbd:	mov    DWORD PTR [rcx+0x44],eax
   140002bc0:	mov    DWORD PTR [rcx+0x8],0xc
   140002bc7:	mov    rax,rcx
   140002bca:	ret    
   140002bcb:	int3   
   140002bcc:	int3   
   140002bcd:	int3   
   140002bce:	int3   
   140002bcf:	int3   
   140002bd0:	xor    r9d,r9d
   140002bd3:	lea    rax,[rip+0x1368e]        # 0x140016268
   140002bda:	mov    QWORD PTR [rcx],rax
   140002bdd:	mov    DWORD PTR [rcx+0x8],r9d
   140002be1:	mov    rax,QWORD PTR [rdx]
   140002be4:	mov    QWORD PTR [rcx+0x10],rax
   140002be8:	mov    eax,DWORD PTR [rdx+0x8]
   140002beb:	mov    DWORD PTR [rcx+0x18],eax
   140002bee:	mov    eax,DWORD PTR [rdx+0xc]
   140002bf1:	mov    DWORD PTR [rcx+0x1c],eax
   140002bf4:	mov    QWORD PTR [rcx+0x20],r8
   140002bf8:	mov    BYTE PTR [rcx+0x28],r9b
   140002bfc:	mov    DWORD PTR [rcx+0x2c],r9d
   140002c00:	mov    DWORD PTR [rcx+0x30],r9d
   140002c04:	mov    DWORD PTR [rcx+0x34],r9d
   140002c08:	mov    DWORD PTR [rcx+0x38],r9d
   140002c0c:	mov    rax,rcx
   140002c0f:	mov    DWORD PTR [rcx+0x8],0x48
   140002c16:	ret    
   140002c17:	int3   
   140002c18:	int3   
   140002c19:	int3   
   140002c1a:	int3   
   140002c1b:	int3   
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	mov    eax,DWORD PTR [rcx+0x2c]
   140002c23:	mov    DWORD PTR [rdx],eax
   140002c25:	mov    eax,DWORD PTR [rcx+0x30]
   140002c28:	mov    DWORD PTR [rdx+0x4],eax
   140002c2b:	mov    eax,DWORD PTR [rcx+0x34]
   140002c2e:	mov    DWORD PTR [rdx+0x8],eax
   140002c31:	mov    eax,DWORD PTR [rcx+0x38]
   140002c34:	mov    DWORD PTR [rdx+0xc],eax
   140002c37:	mov    rax,rdx
   140002c3a:	ret    
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	rex push rbx
   140002c42:	sub    rsp,0x30
   140002c46:	cmp    QWORD PTR [rcx+0x20],0x0
   140002c4b:	mov    rbx,rdx
   140002c4e:	je     0x140002c64
   140002c50:	mov    rcx,QWORD PTR [rcx+0x20]
   140002c54:	lea    rdx,[rsp+0x20]
   140002c59:	mov    rax,QWORD PTR [rcx]
   140002c5c:	call   QWORD PTR [rax+0x38]
   140002c5f:	mov    rcx,rax
   140002c62:	jmp    0x140002c68
   140002c64:	add    rcx,0x2c
   140002c68:	mov    eax,DWORD PTR [rcx]
   140002c6a:	mov    DWORD PTR [rbx],eax
   140002c6c:	mov    eax,DWORD PTR [rcx+0x4]
   140002c6f:	mov    DWORD PTR [rbx+0x4],eax
   140002c72:	mov    eax,DWORD PTR [rcx+0x8]
   140002c75:	mov    DWORD PTR [rbx+0x8],eax
   140002c78:	mov    eax,DWORD PTR [rcx+0xc]
   140002c7b:	mov    DWORD PTR [rbx+0xc],eax
   140002c7e:	mov    rax,rbx
   140002c81:	add    rsp,0x30
   140002c85:	pop    rbx
   140002c86:	ret    
   140002c87:	int3   
   140002c88:	int3   
   140002c89:	int3   
   140002c8a:	int3   
   140002c8b:	int3   
   140002c8c:	int3   
   140002c8d:	int3   
   140002c8e:	int3   
   140002c8f:	int3   
   140002c90:	rex push rbx
   140002c92:	sub    rsp,0x20
   140002c96:	cmp    QWORD PTR [rcx+0x18],0x0
   140002c9b:	mov    rbx,rdx
   140002c9e:	je     0x140002cb3
   140002ca0:	mov    rcx,QWORD PTR [rcx+0x18]
   140002ca4:	mov    rax,QWORD PTR [rcx]
   140002ca7:	call   QWORD PTR [rax+0x38]
   140002caa:	mov    rax,rbx
   140002cad:	add    rsp,0x20
   140002cb1:	pop    rbx
   140002cb2:	ret    
   140002cb3:	mov    rcx,QWORD PTR [rcx+0x10]
   140002cb7:	mov    rax,QWORD PTR [rcx]
   140002cba:	call   QWORD PTR [rax+0x38]
   140002cbd:	mov    rax,rbx
   140002cc0:	add    rsp,0x20
   140002cc4:	pop    rbx
   140002cc5:	ret    
   140002cc6:	int3   
   140002cc7:	int3   
   140002cc8:	int3   
   140002cc9:	int3   
   140002cca:	int3   
   140002ccb:	int3   
   140002ccc:	int3   
   140002ccd:	int3   
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	mov    rax,QWORD PTR [rcx+0x18]
   140002cd4:	mov    QWORD PTR [rcx+0x18],0x0
   140002cdc:	test   dl,dl
   140002cde:	je     0x140002d01
   140002ce0:	mov    rdx,rax
   140002ce3:	test   rax,rax
   140002ce6:	je     0x140002d01
   140002ce8:	nop    DWORD PTR [rax+rax*1+0x0]
   140002cf0:	mov    rcx,QWORD PTR [rdx+0x10]
   140002cf4:	mov    BYTE PTR [rcx+0x28],0x1
   140002cf8:	mov    rdx,QWORD PTR [rdx+0x18]
   140002cfc:	test   rdx,rdx
   140002cff:	jne    0x140002cf0
   140002d01:	repz ret 
   140002d03:	int3   
   140002d04:	int3   
   140002d05:	int3   
   140002d06:	int3   
   140002d07:	int3   
   140002d08:	int3   
   140002d09:	int3   
   140002d0a:	int3   
   140002d0b:	int3   
   140002d0c:	int3   
   140002d0d:	int3   
   140002d0e:	int3   
   140002d0f:	int3   
   140002d10:	mov    QWORD PTR [rcx+0x10],rdx
   140002d14:	mov    QWORD PTR [rcx+0x18],r8
   140002d18:	mov    QWORD PTR [rcx+0x20],r9
   140002d1c:	lea    rax,[rip+0x13685]        # 0x1400163a8
   140002d23:	mov    QWORD PTR [rcx],rax
   140002d26:	xor    eax,eax
   140002d28:	mov    DWORD PTR [rcx+0x28],eax
   140002d2b:	mov    DWORD PTR [rcx+0x2c],eax
   140002d2e:	mov    DWORD PTR [rcx+0x30],eax
   140002d31:	mov    DWORD PTR [rcx+0x34],eax
   140002d34:	mov    DWORD PTR [rcx+0x38],eax
   140002d37:	mov    DWORD PTR [rcx+0x3c],eax
   140002d3a:	mov    DWORD PTR [rcx+0x40],eax
   140002d3d:	mov    DWORD PTR [rcx+0x44],eax
   140002d40:	mov    DWORD PTR [rcx+0x48],eax
   140002d43:	mov    DWORD PTR [rcx+0x4c],eax
   140002d46:	mov    DWORD PTR [rcx+0x50],eax
   140002d49:	mov    DWORD PTR [rcx+0x54],eax
   140002d4c:	mov    DWORD PTR [rcx+0x58],eax
   140002d4f:	mov    DWORD PTR [rcx+0x5c],eax
   140002d52:	mov    DWORD PTR [rcx+0x60],eax
   140002d55:	mov    DWORD PTR [rcx+0x64],eax
   140002d58:	mov    DWORD PTR [rcx+0x8],0x23
   140002d5f:	mov    rax,rcx
   140002d62:	ret    
   140002d63:	int3   
   140002d64:	int3   
   140002d65:	int3   
   140002d66:	int3   
   140002d67:	int3   
   140002d68:	int3   
   140002d69:	int3   
   140002d6a:	int3   
   140002d6b:	int3   
   140002d6c:	int3   
   140002d6d:	int3   
   140002d6e:	int3   
   140002d6f:	int3   
   140002d70:	rex push rbx
   140002d72:	sub    rsp,0x20
   140002d76:	cmp    QWORD PTR [rcx+0x20],0x0
   140002d7b:	mov    rbx,rdx
   140002d7e:	je     0x140002d93
   140002d80:	mov    rcx,QWORD PTR [rcx+0x20]
   140002d84:	mov    rax,QWORD PTR [rcx]
   140002d87:	call   QWORD PTR [rax+0x38]
   140002d8a:	mov    rax,rbx
   140002d8d:	add    rsp,0x20
   140002d91:	pop    rbx
   140002d92:	ret    
   140002d93:	mov    rcx,QWORD PTR [rcx+0x18]
   140002d97:	mov    rax,QWORD PTR [rcx]
   140002d9a:	call   QWORD PTR [rax+0x38]
   140002d9d:	mov    rax,rbx
   140002da0:	add    rsp,0x20
   140002da4:	pop    rbx
   140002da5:	ret    
   140002da6:	int3   
   140002da7:	int3   
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	mov    QWORD PTR [rcx+0x10],rdx
   140002db4:	mov    QWORD PTR [rcx+0x18],r8
   140002db8:	lea    rax,[rip+0x13639]        # 0x1400163f8
   140002dbf:	mov    QWORD PTR [rcx],rax
   140002dc2:	xor    eax,eax
   140002dc4:	mov    DWORD PTR [rcx+0x20],eax
   140002dc7:	mov    DWORD PTR [rcx+0x24],eax
   140002dca:	mov    DWORD PTR [rcx+0x28],eax
   140002dcd:	mov    DWORD PTR [rcx+0x2c],eax
   140002dd0:	mov    DWORD PTR [rcx+0x30],eax
   140002dd3:	mov    DWORD PTR [rcx+0x34],eax
   140002dd6:	mov    DWORD PTR [rcx+0x38],eax
   140002dd9:	mov    DWORD PTR [rcx+0x3c],eax
   140002ddc:	mov    DWORD PTR [rcx+0x40],eax
   140002ddf:	mov    DWORD PTR [rcx+0x44],eax
   140002de2:	mov    DWORD PTR [rcx+0x48],eax
   140002de5:	mov    DWORD PTR [rcx+0x4c],eax
   140002de8:	mov    DWORD PTR [rcx+0x50],eax
   140002deb:	mov    DWORD PTR [rcx+0x54],eax
   140002dee:	mov    DWORD PTR [rcx+0x58],eax
   140002df1:	mov    DWORD PTR [rcx+0x5c],eax
   140002df4:	mov    DWORD PTR [rcx+0x60],eax
   140002df7:	mov    DWORD PTR [rcx+0x64],eax
   140002dfa:	mov    DWORD PTR [rcx+0x68],eax
   140002dfd:	mov    DWORD PTR [rcx+0x6c],eax
   140002e00:	mov    DWORD PTR [rcx+0x8],0x11
   140002e07:	mov    rax,rcx
   140002e0a:	ret    
   140002e0b:	int3   
   140002e0c:	int3   
   140002e0d:	int3   
   140002e0e:	int3   
   140002e0f:	int3   
   140002e10:	mov    eax,DWORD PTR [rcx+0x60]
   140002e13:	mov    DWORD PTR [rdx],eax
   140002e15:	mov    eax,DWORD PTR [rcx+0x64]
   140002e18:	mov    DWORD PTR [rdx+0x4],eax
   140002e1b:	mov    eax,DWORD PTR [rcx+0x68]
   140002e1e:	mov    DWORD PTR [rdx+0x8],eax
   140002e21:	mov    eax,DWORD PTR [rcx+0x6c]
   140002e24:	mov    DWORD PTR [rdx+0xc],eax
   140002e27:	mov    rax,rdx
   140002e2a:	ret    
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	mov    QWORD PTR [rcx+0x10],rdx
   140002e34:	mov    QWORD PTR [rcx+0x18],r8
   140002e38:	lea    rax,[rip+0x13609]        # 0x140016448
   140002e3f:	mov    QWORD PTR [rcx],rax
   140002e42:	xor    eax,eax
   140002e44:	mov    DWORD PTR [rcx+0x20],eax
   140002e47:	mov    DWORD PTR [rcx+0x24],eax
   140002e4a:	mov    DWORD PTR [rcx+0x28],eax
   140002e4d:	mov    DWORD PTR [rcx+0x2c],eax
   140002e50:	mov    DWORD PTR [rcx+0x30],eax
   140002e53:	mov    DWORD PTR [rcx+0x34],eax
   140002e56:	mov    DWORD PTR [rcx+0x38],eax
   140002e59:	mov    DWORD PTR [rcx+0x3c],eax
   140002e5c:	mov    DWORD PTR [rcx+0x40],eax
   140002e5f:	mov    DWORD PTR [rcx+0x44],eax
   140002e62:	mov    DWORD PTR [rcx+0x48],eax
   140002e65:	mov    DWORD PTR [rcx+0x4c],eax
   140002e68:	mov    DWORD PTR [rcx+0x8],0x4c
   140002e6f:	mov    rax,rcx
   140002e72:	ret    
   140002e73:	int3   
   140002e74:	int3   
   140002e75:	int3   
   140002e76:	int3   
   140002e77:	int3   
   140002e78:	int3   
   140002e79:	int3   
   140002e7a:	int3   
   140002e7b:	int3   
   140002e7c:	int3   
   140002e7d:	int3   
   140002e7e:	int3   
   140002e7f:	int3   
   140002e80:	mov    QWORD PTR [rcx+0x10],rdx
   140002e84:	mov    QWORD PTR [rcx+0x18],r8
   140002e88:	mov    QWORD PTR [rcx+0x20],r9
   140002e8c:	lea    rax,[rip+0x13605]        # 0x140016498
   140002e93:	mov    QWORD PTR [rcx],rax
   140002e96:	mov    rax,QWORD PTR [rsp+0x28]
   140002e9b:	mov    QWORD PTR [rcx+0x28],rax
   140002e9f:	xor    eax,eax
   140002ea1:	mov    DWORD PTR [rcx+0x30],eax
   140002ea4:	mov    DWORD PTR [rcx+0x34],eax
   140002ea7:	mov    DWORD PTR [rcx+0x38],eax
   140002eaa:	mov    DWORD PTR [rcx+0x3c],eax
   140002ead:	mov    DWORD PTR [rcx+0x40],eax
   140002eb0:	mov    DWORD PTR [rcx+0x44],eax
   140002eb3:	mov    DWORD PTR [rcx+0x48],eax
   140002eb6:	mov    DWORD PTR [rcx+0x4c],eax
   140002eb9:	mov    DWORD PTR [rcx+0x50],eax
   140002ebc:	mov    DWORD PTR [rcx+0x54],eax
   140002ebf:	mov    DWORD PTR [rcx+0x58],eax
   140002ec2:	mov    DWORD PTR [rcx+0x5c],eax
   140002ec5:	mov    DWORD PTR [rcx+0x60],eax
   140002ec8:	mov    DWORD PTR [rcx+0x64],eax
   140002ecb:	mov    DWORD PTR [rcx+0x68],eax
   140002ece:	mov    DWORD PTR [rcx+0x6c],eax
   140002ed1:	mov    DWORD PTR [rcx+0x70],eax
   140002ed4:	mov    DWORD PTR [rcx+0x74],eax
   140002ed7:	mov    DWORD PTR [rcx+0x78],eax
   140002eda:	mov    DWORD PTR [rcx+0x7c],eax
   140002edd:	mov    DWORD PTR [rcx+0x8],0x1b
   140002ee4:	mov    rax,rcx
   140002ee7:	ret    
   140002ee8:	int3   
   140002ee9:	int3   
   140002eea:	int3   
   140002eeb:	int3   
   140002eec:	int3   
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	mov    QWORD PTR [rcx+0x10],rdx
   140002ef4:	mov    QWORD PTR [rcx+0x18],r8
   140002ef8:	mov    QWORD PTR [rcx+0x20],r9
   140002efc:	lea    rax,[rip+0x135e5]        # 0x1400164e8
   140002f03:	mov    QWORD PTR [rcx],rax
   140002f06:	mov    rax,QWORD PTR [rsp+0x28]
   140002f0b:	mov    QWORD PTR [rcx+0x28],rax
   140002f0f:	xor    eax,eax
   140002f11:	mov    DWORD PTR [rcx+0x30],eax
   140002f14:	mov    DWORD PTR [rcx+0x34],eax
   140002f17:	mov    DWORD PTR [rcx+0x38],eax
   140002f1a:	mov    DWORD PTR [rcx+0x3c],eax
   140002f1d:	mov    DWORD PTR [rcx+0x40],eax
   140002f20:	mov    DWORD PTR [rcx+0x44],eax
   140002f23:	mov    DWORD PTR [rcx+0x48],eax
   140002f26:	mov    DWORD PTR [rcx+0x4c],eax
   140002f29:	mov    DWORD PTR [rcx+0x50],eax
   140002f2c:	mov    DWORD PTR [rcx+0x54],eax
   140002f2f:	mov    DWORD PTR [rcx+0x58],eax
   140002f32:	mov    DWORD PTR [rcx+0x5c],eax
   140002f35:	mov    DWORD PTR [rcx+0x60],eax
   140002f38:	mov    DWORD PTR [rcx+0x64],eax
   140002f3b:	mov    DWORD PTR [rcx+0x68],eax
   140002f3e:	mov    DWORD PTR [rcx+0x6c],eax
   140002f41:	mov    DWORD PTR [rcx+0x70],eax
   140002f44:	mov    DWORD PTR [rcx+0x74],eax
   140002f47:	mov    DWORD PTR [rcx+0x78],eax
   140002f4a:	mov    DWORD PTR [rcx+0x7c],eax
   140002f4d:	mov    DWORD PTR [rcx+0x80],eax
   140002f53:	mov    DWORD PTR [rcx+0x84],eax
   140002f59:	mov    DWORD PTR [rcx+0x88],eax
   140002f5f:	mov    DWORD PTR [rcx+0x8c],eax
   140002f65:	mov    DWORD PTR [rcx+0x8],0x26
   140002f6c:	mov    rax,rcx
   140002f6f:	ret    
   140002f70:	rex push rbx
   140002f72:	sub    rsp,0x20
   140002f76:	mov    rcx,QWORD PTR [rcx+0x28]
   140002f7a:	mov    rbx,rdx
   140002f7d:	mov    rax,QWORD PTR [rcx]
   140002f80:	call   QWORD PTR [rax+0x38]
   140002f83:	mov    rax,rbx
   140002f86:	add    rsp,0x20
   140002f8a:	pop    rbx
   140002f8b:	ret    
   140002f8c:	int3   
   140002f8d:	int3   
   140002f8e:	int3   
   140002f8f:	int3   
   140002f90:	mov    QWORD PTR [rcx+0x10],rdx
   140002f94:	mov    QWORD PTR [rcx+0x18],r8
   140002f98:	mov    QWORD PTR [rcx+0x20],r9
   140002f9c:	lea    rax,[rip+0x13595]        # 0x140016538
   140002fa3:	mov    QWORD PTR [rcx],rax
   140002fa6:	xor    eax,eax
   140002fa8:	mov    DWORD PTR [rcx+0x28],eax
   140002fab:	mov    DWORD PTR [rcx+0x2c],eax
   140002fae:	mov    DWORD PTR [rcx+0x30],eax
   140002fb1:	mov    DWORD PTR [rcx+0x34],eax
   140002fb4:	mov    DWORD PTR [rcx+0x38],eax
   140002fb7:	mov    DWORD PTR [rcx+0x3c],eax
   140002fba:	mov    DWORD PTR [rcx+0x40],eax
   140002fbd:	mov    DWORD PTR [rcx+0x44],eax
   140002fc0:	mov    DWORD PTR [rcx+0x48],eax
   140002fc3:	mov    DWORD PTR [rcx+0x4c],eax
   140002fc6:	mov    DWORD PTR [rcx+0x50],eax
   140002fc9:	mov    DWORD PTR [rcx+0x54],eax
   140002fcc:	mov    DWORD PTR [rcx+0x58],eax
   140002fcf:	mov    DWORD PTR [rcx+0x5c],eax
   140002fd2:	mov    DWORD PTR [rcx+0x60],eax
   140002fd5:	mov    DWORD PTR [rcx+0x64],eax
   140002fd8:	mov    DWORD PTR [rcx+0x8],0x1a
   140002fdf:	mov    rax,rcx
   140002fe2:	ret    
   140002fe3:	int3   
   140002fe4:	int3   
   140002fe5:	int3   
   140002fe6:	int3   
   140002fe7:	int3   
   140002fe8:	int3   
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	mov    QWORD PTR [rcx+0x10],rdx
   140002ff4:	mov    QWORD PTR [rcx+0x18],r8
   140002ff8:	mov    QWORD PTR [rcx+0x20],r9
   140002ffc:	lea    rax,[rip+0x13585]        # 0x140016588
   140003003:	mov    QWORD PTR [rcx],rax
   140003006:	xor    eax,eax
   140003008:	mov    DWORD PTR [rcx+0x28],eax
   14000300b:	mov    DWORD PTR [rcx+0x2c],eax
   14000300e:	mov    DWORD PTR [rcx+0x30],eax
   140003011:	mov    DWORD PTR [rcx+0x34],eax
   140003014:	mov    DWORD PTR [rcx+0x38],eax
   140003017:	mov    DWORD PTR [rcx+0x3c],eax
   14000301a:	mov    DWORD PTR [rcx+0x40],eax
   14000301d:	mov    DWORD PTR [rcx+0x44],eax
   140003020:	mov    DWORD PTR [rcx+0x48],eax
   140003023:	mov    DWORD PTR [rcx+0x4c],eax
   140003026:	mov    DWORD PTR [rcx+0x50],eax
   140003029:	mov    DWORD PTR [rcx+0x54],eax
   14000302c:	mov    DWORD PTR [rcx+0x58],eax
   14000302f:	mov    DWORD PTR [rcx+0x5c],eax
   140003032:	mov    DWORD PTR [rcx+0x60],eax
   140003035:	mov    DWORD PTR [rcx+0x64],eax
   140003038:	mov    DWORD PTR [rcx+0x68],eax
   14000303b:	mov    DWORD PTR [rcx+0x6c],eax
   14000303e:	mov    DWORD PTR [rcx+0x70],eax
   140003041:	mov    DWORD PTR [rcx+0x74],eax
   140003044:	mov    DWORD PTR [rcx+0x8],0x25
   14000304b:	mov    rax,rcx
   14000304e:	ret    
   14000304f:	int3   
   140003050:	xor    r8d,r8d
   140003053:	lea    rax,[rip+0x1357e]        # 0x1400165d8
   14000305a:	mov    QWORD PTR [rcx],rax
   14000305d:	mov    DWORD PTR [rcx+0x8],r8d
   140003061:	mov    rax,QWORD PTR [rdx]
   140003064:	mov    QWORD PTR [rcx+0x10],rax
   140003068:	mov    eax,DWORD PTR [rdx+0x8]
   14000306b:	mov    DWORD PTR [rcx+0x18],eax
   14000306e:	mov    eax,DWORD PTR [rdx+0xc]
   140003071:	mov    DWORD PTR [rcx+0x1c],eax
   140003074:	mov    DWORD PTR [rcx+0x20],r8d
   140003078:	mov    DWORD PTR [rcx+0x24],r8d
   14000307c:	mov    DWORD PTR [rcx+0x28],r8d
   140003080:	mov    DWORD PTR [rcx+0x2c],r8d
   140003084:	mov    DWORD PTR [rcx+0x30],r8d
   140003088:	mov    DWORD PTR [rcx+0x34],r8d
   14000308c:	mov    DWORD PTR [rcx+0x38],r8d
   140003090:	mov    DWORD PTR [rcx+0x3c],r8d
   140003094:	mov    DWORD PTR [rcx+0x40],r8d
   140003098:	mov    DWORD PTR [rcx+0x44],r8d
   14000309c:	mov    DWORD PTR [rcx+0x48],r8d
   1400030a0:	mov    DWORD PTR [rcx+0x4c],r8d
   1400030a4:	mov    rax,rcx
   1400030a7:	mov    DWORD PTR [rcx+0x8],0xd
   1400030ae:	ret    
   1400030af:	int3   
   1400030b0:	mov    eax,DWORD PTR [rcx+0x40]
   1400030b3:	mov    DWORD PTR [rdx],eax
   1400030b5:	mov    eax,DWORD PTR [rcx+0x44]
   1400030b8:	mov    DWORD PTR [rdx+0x4],eax
   1400030bb:	mov    eax,DWORD PTR [rcx+0x48]
   1400030be:	mov    DWORD PTR [rdx+0x8],eax
   1400030c1:	mov    eax,DWORD PTR [rcx+0x4c]
   1400030c4:	mov    DWORD PTR [rdx+0xc],eax
   1400030c7:	mov    rax,rdx
   1400030ca:	ret    
   1400030cb:	int3   
   1400030cc:	int3   
   1400030cd:	int3   
   1400030ce:	int3   
   1400030cf:	int3   
   1400030d0:	xor    r8d,r8d
   1400030d3:	lea    rax,[rip+0x1354e]        # 0x140016628
   1400030da:	mov    QWORD PTR [rcx],rax
   1400030dd:	mov    DWORD PTR [rcx+0x8],r8d
   1400030e1:	mov    rax,QWORD PTR [rdx]
   1400030e4:	mov    QWORD PTR [rcx+0x10],rax
   1400030e8:	mov    eax,DWORD PTR [rdx+0x8]
   1400030eb:	mov    DWORD PTR [rcx+0x18],eax
   1400030ee:	mov    eax,DWORD PTR [rdx+0xc]
   1400030f1:	mov    DWORD PTR [rcx+0x1c],eax
   1400030f4:	mov    DWORD PTR [rcx+0x20],r8d
   1400030f8:	mov    DWORD PTR [rcx+0x24],r8d
   1400030fc:	mov    DWORD PTR [rcx+0x28],r8d
   140003100:	mov    DWORD PTR [rcx+0x2c],r8d
   140003104:	mov    DWORD PTR [rcx+0x30],r8d
   140003108:	mov    DWORD PTR [rcx+0x34],r8d
   14000310c:	mov    DWORD PTR [rcx+0x38],r8d
   140003110:	mov    DWORD PTR [rcx+0x3c],r8d
   140003114:	mov    DWORD PTR [rcx+0x40],r8d
   140003118:	mov    DWORD PTR [rcx+0x44],r8d
   14000311c:	mov    DWORD PTR [rcx+0x48],r8d
   140003120:	mov    DWORD PTR [rcx+0x4c],r8d
   140003124:	mov    rax,rcx
   140003127:	mov    DWORD PTR [rcx+0x8],0x6
   14000312e:	ret    
   14000312f:	int3   
   140003130:	mov    QWORD PTR [rcx+0x10],rdx
   140003134:	lea    rax,[rip+0x1353d]        # 0x140016678
   14000313b:	mov    QWORD PTR [rcx],rax
   14000313e:	xor    eax,eax
   140003140:	mov    DWORD PTR [rcx+0x18],eax
   140003143:	mov    DWORD PTR [rcx+0x1c],eax
   140003146:	mov    DWORD PTR [rcx+0x20],eax
   140003149:	mov    DWORD PTR [rcx+0x24],eax
   14000314c:	mov    DWORD PTR [rcx+0x28],eax
   14000314f:	mov    DWORD PTR [rcx+0x2c],eax
   140003152:	mov    DWORD PTR [rcx+0x30],eax
   140003155:	mov    DWORD PTR [rcx+0x34],eax
   140003158:	mov    DWORD PTR [rcx+0x8],0x38
   14000315f:	mov    rax,rcx
   140003162:	ret    
   140003163:	int3   
   140003164:	int3   
   140003165:	int3   
   140003166:	int3   
   140003167:	int3   
   140003168:	int3   
   140003169:	int3   
   14000316a:	int3   
   14000316b:	int3   
   14000316c:	int3   
   14000316d:	int3   
   14000316e:	int3   
   14000316f:	int3   
   140003170:	mov    QWORD PTR [rcx+0x10],rdx
   140003174:	mov    QWORD PTR [rcx+0x18],r8
   140003178:	lea    rax,[rip+0x13549]        # 0x1400166c8
   14000317f:	mov    QWORD PTR [rcx],rax
   140003182:	xor    eax,eax
   140003184:	mov    DWORD PTR [rcx+0x20],eax
   140003187:	mov    DWORD PTR [rcx+0x24],eax
   14000318a:	mov    DWORD PTR [rcx+0x28],eax
   14000318d:	mov    DWORD PTR [rcx+0x2c],eax
   140003190:	mov    DWORD PTR [rcx+0x30],eax
   140003193:	mov    DWORD PTR [rcx+0x34],eax
   140003196:	mov    DWORD PTR [rcx+0x38],eax
   140003199:	mov    DWORD PTR [rcx+0x3c],eax
   14000319c:	mov    DWORD PTR [rcx+0x40],eax
   14000319f:	mov    DWORD PTR [rcx+0x44],eax
   1400031a2:	mov    DWORD PTR [rcx+0x48],eax
   1400031a5:	mov    DWORD PTR [rcx+0x4c],eax
   1400031a8:	mov    DWORD PTR [rcx+0x8],0x4d
   1400031af:	mov    rax,rcx
   1400031b2:	ret    
   1400031b3:	int3   
   1400031b4:	int3   
   1400031b5:	int3   
   1400031b6:	int3   
   1400031b7:	int3   
   1400031b8:	int3   
   1400031b9:	int3   
   1400031ba:	int3   
   1400031bb:	int3   
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	rex push rbx
   1400031c2:	sub    rsp,0x20
   1400031c6:	mov    rcx,QWORD PTR [rcx+0x18]
   1400031ca:	mov    rbx,rdx
   1400031cd:	mov    rax,QWORD PTR [rcx]
   1400031d0:	call   QWORD PTR [rax+0x38]
   1400031d3:	mov    rax,rbx
   1400031d6:	add    rsp,0x20
   1400031da:	pop    rbx
   1400031db:	ret    
   1400031dc:	int3   
   1400031dd:	int3   
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	mov    QWORD PTR [rcx+0x10],rdx
   1400031e4:	mov    QWORD PTR [rcx+0x18],r8
   1400031e8:	mov    QWORD PTR [rcx+0x20],r9
   1400031ec:	lea    rax,[rip+0x13525]        # 0x140016718
   1400031f3:	mov    QWORD PTR [rcx],rax
   1400031f6:	xor    eax,eax
   1400031f8:	mov    DWORD PTR [rcx+0x28],eax
   1400031fb:	mov    DWORD PTR [rcx+0x2c],eax
   1400031fe:	mov    DWORD PTR [rcx+0x30],eax
   140003201:	mov    DWORD PTR [rcx+0x34],eax
   140003204:	mov    DWORD PTR [rcx+0x38],eax
   140003207:	mov    DWORD PTR [rcx+0x3c],eax
   14000320a:	mov    DWORD PTR [rcx+0x40],eax
   14000320d:	mov    DWORD PTR [rcx+0x44],eax
   140003210:	mov    DWORD PTR [rcx+0x8],0x8
   140003217:	mov    rax,rcx
   14000321a:	ret    
   14000321b:	int3   
   14000321c:	int3   
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	mov    QWORD PTR [rcx+0x10],rdx
   140003224:	mov    QWORD PTR [rcx+0x18],r8
   140003228:	lea    rax,[rip+0x13539]        # 0x140016768
   14000322f:	mov    QWORD PTR [rcx],rax
   140003232:	xor    eax,eax
   140003234:	mov    DWORD PTR [rcx+0x20],eax
   140003237:	mov    DWORD PTR [rcx+0x24],eax
   14000323a:	mov    DWORD PTR [rcx+0x28],eax
   14000323d:	mov    DWORD PTR [rcx+0x2c],eax
   140003240:	mov    DWORD PTR [rcx+0x30],eax
   140003243:	mov    DWORD PTR [rcx+0x34],eax
   140003246:	mov    DWORD PTR [rcx+0x38],eax
   140003249:	mov    DWORD PTR [rcx+0x3c],eax
   14000324c:	mov    DWORD PTR [rcx+0x40],eax
   14000324f:	mov    DWORD PTR [rcx+0x44],eax
   140003252:	mov    DWORD PTR [rcx+0x48],eax
   140003255:	mov    DWORD PTR [rcx+0x4c],eax
   140003258:	mov    DWORD PTR [rcx+0x8],0x3f
   14000325f:	mov    rax,rcx
   140003262:	ret    
   140003263:	int3   
   140003264:	int3   
   140003265:	int3   
   140003266:	int3   
   140003267:	int3   
   140003268:	int3   
   140003269:	int3   
   14000326a:	int3   
   14000326b:	int3   
   14000326c:	int3   
   14000326d:	int3   
   14000326e:	int3   
   14000326f:	int3   
   140003270:	mov    r8,QWORD PTR [rcx+0x18]
   140003274:	mov    eax,DWORD PTR [r8+0x38]
   140003278:	mov    DWORD PTR [rdx],eax
   14000327a:	mov    eax,DWORD PTR [r8+0x3c]
   14000327e:	mov    DWORD PTR [rdx+0x4],eax
   140003281:	mov    eax,DWORD PTR [r8+0x40]
   140003285:	mov    DWORD PTR [rdx+0x8],eax
   140003288:	mov    eax,DWORD PTR [r8+0x44]
   14000328c:	mov    DWORD PTR [rdx+0xc],eax
   14000328f:	mov    rax,rdx
   140003292:	ret    
   140003293:	int3   
   140003294:	int3   
   140003295:	int3   
   140003296:	int3   
   140003297:	int3   
   140003298:	int3   
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	int3   
   14000329d:	int3   
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	mov    QWORD PTR [rcx+0x10],rdx
   1400032a4:	mov    QWORD PTR [rcx+0x18],r8
   1400032a8:	lea    rax,[rip+0x13509]        # 0x1400167b8
   1400032af:	mov    QWORD PTR [rcx],rax
   1400032b2:	xor    eax,eax
   1400032b4:	mov    DWORD PTR [rcx+0x20],eax
   1400032b7:	mov    DWORD PTR [rcx+0x24],eax
   1400032ba:	mov    DWORD PTR [rcx+0x28],eax
   1400032bd:	mov    DWORD PTR [rcx+0x2c],eax
   1400032c0:	mov    DWORD PTR [rcx+0x30],eax
   1400032c3:	mov    DWORD PTR [rcx+0x34],eax
   1400032c6:	mov    DWORD PTR [rcx+0x38],eax
   1400032c9:	mov    DWORD PTR [rcx+0x3c],eax
   1400032cc:	mov    DWORD PTR [rcx+0x8],0x9
   1400032d3:	mov    rax,rcx
   1400032d6:	ret    
   1400032d7:	int3   
   1400032d8:	int3   
   1400032d9:	int3   
   1400032da:	int3   
   1400032db:	int3   
   1400032dc:	int3   
   1400032dd:	int3   
   1400032de:	int3   
   1400032df:	int3   
   1400032e0:	rex push rbx
   1400032e2:	sub    rsp,0x30
   1400032e6:	cmp    QWORD PTR [rcx+0x18],0x0
   1400032eb:	mov    rbx,rdx
   1400032ee:	je     0x140003304
   1400032f0:	mov    rcx,QWORD PTR [rcx+0x18]
   1400032f4:	lea    rdx,[rsp+0x20]
   1400032f9:	mov    rax,QWORD PTR [rcx]
   1400032fc:	call   QWORD PTR [rax+0x38]
   1400032ff:	mov    rcx,rax
   140003302:	jmp    0x140003308
   140003304:	add    rcx,0x30
   140003308:	mov    eax,DWORD PTR [rcx]
   14000330a:	mov    DWORD PTR [rbx],eax
   14000330c:	mov    eax,DWORD PTR [rcx+0x4]
   14000330f:	mov    DWORD PTR [rbx+0x4],eax
   140003312:	mov    eax,DWORD PTR [rcx+0x8]
   140003315:	mov    DWORD PTR [rbx+0x8],eax
   140003318:	mov    eax,DWORD PTR [rcx+0xc]
   14000331b:	mov    DWORD PTR [rbx+0xc],eax
   14000331e:	mov    rax,rbx
   140003321:	add    rsp,0x30
   140003325:	pop    rbx
   140003326:	ret    
   140003327:	int3   
   140003328:	int3   
   140003329:	int3   
   14000332a:	int3   
   14000332b:	int3   
   14000332c:	int3   
   14000332d:	int3   
   14000332e:	int3   
   14000332f:	int3   
   140003330:	mov    QWORD PTR [rcx+0x10],rdx
   140003334:	lea    rax,[rip+0x1351d]        # 0x140016858
   14000333b:	mov    QWORD PTR [rcx],rax
   14000333e:	xor    eax,eax
   140003340:	mov    DWORD PTR [rcx+0x18],eax
   140003343:	mov    DWORD PTR [rcx+0x1c],eax
   140003346:	mov    DWORD PTR [rcx+0x20],eax
   140003349:	mov    DWORD PTR [rcx+0x24],eax
   14000334c:	mov    DWORD PTR [rcx+0x28],eax
   14000334f:	mov    DWORD PTR [rcx+0x2c],eax
   140003352:	mov    DWORD PTR [rcx+0x30],eax
   140003355:	mov    DWORD PTR [rcx+0x34],eax
   140003358:	mov    DWORD PTR [rcx+0x8],0xf
   14000335f:	mov    rax,rcx
   140003362:	ret    
   140003363:	int3   
   140003364:	int3   
   140003365:	int3   
   140003366:	int3   
   140003367:	int3   
   140003368:	int3   
   140003369:	int3   
   14000336a:	int3   
   14000336b:	int3   
   14000336c:	int3   
   14000336d:	int3   
   14000336e:	int3   
   14000336f:	int3   
   140003370:	rex push rbx
   140003372:	sub    rsp,0x30
   140003376:	cmp    QWORD PTR [rcx+0x10],0x0
   14000337b:	mov    rbx,rdx
   14000337e:	je     0x140003394
   140003380:	mov    rcx,QWORD PTR [rcx+0x10]
   140003384:	lea    rdx,[rsp+0x20]
   140003389:	mov    rax,QWORD PTR [rcx]
   14000338c:	call   QWORD PTR [rax+0x38]
   14000338f:	mov    rcx,rax
   140003392:	jmp    0x140003398
   140003394:	add    rcx,0x28
   140003398:	mov    eax,DWORD PTR [rcx]
   14000339a:	mov    DWORD PTR [rbx],eax
   14000339c:	mov    eax,DWORD PTR [rcx+0x4]
   14000339f:	mov    DWORD PTR [rbx+0x4],eax
   1400033a2:	mov    eax,DWORD PTR [rcx+0x8]
   1400033a5:	mov    DWORD PTR [rbx+0x8],eax
   1400033a8:	mov    eax,DWORD PTR [rcx+0xc]
   1400033ab:	mov    DWORD PTR [rbx+0xc],eax
   1400033ae:	mov    rax,rbx
   1400033b1:	add    rsp,0x30
   1400033b5:	pop    rbx
   1400033b6:	ret    
   1400033b7:	int3   
   1400033b8:	int3   
   1400033b9:	int3   
   1400033ba:	int3   
   1400033bb:	int3   
   1400033bc:	int3   
   1400033bd:	int3   
   1400033be:	int3   
   1400033bf:	int3   
   1400033c0:	xor    r9d,r9d
   1400033c3:	lea    rax,[rip+0x134de]        # 0x1400168a8
   1400033ca:	mov    QWORD PTR [rcx],rax
   1400033cd:	mov    DWORD PTR [rcx+0x8],r9d
   1400033d1:	mov    rax,QWORD PTR [rdx]
   1400033d4:	mov    QWORD PTR [rcx+0x10],rax
   1400033d8:	mov    eax,DWORD PTR [rdx+0x8]
   1400033db:	mov    DWORD PTR [rcx+0x18],eax
   1400033de:	mov    eax,DWORD PTR [rdx+0xc]
   1400033e1:	mov    DWORD PTR [rcx+0x1c],eax
   1400033e4:	mov    QWORD PTR [rcx+0x20],r8
   1400033e8:	mov    DWORD PTR [rcx+0x28],r9d
   1400033ec:	mov    DWORD PTR [rcx+0x2c],r9d
   1400033f0:	mov    DWORD PTR [rcx+0x30],r9d
   1400033f4:	mov    DWORD PTR [rcx+0x34],r9d
   1400033f8:	mov    DWORD PTR [rcx+0x38],r9d
   1400033fc:	mov    DWORD PTR [rcx+0x3c],r9d
   140003400:	mov    DWORD PTR [rcx+0x40],r9d
   140003404:	mov    DWORD PTR [rcx+0x44],r9d
   140003408:	mov    rax,rcx
   14000340b:	mov    DWORD PTR [rcx+0x8],0x24
   140003412:	ret    
   140003413:	int3   
   140003414:	int3   
   140003415:	int3   
   140003416:	int3   
   140003417:	int3   
   140003418:	int3   
   140003419:	int3   
   14000341a:	int3   
   14000341b:	int3   
   14000341c:	int3   
   14000341d:	int3   
   14000341e:	int3   
   14000341f:	int3   
   140003420:	rex push rbx
   140003422:	sub    rsp,0x20
   140003426:	mov    rcx,QWORD PTR [rcx+0x20]
   14000342a:	mov    rbx,rdx
   14000342d:	mov    rax,QWORD PTR [rcx]
   140003430:	call   QWORD PTR [rax+0x38]
   140003433:	mov    rax,rbx
   140003436:	add    rsp,0x20
   14000343a:	pop    rbx
   14000343b:	ret    
   14000343c:	int3   
   14000343d:	int3   
   14000343e:	int3   
   14000343f:	int3   
   140003440:	mov    QWORD PTR [rcx+0x10],rdx
   140003444:	lea    rax,[rip+0x134ad]        # 0x1400168f8
   14000344b:	mov    QWORD PTR [rcx],rax
   14000344e:	xor    eax,eax
   140003450:	mov    DWORD PTR [rcx+0x18],eax
   140003453:	mov    DWORD PTR [rcx+0x1c],eax
   140003456:	mov    DWORD PTR [rcx+0x20],eax
   140003459:	mov    DWORD PTR [rcx+0x24],eax
   14000345c:	mov    DWORD PTR [rcx+0x28],eax
   14000345f:	mov    DWORD PTR [rcx+0x2c],eax
   140003462:	mov    DWORD PTR [rcx+0x30],eax
   140003465:	mov    DWORD PTR [rcx+0x34],eax
   140003468:	mov    DWORD PTR [rcx+0x8],0x41
   14000346f:	mov    rax,rcx
   140003472:	ret    
   140003473:	int3   
   140003474:	int3   
   140003475:	int3   
   140003476:	int3   
   140003477:	int3   
   140003478:	int3   
   140003479:	int3   
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	int3   
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	xor    r9d,r9d
   140003483:	lea    rax,[rip+0x134be]        # 0x140016948
   14000348a:	mov    QWORD PTR [rcx],rax
   14000348d:	mov    DWORD PTR [rcx+0x8],r9d
   140003491:	mov    rax,QWORD PTR [rdx]
   140003494:	mov    QWORD PTR [rcx+0x10],rax
   140003498:	mov    eax,DWORD PTR [rdx+0x8]
   14000349b:	mov    DWORD PTR [rcx+0x18],eax
   14000349e:	mov    eax,DWORD PTR [rdx+0xc]
   1400034a1:	mov    DWORD PTR [rcx+0x1c],eax
   1400034a4:	mov    QWORD PTR [rcx+0x20],r8
   1400034a8:	mov    DWORD PTR [rcx+0x28],r9d
   1400034ac:	mov    DWORD PTR [rcx+0x2c],r9d
   1400034b0:	mov    DWORD PTR [rcx+0x30],r9d
   1400034b4:	mov    DWORD PTR [rcx+0x34],r9d
   1400034b8:	mov    DWORD PTR [rcx+0x38],r9d
   1400034bc:	mov    DWORD PTR [rcx+0x3c],r9d
   1400034c0:	mov    DWORD PTR [rcx+0x40],r9d
   1400034c4:	mov    DWORD PTR [rcx+0x44],r9d
   1400034c8:	mov    DWORD PTR [rcx+0x48],r9d
   1400034cc:	mov    DWORD PTR [rcx+0x4c],r9d
   1400034d0:	mov    DWORD PTR [rcx+0x50],r9d
   1400034d4:	mov    DWORD PTR [rcx+0x54],r9d
   1400034d8:	mov    DWORD PTR [rcx+0x58],r9d
   1400034dc:	mov    DWORD PTR [rcx+0x5c],r9d
   1400034e0:	mov    DWORD PTR [rcx+0x60],r9d
   1400034e4:	mov    DWORD PTR [rcx+0x64],r9d
   1400034e8:	mov    DWORD PTR [rcx+0x8],0xb
   1400034ef:	mov    rax,rcx
   1400034f2:	ret    
   1400034f3:	int3   
   1400034f4:	int3   
   1400034f5:	int3   
   1400034f6:	int3   
   1400034f7:	int3   
   1400034f8:	int3   
   1400034f9:	int3   
   1400034fa:	int3   
   1400034fb:	int3   
   1400034fc:	int3   
   1400034fd:	int3   
   1400034fe:	int3   
   1400034ff:	int3   
   140003500:	mov    eax,DWORD PTR [rcx+0x28]
   140003503:	mov    DWORD PTR [rdx],eax
   140003505:	mov    eax,DWORD PTR [rcx+0x2c]
   140003508:	mov    DWORD PTR [rdx+0x4],eax
   14000350b:	mov    eax,DWORD PTR [rcx+0x30]
   14000350e:	mov    DWORD PTR [rdx+0x8],eax
   140003511:	mov    eax,DWORD PTR [rcx+0x34]
   140003514:	mov    DWORD PTR [rdx+0xc],eax
   140003517:	mov    rax,rdx
   14000351a:	ret    
   14000351b:	int3   
   14000351c:	int3   
   14000351d:	int3   
   14000351e:	int3   
   14000351f:	int3   
   140003520:	rex push rbx
   140003522:	sub    rsp,0x20
   140003526:	mov    rax,QWORD PTR [rcx+0x20]
   14000352a:	mov    rbx,rdx
   14000352d:	test   rax,rax
   140003530:	je     0x140003556
   140003532:	mov    rcx,QWORD PTR [rax+0x10]
   140003536:	mov    eax,DWORD PTR [rcx+0x28]
   140003539:	mov    DWORD PTR [rdx],eax
   14000353b:	mov    eax,DWORD PTR [rcx+0x2c]
   14000353e:	mov    DWORD PTR [rdx+0x4],eax
   140003541:	mov    eax,DWORD PTR [rcx+0x30]
   140003544:	mov    DWORD PTR [rdx+0x8],eax
   140003547:	mov    eax,DWORD PTR [rcx+0x34]
   14000354a:	mov    DWORD PTR [rdx+0xc],eax
   14000354d:	mov    rax,rdx
   140003550:	add    rsp,0x20
   140003554:	pop    rbx
   140003555:	ret    
   140003556:	mov    rax,QWORD PTR [rcx+0x18]
   14000355a:	test   rax,rax
   14000355d:	je     0x140003583
   14000355f:	mov    rcx,QWORD PTR [rax+0x20]
   140003563:	mov    eax,DWORD PTR [rcx+0x28]
   140003566:	mov    DWORD PTR [rdx],eax
   140003568:	mov    eax,DWORD PTR [rcx+0x2c]
   14000356b:	mov    DWORD PTR [rdx+0x4],eax
   14000356e:	mov    eax,DWORD PTR [rcx+0x30]
   140003571:	mov    DWORD PTR [rdx+0x8],eax
   140003574:	mov    eax,DWORD PTR [rcx+0x34]
   140003577:	mov    DWORD PTR [rdx+0xc],eax
   14000357a:	mov    rax,rbx
   14000357d:	add    rsp,0x20
   140003581:	pop    rbx
   140003582:	ret    
   140003583:	mov    rcx,QWORD PTR [rcx+0x10]
   140003587:	mov    rax,QWORD PTR [rcx]
   14000358a:	call   QWORD PTR [rax+0x38]
   14000358d:	mov    rax,rbx
   140003590:	add    rsp,0x20
   140003594:	pop    rbx
   140003595:	ret    
   140003596:	int3   
   140003597:	int3   
   140003598:	int3   
   140003599:	int3   
   14000359a:	int3   
   14000359b:	int3   
   14000359c:	int3   
   14000359d:	int3   
   14000359e:	int3   
   14000359f:	int3   
   1400035a0:	xor    r10d,r10d
   1400035a3:	lea    rax,[rip+0x1348e]        # 0x140016a38
   1400035aa:	mov    QWORD PTR [rcx],rax
   1400035ad:	mov    DWORD PTR [rcx+0x8],r10d
   1400035b1:	mov    rax,QWORD PTR [rdx]
   1400035b4:	mov    QWORD PTR [rcx+0x10],rax
   1400035b8:	mov    eax,DWORD PTR [rdx+0x8]
   1400035bb:	mov    DWORD PTR [rcx+0x18],eax
   1400035be:	mov    eax,DWORD PTR [rdx+0xc]
   1400035c1:	mov    DWORD PTR [rcx+0x1c],eax
   1400035c4:	mov    QWORD PTR [rcx+0x20],r8
   1400035c8:	mov    QWORD PTR [rcx+0x28],r9
   1400035cc:	mov    DWORD PTR [rcx+0x30],r10d
   1400035d0:	mov    DWORD PTR [rcx+0x34],r10d
   1400035d4:	mov    DWORD PTR [rcx+0x38],r10d
   1400035d8:	mov    DWORD PTR [rcx+0x3c],r10d
   1400035dc:	mov    DWORD PTR [rcx+0x40],r10d
   1400035e0:	mov    DWORD PTR [rcx+0x44],r10d
   1400035e4:	mov    DWORD PTR [rcx+0x48],r10d
   1400035e8:	mov    DWORD PTR [rcx+0x4c],r10d
   1400035ec:	mov    DWORD PTR [rcx+0x50],r10d
   1400035f0:	mov    DWORD PTR [rcx+0x54],r10d
   1400035f4:	mov    DWORD PTR [rcx+0x58],r10d
   1400035f8:	mov    DWORD PTR [rcx+0x5c],r10d
   1400035fc:	mov    DWORD PTR [rcx+0x60],r10d
   140003600:	mov    DWORD PTR [rcx+0x64],r10d
   140003604:	mov    DWORD PTR [rcx+0x68],r10d
   140003608:	mov    DWORD PTR [rcx+0x6c],r10d
   14000360c:	mov    DWORD PTR [rcx+0x70],r10d
   140003610:	mov    DWORD PTR [rcx+0x74],r10d
   140003614:	mov    DWORD PTR [rcx+0x78],r10d
   140003618:	mov    DWORD PTR [rcx+0x7c],r10d
   14000361c:	mov    DWORD PTR [rcx+0x80],r10d
   140003623:	mov    DWORD PTR [rcx+0x84],r10d
   14000362a:	mov    DWORD PTR [rcx+0x88],r10d
   140003631:	mov    DWORD PTR [rcx+0x8c],r10d
   140003638:	mov    DWORD PTR [rcx+0x8],0x1f
   14000363f:	mov    rax,rcx
   140003642:	ret    
   140003643:	int3   
   140003644:	int3   
   140003645:	int3   
   140003646:	int3   
   140003647:	int3   
   140003648:	int3   
   140003649:	int3   
   14000364a:	int3   
   14000364b:	int3   
   14000364c:	int3   
   14000364d:	int3   
   14000364e:	int3   
   14000364f:	int3   
   140003650:	mov    eax,DWORD PTR [rcx+0x80]
   140003656:	mov    DWORD PTR [rdx],eax
   140003658:	mov    eax,DWORD PTR [rcx+0x84]
   14000365e:	mov    DWORD PTR [rdx+0x4],eax
   140003661:	mov    eax,DWORD PTR [rcx+0x88]
   140003667:	mov    DWORD PTR [rdx+0x8],eax
   14000366a:	mov    eax,DWORD PTR [rcx+0x8c]
   140003670:	mov    DWORD PTR [rdx+0xc],eax
   140003673:	mov    rax,rdx
   140003676:	ret    
   140003677:	int3   
   140003678:	int3   
   140003679:	int3   
   14000367a:	int3   
   14000367b:	int3   
   14000367c:	int3   
   14000367d:	int3   
   14000367e:	int3   
   14000367f:	int3   
   140003680:	xor    r10d,r10d
   140003683:	lea    rax,[rip+0x133ae]        # 0x140016a38
   14000368a:	mov    QWORD PTR [rcx],rax
   14000368d:	mov    DWORD PTR [rcx+0x8],r10d
   140003691:	mov    rax,QWORD PTR [rdx]
   140003694:	mov    QWORD PTR [rcx+0x10],rax
   140003698:	mov    eax,DWORD PTR [rdx+0x8]
   14000369b:	mov    DWORD PTR [rcx+0x18],eax
   14000369e:	mov    eax,DWORD PTR [rdx+0xc]
   1400036a1:	mov    DWORD PTR [rcx+0x1c],eax
   1400036a4:	mov    QWORD PTR [rcx+0x20],r8
   1400036a8:	mov    QWORD PTR [rcx+0x28],r9
   1400036ac:	mov    DWORD PTR [rcx+0x30],r10d
   1400036b0:	mov    DWORD PTR [rcx+0x34],r10d
   1400036b4:	mov    DWORD PTR [rcx+0x38],r10d
   1400036b8:	mov    DWORD PTR [rcx+0x3c],r10d
   1400036bc:	mov    DWORD PTR [rcx+0x40],r10d
   1400036c0:	mov    DWORD PTR [rcx+0x44],r10d
   1400036c4:	mov    DWORD PTR [rcx+0x48],r10d
   1400036c8:	mov    DWORD PTR [rcx+0x4c],r10d
   1400036cc:	mov    DWORD PTR [rcx+0x50],r10d
   1400036d0:	mov    DWORD PTR [rcx+0x54],r10d
   1400036d4:	mov    DWORD PTR [rcx+0x58],r10d
   1400036d8:	mov    DWORD PTR [rcx+0x5c],r10d
   1400036dc:	mov    DWORD PTR [rcx+0x60],r10d
   1400036e0:	mov    DWORD PTR [rcx+0x64],r10d
   1400036e4:	mov    DWORD PTR [rcx+0x68],r10d
   1400036e8:	mov    DWORD PTR [rcx+0x6c],r10d
   1400036ec:	mov    DWORD PTR [rcx+0x70],r10d
   1400036f0:	mov    DWORD PTR [rcx+0x74],r10d
   1400036f4:	mov    DWORD PTR [rcx+0x78],r10d
   1400036f8:	mov    DWORD PTR [rcx+0x7c],r10d
   1400036fc:	lea    rax,[rip+0x13385]        # 0x140016a88
   140003703:	mov    DWORD PTR [rcx+0x80],r10d
   14000370a:	mov    DWORD PTR [rcx+0x84],r10d
   140003711:	mov    DWORD PTR [rcx+0x88],r10d
   140003718:	mov    DWORD PTR [rcx+0x8c],r10d
   14000371f:	mov    QWORD PTR [rcx],rax
   140003722:	mov    rax,rcx
   140003725:	mov    DWORD PTR [rcx+0x8],0x1e
   14000372c:	ret    
   14000372d:	int3   
   14000372e:	int3   
   14000372f:	int3   
   140003730:	xor    r8d,r8d
   140003733:	lea    rax,[rip+0x1339e]        # 0x140016ad8
   14000373a:	mov    QWORD PTR [rcx],rax
   14000373d:	mov    DWORD PTR [rcx+0x8],r8d
   140003741:	mov    rax,QWORD PTR [rdx]
   140003744:	mov    QWORD PTR [rcx+0x10],rax
   140003748:	mov    eax,DWORD PTR [rdx+0x8]
   14000374b:	mov    DWORD PTR [rcx+0x18],eax
   14000374e:	mov    eax,DWORD PTR [rdx+0xc]
   140003751:	mov    DWORD PTR [rcx+0x1c],eax
   140003754:	mov    QWORD PTR [rcx+0x20],rcx
   140003758:	mov    DWORD PTR [rcx+0x28],r8d
   14000375c:	mov    DWORD PTR [rcx+0x2c],r8d
   140003760:	mov    DWORD PTR [rcx+0x30],r8d
   140003764:	mov    DWORD PTR [rcx+0x34],r8d
   140003768:	mov    DWORD PTR [rcx+0x38],r8d
   14000376c:	mov    DWORD PTR [rcx+0x3c],r8d
   140003770:	mov    DWORD PTR [rcx+0x40],r8d
   140003774:	mov    DWORD PTR [rcx+0x44],r8d
   140003778:	mov    rax,rcx
   14000377b:	mov    DWORD PTR [rcx+0x8],0x1c
   140003782:	ret    
   140003783:	int3   
   140003784:	int3   
   140003785:	int3   
   140003786:	int3   
   140003787:	int3   
   140003788:	int3   
   140003789:	int3   
   14000378a:	int3   
   14000378b:	int3   
   14000378c:	int3   
   14000378d:	int3   
   14000378e:	int3   
   14000378f:	int3   
   140003790:	xor    r9d,r9d
   140003793:	lea    rax,[rip+0x1333e]        # 0x140016ad8
   14000379a:	mov    QWORD PTR [rcx],rax
   14000379d:	mov    DWORD PTR [rcx+0x8],r9d
   1400037a1:	mov    rax,QWORD PTR [r8]
   1400037a4:	mov    QWORD PTR [rcx+0x10],rax
   1400037a8:	mov    eax,DWORD PTR [r8+0x8]
   1400037ac:	mov    DWORD PTR [rcx+0x18],eax
   1400037af:	mov    eax,DWORD PTR [r8+0xc]
   1400037b3:	mov    DWORD PTR [rcx+0x1c],eax
   1400037b6:	mov    DWORD PTR [rcx+0x28],r9d
   1400037ba:	mov    DWORD PTR [rcx+0x2c],r9d
   1400037be:	mov    DWORD PTR [rcx+0x30],r9d
   1400037c2:	mov    DWORD PTR [rcx+0x34],r9d
   1400037c6:	mov    DWORD PTR [rcx+0x38],r9d
   1400037ca:	mov    DWORD PTR [rcx+0x3c],r9d
   1400037ce:	mov    DWORD PTR [rcx+0x40],r9d
   1400037d2:	mov    DWORD PTR [rcx+0x44],r9d
   1400037d6:	mov    DWORD PTR [rcx+0x8],0x1c
   1400037dd:	mov    rax,QWORD PTR [rdx+0x20]
   1400037e1:	mov    QWORD PTR [rcx+0x20],rax
   1400037e5:	mov    QWORD PTR [rdx+0x20],rcx
   1400037e9:	mov    rax,rcx
   1400037ec:	ret    
   1400037ed:	int3   
   1400037ee:	int3   
   1400037ef:	int3   
   1400037f0:	rex push rbx
   1400037f2:	sub    rsp,0x30
   1400037f6:	cmp    QWORD PTR [rcx+0x20],0x0
   1400037fb:	mov    rbx,rdx
   1400037fe:	je     0x140003814
   140003800:	mov    rcx,QWORD PTR [rcx+0x20]
   140003804:	lea    rdx,[rsp+0x20]
   140003809:	mov    rax,QWORD PTR [rcx]
   14000380c:	call   QWORD PTR [rax+0x38]
   14000380f:	mov    rcx,rax
   140003812:	jmp    0x140003818
   140003814:	add    rcx,0x38
   140003818:	mov    eax,DWORD PTR [rcx]
   14000381a:	mov    DWORD PTR [rbx],eax
   14000381c:	mov    eax,DWORD PTR [rcx+0x4]
   14000381f:	mov    DWORD PTR [rbx+0x4],eax
   140003822:	mov    eax,DWORD PTR [rcx+0x8]
   140003825:	mov    DWORD PTR [rbx+0x8],eax
   140003828:	mov    eax,DWORD PTR [rcx+0xc]
   14000382b:	mov    DWORD PTR [rbx+0xc],eax
   14000382e:	mov    rax,rbx
   140003831:	add    rsp,0x30
   140003835:	pop    rbx
   140003836:	ret    
   140003837:	int3   
   140003838:	int3   
   140003839:	int3   
   14000383a:	int3   
   14000383b:	int3   
   14000383c:	int3   
   14000383d:	int3   
   14000383e:	int3   
   14000383f:	int3   
   140003840:	rex push rbx
   140003842:	sub    rsp,0x30
   140003846:	cmp    QWORD PTR [rcx+0x10],0x0
   14000384b:	mov    rbx,rdx
   14000384e:	je     0x140003864
   140003850:	mov    rcx,QWORD PTR [rcx+0x10]
   140003854:	lea    rdx,[rsp+0x20]
   140003859:	mov    rax,QWORD PTR [rcx]
   14000385c:	call   QWORD PTR [rax+0x30]
   14000385f:	mov    r11,rax
   140003862:	jmp    0x14000387b
   140003864:	xor    eax,eax
   140003866:	lea    r11,[rsp+0x20]
   14000386b:	mov    DWORD PTR [rsp+0x20],eax
   14000386f:	mov    DWORD PTR [rsp+0x24],eax
   140003873:	mov    DWORD PTR [rsp+0x28],eax
   140003877:	mov    DWORD PTR [rsp+0x2c],eax
   14000387b:	mov    eax,DWORD PTR [r11]
   14000387e:	mov    DWORD PTR [rbx],eax
   140003880:	mov    eax,DWORD PTR [r11+0x4]
   140003884:	mov    DWORD PTR [rbx+0x4],eax
   140003887:	mov    eax,DWORD PTR [r11+0x8]
   14000388b:	mov    DWORD PTR [rbx+0x8],eax
   14000388e:	mov    eax,DWORD PTR [r11+0xc]
   140003892:	mov    DWORD PTR [rbx+0xc],eax
   140003895:	mov    rax,rbx
   140003898:	add    rsp,0x30
   14000389c:	pop    rbx
   14000389d:	ret    
   14000389e:	int3   
   14000389f:	int3   
   1400038a0:	rex push rbx
   1400038a2:	sub    rsp,0x30
   1400038a6:	cmp    QWORD PTR [rcx+0x10],0x0
   1400038ab:	mov    rbx,rdx
   1400038ae:	je     0x1400038c4
   1400038b0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400038b4:	lea    rdx,[rsp+0x20]
   1400038b9:	mov    rax,QWORD PTR [rcx]
   1400038bc:	call   QWORD PTR [rax+0x38]
   1400038bf:	mov    r11,rax
   1400038c2:	jmp    0x1400038db
   1400038c4:	xor    eax,eax
   1400038c6:	lea    r11,[rsp+0x20]
   1400038cb:	mov    DWORD PTR [rsp+0x20],eax
   1400038cf:	mov    DWORD PTR [rsp+0x24],eax
   1400038d3:	mov    DWORD PTR [rsp+0x28],eax
   1400038d7:	mov    DWORD PTR [rsp+0x2c],eax
   1400038db:	mov    eax,DWORD PTR [r11]
   1400038de:	mov    DWORD PTR [rbx],eax
   1400038e0:	mov    eax,DWORD PTR [r11+0x4]
   1400038e4:	mov    DWORD PTR [rbx+0x4],eax
   1400038e7:	mov    eax,DWORD PTR [r11+0x8]
   1400038eb:	mov    DWORD PTR [rbx+0x8],eax
   1400038ee:	mov    eax,DWORD PTR [r11+0xc]
   1400038f2:	mov    DWORD PTR [rbx+0xc],eax
   1400038f5:	mov    rax,rbx
   1400038f8:	add    rsp,0x30
   1400038fc:	pop    rbx
   1400038fd:	ret    
   1400038fe:	int3   
   1400038ff:	int3   
   140003900:	rex push rbx
   140003902:	sub    rsp,0x20
   140003906:	mov    rcx,QWORD PTR [rcx+0x10]
   14000390a:	mov    rbx,rdx
   14000390d:	mov    rax,QWORD PTR [rcx]
   140003910:	call   QWORD PTR [rax+0x30]
   140003913:	mov    rax,rbx
   140003916:	add    rsp,0x20
   14000391a:	pop    rbx
   14000391b:	ret    
   14000391c:	int3   
   14000391d:	int3   
   14000391e:	int3   
   14000391f:	int3   
   140003920:	lea    rax,[rip+0x13391]        # 0x140016cb8
   140003927:	mov    QWORD PTR [rcx],rax
   14000392a:	xor    eax,eax
   14000392c:	mov    DWORD PTR [rcx+0x10],eax
   14000392f:	mov    DWORD PTR [rcx+0x14],eax
   140003932:	mov    DWORD PTR [rcx+0x18],eax
   140003935:	mov    DWORD PTR [rcx+0x1c],eax
   140003938:	mov    DWORD PTR [rcx+0x20],eax
   14000393b:	mov    DWORD PTR [rcx+0x24],eax
   14000393e:	mov    DWORD PTR [rcx+0x28],eax
   140003941:	mov    DWORD PTR [rcx+0x2c],eax
   140003944:	mov    DWORD PTR [rcx+0x8],0xe
   14000394b:	mov    rax,rcx
   14000394e:	ret    
   14000394f:	int3   
   140003950:	mov    eax,DWORD PTR [rcx+0x20]
   140003953:	mov    DWORD PTR [rdx],eax
   140003955:	mov    eax,DWORD PTR [rcx+0x24]
   140003958:	mov    DWORD PTR [rdx+0x4],eax
   14000395b:	mov    eax,DWORD PTR [rcx+0x28]
   14000395e:	mov    DWORD PTR [rdx+0x8],eax
   140003961:	mov    eax,DWORD PTR [rcx+0x2c]
   140003964:	mov    DWORD PTR [rdx+0xc],eax
   140003967:	mov    rax,rdx
   14000396a:	ret    
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	mov    QWORD PTR [rcx+0x10],rcx
   140003974:	xor    r8d,r8d
   140003977:	lea    rax,[rip+0x1338a]        # 0x140016d08
   14000397e:	mov    QWORD PTR [rcx],rax
   140003981:	mov    DWORD PTR [rcx+0x8],r8d
   140003985:	mov    rax,QWORD PTR [rdx]
   140003988:	mov    QWORD PTR [rcx+0x18],rax
   14000398c:	mov    eax,DWORD PTR [rdx+0x8]
   14000398f:	mov    DWORD PTR [rcx+0x20],eax
   140003992:	mov    eax,DWORD PTR [rdx+0xc]
   140003995:	mov    DWORD PTR [rcx+0x24],eax
   140003998:	mov    DWORD PTR [rcx+0x28],r8d
   14000399c:	mov    DWORD PTR [rcx+0x2c],r8d
   1400039a0:	mov    DWORD PTR [rcx+0x30],r8d
   1400039a4:	mov    DWORD PTR [rcx+0x34],r8d
   1400039a8:	mov    rax,rcx
   1400039ab:	mov    DWORD PTR [rcx+0x8],0x5a
   1400039b2:	ret    
   1400039b3:	int3   
   1400039b4:	int3   
   1400039b5:	int3   
   1400039b6:	int3   
   1400039b7:	int3   
   1400039b8:	int3   
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	xor    r8d,r8d
   1400039c3:	lea    rax,[rip+0x1338e]        # 0x140016d58
   1400039ca:	mov    QWORD PTR [rcx],rax
   1400039cd:	mov    DWORD PTR [rcx+0x8],r8d
   1400039d1:	mov    rax,QWORD PTR [rdx]
   1400039d4:	mov    QWORD PTR [rcx+0x10],rax
   1400039d8:	mov    eax,DWORD PTR [rdx+0x8]
   1400039db:	mov    DWORD PTR [rcx+0x18],eax
   1400039de:	mov    eax,DWORD PTR [rdx+0xc]
   1400039e1:	mov    DWORD PTR [rcx+0x1c],eax
   1400039e4:	mov    QWORD PTR [rcx+0x20],r8
   1400039e8:	mov    QWORD PTR [rcx+0x28],r8
   1400039ec:	mov    DWORD PTR [rcx+0x30],r8d
   1400039f0:	mov    DWORD PTR [rcx+0x34],r8d
   1400039f4:	mov    DWORD PTR [rcx+0x38],r8d
   1400039f8:	mov    DWORD PTR [rcx+0x3c],r8d
   1400039fc:	mov    DWORD PTR [rcx+0x40],r8d
   140003a00:	mov    DWORD PTR [rcx+0x44],r8d
   140003a04:	mov    DWORD PTR [rcx+0x48],r8d
   140003a08:	mov    DWORD PTR [rcx+0x4c],r8d
   140003a0c:	mov    DWORD PTR [rcx+0x50],r8d
   140003a10:	mov    DWORD PTR [rcx+0x54],r8d
   140003a14:	mov    DWORD PTR [rcx+0x58],r8d
   140003a18:	mov    DWORD PTR [rcx+0x5c],r8d
   140003a1c:	mov    DWORD PTR [rcx+0x60],r8d
   140003a20:	mov    DWORD PTR [rcx+0x64],r8d
   140003a24:	mov    DWORD PTR [rcx+0x68],r8d
   140003a28:	mov    DWORD PTR [rcx+0x6c],r8d
   140003a2c:	mov    DWORD PTR [rcx+0x70],r8d
   140003a30:	mov    DWORD PTR [rcx+0x74],r8d
   140003a34:	mov    DWORD PTR [rcx+0x78],r8d
   140003a38:	mov    DWORD PTR [rcx+0x7c],r8d
   140003a3c:	mov    DWORD PTR [rcx+0x80],r8d
   140003a43:	mov    DWORD PTR [rcx+0x84],r8d
   140003a4a:	mov    DWORD PTR [rcx+0x88],r8d
   140003a51:	mov    DWORD PTR [rcx+0x8c],r8d
   140003a58:	mov    DWORD PTR [rcx+0x90],r8d
   140003a5f:	mov    DWORD PTR [rcx+0x94],r8d
   140003a66:	mov    rax,rcx
   140003a69:	mov    DWORD PTR [rcx+0x8],0x50
   140003a70:	ret    
   140003a71:	int3   
   140003a72:	int3   
   140003a73:	int3   
   140003a74:	int3   
   140003a75:	int3   
   140003a76:	int3   
   140003a77:	int3   
   140003a78:	int3   
   140003a79:	int3   
   140003a7a:	int3   
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	lea    rax,[rip+0x132d1]        # 0x140016d58
   140003a87:	mov    QWORD PTR [rcx],rax
   140003a8a:	xor    eax,eax
   140003a8c:	mov    QWORD PTR [rcx+0x10],rax
   140003a90:	mov    DWORD PTR [rcx+0x18],eax
   140003a93:	mov    DWORD PTR [rcx+0x1c],eax
   140003a96:	mov    QWORD PTR [rcx+0x20],rdx
   140003a9a:	mov    QWORD PTR [rcx+0x28],rax
   140003a9e:	mov    DWORD PTR [rcx+0x30],eax
   140003aa1:	mov    DWORD PTR [rcx+0x34],eax
   140003aa4:	mov    DWORD PTR [rcx+0x38],eax
   140003aa7:	mov    DWORD PTR [rcx+0x3c],eax
   140003aaa:	mov    DWORD PTR [rcx+0x40],eax
   140003aad:	mov    DWORD PTR [rcx+0x44],eax
   140003ab0:	mov    DWORD PTR [rcx+0x48],eax
   140003ab3:	mov    DWORD PTR [rcx+0x4c],eax
   140003ab6:	mov    DWORD PTR [rcx+0x50],eax
   140003ab9:	mov    DWORD PTR [rcx+0x54],eax
   140003abc:	mov    DWORD PTR [rcx+0x58],eax
   140003abf:	mov    DWORD PTR [rcx+0x5c],eax
   140003ac2:	mov    DWORD PTR [rcx+0x60],eax
   140003ac5:	mov    DWORD PTR [rcx+0x64],eax
   140003ac8:	mov    DWORD PTR [rcx+0x68],eax
   140003acb:	mov    DWORD PTR [rcx+0x6c],eax
   140003ace:	mov    DWORD PTR [rcx+0x70],eax
   140003ad1:	mov    DWORD PTR [rcx+0x74],eax
   140003ad4:	mov    DWORD PTR [rcx+0x78],eax
   140003ad7:	mov    DWORD PTR [rcx+0x7c],eax
   140003ada:	mov    DWORD PTR [rcx+0x80],eax
   140003ae0:	mov    DWORD PTR [rcx+0x84],eax
   140003ae6:	mov    DWORD PTR [rcx+0x88],eax
   140003aec:	mov    DWORD PTR [rcx+0x8c],eax
   140003af2:	mov    DWORD PTR [rcx+0x90],eax
   140003af8:	mov    DWORD PTR [rcx+0x94],eax
   140003afe:	mov    DWORD PTR [rcx+0x8],0x50
   140003b05:	mov    rax,rcx
   140003b08:	ret    
   140003b09:	int3   
   140003b0a:	int3   
   140003b0b:	int3   
   140003b0c:	int3   
   140003b0d:	int3   
   140003b0e:	int3   
   140003b0f:	int3   
   140003b10:	mov    eax,DWORD PTR [rcx+0x38]
   140003b13:	mov    DWORD PTR [rdx],eax
   140003b15:	mov    eax,DWORD PTR [rcx+0x3c]
   140003b18:	mov    DWORD PTR [rdx+0x4],eax
   140003b1b:	mov    eax,DWORD PTR [rcx+0x40]
   140003b1e:	mov    DWORD PTR [rdx+0x8],eax
   140003b21:	mov    eax,DWORD PTR [rcx+0x44]
   140003b24:	mov    DWORD PTR [rdx+0xc],eax
   140003b27:	mov    rax,rdx
   140003b2a:	ret    
   140003b2b:	int3   
   140003b2c:	int3   
   140003b2d:	int3   
   140003b2e:	int3   
   140003b2f:	int3   
   140003b30:	mov    eax,DWORD PTR [rcx+0x88]
   140003b36:	mov    DWORD PTR [rdx],eax
   140003b38:	mov    eax,DWORD PTR [rcx+0x8c]
   140003b3e:	mov    DWORD PTR [rdx+0x4],eax
   140003b41:	mov    eax,DWORD PTR [rcx+0x90]
   140003b47:	mov    DWORD PTR [rdx+0x8],eax
   140003b4a:	mov    eax,DWORD PTR [rcx+0x94]
   140003b50:	mov    DWORD PTR [rdx+0xc],eax
   140003b53:	mov    rax,rdx
   140003b56:	ret    
   140003b57:	int3   
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	rex push rbx
   140003b62:	sub    rsp,0x20
   140003b66:	mov    rcx,QWORD PTR [rcx+0x18]
   140003b6a:	mov    rbx,rdx
   140003b6d:	mov    rax,QWORD PTR [rcx]
   140003b70:	call   QWORD PTR [rax+0x30]
   140003b73:	mov    rax,rbx
   140003b76:	add    rsp,0x20
   140003b7a:	pop    rbx
   140003b7b:	ret    
   140003b7c:	int3   
   140003b7d:	int3   
   140003b7e:	int3   
   140003b7f:	int3   
   140003b80:	rex push rbx
   140003b82:	sub    rsp,0x40
   140003b86:	cmp    QWORD PTR [rcx+0x10],0x0
   140003b8b:	mov    rbx,rdx
   140003b8e:	je     0x140003b9b
   140003b90:	mov    rcx,QWORD PTR [rcx+0x10]
   140003b94:	lea    rdx,[rsp+0x20]
   140003b99:	jmp    0x140003ba4
   140003b9b:	mov    rcx,QWORD PTR [rcx+0x18]
   140003b9f:	lea    rdx,[rsp+0x30]
   140003ba4:	mov    rax,QWORD PTR [rcx]
   140003ba7:	call   QWORD PTR [rax+0x38]
   140003baa:	mov    r11,rax
   140003bad:	mov    eax,DWORD PTR [rax]
   140003baf:	mov    DWORD PTR [rbx],eax
   140003bb1:	mov    eax,DWORD PTR [r11+0x4]
   140003bb5:	mov    DWORD PTR [rbx+0x4],eax
   140003bb8:	mov    eax,DWORD PTR [r11+0x8]
   140003bbc:	mov    DWORD PTR [rbx+0x8],eax
   140003bbf:	mov    eax,DWORD PTR [r11+0xc]
   140003bc3:	mov    DWORD PTR [rbx+0xc],eax
   140003bc6:	mov    rax,rbx
   140003bc9:	add    rsp,0x40
   140003bcd:	pop    rbx
   140003bce:	ret    
   140003bcf:	int3   
   140003bd0:	rex push rbx
   140003bd2:	sub    rsp,0x40
   140003bd6:	cmp    QWORD PTR [rcx+0x18],0x0
   140003bdb:	mov    rbx,rdx
   140003bde:	je     0x140003beb
   140003be0:	mov    rcx,QWORD PTR [rcx+0x18]
   140003be4:	lea    rdx,[rsp+0x20]
   140003be9:	jmp    0x140003bf4
   140003beb:	mov    rcx,QWORD PTR [rcx+0x10]
   140003bef:	lea    rdx,[rsp+0x30]
   140003bf4:	mov    rax,QWORD PTR [rcx]
   140003bf7:	call   QWORD PTR [rax+0x38]
   140003bfa:	mov    r11,rax
   140003bfd:	mov    eax,DWORD PTR [rax]
   140003bff:	mov    DWORD PTR [rbx],eax
   140003c01:	mov    eax,DWORD PTR [r11+0x4]
   140003c05:	mov    DWORD PTR [rbx+0x4],eax
   140003c08:	mov    eax,DWORD PTR [r11+0x8]
   140003c0c:	mov    DWORD PTR [rbx+0x8],eax
   140003c0f:	mov    eax,DWORD PTR [r11+0xc]
   140003c13:	mov    DWORD PTR [rbx+0xc],eax
   140003c16:	mov    rax,rbx
   140003c19:	add    rsp,0x40
   140003c1d:	pop    rbx
   140003c1e:	ret    
   140003c1f:	int3   
   140003c20:	rex push rbx
   140003c22:	sub    rsp,0x20
   140003c26:	cmp    QWORD PTR [rcx+0x10],0x0
   140003c2b:	mov    rbx,rdx
   140003c2e:	je     0x140003c43
   140003c30:	mov    rcx,QWORD PTR [rcx+0x10]
   140003c34:	mov    rax,QWORD PTR [rcx]
   140003c37:	call   QWORD PTR [rax+0x30]
   140003c3a:	mov    rax,rbx
   140003c3d:	add    rsp,0x20
   140003c41:	pop    rbx
   140003c42:	ret    
   140003c43:	cmp    QWORD PTR [rcx+0x18],0x0
   140003c48:	je     0x140003c5d
   140003c4a:	mov    rcx,QWORD PTR [rcx+0x18]
   140003c4e:	mov    rax,QWORD PTR [rcx]
   140003c51:	call   QWORD PTR [rax+0x30]
   140003c54:	mov    rax,rbx
   140003c57:	add    rsp,0x20
   140003c5b:	pop    rbx
   140003c5c:	ret    
   140003c5d:	xor    eax,eax
   140003c5f:	mov    DWORD PTR [rdx],eax
   140003c61:	mov    DWORD PTR [rdx+0x4],eax
   140003c64:	mov    DWORD PTR [rdx+0x8],eax
   140003c67:	mov    DWORD PTR [rdx+0xc],eax
   140003c6a:	mov    rax,rbx
   140003c6d:	add    rsp,0x20
   140003c71:	pop    rbx
   140003c72:	ret    
   140003c73:	int3   
   140003c74:	int3   
   140003c75:	int3   
   140003c76:	int3   
   140003c77:	int3   
   140003c78:	int3   
   140003c79:	int3   
   140003c7a:	int3   
   140003c7b:	int3   
   140003c7c:	int3   
   140003c7d:	int3   
   140003c7e:	int3   
   140003c7f:	int3   
   140003c80:	rex push rbx
   140003c82:	sub    rsp,0x20
   140003c86:	cmp    QWORD PTR [rcx+0x18],0x0
   140003c8b:	mov    rbx,rdx
   140003c8e:	je     0x140003ca3
   140003c90:	mov    rcx,QWORD PTR [rcx+0x18]
   140003c94:	mov    rax,QWORD PTR [rcx]
   140003c97:	call   QWORD PTR [rax+0x38]
   140003c9a:	mov    rax,rbx
   140003c9d:	add    rsp,0x20
   140003ca1:	pop    rbx
   140003ca2:	ret    
   140003ca3:	cmp    QWORD PTR [rcx+0x10],0x0
   140003ca8:	je     0x140003cbd
   140003caa:	mov    rcx,QWORD PTR [rcx+0x10]
   140003cae:	mov    rax,QWORD PTR [rcx]
   140003cb1:	call   QWORD PTR [rax+0x38]
   140003cb4:	mov    rax,rbx
   140003cb7:	add    rsp,0x20
   140003cbb:	pop    rbx
   140003cbc:	ret    
   140003cbd:	xor    eax,eax
   140003cbf:	mov    DWORD PTR [rdx],eax
   140003cc1:	mov    DWORD PTR [rdx+0x4],eax
   140003cc4:	mov    DWORD PTR [rdx+0x8],eax
   140003cc7:	mov    DWORD PTR [rdx+0xc],eax
   140003cca:	mov    rax,rbx
   140003ccd:	add    rsp,0x20
   140003cd1:	pop    rbx
   140003cd2:	ret    
   140003cd3:	int3   
   140003cd4:	int3   
   140003cd5:	int3   
   140003cd6:	int3   
   140003cd7:	int3   
   140003cd8:	int3   
   140003cd9:	int3   
   140003cda:	int3   
   140003cdb:	int3   
   140003cdc:	int3   
   140003cdd:	int3   
   140003cde:	int3   
   140003cdf:	int3   
   140003ce0:	xor    r9d,r9d
   140003ce3:	lea    rax,[rip+0x132ee]        # 0x140016fd8
   140003cea:	mov    QWORD PTR [rcx],rax
   140003ced:	mov    DWORD PTR [rcx+0x8],r9d
   140003cf1:	mov    rax,QWORD PTR [rdx]
   140003cf4:	mov    QWORD PTR [rcx+0x10],rax
   140003cf8:	mov    eax,DWORD PTR [rdx+0x8]
   140003cfb:	mov    DWORD PTR [rcx+0x18],eax
   140003cfe:	mov    eax,DWORD PTR [rdx+0xc]
   140003d01:	mov    DWORD PTR [rcx+0x1c],eax
   140003d04:	mov    rax,QWORD PTR [r8]
   140003d07:	mov    QWORD PTR [rcx+0x20],rax
   140003d0b:	mov    eax,DWORD PTR [r8+0x8]
   140003d0f:	mov    DWORD PTR [rcx+0x28],eax
   140003d12:	mov    eax,DWORD PTR [r8+0xc]
   140003d16:	mov    DWORD PTR [rcx+0x2c],eax
   140003d19:	mov    QWORD PTR [rcx+0x30],rcx
   140003d1d:	mov    DWORD PTR [rcx+0x38],r9d
   140003d21:	mov    DWORD PTR [rcx+0x3c],r9d
   140003d25:	mov    DWORD PTR [rcx+0x40],r9d
   140003d29:	mov    DWORD PTR [rcx+0x44],r9d
   140003d2d:	mov    DWORD PTR [rcx+0x48],r9d
   140003d31:	mov    DWORD PTR [rcx+0x4c],r9d
   140003d35:	mov    DWORD PTR [rcx+0x50],r9d
   140003d39:	mov    DWORD PTR [rcx+0x54],r9d
   140003d3d:	mov    DWORD PTR [rcx+0x58],r9d
   140003d41:	mov    DWORD PTR [rcx+0x5c],r9d
   140003d45:	mov    DWORD PTR [rcx+0x60],r9d
   140003d49:	mov    DWORD PTR [rcx+0x64],r9d
   140003d4d:	mov    rax,rcx
   140003d50:	mov    DWORD PTR [rcx+0x8],0x58
   140003d57:	ret    
   140003d58:	int3   
   140003d59:	int3   
   140003d5a:	int3   
   140003d5b:	int3   
   140003d5c:	int3   
   140003d5d:	int3   
   140003d5e:	int3   
   140003d5f:	int3   
   140003d60:	xor    r10d,r10d
   140003d63:	lea    rax,[rip+0x1326e]        # 0x140016fd8
   140003d6a:	mov    QWORD PTR [rcx],rax
   140003d6d:	mov    DWORD PTR [rcx+0x8],r10d
   140003d71:	mov    rax,QWORD PTR [r8]
   140003d74:	mov    QWORD PTR [rcx+0x10],rax
   140003d78:	mov    eax,DWORD PTR [r8+0x8]
   140003d7c:	mov    DWORD PTR [rcx+0x18],eax
   140003d7f:	mov    eax,DWORD PTR [r8+0xc]
   140003d83:	mov    DWORD PTR [rcx+0x1c],eax
   140003d86:	mov    rax,QWORD PTR [r9]
   140003d89:	mov    QWORD PTR [rcx+0x20],rax
   140003d8d:	mov    eax,DWORD PTR [r9+0x8]
   140003d91:	mov    DWORD PTR [rcx+0x28],eax
   140003d94:	mov    eax,DWORD PTR [r9+0xc]
   140003d98:	mov    DWORD PTR [rcx+0x2c],eax
   140003d9b:	mov    DWORD PTR [rcx+0x38],r10d
   140003d9f:	mov    DWORD PTR [rcx+0x3c],r10d
   140003da3:	mov    DWORD PTR [rcx+0x40],r10d
   140003da7:	mov    DWORD PTR [rcx+0x44],r10d
   140003dab:	mov    DWORD PTR [rcx+0x48],r10d
   140003daf:	mov    DWORD PTR [rcx+0x4c],r10d
   140003db3:	mov    DWORD PTR [rcx+0x50],r10d
   140003db7:	mov    DWORD PTR [rcx+0x54],r10d
   140003dbb:	mov    DWORD PTR [rcx+0x58],r10d
   140003dbf:	mov    DWORD PTR [rcx+0x5c],r10d
   140003dc3:	mov    DWORD PTR [rcx+0x60],r10d
   140003dc7:	mov    DWORD PTR [rcx+0x64],r10d
   140003dcb:	mov    DWORD PTR [rcx+0x8],0x58
   140003dd2:	mov    rax,QWORD PTR [rdx+0x30]
   140003dd6:	mov    QWORD PTR [rcx+0x30],rax
   140003dda:	mov    QWORD PTR [rdx+0x30],rcx
   140003dde:	mov    rax,rcx
   140003de1:	ret    
   140003de2:	int3   
   140003de3:	int3   
   140003de4:	int3   
   140003de5:	int3   
   140003de6:	int3   
   140003de7:	int3   
   140003de8:	int3   
   140003de9:	int3   
   140003dea:	int3   
   140003deb:	int3   
   140003dec:	int3   
   140003ded:	int3   
   140003dee:	int3   
   140003def:	int3   
   140003df0:	mov    eax,DWORD PTR [rcx+0x48]
   140003df3:	mov    DWORD PTR [rdx],eax
   140003df5:	mov    eax,DWORD PTR [rcx+0x4c]
   140003df8:	mov    DWORD PTR [rdx+0x4],eax
   140003dfb:	mov    eax,DWORD PTR [rcx+0x50]
   140003dfe:	mov    DWORD PTR [rdx+0x8],eax
   140003e01:	mov    eax,DWORD PTR [rcx+0x54]
   140003e04:	mov    DWORD PTR [rdx+0xc],eax
   140003e07:	mov    rax,rdx
   140003e0a:	ret    
   140003e0b:	int3   
   140003e0c:	int3   
   140003e0d:	int3   
   140003e0e:	int3   
   140003e0f:	int3   
   140003e10:	rex push rbx
   140003e12:	sub    rsp,0x30
   140003e16:	cmp    QWORD PTR [rcx+0x30],0x0
   140003e1b:	mov    rbx,rdx
   140003e1e:	je     0x140003e34
   140003e20:	mov    rcx,QWORD PTR [rcx+0x30]
   140003e24:	lea    rdx,[rsp+0x20]
   140003e29:	mov    rax,QWORD PTR [rcx]
   140003e2c:	call   QWORD PTR [rax+0x38]
   140003e2f:	mov    rcx,rax
   140003e32:	jmp    0x140003e38
   140003e34:	add    rcx,0x58
   140003e38:	mov    eax,DWORD PTR [rcx]
   140003e3a:	mov    DWORD PTR [rbx],eax
   140003e3c:	mov    eax,DWORD PTR [rcx+0x4]
   140003e3f:	mov    DWORD PTR [rbx+0x4],eax
   140003e42:	mov    eax,DWORD PTR [rcx+0x8]
   140003e45:	mov    DWORD PTR [rbx+0x8],eax
   140003e48:	mov    eax,DWORD PTR [rcx+0xc]
   140003e4b:	mov    DWORD PTR [rbx+0xc],eax
   140003e4e:	mov    rax,rbx
   140003e51:	add    rsp,0x30
   140003e55:	pop    rbx
   140003e56:	ret    
   140003e57:	int3   
   140003e58:	int3   
   140003e59:	int3   
   140003e5a:	int3   
   140003e5b:	int3   
   140003e5c:	int3   
   140003e5d:	int3   
   140003e5e:	int3   
   140003e5f:	int3   
   140003e60:	mov    r8,QWORD PTR [rcx+0x10]
   140003e64:	mov    eax,DWORD PTR [r8+0x28]
   140003e68:	mov    DWORD PTR [rdx],eax
   140003e6a:	mov    eax,DWORD PTR [r8+0x2c]
   140003e6e:	mov    DWORD PTR [rdx+0x4],eax
   140003e71:	mov    eax,DWORD PTR [r8+0x30]
   140003e75:	mov    DWORD PTR [rdx+0x8],eax
   140003e78:	mov    eax,DWORD PTR [r8+0x34]
   140003e7c:	mov    DWORD PTR [rdx+0xc],eax
   140003e7f:	mov    rax,rdx
   140003e82:	ret    
   140003e83:	int3   
   140003e84:	int3   
   140003e85:	int3   
   140003e86:	int3   
   140003e87:	int3   
   140003e88:	int3   
   140003e89:	int3   
   140003e8a:	int3   
   140003e8b:	int3   
   140003e8c:	int3   
   140003e8d:	int3   
   140003e8e:	int3   
   140003e8f:	int3   
   140003e90:	mov    r8,QWORD PTR [rcx+0x18]
   140003e94:	mov    eax,DWORD PTR [r8+0x28]
   140003e98:	mov    DWORD PTR [rdx],eax
   140003e9a:	mov    eax,DWORD PTR [r8+0x2c]
   140003e9e:	mov    DWORD PTR [rdx+0x4],eax
   140003ea1:	mov    eax,DWORD PTR [r8+0x30]
   140003ea5:	mov    DWORD PTR [rdx+0x8],eax
   140003ea8:	mov    eax,DWORD PTR [r8+0x34]
   140003eac:	mov    DWORD PTR [rdx+0xc],eax
   140003eaf:	mov    rax,rdx
   140003eb2:	ret    
   140003eb3:	int3   
   140003eb4:	int3   
   140003eb5:	int3   
   140003eb6:	int3   
   140003eb7:	int3   
   140003eb8:	int3   
   140003eb9:	int3   
   140003eba:	int3   
   140003ebb:	int3   
   140003ebc:	int3   
   140003ebd:	int3   
   140003ebe:	int3   
   140003ebf:	int3   
   140003ec0:	cmp    BYTE PTR [rcx+0x38],0x0
   140003ec4:	je     0x140003eee
   140003ec6:	mov    r8,QWORD PTR [rcx+0x18]
   140003eca:	test   r8,r8
   140003ecd:	je     0x140003eee
   140003ecf:	mov    eax,DWORD PTR [r8+0x28]
   140003ed3:	mov    DWORD PTR [rdx],eax
   140003ed5:	mov    eax,DWORD PTR [r8+0x2c]
   140003ed9:	mov    DWORD PTR [rdx+0x4],eax
   140003edc:	mov    eax,DWORD PTR [r8+0x30]
   140003ee0:	mov    DWORD PTR [rdx+0x8],eax
   140003ee3:	mov    eax,DWORD PTR [r8+0x34]
   140003ee7:	mov    DWORD PTR [rdx+0xc],eax
   140003eea:	mov    rax,rdx
   140003eed:	ret    
   140003eee:	mov    rcx,QWORD PTR [rcx+0x10]
   140003ef2:	mov    eax,DWORD PTR [rcx+0x28]
   140003ef5:	mov    DWORD PTR [rdx],eax
   140003ef7:	mov    eax,DWORD PTR [rcx+0x2c]
   140003efa:	mov    DWORD PTR [rdx+0x4],eax
   140003efd:	mov    eax,DWORD PTR [rcx+0x30]
   140003f00:	mov    DWORD PTR [rdx+0x8],eax
   140003f03:	mov    eax,DWORD PTR [rcx+0x34]
   140003f06:	mov    DWORD PTR [rdx+0xc],eax
   140003f09:	mov    rax,rdx
   140003f0c:	ret    
   140003f0d:	int3   
   140003f0e:	int3   
   140003f0f:	int3   
   140003f10:	mov    r8,QWORD PTR [rcx+0x20]
   140003f14:	mov    eax,DWORD PTR [r8+0x28]
   140003f18:	mov    DWORD PTR [rdx],eax
   140003f1a:	mov    eax,DWORD PTR [r8+0x2c]
   140003f1e:	mov    DWORD PTR [rdx+0x4],eax
   140003f21:	mov    eax,DWORD PTR [r8+0x30]
   140003f25:	mov    DWORD PTR [rdx+0x8],eax
   140003f28:	mov    eax,DWORD PTR [r8+0x34]
   140003f2c:	mov    DWORD PTR [rdx+0xc],eax
   140003f2f:	mov    rax,rdx
   140003f32:	ret    
   140003f33:	int3   
   140003f34:	int3   
   140003f35:	int3   
   140003f36:	int3   
   140003f37:	int3   
   140003f38:	int3   
   140003f39:	int3   
   140003f3a:	int3   
   140003f3b:	int3   
   140003f3c:	int3   
   140003f3d:	int3   
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	mov    QWORD PTR [rsp+0x8],rbx
   140003f45:	mov    QWORD PTR [rsp+0x10],rsi
   140003f4a:	push   rdi
   140003f4b:	sub    rsp,0x20
   140003f4f:	mov    rbx,QWORD PTR [rdx+0x50]
   140003f53:	xor    eax,eax
   140003f55:	mov    rsi,rcx
   140003f58:	mov    DWORD PTR [rcx],eax
   140003f5a:	mov    DWORD PTR [rcx+0x4],eax
   140003f5d:	mov    DWORD PTR [rcx+0x8],eax
   140003f60:	mov    DWORD PTR [rcx+0xc],eax
   140003f63:	lea    rcx,[rdx+0x8]
   140003f67:	mov    rdi,rdx
   140003f6a:	call   QWORD PTR [rip+0x11220]        # 0x140015190
   140003f70:	mov    rdx,rbx
   140003f73:	sub    rbx,QWORD PTR [rdi+0x48]
   140003f77:	sub    rdx,rax
   140003f7a:	mov    eax,DWORD PTR [rdi+0x84]
   140003f80:	sar    rbx,1
   140003f83:	mov    DWORD PTR [rsi+0x4],eax
   140003f86:	mov    eax,DWORD PTR [rdi+0x88]
   140003f8c:	sar    rdx,1
   140003f8f:	inc    ebx
   140003f91:	mov    DWORD PTR [rsi+0x8],eax
   140003f94:	mov    DWORD PTR [rsi],edx
   140003f96:	mov    DWORD PTR [rsi+0xc],ebx
   140003f99:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f9e:	mov    rax,rsi
   140003fa1:	mov    rsi,QWORD PTR [rsp+0x38]
   140003fa6:	add    rsp,0x20
   140003faa:	pop    rdi
   140003fab:	ret    
   140003fac:	int3   
   140003fad:	int3   
   140003fae:	int3   
   140003faf:	int3   
   140003fb0:	mov    QWORD PTR [rsp+0x8],rbx
   140003fb5:	mov    DWORD PTR [rsp+0x10],edx
   140003fb9:	push   rbp
   140003fba:	push   rsi
   140003fbb:	push   rdi
   140003fbc:	push   r12
   140003fbe:	push   r13
   140003fc0:	sub    rsp,0x20
   140003fc4:	mov    eax,DWORD PTR [rcx+0x4]
   140003fc7:	mov    rbp,QWORD PTR [rcx+0x8]
   140003fcb:	mov    rbx,rcx
   140003fce:	cmp    edx,eax
   140003fd0:	lea    r9,[rsp+0x58]
   140003fd5:	lea    rcx,[rsp+0x60]
   140003fda:	cmovge r9,rcx
   140003fde:	movsxd r12,r8d
   140003fe1:	xor    r13d,r13d
   140003fe4:	mov    DWORD PTR [rsp+0x60],eax
   140003fe8:	mov    edi,DWORD PTR [r9]
   140003feb:	mov    esi,edx
   140003fed:	cmp    r12d,DWORD PTR [rbx]
   140003ff0:	je     0x140004057
   140003ff2:	cmp    r12d,0x4
   140003ff6:	jle    0x14000400a
   140003ff8:	mov    rcx,r12
   140003ffb:	shl    rcx,0x4
   140003fff:	call   QWORD PTR [rip+0x11113]        # 0x140015118
   140004005:	mov    DWORD PTR [rbx],r12d
   140004008:	jmp    0x140004014
   14000400a:	lea    rax,[rbx+0x10]
   14000400e:	mov    DWORD PTR [rbx],0x4
   140004014:	mov    QWORD PTR [rbx+0x8],rax
   140004018:	mov    DWORD PTR [rbx+0x4],r13d
   14000401c:	test   edi,edi
   14000401e:	jle    0x140004057
   140004020:	movsxd rcx,DWORD PTR [rbx+0x4]
   140004024:	mov    rax,QWORD PTR [rbx+0x8]
   140004028:	add    rcx,rcx
   14000402b:	lea    rdx,[rax+rcx*8]
   14000402f:	test   rdx,rdx
   140004032:	je     0x14000404f
   140004034:	mov    eax,DWORD PTR [rbp+rcx*8+0x0]
   140004038:	mov    DWORD PTR [rdx],eax
   14000403a:	mov    eax,DWORD PTR [rbp+rcx*8+0x4]
   14000403e:	mov    DWORD PTR [rdx+0x4],eax
   140004041:	mov    eax,DWORD PTR [rbp+rcx*8+0x8]
   140004045:	mov    DWORD PTR [rdx+0x8],eax
   140004048:	mov    eax,DWORD PTR [rbp+rcx*8+0xc]
   14000404c:	mov    DWORD PTR [rdx+0xc],eax
   14000404f:	inc    DWORD PTR [rbx+0x4]
   140004052:	cmp    DWORD PTR [rbx+0x4],edi
   140004055:	jl     0x140004020
   140004057:	lea    rax,[rbx+0x10]
   14000405b:	mov    DWORD PTR [rbx+0x4],edi
   14000405e:	cmp    rbp,rax
   140004061:	je     0x140004072
   140004063:	cmp    rbp,QWORD PTR [rbx+0x8]
   140004067:	je     0x140004072
   140004069:	mov    rcx,rbp
   14000406c:	call   QWORD PTR [rip+0x1108e]        # 0x140015100
   140004072:	cmp    DWORD PTR [rbx+0x4],esi
   140004075:	jge    0x1400040ab
   140004077:	nop    WORD PTR [rax+rax*1+0x0]
   140004080:	movsxd rax,DWORD PTR [rbx+0x4]
   140004084:	mov    rcx,rax
   140004087:	lea    eax,[rax+0x1]
   14000408a:	shl    rcx,0x4
   14000408e:	add    rcx,QWORD PTR [rbx+0x8]
   140004092:	mov    DWORD PTR [rbx+0x4],eax
   140004095:	je     0x1400040a6
   140004097:	mov    DWORD PTR [rcx],r13d
   14000409a:	mov    DWORD PTR [rcx+0x4],r13d
   14000409e:	mov    DWORD PTR [rcx+0x8],r13d
   1400040a2:	mov    DWORD PTR [rcx+0xc],r13d
   1400040a6:	cmp    DWORD PTR [rbx+0x4],esi
   1400040a9:	jl     0x140004080
   1400040ab:	mov    rbx,QWORD PTR [rsp+0x50]
   1400040b0:	add    rsp,0x20
   1400040b4:	pop    r13
   1400040b6:	pop    r12
   1400040b8:	pop    rdi
   1400040b9:	pop    rsi
   1400040ba:	pop    rbp
   1400040bb:	ret    
   1400040bc:	int3   
   1400040bd:	int3   
   1400040be:	int3   
   1400040bf:	int3   
   1400040c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400040c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400040ca:	push   rdi
   1400040cb:	sub    rsp,0x20
   1400040cf:	mov    ecx,0x20
   1400040d4:	mov    rsi,r8
   1400040d7:	mov    rbx,rdx
   1400040da:	call   0x14001463e
   1400040df:	mov    rdi,rax
   1400040e2:	test   rax,rax
   1400040e5:	je     0x140004124
   1400040e7:	mov    ecx,DWORD PTR [rsi]
   1400040e9:	lea    rdx,[rsi+0x18]
   1400040ed:	mov    DWORD PTR [rax],ecx
   1400040ef:	mov    ecx,DWORD PTR [rsi+0x4]
   1400040f2:	mov    DWORD PTR [rax+0x4],ecx
   1400040f5:	mov    ecx,DWORD PTR [rsi+0x8]
   1400040f8:	mov    DWORD PTR [rax+0x8],ecx
   1400040fb:	mov    ecx,DWORD PTR [rsi+0xc]
   1400040fe:	mov    DWORD PTR [rax+0xc],ecx
   140004101:	mov    ecx,DWORD PTR [rsi+0x10]
   140004104:	mov    DWORD PTR [rax+0x10],ecx
   140004107:	lea    rcx,[rax+0x18]
   14000410b:	call   QWORD PTR [rip+0x112b7]        # 0x1400153c8
   140004111:	mov    QWORD PTR [rbx],rdi
   140004114:	mov    rbx,QWORD PTR [rsp+0x30]
   140004119:	mov    rsi,QWORD PTR [rsp+0x38]
   14000411e:	add    rsp,0x20
   140004122:	pop    rdi
   140004123:	ret    
   140004124:	mov    rsi,QWORD PTR [rsp+0x38]
   140004129:	mov    QWORD PTR [rbx],0x0
   140004130:	mov    rbx,QWORD PTR [rsp+0x30]
   140004135:	add    rsp,0x20
   140004139:	pop    rdi
   14000413a:	ret    
   14000413b:	int3   
   14000413c:	int3   
   14000413d:	int3   
   14000413e:	int3   
   14000413f:	int3   
   140004140:	mov    r8,rdx
   140004143:	lea    rdx,[rcx+0x7]
   140004147:	mov    rax,QWORD PTR [r8+0x18]
   14000414b:	and    rdx,0xfffffffffffffff8
   14000414f:	test   rax,rax
   140004152:	je     0x140004163
   140004154:	lea    rcx,[rax+rdx*1]
   140004158:	cmp    rcx,QWORD PTR [r8+0x20]
   14000415c:	jae    0x140004163
   14000415e:	mov    QWORD PTR [r8+0x18],rcx
   140004162:	ret    
   140004163:	mov    rcx,r8
   140004166:	jmp    0x1400025c0
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	lea    rax,[rip+0x11381]        # 0x1400154f8
   140004177:	mov    QWORD PTR [rcx],rax
   14000417a:	mov    rax,rcx
   14000417d:	ret    
   14000417e:	int3   
   14000417f:	int3   
   140004180:	mov    DWORD PTR [rcx+0x10],0x1
   140004187:	xor    r9d,r9d
   14000418a:	lea    rax,[rip+0x13027]        # 0x1400171b8
   140004191:	mov    QWORD PTR [rcx],rax
   140004194:	mov    DWORD PTR [rcx+0x8],r9d
   140004198:	mov    QWORD PTR [rcx+0x18],r9
   14000419c:	mov    DWORD PTR [rcx+0x20],r9d
   1400041a0:	mov    DWORD PTR [rcx+0x24],r9d
   1400041a4:	mov    rax,QWORD PTR [rdx]
   1400041a7:	mov    QWORD PTR [rcx+0x28],rax
   1400041ab:	mov    eax,DWORD PTR [rdx+0x8]
   1400041ae:	mov    DWORD PTR [rcx+0x30],eax
   1400041b1:	mov    eax,DWORD PTR [rdx+0xc]
   1400041b4:	mov    DWORD PTR [rcx+0x34],eax
   1400041b7:	mov    rax,QWORD PTR [r8]
   1400041ba:	mov    QWORD PTR [rcx+0x38],rax
   1400041be:	mov    eax,DWORD PTR [r8+0x8]
   1400041c2:	mov    DWORD PTR [rcx+0x40],eax
   1400041c5:	mov    eax,DWORD PTR [r8+0xc]
   1400041c9:	mov    DWORD PTR [rcx+0x44],eax
   1400041cc:	mov    QWORD PTR [rcx+0x48],r9
   1400041d0:	mov    QWORD PTR [rcx+0x50],r9
   1400041d4:	mov    BYTE PTR [rcx+0x58],r9b
   1400041d8:	mov    BYTE PTR [rcx+0x59],r9b
   1400041dc:	mov    QWORD PTR [rcx+0x60],r9
   1400041e0:	mov    DWORD PTR [rcx+0x68],r9d
   1400041e4:	mov    DWORD PTR [rcx+0x6c],r9d
   1400041e8:	mov    DWORD PTR [rcx+0x70],r9d
   1400041ec:	mov    DWORD PTR [rcx+0x74],r9d
   1400041f0:	mov    DWORD PTR [rcx+0x78],r9d
   1400041f4:	mov    DWORD PTR [rcx+0x7c],r9d
   1400041f8:	mov    DWORD PTR [rcx+0x80],r9d
   1400041ff:	mov    DWORD PTR [rcx+0x84],r9d
   140004206:	mov    DWORD PTR [rcx+0x88],r9d
   14000420d:	mov    DWORD PTR [rcx+0x8c],r9d
   140004214:	mov    DWORD PTR [rcx+0x90],r9d
   14000421b:	mov    DWORD PTR [rcx+0x94],r9d
   140004222:	mov    DWORD PTR [rcx+0x98],r9d
   140004229:	mov    DWORD PTR [rcx+0x9c],r9d
   140004230:	mov    DWORD PTR [rcx+0xa0],r9d
   140004237:	mov    DWORD PTR [rcx+0xa4],r9d
   14000423e:	mov    DWORD PTR [rcx+0xa8],r9d
   140004245:	mov    DWORD PTR [rcx+0xac],r9d
   14000424c:	mov    DWORD PTR [rcx+0xb0],r9d
   140004253:	mov    DWORD PTR [rcx+0xb4],r9d
   14000425a:	mov    DWORD PTR [rcx+0xb8],r9d
   140004261:	mov    DWORD PTR [rcx+0xbc],r9d
   140004268:	mov    DWORD PTR [rcx+0xc0],r9d
   14000426f:	mov    DWORD PTR [rcx+0xc4],r9d
   140004276:	mov    DWORD PTR [rcx+0xc8],r9d
   14000427d:	mov    DWORD PTR [rcx+0xcc],r9d
   140004284:	mov    DWORD PTR [rcx+0xd0],r9d
   14000428b:	mov    DWORD PTR [rcx+0xd4],r9d
   140004292:	mov    DWORD PTR [rcx+0xd8],r9d
   140004299:	mov    DWORD PTR [rcx+0xdc],r9d
   1400042a0:	mov    DWORD PTR [rcx+0xe0],r9d
   1400042a7:	mov    DWORD PTR [rcx+0xe4],r9d
   1400042ae:	mov    rax,rcx
   1400042b1:	mov    DWORD PTR [rcx+0x8],0x59
   1400042b8:	ret    
   1400042b9:	int3   
   1400042ba:	int3   
   1400042bb:	int3   
   1400042bc:	int3   
   1400042bd:	int3   
   1400042be:	int3   
   1400042bf:	int3   
   1400042c0:	cmp    DWORD PTR [rcx+0x6c],0x0
   1400042c4:	je     0x1400042e1
   1400042c6:	mov    eax,DWORD PTR [rcx+0x68]
   1400042c9:	mov    DWORD PTR [rdx],eax
   1400042cb:	mov    eax,DWORD PTR [rcx+0x6c]
   1400042ce:	mov    DWORD PTR [rdx+0x4],eax
   1400042d1:	mov    eax,DWORD PTR [rcx+0x70]
   1400042d4:	mov    DWORD PTR [rdx+0x8],eax
   1400042d7:	mov    eax,DWORD PTR [rcx+0x74]
   1400042da:	mov    DWORD PTR [rdx+0xc],eax
   1400042dd:	mov    rax,rdx
   1400042e0:	ret    
   1400042e1:	cmp    DWORD PTR [rcx+0x7c],0x0
   1400042e5:	je     0x140004308
   1400042e7:	mov    eax,DWORD PTR [rcx+0x78]
   1400042ea:	mov    DWORD PTR [rdx],eax
   1400042ec:	mov    eax,DWORD PTR [rcx+0x7c]
   1400042ef:	mov    DWORD PTR [rdx+0x4],eax
   1400042f2:	mov    eax,DWORD PTR [rcx+0x80]
   1400042f8:	mov    DWORD PTR [rdx+0x8],eax
   1400042fb:	mov    eax,DWORD PTR [rcx+0x84]
   140004301:	mov    DWORD PTR [rdx+0xc],eax
   140004304:	mov    rax,rdx
   140004307:	ret    
   140004308:	mov    eax,DWORD PTR [rcx+0x88]
   14000430e:	mov    DWORD PTR [rdx],eax
   140004310:	mov    eax,DWORD PTR [rcx+0x8c]
   140004316:	mov    DWORD PTR [rdx+0x4],eax
   140004319:	mov    eax,DWORD PTR [rcx+0x90]
   14000431f:	mov    DWORD PTR [rdx+0x8],eax
   140004322:	mov    eax,DWORD PTR [rcx+0x94]
   140004328:	mov    DWORD PTR [rdx+0xc],eax
   14000432b:	mov    rax,rdx
   14000432e:	ret    
   14000432f:	int3   
   140004330:	rex push rbx
   140004332:	sub    rsp,0x20
   140004336:	cmp    QWORD PTR [rcx+0x50],0x0
   14000433b:	mov    rbx,rdx
   14000433e:	je     0x140004353
   140004340:	mov    rcx,QWORD PTR [rcx+0x50]
   140004344:	mov    rax,QWORD PTR [rcx]
   140004347:	call   QWORD PTR [rax+0x38]
   14000434a:	mov    rax,rbx
   14000434d:	add    rsp,0x20
   140004351:	pop    rbx
   140004352:	ret    
   140004353:	cmp    QWORD PTR [rcx+0x48],0x0
   140004358:	je     0x14000436d
   14000435a:	mov    rcx,QWORD PTR [rcx+0x48]
   14000435e:	mov    rax,QWORD PTR [rcx]
   140004361:	call   QWORD PTR [rax+0x38]
   140004364:	mov    rax,rbx
   140004367:	add    rsp,0x20
   14000436b:	pop    rbx
   14000436c:	ret    
   14000436d:	mov    eax,DWORD PTR [rcx+0xd8]
   140004373:	mov    DWORD PTR [rdx],eax
   140004375:	mov    eax,DWORD PTR [rcx+0xdc]
   14000437b:	mov    DWORD PTR [rdx+0x4],eax
   14000437e:	mov    eax,DWORD PTR [rcx+0xe0]
   140004384:	mov    DWORD PTR [rdx+0x8],eax
   140004387:	mov    eax,DWORD PTR [rcx+0xe4]
   14000438d:	mov    DWORD PTR [rdx+0xc],eax
   140004390:	mov    rax,rbx
   140004393:	add    rsp,0x20
   140004397:	pop    rbx
   140004398:	ret    
   140004399:	int3   
   14000439a:	int3   
   14000439b:	int3   
   14000439c:	int3   
   14000439d:	int3   
   14000439e:	int3   
   14000439f:	int3   
   1400043a0:	mov    DWORD PTR [rcx+0x10],0x1
   1400043a7:	xor    r10d,r10d
   1400043aa:	lea    rax,[rip+0x12e07]        # 0x1400171b8
   1400043b1:	mov    QWORD PTR [rcx],rax
   1400043b4:	mov    DWORD PTR [rcx+0x8],r10d
   1400043b8:	mov    QWORD PTR [rcx+0x18],r10
   1400043bc:	mov    DWORD PTR [rcx+0x20],r10d
   1400043c0:	mov    DWORD PTR [rcx+0x24],r10d
   1400043c4:	mov    rax,QWORD PTR [rdx]
   1400043c7:	mov    QWORD PTR [rcx+0x28],rax
   1400043cb:	mov    eax,DWORD PTR [rdx+0x8]
   1400043ce:	mov    DWORD PTR [rcx+0x30],eax
   1400043d1:	mov    eax,DWORD PTR [rdx+0xc]
   1400043d4:	mov    DWORD PTR [rcx+0x34],eax
   1400043d7:	mov    rax,QWORD PTR [r8]
   1400043da:	mov    QWORD PTR [rcx+0x38],rax
   1400043de:	mov    eax,DWORD PTR [r8+0x8]
   1400043e2:	mov    DWORD PTR [rcx+0x40],eax
   1400043e5:	mov    eax,DWORD PTR [r8+0xc]
   1400043e9:	mov    DWORD PTR [rcx+0x44],eax
   1400043ec:	mov    QWORD PTR [rcx+0x48],r9
   1400043f0:	mov    QWORD PTR [rcx+0x50],r10
   1400043f4:	mov    BYTE PTR [rcx+0x58],r10b
   1400043f8:	mov    BYTE PTR [rcx+0x59],r10b
   1400043fc:	mov    QWORD PTR [rcx+0x60],r10
   140004400:	mov    DWORD PTR [rcx+0x68],r10d
   140004404:	mov    DWORD PTR [rcx+0x6c],r10d
   140004408:	mov    DWORD PTR [rcx+0x70],r10d
   14000440c:	mov    DWORD PTR [rcx+0x74],r10d
   140004410:	mov    DWORD PTR [rcx+0x78],r10d
   140004414:	mov    DWORD PTR [rcx+0x7c],r10d
   140004418:	mov    DWORD PTR [rcx+0x80],r10d
   14000441f:	mov    DWORD PTR [rcx+0x84],r10d
   140004426:	mov    DWORD PTR [rcx+0x88],r10d
   14000442d:	mov    DWORD PTR [rcx+0x8c],r10d
   140004434:	mov    DWORD PTR [rcx+0x90],r10d
   14000443b:	mov    DWORD PTR [rcx+0x94],r10d
   140004442:	mov    DWORD PTR [rcx+0x98],r10d
   140004449:	mov    DWORD PTR [rcx+0x9c],r10d
   140004450:	mov    DWORD PTR [rcx+0xa0],r10d
   140004457:	mov    DWORD PTR [rcx+0xa4],r10d
   14000445e:	mov    DWORD PTR [rcx+0xa8],r10d
   140004465:	mov    DWORD PTR [rcx+0xac],r10d
   14000446c:	mov    DWORD PTR [rcx+0xb0],r10d
   140004473:	mov    DWORD PTR [rcx+0xb4],r10d
   14000447a:	mov    DWORD PTR [rcx+0xb8],r10d
   140004481:	mov    DWORD PTR [rcx+0xbc],r10d
   140004488:	mov    DWORD PTR [rcx+0xc0],r10d
   14000448f:	mov    DWORD PTR [rcx+0xc4],r10d
   140004496:	mov    DWORD PTR [rcx+0xc8],r10d
   14000449d:	mov    DWORD PTR [rcx+0xcc],r10d
   1400044a4:	mov    DWORD PTR [rcx+0xd0],r10d
   1400044ab:	mov    DWORD PTR [rcx+0xd4],r10d
   1400044b2:	mov    DWORD PTR [rcx+0xd8],r10d
   1400044b9:	mov    DWORD PTR [rcx+0xdc],r10d
   1400044c0:	mov    DWORD PTR [rcx+0xe0],r10d
   1400044c7:	mov    DWORD PTR [rcx+0xe4],r10d
   1400044ce:	mov    rax,rcx
   1400044d1:	mov    DWORD PTR [rcx+0x8],0x59
   1400044d8:	ret    
   1400044d9:	int3   
   1400044da:	int3   
   1400044db:	int3   
   1400044dc:	int3   
   1400044dd:	int3   
   1400044de:	int3   
   1400044df:	int3   
   1400044e0:	rex push rbx
   1400044e2:	sub    rsp,0x20
   1400044e6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400044ea:	mov    rbx,rdx
   1400044ed:	test   rcx,rcx
   1400044f0:	je     0x140004512
   1400044f2:	cmp    DWORD PTR [rcx+0x8],0x1e
   1400044f6:	jne    0x140004507
   1400044f8:	mov    rax,QWORD PTR [rcx]
   1400044fb:	call   QWORD PTR [rax+0x30]
   1400044fe:	mov    rax,rbx
   140004501:	add    rsp,0x20
   140004505:	pop    rbx
   140004506:	ret    
   140004507:	test   rcx,rcx
   14000450a:	je     0x140004512
   14000450c:	cmp    DWORD PTR [rcx+0x8],0x4a
   140004510:	je     0x1400044f8
   140004512:	xor    eax,eax
   140004514:	mov    DWORD PTR [rdx],eax
   140004516:	mov    DWORD PTR [rdx+0x4],eax
   140004519:	mov    DWORD PTR [rdx+0x8],eax
   14000451c:	mov    DWORD PTR [rdx+0xc],eax
   14000451f:	mov    rax,rbx
   140004522:	add    rsp,0x20
   140004526:	pop    rbx
   140004527:	ret    
   140004528:	int3   
   140004529:	int3   
   14000452a:	int3   
   14000452b:	int3   
   14000452c:	int3   
   14000452d:	int3   
   14000452e:	int3   
   14000452f:	int3   
   140004530:	rex push rbx
   140004532:	sub    rsp,0x20
   140004536:	mov    rcx,QWORD PTR [rcx+0x10]
   14000453a:	mov    rbx,rdx
   14000453d:	test   rcx,rcx
   140004540:	je     0x140004562
   140004542:	cmp    DWORD PTR [rcx+0x8],0x1e
   140004546:	jne    0x140004557
   140004548:	mov    rax,QWORD PTR [rcx]
   14000454b:	call   QWORD PTR [rax+0x38]
   14000454e:	mov    rax,rbx
   140004551:	add    rsp,0x20
   140004555:	pop    rbx
   140004556:	ret    
   140004557:	test   rcx,rcx
   14000455a:	je     0x140004562
   14000455c:	cmp    DWORD PTR [rcx+0x8],0x4a
   140004560:	je     0x140004548
   140004562:	xor    eax,eax
   140004564:	mov    DWORD PTR [rdx],eax
   140004566:	mov    DWORD PTR [rdx+0x4],eax
   140004569:	mov    DWORD PTR [rdx+0x8],eax
   14000456c:	mov    DWORD PTR [rdx+0xc],eax
   14000456f:	mov    rax,rbx
   140004572:	add    rsp,0x20
   140004576:	pop    rbx
   140004577:	ret    
   140004578:	int3   
   140004579:	int3   
   14000457a:	int3   
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	rex push rbx
   140004582:	sub    rsp,0x20
   140004586:	mov    rbx,rdx
   140004589:	test   rdx,rdx
   14000458c:	je     0x14000463c
   140004592:	cmp    DWORD PTR [rdx+0x8],0x21
   140004596:	jne    0x14000463c
   14000459c:	mov    rcx,QWORD PTR [rcx+0x8]
   1400045a0:	mov    r8,QWORD PTR [rcx+0x18]
   1400045a4:	test   r8,r8
   1400045a7:	je     0x1400045b9
   1400045a9:	lea    rax,[r8+0x38]
   1400045ad:	cmp    rax,QWORD PTR [rcx+0x20]
   1400045b1:	jae    0x1400045b9
   1400045b3:	mov    QWORD PTR [rcx+0x18],rax
   1400045b7:	jmp    0x1400045c6
   1400045b9:	mov    edx,0x38
   1400045be:	call   0x1400025c0
   1400045c3:	mov    r8,rax
   1400045c6:	xor    edx,edx
   1400045c8:	test   r8,r8
   1400045cb:	je     0x14000460f
   1400045cd:	mov    DWORD PTR [r8+0x8],edx
   1400045d1:	mov    QWORD PTR [r8+0x10],r8
   1400045d5:	lea    rax,[rip+0x1281c]        # 0x140016df8
   1400045dc:	mov    QWORD PTR [r8],rax
   1400045df:	mov    rcx,QWORD PTR [rbx+0x10]
   1400045e3:	mov    QWORD PTR [r8+0x18],rcx
   1400045e7:	mov    eax,DWORD PTR [rbx+0x18]
   1400045ea:	mov    DWORD PTR [r8+0x20],eax
   1400045ee:	mov    eax,DWORD PTR [rbx+0x1c]
   1400045f1:	mov    DWORD PTR [r8+0x24],eax
   1400045f5:	mov    DWORD PTR [r8+0x28],edx
   1400045f9:	mov    DWORD PTR [r8+0x2c],edx
   1400045fd:	mov    DWORD PTR [r8+0x30],edx
   140004601:	mov    DWORD PTR [r8+0x34],edx
   140004605:	mov    DWORD PTR [r8+0x8],0x5b
   14000460d:	jmp    0x140004612
   14000460f:	mov    r8,rdx
   140004612:	mov    eax,DWORD PTR [rbx+0x20]
   140004615:	mov    DWORD PTR [r8+0x28],eax
   140004619:	mov    eax,DWORD PTR [rbx+0x24]
   14000461c:	mov    DWORD PTR [r8+0x2c],eax
   140004620:	mov    eax,DWORD PTR [rbx+0x28]
   140004623:	mov    DWORD PTR [r8+0x30],eax
   140004627:	mov    eax,DWORD PTR [rbx+0x2c]
   14000462a:	mov    DWORD PTR [r8+0x34],eax
   14000462e:	mov    rax,QWORD PTR [r8+0x10]
   140004632:	mov    QWORD PTR [r8+0x10],rdx
   140004636:	add    rsp,0x20
   14000463a:	pop    rbx
   14000463b:	ret    
   14000463c:	xor    eax,eax
   14000463e:	add    rsp,0x20
   140004642:	pop    rbx
   140004643:	ret    
   140004644:	int3   
   140004645:	int3   
   140004646:	int3   
   140004647:	int3   
   140004648:	int3   
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	int3   
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	mov    r11,rsp
   140004653:	push   rbx
   140004654:	push   rdi
   140004655:	push   r13
   140004657:	push   r14
   140004659:	sub    rsp,0xc8
   140004660:	xor    r14d,r14d
   140004663:	mov    r8d,0x4
   140004669:	mov    QWORD PTR [r11+0x8],rbp
   14000466d:	mov    rdi,rdx
   140004670:	lea    rax,[r11-0x68]
   140004674:	lea    rdx,[rsp+0x30]
   140004679:	mov    ebx,r14d
   14000467c:	mov    QWORD PTR [r11+0x10],rsi
   140004680:	mov    r13,rcx
   140004683:	mov    QWORD PTR [rsp+0x28],rdx
   140004688:	mov    DWORD PTR [rsp+0x20],r8d
   14000468d:	mov    DWORD PTR [r11-0x74],r14d
   140004691:	mov    DWORD PTR [rsp+0x24],ebx
   140004695:	mov    QWORD PTR [r11-0x70],rax
   140004699:	mov    DWORD PTR [r11-0x78],r8d
   14000469d:	mov    QWORD PTR [r11+0x18],r12
   1400046a1:	test   rdi,rdi
   1400046a4:	je     0x140004968
   1400046aa:	cmp    DWORD PTR [rdi+0x8],0x18
   1400046ae:	jne    0x1400047b5
   1400046b4:	cmp    ebx,r8d
   1400046b7:	jne    0x140004730
   1400046b9:	lea    ebp,[rbx+rbx*1]
   1400046bc:	mov    rsi,rdx
   1400046bf:	cmp    ebp,r8d
   1400046c2:	je     0x14000470f
   1400046c4:	cmp    ebp,0x4
   1400046c7:	jle    0x1400046e1
   1400046c9:	movsxd rcx,ebp
   1400046cc:	shl    rcx,0x4
   1400046d0:	call   QWORD PTR [rip+0x10a42]        # 0x140015118
   1400046d6:	mov    DWORD PTR [rsp+0x20],ebp
   1400046da:	mov    QWORD PTR [rsp+0x28],rax
   1400046df:	jmp    0x1400046f3
   1400046e1:	lea    rax,[rsp+0x30]
   1400046e6:	mov    DWORD PTR [rsp+0x20],0x4
   1400046ee:	mov    QWORD PTR [rsp+0x28],rax
   1400046f3:	movsxd r8,ebx
   1400046f6:	mov    rdx,rsi
   1400046f9:	mov    rcx,rax
   1400046fc:	shl    r8,0x4
   140004700:	mov    DWORD PTR [rsp+0x24],r14d
   140004705:	call   0x140014998
   14000470a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000470f:	lea    rax,[rsp+0x30]
   140004714:	mov    DWORD PTR [rsp+0x24],ebx
   140004718:	cmp    rsi,rax
   14000471b:	je     0x140004730
   14000471d:	cmp    rsi,rdx
   140004720:	je     0x140004730
   140004722:	mov    rcx,rsi
   140004725:	call   QWORD PTR [rip+0x109d5]        # 0x140015100
   14000472b:	mov    rdx,QWORD PTR [rsp+0x28]
   140004730:	movsxd rcx,ebx
   140004733:	inc    ebx
   140004735:	shl    rcx,0x4
   140004739:	mov    DWORD PTR [rsp+0x24],ebx
   14000473d:	add    rcx,rdx
   140004740:	lea    rdx,[rdi+0x18]
   140004744:	call   QWORD PTR [rip+0x10a66]        # 0x1400151b0
   14000474a:	mov    ecx,DWORD PTR [rsp+0x74]
   14000474e:	cmp    ecx,DWORD PTR [rsp+0x70]
   140004752:	jne    0x140004768
   140004754:	lea    r8d,[rcx+rcx*1]
   140004758:	mov    edx,ecx
   14000475a:	lea    rcx,[rsp+0x70]
   14000475f:	call   0x140003fb0
   140004764:	mov    ecx,DWORD PTR [rsp+0x74]
   140004768:	movsxd rax,ecx
   14000476b:	inc    ecx
   14000476d:	mov    DWORD PTR [rsp+0x74],ecx
   140004771:	mov    rcx,rax
   140004774:	mov    rax,QWORD PTR [rsp+0x78]
   140004779:	shl    rcx,0x4
   14000477d:	add    rcx,rax
   140004780:	je     0x14000479e
   140004782:	mov    eax,DWORD PTR [rdi+0x38]
   140004785:	mov    DWORD PTR [rcx],eax
   140004787:	mov    eax,DWORD PTR [rdi+0x3c]
   14000478a:	mov    DWORD PTR [rcx+0x4],eax
   14000478d:	mov    eax,DWORD PTR [rdi+0x40]
   140004790:	mov    DWORD PTR [rcx+0x8],eax
   140004793:	mov    eax,DWORD PTR [rdi+0x44]
   140004796:	mov    DWORD PTR [rcx+0xc],eax
   140004799:	mov    rax,QWORD PTR [rsp+0x78]
   14000479e:	mov    rdi,QWORD PTR [rdi+0x10]
   1400047a2:	mov    rdx,QWORD PTR [rsp+0x28]
   1400047a7:	mov    ebx,DWORD PTR [rsp+0x24]
   1400047ab:	mov    r8d,DWORD PTR [rsp+0x20]
   1400047b0:	jmp    0x1400046a1
   1400047b5:	test   rdi,rdi
   1400047b8:	je     0x140004968
   1400047be:	cmp    DWORD PTR [rdi+0x8],0x21
   1400047c2:	jne    0x140004968
   1400047c8:	mov    rcx,QWORD PTR [r13+0x8]
   1400047cc:	mov    QWORD PTR [rsp+0xc0],r15
   1400047d4:	mov    rbx,QWORD PTR [rcx+0x18]
   1400047d8:	test   rbx,rbx
   1400047db:	je     0x1400047ed
   1400047dd:	lea    rax,[rbx+0x38]
   1400047e1:	cmp    rax,QWORD PTR [rcx+0x20]
   1400047e5:	jae    0x1400047ed
   1400047e7:	mov    QWORD PTR [rcx+0x18],rax
   1400047eb:	jmp    0x1400047fa
   1400047ed:	mov    edx,0x38
   1400047f2:	call   0x1400025c0
   1400047f7:	mov    rbx,rax
   1400047fa:	lea    r15,[rip+0x12507]        # 0x140016d08
   140004801:	test   rbx,rbx
   140004804:	je     0x140004838
   140004806:	lea    rdx,[rdi+0x10]
   14000480a:	lea    rcx,[rbx+0x18]
   14000480e:	mov    DWORD PTR [rbx+0x8],r14d
   140004812:	mov    QWORD PTR [rbx],r15
   140004815:	mov    QWORD PTR [rbx+0x10],rbx
   140004819:	call   QWORD PTR [rip+0x10989]        # 0x1400151a8
   14000481f:	mov    DWORD PTR [rbx+0x28],r14d
   140004823:	mov    DWORD PTR [rbx+0x2c],r14d
   140004827:	mov    DWORD PTR [rbx+0x30],r14d
   14000482b:	mov    DWORD PTR [rbx+0x34],r14d
   14000482f:	mov    DWORD PTR [rbx+0x8],0x5a
   140004836:	jmp    0x14000483b
   140004838:	mov    rbx,r14
   14000483b:	mov    eax,DWORD PTR [rdi+0x20]
   14000483e:	mov    DWORD PTR [rbx+0x28],eax
   140004841:	mov    eax,DWORD PTR [rdi+0x24]
   140004844:	mov    DWORD PTR [rbx+0x2c],eax
   140004847:	mov    eax,DWORD PTR [rdi+0x28]
   14000484a:	mov    DWORD PTR [rbx+0x30],eax
   14000484d:	mov    eax,DWORD PTR [rdi+0x2c]
   140004850:	mov    DWORD PTR [rbx+0x34],eax
   140004853:	mov    eax,DWORD PTR [rsp+0x24]
   140004857:	dec    eax
   140004859:	movsxd rbp,eax
   14000485c:	cmp    eax,0xffffffff
   14000485f:	je     0x140004926
   140004865:	mov    rsi,rbp
   140004868:	lea    r12d,[rax+0x1]
   14000486c:	shl    rsi,0x4
   140004870:	shl    rbp,0x4
   140004874:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004880:	mov    rcx,QWORD PTR [r13+0x8]
   140004884:	mov    rdi,QWORD PTR [rcx+0x18]
   140004888:	test   rdi,rdi
   14000488b:	je     0x14000489d
   14000488d:	lea    rax,[rdi+0x38]
   140004891:	cmp    rax,QWORD PTR [rcx+0x20]
   140004895:	jae    0x14000489d
   140004897:	mov    QWORD PTR [rcx+0x18],rax
   14000489b:	jmp    0x1400048aa
   14000489d:	mov    edx,0x38
   1400048a2:	call   0x1400025c0
   1400048a7:	mov    rdi,rax
   1400048aa:	test   rdi,rdi
   1400048ad:	je     0x1400048f0
   1400048af:	mov    rdx,QWORD PTR [rsp+0x28]
   1400048b4:	lea    rcx,[rdi+0x18]
   1400048b8:	mov    DWORD PTR [rdi+0x8],r14d
   1400048bc:	add    rdx,rbp
   1400048bf:	mov    QWORD PTR [rdi],r15
   1400048c2:	call   QWORD PTR [rip+0x108e0]        # 0x1400151a8
   1400048c8:	mov    DWORD PTR [rdi+0x28],r14d
   1400048cc:	mov    DWORD PTR [rdi+0x2c],r14d
   1400048d0:	mov    DWORD PTR [rdi+0x30],r14d
   1400048d4:	mov    DWORD PTR [rdi+0x34],r14d
   1400048d8:	mov    DWORD PTR [rdi+0x8],0x5a
   1400048df:	mov    rax,QWORD PTR [rbx+0x10]
   1400048e3:	mov    QWORD PTR [rdi+0x10],rax
   1400048e7:	mov    QWORD PTR [rbx+0x10],rdi
   1400048eb:	mov    rbx,rdi
   1400048ee:	jmp    0x1400048f3
   1400048f0:	mov    rbx,r14
   1400048f3:	mov    rcx,QWORD PTR [rsp+0x78]
   1400048f8:	sub    rbp,0x10
   1400048fc:	sub    rsi,0x10
   140004900:	sub    r12,0x1
   140004904:	mov    eax,DWORD PTR [rsi+rcx*1+0x10]
   140004908:	mov    DWORD PTR [rbx+0x28],eax
   14000490b:	mov    eax,DWORD PTR [rsi+rcx*1+0x14]
   14000490f:	mov    DWORD PTR [rbx+0x2c],eax
   140004912:	mov    eax,DWORD PTR [rsi+rcx*1+0x18]
   140004916:	mov    DWORD PTR [rbx+0x30],eax
   140004919:	mov    eax,DWORD PTR [rsi+rcx*1+0x1c]
   14000491d:	mov    DWORD PTR [rbx+0x34],eax
   140004920:	jne    0x140004880
   140004926:	mov    rdi,QWORD PTR [rbx+0x10]
   14000492a:	mov    r15,QWORD PTR [rsp+0xc0]
   140004932:	mov    QWORD PTR [rbx+0x10],r14
   140004936:	mov    rcx,QWORD PTR [rsp+0x78]
   14000493b:	lea    rax,[rsp+0x80]
   140004943:	cmp    rcx,rax
   140004946:	je     0x14000494e
   140004948:	call   QWORD PTR [rip+0x107b2]        # 0x140015100
   14000494e:	mov    rcx,QWORD PTR [rsp+0x28]
   140004953:	lea    rax,[rsp+0x30]
   140004958:	cmp    rcx,rax
   14000495b:	je     0x140004963
   14000495d:	call   QWORD PTR [rip+0x1079d]        # 0x140015100
   140004963:	mov    rax,rdi
   140004966:	jmp    0x140004998
   140004968:	lea    rcx,[rsp+0x80]
   140004970:	cmp    rax,rcx
   140004973:	je     0x140004983
   140004975:	mov    rcx,rax
   140004978:	call   QWORD PTR [rip+0x10782]        # 0x140015100
   14000497e:	mov    rdx,QWORD PTR [rsp+0x28]
   140004983:	lea    rax,[rsp+0x30]
   140004988:	cmp    rdx,rax
   14000498b:	je     0x140004996
   14000498d:	mov    rcx,rdx
   140004990:	call   QWORD PTR [rip+0x1076a]        # 0x140015100
   140004996:	xor    eax,eax
   140004998:	mov    r12,QWORD PTR [rsp+0x100]
   1400049a0:	mov    rsi,QWORD PTR [rsp+0xf8]
   1400049a8:	mov    rbp,QWORD PTR [rsp+0xf0]
   1400049b0:	add    rsp,0xc8
   1400049b7:	pop    r14
   1400049b9:	pop    r13
   1400049bb:	pop    rdi
   1400049bc:	pop    rbx
   1400049bd:	ret    
   1400049be:	int3   
   1400049bf:	int3   
   1400049c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400049ca:	mov    QWORD PTR [rsp+0x20],rsi
   1400049cf:	mov    DWORD PTR [rsp+0x10],edx
   1400049d3:	push   rdi
   1400049d4:	sub    rsp,0x20
   1400049d8:	mov    rdx,QWORD PTR [rcx]
   1400049db:	movsxd rdi,r8d
   1400049de:	mov    rbp,rcx
   1400049e1:	movsxd rax,DWORD PTR [rdx+0x8]
   1400049e5:	mov    r8d,edi
   1400049e8:	lea    rbx,[rdx+rax*8+0x10]
   1400049ed:	lea    rdx,[rsp+0x38]
   1400049f2:	call   QWORD PTR [rip+0x109a0]        # 0x140015398
   1400049f8:	mov    r10,QWORD PTR [rbp+0x0]
   1400049fc:	movsxd rdx,DWORD PTR [rsp+0x38]
   140004a01:	movsxd r9,DWORD PTR [r10+0x8]
   140004a05:	mov    rcx,rbp
   140004a08:	mov    rsi,rax
   140004a0b:	add    rdx,r9
   140004a0e:	lea    r8,[r10+rdx*8+0x10]
   140004a13:	lea    rdx,[r10+r9*8+0x10]
   140004a18:	mov    r9,rbx
   140004a1b:	call   0x140001080
   140004a20:	mov    rdx,QWORD PTR [rbp+0x0]
   140004a24:	movsxd r11,DWORD PTR [rsp+0x38]
   140004a29:	movsxd rcx,DWORD PTR [rdx+0xc]
   140004a2d:	lea    r9,[rbx+r11*8]
   140004a31:	lea    r8,[rdx+rcx*8+0x10]
   140004a36:	movsxd rcx,DWORD PTR [rdx+0x8]
   140004a3a:	add    rcx,r11
   140004a3d:	add    rcx,rdi
   140004a40:	lea    rdx,[rdx+rcx*8+0x10]
   140004a45:	mov    rcx,rbp
   140004a48:	call   0x140001080
   140004a4d:	mov    r11d,DWORD PTR [rsi]
   140004a50:	test   r11d,r11d
   140004a53:	je     0x140004a66
   140004a55:	cmp    r11d,0xffffffff
   140004a59:	je     0x140004a71
   140004a5b:	lock add DWORD PTR [rsi],0xffffffff
   140004a5f:	setne  al
   140004a62:	test   al,al
   140004a64:	jne    0x140004a71
   140004a66:	mov    rdx,rsi
   140004a69:	mov    rcx,rbp
   140004a6c:	call   0x140001000
   140004a71:	mov    rdx,QWORD PTR [rbp+0x0]
   140004a75:	movsxd rax,DWORD PTR [rsp+0x38]
   140004a7a:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a7f:	movsxd rcx,DWORD PTR [rdx+0x8]
   140004a83:	mov    rbp,QWORD PTR [rsp+0x40]
   140004a88:	mov    rsi,QWORD PTR [rsp+0x48]
   140004a8d:	add    rcx,rax
   140004a90:	lea    rax,[rdx+rcx*8+0x10]
   140004a95:	add    rsp,0x20
   140004a99:	pop    rdi
   140004a9a:	ret    
   140004a9b:	int3   
   140004a9c:	int3   
   140004a9d:	int3   
   140004a9e:	int3   
   140004a9f:	int3   
   140004aa0:	rex push rbx
   140004aa2:	sub    rsp,0x20
   140004aa6:	mov    rbx,rcx
   140004aa9:	mov    QWORD PTR [rcx],rdx
   140004aac:	mov    rcx,rdx
   140004aaf:	call   0x14000c450
   140004ab4:	mov    QWORD PTR [rbx+0x8],rax
   140004ab8:	xor    eax,eax
   140004aba:	mov    DWORD PTR [rbx+0x10],eax
   140004abd:	mov    DWORD PTR [rbx+0x14],eax
   140004ac0:	mov    QWORD PTR [rbx+0x18],rax
   140004ac4:	mov    QWORD PTR [rbx+0x20],rax
   140004ac8:	mov    QWORD PTR [rbx+0x28],rax
   140004acc:	mov    QWORD PTR [rbx+0x30],rax
   140004ad0:	mov    QWORD PTR [rbx+0x38],rax
   140004ad4:	mov    QWORD PTR [rbx+0x48],rax
   140004ad8:	mov    DWORD PTR [rbx+0x50],eax
   140004adb:	mov    DWORD PTR [rbx+0x54],eax
   140004ade:	mov    DWORD PTR [rbx+0x58],eax
   140004ae1:	mov    DWORD PTR [rbx+0x5c],eax
   140004ae4:	mov    DWORD PTR [rbx+0x60],eax
   140004ae7:	mov    DWORD PTR [rbx+0x64],eax
   140004aea:	mov    DWORD PTR [rbx+0x68],eax
   140004aed:	mov    DWORD PTR [rbx+0x6c],eax
   140004af0:	mov    DWORD PTR [rbx+0x70],eax
   140004af3:	mov    DWORD PTR [rbx+0x74],eax
   140004af6:	mov    DWORD PTR [rbx+0x88],eax
   140004afc:	mov    DWORD PTR [rbx+0x8c],eax
   140004b02:	mov    DWORD PTR [rbx+0x90],eax
   140004b08:	mov    DWORD PTR [rbx+0x94],eax
   140004b0e:	mov    QWORD PTR [rbx+0x98],rax
   140004b15:	mov    DWORD PTR [rbx+0xa0],eax
   140004b1b:	mov    DWORD PTR [rbx+0xa4],eax
   140004b21:	mov    DWORD PTR [rbx+0xb8],eax
   140004b27:	mov    DWORD PTR [rbx+0xbc],eax
   140004b2d:	mov    DWORD PTR [rbx+0xc0],eax
   140004b33:	mov    DWORD PTR [rbx+0xc4],eax
   140004b39:	mov    QWORD PTR [rbx+0xc8],rax
   140004b40:	mov    DWORD PTR [rbx+0xd0],eax
   140004b46:	mov    DWORD PTR [rbx+0xd4],eax
   140004b4c:	mov    DWORD PTR [rbx+0xe8],eax
   140004b52:	mov    DWORD PTR [rbx+0xec],eax
   140004b58:	mov    DWORD PTR [rbx+0xf0],eax
   140004b5e:	mov    DWORD PTR [rbx+0xf4],eax
   140004b64:	mov    QWORD PTR [rbx+0xf8],rax
   140004b6b:	mov    DWORD PTR [rbx+0x100],eax
   140004b71:	mov    DWORD PTR [rbx+0x104],eax
   140004b77:	mov    QWORD PTR [rbx+0x108],rax
   140004b7e:	mov    QWORD PTR [rbx+0x110],rax
   140004b85:	mov    rax,QWORD PTR [rip+0x10824]        # 0x1400153b0
   140004b8c:	mov    QWORD PTR [rbx+0x118],rax
   140004b93:	mov    rax,rbx
   140004b96:	add    rsp,0x20
   140004b9a:	pop    rbx
   140004b9b:	ret    
   140004b9c:	int3   
   140004b9d:	int3   
   140004b9e:	int3   
   140004b9f:	int3   
   140004ba0:	rex push rbx
   140004ba2:	sub    rsp,0x20
   140004ba6:	cmp    DWORD PTR [rcx+0x14],0x0
   140004baa:	mov    rbx,rcx
   140004bad:	je     0x140004bd7
   140004baf:	mov    rcx,QWORD PTR [rcx+0x18]
   140004bb3:	call   QWORD PTR [rip+0x10547]        # 0x140015100
   140004bb9:	mov    rcx,QWORD PTR [rbx+0x20]
   140004bbd:	call   QWORD PTR [rip+0x1053d]        # 0x140015100
   140004bc3:	mov    rcx,QWORD PTR [rbx+0x28]
   140004bc7:	call   QWORD PTR [rip+0x10533]        # 0x140015100
   140004bcd:	mov    rcx,QWORD PTR [rbx+0x30]
   140004bd1:	call   QWORD PTR [rip+0x10529]        # 0x140015100
   140004bd7:	lea    rcx,[rbx+0x118]
   140004bde:	mov    rdx,QWORD PTR [rcx]
   140004be1:	mov    eax,DWORD PTR [rdx]
   140004be3:	test   eax,eax
   140004be5:	je     0x140004bf7
   140004be7:	cmp    eax,0xffffffff
   140004bea:	je     0x140004bff
   140004bec:	lock add DWORD PTR [rdx],0xffffffff
   140004bf0:	setne  al
   140004bf3:	test   al,al
   140004bf5:	jne    0x140004bff
   140004bf7:	mov    rdx,QWORD PTR [rcx]
   140004bfa:	call   0x140001000
   140004bff:	add    rsp,0x20
   140004c03:	pop    rbx
   140004c04:	ret    
   140004c05:	int3   
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	mov    QWORD PTR [rsp+0x8],rbx
   140004c15:	push   rdi
   140004c16:	sub    rsp,0x20
   140004c1a:	mov    rax,QWORD PTR [rcx]
   140004c1d:	mov    rdi,rdx
   140004c20:	mov    rbx,rcx
   140004c23:	mov    r8d,DWORD PTR [rax]
   140004c26:	cmp    r8d,0x1
   140004c2a:	je     0x140004c43
   140004c2c:	test   r8d,r8d
   140004c2f:	je     0x140004c43
   140004c31:	mov    edx,0x7fffffff
   140004c36:	mov    r8d,0x1
   140004c3c:	call   0x1400049c0
   140004c41:	jmp    0x140004c49
   140004c43:	call   QWORD PTR [rip+0x10747]        # 0x140015390
   140004c49:	mov    r8,rdi
   140004c4c:	mov    rdx,rax
   140004c4f:	mov    rcx,rbx
   140004c52:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c57:	add    rsp,0x20
   140004c5b:	pop    rdi
   140004c5c:	jmp    0x1400040c0
   140004c61:	int3   
   140004c62:	int3   
   140004c63:	int3   
   140004c64:	int3   
   140004c65:	int3   
   140004c66:	int3   
   140004c67:	int3   
   140004c68:	int3   
   140004c69:	int3   
   140004c6a:	int3   
   140004c6b:	int3   
   140004c6c:	int3   
   140004c6d:	int3   
   140004c6e:	int3   
   140004c6f:	int3   
   140004c70:	rex push rbx
   140004c72:	push   rbp
   140004c73:	push   rsi
   140004c74:	push   rdi
   140004c75:	push   r12
   140004c77:	push   r13
   140004c79:	push   r14
   140004c7b:	push   r15
   140004c7d:	sub    rsp,0x3c8
   140004c84:	mov    rbp,rcx
   140004c87:	mov    rcx,QWORD PTR [rcx]
   140004c8a:	xor    r12d,r12d
   140004c8d:	mov    edi,edx
   140004c8f:	mov    esi,r12d
   140004c92:	mov    DWORD PTR [rsp+0x30],r12d
   140004c97:	call   0x14000c420
   140004c9c:	lea    r14,[rbp+0x78]
   140004ca0:	or     r15d,0xffffffff
   140004ca4:	mov    rbx,rax
   140004ca7:	mov    QWORD PTR [rsp+0x38],rax
   140004cac:	xor    al,al
   140004cae:	mov    DWORD PTR [r14],edi
   140004cb1:	mov    r13d,r12d
   140004cb4:	mov    BYTE PTR [rsp+0x418],al
   140004cbb:	mov    QWORD PTR [rbp+0x108],r14
   140004cc2:	cmp    edi,0x67
   140004cc5:	jne    0x140004ed7
   140004ccb:	mov    rcx,rbx
   140004cce:	call   0x14000d910
   140004cd3:	test   al,al
   140004cd5:	jne    0x140004ed7
   140004cdb:	lea    rax,[rip+0x107e6]        # 0x1400154c8
   140004ce2:	mov    QWORD PTR [rsp+0xb8],rax
   140004cea:	mov    rcx,QWORD PTR [rbp+0x0]
   140004cee:	call   0x14000c440
   140004cf3:	lea    rdi,[rsp+0xb8]
   140004cfb:	lea    rcx,[rsp+0x98]
   140004d03:	test   rax,rax
   140004d06:	mov    DWORD PTR [rsp+0x80],0x1
   140004d11:	mov    DWORD PTR [rsp+0x84],r12d
   140004d19:	mov    DWORD PTR [rsp+0x88],r12d
   140004d21:	mov    DWORD PTR [rsp+0x8c],r12d
   140004d29:	mov    DWORD PTR [rsp+0x90],r12d
   140004d31:	cmovne rdi,rax
   140004d35:	call   QWORD PTR [rip+0x104b5]        # 0x1400151f0
   140004d3b:	lea    r8,[rsp+0x80]
   140004d43:	mov    rdx,rdi
   140004d46:	mov    rcx,rbx
   140004d49:	call   0x140010980
   140004d4e:	test   al,al
   140004d50:	jne    0x140004df4
   140004d56:	lea    rcx,[rbp+0x118]
   140004d5d:	mov    rax,QWORD PTR [rcx]
   140004d60:	mov    edx,DWORD PTR [rax]
   140004d62:	cmp    edx,0x1
   140004d65:	je     0x140004d7c
   140004d67:	test   edx,edx
   140004d69:	je     0x140004d7c
   140004d6b:	lea    r8d,[r12+0x1]
   140004d70:	mov    edx,0x7fffffff
   140004d75:	call   0x1400049c0
   140004d7a:	jmp    0x140004d82
   140004d7c:	call   QWORD PTR [rip+0x1060e]        # 0x140015390
   140004d82:	mov    ecx,0x20
   140004d87:	mov    rbx,rax
   140004d8a:	call   0x14001463e
   140004d8f:	mov    rdi,rax
   140004d92:	test   rax,rax
   140004d95:	je     0x140004de1
   140004d97:	mov    eax,DWORD PTR [rsp+0x80]
   140004d9e:	lea    rcx,[rsp+0x84]
   140004da6:	lea    rdx,[rsp+0x98]
   140004dae:	mov    DWORD PTR [rdi],eax
   140004db0:	mov    eax,DWORD PTR [rcx]
   140004db2:	mov    DWORD PTR [rdi+0x4],eax
   140004db5:	mov    eax,DWORD PTR [rcx+0x4]
   140004db8:	mov    DWORD PTR [rdi+0x8],eax
   140004dbb:	mov    eax,DWORD PTR [rcx+0x8]
   140004dbe:	mov    DWORD PTR [rdi+0xc],eax
   140004dc1:	mov    eax,DWORD PTR [rcx+0xc]
   140004dc4:	lea    rcx,[rdi+0x18]
   140004dc8:	mov    DWORD PTR [rdi+0x10],eax
   140004dcb:	call   QWORD PTR [rip+0x105f7]        # 0x1400153c8
   140004dd1:	mov    QWORD PTR [rbx],rdi
   140004dd4:	lea    rcx,[rsp+0x98]
   140004ddc:	jmp    0x14000bc12
   140004de1:	mov    rdi,r12
   140004de4:	mov    QWORD PTR [rbx],r12
   140004de7:	lea    rcx,[rsp+0x98]
   140004def:	jmp    0x14000bc12
   140004df4:	mov    eax,DWORD PTR [rbx+0x80]
   140004dfa:	lea    rcx,[rbx+0x8]
   140004dfe:	mov    DWORD PTR [rbp+0xa8],eax
   140004e04:	mov    rax,QWORD PTR [rbx+0x68]
   140004e08:	mov    QWORD PTR [rbp+0xb0],rax
   140004e0f:	mov    rdi,QWORD PTR [rbx+0x50]
   140004e13:	call   QWORD PTR [rip+0x10377]        # 0x140015190
   140004e19:	mov    rcx,rdi
   140004e1c:	sub    rdi,QWORD PTR [rbx+0x48]
   140004e20:	lea    rdx,[rbx+0x20]
   140004e24:	sub    rcx,rax
   140004e27:	mov    eax,DWORD PTR [rbx+0x84]
   140004e2d:	sar    rdi,1
   140004e30:	mov    DWORD PTR [rsp+0x5c],eax
   140004e34:	mov    eax,DWORD PTR [rbx+0x88]
   140004e3a:	sar    rcx,1
   140004e3d:	mov    DWORD PTR [rsp+0x58],ecx
   140004e41:	lea    rcx,[rsp+0x58]
   140004e46:	mov    DWORD PTR [rsp+0x60],eax
   140004e4a:	inc    edi
   140004e4c:	mov    DWORD PTR [rsp+0x64],edi
   140004e50:	mov    eax,DWORD PTR [rcx]
   140004e52:	mov    DWORD PTR [rbp+0xb8],eax
   140004e58:	mov    eax,DWORD PTR [rcx+0x4]
   140004e5b:	mov    DWORD PTR [rbp+0xbc],eax
   140004e61:	mov    eax,DWORD PTR [rcx+0x8]
   140004e64:	mov    DWORD PTR [rbp+0xc0],eax
   140004e6a:	mov    eax,DWORD PTR [rcx+0xc]
   140004e6d:	lea    rcx,[rsp+0x140]
   140004e75:	mov    DWORD PTR [rbp+0xc4],eax
   140004e7b:	call   QWORD PTR [rip+0x10327]        # 0x1400151a8
   140004e81:	mov    rax,QWORD PTR [rsp+0x140]
   140004e89:	mov    QWORD PTR [rbp+0xc8],rax
   140004e90:	mov    eax,DWORD PTR [rsp+0x148]
   140004e97:	lea    rcx,[rsp+0x98]
   140004e9f:	mov    DWORD PTR [rbp+0xd0],eax
   140004ea5:	mov    eax,DWORD PTR [rsp+0x14c]
   140004eac:	mov    DWORD PTR [rbp+0xd4],eax
   140004eb2:	lea    rax,[rbp+0xd8]
   140004eb9:	mov    QWORD PTR [rbp+0x110],rax
   140004ec0:	call   QWORD PTR [rip+0x104f2]        # 0x1400153b8
   140004ec6:	lea    rdx,[rip+0x105fb]        # 0x1400154c8
   140004ecd:	mov    QWORD PTR [rsp+0xb8],rdx
   140004ed5:	jmp    0x140004ee5
   140004ed7:	lea    rax,[rbp+0xa8]
   140004ede:	mov    QWORD PTR [rbp+0x110],rax
   140004ee5:	mov    DWORD PTR [rbp+0x10],0xffffffff
   140004eec:	lea    r9,[rip+0xffffffffffffb10d]        # 0x140000000
   140004ef3:	mov    QWORD PTR [rbp+0x38],r12
   140004ef7:	inc    DWORD PTR [rbp+0x10]
   140004efa:	mov    eax,DWORD PTR [rbp+0x14]
   140004efd:	lea    rdi,[rip+0x1239c]        # 0x1400172a0
   140004f04:	mov    edx,0xffffff96
   140004f09:	cmp    DWORD PTR [rbp+0x10],eax
   140004f0c:	jne    0x140004f84
   140004f0e:	test   eax,eax
   140004f10:	jne    0x140004f1b
   140004f12:	mov    DWORD PTR [rbp+0x14],0x80
   140004f19:	jmp    0x140004f20
   140004f1b:	add    eax,eax
   140004f1d:	mov    DWORD PTR [rbp+0x14],eax
   140004f20:	movsxd rdx,DWORD PTR [rbp+0x14]
   140004f24:	mov    rcx,QWORD PTR [rbp+0x18]
   140004f28:	shl    rdx,0x3
   140004f2c:	call   QWORD PTR [rip+0x101de]        # 0x140015110
   140004f32:	mov    QWORD PTR [rbp+0x18],rax
   140004f36:	movsxd rdx,DWORD PTR [rbp+0x14]
   140004f3a:	mov    rcx,QWORD PTR [rbp+0x20]
   140004f3e:	shl    rdx,0x2
   140004f42:	call   QWORD PTR [rip+0x101c8]        # 0x140015110
   140004f48:	mov    QWORD PTR [rbp+0x20],rax
   140004f4c:	movsxd rdx,DWORD PTR [rbp+0x14]
   140004f50:	mov    rcx,QWORD PTR [rbp+0x28]
   140004f54:	shl    rdx,0x4
   140004f58:	call   QWORD PTR [rip+0x101b2]        # 0x140015110
   140004f5e:	mov    QWORD PTR [rbp+0x28],rax
   140004f62:	movsxd rdx,DWORD PTR [rbp+0x14]
   140004f66:	mov    rcx,QWORD PTR [rbp+0x30]
   140004f6a:	shl    rdx,0x4
   140004f6e:	call   QWORD PTR [rip+0x1019c]        # 0x140015110
   140004f74:	lea    r9,[rip+0xffffffffffffb085]        # 0x140000000
   140004f7b:	mov    edx,0xffffff96
   140004f80:	mov    QWORD PTR [rbp+0x30],rax
   140004f84:	movsxd rcx,DWORD PTR [rbp+0x10]
   140004f88:	mov    rax,QWORD PTR [rbp+0x20]
   140004f8c:	mov    DWORD PTR [rax+rcx*4],r13d
   140004f90:	cmp    r15d,0xffffffff
   140004f94:	jne    0x1400050d2
   140004f9a:	movsxd rax,r13d
   140004f9d:	cmp    dx,WORD PTR [r9+rax*2+0x187c0]
   140004fa6:	je     0x1400050d2
   140004fac:	mov    eax,DWORD PTR [rbp+0x58]
   140004faf:	mov    DWORD PTR [rbp+0x68],eax
   140004fb2:	mov    eax,DWORD PTR [rbp+0x5c]
   140004fb5:	mov    DWORD PTR [rbp+0x6c],eax
   140004fb8:	mov    eax,DWORD PTR [rbp+0x60]
   140004fbb:	mov    DWORD PTR [rbp+0x70],eax
   140004fbe:	mov    eax,DWORD PTR [rbp+0x64]
   140004fc1:	mov    DWORD PTR [rbp+0x74],eax
   140004fc4:	mov    rax,QWORD PTR [rbp+0x110]
   140004fcb:	cmp    QWORD PTR [rbp+0x108],rax
   140004fd2:	jne    0x140005085
   140004fd8:	mov    rcx,rbx
   140004fdb:	call   0x140010810
   140004fe0:	lea    rdx,[rbx+0x20]
   140004fe4:	lea    rcx,[rsp+0x190]
   140004fec:	mov    r15d,eax
   140004fef:	mov    rax,QWORD PTR [rbx+0x68]
   140004ff3:	mov    QWORD PTR [rbp+0x40],rax
   140004ff7:	call   QWORD PTR [rip+0x101ab]        # 0x1400151a8
   140004ffd:	mov    rax,QWORD PTR [rsp+0x190]
   140005005:	mov    QWORD PTR [rbp+0x48],rax
   140005009:	mov    eax,DWORD PTR [rsp+0x198]
   140005010:	lea    rcx,[rbx+0x8]
   140005014:	mov    DWORD PTR [rbp+0x50],eax
   140005017:	mov    eax,DWORD PTR [rsp+0x19c]
   14000501e:	mov    DWORD PTR [rbp+0x54],eax
   140005021:	mov    rdi,QWORD PTR [rbx+0x50]
   140005025:	call   QWORD PTR [rip+0x10165]        # 0x140015190
   14000502b:	mov    rcx,rdi
   14000502e:	sub    rdi,QWORD PTR [rbx+0x48]
   140005032:	lea    r9,[rip+0xffffffffffffafc7]        # 0x140000000
   140005039:	sub    rcx,rax
   14000503c:	mov    eax,DWORD PTR [rbx+0x84]
   140005042:	sar    rdi,1
   140005045:	mov    DWORD PTR [rsp+0x5c],eax
   140005049:	mov    eax,DWORD PTR [rbx+0x88]
   14000504f:	sar    rcx,1
   140005052:	mov    DWORD PTR [rsp+0x58],ecx
   140005056:	lea    rcx,[rsp+0x58]
   14000505b:	mov    DWORD PTR [rsp+0x60],eax
   14000505f:	inc    edi
   140005061:	mov    DWORD PTR [rsp+0x64],edi
   140005065:	mov    eax,DWORD PTR [rcx]
   140005067:	lea    rdi,[rip+0x12232]        # 0x1400172a0
   14000506e:	mov    DWORD PTR [rbp+0x58],eax
   140005071:	mov    eax,DWORD PTR [rcx+0x4]
   140005074:	mov    DWORD PTR [rbp+0x5c],eax
   140005077:	mov    eax,DWORD PTR [rcx+0x8]
   14000507a:	mov    DWORD PTR [rbp+0x60],eax
   14000507d:	mov    eax,DWORD PTR [rcx+0xc]
   140005080:	mov    DWORD PTR [rbp+0x64],eax
   140005083:	jmp    0x1400050d2
   140005085:	mov    rcx,QWORD PTR [rbp+0x108]
   14000508c:	mov    rax,QWORD PTR [rcx+0x8]
   140005090:	mov    r15d,DWORD PTR [rcx]
   140005093:	mov    QWORD PTR [rbp+0x40],rax
   140005097:	mov    rax,QWORD PTR [rcx+0x20]
   14000509b:	mov    QWORD PTR [rbp+0x48],rax
   14000509f:	mov    eax,DWORD PTR [rcx+0x28]
   1400050a2:	mov    DWORD PTR [rbp+0x50],eax
   1400050a5:	mov    eax,DWORD PTR [rcx+0x2c]
   1400050a8:	mov    DWORD PTR [rbp+0x54],eax
   1400050ab:	mov    rcx,QWORD PTR [rbp+0x108]
   1400050b2:	mov    eax,DWORD PTR [rcx+0x10]
   1400050b5:	mov    DWORD PTR [rbp+0x58],eax
   1400050b8:	mov    eax,DWORD PTR [rcx+0x14]
   1400050bb:	mov    DWORD PTR [rbp+0x5c],eax
   1400050be:	mov    eax,DWORD PTR [rcx+0x18]
   1400050c1:	mov    DWORD PTR [rbp+0x60],eax
   1400050c4:	mov    eax,DWORD PTR [rcx+0x1c]
   1400050c7:	mov    DWORD PTR [rbp+0x64],eax
   1400050ca:	add    QWORD PTR [rbp+0x108],0x30
   1400050d2:	movsxd rdx,r13d
   1400050d5:	movsx  eax,WORD PTR [r9+rdx*2+0x187c0]
   1400050de:	add    eax,r15d
   1400050e1:	js     0x1400050ff
   1400050e3:	movsxd rcx,eax
   1400050e6:	movsx  eax,WORD PTR [r9+rcx*2+0x1ae70]
   1400050ef:	cmp    eax,r15d
   1400050f2:	jne    0x1400050ff
   1400050f4:	movsx  r13d,WORD PTR [r9+rcx*2+0x19230]
   1400050fd:	jmp    0x14000510b
   1400050ff:	movsx  r13d,WORD PTR [r9+rdx*2+0x181a0]
   140005108:	neg    r13d
   14000510b:	test   r13d,r13d
   14000510e:	jle    0x14000517b
   140005110:	cmp    r13d,0x299
   140005117:	je     0x14000b7e6
   14000511d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005121:	mov    rcx,QWORD PTR [rbp+0x18]
   140005125:	mov    rax,QWORD PTR [rbp+0x40]
   140005129:	mov    QWORD PTR [rcx+rdx*8],rax
   14000512d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005131:	mov    rax,QWORD PTR [rbp+0x48]
   140005135:	shl    rcx,0x4
   140005139:	or     r15d,0xffffffff
   14000513d:	add    rcx,QWORD PTR [rbp+0x30]
   140005141:	mov    QWORD PTR [rcx],rax
   140005144:	mov    eax,DWORD PTR [rbp+0x50]
   140005147:	mov    DWORD PTR [rcx+0x8],eax
   14000514a:	mov    eax,DWORD PTR [rbp+0x54]
   14000514d:	mov    DWORD PTR [rcx+0xc],eax
   140005150:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005154:	mov    eax,DWORD PTR [rbp+0x58]
   140005157:	mov    rcx,QWORD PTR [rbp+0x28]
   14000515b:	add    rdx,rdx
   14000515e:	mov    DWORD PTR [rcx+rdx*8],eax
   140005161:	mov    eax,DWORD PTR [rbp+0x5c]
   140005164:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   140005168:	mov    eax,DWORD PTR [rbp+0x60]
   14000516b:	mov    DWORD PTR [rcx+rdx*8+0x8],eax
   14000516f:	mov    eax,DWORD PTR [rbp+0x64]
   140005172:	mov    DWORD PTR [rcx+rdx*8+0xc],eax
   140005176:	jmp    0x14000ae95
   14000517b:	jns    0x14000ae95
   140005181:	or     ecx,0xffffffff
   140005184:	sub    ecx,r13d
   140005187:	movsxd r14,ecx
   14000518a:	movsx  eax,WORD PTR [r9+r14*2+0x17ed0]
   140005193:	sub    DWORD PTR [rbp+0x10],eax
   140005196:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000519a:	cmp    ecx,0x163
   1400051a0:	ja     0x14000ae40
   1400051a6:	movsxd rax,ecx
   1400051a9:	movzx  eax,BYTE PTR [r9+rax*1+0xbf08]
   1400051b2:	mov    ecx,DWORD PTR [r9+rax*4+0xbc30]
   1400051ba:	add    rcx,r9
   1400051bd:	jmp    rcx
   1400051bf:	mov    rcx,QWORD PTR [rbp+0x18]
   1400051c3:	mov    rax,QWORD PTR [rcx+rdx*8+0x8]
   1400051c8:	mov    QWORD PTR [rcx+rdx*8],rax
   1400051cc:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400051d0:	mov    rax,QWORD PTR [rbp+0x18]
   1400051d4:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400051d8:	mov    QWORD PTR [rbp+0x38],rcx
   1400051dc:	jmp    0x14000ae40
   1400051e1:	mov    rcx,QWORD PTR [rbp+0x8]
   1400051e5:	cmp    QWORD PTR [rcx+0x18],r12
   1400051e9:	je     0x1400051ff
   1400051eb:	mov    r8,QWORD PTR [rcx+0x18]
   1400051ef:	lea    rax,[r8+0x20]
   1400051f3:	cmp    rax,QWORD PTR [rcx+0x20]
   1400051f7:	jae    0x1400051ff
   1400051f9:	mov    QWORD PTR [rcx+0x18],rax
   1400051fd:	jmp    0x140005213
   1400051ff:	mov    edx,0x20
   140005204:	call   0x1400025c0
   140005209:	lea    r9,[rip+0xffffffffffffadf0]        # 0x140000000
   140005210:	mov    r8,rax
   140005213:	test   r8,r8
   140005216:	je     0x140005264
   140005218:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000521c:	mov    rax,QWORD PTR [rbp+0x18]
   140005220:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140005225:	mov    rdi,QWORD PTR [rdx+0x10]
   140005229:	mov    QWORD PTR [rdx+0x10],r12
   14000522d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005231:	mov    rax,QWORD PTR [rbp+0x18]
   140005235:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005239:	lea    rax,[rip+0x11ca8]        # 0x140016ee8
   140005240:	mov    QWORD PTR [r8],rax
   140005243:	mov    QWORD PTR [r8+0x10],rdx
   140005247:	mov    QWORD PTR [r8+0x18],rdi
   14000524b:	mov    DWORD PTR [r8+0x8],0x57
   140005253:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005257:	mov    rax,QWORD PTR [rbp+0x18]
   14000525b:	mov    QWORD PTR [rax+rcx*8],r8
   14000525f:	jmp    0x14000ae40
   140005264:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005268:	mov    rax,QWORD PTR [rbp+0x18]
   14000526c:	mov    r8,r12
   14000526f:	mov    QWORD PTR [rax+rcx*8],r12
   140005273:	jmp    0x14000ae40
   140005278:	mov    rax,QWORD PTR [rbp+0x18]
   14000527c:	mov    rdx,QWORD PTR [rax+rdx*8]
   140005280:	mov    rdi,QWORD PTR [rdx+0x18]
   140005284:	mov    QWORD PTR [rdx+0x18],r12
   140005288:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000528c:	mov    rax,QWORD PTR [rbp+0x18]
   140005290:	mov    QWORD PTR [rax+rcx*8],rdi
   140005294:	jmp    0x14000ae40
   140005299:	mov    rdx,QWORD PTR [rbp+0x8]
   14000529d:	mov    ecx,0x20
   1400052a2:	call   0x140004140
   1400052a7:	mov    rdi,rax
   1400052aa:	test   rax,rax
   1400052ad:	je     0x1400052d6
   1400052af:	mov    rax,QWORD PTR [rbp+0x18]
   1400052b3:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400052b7:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400052bb:	lea    rax,[rip+0x11bd6]        # 0x140016e98
   1400052c2:	mov    QWORD PTR [rdi],rax
   1400052c5:	mov    QWORD PTR [rdi+0x10],rdx
   1400052c9:	mov    QWORD PTR [rdi+0x18],rdi
   1400052cd:	mov    DWORD PTR [rdi+0x8],0x5e
   1400052d4:	jmp    0x1400052d9
   1400052d6:	mov    rdi,r12
   1400052d9:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400052dd:	mov    rax,QWORD PTR [rbp+0x18]
   1400052e1:	lea    r9,[rip+0xffffffffffffad18]        # 0x140000000
   1400052e8:	mov    QWORD PTR [rax+rcx*8],rdi
   1400052ec:	jmp    0x14000ae40
   1400052f1:	mov    rdx,QWORD PTR [rbp+0x8]
   1400052f5:	mov    ecx,0x20
   1400052fa:	call   0x140004140
   1400052ff:	mov    rdi,rax
   140005302:	test   rax,rax
   140005305:	je     0x1400052d6
   140005307:	mov    rax,QWORD PTR [rbp+0x18]
   14000530b:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000530f:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140005314:	mov    rcx,QWORD PTR [rax+rcx*8]
   140005318:	lea    rax,[rip+0x11b79]        # 0x140016e98
   14000531f:	mov    QWORD PTR [rdi],rax
   140005322:	mov    QWORD PTR [rdi+0x10],rdx
   140005326:	mov    DWORD PTR [rdi+0x8],0x5e
   14000532d:	mov    rax,QWORD PTR [rcx+0x18]
   140005331:	mov    QWORD PTR [rdi+0x18],rax
   140005335:	mov    QWORD PTR [rcx+0x18],rdi
   140005339:	jmp    0x1400052d9
   14000533b:	mov    rdi,QWORD PTR [rbp+0x28]
   14000533f:	mov    rax,QWORD PTR [rbp+0x18]
   140005343:	lea    r8,[rdx+0x1]
   140005347:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000534b:	add    r8,r8
   14000534e:	mov    eax,DWORD PTR [rdi+r8*8]
   140005352:	mov    DWORD PTR [rdx+0x28],eax
   140005355:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000535a:	mov    DWORD PTR [rdx+0x2c],eax
   14000535d:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   140005362:	mov    DWORD PTR [rdx+0x30],eax
   140005365:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000536a:	mov    DWORD PTR [rdx+0x34],eax
   14000536d:	jmp    0x14000ae40
   140005372:	mov    rax,QWORD PTR [rbp+0x18]
   140005376:	lea    r8,[rdx+0x1]
   14000537a:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000537e:	mov    rdi,QWORD PTR [rbp+0x28]
   140005382:	add    r8,r8
   140005385:	mov    eax,DWORD PTR [rdi+r8*8]
   140005389:	mov    DWORD PTR [rdx+0x88],eax
   14000538f:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   140005394:	mov    DWORD PTR [rdx+0x8c],eax
   14000539a:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000539f:	mov    DWORD PTR [rdx+0x90],eax
   1400053a5:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   1400053aa:	mov    DWORD PTR [rdx+0x94],eax
   1400053b0:	jmp    0x14000ae40
   1400053b5:	mov    rdi,QWORD PTR [rbp+0x28]
   1400053b9:	mov    rax,QWORD PTR [rbp+0x18]
   1400053bd:	lea    r8,[rdx+0x1]
   1400053c1:	mov    rdx,QWORD PTR [rax+rdx*8]
   1400053c5:	add    r8,r8
   1400053c8:	mov    eax,DWORD PTR [rdi+r8*8]
   1400053cc:	mov    DWORD PTR [rdx+0x58],eax
   1400053cf:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   1400053d4:	mov    DWORD PTR [rdx+0x5c],eax
   1400053d7:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   1400053dc:	mov    DWORD PTR [rdx+0x60],eax
   1400053df:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   1400053e4:	mov    DWORD PTR [rdx+0x64],eax
   1400053e7:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400053eb:	mov    rax,QWORD PTR [rbp+0x18]
   1400053ef:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400053f3:	lea    r8,[rcx+0x2]
   1400053f7:	jmp    0x14000537e
   1400053f9:	mov    rdi,QWORD PTR [rbp+0x28]
   1400053fd:	mov    rax,QWORD PTR [rbp+0x18]
   140005401:	lea    r8,[rdx+0x1]
   140005405:	mov    rdx,QWORD PTR [rax+rdx*8]
   140005409:	add    r8,r8
   14000540c:	mov    eax,DWORD PTR [rdi+r8*8]
   140005410:	mov    DWORD PTR [rdx+0x58],eax
   140005413:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   140005418:	mov    DWORD PTR [rdx+0x5c],eax
   14000541b:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   140005420:	mov    DWORD PTR [rdx+0x60],eax
   140005423:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   140005428:	mov    DWORD PTR [rdx+0x64],eax
   14000542b:	mov    rdi,QWORD PTR [rbp+0x28]
   14000542f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005433:	mov    rax,QWORD PTR [rbp+0x18]
   140005437:	lea    r8,[rcx+0x2]
   14000543b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000543f:	add    r8,r8
   140005442:	mov    eax,DWORD PTR [rdi+r8*8]
   140005446:	mov    DWORD PTR [rdx+0x68],eax
   140005449:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000544e:	mov    DWORD PTR [rdx+0x6c],eax
   140005451:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   140005456:	mov    DWORD PTR [rdx+0x70],eax
   140005459:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000545e:	mov    DWORD PTR [rdx+0x74],eax
   140005461:	mov    rdi,QWORD PTR [rbp+0x28]
   140005465:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005469:	mov    rax,QWORD PTR [rbp+0x18]
   14000546d:	lea    r8,[rcx+0x3]
   140005471:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005475:	add    r8,r8
   140005478:	mov    eax,DWORD PTR [rdi+r8*8]
   14000547c:	mov    DWORD PTR [rdx+0x78],eax
   14000547f:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   140005484:	mov    DWORD PTR [rdx+0x7c],eax
   140005487:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000548c:	mov    DWORD PTR [rdx+0x80],eax
   140005492:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   140005497:	mov    DWORD PTR [rdx+0x84],eax
   14000549d:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400054a1:	lea    eax,[rcx+0x3]
   1400054a4:	movsxd rdi,eax
   1400054a7:	mov    rax,QWORD PTR [rbp+0x18]
   1400054ab:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400054af:	shl    rdi,0x4
   1400054b3:	add    rdi,QWORD PTR [rbp+0x30]
   1400054b7:	mov    rax,QWORD PTR [rdi]
   1400054ba:	mov    QWORD PTR [rdx+0x28],rax
   1400054be:	mov    eax,DWORD PTR [rdi+0x8]
   1400054c1:	mov    DWORD PTR [rdx+0x30],eax
   1400054c4:	mov    eax,DWORD PTR [rdi+0xc]
   1400054c7:	mov    DWORD PTR [rdx+0x34],eax
   1400054ca:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400054ce:	mov    rax,QWORD PTR [rbp+0x18]
   1400054d2:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400054d6:	lea    r8,[rcx+0x4]
   1400054da:	jmp    0x14000537e
   1400054df:	mov    rdi,QWORD PTR [rbp+0x28]
   1400054e3:	mov    rax,QWORD PTR [rbp+0x18]
   1400054e7:	lea    r8,[rdx+0x1]
   1400054eb:	mov    rdx,QWORD PTR [rax+rdx*8]
   1400054ef:	add    r8,r8
   1400054f2:	mov    eax,DWORD PTR [rdi+r8*8]
   1400054f6:	mov    DWORD PTR [rdx+0x68],eax
   1400054f9:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   1400054fe:	mov    DWORD PTR [rdx+0x6c],eax
   140005501:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   140005506:	mov    DWORD PTR [rdx+0x70],eax
   140005509:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000550e:	mov    DWORD PTR [rdx+0x74],eax
   140005511:	mov    rdi,QWORD PTR [rbp+0x28]
   140005515:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005519:	mov    rax,QWORD PTR [rbp+0x18]
   14000551d:	lea    r8,[rcx+0x2]
   140005521:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005525:	add    r8,r8
   140005528:	mov    eax,DWORD PTR [rdi+r8*8]
   14000552c:	mov    DWORD PTR [rdx+0x78],eax
   14000552f:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   140005534:	mov    DWORD PTR [rdx+0x7c],eax
   140005537:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000553c:	mov    DWORD PTR [rdx+0x80],eax
   140005542:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   140005547:	mov    DWORD PTR [rdx+0x84],eax
   14000554d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005551:	lea    eax,[rcx+0x2]
   140005554:	movsxd rdi,eax
   140005557:	mov    rax,QWORD PTR [rbp+0x18]
   14000555b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000555f:	shl    rdi,0x4
   140005563:	add    rdi,QWORD PTR [rbp+0x30]
   140005567:	mov    rax,QWORD PTR [rdi]
   14000556a:	mov    QWORD PTR [rdx+0x28],rax
   14000556e:	mov    eax,DWORD PTR [rdi+0x8]
   140005571:	mov    DWORD PTR [rdx+0x30],eax
   140005574:	mov    eax,DWORD PTR [rdi+0xc]
   140005577:	mov    DWORD PTR [rdx+0x34],eax
   14000557a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000557e:	mov    rax,QWORD PTR [rbp+0x18]
   140005582:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005586:	lea    r8,[rcx+0x3]
   14000558a:	jmp    0x14000537e
   14000558f:	lea    eax,[rdx+0x1]
   140005592:	mov    rdx,QWORD PTR [rbp+0x18]
   140005596:	mov    rdi,r12
   140005599:	movsxd rcx,eax
   14000559c:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400055a0:	mov    rcx,rbp
   1400055a3:	call   0x140004580
   1400055a8:	mov    rbx,rax
   1400055ab:	test   rax,rax
   1400055ae:	je     0x140005600
   1400055b0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400055b4:	mov    ecx,0x38
   1400055b9:	call   0x140004140
   1400055be:	mov    rdi,rax
   1400055c1:	test   rax,rax
   1400055c4:	je     0x1400055fd
   1400055c6:	lea    rax,[rip+0x1187b]        # 0x140016e48
   1400055cd:	mov    QWORD PTR [rdi],rax
   1400055d0:	mov    QWORD PTR [rdi+0x10],rbx
   1400055d4:	mov    DWORD PTR [rdi+0x18],r12d
   1400055d8:	mov    DWORD PTR [rdi+0x1c],r12d
   1400055dc:	mov    DWORD PTR [rdi+0x20],r12d
   1400055e0:	mov    DWORD PTR [rdi+0x24],r12d
   1400055e4:	mov    DWORD PTR [rdi+0x28],r12d
   1400055e8:	mov    DWORD PTR [rdi+0x2c],r12d
   1400055ec:	mov    DWORD PTR [rdi+0x30],r12d
   1400055f0:	mov    DWORD PTR [rdi+0x34],r12d
   1400055f4:	mov    DWORD PTR [rdi+0x8],0x56
   1400055fb:	jmp    0x140005600
   1400055fd:	mov    rdi,r12
   140005600:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005604:	mov    rax,QWORD PTR [rbp+0x18]
   140005608:	mov    QWORD PTR [rax+rcx*8],rdi
   14000560c:	test   rdi,rdi
   14000560f:	je     0x14000b7fb
   140005615:	mov    rcx,QWORD PTR [rbp+0x28]
   140005619:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000561d:	lea    r9,[rip+0xffffffffffffa9dc]        # 0x140000000
   140005624:	add    rdx,rdx
   140005627:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000562a:	mov    DWORD PTR [rdi+0x18],eax
   14000562d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005631:	mov    DWORD PTR [rdi+0x1c],eax
   140005634:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005638:	mov    DWORD PTR [rdi+0x20],eax
   14000563b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000563f:	mov    DWORD PTR [rdi+0x24],eax
   140005642:	jmp    0x14000ae40
   140005647:	mov    rcx,QWORD PTR [rbp+0x18]
   14000564b:	mov    rdi,r12
   14000564e:	mov    rbx,QWORD PTR [rcx+rdx*8+0x8]
   140005653:	test   rbx,rbx
   140005656:	je     0x14000567f
   140005658:	cmp    DWORD PTR [rbx+0x8],0x3d
   14000565c:	jne    0x14000567f
   14000565e:	mov    rdx,QWORD PTR [rbp+0x8]
   140005662:	mov    ecx,0x98
   140005667:	call   0x140004140
   14000566c:	test   rax,rax
   14000566f:	je     0x1400056ba
   140005671:	lea    rdx,[rbx+0x10]
   140005675:	mov    rcx,rax
   140005678:	call   0x1400039c0
   14000567d:	jmp    0x1400056b7
   14000567f:	lea    eax,[rdx+0x1]
   140005682:	movsxd rdx,eax
   140005685:	mov    rdx,QWORD PTR [rcx+rdx*8]
   140005689:	mov    rcx,rbp
   14000568c:	call   0x140004650
   140005691:	mov    rbx,rax
   140005694:	test   rax,rax
   140005697:	je     0x1400056e3
   140005699:	mov    rdx,QWORD PTR [rbp+0x8]
   14000569d:	mov    ecx,0x98
   1400056a2:	call   0x140004140
   1400056a7:	test   rax,rax
   1400056aa:	je     0x1400056ba
   1400056ac:	mov    rdx,rbx
   1400056af:	mov    rcx,rax
   1400056b2:	call   0x140003a80
   1400056b7:	mov    rdi,rax
   1400056ba:	mov    rcx,QWORD PTR [rbp+0x28]
   1400056be:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400056c2:	inc    rdx
   1400056c5:	add    rdx,rdx
   1400056c8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400056cb:	mov    DWORD PTR [rdi+0x48],eax
   1400056ce:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400056d2:	mov    DWORD PTR [rdi+0x4c],eax
   1400056d5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400056d9:	mov    DWORD PTR [rdi+0x50],eax
   1400056dc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400056e0:	mov    DWORD PTR [rdi+0x54],eax
   1400056e3:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400056e7:	mov    rax,QWORD PTR [rbp+0x18]
   1400056eb:	mov    QWORD PTR [rax+rcx*8],rdi
   1400056ef:	test   rdi,rdi
   1400056f2:	je     0x14000b8b4
   1400056f8:	mov    rcx,QWORD PTR [rbp+0x28]
   1400056fc:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005700:	lea    r9,[rip+0xffffffffffffa8f9]        # 0x140000000
   140005707:	add    rdx,rdx
   14000570a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000570d:	mov    DWORD PTR [rdi+0x38],eax
   140005710:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005714:	mov    DWORD PTR [rdi+0x3c],eax
   140005717:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000571b:	mov    DWORD PTR [rdi+0x40],eax
   14000571e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005722:	mov    DWORD PTR [rdi+0x44],eax
   140005725:	jmp    0x14000ae40
   14000572a:	mov    rdx,QWORD PTR [rbp+0x8]
   14000572e:	mov    ecx,0x20
   140005733:	call   0x140004140
   140005738:	mov    rdi,rax
   14000573b:	test   rax,rax
   14000573e:	je     0x1400052d6
   140005744:	mov    rax,QWORD PTR [rbp+0x18]
   140005748:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000574c:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005750:	lea    rax,[rip+0x11651]        # 0x140016da8
   140005757:	mov    QWORD PTR [rdi],rax
   14000575a:	mov    QWORD PTR [rdi+0x10],rdi
   14000575e:	mov    QWORD PTR [rdi+0x18],rdx
   140005762:	mov    DWORD PTR [rdi+0x8],0x54
   140005769:	jmp    0x1400052d9
   14000576e:	mov    rdx,QWORD PTR [rbp+0x8]
   140005772:	mov    ecx,0x20
   140005777:	call   0x140004140
   14000577c:	mov    rdi,rax
   14000577f:	test   rax,rax
   140005782:	je     0x1400052d6
   140005788:	mov    rax,QWORD PTR [rbp+0x18]
   14000578c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005790:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140005795:	mov    rcx,QWORD PTR [rax+rcx*8]
   140005799:	lea    rax,[rip+0x11608]        # 0x140016da8
   1400057a0:	mov    QWORD PTR [rdi],rax
   1400057a3:	mov    QWORD PTR [rdi+0x18],rdx
   1400057a7:	mov    DWORD PTR [rdi+0x8],0x54
   1400057ae:	mov    rax,QWORD PTR [rcx+0x10]
   1400057b2:	mov    QWORD PTR [rdi+0x10],rax
   1400057b6:	mov    QWORD PTR [rcx+0x10],rdi
   1400057ba:	jmp    0x1400052d9
   1400057bf:	mov    rdx,QWORD PTR [rbp+0x8]
   1400057c3:	mov    ecx,0x30
   1400057c8:	call   0x140004140
   1400057cd:	mov    rdi,rax
   1400057d0:	test   rax,rax
   1400057d3:	je     0x1400052d6
   1400057d9:	mov    rax,QWORD PTR [rbp+0x18]
   1400057dd:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400057e1:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400057e5:	lea    rax,[rip+0x1174c]        # 0x140016f38
   1400057ec:	mov    QWORD PTR [rdi],rax
   1400057ef:	mov    QWORD PTR [rdi+0x10],rdi
   1400057f3:	mov    QWORD PTR [rdi+0x18],rdx
   1400057f7:	mov    DWORD PTR [rdi+0x20],r12d
   1400057fb:	mov    DWORD PTR [rdi+0x24],r12d
   1400057ff:	mov    DWORD PTR [rdi+0x28],r12d
   140005803:	mov    DWORD PTR [rdi+0x2c],r12d
   140005807:	mov    DWORD PTR [rdi+0x8],0x55
   14000580e:	jmp    0x1400052d9
   140005813:	mov    rdx,QWORD PTR [rbp+0x8]
   140005817:	mov    ecx,0x30
   14000581c:	call   0x140004140
   140005821:	mov    rdi,rax
   140005824:	test   rax,rax
   140005827:	je     0x14000586d
   140005829:	mov    rax,QWORD PTR [rbp+0x18]
   14000582d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005831:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140005836:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000583a:	lea    rax,[rip+0x116f7]        # 0x140016f38
   140005841:	mov    QWORD PTR [rdi],rax
   140005844:	mov    QWORD PTR [rdi+0x18],rdx
   140005848:	mov    DWORD PTR [rdi+0x20],r12d
   14000584c:	mov    DWORD PTR [rdi+0x24],r12d
   140005850:	mov    DWORD PTR [rdi+0x28],r12d
   140005854:	mov    DWORD PTR [rdi+0x2c],r12d
   140005858:	mov    DWORD PTR [rdi+0x8],0x55
   14000585f:	mov    rax,QWORD PTR [rcx+0x10]
   140005863:	mov    QWORD PTR [rdi+0x10],rax
   140005867:	mov    QWORD PTR [rcx+0x10],rdi
   14000586b:	jmp    0x140005870
   14000586d:	mov    rdi,r12
   140005870:	mov    rcx,QWORD PTR [rbp+0x28]
   140005874:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005878:	inc    rdx
   14000587b:	add    rdx,rdx
   14000587e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005881:	mov    DWORD PTR [rdi+0x20],eax
   140005884:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005888:	mov    DWORD PTR [rdi+0x24],eax
   14000588b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000588f:	mov    DWORD PTR [rdi+0x28],eax
   140005892:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005896:	mov    DWORD PTR [rdi+0x2c],eax
   140005899:	jmp    0x1400052d9
   14000589e:	mov    rdx,QWORD PTR [rbp+0x8]
   1400058a2:	mov    ecx,0x38
   1400058a7:	call   0x140004140
   1400058ac:	mov    rdi,rax
   1400058af:	test   rax,rax
   1400058b2:	je     0x1400058eb
   1400058b4:	lea    rax,[rip+0x116cd]        # 0x140016f88
   1400058bb:	mov    QWORD PTR [rdi],rax
   1400058be:	mov    DWORD PTR [rdi+0x10],r12d
   1400058c2:	mov    DWORD PTR [rdi+0x14],r12d
   1400058c6:	mov    DWORD PTR [rdi+0x18],r12d
   1400058ca:	mov    DWORD PTR [rdi+0x1c],r12d
   1400058ce:	mov    QWORD PTR [rdi+0x20],r12
   1400058d2:	mov    DWORD PTR [rdi+0x28],r12d
   1400058d6:	mov    DWORD PTR [rdi+0x2c],r12d
   1400058da:	mov    DWORD PTR [rdi+0x30],r12d
   1400058de:	mov    DWORD PTR [rdi+0x34],r12d
   1400058e2:	mov    DWORD PTR [rdi+0x8],0x53
   1400058e9:	jmp    0x1400058ee
   1400058eb:	mov    rdi,r12
   1400058ee:	mov    rcx,QWORD PTR [rbp+0x28]
   1400058f2:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400058f6:	add    rdx,rdx
   1400058f9:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400058fc:	mov    DWORD PTR [rdi+0x10],eax
   1400058ff:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005903:	mov    DWORD PTR [rdi+0x14],eax
   140005906:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000590a:	mov    DWORD PTR [rdi+0x18],eax
   14000590d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005911:	mov    DWORD PTR [rdi+0x1c],eax
   140005914:	mov    rcx,QWORD PTR [rbp+0x28]
   140005918:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000591c:	inc    rdx
   14000591f:	add    rdx,rdx
   140005922:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005925:	mov    DWORD PTR [rdi+0x28],eax
   140005928:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000592c:	mov    DWORD PTR [rdi+0x2c],eax
   14000592f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005933:	mov    DWORD PTR [rdi+0x30],eax
   140005936:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000593a:	mov    DWORD PTR [rdi+0x34],eax
   14000593d:	jmp    0x1400052d9
   140005942:	mov    rdx,QWORD PTR [rbp+0x8]
   140005946:	mov    ecx,0x38
   14000594b:	call   0x140004140
   140005950:	mov    rdi,rax
   140005953:	test   rax,rax
   140005956:	je     0x1400059a4
   140005958:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000595c:	mov    rax,QWORD PTR [rbp+0x18]
   140005960:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140005965:	lea    rcx,[rip+0x1161c]        # 0x140016f88
   14000596c:	mov    rax,QWORD PTR [rdx+0x10]
   140005970:	mov    QWORD PTR [rdx+0x10],r12
   140005974:	mov    QWORD PTR [rdi],rcx
   140005977:	mov    DWORD PTR [rdi+0x10],r12d
   14000597b:	mov    DWORD PTR [rdi+0x14],r12d
   14000597f:	mov    DWORD PTR [rdi+0x18],r12d
   140005983:	mov    DWORD PTR [rdi+0x1c],r12d
   140005987:	mov    QWORD PTR [rdi+0x20],rax
   14000598b:	mov    DWORD PTR [rdi+0x28],r12d
   14000598f:	mov    DWORD PTR [rdi+0x2c],r12d
   140005993:	mov    DWORD PTR [rdi+0x30],r12d
   140005997:	mov    DWORD PTR [rdi+0x34],r12d
   14000599b:	mov    DWORD PTR [rdi+0x8],0x53
   1400059a2:	jmp    0x1400059a7
   1400059a4:	mov    rdi,r12
   1400059a7:	mov    rcx,QWORD PTR [rbp+0x28]
   1400059ab:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400059af:	add    rdx,rdx
   1400059b2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400059b5:	mov    DWORD PTR [rdi+0x10],eax
   1400059b8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400059bc:	mov    DWORD PTR [rdi+0x14],eax
   1400059bf:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400059c3:	mov    DWORD PTR [rdi+0x18],eax
   1400059c6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400059ca:	mov    DWORD PTR [rdi+0x1c],eax
   1400059cd:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400059d1:	add    rdx,0x2
   1400059d5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400059d9:	add    rdx,rdx
   1400059dc:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400059df:	mov    DWORD PTR [rdi+0x28],eax
   1400059e2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400059e6:	mov    DWORD PTR [rdi+0x2c],eax
   1400059e9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400059ed:	mov    DWORD PTR [rdi+0x30],eax
   1400059f0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400059f4:	mov    DWORD PTR [rdi+0x34],eax
   1400059f7:	jmp    0x1400052d9
   1400059fc:	mov    rdx,QWORD PTR [rbp+0x8]
   140005a00:	mov    ecx,0x20
   140005a05:	call   0x140004140
   140005a0a:	mov    r11,rax
   140005a0d:	test   rax,rax
   140005a10:	je     0x140005a55
   140005a12:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005a16:	mov    rax,QWORD PTR [rbp+0x18]
   140005a1a:	lea    r9,[rip+0xffffffffffffa5df]        # 0x140000000
   140005a21:	mov    rdi,QWORD PTR [rax+rcx*8+0x8]
   140005a26:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005a2a:	lea    rax,[rip+0x115f7]        # 0x140017028
   140005a31:	mov    QWORD PTR [r11],rax
   140005a34:	mov    QWORD PTR [r11+0x10],rdx
   140005a38:	mov    QWORD PTR [r11+0x18],rdi
   140005a3c:	mov    DWORD PTR [r11+0x8],0x52
   140005a44:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005a48:	mov    rax,QWORD PTR [rbp+0x18]
   140005a4c:	mov    QWORD PTR [rax+rcx*8],r11
   140005a50:	jmp    0x14000ae40
   140005a55:	mov    r11,r12
   140005a58:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005a5c:	mov    rax,QWORD PTR [rbp+0x18]
   140005a60:	lea    r9,[rip+0xffffffffffffa599]        # 0x140000000
   140005a67:	mov    QWORD PTR [rax+rcx*8],r11
   140005a6b:	jmp    0x14000ae40
   140005a70:	mov    rdx,QWORD PTR [rbp+0x8]
   140005a74:	mov    ecx,0x50
   140005a79:	call   0x140004140
   140005a7e:	mov    r11,rax
   140005a81:	test   rax,rax
   140005a84:	je     0x140005af3
   140005a86:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005a8a:	mov    rax,QWORD PTR [rbp+0x18]
   140005a8e:	mov    rdx,QWORD PTR [rax+rcx*8+0x18]
   140005a93:	mov    rdi,QWORD PTR [rdx+0x10]
   140005a97:	mov    QWORD PTR [rdx+0x10],r12
   140005a9b:	mov    rax,QWORD PTR [rbp+0x18]
   140005a9f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005aa3:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005aa7:	lea    rax,[rip+0x116ba]        # 0x140017168
   140005aae:	mov    QWORD PTR [r11],rax
   140005ab1:	mov    QWORD PTR [r11+0x10],rdx
   140005ab5:	mov    QWORD PTR [r11+0x18],rdi
   140005ab9:	mov    DWORD PTR [r11+0x20],r12d
   140005abd:	mov    DWORD PTR [r11+0x24],r12d
   140005ac1:	mov    DWORD PTR [r11+0x28],r12d
   140005ac5:	mov    DWORD PTR [r11+0x2c],r12d
   140005ac9:	mov    DWORD PTR [r11+0x30],r12d
   140005acd:	mov    DWORD PTR [r11+0x34],r12d
   140005ad1:	mov    DWORD PTR [r11+0x38],r12d
   140005ad5:	mov    DWORD PTR [r11+0x3c],r12d
   140005ad9:	mov    DWORD PTR [r11+0x40],r12d
   140005add:	mov    DWORD PTR [r11+0x44],r12d
   140005ae1:	mov    DWORD PTR [r11+0x48],r12d
   140005ae5:	mov    DWORD PTR [r11+0x4c],r12d
   140005ae9:	mov    DWORD PTR [r11+0x8],0x4f
   140005af1:	jmp    0x140005af6
   140005af3:	mov    r11,r12
   140005af6:	mov    rcx,QWORD PTR [rbp+0x28]
   140005afa:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005afe:	lea    r9,[rip+0xffffffffffffa4fb]        # 0x140000000
   140005b05:	inc    rdx
   140005b08:	add    rdx,rdx
   140005b0b:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005b0e:	mov    DWORD PTR [r11+0x20],eax
   140005b12:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005b16:	mov    DWORD PTR [r11+0x24],eax
   140005b1a:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005b1e:	mov    DWORD PTR [r11+0x28],eax
   140005b22:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005b26:	mov    DWORD PTR [r11+0x2c],eax
   140005b2a:	mov    rcx,QWORD PTR [rbp+0x28]
   140005b2e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005b32:	add    rdx,0x2
   140005b36:	add    rdx,rdx
   140005b39:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005b3c:	mov    DWORD PTR [r11+0x30],eax
   140005b40:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005b44:	mov    DWORD PTR [r11+0x34],eax
   140005b48:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005b4c:	mov    DWORD PTR [r11+0x38],eax
   140005b50:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005b54:	mov    DWORD PTR [r11+0x3c],eax
   140005b58:	mov    rcx,QWORD PTR [rbp+0x28]
   140005b5c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005b60:	add    rdx,0x4
   140005b64:	add    rdx,rdx
   140005b67:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005b6a:	mov    DWORD PTR [r11+0x40],eax
   140005b6e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005b72:	mov    DWORD PTR [r11+0x44],eax
   140005b76:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005b7a:	mov    DWORD PTR [r11+0x48],eax
   140005b7e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005b82:	mov    DWORD PTR [r11+0x4c],eax
   140005b86:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005b8a:	mov    rax,QWORD PTR [rbp+0x18]
   140005b8e:	mov    QWORD PTR [rax+rcx*8],r11
   140005b92:	jmp    0x14000ae40
   140005b97:	mov    rdx,QWORD PTR [rbp+0x8]
   140005b9b:	mov    ecx,0x40
   140005ba0:	call   0x140004140
   140005ba5:	mov    r11,rax
   140005ba8:	test   rax,rax
   140005bab:	je     0x140005bf7
   140005bad:	mov    rax,QWORD PTR [rbp+0x18]
   140005bb1:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005bb5:	mov    rdi,QWORD PTR [rax+rcx*8+0x18]
   140005bba:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140005bbf:	mov    rcx,QWORD PTR [rax+rcx*8]
   140005bc3:	lea    rax,[rip+0x114fe]        # 0x1400170c8
   140005bca:	mov    QWORD PTR [r11],rax
   140005bcd:	mov    QWORD PTR [r11+0x10],rcx
   140005bd1:	mov    QWORD PTR [r11+0x18],rdx
   140005bd5:	mov    QWORD PTR [r11+0x20],rdi
   140005bd9:	mov    DWORD PTR [r11+0x28],r12d
   140005bdd:	mov    DWORD PTR [r11+0x2c],r12d
   140005be1:	mov    DWORD PTR [r11+0x30],r12d
   140005be5:	mov    DWORD PTR [r11+0x34],r12d
   140005be9:	mov    BYTE PTR [r11+0x38],r12b
   140005bed:	mov    DWORD PTR [r11+0x8],0x51
   140005bf5:	jmp    0x140005bfa
   140005bf7:	mov    r11,r12
   140005bfa:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005bfe:	inc    rdx
   140005c01:	mov    rcx,QWORD PTR [rbp+0x28]
   140005c05:	add    rdx,rdx
   140005c08:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005c0b:	mov    DWORD PTR [r11+0x28],eax
   140005c0f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005c13:	mov    DWORD PTR [r11+0x2c],eax
   140005c17:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005c1b:	mov    DWORD PTR [r11+0x30],eax
   140005c1f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005c23:	mov    DWORD PTR [r11+0x34],eax
   140005c27:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005c2b:	mov    rax,QWORD PTR [rbp+0x18]
   140005c2f:	lea    r9,[rip+0xffffffffffffa3ca]        # 0x140000000
   140005c36:	mov    QWORD PTR [rax+rcx*8],r11
   140005c3a:	jmp    0x14000ae40
   140005c3f:	mov    rdx,QWORD PTR [rbp+0x8]
   140005c43:	mov    ecx,0x40
   140005c48:	call   0x140004140
   140005c4d:	mov    r11,rax
   140005c50:	test   rax,rax
   140005c53:	je     0x140005c9f
   140005c55:	mov    rax,QWORD PTR [rbp+0x18]
   140005c59:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005c5d:	mov    rdi,QWORD PTR [rax+rcx*8+0x18]
   140005c62:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005c66:	mov    rcx,QWORD PTR [rax+rcx*8+0x10]
   140005c6b:	lea    rax,[rip+0x11456]        # 0x1400170c8
   140005c72:	mov    QWORD PTR [r11],rax
   140005c75:	mov    QWORD PTR [r11+0x10],rcx
   140005c79:	mov    QWORD PTR [r11+0x18],rdx
   140005c7d:	mov    QWORD PTR [r11+0x20],rdi
   140005c81:	mov    DWORD PTR [r11+0x28],r12d
   140005c85:	mov    DWORD PTR [r11+0x2c],r12d
   140005c89:	mov    DWORD PTR [r11+0x30],r12d
   140005c8d:	mov    DWORD PTR [r11+0x34],r12d
   140005c91:	mov    BYTE PTR [r11+0x38],r12b
   140005c95:	mov    DWORD PTR [r11+0x8],0x51
   140005c9d:	jmp    0x140005ca2
   140005c9f:	mov    r11,r12
   140005ca2:	mov    rcx,QWORD PTR [rbp+0x28]
   140005ca6:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005caa:	lea    r9,[rip+0xffffffffffffa34f]        # 0x140000000
   140005cb1:	inc    rdx
   140005cb4:	add    rdx,rdx
   140005cb7:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005cba:	mov    DWORD PTR [r11+0x28],eax
   140005cbe:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005cc2:	mov    DWORD PTR [r11+0x2c],eax
   140005cc6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005cca:	mov    DWORD PTR [r11+0x30],eax
   140005cce:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005cd2:	mov    DWORD PTR [r11+0x34],eax
   140005cd6:	mov    BYTE PTR [r11+0x38],0x1
   140005cdb:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005cdf:	mov    rax,QWORD PTR [rbp+0x18]
   140005ce3:	mov    QWORD PTR [rax+rcx*8],r11
   140005ce7:	jmp    0x14000ae40
   140005cec:	mov    rdx,QWORD PTR [rbp+0x8]
   140005cf0:	mov    ecx,0x30
   140005cf5:	call   0x140004140
   140005cfa:	mov    r11,rax
   140005cfd:	test   rax,rax
   140005d00:	je     0x140005d3f
   140005d02:	mov    rax,QWORD PTR [rbp+0x18]
   140005d06:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005d0a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140005d0f:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005d13:	lea    rax,[rip+0x113fe]        # 0x140017118
   140005d1a:	mov    QWORD PTR [r11],rax
   140005d1d:	mov    QWORD PTR [r11+0x10],rdx
   140005d21:	mov    QWORD PTR [r11+0x18],rdi
   140005d25:	mov    DWORD PTR [r11+0x20],r12d
   140005d29:	mov    DWORD PTR [r11+0x24],r12d
   140005d2d:	mov    DWORD PTR [r11+0x28],r12d
   140005d31:	mov    DWORD PTR [r11+0x2c],r12d
   140005d35:	mov    DWORD PTR [r11+0x8],0x5c
   140005d3d:	jmp    0x140005d42
   140005d3f:	mov    r11,r12
   140005d42:	mov    rcx,QWORD PTR [rbp+0x28]
   140005d46:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005d4a:	inc    rdx
   140005d4d:	add    rdx,rdx
   140005d50:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005d53:	mov    DWORD PTR [r11+0x20],eax
   140005d57:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005d5b:	mov    DWORD PTR [r11+0x24],eax
   140005d5f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005d63:	mov    DWORD PTR [r11+0x28],eax
   140005d67:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005d6b:	mov    DWORD PTR [r11+0x2c],eax
   140005d6f:	jmp    0x140005c27
   140005d74:	mov    rax,QWORD PTR [rbp+0x18]
   140005d78:	mov    rdx,QWORD PTR [rax+rdx*8]
   140005d7c:	mov    rdi,QWORD PTR [rdx+0x30]
   140005d80:	mov    QWORD PTR [rdx+0x30],r12
   140005d84:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005d88:	mov    rax,QWORD PTR [rbp+0x18]
   140005d8c:	mov    QWORD PTR [rax+rcx*8],rdi
   140005d90:	jmp    0x14000ae40
   140005d95:	mov    rdx,QWORD PTR [rbp+0x8]
   140005d99:	mov    ecx,0x68
   140005d9e:	call   0x140004140
   140005da3:	mov    r11,rax
   140005da6:	test   rax,rax
   140005da9:	je     0x140005dd7
   140005dab:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005daf:	mov    rdi,QWORD PTR [rbp+0x30]
   140005db3:	lea    eax,[rcx+0x1]
   140005db6:	mov    rdx,rcx
   140005db9:	mov    rcx,r11
   140005dbc:	movsxd r8,eax
   140005dbf:	shl    rdx,0x4
   140005dc3:	shl    r8,0x4
   140005dc7:	add    rdx,rdi
   140005dca:	add    r8,rdi
   140005dcd:	call   0x140003ce0
   140005dd2:	mov    rdi,rax
   140005dd5:	jmp    0x140005dda
   140005dd7:	mov    rdi,r12
   140005dda:	mov    rcx,QWORD PTR [rbp+0x28]
   140005dde:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005de2:	add    rdx,rdx
   140005de5:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005de8:	mov    DWORD PTR [rdi+0x48],eax
   140005deb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005def:	mov    DWORD PTR [rdi+0x4c],eax
   140005df2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005df6:	mov    DWORD PTR [rdi+0x50],eax
   140005df9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005dfd:	mov    DWORD PTR [rdi+0x54],eax
   140005e00:	mov    rcx,QWORD PTR [rbp+0x28]
   140005e04:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005e08:	inc    rdx
   140005e0b:	add    rdx,rdx
   140005e0e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005e11:	mov    DWORD PTR [rdi+0x58],eax
   140005e14:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005e18:	mov    DWORD PTR [rdi+0x5c],eax
   140005e1b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005e1f:	mov    DWORD PTR [rdi+0x60],eax
   140005e22:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005e26:	mov    DWORD PTR [rdi+0x64],eax
   140005e29:	jmp    0x1400052d9
   140005e2e:	mov    rdx,QWORD PTR [rbp+0x8]
   140005e32:	mov    ecx,0x68
   140005e37:	call   0x140004140
   140005e3c:	mov    rdi,rax
   140005e3f:	test   rax,rax
   140005e42:	je     0x140005e7e
   140005e44:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005e48:	mov    rcx,QWORD PTR [rbp+0x30]
   140005e4c:	lea    eax,[rdx+0x3]
   140005e4f:	movsxd r9,eax
   140005e52:	lea    eax,[rdx+0x2]
   140005e55:	movsxd r8,eax
   140005e58:	mov    rax,rdx
   140005e5b:	mov    rdx,QWORD PTR [rbp+0x18]
   140005e5f:	mov    rdx,QWORD PTR [rdx+rax*8]
   140005e63:	shl    r9,0x4
   140005e67:	shl    r8,0x4
   140005e6b:	add    r9,rcx
   140005e6e:	add    r8,rcx
   140005e71:	mov    rcx,rdi
   140005e74:	call   0x140003d60
   140005e79:	mov    rdi,rax
   140005e7c:	jmp    0x140005e81
   140005e7e:	mov    rdi,r12
   140005e81:	mov    rcx,QWORD PTR [rbp+0x28]
   140005e85:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005e89:	add    rdx,0x2
   140005e8d:	add    rdx,rdx
   140005e90:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005e93:	mov    DWORD PTR [rdi+0x48],eax
   140005e96:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005e9a:	mov    DWORD PTR [rdi+0x4c],eax
   140005e9d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005ea1:	mov    DWORD PTR [rdi+0x50],eax
   140005ea4:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005ea8:	mov    DWORD PTR [rdi+0x54],eax
   140005eab:	mov    rcx,QWORD PTR [rbp+0x28]
   140005eaf:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005eb3:	inc    rdx
   140005eb6:	add    rdx,rdx
   140005eb9:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005ebc:	mov    DWORD PTR [rdi+0x38],eax
   140005ebf:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005ec3:	mov    DWORD PTR [rdi+0x3c],eax
   140005ec6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005eca:	mov    DWORD PTR [rdi+0x40],eax
   140005ecd:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005ed1:	mov    DWORD PTR [rdi+0x44],eax
   140005ed4:	mov    rcx,QWORD PTR [rbp+0x28]
   140005ed8:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005edc:	add    rdx,0x3
   140005ee0:	add    rdx,rdx
   140005ee3:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005ee6:	mov    DWORD PTR [rdi+0x58],eax
   140005ee9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005eed:	mov    DWORD PTR [rdi+0x5c],eax
   140005ef0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005ef4:	mov    DWORD PTR [rdi+0x60],eax
   140005ef7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005efb:	mov    DWORD PTR [rdi+0x64],eax
   140005efe:	jmp    0x1400052d9
   140005f03:	mov    rdx,QWORD PTR [rbp+0x8]
   140005f07:	mov    ecx,0xe8
   140005f0c:	call   0x140004140
   140005f11:	mov    rbx,rax
   140005f14:	test   rax,rax
   140005f17:	je     0x140005f51
   140005f19:	mov    eax,DWORD PTR [rbp+0x10]
   140005f1c:	lea    rcx,[rsp+0x310]
   140005f24:	or     esi,0x1
   140005f27:	inc    eax
   140005f29:	mov    DWORD PTR [rsp+0x30],esi
   140005f2d:	movsxd rdi,eax
   140005f30:	shl    rdi,0x4
   140005f34:	add    rdi,QWORD PTR [rbp+0x30]
   140005f38:	call   QWORD PTR [rip+0xf2aa]        # 0x1400151e8
   140005f3e:	mov    r8,rdi
   140005f41:	mov    rdx,rax
   140005f44:	mov    rcx,rbx
   140005f47:	call   0x140004180
   140005f4c:	mov    rdi,rax
   140005f4f:	jmp    0x140005f54
   140005f51:	mov    rdi,r12
   140005f54:	test   sil,0x1
   140005f58:	je     0x140005f6f
   140005f5a:	and    esi,0xfffffffe
   140005f5d:	lea    rcx,[rsp+0x310]
   140005f65:	mov    DWORD PTR [rsp+0x30],esi
   140005f69:	call   QWORD PTR [rip+0xf271]        # 0x1400151e0
   140005f6f:	mov    DWORD PTR [rdi+0x10],r12d
   140005f73:	mov    rcx,QWORD PTR [rbp+0x28]
   140005f77:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005f7b:	add    rdx,rdx
   140005f7e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005f81:	mov    DWORD PTR [rdi+0x88],eax
   140005f87:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005f8b:	mov    DWORD PTR [rdi+0x8c],eax
   140005f91:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005f95:	mov    DWORD PTR [rdi+0x90],eax
   140005f9b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005f9f:	mov    DWORD PTR [rdi+0x94],eax
   140005fa5:	mov    rcx,QWORD PTR [rbp+0x28]
   140005fa9:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005fad:	inc    rdx
   140005fb0:	add    rdx,rdx
   140005fb3:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005fb6:	mov    DWORD PTR [rdi+0xa8],eax
   140005fbc:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005fc0:	mov    DWORD PTR [rdi+0xac],eax
   140005fc6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005fca:	mov    DWORD PTR [rdi+0xb0],eax
   140005fd0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005fd4:	mov    DWORD PTR [rdi+0xb4],eax
   140005fda:	mov    rcx,QWORD PTR [rbp+0x28]
   140005fde:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005fe2:	inc    rdx
   140005fe5:	add    rdx,rdx
   140005fe8:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005feb:	mov    DWORD PTR [rdi+0xb8],eax
   140005ff1:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005ff5:	mov    DWORD PTR [rdi+0xbc],eax
   140005ffb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005fff:	mov    DWORD PTR [rdi+0xc0],eax
   140006005:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006009:	mov    DWORD PTR [rdi+0xc4],eax
   14000600f:	mov    rax,QWORD PTR [rbp+0x18]
   140006013:	movsxd rcx,DWORD PTR [rbp+0x10]
   140006017:	mov    rcx,QWORD PTR [rax+rcx*8+0x18]
   14000601c:	mov    QWORD PTR [rdi+0x60],rcx
   140006020:	mov    rcx,QWORD PTR [rbp+0x28]
   140006024:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006028:	add    rdx,0x5
   14000602c:	add    rdx,rdx
   14000602f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006032:	mov    DWORD PTR [rdi+0xd8],eax
   140006038:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000603c:	mov    DWORD PTR [rdi+0xdc],eax
   140006042:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006046:	mov    DWORD PTR [rdi+0xe0],eax
   14000604c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006050:	mov    DWORD PTR [rdi+0xe4],eax
   140006056:	jmp    0x1400052d9
   14000605b:	mov    rdx,QWORD PTR [rbp+0x8]
   14000605f:	mov    ecx,0xe8
   140006064:	call   0x140004140
   140006069:	mov    rbx,rax
   14000606c:	test   rax,rax
   14000606f:	je     0x1400060a9
   140006071:	mov    eax,DWORD PTR [rbp+0x10]
   140006074:	lea    rcx,[rsp+0x370]
   14000607c:	or     esi,0x2
   14000607f:	inc    eax
   140006081:	mov    DWORD PTR [rsp+0x30],esi
   140006085:	movsxd rdi,eax
   140006088:	shl    rdi,0x4
   14000608c:	add    rdi,QWORD PTR [rbp+0x30]
   140006090:	call   QWORD PTR [rip+0xf152]        # 0x1400151e8
   140006096:	mov    r8,rdi
   140006099:	mov    rdx,rax
   14000609c:	mov    rcx,rbx
   14000609f:	call   0x140004180
   1400060a4:	mov    rdi,rax
   1400060a7:	jmp    0x1400060ac
   1400060a9:	mov    rdi,r12
   1400060ac:	test   sil,0x2
   1400060b0:	je     0x1400060c7
   1400060b2:	and    esi,0xfffffffd
   1400060b5:	lea    rcx,[rsp+0x370]
   1400060bd:	mov    DWORD PTR [rsp+0x30],esi
   1400060c1:	call   QWORD PTR [rip+0xf119]        # 0x1400151e0
   1400060c7:	mov    DWORD PTR [rdi+0x10],r12d
   1400060cb:	mov    rcx,QWORD PTR [rbp+0x28]
   1400060cf:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400060d3:	add    rdx,rdx
   1400060d6:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400060d9:	mov    DWORD PTR [rdi+0x88],eax
   1400060df:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400060e3:	mov    DWORD PTR [rdi+0x8c],eax
   1400060e9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400060ed:	mov    DWORD PTR [rdi+0x90],eax
   1400060f3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400060f7:	mov    DWORD PTR [rdi+0x94],eax
   1400060fd:	mov    rcx,QWORD PTR [rbp+0x28]
   140006101:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006105:	inc    rdx
   140006108:	add    rdx,rdx
   14000610b:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000610e:	mov    DWORD PTR [rdi+0xa8],eax
   140006114:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006118:	mov    DWORD PTR [rdi+0xac],eax
   14000611e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006122:	mov    DWORD PTR [rdi+0xb0],eax
   140006128:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000612c:	mov    DWORD PTR [rdi+0xb4],eax
   140006132:	mov    rcx,QWORD PTR [rbp+0x28]
   140006136:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000613a:	inc    rdx
   14000613d:	add    rdx,rdx
   140006140:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006143:	mov    DWORD PTR [rdi+0xb8],eax
   140006149:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000614d:	mov    DWORD PTR [rdi+0xbc],eax
   140006153:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006157:	mov    DWORD PTR [rdi+0xc0],eax
   14000615d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006161:	mov    DWORD PTR [rdi+0xc4],eax
   140006167:	mov    rcx,QWORD PTR [rbp+0x28]
   14000616b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000616f:	add    rdx,0x2
   140006173:	add    rdx,rdx
   140006176:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006179:	mov    DWORD PTR [rdi+0xd8],eax
   14000617f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006183:	mov    DWORD PTR [rdi+0xdc],eax
   140006189:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000618d:	mov    DWORD PTR [rdi+0xe0],eax
   140006193:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006197:	mov    DWORD PTR [rdi+0xe4],eax
   14000619d:	jmp    0x1400052d9
   1400061a2:	mov    rdx,QWORD PTR [rbp+0x8]
   1400061a6:	mov    ecx,0xe8
   1400061ab:	call   0x140004140
   1400061b0:	mov    r11,rax
   1400061b3:	test   rax,rax
   1400061b6:	je     0x1400061e6
   1400061b8:	mov    ecx,DWORD PTR [rbp+0x10]
   1400061bb:	mov    rdi,QWORD PTR [rbp+0x30]
   1400061bf:	lea    eax,[rcx+0x5]
   1400061c2:	movsxd r8,eax
   1400061c5:	lea    eax,[rcx+0x3]
   1400061c8:	mov    rcx,r11
   1400061cb:	movsxd rdx,eax
   1400061ce:	shl    r8,0x4
   1400061d2:	shl    rdx,0x4
   1400061d6:	add    r8,rdi
   1400061d9:	add    rdx,rdi
   1400061dc:	call   0x140004180
   1400061e1:	mov    rdi,rax
   1400061e4:	jmp    0x1400061e9
   1400061e6:	mov    rdi,r12
   1400061e9:	mov    eax,DWORD PTR [rbp+0x10]
   1400061ec:	lea    rcx,[rdi+0x18]
   1400061f0:	inc    eax
   1400061f2:	movsxd rdx,eax
   1400061f5:	shl    rdx,0x4
   1400061f9:	add    rdx,QWORD PTR [rbp+0x30]
   1400061fd:	call   QWORD PTR [rip+0xefad]        # 0x1400151b0
   140006203:	mov    rcx,QWORD PTR [rbp+0x28]
   140006207:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000620b:	add    rdx,rdx
   14000620e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006211:	mov    DWORD PTR [rdi+0x88],eax
   140006217:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000621b:	mov    DWORD PTR [rdi+0x8c],eax
   140006221:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006225:	mov    DWORD PTR [rdi+0x90],eax
   14000622b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000622f:	mov    DWORD PTR [rdi+0x94],eax
   140006235:	mov    rcx,QWORD PTR [rbp+0x28]
   140006239:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000623d:	inc    rdx
   140006240:	add    rdx,rdx
   140006243:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006246:	mov    DWORD PTR [rdi+0x98],eax
   14000624c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006250:	mov    DWORD PTR [rdi+0x9c],eax
   140006256:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000625a:	mov    DWORD PTR [rdi+0xa0],eax
   140006260:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006264:	mov    DWORD PTR [rdi+0xa4],eax
   14000626a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000626e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006272:	add    rdx,0x3
   140006276:	add    rdx,rdx
   140006279:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000627c:	mov    DWORD PTR [rdi+0xa8],eax
   140006282:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006286:	mov    DWORD PTR [rdi+0xac],eax
   14000628c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006290:	mov    DWORD PTR [rdi+0xb0],eax
   140006296:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000629a:	mov    DWORD PTR [rdi+0xb4],eax
   1400062a0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400062a4:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400062a8:	add    rdx,0x5
   1400062ac:	add    rdx,rdx
   1400062af:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400062b2:	mov    DWORD PTR [rdi+0xb8],eax
   1400062b8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400062bc:	mov    DWORD PTR [rdi+0xbc],eax
   1400062c2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400062c6:	mov    DWORD PTR [rdi+0xc0],eax
   1400062cc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400062d0:	mov    DWORD PTR [rdi+0xc4],eax
   1400062d6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400062da:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400062de:	add    rdx,0x6
   1400062e2:	add    rdx,rdx
   1400062e5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400062e8:	mov    DWORD PTR [rdi+0xd8],eax
   1400062ee:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400062f2:	mov    DWORD PTR [rdi+0xdc],eax
   1400062f8:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400062fc:	mov    DWORD PTR [rdi+0xe0],eax
   140006302:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006306:	mov    DWORD PTR [rdi+0xe4],eax
   14000630c:	jmp    0x1400052d9
   140006311:	mov    rdx,QWORD PTR [rbp+0x8]
   140006315:	mov    ecx,0xe8
   14000631a:	call   0x140004140
   14000631f:	mov    r11,rax
   140006322:	test   rax,rax
   140006325:	je     0x140006355
   140006327:	mov    ecx,DWORD PTR [rbp+0x10]
   14000632a:	mov    rdi,QWORD PTR [rbp+0x30]
   14000632e:	lea    eax,[rcx+0x2]
   140006331:	movsxd r8,eax
   140006334:	lea    eax,[rcx+0x1]
   140006337:	mov    rcx,r11
   14000633a:	movsxd rdx,eax
   14000633d:	shl    r8,0x4
   140006341:	shl    rdx,0x4
   140006345:	add    r8,rdi
   140006348:	add    rdx,rdi
   14000634b:	call   0x140004180
   140006350:	mov    rdi,rax
   140006353:	jmp    0x140006358
   140006355:	mov    rdi,r12
   140006358:	mov    rcx,QWORD PTR [rbp+0x28]
   14000635c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006360:	add    rdx,rdx
   140006363:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006366:	mov    DWORD PTR [rdi+0x88],eax
   14000636c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006370:	mov    DWORD PTR [rdi+0x8c],eax
   140006376:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000637a:	mov    DWORD PTR [rdi+0x90],eax
   140006380:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006384:	mov    DWORD PTR [rdi+0x94],eax
   14000638a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000638e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006392:	inc    rdx
   140006395:	add    rdx,rdx
   140006398:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000639b:	mov    DWORD PTR [rdi+0xa8],eax
   1400063a1:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400063a5:	mov    DWORD PTR [rdi+0xac],eax
   1400063ab:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400063af:	mov    DWORD PTR [rdi+0xb0],eax
   1400063b5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400063b9:	mov    DWORD PTR [rdi+0xb4],eax
   1400063bf:	mov    rcx,QWORD PTR [rbp+0x28]
   1400063c3:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400063c7:	add    rdx,0x2
   1400063cb:	add    rdx,rdx
   1400063ce:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400063d1:	mov    DWORD PTR [rdi+0xb8],eax
   1400063d7:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400063db:	mov    DWORD PTR [rdi+0xbc],eax
   1400063e1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400063e5:	mov    DWORD PTR [rdi+0xc0],eax
   1400063eb:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400063ef:	mov    DWORD PTR [rdi+0xc4],eax
   1400063f5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400063f9:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400063fd:	add    rdx,0x3
   140006401:	add    rdx,rdx
   140006404:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006407:	mov    DWORD PTR [rdi+0xd8],eax
   14000640d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006411:	mov    DWORD PTR [rdi+0xdc],eax
   140006417:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000641b:	mov    DWORD PTR [rdi+0xe0],eax
   140006421:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006425:	mov    DWORD PTR [rdi+0xe4],eax
   14000642b:	jmp    0x1400052d9
   140006430:	mov    rdx,QWORD PTR [rbp+0x8]
   140006434:	mov    ecx,0xe8
   140006439:	call   0x140004140
   14000643e:	mov    r11,rax
   140006441:	test   rax,rax
   140006444:	je     0x140006474
   140006446:	mov    ecx,DWORD PTR [rbp+0x10]
   140006449:	mov    rdi,QWORD PTR [rbp+0x30]
   14000644d:	lea    eax,[rcx+0x3]
   140006450:	movsxd r8,eax
   140006453:	lea    eax,[rcx+0x2]
   140006456:	mov    rcx,r11
   140006459:	movsxd rdx,eax
   14000645c:	shl    r8,0x4
   140006460:	shl    rdx,0x4
   140006464:	add    r8,rdi
   140006467:	add    rdx,rdi
   14000646a:	call   0x140004180
   14000646f:	mov    rdi,rax
   140006472:	jmp    0x140006477
   140006474:	mov    rdi,r12
   140006477:	mov    BYTE PTR [rdi+0x58],0x1
   14000647b:	mov    rcx,QWORD PTR [rbp+0x28]
   14000647f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006483:	add    rdx,rdx
   140006486:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006489:	mov    DWORD PTR [rdi+0x68],eax
   14000648c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006490:	mov    DWORD PTR [rdi+0x6c],eax
   140006493:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006497:	mov    DWORD PTR [rdi+0x70],eax
   14000649a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000649e:	mov    DWORD PTR [rdi+0x74],eax
   1400064a1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400064a5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400064a9:	inc    rdx
   1400064ac:	add    rdx,rdx
   1400064af:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400064b2:	mov    DWORD PTR [rdi+0x88],eax
   1400064b8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400064bc:	mov    DWORD PTR [rdi+0x8c],eax
   1400064c2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400064c6:	mov    DWORD PTR [rdi+0x90],eax
   1400064cc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400064d0:	mov    DWORD PTR [rdi+0x94],eax
   1400064d6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400064da:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400064de:	add    rdx,0x2
   1400064e2:	add    rdx,rdx
   1400064e5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400064e8:	mov    DWORD PTR [rdi+0xa8],eax
   1400064ee:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400064f2:	mov    DWORD PTR [rdi+0xac],eax
   1400064f8:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400064fc:	mov    DWORD PTR [rdi+0xb0],eax
   140006502:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006506:	mov    DWORD PTR [rdi+0xb4],eax
   14000650c:	mov    rcx,QWORD PTR [rbp+0x28]
   140006510:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006514:	add    rdx,0x3
   140006518:	add    rdx,rdx
   14000651b:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000651e:	mov    DWORD PTR [rdi+0xb8],eax
   140006524:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006528:	mov    DWORD PTR [rdi+0xbc],eax
   14000652e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006532:	mov    DWORD PTR [rdi+0xc0],eax
   140006538:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000653c:	mov    DWORD PTR [rdi+0xc4],eax
   140006542:	mov    rcx,QWORD PTR [rbp+0x28]
   140006546:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000654a:	add    rdx,0x4
   14000654e:	add    rdx,rdx
   140006551:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006554:	mov    DWORD PTR [rdi+0xd8],eax
   14000655a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000655e:	mov    DWORD PTR [rdi+0xdc],eax
   140006564:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006568:	mov    DWORD PTR [rdi+0xe0],eax
   14000656e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006572:	mov    DWORD PTR [rdi+0xe4],eax
   140006578:	jmp    0x1400052d9
   14000657d:	mov    rdx,QWORD PTR [rbp+0x8]
   140006581:	mov    ecx,0xe8
   140006586:	call   0x140004140
   14000658b:	mov    r11,rax
   14000658e:	test   rax,rax
   140006591:	je     0x1400065cf
   140006593:	mov    edx,DWORD PTR [rbp+0x10]
   140006596:	mov    rcx,QWORD PTR [rbp+0x30]
   14000659a:	mov    r9,QWORD PTR [rbp+0x18]
   14000659e:	lea    eax,[rdx+0x4]
   1400065a1:	movsxd rdi,eax
   1400065a4:	lea    eax,[rdx+0x2]
   1400065a7:	mov    r9,QWORD PTR [r9+rdi*8]
   1400065ab:	movsxd r8,eax
   1400065ae:	lea    eax,[rdx+0x1]
   1400065b1:	movsxd rdx,eax
   1400065b4:	shl    r8,0x4
   1400065b8:	shl    rdx,0x4
   1400065bc:	add    r8,rcx
   1400065bf:	add    rdx,rcx
   1400065c2:	mov    rcx,r11
   1400065c5:	call   0x1400043a0
   1400065ca:	mov    rdi,rax
   1400065cd:	jmp    0x1400065d2
   1400065cf:	mov    rdi,r12
   1400065d2:	mov    rcx,QWORD PTR [rbp+0x28]
   1400065d6:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400065da:	add    rdx,rdx
   1400065dd:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400065e0:	mov    DWORD PTR [rdi+0x88],eax
   1400065e6:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400065ea:	mov    DWORD PTR [rdi+0x8c],eax
   1400065f0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400065f4:	mov    DWORD PTR [rdi+0x90],eax
   1400065fa:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400065fe:	mov    DWORD PTR [rdi+0x94],eax
   140006604:	mov    rcx,QWORD PTR [rbp+0x28]
   140006608:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000660c:	inc    rdx
   14000660f:	add    rdx,rdx
   140006612:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006615:	mov    DWORD PTR [rdi+0xa8],eax
   14000661b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000661f:	mov    DWORD PTR [rdi+0xac],eax
   140006625:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006629:	mov    DWORD PTR [rdi+0xb0],eax
   14000662f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006633:	mov    DWORD PTR [rdi+0xb4],eax
   140006639:	mov    rcx,QWORD PTR [rbp+0x28]
   14000663d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006641:	add    rdx,0x2
   140006645:	add    rdx,rdx
   140006648:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000664b:	mov    DWORD PTR [rdi+0xb8],eax
   140006651:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006655:	mov    DWORD PTR [rdi+0xbc],eax
   14000665b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000665f:	mov    DWORD PTR [rdi+0xc0],eax
   140006665:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006669:	mov    DWORD PTR [rdi+0xc4],eax
   14000666f:	mov    rcx,QWORD PTR [rbp+0x28]
   140006673:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006677:	add    rdx,0x3
   14000667b:	add    rdx,rdx
   14000667e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006681:	mov    DWORD PTR [rdi+0xc8],eax
   140006687:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000668b:	mov    DWORD PTR [rdi+0xcc],eax
   140006691:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006695:	mov    DWORD PTR [rdi+0xd0],eax
   14000669b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000669f:	mov    DWORD PTR [rdi+0xd4],eax
   1400066a5:	jmp    0x1400052d9
   1400066aa:	mov    rdx,QWORD PTR [rbp+0x8]
   1400066ae:	mov    ecx,0xe8
   1400066b3:	call   0x140004140
   1400066b8:	mov    r11,rax
   1400066bb:	test   rax,rax
   1400066be:	je     0x1400066fc
   1400066c0:	mov    edx,DWORD PTR [rbp+0x10]
   1400066c3:	mov    rcx,QWORD PTR [rbp+0x30]
   1400066c7:	mov    r9,QWORD PTR [rbp+0x18]
   1400066cb:	lea    eax,[rdx+0x5]
   1400066ce:	movsxd rdi,eax
   1400066d1:	lea    eax,[rdx+0x3]
   1400066d4:	mov    r9,QWORD PTR [r9+rdi*8]
   1400066d8:	movsxd r8,eax
   1400066db:	lea    eax,[rdx+0x2]
   1400066de:	movsxd rdx,eax
   1400066e1:	shl    r8,0x4
   1400066e5:	shl    rdx,0x4
   1400066e9:	add    r8,rcx
   1400066ec:	add    rdx,rcx
   1400066ef:	mov    rcx,r11
   1400066f2:	call   0x1400043a0
   1400066f7:	mov    rdi,rax
   1400066fa:	jmp    0x1400066ff
   1400066fc:	mov    rdi,r12
   1400066ff:	mov    BYTE PTR [rdi+0x59],0x1
   140006703:	mov    rcx,QWORD PTR [rbp+0x28]
   140006707:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000670b:	add    rdx,rdx
   14000670e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006711:	mov    DWORD PTR [rdi+0x78],eax
   140006714:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006718:	mov    DWORD PTR [rdi+0x7c],eax
   14000671b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000671f:	mov    DWORD PTR [rdi+0x80],eax
   140006725:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006729:	mov    DWORD PTR [rdi+0x84],eax
   14000672f:	mov    rcx,QWORD PTR [rbp+0x28]
   140006733:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006737:	inc    rdx
   14000673a:	add    rdx,rdx
   14000673d:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006740:	mov    DWORD PTR [rdi+0x88],eax
   140006746:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000674a:	mov    DWORD PTR [rdi+0x8c],eax
   140006750:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006754:	mov    DWORD PTR [rdi+0x90],eax
   14000675a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000675e:	mov    DWORD PTR [rdi+0x94],eax
   140006764:	mov    rcx,QWORD PTR [rbp+0x28]
   140006768:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000676c:	add    rdx,0x2
   140006770:	add    rdx,rdx
   140006773:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006776:	mov    DWORD PTR [rdi+0xa8],eax
   14000677c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006780:	mov    DWORD PTR [rdi+0xac],eax
   140006786:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000678a:	mov    DWORD PTR [rdi+0xb0],eax
   140006790:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006794:	mov    DWORD PTR [rdi+0xb4],eax
   14000679a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000679e:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400067a2:	add    rdx,0x3
   1400067a6:	add    rdx,rdx
   1400067a9:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400067ac:	mov    DWORD PTR [rdi+0xb8],eax
   1400067b2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400067b6:	mov    DWORD PTR [rdi+0xbc],eax
   1400067bc:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400067c0:	mov    DWORD PTR [rdi+0xc0],eax
   1400067c6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400067ca:	mov    DWORD PTR [rdi+0xc4],eax
   1400067d0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400067d4:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400067d8:	add    rdx,0x4
   1400067dc:	add    rdx,rdx
   1400067df:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400067e2:	mov    DWORD PTR [rdi+0xc8],eax
   1400067e8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400067ec:	mov    DWORD PTR [rdi+0xcc],eax
   1400067f2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400067f6:	mov    DWORD PTR [rdi+0xd0],eax
   1400067fc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006800:	mov    DWORD PTR [rdi+0xd4],eax
   140006806:	jmp    0x1400052d9
   14000680b:	mov    rdx,QWORD PTR [rbp+0x8]
   14000680f:	mov    ecx,0xe8
   140006814:	call   0x140004140
   140006819:	mov    r11,rax
   14000681c:	test   rax,rax
   14000681f:	je     0x14000685d
   140006821:	mov    edx,DWORD PTR [rbp+0x10]
   140006824:	mov    rcx,QWORD PTR [rbp+0x30]
   140006828:	mov    r9,QWORD PTR [rbp+0x18]
   14000682c:	lea    eax,[rdx+0x5]
   14000682f:	movsxd rdi,eax
   140006832:	lea    eax,[rdx+0x3]
   140006835:	mov    r9,QWORD PTR [r9+rdi*8]
   140006839:	movsxd r8,eax
   14000683c:	lea    eax,[rdx+0x2]
   14000683f:	movsxd rdx,eax
   140006842:	shl    r8,0x4
   140006846:	shl    rdx,0x4
   14000684a:	add    r8,rcx
   14000684d:	add    rdx,rcx
   140006850:	mov    rcx,r11
   140006853:	call   0x1400043a0
   140006858:	mov    rdi,rax
   14000685b:	jmp    0x140006860
   14000685d:	mov    rdi,r12
   140006860:	mov    BYTE PTR [rdi+0x58],0x1
   140006864:	mov    rcx,QWORD PTR [rbp+0x28]
   140006868:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000686c:	add    rdx,rdx
   14000686f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006872:	mov    DWORD PTR [rdi+0x68],eax
   140006875:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006879:	mov    DWORD PTR [rdi+0x6c],eax
   14000687c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006880:	mov    DWORD PTR [rdi+0x70],eax
   140006883:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006887:	mov    DWORD PTR [rdi+0x74],eax
   14000688a:	jmp    0x14000672f
   14000688f:	mov    rdx,QWORD PTR [rbp+0x8]
   140006893:	mov    ecx,0xe8
   140006898:	call   0x140004140
   14000689d:	mov    r11,rax
   1400068a0:	test   rax,rax
   1400068a3:	je     0x1400068d3
   1400068a5:	mov    ecx,DWORD PTR [rbp+0x10]
   1400068a8:	mov    rdi,QWORD PTR [rbp+0x30]
   1400068ac:	lea    eax,[rcx+0x5]
   1400068af:	movsxd r8,eax
   1400068b2:	lea    eax,[rcx+0x3]
   1400068b5:	mov    rcx,r11
   1400068b8:	movsxd rdx,eax
   1400068bb:	shl    r8,0x4
   1400068bf:	shl    rdx,0x4
   1400068c3:	add    r8,rdi
   1400068c6:	add    rdx,rdi
   1400068c9:	call   0x140004180
   1400068ce:	mov    rsi,rax
   1400068d1:	jmp    0x1400068d6
   1400068d3:	mov    rsi,r12
   1400068d6:	mov    eax,DWORD PTR [rbp+0x10]
   1400068d9:	lea    rcx,[rsi+0x18]
   1400068dd:	inc    eax
   1400068df:	movsxd rdx,eax
   1400068e2:	shl    rdx,0x4
   1400068e6:	add    rdx,QWORD PTR [rbp+0x30]
   1400068ea:	call   QWORD PTR [rip+0xe8c0]        # 0x1400151b0
   1400068f0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400068f4:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400068f8:	add    rdx,rdx
   1400068fb:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400068fe:	mov    DWORD PTR [rsi+0x88],eax
   140006904:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006908:	mov    DWORD PTR [rsi+0x8c],eax
   14000690e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006912:	mov    DWORD PTR [rsi+0x90],eax
   140006918:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000691c:	mov    DWORD PTR [rsi+0x94],eax
   140006922:	mov    rcx,QWORD PTR [rbp+0x28]
   140006926:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000692a:	inc    rdx
   14000692d:	add    rdx,rdx
   140006930:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006933:	mov    DWORD PTR [rsi+0x98],eax
   140006939:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000693d:	mov    DWORD PTR [rsi+0x9c],eax
   140006943:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006947:	mov    DWORD PTR [rsi+0xa0],eax
   14000694d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006951:	mov    DWORD PTR [rsi+0xa4],eax
   140006957:	mov    rcx,QWORD PTR [rbp+0x28]
   14000695b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000695f:	add    rdx,0x3
   140006963:	add    rdx,rdx
   140006966:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006969:	mov    DWORD PTR [rsi+0xa8],eax
   14000696f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006973:	mov    DWORD PTR [rsi+0xac],eax
   140006979:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000697d:	mov    DWORD PTR [rsi+0xb0],eax
   140006983:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006987:	mov    DWORD PTR [rsi+0xb4],eax
   14000698d:	mov    rcx,QWORD PTR [rbp+0x28]
   140006991:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006995:	add    rdx,0x5
   140006999:	add    rdx,rdx
   14000699c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000699f:	mov    DWORD PTR [rsi+0xb8],eax
   1400069a5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400069a9:	mov    DWORD PTR [rsi+0xbc],eax
   1400069af:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400069b3:	mov    DWORD PTR [rsi+0xc0],eax
   1400069b9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400069bd:	mov    DWORD PTR [rsi+0xc4],eax
   1400069c3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400069c7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400069cb:	add    rdx,0x6
   1400069cf:	add    rdx,rdx
   1400069d2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400069d5:	mov    DWORD PTR [rsi+0xd8],eax
   1400069db:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400069df:	mov    DWORD PTR [rsi+0xdc],eax
   1400069e5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400069e9:	mov    DWORD PTR [rsi+0xe0],eax
   1400069ef:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400069f3:	mov    ecx,0x38
   1400069f8:	mov    DWORD PTR [rsi+0xe4],eax
   1400069fe:	mov    rdx,QWORD PTR [rbp+0x8]
   140006a02:	call   0x140004140
   140006a07:	mov    rbx,rax
   140006a0a:	test   rax,rax
   140006a0d:	je     0x140006a55
   140006a0f:	mov    eax,DWORD PTR [rbp+0x10]
   140006a12:	lea    rcx,[rbx+0x18]
   140006a16:	add    eax,0x5
   140006a19:	movsxd rdx,eax
   140006a1c:	lea    rax,[rip+0x102e5]        # 0x140016d08
   140006a23:	shl    rdx,0x4
   140006a27:	add    rdx,QWORD PTR [rbp+0x30]
   140006a2b:	mov    DWORD PTR [rbx+0x8],r12d
   140006a2f:	mov    QWORD PTR [rbx],rax
   140006a32:	mov    QWORD PTR [rbx+0x10],rbx
   140006a36:	call   QWORD PTR [rip+0xe76c]        # 0x1400151a8
   140006a3c:	mov    DWORD PTR [rbx+0x28],r12d
   140006a40:	mov    DWORD PTR [rbx+0x2c],r12d
   140006a44:	mov    DWORD PTR [rbx+0x30],r12d
   140006a48:	mov    DWORD PTR [rbx+0x34],r12d
   140006a4c:	mov    DWORD PTR [rbx+0x8],0x5a
   140006a53:	jmp    0x140006a58
   140006a55:	mov    rbx,r12
   140006a58:	mov    rcx,QWORD PTR [rbp+0x28]
   140006a5c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006a60:	add    rdx,0x5
   140006a64:	add    rdx,rdx
   140006a67:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006a6a:	mov    DWORD PTR [rbx+0x28],eax
   140006a6d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006a71:	mov    DWORD PTR [rbx+0x2c],eax
   140006a74:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006a78:	mov    DWORD PTR [rbx+0x30],eax
   140006a7b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006a7f:	mov    ecx,0x50
   140006a84:	mov    DWORD PTR [rbx+0x34],eax
   140006a87:	mov    QWORD PTR [rbx+0x10],r12
   140006a8b:	mov    rdx,QWORD PTR [rbp+0x8]
   140006a8f:	call   0x140004140
   140006a94:	mov    rdi,rax
   140006a97:	test   rax,rax
   140006a9a:	je     0x140006afc
   140006a9c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140006aa0:	mov    rax,QWORD PTR [rbp+0x18]
   140006aa4:	mov    rdx,QWORD PTR [rax+rcx*8+0x40]
   140006aa9:	lea    rcx,[rip+0x106b8]        # 0x140017168
   140006ab0:	mov    rax,QWORD PTR [rdx+0x10]
   140006ab4:	mov    QWORD PTR [rdx+0x10],r12
   140006ab8:	mov    QWORD PTR [rdi],rcx
   140006abb:	mov    QWORD PTR [rdi+0x10],rbx
   140006abf:	mov    QWORD PTR [rdi+0x18],rax
   140006ac3:	mov    DWORD PTR [rdi+0x20],r12d
   140006ac7:	mov    DWORD PTR [rdi+0x24],r12d
   140006acb:	mov    DWORD PTR [rdi+0x28],r12d
   140006acf:	mov    DWORD PTR [rdi+0x2c],r12d
   140006ad3:	mov    DWORD PTR [rdi+0x30],r12d
   140006ad7:	mov    DWORD PTR [rdi+0x34],r12d
   140006adb:	mov    DWORD PTR [rdi+0x38],r12d
   140006adf:	mov    DWORD PTR [rdi+0x3c],r12d
   140006ae3:	mov    DWORD PTR [rdi+0x40],r12d
   140006ae7:	mov    DWORD PTR [rdi+0x44],r12d
   140006aeb:	mov    DWORD PTR [rdi+0x48],r12d
   140006aef:	mov    DWORD PTR [rdi+0x4c],r12d
   140006af3:	mov    DWORD PTR [rdi+0x8],0x4f
   140006afa:	jmp    0x140006aff
   140006afc:	mov    rdi,r12
   140006aff:	mov    rcx,QWORD PTR [rbp+0x28]
   140006b03:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006b07:	lea    r9,[rip+0xffffffffffff94f2]        # 0x140000000
   140006b0e:	add    rdx,0x6
   140006b12:	add    rdx,rdx
   140006b15:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006b18:	mov    DWORD PTR [rdi+0x20],eax
   140006b1b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006b1f:	mov    DWORD PTR [rdi+0x24],eax
   140006b22:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006b26:	mov    DWORD PTR [rdi+0x28],eax
   140006b29:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006b2d:	mov    DWORD PTR [rdi+0x2c],eax
   140006b30:	mov    rcx,QWORD PTR [rbp+0x28]
   140006b34:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006b38:	add    rdx,0x7
   140006b3c:	add    rdx,rdx
   140006b3f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006b42:	mov    DWORD PTR [rdi+0x30],eax
   140006b45:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006b49:	mov    DWORD PTR [rdi+0x34],eax
   140006b4c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006b50:	mov    DWORD PTR [rdi+0x38],eax
   140006b53:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006b57:	mov    DWORD PTR [rdi+0x3c],eax
   140006b5a:	mov    rcx,QWORD PTR [rbp+0x28]
   140006b5e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006b62:	add    rdx,0x9
   140006b66:	add    rdx,rdx
   140006b69:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006b6c:	mov    DWORD PTR [rdi+0x40],eax
   140006b6f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006b73:	mov    DWORD PTR [rdi+0x44],eax
   140006b76:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006b7a:	mov    DWORD PTR [rdi+0x48],eax
   140006b7d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006b81:	mov    DWORD PTR [rdi+0x4c],eax
   140006b84:	mov    QWORD PTR [rsi+0x50],rdi
   140006b88:	movsxd rcx,DWORD PTR [rbp+0x10]
   140006b8c:	mov    rax,QWORD PTR [rbp+0x18]
   140006b90:	mov    QWORD PTR [rax+rcx*8],rsi
   140006b94:	mov    esi,DWORD PTR [rsp+0x30]
   140006b98:	jmp    0x14000ae40
   140006b9d:	mov    rdx,QWORD PTR [rbp+0x8]
   140006ba1:	mov    ecx,0xe8
   140006ba6:	call   0x140004140
   140006bab:	mov    r11,rax
   140006bae:	test   rax,rax
   140006bb1:	je     0x140006be1
   140006bb3:	mov    ecx,DWORD PTR [rbp+0x10]
   140006bb6:	mov    rdi,QWORD PTR [rbp+0x30]
   140006bba:	lea    eax,[rcx+0x2]
   140006bbd:	movsxd r8,eax
   140006bc0:	lea    eax,[rcx+0x1]
   140006bc3:	mov    rcx,r11
   140006bc6:	movsxd rdx,eax
   140006bc9:	shl    r8,0x4
   140006bcd:	shl    rdx,0x4
   140006bd1:	add    r8,rdi
   140006bd4:	add    rdx,rdi
   140006bd7:	call   0x140004180
   140006bdc:	mov    rsi,rax
   140006bdf:	jmp    0x140006be4
   140006be1:	mov    rsi,r12
   140006be4:	mov    rcx,QWORD PTR [rbp+0x28]
   140006be8:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006bec:	add    rdx,rdx
   140006bef:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006bf2:	mov    DWORD PTR [rsi+0x88],eax
   140006bf8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006bfc:	mov    DWORD PTR [rsi+0x8c],eax
   140006c02:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006c06:	mov    DWORD PTR [rsi+0x90],eax
   140006c0c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006c10:	mov    DWORD PTR [rsi+0x94],eax
   140006c16:	mov    rcx,QWORD PTR [rbp+0x28]
   140006c1a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006c1e:	inc    rdx
   140006c21:	add    rdx,rdx
   140006c24:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006c27:	mov    DWORD PTR [rsi+0xa8],eax
   140006c2d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006c31:	mov    DWORD PTR [rsi+0xac],eax
   140006c37:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006c3b:	mov    DWORD PTR [rsi+0xb0],eax
   140006c41:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006c45:	mov    DWORD PTR [rsi+0xb4],eax
   140006c4b:	mov    rcx,QWORD PTR [rbp+0x28]
   140006c4f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006c53:	add    rdx,0x2
   140006c57:	add    rdx,rdx
   140006c5a:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006c5d:	mov    DWORD PTR [rsi+0xb8],eax
   140006c63:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006c67:	mov    DWORD PTR [rsi+0xbc],eax
   140006c6d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006c71:	mov    DWORD PTR [rsi+0xc0],eax
   140006c77:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006c7b:	mov    DWORD PTR [rsi+0xc4],eax
   140006c81:	mov    rcx,QWORD PTR [rbp+0x28]
   140006c85:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006c89:	add    rdx,0x3
   140006c8d:	add    rdx,rdx
   140006c90:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006c93:	mov    DWORD PTR [rsi+0xd8],eax
   140006c99:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006c9d:	mov    DWORD PTR [rsi+0xdc],eax
   140006ca3:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006ca7:	mov    DWORD PTR [rsi+0xe0],eax
   140006cad:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006cb1:	mov    ecx,0x38
   140006cb6:	mov    DWORD PTR [rsi+0xe4],eax
   140006cbc:	mov    rdx,QWORD PTR [rbp+0x8]
   140006cc0:	call   0x140004140
   140006cc5:	mov    rbx,rax
   140006cc8:	test   rax,rax
   140006ccb:	je     0x140006d13
   140006ccd:	mov    eax,DWORD PTR [rbp+0x10]
   140006cd0:	lea    rcx,[rbx+0x18]
   140006cd4:	add    eax,0x2
   140006cd7:	movsxd rdx,eax
   140006cda:	lea    rax,[rip+0x10027]        # 0x140016d08
   140006ce1:	shl    rdx,0x4
   140006ce5:	add    rdx,QWORD PTR [rbp+0x30]
   140006ce9:	mov    DWORD PTR [rbx+0x8],r12d
   140006ced:	mov    QWORD PTR [rbx],rax
   140006cf0:	mov    QWORD PTR [rbx+0x10],rbx
   140006cf4:	call   QWORD PTR [rip+0xe4ae]        # 0x1400151a8
   140006cfa:	mov    DWORD PTR [rbx+0x28],r12d
   140006cfe:	mov    DWORD PTR [rbx+0x2c],r12d
   140006d02:	mov    DWORD PTR [rbx+0x30],r12d
   140006d06:	mov    DWORD PTR [rbx+0x34],r12d
   140006d0a:	mov    DWORD PTR [rbx+0x8],0x5a
   140006d11:	jmp    0x140006d16
   140006d13:	mov    rbx,r12
   140006d16:	mov    rcx,QWORD PTR [rbp+0x28]
   140006d1a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006d1e:	add    rdx,0x2
   140006d22:	add    rdx,rdx
   140006d25:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006d28:	mov    DWORD PTR [rbx+0x28],eax
   140006d2b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006d2f:	mov    DWORD PTR [rbx+0x2c],eax
   140006d32:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006d36:	mov    DWORD PTR [rbx+0x30],eax
   140006d39:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006d3d:	mov    ecx,0x40
   140006d42:	mov    DWORD PTR [rbx+0x34],eax
   140006d45:	mov    QWORD PTR [rbx+0x10],r12
   140006d49:	mov    rdx,QWORD PTR [rbp+0x8]
   140006d4d:	call   0x140004140
   140006d52:	mov    r11,rax
   140006d55:	test   rax,rax
   140006d58:	je     0x140006da0
   140006d5a:	mov    rax,QWORD PTR [rbp+0x18]
   140006d5e:	movsxd rcx,DWORD PTR [rbp+0x10]
   140006d62:	mov    rdi,QWORD PTR [rax+rcx*8+0x28]
   140006d67:	mov    rdx,QWORD PTR [rax+rcx*8+0x20]
   140006d6c:	lea    rax,[rip+0x10355]        # 0x1400170c8
   140006d73:	mov    QWORD PTR [r11],rax
   140006d76:	mov    QWORD PTR [r11+0x10],rbx
   140006d7a:	mov    QWORD PTR [r11+0x18],rdx
   140006d7e:	mov    QWORD PTR [r11+0x20],rdi
   140006d82:	mov    DWORD PTR [r11+0x28],r12d
   140006d86:	mov    DWORD PTR [r11+0x2c],r12d
   140006d8a:	mov    DWORD PTR [r11+0x30],r12d
   140006d8e:	mov    DWORD PTR [r11+0x34],r12d
   140006d92:	mov    BYTE PTR [r11+0x38],r12b
   140006d96:	mov    DWORD PTR [r11+0x8],0x51
   140006d9e:	jmp    0x140006da3
   140006da0:	mov    r11,r12
   140006da3:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006da7:	add    rdx,0x3
   140006dab:	mov    rcx,QWORD PTR [rbp+0x28]
   140006daf:	add    rdx,rdx
   140006db2:	lea    r9,[rip+0xffffffffffff9247]        # 0x140000000
   140006db9:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006dbc:	mov    DWORD PTR [r11+0x28],eax
   140006dc0:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006dc4:	mov    DWORD PTR [r11+0x2c],eax
   140006dc8:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006dcc:	mov    DWORD PTR [r11+0x30],eax
   140006dd0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006dd4:	mov    DWORD PTR [r11+0x34],eax
   140006dd8:	mov    QWORD PTR [rsi+0x50],r11
   140006ddc:	movsxd rcx,DWORD PTR [rbp+0x10]
   140006de0:	mov    rax,QWORD PTR [rbp+0x18]
   140006de4:	mov    QWORD PTR [rax+rcx*8],rsi
   140006de8:	mov    esi,DWORD PTR [rsp+0x30]
   140006dec:	jmp    0x14000ae40
   140006df1:	mov    rdx,QWORD PTR [rbp+0x8]
   140006df5:	mov    ecx,0xe8
   140006dfa:	call   0x140004140
   140006dff:	mov    r11,rax
   140006e02:	test   rax,rax
   140006e05:	je     0x140006e35
   140006e07:	mov    ecx,DWORD PTR [rbp+0x10]
   140006e0a:	mov    rdi,QWORD PTR [rbp+0x30]
   140006e0e:	lea    eax,[rcx+0x3]
   140006e11:	movsxd r8,eax
   140006e14:	lea    eax,[rcx+0x2]
   140006e17:	mov    rcx,r11
   140006e1a:	movsxd rdx,eax
   140006e1d:	shl    r8,0x4
   140006e21:	shl    rdx,0x4
   140006e25:	add    r8,rdi
   140006e28:	add    rdx,rdi
   140006e2b:	call   0x140004180
   140006e30:	mov    rsi,rax
   140006e33:	jmp    0x140006e38
   140006e35:	mov    rsi,r12
   140006e38:	mov    BYTE PTR [rsi+0x59],0x1
   140006e3c:	mov    rcx,QWORD PTR [rbp+0x28]
   140006e40:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006e44:	add    rdx,rdx
   140006e47:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006e4a:	mov    DWORD PTR [rsi+0x78],eax
   140006e4d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006e51:	mov    DWORD PTR [rsi+0x7c],eax
   140006e54:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006e58:	mov    DWORD PTR [rsi+0x80],eax
   140006e5e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006e62:	mov    DWORD PTR [rsi+0x84],eax
   140006e68:	mov    rcx,QWORD PTR [rbp+0x28]
   140006e6c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006e70:	inc    rdx
   140006e73:	add    rdx,rdx
   140006e76:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006e79:	mov    DWORD PTR [rsi+0x88],eax
   140006e7f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006e83:	mov    DWORD PTR [rsi+0x8c],eax
   140006e89:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006e8d:	mov    DWORD PTR [rsi+0x90],eax
   140006e93:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006e97:	mov    DWORD PTR [rsi+0x94],eax
   140006e9d:	mov    rcx,QWORD PTR [rbp+0x28]
   140006ea1:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006ea5:	add    rdx,0x2
   140006ea9:	add    rdx,rdx
   140006eac:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006eaf:	mov    DWORD PTR [rsi+0xa8],eax
   140006eb5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006eb9:	mov    DWORD PTR [rsi+0xac],eax
   140006ebf:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006ec3:	mov    DWORD PTR [rsi+0xb0],eax
   140006ec9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006ecd:	mov    DWORD PTR [rsi+0xb4],eax
   140006ed3:	mov    rcx,QWORD PTR [rbp+0x28]
   140006ed7:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006edb:	add    rdx,0x3
   140006edf:	add    rdx,rdx
   140006ee2:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006ee5:	mov    DWORD PTR [rsi+0xb8],eax
   140006eeb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006eef:	mov    DWORD PTR [rsi+0xbc],eax
   140006ef5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006ef9:	mov    DWORD PTR [rsi+0xc0],eax
   140006eff:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006f03:	mov    DWORD PTR [rsi+0xc4],eax
   140006f09:	mov    rcx,QWORD PTR [rbp+0x28]
   140006f0d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006f11:	add    rdx,0x4
   140006f15:	add    rdx,rdx
   140006f18:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006f1b:	mov    DWORD PTR [rsi+0xd8],eax
   140006f21:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006f25:	mov    DWORD PTR [rsi+0xdc],eax
   140006f2b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006f2f:	mov    DWORD PTR [rsi+0xe0],eax
   140006f35:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006f39:	mov    ecx,0x38
   140006f3e:	mov    DWORD PTR [rsi+0xe4],eax
   140006f44:	mov    rdx,QWORD PTR [rbp+0x8]
   140006f48:	call   0x140004140
   140006f4d:	mov    rcx,rax
   140006f50:	test   rax,rax
   140006f53:	je     0x140006f70
   140006f55:	mov    eax,DWORD PTR [rbp+0x10]
   140006f58:	add    eax,0x3
   140006f5b:	movsxd rdx,eax
   140006f5e:	shl    rdx,0x4
   140006f62:	add    rdx,QWORD PTR [rbp+0x30]
   140006f66:	call   0x140003970
   140006f6b:	mov    rbx,rax
   140006f6e:	jmp    0x140006f73
   140006f70:	mov    rbx,r12
   140006f73:	mov    rcx,QWORD PTR [rbp+0x28]
   140006f77:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006f7b:	add    rdx,0x3
   140006f7f:	add    rdx,rdx
   140006f82:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006f85:	mov    DWORD PTR [rbx+0x28],eax
   140006f88:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006f8c:	mov    DWORD PTR [rbx+0x2c],eax
   140006f8f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006f93:	mov    DWORD PTR [rbx+0x30],eax
   140006f96:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006f9a:	mov    ecx,0x40
   140006f9f:	mov    DWORD PTR [rbx+0x34],eax
   140006fa2:	mov    QWORD PTR [rbx+0x10],r12
   140006fa6:	mov    rdx,QWORD PTR [rbp+0x8]
   140006faa:	call   0x140004140
   140006faf:	mov    r11,rax
   140006fb2:	test   rax,rax
   140006fb5:	je     0x140007008
   140006fb7:	mov    rax,QWORD PTR [rbp+0x18]
   140006fbb:	movsxd rcx,DWORD PTR [rbp+0x10]
   140006fbf:	mov    rdx,QWORD PTR [rax+rcx*8+0x28]
   140006fc4:	mov    rdi,QWORD PTR [rax+rcx*8+0x30]
   140006fc9:	lea    rax,[rip+0x100f8]        # 0x1400170c8
   140006fd0:	mov    QWORD PTR [r11],rax
   140006fd3:	mov    QWORD PTR [r11+0x10],rbx
   140006fd7:	mov    QWORD PTR [r11+0x18],rdx
   140006fdb:	mov    QWORD PTR [r11+0x20],rdi
   140006fdf:	mov    DWORD PTR [r11+0x28],r12d
   140006fe3:	mov    DWORD PTR [r11+0x2c],r12d
   140006fe7:	mov    DWORD PTR [r11+0x30],r12d
   140006feb:	mov    DWORD PTR [r11+0x34],r12d
   140006fef:	mov    BYTE PTR [r11+0x38],r12b
   140006ff3:	mov    DWORD PTR [r11+0x8],0x51
   140006ffb:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006fff:	add    rdx,0x4
   140007003:	jmp    0x140006dab
   140007008:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000700c:	mov    r11,r12
   14000700f:	add    rdx,0x4
   140007013:	jmp    0x140006dab
   140007018:	mov    rdx,QWORD PTR [rbp+0x8]
   14000701c:	mov    ecx,0x18
   140007021:	call   0x140004140
   140007026:	mov    rdi,rax
   140007029:	test   rax,rax
   14000702c:	je     0x1400052d6
   140007032:	mov    rax,QWORD PTR [rbp+0x18]
   140007036:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000703a:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000703e:	lea    rax,[rip+0x10033]        # 0x140017078
   140007045:	mov    QWORD PTR [rdi],rax
   140007048:	mov    QWORD PTR [rdi+0x10],rdx
   14000704c:	mov    DWORD PTR [rdi+0x8],0x5d
   140007053:	jmp    0x1400052d9
   140007058:	mov    rdx,QWORD PTR [rbp+0x8]
   14000705c:	mov    ecx,0x20
   140007061:	call   0x140004140
   140007066:	mov    rdi,rax
   140007069:	test   rax,rax
   14000706c:	je     0x140007091
   14000706e:	lea    rax,[rip+0xe523]        # 0x140015598
   140007075:	mov    QWORD PTR [rdi],rax
   140007078:	mov    DWORD PTR [rdi+0x10],r12d
   14000707c:	mov    DWORD PTR [rdi+0x14],r12d
   140007080:	mov    DWORD PTR [rdi+0x18],r12d
   140007084:	mov    DWORD PTR [rdi+0x1c],r12d
   140007088:	mov    DWORD PTR [rdi+0x8],0x40
   14000708f:	jmp    0x140007094
   140007091:	mov    rdi,r12
   140007094:	mov    rcx,QWORD PTR [rbp+0x28]
   140007098:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000709c:	add    rdx,rdx
   14000709f:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400070a2:	mov    DWORD PTR [rdi+0x10],eax
   1400070a5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400070a9:	mov    DWORD PTR [rdi+0x14],eax
   1400070ac:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400070b0:	mov    DWORD PTR [rdi+0x18],eax
   1400070b3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400070b7:	mov    DWORD PTR [rdi+0x1c],eax
   1400070ba:	jmp    0x1400052d9
   1400070bf:	mov    rdx,QWORD PTR [rbp+0x8]
   1400070c3:	mov    ecx,0x30
   1400070c8:	call   0x140004140
   1400070cd:	mov    rdi,rax
   1400070d0:	test   rax,rax
   1400070d3:	je     0x140007112
   1400070d5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400070d9:	lea    rcx,[rdi+0x10]
   1400070dd:	shl    rdx,0x4
   1400070e1:	add    rdx,QWORD PTR [rbp+0x30]
   1400070e5:	mov    DWORD PTR [rax+0x8],r12d
   1400070e9:	lea    rax,[rip+0xe4f8]        # 0x1400155e8
   1400070f0:	mov    QWORD PTR [rdi],rax
   1400070f3:	call   QWORD PTR [rip+0xe0af]        # 0x1400151a8
   1400070f9:	mov    DWORD PTR [rdi+0x20],r12d
   1400070fd:	mov    DWORD PTR [rdi+0x24],r12d
   140007101:	mov    DWORD PTR [rdi+0x28],r12d
   140007105:	mov    DWORD PTR [rdi+0x2c],r12d
   140007109:	mov    DWORD PTR [rdi+0x8],0x21
   140007110:	jmp    0x140007115
   140007112:	mov    rdi,r12
   140007115:	mov    rcx,QWORD PTR [rbp+0x28]
   140007119:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000711d:	add    rdx,rdx
   140007120:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007123:	mov    DWORD PTR [rdi+0x20],eax
   140007126:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000712a:	mov    DWORD PTR [rdi+0x24],eax
   14000712d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007131:	mov    DWORD PTR [rdi+0x28],eax
   140007134:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007138:	mov    DWORD PTR [rdi+0x2c],eax
   14000713b:	jmp    0x1400052d9
   140007140:	mov    rdx,QWORD PTR [rbp+0x8]
   140007144:	mov    ecx,0x20
   140007149:	call   0x140004140
   14000714e:	mov    rdi,rax
   140007151:	test   rax,rax
   140007154:	je     0x140007091
   14000715a:	lea    rax,[rip+0xe4d7]        # 0x140015638
   140007161:	mov    QWORD PTR [rdi],rax
   140007164:	mov    DWORD PTR [rdi+0x10],r12d
   140007168:	mov    DWORD PTR [rdi+0x14],r12d
   14000716c:	mov    DWORD PTR [rdi+0x18],r12d
   140007170:	mov    DWORD PTR [rdi+0x1c],r12d
   140007174:	mov    DWORD PTR [rdi+0x8],0x2a
   14000717b:	jmp    0x140007094
   140007180:	mov    rdx,QWORD PTR [rbp+0x8]
   140007184:	mov    ecx,0x20
   140007189:	call   0x140004140
   14000718e:	mov    rdi,rax
   140007191:	test   rax,rax
   140007194:	je     0x140007091
   14000719a:	lea    rax,[rip+0xe4e7]        # 0x140015688
   1400071a1:	mov    QWORD PTR [rdi],rax
   1400071a4:	mov    DWORD PTR [rdi+0x10],r12d
   1400071a8:	mov    DWORD PTR [rdi+0x14],r12d
   1400071ac:	mov    DWORD PTR [rdi+0x18],r12d
   1400071b0:	mov    DWORD PTR [rdi+0x1c],r12d
   1400071b4:	mov    DWORD PTR [rdi+0x8],0x43
   1400071bb:	jmp    0x140007094
   1400071c0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400071c4:	mov    ecx,0x20
   1400071c9:	call   0x140004140
   1400071ce:	mov    rdi,rax
   1400071d1:	test   rax,rax
   1400071d4:	je     0x140007091
   1400071da:	lea    rax,[rip+0xe4f7]        # 0x1400156d8
   1400071e1:	mov    QWORD PTR [rdi],rax
   1400071e4:	mov    DWORD PTR [rdi+0x10],r12d
   1400071e8:	mov    DWORD PTR [rdi+0x14],r12d
   1400071ec:	mov    DWORD PTR [rdi+0x18],r12d
   1400071f0:	mov    DWORD PTR [rdi+0x1c],r12d
   1400071f4:	mov    DWORD PTR [rdi+0x8],0x17
   1400071fb:	jmp    0x140007094
   140007200:	mov    rdx,QWORD PTR [rbp+0x8]
   140007204:	mov    ecx,0x28
   140007209:	call   0x140004140
   14000720e:	mov    rdi,rax
   140007211:	test   rax,rax
   140007214:	je     0x14000724b
   140007216:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000721a:	mov    rax,QWORD PTR [rbp+0x18]
   14000721e:	movsd  xmm0,QWORD PTR [rax+rcx*8]
   140007223:	lea    rax,[rip+0xe4fe]        # 0x140015728
   14000722a:	mov    QWORD PTR [rdi],rax
   14000722d:	movsd  QWORD PTR [rdi+0x10],xmm0
   140007232:	mov    DWORD PTR [rdi+0x18],r12d
   140007236:	mov    DWORD PTR [rdi+0x1c],r12d
   14000723a:	mov    DWORD PTR [rdi+0x20],r12d
   14000723e:	mov    DWORD PTR [rdi+0x24],r12d
   140007242:	mov    DWORD PTR [rdi+0x8],0x2b
   140007249:	jmp    0x14000724e
   14000724b:	mov    rdi,r12
   14000724e:	mov    rcx,QWORD PTR [rbp+0x28]
   140007252:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007256:	add    rdx,rdx
   140007259:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000725c:	mov    DWORD PTR [rdi+0x18],eax
   14000725f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007263:	mov    DWORD PTR [rdi+0x1c],eax
   140007266:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000726a:	mov    DWORD PTR [rdi+0x20],eax
   14000726d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007271:	mov    DWORD PTR [rdi+0x24],eax
   140007274:	jmp    0x1400052d9
   140007279:	mov    rdx,QWORD PTR [rbp+0x8]
   14000727d:	mov    ecx,0x30
   140007282:	call   0x140004140
   140007287:	mov    rdi,rax
   14000728a:	test   rax,rax
   14000728d:	je     0x140007112
   140007293:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007297:	lea    rcx,[rdi+0x10]
   14000729b:	shl    rdx,0x4
   14000729f:	add    rdx,QWORD PTR [rbp+0x30]
   1400072a3:	mov    DWORD PTR [rax+0x8],r12d
   1400072a7:	lea    rax,[rip+0xe4ca]        # 0x140015778
   1400072ae:	mov    QWORD PTR [rdi],rax
   1400072b1:	call   QWORD PTR [rip+0xdef1]        # 0x1400151a8
   1400072b7:	mov    DWORD PTR [rdi+0x20],r12d
   1400072bb:	mov    DWORD PTR [rdi+0x24],r12d
   1400072bf:	mov    DWORD PTR [rdi+0x28],r12d
   1400072c3:	mov    DWORD PTR [rdi+0x2c],r12d
   1400072c7:	mov    DWORD PTR [rdi+0x8],0x3d
   1400072ce:	jmp    0x140007115
   1400072d3:	xor    edx,edx
   1400072d5:	mov    rcx,rbx
   1400072d8:	call   0x14000e1e0
   1400072dd:	test   al,al
   1400072df:	je     0x14000b96d
   1400072e5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400072e9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400072ed:	mov    eax,DWORD PTR [rbx+0x84]
   1400072f3:	add    rdx,rdx
   1400072f6:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   1400072fa:	mov    rcx,QWORD PTR [rbp+0x28]
   1400072fe:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007302:	add    rdx,rdx
   140007305:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007308:	mov    DWORD PTR [rbp+0x58],eax
   14000730b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000730f:	mov    DWORD PTR [rbp+0x5c],eax
   140007312:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007316:	mov    DWORD PTR [rbp+0x60],eax
   140007319:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000731d:	mov    ecx,0x38
   140007322:	mov    DWORD PTR [rbp+0x64],eax
   140007325:	mov    rdx,QWORD PTR [rbp+0x8]
   140007329:	call   0x140004140
   14000732e:	mov    rbx,rax
   140007331:	test   rax,rax
   140007334:	je     0x140007383
   140007336:	mov    rdx,QWORD PTR [rsp+0x38]
   14000733b:	lea    rcx,[rsp+0xd0]
   140007343:	or     esi,0xc
   140007346:	mov    edi,DWORD PTR [rdx+0x7c]
   140007349:	add    rdx,0x10
   14000734d:	mov    DWORD PTR [rsp+0x30],esi
   140007351:	call   QWORD PTR [rip+0xe071]        # 0x1400153c8
   140007357:	mov    rcx,QWORD PTR [rbp+0x0]
   14000735b:	lea    r8,[rsp+0xd0]
   140007363:	lea    rdx,[rsp+0x320]
   14000736b:	call   0x14000c460
   140007370:	mov    r8d,edi
   140007373:	mov    rcx,rbx
   140007376:	mov    rdx,rax
   140007379:	call   0x140002720
   14000737e:	mov    rdi,rax
   140007381:	jmp    0x140007386
   140007383:	mov    rdi,r12
   140007386:	test   sil,0x8
   14000738a:	je     0x1400073a1
   14000738c:	and    esi,0xfffffff7
   14000738f:	lea    rcx,[rsp+0x320]
   140007397:	mov    DWORD PTR [rsp+0x30],esi
   14000739b:	call   QWORD PTR [rip+0xde3f]        # 0x1400151e0
   1400073a1:	test   sil,0x4
   1400073a5:	je     0x1400073bc
   1400073a7:	and    esi,0xfffffffb
   1400073aa:	lea    rcx,[rsp+0xd0]
   1400073b2:	mov    DWORD PTR [rsp+0x30],esi
   1400073b6:	call   QWORD PTR [rip+0xdffc]        # 0x1400153b8
   1400073bc:	mov    rcx,QWORD PTR [rbp+0x28]
   1400073c0:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400073c4:	add    rdx,rdx
   1400073c7:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400073ca:	mov    DWORD PTR [rdi+0x24],eax
   1400073cd:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400073d1:	mov    DWORD PTR [rdi+0x28],eax
   1400073d4:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400073d8:	mov    DWORD PTR [rdi+0x2c],eax
   1400073db:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400073df:	mov    DWORD PTR [rdi+0x30],eax
   1400073e2:	jmp    0x1400052d9
   1400073e7:	mov    edx,0x1
   1400073ec:	mov    rcx,rbx
   1400073ef:	call   0x14000e1e0
   1400073f4:	test   al,al
   1400073f6:	je     0x14000b9f9
   1400073fc:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007400:	mov    rcx,QWORD PTR [rbp+0x28]
   140007404:	mov    eax,DWORD PTR [rbx+0x84]
   14000740a:	add    rdx,rdx
   14000740d:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   140007411:	mov    rcx,QWORD PTR [rbp+0x28]
   140007415:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007419:	add    rdx,rdx
   14000741c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000741f:	mov    DWORD PTR [rbp+0x58],eax
   140007422:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007426:	mov    DWORD PTR [rbp+0x5c],eax
   140007429:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000742d:	mov    DWORD PTR [rbp+0x60],eax
   140007430:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007434:	mov    ecx,0x38
   140007439:	mov    DWORD PTR [rbp+0x64],eax
   14000743c:	mov    rdx,QWORD PTR [rbp+0x8]
   140007440:	call   0x140004140
   140007445:	mov    rbx,rax
   140007448:	test   rax,rax
   14000744b:	je     0x14000749a
   14000744d:	mov    rdx,QWORD PTR [rsp+0x38]
   140007452:	lea    rcx,[rsp+0xe0]
   14000745a:	or     esi,0x30
   14000745d:	mov    edi,DWORD PTR [rdx+0x7c]
   140007460:	add    rdx,0x10
   140007464:	mov    DWORD PTR [rsp+0x30],esi
   140007468:	call   QWORD PTR [rip+0xdf5a]        # 0x1400153c8
   14000746e:	mov    rcx,QWORD PTR [rbp+0x0]
   140007472:	lea    r8,[rsp+0xe0]
   14000747a:	lea    rdx,[rsp+0x380]
   140007482:	call   0x14000c460
   140007487:	mov    r8d,edi
   14000748a:	mov    rcx,rbx
   14000748d:	mov    rdx,rax
   140007490:	call   0x140002720
   140007495:	mov    rdi,rax
   140007498:	jmp    0x14000749d
   14000749a:	mov    rdi,r12
   14000749d:	test   sil,0x20
   1400074a1:	je     0x1400074b8
   1400074a3:	and    esi,0xffffffdf
   1400074a6:	lea    rcx,[rsp+0x380]
   1400074ae:	mov    DWORD PTR [rsp+0x30],esi
   1400074b2:	call   QWORD PTR [rip+0xdd28]        # 0x1400151e0
   1400074b8:	test   sil,0x10
   1400074bc:	je     0x1400074d3
   1400074be:	and    esi,0xffffffef
   1400074c1:	lea    rcx,[rsp+0xe0]
   1400074c9:	mov    DWORD PTR [rsp+0x30],esi
   1400074cd:	call   QWORD PTR [rip+0xdee5]        # 0x1400153b8
   1400074d3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400074d7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400074db:	add    rdx,rdx
   1400074de:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400074e1:	mov    DWORD PTR [rdi+0x24],eax
   1400074e4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400074e8:	mov    DWORD PTR [rdi+0x28],eax
   1400074eb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400074ef:	mov    DWORD PTR [rdi+0x2c],eax
   1400074f2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400074f6:	mov    DWORD PTR [rdi+0x30],eax
   1400074f9:	jmp    0x1400052d9
   1400074fe:	mov    rdx,QWORD PTR [rbp+0x8]
   140007502:	mov    ecx,0x50
   140007507:	call   0x140004140
   14000750c:	mov    rdi,rax
   14000750f:	test   rax,rax
   140007512:	je     0x14000755f
   140007514:	lea    rax,[rip+0xe2fd]        # 0x140015818
   14000751b:	mov    QWORD PTR [rdi],rax
   14000751e:	mov    QWORD PTR [rdi+0x10],r12
   140007522:	mov    QWORD PTR [rdi+0x18],r12
   140007526:	mov    DWORD PTR [rdi+0x20],r12d
   14000752a:	mov    DWORD PTR [rdi+0x24],r12d
   14000752e:	mov    DWORD PTR [rdi+0x28],r12d
   140007532:	mov    DWORD PTR [rdi+0x2c],r12d
   140007536:	mov    DWORD PTR [rdi+0x30],r12d
   14000753a:	mov    DWORD PTR [rdi+0x34],r12d
   14000753e:	mov    DWORD PTR [rdi+0x38],r12d
   140007542:	mov    DWORD PTR [rdi+0x3c],r12d
   140007546:	mov    DWORD PTR [rdi+0x40],r12d
   14000754a:	mov    DWORD PTR [rdi+0x44],r12d
   14000754e:	mov    DWORD PTR [rdi+0x48],r12d
   140007552:	mov    DWORD PTR [rdi+0x4c],r12d
   140007556:	mov    DWORD PTR [rdi+0x8],0x2
   14000755d:	jmp    0x140007562
   14000755f:	mov    rdi,r12
   140007562:	mov    rcx,QWORD PTR [rbp+0x28]
   140007566:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000756a:	add    rdx,rdx
   14000756d:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007570:	mov    DWORD PTR [rdi+0x20],eax
   140007573:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007577:	mov    DWORD PTR [rdi+0x24],eax
   14000757a:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000757e:	mov    DWORD PTR [rdi+0x28],eax
   140007581:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007585:	mov    DWORD PTR [rdi+0x2c],eax
   140007588:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000758c:	inc    rdx
   14000758f:	mov    rcx,QWORD PTR [rbp+0x28]
   140007593:	add    rdx,rdx
   140007596:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007599:	mov    DWORD PTR [rdi+0x40],eax
   14000759c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400075a0:	mov    DWORD PTR [rdi+0x44],eax
   1400075a3:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400075a7:	mov    DWORD PTR [rdi+0x48],eax
   1400075aa:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400075ae:	mov    DWORD PTR [rdi+0x4c],eax
   1400075b1:	jmp    0x1400052d9
   1400075b6:	mov    rdx,QWORD PTR [rbp+0x8]
   1400075ba:	mov    ecx,0x50
   1400075bf:	call   0x140004140
   1400075c4:	mov    rdi,rax
   1400075c7:	test   rax,rax
   1400075ca:	je     0x1400075ee
   1400075cc:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400075d0:	mov    rax,QWORD PTR [rbp+0x18]
   1400075d4:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   1400075d9:	mov    rdx,QWORD PTR [rcx+0x10]
   1400075dd:	mov    QWORD PTR [rcx+0x10],r12
   1400075e1:	mov    rcx,rdi
   1400075e4:	call   0x140002790
   1400075e9:	mov    rdi,rax
   1400075ec:	jmp    0x1400075f1
   1400075ee:	mov    rdi,r12
   1400075f1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400075f5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400075f9:	add    rdx,rdx
   1400075fc:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400075ff:	mov    DWORD PTR [rdi+0x20],eax
   140007602:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007606:	mov    DWORD PTR [rdi+0x24],eax
   140007609:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000760d:	mov    DWORD PTR [rdi+0x28],eax
   140007610:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007614:	mov    DWORD PTR [rdi+0x2c],eax
   140007617:	mov    rcx,QWORD PTR [rbp+0x28]
   14000761b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000761f:	add    rdx,0x2
   140007623:	add    rdx,rdx
   140007626:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007629:	mov    DWORD PTR [rdi+0x40],eax
   14000762c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007630:	mov    DWORD PTR [rdi+0x44],eax
   140007633:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007637:	mov    DWORD PTR [rdi+0x48],eax
   14000763a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000763e:	mov    DWORD PTR [rdi+0x4c],eax
   140007641:	jmp    0x1400052d9
   140007646:	mov    rdx,QWORD PTR [rbp+0x8]
   14000764a:	mov    ecx,0x50
   14000764f:	call   0x140004140
   140007654:	mov    rdi,rax
   140007657:	test   rax,rax
   14000765a:	je     0x1400075ee
   14000765c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007660:	mov    rax,QWORD PTR [rbp+0x18]
   140007664:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   140007669:	mov    rdx,QWORD PTR [rcx+0x20]
   14000766d:	mov    QWORD PTR [rcx+0x20],r12
   140007671:	mov    rcx,rdi
   140007674:	call   0x1400027e0
   140007679:	mov    rdi,rax
   14000767c:	jmp    0x1400075f1
   140007681:	mov    rdx,QWORD PTR [rbp+0x8]
   140007685:	mov    ecx,0x50
   14000768a:	call   0x140004140
   14000768f:	mov    rdi,rax
   140007692:	test   rax,rax
   140007695:	je     0x1400076f7
   140007697:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000769b:	mov    rax,QWORD PTR [rbp+0x18]
   14000769f:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   1400076a4:	lea    rcx,[rip+0xe16d]        # 0x140015818
   1400076ab:	mov    rax,QWORD PTR [rdx+0x20]
   1400076af:	mov    QWORD PTR [rdx+0x20],r12
   1400076b3:	mov    QWORD PTR [rdi],rcx
   1400076b6:	mov    QWORD PTR [rdi+0x10],rax
   1400076ba:	mov    QWORD PTR [rdi+0x18],r12
   1400076be:	mov    DWORD PTR [rdi+0x20],r12d
   1400076c2:	mov    DWORD PTR [rdi+0x24],r12d
   1400076c6:	mov    DWORD PTR [rdi+0x28],r12d
   1400076ca:	mov    DWORD PTR [rdi+0x2c],r12d
   1400076ce:	mov    DWORD PTR [rdi+0x30],r12d
   1400076d2:	mov    DWORD PTR [rdi+0x34],r12d
   1400076d6:	mov    DWORD PTR [rdi+0x38],r12d
   1400076da:	mov    DWORD PTR [rdi+0x3c],r12d
   1400076de:	mov    DWORD PTR [rdi+0x40],r12d
   1400076e2:	mov    DWORD PTR [rdi+0x44],r12d
   1400076e6:	mov    DWORD PTR [rdi+0x48],r12d
   1400076ea:	mov    DWORD PTR [rdi+0x4c],r12d
   1400076ee:	mov    DWORD PTR [rdi+0x8],0x2
   1400076f5:	jmp    0x1400076fa
   1400076f7:	mov    rdi,r12
   1400076fa:	mov    rcx,QWORD PTR [rbp+0x28]
   1400076fe:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007702:	add    rdx,rdx
   140007705:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007708:	mov    DWORD PTR [rdi+0x20],eax
   14000770b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000770f:	mov    DWORD PTR [rdi+0x24],eax
   140007712:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007716:	mov    DWORD PTR [rdi+0x28],eax
   140007719:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000771d:	mov    DWORD PTR [rdi+0x2c],eax
   140007720:	mov    rcx,QWORD PTR [rbp+0x28]
   140007724:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007728:	add    rdx,0x2
   14000772c:	add    rdx,rdx
   14000772f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007732:	mov    DWORD PTR [rdi+0x30],eax
   140007735:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007739:	mov    DWORD PTR [rdi+0x34],eax
   14000773c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007740:	mov    DWORD PTR [rdi+0x38],eax
   140007743:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007747:	mov    DWORD PTR [rdi+0x3c],eax
   14000774a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000774e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007752:	add    rdx,0x3
   140007756:	add    rdx,rdx
   140007759:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000775c:	mov    DWORD PTR [rdi+0x40],eax
   14000775f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007763:	mov    DWORD PTR [rdi+0x44],eax
   140007766:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000776a:	mov    DWORD PTR [rdi+0x48],eax
   14000776d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007771:	mov    DWORD PTR [rdi+0x4c],eax
   140007774:	jmp    0x1400052d9
   140007779:	mov    rdx,QWORD PTR [rbp+0x8]
   14000777d:	mov    ecx,0x50
   140007782:	call   0x140004140
   140007787:	mov    rdi,rax
   14000778a:	test   rax,rax
   14000778d:	je     0x1400077c6
   14000778f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007793:	mov    rax,QWORD PTR [rbp+0x18]
   140007797:	mov    rdx,QWORD PTR [rax+rcx*8+0x18]
   14000779c:	mov    r8,QWORD PTR [rdx+0x10]
   1400077a0:	mov    QWORD PTR [rdx+0x10],r12
   1400077a4:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400077a8:	mov    rax,QWORD PTR [rbp+0x18]
   1400077ac:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   1400077b1:	mov    rdx,QWORD PTR [rcx+0x20]
   1400077b5:	mov    QWORD PTR [rcx+0x20],r12
   1400077b9:	mov    rcx,rdi
   1400077bc:	call   0x140002830
   1400077c1:	mov    rdi,rax
   1400077c4:	jmp    0x1400077c9
   1400077c6:	mov    rdi,r12
   1400077c9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400077cd:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400077d1:	add    rdx,rdx
   1400077d4:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400077d7:	mov    DWORD PTR [rdi+0x20],eax
   1400077da:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400077de:	mov    DWORD PTR [rdi+0x24],eax
   1400077e1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400077e5:	mov    DWORD PTR [rdi+0x28],eax
   1400077e8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400077ec:	mov    DWORD PTR [rdi+0x2c],eax
   1400077ef:	mov    rcx,QWORD PTR [rbp+0x28]
   1400077f3:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400077f7:	add    rdx,0x2
   1400077fb:	add    rdx,rdx
   1400077fe:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007801:	mov    DWORD PTR [rdi+0x30],eax
   140007804:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007808:	mov    DWORD PTR [rdi+0x34],eax
   14000780b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000780f:	mov    DWORD PTR [rdi+0x38],eax
   140007812:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007816:	mov    DWORD PTR [rdi+0x3c],eax
   140007819:	mov    rcx,QWORD PTR [rbp+0x28]
   14000781d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007821:	add    rdx,0x4
   140007825:	add    rdx,rdx
   140007828:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000782b:	mov    DWORD PTR [rdi+0x40],eax
   14000782e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007832:	mov    DWORD PTR [rdi+0x44],eax
   140007835:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007839:	mov    DWORD PTR [rdi+0x48],eax
   14000783c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007840:	mov    DWORD PTR [rdi+0x4c],eax
   140007843:	jmp    0x1400052d9
   140007848:	mov    rax,QWORD PTR [rbp+0x18]
   14000784c:	mov    ecx,0x38
   140007851:	cmp    QWORD PTR [rax+rdx*8+0x8],r12
   140007856:	mov    rdx,QWORD PTR [rbp+0x8]
   14000785a:	je     0x14000788e
   14000785c:	call   0x140004140
   140007861:	mov    rdi,rax
   140007864:	test   rax,rax
   140007867:	je     0x1400078d2
   140007869:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000786d:	mov    rax,QWORD PTR [rbp+0x18]
   140007871:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140007876:	lea    rcx,[rip+0xdfeb]        # 0x140015868
   14000787d:	mov    rax,QWORD PTR [rdx+0x18]
   140007881:	mov    QWORD PTR [rdx+0x18],r12
   140007885:	mov    QWORD PTR [rdi],rcx
   140007888:	mov    QWORD PTR [rdi+0x10],rax
   14000788c:	jmp    0x1400078a9
   14000788e:	call   0x140004140
   140007893:	mov    rdi,rax
   140007896:	test   rax,rax
   140007899:	je     0x1400078d2
   14000789b:	lea    rax,[rip+0xdfc6]        # 0x140015868
   1400078a2:	mov    QWORD PTR [rdi],rax
   1400078a5:	mov    QWORD PTR [rdi+0x10],r12
   1400078a9:	mov    DWORD PTR [rdi+0x18],r12d
   1400078ad:	mov    DWORD PTR [rdi+0x1c],r12d
   1400078b1:	mov    DWORD PTR [rdi+0x20],r12d
   1400078b5:	mov    DWORD PTR [rdi+0x24],r12d
   1400078b9:	mov    DWORD PTR [rdi+0x28],r12d
   1400078bd:	mov    DWORD PTR [rdi+0x2c],r12d
   1400078c1:	mov    DWORD PTR [rdi+0x30],r12d
   1400078c5:	mov    DWORD PTR [rdi+0x34],r12d
   1400078c9:	mov    DWORD PTR [rdi+0x8],0x2d
   1400078d0:	jmp    0x1400078d5
   1400078d2:	mov    rdi,r12
   1400078d5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400078d9:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400078dd:	add    rdx,rdx
   1400078e0:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400078e3:	mov    DWORD PTR [rdi+0x18],eax
   1400078e6:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400078ea:	mov    DWORD PTR [rdi+0x1c],eax
   1400078ed:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400078f1:	mov    DWORD PTR [rdi+0x20],eax
   1400078f4:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400078f8:	mov    DWORD PTR [rdi+0x24],eax
   1400078fb:	jmp    0x1400059cd
   140007900:	mov    rdx,QWORD PTR [rbp+0x8]
   140007904:	mov    ecx,0x38
   140007909:	call   0x140004140
   14000790e:	mov    rdi,rax
   140007911:	test   rax,rax
   140007914:	je     0x140007962
   140007916:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000791a:	mov    rax,QWORD PTR [rbp+0x18]
   14000791e:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140007923:	lea    rcx,[rip+0xdf3e]        # 0x140015868
   14000792a:	mov    rax,QWORD PTR [rdx+0x18]
   14000792e:	mov    QWORD PTR [rdx+0x18],r12
   140007932:	mov    QWORD PTR [rdi],rcx
   140007935:	mov    QWORD PTR [rdi+0x10],rax
   140007939:	mov    DWORD PTR [rdi+0x18],r12d
   14000793d:	mov    DWORD PTR [rdi+0x1c],r12d
   140007941:	mov    DWORD PTR [rdi+0x20],r12d
   140007945:	mov    DWORD PTR [rdi+0x24],r12d
   140007949:	mov    DWORD PTR [rdi+0x28],r12d
   14000794d:	mov    DWORD PTR [rdi+0x2c],r12d
   140007951:	mov    DWORD PTR [rdi+0x30],r12d
   140007955:	mov    DWORD PTR [rdi+0x34],r12d
   140007959:	mov    DWORD PTR [rdi+0x8],0x2d
   140007960:	jmp    0x140007965
   140007962:	mov    rdi,r12
   140007965:	mov    rcx,QWORD PTR [rbp+0x28]
   140007969:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000796d:	add    rdx,rdx
   140007970:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007973:	mov    DWORD PTR [rdi+0x18],eax
   140007976:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000797a:	mov    DWORD PTR [rdi+0x1c],eax
   14000797d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007981:	mov    DWORD PTR [rdi+0x20],eax
   140007984:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007988:	mov    DWORD PTR [rdi+0x24],eax
   14000798b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000798f:	add    rdx,0x3
   140007993:	jmp    0x1400059d5
   140007998:	mov    rdx,QWORD PTR [rbp+0x8]
   14000799c:	mov    ecx,0x38
   1400079a1:	call   0x140004140
   1400079a6:	mov    rdi,rax
   1400079a9:	test   rax,rax
   1400079ac:	je     0x1400078d2
   1400079b2:	mov    rax,QWORD PTR [rbp+0x18]
   1400079b6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400079ba:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   1400079bf:	lea    rax,[rip+0xdb82]        # 0x140015548
   1400079c6:	mov    QWORD PTR [rdi],rax
   1400079c9:	mov    QWORD PTR [rdi+0x10],rdx
   1400079cd:	mov    DWORD PTR [rdi+0x18],r12d
   1400079d1:	mov    DWORD PTR [rdi+0x1c],r12d
   1400079d5:	mov    DWORD PTR [rdi+0x20],r12d
   1400079d9:	mov    DWORD PTR [rdi+0x24],r12d
   1400079dd:	mov    DWORD PTR [rdi+0x28],r12d
   1400079e1:	mov    DWORD PTR [rdi+0x2c],r12d
   1400079e5:	mov    DWORD PTR [rdi+0x30],r12d
   1400079e9:	mov    DWORD PTR [rdi+0x34],r12d
   1400079ed:	mov    DWORD PTR [rdi+0x8],0x4e
   1400079f4:	jmp    0x1400078d5
   1400079f9:	mov    rax,QWORD PTR [rbp+0x18]
   1400079fd:	mov    rbx,QWORD PTR [rax+rdx*8]
   140007a01:	test   rbx,rbx
   140007a04:	je     0x140007ad3
   140007a0a:	cmp    DWORD PTR [rbx+0x8],0x3
   140007a0e:	jne    0x140007ad3
   140007a14:	or     rcx,0xffffffffffffffff
   140007a18:	xor    eax,eax
   140007a1a:	lea    rdx,[rsp+0x340]
   140007a22:	repnz scas al,BYTE PTR es:[rdi]
   140007a24:	lea    rax,[rip+0xf875]        # 0x1400172a0
   140007a2b:	not    rcx
   140007a2e:	mov    QWORD PTR [rsp+0x48],rax
   140007a33:	dec    rcx
   140007a36:	mov    DWORD PTR [rsp+0x40],ecx
   140007a3a:	lea    rcx,[rsp+0xf0]
   140007a42:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140007a47:	movdqa XMMWORD PTR [rsp+0x340],xmm0
   140007a50:	call   QWORD PTR [rip+0xd70a]        # 0x140015160
   140007a56:	mov    DWORD PTR [rsp+0x210],r12d
   140007a5e:	mov    eax,DWORD PTR [rbx+0x20]
   140007a61:	lea    rcx,[rsp+0x214]
   140007a69:	lea    rdx,[rsp+0xf0]
   140007a71:	mov    DWORD PTR [rcx],eax
   140007a73:	mov    eax,DWORD PTR [rbx+0x24]
   140007a76:	mov    DWORD PTR [rcx+0x4],eax
   140007a79:	mov    eax,DWORD PTR [rbx+0x28]
   140007a7c:	mov    DWORD PTR [rcx+0x8],eax
   140007a7f:	mov    eax,DWORD PTR [rbx+0x2c]
   140007a82:	mov    DWORD PTR [rcx+0xc],eax
   140007a85:	lea    rcx,[rsp+0x228]
   140007a8d:	call   QWORD PTR [rip+0xd935]        # 0x1400153c8
   140007a93:	lea    rcx,[rbp+0x118]
   140007a9a:	lea    rdx,[rsp+0x210]
   140007aa2:	call   0x140004c10
   140007aa7:	lea    rcx,[rsp+0x228]
   140007aaf:	call   QWORD PTR [rip+0xd903]        # 0x1400153b8
   140007ab5:	lea    rcx,[rsp+0xf0]
   140007abd:	call   QWORD PTR [rip+0xd8f5]        # 0x1400153b8
   140007ac3:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007ac7:	mov    rcx,QWORD PTR [rbp+0x18]
   140007acb:	mov    rax,QWORD PTR [rbx+0x10]
   140007acf:	mov    QWORD PTR [rcx+rdx*8],rax
   140007ad3:	movsxd rax,DWORD PTR [rbp+0x10]
   140007ad7:	mov    rdx,QWORD PTR [rbp+0x18]
   140007adb:	mov    rcx,rbp
   140007ade:	mov    rdx,QWORD PTR [rdx+rax*8]
   140007ae2:	call   0x140004650
   140007ae7:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007aeb:	mov    rdx,rax
   140007aee:	test   rax,rax
   140007af1:	mov    rax,QWORD PTR [rbp+0x18]
   140007af5:	je     0x14000ba85
   140007afb:	mov    QWORD PTR [rax+rcx*8],rdx
   140007aff:	lea    r9,[rip+0xffffffffffff84fa]        # 0x140000000
   140007b06:	jmp    0x14000ae40
   140007b0b:	mov    rdx,QWORD PTR [rbp+0x8]
   140007b0f:	mov    ecx,0x38
   140007b14:	call   0x140004140
   140007b19:	mov    rdi,rax
   140007b1c:	test   rax,rax
   140007b1f:	je     0x1400052d6
   140007b25:	mov    rax,QWORD PTR [rbp+0x18]
   140007b29:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007b2d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140007b31:	lea    rax,[rip+0xddd0]        # 0x140015908
   140007b38:	mov    QWORD PTR [rdi],rax
   140007b3b:	mov    QWORD PTR [rdi+0x10],r12
   140007b3f:	mov    QWORD PTR [rdi+0x18],rdx
   140007b43:	mov    QWORD PTR [rdi+0x20],rdi
   140007b47:	mov    DWORD PTR [rdi+0x28],r12d
   140007b4b:	mov    DWORD PTR [rdi+0x2c],r12d
   140007b4f:	mov    DWORD PTR [rdi+0x30],r12d
   140007b53:	mov    DWORD PTR [rdi+0x34],r12d
   140007b57:	mov    DWORD PTR [rdi+0x8],0x12
   140007b5e:	jmp    0x1400052d9
   140007b63:	mov    rdx,QWORD PTR [rbp+0x8]
   140007b67:	mov    ecx,0x38
   140007b6c:	call   0x140004140
   140007b71:	mov    r11,rax
   140007b74:	test   rax,rax
   140007b77:	je     0x140005a55
   140007b7d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007b81:	mov    r8,QWORD PTR [rbp+0x18]
   140007b85:	lea    eax,[rcx+0x1]
   140007b88:	mov    rcx,QWORD PTR [r8+rcx*8]
   140007b8c:	mov    rdx,QWORD PTR [rcx+0x10]
   140007b90:	mov    QWORD PTR [rcx+0x10],r12
   140007b94:	movsxd rdi,eax
   140007b97:	mov    rax,QWORD PTR [r8+rdi*8]
   140007b9b:	lea    rcx,[rip+0xdd66]        # 0x140015908
   140007ba2:	mov    QWORD PTR [r11],rcx
   140007ba5:	mov    QWORD PTR [r11+0x10],rdx
   140007ba9:	mov    QWORD PTR [r11+0x18],rax
   140007bad:	mov    QWORD PTR [r11+0x20],r11
   140007bb1:	mov    DWORD PTR [r11+0x28],r12d
   140007bb5:	mov    DWORD PTR [r11+0x2c],r12d
   140007bb9:	mov    DWORD PTR [r11+0x30],r12d
   140007bbd:	mov    DWORD PTR [r11+0x34],r12d
   140007bc1:	mov    DWORD PTR [r11+0x8],0x12
   140007bc9:	jmp    0x140005a58
   140007bce:	mov    rdx,QWORD PTR [rbp+0x8]
   140007bd2:	mov    ecx,0x38
   140007bd7:	call   0x140004140
   140007bdc:	mov    rdi,rax
   140007bdf:	test   rax,rax
   140007be2:	je     0x140007c36
   140007be4:	mov    rax,QWORD PTR [rbp+0x18]
   140007be8:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007bec:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140007bf1:	mov    rcx,QWORD PTR [rax+rcx*8]
   140007bf5:	lea    rax,[rip+0xdd0c]        # 0x140015908
   140007bfc:	mov    QWORD PTR [rdi],rax
   140007bff:	mov    QWORD PTR [rdi+0x10],r12
   140007c03:	mov    QWORD PTR [rdi+0x18],rdx
   140007c07:	mov    DWORD PTR [rdi+0x28],r12d
   140007c0b:	mov    DWORD PTR [rdi+0x2c],r12d
   140007c0f:	mov    DWORD PTR [rdi+0x30],r12d
   140007c13:	mov    DWORD PTR [rdi+0x34],r12d
   140007c17:	mov    DWORD PTR [rdi+0x8],0x12
   140007c1e:	mov    rax,QWORD PTR [rcx+0x20]
   140007c22:	mov    QWORD PTR [rdi+0x20],rax
   140007c26:	mov    QWORD PTR [rcx+0x20],rdi
   140007c2a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007c2e:	inc    rdx
   140007c31:	jmp    0x1400059d5
   140007c36:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007c3a:	mov    rdi,r12
   140007c3d:	inc    rdx
   140007c40:	jmp    0x1400059d5
   140007c45:	mov    rdx,QWORD PTR [rbp+0x8]
   140007c49:	mov    ecx,0x38
   140007c4e:	call   0x140004140
   140007c53:	mov    r11,rax
   140007c56:	test   rax,rax
   140007c59:	je     0x140005bf7
   140007c5f:	mov    r8,QWORD PTR [rbp+0x18]
   140007c63:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007c67:	lea    eax,[rcx+0x3]
   140007c6a:	mov    rcx,QWORD PTR [r8+rcx*8+0x10]
   140007c6f:	mov    rdi,QWORD PTR [rcx+0x10]
   140007c73:	mov    QWORD PTR [rcx+0x10],r12
   140007c77:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007c7b:	movsxd rdx,eax
   140007c7e:	mov    rax,QWORD PTR [rbp+0x18]
   140007c82:	mov    rdx,QWORD PTR [r8+rdx*8]
   140007c86:	mov    r8,QWORD PTR [rax+rcx*8]
   140007c8a:	lea    rax,[rip+0xdc77]        # 0x140015908
   140007c91:	mov    QWORD PTR [r11],rax
   140007c94:	mov    QWORD PTR [r11+0x10],rdi
   140007c98:	mov    QWORD PTR [r11+0x18],rdx
   140007c9c:	mov    DWORD PTR [r11+0x28],r12d
   140007ca0:	mov    DWORD PTR [r11+0x2c],r12d
   140007ca4:	mov    DWORD PTR [r11+0x30],r12d
   140007ca8:	mov    DWORD PTR [r11+0x34],r12d
   140007cac:	mov    DWORD PTR [r11+0x8],0x12
   140007cb4:	mov    rax,QWORD PTR [r8+0x20]
   140007cb8:	mov    QWORD PTR [r11+0x20],rax
   140007cbc:	mov    QWORD PTR [r8+0x20],r11
   140007cc0:	jmp    0x140005bfa
   140007cc5:	mov    rdx,QWORD PTR [rbp+0x8]
   140007cc9:	mov    ecx,0x28
   140007cce:	call   0x140004140
   140007cd3:	mov    rdi,rax
   140007cd6:	test   rax,rax
   140007cd9:	je     0x14000724b
   140007cdf:	lea    rax,[rip+0xdbd2]        # 0x1400158b8
   140007ce6:	mov    QWORD PTR [rdi],rax
   140007ce9:	mov    QWORD PTR [rdi+0x10],rdi
   140007ced:	mov    DWORD PTR [rdi+0x18],r12d
   140007cf1:	mov    DWORD PTR [rdi+0x1c],r12d
   140007cf5:	mov    DWORD PTR [rdi+0x20],r12d
   140007cf9:	mov    DWORD PTR [rdi+0x24],r12d
   140007cfd:	mov    DWORD PTR [rdi+0x8],0x13
   140007d04:	jmp    0x14000724e
   140007d09:	mov    rdx,QWORD PTR [rbp+0x8]
   140007d0d:	mov    ecx,0x28
   140007d12:	call   0x140004140
   140007d17:	mov    rdi,rax
   140007d1a:	test   rax,rax
   140007d1d:	je     0x140007d5a
   140007d1f:	mov    rax,QWORD PTR [rbp+0x18]
   140007d23:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007d27:	mov    rdx,QWORD PTR [rax+rcx*8]
   140007d2b:	lea    rax,[rip+0xdb86]        # 0x1400158b8
   140007d32:	mov    QWORD PTR [rdi],rax
   140007d35:	mov    DWORD PTR [rdi+0x18],r12d
   140007d39:	mov    DWORD PTR [rdi+0x1c],r12d
   140007d3d:	mov    DWORD PTR [rdi+0x20],r12d
   140007d41:	mov    DWORD PTR [rdi+0x24],r12d
   140007d45:	mov    DWORD PTR [rdi+0x8],0x13
   140007d4c:	mov    rax,QWORD PTR [rdx+0x10]
   140007d50:	mov    QWORD PTR [rdi+0x10],rax
   140007d54:	mov    QWORD PTR [rdx+0x10],rdi
   140007d58:	jmp    0x140007d5d
   140007d5a:	mov    rdi,r12
   140007d5d:	mov    rcx,QWORD PTR [rbp+0x28]
   140007d61:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007d65:	inc    rdx
   140007d68:	add    rdx,rdx
   140007d6b:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007d6e:	mov    DWORD PTR [rdi+0x18],eax
   140007d71:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007d75:	mov    DWORD PTR [rdi+0x1c],eax
   140007d78:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007d7c:	mov    DWORD PTR [rdi+0x20],eax
   140007d7f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007d83:	mov    DWORD PTR [rdi+0x24],eax
   140007d86:	jmp    0x1400052d9
   140007d8b:	mov    rdx,QWORD PTR [rbp+0x8]
   140007d8f:	mov    ecx,0x40
   140007d94:	call   0x140004140
   140007d99:	mov    rdi,rax
   140007d9c:	test   rax,rax
   140007d9f:	je     0x140007d5a
   140007da1:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007da5:	mov    rax,QWORD PTR [rbp+0x18]
   140007da9:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140007dae:	mov    rax,QWORD PTR [rax+rcx*8]
   140007db2:	mov    QWORD PTR [rdi+0x10],rax
   140007db6:	lea    rax,[rip+0xdbeb]        # 0x1400159a8
   140007dbd:	mov    QWORD PTR [rdi],rax
   140007dc0:	mov    DWORD PTR [rdi+0x18],r12d
   140007dc4:	mov    DWORD PTR [rdi+0x1c],r12d
   140007dc8:	mov    DWORD PTR [rdi+0x20],r12d
   140007dcc:	mov    DWORD PTR [rdi+0x24],r12d
   140007dd0:	mov    QWORD PTR [rdi+0x28],rdx
   140007dd4:	mov    DWORD PTR [rdi+0x30],r12d
   140007dd8:	mov    DWORD PTR [rdi+0x34],r12d
   140007ddc:	mov    DWORD PTR [rdi+0x38],r12d
   140007de0:	mov    DWORD PTR [rdi+0x3c],r12d
   140007de4:	mov    DWORD PTR [rdi+0x8],0x36
   140007deb:	jmp    0x140007d5d
   140007df0:	mov    rdx,QWORD PTR [rbp+0x8]
   140007df4:	mov    ecx,0x80
   140007df9:	call   0x140004140
   140007dfe:	mov    r11,rax
   140007e01:	test   rax,rax
   140007e04:	je     0x140007e2e
   140007e06:	mov    ecx,DWORD PTR [rbp+0x10]
   140007e09:	mov    rdi,QWORD PTR [rbp+0x18]
   140007e0d:	lea    eax,[rcx+0x5]
   140007e10:	movsxd r8,eax
   140007e13:	lea    eax,[rcx+0x1]
   140007e16:	mov    rcx,r11
   140007e19:	mov    r8,QWORD PTR [rdi+r8*8]
   140007e1d:	movsxd rdx,eax
   140007e20:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140007e24:	call   0x140002910
   140007e29:	mov    rdi,rax
   140007e2c:	jmp    0x140007e31
   140007e2e:	mov    rdi,r12
   140007e31:	mov    rcx,QWORD PTR [rbp+0x28]
   140007e35:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007e39:	add    rdx,rdx
   140007e3c:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007e3f:	mov    DWORD PTR [rdi+0x1c],eax
   140007e42:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007e46:	mov    DWORD PTR [rdi+0x20],eax
   140007e49:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007e4d:	mov    DWORD PTR [rdi+0x24],eax
   140007e50:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007e54:	mov    DWORD PTR [rdi+0x28],eax
   140007e57:	mov    rcx,QWORD PTR [rbp+0x28]
   140007e5b:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007e5f:	add    rdx,0x2
   140007e63:	add    rdx,rdx
   140007e66:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007e69:	mov    DWORD PTR [rdi+0x2c],eax
   140007e6c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007e70:	mov    DWORD PTR [rdi+0x30],eax
   140007e73:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007e77:	mov    DWORD PTR [rdi+0x34],eax
   140007e7a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007e7e:	mov    DWORD PTR [rdi+0x38],eax
   140007e81:	mov    rcx,QWORD PTR [rbp+0x28]
   140007e85:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007e89:	add    rdx,0x3
   140007e8d:	add    rdx,rdx
   140007e90:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007e93:	mov    DWORD PTR [rdi+0x48],eax
   140007e96:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007e9a:	mov    DWORD PTR [rdi+0x4c],eax
   140007e9d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007ea1:	mov    DWORD PTR [rdi+0x50],eax
   140007ea4:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007ea8:	mov    DWORD PTR [rdi+0x54],eax
   140007eab:	mov    rcx,QWORD PTR [rbp+0x28]
   140007eaf:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007eb3:	add    rdx,0x4
   140007eb7:	add    rdx,rdx
   140007eba:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007ebd:	mov    DWORD PTR [rdi+0x58],eax
   140007ec0:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007ec4:	mov    DWORD PTR [rdi+0x5c],eax
   140007ec7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007ecb:	mov    DWORD PTR [rdi+0x60],eax
   140007ece:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007ed2:	mov    DWORD PTR [rdi+0x64],eax
   140007ed5:	mov    rcx,QWORD PTR [rbp+0x28]
   140007ed9:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007edd:	add    rdx,0x6
   140007ee1:	add    rdx,rdx
   140007ee4:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007ee7:	mov    DWORD PTR [rdi+0x70],eax
   140007eea:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007eee:	mov    DWORD PTR [rdi+0x74],eax
   140007ef1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007ef5:	mov    DWORD PTR [rdi+0x78],eax
   140007ef8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007efc:	mov    DWORD PTR [rdi+0x7c],eax
   140007eff:	jmp    0x1400052d9
   140007f04:	mov    rdx,QWORD PTR [rbp+0x8]
   140007f08:	mov    ecx,0x80
   140007f0d:	call   0x140004140
   140007f12:	mov    r11,rax
   140007f15:	test   rax,rax
   140007f18:	je     0x140007f4c
   140007f1a:	mov    ecx,DWORD PTR [rbp+0x10]
   140007f1d:	mov    rdi,QWORD PTR [rbp+0x18]
   140007f21:	lea    eax,[rcx+0x6]
   140007f24:	movsxd r9,eax
   140007f27:	lea    eax,[rcx+0x3]
   140007f2a:	mov    r9,QWORD PTR [rdi+r9*8]
   140007f2e:	movsxd r8,eax
   140007f31:	lea    eax,[rcx+0x1]
   140007f34:	mov    r8,QWORD PTR [rdi+r8*8]
   140007f38:	movsxd rdx,eax
   140007f3b:	mov    rcx,r11
   140007f3e:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140007f42:	call   0x140002980
   140007f47:	mov    rdi,rax
   140007f4a:	jmp    0x140007f4f
   140007f4c:	mov    rdi,r12
   140007f4f:	mov    rcx,QWORD PTR [rbp+0x28]
   140007f53:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007f57:	add    rdx,rdx
   140007f5a:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007f5d:	mov    DWORD PTR [rdi+0x1c],eax
   140007f60:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007f64:	mov    DWORD PTR [rdi+0x20],eax
   140007f67:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007f6b:	mov    DWORD PTR [rdi+0x24],eax
   140007f6e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007f72:	mov    DWORD PTR [rdi+0x28],eax
   140007f75:	mov    rcx,QWORD PTR [rbp+0x28]
   140007f79:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007f7d:	add    rdx,0x2
   140007f81:	add    rdx,rdx
   140007f84:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007f87:	mov    DWORD PTR [rdi+0x2c],eax
   140007f8a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007f8e:	mov    DWORD PTR [rdi+0x30],eax
   140007f91:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007f95:	mov    DWORD PTR [rdi+0x34],eax
   140007f98:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007f9c:	mov    DWORD PTR [rdi+0x38],eax
   140007f9f:	mov    rcx,QWORD PTR [rbp+0x28]
   140007fa3:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007fa7:	add    rdx,0x4
   140007fab:	add    rdx,rdx
   140007fae:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007fb1:	mov    DWORD PTR [rdi+0x48],eax
   140007fb4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007fb8:	mov    DWORD PTR [rdi+0x4c],eax
   140007fbb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007fbf:	mov    DWORD PTR [rdi+0x50],eax
   140007fc2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007fc6:	mov    DWORD PTR [rdi+0x54],eax
   140007fc9:	mov    rcx,QWORD PTR [rbp+0x28]
   140007fcd:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007fd1:	add    rdx,0x5
   140007fd5:	add    rdx,rdx
   140007fd8:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007fdb:	mov    DWORD PTR [rdi+0x58],eax
   140007fde:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007fe2:	mov    DWORD PTR [rdi+0x5c],eax
   140007fe5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007fe9:	mov    DWORD PTR [rdi+0x60],eax
   140007fec:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007ff0:	mov    DWORD PTR [rdi+0x64],eax
   140007ff3:	mov    rcx,QWORD PTR [rbp+0x28]
   140007ff7:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007ffb:	add    rdx,0x7
   140007fff:	add    rdx,rdx
   140008002:	mov    eax,DWORD PTR [rcx+rdx*8]
   140008005:	mov    DWORD PTR [rdi+0x70],eax
   140008008:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000800c:	mov    DWORD PTR [rdi+0x74],eax
   14000800f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140008013:	mov    DWORD PTR [rdi+0x78],eax
   140008016:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000801a:	mov    DWORD PTR [rdi+0x7c],eax
   14000801d:	jmp    0x1400052d9
   140008022:	mov    rdx,QWORD PTR [rbp+0x8]
   140008026:	mov    ecx,0x30
   14000802b:	call   0x140004140
   140008030:	mov    rdi,rax
   140008033:	test   rax,rax
   140008036:	je     0x1400052d6
   14000803c:	mov    rax,QWORD PTR [rbp+0x18]
   140008040:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008044:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008048:	lea    rax,[rip+0xd909]        # 0x140015958
   14000804f:	mov    QWORD PTR [rdi],rax
   140008052:	mov    QWORD PTR [rdi+0x10],rdx
   140008056:	mov    QWORD PTR [rdi+0x18],rdi
   14000805a:	mov    DWORD PTR [rdi+0x20],r12d
   14000805e:	mov    DWORD PTR [rdi+0x24],r12d
   140008062:	mov    DWORD PTR [rdi+0x28],r12d
   140008066:	mov    DWORD PTR [rdi+0x2c],r12d
   14000806a:	mov    DWORD PTR [rdi+0x8],0x33
   140008071:	jmp    0x1400052d9
   140008076:	mov    rdx,QWORD PTR [rbp+0x8]
   14000807a:	mov    ecx,0x30
   14000807f:	call   0x140004140
   140008084:	mov    rdi,rax
   140008087:	test   rax,rax
   14000808a:	je     0x14000586d
   140008090:	mov    rax,QWORD PTR [rbp+0x18]
   140008094:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008098:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14000809d:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400080a1:	lea    rax,[rip+0xd8b0]        # 0x140015958
   1400080a8:	mov    QWORD PTR [rdi],rax
   1400080ab:	mov    QWORD PTR [rdi+0x10],rdx
   1400080af:	mov    DWORD PTR [rdi+0x20],r12d
   1400080b3:	mov    DWORD PTR [rdi+0x24],r12d
   1400080b7:	mov    DWORD PTR [rdi+0x28],r12d
   1400080bb:	mov    DWORD PTR [rdi+0x2c],r12d
   1400080bf:	mov    DWORD PTR [rdi+0x8],0x33
   1400080c6:	mov    rax,QWORD PTR [rcx+0x18]
   1400080ca:	mov    QWORD PTR [rdi+0x18],rax
   1400080ce:	mov    QWORD PTR [rcx+0x18],rdi
   1400080d2:	jmp    0x140005870
   1400080d7:	mov    rdx,QWORD PTR [rbp+0x8]
   1400080db:	mov    ecx,0x30
   1400080e0:	call   0x140004140
   1400080e5:	mov    rdi,rax
   1400080e8:	test   rax,rax
   1400080eb:	je     0x140007091
   1400080f1:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400080f5:	lea    rcx,[rdi+0x20]
   1400080f9:	shl    rdx,0x4
   1400080fd:	add    rdx,QWORD PTR [rbp+0x30]
   140008101:	mov    DWORD PTR [rax+0x10],r12d
   140008105:	mov    DWORD PTR [rax+0x14],r12d
   140008109:	mov    DWORD PTR [rax+0x18],r12d
   14000810d:	mov    DWORD PTR [rax+0x1c],r12d
   140008111:	mov    DWORD PTR [rax+0x8],0x35
   140008118:	lea    rax,[rip+0xd929]        # 0x140015a48
   14000811f:	mov    QWORD PTR [rdi],rax
   140008122:	call   QWORD PTR [rip+0xd080]        # 0x1400151a8
   140008128:	mov    DWORD PTR [rdi+0x8],0x22
   14000812f:	jmp    0x140007094
   140008134:	mov    rdx,QWORD PTR [rbp+0x8]
   140008138:	mov    ecx,0x30
   14000813d:	call   0x140004140
   140008142:	mov    rdi,rax
   140008145:	test   rax,rax
   140008148:	je     0x140007091
   14000814e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140008152:	lea    rcx,[rdi+0x20]
   140008156:	shl    rdx,0x4
   14000815a:	add    rdx,QWORD PTR [rbp+0x30]
   14000815e:	mov    DWORD PTR [rax+0x10],r12d
   140008162:	mov    DWORD PTR [rax+0x14],r12d
   140008166:	mov    DWORD PTR [rax+0x18],r12d
   14000816a:	mov    DWORD PTR [rax+0x1c],r12d
   14000816e:	mov    DWORD PTR [rax+0x8],0x35
   140008175:	lea    rax,[rip+0xd91c]        # 0x140015a98
   14000817c:	mov    QWORD PTR [rdi],rax
   14000817f:	call   QWORD PTR [rip+0xd023]        # 0x1400151a8
   140008185:	mov    DWORD PTR [rdi+0x8],0x3e
   14000818c:	jmp    0x140007094
   140008191:	mov    rdx,QWORD PTR [rbp+0x8]
   140008195:	mov    ecx,0x28
   14000819a:	call   0x140004140
   14000819f:	mov    rdi,rax
   1400081a2:	test   rax,rax
   1400081a5:	je     0x140007091
   1400081ab:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400081af:	mov    rax,QWORD PTR [rbp+0x18]
   1400081b3:	movsd  xmm0,QWORD PTR [rax+rcx*8]
   1400081b8:	mov    DWORD PTR [rdi+0x10],r12d
   1400081bc:	mov    DWORD PTR [rdi+0x14],r12d
   1400081c0:	mov    DWORD PTR [rdi+0x18],r12d
   1400081c4:	mov    DWORD PTR [rdi+0x1c],r12d
   1400081c8:	lea    rax,[rip+0xd919]        # 0x140015ae8
   1400081cf:	movsd  QWORD PTR [rdi+0x20],xmm0
   1400081d4:	mov    QWORD PTR [rdi],rax
   1400081d7:	mov    DWORD PTR [rdi+0x8],0x2c
   1400081de:	jmp    0x140007094
   1400081e3:	mov    rdx,QWORD PTR [rbp+0x8]
   1400081e7:	mov    ecx,0x40
   1400081ec:	call   0x140004140
   1400081f1:	mov    r11,rax
   1400081f4:	test   rax,rax
   1400081f7:	je     0x140008246
   1400081f9:	mov    rax,QWORD PTR [rbp+0x18]
   1400081fd:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008201:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008206:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000820a:	lea    rax,[rip+0xd927]        # 0x140015b38
   140008211:	mov    QWORD PTR [r11],rax
   140008214:	mov    QWORD PTR [r11+0x10],rdx
   140008218:	mov    QWORD PTR [r11+0x18],rdi
   14000821c:	mov    DWORD PTR [r11+0x20],r12d
   140008220:	mov    DWORD PTR [r11+0x24],r12d
   140008224:	mov    DWORD PTR [r11+0x28],r12d
   140008228:	mov    DWORD PTR [r11+0x2c],r12d
   14000822c:	mov    DWORD PTR [r11+0x30],r12d
   140008230:	mov    DWORD PTR [r11+0x34],r12d
   140008234:	mov    DWORD PTR [r11+0x38],r12d
   140008238:	mov    DWORD PTR [r11+0x3c],r12d
   14000823c:	mov    DWORD PTR [r11+0x8],0x3
   140008244:	jmp    0x140008249
   140008246:	mov    r11,r12
   140008249:	mov    rcx,QWORD PTR [rbp+0x28]
   14000824d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140008251:	lea    r9,[rip+0xffffffffffff7da8]        # 0x140000000
   140008258:	inc    rdx
   14000825b:	add    rdx,rdx
   14000825e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140008261:	mov    DWORD PTR [r11+0x20],eax
   140008265:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140008269:	mov    DWORD PTR [r11+0x24],eax
   14000826d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140008271:	mov    DWORD PTR [r11+0x28],eax
   140008275:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140008279:	mov    DWORD PTR [r11+0x2c],eax
   14000827d:	mov    rcx,QWORD PTR [rbp+0x28]
   140008281:	movsxd rdx,DWORD PTR [rbp+0x10]
   140008285:	add    rdx,0x3
   140008289:	add    rdx,rdx
   14000828c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000828f:	mov    DWORD PTR [r11+0x30],eax
   140008293:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140008297:	mov    DWORD PTR [r11+0x34],eax
   14000829b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000829f:	mov    DWORD PTR [r11+0x38],eax
   1400082a3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400082a7:	mov    DWORD PTR [r11+0x3c],eax
   1400082ab:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400082af:	mov    rax,QWORD PTR [rbp+0x18]
   1400082b3:	mov    QWORD PTR [rax+rcx*8],r11
   1400082b7:	jmp    0x14000ae40
   1400082bc:	mov    rdx,QWORD PTR [rbp+0x8]
   1400082c0:	mov    ecx,0x48
   1400082c5:	call   0x140004140
   1400082ca:	mov    rdi,rax
   1400082cd:	test   rax,rax
   1400082d0:	je     0x1400082f9
   1400082d2:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400082d6:	mov    rdx,QWORD PTR [rbp+0x18]
   1400082da:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400082de:	lea    eax,[rcx+0x2]
   1400082e1:	mov    rcx,rdi
   1400082e4:	movsxd r8,eax
   1400082e7:	shl    r8,0x4
   1400082eb:	add    r8,QWORD PTR [rbp+0x30]
   1400082ef:	call   0x140002aa0
   1400082f4:	mov    rdi,rax
   1400082f7:	jmp    0x1400082fc
   1400082f9:	mov    rdi,r12
   1400082fc:	mov    rcx,QWORD PTR [rbp+0x28]
   140008300:	movsxd rdx,DWORD PTR [rbp+0x10]
   140008304:	inc    rdx
   140008307:	add    rdx,rdx
   14000830a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000830d:	mov    DWORD PTR [rdi+0x28],eax
   140008310:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140008314:	mov    DWORD PTR [rdi+0x2c],eax
   140008317:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000831b:	mov    DWORD PTR [rdi+0x30],eax
   14000831e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140008322:	mov    DWORD PTR [rdi+0x34],eax
   140008325:	mov    rcx,QWORD PTR [rbp+0x28]
   140008329:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000832d:	add    rdx,0x2
   140008331:	add    rdx,rdx
   140008334:	mov    eax,DWORD PTR [rcx+rdx*8]
   140008337:	mov    DWORD PTR [rdi+0x38],eax
   14000833a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000833e:	mov    DWORD PTR [rdi+0x3c],eax
   140008341:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140008345:	mov    DWORD PTR [rdi+0x40],eax
   140008348:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000834c:	mov    DWORD PTR [rdi+0x44],eax
   14000834f:	jmp    0x1400052d9
   140008354:	mov    rdx,QWORD PTR [rbp+0x8]
   140008358:	mov    ecx,0x50
   14000835d:	call   0x140004140
   140008362:	mov    r11,rax
   140008365:	test   rax,rax
   140008368:	je     0x1400077c6
   14000836e:	mov    ecx,DWORD PTR [rbp+0x10]
   140008371:	mov    rdi,QWORD PTR [rbp+0x18]
   140008375:	lea    eax,[rcx+0x3]
   140008378:	movsxd r8,eax
   14000837b:	lea    eax,[rcx+0x1]
   14000837e:	mov    rcx,r11
   140008381:	mov    r8,QWORD PTR [rdi+r8*8]
   140008385:	movsxd rdx,eax
   140008388:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14000838c:	call   0x140002b00
   140008391:	mov    rdi,rax
   140008394:	jmp    0x1400077c9
   140008399:	mov    rdx,QWORD PTR [rbp+0x8]
   14000839d:	mov    ecx,0x28
   1400083a2:	call   0x140004140
   1400083a7:	mov    rdi,rax
   1400083aa:	test   rax,rax
   1400083ad:	je     0x14000724b
   1400083b3:	mov    rax,QWORD PTR [rbp+0x18]
   1400083b7:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400083bb:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   1400083c0:	lea    rax,[rip+0xd861]        # 0x140015c28
   1400083c7:	mov    QWORD PTR [rdi],rax
   1400083ca:	mov    QWORD PTR [rdi+0x10],rdx
   1400083ce:	mov    DWORD PTR [rdi+0x18],r12d
   1400083d2:	mov    DWORD PTR [rdi+0x1c],r12d
   1400083d6:	mov    DWORD PTR [rdi+0x20],r12d
   1400083da:	mov    DWORD PTR [rdi+0x24],r12d
   1400083de:	mov    DWORD PTR [rdi+0x8],0x27
   1400083e5:	jmp    0x14000724e
   1400083ea:	mov    rdx,QWORD PTR [rbp+0x8]
   1400083ee:	mov    ecx,0x40
   1400083f3:	call   0x140004140
   1400083f8:	mov    r11,rax
   1400083fb:	test   rax,rax
   1400083fe:	je     0x140008246
   140008404:	mov    rax,QWORD PTR [rbp+0x18]
   140008408:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000840c:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008411:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008415:	lea    rax,[rip+0xd85c]        # 0x140015c78
   14000841c:	mov    QWORD PTR [r11],rax
   14000841f:	mov    QWORD PTR [r11+0x10],rdx
   140008423:	mov    QWORD PTR [r11+0x18],rdi
   140008427:	mov    DWORD PTR [r11+0x20],r12d
   14000842b:	mov    DWORD PTR [r11+0x24],r12d
   14000842f:	mov    DWORD PTR [r11+0x28],r12d
   140008433:	mov    DWORD PTR [r11+0x2c],r12d
   140008437:	mov    DWORD PTR [r11+0x30],r12d
   14000843b:	mov    DWORD PTR [r11+0x34],r12d
   14000843f:	mov    DWORD PTR [r11+0x38],r12d
   140008443:	mov    DWORD PTR [r11+0x3c],r12d
   140008447:	mov    DWORD PTR [r11+0x8],0x7
   14000844f:	jmp    0x140008249
   140008454:	mov    rdx,QWORD PTR [rbp+0x8]
   140008458:	mov    ecx,0x30
   14000845d:	call   0x140004140
   140008462:	mov    rdi,rax
   140008465:	test   rax,rax
   140008468:	je     0x1400052d6
   14000846e:	mov    rax,QWORD PTR [rbp+0x18]
   140008472:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008476:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000847a:	lea    rax,[rip+0xd847]        # 0x140015cc8
   140008481:	mov    QWORD PTR [rdi],rax
   140008484:	mov    QWORD PTR [rdi+0x10],rdx
   140008488:	mov    QWORD PTR [rdi+0x18],rdi
   14000848c:	mov    DWORD PTR [rdi+0x20],r12d
   140008490:	mov    DWORD PTR [rdi+0x24],r12d
   140008494:	mov    DWORD PTR [rdi+0x28],r12d
   140008498:	mov    DWORD PTR [rdi+0x2c],r12d
   14000849c:	mov    DWORD PTR [rdi+0x8],0x1
   1400084a3:	jmp    0x1400052d9
   1400084a8:	mov    rdx,QWORD PTR [rbp+0x8]
   1400084ac:	mov    ecx,0x30
   1400084b1:	call   0x140004140
   1400084b6:	mov    rdi,rax
   1400084b9:	test   rax,rax
   1400084bc:	je     0x14000586d
   1400084c2:	mov    rax,QWORD PTR [rbp+0x18]
   1400084c6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400084ca:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   1400084cf:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400084d3:	lea    rax,[rip+0xd7ee]        # 0x140015cc8
   1400084da:	mov    QWORD PTR [rdi],rax
   1400084dd:	mov    QWORD PTR [rdi+0x10],rdx
   1400084e1:	mov    DWORD PTR [rdi+0x20],r12d
   1400084e5:	mov    DWORD PTR [rdi+0x24],r12d
   1400084e9:	mov    DWORD PTR [rdi+0x28],r12d
   1400084ed:	mov    DWORD PTR [rdi+0x2c],r12d
   1400084f1:	mov    DWORD PTR [rdi+0x8],0x1
   1400084f8:	mov    rax,QWORD PTR [rcx+0x18]
   1400084fc:	mov    QWORD PTR [rdi+0x18],rax
   140008500:	mov    QWORD PTR [rcx+0x18],rdi
   140008504:	jmp    0x140005870
   140008509:	mov    rdx,QWORD PTR [rbp+0x8]
   14000850d:	mov    ecx,0x28
   140008512:	call   0x140004140
   140008517:	mov    rdi,rax
   14000851a:	test   rax,rax
   14000851d:	je     0x140007d5a
   140008523:	mov    rax,QWORD PTR [rbp+0x18]
   140008527:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000852b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000852f:	lea    rax,[rip+0xd7e2]        # 0x140015d18
   140008536:	mov    QWORD PTR [rdi],rax
   140008539:	mov    QWORD PTR [rdi+0x10],rdx
   14000853d:	mov    DWORD PTR [rdi+0x18],r12d
   140008541:	mov    DWORD PTR [rdi+0x1c],r12d
   140008545:	mov    DWORD PTR [rdi+0x20],r12d
   140008549:	mov    DWORD PTR [rdi+0x24],r12d
   14000854d:	mov    DWORD PTR [rdi+0x8],0x2f
   140008554:	jmp    0x140007d5d
   140008559:	mov    rdx,QWORD PTR [rbp+0x8]
   14000855d:	mov    ecx,0x28
   140008562:	call   0x140004140
   140008567:	mov    rdi,rax
   14000856a:	test   rax,rax
   14000856d:	je     0x140007d5a
   140008573:	mov    rax,QWORD PTR [rbp+0x18]
   140008577:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000857b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000857f:	lea    rax,[rip+0xd7e2]        # 0x140015d68
   140008586:	mov    QWORD PTR [rdi],rax
   140008589:	mov    QWORD PTR [rdi+0x10],rdx
   14000858d:	mov    DWORD PTR [rdi+0x18],r12d
   140008591:	mov    DWORD PTR [rdi+0x1c],r12d
   140008595:	mov    DWORD PTR [rdi+0x20],r12d
   140008599:	mov    DWORD PTR [rdi+0x24],r12d
   14000859d:	mov    DWORD PTR [rdi+0x8],0x2e
   1400085a4:	jmp    0x140007d5d
   1400085a9:	mov    rdx,QWORD PTR [rbp+0x8]
   1400085ad:	mov    ecx,0x28
   1400085b2:	call   0x140004140
   1400085b7:	mov    rdi,rax
   1400085ba:	test   rax,rax
   1400085bd:	je     0x14000724b
   1400085c3:	mov    rax,QWORD PTR [rbp+0x18]
   1400085c7:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400085cb:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   1400085d0:	lea    rax,[rip+0xd7e1]        # 0x140015db8
   1400085d7:	mov    QWORD PTR [rdi],rax
   1400085da:	mov    QWORD PTR [rdi+0x10],rdx
   1400085de:	mov    DWORD PTR [rdi+0x18],r12d
   1400085e2:	mov    DWORD PTR [rdi+0x1c],r12d
   1400085e6:	mov    DWORD PTR [rdi+0x20],r12d
   1400085ea:	mov    DWORD PTR [rdi+0x24],r12d
   1400085ee:	mov    DWORD PTR [rdi+0x8],0x10
   1400085f5:	jmp    0x14000724e
   1400085fa:	mov    rdx,QWORD PTR [rbp+0x8]
   1400085fe:	mov    ecx,0x28
   140008603:	call   0x140004140
   140008608:	mov    rdi,rax
   14000860b:	test   rax,rax
   14000860e:	je     0x14000724b
   140008614:	mov    rax,QWORD PTR [rbp+0x18]
   140008618:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000861c:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140008621:	lea    rax,[rip+0xd7e0]        # 0x140015e08
   140008628:	mov    QWORD PTR [rdi],rax
   14000862b:	mov    QWORD PTR [rdi+0x10],rdx
   14000862f:	mov    DWORD PTR [rdi+0x18],r12d
   140008633:	mov    DWORD PTR [rdi+0x1c],r12d
   140008637:	mov    DWORD PTR [rdi+0x20],r12d
   14000863b:	mov    DWORD PTR [rdi+0x24],r12d
   14000863f:	mov    DWORD PTR [rdi+0x8],0x4b
   140008646:	jmp    0x14000724e
   14000864b:	mov    rdx,QWORD PTR [rbp+0x8]
   14000864f:	mov    ecx,0x28
   140008654:	call   0x140004140
   140008659:	mov    rdi,rax
   14000865c:	test   rax,rax
   14000865f:	je     0x14000724b
   140008665:	mov    rax,QWORD PTR [rbp+0x18]
   140008669:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000866d:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140008672:	lea    rax,[rip+0xd7df]        # 0x140015e58
   140008679:	mov    QWORD PTR [rdi],rax
   14000867c:	mov    QWORD PTR [rdi+0x10],rdx
   140008680:	mov    DWORD PTR [rdi+0x18],r12d
   140008684:	mov    DWORD PTR [rdi+0x1c],r12d
   140008688:	mov    DWORD PTR [rdi+0x20],r12d
   14000868c:	mov    DWORD PTR [rdi+0x24],r12d
   140008690:	mov    DWORD PTR [rdi+0x8],0x45
   140008697:	jmp    0x14000724e
   14000869c:	mov    rdx,QWORD PTR [rbp+0x8]
   1400086a0:	mov    ecx,0x28
   1400086a5:	call   0x140004140
   1400086aa:	mov    rdi,rax
   1400086ad:	test   rax,rax
   1400086b0:	je     0x14000724b
   1400086b6:	mov    rax,QWORD PTR [rbp+0x18]
   1400086ba:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400086be:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   1400086c3:	lea    rax,[rip+0xd7de]        # 0x140015ea8
   1400086ca:	mov    QWORD PTR [rdi],rax
   1400086cd:	mov    QWORD PTR [rdi+0x10],rdx
   1400086d1:	mov    DWORD PTR [rdi+0x18],r12d
   1400086d5:	mov    DWORD PTR [rdi+0x1c],r12d
   1400086d9:	mov    DWORD PTR [rdi+0x20],r12d
   1400086dd:	mov    DWORD PTR [rdi+0x24],r12d
   1400086e1:	mov    DWORD PTR [rdi+0x8],0x31
   1400086e8:	jmp    0x14000724e
   1400086ed:	mov    rdx,QWORD PTR [rbp+0x8]
   1400086f1:	mov    ecx,0x28
   1400086f6:	call   0x140004140
   1400086fb:	mov    rdi,rax
   1400086fe:	test   rax,rax
   140008701:	je     0x14000724b
   140008707:	mov    rax,QWORD PTR [rbp+0x18]
   14000870b:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000870f:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140008714:	lea    rax,[rip+0xd7dd]        # 0x140015ef8
   14000871b:	mov    QWORD PTR [rdi],rax
   14000871e:	mov    QWORD PTR [rdi+0x10],rdx
   140008722:	mov    DWORD PTR [rdi+0x18],r12d
   140008726:	mov    DWORD PTR [rdi+0x1c],r12d
   14000872a:	mov    DWORD PTR [rdi+0x20],r12d
   14000872e:	mov    DWORD PTR [rdi+0x24],r12d
   140008732:	mov    DWORD PTR [rdi+0x8],0x30
   140008739:	jmp    0x14000724e
   14000873e:	mov    rdx,QWORD PTR [rbp+0x8]
   140008742:	mov    ecx,0x28
   140008747:	call   0x140004140
   14000874c:	mov    rdi,rax
   14000874f:	test   rax,rax
   140008752:	je     0x14000724b
   140008758:	mov    rax,QWORD PTR [rbp+0x18]
   14000875c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008760:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140008765:	lea    rax,[rip+0xd7dc]        # 0x140015f48
   14000876c:	mov    QWORD PTR [rdi],rax
   14000876f:	mov    QWORD PTR [rdi+0x10],rdx
   140008773:	mov    DWORD PTR [rdi+0x18],r12d
   140008777:	mov    DWORD PTR [rdi+0x1c],r12d
   14000877b:	mov    DWORD PTR [rdi+0x20],r12d
   14000877f:	mov    DWORD PTR [rdi+0x24],r12d
   140008783:	mov    DWORD PTR [rdi+0x8],0x47
   14000878a:	jmp    0x14000724e
   14000878f:	mov    rdx,QWORD PTR [rbp+0x8]
   140008793:	mov    ecx,0x28
   140008798:	call   0x140004140
   14000879d:	mov    rdi,rax
   1400087a0:	test   rax,rax
   1400087a3:	je     0x14000724b
   1400087a9:	mov    rax,QWORD PTR [rbp+0x18]
   1400087ad:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400087b1:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   1400087b6:	lea    rax,[rip+0xd7db]        # 0x140015f98
   1400087bd:	mov    QWORD PTR [rdi],rax
   1400087c0:	mov    QWORD PTR [rdi+0x10],rdx
   1400087c4:	mov    DWORD PTR [rdi+0x18],r12d
   1400087c8:	mov    DWORD PTR [rdi+0x1c],r12d
   1400087cc:	mov    DWORD PTR [rdi+0x20],r12d
   1400087d0:	mov    DWORD PTR [rdi+0x24],r12d
   1400087d4:	mov    DWORD PTR [rdi+0x8],0x46
   1400087db:	jmp    0x14000724e
   1400087e0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400087e4:	mov    ecx,0x28
   1400087e9:	call   0x140004140
   1400087ee:	mov    rdi,rax
   1400087f1:	test   rax,rax
   1400087f4:	je     0x14000724b
   1400087fa:	mov    rax,QWORD PTR [rbp+0x18]
   1400087fe:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008802:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140008807:	lea    rax,[rip+0xd7da]        # 0x140015fe8
   14000880e:	mov    QWORD PTR [rdi],rax
   140008811:	mov    QWORD PTR [rdi+0x10],rdx
   140008815:	mov    DWORD PTR [rdi+0x18],r12d
   140008819:	mov    DWORD PTR [rdi+0x1c],r12d
   14000881d:	mov    DWORD PTR [rdi+0x20],r12d
   140008821:	mov    DWORD PTR [rdi+0x24],r12d
   140008825:	mov    DWORD PTR [rdi+0x8],0x42
   14000882c:	jmp    0x14000724e
   140008831:	mov    rdx,QWORD PTR [rbp+0x8]
   140008835:	mov    ecx,0x28
   14000883a:	call   0x140004140
   14000883f:	mov    rdi,rax
   140008842:	test   rax,rax
   140008845:	je     0x14000724b
   14000884b:	mov    rax,QWORD PTR [rbp+0x18]
   14000884f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008853:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140008858:	lea    rax,[rip+0xd7d9]        # 0x140016038
   14000885f:	mov    QWORD PTR [rdi],rax
   140008862:	mov    QWORD PTR [rdi+0x10],rdx
   140008866:	mov    DWORD PTR [rdi+0x18],r12d
   14000886a:	mov    DWORD PTR [rdi+0x1c],r12d
   14000886e:	mov    DWORD PTR [rdi+0x20],r12d
   140008872:	mov    DWORD PTR [rdi+0x24],r12d
   140008876:	mov    DWORD PTR [rdi+0x8],0x29
   14000887d:	jmp    0x14000724e
   140008882:	mov    rdx,QWORD PTR [rbp+0x8]
   140008886:	mov    ecx,0x38
   14000888b:	call   0x140004140
   140008890:	mov    r11,rax
   140008893:	test   rax,rax
   140008896:	je     0x140005bf7
   14000889c:	mov    rax,QWORD PTR [rbp+0x18]
   1400088a0:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400088a4:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400088a9:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400088ad:	lea    rax,[rip+0xd7d4]        # 0x140016088
   1400088b4:	mov    QWORD PTR [r11],rax
   1400088b7:	mov    QWORD PTR [r11+0x10],rdx
   1400088bb:	mov    DWORD PTR [r11+0x18],0x16
   1400088c3:	mov    QWORD PTR [r11+0x20],rdi
   1400088c7:	mov    DWORD PTR [r11+0x28],r12d
   1400088cb:	mov    DWORD PTR [r11+0x2c],r12d
   1400088cf:	mov    DWORD PTR [r11+0x30],r12d
   1400088d3:	mov    DWORD PTR [r11+0x34],r12d
   1400088d7:	mov    DWORD PTR [r11+0x8],0x4
   1400088df:	jmp    0x140005bfa
   1400088e4:	mov    rdx,QWORD PTR [rbp+0x8]
   1400088e8:	mov    ecx,0x38
   1400088ed:	call   0x140004140
   1400088f2:	mov    r11,rax
   1400088f5:	test   rax,rax
   1400088f8:	je     0x140005bf7
   1400088fe:	mov    rax,QWORD PTR [rbp+0x18]
   140008902:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008906:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14000890b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000890f:	lea    rax,[rip+0xd772]        # 0x140016088
   140008916:	mov    QWORD PTR [r11],rax
   140008919:	mov    QWORD PTR [r11+0x10],rdx
   14000891d:	mov    DWORD PTR [r11+0x18],0x8
   140008925:	mov    QWORD PTR [r11+0x20],rdi
   140008929:	mov    DWORD PTR [r11+0x28],r12d
   14000892d:	mov    DWORD PTR [r11+0x2c],r12d
   140008931:	mov    DWORD PTR [r11+0x30],r12d
   140008935:	mov    DWORD PTR [r11+0x34],r12d
   140008939:	mov    DWORD PTR [r11+0x8],0x4
   140008941:	jmp    0x140005bfa
   140008946:	mov    rdx,QWORD PTR [rbp+0x8]
   14000894a:	mov    ecx,0x38
   14000894f:	call   0x140004140
   140008954:	mov    r11,rax
   140008957:	test   rax,rax
   14000895a:	je     0x140005bf7
   140008960:	mov    rax,QWORD PTR [rbp+0x18]
   140008964:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008968:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14000896d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008971:	lea    rax,[rip+0xd710]        # 0x140016088
   140008978:	mov    QWORD PTR [r11],rax
   14000897b:	mov    QWORD PTR [r11+0x10],rdx
   14000897f:	mov    DWORD PTR [r11+0x18],0x14
   140008987:	mov    QWORD PTR [r11+0x20],rdi
   14000898b:	mov    DWORD PTR [r11+0x28],r12d
   14000898f:	mov    DWORD PTR [r11+0x2c],r12d
   140008993:	mov    DWORD PTR [r11+0x30],r12d
   140008997:	mov    DWORD PTR [r11+0x34],r12d
   14000899b:	mov    DWORD PTR [r11+0x8],0x4
   1400089a3:	jmp    0x140005bfa
   1400089a8:	mov    rdx,QWORD PTR [rbp+0x8]
   1400089ac:	mov    ecx,0x38
   1400089b1:	call   0x140004140
   1400089b6:	mov    r11,rax
   1400089b9:	test   rax,rax
   1400089bc:	je     0x140005bf7
   1400089c2:	mov    rax,QWORD PTR [rbp+0x18]
   1400089c6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400089ca:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400089cf:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400089d3:	lea    rax,[rip+0xd6ae]        # 0x140016088
   1400089da:	mov    QWORD PTR [r11],rax
   1400089dd:	mov    QWORD PTR [r11+0x10],rdx
   1400089e1:	mov    DWORD PTR [r11+0x18],r12d
   1400089e5:	mov    QWORD PTR [r11+0x20],rdi
   1400089e9:	mov    DWORD PTR [r11+0x28],r12d
   1400089ed:	mov    DWORD PTR [r11+0x2c],r12d
   1400089f1:	mov    DWORD PTR [r11+0x30],r12d
   1400089f5:	mov    DWORD PTR [r11+0x34],r12d
   1400089f9:	mov    DWORD PTR [r11+0x8],0x4
   140008a01:	jmp    0x140005bfa
   140008a06:	mov    rdx,QWORD PTR [rbp+0x8]
   140008a0a:	mov    ecx,0x38
   140008a0f:	call   0x140004140
   140008a14:	mov    r11,rax
   140008a17:	test   rax,rax
   140008a1a:	je     0x140005bf7
   140008a20:	mov    rax,QWORD PTR [rbp+0x18]
   140008a24:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008a28:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008a2d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008a31:	lea    rax,[rip+0xd650]        # 0x140016088
   140008a38:	mov    QWORD PTR [r11],rax
   140008a3b:	mov    QWORD PTR [r11+0x10],rdx
   140008a3f:	mov    DWORD PTR [r11+0x18],0x1f
   140008a47:	mov    QWORD PTR [r11+0x20],rdi
   140008a4b:	mov    DWORD PTR [r11+0x28],r12d
   140008a4f:	mov    DWORD PTR [r11+0x2c],r12d
   140008a53:	mov    DWORD PTR [r11+0x30],r12d
   140008a57:	mov    DWORD PTR [r11+0x34],r12d
   140008a5b:	mov    DWORD PTR [r11+0x8],0x4
   140008a63:	jmp    0x140005bfa
   140008a68:	mov    rdx,QWORD PTR [rbp+0x8]
   140008a6c:	mov    ecx,0x38
   140008a71:	call   0x140004140
   140008a76:	mov    r11,rax
   140008a79:	test   rax,rax
   140008a7c:	je     0x140005bf7
   140008a82:	mov    rax,QWORD PTR [rbp+0x18]
   140008a86:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008a8a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008a8f:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008a93:	lea    rax,[rip+0xd5ee]        # 0x140016088
   140008a9a:	mov    QWORD PTR [r11],rax
   140008a9d:	mov    QWORD PTR [r11+0x10],rdx
   140008aa1:	mov    DWORD PTR [r11+0x18],0x11
   140008aa9:	mov    QWORD PTR [r11+0x20],rdi
   140008aad:	mov    DWORD PTR [r11+0x28],r12d
   140008ab1:	mov    DWORD PTR [r11+0x2c],r12d
   140008ab5:	mov    DWORD PTR [r11+0x30],r12d
   140008ab9:	mov    DWORD PTR [r11+0x34],r12d
   140008abd:	mov    DWORD PTR [r11+0x8],0x4
   140008ac5:	jmp    0x140005bfa
   140008aca:	mov    rdx,QWORD PTR [rbp+0x8]
   140008ace:	mov    ecx,0x38
   140008ad3:	call   0x140004140
   140008ad8:	mov    r11,rax
   140008adb:	test   rax,rax
   140008ade:	je     0x140005bf7
   140008ae4:	mov    rax,QWORD PTR [rbp+0x18]
   140008ae8:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008aec:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008af1:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008af5:	lea    rax,[rip+0xd58c]        # 0x140016088
   140008afc:	mov    QWORD PTR [r11],rax
   140008aff:	mov    QWORD PTR [r11+0x10],rdx
   140008b03:	mov    DWORD PTR [r11+0x18],0x1b
   140008b0b:	mov    QWORD PTR [r11+0x20],rdi
   140008b0f:	mov    DWORD PTR [r11+0x28],r12d
   140008b13:	mov    DWORD PTR [r11+0x2c],r12d
   140008b17:	mov    DWORD PTR [r11+0x30],r12d
   140008b1b:	mov    DWORD PTR [r11+0x34],r12d
   140008b1f:	mov    DWORD PTR [r11+0x8],0x4
   140008b27:	jmp    0x140005bfa
   140008b2c:	mov    rdx,QWORD PTR [rbp+0x8]
   140008b30:	mov    ecx,0x38
   140008b35:	call   0x140004140
   140008b3a:	mov    r11,rax
   140008b3d:	test   rax,rax
   140008b40:	je     0x140005bf7
   140008b46:	mov    rax,QWORD PTR [rbp+0x18]
   140008b4a:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008b4e:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008b53:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008b57:	lea    rax,[rip+0xd52a]        # 0x140016088
   140008b5e:	mov    QWORD PTR [r11],rax
   140008b61:	mov    QWORD PTR [r11+0x10],rdx
   140008b65:	mov    DWORD PTR [r11+0x18],0x20
   140008b6d:	mov    QWORD PTR [r11+0x20],rdi
   140008b71:	mov    DWORD PTR [r11+0x28],r12d
   140008b75:	mov    DWORD PTR [r11+0x2c],r12d
   140008b79:	mov    DWORD PTR [r11+0x30],r12d
   140008b7d:	mov    DWORD PTR [r11+0x34],r12d
   140008b81:	mov    DWORD PTR [r11+0x8],0x4
   140008b89:	jmp    0x140005bfa
   140008b8e:	mov    rdx,QWORD PTR [rbp+0x8]
   140008b92:	mov    ecx,0x38
   140008b97:	call   0x140004140
   140008b9c:	mov    r11,rax
   140008b9f:	test   rax,rax
   140008ba2:	je     0x140005bf7
   140008ba8:	mov    rax,QWORD PTR [rbp+0x18]
   140008bac:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008bb0:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008bb5:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008bb9:	lea    rax,[rip+0xd4c8]        # 0x140016088
   140008bc0:	mov    QWORD PTR [r11],rax
   140008bc3:	mov    QWORD PTR [r11+0x10],rdx
   140008bc7:	mov    DWORD PTR [r11+0x18],0x13
   140008bcf:	mov    QWORD PTR [r11+0x20],rdi
   140008bd3:	mov    DWORD PTR [r11+0x28],r12d
   140008bd7:	mov    DWORD PTR [r11+0x2c],r12d
   140008bdb:	mov    DWORD PTR [r11+0x30],r12d
   140008bdf:	mov    DWORD PTR [r11+0x34],r12d
   140008be3:	mov    DWORD PTR [r11+0x8],0x4
   140008beb:	jmp    0x140005bfa
   140008bf0:	mov    rdx,QWORD PTR [rbp+0x8]
   140008bf4:	mov    ecx,0x38
   140008bf9:	call   0x140004140
   140008bfe:	mov    r11,rax
   140008c01:	test   rax,rax
   140008c04:	je     0x140005bf7
   140008c0a:	mov    rax,QWORD PTR [rbp+0x18]
   140008c0e:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008c12:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008c17:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008c1b:	lea    rax,[rip+0xd466]        # 0x140016088
   140008c22:	mov    QWORD PTR [r11],rax
   140008c25:	mov    QWORD PTR [r11+0x10],rdx
   140008c29:	mov    DWORD PTR [r11+0x18],0xc
   140008c31:	mov    QWORD PTR [r11+0x20],rdi
   140008c35:	mov    DWORD PTR [r11+0x28],r12d
   140008c39:	mov    DWORD PTR [r11+0x2c],r12d
   140008c3d:	mov    DWORD PTR [r11+0x30],r12d
   140008c41:	mov    DWORD PTR [r11+0x34],r12d
   140008c45:	mov    DWORD PTR [r11+0x8],0x4
   140008c4d:	jmp    0x140005bfa
   140008c52:	mov    rdx,QWORD PTR [rbp+0x8]
   140008c56:	mov    ecx,0x38
   140008c5b:	call   0x140004140
   140008c60:	mov    r11,rax
   140008c63:	test   rax,rax
   140008c66:	je     0x140005bf7
   140008c6c:	mov    rax,QWORD PTR [rbp+0x18]
   140008c70:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008c74:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008c79:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008c7d:	lea    rax,[rip+0xd404]        # 0x140016088
   140008c84:	mov    QWORD PTR [r11],rax
   140008c87:	mov    QWORD PTR [r11+0x10],rdx
   140008c8b:	mov    DWORD PTR [r11+0x18],0x10
   140008c93:	mov    QWORD PTR [r11+0x20],rdi
   140008c97:	mov    DWORD PTR [r11+0x28],r12d
   140008c9b:	mov    DWORD PTR [r11+0x2c],r12d
   140008c9f:	mov    DWORD PTR [r11+0x30],r12d
   140008ca3:	mov    DWORD PTR [r11+0x34],r12d
   140008ca7:	mov    DWORD PTR [r11+0x8],0x4
   140008caf:	jmp    0x140005bfa
   140008cb4:	mov    rdx,QWORD PTR [rbp+0x8]
   140008cb8:	mov    ecx,0x38
   140008cbd:	call   0x140004140
   140008cc2:	mov    r11,rax
   140008cc5:	test   rax,rax
   140008cc8:	je     0x140005bf7
   140008cce:	mov    rax,QWORD PTR [rbp+0x18]
   140008cd2:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008cd6:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008cdb:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008cdf:	lea    rax,[rip+0xd3a2]        # 0x140016088
   140008ce6:	mov    QWORD PTR [r11],rax
   140008ce9:	mov    QWORD PTR [r11+0x10],rdx
   140008ced:	mov    DWORD PTR [r11+0x18],0xb
   140008cf5:	mov    QWORD PTR [r11+0x20],rdi
   140008cf9:	mov    DWORD PTR [r11+0x28],r12d
   140008cfd:	mov    DWORD PTR [r11+0x2c],r12d
   140008d01:	mov    DWORD PTR [r11+0x30],r12d
   140008d05:	mov    DWORD PTR [r11+0x34],r12d
   140008d09:	mov    DWORD PTR [r11+0x8],0x4
   140008d11:	jmp    0x140005bfa
   140008d16:	mov    rdx,QWORD PTR [rbp+0x8]
   140008d1a:	mov    ecx,0x38
   140008d1f:	call   0x140004140
   140008d24:	mov    r11,rax
   140008d27:	test   rax,rax
   140008d2a:	je     0x140005bf7
   140008d30:	mov    rax,QWORD PTR [rbp+0x18]
   140008d34:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008d38:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008d3d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008d41:	lea    rax,[rip+0xd340]        # 0x140016088
   140008d48:	mov    QWORD PTR [r11],rax
   140008d4b:	mov    QWORD PTR [r11+0x10],rdx
   140008d4f:	mov    DWORD PTR [r11+0x18],0xf
   140008d57:	mov    QWORD PTR [r11+0x20],rdi
   140008d5b:	mov    DWORD PTR [r11+0x28],r12d
   140008d5f:	mov    DWORD PTR [r11+0x2c],r12d
   140008d63:	mov    DWORD PTR [r11+0x30],r12d
   140008d67:	mov    DWORD PTR [r11+0x34],r12d
   140008d6b:	mov    DWORD PTR [r11+0x8],0x4
   140008d73:	jmp    0x140005bfa
   140008d78:	mov    rdx,QWORD PTR [rbp+0x8]
   140008d7c:	mov    ecx,0x38
   140008d81:	call   0x140004140
   140008d86:	mov    r11,rax
   140008d89:	test   rax,rax
   140008d8c:	je     0x140005bf7
   140008d92:	mov    rax,QWORD PTR [rbp+0x18]
   140008d96:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008d9a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008d9f:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008da3:	lea    rax,[rip+0xd2de]        # 0x140016088
   140008daa:	mov    QWORD PTR [r11],rax
   140008dad:	mov    QWORD PTR [r11+0x10],rdx
   140008db1:	mov    DWORD PTR [r11+0x18],0xd
   140008db9:	mov    QWORD PTR [r11+0x20],rdi
   140008dbd:	mov    DWORD PTR [r11+0x28],r12d
   140008dc1:	mov    DWORD PTR [r11+0x2c],r12d
   140008dc5:	mov    DWORD PTR [r11+0x30],r12d
   140008dc9:	mov    DWORD PTR [r11+0x34],r12d
   140008dcd:	mov    DWORD PTR [r11+0x8],0x4
   140008dd5:	jmp    0x140005bfa
   140008dda:	mov    rdx,QWORD PTR [rbp+0x8]
   140008dde:	mov    ecx,0x38
   140008de3:	call   0x140004140
   140008de8:	mov    r11,rax
   140008deb:	test   rax,rax
   140008dee:	je     0x140005bf7
   140008df4:	mov    rax,QWORD PTR [rbp+0x18]
   140008df8:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008dfc:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008e01:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008e05:	lea    rax,[rip+0xd27c]        # 0x140016088
   140008e0c:	mov    QWORD PTR [r11],rax
   140008e0f:	mov    QWORD PTR [r11+0x10],rdx
   140008e13:	mov    DWORD PTR [r11+0x18],0xa
   140008e1b:	mov    QWORD PTR [r11+0x20],rdi
   140008e1f:	mov    DWORD PTR [r11+0x28],r12d
   140008e23:	mov    DWORD PTR [r11+0x2c],r12d
   140008e27:	mov    DWORD PTR [r11+0x30],r12d
   140008e2b:	mov    DWORD PTR [r11+0x34],r12d
   140008e2f:	mov    DWORD PTR [r11+0x8],0x4
   140008e37:	jmp    0x140005bfa
   140008e3c:	mov    rdx,QWORD PTR [rbp+0x8]
   140008e40:	mov    ecx,0x38
   140008e45:	call   0x140004140
   140008e4a:	mov    r11,rax
   140008e4d:	test   rax,rax
   140008e50:	je     0x140005bf7
   140008e56:	mov    rax,QWORD PTR [rbp+0x18]
   140008e5a:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008e5e:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008e63:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008e67:	lea    rax,[rip+0xd21a]        # 0x140016088
   140008e6e:	mov    QWORD PTR [r11],rax
   140008e71:	mov    QWORD PTR [r11+0x10],rdx
   140008e75:	mov    DWORD PTR [r11+0x18],0x18
   140008e7d:	mov    QWORD PTR [r11+0x20],rdi
   140008e81:	mov    DWORD PTR [r11+0x28],r12d
   140008e85:	mov    DWORD PTR [r11+0x2c],r12d
   140008e89:	mov    DWORD PTR [r11+0x30],r12d
   140008e8d:	mov    DWORD PTR [r11+0x34],r12d
   140008e91:	mov    DWORD PTR [r11+0x8],0x4
   140008e99:	jmp    0x140005bfa
   140008e9e:	mov    rdx,QWORD PTR [rbp+0x8]
   140008ea2:	mov    ecx,0x38
   140008ea7:	call   0x140004140
   140008eac:	mov    r11,rax
   140008eaf:	test   rax,rax
   140008eb2:	je     0x140005bf7
   140008eb8:	mov    rax,QWORD PTR [rbp+0x18]
   140008ebc:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008ec0:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008ec5:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008ec9:	lea    rax,[rip+0xd1b8]        # 0x140016088
   140008ed0:	mov    QWORD PTR [r11],rax
   140008ed3:	mov    QWORD PTR [r11+0x10],rdx
   140008ed7:	mov    DWORD PTR [r11+0x18],0x1d
   140008edf:	mov    QWORD PTR [r11+0x20],rdi
   140008ee3:	mov    DWORD PTR [r11+0x28],r12d
   140008ee7:	mov    DWORD PTR [r11+0x2c],r12d
   140008eeb:	mov    DWORD PTR [r11+0x30],r12d
   140008eef:	mov    DWORD PTR [r11+0x34],r12d
   140008ef3:	mov    DWORD PTR [r11+0x8],0x4
   140008efb:	jmp    0x140005bfa
   140008f00:	mov    rdx,QWORD PTR [rbp+0x8]
   140008f04:	mov    ecx,0x38
   140008f09:	call   0x140004140
   140008f0e:	mov    r11,rax
   140008f11:	test   rax,rax
   140008f14:	je     0x140005bf7
   140008f1a:	mov    rax,QWORD PTR [rbp+0x18]
   140008f1e:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008f22:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008f27:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008f2b:	lea    rax,[rip+0xd156]        # 0x140016088
   140008f32:	mov    QWORD PTR [r11],rax
   140008f35:	mov    QWORD PTR [r11+0x10],rdx
   140008f39:	mov    DWORD PTR [r11+0x18],0x1e
   140008f41:	mov    QWORD PTR [r11+0x20],rdi
   140008f45:	mov    DWORD PTR [r11+0x28],r12d
   140008f49:	mov    DWORD PTR [r11+0x2c],r12d
   140008f4d:	mov    DWORD PTR [r11+0x30],r12d
   140008f51:	mov    DWORD PTR [r11+0x34],r12d
   140008f55:	mov    DWORD PTR [r11+0x8],0x4
   140008f5d:	jmp    0x140005bfa
   140008f62:	mov    rdx,QWORD PTR [rbp+0x8]
   140008f66:	mov    ecx,0x38
   140008f6b:	call   0x140004140
   140008f70:	mov    r11,rax
   140008f73:	test   rax,rax
   140008f76:	je     0x140005bf7
   140008f7c:	mov    rax,QWORD PTR [rbp+0x18]
   140008f80:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008f84:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008f89:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008f8d:	lea    rax,[rip+0xd0f4]        # 0x140016088
   140008f94:	mov    QWORD PTR [r11],rax
   140008f97:	mov    QWORD PTR [r11+0x10],rdx
   140008f9b:	mov    DWORD PTR [r11+0x18],0x4
   140008fa3:	mov    QWORD PTR [r11+0x20],rdi
   140008fa7:	mov    DWORD PTR [r11+0x28],r12d
   140008fab:	mov    DWORD PTR [r11+0x2c],r12d
   140008faf:	mov    DWORD PTR [r11+0x30],r12d
   140008fb3:	mov    DWORD PTR [r11+0x34],r12d
   140008fb7:	mov    DWORD PTR [r11+0x8],0x4
   140008fbf:	jmp    0x140005bfa
   140008fc4:	mov    rdx,QWORD PTR [rbp+0x8]
   140008fc8:	mov    ecx,0x38
   140008fcd:	call   0x140004140
   140008fd2:	mov    r11,rax
   140008fd5:	test   rax,rax
   140008fd8:	je     0x140005bf7
   140008fde:	mov    rax,QWORD PTR [rbp+0x18]
   140008fe2:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008fe6:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008feb:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008fef:	lea    rax,[rip+0xd092]        # 0x140016088
   140008ff6:	mov    QWORD PTR [r11],rax
   140008ff9:	mov    QWORD PTR [r11+0x10],rdx
   140008ffd:	mov    DWORD PTR [r11+0x18],0x6
   140009005:	mov    QWORD PTR [r11+0x20],rdi
   140009009:	mov    DWORD PTR [r11+0x28],r12d
   14000900d:	mov    DWORD PTR [r11+0x2c],r12d
   140009011:	mov    DWORD PTR [r11+0x30],r12d
   140009015:	mov    DWORD PTR [r11+0x34],r12d
   140009019:	mov    DWORD PTR [r11+0x8],0x4
   140009021:	jmp    0x140005bfa
   140009026:	mov    rdx,QWORD PTR [rbp+0x8]
   14000902a:	mov    ecx,0x38
   14000902f:	call   0x140004140
   140009034:	mov    r11,rax
   140009037:	test   rax,rax
   14000903a:	je     0x140005bf7
   140009040:	mov    rax,QWORD PTR [rbp+0x18]
   140009044:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009048:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14000904d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140009051:	lea    rax,[rip+0xd030]        # 0x140016088
   140009058:	mov    QWORD PTR [r11],rax
   14000905b:	mov    QWORD PTR [r11+0x10],rdx
   14000905f:	mov    DWORD PTR [r11+0x18],0x5
   140009067:	mov    QWORD PTR [r11+0x20],rdi
   14000906b:	mov    DWORD PTR [r11+0x28],r12d
   14000906f:	mov    DWORD PTR [r11+0x2c],r12d
   140009073:	mov    DWORD PTR [r11+0x30],r12d
   140009077:	mov    DWORD PTR [r11+0x34],r12d
   14000907b:	mov    DWORD PTR [r11+0x8],0x4
   140009083:	jmp    0x140005bfa
   140009088:	mov    rdx,QWORD PTR [rbp+0x8]
   14000908c:	mov    ecx,0x38
   140009091:	call   0x140004140
   140009096:	mov    r11,rax
   140009099:	test   rax,rax
   14000909c:	je     0x140005bf7
   1400090a2:	mov    rax,QWORD PTR [rbp+0x18]
   1400090a6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400090aa:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400090af:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400090b3:	lea    rax,[rip+0xcfce]        # 0x140016088
   1400090ba:	mov    QWORD PTR [r11],rax
   1400090bd:	mov    QWORD PTR [r11+0x10],rdx
   1400090c1:	mov    DWORD PTR [r11+0x18],0x1
   1400090c9:	mov    QWORD PTR [r11+0x20],rdi
   1400090cd:	mov    DWORD PTR [r11+0x28],r12d
   1400090d1:	mov    DWORD PTR [r11+0x2c],r12d
   1400090d5:	mov    DWORD PTR [r11+0x30],r12d
   1400090d9:	mov    DWORD PTR [r11+0x34],r12d
   1400090dd:	mov    DWORD PTR [r11+0x8],0x4
   1400090e5:	jmp    0x140005bfa
   1400090ea:	mov    rdx,QWORD PTR [rbp+0x8]
   1400090ee:	mov    ecx,0x38
   1400090f3:	call   0x140004140
   1400090f8:	mov    r11,rax
   1400090fb:	test   rax,rax
   1400090fe:	je     0x140005bf7
   140009104:	mov    rax,QWORD PTR [rbp+0x18]
   140009108:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000910c:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140009111:	mov    rdx,QWORD PTR [rax+rcx*8]
   140009115:	lea    rax,[rip+0xcf6c]        # 0x140016088
   14000911c:	mov    QWORD PTR [r11],rax
   14000911f:	mov    QWORD PTR [r11+0x10],rdx
   140009123:	mov    DWORD PTR [r11+0x18],0x19
   14000912b:	mov    QWORD PTR [r11+0x20],rdi
   14000912f:	mov    DWORD PTR [r11+0x28],r12d
   140009133:	mov    DWORD PTR [r11+0x2c],r12d
   140009137:	mov    DWORD PTR [r11+0x30],r12d
   14000913b:	mov    DWORD PTR [r11+0x34],r12d
   14000913f:	mov    DWORD PTR [r11+0x8],0x4
   140009147:	jmp    0x140005bfa
   14000914c:	mov    rdx,QWORD PTR [rbp+0x8]
   140009150:	mov    ecx,0x48
   140009155:	call   0x140004140
   14000915a:	mov    r11,rax
   14000915d:	test   rax,rax
   140009160:	je     0x14000918f
   140009162:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009166:	mov    rdi,QWORD PTR [rbp+0x18]
   14000916a:	mov    rdx,QWORD PTR [rdi+rcx*8]
   14000916e:	lea    eax,[rcx+0x4]
   140009171:	movsxd r9,eax
   140009174:	lea    eax,[rcx+0x2]
   140009177:	mov    rcx,r11
   14000917a:	mov    r9,QWORD PTR [rdi+r9*8]
   14000917e:	movsxd r8,eax
   140009181:	mov    r8,QWORD PTR [rdi+r8*8]
   140009185:	call   0x140002b90
   14000918a:	mov    rdi,rax
   14000918d:	jmp    0x140009192
   14000918f:	mov    rdi,r12
   140009192:	mov    rcx,QWORD PTR [rbp+0x28]
   140009196:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000919a:	inc    rdx
   14000919d:	add    rdx,rdx
   1400091a0:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400091a3:	mov    DWORD PTR [rdi+0x28],eax
   1400091a6:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400091aa:	mov    DWORD PTR [rdi+0x2c],eax
   1400091ad:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400091b1:	mov    DWORD PTR [rdi+0x30],eax
   1400091b4:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400091b8:	mov    DWORD PTR [rdi+0x34],eax
   1400091bb:	mov    rcx,QWORD PTR [rbp+0x28]
   1400091bf:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400091c3:	add    rdx,0x3
   1400091c7:	add    rdx,rdx
   1400091ca:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400091cd:	mov    DWORD PTR [rdi+0x38],eax
   1400091d0:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400091d4:	mov    DWORD PTR [rdi+0x3c],eax
   1400091d7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400091db:	mov    DWORD PTR [rdi+0x40],eax
   1400091de:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400091e2:	mov    DWORD PTR [rdi+0x44],eax
   1400091e5:	jmp    0x1400052d9
   1400091ea:	mov    rdx,QWORD PTR [rbp+0x8]
   1400091ee:	mov    ecx,0x38
   1400091f3:	call   0x140004140
   1400091f8:	mov    r11,rax
   1400091fb:	test   rax,rax
   1400091fe:	je     0x140005bf7
   140009204:	mov    rax,QWORD PTR [rbp+0x18]
   140009208:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000920c:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140009211:	mov    edx,DWORD PTR [rax+rcx*8+0x8]
   140009215:	mov    rcx,QWORD PTR [rax+rcx*8]
   140009219:	lea    rax,[rip+0xce68]        # 0x140016088
   140009220:	mov    QWORD PTR [r11],rax
   140009223:	mov    QWORD PTR [r11+0x10],rcx
   140009227:	mov    DWORD PTR [r11+0x18],edx
   14000922b:	mov    QWORD PTR [r11+0x20],rdi
   14000922f:	mov    DWORD PTR [r11+0x28],r12d
   140009233:	mov    DWORD PTR [r11+0x2c],r12d
   140009237:	mov    DWORD PTR [r11+0x30],r12d
   14000923b:	mov    DWORD PTR [r11+0x34],r12d
   14000923f:	mov    DWORD PTR [r11+0x8],0x4
   140009247:	jmp    0x140005bfa
   14000924c:	mov    rax,QWORD PTR [rbp+0x18]
   140009250:	mov    DWORD PTR [rax+rdx*8],0x3
   140009257:	jmp    0x14000ae40
   14000925c:	mov    rax,QWORD PTR [rbp+0x18]
   140009260:	mov    DWORD PTR [rax+rdx*8],0x17
   140009267:	jmp    0x14000ae40
   14000926c:	mov    rax,QWORD PTR [rbp+0x18]
   140009270:	mov    DWORD PTR [rax+rdx*8],0x9
   140009277:	jmp    0x14000ae40
   14000927c:	mov    rax,QWORD PTR [rbp+0x18]
   140009280:	mov    DWORD PTR [rax+rdx*8],0x15
   140009287:	jmp    0x14000ae40
   14000928c:	mov    rax,QWORD PTR [rbp+0x18]
   140009290:	mov    DWORD PTR [rax+rdx*8],0xe
   140009297:	jmp    0x14000ae40
   14000929c:	mov    rax,QWORD PTR [rbp+0x18]
   1400092a0:	mov    DWORD PTR [rax+rdx*8],0x7
   1400092a7:	jmp    0x14000ae40
   1400092ac:	mov    rax,QWORD PTR [rbp+0x18]
   1400092b0:	mov    DWORD PTR [rax+rdx*8],0x12
   1400092b7:	jmp    0x14000ae40
   1400092bc:	mov    rax,QWORD PTR [rbp+0x18]
   1400092c0:	mov    DWORD PTR [rax+rdx*8],0x1c
   1400092c7:	jmp    0x14000ae40
   1400092cc:	mov    rax,QWORD PTR [rbp+0x18]
   1400092d0:	mov    DWORD PTR [rax+rdx*8],0x21
   1400092d7:	jmp    0x14000ae40
   1400092dc:	mov    rax,QWORD PTR [rbp+0x18]
   1400092e0:	mov    DWORD PTR [rax+rdx*8],0x2
   1400092e7:	jmp    0x14000ae40
   1400092ec:	mov    rax,QWORD PTR [rbp+0x18]
   1400092f0:	mov    DWORD PTR [rax+rdx*8],0x22
   1400092f7:	jmp    0x14000ae40
   1400092fc:	mov    rax,QWORD PTR [rbp+0x18]
   140009300:	mov    DWORD PTR [rax+rdx*8],0x1a
   140009307:	jmp    0x14000ae40
   14000930c:	mov    rdx,QWORD PTR [rbp+0x8]
   140009310:	mov    ecx,0x30
   140009315:	call   0x140004140
   14000931a:	mov    r11,rax
   14000931d:	test   rax,rax
   140009320:	je     0x140005d3f
   140009326:	mov    rax,QWORD PTR [rbp+0x18]
   14000932a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000932e:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140009333:	mov    rdx,QWORD PTR [rax+rcx*8]
   140009337:	lea    rax,[rip+0xcdea]        # 0x140016128
   14000933e:	mov    QWORD PTR [r11],rax
   140009341:	mov    QWORD PTR [r11+0x10],rdx
   140009345:	mov    QWORD PTR [r11+0x18],rdi
   140009349:	mov    DWORD PTR [r11+0x20],r12d
   14000934d:	mov    DWORD PTR [r11+0x24],r12d
   140009351:	mov    DWORD PTR [r11+0x28],r12d
   140009355:	mov    DWORD PTR [r11+0x2c],r12d
   140009359:	mov    DWORD PTR [r11+0x8],0x15
   140009361:	jmp    0x140005d42
   140009366:	mov    rdx,QWORD PTR [rbp+0x8]
   14000936a:	mov    ecx,0x38
   14000936f:	call   0x140004140
   140009374:	mov    rdi,rax
   140009377:	test   rax,rax
   14000937a:	je     0x1400078d2
   140009380:	mov    rax,QWORD PTR [rbp+0x18]
   140009384:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009388:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000938d:	lea    rax,[rip+0xcde4]        # 0x140016178
   140009394:	mov    QWORD PTR [rdi],rax
   140009397:	mov    QWORD PTR [rdi+0x10],rdx
   14000939b:	mov    DWORD PTR [rdi+0x18],r12d
   14000939f:	mov    DWORD PTR [rdi+0x1c],r12d
   1400093a3:	mov    DWORD PTR [rdi+0x20],r12d
   1400093a7:	mov    DWORD PTR [rdi+0x24],r12d
   1400093ab:	mov    DWORD PTR [rdi+0x28],r12d
   1400093af:	mov    DWORD PTR [rdi+0x2c],r12d
   1400093b3:	mov    DWORD PTR [rdi+0x30],r12d
   1400093b7:	mov    DWORD PTR [rdi+0x34],r12d
   1400093bb:	mov    DWORD PTR [rdi+0x8],0x5
   1400093c2:	jmp    0x1400078d5
   1400093c7:	mov    rdx,QWORD PTR [rbp+0x8]
   1400093cb:	mov    ecx,0x20
   1400093d0:	call   0x140004140
   1400093d5:	mov    rdi,rax
   1400093d8:	test   rax,rax
   1400093db:	je     0x1400052d6
   1400093e1:	mov    rax,QWORD PTR [rbp+0x18]
   1400093e5:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400093e9:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400093ed:	lea    rax,[rip+0xcdd4]        # 0x1400161c8
   1400093f4:	mov    QWORD PTR [rdi],rax
   1400093f7:	mov    QWORD PTR [rdi+0x10],rdx
   1400093fb:	mov    QWORD PTR [rdi+0x18],rdi
   1400093ff:	mov    DWORD PTR [rdi+0x8],0x3b
   140009406:	jmp    0x1400052d9
   14000940b:	mov    rdx,QWORD PTR [rbp+0x8]
   14000940f:	mov    ecx,0x20
   140009414:	call   0x140004140
   140009419:	mov    rdi,rax
   14000941c:	test   rax,rax
   14000941f:	je     0x1400052d6
   140009425:	mov    rax,QWORD PTR [rbp+0x18]
   140009429:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000942d:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140009432:	mov    rcx,QWORD PTR [rax+rcx*8]
   140009436:	lea    rax,[rip+0xcd8b]        # 0x1400161c8
   14000943d:	mov    QWORD PTR [rdi],rax
   140009440:	mov    QWORD PTR [rdi+0x10],rdx
   140009444:	mov    DWORD PTR [rdi+0x8],0x3b
   14000944b:	mov    rax,QWORD PTR [rcx+0x18]
   14000944f:	mov    QWORD PTR [rdi+0x18],rax
   140009453:	mov    QWORD PTR [rcx+0x18],rdi
   140009457:	jmp    0x1400052d9
   14000945c:	mov    rdx,QWORD PTR [rbp+0x8]
   140009460:	mov    ecx,0x38
   140009465:	call   0x140004140
   14000946a:	mov    rbx,rax
   14000946d:	test   rax,rax
   140009470:	je     0x1400094c9
   140009472:	movsxd rax,DWORD PTR [rbp+0x10]
   140009476:	mov    rdi,QWORD PTR [rbp+0x18]
   14000947a:	mov    rdx,rax
   14000947d:	inc    eax
   14000947f:	cmp    DWORD PTR [rdi+rdx*8],0x54
   140009483:	movsxd rcx,eax
   140009486:	mov    rcx,QWORD PTR [rdi+rcx*8]
   14000948a:	sete   dl
   14000948d:	call   0x140002cd0
   140009492:	lea    rcx,[rip+0xcd7f]        # 0x140016218
   140009499:	mov    QWORD PTR [rbx],rcx
   14000949c:	mov    QWORD PTR [rbx+0x10],rax
   1400094a0:	mov    DWORD PTR [rbx+0x18],r12d
   1400094a4:	mov    DWORD PTR [rbx+0x1c],r12d
   1400094a8:	mov    DWORD PTR [rbx+0x20],r12d
   1400094ac:	mov    DWORD PTR [rbx+0x24],r12d
   1400094b0:	mov    DWORD PTR [rbx+0x28],r12d
   1400094b4:	mov    DWORD PTR [rbx+0x2c],r12d
   1400094b8:	mov    DWORD PTR [rbx+0x30],r12d
   1400094bc:	mov    DWORD PTR [rbx+0x34],r12d
   1400094c0:	mov    DWORD PTR [rbx+0x8],0x4a
   1400094c7:	jmp    0x1400094cc
   1400094c9:	mov    rbx,r12
   1400094cc:	mov    rcx,QWORD PTR [rbp+0x28]
   1400094d0:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400094d4:	lea    r9,[rip+0xffffffffffff6b25]        # 0x140000000
   1400094db:	add    rdx,rdx
   1400094de:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400094e1:	mov    DWORD PTR [rbx+0x18],eax
   1400094e4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400094e8:	mov    DWORD PTR [rbx+0x1c],eax
   1400094eb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400094ef:	mov    DWORD PTR [rbx+0x20],eax
   1400094f2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400094f6:	mov    DWORD PTR [rbx+0x24],eax
   1400094f9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400094fd:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009501:	add    rdx,0x2
   140009505:	add    rdx,rdx
   140009508:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000950b:	mov    DWORD PTR [rbx+0x28],eax
   14000950e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009512:	mov    DWORD PTR [rbx+0x2c],eax
   140009515:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009519:	mov    DWORD PTR [rbx+0x30],eax
   14000951c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009520:	mov    DWORD PTR [rbx+0x34],eax
   140009523:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009527:	mov    rax,QWORD PTR [rbp+0x18]
   14000952b:	mov    QWORD PTR [rax+rcx*8],rbx
   14000952f:	jmp    0x14000ae40
   140009534:	mov    rax,QWORD PTR [rbp+0x18]
   140009538:	mov    DWORD PTR [rax+rdx*8],0x54
   14000953f:	jmp    0x14000ae40
   140009544:	mov    rax,QWORD PTR [rbp+0x18]
   140009548:	mov    DWORD PTR [rax+rdx*8],0x4b
   14000954f:	jmp    0x14000ae40
   140009554:	mov    rdx,QWORD PTR [rbp+0x8]
   140009558:	mov    ecx,0x30
   14000955d:	call   0x140004140
   140009562:	mov    rdi,rax
   140009565:	test   rax,rax
   140009568:	je     0x1400052d6
   14000956e:	mov    rax,QWORD PTR [rbp+0x18]
   140009572:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009576:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000957a:	lea    rax,[rip+0xcd37]        # 0x1400162b8
   140009581:	mov    QWORD PTR [rdi],rax
   140009584:	mov    QWORD PTR [rdi+0x10],rdx
   140009588:	mov    QWORD PTR [rdi+0x18],rdi
   14000958c:	mov    DWORD PTR [rdi+0x20],r12d
   140009590:	mov    DWORD PTR [rdi+0x24],r12d
   140009594:	mov    DWORD PTR [rdi+0x28],r12d
   140009598:	mov    DWORD PTR [rdi+0x2c],r12d
   14000959c:	mov    DWORD PTR [rdi+0x8],0x49
   1400095a3:	jmp    0x1400052d9
   1400095a8:	mov    rdx,QWORD PTR [rbp+0x8]
   1400095ac:	mov    ecx,0x30
   1400095b1:	call   0x140004140
   1400095b6:	mov    rdi,rax
   1400095b9:	test   rax,rax
   1400095bc:	je     0x14000586d
   1400095c2:	mov    rax,QWORD PTR [rbp+0x18]
   1400095c6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400095ca:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   1400095cf:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400095d3:	lea    rax,[rip+0xccde]        # 0x1400162b8
   1400095da:	mov    QWORD PTR [rdi],rax
   1400095dd:	mov    QWORD PTR [rdi+0x10],rdx
   1400095e1:	mov    DWORD PTR [rdi+0x20],r12d
   1400095e5:	mov    DWORD PTR [rdi+0x24],r12d
   1400095e9:	mov    DWORD PTR [rdi+0x28],r12d
   1400095ed:	mov    DWORD PTR [rdi+0x2c],r12d
   1400095f1:	mov    DWORD PTR [rdi+0x8],0x49
   1400095f8:	mov    rax,QWORD PTR [rcx+0x18]
   1400095fc:	mov    QWORD PTR [rdi+0x18],rax
   140009600:	mov    QWORD PTR [rcx+0x18],rdi
   140009604:	jmp    0x140005870
   140009609:	mov    rdx,QWORD PTR [rbp+0x8]
   14000960d:	mov    ecx,0x30
   140009612:	call   0x140004140
   140009617:	mov    rdi,rax
   14000961a:	test   rax,rax
   14000961d:	je     0x1400052d6
   140009623:	mov    rax,QWORD PTR [rbp+0x18]
   140009627:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000962b:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140009630:	mov    rcx,QWORD PTR [rax+rcx*8]
   140009634:	lea    rax,[rip+0xcc7d]        # 0x1400162b8
   14000963b:	mov    QWORD PTR [rdi],rax
   14000963e:	mov    QWORD PTR [rdi+0x10],rdx
   140009642:	mov    DWORD PTR [rdi+0x20],r12d
   140009646:	mov    DWORD PTR [rdi+0x24],r12d
   14000964a:	mov    DWORD PTR [rdi+0x28],r12d
   14000964e:	mov    DWORD PTR [rdi+0x2c],r12d
   140009652:	mov    DWORD PTR [rdi+0x8],0x49
   140009659:	mov    rax,QWORD PTR [rcx+0x18]
   14000965d:	mov    QWORD PTR [rdi+0x18],rax
   140009661:	mov    QWORD PTR [rcx+0x18],rdi
   140009665:	jmp    0x1400052d9
   14000966a:	mov    rdx,QWORD PTR [rbp+0x8]
   14000966e:	mov    ecx,0x40
   140009673:	call   0x140004140
   140009678:	mov    rdi,rax
   14000967b:	test   rax,rax
   14000967e:	je     0x1400096a9
   140009680:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009684:	mov    r8,QWORD PTR [rbp+0x18]
   140009688:	lea    eax,[rcx+0x1]
   14000968b:	mov    rdx,rcx
   14000968e:	mov    rcx,rdi
   140009691:	cdqe   
   140009693:	shl    rdx,0x4
   140009697:	mov    r8,QWORD PTR [r8+rax*8]
   14000969b:	add    rdx,QWORD PTR [rbp+0x30]
   14000969f:	call   0x140002bd0
   1400096a4:	mov    rdi,rax
   1400096a7:	jmp    0x1400096ac
   1400096a9:	mov    rdi,r12
   1400096ac:	mov    rcx,QWORD PTR [rbp+0x28]
   1400096b0:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400096b4:	add    rdx,rdx
   1400096b7:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400096ba:	mov    DWORD PTR [rdi+0x2c],eax
   1400096bd:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400096c1:	mov    DWORD PTR [rdi+0x30],eax
   1400096c4:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400096c8:	mov    DWORD PTR [rdi+0x34],eax
   1400096cb:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400096cf:	mov    DWORD PTR [rdi+0x38],eax
   1400096d2:	jmp    0x1400052d9
   1400096d7:	mov    rcx,QWORD PTR [rbp+0x18]
   1400096db:	mov    rax,QWORD PTR [rcx+rdx*8+0x8]
   1400096e0:	mov    QWORD PTR [rcx+rdx*8],rax
   1400096e4:	jmp    0x14000ae40
   1400096e9:	mov    rdx,QWORD PTR [rbp+0x8]
   1400096ed:	mov    ecx,0x20
   1400096f2:	call   0x140004140
   1400096f7:	mov    rdi,rax
   1400096fa:	test   rax,rax
   1400096fd:	je     0x140007091
   140009703:	lea    rax,[rip+0xcbfe]        # 0x140016308
   14000970a:	mov    QWORD PTR [rdi],rax
   14000970d:	mov    DWORD PTR [rdi+0x10],r12d
   140009711:	mov    DWORD PTR [rdi+0x14],r12d
   140009715:	mov    DWORD PTR [rdi+0x18],r12d
   140009719:	mov    DWORD PTR [rdi+0x1c],r12d
   14000971d:	mov    DWORD PTR [rdi+0x8],0x14
   140009724:	jmp    0x140007094
   140009729:	mov    rdx,QWORD PTR [rbp+0x8]
   14000972d:	mov    ecx,0x28
   140009732:	call   0x140004140
   140009737:	mov    rdi,rax
   14000973a:	test   rax,rax
   14000973d:	je     0x140007d5a
   140009743:	mov    rax,QWORD PTR [rbp+0x18]
   140009747:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000974b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000974f:	lea    rax,[rip+0xcc02]        # 0x140016358
   140009756:	mov    QWORD PTR [rdi],rax
   140009759:	mov    QWORD PTR [rdi+0x10],rdx
   14000975d:	mov    DWORD PTR [rdi+0x18],r12d
   140009761:	mov    DWORD PTR [rdi+0x1c],r12d
   140009765:	mov    DWORD PTR [rdi+0x20],r12d
   140009769:	mov    DWORD PTR [rdi+0x24],r12d
   14000976d:	mov    DWORD PTR [rdi+0x8],0x16
   140009774:	jmp    0x140007d5d
   140009779:	mov    rdx,QWORD PTR [rbp+0x8]
   14000977d:	mov    ecx,0x68
   140009782:	call   0x140004140
   140009787:	mov    r11,rax
   14000978a:	test   rax,rax
   14000978d:	je     0x1400097c1
   14000978f:	mov    ecx,DWORD PTR [rbp+0x10]
   140009792:	mov    rdi,QWORD PTR [rbp+0x18]
   140009796:	lea    eax,[rcx+0x6]
   140009799:	movsxd r9,eax
   14000979c:	lea    eax,[rcx+0x4]
   14000979f:	mov    r9,QWORD PTR [rdi+r9*8]
   1400097a3:	movsxd r8,eax
   1400097a6:	lea    eax,[rcx+0x2]
   1400097a9:	mov    r8,QWORD PTR [rdi+r8*8]
   1400097ad:	movsxd rdx,eax
   1400097b0:	mov    rcx,r11
   1400097b3:	mov    rdx,QWORD PTR [rdi+rdx*8]
   1400097b7:	call   0x140002d10
   1400097bc:	mov    rdi,rax
   1400097bf:	jmp    0x1400097c4
   1400097c1:	mov    rdi,r12
   1400097c4:	mov    rcx,QWORD PTR [rbp+0x28]
   1400097c8:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400097cc:	add    rdx,rdx
   1400097cf:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400097d2:	mov    DWORD PTR [rdi+0x28],eax
   1400097d5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400097d9:	mov    DWORD PTR [rdi+0x2c],eax
   1400097dc:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400097e0:	mov    DWORD PTR [rdi+0x30],eax
   1400097e3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400097e7:	mov    DWORD PTR [rdi+0x34],eax
   1400097ea:	mov    rcx,QWORD PTR [rbp+0x28]
   1400097ee:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400097f2:	inc    rdx
   1400097f5:	add    rdx,rdx
   1400097f8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400097fb:	mov    DWORD PTR [rdi+0x38],eax
   1400097fe:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009802:	mov    DWORD PTR [rdi+0x3c],eax
   140009805:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009809:	mov    DWORD PTR [rdi+0x40],eax
   14000980c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009810:	mov    DWORD PTR [rdi+0x44],eax
   140009813:	mov    rcx,QWORD PTR [rbp+0x28]
   140009817:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000981b:	add    rdx,0x3
   14000981f:	add    rdx,rdx
   140009822:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009825:	mov    DWORD PTR [rdi+0x48],eax
   140009828:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000982c:	mov    DWORD PTR [rdi+0x4c],eax
   14000982f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009833:	mov    DWORD PTR [rdi+0x50],eax
   140009836:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000983a:	mov    DWORD PTR [rdi+0x54],eax
   14000983d:	mov    rcx,QWORD PTR [rbp+0x28]
   140009841:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009845:	add    rdx,0x5
   140009849:	add    rdx,rdx
   14000984c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000984f:	mov    DWORD PTR [rdi+0x58],eax
   140009852:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009856:	mov    DWORD PTR [rdi+0x5c],eax
   140009859:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000985d:	mov    DWORD PTR [rdi+0x60],eax
   140009860:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009864:	mov    DWORD PTR [rdi+0x64],eax
   140009867:	jmp    0x1400052d9
   14000986c:	mov    rdx,QWORD PTR [rbp+0x8]
   140009870:	mov    ecx,0x68
   140009875:	call   0x140004140
   14000987a:	mov    r11,rax
   14000987d:	test   rax,rax
   140009880:	je     0x1400098ad
   140009882:	mov    ecx,DWORD PTR [rbp+0x10]
   140009885:	mov    rdi,QWORD PTR [rbp+0x18]
   140009889:	xor    r9d,r9d
   14000988c:	lea    eax,[rcx+0x4]
   14000988f:	movsxd r8,eax
   140009892:	lea    eax,[rcx+0x2]
   140009895:	mov    rcx,r11
   140009898:	mov    r8,QWORD PTR [rdi+r8*8]
   14000989c:	movsxd rdx,eax
   14000989f:	mov    rdx,QWORD PTR [rdi+rdx*8]
   1400098a3:	call   0x140002d10
   1400098a8:	mov    rdi,rax
   1400098ab:	jmp    0x1400098b0
   1400098ad:	mov    rdi,r12
   1400098b0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400098b4:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400098b8:	add    rdx,rdx
   1400098bb:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400098be:	mov    DWORD PTR [rdi+0x28],eax
   1400098c1:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400098c5:	mov    DWORD PTR [rdi+0x2c],eax
   1400098c8:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400098cc:	mov    DWORD PTR [rdi+0x30],eax
   1400098cf:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400098d3:	mov    DWORD PTR [rdi+0x34],eax
   1400098d6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400098da:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400098de:	inc    rdx
   1400098e1:	add    rdx,rdx
   1400098e4:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400098e7:	mov    DWORD PTR [rdi+0x38],eax
   1400098ea:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400098ee:	mov    DWORD PTR [rdi+0x3c],eax
   1400098f1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400098f5:	mov    DWORD PTR [rdi+0x40],eax
   1400098f8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400098fc:	mov    DWORD PTR [rdi+0x44],eax
   1400098ff:	mov    rcx,QWORD PTR [rbp+0x28]
   140009903:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009907:	add    rdx,0x3
   14000990b:	add    rdx,rdx
   14000990e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009911:	mov    DWORD PTR [rdi+0x48],eax
   140009914:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009918:	mov    DWORD PTR [rdi+0x4c],eax
   14000991b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000991f:	mov    DWORD PTR [rdi+0x50],eax
   140009922:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009926:	mov    DWORD PTR [rdi+0x54],eax
   140009929:	jmp    0x1400052d9
   14000992e:	mov    rdx,QWORD PTR [rbp+0x8]
   140009932:	mov    ecx,0x70
   140009937:	call   0x140004140
   14000993c:	mov    r11,rax
   14000993f:	test   rax,rax
   140009942:	je     0x14000996c
   140009944:	mov    ecx,DWORD PTR [rbp+0x10]
   140009947:	mov    rdi,QWORD PTR [rbp+0x18]
   14000994b:	lea    eax,[rcx+0x4]
   14000994e:	movsxd r8,eax
   140009951:	lea    eax,[rcx+0x1]
   140009954:	mov    rcx,r11
   140009957:	mov    r8,QWORD PTR [rdi+r8*8]
   14000995b:	movsxd rdx,eax
   14000995e:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140009962:	call   0x140002db0
   140009967:	mov    rdi,rax
   14000996a:	jmp    0x14000996f
   14000996c:	mov    rdi,r12
   14000996f:	mov    rcx,QWORD PTR [rbp+0x28]
   140009973:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009977:	add    rdx,rdx
   14000997a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000997d:	mov    DWORD PTR [rdi+0x20],eax
   140009980:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009984:	mov    DWORD PTR [rdi+0x24],eax
   140009987:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000998b:	mov    DWORD PTR [rdi+0x28],eax
   14000998e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009992:	mov    DWORD PTR [rdi+0x2c],eax
   140009995:	mov    rcx,QWORD PTR [rbp+0x28]
   140009999:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000999d:	add    rdx,0x2
   1400099a1:	add    rdx,rdx
   1400099a4:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400099a7:	mov    DWORD PTR [rdi+0x30],eax
   1400099aa:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400099ae:	mov    DWORD PTR [rdi+0x34],eax
   1400099b1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400099b5:	mov    DWORD PTR [rdi+0x38],eax
   1400099b8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400099bc:	mov    DWORD PTR [rdi+0x3c],eax
   1400099bf:	mov    rcx,QWORD PTR [rbp+0x28]
   1400099c3:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400099c7:	add    rdx,0x3
   1400099cb:	add    rdx,rdx
   1400099ce:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400099d1:	mov    DWORD PTR [rdi+0x40],eax
   1400099d4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400099d8:	mov    DWORD PTR [rdi+0x44],eax
   1400099db:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400099df:	mov    DWORD PTR [rdi+0x48],eax
   1400099e2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400099e6:	mov    DWORD PTR [rdi+0x4c],eax
   1400099e9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400099ed:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400099f1:	add    rdx,0x5
   1400099f5:	add    rdx,rdx
   1400099f8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400099fb:	mov    DWORD PTR [rdi+0x50],eax
   1400099fe:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009a02:	mov    DWORD PTR [rdi+0x54],eax
   140009a05:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009a09:	mov    DWORD PTR [rdi+0x58],eax
   140009a0c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009a10:	mov    DWORD PTR [rdi+0x5c],eax
   140009a13:	mov    rcx,QWORD PTR [rbp+0x28]
   140009a17:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009a1b:	add    rdx,0x6
   140009a1f:	add    rdx,rdx
   140009a22:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009a25:	mov    DWORD PTR [rdi+0x60],eax
   140009a28:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009a2c:	mov    DWORD PTR [rdi+0x64],eax
   140009a2f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009a33:	mov    DWORD PTR [rdi+0x68],eax
   140009a36:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009a3a:	mov    DWORD PTR [rdi+0x6c],eax
   140009a3d:	jmp    0x1400052d9
   140009a42:	mov    rdx,QWORD PTR [rbp+0x8]
   140009a46:	mov    ecx,0x50
   140009a4b:	call   0x140004140
   140009a50:	mov    r11,rax
   140009a53:	test   rax,rax
   140009a56:	je     0x140009a80
   140009a58:	mov    ecx,DWORD PTR [rbp+0x10]
   140009a5b:	mov    rdi,QWORD PTR [rbp+0x18]
   140009a5f:	lea    eax,[rcx+0x4]
   140009a62:	movsxd r8,eax
   140009a65:	lea    eax,[rcx+0x2]
   140009a68:	mov    rcx,r11
   140009a6b:	mov    r8,QWORD PTR [rdi+r8*8]
   140009a6f:	movsxd rdx,eax
   140009a72:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140009a76:	call   0x140002e30
   140009a7b:	mov    rdi,rax
   140009a7e:	jmp    0x140009a83
   140009a80:	mov    rdi,r12
   140009a83:	mov    rcx,QWORD PTR [rbp+0x28]
   140009a87:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009a8b:	add    rdx,rdx
   140009a8e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009a91:	mov    DWORD PTR [rdi+0x20],eax
   140009a94:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009a98:	mov    DWORD PTR [rdi+0x24],eax
   140009a9b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009a9f:	mov    DWORD PTR [rdi+0x28],eax
   140009aa2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009aa6:	mov    DWORD PTR [rdi+0x2c],eax
   140009aa9:	mov    rcx,QWORD PTR [rbp+0x28]
   140009aad:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009ab1:	inc    rdx
   140009ab4:	add    rdx,rdx
   140009ab7:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009aba:	mov    DWORD PTR [rdi+0x30],eax
   140009abd:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009ac1:	mov    DWORD PTR [rdi+0x34],eax
   140009ac4:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009ac8:	mov    DWORD PTR [rdi+0x38],eax
   140009acb:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009acf:	mov    DWORD PTR [rdi+0x3c],eax
   140009ad2:	mov    rcx,QWORD PTR [rbp+0x28]
   140009ad6:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009ada:	add    rdx,0x3
   140009ade:	add    rdx,rdx
   140009ae1:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009ae4:	mov    DWORD PTR [rdi+0x40],eax
   140009ae7:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009aeb:	mov    DWORD PTR [rdi+0x44],eax
   140009aee:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009af2:	mov    DWORD PTR [rdi+0x48],eax
   140009af5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009af9:	mov    DWORD PTR [rdi+0x4c],eax
   140009afc:	jmp    0x1400052d9
   140009b01:	mov    rdx,QWORD PTR [rbp+0x8]
   140009b05:	mov    ecx,0x80
   140009b0a:	call   0x140004140
   140009b0f:	mov    r11,rax
   140009b12:	test   rax,rax
   140009b15:	je     0x140009b58
   140009b17:	mov    ecx,DWORD PTR [rbp+0x10]
   140009b1a:	mov    r10,QWORD PTR [rbp+0x18]
   140009b1e:	lea    eax,[rcx+0x8]
   140009b21:	movsxd rdi,eax
   140009b24:	lea    eax,[rcx+0x6]
   140009b27:	movsxd r9,eax
   140009b2a:	lea    eax,[rcx+0x4]
   140009b2d:	mov    r9,QWORD PTR [r10+r9*8]
   140009b31:	movsxd r8,eax
   140009b34:	lea    eax,[rcx+0x2]
   140009b37:	mov    r8,QWORD PTR [r10+r8*8]
   140009b3b:	movsxd rdx,eax
   140009b3e:	mov    rax,QWORD PTR [r10+rdi*8]
   140009b42:	mov    rdx,QWORD PTR [r10+rdx*8]
   140009b46:	mov    rcx,r11
   140009b49:	mov    QWORD PTR [rsp+0x20],rax
   140009b4e:	call   0x140002e80
   140009b53:	mov    rdi,rax
   140009b56:	jmp    0x140009b5b
   140009b58:	mov    rdi,r12
   140009b5b:	mov    rcx,QWORD PTR [rbp+0x28]
   140009b5f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009b63:	add    rdx,rdx
   140009b66:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009b69:	mov    DWORD PTR [rdi+0x30],eax
   140009b6c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009b70:	mov    DWORD PTR [rdi+0x34],eax
   140009b73:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009b77:	mov    DWORD PTR [rdi+0x38],eax
   140009b7a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009b7e:	mov    DWORD PTR [rdi+0x3c],eax
   140009b81:	mov    rcx,QWORD PTR [rbp+0x28]
   140009b85:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009b89:	inc    rdx
   140009b8c:	add    rdx,rdx
   140009b8f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009b92:	mov    DWORD PTR [rdi+0x40],eax
   140009b95:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009b99:	mov    DWORD PTR [rdi+0x44],eax
   140009b9c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009ba0:	mov    DWORD PTR [rdi+0x48],eax
   140009ba3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009ba7:	mov    DWORD PTR [rdi+0x4c],eax
   140009baa:	mov    rcx,QWORD PTR [rbp+0x28]
   140009bae:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009bb2:	add    rdx,0x3
   140009bb6:	add    rdx,rdx
   140009bb9:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009bbc:	mov    DWORD PTR [rdi+0x50],eax
   140009bbf:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009bc3:	mov    DWORD PTR [rdi+0x54],eax
   140009bc6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009bca:	mov    DWORD PTR [rdi+0x58],eax
   140009bcd:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009bd1:	mov    DWORD PTR [rdi+0x5c],eax
   140009bd4:	mov    rcx,QWORD PTR [rbp+0x28]
   140009bd8:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009bdc:	add    rdx,0x5
   140009be0:	add    rdx,rdx
   140009be3:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009be6:	mov    DWORD PTR [rdi+0x60],eax
   140009be9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009bed:	mov    DWORD PTR [rdi+0x64],eax
   140009bf0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009bf4:	mov    DWORD PTR [rdi+0x68],eax
   140009bf7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009bfb:	mov    DWORD PTR [rdi+0x6c],eax
   140009bfe:	jmp    0x140007ff3
   140009c03:	mov    rdx,QWORD PTR [rbp+0x8]
   140009c07:	mov    ecx,0x90
   140009c0c:	call   0x140004140
   140009c11:	mov    r11,rax
   140009c14:	test   rax,rax
   140009c17:	je     0x140009c5e
   140009c19:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009c1d:	mov    r10,QWORD PTR [rbp+0x18]
   140009c21:	lea    eax,[rcx+0x9]
   140009c24:	movsxd rdi,eax
   140009c27:	lea    eax,[rcx+0x7]
   140009c2a:	movsxd r9,eax
   140009c2d:	lea    eax,[rcx+0x5]
   140009c30:	mov    rcx,QWORD PTR [r10+rcx*8+0x18]
   140009c35:	mov    rdx,QWORD PTR [rcx+0x18]
   140009c39:	mov    QWORD PTR [rcx+0x18],r12
   140009c3d:	mov    r9,QWORD PTR [r10+r9*8]
   140009c41:	movsxd r8,eax
   140009c44:	mov    rax,QWORD PTR [r10+rdi*8]
   140009c48:	mov    rcx,r11
   140009c4b:	mov    r8,QWORD PTR [r10+r8*8]
   140009c4f:	mov    QWORD PTR [rsp+0x20],rax
   140009c54:	call   0x140002ef0
   140009c59:	mov    rdi,rax
   140009c5c:	jmp    0x140009c61
   140009c5e:	mov    rdi,r12
   140009c61:	mov    rcx,QWORD PTR [rbp+0x28]
   140009c65:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009c69:	add    rdx,rdx
   140009c6c:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009c6f:	mov    DWORD PTR [rdi+0x30],eax
   140009c72:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009c76:	mov    DWORD PTR [rdi+0x34],eax
   140009c79:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009c7d:	mov    DWORD PTR [rdi+0x38],eax
   140009c80:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009c84:	mov    DWORD PTR [rdi+0x3c],eax
   140009c87:	mov    rcx,QWORD PTR [rbp+0x28]
   140009c8b:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009c8f:	inc    rdx
   140009c92:	add    rdx,rdx
   140009c95:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009c98:	mov    DWORD PTR [rdi+0x40],eax
   140009c9b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009c9f:	mov    DWORD PTR [rdi+0x44],eax
   140009ca2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009ca6:	mov    DWORD PTR [rdi+0x48],eax
   140009ca9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009cad:	mov    DWORD PTR [rdi+0x4c],eax
   140009cb0:	mov    rcx,QWORD PTR [rbp+0x28]
   140009cb4:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009cb8:	add    rdx,0x2
   140009cbc:	add    rdx,rdx
   140009cbf:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009cc2:	mov    DWORD PTR [rdi+0x50],eax
   140009cc5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009cc9:	mov    DWORD PTR [rdi+0x54],eax
   140009ccc:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009cd0:	mov    DWORD PTR [rdi+0x58],eax
   140009cd3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009cd7:	mov    DWORD PTR [rdi+0x5c],eax
   140009cda:	mov    rcx,QWORD PTR [rbp+0x28]
   140009cde:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009ce2:	add    rdx,0x4
   140009ce6:	add    rdx,rdx
   140009ce9:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009cec:	mov    DWORD PTR [rdi+0x60],eax
   140009cef:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009cf3:	mov    DWORD PTR [rdi+0x64],eax
   140009cf6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009cfa:	mov    DWORD PTR [rdi+0x68],eax
   140009cfd:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009d01:	mov    DWORD PTR [rdi+0x6c],eax
   140009d04:	mov    rcx,QWORD PTR [rbp+0x28]
   140009d08:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009d0c:	add    rdx,0x6
   140009d10:	add    rdx,rdx
   140009d13:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009d16:	mov    DWORD PTR [rdi+0x70],eax
   140009d19:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009d1d:	mov    DWORD PTR [rdi+0x74],eax
   140009d20:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009d24:	mov    DWORD PTR [rdi+0x78],eax
   140009d27:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009d2b:	mov    DWORD PTR [rdi+0x7c],eax
   140009d2e:	mov    rcx,QWORD PTR [rbp+0x28]
   140009d32:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009d36:	add    rdx,0x8
   140009d3a:	add    rdx,rdx
   140009d3d:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009d40:	mov    DWORD PTR [rdi+0x80],eax
   140009d46:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009d4a:	mov    DWORD PTR [rdi+0x84],eax
   140009d50:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009d54:	mov    DWORD PTR [rdi+0x88],eax
   140009d5a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009d5e:	mov    DWORD PTR [rdi+0x8c],eax
   140009d64:	jmp    0x1400052d9
   140009d69:	mov    rdx,QWORD PTR [rbp+0x8]
   140009d6d:	mov    ecx,0x68
   140009d72:	call   0x140004140
   140009d77:	mov    r11,rax
   140009d7a:	test   rax,rax
   140009d7d:	je     0x1400097c1
   140009d83:	mov    ecx,DWORD PTR [rbp+0x10]
   140009d86:	mov    rdi,QWORD PTR [rbp+0x18]
   140009d8a:	lea    eax,[rcx+0x6]
   140009d8d:	movsxd r9,eax
   140009d90:	lea    eax,[rcx+0x4]
   140009d93:	mov    r9,QWORD PTR [rdi+r9*8]
   140009d97:	movsxd r8,eax
   140009d9a:	lea    eax,[rcx+0x2]
   140009d9d:	mov    r8,QWORD PTR [rdi+r8*8]
   140009da1:	movsxd rdx,eax
   140009da4:	mov    rcx,r11
   140009da7:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140009dab:	call   0x140002f90
   140009db0:	mov    rdi,rax
   140009db3:	jmp    0x1400097c4
   140009db8:	mov    rdx,QWORD PTR [rbp+0x8]
   140009dbc:	mov    ecx,0x78
   140009dc1:	call   0x140004140
   140009dc6:	mov    r11,rax
   140009dc9:	test   rax,rax
   140009dcc:	je     0x140009e00
   140009dce:	mov    ecx,DWORD PTR [rbp+0x10]
   140009dd1:	mov    rdi,QWORD PTR [rbp+0x18]
   140009dd5:	lea    eax,[rcx+0x7]
   140009dd8:	movsxd r9,eax
   140009ddb:	lea    eax,[rcx+0x5]
   140009dde:	mov    r9,QWORD PTR [rdi+r9*8]
   140009de2:	movsxd r8,eax
   140009de5:	lea    eax,[rcx+0x3]
   140009de8:	mov    r8,QWORD PTR [rdi+r8*8]
   140009dec:	movsxd rdx,eax
   140009def:	mov    rcx,r11
   140009df2:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140009df6:	call   0x140002ff0
   140009dfb:	mov    rdi,rax
   140009dfe:	jmp    0x140009e03
   140009e00:	mov    rdi,r12
   140009e03:	mov    rcx,QWORD PTR [rbp+0x28]
   140009e07:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009e0b:	add    rdx,rdx
   140009e0e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009e11:	mov    DWORD PTR [rdi+0x28],eax
   140009e14:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009e18:	mov    DWORD PTR [rdi+0x2c],eax
   140009e1b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009e1f:	mov    DWORD PTR [rdi+0x30],eax
   140009e22:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009e26:	mov    DWORD PTR [rdi+0x34],eax
   140009e29:	mov    rcx,QWORD PTR [rbp+0x28]
   140009e2d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009e31:	inc    rdx
   140009e34:	add    rdx,rdx
   140009e37:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009e3a:	mov    DWORD PTR [rdi+0x38],eax
   140009e3d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009e41:	mov    DWORD PTR [rdi+0x3c],eax
   140009e44:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009e48:	mov    DWORD PTR [rdi+0x40],eax
   140009e4b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009e4f:	mov    DWORD PTR [rdi+0x44],eax
   140009e52:	mov    rcx,QWORD PTR [rbp+0x28]
   140009e56:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009e5a:	add    rdx,0x2
   140009e5e:	add    rdx,rdx
   140009e61:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009e64:	mov    DWORD PTR [rdi+0x48],eax
   140009e67:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009e6b:	mov    DWORD PTR [rdi+0x4c],eax
   140009e6e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009e72:	mov    DWORD PTR [rdi+0x50],eax
   140009e75:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009e79:	mov    DWORD PTR [rdi+0x54],eax
   140009e7c:	mov    rcx,QWORD PTR [rbp+0x28]
   140009e80:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009e84:	add    rdx,0x4
   140009e88:	add    rdx,rdx
   140009e8b:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009e8e:	mov    DWORD PTR [rdi+0x58],eax
   140009e91:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009e95:	mov    DWORD PTR [rdi+0x5c],eax
   140009e98:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009e9c:	mov    DWORD PTR [rdi+0x60],eax
   140009e9f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009ea3:	mov    DWORD PTR [rdi+0x64],eax
   140009ea6:	mov    rcx,QWORD PTR [rbp+0x28]
   140009eaa:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009eae:	add    rdx,0x6
   140009eb2:	add    rdx,rdx
   140009eb5:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009eb8:	mov    DWORD PTR [rdi+0x68],eax
   140009ebb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009ebf:	mov    DWORD PTR [rdi+0x6c],eax
   140009ec2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009ec6:	mov    DWORD PTR [rdi+0x70],eax
   140009ec9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009ecd:	mov    DWORD PTR [rdi+0x74],eax
   140009ed0:	jmp    0x1400052d9
   140009ed5:	mov    rdx,QWORD PTR [rbp+0x8]
   140009ed9:	mov    ecx,0x50
   140009ede:	call   0x140004140
   140009ee3:	mov    rdi,rax
   140009ee6:	test   rax,rax
   140009ee9:	je     0x140009f10
   140009eeb:	lea    rcx,[rsp+0x360]
   140009ef3:	or     esi,0x40
   140009ef6:	mov    DWORD PTR [rsp+0x30],esi
   140009efa:	call   QWORD PTR [rip+0xb2e8]        # 0x1400151e8
   140009f00:	mov    rcx,rdi
   140009f03:	mov    rdx,rax
   140009f06:	call   0x140003050
   140009f0b:	mov    rdi,rax
   140009f0e:	jmp    0x140009f13
   140009f10:	mov    rdi,r12
   140009f13:	test   sil,0x40
   140009f17:	je     0x140007562
   140009f1d:	and    esi,0xffffffbf
   140009f20:	lea    rcx,[rsp+0x360]
   140009f28:	mov    DWORD PTR [rsp+0x30],esi
   140009f2c:	call   QWORD PTR [rip+0xb2ae]        # 0x1400151e0
   140009f32:	jmp    0x140007562
   140009f37:	mov    rdx,QWORD PTR [rbp+0x8]
   140009f3b:	mov    ecx,0x50
   140009f40:	call   0x140004140
   140009f45:	mov    rcx,rax
   140009f48:	test   rax,rax
   140009f4b:	je     0x140009f67
   140009f4d:	mov    eax,DWORD PTR [rbp+0x10]
   140009f50:	inc    eax
   140009f52:	movsxd rdx,eax
   140009f55:	shl    rdx,0x4
   140009f59:	add    rdx,QWORD PTR [rbp+0x30]
   140009f5d:	call   0x140003050
   140009f62:	mov    rdi,rax
   140009f65:	jmp    0x140009f6a
   140009f67:	mov    rdi,r12
   140009f6a:	mov    rcx,QWORD PTR [rbp+0x28]
   140009f6e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009f72:	add    rdx,rdx
   140009f75:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009f78:	mov    DWORD PTR [rdi+0x20],eax
   140009f7b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009f7f:	mov    DWORD PTR [rdi+0x24],eax
   140009f82:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009f86:	mov    DWORD PTR [rdi+0x28],eax
   140009f89:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009f8d:	mov    DWORD PTR [rdi+0x2c],eax
   140009f90:	mov    rcx,QWORD PTR [rbp+0x28]
   140009f94:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009f98:	inc    rdx
   140009f9b:	add    rdx,rdx
   140009f9e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009fa1:	mov    DWORD PTR [rdi+0x30],eax
   140009fa4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009fa8:	mov    DWORD PTR [rdi+0x34],eax
   140009fab:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009faf:	mov    DWORD PTR [rdi+0x38],eax
   140009fb2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009fb6:	mov    DWORD PTR [rdi+0x3c],eax
   140009fb9:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009fbd:	add    rdx,0x2
   140009fc1:	jmp    0x14000758f
   140009fc6:	mov    rdx,QWORD PTR [rbp+0x8]
   140009fca:	mov    ecx,0x50
   140009fcf:	call   0x140004140
   140009fd4:	mov    rdi,rax
   140009fd7:	test   rax,rax
   140009fda:	je     0x14000a002
   140009fdc:	bts    esi,0x7
   140009fe0:	lea    rcx,[rsp+0x300]
   140009fe8:	mov    DWORD PTR [rsp+0x30],esi
   140009fec:	call   QWORD PTR [rip+0xb1f6]        # 0x1400151e8
   140009ff2:	mov    rcx,rdi
   140009ff5:	mov    rdx,rax
   140009ff8:	call   0x1400030d0
   140009ffd:	mov    rdi,rax
   14000a000:	jmp    0x14000a005
   14000a002:	mov    rdi,r12
   14000a005:	test   sil,sil
   14000a008:	jns    0x140007562
   14000a00e:	btr    esi,0x7
   14000a012:	lea    rcx,[rsp+0x300]
   14000a01a:	mov    DWORD PTR [rsp+0x30],esi
   14000a01e:	call   QWORD PTR [rip+0xb1bc]        # 0x1400151e0
   14000a024:	jmp    0x140007562
   14000a029:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a02d:	mov    ecx,0x50
   14000a032:	call   0x140004140
   14000a037:	mov    rcx,rax
   14000a03a:	test   rax,rax
   14000a03d:	je     0x140009f67
   14000a043:	mov    eax,DWORD PTR [rbp+0x10]
   14000a046:	inc    eax
   14000a048:	movsxd rdx,eax
   14000a04b:	shl    rdx,0x4
   14000a04f:	add    rdx,QWORD PTR [rbp+0x30]
   14000a053:	call   0x1400030d0
   14000a058:	mov    rdi,rax
   14000a05b:	jmp    0x140009f6a
   14000a060:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a064:	mov    ecx,0x38
   14000a069:	call   0x140004140
   14000a06e:	mov    rdi,rax
   14000a071:	test   rax,rax
   14000a074:	je     0x1400078d2
   14000a07a:	mov    eax,DWORD PTR [rbp+0x10]
   14000a07d:	mov    rdx,QWORD PTR [rbp+0x18]
   14000a081:	inc    eax
   14000a083:	movsxd rcx,eax
   14000a086:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000a08a:	mov    rcx,rdi
   14000a08d:	call   0x140003130
   14000a092:	mov    rdi,rax
   14000a095:	jmp    0x1400078d5
   14000a09a:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a09e:	mov    ecx,0x50
   14000a0a3:	call   0x140004140
   14000a0a8:	mov    r11,rax
   14000a0ab:	test   rax,rax
   14000a0ae:	je     0x14000a0d8
   14000a0b0:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a0b3:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a0b7:	lea    eax,[rcx+0x4]
   14000a0ba:	movsxd r8,eax
   14000a0bd:	lea    eax,[rcx+0x2]
   14000a0c0:	mov    rcx,r11
   14000a0c3:	mov    r8,QWORD PTR [rdi+r8*8]
   14000a0c7:	movsxd rdx,eax
   14000a0ca:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14000a0ce:	call   0x140003170
   14000a0d3:	mov    rdi,rax
   14000a0d6:	jmp    0x14000a0db
   14000a0d8:	mov    rdi,r12
   14000a0db:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a0df:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a0e3:	add    rdx,rdx
   14000a0e6:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a0e9:	mov    DWORD PTR [rdi+0x20],eax
   14000a0ec:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a0f0:	mov    DWORD PTR [rdi+0x24],eax
   14000a0f3:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a0f7:	mov    DWORD PTR [rdi+0x28],eax
   14000a0fa:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a0fe:	mov    DWORD PTR [rdi+0x2c],eax
   14000a101:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a105:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a109:	inc    rdx
   14000a10c:	add    rdx,rdx
   14000a10f:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a112:	mov    DWORD PTR [rdi+0x30],eax
   14000a115:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a119:	mov    DWORD PTR [rdi+0x34],eax
   14000a11c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a120:	mov    DWORD PTR [rdi+0x38],eax
   14000a123:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a127:	mov    DWORD PTR [rdi+0x3c],eax
   14000a12a:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a12e:	add    rdx,0x3
   14000a132:	jmp    0x14000758f
   14000a137:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a13b:	mov    ecx,0x50
   14000a140:	call   0x140004140
   14000a145:	mov    r11,rax
   14000a148:	test   rax,rax
   14000a14b:	je     0x14000a0d8
   14000a14d:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a150:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a154:	lea    eax,[rcx+0x4]
   14000a157:	movsxd r8,eax
   14000a15a:	lea    eax,[rcx+0x2]
   14000a15d:	mov    rcx,r11
   14000a160:	mov    r8,QWORD PTR [rdi+r8*8]
   14000a164:	movsxd rdx,eax
   14000a167:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14000a16b:	call   0x140003220
   14000a170:	mov    rdi,rax
   14000a173:	jmp    0x14000a0db
   14000a178:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a17c:	mov    ecx,0x48
   14000a181:	call   0x140004140
   14000a186:	mov    rdi,rax
   14000a189:	test   rax,rax
   14000a18c:	je     0x14000a1da
   14000a18e:	mov    rax,QWORD PTR [rbp+0x18]
   14000a192:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a196:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000a19b:	lea    rax,[rip+0xc576]        # 0x140016718
   14000a1a2:	mov    QWORD PTR [rdi],rax
   14000a1a5:	mov    QWORD PTR [rdi+0x10],rdx
   14000a1a9:	mov    QWORD PTR [rdi+0x18],r12
   14000a1ad:	mov    QWORD PTR [rdi+0x20],r12
   14000a1b1:	mov    DWORD PTR [rdi+0x28],r12d
   14000a1b5:	mov    DWORD PTR [rdi+0x2c],r12d
   14000a1b9:	mov    DWORD PTR [rdi+0x30],r12d
   14000a1bd:	mov    DWORD PTR [rdi+0x34],r12d
   14000a1c1:	mov    DWORD PTR [rdi+0x38],r12d
   14000a1c5:	mov    DWORD PTR [rdi+0x3c],r12d
   14000a1c9:	mov    DWORD PTR [rdi+0x40],r12d
   14000a1cd:	mov    DWORD PTR [rdi+0x44],r12d
   14000a1d1:	mov    DWORD PTR [rdi+0x8],0x8
   14000a1d8:	jmp    0x14000a1dd
   14000a1da:	mov    rdi,r12
   14000a1dd:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a1e1:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a1e5:	add    rdx,rdx
   14000a1e8:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a1eb:	mov    DWORD PTR [rdi+0x28],eax
   14000a1ee:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a1f2:	mov    DWORD PTR [rdi+0x2c],eax
   14000a1f5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a1f9:	mov    DWORD PTR [rdi+0x30],eax
   14000a1fc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a200:	mov    DWORD PTR [rdi+0x34],eax
   14000a203:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a207:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a20b:	add    rdx,0x2
   14000a20f:	add    rdx,rdx
   14000a212:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a215:	mov    DWORD PTR [rdi+0x38],eax
   14000a218:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a21c:	mov    DWORD PTR [rdi+0x3c],eax
   14000a21f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a223:	mov    DWORD PTR [rdi+0x40],eax
   14000a226:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a22a:	mov    DWORD PTR [rdi+0x44],eax
   14000a22d:	jmp    0x1400052d9
   14000a232:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a236:	mov    ecx,0x48
   14000a23b:	call   0x140004140
   14000a240:	mov    r11,rax
   14000a243:	test   rax,rax
   14000a246:	je     0x14000a27a
   14000a248:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a24b:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a24f:	lea    eax,[rcx+0x3]
   14000a252:	movsxd r9,eax
   14000a255:	lea    eax,[rcx+0x2]
   14000a258:	mov    r9,QWORD PTR [rdi+r9*8]
   14000a25c:	movsxd r8,eax
   14000a25f:	lea    eax,[rcx+0x1]
   14000a262:	mov    r8,QWORD PTR [rdi+r8*8]
   14000a266:	movsxd rdx,eax
   14000a269:	mov    rcx,r11
   14000a26c:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14000a270:	call   0x1400031e0
   14000a275:	mov    rdi,rax
   14000a278:	jmp    0x14000a27d
   14000a27a:	mov    rdi,r12
   14000a27d:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a281:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a285:	add    rdx,rdx
   14000a288:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a28b:	mov    DWORD PTR [rdi+0x28],eax
   14000a28e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a292:	mov    DWORD PTR [rdi+0x2c],eax
   14000a295:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a299:	mov    DWORD PTR [rdi+0x30],eax
   14000a29c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a2a0:	mov    DWORD PTR [rdi+0x34],eax
   14000a2a3:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a2a7:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a2ab:	add    rdx,0x4
   14000a2af:	add    rdx,rdx
   14000a2b2:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a2b5:	mov    DWORD PTR [rdi+0x38],eax
   14000a2b8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a2bc:	mov    DWORD PTR [rdi+0x3c],eax
   14000a2bf:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a2c3:	mov    DWORD PTR [rdi+0x40],eax
   14000a2c6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a2ca:	mov    DWORD PTR [rdi+0x44],eax
   14000a2cd:	jmp    0x1400052d9
   14000a2d2:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a2d6:	mov    ecx,0x20
   14000a2db:	call   0x140004140
   14000a2e0:	mov    rdi,rax
   14000a2e3:	test   rax,rax
   14000a2e6:	je     0x1400052d6
   14000a2ec:	mov    rax,QWORD PTR [rbp+0x18]
   14000a2f0:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a2f4:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000a2f8:	lea    rax,[rip+0xc509]        # 0x140016808
   14000a2ff:	mov    QWORD PTR [rdi],rax
   14000a302:	mov    QWORD PTR [rdi+0x10],rdx
   14000a306:	mov    QWORD PTR [rdi+0x18],rdi
   14000a30a:	mov    DWORD PTR [rdi+0x8],0xa
   14000a311:	jmp    0x1400052d9
   14000a316:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a31a:	mov    ecx,0x20
   14000a31f:	call   0x140004140
   14000a324:	mov    rdi,rax
   14000a327:	test   rax,rax
   14000a32a:	je     0x1400052d6
   14000a330:	mov    rax,QWORD PTR [rbp+0x18]
   14000a334:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a338:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000a33d:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000a341:	lea    rax,[rip+0xc4c0]        # 0x140016808
   14000a348:	mov    QWORD PTR [rdi],rax
   14000a34b:	mov    QWORD PTR [rdi+0x10],rdx
   14000a34f:	mov    DWORD PTR [rdi+0x8],0xa
   14000a356:	mov    rax,QWORD PTR [rcx+0x18]
   14000a35a:	mov    QWORD PTR [rdi+0x18],rax
   14000a35e:	mov    QWORD PTR [rcx+0x18],rdi
   14000a362:	jmp    0x1400052d9
   14000a367:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a36b:	mov    ecx,0x40
   14000a370:	call   0x140004140
   14000a375:	mov    r11,rax
   14000a378:	test   rax,rax
   14000a37b:	je     0x14000a3a5
   14000a37d:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a380:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a384:	lea    eax,[rcx+0x3]
   14000a387:	movsxd r8,eax
   14000a38a:	lea    eax,[rcx+0x1]
   14000a38d:	mov    rcx,r11
   14000a390:	mov    r8,QWORD PTR [rdi+r8*8]
   14000a394:	movsxd rdx,eax
   14000a397:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14000a39b:	call   0x1400032a0
   14000a3a0:	mov    rdi,rax
   14000a3a3:	jmp    0x14000a3a8
   14000a3a5:	mov    rdi,r12
   14000a3a8:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a3ac:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a3b0:	add    rdx,rdx
   14000a3b3:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a3b6:	mov    DWORD PTR [rdi+0x20],eax
   14000a3b9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a3bd:	mov    DWORD PTR [rdi+0x24],eax
   14000a3c0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a3c4:	mov    DWORD PTR [rdi+0x28],eax
   14000a3c7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a3cb:	mov    DWORD PTR [rdi+0x2c],eax
   14000a3ce:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a3d2:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a3d6:	add    rdx,0x2
   14000a3da:	add    rdx,rdx
   14000a3dd:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a3e0:	mov    DWORD PTR [rdi+0x30],eax
   14000a3e3:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a3e7:	mov    DWORD PTR [rdi+0x34],eax
   14000a3ea:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a3ee:	mov    DWORD PTR [rdi+0x38],eax
   14000a3f1:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a3f5:	mov    DWORD PTR [rdi+0x3c],eax
   14000a3f8:	jmp    0x1400052d9
   14000a3fd:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a401:	mov    ecx,0x38
   14000a406:	call   0x140004140
   14000a40b:	mov    rdi,rax
   14000a40e:	test   rax,rax
   14000a411:	je     0x14000a431
   14000a413:	mov    eax,DWORD PTR [rbp+0x10]
   14000a416:	mov    rdx,QWORD PTR [rbp+0x18]
   14000a41a:	add    eax,0x2
   14000a41d:	movsxd rcx,eax
   14000a420:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000a424:	mov    rcx,rdi
   14000a427:	call   0x140003330
   14000a42c:	mov    rdi,rax
   14000a42f:	jmp    0x14000a434
   14000a431:	mov    rdi,r12
   14000a434:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a438:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a43c:	add    rdx,rdx
   14000a43f:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a442:	mov    DWORD PTR [rdi+0x18],eax
   14000a445:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a449:	mov    DWORD PTR [rdi+0x1c],eax
   14000a44c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a450:	mov    DWORD PTR [rdi+0x20],eax
   14000a453:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a457:	mov    DWORD PTR [rdi+0x24],eax
   14000a45a:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a45e:	inc    rdx
   14000a461:	jmp    0x1400059d5
   14000a466:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a46a:	mov    ecx,0x48
   14000a46f:	call   0x140004140
   14000a474:	mov    rdi,rax
   14000a477:	test   rax,rax
   14000a47a:	je     0x14000a4a5
   14000a47c:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a480:	mov    r8,QWORD PTR [rbp+0x18]
   14000a484:	lea    eax,[rcx+0x2]
   14000a487:	mov    rdx,rcx
   14000a48a:	mov    rcx,rdi
   14000a48d:	cdqe   
   14000a48f:	shl    rdx,0x4
   14000a493:	mov    r8,QWORD PTR [r8+rax*8]
   14000a497:	add    rdx,QWORD PTR [rbp+0x30]
   14000a49b:	call   0x1400033c0
   14000a4a0:	mov    rdi,rax
   14000a4a3:	jmp    0x14000a4a8
   14000a4a5:	mov    rdi,r12
   14000a4a8:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a4ac:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a4b0:	add    rdx,rdx
   14000a4b3:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a4b6:	mov    DWORD PTR [rdi+0x28],eax
   14000a4b9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a4bd:	mov    DWORD PTR [rdi+0x2c],eax
   14000a4c0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a4c4:	mov    DWORD PTR [rdi+0x30],eax
   14000a4c7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a4cb:	mov    DWORD PTR [rdi+0x34],eax
   14000a4ce:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a4d2:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a4d6:	inc    rdx
   14000a4d9:	add    rdx,rdx
   14000a4dc:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a4df:	mov    DWORD PTR [rdi+0x38],eax
   14000a4e2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a4e6:	mov    DWORD PTR [rdi+0x3c],eax
   14000a4e9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a4ed:	mov    DWORD PTR [rdi+0x40],eax
   14000a4f0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a4f4:	mov    DWORD PTR [rdi+0x44],eax
   14000a4f7:	jmp    0x1400052d9
   14000a4fc:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a500:	mov    ecx,0x38
   14000a505:	call   0x140004140
   14000a50a:	mov    rdi,rax
   14000a50d:	test   rax,rax
   14000a510:	je     0x1400078d2
   14000a516:	mov    eax,DWORD PTR [rbp+0x10]
   14000a519:	mov    rdx,QWORD PTR [rbp+0x18]
   14000a51d:	inc    eax
   14000a51f:	movsxd rcx,eax
   14000a522:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000a526:	mov    rcx,rdi
   14000a529:	call   0x140003440
   14000a52e:	mov    rdi,rax
   14000a531:	jmp    0x1400078d5
   14000a536:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a53a:	mov    ecx,0x38
   14000a53f:	call   0x140004140
   14000a544:	mov    r11,rax
   14000a547:	test   rax,rax
   14000a54a:	je     0x14000a595
   14000a54c:	mov    rax,QWORD PTR [rbp+0x18]
   14000a550:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a554:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14000a559:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000a55e:	lea    rax,[rip+0xc483]        # 0x1400169e8
   14000a565:	mov    QWORD PTR [r11],rax
   14000a568:	mov    QWORD PTR [r11+0x10],rdx
   14000a56c:	mov    QWORD PTR [r11+0x18],rdi
   14000a570:	mov    QWORD PTR [r11+0x20],r12
   14000a574:	mov    DWORD PTR [r11+0x28],r12d
   14000a578:	mov    DWORD PTR [r11+0x2c],r12d
   14000a57c:	mov    DWORD PTR [r11+0x30],r12d
   14000a580:	mov    DWORD PTR [r11+0x34],r12d
   14000a584:	mov    DWORD PTR [r11+0x8],0x44
   14000a58c:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a590:	jmp    0x140005c01
   14000a595:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a599:	mov    r11,r12
   14000a59c:	jmp    0x140005c01
   14000a5a1:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a5a5:	mov    ecx,0x38
   14000a5aa:	call   0x140004140
   14000a5af:	mov    r11,rax
   14000a5b2:	test   rax,rax
   14000a5b5:	je     0x14000a595
   14000a5b7:	mov    rax,QWORD PTR [rbp+0x18]
   14000a5bb:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a5bf:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14000a5c4:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000a5c9:	lea    rax,[rip+0xc418]        # 0x1400169e8
   14000a5d0:	mov    QWORD PTR [r11],rax
   14000a5d3:	mov    QWORD PTR [r11+0x10],rdx
   14000a5d7:	mov    QWORD PTR [r11+0x18],r12
   14000a5db:	mov    QWORD PTR [r11+0x20],rdi
   14000a5df:	jmp    0x14000a574
   14000a5e1:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a5e5:	mov    ecx,0x38
   14000a5ea:	call   0x140004140
   14000a5ef:	mov    r11,rax
   14000a5f2:	test   rax,rax
   14000a5f5:	je     0x14000a595
   14000a5f7:	mov    rax,QWORD PTR [rbp+0x18]
   14000a5fb:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a5ff:	mov    rdi,QWORD PTR [rax+rcx*8+0x18]
   14000a604:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14000a609:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   14000a60e:	lea    rax,[rip+0xc3d3]        # 0x1400169e8
   14000a615:	mov    QWORD PTR [r11],rax
   14000a618:	mov    QWORD PTR [r11+0x10],rcx
   14000a61c:	mov    QWORD PTR [r11+0x18],rdx
   14000a620:	mov    QWORD PTR [r11+0x20],rdi
   14000a624:	jmp    0x14000a574
   14000a629:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a62d:	mov    ecx,0x68
   14000a632:	call   0x140004140
   14000a637:	mov    r11,rax
   14000a63a:	test   rax,rax
   14000a63d:	je     0x14000a66b
   14000a63f:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a642:	mov    r8,QWORD PTR [rbp+0x18]
   14000a646:	lea    eax,[rcx+0x4]
   14000a649:	movsxd rdi,eax
   14000a64c:	lea    eax,[rcx+0x2]
   14000a64f:	mov    rcx,r11
   14000a652:	mov    r8,QWORD PTR [r8+rdi*8]
   14000a656:	movsxd rdx,eax
   14000a659:	shl    rdx,0x4
   14000a65d:	add    rdx,QWORD PTR [rbp+0x30]
   14000a661:	call   0x140003480
   14000a666:	mov    rdi,rax
   14000a669:	jmp    0x14000a66e
   14000a66b:	mov    rdi,r12
   14000a66e:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a672:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a676:	add    rdx,rdx
   14000a679:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a67c:	mov    DWORD PTR [rdi+0x28],eax
   14000a67f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a683:	mov    DWORD PTR [rdi+0x2c],eax
   14000a686:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a68a:	mov    DWORD PTR [rdi+0x30],eax
   14000a68d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a691:	mov    DWORD PTR [rdi+0x34],eax
   14000a694:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a698:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a69c:	inc    rdx
   14000a69f:	add    rdx,rdx
   14000a6a2:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a6a5:	mov    DWORD PTR [rdi+0x38],eax
   14000a6a8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a6ac:	mov    DWORD PTR [rdi+0x3c],eax
   14000a6af:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a6b3:	mov    DWORD PTR [rdi+0x40],eax
   14000a6b6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a6ba:	mov    DWORD PTR [rdi+0x44],eax
   14000a6bd:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a6c1:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a6c5:	add    rdx,0x2
   14000a6c9:	add    rdx,rdx
   14000a6cc:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a6cf:	mov    DWORD PTR [rdi+0x48],eax
   14000a6d2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a6d6:	mov    DWORD PTR [rdi+0x4c],eax
   14000a6d9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a6dd:	mov    DWORD PTR [rdi+0x50],eax
   14000a6e0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a6e4:	mov    DWORD PTR [rdi+0x54],eax
   14000a6e7:	jmp    0x140005ed4
   14000a6ec:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a6f0:	mov    ecx,0x28
   14000a6f5:	call   0x140004140
   14000a6fa:	mov    rdi,rax
   14000a6fd:	test   rax,rax
   14000a700:	je     0x14000724b
   14000a706:	mov    rax,QWORD PTR [rbp+0x18]
   14000a70a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a70e:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000a713:	lea    rax,[rip+0xc27e]        # 0x140016998
   14000a71a:	mov    QWORD PTR [rdi],rax
   14000a71d:	mov    QWORD PTR [rdi+0x10],rdx
   14000a721:	mov    DWORD PTR [rdi+0x18],r12d
   14000a725:	mov    DWORD PTR [rdi+0x1c],r12d
   14000a729:	mov    DWORD PTR [rdi+0x20],r12d
   14000a72d:	mov    DWORD PTR [rdi+0x24],r12d
   14000a731:	mov    DWORD PTR [rdi+0x8],0x19
   14000a738:	jmp    0x14000724e
   14000a73d:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a741:	mov    ecx,0x30
   14000a746:	call   0x140004140
   14000a74b:	test   rax,rax
   14000a74e:	je     0x14000a75d
   14000a750:	mov    rcx,rax
   14000a753:	call   0x140003920
   14000a758:	mov    rdi,rax
   14000a75b:	jmp    0x14000a760
   14000a75d:	mov    rdi,r12
   14000a760:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a764:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a768:	add    rdx,rdx
   14000a76b:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a76e:	mov    DWORD PTR [rdi+0x10],eax
   14000a771:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a775:	mov    DWORD PTR [rdi+0x14],eax
   14000a778:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a77c:	mov    DWORD PTR [rdi+0x18],eax
   14000a77f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a783:	mov    DWORD PTR [rdi+0x1c],eax
   14000a786:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a78a:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a78e:	inc    rdx
   14000a791:	add    rdx,rdx
   14000a794:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a797:	mov    DWORD PTR [rdi+0x20],eax
   14000a79a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a79e:	mov    DWORD PTR [rdi+0x24],eax
   14000a7a1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a7a5:	mov    DWORD PTR [rdi+0x28],eax
   14000a7a8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a7ac:	mov    DWORD PTR [rdi+0x2c],eax
   14000a7af:	jmp    0x1400052d9
   14000a7b4:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a7b8:	mov    ecx,0x90
   14000a7bd:	call   0x140004140
   14000a7c2:	mov    r11,rax
   14000a7c5:	test   rax,rax
   14000a7c8:	je     0x14000a800
   14000a7ca:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a7cd:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a7d1:	lea    eax,[rcx+0x6]
   14000a7d4:	movsxd r9,eax
   14000a7d7:	lea    eax,[rcx+0x3]
   14000a7da:	mov    r9,QWORD PTR [rdi+r9*8]
   14000a7de:	movsxd r8,eax
   14000a7e1:	lea    eax,[rcx+0x1]
   14000a7e4:	mov    r8,QWORD PTR [rdi+r8*8]
   14000a7e8:	movsxd rdx,eax
   14000a7eb:	mov    rcx,r11
   14000a7ee:	shl    rdx,0x4
   14000a7f2:	add    rdx,QWORD PTR [rbp+0x30]
   14000a7f6:	call   0x140003680
   14000a7fb:	mov    rdi,rax
   14000a7fe:	jmp    0x14000a803
   14000a800:	mov    rdi,r12
   14000a803:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a807:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a80b:	add    rdx,rdx
   14000a80e:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a811:	mov    DWORD PTR [rdi+0x30],eax
   14000a814:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a818:	mov    DWORD PTR [rdi+0x34],eax
   14000a81b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a81f:	mov    DWORD PTR [rdi+0x38],eax
   14000a822:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a826:	mov    DWORD PTR [rdi+0x3c],eax
   14000a829:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a82d:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a831:	inc    rdx
   14000a834:	add    rdx,rdx
   14000a837:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a83a:	mov    DWORD PTR [rdi+0x40],eax
   14000a83d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a841:	mov    DWORD PTR [rdi+0x44],eax
   14000a844:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a848:	mov    DWORD PTR [rdi+0x48],eax
   14000a84b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a84f:	mov    DWORD PTR [rdi+0x4c],eax
   14000a852:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a856:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a85a:	add    rdx,0x2
   14000a85e:	add    rdx,rdx
   14000a861:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a864:	mov    DWORD PTR [rdi+0x50],eax
   14000a867:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a86b:	mov    DWORD PTR [rdi+0x54],eax
   14000a86e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a872:	mov    DWORD PTR [rdi+0x58],eax
   14000a875:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a879:	mov    DWORD PTR [rdi+0x5c],eax
   14000a87c:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a880:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a884:	add    rdx,0x4
   14000a888:	add    rdx,rdx
   14000a88b:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a88e:	mov    DWORD PTR [rdi+0x60],eax
   14000a891:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a895:	mov    DWORD PTR [rdi+0x64],eax
   14000a898:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a89c:	mov    DWORD PTR [rdi+0x68],eax
   14000a89f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a8a3:	mov    DWORD PTR [rdi+0x6c],eax
   14000a8a6:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a8aa:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a8ae:	add    rdx,0x5
   14000a8b2:	add    rdx,rdx
   14000a8b5:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a8b8:	mov    DWORD PTR [rdi+0x70],eax
   14000a8bb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a8bf:	mov    DWORD PTR [rdi+0x74],eax
   14000a8c2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a8c6:	mov    DWORD PTR [rdi+0x78],eax
   14000a8c9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a8cd:	mov    DWORD PTR [rdi+0x7c],eax
   14000a8d0:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a8d4:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a8d8:	add    rdx,0x7
   14000a8dc:	add    rdx,rdx
   14000a8df:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a8e2:	mov    DWORD PTR [rdi+0x80],eax
   14000a8e8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a8ec:	mov    DWORD PTR [rdi+0x84],eax
   14000a8f2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a8f6:	mov    DWORD PTR [rdi+0x88],eax
   14000a8fc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a900:	mov    DWORD PTR [rdi+0x8c],eax
   14000a906:	jmp    0x1400052d9
   14000a90b:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a90f:	mov    ecx,0x90
   14000a914:	call   0x140004140
   14000a919:	mov    r11,rax
   14000a91c:	test   rax,rax
   14000a91f:	je     0x14000a957
   14000a921:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a924:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a928:	lea    eax,[rcx+0x6]
   14000a92b:	movsxd r9,eax
   14000a92e:	lea    eax,[rcx+0x3]
   14000a931:	mov    r9,QWORD PTR [rdi+r9*8]
   14000a935:	movsxd r8,eax
   14000a938:	lea    eax,[rcx+0x1]
   14000a93b:	mov    r8,QWORD PTR [rdi+r8*8]
   14000a93f:	movsxd rdx,eax
   14000a942:	mov    rcx,r11
   14000a945:	shl    rdx,0x4
   14000a949:	add    rdx,QWORD PTR [rbp+0x30]
   14000a94d:	call   0x1400035a0
   14000a952:	mov    rdi,rax
   14000a955:	jmp    0x14000a95a
   14000a957:	mov    rdi,r12
   14000a95a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a95e:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a962:	add    rdx,rdx
   14000a965:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a968:	mov    DWORD PTR [rdi+0x30],eax
   14000a96b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a96f:	mov    DWORD PTR [rdi+0x34],eax
   14000a972:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a976:	mov    DWORD PTR [rdi+0x38],eax
   14000a979:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a97d:	mov    DWORD PTR [rdi+0x3c],eax
   14000a980:	mov    eax,DWORD PTR [rbp+0x10]
   14000a983:	inc    eax
   14000a985:	movsxd rcx,eax
   14000a988:	shl    rcx,0x4
   14000a98c:	add    rcx,QWORD PTR [rbp+0x30]
   14000a990:	call   QWORD PTR [rip+0xa842]        # 0x1400151d8
   14000a996:	test   al,al
   14000a998:	jne    0x14000a9c3
   14000a99a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a99e:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a9a2:	inc    rdx
   14000a9a5:	add    rdx,rdx
   14000a9a8:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a9ab:	mov    DWORD PTR [rdi+0x40],eax
   14000a9ae:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a9b2:	mov    DWORD PTR [rdi+0x44],eax
   14000a9b5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a9b9:	mov    DWORD PTR [rdi+0x48],eax
   14000a9bc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a9c0:	mov    DWORD PTR [rdi+0x4c],eax
   14000a9c3:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a9c7:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a9cb:	add    rdx,0x2
   14000a9cf:	add    rdx,rdx
   14000a9d2:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a9d5:	mov    DWORD PTR [rdi+0x50],eax
   14000a9d8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a9dc:	mov    DWORD PTR [rdi+0x54],eax
   14000a9df:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a9e3:	mov    DWORD PTR [rdi+0x58],eax
   14000a9e6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a9ea:	mov    DWORD PTR [rdi+0x5c],eax
   14000a9ed:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a9f1:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a9f5:	add    rdx,0x4
   14000a9f9:	add    rdx,rdx
   14000a9fc:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a9ff:	mov    DWORD PTR [rdi+0x60],eax
   14000aa02:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000aa06:	mov    DWORD PTR [rdi+0x64],eax
   14000aa09:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000aa0d:	mov    DWORD PTR [rdi+0x68],eax
   14000aa10:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000aa14:	mov    DWORD PTR [rdi+0x6c],eax
   14000aa17:	mov    rcx,QWORD PTR [rbp+0x28]
   14000aa1b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000aa1f:	add    rdx,0x5
   14000aa23:	add    rdx,rdx
   14000aa26:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000aa29:	mov    DWORD PTR [rdi+0x70],eax
   14000aa2c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000aa30:	mov    DWORD PTR [rdi+0x74],eax
   14000aa33:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000aa37:	mov    DWORD PTR [rdi+0x78],eax
   14000aa3a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000aa3e:	mov    DWORD PTR [rdi+0x7c],eax
   14000aa41:	mov    rcx,QWORD PTR [rbp+0x28]
   14000aa45:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000aa49:	add    rdx,0x7
   14000aa4d:	add    rdx,rdx
   14000aa50:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000aa53:	mov    DWORD PTR [rdi+0x80],eax
   14000aa59:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000aa5d:	mov    DWORD PTR [rdi+0x84],eax
   14000aa63:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000aa67:	mov    DWORD PTR [rdi+0x88],eax
   14000aa6d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000aa71:	mov    DWORD PTR [rdi+0x8c],eax
   14000aa77:	jmp    0x1400052d9
   14000aa7c:	mov    rdx,QWORD PTR [rbp+0x8]
   14000aa80:	mov    ecx,0x90
   14000aa85:	call   0x140004140
   14000aa8a:	mov    r13,rax
   14000aa8d:	test   rax,rax
   14000aa90:	je     0x14000aad7
   14000aa92:	mov    ecx,DWORD PTR [rbp+0x10]
   14000aa95:	bts    esi,0x8
   14000aa99:	lea    eax,[rcx+0x5]
   14000aa9c:	mov    DWORD PTR [rsp+0x30],esi
   14000aaa0:	mov    rsi,QWORD PTR [rbp+0x18]
   14000aaa4:	movsxd rbx,eax
   14000aaa7:	lea    eax,[rcx+0x2]
   14000aaaa:	lea    rcx,[rsp+0x2f0]
   14000aab2:	movsxd rdi,eax
   14000aab5:	call   QWORD PTR [rip+0xa72d]        # 0x1400151e8
   14000aabb:	mov    r9,QWORD PTR [rsi+rbx*8]
   14000aabf:	mov    r8,QWORD PTR [rsi+rdi*8]
   14000aac3:	mov    rcx,r13
   14000aac6:	mov    rdx,rax
   14000aac9:	call   0x1400035a0
   14000aace:	mov    esi,DWORD PTR [rsp+0x30]
   14000aad2:	mov    rdi,rax
   14000aad5:	jmp    0x14000aada
   14000aad7:	mov    rdi,r12
   14000aada:	bt     esi,0x8
   14000aade:	jae    0x14000aaf6
   14000aae0:	btr    esi,0x8
   14000aae4:	lea    rcx,[rsp+0x2f0]
   14000aaec:	mov    DWORD PTR [rsp+0x30],esi
   14000aaf0:	call   QWORD PTR [rip+0xa6ea]        # 0x1400151e0
   14000aaf6:	mov    rcx,QWORD PTR [rbp+0x28]
   14000aafa:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000aafe:	add    rdx,rdx
   14000ab01:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ab04:	mov    DWORD PTR [rdi+0x30],eax
   14000ab07:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ab0b:	mov    DWORD PTR [rdi+0x34],eax
   14000ab0e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ab12:	mov    DWORD PTR [rdi+0x38],eax
   14000ab15:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ab19:	mov    DWORD PTR [rdi+0x3c],eax
   14000ab1c:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ab20:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ab24:	inc    rdx
   14000ab27:	add    rdx,rdx
   14000ab2a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ab2d:	mov    DWORD PTR [rdi+0x50],eax
   14000ab30:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ab34:	mov    DWORD PTR [rdi+0x54],eax
   14000ab37:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ab3b:	mov    DWORD PTR [rdi+0x58],eax
   14000ab3e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ab42:	mov    DWORD PTR [rdi+0x5c],eax
   14000ab45:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ab49:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ab4d:	add    rdx,0x3
   14000ab51:	add    rdx,rdx
   14000ab54:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ab57:	mov    DWORD PTR [rdi+0x60],eax
   14000ab5a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ab5e:	mov    DWORD PTR [rdi+0x64],eax
   14000ab61:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ab65:	mov    DWORD PTR [rdi+0x68],eax
   14000ab68:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ab6c:	mov    DWORD PTR [rdi+0x6c],eax
   14000ab6f:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ab73:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ab77:	add    rdx,0x4
   14000ab7b:	add    rdx,rdx
   14000ab7e:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ab81:	mov    DWORD PTR [rdi+0x70],eax
   14000ab84:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ab88:	mov    DWORD PTR [rdi+0x74],eax
   14000ab8b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ab8f:	mov    DWORD PTR [rdi+0x78],eax
   14000ab92:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ab96:	mov    DWORD PTR [rdi+0x7c],eax
   14000ab99:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ab9d:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000aba1:	add    rdx,0x6
   14000aba5:	add    rdx,rdx
   14000aba8:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000abab:	mov    DWORD PTR [rdi+0x80],eax
   14000abb1:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000abb5:	mov    DWORD PTR [rdi+0x84],eax
   14000abbb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000abbf:	mov    DWORD PTR [rdi+0x88],eax
   14000abc5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000abc9:	mov    DWORD PTR [rdi+0x8c],eax
   14000abcf:	jmp    0x1400052d9
   14000abd4:	mov    rdx,QWORD PTR [rbp+0x8]
   14000abd8:	mov    ecx,0x48
   14000abdd:	call   0x140004140
   14000abe2:	test   rax,rax
   14000abe5:	je     0x14000ac00
   14000abe7:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000abeb:	mov    rcx,rax
   14000abee:	shl    rdx,0x4
   14000abf2:	add    rdx,QWORD PTR [rbp+0x30]
   14000abf6:	call   0x140003730
   14000abfb:	mov    rdi,rax
   14000abfe:	jmp    0x14000ac03
   14000ac00:	mov    rdi,r12
   14000ac03:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ac07:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ac0b:	add    rdx,rdx
   14000ac0e:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ac11:	mov    DWORD PTR [rdi+0x38],eax
   14000ac14:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ac18:	mov    DWORD PTR [rdi+0x3c],eax
   14000ac1b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ac1f:	mov    DWORD PTR [rdi+0x40],eax
   14000ac22:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ac26:	mov    DWORD PTR [rdi+0x44],eax
   14000ac29:	jmp    0x1400052d9
   14000ac2e:	mov    rdx,QWORD PTR [rbp+0x8]
   14000ac32:	mov    ecx,0x48
   14000ac37:	call   0x140004140
   14000ac3c:	mov    rdi,rax
   14000ac3f:	test   rax,rax
   14000ac42:	je     0x1400082f9
   14000ac48:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ac4c:	mov    rdx,QWORD PTR [rbp+0x18]
   14000ac50:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000ac54:	lea    eax,[rcx+0x2]
   14000ac57:	mov    rcx,rdi
   14000ac5a:	movsxd r8,eax
   14000ac5d:	shl    r8,0x4
   14000ac61:	add    r8,QWORD PTR [rbp+0x30]
   14000ac65:	call   0x140003790
   14000ac6a:	mov    rdi,rax
   14000ac6d:	jmp    0x1400082fc
   14000ac72:	mov    rax,QWORD PTR [rbp+0x18]
   14000ac76:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000ac7a:	mov    rdi,QWORD PTR [rdx+0x20]
   14000ac7e:	mov    QWORD PTR [rdx+0x20],r12
   14000ac82:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ac86:	mov    rax,QWORD PTR [rbp+0x18]
   14000ac8a:	mov    QWORD PTR [rax+rcx*8],rdi
   14000ac8e:	jmp    0x14000ae40
   14000ac93:	mov    rdx,QWORD PTR [rbp+0x8]
   14000ac97:	mov    ecx,0x18
   14000ac9c:	call   0x140004140
   14000aca1:	mov    rdi,rax
   14000aca4:	test   rax,rax
   14000aca7:	je     0x1400052d6
   14000acad:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000acb1:	mov    rax,QWORD PTR [rbp+0x18]
   14000acb5:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000acb9:	lea    rcx,[rip+0xbeb8]        # 0x140016b78
   14000acc0:	mov    rax,QWORD PTR [rdx+0x18]
   14000acc4:	mov    QWORD PTR [rdx+0x18],r12
   14000acc8:	mov    QWORD PTR [rdi],rcx
   14000accb:	mov    QWORD PTR [rdi+0x10],rax
   14000accf:	mov    DWORD PTR [rdi+0x8],0x1d
   14000acd6:	jmp    0x1400052d9
   14000acdb:	mov    rdx,QWORD PTR [rbp+0x8]
   14000acdf:	mov    ecx,0x18
   14000ace4:	call   0x140004140
   14000ace9:	mov    rdi,rax
   14000acec:	test   rax,rax
   14000acef:	je     0x1400052d6
   14000acf5:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000acf9:	mov    rax,QWORD PTR [rbp+0x18]
   14000acfd:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000ad01:	lea    rcx,[rip+0xbec0]        # 0x140016bc8
   14000ad08:	mov    rax,QWORD PTR [rdx+0x18]
   14000ad0c:	mov    QWORD PTR [rdx+0x18],r12
   14000ad10:	mov    QWORD PTR [rdi],rcx
   14000ad13:	mov    QWORD PTR [rdi+0x10],rax
   14000ad17:	mov    DWORD PTR [rdi+0x8],0x32
   14000ad1e:	jmp    0x1400052d9
   14000ad23:	mov    rdx,QWORD PTR [rbp+0x8]
   14000ad27:	mov    ecx,0x20
   14000ad2c:	call   0x140004140
   14000ad31:	mov    rdi,rax
   14000ad34:	test   rax,rax
   14000ad37:	je     0x1400052d6
   14000ad3d:	mov    rax,QWORD PTR [rbp+0x18]
   14000ad41:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ad45:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000ad49:	lea    rax,[rip+0xbdd8]        # 0x140016b28
   14000ad50:	mov    QWORD PTR [rdi],rax
   14000ad53:	mov    QWORD PTR [rdi+0x10],rdx
   14000ad57:	mov    QWORD PTR [rdi+0x18],rdi
   14000ad5b:	mov    DWORD PTR [rdi+0x8],0x3a
   14000ad62:	jmp    0x1400052d9
   14000ad67:	mov    rdx,QWORD PTR [rbp+0x8]
   14000ad6b:	mov    ecx,0x20
   14000ad70:	call   0x140004140
   14000ad75:	mov    rdi,rax
   14000ad78:	test   rax,rax
   14000ad7b:	je     0x1400052d6
   14000ad81:	mov    rax,QWORD PTR [rbp+0x18]
   14000ad85:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ad89:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000ad8e:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000ad92:	lea    rax,[rip+0xbd8f]        # 0x140016b28
   14000ad99:	mov    QWORD PTR [rdi],rax
   14000ad9c:	mov    QWORD PTR [rdi+0x10],rdx
   14000ada0:	mov    DWORD PTR [rdi+0x8],0x3a
   14000ada7:	mov    rax,QWORD PTR [rcx+0x18]
   14000adab:	mov    QWORD PTR [rdi+0x18],rax
   14000adaf:	mov    QWORD PTR [rcx+0x18],rdi
   14000adb3:	jmp    0x1400052d9
   14000adb8:	mov    rdx,QWORD PTR [rbp+0x8]
   14000adbc:	mov    ecx,0x18
   14000adc1:	call   0x140004140
   14000adc6:	mov    rdi,rax
   14000adc9:	test   rax,rax
   14000adcc:	je     0x1400052d6
   14000add2:	mov    rax,QWORD PTR [rbp+0x18]
   14000add6:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000adda:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000adde:	lea    rax,[rip+0xbe83]        # 0x140016c68
   14000ade5:	mov    QWORD PTR [rdi],rax
   14000ade8:	mov    QWORD PTR [rdi+0x10],rdx
   14000adec:	mov    DWORD PTR [rdi+0x8],0x3c
   14000adf3:	jmp    0x1400052d9
   14000adf8:	mov    rdx,QWORD PTR [rbp+0x8]
   14000adfc:	mov    ecx,0x18
   14000ae01:	call   0x140004140
   14000ae06:	mov    rdi,rax
   14000ae09:	test   rax,rax
   14000ae0c:	je     0x1400052d6
   14000ae12:	mov    rax,QWORD PTR [rbp+0x18]
   14000ae16:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ae1a:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000ae1e:	lea    rax,[rip+0xbdf3]        # 0x140016c18
   14000ae25:	mov    QWORD PTR [rdi],rax
   14000ae28:	mov    QWORD PTR [rdi+0x10],rdx
   14000ae2c:	mov    DWORD PTR [rdi+0x8],0x20
   14000ae33:	jmp    0x1400052d9
   14000ae38:	mov    rax,QWORD PTR [rbp+0x18]
   14000ae3c:	mov    QWORD PTR [rax+rdx*8],r12
   14000ae40:	mov    rax,QWORD PTR [rbp+0x20]
   14000ae44:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ae48:	movsx  edi,WORD PTR [r9+r14*2+0x17c00]
   14000ae51:	movsxd rdx,DWORD PTR [rax+rcx*4]
   14000ae55:	sub    edi,0x6a
   14000ae58:	movsx  eax,WORD PTR [r9+rdx*2+0x18cf4]
   14000ae61:	add    eax,edi
   14000ae63:	js     0x14000ae80
   14000ae65:	movsxd rcx,eax
   14000ae68:	movsx  eax,WORD PTR [r9+rcx*2+0x1c604]
   14000ae71:	cmp    eax,edi
   14000ae73:	jne    0x14000ae80
   14000ae75:	movsx  r13d,WORD PTR [r9+rcx*2+0x1a9c4]
   14000ae7e:	jmp    0x14000ae8c
   14000ae80:	movsxd rax,edi
   14000ae83:	movsx  r13d,WORD PTR [r9+rax*2+0x186e0]
   14000ae8c:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ae91:	lea    r14,[rbp+0x78]
   14000ae95:	test   r13d,r13d
   14000ae98:	jne    0x140004ef7
   14000ae9e:	mov    rax,QWORD PTR [rbp+0x110]
   14000aea5:	cmp    QWORD PTR [rbp+0x108],rax
   14000aeac:	jne    0x14000bc18
   14000aeb2:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000aeb6:	mov    rax,QWORD PTR [rbp+0x20]
   14000aeba:	movsxd r13,DWORD PTR [rax+rcx*4]
   14000aebe:	cmp    r15d,0xffffffff
   14000aec2:	je     0x14000afe4
   14000aec8:	movsx  eax,WORD PTR [r9+r13*2+0x187c0]
   14000aed1:	add    eax,0x3e
   14000aed4:	js     0x14000aef0
   14000aed6:	movsxd rcx,eax
   14000aed9:	cmp    WORD PTR [r9+rcx*2+0x1ae70],0x3e
   14000aee3:	jne    0x14000aef0
   14000aee5:	movsx  eax,WORD PTR [r9+rcx*2+0x19230]
   14000aeee:	jmp    0x14000aefb
   14000aef0:	movsx  eax,WORD PTR [r9+r13*2+0x181a0]
   14000aef9:	neg    eax
   14000aefb:	test   eax,eax
   14000aefd:	je     0x14000af15
   14000aeff:	mov    edx,r15d
   14000af02:	mov    rcx,rbx
   14000af05:	call   0x14000dd60
   14000af0a:	test   al,al
   14000af0c:	jne    0x14000af50
   14000af0e:	lea    r9,[rip+0xffffffffffff50eb]        # 0x140000000
   14000af15:	movsx  eax,WORD PTR [r9+r13*2+0x187c0]
   14000af1e:	add    eax,0x59
   14000af21:	js     0x14000af3d
   14000af23:	movsxd rcx,eax
   14000af26:	cmp    WORD PTR [r9+rcx*2+0x1ae70],0x59
   14000af30:	jne    0x14000af3d
   14000af32:	movsx  eax,WORD PTR [r9+rcx*2+0x19230]
   14000af3b:	jmp    0x14000af48
   14000af3d:	movsx  eax,WORD PTR [r9+r13*2+0x181a0]
   14000af46:	neg    eax
   14000af48:	test   eax,eax
   14000af4a:	je     0x14000afe4
   14000af50:	mov    DWORD PTR [r14],r15d
   14000af53:	mov    rax,QWORD PTR [rbp+0x40]
   14000af57:	lea    rdx,[rbp+0x48]
   14000af5b:	lea    rcx,[r14+0x20]
   14000af5f:	mov    QWORD PTR [r14+0x8],rax
   14000af63:	call   QWORD PTR [rip+0xa247]        # 0x1400151b0
   14000af69:	mov    eax,DWORD PTR [rbp+0x58]
   14000af6c:	mov    r15d,0x3d
   14000af72:	mov    DWORD PTR [r14+0x10],eax
   14000af76:	mov    eax,DWORD PTR [rbp+0x5c]
   14000af79:	mov    DWORD PTR [r14+0x14],eax
   14000af7d:	mov    eax,DWORD PTR [rbp+0x60]
   14000af80:	mov    DWORD PTR [r14+0x18],eax
   14000af84:	mov    eax,DWORD PTR [rbp+0x64]
   14000af87:	mov    DWORD PTR [r14+0x1c],eax
   14000af8b:	mov    eax,DWORD PTR [rbp+0x68]
   14000af8e:	mov    DWORD PTR [rbp+0x58],eax
   14000af91:	mov    eax,DWORD PTR [rbp+0x6c]
   14000af94:	mov    DWORD PTR [rbp+0x5c],eax
   14000af97:	mov    eax,DWORD PTR [rbp+0x70]
   14000af9a:	mov    DWORD PTR [rbp+0x60],eax
   14000af9d:	mov    eax,DWORD PTR [rbp+0x74]
   14000afa0:	mov    DWORD PTR [rbp+0x64],eax
   14000afa3:	mov    eax,DWORD PTR [rbp+0x5c]
   14000afa6:	add    DWORD PTR [rbp+0x58],eax
   14000afa9:	mov    eax,DWORD PTR [rbp+0x5c]
   14000afac:	add    DWORD PTR [rbp+0x64],eax
   14000afaf:	mov    DWORD PTR [rbp+0x5c],r12d
   14000afb3:	lea    rax,[rbp+0xa8]
   14000afba:	mov    QWORD PTR [rbp+0x108],r14
   14000afc1:	mov    QWORD PTR [rbp+0x40],r12
   14000afc5:	mov    QWORD PTR [rbp+0x110],rax
   14000afcc:	lea    r9,[rip+0xffffffffffff502d]        # 0x140000000
   14000afd3:	mov    edx,0xffffff96
   14000afd8:	lea    rdi,[rip+0xc2c1]        # 0x1400172a0
   14000afdf:	jmp    0x140004f90
   14000afe4:	mov    DWORD PTR [r14],r15d
   14000afe7:	mov    rax,QWORD PTR [rbp+0x40]
   14000afeb:	lea    rcx,[rbp+0x98]
   14000aff2:	lea    rdx,[rbp+0x48]
   14000aff6:	mov    BYTE PTR [rsp+0x418],0x1
   14000affe:	mov    QWORD PTR [rbp+0x80],rax
   14000b005:	call   QWORD PTR [rip+0xa1a5]        # 0x1400151b0
   14000b00b:	mov    eax,DWORD PTR [rbp+0x58]
   14000b00e:	mov    rcx,rbx
   14000b011:	mov    DWORD PTR [rbp+0x88],eax
   14000b017:	mov    eax,DWORD PTR [rbp+0x5c]
   14000b01a:	mov    DWORD PTR [rbp+0x8c],eax
   14000b020:	mov    eax,DWORD PTR [rbp+0x60]
   14000b023:	mov    DWORD PTR [rbp+0x90],eax
   14000b029:	mov    eax,DWORD PTR [rbp+0x64]
   14000b02c:	mov    DWORD PTR [rbp+0x94],eax
   14000b032:	call   0x140010810
   14000b037:	lea    rdx,[rbx+0x20]
   14000b03b:	mov    DWORD PTR [rbp+0xa8],eax
   14000b041:	lea    rcx,[rsp+0x1c0]
   14000b049:	mov    r15d,eax
   14000b04c:	movsd  xmm0,QWORD PTR [rbx+0x68]
   14000b051:	movsd  QWORD PTR [rbp+0x40],xmm0
   14000b056:	movsd  QWORD PTR [rbp+0xb0],xmm0
   14000b05e:	call   QWORD PTR [rip+0xa144]        # 0x1400151a8
   14000b064:	lea    rdx,[rsp+0x1c0]
   14000b06c:	lea    rcx,[rbp+0x48]
   14000b070:	call   QWORD PTR [rip+0xa13a]        # 0x1400151b0
   14000b076:	lea    rcx,[rbp+0xc8]
   14000b07d:	mov    rdx,rax
   14000b080:	call   QWORD PTR [rip+0xa12a]        # 0x1400151b0
   14000b086:	lea    rcx,[rsp+0x1c0]
   14000b08e:	call   QWORD PTR [rip+0xa14c]        # 0x1400151e0
   14000b094:	lea    rcx,[rsp+0x3a0]
   14000b09c:	mov    rdx,rbx
   14000b09f:	call   0x140003f40
   14000b0a4:	lea    r8,[rip+0xffffffffffff4f55]        # 0x140000000
   14000b0ab:	mov    rdx,rax
   14000b0ae:	mov    eax,DWORD PTR [rax]
   14000b0b0:	mov    DWORD PTR [rbp+0x58],eax
   14000b0b3:	mov    eax,DWORD PTR [rdx+0x4]
   14000b0b6:	mov    DWORD PTR [rbp+0x5c],eax
   14000b0b9:	mov    eax,DWORD PTR [rdx+0x8]
   14000b0bc:	mov    DWORD PTR [rbp+0x60],eax
   14000b0bf:	mov    eax,DWORD PTR [rdx+0xc]
   14000b0c2:	mov    DWORD PTR [rbp+0x64],eax
   14000b0c5:	mov    eax,DWORD PTR [rdx]
   14000b0c7:	mov    DWORD PTR [rbp+0xb8],eax
   14000b0cd:	mov    eax,DWORD PTR [rdx+0x4]
   14000b0d0:	mov    DWORD PTR [rbp+0xbc],eax
   14000b0d6:	mov    eax,DWORD PTR [rdx+0x8]
   14000b0d9:	mov    DWORD PTR [rbp+0xc0],eax
   14000b0df:	mov    eax,DWORD PTR [rdx+0xc]
   14000b0e2:	mov    DWORD PTR [rbp+0xc4],eax
   14000b0e8:	movsx  eax,WORD PTR [r8+r13*2+0x187c0]
   14000b0f1:	add    eax,r15d
   14000b0f4:	js     0x14000b112
   14000b0f6:	movsxd rcx,eax
   14000b0f9:	movsx  eax,WORD PTR [r8+rcx*2+0x1ae70]
   14000b102:	cmp    eax,r15d
   14000b105:	jne    0x14000b112
   14000b107:	movsx  eax,WORD PTR [r8+rcx*2+0x19230]
   14000b110:	jmp    0x14000b11d
   14000b112:	movsx  eax,WORD PTR [r8+r13*2+0x181a0]
   14000b11b:	neg    eax
   14000b11d:	test   eax,eax
   14000b11f:	je     0x14000b333
   14000b125:	lea    rcx,[rsp+0x50]
   14000b12a:	call   QWORD PTR [rip+0xa0c0]        # 0x1400151f0
   14000b130:	movsxd rdx,DWORD PTR [r14]
   14000b133:	cmp    edx,0x69
   14000b136:	ja     0x14000b236
   14000b13c:	mov    rax,rdx
   14000b13f:	lea    rdx,[rip+0xffffffffffff4eba]        # 0x140000000
   14000b146:	mov    rdx,QWORD PTR [rdx+rax*8+0x178b0]
   14000b14e:	test   rdx,rdx
   14000b151:	je     0x14000b16d
   14000b153:	or     rcx,0xffffffffffffffff
   14000b157:	xor    eax,eax
   14000b159:	mov    rdi,rdx
   14000b15c:	repnz scas al,BYTE PTR es:[rdi]
   14000b15e:	not    rcx
   14000b161:	dec    rcx
   14000b164:	mov    DWORD PTR [rsp+0x180],ecx
   14000b16b:	jmp    0x14000b175
   14000b16d:	mov    DWORD PTR [rsp+0x180],r12d
   14000b175:	mov    QWORD PTR [rsp+0x188],rdx
   14000b17d:	movaps xmm0,XMMWORD PTR [rsp+0x180]
   14000b185:	lea    rcx,[rsp+0x100]
   14000b18d:	lea    rdx,[rsp+0x330]
   14000b195:	movdqa XMMWORD PTR [rsp+0x330],xmm0
   14000b19e:	call   QWORD PTR [rip+0x9fbc]        # 0x140015160
   14000b1a4:	lea    rcx,[rsp+0x410]
   14000b1ac:	mov    dl,0x20
   14000b1ae:	call   QWORD PTR [rip+0xa01c]        # 0x1400151d0
   14000b1b4:	lea    r8,[rip+0xc0cd]        # 0x140017288
   14000b1bb:	lea    rdx,[rip+0xc0b6]        # 0x140017278
   14000b1c2:	lea    rcx,[rsp+0x168]
   14000b1ca:	xor    r9d,r9d
   14000b1cd:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b1d5:	mov    rdi,rax
   14000b1d8:	call   QWORD PTR [rip+0x9fea]        # 0x1400151c8
   14000b1de:	lea    r8,[rsp+0x100]
   14000b1e6:	mov    rcx,rax
   14000b1e9:	movzx  eax,WORD PTR [rdi]
   14000b1ec:	lea    rdx,[rsp+0x170]
   14000b1f4:	xor    r9d,r9d
   14000b1f7:	mov    WORD PTR [rsp+0x20],ax
   14000b1fc:	call   QWORD PTR [rip+0x9fbe]        # 0x1400151c0
   14000b202:	lea    rcx,[rsp+0x50]
   14000b207:	mov    rdx,rax
   14000b20a:	call   QWORD PTR [rip+0x9fa8]        # 0x1400151b8
   14000b210:	lea    rcx,[rsp+0x170]
   14000b218:	call   QWORD PTR [rip+0xa19a]        # 0x1400153b8
   14000b21e:	lea    rcx,[rsp+0x168]
   14000b226:	call   QWORD PTR [rip+0xa18c]        # 0x1400153b8
   14000b22c:	lea    rcx,[rsp+0x100]
   14000b234:	jmp    0x14000b273
   14000b236:	lea    r8,[rip+0xc02b]        # 0x140017268
   14000b23d:	lea    rdx,[rip+0xc034]        # 0x140017278
   14000b244:	lea    rcx,[rsp+0x160]
   14000b24c:	xor    r9d,r9d
   14000b24f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b257:	call   QWORD PTR [rip+0x9f6b]        # 0x1400151c8
   14000b25d:	lea    rcx,[rsp+0x50]
   14000b262:	mov    rdx,rax
   14000b265:	call   QWORD PTR [rip+0x9f4d]        # 0x1400151b8
   14000b26b:	lea    rcx,[rsp+0x160]
   14000b273:	call   QWORD PTR [rip+0xa13f]        # 0x1400153b8
   14000b279:	mov    DWORD PTR [rsp+0x1a0],0x1
   14000b284:	mov    eax,DWORD PTR [rbp+0x88]
   14000b28a:	lea    rcx,[rsp+0x1a4]
   14000b292:	lea    rdx,[rsp+0x50]
   14000b297:	mov    DWORD PTR [rcx],eax
   14000b299:	mov    eax,DWORD PTR [rbp+0x8c]
   14000b29f:	mov    DWORD PTR [rcx+0x4],eax
   14000b2a2:	mov    eax,DWORD PTR [rbp+0x90]
   14000b2a8:	mov    DWORD PTR [rcx+0x8],eax
   14000b2ab:	mov    eax,DWORD PTR [rbp+0x94]
   14000b2b1:	mov    DWORD PTR [rcx+0xc],eax
   14000b2b4:	lea    rcx,[rsp+0x1b8]
   14000b2bc:	call   QWORD PTR [rip+0xa106]        # 0x1400153c8
   14000b2c2:	mov    rax,QWORD PTR [rbp+0x118]
   14000b2c9:	mov    ecx,DWORD PTR [rax]
   14000b2cb:	cmp    ecx,0x1
   14000b2ce:	je     0x14000b2ed
   14000b2d0:	test   ecx,ecx
   14000b2d2:	je     0x14000b2ed
   14000b2d4:	lea    rcx,[rbp+0x118]
   14000b2db:	mov    edx,0x7fffffff
   14000b2e0:	mov    r8d,0x1
   14000b2e6:	call   0x1400049c0
   14000b2eb:	jmp    0x14000b2fa
   14000b2ed:	lea    rcx,[rbp+0x118]
   14000b2f4:	call   QWORD PTR [rip+0xa096]        # 0x140015390
   14000b2fa:	lea    r8,[rsp+0x1a0]
   14000b302:	lea    rcx,[rbp+0x118]
   14000b309:	mov    rdx,rax
   14000b30c:	call   0x1400040c0
   14000b311:	lea    rcx,[rsp+0x1b8]
   14000b319:	call   QWORD PTR [rip+0xa099]        # 0x1400153b8
   14000b31f:	lea    rcx,[rsp+0x50]
   14000b324:	call   QWORD PTR [rip+0xa08e]        # 0x1400153b8
   14000b32a:	mov    esi,DWORD PTR [rsp+0x30]
   14000b32e:	jmp    0x14000afcc
   14000b333:	mov    ecx,DWORD PTR [rip+0x1915f]        # 0x140024498
   14000b339:	lea    rbx,[rip+0x19158]        # 0x140024498
   14000b340:	test   ecx,ecx
   14000b342:	je     0x14000b3cd
   14000b348:	movsx  edi,WORD PTR [r8+r13*2+0x187c0]
   14000b351:	lea    eax,[rdi+rcx*1]
   14000b354:	test   eax,eax
   14000b356:	js     0x14000b373
   14000b358:	movsxd rdx,eax
   14000b35b:	movsx  eax,WORD PTR [r8+rdx*2+0x1ae70]
   14000b364:	cmp    eax,ecx
   14000b366:	jne    0x14000b373
   14000b368:	movsx  eax,WORD PTR [r8+rdx*2+0x19230]
   14000b371:	jmp    0x14000b37e
   14000b373:	movsx  eax,WORD PTR [r8+r13*2+0x181a0]
   14000b37c:	neg    eax
   14000b37e:	test   eax,eax
   14000b380:	jle    0x14000b3c2
   14000b382:	movsxd rdx,eax
   14000b385:	movsx  eax,WORD PTR [r8+rdx*2+0x187c0]
   14000b38e:	add    eax,r15d
   14000b391:	js     0x14000b3af
   14000b393:	movsxd rcx,eax
   14000b396:	movsx  eax,WORD PTR [r8+rcx*2+0x1ae70]
   14000b39f:	cmp    eax,r15d
   14000b3a2:	jne    0x14000b3af
   14000b3a4:	movsx  eax,WORD PTR [r8+rcx*2+0x19230]
   14000b3ad:	jmp    0x14000b3ba
   14000b3af:	movsx  eax,WORD PTR [r8+rdx*2+0x181a0]
   14000b3b8:	neg    eax
   14000b3ba:	test   eax,eax
   14000b3bc:	jne    0x14000b444
   14000b3c2:	mov    ecx,DWORD PTR [rbx+0x4]
   14000b3c5:	add    rbx,0x4
   14000b3c9:	test   ecx,ecx
   14000b3cb:	jne    0x14000b351
   14000b3cd:	mov    ebx,0x1
   14000b3d2:	mov    rdi,rbx
   14000b3d5:	cmp    rdi,0x6a
   14000b3d9:	jge    0x14000bb42
   14000b3df:	cmp    rdi,0x3e
   14000b3e3:	je     0x14000b64a
   14000b3e9:	cmp    rdi,0x62
   14000b3ed:	je     0x14000b64a
   14000b3f3:	cmp    rdi,0x64
   14000b3f7:	je     0x14000b64a
   14000b3fd:	cmp    rdi,0x65
   14000b401:	je     0x14000b64a
   14000b407:	cmp    rdi,0x66
   14000b40b:	je     0x14000b64a
   14000b411:	movsx  eax,WORD PTR [r8+r13*2+0x187c0]
   14000b41a:	add    eax,ebx
   14000b41c:	js     0x14000b628
   14000b422:	movsxd rcx,eax
   14000b425:	movsx  eax,WORD PTR [r8+rcx*2+0x1ae70]
   14000b42e:	cmp    eax,ebx
   14000b430:	jne    0x14000b628
   14000b436:	movsx  ecx,WORD PTR [r8+rcx*2+0x19230]
   14000b43f:	jmp    0x14000b633
   14000b444:	movsxd rax,DWORD PTR [rbx]
   14000b447:	mov    rdx,QWORD PTR [r8+rax*8+0x178b0]
   14000b44f:	test   rdx,rdx
   14000b452:	je     0x14000b46e
   14000b454:	or     rcx,0xffffffffffffffff
   14000b458:	xor    eax,eax
   14000b45a:	mov    rdi,rdx
   14000b45d:	repnz scas al,BYTE PTR es:[rdi]
   14000b45f:	not    rcx
   14000b462:	dec    rcx
   14000b465:	mov    DWORD PTR [rsp+0x110],ecx
   14000b46c:	jmp    0x14000b476
   14000b46e:	mov    DWORD PTR [rsp+0x110],r12d
   14000b476:	mov    QWORD PTR [rsp+0x118],rdx
   14000b47e:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   14000b486:	lea    rcx,[rsp+0xd8]
   14000b48e:	lea    rdx,[rsp+0x350]
   14000b496:	movdqa XMMWORD PTR [rsp+0x350],xmm0
   14000b49f:	call   QWORD PTR [rip+0x9cbb]        # 0x140015160
   14000b4a5:	lea    rcx,[rsp+0x420]
   14000b4ad:	mov    dl,0x20
   14000b4af:	call   QWORD PTR [rip+0x9d1b]        # 0x1400151d0
   14000b4b5:	lea    r8,[rip+0xbd94]        # 0x140017250
   14000b4bc:	lea    rdx,[rip+0xbdb5]        # 0x140017278
   14000b4c3:	lea    rcx,[rsp+0x128]
   14000b4cb:	xor    r9d,r9d
   14000b4ce:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b4d6:	mov    rdi,rax
   14000b4d9:	call   QWORD PTR [rip+0x9ce9]        # 0x1400151c8
   14000b4df:	lea    r8,[rsp+0xd8]
   14000b4e7:	mov    rcx,rax
   14000b4ea:	movzx  eax,WORD PTR [rdi]
   14000b4ed:	lea    rdx,[rsp+0xa0]
   14000b4f5:	xor    r9d,r9d
   14000b4f8:	mov    WORD PTR [rsp+0x20],ax
   14000b4fd:	call   QWORD PTR [rip+0x9cbd]        # 0x1400151c0
   14000b503:	lea    rcx,[rsp+0x128]
   14000b50b:	call   QWORD PTR [rip+0x9ea7]        # 0x1400153b8
   14000b511:	lea    rcx,[rsp+0xd8]
   14000b519:	call   QWORD PTR [rip+0x9e99]        # 0x1400153b8
   14000b51f:	mov    DWORD PTR [rsp+0x1f0],0x1
   14000b52a:	mov    eax,DWORD PTR [rbp+0x88]
   14000b530:	lea    rcx,[rsp+0x1f4]
   14000b538:	lea    rdx,[rsp+0xa0]
   14000b540:	mov    DWORD PTR [rcx],eax
   14000b542:	mov    eax,DWORD PTR [rbp+0x8c]
   14000b548:	mov    DWORD PTR [rcx+0x4],eax
   14000b54b:	mov    eax,DWORD PTR [rbp+0x90]
   14000b551:	mov    DWORD PTR [rcx+0x8],eax
   14000b554:	mov    eax,DWORD PTR [rbp+0x94]
   14000b55a:	mov    DWORD PTR [rcx+0xc],eax
   14000b55d:	lea    rcx,[rsp+0x208]
   14000b565:	call   QWORD PTR [rip+0x9e5d]        # 0x1400153c8
   14000b56b:	mov    rax,QWORD PTR [rbp+0x118]
   14000b572:	mov    ecx,DWORD PTR [rax]
   14000b574:	cmp    ecx,0x1
   14000b577:	je     0x14000b596
   14000b579:	test   ecx,ecx
   14000b57b:	je     0x14000b596
   14000b57d:	lea    rcx,[rbp+0x118]
   14000b584:	mov    edx,0x7fffffff
   14000b589:	mov    r8d,0x1
   14000b58f:	call   0x1400049c0
   14000b594:	jmp    0x14000b5a3
   14000b596:	lea    rcx,[rbp+0x118]
   14000b59d:	call   QWORD PTR [rip+0x9ded]        # 0x140015390
   14000b5a3:	lea    r8,[rsp+0x1f0]
   14000b5ab:	lea    rcx,[rbp+0x118]
   14000b5b2:	mov    rdx,rax
   14000b5b5:	call   0x1400040c0
   14000b5ba:	lea    rcx,[rsp+0x208]
   14000b5c2:	call   QWORD PTR [rip+0x9df0]        # 0x1400153b8
   14000b5c8:	mov    r15d,DWORD PTR [rbx]
   14000b5cb:	mov    QWORD PTR [rbp+0x40],r12
   14000b5cf:	mov    eax,DWORD PTR [rbp+0x88]
   14000b5d5:	lea    rcx,[rsp+0xa0]
   14000b5dd:	mov    DWORD PTR [rbp+0x58],eax
   14000b5e0:	mov    eax,DWORD PTR [rbp+0x8c]
   14000b5e6:	mov    DWORD PTR [rbp+0x5c],eax
   14000b5e9:	mov    eax,DWORD PTR [rbp+0x90]
   14000b5ef:	mov    DWORD PTR [rbp+0x60],eax
   14000b5f2:	mov    eax,DWORD PTR [rbp+0x94]
   14000b5f8:	mov    DWORD PTR [rbp+0x64],eax
   14000b5fb:	mov    DWORD PTR [rbp+0x5c],r12d
   14000b5ff:	lea    rax,[rbp+0xd8]
   14000b606:	mov    QWORD PTR [rbp+0x108],r14
   14000b60d:	mov    QWORD PTR [rbp+0x110],rax
   14000b614:	call   QWORD PTR [rip+0x9d9e]        # 0x1400153b8
   14000b61a:	mov    esi,DWORD PTR [rsp+0x30]
   14000b61e:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b623:	jmp    0x14000afcc
   14000b628:	movsx  ecx,WORD PTR [r8+r13*2+0x181a0]
   14000b631:	neg    ecx
   14000b633:	test   ecx,ecx
   14000b635:	jle    0x14000b64a
   14000b637:	mov    edx,r15d
   14000b63a:	call   0x140002680
   14000b63f:	test   eax,eax
   14000b641:	jne    0x14000b654
   14000b643:	lea    r8,[rip+0xffffffffffff49b6]        # 0x140000000
   14000b64a:	inc    ebx
   14000b64c:	inc    rdi
   14000b64f:	jmp    0x14000b3d5
   14000b654:	lea    rdx,[rip+0xffffffffffff49a5]        # 0x140000000
   14000b65b:	mov    rdx,QWORD PTR [rdx+rdi*8+0x178b0]
   14000b663:	test   rdx,rdx
   14000b666:	je     0x14000b682
   14000b668:	or     rcx,0xffffffffffffffff
   14000b66c:	xor    eax,eax
   14000b66e:	mov    rdi,rdx
   14000b671:	repnz scas al,BYTE PTR es:[rdi]
   14000b673:	not    rcx
   14000b676:	dec    rcx
   14000b679:	mov    DWORD PTR [rsp+0x150],ecx
   14000b680:	jmp    0x14000b68a
   14000b682:	mov    DWORD PTR [rsp+0x150],r12d
   14000b68a:	mov    QWORD PTR [rsp+0x158],rdx
   14000b692:	movaps xmm0,XMMWORD PTR [rsp+0x150]
   14000b69a:	lea    rcx,[rsp+0xf8]
   14000b6a2:	lea    rdx,[rsp+0x70]
   14000b6a7:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14000b6ad:	call   QWORD PTR [rip+0x9aad]        # 0x140015160
   14000b6b3:	lea    rcx,[rsp+0x428]
   14000b6bb:	mov    dl,0x20
   14000b6bd:	call   QWORD PTR [rip+0x9b0d]        # 0x1400151d0
   14000b6c3:	lea    r8,[rip+0xbb86]        # 0x140017250
   14000b6ca:	lea    rdx,[rip+0xbba7]        # 0x140017278
   14000b6d1:	lea    rcx,[rsp+0x138]
   14000b6d9:	xor    r9d,r9d
   14000b6dc:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b6e4:	mov    rdi,rax
   14000b6e7:	call   QWORD PTR [rip+0x9adb]        # 0x1400151c8
   14000b6ed:	lea    r8,[rsp+0xf8]
   14000b6f5:	mov    rcx,rax
   14000b6f8:	movzx  eax,WORD PTR [rdi]
   14000b6fb:	lea    rdx,[rsp+0xc8]
   14000b703:	xor    r9d,r9d
   14000b706:	mov    WORD PTR [rsp+0x20],ax
   14000b70b:	call   QWORD PTR [rip+0x9aaf]        # 0x1400151c0
   14000b711:	lea    rcx,[rsp+0x138]
   14000b719:	call   QWORD PTR [rip+0x9c99]        # 0x1400153b8
   14000b71f:	lea    rcx,[rsp+0xf8]
   14000b727:	call   QWORD PTR [rip+0x9c8b]        # 0x1400153b8
   14000b72d:	mov    DWORD PTR [rsp+0x270],0x1
   14000b738:	mov    eax,DWORD PTR [rbp+0x88]
   14000b73e:	lea    rcx,[rsp+0x274]
   14000b746:	lea    rdx,[rsp+0xc8]
   14000b74e:	mov    DWORD PTR [rcx],eax
   14000b750:	mov    eax,DWORD PTR [rbp+0x8c]
   14000b756:	mov    DWORD PTR [rcx+0x4],eax
   14000b759:	mov    eax,DWORD PTR [rbp+0x90]
   14000b75f:	mov    DWORD PTR [rcx+0x8],eax
   14000b762:	mov    eax,DWORD PTR [rbp+0x94]
   14000b768:	mov    DWORD PTR [rcx+0xc],eax
   14000b76b:	lea    rcx,[rsp+0x288]
   14000b773:	call   QWORD PTR [rip+0x9c4f]        # 0x1400153c8
   14000b779:	lea    rcx,[rbp+0x118]
   14000b780:	lea    rdx,[rsp+0x270]
   14000b788:	call   0x140004c10
   14000b78d:	lea    rcx,[rsp+0x288]
   14000b795:	call   QWORD PTR [rip+0x9c1d]        # 0x1400153b8
   14000b79b:	mov    QWORD PTR [rbp+0x40],r12
   14000b79f:	mov    eax,DWORD PTR [rbp+0x88]
   14000b7a5:	mov    DWORD PTR [rbp+0x58],eax
   14000b7a8:	mov    eax,DWORD PTR [rbp+0x8c]
   14000b7ae:	lea    rcx,[rsp+0xc8]
   14000b7b6:	mov    DWORD PTR [rbp+0x5c],eax
   14000b7b9:	mov    eax,DWORD PTR [rbp+0x90]
   14000b7bf:	mov    r15d,ebx
   14000b7c2:	mov    DWORD PTR [rbp+0x60],eax
   14000b7c5:	mov    eax,DWORD PTR [rbp+0x94]
   14000b7cb:	mov    DWORD PTR [rbp+0x64],eax
   14000b7ce:	mov    DWORD PTR [rbp+0x5c],r12d
   14000b7d2:	call   QWORD PTR [rip+0x9be0]        # 0x1400153b8
   14000b7d8:	mov    esi,DWORD PTR [rsp+0x30]
   14000b7dc:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b7e1:	jmp    0x14000afcc
   14000b7e6:	movzx  eax,BYTE PTR [rsp+0x418]
   14000b7ee:	dec    DWORD PTR [rbp+0x10]
   14000b7f1:	test   al,al
   14000b7f3:	sete   al
   14000b7f6:	jmp    0x14000bc1a
   14000b7fb:	or     rcx,0xffffffffffffffff
   14000b7ff:	lea    rdx,[rip+0xba2a]        # 0x140017230
   14000b806:	xor    eax,eax
   14000b808:	mov    rdi,rdx
   14000b80b:	mov    QWORD PTR [rsp+0x48],rdx
   14000b810:	lea    rdx,[rsp+0x70]
   14000b815:	repnz scas al,BYTE PTR es:[rdi]
   14000b817:	not    rcx
   14000b81a:	dec    rcx
   14000b81d:	mov    DWORD PTR [rsp+0x40],ecx
   14000b821:	lea    rcx,[rsp+0xe8]
   14000b829:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14000b82e:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14000b834:	call   QWORD PTR [rip+0x9926]        # 0x140015160
   14000b83a:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000b83e:	lea    rcx,[rsp+0x234]
   14000b846:	shl    rdx,0x4
   14000b84a:	add    rdx,QWORD PTR [rbp+0x28]
   14000b84e:	mov    DWORD PTR [rsp+0x230],0x1
   14000b859:	mov    eax,DWORD PTR [rdx]
   14000b85b:	mov    DWORD PTR [rcx],eax
   14000b85d:	mov    eax,DWORD PTR [rdx+0x4]
   14000b860:	mov    DWORD PTR [rcx+0x4],eax
   14000b863:	mov    eax,DWORD PTR [rdx+0x8]
   14000b866:	mov    DWORD PTR [rcx+0x8],eax
   14000b869:	mov    eax,DWORD PTR [rdx+0xc]
   14000b86c:	lea    rdx,[rsp+0xe8]
   14000b874:	mov    DWORD PTR [rcx+0xc],eax
   14000b877:	lea    rcx,[rsp+0x248]
   14000b87f:	call   QWORD PTR [rip+0x9b43]        # 0x1400153c8
   14000b885:	lea    rcx,[rbp+0x118]
   14000b88c:	lea    rdx,[rsp+0x230]
   14000b894:	call   0x140004c10
   14000b899:	lea    rcx,[rsp+0x248]
   14000b8a1:	call   QWORD PTR [rip+0x9b11]        # 0x1400153b8
   14000b8a7:	lea    rcx,[rsp+0xe8]
   14000b8af:	jmp    0x14000bc12
   14000b8b4:	or     rcx,0xffffffffffffffff
   14000b8b8:	lea    rdx,[rip+0xb939]        # 0x1400171f8
   14000b8bf:	xor    eax,eax
   14000b8c1:	mov    rdi,rdx
   14000b8c4:	mov    QWORD PTR [rsp+0x48],rdx
   14000b8c9:	lea    rdx,[rsp+0x70]
   14000b8ce:	repnz scas al,BYTE PTR es:[rdi]
   14000b8d0:	not    rcx
   14000b8d3:	dec    rcx
   14000b8d6:	mov    DWORD PTR [rsp+0x40],ecx
   14000b8da:	lea    rcx,[rsp+0xa8]
   14000b8e2:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14000b8e7:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14000b8ed:	call   QWORD PTR [rip+0x986d]        # 0x140015160
   14000b8f3:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000b8f7:	lea    rcx,[rsp+0x254]
   14000b8ff:	shl    rdx,0x4
   14000b903:	add    rdx,QWORD PTR [rbp+0x28]
   14000b907:	mov    DWORD PTR [rsp+0x250],0x1
   14000b912:	mov    eax,DWORD PTR [rdx]
   14000b914:	mov    DWORD PTR [rcx],eax
   14000b916:	mov    eax,DWORD PTR [rdx+0x4]
   14000b919:	mov    DWORD PTR [rcx+0x4],eax
   14000b91c:	mov    eax,DWORD PTR [rdx+0x8]
   14000b91f:	mov    DWORD PTR [rcx+0x8],eax
   14000b922:	mov    eax,DWORD PTR [rdx+0xc]
   14000b925:	lea    rdx,[rsp+0xa8]
   14000b92d:	mov    DWORD PTR [rcx+0xc],eax
   14000b930:	lea    rcx,[rsp+0x268]
   14000b938:	call   QWORD PTR [rip+0x9a8a]        # 0x1400153c8
   14000b93e:	lea    rcx,[rbp+0x118]
   14000b945:	lea    rdx,[rsp+0x250]
   14000b94d:	call   0x140004c10
   14000b952:	lea    rcx,[rsp+0x268]
   14000b95a:	call   QWORD PTR [rip+0x9a58]        # 0x1400153b8
   14000b960:	lea    rcx,[rsp+0xa8]
   14000b968:	jmp    0x14000bc12
   14000b96d:	lea    rdx,[rsp+0x120]
   14000b975:	mov    rcx,rbx
   14000b978:	call   0x14000dd40
   14000b97d:	lea    rcx,[rsp+0x3b0]
   14000b985:	mov    rdx,rbx
   14000b988:	mov    rdi,rax
   14000b98b:	call   0x140003f40
   14000b990:	mov    DWORD PTR [rsp+0x290],0x1
   14000b99b:	mov    ecx,DWORD PTR [rax]
   14000b99d:	lea    rdx,[rsp+0x294]
   14000b9a5:	mov    DWORD PTR [rdx],ecx
   14000b9a7:	mov    ecx,DWORD PTR [rax+0x4]
   14000b9aa:	mov    DWORD PTR [rdx+0x4],ecx
   14000b9ad:	mov    ecx,DWORD PTR [rax+0x8]
   14000b9b0:	mov    DWORD PTR [rdx+0x8],ecx
   14000b9b3:	mov    ecx,DWORD PTR [rax+0xc]
   14000b9b6:	mov    DWORD PTR [rdx+0xc],ecx
   14000b9b9:	lea    rcx,[rsp+0x2a8]
   14000b9c1:	mov    rdx,rdi
   14000b9c4:	call   QWORD PTR [rip+0x99fe]        # 0x1400153c8
   14000b9ca:	lea    rcx,[rbp+0x118]
   14000b9d1:	lea    rdx,[rsp+0x290]
   14000b9d9:	call   0x140004c10
   14000b9de:	lea    rcx,[rsp+0x2a8]
   14000b9e6:	call   QWORD PTR [rip+0x99cc]        # 0x1400153b8
   14000b9ec:	lea    rcx,[rsp+0x120]
   14000b9f4:	jmp    0x14000bc12
   14000b9f9:	lea    rdx,[rsp+0x130]
   14000ba01:	mov    rcx,rbx
   14000ba04:	call   0x14000dd40
   14000ba09:	lea    rcx,[rsp+0x390]
   14000ba11:	mov    rdx,rbx
   14000ba14:	mov    rdi,rax
   14000ba17:	call   0x140003f40
   14000ba1c:	mov    DWORD PTR [rsp+0x2d0],0x1
   14000ba27:	mov    ecx,DWORD PTR [rax]
   14000ba29:	lea    rdx,[rsp+0x2d4]
   14000ba31:	mov    DWORD PTR [rdx],ecx
   14000ba33:	mov    ecx,DWORD PTR [rax+0x4]
   14000ba36:	mov    DWORD PTR [rdx+0x4],ecx
   14000ba39:	mov    ecx,DWORD PTR [rax+0x8]
   14000ba3c:	mov    DWORD PTR [rdx+0x8],ecx
   14000ba3f:	mov    ecx,DWORD PTR [rax+0xc]
   14000ba42:	mov    DWORD PTR [rdx+0xc],ecx
   14000ba45:	lea    rcx,[rsp+0x2e8]
   14000ba4d:	mov    rdx,rdi
   14000ba50:	call   QWORD PTR [rip+0x9972]        # 0x1400153c8
   14000ba56:	lea    rcx,[rbp+0x118]
   14000ba5d:	lea    rdx,[rsp+0x2d0]
   14000ba65:	call   0x140004c10
   14000ba6a:	lea    rcx,[rsp+0x2e8]
   14000ba72:	call   QWORD PTR [rip+0x9940]        # 0x1400153b8
   14000ba78:	lea    rcx,[rsp+0x130]
   14000ba80:	jmp    0x14000bc12
   14000ba85:	mov    QWORD PTR [rax+rcx*8],r12
   14000ba89:	or     rcx,0xffffffffffffffff
   14000ba8d:	lea    rdx,[rip+0xb79c]        # 0x140017230
   14000ba94:	mov    rdi,rdx
   14000ba97:	mov    QWORD PTR [rsp+0x48],rdx
   14000ba9c:	xor    eax,eax
   14000ba9e:	repnz scas al,BYTE PTR es:[rdi]
   14000baa0:	lea    rdx,[rsp+0x70]
   14000baa5:	not    rcx
   14000baa8:	dec    rcx
   14000baab:	mov    DWORD PTR [rsp+0x40],ecx
   14000baaf:	lea    rcx,[rsp+0xb0]
   14000bab7:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14000babc:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14000bac2:	call   QWORD PTR [rip+0x9698]        # 0x140015160
   14000bac8:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000bacc:	lea    rcx,[rsp+0x2b4]
   14000bad4:	shl    rdx,0x4
   14000bad8:	add    rdx,QWORD PTR [rbp+0x28]
   14000badc:	mov    DWORD PTR [rsp+0x2b0],0x1
   14000bae7:	mov    eax,DWORD PTR [rdx]
   14000bae9:	mov    DWORD PTR [rcx],eax
   14000baeb:	mov    eax,DWORD PTR [rdx+0x4]
   14000baee:	mov    DWORD PTR [rcx+0x4],eax
   14000baf1:	mov    eax,DWORD PTR [rdx+0x8]
   14000baf4:	mov    DWORD PTR [rcx+0x8],eax
   14000baf7:	mov    eax,DWORD PTR [rdx+0xc]
   14000bafa:	lea    rdx,[rsp+0xb0]
   14000bb02:	mov    DWORD PTR [rcx+0xc],eax
   14000bb05:	lea    rcx,[rsp+0x2c8]
   14000bb0d:	call   QWORD PTR [rip+0x98b5]        # 0x1400153c8
   14000bb13:	lea    rcx,[rbp+0x118]
   14000bb1a:	lea    rdx,[rsp+0x2b0]
   14000bb22:	call   0x140004c10
   14000bb27:	lea    rcx,[rsp+0x2c8]
   14000bb2f:	call   QWORD PTR [rip+0x9883]        # 0x1400153b8
   14000bb35:	lea    rcx,[rsp+0xb0]
   14000bb3d:	jmp    0x14000bc12
   14000bb42:	lea    r8,[rip+0xb71f]        # 0x140017268
   14000bb49:	lea    rdx,[rip+0xb728]        # 0x140017278
   14000bb50:	lea    rcx,[rsp+0xc0]
   14000bb58:	xor    r9d,r9d
   14000bb5b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000bb63:	call   QWORD PTR [rip+0x965f]        # 0x1400151c8
   14000bb69:	mov    DWORD PTR [rsp+0x1d0],0x1
   14000bb74:	mov    eax,DWORD PTR [rbp+0x88]
   14000bb7a:	lea    rcx,[rsp+0x1d4]
   14000bb82:	lea    rdx,[rsp+0xc0]
   14000bb8a:	mov    DWORD PTR [rcx],eax
   14000bb8c:	mov    eax,DWORD PTR [rbp+0x8c]
   14000bb92:	mov    DWORD PTR [rcx+0x4],eax
   14000bb95:	mov    eax,DWORD PTR [rbp+0x90]
   14000bb9b:	mov    DWORD PTR [rcx+0x8],eax
   14000bb9e:	mov    eax,DWORD PTR [rbp+0x94]
   14000bba4:	mov    DWORD PTR [rcx+0xc],eax
   14000bba7:	lea    rcx,[rsp+0x1e8]
   14000bbaf:	call   QWORD PTR [rip+0x9813]        # 0x1400153c8
   14000bbb5:	add    rbp,0x118
   14000bbbc:	mov    rax,QWORD PTR [rbp+0x0]
   14000bbc0:	mov    ecx,DWORD PTR [rax]
   14000bbc2:	cmp    ecx,0x1
   14000bbc5:	je     0x14000bbe0
   14000bbc7:	test   ecx,ecx
   14000bbc9:	je     0x14000bbe0
   14000bbcb:	mov    edx,0x7fffffff
   14000bbd0:	mov    r8d,0x1
   14000bbd6:	mov    rcx,rbp
   14000bbd9:	call   0x1400049c0
   14000bbde:	jmp    0x14000bbe9
   14000bbe0:	mov    rcx,rbp
   14000bbe3:	call   QWORD PTR [rip+0x97a7]        # 0x140015390
   14000bbe9:	lea    r8,[rsp+0x1d0]
   14000bbf1:	mov    rdx,rax
   14000bbf4:	mov    rcx,rbp
   14000bbf7:	call   0x1400040c0
   14000bbfc:	lea    rcx,[rsp+0x1e8]
   14000bc04:	call   QWORD PTR [rip+0x97ae]        # 0x1400153b8
   14000bc0a:	lea    rcx,[rsp+0xc0]
   14000bc12:	call   QWORD PTR [rip+0x97a0]        # 0x1400153b8
   14000bc18:	xor    al,al
   14000bc1a:	add    rsp,0x3c8
   14000bc21:	pop    r15
   14000bc23:	pop    r14
   14000bc25:	pop    r13
   14000bc27:	pop    r12
   14000bc29:	pop    rdi
   14000bc2a:	pop    rsi
   14000bc2b:	pop    rbp
   14000bc2c:	pop    rbx
   14000bc2d:	ret    
   14000bc2e:	xchg   ax,ax
   14000bc30:	mov    edi,0xe1000051
   14000bc35:	push   rcx
   14000bc36:	add    BYTE PTR [rax],al
   14000bc38:	js     0x14000bc8c
   14000bc3a:	add    BYTE PTR [rax],al
   14000bc3c:	cdq    
   14000bc3d:	push   rdx
   14000bc3e:	add    BYTE PTR [rax],al
   14000bc40:	icebp  
   14000bc41:	push   rdx
   14000bc42:	add    BYTE PTR [rax],al
   14000bc44:	cmp    edx,DWORD PTR [rbx+0x0]
   14000bc47:	add    BYTE PTR [rdx+0x53],dh
   14000bc4a:	add    BYTE PTR [rax],al
   14000bc4c:	mov    ch,0x53
   14000bc4e:	add    BYTE PTR [rax],al
   14000bc50:	stc    
   14000bc51:	push   rbx
   14000bc52:	add    BYTE PTR [rax],al
   14000bc54:	fist   WORD PTR [rax+rax*1+0x0]
   14000bc58:	(bad)  
   14000bc59:	push   rbp
   14000bc5a:	add    BYTE PTR [rax],al
   14000bc5c:	rex.RXB push r14
   14000bc5e:	add    BYTE PTR [rax],al
   14000bc60:	cmp    BYTE PTR [rsi+0x572a0000],ch
   14000bc66:	add    BYTE PTR [rax],al
   14000bc68:	outs   dx,BYTE PTR ds:[rsi]
   14000bc69:	push   rdi
   14000bc6a:	add    BYTE PTR [rax],al
   14000bc6c:	mov    edi,0x13000057
   14000bc71:	pop    rax
   14000bc72:	add    BYTE PTR [rax],al
   14000bc74:	sahf   
   14000bc75:	pop    rax
   14000bc76:	add    BYTE PTR [rax],al
   14000bc78:	rex.X pop rcx
   14000bc7a:	add    BYTE PTR [rax],al
   14000bc7c:	cld    
   14000bc7d:	pop    rcx
   14000bc7e:	add    BYTE PTR [rax],al
   14000bc80:	jo     0x14000bcdc
   14000bc82:	add    BYTE PTR [rax],al
   14000bc84:	xchg   edi,eax
   14000bc85:	pop    rbx
   14000bc86:	add    BYTE PTR [rax],al
   14000bc88:	(bad)  
   14000bc89:	pop    rsp
   14000bc8a:	add    BYTE PTR [rax],al
   14000bc8c:	in     al,dx
   14000bc8d:	pop    rsp
   14000bc8e:	add    BYTE PTR [rax],al
   14000bc90:	je     0x14000bcef
   14000bc92:	add    BYTE PTR [rax],al
   14000bc94:	xchg   ebp,eax
   14000bc95:	pop    rbp
   14000bc96:	add    BYTE PTR [rax],al
   14000bc98:	cs pop rsi
   14000bc9a:	add    BYTE PTR [rax],al
   14000bc9c:	add    ebx,DWORD PTR [rdi+0x0]
   14000bc9f:	add    BYTE PTR [rbx+0x60],bl
   14000bca2:	add    BYTE PTR [rax],al
   14000bca4:	movabs ds:0x3000006311000061,al
   14000bcad:	add    BYTE PTR fs:[rax],al
   14000bcb0:	jge    0x14000bd17
   14000bcb2:	add    BYTE PTR [rax],al
   14000bcb4:	stos   BYTE PTR es:[rdi],al
   14000bcb5:	data16 add BYTE PTR [rax],al
   14000bcb8:	or     ebp,DWORD PTR [rax+0x0]
   14000bcbb:	add    BYTE PTR [rdi-0x62ffff98],cl
   14000bcc1:	imul   eax,DWORD PTR [rax],0x0
   14000bcc4:	icebp  
   14000bcc5:	ins    DWORD PTR es:[rdi],dx
   14000bcc6:	add    BYTE PTR [rax],al
   14000bcc8:	sbb    BYTE PTR [rax+0x0],dh
   14000bccb:	add    BYTE PTR [rax+0x70],bl
   14000bcce:	add    BYTE PTR [rax],al
   14000bcd0:	mov    edi,0x40000070
   14000bcd5:	jno    0x14000bcd7
   14000bcd7:	add    BYTE PTR [rax-0x3fffff8f],al
   14000bcdd:	jno    0x14000bcdf
   14000bcdf:	add    BYTE PTR [rax],al
   14000bce1:	jb     0x14000bce3
   14000bce3:	add    BYTE PTR [rcx+0x72],bh
   14000bce6:	add    BYTE PTR [rax],al
   14000bce8:	shl    DWORD PTR [rdx+0x0],cl
   14000bceb:	add    bh,ah
   14000bced:	jae    0x14000bcef
   14000bcef:	add    dh,bh
   14000bcf1:	je     0x14000bcf3
   14000bcf3:	add    BYTE PTR [rsi+0x46000075],dh
   14000bcf9:	jbe    0x14000bcfb
   14000bcfb:	add    BYTE PTR [rcx+0x79000076],al
   14000bd01:	ja     0x14000bd03
   14000bd03:	add    BYTE PTR [rax+0x78],cl
   14000bd06:	add    BYTE PTR [rax],al
   14000bd08:	add    BYTE PTR [rcx+0x0],bh
   14000bd0b:	add    BYTE PTR [rax-0x6ffff87],bl
   14000bd11:	jns    0x14000bd13
   14000bd13:	add    BYTE PTR [rbx],cl
   14000bd15:	jnp    0x14000bd17
   14000bd17:	add    BYTE PTR [rbx+0x7b],ah
   14000bd1a:	add    BYTE PTR [rax],al
   14000bd1c:	(bad)  
   14000bd1d:	jnp    0x14000bd1f
   14000bd1f:	add    BYTE PTR [rbp+0x7c],al
   14000bd22:	add    BYTE PTR [rax],al
   14000bd24:	(bad)  
   14000bd27:	add    BYTE PTR [rcx],cl
   14000bd29:	jge    0x14000bd2b
   14000bd2b:	add    BYTE PTR [rbx-0xfffff83],cl
   14000bd31:	jge    0x14000bd33
   14000bd33:	add    BYTE PTR [rdi+rdi*2],al
   14000bd36:	add    BYTE PTR [rax],al
   14000bd38:	and    al,BYTE PTR [rax-0x7f8a0000]
   14000bd3e:	add    BYTE PTR [rax],al
   14000bd40:	xlat   BYTE PTR ds:[rbx]
   14000bd41:	add    BYTE PTR [rax],0x0
   14000bd44:	xor    al,0x81
   14000bd46:	add    BYTE PTR [rax],al
   14000bd48:	xchg   ecx,eax
   14000bd49:	add    DWORD PTR [rax],0x81e300
   14000bd4f:	add    BYTE PTR [rdx+rax*4-0x7cac0000],bh
   14000bd56:	add    BYTE PTR [rax],al
   14000bd58:	cdq    
   14000bd59:	add    DWORD PTR [rax],0x0
   14000bd5c:	(bad)  
   14000bd5d:	add    DWORD PTR [rax],0x0
   14000bd60:	push   rsp
   14000bd61:	test   BYTE PTR [rax],al
   14000bd63:	add    BYTE PTR [rax+0x9000084],ch
   14000bd69:	test   DWORD PTR [rax],eax
   14000bd6b:	add    BYTE PTR [rcx-0x7b],bl
   14000bd6e:	add    BYTE PTR [rax],al
   14000bd70:	test   eax,0xfa000085
   14000bd75:	test   DWORD PTR [rax],eax
   14000bd77:	add    BYTE PTR [rbx-0x7a],cl
   14000bd7a:	add    BYTE PTR [rax],al
   14000bd7c:	pushf  
   14000bd7d:	xchg   BYTE PTR [rax],al
   14000bd7f:	add    ch,ch
   14000bd81:	xchg   BYTE PTR [rax],al
   14000bd83:	add    BYTE PTR [rsi],bh
   14000bd85:	xchg   DWORD PTR [rax],eax
   14000bd87:	add    BYTE PTR [rdi-0x1fffff79],cl
   14000bd8d:	xchg   DWORD PTR [rax],eax
   14000bd8f:	add    BYTE PTR [rcx],dh
   14000bd91:	mov    BYTE PTR [rax],al
   14000bd93:	add    BYTE PTR [rdx-0x1bffff78],al
   14000bd99:	mov    BYTE PTR [rax],al
   14000bd9b:	add    BYTE PTR [rsi-0x77],al
   14000bd9e:	add    BYTE PTR [rax],al
   14000bda0:	test   al,0x89
   14000bda2:	add    BYTE PTR [rax],al
   14000bda4:	(bad)  
   14000bda5:	mov    al,BYTE PTR [rax]
   14000bda7:	add    BYTE PTR [rax-0x76],ch
   14000bdaa:	add    BYTE PTR [rax],al
   14000bdac:	retf   0x8a
   14000bdaf:	add    BYTE PTR [rbx+rcx*4],ch
   14000bdb2:	add    BYTE PTR [rax],al
   14000bdb4:	mov    cs,WORD PTR [rbx-0x74100000]
   14000bdba:	add    BYTE PTR [rax],al
   14000bdbc:	push   rdx
   14000bdbd:	mov    WORD PTR [rax],es
   14000bdbf:	add    BYTE PTR [rsp+rcx*4-0x72ea0000],dh
   14000bdc6:	add    BYTE PTR [rax],al
   14000bdc8:	js     0x14000bd57
   14000bdca:	add    BYTE PTR [rax],al
   14000bdcc:	fimul  DWORD PTR [rbp-0x71c40000]
   14000bdd2:	add    BYTE PTR [rax],al
   14000bdd4:	sahf   
   14000bdd5:	mov    es,WORD PTR [rax]
   14000bdd7:	add    BYTE PTR [rax],al
   14000bdd9:	pop    QWORD PTR [rax]
   14000bddb:	add    BYTE PTR [rdx-0x71],ah
   14000bdde:	add    BYTE PTR [rax],al
   14000bde0:	(bad)  
   14000bde1:	pop    QWORD PTR [rax]
   14000bde3:	add    BYTE PTR [rsi],ah
   14000bde5:	nop
   14000bde6:	add    BYTE PTR [rax],al
   14000bde8:	mov    BYTE PTR [rax-0x6f160000],dl
   14000bdee:	add    BYTE PTR [rax],al
   14000bdf0:	rex.WR xchg rcx,rax
   14000bdf2:	add    BYTE PTR [rax],al
   14000bdf4:	(bad)  
   14000bdf5:	xchg   ecx,eax
   14000bdf6:	add    BYTE PTR [rax],al
   14000bdf8:	rex.WR xchg rdx,rax
   14000bdfa:	add    BYTE PTR [rax],al
   14000bdfc:	pop    rsp
   14000bdfd:	xchg   edx,eax
   14000bdfe:	add    BYTE PTR [rax],al
   14000be00:	ins    BYTE PTR es:[rdi],dx
   14000be01:	xchg   edx,eax
   14000be02:	add    BYTE PTR [rax],al
   14000be04:	jl     0x14000bd98
   14000be06:	add    BYTE PTR [rax],al
   14000be08:	mov    WORD PTR [rdx-0x6d640000],ss
   14000be0e:	add    BYTE PTR [rax],al
   14000be10:	lods   al,BYTE PTR ds:[rsi]
   14000be11:	xchg   edx,eax
   14000be12:	add    BYTE PTR [rax],al
   14000be14:	mov    esp,0xcc000092
   14000be19:	xchg   edx,eax
   14000be1a:	add    BYTE PTR [rax],al
   14000be1c:	fcom   QWORD PTR [rdx-0x6d140000]
   14000be22:	add    BYTE PTR [rax],al
   14000be24:	cld    
   14000be25:	xchg   edx,eax
   14000be26:	add    BYTE PTR [rax],al
   14000be28:	or     al,0x93
   14000be2a:	add    BYTE PTR [rax],al
   14000be2c:	xchg   bx,ax
   14000be2e:	add    BYTE PTR [rax],al
   14000be30:	(bad)  
   14000be31:	xchg   ebx,eax
   14000be32:	add    BYTE PTR [rax],al
   14000be34:	or     edx,DWORD PTR [rax+rax*1+0x945c00]
   14000be3b:	add    BYTE PTR [rdx*4-0x6abc0000],dh
   14000be42:	add    BYTE PTR [rax],al
   14000be44:	push   rsp
   14000be45:	xchg   ebp,eax
   14000be46:	add    BYTE PTR [rax],al
   14000be48:	test   al,0x95
   14000be4a:	add    BYTE PTR [rax],al
   14000be4c:	or     DWORD PTR [rsi-0x69960000],edx
   14000be52:	add    BYTE PTR [rax],al
   14000be54:	xlat   BYTE PTR ds:[rbx]
   14000be55:	xchg   esi,eax
   14000be56:	add    BYTE PTR [rax],al
   14000be58:	jmp    0x16900bef3
   14000be5d:	xchg   edi,eax
   14000be5e:	add    BYTE PTR [rax],al
   14000be60:	jns    0x14000bdf9
   14000be62:	add    BYTE PTR [rax],al
   14000be64:	ins    BYTE PTR es:[rdi],dx
   14000be65:	cwde   
   14000be66:	add    BYTE PTR [rax],al
   14000be68:	cs cdq 
   14000be6a:	add    BYTE PTR [rax],al
   14000be6c:	rex.X (bad) 
   14000be6e:	add    BYTE PTR [rax],al
   14000be70:	add    DWORD PTR [rbx-0x63fd0000],ebx
   14000be76:	add    BYTE PTR [rax],al
   14000be78:	imul   ebx,DWORD PTR [rbp-0x62480000],0x9ed50000
   14000be82:	add    BYTE PTR [rax],al
   14000be84:	(bad)  
   14000be85:	lahf   
   14000be86:	add    BYTE PTR [rax],al
   14000be88:	(bad)  
   14000be89:	lahf   
   14000be8a:	add    BYTE PTR [rax],al
   14000be8c:	sub    DWORD PTR [rax-0x5fa00000],esp
   14000be92:	add    BYTE PTR [rax],al
   14000be94:	(bad)  
   14000be95:	movabs al,ds:0xa1780000a1370000
   14000be9e:	add    BYTE PTR [rax],al
   14000bea0:	xor    ah,BYTE PTR [rdx-0x5d2e0000]
   14000bea6:	add    BYTE PTR [rax],al
   14000bea8:	(bad)  
   14000bea9:	movabs ds:0xa3fd0000a3670000,eax
   14000beb2:	add    BYTE PTR [rax],al
   14000beb4:	data16 movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000beb6:	add    BYTE PTR [rax],al
   14000beb8:	cld    
   14000beb9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000beba:	add    BYTE PTR [rax],al
   14000bebc:	movs   DWORD PTR es:[rdi],DWORD PTR ss:[rsi]
   14000bebe:	add    BYTE PTR [rax],al
   14000bec0:	movabs eax,ds:0x290000a5e10000a5
   14000bec9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000beca:	add    BYTE PTR [rax],al
   14000becc:	in     al,dx
   14000becd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bece:	add    BYTE PTR [rax],al
   14000bed0:	cmp    eax,0xb40000a7
   14000bed5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bed6:	add    BYTE PTR [rax],al
   14000bed8:	or     ebp,DWORD PTR [rcx-0x55840000]
   14000bede:	add    BYTE PTR [rax],al
   14000bee0:	(bad)  
   14000bee1:	stos   DWORD PTR es:[rdi],eax
   14000bee2:	add    BYTE PTR [rax],al
   14000bee4:	lods   al,BYTE PTR cs:[rsi]
   14000bee6:	add    BYTE PTR [rax],al
   14000bee8:	jb     0x14000be96
   14000beea:	add    BYTE PTR [rax],al
   14000beec:	xchg   ebx,eax
   14000beed:	lods   al,BYTE PTR ds:[rsi]
   14000beee:	add    BYTE PTR [rax],al
   14000bef0:	fld    TBYTE PTR [rax+rax*1+0xad2300]
   14000bef7:	add    BYTE PTR [rdi-0x53],ah
   14000befa:	add    BYTE PTR [rax],al
   14000befc:	mov    eax,0xf80000ad
   14000bf01:	lods   eax,DWORD PTR ds:[rsi]
   14000bf02:	add    BYTE PTR [rax],al
   14000bf04:	scas   al,BYTE PTR es:[rdi]
	...
   14000bf0e:	add    DWORD PTR [rbp+0x4030302],esi
   14000bf14:	add    al,0xb5
   14000bf16:	mov    ch,0xb5
   14000bf18:	add    eax,0x7b506b5
   14000bf1d:	mov    ch,0x8
   14000bf1f:	mov    ch,0x9
   14000bf21:	or     cl,BYTE PTR [rbx]
   14000bf23:	or     al,0xd
   14000bf25:	or     eax,0x11100f0e
   14000bf2a:	adc    dl,BYTE PTR [rbx]
   14000bf2c:	mov    ch,0x14
   14000bf2e:	adc    eax,0xb5b5b516
   14000bf33:	mov    ch,0xb5
   14000bf35:	mov    ch,0xb5
   14000bf37:	(bad)  
   14000bf38:	mov    ch,0xb5
   14000bf3a:	mov    ch,0xc
   14000bf3c:	sbb    BYTE PTR [rcx],bl
   14000bf3e:	sbb    dh,BYTE PTR [rbp-0x4ae34ae5]
   14000bf44:	sbb    eax,0x1fb51eb5
   14000bf49:	and    BYTE PTR [rcx],ah
   14000bf4b:	and    ah,BYTE PTR [rbx]
   14000bf4d:	and    al,0x25
   14000bf4f:	es es mov ch,0xb5
   14000bf53:	mov    ch,0xb5
   14000bf55:	mov    ch,0xb5
   14000bf57:	mov    ch,0x27
   14000bf59:	sub    BYTE PTR [rcx],ch
   14000bf5b:	sub    ch,BYTE PTR [rbx]
   14000bf5d:	sub    al,0x2d
   14000bf5f:	sub    eax,0x31302f2e
   14000bf64:	xor    dh,BYTE PTR [rbx]
   14000bf66:	xor    al,0x35
   14000bf68:	ss (bad) 
   14000bf6a:	cmp    BYTE PTR [rcx],bh
   14000bf6c:	cmp    bh,BYTE PTR [rbx]
   14000bf6e:	cmp    al,0x3d
   14000bf70:	ds (bad) 
   14000bf72:	rex
   14000bf73:	rex.B
   14000bf74:	rex.X
   14000bf75:	rex.XB
   14000bf76:	rex.R
   14000bf77:	rex.RB
   14000bf78:	rex.RX
   14000bf79:	rex.R mov bpl,0xb5
   14000bf7c:	mov    ch,0xb5
   14000bf7e:	mov    ch,0xb5
   14000bf80:	mov    ch,0xb5
   14000bf82:	mov    ch,0xb5
   14000bf84:	mov    ch,0xb5
   14000bf86:	mov    ch,0xb5
   14000bf88:	mov    ch,0xb5
   14000bf8a:	mov    ch,0xb5
   14000bf8c:	mov    ch,0xb5
   14000bf8e:	mov    ch,0xb5
   14000bf90:	mov    ch,0xb5
   14000bf92:	mov    ch,0xb5
   14000bf94:	mov    ch,0xb5
   14000bf96:	mov    ch,0xb5
   14000bf98:	mov    ch,0xb5
   14000bf9a:	mov    ch,0xb5
   14000bf9c:	mov    ch,0x47
   14000bf9e:	rex.W
   14000bf9f:	rex.WB mov r13b,0x4a
   14000bfa2:	rex.WXB
   14000bfa3:	rex.WXB
   14000bfa4:	rex.RXB
   14000bfa5:	rex.W or al,0x2
   14000bfa8:	rex.WR
   14000bfa9:	rex.WRB mov r13b,0xb5
   14000bfac:	mov    ch,0x4e
   14000bfae:	rex.WRXB mov r13b,0x50
   14000bfb1:	push   rcx
   14000bfb2:	push   rdx
   14000bfb3:	push   rbx
   14000bfb4:	push   rsp
   14000bfb5:	push   rbp
   14000bfb6:	push   rsi
   14000bfb7:	push   rdi
   14000bfb8:	pop    rax
   14000bfb9:	mov    ch,0x59
   14000bfbb:	pop    rdx
   14000bfbc:	pop    rbx
   14000bfbd:	mov    ch,0x5c
   14000bfbf:	pop    rbp
   14000bfc0:	mov    ch,0x5e
   14000bfc2:	pop    rdi
   14000bfc3:	(bad)  
   14000bfc4:	mov    ch,0x61
   14000bfc6:	(bad)
   14000bfcb:	mov    ch,0x61
   14000bfcd:	(bad)
   14000bfd2:	addr32 push 0x67b56a69
   14000bfd8:	push   0x6bb56a69
   14000bfdd:	mov    ch,0x6b
   14000bfdf:	mov    ch,0x6c
   14000bfe1:	mov    ch,0x6c
   14000bfe3:	mov    ch,0x6d
   14000bfe5:	mov    ch,0x6d
   14000bfe7:	mov    ch,0x6e
   14000bfe9:	mov    ch,0x6e
   14000bfeb:	mov    ch,0x6f
   14000bfed:	mov    ch,0x6f
   14000bfef:	mov    ch,0x70
   14000bff1:	mov    ch,0x70
   14000bff3:	mov    ch,0x71
   14000bff5:	mov    ch,0x71
   14000bff7:	jb     0x14000c06c
   14000bff9:	je     0x14000c070
   14000bffb:	jbe    0x14000c074
   14000bffd:	js     0x14000c078
   14000bfff:	jp     0x14000c07c
   14000c001:	jl     0x14000c080
   14000c003:	mov    ch,0x7e
   14000c005:	or     al,0xb5
   14000c007:	mov    ch,0x7e
   14000c009:	or     al,0xb5
   14000c00b:	mov    ch,0xb5
   14000c00d:	mov    ch,0xb5
   14000c00f:	mov    ch,0xb5
   14000c011:	mov    ch,0xb5
   14000c013:	mov    ch,0xb5
   14000c015:	mov    ch,0xb5
   14000c017:	mov    ch,0xb5
   14000c019:	mov    ch,0x7f
   14000c01b:	add    BYTE PTR [rcx-0x7d4afdf4],0x83
   14000c022:	test   BYTE PTR [rbp-0x77787a7a],al
   14000c028:	mov    BYTE PTR [rcx+0xc89b50c],cl
   14000c02e:	mov    ch,0x8a
   14000c030:	mov    ch,0x8b
   14000c032:	mov    WORD PTR [rbp-0x70714a4b],cs
   14000c038:	nop
   14000c039:	xchg   ecx,eax
   14000c03a:	xchg   edx,eax
   14000c03b:	xchg   ebx,eax
   14000c03c:	mov    ch,0x94
   14000c03e:	mov    ch,0x95
   14000c040:	mov    ch,0x96
   14000c042:	mov    ch,0x97
   14000c044:	mov    ch,0x98
   14000c046:	cdq    
   14000c047:	(bad)  
   14000c048:	fwait
   14000c049:	pushf  
   14000c04a:	popf   
   14000c04b:	sahf   
   14000c04c:	or     al,0x2
   14000c04e:	lahf   
   14000c04f:	movabs al,ds:0xa7a6a5a4a3a2b5a1
   14000c058:	mov    ch,0xa8
   14000c05a:	mov    ch,0xa9
   14000c05c:	stos   BYTE PTR es:[rdi],al
   14000c05d:	stos   DWORD PTR es:[rdi],eax
   14000c05e:	lods   al,BYTE PTR ds:[rsi]
   14000c05f:	lods   eax,DWORD PTR ds:[rsi]
   14000c060:	or     al,0xae
   14000c062:	or     al,0xb5
   14000c064:	scas   eax,DWORD PTR es:[rdi]
   14000c065:	mov    ch,0xb0
   14000c067:	mov    cl,0xb2
   14000c069:	mov    bl,0xb4
   14000c06b:	or     al,0xcc
   14000c06d:	int3   
   14000c06e:	int3   
   14000c06f:	int3   
   14000c070:	rex push rdi
   14000c072:	sub    rsp,0x20
   14000c076:	cmp    QWORD PTR [rcx+0x8],0x0
   14000c07b:	mov    rdi,rcx
   14000c07e:	je     0x14000c0d2
   14000c080:	mov    QWORD PTR [rsp+0x30],rbx
   14000c085:	xor    ebx,ebx
   14000c087:	cmp    DWORD PTR [rcx+0x10],ebx
   14000c08a:	jle    0x14000c0c3
   14000c08c:	mov    QWORD PTR [rsp+0x38],rsi
   14000c091:	mov    rsi,rbx
   14000c094:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000c0a0:	mov    rax,QWORD PTR [rdi+0x8]
   14000c0a4:	mov    rcx,QWORD PTR [rsi+rax*1]
   14000c0a8:	test   rcx,rcx
   14000c0ab:	je     0x14000c0b3
   14000c0ad:	call   QWORD PTR [rip+0x904d]        # 0x140015100
   14000c0b3:	inc    ebx
   14000c0b5:	add    rsi,0x8
   14000c0b9:	cmp    ebx,DWORD PTR [rdi+0x10]
   14000c0bc:	jl     0x14000c0a0
   14000c0be:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c0c3:	mov    rcx,QWORD PTR [rdi+0x8]
   14000c0c7:	call   QWORD PTR [rip+0x9033]        # 0x140015100
   14000c0cd:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c0d2:	add    rsp,0x20
   14000c0d6:	pop    rdi
   14000c0d7:	ret    
   14000c0d8:	int3   
   14000c0d9:	int3   
   14000c0da:	int3   
   14000c0db:	int3   
   14000c0dc:	int3   
   14000c0dd:	int3   
   14000c0de:	int3   
   14000c0df:	int3   
   14000c0e0:	rex push rbx
   14000c0e2:	sub    rsp,0x30
   14000c0e6:	mov    r11d,r8d
   14000c0e9:	mov    rbx,rcx
   14000c0ec:	test   edx,edx
   14000c0ee:	jne    0x14000c0fc
   14000c0f0:	add    rsp,0x30
   14000c0f4:	pop    rbx
   14000c0f5:	rex.W jmp QWORD PTR [rip+0x910c]        # 0x140015208
   14000c0fc:	movzx  eax,BYTE PTR [rbx]
   14000c0ff:	movsd  xmm3,QWORD PTR [rip+0xb1c9]        # 0x1400172d0
   14000c107:	xor    ecx,ecx
   14000c109:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14000c10e:	movapd xmm6,xmm3
   14000c112:	cmp    al,0x2b
   14000c114:	jne    0x14000c11d
   14000c116:	mov    ecx,0x1
   14000c11b:	jmp    0x14000c12e
   14000c11d:	cmp    al,0x2d
   14000c11f:	jne    0x14000c12e
   14000c121:	movsd  xmm6,QWORD PTR [rip+0xb19f]        # 0x1400172c8
   14000c129:	mov    ecx,0x1
   14000c12e:	mov    eax,edx
   14000c130:	sub    eax,ecx
   14000c132:	cmp    eax,0x2
   14000c135:	jl     0x14000c185
   14000c137:	movsxd rax,ecx
   14000c13a:	cmp    BYTE PTR [rax+rbx*1],0x30
   14000c13e:	jne    0x14000c185
   14000c140:	movzx  eax,BYTE PTR [rax+rbx*1+0x1]
   14000c145:	cmp    al,0x78
   14000c147:	je     0x14000c14d
   14000c149:	cmp    al,0x58
   14000c14b:	jne    0x14000c178
   14000c14d:	cmp    r8d,0x22
   14000c151:	jge    0x14000c178
   14000c153:	test   r8d,r8d
   14000c156:	je     0x14000c16d
   14000c158:	cmp    r8d,0x10
   14000c15c:	je     0x14000c16d
   14000c15e:	xorpd  xmm0,xmm0
   14000c162:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000c167:	add    rsp,0x30
   14000c16b:	pop    rbx
   14000c16c:	ret    
   14000c16d:	mov    r11d,0x10
   14000c173:	add    ecx,0x2
   14000c176:	jmp    0x14000c191
   14000c178:	test   r8d,r8d
   14000c17b:	jne    0x14000c191
   14000c17d:	lea    r11d,[r8+0x8]
   14000c181:	inc    ecx
   14000c183:	jmp    0x14000c191
   14000c185:	mov    eax,0xa
   14000c18a:	test   r8d,r8d
   14000c18d:	cmove  r11d,eax
   14000c191:	mov    QWORD PTR [rsp+0x40],rdi
   14000c196:	movsxd rdi,ecx
   14000c199:	movsxd r9,edx
   14000c19c:	cmp    rdi,r9
   14000c19f:	mov    r10d,ecx
   14000c1a2:	mov    r8,rdi
   14000c1a5:	jge    0x14000c3c4
   14000c1ab:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c1b0:	movzx  edx,BYTE PTR [r8+rbx*1]
   14000c1b5:	lea    eax,[rdx-0x30]
   14000c1b8:	cmp    al,0x9
   14000c1ba:	ja     0x14000c1c4
   14000c1bc:	movsx  eax,dl
   14000c1bf:	sub    eax,0x30
   14000c1c2:	jmp    0x14000c1e0
   14000c1c4:	lea    eax,[rdx-0x61]
   14000c1c7:	cmp    al,0x19
   14000c1c9:	ja     0x14000c1d3
   14000c1cb:	movsx  eax,dl
   14000c1ce:	sub    eax,0x57
   14000c1d1:	jmp    0x14000c1e0
   14000c1d3:	lea    eax,[rdx-0x41]
   14000c1d6:	cmp    al,0x19
   14000c1d8:	ja     0x14000c1f4
   14000c1da:	movsx  eax,dl
   14000c1dd:	sub    eax,0x37
   14000c1e0:	cmp    eax,0xffffffff
   14000c1e3:	je     0x14000c1f4
   14000c1e5:	cmp    eax,r11d
   14000c1e8:	jge    0x14000c1f4
   14000c1ea:	inc    r8
   14000c1ed:	inc    ecx
   14000c1ef:	cmp    r8,r9
   14000c1f2:	jl     0x14000c1b0
   14000c1f4:	cmp    r10d,ecx
   14000c1f7:	je     0x14000c3c4
   14000c1fd:	xorpd  xmm2,xmm2
   14000c201:	lea    eax,[rcx-0x1]
   14000c204:	movsxd rdx,eax
   14000c207:	cmp    rdx,rdi
   14000c20a:	jl     0x14000c3ea
   14000c210:	mov    rax,rdx
   14000c213:	sub    rax,rdi
   14000c216:	inc    rax
   14000c219:	cmp    rax,0x4
   14000c21d:	jl     0x14000c360
   14000c223:	movd   xmm1,r11d
   14000c228:	lea    r8,[rdi+0x3]
   14000c22c:	cvtdq2pd xmm1,xmm1
   14000c230:	movzx  ecx,BYTE PTR [rbx+rdx*1]
   14000c234:	lea    eax,[rcx-0x30]
   14000c237:	cmp    al,0x9
   14000c239:	ja     0x14000c243
   14000c23b:	movsx  eax,cl
   14000c23e:	sub    eax,0x30
   14000c241:	jmp    0x14000c264
   14000c243:	lea    eax,[rcx-0x61]
   14000c246:	cmp    al,0x19
   14000c248:	ja     0x14000c252
   14000c24a:	movsx  eax,cl
   14000c24d:	sub    eax,0x57
   14000c250:	jmp    0x14000c264
   14000c252:	lea    eax,[rcx-0x41]
   14000c255:	cmp    al,0x19
   14000c257:	ja     0x14000c261
   14000c259:	movsx  eax,cl
   14000c25c:	sub    eax,0x37
   14000c25f:	jmp    0x14000c264
   14000c261:	or     eax,0xffffffff
   14000c264:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x1]
   14000c269:	movd   xmm0,eax
   14000c26d:	lea    eax,[rcx-0x30]
   14000c270:	cvtdq2pd xmm0,xmm0
   14000c274:	mulsd  xmm0,xmm3
   14000c278:	mulsd  xmm3,xmm1
   14000c27c:	addsd  xmm2,xmm0
   14000c280:	cmp    al,0x9
   14000c282:	ja     0x14000c28c
   14000c284:	movsx  eax,cl
   14000c287:	sub    eax,0x30
   14000c28a:	jmp    0x14000c2ad
   14000c28c:	lea    eax,[rcx-0x61]
   14000c28f:	cmp    al,0x19
   14000c291:	ja     0x14000c29b
   14000c293:	movsx  eax,cl
   14000c296:	sub    eax,0x57
   14000c299:	jmp    0x14000c2ad
   14000c29b:	lea    eax,[rcx-0x41]
   14000c29e:	cmp    al,0x19
   14000c2a0:	ja     0x14000c2aa
   14000c2a2:	movsx  eax,cl
   14000c2a5:	sub    eax,0x37
   14000c2a8:	jmp    0x14000c2ad
   14000c2aa:	or     eax,0xffffffff
   14000c2ad:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x2]
   14000c2b2:	movd   xmm0,eax
   14000c2b6:	lea    eax,[rcx-0x30]
   14000c2b9:	cvtdq2pd xmm0,xmm0
   14000c2bd:	mulsd  xmm0,xmm3
   14000c2c1:	mulsd  xmm3,xmm1
   14000c2c5:	addsd  xmm2,xmm0
   14000c2c9:	cmp    al,0x9
   14000c2cb:	ja     0x14000c2d5
   14000c2cd:	movsx  eax,cl
   14000c2d0:	sub    eax,0x30
   14000c2d3:	jmp    0x14000c2f6
   14000c2d5:	lea    eax,[rcx-0x61]
   14000c2d8:	cmp    al,0x19
   14000c2da:	ja     0x14000c2e4
   14000c2dc:	movsx  eax,cl
   14000c2df:	sub    eax,0x57
   14000c2e2:	jmp    0x14000c2f6
   14000c2e4:	lea    eax,[rcx-0x41]
   14000c2e7:	cmp    al,0x19
   14000c2e9:	ja     0x14000c2f3
   14000c2eb:	movsx  eax,cl
   14000c2ee:	sub    eax,0x37
   14000c2f1:	jmp    0x14000c2f6
   14000c2f3:	or     eax,0xffffffff
   14000c2f6:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x3]
   14000c2fb:	movd   xmm0,eax
   14000c2ff:	lea    eax,[rcx-0x30]
   14000c302:	cvtdq2pd xmm0,xmm0
   14000c306:	mulsd  xmm0,xmm3
   14000c30a:	mulsd  xmm3,xmm1
   14000c30e:	addsd  xmm2,xmm0
   14000c312:	cmp    al,0x9
   14000c314:	ja     0x14000c31e
   14000c316:	movsx  eax,cl
   14000c319:	sub    eax,0x30
   14000c31c:	jmp    0x14000c33f
   14000c31e:	lea    eax,[rcx-0x61]
   14000c321:	cmp    al,0x19
   14000c323:	ja     0x14000c32d
   14000c325:	movsx  eax,cl
   14000c328:	sub    eax,0x57
   14000c32b:	jmp    0x14000c33f
   14000c32d:	lea    eax,[rcx-0x41]
   14000c330:	cmp    al,0x19
   14000c332:	ja     0x14000c33c
   14000c334:	movsx  eax,cl
   14000c337:	sub    eax,0x37
   14000c33a:	jmp    0x14000c33f
   14000c33c:	or     eax,0xffffffff
   14000c33f:	movd   xmm0,eax
   14000c343:	sub    rdx,0x4
   14000c347:	cmp    rdx,r8
   14000c34a:	cvtdq2pd xmm0,xmm0
   14000c34e:	mulsd  xmm0,xmm3
   14000c352:	mulsd  xmm3,xmm1
   14000c356:	addsd  xmm2,xmm0
   14000c35a:	jge    0x14000c230
   14000c360:	cmp    rdx,rdi
   14000c363:	jl     0x14000c3ea
   14000c369:	movd   xmm1,r11d
   14000c36e:	cvtdq2pd xmm1,xmm1
   14000c372:	movzx  ecx,BYTE PTR [rdx+rbx*1]
   14000c376:	lea    eax,[rcx-0x30]
   14000c379:	cmp    al,0x9
   14000c37b:	ja     0x14000c385
   14000c37d:	movsx  eax,cl
   14000c380:	sub    eax,0x30
   14000c383:	jmp    0x14000c3a6
   14000c385:	lea    eax,[rcx-0x61]
   14000c388:	cmp    al,0x19
   14000c38a:	ja     0x14000c394
   14000c38c:	movsx  eax,cl
   14000c38f:	sub    eax,0x57
   14000c392:	jmp    0x14000c3a6
   14000c394:	lea    eax,[rcx-0x41]
   14000c397:	cmp    al,0x19
   14000c399:	ja     0x14000c3a3
   14000c39b:	movsx  eax,cl
   14000c39e:	sub    eax,0x37
   14000c3a1:	jmp    0x14000c3a6
   14000c3a3:	or     eax,0xffffffff
   14000c3a6:	movd   xmm0,eax
   14000c3aa:	dec    rdx
   14000c3ad:	cmp    rdx,rdi
   14000c3b0:	cvtdq2pd xmm0,xmm0
   14000c3b4:	mulsd  xmm0,xmm3
   14000c3b8:	mulsd  xmm3,xmm1
   14000c3bc:	addsd  xmm2,xmm0
   14000c3c0:	jge    0x14000c372
   14000c3c2:	jmp    0x14000c3ea
   14000c3c4:	lea    rdx,[rip+0xaeed]        # 0x1400172b8
   14000c3cb:	mov    rcx,rbx
   14000c3ce:	call   QWORD PTR [rip+0x8e2c]        # 0x140015200
   14000c3d4:	test   eax,eax
   14000c3d6:	jne    0x14000c3e0
   14000c3d8:	call   QWORD PTR [rip+0x8e1a]        # 0x1400151f8
   14000c3de:	jmp    0x14000c3e6
   14000c3e0:	call   QWORD PTR [rip+0x8e22]        # 0x140015208
   14000c3e6:	movapd xmm2,xmm0
   14000c3ea:	mov    rdi,QWORD PTR [rsp+0x40]
   14000c3ef:	mulsd  xmm2,xmm6
   14000c3f3:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000c3f8:	movapd xmm0,xmm2
   14000c3fc:	add    rsp,0x30
   14000c400:	pop    rbx
   14000c401:	ret    
   14000c402:	int3   
   14000c403:	int3   
   14000c404:	int3   
   14000c405:	int3   
   14000c406:	int3   
   14000c407:	int3   
   14000c408:	int3   
   14000c409:	int3   
   14000c40a:	int3   
   14000c40b:	int3   
   14000c40c:	int3   
   14000c40d:	int3   
   14000c40e:	int3   
   14000c40f:	int3   
   14000c410:	add    rcx,0x48
   14000c414:	rex.W jmp QWORD PTR [rip+0x8d9d]        # 0x1400151b8
   14000c41b:	int3   
   14000c41c:	int3   
   14000c41d:	int3   
   14000c41e:	int3   
   14000c41f:	int3   
   14000c420:	mov    rax,QWORD PTR [rcx]
   14000c423:	ret    
   14000c424:	int3   
   14000c425:	int3   
   14000c426:	int3   
   14000c427:	int3   
   14000c428:	int3   
   14000c429:	int3   
   14000c42a:	int3   
   14000c42b:	int3   
   14000c42c:	int3   
   14000c42d:	int3   
   14000c42e:	int3   
   14000c42f:	int3   
   14000c430:	mov    QWORD PTR [rcx],rdx
   14000c433:	ret    
   14000c434:	int3   
   14000c435:	int3   
   14000c436:	int3   
   14000c437:	int3   
   14000c438:	int3   
   14000c439:	int3   
   14000c43a:	int3   
   14000c43b:	int3   
   14000c43c:	int3   
   14000c43d:	int3   
   14000c43e:	int3   
   14000c43f:	int3   
   14000c440:	mov    rax,QWORD PTR [rcx+0x8]
   14000c444:	ret    
   14000c445:	int3   
   14000c446:	int3   
   14000c447:	int3   
   14000c448:	int3   
   14000c449:	int3   
   14000c44a:	int3   
   14000c44b:	int3   
   14000c44c:	int3   
   14000c44d:	int3   
   14000c44e:	int3   
   14000c44f:	int3   
   14000c450:	lea    rax,[rcx+0x10]
   14000c454:	ret    
   14000c455:	int3   
   14000c456:	int3   
   14000c457:	int3   
   14000c458:	int3   
   14000c459:	int3   
   14000c45a:	int3   
   14000c45b:	int3   
   14000c45c:	int3   
   14000c45d:	int3   
   14000c45e:	int3   
   14000c45f:	int3   
   14000c460:	mov    QWORD PTR [rsp+0x8],rbx
   14000c465:	mov    QWORD PTR [rsp+0x10],rbp
   14000c46a:	mov    QWORD PTR [rsp+0x18],rsi
   14000c46f:	push   rdi
   14000c470:	sub    rsp,0x20
   14000c474:	mov    rax,QWORD PTR [rcx+0x40]
   14000c478:	lea    rsi,[rcx+0x40]
   14000c47c:	mov    rbp,rdx
   14000c47f:	mov    ebx,DWORD PTR [rax+0x4]
   14000c482:	mov    rdx,r8
   14000c485:	mov    rcx,rsi
   14000c488:	mov    rdi,r8
   14000c48b:	call   QWORD PTR [rip+0x8d87]        # 0x140015218
   14000c491:	mov    r11,QWORD PTR [rdi]
   14000c494:	mov    r9d,DWORD PTR [r11+0x4]
   14000c498:	mov    r8d,ebx
   14000c49b:	mov    rdx,rbp
   14000c49e:	mov    rcx,rsi
   14000c4a1:	call   QWORD PTR [rip+0x8d69]        # 0x140015210
   14000c4a7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c4ac:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c4b1:	mov    rax,rbp
   14000c4b4:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c4b9:	add    rsp,0x20
   14000c4bd:	pop    rdi
   14000c4be:	ret    
   14000c4bf:	int3   
   14000c4c0:	cmp    rdx,r8
   14000c4c3:	je     0x14000c52b
   14000c4c5:	mov    QWORD PTR [rsp+0x8],rbx
   14000c4ca:	mov    QWORD PTR [rsp+0x10],rsi
   14000c4cf:	push   rdi
   14000c4d0:	sub    rsp,0x20
   14000c4d4:	mov    rdi,r9
   14000c4d7:	mov    rsi,r8
   14000c4da:	mov    rbx,rdx
   14000c4dd:	nop    DWORD PTR [rax]
   14000c4e0:	mov    ecx,0x10
   14000c4e5:	call   0x14001463e
   14000c4ea:	test   rax,rax
   14000c4ed:	je     0x14000c50a
   14000c4ef:	mov    rdx,QWORD PTR [rdi]
   14000c4f2:	mov    ecx,DWORD PTR [rdx]
   14000c4f4:	mov    DWORD PTR [rax],ecx
   14000c4f6:	mov    ecx,DWORD PTR [rdx+0x4]
   14000c4f9:	mov    DWORD PTR [rax+0x4],ecx
   14000c4fc:	mov    ecx,DWORD PTR [rdx+0x8]
   14000c4ff:	mov    DWORD PTR [rax+0x8],ecx
   14000c502:	mov    ecx,DWORD PTR [rdx+0xc]
   14000c505:	mov    DWORD PTR [rax+0xc],ecx
   14000c508:	jmp    0x14000c50c
   14000c50a:	xor    eax,eax
   14000c50c:	mov    QWORD PTR [rbx],rax
   14000c50f:	add    rbx,0x8
   14000c513:	add    rdi,0x8
   14000c517:	cmp    rbx,rsi
   14000c51a:	jne    0x14000c4e0
   14000c51c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c521:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c526:	add    rsp,0x20
   14000c52a:	pop    rdi
   14000c52b:	repz ret 
   14000c52d:	int3   
   14000c52e:	int3   
   14000c52f:	int3   
   14000c530:	sub    rsp,0x28
   14000c534:	mov    rdx,QWORD PTR [rcx]
   14000c537:	mov    eax,DWORD PTR [rdx]
   14000c539:	test   eax,eax
   14000c53b:	je     0x14000c54d
   14000c53d:	cmp    eax,0xffffffff
   14000c540:	je     0x14000c5aa
   14000c542:	lock add DWORD PTR [rdx],0xffffffff
   14000c546:	setne  al
   14000c549:	test   al,al
   14000c54b:	jne    0x14000c5aa
   14000c54d:	mov    QWORD PTR [rsp+0x30],rbx
   14000c552:	mov    QWORD PTR [rsp+0x38],rsi
   14000c557:	mov    rsi,QWORD PTR [rcx]
   14000c55a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000c55e:	mov    QWORD PTR [rsp+0x20],rdi
   14000c563:	lea    rbx,[rsi+rax*8+0x10]
   14000c568:	movsxd rax,DWORD PTR [rsi+0x8]
   14000c56c:	lea    rdi,[rsi+rax*8+0x10]
   14000c571:	cmp    rdi,rbx
   14000c574:	je     0x14000c592
   14000c576:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c580:	mov    rcx,QWORD PTR [rbx-0x8]
   14000c584:	sub    rbx,0x8
   14000c588:	call   0x140014638
   14000c58d:	cmp    rbx,rdi
   14000c590:	jne    0x14000c580
   14000c592:	mov    rcx,rsi
   14000c595:	call   QWORD PTR [rip+0x8e0d]        # 0x1400153a8
   14000c59b:	mov    rdi,QWORD PTR [rsp+0x20]
   14000c5a0:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c5a5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c5aa:	add    rsp,0x28
   14000c5ae:	ret    
   14000c5af:	int3   
   14000c5b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c5b5:	mov    QWORD PTR [rsp+0x18],rbp
   14000c5ba:	mov    QWORD PTR [rsp+0x20],rsi
   14000c5bf:	mov    DWORD PTR [rsp+0x10],edx
   14000c5c3:	push   rdi
   14000c5c4:	sub    rsp,0x20
   14000c5c8:	mov    rdx,QWORD PTR [rcx]
   14000c5cb:	movsxd rdi,r8d
   14000c5ce:	mov    rbp,rcx
   14000c5d1:	movsxd rax,DWORD PTR [rdx+0x8]
   14000c5d5:	mov    r8d,edi
   14000c5d8:	lea    rbx,[rdx+rax*8+0x10]
   14000c5dd:	lea    rdx,[rsp+0x38]
   14000c5e2:	call   QWORD PTR [rip+0x8db0]        # 0x140015398
   14000c5e8:	mov    r10,QWORD PTR [rbp+0x0]
   14000c5ec:	movsxd rdx,DWORD PTR [rsp+0x38]
   14000c5f1:	movsxd r9,DWORD PTR [r10+0x8]
   14000c5f5:	mov    rcx,rbp
   14000c5f8:	mov    rsi,rax
   14000c5fb:	add    rdx,r9
   14000c5fe:	lea    r8,[r10+rdx*8+0x10]
   14000c603:	lea    rdx,[r10+r9*8+0x10]
   14000c608:	mov    r9,rbx
   14000c60b:	call   0x14000c4c0
   14000c610:	mov    rdx,QWORD PTR [rbp+0x0]
   14000c614:	movsxd r11,DWORD PTR [rsp+0x38]
   14000c619:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000c61d:	lea    r9,[rbx+r11*8]
   14000c621:	lea    r8,[rdx+rcx*8+0x10]
   14000c626:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000c62a:	add    rcx,r11
   14000c62d:	add    rcx,rdi
   14000c630:	lea    rdx,[rdx+rcx*8+0x10]
   14000c635:	mov    rcx,rbp
   14000c638:	call   0x14000c4c0
   14000c63d:	mov    r11d,DWORD PTR [rsi]
   14000c640:	test   r11d,r11d
   14000c643:	je     0x14000c656
   14000c645:	cmp    r11d,0xffffffff
   14000c649:	je     0x14000c68b
   14000c64b:	lock add DWORD PTR [rsi],0xffffffff
   14000c64f:	setne  al
   14000c652:	test   al,al
   14000c654:	jne    0x14000c68b
   14000c656:	movsxd rax,DWORD PTR [rsi+0xc]
   14000c65a:	lea    rbx,[rsi+rax*8+0x10]
   14000c65f:	movsxd rax,DWORD PTR [rsi+0x8]
   14000c663:	lea    rdi,[rsi+rax*8+0x10]
   14000c668:	cmp    rdi,rbx
   14000c66b:	je     0x14000c682
   14000c66d:	nop    DWORD PTR [rax]
   14000c670:	mov    rcx,QWORD PTR [rbx-0x8]
   14000c674:	sub    rbx,0x8
   14000c678:	call   0x140014638
   14000c67d:	cmp    rbx,rdi
   14000c680:	jne    0x14000c670
   14000c682:	mov    rcx,rsi
   14000c685:	call   QWORD PTR [rip+0x8d1d]        # 0x1400153a8
   14000c68b:	mov    rdx,QWORD PTR [rbp+0x0]
   14000c68f:	movsxd rax,DWORD PTR [rsp+0x38]
   14000c694:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c699:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000c69d:	mov    rbp,QWORD PTR [rsp+0x40]
   14000c6a2:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c6a7:	add    rcx,rax
   14000c6aa:	lea    rax,[rdx+rcx*8+0x10]
   14000c6af:	add    rsp,0x20
   14000c6b3:	pop    rdi
   14000c6b4:	ret    
   14000c6b5:	int3   
   14000c6b6:	int3   
   14000c6b7:	int3   
   14000c6b8:	int3   
   14000c6b9:	int3   
   14000c6ba:	int3   
   14000c6bb:	int3   
   14000c6bc:	int3   
   14000c6bd:	int3   
   14000c6be:	int3   
   14000c6bf:	int3   
   14000c6c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c6c5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c6ca:	push   rdi
   14000c6cb:	sub    rsp,0x20
   14000c6cf:	xor    esi,esi
   14000c6d1:	mov    rdi,rcx
   14000c6d4:	add    rcx,0x10
   14000c6d8:	mov    QWORD PTR [rcx-0x10],rsi
   14000c6dc:	mov    QWORD PTR [rcx-0x8],rsi
   14000c6e0:	call   QWORD PTR [rip+0x8cda]        # 0x1400153c0
   14000c6e6:	mov    QWORD PTR [rdi+0x18],rsi
   14000c6ea:	mov    DWORD PTR [rdi+0x20],esi
   14000c6ed:	mov    DWORD PTR [rdi+0x24],0xffffffff
   14000c6f4:	mov    QWORD PTR [rdi+0x28],rsi
   14000c6f8:	mov    QWORD PTR [rdi+0x30],rsi
   14000c6fc:	mov    rax,QWORD PTR [rip+0x8cad]        # 0x1400153b0
   14000c703:	lea    rcx,[rdi+0x40]
   14000c707:	mov    QWORD PTR [rdi+0x38],rax
   14000c70b:	call   QWORD PTR [rip+0x8adf]        # 0x1400151f0
   14000c711:	lea    rcx,[rdi+0x48]
   14000c715:	call   QWORD PTR [rip+0x8ad5]        # 0x1400151f0
   14000c71b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c720:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c725:	mov    rax,rdi
   14000c728:	add    rsp,0x20
   14000c72c:	pop    rdi
   14000c72d:	ret    
   14000c72e:	int3   
   14000c72f:	int3   
   14000c730:	rex push rbx
   14000c732:	sub    rsp,0x20
   14000c736:	mov    rbx,rcx
   14000c739:	add    rcx,0x48
   14000c73d:	call   QWORD PTR [rip+0x8c75]        # 0x1400153b8
   14000c743:	lea    rcx,[rbx+0x40]
   14000c747:	call   QWORD PTR [rip+0x8c6b]        # 0x1400153b8
   14000c74d:	lea    rcx,[rbx+0x38]
   14000c751:	call   0x14000c530
   14000c756:	lea    rcx,[rbx+0x10]
   14000c75a:	add    rsp,0x20
   14000c75e:	pop    rbx
   14000c75f:	jmp    0x14000c070
   14000c764:	int3   
   14000c765:	int3   
   14000c766:	int3   
   14000c767:	int3   
   14000c768:	int3   
   14000c769:	int3   
   14000c76a:	int3   
   14000c76b:	int3   
   14000c76c:	int3   
   14000c76d:	int3   
   14000c76e:	int3   
   14000c76f:	int3   
   14000c770:	sub    rsp,0x38
   14000c774:	test   r8d,r8d
   14000c777:	jle    0x14000c806
   14000c77d:	mov    eax,DWORD PTR [rsp+0x60]
   14000c781:	add    rcx,0x38
   14000c785:	mov    DWORD PTR [rsp+0x20],edx
   14000c789:	mov    DWORD PTR [rsp+0x2c],eax
   14000c78d:	mov    rax,QWORD PTR [rcx]
   14000c790:	mov    QWORD PTR [rsp+0x30],rbx
   14000c795:	mov    edx,DWORD PTR [rax]
   14000c797:	mov    DWORD PTR [rsp+0x24],r8d
   14000c79c:	mov    DWORD PTR [rsp+0x28],r9d
   14000c7a1:	cmp    edx,0x1
   14000c7a4:	je     0x14000c7bc
   14000c7a6:	test   edx,edx
   14000c7a8:	je     0x14000c7bc
   14000c7aa:	mov    edx,0x7fffffff
   14000c7af:	mov    r8d,0x1
   14000c7b5:	call   0x14000c5b0
   14000c7ba:	jmp    0x14000c7c2
   14000c7bc:	call   QWORD PTR [rip+0x8bce]        # 0x140015390
   14000c7c2:	mov    ecx,0x10
   14000c7c7:	mov    rbx,rax
   14000c7ca:	call   0x14001463e
   14000c7cf:	test   rax,rax
   14000c7d2:	je     0x14000c7fc
   14000c7d4:	lea    rdx,[rsp+0x20]
   14000c7d9:	mov    ecx,DWORD PTR [rdx]
   14000c7db:	mov    DWORD PTR [rax],ecx
   14000c7dd:	mov    ecx,DWORD PTR [rdx+0x4]
   14000c7e0:	mov    DWORD PTR [rax+0x4],ecx
   14000c7e3:	mov    ecx,DWORD PTR [rdx+0x8]
   14000c7e6:	mov    DWORD PTR [rax+0x8],ecx
   14000c7e9:	mov    ecx,DWORD PTR [rdx+0xc]
   14000c7ec:	mov    DWORD PTR [rax+0xc],ecx
   14000c7ef:	mov    QWORD PTR [rbx],rax
   14000c7f2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c7f7:	add    rsp,0x38
   14000c7fb:	ret    
   14000c7fc:	xor    eax,eax
   14000c7fe:	mov    QWORD PTR [rbx],rax
   14000c801:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c806:	add    rsp,0x38
   14000c80a:	ret    
   14000c80b:	int3   
   14000c80c:	int3   
   14000c80d:	int3   
   14000c80e:	int3   
   14000c80f:	int3   
   14000c810:	movzx  eax,WORD PTR [rcx]
   14000c813:	cmp    ax,0x66
   14000c817:	jne    0x14000c835
   14000c819:	cmp    WORD PTR [rcx+0x2],0x6f
   14000c81e:	jne    0x14000c8e2
   14000c824:	cmp    WORD PTR [rcx+0x4],0x72
   14000c829:	jne    0x14000c8e2
   14000c82f:	mov    eax,0x15
   14000c834:	ret    
   14000c835:	cmp    ax,0x67
   14000c839:	jne    0x14000c857
   14000c83b:	cmp    WORD PTR [rcx+0x2],0x65
   14000c840:	jne    0x14000c8e2
   14000c846:	cmp    WORD PTR [rcx+0x4],0x74
   14000c84b:	jne    0x14000c8e2
   14000c851:	mov    eax,0x5f
   14000c856:	ret    
   14000c857:	cmp    ax,0x69
   14000c85b:	jne    0x14000c87b
   14000c85d:	cmp    WORD PTR [rcx+0x2],0x6e
   14000c862:	jne    0x14000c8e2
   14000c864:	cmp    WORD PTR [rcx+0x4],0x74
   14000c869:	jne    0x14000c8e2
   14000c86b:	mov    eax,0x1d
   14000c870:	mov    ecx,0x56
   14000c875:	test   dl,dl
   14000c877:	cmovne eax,ecx
   14000c87a:	ret    
   14000c87b:	cmp    ax,0x6e
   14000c87f:	jne    0x14000c895
   14000c881:	cmp    WORD PTR [rcx+0x2],0x65
   14000c886:	jne    0x14000c8e2
   14000c888:	cmp    WORD PTR [rcx+0x4],0x77
   14000c88d:	jne    0x14000c8e2
   14000c88f:	mov    eax,0x2b
   14000c894:	ret    
   14000c895:	cmp    ax,0x73
   14000c899:	jne    0x14000c8af
   14000c89b:	cmp    WORD PTR [rcx+0x2],0x65
   14000c8a0:	jne    0x14000c8e2
   14000c8a2:	cmp    WORD PTR [rcx+0x4],0x74
   14000c8a7:	jne    0x14000c8e2
   14000c8a9:	mov    eax,0x60
   14000c8ae:	ret    
   14000c8af:	cmp    ax,0x74
   14000c8b3:	jne    0x14000c8c9
   14000c8b5:	cmp    WORD PTR [rcx+0x2],0x72
   14000c8ba:	jne    0x14000c8e2
   14000c8bc:	cmp    WORD PTR [rcx+0x4],0x79
   14000c8c1:	jne    0x14000c8e2
   14000c8c3:	mov    eax,0x49
   14000c8c8:	ret    
   14000c8c9:	cmp    ax,0x76
   14000c8cd:	jne    0x14000c8e2
   14000c8cf:	cmp    WORD PTR [rcx+0x2],0x61
   14000c8d4:	jne    0x14000c8e2
   14000c8d6:	cmp    WORD PTR [rcx+0x4],0x72
   14000c8db:	mov    eax,0x4b
   14000c8e0:	je     0x14000c8e7
   14000c8e2:	mov    eax,0x1d
   14000c8e7:	repz ret 
   14000c8e9:	int3   
   14000c8ea:	int3   
   14000c8eb:	int3   
   14000c8ec:	int3   
   14000c8ed:	int3   
   14000c8ee:	int3   
   14000c8ef:	int3   
   14000c8f0:	movzx  eax,WORD PTR [rcx]
   14000c8f3:	cmp    ax,0x62
   14000c8f7:	jne    0x14000c92a
   14000c8f9:	cmp    WORD PTR [rcx+0x2],0x79
   14000c8fe:	jne    0x14000cabc
   14000c904:	cmp    WORD PTR [rcx+0x4],0x74
   14000c909:	jne    0x14000cabc
   14000c90f:	cmp    WORD PTR [rcx+0x6],0x65
   14000c914:	jne    0x14000cabc
   14000c91a:	mov    eax,0x1d
   14000c91f:	mov    ecx,0x56
   14000c924:	test   dl,dl
   14000c926:	cmovne eax,ecx
   14000c929:	ret    
   14000c92a:	cmp    ax,0x63
   14000c92e:	jne    0x14000c972
   14000c930:	movzx  eax,WORD PTR [rcx+0x2]
   14000c934:	cmp    ax,0x61
   14000c938:	jne    0x14000c956
   14000c93a:	cmp    WORD PTR [rcx+0x4],0x73
   14000c93f:	jne    0x14000cabc
   14000c945:	cmp    WORD PTR [rcx+0x6],0x65
   14000c94a:	jne    0x14000cabc
   14000c950:	mov    eax,0x5
   14000c955:	ret    
   14000c956:	cmp    ax,0x68
   14000c95a:	jne    0x14000cabc
   14000c960:	cmp    WORD PTR [rcx+0x4],0x61
   14000c965:	jne    0x14000cabc
   14000c96b:	cmp    WORD PTR [rcx+0x6],0x72
   14000c970:	jmp    0x14000c914
   14000c972:	cmp    ax,0x65
   14000c976:	jne    0x14000c9c4
   14000c978:	movzx  eax,WORD PTR [rcx+0x2]
   14000c97c:	cmp    ax,0x6c
   14000c980:	jne    0x14000c99e
   14000c982:	cmp    WORD PTR [rcx+0x4],0x73
   14000c987:	jne    0x14000cabc
   14000c98d:	cmp    WORD PTR [rcx+0x6],0x65
   14000c992:	jne    0x14000cabc
   14000c998:	mov    eax,0x10
   14000c99d:	ret    
   14000c99e:	cmp    ax,0x6e
   14000c9a2:	jne    0x14000cabc
   14000c9a8:	cmp    WORD PTR [rcx+0x4],0x75
   14000c9ad:	jne    0x14000cabc
   14000c9b3:	cmp    WORD PTR [rcx+0x6],0x6d
   14000c9b8:	jne    0x14000cabc
   14000c9be:	mov    eax,0x56
   14000c9c3:	ret    
   14000c9c4:	cmp    ax,0x67
   14000c9c8:	jne    0x14000c9ea
   14000c9ca:	cmp    WORD PTR [rcx+0x2],0x6f
   14000c9cf:	jne    0x14000cabc
   14000c9d5:	cmp    WORD PTR [rcx+0x4],0x74
   14000c9da:	jne    0x14000cabc
   14000c9e0:	cmp    WORD PTR [rcx+0x6],0x6f
   14000c9e5:	jmp    0x14000c914
   14000c9ea:	cmp    ax,0x6c
   14000c9ee:	jne    0x14000ca10
   14000c9f0:	cmp    WORD PTR [rcx+0x2],0x6f
   14000c9f5:	jne    0x14000cabc
   14000c9fb:	cmp    WORD PTR [rcx+0x4],0x6e
   14000ca00:	jne    0x14000cabc
   14000ca06:	cmp    WORD PTR [rcx+0x6],0x67
   14000ca0b:	jmp    0x14000c914
   14000ca10:	cmp    ax,0x6e
   14000ca14:	jne    0x14000ca3d
   14000ca16:	cmp    WORD PTR [rcx+0x2],0x75
   14000ca1b:	jne    0x14000cabc
   14000ca21:	cmp    WORD PTR [rcx+0x4],0x6c
   14000ca26:	jne    0x14000cabc
   14000ca2c:	cmp    WORD PTR [rcx+0x6],0x6c
   14000ca31:	jne    0x14000cabc
   14000ca37:	mov    eax,0x51
   14000ca3c:	ret    
   14000ca3d:	cmp    ax,0x74
   14000ca41:	jne    0x14000ca7b
   14000ca43:	movzx  eax,WORD PTR [rcx+0x2]
   14000ca47:	cmp    ax,0x68
   14000ca4b:	jne    0x14000ca61
   14000ca4d:	cmp    WORD PTR [rcx+0x4],0x69
   14000ca52:	jne    0x14000cabc
   14000ca54:	cmp    WORD PTR [rcx+0x6],0x73
   14000ca59:	jne    0x14000cabc
   14000ca5b:	mov    eax,0x46
   14000ca60:	ret    
   14000ca61:	cmp    ax,0x72
   14000ca65:	jne    0x14000cabc
   14000ca67:	cmp    WORD PTR [rcx+0x4],0x75
   14000ca6c:	jne    0x14000cabc
   14000ca6e:	cmp    WORD PTR [rcx+0x6],0x65
   14000ca73:	jne    0x14000cabc
   14000ca75:	mov    eax,0x52
   14000ca7a:	ret    
   14000ca7b:	cmp    ax,0x76
   14000ca7f:	jne    0x14000ca9c
   14000ca81:	cmp    WORD PTR [rcx+0x2],0x6f
   14000ca86:	jne    0x14000cabc
   14000ca88:	cmp    WORD PTR [rcx+0x4],0x69
   14000ca8d:	jne    0x14000cabc
   14000ca8f:	cmp    WORD PTR [rcx+0x6],0x64
   14000ca94:	jne    0x14000cabc
   14000ca96:	mov    eax,0x4c
   14000ca9b:	ret    
   14000ca9c:	cmp    ax,0x77
   14000caa0:	jne    0x14000cabc
   14000caa2:	cmp    WORD PTR [rcx+0x2],0x69
   14000caa7:	jne    0x14000cabc
   14000caa9:	cmp    WORD PTR [rcx+0x4],0x74
   14000caae:	jne    0x14000cabc
   14000cab0:	cmp    WORD PTR [rcx+0x6],0x68
   14000cab5:	mov    eax,0x4e
   14000caba:	je     0x14000cac1
   14000cabc:	mov    eax,0x1d
   14000cac1:	repz ret 
   14000cac3:	int3   
   14000cac4:	int3   
   14000cac5:	int3   
   14000cac6:	int3   
   14000cac7:	int3   
   14000cac8:	int3   
   14000cac9:	int3   
   14000caca:	int3   
   14000cacb:	int3   
   14000cacc:	int3   
   14000cacd:	int3   
   14000cace:	int3   
   14000cacf:	int3   
   14000cad0:	movzx  eax,WORD PTR [rcx]
   14000cad3:	cmp    ax,0x62
   14000cad7:	jne    0x14000cb0b
   14000cad9:	cmp    WORD PTR [rcx+0x2],0x72
   14000cade:	jne    0x14000ccde
   14000cae4:	cmp    WORD PTR [rcx+0x4],0x65
   14000cae9:	jne    0x14000ccde
   14000caef:	cmp    WORD PTR [rcx+0x6],0x61
   14000caf4:	jne    0x14000ccde
   14000cafa:	cmp    WORD PTR [rcx+0x8],0x6b
   14000caff:	jne    0x14000ccde
   14000cb05:	mov    eax,0x4
   14000cb0a:	ret    
   14000cb0b:	cmp    ax,0x63
   14000cb0f:	jne    0x14000cbae
   14000cb15:	movzx  eax,WORD PTR [rcx+0x2]
   14000cb19:	cmp    ax,0x61
   14000cb1d:	jne    0x14000cb46
   14000cb1f:	cmp    WORD PTR [rcx+0x4],0x74
   14000cb24:	jne    0x14000ccde
   14000cb2a:	cmp    WORD PTR [rcx+0x6],0x63
   14000cb2f:	jne    0x14000ccde
   14000cb35:	cmp    WORD PTR [rcx+0x8],0x68
   14000cb3a:	jne    0x14000ccde
   14000cb40:	mov    eax,0x6
   14000cb45:	ret    
   14000cb46:	cmp    ax,0x6c
   14000cb4a:	jne    0x14000cb73
   14000cb4c:	cmp    WORD PTR [rcx+0x4],0x61
   14000cb51:	jne    0x14000ccde
   14000cb57:	cmp    WORD PTR [rcx+0x6],0x73
   14000cb5c:	jne    0x14000ccde
   14000cb62:	cmp    WORD PTR [rcx+0x8],0x73
   14000cb67:	jne    0x14000ccde
   14000cb6d:	mov    eax,0x56
   14000cb72:	ret    
   14000cb73:	cmp    ax,0x6f
   14000cb77:	jne    0x14000ccde
   14000cb7d:	cmp    WORD PTR [rcx+0x4],0x6e
   14000cb82:	jne    0x14000ccde
   14000cb88:	cmp    WORD PTR [rcx+0x6],0x73
   14000cb8d:	jne    0x14000ccde
   14000cb93:	cmp    WORD PTR [rcx+0x8],0x74
   14000cb98:	jne    0x14000ccde
   14000cb9e:	mov    eax,0x56
   14000cba3:	mov    ecx,0x54
   14000cba8:	test   dl,dl
   14000cbaa:	cmovne eax,ecx
   14000cbad:	ret    
   14000cbae:	cmp    ax,0x66
   14000cbb2:	jne    0x14000cc49
   14000cbb8:	movzx  eax,WORD PTR [rcx+0x2]
   14000cbbc:	cmp    ax,0x61
   14000cbc0:	jne    0x14000cbe9
   14000cbc2:	cmp    WORD PTR [rcx+0x4],0x6c
   14000cbc7:	jne    0x14000ccde
   14000cbcd:	cmp    WORD PTR [rcx+0x6],0x73
   14000cbd2:	jne    0x14000ccde
   14000cbd8:	cmp    WORD PTR [rcx+0x8],0x65
   14000cbdd:	jne    0x14000ccde
   14000cbe3:	mov    eax,0x53
   14000cbe8:	ret    
   14000cbe9:	cmp    ax,0x69
   14000cbed:	jne    0x14000cc22
   14000cbef:	cmp    WORD PTR [rcx+0x4],0x6e
   14000cbf4:	jne    0x14000ccde
   14000cbfa:	cmp    WORD PTR [rcx+0x6],0x61
   14000cbff:	jne    0x14000ccde
   14000cc05:	cmp    WORD PTR [rcx+0x8],0x6c
   14000cc0a:	jne    0x14000ccde
   14000cc10:	mov    eax,0x56
   14000cc15:	mov    ecx,0x1d
   14000cc1a:	test   dl,dl
   14000cc1c:	cmovne ecx,eax
   14000cc1f:	mov    eax,ecx
   14000cc21:	ret    
   14000cc22:	cmp    ax,0x6c
   14000cc26:	jne    0x14000ccde
   14000cc2c:	cmp    WORD PTR [rcx+0x4],0x6f
   14000cc31:	jne    0x14000ccde
   14000cc37:	cmp    WORD PTR [rcx+0x6],0x61
   14000cc3c:	jne    0x14000ccde
   14000cc42:	cmp    WORD PTR [rcx+0x8],0x74
   14000cc47:	jmp    0x14000cc0a
   14000cc49:	cmp    ax,0x73
   14000cc4d:	jne    0x14000cc8f
   14000cc4f:	movzx  eax,WORD PTR [rcx+0x2]
   14000cc53:	cmp    ax,0x68
   14000cc57:	jne    0x14000cc6e
   14000cc59:	cmp    WORD PTR [rcx+0x4],0x6f
   14000cc5e:	jne    0x14000ccde
   14000cc60:	cmp    WORD PTR [rcx+0x6],0x72
   14000cc65:	jne    0x14000ccde
   14000cc67:	cmp    WORD PTR [rcx+0x8],0x74
   14000cc6c:	jmp    0x14000cc0a
   14000cc6e:	cmp    ax,0x75
   14000cc72:	jne    0x14000ccde
   14000cc74:	cmp    WORD PTR [rcx+0x4],0x70
   14000cc79:	jne    0x14000ccde
   14000cc7b:	cmp    WORD PTR [rcx+0x6],0x65
   14000cc80:	jne    0x14000ccde
   14000cc82:	cmp    WORD PTR [rcx+0x8],0x72
   14000cc87:	jne    0x14000ccde
   14000cc89:	mov    eax,0x56
   14000cc8e:	ret    
   14000cc8f:	cmp    ax,0x74
   14000cc93:	jne    0x14000ccb7
   14000cc95:	cmp    WORD PTR [rcx+0x2],0x68
   14000cc9a:	jne    0x14000ccde
   14000cc9c:	cmp    WORD PTR [rcx+0x4],0x72
   14000cca1:	jne    0x14000ccde
   14000cca3:	cmp    WORD PTR [rcx+0x6],0x6f
   14000cca8:	jne    0x14000ccde
   14000ccaa:	cmp    WORD PTR [rcx+0x8],0x77
   14000ccaf:	jne    0x14000ccde
   14000ccb1:	mov    eax,0x47
   14000ccb6:	ret    
   14000ccb7:	cmp    ax,0x77
   14000ccbb:	jne    0x14000ccde
   14000ccbd:	cmp    WORD PTR [rcx+0x2],0x68
   14000ccc2:	jne    0x14000ccde
   14000ccc4:	cmp    WORD PTR [rcx+0x4],0x69
   14000ccc9:	jne    0x14000ccde
   14000cccb:	cmp    WORD PTR [rcx+0x6],0x6c
   14000ccd0:	jne    0x14000ccde
   14000ccd2:	cmp    WORD PTR [rcx+0x8],0x65
   14000ccd7:	mov    eax,0x4d
   14000ccdc:	je     0x14000cce3
   14000ccde:	mov    eax,0x1d
   14000cce3:	repz ret 
   14000cce5:	int3   
   14000cce6:	int3   
   14000cce7:	int3   
   14000cce8:	int3   
   14000cce9:	int3   
   14000ccea:	int3   
   14000cceb:	int3   
   14000ccec:	int3   
   14000cced:	int3   
   14000ccee:	int3   
   14000ccef:	int3   
   14000ccf0:	movzx  eax,WORD PTR [rcx]
   14000ccf3:	cmp    ax,0x64
   14000ccf7:	jne    0x14000cd7d
   14000ccfd:	movzx  eax,WORD PTR [rcx+0x2]
   14000cd01:	cmp    ax,0x65
   14000cd05:	jne    0x14000cd37
   14000cd07:	cmp    WORD PTR [rcx+0x4],0x6c
   14000cd0c:	jne    0x14000d011
   14000cd12:	cmp    WORD PTR [rcx+0x6],ax
   14000cd16:	jne    0x14000d011
   14000cd1c:	cmp    WORD PTR [rcx+0x8],0x74
   14000cd21:	jne    0x14000d011
   14000cd27:	cmp    WORD PTR [rcx+0xa],ax
   14000cd2b:	jne    0x14000d011
   14000cd31:	mov    eax,0xb
   14000cd36:	ret    
   14000cd37:	cmp    ax,0x6f
   14000cd3b:	jne    0x14000d011
   14000cd41:	cmp    WORD PTR [rcx+0x4],0x75
   14000cd46:	jne    0x14000d011
   14000cd4c:	cmp    WORD PTR [rcx+0x6],0x62
   14000cd51:	jne    0x14000d011
   14000cd57:	cmp    WORD PTR [rcx+0x8],0x6c
   14000cd5c:	jne    0x14000d011
   14000cd62:	cmp    WORD PTR [rcx+0xa],0x65
   14000cd67:	jne    0x14000d011
   14000cd6d:	mov    ecx,0x56
   14000cd72:	mov    eax,0x1d
   14000cd77:	test   dl,dl
   14000cd79:	cmovne eax,ecx
   14000cd7c:	ret    
   14000cd7d:	cmp    ax,0x65
   14000cd81:	jne    0x14000cdc0
   14000cd83:	cmp    WORD PTR [rcx+0x2],0x78
   14000cd88:	jne    0x14000d011
   14000cd8e:	cmp    WORD PTR [rcx+0x4],0x70
   14000cd93:	jne    0x14000d011
   14000cd99:	cmp    WORD PTR [rcx+0x6],0x6f
   14000cd9e:	jne    0x14000d011
   14000cda4:	cmp    WORD PTR [rcx+0x8],0x72
   14000cda9:	jne    0x14000d011
   14000cdaf:	cmp    WORD PTR [rcx+0xa],0x74
   14000cdb4:	jne    0x14000d011
   14000cdba:	mov    eax,0x56
   14000cdbf:	ret    
   14000cdc0:	cmp    ax,0x69
   14000cdc4:	jne    0x14000ce0f
   14000cdc6:	cmp    WORD PTR [rcx+0x2],0x6d
   14000cdcb:	jne    0x14000d011
   14000cdd1:	cmp    WORD PTR [rcx+0x4],0x70
   14000cdd6:	jne    0x14000d011
   14000cddc:	cmp    WORD PTR [rcx+0x6],0x6f
   14000cde1:	jne    0x14000d011
   14000cde7:	cmp    WORD PTR [rcx+0x8],0x72
   14000cdec:	jne    0x14000d011
   14000cdf2:	cmp    WORD PTR [rcx+0xa],0x74
   14000cdf7:	jne    0x14000d011
   14000cdfd:	mov    eax,0x5b
   14000ce02:	mov    ecx,0x56
   14000ce07:	test   dl,dl
   14000ce09:	cmovne ecx,eax
   14000ce0c:	mov    eax,ecx
   14000ce0e:	ret    
   14000ce0f:	cmp    ax,0x6e
   14000ce13:	jne    0x14000ce40
   14000ce15:	cmp    WORD PTR [rcx+0x2],0x61
   14000ce1a:	jne    0x14000d011
   14000ce20:	cmp    WORD PTR [rcx+0x4],0x74
   14000ce25:	jne    0x14000d011
   14000ce2b:	cmp    WORD PTR [rcx+0x6],0x69
   14000ce30:	jne    0x14000d011
   14000ce36:	cmp    WORD PTR [rcx+0x8],0x76
   14000ce3b:	jmp    0x14000cd5c
   14000ce40:	cmp    ax,0x70
   14000ce44:	jne    0x14000ced6
   14000ce4a:	movzx  eax,WORD PTR [rcx+0x2]
   14000ce4e:	cmp    ax,0x75
   14000ce52:	jne    0x14000ce90
   14000ce54:	cmp    WORD PTR [rcx+0x4],0x62
   14000ce59:	jne    0x14000d011
   14000ce5f:	cmp    WORD PTR [rcx+0x6],0x6c
   14000ce64:	jne    0x14000d011
   14000ce6a:	cmp    WORD PTR [rcx+0x8],0x69
   14000ce6f:	jne    0x14000d011
   14000ce75:	cmp    WORD PTR [rcx+0xa],0x63
   14000ce7a:	jne    0x14000d011
   14000ce80:	mov    ecx,0x5a
   14000ce85:	mov    eax,0x1d
   14000ce8a:	test   dl,dl
   14000ce8c:	cmovne eax,ecx
   14000ce8f:	ret    
   14000ce90:	cmp    ax,0x72
   14000ce94:	jne    0x14000d011
   14000ce9a:	cmp    WORD PTR [rcx+0x4],0x61
   14000ce9f:	jne    0x14000d011
   14000cea5:	cmp    WORD PTR [rcx+0x6],0x67
   14000ceaa:	jne    0x14000d011
   14000ceb0:	cmp    WORD PTR [rcx+0x8],0x6d
   14000ceb5:	jne    0x14000d011
   14000cebb:	cmp    WORD PTR [rcx+0xa],0x61
   14000cec0:	jne    0x14000d011
   14000cec6:	mov    ecx,0x5c
   14000cecb:	mov    eax,0x1d
   14000ced0:	test   dl,dl
   14000ced2:	cmovne eax,ecx
   14000ced5:	ret    
   14000ced6:	cmp    ax,0x72
   14000ceda:	jne    0x14000cf18
   14000cedc:	cmp    WORD PTR [rcx+0x2],0x65
   14000cee1:	jne    0x14000d011
   14000cee7:	cmp    WORD PTR [rcx+0x4],0x74
   14000ceec:	jne    0x14000d011
   14000cef2:	cmp    WORD PTR [rcx+0x6],0x75
   14000cef7:	jne    0x14000d011
   14000cefd:	cmp    WORD PTR [rcx+0x8],ax
   14000cf01:	jne    0x14000d011
   14000cf07:	cmp    WORD PTR [rcx+0xa],0x6e
   14000cf0c:	jne    0x14000d011
   14000cf12:	mov    eax,0x3b
   14000cf17:	ret    
   14000cf18:	cmp    ax,0x73
   14000cf1c:	jne    0x14000cfbb
   14000cf22:	test   dl,dl
   14000cf24:	je     0x14000cf5f
   14000cf26:	cmp    WORD PTR [rcx+0x2],0x69
   14000cf2b:	jne    0x14000cf5f
   14000cf2d:	cmp    WORD PTR [rcx+0x4],0x67
   14000cf32:	jne    0x14000d011
   14000cf38:	cmp    WORD PTR [rcx+0x6],0x6e
   14000cf3d:	jne    0x14000d011
   14000cf43:	cmp    WORD PTR [rcx+0x8],0x61
   14000cf48:	jne    0x14000d011
   14000cf4e:	cmp    WORD PTR [rcx+0xa],0x6c
   14000cf53:	jne    0x14000d011
   14000cf59:	mov    eax,0x43
   14000cf5e:	ret    
   14000cf5f:	movzx  eax,WORD PTR [rcx+0x2]
   14000cf63:	cmp    ax,0x74
   14000cf67:	jne    0x14000cf93
   14000cf69:	cmp    WORD PTR [rcx+0x4],0x61
   14000cf6e:	jne    0x14000d011
   14000cf74:	cmp    WORD PTR [rcx+0x6],ax
   14000cf78:	jne    0x14000d011
   14000cf7e:	cmp    WORD PTR [rcx+0x8],0x69
   14000cf83:	jne    0x14000d011
   14000cf89:	cmp    WORD PTR [rcx+0xa],0x63
   14000cf8e:	jmp    0x14000cd67
   14000cf93:	cmp    ax,0x77
   14000cf97:	jne    0x14000d011
   14000cf99:	cmp    WORD PTR [rcx+0x4],0x69
   14000cf9e:	jne    0x14000d011
   14000cfa0:	cmp    WORD PTR [rcx+0x6],0x74
   14000cfa5:	jne    0x14000d011
   14000cfa7:	cmp    WORD PTR [rcx+0x8],0x63
   14000cfac:	jne    0x14000d011
   14000cfae:	cmp    WORD PTR [rcx+0xa],0x68
   14000cfb3:	jne    0x14000d011
   14000cfb5:	mov    eax,0x45
   14000cfba:	ret    
   14000cfbb:	cmp    ax,0x74
   14000cfbf:	jne    0x14000d011
   14000cfc1:	movzx  eax,WORD PTR [rcx+0x2]
   14000cfc5:	cmp    ax,0x68
   14000cfc9:	jne    0x14000cfea
   14000cfcb:	cmp    WORD PTR [rcx+0x4],0x72
   14000cfd0:	jne    0x14000d011
   14000cfd2:	cmp    WORD PTR [rcx+0x6],0x6f
   14000cfd7:	jne    0x14000d011
   14000cfd9:	cmp    WORD PTR [rcx+0x8],0x77
   14000cfde:	jne    0x14000d011
   14000cfe0:	cmp    WORD PTR [rcx+0xa],0x73
   14000cfe5:	jmp    0x14000cd67
   14000cfea:	cmp    ax,0x79
   14000cfee:	jne    0x14000d011
   14000cff0:	cmp    WORD PTR [rcx+0x4],0x70
   14000cff5:	jne    0x14000d011
   14000cff7:	cmp    WORD PTR [rcx+0x6],0x65
   14000cffc:	jne    0x14000d011
   14000cffe:	cmp    WORD PTR [rcx+0x8],0x6f
   14000d003:	jne    0x14000d011
   14000d005:	cmp    WORD PTR [rcx+0xa],0x66
   14000d00a:	mov    eax,0x4a
   14000d00f:	je     0x14000d016
   14000d011:	mov    eax,0x1d
   14000d016:	repz ret 
   14000d018:	int3   
   14000d019:	int3   
   14000d01a:	int3   
   14000d01b:	int3   
   14000d01c:	int3   
   14000d01d:	int3   
   14000d01e:	int3   
   14000d01f:	int3   
   14000d020:	movzx  eax,WORD PTR [rcx]
   14000d023:	cmp    ax,0x62
   14000d027:	jne    0x14000d07b
   14000d029:	cmp    WORD PTR [rcx+0x2],0x6f
   14000d02e:	jne    0x14000d1b5
   14000d034:	cmp    WORD PTR [rcx+0x4],0x6f
   14000d039:	jne    0x14000d1b5
   14000d03f:	cmp    WORD PTR [rcx+0x6],0x6c
   14000d044:	jne    0x14000d1b5
   14000d04a:	cmp    WORD PTR [rcx+0x8],0x65
   14000d04f:	jne    0x14000d1b5
   14000d055:	cmp    WORD PTR [rcx+0xa],0x61
   14000d05a:	jne    0x14000d1b5
   14000d060:	cmp    WORD PTR [rcx+0xc],0x6e
   14000d065:	jne    0x14000d1b5
   14000d06b:	mov    eax,0x1d
   14000d070:	mov    ecx,0x56
   14000d075:	test   dl,dl
   14000d077:	cmovne eax,ecx
   14000d07a:	ret    
   14000d07b:	cmp    ax,0x64
   14000d07f:	jne    0x14000d0c9
   14000d081:	cmp    WORD PTR [rcx+0x2],0x65
   14000d086:	jne    0x14000d1b5
   14000d08c:	cmp    WORD PTR [rcx+0x4],0x66
   14000d091:	jne    0x14000d1b5
   14000d097:	cmp    WORD PTR [rcx+0x6],0x61
   14000d09c:	jne    0x14000d1b5
   14000d0a2:	cmp    WORD PTR [rcx+0x8],0x75
   14000d0a7:	jne    0x14000d1b5
   14000d0ad:	cmp    WORD PTR [rcx+0xa],0x6c
   14000d0b2:	jne    0x14000d1b5
   14000d0b8:	cmp    WORD PTR [rcx+0xc],0x74
   14000d0bd:	jne    0x14000d1b5
   14000d0c3:	mov    eax,0xa
   14000d0c8:	ret    
   14000d0c9:	cmp    ax,0x65
   14000d0cd:	jne    0x14000d116
   14000d0cf:	cmp    WORD PTR [rcx+0x2],0x78
   14000d0d4:	jne    0x14000d1b5
   14000d0da:	cmp    WORD PTR [rcx+0x4],0x74
   14000d0df:	jne    0x14000d1b5
   14000d0e5:	cmp    WORD PTR [rcx+0x6],ax
   14000d0e9:	jne    0x14000d1b5
   14000d0ef:	cmp    WORD PTR [rcx+0x8],0x6e
   14000d0f4:	jne    0x14000d1b5
   14000d0fa:	cmp    WORD PTR [rcx+0xa],0x64
   14000d0ff:	jne    0x14000d1b5
   14000d105:	cmp    WORD PTR [rcx+0xc],0x73
   14000d10a:	jne    0x14000d1b5
   14000d110:	mov    eax,0x56
   14000d115:	ret    
   14000d116:	cmp    ax,0x66
   14000d11a:	jne    0x14000d154
   14000d11c:	cmp    WORD PTR [rcx+0x2],0x69
   14000d121:	jne    0x14000d1b5
   14000d127:	cmp    WORD PTR [rcx+0x4],0x6e
   14000d12c:	jne    0x14000d1b5
   14000d132:	cmp    WORD PTR [rcx+0x6],0x61
   14000d137:	jne    0x14000d1b5
   14000d139:	cmp    WORD PTR [rcx+0x8],0x6c
   14000d13e:	jne    0x14000d1b5
   14000d140:	cmp    WORD PTR [rcx+0xa],0x6c
   14000d145:	jne    0x14000d1b5
   14000d147:	cmp    WORD PTR [rcx+0xc],0x79
   14000d14c:	jne    0x14000d1b5
   14000d14e:	mov    eax,0x14
   14000d153:	ret    
   14000d154:	cmp    ax,0x70
   14000d158:	jne    0x14000d1b5
   14000d15a:	movzx  eax,WORD PTR [rcx+0x2]
   14000d15e:	cmp    ax,0x61
   14000d162:	jne    0x14000d189
   14000d164:	cmp    WORD PTR [rcx+0x4],0x63
   14000d169:	jne    0x14000d1b5
   14000d16b:	cmp    WORD PTR [rcx+0x6],0x6b
   14000d170:	jne    0x14000d1b5
   14000d172:	cmp    WORD PTR [rcx+0x8],ax
   14000d176:	jne    0x14000d1b5
   14000d178:	cmp    WORD PTR [rcx+0xa],0x67
   14000d17d:	jne    0x14000d1b5
   14000d17f:	cmp    WORD PTR [rcx+0xc],0x65
   14000d184:	jmp    0x14000d065
   14000d189:	cmp    ax,0x72
   14000d18d:	jne    0x14000d1b5
   14000d18f:	cmp    WORD PTR [rcx+0x4],0x69
   14000d194:	jne    0x14000d1b5
   14000d196:	cmp    WORD PTR [rcx+0x6],0x76
   14000d19b:	jne    0x14000d1b5
   14000d19d:	cmp    WORD PTR [rcx+0x8],0x61
   14000d1a2:	jne    0x14000d1b5
   14000d1a4:	cmp    WORD PTR [rcx+0xa],0x74
   14000d1a9:	jne    0x14000d1b5
   14000d1ab:	cmp    WORD PTR [rcx+0xc],0x65
   14000d1b0:	jmp    0x14000d065
   14000d1b5:	mov    eax,0x1d
   14000d1ba:	ret    
   14000d1bb:	int3   
   14000d1bc:	int3   
   14000d1bd:	int3   
   14000d1be:	int3   
   14000d1bf:	int3   
   14000d1c0:	movzx  eax,WORD PTR [rcx]
   14000d1c3:	cmp    ax,0x61
   14000d1c7:	jne    0x14000d225
   14000d1c9:	cmp    WORD PTR [rcx+0x2],0x62
   14000d1ce:	jne    0x14000d403
   14000d1d4:	cmp    WORD PTR [rcx+0x4],0x73
   14000d1d9:	jne    0x14000d403
   14000d1df:	cmp    WORD PTR [rcx+0x6],0x74
   14000d1e4:	jne    0x14000d403
   14000d1ea:	cmp    WORD PTR [rcx+0x8],0x72
   14000d1ef:	jne    0x14000d403
   14000d1f5:	cmp    WORD PTR [rcx+0xa],ax
   14000d1f9:	jne    0x14000d403
   14000d1ff:	cmp    WORD PTR [rcx+0xc],0x63
   14000d204:	jne    0x14000d403
   14000d20a:	cmp    WORD PTR [rcx+0xe],0x74
   14000d20f:	jne    0x14000d403
   14000d215:	mov    eax,0x1d
   14000d21a:	mov    ecx,0x56
   14000d21f:	test   dl,dl
   14000d221:	cmovne eax,ecx
   14000d224:	ret    
   14000d225:	cmp    ax,0x63
   14000d229:	jne    0x14000d27e
   14000d22b:	cmp    WORD PTR [rcx+0x2],0x6f
   14000d230:	jne    0x14000d403
   14000d236:	cmp    WORD PTR [rcx+0x4],0x6e
   14000d23b:	jne    0x14000d403
   14000d241:	cmp    WORD PTR [rcx+0x6],0x74
   14000d246:	jne    0x14000d403
   14000d24c:	cmp    WORD PTR [rcx+0x8],0x69
   14000d251:	jne    0x14000d403
   14000d257:	cmp    WORD PTR [rcx+0xa],0x6e
   14000d25c:	jne    0x14000d403
   14000d262:	cmp    WORD PTR [rcx+0xc],0x75
   14000d267:	jne    0x14000d403
   14000d26d:	cmp    WORD PTR [rcx+0xe],0x65
   14000d272:	jne    0x14000d403
   14000d278:	mov    eax,0x9
   14000d27d:	ret    
   14000d27e:	cmp    ax,0x64
   14000d282:	jne    0x14000d2d7
   14000d284:	cmp    WORD PTR [rcx+0x2],0x65
   14000d289:	jne    0x14000d403
   14000d28f:	cmp    WORD PTR [rcx+0x4],0x62
   14000d294:	jne    0x14000d403
   14000d29a:	cmp    WORD PTR [rcx+0x6],0x75
   14000d29f:	jne    0x14000d403
   14000d2a5:	cmp    WORD PTR [rcx+0x8],0x67
   14000d2aa:	jne    0x14000d403
   14000d2b0:	cmp    WORD PTR [rcx+0xa],0x67
   14000d2b5:	jne    0x14000d403
   14000d2bb:	cmp    WORD PTR [rcx+0xc],0x65
   14000d2c0:	jne    0x14000d403
   14000d2c6:	cmp    WORD PTR [rcx+0xe],0x72
   14000d2cb:	jne    0x14000d403
   14000d2d1:	mov    eax,0x55
   14000d2d6:	ret    
   14000d2d7:	cmp    ax,0x66
   14000d2db:	jne    0x14000d330
   14000d2dd:	cmp    WORD PTR [rcx+0x2],0x75
   14000d2e2:	jne    0x14000d403
   14000d2e8:	cmp    WORD PTR [rcx+0x4],0x6e
   14000d2ed:	jne    0x14000d403
   14000d2f3:	cmp    WORD PTR [rcx+0x6],0x63
   14000d2f8:	jne    0x14000d403
   14000d2fe:	cmp    WORD PTR [rcx+0x8],0x74
   14000d303:	jne    0x14000d403
   14000d309:	cmp    WORD PTR [rcx+0xa],0x69
   14000d30e:	jne    0x14000d403
   14000d314:	cmp    WORD PTR [rcx+0xc],0x6f
   14000d319:	jne    0x14000d403
   14000d31f:	cmp    WORD PTR [rcx+0xe],0x6e
   14000d324:	jne    0x14000d403
   14000d32a:	mov    eax,0x16
   14000d32f:	ret    
   14000d330:	test   dl,dl
   14000d332:	je     0x14000d3c9
   14000d338:	cmp    ax,0x70
   14000d33c:	jne    0x14000d38c
   14000d33e:	cmp    WORD PTR [rcx+0x2],0x72
   14000d343:	jne    0x14000d403
   14000d349:	cmp    WORD PTR [rcx+0x4],0x6f
   14000d34e:	jne    0x14000d403
   14000d354:	cmp    WORD PTR [rcx+0x6],ax
   14000d358:	jne    0x14000d403
   14000d35e:	cmp    WORD PTR [rcx+0x8],0x65
   14000d363:	jne    0x14000d403
   14000d369:	cmp    WORD PTR [rcx+0xa],0x72
   14000d36e:	jne    0x14000d403
   14000d374:	cmp    WORD PTR [rcx+0xc],0x74
   14000d379:	jne    0x14000d403
   14000d37f:	cmp    WORD PTR [rcx+0xe],0x79
   14000d384:	jne    0x14000d403
   14000d386:	mov    eax,0x42
   14000d38b:	ret    
   14000d38c:	cmp    ax,0x72
   14000d390:	jne    0x14000d3c9
   14000d392:	cmp    WORD PTR [rcx+0x2],0x65
   14000d397:	jne    0x14000d403
   14000d399:	cmp    WORD PTR [rcx+0x4],0x61
   14000d39e:	jne    0x14000d403
   14000d3a0:	cmp    WORD PTR [rcx+0x6],0x64
   14000d3a5:	jne    0x14000d403
   14000d3a7:	cmp    WORD PTR [rcx+0x8],0x6f
   14000d3ac:	jne    0x14000d403
   14000d3ae:	cmp    WORD PTR [rcx+0xa],0x6e
   14000d3b3:	jne    0x14000d403
   14000d3b5:	cmp    WORD PTR [rcx+0xc],0x6c
   14000d3ba:	jne    0x14000d403
   14000d3bc:	cmp    WORD PTR [rcx+0xe],0x79
   14000d3c1:	jne    0x14000d403
   14000d3c3:	mov    eax,0x44
   14000d3c8:	ret    
   14000d3c9:	cmp    ax,0x76
   14000d3cd:	jne    0x14000d403
   14000d3cf:	cmp    WORD PTR [rcx+0x2],0x6f
   14000d3d4:	jne    0x14000d403
   14000d3d6:	cmp    WORD PTR [rcx+0x4],0x6c
   14000d3db:	jne    0x14000d403
   14000d3dd:	cmp    WORD PTR [rcx+0x6],0x61
   14000d3e2:	jne    0x14000d403
   14000d3e4:	cmp    WORD PTR [rcx+0x8],0x74
   14000d3e9:	jne    0x14000d403
   14000d3eb:	cmp    WORD PTR [rcx+0xa],0x69
   14000d3f0:	jne    0x14000d403
   14000d3f2:	cmp    WORD PTR [rcx+0xc],0x6c
   14000d3f7:	jne    0x14000d403
   14000d3f9:	cmp    WORD PTR [rcx+0xe],0x65
   14000d3fe:	jmp    0x14000d20f
   14000d403:	mov    eax,0x1d
   14000d408:	ret    
   14000d409:	int3   
   14000d40a:	int3   
   14000d40b:	int3   
   14000d40c:	int3   
   14000d40d:	int3   
   14000d40e:	int3   
   14000d40f:	int3   
   14000d410:	movzx  eax,WORD PTR [rcx]
   14000d413:	cmp    ax,0x69
   14000d417:	jne    0x14000d481
   14000d419:	cmp    WORD PTR [rcx+0x2],0x6e
   14000d41e:	jne    0x14000d4ff
   14000d424:	cmp    WORD PTR [rcx+0x4],0x74
   14000d429:	jne    0x14000d4ff
   14000d42f:	cmp    WORD PTR [rcx+0x6],0x65
   14000d434:	jne    0x14000d4ff
   14000d43a:	cmp    WORD PTR [rcx+0x8],0x72
   14000d43f:	jne    0x14000d4ff
   14000d445:	cmp    WORD PTR [rcx+0xa],0x66
   14000d44a:	jne    0x14000d4ff
   14000d450:	cmp    WORD PTR [rcx+0xc],0x61
   14000d455:	jne    0x14000d4ff
   14000d45b:	cmp    WORD PTR [rcx+0xe],0x63
   14000d460:	jne    0x14000d4ff
   14000d466:	cmp    WORD PTR [rcx+0x10],0x65
   14000d46b:	jne    0x14000d4ff
   14000d471:	mov    eax,0x1d
   14000d476:	mov    ecx,0x56
   14000d47b:	test   dl,dl
   14000d47d:	cmovne eax,ecx
   14000d480:	ret    
   14000d481:	cmp    ax,0x70
   14000d485:	jne    0x14000d4bf
   14000d487:	cmp    WORD PTR [rcx+0x2],0x72
   14000d48c:	jne    0x14000d4ff
   14000d48e:	cmp    WORD PTR [rcx+0x4],0x6f
   14000d493:	jne    0x14000d4ff
   14000d495:	cmp    WORD PTR [rcx+0x6],0x74
   14000d49a:	jne    0x14000d4ff
   14000d49c:	cmp    WORD PTR [rcx+0x8],0x65
   14000d4a1:	jne    0x14000d4ff
   14000d4a3:	cmp    WORD PTR [rcx+0xa],0x63
   14000d4a8:	jne    0x14000d4ff
   14000d4aa:	cmp    WORD PTR [rcx+0xc],0x74
   14000d4af:	jne    0x14000d4ff
   14000d4b1:	cmp    WORD PTR [rcx+0xe],0x65
   14000d4b6:	jne    0x14000d4ff
   14000d4b8:	cmp    WORD PTR [rcx+0x10],0x64
   14000d4bd:	jmp    0x14000d46b
   14000d4bf:	cmp    ax,0x74
   14000d4c3:	jne    0x14000d4ff
   14000d4c5:	cmp    WORD PTR [rcx+0x2],0x72
   14000d4ca:	jne    0x14000d4ff
   14000d4cc:	cmp    WORD PTR [rcx+0x4],0x61
   14000d4d1:	jne    0x14000d4ff
   14000d4d3:	cmp    WORD PTR [rcx+0x6],0x6e
   14000d4d8:	jne    0x14000d4ff
   14000d4da:	cmp    WORD PTR [rcx+0x8],0x73
   14000d4df:	jne    0x14000d4ff
   14000d4e1:	cmp    WORD PTR [rcx+0xa],0x69
   14000d4e6:	jne    0x14000d4ff
   14000d4e8:	cmp    WORD PTR [rcx+0xc],0x65
   14000d4ed:	jne    0x14000d4ff
   14000d4ef:	cmp    WORD PTR [rcx+0xe],0x6e
   14000d4f4:	jne    0x14000d4ff
   14000d4f6:	cmp    WORD PTR [rcx+0x10],ax
   14000d4fa:	jmp    0x14000d46b
   14000d4ff:	mov    eax,0x1d
   14000d504:	ret    
   14000d505:	int3   
   14000d506:	int3   
   14000d507:	int3   
   14000d508:	int3   
   14000d509:	int3   
   14000d50a:	int3   
   14000d50b:	int3   
   14000d50c:	int3   
   14000d50d:	int3   
   14000d50e:	int3   
   14000d50f:	int3   
   14000d510:	cmp    WORD PTR [rcx],0x69
   14000d514:	jne    0x14000d5b1
   14000d51a:	movzx  eax,WORD PTR [rcx+0x2]
   14000d51e:	cmp    ax,0x6d
   14000d522:	jne    0x14000d56f
   14000d524:	cmp    WORD PTR [rcx+0x4],0x70
   14000d529:	jne    0x14000d5b1
   14000d52f:	cmp    WORD PTR [rcx+0x6],0x6c
   14000d534:	jne    0x14000d5b1
   14000d536:	cmp    WORD PTR [rcx+0x8],0x65
   14000d53b:	jne    0x14000d5b1
   14000d53d:	cmp    WORD PTR [rcx+0xa],ax
   14000d541:	jne    0x14000d5b1
   14000d543:	cmp    WORD PTR [rcx+0xc],0x65
   14000d548:	jne    0x14000d5b1
   14000d54a:	cmp    WORD PTR [rcx+0xe],0x6e
   14000d54f:	jne    0x14000d5b1
   14000d551:	cmp    WORD PTR [rcx+0x10],0x74
   14000d556:	jne    0x14000d5b1
   14000d558:	cmp    WORD PTR [rcx+0x12],0x73
   14000d55d:	jne    0x14000d5b1
   14000d55f:	mov    eax,0x1d
   14000d564:	mov    ecx,0x56
   14000d569:	test   dl,dl
   14000d56b:	cmovne eax,ecx
   14000d56e:	ret    
   14000d56f:	cmp    ax,0x6e
   14000d573:	jne    0x14000d5b1
   14000d575:	cmp    WORD PTR [rcx+0x4],0x73
   14000d57a:	jne    0x14000d5b1
   14000d57c:	cmp    WORD PTR [rcx+0x6],0x74
   14000d581:	jne    0x14000d5b1
   14000d583:	cmp    WORD PTR [rcx+0x8],0x61
   14000d588:	jne    0x14000d5b1
   14000d58a:	cmp    WORD PTR [rcx+0xa],ax
   14000d58e:	jne    0x14000d5b1
   14000d590:	cmp    WORD PTR [rcx+0xc],0x63
   14000d595:	jne    0x14000d5b1
   14000d597:	cmp    WORD PTR [rcx+0xe],0x65
   14000d59c:	jne    0x14000d5b1
   14000d59e:	cmp    WORD PTR [rcx+0x10],0x6f
   14000d5a3:	jne    0x14000d5b1
   14000d5a5:	cmp    WORD PTR [rcx+0x12],0x66
   14000d5aa:	mov    eax,0x20
   14000d5af:	je     0x14000d5b6
   14000d5b1:	mov    eax,0x1d
   14000d5b6:	repz ret 
   14000d5b8:	int3   
   14000d5b9:	int3   
   14000d5ba:	int3   
   14000d5bb:	int3   
   14000d5bc:	int3   
   14000d5bd:	int3   
   14000d5be:	int3   
   14000d5bf:	int3   
   14000d5c0:	add    r8d,0xfffffffe
   14000d5c4:	mov    r10,rdx
   14000d5c7:	cmp    r8d,0xa
   14000d5cb:	ja     0x14000d659
   14000d5d1:	lea    rdx,[rip+0xffffffffffff2a28]        # 0x140000000
   14000d5d8:	movsxd rax,r8d
   14000d5db:	mov    ecx,DWORD PTR [rdx+rax*4+0xd754]
   14000d5e2:	add    rcx,rdx
   14000d5e5:	jmp    rcx
   14000d5e7:	movzx  eax,WORD PTR [r10]
   14000d5eb:	cmp    ax,0x61
   14000d5ef:	jne    0x14000d60a
   14000d5f1:	cmp    WORD PTR [r10+0x2],0x73
   14000d5f7:	jne    0x14000d659
   14000d5f9:	mov    eax,0x1d
   14000d5fe:	mov    ecx,0x5d
   14000d603:	test   r9b,r9b
   14000d606:	cmovne eax,ecx
   14000d609:	ret    
   14000d60a:	cmp    ax,0x64
   14000d60e:	jne    0x14000d61e
   14000d610:	cmp    WORD PTR [r10+0x2],0x6f
   14000d616:	jne    0x14000d659
   14000d618:	mov    eax,0xe
   14000d61d:	ret    
   14000d61e:	cmp    ax,0x69
   14000d622:	jne    0x14000d641
   14000d624:	movzx  eax,WORD PTR [r10+0x2]
   14000d629:	cmp    ax,0x66
   14000d62d:	jne    0x14000d635
   14000d62f:	mov    eax,0x1e
   14000d634:	ret    
   14000d635:	cmp    ax,0x6e
   14000d639:	jne    0x14000d659
   14000d63b:	mov    eax,0x1f
   14000d640:	ret    
   14000d641:	test   r9b,r9b
   14000d644:	je     0x14000d659
   14000d646:	cmp    ax,0x6f
   14000d64a:	jne    0x14000d659
   14000d64c:	cmp    WORD PTR [r10+0x2],0x6e
   14000d652:	mov    eax,0x5e
   14000d657:	je     0x14000d65e
   14000d659:	mov    eax,0x1d
   14000d65e:	ret    
   14000d65f:	movzx  edx,r9b
   14000d663:	mov    rcx,r10
   14000d666:	jmp    0x14000c810
   14000d66b:	movzx  edx,r9b
   14000d66f:	mov    rcx,r10
   14000d672:	jmp    0x14000c8f0
   14000d677:	movzx  edx,r9b
   14000d67b:	mov    rcx,r10
   14000d67e:	jmp    0x14000cad0
   14000d683:	movzx  edx,r9b
   14000d687:	mov    rcx,r10
   14000d68a:	jmp    0x14000ccf0
   14000d68f:	movzx  edx,r9b
   14000d693:	mov    rcx,r10
   14000d696:	jmp    0x14000d020
   14000d69b:	movzx  edx,r9b
   14000d69f:	mov    rcx,r10
   14000d6a2:	jmp    0x14000d1c0
   14000d6a7:	movzx  edx,r9b
   14000d6ab:	mov    rcx,r10
   14000d6ae:	jmp    0x14000d410
   14000d6b3:	movzx  edx,r9b
   14000d6b7:	mov    rcx,r10
   14000d6ba:	jmp    0x14000d510
   14000d6bf:	cmp    WORD PTR [r10],0x73
   14000d6c4:	jne    0x14000d659
   14000d6c6:	cmp    WORD PTR [r10+0x2],0x79
   14000d6cc:	jne    0x14000d659
   14000d6ce:	cmp    WORD PTR [r10+0x4],0x6e
   14000d6d4:	jne    0x14000d659
   14000d6d6:	cmp    WORD PTR [r10+0x6],0x63
   14000d6dc:	jne    0x14000d659
   14000d6e2:	cmp    WORD PTR [r10+0x8],0x68
   14000d6e8:	jne    0x14000d659
   14000d6ee:	cmp    WORD PTR [r10+0xa],0x72
   14000d6f4:	jne    0x14000d659
   14000d6fa:	cmp    WORD PTR [r10+0xc],0x6f
   14000d700:	jne    0x14000d659
   14000d706:	cmp    WORD PTR [r10+0xe],0x6e
   14000d70c:	jne    0x14000d659
   14000d712:	cmp    WORD PTR [r10+0x10],0x69
   14000d718:	jne    0x14000d659
   14000d71e:	cmp    WORD PTR [r10+0x12],0x7a
   14000d724:	jne    0x14000d659
   14000d72a:	cmp    WORD PTR [r10+0x14],0x65
   14000d730:	jne    0x14000d659
   14000d736:	cmp    WORD PTR [r10+0x16],0x64
   14000d73c:	jne    0x14000d659
   14000d742:	mov    eax,0x1d
   14000d747:	mov    ecx,0x56
   14000d74c:	test   r9b,r9b
   14000d74f:	cmovne eax,ecx
   14000d752:	ret    
   14000d753:	nop
   14000d754:	out    0xd5,eax
   14000d756:	add    BYTE PTR [rax],al
   14000d758:	pop    rdi
   14000d759:	(bad)  
   14000d75a:	add    BYTE PTR [rax],al
   14000d75c:	imul   edx,esi,0x0
   14000d75f:	add    BYTE PTR [rdi-0x2a],dh
   14000d762:	add    BYTE PTR [rax],al
   14000d764:	adc    esi,0x0
   14000d767:	add    BYTE PTR [rdi-0x64ffff2a],cl
   14000d76d:	(bad)  
   14000d76e:	add    BYTE PTR [rax],al
   14000d770:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d771:	(bad)  
   14000d772:	add    BYTE PTR [rax],al
   14000d774:	mov    bl,0xd6
   14000d776:	add    BYTE PTR [rax],al
   14000d778:	pop    rcx
   14000d779:	(bad)  
   14000d77a:	add    BYTE PTR [rax],al
   14000d77c:	mov    edi,0x8d0000d6
   14000d781:	ror    BYTE PTR [rbx+r9*4-0x2f],1
   14000d786:	cmp    ax,0x9
   14000d78a:	ja     0x14000d791
   14000d78c:	sub    dl,0x30
   14000d78f:	jmp    0x14000d7a2
   14000d791:	lea    eax,[rdx-0x61]
   14000d794:	cmp    ax,0x5
   14000d798:	ja     0x14000d79f
   14000d79a:	sub    dl,0x57
   14000d79d:	jmp    0x14000d7a2
   14000d79f:	sub    dl,0x37
   14000d7a2:	lea    eax,[r8-0x30]
   14000d7a6:	cmp    ax,0x9
   14000d7aa:	ja     0x14000d7b2
   14000d7ac:	sub    r8b,0x30
   14000d7b0:	jmp    0x14000d7c6
   14000d7b2:	lea    eax,[r8-0x61]
   14000d7b6:	cmp    ax,0x5
   14000d7ba:	ja     0x14000d7c2
   14000d7bc:	sub    r8b,0x57
   14000d7c0:	jmp    0x14000d7c6
   14000d7c2:	sub    r8b,0x37
   14000d7c6:	lea    eax,[r9-0x30]
   14000d7ca:	cmp    ax,0x9
   14000d7ce:	ja     0x14000d7d6
   14000d7d0:	sub    r9b,0x30
   14000d7d4:	jmp    0x14000d7ea
   14000d7d6:	lea    eax,[r9-0x61]
   14000d7da:	cmp    ax,0x5
   14000d7de:	ja     0x14000d7e6
   14000d7e0:	sub    r9b,0x57
   14000d7e4:	jmp    0x14000d7ea
   14000d7e6:	sub    r9b,0x37
   14000d7ea:	movzx  eax,WORD PTR [rsp+0x28]
   14000d7ef:	lea    ecx,[rax-0x30]
   14000d7f2:	cmp    cx,0x9
   14000d7f6:	ja     0x14000d7fc
   14000d7f8:	sub    al,0x30
   14000d7fa:	jmp    0x14000d80b
   14000d7fc:	lea    ecx,[rax-0x61]
   14000d7ff:	cmp    cx,0x5
   14000d803:	ja     0x14000d809
   14000d805:	sub    al,0x57
   14000d807:	jmp    0x14000d80b
   14000d809:	sub    al,0x37
   14000d80b:	shl    dl,0x4
   14000d80e:	shl    r9b,0x4
   14000d812:	add    r9b,al
   14000d815:	add    dl,r8b
   14000d818:	movzx  eax,r9b
   14000d81c:	movzx  ecx,dl
   14000d81f:	shl    cx,0x8
   14000d823:	or     cx,ax
   14000d826:	mov    rax,r10
   14000d829:	mov    WORD PTR [r10],cx
   14000d82d:	ret    
   14000d82e:	int3   
   14000d82f:	int3   
   14000d830:	mov    QWORD PTR [rsp+0x8],rbx
   14000d835:	mov    QWORD PTR [rsp+0x10],rsi
   14000d83a:	push   rdi
   14000d83b:	sub    rsp,0x20
   14000d83f:	mov    rbx,rcx
   14000d842:	mov    QWORD PTR [rcx],rdx
   14000d845:	add    rcx,0x8
   14000d849:	mov    rdi,rdx
   14000d84c:	call   QWORD PTR [rip+0x799e]        # 0x1400151f0
   14000d852:	lea    rcx,[rbx+0x10]
   14000d856:	call   QWORD PTR [rip+0x7994]        # 0x1400151f0
   14000d85c:	lea    rcx,[rbx+0x18]
   14000d860:	call   QWORD PTR [rip+0x798a]        # 0x1400151f0
   14000d866:	xor    esi,esi
   14000d868:	lea    rcx,[rbx+0x58]
   14000d86c:	mov    QWORD PTR [rbx+0x20],rsi
   14000d870:	mov    DWORD PTR [rbx+0x28],esi
   14000d873:	mov    DWORD PTR [rbx+0x2c],esi
   14000d876:	mov    dl,0xa
   14000d878:	mov    QWORD PTR [rbx+0x30],rsi
   14000d87c:	mov    QWORD PTR [rbx+0x40],rsi
   14000d880:	mov    QWORD PTR [rbx+0x48],rsi
   14000d884:	mov    QWORD PTR [rbx+0x50],rsi
   14000d888:	call   QWORD PTR [rip+0x7942]        # 0x1400151d0
   14000d88e:	mov    DWORD PTR [rbx+0x5c],esi
   14000d891:	mov    DWORD PTR [rbx+0x60],esi
   14000d894:	mov    QWORD PTR [rbx+0x68],rsi
   14000d898:	mov    DWORD PTR [rbx+0x70],esi
   14000d89b:	mov    DWORD PTR [rbx+0x74],esi
   14000d89e:	mov    DWORD PTR [rbx+0x78],0xffffffff
   14000d8a5:	mov    DWORD PTR [rbx+0x7c],esi
   14000d8a8:	mov    DWORD PTR [rbx+0x80],esi
   14000d8ae:	mov    DWORD PTR [rbx+0x84],esi
   14000d8b4:	mov    DWORD PTR [rbx+0x88],esi
   14000d8ba:	mov    BYTE PTR [rbx+0x8c],sil
   14000d8c1:	mov    BYTE PTR [rbx+0x8d],sil
   14000d8c8:	mov    BYTE PTR [rbx+0x8e],sil
   14000d8cf:	mov    BYTE PTR [rbx+0x8f],sil
   14000d8d6:	mov    BYTE PTR [rbx+0x90],sil
   14000d8dd:	mov    BYTE PTR [rbx+0x91],0x1
   14000d8e4:	mov    BYTE PTR [rbx+0x92],0x1
   14000d8eb:	test   rdi,rdi
   14000d8ee:	je     0x14000d8fb
   14000d8f0:	mov    rdx,rbx
   14000d8f3:	mov    rcx,rdi
   14000d8f6:	call   0x14000c430
   14000d8fb:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d900:	mov    rax,rbx
   14000d903:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d908:	add    rsp,0x20
   14000d90c:	pop    rdi
   14000d90d:	ret    
   14000d90e:	int3   
   14000d90f:	int3   
   14000d910:	mov    al,BYTE PTR [rcx+0x92]
   14000d916:	ret    
   14000d917:	int3   
   14000d918:	int3   
   14000d919:	int3   
   14000d91a:	int3   
   14000d91b:	int3   
   14000d91c:	int3   
   14000d91d:	int3   
   14000d91e:	int3   
   14000d91f:	int3   
   14000d920:	mov    QWORD PTR [rsp+0x8],rbx
   14000d925:	mov    QWORD PTR [rsp+0x10],rbp
   14000d92a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d92f:	push   rdi
   14000d930:	sub    rsp,0x20
   14000d934:	mov    rdi,rcx
   14000d937:	mov    rcx,QWORD PTR [rcx]
   14000d93a:	movzx  ebx,r9b
   14000d93e:	mov    ebp,r8d
   14000d941:	mov    rsi,rdx
   14000d944:	test   rcx,rcx
   14000d947:	je     0x14000d94e
   14000d949:	call   0x14000c410
   14000d94e:	lea    rcx,[rdi+0x8]
   14000d952:	mov    rdx,rsi
   14000d955:	mov    BYTE PTR [rdi+0x92],bl
   14000d95b:	call   QWORD PTR [rip+0x7857]        # 0x1400151b8
   14000d961:	lea    rcx,[rdi+0x10]
   14000d965:	call   QWORD PTR [rip+0x78c5]        # 0x140015230
   14000d96b:	lea    rcx,[rdi+0x10]
   14000d96f:	mov    edx,0x400
   14000d974:	call   QWORD PTR [rip+0x78ae]        # 0x140015228
   14000d97a:	lea    rcx,[rdi+0x18]
   14000d97e:	call   QWORD PTR [rip+0x78ac]        # 0x140015230
   14000d984:	xor    ebx,ebx
   14000d986:	mov    rcx,rsi
   14000d989:	mov    QWORD PTR [rdi+0x20],rbx
   14000d98d:	mov    DWORD PTR [rdi+0x28],ebx
   14000d990:	mov    DWORD PTR [rdi+0x2c],ebx
   14000d993:	call   QWORD PTR [rip+0x77f7]        # 0x140015190
   14000d999:	mov    QWORD PTR [rdi+0x30],rax
   14000d99d:	mov    rcx,QWORD PTR [rsi]
   14000d9a0:	movsxd rdx,DWORD PTR [rcx+0x4]
   14000d9a4:	mov    QWORD PTR [rdi+0x40],rax
   14000d9a8:	mov    QWORD PTR [rdi+0x48],rax
   14000d9ac:	lea    rcx,[rax+rdx*2]
   14000d9b0:	mov    dl,0xa
   14000d9b2:	mov    QWORD PTR [rdi+0x50],rax
   14000d9b6:	mov    QWORD PTR [rdi+0x38],rcx
   14000d9ba:	lea    rcx,[rsp+0x48]
   14000d9bf:	call   QWORD PTR [rip+0x780b]        # 0x1400151d0
   14000d9c5:	movzx  r11d,WORD PTR [rsp+0x48]
   14000d9cb:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d9d0:	mov    DWORD PTR [rdi+0x5c],ebx
   14000d9d3:	mov    DWORD PTR [rdi+0x60],ebp
   14000d9d6:	mov    QWORD PTR [rdi+0x68],rbx
   14000d9da:	mov    DWORD PTR [rdi+0x70],ebx
   14000d9dd:	mov    DWORD PTR [rdi+0x74],ebx
   14000d9e0:	mov    DWORD PTR [rdi+0x7c],ebx
   14000d9e3:	mov    DWORD PTR [rdi+0x84],ebx
   14000d9e9:	mov    DWORD PTR [rdi+0x88],ebp
   14000d9ef:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d9f4:	mov    BYTE PTR [rdi+0x8c],bl
   14000d9fa:	mov    BYTE PTR [rdi+0x8d],bl
   14000da00:	mov    BYTE PTR [rdi+0x8e],bl
   14000da06:	mov    BYTE PTR [rdi+0x8f],bl
   14000da0c:	mov    BYTE PTR [rdi+0x90],bl
   14000da12:	mov    rbx,QWORD PTR [rsp+0x30]
   14000da17:	mov    WORD PTR [rdi+0x58],r11w
   14000da1c:	mov    DWORD PTR [rdi+0x78],0xffffffff
   14000da23:	mov    BYTE PTR [rdi+0x91],0x1
   14000da2a:	add    rsp,0x20
   14000da2e:	pop    rdi
   14000da2f:	ret    
   14000da30:	dec    ecx
   14000da32:	cmp    ecx,0x4f
   14000da35:	ja     0x14000da58
   14000da37:	lea    rdx,[rip+0xffffffffffff25c2]        # 0x140000000
   14000da3e:	movsxd rax,ecx
   14000da41:	movzx  eax,BYTE PTR [rdx+rax*1+0xda64]
   14000da49:	mov    ecx,DWORD PTR [rdx+rax*4+0xda5c]
   14000da50:	add    rcx,rdx
   14000da53:	jmp    rcx
   14000da55:	mov    al,0x1
   14000da57:	ret    
   14000da58:	xor    al,al
   14000da5a:	ret    
   14000da5b:	nop
   14000da5c:	push   rbp
   14000da5d:	fiadd  DWORD PTR [rax]
   14000da5f:	add    BYTE PTR [rax-0x26],bl
   14000da62:	add    BYTE PTR [rax],al
   14000da64:	add    BYTE PTR [rax],al
   14000da66:	add    BYTE PTR [rcx],al
   14000da68:	add    DWORD PTR [rcx],eax
   14000da6a:	add    DWORD PTR [rcx],eax
   14000da6c:	add    DWORD PTR [rcx],eax
   14000da6e:	add    DWORD PTR [rax],eax
   14000da70:	add    BYTE PTR [rcx],al
   14000da72:	add    DWORD PTR [rcx],eax
   14000da74:	add    BYTE PTR [rax],al
   14000da76:	add    BYTE PTR [rcx],al
   14000da78:	add    DWORD PTR [rcx],eax
   14000da7a:	add    BYTE PTR [rax],al
   14000da7c:	add    BYTE PTR [rax],al
   14000da7e:	add    BYTE PTR [rax],al
   14000da80:	add    DWORD PTR [rcx],eax
   14000da82:	add    DWORD PTR [rcx],eax
   14000da84:	add    DWORD PTR [rcx],eax
   14000da86:	add    BYTE PTR [rcx],al
   14000da88:	add    BYTE PTR [rax],al
   14000da8a:	add    BYTE PTR [rax],al
   14000da8c:	add    BYTE PTR [rcx],al
   14000da8e:	add    DWORD PTR [rcx],eax
   14000da90:	add    BYTE PTR [rax],al
   14000da92:	add    DWORD PTR [rax],eax
   14000da94:	add    BYTE PTR [rax],al
   14000da96:	add    BYTE PTR [rax],al
   14000da98:	add    DWORD PTR [rcx],eax
   14000da9a:	add    DWORD PTR [rcx],eax
   14000da9c:	add    BYTE PTR [rax],al
   14000da9e:	add    BYTE PTR [rcx],al
   14000daa0:	add    DWORD PTR [rcx],eax
   14000daa2:	add    BYTE PTR [rax],al
   14000daa4:	add    DWORD PTR [rcx],eax
   14000daa6:	add    DWORD PTR [rcx],eax
   14000daa8:	add    DWORD PTR [rcx],eax
   14000daaa:	add    DWORD PTR [rcx],eax
   14000daac:	add    DWORD PTR [rcx],eax
   14000daae:	add    DWORD PTR [rcx],eax
   14000dab0:	add    DWORD PTR [rcx],eax
   14000dab2:	add    BYTE PTR [rax],al
   14000dab4:	int3   
   14000dab5:	int3   
   14000dab6:	int3   
   14000dab7:	int3   
   14000dab8:	int3   
   14000dab9:	int3   
   14000daba:	int3   
   14000dabb:	int3   
   14000dabc:	int3   
   14000dabd:	int3   
   14000dabe:	int3   
   14000dabf:	int3   
   14000dac0:	sub    rsp,0x28
   14000dac4:	cmp    cx,0x61
   14000dac8:	jb     0x14000dad0
   14000daca:	cmp    cx,0x7a
   14000dace:	jbe    0x14000db3a
   14000dad0:	cmp    cx,0x41
   14000dad4:	jb     0x14000dadc
   14000dad6:	cmp    cx,0x5a
   14000dada:	jbe    0x14000db3a
   14000dadc:	cmp    cx,0x30
   14000dae0:	jb     0x14000dae8
   14000dae2:	cmp    cx,0x39
   14000dae6:	jbe    0x14000db3a
   14000dae8:	cmp    cx,0x24
   14000daec:	je     0x14000db3a
   14000daee:	cmp    cx,0x5f
   14000daf2:	je     0x14000db3a
   14000daf4:	mov    eax,0x200c
   14000daf9:	cmp    cx,ax
   14000dafc:	je     0x14000db3a
   14000dafe:	mov    eax,0x200d
   14000db03:	cmp    cx,ax
   14000db06:	je     0x14000db3a
   14000db08:	movzx  ecx,cx
   14000db0b:	call   QWORD PTR [rip+0x7727]        # 0x140015238
   14000db11:	cmp    eax,0x13
   14000db14:	ja     0x14000db33
   14000db16:	lea    rdx,[rip+0xffffffffffff24e3]        # 0x140000000
   14000db1d:	cdqe   
   14000db1f:	movzx  eax,BYTE PTR [rdx+rax*1+0xdb4c]
   14000db27:	mov    ecx,DWORD PTR [rdx+rax*4+0xdb44]
   14000db2e:	add    rcx,rdx
   14000db31:	jmp    rcx
   14000db33:	xor    al,al
   14000db35:	add    rsp,0x28
   14000db39:	ret    
   14000db3a:	mov    al,0x1
   14000db3c:	add    rsp,0x28
   14000db40:	ret    
   14000db41:	nop    DWORD PTR [rax]
   14000db44:	cmp    bl,bl
   14000db46:	add    BYTE PTR [rax],al
   14000db48:	xor    ebx,ebx
   14000db4a:	add    BYTE PTR [rax],al
   14000db4c:	add    BYTE PTR [rax],al
   14000db4e:	add    DWORD PTR [rax],eax
   14000db50:	add    BYTE PTR [rcx],al
   14000db52:	add    DWORD PTR [rcx],eax
   14000db54:	add    DWORD PTR [rcx],eax
   14000db56:	add    DWORD PTR [rcx],eax
   14000db58:	add    DWORD PTR [rcx],eax
   14000db5a:	add    BYTE PTR [rax],al
   14000db5c:	add    BYTE PTR [rax],al
   14000db5e:	add    BYTE PTR [rax],al
   14000db60:	movzx  eax,WORD PTR [rcx+0x58]
   14000db64:	cmp    ax,0xa
   14000db68:	je     0x14000db87
   14000db6a:	cmp    ax,0xd
   14000db6e:	je     0x14000db87
   14000db70:	mov    ecx,0x2028
   14000db75:	cmp    ax,cx
   14000db78:	je     0x14000db87
   14000db7a:	mov    ecx,0x2029
   14000db7f:	cmp    ax,cx
   14000db82:	je     0x14000db87
   14000db84:	xor    al,al
   14000db86:	ret    
   14000db87:	mov    al,0x1
   14000db89:	ret    
   14000db8a:	int3   
   14000db8b:	int3   
   14000db8c:	int3   
   14000db8d:	int3   
   14000db8e:	int3   
   14000db8f:	int3   
   14000db90:	movzx  eax,WORD PTR [rcx+0x58]
   14000db94:	cmp    eax,0xa
   14000db97:	je     0x14000dbbf
   14000db99:	cmp    eax,0xd
   14000db9c:	je     0x14000dbaf
   14000db9e:	cmp    eax,0x2027
   14000dba3:	jle    0x14000dbac
   14000dba5:	cmp    eax,0x2029
   14000dbaa:	jle    0x14000dbbf
   14000dbac:	xor    eax,eax
   14000dbae:	ret    
   14000dbaf:	mov    rcx,QWORD PTR [rcx+0x30]
   14000dbb3:	xor    eax,eax
   14000dbb5:	cmp    WORD PTR [rcx],0xa
   14000dbb9:	sete   al
   14000dbbc:	inc    eax
   14000dbbe:	ret    
   14000dbbf:	mov    eax,0x1
   14000dbc4:	ret    
   14000dbc5:	int3   
   14000dbc6:	int3   
   14000dbc7:	int3   
   14000dbc8:	int3   
   14000dbc9:	int3   
   14000dbca:	int3   
   14000dbcb:	int3   
   14000dbcc:	int3   
   14000dbcd:	int3   
   14000dbce:	int3   
   14000dbcf:	int3   
   14000dbd0:	mov    WORD PTR [rsp+0x8],cx
   14000dbd5:	sub    rsp,0x28
   14000dbd9:	lea    rcx,[rsp+0x38]
   14000dbde:	mov    dl,0x61
   14000dbe0:	call   QWORD PTR [rip+0x75ea]        # 0x1400151d0
   14000dbe6:	movzx  eax,WORD PTR [rax]
   14000dbe9:	cmp    WORD PTR [rsp+0x30],ax
   14000dbee:	jb     0x14000dc07
   14000dbf0:	lea    rcx,[rsp+0x38]
   14000dbf5:	mov    dl,0x7a
   14000dbf7:	call   QWORD PTR [rip+0x75d3]        # 0x1400151d0
   14000dbfd:	movzx  eax,WORD PTR [rax]
   14000dc00:	cmp    ax,WORD PTR [rsp+0x30]
   14000dc05:	jae    0x14000dc86
   14000dc07:	lea    rcx,[rsp+0x38]
   14000dc0c:	mov    dl,0x41
   14000dc0e:	call   QWORD PTR [rip+0x75bc]        # 0x1400151d0
   14000dc14:	movzx  eax,WORD PTR [rax]
   14000dc17:	cmp    WORD PTR [rsp+0x30],ax
   14000dc1c:	jb     0x14000dc35
   14000dc1e:	lea    rcx,[rsp+0x38]
   14000dc23:	mov    dl,0x5a
   14000dc25:	call   QWORD PTR [rip+0x75a5]        # 0x1400151d0
   14000dc2b:	movzx  eax,WORD PTR [rax]
   14000dc2e:	cmp    ax,WORD PTR [rsp+0x30]
   14000dc33:	jae    0x14000dc86
   14000dc35:	lea    rcx,[rsp+0x38]
   14000dc3a:	mov    dl,0x24
   14000dc3c:	call   QWORD PTR [rip+0x758e]        # 0x1400151d0
   14000dc42:	movzx  eax,WORD PTR [rax]
   14000dc45:	cmp    WORD PTR [rsp+0x30],ax
   14000dc4a:	je     0x14000dc86
   14000dc4c:	lea    rcx,[rsp+0x38]
   14000dc51:	mov    dl,0x5f
   14000dc53:	call   QWORD PTR [rip+0x7577]        # 0x1400151d0
   14000dc59:	mov    r11,rax
   14000dc5c:	movzx  eax,WORD PTR [rsp+0x30]
   14000dc61:	cmp    ax,WORD PTR [r11]
   14000dc65:	je     0x14000dc86
   14000dc67:	mov    ecx,0x80
   14000dc6c:	cmp    ax,cx
   14000dc6f:	jae    0x14000dc78
   14000dc71:	xor    al,al
   14000dc73:	add    rsp,0x28
   14000dc77:	ret    
   14000dc78:	movzx  ecx,ax
   14000dc7b:	call   QWORD PTR [rip+0x75bf]        # 0x140015240
   14000dc81:	add    rsp,0x28
   14000dc85:	ret    
   14000dc86:	mov    al,0x1
   14000dc88:	add    rsp,0x28
   14000dc8c:	ret    
   14000dc8d:	int3   
   14000dc8e:	int3   
   14000dc8f:	int3   
   14000dc90:	mov    WORD PTR [rsp+0x8],cx
   14000dc95:	sub    rsp,0x38
   14000dc99:	lea    rcx,[rsp+0x48]
   14000dc9e:	mov    dl,0x30
   14000dca0:	call   QWORD PTR [rip+0x752a]        # 0x1400151d0
   14000dca6:	movzx  eax,WORD PTR [rax]
   14000dca9:	cmp    WORD PTR [rsp+0x40],ax
   14000dcae:	jb     0x14000dcc7
   14000dcb0:	lea    rcx,[rsp+0x50]
   14000dcb5:	mov    dl,0x39
   14000dcb7:	call   QWORD PTR [rip+0x7513]        # 0x1400151d0
   14000dcbd:	movzx  eax,WORD PTR [rax]
   14000dcc0:	cmp    ax,WORD PTR [rsp+0x40]
   14000dcc5:	jae    0x14000dd23
   14000dcc7:	lea    rcx,[rsp+0x58]
   14000dccc:	mov    dl,0x61
   14000dcce:	call   QWORD PTR [rip+0x74fc]        # 0x1400151d0
   14000dcd4:	movzx  eax,WORD PTR [rax]
   14000dcd7:	cmp    WORD PTR [rsp+0x40],ax
   14000dcdc:	jb     0x14000dcf5
   14000dcde:	lea    rcx,[rsp+0x20]
   14000dce3:	mov    dl,0x66
   14000dce5:	call   QWORD PTR [rip+0x74e5]        # 0x1400151d0
   14000dceb:	movzx  eax,WORD PTR [rax]
   14000dcee:	cmp    ax,WORD PTR [rsp+0x40]
   14000dcf3:	jae    0x14000dd23
   14000dcf5:	lea    rcx,[rsp+0x22]
   14000dcfa:	mov    dl,0x41
   14000dcfc:	call   QWORD PTR [rip+0x74ce]        # 0x1400151d0
   14000dd02:	movzx  eax,WORD PTR [rax]
   14000dd05:	cmp    WORD PTR [rsp+0x40],ax
   14000dd0a:	jb     0x14000dd2a
   14000dd0c:	lea    rcx,[rsp+0x24]
   14000dd11:	mov    dl,0x46
   14000dd13:	call   QWORD PTR [rip+0x74b7]        # 0x1400151d0
   14000dd19:	movzx  eax,WORD PTR [rax]
   14000dd1c:	cmp    ax,WORD PTR [rsp+0x40]
   14000dd21:	jb     0x14000dd2a
   14000dd23:	mov    al,0x1
   14000dd25:	add    rsp,0x38
   14000dd29:	ret    
   14000dd2a:	xor    al,al
   14000dd2c:	add    rsp,0x38
   14000dd30:	ret    
   14000dd31:	int3   
   14000dd32:	int3   
   14000dd33:	int3   
   14000dd34:	int3   
   14000dd35:	int3   
   14000dd36:	int3   
   14000dd37:	int3   
   14000dd38:	int3   
   14000dd39:	int3   
   14000dd3a:	int3   
   14000dd3b:	int3   
   14000dd3c:	int3   
   14000dd3d:	int3   
   14000dd3e:	int3   
   14000dd3f:	int3   
   14000dd40:	rex push rbx
   14000dd42:	sub    rsp,0x20
   14000dd46:	mov    rbx,rdx
   14000dd49:	lea    rdx,[rcx+0x18]
   14000dd4d:	mov    rcx,rbx
   14000dd50:	call   QWORD PTR [rip+0x7672]        # 0x1400153c8
   14000dd56:	mov    rax,rbx
   14000dd59:	add    rsp,0x20
   14000dd5d:	pop    rbx
   14000dd5e:	ret    
   14000dd5f:	int3   
   14000dd60:	cmp    edx,0x37
   14000dd63:	je     0x14000dd7e
   14000dd65:	test   edx,edx
   14000dd67:	je     0x14000dd7e
   14000dd69:	cmp    BYTE PTR [rcx+0x8f],0x0
   14000dd70:	jne    0x14000dd7e
   14000dd72:	cmp    BYTE PTR [rcx+0x90],0x0
   14000dd79:	jne    0x14000dd7e
   14000dd7b:	xor    al,al
   14000dd7d:	ret    
   14000dd7e:	mov    al,0x1
   14000dd80:	ret    
   14000dd81:	int3   
   14000dd82:	int3   
   14000dd83:	int3   
   14000dd84:	int3   
   14000dd85:	int3   
   14000dd86:	int3   
   14000dd87:	int3   
   14000dd88:	int3   
   14000dd89:	int3   
   14000dd8a:	int3   
   14000dd8b:	int3   
   14000dd8c:	int3   
   14000dd8d:	int3   
   14000dd8e:	int3   
   14000dd8f:	int3   
   14000dd90:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd95:	mov    QWORD PTR [rsp+0x20],rbp
   14000dd9a:	mov    DWORD PTR [rsp+0x10],edx
   14000dd9e:	push   rsi
   14000dd9f:	push   rdi
   14000dda0:	push   r12
   14000dda2:	sub    rsp,0x20
   14000dda6:	mov    eax,DWORD PTR [rcx+0x4]
   14000dda9:	mov    rsi,QWORD PTR [rcx+0x8]
   14000ddad:	mov    rbx,rcx
   14000ddb0:	cmp    edx,eax
   14000ddb2:	lea    r9,[rsp+0x48]
   14000ddb7:	lea    rcx,[rsp+0x50]
   14000ddbc:	cmovge r9,rcx
   14000ddc0:	movsxd rbp,r8d
   14000ddc3:	mov    DWORD PTR [rsp+0x50],eax
   14000ddc7:	movsxd r12,DWORD PTR [r9]
   14000ddca:	mov    edi,edx
   14000ddcc:	cmp    ebp,DWORD PTR [rbx]
   14000ddce:	je     0x14000de05
   14000ddd0:	cmp    ebp,0x20
   14000ddd3:	jle    0x14000dde2
   14000ddd5:	mov    rcx,rbp
   14000ddd8:	call   QWORD PTR [rip+0x733a]        # 0x140015118
   14000ddde:	mov    DWORD PTR [rbx],ebp
   14000dde0:	jmp    0x14000ddec
   14000dde2:	lea    rax,[rbx+0x10]
   14000dde6:	mov    DWORD PTR [rbx],0x20
   14000ddec:	mov    r8,r12
   14000ddef:	mov    rdx,rsi
   14000ddf2:	mov    rcx,rax
   14000ddf5:	mov    QWORD PTR [rbx+0x8],rax
   14000ddf9:	mov    DWORD PTR [rbx+0x4],0x0
   14000de00:	call   0x140014998
   14000de05:	lea    rax,[rbx+0x10]
   14000de09:	mov    DWORD PTR [rbx+0x4],r12d
   14000de0d:	cmp    rsi,rax
   14000de10:	je     0x14000de21
   14000de12:	cmp    rsi,QWORD PTR [rbx+0x8]
   14000de16:	je     0x14000de21
   14000de18:	mov    rcx,rsi
   14000de1b:	call   QWORD PTR [rip+0x72df]        # 0x140015100
   14000de21:	mov    rbp,QWORD PTR [rsp+0x58]
   14000de26:	mov    DWORD PTR [rbx+0x4],edi
   14000de29:	mov    rbx,QWORD PTR [rsp+0x40]
   14000de2e:	add    rsp,0x20
   14000de32:	pop    r12
   14000de34:	pop    rdi
   14000de35:	pop    rsi
   14000de36:	ret    
   14000de37:	int3   
   14000de38:	int3   
   14000de39:	int3   
   14000de3a:	int3   
   14000de3b:	int3   
   14000de3c:	int3   
   14000de3d:	int3   
   14000de3e:	int3   
   14000de3f:	int3   
   14000de40:	mov    QWORD PTR [rsp+0x8],rbx
   14000de45:	mov    QWORD PTR [rsp+0x20],rbp
   14000de4a:	mov    DWORD PTR [rsp+0x10],edx
   14000de4e:	push   rsi
   14000de4f:	push   rdi
   14000de50:	push   r12
   14000de52:	sub    rsp,0x20
   14000de56:	mov    eax,DWORD PTR [rcx+0x4]
   14000de59:	mov    rsi,QWORD PTR [rcx+0x8]
   14000de5d:	mov    rbx,rcx
   14000de60:	cmp    edx,eax
   14000de62:	lea    r9,[rsp+0x48]
   14000de67:	lea    rcx,[rsp+0x50]
   14000de6c:	cmovge r9,rcx
   14000de70:	movsxd rbp,r8d
   14000de73:	mov    DWORD PTR [rsp+0x50],eax
   14000de77:	movsxd r12,DWORD PTR [r9]
   14000de7a:	mov    edi,edx
   14000de7c:	cmp    ebp,DWORD PTR [rbx]
   14000de7e:	je     0x14000deb5
   14000de80:	cmp    ebp,0x40
   14000de83:	jle    0x14000de92
   14000de85:	mov    rcx,rbp
   14000de88:	call   QWORD PTR [rip+0x728a]        # 0x140015118
   14000de8e:	mov    DWORD PTR [rbx],ebp
   14000de90:	jmp    0x14000de9c
   14000de92:	lea    rax,[rbx+0x10]
   14000de96:	mov    DWORD PTR [rbx],0x40
   14000de9c:	mov    r8,r12
   14000de9f:	mov    rdx,rsi
   14000dea2:	mov    rcx,rax
   14000dea5:	mov    QWORD PTR [rbx+0x8],rax
   14000dea9:	mov    DWORD PTR [rbx+0x4],0x0
   14000deb0:	call   0x140014998
   14000deb5:	lea    rax,[rbx+0x10]
   14000deb9:	mov    DWORD PTR [rbx+0x4],r12d
   14000debd:	cmp    rsi,rax
   14000dec0:	je     0x14000ded1
   14000dec2:	cmp    rsi,QWORD PTR [rbx+0x8]
   14000dec6:	je     0x14000ded1
   14000dec8:	mov    rcx,rsi
   14000decb:	call   QWORD PTR [rip+0x722f]        # 0x140015100
   14000ded1:	mov    rbp,QWORD PTR [rsp+0x58]
   14000ded6:	mov    DWORD PTR [rbx+0x4],edi
   14000ded9:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dede:	add    rsp,0x20
   14000dee2:	pop    r12
   14000dee4:	pop    rdi
   14000dee5:	pop    rsi
   14000dee6:	ret    
   14000dee7:	int3   
   14000dee8:	int3   
   14000dee9:	int3   
   14000deea:	int3   
   14000deeb:	int3   
   14000deec:	int3   
   14000deed:	int3   
   14000deee:	int3   
   14000deef:	int3   
   14000def0:	movzx  eax,WORD PTR [rcx+0x58]
   14000def4:	xor    r8d,r8d
   14000def7:	mov    rdx,rcx
   14000defa:	cmp    eax,0xa
   14000defd:	je     0x14000df2b
   14000deff:	cmp    eax,0xd
   14000df02:	je     0x14000df17
   14000df04:	cmp    eax,0x2027
   14000df09:	jle    0x14000df12
   14000df0b:	cmp    eax,0x2029
   14000df10:	jle    0x14000df2b
   14000df12:	mov    r9d,r8d
   14000df15:	jmp    0x14000df31
   14000df17:	mov    rax,QWORD PTR [rcx+0x30]
   14000df1b:	mov    r9d,r8d
   14000df1e:	cmp    WORD PTR [rax],0xa
   14000df22:	sete   r9b
   14000df26:	inc    r9d
   14000df29:	jmp    0x14000df31
   14000df2b:	mov    r9d,0x1
   14000df31:	mov    rcx,QWORD PTR [rcx+0x30]
   14000df35:	add    rcx,0x2
   14000df39:	movzx  eax,WORD PTR [rcx-0x2]
   14000df3d:	mov    QWORD PTR [rdx+0x30],rcx
   14000df41:	mov    WORD PTR [rdx+0x58],ax
   14000df45:	cmp    r9d,0x2
   14000df49:	jne    0x14000df5a
   14000df4b:	movzx  eax,WORD PTR [rcx]
   14000df4e:	mov    WORD PTR [rdx+0x58],ax
   14000df52:	lea    rax,[rcx+0x2]
   14000df56:	mov    QWORD PTR [rdx+0x30],rax
   14000df5a:	movzx  eax,WORD PTR [rdx+0x58]
   14000df5e:	cmp    eax,0xa
   14000df61:	je     0x14000df76
   14000df63:	cmp    eax,0xd
   14000df66:	je     0x14000df91
   14000df68:	cmp    eax,0x2027
   14000df6d:	jle    0x14000df8f
   14000df6f:	cmp    eax,0x2029
   14000df74:	jg     0x14000df8f
   14000df76:	mov    rax,QWORD PTR [rdx+0x30]
   14000df7a:	inc    DWORD PTR [rdx+0x60]
   14000df7d:	mov    r8d,0x1
   14000df83:	mov    ecx,r8d
   14000df86:	lea    rcx,[rax+rcx*2-0x2]
   14000df8b:	mov    QWORD PTR [rdx+0x40],rcx
   14000df8f:	repz ret 
   14000df91:	mov    rax,QWORD PTR [rdx+0x30]
   14000df95:	cmp    WORD PTR [rax],0xa
   14000df99:	sete   r8b
   14000df9d:	inc    DWORD PTR [rdx+0x60]
   14000dfa0:	inc    r8d
   14000dfa3:	mov    ecx,r8d
   14000dfa6:	lea    rcx,[rax+rcx*2-0x2]
   14000dfab:	mov    QWORD PTR [rdx+0x40],rcx
   14000dfaf:	ret    
   14000dfb0:	rex push rbx
   14000dfb2:	push   r12
   14000dfb4:	push   r13
   14000dfb6:	push   r14
   14000dfb8:	sub    rsp,0x38
   14000dfbc:	mov    r14,rcx
   14000dfbf:	mov    r12,rdx
   14000dfc2:	lea    rcx,[rsp+0x60]
   14000dfc7:	mov    dl,0x75
   14000dfc9:	mov    r13,r8
   14000dfcc:	call   QWORD PTR [rip+0x71fe]        # 0x1400151d0
   14000dfd2:	movzx  eax,WORD PTR [rax]
   14000dfd5:	cmp    WORD PTR [r14+0x58],ax
   14000dfda:	jne    0x14000e0b2
   14000dfe0:	mov    rbx,QWORD PTR [r14+0x30]
   14000dfe4:	movzx  ecx,WORD PTR [rbx]
   14000dfe7:	call   0x14000dc90
   14000dfec:	test   al,al
   14000dfee:	je     0x14000e0b2
   14000dff4:	movzx  ecx,WORD PTR [rbx+0x2]
   14000dff8:	call   0x14000dc90
   14000dffd:	test   al,al
   14000dfff:	je     0x14000e0b2
   14000e005:	movzx  ecx,WORD PTR [rbx+0x4]
   14000e009:	call   0x14000dc90
   14000e00e:	test   al,al
   14000e010:	je     0x14000e0b2
   14000e016:	movzx  ecx,WORD PTR [rbx+0x6]
   14000e01a:	call   0x14000dc90
   14000e01f:	test   al,al
   14000e021:	je     0x14000e0b2
   14000e027:	mov    QWORD PTR [rsp+0x68],rbp
   14000e02c:	mov    rcx,r14
   14000e02f:	mov    QWORD PTR [rsp+0x70],rsi
   14000e034:	mov    QWORD PTR [rsp+0x30],rdi
   14000e039:	call   0x14000def0
   14000e03e:	movzx  ebx,WORD PTR [r14+0x58]
   14000e043:	mov    rcx,r14
   14000e046:	call   0x14000def0
   14000e04b:	movzx  edi,WORD PTR [r14+0x58]
   14000e050:	mov    rcx,r14
   14000e053:	call   0x14000def0
   14000e058:	movzx  esi,WORD PTR [r14+0x58]
   14000e05d:	mov    rcx,r14
   14000e060:	call   0x14000def0
   14000e065:	movzx  ebp,WORD PTR [r14+0x58]
   14000e06a:	mov    rcx,r14
   14000e06d:	call   0x14000def0
   14000e072:	test   r13,r13
   14000e075:	je     0x14000e07c
   14000e077:	mov    BYTE PTR [r13+0x0],0x1
   14000e07c:	movzx  r9d,si
   14000e080:	movzx  r8d,di
   14000e084:	movzx  edx,bx
   14000e087:	mov    rcx,r12
   14000e08a:	mov    WORD PTR [rsp+0x20],bp
   14000e08f:	call   0x14000d780
   14000e094:	mov    rdi,QWORD PTR [rsp+0x30]
   14000e099:	mov    rsi,QWORD PTR [rsp+0x70]
   14000e09e:	mov    rbp,QWORD PTR [rsp+0x68]
   14000e0a3:	mov    rax,r12
   14000e0a6:	add    rsp,0x38
   14000e0aa:	pop    r14
   14000e0ac:	pop    r13
   14000e0ae:	pop    r12
   14000e0b0:	pop    rbx
   14000e0b1:	ret    
   14000e0b2:	xor    eax,eax
   14000e0b4:	mov    BYTE PTR [r13+0x0],0x0
   14000e0b9:	mov    WORD PTR [r12],ax
   14000e0be:	mov    rax,r12
   14000e0c1:	add    rsp,0x38
   14000e0c5:	pop    r14
   14000e0c7:	pop    r13
   14000e0c9:	pop    r12
   14000e0cb:	pop    rbx
   14000e0cc:	ret    
   14000e0cd:	int3   
   14000e0ce:	int3   
   14000e0cf:	int3   
   14000e0d0:	mov    QWORD PTR [rsp+0x18],rbp
   14000e0d5:	mov    QWORD PTR [rsp+0x20],rsi
   14000e0da:	push   r12
   14000e0dc:	sub    rsp,0x20
   14000e0e0:	mov    rax,QWORD PTR [rcx+0x30]
   14000e0e4:	mov    rbp,rcx
   14000e0e7:	mov    r12,r8
   14000e0ea:	movzx  ecx,WORD PTR [rax]
   14000e0ed:	mov    rsi,rdx
   14000e0f0:	call   0x14000dc90
   14000e0f5:	test   al,al
   14000e0f7:	je     0x14000e1c2
   14000e0fd:	mov    rax,QWORD PTR [rbp+0x30]
   14000e101:	movzx  ecx,WORD PTR [rax+0x2]
   14000e105:	call   0x14000dc90
   14000e10a:	test   al,al
   14000e10c:	je     0x14000e1c2
   14000e112:	mov    rcx,rbp
   14000e115:	mov    QWORD PTR [rsp+0x30],rbx
   14000e11a:	mov    QWORD PTR [rsp+0x38],rdi
   14000e11f:	call   0x14000def0
   14000e124:	movzx  ebx,WORD PTR [rbp+0x58]
   14000e128:	mov    rcx,rbp
   14000e12b:	call   0x14000def0
   14000e130:	movzx  edi,WORD PTR [rbp+0x58]
   14000e134:	mov    rcx,rbp
   14000e137:	call   0x14000def0
   14000e13c:	test   r12,r12
   14000e13f:	je     0x14000e146
   14000e141:	mov    BYTE PTR [r12],0x1
   14000e146:	cmp    bx,0x30
   14000e14a:	jb     0x14000e157
   14000e14c:	cmp    bx,0x39
   14000e150:	ja     0x14000e157
   14000e152:	sub    bl,0x30
   14000e155:	jmp    0x14000e16b
   14000e157:	cmp    bx,0x61
   14000e15b:	jb     0x14000e168
   14000e15d:	cmp    bx,0x66
   14000e161:	ja     0x14000e168
   14000e163:	sub    bl,0x57
   14000e166:	jmp    0x14000e16b
   14000e168:	sub    bl,0x37
   14000e16b:	cmp    di,0x30
   14000e16f:	jb     0x14000e17d
   14000e171:	cmp    di,0x39
   14000e175:	ja     0x14000e17d
   14000e177:	sub    dil,0x30
   14000e17b:	jmp    0x14000e193
   14000e17d:	cmp    di,0x61
   14000e181:	jb     0x14000e18f
   14000e183:	cmp    di,0x66
   14000e187:	ja     0x14000e18f
   14000e189:	sub    dil,0x57
   14000e18d:	jmp    0x14000e193
   14000e18f:	sub    dil,0x37
   14000e193:	movzx  eax,dil
   14000e197:	mov    rdi,QWORD PTR [rsp+0x38]
   14000e19c:	movzx  ecx,bl
   14000e19f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e1a4:	shl    cx,0x4
   14000e1a8:	add    cx,ax
   14000e1ab:	mov    rax,rsi
   14000e1ae:	mov    WORD PTR [rsi],cx
   14000e1b1:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e1b6:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e1bb:	add    rsp,0x20
   14000e1bf:	pop    r12
   14000e1c1:	ret    
   14000e1c2:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e1c7:	xor    eax,eax
   14000e1c9:	mov    BYTE PTR [r12],0x0
   14000e1ce:	mov    WORD PTR [rsi],ax
   14000e1d1:	mov    rax,rsi
   14000e1d4:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e1d9:	add    rsp,0x20
   14000e1dd:	pop    r12
   14000e1df:	ret    
   14000e1e0:	rex push rbx
   14000e1e2:	push   rsi
   14000e1e3:	push   rdi
   14000e1e4:	sub    rsp,0x60
   14000e1e8:	mov    ebx,edx
   14000e1ea:	mov    rsi,rcx
   14000e1ed:	xor    edx,edx
   14000e1ef:	add    rcx,0x10
   14000e1f3:	call   QWORD PTR [rip+0x705f]        # 0x140015258
   14000e1f9:	mov    BYTE PTR [rsi+0x8c],0x1
   14000e200:	mov    DWORD PTR [rsi+0x7c],0x0
   14000e207:	cmp    ebx,0x1
   14000e20a:	jne    0x14000e230
   14000e20c:	lea    rcx,[rsp+0x88]
   14000e214:	mov    dl,0x3d
   14000e216:	call   QWORD PTR [rip+0x6fb4]        # 0x1400151d0
   14000e21c:	lea    rcx,[rsi+0x10]
   14000e220:	movzx  edx,WORD PTR [rax]
   14000e223:	call   QWORD PTR [rip+0x7027]        # 0x140015250
   14000e229:	nop    DWORD PTR [rax+0x0]
   14000e230:	movzx  ecx,WORD PTR [rsi+0x58]
   14000e234:	sub    ecx,0x2f
   14000e237:	je     0x14000e496
   14000e23d:	sub    ecx,0x2c
   14000e240:	je     0x14000e321
   14000e246:	cmp    ecx,0x1
   14000e249:	je     0x14000e2ab
   14000e24b:	mov    rax,QWORD PTR [rsi+0x38]
   14000e24f:	cmp    QWORD PTR [rsi+0x30],rax
   14000e253:	ja     0x14000e265
   14000e255:	mov    rcx,rsi
   14000e258:	call   0x14000db60
   14000e25d:	test   al,al
   14000e25f:	je     0x14000e3ef
   14000e265:	lea    r8,[rip+0x9194]        # 0x140017400
   14000e26c:	lea    rdx,[rip+0x9005]        # 0x140017278
   14000e273:	lea    rcx,[rsp+0x30]
   14000e278:	xor    r9d,r9d
   14000e27b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e283:	call   QWORD PTR [rip+0x6f3f]        # 0x1400151c8
   14000e289:	lea    rcx,[rsi+0x18]
   14000e28d:	mov    rdx,rax
   14000e290:	call   QWORD PTR [rip+0x6f22]        # 0x1400151b8
   14000e296:	lea    rcx,[rsp+0x30]
   14000e29b:	call   QWORD PTR [rip+0x7117]        # 0x1400153b8
   14000e2a1:	xor    al,al
   14000e2a3:	add    rsp,0x60
   14000e2a7:	pop    rdi
   14000e2a8:	pop    rsi
   14000e2a9:	pop    rbx
   14000e2aa:	ret    
   14000e2ab:	movzx  edx,WORD PTR [rsi+0x58]
   14000e2af:	lea    rcx,[rsi+0x10]
   14000e2b3:	call   QWORD PTR [rip+0x6f97]        # 0x140015250
   14000e2b9:	mov    rcx,rsi
   14000e2bc:	call   0x14000def0
   14000e2c1:	mov    r11,QWORD PTR [rsi+0x38]
   14000e2c5:	cmp    QWORD PTR [rsi+0x30],r11
   14000e2c9:	ja     0x14000e2db
   14000e2cb:	mov    rcx,rsi
   14000e2ce:	call   0x14000db60
   14000e2d3:	test   al,al
   14000e2d5:	je     0x14000e3ef
   14000e2db:	lea    r8,[rip+0x90e6]        # 0x1400173c8
   14000e2e2:	lea    rdx,[rip+0x8f8f]        # 0x140017278
   14000e2e9:	lea    rcx,[rsp+0x38]
   14000e2ee:	xor    r9d,r9d
   14000e2f1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e2f9:	call   QWORD PTR [rip+0x6ec9]        # 0x1400151c8
   14000e2ff:	lea    rcx,[rsi+0x18]
   14000e303:	mov    rdx,rax
   14000e306:	call   QWORD PTR [rip+0x6eac]        # 0x1400151b8
   14000e30c:	lea    rcx,[rsp+0x38]
   14000e311:	call   QWORD PTR [rip+0x70a1]        # 0x1400153b8
   14000e317:	xor    al,al
   14000e319:	add    rsp,0x60
   14000e31d:	pop    rdi
   14000e31e:	pop    rsi
   14000e31f:	pop    rbx
   14000e320:	ret    
   14000e321:	movzx  edx,WORD PTR [rsi+0x58]
   14000e325:	lea    rcx,[rsi+0x10]
   14000e329:	call   QWORD PTR [rip+0x6f21]        # 0x140015250
   14000e32f:	mov    rcx,rsi
   14000e332:	call   0x14000def0
   14000e337:	mov    rax,QWORD PTR [rsi+0x38]
   14000e33b:	cmp    QWORD PTR [rsi+0x30],rax
   14000e33f:	ja     0x14000e3d6
   14000e345:	mov    rcx,rsi
   14000e348:	call   0x14000db60
   14000e34d:	test   al,al
   14000e34f:	jne    0x14000e3d6
   14000e355:	lea    rcx,[rsp+0x88]
   14000e35d:	mov    dl,0x5d
   14000e35f:	call   QWORD PTR [rip+0x6e6b]        # 0x1400151d0
   14000e365:	movzx  eax,WORD PTR [rax]
   14000e368:	cmp    WORD PTR [rsi+0x58],ax
   14000e36c:	je     0x14000e3d6
   14000e36e:	lea    rcx,[rsp+0x80]
   14000e376:	mov    dl,0x5c
   14000e378:	call   QWORD PTR [rip+0x6e52]        # 0x1400151d0
   14000e37e:	movzx  edx,WORD PTR [rsi+0x58]
   14000e382:	lea    rcx,[rsi+0x10]
   14000e386:	movzx  eax,WORD PTR [rax]
   14000e389:	cmp    dx,ax
   14000e38c:	jne    0x14000e3ba
   14000e38e:	call   QWORD PTR [rip+0x6ebc]        # 0x140015250
   14000e394:	mov    rcx,rsi
   14000e397:	call   0x14000def0
   14000e39c:	mov    r11,QWORD PTR [rsi+0x38]
   14000e3a0:	cmp    QWORD PTR [rsi+0x30],r11
   14000e3a4:	ja     0x14000e40a
   14000e3a6:	mov    rcx,rsi
   14000e3a9:	call   0x14000db60
   14000e3ae:	test   al,al
   14000e3b0:	jne    0x14000e40a
   14000e3b2:	movzx  edx,WORD PTR [rsi+0x58]
   14000e3b6:	lea    rcx,[rsi+0x10]
   14000e3ba:	call   QWORD PTR [rip+0x6e90]        # 0x140015250
   14000e3c0:	mov    rcx,rsi
   14000e3c3:	call   0x14000def0
   14000e3c8:	mov    rax,QWORD PTR [rsi+0x38]
   14000e3cc:	cmp    QWORD PTR [rsi+0x30],rax
   14000e3d0:	jbe    0x14000e345
   14000e3d6:	lea    rcx,[rsp+0x90]
   14000e3de:	mov    dl,0x5d
   14000e3e0:	call   QWORD PTR [rip+0x6dea]        # 0x1400151d0
   14000e3e6:	movzx  eax,WORD PTR [rax]
   14000e3e9:	cmp    WORD PTR [rsi+0x58],ax
   14000e3ed:	jne    0x14000e450
   14000e3ef:	movzx  edx,WORD PTR [rsi+0x58]
   14000e3f3:	lea    rcx,[rsi+0x10]
   14000e3f7:	call   QWORD PTR [rip+0x6e53]        # 0x140015250
   14000e3fd:	mov    rcx,rsi
   14000e400:	call   0x14000def0
   14000e405:	jmp    0x14000e230
   14000e40a:	lea    r8,[rip+0x8fb7]        # 0x1400173c8
   14000e411:	lea    rdx,[rip+0x8e60]        # 0x140017278
   14000e418:	lea    rcx,[rsp+0x40]
   14000e41d:	xor    r9d,r9d
   14000e420:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e428:	call   QWORD PTR [rip+0x6d9a]        # 0x1400151c8
   14000e42e:	lea    rcx,[rsi+0x18]
   14000e432:	mov    rdx,rax
   14000e435:	call   QWORD PTR [rip+0x6d7d]        # 0x1400151b8
   14000e43b:	lea    rcx,[rsp+0x40]
   14000e440:	call   QWORD PTR [rip+0x6f72]        # 0x1400153b8
   14000e446:	xor    al,al
   14000e448:	add    rsp,0x60
   14000e44c:	pop    rdi
   14000e44d:	pop    rsi
   14000e44e:	pop    rbx
   14000e44f:	ret    
   14000e450:	lea    r8,[rip+0x8f49]        # 0x1400173a0
   14000e457:	lea    rdx,[rip+0x8e1a]        # 0x140017278
   14000e45e:	lea    rcx,[rsp+0x48]
   14000e463:	xor    r9d,r9d
   14000e466:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e46e:	call   QWORD PTR [rip+0x6d54]        # 0x1400151c8
   14000e474:	lea    rcx,[rsi+0x18]
   14000e478:	mov    rdx,rax
   14000e47b:	call   QWORD PTR [rip+0x6d37]        # 0x1400151b8
   14000e481:	lea    rcx,[rsp+0x48]
   14000e486:	call   QWORD PTR [rip+0x6f2c]        # 0x1400153b8
   14000e48c:	xor    al,al
   14000e48e:	add    rsp,0x60
   14000e492:	pop    rdi
   14000e493:	pop    rsi
   14000e494:	pop    rbx
   14000e495:	ret    
   14000e496:	mov    rcx,rsi
   14000e499:	call   0x14000def0
   14000e49e:	movzx  ecx,WORD PTR [rsi+0x58]
   14000e4a2:	mov    DWORD PTR [rsi+0x7c],0x0
   14000e4a9:	call   0x14000dbd0
   14000e4ae:	test   al,al
   14000e4b0:	je     0x14000e4f9
   14000e4b2:	movzx  eax,WORD PTR [rsi+0x58]
   14000e4b6:	cmp    eax,0x67
   14000e4b9:	je     0x14000e4d3
   14000e4bb:	cmp    eax,0x69
   14000e4be:	je     0x14000e4cc
   14000e4c0:	cmp    eax,0x6d
   14000e4c3:	jne    0x14000e516
   14000e4c5:	mov    eax,0x4
   14000e4ca:	jmp    0x14000e4d8
   14000e4cc:	mov    eax,0x2
   14000e4d1:	jmp    0x14000e4d8
   14000e4d3:	mov    eax,0x1
   14000e4d8:	mov    ecx,DWORD PTR [rsi+0x7c]
   14000e4db:	test   eax,ecx
   14000e4dd:	jne    0x14000e516
   14000e4df:	or     ecx,eax
   14000e4e1:	mov    DWORD PTR [rsi+0x7c],ecx
   14000e4e4:	mov    rcx,rsi
   14000e4e7:	call   0x14000def0
   14000e4ec:	movzx  ecx,WORD PTR [rsi+0x58]
   14000e4f0:	call   0x14000dbd0
   14000e4f5:	test   al,al
   14000e4f7:	jne    0x14000e4b2
   14000e4f9:	mov    rax,QWORD PTR [rsi+0x30]
   14000e4fd:	sub    rax,QWORD PTR [rsi+0x50]
   14000e501:	sar    rax,1
   14000e504:	dec    eax
   14000e506:	mov    DWORD PTR [rsi+0x84],eax
   14000e50c:	mov    al,0x1
   14000e50e:	add    rsp,0x60
   14000e512:	pop    rdi
   14000e513:	pop    rsi
   14000e514:	pop    rbx
   14000e515:	ret    
   14000e516:	movzx  ebx,WORD PTR [rsi+0x58]
   14000e51a:	lea    rcx,[rsp+0x98]
   14000e522:	mov    dl,0x20
   14000e524:	call   QWORD PTR [rip+0x6ca6]        # 0x1400151d0
   14000e52a:	lea    r8,[rip+0x8e47]        # 0x140017378
   14000e531:	lea    rdx,[rip+0x8d40]        # 0x140017278
   14000e538:	lea    rcx,[rsp+0x58]
   14000e53d:	xor    r9d,r9d
   14000e540:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e548:	mov    rdi,rax
   14000e54b:	call   QWORD PTR [rip+0x6c77]        # 0x1400151c8
   14000e551:	lea    rdx,[rsp+0x50]
   14000e556:	mov    rcx,rax
   14000e559:	movzx  eax,WORD PTR [rdi]
   14000e55c:	xor    r9d,r9d
   14000e55f:	movzx  r8d,bx
   14000e563:	mov    WORD PTR [rsp+0x20],ax
   14000e568:	call   QWORD PTR [rip+0x6cda]        # 0x140015248
   14000e56e:	lea    rcx,[rsi+0x18]
   14000e572:	mov    rdx,rax
   14000e575:	call   QWORD PTR [rip+0x6c3d]        # 0x1400151b8
   14000e57b:	lea    rcx,[rsp+0x50]
   14000e580:	call   QWORD PTR [rip+0x6e32]        # 0x1400153b8
   14000e586:	lea    rcx,[rsp+0x58]
   14000e58b:	call   QWORD PTR [rip+0x6e27]        # 0x1400153b8
   14000e591:	xor    al,al
   14000e593:	add    rsp,0x60
   14000e597:	pop    rdi
   14000e598:	pop    rsi
   14000e599:	pop    rbx
   14000e59a:	ret    
   14000e59b:	int3   
   14000e59c:	int3   
   14000e59d:	int3   
   14000e59e:	int3   
   14000e59f:	int3   
   14000e5a0:	mov    WORD PTR [rsp+0x10],dx
   14000e5a5:	push   rbx
   14000e5a6:	push   rbp
   14000e5a7:	push   rsi
   14000e5a8:	push   rdi
   14000e5a9:	push   r12
   14000e5ab:	push   r13
   14000e5ad:	push   r15
   14000e5af:	sub    rsp,0xd0
   14000e5b6:	mov    rdi,rcx
   14000e5b9:	lea    rcx,[rsp+0x128]
   14000e5c1:	mov    dl,0x30
   14000e5c3:	call   QWORD PTR [rip+0x6c07]        # 0x1400151d0
   14000e5c9:	xor    r15d,r15d
   14000e5cc:	mov    r11,rax
   14000e5cf:	movzx  eax,WORD PTR [rsp+0x118]
   14000e5d7:	cmp    ax,WORD PTR [r11]
   14000e5db:	je     0x14000e7d1
   14000e5e1:	movzx  ebx,WORD PTR [rdi+0x58]
   14000e5e5:	mov    r13,QWORD PTR [rdi+0x30]
   14000e5e9:	lea    rcx,[rsp+0x70]
   14000e5ee:	mov    QWORD PTR [rsp+0x68],rcx
   14000e5f3:	mov    QWORD PTR [rsp+0x110],r14
   14000e5fb:	mov    r14d,0xff
   14000e601:	movzx  ecx,al
   14000e604:	cmp    ax,r14w
   14000e608:	mov    edx,0x40
   14000e60d:	cmova  ecx,r15d
   14000e611:	mov    esi,0x1
   14000e616:	mov    DWORD PTR [rsp+0x60],edx
   14000e61a:	mov    BYTE PTR [rsp+0x70],cl
   14000e61e:	mov    DWORD PTR [rsp+0x64],esi
   14000e622:	movzx  ecx,bx
   14000e625:	cmp    ecx,0x39
   14000e628:	ja     0x14000e62f
   14000e62a:	cmp    ecx,0x30
   14000e62d:	jae    0x14000e64f
   14000e62f:	cmp    ecx,0x7f
   14000e632:	jbe    0x14000e6ef
   14000e638:	call   QWORD PTR [rip+0x6bfa]        # 0x140015238
   14000e63e:	cmp    eax,0x3
   14000e641:	jne    0x14000e6ef
   14000e647:	mov    esi,DWORD PTR [rsp+0x64]
   14000e64b:	mov    edx,DWORD PTR [rsp+0x60]
   14000e64f:	cmp    bx,r14w
   14000e653:	movzx  r12d,bl
   14000e657:	cmova  r12d,r15d
   14000e65b:	cmp    esi,edx
   14000e65d:	jne    0x14000e6c7
   14000e65f:	mov    rbx,QWORD PTR [rsp+0x68]
   14000e664:	lea    ebp,[rsi+rsi*1]
   14000e667:	cmp    ebp,edx
   14000e669:	je     0x14000e6a9
   14000e66b:	cmp    ebp,0x40
   14000e66e:	jle    0x14000e684
   14000e670:	movsxd rcx,ebp
   14000e673:	call   QWORD PTR [rip+0x6a9f]        # 0x140015118
   14000e679:	mov    DWORD PTR [rsp+0x60],ebp
   14000e67d:	mov    QWORD PTR [rsp+0x68],rax
   14000e682:	jmp    0x14000e696
   14000e684:	lea    rax,[rsp+0x70]
   14000e689:	mov    DWORD PTR [rsp+0x60],0x40
   14000e691:	mov    QWORD PTR [rsp+0x68],rax
   14000e696:	movsxd r8,esi
   14000e699:	mov    rdx,rbx
   14000e69c:	mov    rcx,rax
   14000e69f:	mov    DWORD PTR [rsp+0x64],r15d
   14000e6a4:	call   0x140014998
   14000e6a9:	lea    rax,[rsp+0x70]
   14000e6ae:	mov    DWORD PTR [rsp+0x64],esi
   14000e6b2:	cmp    rbx,rax
   14000e6b5:	je     0x14000e6c7
   14000e6b7:	cmp    rbx,QWORD PTR [rsp+0x68]
   14000e6bc:	je     0x14000e6c7
   14000e6be:	mov    rcx,rbx
   14000e6c1:	call   QWORD PTR [rip+0x6a39]        # 0x140015100
   14000e6c7:	mov    rax,QWORD PTR [rsp+0x68]
   14000e6cc:	movsxd rcx,esi
   14000e6cf:	inc    esi
   14000e6d1:	mov    DWORD PTR [rsp+0x64],esi
   14000e6d5:	mov    BYTE PTR [rcx+rax*1],r12b
   14000e6d9:	mov    bx,WORD PTR [r13+0x0]
   14000e6de:	mov    esi,DWORD PTR [rsp+0x64]
   14000e6e2:	mov    edx,DWORD PTR [rsp+0x60]
   14000e6e6:	add    r13,0x2
   14000e6ea:	jmp    0x14000e622
   14000e6ef:	lea    rcx,[rsp+0x128]
   14000e6f7:	mov    dl,0x2e
   14000e6f9:	call   QWORD PTR [rip+0x6ad1]        # 0x1400151d0
   14000e6ff:	mov    r14,QWORD PTR [rsp+0x110]
   14000e707:	cmp    bx,WORD PTR [rax]
   14000e70a:	je     0x14000e7ab
   14000e710:	lea    rcx,[rsp+0x128]
   14000e718:	mov    dl,0x65
   14000e71a:	call   QWORD PTR [rip+0x6ab0]        # 0x1400151d0
   14000e720:	cmp    bx,WORD PTR [rax]
   14000e723:	je     0x14000e7ab
   14000e729:	lea    rcx,[rsp+0x128]
   14000e731:	mov    dl,0x45
   14000e733:	call   QWORD PTR [rip+0x6a97]        # 0x1400151d0
   14000e739:	cmp    bx,WORD PTR [rax]
   14000e73c:	je     0x14000e7ab
   14000e73e:	cmp    r13,QWORD PTR [rdi+0x30]
   14000e742:	je     0x14000e754
   14000e744:	lea    rax,[r13-0x2]
   14000e748:	mov    rcx,rdi
   14000e74b:	mov    QWORD PTR [rdi+0x30],rax
   14000e74f:	call   0x14000def0
   14000e754:	mov    ecx,DWORD PTR [rsp+0x64]
   14000e758:	cmp    ecx,DWORD PTR [rsp+0x60]
   14000e75c:	jne    0x14000e772
   14000e75e:	lea    r8d,[rcx+rcx*1]
   14000e762:	mov    edx,ecx
   14000e764:	lea    rcx,[rsp+0x60]
   14000e769:	call   0x14000de40
   14000e76e:	mov    ecx,DWORD PTR [rsp+0x64]
   14000e772:	movsxd rax,ecx
   14000e775:	inc    ecx
   14000e777:	xor    edx,edx
   14000e779:	mov    DWORD PTR [rsp+0x64],ecx
   14000e77d:	mov    rcx,rax
   14000e780:	mov    rax,QWORD PTR [rsp+0x68]
   14000e785:	mov    BYTE PTR [rcx+rax*1],r15b
   14000e789:	mov    rcx,QWORD PTR [rsp+0x68]
   14000e78e:	call   QWORD PTR [rip+0x695c]        # 0x1400150f0
   14000e794:	mov    rcx,QWORD PTR [rsp+0x68]
   14000e799:	lea    rax,[rsp+0x70]
   14000e79e:	cmp    rcx,rax
   14000e7a1:	movsd  QWORD PTR [rdi+0x68],xmm0
   14000e7a6:	jmp    0x14000f111
   14000e7ab:	mov    rcx,QWORD PTR [rsp+0x68]
   14000e7b0:	lea    rax,[rsp+0x70]
   14000e7b5:	cmp    rcx,rax
   14000e7b8:	je     0x14000e853
   14000e7be:	call   QWORD PTR [rip+0x693c]        # 0x140015100
   14000e7c4:	mov    ax,WORD PTR [rsp+0x118]
   14000e7cc:	jmp    0x14000e85b
   14000e7d1:	movzx  ecx,WORD PTR [rdi+0x58]
   14000e7d5:	cmp    ecx,0x39
   14000e7d8:	ja     0x14000e7df
   14000e7da:	cmp    ecx,0x30
   14000e7dd:	jae    0x14000e7f7
   14000e7df:	cmp    ecx,0x7f
   14000e7e2:	jbe    0x14000e85b
   14000e7e4:	call   QWORD PTR [rip+0x6a4e]        # 0x140015238
   14000e7ea:	cmp    eax,0x3
   14000e7ed:	jne    0x14000e853
   14000e7ef:	mov    ax,WORD PTR [rsp+0x118]
   14000e7f7:	cmp    BYTE PTR [rdi+0x92],r15b
   14000e7fe:	jne    0x14000e85b
   14000e800:	lea    r8,[rip+0x8c81]        # 0x140017488
   14000e807:	lea    rdx,[rip+0x8a6a]        # 0x140017278
   14000e80e:	lea    rcx,[rsp+0x128]
   14000e816:	xor    r9d,r9d
   14000e819:	mov    DWORD PTR [rdi+0x5c],0x1
   14000e820:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e828:	call   QWORD PTR [rip+0x699a]        # 0x1400151c8
   14000e82e:	lea    rcx,[rdi+0x18]
   14000e832:	mov    rdx,rax
   14000e835:	call   QWORD PTR [rip+0x697d]        # 0x1400151b8
   14000e83b:	lea    rcx,[rsp+0x128]
   14000e843:	call   QWORD PTR [rip+0x6b6f]        # 0x1400153b8
   14000e849:	mov    eax,0x61
   14000e84e:	jmp    0x14000f11e
   14000e853:	mov    ax,WORD PTR [rsp+0x118]
   14000e85b:	lea    rcx,[rsp+0x40]
   14000e860:	mov    dl,0x30
   14000e862:	mov    DWORD PTR [rsp+0x30],0x20
   14000e86a:	mov    QWORD PTR [rsp+0x38],rcx
   14000e86f:	lea    rcx,[rsp+0x128]
   14000e877:	mov    DWORD PTR [rsp+0x34],0x1
   14000e87f:	mov    BYTE PTR [rsp+0x40],al
   14000e883:	call   QWORD PTR [rip+0x6947]        # 0x1400151d0
   14000e889:	movzx  eax,WORD PTR [rax]
   14000e88c:	cmp    WORD PTR [rsp+0x118],ax
   14000e894:	jne    0x14000eab7
   14000e89a:	lea    rcx,[rsp+0x128]
   14000e8a2:	mov    dl,0x78
   14000e8a4:	call   QWORD PTR [rip+0x6926]        # 0x1400151d0
   14000e8aa:	movzx  ecx,WORD PTR [rdi+0x58]
   14000e8ae:	cmp    cx,WORD PTR [rax]
   14000e8b1:	je     0x14000e8d0
   14000e8b3:	lea    rcx,[rsp+0x128]
   14000e8bb:	mov    dl,0x58
   14000e8bd:	call   QWORD PTR [rip+0x690d]        # 0x1400151d0
   14000e8c3:	mov    cx,WORD PTR [rdi+0x58]
   14000e8c7:	cmp    cx,WORD PTR [rax]
   14000e8ca:	jne    0x14000eab7
   14000e8d0:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000e8d4:	mov    WORD PTR [rsp+0x118],cx
   14000e8dc:	mov    ecx,DWORD PTR [rsp+0x34]
   14000e8e0:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000e8e4:	jne    0x14000e8fa
   14000e8e6:	lea    r8d,[rcx+rcx*1]
   14000e8ea:	mov    edx,ecx
   14000e8ec:	lea    rcx,[rsp+0x30]
   14000e8f1:	call   0x14000dd90
   14000e8f6:	mov    ecx,DWORD PTR [rsp+0x34]
   14000e8fa:	movsxd rax,ecx
   14000e8fd:	inc    ecx
   14000e8ff:	mov    DWORD PTR [rsp+0x34],ecx
   14000e903:	mov    rcx,rax
   14000e906:	mov    rax,QWORD PTR [rsp+0x38]
   14000e90b:	mov    BYTE PTR [rcx+rax*1],bl
   14000e90e:	mov    rcx,rdi
   14000e911:	call   0x14000def0
   14000e916:	movzx  ecx,WORD PTR [rdi+0x58]
   14000e91a:	call   0x14000dc90
   14000e91f:	test   al,al
   14000e921:	je     0x14000e9d5
   14000e927:	nop    WORD PTR [rax+rax*1+0x0]
   14000e930:	movsxd rbx,DWORD PTR [rsp+0x34]
   14000e935:	mov    eax,DWORD PTR [rsp+0x30]
   14000e939:	movzx  r12d,BYTE PTR [rdi+0x58]
   14000e93e:	cmp    ebx,eax
   14000e940:	jne    0x14000e9aa
   14000e942:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e947:	lea    ebp,[rbx+rbx*1]
   14000e94a:	cmp    ebp,eax
   14000e94c:	je     0x14000e98c
   14000e94e:	cmp    ebp,0x20
   14000e951:	jle    0x14000e967
   14000e953:	movsxd rcx,ebp
   14000e956:	call   QWORD PTR [rip+0x67bc]        # 0x140015118
   14000e95c:	mov    DWORD PTR [rsp+0x30],ebp
   14000e960:	mov    QWORD PTR [rsp+0x38],rax
   14000e965:	jmp    0x14000e979
   14000e967:	lea    rax,[rsp+0x40]
   14000e96c:	mov    DWORD PTR [rsp+0x30],0x20
   14000e974:	mov    QWORD PTR [rsp+0x38],rax
   14000e979:	mov    r8,rbx
   14000e97c:	mov    rdx,rsi
   14000e97f:	mov    rcx,rax
   14000e982:	mov    DWORD PTR [rsp+0x34],r15d
   14000e987:	call   0x140014998
   14000e98c:	lea    rax,[rsp+0x40]
   14000e991:	mov    DWORD PTR [rsp+0x34],ebx
   14000e995:	cmp    rsi,rax
   14000e998:	je     0x14000e9aa
   14000e99a:	cmp    rsi,QWORD PTR [rsp+0x38]
   14000e99f:	je     0x14000e9aa
   14000e9a1:	mov    rcx,rsi
   14000e9a4:	call   QWORD PTR [rip+0x6756]        # 0x140015100
   14000e9aa:	mov    rax,QWORD PTR [rsp+0x38]
   14000e9af:	mov    rcx,rbx
   14000e9b2:	inc    ebx
   14000e9b4:	mov    DWORD PTR [rsp+0x34],ebx
   14000e9b8:	mov    BYTE PTR [rcx+rax*1],r12b
   14000e9bc:	mov    rcx,rdi
   14000e9bf:	call   0x14000def0
   14000e9c4:	movzx  ecx,WORD PTR [rdi+0x58]
   14000e9c8:	call   0x14000dc90
   14000e9cd:	test   al,al
   14000e9cf:	jne    0x14000e930
   14000e9d5:	mov    edx,DWORD PTR [rsp+0x34]
   14000e9d9:	cmp    edx,0x3
   14000e9dc:	jge    0x14000ea90
   14000e9e2:	lea    rcx,[rsp+0x128]
   14000e9ea:	mov    dl,0x20
   14000e9ec:	mov    DWORD PTR [rdi+0x5c],0x2
   14000e9f3:	call   QWORD PTR [rip+0x67d7]        # 0x1400151d0
   14000e9f9:	lea    r8,[rip+0x8a50]        # 0x140017450
   14000ea00:	lea    rdx,[rip+0x8871]        # 0x140017278
   14000ea07:	lea    rcx,[rsp+0xb8]
   14000ea0f:	xor    r9d,r9d
   14000ea12:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ea1a:	mov    rbx,rax
   14000ea1d:	call   QWORD PTR [rip+0x67a5]        # 0x1400151c8
   14000ea23:	movzx  r8d,WORD PTR [rsp+0x118]
   14000ea2c:	mov    rcx,rax
   14000ea2f:	movzx  eax,WORD PTR [rbx]
   14000ea32:	lea    rdx,[rsp+0xc0]
   14000ea3a:	xor    r9d,r9d
   14000ea3d:	mov    WORD PTR [rsp+0x20],ax
   14000ea42:	call   QWORD PTR [rip+0x6800]        # 0x140015248
   14000ea48:	lea    rcx,[rdi+0x18]
   14000ea4c:	mov    rdx,rax
   14000ea4f:	call   QWORD PTR [rip+0x6763]        # 0x1400151b8
   14000ea55:	lea    rcx,[rsp+0xc0]
   14000ea5d:	call   QWORD PTR [rip+0x6955]        # 0x1400153b8
   14000ea63:	lea    rcx,[rsp+0xb8]
   14000ea6b:	call   QWORD PTR [rip+0x6947]        # 0x1400153b8
   14000ea71:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ea76:	lea    r11,[rsp+0x40]
   14000ea7b:	cmp    rcx,r11
   14000ea7e:	je     0x14000ea86
   14000ea80:	call   QWORD PTR [rip+0x667a]        # 0x140015100
   14000ea86:	mov    eax,0x61
   14000ea8b:	jmp    0x14000f11e
   14000ea90:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ea95:	mov    r8d,0x10
   14000ea9b:	call   0x14000c0e0
   14000eaa0:	mov    rcx,QWORD PTR [rsp+0x38]
   14000eaa5:	lea    rax,[rsp+0x40]
   14000eaaa:	cmp    rcx,rax
   14000eaad:	movsd  QWORD PTR [rdi+0x68],xmm0
   14000eab2:	jmp    0x14000f111
   14000eab7:	movzx  ecx,WORD PTR [rdi+0x58]
   14000eabb:	cmp    ecx,0x39
   14000eabe:	ja     0x14000eac5
   14000eac0:	cmp    ecx,0x30
   14000eac3:	jae    0x14000eadd
   14000eac5:	cmp    ecx,0x7f
   14000eac8:	jbe    0x14000eb76
   14000eace:	call   QWORD PTR [rip+0x6764]        # 0x140015238
   14000ead4:	cmp    eax,0x3
   14000ead7:	jne    0x14000eb76
   14000eadd:	movsxd rbx,DWORD PTR [rsp+0x34]
   14000eae2:	mov    eax,DWORD PTR [rsp+0x30]
   14000eae6:	movzx  r12d,BYTE PTR [rdi+0x58]
   14000eaeb:	cmp    ebx,eax
   14000eaed:	jne    0x14000eb57
   14000eaef:	mov    rsi,QWORD PTR [rsp+0x38]
   14000eaf4:	lea    ebp,[rbx+rbx*1]
   14000eaf7:	cmp    ebp,eax
   14000eaf9:	je     0x14000eb39
   14000eafb:	cmp    ebp,0x20
   14000eafe:	jle    0x14000eb14
   14000eb00:	movsxd rcx,ebp
   14000eb03:	call   QWORD PTR [rip+0x660f]        # 0x140015118
   14000eb09:	mov    DWORD PTR [rsp+0x30],ebp
   14000eb0d:	mov    QWORD PTR [rsp+0x38],rax
   14000eb12:	jmp    0x14000eb26
   14000eb14:	lea    rax,[rsp+0x40]
   14000eb19:	mov    DWORD PTR [rsp+0x30],0x20
   14000eb21:	mov    QWORD PTR [rsp+0x38],rax
   14000eb26:	mov    r8,rbx
   14000eb29:	mov    rdx,rsi
   14000eb2c:	mov    rcx,rax
   14000eb2f:	mov    DWORD PTR [rsp+0x34],r15d
   14000eb34:	call   0x140014998
   14000eb39:	lea    rax,[rsp+0x40]
   14000eb3e:	mov    DWORD PTR [rsp+0x34],ebx
   14000eb42:	cmp    rsi,rax
   14000eb45:	je     0x14000eb57
   14000eb47:	cmp    rsi,QWORD PTR [rsp+0x38]
   14000eb4c:	je     0x14000eb57
   14000eb4e:	mov    rcx,rsi
   14000eb51:	call   QWORD PTR [rip+0x65a9]        # 0x140015100
   14000eb57:	mov    rax,QWORD PTR [rsp+0x38]
   14000eb5c:	mov    rcx,rbx
   14000eb5f:	inc    ebx
   14000eb61:	mov    DWORD PTR [rsp+0x34],ebx
   14000eb65:	mov    BYTE PTR [rcx+rax*1],r12b
   14000eb69:	mov    rcx,rdi
   14000eb6c:	call   0x14000def0
   14000eb71:	jmp    0x14000eab7
   14000eb76:	lea    rcx,[rsp+0x128]
   14000eb7e:	mov    dl,0x2e
   14000eb80:	call   QWORD PTR [rip+0x664a]        # 0x1400151d0
   14000eb86:	movzx  eax,WORD PTR [rax]
   14000eb89:	cmp    WORD PTR [rdi+0x58],ax
   14000eb8d:	jne    0x14000ee5d
   14000eb93:	mov    ecx,DWORD PTR [rsp+0x34]
   14000eb97:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000eb9b:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000eb9f:	jne    0x14000ebb5
   14000eba1:	lea    r8d,[rcx+rcx*1]
   14000eba5:	mov    edx,ecx
   14000eba7:	lea    rcx,[rsp+0x30]
   14000ebac:	call   0x14000dd90
   14000ebb1:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ebb5:	movsxd rax,ecx
   14000ebb8:	inc    ecx
   14000ebba:	mov    DWORD PTR [rsp+0x34],ecx
   14000ebbe:	mov    rcx,rax
   14000ebc1:	mov    rax,QWORD PTR [rsp+0x38]
   14000ebc6:	mov    BYTE PTR [rcx+rax*1],bl
   14000ebc9:	mov    rcx,rdi
   14000ebcc:	call   0x14000def0
   14000ebd1:	movzx  ecx,WORD PTR [rdi+0x58]
   14000ebd5:	cmp    ecx,0x39
   14000ebd8:	ja     0x14000ebdf
   14000ebda:	cmp    ecx,0x30
   14000ebdd:	jae    0x14000ebf7
   14000ebdf:	cmp    ecx,0x7f
   14000ebe2:	jbe    0x14000ec90
   14000ebe8:	call   QWORD PTR [rip+0x664a]        # 0x140015238
   14000ebee:	cmp    eax,0x3
   14000ebf1:	jne    0x14000ec90
   14000ebf7:	movsxd rbx,DWORD PTR [rsp+0x34]
   14000ebfc:	mov    eax,DWORD PTR [rsp+0x30]
   14000ec00:	movzx  r12d,BYTE PTR [rdi+0x58]
   14000ec05:	cmp    ebx,eax
   14000ec07:	jne    0x14000ec71
   14000ec09:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ec0e:	lea    ebp,[rbx+rbx*1]
   14000ec11:	cmp    ebp,eax
   14000ec13:	je     0x14000ec53
   14000ec15:	cmp    ebp,0x20
   14000ec18:	jle    0x14000ec2e
   14000ec1a:	movsxd rcx,ebp
   14000ec1d:	call   QWORD PTR [rip+0x64f5]        # 0x140015118
   14000ec23:	mov    DWORD PTR [rsp+0x30],ebp
   14000ec27:	mov    QWORD PTR [rsp+0x38],rax
   14000ec2c:	jmp    0x14000ec40
   14000ec2e:	lea    rax,[rsp+0x40]
   14000ec33:	mov    DWORD PTR [rsp+0x30],0x20
   14000ec3b:	mov    QWORD PTR [rsp+0x38],rax
   14000ec40:	mov    r8,rbx
   14000ec43:	mov    rdx,rsi
   14000ec46:	mov    rcx,rax
   14000ec49:	mov    DWORD PTR [rsp+0x34],r15d
   14000ec4e:	call   0x140014998
   14000ec53:	lea    rax,[rsp+0x40]
   14000ec58:	mov    DWORD PTR [rsp+0x34],ebx
   14000ec5c:	cmp    rsi,rax
   14000ec5f:	je     0x14000ec71
   14000ec61:	cmp    rsi,QWORD PTR [rsp+0x38]
   14000ec66:	je     0x14000ec71
   14000ec68:	mov    rcx,rsi
   14000ec6b:	call   QWORD PTR [rip+0x648f]        # 0x140015100
   14000ec71:	mov    rax,QWORD PTR [rsp+0x38]
   14000ec76:	mov    rcx,rbx
   14000ec79:	inc    ebx
   14000ec7b:	mov    DWORD PTR [rsp+0x34],ebx
   14000ec7f:	mov    BYTE PTR [rcx+rax*1],r12b
   14000ec83:	mov    rcx,rdi
   14000ec86:	call   0x14000def0
   14000ec8b:	jmp    0x14000ebd1
   14000ec90:	lea    rcx,[rsp+0x128]
   14000ec98:	mov    dl,0x65
   14000ec9a:	call   QWORD PTR [rip+0x6530]        # 0x1400151d0
   14000eca0:	movzx  eax,WORD PTR [rax]
   14000eca3:	cmp    WORD PTR [rdi+0x58],ax
   14000eca7:	je     0x14000ecc6
   14000eca9:	lea    rcx,[rsp+0x128]
   14000ecb1:	mov    dl,0x45
   14000ecb3:	call   QWORD PTR [rip+0x6517]        # 0x1400151d0
   14000ecb9:	movzx  eax,WORD PTR [rax]
   14000ecbc:	cmp    WORD PTR [rdi+0x58],ax
   14000ecc0:	jne    0x14000f022
   14000ecc6:	mov    rax,QWORD PTR [rdi+0x30]
   14000ecca:	movzx  ecx,WORD PTR [rax]
   14000eccd:	cmp    ecx,0x39
   14000ecd0:	ja     0x14000ecd7
   14000ecd2:	cmp    ecx,0x30
   14000ecd5:	jae    0x14000ed49
   14000ecd7:	cmp    ecx,0x7f
   14000ecda:	jbe    0x14000ece7
   14000ecdc:	call   QWORD PTR [rip+0x6556]        # 0x140015238
   14000ece2:	cmp    eax,0x3
   14000ece5:	je     0x14000ed49
   14000ece7:	lea    rcx,[rsp+0x128]
   14000ecef:	mov    dl,0x2b
   14000ecf1:	call   QWORD PTR [rip+0x64d9]        # 0x1400151d0
   14000ecf7:	mov    rcx,QWORD PTR [rdi+0x30]
   14000ecfb:	movzx  eax,WORD PTR [rax]
   14000ecfe:	cmp    WORD PTR [rcx],ax
   14000ed01:	je     0x14000ed23
   14000ed03:	lea    rcx,[rsp+0x128]
   14000ed0b:	mov    dl,0x2d
   14000ed0d:	call   QWORD PTR [rip+0x64bd]        # 0x1400151d0
   14000ed13:	mov    rcx,QWORD PTR [rdi+0x30]
   14000ed17:	movzx  eax,WORD PTR [rax]
   14000ed1a:	cmp    WORD PTR [rcx],ax
   14000ed1d:	jne    0x14000f022
   14000ed23:	movzx  ecx,WORD PTR [rcx+0x2]
   14000ed27:	cmp    ecx,0x39
   14000ed2a:	ja     0x14000ed31
   14000ed2c:	cmp    ecx,0x30
   14000ed2f:	jae    0x14000ed49
   14000ed31:	cmp    ecx,0x7f
   14000ed34:	jbe    0x14000f022
   14000ed3a:	call   QWORD PTR [rip+0x64f8]        # 0x140015238
   14000ed40:	cmp    eax,0x3
   14000ed43:	jne    0x14000f022
   14000ed49:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ed4d:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000ed51:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000ed55:	jne    0x14000ed6b
   14000ed57:	lea    r8d,[rcx+rcx*1]
   14000ed5b:	mov    edx,ecx
   14000ed5d:	lea    rcx,[rsp+0x30]
   14000ed62:	call   0x14000dd90
   14000ed67:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ed6b:	movsxd rax,ecx
   14000ed6e:	inc    ecx
   14000ed70:	mov    DWORD PTR [rsp+0x34],ecx
   14000ed74:	mov    rcx,rax
   14000ed77:	mov    rax,QWORD PTR [rsp+0x38]
   14000ed7c:	mov    BYTE PTR [rcx+rax*1],bl
   14000ed7f:	mov    rcx,rdi
   14000ed82:	call   0x14000def0
   14000ed87:	lea    rcx,[rsp+0x128]
   14000ed8f:	mov    dl,0x2b
   14000ed91:	call   QWORD PTR [rip+0x6439]        # 0x1400151d0
   14000ed97:	movzx  eax,WORD PTR [rax]
   14000ed9a:	cmp    WORD PTR [rdi+0x58],ax
   14000ed9e:	je     0x14000edb9
   14000eda0:	lea    rcx,[rsp+0x128]
   14000eda8:	mov    dl,0x2d
   14000edaa:	call   QWORD PTR [rip+0x6420]        # 0x1400151d0
   14000edb0:	movzx  eax,WORD PTR [rax]
   14000edb3:	cmp    WORD PTR [rdi+0x58],ax
   14000edb7:	jne    0x14000edf7
   14000edb9:	mov    ecx,DWORD PTR [rsp+0x34]
   14000edbd:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000edc1:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000edc5:	jne    0x14000eddb
   14000edc7:	lea    r8d,[rcx+rcx*1]
   14000edcb:	mov    edx,ecx
   14000edcd:	lea    rcx,[rsp+0x30]
   14000edd2:	call   0x14000dd90
   14000edd7:	mov    ecx,DWORD PTR [rsp+0x34]
   14000eddb:	movsxd rax,ecx
   14000edde:	inc    ecx
   14000ede0:	mov    DWORD PTR [rsp+0x34],ecx
   14000ede4:	mov    rcx,rax
   14000ede7:	mov    rax,QWORD PTR [rsp+0x38]
   14000edec:	mov    BYTE PTR [rcx+rax*1],bl
   14000edef:	mov    rcx,rdi
   14000edf2:	call   0x14000def0
   14000edf7:	movzx  ecx,WORD PTR [rdi+0x58]
   14000edfb:	cmp    ecx,0x39
   14000edfe:	ja     0x14000ee05
   14000ee00:	cmp    ecx,0x30
   14000ee03:	jae    0x14000ee1d
   14000ee05:	cmp    ecx,0x7f
   14000ee08:	jbe    0x14000f022
   14000ee0e:	call   QWORD PTR [rip+0x6424]        # 0x140015238
   14000ee14:	cmp    eax,0x3
   14000ee17:	jne    0x14000f022
   14000ee1d:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ee21:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000ee25:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000ee29:	jne    0x14000ee3f
   14000ee2b:	lea    r8d,[rcx+rcx*1]
   14000ee2f:	mov    edx,ecx
   14000ee31:	lea    rcx,[rsp+0x30]
   14000ee36:	call   0x14000dd90
   14000ee3b:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ee3f:	movsxd rax,ecx
   14000ee42:	inc    ecx
   14000ee44:	mov    DWORD PTR [rsp+0x34],ecx
   14000ee48:	mov    rcx,rax
   14000ee4b:	mov    rax,QWORD PTR [rsp+0x38]
   14000ee50:	mov    BYTE PTR [rcx+rax*1],bl
   14000ee53:	mov    rcx,rdi
   14000ee56:	call   0x14000def0
   14000ee5b:	jmp    0x14000edf7
   14000ee5d:	lea    rcx,[rsp+0x128]
   14000ee65:	mov    dl,0x65
   14000ee67:	call   QWORD PTR [rip+0x6363]        # 0x1400151d0
   14000ee6d:	movzx  eax,WORD PTR [rax]
   14000ee70:	cmp    WORD PTR [rdi+0x58],ax
   14000ee74:	je     0x14000ee93
   14000ee76:	lea    rcx,[rsp+0x128]
   14000ee7e:	mov    dl,0x45
   14000ee80:	call   QWORD PTR [rip+0x634a]        # 0x1400151d0
   14000ee86:	movzx  eax,WORD PTR [rax]
   14000ee89:	cmp    WORD PTR [rdi+0x58],ax
   14000ee8d:	jne    0x14000f022
   14000ee93:	mov    rax,QWORD PTR [rdi+0x30]
   14000ee97:	movzx  ecx,WORD PTR [rax]
   14000ee9a:	cmp    ecx,0x39
   14000ee9d:	ja     0x14000eea4
   14000ee9f:	cmp    ecx,0x30
   14000eea2:	jae    0x14000ef16
   14000eea4:	cmp    ecx,0x7f
   14000eea7:	jbe    0x14000eeb4
   14000eea9:	call   QWORD PTR [rip+0x6389]        # 0x140015238
   14000eeaf:	cmp    eax,0x3
   14000eeb2:	je     0x14000ef16
   14000eeb4:	lea    rcx,[rsp+0x128]
   14000eebc:	mov    dl,0x2b
   14000eebe:	call   QWORD PTR [rip+0x630c]        # 0x1400151d0
   14000eec4:	mov    rcx,QWORD PTR [rdi+0x30]
   14000eec8:	movzx  eax,WORD PTR [rax]
   14000eecb:	cmp    WORD PTR [rcx],ax
   14000eece:	je     0x14000eef0
   14000eed0:	lea    rcx,[rsp+0x128]
   14000eed8:	mov    dl,0x2d
   14000eeda:	call   QWORD PTR [rip+0x62f0]        # 0x1400151d0
   14000eee0:	mov    rcx,QWORD PTR [rdi+0x30]
   14000eee4:	movzx  eax,WORD PTR [rax]
   14000eee7:	cmp    WORD PTR [rcx],ax
   14000eeea:	jne    0x14000f022
   14000eef0:	movzx  ecx,WORD PTR [rcx+0x2]
   14000eef4:	cmp    ecx,0x39
   14000eef7:	ja     0x14000eefe
   14000eef9:	cmp    ecx,0x30
   14000eefc:	jae    0x14000ef16
   14000eefe:	cmp    ecx,0x7f
   14000ef01:	jbe    0x14000f022
   14000ef07:	call   QWORD PTR [rip+0x632b]        # 0x140015238
   14000ef0d:	cmp    eax,0x3
   14000ef10:	jne    0x14000f022
   14000ef16:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ef1a:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000ef1e:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000ef22:	jne    0x14000ef38
   14000ef24:	lea    r8d,[rcx+rcx*1]
   14000ef28:	mov    edx,ecx
   14000ef2a:	lea    rcx,[rsp+0x30]
   14000ef2f:	call   0x14000dd90
   14000ef34:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ef38:	movsxd rax,ecx
   14000ef3b:	inc    ecx
   14000ef3d:	mov    DWORD PTR [rsp+0x34],ecx
   14000ef41:	mov    rcx,rax
   14000ef44:	mov    rax,QWORD PTR [rsp+0x38]
   14000ef49:	mov    BYTE PTR [rcx+rax*1],bl
   14000ef4c:	mov    rcx,rdi
   14000ef4f:	call   0x14000def0
   14000ef54:	lea    rcx,[rsp+0x128]
   14000ef5c:	mov    dl,0x2b
   14000ef5e:	call   QWORD PTR [rip+0x626c]        # 0x1400151d0
   14000ef64:	movzx  eax,WORD PTR [rax]
   14000ef67:	cmp    WORD PTR [rdi+0x58],ax
   14000ef6b:	je     0x14000ef86
   14000ef6d:	lea    rcx,[rsp+0x128]
   14000ef75:	mov    dl,0x2d
   14000ef77:	call   QWORD PTR [rip+0x6253]        # 0x1400151d0
   14000ef7d:	movzx  eax,WORD PTR [rax]
   14000ef80:	cmp    WORD PTR [rdi+0x58],ax
   14000ef84:	jne    0x14000efc4
   14000ef86:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ef8a:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000ef8e:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000ef92:	jne    0x14000efa8
   14000ef94:	lea    r8d,[rcx+rcx*1]
   14000ef98:	mov    edx,ecx
   14000ef9a:	lea    rcx,[rsp+0x30]
   14000ef9f:	call   0x14000dd90
   14000efa4:	mov    ecx,DWORD PTR [rsp+0x34]
   14000efa8:	movsxd rax,ecx
   14000efab:	inc    ecx
   14000efad:	mov    DWORD PTR [rsp+0x34],ecx
   14000efb1:	mov    rcx,rax
   14000efb4:	mov    rax,QWORD PTR [rsp+0x38]
   14000efb9:	mov    BYTE PTR [rcx+rax*1],bl
   14000efbc:	mov    rcx,rdi
   14000efbf:	call   0x14000def0
   14000efc4:	movzx  ecx,WORD PTR [rdi+0x58]
   14000efc8:	cmp    ecx,0x39
   14000efcb:	ja     0x14000efd2
   14000efcd:	cmp    ecx,0x30
   14000efd0:	jae    0x14000efe2
   14000efd2:	cmp    ecx,0x7f
   14000efd5:	jbe    0x14000f022
   14000efd7:	call   QWORD PTR [rip+0x625b]        # 0x140015238
   14000efdd:	cmp    eax,0x3
   14000efe0:	jne    0x14000f022
   14000efe2:	mov    ecx,DWORD PTR [rsp+0x34]
   14000efe6:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000efea:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000efee:	jne    0x14000f004
   14000eff0:	lea    r8d,[rcx+rcx*1]
   14000eff4:	mov    edx,ecx
   14000eff6:	lea    rcx,[rsp+0x30]
   14000effb:	call   0x14000dd90
   14000f000:	mov    ecx,DWORD PTR [rsp+0x34]
   14000f004:	movsxd rax,ecx
   14000f007:	inc    ecx
   14000f009:	mov    DWORD PTR [rsp+0x34],ecx
   14000f00d:	mov    rcx,rax
   14000f010:	mov    rax,QWORD PTR [rsp+0x38]
   14000f015:	mov    BYTE PTR [rcx+rax*1],bl
   14000f018:	mov    rcx,rdi
   14000f01b:	call   0x14000def0
   14000f020:	jmp    0x14000efc4
   14000f022:	mov    ecx,DWORD PTR [rsp+0x34]
   14000f026:	cmp    ecx,0x1
   14000f029:	jne    0x14000f041
   14000f02b:	mov    rcx,QWORD PTR [rsp+0x38]
   14000f030:	lea    rax,[rsp+0x40]
   14000f035:	mov    QWORD PTR [rdi+0x68],r15
   14000f039:	cmp    rcx,rax
   14000f03c:	jmp    0x14000f111
   14000f041:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000f045:	jne    0x14000f05b
   14000f047:	lea    r8d,[rcx+rcx*1]
   14000f04b:	mov    edx,ecx
   14000f04d:	lea    rcx,[rsp+0x30]
   14000f052:	call   0x14000dd90
   14000f057:	mov    ecx,DWORD PTR [rsp+0x34]
   14000f05b:	movsxd rax,ecx
   14000f05e:	inc    ecx
   14000f060:	lea    r8,[rsp+0x120]
   14000f068:	mov    DWORD PTR [rsp+0x34],ecx
   14000f06c:	mov    rcx,rax
   14000f06f:	mov    rax,QWORD PTR [rsp+0x38]
   14000f074:	mov    BYTE PTR [rcx+rax*1],r15b
   14000f078:	mov    rbx,QWORD PTR [rsp+0x38]
   14000f07d:	lea    rdx,[rsp+0xb0]
   14000f085:	mov    rcx,rbx
   14000f088:	mov    QWORD PTR [rsp+0xb0],r15
   14000f090:	mov    BYTE PTR [rsp+0x120],r15b
   14000f098:	call   QWORD PTR [rip+0x61c2]        # 0x140015260
   14000f09e:	mov    eax,DWORD PTR [rsp+0x34]
   14000f0a2:	dec    eax
   14000f0a4:	movsxd rcx,eax
   14000f0a7:	mov    rax,QWORD PTR [rsp+0xb0]
   14000f0af:	movsd  QWORD PTR [rdi+0x68],xmm0
   14000f0b4:	sub    rax,rbx
   14000f0b7:	cmp    rax,rcx
   14000f0ba:	je     0x14000f104
   14000f0bc:	lea    r8,[rip+0x8365]        # 0x140017428
   14000f0c3:	lea    rdx,[rip+0x81ae]        # 0x140017278
   14000f0ca:	lea    rcx,[rsp+0x128]
   14000f0d2:	xor    r9d,r9d
   14000f0d5:	mov    DWORD PTR [rdi+0x5c],0x7
   14000f0dc:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000f0e4:	call   QWORD PTR [rip+0x60de]        # 0x1400151c8
   14000f0ea:	lea    rcx,[rdi+0x18]
   14000f0ee:	mov    rdx,rax
   14000f0f1:	call   QWORD PTR [rip+0x60c1]        # 0x1400151b8
   14000f0f7:	lea    rcx,[rsp+0x128]
   14000f0ff:	jmp    0x14000ea6b
   14000f104:	mov    rcx,QWORD PTR [rsp+0x38]
   14000f109:	lea    rax,[rsp+0x40]
   14000f10e:	cmp    rcx,rax
   14000f111:	je     0x14000f119
   14000f113:	call   QWORD PTR [rip+0x5fe7]        # 0x140015100
   14000f119:	mov    eax,0x2f
   14000f11e:	add    rsp,0xd0
   14000f125:	pop    r15
   14000f127:	pop    r13
   14000f129:	pop    r12
   14000f12b:	pop    rdi
   14000f12c:	pop    rsi
   14000f12d:	pop    rbp
   14000f12e:	pop    rbx
   14000f12f:	ret    
   14000f130:	rex push rbp
   14000f132:	sub    rsp,0x180
   14000f139:	mov    eax,DWORD PTR [rcx+0x78]
   14000f13c:	mov    rbp,rcx
   14000f13f:	cmp    eax,0xffffffff
   14000f142:	je     0x14000f154
   14000f144:	mov    DWORD PTR [rcx+0x78],0xffffffff
   14000f14b:	add    rsp,0x180
   14000f152:	pop    rbp
   14000f153:	ret    
   14000f154:	mov    QWORD PTR [rsp+0x160],r12
   14000f15c:	mov    QWORD PTR [rsp+0x158],r13
   14000f164:	mov    QWORD PTR [rsp+0x178],rbx
   14000f16c:	mov    QWORD PTR [rsp+0x170],rsi
   14000f174:	mov    BYTE PTR [rcx+0x8f],0x0
   14000f17b:	xor    r12d,r12d
   14000f17e:	mov    QWORD PTR [rsp+0x168],rdi
   14000f186:	lea    r13,[rip+0xffffffffffff0e73]        # 0x140000000
   14000f18d:	nop    DWORD PTR [rax]
   14000f190:	mov    rax,QWORD PTR [rbp+0x40]
   14000f194:	movzx  ecx,WORD PTR [rbp+0x58]
   14000f198:	mov    BYTE PTR [rbp+0x8c],r12b
   14000f19f:	mov    QWORD PTR [rbp+0x48],rax
   14000f1a3:	call   QWORD PTR [rip+0x60c7]        # 0x140015270
   14000f1a9:	test   al,al
   14000f1ab:	je     0x14000f20f
   14000f1ad:	nop    DWORD PTR [rax]
   14000f1b0:	mov    rcx,rbp
   14000f1b3:	call   0x14000db90
   14000f1b8:	test   eax,eax
   14000f1ba:	je     0x14000f1f9
   14000f1bc:	mov    ecx,eax
   14000f1be:	mov    rax,QWORD PTR [rbp+0x30]
   14000f1c2:	lea    rcx,[rax+rcx*2-0x2]
   14000f1c7:	mov    QWORD PTR [rbp+0x48],rcx
   14000f1cb:	cmp    BYTE PTR [rbp+0x8e],r12b
   14000f1d2:	jne    0x14000f3e9
   14000f1d8:	cmp    DWORD PTR [rbp+0x70],0x2
   14000f1dc:	mov    BYTE PTR [rbp+0x8f],0x1
   14000f1e3:	jne    0x14000f1f2
   14000f1e5:	mov    BYTE PTR [rbp+0x8d],0x1
   14000f1ec:	mov    DWORD PTR [rbp+0x70],r12d
   14000f1f0:	jmp    0x14000f1f9
   14000f1f2:	mov    BYTE PTR [rbp+0x8d],r12b
   14000f1f9:	mov    rcx,rbp
   14000f1fc:	call   0x14000def0
   14000f201:	movzx  ecx,WORD PTR [rbp+0x58]
   14000f205:	call   QWORD PTR [rip+0x6065]        # 0x140015270
   14000f20b:	test   al,al
   14000f20d:	jne    0x14000f1b0
   14000f20f:	mov    rcx,QWORD PTR [rbp+0x30]
   14000f213:	lea    rax,[rcx-0x2]
   14000f217:	mov    QWORD PTR [rbp+0x50],rax
   14000f21b:	mov    eax,DWORD PTR [rbp+0x60]
   14000f21e:	mov    DWORD PTR [rbp+0x88],eax
   14000f224:	cmp    rcx,QWORD PTR [rbp+0x38]
   14000f228:	ja     0x140010657
   14000f22e:	movzx  ebx,WORD PTR [rbp+0x58]
   14000f232:	mov    rcx,rbp
   14000f235:	call   0x14000def0
   14000f23a:	lea    r11d,[rbx-0x21]
   14000f23e:	cmp    r11d,0x5d
   14000f242:	ja     0x14001031d
   14000f248:	movsxd rax,r11d
   14000f24b:	movzx  eax,BYTE PTR [r13+rax*1+0x106f8]
   14000f254:	mov    ecx,DWORD PTR [r13+rax*4+0x1068c]
   14000f25c:	add    rcx,r13
   14000f25f:	jmp    rcx
   14000f261:	lea    rcx,[rsp+0xa2]
   14000f269:	mov    dl,0x2a
   14000f26b:	call   QWORD PTR [rip+0x5f5f]        # 0x1400151d0
   14000f271:	movzx  eax,WORD PTR [rax]
   14000f274:	cmp    WORD PTR [rbp+0x58],ax
   14000f278:	jne    0x14000f34c
   14000f27e:	mov    rcx,rbp
   14000f281:	call   0x14000def0
   14000f286:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f290:	mov    rax,QWORD PTR [rbp+0x38]
   14000f294:	cmp    QWORD PTR [rbp+0x30],rax
   14000f298:	ja     0x14000f408
   14000f29e:	lea    rcx,[rsp+0xc0]
   14000f2a6:	mov    dl,0x2a
   14000f2a8:	call   QWORD PTR [rip+0x5f22]        # 0x1400151d0
   14000f2ae:	movzx  eax,WORD PTR [rax]
   14000f2b1:	cmp    WORD PTR [rbp+0x58],ax
   14000f2b5:	jne    0x14000f33f
   14000f2bb:	mov    rcx,rbp
   14000f2be:	call   0x14000def0
   14000f2c3:	lea    rcx,[rsp+0xaa]
   14000f2cb:	mov    dl,0x2f
   14000f2cd:	call   QWORD PTR [rip+0x5efd]        # 0x1400151d0
   14000f2d3:	movzx  eax,WORD PTR [rax]
   14000f2d6:	cmp    WORD PTR [rbp+0x58],ax
   14000f2da:	jne    0x14000f290
   14000f2dc:	mov    rcx,rbp
   14000f2df:	call   0x14000def0
   14000f2e4:	cmp    QWORD PTR [rbp+0x0],r12
   14000f2e8:	je     0x14000f190
   14000f2ee:	mov    rdi,QWORD PTR [rbp+0x50]
   14000f2f2:	mov    esi,DWORD PTR [rbp+0x88]
   14000f2f8:	mov    rbx,QWORD PTR [rbp+0x50]
   14000f2fc:	sub    rdi,QWORD PTR [rbp+0x48]
   14000f300:	lea    rcx,[rbp+0x8]
   14000f304:	sar    rdi,1
   14000f307:	call   QWORD PTR [rip+0x5e83]        # 0x140015190
   14000f30d:	mov    r8,QWORD PTR [rbp+0x30]
   14000f311:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f315:	sub    r8,rbx
   14000f318:	mov    rdx,rbx
   14000f31b:	sub    rdx,rax
   14000f31e:	sar    r8,1
   14000f321:	lea    eax,[rdi+0x3]
   14000f324:	sar    rdx,1
   14000f327:	add    r8d,0xfffffffb
   14000f32b:	mov    r9d,esi
   14000f32e:	add    edx,0x2
   14000f331:	mov    DWORD PTR [rsp+0x20],eax
   14000f335:	call   0x14000c770
   14000f33a:	jmp    0x14000f190
   14000f33f:	mov    rcx,rbp
   14000f342:	call   0x14000def0
   14000f347:	jmp    0x14000f290
   14000f34c:	lea    rcx,[rsp+0x76]
   14000f351:	mov    dl,0x2f
   14000f353:	call   QWORD PTR [rip+0x5e77]        # 0x1400151d0
   14000f359:	movzx  eax,WORD PTR [rax]
   14000f35c:	cmp    WORD PTR [rbp+0x58],ax
   14000f360:	jne    0x14000f408
   14000f366:	mov    rax,QWORD PTR [rbp+0x38]
   14000f36a:	cmp    QWORD PTR [rbp+0x30],rax
   14000f36e:	ja     0x14000f38e
   14000f370:	mov    rcx,rbp
   14000f373:	call   0x14000db60
   14000f378:	test   al,al
   14000f37a:	jne    0x14000f38e
   14000f37c:	mov    rcx,rbp
   14000f37f:	call   0x14000def0
   14000f384:	mov    r11,QWORD PTR [rbp+0x38]
   14000f388:	cmp    QWORD PTR [rbp+0x30],r11
   14000f38c:	jbe    0x14000f370
   14000f38e:	cmp    QWORD PTR [rbp+0x0],r12
   14000f392:	je     0x14000f190
   14000f398:	mov    rdi,QWORD PTR [rbp+0x50]
   14000f39c:	mov    esi,DWORD PTR [rbp+0x88]
   14000f3a2:	mov    rbx,QWORD PTR [rbp+0x50]
   14000f3a6:	sub    rdi,QWORD PTR [rbp+0x48]
   14000f3aa:	lea    rcx,[rbp+0x8]
   14000f3ae:	sar    rdi,1
   14000f3b1:	call   QWORD PTR [rip+0x5dd9]        # 0x140015190
   14000f3b7:	mov    r8,QWORD PTR [rbp+0x30]
   14000f3bb:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f3bf:	sub    r8,rbx
   14000f3c2:	mov    rdx,rbx
   14000f3c5:	sub    rdx,rax
   14000f3c8:	sar    r8,1
   14000f3cb:	lea    eax,[rdi+0x3]
   14000f3ce:	sar    rdx,1
   14000f3d1:	add    r8d,0xfffffffd
   14000f3d5:	mov    r9d,esi
   14000f3d8:	add    edx,0x2
   14000f3db:	mov    DWORD PTR [rsp+0x20],eax
   14000f3df:	call   0x14000c770
   14000f3e4:	jmp    0x14000f190
   14000f3e9:	mov    eax,DWORD PTR [rbp+0x60]
   14000f3ec:	mov    DWORD PTR [rbp+0x88],eax
   14000f3f2:	mov    rax,QWORD PTR [rbp+0x30]
   14000f3f6:	sub    rax,0x2
   14000f3fa:	mov    QWORD PTR [rbp+0x50],rax
   14000f3fe:	mov    eax,0x3d
   14000f403:	jmp    0x140010659
   14000f408:	lea    rcx,[rsp+0xc2]
   14000f410:	mov    dl,0x3d
   14000f412:	call   QWORD PTR [rip+0x5db8]        # 0x1400151d0
   14000f418:	movzx  eax,WORD PTR [rax]
   14000f41b:	cmp    WORD PTR [rbp+0x58],ax
   14000f41f:	jne    0x14000f433
   14000f421:	mov    rcx,rbp
   14000f424:	call   0x14000def0
   14000f429:	mov    eax,0xd
   14000f42e:	jmp    0x140010659
   14000f433:	mov    eax,0xc
   14000f438:	jmp    0x140010659
   14000f43d:	mov    eax,0x48
   14000f442:	jmp    0x140010659
   14000f447:	mov    eax,0x37
   14000f44c:	jmp    0x140010659
   14000f451:	lea    rcx,[rsp+0x7a]
   14000f456:	mov    dl,0x7c
   14000f458:	call   QWORD PTR [rip+0x5d72]        # 0x1400151d0
   14000f45e:	movzx  eax,WORD PTR [rax]
   14000f461:	cmp    WORD PTR [rbp+0x58],ax
   14000f465:	jne    0x14000f479
   14000f467:	mov    rcx,rbp
   14000f46a:	call   0x14000def0
   14000f46f:	mov    eax,0x32
   14000f474:	jmp    0x140010659
   14000f479:	lea    rcx,[rsp+0xc6]
   14000f481:	mov    dl,0x3d
   14000f483:	call   QWORD PTR [rip+0x5d47]        # 0x1400151d0
   14000f489:	movzx  eax,WORD PTR [rax]
   14000f48c:	cmp    WORD PTR [rbp+0x58],ax
   14000f490:	jne    0x14000f4a4
   14000f492:	mov    rcx,rbp
   14000f495:	call   0x14000def0
   14000f49a:	mov    eax,0x31
   14000f49f:	jmp    0x140010659
   14000f4a4:	mov    eax,0x30
   14000f4a9:	jmp    0x140010659
   14000f4ae:	mov    eax,0x21
   14000f4b3:	jmp    0x140010659
   14000f4b8:	lea    rcx,[rsp+0x7e]
   14000f4bd:	mov    dl,0x3d
   14000f4bf:	call   QWORD PTR [rip+0x5d0b]        # 0x1400151d0
   14000f4c5:	movzx  eax,WORD PTR [rax]
   14000f4c8:	cmp    WORD PTR [rbp+0x58],ax
   14000f4cc:	jne    0x14000f4e0
   14000f4ce:	mov    rcx,rbp
   14000f4d1:	call   0x14000def0
   14000f4d6:	mov    eax,0x50
   14000f4db:	jmp    0x140010659
   14000f4e0:	mov    eax,0x4f
   14000f4e5:	jmp    0x140010659
   14000f4ea:	mov    eax,0x38
   14000f4ef:	jmp    0x140010659
   14000f4f4:	mov    eax,0x22
   14000f4f9:	jmp    0x140010659
   14000f4fe:	mov    eax,0x36
   14000f503:	jmp    0x140010659
   14000f508:	lea    rcx,[rsp+0xb0]
   14000f510:	mov    dl,0x3e
   14000f512:	call   QWORD PTR [rip+0x5cb8]        # 0x1400151d0
   14000f518:	movzx  eax,WORD PTR [rax]
   14000f51b:	cmp    WORD PTR [rbp+0x58],ax
   14000f51f:	jne    0x14000f5b8
   14000f525:	mov    rcx,rbp
   14000f528:	call   0x14000def0
   14000f52d:	lea    rcx,[rsp+0x82]
   14000f535:	mov    dl,0x3e
   14000f537:	call   QWORD PTR [rip+0x5c93]        # 0x1400151d0
   14000f53d:	movzx  eax,WORD PTR [rax]
   14000f540:	cmp    WORD PTR [rbp+0x58],ax
   14000f544:	jne    0x14000f583
   14000f546:	mov    rcx,rbp
   14000f549:	call   0x14000def0
   14000f54e:	lea    rcx,[rsp+0xbc]
   14000f556:	mov    dl,0x3d
   14000f558:	call   QWORD PTR [rip+0x5c72]        # 0x1400151d0
   14000f55e:	movzx  eax,WORD PTR [rax]
   14000f561:	cmp    WORD PTR [rbp+0x58],ax
   14000f565:	jne    0x14000f579
   14000f567:	mov    rcx,rbp
   14000f56a:	call   0x14000def0
   14000f56f:	mov    eax,0x1c
   14000f574:	jmp    0x140010659
   14000f579:	mov    eax,0x1b
   14000f57e:	jmp    0x140010659
   14000f583:	lea    rcx,[rsp+0x86]
   14000f58b:	mov    dl,0x3d
   14000f58d:	call   QWORD PTR [rip+0x5c3d]        # 0x1400151d0
   14000f593:	movzx  eax,WORD PTR [rax]
   14000f596:	cmp    WORD PTR [rbp+0x58],ax
   14000f59a:	jne    0x14000f5ae
   14000f59c:	mov    rcx,rbp
   14000f59f:	call   0x14000def0
   14000f5a4:	mov    eax,0x1a
   14000f5a9:	jmp    0x140010659
   14000f5ae:	mov    eax,0x19
   14000f5b3:	jmp    0x140010659
   14000f5b8:	lea    rcx,[rsp+0xb4]
   14000f5c0:	mov    dl,0x3d
   14000f5c2:	call   QWORD PTR [rip+0x5c08]        # 0x1400151d0
   14000f5c8:	movzx  eax,WORD PTR [rax]
   14000f5cb:	cmp    WORD PTR [rbp+0x58],ax
   14000f5cf:	jne    0x14000f5e3
   14000f5d1:	mov    rcx,rbp
   14000f5d4:	call   0x14000def0
   14000f5d9:	mov    eax,0x17
   14000f5de:	jmp    0x140010659
   14000f5e3:	mov    eax,0x18
   14000f5e8:	jmp    0x140010659
   14000f5ed:	lea    rcx,[rsp+0x8a]
   14000f5f5:	mov    dl,0x3d
   14000f5f7:	call   QWORD PTR [rip+0x5bd3]        # 0x1400151d0
   14000f5fd:	movzx  eax,WORD PTR [rax]
   14000f600:	cmp    WORD PTR [rbp+0x58],ax
   14000f604:	jne    0x14000f643
   14000f606:	mov    rcx,rbp
   14000f609:	call   0x14000def0
   14000f60e:	lea    rcx,[rsp+0xc4]
   14000f616:	mov    dl,0x3d
   14000f618:	call   QWORD PTR [rip+0x5bb2]        # 0x1400151d0
   14000f61e:	movzx  eax,WORD PTR [rax]
   14000f621:	cmp    WORD PTR [rbp+0x58],ax
   14000f625:	jne    0x14000f639
   14000f627:	mov    rcx,rbp
   14000f62a:	call   0x14000def0
   14000f62f:	mov    eax,0x13
   14000f634:	jmp    0x140010659
   14000f639:	mov    eax,0x12
   14000f63e:	jmp    0x140010659
   14000f643:	mov    eax,0x11
   14000f648:	jmp    0x140010659
   14000f64d:	lea    rcx,[rsp+0x8e]
   14000f655:	mov    dl,0x3d
   14000f657:	call   QWORD PTR [rip+0x5b73]        # 0x1400151d0
   14000f65d:	movzx  eax,WORD PTR [rax]
   14000f660:	cmp    WORD PTR [rbp+0x58],ax
   14000f664:	jne    0x14000f678
   14000f666:	mov    rcx,rbp
   14000f669:	call   0x14000def0
   14000f66e:	mov    eax,0x23
   14000f673:	jmp    0x140010659
   14000f678:	lea    rcx,[rsp+0xb8]
   14000f680:	mov    dl,0x3c
   14000f682:	call   QWORD PTR [rip+0x5b48]        # 0x1400151d0
   14000f688:	movzx  eax,WORD PTR [rax]
   14000f68b:	cmp    WORD PTR [rbp+0x58],ax
   14000f68f:	jne    0x14000f6ce
   14000f691:	mov    rcx,rbp
   14000f694:	call   0x14000def0
   14000f699:	lea    rcx,[rsp+0x92]
   14000f6a1:	mov    dl,0x3d
   14000f6a3:	call   QWORD PTR [rip+0x5b27]        # 0x1400151d0
   14000f6a9:	movzx  eax,WORD PTR [rax]
   14000f6ac:	cmp    WORD PTR [rbp+0x58],ax
   14000f6b0:	jne    0x14000f6c4
   14000f6b2:	mov    rcx,rbp
   14000f6b5:	call   0x14000def0
   14000f6ba:	mov    eax,0x27
   14000f6bf:	jmp    0x140010659
   14000f6c4:	mov    eax,0x26
   14000f6c9:	jmp    0x140010659
   14000f6ce:	mov    eax,0x25
   14000f6d3:	jmp    0x140010659
   14000f6d8:	mov    eax,0x7
   14000f6dd:	jmp    0x140010659
   14000f6e2:	movzx  ecx,WORD PTR [rbp+0x58]
   14000f6e6:	cmp    ecx,0x39
   14000f6e9:	ja     0x14000f6f0
   14000f6eb:	cmp    ecx,0x30
   14000f6ee:	jae    0x14000f708
   14000f6f0:	cmp    ecx,0x7f
   14000f6f3:	jbe    0x14000fa54
   14000f6f9:	call   QWORD PTR [rip+0x5b39]        # 0x140015238
   14000f6ff:	cmp    eax,0x3
   14000f702:	jne    0x14000fa54
   14000f708:	lea    rax,[rsp+0x50]
   14000f70d:	mov    edx,0x1
   14000f712:	mov    DWORD PTR [rsp+0x40],0x20
   14000f71a:	mov    QWORD PTR [rsp+0x48],rax
   14000f71f:	mov    DWORD PTR [rsp+0x44],edx
   14000f723:	mov    BYTE PTR [rsp+0x50],bl
   14000f727:	movzx  ecx,WORD PTR [rbp+0x58]
   14000f72b:	cmp    ecx,0x39
   14000f72e:	ja     0x14000f735
   14000f730:	cmp    ecx,0x30
   14000f733:	jae    0x14000f749
   14000f735:	cmp    ecx,0x7f
   14000f738:	jbe    0x14000f784
   14000f73a:	call   QWORD PTR [rip+0x5af8]        # 0x140015238
   14000f740:	cmp    eax,0x3
   14000f743:	jne    0x14000f784
   14000f745:	mov    edx,DWORD PTR [rsp+0x44]
   14000f749:	movzx  ebx,BYTE PTR [rbp+0x58]
   14000f74d:	cmp    edx,DWORD PTR [rsp+0x40]
   14000f751:	jne    0x14000f765
   14000f753:	lea    r8d,[rdx+rdx*1]
   14000f757:	lea    rcx,[rsp+0x40]
   14000f75c:	call   0x14000dd90
   14000f761:	mov    edx,DWORD PTR [rsp+0x44]
   14000f765:	mov    rax,QWORD PTR [rsp+0x48]
   14000f76a:	movsxd rcx,edx
   14000f76d:	inc    edx
   14000f76f:	mov    DWORD PTR [rsp+0x44],edx
   14000f773:	mov    BYTE PTR [rcx+rax*1],bl
   14000f776:	mov    rcx,rbp
   14000f779:	call   0x14000def0
   14000f77e:	mov    edx,DWORD PTR [rsp+0x44]
   14000f782:	jmp    0x14000f727
   14000f784:	lea    rcx,[rsp+0xac]
   14000f78c:	mov    dl,0x65
   14000f78e:	call   QWORD PTR [rip+0x5a3c]        # 0x1400151d0
   14000f794:	movzx  eax,WORD PTR [rax]
   14000f797:	cmp    WORD PTR [rbp+0x58],ax
   14000f79b:	je     0x14000f7ba
   14000f79d:	lea    rcx,[rsp+0x96]
   14000f7a5:	mov    dl,0x45
   14000f7a7:	call   QWORD PTR [rip+0x5a23]        # 0x1400151d0
   14000f7ad:	movzx  eax,WORD PTR [rax]
   14000f7b0:	cmp    WORD PTR [rbp+0x58],ax
   14000f7b4:	jne    0x14000f94e
   14000f7ba:	mov    rax,QWORD PTR [rbp+0x30]
   14000f7be:	movzx  ecx,WORD PTR [rax]
   14000f7c1:	cmp    ecx,0x39
   14000f7c4:	ja     0x14000f7cb
   14000f7c6:	cmp    ecx,0x30
   14000f7c9:	jae    0x14000f83d
   14000f7cb:	cmp    ecx,0x7f
   14000f7ce:	jbe    0x14000f7db
   14000f7d0:	call   QWORD PTR [rip+0x5a62]        # 0x140015238
   14000f7d6:	cmp    eax,0x3
   14000f7d9:	je     0x14000f83d
   14000f7db:	lea    rcx,[rsp+0xae]
   14000f7e3:	mov    dl,0x2b
   14000f7e5:	call   QWORD PTR [rip+0x59e5]        # 0x1400151d0
   14000f7eb:	mov    rcx,QWORD PTR [rbp+0x30]
   14000f7ef:	movzx  eax,WORD PTR [rax]
   14000f7f2:	cmp    WORD PTR [rcx],ax
   14000f7f5:	je     0x14000f817
   14000f7f7:	lea    rcx,[rsp+0x9a]
   14000f7ff:	mov    dl,0x2d
   14000f801:	call   QWORD PTR [rip+0x59c9]        # 0x1400151d0
   14000f807:	mov    rcx,QWORD PTR [rbp+0x30]
   14000f80b:	movzx  eax,WORD PTR [rax]
   14000f80e:	cmp    WORD PTR [rcx],ax
   14000f811:	jne    0x14000f94e
   14000f817:	movzx  ecx,WORD PTR [rcx+0x2]
   14000f81b:	cmp    ecx,0x39
   14000f81e:	ja     0x14000f825
   14000f820:	cmp    ecx,0x30
   14000f823:	jae    0x14000f83d
   14000f825:	cmp    ecx,0x7f
   14000f828:	jbe    0x14000f94e
   14000f82e:	call   QWORD PTR [rip+0x5a04]        # 0x140015238
   14000f834:	cmp    eax,0x3
   14000f837:	jne    0x14000f94e
   14000f83d:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f841:	movzx  ebx,BYTE PTR [rbp+0x58]
   14000f845:	cmp    ecx,DWORD PTR [rsp+0x40]
   14000f849:	jne    0x14000f85f
   14000f84b:	lea    r8d,[rcx+rcx*1]
   14000f84f:	mov    edx,ecx
   14000f851:	lea    rcx,[rsp+0x40]
   14000f856:	call   0x14000dd90
   14000f85b:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f85f:	movsxd rax,ecx
   14000f862:	inc    ecx
   14000f864:	mov    DWORD PTR [rsp+0x44],ecx
   14000f868:	mov    rcx,rax
   14000f86b:	mov    rax,QWORD PTR [rsp+0x48]
   14000f870:	mov    BYTE PTR [rcx+rax*1],bl
   14000f873:	mov    rcx,rbp
   14000f876:	call   0x14000def0
   14000f87b:	lea    rcx,[rsp+0xb2]
   14000f883:	mov    dl,0x2b
   14000f885:	call   QWORD PTR [rip+0x5945]        # 0x1400151d0
   14000f88b:	movzx  eax,WORD PTR [rax]
   14000f88e:	cmp    WORD PTR [rbp+0x58],ax
   14000f892:	je     0x14000f8ad
   14000f894:	lea    rcx,[rsp+0x9e]
   14000f89c:	mov    dl,0x2d
   14000f89e:	call   QWORD PTR [rip+0x592c]        # 0x1400151d0
   14000f8a4:	movzx  eax,WORD PTR [rax]
   14000f8a7:	cmp    WORD PTR [rbp+0x58],ax
   14000f8ab:	jne    0x14000f8f0
   14000f8ad:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f8b1:	movzx  ebx,BYTE PTR [rbp+0x58]
   14000f8b5:	cmp    ecx,DWORD PTR [rsp+0x40]
   14000f8b9:	jne    0x14000f8cf
   14000f8bb:	lea    r8d,[rcx+rcx*1]
   14000f8bf:	mov    edx,ecx
   14000f8c1:	lea    rcx,[rsp+0x40]
   14000f8c6:	call   0x14000dd90
   14000f8cb:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f8cf:	movsxd rax,ecx
   14000f8d2:	inc    ecx
   14000f8d4:	mov    DWORD PTR [rsp+0x44],ecx
   14000f8d8:	mov    rcx,rax
   14000f8db:	mov    rax,QWORD PTR [rsp+0x48]
   14000f8e0:	mov    BYTE PTR [rcx+rax*1],bl
   14000f8e3:	mov    rcx,rbp
   14000f8e6:	call   0x14000def0
   14000f8eb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f8f0:	movzx  ecx,WORD PTR [rbp+0x58]
   14000f8f4:	cmp    ecx,0x39
   14000f8f7:	ja     0x14000f8fe
   14000f8f9:	cmp    ecx,0x30
   14000f8fc:	jae    0x14000f90e
   14000f8fe:	cmp    ecx,0x7f
   14000f901:	jbe    0x14000f94e
   14000f903:	call   QWORD PTR [rip+0x592f]        # 0x140015238
   14000f909:	cmp    eax,0x3
   14000f90c:	jne    0x14000f94e
   14000f90e:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f912:	movzx  ebx,BYTE PTR [rbp+0x58]
   14000f916:	cmp    ecx,DWORD PTR [rsp+0x40]
   14000f91a:	jne    0x14000f930
   14000f91c:	lea    r8d,[rcx+rcx*1]
   14000f920:	mov    edx,ecx
   14000f922:	lea    rcx,[rsp+0x40]
   14000f927:	call   0x14000dd90
   14000f92c:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f930:	movsxd rax,ecx
   14000f933:	inc    ecx
   14000f935:	mov    DWORD PTR [rsp+0x44],ecx
   14000f939:	mov    rcx,rax
   14000f93c:	mov    rax,QWORD PTR [rsp+0x48]
   14000f941:	mov    BYTE PTR [rcx+rax*1],bl
   14000f944:	mov    rcx,rbp
   14000f947:	call   0x14000def0
   14000f94c:	jmp    0x14000f8f0
   14000f94e:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f952:	cmp    ecx,DWORD PTR [rsp+0x40]
   14000f956:	jne    0x14000f96c
   14000f958:	lea    r8d,[rcx+rcx*1]
   14000f95c:	mov    edx,ecx
   14000f95e:	lea    rcx,[rsp+0x40]
   14000f963:	call   0x14000dd90
   14000f968:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f96c:	movsxd rax,ecx
   14000f96f:	inc    ecx
   14000f971:	lea    r8,[rsp+0x190]
   14000f979:	mov    DWORD PTR [rsp+0x44],ecx
   14000f97d:	mov    rcx,rax
   14000f980:	mov    rax,QWORD PTR [rsp+0x48]
   14000f985:	mov    BYTE PTR [rcx+rax*1],r12b
   14000f989:	mov    rbx,QWORD PTR [rsp+0x48]
   14000f98e:	lea    rdx,[rsp+0xc8]
   14000f996:	mov    rcx,rbx
   14000f999:	mov    QWORD PTR [rsp+0xc8],r12
   14000f9a1:	mov    BYTE PTR [rsp+0x190],r12b
   14000f9a9:	call   QWORD PTR [rip+0x58b1]        # 0x140015260
   14000f9af:	mov    eax,DWORD PTR [rsp+0x44]
   14000f9b3:	dec    eax
   14000f9b5:	movsxd rcx,eax
   14000f9b8:	mov    rax,QWORD PTR [rsp+0xc8]
   14000f9c0:	movsd  QWORD PTR [rbp+0x68],xmm0
   14000f9c5:	sub    rax,rbx
   14000f9c8:	cmp    rax,rcx
   14000f9cb:	je     0x14000fa35
   14000f9cd:	lea    r8,[rip+0x7a54]        # 0x140017428
   14000f9d4:	lea    rdx,[rip+0x789d]        # 0x140017278
   14000f9db:	lea    rcx,[rsp+0x120]
   14000f9e3:	xor    r9d,r9d
   14000f9e6:	mov    DWORD PTR [rbp+0x5c],0x7
   14000f9ed:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000f9f5:	call   QWORD PTR [rip+0x57cd]        # 0x1400151c8
   14000f9fb:	lea    rcx,[rbp+0x18]
   14000f9ff:	mov    rdx,rax
   14000fa02:	call   QWORD PTR [rip+0x57b0]        # 0x1400151b8
   14000fa08:	lea    rcx,[rsp+0x120]
   14000fa10:	call   QWORD PTR [rip+0x59a2]        # 0x1400153b8
   14000fa16:	mov    rcx,QWORD PTR [rsp+0x48]
   14000fa1b:	lea    r11,[rsp+0x50]
   14000fa20:	cmp    rcx,r11
   14000fa23:	je     0x14000fa2b
   14000fa25:	call   QWORD PTR [rip+0x56d5]        # 0x140015100
   14000fa2b:	mov    eax,0x61
   14000fa30:	jmp    0x140010659
   14000fa35:	mov    rcx,QWORD PTR [rsp+0x48]
   14000fa3a:	lea    rax,[rsp+0x50]
   14000fa3f:	cmp    rcx,rax
   14000fa42:	je     0x14000fa4a
   14000fa44:	call   QWORD PTR [rip+0x56b6]        # 0x140015100
   14000fa4a:	mov    eax,0x2f
   14000fa4f:	jmp    0x140010659
   14000fa54:	mov    eax,0xf
   14000fa59:	jmp    0x140010659
   14000fa5e:	lea    rcx,[rsp+0xb6]
   14000fa66:	mov    dl,0x3d
   14000fa68:	call   QWORD PTR [rip+0x5762]        # 0x1400151d0
   14000fa6e:	movzx  eax,WORD PTR [rax]
   14000fa71:	cmp    WORD PTR [rbp+0x58],ax
   14000fa75:	jne    0x14000fa89
   14000fa77:	mov    rcx,rbp
   14000fa7a:	call   0x14000def0
   14000fa7f:	mov    eax,0x29
   14000fa84:	jmp    0x140010659
   14000fa89:	lea    rcx,[rsp+0x70]
   14000fa8e:	mov    dl,0x2d
   14000fa90:	call   QWORD PTR [rip+0x573a]        # 0x1400151d0
   14000fa96:	movzx  eax,WORD PTR [rax]
   14000fa99:	cmp    WORD PTR [rbp+0x58],ax
   14000fa9d:	jne    0x14000fadd
   14000fa9f:	mov    rcx,rbp
   14000faa2:	call   0x14000def0
   14000faa7:	cmp    BYTE PTR [rbp+0x8f],r12b
   14000faae:	je     0x14000fad3
   14000fab0:	cmp    BYTE PTR [rbp+0x91],r12b
   14000fab7:	jne    0x14000fad3
   14000fab9:	cmp    BYTE PTR [rbp+0x8d],r12b
   14000fac0:	jne    0x14000fad3
   14000fac2:	mov    DWORD PTR [rbp+0x78],0x2a
   14000fac9:	mov    eax,0x3d
   14000face:	jmp    0x140010659
   14000fad3:	mov    eax,0x2a
   14000fad8:	jmp    0x140010659
   14000fadd:	mov    eax,0x28
   14000fae2:	jmp    0x140010659
   14000fae7:	mov    eax,0x8
   14000faec:	jmp    0x140010659
   14000faf1:	lea    rcx,[rsp+0xba]
   14000faf9:	mov    dl,0x3d
   14000fafb:	call   QWORD PTR [rip+0x56cf]        # 0x1400151d0
   14000fb01:	movzx  eax,WORD PTR [rax]
   14000fb04:	cmp    WORD PTR [rbp+0x58],ax
   14000fb08:	jne    0x14000fb1c
   14000fb0a:	mov    rcx,rbp
   14000fb0d:	call   0x14000def0
   14000fb12:	mov    eax,0x34
   14000fb17:	jmp    0x140010659
   14000fb1c:	lea    rcx,[rsp+0xa6]
   14000fb24:	mov    dl,0x2b
   14000fb26:	call   QWORD PTR [rip+0x56a4]        # 0x1400151d0
   14000fb2c:	movzx  eax,WORD PTR [rax]
   14000fb2f:	cmp    WORD PTR [rbp+0x58],ax
   14000fb33:	jne    0x14000fb73
   14000fb35:	mov    rcx,rbp
   14000fb38:	call   0x14000def0
   14000fb3d:	cmp    BYTE PTR [rbp+0x8f],r12b
   14000fb44:	je     0x14000fb69
   14000fb46:	cmp    BYTE PTR [rbp+0x91],r12b
   14000fb4d:	jne    0x14000fb69
   14000fb4f:	cmp    BYTE PTR [rbp+0x8d],r12b
   14000fb56:	jne    0x14000fb69
   14000fb58:	mov    DWORD PTR [rbp+0x78],0x35
   14000fb5f:	mov    eax,0x3d
   14000fb64:	jmp    0x140010659
   14000fb69:	mov    eax,0x35
   14000fb6e:	jmp    0x140010659
   14000fb73:	mov    eax,0x33
   14000fb78:	jmp    0x140010659
   14000fb7d:	lea    rcx,[rsp+0xbe]
   14000fb85:	mov    dl,0x3d
   14000fb87:	call   QWORD PTR [rip+0x5643]        # 0x1400151d0
   14000fb8d:	movzx  eax,WORD PTR [rax]
   14000fb90:	cmp    WORD PTR [rbp+0x58],ax
   14000fb94:	jne    0x14000fba8
   14000fb96:	mov    rcx,rbp
   14000fb99:	call   0x14000def0
   14000fb9e:	mov    eax,0x40
   14000fba3:	jmp    0x140010659
   14000fba8:	mov    eax,0x3f
   14000fbad:	jmp    0x140010659
   14000fbb2:	mov    eax,0x3c
   14000fbb7:	jmp    0x140010659
   14000fbbc:	mov    eax,0x24
   14000fbc1:	jmp    0x140010659
   14000fbc6:	lea    rcx,[rsp+0x72]
   14000fbcb:	mov    dl,0x3d
   14000fbcd:	call   QWORD PTR [rip+0x55fd]        # 0x1400151d0
   14000fbd3:	movzx  eax,WORD PTR [rax]
   14000fbd6:	cmp    WORD PTR [rbp+0x58],ax
   14000fbda:	jne    0x14000fbee
   14000fbdc:	mov    rcx,rbp
   14000fbdf:	call   0x14000def0
   14000fbe4:	mov    eax,0x3
   14000fbe9:	jmp    0x140010659
   14000fbee:	lea    rcx,[rsp+0x74]
   14000fbf3:	mov    dl,0x26
   14000fbf5:	call   QWORD PTR [rip+0x55d5]        # 0x1400151d0
   14000fbfb:	movzx  eax,WORD PTR [rax]
   14000fbfe:	cmp    WORD PTR [rbp+0x58],ax
   14000fc02:	jne    0x14000fc16
   14000fc04:	mov    rcx,rbp
   14000fc07:	call   0x14000def0
   14000fc0c:	mov    eax,0x2
   14000fc11:	jmp    0x140010659
   14000fc16:	mov    eax,0x1
   14000fc1b:	jmp    0x140010659
   14000fc20:	lea    rcx,[rsp+0x78]
   14000fc25:	mov    dl,0x3d
   14000fc27:	call   QWORD PTR [rip+0x55a3]        # 0x1400151d0
   14000fc2d:	movzx  eax,WORD PTR [rax]
   14000fc30:	cmp    WORD PTR [rbp+0x58],ax
   14000fc34:	jne    0x14000fc48
   14000fc36:	mov    rcx,rbp
   14000fc39:	call   0x14000def0
   14000fc3e:	mov    eax,0x3a
   14000fc43:	jmp    0x140010659
   14000fc48:	mov    eax,0x39
   14000fc4d:	jmp    0x140010659
   14000fc52:	lea    rcx,[rsp+0x7c]
   14000fc57:	mov    dl,0x3d
   14000fc59:	call   QWORD PTR [rip+0x5571]        # 0x1400151d0
   14000fc5f:	movzx  eax,WORD PTR [rax]
   14000fc62:	cmp    WORD PTR [rbp+0x58],ax
   14000fc66:	jne    0x14000fca5
   14000fc68:	mov    rcx,rbp
   14000fc6b:	call   0x14000def0
   14000fc70:	lea    rcx,[rsp+0x80]
   14000fc78:	mov    dl,0x3d
   14000fc7a:	call   QWORD PTR [rip+0x5550]        # 0x1400151d0
   14000fc80:	movzx  eax,WORD PTR [rax]
   14000fc83:	cmp    WORD PTR [rbp+0x58],ax
   14000fc87:	jne    0x14000fc9b
   14000fc89:	mov    rcx,rbp
   14000fc8c:	call   0x14000def0
   14000fc91:	mov    eax,0x2e
   14000fc96:	jmp    0x140010659
   14000fc9b:	mov    eax,0x2d
   14000fca0:	jmp    0x140010659
   14000fca5:	mov    eax,0x2c
   14000fcaa:	jmp    0x140010659
   14000fcaf:	cmp    QWORD PTR [rbp+0x0],0x0
   14000fcb4:	mov    rdi,QWORD PTR [rbp+0x30]
   14000fcb8:	je     0x14000fd04
   14000fcba:	cmp    rdi,QWORD PTR [rbp+0x38]
   14000fcbe:	ja     0x14000fd04
   14000fcc0:	mov    rcx,rbp
   14000fcc3:	call   0x14000db60
   14000fcc8:	test   al,al
   14000fcca:	jne    0x14000fe0f
   14000fcd0:	lea    rcx,[rsp+0x84]
   14000fcd8:	mov    dl,0x5c
   14000fcda:	call   QWORD PTR [rip+0x54f0]        # 0x1400151d0
   14000fce0:	mov    cx,WORD PTR [rbp+0x58]
   14000fce4:	cmp    cx,WORD PTR [rax]
   14000fce7:	je     0x14000fd04
   14000fce9:	cmp    cx,bx
   14000fcec:	je     0x14000fda6
   14000fcf2:	mov    rcx,rbp
   14000fcf5:	call   0x14000def0
   14000fcfa:	mov    r11,QWORD PTR [rbp+0x38]
   14000fcfe:	cmp    QWORD PTR [rbp+0x30],r11
   14000fd02:	jbe    0x14000fcc0
   14000fd04:	lea    rcx,[rbp+0x10]
   14000fd08:	xor    edx,edx
   14000fd0a:	mov    BYTE PTR [rbp+0x8c],0x1
   14000fd11:	call   QWORD PTR [rip+0x5541]        # 0x140015258
   14000fd17:	mov    rax,QWORD PTR [rbp+0x30]
   14000fd1b:	sub    rdi,0x2
   14000fd1f:	sub    rax,0x2
   14000fd23:	cmp    rdi,rax
   14000fd26:	je     0x14000fd4e
   14000fd28:	nop    DWORD PTR [rax+rax*1+0x0]
   14000fd30:	movzx  edx,WORD PTR [rdi]
   14000fd33:	lea    rcx,[rbp+0x10]
   14000fd37:	call   QWORD PTR [rip+0x5513]        # 0x140015250
   14000fd3d:	mov    rax,QWORD PTR [rbp+0x30]
   14000fd41:	add    rdi,0x2
   14000fd45:	sub    rax,0x2
   14000fd49:	cmp    rdi,rax
   14000fd4c:	jne    0x14000fd30
   14000fd4e:	mov    rax,QWORD PTR [rbp+0x38]
   14000fd52:	cmp    QWORD PTR [rbp+0x30],rax
   14000fd56:	ja     0x14001021d
   14000fd5c:	nop    DWORD PTR [rax+0x0]
   14000fd60:	mov    rcx,rbp
   14000fd63:	call   0x14000db90
   14000fd68:	mov    edi,eax
   14000fd6a:	test   eax,eax
   14000fd6c:	je     0x14000fe70
   14000fd72:	movzx  edx,WORD PTR [rbp+0x58]
   14000fd76:	lea    rcx,[rbp+0x10]
   14000fd7a:	mov    r12b,0x1
   14000fd7d:	call   QWORD PTR [rip+0x54cd]        # 0x140015250
   14000fd83:	cmp    edi,0x2
   14000fd86:	jne    0x14000fd99
   14000fd88:	mov    rax,QWORD PTR [rbp+0x30]
   14000fd8c:	lea    rcx,[rbp+0x10]
   14000fd90:	movzx  edx,WORD PTR [rax]
   14000fd93:	call   QWORD PTR [rip+0x54b7]        # 0x140015250
   14000fd99:	mov    rcx,rbp
   14000fd9c:	call   0x14000def0
   14000fda1:	jmp    0x14001020f
   14000fda6:	mov    rbx,QWORD PTR [rbp+0x30]
   14000fdaa:	lea    rcx,[rbp+0x8]
   14000fdae:	sub    rbx,rdi
   14000fdb1:	sar    rbx,1
   14000fdb4:	call   QWORD PTR [rip+0x53d6]        # 0x140015190
   14000fdba:	mov    rcx,QWORD PTR [rbp+0x0]
   14000fdbe:	sub    rdi,rax
   14000fdc1:	lea    rdx,[rsp+0xe8]
   14000fdc9:	mov    r9d,ebx
   14000fdcc:	sar    rdi,1
   14000fdcf:	add    rcx,0x48
   14000fdd3:	lea    r8d,[rdi-0x1]
   14000fdd7:	call   QWORD PTR [rip+0x5433]        # 0x140015210
   14000fddd:	mov    rax,QWORD PTR [rsp+0xe8]
   14000fde5:	mov    rcx,rbp
   14000fde8:	mov    QWORD PTR [rbp+0x20],rax
   14000fdec:	mov    eax,DWORD PTR [rsp+0xf0]
   14000fdf3:	mov    DWORD PTR [rbp+0x28],eax
   14000fdf6:	mov    eax,DWORD PTR [rsp+0xf4]
   14000fdfd:	mov    DWORD PTR [rbp+0x2c],eax
   14000fe00:	call   0x14000def0
   14000fe05:	mov    eax,0x41
   14000fe0a:	jmp    0x140010659
   14000fe0f:	cmp    BYTE PTR [rbp+0x92],0x0
   14000fe16:	jne    0x14000fd04
   14000fe1c:	mov    edx,0x1
   14000fe21:	lea    r8,[rip+0x7718]        # 0x140017540
   14000fe28:	lea    rcx,[rsp+0x110]
   14000fe30:	mov    DWORD PTR [rbp+0x5c],edx
   14000fe33:	lea    rdx,[rip+0x743e]        # 0x140017278
   14000fe3a:	xor    r9d,r9d
   14000fe3d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000fe45:	call   QWORD PTR [rip+0x537d]        # 0x1400151c8
   14000fe4b:	lea    rcx,[rbp+0x18]
   14000fe4f:	mov    rdx,rax
   14000fe52:	call   QWORD PTR [rip+0x5360]        # 0x1400151b8
   14000fe58:	lea    rcx,[rsp+0x110]
   14000fe60:	call   QWORD PTR [rip+0x5552]        # 0x1400153b8
   14000fe66:	mov    eax,0x61
   14000fe6b:	jmp    0x140010659
   14000fe70:	cmp    WORD PTR [rbp+0x58],bx
   14000fe74:	je     0x1400102c3
   14000fe7a:	lea    rcx,[rsp+0x88]
   14000fe82:	mov    dl,0x5c
   14000fe84:	call   QWORD PTR [rip+0x5346]        # 0x1400151d0
   14000fe8a:	movzx  eax,WORD PTR [rax]
   14000fe8d:	cmp    WORD PTR [rbp+0x58],ax
   14000fe91:	jne    0x1400101f9
   14000fe97:	mov    rcx,rbp
   14000fe9a:	call   0x14000def0
   14000fe9f:	movzx  edi,WORD PTR [rbp+0x58]
   14000fea3:	cmp    edi,0x2029
   14000fea9:	mov    eax,edi
   14000feab:	jg     0x1400101e2
   14000feb1:	cmp    eax,0x2028
   14000feb6:	jge    0x1400101d8
   14000febc:	sub    eax,0xa
   14000febf:	cmp    eax,0x6e
   14000fec2:	ja     0x1400101e2
   14000fec8:	cdqe   
   14000feca:	movzx  eax,BYTE PTR [r13+rax*1+0x10794]
   14000fed3:	mov    ecx,DWORD PTR [r13+rax*4+0x10758]
   14000fedb:	add    rcx,r13
   14000fede:	jmp    rcx
   14000fee0:	lea    r8,[rsp+0x190]
   14000fee8:	lea    rdx,[rsp+0x8c]
   14000fef0:	mov    rcx,rbp
   14000fef3:	mov    BYTE PTR [rsp+0x190],0x0
   14000fefb:	call   0x14000dfb0
   14000ff00:	cmp    BYTE PTR [rsp+0x190],0x0
   14000ff08:	mov    di,WORD PTR [rax]
   14000ff0b:	jne    0x1400101ea
   14000ff11:	lea    r8,[rip+0x7608]        # 0x140017520
   14000ff18:	lea    rdx,[rip+0x7359]        # 0x140017278
   14000ff1f:	lea    rcx,[rsp+0xe0]
   14000ff27:	xor    r9d,r9d
   14000ff2a:	mov    DWORD PTR [rbp+0x5c],0x5
   14000ff31:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ff39:	call   QWORD PTR [rip+0x5289]        # 0x1400151c8
   14000ff3f:	lea    rcx,[rbp+0x18]
   14000ff43:	mov    rdx,rax
   14000ff46:	call   QWORD PTR [rip+0x526c]        # 0x1400151b8
   14000ff4c:	lea    rcx,[rsp+0xe0]
   14000ff54:	call   QWORD PTR [rip+0x545e]        # 0x1400153b8
   14000ff5a:	mov    eax,0x61
   14000ff5f:	jmp    0x140010659
   14000ff64:	lea    r8,[rsp+0x190]
   14000ff6c:	lea    rdx,[rsp+0x90]
   14000ff74:	mov    rcx,rbp
   14000ff77:	mov    BYTE PTR [rsp+0x190],0x0
   14000ff7f:	call   0x14000e0d0
   14000ff84:	cmp    BYTE PTR [rsp+0x190],0x0
   14000ff8c:	mov    di,WORD PTR [rax]
   14000ff8f:	jne    0x1400101ea
   14000ff95:	lea    r8,[rip+0x755c]        # 0x1400174f8
   14000ff9c:	lea    rdx,[rip+0x72d5]        # 0x140017278
   14000ffa3:	lea    rcx,[rsp+0x118]
   14000ffab:	xor    r9d,r9d
   14000ffae:	mov    DWORD PTR [rbp+0x5c],0x9
   14000ffb5:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ffbd:	call   QWORD PTR [rip+0x5205]        # 0x1400151c8
   14000ffc3:	lea    rcx,[rbp+0x18]
   14000ffc7:	mov    rdx,rax
   14000ffca:	call   QWORD PTR [rip+0x51e8]        # 0x1400151b8
   14000ffd0:	lea    rcx,[rsp+0x118]
   14000ffd8:	call   QWORD PTR [rip+0x53da]        # 0x1400153b8
   14000ffde:	mov    eax,0x61
   14000ffe3:	jmp    0x140010659
   14000ffe8:	lea    rcx,[rsp+0x198]
   14000fff0:	mov    dl,0x5c
   14000fff2:	call   QWORD PTR [rip+0x51d8]        # 0x1400151d0
   14000fff8:	mov    di,WORD PTR [rsp+0x198]
   140010000:	mov    rcx,rbp
   140010003:	call   0x14000def0
   140010008:	lea    rcx,[rbp+0x10]
   14001000c:	movzx  edx,di
   14001000f:	call   QWORD PTR [rip+0x523b]        # 0x140015250
   140010015:	jmp    0x14001020f
   14001001a:	lea    rcx,[rsp+0x1a0]
   140010022:	mov    dl,0x27
   140010024:	call   QWORD PTR [rip+0x51a6]        # 0x1400151d0
   14001002a:	mov    di,WORD PTR [rsp+0x1a0]
   140010032:	mov    rcx,rbp
   140010035:	call   0x14000def0
   14001003a:	lea    rcx,[rbp+0x10]
   14001003e:	mov    dx,di
   140010041:	call   QWORD PTR [rip+0x5209]        # 0x140015250
   140010047:	jmp    0x14001020f
   14001004c:	lea    rcx,[rsp+0x1a8]
   140010054:	mov    dl,0x22
   140010056:	call   QWORD PTR [rip+0x5174]        # 0x1400151d0
   14001005c:	mov    di,WORD PTR [rsp+0x1a8]
   140010064:	mov    rcx,rbp
   140010067:	call   0x14000def0
   14001006c:	lea    rcx,[rbp+0x10]
   140010070:	mov    dx,di
   140010073:	call   QWORD PTR [rip+0x51d7]        # 0x140015250
   140010079:	jmp    0x14001020f
   14001007e:	lea    rcx,[rsp+0x3a]
   140010083:	mov    dl,0x8
   140010085:	call   QWORD PTR [rip+0x5145]        # 0x1400151d0
   14001008b:	mov    di,WORD PTR [rsp+0x3a]
   140010090:	mov    rcx,rbp
   140010093:	call   0x14000def0
   140010098:	lea    rcx,[rbp+0x10]
   14001009c:	mov    dx,di
   14001009f:	call   QWORD PTR [rip+0x51ab]        # 0x140015250
   1400100a5:	jmp    0x14001020f
   1400100aa:	lea    rcx,[rsp+0x34]
   1400100af:	mov    dl,0xc
   1400100b1:	call   QWORD PTR [rip+0x5119]        # 0x1400151d0
   1400100b7:	mov    di,WORD PTR [rsp+0x34]
   1400100bc:	mov    rcx,rbp
   1400100bf:	call   0x14000def0
   1400100c4:	lea    rcx,[rbp+0x10]
   1400100c8:	mov    dx,di
   1400100cb:	call   QWORD PTR [rip+0x517f]        # 0x140015250
   1400100d1:	jmp    0x14001020f
   1400100d6:	lea    rcx,[rsp+0x38]
   1400100db:	mov    dl,0xa
   1400100dd:	call   QWORD PTR [rip+0x50ed]        # 0x1400151d0
   1400100e3:	mov    di,WORD PTR [rsp+0x38]
   1400100e8:	mov    rcx,rbp
   1400100eb:	call   0x14000def0
   1400100f0:	lea    rcx,[rbp+0x10]
   1400100f4:	mov    dx,di
   1400100f7:	call   QWORD PTR [rip+0x5153]        # 0x140015250
   1400100fd:	jmp    0x14001020f
   140010102:	lea    rcx,[rsp+0x30]
   140010107:	mov    dl,0xd
   140010109:	call   QWORD PTR [rip+0x50c1]        # 0x1400151d0
   14001010f:	mov    di,WORD PTR [rsp+0x30]
   140010114:	mov    rcx,rbp
   140010117:	call   0x14000def0
   14001011c:	lea    rcx,[rbp+0x10]
   140010120:	mov    dx,di
   140010123:	call   QWORD PTR [rip+0x5127]        # 0x140015250
   140010129:	jmp    0x14001020f
   14001012e:	lea    rcx,[rsp+0x32]
   140010133:	mov    dl,0x9
   140010135:	call   QWORD PTR [rip+0x5095]        # 0x1400151d0
   14001013b:	mov    di,WORD PTR [rsp+0x32]
   140010140:	mov    rcx,rbp
   140010143:	call   0x14000def0
   140010148:	lea    rcx,[rbp+0x10]
   14001014c:	mov    dx,di
   14001014f:	call   QWORD PTR [rip+0x50fb]        # 0x140015250
   140010155:	jmp    0x14001020f
   14001015a:	lea    rcx,[rsp+0x36]
   14001015f:	mov    dl,0xb
   140010161:	call   QWORD PTR [rip+0x5069]        # 0x1400151d0
   140010167:	mov    di,WORD PTR [rsp+0x36]
   14001016c:	mov    rcx,rbp
   14001016f:	call   0x14000def0
   140010174:	lea    rcx,[rbp+0x10]
   140010178:	mov    dx,di
   14001017b:	call   QWORD PTR [rip+0x50cf]        # 0x140015250
   140010181:	jmp    0x14001020f
   140010186:	mov    rax,QWORD PTR [rbp+0x30]
   14001018a:	movzx  ecx,WORD PTR [rax]
   14001018d:	cmp    ecx,0x39
   140010190:	ja     0x14001019b
   140010192:	cmp    ecx,0x30
   140010195:	jae    0x140010270
   14001019b:	cmp    ecx,0x7f
   14001019e:	jbe    0x1400101af
   1400101a0:	call   QWORD PTR [rip+0x5092]        # 0x140015238
   1400101a6:	cmp    eax,0x3
   1400101a9:	je     0x140010270
   1400101af:	mov    rcx,rbp
   1400101b2:	call   0x14000def0
   1400101b7:	lea    rcx,[rsp+0x3c]
   1400101bc:	xor    edx,edx
   1400101be:	call   QWORD PTR [rip+0x500c]        # 0x1400151d0
   1400101c4:	mov    di,WORD PTR [rsp+0x3c]
   1400101c9:	lea    rcx,[rbp+0x10]
   1400101cd:	mov    dx,di
   1400101d0:	call   QWORD PTR [rip+0x507a]        # 0x140015250
   1400101d6:	jmp    0x14001020f
   1400101d8:	mov    rcx,rbp
   1400101db:	call   0x14000def0
   1400101e0:	jmp    0x14001020f
   1400101e2:	mov    rcx,rbp
   1400101e5:	call   0x14000def0
   1400101ea:	lea    rcx,[rbp+0x10]
   1400101ee:	mov    dx,di
   1400101f1:	call   QWORD PTR [rip+0x5059]        # 0x140015250
   1400101f7:	jmp    0x14001020f
   1400101f9:	movzx  edx,WORD PTR [rbp+0x58]
   1400101fd:	lea    rcx,[rbp+0x10]
   140010201:	call   QWORD PTR [rip+0x5049]        # 0x140015250
   140010207:	mov    rcx,rbp
   14001020a:	call   0x14000def0
   14001020f:	mov    rax,QWORD PTR [rbp+0x38]
   140010213:	cmp    QWORD PTR [rbp+0x30],rax
   140010217:	jbe    0x14000fd60
   14001021d:	lea    r8,[rip+0x72b4]        # 0x1400174d8
   140010224:	lea    rdx,[rip+0x704d]        # 0x140017278
   14001022b:	lea    rcx,[rsp+0x128]
   140010233:	xor    r9d,r9d
   140010236:	mov    DWORD PTR [rbp+0x5c],0x3
   14001023d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140010245:	call   QWORD PTR [rip+0x4f7d]        # 0x1400151c8
   14001024b:	lea    rcx,[rbp+0x18]
   14001024f:	mov    rdx,rax
   140010252:	call   QWORD PTR [rip+0x4f60]        # 0x1400151b8
   140010258:	lea    rcx,[rsp+0x128]
   140010260:	call   QWORD PTR [rip+0x5152]        # 0x1400153b8
   140010266:	mov    eax,0x61
   14001026b:	jmp    0x140010659
   140010270:	lea    r8,[rip+0x7239]        # 0x1400174b0
   140010277:	lea    rdx,[rip+0x6ffa]        # 0x140017278
   14001027e:	lea    rcx,[rsp+0xf8]
   140010286:	xor    r9d,r9d
   140010289:	mov    DWORD PTR [rbp+0x5c],0x4
   140010290:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140010298:	call   QWORD PTR [rip+0x4f2a]        # 0x1400151c8
   14001029e:	lea    rcx,[rbp+0x18]
   1400102a2:	mov    rdx,rax
   1400102a5:	call   QWORD PTR [rip+0x4f0d]        # 0x1400151b8
   1400102ab:	lea    rcx,[rsp+0xf8]
   1400102b3:	call   QWORD PTR [rip+0x50ff]        # 0x1400153b8
   1400102b9:	mov    eax,0x61
   1400102be:	jmp    0x140010659
   1400102c3:	mov    rcx,rbp
   1400102c6:	call   0x14000def0
   1400102cb:	mov    rcx,QWORD PTR [rbp+0x0]
   1400102cf:	test   rcx,rcx
   1400102d2:	je     0x1400102f8
   1400102d4:	lea    r8,[rbp+0x10]
   1400102d8:	lea    rdx,[rsp+0x130]
   1400102e0:	call   0x14000c460
   1400102e5:	mov    rcx,QWORD PTR [rax]
   1400102e8:	mov    QWORD PTR [rbp+0x20],rcx
   1400102ec:	mov    ecx,DWORD PTR [rax+0x8]
   1400102ef:	mov    DWORD PTR [rbp+0x28],ecx
   1400102f2:	mov    eax,DWORD PTR [rax+0xc]
   1400102f5:	mov    DWORD PTR [rbp+0x2c],eax
   1400102f8:	mov    eax,0x41
   1400102fd:	mov    ecx,0x57
   140010302:	test   r12b,r12b
   140010305:	cmovne eax,ecx
   140010308:	jmp    0x140010659
   14001030d:	movzx  edx,bx
   140010310:	mov    rcx,rbp
   140010313:	call   0x14000e5a0
   140010318:	jmp    0x140010659
   14001031d:	lea    rcx,[rsp+0x94]
   140010325:	mov    dl,0x5c
   140010327:	xor    sil,sil
   14001032a:	call   QWORD PTR [rip+0x4ea0]        # 0x1400151d0
   140010330:	cmp    bx,WORD PTR [rax]
   140010333:	jne    0x1400103d9
   140010339:	lea    rcx,[rsp+0x98]
   140010341:	mov    dl,0x75
   140010343:	call   QWORD PTR [rip+0x4e87]        # 0x1400151d0
   140010349:	movzx  eax,WORD PTR [rax]
   14001034c:	cmp    WORD PTR [rbp+0x58],ax
   140010350:	jne    0x1400103d9
   140010356:	lea    r8,[rsp+0x190]
   14001035e:	lea    rdx,[rsp+0x9c]
   140010366:	mov    rcx,rbp
   140010369:	mov    sil,0x1
   14001036c:	mov    BYTE PTR [rsp+0x190],r12b
   140010374:	call   0x14000dfb0
   140010379:	movzx  ebx,WORD PTR [rax]
   14001037c:	cmp    BYTE PTR [rsp+0x190],r12b
   140010384:	jne    0x1400103d9
   140010386:	lea    r8,[rip+0x7193]        # 0x140017520
   14001038d:	lea    rdx,[rip+0x6ee4]        # 0x140017278
   140010394:	lea    rcx,[rsp+0xd0]
   14001039c:	xor    r9d,r9d
   14001039f:	mov    DWORD PTR [rbp+0x5c],0x5
   1400103a6:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400103ae:	call   QWORD PTR [rip+0x4e14]        # 0x1400151c8
   1400103b4:	lea    rcx,[rbp+0x18]
   1400103b8:	mov    rdx,rax
   1400103bb:	call   QWORD PTR [rip+0x4df7]        # 0x1400151b8
   1400103c1:	lea    rcx,[rsp+0xd0]
   1400103c9:	call   QWORD PTR [rip+0x4fe9]        # 0x1400153b8
   1400103cf:	mov    eax,0x61
   1400103d4:	jmp    0x140010659
   1400103d9:	cmp    bx,0x61
   1400103dd:	jb     0x1400103e5
   1400103df:	cmp    bx,0x7a
   1400103e3:	jbe    0x14001041d
   1400103e5:	cmp    bx,0x41
   1400103e9:	jb     0x1400103f1
   1400103eb:	cmp    bx,0x5a
   1400103ef:	jbe    0x14001041d
   1400103f1:	cmp    bx,0x24
   1400103f5:	je     0x14001041d
   1400103f7:	cmp    bx,0x5f
   1400103fb:	je     0x14001041d
   1400103fd:	movzx  ecx,bx
   140010400:	call   QWORD PTR [rip+0x4e32]        # 0x140015238
   140010406:	cmp    eax,0x4
   140010409:	je     0x14001041d
   14001040b:	cmp    eax,0xd
   14001040e:	jle    0x140010588
   140010414:	cmp    eax,0x12
   140010417:	jg     0x140010588
   14001041d:	test   sil,sil
   140010420:	je     0x140010442
   140010422:	lea    rcx,[rbp+0x10]
   140010426:	xor    edx,edx
   140010428:	call   QWORD PTR [rip+0x4e2a]        # 0x140015258
   14001042e:	lea    rcx,[rbp+0x10]
   140010432:	movzx  edx,bx
   140010435:	call   QWORD PTR [rip+0x4e15]        # 0x140015250
   14001043b:	mov    BYTE PTR [rbp+0x8c],0x1
   140010442:	movzx  ebx,WORD PTR [rbp+0x58]
   140010446:	lea    rcx,[rsp+0xa0]
   14001044e:	mov    dl,0x5c
   140010450:	call   QWORD PTR [rip+0x4d7a]        # 0x1400151d0
   140010456:	movzx  eax,WORD PTR [rax]
   140010459:	cmp    WORD PTR [rbp+0x58],ax
   14001045d:	jne    0x140010514
   140010463:	lea    rcx,[rsp+0xa4]
   14001046b:	mov    dl,0x75
   14001046d:	call   QWORD PTR [rip+0x4d5d]        # 0x1400151d0
   140010473:	mov    rcx,QWORD PTR [rbp+0x30]
   140010477:	movzx  eax,WORD PTR [rax]
   14001047a:	cmp    WORD PTR [rcx],ax
   14001047d:	jne    0x140010514
   140010483:	test   sil,sil
   140010486:	jne    0x1400104bd
   140010488:	lea    rbx,[rbp+0x10]
   14001048c:	xor    edx,edx
   14001048e:	mov    sil,0x1
   140010491:	mov    rcx,rbx
   140010494:	call   QWORD PTR [rip+0x4dbe]        # 0x140015258
   14001049a:	mov    r8,QWORD PTR [rbp+0x50]
   14001049e:	mov    r9,QWORD PTR [rbp+0x30]
   1400104a2:	sub    r9,r8
   1400104a5:	xor    edx,edx
   1400104a7:	mov    rcx,rbx
   1400104aa:	sar    r9,1
   1400104ad:	dec    r9d
   1400104b0:	call   QWORD PTR [rip+0x4db2]        # 0x140015268
   1400104b6:	mov    BYTE PTR [rbp+0x8c],sil
   1400104bd:	mov    rcx,rbp
   1400104c0:	call   0x14000def0
   1400104c5:	lea    r8,[rsp+0x190]
   1400104cd:	lea    rdx,[rsp+0xa8]
   1400104d5:	mov    rcx,rbp
   1400104d8:	mov    BYTE PTR [rsp+0x190],r12b
   1400104e0:	call   0x14000dfb0
   1400104e5:	movzx  ebx,WORD PTR [rax]
   1400104e8:	cmp    BYTE PTR [rsp+0x190],r12b
   1400104f0:	je     0x14001053f
   1400104f2:	movzx  ecx,bx
   1400104f5:	call   0x14000dac0
   1400104fa:	test   al,al
   1400104fc:	je     0x140010442
   140010502:	lea    rcx,[rbp+0x10]
   140010506:	movzx  edx,bx
   140010509:	call   QWORD PTR [rip+0x4d41]        # 0x140015250
   14001050f:	jmp    0x140010442
   140010514:	movzx  ecx,bx
   140010517:	call   0x14000dac0
   14001051c:	test   al,al
   14001051e:	je     0x140010592
   140010520:	test   sil,sil
   140010523:	je     0x140010532
   140010525:	lea    rcx,[rbp+0x10]
   140010529:	movzx  edx,bx
   14001052c:	call   QWORD PTR [rip+0x4d1e]        # 0x140015250
   140010532:	mov    rcx,rbp
   140010535:	call   0x14000def0
   14001053a:	jmp    0x140010442
   14001053f:	lea    r8,[rip+0x6fda]        # 0x140017520
   140010546:	lea    rdx,[rip+0x6d2b]        # 0x140017278
   14001054d:	lea    rcx,[rsp+0xd8]
   140010555:	xor    r9d,r9d
   140010558:	mov    DWORD PTR [rbp+0x5c],0x5
   14001055f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140010567:	call   QWORD PTR [rip+0x4c5b]        # 0x1400151c8
   14001056d:	lea    rcx,[rbp+0x18]
   140010571:	mov    rdx,rax
   140010574:	call   QWORD PTR [rip+0x4c3e]        # 0x1400151b8
   14001057a:	lea    rcx,[rsp+0xd8]
   140010582:	call   QWORD PTR [rip+0x4e30]        # 0x1400153b8
   140010588:	mov    eax,0x61
   14001058d:	jmp    0x140010659
   140010592:	mov    rdx,QWORD PTR [rbp+0x50]
   140010596:	mov    rdi,QWORD PTR [rbp+0x30]
   14001059a:	mov    ebx,0x1d
   14001059f:	sub    rdi,rdx
   1400105a2:	sar    rdi,1
   1400105a5:	dec    edi
   1400105a7:	mov    DWORD PTR [rbp+0x84],edi
   1400105ad:	test   sil,sil
   1400105b0:	jne    0x1400105c7
   1400105b2:	movzx  r9d,BYTE PTR [rbp+0x92]
   1400105ba:	mov    r8d,edi
   1400105bd:	mov    rcx,rbp
   1400105c0:	call   0x14000d5c0
   1400105c5:	mov    ebx,eax
   1400105c7:	mov    rcx,QWORD PTR [rbp+0x0]
   1400105cb:	test   rcx,rcx
   1400105ce:	je     0x140010653
   1400105d4:	cmp    ebx,0x1d
   1400105d7:	jne    0x140010606
   1400105d9:	test   sil,sil
   1400105dc:	je     0x140010606
   1400105de:	lea    r8,[rbp+0x10]
   1400105e2:	lea    rdx,[rsp+0x140]
   1400105ea:	call   0x14000c460
   1400105ef:	mov    rcx,QWORD PTR [rax]
   1400105f2:	mov    QWORD PTR [rbp+0x20],rcx
   1400105f6:	mov    ecx,DWORD PTR [rax+0x8]
   1400105f9:	mov    DWORD PTR [rbp+0x28],ecx
   1400105fc:	mov    eax,DWORD PTR [rax+0xc]
   1400105ff:	mov    DWORD PTR [rbp+0x2c],eax
   140010602:	mov    eax,ebx
   140010604:	jmp    0x140010659
   140010606:	lea    rcx,[rbp+0x8]
   14001060a:	call   QWORD PTR [rip+0x4b80]        # 0x140015190
   140010610:	mov    r8,QWORD PTR [rbp+0x50]
   140010614:	mov    rcx,QWORD PTR [rbp+0x0]
   140010618:	sub    r8,rax
   14001061b:	lea    rdx,[rsp+0x100]
   140010623:	add    rcx,0x48
   140010627:	sar    r8,1
   14001062a:	mov    r9d,edi
   14001062d:	call   QWORD PTR [rip+0x4bdd]        # 0x140015210
   140010633:	mov    rax,QWORD PTR [rsp+0x100]
   14001063b:	mov    QWORD PTR [rbp+0x20],rax
   14001063f:	mov    eax,DWORD PTR [rsp+0x108]
   140010646:	mov    DWORD PTR [rbp+0x28],eax
   140010649:	mov    eax,DWORD PTR [rsp+0x10c]
   140010650:	mov    DWORD PTR [rbp+0x2c],eax
   140010653:	mov    eax,ebx
   140010655:	jmp    0x140010659
   140010657:	xor    eax,eax
   140010659:	mov    rsi,QWORD PTR [rsp+0x170]
   140010661:	mov    rdi,QWORD PTR [rsp+0x168]
   140010669:	mov    rbx,QWORD PTR [rsp+0x178]
   140010671:	mov    r12,QWORD PTR [rsp+0x160]
   140010679:	mov    r13,QWORD PTR [rsp+0x158]
   140010681:	add    rsp,0x180
   140010688:	pop    rbp
   140010689:	ret    
   14001068a:	xchg   ax,ax
   14001068c:	push   rdx
   14001068d:	cld    
   14001068e:	add    BYTE PTR [rax],al
   140010690:	scas   eax,DWORD PTR es:[rdi]
   140010691:	cld    
   140010692:	add    BYTE PTR [rax],al
   140010694:	and    ah,bh
   140010696:	add    BYTE PTR [rax],al
   140010698:	(bad)  
   140010699:	sti    
   14001069a:	add    BYTE PTR [rax],al
   14001069c:	mov    esp,0xb20000fb
   1400106a1:	sti    
   1400106a2:	add    BYTE PTR [rax],al
   1400106a4:	jge    0x1400106a1
   1400106a6:	add    BYTE PTR [rax],al
   1400106a8:	icebp  
   1400106a9:	cli    
   1400106aa:	add    BYTE PTR [rax],al
   1400106ac:	out    0xfa,eax
   1400106ae:	add    BYTE PTR [rax],al
   1400106b0:	pop    rsi
   1400106b1:	cli    
   1400106b2:	add    BYTE PTR [rax],al
   1400106b4:	loop   0x1400106ac
   1400106b6:	add    BYTE PTR [rax],al
   1400106b8:	(bad)  
   1400106b9:	repnz add BYTE PTR [rax],al
   1400106bc:	or     eax,0xd8000103
   1400106c1:	test   BYTE PTR [rax],0x0
   1400106c4:	pop    rdi
   1400106c5:	sti    
   1400106c6:	add    BYTE PTR [rax],al
   1400106c8:	rex.WRB test BYTE PTR [r8],0x0
   1400106cc:	in     eax,dx
   1400106cd:	cmc    
   1400106ce:	add    BYTE PTR [rax],al
   1400106d0:	or     ch,dh
   1400106d2:	add    BYTE PTR [rax],al
   1400106d4:	(bad)  
   1400106d5:	hlt    
   1400106d6:	add    BYTE PTR [rax],al
   1400106d8:	hlt    
   1400106d9:	hlt    
   1400106da:	add    BYTE PTR [rax],al
   1400106dc:	(bad)  
   1400106dd:	hlt    
   1400106de:	add    BYTE PTR [rax],al
   1400106e0:	mov    eax,0xae0000f4
   1400106e5:	hlt    
   1400106e6:	add    BYTE PTR [rax],al
   1400106e8:	push   rcx
   1400106e9:	hlt    
   1400106ea:	add    BYTE PTR [rax],al
   1400106ec:	rex.RXB hlt 
   1400106ee:	add    BYTE PTR [rax],al
   1400106f0:	cmp    eax,0x1d0000f4
   1400106f5:	add    eax,DWORD PTR [rcx]
   1400106f7:	add    BYTE PTR [rax],al
   1400106f9:	add    DWORD PTR [rdx],ebx
   1400106fb:	sbb    al,BYTE PTR [rdx]
   1400106fd:	add    eax,DWORD PTR [rcx]
   1400106ff:	add    al,0x5
   140010701:	(bad)  
   140010702:	(bad)  
   140010703:	or     BYTE PTR [rcx],cl
   140010705:	or     cl,BYTE PTR [rbx]
   140010707:	or     al,0xc
   140010709:	or     al,0xc
   14001070b:	or     al,0xc
   14001070d:	or     al,0xc
   14001070f:	or     al,0xc
   140010711:	or     eax,0x11100f0e
   140010716:	adc    bl,BYTE PTR [rdx]
   140010718:	sbb    bl,BYTE PTR [rdx]
   14001071a:	sbb    bl,BYTE PTR [rdx]
   14001071c:	sbb    bl,BYTE PTR [rdx]
   14001071e:	sbb    bl,BYTE PTR [rdx]
   140010720:	sbb    bl,BYTE PTR [rdx]
   140010722:	sbb    bl,BYTE PTR [rdx]
   140010724:	sbb    bl,BYTE PTR [rdx]
   140010726:	sbb    bl,BYTE PTR [rdx]
   140010728:	sbb    bl,BYTE PTR [rdx]
   14001072a:	sbb    bl,BYTE PTR [rdx]
   14001072c:	sbb    bl,BYTE PTR [rdx]
   14001072e:	sbb    bl,BYTE PTR [rdx]
   140010730:	sbb    bl,BYTE PTR [rdx]
   140010732:	adc    ebx,DWORD PTR [rdx]
   140010734:	adc    al,0x15
   140010736:	sbb    bl,BYTE PTR [rdx]
   140010738:	sbb    bl,BYTE PTR [rdx]
   14001073a:	sbb    bl,BYTE PTR [rdx]
   14001073c:	sbb    bl,BYTE PTR [rdx]
   14001073e:	sbb    bl,BYTE PTR [rdx]
   140010740:	sbb    bl,BYTE PTR [rdx]
   140010742:	sbb    bl,BYTE PTR [rdx]
   140010744:	sbb    bl,BYTE PTR [rdx]
   140010746:	sbb    bl,BYTE PTR [rdx]
   140010748:	sbb    bl,BYTE PTR [rdx]
   14001074a:	sbb    bl,BYTE PTR [rdx]
   14001074c:	sbb    bl,BYTE PTR [rdx]
   14001074e:	sbb    bl,BYTE PTR [rdx]
   140010750:	sbb    bl,BYTE PTR [rdx]
   140010752:	(bad)  
   140010753:	(bad)  
   140010754:	sbb    BYTE PTR [rcx],bl
   140010756:	xchg   ax,ax
   140010758:	fadd   DWORD PTR [rcx]
   14001075a:	add    DWORD PTR [rax],eax
   14001075c:	rex.WR add BYTE PTR [rcx],r8b
   14001075f:	add    BYTE PTR [rdx],bl
   140010761:	add    BYTE PTR [rcx],al
   140010763:	add    BYTE PTR [rsi+0x70000101],al
   140010769:	add    al,BYTE PTR [rcx]
   14001076b:	add    al,ch
   14001076d:	inc    DWORD PTR [rax]
   14001076f:	add    BYTE PTR [rsi+0x0],bh
   140010772:	add    DWORD PTR [rax],eax
   140010774:	stos   BYTE PTR es:[rdi],al
   140010775:	add    BYTE PTR [rcx],al
   140010777:	add    dh,dl
   140010779:	add    BYTE PTR [rcx],al
   14001077b:	add    BYTE PTR [rdx],al
   14001077d:	add    DWORD PTR [rcx],eax
   14001077f:	add    BYTE PTR [rsi],ch
   140010781:	add    DWORD PTR [rcx],eax
   140010783:	add    al,ah
   140010785:	inc    BYTE PTR [rax]
   140010787:	add    BYTE PTR [rdx+0x1],bl
   14001078a:	add    DWORD PTR [rax],eax
   14001078c:	inc    DWORD PTR fs:[rax]
   14001078f:	add    dl,ah
   140010791:	add    DWORD PTR [rcx],eax
   140010793:	add    BYTE PTR [rax],al
   140010795:	(bad)  
   140010796:	(bad)  
   140010797:	add    BYTE PTR [rsi],cl
   140010799:	(bad)  
   14001079a:	(bad)  
   14001079b:	(bad)  
   14001079c:	(bad)  
   14001079d:	(bad)  
   14001079e:	(bad)  
   14001079f:	(bad)  
   1400107a0:	(bad)  
   1400107a1:	(bad)  
   1400107a2:	(bad)  
   1400107a3:	(bad)  
   1400107a4:	(bad)  
   1400107a5:	(bad)  
   1400107a6:	(bad)  
   1400107a7:	(bad)  
   1400107a8:	(bad)  
   1400107a9:	(bad)  
   1400107aa:	(bad)  
   1400107ab:	(bad)  
   1400107ac:	add    DWORD PTR [rsi],ecx
   1400107ae:	(bad)  
   1400107af:	(bad)  
   1400107b0:	(bad)  
   1400107b1:	add    cl,BYTE PTR [rsi]
   1400107b3:	(bad)  
   1400107b4:	(bad)  
   1400107b5:	(bad)  
   1400107b6:	(bad)  
   1400107b7:	(bad)  
   1400107b8:	(bad)  
   1400107b9:	(bad)  
   1400107ba:	add    eax,DWORD PTR [rsp+rax*1]
   1400107bd:	add    al,0x4
   1400107bf:	add    al,0x4
   1400107c1:	add    al,0x4
   1400107c3:	add    al,0xe
   1400107c5:	(bad)  
   1400107c6:	(bad)  
   1400107c7:	(bad)  
   1400107c8:	(bad)  
   1400107c9:	(bad)  
   1400107ca:	(bad)  
   1400107cb:	(bad)  
   1400107cc:	(bad)  
   1400107cd:	(bad)  
   1400107ce:	(bad)  
   1400107cf:	(bad)  
   1400107d0:	(bad)  
   1400107d1:	(bad)  
   1400107d2:	(bad)  
   1400107d3:	(bad)  
   1400107d4:	(bad)  
   1400107d5:	(bad)  
   1400107d6:	(bad)  
   1400107d7:	(bad)  
   1400107d8:	(bad)  
   1400107d9:	(bad)  
   1400107da:	(bad)  
   1400107db:	(bad)  
   1400107dc:	(bad)  
   1400107dd:	(bad)  
   1400107de:	(bad)  
   1400107df:	(bad)  
   1400107e0:	(bad)  
   1400107e1:	(bad)  
   1400107e2:	(bad)  
   1400107e3:	(bad)  
   1400107e4:	(bad)  
   1400107e5:	(bad)  
   1400107e6:	add    eax,0xe0e0e0e
   1400107eb:	(bad)  
   1400107ec:	(bad)  
   1400107ed:	(bad)  
   1400107ee:	(bad)  
   1400107ef:	(bad)  
   1400107f0:	(bad)  
   1400107f1:	(bad)  
   1400107f2:	(bad)  
   1400107f3:	(bad)  
   1400107f4:	(bad)  
   1400107f5:	(bad)  
   1400107f6:	(bad)  
   1400107f7:	(bad)  
   1400107f8:	or     BYTE PTR [rsi],cl
   1400107fa:	(bad)  
   1400107fb:	(bad)  
   1400107fc:	or     DWORD PTR [rsi],ecx
   1400107fe:	or     cl,BYTE PTR [rbx]
   140010800:	or     al,0xe
   140010802:	or     eax,0xcccccccc
   140010807:	int3   
   140010808:	int3   
   140010809:	int3   
   14001080a:	int3   
   14001080b:	int3   
   14001080c:	int3   
   14001080d:	int3   
   14001080e:	int3   
   14001080f:	int3   
   140010810:	mov    QWORD PTR [rsp+0x8],rbx
   140010815:	mov    QWORD PTR [rsp+0x10],rbp
   14001081a:	mov    QWORD PTR [rsp+0x18],rsi
   14001081f:	push   rdi
   140010820:	sub    rsp,0x20
   140010824:	mov    ebx,DWORD PTR [rcx+0x80]
   14001082a:	xor    ebp,ebp
   14001082c:	mov    rdi,rcx
   14001082f:	mov    QWORD PTR [rcx+0x20],rbp
   140010833:	mov    DWORD PTR [rcx+0x28],ebp
   140010836:	mov    DWORD PTR [rcx+0x2c],ebp
   140010839:	call   0x14000f130
   14001083e:	mov    rdx,QWORD PTR [rdi+0x30]
   140010842:	mov    BYTE PTR [rdi+0x91],bpl
   140010849:	sub    rdx,QWORD PTR [rdi+0x50]
   14001084d:	mov    esi,eax
   14001084f:	mov    DWORD PTR [rdi+0x80],eax
   140010855:	sar    rdx,1
   140010858:	mov    BYTE PTR [rdi+0x8e],bpl
   14001085f:	dec    edx
   140010861:	cmp    ebx,0x37
   140010864:	sete   al
   140010867:	mov    DWORD PTR [rdi+0x84],edx
   14001086d:	mov    BYTE PTR [rdi+0x90],al
   140010873:	lea    eax,[rsi-0x4]
   140010876:	cmp    eax,0x4a
   140010879:	ja     0x1400108b6
   14001087b:	lea    rdx,[rip+0xfffffffffffef77e]        # 0x140000000
   140010882:	cdqe   
   140010884:	movzx  eax,BYTE PTR [rdx+rax*1+0x10930]
   14001088c:	mov    ecx,DWORD PTR [rdx+rax*4+0x1091c]
   140010893:	add    rcx,rdx
   140010896:	jmp    rcx
   140010898:	mov    DWORD PTR [rdi+0x70],0x1
   14001089f:	mov    DWORD PTR [rdi+0x74],ebp
   1400108a2:	jmp    0x1400108c8
   1400108a4:	mov    DWORD PTR [rdi+0x70],0x2
   1400108ab:	jmp    0x1400108c8
   1400108ad:	mov    BYTE PTR [rdi+0x8e],0x1
   1400108b4:	jmp    0x1400108c8
   1400108b6:	mov    ecx,esi
   1400108b8:	call   0x14000da30
   1400108bd:	test   al,al
   1400108bf:	je     0x1400108c8
   1400108c1:	mov    BYTE PTR [rdi+0x91],0x1
   1400108c8:	mov    ecx,DWORD PTR [rdi+0x70]
   1400108cb:	sub    ecx,0x1
   1400108ce:	je     0x1400108e6
   1400108d0:	cmp    ecx,0x1
   1400108d3:	jne    0x140010904
   1400108d5:	cmp    esi,0xe
   1400108d8:	je     0x140010904
   1400108da:	mov    eax,esi
   1400108dc:	cmp    esi,0x10
   1400108df:	je     0x140010906
   1400108e1:	mov    DWORD PTR [rdi+0x70],ebp
   1400108e4:	jmp    0x140010906
   1400108e6:	cmp    esi,0x3c
   1400108e9:	jne    0x1400108fc
   1400108eb:	add    DWORD PTR [rdi+0x74],0xffffffff
   1400108ef:	mov    eax,esi
   1400108f1:	jne    0x140010906
   1400108f3:	mov    DWORD PTR [rdi+0x70],0x2
   1400108fa:	jmp    0x140010906
   1400108fc:	cmp    esi,0x24
   1400108ff:	jne    0x140010904
   140010901:	inc    DWORD PTR [rdi+0x74]
   140010904:	mov    eax,esi
   140010906:	mov    rbx,QWORD PTR [rsp+0x30]
   14001090b:	mov    rbp,QWORD PTR [rsp+0x38]
   140010910:	mov    rsi,QWORD PTR [rsp+0x40]
   140010915:	add    rsp,0x20
   140010919:	pop    rdi
   14001091a:	ret    
   14001091b:	nop
   14001091c:	lods   eax,DWORD PTR ds:[rsi]
   14001091d:	or     BYTE PTR [rcx],al
   14001091f:	add    cl,al
   140010921:	or     BYTE PTR [rcx],al
   140010923:	add    BYTE PTR [rax+rcx*1+0x8980001],ah
   14001092a:	add    DWORD PTR [rax],eax
   14001092c:	mov    dh,0x8
   14001092e:	add    DWORD PTR [rax],eax
   140010930:	add    BYTE PTR [rsp+rax*1],al
   140010933:	add    DWORD PTR [rax+rax*1],eax
   140010936:	add    al,0x4
   140010938:	add    al,0x4
   14001093a:	add    al,BYTE PTR [rdx+rax*1]
   14001093d:	add    al,0x4
   14001093f:	add    al,0x4
   140010941:	add    eax,DWORD PTR [rsp+rax*1]
   140010944:	add    al,0x4
   140010946:	add    al,0x4
   140010948:	add    al,0x4
   14001094a:	add    eax,DWORD PTR [rsp+rax*1]
   14001094d:	add    DWORD PTR [rsp+rax*1],eax
   140010950:	add    al,0x4
   140010952:	add    al,0x4
   140010954:	add    al,0x4
   140010956:	add    al,0x4
   140010958:	add    al,0x4
   14001095a:	add    al,0x4
   14001095c:	add    al,0x4
   14001095e:	add    al,0x4
   140010960:	add    al,0x4
   140010962:	add    DWORD PTR [rsp+rax*1],eax
   140010965:	add    al,0x4
   140010967:	add    BYTE PTR [rcx+rax*1],al
   14001096a:	add    al,0x4
   14001096c:	add    al,0x4
   14001096e:	add    al,0x4
   140010970:	add    al,0x4
   140010972:	add    al,0x0
   140010974:	add    DWORD PTR [rsp+rax*1],eax
   140010977:	add    al,0x4
   140010979:	add    eax,DWORD PTR [rbx]
   14001097b:	int3   
   14001097c:	int3   
   14001097d:	int3   
   14001097e:	int3   
   14001097f:	int3   
   140010980:	rex push rbx
   140010982:	push   rbp
   140010983:	push   r13
   140010985:	push   r15
   140010987:	sub    rsp,0x158
   14001098e:	xor    r13d,r13d
   140010991:	mov    rbp,r8
   140010994:	mov    r15,rdx
   140010997:	mov    DWORD PTR [rsp+0x180],r13d
   14001099f:	mov    rbx,rcx
   1400109a2:	call   0x140010810
   1400109a7:	cmp    DWORD PTR [rbx+0x80],0xf
   1400109ae:	je     0x1400109c0
   1400109b0:	mov    al,0x1
   1400109b2:	add    rsp,0x158
   1400109b9:	pop    r15
   1400109bb:	pop    r13
   1400109bd:	pop    rbp
   1400109be:	pop    rbx
   1400109bf:	ret    
   1400109c0:	mov    QWORD PTR [rsp+0x188],rsi
   1400109c8:	mov    QWORD PTR [rsp+0x148],r12
   1400109d0:	mov    QWORD PTR [rsp+0x140],r14
   1400109d8:	lea    r14,[rip+0x6c61]        # 0x140017640
   1400109df:	mov    QWORD PTR [rsp+0x150],rdi
   1400109e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400109f0:	mov    r12,QWORD PTR [rbx+0x50]
   1400109f4:	mov    esi,DWORD PTR [rbx+0x88]
   1400109fa:	mov    rcx,rbx
   1400109fd:	sub    r12,QWORD PTR [rbx+0x48]
   140010a01:	sar    r12,1
   140010a04:	inc    r12d
   140010a07:	call   0x140010810
   140010a0c:	mov    edx,DWORD PTR [rbx+0x80]
   140010a12:	cmp    edx,0x1d
   140010a15:	je     0x140010a20
   140010a17:	cmp    edx,0x56
   140010a1a:	jne    0x14001113d
   140010a20:	cmp    BYTE PTR [rbx+0x8c],0x0
   140010a27:	je     0x140010a3a
   140010a29:	lea    rdx,[rbx+0x10]
   140010a2d:	lea    rcx,[rsp+0x30]
   140010a32:	call   QWORD PTR [rip+0x4990]        # 0x1400153c8
   140010a38:	jmp    0x140010a75
   140010a3a:	cmp    edx,0x41
   140010a3d:	jne    0x140010a5f
   140010a3f:	mov    r8d,DWORD PTR [rbx+0x84]
   140010a46:	mov    rdx,QWORD PTR [rbx+0x50]
   140010a4a:	lea    rcx,[rsp+0x30]
   140010a4f:	sub    r8d,0x2
   140010a53:	add    rdx,0x2
   140010a57:	call   QWORD PTR [rip+0x47c3]        # 0x140015220
   140010a5d:	jmp    0x140010a75
   140010a5f:	mov    r8d,DWORD PTR [rbx+0x84]
   140010a66:	mov    rdx,QWORD PTR [rbx+0x50]
   140010a6a:	lea    rcx,[rsp+0x30]
   140010a6f:	call   QWORD PTR [rip+0x47ab]        # 0x140015220
   140010a75:	or     rcx,0xffffffffffffffff
   140010a79:	xor    eax,eax
   140010a7b:	mov    rdi,r14
   140010a7e:	repnz scas al,BYTE PTR es:[rdi]
   140010a80:	mov    QWORD PTR [rsp+0xa8],r14
   140010a88:	lea    rdx,[rsp+0xe0]
   140010a90:	not    rcx
   140010a93:	dec    rcx
   140010a96:	mov    DWORD PTR [rsp+0xa0],ecx
   140010a9d:	lea    rcx,[rsp+0x30]
   140010aa2:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   140010aaa:	movdqa XMMWORD PTR [rsp+0xe0],xmm0
   140010ab3:	call   QWORD PTR [rip+0x48af]        # 0x140015368
   140010ab9:	test   al,al
   140010abb:	jne    0x140010b10
   140010abd:	or     rcx,0xffffffffffffffff
   140010ac1:	lea    rdx,[rip+0x6b70]        # 0x140017638
   140010ac8:	xor    eax,eax
   140010aca:	mov    rdi,rdx
   140010acd:	mov    QWORD PTR [rsp+0x88],rdx
   140010ad5:	lea    rdx,[rsp+0x100]
   140010add:	repnz scas al,BYTE PTR es:[rdi]
   140010adf:	not    rcx
   140010ae2:	dec    rcx
   140010ae5:	mov    DWORD PTR [rsp+0x80],ecx
   140010aec:	lea    rcx,[rsp+0x30]
   140010af1:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   140010af9:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   140010b02:	call   QWORD PTR [rip+0x4860]        # 0x140015368
   140010b08:	test   al,al
   140010b0a:	je     0x140011194
   140010b10:	or     rcx,0xffffffffffffffff
   140010b14:	xor    eax,eax
   140010b16:	mov    rdi,r14
   140010b19:	repnz scas al,BYTE PTR es:[rdi]
   140010b1b:	mov    QWORD PTR [rsp+0xc8],r14
   140010b23:	lea    rdx,[rsp+0x120]
   140010b2b:	not    rcx
   140010b2e:	dec    rcx
   140010b31:	mov    DWORD PTR [rsp+0xc0],ecx
   140010b38:	lea    rcx,[rsp+0x30]
   140010b3d:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   140010b45:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   140010b4e:	call   QWORD PTR [rip+0x4814]        # 0x140015368
   140010b54:	test   al,al
   140010b56:	je     0x140010c4c
   140010b5c:	mov    rcx,rbx
   140010b5f:	call   0x140010810
   140010b64:	cmp    eax,0x1d
   140010b67:	jne    0x140010c1d
   140010b6d:	or     rcx,0xffffffffffffffff
   140010b71:	lea    rdx,[rip+0x6ab8]        # 0x140017630
   140010b78:	xor    eax,eax
   140010b7a:	mov    rdi,rdx
   140010b7d:	mov    QWORD PTR [rsp+0x98],rdx
   140010b85:	or     r13d,0x1
   140010b89:	repnz scas al,BYTE PTR es:[rdi]
   140010b8b:	not    rcx
   140010b8e:	dec    rcx
   140010b91:	mov    DWORD PTR [rsp+0x90],ecx
   140010b98:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   140010ba0:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   140010ba9:	cmp    BYTE PTR [rbx+0x8c],al
   140010baf:	je     0x140010bc2
   140010bb1:	lea    rdx,[rbx+0x10]
   140010bb5:	lea    rcx,[rsp+0x50]
   140010bba:	call   QWORD PTR [rip+0x4808]        # 0x1400153c8
   140010bc0:	jmp    0x140010c01
   140010bc2:	cmp    DWORD PTR [rbx+0x80],0x41
   140010bc9:	jne    0x140010beb
   140010bcb:	mov    r8d,DWORD PTR [rbx+0x84]
   140010bd2:	mov    rdx,QWORD PTR [rbx+0x50]
   140010bd6:	lea    rcx,[rsp+0x50]
   140010bdb:	sub    r8d,0x2
   140010bdf:	add    rdx,0x2
   140010be3:	call   QWORD PTR [rip+0x4637]        # 0x140015220
   140010be9:	jmp    0x140010c01
   140010beb:	mov    r8d,DWORD PTR [rbx+0x84]
   140010bf2:	mov    rdx,QWORD PTR [rbx+0x50]
   140010bf6:	lea    rcx,[rsp+0x50]
   140010bfb:	call   QWORD PTR [rip+0x461f]        # 0x140015220
   140010c01:	lea    rdx,[rsp+0xf0]
   140010c09:	lea    rcx,[rsp+0x50]
   140010c0e:	call   QWORD PTR [rip+0x4754]        # 0x140015368
   140010c14:	test   al,al
   140010c16:	je     0x140010c1d
   140010c18:	xor    dil,dil
   140010c1b:	jmp    0x140010c20
   140010c1d:	mov    dil,0x1
   140010c20:	test   r13b,0x1
   140010c24:	je     0x140010c35
   140010c26:	lea    rcx,[rsp+0x50]
   140010c2b:	and    r13d,0xfffffffe
   140010c2f:	call   QWORD PTR [rip+0x4783]        # 0x1400153b8
   140010c35:	test   dil,dil
   140010c38:	jne    0x140011194
   140010c3e:	mov    rax,QWORD PTR [r15]
   140010c41:	mov    rcx,r15
   140010c44:	call   QWORD PTR [rax+0x8]
   140010c47:	jmp    0x140011115
   140010c4c:	mov    rcx,rbx
   140010c4f:	call   0x140010810
   140010c54:	lea    rcx,[rsp+0x38]
   140010c59:	call   QWORD PTR [rip+0x4591]        # 0x1400151f0
   140010c5f:	lea    rcx,[rsp+0x40]
   140010c64:	call   QWORD PTR [rip+0x4586]        # 0x1400151f0
   140010c6a:	mov    eax,DWORD PTR [rbx+0x80]
   140010c70:	xor    r14b,r14b
   140010c73:	cmp    eax,0x41
   140010c76:	jne    0x140010d79
   140010c7c:	cmp    BYTE PTR [rbx+0x8c],0x0
   140010c83:	mov    r14b,0x1
   140010c86:	je     0x140010c99
   140010c88:	lea    rdx,[rbx+0x10]
   140010c8c:	lea    rcx,[rsp+0x68]
   140010c91:	call   QWORD PTR [rip+0x4731]        # 0x1400153c8
   140010c97:	jmp    0x140010cb7
   140010c99:	mov    r8d,DWORD PTR [rbx+0x84]
   140010ca0:	mov    rdx,QWORD PTR [rbx+0x50]
   140010ca4:	lea    rcx,[rsp+0x68]
   140010ca9:	sub    r8d,0x2
   140010cad:	add    rdx,0x2
   140010cb1:	call   QWORD PTR [rip+0x4569]        # 0x140015220
   140010cb7:	lea    rdx,[rsp+0x68]
   140010cbc:	lea    rcx,[rsp+0x38]
   140010cc1:	call   QWORD PTR [rip+0x44f1]        # 0x1400151b8
   140010cc7:	lea    rcx,[rsp+0x68]
   140010ccc:	call   QWORD PTR [rip+0x46e6]        # 0x1400153b8
   140010cd2:	or     rcx,0xffffffffffffffff
   140010cd6:	lea    rdx,[rip+0x474f]        # 0x14001542c
   140010cdd:	mov    rdi,rdx
   140010ce0:	xor    eax,eax
   140010ce2:	mov    QWORD PTR [rsp+0xb8],rdx
   140010cea:	repnz scas al,BYTE PTR es:[rdi]
   140010cec:	lea    r8d,[rax+0x1]
   140010cf0:	lea    rdx,[rsp+0x110]
   140010cf8:	not    rcx
   140010cfb:	dec    rcx
   140010cfe:	mov    DWORD PTR [rsp+0xb0],ecx
   140010d05:	lea    rcx,[rsp+0x38]
   140010d0a:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   140010d12:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   140010d1b:	call   QWORD PTR [rip+0x4567]        # 0x140015288
   140010d21:	test   al,al
   140010d23:	jne    0x140010f0f
   140010d29:	lea    r8,[rip+0x68e0]        # 0x140017610
   140010d30:	lea    rdx,[rip+0x6541]        # 0x140017278
   140010d37:	lea    rcx,[rsp+0x180]
   140010d3f:	xor    r9d,r9d
   140010d42:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140010d4a:	call   QWORD PTR [rip+0x4478]        # 0x1400151c8
   140010d50:	lea    rcx,[rbp+0x18]
   140010d54:	mov    rdx,rax
   140010d57:	call   QWORD PTR [rip+0x445b]        # 0x1400151b8
   140010d5d:	lea    rcx,[rsp+0x180]
   140010d65:	call   QWORD PTR [rip+0x464d]        # 0x1400153b8
   140010d6b:	mov    edx,DWORD PTR [rbx+0x88]
   140010d71:	mov    DWORD PTR [rbp+0xc],edx
   140010d74:	jmp    0x1400112f3
   140010d79:	cmp    eax,0x1d
   140010d7c:	jne    0x140010f0f
   140010d82:	mov    edx,DWORD PTR [rbx+0x80]
   140010d88:	lea    rcx,[rip+0x6551]        # 0x1400172e0
   140010d8f:	mov    eax,0x1d
   140010d94:	cmp    eax,edx
   140010d96:	je     0x140010df3
   140010d98:	mov    eax,DWORD PTR [rcx+0x4]
   140010d9b:	add    rcx,0x4
   140010d9f:	test   eax,eax
   140010da1:	jne    0x140010d94
   140010da3:	lea    r8,[rip+0x684e]        # 0x1400175f8
   140010daa:	lea    rdx,[rip+0x64c7]        # 0x140017278
   140010db1:	lea    rcx,[rsp+0x180]
   140010db9:	xor    r9d,r9d
   140010dbc:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140010dc4:	call   QWORD PTR [rip+0x43fe]        # 0x1400151c8
   140010dca:	lea    rcx,[rbp+0x18]
   140010dce:	mov    rdx,rax
   140010dd1:	call   QWORD PTR [rip+0x43e1]        # 0x1400151b8
   140010dd7:	lea    rcx,[rsp+0x180]
   140010ddf:	call   QWORD PTR [rip+0x45d3]        # 0x1400153b8
   140010de5:	mov    edx,DWORD PTR [rbx+0x88]
   140010deb:	mov    DWORD PTR [rbp+0xc],edx
   140010dee:	jmp    0x1400112f3
   140010df3:	cmp    BYTE PTR [rbx+0x8c],0x0
   140010dfa:	je     0x140010e0d
   140010dfc:	lea    rdx,[rbx+0x10]
   140010e00:	lea    rcx,[rsp+0x60]
   140010e05:	call   QWORD PTR [rip+0x45bd]        # 0x1400153c8
   140010e0b:	jmp    0x140010e48
   140010e0d:	cmp    edx,0x41
   140010e10:	jne    0x140010e32
   140010e12:	mov    r8d,DWORD PTR [rbx+0x84]
   140010e19:	mov    rdx,QWORD PTR [rbx+0x50]
   140010e1d:	lea    rcx,[rsp+0x60]
   140010e22:	sub    r8d,0x2
   140010e26:	add    rdx,0x2
   140010e2a:	call   QWORD PTR [rip+0x43f0]        # 0x140015220
   140010e30:	jmp    0x140010e48
   140010e32:	mov    r8d,DWORD PTR [rbx+0x84]
   140010e39:	mov    rdx,QWORD PTR [rbx+0x50]
   140010e3d:	lea    rcx,[rsp+0x60]
   140010e42:	call   QWORD PTR [rip+0x43d8]        # 0x140015220
   140010e48:	lea    rdx,[rsp+0x60]
   140010e4d:	lea    rcx,[rsp+0x38]
   140010e52:	call   QWORD PTR [rip+0x43c0]        # 0x140015218
   140010e58:	lea    rcx,[rsp+0x60]
   140010e5d:	call   QWORD PTR [rip+0x4555]        # 0x1400153b8
   140010e63:	mov    rcx,rbx
   140010e66:	call   0x140010810
   140010e6b:	cmp    DWORD PTR [rbx+0x88],esi
   140010e71:	jne    0x140010da3
   140010e77:	cmp    DWORD PTR [rbx+0x80],0xf
   140010e7e:	jne    0x140010eb7
   140010e80:	lea    rcx,[rsp+0x180]
   140010e88:	mov    dl,0x2e
   140010e8a:	call   QWORD PTR [rip+0x4340]        # 0x1400151d0
   140010e90:	lea    rcx,[rsp+0x38]
   140010e95:	movzx  edx,WORD PTR [rax]
   140010e98:	call   QWORD PTR [rip+0x43e2]        # 0x140015280
   140010e9e:	mov    rcx,rbx
   140010ea1:	call   0x140010810
   140010ea6:	cmp    DWORD PTR [rbx+0x88],esi
   140010eac:	je     0x140010d82
   140010eb2:	jmp    0x140010da3
   140010eb7:	cmp    DWORD PTR [rbx+0x80],0x2f
   140010ebe:	jne    0x140011144
   140010ec4:	cmp    BYTE PTR [rbx+0x8c],0x0
   140010ecb:	je     0x140010ede
   140010ecd:	lea    rdx,[rbx+0x10]
   140010ed1:	lea    rcx,[rsp+0x70]
   140010ed6:	call   QWORD PTR [rip+0x44ec]        # 0x1400153c8
   140010edc:	jmp    0x140010ef4
   140010ede:	mov    r8d,DWORD PTR [rbx+0x84]
   140010ee5:	mov    rdx,QWORD PTR [rbx+0x50]
   140010ee9:	lea    rcx,[rsp+0x70]
   140010eee:	call   QWORD PTR [rip+0x432c]        # 0x140015220
   140010ef4:	lea    rdx,[rsp+0x70]
   140010ef9:	lea    rcx,[rsp+0x40]
   140010efe:	call   QWORD PTR [rip+0x42b4]        # 0x1400151b8
   140010f04:	lea    rcx,[rsp+0x70]
   140010f09:	call   QWORD PTR [rip+0x44a9]        # 0x1400153b8
   140010f0f:	mov    rcx,rbx
   140010f12:	call   0x140010810
   140010f17:	cmp    eax,0x1d
   140010f1a:	jne    0x140010fd8
   140010f20:	or     rcx,0xffffffffffffffff
   140010f24:	lea    rdx,[rip+0x66c9]        # 0x1400175f4
   140010f2b:	xor    eax,eax
   140010f2d:	mov    rdi,rdx
   140010f30:	mov    QWORD PTR [rsp+0xd8],rdx
   140010f38:	or     r13d,0x2
   140010f3c:	repnz scas al,BYTE PTR es:[rdi]
   140010f3e:	not    rcx
   140010f41:	dec    rcx
   140010f44:	mov    DWORD PTR [rsp+0xd0],ecx
   140010f4b:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   140010f53:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   140010f5c:	cmp    BYTE PTR [rbx+0x8c],al
   140010f62:	je     0x140010f75
   140010f64:	lea    rdx,[rbx+0x10]
   140010f68:	lea    rcx,[rsp+0x58]
   140010f6d:	call   QWORD PTR [rip+0x4455]        # 0x1400153c8
   140010f73:	jmp    0x140010fb4
   140010f75:	cmp    DWORD PTR [rbx+0x80],0x41
   140010f7c:	jne    0x140010f9e
   140010f7e:	mov    r8d,DWORD PTR [rbx+0x84]
   140010f85:	mov    rdx,QWORD PTR [rbx+0x50]
   140010f89:	lea    rcx,[rsp+0x58]
   140010f8e:	sub    r8d,0x2
   140010f92:	add    rdx,0x2
   140010f96:	call   QWORD PTR [rip+0x4284]        # 0x140015220
   140010f9c:	jmp    0x140010fb4
   140010f9e:	mov    r8d,DWORD PTR [rbx+0x84]
   140010fa5:	mov    rdx,QWORD PTR [rbx+0x50]
   140010fa9:	lea    rcx,[rsp+0x58]
   140010fae:	call   QWORD PTR [rip+0x426c]        # 0x140015220
   140010fb4:	lea    rdx,[rsp+0x130]
   140010fbc:	lea    rcx,[rsp+0x58]
   140010fc1:	call   QWORD PTR [rip+0x43a1]        # 0x140015368
   140010fc7:	test   al,al
   140010fc9:	je     0x140010fd8
   140010fcb:	cmp    DWORD PTR [rbx+0x88],esi
   140010fd1:	jne    0x140010fd8
   140010fd3:	xor    dil,dil
   140010fd6:	jmp    0x140010fdb
   140010fd8:	mov    dil,0x1
   140010fdb:	test   r13b,0x2
   140010fdf:	je     0x140010ff0
   140010fe1:	lea    rcx,[rsp+0x58]
   140010fe6:	and    r13d,0xfffffffd
   140010fea:	call   QWORD PTR [rip+0x43c8]        # 0x1400153b8
   140010ff0:	test   dil,dil
   140010ff3:	jne    0x140011354
   140010ff9:	mov    rcx,rbx
   140010ffc:	call   0x140010810
   140011001:	cmp    eax,0x1d
   140011004:	jne    0x14001125f
   14001100a:	cmp    DWORD PTR [rbx+0x88],esi
   140011010:	jne    0x14001125f
   140011016:	cmp    BYTE PTR [rbx+0x8c],dil
   14001101d:	je     0x140011030
   14001101f:	lea    rdx,[rbx+0x10]
   140011023:	lea    rcx,[rsp+0x48]
   140011028:	call   QWORD PTR [rip+0x439a]        # 0x1400153c8
   14001102e:	jmp    0x14001106f
   140011030:	cmp    DWORD PTR [rbx+0x80],0x41
   140011037:	jne    0x140011059
   140011039:	mov    r8d,DWORD PTR [rbx+0x84]
   140011040:	mov    rdx,QWORD PTR [rbx+0x50]
   140011044:	lea    rcx,[rsp+0x48]
   140011049:	sub    r8d,0x2
   14001104d:	add    rdx,0x2
   140011051:	call   QWORD PTR [rip+0x41c9]        # 0x140015220
   140011057:	jmp    0x14001106f
   140011059:	mov    r8d,DWORD PTR [rbx+0x84]
   140011060:	mov    rdx,QWORD PTR [rbx+0x50]
   140011064:	lea    rcx,[rsp+0x48]
   140011069:	call   QWORD PTR [rip+0x41b1]        # 0x140015220
   14001106f:	lea    rdx,[rsp+0x198]
   140011077:	lea    rcx,[rsp+0x48]
   14001107c:	xor    r8d,r8d
   14001107f:	call   QWORD PTR [rip+0x41f3]        # 0x140015278
   140011085:	movzx  ecx,WORD PTR [rax]
   140011088:	cmp    ecx,0x5a
   14001108b:	ja     0x140011092
   14001108d:	cmp    ecx,0x41
   140011090:	jae    0x1400110aa
   140011092:	cmp    ecx,0x7f
   140011095:	jbe    0x1400111f4
   14001109b:	call   QWORD PTR [rip+0x4197]        # 0x140015238
   1400110a1:	cmp    eax,0xe
   1400110a4:	jne    0x1400111f4
   1400110aa:	test   r14b,r14b
   1400110ad:	je     0x1400110cc
   1400110af:	mov    rax,QWORD PTR [r15]
   1400110b2:	lea    r8,[rsp+0x48]
   1400110b7:	lea    rdx,[rsp+0x38]
   1400110bc:	mov    r9d,esi
   1400110bf:	mov    rcx,r15
   1400110c2:	mov    DWORD PTR [rsp+0x20],r12d
   1400110c7:	call   QWORD PTR [rax+0x10]
   1400110ca:	jmp    0x1400110ed
   1400110cc:	mov    rax,QWORD PTR [r15]
   1400110cf:	lea    r9,[rsp+0x48]
   1400110d4:	lea    r8,[rsp+0x40]
   1400110d9:	lea    rdx,[rsp+0x38]
   1400110de:	mov    rcx,r15
   1400110e1:	mov    DWORD PTR [rsp+0x28],r12d
   1400110e6:	mov    DWORD PTR [rsp+0x20],esi
   1400110ea:	call   QWORD PTR [rax+0x18]
   1400110ed:	lea    rcx,[rsp+0x48]
   1400110f2:	call   QWORD PTR [rip+0x42c0]        # 0x1400153b8
   1400110f8:	lea    rcx,[rsp+0x40]
   1400110fd:	call   QWORD PTR [rip+0x42b5]        # 0x1400153b8
   140011103:	lea    rcx,[rsp+0x38]
   140011108:	call   QWORD PTR [rip+0x42aa]        # 0x1400153b8
   14001110e:	lea    r14,[rip+0x652b]        # 0x140017640
   140011115:	cmp    DWORD PTR [rbx+0x88],esi
   14001111b:	jne    0x140011194
   14001111d:	mov    rcx,rbx
   140011120:	call   0x140010810
   140011125:	lea    rcx,[rsp+0x30]
   14001112a:	call   QWORD PTR [rip+0x4288]        # 0x1400153b8
   140011130:	cmp    DWORD PTR [rbx+0x80],0xf
   140011137:	je     0x1400109f0
   14001113d:	mov    al,0x1
   14001113f:	jmp    0x140011326
   140011144:	lea    r8,[rip+0x6485]        # 0x1400175d0
   14001114b:	lea    rdx,[rip+0x6126]        # 0x140017278
   140011152:	lea    rcx,[rsp+0x180]
   14001115a:	xor    r9d,r9d
   14001115d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140011165:	call   QWORD PTR [rip+0x405d]        # 0x1400151c8
   14001116b:	lea    rcx,[rbp+0x18]
   14001116f:	mov    rdx,rax
   140011172:	call   QWORD PTR [rip+0x4040]        # 0x1400151b8
   140011178:	lea    rcx,[rsp+0x180]
   140011180:	call   QWORD PTR [rip+0x4232]        # 0x1400153b8
   140011186:	mov    edx,DWORD PTR [rbx+0x88]
   14001118c:	mov    DWORD PTR [rbp+0xc],edx
   14001118f:	jmp    0x1400112f3
   140011194:	lea    r8,[rip+0x60cd]        # 0x140017268
   14001119b:	lea    rdx,[rip+0x60d6]        # 0x140017278
   1400111a2:	lea    rcx,[rsp+0x180]
   1400111aa:	xor    r9d,r9d
   1400111ad:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400111b5:	call   QWORD PTR [rip+0x400d]        # 0x1400151c8
   1400111bb:	lea    rcx,[rbp+0x18]
   1400111bf:	mov    rdx,rax
   1400111c2:	call   QWORD PTR [rip+0x3ff0]        # 0x1400151b8
   1400111c8:	lea    rcx,[rsp+0x180]
   1400111d0:	call   QWORD PTR [rip+0x41e2]        # 0x1400153b8
   1400111d6:	mov    edx,DWORD PTR [rbx+0x88]
   1400111dc:	mov    DWORD PTR [rbp+0xc],edx
   1400111df:	mov    rax,QWORD PTR [rbx+0x50]
   1400111e3:	sub    rax,QWORD PTR [rbx+0x48]
   1400111e7:	sar    rax,1
   1400111ea:	inc    eax
   1400111ec:	mov    DWORD PTR [rbp+0x10],eax
   1400111ef:	jmp    0x140011319
   1400111f4:	lea    r8,[rip+0x63b5]        # 0x1400175b0
   1400111fb:	lea    rdx,[rip+0x6076]        # 0x140017278
   140011202:	lea    rcx,[rsp+0x180]
   14001120a:	xor    r9d,r9d
   14001120d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140011215:	call   QWORD PTR [rip+0x3fad]        # 0x1400151c8
   14001121b:	lea    rcx,[rbp+0x18]
   14001121f:	mov    rdx,rax
   140011222:	call   QWORD PTR [rip+0x3f90]        # 0x1400151b8
   140011228:	lea    rcx,[rsp+0x180]
   140011230:	call   QWORD PTR [rip+0x4182]        # 0x1400153b8
   140011236:	mov    edx,DWORD PTR [rbx+0x88]
   14001123c:	lea    rcx,[rsp+0x48]
   140011241:	mov    DWORD PTR [rbp+0xc],edx
   140011244:	mov    rax,QWORD PTR [rbx+0x50]
   140011248:	sub    rax,QWORD PTR [rbx+0x48]
   14001124c:	sar    rax,1
   14001124f:	inc    eax
   140011251:	mov    DWORD PTR [rbp+0x10],eax
   140011254:	call   QWORD PTR [rip+0x415e]        # 0x1400153b8
   14001125a:	jmp    0x140011303
   14001125f:	test   r14b,r14b
   140011262:	je     0x1400112a8
   140011264:	lea    r8,[rip+0x631d]        # 0x140017588
   14001126b:	lea    rdx,[rip+0x6006]        # 0x140017278
   140011272:	lea    rcx,[rsp+0x180]
   14001127a:	xor    r9d,r9d
   14001127d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140011285:	call   QWORD PTR [rip+0x3f3d]        # 0x1400151c8
   14001128b:	lea    rcx,[rbp+0x18]
   14001128f:	mov    rdx,rax
   140011292:	call   QWORD PTR [rip+0x3f20]        # 0x1400151b8
   140011298:	lea    rcx,[rsp+0x180]
   1400112a0:	call   QWORD PTR [rip+0x4112]        # 0x1400153b8
   1400112a6:	jmp    0x1400112ea
   1400112a8:	lea    r8,[rip+0x62b1]        # 0x140017560
   1400112af:	lea    rdx,[rip+0x5fc2]        # 0x140017278
   1400112b6:	lea    rcx,[rsp+0x180]
   1400112be:	xor    r9d,r9d
   1400112c1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400112c9:	call   QWORD PTR [rip+0x3ef9]        # 0x1400151c8
   1400112cf:	lea    rcx,[rbp+0x18]
   1400112d3:	mov    rdx,rax
   1400112d6:	call   QWORD PTR [rip+0x3edc]        # 0x1400151b8
   1400112dc:	lea    rcx,[rsp+0x180]
   1400112e4:	call   QWORD PTR [rip+0x40ce]        # 0x1400153b8
   1400112ea:	mov    eax,DWORD PTR [rbx+0x88]
   1400112f0:	mov    DWORD PTR [rbp+0xc],eax
   1400112f3:	mov    rax,QWORD PTR [rbx+0x50]
   1400112f7:	sub    rax,QWORD PTR [rbx+0x48]
   1400112fb:	sar    rax,1
   1400112fe:	inc    eax
   140011300:	mov    DWORD PTR [rbp+0x10],eax
   140011303:	lea    rcx,[rsp+0x40]
   140011308:	call   QWORD PTR [rip+0x40aa]        # 0x1400153b8
   14001130e:	lea    rcx,[rsp+0x38]
   140011313:	call   QWORD PTR [rip+0x409f]        # 0x1400153b8
   140011319:	lea    rcx,[rsp+0x30]
   14001131e:	call   QWORD PTR [rip+0x4094]        # 0x1400153b8
   140011324:	xor    al,al
   140011326:	mov    rdi,QWORD PTR [rsp+0x150]
   14001132e:	mov    r12,QWORD PTR [rsp+0x148]
   140011336:	mov    rsi,QWORD PTR [rsp+0x188]
   14001133e:	mov    r14,QWORD PTR [rsp+0x140]
   140011346:	add    rsp,0x158
   14001134d:	pop    r15
   14001134f:	pop    r13
   140011351:	pop    rbp
   140011352:	pop    rbx
   140011353:	ret    
   140011354:	test   r14b,r14b
   140011357:	je     0x14001139d
   140011359:	lea    r8,[rip+0x6228]        # 0x140017588
   140011360:	lea    rdx,[rip+0x5f11]        # 0x140017278
   140011367:	lea    rcx,[rsp+0x180]
   14001136f:	xor    r9d,r9d
   140011372:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001137a:	call   QWORD PTR [rip+0x3e48]        # 0x1400151c8
   140011380:	lea    rcx,[rbp+0x18]
   140011384:	mov    rdx,rax
   140011387:	call   QWORD PTR [rip+0x3e2b]        # 0x1400151b8
   14001138d:	lea    rcx,[rsp+0x180]
   140011395:	call   QWORD PTR [rip+0x401d]        # 0x1400153b8
   14001139b:	jmp    0x1400113df
   14001139d:	lea    r8,[rip+0x61bc]        # 0x140017560
   1400113a4:	lea    rdx,[rip+0x5ecd]        # 0x140017278
   1400113ab:	lea    rcx,[rsp+0x180]
   1400113b3:	xor    r9d,r9d
   1400113b6:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400113be:	call   QWORD PTR [rip+0x3e04]        # 0x1400151c8
   1400113c4:	lea    rcx,[rbp+0x18]
   1400113c8:	mov    rdx,rax
   1400113cb:	call   QWORD PTR [rip+0x3de7]        # 0x1400151b8
   1400113d1:	lea    rcx,[rsp+0x180]
   1400113d9:	call   QWORD PTR [rip+0x3fd9]        # 0x1400153b8
   1400113df:	mov    eax,DWORD PTR [rbx+0x88]
   1400113e5:	cmp    eax,esi
   1400113e7:	je     0x1400112f0
   1400113ed:	mov    DWORD PTR [rbp+0xc],esi
   1400113f0:	mov    DWORD PTR [rbp+0x10],r12d
   1400113f4:	jmp    0x140011303
   1400113f9:	int3   
   1400113fa:	int3   
   1400113fb:	int3   
   1400113fc:	int3   
   1400113fd:	int3   
   1400113fe:	int3   
   1400113ff:	int3   
   140011400:	xor    eax,eax
   140011402:	ret    
   140011403:	int3   
   140011404:	int3   
   140011405:	int3   
   140011406:	int3   
   140011407:	int3   
   140011408:	int3   
   140011409:	int3   
   14001140a:	int3   
   14001140b:	int3   
   14001140c:	int3   
   14001140d:	int3   
   14001140e:	int3   
   14001140f:	int3   
   140011410:	mov    rax,rcx
   140011413:	ret    
   140011414:	int3   
   140011415:	int3   
   140011416:	int3   
   140011417:	int3   
   140011418:	int3   
   140011419:	int3   
   14001141a:	int3   
   14001141b:	int3   
   14001141c:	int3   
   14001141d:	int3   
   14001141e:	int3   
   14001141f:	int3   
   140011420:	mov    QWORD PTR [rsp+0x10],rbx
   140011425:	push   rsi
   140011426:	sub    rsp,0x20
   14001142a:	mov    rax,QWORD PTR [rdx]
   14001142d:	mov    rbx,rdx
   140011430:	mov    rsi,rcx
   140011433:	mov    rdx,rcx
   140011436:	mov    rcx,rbx
   140011439:	call   QWORD PTR [rax+0x1f8]
   14001143f:	test   al,al
   140011441:	je     0x14001147e
   140011443:	mov    QWORD PTR [rsp+0x30],rdi
   140011448:	mov    rdi,QWORD PTR [rsi+0x10]
   14001144c:	test   rdi,rdi
   14001144f:	je     0x140011479
   140011451:	mov    rax,QWORD PTR [rbx]
   140011454:	mov    rdx,rdi
   140011457:	mov    rcx,rbx
   14001145a:	call   QWORD PTR [rax+0x8]
   14001145d:	test   al,al
   14001145f:	je     0x14001146d
   140011461:	mov    rax,QWORD PTR [rdi]
   140011464:	mov    rdx,rbx
   140011467:	mov    rcx,rdi
   14001146a:	call   QWORD PTR [rax+0x28]
   14001146d:	mov    rax,QWORD PTR [rbx]
   140011470:	mov    rdx,rdi
   140011473:	mov    rcx,rbx
   140011476:	call   QWORD PTR [rax+0x10]
   140011479:	mov    rdi,QWORD PTR [rsp+0x30]
   14001147e:	mov    rax,QWORD PTR [rbx]
   140011481:	mov    rdx,rsi
   140011484:	mov    rcx,rbx
   140011487:	mov    rbx,QWORD PTR [rsp+0x38]
   14001148c:	add    rsp,0x20
   140011490:	pop    rsi
   140011491:	rex.W jmp QWORD PTR [rax+0x4d8]
   140011498:	int3   
   140011499:	int3   
   14001149a:	int3   
   14001149b:	int3   
   14001149c:	int3   
   14001149d:	int3   
   14001149e:	int3   
   14001149f:	int3   
   1400114a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400114a5:	push   rdi
   1400114a6:	sub    rsp,0x20
   1400114aa:	mov    rax,QWORD PTR [rdx]
   1400114ad:	mov    rdi,rdx
   1400114b0:	mov    rbx,rcx
   1400114b3:	mov    rdx,rcx
   1400114b6:	mov    rcx,rdi
   1400114b9:	call   QWORD PTR [rax+0x270]
   1400114bf:	mov    r11,QWORD PTR [rdi]
   1400114c2:	mov    rdx,rbx
   1400114c5:	mov    rcx,rdi
   1400114c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400114cd:	add    rsp,0x20
   1400114d1:	pop    rdi
   1400114d2:	rex.WB jmp QWORD PTR [r11+0x550]
   1400114d9:	int3   
   1400114da:	int3   
   1400114db:	int3   
   1400114dc:	int3   
   1400114dd:	int3   
   1400114de:	int3   
   1400114df:	int3   
   1400114e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400114e5:	push   rdi
   1400114e6:	sub    rsp,0x20
   1400114ea:	mov    rax,QWORD PTR [rdx]
   1400114ed:	mov    rdi,rdx
   1400114f0:	mov    rbx,rcx
   1400114f3:	mov    rdx,rcx
   1400114f6:	mov    rcx,rdi
   1400114f9:	call   QWORD PTR [rax+0x268]
   1400114ff:	mov    r11,QWORD PTR [rdi]
   140011502:	mov    rdx,rbx
   140011505:	mov    rcx,rdi
   140011508:	mov    rbx,QWORD PTR [rsp+0x30]
   14001150d:	add    rsp,0x20
   140011511:	pop    rdi
   140011512:	rex.WB jmp QWORD PTR [r11+0x548]
   140011519:	int3   
   14001151a:	int3   
   14001151b:	int3   
   14001151c:	int3   
   14001151d:	int3   
   14001151e:	int3   
   14001151f:	int3   
   140011520:	mov    QWORD PTR [rsp+0x8],rbx
   140011525:	push   rdi
   140011526:	sub    rsp,0x20
   14001152a:	mov    rax,QWORD PTR [rdx]
   14001152d:	mov    rdi,rdx
   140011530:	mov    rbx,rcx
   140011533:	mov    rdx,rcx
   140011536:	mov    rcx,rdi
   140011539:	call   QWORD PTR [rax+0x260]
   14001153f:	mov    r11,QWORD PTR [rdi]
   140011542:	mov    rdx,rbx
   140011545:	mov    rcx,rdi
   140011548:	mov    rbx,QWORD PTR [rsp+0x30]
   14001154d:	add    rsp,0x20
   140011551:	pop    rdi
   140011552:	rex.WB jmp QWORD PTR [r11+0x540]
   140011559:	int3   
   14001155a:	int3   
   14001155b:	int3   
   14001155c:	int3   
   14001155d:	int3   
   14001155e:	int3   
   14001155f:	int3   
   140011560:	mov    QWORD PTR [rsp+0x8],rbx
   140011565:	push   rdi
   140011566:	sub    rsp,0x20
   14001156a:	mov    rax,QWORD PTR [rdx]
   14001156d:	mov    rdi,rdx
   140011570:	mov    rbx,rcx
   140011573:	mov    rdx,rcx
   140011576:	mov    rcx,rdi
   140011579:	call   QWORD PTR [rax+0x258]
   14001157f:	mov    r11,QWORD PTR [rdi]
   140011582:	mov    rdx,rbx
   140011585:	mov    rcx,rdi
   140011588:	mov    rbx,QWORD PTR [rsp+0x30]
   14001158d:	add    rsp,0x20
   140011591:	pop    rdi
   140011592:	rex.WB jmp QWORD PTR [r11+0x538]
   140011599:	int3   
   14001159a:	int3   
   14001159b:	int3   
   14001159c:	int3   
   14001159d:	int3   
   14001159e:	int3   
   14001159f:	int3   
   1400115a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400115a5:	push   rdi
   1400115a6:	sub    rsp,0x20
   1400115aa:	mov    rax,QWORD PTR [rdx]
   1400115ad:	mov    rdi,rdx
   1400115b0:	mov    rbx,rcx
   1400115b3:	mov    rdx,rcx
   1400115b6:	mov    rcx,rdi
   1400115b9:	call   QWORD PTR [rax+0x250]
   1400115bf:	mov    r11,QWORD PTR [rdi]
   1400115c2:	mov    rdx,rbx
   1400115c5:	mov    rcx,rdi
   1400115c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400115cd:	add    rsp,0x20
   1400115d1:	pop    rdi
   1400115d2:	rex.WB jmp QWORD PTR [r11+0x530]
   1400115d9:	int3   
   1400115da:	int3   
   1400115db:	int3   
   1400115dc:	int3   
   1400115dd:	int3   
   1400115de:	int3   
   1400115df:	int3   
   1400115e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400115e5:	push   rdi
   1400115e6:	sub    rsp,0x20
   1400115ea:	mov    rax,QWORD PTR [rdx]
   1400115ed:	mov    rdi,rdx
   1400115f0:	mov    rbx,rcx
   1400115f3:	mov    rdx,rcx
   1400115f6:	mov    rcx,rdi
   1400115f9:	call   QWORD PTR [rax+0x248]
   1400115ff:	mov    r11,QWORD PTR [rdi]
   140011602:	mov    rdx,rbx
   140011605:	mov    rcx,rdi
   140011608:	mov    rbx,QWORD PTR [rsp+0x30]
   14001160d:	add    rsp,0x20
   140011611:	pop    rdi
   140011612:	rex.WB jmp QWORD PTR [r11+0x528]
   140011619:	int3   
   14001161a:	int3   
   14001161b:	int3   
   14001161c:	int3   
   14001161d:	int3   
   14001161e:	int3   
   14001161f:	int3   
   140011620:	mov    QWORD PTR [rsp+0x8],rbx
   140011625:	push   rdi
   140011626:	sub    rsp,0x20
   14001162a:	mov    rax,QWORD PTR [rdx]
   14001162d:	mov    rdi,rdx
   140011630:	mov    rbx,rcx
   140011633:	mov    rdx,rcx
   140011636:	mov    rcx,rdi
   140011639:	call   QWORD PTR [rax+0x240]
   14001163f:	mov    r11,QWORD PTR [rdi]
   140011642:	mov    rdx,rbx
   140011645:	mov    rcx,rdi
   140011648:	mov    rbx,QWORD PTR [rsp+0x30]
   14001164d:	add    rsp,0x20
   140011651:	pop    rdi
   140011652:	rex.WB jmp QWORD PTR [r11+0x520]
   140011659:	int3   
   14001165a:	int3   
   14001165b:	int3   
   14001165c:	int3   
   14001165d:	int3   
   14001165e:	int3   
   14001165f:	int3   
   140011660:	mov    QWORD PTR [rsp+0x8],rbx
   140011665:	push   rdi
   140011666:	sub    rsp,0x20
   14001166a:	mov    rax,QWORD PTR [rdx]
   14001166d:	mov    rdi,rdx
   140011670:	mov    rbx,rcx
   140011673:	mov    rdx,rcx
   140011676:	mov    rcx,rdi
   140011679:	call   QWORD PTR [rax+0x238]
   14001167f:	mov    r11,QWORD PTR [rdi]
   140011682:	mov    rdx,rbx
   140011685:	mov    rcx,rdi
   140011688:	mov    rbx,QWORD PTR [rsp+0x30]
   14001168d:	add    rsp,0x20
   140011691:	pop    rdi
   140011692:	rex.WB jmp QWORD PTR [r11+0x518]
   140011699:	int3   
   14001169a:	int3   
   14001169b:	int3   
   14001169c:	int3   
   14001169d:	int3   
   14001169e:	int3   
   14001169f:	int3   
   1400116a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400116a5:	push   rsi
   1400116a6:	sub    rsp,0x20
   1400116aa:	mov    rax,QWORD PTR [rdx]
   1400116ad:	mov    rbx,rdx
   1400116b0:	mov    rsi,rcx
   1400116b3:	mov    rdx,rcx
   1400116b6:	mov    rcx,rbx
   1400116b9:	call   QWORD PTR [rax+0x230]
   1400116bf:	test   al,al
   1400116c1:	je     0x14001172f
   1400116c3:	mov    QWORD PTR [rsp+0x30],rdi
   1400116c8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400116cc:	test   rdi,rdi
   1400116cf:	je     0x1400116f9
   1400116d1:	mov    rax,QWORD PTR [rbx]
   1400116d4:	mov    rdx,rdi
   1400116d7:	mov    rcx,rbx
   1400116da:	call   QWORD PTR [rax+0x8]
   1400116dd:	test   al,al
   1400116df:	je     0x1400116ed
   1400116e1:	mov    rax,QWORD PTR [rdi]
   1400116e4:	mov    rdx,rbx
   1400116e7:	mov    rcx,rdi
   1400116ea:	call   QWORD PTR [rax+0x28]
   1400116ed:	mov    rax,QWORD PTR [rbx]
   1400116f0:	mov    rdx,rdi
   1400116f3:	mov    rcx,rbx
   1400116f6:	call   QWORD PTR [rax+0x10]
   1400116f9:	mov    rdi,QWORD PTR [rsi+0x18]
   1400116fd:	test   rdi,rdi
   140011700:	je     0x14001172a
   140011702:	mov    rax,QWORD PTR [rbx]
   140011705:	mov    rdx,rdi
   140011708:	mov    rcx,rbx
   14001170b:	call   QWORD PTR [rax+0x8]
   14001170e:	test   al,al
   140011710:	je     0x14001171e
   140011712:	mov    rax,QWORD PTR [rdi]
   140011715:	mov    rdx,rbx
   140011718:	mov    rcx,rdi
   14001171b:	call   QWORD PTR [rax+0x28]
   14001171e:	mov    rax,QWORD PTR [rbx]
   140011721:	mov    rdx,rdi
   140011724:	mov    rcx,rbx
   140011727:	call   QWORD PTR [rax+0x10]
   14001172a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001172f:	mov    rax,QWORD PTR [rbx]
   140011732:	mov    rdx,rsi
   140011735:	mov    rcx,rbx
   140011738:	mov    rbx,QWORD PTR [rsp+0x38]
   14001173d:	add    rsp,0x20
   140011741:	pop    rsi
   140011742:	rex.W jmp QWORD PTR [rax+0x510]
   140011749:	int3   
   14001174a:	int3   
   14001174b:	int3   
   14001174c:	int3   
   14001174d:	int3   
   14001174e:	int3   
   14001174f:	int3   
   140011750:	mov    QWORD PTR [rsp+0x10],rbx
   140011755:	push   rsi
   140011756:	sub    rsp,0x20
   14001175a:	mov    rax,QWORD PTR [rdx]
   14001175d:	mov    rbx,rdx
   140011760:	mov    rsi,rcx
   140011763:	mov    rdx,rcx
   140011766:	mov    rcx,rbx
   140011769:	call   QWORD PTR [rax+0x228]
   14001176f:	test   al,al
   140011771:	je     0x1400117ae
   140011773:	mov    QWORD PTR [rsp+0x30],rdi
   140011778:	mov    rdi,QWORD PTR [rsi+0x10]
   14001177c:	test   rdi,rdi
   14001177f:	je     0x1400117a9
   140011781:	mov    rax,QWORD PTR [rbx]
   140011784:	mov    rdx,rdi
   140011787:	mov    rcx,rbx
   14001178a:	call   QWORD PTR [rax+0x8]
   14001178d:	test   al,al
   14001178f:	je     0x14001179d
   140011791:	mov    rax,QWORD PTR [rdi]
   140011794:	mov    rdx,rbx
   140011797:	mov    rcx,rdi
   14001179a:	call   QWORD PTR [rax+0x28]
   14001179d:	mov    rax,QWORD PTR [rbx]
   1400117a0:	mov    rdx,rdi
   1400117a3:	mov    rcx,rbx
   1400117a6:	call   QWORD PTR [rax+0x10]
   1400117a9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400117ae:	mov    rax,QWORD PTR [rbx]
   1400117b1:	mov    rdx,rsi
   1400117b4:	mov    rcx,rbx
   1400117b7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400117bc:	add    rsp,0x20
   1400117c0:	pop    rsi
   1400117c1:	rex.W jmp QWORD PTR [rax+0x508]
   1400117c8:	int3   
   1400117c9:	int3   
   1400117ca:	int3   
   1400117cb:	int3   
   1400117cc:	int3   
   1400117cd:	int3   
   1400117ce:	int3   
   1400117cf:	int3   
   1400117d0:	mov    QWORD PTR [rsp+0x18],rbp
   1400117d5:	push   rdi
   1400117d6:	sub    rsp,0x20
   1400117da:	mov    rax,QWORD PTR [rdx]
   1400117dd:	mov    rdi,rdx
   1400117e0:	mov    rbp,rcx
   1400117e3:	mov    rdx,rcx
   1400117e6:	mov    rcx,rdi
   1400117e9:	call   QWORD PTR [rax+0x220]
   1400117ef:	test   al,al
   1400117f1:	je     0x140011885
   1400117f7:	mov    QWORD PTR [rsp+0x30],rbx
   1400117fc:	mov    rbx,rbp
   1400117ff:	test   rbp,rbp
   140011802:	je     0x140011880
   140011804:	mov    QWORD PTR [rsp+0x38],rsi
   140011809:	nop    DWORD PTR [rax+0x0]
   140011810:	mov    rsi,QWORD PTR [rbx+0x10]
   140011814:	test   rsi,rsi
   140011817:	je     0x140011841
   140011819:	mov    rax,QWORD PTR [rdi]
   14001181c:	mov    rdx,rsi
   14001181f:	mov    rcx,rdi
   140011822:	call   QWORD PTR [rax+0x8]
   140011825:	test   al,al
   140011827:	je     0x140011835
   140011829:	mov    rax,QWORD PTR [rsi]
   14001182c:	mov    rdx,rdi
   14001182f:	mov    rcx,rsi
   140011832:	call   QWORD PTR [rax+0x28]
   140011835:	mov    rax,QWORD PTR [rdi]
   140011838:	mov    rdx,rsi
   14001183b:	mov    rcx,rdi
   14001183e:	call   QWORD PTR [rax+0x10]
   140011841:	mov    rsi,QWORD PTR [rbx+0x18]
   140011845:	test   rsi,rsi
   140011848:	je     0x140011872
   14001184a:	mov    rax,QWORD PTR [rdi]
   14001184d:	mov    rdx,rsi
   140011850:	mov    rcx,rdi
   140011853:	call   QWORD PTR [rax+0x8]
   140011856:	test   al,al
   140011858:	je     0x140011866
   14001185a:	mov    rax,QWORD PTR [rsi]
   14001185d:	mov    rdx,rdi
   140011860:	mov    rcx,rsi
   140011863:	call   QWORD PTR [rax+0x28]
   140011866:	mov    rax,QWORD PTR [rdi]
   140011869:	mov    rdx,rsi
   14001186c:	mov    rcx,rdi
   14001186f:	call   QWORD PTR [rax+0x10]
   140011872:	mov    rbx,QWORD PTR [rbx+0x20]
   140011876:	test   rbx,rbx
   140011879:	jne    0x140011810
   14001187b:	mov    rsi,QWORD PTR [rsp+0x38]
   140011880:	mov    rbx,QWORD PTR [rsp+0x30]
   140011885:	mov    rax,QWORD PTR [rdi]
   140011888:	mov    rdx,rbp
   14001188b:	mov    rcx,rdi
   14001188e:	mov    rbp,QWORD PTR [rsp+0x40]
   140011893:	add    rsp,0x20
   140011897:	pop    rdi
   140011898:	rex.W jmp QWORD PTR [rax+0x500]
   14001189f:	int3   
   1400118a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400118a5:	push   rdi
   1400118a6:	sub    rsp,0x20
   1400118aa:	mov    rax,QWORD PTR [rdx]
   1400118ad:	mov    rdi,rdx
   1400118b0:	mov    rbx,rcx
   1400118b3:	mov    rdx,rcx
   1400118b6:	mov    rcx,rdi
   1400118b9:	call   QWORD PTR [rax+0x218]
   1400118bf:	mov    r11,QWORD PTR [rdi]
   1400118c2:	mov    rdx,rbx
   1400118c5:	mov    rcx,rdi
   1400118c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400118cd:	add    rsp,0x20
   1400118d1:	pop    rdi
   1400118d2:	rex.WB jmp QWORD PTR [r11+0x4f8]
   1400118d9:	int3   
   1400118da:	int3   
   1400118db:	int3   
   1400118dc:	int3   
   1400118dd:	int3   
   1400118de:	int3   
   1400118df:	int3   
   1400118e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400118e5:	push   rsi
   1400118e6:	sub    rsp,0x20
   1400118ea:	mov    rax,QWORD PTR [rdx]
   1400118ed:	mov    rbx,rdx
   1400118f0:	mov    rsi,rcx
   1400118f3:	mov    rdx,rcx
   1400118f6:	mov    rcx,rbx
   1400118f9:	call   QWORD PTR [rax+0x208]
   1400118ff:	test   al,al
   140011901:	je     0x14001196f
   140011903:	mov    QWORD PTR [rsp+0x30],rdi
   140011908:	mov    rdi,QWORD PTR [rsi+0x10]
   14001190c:	test   rdi,rdi
   14001190f:	je     0x140011939
   140011911:	mov    rax,QWORD PTR [rbx]
   140011914:	mov    rdx,rdi
   140011917:	mov    rcx,rbx
   14001191a:	call   QWORD PTR [rax+0x8]
   14001191d:	test   al,al
   14001191f:	je     0x14001192d
   140011921:	mov    rax,QWORD PTR [rdi]
   140011924:	mov    rdx,rbx
   140011927:	mov    rcx,rdi
   14001192a:	call   QWORD PTR [rax+0x28]
   14001192d:	mov    rax,QWORD PTR [rbx]
   140011930:	mov    rdx,rdi
   140011933:	mov    rcx,rbx
   140011936:	call   QWORD PTR [rax+0x10]
   140011939:	mov    rdi,QWORD PTR [rsi+0x28]
   14001193d:	test   rdi,rdi
   140011940:	je     0x14001196a
   140011942:	mov    rax,QWORD PTR [rbx]
   140011945:	mov    rdx,rdi
   140011948:	mov    rcx,rbx
   14001194b:	call   QWORD PTR [rax+0x8]
   14001194e:	test   al,al
   140011950:	je     0x14001195e
   140011952:	mov    rax,QWORD PTR [rdi]
   140011955:	mov    rdx,rbx
   140011958:	mov    rcx,rdi
   14001195b:	call   QWORD PTR [rax+0x28]
   14001195e:	mov    rax,QWORD PTR [rbx]
   140011961:	mov    rdx,rdi
   140011964:	mov    rcx,rbx
   140011967:	call   QWORD PTR [rax+0x10]
   14001196a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001196f:	mov    rax,QWORD PTR [rbx]
   140011972:	mov    rdx,rsi
   140011975:	mov    rcx,rbx
   140011978:	mov    rbx,QWORD PTR [rsp+0x38]
   14001197d:	add    rsp,0x20
   140011981:	pop    rsi
   140011982:	rex.W jmp QWORD PTR [rax+0x4e8]
   140011989:	int3   
   14001198a:	int3   
   14001198b:	int3   
   14001198c:	int3   
   14001198d:	int3   
   14001198e:	int3   
   14001198f:	int3   
   140011990:	mov    QWORD PTR [rsp+0x10],rbx
   140011995:	push   rsi
   140011996:	sub    rsp,0x20
   14001199a:	mov    rax,QWORD PTR [rdx]
   14001199d:	mov    rbx,rdx
   1400119a0:	mov    rsi,rcx
   1400119a3:	mov    rdx,rcx
   1400119a6:	mov    rcx,rbx
   1400119a9:	call   QWORD PTR [rax+0x200]
   1400119af:	test   al,al
   1400119b1:	je     0x140011a54
   1400119b7:	mov    QWORD PTR [rsp+0x30],rdi
   1400119bc:	mov    rdi,QWORD PTR [rsi+0x10]
   1400119c0:	test   rdi,rdi
   1400119c3:	je     0x1400119ed
   1400119c5:	mov    rax,QWORD PTR [rbx]
   1400119c8:	mov    rdx,rdi
   1400119cb:	mov    rcx,rbx
   1400119ce:	call   QWORD PTR [rax+0x8]
   1400119d1:	test   al,al
   1400119d3:	je     0x1400119e1
   1400119d5:	mov    rax,QWORD PTR [rdi]
   1400119d8:	mov    rdx,rbx
   1400119db:	mov    rcx,rdi
   1400119de:	call   QWORD PTR [rax+0x28]
   1400119e1:	mov    rax,QWORD PTR [rbx]
   1400119e4:	mov    rdx,rdi
   1400119e7:	mov    rcx,rbx
   1400119ea:	call   QWORD PTR [rax+0x10]
   1400119ed:	mov    rdi,QWORD PTR [rsi+0x40]
   1400119f1:	test   rdi,rdi
   1400119f4:	je     0x140011a1e
   1400119f6:	mov    rax,QWORD PTR [rbx]
   1400119f9:	mov    rdx,rdi
   1400119fc:	mov    rcx,rbx
   1400119ff:	call   QWORD PTR [rax+0x8]
   140011a02:	test   al,al
   140011a04:	je     0x140011a12
   140011a06:	mov    rax,QWORD PTR [rdi]
   140011a09:	mov    rdx,rbx
   140011a0c:	mov    rcx,rdi
   140011a0f:	call   QWORD PTR [rax+0x28]
   140011a12:	mov    rax,QWORD PTR [rbx]
   140011a15:	mov    rdx,rdi
   140011a18:	mov    rcx,rbx
   140011a1b:	call   QWORD PTR [rax+0x10]
   140011a1e:	mov    rdi,QWORD PTR [rsi+0x68]
   140011a22:	test   rdi,rdi
   140011a25:	je     0x140011a4f
   140011a27:	mov    rax,QWORD PTR [rbx]
   140011a2a:	mov    rdx,rdi
   140011a2d:	mov    rcx,rbx
   140011a30:	call   QWORD PTR [rax+0x8]
   140011a33:	test   al,al
   140011a35:	je     0x140011a43
   140011a37:	mov    rax,QWORD PTR [rdi]
   140011a3a:	mov    rdx,rbx
   140011a3d:	mov    rcx,rdi
   140011a40:	call   QWORD PTR [rax+0x28]
   140011a43:	mov    rax,QWORD PTR [rbx]
   140011a46:	mov    rdx,rdi
   140011a49:	mov    rcx,rbx
   140011a4c:	call   QWORD PTR [rax+0x10]
   140011a4f:	mov    rdi,QWORD PTR [rsp+0x30]
   140011a54:	mov    rax,QWORD PTR [rbx]
   140011a57:	mov    rdx,rsi
   140011a5a:	mov    rcx,rbx
   140011a5d:	mov    rbx,QWORD PTR [rsp+0x38]
   140011a62:	add    rsp,0x20
   140011a66:	pop    rsi
   140011a67:	rex.W jmp QWORD PTR [rax+0x4e0]
   140011a6e:	int3   
   140011a6f:	int3   
   140011a70:	mov    QWORD PTR [rsp+0x18],rbp
   140011a75:	push   rsi
   140011a76:	sub    rsp,0x20
   140011a7a:	mov    rax,QWORD PTR [rdx]
   140011a7d:	mov    rsi,rdx
   140011a80:	mov    rbp,rcx
   140011a83:	mov    rdx,rcx
   140011a86:	mov    rcx,rsi
   140011a89:	call   QWORD PTR [rax+0x210]
   140011a8f:	test   al,al
   140011a91:	je     0x140011ae9
   140011a93:	mov    QWORD PTR [rsp+0x30],rbx
   140011a98:	mov    rbx,rbp
   140011a9b:	test   rbp,rbp
   140011a9e:	je     0x140011ae4
   140011aa0:	mov    QWORD PTR [rsp+0x38],rdi
   140011aa5:	mov    rdi,QWORD PTR [rbx+0x10]
   140011aa9:	test   rdi,rdi
   140011aac:	je     0x140011ad6
   140011aae:	mov    rax,QWORD PTR [rsi]
   140011ab1:	mov    rdx,rdi
   140011ab4:	mov    rcx,rsi
   140011ab7:	call   QWORD PTR [rax+0x8]
   140011aba:	test   al,al
   140011abc:	je     0x140011aca
   140011abe:	mov    rax,QWORD PTR [rdi]
   140011ac1:	mov    rdx,rsi
   140011ac4:	mov    rcx,rdi
   140011ac7:	call   QWORD PTR [rax+0x28]
   140011aca:	mov    rax,QWORD PTR [rsi]
   140011acd:	mov    rdx,rdi
   140011ad0:	mov    rcx,rsi
   140011ad3:	call   QWORD PTR [rax+0x10]
   140011ad6:	mov    rbx,QWORD PTR [rbx+0x18]
   140011ada:	test   rbx,rbx
   140011add:	jne    0x140011aa5
   140011adf:	mov    rdi,QWORD PTR [rsp+0x38]
   140011ae4:	mov    rbx,QWORD PTR [rsp+0x30]
   140011ae9:	mov    rax,QWORD PTR [rsi]
   140011aec:	mov    rdx,rbp
   140011aef:	mov    rcx,rsi
   140011af2:	mov    rbp,QWORD PTR [rsp+0x40]
   140011af7:	add    rsp,0x20
   140011afb:	pop    rsi
   140011afc:	rex.W jmp QWORD PTR [rax+0x4f0]
   140011b03:	int3   
   140011b04:	int3   
   140011b05:	int3   
   140011b06:	int3   
   140011b07:	int3   
   140011b08:	int3   
   140011b09:	int3   
   140011b0a:	int3   
   140011b0b:	int3   
   140011b0c:	int3   
   140011b0d:	int3   
   140011b0e:	int3   
   140011b0f:	int3   
   140011b10:	mov    QWORD PTR [rsp+0x8],rbx
   140011b15:	push   rdi
   140011b16:	sub    rsp,0x20
   140011b1a:	mov    rax,QWORD PTR [rdx]
   140011b1d:	mov    rdi,rdx
   140011b20:	mov    rbx,rcx
   140011b23:	mov    rdx,rcx
   140011b26:	mov    rcx,rdi
   140011b29:	call   QWORD PTR [rax+0x1f0]
   140011b2f:	mov    r11,QWORD PTR [rdi]
   140011b32:	mov    rdx,rbx
   140011b35:	mov    rcx,rdi
   140011b38:	mov    rbx,QWORD PTR [rsp+0x30]
   140011b3d:	add    rsp,0x20
   140011b41:	pop    rdi
   140011b42:	rex.WB jmp QWORD PTR [r11+0x4d0]
   140011b49:	int3   
   140011b4a:	int3   
   140011b4b:	int3   
   140011b4c:	int3   
   140011b4d:	int3   
   140011b4e:	int3   
   140011b4f:	int3   
   140011b50:	mov    QWORD PTR [rsp+0x8],rbx
   140011b55:	push   rdi
   140011b56:	sub    rsp,0x20
   140011b5a:	mov    rax,QWORD PTR [rdx]
   140011b5d:	mov    rdi,rdx
   140011b60:	mov    rbx,rcx
   140011b63:	mov    rdx,rcx
   140011b66:	mov    rcx,rdi
   140011b69:	call   QWORD PTR [rax+0x1e8]
   140011b6f:	mov    r11,QWORD PTR [rdi]
   140011b72:	mov    rdx,rbx
   140011b75:	mov    rcx,rdi
   140011b78:	mov    rbx,QWORD PTR [rsp+0x30]
   140011b7d:	add    rsp,0x20
   140011b81:	pop    rdi
   140011b82:	rex.WB jmp QWORD PTR [r11+0x4c8]
   140011b89:	int3   
   140011b8a:	int3   
   140011b8b:	int3   
   140011b8c:	int3   
   140011b8d:	int3   
   140011b8e:	int3   
   140011b8f:	int3   
   140011b90:	mov    QWORD PTR [rsp+0x8],rbx
   140011b95:	push   rdi
   140011b96:	sub    rsp,0x20
   140011b9a:	mov    rax,QWORD PTR [rdx]
   140011b9d:	mov    rdi,rdx
   140011ba0:	mov    rbx,rcx
   140011ba3:	mov    rdx,rcx
   140011ba6:	mov    rcx,rdi
   140011ba9:	call   QWORD PTR [rax+0x1e0]
   140011baf:	mov    r11,QWORD PTR [rdi]
   140011bb2:	mov    rdx,rbx
   140011bb5:	mov    rcx,rdi
   140011bb8:	mov    rbx,QWORD PTR [rsp+0x30]
   140011bbd:	add    rsp,0x20
   140011bc1:	pop    rdi
   140011bc2:	rex.WB jmp QWORD PTR [r11+0x4c0]
   140011bc9:	int3   
   140011bca:	int3   
   140011bcb:	int3   
   140011bcc:	int3   
   140011bcd:	int3   
   140011bce:	int3   
   140011bcf:	int3   
   140011bd0:	mov    QWORD PTR [rsp+0x10],rbx
   140011bd5:	push   rsi
   140011bd6:	sub    rsp,0x20
   140011bda:	mov    rax,QWORD PTR [rdx]
   140011bdd:	mov    rbx,rdx
   140011be0:	mov    rsi,rcx
   140011be3:	mov    rdx,rcx
   140011be6:	mov    rcx,rbx
   140011be9:	call   QWORD PTR [rax+0x1d8]
   140011bef:	test   al,al
   140011bf1:	je     0x140011c5f
   140011bf3:	mov    QWORD PTR [rsp+0x30],rdi
   140011bf8:	mov    rdi,QWORD PTR [rsi+0x10]
   140011bfc:	test   rdi,rdi
   140011bff:	je     0x140011c29
   140011c01:	mov    rax,QWORD PTR [rbx]
   140011c04:	mov    rdx,rdi
   140011c07:	mov    rcx,rbx
   140011c0a:	call   QWORD PTR [rax+0x8]
   140011c0d:	test   al,al
   140011c0f:	je     0x140011c1d
   140011c11:	mov    rax,QWORD PTR [rdi]
   140011c14:	mov    rdx,rbx
   140011c17:	mov    rcx,rdi
   140011c1a:	call   QWORD PTR [rax+0x28]
   140011c1d:	mov    rax,QWORD PTR [rbx]
   140011c20:	mov    rdx,rdi
   140011c23:	mov    rcx,rbx
   140011c26:	call   QWORD PTR [rax+0x10]
   140011c29:	mov    rdi,QWORD PTR [rsi+0x18]
   140011c2d:	test   rdi,rdi
   140011c30:	je     0x140011c5a
   140011c32:	mov    rax,QWORD PTR [rbx]
   140011c35:	mov    rdx,rdi
   140011c38:	mov    rcx,rbx
   140011c3b:	call   QWORD PTR [rax+0x8]
   140011c3e:	test   al,al
   140011c40:	je     0x140011c4e
   140011c42:	mov    rax,QWORD PTR [rdi]
   140011c45:	mov    rdx,rbx
   140011c48:	mov    rcx,rdi
   140011c4b:	call   QWORD PTR [rax+0x28]
   140011c4e:	mov    rax,QWORD PTR [rbx]
   140011c51:	mov    rdx,rdi
   140011c54:	mov    rcx,rbx
   140011c57:	call   QWORD PTR [rax+0x10]
   140011c5a:	mov    rdi,QWORD PTR [rsp+0x30]
   140011c5f:	mov    rax,QWORD PTR [rbx]
   140011c62:	mov    rdx,rsi
   140011c65:	mov    rcx,rbx
   140011c68:	mov    rbx,QWORD PTR [rsp+0x38]
   140011c6d:	add    rsp,0x20
   140011c71:	pop    rsi
   140011c72:	rex.W jmp QWORD PTR [rax+0x4b8]
   140011c79:	int3   
   140011c7a:	int3   
   140011c7b:	int3   
   140011c7c:	int3   
   140011c7d:	int3   
   140011c7e:	int3   
   140011c7f:	int3   
   140011c80:	mov    QWORD PTR [rsp+0x10],rbx
   140011c85:	push   rsi
   140011c86:	sub    rsp,0x20
   140011c8a:	mov    rax,QWORD PTR [rdx]
   140011c8d:	mov    rbx,rdx
   140011c90:	mov    rsi,rcx
   140011c93:	mov    rdx,rcx
   140011c96:	mov    rcx,rbx
   140011c99:	call   QWORD PTR [rax+0x1d0]
   140011c9f:	test   al,al
   140011ca1:	je     0x140011cde
   140011ca3:	mov    QWORD PTR [rsp+0x30],rdi
   140011ca8:	mov    rdi,QWORD PTR [rsi+0x10]
   140011cac:	test   rdi,rdi
   140011caf:	je     0x140011cd9
   140011cb1:	mov    rax,QWORD PTR [rbx]
   140011cb4:	mov    rdx,rdi
   140011cb7:	mov    rcx,rbx
   140011cba:	call   QWORD PTR [rax+0x8]
   140011cbd:	test   al,al
   140011cbf:	je     0x140011ccd
   140011cc1:	mov    rax,QWORD PTR [rdi]
   140011cc4:	mov    rdx,rbx
   140011cc7:	mov    rcx,rdi
   140011cca:	call   QWORD PTR [rax+0x28]
   140011ccd:	mov    rax,QWORD PTR [rbx]
   140011cd0:	mov    rdx,rdi
   140011cd3:	mov    rcx,rbx
   140011cd6:	call   QWORD PTR [rax+0x10]
   140011cd9:	mov    rdi,QWORD PTR [rsp+0x30]
   140011cde:	mov    rax,QWORD PTR [rbx]
   140011ce1:	mov    rdx,rsi
   140011ce4:	mov    rcx,rbx
   140011ce7:	mov    rbx,QWORD PTR [rsp+0x38]
   140011cec:	add    rsp,0x20
   140011cf0:	pop    rsi
   140011cf1:	rex.W jmp QWORD PTR [rax+0x4b0]
   140011cf8:	int3   
   140011cf9:	int3   
   140011cfa:	int3   
   140011cfb:	int3   
   140011cfc:	int3   
   140011cfd:	int3   
   140011cfe:	int3   
   140011cff:	int3   
   140011d00:	mov    QWORD PTR [rsp+0x10],rbx
   140011d05:	push   rsi
   140011d06:	sub    rsp,0x20
   140011d0a:	mov    rax,QWORD PTR [rdx]
   140011d0d:	mov    rbx,rdx
   140011d10:	mov    rsi,rcx
   140011d13:	mov    rdx,rcx
   140011d16:	mov    rcx,rbx
   140011d19:	call   QWORD PTR [rax+0x1c8]
   140011d1f:	test   al,al
   140011d21:	je     0x140011d8f
   140011d23:	mov    QWORD PTR [rsp+0x30],rdi
   140011d28:	mov    rdi,QWORD PTR [rsi+0x10]
   140011d2c:	test   rdi,rdi
   140011d2f:	je     0x140011d59
   140011d31:	mov    rax,QWORD PTR [rbx]
   140011d34:	mov    rdx,rdi
   140011d37:	mov    rcx,rbx
   140011d3a:	call   QWORD PTR [rax+0x8]
   140011d3d:	test   al,al
   140011d3f:	je     0x140011d4d
   140011d41:	mov    rax,QWORD PTR [rdi]
   140011d44:	mov    rdx,rbx
   140011d47:	mov    rcx,rdi
   140011d4a:	call   QWORD PTR [rax+0x28]
   140011d4d:	mov    rax,QWORD PTR [rbx]
   140011d50:	mov    rdx,rdi
   140011d53:	mov    rcx,rbx
   140011d56:	call   QWORD PTR [rax+0x10]
   140011d59:	mov    rdi,QWORD PTR [rsi+0x18]
   140011d5d:	test   rdi,rdi
   140011d60:	je     0x140011d8a
   140011d62:	mov    rax,QWORD PTR [rbx]
   140011d65:	mov    rdx,rdi
   140011d68:	mov    rcx,rbx
   140011d6b:	call   QWORD PTR [rax+0x8]
   140011d6e:	test   al,al
   140011d70:	je     0x140011d7e
   140011d72:	mov    rax,QWORD PTR [rdi]
   140011d75:	mov    rdx,rbx
   140011d78:	mov    rcx,rdi
   140011d7b:	call   QWORD PTR [rax+0x28]
   140011d7e:	mov    rax,QWORD PTR [rbx]
   140011d81:	mov    rdx,rdi
   140011d84:	mov    rcx,rbx
   140011d87:	call   QWORD PTR [rax+0x10]
   140011d8a:	mov    rdi,QWORD PTR [rsp+0x30]
   140011d8f:	mov    rax,QWORD PTR [rbx]
   140011d92:	mov    rdx,rsi
   140011d95:	mov    rcx,rbx
   140011d98:	mov    rbx,QWORD PTR [rsp+0x38]
   140011d9d:	add    rsp,0x20
   140011da1:	pop    rsi
   140011da2:	rex.W jmp QWORD PTR [rax+0x4a8]
   140011da9:	int3   
   140011daa:	int3   
   140011dab:	int3   
   140011dac:	int3   
   140011dad:	int3   
   140011dae:	int3   
   140011daf:	int3   
   140011db0:	mov    QWORD PTR [rsp+0x10],rbx
   140011db5:	push   rsi
   140011db6:	sub    rsp,0x20
   140011dba:	mov    rax,QWORD PTR [rdx]
   140011dbd:	mov    rbx,rdx
   140011dc0:	mov    rsi,rcx
   140011dc3:	mov    rdx,rcx
   140011dc6:	mov    rcx,rbx
   140011dc9:	call   QWORD PTR [rax+0x1c0]
   140011dcf:	test   al,al
   140011dd1:	je     0x140011e0e
   140011dd3:	mov    QWORD PTR [rsp+0x30],rdi
   140011dd8:	mov    rdi,QWORD PTR [rsi+0x10]
   140011ddc:	test   rdi,rdi
   140011ddf:	je     0x140011e09
   140011de1:	mov    rax,QWORD PTR [rbx]
   140011de4:	mov    rdx,rdi
   140011de7:	mov    rcx,rbx
   140011dea:	call   QWORD PTR [rax+0x8]
   140011ded:	test   al,al
   140011def:	je     0x140011dfd
   140011df1:	mov    rax,QWORD PTR [rdi]
   140011df4:	mov    rdx,rbx
   140011df7:	mov    rcx,rdi
   140011dfa:	call   QWORD PTR [rax+0x28]
   140011dfd:	mov    rax,QWORD PTR [rbx]
   140011e00:	mov    rdx,rdi
   140011e03:	mov    rcx,rbx
   140011e06:	call   QWORD PTR [rax+0x10]
   140011e09:	mov    rdi,QWORD PTR [rsp+0x30]
   140011e0e:	mov    rax,QWORD PTR [rbx]
   140011e11:	mov    rdx,rsi
   140011e14:	mov    rcx,rbx
   140011e17:	mov    rbx,QWORD PTR [rsp+0x38]
   140011e1c:	add    rsp,0x20
   140011e20:	pop    rsi
   140011e21:	rex.W jmp QWORD PTR [rax+0x4a0]
   140011e28:	int3   
   140011e29:	int3   
   140011e2a:	int3   
   140011e2b:	int3   
   140011e2c:	int3   
   140011e2d:	int3   
   140011e2e:	int3   
   140011e2f:	int3   
   140011e30:	mov    QWORD PTR [rsp+0x10],rbx
   140011e35:	push   rsi
   140011e36:	sub    rsp,0x20
   140011e3a:	mov    rax,QWORD PTR [rdx]
   140011e3d:	mov    rbx,rdx
   140011e40:	mov    rsi,rcx
   140011e43:	mov    rdx,rcx
   140011e46:	mov    rcx,rbx
   140011e49:	call   QWORD PTR [rax+0x1b8]
   140011e4f:	test   al,al
   140011e51:	je     0x140011ebf
   140011e53:	mov    QWORD PTR [rsp+0x30],rdi
   140011e58:	mov    rdi,QWORD PTR [rsi+0x10]
   140011e5c:	test   rdi,rdi
   140011e5f:	je     0x140011e89
   140011e61:	mov    rax,QWORD PTR [rbx]
   140011e64:	mov    rdx,rdi
   140011e67:	mov    rcx,rbx
   140011e6a:	call   QWORD PTR [rax+0x8]
   140011e6d:	test   al,al
   140011e6f:	je     0x140011e7d
   140011e71:	mov    rax,QWORD PTR [rdi]
   140011e74:	mov    rdx,rbx
   140011e77:	mov    rcx,rdi
   140011e7a:	call   QWORD PTR [rax+0x28]
   140011e7d:	mov    rax,QWORD PTR [rbx]
   140011e80:	mov    rdx,rdi
   140011e83:	mov    rcx,rbx
   140011e86:	call   QWORD PTR [rax+0x10]
   140011e89:	mov    rdi,QWORD PTR [rsi+0x18]
   140011e8d:	test   rdi,rdi
   140011e90:	je     0x140011eba
   140011e92:	mov    rax,QWORD PTR [rbx]
   140011e95:	mov    rdx,rdi
   140011e98:	mov    rcx,rbx
   140011e9b:	call   QWORD PTR [rax+0x8]
   140011e9e:	test   al,al
   140011ea0:	je     0x140011eae
   140011ea2:	mov    rax,QWORD PTR [rdi]
   140011ea5:	mov    rdx,rbx
   140011ea8:	mov    rcx,rdi
   140011eab:	call   QWORD PTR [rax+0x28]
   140011eae:	mov    rax,QWORD PTR [rbx]
   140011eb1:	mov    rdx,rdi
   140011eb4:	mov    rcx,rbx
   140011eb7:	call   QWORD PTR [rax+0x10]
   140011eba:	mov    rdi,QWORD PTR [rsp+0x30]
   140011ebf:	mov    rax,QWORD PTR [rbx]
   140011ec2:	mov    rdx,rsi
   140011ec5:	mov    rcx,rbx
   140011ec8:	mov    rbx,QWORD PTR [rsp+0x38]
   140011ecd:	add    rsp,0x20
   140011ed1:	pop    rsi
   140011ed2:	rex.W jmp QWORD PTR [rax+0x498]
   140011ed9:	int3   
   140011eda:	int3   
   140011edb:	int3   
   140011edc:	int3   
   140011edd:	int3   
   140011ede:	int3   
   140011edf:	int3   
   140011ee0:	mov    QWORD PTR [rsp+0x18],rbp
   140011ee5:	push   rsi
   140011ee6:	sub    rsp,0x20
   140011eea:	mov    rax,QWORD PTR [rdx]
   140011eed:	mov    rsi,rdx
   140011ef0:	mov    rbp,rcx
   140011ef3:	mov    rdx,rcx
   140011ef6:	mov    rcx,rsi
   140011ef9:	call   QWORD PTR [rax+0x1b0]
   140011eff:	test   al,al
   140011f01:	je     0x140011f59
   140011f03:	mov    QWORD PTR [rsp+0x30],rbx
   140011f08:	mov    rbx,rbp
   140011f0b:	test   rbp,rbp
   140011f0e:	je     0x140011f54
   140011f10:	mov    QWORD PTR [rsp+0x38],rdi
   140011f15:	mov    rdi,QWORD PTR [rbx+0x10]
   140011f19:	test   rdi,rdi
   140011f1c:	je     0x140011f46
   140011f1e:	mov    rax,QWORD PTR [rsi]
   140011f21:	mov    rdx,rdi
   140011f24:	mov    rcx,rsi
   140011f27:	call   QWORD PTR [rax+0x8]
   140011f2a:	test   al,al
   140011f2c:	je     0x140011f3a
   140011f2e:	mov    rax,QWORD PTR [rdi]
   140011f31:	mov    rdx,rsi
   140011f34:	mov    rcx,rdi
   140011f37:	call   QWORD PTR [rax+0x28]
   140011f3a:	mov    rax,QWORD PTR [rsi]
   140011f3d:	mov    rdx,rdi
   140011f40:	mov    rcx,rsi
   140011f43:	call   QWORD PTR [rax+0x10]
   140011f46:	mov    rbx,QWORD PTR [rbx+0x18]
   140011f4a:	test   rbx,rbx
   140011f4d:	jne    0x140011f15
   140011f4f:	mov    rdi,QWORD PTR [rsp+0x38]
   140011f54:	mov    rbx,QWORD PTR [rsp+0x30]
   140011f59:	mov    rax,QWORD PTR [rsi]
   140011f5c:	mov    rdx,rbp
   140011f5f:	mov    rcx,rsi
   140011f62:	mov    rbp,QWORD PTR [rsp+0x40]
   140011f67:	add    rsp,0x20
   140011f6b:	pop    rsi
   140011f6c:	rex.W jmp QWORD PTR [rax+0x490]
   140011f73:	int3   
   140011f74:	int3   
   140011f75:	int3   
   140011f76:	int3   
   140011f77:	int3   
   140011f78:	int3   
   140011f79:	int3   
   140011f7a:	int3   
   140011f7b:	int3   
   140011f7c:	int3   
   140011f7d:	int3   
   140011f7e:	int3   
   140011f7f:	int3   
   140011f80:	mov    QWORD PTR [rsp+0x10],rbx
   140011f85:	push   rsi
   140011f86:	sub    rsp,0x20
   140011f8a:	mov    rax,QWORD PTR [rdx]
   140011f8d:	mov    rbx,rdx
   140011f90:	mov    rsi,rcx
   140011f93:	mov    rdx,rcx
   140011f96:	mov    rcx,rbx
   140011f99:	call   QWORD PTR [rax+0x1a8]
   140011f9f:	test   al,al
   140011fa1:	je     0x140011fde
   140011fa3:	mov    QWORD PTR [rsp+0x30],rdi
   140011fa8:	mov    rdi,QWORD PTR [rsi+0x10]
   140011fac:	test   rdi,rdi
   140011faf:	je     0x140011fd9
   140011fb1:	mov    rax,QWORD PTR [rbx]
   140011fb4:	mov    rdx,rdi
   140011fb7:	mov    rcx,rbx
   140011fba:	call   QWORD PTR [rax+0x8]
   140011fbd:	test   al,al
   140011fbf:	je     0x140011fcd
   140011fc1:	mov    rax,QWORD PTR [rdi]
   140011fc4:	mov    rdx,rbx
   140011fc7:	mov    rcx,rdi
   140011fca:	call   QWORD PTR [rax+0x28]
   140011fcd:	mov    rax,QWORD PTR [rbx]
   140011fd0:	mov    rdx,rdi
   140011fd3:	mov    rcx,rbx
   140011fd6:	call   QWORD PTR [rax+0x10]
   140011fd9:	mov    rdi,QWORD PTR [rsp+0x30]
   140011fde:	mov    rax,QWORD PTR [rbx]
   140011fe1:	mov    rdx,rsi
   140011fe4:	mov    rcx,rbx
   140011fe7:	mov    rbx,QWORD PTR [rsp+0x38]
   140011fec:	add    rsp,0x20
   140011ff0:	pop    rsi
   140011ff1:	rex.W jmp QWORD PTR [rax+0x488]
   140011ff8:	int3   
   140011ff9:	int3   
   140011ffa:	int3   
   140011ffb:	int3   
   140011ffc:	int3   
   140011ffd:	int3   
   140011ffe:	int3   
   140011fff:	int3   
   140012000:	mov    QWORD PTR [rsp+0x10],rbx
   140012005:	push   rsi
   140012006:	sub    rsp,0x20
   14001200a:	mov    rax,QWORD PTR [rdx]
   14001200d:	mov    rbx,rdx
   140012010:	mov    rsi,rcx
   140012013:	mov    rdx,rcx
   140012016:	mov    rcx,rbx
   140012019:	call   QWORD PTR [rax+0x1a0]
   14001201f:	test   al,al
   140012021:	je     0x14001205e
   140012023:	mov    QWORD PTR [rsp+0x30],rdi
   140012028:	mov    rdi,QWORD PTR [rsi+0x10]
   14001202c:	test   rdi,rdi
   14001202f:	je     0x140012059
   140012031:	mov    rax,QWORD PTR [rbx]
   140012034:	mov    rdx,rdi
   140012037:	mov    rcx,rbx
   14001203a:	call   QWORD PTR [rax+0x8]
   14001203d:	test   al,al
   14001203f:	je     0x14001204d
   140012041:	mov    rax,QWORD PTR [rdi]
   140012044:	mov    rdx,rbx
   140012047:	mov    rcx,rdi
   14001204a:	call   QWORD PTR [rax+0x28]
   14001204d:	mov    rax,QWORD PTR [rbx]
   140012050:	mov    rdx,rdi
   140012053:	mov    rcx,rbx
   140012056:	call   QWORD PTR [rax+0x10]
   140012059:	mov    rdi,QWORD PTR [rsp+0x30]
   14001205e:	mov    rax,QWORD PTR [rbx]
   140012061:	mov    rdx,rsi
   140012064:	mov    rcx,rbx
   140012067:	mov    rbx,QWORD PTR [rsp+0x38]
   14001206c:	add    rsp,0x20
   140012070:	pop    rsi
   140012071:	rex.W jmp QWORD PTR [rax+0x480]
   140012078:	int3   
   140012079:	int3   
   14001207a:	int3   
   14001207b:	int3   
   14001207c:	int3   
   14001207d:	int3   
   14001207e:	int3   
   14001207f:	int3   
   140012080:	mov    QWORD PTR [rsp+0x10],rbx
   140012085:	push   rsi
   140012086:	sub    rsp,0x20
   14001208a:	mov    rax,QWORD PTR [rdx]
   14001208d:	mov    rbx,rdx
   140012090:	mov    rsi,rcx
   140012093:	mov    rdx,rcx
   140012096:	mov    rcx,rbx
   140012099:	call   QWORD PTR [rax+0x198]
   14001209f:	test   al,al
   1400120a1:	je     0x1400120de
   1400120a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400120a8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400120ac:	test   rdi,rdi
   1400120af:	je     0x1400120d9
   1400120b1:	mov    rax,QWORD PTR [rbx]
   1400120b4:	mov    rdx,rdi
   1400120b7:	mov    rcx,rbx
   1400120ba:	call   QWORD PTR [rax+0x8]
   1400120bd:	test   al,al
   1400120bf:	je     0x1400120cd
   1400120c1:	mov    rax,QWORD PTR [rdi]
   1400120c4:	mov    rdx,rbx
   1400120c7:	mov    rcx,rdi
   1400120ca:	call   QWORD PTR [rax+0x28]
   1400120cd:	mov    rax,QWORD PTR [rbx]
   1400120d0:	mov    rdx,rdi
   1400120d3:	mov    rcx,rbx
   1400120d6:	call   QWORD PTR [rax+0x10]
   1400120d9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400120de:	mov    rax,QWORD PTR [rbx]
   1400120e1:	mov    rdx,rsi
   1400120e4:	mov    rcx,rbx
   1400120e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400120ec:	add    rsp,0x20
   1400120f0:	pop    rsi
   1400120f1:	rex.W jmp QWORD PTR [rax+0x478]
   1400120f8:	int3   
   1400120f9:	int3   
   1400120fa:	int3   
   1400120fb:	int3   
   1400120fc:	int3   
   1400120fd:	int3   
   1400120fe:	int3   
   1400120ff:	int3   
   140012100:	mov    QWORD PTR [rsp+0x10],rbx
   140012105:	push   rsi
   140012106:	sub    rsp,0x20
   14001210a:	mov    rax,QWORD PTR [rdx]
   14001210d:	mov    rbx,rdx
   140012110:	mov    rsi,rcx
   140012113:	mov    rdx,rcx
   140012116:	mov    rcx,rbx
   140012119:	call   QWORD PTR [rax+0x190]
   14001211f:	test   al,al
   140012121:	je     0x14001215e
   140012123:	mov    QWORD PTR [rsp+0x30],rdi
   140012128:	mov    rdi,QWORD PTR [rsi+0x10]
   14001212c:	test   rdi,rdi
   14001212f:	je     0x140012159
   140012131:	mov    rax,QWORD PTR [rbx]
   140012134:	mov    rdx,rdi
   140012137:	mov    rcx,rbx
   14001213a:	call   QWORD PTR [rax+0x8]
   14001213d:	test   al,al
   14001213f:	je     0x14001214d
   140012141:	mov    rax,QWORD PTR [rdi]
   140012144:	mov    rdx,rbx
   140012147:	mov    rcx,rdi
   14001214a:	call   QWORD PTR [rax+0x28]
   14001214d:	mov    rax,QWORD PTR [rbx]
   140012150:	mov    rdx,rdi
   140012153:	mov    rcx,rbx
   140012156:	call   QWORD PTR [rax+0x10]
   140012159:	mov    rdi,QWORD PTR [rsp+0x30]
   14001215e:	mov    rax,QWORD PTR [rbx]
   140012161:	mov    rdx,rsi
   140012164:	mov    rcx,rbx
   140012167:	mov    rbx,QWORD PTR [rsp+0x38]
   14001216c:	add    rsp,0x20
   140012170:	pop    rsi
   140012171:	rex.W jmp QWORD PTR [rax+0x470]
   140012178:	int3   
   140012179:	int3   
   14001217a:	int3   
   14001217b:	int3   
   14001217c:	int3   
   14001217d:	int3   
   14001217e:	int3   
   14001217f:	int3   
   140012180:	mov    QWORD PTR [rsp+0x10],rbx
   140012185:	push   rsi
   140012186:	sub    rsp,0x20
   14001218a:	mov    rax,QWORD PTR [rdx]
   14001218d:	mov    rbx,rdx
   140012190:	mov    rsi,rcx
   140012193:	mov    rdx,rcx
   140012196:	mov    rcx,rbx
   140012199:	call   QWORD PTR [rax+0x188]
   14001219f:	test   al,al
   1400121a1:	je     0x1400121de
   1400121a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400121a8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400121ac:	test   rdi,rdi
   1400121af:	je     0x1400121d9
   1400121b1:	mov    rax,QWORD PTR [rbx]
   1400121b4:	mov    rdx,rdi
   1400121b7:	mov    rcx,rbx
   1400121ba:	call   QWORD PTR [rax+0x8]
   1400121bd:	test   al,al
   1400121bf:	je     0x1400121cd
   1400121c1:	mov    rax,QWORD PTR [rdi]
   1400121c4:	mov    rdx,rbx
   1400121c7:	mov    rcx,rdi
   1400121ca:	call   QWORD PTR [rax+0x28]
   1400121cd:	mov    rax,QWORD PTR [rbx]
   1400121d0:	mov    rdx,rdi
   1400121d3:	mov    rcx,rbx
   1400121d6:	call   QWORD PTR [rax+0x10]
   1400121d9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400121de:	mov    rax,QWORD PTR [rbx]
   1400121e1:	mov    rdx,rsi
   1400121e4:	mov    rcx,rbx
   1400121e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400121ec:	add    rsp,0x20
   1400121f0:	pop    rsi
   1400121f1:	rex.W jmp QWORD PTR [rax+0x468]
   1400121f8:	int3   
   1400121f9:	int3   
   1400121fa:	int3   
   1400121fb:	int3   
   1400121fc:	int3   
   1400121fd:	int3   
   1400121fe:	int3   
   1400121ff:	int3   
   140012200:	mov    QWORD PTR [rsp+0x10],rbx
   140012205:	push   rsi
   140012206:	sub    rsp,0x20
   14001220a:	mov    rax,QWORD PTR [rdx]
   14001220d:	mov    rbx,rdx
   140012210:	mov    rsi,rcx
   140012213:	mov    rdx,rcx
   140012216:	mov    rcx,rbx
   140012219:	call   QWORD PTR [rax+0x180]
   14001221f:	test   al,al
   140012221:	je     0x14001225e
   140012223:	mov    QWORD PTR [rsp+0x30],rdi
   140012228:	mov    rdi,QWORD PTR [rsi+0x10]
   14001222c:	test   rdi,rdi
   14001222f:	je     0x140012259
   140012231:	mov    rax,QWORD PTR [rbx]
   140012234:	mov    rdx,rdi
   140012237:	mov    rcx,rbx
   14001223a:	call   QWORD PTR [rax+0x8]
   14001223d:	test   al,al
   14001223f:	je     0x14001224d
   140012241:	mov    rax,QWORD PTR [rdi]
   140012244:	mov    rdx,rbx
   140012247:	mov    rcx,rdi
   14001224a:	call   QWORD PTR [rax+0x28]
   14001224d:	mov    rax,QWORD PTR [rbx]
   140012250:	mov    rdx,rdi
   140012253:	mov    rcx,rbx
   140012256:	call   QWORD PTR [rax+0x10]
   140012259:	mov    rdi,QWORD PTR [rsp+0x30]
   14001225e:	mov    rax,QWORD PTR [rbx]
   140012261:	mov    rdx,rsi
   140012264:	mov    rcx,rbx
   140012267:	mov    rbx,QWORD PTR [rsp+0x38]
   14001226c:	add    rsp,0x20
   140012270:	pop    rsi
   140012271:	rex.W jmp QWORD PTR [rax+0x460]
   140012278:	int3   
   140012279:	int3   
   14001227a:	int3   
   14001227b:	int3   
   14001227c:	int3   
   14001227d:	int3   
   14001227e:	int3   
   14001227f:	int3   
   140012280:	mov    QWORD PTR [rsp+0x10],rbx
   140012285:	push   rsi
   140012286:	sub    rsp,0x20
   14001228a:	mov    rax,QWORD PTR [rdx]
   14001228d:	mov    rbx,rdx
   140012290:	mov    rsi,rcx
   140012293:	mov    rdx,rcx
   140012296:	mov    rcx,rbx
   140012299:	call   QWORD PTR [rax+0x178]
   14001229f:	test   al,al
   1400122a1:	je     0x1400122de
   1400122a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400122a8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400122ac:	test   rdi,rdi
   1400122af:	je     0x1400122d9
   1400122b1:	mov    rax,QWORD PTR [rbx]
   1400122b4:	mov    rdx,rdi
   1400122b7:	mov    rcx,rbx
   1400122ba:	call   QWORD PTR [rax+0x8]
   1400122bd:	test   al,al
   1400122bf:	je     0x1400122cd
   1400122c1:	mov    rax,QWORD PTR [rdi]
   1400122c4:	mov    rdx,rbx
   1400122c7:	mov    rcx,rdi
   1400122ca:	call   QWORD PTR [rax+0x28]
   1400122cd:	mov    rax,QWORD PTR [rbx]
   1400122d0:	mov    rdx,rdi
   1400122d3:	mov    rcx,rbx
   1400122d6:	call   QWORD PTR [rax+0x10]
   1400122d9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400122de:	mov    rax,QWORD PTR [rbx]
   1400122e1:	mov    rdx,rsi
   1400122e4:	mov    rcx,rbx
   1400122e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400122ec:	add    rsp,0x20
   1400122f0:	pop    rsi
   1400122f1:	rex.W jmp QWORD PTR [rax+0x458]
   1400122f8:	int3   
   1400122f9:	int3   
   1400122fa:	int3   
   1400122fb:	int3   
   1400122fc:	int3   
   1400122fd:	int3   
   1400122fe:	int3   
   1400122ff:	int3   
   140012300:	mov    QWORD PTR [rsp+0x10],rbx
   140012305:	push   rsi
   140012306:	sub    rsp,0x20
   14001230a:	mov    rax,QWORD PTR [rdx]
   14001230d:	mov    rbx,rdx
   140012310:	mov    rsi,rcx
   140012313:	mov    rdx,rcx
   140012316:	mov    rcx,rbx
   140012319:	call   QWORD PTR [rax+0x170]
   14001231f:	test   al,al
   140012321:	je     0x14001235e
   140012323:	mov    QWORD PTR [rsp+0x30],rdi
   140012328:	mov    rdi,QWORD PTR [rsi+0x10]
   14001232c:	test   rdi,rdi
   14001232f:	je     0x140012359
   140012331:	mov    rax,QWORD PTR [rbx]
   140012334:	mov    rdx,rdi
   140012337:	mov    rcx,rbx
   14001233a:	call   QWORD PTR [rax+0x8]
   14001233d:	test   al,al
   14001233f:	je     0x14001234d
   140012341:	mov    rax,QWORD PTR [rdi]
   140012344:	mov    rdx,rbx
   140012347:	mov    rcx,rdi
   14001234a:	call   QWORD PTR [rax+0x28]
   14001234d:	mov    rax,QWORD PTR [rbx]
   140012350:	mov    rdx,rdi
   140012353:	mov    rcx,rbx
   140012356:	call   QWORD PTR [rax+0x10]
   140012359:	mov    rdi,QWORD PTR [rsp+0x30]
   14001235e:	mov    rax,QWORD PTR [rbx]
   140012361:	mov    rdx,rsi
   140012364:	mov    rcx,rbx
   140012367:	mov    rbx,QWORD PTR [rsp+0x38]
   14001236c:	add    rsp,0x20
   140012370:	pop    rsi
   140012371:	rex.W jmp QWORD PTR [rax+0x450]
   140012378:	int3   
   140012379:	int3   
   14001237a:	int3   
   14001237b:	int3   
   14001237c:	int3   
   14001237d:	int3   
   14001237e:	int3   
   14001237f:	int3   
   140012380:	mov    QWORD PTR [rsp+0x10],rbx
   140012385:	push   rsi
   140012386:	sub    rsp,0x20
   14001238a:	mov    rax,QWORD PTR [rdx]
   14001238d:	mov    rbx,rdx
   140012390:	mov    rsi,rcx
   140012393:	mov    rdx,rcx
   140012396:	mov    rcx,rbx
   140012399:	call   QWORD PTR [rax+0x168]
   14001239f:	test   al,al
   1400123a1:	je     0x1400123de
   1400123a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400123a8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400123ac:	test   rdi,rdi
   1400123af:	je     0x1400123d9
   1400123b1:	mov    rax,QWORD PTR [rbx]
   1400123b4:	mov    rdx,rdi
   1400123b7:	mov    rcx,rbx
   1400123ba:	call   QWORD PTR [rax+0x8]
   1400123bd:	test   al,al
   1400123bf:	je     0x1400123cd
   1400123c1:	mov    rax,QWORD PTR [rdi]
   1400123c4:	mov    rdx,rbx
   1400123c7:	mov    rcx,rdi
   1400123ca:	call   QWORD PTR [rax+0x28]
   1400123cd:	mov    rax,QWORD PTR [rbx]
   1400123d0:	mov    rdx,rdi
   1400123d3:	mov    rcx,rbx
   1400123d6:	call   QWORD PTR [rax+0x10]
   1400123d9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400123de:	mov    rax,QWORD PTR [rbx]
   1400123e1:	mov    rdx,rsi
   1400123e4:	mov    rcx,rbx
   1400123e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400123ec:	add    rsp,0x20
   1400123f0:	pop    rsi
   1400123f1:	rex.W jmp QWORD PTR [rax+0x448]
   1400123f8:	int3   
   1400123f9:	int3   
   1400123fa:	int3   
   1400123fb:	int3   
   1400123fc:	int3   
   1400123fd:	int3   
   1400123fe:	int3   
   1400123ff:	int3   
   140012400:	mov    QWORD PTR [rsp+0x10],rbx
   140012405:	push   rsi
   140012406:	sub    rsp,0x20
   14001240a:	mov    rax,QWORD PTR [rdx]
   14001240d:	mov    rbx,rdx
   140012410:	mov    rsi,rcx
   140012413:	mov    rdx,rcx
   140012416:	mov    rcx,rbx
   140012419:	call   QWORD PTR [rax+0x160]
   14001241f:	test   al,al
   140012421:	je     0x14001245e
   140012423:	mov    QWORD PTR [rsp+0x30],rdi
   140012428:	mov    rdi,QWORD PTR [rsi+0x10]
   14001242c:	test   rdi,rdi
   14001242f:	je     0x140012459
   140012431:	mov    rax,QWORD PTR [rbx]
   140012434:	mov    rdx,rdi
   140012437:	mov    rcx,rbx
   14001243a:	call   QWORD PTR [rax+0x8]
   14001243d:	test   al,al
   14001243f:	je     0x14001244d
   140012441:	mov    rax,QWORD PTR [rdi]
   140012444:	mov    rdx,rbx
   140012447:	mov    rcx,rdi
   14001244a:	call   QWORD PTR [rax+0x28]
   14001244d:	mov    rax,QWORD PTR [rbx]
   140012450:	mov    rdx,rdi
   140012453:	mov    rcx,rbx
   140012456:	call   QWORD PTR [rax+0x10]
   140012459:	mov    rdi,QWORD PTR [rsp+0x30]
   14001245e:	mov    rax,QWORD PTR [rbx]
   140012461:	mov    rdx,rsi
   140012464:	mov    rcx,rbx
   140012467:	mov    rbx,QWORD PTR [rsp+0x38]
   14001246c:	add    rsp,0x20
   140012470:	pop    rsi
   140012471:	rex.W jmp QWORD PTR [rax+0x440]
   140012478:	int3   
   140012479:	int3   
   14001247a:	int3   
   14001247b:	int3   
   14001247c:	int3   
   14001247d:	int3   
   14001247e:	int3   
   14001247f:	int3   
   140012480:	mov    QWORD PTR [rsp+0x10],rbx
   140012485:	push   rsi
   140012486:	sub    rsp,0x20
   14001248a:	mov    rax,QWORD PTR [rdx]
   14001248d:	mov    rbx,rdx
   140012490:	mov    rsi,rcx
   140012493:	mov    rdx,rcx
   140012496:	mov    rcx,rbx
   140012499:	call   QWORD PTR [rax+0x158]
   14001249f:	test   al,al
   1400124a1:	je     0x1400124de
   1400124a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400124a8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400124ac:	test   rdi,rdi
   1400124af:	je     0x1400124d9
   1400124b1:	mov    rax,QWORD PTR [rbx]
   1400124b4:	mov    rdx,rdi
   1400124b7:	mov    rcx,rbx
   1400124ba:	call   QWORD PTR [rax+0x8]
   1400124bd:	test   al,al
   1400124bf:	je     0x1400124cd
   1400124c1:	mov    rax,QWORD PTR [rdi]
   1400124c4:	mov    rdx,rbx
   1400124c7:	mov    rcx,rdi
   1400124ca:	call   QWORD PTR [rax+0x28]
   1400124cd:	mov    rax,QWORD PTR [rbx]
   1400124d0:	mov    rdx,rdi
   1400124d3:	mov    rcx,rbx
   1400124d6:	call   QWORD PTR [rax+0x10]
   1400124d9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400124de:	mov    rax,QWORD PTR [rbx]
   1400124e1:	mov    rdx,rsi
   1400124e4:	mov    rcx,rbx
   1400124e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400124ec:	add    rsp,0x20
   1400124f0:	pop    rsi
   1400124f1:	rex.W jmp QWORD PTR [rax+0x438]
   1400124f8:	int3   
   1400124f9:	int3   
   1400124fa:	int3   
   1400124fb:	int3   
   1400124fc:	int3   
   1400124fd:	int3   
   1400124fe:	int3   
   1400124ff:	int3   
   140012500:	mov    QWORD PTR [rsp+0x10],rbx
   140012505:	push   rsi
   140012506:	sub    rsp,0x20
   14001250a:	mov    rax,QWORD PTR [rdx]
   14001250d:	mov    rbx,rdx
   140012510:	mov    rsi,rcx
   140012513:	mov    rdx,rcx
   140012516:	mov    rcx,rbx
   140012519:	call   QWORD PTR [rax+0x150]
   14001251f:	test   al,al
   140012521:	je     0x14001258f
   140012523:	mov    QWORD PTR [rsp+0x30],rdi
   140012528:	mov    rdi,QWORD PTR [rsi+0x10]
   14001252c:	test   rdi,rdi
   14001252f:	je     0x140012559
   140012531:	mov    rax,QWORD PTR [rbx]
   140012534:	mov    rdx,rdi
   140012537:	mov    rcx,rbx
   14001253a:	call   QWORD PTR [rax+0x8]
   14001253d:	test   al,al
   14001253f:	je     0x14001254d
   140012541:	mov    rax,QWORD PTR [rdi]
   140012544:	mov    rdx,rbx
   140012547:	mov    rcx,rdi
   14001254a:	call   QWORD PTR [rax+0x28]
   14001254d:	mov    rax,QWORD PTR [rbx]
   140012550:	mov    rdx,rdi
   140012553:	mov    rcx,rbx
   140012556:	call   QWORD PTR [rax+0x10]
   140012559:	mov    rdi,QWORD PTR [rsi+0x20]
   14001255d:	test   rdi,rdi
   140012560:	je     0x14001258a
   140012562:	mov    rax,QWORD PTR [rbx]
   140012565:	mov    rdx,rdi
   140012568:	mov    rcx,rbx
   14001256b:	call   QWORD PTR [rax+0x8]
   14001256e:	test   al,al
   140012570:	je     0x14001257e
   140012572:	mov    rax,QWORD PTR [rdi]
   140012575:	mov    rdx,rbx
   140012578:	mov    rcx,rdi
   14001257b:	call   QWORD PTR [rax+0x28]
   14001257e:	mov    rax,QWORD PTR [rbx]
   140012581:	mov    rdx,rdi
   140012584:	mov    rcx,rbx
   140012587:	call   QWORD PTR [rax+0x10]
   14001258a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001258f:	mov    rax,QWORD PTR [rbx]
   140012592:	mov    rdx,rsi
   140012595:	mov    rcx,rbx
   140012598:	mov    rbx,QWORD PTR [rsp+0x38]
   14001259d:	add    rsp,0x20
   1400125a1:	pop    rsi
   1400125a2:	rex.W jmp QWORD PTR [rax+0x430]
   1400125a9:	int3   
   1400125aa:	int3   
   1400125ab:	int3   
   1400125ac:	int3   
   1400125ad:	int3   
   1400125ae:	int3   
   1400125af:	int3   
   1400125b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400125b5:	push   rsi
   1400125b6:	sub    rsp,0x20
   1400125ba:	mov    rax,QWORD PTR [rdx]
   1400125bd:	mov    rbx,rdx
   1400125c0:	mov    rsi,rcx
   1400125c3:	mov    rdx,rcx
   1400125c6:	mov    rcx,rbx
   1400125c9:	call   QWORD PTR [rax+0x148]
   1400125cf:	test   al,al
   1400125d1:	je     0x140012674
   1400125d7:	mov    QWORD PTR [rsp+0x30],rdi
   1400125dc:	mov    rdi,QWORD PTR [rsi+0x10]
   1400125e0:	test   rdi,rdi
   1400125e3:	je     0x14001260d
   1400125e5:	mov    rax,QWORD PTR [rbx]
   1400125e8:	mov    rdx,rdi
   1400125eb:	mov    rcx,rbx
   1400125ee:	call   QWORD PTR [rax+0x8]
   1400125f1:	test   al,al
   1400125f3:	je     0x140012601
   1400125f5:	mov    rax,QWORD PTR [rdi]
   1400125f8:	mov    rdx,rbx
   1400125fb:	mov    rcx,rdi
   1400125fe:	call   QWORD PTR [rax+0x28]
   140012601:	mov    rax,QWORD PTR [rbx]
   140012604:	mov    rdx,rdi
   140012607:	mov    rcx,rbx
   14001260a:	call   QWORD PTR [rax+0x10]
   14001260d:	mov    rdi,QWORD PTR [rsi+0x18]
   140012611:	test   rdi,rdi
   140012614:	je     0x14001263e
   140012616:	mov    rax,QWORD PTR [rbx]
   140012619:	mov    rdx,rdi
   14001261c:	mov    rcx,rbx
   14001261f:	call   QWORD PTR [rax+0x8]
   140012622:	test   al,al
   140012624:	je     0x140012632
   140012626:	mov    rax,QWORD PTR [rdi]
   140012629:	mov    rdx,rbx
   14001262c:	mov    rcx,rdi
   14001262f:	call   QWORD PTR [rax+0x28]
   140012632:	mov    rax,QWORD PTR [rbx]
   140012635:	mov    rdx,rdi
   140012638:	mov    rcx,rbx
   14001263b:	call   QWORD PTR [rax+0x10]
   14001263e:	mov    rdi,QWORD PTR [rsi+0x20]
   140012642:	test   rdi,rdi
   140012645:	je     0x14001266f
   140012647:	mov    rax,QWORD PTR [rbx]
   14001264a:	mov    rdx,rdi
   14001264d:	mov    rcx,rbx
   140012650:	call   QWORD PTR [rax+0x8]
   140012653:	test   al,al
   140012655:	je     0x140012663
   140012657:	mov    rax,QWORD PTR [rdi]
   14001265a:	mov    rdx,rbx
   14001265d:	mov    rcx,rdi
   140012660:	call   QWORD PTR [rax+0x28]
   140012663:	mov    rax,QWORD PTR [rbx]
   140012666:	mov    rdx,rdi
   140012669:	mov    rcx,rbx
   14001266c:	call   QWORD PTR [rax+0x10]
   14001266f:	mov    rdi,QWORD PTR [rsp+0x30]
   140012674:	mov    rax,QWORD PTR [rbx]
   140012677:	mov    rdx,rsi
   14001267a:	mov    rcx,rbx
   14001267d:	mov    rbx,QWORD PTR [rsp+0x38]
   140012682:	add    rsp,0x20
   140012686:	pop    rsi
   140012687:	rex.W jmp QWORD PTR [rax+0x428]
   14001268e:	int3   
   14001268f:	int3   
   140012690:	mov    QWORD PTR [rsp+0x10],rbx
   140012695:	push   rsi
   140012696:	sub    rsp,0x20
   14001269a:	mov    rax,QWORD PTR [rdx]
   14001269d:	mov    rbx,rdx
   1400126a0:	mov    rsi,rcx
   1400126a3:	mov    rdx,rcx
   1400126a6:	mov    rcx,rbx
   1400126a9:	call   QWORD PTR [rax+0x140]
   1400126af:	test   al,al
   1400126b1:	je     0x14001271f
   1400126b3:	mov    QWORD PTR [rsp+0x30],rdi
   1400126b8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400126bc:	test   rdi,rdi
   1400126bf:	je     0x1400126e9
   1400126c1:	mov    rax,QWORD PTR [rbx]
   1400126c4:	mov    rdx,rdi
   1400126c7:	mov    rcx,rbx
   1400126ca:	call   QWORD PTR [rax+0x8]
   1400126cd:	test   al,al
   1400126cf:	je     0x1400126dd
   1400126d1:	mov    rax,QWORD PTR [rdi]
   1400126d4:	mov    rdx,rbx
   1400126d7:	mov    rcx,rdi
   1400126da:	call   QWORD PTR [rax+0x28]
   1400126dd:	mov    rax,QWORD PTR [rbx]
   1400126e0:	mov    rdx,rdi
   1400126e3:	mov    rcx,rbx
   1400126e6:	call   QWORD PTR [rax+0x10]
   1400126e9:	mov    rdi,QWORD PTR [rsi+0x18]
   1400126ed:	test   rdi,rdi
   1400126f0:	je     0x14001271a
   1400126f2:	mov    rax,QWORD PTR [rbx]
   1400126f5:	mov    rdx,rdi
   1400126f8:	mov    rcx,rbx
   1400126fb:	call   QWORD PTR [rax+0x8]
   1400126fe:	test   al,al
   140012700:	je     0x14001270e
   140012702:	mov    rax,QWORD PTR [rdi]
   140012705:	mov    rdx,rbx
   140012708:	mov    rcx,rdi
   14001270b:	call   QWORD PTR [rax+0x28]
   14001270e:	mov    rax,QWORD PTR [rbx]
   140012711:	mov    rdx,rdi
   140012714:	mov    rcx,rbx
   140012717:	call   QWORD PTR [rax+0x10]
   14001271a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001271f:	mov    rax,QWORD PTR [rbx]
   140012722:	mov    rdx,rsi
   140012725:	mov    rcx,rbx
   140012728:	mov    rbx,QWORD PTR [rsp+0x38]
   14001272d:	add    rsp,0x20
   140012731:	pop    rsi
   140012732:	rex.W jmp QWORD PTR [rax+0x420]
   140012739:	int3   
   14001273a:	int3   
   14001273b:	int3   
   14001273c:	int3   
   14001273d:	int3   
   14001273e:	int3   
   14001273f:	int3   
   140012740:	mov    QWORD PTR [rsp+0x10],rbx
   140012745:	push   rsi
   140012746:	sub    rsp,0x20
   14001274a:	mov    rax,QWORD PTR [rdx]
   14001274d:	mov    rbx,rdx
   140012750:	mov    rsi,rcx
   140012753:	mov    rdx,rcx
   140012756:	mov    rcx,rbx
   140012759:	call   QWORD PTR [rax+0x138]
   14001275f:	test   al,al
   140012761:	je     0x14001279e
   140012763:	mov    QWORD PTR [rsp+0x30],rdi
   140012768:	mov    rdi,QWORD PTR [rsi+0x10]
   14001276c:	test   rdi,rdi
   14001276f:	je     0x140012799
   140012771:	mov    rax,QWORD PTR [rbx]
   140012774:	mov    rdx,rdi
   140012777:	mov    rcx,rbx
   14001277a:	call   QWORD PTR [rax+0x8]
   14001277d:	test   al,al
   14001277f:	je     0x14001278d
   140012781:	mov    rax,QWORD PTR [rdi]
   140012784:	mov    rdx,rbx
   140012787:	mov    rcx,rdi
   14001278a:	call   QWORD PTR [rax+0x28]
   14001278d:	mov    rax,QWORD PTR [rbx]
   140012790:	mov    rdx,rdi
   140012793:	mov    rcx,rbx
   140012796:	call   QWORD PTR [rax+0x10]
   140012799:	mov    rdi,QWORD PTR [rsp+0x30]
   14001279e:	mov    rax,QWORD PTR [rbx]
   1400127a1:	mov    rdx,rsi
   1400127a4:	mov    rcx,rbx
   1400127a7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400127ac:	add    rsp,0x20
   1400127b0:	pop    rsi
   1400127b1:	rex.W jmp QWORD PTR [rax+0x418]
   1400127b8:	int3   
   1400127b9:	int3   
   1400127ba:	int3   
   1400127bb:	int3   
   1400127bc:	int3   
   1400127bd:	int3   
   1400127be:	int3   
   1400127bf:	int3   
   1400127c0:	mov    QWORD PTR [rsp+0x18],rbp
   1400127c5:	push   rsi
   1400127c6:	sub    rsp,0x20
   1400127ca:	mov    rax,QWORD PTR [rdx]
   1400127cd:	mov    rsi,rdx
   1400127d0:	mov    rbp,rcx
   1400127d3:	mov    rdx,rcx
   1400127d6:	mov    rcx,rsi
   1400127d9:	call   QWORD PTR [rax+0x130]
   1400127df:	test   al,al
   1400127e1:	je     0x140012839
   1400127e3:	mov    QWORD PTR [rsp+0x30],rbx
   1400127e8:	mov    rbx,rbp
   1400127eb:	test   rbp,rbp
   1400127ee:	je     0x140012834
   1400127f0:	mov    QWORD PTR [rsp+0x38],rdi
   1400127f5:	mov    rdi,QWORD PTR [rbx+0x10]
   1400127f9:	test   rdi,rdi
   1400127fc:	je     0x140012826
   1400127fe:	mov    rax,QWORD PTR [rsi]
   140012801:	mov    rdx,rdi
   140012804:	mov    rcx,rsi
   140012807:	call   QWORD PTR [rax+0x8]
   14001280a:	test   al,al
   14001280c:	je     0x14001281a
   14001280e:	mov    rax,QWORD PTR [rdi]
   140012811:	mov    rdx,rsi
   140012814:	mov    rcx,rdi
   140012817:	call   QWORD PTR [rax+0x28]
   14001281a:	mov    rax,QWORD PTR [rsi]
   14001281d:	mov    rdx,rdi
   140012820:	mov    rcx,rsi
   140012823:	call   QWORD PTR [rax+0x10]
   140012826:	mov    rbx,QWORD PTR [rbx+0x18]
   14001282a:	test   rbx,rbx
   14001282d:	jne    0x1400127f5
   14001282f:	mov    rdi,QWORD PTR [rsp+0x38]
   140012834:	mov    rbx,QWORD PTR [rsp+0x30]
   140012839:	mov    rax,QWORD PTR [rsi]
   14001283c:	mov    rdx,rbp
   14001283f:	mov    rcx,rsi
   140012842:	mov    rbp,QWORD PTR [rsp+0x40]
   140012847:	add    rsp,0x20
   14001284b:	pop    rsi
   14001284c:	rex.W jmp QWORD PTR [rax+0x410]
   140012853:	int3   
   140012854:	int3   
   140012855:	int3   
   140012856:	int3   
   140012857:	int3   
   140012858:	int3   
   140012859:	int3   
   14001285a:	int3   
   14001285b:	int3   
   14001285c:	int3   
   14001285d:	int3   
   14001285e:	int3   
   14001285f:	int3   
   140012860:	mov    QWORD PTR [rsp+0x10],rbx
   140012865:	push   rsi
   140012866:	sub    rsp,0x20
   14001286a:	mov    rax,QWORD PTR [rdx]
   14001286d:	mov    rbx,rdx
   140012870:	mov    rsi,rcx
   140012873:	mov    rdx,rcx
   140012876:	mov    rcx,rbx
   140012879:	call   QWORD PTR [rax+0x128]
   14001287f:	test   al,al
   140012881:	je     0x1400128be
   140012883:	mov    QWORD PTR [rsp+0x30],rdi
   140012888:	mov    rdi,QWORD PTR [rsi+0x10]
   14001288c:	test   rdi,rdi
   14001288f:	je     0x1400128b9
   140012891:	mov    rax,QWORD PTR [rbx]
   140012894:	mov    rdx,rdi
   140012897:	mov    rcx,rbx
   14001289a:	call   QWORD PTR [rax+0x8]
   14001289d:	test   al,al
   14001289f:	je     0x1400128ad
   1400128a1:	mov    rax,QWORD PTR [rdi]
   1400128a4:	mov    rdx,rbx
   1400128a7:	mov    rcx,rdi
   1400128aa:	call   QWORD PTR [rax+0x28]
   1400128ad:	mov    rax,QWORD PTR [rbx]
   1400128b0:	mov    rdx,rdi
   1400128b3:	mov    rcx,rbx
   1400128b6:	call   QWORD PTR [rax+0x10]
   1400128b9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400128be:	mov    rax,QWORD PTR [rbx]
   1400128c1:	mov    rdx,rsi
   1400128c4:	mov    rcx,rbx
   1400128c7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400128cc:	add    rsp,0x20
   1400128d0:	pop    rsi
   1400128d1:	rex.W jmp QWORD PTR [rax+0x408]
   1400128d8:	int3   
   1400128d9:	int3   
   1400128da:	int3   
   1400128db:	int3   
   1400128dc:	int3   
   1400128dd:	int3   
   1400128de:	int3   
   1400128df:	int3   
   1400128e0:	mov    QWORD PTR [rsp+0x18],rbp
   1400128e5:	push   rsi
   1400128e6:	sub    rsp,0x20
   1400128ea:	mov    rax,QWORD PTR [rdx]
   1400128ed:	mov    rsi,rdx
   1400128f0:	mov    rbp,rcx
   1400128f3:	mov    rdx,rcx
   1400128f6:	mov    rcx,rsi
   1400128f9:	call   QWORD PTR [rax+0x120]
   1400128ff:	test   al,al
   140012901:	je     0x140012959
   140012903:	mov    QWORD PTR [rsp+0x30],rbx
   140012908:	mov    rbx,rbp
   14001290b:	test   rbp,rbp
   14001290e:	je     0x140012954
   140012910:	mov    QWORD PTR [rsp+0x38],rdi
   140012915:	mov    rdi,QWORD PTR [rbx+0x10]
   140012919:	test   rdi,rdi
   14001291c:	je     0x140012946
   14001291e:	mov    rax,QWORD PTR [rsi]
   140012921:	mov    rdx,rdi
   140012924:	mov    rcx,rsi
   140012927:	call   QWORD PTR [rax+0x8]
   14001292a:	test   al,al
   14001292c:	je     0x14001293a
   14001292e:	mov    rax,QWORD PTR [rdi]
   140012931:	mov    rdx,rsi
   140012934:	mov    rcx,rdi
   140012937:	call   QWORD PTR [rax+0x28]
   14001293a:	mov    rax,QWORD PTR [rsi]
   14001293d:	mov    rdx,rdi
   140012940:	mov    rcx,rsi
   140012943:	call   QWORD PTR [rax+0x10]
   140012946:	mov    rbx,QWORD PTR [rbx+0x18]
   14001294a:	test   rbx,rbx
   14001294d:	jne    0x140012915
   14001294f:	mov    rdi,QWORD PTR [rsp+0x38]
   140012954:	mov    rbx,QWORD PTR [rsp+0x30]
   140012959:	mov    rax,QWORD PTR [rsi]
   14001295c:	mov    rdx,rbp
   14001295f:	mov    rcx,rsi
   140012962:	mov    rbp,QWORD PTR [rsp+0x40]
   140012967:	add    rsp,0x20
   14001296b:	pop    rsi
   14001296c:	rex.W jmp QWORD PTR [rax+0x400]
   140012973:	int3   
   140012974:	int3   
   140012975:	int3   
   140012976:	int3   
   140012977:	int3   
   140012978:	int3   
   140012979:	int3   
   14001297a:	int3   
   14001297b:	int3   
   14001297c:	int3   
   14001297d:	int3   
   14001297e:	int3   
   14001297f:	int3   
   140012980:	mov    QWORD PTR [rsp+0x10],rbx
   140012985:	push   rsi
   140012986:	sub    rsp,0x20
   14001298a:	mov    rax,QWORD PTR [rdx]
   14001298d:	mov    rbx,rdx
   140012990:	mov    rsi,rcx
   140012993:	mov    rdx,rcx
   140012996:	mov    rcx,rbx
   140012999:	call   QWORD PTR [rax+0x118]
   14001299f:	test   al,al
   1400129a1:	je     0x1400129de
   1400129a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400129a8:	mov    rdi,QWORD PTR [rsi+0x20]
   1400129ac:	test   rdi,rdi
   1400129af:	je     0x1400129d9
   1400129b1:	mov    rax,QWORD PTR [rbx]
   1400129b4:	mov    rdx,rdi
   1400129b7:	mov    rcx,rbx
   1400129ba:	call   QWORD PTR [rax+0x8]
   1400129bd:	test   al,al
   1400129bf:	je     0x1400129cd
   1400129c1:	mov    rax,QWORD PTR [rdi]
   1400129c4:	mov    rdx,rbx
   1400129c7:	mov    rcx,rdi
   1400129ca:	call   QWORD PTR [rax+0x28]
   1400129cd:	mov    rax,QWORD PTR [rbx]
   1400129d0:	mov    rdx,rdi
   1400129d3:	mov    rcx,rbx
   1400129d6:	call   QWORD PTR [rax+0x10]
   1400129d9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400129de:	mov    rax,QWORD PTR [rbx]
   1400129e1:	mov    rdx,rsi
   1400129e4:	mov    rcx,rbx
   1400129e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400129ec:	add    rsp,0x20
   1400129f0:	pop    rsi
   1400129f1:	rex.W jmp QWORD PTR [rax+0x3f8]
   1400129f8:	int3   
   1400129f9:	int3   
   1400129fa:	int3   
   1400129fb:	int3   
   1400129fc:	int3   
   1400129fd:	int3   
   1400129fe:	int3   
   1400129ff:	int3   
   140012a00:	mov    QWORD PTR [rsp+0x8],rbx
   140012a05:	push   rdi
   140012a06:	sub    rsp,0x20
   140012a0a:	mov    rax,QWORD PTR [rdx]
   140012a0d:	mov    rdi,rdx
   140012a10:	mov    rbx,rcx
   140012a13:	mov    rdx,rcx
   140012a16:	mov    rcx,rdi
   140012a19:	call   QWORD PTR [rax+0x110]
   140012a1f:	mov    r11,QWORD PTR [rdi]
   140012a22:	mov    rdx,rbx
   140012a25:	mov    rcx,rdi
   140012a28:	mov    rbx,QWORD PTR [rsp+0x30]
   140012a2d:	add    rsp,0x20
   140012a31:	pop    rdi
   140012a32:	rex.WB jmp QWORD PTR [r11+0x3f0]
   140012a39:	int3   
   140012a3a:	int3   
   140012a3b:	int3   
   140012a3c:	int3   
   140012a3d:	int3   
   140012a3e:	int3   
   140012a3f:	int3   
   140012a40:	mov    QWORD PTR [rsp+0x10],rbx
   140012a45:	push   rsi
   140012a46:	sub    rsp,0x20
   140012a4a:	mov    rax,QWORD PTR [rdx]
   140012a4d:	mov    rbx,rdx
   140012a50:	mov    rsi,rcx
   140012a53:	mov    rdx,rcx
   140012a56:	mov    rcx,rbx
   140012a59:	call   QWORD PTR [rax+0x108]
   140012a5f:	test   al,al
   140012a61:	je     0x140012a9e
   140012a63:	mov    QWORD PTR [rsp+0x30],rdi
   140012a68:	mov    rdi,QWORD PTR [rsi+0x10]
   140012a6c:	test   rdi,rdi
   140012a6f:	je     0x140012a99
   140012a71:	mov    rax,QWORD PTR [rbx]
   140012a74:	mov    rdx,rdi
   140012a77:	mov    rcx,rbx
   140012a7a:	call   QWORD PTR [rax+0x8]
   140012a7d:	test   al,al
   140012a7f:	je     0x140012a8d
   140012a81:	mov    rax,QWORD PTR [rdi]
   140012a84:	mov    rdx,rbx
   140012a87:	mov    rcx,rdi
   140012a8a:	call   QWORD PTR [rax+0x28]
   140012a8d:	mov    rax,QWORD PTR [rbx]
   140012a90:	mov    rdx,rdi
   140012a93:	mov    rcx,rbx
   140012a96:	call   QWORD PTR [rax+0x10]
   140012a99:	mov    rdi,QWORD PTR [rsp+0x30]
   140012a9e:	mov    rax,QWORD PTR [rbx]
   140012aa1:	mov    rdx,rsi
   140012aa4:	mov    rcx,rbx
   140012aa7:	mov    rbx,QWORD PTR [rsp+0x38]
   140012aac:	add    rsp,0x20
   140012ab0:	pop    rsi
   140012ab1:	rex.W jmp QWORD PTR [rax+0x3e8]
   140012ab8:	int3   
   140012ab9:	int3   
   140012aba:	int3   
   140012abb:	int3   
   140012abc:	int3   
   140012abd:	int3   
   140012abe:	int3   
   140012abf:	int3   
   140012ac0:	mov    QWORD PTR [rsp+0x10],rbx
   140012ac5:	push   rsi
   140012ac6:	sub    rsp,0x20
   140012aca:	mov    rax,QWORD PTR [rdx]
   140012acd:	mov    rbx,rdx
   140012ad0:	mov    rsi,rcx
   140012ad3:	mov    rdx,rcx
   140012ad6:	mov    rcx,rbx
   140012ad9:	call   QWORD PTR [rax+0x100]
   140012adf:	test   al,al
   140012ae1:	je     0x140012b84
   140012ae7:	mov    QWORD PTR [rsp+0x30],rdi
   140012aec:	mov    rdi,QWORD PTR [rsi+0x10]
   140012af0:	test   rdi,rdi
   140012af3:	je     0x140012b1d
   140012af5:	mov    rax,QWORD PTR [rbx]
   140012af8:	mov    rdx,rdi
   140012afb:	mov    rcx,rbx
   140012afe:	call   QWORD PTR [rax+0x8]
   140012b01:	test   al,al
   140012b03:	je     0x140012b11
   140012b05:	mov    rax,QWORD PTR [rdi]
   140012b08:	mov    rdx,rbx
   140012b0b:	mov    rcx,rdi
   140012b0e:	call   QWORD PTR [rax+0x28]
   140012b11:	mov    rax,QWORD PTR [rbx]
   140012b14:	mov    rdx,rdi
   140012b17:	mov    rcx,rbx
   140012b1a:	call   QWORD PTR [rax+0x10]
   140012b1d:	mov    rdi,QWORD PTR [rsi+0x18]
   140012b21:	test   rdi,rdi
   140012b24:	je     0x140012b4e
   140012b26:	mov    rax,QWORD PTR [rbx]
   140012b29:	mov    rdx,rdi
   140012b2c:	mov    rcx,rbx
   140012b2f:	call   QWORD PTR [rax+0x8]
   140012b32:	test   al,al
   140012b34:	je     0x140012b42
   140012b36:	mov    rax,QWORD PTR [rdi]
   140012b39:	mov    rdx,rbx
   140012b3c:	mov    rcx,rdi
   140012b3f:	call   QWORD PTR [rax+0x28]
   140012b42:	mov    rax,QWORD PTR [rbx]
   140012b45:	mov    rdx,rdi
   140012b48:	mov    rcx,rbx
   140012b4b:	call   QWORD PTR [rax+0x10]
   140012b4e:	mov    rdi,QWORD PTR [rsi+0x20]
   140012b52:	test   rdi,rdi
   140012b55:	je     0x140012b7f
   140012b57:	mov    rax,QWORD PTR [rbx]
   140012b5a:	mov    rdx,rdi
   140012b5d:	mov    rcx,rbx
   140012b60:	call   QWORD PTR [rax+0x8]
   140012b63:	test   al,al
   140012b65:	je     0x140012b73
   140012b67:	mov    rax,QWORD PTR [rdi]
   140012b6a:	mov    rdx,rbx
   140012b6d:	mov    rcx,rdi
   140012b70:	call   QWORD PTR [rax+0x28]
   140012b73:	mov    rax,QWORD PTR [rbx]
   140012b76:	mov    rdx,rdi
   140012b79:	mov    rcx,rbx
   140012b7c:	call   QWORD PTR [rax+0x10]
   140012b7f:	mov    rdi,QWORD PTR [rsp+0x30]
   140012b84:	mov    rax,QWORD PTR [rbx]
   140012b87:	mov    rdx,rsi
   140012b8a:	mov    rcx,rbx
   140012b8d:	mov    rbx,QWORD PTR [rsp+0x38]
   140012b92:	add    rsp,0x20
   140012b96:	pop    rsi
   140012b97:	rex.W jmp QWORD PTR [rax+0x3e0]
   140012b9e:	int3   
   140012b9f:	int3   
   140012ba0:	mov    QWORD PTR [rsp+0x10],rbx
   140012ba5:	push   rsi
   140012ba6:	sub    rsp,0x20
   140012baa:	mov    rax,QWORD PTR [rdx]
   140012bad:	mov    rbx,rdx
   140012bb0:	mov    rsi,rcx
   140012bb3:	mov    rdx,rcx
   140012bb6:	mov    rcx,rbx
   140012bb9:	call   QWORD PTR [rax+0xf8]
   140012bbf:	test   al,al
   140012bc1:	je     0x140012c2f
   140012bc3:	mov    QWORD PTR [rsp+0x30],rdi
   140012bc8:	mov    rdi,QWORD PTR [rsi+0x10]
   140012bcc:	test   rdi,rdi
   140012bcf:	je     0x140012bf9
   140012bd1:	mov    rax,QWORD PTR [rbx]
   140012bd4:	mov    rdx,rdi
   140012bd7:	mov    rcx,rbx
   140012bda:	call   QWORD PTR [rax+0x8]
   140012bdd:	test   al,al
   140012bdf:	je     0x140012bed
   140012be1:	mov    rax,QWORD PTR [rdi]
   140012be4:	mov    rdx,rbx
   140012be7:	mov    rcx,rdi
   140012bea:	call   QWORD PTR [rax+0x28]
   140012bed:	mov    rax,QWORD PTR [rbx]
   140012bf0:	mov    rdx,rdi
   140012bf3:	mov    rcx,rbx
   140012bf6:	call   QWORD PTR [rax+0x10]
   140012bf9:	mov    rdi,QWORD PTR [rsi+0x18]
   140012bfd:	test   rdi,rdi
   140012c00:	je     0x140012c2a
   140012c02:	mov    rax,QWORD PTR [rbx]
   140012c05:	mov    rdx,rdi
   140012c08:	mov    rcx,rbx
   140012c0b:	call   QWORD PTR [rax+0x8]
   140012c0e:	test   al,al
   140012c10:	je     0x140012c1e
   140012c12:	mov    rax,QWORD PTR [rdi]
   140012c15:	mov    rdx,rbx
   140012c18:	mov    rcx,rdi
   140012c1b:	call   QWORD PTR [rax+0x28]
   140012c1e:	mov    rax,QWORD PTR [rbx]
   140012c21:	mov    rdx,rdi
   140012c24:	mov    rcx,rbx
   140012c27:	call   QWORD PTR [rax+0x10]
   140012c2a:	mov    rdi,QWORD PTR [rsp+0x30]
   140012c2f:	mov    rax,QWORD PTR [rbx]
   140012c32:	mov    rdx,rsi
   140012c35:	mov    rcx,rbx
   140012c38:	mov    rbx,QWORD PTR [rsp+0x38]
   140012c3d:	add    rsp,0x20
   140012c41:	pop    rsi
   140012c42:	rex.W jmp QWORD PTR [rax+0x3d8]
   140012c49:	int3   
   140012c4a:	int3   
   140012c4b:	int3   
   140012c4c:	int3   
   140012c4d:	int3   
   140012c4e:	int3   
   140012c4f:	int3   
   140012c50:	mov    QWORD PTR [rsp+0x10],rbx
   140012c55:	push   rsi
   140012c56:	sub    rsp,0x20
   140012c5a:	mov    rax,QWORD PTR [rdx]
   140012c5d:	mov    rbx,rdx
   140012c60:	mov    rsi,rcx
   140012c63:	mov    rdx,rcx
   140012c66:	mov    rcx,rbx
   140012c69:	call   QWORD PTR [rax+0xf0]
   140012c6f:	test   al,al
   140012c71:	je     0x140012cdf
   140012c73:	mov    QWORD PTR [rsp+0x30],rdi
   140012c78:	mov    rdi,QWORD PTR [rsi+0x10]
   140012c7c:	test   rdi,rdi
   140012c7f:	je     0x140012ca9
   140012c81:	mov    rax,QWORD PTR [rbx]
   140012c84:	mov    rdx,rdi
   140012c87:	mov    rcx,rbx
   140012c8a:	call   QWORD PTR [rax+0x8]
   140012c8d:	test   al,al
   140012c8f:	je     0x140012c9d
   140012c91:	mov    rax,QWORD PTR [rdi]
   140012c94:	mov    rdx,rbx
   140012c97:	mov    rcx,rdi
   140012c9a:	call   QWORD PTR [rax+0x28]
   140012c9d:	mov    rax,QWORD PTR [rbx]
   140012ca0:	mov    rdx,rdi
   140012ca3:	mov    rcx,rbx
   140012ca6:	call   QWORD PTR [rax+0x10]
   140012ca9:	mov    rdi,QWORD PTR [rsi+0x18]
   140012cad:	test   rdi,rdi
   140012cb0:	je     0x140012cda
   140012cb2:	mov    rax,QWORD PTR [rbx]
   140012cb5:	mov    rdx,rdi
   140012cb8:	mov    rcx,rbx
   140012cbb:	call   QWORD PTR [rax+0x8]
   140012cbe:	test   al,al
   140012cc0:	je     0x140012cce
   140012cc2:	mov    rax,QWORD PTR [rdi]
   140012cc5:	mov    rdx,rbx
   140012cc8:	mov    rcx,rdi
   140012ccb:	call   QWORD PTR [rax+0x28]
   140012cce:	mov    rax,QWORD PTR [rbx]
   140012cd1:	mov    rdx,rdi
   140012cd4:	mov    rcx,rbx
   140012cd7:	call   QWORD PTR [rax+0x10]
   140012cda:	mov    rdi,QWORD PTR [rsp+0x30]
   140012cdf:	mov    rax,QWORD PTR [rbx]
   140012ce2:	mov    rdx,rsi
   140012ce5:	mov    rcx,rbx
   140012ce8:	mov    rbx,QWORD PTR [rsp+0x38]
   140012ced:	add    rsp,0x20
   140012cf1:	pop    rsi
   140012cf2:	rex.W jmp QWORD PTR [rax+0x3d0]
   140012cf9:	int3   
   140012cfa:	int3   
   140012cfb:	int3   
   140012cfc:	int3   
   140012cfd:	int3   
   140012cfe:	int3   
   140012cff:	int3   
   140012d00:	mov    QWORD PTR [rsp+0x10],rbx
   140012d05:	push   rsi
   140012d06:	sub    rsp,0x20
   140012d0a:	mov    rax,QWORD PTR [rdx]
   140012d0d:	mov    rbx,rdx
   140012d10:	mov    rsi,rcx
   140012d13:	mov    rdx,rcx
   140012d16:	mov    rcx,rbx
   140012d19:	call   QWORD PTR [rax+0xe8]
   140012d1f:	test   al,al
   140012d21:	je     0x140012df5
   140012d27:	mov    QWORD PTR [rsp+0x30],rdi
   140012d2c:	mov    rdi,QWORD PTR [rsi+0x10]
   140012d30:	test   rdi,rdi
   140012d33:	je     0x140012d5d
   140012d35:	mov    rax,QWORD PTR [rbx]
   140012d38:	mov    rdx,rdi
   140012d3b:	mov    rcx,rbx
   140012d3e:	call   QWORD PTR [rax+0x8]
   140012d41:	test   al,al
   140012d43:	je     0x140012d51
   140012d45:	mov    rax,QWORD PTR [rdi]
   140012d48:	mov    rdx,rbx
   140012d4b:	mov    rcx,rdi
   140012d4e:	call   QWORD PTR [rax+0x28]
   140012d51:	mov    rax,QWORD PTR [rbx]
   140012d54:	mov    rdx,rdi
   140012d57:	mov    rcx,rbx
   140012d5a:	call   QWORD PTR [rax+0x10]
   140012d5d:	mov    rdi,QWORD PTR [rsi+0x18]
   140012d61:	test   rdi,rdi
   140012d64:	je     0x140012d8e
   140012d66:	mov    rax,QWORD PTR [rbx]
   140012d69:	mov    rdx,rdi
   140012d6c:	mov    rcx,rbx
   140012d6f:	call   QWORD PTR [rax+0x8]
   140012d72:	test   al,al
   140012d74:	je     0x140012d82
   140012d76:	mov    rax,QWORD PTR [rdi]
   140012d79:	mov    rdx,rbx
   140012d7c:	mov    rcx,rdi
   140012d7f:	call   QWORD PTR [rax+0x28]
   140012d82:	mov    rax,QWORD PTR [rbx]
   140012d85:	mov    rdx,rdi
   140012d88:	mov    rcx,rbx
   140012d8b:	call   QWORD PTR [rax+0x10]
   140012d8e:	mov    rdi,QWORD PTR [rsi+0x20]
   140012d92:	test   rdi,rdi
   140012d95:	je     0x140012dbf
   140012d97:	mov    rax,QWORD PTR [rbx]
   140012d9a:	mov    rdx,rdi
   140012d9d:	mov    rcx,rbx
   140012da0:	call   QWORD PTR [rax+0x8]
   140012da3:	test   al,al
   140012da5:	je     0x140012db3
   140012da7:	mov    rax,QWORD PTR [rdi]
   140012daa:	mov    rdx,rbx
   140012dad:	mov    rcx,rdi
   140012db0:	call   QWORD PTR [rax+0x28]
   140012db3:	mov    rax,QWORD PTR [rbx]
   140012db6:	mov    rdx,rdi
   140012db9:	mov    rcx,rbx
   140012dbc:	call   QWORD PTR [rax+0x10]
   140012dbf:	mov    rdi,QWORD PTR [rsi+0x28]
   140012dc3:	test   rdi,rdi
   140012dc6:	je     0x140012df0
   140012dc8:	mov    rax,QWORD PTR [rbx]
   140012dcb:	mov    rdx,rdi
   140012dce:	mov    rcx,rbx
   140012dd1:	call   QWORD PTR [rax+0x8]
   140012dd4:	test   al,al
   140012dd6:	je     0x140012de4
   140012dd8:	mov    rax,QWORD PTR [rdi]
   140012ddb:	mov    rdx,rbx
   140012dde:	mov    rcx,rdi
   140012de1:	call   QWORD PTR [rax+0x28]
   140012de4:	mov    rax,QWORD PTR [rbx]
   140012de7:	mov    rdx,rdi
   140012dea:	mov    rcx,rbx
   140012ded:	call   QWORD PTR [rax+0x10]
   140012df0:	mov    rdi,QWORD PTR [rsp+0x30]
   140012df5:	mov    rax,QWORD PTR [rbx]
   140012df8:	mov    rdx,rsi
   140012dfb:	mov    rcx,rbx
   140012dfe:	mov    rbx,QWORD PTR [rsp+0x38]
   140012e03:	add    rsp,0x20
   140012e07:	pop    rsi
   140012e08:	rex.W jmp QWORD PTR [rax+0x3c8]
   140012e0f:	int3   
   140012e10:	mov    QWORD PTR [rsp+0x10],rbx
   140012e15:	push   rsi
   140012e16:	sub    rsp,0x20
   140012e1a:	mov    rax,QWORD PTR [rdx]
   140012e1d:	mov    rbx,rdx
   140012e20:	mov    rsi,rcx
   140012e23:	mov    rdx,rcx
   140012e26:	mov    rcx,rbx
   140012e29:	call   QWORD PTR [rax+0xe0]
   140012e2f:	test   al,al
   140012e31:	je     0x140012f05
   140012e37:	mov    QWORD PTR [rsp+0x30],rdi
   140012e3c:	mov    rdi,QWORD PTR [rsi+0x10]
   140012e40:	test   rdi,rdi
   140012e43:	je     0x140012e6d
   140012e45:	mov    rax,QWORD PTR [rbx]
   140012e48:	mov    rdx,rdi
   140012e4b:	mov    rcx,rbx
   140012e4e:	call   QWORD PTR [rax+0x8]
   140012e51:	test   al,al
   140012e53:	je     0x140012e61
   140012e55:	mov    rax,QWORD PTR [rdi]
   140012e58:	mov    rdx,rbx
   140012e5b:	mov    rcx,rdi
   140012e5e:	call   QWORD PTR [rax+0x28]
   140012e61:	mov    rax,QWORD PTR [rbx]
   140012e64:	mov    rdx,rdi
   140012e67:	mov    rcx,rbx
   140012e6a:	call   QWORD PTR [rax+0x10]
   140012e6d:	mov    rdi,QWORD PTR [rsi+0x18]
   140012e71:	test   rdi,rdi
   140012e74:	je     0x140012e9e
   140012e76:	mov    rax,QWORD PTR [rbx]
   140012e79:	mov    rdx,rdi
   140012e7c:	mov    rcx,rbx
   140012e7f:	call   QWORD PTR [rax+0x8]
   140012e82:	test   al,al
   140012e84:	je     0x140012e92
   140012e86:	mov    rax,QWORD PTR [rdi]
   140012e89:	mov    rdx,rbx
   140012e8c:	mov    rcx,rdi
   140012e8f:	call   QWORD PTR [rax+0x28]
   140012e92:	mov    rax,QWORD PTR [rbx]
   140012e95:	mov    rdx,rdi
   140012e98:	mov    rcx,rbx
   140012e9b:	call   QWORD PTR [rax+0x10]
   140012e9e:	mov    rdi,QWORD PTR [rsi+0x20]
   140012ea2:	test   rdi,rdi
   140012ea5:	je     0x140012ecf
   140012ea7:	mov    rax,QWORD PTR [rbx]
   140012eaa:	mov    rdx,rdi
   140012ead:	mov    rcx,rbx
   140012eb0:	call   QWORD PTR [rax+0x8]
   140012eb3:	test   al,al
   140012eb5:	je     0x140012ec3
   140012eb7:	mov    rax,QWORD PTR [rdi]
   140012eba:	mov    rdx,rbx
   140012ebd:	mov    rcx,rdi
   140012ec0:	call   QWORD PTR [rax+0x28]
   140012ec3:	mov    rax,QWORD PTR [rbx]
   140012ec6:	mov    rdx,rdi
   140012ec9:	mov    rcx,rbx
   140012ecc:	call   QWORD PTR [rax+0x10]
   140012ecf:	mov    rdi,QWORD PTR [rsi+0x28]
   140012ed3:	test   rdi,rdi
   140012ed6:	je     0x140012f00
   140012ed8:	mov    rax,QWORD PTR [rbx]
   140012edb:	mov    rdx,rdi
   140012ede:	mov    rcx,rbx
   140012ee1:	call   QWORD PTR [rax+0x8]
   140012ee4:	test   al,al
   140012ee6:	je     0x140012ef4
   140012ee8:	mov    rax,QWORD PTR [rdi]
   140012eeb:	mov    rdx,rbx
   140012eee:	mov    rcx,rdi
   140012ef1:	call   QWORD PTR [rax+0x28]
   140012ef4:	mov    rax,QWORD PTR [rbx]
   140012ef7:	mov    rdx,rdi
   140012efa:	mov    rcx,rbx
   140012efd:	call   QWORD PTR [rax+0x10]
   140012f00:	mov    rdi,QWORD PTR [rsp+0x30]
   140012f05:	mov    rax,QWORD PTR [rbx]
   140012f08:	mov    rdx,rsi
   140012f0b:	mov    rcx,rbx
   140012f0e:	mov    rbx,QWORD PTR [rsp+0x38]
   140012f13:	add    rsp,0x20
   140012f17:	pop    rsi
   140012f18:	rex.W jmp QWORD PTR [rax+0x3c0]
   140012f1f:	int3   
   140012f20:	mov    QWORD PTR [rsp+0x10],rbx
   140012f25:	push   rsi
   140012f26:	sub    rsp,0x20
   140012f2a:	mov    rax,QWORD PTR [rdx]
   140012f2d:	mov    rbx,rdx
   140012f30:	mov    rsi,rcx
   140012f33:	mov    rdx,rcx
   140012f36:	mov    rcx,rbx
   140012f39:	call   QWORD PTR [rax+0xd8]
   140012f3f:	test   al,al
   140012f41:	je     0x140012fe4
   140012f47:	mov    QWORD PTR [rsp+0x30],rdi
   140012f4c:	mov    rdi,QWORD PTR [rsi+0x10]
   140012f50:	test   rdi,rdi
   140012f53:	je     0x140012f7d
   140012f55:	mov    rax,QWORD PTR [rbx]
   140012f58:	mov    rdx,rdi
   140012f5b:	mov    rcx,rbx
   140012f5e:	call   QWORD PTR [rax+0x8]
   140012f61:	test   al,al
   140012f63:	je     0x140012f71
   140012f65:	mov    rax,QWORD PTR [rdi]
   140012f68:	mov    rdx,rbx
   140012f6b:	mov    rcx,rdi
   140012f6e:	call   QWORD PTR [rax+0x28]
   140012f71:	mov    rax,QWORD PTR [rbx]
   140012f74:	mov    rdx,rdi
   140012f77:	mov    rcx,rbx
   140012f7a:	call   QWORD PTR [rax+0x10]
   140012f7d:	mov    rdi,QWORD PTR [rsi+0x18]
   140012f81:	test   rdi,rdi
   140012f84:	je     0x140012fae
   140012f86:	mov    rax,QWORD PTR [rbx]
   140012f89:	mov    rdx,rdi
   140012f8c:	mov    rcx,rbx
   140012f8f:	call   QWORD PTR [rax+0x8]
   140012f92:	test   al,al
   140012f94:	je     0x140012fa2
   140012f96:	mov    rax,QWORD PTR [rdi]
   140012f99:	mov    rdx,rbx
   140012f9c:	mov    rcx,rdi
   140012f9f:	call   QWORD PTR [rax+0x28]
   140012fa2:	mov    rax,QWORD PTR [rbx]
   140012fa5:	mov    rdx,rdi
   140012fa8:	mov    rcx,rbx
   140012fab:	call   QWORD PTR [rax+0x10]
   140012fae:	mov    rdi,QWORD PTR [rsi+0x20]
   140012fb2:	test   rdi,rdi
   140012fb5:	je     0x140012fdf
   140012fb7:	mov    rax,QWORD PTR [rbx]
   140012fba:	mov    rdx,rdi
   140012fbd:	mov    rcx,rbx
   140012fc0:	call   QWORD PTR [rax+0x8]
   140012fc3:	test   al,al
   140012fc5:	je     0x140012fd3
   140012fc7:	mov    rax,QWORD PTR [rdi]
   140012fca:	mov    rdx,rbx
   140012fcd:	mov    rcx,rdi
   140012fd0:	call   QWORD PTR [rax+0x28]
   140012fd3:	mov    rax,QWORD PTR [rbx]
   140012fd6:	mov    rdx,rdi
   140012fd9:	mov    rcx,rbx
   140012fdc:	call   QWORD PTR [rax+0x10]
   140012fdf:	mov    rdi,QWORD PTR [rsp+0x30]
   140012fe4:	mov    rax,QWORD PTR [rbx]
   140012fe7:	mov    rdx,rsi
   140012fea:	mov    rcx,rbx
   140012fed:	mov    rbx,QWORD PTR [rsp+0x38]
   140012ff2:	add    rsp,0x20
   140012ff6:	pop    rsi
   140012ff7:	rex.W jmp QWORD PTR [rax+0x3b8]
   140012ffe:	int3   
   140012fff:	int3   
   140013000:	mov    QWORD PTR [rsp+0x10],rbx
   140013005:	push   rsi
   140013006:	sub    rsp,0x20
   14001300a:	mov    rax,QWORD PTR [rdx]
   14001300d:	mov    rbx,rdx
   140013010:	mov    rsi,rcx
   140013013:	mov    rdx,rcx
   140013016:	mov    rcx,rbx
   140013019:	call   QWORD PTR [rax+0xd0]
   14001301f:	test   al,al
   140013021:	je     0x1400130c4
   140013027:	mov    QWORD PTR [rsp+0x30],rdi
   14001302c:	mov    rdi,QWORD PTR [rsi+0x10]
   140013030:	test   rdi,rdi
   140013033:	je     0x14001305d
   140013035:	mov    rax,QWORD PTR [rbx]
   140013038:	mov    rdx,rdi
   14001303b:	mov    rcx,rbx
   14001303e:	call   QWORD PTR [rax+0x8]
   140013041:	test   al,al
   140013043:	je     0x140013051
   140013045:	mov    rax,QWORD PTR [rdi]
   140013048:	mov    rdx,rbx
   14001304b:	mov    rcx,rdi
   14001304e:	call   QWORD PTR [rax+0x28]
   140013051:	mov    rax,QWORD PTR [rbx]
   140013054:	mov    rdx,rdi
   140013057:	mov    rcx,rbx
   14001305a:	call   QWORD PTR [rax+0x10]
   14001305d:	mov    rdi,QWORD PTR [rsi+0x18]
   140013061:	test   rdi,rdi
   140013064:	je     0x14001308e
   140013066:	mov    rax,QWORD PTR [rbx]
   140013069:	mov    rdx,rdi
   14001306c:	mov    rcx,rbx
   14001306f:	call   QWORD PTR [rax+0x8]
   140013072:	test   al,al
   140013074:	je     0x140013082
   140013076:	mov    rax,QWORD PTR [rdi]
   140013079:	mov    rdx,rbx
   14001307c:	mov    rcx,rdi
   14001307f:	call   QWORD PTR [rax+0x28]
   140013082:	mov    rax,QWORD PTR [rbx]
   140013085:	mov    rdx,rdi
   140013088:	mov    rcx,rbx
   14001308b:	call   QWORD PTR [rax+0x10]
   14001308e:	mov    rdi,QWORD PTR [rsi+0x20]
   140013092:	test   rdi,rdi
   140013095:	je     0x1400130bf
   140013097:	mov    rax,QWORD PTR [rbx]
   14001309a:	mov    rdx,rdi
   14001309d:	mov    rcx,rbx
   1400130a0:	call   QWORD PTR [rax+0x8]
   1400130a3:	test   al,al
   1400130a5:	je     0x1400130b3
   1400130a7:	mov    rax,QWORD PTR [rdi]
   1400130aa:	mov    rdx,rbx
   1400130ad:	mov    rcx,rdi
   1400130b0:	call   QWORD PTR [rax+0x28]
   1400130b3:	mov    rax,QWORD PTR [rbx]
   1400130b6:	mov    rdx,rdi
   1400130b9:	mov    rcx,rbx
   1400130bc:	call   QWORD PTR [rax+0x10]
   1400130bf:	mov    rdi,QWORD PTR [rsp+0x30]
   1400130c4:	mov    rax,QWORD PTR [rbx]
   1400130c7:	mov    rdx,rsi
   1400130ca:	mov    rcx,rbx
   1400130cd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400130d2:	add    rsp,0x20
   1400130d6:	pop    rsi
   1400130d7:	rex.W jmp QWORD PTR [rax+0x3b0]
   1400130de:	int3   
   1400130df:	int3   
   1400130e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400130e5:	push   rdi
   1400130e6:	sub    rsp,0x20
   1400130ea:	mov    rax,QWORD PTR [rdx]
   1400130ed:	mov    rdi,rdx
   1400130f0:	mov    rbx,rcx
   1400130f3:	mov    rdx,rcx
   1400130f6:	mov    rcx,rdi
   1400130f9:	call   QWORD PTR [rax+0xc8]
   1400130ff:	mov    r11,QWORD PTR [rdi]
   140013102:	mov    rdx,rbx
   140013105:	mov    rcx,rdi
   140013108:	mov    rbx,QWORD PTR [rsp+0x30]
   14001310d:	add    rsp,0x20
   140013111:	pop    rdi
   140013112:	rex.WB jmp QWORD PTR [r11+0x3a8]
   140013119:	int3   
   14001311a:	int3   
   14001311b:	int3   
   14001311c:	int3   
   14001311d:	int3   
   14001311e:	int3   
   14001311f:	int3   
   140013120:	mov    QWORD PTR [rsp+0x8],rbx
   140013125:	push   rdi
   140013126:	sub    rsp,0x20
   14001312a:	mov    rax,QWORD PTR [rdx]
   14001312d:	mov    rdi,rdx
   140013130:	mov    rbx,rcx
   140013133:	mov    rdx,rcx
   140013136:	mov    rcx,rdi
   140013139:	call   QWORD PTR [rax+0xc0]
   14001313f:	mov    r11,QWORD PTR [rdi]
   140013142:	mov    rdx,rbx
   140013145:	mov    rcx,rdi
   140013148:	mov    rbx,QWORD PTR [rsp+0x30]
   14001314d:	add    rsp,0x20
   140013151:	pop    rdi
   140013152:	rex.WB jmp QWORD PTR [r11+0x3a0]
   140013159:	int3   
   14001315a:	int3   
   14001315b:	int3   
   14001315c:	int3   
   14001315d:	int3   
   14001315e:	int3   
   14001315f:	int3   
   140013160:	mov    QWORD PTR [rsp+0x10],rbx
   140013165:	push   rsi
   140013166:	sub    rsp,0x20
   14001316a:	mov    rax,QWORD PTR [rdx]
   14001316d:	mov    rbx,rdx
   140013170:	mov    rsi,rcx
   140013173:	mov    rdx,rcx
   140013176:	mov    rcx,rbx
   140013179:	call   QWORD PTR [rax+0xb8]
   14001317f:	test   al,al
   140013181:	je     0x1400131be
   140013183:	mov    QWORD PTR [rsp+0x30],rdi
   140013188:	mov    rdi,QWORD PTR [rsi+0x10]
   14001318c:	test   rdi,rdi
   14001318f:	je     0x1400131b9
   140013191:	mov    rax,QWORD PTR [rbx]
   140013194:	mov    rdx,rdi
   140013197:	mov    rcx,rbx
   14001319a:	call   QWORD PTR [rax+0x8]
   14001319d:	test   al,al
   14001319f:	je     0x1400131ad
   1400131a1:	mov    rax,QWORD PTR [rdi]
   1400131a4:	mov    rdx,rbx
   1400131a7:	mov    rcx,rdi
   1400131aa:	call   QWORD PTR [rax+0x28]
   1400131ad:	mov    rax,QWORD PTR [rbx]
   1400131b0:	mov    rdx,rdi
   1400131b3:	mov    rcx,rbx
   1400131b6:	call   QWORD PTR [rax+0x10]
   1400131b9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400131be:	mov    rax,QWORD PTR [rbx]
   1400131c1:	mov    rdx,rsi
   1400131c4:	mov    rcx,rbx
   1400131c7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400131cc:	add    rsp,0x20
   1400131d0:	pop    rsi
   1400131d1:	rex.W jmp QWORD PTR [rax+0x398]
   1400131d8:	int3   
   1400131d9:	int3   
   1400131da:	int3   
   1400131db:	int3   
   1400131dc:	int3   
   1400131dd:	int3   
   1400131de:	int3   
   1400131df:	int3   
   1400131e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400131e5:	push   rsi
   1400131e6:	sub    rsp,0x20
   1400131ea:	mov    rax,QWORD PTR [rdx]
   1400131ed:	mov    rbx,rdx
   1400131f0:	mov    rsi,rcx
   1400131f3:	mov    rdx,rcx
   1400131f6:	mov    rcx,rbx
   1400131f9:	call   QWORD PTR [rax+0xb0]
   1400131ff:	test   al,al
   140013201:	je     0x14001326f
   140013203:	mov    QWORD PTR [rsp+0x30],rdi
   140013208:	mov    rdi,QWORD PTR [rsi+0x10]
   14001320c:	test   rdi,rdi
   14001320f:	je     0x140013239
   140013211:	mov    rax,QWORD PTR [rbx]
   140013214:	mov    rdx,rdi
   140013217:	mov    rcx,rbx
   14001321a:	call   QWORD PTR [rax+0x8]
   14001321d:	test   al,al
   14001321f:	je     0x14001322d
   140013221:	mov    rax,QWORD PTR [rdi]
   140013224:	mov    rdx,rbx
   140013227:	mov    rcx,rdi
   14001322a:	call   QWORD PTR [rax+0x28]
   14001322d:	mov    rax,QWORD PTR [rbx]
   140013230:	mov    rdx,rdi
   140013233:	mov    rcx,rbx
   140013236:	call   QWORD PTR [rax+0x10]
   140013239:	mov    rdi,QWORD PTR [rsi+0x18]
   14001323d:	test   rdi,rdi
   140013240:	je     0x14001326a
   140013242:	mov    rax,QWORD PTR [rbx]
   140013245:	mov    rdx,rdi
   140013248:	mov    rcx,rbx
   14001324b:	call   QWORD PTR [rax+0x8]
   14001324e:	test   al,al
   140013250:	je     0x14001325e
   140013252:	mov    rax,QWORD PTR [rdi]
   140013255:	mov    rdx,rbx
   140013258:	mov    rcx,rdi
   14001325b:	call   QWORD PTR [rax+0x28]
   14001325e:	mov    rax,QWORD PTR [rbx]
   140013261:	mov    rdx,rdi
   140013264:	mov    rcx,rbx
   140013267:	call   QWORD PTR [rax+0x10]
   14001326a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001326f:	mov    rax,QWORD PTR [rbx]
   140013272:	mov    rdx,rsi
   140013275:	mov    rcx,rbx
   140013278:	mov    rbx,QWORD PTR [rsp+0x38]
   14001327d:	add    rsp,0x20
   140013281:	pop    rsi
   140013282:	rex.W jmp QWORD PTR [rax+0x390]
   140013289:	int3   
   14001328a:	int3   
   14001328b:	int3   
   14001328c:	int3   
   14001328d:	int3   
   14001328e:	int3   
   14001328f:	int3   
   140013290:	mov    QWORD PTR [rsp+0x10],rbx
   140013295:	push   rsi
   140013296:	sub    rsp,0x20
   14001329a:	mov    rax,QWORD PTR [rdx]
   14001329d:	mov    rbx,rdx
   1400132a0:	mov    rsi,rcx
   1400132a3:	mov    rdx,rcx
   1400132a6:	mov    rcx,rbx
   1400132a9:	call   QWORD PTR [rax+0xa8]
   1400132af:	test   al,al
   1400132b1:	je     0x14001331f
   1400132b3:	mov    QWORD PTR [rsp+0x30],rdi
   1400132b8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400132bc:	test   rdi,rdi
   1400132bf:	je     0x1400132e9
   1400132c1:	mov    rax,QWORD PTR [rbx]
   1400132c4:	mov    rdx,rdi
   1400132c7:	mov    rcx,rbx
   1400132ca:	call   QWORD PTR [rax+0x8]
   1400132cd:	test   al,al
   1400132cf:	je     0x1400132dd
   1400132d1:	mov    rax,QWORD PTR [rdi]
   1400132d4:	mov    rdx,rbx
   1400132d7:	mov    rcx,rdi
   1400132da:	call   QWORD PTR [rax+0x28]
   1400132dd:	mov    rax,QWORD PTR [rbx]
   1400132e0:	mov    rdx,rdi
   1400132e3:	mov    rcx,rbx
   1400132e6:	call   QWORD PTR [rax+0x10]
   1400132e9:	mov    rdi,QWORD PTR [rsi+0x18]
   1400132ed:	test   rdi,rdi
   1400132f0:	je     0x14001331a
   1400132f2:	mov    rax,QWORD PTR [rbx]
   1400132f5:	mov    rdx,rdi
   1400132f8:	mov    rcx,rbx
   1400132fb:	call   QWORD PTR [rax+0x8]
   1400132fe:	test   al,al
   140013300:	je     0x14001330e
   140013302:	mov    rax,QWORD PTR [rdi]
   140013305:	mov    rdx,rbx
   140013308:	mov    rcx,rdi
   14001330b:	call   QWORD PTR [rax+0x28]
   14001330e:	mov    rax,QWORD PTR [rbx]
   140013311:	mov    rdx,rdi
   140013314:	mov    rcx,rbx
   140013317:	call   QWORD PTR [rax+0x10]
   14001331a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001331f:	mov    rax,QWORD PTR [rbx]
   140013322:	mov    rdx,rsi
   140013325:	mov    rcx,rbx
   140013328:	mov    rbx,QWORD PTR [rsp+0x38]
   14001332d:	add    rsp,0x20
   140013331:	pop    rsi
   140013332:	rex.W jmp QWORD PTR [rax+0x388]
   140013339:	int3   
   14001333a:	int3   
   14001333b:	int3   
   14001333c:	int3   
   14001333d:	int3   
   14001333e:	int3   
   14001333f:	int3   
   140013340:	mov    QWORD PTR [rsp+0x10],rbx
   140013345:	push   rsi
   140013346:	sub    rsp,0x20
   14001334a:	mov    rax,QWORD PTR [rdx]
   14001334d:	mov    rbx,rdx
   140013350:	mov    rsi,rcx
   140013353:	mov    rdx,rcx
   140013356:	mov    rcx,rbx
   140013359:	call   QWORD PTR [rax+0xa0]
   14001335f:	test   al,al
   140013361:	je     0x140013404
   140013367:	mov    QWORD PTR [rsp+0x30],rdi
   14001336c:	mov    rdi,QWORD PTR [rsi+0x10]
   140013370:	test   rdi,rdi
   140013373:	je     0x14001339d
   140013375:	mov    rax,QWORD PTR [rbx]
   140013378:	mov    rdx,rdi
   14001337b:	mov    rcx,rbx
   14001337e:	call   QWORD PTR [rax+0x8]
   140013381:	test   al,al
   140013383:	je     0x140013391
   140013385:	mov    rax,QWORD PTR [rdi]
   140013388:	mov    rdx,rbx
   14001338b:	mov    rcx,rdi
   14001338e:	call   QWORD PTR [rax+0x28]
   140013391:	mov    rax,QWORD PTR [rbx]
   140013394:	mov    rdx,rdi
   140013397:	mov    rcx,rbx
   14001339a:	call   QWORD PTR [rax+0x10]
   14001339d:	mov    rdi,QWORD PTR [rsi+0x18]
   1400133a1:	test   rdi,rdi
   1400133a4:	je     0x1400133ce
   1400133a6:	mov    rax,QWORD PTR [rbx]
   1400133a9:	mov    rdx,rdi
   1400133ac:	mov    rcx,rbx
   1400133af:	call   QWORD PTR [rax+0x8]
   1400133b2:	test   al,al
   1400133b4:	je     0x1400133c2
   1400133b6:	mov    rax,QWORD PTR [rdi]
   1400133b9:	mov    rdx,rbx
   1400133bc:	mov    rcx,rdi
   1400133bf:	call   QWORD PTR [rax+0x28]
   1400133c2:	mov    rax,QWORD PTR [rbx]
   1400133c5:	mov    rdx,rdi
   1400133c8:	mov    rcx,rbx
   1400133cb:	call   QWORD PTR [rax+0x10]
   1400133ce:	mov    rdi,QWORD PTR [rsi+0x20]
   1400133d2:	test   rdi,rdi
   1400133d5:	je     0x1400133ff
   1400133d7:	mov    rax,QWORD PTR [rbx]
   1400133da:	mov    rdx,rdi
   1400133dd:	mov    rcx,rbx
   1400133e0:	call   QWORD PTR [rax+0x8]
   1400133e3:	test   al,al
   1400133e5:	je     0x1400133f3
   1400133e7:	mov    rax,QWORD PTR [rdi]
   1400133ea:	mov    rdx,rbx
   1400133ed:	mov    rcx,rdi
   1400133f0:	call   QWORD PTR [rax+0x28]
   1400133f3:	mov    rax,QWORD PTR [rbx]
   1400133f6:	mov    rdx,rdi
   1400133f9:	mov    rcx,rbx
   1400133fc:	call   QWORD PTR [rax+0x10]
   1400133ff:	mov    rdi,QWORD PTR [rsp+0x30]
   140013404:	mov    rax,QWORD PTR [rbx]
   140013407:	mov    rdx,rsi
   14001340a:	mov    rcx,rbx
   14001340d:	mov    rbx,QWORD PTR [rsp+0x38]
   140013412:	add    rsp,0x20
   140013416:	pop    rsi
   140013417:	rex.W jmp QWORD PTR [rax+0x380]
   14001341e:	int3   
   14001341f:	int3   
   140013420:	mov    QWORD PTR [rsp+0x18],rbp
   140013425:	push   rsi
   140013426:	sub    rsp,0x20
   14001342a:	mov    rax,QWORD PTR [rdx]
   14001342d:	mov    rsi,rdx
   140013430:	mov    rbp,rcx
   140013433:	mov    rdx,rcx
   140013436:	mov    rcx,rsi
   140013439:	call   QWORD PTR [rax+0x98]
   14001343f:	test   al,al
   140013441:	je     0x140013499
   140013443:	mov    QWORD PTR [rsp+0x30],rbx
   140013448:	mov    rbx,rbp
   14001344b:	test   rbp,rbp
   14001344e:	je     0x140013494
   140013450:	mov    QWORD PTR [rsp+0x38],rdi
   140013455:	mov    rdi,QWORD PTR [rbx+0x10]
   140013459:	test   rdi,rdi
   14001345c:	je     0x140013486
   14001345e:	mov    rax,QWORD PTR [rsi]
   140013461:	mov    rdx,rdi
   140013464:	mov    rcx,rsi
   140013467:	call   QWORD PTR [rax+0x8]
   14001346a:	test   al,al
   14001346c:	je     0x14001347a
   14001346e:	mov    rax,QWORD PTR [rdi]
   140013471:	mov    rdx,rsi
   140013474:	mov    rcx,rdi
   140013477:	call   QWORD PTR [rax+0x28]
   14001347a:	mov    rax,QWORD PTR [rsi]
   14001347d:	mov    rdx,rdi
   140013480:	mov    rcx,rsi
   140013483:	call   QWORD PTR [rax+0x10]
   140013486:	mov    rbx,QWORD PTR [rbx+0x18]
   14001348a:	test   rbx,rbx
   14001348d:	jne    0x140013455
   14001348f:	mov    rdi,QWORD PTR [rsp+0x38]
   140013494:	mov    rbx,QWORD PTR [rsp+0x30]
   140013499:	mov    rax,QWORD PTR [rsi]
   14001349c:	mov    rdx,rbp
   14001349f:	mov    rcx,rsi
   1400134a2:	mov    rbp,QWORD PTR [rsp+0x40]
   1400134a7:	add    rsp,0x20
   1400134ab:	pop    rsi
   1400134ac:	rex.W jmp QWORD PTR [rax+0x378]
   1400134b3:	int3   
   1400134b4:	int3   
   1400134b5:	int3   
   1400134b6:	int3   
   1400134b7:	int3   
   1400134b8:	int3   
   1400134b9:	int3   
   1400134ba:	int3   
   1400134bb:	int3   
   1400134bc:	int3   
   1400134bd:	int3   
   1400134be:	int3   
   1400134bf:	int3   
   1400134c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400134c5:	push   rsi
   1400134c6:	sub    rsp,0x20
   1400134ca:	mov    rax,QWORD PTR [rdx]
   1400134cd:	mov    rbx,rdx
   1400134d0:	mov    rsi,rcx
   1400134d3:	mov    rdx,rcx
   1400134d6:	mov    rcx,rbx
   1400134d9:	call   QWORD PTR [rax+0x90]
   1400134df:	test   al,al
   1400134e1:	je     0x14001354f
   1400134e3:	mov    QWORD PTR [rsp+0x30],rdi
   1400134e8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400134ec:	test   rdi,rdi
   1400134ef:	je     0x140013519
   1400134f1:	mov    rax,QWORD PTR [rbx]
   1400134f4:	mov    rdx,rdi
   1400134f7:	mov    rcx,rbx
   1400134fa:	call   QWORD PTR [rax+0x8]
   1400134fd:	test   al,al
   1400134ff:	je     0x14001350d
   140013501:	mov    rax,QWORD PTR [rdi]
   140013504:	mov    rdx,rbx
   140013507:	mov    rcx,rdi
   14001350a:	call   QWORD PTR [rax+0x28]
   14001350d:	mov    rax,QWORD PTR [rbx]
   140013510:	mov    rdx,rdi
   140013513:	mov    rcx,rbx
   140013516:	call   QWORD PTR [rax+0x10]
   140013519:	mov    rdi,QWORD PTR [rsi+0x18]
   14001351d:	test   rdi,rdi
   140013520:	je     0x14001354a
   140013522:	mov    rax,QWORD PTR [rbx]
   140013525:	mov    rdx,rdi
   140013528:	mov    rcx,rbx
   14001352b:	call   QWORD PTR [rax+0x8]
   14001352e:	test   al,al
   140013530:	je     0x14001353e
   140013532:	mov    rax,QWORD PTR [rdi]
   140013535:	mov    rdx,rbx
   140013538:	mov    rcx,rdi
   14001353b:	call   QWORD PTR [rax+0x28]
   14001353e:	mov    rax,QWORD PTR [rbx]
   140013541:	mov    rdx,rdi
   140013544:	mov    rcx,rbx
   140013547:	call   QWORD PTR [rax+0x10]
   14001354a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001354f:	mov    rax,QWORD PTR [rbx]
   140013552:	mov    rdx,rsi
   140013555:	mov    rcx,rbx
   140013558:	mov    rbx,QWORD PTR [rsp+0x38]
   14001355d:	add    rsp,0x20
   140013561:	pop    rsi
   140013562:	rex.W jmp QWORD PTR [rax+0x370]
   140013569:	int3   
   14001356a:	int3   
   14001356b:	int3   
   14001356c:	int3   
   14001356d:	int3   
   14001356e:	int3   
   14001356f:	int3   
   140013570:	mov    QWORD PTR [rsp+0x10],rbx
   140013575:	push   rsi
   140013576:	sub    rsp,0x20
   14001357a:	mov    rax,QWORD PTR [rdx]
   14001357d:	mov    rbx,rdx
   140013580:	mov    rsi,rcx
   140013583:	mov    rdx,rcx
   140013586:	mov    rcx,rbx
   140013589:	call   QWORD PTR [rax+0x88]
   14001358f:	test   al,al
   140013591:	je     0x1400135ce
   140013593:	mov    QWORD PTR [rsp+0x30],rdi
   140013598:	mov    rdi,QWORD PTR [rsi+0x10]
   14001359c:	test   rdi,rdi
   14001359f:	je     0x1400135c9
   1400135a1:	mov    rax,QWORD PTR [rbx]
   1400135a4:	mov    rdx,rdi
   1400135a7:	mov    rcx,rbx
   1400135aa:	call   QWORD PTR [rax+0x8]
   1400135ad:	test   al,al
   1400135af:	je     0x1400135bd
   1400135b1:	mov    rax,QWORD PTR [rdi]
   1400135b4:	mov    rdx,rbx
   1400135b7:	mov    rcx,rdi
   1400135ba:	call   QWORD PTR [rax+0x28]
   1400135bd:	mov    rax,QWORD PTR [rbx]
   1400135c0:	mov    rdx,rdi
   1400135c3:	mov    rcx,rbx
   1400135c6:	call   QWORD PTR [rax+0x10]
   1400135c9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400135ce:	mov    rax,QWORD PTR [rbx]
   1400135d1:	mov    rdx,rsi
   1400135d4:	mov    rcx,rbx
   1400135d7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400135dc:	add    rsp,0x20
   1400135e0:	pop    rsi
   1400135e1:	rex.W jmp QWORD PTR [rax+0x368]
   1400135e8:	int3   
   1400135e9:	int3   
   1400135ea:	int3   
   1400135eb:	int3   
   1400135ec:	int3   
   1400135ed:	int3   
   1400135ee:	int3   
   1400135ef:	int3   
   1400135f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400135f5:	push   rsi
   1400135f6:	sub    rsp,0x20
   1400135fa:	mov    rax,QWORD PTR [rdx]
   1400135fd:	mov    rbx,rdx
   140013600:	mov    rsi,rcx
   140013603:	mov    rdx,rcx
   140013606:	mov    rcx,rbx
   140013609:	call   QWORD PTR [rax+0x80]
   14001360f:	test   al,al
   140013611:	je     0x14001364e
   140013613:	mov    QWORD PTR [rsp+0x30],rdi
   140013618:	mov    rdi,QWORD PTR [rsi+0x20]
   14001361c:	test   rdi,rdi
   14001361f:	je     0x140013649
   140013621:	mov    rax,QWORD PTR [rbx]
   140013624:	mov    rdx,rdi
   140013627:	mov    rcx,rbx
   14001362a:	call   QWORD PTR [rax+0x8]
   14001362d:	test   al,al
   14001362f:	je     0x14001363d
   140013631:	mov    rax,QWORD PTR [rdi]
   140013634:	mov    rdx,rbx
   140013637:	mov    rcx,rdi
   14001363a:	call   QWORD PTR [rax+0x28]
   14001363d:	mov    rax,QWORD PTR [rbx]
   140013640:	mov    rdx,rdi
   140013643:	mov    rcx,rbx
   140013646:	call   QWORD PTR [rax+0x10]
   140013649:	mov    rdi,QWORD PTR [rsp+0x30]
   14001364e:	mov    rax,QWORD PTR [rbx]
   140013651:	mov    rdx,rsi
   140013654:	mov    rcx,rbx
   140013657:	mov    rbx,QWORD PTR [rsp+0x38]
   14001365c:	add    rsp,0x20
   140013660:	pop    rsi
   140013661:	rex.W jmp QWORD PTR [rax+0x360]
   140013668:	int3   
   140013669:	int3   
   14001366a:	int3   
   14001366b:	int3   
   14001366c:	int3   
   14001366d:	int3   
   14001366e:	int3   
   14001366f:	int3   
   140013670:	mov    QWORD PTR [rsp+0x10],rbx
   140013675:	push   rsi
   140013676:	sub    rsp,0x20
   14001367a:	mov    rax,QWORD PTR [rdx]
   14001367d:	mov    rbx,rdx
   140013680:	mov    rsi,rcx
   140013683:	mov    rdx,rcx
   140013686:	mov    rcx,rbx
   140013689:	call   QWORD PTR [rax+0x78]
   14001368c:	test   al,al
   14001368e:	je     0x1400136cb
   140013690:	mov    QWORD PTR [rsp+0x30],rdi
   140013695:	mov    rdi,QWORD PTR [rsi+0x10]
   140013699:	test   rdi,rdi
   14001369c:	je     0x1400136c6
   14001369e:	mov    rax,QWORD PTR [rbx]
   1400136a1:	mov    rdx,rdi
   1400136a4:	mov    rcx,rbx
   1400136a7:	call   QWORD PTR [rax+0x8]
   1400136aa:	test   al,al
   1400136ac:	je     0x1400136ba
   1400136ae:	mov    rax,QWORD PTR [rdi]
   1400136b1:	mov    rdx,rbx
   1400136b4:	mov    rcx,rdi
   1400136b7:	call   QWORD PTR [rax+0x28]
   1400136ba:	mov    rax,QWORD PTR [rbx]
   1400136bd:	mov    rdx,rdi
   1400136c0:	mov    rcx,rbx
   1400136c3:	call   QWORD PTR [rax+0x10]
   1400136c6:	mov    rdi,QWORD PTR [rsp+0x30]
   1400136cb:	mov    rax,QWORD PTR [rbx]
   1400136ce:	mov    rdx,rsi
   1400136d1:	mov    rcx,rbx
   1400136d4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400136d9:	add    rsp,0x20
   1400136dd:	pop    rsi
   1400136de:	rex.W jmp QWORD PTR [rax+0x358]
   1400136e5:	int3   
   1400136e6:	int3   
   1400136e7:	int3   
   1400136e8:	int3   
   1400136e9:	int3   
   1400136ea:	int3   
   1400136eb:	int3   
   1400136ec:	int3   
   1400136ed:	int3   
   1400136ee:	int3   
   1400136ef:	int3   
   1400136f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400136f5:	push   rsi
   1400136f6:	sub    rsp,0x20
   1400136fa:	mov    rax,QWORD PTR [rdx]
   1400136fd:	mov    rbx,rdx
   140013700:	mov    rsi,rcx
   140013703:	mov    rdx,rcx
   140013706:	mov    rcx,rbx
   140013709:	call   QWORD PTR [rax+0x70]
   14001370c:	test   al,al
   14001370e:	je     0x1400137b1
   140013714:	mov    QWORD PTR [rsp+0x30],rdi
   140013719:	mov    rdi,QWORD PTR [rsi+0x10]
   14001371d:	test   rdi,rdi
   140013720:	je     0x14001374a
   140013722:	mov    rax,QWORD PTR [rbx]
   140013725:	mov    rdx,rdi
   140013728:	mov    rcx,rbx
   14001372b:	call   QWORD PTR [rax+0x8]
   14001372e:	test   al,al
   140013730:	je     0x14001373e
   140013732:	mov    rax,QWORD PTR [rdi]
   140013735:	mov    rdx,rbx
   140013738:	mov    rcx,rdi
   14001373b:	call   QWORD PTR [rax+0x28]
   14001373e:	mov    rax,QWORD PTR [rbx]
   140013741:	mov    rdx,rdi
   140013744:	mov    rcx,rbx
   140013747:	call   QWORD PTR [rax+0x10]
   14001374a:	mov    rdi,QWORD PTR [rsi+0x18]
   14001374e:	test   rdi,rdi
   140013751:	je     0x14001377b
   140013753:	mov    rax,QWORD PTR [rbx]
   140013756:	mov    rdx,rdi
   140013759:	mov    rcx,rbx
   14001375c:	call   QWORD PTR [rax+0x8]
   14001375f:	test   al,al
   140013761:	je     0x14001376f
   140013763:	mov    rax,QWORD PTR [rdi]
   140013766:	mov    rdx,rbx
   140013769:	mov    rcx,rdi
   14001376c:	call   QWORD PTR [rax+0x28]
   14001376f:	mov    rax,QWORD PTR [rbx]
   140013772:	mov    rdx,rdi
   140013775:	mov    rcx,rbx
   140013778:	call   QWORD PTR [rax+0x10]
   14001377b:	mov    rdi,QWORD PTR [rsi+0x20]
   14001377f:	test   rdi,rdi
   140013782:	je     0x1400137ac
   140013784:	mov    rax,QWORD PTR [rbx]
   140013787:	mov    rdx,rdi
   14001378a:	mov    rcx,rbx
   14001378d:	call   QWORD PTR [rax+0x8]
   140013790:	test   al,al
   140013792:	je     0x1400137a0
   140013794:	mov    rax,QWORD PTR [rdi]
   140013797:	mov    rdx,rbx
   14001379a:	mov    rcx,rdi
   14001379d:	call   QWORD PTR [rax+0x28]
   1400137a0:	mov    rax,QWORD PTR [rbx]
   1400137a3:	mov    rdx,rdi
   1400137a6:	mov    rcx,rbx
   1400137a9:	call   QWORD PTR [rax+0x10]
   1400137ac:	mov    rdi,QWORD PTR [rsp+0x30]
   1400137b1:	mov    rax,QWORD PTR [rbx]
   1400137b4:	mov    rdx,rsi
   1400137b7:	mov    rcx,rbx
   1400137ba:	mov    rbx,QWORD PTR [rsp+0x38]
   1400137bf:	add    rsp,0x20
   1400137c3:	pop    rsi
   1400137c4:	rex.W jmp QWORD PTR [rax+0x350]
   1400137cb:	int3   
   1400137cc:	int3   
   1400137cd:	int3   
   1400137ce:	int3   
   1400137cf:	int3   
   1400137d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400137d5:	push   rsi
   1400137d6:	sub    rsp,0x20
   1400137da:	mov    rax,QWORD PTR [rdx]
   1400137dd:	mov    rbx,rdx
   1400137e0:	mov    rsi,rcx
   1400137e3:	mov    rdx,rcx
   1400137e6:	mov    rcx,rbx
   1400137e9:	call   QWORD PTR [rax+0x68]
   1400137ec:	test   al,al
   1400137ee:	je     0x14001382b
   1400137f0:	mov    QWORD PTR [rsp+0x30],rdi
   1400137f5:	mov    rdi,QWORD PTR [rsi+0x20]
   1400137f9:	test   rdi,rdi
   1400137fc:	je     0x140013826
   1400137fe:	mov    rax,QWORD PTR [rbx]
   140013801:	mov    rdx,rdi
   140013804:	mov    rcx,rbx
   140013807:	call   QWORD PTR [rax+0x8]
   14001380a:	test   al,al
   14001380c:	je     0x14001381a
   14001380e:	mov    rax,QWORD PTR [rdi]
   140013811:	mov    rdx,rbx
   140013814:	mov    rcx,rdi
   140013817:	call   QWORD PTR [rax+0x28]
   14001381a:	mov    rax,QWORD PTR [rbx]
   14001381d:	mov    rdx,rdi
   140013820:	mov    rcx,rbx
   140013823:	call   QWORD PTR [rax+0x10]
   140013826:	mov    rdi,QWORD PTR [rsp+0x30]
   14001382b:	mov    rax,QWORD PTR [rbx]
   14001382e:	mov    rdx,rsi
   140013831:	mov    rcx,rbx
   140013834:	mov    rbx,QWORD PTR [rsp+0x38]
   140013839:	add    rsp,0x20
   14001383d:	pop    rsi
   14001383e:	rex.W jmp QWORD PTR [rax+0x348]
   140013845:	int3   
   140013846:	int3   
   140013847:	int3   
   140013848:	int3   
   140013849:	int3   
   14001384a:	int3   
   14001384b:	int3   
   14001384c:	int3   
   14001384d:	int3   
   14001384e:	int3   
   14001384f:	int3   
   140013850:	mov    QWORD PTR [rsp+0x10],rbx
   140013855:	push   rsi
   140013856:	sub    rsp,0x20
   14001385a:	mov    rax,QWORD PTR [rdx]
   14001385d:	mov    rbx,rdx
   140013860:	mov    rsi,rcx
   140013863:	mov    rdx,rcx
   140013866:	mov    rcx,rbx
   140013869:	call   QWORD PTR [rax+0x60]
   14001386c:	test   al,al
   14001386e:	je     0x1400138ab
   140013870:	mov    QWORD PTR [rsp+0x30],rdi
   140013875:	mov    rdi,QWORD PTR [rsi+0x10]
   140013879:	test   rdi,rdi
   14001387c:	je     0x1400138a6
   14001387e:	mov    rax,QWORD PTR [rbx]
   140013881:	mov    rdx,rdi
   140013884:	mov    rcx,rbx
   140013887:	call   QWORD PTR [rax+0x8]
   14001388a:	test   al,al
   14001388c:	je     0x14001389a
   14001388e:	mov    rax,QWORD PTR [rdi]
   140013891:	mov    rdx,rbx
   140013894:	mov    rcx,rdi
   140013897:	call   QWORD PTR [rax+0x28]
   14001389a:	mov    rax,QWORD PTR [rbx]
   14001389d:	mov    rdx,rdi
   1400138a0:	mov    rcx,rbx
   1400138a3:	call   QWORD PTR [rax+0x10]
   1400138a6:	mov    rdi,QWORD PTR [rsp+0x30]
   1400138ab:	mov    rax,QWORD PTR [rbx]
   1400138ae:	mov    rdx,rsi
   1400138b1:	mov    rcx,rbx
   1400138b4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400138b9:	add    rsp,0x20
   1400138bd:	pop    rsi
   1400138be:	rex.W jmp QWORD PTR [rax+0x340]
   1400138c5:	int3   
   1400138c6:	int3   
   1400138c7:	int3   
   1400138c8:	int3   
   1400138c9:	int3   
   1400138ca:	int3   
   1400138cb:	int3   
   1400138cc:	int3   
   1400138cd:	int3   
   1400138ce:	int3   
   1400138cf:	int3   
   1400138d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400138d5:	push   rsi
   1400138d6:	sub    rsp,0x20
   1400138da:	mov    rax,QWORD PTR [rdx]
   1400138dd:	mov    rbx,rdx
   1400138e0:	mov    rsi,rcx
   1400138e3:	mov    rdx,rcx
   1400138e6:	mov    rcx,rbx
   1400138e9:	call   QWORD PTR [rax+0x58]
   1400138ec:	test   al,al
   1400138ee:	je     0x14001395c
   1400138f0:	mov    QWORD PTR [rsp+0x30],rdi
   1400138f5:	mov    rdi,QWORD PTR [rsi+0x20]
   1400138f9:	test   rdi,rdi
   1400138fc:	je     0x140013926
   1400138fe:	mov    rax,QWORD PTR [rbx]
   140013901:	mov    rdx,rdi
   140013904:	mov    rcx,rbx
   140013907:	call   QWORD PTR [rax+0x8]
   14001390a:	test   al,al
   14001390c:	je     0x14001391a
   14001390e:	mov    rax,QWORD PTR [rdi]
   140013911:	mov    rdx,rbx
   140013914:	mov    rcx,rdi
   140013917:	call   QWORD PTR [rax+0x28]
   14001391a:	mov    rax,QWORD PTR [rbx]
   14001391d:	mov    rdx,rdi
   140013920:	mov    rcx,rbx
   140013923:	call   QWORD PTR [rax+0x10]
   140013926:	mov    rdi,QWORD PTR [rsi+0x28]
   14001392a:	test   rdi,rdi
   14001392d:	je     0x140013957
   14001392f:	mov    rax,QWORD PTR [rbx]
   140013932:	mov    rdx,rdi
   140013935:	mov    rcx,rbx
   140013938:	call   QWORD PTR [rax+0x8]
   14001393b:	test   al,al
   14001393d:	je     0x14001394b
   14001393f:	mov    rax,QWORD PTR [rdi]
   140013942:	mov    rdx,rbx
   140013945:	mov    rcx,rdi
   140013948:	call   QWORD PTR [rax+0x28]
   14001394b:	mov    rax,QWORD PTR [rbx]
   14001394e:	mov    rdx,rdi
   140013951:	mov    rcx,rbx
   140013954:	call   QWORD PTR [rax+0x10]
   140013957:	mov    rdi,QWORD PTR [rsp+0x30]
   14001395c:	mov    rax,QWORD PTR [rbx]
   14001395f:	mov    rdx,rsi
   140013962:	mov    rcx,rbx
   140013965:	mov    rbx,QWORD PTR [rsp+0x38]
   14001396a:	add    rsp,0x20
   14001396e:	pop    rsi
   14001396f:	rex.W jmp QWORD PTR [rax+0x338]
   140013976:	int3   
   140013977:	int3   
   140013978:	int3   
   140013979:	int3   
   14001397a:	int3   
   14001397b:	int3   
   14001397c:	int3   
   14001397d:	int3   
   14001397e:	int3   
   14001397f:	int3   
   140013980:	mov    QWORD PTR [rsp+0x10],rbx
   140013985:	push   rsi
   140013986:	sub    rsp,0x20
   14001398a:	mov    rax,QWORD PTR [rdx]
   14001398d:	mov    rbx,rdx
   140013990:	mov    rsi,rcx
   140013993:	mov    rdx,rcx
   140013996:	mov    rcx,rbx
   140013999:	call   QWORD PTR [rax+0x50]
   14001399c:	test   al,al
   14001399e:	je     0x140013a0c
   1400139a0:	mov    QWORD PTR [rsp+0x30],rdi
   1400139a5:	mov    rdi,QWORD PTR [rsi+0x20]
   1400139a9:	test   rdi,rdi
   1400139ac:	je     0x1400139d6
   1400139ae:	mov    rax,QWORD PTR [rbx]
   1400139b1:	mov    rdx,rdi
   1400139b4:	mov    rcx,rbx
   1400139b7:	call   QWORD PTR [rax+0x8]
   1400139ba:	test   al,al
   1400139bc:	je     0x1400139ca
   1400139be:	mov    rax,QWORD PTR [rdi]
   1400139c1:	mov    rdx,rbx
   1400139c4:	mov    rcx,rdi
   1400139c7:	call   QWORD PTR [rax+0x28]
   1400139ca:	mov    rax,QWORD PTR [rbx]
   1400139cd:	mov    rdx,rdi
   1400139d0:	mov    rcx,rbx
   1400139d3:	call   QWORD PTR [rax+0x10]
   1400139d6:	mov    rdi,QWORD PTR [rsi+0x28]
   1400139da:	test   rdi,rdi
   1400139dd:	je     0x140013a07
   1400139df:	mov    rax,QWORD PTR [rbx]
   1400139e2:	mov    rdx,rdi
   1400139e5:	mov    rcx,rbx
   1400139e8:	call   QWORD PTR [rax+0x8]
   1400139eb:	test   al,al
   1400139ed:	je     0x1400139fb
   1400139ef:	mov    rax,QWORD PTR [rdi]
   1400139f2:	mov    rdx,rbx
   1400139f5:	mov    rcx,rdi
   1400139f8:	call   QWORD PTR [rax+0x28]
   1400139fb:	mov    rax,QWORD PTR [rbx]
   1400139fe:	mov    rdx,rdi
   140013a01:	mov    rcx,rbx
   140013a04:	call   QWORD PTR [rax+0x10]
   140013a07:	mov    rdi,QWORD PTR [rsp+0x30]
   140013a0c:	mov    rax,QWORD PTR [rbx]
   140013a0f:	mov    rdx,rsi
   140013a12:	mov    rcx,rbx
   140013a15:	mov    rbx,QWORD PTR [rsp+0x38]
   140013a1a:	add    rsp,0x20
   140013a1e:	pop    rsi
   140013a1f:	rex.W jmp QWORD PTR [rax+0x330]
   140013a26:	int3   
   140013a27:	int3   
   140013a28:	int3   
   140013a29:	int3   
   140013a2a:	int3   
   140013a2b:	int3   
   140013a2c:	int3   
   140013a2d:	int3   
   140013a2e:	int3   
   140013a2f:	int3   
   140013a30:	mov    QWORD PTR [rsp+0x8],rbx
   140013a35:	push   rdi
   140013a36:	sub    rsp,0x20
   140013a3a:	mov    rax,QWORD PTR [rdx]
   140013a3d:	mov    rdi,rdx
   140013a40:	mov    rbx,rcx
   140013a43:	mov    rdx,rcx
   140013a46:	mov    rcx,rdi
   140013a49:	call   QWORD PTR [rax+0x48]
   140013a4c:	mov    r11,QWORD PTR [rdi]
   140013a4f:	mov    rdx,rbx
   140013a52:	mov    rcx,rdi
   140013a55:	mov    rbx,QWORD PTR [rsp+0x30]
   140013a5a:	add    rsp,0x20
   140013a5e:	pop    rdi
   140013a5f:	rex.WB jmp QWORD PTR [r11+0x328]
   140013a66:	int3   
   140013a67:	int3   
   140013a68:	int3   
   140013a69:	int3   
   140013a6a:	int3   
   140013a6b:	int3   
   140013a6c:	int3   
   140013a6d:	int3   
   140013a6e:	int3   
   140013a6f:	int3   
   140013a70:	mov    QWORD PTR [rsp+0x10],rbx
   140013a75:	push   rsi
   140013a76:	sub    rsp,0x20
   140013a7a:	mov    rax,QWORD PTR [rdx]
   140013a7d:	mov    rbx,rdx
   140013a80:	mov    rsi,rcx
   140013a83:	mov    rdx,rcx
   140013a86:	mov    rcx,rbx
   140013a89:	call   QWORD PTR [rax+0x40]
   140013a8c:	test   al,al
   140013a8e:	je     0x140013acb
   140013a90:	mov    QWORD PTR [rsp+0x30],rdi
   140013a95:	mov    rdi,QWORD PTR [rsi+0x10]
   140013a99:	test   rdi,rdi
   140013a9c:	je     0x140013ac6
   140013a9e:	mov    rax,QWORD PTR [rbx]
   140013aa1:	mov    rdx,rdi
   140013aa4:	mov    rcx,rbx
   140013aa7:	call   QWORD PTR [rax+0x8]
   140013aaa:	test   al,al
   140013aac:	je     0x140013aba
   140013aae:	mov    rax,QWORD PTR [rdi]
   140013ab1:	mov    rdx,rbx
   140013ab4:	mov    rcx,rdi
   140013ab7:	call   QWORD PTR [rax+0x28]
   140013aba:	mov    rax,QWORD PTR [rbx]
   140013abd:	mov    rdx,rdi
   140013ac0:	mov    rcx,rbx
   140013ac3:	call   QWORD PTR [rax+0x10]
   140013ac6:	mov    rdi,QWORD PTR [rsp+0x30]
   140013acb:	mov    rax,QWORD PTR [rbx]
   140013ace:	mov    rdx,rsi
   140013ad1:	mov    rcx,rbx
   140013ad4:	mov    rbx,QWORD PTR [rsp+0x38]
   140013ad9:	add    rsp,0x20
   140013add:	pop    rsi
   140013ade:	rex.W jmp QWORD PTR [rax+0x320]
   140013ae5:	int3   
   140013ae6:	int3   
   140013ae7:	int3   
   140013ae8:	int3   
   140013ae9:	int3   
   140013aea:	int3   
   140013aeb:	int3   
   140013aec:	int3   
   140013aed:	int3   
   140013aee:	int3   
   140013aef:	int3   
   140013af0:	mov    QWORD PTR [rsp+0x10],rbx
   140013af5:	push   rsi
   140013af6:	sub    rsp,0x20
   140013afa:	mov    rax,QWORD PTR [rdx]
   140013afd:	mov    rbx,rdx
   140013b00:	mov    rsi,rcx
   140013b03:	mov    rdx,rcx
   140013b06:	mov    rcx,rbx
   140013b09:	call   QWORD PTR [rax+0x38]
   140013b0c:	test   al,al
   140013b0e:	je     0x140013b4b
   140013b10:	mov    QWORD PTR [rsp+0x30],rdi
   140013b15:	mov    rdi,QWORD PTR [rsi+0x10]
   140013b19:	test   rdi,rdi
   140013b1c:	je     0x140013b46
   140013b1e:	mov    rax,QWORD PTR [rbx]
   140013b21:	mov    rdx,rdi
   140013b24:	mov    rcx,rbx
   140013b27:	call   QWORD PTR [rax+0x8]
   140013b2a:	test   al,al
   140013b2c:	je     0x140013b3a
   140013b2e:	mov    rax,QWORD PTR [rdi]
   140013b31:	mov    rdx,rbx
   140013b34:	mov    rcx,rdi
   140013b37:	call   QWORD PTR [rax+0x28]
   140013b3a:	mov    rax,QWORD PTR [rbx]
   140013b3d:	mov    rdx,rdi
   140013b40:	mov    rcx,rbx
   140013b43:	call   QWORD PTR [rax+0x10]
   140013b46:	mov    rdi,QWORD PTR [rsp+0x30]
   140013b4b:	mov    rax,QWORD PTR [rbx]
   140013b4e:	mov    rdx,rsi
   140013b51:	mov    rcx,rbx
   140013b54:	mov    rbx,QWORD PTR [rsp+0x38]
   140013b59:	add    rsp,0x20
   140013b5d:	pop    rsi
   140013b5e:	rex.W jmp QWORD PTR [rax+0x318]
   140013b65:	int3   
   140013b66:	int3   
   140013b67:	int3   
   140013b68:	int3   
   140013b69:	int3   
   140013b6a:	int3   
   140013b6b:	int3   
   140013b6c:	int3   
   140013b6d:	int3   
   140013b6e:	int3   
   140013b6f:	int3   
   140013b70:	mov    QWORD PTR [rsp+0x18],rbp
   140013b75:	push   rsi
   140013b76:	sub    rsp,0x20
   140013b7a:	mov    rax,QWORD PTR [rdx]
   140013b7d:	mov    rsi,rdx
   140013b80:	mov    rbp,rcx
   140013b83:	mov    rdx,rcx
   140013b86:	mov    rcx,rsi
   140013b89:	call   QWORD PTR [rax+0x30]
   140013b8c:	test   al,al
   140013b8e:	je     0x140013be6
   140013b90:	mov    QWORD PTR [rsp+0x30],rbx
   140013b95:	mov    rbx,rbp
   140013b98:	test   rbp,rbp
   140013b9b:	je     0x140013be1
   140013b9d:	mov    QWORD PTR [rsp+0x38],rdi
   140013ba2:	mov    rdi,QWORD PTR [rbx+0x10]
   140013ba6:	test   rdi,rdi
   140013ba9:	je     0x140013bd3
   140013bab:	mov    rax,QWORD PTR [rsi]
   140013bae:	mov    rdx,rdi
   140013bb1:	mov    rcx,rsi
   140013bb4:	call   QWORD PTR [rax+0x8]
   140013bb7:	test   al,al
   140013bb9:	je     0x140013bc7
   140013bbb:	mov    rax,QWORD PTR [rdi]
   140013bbe:	mov    rdx,rsi
   140013bc1:	mov    rcx,rdi
   140013bc4:	call   QWORD PTR [rax+0x28]
   140013bc7:	mov    rax,QWORD PTR [rsi]
   140013bca:	mov    rdx,rdi
   140013bcd:	mov    rcx,rsi
   140013bd0:	call   QWORD PTR [rax+0x10]
   140013bd3:	mov    rbx,QWORD PTR [rbx+0x18]
   140013bd7:	test   rbx,rbx
   140013bda:	jne    0x140013ba2
   140013bdc:	mov    rdi,QWORD PTR [rsp+0x38]
   140013be1:	mov    rbx,QWORD PTR [rsp+0x30]
   140013be6:	mov    rax,QWORD PTR [rsi]
   140013be9:	mov    rdx,rbp
   140013bec:	mov    rcx,rsi
   140013bef:	mov    rbp,QWORD PTR [rsp+0x40]
   140013bf4:	add    rsp,0x20
   140013bf8:	pop    rsi
   140013bf9:	rex.W jmp QWORD PTR [rax+0x310]
   140013c00:	mov    QWORD PTR [rsp+0x10],rbx
   140013c05:	push   rsi
   140013c06:	sub    rsp,0x20
   140013c0a:	mov    rax,QWORD PTR [rdx]
   140013c0d:	mov    rbx,rdx
   140013c10:	mov    rsi,rcx
   140013c13:	mov    rdx,rcx
   140013c16:	mov    rcx,rbx
   140013c19:	call   QWORD PTR [rax+0x28]
   140013c1c:	test   al,al
   140013c1e:	je     0x140013c5b
   140013c20:	mov    QWORD PTR [rsp+0x30],rdi
   140013c25:	mov    rdi,QWORD PTR [rsi+0x10]
   140013c29:	test   rdi,rdi
   140013c2c:	je     0x140013c56
   140013c2e:	mov    rax,QWORD PTR [rbx]
   140013c31:	mov    rdx,rdi
   140013c34:	mov    rcx,rbx
   140013c37:	call   QWORD PTR [rax+0x8]
   140013c3a:	test   al,al
   140013c3c:	je     0x140013c4a
   140013c3e:	mov    rax,QWORD PTR [rdi]
   140013c41:	mov    rdx,rbx
   140013c44:	mov    rcx,rdi
   140013c47:	call   QWORD PTR [rax+0x28]
   140013c4a:	mov    rax,QWORD PTR [rbx]
   140013c4d:	mov    rdx,rdi
   140013c50:	mov    rcx,rbx
   140013c53:	call   QWORD PTR [rax+0x10]
   140013c56:	mov    rdi,QWORD PTR [rsp+0x30]
   140013c5b:	mov    rax,QWORD PTR [rbx]
   140013c5e:	mov    rdx,rsi
   140013c61:	mov    rcx,rbx
   140013c64:	mov    rbx,QWORD PTR [rsp+0x38]
   140013c69:	add    rsp,0x20
   140013c6d:	pop    rsi
   140013c6e:	rex.W jmp QWORD PTR [rax+0x308]
   140013c75:	int3   
   140013c76:	int3   
   140013c77:	int3   
   140013c78:	int3   
   140013c79:	int3   
   140013c7a:	int3   
   140013c7b:	int3   
   140013c7c:	int3   
   140013c7d:	int3   
   140013c7e:	int3   
   140013c7f:	int3   
   140013c80:	mov    QWORD PTR [rsp+0x10],rbx
   140013c85:	push   rsi
   140013c86:	sub    rsp,0x20
   140013c8a:	mov    rax,QWORD PTR [rdx]
   140013c8d:	mov    rbx,rdx
   140013c90:	mov    rsi,rcx
   140013c93:	mov    rdx,rcx
   140013c96:	mov    rcx,rbx
   140013c99:	call   QWORD PTR [rax+0x20]
   140013c9c:	test   al,al
   140013c9e:	je     0x140013cdb
   140013ca0:	mov    QWORD PTR [rsp+0x30],rdi
   140013ca5:	mov    rdi,QWORD PTR [rsi+0x10]
   140013ca9:	test   rdi,rdi
   140013cac:	je     0x140013cd6
   140013cae:	mov    rax,QWORD PTR [rbx]
   140013cb1:	mov    rdx,rdi
   140013cb4:	mov    rcx,rbx
   140013cb7:	call   QWORD PTR [rax+0x8]
   140013cba:	test   al,al
   140013cbc:	je     0x140013cca
   140013cbe:	mov    rax,QWORD PTR [rdi]
   140013cc1:	mov    rdx,rbx
   140013cc4:	mov    rcx,rdi
   140013cc7:	call   QWORD PTR [rax+0x28]
   140013cca:	mov    rax,QWORD PTR [rbx]
   140013ccd:	mov    rdx,rdi
   140013cd0:	mov    rcx,rbx
   140013cd3:	call   QWORD PTR [rax+0x10]
   140013cd6:	mov    rdi,QWORD PTR [rsp+0x30]
   140013cdb:	mov    rax,QWORD PTR [rbx]
   140013cde:	mov    rdx,rsi
   140013ce1:	mov    rcx,rbx
   140013ce4:	mov    rbx,QWORD PTR [rsp+0x38]
   140013ce9:	add    rsp,0x20
   140013ced:	pop    rsi
   140013cee:	rex.W jmp QWORD PTR [rax+0x300]
   140013cf5:	int3   
   140013cf6:	int3   
   140013cf7:	int3   
   140013cf8:	int3   
   140013cf9:	int3   
   140013cfa:	int3   
   140013cfb:	int3   
   140013cfc:	int3   
   140013cfd:	int3   
   140013cfe:	int3   
   140013cff:	int3   
   140013d00:	mov    QWORD PTR [rsp+0x8],rbx
   140013d05:	push   rdi
   140013d06:	sub    rsp,0x20
   140013d0a:	mov    rax,QWORD PTR [rdx]
   140013d0d:	mov    rdi,rdx
   140013d10:	mov    rbx,rcx
   140013d13:	mov    rdx,rcx
   140013d16:	mov    rcx,rdi
   140013d19:	call   QWORD PTR [rax+0x18]
   140013d1c:	mov    r11,QWORD PTR [rdi]
   140013d1f:	mov    rdx,rbx
   140013d22:	mov    rcx,rdi
   140013d25:	mov    rbx,QWORD PTR [rsp+0x30]
   140013d2a:	add    rsp,0x20
   140013d2e:	pop    rdi
   140013d2f:	rex.WB jmp QWORD PTR [r11+0x2f8]
   140013d36:	int3   
   140013d37:	int3   
   140013d38:	int3   
   140013d39:	int3   
   140013d3a:	int3   
   140013d3b:	int3   
   140013d3c:	int3   
   140013d3d:	int3   
   140013d3e:	int3   
   140013d3f:	int3   
   140013d40:	mov    QWORD PTR [rsp+0x10],rbx
   140013d45:	push   rsi
   140013d46:	sub    rsp,0x20
   140013d4a:	mov    rax,QWORD PTR [rdx]
   140013d4d:	mov    rbx,rdx
   140013d50:	mov    rsi,rcx
   140013d53:	mov    rdx,rcx
   140013d56:	mov    rcx,rbx
   140013d59:	call   QWORD PTR [rax+0x2f0]
   140013d5f:	test   al,al
   140013d61:	je     0x140013dcf
   140013d63:	mov    QWORD PTR [rsp+0x30],rdi
   140013d68:	mov    rdi,QWORD PTR [rsi+0x10]
   140013d6c:	test   rdi,rdi
   140013d6f:	je     0x140013d99
   140013d71:	mov    rax,QWORD PTR [rbx]
   140013d74:	mov    rdx,rdi
   140013d77:	mov    rcx,rbx
   140013d7a:	call   QWORD PTR [rax+0x8]
   140013d7d:	test   al,al
   140013d7f:	je     0x140013d8d
   140013d81:	mov    rax,QWORD PTR [rdi]
   140013d84:	mov    rdx,rbx
   140013d87:	mov    rcx,rdi
   140013d8a:	call   QWORD PTR [rax+0x28]
   140013d8d:	mov    rax,QWORD PTR [rbx]
   140013d90:	mov    rdx,rdi
   140013d93:	mov    rcx,rbx
   140013d96:	call   QWORD PTR [rax+0x10]
   140013d99:	mov    rdi,QWORD PTR [rsi+0x18]
   140013d9d:	test   rdi,rdi
   140013da0:	je     0x140013dca
   140013da2:	mov    rax,QWORD PTR [rbx]
   140013da5:	mov    rdx,rdi
   140013da8:	mov    rcx,rbx
   140013dab:	call   QWORD PTR [rax+0x8]
   140013dae:	test   al,al
   140013db0:	je     0x140013dbe
   140013db2:	mov    rax,QWORD PTR [rdi]
   140013db5:	mov    rdx,rbx
   140013db8:	mov    rcx,rdi
   140013dbb:	call   QWORD PTR [rax+0x28]
   140013dbe:	mov    rax,QWORD PTR [rbx]
   140013dc1:	mov    rdx,rdi
   140013dc4:	mov    rcx,rbx
   140013dc7:	call   QWORD PTR [rax+0x10]
   140013dca:	mov    rdi,QWORD PTR [rsp+0x30]
   140013dcf:	mov    rax,QWORD PTR [rbx]
   140013dd2:	mov    rdx,rsi
   140013dd5:	mov    rcx,rbx
   140013dd8:	mov    rbx,QWORD PTR [rsp+0x38]
   140013ddd:	add    rsp,0x20
   140013de1:	pop    rsi
   140013de2:	rex.W jmp QWORD PTR [rax+0x5d0]
   140013de9:	int3   
   140013dea:	int3   
   140013deb:	int3   
   140013dec:	int3   
   140013ded:	int3   
   140013dee:	int3   
   140013def:	int3   
   140013df0:	mov    QWORD PTR [rsp+0x10],rbx
   140013df5:	push   rsi
   140013df6:	sub    rsp,0x20
   140013dfa:	mov    rax,QWORD PTR [rdx]
   140013dfd:	mov    rbx,rdx
   140013e00:	mov    rsi,rcx
   140013e03:	mov    rdx,rcx
   140013e06:	mov    rcx,rbx
   140013e09:	call   QWORD PTR [rax+0x2d0]
   140013e0f:	test   al,al
   140013e11:	je     0x140013e7f
   140013e13:	mov    QWORD PTR [rsp+0x30],rdi
   140013e18:	mov    rdi,QWORD PTR [rsi+0x48]
   140013e1c:	test   rdi,rdi
   140013e1f:	je     0x140013e49
   140013e21:	mov    rax,QWORD PTR [rbx]
   140013e24:	mov    rdx,rdi
   140013e27:	mov    rcx,rbx
   140013e2a:	call   QWORD PTR [rax+0x8]
   140013e2d:	test   al,al
   140013e2f:	je     0x140013e3d
   140013e31:	mov    rax,QWORD PTR [rdi]
   140013e34:	mov    rdx,rbx
   140013e37:	mov    rcx,rdi
   140013e3a:	call   QWORD PTR [rax+0x28]
   140013e3d:	mov    rax,QWORD PTR [rbx]
   140013e40:	mov    rdx,rdi
   140013e43:	mov    rcx,rbx
   140013e46:	call   QWORD PTR [rax+0x10]
   140013e49:	mov    rdi,QWORD PTR [rsi+0x50]
   140013e4d:	test   rdi,rdi
   140013e50:	je     0x140013e7a
   140013e52:	mov    rax,QWORD PTR [rbx]
   140013e55:	mov    rdx,rdi
   140013e58:	mov    rcx,rbx
   140013e5b:	call   QWORD PTR [rax+0x8]
   140013e5e:	test   al,al
   140013e60:	je     0x140013e6e
   140013e62:	mov    rax,QWORD PTR [rdi]
   140013e65:	mov    rdx,rbx
   140013e68:	mov    rcx,rdi
   140013e6b:	call   QWORD PTR [rax+0x28]
   140013e6e:	mov    rax,QWORD PTR [rbx]
   140013e71:	mov    rdx,rdi
   140013e74:	mov    rcx,rbx
   140013e77:	call   QWORD PTR [rax+0x10]
   140013e7a:	mov    rdi,QWORD PTR [rsp+0x30]
   140013e7f:	mov    rax,QWORD PTR [rbx]
   140013e82:	mov    rdx,rsi
   140013e85:	mov    rcx,rbx
   140013e88:	mov    rbx,QWORD PTR [rsp+0x38]
   140013e8d:	add    rsp,0x20
   140013e91:	pop    rsi
   140013e92:	rex.W jmp QWORD PTR [rax+0x5b0]
   140013e99:	int3   
   140013e9a:	int3   
   140013e9b:	int3   
   140013e9c:	int3   
   140013e9d:	int3   
   140013e9e:	int3   
   140013e9f:	int3   
   140013ea0:	mov    QWORD PTR [rsp+0x10],rbx
   140013ea5:	push   rsi
   140013ea6:	sub    rsp,0x20
   140013eaa:	mov    rax,QWORD PTR [rdx]
   140013ead:	mov    rbx,rdx
   140013eb0:	mov    rsi,rcx
   140013eb3:	mov    rdx,rcx
   140013eb6:	mov    rcx,rbx
   140013eb9:	call   QWORD PTR [rax+0x2c0]
   140013ebf:	test   al,al
   140013ec1:	je     0x140013f2f
   140013ec3:	mov    QWORD PTR [rsp+0x30],rdi
   140013ec8:	mov    rdi,QWORD PTR [rsi+0x10]
   140013ecc:	test   rdi,rdi
   140013ecf:	je     0x140013ef9
   140013ed1:	mov    rax,QWORD PTR [rbx]
   140013ed4:	mov    rdx,rdi
   140013ed7:	mov    rcx,rbx
   140013eda:	call   QWORD PTR [rax+0x8]
   140013edd:	test   al,al
   140013edf:	je     0x140013eed
   140013ee1:	mov    rax,QWORD PTR [rdi]
   140013ee4:	mov    rdx,rbx
   140013ee7:	mov    rcx,rdi
   140013eea:	call   QWORD PTR [rax+0x28]
   140013eed:	mov    rax,QWORD PTR [rbx]
   140013ef0:	mov    rdx,rdi
   140013ef3:	mov    rcx,rbx
   140013ef6:	call   QWORD PTR [rax+0x10]
   140013ef9:	mov    rdi,QWORD PTR [rsi+0x18]
   140013efd:	test   rdi,rdi
   140013f00:	je     0x140013f2a
   140013f02:	mov    rax,QWORD PTR [rbx]
   140013f05:	mov    rdx,rdi
   140013f08:	mov    rcx,rbx
   140013f0b:	call   QWORD PTR [rax+0x8]
   140013f0e:	test   al,al
   140013f10:	je     0x140013f1e
   140013f12:	mov    rax,QWORD PTR [rdi]
   140013f15:	mov    rdx,rbx
   140013f18:	mov    rcx,rdi
   140013f1b:	call   QWORD PTR [rax+0x28]
   140013f1e:	mov    rax,QWORD PTR [rbx]
   140013f21:	mov    rdx,rdi
   140013f24:	mov    rcx,rbx
   140013f27:	call   QWORD PTR [rax+0x10]
   140013f2a:	mov    rdi,QWORD PTR [rsp+0x30]
   140013f2f:	mov    rax,QWORD PTR [rbx]
   140013f32:	mov    rdx,rsi
   140013f35:	mov    rcx,rbx
   140013f38:	mov    rbx,QWORD PTR [rsp+0x38]
   140013f3d:	add    rsp,0x20
   140013f41:	pop    rsi
   140013f42:	rex.W jmp QWORD PTR [rax+0x5a0]
   140013f49:	int3   
   140013f4a:	int3   
   140013f4b:	int3   
   140013f4c:	int3   
   140013f4d:	int3   
   140013f4e:	int3   
   140013f4f:	int3   
   140013f50:	mov    QWORD PTR [rsp+0x10],rbx
   140013f55:	push   rsi
   140013f56:	sub    rsp,0x20
   140013f5a:	mov    rax,QWORD PTR [rdx]
   140013f5d:	mov    rbx,rdx
   140013f60:	mov    rsi,rcx
   140013f63:	mov    rdx,rcx
   140013f66:	mov    rcx,rbx
   140013f69:	call   QWORD PTR [rax+0x2b8]
   140013f6f:	test   al,al
   140013f71:	je     0x140013fae
   140013f73:	mov    QWORD PTR [rsp+0x30],rdi
   140013f78:	mov    rdi,QWORD PTR [rsi+0x20]
   140013f7c:	test   rdi,rdi
   140013f7f:	je     0x140013fa9
   140013f81:	mov    rax,QWORD PTR [rbx]
   140013f84:	mov    rdx,rdi
   140013f87:	mov    rcx,rbx
   140013f8a:	call   QWORD PTR [rax+0x8]
   140013f8d:	test   al,al
   140013f8f:	je     0x140013f9d
   140013f91:	mov    rax,QWORD PTR [rdi]
   140013f94:	mov    rdx,rbx
   140013f97:	mov    rcx,rdi
   140013f9a:	call   QWORD PTR [rax+0x28]
   140013f9d:	mov    rax,QWORD PTR [rbx]
   140013fa0:	mov    rdx,rdi
   140013fa3:	mov    rcx,rbx
   140013fa6:	call   QWORD PTR [rax+0x10]
   140013fa9:	mov    rdi,QWORD PTR [rsp+0x30]
   140013fae:	mov    rax,QWORD PTR [rbx]
   140013fb1:	mov    rdx,rsi
   140013fb4:	mov    rcx,rbx
   140013fb7:	mov    rbx,QWORD PTR [rsp+0x38]
   140013fbc:	add    rsp,0x20
   140013fc0:	pop    rsi
   140013fc1:	rex.W jmp QWORD PTR [rax+0x598]
   140013fc8:	int3   
   140013fc9:	int3   
   140013fca:	int3   
   140013fcb:	int3   
   140013fcc:	int3   
   140013fcd:	int3   
   140013fce:	int3   
   140013fcf:	int3   
   140013fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140013fd5:	push   rdi
   140013fd6:	sub    rsp,0x20
   140013fda:	mov    rax,QWORD PTR [rdx]
   140013fdd:	mov    rdi,rdx
   140013fe0:	mov    rbx,rcx
   140013fe3:	mov    rdx,rcx
   140013fe6:	mov    rcx,rdi
   140013fe9:	call   QWORD PTR [rax+0x298]
   140013fef:	mov    r11,QWORD PTR [rdi]
   140013ff2:	mov    rdx,rbx
   140013ff5:	mov    rcx,rdi
   140013ff8:	mov    rbx,QWORD PTR [rsp+0x30]
   140013ffd:	add    rsp,0x20
   140014001:	pop    rdi
   140014002:	rex.WB jmp QWORD PTR [r11+0x578]
   140014009:	int3   
   14001400a:	int3   
   14001400b:	int3   
   14001400c:	int3   
   14001400d:	int3   
   14001400e:	int3   
   14001400f:	int3   
   140014010:	mov    QWORD PTR [rsp+0x10],rbx
   140014015:	push   rsi
   140014016:	sub    rsp,0x20
   14001401a:	mov    rax,QWORD PTR [rdx]
   14001401d:	mov    rbx,rdx
   140014020:	mov    rsi,rcx
   140014023:	mov    rdx,rcx
   140014026:	mov    rcx,rbx
   140014029:	call   QWORD PTR [rax+0x2b0]
   14001402f:	test   al,al
   140014031:	je     0x1400140d4
   140014037:	mov    QWORD PTR [rsp+0x30],rdi
   14001403c:	mov    rdi,QWORD PTR [rsi+0x10]
   140014040:	test   rdi,rdi
   140014043:	je     0x14001406d
   140014045:	mov    rax,QWORD PTR [rbx]
   140014048:	mov    rdx,rdi
   14001404b:	mov    rcx,rbx
   14001404e:	call   QWORD PTR [rax+0x8]
   140014051:	test   al,al
   140014053:	je     0x140014061
   140014055:	mov    rax,QWORD PTR [rdi]
   140014058:	mov    rdx,rbx
   14001405b:	mov    rcx,rdi
   14001405e:	call   QWORD PTR [rax+0x28]
   140014061:	mov    rax,QWORD PTR [rbx]
   140014064:	mov    rdx,rdi
   140014067:	mov    rcx,rbx
   14001406a:	call   QWORD PTR [rax+0x10]
   14001406d:	mov    rdi,QWORD PTR [rsi+0x18]
   140014071:	test   rdi,rdi
   140014074:	je     0x14001409e
   140014076:	mov    rax,QWORD PTR [rbx]
   140014079:	mov    rdx,rdi
   14001407c:	mov    rcx,rbx
   14001407f:	call   QWORD PTR [rax+0x8]
   140014082:	test   al,al
   140014084:	je     0x140014092
   140014086:	mov    rax,QWORD PTR [rdi]
   140014089:	mov    rdx,rbx
   14001408c:	mov    rcx,rdi
   14001408f:	call   QWORD PTR [rax+0x28]
   140014092:	mov    rax,QWORD PTR [rbx]
   140014095:	mov    rdx,rdi
   140014098:	mov    rcx,rbx
   14001409b:	call   QWORD PTR [rax+0x10]
   14001409e:	mov    rdi,QWORD PTR [rsi+0x20]
   1400140a2:	test   rdi,rdi
   1400140a5:	je     0x1400140cf
   1400140a7:	mov    rax,QWORD PTR [rbx]
   1400140aa:	mov    rdx,rdi
   1400140ad:	mov    rcx,rbx
   1400140b0:	call   QWORD PTR [rax+0x8]
   1400140b3:	test   al,al
   1400140b5:	je     0x1400140c3
   1400140b7:	mov    rax,QWORD PTR [rdi]
   1400140ba:	mov    rdx,rbx
   1400140bd:	mov    rcx,rdi
   1400140c0:	call   QWORD PTR [rax+0x28]
   1400140c3:	mov    rax,QWORD PTR [rbx]
   1400140c6:	mov    rdx,rdi
   1400140c9:	mov    rcx,rbx
   1400140cc:	call   QWORD PTR [rax+0x10]
   1400140cf:	mov    rdi,QWORD PTR [rsp+0x30]
   1400140d4:	mov    rax,QWORD PTR [rbx]
   1400140d7:	mov    rdx,rsi
   1400140da:	mov    rcx,rbx
   1400140dd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400140e2:	add    rsp,0x20
   1400140e6:	pop    rsi
   1400140e7:	rex.W jmp QWORD PTR [rax+0x590]
   1400140ee:	int3   
   1400140ef:	int3   
   1400140f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400140f5:	push   rsi
   1400140f6:	sub    rsp,0x20
   1400140fa:	mov    rax,QWORD PTR [rdx]
   1400140fd:	mov    rbx,rdx
   140014100:	mov    rsi,rcx
   140014103:	mov    rdx,rcx
   140014106:	mov    rcx,rbx
   140014109:	call   QWORD PTR [rax+0x2a8]
   14001410f:	test   al,al
   140014111:	je     0x14001417f
   140014113:	mov    QWORD PTR [rsp+0x30],rdi
   140014118:	mov    rdi,QWORD PTR [rsi+0x10]
   14001411c:	test   rdi,rdi
   14001411f:	je     0x140014149
   140014121:	mov    rax,QWORD PTR [rbx]
   140014124:	mov    rdx,rdi
   140014127:	mov    rcx,rbx
   14001412a:	call   QWORD PTR [rax+0x8]
   14001412d:	test   al,al
   14001412f:	je     0x14001413d
   140014131:	mov    rax,QWORD PTR [rdi]
   140014134:	mov    rdx,rbx
   140014137:	mov    rcx,rdi
   14001413a:	call   QWORD PTR [rax+0x28]
   14001413d:	mov    rax,QWORD PTR [rbx]
   140014140:	mov    rdx,rdi
   140014143:	mov    rcx,rbx
   140014146:	call   QWORD PTR [rax+0x10]
   140014149:	mov    rdi,QWORD PTR [rsi+0x18]
   14001414d:	test   rdi,rdi
   140014150:	je     0x14001417a
   140014152:	mov    rax,QWORD PTR [rbx]
   140014155:	mov    rdx,rdi
   140014158:	mov    rcx,rbx
   14001415b:	call   QWORD PTR [rax+0x8]
   14001415e:	test   al,al
   140014160:	je     0x14001416e
   140014162:	mov    rax,QWORD PTR [rdi]
   140014165:	mov    rdx,rbx
   140014168:	mov    rcx,rdi
   14001416b:	call   QWORD PTR [rax+0x28]
   14001416e:	mov    rax,QWORD PTR [rbx]
   140014171:	mov    rdx,rdi
   140014174:	mov    rcx,rbx
   140014177:	call   QWORD PTR [rax+0x10]
   14001417a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001417f:	mov    rax,QWORD PTR [rbx]
   140014182:	mov    rdx,rsi
   140014185:	mov    rcx,rbx
   140014188:	mov    rbx,QWORD PTR [rsp+0x38]
   14001418d:	add    rsp,0x20
   140014191:	pop    rsi
   140014192:	rex.W jmp QWORD PTR [rax+0x588]
   140014199:	int3   
   14001419a:	int3   
   14001419b:	int3   
   14001419c:	int3   
   14001419d:	int3   
   14001419e:	int3   
   14001419f:	int3   
   1400141a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400141a5:	push   rsi
   1400141a6:	sub    rsp,0x20
   1400141aa:	mov    rax,QWORD PTR [rdx]
   1400141ad:	mov    rbx,rdx
   1400141b0:	mov    rsi,rcx
   1400141b3:	mov    rdx,rcx
   1400141b6:	mov    rcx,rbx
   1400141b9:	call   QWORD PTR [rax+0x2a0]
   1400141bf:	test   al,al
   1400141c1:	je     0x14001422f
   1400141c3:	mov    QWORD PTR [rsp+0x30],rdi
   1400141c8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400141cc:	test   rdi,rdi
   1400141cf:	je     0x1400141f9
   1400141d1:	mov    rax,QWORD PTR [rbx]
   1400141d4:	mov    rdx,rdi
   1400141d7:	mov    rcx,rbx
   1400141da:	call   QWORD PTR [rax+0x8]
   1400141dd:	test   al,al
   1400141df:	je     0x1400141ed
   1400141e1:	mov    rax,QWORD PTR [rdi]
   1400141e4:	mov    rdx,rbx
   1400141e7:	mov    rcx,rdi
   1400141ea:	call   QWORD PTR [rax+0x28]
   1400141ed:	mov    rax,QWORD PTR [rbx]
   1400141f0:	mov    rdx,rdi
   1400141f3:	mov    rcx,rbx
   1400141f6:	call   QWORD PTR [rax+0x10]
   1400141f9:	mov    rdi,QWORD PTR [rsi+0x18]
   1400141fd:	test   rdi,rdi
   140014200:	je     0x14001422a
   140014202:	mov    rax,QWORD PTR [rbx]
   140014205:	mov    rdx,rdi
   140014208:	mov    rcx,rbx
   14001420b:	call   QWORD PTR [rax+0x8]
   14001420e:	test   al,al
   140014210:	je     0x14001421e
   140014212:	mov    rax,QWORD PTR [rdi]
   140014215:	mov    rdx,rbx
   140014218:	mov    rcx,rdi
   14001421b:	call   QWORD PTR [rax+0x28]
   14001421e:	mov    rax,QWORD PTR [rbx]
   140014221:	mov    rdx,rdi
   140014224:	mov    rcx,rbx
   140014227:	call   QWORD PTR [rax+0x10]
   14001422a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001422f:	mov    rax,QWORD PTR [rbx]
   140014232:	mov    rdx,rsi
   140014235:	mov    rcx,rbx
   140014238:	mov    rbx,QWORD PTR [rsp+0x38]
   14001423d:	add    rsp,0x20
   140014241:	pop    rsi
   140014242:	rex.W jmp QWORD PTR [rax+0x580]
   140014249:	int3   
   14001424a:	int3   
   14001424b:	int3   
   14001424c:	int3   
   14001424d:	int3   
   14001424e:	int3   
   14001424f:	int3   
   140014250:	mov    QWORD PTR [rsp+0x18],rbp
   140014255:	push   rsi
   140014256:	sub    rsp,0x20
   14001425a:	mov    rax,QWORD PTR [rdx]
   14001425d:	mov    rsi,rdx
   140014260:	mov    rbp,rcx
   140014263:	mov    rdx,rcx
   140014266:	mov    rcx,rsi
   140014269:	call   QWORD PTR [rax+0x290]
   14001426f:	test   al,al
   140014271:	je     0x1400142c9
   140014273:	mov    QWORD PTR [rsp+0x30],rbx
   140014278:	mov    rbx,rbp
   14001427b:	test   rbp,rbp
   14001427e:	je     0x1400142c4
   140014280:	mov    QWORD PTR [rsp+0x38],rdi
   140014285:	mov    rdi,QWORD PTR [rbx+0x18]
   140014289:	test   rdi,rdi
   14001428c:	je     0x1400142b6
   14001428e:	mov    rax,QWORD PTR [rsi]
   140014291:	mov    rdx,rdi
   140014294:	mov    rcx,rsi
   140014297:	call   QWORD PTR [rax+0x8]
   14001429a:	test   al,al
   14001429c:	je     0x1400142aa
   14001429e:	mov    rax,QWORD PTR [rdi]
   1400142a1:	mov    rdx,rsi
   1400142a4:	mov    rcx,rdi
   1400142a7:	call   QWORD PTR [rax+0x28]
   1400142aa:	mov    rax,QWORD PTR [rsi]
   1400142ad:	mov    rdx,rdi
   1400142b0:	mov    rcx,rsi
   1400142b3:	call   QWORD PTR [rax+0x10]
   1400142b6:	mov    rbx,QWORD PTR [rbx+0x10]
   1400142ba:	test   rbx,rbx
   1400142bd:	jne    0x140014285
   1400142bf:	mov    rdi,QWORD PTR [rsp+0x38]
   1400142c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400142c9:	mov    rax,QWORD PTR [rsi]
   1400142cc:	mov    rdx,rbp
   1400142cf:	mov    rcx,rsi
   1400142d2:	mov    rbp,QWORD PTR [rsp+0x40]
   1400142d7:	add    rsp,0x20
   1400142db:	pop    rsi
   1400142dc:	rex.W jmp QWORD PTR [rax+0x570]
   1400142e3:	int3   
   1400142e4:	int3   
   1400142e5:	int3   
   1400142e6:	int3   
   1400142e7:	int3   
   1400142e8:	int3   
   1400142e9:	int3   
   1400142ea:	int3   
   1400142eb:	int3   
   1400142ec:	int3   
   1400142ed:	int3   
   1400142ee:	int3   
   1400142ef:	int3   
   1400142f0:	mov    QWORD PTR [rsp+0x18],rbp
   1400142f5:	push   rsi
   1400142f6:	sub    rsp,0x20
   1400142fa:	mov    rax,QWORD PTR [rdx]
   1400142fd:	mov    rsi,rdx
   140014300:	mov    rbp,rcx
   140014303:	mov    rdx,rcx
   140014306:	mov    rcx,rsi
   140014309:	call   QWORD PTR [rax+0x288]
   14001430f:	test   al,al
   140014311:	je     0x140014369
   140014313:	mov    QWORD PTR [rsp+0x30],rbx
   140014318:	mov    rbx,rbp
   14001431b:	test   rbp,rbp
   14001431e:	je     0x140014364
   140014320:	mov    QWORD PTR [rsp+0x38],rdi
   140014325:	mov    rdi,QWORD PTR [rbx+0x18]
   140014329:	test   rdi,rdi
   14001432c:	je     0x140014356
   14001432e:	mov    rax,QWORD PTR [rsi]
   140014331:	mov    rdx,rdi
   140014334:	mov    rcx,rsi
   140014337:	call   QWORD PTR [rax+0x8]
   14001433a:	test   al,al
   14001433c:	je     0x14001434a
   14001433e:	mov    rax,QWORD PTR [rdi]
   140014341:	mov    rdx,rsi
   140014344:	mov    rcx,rdi
   140014347:	call   QWORD PTR [rax+0x28]
   14001434a:	mov    rax,QWORD PTR [rsi]
   14001434d:	mov    rdx,rdi
   140014350:	mov    rcx,rsi
   140014353:	call   QWORD PTR [rax+0x10]
   140014356:	mov    rbx,QWORD PTR [rbx+0x10]
   14001435a:	test   rbx,rbx
   14001435d:	jne    0x140014325
   14001435f:	mov    rdi,QWORD PTR [rsp+0x38]
   140014364:	mov    rbx,QWORD PTR [rsp+0x30]
   140014369:	mov    rax,QWORD PTR [rsi]
   14001436c:	mov    rdx,rbp
   14001436f:	mov    rcx,rsi
   140014372:	mov    rbp,QWORD PTR [rsp+0x40]
   140014377:	add    rsp,0x20
   14001437b:	pop    rsi
   14001437c:	rex.W jmp QWORD PTR [rax+0x568]
   140014383:	int3   
   140014384:	int3   
   140014385:	int3   
   140014386:	int3   
   140014387:	int3   
   140014388:	int3   
   140014389:	int3   
   14001438a:	int3   
   14001438b:	int3   
   14001438c:	int3   
   14001438d:	int3   
   14001438e:	int3   
   14001438f:	int3   
   140014390:	mov    QWORD PTR [rsp+0x8],rbx
   140014395:	push   rdi
   140014396:	sub    rsp,0x20
   14001439a:	mov    rax,QWORD PTR [rdx]
   14001439d:	mov    rdi,rdx
   1400143a0:	mov    rbx,rcx
   1400143a3:	mov    rdx,rcx
   1400143a6:	mov    rcx,rdi
   1400143a9:	call   QWORD PTR [rax+0x280]
   1400143af:	mov    r11,QWORD PTR [rdi]
   1400143b2:	mov    rdx,rbx
   1400143b5:	mov    rcx,rdi
   1400143b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400143bd:	add    rsp,0x20
   1400143c1:	pop    rdi
   1400143c2:	rex.WB jmp QWORD PTR [r11+0x560]
   1400143c9:	int3   
   1400143ca:	int3   
   1400143cb:	int3   
   1400143cc:	int3   
   1400143cd:	int3   
   1400143ce:	int3   
   1400143cf:	int3   
   1400143d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400143d5:	push   rsi
   1400143d6:	sub    rsp,0x20
   1400143da:	mov    rax,QWORD PTR [rdx]
   1400143dd:	mov    rbx,rdx
   1400143e0:	mov    rsi,rcx
   1400143e3:	mov    rdx,rcx
   1400143e6:	mov    rcx,rbx
   1400143e9:	call   QWORD PTR [rax+0x2d8]
   1400143ef:	test   al,al
   1400143f1:	je     0x14001442e
   1400143f3:	mov    QWORD PTR [rsp+0x30],rdi
   1400143f8:	mov    rdi,QWORD PTR [rsi+0x20]
   1400143fc:	test   rdi,rdi
   1400143ff:	je     0x140014429
   140014401:	mov    rax,QWORD PTR [rbx]
   140014404:	mov    rdx,rdi
   140014407:	mov    rcx,rbx
   14001440a:	call   QWORD PTR [rax+0x8]
   14001440d:	test   al,al
   14001440f:	je     0x14001441d
   140014411:	mov    rax,QWORD PTR [rdi]
   140014414:	mov    rdx,rbx
   140014417:	mov    rcx,rdi
   14001441a:	call   QWORD PTR [rax+0x28]
   14001441d:	mov    rax,QWORD PTR [rbx]
   140014420:	mov    rdx,rdi
   140014423:	mov    rcx,rbx
   140014426:	call   QWORD PTR [rax+0x10]
   140014429:	mov    rdi,QWORD PTR [rsp+0x30]
   14001442e:	mov    rax,QWORD PTR [rbx]
   140014431:	mov    rdx,rsi
   140014434:	mov    rcx,rbx
   140014437:	mov    rbx,QWORD PTR [rsp+0x38]
   14001443c:	add    rsp,0x20
   140014440:	pop    rsi
   140014441:	rex.W jmp QWORD PTR [rax+0x5c8]
   140014448:	int3   
   140014449:	int3   
   14001444a:	int3   
   14001444b:	int3   
   14001444c:	int3   
   14001444d:	int3   
   14001444e:	int3   
   14001444f:	int3   
   140014450:	mov    QWORD PTR [rsp+0x8],rbx
   140014455:	push   rdi
   140014456:	sub    rsp,0x20
   14001445a:	mov    rax,QWORD PTR [rdx]
   14001445d:	mov    rdi,rdx
   140014460:	mov    rbx,rcx
   140014463:	mov    rdx,rcx
   140014466:	mov    rcx,rdi
   140014469:	call   QWORD PTR [rax+0x278]
   14001446f:	mov    r11,QWORD PTR [rdi]
   140014472:	mov    rdx,rbx
   140014475:	mov    rcx,rdi
   140014478:	mov    rbx,QWORD PTR [rsp+0x30]
   14001447d:	add    rsp,0x20
   140014481:	pop    rdi
   140014482:	rex.WB jmp QWORD PTR [r11+0x558]
   140014489:	int3   
   14001448a:	int3   
   14001448b:	int3   
   14001448c:	int3   
   14001448d:	int3   
   14001448e:	int3   
   14001448f:	int3   
   140014490:	mov    QWORD PTR [rsp+0x10],rbx
   140014495:	push   rsi
   140014496:	sub    rsp,0x20
   14001449a:	mov    rax,QWORD PTR [rdx]
   14001449d:	mov    rbx,rdx
   1400144a0:	mov    rsi,rcx
   1400144a3:	mov    rdx,rcx
   1400144a6:	mov    rcx,rbx
   1400144a9:	call   QWORD PTR [rax+0x2e0]
   1400144af:	test   al,al
   1400144b1:	je     0x1400144ee
   1400144b3:	mov    QWORD PTR [rsp+0x30],rdi
   1400144b8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400144bc:	test   rdi,rdi
   1400144bf:	je     0x1400144e9
   1400144c1:	mov    rax,QWORD PTR [rbx]
   1400144c4:	mov    rdx,rdi
   1400144c7:	mov    rcx,rbx
   1400144ca:	call   QWORD PTR [rax+0x8]
   1400144cd:	test   al,al
   1400144cf:	je     0x1400144dd
   1400144d1:	mov    rax,QWORD PTR [rdi]
   1400144d4:	mov    rdx,rbx
   1400144d7:	mov    rcx,rdi
   1400144da:	call   QWORD PTR [rax+0x28]
   1400144dd:	mov    rax,QWORD PTR [rbx]
   1400144e0:	mov    rdx,rdi
   1400144e3:	mov    rcx,rbx
   1400144e6:	call   QWORD PTR [rax+0x10]
   1400144e9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400144ee:	mov    rax,QWORD PTR [rbx]
   1400144f1:	mov    rdx,rsi
   1400144f4:	mov    rcx,rbx
   1400144f7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400144fc:	add    rsp,0x20
   140014500:	pop    rsi
   140014501:	rex.W jmp QWORD PTR [rax+0x5b8]
   140014508:	int3   
   140014509:	int3   
   14001450a:	int3   
   14001450b:	int3   
   14001450c:	int3   
   14001450d:	int3   
   14001450e:	int3   
   14001450f:	int3   
   140014510:	mov    QWORD PTR [rsp+0x10],rbx
   140014515:	push   rsi
   140014516:	sub    rsp,0x20
   14001451a:	mov    rax,QWORD PTR [rdx]
   14001451d:	mov    rbx,rdx
   140014520:	mov    rsi,rcx
   140014523:	mov    rdx,rcx
   140014526:	mov    rcx,rbx
   140014529:	call   QWORD PTR [rax+0x2e8]
   14001452f:	test   al,al
   140014531:	je     0x14001459f
   140014533:	mov    QWORD PTR [rsp+0x30],rdi
   140014538:	mov    rdi,QWORD PTR [rsi+0x10]
   14001453c:	test   rdi,rdi
   14001453f:	je     0x140014569
   140014541:	mov    rax,QWORD PTR [rbx]
   140014544:	mov    rdx,rdi
   140014547:	mov    rcx,rbx
   14001454a:	call   QWORD PTR [rax+0x8]
   14001454d:	test   al,al
   14001454f:	je     0x14001455d
   140014551:	mov    rax,QWORD PTR [rdi]
   140014554:	mov    rdx,rbx
   140014557:	mov    rcx,rdi
   14001455a:	call   QWORD PTR [rax+0x28]
   14001455d:	mov    rax,QWORD PTR [rbx]
   140014560:	mov    rdx,rdi
   140014563:	mov    rcx,rbx
   140014566:	call   QWORD PTR [rax+0x10]
   140014569:	mov    rdi,QWORD PTR [rsi+0x18]
   14001456d:	test   rdi,rdi
   140014570:	je     0x14001459a
   140014572:	mov    rax,QWORD PTR [rbx]
   140014575:	mov    rdx,rdi
   140014578:	mov    rcx,rbx
   14001457b:	call   QWORD PTR [rax+0x8]
   14001457e:	test   al,al
   140014580:	je     0x14001458e
   140014582:	mov    rax,QWORD PTR [rdi]
   140014585:	mov    rdx,rbx
   140014588:	mov    rcx,rdi
   14001458b:	call   QWORD PTR [rax+0x28]
   14001458e:	mov    rax,QWORD PTR [rbx]
   140014591:	mov    rdx,rdi
   140014594:	mov    rcx,rbx
   140014597:	call   QWORD PTR [rax+0x10]
   14001459a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001459f:	mov    rax,QWORD PTR [rbx]
   1400145a2:	mov    rdx,rsi
   1400145a5:	mov    rcx,rbx
   1400145a8:	mov    rbx,QWORD PTR [rsp+0x38]
   1400145ad:	add    rsp,0x20
   1400145b1:	pop    rsi
   1400145b2:	rex.W jmp QWORD PTR [rax+0x5c0]
   1400145b9:	int3   
   1400145ba:	int3   
   1400145bb:	int3   
   1400145bc:	int3   
   1400145bd:	int3   
   1400145be:	int3   
   1400145bf:	int3   
   1400145c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400145c5:	push   rsi
   1400145c6:	sub    rsp,0x20
   1400145ca:	mov    rax,QWORD PTR [rdx]
   1400145cd:	mov    rbx,rdx
   1400145d0:	mov    rsi,rcx
   1400145d3:	mov    rdx,rcx
   1400145d6:	mov    rcx,rbx
   1400145d9:	call   QWORD PTR [rax+0x2c8]
   1400145df:	test   al,al
   1400145e1:	je     0x14001461e
   1400145e3:	mov    QWORD PTR [rsp+0x30],rdi
   1400145e8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400145ec:	test   rdi,rdi
   1400145ef:	je     0x140014619
   1400145f1:	mov    rax,QWORD PTR [rbx]
   1400145f4:	mov    rdx,rdi
   1400145f7:	mov    rcx,rbx
   1400145fa:	call   QWORD PTR [rax+0x8]
   1400145fd:	test   al,al
   1400145ff:	je     0x14001460d
   140014601:	mov    rax,QWORD PTR [rdi]
   140014604:	mov    rdx,rbx
   140014607:	mov    rcx,rdi
   14001460a:	call   QWORD PTR [rax+0x28]
   14001460d:	mov    rax,QWORD PTR [rbx]
   140014610:	mov    rdx,rdi
   140014613:	mov    rcx,rbx
   140014616:	call   QWORD PTR [rax+0x10]
   140014619:	mov    rdi,QWORD PTR [rsp+0x30]
   14001461e:	mov    rax,QWORD PTR [rbx]
   140014621:	mov    rdx,rsi
   140014624:	mov    rcx,rbx
   140014627:	mov    rbx,QWORD PTR [rsp+0x38]
   14001462c:	add    rsp,0x20
   140014630:	pop    rsi
   140014631:	rex.W jmp QWORD PTR [rax+0x5a8]
   140014638:	jmp    QWORD PTR [rip+0xaea]        # 0x140015128
   14001463e:	jmp    QWORD PTR [rip+0xadc]        # 0x140015120
   140014644:	sub    rsp,0x38
   140014648:	lea    rcx,[rip+0x4b5]        # 0x140014b04
   14001464f:	call   0x140014ab4
   140014654:	mov    r11d,DWORD PTR [rip+0xff0d]        # 0x140024568
   14001465b:	mov    r9d,DWORD PTR [rip+0xff02]        # 0x140024564
   140014662:	lea    rax,[rip+0xfeeb]        # 0x140024554
   140014669:	lea    r8,[rip+0xfed0]        # 0x140024540
   140014670:	lea    rdx,[rip+0xfed1]        # 0x140024548
   140014677:	lea    rcx,[rip+0xfeba]        # 0x140024538
   14001467e:	mov    DWORD PTR [rip+0xfecf],r11d        # 0x140024554
   140014685:	mov    QWORD PTR [rsp+0x20],rax
   14001468a:	call   QWORD PTR [rip+0xa50]        # 0x1400150e0
   140014690:	mov    DWORD PTR [rip+0xfeba],eax        # 0x140024550
   140014696:	test   eax,eax
   140014698:	jns    0x1400146a4
   14001469a:	mov    ecx,0x8
   14001469f:	call   0x1400149fc
   1400146a4:	add    rsp,0x38
   1400146a8:	ret    
   1400146a9:	int3   
   1400146aa:	int3   
   1400146ab:	int3   
   1400146ac:	mov    QWORD PTR [rsp+0x8],rsi
   1400146b1:	push   rdi
   1400146b2:	sub    rsp,0x20
   1400146b6:	mov    rax,QWORD PTR gs:0x30
   1400146bf:	mov    rdi,QWORD PTR [rax+0x8]
   1400146c3:	xor    esi,esi
   1400146c5:	xor    eax,eax
   1400146c7:	lock cmpxchg QWORD PTR [rip+0xfea8],rdi        # 0x140024578
   1400146d0:	je     0x1400146ed
   1400146d2:	cmp    rax,rdi
   1400146d5:	jne    0x1400146e0
   1400146d7:	mov    edi,0x1
   1400146dc:	mov    esi,edi
   1400146de:	jmp    0x1400146f2
   1400146e0:	mov    ecx,0x3e8
   1400146e5:	call   QWORD PTR [rip+0x93d]        # 0x140015028
   1400146eb:	jmp    0x1400146c5
   1400146ed:	mov    edi,0x1
   1400146f2:	mov    eax,DWORD PTR [rip+0xfe7c]        # 0x140024574
   1400146f8:	cmp    eax,edi
   1400146fa:	jne    0x140014708
   1400146fc:	mov    ecx,0x1f
   140014701:	call   0x1400149fc
   140014706:	jmp    0x14001473f
   140014708:	mov    eax,DWORD PTR [rip+0xfe66]        # 0x140024574
   14001470e:	test   eax,eax
   140014710:	jne    0x140014739
   140014712:	mov    DWORD PTR [rip+0xfe5c],edi        # 0x140024574
   140014718:	lea    rdx,[rip+0xce9]        # 0x140015408
   14001471f:	lea    rcx,[rip+0xcca]        # 0x1400153f0
   140014726:	call   0x140014c18
   14001472b:	test   eax,eax
   14001472d:	je     0x14001473f
   14001472f:	mov    eax,0xff
   140014734:	jmp    0x140014821
   140014739:	mov    DWORD PTR [rip+0xfe1d],edi        # 0x14002455c
   14001473f:	mov    eax,DWORD PTR [rip+0xfe2f]        # 0x140024574
   140014745:	cmp    eax,edi
   140014747:	jne    0x140014766
   140014749:	lea    rdx,[rip+0xc98]        # 0x1400153e8
   140014750:	lea    rcx,[rip+0xc81]        # 0x1400153d8
   140014757:	call   0x140014c12
   14001475c:	mov    DWORD PTR [rip+0xfe0e],0x2        # 0x140024574
   140014766:	test   esi,esi
   140014768:	jne    0x140014773
   14001476a:	xor    eax,eax
   14001476c:	xchg   QWORD PTR [rip+0xfe05],rax        # 0x140024578
   140014773:	cmp    QWORD PTR [rip+0xfe15],0x0        # 0x140024590
   14001477b:	je     0x14001479c
   14001477d:	lea    rcx,[rip+0xfe0c]        # 0x140024590
   140014784:	call   0x140014bd0
   140014789:	test   eax,eax
   14001478b:	je     0x14001479c
   14001478d:	xor    r8d,r8d
   140014790:	lea    edx,[r8+0x2]
   140014794:	xor    ecx,ecx
   140014796:	call   QWORD PTR [rip+0xfdf4]        # 0x140024590
   14001479c:	mov    rcx,QWORD PTR [rip+0x90d]        # 0x1400150b0
   1400147a3:	mov    rax,QWORD PTR [rip+0xfd96]        # 0x140024540
   1400147aa:	mov    QWORD PTR [rcx],rax
   1400147ad:	mov    r8,QWORD PTR [rip+0xfd8c]        # 0x140024540
   1400147b4:	mov    rdx,QWORD PTR [rip+0xfd8d]        # 0x140024548
   1400147bb:	mov    ecx,DWORD PTR [rip+0xfd77]        # 0x140024538
   1400147c1:	call   0x140001b90
   1400147c6:	mov    DWORD PTR [rip+0xfd8c],eax        # 0x140024558
   1400147cc:	cmp    DWORD PTR [rip+0xfd69],0x0        # 0x14002453c
   1400147d3:	jne    0x1400147dd
   1400147d5:	mov    ecx,eax
   1400147d7:	call   QWORD PTR [rip+0x8db]        # 0x1400150b8
   1400147dd:	cmp    DWORD PTR [rip+0xfd78],0x0        # 0x14002455c
   1400147e4:	jne    0x1400147f2
   1400147e6:	call   QWORD PTR [rip+0x8d4]        # 0x1400150c0
   1400147ec:	mov    eax,DWORD PTR [rip+0xfd66]        # 0x140024558
   1400147f2:	jmp    0x140014821
   1400147f4:	mov    DWORD PTR [rip+0xfd5e],eax        # 0x140024558
   1400147fa:	cmp    DWORD PTR [rip+0xfd3b],0x0        # 0x14002453c
   140014801:	jne    0x14001480c
   140014803:	mov    ecx,eax
   140014805:	call   QWORD PTR [rip+0x8bd]        # 0x1400150c8
   14001480b:	int3   
   14001480c:	cmp    DWORD PTR [rip+0xfd49],0x0        # 0x14002455c
   140014813:	jne    0x140014821
   140014815:	call   QWORD PTR [rip+0x8a5]        # 0x1400150c0
   14001481b:	mov    eax,DWORD PTR [rip+0xfd37]        # 0x140024558
   140014821:	mov    rsi,QWORD PTR [rsp+0x30]
   140014826:	add    rsp,0x20
   14001482a:	pop    rdi
   14001482b:	ret    
   14001482c:	sub    rsp,0x28
   140014830:	mov    eax,0x5a4d
   140014835:	cmp    WORD PTR [rip+0xfffffffffffeb7c4],ax        # 0x140000000
   14001483c:	je     0x140014842
   14001483e:	xor    eax,eax
   140014840:	jmp    0x140014891
   140014842:	movsxd rcx,DWORD PTR [rip+0xfffffffffffeb7f3]        # 0x14000003c
   140014849:	lea    rax,[rip+0xfffffffffffeb7b0]        # 0x140000000
   140014850:	add    rcx,rax
   140014853:	cmp    DWORD PTR [rcx],0x4550
   140014859:	jne    0x14001483e
   14001485b:	movzx  eax,WORD PTR [rcx+0x18]
   14001485f:	cmp    eax,0x10b
   140014864:	je     0x140014880
   140014866:	cmp    eax,0x20b
   14001486b:	jne    0x14001483e
   14001486d:	xor    eax,eax
   14001486f:	cmp    DWORD PTR [rcx+0x84],0xe
   140014876:	jbe    0x140014891
   140014878:	cmp    DWORD PTR [rcx+0xf8],eax
   14001487e:	jmp    0x14001488e
   140014880:	xor    eax,eax
   140014882:	cmp    DWORD PTR [rcx+0x74],0xe
   140014886:	jbe    0x140014891
   140014888:	cmp    DWORD PTR [rcx+0xe8],eax
   14001488e:	setne  al
   140014891:	mov    ecx,0x1
   140014896:	mov    DWORD PTR [rip+0xfca0],eax        # 0x14002453c
   14001489c:	call   QWORD PTR [rip+0x7ce]        # 0x140015070
   1400148a2:	or     rcx,0xffffffffffffffff
   1400148a6:	call   QWORD PTR [rip+0x7cc]        # 0x140015078
   1400148ac:	mov    rcx,QWORD PTR [rip+0x7cd]        # 0x140015080
   1400148b3:	mov    QWORD PTR [rip+0xfcc6],rax        # 0x140024580
   1400148ba:	mov    QWORD PTR [rip+0xfcc7],rax        # 0x140024588
   1400148c1:	mov    eax,DWORD PTR [rip+0xfca9]        # 0x140024570
   1400148c7:	mov    DWORD PTR [rcx],eax
   1400148c9:	mov    rdx,QWORD PTR [rip+0x7b8]        # 0x140015088
   1400148d0:	mov    eax,DWORD PTR [rip+0xfc96]        # 0x14002456c
   1400148d6:	mov    DWORD PTR [rdx],eax
   1400148d8:	call   0x140014acc
   1400148dd:	call   0x140014c20
   1400148e2:	cmp    DWORD PTR [rip+0xfc37],0x0        # 0x140024520
   1400148e9:	jne    0x1400148f8
   1400148eb:	lea    rcx,[rip+0x32e]        # 0x140014c20
   1400148f2:	call   QWORD PTR [rip+0x798]        # 0x140015090
   1400148f8:	cmp    DWORD PTR [rip+0xfc1d],0xffffffff        # 0x14002451c
   1400148ff:	jne    0x14001490a
   140014901:	or     ecx,0xffffffff
   140014904:	call   QWORD PTR [rip+0x78e]        # 0x140015098
   14001490a:	xor    eax,eax
   14001490c:	add    rsp,0x28
   140014910:	ret    
   140014911:	int3   
   140014912:	int3   
   140014913:	int3   
   140014914:	sub    rsp,0x28
   140014918:	call   0x140014c24
   14001491d:	add    rsp,0x28
   140014921:	jmp    0x1400146ac
   140014926:	int3   
   140014927:	int3   
   140014928:	mov    QWORD PTR [rsp+0x8],rbx
   14001492d:	mov    QWORD PTR [rsp+0x10],rsi
   140014932:	push   rdi
   140014933:	sub    rsp,0x20
   140014937:	mov    esi,edx
   140014939:	mov    rbx,rcx
   14001493c:	test   dl,0x2
   14001493f:	je     0x14001496b
   140014941:	mov    r8d,DWORD PTR [rcx-0x8]
   140014945:	lea    r9,[rip+0x44e]        # 0x140014d9a
   14001494c:	mov    edx,0x18
   140014951:	call   0x140014d24
   140014956:	test   sil,0x1
   14001495a:	je     0x140014965
   14001495c:	lea    rcx,[rbx-0x8]
   140014960:	call   0x140014638
   140014965:	lea    rax,[rbx-0x8]
   140014969:	jmp    0x140014981
   14001496b:	call   0x140014d9a
   140014970:	test   sil,0x1
   140014974:	je     0x14001497e
   140014976:	mov    rcx,rbx
   140014979:	call   0x140014638
   14001497e:	mov    rax,rbx
   140014981:	mov    rbx,QWORD PTR [rsp+0x30]
   140014986:	mov    rsi,QWORD PTR [rsp+0x38]
   14001498b:	add    rsp,0x20
   14001498f:	pop    rdi
   140014990:	ret    
   140014991:	int3   
   140014992:	jmp    QWORD PTR [rip+0x770]        # 0x140015108
   140014998:	jmp    QWORD PTR [rip+0x75a]        # 0x1400150f8
   14001499e:	int3   
   14001499f:	int3   
   1400149a0:	sub    rsp,0x28
   1400149a4:	mov    rax,QWORD PTR [rcx]
   1400149a7:	cmp    DWORD PTR [rax],0xe06d7363
   1400149ad:	jne    0x1400149da
   1400149af:	cmp    DWORD PTR [rax+0x18],0x4
   1400149b3:	jne    0x1400149da
   1400149b5:	mov    eax,DWORD PTR [rax+0x20]
   1400149b8:	cmp    eax,0x19930520
   1400149bd:	je     0x1400149d4
   1400149bf:	cmp    eax,0x19930521
   1400149c4:	je     0x1400149d4
   1400149c6:	cmp    eax,0x19930522
   1400149cb:	je     0x1400149d4
   1400149cd:	cmp    eax,0x1994000
   1400149d2:	jne    0x1400149da
   1400149d4:	call   0x140014d82
   1400149d9:	int3   
   1400149da:	xor    eax,eax
   1400149dc:	add    rsp,0x28
   1400149e0:	ret    
   1400149e1:	int3   
   1400149e2:	int3   
   1400149e3:	int3   
   1400149e4:	sub    rsp,0x28
   1400149e8:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x1400149a0
   1400149ef:	call   QWORD PTR [rip+0x62b]        # 0x140015020
   1400149f5:	xor    eax,eax
   1400149f7:	add    rsp,0x28
   1400149fb:	ret    
   1400149fc:	jmp    QWORD PTR [rip+0x6e6]        # 0x1400150e8
   140014a02:	int3   
   140014a03:	int3   
   140014a04:	rex push rbx
   140014a06:	sub    rsp,0x20
   140014a0a:	mov    rbx,rcx
   140014a0d:	mov    rcx,QWORD PTR [rip+0xfb74]        # 0x140024588
   140014a14:	call   QWORD PTR [rip+0x716]        # 0x140015130
   140014a1a:	mov    QWORD PTR [rsp+0x38],rax
   140014a1f:	cmp    rax,0xffffffffffffffff
   140014a23:	jne    0x140014a30
   140014a25:	mov    rcx,rbx
   140014a28:	call   QWORD PTR [rip+0x61a]        # 0x140015048
   140014a2e:	jmp    0x140014aae
   140014a30:	mov    ecx,0x8
   140014a35:	call   0x140014d94
   140014a3a:	nop
   140014a3b:	mov    rcx,QWORD PTR [rip+0xfb46]        # 0x140024588
   140014a42:	call   QWORD PTR [rip+0x6e8]        # 0x140015130
   140014a48:	mov    QWORD PTR [rsp+0x38],rax
   140014a4d:	mov    rcx,QWORD PTR [rip+0xfb2c]        # 0x140024580
   140014a54:	call   QWORD PTR [rip+0x6d6]        # 0x140015130
   140014a5a:	mov    QWORD PTR [rsp+0x40],rax
   140014a5f:	mov    rcx,rbx
   140014a62:	call   QWORD PTR [rip+0x610]        # 0x140015078
   140014a68:	mov    rcx,rax
   140014a6b:	lea    r8,[rsp+0x40]
   140014a70:	lea    rdx,[rsp+0x38]
   140014a75:	call   0x140014d8e
   140014a7a:	mov    rbx,rax
   140014a7d:	mov    rcx,QWORD PTR [rsp+0x38]
   140014a82:	call   QWORD PTR [rip+0x5f0]        # 0x140015078
   140014a88:	mov    QWORD PTR [rip+0xfaf9],rax        # 0x140024588
   140014a8f:	mov    rcx,QWORD PTR [rsp+0x40]
   140014a94:	call   QWORD PTR [rip+0x5de]        # 0x140015078
   140014a9a:	mov    QWORD PTR [rip+0xfadf],rax        # 0x140024580
   140014aa1:	mov    ecx,0x8
   140014aa6:	call   0x140014d88
   140014aab:	mov    rax,rbx
   140014aae:	add    rsp,0x20
   140014ab2:	pop    rbx
   140014ab3:	ret    
   140014ab4:	sub    rsp,0x28
   140014ab8:	call   0x140014a04
   140014abd:	neg    rax
   140014ac0:	sbb    eax,eax
   140014ac2:	neg    eax
   140014ac4:	dec    eax
   140014ac6:	add    rsp,0x28
   140014aca:	ret    
   140014acb:	int3   
   140014acc:	mov    QWORD PTR [rsp+0x8],rbx
   140014ad1:	push   rdi
   140014ad2:	sub    rsp,0x20
   140014ad6:	lea    rbx,[rip+0xb703]        # 0x1400201e0
   140014add:	lea    rdi,[rip+0xb6fc]        # 0x1400201e0
   140014ae4:	jmp    0x140014af4
   140014ae6:	mov    rax,QWORD PTR [rbx]
   140014ae9:	test   rax,rax
   140014aec:	je     0x140014af0
   140014aee:	call   rax
   140014af0:	add    rbx,0x8
   140014af4:	cmp    rbx,rdi
   140014af7:	jb     0x140014ae6
   140014af9:	mov    rbx,QWORD PTR [rsp+0x30]
   140014afe:	add    rsp,0x20
   140014b02:	pop    rdi
   140014b03:	ret    
   140014b04:	mov    QWORD PTR [rsp+0x8],rbx
   140014b09:	push   rdi
   140014b0a:	sub    rsp,0x20
   140014b0e:	lea    rbx,[rip+0xb6db]        # 0x1400201f0
   140014b15:	lea    rdi,[rip+0xb6d4]        # 0x1400201f0
   140014b1c:	jmp    0x140014b2c
   140014b1e:	mov    rax,QWORD PTR [rbx]
   140014b21:	test   rax,rax
   140014b24:	je     0x140014b28
   140014b26:	call   rax
   140014b28:	add    rbx,0x8
   140014b2c:	cmp    rbx,rdi
   140014b2f:	jb     0x140014b1e
   140014b31:	mov    rbx,QWORD PTR [rsp+0x30]
   140014b36:	add    rsp,0x20
   140014b3a:	pop    rdi
   140014b3b:	ret    
   140014b3c:	jmp    QWORD PTR [rip+0x596]        # 0x1400150d8
   140014b42:	jmp    QWORD PTR [rip+0x588]        # 0x1400150d0
   140014b48:	int3   
   140014b49:	int3   
   140014b4a:	int3   
   140014b4b:	int3   
   140014b4c:	int3   
   140014b4d:	int3   
   140014b4e:	int3   
   140014b4f:	int3   
   140014b50:	mov    rax,rcx
   140014b53:	mov    ecx,0x5a4d
   140014b58:	cmp    WORD PTR [rax],cx
   140014b5b:	je     0x140014b60
   140014b5d:	xor    eax,eax
   140014b5f:	ret    
   140014b60:	movsxd rcx,DWORD PTR [rax+0x3c]
   140014b64:	add    rcx,rax
   140014b67:	xor    eax,eax
   140014b69:	cmp    DWORD PTR [rcx],0x4550
   140014b6f:	jne    0x140014b7d
   140014b71:	mov    edx,0x20b
   140014b76:	cmp    WORD PTR [rcx+0x18],dx
   140014b7a:	sete   al
   140014b7d:	repz ret 
   140014b7f:	int3   
   140014b80:	movsxd r8,DWORD PTR [rcx+0x3c]
   140014b84:	xor    r9d,r9d
   140014b87:	mov    r10,rdx
   140014b8a:	add    r8,rcx
   140014b8d:	movzx  eax,WORD PTR [r8+0x14]
   140014b92:	movzx  r11d,WORD PTR [r8+0x6]
   140014b97:	lea    rcx,[rax+r8*1+0x18]
   140014b9c:	test   r11d,r11d
   140014b9f:	je     0x140014bbf
   140014ba1:	mov    edx,DWORD PTR [rcx+0xc]
   140014ba4:	cmp    r10,rdx
   140014ba7:	jb     0x140014bb3
   140014ba9:	mov    eax,DWORD PTR [rcx+0x8]
   140014bac:	add    eax,edx
   140014bae:	cmp    r10,rax
   140014bb1:	jb     0x140014bc2
   140014bb3:	inc    r9d
   140014bb6:	add    rcx,0x28
   140014bba:	cmp    r9d,r11d
   140014bbd:	jb     0x140014ba1
   140014bbf:	xor    eax,eax
   140014bc1:	ret    
   140014bc2:	mov    rax,rcx
   140014bc5:	ret    
   140014bc6:	int3   
   140014bc7:	int3   
   140014bc8:	int3   
   140014bc9:	int3   
   140014bca:	int3   
   140014bcb:	int3   
   140014bcc:	int3   
   140014bcd:	int3   
   140014bce:	int3   
   140014bcf:	int3   
   140014bd0:	sub    rsp,0x28
   140014bd4:	mov    r8,rcx
   140014bd7:	lea    r9,[rip+0xfffffffffffeb422]        # 0x140000000
   140014bde:	mov    rcx,r9
   140014be1:	call   0x140014b50
   140014be6:	test   eax,eax
   140014be8:	je     0x140014c0c
   140014bea:	sub    r8,r9
   140014bed:	mov    rdx,r8
   140014bf0:	mov    rcx,r9
   140014bf3:	call   0x140014b80
   140014bf8:	test   rax,rax
   140014bfb:	je     0x140014c0c
   140014bfd:	mov    eax,DWORD PTR [rax+0x24]
   140014c00:	shr    eax,0x1f
   140014c03:	not    eax
   140014c05:	and    eax,0x1
   140014c08:	jmp    0x140014c0c
   140014c0a:	xor    eax,eax
   140014c0c:	add    rsp,0x28
   140014c10:	ret    
   140014c11:	int3   
   140014c12:	jmp    QWORD PTR [rip+0x490]        # 0x1400150a8
   140014c18:	jmp    QWORD PTR [rip+0x482]        # 0x1400150a0
   140014c1e:	int3   
   140014c1f:	int3   
   140014c20:	xor    eax,eax
   140014c22:	ret    
   140014c23:	int3   
   140014c24:	mov    QWORD PTR [rsp+0x18],rbx
   140014c29:	push   rdi
   140014c2a:	sub    rsp,0x20
   140014c2e:	mov    rax,QWORD PTR [rip+0xf8f3]        # 0x140024528
   140014c35:	and    QWORD PTR [rsp+0x30],0x0
   140014c3b:	movabs rdi,0x2b992ddfa232
   140014c45:	cmp    rax,rdi
   140014c48:	je     0x140014c56
   140014c4a:	not    rax
   140014c4d:	mov    QWORD PTR [rip+0xf8dc],rax        # 0x140024530
   140014c54:	jmp    0x140014ccc
   140014c56:	lea    rcx,[rsp+0x30]
   140014c5b:	call   QWORD PTR [rip+0x3cf]        # 0x140015030
   140014c61:	mov    rbx,QWORD PTR [rsp+0x30]
   140014c66:	call   QWORD PTR [rip+0x394]        # 0x140015000
   140014c6c:	mov    r11d,eax
   140014c6f:	xor    rbx,r11
   140014c72:	call   QWORD PTR [rip+0x390]        # 0x140015008
   140014c78:	mov    r11d,eax
   140014c7b:	xor    rbx,r11
   140014c7e:	call   QWORD PTR [rip+0x38c]        # 0x140015010
   140014c84:	lea    rcx,[rsp+0x38]
   140014c89:	mov    r11d,eax
   140014c8c:	xor    rbx,r11
   140014c8f:	call   QWORD PTR [rip+0x383]        # 0x140015018
   140014c95:	mov    r11,QWORD PTR [rsp+0x38]
   140014c9a:	xor    r11,rbx
   140014c9d:	movabs rax,0xffffffffffff
   140014ca7:	and    r11,rax
   140014caa:	movabs rax,0x2b992ddfa233
   140014cb4:	cmp    r11,rdi
   140014cb7:	cmove  r11,rax
   140014cbb:	mov    QWORD PTR [rip+0xf866],r11        # 0x140024528
   140014cc2:	not    r11
   140014cc5:	mov    QWORD PTR [rip+0xf864],r11        # 0x140024530
   140014ccc:	mov    rbx,QWORD PTR [rsp+0x40]
   140014cd1:	add    rsp,0x20
   140014cd5:	pop    rdi
   140014cd6:	ret    
   140014cd7:	int3   
   140014cd8:	mov    QWORD PTR [rsp+0x10],rbx
   140014cdd:	mov    DWORD PTR [rsp+0x18],r8d
   140014ce2:	mov    QWORD PTR [rsp+0x8],rcx
   140014ce7:	push   rsi
   140014ce8:	push   rdi
   140014ce9:	push   r12
   140014ceb:	sub    rsp,0x40
   140014cef:	mov    rsi,r9
   140014cf2:	mov    edi,r8d
   140014cf5:	mov    r12,rdx
   140014cf8:	mov    rbx,rcx
   140014cfb:	sub    edi,0x1
   140014cfe:	mov    DWORD PTR [rsp+0x70],edi
   140014d02:	js     0x140014d13
   140014d04:	sub    rbx,r12
   140014d07:	mov    QWORD PTR [rsp+0x60],rbx
   140014d0c:	mov    rcx,rbx
   140014d0f:	call   rsi
   140014d11:	jmp    0x140014cfb
   140014d13:	jmp    0x140014d15
   140014d15:	mov    rbx,QWORD PTR [rsp+0x68]
   140014d1a:	add    rsp,0x40
   140014d1e:	pop    r12
   140014d20:	pop    rdi
   140014d21:	pop    rsi
   140014d22:	ret    
   140014d23:	int3   
   140014d24:	mov    rax,rsp
   140014d27:	mov    QWORD PTR [rax+0x20],r9
   140014d2b:	mov    DWORD PTR [rax+0x18],r8d
   140014d2f:	mov    QWORD PTR [rax+0x10],rdx
   140014d33:	push   rbx
   140014d34:	push   rsi
   140014d35:	push   rdi
   140014d36:	push   r12
   140014d38:	sub    rsp,0x38
   140014d3c:	mov    r12,r9
   140014d3f:	movsxd rdi,r8d
   140014d42:	mov    rsi,rdx
   140014d45:	and    DWORD PTR [rax-0x38],0x0
   140014d49:	mov    rbx,rdi
   140014d4c:	imul   rbx,rdx
   140014d50:	add    rbx,rcx
   140014d53:	mov    QWORD PTR [rax+0x8],rbx
   140014d57:	sub    edi,0x1
   140014d5a:	mov    DWORD PTR [rsp+0x70],edi
   140014d5e:	js     0x140014d70
   140014d60:	sub    rbx,rsi
   140014d63:	mov    QWORD PTR [rsp+0x60],rbx
   140014d68:	mov    rcx,rbx
   140014d6b:	call   r12
   140014d6e:	jmp    0x140014d57
   140014d70:	mov    DWORD PTR [rsp+0x20],0x1
   140014d78:	add    rsp,0x38
   140014d7c:	pop    r12
   140014d7e:	pop    rdi
   140014d7f:	pop    rsi
   140014d80:	pop    rbx
   140014d81:	ret    
   140014d82:	jmp    QWORD PTR [rip+0x2e0]        # 0x140015068
   140014d88:	jmp    QWORD PTR [rip+0x2d2]        # 0x140015060
   140014d8e:	jmp    QWORD PTR [rip+0x2c4]        # 0x140015058
   140014d94:	jmp    QWORD PTR [rip+0x2b6]        # 0x140015050
   140014d9a:	jmp    QWORD PTR [rip+0x2a0]        # 0x140015040
   140014da0:	rex push rbp
   140014da2:	sub    rsp,0x20
   140014da6:	mov    rbp,rdx
   140014da9:	mov    rax,QWORD PTR [rcx]
   140014dac:	mov    rdx,rcx
   140014daf:	mov    ecx,DWORD PTR [rax]
   140014db1:	call   0x140014b42
   140014db6:	add    rsp,0x20
   140014dba:	pop    rbp
   140014dbb:	ret    
   140014dbc:	rex push rbp
   140014dbe:	sub    rsp,0x20
   140014dc2:	mov    rbp,rdx
   140014dc5:	mov    ecx,0x8
   140014dca:	call   0x140014d88
   140014dcf:	add    rsp,0x20
   140014dd3:	pop    rbp
   140014dd4:	ret    
   140014dd5:	int3   
   140014dd6:	int3   
   140014dd7:	int3   
   140014dd8:	int3   
   140014dd9:	int3   
   140014dda:	int3   
   140014ddb:	int3   
   140014ddc:	int3   
   140014ddd:	int3   
   140014dde:	int3   
   140014ddf:	int3   
   140014de0:	rex push rbp
   140014de2:	sub    rsp,0x20
   140014de6:	mov    rbp,rdx
   140014de9:	mov    rax,QWORD PTR [rcx]
   140014dec:	xor    ecx,ecx
   140014dee:	cmp    DWORD PTR [rax],0xc0000005
   140014df4:	sete   cl
   140014df7:	mov    eax,ecx
   140014df9:	mov    eax,ecx
   140014dfb:	add    rsp,0x20
   140014dff:	pop    rbp
   140014e00:	ret    
   140014e01:	rex push rbp
   140014e03:	sub    rsp,0x20
   140014e07:	mov    rbp,rdx
   140014e0a:	mov    QWORD PTR [rbp+0x38],rcx
   140014e0e:	mov    QWORD PTR [rbp+0x28],rcx
   140014e12:	mov    rax,QWORD PTR [rbp+0x28]
   140014e16:	mov    rcx,QWORD PTR [rax]
   140014e19:	mov    QWORD PTR [rbp+0x30],rcx
   140014e1d:	mov    rax,QWORD PTR [rbp+0x30]
   140014e21:	cmp    DWORD PTR [rax],0xe06d7363
   140014e27:	je     0x140014e35
   140014e29:	mov    DWORD PTR [rbp+0x20],0x0
   140014e30:	mov    eax,DWORD PTR [rbp+0x20]
   140014e33:	jmp    0x140014e3a
   140014e35:	call   0x140014d82
   140014e3a:	add    rsp,0x20
   140014e3e:	pop    rbp
   140014e3f:	ret    
   140014e40:	rex push rbp
   140014e42:	sub    rsp,0x20
   140014e46:	mov    rbp,rdx
   140014e49:	cmp    DWORD PTR [rbp+0x20],0x0
   140014e4d:	jne    0x140014e64
   140014e4f:	mov    r9,QWORD PTR [rbp+0x78]
   140014e53:	mov    r8d,DWORD PTR [rbp+0x70]
   140014e57:	mov    rdx,QWORD PTR [rbp+0x68]
   140014e5b:	mov    rcx,QWORD PTR [rbp+0x60]
   140014e5f:	call   0x140014cd8
   140014e64:	add    rsp,0x20
   140014e68:	pop    rbp
   140014e69:	ret    
