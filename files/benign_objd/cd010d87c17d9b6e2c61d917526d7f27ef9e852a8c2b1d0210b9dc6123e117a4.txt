
cd010d87c17d9b6e2c61d917526d7f27ef9e852a8c2b1d0210b9dc6123e117a4.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x10],rbx
   140001005:	mov    QWORD PTR [rsp+0x18],rbp
   14000100a:	push   rsi
   14000100b:	sub    rsp,0x20
   14000100f:	movsxd rax,DWORD PTR [rdx+0xc]
   140001013:	mov    rbp,rdx
   140001016:	lea    rbx,[rdx+rax*8+0x10]
   14000101b:	movsxd rax,DWORD PTR [rdx+0x8]
   14000101f:	lea    rsi,[rdx+rax*8+0x10]
   140001024:	cmp    rsi,rbx
   140001027:	je     0x140001059
   140001029:	mov    QWORD PTR [rsp+0x30],rdi
   14000102e:	xchg   ax,ax
   140001030:	mov    rdi,QWORD PTR [rbx-0x8]
   140001034:	sub    rbx,0x8
   140001038:	test   rdi,rdi
   14000103b:	je     0x14000104f
   14000103d:	lea    rcx,[rdi+0x18]
   140001041:	call   QWORD PTR [rip+0x14371]        # 0x1400153b8
   140001047:	mov    rcx,rdi
   14000104a:	call   0x140014638
   14000104f:	cmp    rbx,rsi
   140001052:	jne    0x140001030
   140001054:	mov    rdi,QWORD PTR [rsp+0x30]
   140001059:	mov    rcx,rbp
   14000105c:	mov    rbx,QWORD PTR [rsp+0x38]
   140001061:	mov    rbp,QWORD PTR [rsp+0x40]
   140001066:	add    rsp,0x20
   14000106a:	pop    rsi
   14000106b:	rex.W jmp QWORD PTR [rip+0x14336]        # 0x1400153a8
   140001072:	int3   
   140001073:	int3   
   140001074:	int3   
   140001075:	int3   
   140001076:	int3   
   140001077:	int3   
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	cmp    rdx,r8
   140001083:	je     0x14000110e
   140001089:	mov    QWORD PTR [rsp+0x10],rbp
   14000108e:	mov    QWORD PTR [rsp+0x18],rsi
   140001093:	push   rdi
   140001094:	sub    rsp,0x20
   140001098:	mov    rsi,r9
   14000109b:	mov    rbp,r8
   14000109e:	mov    rdi,rdx
   1400010a1:	mov    QWORD PTR [rsp+0x30],rbx
   1400010a6:	mov    ecx,0x20
   1400010ab:	call   0x14001463e
   1400010b0:	mov    rbx,rax
   1400010b3:	test   rax,rax
   1400010b6:	je     0x1400010e8
   1400010b8:	mov    rdx,QWORD PTR [rsi]
   1400010bb:	add    rdx,0x18
   1400010bf:	mov    ecx,DWORD PTR [rdx-0x18]
   1400010c2:	mov    DWORD PTR [rax],ecx
   1400010c4:	mov    ecx,DWORD PTR [rdx-0x14]
   1400010c7:	mov    DWORD PTR [rax+0x4],ecx
   1400010ca:	mov    ecx,DWORD PTR [rdx-0x10]
   1400010cd:	mov    DWORD PTR [rax+0x8],ecx
   1400010d0:	mov    ecx,DWORD PTR [rdx-0xc]
   1400010d3:	mov    DWORD PTR [rax+0xc],ecx
   1400010d6:	mov    eax,DWORD PTR [rdx-0x8]
   1400010d9:	lea    rcx,[rbx+0x18]
   1400010dd:	mov    DWORD PTR [rbx+0x10],eax
   1400010e0:	call   QWORD PTR [rip+0x142e2]        # 0x1400153c8
   1400010e6:	jmp    0x1400010ea
   1400010e8:	xor    ebx,ebx
   1400010ea:	mov    QWORD PTR [rdi],rbx
   1400010ed:	add    rdi,0x8
   1400010f1:	add    rsi,0x8
   1400010f5:	cmp    rdi,rbp
   1400010f8:	jne    0x1400010a6
   1400010fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400010ff:	mov    rbp,QWORD PTR [rsp+0x38]
   140001104:	mov    rsi,QWORD PTR [rsp+0x40]
   140001109:	add    rsp,0x20
   14000110d:	pop    rdi
   14000110e:	repz ret 
   140001110:	mov    QWORD PTR [rsp+0x8],rbx
   140001115:	mov    QWORD PTR [rsp+0x18],rbp
   14000111a:	mov    DWORD PTR [rsp+0x10],edx
   14000111e:	push   rsi
   14000111f:	push   rdi
   140001120:	push   r12
   140001122:	push   r13
   140001124:	push   r14
   140001126:	sub    rsp,0x20
   14000112a:	mov    rdx,QWORD PTR [rcx]
   14000112d:	movsxd r13,r8d
   140001130:	mov    r12,rcx
   140001133:	movsxd rax,DWORD PTR [rdx+0x8]
   140001137:	mov    r8d,r13d
   14000113a:	lea    r14,[rdx+rax*8+0x10]
   14000113f:	lea    rdx,[rsp+0x58]
   140001144:	call   QWORD PTR [rip+0x1424e]        # 0x140015398
   14000114a:	mov    r10,QWORD PTR [r12]
   14000114e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140001153:	movsxd r9,DWORD PTR [r10+0x8]
   140001157:	mov    rsi,rax
   14000115a:	mov    rdi,r14
   14000115d:	add    rdx,r9
   140001160:	lea    rbx,[r10+r9*8+0x10]
   140001165:	lea    rbp,[r10+rdx*8+0x10]
   14000116a:	cmp    rbx,rbp
   14000116d:	je     0x14000118e
   14000116f:	nop
   140001170:	test   rbx,rbx
   140001173:	je     0x140001181
   140001175:	mov    rdx,rdi
   140001178:	mov    rcx,rbx
   14000117b:	call   QWORD PTR [rip+0x14247]        # 0x1400153c8
   140001181:	add    rbx,0x8
   140001185:	add    rdi,0x8
   140001189:	cmp    rbx,rbp
   14000118c:	jne    0x140001170
   14000118e:	mov    r8,QWORD PTR [r12]
   140001192:	movsxd rdx,DWORD PTR [rsp+0x58]
   140001197:	movsxd rcx,DWORD PTR [r8+0x8]
   14000119b:	movsxd rax,DWORD PTR [r8+0xc]
   14000119f:	lea    rdi,[r14+rdx*8]
   1400011a3:	add    rcx,rdx
   1400011a6:	lea    rbp,[r8+rax*8+0x10]
   1400011ab:	add    rcx,r13
   1400011ae:	lea    rbx,[r8+rcx*8+0x10]
   1400011b3:	cmp    rbx,rbp
   1400011b6:	je     0x1400011d6
   1400011b8:	test   rbx,rbx
   1400011bb:	je     0x1400011c9
   1400011bd:	mov    rdx,rdi
   1400011c0:	mov    rcx,rbx
   1400011c3:	call   QWORD PTR [rip+0x141ff]        # 0x1400153c8
   1400011c9:	add    rbx,0x8
   1400011cd:	add    rdi,0x8
   1400011d1:	cmp    rbx,rbp
   1400011d4:	jne    0x1400011b8
   1400011d6:	mov    eax,DWORD PTR [rsi]
   1400011d8:	test   eax,eax
   1400011da:	je     0x1400011ec
   1400011dc:	cmp    eax,0xffffffff
   1400011df:	je     0x14000121e
   1400011e1:	lock add DWORD PTR [rsi],0xffffffff
   1400011e5:	setne  al
   1400011e8:	test   al,al
   1400011ea:	jne    0x14000121e
   1400011ec:	movsxd rax,DWORD PTR [rsi+0xc]
   1400011f0:	lea    rbx,[rsi+rax*8+0x10]
   1400011f5:	movsxd rax,DWORD PTR [rsi+0x8]
   1400011f9:	lea    rdi,[rsi+rax*8+0x10]
   1400011fe:	cmp    rdi,rbx
   140001201:	je     0x140001215
   140001203:	sub    rbx,0x8
   140001207:	mov    rcx,rbx
   14000120a:	call   QWORD PTR [rip+0x141a8]        # 0x1400153b8
   140001210:	cmp    rbx,rdi
   140001213:	jne    0x140001203
   140001215:	mov    rcx,rsi
   140001218:	call   QWORD PTR [rip+0x1418a]        # 0x1400153a8
   14000121e:	mov    rdx,QWORD PTR [r12]
   140001222:	movsxd rax,DWORD PTR [rsp+0x58]
   140001227:	mov    rbx,QWORD PTR [rsp+0x50]
   14000122c:	movsxd rcx,DWORD PTR [rdx+0x8]
   140001230:	mov    rbp,QWORD PTR [rsp+0x60]
   140001235:	add    rcx,rax
   140001238:	lea    rax,[rdx+rcx*8+0x10]
   14000123d:	add    rsp,0x20
   140001241:	pop    r14
   140001243:	pop    r13
   140001245:	pop    r12
   140001247:	pop    rdi
   140001248:	pop    rsi
   140001249:	ret    
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    QWORD PTR [rsp+0x8],rcx
   140001255:	push   rbx
   140001256:	push   rbp
   140001257:	push   rdi
   140001258:	sub    rsp,0x370
   14000125f:	movzx  ebx,dl
   140001262:	mov    rdi,rcx
   140001265:	mov    rdx,rcx
   140001268:	lea    rcx,[rsp+0x58]
   14000126d:	xor    ebp,ebp
   14000126f:	mov    DWORD PTR [rsp+0x3a0],ebp
   140001276:	call   QWORD PTR [rip+0x1405c]        # 0x1400152d8
   14000127c:	lea    edx,[rbp+0x1]
   14000127f:	lea    rcx,[rsp+0x58]
   140001284:	mov    DWORD PTR [rsp+0x3a8],0x1
   14000128f:	call   QWORD PTR [rip+0x1404b]        # 0x1400152e0
   140001295:	test   al,al
   140001297:	jne    0x14000132a
   14000129d:	lea    rcx,[rsp+0x58]
   1400012a2:	call   QWORD PTR [rip+0x14040]        # 0x1400152e8
   1400012a8:	lea    rcx,[rsp+0x1f0]
   1400012b0:	xor    r9d,r9d
   1400012b3:	xor    r8d,r8d
   1400012b6:	xor    edx,edx
   1400012b8:	mov    ebx,eax
   1400012ba:	call   QWORD PTR [rip+0x14030]        # 0x1400152f0
   1400012c0:	lea    rdx,[rsp+0xe8]
   1400012c8:	mov    rcx,rax
   1400012cb:	call   QWORD PTR [rip+0x14027]        # 0x1400152f8
   1400012d1:	lea    rdx,[rip+0x14158]        # 0x140015430
   1400012d8:	mov    rcx,rax
   1400012db:	call   QWORD PTR [rip+0x1401f]        # 0x140015300
   1400012e1:	mov    rdx,rdi
   1400012e4:	mov    rcx,rax
   1400012e7:	call   QWORD PTR [rip+0x1401b]        # 0x140015308
   1400012ed:	mov    edx,ebx
   1400012ef:	mov    rcx,QWORD PTR [rax]
   1400012f2:	mov    rdi,rax
   1400012f5:	call   QWORD PTR [rip+0x14015]        # 0x140015310
   1400012fb:	mov    rcx,rdi
   1400012fe:	call   QWORD PTR [rip+0x14014]        # 0x140015318
   140001304:	lea    rcx,[rsp+0xe8]
   14000130c:	call   QWORD PTR [rip+0x1400e]        # 0x140015320
   140001312:	lea    rcx,[rsp+0x58]
   140001317:	call   QWORD PTR [rip+0x1400b]        # 0x140015328
   14000131d:	xor    al,al
   14000131f:	add    rsp,0x370
   140001326:	pop    rdi
   140001327:	pop    rbp
   140001328:	pop    rbx
   140001329:	ret    
   14000132a:	lea    rdx,[rsp+0x98]
   140001332:	lea    rcx,[rsp+0x58]
   140001337:	mov    QWORD PTR [rsp+0x358],r14
   14000133f:	mov    QWORD PTR [rsp+0x350],r15
   140001347:	call   QWORD PTR [rip+0x13fe3]        # 0x140015330
   14000134d:	lea    rcx,[rsp+0x68]
   140001352:	mov    rdx,rax
   140001355:	call   QWORD PTR [rip+0x13fdd]        # 0x140015338
   14000135b:	lea    rcx,[rsp+0x98]
   140001363:	call   QWORD PTR [rip+0x13fd7]        # 0x140015340
   140001369:	lea    rcx,[rsp+0x58]
   14000136e:	call   QWORD PTR [rip+0x13fd4]        # 0x140015348
   140001374:	lea    rcx,[rsp+0x100]
   14000137c:	call   0x14000c6c0
   140001381:	lea    rdx,[rsp+0x100]
   140001389:	lea    rcx,[rsp+0x150]
   140001391:	call   0x14000d830
   140001396:	lea    rcx,[rsp+0x70]
   14000139b:	mov    rdx,rdi
   14000139e:	call   QWORD PTR [rip+0x13fac]        # 0x140015350
   1400013a4:	lea    rdx,[rip+0x14081]        # 0x14001542c
   1400013ab:	xor    eax,eax
   1400013ad:	mov    rdi,rdx
   1400013b0:	mov    QWORD PTR [rsp+0x88],rdx
   1400013b8:	or     r14,0xffffffffffffffff
   1400013bc:	mov    rcx,r14
   1400013bf:	lea    rdx,[rsp+0xc0]
   1400013c7:	repnz scas al,BYTE PTR es:[rdi]
   1400013c9:	not    rcx
   1400013cc:	dec    rcx
   1400013cf:	mov    DWORD PTR [rsp+0x80],ecx
   1400013d6:	lea    rcx,[rsp+0x70]
   1400013db:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   1400013e3:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   1400013ec:	call   QWORD PTR [rip+0x13f66]        # 0x140015358
   1400013f2:	lea    rdx,[rsp+0xa8]
   1400013fa:	mov    rcx,rax
   1400013fd:	call   QWORD PTR [rip+0x13f5d]        # 0x140015360
   140001403:	lea    rdx,[rsp+0xf0]
   14000140b:	mov    rcx,rax
   14000140e:	call   QWORD PTR [rip+0x13f54]        # 0x140015368
   140001414:	lea    rcx,[rsp+0xa8]
   14000141c:	movzx  edi,al
   14000141f:	call   QWORD PTR [rip+0x13f93]        # 0x1400153b8
   140001425:	lea    rcx,[rsp+0xc0]
   14000142d:	call   QWORD PTR [rip+0x13f85]        # 0x1400153b8
   140001433:	test   dil,dil
   140001436:	lea    r8d,[r14+0x2]
   14000143a:	lea    rdx,[rsp+0x68]
   14000143f:	lea    rcx,[rsp+0x150]
   140001447:	sete   r9b
   14000144b:	call   0x14000d920
   140001450:	lea    rdx,[rsp+0x100]
   140001458:	lea    rcx,[rsp+0x230]
   140001460:	call   0x140004aa0
   140001465:	test   dil,dil
   140001468:	je     0x140001488
   14000146a:	lea    edx,[r14+0x68]
   14000146e:	lea    rcx,[rsp+0x230]
   140001476:	call   0x140004c70
   14000147b:	movzx  r15d,al
   14000147f:	mov    BYTE PTR [rsp+0x3a0],al
   140001486:	jmp    0x1400014a4
   140001488:	lea    rcx,[rsp+0x230]
   140001490:	mov    edx,0x62
   140001495:	call   0x140004c70
   14000149a:	mov    r15b,al
   14000149d:	mov    BYTE PTR [rsp+0x3a0],al
   1400014a4:	test   r15b,r15b
   1400014a7:	jne    0x140001b0d
   1400014ad:	test   bl,bl
   1400014af:	jne    0x140001b0d
   1400014b5:	mov    rdi,QWORD PTR [rsp+0x348]
   1400014bd:	mov    QWORD PTR [rsp+0x398],rsi
   1400014c5:	mov    QWORD PTR [rsp+0x368],r12
   1400014cd:	mov    QWORD PTR [rsp+0x30],rdi
   1400014d2:	mov    eax,DWORD PTR [rdi]
   1400014d4:	mov    QWORD PTR [rsp+0x360],r13
   1400014dc:	test   eax,eax
   1400014de:	je     0x1400014f7
   1400014e0:	cmp    eax,0xffffffff
   1400014e3:	je     0x14000158c
   1400014e9:	lock add DWORD PTR [rdi],0x1
   1400014ed:	mov    rdi,QWORD PTR [rsp+0x30]
   1400014f2:	jmp    0x14000158c
   1400014f7:	mov    edx,DWORD PTR [rdi+0x4]
   1400014fa:	lea    rcx,[rsp+0x30]
   1400014ff:	call   QWORD PTR [rip+0x13e9b]        # 0x1400153a0
   140001505:	mov    rdi,QWORD PTR [rsp+0x30]
   14000150a:	mov    rcx,QWORD PTR [rsp+0x348]
   140001512:	movsxd rax,DWORD PTR [rdi+0xc]
   140001516:	lea    r12,[rdi+rax*8+0x10]
   14000151b:	movsxd rax,DWORD PTR [rcx+0x8]
   14000151f:	lea    rsi,[rcx+rax*8+0x10]
   140001524:	movsxd rax,DWORD PTR [rdi+0x8]
   140001528:	lea    rbx,[rdi+rax*8+0x10]
   14000152d:	cmp    rbx,r12
   140001530:	je     0x14000158c
   140001532:	mov    ecx,0x20
   140001537:	call   0x14001463e
   14000153c:	mov    rdi,rax
   14000153f:	test   rax,rax
   140001542:	je     0x140001574
   140001544:	mov    rdx,QWORD PTR [rsi]
   140001547:	add    rdx,0x18
   14000154b:	mov    ecx,DWORD PTR [rdx-0x18]
   14000154e:	mov    DWORD PTR [rax],ecx
   140001550:	mov    ecx,DWORD PTR [rdx-0x14]
   140001553:	mov    DWORD PTR [rax+0x4],ecx
   140001556:	mov    ecx,DWORD PTR [rdx-0x10]
   140001559:	mov    DWORD PTR [rax+0x8],ecx
   14000155c:	mov    ecx,DWORD PTR [rdx-0xc]
   14000155f:	mov    DWORD PTR [rax+0xc],ecx
   140001562:	mov    eax,DWORD PTR [rdx-0x8]
   140001565:	lea    rcx,[rdi+0x18]
   140001569:	mov    DWORD PTR [rdi+0x10],eax
   14000156c:	call   QWORD PTR [rip+0x13e56]        # 0x1400153c8
   140001572:	jmp    0x140001577
   140001574:	mov    rdi,rbp
   140001577:	mov    QWORD PTR [rbx],rdi
   14000157a:	add    rbx,0x8
   14000157e:	add    rsi,0x8
   140001582:	cmp    rbx,r12
   140001585:	jne    0x140001532
   140001587:	mov    rdi,QWORD PTR [rsp+0x30]
   14000158c:	mov    rdx,rdi
   14000158f:	mov    QWORD PTR [rsp+0x38],rdx
   140001594:	mov    eax,DWORD PTR [rdi]
   140001596:	test   eax,eax
   140001598:	je     0x1400015b6
   14000159a:	cmp    eax,0xffffffff
   14000159d:	je     0x14000164f
   1400015a3:	lock add DWORD PTR [rdi],0x1
   1400015a7:	mov    rdi,QWORD PTR [rsp+0x30]
   1400015ac:	mov    rdx,QWORD PTR [rsp+0x38]
   1400015b1:	jmp    0x14000164f
   1400015b6:	mov    edx,DWORD PTR [rdi+0x4]
   1400015b9:	lea    rcx,[rsp+0x38]
   1400015be:	call   QWORD PTR [rip+0x13ddc]        # 0x1400153a0
   1400015c4:	mov    rdx,QWORD PTR [rsp+0x38]
   1400015c9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400015ce:	movsxd rax,DWORD PTR [rdx+0xc]
   1400015d2:	lea    r12,[rdx+rax*8+0x10]
   1400015d7:	movsxd rax,DWORD PTR [rdi+0x8]
   1400015db:	lea    rsi,[rdi+rax*8+0x10]
   1400015e0:	movsxd rax,DWORD PTR [rdx+0x8]
   1400015e4:	lea    rbx,[rdx+rax*8+0x10]
   1400015e9:	cmp    rbx,r12
   1400015ec:	je     0x14000164f
   1400015ee:	xchg   ax,ax
   1400015f0:	mov    ecx,0x20
   1400015f5:	call   0x14001463e
   1400015fa:	mov    rdi,rax
   1400015fd:	test   rax,rax
   140001600:	je     0x140001632
   140001602:	mov    rdx,QWORD PTR [rsi]
   140001605:	add    rdx,0x18
   140001609:	mov    ecx,DWORD PTR [rdx-0x18]
   14000160c:	mov    DWORD PTR [rax],ecx
   14000160e:	mov    ecx,DWORD PTR [rdx-0x14]
   140001611:	mov    DWORD PTR [rax+0x4],ecx
   140001614:	mov    ecx,DWORD PTR [rdx-0x10]
   140001617:	mov    DWORD PTR [rax+0x8],ecx
   14000161a:	mov    ecx,DWORD PTR [rdx-0xc]
   14000161d:	mov    DWORD PTR [rax+0xc],ecx
   140001620:	mov    eax,DWORD PTR [rdx-0x8]
   140001623:	lea    rcx,[rdi+0x18]
   140001627:	mov    DWORD PTR [rdi+0x10],eax
   14000162a:	call   QWORD PTR [rip+0x13d98]        # 0x1400153c8
   140001630:	jmp    0x140001635
   140001632:	mov    rdi,rbp
   140001635:	mov    QWORD PTR [rbx],rdi
   140001638:	add    rbx,0x8
   14000163c:	add    rsi,0x8
   140001640:	cmp    rbx,r12
   140001643:	jne    0x1400015f0
   140001645:	mov    rdi,QWORD PTR [rsp+0x30]
   14000164a:	mov    rdx,QWORD PTR [rsp+0x38]
   14000164f:	mov    DWORD PTR [rsp+0x40],ebp
   140001653:	movsxd rax,DWORD PTR [rdx+0x8]
   140001657:	lea    rcx,[rdx+rax*8+0x10]
   14000165c:	mov    QWORD PTR [rsp+0x48],rcx
   140001661:	movsxd rax,DWORD PTR [rdx+0xc]
   140001665:	lea    rcx,[rdx+rax*8+0x10]
   14000166a:	mov    QWORD PTR [rsp+0x50],rcx
   14000166f:	mov    eax,DWORD PTR [rdi]
   140001671:	test   eax,eax
   140001673:	je     0x140001690
   140001675:	cmp    eax,0xffffffff
   140001678:	je     0x1400016e0
   14000167a:	mov    eax,r14d
   14000167d:	lock xadd DWORD PTR [rdi],eax
   140001681:	add    eax,0xffffffff
   140001684:	setne  al
   140001687:	test   al,al
   140001689:	jne    0x1400016e0
   14000168b:	mov    rdi,QWORD PTR [rsp+0x30]
   140001690:	movsxd rax,DWORD PTR [rdi+0xc]
   140001694:	lea    rbx,[rdi+rax*8+0x10]
   140001699:	movsxd rax,DWORD PTR [rdi+0x8]
   14000169d:	lea    r12,[rdi+rax*8+0x10]
   1400016a2:	cmp    r12,rbx
   1400016a5:	je     0x1400016d4
   1400016a7:	nop    WORD PTR [rax+rax*1+0x0]
   1400016b0:	mov    rsi,QWORD PTR [rbx-0x8]
   1400016b4:	sub    rbx,0x8
   1400016b8:	test   rsi,rsi
   1400016bb:	je     0x1400016cf
   1400016bd:	lea    rcx,[rsi+0x18]
   1400016c1:	call   QWORD PTR [rip+0x13cf1]        # 0x1400153b8
   1400016c7:	mov    rcx,rsi
   1400016ca:	call   0x140014638
   1400016cf:	cmp    rbx,r12
   1400016d2:	jne    0x1400016b0
   1400016d4:	mov    rcx,rdi
   1400016d7:	call   QWORD PTR [rip+0x13ccb]        # 0x1400153a8
   1400016dd:	nop    DWORD PTR [rax]
   1400016e0:	mov    eax,DWORD PTR [rsp+0x40]
   1400016e4:	inc    DWORD PTR [rsp+0x40]
   1400016e8:	test   eax,eax
   1400016ea:	jne    0x1400016fd
   1400016ec:	mov    rax,QWORD PTR [rsp+0x50]
   1400016f1:	cmp    QWORD PTR [rsp+0x48],rax
   1400016f6:	je     0x1400016fd
   1400016f8:	mov    r13b,0x1
   1400016fb:	jmp    0x140001700
   1400016fd:	xor    r13b,r13b
   140001700:	test   bpl,0x2
   140001704:	je     0x14000177d
   140001706:	mov    rsi,QWORD PTR [rsp+0xa0]
   14000170e:	and    ebp,0xfffffffd
   140001711:	mov    eax,DWORD PTR [rsi]
   140001713:	test   eax,eax
   140001715:	je     0x140001735
   140001717:	cmp    eax,0xffffffff
   14000171a:	je     0x14000177d
   14000171c:	mov    eax,r14d
   14000171f:	lock xadd DWORD PTR [rsi],eax
   140001723:	add    eax,0xffffffff
   140001726:	setne  al
   140001729:	test   al,al
   14000172b:	jne    0x14000177d
   14000172d:	mov    rsi,QWORD PTR [rsp+0xa0]
   140001735:	movsxd rax,DWORD PTR [rsi+0xc]
   140001739:	lea    rdi,[rsi+rax*8+0x10]
   14000173e:	movsxd rax,DWORD PTR [rsi+0x8]
   140001742:	lea    r12,[rsi+rax*8+0x10]
   140001747:	cmp    r12,rdi
   14000174a:	je     0x140001774
   14000174c:	nop    DWORD PTR [rax+0x0]
   140001750:	mov    rbx,QWORD PTR [rdi-0x8]
   140001754:	sub    rdi,0x8
   140001758:	test   rbx,rbx
   14000175b:	je     0x14000176f
   14000175d:	lea    rcx,[rbx+0x18]
   140001761:	call   QWORD PTR [rip+0x13c51]        # 0x1400153b8
   140001767:	mov    rcx,rbx
   14000176a:	call   0x140014638
   14000176f:	cmp    rdi,r12
   140001772:	jne    0x140001750
   140001774:	mov    rcx,rsi
   140001777:	call   QWORD PTR [rip+0x13c2b]        # 0x1400153a8
   14000177d:	test   r13b,r13b
   140001780:	je     0x140001a82
   140001786:	mov    rax,QWORD PTR [rsp+0x48]
   14000178b:	mov    r15,QWORD PTR [rax]
   14000178e:	test   bpl,0x4
   140001792:	je     0x140001810
   140001794:	mov    rsi,QWORD PTR [rsp+0xc8]
   14000179c:	and    ebp,0xfffffffb
   14000179f:	mov    eax,DWORD PTR [rsi]
   1400017a1:	test   eax,eax
   1400017a3:	je     0x1400017c3
   1400017a5:	cmp    eax,0xffffffff
   1400017a8:	je     0x140001810
   1400017aa:	mov    eax,r14d
   1400017ad:	lock xadd DWORD PTR [rsi],eax
   1400017b1:	add    eax,0xffffffff
   1400017b4:	setne  al
   1400017b7:	test   al,al
   1400017b9:	jne    0x140001810
   1400017bb:	mov    rsi,QWORD PTR [rsp+0xc8]
   1400017c3:	movsxd rax,DWORD PTR [rsi+0xc]
   1400017c7:	lea    rdi,[rsi+rax*8+0x10]
   1400017cc:	movsxd rax,DWORD PTR [rsi+0x8]
   1400017d0:	lea    r12,[rsi+rax*8+0x10]
   1400017d5:	cmp    r12,rdi
   1400017d8:	je     0x140001804
   1400017da:	nop    WORD PTR [rax+rax*1+0x0]
   1400017e0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400017e4:	sub    rdi,0x8
   1400017e8:	test   rbx,rbx
   1400017eb:	je     0x1400017ff
   1400017ed:	lea    rcx,[rbx+0x18]
   1400017f1:	call   QWORD PTR [rip+0x13bc1]        # 0x1400153b8
   1400017f7:	mov    rcx,rbx
   1400017fa:	call   0x140014638
   1400017ff:	cmp    rdi,r12
   140001802:	jne    0x1400017e0
   140001804:	mov    rcx,rsi
   140001807:	call   QWORD PTR [rip+0x13b9b]        # 0x1400153a8
   14000180d:	nop    DWORD PTR [rax]
   140001810:	mov    r13d,DWORD PTR [rsp+0x40]
   140001815:	test   bpl,0x10
   140001819:	je     0x14000188e
   14000181b:	mov    rsi,QWORD PTR [rsp+0xb0]
   140001823:	and    ebp,0xffffffef
   140001826:	mov    eax,DWORD PTR [rsi]
   140001828:	test   eax,eax
   14000182a:	je     0x140001842
   14000182c:	cmp    eax,0xffffffff
   14000182f:	je     0x14000188e
   140001831:	mov    eax,r14d
   140001834:	lock xadd DWORD PTR [rsi],eax
   140001838:	add    eax,0xffffffff
   14000183b:	setne  al
   14000183e:	test   al,al
   140001840:	jne    0x14000188e
   140001842:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000184a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000184e:	lea    rdi,[rsi+rax*8+0x10]
   140001853:	movsxd rax,DWORD PTR [rsi+0x8]
   140001857:	lea    r12,[rsi+rax*8+0x10]
   14000185c:	cmp    r12,rdi
   14000185f:	je     0x140001885
   140001861:	mov    rbx,QWORD PTR [rdi-0x8]
   140001865:	sub    rdi,0x8
   140001869:	test   rbx,rbx
   14000186c:	je     0x140001880
   14000186e:	lea    rcx,[rbx+0x18]
   140001872:	call   QWORD PTR [rip+0x13b40]        # 0x1400153b8
   140001878:	mov    rcx,rbx
   14000187b:	call   0x140014638
   140001880:	cmp    rdi,r12
   140001883:	jne    0x140001861
   140001885:	mov    rcx,rsi
   140001888:	call   QWORD PTR [rip+0x13b1a]        # 0x1400153a8
   14000188e:	test   r13d,r13d
   140001891:	je     0x1400019f2
   140001897:	lea    rdx,[r15+0x18]
   14000189b:	lea    rcx,[rsp+0xd0]
   1400018a3:	call   QWORD PTR [rip+0x13b1f]        # 0x1400153c8
   1400018a9:	lea    rdx,[rsp+0xe0]
   1400018b1:	mov    rcx,rax
   1400018b4:	call   QWORD PTR [rip+0x13ab6]        # 0x140015370
   1400018ba:	mov    rcx,rax
   1400018bd:	call   QWORD PTR [rip+0x13ab5]        # 0x140015378
   1400018c3:	mov    rdx,QWORD PTR [rsp+0x390]
   1400018cb:	lea    rcx,[rsp+0x90]
   1400018d3:	mov    rbx,rax
   1400018d6:	call   QWORD PTR [rip+0x13aec]        # 0x1400153c8
   1400018dc:	lea    rdx,[rsp+0xd8]
   1400018e4:	mov    rcx,rax
   1400018e7:	call   QWORD PTR [rip+0x13a83]        # 0x140015370
   1400018ed:	mov    rcx,rax
   1400018f0:	call   QWORD PTR [rip+0x13a82]        # 0x140015378
   1400018f6:	lea    rcx,[rsp+0x210]
   1400018fe:	xor    r9d,r9d
   140001901:	xor    r8d,r8d
   140001904:	xor    edx,edx
   140001906:	mov    rdi,rax
   140001909:	call   QWORD PTR [rip+0x139e1]        # 0x1400152f0
   14000190f:	mov    r9d,DWORD PTR [r15+0xc]
   140001913:	lea    rdx,[rip+0x13b06]        # 0x140015420
   14000191a:	mov    rcx,rax
   14000191d:	mov    r8,rdi
   140001920:	mov    QWORD PTR [rsp+0x20],rbx
   140001925:	call   QWORD PTR [rip+0x13a5d]        # 0x140015388
   14000192b:	lea    rcx,[rsp+0xd8]
   140001933:	call   QWORD PTR [rip+0x13a07]        # 0x140015340
   140001939:	lea    rcx,[rsp+0x90]
   140001941:	call   QWORD PTR [rip+0x13a71]        # 0x1400153b8
   140001947:	lea    rcx,[rsp+0xe0]
   14000194f:	call   QWORD PTR [rip+0x139eb]        # 0x140015340
   140001955:	lea    rcx,[rsp+0xd0]
   14000195d:	call   QWORD PTR [rip+0x13a55]        # 0x1400153b8
   140001963:	dec    DWORD PTR [rsp+0x40]
   140001967:	test   bpl,0x8
   14000196b:	je     0x140001810
   140001971:	mov    rsi,QWORD PTR [rsp+0xb8]
   140001979:	and    ebp,0xfffffff7
   14000197c:	mov    eax,DWORD PTR [rsi]
   14000197e:	test   eax,eax
   140001980:	je     0x1400019a0
   140001982:	cmp    eax,0xffffffff
   140001985:	je     0x140001810
   14000198b:	mov    eax,r14d
   14000198e:	lock xadd DWORD PTR [rsi],eax
   140001992:	add    eax,0xffffffff
   140001995:	setne  al
   140001998:	test   al,al
   14000199a:	jne    0x140001810
   1400019a0:	mov    rsi,QWORD PTR [rsp+0xb8]
   1400019a8:	movsxd rax,DWORD PTR [rsi+0xc]
   1400019ac:	lea    rdi,[rsi+rax*8+0x10]
   1400019b1:	movsxd rax,DWORD PTR [rsi+0x8]
   1400019b5:	lea    r12,[rsi+rax*8+0x10]
   1400019ba:	cmp    r12,rdi
   1400019bd:	je     0x1400019e4
   1400019bf:	nop
   1400019c0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400019c4:	sub    rdi,0x8
   1400019c8:	test   rbx,rbx
   1400019cb:	je     0x1400019df
   1400019cd:	lea    rcx,[rbx+0x18]
   1400019d1:	call   QWORD PTR [rip+0x139e1]        # 0x1400153b8
   1400019d7:	mov    rcx,rbx
   1400019da:	call   0x140014638
   1400019df:	cmp    rdi,r12
   1400019e2:	jne    0x1400019c0
   1400019e4:	mov    rcx,rsi
   1400019e7:	call   QWORD PTR [rip+0x139bb]        # 0x1400153a8
   1400019ed:	jmp    0x140001810
   1400019f2:	add    QWORD PTR [rsp+0x48],0x8
   1400019f8:	test   bpl,0x1
   1400019fc:	je     0x1400016e0
   140001a02:	mov    rsi,QWORD PTR [rsp+0x80]
   140001a0a:	and    ebp,0xfffffffe
   140001a0d:	mov    eax,DWORD PTR [rsi]
   140001a0f:	test   eax,eax
   140001a11:	je     0x140001a39
   140001a13:	cmp    eax,0xffffffff
   140001a16:	je     0x1400016e0
   140001a1c:	mov    eax,r14d
   140001a1f:	lock xadd DWORD PTR [rsi],eax
   140001a23:	add    eax,0xffffffff
   140001a26:	setne  al
   140001a29:	test   al,al
   140001a2b:	jne    0x1400016e0
   140001a31:	mov    rsi,QWORD PTR [rsp+0x80]
   140001a39:	movsxd rax,DWORD PTR [rsi+0xc]
   140001a3d:	lea    rdi,[rsi+rax*8+0x10]
   140001a42:	movsxd rax,DWORD PTR [rsi+0x8]
   140001a46:	lea    r12,[rsi+rax*8+0x10]
   140001a4b:	cmp    r12,rdi
   140001a4e:	je     0x140001a74
   140001a50:	mov    rbx,QWORD PTR [rdi-0x8]
   140001a54:	sub    rdi,0x8
   140001a58:	test   rbx,rbx
   140001a5b:	je     0x140001a6f
   140001a5d:	lea    rcx,[rbx+0x18]
   140001a61:	call   QWORD PTR [rip+0x13951]        # 0x1400153b8
   140001a67:	mov    rcx,rbx
   140001a6a:	call   0x140014638
   140001a6f:	cmp    rdi,r12
   140001a72:	jne    0x140001a50
   140001a74:	mov    rcx,rsi
   140001a77:	call   QWORD PTR [rip+0x1392b]        # 0x1400153a8
   140001a7d:	jmp    0x1400016e0
   140001a82:	mov    rsi,QWORD PTR [rsp+0x38]
   140001a87:	mov    r13,QWORD PTR [rsp+0x360]
   140001a8f:	mov    r12,QWORD PTR [rsp+0x368]
   140001a97:	mov    eax,DWORD PTR [rsi]
   140001a99:	test   eax,eax
   140001a9b:	je     0x140001ab7
   140001a9d:	cmp    eax,0xffffffff
   140001aa0:	je     0x140001afd
   140001aa2:	lock xadd DWORD PTR [rsi],r14d
   140001aa7:	add    r14d,0xffffffff
   140001aab:	setne  al
   140001aae:	test   al,al
   140001ab0:	jne    0x140001afd
   140001ab2:	mov    rsi,QWORD PTR [rsp+0x38]
   140001ab7:	movsxd rax,DWORD PTR [rsi+0xc]
   140001abb:	lea    rdi,[rsi+rax*8+0x10]
   140001ac0:	movsxd rax,DWORD PTR [rsi+0x8]
   140001ac4:	lea    rbp,[rsi+rax*8+0x10]
   140001ac9:	cmp    rbp,rdi
   140001acc:	je     0x140001af4
   140001ace:	xchg   ax,ax
   140001ad0:	mov    rbx,QWORD PTR [rdi-0x8]
   140001ad4:	sub    rdi,0x8
   140001ad8:	test   rbx,rbx
   140001adb:	je     0x140001aef
   140001add:	lea    rcx,[rbx+0x18]
   140001ae1:	call   QWORD PTR [rip+0x138d1]        # 0x1400153b8
   140001ae7:	mov    rcx,rbx
   140001aea:	call   0x140014638
   140001aef:	cmp    rdi,rbp
   140001af2:	jne    0x140001ad0
   140001af4:	mov    rcx,rsi
   140001af7:	call   QWORD PTR [rip+0x138ab]        # 0x1400153a8
   140001afd:	mov    r15b,BYTE PTR [rsp+0x3a0]
   140001b05:	mov    rsi,QWORD PTR [rsp+0x398]
   140001b0d:	lea    rcx,[rsp+0x230]
   140001b15:	call   0x140004ba0
   140001b1a:	lea    rcx,[rsp+0x70]
   140001b1f:	call   QWORD PTR [rip+0x1385b]        # 0x140015380
   140001b25:	lea    rcx,[rsp+0x168]
   140001b2d:	call   QWORD PTR [rip+0x13885]        # 0x1400153b8
   140001b33:	lea    rcx,[rsp+0x160]
   140001b3b:	call   QWORD PTR [rip+0x13877]        # 0x1400153b8
   140001b41:	lea    rcx,[rsp+0x158]
   140001b49:	call   QWORD PTR [rip+0x13869]        # 0x1400153b8
   140001b4f:	lea    rcx,[rsp+0x100]
   140001b57:	call   0x14000c730
   140001b5c:	lea    rcx,[rsp+0x68]
   140001b61:	call   QWORD PTR [rip+0x13851]        # 0x1400153b8
   140001b67:	lea    rcx,[rsp+0x58]
   140001b6c:	call   QWORD PTR [rip+0x137b6]        # 0x140015328
   140001b72:	mov    r14,QWORD PTR [rsp+0x358]
   140001b7a:	mov    al,r15b
   140001b7d:	mov    r15,QWORD PTR [rsp+0x350]
   140001b85:	add    rsp,0x370
   140001b8c:	pop    rdi
   140001b8d:	pop    rbp
   140001b8e:	pop    rbx
   140001b8f:	ret    
   140001b90:	mov    DWORD PTR [rsp+0x8],ecx
   140001b94:	push   rbx
   140001b95:	push   rsi
   140001b96:	push   rdi
   140001b97:	push   r12
   140001b99:	push   r13
   140001b9b:	sub    rsp,0x190
   140001ba2:	mov    r8,rdx
   140001ba5:	lea    rcx,[rsp+0x128]
   140001bad:	lea    rdx,[rsp+0x1c0]
   140001bb5:	xor    esi,esi
   140001bb7:	mov    r9d,0x50602
   140001bbd:	mov    DWORD PTR [rsp+0x1d0],esi
   140001bc4:	call   QWORD PTR [rip+0x135be]        # 0x140015188
   140001bca:	xor    eax,eax
   140001bcc:	or     r12,0xffffffffffffffff
   140001bd0:	lea    rdi,[rip+0x138e1]        # 0x1400154b8
   140001bd7:	mov    rcx,r12
   140001bda:	repnz scas al,BYTE PTR es:[rdi]
   140001bdc:	not    rcx
   140001bdf:	lea    rdx,[rcx-0x1]
   140001be3:	lea    rcx,[rip+0x138ce]        # 0x1400154b8
   140001bea:	call   QWORD PTR [rip+0x13590]        # 0x140015180
   140001bf0:	lea    rcx,[rsp+0xa8]
   140001bf8:	mov    QWORD PTR [rsp+0xa8],rax
   140001c00:	call   QWORD PTR [rip+0x13572]        # 0x140015178
   140001c06:	lea    rcx,[rsp+0xa8]
   140001c0e:	call   QWORD PTR [rip+0x137a4]        # 0x1400153b8
   140001c14:	xor    eax,eax
   140001c16:	lea    rdi,[rip+0x13897]        # 0x1400154b4
   140001c1d:	mov    rcx,r12
   140001c20:	repnz scas al,BYTE PTR es:[rdi]
   140001c22:	not    rcx
   140001c25:	lea    rdx,[rcx-0x1]
   140001c29:	lea    rcx,[rip+0x13884]        # 0x1400154b4
   140001c30:	call   QWORD PTR [rip+0x1354a]        # 0x140015180
   140001c36:	lea    rcx,[rsp+0xa0]
   140001c3e:	mov    QWORD PTR [rsp+0xa0],rax
   140001c46:	call   QWORD PTR [rip+0x13524]        # 0x140015170
   140001c4c:	lea    rcx,[rsp+0xa0]
   140001c54:	call   QWORD PTR [rip+0x1375e]        # 0x1400153b8
   140001c5a:	lea    rcx,[rsp+0x1d8]
   140001c62:	call   QWORD PTR [rip+0x13500]        # 0x140015168
   140001c68:	lea    rdx,[rip+0x13831]        # 0x1400154a0
   140001c6f:	xor    eax,eax
   140001c71:	mov    rdi,rdx
   140001c74:	mov    QWORD PTR [rsp+0x78],rdx
   140001c79:	mov    rcx,r12
   140001c7c:	repnz scas al,BYTE PTR es:[rdi]
   140001c7e:	lea    rdx,[rsp+0x170]
   140001c86:	not    rcx
   140001c89:	dec    rcx
   140001c8c:	mov    DWORD PTR [rsp+0x70],ecx
   140001c90:	lea    rcx,[rsp+0xb0]
   140001c98:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140001c9d:	movdqa XMMWORD PTR [rsp+0x170],xmm0
   140001ca6:	call   QWORD PTR [rip+0x134b4]        # 0x140015160
   140001cac:	lea    rdx,[rsp+0xb0]
   140001cb4:	lea    rcx,[rsp+0x1d8]
   140001cbc:	call   QWORD PTR [rip+0x13496]        # 0x140015158
   140001cc2:	lea    rcx,[rsp+0xb0]
   140001cca:	call   QWORD PTR [rip+0x136e8]        # 0x1400153b8
   140001cd0:	lea    rdx,[rsp+0x118]
   140001cd8:	lea    rcx,[rsp+0x1d8]
   140001ce0:	call   QWORD PTR [rip+0x1346a]        # 0x140015150
   140001ce6:	lea    rcx,[rsp+0x118]
   140001cee:	call   QWORD PTR [rip+0x13454]        # 0x140015148
   140001cf4:	lea    rdx,[rsp+0xd8]
   140001cfc:	lea    rcx,[rsp+0x1d8]
   140001d04:	call   QWORD PTR [rip+0x13436]        # 0x140015140
   140001d0a:	lea    rcx,[rsp+0xd8]
   140001d12:	call   QWORD PTR [rip+0x13430]        # 0x140015148
   140001d18:	lea    rdx,[rip+0x13761]        # 0x140015480
   140001d1f:	xor    eax,eax
   140001d21:	mov    rdi,rdx
   140001d24:	mov    QWORD PTR [rsp+0x78],rdx
   140001d29:	mov    rcx,r12
   140001d2c:	repnz scas al,BYTE PTR es:[rdi]
   140001d2e:	lea    rdx,[rsp+0x160]
   140001d36:	not    rcx
   140001d39:	dec    rcx
   140001d3c:	mov    DWORD PTR [rsp+0x70],ecx
   140001d40:	lea    rcx,[rsp+0x80]
   140001d48:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140001d4d:	movdqa XMMWORD PTR [rsp+0x160],xmm0
   140001d56:	call   QWORD PTR [rip+0x13404]        # 0x140015160
   140001d5c:	xor    eax,eax
   140001d5e:	mov    rcx,r12
   140001d61:	lea    rdi,[rip+0x13710]        # 0x140015478
   140001d68:	repnz scas al,BYTE PTR es:[rdi]
   140001d6a:	not    rcx
   140001d6d:	lea    rdx,[rcx-0x1]
   140001d71:	lea    rcx,[rip+0x13700]        # 0x140015478
   140001d78:	call   QWORD PTR [rip+0x13402]        # 0x140015180
   140001d7e:	lea    rdi,[rip+0x136ef]        # 0x140015474
   140001d85:	mov    rcx,r12
   140001d88:	mov    QWORD PTR [rsp+0x58],rax
   140001d8d:	xor    eax,eax
   140001d8f:	repnz scas al,BYTE PTR es:[rdi]
   140001d91:	not    rcx
   140001d94:	lea    rdx,[rcx-0x1]
   140001d98:	lea    rcx,[rip+0x136d5]        # 0x140015474
   140001d9f:	call   QWORD PTR [rip+0x133db]        # 0x140015180
   140001da5:	mov    QWORD PTR [rsp+0x60],rax
   140001daa:	mov    rax,QWORD PTR [rip+0x135ff]        # 0x1400153b0
   140001db1:	mov    QWORD PTR [rsp+0x30],rax
   140001db6:	mov    ecx,DWORD PTR [rax]
   140001db8:	cmp    ecx,0x1
   140001dbb:	je     0x140001de9
   140001dbd:	test   ecx,ecx
   140001dbf:	je     0x140001de9
   140001dc1:	lea    r8d,[rsi+0x1]
   140001dc5:	lea    rcx,[rsp+0x30]
   140001dca:	mov    edx,0x7fffffff
   140001dcf:	call   0x140001110
   140001dd4:	test   rax,rax
   140001dd7:	je     0x140001e12
   140001dd9:	lea    rdx,[rsp+0x60]
   140001dde:	mov    rcx,rax
   140001de1:	call   QWORD PTR [rip+0x135e1]        # 0x1400153c8
   140001de7:	jmp    0x140001e12
   140001de9:	lea    rdx,[rsp+0x60]
   140001dee:	lea    rcx,[rsp+0xe8]
   140001df6:	call   QWORD PTR [rip+0x135cc]        # 0x1400153c8
   140001dfc:	lea    rcx,[rsp+0x30]
   140001e01:	call   QWORD PTR [rip+0x13589]        # 0x140015390
   140001e07:	mov    rcx,QWORD PTR [rsp+0xe8]
   140001e0f:	mov    QWORD PTR [rax],rcx
   140001e12:	mov    rax,QWORD PTR [rsp+0x30]
   140001e17:	mov    ecx,DWORD PTR [rax]
   140001e19:	cmp    ecx,0x1
   140001e1c:	je     0x140001e4c
   140001e1e:	test   ecx,ecx
   140001e20:	je     0x140001e4c
   140001e22:	lea    rcx,[rsp+0x30]
   140001e27:	mov    edx,0x7fffffff
   140001e2c:	mov    r8d,0x1
   140001e32:	call   0x140001110
   140001e37:	test   rax,rax
   140001e3a:	je     0x140001e75
   140001e3c:	lea    rdx,[rsp+0x58]
   140001e41:	mov    rcx,rax
   140001e44:	call   QWORD PTR [rip+0x1357e]        # 0x1400153c8
   140001e4a:	jmp    0x140001e75
   140001e4c:	lea    rdx,[rsp+0x58]
   140001e51:	lea    rcx,[rsp+0xd0]
   140001e59:	call   QWORD PTR [rip+0x13569]        # 0x1400153c8
   140001e5f:	lea    rcx,[rsp+0x30]
   140001e64:	call   QWORD PTR [rip+0x13526]        # 0x140015390
   140001e6a:	mov    rcx,QWORD PTR [rsp+0xd0]
   140001e72:	mov    QWORD PTR [rax],rcx
   140001e75:	lea    rcx,[rsp+0x100]
   140001e7d:	mov    QWORD PTR [rsp+0x1c8],rbp
   140001e85:	call   QWORD PTR [rip+0x13365]        # 0x1400151f0
   140001e8b:	lea    rcx,[rsp+0xe0]
   140001e93:	mov    rdi,rax
   140001e96:	call   QWORD PTR [rip+0x13354]        # 0x1400151f0
   140001e9c:	lea    r8,[rsp+0x80]
   140001ea4:	lea    rdx,[rsp+0x30]
   140001ea9:	lea    rcx,[rsp+0x68]
   140001eae:	mov    r9,rax
   140001eb1:	mov    QWORD PTR [rsp+0x20],rdi
   140001eb6:	call   QWORD PTR [rip+0x133d4]        # 0x140015290
   140001ebc:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ec1:	mov    eax,DWORD PTR [rbx]
   140001ec3:	test   eax,eax
   140001ec5:	je     0x140001ee2
   140001ec7:	cmp    eax,0xffffffff
   140001eca:	je     0x140001f1b
   140001ecc:	mov    eax,r12d
   140001ecf:	lock xadd DWORD PTR [rbx],eax
   140001ed3:	add    eax,0xffffffff
   140001ed6:	setne  al
   140001ed9:	test   al,al
   140001edb:	jne    0x140001f1b
   140001edd:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ee2:	movsxd rax,DWORD PTR [rbx+0xc]
   140001ee6:	lea    rdi,[rbx+rax*8+0x10]
   140001eeb:	movsxd rax,DWORD PTR [rbx+0x8]
   140001eef:	lea    rbp,[rbx+rax*8+0x10]
   140001ef4:	cmp    rbp,rdi
   140001ef7:	je     0x140001f12
   140001ef9:	nop    DWORD PTR [rax+0x0]
   140001f00:	sub    rdi,0x8
   140001f04:	mov    rcx,rdi
   140001f07:	call   QWORD PTR [rip+0x134ab]        # 0x1400153b8
   140001f0d:	cmp    rdi,rbp
   140001f10:	jne    0x140001f00
   140001f12:	mov    rcx,rbx
   140001f15:	call   QWORD PTR [rip+0x1348d]        # 0x1400153a8
   140001f1b:	lea    rcx,[rsp+0xe0]
   140001f23:	call   QWORD PTR [rip+0x1348f]        # 0x1400153b8
   140001f29:	lea    rcx,[rsp+0x100]
   140001f31:	call   QWORD PTR [rip+0x13481]        # 0x1400153b8
   140001f37:	lea    rcx,[rsp+0x60]
   140001f3c:	call   QWORD PTR [rip+0x13476]        # 0x1400153b8
   140001f42:	lea    rcx,[rsp+0x58]
   140001f47:	call   QWORD PTR [rip+0x1346b]        # 0x1400153b8
   140001f4d:	lea    rcx,[rsp+0x80]
   140001f55:	call   QWORD PTR [rip+0x1345d]        # 0x1400153b8
   140001f5b:	lea    rdx,[rsp+0x68]
   140001f60:	lea    rcx,[rsp+0x1d8]
   140001f68:	call   QWORD PTR [rip+0x1332a]        # 0x140015298
   140001f6e:	lea    rdx,[rip+0x134db]        # 0x140015450
   140001f75:	xor    eax,eax
   140001f77:	mov    rdi,rdx
   140001f7a:	mov    QWORD PTR [rsp+0xc8],rdx
   140001f82:	mov    rcx,r12
   140001f85:	repnz scas al,BYTE PTR es:[rdi]
   140001f87:	lea    rdx,[rsp+0x140]
   140001f8f:	not    rcx
   140001f92:	dec    rcx
   140001f95:	mov    DWORD PTR [rsp+0xc0],ecx
   140001f9c:	lea    rcx,[rsp+0xb8]
   140001fa4:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   140001fac:	movdqa XMMWORD PTR [rsp+0x140],xmm0
   140001fb5:	call   QWORD PTR [rip+0x131a5]        # 0x140015160
   140001fbb:	lea    rdx,[rip+0x13482]        # 0x140015444
   140001fc2:	mov    rdi,rdx
   140001fc5:	mov    QWORD PTR [rsp+0xc8],rdx
   140001fcd:	xor    eax,eax
   140001fcf:	mov    rcx,r12
   140001fd2:	lea    rdx,[rsp+0x150]
   140001fda:	repnz scas al,BYTE PTR es:[rdi]
   140001fdc:	not    rcx
   140001fdf:	dec    rcx
   140001fe2:	mov    DWORD PTR [rsp+0xc0],ecx
   140001fe9:	lea    rcx,[rsp+0x98]
   140001ff1:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   140001ff9:	movdqa XMMWORD PTR [rsp+0x150],xmm0
   140002002:	call   QWORD PTR [rip+0x13158]        # 0x140015160
   140002008:	lea    rcx,[rsp+0xf0]
   140002010:	call   QWORD PTR [rip+0x131da]        # 0x1400151f0
   140002016:	lea    r8,[rsp+0xb8]
   14000201e:	lea    rdx,[rsp+0x98]
   140002026:	lea    rcx,[rsp+0x1d8]
   14000202e:	mov    r9,rax
   140002031:	call   QWORD PTR [rip+0x13269]        # 0x1400152a0
   140002037:	lea    rcx,[rsp+0xf0]
   14000203f:	call   QWORD PTR [rip+0x13373]        # 0x1400153b8
   140002045:	lea    rcx,[rsp+0x98]
   14000204d:	call   QWORD PTR [rip+0x13365]        # 0x1400153b8
   140002053:	lea    rcx,[rsp+0xb8]
   14000205b:	call   QWORD PTR [rip+0x13357]        # 0x1400153b8
   140002061:	lea    rdx,[rsp+0x128]
   140002069:	lea    rcx,[rsp+0x1d8]
   140002071:	call   QWORD PTR [rip+0x13231]        # 0x1400152a8
   140002077:	lea    rdx,[rsp+0x88]
   14000207f:	lea    rcx,[rsp+0x1d8]
   140002087:	call   QWORD PTR [rip+0x13223]        # 0x1400152b0
   14000208d:	mov    rbx,QWORD PTR [rsp+0x88]
   140002095:	mov    rcx,QWORD PTR [rax]
   140002098:	mov    eax,DWORD PTR [rcx+0x8]
   14000209b:	cmp    DWORD PTR [rcx+0xc],eax
   14000209e:	mov    eax,DWORD PTR [rbx]
   1400020a0:	sete   r13b
   1400020a4:	test   eax,eax
   1400020a6:	je     0x1400020c6
   1400020a8:	cmp    eax,0xffffffff
   1400020ab:	je     0x1400020fb
   1400020ad:	mov    eax,r12d
   1400020b0:	lock xadd DWORD PTR [rbx],eax
   1400020b4:	add    eax,0xffffffff
   1400020b7:	setne  al
   1400020ba:	test   al,al
   1400020bc:	jne    0x1400020fb
   1400020be:	mov    rbx,QWORD PTR [rsp+0x88]
   1400020c6:	movsxd rax,DWORD PTR [rbx+0xc]
   1400020ca:	lea    rdi,[rbx+rax*8+0x10]
   1400020cf:	movsxd rax,DWORD PTR [rbx+0x8]
   1400020d3:	lea    rbp,[rbx+rax*8+0x10]
   1400020d8:	cmp    rbp,rdi
   1400020db:	je     0x1400020f2
   1400020dd:	nop    DWORD PTR [rax]
   1400020e0:	sub    rdi,0x8
   1400020e4:	mov    rcx,rdi
   1400020e7:	call   QWORD PTR [rip+0x132cb]        # 0x1400153b8
   1400020ed:	cmp    rdi,rbp
   1400020f0:	jne    0x1400020e0
   1400020f2:	mov    rcx,rbx
   1400020f5:	call   QWORD PTR [rip+0x132ad]        # 0x1400153a8
   1400020fb:	test   r13b,r13b
   1400020fe:	je     0x140002112
   140002100:	lea    rcx,[rsp+0x1d8]
   140002108:	mov    edx,r12d
   14000210b:	call   QWORD PTR [rip+0x131a7]        # 0x1400152b8
   140002111:	int3   
   140002112:	lea    rdx,[rsp+0x68]
   140002117:	lea    rcx,[rsp+0x1d8]
   14000211f:	mov    QWORD PTR [rsp+0x188],r14
   140002127:	mov    QWORD PTR [rsp+0x180],r15
   14000212f:	call   QWORD PTR [rip+0x1318b]        # 0x1400152c0
   140002135:	lea    rdx,[rsp+0x90]
   14000213d:	lea    rcx,[rsp+0x1d8]
   140002145:	mov    r14b,0x1
   140002148:	mov    BYTE PTR [rsp+0x1d0],al
   14000214f:	call   QWORD PTR [rip+0x1315b]        # 0x1400152b0
   140002155:	mov    rdi,rax
   140002158:	mov    rdx,QWORD PTR [rax]
   14000215b:	mov    QWORD PTR [rsp+0x38],rdx
   140002160:	mov    ecx,DWORD PTR [rdx]
   140002162:	test   ecx,ecx
   140002164:	je     0x140002176
   140002166:	cmp    ecx,0xffffffff
   140002169:	je     0x1400021d3
   14000216b:	lock add DWORD PTR [rdx],0x1
   14000216f:	mov    rdx,QWORD PTR [rsp+0x38]
   140002174:	jmp    0x1400021d3
   140002176:	mov    edx,DWORD PTR [rdx+0x4]
   140002179:	lea    rcx,[rsp+0x38]
   14000217e:	call   QWORD PTR [rip+0x1321c]        # 0x1400153a0
   140002184:	mov    rdx,QWORD PTR [rsp+0x38]
   140002189:	mov    rcx,QWORD PTR [rdi]
   14000218c:	movsxd rax,DWORD PTR [rdx+0xc]
   140002190:	lea    rbp,[rdx+rax*8+0x10]
   140002195:	movsxd rax,DWORD PTR [rcx+0x8]
   140002199:	lea    rbx,[rcx+rax*8+0x10]
   14000219e:	movsxd rax,DWORD PTR [rdx+0x8]
   1400021a2:	lea    rdi,[rdx+rax*8+0x10]
   1400021a7:	cmp    rdi,rbp
   1400021aa:	je     0x1400021d3
   1400021ac:	nop    DWORD PTR [rax+0x0]
   1400021b0:	test   rdi,rdi
   1400021b3:	je     0x1400021c1
   1400021b5:	mov    rdx,rbx
   1400021b8:	mov    rcx,rdi
   1400021bb:	call   QWORD PTR [rip+0x13207]        # 0x1400153c8
   1400021c1:	add    rdi,0x8
   1400021c5:	add    rbx,0x8
   1400021c9:	cmp    rdi,rbp
   1400021cc:	jne    0x1400021b0
   1400021ce:	mov    rdx,QWORD PTR [rsp+0x38]
   1400021d3:	mov    rbx,QWORD PTR [rsp+0x90]
   1400021db:	mov    DWORD PTR [rsp+0x40],esi
   1400021df:	movsxd rax,DWORD PTR [rdx+0x8]
   1400021e3:	lea    rcx,[rdx+rax*8+0x10]
   1400021e8:	mov    QWORD PTR [rsp+0x48],rcx
   1400021ed:	movsxd rax,DWORD PTR [rdx+0xc]
   1400021f1:	lea    rcx,[rdx+rax*8+0x10]
   1400021f6:	mov    QWORD PTR [rsp+0x50],rcx
   1400021fb:	mov    eax,DWORD PTR [rbx]
   1400021fd:	test   eax,eax
   1400021ff:	je     0x14000221f
   140002201:	cmp    eax,0xffffffff
   140002204:	je     0x140002260
   140002206:	mov    eax,r12d
   140002209:	lock xadd DWORD PTR [rbx],eax
   14000220d:	add    eax,0xffffffff
   140002210:	setne  al
   140002213:	test   al,al
   140002215:	jne    0x140002260
   140002217:	mov    rbx,QWORD PTR [rsp+0x90]
   14000221f:	movsxd rax,DWORD PTR [rbx+0xc]
   140002223:	lea    rdi,[rbx+rax*8+0x10]
   140002228:	movsxd rax,DWORD PTR [rbx+0x8]
   14000222c:	lea    rbp,[rbx+rax*8+0x10]
   140002231:	cmp    rbp,rdi
   140002234:	je     0x140002252
   140002236:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002240:	sub    rdi,0x8
   140002244:	mov    rcx,rdi
   140002247:	call   QWORD PTR [rip+0x1316b]        # 0x1400153b8
   14000224d:	cmp    rdi,rbp
   140002250:	jne    0x140002240
   140002252:	mov    rcx,rbx
   140002255:	call   QWORD PTR [rip+0x1314d]        # 0x1400153a8
   14000225b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002260:	mov    eax,DWORD PTR [rsp+0x40]
   140002264:	inc    DWORD PTR [rsp+0x40]
   140002268:	test   eax,eax
   14000226a:	jne    0x14000227d
   14000226c:	mov    rax,QWORD PTR [rsp+0x50]
   140002271:	cmp    QWORD PTR [rsp+0x48],rax
   140002276:	je     0x14000227d
   140002278:	mov    r13b,0x1
   14000227b:	jmp    0x140002280
   14000227d:	xor    r13b,r13b
   140002280:	test   sil,0x2
   140002284:	je     0x1400022eb
   140002286:	mov    rbx,QWORD PTR [rsp+0x110]
   14000228e:	and    esi,0xfffffffd
   140002291:	mov    eax,DWORD PTR [rbx]
   140002293:	test   eax,eax
   140002295:	je     0x1400022b5
   140002297:	cmp    eax,0xffffffff
   14000229a:	je     0x1400022eb
   14000229c:	mov    eax,r12d
   14000229f:	lock xadd DWORD PTR [rbx],eax
   1400022a3:	add    eax,0xffffffff
   1400022a6:	setne  al
   1400022a9:	test   al,al
   1400022ab:	jne    0x1400022eb
   1400022ad:	mov    rbx,QWORD PTR [rsp+0x110]
   1400022b5:	movsxd rax,DWORD PTR [rbx+0xc]
   1400022b9:	lea    rdi,[rbx+rax*8+0x10]
   1400022be:	movsxd rax,DWORD PTR [rbx+0x8]
   1400022c2:	lea    rbp,[rbx+rax*8+0x10]
   1400022c7:	cmp    rbp,rdi
   1400022ca:	je     0x1400022e2
   1400022cc:	nop    DWORD PTR [rax+0x0]
   1400022d0:	sub    rdi,0x8
   1400022d4:	mov    rcx,rdi
   1400022d7:	call   QWORD PTR [rip+0x130db]        # 0x1400153b8
   1400022dd:	cmp    rdi,rbp
   1400022e0:	jne    0x1400022d0
   1400022e2:	mov    rcx,rbx
   1400022e5:	call   QWORD PTR [rip+0x130bd]        # 0x1400153a8
   1400022eb:	test   r13b,r13b
   1400022ee:	je     0x140002500
   1400022f4:	mov    r15,QWORD PTR [rsp+0x48]
   1400022f9:	test   sil,0x4
   1400022fd:	je     0x140002370
   1400022ff:	mov    rbx,QWORD PTR [rsp+0x120]
   140002307:	and    esi,0xfffffffb
   14000230a:	mov    eax,DWORD PTR [rbx]
   14000230c:	test   eax,eax
   14000230e:	je     0x14000232e
   140002310:	cmp    eax,0xffffffff
   140002313:	je     0x140002370
   140002315:	mov    eax,r12d
   140002318:	lock xadd DWORD PTR [rbx],eax
   14000231c:	add    eax,0xffffffff
   14000231f:	setne  al
   140002322:	test   al,al
   140002324:	jne    0x140002370
   140002326:	mov    rbx,QWORD PTR [rsp+0x120]
   14000232e:	movsxd rax,DWORD PTR [rbx+0xc]
   140002332:	lea    rdi,[rbx+rax*8+0x10]
   140002337:	movsxd rax,DWORD PTR [rbx+0x8]
   14000233b:	lea    rbp,[rbx+rax*8+0x10]
   140002340:	cmp    rbp,rdi
   140002343:	je     0x140002362
   140002345:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002350:	sub    rdi,0x8
   140002354:	mov    rcx,rdi
   140002357:	call   QWORD PTR [rip+0x1305b]        # 0x1400153b8
   14000235d:	cmp    rdi,rbp
   140002360:	jne    0x140002350
   140002362:	mov    rcx,rbx
   140002365:	call   QWORD PTR [rip+0x1303d]        # 0x1400153a8
   14000236b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002370:	mov    r13d,DWORD PTR [rsp+0x40]
   140002375:	test   sil,0x10
   140002379:	je     0x1400023dc
   14000237b:	mov    rbx,QWORD PTR [rsp+0x108]
   140002383:	and    esi,0xffffffef
   140002386:	mov    eax,DWORD PTR [rbx]
   140002388:	test   eax,eax
   14000238a:	je     0x1400023a2
   14000238c:	cmp    eax,0xffffffff
   14000238f:	je     0x1400023dc
   140002391:	mov    eax,r12d
   140002394:	lock xadd DWORD PTR [rbx],eax
   140002398:	add    eax,0xffffffff
   14000239b:	setne  al
   14000239e:	test   al,al
   1400023a0:	jne    0x1400023dc
   1400023a2:	mov    rbx,QWORD PTR [rsp+0x108]
   1400023aa:	movsxd rax,DWORD PTR [rbx+0xc]
   1400023ae:	lea    rdi,[rbx+rax*8+0x10]
   1400023b3:	movsxd rax,DWORD PTR [rbx+0x8]
   1400023b7:	lea    rbp,[rbx+rax*8+0x10]
   1400023bc:	cmp    rbp,rdi
   1400023bf:	je     0x1400023d3
   1400023c1:	sub    rdi,0x8
   1400023c5:	mov    rcx,rdi
   1400023c8:	call   QWORD PTR [rip+0x12fea]        # 0x1400153b8
   1400023ce:	cmp    rdi,rbp
   1400023d1:	jne    0x1400023c1
   1400023d3:	mov    rcx,rbx
   1400023d6:	call   QWORD PTR [rip+0x12fcc]        # 0x1400153a8
   1400023dc:	test   r13d,r13d
   1400023df:	je     0x140002480
   1400023e5:	movzx  edx,BYTE PTR [rsp+0x1d0]
   1400023ed:	mov    rcx,r15
   1400023f0:	call   0x140001250
   1400023f5:	dec    DWORD PTR [rsp+0x40]
   1400023f9:	and    r14b,al
   1400023fc:	test   sil,0x8
   140002400:	je     0x140002370
   140002406:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000240e:	and    esi,0xfffffff7
   140002411:	mov    eax,DWORD PTR [rbx]
   140002413:	test   eax,eax
   140002415:	je     0x140002435
   140002417:	cmp    eax,0xffffffff
   14000241a:	je     0x140002370
   140002420:	mov    eax,r12d
   140002423:	lock xadd DWORD PTR [rbx],eax
   140002427:	add    eax,0xffffffff
   14000242a:	setne  al
   14000242d:	test   al,al
   14000242f:	jne    0x140002370
   140002435:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000243d:	movsxd rax,DWORD PTR [rbx+0xc]
   140002441:	lea    rdi,[rbx+rax*8+0x10]
   140002446:	movsxd rax,DWORD PTR [rbx+0x8]
   14000244a:	lea    rbp,[rbx+rax*8+0x10]
   14000244f:	cmp    rbp,rdi
   140002452:	je     0x140002472
   140002454:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002460:	sub    rdi,0x8
   140002464:	mov    rcx,rdi
   140002467:	call   QWORD PTR [rip+0x12f4b]        # 0x1400153b8
   14000246d:	cmp    rdi,rbp
   140002470:	jne    0x140002460
   140002472:	mov    rcx,rbx
   140002475:	call   QWORD PTR [rip+0x12f2d]        # 0x1400153a8
   14000247b:	jmp    0x140002370
   140002480:	add    QWORD PTR [rsp+0x48],0x8
   140002486:	test   sil,0x1
   14000248a:	je     0x140002260
   140002490:	mov    rbx,QWORD PTR [rsp+0x70]
   140002495:	and    esi,0xfffffffe
   140002498:	mov    eax,DWORD PTR [rbx]
   14000249a:	test   eax,eax
   14000249c:	je     0x1400024c1
   14000249e:	cmp    eax,0xffffffff
   1400024a1:	je     0x140002260
   1400024a7:	mov    eax,r12d
   1400024aa:	lock xadd DWORD PTR [rbx],eax
   1400024ae:	add    eax,0xffffffff
   1400024b1:	setne  al
   1400024b4:	test   al,al
   1400024b6:	jne    0x140002260
   1400024bc:	mov    rbx,QWORD PTR [rsp+0x70]
   1400024c1:	movsxd rax,DWORD PTR [rbx+0xc]
   1400024c5:	lea    rdi,[rbx+rax*8+0x10]
   1400024ca:	movsxd rax,DWORD PTR [rbx+0x8]
   1400024ce:	lea    rbp,[rbx+rax*8+0x10]
   1400024d3:	cmp    rbp,rdi
   1400024d6:	je     0x1400024f2
   1400024d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400024e0:	sub    rdi,0x8
   1400024e4:	mov    rcx,rdi
   1400024e7:	call   QWORD PTR [rip+0x12ecb]        # 0x1400153b8
   1400024ed:	cmp    rdi,rbp
   1400024f0:	jne    0x1400024e0
   1400024f2:	mov    rcx,rbx
   1400024f5:	call   QWORD PTR [rip+0x12ead]        # 0x1400153a8
   1400024fb:	jmp    0x140002260
   140002500:	mov    rbx,QWORD PTR [rsp+0x38]
   140002505:	mov    r15,QWORD PTR [rsp+0x180]
   14000250d:	mov    eax,DWORD PTR [rbx]
   14000250f:	test   eax,eax
   140002511:	je     0x14000252d
   140002513:	cmp    eax,0xffffffff
   140002516:	je     0x14000256b
   140002518:	lock xadd DWORD PTR [rbx],r12d
   14000251d:	add    r12d,0xffffffff
   140002521:	setne  al
   140002524:	test   al,al
   140002526:	jne    0x14000256b
   140002528:	mov    rbx,QWORD PTR [rsp+0x38]
   14000252d:	movsxd rax,DWORD PTR [rbx+0xc]
   140002531:	lea    rdi,[rbx+rax*8+0x10]
   140002536:	movsxd rax,DWORD PTR [rbx+0x8]
   14000253a:	lea    rsi,[rbx+rax*8+0x10]
   14000253f:	cmp    rsi,rdi
   140002542:	je     0x140002562
   140002544:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002550:	sub    rdi,0x8
   140002554:	mov    rcx,rdi
   140002557:	call   QWORD PTR [rip+0x12e5b]        # 0x1400153b8
   14000255d:	cmp    rdi,rsi
   140002560:	jne    0x140002550
   140002562:	mov    rcx,rbx
   140002565:	call   QWORD PTR [rip+0x12e3d]        # 0x1400153a8
   14000256b:	lea    rcx,[rsp+0x68]
   140002570:	call   QWORD PTR [rip+0x12bd2]        # 0x140015148
   140002576:	lea    rcx,[rsp+0x1d8]
   14000257e:	call   QWORD PTR [rip+0x12d44]        # 0x1400152c8
   140002584:	lea    rcx,[rsp+0x128]
   14000258c:	call   QWORD PTR [rip+0x12d3e]        # 0x1400152d0
   140002592:	mov    rbp,QWORD PTR [rsp+0x1c8]
   14000259a:	neg    r14b
   14000259d:	mov    r14,QWORD PTR [rsp+0x188]
   1400025a5:	sbb    eax,eax
   1400025a7:	neg    eax
   1400025a9:	dec    eax
   1400025ab:	add    rsp,0x190
   1400025b2:	pop    r13
   1400025b4:	pop    r12
   1400025b6:	pop    rdi
   1400025b7:	pop    rsi
   1400025b8:	pop    rbx
   1400025b9:	ret    
   1400025ba:	int3   
   1400025bb:	int3   
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400025ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400025cf:	push   rdi
   1400025d0:	sub    rsp,0x20
   1400025d4:	mov    eax,DWORD PTR [rcx+0x10]
   1400025d7:	inc    DWORD PTR [rcx+0x14]
   1400025da:	mov    rbp,rdx
   1400025dd:	mov    rbx,rcx
   1400025e0:	cmp    DWORD PTR [rcx+0x14],eax
   1400025e3:	jne    0x140002634
   1400025e5:	test   eax,eax
   1400025e7:	jne    0x1400025f2
   1400025e9:	mov    DWORD PTR [rcx+0x10],0x8
   1400025f0:	jmp    0x1400025f7
   1400025f2:	add    eax,eax
   1400025f4:	mov    DWORD PTR [rcx+0x10],eax
   1400025f7:	movsxd rdx,DWORD PTR [rcx+0x10]
   1400025fb:	mov    rcx,QWORD PTR [rcx+0x8]
   1400025ff:	shl    rdx,0x3
   140002603:	call   QWORD PTR [rip+0x12b07]        # 0x140015110
   140002609:	movsxd rdx,DWORD PTR [rbx+0x14]
   14000260d:	cmp    edx,DWORD PTR [rbx+0x10]
   140002610:	mov    QWORD PTR [rbx+0x8],rax
   140002614:	mov    rcx,rdx
   140002617:	jge    0x140002634
   140002619:	shl    rcx,0x3
   14000261d:	xor    r8d,r8d
   140002620:	mov    rax,QWORD PTR [rbx+0x8]
   140002624:	inc    edx
   140002626:	add    rcx,0x8
   14000262a:	mov    QWORD PTR [rcx+rax*1-0x8],r8
   14000262f:	cmp    edx,DWORD PTR [rbx+0x10]
   140002632:	jl     0x140002620
   140002634:	movsxd rdi,DWORD PTR [rbx+0x14]
   140002638:	mov    rsi,QWORD PTR [rbx+0x8]
   14000263c:	cmp    QWORD PTR [rsi+rdi*8],0x0
   140002641:	jne    0x140002652
   140002643:	mov    ecx,0x2000
   140002648:	call   QWORD PTR [rip+0x12aca]        # 0x140015118
   14000264e:	mov    QWORD PTR [rsi+rdi*8],rax
   140002652:	mov    rax,QWORD PTR [rsi+rdi*8]
   140002656:	mov    rsi,QWORD PTR [rsp+0x40]
   14000265b:	lea    rcx,[rax+0x2000]
   140002662:	mov    QWORD PTR [rbx+0x20],rcx
   140002666:	lea    rcx,[rax+rbp*1]
   14000266a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000266f:	mov    QWORD PTR [rbx+0x18],rcx
   140002673:	mov    rbx,QWORD PTR [rsp+0x30]
   140002678:	add    rsp,0x20
   14000267c:	pop    rdi
   14000267d:	ret    
   14000267e:	int3   
   14000267f:	int3   
   140002680:	lea    r9,[rip+0xffffffffffffd979]        # 0x140000000
   140002687:	movsxd r8,ecx
   14000268a:	movsx  eax,WORD PTR [r9+r8*2+0x187c0]
   140002693:	add    eax,edx
   140002695:	js     0x1400026b1
   140002697:	movsxd rcx,eax
   14000269a:	movsx  eax,WORD PTR [r9+rcx*2+0x1ae70]
   1400026a3:	cmp    eax,edx
   1400026a5:	jne    0x1400026b1
   1400026a7:	movsx  eax,WORD PTR [r9+rcx*2+0x19230]
   1400026b0:	ret    
   1400026b1:	movsx  eax,WORD PTR [r9+r8*2+0x181a0]
   1400026ba:	neg    eax
   1400026bc:	ret    
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	ret    0x0
   1400026c3:	int3   
   1400026c4:	int3   
   1400026c5:	int3   
   1400026c6:	int3   
   1400026c7:	int3   
   1400026c8:	int3   
   1400026c9:	int3   
   1400026ca:	int3   
   1400026cb:	int3   
   1400026cc:	int3   
   1400026cd:	int3   
   1400026ce:	int3   
   1400026cf:	int3   
   1400026d0:	rex push rbx
   1400026d2:	sub    rsp,0x20
   1400026d6:	lea    rax,[rip+0x12deb]        # 0x1400154c8
   1400026dd:	mov    rbx,rcx
   1400026e0:	mov    QWORD PTR [rcx],rax
   1400026e3:	test   dl,0x1
   1400026e6:	je     0x1400026ed
   1400026e8:	call   0x140014638
   1400026ed:	mov    rax,rbx
   1400026f0:	add    rsp,0x20
   1400026f4:	pop    rbx
   1400026f5:	ret    
   1400026f6:	int3   
   1400026f7:	int3   
   1400026f8:	int3   
   1400026f9:	int3   
   1400026fa:	int3   
   1400026fb:	int3   
   1400026fc:	int3   
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	mov    eax,DWORD PTR [rcx+0x10]
   140002703:	mov    DWORD PTR [rdx],eax
   140002705:	mov    eax,DWORD PTR [rcx+0x14]
   140002708:	mov    DWORD PTR [rdx+0x4],eax
   14000270b:	mov    eax,DWORD PTR [rcx+0x18]
   14000270e:	mov    DWORD PTR [rdx+0x8],eax
   140002711:	mov    eax,DWORD PTR [rcx+0x1c]
   140002714:	mov    DWORD PTR [rdx+0xc],eax
   140002717:	mov    rax,rdx
   14000271a:	ret    
   14000271b:	int3   
   14000271c:	int3   
   14000271d:	int3   
   14000271e:	int3   
   14000271f:	int3   
   140002720:	xor    r9d,r9d
   140002723:	lea    rax,[rip+0x1309e]        # 0x1400157c8
   14000272a:	mov    QWORD PTR [rcx],rax
   14000272d:	mov    DWORD PTR [rcx+0x8],r9d
   140002731:	mov    rax,QWORD PTR [rdx]
   140002734:	mov    QWORD PTR [rcx+0x10],rax
   140002738:	mov    eax,DWORD PTR [rdx+0x8]
   14000273b:	mov    DWORD PTR [rcx+0x18],eax
   14000273e:	mov    eax,DWORD PTR [rdx+0xc]
   140002741:	mov    DWORD PTR [rcx+0x1c],eax
   140002744:	mov    DWORD PTR [rcx+0x20],r8d
   140002748:	mov    DWORD PTR [rcx+0x24],r9d
   14000274c:	mov    DWORD PTR [rcx+0x28],r9d
   140002750:	mov    DWORD PTR [rcx+0x2c],r9d
   140002754:	mov    DWORD PTR [rcx+0x30],r9d
   140002758:	mov    DWORD PTR [rcx+0x8],0x37
   14000275f:	mov    rax,rcx
   140002762:	ret    
   140002763:	int3   
   140002764:	int3   
   140002765:	int3   
   140002766:	int3   
   140002767:	int3   
   140002768:	int3   
   140002769:	int3   
   14000276a:	int3   
   14000276b:	int3   
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	mov    eax,DWORD PTR [rcx+0x24]
   140002773:	mov    DWORD PTR [rdx],eax
   140002775:	mov    eax,DWORD PTR [rcx+0x28]
   140002778:	mov    DWORD PTR [rdx+0x4],eax
   14000277b:	mov    eax,DWORD PTR [rcx+0x2c]
   14000277e:	mov    DWORD PTR [rdx+0x8],eax
   140002781:	mov    eax,DWORD PTR [rcx+0x30]
   140002784:	mov    DWORD PTR [rdx+0xc],eax
   140002787:	mov    rax,rdx
   14000278a:	ret    
   14000278b:	int3   
   14000278c:	int3   
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	mov    QWORD PTR [rcx+0x18],rdx
   140002794:	lea    rax,[rip+0x1307d]        # 0x140015818
   14000279b:	mov    QWORD PTR [rcx],rax
   14000279e:	xor    eax,eax
   1400027a0:	mov    QWORD PTR [rcx+0x10],rax
   1400027a4:	mov    DWORD PTR [rcx+0x20],eax
   1400027a7:	mov    DWORD PTR [rcx+0x24],eax
   1400027aa:	mov    DWORD PTR [rcx+0x28],eax
   1400027ad:	mov    DWORD PTR [rcx+0x2c],eax
   1400027b0:	mov    DWORD PTR [rcx+0x30],eax
   1400027b3:	mov    DWORD PTR [rcx+0x34],eax
   1400027b6:	mov    DWORD PTR [rcx+0x38],eax
   1400027b9:	mov    DWORD PTR [rcx+0x3c],eax
   1400027bc:	mov    DWORD PTR [rcx+0x40],eax
   1400027bf:	mov    DWORD PTR [rcx+0x44],eax
   1400027c2:	mov    DWORD PTR [rcx+0x48],eax
   1400027c5:	mov    DWORD PTR [rcx+0x4c],eax
   1400027c8:	mov    DWORD PTR [rcx+0x8],0x2
   1400027cf:	mov    rax,rcx
   1400027d2:	ret    
   1400027d3:	int3   
   1400027d4:	int3   
   1400027d5:	int3   
   1400027d6:	int3   
   1400027d7:	int3   
   1400027d8:	int3   
   1400027d9:	int3   
   1400027da:	int3   
   1400027db:	int3   
   1400027dc:	int3   
   1400027dd:	int3   
   1400027de:	int3   
   1400027df:	int3   
   1400027e0:	mov    QWORD PTR [rcx+0x10],rdx
   1400027e4:	lea    rax,[rip+0x1302d]        # 0x140015818
   1400027eb:	mov    QWORD PTR [rcx],rax
   1400027ee:	xor    eax,eax
   1400027f0:	mov    QWORD PTR [rcx+0x18],rax
   1400027f4:	mov    DWORD PTR [rcx+0x20],eax
   1400027f7:	mov    DWORD PTR [rcx+0x24],eax
   1400027fa:	mov    DWORD PTR [rcx+0x28],eax
   1400027fd:	mov    DWORD PTR [rcx+0x2c],eax
   140002800:	mov    DWORD PTR [rcx+0x30],eax
   140002803:	mov    DWORD PTR [rcx+0x34],eax
   140002806:	mov    DWORD PTR [rcx+0x38],eax
   140002809:	mov    DWORD PTR [rcx+0x3c],eax
   14000280c:	mov    DWORD PTR [rcx+0x40],eax
   14000280f:	mov    DWORD PTR [rcx+0x44],eax
   140002812:	mov    DWORD PTR [rcx+0x48],eax
   140002815:	mov    DWORD PTR [rcx+0x4c],eax
   140002818:	mov    DWORD PTR [rcx+0x8],0x2
   14000281f:	mov    rax,rcx
   140002822:	ret    
   140002823:	int3   
   140002824:	int3   
   140002825:	int3   
   140002826:	int3   
   140002827:	int3   
   140002828:	int3   
   140002829:	int3   
   14000282a:	int3   
   14000282b:	int3   
   14000282c:	int3   
   14000282d:	int3   
   14000282e:	int3   
   14000282f:	int3   
   140002830:	mov    QWORD PTR [rcx+0x10],rdx
   140002834:	mov    QWORD PTR [rcx+0x18],r8
   140002838:	lea    rax,[rip+0x12fd9]        # 0x140015818
   14000283f:	mov    QWORD PTR [rcx],rax
   140002842:	xor    eax,eax
   140002844:	mov    DWORD PTR [rcx+0x20],eax
   140002847:	mov    DWORD PTR [rcx+0x24],eax
   14000284a:	mov    DWORD PTR [rcx+0x28],eax
   14000284d:	mov    DWORD PTR [rcx+0x2c],eax
   140002850:	mov    DWORD PTR [rcx+0x30],eax
   140002853:	mov    DWORD PTR [rcx+0x34],eax
   140002856:	mov    DWORD PTR [rcx+0x38],eax
   140002859:	mov    DWORD PTR [rcx+0x3c],eax
   14000285c:	mov    DWORD PTR [rcx+0x40],eax
   14000285f:	mov    DWORD PTR [rcx+0x44],eax
   140002862:	mov    DWORD PTR [rcx+0x48],eax
   140002865:	mov    DWORD PTR [rcx+0x4c],eax
   140002868:	mov    DWORD PTR [rcx+0x8],0x2
   14000286f:	mov    rax,rcx
   140002872:	ret    
   140002873:	int3   
   140002874:	int3   
   140002875:	int3   
   140002876:	int3   
   140002877:	int3   
   140002878:	int3   
   140002879:	int3   
   14000287a:	int3   
   14000287b:	int3   
   14000287c:	int3   
   14000287d:	int3   
   14000287e:	int3   
   14000287f:	int3   
   140002880:	rex push rbx
   140002882:	sub    rsp,0x30
   140002886:	cmp    QWORD PTR [rcx+0x10],0x0
   14000288b:	mov    rbx,rdx
   14000288e:	je     0x1400028a4
   140002890:	mov    rcx,QWORD PTR [rcx+0x10]
   140002894:	lea    rdx,[rsp+0x20]
   140002899:	mov    rax,QWORD PTR [rcx]
   14000289c:	call   QWORD PTR [rax+0x38]
   14000289f:	mov    rcx,rax
   1400028a2:	jmp    0x1400028a8
   1400028a4:	add    rcx,0x18
   1400028a8:	mov    eax,DWORD PTR [rcx]
   1400028aa:	mov    DWORD PTR [rbx],eax
   1400028ac:	mov    eax,DWORD PTR [rcx+0x4]
   1400028af:	mov    DWORD PTR [rbx+0x4],eax
   1400028b2:	mov    eax,DWORD PTR [rcx+0x8]
   1400028b5:	mov    DWORD PTR [rbx+0x8],eax
   1400028b8:	mov    eax,DWORD PTR [rcx+0xc]
   1400028bb:	mov    DWORD PTR [rbx+0xc],eax
   1400028be:	mov    rax,rbx
   1400028c1:	add    rsp,0x30
   1400028c5:	pop    rbx
   1400028c6:	ret    
   1400028c7:	int3   
   1400028c8:	int3   
   1400028c9:	int3   
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	rex push rbx
   1400028d2:	sub    rsp,0x20
   1400028d6:	cmp    QWORD PTR [rcx+0x10],0x0
   1400028db:	mov    rbx,rdx
   1400028de:	je     0x1400028f3
   1400028e0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400028e4:	mov    rax,QWORD PTR [rcx]
   1400028e7:	call   QWORD PTR [rax+0x30]
   1400028ea:	mov    rax,rbx
   1400028ed:	add    rsp,0x20
   1400028f1:	pop    rbx
   1400028f2:	ret    
   1400028f3:	mov    rcx,QWORD PTR [rcx+0x18]
   1400028f7:	mov    rax,QWORD PTR [rcx]
   1400028fa:	call   QWORD PTR [rax+0x30]
   1400028fd:	mov    rax,rbx
   140002900:	add    rsp,0x20
   140002904:	pop    rbx
   140002905:	ret    
   140002906:	int3   
   140002907:	int3   
   140002908:	int3   
   140002909:	int3   
   14000290a:	int3   
   14000290b:	int3   
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	mov    QWORD PTR [rcx+0x10],rdx
   140002914:	lea    rax,[rip+0x130dd]        # 0x1400159f8
   14000291b:	mov    QWORD PTR [rcx],rax
   14000291e:	xor    eax,eax
   140002920:	mov    DWORD PTR [rcx+0x18],eax
   140002923:	mov    DWORD PTR [rcx+0x1c],eax
   140002926:	mov    DWORD PTR [rcx+0x20],eax
   140002929:	mov    DWORD PTR [rcx+0x24],eax
   14000292c:	mov    DWORD PTR [rcx+0x28],eax
   14000292f:	mov    DWORD PTR [rcx+0x2c],eax
   140002932:	mov    DWORD PTR [rcx+0x30],eax
   140002935:	mov    DWORD PTR [rcx+0x34],eax
   140002938:	mov    DWORD PTR [rcx+0x38],eax
   14000293b:	mov    QWORD PTR [rcx+0x40],rax
   14000293f:	mov    DWORD PTR [rcx+0x48],eax
   140002942:	mov    DWORD PTR [rcx+0x4c],eax
   140002945:	mov    DWORD PTR [rcx+0x50],eax
   140002948:	mov    DWORD PTR [rcx+0x54],eax
   14000294b:	mov    DWORD PTR [rcx+0x58],eax
   14000294e:	mov    DWORD PTR [rcx+0x5c],eax
   140002951:	mov    DWORD PTR [rcx+0x60],eax
   140002954:	mov    DWORD PTR [rcx+0x64],eax
   140002957:	mov    QWORD PTR [rcx+0x68],r8
   14000295b:	mov    DWORD PTR [rcx+0x70],eax
   14000295e:	mov    DWORD PTR [rcx+0x74],eax
   140002961:	mov    DWORD PTR [rcx+0x78],eax
   140002964:	mov    DWORD PTR [rcx+0x7c],eax
   140002967:	mov    DWORD PTR [rcx+0x8],0x34
   14000296e:	mov    rax,rcx
   140002971:	ret    
   140002972:	int3   
   140002973:	int3   
   140002974:	int3   
   140002975:	int3   
   140002976:	int3   
   140002977:	int3   
   140002978:	int3   
   140002979:	int3   
   14000297a:	int3   
   14000297b:	int3   
   14000297c:	int3   
   14000297d:	int3   
   14000297e:	int3   
   14000297f:	int3   
   140002980:	mov    QWORD PTR [rcx+0x10],rdx
   140002984:	mov    DWORD PTR [rcx+0x18],0x1
   14000298b:	lea    rax,[rip+0x13066]        # 0x1400159f8
   140002992:	mov    QWORD PTR [rcx],rax
   140002995:	xor    eax,eax
   140002997:	mov    DWORD PTR [rcx+0x1c],eax
   14000299a:	mov    DWORD PTR [rcx+0x20],eax
   14000299d:	mov    DWORD PTR [rcx+0x24],eax
   1400029a0:	mov    DWORD PTR [rcx+0x28],eax
   1400029a3:	mov    DWORD PTR [rcx+0x2c],eax
   1400029a6:	mov    DWORD PTR [rcx+0x30],eax
   1400029a9:	mov    DWORD PTR [rcx+0x34],eax
   1400029ac:	mov    DWORD PTR [rcx+0x38],eax
   1400029af:	mov    QWORD PTR [rcx+0x40],r8
   1400029b3:	mov    DWORD PTR [rcx+0x48],eax
   1400029b6:	mov    DWORD PTR [rcx+0x4c],eax
   1400029b9:	mov    DWORD PTR [rcx+0x50],eax
   1400029bc:	mov    DWORD PTR [rcx+0x54],eax
   1400029bf:	mov    DWORD PTR [rcx+0x58],eax
   1400029c2:	mov    DWORD PTR [rcx+0x5c],eax
   1400029c5:	mov    DWORD PTR [rcx+0x60],eax
   1400029c8:	mov    DWORD PTR [rcx+0x64],eax
   1400029cb:	mov    QWORD PTR [rcx+0x68],r9
   1400029cf:	mov    DWORD PTR [rcx+0x70],eax
   1400029d2:	mov    DWORD PTR [rcx+0x74],eax
   1400029d5:	mov    DWORD PTR [rcx+0x78],eax
   1400029d8:	mov    DWORD PTR [rcx+0x7c],eax
   1400029db:	mov    DWORD PTR [rcx+0x8],0x34
   1400029e2:	mov    rax,rcx
   1400029e5:	ret    
   1400029e6:	int3   
   1400029e7:	int3   
   1400029e8:	int3   
   1400029e9:	int3   
   1400029ea:	int3   
   1400029eb:	int3   
   1400029ec:	int3   
   1400029ed:	int3   
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	mov    eax,DWORD PTR [rcx+0x1c]
   1400029f3:	mov    DWORD PTR [rdx],eax
   1400029f5:	mov    eax,DWORD PTR [rcx+0x20]
   1400029f8:	mov    DWORD PTR [rdx+0x4],eax
   1400029fb:	mov    eax,DWORD PTR [rcx+0x24]
   1400029fe:	mov    DWORD PTR [rdx+0x8],eax
   140002a01:	mov    eax,DWORD PTR [rcx+0x28]
   140002a04:	mov    DWORD PTR [rdx+0xc],eax
   140002a07:	mov    rax,rdx
   140002a0a:	ret    
   140002a0b:	int3   
   140002a0c:	int3   
   140002a0d:	int3   
   140002a0e:	int3   
   140002a0f:	int3   
   140002a10:	mov    eax,DWORD PTR [rcx+0x70]
   140002a13:	mov    DWORD PTR [rdx],eax
   140002a15:	mov    eax,DWORD PTR [rcx+0x74]
   140002a18:	mov    DWORD PTR [rdx+0x4],eax
   140002a1b:	mov    eax,DWORD PTR [rcx+0x78]
   140002a1e:	mov    DWORD PTR [rdx+0x8],eax
   140002a21:	mov    eax,DWORD PTR [rcx+0x7c]
   140002a24:	mov    DWORD PTR [rdx+0xc],eax
   140002a27:	mov    rax,rdx
   140002a2a:	ret    
   140002a2b:	int3   
   140002a2c:	int3   
   140002a2d:	int3   
   140002a2e:	int3   
   140002a2f:	int3   
   140002a30:	rex push rbx
   140002a32:	sub    rsp,0x20
   140002a36:	add    rcx,0x20
   140002a3a:	mov    rbx,rdx
   140002a3d:	call   QWORD PTR [rip+0x12755]        # 0x140015198
   140002a43:	mov    rax,rbx
   140002a46:	add    rsp,0x20
   140002a4a:	pop    rbx
   140002a4b:	ret    
   140002a4c:	int3   
   140002a4d:	int3   
   140002a4e:	int3   
   140002a4f:	int3   
   140002a50:	rex push rbx
   140002a52:	sub    rsp,0x20
   140002a56:	movsd  xmm1,QWORD PTR [rcx+0x20]
   140002a5b:	mov    r9d,0x10
   140002a61:	mov    r8b,0x67
   140002a64:	mov    rcx,rdx
   140002a67:	mov    rbx,rdx
   140002a6a:	call   QWORD PTR [rip+0x12730]        # 0x1400151a0
   140002a70:	mov    rax,rbx
   140002a73:	add    rsp,0x20
   140002a77:	pop    rbx
   140002a78:	ret    
   140002a79:	int3   
   140002a7a:	int3   
   140002a7b:	int3   
   140002a7c:	int3   
   140002a7d:	int3   
   140002a7e:	int3   
   140002a7f:	int3   
   140002a80:	mov    eax,DWORD PTR [rcx+0x30]
   140002a83:	mov    DWORD PTR [rdx],eax
   140002a85:	mov    eax,DWORD PTR [rcx+0x34]
   140002a88:	mov    DWORD PTR [rdx+0x4],eax
   140002a8b:	mov    eax,DWORD PTR [rcx+0x38]
   140002a8e:	mov    DWORD PTR [rdx+0x8],eax
   140002a91:	mov    eax,DWORD PTR [rcx+0x3c]
   140002a94:	mov    DWORD PTR [rdx+0xc],eax
   140002a97:	mov    rax,rdx
   140002a9a:	ret    
   140002a9b:	int3   
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	mov    QWORD PTR [rcx+0x10],rdx
   140002aa4:	xor    r9d,r9d
   140002aa7:	lea    rax,[rip+0x130da]        # 0x140015b88
   140002aae:	mov    QWORD PTR [rcx],rax
   140002ab1:	mov    DWORD PTR [rcx+0x8],r9d
   140002ab5:	mov    rax,QWORD PTR [r8]
   140002ab8:	mov    QWORD PTR [rcx+0x18],rax
   140002abc:	mov    eax,DWORD PTR [r8+0x8]
   140002ac0:	mov    DWORD PTR [rcx+0x20],eax
   140002ac3:	mov    eax,DWORD PTR [r8+0xc]
   140002ac7:	mov    DWORD PTR [rcx+0x24],eax
   140002aca:	mov    DWORD PTR [rcx+0x28],r9d
   140002ace:	mov    DWORD PTR [rcx+0x2c],r9d
   140002ad2:	mov    DWORD PTR [rcx+0x30],r9d
   140002ad6:	mov    DWORD PTR [rcx+0x34],r9d
   140002ada:	mov    DWORD PTR [rcx+0x38],r9d
   140002ade:	mov    DWORD PTR [rcx+0x3c],r9d
   140002ae2:	mov    DWORD PTR [rcx+0x40],r9d
   140002ae6:	mov    DWORD PTR [rcx+0x44],r9d
   140002aea:	mov    DWORD PTR [rcx+0x8],0x18
   140002af1:	mov    rax,rcx
   140002af4:	ret    
   140002af5:	int3   
   140002af6:	int3   
   140002af7:	int3   
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	mov    QWORD PTR [rcx+0x10],rdx
   140002b04:	mov    QWORD PTR [rcx+0x18],r8
   140002b08:	lea    rax,[rip+0x130c9]        # 0x140015bd8
   140002b0f:	mov    QWORD PTR [rcx],rax
   140002b12:	xor    eax,eax
   140002b14:	mov    DWORD PTR [rcx+0x20],eax
   140002b17:	mov    DWORD PTR [rcx+0x24],eax
   140002b1a:	mov    DWORD PTR [rcx+0x28],eax
   140002b1d:	mov    DWORD PTR [rcx+0x2c],eax
   140002b20:	mov    DWORD PTR [rcx+0x30],eax
   140002b23:	mov    DWORD PTR [rcx+0x34],eax
   140002b26:	mov    DWORD PTR [rcx+0x38],eax
   140002b29:	mov    DWORD PTR [rcx+0x3c],eax
   140002b2c:	mov    DWORD PTR [rcx+0x40],eax
   140002b2f:	mov    DWORD PTR [rcx+0x44],eax
   140002b32:	mov    DWORD PTR [rcx+0x48],eax
   140002b35:	mov    DWORD PTR [rcx+0x4c],eax
   140002b38:	mov    DWORD PTR [rcx+0x8],0x28
   140002b3f:	mov    rax,rcx
   140002b42:	ret    
   140002b43:	int3   
   140002b44:	int3   
   140002b45:	int3   
   140002b46:	int3   
   140002b47:	int3   
   140002b48:	int3   
   140002b49:	int3   
   140002b4a:	int3   
   140002b4b:	int3   
   140002b4c:	int3   
   140002b4d:	int3   
   140002b4e:	int3   
   140002b4f:	int3   
   140002b50:	mov    eax,DWORD PTR [rcx+0x18]
   140002b53:	mov    DWORD PTR [rdx],eax
   140002b55:	mov    eax,DWORD PTR [rcx+0x1c]
   140002b58:	mov    DWORD PTR [rdx+0x4],eax
   140002b5b:	mov    eax,DWORD PTR [rcx+0x20]
   140002b5e:	mov    DWORD PTR [rdx+0x8],eax
   140002b61:	mov    eax,DWORD PTR [rcx+0x24]
   140002b64:	mov    DWORD PTR [rdx+0xc],eax
   140002b67:	mov    rax,rdx
   140002b6a:	ret    
   140002b6b:	int3   
   140002b6c:	int3   
   140002b6d:	int3   
   140002b6e:	int3   
   140002b6f:	int3   
   140002b70:	rex push rbx
   140002b72:	sub    rsp,0x20
   140002b76:	mov    rcx,QWORD PTR [rcx+0x10]
   140002b7a:	mov    rbx,rdx
   140002b7d:	mov    rax,QWORD PTR [rcx]
   140002b80:	call   QWORD PTR [rax+0x38]
   140002b83:	mov    rax,rbx
   140002b86:	add    rsp,0x20
   140002b8a:	pop    rbx
   140002b8b:	ret    
   140002b8c:	int3   
   140002b8d:	int3   
   140002b8e:	int3   
   140002b8f:	int3   
   140002b90:	mov    QWORD PTR [rcx+0x10],rdx
   140002b94:	mov    QWORD PTR [rcx+0x18],r8
   140002b98:	mov    QWORD PTR [rcx+0x20],r9
   140002b9c:	lea    rax,[rip+0x13535]        # 0x1400160d8
   140002ba3:	mov    QWORD PTR [rcx],rax
   140002ba6:	xor    eax,eax
   140002ba8:	mov    DWORD PTR [rcx+0x28],eax
   140002bab:	mov    DWORD PTR [rcx+0x2c],eax
   140002bae:	mov    DWORD PTR [rcx+0x30],eax
   140002bb1:	mov    DWORD PTR [rcx+0x34],eax
   140002bb4:	mov    DWORD PTR [rcx+0x38],eax
   140002bb7:	mov    DWORD PTR [rcx+0x3c],eax
   140002bba:	mov    DWORD PTR [rcx+0x40],eax
   140002bbd:	mov    DWORD PTR [rcx+0x44],eax
   140002bc0:	mov    DWORD PTR [rcx+0x8],0xc
   140002bc7:	mov    rax,rcx
   140002bca:	ret    
   140002bcb:	int3   
   140002bcc:	int3   
   140002bcd:	int3   
   140002bce:	int3   
   140002bcf:	int3   
   140002bd0:	xor    r9d,r9d
   140002bd3:	lea    rax,[rip+0x1368e]        # 0x140016268
   140002bda:	mov    QWORD PTR [rcx],rax
   140002bdd:	mov    DWORD PTR [rcx+0x8],r9d
   140002be1:	mov    rax,QWORD PTR [rdx]
   140002be4:	mov    QWORD PTR [rcx+0x10],rax
   140002be8:	mov    eax,DWORD PTR [rdx+0x8]
   140002beb:	mov    DWORD PTR [rcx+0x18],eax
   140002bee:	mov    eax,DWORD PTR [rdx+0xc]
   140002bf1:	mov    DWORD PTR [rcx+0x1c],eax
   140002bf4:	mov    QWORD PTR [rcx+0x20],r8
   140002bf8:	mov    BYTE PTR [rcx+0x28],r9b
   140002bfc:	mov    DWORD PTR [rcx+0x2c],r9d
   140002c00:	mov    DWORD PTR [rcx+0x30],r9d
   140002c04:	mov    DWORD PTR [rcx+0x34],r9d
   140002c08:	mov    DWORD PTR [rcx+0x38],r9d
   140002c0c:	mov    rax,rcx
   140002c0f:	mov    DWORD PTR [rcx+0x8],0x48
   140002c16:	ret    
   140002c17:	int3   
   140002c18:	int3   
   140002c19:	int3   
   140002c1a:	int3   
   140002c1b:	int3   
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	mov    eax,DWORD PTR [rcx+0x2c]
   140002c23:	mov    DWORD PTR [rdx],eax
   140002c25:	mov    eax,DWORD PTR [rcx+0x30]
   140002c28:	mov    DWORD PTR [rdx+0x4],eax
   140002c2b:	mov    eax,DWORD PTR [rcx+0x34]
   140002c2e:	mov    DWORD PTR [rdx+0x8],eax
   140002c31:	mov    eax,DWORD PTR [rcx+0x38]
   140002c34:	mov    DWORD PTR [rdx+0xc],eax
   140002c37:	mov    rax,rdx
   140002c3a:	ret    
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	rex push rbx
   140002c42:	sub    rsp,0x30
   140002c46:	cmp    QWORD PTR [rcx+0x20],0x0
   140002c4b:	mov    rbx,rdx
   140002c4e:	je     0x140002c64
   140002c50:	mov    rcx,QWORD PTR [rcx+0x20]
   140002c54:	lea    rdx,[rsp+0x20]
   140002c59:	mov    rax,QWORD PTR [rcx]
   140002c5c:	call   QWORD PTR [rax+0x38]
   140002c5f:	mov    rcx,rax
   140002c62:	jmp    0x140002c68
   140002c64:	add    rcx,0x2c
   140002c68:	mov    eax,DWORD PTR [rcx]
   140002c6a:	mov    DWORD PTR [rbx],eax
   140002c6c:	mov    eax,DWORD PTR [rcx+0x4]
   140002c6f:	mov    DWORD PTR [rbx+0x4],eax
   140002c72:	mov    eax,DWORD PTR [rcx+0x8]
   140002c75:	mov    DWORD PTR [rbx+0x8],eax
   140002c78:	mov    eax,DWORD PTR [rcx+0xc]
   140002c7b:	mov    DWORD PTR [rbx+0xc],eax
   140002c7e:	mov    rax,rbx
   140002c81:	add    rsp,0x30
   140002c85:	pop    rbx
   140002c86:	ret    
   140002c87:	int3   
   140002c88:	int3   
   140002c89:	int3   
   140002c8a:	int3   
   140002c8b:	int3   
   140002c8c:	int3   
   140002c8d:	int3   
   140002c8e:	int3   
   140002c8f:	int3   
   140002c90:	rex push rbx
   140002c92:	sub    rsp,0x20
   140002c96:	cmp    QWORD PTR [rcx+0x18],0x0
   140002c9b:	mov    rbx,rdx
   140002c9e:	je     0x140002cb3
   140002ca0:	mov    rcx,QWORD PTR [rcx+0x18]
   140002ca4:	mov    rax,QWORD PTR [rcx]
   140002ca7:	call   QWORD PTR [rax+0x38]
   140002caa:	mov    rax,rbx
   140002cad:	add    rsp,0x20
   140002cb1:	pop    rbx
   140002cb2:	ret    
   140002cb3:	mov    rcx,QWORD PTR [rcx+0x10]
   140002cb7:	mov    rax,QWORD PTR [rcx]
   140002cba:	call   QWORD PTR [rax+0x38]
   140002cbd:	mov    rax,rbx
   140002cc0:	add    rsp,0x20
   140002cc4:	pop    rbx
   140002cc5:	ret    
   140002cc6:	int3   
   140002cc7:	int3   
   140002cc8:	int3   
   140002cc9:	int3   
   140002cca:	int3   
   140002ccb:	int3   
   140002ccc:	int3   
   140002ccd:	int3   
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	mov    rax,QWORD PTR [rcx+0x18]
   140002cd4:	mov    QWORD PTR [rcx+0x18],0x0
   140002cdc:	test   dl,dl
   140002cde:	je     0x140002d01
   140002ce0:	mov    rdx,rax
   140002ce3:	test   rax,rax
   140002ce6:	je     0x140002d01
   140002ce8:	nop    DWORD PTR [rax+rax*1+0x0]
   140002cf0:	mov    rcx,QWORD PTR [rdx+0x10]
   140002cf4:	mov    BYTE PTR [rcx+0x28],0x1
   140002cf8:	mov    rdx,QWORD PTR [rdx+0x18]
   140002cfc:	test   rdx,rdx
   140002cff:	jne    0x140002cf0
   140002d01:	repz ret 
   140002d03:	int3   
   140002d04:	int3   
   140002d05:	int3   
   140002d06:	int3   
   140002d07:	int3   
   140002d08:	int3   
   140002d09:	int3   
   140002d0a:	int3   
   140002d0b:	int3   
   140002d0c:	int3   
   140002d0d:	int3   
   140002d0e:	int3   
   140002d0f:	int3   
   140002d10:	mov    QWORD PTR [rcx+0x10],rdx
   140002d14:	mov    QWORD PTR [rcx+0x18],r8
   140002d18:	mov    QWORD PTR [rcx+0x20],r9
   140002d1c:	lea    rax,[rip+0x13685]        # 0x1400163a8
   140002d23:	mov    QWORD PTR [rcx],rax
   140002d26:	xor    eax,eax
   140002d28:	mov    DWORD PTR [rcx+0x28],eax
   140002d2b:	mov    DWORD PTR [rcx+0x2c],eax
   140002d2e:	mov    DWORD PTR [rcx+0x30],eax
   140002d31:	mov    DWORD PTR [rcx+0x34],eax
   140002d34:	mov    DWORD PTR [rcx+0x38],eax
   140002d37:	mov    DWORD PTR [rcx+0x3c],eax
   140002d3a:	mov    DWORD PTR [rcx+0x40],eax
   140002d3d:	mov    DWORD PTR [rcx+0x44],eax
   140002d40:	mov    DWORD PTR [rcx+0x48],eax
   140002d43:	mov    DWORD PTR [rcx+0x4c],eax
   140002d46:	mov    DWORD PTR [rcx+0x50],eax
   140002d49:	mov    DWORD PTR [rcx+0x54],eax
   140002d4c:	mov    DWORD PTR [rcx+0x58],eax
   140002d4f:	mov    DWORD PTR [rcx+0x5c],eax
   140002d52:	mov    DWORD PTR [rcx+0x60],eax
   140002d55:	mov    DWORD PTR [rcx+0x64],eax
   140002d58:	mov    DWORD PTR [rcx+0x8],0x23
   140002d5f:	mov    rax,rcx
   140002d62:	ret    
   140002d63:	int3   
   140002d64:	int3   
   140002d65:	int3   
   140002d66:	int3   
   140002d67:	int3   
   140002d68:	int3   
   140002d69:	int3   
   140002d6a:	int3   
   140002d6b:	int3   
   140002d6c:	int3   
   140002d6d:	int3   
   140002d6e:	int3   
   140002d6f:	int3   
   140002d70:	rex push rbx
   140002d72:	sub    rsp,0x20
   140002d76:	cmp    QWORD PTR [rcx+0x20],0x0
   140002d7b:	mov    rbx,rdx
   140002d7e:	je     0x140002d93
   140002d80:	mov    rcx,QWORD PTR [rcx+0x20]
   140002d84:	mov    rax,QWORD PTR [rcx]
   140002d87:	call   QWORD PTR [rax+0x38]
   140002d8a:	mov    rax,rbx
   140002d8d:	add    rsp,0x20
   140002d91:	pop    rbx
   140002d92:	ret    
   140002d93:	mov    rcx,QWORD PTR [rcx+0x18]
   140002d97:	mov    rax,QWORD PTR [rcx]
   140002d9a:	call   QWORD PTR [rax+0x38]
   140002d9d:	mov    rax,rbx
   140002da0:	add    rsp,0x20
   140002da4:	pop    rbx
   140002da5:	ret    
   140002da6:	int3   
   140002da7:	int3   
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	mov    QWORD PTR [rcx+0x10],rdx
   140002db4:	mov    QWORD PTR [rcx+0x18],r8
   140002db8:	lea    rax,[rip+0x13639]        # 0x1400163f8
   140002dbf:	mov    QWORD PTR [rcx],rax
   140002dc2:	xor    eax,eax
   140002dc4:	mov    DWORD PTR [rcx+0x20],eax
   140002dc7:	mov    DWORD PTR [rcx+0x24],eax
   140002dca:	mov    DWORD PTR [rcx+0x28],eax
   140002dcd:	mov    DWORD PTR [rcx+0x2c],eax
   140002dd0:	mov    DWORD PTR [rcx+0x30],eax
   140002dd3:	mov    DWORD PTR [rcx+0x34],eax
   140002dd6:	mov    DWORD PTR [rcx+0x38],eax
   140002dd9:	mov    DWORD PTR [rcx+0x3c],eax
   140002ddc:	mov    DWORD PTR [rcx+0x40],eax
   140002ddf:	mov    DWORD PTR [rcx+0x44],eax
   140002de2:	mov    DWORD PTR [rcx+0x48],eax
   140002de5:	mov    DWORD PTR [rcx+0x4c],eax
   140002de8:	mov    DWORD PTR [rcx+0x50],eax
   140002deb:	mov    DWORD PTR [rcx+0x54],eax
   140002dee:	mov    DWORD PTR [rcx+0x58],eax
   140002df1:	mov    DWORD PTR [rcx+0x5c],eax
   140002df4:	mov    DWORD PTR [rcx+0x60],eax
   140002df7:	mov    DWORD PTR [rcx+0x64],eax
   140002dfa:	mov    DWORD PTR [rcx+0x68],eax
   140002dfd:	mov    DWORD PTR [rcx+0x6c],eax
   140002e00:	mov    DWORD PTR [rcx+0x8],0x11
   140002e07:	mov    rax,rcx
   140002e0a:	ret    
   140002e0b:	int3   
   140002e0c:	int3   
   140002e0d:	int3   
   140002e0e:	int3   
   140002e0f:	int3   
   140002e10:	mov    eax,DWORD PTR [rcx+0x60]
   140002e13:	mov    DWORD PTR [rdx],eax
   140002e15:	mov    eax,DWORD PTR [rcx+0x64]
   140002e18:	mov    DWORD PTR [rdx+0x4],eax
   140002e1b:	mov    eax,DWORD PTR [rcx+0x68]
   140002e1e:	mov    DWORD PTR [rdx+0x8],eax
   140002e21:	mov    eax,DWORD PTR [rcx+0x6c]
   140002e24:	mov    DWORD PTR [rdx+0xc],eax
   140002e27:	mov    rax,rdx
   140002e2a:	ret    
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	mov    QWORD PTR [rcx+0x10],rdx
   140002e34:	mov    QWORD PTR [rcx+0x18],r8
   140002e38:	lea    rax,[rip+0x13609]        # 0x140016448
   140002e3f:	mov    QWORD PTR [rcx],rax
   140002e42:	xor    eax,eax
   140002e44:	mov    DWORD PTR [rcx+0x20],eax
   140002e47:	mov    DWORD PTR [rcx+0x24],eax
   140002e4a:	mov    DWORD PTR [rcx+0x28],eax
   140002e4d:	mov    DWORD PTR [rcx+0x2c],eax
   140002e50:	mov    DWORD PTR [rcx+0x30],eax
   140002e53:	mov    DWORD PTR [rcx+0x34],eax
   140002e56:	mov    DWORD PTR [rcx+0x38],eax
   140002e59:	mov    DWORD PTR [rcx+0x3c],eax
   140002e5c:	mov    DWORD PTR [rcx+0x40],eax
   140002e5f:	mov    DWORD PTR [rcx+0x44],eax
   140002e62:	mov    DWORD PTR [rcx+0x48],eax
   140002e65:	mov    DWORD PTR [rcx+0x4c],eax
   140002e68:	mov    DWORD PTR [rcx+0x8],0x4c
   140002e6f:	mov    rax,rcx
   140002e72:	ret    
   140002e73:	int3   
   140002e74:	int3   
   140002e75:	int3   
   140002e76:	int3   
   140002e77:	int3   
   140002e78:	int3   
   140002e79:	int3   
   140002e7a:	int3   
   140002e7b:	int3   
   140002e7c:	int3   
   140002e7d:	int3   
   140002e7e:	int3   
   140002e7f:	int3   
   140002e80:	mov    QWORD PTR [rcx+0x10],rdx
   140002e84:	mov    QWORD PTR [rcx+0x18],r8
   140002e88:	mov    QWORD PTR [rcx+0x20],r9
   140002e8c:	lea    rax,[rip+0x13605]        # 0x140016498
   140002e93:	mov    QWORD PTR [rcx],rax
   140002e96:	mov    rax,QWORD PTR [rsp+0x28]
   140002e9b:	mov    QWORD PTR [rcx+0x28],rax
   140002e9f:	xor    eax,eax
   140002ea1:	mov    DWORD PTR [rcx+0x30],eax
   140002ea4:	mov    DWORD PTR [rcx+0x34],eax
   140002ea7:	mov    DWORD PTR [rcx+0x38],eax
   140002eaa:	mov    DWORD PTR [rcx+0x3c],eax
   140002ead:	mov    DWORD PTR [rcx+0x40],eax
   140002eb0:	mov    DWORD PTR [rcx+0x44],eax
   140002eb3:	mov    DWORD PTR [rcx+0x48],eax
   140002eb6:	mov    DWORD PTR [rcx+0x4c],eax
   140002eb9:	mov    DWORD PTR [rcx+0x50],eax
   140002ebc:	mov    DWORD PTR [rcx+0x54],eax
   140002ebf:	mov    DWORD PTR [rcx+0x58],eax
   140002ec2:	mov    DWORD PTR [rcx+0x5c],eax
   140002ec5:	mov    DWORD PTR [rcx+0x60],eax
   140002ec8:	mov    DWORD PTR [rcx+0x64],eax
   140002ecb:	mov    DWORD PTR [rcx+0x68],eax
   140002ece:	mov    DWORD PTR [rcx+0x6c],eax
   140002ed1:	mov    DWORD PTR [rcx+0x70],eax
   140002ed4:	mov    DWORD PTR [rcx+0x74],eax
   140002ed7:	mov    DWORD PTR [rcx+0x78],eax
   140002eda:	mov    DWORD PTR [rcx+0x7c],eax
   140002edd:	mov    DWORD PTR [rcx+0x8],0x1b
   140002ee4:	mov    rax,rcx
   140002ee7:	ret    
   140002ee8:	int3   
   140002ee9:	int3   
   140002eea:	int3   
   140002eeb:	int3   
   140002eec:	int3   
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	mov    QWORD PTR [rcx+0x10],rdx
   140002ef4:	mov    QWORD PTR [rcx+0x18],r8
   140002ef8:	mov    QWORD PTR [rcx+0x20],r9
   140002efc:	lea    rax,[rip+0x135e5]        # 0x1400164e8
   140002f03:	mov    QWORD PTR [rcx],rax
   140002f06:	mov    rax,QWORD PTR [rsp+0x28]
   140002f0b:	mov    QWORD PTR [rcx+0x28],rax
   140002f0f:	xor    eax,eax
   140002f11:	mov    DWORD PTR [rcx+0x30],eax
   140002f14:	mov    DWORD PTR [rcx+0x34],eax
   140002f17:	mov    DWORD PTR [rcx+0x38],eax
   140002f1a:	mov    DWORD PTR [rcx+0x3c],eax
   140002f1d:	mov    DWORD PTR [rcx+0x40],eax
   140002f20:	mov    DWORD PTR [rcx+0x44],eax
   140002f23:	mov    DWORD PTR [rcx+0x48],eax
   140002f26:	mov    DWORD PTR [rcx+0x4c],eax
   140002f29:	mov    DWORD PTR [rcx+0x50],eax
   140002f2c:	mov    DWORD PTR [rcx+0x54],eax
   140002f2f:	mov    DWORD PTR [rcx+0x58],eax
   140002f32:	mov    DWORD PTR [rcx+0x5c],eax
   140002f35:	mov    DWORD PTR [rcx+0x60],eax
   140002f38:	mov    DWORD PTR [rcx+0x64],eax
   140002f3b:	mov    DWORD PTR [rcx+0x68],eax
   140002f3e:	mov    DWORD PTR [rcx+0x6c],eax
   140002f41:	mov    DWORD PTR [rcx+0x70],eax
   140002f44:	mov    DWORD PTR [rcx+0x74],eax
   140002f47:	mov    DWORD PTR [rcx+0x78],eax
   140002f4a:	mov    DWORD PTR [rcx+0x7c],eax
   140002f4d:	mov    DWORD PTR [rcx+0x80],eax
   140002f53:	mov    DWORD PTR [rcx+0x84],eax
   140002f59:	mov    DWORD PTR [rcx+0x88],eax
   140002f5f:	mov    DWORD PTR [rcx+0x8c],eax
   140002f65:	mov    DWORD PTR [rcx+0x8],0x26
   140002f6c:	mov    rax,rcx
   140002f6f:	ret    
   140002f70:	rex push rbx
   140002f72:	sub    rsp,0x20
   140002f76:	mov    rcx,QWORD PTR [rcx+0x28]
   140002f7a:	mov    rbx,rdx
   140002f7d:	mov    rax,QWORD PTR [rcx]
   140002f80:	call   QWORD PTR [rax+0x38]
   140002f83:	mov    rax,rbx
   140002f86:	add    rsp,0x20
   140002f8a:	pop    rbx
   140002f8b:	ret    
   140002f8c:	int3   
   140002f8d:	int3   
   140002f8e:	int3   
   140002f8f:	int3   
   140002f90:	mov    QWORD PTR [rcx+0x10],rdx
   140002f94:	mov    QWORD PTR [rcx+0x18],r8
   140002f98:	mov    QWORD PTR [rcx+0x20],r9
   140002f9c:	lea    rax,[rip+0x13595]        # 0x140016538
   140002fa3:	mov    QWORD PTR [rcx],rax
   140002fa6:	xor    eax,eax
   140002fa8:	mov    DWORD PTR [rcx+0x28],eax
   140002fab:	mov    DWORD PTR [rcx+0x2c],eax
   140002fae:	mov    DWORD PTR [rcx+0x30],eax
   140002fb1:	mov    DWORD PTR [rcx+0x34],eax
   140002fb4:	mov    DWORD PTR [rcx+0x38],eax
   140002fb7:	mov    DWORD PTR [rcx+0x3c],eax
   140002fba:	mov    DWORD PTR [rcx+0x40],eax
   140002fbd:	mov    DWORD PTR [rcx+0x44],eax
   140002fc0:	mov    DWORD PTR [rcx+0x48],eax
   140002fc3:	mov    DWORD PTR [rcx+0x4c],eax
   140002fc6:	mov    DWORD PTR [rcx+0x50],eax
   140002fc9:	mov    DWORD PTR [rcx+0x54],eax
   140002fcc:	mov    DWORD PTR [rcx+0x58],eax
   140002fcf:	mov    DWORD PTR [rcx+0x5c],eax
   140002fd2:	mov    DWORD PTR [rcx+0x60],eax
   140002fd5:	mov    DWORD PTR [rcx+0x64],eax
   140002fd8:	mov    DWORD PTR [rcx+0x8],0x1a
   140002fdf:	mov    rax,rcx
   140002fe2:	ret    
   140002fe3:	int3   
   140002fe4:	int3   
   140002fe5:	int3   
   140002fe6:	int3   
   140002fe7:	int3   
   140002fe8:	int3   
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	mov    QWORD PTR [rcx+0x10],rdx
   140002ff4:	mov    QWORD PTR [rcx+0x18],r8
   140002ff8:	mov    QWORD PTR [rcx+0x20],r9
   140002ffc:	lea    rax,[rip+0x13585]        # 0x140016588
   140003003:	mov    QWORD PTR [rcx],rax
   140003006:	xor    eax,eax
   140003008:	mov    DWORD PTR [rcx+0x28],eax
   14000300b:	mov    DWORD PTR [rcx+0x2c],eax
   14000300e:	mov    DWORD PTR [rcx+0x30],eax
   140003011:	mov    DWORD PTR [rcx+0x34],eax
   140003014:	mov    DWORD PTR [rcx+0x38],eax
   140003017:	mov    DWORD PTR [rcx+0x3c],eax
   14000301a:	mov    DWORD PTR [rcx+0x40],eax
   14000301d:	mov    DWORD PTR [rcx+0x44],eax
   140003020:	mov    DWORD PTR [rcx+0x48],eax
   140003023:	mov    DWORD PTR [rcx+0x4c],eax
   140003026:	mov    DWORD PTR [rcx+0x50],eax
   140003029:	mov    DWORD PTR [rcx+0x54],eax
   14000302c:	mov    DWORD PTR [rcx+0x58],eax
   14000302f:	mov    DWORD PTR [rcx+0x5c],eax
   140003032:	mov    DWORD PTR [rcx+0x60],eax
   140003035:	mov    DWORD PTR [rcx+0x64],eax
   140003038:	mov    DWORD PTR [rcx+0x68],eax
   14000303b:	mov    DWORD PTR [rcx+0x6c],eax
   14000303e:	mov    DWORD PTR [rcx+0x70],eax
   140003041:	mov    DWORD PTR [rcx+0x74],eax
   140003044:	mov    DWORD PTR [rcx+0x8],0x25
   14000304b:	mov    rax,rcx
   14000304e:	ret    
   14000304f:	int3   
   140003050:	xor    r8d,r8d
   140003053:	lea    rax,[rip+0x1357e]        # 0x1400165d8
   14000305a:	mov    QWORD PTR [rcx],rax
   14000305d:	mov    DWORD PTR [rcx+0x8],r8d
   140003061:	mov    rax,QWORD PTR [rdx]
   140003064:	mov    QWORD PTR [rcx+0x10],rax
   140003068:	mov    eax,DWORD PTR [rdx+0x8]
   14000306b:	mov    DWORD PTR [rcx+0x18],eax
   14000306e:	mov    eax,DWORD PTR [rdx+0xc]
   140003071:	mov    DWORD PTR [rcx+0x1c],eax
   140003074:	mov    DWORD PTR [rcx+0x20],r8d
   140003078:	mov    DWORD PTR [rcx+0x24],r8d
   14000307c:	mov    DWORD PTR [rcx+0x28],r8d
   140003080:	mov    DWORD PTR [rcx+0x2c],r8d
   140003084:	mov    DWORD PTR [rcx+0x30],r8d
   140003088:	mov    DWORD PTR [rcx+0x34],r8d
   14000308c:	mov    DWORD PTR [rcx+0x38],r8d
   140003090:	mov    DWORD PTR [rcx+0x3c],r8d
   140003094:	mov    DWORD PTR [rcx+0x40],r8d
   140003098:	mov    DWORD PTR [rcx+0x44],r8d
   14000309c:	mov    DWORD PTR [rcx+0x48],r8d
   1400030a0:	mov    DWORD PTR [rcx+0x4c],r8d
   1400030a4:	mov    rax,rcx
   1400030a7:	mov    DWORD PTR [rcx+0x8],0xd
   1400030ae:	ret    
   1400030af:	int3   
   1400030b0:	mov    eax,DWORD PTR [rcx+0x40]
   1400030b3:	mov    DWORD PTR [rdx],eax
   1400030b5:	mov    eax,DWORD PTR [rcx+0x44]
   1400030b8:	mov    DWORD PTR [rdx+0x4],eax
   1400030bb:	mov    eax,DWORD PTR [rcx+0x48]
   1400030be:	mov    DWORD PTR [rdx+0x8],eax
   1400030c1:	mov    eax,DWORD PTR [rcx+0x4c]
   1400030c4:	mov    DWORD PTR [rdx+0xc],eax
   1400030c7:	mov    rax,rdx
   1400030ca:	ret    
   1400030cb:	int3   
   1400030cc:	int3   
   1400030cd:	int3   
   1400030ce:	int3   
   1400030cf:	int3   
   1400030d0:	xor    r8d,r8d
   1400030d3:	lea    rax,[rip+0x1354e]        # 0x140016628
   1400030da:	mov    QWORD PTR [rcx],rax
   1400030dd:	mov    DWORD PTR [rcx+0x8],r8d
   1400030e1:	mov    rax,QWORD PTR [rdx]
   1400030e4:	mov    QWORD PTR [rcx+0x10],rax
   1400030e8:	mov    eax,DWORD PTR [rdx+0x8]
   1400030eb:	mov    DWORD PTR [rcx+0x18],eax
   1400030ee:	mov    eax,DWORD PTR [rdx+0xc]
   1400030f1:	mov    DWORD PTR [rcx+0x1c],eax
   1400030f4:	mov    DWORD PTR [rcx+0x20],r8d
   1400030f8:	mov    DWORD PTR [rcx+0x24],r8d
   1400030fc:	mov    DWORD PTR [rcx+0x28],r8d
   140003100:	mov    DWORD PTR [rcx+0x2c],r8d
   140003104:	mov    DWORD PTR [rcx+0x30],r8d
   140003108:	mov    DWORD PTR [rcx+0x34],r8d
   14000310c:	mov    DWORD PTR [rcx+0x38],r8d
   140003110:	mov    DWORD PTR [rcx+0x3c],r8d
   140003114:	mov    DWORD PTR [rcx+0x40],r8d
   140003118:	mov    DWORD PTR [rcx+0x44],r8d
   14000311c:	mov    DWORD PTR [rcx+0x48],r8d
   140003120:	mov    DWORD PTR [rcx+0x4c],r8d
   140003124:	mov    rax,rcx
   140003127:	mov    DWORD PTR [rcx+0x8],0x6
   14000312e:	ret    
   14000312f:	int3   
   140003130:	mov    QWORD PTR [rcx+0x10],rdx
   140003134:	lea    rax,[rip+0x1353d]        # 0x140016678
   14000313b:	mov    QWORD PTR [rcx],rax
   14000313e:	xor    eax,eax
   140003140:	mov    DWORD PTR [rcx+0x18],eax
   140003143:	mov    DWORD PTR [rcx+0x1c],eax
   140003146:	mov    DWORD PTR [rcx+0x20],eax
   140003149:	mov    DWORD PTR [rcx+0x24],eax
   14000314c:	mov    DWORD PTR [rcx+0x28],eax
   14000314f:	mov    DWORD PTR [rcx+0x2c],eax
   140003152:	mov    DWORD PTR [rcx+0x30],eax
   140003155:	mov    DWORD PTR [rcx+0x34],eax
   140003158:	mov    DWORD PTR [rcx+0x8],0x38
   14000315f:	mov    rax,rcx
   140003162:	ret    
   140003163:	int3   
   140003164:	int3   
   140003165:	int3   
   140003166:	int3   
   140003167:	int3   
   140003168:	int3   
   140003169:	int3   
   14000316a:	int3   
   14000316b:	int3   
   14000316c:	int3   
   14000316d:	int3   
   14000316e:	int3   
   14000316f:	int3   
   140003170:	mov    QWORD PTR [rcx+0x10],rdx
   140003174:	mov    QWORD PTR [rcx+0x18],r8
   140003178:	lea    rax,[rip+0x13549]        # 0x1400166c8
   14000317f:	mov    QWORD PTR [rcx],rax
   140003182:	xor    eax,eax
   140003184:	mov    DWORD PTR [rcx+0x20],eax
   140003187:	mov    DWORD PTR [rcx+0x24],eax
   14000318a:	mov    DWORD PTR [rcx+0x28],eax
   14000318d:	mov    DWORD PTR [rcx+0x2c],eax
   140003190:	mov    DWORD PTR [rcx+0x30],eax
   140003193:	mov    DWORD PTR [rcx+0x34],eax
   140003196:	mov    DWORD PTR [rcx+0x38],eax
   140003199:	mov    DWORD PTR [rcx+0x3c],eax
   14000319c:	mov    DWORD PTR [rcx+0x40],eax
   14000319f:	mov    DWORD PTR [rcx+0x44],eax
   1400031a2:	mov    DWORD PTR [rcx+0x48],eax
   1400031a5:	mov    DWORD PTR [rcx+0x4c],eax
   1400031a8:	mov    DWORD PTR [rcx+0x8],0x4d
   1400031af:	mov    rax,rcx
   1400031b2:	ret    
   1400031b3:	int3   
   1400031b4:	int3   
   1400031b5:	int3   
   1400031b6:	int3   
   1400031b7:	int3   
   1400031b8:	int3   
   1400031b9:	int3   
   1400031ba:	int3   
   1400031bb:	int3   
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	rex push rbx
   1400031c2:	sub    rsp,0x20
   1400031c6:	mov    rcx,QWORD PTR [rcx+0x18]
   1400031ca:	mov    rbx,rdx
   1400031cd:	mov    rax,QWORD PTR [rcx]
   1400031d0:	call   QWORD PTR [rax+0x38]
   1400031d3:	mov    rax,rbx
   1400031d6:	add    rsp,0x20
   1400031da:	pop    rbx
   1400031db:	ret    
   1400031dc:	int3   
   1400031dd:	int3   
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	mov    QWORD PTR [rcx+0x10],rdx
   1400031e4:	mov    QWORD PTR [rcx+0x18],r8
   1400031e8:	mov    QWORD PTR [rcx+0x20],r9
   1400031ec:	lea    rax,[rip+0x13525]        # 0x140016718
   1400031f3:	mov    QWORD PTR [rcx],rax
   1400031f6:	xor    eax,eax
   1400031f8:	mov    DWORD PTR [rcx+0x28],eax
   1400031fb:	mov    DWORD PTR [rcx+0x2c],eax
   1400031fe:	mov    DWORD PTR [rcx+0x30],eax
   140003201:	mov    DWORD PTR [rcx+0x34],eax
   140003204:	mov    DWORD PTR [rcx+0x38],eax
   140003207:	mov    DWORD PTR [rcx+0x3c],eax
   14000320a:	mov    DWORD PTR [rcx+0x40],eax
   14000320d:	mov    DWORD PTR [rcx+0x44],eax
   140003210:	mov    DWORD PTR [rcx+0x8],0x8
   140003217:	mov    rax,rcx
   14000321a:	ret    
   14000321b:	int3   
   14000321c:	int3   
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	mov    QWORD PTR [rcx+0x10],rdx
   140003224:	mov    QWORD PTR [rcx+0x18],r8
   140003228:	lea    rax,[rip+0x13539]        # 0x140016768
   14000322f:	mov    QWORD PTR [rcx],rax
   140003232:	xor    eax,eax
   140003234:	mov    DWORD PTR [rcx+0x20],eax
   140003237:	mov    DWORD PTR [rcx+0x24],eax
   14000323a:	mov    DWORD PTR [rcx+0x28],eax
   14000323d:	mov    DWORD PTR [rcx+0x2c],eax
   140003240:	mov    DWORD PTR [rcx+0x30],eax
   140003243:	mov    DWORD PTR [rcx+0x34],eax
   140003246:	mov    DWORD PTR [rcx+0x38],eax
   140003249:	mov    DWORD PTR [rcx+0x3c],eax
   14000324c:	mov    DWORD PTR [rcx+0x40],eax
   14000324f:	mov    DWORD PTR [rcx+0x44],eax
   140003252:	mov    DWORD PTR [rcx+0x48],eax
   140003255:	mov    DWORD PTR [rcx+0x4c],eax
   140003258:	mov    DWORD PTR [rcx+0x8],0x3f
   14000325f:	mov    rax,rcx
   140003262:	ret    
   140003263:	int3   
   140003264:	int3   
   140003265:	int3   
   140003266:	int3   
   140003267:	int3   
   140003268:	int3   
   140003269:	int3   
   14000326a:	int3   
   14000326b:	int3   
   14000326c:	int3   
   14000326d:	int3   
   14000326e:	int3   
   14000326f:	int3   
   140003270:	mov    r8,QWORD PTR [rcx+0x18]
   140003274:	mov    eax,DWORD PTR [r8+0x38]
   140003278:	mov    DWORD PTR [rdx],eax
   14000327a:	mov    eax,DWORD PTR [r8+0x3c]
   14000327e:	mov    DWORD PTR [rdx+0x4],eax
   140003281:	mov    eax,DWORD PTR [r8+0x40]
   140003285:	mov    DWORD PTR [rdx+0x8],eax
   140003288:	mov    eax,DWORD PTR [r8+0x44]
   14000328c:	mov    DWORD PTR [rdx+0xc],eax
   14000328f:	mov    rax,rdx
   140003292:	ret    
   140003293:	int3   
   140003294:	int3   
   140003295:	int3   
   140003296:	int3   
   140003297:	int3   
   140003298:	int3   
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	int3   
   14000329d:	int3   
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	mov    QWORD PTR [rcx+0x10],rdx
   1400032a4:	mov    QWORD PTR [rcx+0x18],r8
   1400032a8:	lea    rax,[rip+0x13509]        # 0x1400167b8
   1400032af:	mov    QWORD PTR [rcx],rax
   1400032b2:	xor    eax,eax
   1400032b4:	mov    DWORD PTR [rcx+0x20],eax
   1400032b7:	mov    DWORD PTR [rcx+0x24],eax
   1400032ba:	mov    DWORD PTR [rcx+0x28],eax
   1400032bd:	mov    DWORD PTR [rcx+0x2c],eax
   1400032c0:	mov    DWORD PTR [rcx+0x30],eax
   1400032c3:	mov    DWORD PTR [rcx+0x34],eax
   1400032c6:	mov    DWORD PTR [rcx+0x38],eax
   1400032c9:	mov    DWORD PTR [rcx+0x3c],eax
   1400032cc:	mov    DWORD PTR [rcx+0x8],0x9
   1400032d3:	mov    rax,rcx
   1400032d6:	ret    
   1400032d7:	int3   
   1400032d8:	int3   
   1400032d9:	int3   
   1400032da:	int3   
   1400032db:	int3   
   1400032dc:	int3   
   1400032dd:	int3   
   1400032de:	int3   
   1400032df:	int3   
   1400032e0:	rex push rbx
   1400032e2:	sub    rsp,0x30
   1400032e6:	cmp    QWORD PTR [rcx+0x18],0x0
   1400032eb:	mov    rbx,rdx
   1400032ee:	je     0x140003304
   1400032f0:	mov    rcx,QWORD PTR [rcx+0x18]
   1400032f4:	lea    rdx,[rsp+0x20]
   1400032f9:	mov    rax,QWORD PTR [rcx]
   1400032fc:	call   QWORD PTR [rax+0x38]
   1400032ff:	mov    rcx,rax
   140003302:	jmp    0x140003308
   140003304:	add    rcx,0x30
   140003308:	mov    eax,DWORD PTR [rcx]
   14000330a:	mov    DWORD PTR [rbx],eax
   14000330c:	mov    eax,DWORD PTR [rcx+0x4]
   14000330f:	mov    DWORD PTR [rbx+0x4],eax
   140003312:	mov    eax,DWORD PTR [rcx+0x8]
   140003315:	mov    DWORD PTR [rbx+0x8],eax
   140003318:	mov    eax,DWORD PTR [rcx+0xc]
   14000331b:	mov    DWORD PTR [rbx+0xc],eax
   14000331e:	mov    rax,rbx
   140003321:	add    rsp,0x30
   140003325:	pop    rbx
   140003326:	ret    
   140003327:	int3   
   140003328:	int3   
   140003329:	int3   
   14000332a:	int3   
   14000332b:	int3   
   14000332c:	int3   
   14000332d:	int3   
   14000332e:	int3   
   14000332f:	int3   
   140003330:	mov    QWORD PTR [rcx+0x10],rdx
   140003334:	lea    rax,[rip+0x1351d]        # 0x140016858
   14000333b:	mov    QWORD PTR [rcx],rax
   14000333e:	xor    eax,eax
   140003340:	mov    DWORD PTR [rcx+0x18],eax
   140003343:	mov    DWORD PTR [rcx+0x1c],eax
   140003346:	mov    DWORD PTR [rcx+0x20],eax
   140003349:	mov    DWORD PTR [rcx+0x24],eax
   14000334c:	mov    DWORD PTR [rcx+0x28],eax
   14000334f:	mov    DWORD PTR [rcx+0x2c],eax
   140003352:	mov    DWORD PTR [rcx+0x30],eax
   140003355:	mov    DWORD PTR [rcx+0x34],eax
   140003358:	mov    DWORD PTR [rcx+0x8],0xf
   14000335f:	mov    rax,rcx
   140003362:	ret    
   140003363:	int3   
   140003364:	int3   
   140003365:	int3   
   140003366:	int3   
   140003367:	int3   
   140003368:	int3   
   140003369:	int3   
   14000336a:	int3   
   14000336b:	int3   
   14000336c:	int3   
   14000336d:	int3   
   14000336e:	int3   
   14000336f:	int3   
   140003370:	rex push rbx
   140003372:	sub    rsp,0x30
   140003376:	cmp    QWORD PTR [rcx+0x10],0x0
   14000337b:	mov    rbx,rdx
   14000337e:	je     0x140003394
   140003380:	mov    rcx,QWORD PTR [rcx+0x10]
   140003384:	lea    rdx,[rsp+0x20]
   140003389:	mov    rax,QWORD PTR [rcx]
   14000338c:	call   QWORD PTR [rax+0x38]
   14000338f:	mov    rcx,rax
   140003392:	jmp    0x140003398
   140003394:	add    rcx,0x28
   140003398:	mov    eax,DWORD PTR [rcx]
   14000339a:	mov    DWORD PTR [rbx],eax
   14000339c:	mov    eax,DWORD PTR [rcx+0x4]
   14000339f:	mov    DWORD PTR [rbx+0x4],eax
   1400033a2:	mov    eax,DWORD PTR [rcx+0x8]
   1400033a5:	mov    DWORD PTR [rbx+0x8],eax
   1400033a8:	mov    eax,DWORD PTR [rcx+0xc]
   1400033ab:	mov    DWORD PTR [rbx+0xc],eax
   1400033ae:	mov    rax,rbx
   1400033b1:	add    rsp,0x30
   1400033b5:	pop    rbx
   1400033b6:	ret    
   1400033b7:	int3   
   1400033b8:	int3   
   1400033b9:	int3   
   1400033ba:	int3   
   1400033bb:	int3   
   1400033bc:	int3   
   1400033bd:	int3   
   1400033be:	int3   
   1400033bf:	int3   
   1400033c0:	xor    r9d,r9d
   1400033c3:	lea    rax,[rip+0x134de]        # 0x1400168a8
   1400033ca:	mov    QWORD PTR [rcx],rax
   1400033cd:	mov    DWORD PTR [rcx+0x8],r9d
   1400033d1:	mov    rax,QWORD PTR [rdx]
   1400033d4:	mov    QWORD PTR [rcx+0x10],rax
   1400033d8:	mov    eax,DWORD PTR [rdx+0x8]
   1400033db:	mov    DWORD PTR [rcx+0x18],eax
   1400033de:	mov    eax,DWORD PTR [rdx+0xc]
   1400033e1:	mov    DWORD PTR [rcx+0x1c],eax
   1400033e4:	mov    QWORD PTR [rcx+0x20],r8
   1400033e8:	mov    DWORD PTR [rcx+0x28],r9d
   1400033ec:	mov    DWORD PTR [rcx+0x2c],r9d
   1400033f0:	mov    DWORD PTR [rcx+0x30],r9d
   1400033f4:	mov    DWORD PTR [rcx+0x34],r9d
   1400033f8:	mov    DWORD PTR [rcx+0x38],r9d
   1400033fc:	mov    DWORD PTR [rcx+0x3c],r9d
   140003400:	mov    DWORD PTR [rcx+0x40],r9d
   140003404:	mov    DWORD PTR [rcx+0x44],r9d
   140003408:	mov    rax,rcx
   14000340b:	mov    DWORD PTR [rcx+0x8],0x24
   140003412:	ret    
   140003413:	int3   
   140003414:	int3   
   140003415:	int3   
   140003416:	int3   
   140003417:	int3   
   140003418:	int3   
   140003419:	int3   
   14000341a:	int3   
   14000341b:	int3   
   14000341c:	int3   
   14000341d:	int3   
   14000341e:	int3   
   14000341f:	int3   
   140003420:	rex push rbx
   140003422:	sub    rsp,0x20
   140003426:	mov    rcx,QWORD PTR [rcx+0x20]
   14000342a:	mov    rbx,rdx
   14000342d:	mov    rax,QWORD PTR [rcx]
   140003430:	call   QWORD PTR [rax+0x38]
   140003433:	mov    rax,rbx
   140003436:	add    rsp,0x20
   14000343a:	pop    rbx
   14000343b:	ret    
   14000343c:	int3   
   14000343d:	int3   
   14000343e:	int3   
   14000343f:	int3   
   140003440:	mov    QWORD PTR [rcx+0x10],rdx
   140003444:	lea    rax,[rip+0x134ad]        # 0x1400168f8
   14000344b:	mov    QWORD PTR [rcx],rax
   14000344e:	xor    eax,eax
   140003450:	mov    DWORD PTR [rcx+0x18],eax
   140003453:	mov    DWORD PTR [rcx+0x1c],eax
   140003456:	mov    DWORD PTR [rcx+0x20],eax
   140003459:	mov    DWORD PTR [rcx+0x24],eax
   14000345c:	mov    DWORD PTR [rcx+0x28],eax
   14000345f:	mov    DWORD PTR [rcx+0x2c],eax
   140003462:	mov    DWORD PTR [rcx+0x30],eax
   140003465:	mov    DWORD PTR [rcx+0x34],eax
   140003468:	mov    DWORD PTR [rcx+0x8],0x41
   14000346f:	mov    rax,rcx
   140003472:	ret    
   140003473:	int3   
   140003474:	int3   
   140003475:	int3   
   140003476:	int3   
   140003477:	int3   
   140003478:	int3   
   140003479:	int3   
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	int3   
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	xor    r9d,r9d
   140003483:	lea    rax,[rip+0x134be]        # 0x140016948
   14000348a:	mov    QWORD PTR [rcx],rax
   14000348d:	mov    DWORD PTR [rcx+0x8],r9d
   140003491:	mov    rax,QWORD PTR [rdx]
   140003494:	mov    QWORD PTR [rcx+0x10],rax
   140003498:	mov    eax,DWORD PTR [rdx+0x8]
   14000349b:	mov    DWORD PTR [rcx+0x18],eax
   14000349e:	mov    eax,DWORD PTR [rdx+0xc]
   1400034a1:	mov    DWORD PTR [rcx+0x1c],eax
   1400034a4:	mov    QWORD PTR [rcx+0x20],r8
   1400034a8:	mov    DWORD PTR [rcx+0x28],r9d
   1400034ac:	mov    DWORD PTR [rcx+0x2c],r9d
   1400034b0:	mov    DWORD PTR [rcx+0x30],r9d
   1400034b4:	mov    DWORD PTR [rcx+0x34],r9d
   1400034b8:	mov    DWORD PTR [rcx+0x38],r9d
   1400034bc:	mov    DWORD PTR [rcx+0x3c],r9d
   1400034c0:	mov    DWORD PTR [rcx+0x40],r9d
   1400034c4:	mov    DWORD PTR [rcx+0x44],r9d
   1400034c8:	mov    DWORD PTR [rcx+0x48],r9d
   1400034cc:	mov    DWORD PTR [rcx+0x4c],r9d
   1400034d0:	mov    DWORD PTR [rcx+0x50],r9d
   1400034d4:	mov    DWORD PTR [rcx+0x54],r9d
   1400034d8:	mov    DWORD PTR [rcx+0x58],r9d
   1400034dc:	mov    DWORD PTR [rcx+0x5c],r9d
   1400034e0:	mov    DWORD PTR [rcx+0x60],r9d
   1400034e4:	mov    DWORD PTR [rcx+0x64],r9d
   1400034e8:	mov    DWORD PTR [rcx+0x8],0xb
   1400034ef:	mov    rax,rcx
   1400034f2:	ret    
   1400034f3:	int3   
   1400034f4:	int3   
   1400034f5:	int3   
   1400034f6:	int3   
   1400034f7:	int3   
   1400034f8:	int3   
   1400034f9:	int3   
   1400034fa:	int3   
   1400034fb:	int3   
   1400034fc:	int3   
   1400034fd:	int3   
   1400034fe:	int3   
   1400034ff:	int3   
   140003500:	mov    eax,DWORD PTR [rcx+0x28]
   140003503:	mov    DWORD PTR [rdx],eax
   140003505:	mov    eax,DWORD PTR [rcx+0x2c]
   140003508:	mov    DWORD PTR [rdx+0x4],eax
   14000350b:	mov    eax,DWORD PTR [rcx+0x30]
   14000350e:	mov    DWORD PTR [rdx+0x8],eax
   140003511:	mov    eax,DWORD PTR [rcx+0x34]
   140003514:	mov    DWORD PTR [rdx+0xc],eax
   140003517:	mov    rax,rdx
   14000351a:	ret    
   14000351b:	int3   
   14000351c:	int3   
   14000351d:	int3   
   14000351e:	int3   
   14000351f:	int3   
   140003520:	rex push rbx
   140003522:	sub    rsp,0x20
   140003526:	mov    rax,QWORD PTR [rcx+0x20]
   14000352a:	mov    rbx,rdx
   14000352d:	test   rax,rax
   140003530:	je     0x140003556
   140003532:	mov    rcx,QWORD PTR [rax+0x10]
   140003536:	mov    eax,DWORD PTR [rcx+0x28]
   140003539:	mov    DWORD PTR [rdx],eax
   14000353b:	mov    eax,DWORD PTR [rcx+0x2c]
   14000353e:	mov    DWORD PTR [rdx+0x4],eax
   140003541:	mov    eax,DWORD PTR [rcx+0x30]
   140003544:	mov    DWORD PTR [rdx+0x8],eax
   140003547:	mov    eax,DWORD PTR [rcx+0x34]
   14000354a:	mov    DWORD PTR [rdx+0xc],eax
   14000354d:	mov    rax,rdx
   140003550:	add    rsp,0x20
   140003554:	pop    rbx
   140003555:	ret    
   140003556:	mov    rax,QWORD PTR [rcx+0x18]
   14000355a:	test   rax,rax
   14000355d:	je     0x140003583
   14000355f:	mov    rcx,QWORD PTR [rax+0x20]
   140003563:	mov    eax,DWORD PTR [rcx+0x28]
   140003566:	mov    DWORD PTR [rdx],eax
   140003568:	mov    eax,DWORD PTR [rcx+0x2c]
   14000356b:	mov    DWORD PTR [rdx+0x4],eax
   14000356e:	mov    eax,DWORD PTR [rcx+0x30]
   140003571:	mov    DWORD PTR [rdx+0x8],eax
   140003574:	mov    eax,DWORD PTR [rcx+0x34]
   140003577:	mov    DWORD PTR [rdx+0xc],eax
   14000357a:	mov    rax,rbx
   14000357d:	add    rsp,0x20
   140003581:	pop    rbx
   140003582:	ret    
   140003583:	mov    rcx,QWORD PTR [rcx+0x10]
   140003587:	mov    rax,QWORD PTR [rcx]
   14000358a:	call   QWORD PTR [rax+0x38]
   14000358d:	mov    rax,rbx
   140003590:	add    rsp,0x20
   140003594:	pop    rbx
   140003595:	ret    
   140003596:	int3   
   140003597:	int3   
   140003598:	int3   
   140003599:	int3   
   14000359a:	int3   
   14000359b:	int3   
   14000359c:	int3   
   14000359d:	int3   
   14000359e:	int3   
   14000359f:	int3   
   1400035a0:	xor    r10d,r10d
   1400035a3:	lea    rax,[rip+0x1348e]        # 0x140016a38
   1400035aa:	mov    QWORD PTR [rcx],rax
   1400035ad:	mov    DWORD PTR [rcx+0x8],r10d
   1400035b1:	mov    rax,QWORD PTR [rdx]
   1400035b4:	mov    QWORD PTR [rcx+0x10],rax
   1400035b8:	mov    eax,DWORD PTR [rdx+0x8]
   1400035bb:	mov    DWORD PTR [rcx+0x18],eax
   1400035be:	mov    eax,DWORD PTR [rdx+0xc]
   1400035c1:	mov    DWORD PTR [rcx+0x1c],eax
   1400035c4:	mov    QWORD PTR [rcx+0x20],r8
   1400035c8:	mov    QWORD PTR [rcx+0x28],r9
   1400035cc:	mov    DWORD PTR [rcx+0x30],r10d
   1400035d0:	mov    DWORD PTR [rcx+0x34],r10d
   1400035d4:	mov    DWORD PTR [rcx+0x38],r10d
   1400035d8:	mov    DWORD PTR [rcx+0x3c],r10d
   1400035dc:	mov    DWORD PTR [rcx+0x40],r10d
   1400035e0:	mov    DWORD PTR [rcx+0x44],r10d
   1400035e4:	mov    DWORD PTR [rcx+0x48],r10d
   1400035e8:	mov    DWORD PTR [rcx+0x4c],r10d
   1400035ec:	mov    DWORD PTR [rcx+0x50],r10d
   1400035f0:	mov    DWORD PTR [rcx+0x54],r10d
   1400035f4:	mov    DWORD PTR [rcx+0x58],r10d
   1400035f8:	mov    DWORD PTR [rcx+0x5c],r10d
   1400035fc:	mov    DWORD PTR [rcx+0x60],r10d
   140003600:	mov    DWORD PTR [rcx+0x64],r10d
   140003604:	mov    DWORD PTR [rcx+0x68],r10d
   140003608:	mov    DWORD PTR [rcx+0x6c],r10d
   14000360c:	mov    DWORD PTR [rcx+0x70],r10d
   140003610:	mov    DWORD PTR [rcx+0x74],r10d
   140003614:	mov    DWORD PTR [rcx+0x78],r10d
   140003618:	mov    DWORD PTR [rcx+0x7c],r10d
   14000361c:	mov    DWORD PTR [rcx+0x80],r10d
   140003623:	mov    DWORD PTR [rcx+0x84],r10d
   14000362a:	mov    DWORD PTR [rcx+0x88],r10d
   140003631:	mov    DWORD PTR [rcx+0x8c],r10d
   140003638:	mov    DWORD PTR [rcx+0x8],0x1f
   14000363f:	mov    rax,rcx
   140003642:	ret    
   140003643:	int3   
   140003644:	int3   
   140003645:	int3   
   140003646:	int3   
   140003647:	int3   
   140003648:	int3   
   140003649:	int3   
   14000364a:	int3   
   14000364b:	int3   
   14000364c:	int3   
   14000364d:	int3   
   14000364e:	int3   
   14000364f:	int3   
   140003650:	mov    eax,DWORD PTR [rcx+0x80]
   140003656:	mov    DWORD PTR [rdx],eax
   140003658:	mov    eax,DWORD PTR [rcx+0x84]
   14000365e:	mov    DWORD PTR [rdx+0x4],eax
   140003661:	mov    eax,DWORD PTR [rcx+0x88]
   140003667:	mov    DWORD PTR [rdx+0x8],eax
   14000366a:	mov    eax,DWORD PTR [rcx+0x8c]
   140003670:	mov    DWORD PTR [rdx+0xc],eax
   140003673:	mov    rax,rdx
   140003676:	ret    
   140003677:	int3   
   140003678:	int3   
   140003679:	int3   
   14000367a:	int3   
   14000367b:	int3   
   14000367c:	int3   
   14000367d:	int3   
   14000367e:	int3   
   14000367f:	int3   
   140003680:	xor    r10d,r10d
   140003683:	lea    rax,[rip+0x133ae]        # 0x140016a38
   14000368a:	mov    QWORD PTR [rcx],rax
   14000368d:	mov    DWORD PTR [rcx+0x8],r10d
   140003691:	mov    rax,QWORD PTR [rdx]
   140003694:	mov    QWORD PTR [rcx+0x10],rax
   140003698:	mov    eax,DWORD PTR [rdx+0x8]
   14000369b:	mov    DWORD PTR [rcx+0x18],eax
   14000369e:	mov    eax,DWORD PTR [rdx+0xc]
   1400036a1:	mov    DWORD PTR [rcx+0x1c],eax
   1400036a4:	mov    QWORD PTR [rcx+0x20],r8
   1400036a8:	mov    QWORD PTR [rcx+0x28],r9
   1400036ac:	mov    DWORD PTR [rcx+0x30],r10d
   1400036b0:	mov    DWORD PTR [rcx+0x34],r10d
   1400036b4:	mov    DWORD PTR [rcx+0x38],r10d
   1400036b8:	mov    DWORD PTR [rcx+0x3c],r10d
   1400036bc:	mov    DWORD PTR [rcx+0x40],r10d
   1400036c0:	mov    DWORD PTR [rcx+0x44],r10d
   1400036c4:	mov    DWORD PTR [rcx+0x48],r10d
   1400036c8:	mov    DWORD PTR [rcx+0x4c],r10d
   1400036cc:	mov    DWORD PTR [rcx+0x50],r10d
   1400036d0:	mov    DWORD PTR [rcx+0x54],r10d
   1400036d4:	mov    DWORD PTR [rcx+0x58],r10d
   1400036d8:	mov    DWORD PTR [rcx+0x5c],r10d
   1400036dc:	mov    DWORD PTR [rcx+0x60],r10d
   1400036e0:	mov    DWORD PTR [rcx+0x64],r10d
   1400036e4:	mov    DWORD PTR [rcx+0x68],r10d
   1400036e8:	mov    DWORD PTR [rcx+0x6c],r10d
   1400036ec:	mov    DWORD PTR [rcx+0x70],r10d
   1400036f0:	mov    DWORD PTR [rcx+0x74],r10d
   1400036f4:	mov    DWORD PTR [rcx+0x78],r10d
   1400036f8:	mov    DWORD PTR [rcx+0x7c],r10d
   1400036fc:	lea    rax,[rip+0x13385]        # 0x140016a88
   140003703:	mov    DWORD PTR [rcx+0x80],r10d
   14000370a:	mov    DWORD PTR [rcx+0x84],r10d
   140003711:	mov    DWORD PTR [rcx+0x88],r10d
   140003718:	mov    DWORD PTR [rcx+0x8c],r10d
   14000371f:	mov    QWORD PTR [rcx],rax
   140003722:	mov    rax,rcx
   140003725:	mov    DWORD PTR [rcx+0x8],0x1e
   14000372c:	ret    
   14000372d:	int3   
   14000372e:	int3   
   14000372f:	int3   
   140003730:	xor    r8d,r8d
   140003733:	lea    rax,[rip+0x1339e]        # 0x140016ad8
   14000373a:	mov    QWORD PTR [rcx],rax
   14000373d:	mov    DWORD PTR [rcx+0x8],r8d
   140003741:	mov    rax,QWORD PTR [rdx]
   140003744:	mov    QWORD PTR [rcx+0x10],rax
   140003748:	mov    eax,DWORD PTR [rdx+0x8]
   14000374b:	mov    DWORD PTR [rcx+0x18],eax
   14000374e:	mov    eax,DWORD PTR [rdx+0xc]
   140003751:	mov    DWORD PTR [rcx+0x1c],eax
   140003754:	mov    QWORD PTR [rcx+0x20],rcx
   140003758:	mov    DWORD PTR [rcx+0x28],r8d
   14000375c:	mov    DWORD PTR [rcx+0x2c],r8d
   140003760:	mov    DWORD PTR [rcx+0x30],r8d
   140003764:	mov    DWORD PTR [rcx+0x34],r8d
   140003768:	mov    DWORD PTR [rcx+0x38],r8d
   14000376c:	mov    DWORD PTR [rcx+0x3c],r8d
   140003770:	mov    DWORD PTR [rcx+0x40],r8d
   140003774:	mov    DWORD PTR [rcx+0x44],r8d
   140003778:	mov    rax,rcx
   14000377b:	mov    DWORD PTR [rcx+0x8],0x1c
   140003782:	ret    
   140003783:	int3   
   140003784:	int3   
   140003785:	int3   
   140003786:	int3   
   140003787:	int3   
   140003788:	int3   
   140003789:	int3   
   14000378a:	int3   
   14000378b:	int3   
   14000378c:	int3   
   14000378d:	int3   
   14000378e:	int3   
   14000378f:	int3   
   140003790:	xor    r9d,r9d
   140003793:	lea    rax,[rip+0x1333e]        # 0x140016ad8
   14000379a:	mov    QWORD PTR [rcx],rax
   14000379d:	mov    DWORD PTR [rcx+0x8],r9d
   1400037a1:	mov    rax,QWORD PTR [r8]
   1400037a4:	mov    QWORD PTR [rcx+0x10],rax
   1400037a8:	mov    eax,DWORD PTR [r8+0x8]
   1400037ac:	mov    DWORD PTR [rcx+0x18],eax
   1400037af:	mov    eax,DWORD PTR [r8+0xc]
   1400037b3:	mov    DWORD PTR [rcx+0x1c],eax
   1400037b6:	mov    DWORD PTR [rcx+0x28],r9d
   1400037ba:	mov    DWORD PTR [rcx+0x2c],r9d
   1400037be:	mov    DWORD PTR [rcx+0x30],r9d
   1400037c2:	mov    DWORD PTR [rcx+0x34],r9d
   1400037c6:	mov    DWORD PTR [rcx+0x38],r9d
   1400037ca:	mov    DWORD PTR [rcx+0x3c],r9d
   1400037ce:	mov    DWORD PTR [rcx+0x40],r9d
   1400037d2:	mov    DWORD PTR [rcx+0x44],r9d
   1400037d6:	mov    DWORD PTR [rcx+0x8],0x1c
   1400037dd:	mov    rax,QWORD PTR [rdx+0x20]
   1400037e1:	mov    QWORD PTR [rcx+0x20],rax
   1400037e5:	mov    QWORD PTR [rdx+0x20],rcx
   1400037e9:	mov    rax,rcx
   1400037ec:	ret    
   1400037ed:	int3   
   1400037ee:	int3   
   1400037ef:	int3   
   1400037f0:	rex push rbx
   1400037f2:	sub    rsp,0x30
   1400037f6:	cmp    QWORD PTR [rcx+0x20],0x0
   1400037fb:	mov    rbx,rdx
   1400037fe:	je     0x140003814
   140003800:	mov    rcx,QWORD PTR [rcx+0x20]
   140003804:	lea    rdx,[rsp+0x20]
   140003809:	mov    rax,QWORD PTR [rcx]
   14000380c:	call   QWORD PTR [rax+0x38]
   14000380f:	mov    rcx,rax
   140003812:	jmp    0x140003818
   140003814:	add    rcx,0x38
   140003818:	mov    eax,DWORD PTR [rcx]
   14000381a:	mov    DWORD PTR [rbx],eax
   14000381c:	mov    eax,DWORD PTR [rcx+0x4]
   14000381f:	mov    DWORD PTR [rbx+0x4],eax
   140003822:	mov    eax,DWORD PTR [rcx+0x8]
   140003825:	mov    DWORD PTR [rbx+0x8],eax
   140003828:	mov    eax,DWORD PTR [rcx+0xc]
   14000382b:	mov    DWORD PTR [rbx+0xc],eax
   14000382e:	mov    rax,rbx
   140003831:	add    rsp,0x30
   140003835:	pop    rbx
   140003836:	ret    
   140003837:	int3   
   140003838:	int3   
   140003839:	int3   
   14000383a:	int3   
   14000383b:	int3   
   14000383c:	int3   
   14000383d:	int3   
   14000383e:	int3   
   14000383f:	int3   
   140003840:	rex push rbx
   140003842:	sub    rsp,0x30
   140003846:	cmp    QWORD PTR [rcx+0x10],0x0
   14000384b:	mov    rbx,rdx
   14000384e:	je     0x140003864
   140003850:	mov    rcx,QWORD PTR [rcx+0x10]
   140003854:	lea    rdx,[rsp+0x20]
   140003859:	mov    rax,QWORD PTR [rcx]
   14000385c:	call   QWORD PTR [rax+0x30]
   14000385f:	mov    r11,rax
   140003862:	jmp    0x14000387b
   140003864:	xor    eax,eax
   140003866:	lea    r11,[rsp+0x20]
   14000386b:	mov    DWORD PTR [rsp+0x20],eax
   14000386f:	mov    DWORD PTR [rsp+0x24],eax
   140003873:	mov    DWORD PTR [rsp+0x28],eax
   140003877:	mov    DWORD PTR [rsp+0x2c],eax
   14000387b:	mov    eax,DWORD PTR [r11]
   14000387e:	mov    DWORD PTR [rbx],eax
   140003880:	mov    eax,DWORD PTR [r11+0x4]
   140003884:	mov    DWORD PTR [rbx+0x4],eax
   140003887:	mov    eax,DWORD PTR [r11+0x8]
   14000388b:	mov    DWORD PTR [rbx+0x8],eax
   14000388e:	mov    eax,DWORD PTR [r11+0xc]
   140003892:	mov    DWORD PTR [rbx+0xc],eax
   140003895:	mov    rax,rbx
   140003898:	add    rsp,0x30
   14000389c:	pop    rbx
   14000389d:	ret    
   14000389e:	int3   
   14000389f:	int3   
   1400038a0:	rex push rbx
   1400038a2:	sub    rsp,0x30
   1400038a6:	cmp    QWORD PTR [rcx+0x10],0x0
   1400038ab:	mov    rbx,rdx
   1400038ae:	je     0x1400038c4
   1400038b0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400038b4:	lea    rdx,[rsp+0x20]
   1400038b9:	mov    rax,QWORD PTR [rcx]
   1400038bc:	call   QWORD PTR [rax+0x38]
   1400038bf:	mov    r11,rax
   1400038c2:	jmp    0x1400038db
   1400038c4:	xor    eax,eax
   1400038c6:	lea    r11,[rsp+0x20]
   1400038cb:	mov    DWORD PTR [rsp+0x20],eax
   1400038cf:	mov    DWORD PTR [rsp+0x24],eax
   1400038d3:	mov    DWORD PTR [rsp+0x28],eax
   1400038d7:	mov    DWORD PTR [rsp+0x2c],eax
   1400038db:	mov    eax,DWORD PTR [r11]
   1400038de:	mov    DWORD PTR [rbx],eax
   1400038e0:	mov    eax,DWORD PTR [r11+0x4]
   1400038e4:	mov    DWORD PTR [rbx+0x4],eax
   1400038e7:	mov    eax,DWORD PTR [r11+0x8]
   1400038eb:	mov    DWORD PTR [rbx+0x8],eax
   1400038ee:	mov    eax,DWORD PTR [r11+0xc]
   1400038f2:	mov    DWORD PTR [rbx+0xc],eax
   1400038f5:	mov    rax,rbx
   1400038f8:	add    rsp,0x30
   1400038fc:	pop    rbx
   1400038fd:	ret    
   1400038fe:	int3   
   1400038ff:	int3   
   140003900:	rex push rbx
   140003902:	sub    rsp,0x20
   140003906:	mov    rcx,QWORD PTR [rcx+0x10]
   14000390a:	mov    rbx,rdx
   14000390d:	mov    rax,QWORD PTR [rcx]
   140003910:	call   QWORD PTR [rax+0x30]
   140003913:	mov    rax,rbx
   140003916:	add    rsp,0x20
   14000391a:	pop    rbx
   14000391b:	ret    
   14000391c:	int3   
   14000391d:	int3   
   14000391e:	int3   
   14000391f:	int3   
   140003920:	lea    rax,[rip+0x13391]        # 0x140016cb8
   140003927:	mov    QWORD PTR [rcx],rax
   14000392a:	xor    eax,eax
   14000392c:	mov    DWORD PTR [rcx+0x10],eax
   14000392f:	mov    DWORD PTR [rcx+0x14],eax
   140003932:	mov    DWORD PTR [rcx+0x18],eax
   140003935:	mov    DWORD PTR [rcx+0x1c],eax
   140003938:	mov    DWORD PTR [rcx+0x20],eax
   14000393b:	mov    DWORD PTR [rcx+0x24],eax
   14000393e:	mov    DWORD PTR [rcx+0x28],eax
   140003941:	mov    DWORD PTR [rcx+0x2c],eax
   140003944:	mov    DWORD PTR [rcx+0x8],0xe
   14000394b:	mov    rax,rcx
   14000394e:	ret    
   14000394f:	int3   
   140003950:	mov    eax,DWORD PTR [rcx+0x20]
   140003953:	mov    DWORD PTR [rdx],eax
   140003955:	mov    eax,DWORD PTR [rcx+0x24]
   140003958:	mov    DWORD PTR [rdx+0x4],eax
   14000395b:	mov    eax,DWORD PTR [rcx+0x28]
   14000395e:	mov    DWORD PTR [rdx+0x8],eax
   140003961:	mov    eax,DWORD PTR [rcx+0x2c]
   140003964:	mov    DWORD PTR [rdx+0xc],eax
   140003967:	mov    rax,rdx
   14000396a:	ret    
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	mov    QWORD PTR [rcx+0x10],rcx
   140003974:	xor    r8d,r8d
   140003977:	lea    rax,[rip+0x1338a]        # 0x140016d08
   14000397e:	mov    QWORD PTR [rcx],rax
   140003981:	mov    DWORD PTR [rcx+0x8],r8d
   140003985:	mov    rax,QWORD PTR [rdx]
   140003988:	mov    QWORD PTR [rcx+0x18],rax
   14000398c:	mov    eax,DWORD PTR [rdx+0x8]
   14000398f:	mov    DWORD PTR [rcx+0x20],eax
   140003992:	mov    eax,DWORD PTR [rdx+0xc]
   140003995:	mov    DWORD PTR [rcx+0x24],eax
   140003998:	mov    DWORD PTR [rcx+0x28],r8d
   14000399c:	mov    DWORD PTR [rcx+0x2c],r8d
   1400039a0:	mov    DWORD PTR [rcx+0x30],r8d
   1400039a4:	mov    DWORD PTR [rcx+0x34],r8d
   1400039a8:	mov    rax,rcx
   1400039ab:	mov    DWORD PTR [rcx+0x8],0x5a
   1400039b2:	ret    
   1400039b3:	int3   
   1400039b4:	int3   
   1400039b5:	int3   
   1400039b6:	int3   
   1400039b7:	int3   
   1400039b8:	int3   
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	xor    r8d,r8d
   1400039c3:	lea    rax,[rip+0x1338e]        # 0x140016d58
   1400039ca:	mov    QWORD PTR [rcx],rax
   1400039cd:	mov    DWORD PTR [rcx+0x8],r8d
   1400039d1:	mov    rax,QWORD PTR [rdx]
   1400039d4:	mov    QWORD PTR [rcx+0x10],rax
   1400039d8:	mov    eax,DWORD PTR [rdx+0x8]
   1400039db:	mov    DWORD PTR [rcx+0x18],eax
   1400039de:	mov    eax,DWORD PTR [rdx+0xc]
   1400039e1:	mov    DWORD PTR [rcx+0x1c],eax
   1400039e4:	mov    QWORD PTR [rcx+0x20],r8
   1400039e8:	mov    QWORD PTR [rcx+0x28],r8
   1400039ec:	mov    DWORD PTR [rcx+0x30],r8d
   1400039f0:	mov    DWORD PTR [rcx+0x34],r8d
   1400039f4:	mov    DWORD PTR [rcx+0x38],r8d
   1400039f8:	mov    DWORD PTR [rcx+0x3c],r8d
   1400039fc:	mov    DWORD PTR [rcx+0x40],r8d
   140003a00:	mov    DWORD PTR [rcx+0x44],r8d
   140003a04:	mov    DWORD PTR [rcx+0x48],r8d
   140003a08:	mov    DWORD PTR [rcx+0x4c],r8d
   140003a0c:	mov    DWORD PTR [rcx+0x50],r8d
   140003a10:	mov    DWORD PTR [rcx+0x54],r8d
   140003a14:	mov    DWORD PTR [rcx+0x58],r8d
   140003a18:	mov    DWORD PTR [rcx+0x5c],r8d
   140003a1c:	mov    DWORD PTR [rcx+0x60],r8d
   140003a20:	mov    DWORD PTR [rcx+0x64],r8d
   140003a24:	mov    DWORD PTR [rcx+0x68],r8d
   140003a28:	mov    DWORD PTR [rcx+0x6c],r8d
   140003a2c:	mov    DWORD PTR [rcx+0x70],r8d
   140003a30:	mov    DWORD PTR [rcx+0x74],r8d
   140003a34:	mov    DWORD PTR [rcx+0x78],r8d
   140003a38:	mov    DWORD PTR [rcx+0x7c],r8d
   140003a3c:	mov    DWORD PTR [rcx+0x80],r8d
   140003a43:	mov    DWORD PTR [rcx+0x84],r8d
   140003a4a:	mov    DWORD PTR [rcx+0x88],r8d
   140003a51:	mov    DWORD PTR [rcx+0x8c],r8d
   140003a58:	mov    DWORD PTR [rcx+0x90],r8d
   140003a5f:	mov    DWORD PTR [rcx+0x94],r8d
   140003a66:	mov    rax,rcx
   140003a69:	mov    DWORD PTR [rcx+0x8],0x50
   140003a70:	ret    
   140003a71:	int3   
   140003a72:	int3   
   140003a73:	int3   
   140003a74:	int3   
   140003a75:	int3   
   140003a76:	int3   
   140003a77:	int3   
   140003a78:	int3   
   140003a79:	int3   
   140003a7a:	int3   
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	lea    rax,[rip+0x132d1]        # 0x140016d58
   140003a87:	mov    QWORD PTR [rcx],rax
   140003a8a:	xor    eax,eax
   140003a8c:	mov    QWORD PTR [rcx+0x10],rax
   140003a90:	mov    DWORD PTR [rcx+0x18],eax
   140003a93:	mov    DWORD PTR [rcx+0x1c],eax
   140003a96:	mov    QWORD PTR [rcx+0x20],rdx
   140003a9a:	mov    QWORD PTR [rcx+0x28],rax
   140003a9e:	mov    DWORD PTR [rcx+0x30],eax
   140003aa1:	mov    DWORD PTR [rcx+0x34],eax
   140003aa4:	mov    DWORD PTR [rcx+0x38],eax
   140003aa7:	mov    DWORD PTR [rcx+0x3c],eax
   140003aaa:	mov    DWORD PTR [rcx+0x40],eax
   140003aad:	mov    DWORD PTR [rcx+0x44],eax
   140003ab0:	mov    DWORD PTR [rcx+0x48],eax
   140003ab3:	mov    DWORD PTR [rcx+0x4c],eax
   140003ab6:	mov    DWORD PTR [rcx+0x50],eax
   140003ab9:	mov    DWORD PTR [rcx+0x54],eax
   140003abc:	mov    DWORD PTR [rcx+0x58],eax
   140003abf:	mov    DWORD PTR [rcx+0x5c],eax
   140003ac2:	mov    DWORD PTR [rcx+0x60],eax
   140003ac5:	mov    DWORD PTR [rcx+0x64],eax
   140003ac8:	mov    DWORD PTR [rcx+0x68],eax
   140003acb:	mov    DWORD PTR [rcx+0x6c],eax
   140003ace:	mov    DWORD PTR [rcx+0x70],eax
   140003ad1:	mov    DWORD PTR [rcx+0x74],eax
   140003ad4:	mov    DWORD PTR [rcx+0x78],eax
   140003ad7:	mov    DWORD PTR [rcx+0x7c],eax
   140003ada:	mov    DWORD PTR [rcx+0x80],eax
   140003ae0:	mov    DWORD PTR [rcx+0x84],eax
   140003ae6:	mov    DWORD PTR [rcx+0x88],eax
   140003aec:	mov    DWORD PTR [rcx+0x8c],eax
   140003af2:	mov    DWORD PTR [rcx+0x90],eax
   140003af8:	mov    DWORD PTR [rcx+0x94],eax
   140003afe:	mov    DWORD PTR [rcx+0x8],0x50
   140003b05:	mov    rax,rcx
   140003b08:	ret    
   140003b09:	int3   
   140003b0a:	int3   
   140003b0b:	int3   
   140003b0c:	int3   
   140003b0d:	int3   
   140003b0e:	int3   
   140003b0f:	int3   
   140003b10:	mov    eax,DWORD PTR [rcx+0x38]
   140003b13:	mov    DWORD PTR [rdx],eax
   140003b15:	mov    eax,DWORD PTR [rcx+0x3c]
   140003b18:	mov    DWORD PTR [rdx+0x4],eax
   140003b1b:	mov    eax,DWORD PTR [rcx+0x40]
   140003b1e:	mov    DWORD PTR [rdx+0x8],eax
   140003b21:	mov    eax,DWORD PTR [rcx+0x44]
   140003b24:	mov    DWORD PTR [rdx+0xc],eax
   140003b27:	mov    rax,rdx
   140003b2a:	ret    
   140003b2b:	int3   
   140003b2c:	int3   
   140003b2d:	int3   
   140003b2e:	int3   
   140003b2f:	int3   
   140003b30:	mov    eax,DWORD PTR [rcx+0x88]
   140003b36:	mov    DWORD PTR [rdx],eax
   140003b38:	mov    eax,DWORD PTR [rcx+0x8c]
   140003b3e:	mov    DWORD PTR [rdx+0x4],eax
   140003b41:	mov    eax,DWORD PTR [rcx+0x90]
   140003b47:	mov    DWORD PTR [rdx+0x8],eax
   140003b4a:	mov    eax,DWORD PTR [rcx+0x94]
   140003b50:	mov    DWORD PTR [rdx+0xc],eax
   140003b53:	mov    rax,rdx
   140003b56:	ret    
   140003b57:	int3   
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	rex push rbx
   140003b62:	sub    rsp,0x20
   140003b66:	mov    rcx,QWORD PTR [rcx+0x18]
   140003b6a:	mov    rbx,rdx
   140003b6d:	mov    rax,QWORD PTR [rcx]
   140003b70:	call   QWORD PTR [rax+0x30]
   140003b73:	mov    rax,rbx
   140003b76:	add    rsp,0x20
   140003b7a:	pop    rbx
   140003b7b:	ret    
   140003b7c:	int3   
   140003b7d:	int3   
   140003b7e:	int3   
   140003b7f:	int3   
   140003b80:	rex push rbx
   140003b82:	sub    rsp,0x40
   140003b86:	cmp    QWORD PTR [rcx+0x10],0x0
   140003b8b:	mov    rbx,rdx
   140003b8e:	je     0x140003b9b
   140003b90:	mov    rcx,QWORD PTR [rcx+0x10]
   140003b94:	lea    rdx,[rsp+0x20]
   140003b99:	jmp    0x140003ba4
   140003b9b:	mov    rcx,QWORD PTR [rcx+0x18]
   140003b9f:	lea    rdx,[rsp+0x30]
   140003ba4:	mov    rax,QWORD PTR [rcx]
   140003ba7:	call   QWORD PTR [rax+0x38]
   140003baa:	mov    r11,rax
   140003bad:	mov    eax,DWORD PTR [rax]
   140003baf:	mov    DWORD PTR [rbx],eax
   140003bb1:	mov    eax,DWORD PTR [r11+0x4]
   140003bb5:	mov    DWORD PTR [rbx+0x4],eax
   140003bb8:	mov    eax,DWORD PTR [r11+0x8]
   140003bbc:	mov    DWORD PTR [rbx+0x8],eax
   140003bbf:	mov    eax,DWORD PTR [r11+0xc]
   140003bc3:	mov    DWORD PTR [rbx+0xc],eax
   140003bc6:	mov    rax,rbx
   140003bc9:	add    rsp,0x40
   140003bcd:	pop    rbx
   140003bce:	ret    
   140003bcf:	int3   
   140003bd0:	rex push rbx
   140003bd2:	sub    rsp,0x40
   140003bd6:	cmp    QWORD PTR [rcx+0x18],0x0
   140003bdb:	mov    rbx,rdx
   140003bde:	je     0x140003beb
   140003be0:	mov    rcx,QWORD PTR [rcx+0x18]
   140003be4:	lea    rdx,[rsp+0x20]
   140003be9:	jmp    0x140003bf4
   140003beb:	mov    rcx,QWORD PTR [rcx+0x10]
   140003bef:	lea    rdx,[rsp+0x30]
   140003bf4:	mov    rax,QWORD PTR [rcx]
   140003bf7:	call   QWORD PTR [rax+0x38]
   140003bfa:	mov    r11,rax
   140003bfd:	mov    eax,DWORD PTR [rax]
   140003bff:	mov    DWORD PTR [rbx],eax
   140003c01:	mov    eax,DWORD PTR [r11+0x4]
   140003c05:	mov    DWORD PTR [rbx+0x4],eax
   140003c08:	mov    eax,DWORD PTR [r11+0x8]
   140003c0c:	mov    DWORD PTR [rbx+0x8],eax
   140003c0f:	mov    eax,DWORD PTR [r11+0xc]
   140003c13:	mov    DWORD PTR [rbx+0xc],eax
   140003c16:	mov    rax,rbx
   140003c19:	add    rsp,0x40
   140003c1d:	pop    rbx
   140003c1e:	ret    
   140003c1f:	int3   
   140003c20:	rex push rbx
   140003c22:	sub    rsp,0x20
   140003c26:	cmp    QWORD PTR [rcx+0x10],0x0
   140003c2b:	mov    rbx,rdx
   140003c2e:	je     0x140003c43
   140003c30:	mov    rcx,QWORD PTR [rcx+0x10]
   140003c34:	mov    rax,QWORD PTR [rcx]
   140003c37:	call   QWORD PTR [rax+0x30]
   140003c3a:	mov    rax,rbx
   140003c3d:	add    rsp,0x20
   140003c41:	pop    rbx
   140003c42:	ret    
   140003c43:	cmp    QWORD PTR [rcx+0x18],0x0
   140003c48:	je     0x140003c5d
   140003c4a:	mov    rcx,QWORD PTR [rcx+0x18]
   140003c4e:	mov    rax,QWORD PTR [rcx]
   140003c51:	call   QWORD PTR [rax+0x30]
   140003c54:	mov    rax,rbx
   140003c57:	add    rsp,0x20
   140003c5b:	pop    rbx
   140003c5c:	ret    
   140003c5d:	xor    eax,eax
   140003c5f:	mov    DWORD PTR [rdx],eax
   140003c61:	mov    DWORD PTR [rdx+0x4],eax
   140003c64:	mov    DWORD PTR [rdx+0x8],eax
   140003c67:	mov    DWORD PTR [rdx+0xc],eax
   140003c6a:	mov    rax,rbx
   140003c6d:	add    rsp,0x20
   140003c71:	pop    rbx
   140003c72:	ret    
   140003c73:	int3   
   140003c74:	int3   
   140003c75:	int3   
   140003c76:	int3   
   140003c77:	int3   
   140003c78:	int3   
   140003c79:	int3   
   140003c7a:	int3   
   140003c7b:	int3   
   140003c7c:	int3   
   140003c7d:	int3   
   140003c7e:	int3   
   140003c7f:	int3   
   140003c80:	rex push rbx
   140003c82:	sub    rsp,0x20
   140003c86:	cmp    QWORD PTR [rcx+0x18],0x0
   140003c8b:	mov    rbx,rdx
   140003c8e:	je     0x140003ca3
   140003c90:	mov    rcx,QWORD PTR [rcx+0x18]
   140003c94:	mov    rax,QWORD PTR [rcx]
   140003c97:	call   QWORD PTR [rax+0x38]
   140003c9a:	mov    rax,rbx
   140003c9d:	add    rsp,0x20
   140003ca1:	pop    rbx
   140003ca2:	ret    
   140003ca3:	cmp    QWORD PTR [rcx+0x10],0x0
   140003ca8:	je     0x140003cbd
   140003caa:	mov    rcx,QWORD PTR [rcx+0x10]
   140003cae:	mov    rax,QWORD PTR [rcx]
   140003cb1:	call   QWORD PTR [rax+0x38]
   140003cb4:	mov    rax,rbx
   140003cb7:	add    rsp,0x20
   140003cbb:	pop    rbx
   140003cbc:	ret    
   140003cbd:	xor    eax,eax
   140003cbf:	mov    DWORD PTR [rdx],eax
   140003cc1:	mov    DWORD PTR [rdx+0x4],eax
   140003cc4:	mov    DWORD PTR [rdx+0x8],eax
   140003cc7:	mov    DWORD PTR [rdx+0xc],eax
   140003cca:	mov    rax,rbx
   140003ccd:	add    rsp,0x20
   140003cd1:	pop    rbx
   140003cd2:	ret    
   140003cd3:	int3   
   140003cd4:	int3   
   140003cd5:	int3   
   140003cd6:	int3   
   140003cd7:	int3   
   140003cd8:	int3   
   140003cd9:	int3   
   140003cda:	int3   
   140003cdb:	int3   
   140003cdc:	int3   
   140003cdd:	int3   
   140003cde:	int3   
   140003cdf:	int3   
   140003ce0:	xor    r9d,r9d
   140003ce3:	lea    rax,[rip+0x132ee]        # 0x140016fd8
   140003cea:	mov    QWORD PTR [rcx],rax
   140003ced:	mov    DWORD PTR [rcx+0x8],r9d
   140003cf1:	mov    rax,QWORD PTR [rdx]
   140003cf4:	mov    QWORD PTR [rcx+0x10],rax
   140003cf8:	mov    eax,DWORD PTR [rdx+0x8]
   140003cfb:	mov    DWORD PTR [rcx+0x18],eax
   140003cfe:	mov    eax,DWORD PTR [rdx+0xc]
   140003d01:	mov    DWORD PTR [rcx+0x1c],eax
   140003d04:	mov    rax,QWORD PTR [r8]
   140003d07:	mov    QWORD PTR [rcx+0x20],rax
   140003d0b:	mov    eax,DWORD PTR [r8+0x8]
   140003d0f:	mov    DWORD PTR [rcx+0x28],eax
   140003d12:	mov    eax,DWORD PTR [r8+0xc]
   140003d16:	mov    DWORD PTR [rcx+0x2c],eax
   140003d19:	mov    QWORD PTR [rcx+0x30],rcx
   140003d1d:	mov    DWORD PTR [rcx+0x38],r9d
   140003d21:	mov    DWORD PTR [rcx+0x3c],r9d
   140003d25:	mov    DWORD PTR [rcx+0x40],r9d
   140003d29:	mov    DWORD PTR [rcx+0x44],r9d
   140003d2d:	mov    DWORD PTR [rcx+0x48],r9d
   140003d31:	mov    DWORD PTR [rcx+0x4c],r9d
   140003d35:	mov    DWORD PTR [rcx+0x50],r9d
   140003d39:	mov    DWORD PTR [rcx+0x54],r9d
   140003d3d:	mov    DWORD PTR [rcx+0x58],r9d
   140003d41:	mov    DWORD PTR [rcx+0x5c],r9d
   140003d45:	mov    DWORD PTR [rcx+0x60],r9d
   140003d49:	mov    DWORD PTR [rcx+0x64],r9d
   140003d4d:	mov    rax,rcx
   140003d50:	mov    DWORD PTR [rcx+0x8],0x58
   140003d57:	ret    
   140003d58:	int3   
   140003d59:	int3   
   140003d5a:	int3   
   140003d5b:	int3   
   140003d5c:	int3   
   140003d5d:	int3   
   140003d5e:	int3   
   140003d5f:	int3   
   140003d60:	xor    r10d,r10d
   140003d63:	lea    rax,[rip+0x1326e]        # 0x140016fd8
   140003d6a:	mov    QWORD PTR [rcx],rax
   140003d6d:	mov    DWORD PTR [rcx+0x8],r10d
   140003d71:	mov    rax,QWORD PTR [r8]
   140003d74:	mov    QWORD PTR [rcx+0x10],rax
   140003d78:	mov    eax,DWORD PTR [r8+0x8]
   140003d7c:	mov    DWORD PTR [rcx+0x18],eax
   140003d7f:	mov    eax,DWORD PTR [r8+0xc]
   140003d83:	mov    DWORD PTR [rcx+0x1c],eax
   140003d86:	mov    rax,QWORD PTR [r9]
   140003d89:	mov    QWORD PTR [rcx+0x20],rax
   140003d8d:	mov    eax,DWORD PTR [r9+0x8]
   140003d91:	mov    DWORD PTR [rcx+0x28],eax
   140003d94:	mov    eax,DWORD PTR [r9+0xc]
   140003d98:	mov    DWORD PTR [rcx+0x2c],eax
   140003d9b:	mov    DWORD PTR [rcx+0x38],r10d
   140003d9f:	mov    DWORD PTR [rcx+0x3c],r10d
   140003da3:	mov    DWORD PTR [rcx+0x40],r10d
   140003da7:	mov    DWORD PTR [rcx+0x44],r10d
   140003dab:	mov    DWORD PTR [rcx+0x48],r10d
   140003daf:	mov    DWORD PTR [rcx+0x4c],r10d
   140003db3:	mov    DWORD PTR [rcx+0x50],r10d
   140003db7:	mov    DWORD PTR [rcx+0x54],r10d
   140003dbb:	mov    DWORD PTR [rcx+0x58],r10d
   140003dbf:	mov    DWORD PTR [rcx+0x5c],r10d
   140003dc3:	mov    DWORD PTR [rcx+0x60],r10d
   140003dc7:	mov    DWORD PTR [rcx+0x64],r10d
   140003dcb:	mov    DWORD PTR [rcx+0x8],0x58
   140003dd2:	mov    rax,QWORD PTR [rdx+0x30]
   140003dd6:	mov    QWORD PTR [rcx+0x30],rax
   140003dda:	mov    QWORD PTR [rdx+0x30],rcx
   140003dde:	mov    rax,rcx
   140003de1:	ret    
   140003de2:	int3   
   140003de3:	int3   
   140003de4:	int3   
   140003de5:	int3   
   140003de6:	int3   
   140003de7:	int3   
   140003de8:	int3   
   140003de9:	int3   
   140003dea:	int3   
   140003deb:	int3   
   140003dec:	int3   
   140003ded:	int3   
   140003dee:	int3   
   140003def:	int3   
   140003df0:	mov    eax,DWORD PTR [rcx+0x48]
   140003df3:	mov    DWORD PTR [rdx],eax
   140003df5:	mov    eax,DWORD PTR [rcx+0x4c]
   140003df8:	mov    DWORD PTR [rdx+0x4],eax
   140003dfb:	mov    eax,DWORD PTR [rcx+0x50]
   140003dfe:	mov    DWORD PTR [rdx+0x8],eax
   140003e01:	mov    eax,DWORD PTR [rcx+0x54]
   140003e04:	mov    DWORD PTR [rdx+0xc],eax
   140003e07:	mov    rax,rdx
   140003e0a:	ret    
   140003e0b:	int3   
   140003e0c:	int3   
   140003e0d:	int3   
   140003e0e:	int3   
   140003e0f:	int3   
   140003e10:	rex push rbx
   140003e12:	sub    rsp,0x30
   140003e16:	cmp    QWORD PTR [rcx+0x30],0x0
   140003e1b:	mov    rbx,rdx
   140003e1e:	je     0x140003e34
   140003e20:	mov    rcx,QWORD PTR [rcx+0x30]
   140003e24:	lea    rdx,[rsp+0x20]
   140003e29:	mov    rax,QWORD PTR [rcx]
   140003e2c:	call   QWORD PTR [rax+0x38]
   140003e2f:	mov    rcx,rax
   140003e32:	jmp    0x140003e38
   140003e34:	add    rcx,0x58
   140003e38:	mov    eax,DWORD PTR [rcx]
   140003e3a:	mov    DWORD PTR [rbx],eax
   140003e3c:	mov    eax,DWORD PTR [rcx+0x4]
   140003e3f:	mov    DWORD PTR [rbx+0x4],eax
   140003e42:	mov    eax,DWORD PTR [rcx+0x8]
   140003e45:	mov    DWORD PTR [rbx+0x8],eax
   140003e48:	mov    eax,DWORD PTR [rcx+0xc]
   140003e4b:	mov    DWORD PTR [rbx+0xc],eax
   140003e4e:	mov    rax,rbx
   140003e51:	add    rsp,0x30
   140003e55:	pop    rbx
   140003e56:	ret    
   140003e57:	int3   
   140003e58:	int3   
   140003e59:	int3   
   140003e5a:	int3   
   140003e5b:	int3   
   140003e5c:	int3   
   140003e5d:	int3   
   140003e5e:	int3   
   140003e5f:	int3   
   140003e60:	mov    r8,QWORD PTR [rcx+0x10]
   140003e64:	mov    eax,DWORD PTR [r8+0x28]
   140003e68:	mov    DWORD PTR [rdx],eax
   140003e6a:	mov    eax,DWORD PTR [r8+0x2c]
   140003e6e:	mov    DWORD PTR [rdx+0x4],eax
   140003e71:	mov    eax,DWORD PTR [r8+0x30]
   140003e75:	mov    DWORD PTR [rdx+0x8],eax
   140003e78:	mov    eax,DWORD PTR [r8+0x34]
   140003e7c:	mov    DWORD PTR [rdx+0xc],eax
   140003e7f:	mov    rax,rdx
   140003e82:	ret    
   140003e83:	int3   
   140003e84:	int3   
   140003e85:	int3   
   140003e86:	int3   
   140003e87:	int3   
   140003e88:	int3   
   140003e89:	int3   
   140003e8a:	int3   
   140003e8b:	int3   
   140003e8c:	int3   
   140003e8d:	int3   
   140003e8e:	int3   
   140003e8f:	int3   
   140003e90:	mov    r8,QWORD PTR [rcx+0x18]
   140003e94:	mov    eax,DWORD PTR [r8+0x28]
   140003e98:	mov    DWORD PTR [rdx],eax
   140003e9a:	mov    eax,DWORD PTR [r8+0x2c]
   140003e9e:	mov    DWORD PTR [rdx+0x4],eax
   140003ea1:	mov    eax,DWORD PTR [r8+0x30]
   140003ea5:	mov    DWORD PTR [rdx+0x8],eax
   140003ea8:	mov    eax,DWORD PTR [r8+0x34]
   140003eac:	mov    DWORD PTR [rdx+0xc],eax
   140003eaf:	mov    rax,rdx
   140003eb2:	ret    
   140003eb3:	int3   
   140003eb4:	int3   
   140003eb5:	int3   
   140003eb6:	int3   
   140003eb7:	int3   
   140003eb8:	int3   
   140003eb9:	int3   
   140003eba:	int3   
   140003ebb:	int3   
   140003ebc:	int3   
   140003ebd:	int3   
   140003ebe:	int3   
   140003ebf:	int3   
   140003ec0:	cmp    BYTE PTR [rcx+0x38],0x0
   140003ec4:	je     0x140003eee
   140003ec6:	mov    r8,QWORD PTR [rcx+0x18]
   140003eca:	test   r8,r8
   140003ecd:	je     0x140003eee
   140003ecf:	mov    eax,DWORD PTR [r8+0x28]
   140003ed3:	mov    DWORD PTR [rdx],eax
   140003ed5:	mov    eax,DWORD PTR [r8+0x2c]
   140003ed9:	mov    DWORD PTR [rdx+0x4],eax
   140003edc:	mov    eax,DWORD PTR [r8+0x30]
   140003ee0:	mov    DWORD PTR [rdx+0x8],eax
   140003ee3:	mov    eax,DWORD PTR [r8+0x34]
   140003ee7:	mov    DWORD PTR [rdx+0xc],eax
   140003eea:	mov    rax,rdx
   140003eed:	ret    
   140003eee:	mov    rcx,QWORD PTR [rcx+0x10]
   140003ef2:	mov    eax,DWORD PTR [rcx+0x28]
   140003ef5:	mov    DWORD PTR [rdx],eax
   140003ef7:	mov    eax,DWORD PTR [rcx+0x2c]
   140003efa:	mov    DWORD PTR [rdx+0x4],eax
   140003efd:	mov    eax,DWORD PTR [rcx+0x30]
   140003f00:	mov    DWORD PTR [rdx+0x8],eax
   140003f03:	mov    eax,DWORD PTR [rcx+0x34]
   140003f06:	mov    DWORD PTR [rdx+0xc],eax
   140003f09:	mov    rax,rdx
   140003f0c:	ret    
   140003f0d:	int3   
   140003f0e:	int3   
   140003f0f:	int3   
   140003f10:	mov    r8,QWORD PTR [rcx+0x20]
   140003f14:	mov    eax,DWORD PTR [r8+0x28]
   140003f18:	mov    DWORD PTR [rdx],eax
   140003f1a:	mov    eax,DWORD PTR [r8+0x2c]
   140003f1e:	mov    DWORD PTR [rdx+0x4],eax
   140003f21:	mov    eax,DWORD PTR [r8+0x30]
   140003f25:	mov    DWORD PTR [rdx+0x8],eax
   140003f28:	mov    eax,DWORD PTR [r8+0x34]
   140003f2c:	mov    DWORD PTR [rdx+0xc],eax
   140003f2f:	mov    rax,rdx
   140003f32:	ret    
   140003f33:	int3   
   140003f34:	int3   
   140003f35:	int3   
   140003f36:	int3   
   140003f37:	int3   
   140003f38:	int3   
   140003f39:	int3   
   140003f3a:	int3   
   140003f3b:	int3   
   140003f3c:	int3   
   140003f3d:	int3   
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	mov    QWORD PTR [rsp+0x8],rbx
   140003f45:	mov    QWORD PTR [rsp+0x10],rsi
   140003f4a:	push   rdi
   140003f4b:	sub    rsp,0x20
   140003f4f:	mov    rbx,QWORD PTR [rdx+0x50]
   140003f53:	xor    eax,eax
   140003f55:	mov    rsi,rcx
   140003f58:	mov    DWORD PTR [rcx],eax
   140003f5a:	mov    DWORD PTR [rcx+0x4],eax
   140003f5d:	mov    DWORD PTR [rcx+0x8],eax
   140003f60:	mov    DWORD PTR [rcx+0xc],eax
   140003f63:	lea    rcx,[rdx+0x8]
   140003f67:	mov    rdi,rdx
   140003f6a:	call   QWORD PTR [rip+0x11220]        # 0x140015190
   140003f70:	mov    rdx,rbx
   140003f73:	sub    rbx,QWORD PTR [rdi+0x48]
   140003f77:	sub    rdx,rax
   140003f7a:	mov    eax,DWORD PTR [rdi+0x84]
   140003f80:	sar    rbx,1
   140003f83:	mov    DWORD PTR [rsi+0x4],eax
   140003f86:	mov    eax,DWORD PTR [rdi+0x88]
   140003f8c:	sar    rdx,1
   140003f8f:	inc    ebx
   140003f91:	mov    DWORD PTR [rsi+0x8],eax
   140003f94:	mov    DWORD PTR [rsi],edx
   140003f96:	mov    DWORD PTR [rsi+0xc],ebx
   140003f99:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f9e:	mov    rax,rsi
   140003fa1:	mov    rsi,QWORD PTR [rsp+0x38]
   140003fa6:	add    rsp,0x20
   140003faa:	pop    rdi
   140003fab:	ret    
   140003fac:	int3   
   140003fad:	int3   
   140003fae:	int3   
   140003faf:	int3   
   140003fb0:	mov    QWORD PTR [rsp+0x8],rbx
   140003fb5:	mov    DWORD PTR [rsp+0x10],edx
   140003fb9:	push   rbp
   140003fba:	push   rsi
   140003fbb:	push   rdi
   140003fbc:	push   r12
   140003fbe:	push   r13
   140003fc0:	sub    rsp,0x20
   140003fc4:	mov    eax,DWORD PTR [rcx+0x4]
   140003fc7:	mov    rbp,QWORD PTR [rcx+0x8]
   140003fcb:	mov    rbx,rcx
   140003fce:	cmp    edx,eax
   140003fd0:	lea    r9,[rsp+0x58]
   140003fd5:	lea    rcx,[rsp+0x60]
   140003fda:	cmovge r9,rcx
   140003fde:	movsxd r12,r8d
   140003fe1:	xor    r13d,r13d
   140003fe4:	mov    DWORD PTR [rsp+0x60],eax
   140003fe8:	mov    edi,DWORD PTR [r9]
   140003feb:	mov    esi,edx
   140003fed:	cmp    r12d,DWORD PTR [rbx]
   140003ff0:	je     0x140004057
   140003ff2:	cmp    r12d,0x4
   140003ff6:	jle    0x14000400a
   140003ff8:	mov    rcx,r12
   140003ffb:	shl    rcx,0x4
   140003fff:	call   QWORD PTR [rip+0x11113]        # 0x140015118
   140004005:	mov    DWORD PTR [rbx],r12d
   140004008:	jmp    0x140004014
   14000400a:	lea    rax,[rbx+0x10]
   14000400e:	mov    DWORD PTR [rbx],0x4
   140004014:	mov    QWORD PTR [rbx+0x8],rax
   140004018:	mov    DWORD PTR [rbx+0x4],r13d
   14000401c:	test   edi,edi
   14000401e:	jle    0x140004057
   140004020:	movsxd rcx,DWORD PTR [rbx+0x4]
   140004024:	mov    rax,QWORD PTR [rbx+0x8]
   140004028:	add    rcx,rcx
   14000402b:	lea    rdx,[rax+rcx*8]
   14000402f:	test   rdx,rdx
   140004032:	je     0x14000404f
   140004034:	mov    eax,DWORD PTR [rbp+rcx*8+0x0]
   140004038:	mov    DWORD PTR [rdx],eax
   14000403a:	mov    eax,DWORD PTR [rbp+rcx*8+0x4]
   14000403e:	mov    DWORD PTR [rdx+0x4],eax
   140004041:	mov    eax,DWORD PTR [rbp+rcx*8+0x8]
   140004045:	mov    DWORD PTR [rdx+0x8],eax
   140004048:	mov    eax,DWORD PTR [rbp+rcx*8+0xc]
   14000404c:	mov    DWORD PTR [rdx+0xc],eax
   14000404f:	inc    DWORD PTR [rbx+0x4]
   140004052:	cmp    DWORD PTR [rbx+0x4],edi
   140004055:	jl     0x140004020
   140004057:	lea    rax,[rbx+0x10]
   14000405b:	mov    DWORD PTR [rbx+0x4],edi
   14000405e:	cmp    rbp,rax
   140004061:	je     0x140004072
   140004063:	cmp    rbp,QWORD PTR [rbx+0x8]
   140004067:	je     0x140004072
   140004069:	mov    rcx,rbp
   14000406c:	call   QWORD PTR [rip+0x1108e]        # 0x140015100
   140004072:	cmp    DWORD PTR [rbx+0x4],esi
   140004075:	jge    0x1400040ab
   140004077:	nop    WORD PTR [rax+rax*1+0x0]
   140004080:	movsxd rax,DWORD PTR [rbx+0x4]
   140004084:	mov    rcx,rax
   140004087:	lea    eax,[rax+0x1]
   14000408a:	shl    rcx,0x4
   14000408e:	add    rcx,QWORD PTR [rbx+0x8]
   140004092:	mov    DWORD PTR [rbx+0x4],eax
   140004095:	je     0x1400040a6
   140004097:	mov    DWORD PTR [rcx],r13d
   14000409a:	mov    DWORD PTR [rcx+0x4],r13d
   14000409e:	mov    DWORD PTR [rcx+0x8],r13d
   1400040a2:	mov    DWORD PTR [rcx+0xc],r13d
   1400040a6:	cmp    DWORD PTR [rbx+0x4],esi
   1400040a9:	jl     0x140004080
   1400040ab:	mov    rbx,QWORD PTR [rsp+0x50]
   1400040b0:	add    rsp,0x20
   1400040b4:	pop    r13
   1400040b6:	pop    r12
   1400040b8:	pop    rdi
   1400040b9:	pop    rsi
   1400040ba:	pop    rbp
   1400040bb:	ret    
   1400040bc:	int3   
   1400040bd:	int3   
   1400040be:	int3   
   1400040bf:	int3   
   1400040c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400040c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400040ca:	push   rdi
   1400040cb:	sub    rsp,0x20
   1400040cf:	mov    ecx,0x20
   1400040d4:	mov    rsi,r8
   1400040d7:	mov    rbx,rdx
   1400040da:	call   0x14001463e
   1400040df:	mov    rdi,rax
   1400040e2:	test   rax,rax
   1400040e5:	je     0x140004124
   1400040e7:	mov    ecx,DWORD PTR [rsi]
   1400040e9:	lea    rdx,[rsi+0x18]
   1400040ed:	mov    DWORD PTR [rax],ecx
   1400040ef:	mov    ecx,DWORD PTR [rsi+0x4]
   1400040f2:	mov    DWORD PTR [rax+0x4],ecx
   1400040f5:	mov    ecx,DWORD PTR [rsi+0x8]
   1400040f8:	mov    DWORD PTR [rax+0x8],ecx
   1400040fb:	mov    ecx,DWORD PTR [rsi+0xc]
   1400040fe:	mov    DWORD PTR [rax+0xc],ecx
   140004101:	mov    ecx,DWORD PTR [rsi+0x10]
   140004104:	mov    DWORD PTR [rax+0x10],ecx
   140004107:	lea    rcx,[rax+0x18]
   14000410b:	call   QWORD PTR [rip+0x112b7]        # 0x1400153c8
   140004111:	mov    QWORD PTR [rbx],rdi
   140004114:	mov    rbx,QWORD PTR [rsp+0x30]
   140004119:	mov    rsi,QWORD PTR [rsp+0x38]
   14000411e:	add    rsp,0x20
   140004122:	pop    rdi
   140004123:	ret    
   140004124:	mov    rsi,QWORD PTR [rsp+0x38]
   140004129:	mov    QWORD PTR [rbx],0x0
   140004130:	mov    rbx,QWORD PTR [rsp+0x30]
   140004135:	add    rsp,0x20
   140004139:	pop    rdi
   14000413a:	ret    
   14000413b:	int3   
   14000413c:	int3   
   14000413d:	int3   
   14000413e:	int3   
   14000413f:	int3   
   140004140:	mov    r8,rdx
   140004143:	lea    rdx,[rcx+0x7]
   140004147:	mov    rax,QWORD PTR [r8+0x18]
   14000414b:	and    rdx,0xfffffffffffffff8
   14000414f:	test   rax,rax
   140004152:	je     0x140004163
   140004154:	lea    rcx,[rax+rdx*1]
   140004158:	cmp    rcx,QWORD PTR [r8+0x20]
   14000415c:	jae    0x140004163
   14000415e:	mov    QWORD PTR [r8+0x18],rcx
   140004162:	ret    
   140004163:	mov    rcx,r8
   140004166:	jmp    0x1400025c0
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	lea    rax,[rip+0x11381]        # 0x1400154f8
   140004177:	mov    QWORD PTR [rcx],rax
   14000417a:	mov    rax,rcx
   14000417d:	ret    
   14000417e:	int3   
   14000417f:	int3   
   140004180:	mov    DWORD PTR [rcx+0x10],0x1
   140004187:	xor    r9d,r9d
   14000418a:	lea    rax,[rip+0x13027]        # 0x1400171b8
   140004191:	mov    QWORD PTR [rcx],rax
   140004194:	mov    DWORD PTR [rcx+0x8],r9d
   140004198:	mov    QWORD PTR [rcx+0x18],r9
   14000419c:	mov    DWORD PTR [rcx+0x20],r9d
   1400041a0:	mov    DWORD PTR [rcx+0x24],r9d
   1400041a4:	mov    rax,QWORD PTR [rdx]
   1400041a7:	mov    QWORD PTR [rcx+0x28],rax
   1400041ab:	mov    eax,DWORD PTR [rdx+0x8]
   1400041ae:	mov    DWORD PTR [rcx+0x30],eax
   1400041b1:	mov    eax,DWORD PTR [rdx+0xc]
   1400041b4:	mov    DWORD PTR [rcx+0x34],eax
   1400041b7:	mov    rax,QWORD PTR [r8]
   1400041ba:	mov    QWORD PTR [rcx+0x38],rax
   1400041be:	mov    eax,DWORD PTR [r8+0x8]
   1400041c2:	mov    DWORD PTR [rcx+0x40],eax
   1400041c5:	mov    eax,DWORD PTR [r8+0xc]
   1400041c9:	mov    DWORD PTR [rcx+0x44],eax
   1400041cc:	mov    QWORD PTR [rcx+0x48],r9
   1400041d0:	mov    QWORD PTR [rcx+0x50],r9
   1400041d4:	mov    BYTE PTR [rcx+0x58],r9b
   1400041d8:	mov    BYTE PTR [rcx+0x59],r9b
   1400041dc:	mov    QWORD PTR [rcx+0x60],r9
   1400041e0:	mov    DWORD PTR [rcx+0x68],r9d
   1400041e4:	mov    DWORD PTR [rcx+0x6c],r9d
   1400041e8:	mov    DWORD PTR [rcx+0x70],r9d
   1400041ec:	mov    DWORD PTR [rcx+0x74],r9d
   1400041f0:	mov    DWORD PTR [rcx+0x78],r9d
   1400041f4:	mov    DWORD PTR [rcx+0x7c],r9d
   1400041f8:	mov    DWORD PTR [rcx+0x80],r9d
   1400041ff:	mov    DWORD PTR [rcx+0x84],r9d
   140004206:	mov    DWORD PTR [rcx+0x88],r9d
   14000420d:	mov    DWORD PTR [rcx+0x8c],r9d
   140004214:	mov    DWORD PTR [rcx+0x90],r9d
   14000421b:	mov    DWORD PTR [rcx+0x94],r9d
   140004222:	mov    DWORD PTR [rcx+0x98],r9d
   140004229:	mov    DWORD PTR [rcx+0x9c],r9d
   140004230:	mov    DWORD PTR [rcx+0xa0],r9d
   140004237:	mov    DWORD PTR [rcx+0xa4],r9d
   14000423e:	mov    DWORD PTR [rcx+0xa8],r9d
   140004245:	mov    DWORD PTR [rcx+0xac],r9d
   14000424c:	mov    DWORD PTR [rcx+0xb0],r9d
   140004253:	mov    DWORD PTR [rcx+0xb4],r9d
   14000425a:	mov    DWORD PTR [rcx+0xb8],r9d
   140004261:	mov    DWORD PTR [rcx+0xbc],r9d
   140004268:	mov    DWORD PTR [rcx+0xc0],r9d
   14000426f:	mov    DWORD PTR [rcx+0xc4],r9d
   140004276:	mov    DWORD PTR [rcx+0xc8],r9d
   14000427d:	mov    DWORD PTR [rcx+0xcc],r9d
   140004284:	mov    DWORD PTR [rcx+0xd0],r9d
   14000428b:	mov    DWORD PTR [rcx+0xd4],r9d
   140004292:	mov    DWORD PTR [rcx+0xd8],r9d
   140004299:	mov    DWORD PTR [rcx+0xdc],r9d
   1400042a0:	mov    DWORD PTR [rcx+0xe0],r9d
   1400042a7:	mov    DWORD PTR [rcx+0xe4],r9d
   1400042ae:	mov    rax,rcx
   1400042b1:	mov    DWORD PTR [rcx+0x8],0x59
   1400042b8:	ret    
   1400042b9:	int3   
   1400042ba:	int3   
   1400042bb:	int3   
   1400042bc:	int3   
   1400042bd:	int3   
   1400042be:	int3   
   1400042bf:	int3   
   1400042c0:	cmp    DWORD PTR [rcx+0x6c],0x0
   1400042c4:	je     0x1400042e1
   1400042c6:	mov    eax,DWORD PTR [rcx+0x68]
   1400042c9:	mov    DWORD PTR [rdx],eax
   1400042cb:	mov    eax,DWORD PTR [rcx+0x6c]
   1400042ce:	mov    DWORD PTR [rdx+0x4],eax
   1400042d1:	mov    eax,DWORD PTR [rcx+0x70]
   1400042d4:	mov    DWORD PTR [rdx+0x8],eax
   1400042d7:	mov    eax,DWORD PTR [rcx+0x74]
   1400042da:	mov    DWORD PTR [rdx+0xc],eax
   1400042dd:	mov    rax,rdx
   1400042e0:	ret    
   1400042e1:	cmp    DWORD PTR [rcx+0x7c],0x0
   1400042e5:	je     0x140004308
   1400042e7:	mov    eax,DWORD PTR [rcx+0x78]
   1400042ea:	mov    DWORD PTR [rdx],eax
   1400042ec:	mov    eax,DWORD PTR [rcx+0x7c]
   1400042ef:	mov    DWORD PTR [rdx+0x4],eax
   1400042f2:	mov    eax,DWORD PTR [rcx+0x80]
   1400042f8:	mov    DWORD PTR [rdx+0x8],eax
   1400042fb:	mov    eax,DWORD PTR [rcx+0x84]
   140004301:	mov    DWORD PTR [rdx+0xc],eax
   140004304:	mov    rax,rdx
   140004307:	ret    
   140004308:	mov    eax,DWORD PTR [rcx+0x88]
   14000430e:	mov    DWORD PTR [rdx],eax
   140004310:	mov    eax,DWORD PTR [rcx+0x8c]
   140004316:	mov    DWORD PTR [rdx+0x4],eax
   140004319:	mov    eax,DWORD PTR [rcx+0x90]
   14000431f:	mov    DWORD PTR [rdx+0x8],eax
   140004322:	mov    eax,DWORD PTR [rcx+0x94]
   140004328:	mov    DWORD PTR [rdx+0xc],eax
   14000432b:	mov    rax,rdx
   14000432e:	ret    
   14000432f:	int3   
   140004330:	rex push rbx
   140004332:	sub    rsp,0x20
   140004336:	cmp    QWORD PTR [rcx+0x50],0x0
   14000433b:	mov    rbx,rdx
   14000433e:	je     0x140004353
   140004340:	mov    rcx,QWORD PTR [rcx+0x50]
   140004344:	mov    rax,QWORD PTR [rcx]
   140004347:	call   QWORD PTR [rax+0x38]
   14000434a:	mov    rax,rbx
   14000434d:	add    rsp,0x20
   140004351:	pop    rbx
   140004352:	ret    
   140004353:	cmp    QWORD PTR [rcx+0x48],0x0
   140004358:	je     0x14000436d
   14000435a:	mov    rcx,QWORD PTR [rcx+0x48]
   14000435e:	mov    rax,QWORD PTR [rcx]
   140004361:	call   QWORD PTR [rax+0x38]
   140004364:	mov    rax,rbx
   140004367:	add    rsp,0x20
   14000436b:	pop    rbx
   14000436c:	ret    
   14000436d:	mov    eax,DWORD PTR [rcx+0xd8]
   140004373:	mov    DWORD PTR [rdx],eax
   140004375:	mov    eax,DWORD PTR [rcx+0xdc]
   14000437b:	mov    DWORD PTR [rdx+0x4],eax
   14000437e:	mov    eax,DWORD PTR [rcx+0xe0]
   140004384:	mov    DWORD PTR [rdx+0x8],eax
   140004387:	mov    eax,DWORD PTR [rcx+0xe4]
   14000438d:	mov    DWORD PTR [rdx+0xc],eax
   140004390:	mov    rax,rbx
   140004393:	add    rsp,0x20
   140004397:	pop    rbx
   140004398:	ret    
   140004399:	int3   
   14000439a:	int3   
   14000439b:	int3   
   14000439c:	int3   
   14000439d:	int3   
   14000439e:	int3   
   14000439f:	int3   
   1400043a0:	mov    DWORD PTR [rcx+0x10],0x1
   1400043a7:	xor    r10d,r10d
   1400043aa:	lea    rax,[rip+0x12e07]        # 0x1400171b8
   1400043b1:	mov    QWORD PTR [rcx],rax
   1400043b4:	mov    DWORD PTR [rcx+0x8],r10d
   1400043b8:	mov    QWORD PTR [rcx+0x18],r10
   1400043bc:	mov    DWORD PTR [rcx+0x20],r10d
   1400043c0:	mov    DWORD PTR [rcx+0x24],r10d
   1400043c4:	mov    rax,QWORD PTR [rdx]
   1400043c7:	mov    QWORD PTR [rcx+0x28],rax
   1400043cb:	mov    eax,DWORD PTR [rdx+0x8]
   1400043ce:	mov    DWORD PTR [rcx+0x30],eax
   1400043d1:	mov    eax,DWORD PTR [rdx+0xc]
   1400043d4:	mov    DWORD PTR [rcx+0x34],eax
   1400043d7:	mov    rax,QWORD PTR [r8]
   1400043da:	mov    QWORD PTR [rcx+0x38],rax
   1400043de:	mov    eax,DWORD PTR [r8+0x8]
   1400043e2:	mov    DWORD PTR [rcx+0x40],eax
   1400043e5:	mov    eax,DWORD PTR [r8+0xc]
   1400043e9:	mov    DWORD PTR [rcx+0x44],eax
   1400043ec:	mov    QWORD PTR [rcx+0x48],r9
   1400043f0:	mov    QWORD PTR [rcx+0x50],r10
   1400043f4:	mov    BYTE PTR [rcx+0x58],r10b
   1400043f8:	mov    BYTE PTR [rcx+0x59],r10b
   1400043fc:	mov    QWORD PTR [rcx+0x60],r10
   140004400:	mov    DWORD PTR [rcx+0x68],r10d
   140004404:	mov    DWORD PTR [rcx+0x6c],r10d
   140004408:	mov    DWORD PTR [rcx+0x70],r10d
   14000440c:	mov    DWORD PTR [rcx+0x74],r10d
   140004410:	mov    DWORD PTR [rcx+0x78],r10d
   140004414:	mov    DWORD PTR [rcx+0x7c],r10d
   140004418:	mov    DWORD PTR [rcx+0x80],r10d
   14000441f:	mov    DWORD PTR [rcx+0x84],r10d
   140004426:	mov    DWORD PTR [rcx+0x88],r10d
   14000442d:	mov    DWORD PTR [rcx+0x8c],r10d
   140004434:	mov    DWORD PTR [rcx+0x90],r10d
   14000443b:	mov    DWORD PTR [rcx+0x94],r10d
   140004442:	mov    DWORD PTR [rcx+0x98],r10d
   140004449:	mov    DWORD PTR [rcx+0x9c],r10d
   140004450:	mov    DWORD PTR [rcx+0xa0],r10d
   140004457:	mov    DWORD PTR [rcx+0xa4],r10d
   14000445e:	mov    DWORD PTR [rcx+0xa8],r10d
   140004465:	mov    DWORD PTR [rcx+0xac],r10d
   14000446c:	mov    DWORD PTR [rcx+0xb0],r10d
   140004473:	mov    DWORD PTR [rcx+0xb4],r10d
   14000447a:	mov    DWORD PTR [rcx+0xb8],r10d
   140004481:	mov    DWORD PTR [rcx+0xbc],r10d
   140004488:	mov    DWORD PTR [rcx+0xc0],r10d
   14000448f:	mov    DWORD PTR [rcx+0xc4],r10d
   140004496:	mov    DWORD PTR [rcx+0xc8],r10d
   14000449d:	mov    DWORD PTR [rcx+0xcc],r10d
   1400044a4:	mov    DWORD PTR [rcx+0xd0],r10d
   1400044ab:	mov    DWORD PTR [rcx+0xd4],r10d
   1400044b2:	mov    DWORD PTR [rcx+0xd8],r10d
   1400044b9:	mov    DWORD PTR [rcx+0xdc],r10d
   1400044c0:	mov    DWORD PTR [rcx+0xe0],r10d
   1400044c7:	mov    DWORD PTR [rcx+0xe4],r10d
   1400044ce:	mov    rax,rcx
   1400044d1:	mov    DWORD PTR [rcx+0x8],0x59
   1400044d8:	ret    
   1400044d9:	int3   
   1400044da:	int3   
   1400044db:	int3   
   1400044dc:	int3   
   1400044dd:	int3   
   1400044de:	int3   
   1400044df:	int3   
   1400044e0:	rex push rbx
   1400044e2:	sub    rsp,0x20
   1400044e6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400044ea:	mov    rbx,rdx
   1400044ed:	test   rcx,rcx
   1400044f0:	je     0x140004512
   1400044f2:	cmp    DWORD PTR [rcx+0x8],0x1e
   1400044f6:	jne    0x140004507
   1400044f8:	mov    rax,QWORD PTR [rcx]
   1400044fb:	call   QWORD PTR [rax+0x30]
   1400044fe:	mov    rax,rbx
   140004501:	add    rsp,0x20
   140004505:	pop    rbx
   140004506:	ret    
   140004507:	test   rcx,rcx
   14000450a:	je     0x140004512
   14000450c:	cmp    DWORD PTR [rcx+0x8],0x4a
   140004510:	je     0x1400044f8
   140004512:	xor    eax,eax
   140004514:	mov    DWORD PTR [rdx],eax
   140004516:	mov    DWORD PTR [rdx+0x4],eax
   140004519:	mov    DWORD PTR [rdx+0x8],eax
   14000451c:	mov    DWORD PTR [rdx+0xc],eax
   14000451f:	mov    rax,rbx
   140004522:	add    rsp,0x20
   140004526:	pop    rbx
   140004527:	ret    
   140004528:	int3   
   140004529:	int3   
   14000452a:	int3   
   14000452b:	int3   
   14000452c:	int3   
   14000452d:	int3   
   14000452e:	int3   
   14000452f:	int3   
   140004530:	rex push rbx
   140004532:	sub    rsp,0x20
   140004536:	mov    rcx,QWORD PTR [rcx+0x10]
   14000453a:	mov    rbx,rdx
   14000453d:	test   rcx,rcx
   140004540:	je     0x140004562
   140004542:	cmp    DWORD PTR [rcx+0x8],0x1e
   140004546:	jne    0x140004557
   140004548:	mov    rax,QWORD PTR [rcx]
   14000454b:	call   QWORD PTR [rax+0x38]
   14000454e:	mov    rax,rbx
   140004551:	add    rsp,0x20
   140004555:	pop    rbx
   140004556:	ret    
   140004557:	test   rcx,rcx
   14000455a:	je     0x140004562
   14000455c:	cmp    DWORD PTR [rcx+0x8],0x4a
   140004560:	je     0x140004548
   140004562:	xor    eax,eax
   140004564:	mov    DWORD PTR [rdx],eax
   140004566:	mov    DWORD PTR [rdx+0x4],eax
   140004569:	mov    DWORD PTR [rdx+0x8],eax
   14000456c:	mov    DWORD PTR [rdx+0xc],eax
   14000456f:	mov    rax,rbx
   140004572:	add    rsp,0x20
   140004576:	pop    rbx
   140004577:	ret    
   140004578:	int3   
   140004579:	int3   
   14000457a:	int3   
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	rex push rbx
   140004582:	sub    rsp,0x20
   140004586:	mov    rbx,rdx
   140004589:	test   rdx,rdx
   14000458c:	je     0x14000463c
   140004592:	cmp    DWORD PTR [rdx+0x8],0x21
   140004596:	jne    0x14000463c
   14000459c:	mov    rcx,QWORD PTR [rcx+0x8]
   1400045a0:	mov    r8,QWORD PTR [rcx+0x18]
   1400045a4:	test   r8,r8
   1400045a7:	je     0x1400045b9
   1400045a9:	lea    rax,[r8+0x38]
   1400045ad:	cmp    rax,QWORD PTR [rcx+0x20]
   1400045b1:	jae    0x1400045b9
   1400045b3:	mov    QWORD PTR [rcx+0x18],rax
   1400045b7:	jmp    0x1400045c6
   1400045b9:	mov    edx,0x38
   1400045be:	call   0x1400025c0
   1400045c3:	mov    r8,rax
   1400045c6:	xor    edx,edx
   1400045c8:	test   r8,r8
   1400045cb:	je     0x14000460f
   1400045cd:	mov    DWORD PTR [r8+0x8],edx
   1400045d1:	mov    QWORD PTR [r8+0x10],r8
   1400045d5:	lea    rax,[rip+0x1281c]        # 0x140016df8
   1400045dc:	mov    QWORD PTR [r8],rax
   1400045df:	mov    rcx,QWORD PTR [rbx+0x10]
   1400045e3:	mov    QWORD PTR [r8+0x18],rcx
   1400045e7:	mov    eax,DWORD PTR [rbx+0x18]
   1400045ea:	mov    DWORD PTR [r8+0x20],eax
   1400045ee:	mov    eax,DWORD PTR [rbx+0x1c]
   1400045f1:	mov    DWORD PTR [r8+0x24],eax
   1400045f5:	mov    DWORD PTR [r8+0x28],edx
   1400045f9:	mov    DWORD PTR [r8+0x2c],edx
   1400045fd:	mov    DWORD PTR [r8+0x30],edx
   140004601:	mov    DWORD PTR [r8+0x34],edx
   140004605:	mov    DWORD PTR [r8+0x8],0x5b
   14000460d:	jmp    0x140004612
   14000460f:	mov    r8,rdx
   140004612:	mov    eax,DWORD PTR [rbx+0x20]
   140004615:	mov    DWORD PTR [r8+0x28],eax
   140004619:	mov    eax,DWORD PTR [rbx+0x24]
   14000461c:	mov    DWORD PTR [r8+0x2c],eax
   140004620:	mov    eax,DWORD PTR [rbx+0x28]
   140004623:	mov    DWORD PTR [r8+0x30],eax
   140004627:	mov    eax,DWORD PTR [rbx+0x2c]
   14000462a:	mov    DWORD PTR [r8+0x34],eax
   14000462e:	mov    rax,QWORD PTR [r8+0x10]
   140004632:	mov    QWORD PTR [r8+0x10],rdx
   140004636:	add    rsp,0x20
   14000463a:	pop    rbx
   14000463b:	ret    
   14000463c:	xor    eax,eax
   14000463e:	add    rsp,0x20
   140004642:	pop    rbx
   140004643:	ret    
   140004644:	int3   
   140004645:	int3   
   140004646:	int3   
   140004647:	int3   
   140004648:	int3   
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	int3   
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	mov    r11,rsp
   140004653:	push   rbx
   140004654:	push   rdi
   140004655:	push   r13
   140004657:	push   r14
   140004659:	sub    rsp,0xc8
   140004660:	xor    r14d,r14d
   140004663:	mov    r8d,0x4
   140004669:	mov    QWORD PTR [r11+0x8],rbp
   14000466d:	mov    rdi,rdx
   140004670:	lea    rax,[r11-0x68]
   140004674:	lea    rdx,[rsp+0x30]
   140004679:	mov    ebx,r14d
   14000467c:	mov    QWORD PTR [r11+0x10],rsi
   140004680:	mov    r13,rcx
   140004683:	mov    QWORD PTR [rsp+0x28],rdx
   140004688:	mov    DWORD PTR [rsp+0x20],r8d
   14000468d:	mov    DWORD PTR [r11-0x74],r14d
   140004691:	mov    DWORD PTR [rsp+0x24],ebx
   140004695:	mov    QWORD PTR [r11-0x70],rax
   140004699:	mov    DWORD PTR [r11-0x78],r8d
   14000469d:	mov    QWORD PTR [r11+0x18],r12
   1400046a1:	test   rdi,rdi
   1400046a4:	je     0x140004968
   1400046aa:	cmp    DWORD PTR [rdi+0x8],0x18
   1400046ae:	jne    0x1400047b5
   1400046b4:	cmp    ebx,r8d
   1400046b7:	jne    0x140004730
   1400046b9:	lea    ebp,[rbx+rbx*1]
   1400046bc:	mov    rsi,rdx
   1400046bf:	cmp    ebp,r8d
   1400046c2:	je     0x14000470f
   1400046c4:	cmp    ebp,0x4
   1400046c7:	jle    0x1400046e1
   1400046c9:	movsxd rcx,ebp
   1400046cc:	shl    rcx,0x4
   1400046d0:	call   QWORD PTR [rip+0x10a42]        # 0x140015118
   1400046d6:	mov    DWORD PTR [rsp+0x20],ebp
   1400046da:	mov    QWORD PTR [rsp+0x28],rax
   1400046df:	jmp    0x1400046f3
   1400046e1:	lea    rax,[rsp+0x30]
   1400046e6:	mov    DWORD PTR [rsp+0x20],0x4
   1400046ee:	mov    QWORD PTR [rsp+0x28],rax
   1400046f3:	movsxd r8,ebx
   1400046f6:	mov    rdx,rsi
   1400046f9:	mov    rcx,rax
   1400046fc:	shl    r8,0x4
   140004700:	mov    DWORD PTR [rsp+0x24],r14d
   140004705:	call   0x140014998
   14000470a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000470f:	lea    rax,[rsp+0x30]
   140004714:	mov    DWORD PTR [rsp+0x24],ebx
   140004718:	cmp    rsi,rax
   14000471b:	je     0x140004730
   14000471d:	cmp    rsi,rdx
   140004720:	je     0x140004730
   140004722:	mov    rcx,rsi
   140004725:	call   QWORD PTR [rip+0x109d5]        # 0x140015100
   14000472b:	mov    rdx,QWORD PTR [rsp+0x28]
   140004730:	movsxd rcx,ebx
   140004733:	inc    ebx
   140004735:	shl    rcx,0x4
   140004739:	mov    DWORD PTR [rsp+0x24],ebx
   14000473d:	add    rcx,rdx
   140004740:	lea    rdx,[rdi+0x18]
   140004744:	call   QWORD PTR [rip+0x10a66]        # 0x1400151b0
   14000474a:	mov    ecx,DWORD PTR [rsp+0x74]
   14000474e:	cmp    ecx,DWORD PTR [rsp+0x70]
   140004752:	jne    0x140004768
   140004754:	lea    r8d,[rcx+rcx*1]
   140004758:	mov    edx,ecx
   14000475a:	lea    rcx,[rsp+0x70]
   14000475f:	call   0x140003fb0
   140004764:	mov    ecx,DWORD PTR [rsp+0x74]
   140004768:	movsxd rax,ecx
   14000476b:	inc    ecx
   14000476d:	mov    DWORD PTR [rsp+0x74],ecx
   140004771:	mov    rcx,rax
   140004774:	mov    rax,QWORD PTR [rsp+0x78]
   140004779:	shl    rcx,0x4
   14000477d:	add    rcx,rax
   140004780:	je     0x14000479e
   140004782:	mov    eax,DWORD PTR [rdi+0x38]
   140004785:	mov    DWORD PTR [rcx],eax
   140004787:	mov    eax,DWORD PTR [rdi+0x3c]
   14000478a:	mov    DWORD PTR [rcx+0x4],eax
   14000478d:	mov    eax,DWORD PTR [rdi+0x40]
   140004790:	mov    DWORD PTR [rcx+0x8],eax
   140004793:	mov    eax,DWORD PTR [rdi+0x44]
   140004796:	mov    DWORD PTR [rcx+0xc],eax
   140004799:	mov    rax,QWORD PTR [rsp+0x78]
   14000479e:	mov    rdi,QWORD PTR [rdi+0x10]
   1400047a2:	mov    rdx,QWORD PTR [rsp+0x28]
   1400047a7:	mov    ebx,DWORD PTR [rsp+0x24]
   1400047ab:	mov    r8d,DWORD PTR [rsp+0x20]
   1400047b0:	jmp    0x1400046a1
   1400047b5:	test   rdi,rdi
   1400047b8:	je     0x140004968
   1400047be:	cmp    DWORD PTR [rdi+0x8],0x21
   1400047c2:	jne    0x140004968
   1400047c8:	mov    rcx,QWORD PTR [r13+0x8]
   1400047cc:	mov    QWORD PTR [rsp+0xc0],r15
   1400047d4:	mov    rbx,QWORD PTR [rcx+0x18]
   1400047d8:	test   rbx,rbx
   1400047db:	je     0x1400047ed
   1400047dd:	lea    rax,[rbx+0x38]
   1400047e1:	cmp    rax,QWORD PTR [rcx+0x20]
   1400047e5:	jae    0x1400047ed
   1400047e7:	mov    QWORD PTR [rcx+0x18],rax
   1400047eb:	jmp    0x1400047fa
   1400047ed:	mov    edx,0x38
   1400047f2:	call   0x1400025c0
   1400047f7:	mov    rbx,rax
   1400047fa:	lea    r15,[rip+0x12507]        # 0x140016d08
   140004801:	test   rbx,rbx
   140004804:	je     0x140004838
   140004806:	lea    rdx,[rdi+0x10]
   14000480a:	lea    rcx,[rbx+0x18]
   14000480e:	mov    DWORD PTR [rbx+0x8],r14d
   140004812:	mov    QWORD PTR [rbx],r15
   140004815:	mov    QWORD PTR [rbx+0x10],rbx
   140004819:	call   QWORD PTR [rip+0x10989]        # 0x1400151a8
   14000481f:	mov    DWORD PTR [rbx+0x28],r14d
   140004823:	mov    DWORD PTR [rbx+0x2c],r14d
   140004827:	mov    DWORD PTR [rbx+0x30],r14d
   14000482b:	mov    DWORD PTR [rbx+0x34],r14d
   14000482f:	mov    DWORD PTR [rbx+0x8],0x5a
   140004836:	jmp    0x14000483b
   140004838:	mov    rbx,r14
   14000483b:	mov    eax,DWORD PTR [rdi+0x20]
   14000483e:	mov    DWORD PTR [rbx+0x28],eax
   140004841:	mov    eax,DWORD PTR [rdi+0x24]
   140004844:	mov    DWORD PTR [rbx+0x2c],eax
   140004847:	mov    eax,DWORD PTR [rdi+0x28]
   14000484a:	mov    DWORD PTR [rbx+0x30],eax
   14000484d:	mov    eax,DWORD PTR [rdi+0x2c]
   140004850:	mov    DWORD PTR [rbx+0x34],eax
   140004853:	mov    eax,DWORD PTR [rsp+0x24]
   140004857:	dec    eax
   140004859:	movsxd rbp,eax
   14000485c:	cmp    eax,0xffffffff
   14000485f:	je     0x140004926
   140004865:	mov    rsi,rbp
   140004868:	lea    r12d,[rax+0x1]
   14000486c:	shl    rsi,0x4
   140004870:	shl    rbp,0x4
   140004874:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004880:	mov    rcx,QWORD PTR [r13+0x8]
   140004884:	mov    rdi,QWORD PTR [rcx+0x18]
   140004888:	test   rdi,rdi
   14000488b:	je     0x14000489d
   14000488d:	lea    rax,[rdi+0x38]
   140004891:	cmp    rax,QWORD PTR [rcx+0x20]
   140004895:	jae    0x14000489d
   140004897:	mov    QWORD PTR [rcx+0x18],rax
   14000489b:	jmp    0x1400048aa
   14000489d:	mov    edx,0x38
   1400048a2:	call   0x1400025c0
   1400048a7:	mov    rdi,rax
   1400048aa:	test   rdi,rdi
   1400048ad:	je     0x1400048f0
   1400048af:	mov    rdx,QWORD PTR [rsp+0x28]
   1400048b4:	lea    rcx,[rdi+0x18]
   1400048b8:	mov    DWORD PTR [rdi+0x8],r14d
   1400048bc:	add    rdx,rbp
   1400048bf:	mov    QWORD PTR [rdi],r15
   1400048c2:	call   QWORD PTR [rip+0x108e0]        # 0x1400151a8
   1400048c8:	mov    DWORD PTR [rdi+0x28],r14d
   1400048cc:	mov    DWORD PTR [rdi+0x2c],r14d
   1400048d0:	mov    DWORD PTR [rdi+0x30],r14d
   1400048d4:	mov    DWORD PTR [rdi+0x34],r14d
   1400048d8:	mov    DWORD PTR [rdi+0x8],0x5a
   1400048df:	mov    rax,QWORD PTR [rbx+0x10]
   1400048e3:	mov    QWORD PTR [rdi+0x10],rax
   1400048e7:	mov    QWORD PTR [rbx+0x10],rdi
   1400048eb:	mov    rbx,rdi
   1400048ee:	jmp    0x1400048f3
   1400048f0:	mov    rbx,r14
   1400048f3:	mov    rcx,QWORD PTR [rsp+0x78]
   1400048f8:	sub    rbp,0x10
   1400048fc:	sub    rsi,0x10
   140004900:	sub    r12,0x1
   140004904:	mov    eax,DWORD PTR [rsi+rcx*1+0x10]
   140004908:	mov    DWORD PTR [rbx+0x28],eax
   14000490b:	mov    eax,DWORD PTR [rsi+rcx*1+0x14]
   14000490f:	mov    DWORD PTR [rbx+0x2c],eax
   140004912:	mov    eax,DWORD PTR [rsi+rcx*1+0x18]
   140004916:	mov    DWORD PTR [rbx+0x30],eax
   140004919:	mov    eax,DWORD PTR [rsi+rcx*1+0x1c]
   14000491d:	mov    DWORD PTR [rbx+0x34],eax
   140004920:	jne    0x140004880
   140004926:	mov    rdi,QWORD PTR [rbx+0x10]
   14000492a:	mov    r15,QWORD PTR [rsp+0xc0]
   140004932:	mov    QWORD PTR [rbx+0x10],r14
   140004936:	mov    rcx,QWORD PTR [rsp+0x78]
   14000493b:	lea    rax,[rsp+0x80]
   140004943:	cmp    rcx,rax
   140004946:	je     0x14000494e
   140004948:	call   QWORD PTR [rip+0x107b2]        # 0x140015100
   14000494e:	mov    rcx,QWORD PTR [rsp+0x28]
   140004953:	lea    rax,[rsp+0x30]
   140004958:	cmp    rcx,rax
   14000495b:	je     0x140004963
   14000495d:	call   QWORD PTR [rip+0x1079d]        # 0x140015100
   140004963:	mov    rax,rdi
   140004966:	jmp    0x140004998
   140004968:	lea    rcx,[rsp+0x80]
   140004970:	cmp    rax,rcx
   140004973:	je     0x140004983
   140004975:	mov    rcx,rax
   140004978:	call   QWORD PTR [rip+0x10782]        # 0x140015100
   14000497e:	mov    rdx,QWORD PTR [rsp+0x28]
   140004983:	lea    rax,[rsp+0x30]
   140004988:	cmp    rdx,rax
   14000498b:	je     0x140004996
   14000498d:	mov    rcx,rdx
   140004990:	call   QWORD PTR [rip+0x1076a]        # 0x140015100
   140004996:	xor    eax,eax
   140004998:	mov    r12,QWORD PTR [rsp+0x100]
   1400049a0:	mov    rsi,QWORD PTR [rsp+0xf8]
   1400049a8:	mov    rbp,QWORD PTR [rsp+0xf0]
   1400049b0:	add    rsp,0xc8
   1400049b7:	pop    r14
   1400049b9:	pop    r13
   1400049bb:	pop    rdi
   1400049bc:	pop    rbx
   1400049bd:	ret    
   1400049be:	int3   
   1400049bf:	int3   
   1400049c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400049ca:	mov    QWORD PTR [rsp+0x20],rsi
   1400049cf:	mov    DWORD PTR [rsp+0x10],edx
   1400049d3:	push   rdi
   1400049d4:	sub    rsp,0x20
   1400049d8:	mov    rdx,QWORD PTR [rcx]
   1400049db:	movsxd rdi,r8d
   1400049de:	mov    rbp,rcx
   1400049e1:	movsxd rax,DWORD PTR [rdx+0x8]
   1400049e5:	mov    r8d,edi
   1400049e8:	lea    rbx,[rdx+rax*8+0x10]
   1400049ed:	lea    rdx,[rsp+0x38]
   1400049f2:	call   QWORD PTR [rip+0x109a0]        # 0x140015398
   1400049f8:	mov    r10,QWORD PTR [rbp+0x0]
   1400049fc:	movsxd rdx,DWORD PTR [rsp+0x38]
   140004a01:	movsxd r9,DWORD PTR [r10+0x8]
   140004a05:	mov    rcx,rbp
   140004a08:	mov    rsi,rax
   140004a0b:	add    rdx,r9
   140004a0e:	lea    r8,[r10+rdx*8+0x10]
   140004a13:	lea    rdx,[r10+r9*8+0x10]
   140004a18:	mov    r9,rbx
   140004a1b:	call   0x140001080
   140004a20:	mov    rdx,QWORD PTR [rbp+0x0]
   140004a24:	movsxd r11,DWORD PTR [rsp+0x38]
   140004a29:	movsxd rcx,DWORD PTR [rdx+0xc]
   140004a2d:	lea    r9,[rbx+r11*8]
   140004a31:	lea    r8,[rdx+rcx*8+0x10]
   140004a36:	movsxd rcx,DWORD PTR [rdx+0x8]
   140004a3a:	add    rcx,r11
   140004a3d:	add    rcx,rdi
   140004a40:	lea    rdx,[rdx+rcx*8+0x10]
   140004a45:	mov    rcx,rbp
   140004a48:	call   0x140001080
   140004a4d:	mov    r11d,DWORD PTR [rsi]
   140004a50:	test   r11d,r11d
   140004a53:	je     0x140004a66
   140004a55:	cmp    r11d,0xffffffff
   140004a59:	je     0x140004a71
   140004a5b:	lock add DWORD PTR [rsi],0xffffffff
   140004a5f:	setne  al
   140004a62:	test   al,al
   140004a64:	jne    0x140004a71
   140004a66:	mov    rdx,rsi
   140004a69:	mov    rcx,rbp
   140004a6c:	call   0x140001000
   140004a71:	mov    rdx,QWORD PTR [rbp+0x0]
   140004a75:	movsxd rax,DWORD PTR [rsp+0x38]
   140004a7a:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a7f:	movsxd rcx,DWORD PTR [rdx+0x8]
   140004a83:	mov    rbp,QWORD PTR [rsp+0x40]
   140004a88:	mov    rsi,QWORD PTR [rsp+0x48]
   140004a8d:	add    rcx,rax
   140004a90:	lea    rax,[rdx+rcx*8+0x10]
   140004a95:	add    rsp,0x20
   140004a99:	pop    rdi
   140004a9a:	ret    
   140004a9b:	int3   
   140004a9c:	int3   
   140004a9d:	int3   
   140004a9e:	int3   
   140004a9f:	int3   
   140004aa0:	rex push rbx
   140004aa2:	sub    rsp,0x20
   140004aa6:	mov    rbx,rcx
   140004aa9:	mov    QWORD PTR [rcx],rdx
   140004aac:	mov    rcx,rdx
   140004aaf:	call   0x14000c450
   140004ab4:	mov    QWORD PTR [rbx+0x8],rax
   140004ab8:	xor    eax,eax
   140004aba:	mov    DWORD PTR [rbx+0x10],eax
   140004abd:	mov    DWORD PTR [rbx+0x14],eax
   140004ac0:	mov    QWORD PTR [rbx+0x18],rax
   140004ac4:	mov    QWORD PTR [rbx+0x20],rax
   140004ac8:	mov    QWORD PTR [rbx+0x28],rax
   140004acc:	mov    QWORD PTR [rbx+0x30],rax
   140004ad0:	mov    QWORD PTR [rbx+0x38],rax
   140004ad4:	mov    QWORD PTR [rbx+0x48],rax
   140004ad8:	mov    DWORD PTR [rbx+0x50],eax
   140004adb:	mov    DWORD PTR [rbx+0x54],eax
   140004ade:	mov    DWORD PTR [rbx+0x58],eax
   140004ae1:	mov    DWORD PTR [rbx+0x5c],eax
   140004ae4:	mov    DWORD PTR [rbx+0x60],eax
   140004ae7:	mov    DWORD PTR [rbx+0x64],eax
   140004aea:	mov    DWORD PTR [rbx+0x68],eax
   140004aed:	mov    DWORD PTR [rbx+0x6c],eax
   140004af0:	mov    DWORD PTR [rbx+0x70],eax
   140004af3:	mov    DWORD PTR [rbx+0x74],eax
   140004af6:	mov    DWORD PTR [rbx+0x88],eax
   140004afc:	mov    DWORD PTR [rbx+0x8c],eax
   140004b02:	mov    DWORD PTR [rbx+0x90],eax
   140004b08:	mov    DWORD PTR [rbx+0x94],eax
   140004b0e:	mov    QWORD PTR [rbx+0x98],rax
   140004b15:	mov    DWORD PTR [rbx+0xa0],eax
   140004b1b:	mov    DWORD PTR [rbx+0xa4],eax
   140004b21:	mov    DWORD PTR [rbx+0xb8],eax
   140004b27:	mov    DWORD PTR [rbx+0xbc],eax
   140004b2d:	mov    DWORD PTR [rbx+0xc0],eax
   140004b33:	mov    DWORD PTR [rbx+0xc4],eax
   140004b39:	mov    QWORD PTR [rbx+0xc8],rax
   140004b40:	mov    DWORD PTR [rbx+0xd0],eax
   140004b46:	mov    DWORD PTR [rbx+0xd4],eax
   140004b4c:	mov    DWORD PTR [rbx+0xe8],eax
   140004b52:	mov    DWORD PTR [rbx+0xec],eax
   140004b58:	mov    DWORD PTR [rbx+0xf0],eax
   140004b5e:	mov    DWORD PTR [rbx+0xf4],eax
   140004b64:	mov    QWORD PTR [rbx+0xf8],rax
   140004b6b:	mov    DWORD PTR [rbx+0x100],eax
   140004b71:	mov    DWORD PTR [rbx+0x104],eax
   140004b77:	mov    QWORD PTR [rbx+0x108],rax
   140004b7e:	mov    QWORD PTR [rbx+0x110],rax
   140004b85:	mov    rax,QWORD PTR [rip+0x10824]        # 0x1400153b0
   140004b8c:	mov    QWORD PTR [rbx+0x118],rax
   140004b93:	mov    rax,rbx
   140004b96:	add    rsp,0x20
   140004b9a:	pop    rbx
   140004b9b:	ret    
   140004b9c:	int3   
   140004b9d:	int3   
   140004b9e:	int3   
   140004b9f:	int3   
   140004ba0:	rex push rbx
   140004ba2:	sub    rsp,0x20
   140004ba6:	cmp    DWORD PTR [rcx+0x14],0x0
   140004baa:	mov    rbx,rcx
   140004bad:	je     0x140004bd7
   140004baf:	mov    rcx,QWORD PTR [rcx+0x18]
   140004bb3:	call   QWORD PTR [rip+0x10547]        # 0x140015100
   140004bb9:	mov    rcx,QWORD PTR [rbx+0x20]
   140004bbd:	call   QWORD PTR [rip+0x1053d]        # 0x140015100
   140004bc3:	mov    rcx,QWORD PTR [rbx+0x28]
   140004bc7:	call   QWORD PTR [rip+0x10533]        # 0x140015100
   140004bcd:	mov    rcx,QWORD PTR [rbx+0x30]
   140004bd1:	call   QWORD PTR [rip+0x10529]        # 0x140015100
   140004bd7:	lea    rcx,[rbx+0x118]
   140004bde:	mov    rdx,QWORD PTR [rcx]
   140004be1:	mov    eax,DWORD PTR [rdx]
   140004be3:	test   eax,eax
   140004be5:	je     0x140004bf7
   140004be7:	cmp    eax,0xffffffff
   140004bea:	je     0x140004bff
   140004bec:	lock add DWORD PTR [rdx],0xffffffff
   140004bf0:	setne  al
   140004bf3:	test   al,al
   140004bf5:	jne    0x140004bff
   140004bf7:	mov    rdx,QWORD PTR [rcx]
   140004bfa:	call   0x140001000
   140004bff:	add    rsp,0x20
   140004c03:	pop    rbx
   140004c04:	ret    
   140004c05:	int3   
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	mov    QWORD PTR [rsp+0x8],rbx
   140004c15:	push   rdi
   140004c16:	sub    rsp,0x20
   140004c1a:	mov    rax,QWORD PTR [rcx]
   140004c1d:	mov    rdi,rdx
   140004c20:	mov    rbx,rcx
   140004c23:	mov    r8d,DWORD PTR [rax]
   140004c26:	cmp    r8d,0x1
   140004c2a:	je     0x140004c43
   140004c2c:	test   r8d,r8d
   140004c2f:	je     0x140004c43
   140004c31:	mov    edx,0x7fffffff
   140004c36:	mov    r8d,0x1
   140004c3c:	call   0x1400049c0
   140004c41:	jmp    0x140004c49
   140004c43:	call   QWORD PTR [rip+0x10747]        # 0x140015390
   140004c49:	mov    r8,rdi
   140004c4c:	mov    rdx,rax
   140004c4f:	mov    rcx,rbx
   140004c52:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c57:	add    rsp,0x20
   140004c5b:	pop    rdi
   140004c5c:	jmp    0x1400040c0
   140004c61:	int3   
   140004c62:	int3   
   140004c63:	int3   
   140004c64:	int3   
   140004c65:	int3   
   140004c66:	int3   
   140004c67:	int3   
   140004c68:	int3   
   140004c69:	int3   
   140004c6a:	int3   
   140004c6b:	int3   
   140004c6c:	int3   
   140004c6d:	int3   
   140004c6e:	int3   
   140004c6f:	int3   
   140004c70:	rex push rbx
   140004c72:	push   rbp
   140004c73:	push   rsi
   140004c74:	push   rdi
   140004c75:	push   r12
   140004c77:	push   r13
   140004c79:	push   r14
   140004c7b:	push   r15
   140004c7d:	sub    rsp,0x3c8
   140004c84:	mov    rbp,rcx
   140004c87:	mov    rcx,QWORD PTR [rcx]
   140004c8a:	xor    r12d,r12d
   140004c8d:	mov    edi,edx
   140004c8f:	mov    esi,r12d
   140004c92:	mov    DWORD PTR [rsp+0x30],r12d
   140004c97:	call   0x14000c420
   140004c9c:	lea    r14,[rbp+0x78]
   140004ca0:	or     r15d,0xffffffff
   140004ca4:	mov    rbx,rax
   140004ca7:	mov    QWORD PTR [rsp+0x38],rax
   140004cac:	xor    al,al
   140004cae:	mov    DWORD PTR [r14],edi
   140004cb1:	mov    r13d,r12d
   140004cb4:	mov    BYTE PTR [rsp+0x418],al
   140004cbb:	mov    QWORD PTR [rbp+0x108],r14
   140004cc2:	cmp    edi,0x67
   140004cc5:	jne    0x140004ed7
   140004ccb:	mov    rcx,rbx
   140004cce:	call   0x14000d910
   140004cd3:	test   al,al
   140004cd5:	jne    0x140004ed7
   140004cdb:	lea    rax,[rip+0x107e6]        # 0x1400154c8
   140004ce2:	mov    QWORD PTR [rsp+0xb8],rax
   140004cea:	mov    rcx,QWORD PTR [rbp+0x0]
   140004cee:	call   0x14000c440
   140004cf3:	lea    rdi,[rsp+0xb8]
   140004cfb:	lea    rcx,[rsp+0x98]
   140004d03:	test   rax,rax
   140004d06:	mov    DWORD PTR [rsp+0x80],0x1
   140004d11:	mov    DWORD PTR [rsp+0x84],r12d
   140004d19:	mov    DWORD PTR [rsp+0x88],r12d
   140004d21:	mov    DWORD PTR [rsp+0x8c],r12d
   140004d29:	mov    DWORD PTR [rsp+0x90],r12d
   140004d31:	cmovne rdi,rax
   140004d35:	call   QWORD PTR [rip+0x104b5]        # 0x1400151f0
   140004d3b:	lea    r8,[rsp+0x80]
   140004d43:	mov    rdx,rdi
   140004d46:	mov    rcx,rbx
   140004d49:	call   0x140010980
   140004d4e:	test   al,al
   140004d50:	jne    0x140004df4
   140004d56:	lea    rcx,[rbp+0x118]
   140004d5d:	mov    rax,QWORD PTR [rcx]
   140004d60:	mov    edx,DWORD PTR [rax]
   140004d62:	cmp    edx,0x1
   140004d65:	je     0x140004d7c
   140004d67:	test   edx,edx
   140004d69:	je     0x140004d7c
   140004d6b:	lea    r8d,[r12+0x1]
   140004d70:	mov    edx,0x7fffffff
   140004d75:	call   0x1400049c0
   140004d7a:	jmp    0x140004d82
   140004d7c:	call   QWORD PTR [rip+0x1060e]        # 0x140015390
   140004d82:	mov    ecx,0x20
   140004d87:	mov    rbx,rax
   140004d8a:	call   0x14001463e
   140004d8f:	mov    rdi,rax
   140004d92:	test   rax,rax
   140004d95:	je     0x140004de1
   140004d97:	mov    eax,DWORD PTR [rsp+0x80]
   140004d9e:	lea    rcx,[rsp+0x84]
   140004da6:	lea    rdx,[rsp+0x98]
   140004dae:	mov    DWORD PTR [rdi],eax
   140004db0:	mov    eax,DWORD PTR [rcx]
   140004db2:	mov    DWORD PTR [rdi+0x4],eax
   140004db5:	mov    eax,DWORD PTR [rcx+0x4]
   140004db8:	mov    DWORD PTR [rdi+0x8],eax
   140004dbb:	mov    eax,DWORD PTR [rcx+0x8]
   140004dbe:	mov    DWORD PTR [rdi+0xc],eax
   140004dc1:	mov    eax,DWORD PTR [rcx+0xc]
   140004dc4:	lea    rcx,[rdi+0x18]
   140004dc8:	mov    DWORD PTR [rdi+0x10],eax
   140004dcb:	call   QWORD PTR [rip+0x105f7]        # 0x1400153c8
   140004dd1:	mov    QWORD PTR [rbx],rdi
   140004dd4:	lea    rcx,[rsp+0x98]
   140004ddc:	jmp    0x14000bc12
   140004de1:	mov    rdi,r12
   140004de4:	mov    QWORD PTR [rbx],r12
   140004de7:	lea    rcx,[rsp+0x98]
   140004def:	jmp    0x14000bc12
   140004df4:	mov    eax,DWORD PTR [rbx+0x80]
   140004dfa:	lea    rcx,[rbx+0x8]
   140004dfe:	mov    DWORD PTR [rbp+0xa8],eax
   140004e04:	mov    rax,QWORD PTR [rbx+0x68]
   140004e08:	mov    QWORD PTR [rbp+0xb0],rax
   140004e0f:	mov    rdi,QWORD PTR [rbx+0x50]
   140004e13:	call   QWORD PTR [rip+0x10377]        # 0x140015190
   140004e19:	mov    rcx,rdi
   140004e1c:	sub    rdi,QWORD PTR [rbx+0x48]
   140004e20:	lea    rdx,[rbx+0x20]
   140004e24:	sub    rcx,rax
   140004e27:	mov    eax,DWORD PTR [rbx+0x84]
   140004e2d:	sar    rdi,1
   140004e30:	mov    DWORD PTR [rsp+0x5c],eax
   140004e34:	mov    eax,DWORD PTR [rbx+0x88]
   140004e3a:	sar    rcx,1
   140004e3d:	mov    DWORD PTR [rsp+0x58],ecx
   140004e41:	lea    rcx,[rsp+0x58]
   140004e46:	mov    DWORD PTR [rsp+0x60],eax
   140004e4a:	inc    edi
   140004e4c:	mov    DWORD PTR [rsp+0x64],edi
   140004e50:	mov    eax,DWORD PTR [rcx]
   140004e52:	mov    DWORD PTR [rbp+0xb8],eax
   140004e58:	mov    eax,DWORD PTR [rcx+0x4]
   140004e5b:	mov    DWORD PTR [rbp+0xbc],eax
   140004e61:	mov    eax,DWORD PTR [rcx+0x8]
   140004e64:	mov    DWORD PTR [rbp+0xc0],eax
   140004e6a:	mov    eax,DWORD PTR [rcx+0xc]
   140004e6d:	lea    rcx,[rsp+0x140]
   140004e75:	mov    DWORD PTR [rbp+0xc4],eax
   140004e7b:	call   QWORD PTR [rip+0x10327]        # 0x1400151a8
   140004e81:	mov    rax,QWORD PTR [rsp+0x140]
   140004e89:	mov    QWORD PTR [rbp+0xc8],rax
   140004e90:	mov    eax,DWORD PTR [rsp+0x148]
   140004e97:	lea    rcx,[rsp+0x98]
   140004e9f:	mov    DWORD PTR [rbp+0xd0],eax
   140004ea5:	mov    eax,DWORD PTR [rsp+0x14c]
   140004eac:	mov    DWORD PTR [rbp+0xd4],eax
   140004eb2:	lea    rax,[rbp+0xd8]
   140004eb9:	mov    QWORD PTR [rbp+0x110],rax
   140004ec0:	call   QWORD PTR [rip+0x104f2]        # 0x1400153b8
   140004ec6:	lea    rdx,[rip+0x105fb]        # 0x1400154c8
   140004ecd:	mov    QWORD PTR [rsp+0xb8],rdx
   140004ed5:	jmp    0x140004ee5
   140004ed7:	lea    rax,[rbp+0xa8]
   140004ede:	mov    QWORD PTR [rbp+0x110],rax
   140004ee5:	mov    DWORD PTR [rbp+0x10],0xffffffff
   140004eec:	lea    r9,[rip+0xffffffffffffb10d]        # 0x140000000
   140004ef3:	mov    QWORD PTR [rbp+0x38],r12
   140004ef7:	inc    DWORD PTR [rbp+0x10]
   140004efa:	mov    eax,DWORD PTR [rbp+0x14]
   140004efd:	lea    rdi,[rip+0x1239c]        # 0x1400172a0
   140004f04:	mov    edx,0xffffff96
   140004f09:	cmp    DWORD PTR [rbp+0x10],eax
   140004f0c:	jne    0x140004f84
   140004f0e:	test   eax,eax
   140004f10:	jne    0x140004f1b
   140004f12:	mov    DWORD PTR [rbp+0x14],0x80
   140004f19:	jmp    0x140004f20
   140004f1b:	add    eax,eax
   140004f1d:	mov    DWORD PTR [rbp+0x14],eax
   140004f20:	movsxd rdx,DWORD PTR [rbp+0x14]
   140004f24:	mov    rcx,QWORD PTR [rbp+0x18]
   140004f28:	shl    rdx,0x3
   140004f2c:	call   QWORD PTR [rip+0x101de]        # 0x140015110
   140004f32:	mov    QWORD PTR [rbp+0x18],rax
   140004f36:	movsxd rdx,DWORD PTR [rbp+0x14]
   140004f3a:	mov    rcx,QWORD PTR [rbp+0x20]
   140004f3e:	shl    rdx,0x2
   140004f42:	call   QWORD PTR [rip+0x101c8]        # 0x140015110
   140004f48:	mov    QWORD PTR [rbp+0x20],rax
   140004f4c:	movsxd rdx,DWORD PTR [rbp+0x14]
   140004f50:	mov    rcx,QWORD PTR [rbp+0x28]
   140004f54:	shl    rdx,0x4
   140004f58:	call   QWORD PTR [rip+0x101b2]        # 0x140015110
   140004f5e:	mov    QWORD PTR [rbp+0x28],rax
   140004f62:	movsxd rdx,DWORD PTR [rbp+0x14]
   140004f66:	mov    rcx,QWORD PTR [rbp+0x30]
   140004f6a:	shl    rdx,0x4
   140004f6e:	call   QWORD PTR [rip+0x1019c]        # 0x140015110
   140004f74:	lea    r9,[rip+0xffffffffffffb085]        # 0x140000000
   140004f7b:	mov    edx,0xffffff96
   140004f80:	mov    QWORD PTR [rbp+0x30],rax
   140004f84:	movsxd rcx,DWORD PTR [rbp+0x10]
   140004f88:	mov    rax,QWORD PTR [rbp+0x20]
   140004f8c:	mov    DWORD PTR [rax+rcx*4],r13d
   140004f90:	cmp    r15d,0xffffffff
   140004f94:	jne    0x1400050d2
   140004f9a:	movsxd rax,r13d
   140004f9d:	cmp    dx,WORD PTR [r9+rax*2+0x187c0]
   140004fa6:	je     0x1400050d2
   140004fac:	mov    eax,DWORD PTR [rbp+0x58]
   140004faf:	mov    DWORD PTR [rbp+0x68],eax
   140004fb2:	mov    eax,DWORD PTR [rbp+0x5c]
   140004fb5:	mov    DWORD PTR [rbp+0x6c],eax
   140004fb8:	mov    eax,DWORD PTR [rbp+0x60]
   140004fbb:	mov    DWORD PTR [rbp+0x70],eax
   140004fbe:	mov    eax,DWORD PTR [rbp+0x64]
   140004fc1:	mov    DWORD PTR [rbp+0x74],eax
   140004fc4:	mov    rax,QWORD PTR [rbp+0x110]
   140004fcb:	cmp    QWORD PTR [rbp+0x108],rax
   140004fd2:	jne    0x140005085
   140004fd8:	mov    rcx,rbx
   140004fdb:	call   0x140010810
   140004fe0:	lea    rdx,[rbx+0x20]
   140004fe4:	lea    rcx,[rsp+0x190]
   140004fec:	mov    r15d,eax
   140004fef:	mov    rax,QWORD PTR [rbx+0x68]
   140004ff3:	mov    QWORD PTR [rbp+0x40],rax
   140004ff7:	call   QWORD PTR [rip+0x101ab]        # 0x1400151a8
   140004ffd:	mov    rax,QWORD PTR [rsp+0x190]
   140005005:	mov    QWORD PTR [rbp+0x48],rax
   140005009:	mov    eax,DWORD PTR [rsp+0x198]
   140005010:	lea    rcx,[rbx+0x8]
   140005014:	mov    DWORD PTR [rbp+0x50],eax
   140005017:	mov    eax,DWORD PTR [rsp+0x19c]
   14000501e:	mov    DWORD PTR [rbp+0x54],eax
   140005021:	mov    rdi,QWORD PTR [rbx+0x50]
   140005025:	call   QWORD PTR [rip+0x10165]        # 0x140015190
   14000502b:	mov    rcx,rdi
   14000502e:	sub    rdi,QWORD PTR [rbx+0x48]
   140005032:	lea    r9,[rip+0xffffffffffffafc7]        # 0x140000000
   140005039:	sub    rcx,rax
   14000503c:	mov    eax,DWORD PTR [rbx+0x84]
   140005042:	sar    rdi,1
   140005045:	mov    DWORD PTR [rsp+0x5c],eax
   140005049:	mov    eax,DWORD PTR [rbx+0x88]
   14000504f:	sar    rcx,1
   140005052:	mov    DWORD PTR [rsp+0x58],ecx
   140005056:	lea    rcx,[rsp+0x58]
   14000505b:	mov    DWORD PTR [rsp+0x60],eax
   14000505f:	inc    edi
   140005061:	mov    DWORD PTR [rsp+0x64],edi
   140005065:	mov    eax,DWORD PTR [rcx]
   140005067:	lea    rdi,[rip+0x12232]        # 0x1400172a0
   14000506e:	mov    DWORD PTR [rbp+0x58],eax
   140005071:	mov    eax,DWORD PTR [rcx+0x4]
   140005074:	mov    DWORD PTR [rbp+0x5c],eax
   140005077:	mov    eax,DWORD PTR [rcx+0x8]
   14000507a:	mov    DWORD PTR [rbp+0x60],eax
   14000507d:	mov    eax,DWORD PTR [rcx+0xc]
   140005080:	mov    DWORD PTR [rbp+0x64],eax
   140005083:	jmp    0x1400050d2
   140005085:	mov    rcx,QWORD PTR [rbp+0x108]
   14000508c:	mov    rax,QWORD PTR [rcx+0x8]
   140005090:	mov    r15d,DWORD PTR [rcx]
   140005093:	mov    QWORD PTR [rbp+0x40],rax
   140005097:	mov    rax,QWORD PTR [rcx+0x20]
   14000509b:	mov    QWORD PTR [rbp+0x48],rax
   14000509f:	mov    eax,DWORD PTR [rcx+0x28]
   1400050a2:	mov    DWORD PTR [rbp+0x50],eax
   1400050a5:	mov    eax,DWORD PTR [rcx+0x2c]
   1400050a8:	mov    DWORD PTR [rbp+0x54],eax
   1400050ab:	mov    rcx,QWORD PTR [rbp+0x108]
   1400050b2:	mov    eax,DWORD PTR [rcx+0x10]
   1400050b5:	mov    DWORD PTR [rbp+0x58],eax
   1400050b8:	mov    eax,DWORD PTR [rcx+0x14]
   1400050bb:	mov    DWORD PTR [rbp+0x5c],eax
   1400050be:	mov    eax,DWORD PTR [rcx+0x18]
   1400050c1:	mov    DWORD PTR [rbp+0x60],eax
   1400050c4:	mov    eax,DWORD PTR [rcx+0x1c]
   1400050c7:	mov    DWORD PTR [rbp+0x64],eax
   1400050ca:	add    QWORD PTR [rbp+0x108],0x30
   1400050d2:	movsxd rdx,r13d
   1400050d5:	movsx  eax,WORD PTR [r9+rdx*2+0x187c0]
   1400050de:	add    eax,r15d
   1400050e1:	js     0x1400050ff
   1400050e3:	movsxd rcx,eax
   1400050e6:	movsx  eax,WORD PTR [r9+rcx*2+0x1ae70]
   1400050ef:	cmp    eax,r15d
   1400050f2:	jne    0x1400050ff
   1400050f4:	movsx  r13d,WORD PTR [r9+rcx*2+0x19230]
   1400050fd:	jmp    0x14000510b
   1400050ff:	movsx  r13d,WORD PTR [r9+rdx*2+0x181a0]
   140005108:	neg    r13d
   14000510b:	test   r13d,r13d
   14000510e:	jle    0x14000517b
   140005110:	cmp    r13d,0x299
   140005117:	je     0x14000b7e6
   14000511d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005121:	mov    rcx,QWORD PTR [rbp+0x18]
   140005125:	mov    rax,QWORD PTR [rbp+0x40]
   140005129:	mov    QWORD PTR [rcx+rdx*8],rax
   14000512d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005131:	mov    rax,QWORD PTR [rbp+0x48]
   140005135:	shl    rcx,0x4
   140005139:	or     r15d,0xffffffff
   14000513d:	add    rcx,QWORD PTR [rbp+0x30]
   140005141:	mov    QWORD PTR [rcx],rax
   140005144:	mov    eax,DWORD PTR [rbp+0x50]
   140005147:	mov    DWORD PTR [rcx+0x8],eax
   14000514a:	mov    eax,DWORD PTR [rbp+0x54]
   14000514d:	mov    DWORD PTR [rcx+0xc],eax
   140005150:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005154:	mov    eax,DWORD PTR [rbp+0x58]
   140005157:	mov    rcx,QWORD PTR [rbp+0x28]
   14000515b:	add    rdx,rdx
   14000515e:	mov    DWORD PTR [rcx+rdx*8],eax
   140005161:	mov    eax,DWORD PTR [rbp+0x5c]
   140005164:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   140005168:	mov    eax,DWORD PTR [rbp+0x60]
   14000516b:	mov    DWORD PTR [rcx+rdx*8+0x8],eax
   14000516f:	mov    eax,DWORD PTR [rbp+0x64]
   140005172:	mov    DWORD PTR [rcx+rdx*8+0xc],eax
   140005176:	jmp    0x14000ae95
   14000517b:	jns    0x14000ae95
   140005181:	or     ecx,0xffffffff
   140005184:	sub    ecx,r13d
   140005187:	movsxd r14,ecx
   14000518a:	movsx  eax,WORD PTR [r9+r14*2+0x17ed0]
   140005193:	sub    DWORD PTR [rbp+0x10],eax
   140005196:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000519a:	cmp    ecx,0x163
   1400051a0:	ja     0x14000ae40
   1400051a6:	movsxd rax,ecx
   1400051a9:	movzx  eax,BYTE PTR [r9+rax*1+0xbf08]
   1400051b2:	mov    ecx,DWORD PTR [r9+rax*4+0xbc30]
   1400051ba:	add    rcx,r9
   1400051bd:	jmp    rcx
   1400051bf:	mov    rcx,QWORD PTR [rbp+0x18]
   1400051c3:	mov    rax,QWORD PTR [rcx+rdx*8+0x8]
   1400051c8:	mov    QWORD PTR [rcx+rdx*8],rax
   1400051cc:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400051d0:	mov    rax,QWORD PTR [rbp+0x18]
   1400051d4:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400051d8:	mov    QWORD PTR [rbp+0x38],rcx
   1400051dc:	jmp    0x14000ae40
   1400051e1:	mov    rcx,QWORD PTR [rbp+0x8]
   1400051e5:	cmp    QWORD PTR [rcx+0x18],r12
   1400051e9:	je     0x1400051ff
   1400051eb:	mov    r8,QWORD PTR [rcx+0x18]
   1400051ef:	lea    rax,[r8+0x20]
   1400051f3:	cmp    rax,QWORD PTR [rcx+0x20]
   1400051f7:	jae    0x1400051ff
   1400051f9:	mov    QWORD PTR [rcx+0x18],rax
   1400051fd:	jmp    0x140005213
   1400051ff:	mov    edx,0x20
   140005204:	call   0x1400025c0
   140005209:	lea    r9,[rip+0xffffffffffffadf0]        # 0x140000000
   140005210:	mov    r8,rax
   140005213:	test   r8,r8
   140005216:	je     0x140005264
   140005218:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000521c:	mov    rax,QWORD PTR [rbp+0x18]
   140005220:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140005225:	mov    rdi,QWORD PTR [rdx+0x10]
   140005229:	mov    QWORD PTR [rdx+0x10],r12
   14000522d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005231:	mov    rax,QWORD PTR [rbp+0x18]
   140005235:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005239:	lea    rax,[rip+0x11ca8]        # 0x140016ee8
   140005240:	mov    QWORD PTR [r8],rax
   140005243:	mov    QWORD PTR [r8+0x10],rdx
   140005247:	mov    QWORD PTR [r8+0x18],rdi
   14000524b:	mov    DWORD PTR [r8+0x8],0x57
   140005253:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005257:	mov    rax,QWORD PTR [rbp+0x18]
   14000525b:	mov    QWORD PTR [rax+rcx*8],r8
   14000525f:	jmp    0x14000ae40
   140005264:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005268:	mov    rax,QWORD PTR [rbp+0x18]
   14000526c:	mov    r8,r12
   14000526f:	mov    QWORD PTR [rax+rcx*8],r12
   140005273:	jmp    0x14000ae40
   140005278:	mov    rax,QWORD PTR [rbp+0x18]
   14000527c:	mov    rdx,QWORD PTR [rax+rdx*8]
   140005280:	mov    rdi,QWORD PTR [rdx+0x18]
   140005284:	mov    QWORD PTR [rdx+0x18],r12
   140005288:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000528c:	mov    rax,QWORD PTR [rbp+0x18]
   140005290:	mov    QWORD PTR [rax+rcx*8],rdi
   140005294:	jmp    0x14000ae40
   140005299:	mov    rdx,QWORD PTR [rbp+0x8]
   14000529d:	mov    ecx,0x20
   1400052a2:	call   0x140004140
   1400052a7:	mov    rdi,rax
   1400052aa:	test   rax,rax
   1400052ad:	je     0x1400052d6
   1400052af:	mov    rax,QWORD PTR [rbp+0x18]
   1400052b3:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400052b7:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400052bb:	lea    rax,[rip+0x11bd6]        # 0x140016e98
   1400052c2:	mov    QWORD PTR [rdi],rax
   1400052c5:	mov    QWORD PTR [rdi+0x10],rdx
   1400052c9:	mov    QWORD PTR [rdi+0x18],rdi
   1400052cd:	mov    DWORD PTR [rdi+0x8],0x5e
   1400052d4:	jmp    0x1400052d9
   1400052d6:	mov    rdi,r12
   1400052d9:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400052dd:	mov    rax,QWORD PTR [rbp+0x18]
   1400052e1:	lea    r9,[rip+0xffffffffffffad18]        # 0x140000000
   1400052e8:	mov    QWORD PTR [rax+rcx*8],rdi
   1400052ec:	jmp    0x14000ae40
   1400052f1:	mov    rdx,QWORD PTR [rbp+0x8]
   1400052f5:	mov    ecx,0x20
   1400052fa:	call   0x140004140
   1400052ff:	mov    rdi,rax
   140005302:	test   rax,rax
   140005305:	je     0x1400052d6
   140005307:	mov    rax,QWORD PTR [rbp+0x18]
   14000530b:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000530f:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140005314:	mov    rcx,QWORD PTR [rax+rcx*8]
   140005318:	lea    rax,[rip+0x11b79]        # 0x140016e98
   14000531f:	mov    QWORD PTR [rdi],rax
   140005322:	mov    QWORD PTR [rdi+0x10],rdx
   140005326:	mov    DWORD PTR [rdi+0x8],0x5e
   14000532d:	mov    rax,QWORD PTR [rcx+0x18]
   140005331:	mov    QWORD PTR [rdi+0x18],rax
   140005335:	mov    QWORD PTR [rcx+0x18],rdi
   140005339:	jmp    0x1400052d9
   14000533b:	mov    rdi,QWORD PTR [rbp+0x28]
   14000533f:	mov    rax,QWORD PTR [rbp+0x18]
   140005343:	lea    r8,[rdx+0x1]
   140005347:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000534b:	add    r8,r8
   14000534e:	mov    eax,DWORD PTR [rdi+r8*8]
   140005352:	mov    DWORD PTR [rdx+0x28],eax
   140005355:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000535a:	mov    DWORD PTR [rdx+0x2c],eax
   14000535d:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   140005362:	mov    DWORD PTR [rdx+0x30],eax
   140005365:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000536a:	mov    DWORD PTR [rdx+0x34],eax
   14000536d:	jmp    0x14000ae40
   140005372:	mov    rax,QWORD PTR [rbp+0x18]
   140005376:	lea    r8,[rdx+0x1]
   14000537a:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000537e:	mov    rdi,QWORD PTR [rbp+0x28]
   140005382:	add    r8,r8
   140005385:	mov    eax,DWORD PTR [rdi+r8*8]
   140005389:	mov    DWORD PTR [rdx+0x88],eax
   14000538f:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   140005394:	mov    DWORD PTR [rdx+0x8c],eax
   14000539a:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000539f:	mov    DWORD PTR [rdx+0x90],eax
   1400053a5:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   1400053aa:	mov    DWORD PTR [rdx+0x94],eax
   1400053b0:	jmp    0x14000ae40
   1400053b5:	mov    rdi,QWORD PTR [rbp+0x28]
   1400053b9:	mov    rax,QWORD PTR [rbp+0x18]
   1400053bd:	lea    r8,[rdx+0x1]
   1400053c1:	mov    rdx,QWORD PTR [rax+rdx*8]
   1400053c5:	add    r8,r8
   1400053c8:	mov    eax,DWORD PTR [rdi+r8*8]
   1400053cc:	mov    DWORD PTR [rdx+0x58],eax
   1400053cf:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   1400053d4:	mov    DWORD PTR [rdx+0x5c],eax
   1400053d7:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   1400053dc:	mov    DWORD PTR [rdx+0x60],eax
   1400053df:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   1400053e4:	mov    DWORD PTR [rdx+0x64],eax
   1400053e7:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400053eb:	mov    rax,QWORD PTR [rbp+0x18]
   1400053ef:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400053f3:	lea    r8,[rcx+0x2]
   1400053f7:	jmp    0x14000537e
   1400053f9:	mov    rdi,QWORD PTR [rbp+0x28]
   1400053fd:	mov    rax,QWORD PTR [rbp+0x18]
   140005401:	lea    r8,[rdx+0x1]
   140005405:	mov    rdx,QWORD PTR [rax+rdx*8]
   140005409:	add    r8,r8
   14000540c:	mov    eax,DWORD PTR [rdi+r8*8]
   140005410:	mov    DWORD PTR [rdx+0x58],eax
   140005413:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   140005418:	mov    DWORD PTR [rdx+0x5c],eax
   14000541b:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   140005420:	mov    DWORD PTR [rdx+0x60],eax
   140005423:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   140005428:	mov    DWORD PTR [rdx+0x64],eax
   14000542b:	mov    rdi,QWORD PTR [rbp+0x28]
   14000542f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005433:	mov    rax,QWORD PTR [rbp+0x18]
   140005437:	lea    r8,[rcx+0x2]
   14000543b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000543f:	add    r8,r8
   140005442:	mov    eax,DWORD PTR [rdi+r8*8]
   140005446:	mov    DWORD PTR [rdx+0x68],eax
   140005449:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000544e:	mov    DWORD PTR [rdx+0x6c],eax
   140005451:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   140005456:	mov    DWORD PTR [rdx+0x70],eax
   140005459:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000545e:	mov    DWORD PTR [rdx+0x74],eax
   140005461:	mov    rdi,QWORD PTR [rbp+0x28]
   140005465:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005469:	mov    rax,QWORD PTR [rbp+0x18]
   14000546d:	lea    r8,[rcx+0x3]
   140005471:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005475:	add    r8,r8
   140005478:	mov    eax,DWORD PTR [rdi+r8*8]
   14000547c:	mov    DWORD PTR [rdx+0x78],eax
   14000547f:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   140005484:	mov    DWORD PTR [rdx+0x7c],eax
   140005487:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000548c:	mov    DWORD PTR [rdx+0x80],eax
   140005492:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   140005497:	mov    DWORD PTR [rdx+0x84],eax
   14000549d:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400054a1:	lea    eax,[rcx+0x3]
   1400054a4:	movsxd rdi,eax
   1400054a7:	mov    rax,QWORD PTR [rbp+0x18]
   1400054ab:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400054af:	shl    rdi,0x4
   1400054b3:	add    rdi,QWORD PTR [rbp+0x30]
   1400054b7:	mov    rax,QWORD PTR [rdi]
   1400054ba:	mov    QWORD PTR [rdx+0x28],rax
   1400054be:	mov    eax,DWORD PTR [rdi+0x8]
   1400054c1:	mov    DWORD PTR [rdx+0x30],eax
   1400054c4:	mov    eax,DWORD PTR [rdi+0xc]
   1400054c7:	mov    DWORD PTR [rdx+0x34],eax
   1400054ca:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400054ce:	mov    rax,QWORD PTR [rbp+0x18]
   1400054d2:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400054d6:	lea    r8,[rcx+0x4]
   1400054da:	jmp    0x14000537e
   1400054df:	mov    rdi,QWORD PTR [rbp+0x28]
   1400054e3:	mov    rax,QWORD PTR [rbp+0x18]
   1400054e7:	lea    r8,[rdx+0x1]
   1400054eb:	mov    rdx,QWORD PTR [rax+rdx*8]
   1400054ef:	add    r8,r8
   1400054f2:	mov    eax,DWORD PTR [rdi+r8*8]
   1400054f6:	mov    DWORD PTR [rdx+0x68],eax
   1400054f9:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   1400054fe:	mov    DWORD PTR [rdx+0x6c],eax
   140005501:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   140005506:	mov    DWORD PTR [rdx+0x70],eax
   140005509:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000550e:	mov    DWORD PTR [rdx+0x74],eax
   140005511:	mov    rdi,QWORD PTR [rbp+0x28]
   140005515:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005519:	mov    rax,QWORD PTR [rbp+0x18]
   14000551d:	lea    r8,[rcx+0x2]
   140005521:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005525:	add    r8,r8
   140005528:	mov    eax,DWORD PTR [rdi+r8*8]
   14000552c:	mov    DWORD PTR [rdx+0x78],eax
   14000552f:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   140005534:	mov    DWORD PTR [rdx+0x7c],eax
   140005537:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000553c:	mov    DWORD PTR [rdx+0x80],eax
   140005542:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   140005547:	mov    DWORD PTR [rdx+0x84],eax
   14000554d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005551:	lea    eax,[rcx+0x2]
   140005554:	movsxd rdi,eax
   140005557:	mov    rax,QWORD PTR [rbp+0x18]
   14000555b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000555f:	shl    rdi,0x4
   140005563:	add    rdi,QWORD PTR [rbp+0x30]
   140005567:	mov    rax,QWORD PTR [rdi]
   14000556a:	mov    QWORD PTR [rdx+0x28],rax
   14000556e:	mov    eax,DWORD PTR [rdi+0x8]
   140005571:	mov    DWORD PTR [rdx+0x30],eax
   140005574:	mov    eax,DWORD PTR [rdi+0xc]
   140005577:	mov    DWORD PTR [rdx+0x34],eax
   14000557a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000557e:	mov    rax,QWORD PTR [rbp+0x18]
   140005582:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005586:	lea    r8,[rcx+0x3]
   14000558a:	jmp    0x14000537e
   14000558f:	lea    eax,[rdx+0x1]
   140005592:	mov    rdx,QWORD PTR [rbp+0x18]
   140005596:	mov    rdi,r12
   140005599:	movsxd rcx,eax
   14000559c:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400055a0:	mov    rcx,rbp
   1400055a3:	call   0x140004580
   1400055a8:	mov    rbx,rax
   1400055ab:	test   rax,rax
   1400055ae:	je     0x140005600
   1400055b0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400055b4:	mov    ecx,0x38
   1400055b9:	call   0x140004140
   1400055be:	mov    rdi,rax
   1400055c1:	test   rax,rax
   1400055c4:	je     0x1400055fd
   1400055c6:	lea    rax,[rip+0x1187b]        # 0x140016e48
   1400055cd:	mov    QWORD PTR [rdi],rax
   1400055d0:	mov    QWORD PTR [rdi+0x10],rbx
   1400055d4:	mov    DWORD PTR [rdi+0x18],r12d
   1400055d8:	mov    DWORD PTR [rdi+0x1c],r12d
   1400055dc:	mov    DWORD PTR [rdi+0x20],r12d
   1400055e0:	mov    DWORD PTR [rdi+0x24],r12d
   1400055e4:	mov    DWORD PTR [rdi+0x28],r12d
   1400055e8:	mov    DWORD PTR [rdi+0x2c],r12d
   1400055ec:	mov    DWORD PTR [rdi+0x30],r12d
   1400055f0:	mov    DWORD PTR [rdi+0x34],r12d
   1400055f4:	mov    DWORD PTR [rdi+0x8],0x56
   1400055fb:	jmp    0x140005600
   1400055fd:	mov    rdi,r12
   140005600:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005604:	mov    rax,QWORD PTR [rbp+0x18]
   140005608:	mov    QWORD PTR [rax+rcx*8],rdi
   14000560c:	test   rdi,rdi
   14000560f:	je     0x14000b7fb
   140005615:	mov    rcx,QWORD PTR [rbp+0x28]
   140005619:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000561d:	lea    r9,[rip+0xffffffffffffa9dc]        # 0x140000000
   140005624:	add    rdx,rdx
   140005627:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000562a:	mov    DWORD PTR [rdi+0x18],eax
   14000562d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005631:	mov    DWORD PTR [rdi+0x1c],eax
   140005634:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005638:	mov    DWORD PTR [rdi+0x20],eax
   14000563b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000563f:	mov    DWORD PTR [rdi+0x24],eax
   140005642:	jmp    0x14000ae40
   140005647:	mov    rcx,QWORD PTR [rbp+0x18]
   14000564b:	mov    rdi,r12
   14000564e:	mov    rbx,QWORD PTR [rcx+rdx*8+0x8]
   140005653:	test   rbx,rbx
   140005656:	je     0x14000567f
   140005658:	cmp    DWORD PTR [rbx+0x8],0x3d
   14000565c:	jne    0x14000567f
   14000565e:	mov    rdx,QWORD PTR [rbp+0x8]
   140005662:	mov    ecx,0x98
   140005667:	call   0x140004140
   14000566c:	test   rax,rax
   14000566f:	je     0x1400056ba
   140005671:	lea    rdx,[rbx+0x10]
   140005675:	mov    rcx,rax
   140005678:	call   0x1400039c0
   14000567d:	jmp    0x1400056b7
   14000567f:	lea    eax,[rdx+0x1]
   140005682:	movsxd rdx,eax
   140005685:	mov    rdx,QWORD PTR [rcx+rdx*8]
   140005689:	mov    rcx,rbp
   14000568c:	call   0x140004650
   140005691:	mov    rbx,rax
   140005694:	test   rax,rax
   140005697:	je     0x1400056e3
   140005699:	mov    rdx,QWORD PTR [rbp+0x8]
   14000569d:	mov    ecx,0x98
   1400056a2:	call   0x140004140
   1400056a7:	test   rax,rax
   1400056aa:	je     0x1400056ba
   1400056ac:	mov    rdx,rbx
   1400056af:	mov    rcx,rax
   1400056b2:	call   0x140003a80
   1400056b7:	mov    rdi,rax
   1400056ba:	mov    rcx,QWORD PTR [rbp+0x28]
   1400056be:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400056c2:	inc    rdx
   1400056c5:	add    rdx,rdx
   1400056c8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400056cb:	mov    DWORD PTR [rdi+0x48],eax
   1400056ce:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400056d2:	mov    DWORD PTR [rdi+0x4c],eax
   1400056d5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400056d9:	mov    DWORD PTR [rdi+0x50],eax
   1400056dc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400056e0:	mov    DWORD PTR [rdi+0x54],eax
   1400056e3:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400056e7:	mov    rax,QWORD PTR [rbp+0x18]
   1400056eb:	mov    QWORD PTR [rax+rcx*8],rdi
   1400056ef:	test   rdi,rdi
   1400056f2:	je     0x14000b8b4
   1400056f8:	mov    rcx,QWORD PTR [rbp+0x28]
   1400056fc:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005700:	lea    r9,[rip+0xffffffffffffa8f9]        # 0x140000000
   140005707:	add    rdx,rdx
   14000570a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000570d:	mov    DWORD PTR [rdi+0x38],eax
   140005710:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005714:	mov    DWORD PTR [rdi+0x3c],eax
   140005717:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000571b:	mov    DWORD PTR [rdi+0x40],eax
   14000571e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005722:	mov    DWORD PTR [rdi+0x44],eax
   140005725:	jmp    0x14000ae40
   14000572a:	mov    rdx,QWORD PTR [rbp+0x8]
   14000572e:	mov    ecx,0x20
   140005733:	call   0x140004140
   140005738:	mov    rdi,rax
   14000573b:	test   rax,rax
   14000573e:	je     0x1400052d6
   140005744:	mov    rax,QWORD PTR [rbp+0x18]
   140005748:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000574c:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005750:	lea    rax,[rip+0x11651]        # 0x140016da8
   140005757:	mov    QWORD PTR [rdi],rax
   14000575a:	mov    QWORD PTR [rdi+0x10],rdi
   14000575e:	mov    QWORD PTR [rdi+0x18],rdx
   140005762:	mov    DWORD PTR [rdi+0x8],0x54
   140005769:	jmp    0x1400052d9
   14000576e:	mov    rdx,QWORD PTR [rbp+0x8]
   140005772:	mov    ecx,0x20
   140005777:	call   0x140004140
   14000577c:	mov    rdi,rax
   14000577f:	test   rax,rax
   140005782:	je     0x1400052d6
   140005788:	mov    rax,QWORD PTR [rbp+0x18]
   14000578c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005790:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140005795:	mov    rcx,QWORD PTR [rax+rcx*8]
   140005799:	lea    rax,[rip+0x11608]        # 0x140016da8
   1400057a0:	mov    QWORD PTR [rdi],rax
   1400057a3:	mov    QWORD PTR [rdi+0x18],rdx
   1400057a7:	mov    DWORD PTR [rdi+0x8],0x54
   1400057ae:	mov    rax,QWORD PTR [rcx+0x10]
   1400057b2:	mov    QWORD PTR [rdi+0x10],rax
   1400057b6:	mov    QWORD PTR [rcx+0x10],rdi
   1400057ba:	jmp    0x1400052d9
   1400057bf:	mov    rdx,QWORD PTR [rbp+0x8]
   1400057c3:	mov    ecx,0x30
   1400057c8:	call   0x140004140
   1400057cd:	mov    rdi,rax
   1400057d0:	test   rax,rax
   1400057d3:	je     0x1400052d6
   1400057d9:	mov    rax,QWORD PTR [rbp+0x18]
   1400057dd:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400057e1:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400057e5:	lea    rax,[rip+0x1174c]        # 0x140016f38
   1400057ec:	mov    QWORD PTR [rdi],rax
   1400057ef:	mov    QWORD PTR [rdi+0x10],rdi
   1400057f3:	mov    QWORD PTR [rdi+0x18],rdx
   1400057f7:	mov    DWORD PTR [rdi+0x20],r12d
   1400057fb:	mov    DWORD PTR [rdi+0x24],r12d
   1400057ff:	mov    DWORD PTR [rdi+0x28],r12d
   140005803:	mov    DWORD PTR [rdi+0x2c],r12d
   140005807:	mov    DWORD PTR [rdi+0x8],0x55
   14000580e:	jmp    0x1400052d9
   140005813:	mov    rdx,QWORD PTR [rbp+0x8]
   140005817:	mov    ecx,0x30
   14000581c:	call   0x140004140
   140005821:	mov    rdi,rax
   140005824:	test   rax,rax
   140005827:	je     0x14000586d
   140005829:	mov    rax,QWORD PTR [rbp+0x18]
   14000582d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005831:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140005836:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000583a:	lea    rax,[rip+0x116f7]        # 0x140016f38
   140005841:	mov    QWORD PTR [rdi],rax
   140005844:	mov    QWORD PTR [rdi+0x18],rdx
   140005848:	mov    DWORD PTR [rdi+0x20],r12d
   14000584c:	mov    DWORD PTR [rdi+0x24],r12d
   140005850:	mov    DWORD PTR [rdi+0x28],r12d
   140005854:	mov    DWORD PTR [rdi+0x2c],r12d
   140005858:	mov    DWORD PTR [rdi+0x8],0x55
   14000585f:	mov    rax,QWORD PTR [rcx+0x10]
   140005863:	mov    QWORD PTR [rdi+0x10],rax
   140005867:	mov    QWORD PTR [rcx+0x10],rdi
   14000586b:	jmp    0x140005870
   14000586d:	mov    rdi,r12
   140005870:	mov    rcx,QWORD PTR [rbp+0x28]
   140005874:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005878:	inc    rdx
   14000587b:	add    rdx,rdx
   14000587e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005881:	mov    DWORD PTR [rdi+0x20],eax
   140005884:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005888:	mov    DWORD PTR [rdi+0x24],eax
   14000588b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000588f:	mov    DWORD PTR [rdi+0x28],eax
   140005892:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005896:	mov    DWORD PTR [rdi+0x2c],eax
   140005899:	jmp    0x1400052d9
   14000589e:	mov    rdx,QWORD PTR [rbp+0x8]
   1400058a2:	mov    ecx,0x38
   1400058a7:	call   0x140004140
   1400058ac:	mov    rdi,rax
   1400058af:	test   rax,rax
   1400058b2:	je     0x1400058eb
   1400058b4:	lea    rax,[rip+0x116cd]        # 0x140016f88
   1400058bb:	mov    QWORD PTR [rdi],rax
   1400058be:	mov    DWORD PTR [rdi+0x10],r12d
   1400058c2:	mov    DWORD PTR [rdi+0x14],r12d
   1400058c6:	mov    DWORD PTR [rdi+0x18],r12d
   1400058ca:	mov    DWORD PTR [rdi+0x1c],r12d
   1400058ce:	mov    QWORD PTR [rdi+0x20],r12
   1400058d2:	mov    DWORD PTR [rdi+0x28],r12d
   1400058d6:	mov    DWORD PTR [rdi+0x2c],r12d
   1400058da:	mov    DWORD PTR [rdi+0x30],r12d
   1400058de:	mov    DWORD PTR [rdi+0x34],r12d
   1400058e2:	mov    DWORD PTR [rdi+0x8],0x53
   1400058e9:	jmp    0x1400058ee
   1400058eb:	mov    rdi,r12
   1400058ee:	mov    rcx,QWORD PTR [rbp+0x28]
   1400058f2:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400058f6:	add    rdx,rdx
   1400058f9:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400058fc:	mov    DWORD PTR [rdi+0x10],eax
   1400058ff:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005903:	mov    DWORD PTR [rdi+0x14],eax
   140005906:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000590a:	mov    DWORD PTR [rdi+0x18],eax
   14000590d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005911:	mov    DWORD PTR [rdi+0x1c],eax
   140005914:	mov    rcx,QWORD PTR [rbp+0x28]
   140005918:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000591c:	inc    rdx
   14000591f:	add    rdx,rdx
   140005922:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005925:	mov    DWORD PTR [rdi+0x28],eax
   140005928:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000592c:	mov    DWORD PTR [rdi+0x2c],eax
   14000592f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005933:	mov    DWORD PTR [rdi+0x30],eax
   140005936:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000593a:	mov    DWORD PTR [rdi+0x34],eax
   14000593d:	jmp    0x1400052d9
   140005942:	mov    rdx,QWORD PTR [rbp+0x8]
   140005946:	mov    ecx,0x38
   14000594b:	call   0x140004140
   140005950:	mov    rdi,rax
   140005953:	test   rax,rax
   140005956:	je     0x1400059a4
   140005958:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000595c:	mov    rax,QWORD PTR [rbp+0x18]
   140005960:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140005965:	lea    rcx,[rip+0x1161c]        # 0x140016f88
   14000596c:	mov    rax,QWORD PTR [rdx+0x10]
   140005970:	mov    QWORD PTR [rdx+0x10],r12
   140005974:	mov    QWORD PTR [rdi],rcx
   140005977:	mov    DWORD PTR [rdi+0x10],r12d
   14000597b:	mov    DWORD PTR [rdi+0x14],r12d
   14000597f:	mov    DWORD PTR [rdi+0x18],r12d
   140005983:	mov    DWORD PTR [rdi+0x1c],r12d
   140005987:	mov    QWORD PTR [rdi+0x20],rax
   14000598b:	mov    DWORD PTR [rdi+0x28],r12d
   14000598f:	mov    DWORD PTR [rdi+0x2c],r12d
   140005993:	mov    DWORD PTR [rdi+0x30],r12d
   140005997:	mov    DWORD PTR [rdi+0x34],r12d
   14000599b:	mov    DWORD PTR [rdi+0x8],0x53
   1400059a2:	jmp    0x1400059a7
   1400059a4:	mov    rdi,r12
   1400059a7:	mov    rcx,QWORD PTR [rbp+0x28]
   1400059ab:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400059af:	add    rdx,rdx
   1400059b2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400059b5:	mov    DWORD PTR [rdi+0x10],eax
   1400059b8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400059bc:	mov    DWORD PTR [rdi+0x14],eax
   1400059bf:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400059c3:	mov    DWORD PTR [rdi+0x18],eax
   1400059c6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400059ca:	mov    DWORD PTR [rdi+0x1c],eax
   1400059cd:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400059d1:	add    rdx,0x2
   1400059d5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400059d9:	add    rdx,rdx
   1400059dc:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400059df:	mov    DWORD PTR [rdi+0x28],eax
   1400059e2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400059e6:	mov    DWORD PTR [rdi+0x2c],eax
   1400059e9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400059ed:	mov    DWORD PTR [rdi+0x30],eax
   1400059f0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400059f4:	mov    DWORD PTR [rdi+0x34],eax
   1400059f7:	jmp    0x1400052d9
   1400059fc:	mov    rdx,QWORD PTR [rbp+0x8]
   140005a00:	mov    ecx,0x20
   140005a05:	call   0x140004140
   140005a0a:	mov    r11,rax
   140005a0d:	test   rax,rax
   140005a10:	je     0x140005a55
   140005a12:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005a16:	mov    rax,QWORD PTR [rbp+0x18]
   140005a1a:	lea    r9,[rip+0xffffffffffffa5df]        # 0x140000000
   140005a21:	mov    rdi,QWORD PTR [rax+rcx*8+0x8]
   140005a26:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005a2a:	lea    rax,[rip+0x115f7]        # 0x140017028
   140005a31:	mov    QWORD PTR [r11],rax
   140005a34:	mov    QWORD PTR [r11+0x10],rdx
   140005a38:	mov    QWORD PTR [r11+0x18],rdi
   140005a3c:	mov    DWORD PTR [r11+0x8],0x52
   140005a44:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005a48:	mov    rax,QWORD PTR [rbp+0x18]
   140005a4c:	mov    QWORD PTR [rax+rcx*8],r11
   140005a50:	jmp    0x14000ae40
   140005a55:	mov    r11,r12
   140005a58:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005a5c:	mov    rax,QWORD PTR [rbp+0x18]
   140005a60:	lea    r9,[rip+0xffffffffffffa599]        # 0x140000000
   140005a67:	mov    QWORD PTR [rax+rcx*8],r11
   140005a6b:	jmp    0x14000ae40
   140005a70:	mov    rdx,QWORD PTR [rbp+0x8]
   140005a74:	mov    ecx,0x50
   140005a79:	call   0x140004140
   140005a7e:	mov    r11,rax
   140005a81:	test   rax,rax
   140005a84:	je     0x140005af3
   140005a86:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005a8a:	mov    rax,QWORD PTR [rbp+0x18]
   140005a8e:	mov    rdx,QWORD PTR [rax+rcx*8+0x18]
   140005a93:	mov    rdi,QWORD PTR [rdx+0x10]
   140005a97:	mov    QWORD PTR [rdx+0x10],r12
   140005a9b:	mov    rax,QWORD PTR [rbp+0x18]
   140005a9f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005aa3:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005aa7:	lea    rax,[rip+0x116ba]        # 0x140017168
   140005aae:	mov    QWORD PTR [r11],rax
   140005ab1:	mov    QWORD PTR [r11+0x10],rdx
   140005ab5:	mov    QWORD PTR [r11+0x18],rdi
   140005ab9:	mov    DWORD PTR [r11+0x20],r12d
   140005abd:	mov    DWORD PTR [r11+0x24],r12d
   140005ac1:	mov    DWORD PTR [r11+0x28],r12d
   140005ac5:	mov    DWORD PTR [r11+0x2c],r12d
   140005ac9:	mov    DWORD PTR [r11+0x30],r12d
   140005acd:	mov    DWORD PTR [r11+0x34],r12d
   140005ad1:	mov    DWORD PTR [r11+0x38],r12d
   140005ad5:	mov    DWORD PTR [r11+0x3c],r12d
   140005ad9:	mov    DWORD PTR [r11+0x40],r12d
   140005add:	mov    DWORD PTR [r11+0x44],r12d
   140005ae1:	mov    DWORD PTR [r11+0x48],r12d
   140005ae5:	mov    DWORD PTR [r11+0x4c],r12d
   140005ae9:	mov    DWORD PTR [r11+0x8],0x4f
   140005af1:	jmp    0x140005af6
   140005af3:	mov    r11,r12
   140005af6:	mov    rcx,QWORD PTR [rbp+0x28]
   140005afa:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005afe:	lea    r9,[rip+0xffffffffffffa4fb]        # 0x140000000
   140005b05:	inc    rdx
   140005b08:	add    rdx,rdx
   140005b0b:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005b0e:	mov    DWORD PTR [r11+0x20],eax
   140005b12:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005b16:	mov    DWORD PTR [r11+0x24],eax
   140005b1a:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005b1e:	mov    DWORD PTR [r11+0x28],eax
   140005b22:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005b26:	mov    DWORD PTR [r11+0x2c],eax
   140005b2a:	mov    rcx,QWORD PTR [rbp+0x28]
   140005b2e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005b32:	add    rdx,0x2
   140005b36:	add    rdx,rdx
   140005b39:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005b3c:	mov    DWORD PTR [r11+0x30],eax
   140005b40:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005b44:	mov    DWORD PTR [r11+0x34],eax
   140005b48:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005b4c:	mov    DWORD PTR [r11+0x38],eax
   140005b50:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005b54:	mov    DWORD PTR [r11+0x3c],eax
   140005b58:	mov    rcx,QWORD PTR [rbp+0x28]
   140005b5c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005b60:	add    rdx,0x4
   140005b64:	add    rdx,rdx
   140005b67:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005b6a:	mov    DWORD PTR [r11+0x40],eax
   140005b6e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005b72:	mov    DWORD PTR [r11+0x44],eax
   140005b76:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005b7a:	mov    DWORD PTR [r11+0x48],eax
   140005b7e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005b82:	mov    DWORD PTR [r11+0x4c],eax
   140005b86:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005b8a:	mov    rax,QWORD PTR [rbp+0x18]
   140005b8e:	mov    QWORD PTR [rax+rcx*8],r11
   140005b92:	jmp    0x14000ae40
   140005b97:	mov    rdx,QWORD PTR [rbp+0x8]
   140005b9b:	mov    ecx,0x40
   140005ba0:	call   0x140004140
   140005ba5:	mov    r11,rax
   140005ba8:	test   rax,rax
   140005bab:	je     0x140005bf7
   140005bad:	mov    rax,QWORD PTR [rbp+0x18]
   140005bb1:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005bb5:	mov    rdi,QWORD PTR [rax+rcx*8+0x18]
   140005bba:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140005bbf:	mov    rcx,QWORD PTR [rax+rcx*8]
   140005bc3:	lea    rax,[rip+0x114fe]        # 0x1400170c8
   140005bca:	mov    QWORD PTR [r11],rax
   140005bcd:	mov    QWORD PTR [r11+0x10],rcx
   140005bd1:	mov    QWORD PTR [r11+0x18],rdx
   140005bd5:	mov    QWORD PTR [r11+0x20],rdi
   140005bd9:	mov    DWORD PTR [r11+0x28],r12d
   140005bdd:	mov    DWORD PTR [r11+0x2c],r12d
   140005be1:	mov    DWORD PTR [r11+0x30],r12d
   140005be5:	mov    DWORD PTR [r11+0x34],r12d
   140005be9:	mov    BYTE PTR [r11+0x38],r12b
   140005bed:	mov    DWORD PTR [r11+0x8],0x51
   140005bf5:	jmp    0x140005bfa
   140005bf7:	mov    r11,r12
   140005bfa:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005bfe:	inc    rdx
   140005c01:	mov    rcx,QWORD PTR [rbp+0x28]
   140005c05:	add    rdx,rdx
   140005c08:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005c0b:	mov    DWORD PTR [r11+0x28],eax
   140005c0f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005c13:	mov    DWORD PTR [r11+0x2c],eax
   140005c17:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005c1b:	mov    DWORD PTR [r11+0x30],eax
   140005c1f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005c23:	mov    DWORD PTR [r11+0x34],eax
   140005c27:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005c2b:	mov    rax,QWORD PTR [rbp+0x18]
   140005c2f:	lea    r9,[rip+0xffffffffffffa3ca]        # 0x140000000
   140005c36:	mov    QWORD PTR [rax+rcx*8],r11
   140005c3a:	jmp    0x14000ae40
   140005c3f:	mov    rdx,QWORD PTR [rbp+0x8]
   140005c43:	mov    ecx,0x40
   140005c48:	call   0x140004140
   140005c4d:	mov    r11,rax
   140005c50:	test   rax,rax
   140005c53:	je     0x140005c9f
   140005c55:	mov    rax,QWORD PTR [rbp+0x18]
   140005c59:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005c5d:	mov    rdi,QWORD PTR [rax+rcx*8+0x18]
   140005c62:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005c66:	mov    rcx,QWORD PTR [rax+rcx*8+0x10]
   140005c6b:	lea    rax,[rip+0x11456]        # 0x1400170c8
   140005c72:	mov    QWORD PTR [r11],rax
   140005c75:	mov    QWORD PTR [r11+0x10],rcx
   140005c79:	mov    QWORD PTR [r11+0x18],rdx
   140005c7d:	mov    QWORD PTR [r11+0x20],rdi
   140005c81:	mov    DWORD PTR [r11+0x28],r12d
   140005c85:	mov    DWORD PTR [r11+0x2c],r12d
   140005c89:	mov    DWORD PTR [r11+0x30],r12d
   140005c8d:	mov    DWORD PTR [r11+0x34],r12d
   140005c91:	mov    BYTE PTR [r11+0x38],r12b
   140005c95:	mov    DWORD PTR [r11+0x8],0x51
   140005c9d:	jmp    0x140005ca2
   140005c9f:	mov    r11,r12
   140005ca2:	mov    rcx,QWORD PTR [rbp+0x28]
   140005ca6:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005caa:	lea    r9,[rip+0xffffffffffffa34f]        # 0x140000000
   140005cb1:	inc    rdx
   140005cb4:	add    rdx,rdx
   140005cb7:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005cba:	mov    DWORD PTR [r11+0x28],eax
   140005cbe:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005cc2:	mov    DWORD PTR [r11+0x2c],eax
   140005cc6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005cca:	mov    DWORD PTR [r11+0x30],eax
   140005cce:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005cd2:	mov    DWORD PTR [r11+0x34],eax
   140005cd6:	mov    BYTE PTR [r11+0x38],0x1
   140005cdb:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005cdf:	mov    rax,QWORD PTR [rbp+0x18]
   140005ce3:	mov    QWORD PTR [rax+rcx*8],r11
   140005ce7:	jmp    0x14000ae40
   140005cec:	mov    rdx,QWORD PTR [rbp+0x8]
   140005cf0:	mov    ecx,0x30
   140005cf5:	call   0x140004140
   140005cfa:	mov    r11,rax
   140005cfd:	test   rax,rax
   140005d00:	je     0x140005d3f
   140005d02:	mov    rax,QWORD PTR [rbp+0x18]
   140005d06:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005d0a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140005d0f:	mov    rdx,QWORD PTR [rax+rcx*8]
   140005d13:	lea    rax,[rip+0x113fe]        # 0x140017118
   140005d1a:	mov    QWORD PTR [r11],rax
   140005d1d:	mov    QWORD PTR [r11+0x10],rdx
   140005d21:	mov    QWORD PTR [r11+0x18],rdi
   140005d25:	mov    DWORD PTR [r11+0x20],r12d
   140005d29:	mov    DWORD PTR [r11+0x24],r12d
   140005d2d:	mov    DWORD PTR [r11+0x28],r12d
   140005d31:	mov    DWORD PTR [r11+0x2c],r12d
   140005d35:	mov    DWORD PTR [r11+0x8],0x5c
   140005d3d:	jmp    0x140005d42
   140005d3f:	mov    r11,r12
   140005d42:	mov    rcx,QWORD PTR [rbp+0x28]
   140005d46:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005d4a:	inc    rdx
   140005d4d:	add    rdx,rdx
   140005d50:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005d53:	mov    DWORD PTR [r11+0x20],eax
   140005d57:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005d5b:	mov    DWORD PTR [r11+0x24],eax
   140005d5f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005d63:	mov    DWORD PTR [r11+0x28],eax
   140005d67:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005d6b:	mov    DWORD PTR [r11+0x2c],eax
   140005d6f:	jmp    0x140005c27
   140005d74:	mov    rax,QWORD PTR [rbp+0x18]
   140005d78:	mov    rdx,QWORD PTR [rax+rdx*8]
   140005d7c:	mov    rdi,QWORD PTR [rdx+0x30]
   140005d80:	mov    QWORD PTR [rdx+0x30],r12
   140005d84:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005d88:	mov    rax,QWORD PTR [rbp+0x18]
   140005d8c:	mov    QWORD PTR [rax+rcx*8],rdi
   140005d90:	jmp    0x14000ae40
   140005d95:	mov    rdx,QWORD PTR [rbp+0x8]
   140005d99:	mov    ecx,0x68
   140005d9e:	call   0x140004140
   140005da3:	mov    r11,rax
   140005da6:	test   rax,rax
   140005da9:	je     0x140005dd7
   140005dab:	movsxd rcx,DWORD PTR [rbp+0x10]
   140005daf:	mov    rdi,QWORD PTR [rbp+0x30]
   140005db3:	lea    eax,[rcx+0x1]
   140005db6:	mov    rdx,rcx
   140005db9:	mov    rcx,r11
   140005dbc:	movsxd r8,eax
   140005dbf:	shl    rdx,0x4
   140005dc3:	shl    r8,0x4
   140005dc7:	add    rdx,rdi
   140005dca:	add    r8,rdi
   140005dcd:	call   0x140003ce0
   140005dd2:	mov    rdi,rax
   140005dd5:	jmp    0x140005dda
   140005dd7:	mov    rdi,r12
   140005dda:	mov    rcx,QWORD PTR [rbp+0x28]
   140005dde:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005de2:	add    rdx,rdx
   140005de5:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005de8:	mov    DWORD PTR [rdi+0x48],eax
   140005deb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005def:	mov    DWORD PTR [rdi+0x4c],eax
   140005df2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005df6:	mov    DWORD PTR [rdi+0x50],eax
   140005df9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005dfd:	mov    DWORD PTR [rdi+0x54],eax
   140005e00:	mov    rcx,QWORD PTR [rbp+0x28]
   140005e04:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005e08:	inc    rdx
   140005e0b:	add    rdx,rdx
   140005e0e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005e11:	mov    DWORD PTR [rdi+0x58],eax
   140005e14:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005e18:	mov    DWORD PTR [rdi+0x5c],eax
   140005e1b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005e1f:	mov    DWORD PTR [rdi+0x60],eax
   140005e22:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005e26:	mov    DWORD PTR [rdi+0x64],eax
   140005e29:	jmp    0x1400052d9
   140005e2e:	mov    rdx,QWORD PTR [rbp+0x8]
   140005e32:	mov    ecx,0x68
   140005e37:	call   0x140004140
   140005e3c:	mov    rdi,rax
   140005e3f:	test   rax,rax
   140005e42:	je     0x140005e7e
   140005e44:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005e48:	mov    rcx,QWORD PTR [rbp+0x30]
   140005e4c:	lea    eax,[rdx+0x3]
   140005e4f:	movsxd r9,eax
   140005e52:	lea    eax,[rdx+0x2]
   140005e55:	movsxd r8,eax
   140005e58:	mov    rax,rdx
   140005e5b:	mov    rdx,QWORD PTR [rbp+0x18]
   140005e5f:	mov    rdx,QWORD PTR [rdx+rax*8]
   140005e63:	shl    r9,0x4
   140005e67:	shl    r8,0x4
   140005e6b:	add    r9,rcx
   140005e6e:	add    r8,rcx
   140005e71:	mov    rcx,rdi
   140005e74:	call   0x140003d60
   140005e79:	mov    rdi,rax
   140005e7c:	jmp    0x140005e81
   140005e7e:	mov    rdi,r12
   140005e81:	mov    rcx,QWORD PTR [rbp+0x28]
   140005e85:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005e89:	add    rdx,0x2
   140005e8d:	add    rdx,rdx
   140005e90:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005e93:	mov    DWORD PTR [rdi+0x48],eax
   140005e96:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005e9a:	mov    DWORD PTR [rdi+0x4c],eax
   140005e9d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005ea1:	mov    DWORD PTR [rdi+0x50],eax
   140005ea4:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005ea8:	mov    DWORD PTR [rdi+0x54],eax
   140005eab:	mov    rcx,QWORD PTR [rbp+0x28]
   140005eaf:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005eb3:	inc    rdx
   140005eb6:	add    rdx,rdx
   140005eb9:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005ebc:	mov    DWORD PTR [rdi+0x38],eax
   140005ebf:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005ec3:	mov    DWORD PTR [rdi+0x3c],eax
   140005ec6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005eca:	mov    DWORD PTR [rdi+0x40],eax
   140005ecd:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005ed1:	mov    DWORD PTR [rdi+0x44],eax
   140005ed4:	mov    rcx,QWORD PTR [rbp+0x28]
   140005ed8:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005edc:	add    rdx,0x3
   140005ee0:	add    rdx,rdx
   140005ee3:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005ee6:	mov    DWORD PTR [rdi+0x58],eax
   140005ee9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005eed:	mov    DWORD PTR [rdi+0x5c],eax
   140005ef0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005ef4:	mov    DWORD PTR [rdi+0x60],eax
   140005ef7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005efb:	mov    DWORD PTR [rdi+0x64],eax
   140005efe:	jmp    0x1400052d9
   140005f03:	mov    rdx,QWORD PTR [rbp+0x8]
   140005f07:	mov    ecx,0xe8
   140005f0c:	call   0x140004140
   140005f11:	mov    rbx,rax
   140005f14:	test   rax,rax
   140005f17:	je     0x140005f51
   140005f19:	mov    eax,DWORD PTR [rbp+0x10]
   140005f1c:	lea    rcx,[rsp+0x310]
   140005f24:	or     esi,0x1
   140005f27:	inc    eax
   140005f29:	mov    DWORD PTR [rsp+0x30],esi
   140005f2d:	movsxd rdi,eax
   140005f30:	shl    rdi,0x4
   140005f34:	add    rdi,QWORD PTR [rbp+0x30]
   140005f38:	call   QWORD PTR [rip+0xf2aa]        # 0x1400151e8
   140005f3e:	mov    r8,rdi
   140005f41:	mov    rdx,rax
   140005f44:	mov    rcx,rbx
   140005f47:	call   0x140004180
   140005f4c:	mov    rdi,rax
   140005f4f:	jmp    0x140005f54
   140005f51:	mov    rdi,r12
   140005f54:	test   sil,0x1
   140005f58:	je     0x140005f6f
   140005f5a:	and    esi,0xfffffffe
   140005f5d:	lea    rcx,[rsp+0x310]
   140005f65:	mov    DWORD PTR [rsp+0x30],esi
   140005f69:	call   QWORD PTR [rip+0xf271]        # 0x1400151e0
   140005f6f:	mov    DWORD PTR [rdi+0x10],r12d
   140005f73:	mov    rcx,QWORD PTR [rbp+0x28]
   140005f77:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005f7b:	add    rdx,rdx
   140005f7e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005f81:	mov    DWORD PTR [rdi+0x88],eax
   140005f87:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005f8b:	mov    DWORD PTR [rdi+0x8c],eax
   140005f91:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005f95:	mov    DWORD PTR [rdi+0x90],eax
   140005f9b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005f9f:	mov    DWORD PTR [rdi+0x94],eax
   140005fa5:	mov    rcx,QWORD PTR [rbp+0x28]
   140005fa9:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005fad:	inc    rdx
   140005fb0:	add    rdx,rdx
   140005fb3:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005fb6:	mov    DWORD PTR [rdi+0xa8],eax
   140005fbc:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005fc0:	mov    DWORD PTR [rdi+0xac],eax
   140005fc6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005fca:	mov    DWORD PTR [rdi+0xb0],eax
   140005fd0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140005fd4:	mov    DWORD PTR [rdi+0xb4],eax
   140005fda:	mov    rcx,QWORD PTR [rbp+0x28]
   140005fde:	movsxd rdx,DWORD PTR [rbp+0x10]
   140005fe2:	inc    rdx
   140005fe5:	add    rdx,rdx
   140005fe8:	mov    eax,DWORD PTR [rcx+rdx*8]
   140005feb:	mov    DWORD PTR [rdi+0xb8],eax
   140005ff1:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140005ff5:	mov    DWORD PTR [rdi+0xbc],eax
   140005ffb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140005fff:	mov    DWORD PTR [rdi+0xc0],eax
   140006005:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006009:	mov    DWORD PTR [rdi+0xc4],eax
   14000600f:	mov    rax,QWORD PTR [rbp+0x18]
   140006013:	movsxd rcx,DWORD PTR [rbp+0x10]
   140006017:	mov    rcx,QWORD PTR [rax+rcx*8+0x18]
   14000601c:	mov    QWORD PTR [rdi+0x60],rcx
   140006020:	mov    rcx,QWORD PTR [rbp+0x28]
   140006024:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006028:	add    rdx,0x5
   14000602c:	add    rdx,rdx
   14000602f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006032:	mov    DWORD PTR [rdi+0xd8],eax
   140006038:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000603c:	mov    DWORD PTR [rdi+0xdc],eax
   140006042:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006046:	mov    DWORD PTR [rdi+0xe0],eax
   14000604c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006050:	mov    DWORD PTR [rdi+0xe4],eax
   140006056:	jmp    0x1400052d9
   14000605b:	mov    rdx,QWORD PTR [rbp+0x8]
   14000605f:	mov    ecx,0xe8
   140006064:	call   0x140004140
   140006069:	mov    rbx,rax
   14000606c:	test   rax,rax
   14000606f:	je     0x1400060a9
   140006071:	mov    eax,DWORD PTR [rbp+0x10]
   140006074:	lea    rcx,[rsp+0x370]
   14000607c:	or     esi,0x2
   14000607f:	inc    eax
   140006081:	mov    DWORD PTR [rsp+0x30],esi
   140006085:	movsxd rdi,eax
   140006088:	shl    rdi,0x4
   14000608c:	add    rdi,QWORD PTR [rbp+0x30]
   140006090:	call   QWORD PTR [rip+0xf152]        # 0x1400151e8
   140006096:	mov    r8,rdi
   140006099:	mov    rdx,rax
   14000609c:	mov    rcx,rbx
   14000609f:	call   0x140004180
   1400060a4:	mov    rdi,rax
   1400060a7:	jmp    0x1400060ac
   1400060a9:	mov    rdi,r12
   1400060ac:	test   sil,0x2
   1400060b0:	je     0x1400060c7
   1400060b2:	and    esi,0xfffffffd
   1400060b5:	lea    rcx,[rsp+0x370]
   1400060bd:	mov    DWORD PTR [rsp+0x30],esi
   1400060c1:	call   QWORD PTR [rip+0xf119]        # 0x1400151e0
   1400060c7:	mov    DWORD PTR [rdi+0x10],r12d
   1400060cb:	mov    rcx,QWORD PTR [rbp+0x28]
   1400060cf:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400060d3:	add    rdx,rdx
   1400060d6:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400060d9:	mov    DWORD PTR [rdi+0x88],eax
   1400060df:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400060e3:	mov    DWORD PTR [rdi+0x8c],eax
   1400060e9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400060ed:	mov    DWORD PTR [rdi+0x90],eax
   1400060f3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400060f7:	mov    DWORD PTR [rdi+0x94],eax
   1400060fd:	mov    rcx,QWORD PTR [rbp+0x28]
   140006101:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006105:	inc    rdx
   140006108:	add    rdx,rdx
   14000610b:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000610e:	mov    DWORD PTR [rdi+0xa8],eax
   140006114:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006118:	mov    DWORD PTR [rdi+0xac],eax
   14000611e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006122:	mov    DWORD PTR [rdi+0xb0],eax
   140006128:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000612c:	mov    DWORD PTR [rdi+0xb4],eax
   140006132:	mov    rcx,QWORD PTR [rbp+0x28]
   140006136:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000613a:	inc    rdx
   14000613d:	add    rdx,rdx
   140006140:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006143:	mov    DWORD PTR [rdi+0xb8],eax
   140006149:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000614d:	mov    DWORD PTR [rdi+0xbc],eax
   140006153:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006157:	mov    DWORD PTR [rdi+0xc0],eax
   14000615d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006161:	mov    DWORD PTR [rdi+0xc4],eax
   140006167:	mov    rcx,QWORD PTR [rbp+0x28]
   14000616b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000616f:	add    rdx,0x2
   140006173:	add    rdx,rdx
   140006176:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006179:	mov    DWORD PTR [rdi+0xd8],eax
   14000617f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006183:	mov    DWORD PTR [rdi+0xdc],eax
   140006189:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000618d:	mov    DWORD PTR [rdi+0xe0],eax
   140006193:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006197:	mov    DWORD PTR [rdi+0xe4],eax
   14000619d:	jmp    0x1400052d9
   1400061a2:	mov    rdx,QWORD PTR [rbp+0x8]
   1400061a6:	mov    ecx,0xe8
   1400061ab:	call   0x140004140
   1400061b0:	mov    r11,rax
   1400061b3:	test   rax,rax
   1400061b6:	je     0x1400061e6
   1400061b8:	mov    ecx,DWORD PTR [rbp+0x10]
   1400061bb:	mov    rdi,QWORD PTR [rbp+0x30]
   1400061bf:	lea    eax,[rcx+0x5]
   1400061c2:	movsxd r8,eax
   1400061c5:	lea    eax,[rcx+0x3]
   1400061c8:	mov    rcx,r11
   1400061cb:	movsxd rdx,eax
   1400061ce:	shl    r8,0x4
   1400061d2:	shl    rdx,0x4
   1400061d6:	add    r8,rdi
   1400061d9:	add    rdx,rdi
   1400061dc:	call   0x140004180
   1400061e1:	mov    rdi,rax
   1400061e4:	jmp    0x1400061e9
   1400061e6:	mov    rdi,r12
   1400061e9:	mov    eax,DWORD PTR [rbp+0x10]
   1400061ec:	lea    rcx,[rdi+0x18]
   1400061f0:	inc    eax
   1400061f2:	movsxd rdx,eax
   1400061f5:	shl    rdx,0x4
   1400061f9:	add    rdx,QWORD PTR [rbp+0x30]
   1400061fd:	call   QWORD PTR [rip+0xefad]        # 0x1400151b0
   140006203:	mov    rcx,QWORD PTR [rbp+0x28]
   140006207:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000620b:	add    rdx,rdx
   14000620e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006211:	mov    DWORD PTR [rdi+0x88],eax
   140006217:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000621b:	mov    DWORD PTR [rdi+0x8c],eax
   140006221:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006225:	mov    DWORD PTR [rdi+0x90],eax
   14000622b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000622f:	mov    DWORD PTR [rdi+0x94],eax
   140006235:	mov    rcx,QWORD PTR [rbp+0x28]
   140006239:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000623d:	inc    rdx
   140006240:	add    rdx,rdx
   140006243:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006246:	mov    DWORD PTR [rdi+0x98],eax
   14000624c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006250:	mov    DWORD PTR [rdi+0x9c],eax
   140006256:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000625a:	mov    DWORD PTR [rdi+0xa0],eax
   140006260:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006264:	mov    DWORD PTR [rdi+0xa4],eax
   14000626a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000626e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006272:	add    rdx,0x3
   140006276:	add    rdx,rdx
   140006279:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000627c:	mov    DWORD PTR [rdi+0xa8],eax
   140006282:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006286:	mov    DWORD PTR [rdi+0xac],eax
   14000628c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006290:	mov    DWORD PTR [rdi+0xb0],eax
   140006296:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000629a:	mov    DWORD PTR [rdi+0xb4],eax
   1400062a0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400062a4:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400062a8:	add    rdx,0x5
   1400062ac:	add    rdx,rdx
   1400062af:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400062b2:	mov    DWORD PTR [rdi+0xb8],eax
   1400062b8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400062bc:	mov    DWORD PTR [rdi+0xbc],eax
   1400062c2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400062c6:	mov    DWORD PTR [rdi+0xc0],eax
   1400062cc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400062d0:	mov    DWORD PTR [rdi+0xc4],eax
   1400062d6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400062da:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400062de:	add    rdx,0x6
   1400062e2:	add    rdx,rdx
   1400062e5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400062e8:	mov    DWORD PTR [rdi+0xd8],eax
   1400062ee:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400062f2:	mov    DWORD PTR [rdi+0xdc],eax
   1400062f8:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400062fc:	mov    DWORD PTR [rdi+0xe0],eax
   140006302:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006306:	mov    DWORD PTR [rdi+0xe4],eax
   14000630c:	jmp    0x1400052d9
   140006311:	mov    rdx,QWORD PTR [rbp+0x8]
   140006315:	mov    ecx,0xe8
   14000631a:	call   0x140004140
   14000631f:	mov    r11,rax
   140006322:	test   rax,rax
   140006325:	je     0x140006355
   140006327:	mov    ecx,DWORD PTR [rbp+0x10]
   14000632a:	mov    rdi,QWORD PTR [rbp+0x30]
   14000632e:	lea    eax,[rcx+0x2]
   140006331:	movsxd r8,eax
   140006334:	lea    eax,[rcx+0x1]
   140006337:	mov    rcx,r11
   14000633a:	movsxd rdx,eax
   14000633d:	shl    r8,0x4
   140006341:	shl    rdx,0x4
   140006345:	add    r8,rdi
   140006348:	add    rdx,rdi
   14000634b:	call   0x140004180
   140006350:	mov    rdi,rax
   140006353:	jmp    0x140006358
   140006355:	mov    rdi,r12
   140006358:	mov    rcx,QWORD PTR [rbp+0x28]
   14000635c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006360:	add    rdx,rdx
   140006363:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006366:	mov    DWORD PTR [rdi+0x88],eax
   14000636c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006370:	mov    DWORD PTR [rdi+0x8c],eax
   140006376:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000637a:	mov    DWORD PTR [rdi+0x90],eax
   140006380:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006384:	mov    DWORD PTR [rdi+0x94],eax
   14000638a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000638e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006392:	inc    rdx
   140006395:	add    rdx,rdx
   140006398:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000639b:	mov    DWORD PTR [rdi+0xa8],eax
   1400063a1:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400063a5:	mov    DWORD PTR [rdi+0xac],eax
   1400063ab:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400063af:	mov    DWORD PTR [rdi+0xb0],eax
   1400063b5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400063b9:	mov    DWORD PTR [rdi+0xb4],eax
   1400063bf:	mov    rcx,QWORD PTR [rbp+0x28]
   1400063c3:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400063c7:	add    rdx,0x2
   1400063cb:	add    rdx,rdx
   1400063ce:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400063d1:	mov    DWORD PTR [rdi+0xb8],eax
   1400063d7:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400063db:	mov    DWORD PTR [rdi+0xbc],eax
   1400063e1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400063e5:	mov    DWORD PTR [rdi+0xc0],eax
   1400063eb:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400063ef:	mov    DWORD PTR [rdi+0xc4],eax
   1400063f5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400063f9:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400063fd:	add    rdx,0x3
   140006401:	add    rdx,rdx
   140006404:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006407:	mov    DWORD PTR [rdi+0xd8],eax
   14000640d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006411:	mov    DWORD PTR [rdi+0xdc],eax
   140006417:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000641b:	mov    DWORD PTR [rdi+0xe0],eax
   140006421:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006425:	mov    DWORD PTR [rdi+0xe4],eax
   14000642b:	jmp    0x1400052d9
   140006430:	mov    rdx,QWORD PTR [rbp+0x8]
   140006434:	mov    ecx,0xe8
   140006439:	call   0x140004140
   14000643e:	mov    r11,rax
   140006441:	test   rax,rax
   140006444:	je     0x140006474
   140006446:	mov    ecx,DWORD PTR [rbp+0x10]
   140006449:	mov    rdi,QWORD PTR [rbp+0x30]
   14000644d:	lea    eax,[rcx+0x3]
   140006450:	movsxd r8,eax
   140006453:	lea    eax,[rcx+0x2]
   140006456:	mov    rcx,r11
   140006459:	movsxd rdx,eax
   14000645c:	shl    r8,0x4
   140006460:	shl    rdx,0x4
   140006464:	add    r8,rdi
   140006467:	add    rdx,rdi
   14000646a:	call   0x140004180
   14000646f:	mov    rdi,rax
   140006472:	jmp    0x140006477
   140006474:	mov    rdi,r12
   140006477:	mov    BYTE PTR [rdi+0x58],0x1
   14000647b:	mov    rcx,QWORD PTR [rbp+0x28]
   14000647f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006483:	add    rdx,rdx
   140006486:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006489:	mov    DWORD PTR [rdi+0x68],eax
   14000648c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006490:	mov    DWORD PTR [rdi+0x6c],eax
   140006493:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006497:	mov    DWORD PTR [rdi+0x70],eax
   14000649a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000649e:	mov    DWORD PTR [rdi+0x74],eax
   1400064a1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400064a5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400064a9:	inc    rdx
   1400064ac:	add    rdx,rdx
   1400064af:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400064b2:	mov    DWORD PTR [rdi+0x88],eax
   1400064b8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400064bc:	mov    DWORD PTR [rdi+0x8c],eax
   1400064c2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400064c6:	mov    DWORD PTR [rdi+0x90],eax
   1400064cc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400064d0:	mov    DWORD PTR [rdi+0x94],eax
   1400064d6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400064da:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400064de:	add    rdx,0x2
   1400064e2:	add    rdx,rdx
   1400064e5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400064e8:	mov    DWORD PTR [rdi+0xa8],eax
   1400064ee:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400064f2:	mov    DWORD PTR [rdi+0xac],eax
   1400064f8:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400064fc:	mov    DWORD PTR [rdi+0xb0],eax
   140006502:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006506:	mov    DWORD PTR [rdi+0xb4],eax
   14000650c:	mov    rcx,QWORD PTR [rbp+0x28]
   140006510:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006514:	add    rdx,0x3
   140006518:	add    rdx,rdx
   14000651b:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000651e:	mov    DWORD PTR [rdi+0xb8],eax
   140006524:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006528:	mov    DWORD PTR [rdi+0xbc],eax
   14000652e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006532:	mov    DWORD PTR [rdi+0xc0],eax
   140006538:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000653c:	mov    DWORD PTR [rdi+0xc4],eax
   140006542:	mov    rcx,QWORD PTR [rbp+0x28]
   140006546:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000654a:	add    rdx,0x4
   14000654e:	add    rdx,rdx
   140006551:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006554:	mov    DWORD PTR [rdi+0xd8],eax
   14000655a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000655e:	mov    DWORD PTR [rdi+0xdc],eax
   140006564:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006568:	mov    DWORD PTR [rdi+0xe0],eax
   14000656e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006572:	mov    DWORD PTR [rdi+0xe4],eax
   140006578:	jmp    0x1400052d9
   14000657d:	mov    rdx,QWORD PTR [rbp+0x8]
   140006581:	mov    ecx,0xe8
   140006586:	call   0x140004140
   14000658b:	mov    r11,rax
   14000658e:	test   rax,rax
   140006591:	je     0x1400065cf
   140006593:	mov    edx,DWORD PTR [rbp+0x10]
   140006596:	mov    rcx,QWORD PTR [rbp+0x30]
   14000659a:	mov    r9,QWORD PTR [rbp+0x18]
   14000659e:	lea    eax,[rdx+0x4]
   1400065a1:	movsxd rdi,eax
   1400065a4:	lea    eax,[rdx+0x2]
   1400065a7:	mov    r9,QWORD PTR [r9+rdi*8]
   1400065ab:	movsxd r8,eax
   1400065ae:	lea    eax,[rdx+0x1]
   1400065b1:	movsxd rdx,eax
   1400065b4:	shl    r8,0x4
   1400065b8:	shl    rdx,0x4
   1400065bc:	add    r8,rcx
   1400065bf:	add    rdx,rcx
   1400065c2:	mov    rcx,r11
   1400065c5:	call   0x1400043a0
   1400065ca:	mov    rdi,rax
   1400065cd:	jmp    0x1400065d2
   1400065cf:	mov    rdi,r12
   1400065d2:	mov    rcx,QWORD PTR [rbp+0x28]
   1400065d6:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400065da:	add    rdx,rdx
   1400065dd:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400065e0:	mov    DWORD PTR [rdi+0x88],eax
   1400065e6:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400065ea:	mov    DWORD PTR [rdi+0x8c],eax
   1400065f0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400065f4:	mov    DWORD PTR [rdi+0x90],eax
   1400065fa:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400065fe:	mov    DWORD PTR [rdi+0x94],eax
   140006604:	mov    rcx,QWORD PTR [rbp+0x28]
   140006608:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000660c:	inc    rdx
   14000660f:	add    rdx,rdx
   140006612:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006615:	mov    DWORD PTR [rdi+0xa8],eax
   14000661b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000661f:	mov    DWORD PTR [rdi+0xac],eax
   140006625:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006629:	mov    DWORD PTR [rdi+0xb0],eax
   14000662f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006633:	mov    DWORD PTR [rdi+0xb4],eax
   140006639:	mov    rcx,QWORD PTR [rbp+0x28]
   14000663d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006641:	add    rdx,0x2
   140006645:	add    rdx,rdx
   140006648:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000664b:	mov    DWORD PTR [rdi+0xb8],eax
   140006651:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006655:	mov    DWORD PTR [rdi+0xbc],eax
   14000665b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000665f:	mov    DWORD PTR [rdi+0xc0],eax
   140006665:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006669:	mov    DWORD PTR [rdi+0xc4],eax
   14000666f:	mov    rcx,QWORD PTR [rbp+0x28]
   140006673:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006677:	add    rdx,0x3
   14000667b:	add    rdx,rdx
   14000667e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006681:	mov    DWORD PTR [rdi+0xc8],eax
   140006687:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000668b:	mov    DWORD PTR [rdi+0xcc],eax
   140006691:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006695:	mov    DWORD PTR [rdi+0xd0],eax
   14000669b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000669f:	mov    DWORD PTR [rdi+0xd4],eax
   1400066a5:	jmp    0x1400052d9
   1400066aa:	mov    rdx,QWORD PTR [rbp+0x8]
   1400066ae:	mov    ecx,0xe8
   1400066b3:	call   0x140004140
   1400066b8:	mov    r11,rax
   1400066bb:	test   rax,rax
   1400066be:	je     0x1400066fc
   1400066c0:	mov    edx,DWORD PTR [rbp+0x10]
   1400066c3:	mov    rcx,QWORD PTR [rbp+0x30]
   1400066c7:	mov    r9,QWORD PTR [rbp+0x18]
   1400066cb:	lea    eax,[rdx+0x5]
   1400066ce:	movsxd rdi,eax
   1400066d1:	lea    eax,[rdx+0x3]
   1400066d4:	mov    r9,QWORD PTR [r9+rdi*8]
   1400066d8:	movsxd r8,eax
   1400066db:	lea    eax,[rdx+0x2]
   1400066de:	movsxd rdx,eax
   1400066e1:	shl    r8,0x4
   1400066e5:	shl    rdx,0x4
   1400066e9:	add    r8,rcx
   1400066ec:	add    rdx,rcx
   1400066ef:	mov    rcx,r11
   1400066f2:	call   0x1400043a0
   1400066f7:	mov    rdi,rax
   1400066fa:	jmp    0x1400066ff
   1400066fc:	mov    rdi,r12
   1400066ff:	mov    BYTE PTR [rdi+0x59],0x1
   140006703:	mov    rcx,QWORD PTR [rbp+0x28]
   140006707:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000670b:	add    rdx,rdx
   14000670e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006711:	mov    DWORD PTR [rdi+0x78],eax
   140006714:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006718:	mov    DWORD PTR [rdi+0x7c],eax
   14000671b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000671f:	mov    DWORD PTR [rdi+0x80],eax
   140006725:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006729:	mov    DWORD PTR [rdi+0x84],eax
   14000672f:	mov    rcx,QWORD PTR [rbp+0x28]
   140006733:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006737:	inc    rdx
   14000673a:	add    rdx,rdx
   14000673d:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006740:	mov    DWORD PTR [rdi+0x88],eax
   140006746:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000674a:	mov    DWORD PTR [rdi+0x8c],eax
   140006750:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006754:	mov    DWORD PTR [rdi+0x90],eax
   14000675a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000675e:	mov    DWORD PTR [rdi+0x94],eax
   140006764:	mov    rcx,QWORD PTR [rbp+0x28]
   140006768:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000676c:	add    rdx,0x2
   140006770:	add    rdx,rdx
   140006773:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006776:	mov    DWORD PTR [rdi+0xa8],eax
   14000677c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006780:	mov    DWORD PTR [rdi+0xac],eax
   140006786:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000678a:	mov    DWORD PTR [rdi+0xb0],eax
   140006790:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006794:	mov    DWORD PTR [rdi+0xb4],eax
   14000679a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000679e:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400067a2:	add    rdx,0x3
   1400067a6:	add    rdx,rdx
   1400067a9:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400067ac:	mov    DWORD PTR [rdi+0xb8],eax
   1400067b2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400067b6:	mov    DWORD PTR [rdi+0xbc],eax
   1400067bc:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400067c0:	mov    DWORD PTR [rdi+0xc0],eax
   1400067c6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400067ca:	mov    DWORD PTR [rdi+0xc4],eax
   1400067d0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400067d4:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400067d8:	add    rdx,0x4
   1400067dc:	add    rdx,rdx
   1400067df:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400067e2:	mov    DWORD PTR [rdi+0xc8],eax
   1400067e8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400067ec:	mov    DWORD PTR [rdi+0xcc],eax
   1400067f2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400067f6:	mov    DWORD PTR [rdi+0xd0],eax
   1400067fc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006800:	mov    DWORD PTR [rdi+0xd4],eax
   140006806:	jmp    0x1400052d9
   14000680b:	mov    rdx,QWORD PTR [rbp+0x8]
   14000680f:	mov    ecx,0xe8
   140006814:	call   0x140004140
   140006819:	mov    r11,rax
   14000681c:	test   rax,rax
   14000681f:	je     0x14000685d
   140006821:	mov    edx,DWORD PTR [rbp+0x10]
   140006824:	mov    rcx,QWORD PTR [rbp+0x30]
   140006828:	mov    r9,QWORD PTR [rbp+0x18]
   14000682c:	lea    eax,[rdx+0x5]
   14000682f:	movsxd rdi,eax
   140006832:	lea    eax,[rdx+0x3]
   140006835:	mov    r9,QWORD PTR [r9+rdi*8]
   140006839:	movsxd r8,eax
   14000683c:	lea    eax,[rdx+0x2]
   14000683f:	movsxd rdx,eax
   140006842:	shl    r8,0x4
   140006846:	shl    rdx,0x4
   14000684a:	add    r8,rcx
   14000684d:	add    rdx,rcx
   140006850:	mov    rcx,r11
   140006853:	call   0x1400043a0
   140006858:	mov    rdi,rax
   14000685b:	jmp    0x140006860
   14000685d:	mov    rdi,r12
   140006860:	mov    BYTE PTR [rdi+0x58],0x1
   140006864:	mov    rcx,QWORD PTR [rbp+0x28]
   140006868:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000686c:	add    rdx,rdx
   14000686f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006872:	mov    DWORD PTR [rdi+0x68],eax
   140006875:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006879:	mov    DWORD PTR [rdi+0x6c],eax
   14000687c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006880:	mov    DWORD PTR [rdi+0x70],eax
   140006883:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006887:	mov    DWORD PTR [rdi+0x74],eax
   14000688a:	jmp    0x14000672f
   14000688f:	mov    rdx,QWORD PTR [rbp+0x8]
   140006893:	mov    ecx,0xe8
   140006898:	call   0x140004140
   14000689d:	mov    r11,rax
   1400068a0:	test   rax,rax
   1400068a3:	je     0x1400068d3
   1400068a5:	mov    ecx,DWORD PTR [rbp+0x10]
   1400068a8:	mov    rdi,QWORD PTR [rbp+0x30]
   1400068ac:	lea    eax,[rcx+0x5]
   1400068af:	movsxd r8,eax
   1400068b2:	lea    eax,[rcx+0x3]
   1400068b5:	mov    rcx,r11
   1400068b8:	movsxd rdx,eax
   1400068bb:	shl    r8,0x4
   1400068bf:	shl    rdx,0x4
   1400068c3:	add    r8,rdi
   1400068c6:	add    rdx,rdi
   1400068c9:	call   0x140004180
   1400068ce:	mov    rsi,rax
   1400068d1:	jmp    0x1400068d6
   1400068d3:	mov    rsi,r12
   1400068d6:	mov    eax,DWORD PTR [rbp+0x10]
   1400068d9:	lea    rcx,[rsi+0x18]
   1400068dd:	inc    eax
   1400068df:	movsxd rdx,eax
   1400068e2:	shl    rdx,0x4
   1400068e6:	add    rdx,QWORD PTR [rbp+0x30]
   1400068ea:	call   QWORD PTR [rip+0xe8c0]        # 0x1400151b0
   1400068f0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400068f4:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400068f8:	add    rdx,rdx
   1400068fb:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400068fe:	mov    DWORD PTR [rsi+0x88],eax
   140006904:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006908:	mov    DWORD PTR [rsi+0x8c],eax
   14000690e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006912:	mov    DWORD PTR [rsi+0x90],eax
   140006918:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000691c:	mov    DWORD PTR [rsi+0x94],eax
   140006922:	mov    rcx,QWORD PTR [rbp+0x28]
   140006926:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000692a:	inc    rdx
   14000692d:	add    rdx,rdx
   140006930:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006933:	mov    DWORD PTR [rsi+0x98],eax
   140006939:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000693d:	mov    DWORD PTR [rsi+0x9c],eax
   140006943:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006947:	mov    DWORD PTR [rsi+0xa0],eax
   14000694d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006951:	mov    DWORD PTR [rsi+0xa4],eax
   140006957:	mov    rcx,QWORD PTR [rbp+0x28]
   14000695b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000695f:	add    rdx,0x3
   140006963:	add    rdx,rdx
   140006966:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006969:	mov    DWORD PTR [rsi+0xa8],eax
   14000696f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006973:	mov    DWORD PTR [rsi+0xac],eax
   140006979:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000697d:	mov    DWORD PTR [rsi+0xb0],eax
   140006983:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006987:	mov    DWORD PTR [rsi+0xb4],eax
   14000698d:	mov    rcx,QWORD PTR [rbp+0x28]
   140006991:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006995:	add    rdx,0x5
   140006999:	add    rdx,rdx
   14000699c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000699f:	mov    DWORD PTR [rsi+0xb8],eax
   1400069a5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400069a9:	mov    DWORD PTR [rsi+0xbc],eax
   1400069af:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400069b3:	mov    DWORD PTR [rsi+0xc0],eax
   1400069b9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400069bd:	mov    DWORD PTR [rsi+0xc4],eax
   1400069c3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400069c7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400069cb:	add    rdx,0x6
   1400069cf:	add    rdx,rdx
   1400069d2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400069d5:	mov    DWORD PTR [rsi+0xd8],eax
   1400069db:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400069df:	mov    DWORD PTR [rsi+0xdc],eax
   1400069e5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400069e9:	mov    DWORD PTR [rsi+0xe0],eax
   1400069ef:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400069f3:	mov    ecx,0x38
   1400069f8:	mov    DWORD PTR [rsi+0xe4],eax
   1400069fe:	mov    rdx,QWORD PTR [rbp+0x8]
   140006a02:	call   0x140004140
   140006a07:	mov    rbx,rax
   140006a0a:	test   rax,rax
   140006a0d:	je     0x140006a55
   140006a0f:	mov    eax,DWORD PTR [rbp+0x10]
   140006a12:	lea    rcx,[rbx+0x18]
   140006a16:	add    eax,0x5
   140006a19:	movsxd rdx,eax
   140006a1c:	lea    rax,[rip+0x102e5]        # 0x140016d08
   140006a23:	shl    rdx,0x4
   140006a27:	add    rdx,QWORD PTR [rbp+0x30]
   140006a2b:	mov    DWORD PTR [rbx+0x8],r12d
   140006a2f:	mov    QWORD PTR [rbx],rax
   140006a32:	mov    QWORD PTR [rbx+0x10],rbx
   140006a36:	call   QWORD PTR [rip+0xe76c]        # 0x1400151a8
   140006a3c:	mov    DWORD PTR [rbx+0x28],r12d
   140006a40:	mov    DWORD PTR [rbx+0x2c],r12d
   140006a44:	mov    DWORD PTR [rbx+0x30],r12d
   140006a48:	mov    DWORD PTR [rbx+0x34],r12d
   140006a4c:	mov    DWORD PTR [rbx+0x8],0x5a
   140006a53:	jmp    0x140006a58
   140006a55:	mov    rbx,r12
   140006a58:	mov    rcx,QWORD PTR [rbp+0x28]
   140006a5c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006a60:	add    rdx,0x5
   140006a64:	add    rdx,rdx
   140006a67:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006a6a:	mov    DWORD PTR [rbx+0x28],eax
   140006a6d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006a71:	mov    DWORD PTR [rbx+0x2c],eax
   140006a74:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006a78:	mov    DWORD PTR [rbx+0x30],eax
   140006a7b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006a7f:	mov    ecx,0x50
   140006a84:	mov    DWORD PTR [rbx+0x34],eax
   140006a87:	mov    QWORD PTR [rbx+0x10],r12
   140006a8b:	mov    rdx,QWORD PTR [rbp+0x8]
   140006a8f:	call   0x140004140
   140006a94:	mov    rdi,rax
   140006a97:	test   rax,rax
   140006a9a:	je     0x140006afc
   140006a9c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140006aa0:	mov    rax,QWORD PTR [rbp+0x18]
   140006aa4:	mov    rdx,QWORD PTR [rax+rcx*8+0x40]
   140006aa9:	lea    rcx,[rip+0x106b8]        # 0x140017168
   140006ab0:	mov    rax,QWORD PTR [rdx+0x10]
   140006ab4:	mov    QWORD PTR [rdx+0x10],r12
   140006ab8:	mov    QWORD PTR [rdi],rcx
   140006abb:	mov    QWORD PTR [rdi+0x10],rbx
   140006abf:	mov    QWORD PTR [rdi+0x18],rax
   140006ac3:	mov    DWORD PTR [rdi+0x20],r12d
   140006ac7:	mov    DWORD PTR [rdi+0x24],r12d
   140006acb:	mov    DWORD PTR [rdi+0x28],r12d
   140006acf:	mov    DWORD PTR [rdi+0x2c],r12d
   140006ad3:	mov    DWORD PTR [rdi+0x30],r12d
   140006ad7:	mov    DWORD PTR [rdi+0x34],r12d
   140006adb:	mov    DWORD PTR [rdi+0x38],r12d
   140006adf:	mov    DWORD PTR [rdi+0x3c],r12d
   140006ae3:	mov    DWORD PTR [rdi+0x40],r12d
   140006ae7:	mov    DWORD PTR [rdi+0x44],r12d
   140006aeb:	mov    DWORD PTR [rdi+0x48],r12d
   140006aef:	mov    DWORD PTR [rdi+0x4c],r12d
   140006af3:	mov    DWORD PTR [rdi+0x8],0x4f
   140006afa:	jmp    0x140006aff
   140006afc:	mov    rdi,r12
   140006aff:	mov    rcx,QWORD PTR [rbp+0x28]
   140006b03:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006b07:	lea    r9,[rip+0xffffffffffff94f2]        # 0x140000000
   140006b0e:	add    rdx,0x6
   140006b12:	add    rdx,rdx
   140006b15:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006b18:	mov    DWORD PTR [rdi+0x20],eax
   140006b1b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006b1f:	mov    DWORD PTR [rdi+0x24],eax
   140006b22:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006b26:	mov    DWORD PTR [rdi+0x28],eax
   140006b29:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006b2d:	mov    DWORD PTR [rdi+0x2c],eax
   140006b30:	mov    rcx,QWORD PTR [rbp+0x28]
   140006b34:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006b38:	add    rdx,0x7
   140006b3c:	add    rdx,rdx
   140006b3f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006b42:	mov    DWORD PTR [rdi+0x30],eax
   140006b45:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006b49:	mov    DWORD PTR [rdi+0x34],eax
   140006b4c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006b50:	mov    DWORD PTR [rdi+0x38],eax
   140006b53:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006b57:	mov    DWORD PTR [rdi+0x3c],eax
   140006b5a:	mov    rcx,QWORD PTR [rbp+0x28]
   140006b5e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006b62:	add    rdx,0x9
   140006b66:	add    rdx,rdx
   140006b69:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006b6c:	mov    DWORD PTR [rdi+0x40],eax
   140006b6f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006b73:	mov    DWORD PTR [rdi+0x44],eax
   140006b76:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006b7a:	mov    DWORD PTR [rdi+0x48],eax
   140006b7d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006b81:	mov    DWORD PTR [rdi+0x4c],eax
   140006b84:	mov    QWORD PTR [rsi+0x50],rdi
   140006b88:	movsxd rcx,DWORD PTR [rbp+0x10]
   140006b8c:	mov    rax,QWORD PTR [rbp+0x18]
   140006b90:	mov    QWORD PTR [rax+rcx*8],rsi
   140006b94:	mov    esi,DWORD PTR [rsp+0x30]
   140006b98:	jmp    0x14000ae40
   140006b9d:	mov    rdx,QWORD PTR [rbp+0x8]
   140006ba1:	mov    ecx,0xe8
   140006ba6:	call   0x140004140
   140006bab:	mov    r11,rax
   140006bae:	test   rax,rax
   140006bb1:	je     0x140006be1
   140006bb3:	mov    ecx,DWORD PTR [rbp+0x10]
   140006bb6:	mov    rdi,QWORD PTR [rbp+0x30]
   140006bba:	lea    eax,[rcx+0x2]
   140006bbd:	movsxd r8,eax
   140006bc0:	lea    eax,[rcx+0x1]
   140006bc3:	mov    rcx,r11
   140006bc6:	movsxd rdx,eax
   140006bc9:	shl    r8,0x4
   140006bcd:	shl    rdx,0x4
   140006bd1:	add    r8,rdi
   140006bd4:	add    rdx,rdi
   140006bd7:	call   0x140004180
   140006bdc:	mov    rsi,rax
   140006bdf:	jmp    0x140006be4
   140006be1:	mov    rsi,r12
   140006be4:	mov    rcx,QWORD PTR [rbp+0x28]
   140006be8:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006bec:	add    rdx,rdx
   140006bef:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006bf2:	mov    DWORD PTR [rsi+0x88],eax
   140006bf8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006bfc:	mov    DWORD PTR [rsi+0x8c],eax
   140006c02:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006c06:	mov    DWORD PTR [rsi+0x90],eax
   140006c0c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006c10:	mov    DWORD PTR [rsi+0x94],eax
   140006c16:	mov    rcx,QWORD PTR [rbp+0x28]
   140006c1a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006c1e:	inc    rdx
   140006c21:	add    rdx,rdx
   140006c24:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006c27:	mov    DWORD PTR [rsi+0xa8],eax
   140006c2d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006c31:	mov    DWORD PTR [rsi+0xac],eax
   140006c37:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006c3b:	mov    DWORD PTR [rsi+0xb0],eax
   140006c41:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006c45:	mov    DWORD PTR [rsi+0xb4],eax
   140006c4b:	mov    rcx,QWORD PTR [rbp+0x28]
   140006c4f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006c53:	add    rdx,0x2
   140006c57:	add    rdx,rdx
   140006c5a:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006c5d:	mov    DWORD PTR [rsi+0xb8],eax
   140006c63:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006c67:	mov    DWORD PTR [rsi+0xbc],eax
   140006c6d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006c71:	mov    DWORD PTR [rsi+0xc0],eax
   140006c77:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006c7b:	mov    DWORD PTR [rsi+0xc4],eax
   140006c81:	mov    rcx,QWORD PTR [rbp+0x28]
   140006c85:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006c89:	add    rdx,0x3
   140006c8d:	add    rdx,rdx
   140006c90:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006c93:	mov    DWORD PTR [rsi+0xd8],eax
   140006c99:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006c9d:	mov    DWORD PTR [rsi+0xdc],eax
   140006ca3:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006ca7:	mov    DWORD PTR [rsi+0xe0],eax
   140006cad:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006cb1:	mov    ecx,0x38
   140006cb6:	mov    DWORD PTR [rsi+0xe4],eax
   140006cbc:	mov    rdx,QWORD PTR [rbp+0x8]
   140006cc0:	call   0x140004140
   140006cc5:	mov    rbx,rax
   140006cc8:	test   rax,rax
   140006ccb:	je     0x140006d13
   140006ccd:	mov    eax,DWORD PTR [rbp+0x10]
   140006cd0:	lea    rcx,[rbx+0x18]
   140006cd4:	add    eax,0x2
   140006cd7:	movsxd rdx,eax
   140006cda:	lea    rax,[rip+0x10027]        # 0x140016d08
   140006ce1:	shl    rdx,0x4
   140006ce5:	add    rdx,QWORD PTR [rbp+0x30]
   140006ce9:	mov    DWORD PTR [rbx+0x8],r12d
   140006ced:	mov    QWORD PTR [rbx],rax
   140006cf0:	mov    QWORD PTR [rbx+0x10],rbx
   140006cf4:	call   QWORD PTR [rip+0xe4ae]        # 0x1400151a8
   140006cfa:	mov    DWORD PTR [rbx+0x28],r12d
   140006cfe:	mov    DWORD PTR [rbx+0x2c],r12d
   140006d02:	mov    DWORD PTR [rbx+0x30],r12d
   140006d06:	mov    DWORD PTR [rbx+0x34],r12d
   140006d0a:	mov    DWORD PTR [rbx+0x8],0x5a
   140006d11:	jmp    0x140006d16
   140006d13:	mov    rbx,r12
   140006d16:	mov    rcx,QWORD PTR [rbp+0x28]
   140006d1a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006d1e:	add    rdx,0x2
   140006d22:	add    rdx,rdx
   140006d25:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006d28:	mov    DWORD PTR [rbx+0x28],eax
   140006d2b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006d2f:	mov    DWORD PTR [rbx+0x2c],eax
   140006d32:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006d36:	mov    DWORD PTR [rbx+0x30],eax
   140006d39:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006d3d:	mov    ecx,0x40
   140006d42:	mov    DWORD PTR [rbx+0x34],eax
   140006d45:	mov    QWORD PTR [rbx+0x10],r12
   140006d49:	mov    rdx,QWORD PTR [rbp+0x8]
   140006d4d:	call   0x140004140
   140006d52:	mov    r11,rax
   140006d55:	test   rax,rax
   140006d58:	je     0x140006da0
   140006d5a:	mov    rax,QWORD PTR [rbp+0x18]
   140006d5e:	movsxd rcx,DWORD PTR [rbp+0x10]
   140006d62:	mov    rdi,QWORD PTR [rax+rcx*8+0x28]
   140006d67:	mov    rdx,QWORD PTR [rax+rcx*8+0x20]
   140006d6c:	lea    rax,[rip+0x10355]        # 0x1400170c8
   140006d73:	mov    QWORD PTR [r11],rax
   140006d76:	mov    QWORD PTR [r11+0x10],rbx
   140006d7a:	mov    QWORD PTR [r11+0x18],rdx
   140006d7e:	mov    QWORD PTR [r11+0x20],rdi
   140006d82:	mov    DWORD PTR [r11+0x28],r12d
   140006d86:	mov    DWORD PTR [r11+0x2c],r12d
   140006d8a:	mov    DWORD PTR [r11+0x30],r12d
   140006d8e:	mov    DWORD PTR [r11+0x34],r12d
   140006d92:	mov    BYTE PTR [r11+0x38],r12b
   140006d96:	mov    DWORD PTR [r11+0x8],0x51
   140006d9e:	jmp    0x140006da3
   140006da0:	mov    r11,r12
   140006da3:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006da7:	add    rdx,0x3
   140006dab:	mov    rcx,QWORD PTR [rbp+0x28]
   140006daf:	add    rdx,rdx
   140006db2:	lea    r9,[rip+0xffffffffffff9247]        # 0x140000000
   140006db9:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006dbc:	mov    DWORD PTR [r11+0x28],eax
   140006dc0:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006dc4:	mov    DWORD PTR [r11+0x2c],eax
   140006dc8:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006dcc:	mov    DWORD PTR [r11+0x30],eax
   140006dd0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006dd4:	mov    DWORD PTR [r11+0x34],eax
   140006dd8:	mov    QWORD PTR [rsi+0x50],r11
   140006ddc:	movsxd rcx,DWORD PTR [rbp+0x10]
   140006de0:	mov    rax,QWORD PTR [rbp+0x18]
   140006de4:	mov    QWORD PTR [rax+rcx*8],rsi
   140006de8:	mov    esi,DWORD PTR [rsp+0x30]
   140006dec:	jmp    0x14000ae40
   140006df1:	mov    rdx,QWORD PTR [rbp+0x8]
   140006df5:	mov    ecx,0xe8
   140006dfa:	call   0x140004140
   140006dff:	mov    r11,rax
   140006e02:	test   rax,rax
   140006e05:	je     0x140006e35
   140006e07:	mov    ecx,DWORD PTR [rbp+0x10]
   140006e0a:	mov    rdi,QWORD PTR [rbp+0x30]
   140006e0e:	lea    eax,[rcx+0x3]
   140006e11:	movsxd r8,eax
   140006e14:	lea    eax,[rcx+0x2]
   140006e17:	mov    rcx,r11
   140006e1a:	movsxd rdx,eax
   140006e1d:	shl    r8,0x4
   140006e21:	shl    rdx,0x4
   140006e25:	add    r8,rdi
   140006e28:	add    rdx,rdi
   140006e2b:	call   0x140004180
   140006e30:	mov    rsi,rax
   140006e33:	jmp    0x140006e38
   140006e35:	mov    rsi,r12
   140006e38:	mov    BYTE PTR [rsi+0x59],0x1
   140006e3c:	mov    rcx,QWORD PTR [rbp+0x28]
   140006e40:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006e44:	add    rdx,rdx
   140006e47:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006e4a:	mov    DWORD PTR [rsi+0x78],eax
   140006e4d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006e51:	mov    DWORD PTR [rsi+0x7c],eax
   140006e54:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006e58:	mov    DWORD PTR [rsi+0x80],eax
   140006e5e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006e62:	mov    DWORD PTR [rsi+0x84],eax
   140006e68:	mov    rcx,QWORD PTR [rbp+0x28]
   140006e6c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006e70:	inc    rdx
   140006e73:	add    rdx,rdx
   140006e76:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006e79:	mov    DWORD PTR [rsi+0x88],eax
   140006e7f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006e83:	mov    DWORD PTR [rsi+0x8c],eax
   140006e89:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006e8d:	mov    DWORD PTR [rsi+0x90],eax
   140006e93:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006e97:	mov    DWORD PTR [rsi+0x94],eax
   140006e9d:	mov    rcx,QWORD PTR [rbp+0x28]
   140006ea1:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006ea5:	add    rdx,0x2
   140006ea9:	add    rdx,rdx
   140006eac:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006eaf:	mov    DWORD PTR [rsi+0xa8],eax
   140006eb5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006eb9:	mov    DWORD PTR [rsi+0xac],eax
   140006ebf:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006ec3:	mov    DWORD PTR [rsi+0xb0],eax
   140006ec9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006ecd:	mov    DWORD PTR [rsi+0xb4],eax
   140006ed3:	mov    rcx,QWORD PTR [rbp+0x28]
   140006ed7:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006edb:	add    rdx,0x3
   140006edf:	add    rdx,rdx
   140006ee2:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006ee5:	mov    DWORD PTR [rsi+0xb8],eax
   140006eeb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006eef:	mov    DWORD PTR [rsi+0xbc],eax
   140006ef5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006ef9:	mov    DWORD PTR [rsi+0xc0],eax
   140006eff:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006f03:	mov    DWORD PTR [rsi+0xc4],eax
   140006f09:	mov    rcx,QWORD PTR [rbp+0x28]
   140006f0d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006f11:	add    rdx,0x4
   140006f15:	add    rdx,rdx
   140006f18:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006f1b:	mov    DWORD PTR [rsi+0xd8],eax
   140006f21:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006f25:	mov    DWORD PTR [rsi+0xdc],eax
   140006f2b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006f2f:	mov    DWORD PTR [rsi+0xe0],eax
   140006f35:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006f39:	mov    ecx,0x38
   140006f3e:	mov    DWORD PTR [rsi+0xe4],eax
   140006f44:	mov    rdx,QWORD PTR [rbp+0x8]
   140006f48:	call   0x140004140
   140006f4d:	mov    rcx,rax
   140006f50:	test   rax,rax
   140006f53:	je     0x140006f70
   140006f55:	mov    eax,DWORD PTR [rbp+0x10]
   140006f58:	add    eax,0x3
   140006f5b:	movsxd rdx,eax
   140006f5e:	shl    rdx,0x4
   140006f62:	add    rdx,QWORD PTR [rbp+0x30]
   140006f66:	call   0x140003970
   140006f6b:	mov    rbx,rax
   140006f6e:	jmp    0x140006f73
   140006f70:	mov    rbx,r12
   140006f73:	mov    rcx,QWORD PTR [rbp+0x28]
   140006f77:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006f7b:	add    rdx,0x3
   140006f7f:	add    rdx,rdx
   140006f82:	mov    eax,DWORD PTR [rcx+rdx*8]
   140006f85:	mov    DWORD PTR [rbx+0x28],eax
   140006f88:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140006f8c:	mov    DWORD PTR [rbx+0x2c],eax
   140006f8f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140006f93:	mov    DWORD PTR [rbx+0x30],eax
   140006f96:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140006f9a:	mov    ecx,0x40
   140006f9f:	mov    DWORD PTR [rbx+0x34],eax
   140006fa2:	mov    QWORD PTR [rbx+0x10],r12
   140006fa6:	mov    rdx,QWORD PTR [rbp+0x8]
   140006faa:	call   0x140004140
   140006faf:	mov    r11,rax
   140006fb2:	test   rax,rax
   140006fb5:	je     0x140007008
   140006fb7:	mov    rax,QWORD PTR [rbp+0x18]
   140006fbb:	movsxd rcx,DWORD PTR [rbp+0x10]
   140006fbf:	mov    rdx,QWORD PTR [rax+rcx*8+0x28]
   140006fc4:	mov    rdi,QWORD PTR [rax+rcx*8+0x30]
   140006fc9:	lea    rax,[rip+0x100f8]        # 0x1400170c8
   140006fd0:	mov    QWORD PTR [r11],rax
   140006fd3:	mov    QWORD PTR [r11+0x10],rbx
   140006fd7:	mov    QWORD PTR [r11+0x18],rdx
   140006fdb:	mov    QWORD PTR [r11+0x20],rdi
   140006fdf:	mov    DWORD PTR [r11+0x28],r12d
   140006fe3:	mov    DWORD PTR [r11+0x2c],r12d
   140006fe7:	mov    DWORD PTR [r11+0x30],r12d
   140006feb:	mov    DWORD PTR [r11+0x34],r12d
   140006fef:	mov    BYTE PTR [r11+0x38],r12b
   140006ff3:	mov    DWORD PTR [r11+0x8],0x51
   140006ffb:	movsxd rdx,DWORD PTR [rbp+0x10]
   140006fff:	add    rdx,0x4
   140007003:	jmp    0x140006dab
   140007008:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000700c:	mov    r11,r12
   14000700f:	add    rdx,0x4
   140007013:	jmp    0x140006dab
   140007018:	mov    rdx,QWORD PTR [rbp+0x8]
   14000701c:	mov    ecx,0x18
   140007021:	call   0x140004140
   140007026:	mov    rdi,rax
   140007029:	test   rax,rax
   14000702c:	je     0x1400052d6
   140007032:	mov    rax,QWORD PTR [rbp+0x18]
   140007036:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000703a:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000703e:	lea    rax,[rip+0x10033]        # 0x140017078
   140007045:	mov    QWORD PTR [rdi],rax
   140007048:	mov    QWORD PTR [rdi+0x10],rdx
   14000704c:	mov    DWORD PTR [rdi+0x8],0x5d
   140007053:	jmp    0x1400052d9
   140007058:	mov    rdx,QWORD PTR [rbp+0x8]
   14000705c:	mov    ecx,0x20
   140007061:	call   0x140004140
   140007066:	mov    rdi,rax
   140007069:	test   rax,rax
   14000706c:	je     0x140007091
   14000706e:	lea    rax,[rip+0xe523]        # 0x140015598
   140007075:	mov    QWORD PTR [rdi],rax
   140007078:	mov    DWORD PTR [rdi+0x10],r12d
   14000707c:	mov    DWORD PTR [rdi+0x14],r12d
   140007080:	mov    DWORD PTR [rdi+0x18],r12d
   140007084:	mov    DWORD PTR [rdi+0x1c],r12d
   140007088:	mov    DWORD PTR [rdi+0x8],0x40
   14000708f:	jmp    0x140007094
   140007091:	mov    rdi,r12
   140007094:	mov    rcx,QWORD PTR [rbp+0x28]
   140007098:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000709c:	add    rdx,rdx
   14000709f:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400070a2:	mov    DWORD PTR [rdi+0x10],eax
   1400070a5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400070a9:	mov    DWORD PTR [rdi+0x14],eax
   1400070ac:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400070b0:	mov    DWORD PTR [rdi+0x18],eax
   1400070b3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400070b7:	mov    DWORD PTR [rdi+0x1c],eax
   1400070ba:	jmp    0x1400052d9
   1400070bf:	mov    rdx,QWORD PTR [rbp+0x8]
   1400070c3:	mov    ecx,0x30
   1400070c8:	call   0x140004140
   1400070cd:	mov    rdi,rax
   1400070d0:	test   rax,rax
   1400070d3:	je     0x140007112
   1400070d5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400070d9:	lea    rcx,[rdi+0x10]
   1400070dd:	shl    rdx,0x4
   1400070e1:	add    rdx,QWORD PTR [rbp+0x30]
   1400070e5:	mov    DWORD PTR [rax+0x8],r12d
   1400070e9:	lea    rax,[rip+0xe4f8]        # 0x1400155e8
   1400070f0:	mov    QWORD PTR [rdi],rax
   1400070f3:	call   QWORD PTR [rip+0xe0af]        # 0x1400151a8
   1400070f9:	mov    DWORD PTR [rdi+0x20],r12d
   1400070fd:	mov    DWORD PTR [rdi+0x24],r12d
   140007101:	mov    DWORD PTR [rdi+0x28],r12d
   140007105:	mov    DWORD PTR [rdi+0x2c],r12d
   140007109:	mov    DWORD PTR [rdi+0x8],0x21
   140007110:	jmp    0x140007115
   140007112:	mov    rdi,r12
   140007115:	mov    rcx,QWORD PTR [rbp+0x28]
   140007119:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000711d:	add    rdx,rdx
   140007120:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007123:	mov    DWORD PTR [rdi+0x20],eax
   140007126:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000712a:	mov    DWORD PTR [rdi+0x24],eax
   14000712d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007131:	mov    DWORD PTR [rdi+0x28],eax
   140007134:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007138:	mov    DWORD PTR [rdi+0x2c],eax
   14000713b:	jmp    0x1400052d9
   140007140:	mov    rdx,QWORD PTR [rbp+0x8]
   140007144:	mov    ecx,0x20
   140007149:	call   0x140004140
   14000714e:	mov    rdi,rax
   140007151:	test   rax,rax
   140007154:	je     0x140007091
   14000715a:	lea    rax,[rip+0xe4d7]        # 0x140015638
   140007161:	mov    QWORD PTR [rdi],rax
   140007164:	mov    DWORD PTR [rdi+0x10],r12d
   140007168:	mov    DWORD PTR [rdi+0x14],r12d
   14000716c:	mov    DWORD PTR [rdi+0x18],r12d
   140007170:	mov    DWORD PTR [rdi+0x1c],r12d
   140007174:	mov    DWORD PTR [rdi+0x8],0x2a
   14000717b:	jmp    0x140007094
   140007180:	mov    rdx,QWORD PTR [rbp+0x8]
   140007184:	mov    ecx,0x20
   140007189:	call   0x140004140
   14000718e:	mov    rdi,rax
   140007191:	test   rax,rax
   140007194:	je     0x140007091
   14000719a:	lea    rax,[rip+0xe4e7]        # 0x140015688
   1400071a1:	mov    QWORD PTR [rdi],rax
   1400071a4:	mov    DWORD PTR [rdi+0x10],r12d
   1400071a8:	mov    DWORD PTR [rdi+0x14],r12d
   1400071ac:	mov    DWORD PTR [rdi+0x18],r12d
   1400071b0:	mov    DWORD PTR [rdi+0x1c],r12d
   1400071b4:	mov    DWORD PTR [rdi+0x8],0x43
   1400071bb:	jmp    0x140007094
   1400071c0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400071c4:	mov    ecx,0x20
   1400071c9:	call   0x140004140
   1400071ce:	mov    rdi,rax
   1400071d1:	test   rax,rax
   1400071d4:	je     0x140007091
   1400071da:	lea    rax,[rip+0xe4f7]        # 0x1400156d8
   1400071e1:	mov    QWORD PTR [rdi],rax
   1400071e4:	mov    DWORD PTR [rdi+0x10],r12d
   1400071e8:	mov    DWORD PTR [rdi+0x14],r12d
   1400071ec:	mov    DWORD PTR [rdi+0x18],r12d
   1400071f0:	mov    DWORD PTR [rdi+0x1c],r12d
   1400071f4:	mov    DWORD PTR [rdi+0x8],0x17
   1400071fb:	jmp    0x140007094
   140007200:	mov    rdx,QWORD PTR [rbp+0x8]
   140007204:	mov    ecx,0x28
   140007209:	call   0x140004140
   14000720e:	mov    rdi,rax
   140007211:	test   rax,rax
   140007214:	je     0x14000724b
   140007216:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000721a:	mov    rax,QWORD PTR [rbp+0x18]
   14000721e:	movsd  xmm0,QWORD PTR [rax+rcx*8]
   140007223:	lea    rax,[rip+0xe4fe]        # 0x140015728
   14000722a:	mov    QWORD PTR [rdi],rax
   14000722d:	movsd  QWORD PTR [rdi+0x10],xmm0
   140007232:	mov    DWORD PTR [rdi+0x18],r12d
   140007236:	mov    DWORD PTR [rdi+0x1c],r12d
   14000723a:	mov    DWORD PTR [rdi+0x20],r12d
   14000723e:	mov    DWORD PTR [rdi+0x24],r12d
   140007242:	mov    DWORD PTR [rdi+0x8],0x2b
   140007249:	jmp    0x14000724e
   14000724b:	mov    rdi,r12
   14000724e:	mov    rcx,QWORD PTR [rbp+0x28]
   140007252:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007256:	add    rdx,rdx
   140007259:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000725c:	mov    DWORD PTR [rdi+0x18],eax
   14000725f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007263:	mov    DWORD PTR [rdi+0x1c],eax
   140007266:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000726a:	mov    DWORD PTR [rdi+0x20],eax
   14000726d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007271:	mov    DWORD PTR [rdi+0x24],eax
   140007274:	jmp    0x1400052d9
   140007279:	mov    rdx,QWORD PTR [rbp+0x8]
   14000727d:	mov    ecx,0x30
   140007282:	call   0x140004140
   140007287:	mov    rdi,rax
   14000728a:	test   rax,rax
   14000728d:	je     0x140007112
   140007293:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007297:	lea    rcx,[rdi+0x10]
   14000729b:	shl    rdx,0x4
   14000729f:	add    rdx,QWORD PTR [rbp+0x30]
   1400072a3:	mov    DWORD PTR [rax+0x8],r12d
   1400072a7:	lea    rax,[rip+0xe4ca]        # 0x140015778
   1400072ae:	mov    QWORD PTR [rdi],rax
   1400072b1:	call   QWORD PTR [rip+0xdef1]        # 0x1400151a8
   1400072b7:	mov    DWORD PTR [rdi+0x20],r12d
   1400072bb:	mov    DWORD PTR [rdi+0x24],r12d
   1400072bf:	mov    DWORD PTR [rdi+0x28],r12d
   1400072c3:	mov    DWORD PTR [rdi+0x2c],r12d
   1400072c7:	mov    DWORD PTR [rdi+0x8],0x3d
   1400072ce:	jmp    0x140007115
   1400072d3:	xor    edx,edx
   1400072d5:	mov    rcx,rbx
   1400072d8:	call   0x14000e1e0
   1400072dd:	test   al,al
   1400072df:	je     0x14000b96d
   1400072e5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400072e9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400072ed:	mov    eax,DWORD PTR [rbx+0x84]
   1400072f3:	add    rdx,rdx
   1400072f6:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   1400072fa:	mov    rcx,QWORD PTR [rbp+0x28]
   1400072fe:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007302:	add    rdx,rdx
   140007305:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007308:	mov    DWORD PTR [rbp+0x58],eax
   14000730b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000730f:	mov    DWORD PTR [rbp+0x5c],eax
   140007312:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007316:	mov    DWORD PTR [rbp+0x60],eax
   140007319:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000731d:	mov    ecx,0x38
   140007322:	mov    DWORD PTR [rbp+0x64],eax
   140007325:	mov    rdx,QWORD PTR [rbp+0x8]
   140007329:	call   0x140004140
   14000732e:	mov    rbx,rax
   140007331:	test   rax,rax
   140007334:	je     0x140007383
   140007336:	mov    rdx,QWORD PTR [rsp+0x38]
   14000733b:	lea    rcx,[rsp+0xd0]
   140007343:	or     esi,0xc
   140007346:	mov    edi,DWORD PTR [rdx+0x7c]
   140007349:	add    rdx,0x10
   14000734d:	mov    DWORD PTR [rsp+0x30],esi
   140007351:	call   QWORD PTR [rip+0xe071]        # 0x1400153c8
   140007357:	mov    rcx,QWORD PTR [rbp+0x0]
   14000735b:	lea    r8,[rsp+0xd0]
   140007363:	lea    rdx,[rsp+0x320]
   14000736b:	call   0x14000c460
   140007370:	mov    r8d,edi
   140007373:	mov    rcx,rbx
   140007376:	mov    rdx,rax
   140007379:	call   0x140002720
   14000737e:	mov    rdi,rax
   140007381:	jmp    0x140007386
   140007383:	mov    rdi,r12
   140007386:	test   sil,0x8
   14000738a:	je     0x1400073a1
   14000738c:	and    esi,0xfffffff7
   14000738f:	lea    rcx,[rsp+0x320]
   140007397:	mov    DWORD PTR [rsp+0x30],esi
   14000739b:	call   QWORD PTR [rip+0xde3f]        # 0x1400151e0
   1400073a1:	test   sil,0x4
   1400073a5:	je     0x1400073bc
   1400073a7:	and    esi,0xfffffffb
   1400073aa:	lea    rcx,[rsp+0xd0]
   1400073b2:	mov    DWORD PTR [rsp+0x30],esi
   1400073b6:	call   QWORD PTR [rip+0xdffc]        # 0x1400153b8
   1400073bc:	mov    rcx,QWORD PTR [rbp+0x28]
   1400073c0:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400073c4:	add    rdx,rdx
   1400073c7:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400073ca:	mov    DWORD PTR [rdi+0x24],eax
   1400073cd:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400073d1:	mov    DWORD PTR [rdi+0x28],eax
   1400073d4:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400073d8:	mov    DWORD PTR [rdi+0x2c],eax
   1400073db:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400073df:	mov    DWORD PTR [rdi+0x30],eax
   1400073e2:	jmp    0x1400052d9
   1400073e7:	mov    edx,0x1
   1400073ec:	mov    rcx,rbx
   1400073ef:	call   0x14000e1e0
   1400073f4:	test   al,al
   1400073f6:	je     0x14000b9f9
   1400073fc:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007400:	mov    rcx,QWORD PTR [rbp+0x28]
   140007404:	mov    eax,DWORD PTR [rbx+0x84]
   14000740a:	add    rdx,rdx
   14000740d:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   140007411:	mov    rcx,QWORD PTR [rbp+0x28]
   140007415:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007419:	add    rdx,rdx
   14000741c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000741f:	mov    DWORD PTR [rbp+0x58],eax
   140007422:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007426:	mov    DWORD PTR [rbp+0x5c],eax
   140007429:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000742d:	mov    DWORD PTR [rbp+0x60],eax
   140007430:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007434:	mov    ecx,0x38
   140007439:	mov    DWORD PTR [rbp+0x64],eax
   14000743c:	mov    rdx,QWORD PTR [rbp+0x8]
   140007440:	call   0x140004140
   140007445:	mov    rbx,rax
   140007448:	test   rax,rax
   14000744b:	je     0x14000749a
   14000744d:	mov    rdx,QWORD PTR [rsp+0x38]
   140007452:	lea    rcx,[rsp+0xe0]
   14000745a:	or     esi,0x30
   14000745d:	mov    edi,DWORD PTR [rdx+0x7c]
   140007460:	add    rdx,0x10
   140007464:	mov    DWORD PTR [rsp+0x30],esi
   140007468:	call   QWORD PTR [rip+0xdf5a]        # 0x1400153c8
   14000746e:	mov    rcx,QWORD PTR [rbp+0x0]
   140007472:	lea    r8,[rsp+0xe0]
   14000747a:	lea    rdx,[rsp+0x380]
   140007482:	call   0x14000c460
   140007487:	mov    r8d,edi
   14000748a:	mov    rcx,rbx
   14000748d:	mov    rdx,rax
   140007490:	call   0x140002720
   140007495:	mov    rdi,rax
   140007498:	jmp    0x14000749d
   14000749a:	mov    rdi,r12
   14000749d:	test   sil,0x20
   1400074a1:	je     0x1400074b8
   1400074a3:	and    esi,0xffffffdf
   1400074a6:	lea    rcx,[rsp+0x380]
   1400074ae:	mov    DWORD PTR [rsp+0x30],esi
   1400074b2:	call   QWORD PTR [rip+0xdd28]        # 0x1400151e0
   1400074b8:	test   sil,0x10
   1400074bc:	je     0x1400074d3
   1400074be:	and    esi,0xffffffef
   1400074c1:	lea    rcx,[rsp+0xe0]
   1400074c9:	mov    DWORD PTR [rsp+0x30],esi
   1400074cd:	call   QWORD PTR [rip+0xdee5]        # 0x1400153b8
   1400074d3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400074d7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400074db:	add    rdx,rdx
   1400074de:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400074e1:	mov    DWORD PTR [rdi+0x24],eax
   1400074e4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400074e8:	mov    DWORD PTR [rdi+0x28],eax
   1400074eb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400074ef:	mov    DWORD PTR [rdi+0x2c],eax
   1400074f2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400074f6:	mov    DWORD PTR [rdi+0x30],eax
   1400074f9:	jmp    0x1400052d9
   1400074fe:	mov    rdx,QWORD PTR [rbp+0x8]
   140007502:	mov    ecx,0x50
   140007507:	call   0x140004140
   14000750c:	mov    rdi,rax
   14000750f:	test   rax,rax
   140007512:	je     0x14000755f
   140007514:	lea    rax,[rip+0xe2fd]        # 0x140015818
   14000751b:	mov    QWORD PTR [rdi],rax
   14000751e:	mov    QWORD PTR [rdi+0x10],r12
   140007522:	mov    QWORD PTR [rdi+0x18],r12
   140007526:	mov    DWORD PTR [rdi+0x20],r12d
   14000752a:	mov    DWORD PTR [rdi+0x24],r12d
   14000752e:	mov    DWORD PTR [rdi+0x28],r12d
   140007532:	mov    DWORD PTR [rdi+0x2c],r12d
   140007536:	mov    DWORD PTR [rdi+0x30],r12d
   14000753a:	mov    DWORD PTR [rdi+0x34],r12d
   14000753e:	mov    DWORD PTR [rdi+0x38],r12d
   140007542:	mov    DWORD PTR [rdi+0x3c],r12d
   140007546:	mov    DWORD PTR [rdi+0x40],r12d
   14000754a:	mov    DWORD PTR [rdi+0x44],r12d
   14000754e:	mov    DWORD PTR [rdi+0x48],r12d
   140007552:	mov    DWORD PTR [rdi+0x4c],r12d
   140007556:	mov    DWORD PTR [rdi+0x8],0x2
   14000755d:	jmp    0x140007562
   14000755f:	mov    rdi,r12
   140007562:	mov    rcx,QWORD PTR [rbp+0x28]
   140007566:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000756a:	add    rdx,rdx
   14000756d:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007570:	mov    DWORD PTR [rdi+0x20],eax
   140007573:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007577:	mov    DWORD PTR [rdi+0x24],eax
   14000757a:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000757e:	mov    DWORD PTR [rdi+0x28],eax
   140007581:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007585:	mov    DWORD PTR [rdi+0x2c],eax
   140007588:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000758c:	inc    rdx
   14000758f:	mov    rcx,QWORD PTR [rbp+0x28]
   140007593:	add    rdx,rdx
   140007596:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007599:	mov    DWORD PTR [rdi+0x40],eax
   14000759c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400075a0:	mov    DWORD PTR [rdi+0x44],eax
   1400075a3:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400075a7:	mov    DWORD PTR [rdi+0x48],eax
   1400075aa:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400075ae:	mov    DWORD PTR [rdi+0x4c],eax
   1400075b1:	jmp    0x1400052d9
   1400075b6:	mov    rdx,QWORD PTR [rbp+0x8]
   1400075ba:	mov    ecx,0x50
   1400075bf:	call   0x140004140
   1400075c4:	mov    rdi,rax
   1400075c7:	test   rax,rax
   1400075ca:	je     0x1400075ee
   1400075cc:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400075d0:	mov    rax,QWORD PTR [rbp+0x18]
   1400075d4:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   1400075d9:	mov    rdx,QWORD PTR [rcx+0x10]
   1400075dd:	mov    QWORD PTR [rcx+0x10],r12
   1400075e1:	mov    rcx,rdi
   1400075e4:	call   0x140002790
   1400075e9:	mov    rdi,rax
   1400075ec:	jmp    0x1400075f1
   1400075ee:	mov    rdi,r12
   1400075f1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400075f5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400075f9:	add    rdx,rdx
   1400075fc:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400075ff:	mov    DWORD PTR [rdi+0x20],eax
   140007602:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007606:	mov    DWORD PTR [rdi+0x24],eax
   140007609:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000760d:	mov    DWORD PTR [rdi+0x28],eax
   140007610:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007614:	mov    DWORD PTR [rdi+0x2c],eax
   140007617:	mov    rcx,QWORD PTR [rbp+0x28]
   14000761b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000761f:	add    rdx,0x2
   140007623:	add    rdx,rdx
   140007626:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007629:	mov    DWORD PTR [rdi+0x40],eax
   14000762c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007630:	mov    DWORD PTR [rdi+0x44],eax
   140007633:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007637:	mov    DWORD PTR [rdi+0x48],eax
   14000763a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000763e:	mov    DWORD PTR [rdi+0x4c],eax
   140007641:	jmp    0x1400052d9
   140007646:	mov    rdx,QWORD PTR [rbp+0x8]
   14000764a:	mov    ecx,0x50
   14000764f:	call   0x140004140
   140007654:	mov    rdi,rax
   140007657:	test   rax,rax
   14000765a:	je     0x1400075ee
   14000765c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007660:	mov    rax,QWORD PTR [rbp+0x18]
   140007664:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   140007669:	mov    rdx,QWORD PTR [rcx+0x20]
   14000766d:	mov    QWORD PTR [rcx+0x20],r12
   140007671:	mov    rcx,rdi
   140007674:	call   0x1400027e0
   140007679:	mov    rdi,rax
   14000767c:	jmp    0x1400075f1
   140007681:	mov    rdx,QWORD PTR [rbp+0x8]
   140007685:	mov    ecx,0x50
   14000768a:	call   0x140004140
   14000768f:	mov    rdi,rax
   140007692:	test   rax,rax
   140007695:	je     0x1400076f7
   140007697:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000769b:	mov    rax,QWORD PTR [rbp+0x18]
   14000769f:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   1400076a4:	lea    rcx,[rip+0xe16d]        # 0x140015818
   1400076ab:	mov    rax,QWORD PTR [rdx+0x20]
   1400076af:	mov    QWORD PTR [rdx+0x20],r12
   1400076b3:	mov    QWORD PTR [rdi],rcx
   1400076b6:	mov    QWORD PTR [rdi+0x10],rax
   1400076ba:	mov    QWORD PTR [rdi+0x18],r12
   1400076be:	mov    DWORD PTR [rdi+0x20],r12d
   1400076c2:	mov    DWORD PTR [rdi+0x24],r12d
   1400076c6:	mov    DWORD PTR [rdi+0x28],r12d
   1400076ca:	mov    DWORD PTR [rdi+0x2c],r12d
   1400076ce:	mov    DWORD PTR [rdi+0x30],r12d
   1400076d2:	mov    DWORD PTR [rdi+0x34],r12d
   1400076d6:	mov    DWORD PTR [rdi+0x38],r12d
   1400076da:	mov    DWORD PTR [rdi+0x3c],r12d
   1400076de:	mov    DWORD PTR [rdi+0x40],r12d
   1400076e2:	mov    DWORD PTR [rdi+0x44],r12d
   1400076e6:	mov    DWORD PTR [rdi+0x48],r12d
   1400076ea:	mov    DWORD PTR [rdi+0x4c],r12d
   1400076ee:	mov    DWORD PTR [rdi+0x8],0x2
   1400076f5:	jmp    0x1400076fa
   1400076f7:	mov    rdi,r12
   1400076fa:	mov    rcx,QWORD PTR [rbp+0x28]
   1400076fe:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007702:	add    rdx,rdx
   140007705:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007708:	mov    DWORD PTR [rdi+0x20],eax
   14000770b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000770f:	mov    DWORD PTR [rdi+0x24],eax
   140007712:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007716:	mov    DWORD PTR [rdi+0x28],eax
   140007719:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000771d:	mov    DWORD PTR [rdi+0x2c],eax
   140007720:	mov    rcx,QWORD PTR [rbp+0x28]
   140007724:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007728:	add    rdx,0x2
   14000772c:	add    rdx,rdx
   14000772f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007732:	mov    DWORD PTR [rdi+0x30],eax
   140007735:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007739:	mov    DWORD PTR [rdi+0x34],eax
   14000773c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007740:	mov    DWORD PTR [rdi+0x38],eax
   140007743:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007747:	mov    DWORD PTR [rdi+0x3c],eax
   14000774a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000774e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007752:	add    rdx,0x3
   140007756:	add    rdx,rdx
   140007759:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000775c:	mov    DWORD PTR [rdi+0x40],eax
   14000775f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007763:	mov    DWORD PTR [rdi+0x44],eax
   140007766:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000776a:	mov    DWORD PTR [rdi+0x48],eax
   14000776d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007771:	mov    DWORD PTR [rdi+0x4c],eax
   140007774:	jmp    0x1400052d9
   140007779:	mov    rdx,QWORD PTR [rbp+0x8]
   14000777d:	mov    ecx,0x50
   140007782:	call   0x140004140
   140007787:	mov    rdi,rax
   14000778a:	test   rax,rax
   14000778d:	je     0x1400077c6
   14000778f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007793:	mov    rax,QWORD PTR [rbp+0x18]
   140007797:	mov    rdx,QWORD PTR [rax+rcx*8+0x18]
   14000779c:	mov    r8,QWORD PTR [rdx+0x10]
   1400077a0:	mov    QWORD PTR [rdx+0x10],r12
   1400077a4:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400077a8:	mov    rax,QWORD PTR [rbp+0x18]
   1400077ac:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   1400077b1:	mov    rdx,QWORD PTR [rcx+0x20]
   1400077b5:	mov    QWORD PTR [rcx+0x20],r12
   1400077b9:	mov    rcx,rdi
   1400077bc:	call   0x140002830
   1400077c1:	mov    rdi,rax
   1400077c4:	jmp    0x1400077c9
   1400077c6:	mov    rdi,r12
   1400077c9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400077cd:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400077d1:	add    rdx,rdx
   1400077d4:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400077d7:	mov    DWORD PTR [rdi+0x20],eax
   1400077da:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400077de:	mov    DWORD PTR [rdi+0x24],eax
   1400077e1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400077e5:	mov    DWORD PTR [rdi+0x28],eax
   1400077e8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400077ec:	mov    DWORD PTR [rdi+0x2c],eax
   1400077ef:	mov    rcx,QWORD PTR [rbp+0x28]
   1400077f3:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400077f7:	add    rdx,0x2
   1400077fb:	add    rdx,rdx
   1400077fe:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007801:	mov    DWORD PTR [rdi+0x30],eax
   140007804:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007808:	mov    DWORD PTR [rdi+0x34],eax
   14000780b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000780f:	mov    DWORD PTR [rdi+0x38],eax
   140007812:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007816:	mov    DWORD PTR [rdi+0x3c],eax
   140007819:	mov    rcx,QWORD PTR [rbp+0x28]
   14000781d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007821:	add    rdx,0x4
   140007825:	add    rdx,rdx
   140007828:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000782b:	mov    DWORD PTR [rdi+0x40],eax
   14000782e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007832:	mov    DWORD PTR [rdi+0x44],eax
   140007835:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007839:	mov    DWORD PTR [rdi+0x48],eax
   14000783c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007840:	mov    DWORD PTR [rdi+0x4c],eax
   140007843:	jmp    0x1400052d9
   140007848:	mov    rax,QWORD PTR [rbp+0x18]
   14000784c:	mov    ecx,0x38
   140007851:	cmp    QWORD PTR [rax+rdx*8+0x8],r12
   140007856:	mov    rdx,QWORD PTR [rbp+0x8]
   14000785a:	je     0x14000788e
   14000785c:	call   0x140004140
   140007861:	mov    rdi,rax
   140007864:	test   rax,rax
   140007867:	je     0x1400078d2
   140007869:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000786d:	mov    rax,QWORD PTR [rbp+0x18]
   140007871:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140007876:	lea    rcx,[rip+0xdfeb]        # 0x140015868
   14000787d:	mov    rax,QWORD PTR [rdx+0x18]
   140007881:	mov    QWORD PTR [rdx+0x18],r12
   140007885:	mov    QWORD PTR [rdi],rcx
   140007888:	mov    QWORD PTR [rdi+0x10],rax
   14000788c:	jmp    0x1400078a9
   14000788e:	call   0x140004140
   140007893:	mov    rdi,rax
   140007896:	test   rax,rax
   140007899:	je     0x1400078d2
   14000789b:	lea    rax,[rip+0xdfc6]        # 0x140015868
   1400078a2:	mov    QWORD PTR [rdi],rax
   1400078a5:	mov    QWORD PTR [rdi+0x10],r12
   1400078a9:	mov    DWORD PTR [rdi+0x18],r12d
   1400078ad:	mov    DWORD PTR [rdi+0x1c],r12d
   1400078b1:	mov    DWORD PTR [rdi+0x20],r12d
   1400078b5:	mov    DWORD PTR [rdi+0x24],r12d
   1400078b9:	mov    DWORD PTR [rdi+0x28],r12d
   1400078bd:	mov    DWORD PTR [rdi+0x2c],r12d
   1400078c1:	mov    DWORD PTR [rdi+0x30],r12d
   1400078c5:	mov    DWORD PTR [rdi+0x34],r12d
   1400078c9:	mov    DWORD PTR [rdi+0x8],0x2d
   1400078d0:	jmp    0x1400078d5
   1400078d2:	mov    rdi,r12
   1400078d5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400078d9:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400078dd:	add    rdx,rdx
   1400078e0:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400078e3:	mov    DWORD PTR [rdi+0x18],eax
   1400078e6:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400078ea:	mov    DWORD PTR [rdi+0x1c],eax
   1400078ed:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400078f1:	mov    DWORD PTR [rdi+0x20],eax
   1400078f4:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400078f8:	mov    DWORD PTR [rdi+0x24],eax
   1400078fb:	jmp    0x1400059cd
   140007900:	mov    rdx,QWORD PTR [rbp+0x8]
   140007904:	mov    ecx,0x38
   140007909:	call   0x140004140
   14000790e:	mov    rdi,rax
   140007911:	test   rax,rax
   140007914:	je     0x140007962
   140007916:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000791a:	mov    rax,QWORD PTR [rbp+0x18]
   14000791e:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140007923:	lea    rcx,[rip+0xdf3e]        # 0x140015868
   14000792a:	mov    rax,QWORD PTR [rdx+0x18]
   14000792e:	mov    QWORD PTR [rdx+0x18],r12
   140007932:	mov    QWORD PTR [rdi],rcx
   140007935:	mov    QWORD PTR [rdi+0x10],rax
   140007939:	mov    DWORD PTR [rdi+0x18],r12d
   14000793d:	mov    DWORD PTR [rdi+0x1c],r12d
   140007941:	mov    DWORD PTR [rdi+0x20],r12d
   140007945:	mov    DWORD PTR [rdi+0x24],r12d
   140007949:	mov    DWORD PTR [rdi+0x28],r12d
   14000794d:	mov    DWORD PTR [rdi+0x2c],r12d
   140007951:	mov    DWORD PTR [rdi+0x30],r12d
   140007955:	mov    DWORD PTR [rdi+0x34],r12d
   140007959:	mov    DWORD PTR [rdi+0x8],0x2d
   140007960:	jmp    0x140007965
   140007962:	mov    rdi,r12
   140007965:	mov    rcx,QWORD PTR [rbp+0x28]
   140007969:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000796d:	add    rdx,rdx
   140007970:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007973:	mov    DWORD PTR [rdi+0x18],eax
   140007976:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000797a:	mov    DWORD PTR [rdi+0x1c],eax
   14000797d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007981:	mov    DWORD PTR [rdi+0x20],eax
   140007984:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007988:	mov    DWORD PTR [rdi+0x24],eax
   14000798b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000798f:	add    rdx,0x3
   140007993:	jmp    0x1400059d5
   140007998:	mov    rdx,QWORD PTR [rbp+0x8]
   14000799c:	mov    ecx,0x38
   1400079a1:	call   0x140004140
   1400079a6:	mov    rdi,rax
   1400079a9:	test   rax,rax
   1400079ac:	je     0x1400078d2
   1400079b2:	mov    rax,QWORD PTR [rbp+0x18]
   1400079b6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400079ba:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   1400079bf:	lea    rax,[rip+0xdb82]        # 0x140015548
   1400079c6:	mov    QWORD PTR [rdi],rax
   1400079c9:	mov    QWORD PTR [rdi+0x10],rdx
   1400079cd:	mov    DWORD PTR [rdi+0x18],r12d
   1400079d1:	mov    DWORD PTR [rdi+0x1c],r12d
   1400079d5:	mov    DWORD PTR [rdi+0x20],r12d
   1400079d9:	mov    DWORD PTR [rdi+0x24],r12d
   1400079dd:	mov    DWORD PTR [rdi+0x28],r12d
   1400079e1:	mov    DWORD PTR [rdi+0x2c],r12d
   1400079e5:	mov    DWORD PTR [rdi+0x30],r12d
   1400079e9:	mov    DWORD PTR [rdi+0x34],r12d
   1400079ed:	mov    DWORD PTR [rdi+0x8],0x4e
   1400079f4:	jmp    0x1400078d5
   1400079f9:	mov    rax,QWORD PTR [rbp+0x18]
   1400079fd:	mov    rbx,QWORD PTR [rax+rdx*8]
   140007a01:	test   rbx,rbx
   140007a04:	je     0x140007ad3
   140007a0a:	cmp    DWORD PTR [rbx+0x8],0x3
   140007a0e:	jne    0x140007ad3
   140007a14:	or     rcx,0xffffffffffffffff
   140007a18:	xor    eax,eax
   140007a1a:	lea    rdx,[rsp+0x340]
   140007a22:	repnz scas al,BYTE PTR es:[rdi]
   140007a24:	lea    rax,[rip+0xf875]        # 0x1400172a0
   140007a2b:	not    rcx
   140007a2e:	mov    QWORD PTR [rsp+0x48],rax
   140007a33:	dec    rcx
   140007a36:	mov    DWORD PTR [rsp+0x40],ecx
   140007a3a:	lea    rcx,[rsp+0xf0]
   140007a42:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140007a47:	movdqa XMMWORD PTR [rsp+0x340],xmm0
   140007a50:	call   QWORD PTR [rip+0xd70a]        # 0x140015160
   140007a56:	mov    DWORD PTR [rsp+0x210],r12d
   140007a5e:	mov    eax,DWORD PTR [rbx+0x20]
   140007a61:	lea    rcx,[rsp+0x214]
   140007a69:	lea    rdx,[rsp+0xf0]
   140007a71:	mov    DWORD PTR [rcx],eax
   140007a73:	mov    eax,DWORD PTR [rbx+0x24]
   140007a76:	mov    DWORD PTR [rcx+0x4],eax
   140007a79:	mov    eax,DWORD PTR [rbx+0x28]
   140007a7c:	mov    DWORD PTR [rcx+0x8],eax
   140007a7f:	mov    eax,DWORD PTR [rbx+0x2c]
   140007a82:	mov    DWORD PTR [rcx+0xc],eax
   140007a85:	lea    rcx,[rsp+0x228]
   140007a8d:	call   QWORD PTR [rip+0xd935]        # 0x1400153c8
   140007a93:	lea    rcx,[rbp+0x118]
   140007a9a:	lea    rdx,[rsp+0x210]
   140007aa2:	call   0x140004c10
   140007aa7:	lea    rcx,[rsp+0x228]
   140007aaf:	call   QWORD PTR [rip+0xd903]        # 0x1400153b8
   140007ab5:	lea    rcx,[rsp+0xf0]
   140007abd:	call   QWORD PTR [rip+0xd8f5]        # 0x1400153b8
   140007ac3:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007ac7:	mov    rcx,QWORD PTR [rbp+0x18]
   140007acb:	mov    rax,QWORD PTR [rbx+0x10]
   140007acf:	mov    QWORD PTR [rcx+rdx*8],rax
   140007ad3:	movsxd rax,DWORD PTR [rbp+0x10]
   140007ad7:	mov    rdx,QWORD PTR [rbp+0x18]
   140007adb:	mov    rcx,rbp
   140007ade:	mov    rdx,QWORD PTR [rdx+rax*8]
   140007ae2:	call   0x140004650
   140007ae7:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007aeb:	mov    rdx,rax
   140007aee:	test   rax,rax
   140007af1:	mov    rax,QWORD PTR [rbp+0x18]
   140007af5:	je     0x14000ba85
   140007afb:	mov    QWORD PTR [rax+rcx*8],rdx
   140007aff:	lea    r9,[rip+0xffffffffffff84fa]        # 0x140000000
   140007b06:	jmp    0x14000ae40
   140007b0b:	mov    rdx,QWORD PTR [rbp+0x8]
   140007b0f:	mov    ecx,0x38
   140007b14:	call   0x140004140
   140007b19:	mov    rdi,rax
   140007b1c:	test   rax,rax
   140007b1f:	je     0x1400052d6
   140007b25:	mov    rax,QWORD PTR [rbp+0x18]
   140007b29:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007b2d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140007b31:	lea    rax,[rip+0xddd0]        # 0x140015908
   140007b38:	mov    QWORD PTR [rdi],rax
   140007b3b:	mov    QWORD PTR [rdi+0x10],r12
   140007b3f:	mov    QWORD PTR [rdi+0x18],rdx
   140007b43:	mov    QWORD PTR [rdi+0x20],rdi
   140007b47:	mov    DWORD PTR [rdi+0x28],r12d
   140007b4b:	mov    DWORD PTR [rdi+0x2c],r12d
   140007b4f:	mov    DWORD PTR [rdi+0x30],r12d
   140007b53:	mov    DWORD PTR [rdi+0x34],r12d
   140007b57:	mov    DWORD PTR [rdi+0x8],0x12
   140007b5e:	jmp    0x1400052d9
   140007b63:	mov    rdx,QWORD PTR [rbp+0x8]
   140007b67:	mov    ecx,0x38
   140007b6c:	call   0x140004140
   140007b71:	mov    r11,rax
   140007b74:	test   rax,rax
   140007b77:	je     0x140005a55
   140007b7d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007b81:	mov    r8,QWORD PTR [rbp+0x18]
   140007b85:	lea    eax,[rcx+0x1]
   140007b88:	mov    rcx,QWORD PTR [r8+rcx*8]
   140007b8c:	mov    rdx,QWORD PTR [rcx+0x10]
   140007b90:	mov    QWORD PTR [rcx+0x10],r12
   140007b94:	movsxd rdi,eax
   140007b97:	mov    rax,QWORD PTR [r8+rdi*8]
   140007b9b:	lea    rcx,[rip+0xdd66]        # 0x140015908
   140007ba2:	mov    QWORD PTR [r11],rcx
   140007ba5:	mov    QWORD PTR [r11+0x10],rdx
   140007ba9:	mov    QWORD PTR [r11+0x18],rax
   140007bad:	mov    QWORD PTR [r11+0x20],r11
   140007bb1:	mov    DWORD PTR [r11+0x28],r12d
   140007bb5:	mov    DWORD PTR [r11+0x2c],r12d
   140007bb9:	mov    DWORD PTR [r11+0x30],r12d
   140007bbd:	mov    DWORD PTR [r11+0x34],r12d
   140007bc1:	mov    DWORD PTR [r11+0x8],0x12
   140007bc9:	jmp    0x140005a58
   140007bce:	mov    rdx,QWORD PTR [rbp+0x8]
   140007bd2:	mov    ecx,0x38
   140007bd7:	call   0x140004140
   140007bdc:	mov    rdi,rax
   140007bdf:	test   rax,rax
   140007be2:	je     0x140007c36
   140007be4:	mov    rax,QWORD PTR [rbp+0x18]
   140007be8:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007bec:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140007bf1:	mov    rcx,QWORD PTR [rax+rcx*8]
   140007bf5:	lea    rax,[rip+0xdd0c]        # 0x140015908
   140007bfc:	mov    QWORD PTR [rdi],rax
   140007bff:	mov    QWORD PTR [rdi+0x10],r12
   140007c03:	mov    QWORD PTR [rdi+0x18],rdx
   140007c07:	mov    DWORD PTR [rdi+0x28],r12d
   140007c0b:	mov    DWORD PTR [rdi+0x2c],r12d
   140007c0f:	mov    DWORD PTR [rdi+0x30],r12d
   140007c13:	mov    DWORD PTR [rdi+0x34],r12d
   140007c17:	mov    DWORD PTR [rdi+0x8],0x12
   140007c1e:	mov    rax,QWORD PTR [rcx+0x20]
   140007c22:	mov    QWORD PTR [rdi+0x20],rax
   140007c26:	mov    QWORD PTR [rcx+0x20],rdi
   140007c2a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007c2e:	inc    rdx
   140007c31:	jmp    0x1400059d5
   140007c36:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007c3a:	mov    rdi,r12
   140007c3d:	inc    rdx
   140007c40:	jmp    0x1400059d5
   140007c45:	mov    rdx,QWORD PTR [rbp+0x8]
   140007c49:	mov    ecx,0x38
   140007c4e:	call   0x140004140
   140007c53:	mov    r11,rax
   140007c56:	test   rax,rax
   140007c59:	je     0x140005bf7
   140007c5f:	mov    r8,QWORD PTR [rbp+0x18]
   140007c63:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007c67:	lea    eax,[rcx+0x3]
   140007c6a:	mov    rcx,QWORD PTR [r8+rcx*8+0x10]
   140007c6f:	mov    rdi,QWORD PTR [rcx+0x10]
   140007c73:	mov    QWORD PTR [rcx+0x10],r12
   140007c77:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007c7b:	movsxd rdx,eax
   140007c7e:	mov    rax,QWORD PTR [rbp+0x18]
   140007c82:	mov    rdx,QWORD PTR [r8+rdx*8]
   140007c86:	mov    r8,QWORD PTR [rax+rcx*8]
   140007c8a:	lea    rax,[rip+0xdc77]        # 0x140015908
   140007c91:	mov    QWORD PTR [r11],rax
   140007c94:	mov    QWORD PTR [r11+0x10],rdi
   140007c98:	mov    QWORD PTR [r11+0x18],rdx
   140007c9c:	mov    DWORD PTR [r11+0x28],r12d
   140007ca0:	mov    DWORD PTR [r11+0x2c],r12d
   140007ca4:	mov    DWORD PTR [r11+0x30],r12d
   140007ca8:	mov    DWORD PTR [r11+0x34],r12d
   140007cac:	mov    DWORD PTR [r11+0x8],0x12
   140007cb4:	mov    rax,QWORD PTR [r8+0x20]
   140007cb8:	mov    QWORD PTR [r11+0x20],rax
   140007cbc:	mov    QWORD PTR [r8+0x20],r11
   140007cc0:	jmp    0x140005bfa
   140007cc5:	mov    rdx,QWORD PTR [rbp+0x8]
   140007cc9:	mov    ecx,0x28
   140007cce:	call   0x140004140
   140007cd3:	mov    rdi,rax
   140007cd6:	test   rax,rax
   140007cd9:	je     0x14000724b
   140007cdf:	lea    rax,[rip+0xdbd2]        # 0x1400158b8
   140007ce6:	mov    QWORD PTR [rdi],rax
   140007ce9:	mov    QWORD PTR [rdi+0x10],rdi
   140007ced:	mov    DWORD PTR [rdi+0x18],r12d
   140007cf1:	mov    DWORD PTR [rdi+0x1c],r12d
   140007cf5:	mov    DWORD PTR [rdi+0x20],r12d
   140007cf9:	mov    DWORD PTR [rdi+0x24],r12d
   140007cfd:	mov    DWORD PTR [rdi+0x8],0x13
   140007d04:	jmp    0x14000724e
   140007d09:	mov    rdx,QWORD PTR [rbp+0x8]
   140007d0d:	mov    ecx,0x28
   140007d12:	call   0x140004140
   140007d17:	mov    rdi,rax
   140007d1a:	test   rax,rax
   140007d1d:	je     0x140007d5a
   140007d1f:	mov    rax,QWORD PTR [rbp+0x18]
   140007d23:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007d27:	mov    rdx,QWORD PTR [rax+rcx*8]
   140007d2b:	lea    rax,[rip+0xdb86]        # 0x1400158b8
   140007d32:	mov    QWORD PTR [rdi],rax
   140007d35:	mov    DWORD PTR [rdi+0x18],r12d
   140007d39:	mov    DWORD PTR [rdi+0x1c],r12d
   140007d3d:	mov    DWORD PTR [rdi+0x20],r12d
   140007d41:	mov    DWORD PTR [rdi+0x24],r12d
   140007d45:	mov    DWORD PTR [rdi+0x8],0x13
   140007d4c:	mov    rax,QWORD PTR [rdx+0x10]
   140007d50:	mov    QWORD PTR [rdi+0x10],rax
   140007d54:	mov    QWORD PTR [rdx+0x10],rdi
   140007d58:	jmp    0x140007d5d
   140007d5a:	mov    rdi,r12
   140007d5d:	mov    rcx,QWORD PTR [rbp+0x28]
   140007d61:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007d65:	inc    rdx
   140007d68:	add    rdx,rdx
   140007d6b:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007d6e:	mov    DWORD PTR [rdi+0x18],eax
   140007d71:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007d75:	mov    DWORD PTR [rdi+0x1c],eax
   140007d78:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007d7c:	mov    DWORD PTR [rdi+0x20],eax
   140007d7f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007d83:	mov    DWORD PTR [rdi+0x24],eax
   140007d86:	jmp    0x1400052d9
   140007d8b:	mov    rdx,QWORD PTR [rbp+0x8]
   140007d8f:	mov    ecx,0x40
   140007d94:	call   0x140004140
   140007d99:	mov    rdi,rax
   140007d9c:	test   rax,rax
   140007d9f:	je     0x140007d5a
   140007da1:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007da5:	mov    rax,QWORD PTR [rbp+0x18]
   140007da9:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140007dae:	mov    rax,QWORD PTR [rax+rcx*8]
   140007db2:	mov    QWORD PTR [rdi+0x10],rax
   140007db6:	lea    rax,[rip+0xdbeb]        # 0x1400159a8
   140007dbd:	mov    QWORD PTR [rdi],rax
   140007dc0:	mov    DWORD PTR [rdi+0x18],r12d
   140007dc4:	mov    DWORD PTR [rdi+0x1c],r12d
   140007dc8:	mov    DWORD PTR [rdi+0x20],r12d
   140007dcc:	mov    DWORD PTR [rdi+0x24],r12d
   140007dd0:	mov    QWORD PTR [rdi+0x28],rdx
   140007dd4:	mov    DWORD PTR [rdi+0x30],r12d
   140007dd8:	mov    DWORD PTR [rdi+0x34],r12d
   140007ddc:	mov    DWORD PTR [rdi+0x38],r12d
   140007de0:	mov    DWORD PTR [rdi+0x3c],r12d
   140007de4:	mov    DWORD PTR [rdi+0x8],0x36
   140007deb:	jmp    0x140007d5d
   140007df0:	mov    rdx,QWORD PTR [rbp+0x8]
   140007df4:	mov    ecx,0x80
   140007df9:	call   0x140004140
   140007dfe:	mov    r11,rax
   140007e01:	test   rax,rax
   140007e04:	je     0x140007e2e
   140007e06:	mov    ecx,DWORD PTR [rbp+0x10]
   140007e09:	mov    rdi,QWORD PTR [rbp+0x18]
   140007e0d:	lea    eax,[rcx+0x5]
   140007e10:	movsxd r8,eax
   140007e13:	lea    eax,[rcx+0x1]
   140007e16:	mov    rcx,r11
   140007e19:	mov    r8,QWORD PTR [rdi+r8*8]
   140007e1d:	movsxd rdx,eax
   140007e20:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140007e24:	call   0x140002910
   140007e29:	mov    rdi,rax
   140007e2c:	jmp    0x140007e31
   140007e2e:	mov    rdi,r12
   140007e31:	mov    rcx,QWORD PTR [rbp+0x28]
   140007e35:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007e39:	add    rdx,rdx
   140007e3c:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007e3f:	mov    DWORD PTR [rdi+0x1c],eax
   140007e42:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007e46:	mov    DWORD PTR [rdi+0x20],eax
   140007e49:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007e4d:	mov    DWORD PTR [rdi+0x24],eax
   140007e50:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007e54:	mov    DWORD PTR [rdi+0x28],eax
   140007e57:	mov    rcx,QWORD PTR [rbp+0x28]
   140007e5b:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007e5f:	add    rdx,0x2
   140007e63:	add    rdx,rdx
   140007e66:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007e69:	mov    DWORD PTR [rdi+0x2c],eax
   140007e6c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007e70:	mov    DWORD PTR [rdi+0x30],eax
   140007e73:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007e77:	mov    DWORD PTR [rdi+0x34],eax
   140007e7a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007e7e:	mov    DWORD PTR [rdi+0x38],eax
   140007e81:	mov    rcx,QWORD PTR [rbp+0x28]
   140007e85:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007e89:	add    rdx,0x3
   140007e8d:	add    rdx,rdx
   140007e90:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007e93:	mov    DWORD PTR [rdi+0x48],eax
   140007e96:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007e9a:	mov    DWORD PTR [rdi+0x4c],eax
   140007e9d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007ea1:	mov    DWORD PTR [rdi+0x50],eax
   140007ea4:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007ea8:	mov    DWORD PTR [rdi+0x54],eax
   140007eab:	mov    rcx,QWORD PTR [rbp+0x28]
   140007eaf:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007eb3:	add    rdx,0x4
   140007eb7:	add    rdx,rdx
   140007eba:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007ebd:	mov    DWORD PTR [rdi+0x58],eax
   140007ec0:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007ec4:	mov    DWORD PTR [rdi+0x5c],eax
   140007ec7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007ecb:	mov    DWORD PTR [rdi+0x60],eax
   140007ece:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007ed2:	mov    DWORD PTR [rdi+0x64],eax
   140007ed5:	mov    rcx,QWORD PTR [rbp+0x28]
   140007ed9:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007edd:	add    rdx,0x6
   140007ee1:	add    rdx,rdx
   140007ee4:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007ee7:	mov    DWORD PTR [rdi+0x70],eax
   140007eea:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007eee:	mov    DWORD PTR [rdi+0x74],eax
   140007ef1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007ef5:	mov    DWORD PTR [rdi+0x78],eax
   140007ef8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007efc:	mov    DWORD PTR [rdi+0x7c],eax
   140007eff:	jmp    0x1400052d9
   140007f04:	mov    rdx,QWORD PTR [rbp+0x8]
   140007f08:	mov    ecx,0x80
   140007f0d:	call   0x140004140
   140007f12:	mov    r11,rax
   140007f15:	test   rax,rax
   140007f18:	je     0x140007f4c
   140007f1a:	mov    ecx,DWORD PTR [rbp+0x10]
   140007f1d:	mov    rdi,QWORD PTR [rbp+0x18]
   140007f21:	lea    eax,[rcx+0x6]
   140007f24:	movsxd r9,eax
   140007f27:	lea    eax,[rcx+0x3]
   140007f2a:	mov    r9,QWORD PTR [rdi+r9*8]
   140007f2e:	movsxd r8,eax
   140007f31:	lea    eax,[rcx+0x1]
   140007f34:	mov    r8,QWORD PTR [rdi+r8*8]
   140007f38:	movsxd rdx,eax
   140007f3b:	mov    rcx,r11
   140007f3e:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140007f42:	call   0x140002980
   140007f47:	mov    rdi,rax
   140007f4a:	jmp    0x140007f4f
   140007f4c:	mov    rdi,r12
   140007f4f:	mov    rcx,QWORD PTR [rbp+0x28]
   140007f53:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007f57:	add    rdx,rdx
   140007f5a:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007f5d:	mov    DWORD PTR [rdi+0x1c],eax
   140007f60:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007f64:	mov    DWORD PTR [rdi+0x20],eax
   140007f67:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007f6b:	mov    DWORD PTR [rdi+0x24],eax
   140007f6e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007f72:	mov    DWORD PTR [rdi+0x28],eax
   140007f75:	mov    rcx,QWORD PTR [rbp+0x28]
   140007f79:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007f7d:	add    rdx,0x2
   140007f81:	add    rdx,rdx
   140007f84:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007f87:	mov    DWORD PTR [rdi+0x2c],eax
   140007f8a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007f8e:	mov    DWORD PTR [rdi+0x30],eax
   140007f91:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007f95:	mov    DWORD PTR [rdi+0x34],eax
   140007f98:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007f9c:	mov    DWORD PTR [rdi+0x38],eax
   140007f9f:	mov    rcx,QWORD PTR [rbp+0x28]
   140007fa3:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007fa7:	add    rdx,0x4
   140007fab:	add    rdx,rdx
   140007fae:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007fb1:	mov    DWORD PTR [rdi+0x48],eax
   140007fb4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007fb8:	mov    DWORD PTR [rdi+0x4c],eax
   140007fbb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007fbf:	mov    DWORD PTR [rdi+0x50],eax
   140007fc2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007fc6:	mov    DWORD PTR [rdi+0x54],eax
   140007fc9:	mov    rcx,QWORD PTR [rbp+0x28]
   140007fcd:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007fd1:	add    rdx,0x5
   140007fd5:	add    rdx,rdx
   140007fd8:	mov    eax,DWORD PTR [rcx+rdx*8]
   140007fdb:	mov    DWORD PTR [rdi+0x58],eax
   140007fde:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140007fe2:	mov    DWORD PTR [rdi+0x5c],eax
   140007fe5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140007fe9:	mov    DWORD PTR [rdi+0x60],eax
   140007fec:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140007ff0:	mov    DWORD PTR [rdi+0x64],eax
   140007ff3:	mov    rcx,QWORD PTR [rbp+0x28]
   140007ff7:	movsxd rdx,DWORD PTR [rbp+0x10]
   140007ffb:	add    rdx,0x7
   140007fff:	add    rdx,rdx
   140008002:	mov    eax,DWORD PTR [rcx+rdx*8]
   140008005:	mov    DWORD PTR [rdi+0x70],eax
   140008008:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000800c:	mov    DWORD PTR [rdi+0x74],eax
   14000800f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140008013:	mov    DWORD PTR [rdi+0x78],eax
   140008016:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000801a:	mov    DWORD PTR [rdi+0x7c],eax
   14000801d:	jmp    0x1400052d9
   140008022:	mov    rdx,QWORD PTR [rbp+0x8]
   140008026:	mov    ecx,0x30
   14000802b:	call   0x140004140
   140008030:	mov    rdi,rax
   140008033:	test   rax,rax
   140008036:	je     0x1400052d6
   14000803c:	mov    rax,QWORD PTR [rbp+0x18]
   140008040:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008044:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008048:	lea    rax,[rip+0xd909]        # 0x140015958
   14000804f:	mov    QWORD PTR [rdi],rax
   140008052:	mov    QWORD PTR [rdi+0x10],rdx
   140008056:	mov    QWORD PTR [rdi+0x18],rdi
   14000805a:	mov    DWORD PTR [rdi+0x20],r12d
   14000805e:	mov    DWORD PTR [rdi+0x24],r12d
   140008062:	mov    DWORD PTR [rdi+0x28],r12d
   140008066:	mov    DWORD PTR [rdi+0x2c],r12d
   14000806a:	mov    DWORD PTR [rdi+0x8],0x33
   140008071:	jmp    0x1400052d9
   140008076:	mov    rdx,QWORD PTR [rbp+0x8]
   14000807a:	mov    ecx,0x30
   14000807f:	call   0x140004140
   140008084:	mov    rdi,rax
   140008087:	test   rax,rax
   14000808a:	je     0x14000586d
   140008090:	mov    rax,QWORD PTR [rbp+0x18]
   140008094:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008098:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14000809d:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400080a1:	lea    rax,[rip+0xd8b0]        # 0x140015958
   1400080a8:	mov    QWORD PTR [rdi],rax
   1400080ab:	mov    QWORD PTR [rdi+0x10],rdx
   1400080af:	mov    DWORD PTR [rdi+0x20],r12d
   1400080b3:	mov    DWORD PTR [rdi+0x24],r12d
   1400080b7:	mov    DWORD PTR [rdi+0x28],r12d
   1400080bb:	mov    DWORD PTR [rdi+0x2c],r12d
   1400080bf:	mov    DWORD PTR [rdi+0x8],0x33
   1400080c6:	mov    rax,QWORD PTR [rcx+0x18]
   1400080ca:	mov    QWORD PTR [rdi+0x18],rax
   1400080ce:	mov    QWORD PTR [rcx+0x18],rdi
   1400080d2:	jmp    0x140005870
   1400080d7:	mov    rdx,QWORD PTR [rbp+0x8]
   1400080db:	mov    ecx,0x30
   1400080e0:	call   0x140004140
   1400080e5:	mov    rdi,rax
   1400080e8:	test   rax,rax
   1400080eb:	je     0x140007091
   1400080f1:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400080f5:	lea    rcx,[rdi+0x20]
   1400080f9:	shl    rdx,0x4
   1400080fd:	add    rdx,QWORD PTR [rbp+0x30]
   140008101:	mov    DWORD PTR [rax+0x10],r12d
   140008105:	mov    DWORD PTR [rax+0x14],r12d
   140008109:	mov    DWORD PTR [rax+0x18],r12d
   14000810d:	mov    DWORD PTR [rax+0x1c],r12d
   140008111:	mov    DWORD PTR [rax+0x8],0x35
   140008118:	lea    rax,[rip+0xd929]        # 0x140015a48
   14000811f:	mov    QWORD PTR [rdi],rax
   140008122:	call   QWORD PTR [rip+0xd080]        # 0x1400151a8
   140008128:	mov    DWORD PTR [rdi+0x8],0x22
   14000812f:	jmp    0x140007094
   140008134:	mov    rdx,QWORD PTR [rbp+0x8]
   140008138:	mov    ecx,0x30
   14000813d:	call   0x140004140
   140008142:	mov    rdi,rax
   140008145:	test   rax,rax
   140008148:	je     0x140007091
   14000814e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140008152:	lea    rcx,[rdi+0x20]
   140008156:	shl    rdx,0x4
   14000815a:	add    rdx,QWORD PTR [rbp+0x30]
   14000815e:	mov    DWORD PTR [rax+0x10],r12d
   140008162:	mov    DWORD PTR [rax+0x14],r12d
   140008166:	mov    DWORD PTR [rax+0x18],r12d
   14000816a:	mov    DWORD PTR [rax+0x1c],r12d
   14000816e:	mov    DWORD PTR [rax+0x8],0x35
   140008175:	lea    rax,[rip+0xd91c]        # 0x140015a98
   14000817c:	mov    QWORD PTR [rdi],rax
   14000817f:	call   QWORD PTR [rip+0xd023]        # 0x1400151a8
   140008185:	mov    DWORD PTR [rdi+0x8],0x3e
   14000818c:	jmp    0x140007094
   140008191:	mov    rdx,QWORD PTR [rbp+0x8]
   140008195:	mov    ecx,0x28
   14000819a:	call   0x140004140
   14000819f:	mov    rdi,rax
   1400081a2:	test   rax,rax
   1400081a5:	je     0x140007091
   1400081ab:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400081af:	mov    rax,QWORD PTR [rbp+0x18]
   1400081b3:	movsd  xmm0,QWORD PTR [rax+rcx*8]
   1400081b8:	mov    DWORD PTR [rdi+0x10],r12d
   1400081bc:	mov    DWORD PTR [rdi+0x14],r12d
   1400081c0:	mov    DWORD PTR [rdi+0x18],r12d
   1400081c4:	mov    DWORD PTR [rdi+0x1c],r12d
   1400081c8:	lea    rax,[rip+0xd919]        # 0x140015ae8
   1400081cf:	movsd  QWORD PTR [rdi+0x20],xmm0
   1400081d4:	mov    QWORD PTR [rdi],rax
   1400081d7:	mov    DWORD PTR [rdi+0x8],0x2c
   1400081de:	jmp    0x140007094
   1400081e3:	mov    rdx,QWORD PTR [rbp+0x8]
   1400081e7:	mov    ecx,0x40
   1400081ec:	call   0x140004140
   1400081f1:	mov    r11,rax
   1400081f4:	test   rax,rax
   1400081f7:	je     0x140008246
   1400081f9:	mov    rax,QWORD PTR [rbp+0x18]
   1400081fd:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008201:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008206:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000820a:	lea    rax,[rip+0xd927]        # 0x140015b38
   140008211:	mov    QWORD PTR [r11],rax
   140008214:	mov    QWORD PTR [r11+0x10],rdx
   140008218:	mov    QWORD PTR [r11+0x18],rdi
   14000821c:	mov    DWORD PTR [r11+0x20],r12d
   140008220:	mov    DWORD PTR [r11+0x24],r12d
   140008224:	mov    DWORD PTR [r11+0x28],r12d
   140008228:	mov    DWORD PTR [r11+0x2c],r12d
   14000822c:	mov    DWORD PTR [r11+0x30],r12d
   140008230:	mov    DWORD PTR [r11+0x34],r12d
   140008234:	mov    DWORD PTR [r11+0x38],r12d
   140008238:	mov    DWORD PTR [r11+0x3c],r12d
   14000823c:	mov    DWORD PTR [r11+0x8],0x3
   140008244:	jmp    0x140008249
   140008246:	mov    r11,r12
   140008249:	mov    rcx,QWORD PTR [rbp+0x28]
   14000824d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140008251:	lea    r9,[rip+0xffffffffffff7da8]        # 0x140000000
   140008258:	inc    rdx
   14000825b:	add    rdx,rdx
   14000825e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140008261:	mov    DWORD PTR [r11+0x20],eax
   140008265:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140008269:	mov    DWORD PTR [r11+0x24],eax
   14000826d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140008271:	mov    DWORD PTR [r11+0x28],eax
   140008275:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140008279:	mov    DWORD PTR [r11+0x2c],eax
   14000827d:	mov    rcx,QWORD PTR [rbp+0x28]
   140008281:	movsxd rdx,DWORD PTR [rbp+0x10]
   140008285:	add    rdx,0x3
   140008289:	add    rdx,rdx
   14000828c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000828f:	mov    DWORD PTR [r11+0x30],eax
   140008293:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140008297:	mov    DWORD PTR [r11+0x34],eax
   14000829b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000829f:	mov    DWORD PTR [r11+0x38],eax
   1400082a3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400082a7:	mov    DWORD PTR [r11+0x3c],eax
   1400082ab:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400082af:	mov    rax,QWORD PTR [rbp+0x18]
   1400082b3:	mov    QWORD PTR [rax+rcx*8],r11
   1400082b7:	jmp    0x14000ae40
   1400082bc:	mov    rdx,QWORD PTR [rbp+0x8]
   1400082c0:	mov    ecx,0x48
   1400082c5:	call   0x140004140
   1400082ca:	mov    rdi,rax
   1400082cd:	test   rax,rax
   1400082d0:	je     0x1400082f9
   1400082d2:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400082d6:	mov    rdx,QWORD PTR [rbp+0x18]
   1400082da:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400082de:	lea    eax,[rcx+0x2]
   1400082e1:	mov    rcx,rdi
   1400082e4:	movsxd r8,eax
   1400082e7:	shl    r8,0x4
   1400082eb:	add    r8,QWORD PTR [rbp+0x30]
   1400082ef:	call   0x140002aa0
   1400082f4:	mov    rdi,rax
   1400082f7:	jmp    0x1400082fc
   1400082f9:	mov    rdi,r12
   1400082fc:	mov    rcx,QWORD PTR [rbp+0x28]
   140008300:	movsxd rdx,DWORD PTR [rbp+0x10]
   140008304:	inc    rdx
   140008307:	add    rdx,rdx
   14000830a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000830d:	mov    DWORD PTR [rdi+0x28],eax
   140008310:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140008314:	mov    DWORD PTR [rdi+0x2c],eax
   140008317:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000831b:	mov    DWORD PTR [rdi+0x30],eax
   14000831e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140008322:	mov    DWORD PTR [rdi+0x34],eax
   140008325:	mov    rcx,QWORD PTR [rbp+0x28]
   140008329:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000832d:	add    rdx,0x2
   140008331:	add    rdx,rdx
   140008334:	mov    eax,DWORD PTR [rcx+rdx*8]
   140008337:	mov    DWORD PTR [rdi+0x38],eax
   14000833a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000833e:	mov    DWORD PTR [rdi+0x3c],eax
   140008341:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140008345:	mov    DWORD PTR [rdi+0x40],eax
   140008348:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000834c:	mov    DWORD PTR [rdi+0x44],eax
   14000834f:	jmp    0x1400052d9
   140008354:	mov    rdx,QWORD PTR [rbp+0x8]
   140008358:	mov    ecx,0x50
   14000835d:	call   0x140004140
   140008362:	mov    r11,rax
   140008365:	test   rax,rax
   140008368:	je     0x1400077c6
   14000836e:	mov    ecx,DWORD PTR [rbp+0x10]
   140008371:	mov    rdi,QWORD PTR [rbp+0x18]
   140008375:	lea    eax,[rcx+0x3]
   140008378:	movsxd r8,eax
   14000837b:	lea    eax,[rcx+0x1]
   14000837e:	mov    rcx,r11
   140008381:	mov    r8,QWORD PTR [rdi+r8*8]
   140008385:	movsxd rdx,eax
   140008388:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14000838c:	call   0x140002b00
   140008391:	mov    rdi,rax
   140008394:	jmp    0x1400077c9
   140008399:	mov    rdx,QWORD PTR [rbp+0x8]
   14000839d:	mov    ecx,0x28
   1400083a2:	call   0x140004140
   1400083a7:	mov    rdi,rax
   1400083aa:	test   rax,rax
   1400083ad:	je     0x14000724b
   1400083b3:	mov    rax,QWORD PTR [rbp+0x18]
   1400083b7:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400083bb:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   1400083c0:	lea    rax,[rip+0xd861]        # 0x140015c28
   1400083c7:	mov    QWORD PTR [rdi],rax
   1400083ca:	mov    QWORD PTR [rdi+0x10],rdx
   1400083ce:	mov    DWORD PTR [rdi+0x18],r12d
   1400083d2:	mov    DWORD PTR [rdi+0x1c],r12d
   1400083d6:	mov    DWORD PTR [rdi+0x20],r12d
   1400083da:	mov    DWORD PTR [rdi+0x24],r12d
   1400083de:	mov    DWORD PTR [rdi+0x8],0x27
   1400083e5:	jmp    0x14000724e
   1400083ea:	mov    rdx,QWORD PTR [rbp+0x8]
   1400083ee:	mov    ecx,0x40
   1400083f3:	call   0x140004140
   1400083f8:	mov    r11,rax
   1400083fb:	test   rax,rax
   1400083fe:	je     0x140008246
   140008404:	mov    rax,QWORD PTR [rbp+0x18]
   140008408:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000840c:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008411:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008415:	lea    rax,[rip+0xd85c]        # 0x140015c78
   14000841c:	mov    QWORD PTR [r11],rax
   14000841f:	mov    QWORD PTR [r11+0x10],rdx
   140008423:	mov    QWORD PTR [r11+0x18],rdi
   140008427:	mov    DWORD PTR [r11+0x20],r12d
   14000842b:	mov    DWORD PTR [r11+0x24],r12d
   14000842f:	mov    DWORD PTR [r11+0x28],r12d
   140008433:	mov    DWORD PTR [r11+0x2c],r12d
   140008437:	mov    DWORD PTR [r11+0x30],r12d
   14000843b:	mov    DWORD PTR [r11+0x34],r12d
   14000843f:	mov    DWORD PTR [r11+0x38],r12d
   140008443:	mov    DWORD PTR [r11+0x3c],r12d
   140008447:	mov    DWORD PTR [r11+0x8],0x7
   14000844f:	jmp    0x140008249
   140008454:	mov    rdx,QWORD PTR [rbp+0x8]
   140008458:	mov    ecx,0x30
   14000845d:	call   0x140004140
   140008462:	mov    rdi,rax
   140008465:	test   rax,rax
   140008468:	je     0x1400052d6
   14000846e:	mov    rax,QWORD PTR [rbp+0x18]
   140008472:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008476:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000847a:	lea    rax,[rip+0xd847]        # 0x140015cc8
   140008481:	mov    QWORD PTR [rdi],rax
   140008484:	mov    QWORD PTR [rdi+0x10],rdx
   140008488:	mov    QWORD PTR [rdi+0x18],rdi
   14000848c:	mov    DWORD PTR [rdi+0x20],r12d
   140008490:	mov    DWORD PTR [rdi+0x24],r12d
   140008494:	mov    DWORD PTR [rdi+0x28],r12d
   140008498:	mov    DWORD PTR [rdi+0x2c],r12d
   14000849c:	mov    DWORD PTR [rdi+0x8],0x1
   1400084a3:	jmp    0x1400052d9
   1400084a8:	mov    rdx,QWORD PTR [rbp+0x8]
   1400084ac:	mov    ecx,0x30
   1400084b1:	call   0x140004140
   1400084b6:	mov    rdi,rax
   1400084b9:	test   rax,rax
   1400084bc:	je     0x14000586d
   1400084c2:	mov    rax,QWORD PTR [rbp+0x18]
   1400084c6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400084ca:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   1400084cf:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400084d3:	lea    rax,[rip+0xd7ee]        # 0x140015cc8
   1400084da:	mov    QWORD PTR [rdi],rax
   1400084dd:	mov    QWORD PTR [rdi+0x10],rdx
   1400084e1:	mov    DWORD PTR [rdi+0x20],r12d
   1400084e5:	mov    DWORD PTR [rdi+0x24],r12d
   1400084e9:	mov    DWORD PTR [rdi+0x28],r12d
   1400084ed:	mov    DWORD PTR [rdi+0x2c],r12d
   1400084f1:	mov    DWORD PTR [rdi+0x8],0x1
   1400084f8:	mov    rax,QWORD PTR [rcx+0x18]
   1400084fc:	mov    QWORD PTR [rdi+0x18],rax
   140008500:	mov    QWORD PTR [rcx+0x18],rdi
   140008504:	jmp    0x140005870
   140008509:	mov    rdx,QWORD PTR [rbp+0x8]
   14000850d:	mov    ecx,0x28
   140008512:	call   0x140004140
   140008517:	mov    rdi,rax
   14000851a:	test   rax,rax
   14000851d:	je     0x140007d5a
   140008523:	mov    rax,QWORD PTR [rbp+0x18]
   140008527:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000852b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000852f:	lea    rax,[rip+0xd7e2]        # 0x140015d18
   140008536:	mov    QWORD PTR [rdi],rax
   140008539:	mov    QWORD PTR [rdi+0x10],rdx
   14000853d:	mov    DWORD PTR [rdi+0x18],r12d
   140008541:	mov    DWORD PTR [rdi+0x1c],r12d
   140008545:	mov    DWORD PTR [rdi+0x20],r12d
   140008549:	mov    DWORD PTR [rdi+0x24],r12d
   14000854d:	mov    DWORD PTR [rdi+0x8],0x2f
   140008554:	jmp    0x140007d5d
   140008559:	mov    rdx,QWORD PTR [rbp+0x8]
   14000855d:	mov    ecx,0x28
   140008562:	call   0x140004140
   140008567:	mov    rdi,rax
   14000856a:	test   rax,rax
   14000856d:	je     0x140007d5a
   140008573:	mov    rax,QWORD PTR [rbp+0x18]
   140008577:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000857b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000857f:	lea    rax,[rip+0xd7e2]        # 0x140015d68
   140008586:	mov    QWORD PTR [rdi],rax
   140008589:	mov    QWORD PTR [rdi+0x10],rdx
   14000858d:	mov    DWORD PTR [rdi+0x18],r12d
   140008591:	mov    DWORD PTR [rdi+0x1c],r12d
   140008595:	mov    DWORD PTR [rdi+0x20],r12d
   140008599:	mov    DWORD PTR [rdi+0x24],r12d
   14000859d:	mov    DWORD PTR [rdi+0x8],0x2e
   1400085a4:	jmp    0x140007d5d
   1400085a9:	mov    rdx,QWORD PTR [rbp+0x8]
   1400085ad:	mov    ecx,0x28
   1400085b2:	call   0x140004140
   1400085b7:	mov    rdi,rax
   1400085ba:	test   rax,rax
   1400085bd:	je     0x14000724b
   1400085c3:	mov    rax,QWORD PTR [rbp+0x18]
   1400085c7:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400085cb:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   1400085d0:	lea    rax,[rip+0xd7e1]        # 0x140015db8
   1400085d7:	mov    QWORD PTR [rdi],rax
   1400085da:	mov    QWORD PTR [rdi+0x10],rdx
   1400085de:	mov    DWORD PTR [rdi+0x18],r12d
   1400085e2:	mov    DWORD PTR [rdi+0x1c],r12d
   1400085e6:	mov    DWORD PTR [rdi+0x20],r12d
   1400085ea:	mov    DWORD PTR [rdi+0x24],r12d
   1400085ee:	mov    DWORD PTR [rdi+0x8],0x10
   1400085f5:	jmp    0x14000724e
   1400085fa:	mov    rdx,QWORD PTR [rbp+0x8]
   1400085fe:	mov    ecx,0x28
   140008603:	call   0x140004140
   140008608:	mov    rdi,rax
   14000860b:	test   rax,rax
   14000860e:	je     0x14000724b
   140008614:	mov    rax,QWORD PTR [rbp+0x18]
   140008618:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000861c:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140008621:	lea    rax,[rip+0xd7e0]        # 0x140015e08
   140008628:	mov    QWORD PTR [rdi],rax
   14000862b:	mov    QWORD PTR [rdi+0x10],rdx
   14000862f:	mov    DWORD PTR [rdi+0x18],r12d
   140008633:	mov    DWORD PTR [rdi+0x1c],r12d
   140008637:	mov    DWORD PTR [rdi+0x20],r12d
   14000863b:	mov    DWORD PTR [rdi+0x24],r12d
   14000863f:	mov    DWORD PTR [rdi+0x8],0x4b
   140008646:	jmp    0x14000724e
   14000864b:	mov    rdx,QWORD PTR [rbp+0x8]
   14000864f:	mov    ecx,0x28
   140008654:	call   0x140004140
   140008659:	mov    rdi,rax
   14000865c:	test   rax,rax
   14000865f:	je     0x14000724b
   140008665:	mov    rax,QWORD PTR [rbp+0x18]
   140008669:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000866d:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140008672:	lea    rax,[rip+0xd7df]        # 0x140015e58
   140008679:	mov    QWORD PTR [rdi],rax
   14000867c:	mov    QWORD PTR [rdi+0x10],rdx
   140008680:	mov    DWORD PTR [rdi+0x18],r12d
   140008684:	mov    DWORD PTR [rdi+0x1c],r12d
   140008688:	mov    DWORD PTR [rdi+0x20],r12d
   14000868c:	mov    DWORD PTR [rdi+0x24],r12d
   140008690:	mov    DWORD PTR [rdi+0x8],0x45
   140008697:	jmp    0x14000724e
   14000869c:	mov    rdx,QWORD PTR [rbp+0x8]
   1400086a0:	mov    ecx,0x28
   1400086a5:	call   0x140004140
   1400086aa:	mov    rdi,rax
   1400086ad:	test   rax,rax
   1400086b0:	je     0x14000724b
   1400086b6:	mov    rax,QWORD PTR [rbp+0x18]
   1400086ba:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400086be:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   1400086c3:	lea    rax,[rip+0xd7de]        # 0x140015ea8
   1400086ca:	mov    QWORD PTR [rdi],rax
   1400086cd:	mov    QWORD PTR [rdi+0x10],rdx
   1400086d1:	mov    DWORD PTR [rdi+0x18],r12d
   1400086d5:	mov    DWORD PTR [rdi+0x1c],r12d
   1400086d9:	mov    DWORD PTR [rdi+0x20],r12d
   1400086dd:	mov    DWORD PTR [rdi+0x24],r12d
   1400086e1:	mov    DWORD PTR [rdi+0x8],0x31
   1400086e8:	jmp    0x14000724e
   1400086ed:	mov    rdx,QWORD PTR [rbp+0x8]
   1400086f1:	mov    ecx,0x28
   1400086f6:	call   0x140004140
   1400086fb:	mov    rdi,rax
   1400086fe:	test   rax,rax
   140008701:	je     0x14000724b
   140008707:	mov    rax,QWORD PTR [rbp+0x18]
   14000870b:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000870f:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140008714:	lea    rax,[rip+0xd7dd]        # 0x140015ef8
   14000871b:	mov    QWORD PTR [rdi],rax
   14000871e:	mov    QWORD PTR [rdi+0x10],rdx
   140008722:	mov    DWORD PTR [rdi+0x18],r12d
   140008726:	mov    DWORD PTR [rdi+0x1c],r12d
   14000872a:	mov    DWORD PTR [rdi+0x20],r12d
   14000872e:	mov    DWORD PTR [rdi+0x24],r12d
   140008732:	mov    DWORD PTR [rdi+0x8],0x30
   140008739:	jmp    0x14000724e
   14000873e:	mov    rdx,QWORD PTR [rbp+0x8]
   140008742:	mov    ecx,0x28
   140008747:	call   0x140004140
   14000874c:	mov    rdi,rax
   14000874f:	test   rax,rax
   140008752:	je     0x14000724b
   140008758:	mov    rax,QWORD PTR [rbp+0x18]
   14000875c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008760:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140008765:	lea    rax,[rip+0xd7dc]        # 0x140015f48
   14000876c:	mov    QWORD PTR [rdi],rax
   14000876f:	mov    QWORD PTR [rdi+0x10],rdx
   140008773:	mov    DWORD PTR [rdi+0x18],r12d
   140008777:	mov    DWORD PTR [rdi+0x1c],r12d
   14000877b:	mov    DWORD PTR [rdi+0x20],r12d
   14000877f:	mov    DWORD PTR [rdi+0x24],r12d
   140008783:	mov    DWORD PTR [rdi+0x8],0x47
   14000878a:	jmp    0x14000724e
   14000878f:	mov    rdx,QWORD PTR [rbp+0x8]
   140008793:	mov    ecx,0x28
   140008798:	call   0x140004140
   14000879d:	mov    rdi,rax
   1400087a0:	test   rax,rax
   1400087a3:	je     0x14000724b
   1400087a9:	mov    rax,QWORD PTR [rbp+0x18]
   1400087ad:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400087b1:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   1400087b6:	lea    rax,[rip+0xd7db]        # 0x140015f98
   1400087bd:	mov    QWORD PTR [rdi],rax
   1400087c0:	mov    QWORD PTR [rdi+0x10],rdx
   1400087c4:	mov    DWORD PTR [rdi+0x18],r12d
   1400087c8:	mov    DWORD PTR [rdi+0x1c],r12d
   1400087cc:	mov    DWORD PTR [rdi+0x20],r12d
   1400087d0:	mov    DWORD PTR [rdi+0x24],r12d
   1400087d4:	mov    DWORD PTR [rdi+0x8],0x46
   1400087db:	jmp    0x14000724e
   1400087e0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400087e4:	mov    ecx,0x28
   1400087e9:	call   0x140004140
   1400087ee:	mov    rdi,rax
   1400087f1:	test   rax,rax
   1400087f4:	je     0x14000724b
   1400087fa:	mov    rax,QWORD PTR [rbp+0x18]
   1400087fe:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008802:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140008807:	lea    rax,[rip+0xd7da]        # 0x140015fe8
   14000880e:	mov    QWORD PTR [rdi],rax
   140008811:	mov    QWORD PTR [rdi+0x10],rdx
   140008815:	mov    DWORD PTR [rdi+0x18],r12d
   140008819:	mov    DWORD PTR [rdi+0x1c],r12d
   14000881d:	mov    DWORD PTR [rdi+0x20],r12d
   140008821:	mov    DWORD PTR [rdi+0x24],r12d
   140008825:	mov    DWORD PTR [rdi+0x8],0x42
   14000882c:	jmp    0x14000724e
   140008831:	mov    rdx,QWORD PTR [rbp+0x8]
   140008835:	mov    ecx,0x28
   14000883a:	call   0x140004140
   14000883f:	mov    rdi,rax
   140008842:	test   rax,rax
   140008845:	je     0x14000724b
   14000884b:	mov    rax,QWORD PTR [rbp+0x18]
   14000884f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008853:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140008858:	lea    rax,[rip+0xd7d9]        # 0x140016038
   14000885f:	mov    QWORD PTR [rdi],rax
   140008862:	mov    QWORD PTR [rdi+0x10],rdx
   140008866:	mov    DWORD PTR [rdi+0x18],r12d
   14000886a:	mov    DWORD PTR [rdi+0x1c],r12d
   14000886e:	mov    DWORD PTR [rdi+0x20],r12d
   140008872:	mov    DWORD PTR [rdi+0x24],r12d
   140008876:	mov    DWORD PTR [rdi+0x8],0x29
   14000887d:	jmp    0x14000724e
   140008882:	mov    rdx,QWORD PTR [rbp+0x8]
   140008886:	mov    ecx,0x38
   14000888b:	call   0x140004140
   140008890:	mov    r11,rax
   140008893:	test   rax,rax
   140008896:	je     0x140005bf7
   14000889c:	mov    rax,QWORD PTR [rbp+0x18]
   1400088a0:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400088a4:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400088a9:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400088ad:	lea    rax,[rip+0xd7d4]        # 0x140016088
   1400088b4:	mov    QWORD PTR [r11],rax
   1400088b7:	mov    QWORD PTR [r11+0x10],rdx
   1400088bb:	mov    DWORD PTR [r11+0x18],0x16
   1400088c3:	mov    QWORD PTR [r11+0x20],rdi
   1400088c7:	mov    DWORD PTR [r11+0x28],r12d
   1400088cb:	mov    DWORD PTR [r11+0x2c],r12d
   1400088cf:	mov    DWORD PTR [r11+0x30],r12d
   1400088d3:	mov    DWORD PTR [r11+0x34],r12d
   1400088d7:	mov    DWORD PTR [r11+0x8],0x4
   1400088df:	jmp    0x140005bfa
   1400088e4:	mov    rdx,QWORD PTR [rbp+0x8]
   1400088e8:	mov    ecx,0x38
   1400088ed:	call   0x140004140
   1400088f2:	mov    r11,rax
   1400088f5:	test   rax,rax
   1400088f8:	je     0x140005bf7
   1400088fe:	mov    rax,QWORD PTR [rbp+0x18]
   140008902:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008906:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14000890b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000890f:	lea    rax,[rip+0xd772]        # 0x140016088
   140008916:	mov    QWORD PTR [r11],rax
   140008919:	mov    QWORD PTR [r11+0x10],rdx
   14000891d:	mov    DWORD PTR [r11+0x18],0x8
   140008925:	mov    QWORD PTR [r11+0x20],rdi
   140008929:	mov    DWORD PTR [r11+0x28],r12d
   14000892d:	mov    DWORD PTR [r11+0x2c],r12d
   140008931:	mov    DWORD PTR [r11+0x30],r12d
   140008935:	mov    DWORD PTR [r11+0x34],r12d
   140008939:	mov    DWORD PTR [r11+0x8],0x4
   140008941:	jmp    0x140005bfa
   140008946:	mov    rdx,QWORD PTR [rbp+0x8]
   14000894a:	mov    ecx,0x38
   14000894f:	call   0x140004140
   140008954:	mov    r11,rax
   140008957:	test   rax,rax
   14000895a:	je     0x140005bf7
   140008960:	mov    rax,QWORD PTR [rbp+0x18]
   140008964:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008968:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14000896d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008971:	lea    rax,[rip+0xd710]        # 0x140016088
   140008978:	mov    QWORD PTR [r11],rax
   14000897b:	mov    QWORD PTR [r11+0x10],rdx
   14000897f:	mov    DWORD PTR [r11+0x18],0x14
   140008987:	mov    QWORD PTR [r11+0x20],rdi
   14000898b:	mov    DWORD PTR [r11+0x28],r12d
   14000898f:	mov    DWORD PTR [r11+0x2c],r12d
   140008993:	mov    DWORD PTR [r11+0x30],r12d
   140008997:	mov    DWORD PTR [r11+0x34],r12d
   14000899b:	mov    DWORD PTR [r11+0x8],0x4
   1400089a3:	jmp    0x140005bfa
   1400089a8:	mov    rdx,QWORD PTR [rbp+0x8]
   1400089ac:	mov    ecx,0x38
   1400089b1:	call   0x140004140
   1400089b6:	mov    r11,rax
   1400089b9:	test   rax,rax
   1400089bc:	je     0x140005bf7
   1400089c2:	mov    rax,QWORD PTR [rbp+0x18]
   1400089c6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400089ca:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400089cf:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400089d3:	lea    rax,[rip+0xd6ae]        # 0x140016088
   1400089da:	mov    QWORD PTR [r11],rax
   1400089dd:	mov    QWORD PTR [r11+0x10],rdx
   1400089e1:	mov    DWORD PTR [r11+0x18],r12d
   1400089e5:	mov    QWORD PTR [r11+0x20],rdi
   1400089e9:	mov    DWORD PTR [r11+0x28],r12d
   1400089ed:	mov    DWORD PTR [r11+0x2c],r12d
   1400089f1:	mov    DWORD PTR [r11+0x30],r12d
   1400089f5:	mov    DWORD PTR [r11+0x34],r12d
   1400089f9:	mov    DWORD PTR [r11+0x8],0x4
   140008a01:	jmp    0x140005bfa
   140008a06:	mov    rdx,QWORD PTR [rbp+0x8]
   140008a0a:	mov    ecx,0x38
   140008a0f:	call   0x140004140
   140008a14:	mov    r11,rax
   140008a17:	test   rax,rax
   140008a1a:	je     0x140005bf7
   140008a20:	mov    rax,QWORD PTR [rbp+0x18]
   140008a24:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008a28:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008a2d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008a31:	lea    rax,[rip+0xd650]        # 0x140016088
   140008a38:	mov    QWORD PTR [r11],rax
   140008a3b:	mov    QWORD PTR [r11+0x10],rdx
   140008a3f:	mov    DWORD PTR [r11+0x18],0x1f
   140008a47:	mov    QWORD PTR [r11+0x20],rdi
   140008a4b:	mov    DWORD PTR [r11+0x28],r12d
   140008a4f:	mov    DWORD PTR [r11+0x2c],r12d
   140008a53:	mov    DWORD PTR [r11+0x30],r12d
   140008a57:	mov    DWORD PTR [r11+0x34],r12d
   140008a5b:	mov    DWORD PTR [r11+0x8],0x4
   140008a63:	jmp    0x140005bfa
   140008a68:	mov    rdx,QWORD PTR [rbp+0x8]
   140008a6c:	mov    ecx,0x38
   140008a71:	call   0x140004140
   140008a76:	mov    r11,rax
   140008a79:	test   rax,rax
   140008a7c:	je     0x140005bf7
   140008a82:	mov    rax,QWORD PTR [rbp+0x18]
   140008a86:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008a8a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008a8f:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008a93:	lea    rax,[rip+0xd5ee]        # 0x140016088
   140008a9a:	mov    QWORD PTR [r11],rax
   140008a9d:	mov    QWORD PTR [r11+0x10],rdx
   140008aa1:	mov    DWORD PTR [r11+0x18],0x11
   140008aa9:	mov    QWORD PTR [r11+0x20],rdi
   140008aad:	mov    DWORD PTR [r11+0x28],r12d
   140008ab1:	mov    DWORD PTR [r11+0x2c],r12d
   140008ab5:	mov    DWORD PTR [r11+0x30],r12d
   140008ab9:	mov    DWORD PTR [r11+0x34],r12d
   140008abd:	mov    DWORD PTR [r11+0x8],0x4
   140008ac5:	jmp    0x140005bfa
   140008aca:	mov    rdx,QWORD PTR [rbp+0x8]
   140008ace:	mov    ecx,0x38
   140008ad3:	call   0x140004140
   140008ad8:	mov    r11,rax
   140008adb:	test   rax,rax
   140008ade:	je     0x140005bf7
   140008ae4:	mov    rax,QWORD PTR [rbp+0x18]
   140008ae8:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008aec:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008af1:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008af5:	lea    rax,[rip+0xd58c]        # 0x140016088
   140008afc:	mov    QWORD PTR [r11],rax
   140008aff:	mov    QWORD PTR [r11+0x10],rdx
   140008b03:	mov    DWORD PTR [r11+0x18],0x1b
   140008b0b:	mov    QWORD PTR [r11+0x20],rdi
   140008b0f:	mov    DWORD PTR [r11+0x28],r12d
   140008b13:	mov    DWORD PTR [r11+0x2c],r12d
   140008b17:	mov    DWORD PTR [r11+0x30],r12d
   140008b1b:	mov    DWORD PTR [r11+0x34],r12d
   140008b1f:	mov    DWORD PTR [r11+0x8],0x4
   140008b27:	jmp    0x140005bfa
   140008b2c:	mov    rdx,QWORD PTR [rbp+0x8]
   140008b30:	mov    ecx,0x38
   140008b35:	call   0x140004140
   140008b3a:	mov    r11,rax
   140008b3d:	test   rax,rax
   140008b40:	je     0x140005bf7
   140008b46:	mov    rax,QWORD PTR [rbp+0x18]
   140008b4a:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008b4e:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008b53:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008b57:	lea    rax,[rip+0xd52a]        # 0x140016088
   140008b5e:	mov    QWORD PTR [r11],rax
   140008b61:	mov    QWORD PTR [r11+0x10],rdx
   140008b65:	mov    DWORD PTR [r11+0x18],0x20
   140008b6d:	mov    QWORD PTR [r11+0x20],rdi
   140008b71:	mov    DWORD PTR [r11+0x28],r12d
   140008b75:	mov    DWORD PTR [r11+0x2c],r12d
   140008b79:	mov    DWORD PTR [r11+0x30],r12d
   140008b7d:	mov    DWORD PTR [r11+0x34],r12d
   140008b81:	mov    DWORD PTR [r11+0x8],0x4
   140008b89:	jmp    0x140005bfa
   140008b8e:	mov    rdx,QWORD PTR [rbp+0x8]
   140008b92:	mov    ecx,0x38
   140008b97:	call   0x140004140
   140008b9c:	mov    r11,rax
   140008b9f:	test   rax,rax
   140008ba2:	je     0x140005bf7
   140008ba8:	mov    rax,QWORD PTR [rbp+0x18]
   140008bac:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008bb0:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008bb5:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008bb9:	lea    rax,[rip+0xd4c8]        # 0x140016088
   140008bc0:	mov    QWORD PTR [r11],rax
   140008bc3:	mov    QWORD PTR [r11+0x10],rdx
   140008bc7:	mov    DWORD PTR [r11+0x18],0x13
   140008bcf:	mov    QWORD PTR [r11+0x20],rdi
   140008bd3:	mov    DWORD PTR [r11+0x28],r12d
   140008bd7:	mov    DWORD PTR [r11+0x2c],r12d
   140008bdb:	mov    DWORD PTR [r11+0x30],r12d
   140008bdf:	mov    DWORD PTR [r11+0x34],r12d
   140008be3:	mov    DWORD PTR [r11+0x8],0x4
   140008beb:	jmp    0x140005bfa
   140008bf0:	mov    rdx,QWORD PTR [rbp+0x8]
   140008bf4:	mov    ecx,0x38
   140008bf9:	call   0x140004140
   140008bfe:	mov    r11,rax
   140008c01:	test   rax,rax
   140008c04:	je     0x140005bf7
   140008c0a:	mov    rax,QWORD PTR [rbp+0x18]
   140008c0e:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008c12:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008c17:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008c1b:	lea    rax,[rip+0xd466]        # 0x140016088
   140008c22:	mov    QWORD PTR [r11],rax
   140008c25:	mov    QWORD PTR [r11+0x10],rdx
   140008c29:	mov    DWORD PTR [r11+0x18],0xc
   140008c31:	mov    QWORD PTR [r11+0x20],rdi
   140008c35:	mov    DWORD PTR [r11+0x28],r12d
   140008c39:	mov    DWORD PTR [r11+0x2c],r12d
   140008c3d:	mov    DWORD PTR [r11+0x30],r12d
   140008c41:	mov    DWORD PTR [r11+0x34],r12d
   140008c45:	mov    DWORD PTR [r11+0x8],0x4
   140008c4d:	jmp    0x140005bfa
   140008c52:	mov    rdx,QWORD PTR [rbp+0x8]
   140008c56:	mov    ecx,0x38
   140008c5b:	call   0x140004140
   140008c60:	mov    r11,rax
   140008c63:	test   rax,rax
   140008c66:	je     0x140005bf7
   140008c6c:	mov    rax,QWORD PTR [rbp+0x18]
   140008c70:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008c74:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008c79:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008c7d:	lea    rax,[rip+0xd404]        # 0x140016088
   140008c84:	mov    QWORD PTR [r11],rax
   140008c87:	mov    QWORD PTR [r11+0x10],rdx
   140008c8b:	mov    DWORD PTR [r11+0x18],0x10
   140008c93:	mov    QWORD PTR [r11+0x20],rdi
   140008c97:	mov    DWORD PTR [r11+0x28],r12d
   140008c9b:	mov    DWORD PTR [r11+0x2c],r12d
   140008c9f:	mov    DWORD PTR [r11+0x30],r12d
   140008ca3:	mov    DWORD PTR [r11+0x34],r12d
   140008ca7:	mov    DWORD PTR [r11+0x8],0x4
   140008caf:	jmp    0x140005bfa
   140008cb4:	mov    rdx,QWORD PTR [rbp+0x8]
   140008cb8:	mov    ecx,0x38
   140008cbd:	call   0x140004140
   140008cc2:	mov    r11,rax
   140008cc5:	test   rax,rax
   140008cc8:	je     0x140005bf7
   140008cce:	mov    rax,QWORD PTR [rbp+0x18]
   140008cd2:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008cd6:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008cdb:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008cdf:	lea    rax,[rip+0xd3a2]        # 0x140016088
   140008ce6:	mov    QWORD PTR [r11],rax
   140008ce9:	mov    QWORD PTR [r11+0x10],rdx
   140008ced:	mov    DWORD PTR [r11+0x18],0xb
   140008cf5:	mov    QWORD PTR [r11+0x20],rdi
   140008cf9:	mov    DWORD PTR [r11+0x28],r12d
   140008cfd:	mov    DWORD PTR [r11+0x2c],r12d
   140008d01:	mov    DWORD PTR [r11+0x30],r12d
   140008d05:	mov    DWORD PTR [r11+0x34],r12d
   140008d09:	mov    DWORD PTR [r11+0x8],0x4
   140008d11:	jmp    0x140005bfa
   140008d16:	mov    rdx,QWORD PTR [rbp+0x8]
   140008d1a:	mov    ecx,0x38
   140008d1f:	call   0x140004140
   140008d24:	mov    r11,rax
   140008d27:	test   rax,rax
   140008d2a:	je     0x140005bf7
   140008d30:	mov    rax,QWORD PTR [rbp+0x18]
   140008d34:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008d38:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008d3d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008d41:	lea    rax,[rip+0xd340]        # 0x140016088
   140008d48:	mov    QWORD PTR [r11],rax
   140008d4b:	mov    QWORD PTR [r11+0x10],rdx
   140008d4f:	mov    DWORD PTR [r11+0x18],0xf
   140008d57:	mov    QWORD PTR [r11+0x20],rdi
   140008d5b:	mov    DWORD PTR [r11+0x28],r12d
   140008d5f:	mov    DWORD PTR [r11+0x2c],r12d
   140008d63:	mov    DWORD PTR [r11+0x30],r12d
   140008d67:	mov    DWORD PTR [r11+0x34],r12d
   140008d6b:	mov    DWORD PTR [r11+0x8],0x4
   140008d73:	jmp    0x140005bfa
   140008d78:	mov    rdx,QWORD PTR [rbp+0x8]
   140008d7c:	mov    ecx,0x38
   140008d81:	call   0x140004140
   140008d86:	mov    r11,rax
   140008d89:	test   rax,rax
   140008d8c:	je     0x140005bf7
   140008d92:	mov    rax,QWORD PTR [rbp+0x18]
   140008d96:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008d9a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008d9f:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008da3:	lea    rax,[rip+0xd2de]        # 0x140016088
   140008daa:	mov    QWORD PTR [r11],rax
   140008dad:	mov    QWORD PTR [r11+0x10],rdx
   140008db1:	mov    DWORD PTR [r11+0x18],0xd
   140008db9:	mov    QWORD PTR [r11+0x20],rdi
   140008dbd:	mov    DWORD PTR [r11+0x28],r12d
   140008dc1:	mov    DWORD PTR [r11+0x2c],r12d
   140008dc5:	mov    DWORD PTR [r11+0x30],r12d
   140008dc9:	mov    DWORD PTR [r11+0x34],r12d
   140008dcd:	mov    DWORD PTR [r11+0x8],0x4
   140008dd5:	jmp    0x140005bfa
   140008dda:	mov    rdx,QWORD PTR [rbp+0x8]
   140008dde:	mov    ecx,0x38
   140008de3:	call   0x140004140
   140008de8:	mov    r11,rax
   140008deb:	test   rax,rax
   140008dee:	je     0x140005bf7
   140008df4:	mov    rax,QWORD PTR [rbp+0x18]
   140008df8:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008dfc:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008e01:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008e05:	lea    rax,[rip+0xd27c]        # 0x140016088
   140008e0c:	mov    QWORD PTR [r11],rax
   140008e0f:	mov    QWORD PTR [r11+0x10],rdx
   140008e13:	mov    DWORD PTR [r11+0x18],0xa
   140008e1b:	mov    QWORD PTR [r11+0x20],rdi
   140008e1f:	mov    DWORD PTR [r11+0x28],r12d
   140008e23:	mov    DWORD PTR [r11+0x2c],r12d
   140008e27:	mov    DWORD PTR [r11+0x30],r12d
   140008e2b:	mov    DWORD PTR [r11+0x34],r12d
   140008e2f:	mov    DWORD PTR [r11+0x8],0x4
   140008e37:	jmp    0x140005bfa
   140008e3c:	mov    rdx,QWORD PTR [rbp+0x8]
   140008e40:	mov    ecx,0x38
   140008e45:	call   0x140004140
   140008e4a:	mov    r11,rax
   140008e4d:	test   rax,rax
   140008e50:	je     0x140005bf7
   140008e56:	mov    rax,QWORD PTR [rbp+0x18]
   140008e5a:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008e5e:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008e63:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008e67:	lea    rax,[rip+0xd21a]        # 0x140016088
   140008e6e:	mov    QWORD PTR [r11],rax
   140008e71:	mov    QWORD PTR [r11+0x10],rdx
   140008e75:	mov    DWORD PTR [r11+0x18],0x18
   140008e7d:	mov    QWORD PTR [r11+0x20],rdi
   140008e81:	mov    DWORD PTR [r11+0x28],r12d
   140008e85:	mov    DWORD PTR [r11+0x2c],r12d
   140008e89:	mov    DWORD PTR [r11+0x30],r12d
   140008e8d:	mov    DWORD PTR [r11+0x34],r12d
   140008e91:	mov    DWORD PTR [r11+0x8],0x4
   140008e99:	jmp    0x140005bfa
   140008e9e:	mov    rdx,QWORD PTR [rbp+0x8]
   140008ea2:	mov    ecx,0x38
   140008ea7:	call   0x140004140
   140008eac:	mov    r11,rax
   140008eaf:	test   rax,rax
   140008eb2:	je     0x140005bf7
   140008eb8:	mov    rax,QWORD PTR [rbp+0x18]
   140008ebc:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008ec0:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008ec5:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008ec9:	lea    rax,[rip+0xd1b8]        # 0x140016088
   140008ed0:	mov    QWORD PTR [r11],rax
   140008ed3:	mov    QWORD PTR [r11+0x10],rdx
   140008ed7:	mov    DWORD PTR [r11+0x18],0x1d
   140008edf:	mov    QWORD PTR [r11+0x20],rdi
   140008ee3:	mov    DWORD PTR [r11+0x28],r12d
   140008ee7:	mov    DWORD PTR [r11+0x2c],r12d
   140008eeb:	mov    DWORD PTR [r11+0x30],r12d
   140008eef:	mov    DWORD PTR [r11+0x34],r12d
   140008ef3:	mov    DWORD PTR [r11+0x8],0x4
   140008efb:	jmp    0x140005bfa
   140008f00:	mov    rdx,QWORD PTR [rbp+0x8]
   140008f04:	mov    ecx,0x38
   140008f09:	call   0x140004140
   140008f0e:	mov    r11,rax
   140008f11:	test   rax,rax
   140008f14:	je     0x140005bf7
   140008f1a:	mov    rax,QWORD PTR [rbp+0x18]
   140008f1e:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008f22:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008f27:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008f2b:	lea    rax,[rip+0xd156]        # 0x140016088
   140008f32:	mov    QWORD PTR [r11],rax
   140008f35:	mov    QWORD PTR [r11+0x10],rdx
   140008f39:	mov    DWORD PTR [r11+0x18],0x1e
   140008f41:	mov    QWORD PTR [r11+0x20],rdi
   140008f45:	mov    DWORD PTR [r11+0x28],r12d
   140008f49:	mov    DWORD PTR [r11+0x2c],r12d
   140008f4d:	mov    DWORD PTR [r11+0x30],r12d
   140008f51:	mov    DWORD PTR [r11+0x34],r12d
   140008f55:	mov    DWORD PTR [r11+0x8],0x4
   140008f5d:	jmp    0x140005bfa
   140008f62:	mov    rdx,QWORD PTR [rbp+0x8]
   140008f66:	mov    ecx,0x38
   140008f6b:	call   0x140004140
   140008f70:	mov    r11,rax
   140008f73:	test   rax,rax
   140008f76:	je     0x140005bf7
   140008f7c:	mov    rax,QWORD PTR [rbp+0x18]
   140008f80:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008f84:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008f89:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008f8d:	lea    rax,[rip+0xd0f4]        # 0x140016088
   140008f94:	mov    QWORD PTR [r11],rax
   140008f97:	mov    QWORD PTR [r11+0x10],rdx
   140008f9b:	mov    DWORD PTR [r11+0x18],0x4
   140008fa3:	mov    QWORD PTR [r11+0x20],rdi
   140008fa7:	mov    DWORD PTR [r11+0x28],r12d
   140008fab:	mov    DWORD PTR [r11+0x2c],r12d
   140008faf:	mov    DWORD PTR [r11+0x30],r12d
   140008fb3:	mov    DWORD PTR [r11+0x34],r12d
   140008fb7:	mov    DWORD PTR [r11+0x8],0x4
   140008fbf:	jmp    0x140005bfa
   140008fc4:	mov    rdx,QWORD PTR [rbp+0x8]
   140008fc8:	mov    ecx,0x38
   140008fcd:	call   0x140004140
   140008fd2:	mov    r11,rax
   140008fd5:	test   rax,rax
   140008fd8:	je     0x140005bf7
   140008fde:	mov    rax,QWORD PTR [rbp+0x18]
   140008fe2:	movsxd rcx,DWORD PTR [rbp+0x10]
   140008fe6:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140008feb:	mov    rdx,QWORD PTR [rax+rcx*8]
   140008fef:	lea    rax,[rip+0xd092]        # 0x140016088
   140008ff6:	mov    QWORD PTR [r11],rax
   140008ff9:	mov    QWORD PTR [r11+0x10],rdx
   140008ffd:	mov    DWORD PTR [r11+0x18],0x6
   140009005:	mov    QWORD PTR [r11+0x20],rdi
   140009009:	mov    DWORD PTR [r11+0x28],r12d
   14000900d:	mov    DWORD PTR [r11+0x2c],r12d
   140009011:	mov    DWORD PTR [r11+0x30],r12d
   140009015:	mov    DWORD PTR [r11+0x34],r12d
   140009019:	mov    DWORD PTR [r11+0x8],0x4
   140009021:	jmp    0x140005bfa
   140009026:	mov    rdx,QWORD PTR [rbp+0x8]
   14000902a:	mov    ecx,0x38
   14000902f:	call   0x140004140
   140009034:	mov    r11,rax
   140009037:	test   rax,rax
   14000903a:	je     0x140005bf7
   140009040:	mov    rax,QWORD PTR [rbp+0x18]
   140009044:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009048:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14000904d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140009051:	lea    rax,[rip+0xd030]        # 0x140016088
   140009058:	mov    QWORD PTR [r11],rax
   14000905b:	mov    QWORD PTR [r11+0x10],rdx
   14000905f:	mov    DWORD PTR [r11+0x18],0x5
   140009067:	mov    QWORD PTR [r11+0x20],rdi
   14000906b:	mov    DWORD PTR [r11+0x28],r12d
   14000906f:	mov    DWORD PTR [r11+0x2c],r12d
   140009073:	mov    DWORD PTR [r11+0x30],r12d
   140009077:	mov    DWORD PTR [r11+0x34],r12d
   14000907b:	mov    DWORD PTR [r11+0x8],0x4
   140009083:	jmp    0x140005bfa
   140009088:	mov    rdx,QWORD PTR [rbp+0x8]
   14000908c:	mov    ecx,0x38
   140009091:	call   0x140004140
   140009096:	mov    r11,rax
   140009099:	test   rax,rax
   14000909c:	je     0x140005bf7
   1400090a2:	mov    rax,QWORD PTR [rbp+0x18]
   1400090a6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400090aa:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400090af:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400090b3:	lea    rax,[rip+0xcfce]        # 0x140016088
   1400090ba:	mov    QWORD PTR [r11],rax
   1400090bd:	mov    QWORD PTR [r11+0x10],rdx
   1400090c1:	mov    DWORD PTR [r11+0x18],0x1
   1400090c9:	mov    QWORD PTR [r11+0x20],rdi
   1400090cd:	mov    DWORD PTR [r11+0x28],r12d
   1400090d1:	mov    DWORD PTR [r11+0x2c],r12d
   1400090d5:	mov    DWORD PTR [r11+0x30],r12d
   1400090d9:	mov    DWORD PTR [r11+0x34],r12d
   1400090dd:	mov    DWORD PTR [r11+0x8],0x4
   1400090e5:	jmp    0x140005bfa
   1400090ea:	mov    rdx,QWORD PTR [rbp+0x8]
   1400090ee:	mov    ecx,0x38
   1400090f3:	call   0x140004140
   1400090f8:	mov    r11,rax
   1400090fb:	test   rax,rax
   1400090fe:	je     0x140005bf7
   140009104:	mov    rax,QWORD PTR [rbp+0x18]
   140009108:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000910c:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140009111:	mov    rdx,QWORD PTR [rax+rcx*8]
   140009115:	lea    rax,[rip+0xcf6c]        # 0x140016088
   14000911c:	mov    QWORD PTR [r11],rax
   14000911f:	mov    QWORD PTR [r11+0x10],rdx
   140009123:	mov    DWORD PTR [r11+0x18],0x19
   14000912b:	mov    QWORD PTR [r11+0x20],rdi
   14000912f:	mov    DWORD PTR [r11+0x28],r12d
   140009133:	mov    DWORD PTR [r11+0x2c],r12d
   140009137:	mov    DWORD PTR [r11+0x30],r12d
   14000913b:	mov    DWORD PTR [r11+0x34],r12d
   14000913f:	mov    DWORD PTR [r11+0x8],0x4
   140009147:	jmp    0x140005bfa
   14000914c:	mov    rdx,QWORD PTR [rbp+0x8]
   140009150:	mov    ecx,0x48
   140009155:	call   0x140004140
   14000915a:	mov    r11,rax
   14000915d:	test   rax,rax
   140009160:	je     0x14000918f
   140009162:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009166:	mov    rdi,QWORD PTR [rbp+0x18]
   14000916a:	mov    rdx,QWORD PTR [rdi+rcx*8]
   14000916e:	lea    eax,[rcx+0x4]
   140009171:	movsxd r9,eax
   140009174:	lea    eax,[rcx+0x2]
   140009177:	mov    rcx,r11
   14000917a:	mov    r9,QWORD PTR [rdi+r9*8]
   14000917e:	movsxd r8,eax
   140009181:	mov    r8,QWORD PTR [rdi+r8*8]
   140009185:	call   0x140002b90
   14000918a:	mov    rdi,rax
   14000918d:	jmp    0x140009192
   14000918f:	mov    rdi,r12
   140009192:	mov    rcx,QWORD PTR [rbp+0x28]
   140009196:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000919a:	inc    rdx
   14000919d:	add    rdx,rdx
   1400091a0:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400091a3:	mov    DWORD PTR [rdi+0x28],eax
   1400091a6:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400091aa:	mov    DWORD PTR [rdi+0x2c],eax
   1400091ad:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400091b1:	mov    DWORD PTR [rdi+0x30],eax
   1400091b4:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400091b8:	mov    DWORD PTR [rdi+0x34],eax
   1400091bb:	mov    rcx,QWORD PTR [rbp+0x28]
   1400091bf:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400091c3:	add    rdx,0x3
   1400091c7:	add    rdx,rdx
   1400091ca:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400091cd:	mov    DWORD PTR [rdi+0x38],eax
   1400091d0:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400091d4:	mov    DWORD PTR [rdi+0x3c],eax
   1400091d7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400091db:	mov    DWORD PTR [rdi+0x40],eax
   1400091de:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400091e2:	mov    DWORD PTR [rdi+0x44],eax
   1400091e5:	jmp    0x1400052d9
   1400091ea:	mov    rdx,QWORD PTR [rbp+0x8]
   1400091ee:	mov    ecx,0x38
   1400091f3:	call   0x140004140
   1400091f8:	mov    r11,rax
   1400091fb:	test   rax,rax
   1400091fe:	je     0x140005bf7
   140009204:	mov    rax,QWORD PTR [rbp+0x18]
   140009208:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000920c:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140009211:	mov    edx,DWORD PTR [rax+rcx*8+0x8]
   140009215:	mov    rcx,QWORD PTR [rax+rcx*8]
   140009219:	lea    rax,[rip+0xce68]        # 0x140016088
   140009220:	mov    QWORD PTR [r11],rax
   140009223:	mov    QWORD PTR [r11+0x10],rcx
   140009227:	mov    DWORD PTR [r11+0x18],edx
   14000922b:	mov    QWORD PTR [r11+0x20],rdi
   14000922f:	mov    DWORD PTR [r11+0x28],r12d
   140009233:	mov    DWORD PTR [r11+0x2c],r12d
   140009237:	mov    DWORD PTR [r11+0x30],r12d
   14000923b:	mov    DWORD PTR [r11+0x34],r12d
   14000923f:	mov    DWORD PTR [r11+0x8],0x4
   140009247:	jmp    0x140005bfa
   14000924c:	mov    rax,QWORD PTR [rbp+0x18]
   140009250:	mov    DWORD PTR [rax+rdx*8],0x3
   140009257:	jmp    0x14000ae40
   14000925c:	mov    rax,QWORD PTR [rbp+0x18]
   140009260:	mov    DWORD PTR [rax+rdx*8],0x17
   140009267:	jmp    0x14000ae40
   14000926c:	mov    rax,QWORD PTR [rbp+0x18]
   140009270:	mov    DWORD PTR [rax+rdx*8],0x9
   140009277:	jmp    0x14000ae40
   14000927c:	mov    rax,QWORD PTR [rbp+0x18]
   140009280:	mov    DWORD PTR [rax+rdx*8],0x15
   140009287:	jmp    0x14000ae40
   14000928c:	mov    rax,QWORD PTR [rbp+0x18]
   140009290:	mov    DWORD PTR [rax+rdx*8],0xe
   140009297:	jmp    0x14000ae40
   14000929c:	mov    rax,QWORD PTR [rbp+0x18]
   1400092a0:	mov    DWORD PTR [rax+rdx*8],0x7
   1400092a7:	jmp    0x14000ae40
   1400092ac:	mov    rax,QWORD PTR [rbp+0x18]
   1400092b0:	mov    DWORD PTR [rax+rdx*8],0x12
   1400092b7:	jmp    0x14000ae40
   1400092bc:	mov    rax,QWORD PTR [rbp+0x18]
   1400092c0:	mov    DWORD PTR [rax+rdx*8],0x1c
   1400092c7:	jmp    0x14000ae40
   1400092cc:	mov    rax,QWORD PTR [rbp+0x18]
   1400092d0:	mov    DWORD PTR [rax+rdx*8],0x21
   1400092d7:	jmp    0x14000ae40
   1400092dc:	mov    rax,QWORD PTR [rbp+0x18]
   1400092e0:	mov    DWORD PTR [rax+rdx*8],0x2
   1400092e7:	jmp    0x14000ae40
   1400092ec:	mov    rax,QWORD PTR [rbp+0x18]
   1400092f0:	mov    DWORD PTR [rax+rdx*8],0x22
   1400092f7:	jmp    0x14000ae40
   1400092fc:	mov    rax,QWORD PTR [rbp+0x18]
   140009300:	mov    DWORD PTR [rax+rdx*8],0x1a
   140009307:	jmp    0x14000ae40
   14000930c:	mov    rdx,QWORD PTR [rbp+0x8]
   140009310:	mov    ecx,0x30
   140009315:	call   0x140004140
   14000931a:	mov    r11,rax
   14000931d:	test   rax,rax
   140009320:	je     0x140005d3f
   140009326:	mov    rax,QWORD PTR [rbp+0x18]
   14000932a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000932e:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140009333:	mov    rdx,QWORD PTR [rax+rcx*8]
   140009337:	lea    rax,[rip+0xcdea]        # 0x140016128
   14000933e:	mov    QWORD PTR [r11],rax
   140009341:	mov    QWORD PTR [r11+0x10],rdx
   140009345:	mov    QWORD PTR [r11+0x18],rdi
   140009349:	mov    DWORD PTR [r11+0x20],r12d
   14000934d:	mov    DWORD PTR [r11+0x24],r12d
   140009351:	mov    DWORD PTR [r11+0x28],r12d
   140009355:	mov    DWORD PTR [r11+0x2c],r12d
   140009359:	mov    DWORD PTR [r11+0x8],0x15
   140009361:	jmp    0x140005d42
   140009366:	mov    rdx,QWORD PTR [rbp+0x8]
   14000936a:	mov    ecx,0x38
   14000936f:	call   0x140004140
   140009374:	mov    rdi,rax
   140009377:	test   rax,rax
   14000937a:	je     0x1400078d2
   140009380:	mov    rax,QWORD PTR [rbp+0x18]
   140009384:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009388:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000938d:	lea    rax,[rip+0xcde4]        # 0x140016178
   140009394:	mov    QWORD PTR [rdi],rax
   140009397:	mov    QWORD PTR [rdi+0x10],rdx
   14000939b:	mov    DWORD PTR [rdi+0x18],r12d
   14000939f:	mov    DWORD PTR [rdi+0x1c],r12d
   1400093a3:	mov    DWORD PTR [rdi+0x20],r12d
   1400093a7:	mov    DWORD PTR [rdi+0x24],r12d
   1400093ab:	mov    DWORD PTR [rdi+0x28],r12d
   1400093af:	mov    DWORD PTR [rdi+0x2c],r12d
   1400093b3:	mov    DWORD PTR [rdi+0x30],r12d
   1400093b7:	mov    DWORD PTR [rdi+0x34],r12d
   1400093bb:	mov    DWORD PTR [rdi+0x8],0x5
   1400093c2:	jmp    0x1400078d5
   1400093c7:	mov    rdx,QWORD PTR [rbp+0x8]
   1400093cb:	mov    ecx,0x20
   1400093d0:	call   0x140004140
   1400093d5:	mov    rdi,rax
   1400093d8:	test   rax,rax
   1400093db:	je     0x1400052d6
   1400093e1:	mov    rax,QWORD PTR [rbp+0x18]
   1400093e5:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400093e9:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400093ed:	lea    rax,[rip+0xcdd4]        # 0x1400161c8
   1400093f4:	mov    QWORD PTR [rdi],rax
   1400093f7:	mov    QWORD PTR [rdi+0x10],rdx
   1400093fb:	mov    QWORD PTR [rdi+0x18],rdi
   1400093ff:	mov    DWORD PTR [rdi+0x8],0x3b
   140009406:	jmp    0x1400052d9
   14000940b:	mov    rdx,QWORD PTR [rbp+0x8]
   14000940f:	mov    ecx,0x20
   140009414:	call   0x140004140
   140009419:	mov    rdi,rax
   14000941c:	test   rax,rax
   14000941f:	je     0x1400052d6
   140009425:	mov    rax,QWORD PTR [rbp+0x18]
   140009429:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000942d:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140009432:	mov    rcx,QWORD PTR [rax+rcx*8]
   140009436:	lea    rax,[rip+0xcd8b]        # 0x1400161c8
   14000943d:	mov    QWORD PTR [rdi],rax
   140009440:	mov    QWORD PTR [rdi+0x10],rdx
   140009444:	mov    DWORD PTR [rdi+0x8],0x3b
   14000944b:	mov    rax,QWORD PTR [rcx+0x18]
   14000944f:	mov    QWORD PTR [rdi+0x18],rax
   140009453:	mov    QWORD PTR [rcx+0x18],rdi
   140009457:	jmp    0x1400052d9
   14000945c:	mov    rdx,QWORD PTR [rbp+0x8]
   140009460:	mov    ecx,0x38
   140009465:	call   0x140004140
   14000946a:	mov    rbx,rax
   14000946d:	test   rax,rax
   140009470:	je     0x1400094c9
   140009472:	movsxd rax,DWORD PTR [rbp+0x10]
   140009476:	mov    rdi,QWORD PTR [rbp+0x18]
   14000947a:	mov    rdx,rax
   14000947d:	inc    eax
   14000947f:	cmp    DWORD PTR [rdi+rdx*8],0x54
   140009483:	movsxd rcx,eax
   140009486:	mov    rcx,QWORD PTR [rdi+rcx*8]
   14000948a:	sete   dl
   14000948d:	call   0x140002cd0
   140009492:	lea    rcx,[rip+0xcd7f]        # 0x140016218
   140009499:	mov    QWORD PTR [rbx],rcx
   14000949c:	mov    QWORD PTR [rbx+0x10],rax
   1400094a0:	mov    DWORD PTR [rbx+0x18],r12d
   1400094a4:	mov    DWORD PTR [rbx+0x1c],r12d
   1400094a8:	mov    DWORD PTR [rbx+0x20],r12d
   1400094ac:	mov    DWORD PTR [rbx+0x24],r12d
   1400094b0:	mov    DWORD PTR [rbx+0x28],r12d
   1400094b4:	mov    DWORD PTR [rbx+0x2c],r12d
   1400094b8:	mov    DWORD PTR [rbx+0x30],r12d
   1400094bc:	mov    DWORD PTR [rbx+0x34],r12d
   1400094c0:	mov    DWORD PTR [rbx+0x8],0x4a
   1400094c7:	jmp    0x1400094cc
   1400094c9:	mov    rbx,r12
   1400094cc:	mov    rcx,QWORD PTR [rbp+0x28]
   1400094d0:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400094d4:	lea    r9,[rip+0xffffffffffff6b25]        # 0x140000000
   1400094db:	add    rdx,rdx
   1400094de:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400094e1:	mov    DWORD PTR [rbx+0x18],eax
   1400094e4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400094e8:	mov    DWORD PTR [rbx+0x1c],eax
   1400094eb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400094ef:	mov    DWORD PTR [rbx+0x20],eax
   1400094f2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400094f6:	mov    DWORD PTR [rbx+0x24],eax
   1400094f9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400094fd:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009501:	add    rdx,0x2
   140009505:	add    rdx,rdx
   140009508:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000950b:	mov    DWORD PTR [rbx+0x28],eax
   14000950e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009512:	mov    DWORD PTR [rbx+0x2c],eax
   140009515:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009519:	mov    DWORD PTR [rbx+0x30],eax
   14000951c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009520:	mov    DWORD PTR [rbx+0x34],eax
   140009523:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009527:	mov    rax,QWORD PTR [rbp+0x18]
   14000952b:	mov    QWORD PTR [rax+rcx*8],rbx
   14000952f:	jmp    0x14000ae40
   140009534:	mov    rax,QWORD PTR [rbp+0x18]
   140009538:	mov    DWORD PTR [rax+rdx*8],0x54
   14000953f:	jmp    0x14000ae40
   140009544:	mov    rax,QWORD PTR [rbp+0x18]
   140009548:	mov    DWORD PTR [rax+rdx*8],0x4b
   14000954f:	jmp    0x14000ae40
   140009554:	mov    rdx,QWORD PTR [rbp+0x8]
   140009558:	mov    ecx,0x30
   14000955d:	call   0x140004140
   140009562:	mov    rdi,rax
   140009565:	test   rax,rax
   140009568:	je     0x1400052d6
   14000956e:	mov    rax,QWORD PTR [rbp+0x18]
   140009572:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009576:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000957a:	lea    rax,[rip+0xcd37]        # 0x1400162b8
   140009581:	mov    QWORD PTR [rdi],rax
   140009584:	mov    QWORD PTR [rdi+0x10],rdx
   140009588:	mov    QWORD PTR [rdi+0x18],rdi
   14000958c:	mov    DWORD PTR [rdi+0x20],r12d
   140009590:	mov    DWORD PTR [rdi+0x24],r12d
   140009594:	mov    DWORD PTR [rdi+0x28],r12d
   140009598:	mov    DWORD PTR [rdi+0x2c],r12d
   14000959c:	mov    DWORD PTR [rdi+0x8],0x49
   1400095a3:	jmp    0x1400052d9
   1400095a8:	mov    rdx,QWORD PTR [rbp+0x8]
   1400095ac:	mov    ecx,0x30
   1400095b1:	call   0x140004140
   1400095b6:	mov    rdi,rax
   1400095b9:	test   rax,rax
   1400095bc:	je     0x14000586d
   1400095c2:	mov    rax,QWORD PTR [rbp+0x18]
   1400095c6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400095ca:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   1400095cf:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400095d3:	lea    rax,[rip+0xccde]        # 0x1400162b8
   1400095da:	mov    QWORD PTR [rdi],rax
   1400095dd:	mov    QWORD PTR [rdi+0x10],rdx
   1400095e1:	mov    DWORD PTR [rdi+0x20],r12d
   1400095e5:	mov    DWORD PTR [rdi+0x24],r12d
   1400095e9:	mov    DWORD PTR [rdi+0x28],r12d
   1400095ed:	mov    DWORD PTR [rdi+0x2c],r12d
   1400095f1:	mov    DWORD PTR [rdi+0x8],0x49
   1400095f8:	mov    rax,QWORD PTR [rcx+0x18]
   1400095fc:	mov    QWORD PTR [rdi+0x18],rax
   140009600:	mov    QWORD PTR [rcx+0x18],rdi
   140009604:	jmp    0x140005870
   140009609:	mov    rdx,QWORD PTR [rbp+0x8]
   14000960d:	mov    ecx,0x30
   140009612:	call   0x140004140
   140009617:	mov    rdi,rax
   14000961a:	test   rax,rax
   14000961d:	je     0x1400052d6
   140009623:	mov    rax,QWORD PTR [rbp+0x18]
   140009627:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000962b:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140009630:	mov    rcx,QWORD PTR [rax+rcx*8]
   140009634:	lea    rax,[rip+0xcc7d]        # 0x1400162b8
   14000963b:	mov    QWORD PTR [rdi],rax
   14000963e:	mov    QWORD PTR [rdi+0x10],rdx
   140009642:	mov    DWORD PTR [rdi+0x20],r12d
   140009646:	mov    DWORD PTR [rdi+0x24],r12d
   14000964a:	mov    DWORD PTR [rdi+0x28],r12d
   14000964e:	mov    DWORD PTR [rdi+0x2c],r12d
   140009652:	mov    DWORD PTR [rdi+0x8],0x49
   140009659:	mov    rax,QWORD PTR [rcx+0x18]
   14000965d:	mov    QWORD PTR [rdi+0x18],rax
   140009661:	mov    QWORD PTR [rcx+0x18],rdi
   140009665:	jmp    0x1400052d9
   14000966a:	mov    rdx,QWORD PTR [rbp+0x8]
   14000966e:	mov    ecx,0x40
   140009673:	call   0x140004140
   140009678:	mov    rdi,rax
   14000967b:	test   rax,rax
   14000967e:	je     0x1400096a9
   140009680:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009684:	mov    r8,QWORD PTR [rbp+0x18]
   140009688:	lea    eax,[rcx+0x1]
   14000968b:	mov    rdx,rcx
   14000968e:	mov    rcx,rdi
   140009691:	cdqe   
   140009693:	shl    rdx,0x4
   140009697:	mov    r8,QWORD PTR [r8+rax*8]
   14000969b:	add    rdx,QWORD PTR [rbp+0x30]
   14000969f:	call   0x140002bd0
   1400096a4:	mov    rdi,rax
   1400096a7:	jmp    0x1400096ac
   1400096a9:	mov    rdi,r12
   1400096ac:	mov    rcx,QWORD PTR [rbp+0x28]
   1400096b0:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400096b4:	add    rdx,rdx
   1400096b7:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400096ba:	mov    DWORD PTR [rdi+0x2c],eax
   1400096bd:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400096c1:	mov    DWORD PTR [rdi+0x30],eax
   1400096c4:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400096c8:	mov    DWORD PTR [rdi+0x34],eax
   1400096cb:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400096cf:	mov    DWORD PTR [rdi+0x38],eax
   1400096d2:	jmp    0x1400052d9
   1400096d7:	mov    rcx,QWORD PTR [rbp+0x18]
   1400096db:	mov    rax,QWORD PTR [rcx+rdx*8+0x8]
   1400096e0:	mov    QWORD PTR [rcx+rdx*8],rax
   1400096e4:	jmp    0x14000ae40
   1400096e9:	mov    rdx,QWORD PTR [rbp+0x8]
   1400096ed:	mov    ecx,0x20
   1400096f2:	call   0x140004140
   1400096f7:	mov    rdi,rax
   1400096fa:	test   rax,rax
   1400096fd:	je     0x140007091
   140009703:	lea    rax,[rip+0xcbfe]        # 0x140016308
   14000970a:	mov    QWORD PTR [rdi],rax
   14000970d:	mov    DWORD PTR [rdi+0x10],r12d
   140009711:	mov    DWORD PTR [rdi+0x14],r12d
   140009715:	mov    DWORD PTR [rdi+0x18],r12d
   140009719:	mov    DWORD PTR [rdi+0x1c],r12d
   14000971d:	mov    DWORD PTR [rdi+0x8],0x14
   140009724:	jmp    0x140007094
   140009729:	mov    rdx,QWORD PTR [rbp+0x8]
   14000972d:	mov    ecx,0x28
   140009732:	call   0x140004140
   140009737:	mov    rdi,rax
   14000973a:	test   rax,rax
   14000973d:	je     0x140007d5a
   140009743:	mov    rax,QWORD PTR [rbp+0x18]
   140009747:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000974b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000974f:	lea    rax,[rip+0xcc02]        # 0x140016358
   140009756:	mov    QWORD PTR [rdi],rax
   140009759:	mov    QWORD PTR [rdi+0x10],rdx
   14000975d:	mov    DWORD PTR [rdi+0x18],r12d
   140009761:	mov    DWORD PTR [rdi+0x1c],r12d
   140009765:	mov    DWORD PTR [rdi+0x20],r12d
   140009769:	mov    DWORD PTR [rdi+0x24],r12d
   14000976d:	mov    DWORD PTR [rdi+0x8],0x16
   140009774:	jmp    0x140007d5d
   140009779:	mov    rdx,QWORD PTR [rbp+0x8]
   14000977d:	mov    ecx,0x68
   140009782:	call   0x140004140
   140009787:	mov    r11,rax
   14000978a:	test   rax,rax
   14000978d:	je     0x1400097c1
   14000978f:	mov    ecx,DWORD PTR [rbp+0x10]
   140009792:	mov    rdi,QWORD PTR [rbp+0x18]
   140009796:	lea    eax,[rcx+0x6]
   140009799:	movsxd r9,eax
   14000979c:	lea    eax,[rcx+0x4]
   14000979f:	mov    r9,QWORD PTR [rdi+r9*8]
   1400097a3:	movsxd r8,eax
   1400097a6:	lea    eax,[rcx+0x2]
   1400097a9:	mov    r8,QWORD PTR [rdi+r8*8]
   1400097ad:	movsxd rdx,eax
   1400097b0:	mov    rcx,r11
   1400097b3:	mov    rdx,QWORD PTR [rdi+rdx*8]
   1400097b7:	call   0x140002d10
   1400097bc:	mov    rdi,rax
   1400097bf:	jmp    0x1400097c4
   1400097c1:	mov    rdi,r12
   1400097c4:	mov    rcx,QWORD PTR [rbp+0x28]
   1400097c8:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400097cc:	add    rdx,rdx
   1400097cf:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400097d2:	mov    DWORD PTR [rdi+0x28],eax
   1400097d5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400097d9:	mov    DWORD PTR [rdi+0x2c],eax
   1400097dc:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400097e0:	mov    DWORD PTR [rdi+0x30],eax
   1400097e3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400097e7:	mov    DWORD PTR [rdi+0x34],eax
   1400097ea:	mov    rcx,QWORD PTR [rbp+0x28]
   1400097ee:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400097f2:	inc    rdx
   1400097f5:	add    rdx,rdx
   1400097f8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400097fb:	mov    DWORD PTR [rdi+0x38],eax
   1400097fe:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009802:	mov    DWORD PTR [rdi+0x3c],eax
   140009805:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009809:	mov    DWORD PTR [rdi+0x40],eax
   14000980c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009810:	mov    DWORD PTR [rdi+0x44],eax
   140009813:	mov    rcx,QWORD PTR [rbp+0x28]
   140009817:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000981b:	add    rdx,0x3
   14000981f:	add    rdx,rdx
   140009822:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009825:	mov    DWORD PTR [rdi+0x48],eax
   140009828:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000982c:	mov    DWORD PTR [rdi+0x4c],eax
   14000982f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009833:	mov    DWORD PTR [rdi+0x50],eax
   140009836:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000983a:	mov    DWORD PTR [rdi+0x54],eax
   14000983d:	mov    rcx,QWORD PTR [rbp+0x28]
   140009841:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009845:	add    rdx,0x5
   140009849:	add    rdx,rdx
   14000984c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000984f:	mov    DWORD PTR [rdi+0x58],eax
   140009852:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009856:	mov    DWORD PTR [rdi+0x5c],eax
   140009859:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000985d:	mov    DWORD PTR [rdi+0x60],eax
   140009860:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009864:	mov    DWORD PTR [rdi+0x64],eax
   140009867:	jmp    0x1400052d9
   14000986c:	mov    rdx,QWORD PTR [rbp+0x8]
   140009870:	mov    ecx,0x68
   140009875:	call   0x140004140
   14000987a:	mov    r11,rax
   14000987d:	test   rax,rax
   140009880:	je     0x1400098ad
   140009882:	mov    ecx,DWORD PTR [rbp+0x10]
   140009885:	mov    rdi,QWORD PTR [rbp+0x18]
   140009889:	xor    r9d,r9d
   14000988c:	lea    eax,[rcx+0x4]
   14000988f:	movsxd r8,eax
   140009892:	lea    eax,[rcx+0x2]
   140009895:	mov    rcx,r11
   140009898:	mov    r8,QWORD PTR [rdi+r8*8]
   14000989c:	movsxd rdx,eax
   14000989f:	mov    rdx,QWORD PTR [rdi+rdx*8]
   1400098a3:	call   0x140002d10
   1400098a8:	mov    rdi,rax
   1400098ab:	jmp    0x1400098b0
   1400098ad:	mov    rdi,r12
   1400098b0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400098b4:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400098b8:	add    rdx,rdx
   1400098bb:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400098be:	mov    DWORD PTR [rdi+0x28],eax
   1400098c1:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400098c5:	mov    DWORD PTR [rdi+0x2c],eax
   1400098c8:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400098cc:	mov    DWORD PTR [rdi+0x30],eax
   1400098cf:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400098d3:	mov    DWORD PTR [rdi+0x34],eax
   1400098d6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400098da:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400098de:	inc    rdx
   1400098e1:	add    rdx,rdx
   1400098e4:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400098e7:	mov    DWORD PTR [rdi+0x38],eax
   1400098ea:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400098ee:	mov    DWORD PTR [rdi+0x3c],eax
   1400098f1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400098f5:	mov    DWORD PTR [rdi+0x40],eax
   1400098f8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400098fc:	mov    DWORD PTR [rdi+0x44],eax
   1400098ff:	mov    rcx,QWORD PTR [rbp+0x28]
   140009903:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009907:	add    rdx,0x3
   14000990b:	add    rdx,rdx
   14000990e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009911:	mov    DWORD PTR [rdi+0x48],eax
   140009914:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009918:	mov    DWORD PTR [rdi+0x4c],eax
   14000991b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000991f:	mov    DWORD PTR [rdi+0x50],eax
   140009922:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009926:	mov    DWORD PTR [rdi+0x54],eax
   140009929:	jmp    0x1400052d9
   14000992e:	mov    rdx,QWORD PTR [rbp+0x8]
   140009932:	mov    ecx,0x70
   140009937:	call   0x140004140
   14000993c:	mov    r11,rax
   14000993f:	test   rax,rax
   140009942:	je     0x14000996c
   140009944:	mov    ecx,DWORD PTR [rbp+0x10]
   140009947:	mov    rdi,QWORD PTR [rbp+0x18]
   14000994b:	lea    eax,[rcx+0x4]
   14000994e:	movsxd r8,eax
   140009951:	lea    eax,[rcx+0x1]
   140009954:	mov    rcx,r11
   140009957:	mov    r8,QWORD PTR [rdi+r8*8]
   14000995b:	movsxd rdx,eax
   14000995e:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140009962:	call   0x140002db0
   140009967:	mov    rdi,rax
   14000996a:	jmp    0x14000996f
   14000996c:	mov    rdi,r12
   14000996f:	mov    rcx,QWORD PTR [rbp+0x28]
   140009973:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009977:	add    rdx,rdx
   14000997a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000997d:	mov    DWORD PTR [rdi+0x20],eax
   140009980:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009984:	mov    DWORD PTR [rdi+0x24],eax
   140009987:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000998b:	mov    DWORD PTR [rdi+0x28],eax
   14000998e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009992:	mov    DWORD PTR [rdi+0x2c],eax
   140009995:	mov    rcx,QWORD PTR [rbp+0x28]
   140009999:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000999d:	add    rdx,0x2
   1400099a1:	add    rdx,rdx
   1400099a4:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400099a7:	mov    DWORD PTR [rdi+0x30],eax
   1400099aa:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400099ae:	mov    DWORD PTR [rdi+0x34],eax
   1400099b1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400099b5:	mov    DWORD PTR [rdi+0x38],eax
   1400099b8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400099bc:	mov    DWORD PTR [rdi+0x3c],eax
   1400099bf:	mov    rcx,QWORD PTR [rbp+0x28]
   1400099c3:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400099c7:	add    rdx,0x3
   1400099cb:	add    rdx,rdx
   1400099ce:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400099d1:	mov    DWORD PTR [rdi+0x40],eax
   1400099d4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400099d8:	mov    DWORD PTR [rdi+0x44],eax
   1400099db:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400099df:	mov    DWORD PTR [rdi+0x48],eax
   1400099e2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400099e6:	mov    DWORD PTR [rdi+0x4c],eax
   1400099e9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400099ed:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400099f1:	add    rdx,0x5
   1400099f5:	add    rdx,rdx
   1400099f8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400099fb:	mov    DWORD PTR [rdi+0x50],eax
   1400099fe:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009a02:	mov    DWORD PTR [rdi+0x54],eax
   140009a05:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009a09:	mov    DWORD PTR [rdi+0x58],eax
   140009a0c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009a10:	mov    DWORD PTR [rdi+0x5c],eax
   140009a13:	mov    rcx,QWORD PTR [rbp+0x28]
   140009a17:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009a1b:	add    rdx,0x6
   140009a1f:	add    rdx,rdx
   140009a22:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009a25:	mov    DWORD PTR [rdi+0x60],eax
   140009a28:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009a2c:	mov    DWORD PTR [rdi+0x64],eax
   140009a2f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009a33:	mov    DWORD PTR [rdi+0x68],eax
   140009a36:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009a3a:	mov    DWORD PTR [rdi+0x6c],eax
   140009a3d:	jmp    0x1400052d9
   140009a42:	mov    rdx,QWORD PTR [rbp+0x8]
   140009a46:	mov    ecx,0x50
   140009a4b:	call   0x140004140
   140009a50:	mov    r11,rax
   140009a53:	test   rax,rax
   140009a56:	je     0x140009a80
   140009a58:	mov    ecx,DWORD PTR [rbp+0x10]
   140009a5b:	mov    rdi,QWORD PTR [rbp+0x18]
   140009a5f:	lea    eax,[rcx+0x4]
   140009a62:	movsxd r8,eax
   140009a65:	lea    eax,[rcx+0x2]
   140009a68:	mov    rcx,r11
   140009a6b:	mov    r8,QWORD PTR [rdi+r8*8]
   140009a6f:	movsxd rdx,eax
   140009a72:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140009a76:	call   0x140002e30
   140009a7b:	mov    rdi,rax
   140009a7e:	jmp    0x140009a83
   140009a80:	mov    rdi,r12
   140009a83:	mov    rcx,QWORD PTR [rbp+0x28]
   140009a87:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009a8b:	add    rdx,rdx
   140009a8e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009a91:	mov    DWORD PTR [rdi+0x20],eax
   140009a94:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009a98:	mov    DWORD PTR [rdi+0x24],eax
   140009a9b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009a9f:	mov    DWORD PTR [rdi+0x28],eax
   140009aa2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009aa6:	mov    DWORD PTR [rdi+0x2c],eax
   140009aa9:	mov    rcx,QWORD PTR [rbp+0x28]
   140009aad:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009ab1:	inc    rdx
   140009ab4:	add    rdx,rdx
   140009ab7:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009aba:	mov    DWORD PTR [rdi+0x30],eax
   140009abd:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009ac1:	mov    DWORD PTR [rdi+0x34],eax
   140009ac4:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009ac8:	mov    DWORD PTR [rdi+0x38],eax
   140009acb:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009acf:	mov    DWORD PTR [rdi+0x3c],eax
   140009ad2:	mov    rcx,QWORD PTR [rbp+0x28]
   140009ad6:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009ada:	add    rdx,0x3
   140009ade:	add    rdx,rdx
   140009ae1:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009ae4:	mov    DWORD PTR [rdi+0x40],eax
   140009ae7:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009aeb:	mov    DWORD PTR [rdi+0x44],eax
   140009aee:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009af2:	mov    DWORD PTR [rdi+0x48],eax
   140009af5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009af9:	mov    DWORD PTR [rdi+0x4c],eax
   140009afc:	jmp    0x1400052d9
   140009b01:	mov    rdx,QWORD PTR [rbp+0x8]
   140009b05:	mov    ecx,0x80
   140009b0a:	call   0x140004140
   140009b0f:	mov    r11,rax
   140009b12:	test   rax,rax
   140009b15:	je     0x140009b58
   140009b17:	mov    ecx,DWORD PTR [rbp+0x10]
   140009b1a:	mov    r10,QWORD PTR [rbp+0x18]
   140009b1e:	lea    eax,[rcx+0x8]
   140009b21:	movsxd rdi,eax
   140009b24:	lea    eax,[rcx+0x6]
   140009b27:	movsxd r9,eax
   140009b2a:	lea    eax,[rcx+0x4]
   140009b2d:	mov    r9,QWORD PTR [r10+r9*8]
   140009b31:	movsxd r8,eax
   140009b34:	lea    eax,[rcx+0x2]
   140009b37:	mov    r8,QWORD PTR [r10+r8*8]
   140009b3b:	movsxd rdx,eax
   140009b3e:	mov    rax,QWORD PTR [r10+rdi*8]
   140009b42:	mov    rdx,QWORD PTR [r10+rdx*8]
   140009b46:	mov    rcx,r11
   140009b49:	mov    QWORD PTR [rsp+0x20],rax
   140009b4e:	call   0x140002e80
   140009b53:	mov    rdi,rax
   140009b56:	jmp    0x140009b5b
   140009b58:	mov    rdi,r12
   140009b5b:	mov    rcx,QWORD PTR [rbp+0x28]
   140009b5f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009b63:	add    rdx,rdx
   140009b66:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009b69:	mov    DWORD PTR [rdi+0x30],eax
   140009b6c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009b70:	mov    DWORD PTR [rdi+0x34],eax
   140009b73:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009b77:	mov    DWORD PTR [rdi+0x38],eax
   140009b7a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009b7e:	mov    DWORD PTR [rdi+0x3c],eax
   140009b81:	mov    rcx,QWORD PTR [rbp+0x28]
   140009b85:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009b89:	inc    rdx
   140009b8c:	add    rdx,rdx
   140009b8f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009b92:	mov    DWORD PTR [rdi+0x40],eax
   140009b95:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009b99:	mov    DWORD PTR [rdi+0x44],eax
   140009b9c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009ba0:	mov    DWORD PTR [rdi+0x48],eax
   140009ba3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009ba7:	mov    DWORD PTR [rdi+0x4c],eax
   140009baa:	mov    rcx,QWORD PTR [rbp+0x28]
   140009bae:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009bb2:	add    rdx,0x3
   140009bb6:	add    rdx,rdx
   140009bb9:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009bbc:	mov    DWORD PTR [rdi+0x50],eax
   140009bbf:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009bc3:	mov    DWORD PTR [rdi+0x54],eax
   140009bc6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009bca:	mov    DWORD PTR [rdi+0x58],eax
   140009bcd:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009bd1:	mov    DWORD PTR [rdi+0x5c],eax
   140009bd4:	mov    rcx,QWORD PTR [rbp+0x28]
   140009bd8:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009bdc:	add    rdx,0x5
   140009be0:	add    rdx,rdx
   140009be3:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009be6:	mov    DWORD PTR [rdi+0x60],eax
   140009be9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009bed:	mov    DWORD PTR [rdi+0x64],eax
   140009bf0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009bf4:	mov    DWORD PTR [rdi+0x68],eax
   140009bf7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009bfb:	mov    DWORD PTR [rdi+0x6c],eax
   140009bfe:	jmp    0x140007ff3
   140009c03:	mov    rdx,QWORD PTR [rbp+0x8]
   140009c07:	mov    ecx,0x90
   140009c0c:	call   0x140004140
   140009c11:	mov    r11,rax
   140009c14:	test   rax,rax
   140009c17:	je     0x140009c5e
   140009c19:	movsxd rcx,DWORD PTR [rbp+0x10]
   140009c1d:	mov    r10,QWORD PTR [rbp+0x18]
   140009c21:	lea    eax,[rcx+0x9]
   140009c24:	movsxd rdi,eax
   140009c27:	lea    eax,[rcx+0x7]
   140009c2a:	movsxd r9,eax
   140009c2d:	lea    eax,[rcx+0x5]
   140009c30:	mov    rcx,QWORD PTR [r10+rcx*8+0x18]
   140009c35:	mov    rdx,QWORD PTR [rcx+0x18]
   140009c39:	mov    QWORD PTR [rcx+0x18],r12
   140009c3d:	mov    r9,QWORD PTR [r10+r9*8]
   140009c41:	movsxd r8,eax
   140009c44:	mov    rax,QWORD PTR [r10+rdi*8]
   140009c48:	mov    rcx,r11
   140009c4b:	mov    r8,QWORD PTR [r10+r8*8]
   140009c4f:	mov    QWORD PTR [rsp+0x20],rax
   140009c54:	call   0x140002ef0
   140009c59:	mov    rdi,rax
   140009c5c:	jmp    0x140009c61
   140009c5e:	mov    rdi,r12
   140009c61:	mov    rcx,QWORD PTR [rbp+0x28]
   140009c65:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009c69:	add    rdx,rdx
   140009c6c:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009c6f:	mov    DWORD PTR [rdi+0x30],eax
   140009c72:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009c76:	mov    DWORD PTR [rdi+0x34],eax
   140009c79:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009c7d:	mov    DWORD PTR [rdi+0x38],eax
   140009c80:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009c84:	mov    DWORD PTR [rdi+0x3c],eax
   140009c87:	mov    rcx,QWORD PTR [rbp+0x28]
   140009c8b:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009c8f:	inc    rdx
   140009c92:	add    rdx,rdx
   140009c95:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009c98:	mov    DWORD PTR [rdi+0x40],eax
   140009c9b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009c9f:	mov    DWORD PTR [rdi+0x44],eax
   140009ca2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009ca6:	mov    DWORD PTR [rdi+0x48],eax
   140009ca9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009cad:	mov    DWORD PTR [rdi+0x4c],eax
   140009cb0:	mov    rcx,QWORD PTR [rbp+0x28]
   140009cb4:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009cb8:	add    rdx,0x2
   140009cbc:	add    rdx,rdx
   140009cbf:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009cc2:	mov    DWORD PTR [rdi+0x50],eax
   140009cc5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009cc9:	mov    DWORD PTR [rdi+0x54],eax
   140009ccc:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009cd0:	mov    DWORD PTR [rdi+0x58],eax
   140009cd3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009cd7:	mov    DWORD PTR [rdi+0x5c],eax
   140009cda:	mov    rcx,QWORD PTR [rbp+0x28]
   140009cde:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009ce2:	add    rdx,0x4
   140009ce6:	add    rdx,rdx
   140009ce9:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009cec:	mov    DWORD PTR [rdi+0x60],eax
   140009cef:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009cf3:	mov    DWORD PTR [rdi+0x64],eax
   140009cf6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009cfa:	mov    DWORD PTR [rdi+0x68],eax
   140009cfd:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009d01:	mov    DWORD PTR [rdi+0x6c],eax
   140009d04:	mov    rcx,QWORD PTR [rbp+0x28]
   140009d08:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009d0c:	add    rdx,0x6
   140009d10:	add    rdx,rdx
   140009d13:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009d16:	mov    DWORD PTR [rdi+0x70],eax
   140009d19:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009d1d:	mov    DWORD PTR [rdi+0x74],eax
   140009d20:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009d24:	mov    DWORD PTR [rdi+0x78],eax
   140009d27:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009d2b:	mov    DWORD PTR [rdi+0x7c],eax
   140009d2e:	mov    rcx,QWORD PTR [rbp+0x28]
   140009d32:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009d36:	add    rdx,0x8
   140009d3a:	add    rdx,rdx
   140009d3d:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009d40:	mov    DWORD PTR [rdi+0x80],eax
   140009d46:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009d4a:	mov    DWORD PTR [rdi+0x84],eax
   140009d50:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009d54:	mov    DWORD PTR [rdi+0x88],eax
   140009d5a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009d5e:	mov    DWORD PTR [rdi+0x8c],eax
   140009d64:	jmp    0x1400052d9
   140009d69:	mov    rdx,QWORD PTR [rbp+0x8]
   140009d6d:	mov    ecx,0x68
   140009d72:	call   0x140004140
   140009d77:	mov    r11,rax
   140009d7a:	test   rax,rax
   140009d7d:	je     0x1400097c1
   140009d83:	mov    ecx,DWORD PTR [rbp+0x10]
   140009d86:	mov    rdi,QWORD PTR [rbp+0x18]
   140009d8a:	lea    eax,[rcx+0x6]
   140009d8d:	movsxd r9,eax
   140009d90:	lea    eax,[rcx+0x4]
   140009d93:	mov    r9,QWORD PTR [rdi+r9*8]
   140009d97:	movsxd r8,eax
   140009d9a:	lea    eax,[rcx+0x2]
   140009d9d:	mov    r8,QWORD PTR [rdi+r8*8]
   140009da1:	movsxd rdx,eax
   140009da4:	mov    rcx,r11
   140009da7:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140009dab:	call   0x140002f90
   140009db0:	mov    rdi,rax
   140009db3:	jmp    0x1400097c4
   140009db8:	mov    rdx,QWORD PTR [rbp+0x8]
   140009dbc:	mov    ecx,0x78
   140009dc1:	call   0x140004140
   140009dc6:	mov    r11,rax
   140009dc9:	test   rax,rax
   140009dcc:	je     0x140009e00
   140009dce:	mov    ecx,DWORD PTR [rbp+0x10]
   140009dd1:	mov    rdi,QWORD PTR [rbp+0x18]
   140009dd5:	lea    eax,[rcx+0x7]
   140009dd8:	movsxd r9,eax
   140009ddb:	lea    eax,[rcx+0x5]
   140009dde:	mov    r9,QWORD PTR [rdi+r9*8]
   140009de2:	movsxd r8,eax
   140009de5:	lea    eax,[rcx+0x3]
   140009de8:	mov    r8,QWORD PTR [rdi+r8*8]
   140009dec:	movsxd rdx,eax
   140009def:	mov    rcx,r11
   140009df2:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140009df6:	call   0x140002ff0
   140009dfb:	mov    rdi,rax
   140009dfe:	jmp    0x140009e03
   140009e00:	mov    rdi,r12
   140009e03:	mov    rcx,QWORD PTR [rbp+0x28]
   140009e07:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009e0b:	add    rdx,rdx
   140009e0e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009e11:	mov    DWORD PTR [rdi+0x28],eax
   140009e14:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009e18:	mov    DWORD PTR [rdi+0x2c],eax
   140009e1b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009e1f:	mov    DWORD PTR [rdi+0x30],eax
   140009e22:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009e26:	mov    DWORD PTR [rdi+0x34],eax
   140009e29:	mov    rcx,QWORD PTR [rbp+0x28]
   140009e2d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009e31:	inc    rdx
   140009e34:	add    rdx,rdx
   140009e37:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009e3a:	mov    DWORD PTR [rdi+0x38],eax
   140009e3d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009e41:	mov    DWORD PTR [rdi+0x3c],eax
   140009e44:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009e48:	mov    DWORD PTR [rdi+0x40],eax
   140009e4b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009e4f:	mov    DWORD PTR [rdi+0x44],eax
   140009e52:	mov    rcx,QWORD PTR [rbp+0x28]
   140009e56:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009e5a:	add    rdx,0x2
   140009e5e:	add    rdx,rdx
   140009e61:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009e64:	mov    DWORD PTR [rdi+0x48],eax
   140009e67:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009e6b:	mov    DWORD PTR [rdi+0x4c],eax
   140009e6e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009e72:	mov    DWORD PTR [rdi+0x50],eax
   140009e75:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009e79:	mov    DWORD PTR [rdi+0x54],eax
   140009e7c:	mov    rcx,QWORD PTR [rbp+0x28]
   140009e80:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009e84:	add    rdx,0x4
   140009e88:	add    rdx,rdx
   140009e8b:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009e8e:	mov    DWORD PTR [rdi+0x58],eax
   140009e91:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009e95:	mov    DWORD PTR [rdi+0x5c],eax
   140009e98:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009e9c:	mov    DWORD PTR [rdi+0x60],eax
   140009e9f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009ea3:	mov    DWORD PTR [rdi+0x64],eax
   140009ea6:	mov    rcx,QWORD PTR [rbp+0x28]
   140009eaa:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009eae:	add    rdx,0x6
   140009eb2:	add    rdx,rdx
   140009eb5:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009eb8:	mov    DWORD PTR [rdi+0x68],eax
   140009ebb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009ebf:	mov    DWORD PTR [rdi+0x6c],eax
   140009ec2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009ec6:	mov    DWORD PTR [rdi+0x70],eax
   140009ec9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009ecd:	mov    DWORD PTR [rdi+0x74],eax
   140009ed0:	jmp    0x1400052d9
   140009ed5:	mov    rdx,QWORD PTR [rbp+0x8]
   140009ed9:	mov    ecx,0x50
   140009ede:	call   0x140004140
   140009ee3:	mov    rdi,rax
   140009ee6:	test   rax,rax
   140009ee9:	je     0x140009f10
   140009eeb:	lea    rcx,[rsp+0x360]
   140009ef3:	or     esi,0x40
   140009ef6:	mov    DWORD PTR [rsp+0x30],esi
   140009efa:	call   QWORD PTR [rip+0xb2e8]        # 0x1400151e8
   140009f00:	mov    rcx,rdi
   140009f03:	mov    rdx,rax
   140009f06:	call   0x140003050
   140009f0b:	mov    rdi,rax
   140009f0e:	jmp    0x140009f13
   140009f10:	mov    rdi,r12
   140009f13:	test   sil,0x40
   140009f17:	je     0x140007562
   140009f1d:	and    esi,0xffffffbf
   140009f20:	lea    rcx,[rsp+0x360]
   140009f28:	mov    DWORD PTR [rsp+0x30],esi
   140009f2c:	call   QWORD PTR [rip+0xb2ae]        # 0x1400151e0
   140009f32:	jmp    0x140007562
   140009f37:	mov    rdx,QWORD PTR [rbp+0x8]
   140009f3b:	mov    ecx,0x50
   140009f40:	call   0x140004140
   140009f45:	mov    rcx,rax
   140009f48:	test   rax,rax
   140009f4b:	je     0x140009f67
   140009f4d:	mov    eax,DWORD PTR [rbp+0x10]
   140009f50:	inc    eax
   140009f52:	movsxd rdx,eax
   140009f55:	shl    rdx,0x4
   140009f59:	add    rdx,QWORD PTR [rbp+0x30]
   140009f5d:	call   0x140003050
   140009f62:	mov    rdi,rax
   140009f65:	jmp    0x140009f6a
   140009f67:	mov    rdi,r12
   140009f6a:	mov    rcx,QWORD PTR [rbp+0x28]
   140009f6e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009f72:	add    rdx,rdx
   140009f75:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009f78:	mov    DWORD PTR [rdi+0x20],eax
   140009f7b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009f7f:	mov    DWORD PTR [rdi+0x24],eax
   140009f82:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009f86:	mov    DWORD PTR [rdi+0x28],eax
   140009f89:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009f8d:	mov    DWORD PTR [rdi+0x2c],eax
   140009f90:	mov    rcx,QWORD PTR [rbp+0x28]
   140009f94:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009f98:	inc    rdx
   140009f9b:	add    rdx,rdx
   140009f9e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140009fa1:	mov    DWORD PTR [rdi+0x30],eax
   140009fa4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140009fa8:	mov    DWORD PTR [rdi+0x34],eax
   140009fab:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140009faf:	mov    DWORD PTR [rdi+0x38],eax
   140009fb2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140009fb6:	mov    DWORD PTR [rdi+0x3c],eax
   140009fb9:	movsxd rdx,DWORD PTR [rbp+0x10]
   140009fbd:	add    rdx,0x2
   140009fc1:	jmp    0x14000758f
   140009fc6:	mov    rdx,QWORD PTR [rbp+0x8]
   140009fca:	mov    ecx,0x50
   140009fcf:	call   0x140004140
   140009fd4:	mov    rdi,rax
   140009fd7:	test   rax,rax
   140009fda:	je     0x14000a002
   140009fdc:	bts    esi,0x7
   140009fe0:	lea    rcx,[rsp+0x300]
   140009fe8:	mov    DWORD PTR [rsp+0x30],esi
   140009fec:	call   QWORD PTR [rip+0xb1f6]        # 0x1400151e8
   140009ff2:	mov    rcx,rdi
   140009ff5:	mov    rdx,rax
   140009ff8:	call   0x1400030d0
   140009ffd:	mov    rdi,rax
   14000a000:	jmp    0x14000a005
   14000a002:	mov    rdi,r12
   14000a005:	test   sil,sil
   14000a008:	jns    0x140007562
   14000a00e:	btr    esi,0x7
   14000a012:	lea    rcx,[rsp+0x300]
   14000a01a:	mov    DWORD PTR [rsp+0x30],esi
   14000a01e:	call   QWORD PTR [rip+0xb1bc]        # 0x1400151e0
   14000a024:	jmp    0x140007562
   14000a029:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a02d:	mov    ecx,0x50
   14000a032:	call   0x140004140
   14000a037:	mov    rcx,rax
   14000a03a:	test   rax,rax
   14000a03d:	je     0x140009f67
   14000a043:	mov    eax,DWORD PTR [rbp+0x10]
   14000a046:	inc    eax
   14000a048:	movsxd rdx,eax
   14000a04b:	shl    rdx,0x4
   14000a04f:	add    rdx,QWORD PTR [rbp+0x30]
   14000a053:	call   0x1400030d0
   14000a058:	mov    rdi,rax
   14000a05b:	jmp    0x140009f6a
   14000a060:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a064:	mov    ecx,0x38
   14000a069:	call   0x140004140
   14000a06e:	mov    rdi,rax
   14000a071:	test   rax,rax
   14000a074:	je     0x1400078d2
   14000a07a:	mov    eax,DWORD PTR [rbp+0x10]
   14000a07d:	mov    rdx,QWORD PTR [rbp+0x18]
   14000a081:	inc    eax
   14000a083:	movsxd rcx,eax
   14000a086:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000a08a:	mov    rcx,rdi
   14000a08d:	call   0x140003130
   14000a092:	mov    rdi,rax
   14000a095:	jmp    0x1400078d5
   14000a09a:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a09e:	mov    ecx,0x50
   14000a0a3:	call   0x140004140
   14000a0a8:	mov    r11,rax
   14000a0ab:	test   rax,rax
   14000a0ae:	je     0x14000a0d8
   14000a0b0:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a0b3:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a0b7:	lea    eax,[rcx+0x4]
   14000a0ba:	movsxd r8,eax
   14000a0bd:	lea    eax,[rcx+0x2]
   14000a0c0:	mov    rcx,r11
   14000a0c3:	mov    r8,QWORD PTR [rdi+r8*8]
   14000a0c7:	movsxd rdx,eax
   14000a0ca:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14000a0ce:	call   0x140003170
   14000a0d3:	mov    rdi,rax
   14000a0d6:	jmp    0x14000a0db
   14000a0d8:	mov    rdi,r12
   14000a0db:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a0df:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a0e3:	add    rdx,rdx
   14000a0e6:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a0e9:	mov    DWORD PTR [rdi+0x20],eax
   14000a0ec:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a0f0:	mov    DWORD PTR [rdi+0x24],eax
   14000a0f3:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a0f7:	mov    DWORD PTR [rdi+0x28],eax
   14000a0fa:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a0fe:	mov    DWORD PTR [rdi+0x2c],eax
   14000a101:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a105:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a109:	inc    rdx
   14000a10c:	add    rdx,rdx
   14000a10f:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a112:	mov    DWORD PTR [rdi+0x30],eax
   14000a115:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a119:	mov    DWORD PTR [rdi+0x34],eax
   14000a11c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a120:	mov    DWORD PTR [rdi+0x38],eax
   14000a123:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a127:	mov    DWORD PTR [rdi+0x3c],eax
   14000a12a:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a12e:	add    rdx,0x3
   14000a132:	jmp    0x14000758f
   14000a137:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a13b:	mov    ecx,0x50
   14000a140:	call   0x140004140
   14000a145:	mov    r11,rax
   14000a148:	test   rax,rax
   14000a14b:	je     0x14000a0d8
   14000a14d:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a150:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a154:	lea    eax,[rcx+0x4]
   14000a157:	movsxd r8,eax
   14000a15a:	lea    eax,[rcx+0x2]
   14000a15d:	mov    rcx,r11
   14000a160:	mov    r8,QWORD PTR [rdi+r8*8]
   14000a164:	movsxd rdx,eax
   14000a167:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14000a16b:	call   0x140003220
   14000a170:	mov    rdi,rax
   14000a173:	jmp    0x14000a0db
   14000a178:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a17c:	mov    ecx,0x48
   14000a181:	call   0x140004140
   14000a186:	mov    rdi,rax
   14000a189:	test   rax,rax
   14000a18c:	je     0x14000a1da
   14000a18e:	mov    rax,QWORD PTR [rbp+0x18]
   14000a192:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a196:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000a19b:	lea    rax,[rip+0xc576]        # 0x140016718
   14000a1a2:	mov    QWORD PTR [rdi],rax
   14000a1a5:	mov    QWORD PTR [rdi+0x10],rdx
   14000a1a9:	mov    QWORD PTR [rdi+0x18],r12
   14000a1ad:	mov    QWORD PTR [rdi+0x20],r12
   14000a1b1:	mov    DWORD PTR [rdi+0x28],r12d
   14000a1b5:	mov    DWORD PTR [rdi+0x2c],r12d
   14000a1b9:	mov    DWORD PTR [rdi+0x30],r12d
   14000a1bd:	mov    DWORD PTR [rdi+0x34],r12d
   14000a1c1:	mov    DWORD PTR [rdi+0x38],r12d
   14000a1c5:	mov    DWORD PTR [rdi+0x3c],r12d
   14000a1c9:	mov    DWORD PTR [rdi+0x40],r12d
   14000a1cd:	mov    DWORD PTR [rdi+0x44],r12d
   14000a1d1:	mov    DWORD PTR [rdi+0x8],0x8
   14000a1d8:	jmp    0x14000a1dd
   14000a1da:	mov    rdi,r12
   14000a1dd:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a1e1:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a1e5:	add    rdx,rdx
   14000a1e8:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a1eb:	mov    DWORD PTR [rdi+0x28],eax
   14000a1ee:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a1f2:	mov    DWORD PTR [rdi+0x2c],eax
   14000a1f5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a1f9:	mov    DWORD PTR [rdi+0x30],eax
   14000a1fc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a200:	mov    DWORD PTR [rdi+0x34],eax
   14000a203:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a207:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a20b:	add    rdx,0x2
   14000a20f:	add    rdx,rdx
   14000a212:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a215:	mov    DWORD PTR [rdi+0x38],eax
   14000a218:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a21c:	mov    DWORD PTR [rdi+0x3c],eax
   14000a21f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a223:	mov    DWORD PTR [rdi+0x40],eax
   14000a226:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a22a:	mov    DWORD PTR [rdi+0x44],eax
   14000a22d:	jmp    0x1400052d9
   14000a232:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a236:	mov    ecx,0x48
   14000a23b:	call   0x140004140
   14000a240:	mov    r11,rax
   14000a243:	test   rax,rax
   14000a246:	je     0x14000a27a
   14000a248:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a24b:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a24f:	lea    eax,[rcx+0x3]
   14000a252:	movsxd r9,eax
   14000a255:	lea    eax,[rcx+0x2]
   14000a258:	mov    r9,QWORD PTR [rdi+r9*8]
   14000a25c:	movsxd r8,eax
   14000a25f:	lea    eax,[rcx+0x1]
   14000a262:	mov    r8,QWORD PTR [rdi+r8*8]
   14000a266:	movsxd rdx,eax
   14000a269:	mov    rcx,r11
   14000a26c:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14000a270:	call   0x1400031e0
   14000a275:	mov    rdi,rax
   14000a278:	jmp    0x14000a27d
   14000a27a:	mov    rdi,r12
   14000a27d:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a281:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a285:	add    rdx,rdx
   14000a288:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a28b:	mov    DWORD PTR [rdi+0x28],eax
   14000a28e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a292:	mov    DWORD PTR [rdi+0x2c],eax
   14000a295:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a299:	mov    DWORD PTR [rdi+0x30],eax
   14000a29c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a2a0:	mov    DWORD PTR [rdi+0x34],eax
   14000a2a3:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a2a7:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a2ab:	add    rdx,0x4
   14000a2af:	add    rdx,rdx
   14000a2b2:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a2b5:	mov    DWORD PTR [rdi+0x38],eax
   14000a2b8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a2bc:	mov    DWORD PTR [rdi+0x3c],eax
   14000a2bf:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a2c3:	mov    DWORD PTR [rdi+0x40],eax
   14000a2c6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a2ca:	mov    DWORD PTR [rdi+0x44],eax
   14000a2cd:	jmp    0x1400052d9
   14000a2d2:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a2d6:	mov    ecx,0x20
   14000a2db:	call   0x140004140
   14000a2e0:	mov    rdi,rax
   14000a2e3:	test   rax,rax
   14000a2e6:	je     0x1400052d6
   14000a2ec:	mov    rax,QWORD PTR [rbp+0x18]
   14000a2f0:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a2f4:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000a2f8:	lea    rax,[rip+0xc509]        # 0x140016808
   14000a2ff:	mov    QWORD PTR [rdi],rax
   14000a302:	mov    QWORD PTR [rdi+0x10],rdx
   14000a306:	mov    QWORD PTR [rdi+0x18],rdi
   14000a30a:	mov    DWORD PTR [rdi+0x8],0xa
   14000a311:	jmp    0x1400052d9
   14000a316:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a31a:	mov    ecx,0x20
   14000a31f:	call   0x140004140
   14000a324:	mov    rdi,rax
   14000a327:	test   rax,rax
   14000a32a:	je     0x1400052d6
   14000a330:	mov    rax,QWORD PTR [rbp+0x18]
   14000a334:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a338:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000a33d:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000a341:	lea    rax,[rip+0xc4c0]        # 0x140016808
   14000a348:	mov    QWORD PTR [rdi],rax
   14000a34b:	mov    QWORD PTR [rdi+0x10],rdx
   14000a34f:	mov    DWORD PTR [rdi+0x8],0xa
   14000a356:	mov    rax,QWORD PTR [rcx+0x18]
   14000a35a:	mov    QWORD PTR [rdi+0x18],rax
   14000a35e:	mov    QWORD PTR [rcx+0x18],rdi
   14000a362:	jmp    0x1400052d9
   14000a367:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a36b:	mov    ecx,0x40
   14000a370:	call   0x140004140
   14000a375:	mov    r11,rax
   14000a378:	test   rax,rax
   14000a37b:	je     0x14000a3a5
   14000a37d:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a380:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a384:	lea    eax,[rcx+0x3]
   14000a387:	movsxd r8,eax
   14000a38a:	lea    eax,[rcx+0x1]
   14000a38d:	mov    rcx,r11
   14000a390:	mov    r8,QWORD PTR [rdi+r8*8]
   14000a394:	movsxd rdx,eax
   14000a397:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14000a39b:	call   0x1400032a0
   14000a3a0:	mov    rdi,rax
   14000a3a3:	jmp    0x14000a3a8
   14000a3a5:	mov    rdi,r12
   14000a3a8:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a3ac:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a3b0:	add    rdx,rdx
   14000a3b3:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a3b6:	mov    DWORD PTR [rdi+0x20],eax
   14000a3b9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a3bd:	mov    DWORD PTR [rdi+0x24],eax
   14000a3c0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a3c4:	mov    DWORD PTR [rdi+0x28],eax
   14000a3c7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a3cb:	mov    DWORD PTR [rdi+0x2c],eax
   14000a3ce:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a3d2:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a3d6:	add    rdx,0x2
   14000a3da:	add    rdx,rdx
   14000a3dd:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a3e0:	mov    DWORD PTR [rdi+0x30],eax
   14000a3e3:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a3e7:	mov    DWORD PTR [rdi+0x34],eax
   14000a3ea:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a3ee:	mov    DWORD PTR [rdi+0x38],eax
   14000a3f1:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a3f5:	mov    DWORD PTR [rdi+0x3c],eax
   14000a3f8:	jmp    0x1400052d9
   14000a3fd:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a401:	mov    ecx,0x38
   14000a406:	call   0x140004140
   14000a40b:	mov    rdi,rax
   14000a40e:	test   rax,rax
   14000a411:	je     0x14000a431
   14000a413:	mov    eax,DWORD PTR [rbp+0x10]
   14000a416:	mov    rdx,QWORD PTR [rbp+0x18]
   14000a41a:	add    eax,0x2
   14000a41d:	movsxd rcx,eax
   14000a420:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000a424:	mov    rcx,rdi
   14000a427:	call   0x140003330
   14000a42c:	mov    rdi,rax
   14000a42f:	jmp    0x14000a434
   14000a431:	mov    rdi,r12
   14000a434:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a438:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a43c:	add    rdx,rdx
   14000a43f:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a442:	mov    DWORD PTR [rdi+0x18],eax
   14000a445:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a449:	mov    DWORD PTR [rdi+0x1c],eax
   14000a44c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a450:	mov    DWORD PTR [rdi+0x20],eax
   14000a453:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a457:	mov    DWORD PTR [rdi+0x24],eax
   14000a45a:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a45e:	inc    rdx
   14000a461:	jmp    0x1400059d5
   14000a466:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a46a:	mov    ecx,0x48
   14000a46f:	call   0x140004140
   14000a474:	mov    rdi,rax
   14000a477:	test   rax,rax
   14000a47a:	je     0x14000a4a5
   14000a47c:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a480:	mov    r8,QWORD PTR [rbp+0x18]
   14000a484:	lea    eax,[rcx+0x2]
   14000a487:	mov    rdx,rcx
   14000a48a:	mov    rcx,rdi
   14000a48d:	cdqe   
   14000a48f:	shl    rdx,0x4
   14000a493:	mov    r8,QWORD PTR [r8+rax*8]
   14000a497:	add    rdx,QWORD PTR [rbp+0x30]
   14000a49b:	call   0x1400033c0
   14000a4a0:	mov    rdi,rax
   14000a4a3:	jmp    0x14000a4a8
   14000a4a5:	mov    rdi,r12
   14000a4a8:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a4ac:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a4b0:	add    rdx,rdx
   14000a4b3:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a4b6:	mov    DWORD PTR [rdi+0x28],eax
   14000a4b9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a4bd:	mov    DWORD PTR [rdi+0x2c],eax
   14000a4c0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a4c4:	mov    DWORD PTR [rdi+0x30],eax
   14000a4c7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a4cb:	mov    DWORD PTR [rdi+0x34],eax
   14000a4ce:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a4d2:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a4d6:	inc    rdx
   14000a4d9:	add    rdx,rdx
   14000a4dc:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a4df:	mov    DWORD PTR [rdi+0x38],eax
   14000a4e2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a4e6:	mov    DWORD PTR [rdi+0x3c],eax
   14000a4e9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a4ed:	mov    DWORD PTR [rdi+0x40],eax
   14000a4f0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a4f4:	mov    DWORD PTR [rdi+0x44],eax
   14000a4f7:	jmp    0x1400052d9
   14000a4fc:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a500:	mov    ecx,0x38
   14000a505:	call   0x140004140
   14000a50a:	mov    rdi,rax
   14000a50d:	test   rax,rax
   14000a510:	je     0x1400078d2
   14000a516:	mov    eax,DWORD PTR [rbp+0x10]
   14000a519:	mov    rdx,QWORD PTR [rbp+0x18]
   14000a51d:	inc    eax
   14000a51f:	movsxd rcx,eax
   14000a522:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000a526:	mov    rcx,rdi
   14000a529:	call   0x140003440
   14000a52e:	mov    rdi,rax
   14000a531:	jmp    0x1400078d5
   14000a536:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a53a:	mov    ecx,0x38
   14000a53f:	call   0x140004140
   14000a544:	mov    r11,rax
   14000a547:	test   rax,rax
   14000a54a:	je     0x14000a595
   14000a54c:	mov    rax,QWORD PTR [rbp+0x18]
   14000a550:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a554:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14000a559:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000a55e:	lea    rax,[rip+0xc483]        # 0x1400169e8
   14000a565:	mov    QWORD PTR [r11],rax
   14000a568:	mov    QWORD PTR [r11+0x10],rdx
   14000a56c:	mov    QWORD PTR [r11+0x18],rdi
   14000a570:	mov    QWORD PTR [r11+0x20],r12
   14000a574:	mov    DWORD PTR [r11+0x28],r12d
   14000a578:	mov    DWORD PTR [r11+0x2c],r12d
   14000a57c:	mov    DWORD PTR [r11+0x30],r12d
   14000a580:	mov    DWORD PTR [r11+0x34],r12d
   14000a584:	mov    DWORD PTR [r11+0x8],0x44
   14000a58c:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a590:	jmp    0x140005c01
   14000a595:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a599:	mov    r11,r12
   14000a59c:	jmp    0x140005c01
   14000a5a1:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a5a5:	mov    ecx,0x38
   14000a5aa:	call   0x140004140
   14000a5af:	mov    r11,rax
   14000a5b2:	test   rax,rax
   14000a5b5:	je     0x14000a595
   14000a5b7:	mov    rax,QWORD PTR [rbp+0x18]
   14000a5bb:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a5bf:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14000a5c4:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000a5c9:	lea    rax,[rip+0xc418]        # 0x1400169e8
   14000a5d0:	mov    QWORD PTR [r11],rax
   14000a5d3:	mov    QWORD PTR [r11+0x10],rdx
   14000a5d7:	mov    QWORD PTR [r11+0x18],r12
   14000a5db:	mov    QWORD PTR [r11+0x20],rdi
   14000a5df:	jmp    0x14000a574
   14000a5e1:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a5e5:	mov    ecx,0x38
   14000a5ea:	call   0x140004140
   14000a5ef:	mov    r11,rax
   14000a5f2:	test   rax,rax
   14000a5f5:	je     0x14000a595
   14000a5f7:	mov    rax,QWORD PTR [rbp+0x18]
   14000a5fb:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a5ff:	mov    rdi,QWORD PTR [rax+rcx*8+0x18]
   14000a604:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14000a609:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   14000a60e:	lea    rax,[rip+0xc3d3]        # 0x1400169e8
   14000a615:	mov    QWORD PTR [r11],rax
   14000a618:	mov    QWORD PTR [r11+0x10],rcx
   14000a61c:	mov    QWORD PTR [r11+0x18],rdx
   14000a620:	mov    QWORD PTR [r11+0x20],rdi
   14000a624:	jmp    0x14000a574
   14000a629:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a62d:	mov    ecx,0x68
   14000a632:	call   0x140004140
   14000a637:	mov    r11,rax
   14000a63a:	test   rax,rax
   14000a63d:	je     0x14000a66b
   14000a63f:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a642:	mov    r8,QWORD PTR [rbp+0x18]
   14000a646:	lea    eax,[rcx+0x4]
   14000a649:	movsxd rdi,eax
   14000a64c:	lea    eax,[rcx+0x2]
   14000a64f:	mov    rcx,r11
   14000a652:	mov    r8,QWORD PTR [r8+rdi*8]
   14000a656:	movsxd rdx,eax
   14000a659:	shl    rdx,0x4
   14000a65d:	add    rdx,QWORD PTR [rbp+0x30]
   14000a661:	call   0x140003480
   14000a666:	mov    rdi,rax
   14000a669:	jmp    0x14000a66e
   14000a66b:	mov    rdi,r12
   14000a66e:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a672:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a676:	add    rdx,rdx
   14000a679:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a67c:	mov    DWORD PTR [rdi+0x28],eax
   14000a67f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a683:	mov    DWORD PTR [rdi+0x2c],eax
   14000a686:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a68a:	mov    DWORD PTR [rdi+0x30],eax
   14000a68d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a691:	mov    DWORD PTR [rdi+0x34],eax
   14000a694:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a698:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a69c:	inc    rdx
   14000a69f:	add    rdx,rdx
   14000a6a2:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a6a5:	mov    DWORD PTR [rdi+0x38],eax
   14000a6a8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a6ac:	mov    DWORD PTR [rdi+0x3c],eax
   14000a6af:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a6b3:	mov    DWORD PTR [rdi+0x40],eax
   14000a6b6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a6ba:	mov    DWORD PTR [rdi+0x44],eax
   14000a6bd:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a6c1:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a6c5:	add    rdx,0x2
   14000a6c9:	add    rdx,rdx
   14000a6cc:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a6cf:	mov    DWORD PTR [rdi+0x48],eax
   14000a6d2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a6d6:	mov    DWORD PTR [rdi+0x4c],eax
   14000a6d9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a6dd:	mov    DWORD PTR [rdi+0x50],eax
   14000a6e0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a6e4:	mov    DWORD PTR [rdi+0x54],eax
   14000a6e7:	jmp    0x140005ed4
   14000a6ec:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a6f0:	mov    ecx,0x28
   14000a6f5:	call   0x140004140
   14000a6fa:	mov    rdi,rax
   14000a6fd:	test   rax,rax
   14000a700:	je     0x14000724b
   14000a706:	mov    rax,QWORD PTR [rbp+0x18]
   14000a70a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000a70e:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000a713:	lea    rax,[rip+0xc27e]        # 0x140016998
   14000a71a:	mov    QWORD PTR [rdi],rax
   14000a71d:	mov    QWORD PTR [rdi+0x10],rdx
   14000a721:	mov    DWORD PTR [rdi+0x18],r12d
   14000a725:	mov    DWORD PTR [rdi+0x1c],r12d
   14000a729:	mov    DWORD PTR [rdi+0x20],r12d
   14000a72d:	mov    DWORD PTR [rdi+0x24],r12d
   14000a731:	mov    DWORD PTR [rdi+0x8],0x19
   14000a738:	jmp    0x14000724e
   14000a73d:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a741:	mov    ecx,0x30
   14000a746:	call   0x140004140
   14000a74b:	test   rax,rax
   14000a74e:	je     0x14000a75d
   14000a750:	mov    rcx,rax
   14000a753:	call   0x140003920
   14000a758:	mov    rdi,rax
   14000a75b:	jmp    0x14000a760
   14000a75d:	mov    rdi,r12
   14000a760:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a764:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a768:	add    rdx,rdx
   14000a76b:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a76e:	mov    DWORD PTR [rdi+0x10],eax
   14000a771:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a775:	mov    DWORD PTR [rdi+0x14],eax
   14000a778:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a77c:	mov    DWORD PTR [rdi+0x18],eax
   14000a77f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a783:	mov    DWORD PTR [rdi+0x1c],eax
   14000a786:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a78a:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a78e:	inc    rdx
   14000a791:	add    rdx,rdx
   14000a794:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a797:	mov    DWORD PTR [rdi+0x20],eax
   14000a79a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a79e:	mov    DWORD PTR [rdi+0x24],eax
   14000a7a1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a7a5:	mov    DWORD PTR [rdi+0x28],eax
   14000a7a8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a7ac:	mov    DWORD PTR [rdi+0x2c],eax
   14000a7af:	jmp    0x1400052d9
   14000a7b4:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a7b8:	mov    ecx,0x90
   14000a7bd:	call   0x140004140
   14000a7c2:	mov    r11,rax
   14000a7c5:	test   rax,rax
   14000a7c8:	je     0x14000a800
   14000a7ca:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a7cd:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a7d1:	lea    eax,[rcx+0x6]
   14000a7d4:	movsxd r9,eax
   14000a7d7:	lea    eax,[rcx+0x3]
   14000a7da:	mov    r9,QWORD PTR [rdi+r9*8]
   14000a7de:	movsxd r8,eax
   14000a7e1:	lea    eax,[rcx+0x1]
   14000a7e4:	mov    r8,QWORD PTR [rdi+r8*8]
   14000a7e8:	movsxd rdx,eax
   14000a7eb:	mov    rcx,r11
   14000a7ee:	shl    rdx,0x4
   14000a7f2:	add    rdx,QWORD PTR [rbp+0x30]
   14000a7f6:	call   0x140003680
   14000a7fb:	mov    rdi,rax
   14000a7fe:	jmp    0x14000a803
   14000a800:	mov    rdi,r12
   14000a803:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a807:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a80b:	add    rdx,rdx
   14000a80e:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a811:	mov    DWORD PTR [rdi+0x30],eax
   14000a814:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a818:	mov    DWORD PTR [rdi+0x34],eax
   14000a81b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a81f:	mov    DWORD PTR [rdi+0x38],eax
   14000a822:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a826:	mov    DWORD PTR [rdi+0x3c],eax
   14000a829:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a82d:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a831:	inc    rdx
   14000a834:	add    rdx,rdx
   14000a837:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a83a:	mov    DWORD PTR [rdi+0x40],eax
   14000a83d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a841:	mov    DWORD PTR [rdi+0x44],eax
   14000a844:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a848:	mov    DWORD PTR [rdi+0x48],eax
   14000a84b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a84f:	mov    DWORD PTR [rdi+0x4c],eax
   14000a852:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a856:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a85a:	add    rdx,0x2
   14000a85e:	add    rdx,rdx
   14000a861:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a864:	mov    DWORD PTR [rdi+0x50],eax
   14000a867:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a86b:	mov    DWORD PTR [rdi+0x54],eax
   14000a86e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a872:	mov    DWORD PTR [rdi+0x58],eax
   14000a875:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a879:	mov    DWORD PTR [rdi+0x5c],eax
   14000a87c:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a880:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a884:	add    rdx,0x4
   14000a888:	add    rdx,rdx
   14000a88b:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a88e:	mov    DWORD PTR [rdi+0x60],eax
   14000a891:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a895:	mov    DWORD PTR [rdi+0x64],eax
   14000a898:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a89c:	mov    DWORD PTR [rdi+0x68],eax
   14000a89f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a8a3:	mov    DWORD PTR [rdi+0x6c],eax
   14000a8a6:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a8aa:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a8ae:	add    rdx,0x5
   14000a8b2:	add    rdx,rdx
   14000a8b5:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a8b8:	mov    DWORD PTR [rdi+0x70],eax
   14000a8bb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a8bf:	mov    DWORD PTR [rdi+0x74],eax
   14000a8c2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a8c6:	mov    DWORD PTR [rdi+0x78],eax
   14000a8c9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a8cd:	mov    DWORD PTR [rdi+0x7c],eax
   14000a8d0:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a8d4:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a8d8:	add    rdx,0x7
   14000a8dc:	add    rdx,rdx
   14000a8df:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a8e2:	mov    DWORD PTR [rdi+0x80],eax
   14000a8e8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a8ec:	mov    DWORD PTR [rdi+0x84],eax
   14000a8f2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a8f6:	mov    DWORD PTR [rdi+0x88],eax
   14000a8fc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a900:	mov    DWORD PTR [rdi+0x8c],eax
   14000a906:	jmp    0x1400052d9
   14000a90b:	mov    rdx,QWORD PTR [rbp+0x8]
   14000a90f:	mov    ecx,0x90
   14000a914:	call   0x140004140
   14000a919:	mov    r11,rax
   14000a91c:	test   rax,rax
   14000a91f:	je     0x14000a957
   14000a921:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a924:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a928:	lea    eax,[rcx+0x6]
   14000a92b:	movsxd r9,eax
   14000a92e:	lea    eax,[rcx+0x3]
   14000a931:	mov    r9,QWORD PTR [rdi+r9*8]
   14000a935:	movsxd r8,eax
   14000a938:	lea    eax,[rcx+0x1]
   14000a93b:	mov    r8,QWORD PTR [rdi+r8*8]
   14000a93f:	movsxd rdx,eax
   14000a942:	mov    rcx,r11
   14000a945:	shl    rdx,0x4
   14000a949:	add    rdx,QWORD PTR [rbp+0x30]
   14000a94d:	call   0x1400035a0
   14000a952:	mov    rdi,rax
   14000a955:	jmp    0x14000a95a
   14000a957:	mov    rdi,r12
   14000a95a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a95e:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a962:	add    rdx,rdx
   14000a965:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a968:	mov    DWORD PTR [rdi+0x30],eax
   14000a96b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a96f:	mov    DWORD PTR [rdi+0x34],eax
   14000a972:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a976:	mov    DWORD PTR [rdi+0x38],eax
   14000a979:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a97d:	mov    DWORD PTR [rdi+0x3c],eax
   14000a980:	mov    eax,DWORD PTR [rbp+0x10]
   14000a983:	inc    eax
   14000a985:	movsxd rcx,eax
   14000a988:	shl    rcx,0x4
   14000a98c:	add    rcx,QWORD PTR [rbp+0x30]
   14000a990:	call   QWORD PTR [rip+0xa842]        # 0x1400151d8
   14000a996:	test   al,al
   14000a998:	jne    0x14000a9c3
   14000a99a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a99e:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a9a2:	inc    rdx
   14000a9a5:	add    rdx,rdx
   14000a9a8:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a9ab:	mov    DWORD PTR [rdi+0x40],eax
   14000a9ae:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a9b2:	mov    DWORD PTR [rdi+0x44],eax
   14000a9b5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a9b9:	mov    DWORD PTR [rdi+0x48],eax
   14000a9bc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a9c0:	mov    DWORD PTR [rdi+0x4c],eax
   14000a9c3:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a9c7:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a9cb:	add    rdx,0x2
   14000a9cf:	add    rdx,rdx
   14000a9d2:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a9d5:	mov    DWORD PTR [rdi+0x50],eax
   14000a9d8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000a9dc:	mov    DWORD PTR [rdi+0x54],eax
   14000a9df:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000a9e3:	mov    DWORD PTR [rdi+0x58],eax
   14000a9e6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000a9ea:	mov    DWORD PTR [rdi+0x5c],eax
   14000a9ed:	mov    rcx,QWORD PTR [rbp+0x28]
   14000a9f1:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000a9f5:	add    rdx,0x4
   14000a9f9:	add    rdx,rdx
   14000a9fc:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000a9ff:	mov    DWORD PTR [rdi+0x60],eax
   14000aa02:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000aa06:	mov    DWORD PTR [rdi+0x64],eax
   14000aa09:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000aa0d:	mov    DWORD PTR [rdi+0x68],eax
   14000aa10:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000aa14:	mov    DWORD PTR [rdi+0x6c],eax
   14000aa17:	mov    rcx,QWORD PTR [rbp+0x28]
   14000aa1b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000aa1f:	add    rdx,0x5
   14000aa23:	add    rdx,rdx
   14000aa26:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000aa29:	mov    DWORD PTR [rdi+0x70],eax
   14000aa2c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000aa30:	mov    DWORD PTR [rdi+0x74],eax
   14000aa33:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000aa37:	mov    DWORD PTR [rdi+0x78],eax
   14000aa3a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000aa3e:	mov    DWORD PTR [rdi+0x7c],eax
   14000aa41:	mov    rcx,QWORD PTR [rbp+0x28]
   14000aa45:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000aa49:	add    rdx,0x7
   14000aa4d:	add    rdx,rdx
   14000aa50:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000aa53:	mov    DWORD PTR [rdi+0x80],eax
   14000aa59:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000aa5d:	mov    DWORD PTR [rdi+0x84],eax
   14000aa63:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000aa67:	mov    DWORD PTR [rdi+0x88],eax
   14000aa6d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000aa71:	mov    DWORD PTR [rdi+0x8c],eax
   14000aa77:	jmp    0x1400052d9
   14000aa7c:	mov    rdx,QWORD PTR [rbp+0x8]
   14000aa80:	mov    ecx,0x90
   14000aa85:	call   0x140004140
   14000aa8a:	mov    r13,rax
   14000aa8d:	test   rax,rax
   14000aa90:	je     0x14000aad7
   14000aa92:	mov    ecx,DWORD PTR [rbp+0x10]
   14000aa95:	bts    esi,0x8
   14000aa99:	lea    eax,[rcx+0x5]
   14000aa9c:	mov    DWORD PTR [rsp+0x30],esi
   14000aaa0:	mov    rsi,QWORD PTR [rbp+0x18]
   14000aaa4:	movsxd rbx,eax
   14000aaa7:	lea    eax,[rcx+0x2]
   14000aaaa:	lea    rcx,[rsp+0x2f0]
   14000aab2:	movsxd rdi,eax
   14000aab5:	call   QWORD PTR [rip+0xa72d]        # 0x1400151e8
   14000aabb:	mov    r9,QWORD PTR [rsi+rbx*8]
   14000aabf:	mov    r8,QWORD PTR [rsi+rdi*8]
   14000aac3:	mov    rcx,r13
   14000aac6:	mov    rdx,rax
   14000aac9:	call   0x1400035a0
   14000aace:	mov    esi,DWORD PTR [rsp+0x30]
   14000aad2:	mov    rdi,rax
   14000aad5:	jmp    0x14000aada
   14000aad7:	mov    rdi,r12
   14000aada:	bt     esi,0x8
   14000aade:	jae    0x14000aaf6
   14000aae0:	btr    esi,0x8
   14000aae4:	lea    rcx,[rsp+0x2f0]
   14000aaec:	mov    DWORD PTR [rsp+0x30],esi
   14000aaf0:	call   QWORD PTR [rip+0xa6ea]        # 0x1400151e0
   14000aaf6:	mov    rcx,QWORD PTR [rbp+0x28]
   14000aafa:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000aafe:	add    rdx,rdx
   14000ab01:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ab04:	mov    DWORD PTR [rdi+0x30],eax
   14000ab07:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ab0b:	mov    DWORD PTR [rdi+0x34],eax
   14000ab0e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ab12:	mov    DWORD PTR [rdi+0x38],eax
   14000ab15:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ab19:	mov    DWORD PTR [rdi+0x3c],eax
   14000ab1c:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ab20:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ab24:	inc    rdx
   14000ab27:	add    rdx,rdx
   14000ab2a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ab2d:	mov    DWORD PTR [rdi+0x50],eax
   14000ab30:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ab34:	mov    DWORD PTR [rdi+0x54],eax
   14000ab37:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ab3b:	mov    DWORD PTR [rdi+0x58],eax
   14000ab3e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ab42:	mov    DWORD PTR [rdi+0x5c],eax
   14000ab45:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ab49:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ab4d:	add    rdx,0x3
   14000ab51:	add    rdx,rdx
   14000ab54:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ab57:	mov    DWORD PTR [rdi+0x60],eax
   14000ab5a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ab5e:	mov    DWORD PTR [rdi+0x64],eax
   14000ab61:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ab65:	mov    DWORD PTR [rdi+0x68],eax
   14000ab68:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ab6c:	mov    DWORD PTR [rdi+0x6c],eax
   14000ab6f:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ab73:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ab77:	add    rdx,0x4
   14000ab7b:	add    rdx,rdx
   14000ab7e:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ab81:	mov    DWORD PTR [rdi+0x70],eax
   14000ab84:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ab88:	mov    DWORD PTR [rdi+0x74],eax
   14000ab8b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ab8f:	mov    DWORD PTR [rdi+0x78],eax
   14000ab92:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ab96:	mov    DWORD PTR [rdi+0x7c],eax
   14000ab99:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ab9d:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000aba1:	add    rdx,0x6
   14000aba5:	add    rdx,rdx
   14000aba8:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000abab:	mov    DWORD PTR [rdi+0x80],eax
   14000abb1:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000abb5:	mov    DWORD PTR [rdi+0x84],eax
   14000abbb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000abbf:	mov    DWORD PTR [rdi+0x88],eax
   14000abc5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000abc9:	mov    DWORD PTR [rdi+0x8c],eax
   14000abcf:	jmp    0x1400052d9
   14000abd4:	mov    rdx,QWORD PTR [rbp+0x8]
   14000abd8:	mov    ecx,0x48
   14000abdd:	call   0x140004140
   14000abe2:	test   rax,rax
   14000abe5:	je     0x14000ac00
   14000abe7:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000abeb:	mov    rcx,rax
   14000abee:	shl    rdx,0x4
   14000abf2:	add    rdx,QWORD PTR [rbp+0x30]
   14000abf6:	call   0x140003730
   14000abfb:	mov    rdi,rax
   14000abfe:	jmp    0x14000ac03
   14000ac00:	mov    rdi,r12
   14000ac03:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ac07:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ac0b:	add    rdx,rdx
   14000ac0e:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ac11:	mov    DWORD PTR [rdi+0x38],eax
   14000ac14:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ac18:	mov    DWORD PTR [rdi+0x3c],eax
   14000ac1b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ac1f:	mov    DWORD PTR [rdi+0x40],eax
   14000ac22:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ac26:	mov    DWORD PTR [rdi+0x44],eax
   14000ac29:	jmp    0x1400052d9
   14000ac2e:	mov    rdx,QWORD PTR [rbp+0x8]
   14000ac32:	mov    ecx,0x48
   14000ac37:	call   0x140004140
   14000ac3c:	mov    rdi,rax
   14000ac3f:	test   rax,rax
   14000ac42:	je     0x1400082f9
   14000ac48:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ac4c:	mov    rdx,QWORD PTR [rbp+0x18]
   14000ac50:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000ac54:	lea    eax,[rcx+0x2]
   14000ac57:	mov    rcx,rdi
   14000ac5a:	movsxd r8,eax
   14000ac5d:	shl    r8,0x4
   14000ac61:	add    r8,QWORD PTR [rbp+0x30]
   14000ac65:	call   0x140003790
   14000ac6a:	mov    rdi,rax
   14000ac6d:	jmp    0x1400082fc
   14000ac72:	mov    rax,QWORD PTR [rbp+0x18]
   14000ac76:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000ac7a:	mov    rdi,QWORD PTR [rdx+0x20]
   14000ac7e:	mov    QWORD PTR [rdx+0x20],r12
   14000ac82:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ac86:	mov    rax,QWORD PTR [rbp+0x18]
   14000ac8a:	mov    QWORD PTR [rax+rcx*8],rdi
   14000ac8e:	jmp    0x14000ae40
   14000ac93:	mov    rdx,QWORD PTR [rbp+0x8]
   14000ac97:	mov    ecx,0x18
   14000ac9c:	call   0x140004140
   14000aca1:	mov    rdi,rax
   14000aca4:	test   rax,rax
   14000aca7:	je     0x1400052d6
   14000acad:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000acb1:	mov    rax,QWORD PTR [rbp+0x18]
   14000acb5:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000acb9:	lea    rcx,[rip+0xbeb8]        # 0x140016b78
   14000acc0:	mov    rax,QWORD PTR [rdx+0x18]
   14000acc4:	mov    QWORD PTR [rdx+0x18],r12
   14000acc8:	mov    QWORD PTR [rdi],rcx
   14000accb:	mov    QWORD PTR [rdi+0x10],rax
   14000accf:	mov    DWORD PTR [rdi+0x8],0x1d
   14000acd6:	jmp    0x1400052d9
   14000acdb:	mov    rdx,QWORD PTR [rbp+0x8]
   14000acdf:	mov    ecx,0x18
   14000ace4:	call   0x140004140
   14000ace9:	mov    rdi,rax
   14000acec:	test   rax,rax
   14000acef:	je     0x1400052d6
   14000acf5:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000acf9:	mov    rax,QWORD PTR [rbp+0x18]
   14000acfd:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000ad01:	lea    rcx,[rip+0xbec0]        # 0x140016bc8
   14000ad08:	mov    rax,QWORD PTR [rdx+0x18]
   14000ad0c:	mov    QWORD PTR [rdx+0x18],r12
   14000ad10:	mov    QWORD PTR [rdi],rcx
   14000ad13:	mov    QWORD PTR [rdi+0x10],rax
   14000ad17:	mov    DWORD PTR [rdi+0x8],0x32
   14000ad1e:	jmp    0x1400052d9
   14000ad23:	mov    rdx,QWORD PTR [rbp+0x8]
   14000ad27:	mov    ecx,0x20
   14000ad2c:	call   0x140004140
   14000ad31:	mov    rdi,rax
   14000ad34:	test   rax,rax
   14000ad37:	je     0x1400052d6
   14000ad3d:	mov    rax,QWORD PTR [rbp+0x18]
   14000ad41:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ad45:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000ad49:	lea    rax,[rip+0xbdd8]        # 0x140016b28
   14000ad50:	mov    QWORD PTR [rdi],rax
   14000ad53:	mov    QWORD PTR [rdi+0x10],rdx
   14000ad57:	mov    QWORD PTR [rdi+0x18],rdi
   14000ad5b:	mov    DWORD PTR [rdi+0x8],0x3a
   14000ad62:	jmp    0x1400052d9
   14000ad67:	mov    rdx,QWORD PTR [rbp+0x8]
   14000ad6b:	mov    ecx,0x20
   14000ad70:	call   0x140004140
   14000ad75:	mov    rdi,rax
   14000ad78:	test   rax,rax
   14000ad7b:	je     0x1400052d6
   14000ad81:	mov    rax,QWORD PTR [rbp+0x18]
   14000ad85:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ad89:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000ad8e:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000ad92:	lea    rax,[rip+0xbd8f]        # 0x140016b28
   14000ad99:	mov    QWORD PTR [rdi],rax
   14000ad9c:	mov    QWORD PTR [rdi+0x10],rdx
   14000ada0:	mov    DWORD PTR [rdi+0x8],0x3a
   14000ada7:	mov    rax,QWORD PTR [rcx+0x18]
   14000adab:	mov    QWORD PTR [rdi+0x18],rax
   14000adaf:	mov    QWORD PTR [rcx+0x18],rdi
   14000adb3:	jmp    0x1400052d9
   14000adb8:	mov    rdx,QWORD PTR [rbp+0x8]
   14000adbc:	mov    ecx,0x18
   14000adc1:	call   0x140004140
   14000adc6:	mov    rdi,rax
   14000adc9:	test   rax,rax
   14000adcc:	je     0x1400052d6
   14000add2:	mov    rax,QWORD PTR [rbp+0x18]
   14000add6:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000adda:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000adde:	lea    rax,[rip+0xbe83]        # 0x140016c68
   14000ade5:	mov    QWORD PTR [rdi],rax
   14000ade8:	mov    QWORD PTR [rdi+0x10],rdx
   14000adec:	mov    DWORD PTR [rdi+0x8],0x3c
   14000adf3:	jmp    0x1400052d9
   14000adf8:	mov    rdx,QWORD PTR [rbp+0x8]
   14000adfc:	mov    ecx,0x18
   14000ae01:	call   0x140004140
   14000ae06:	mov    rdi,rax
   14000ae09:	test   rax,rax
   14000ae0c:	je     0x1400052d6
   14000ae12:	mov    rax,QWORD PTR [rbp+0x18]
   14000ae16:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ae1a:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000ae1e:	lea    rax,[rip+0xbdf3]        # 0x140016c18
   14000ae25:	mov    QWORD PTR [rdi],rax
   14000ae28:	mov    QWORD PTR [rdi+0x10],rdx
   14000ae2c:	mov    DWORD PTR [rdi+0x8],0x20
   14000ae33:	jmp    0x1400052d9
   14000ae38:	mov    rax,QWORD PTR [rbp+0x18]
   14000ae3c:	mov    QWORD PTR [rax+rdx*8],r12
   14000ae40:	mov    rax,QWORD PTR [rbp+0x20]
   14000ae44:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ae48:	movsx  edi,WORD PTR [r9+r14*2+0x17c00]
   14000ae51:	movsxd rdx,DWORD PTR [rax+rcx*4]
   14000ae55:	sub    edi,0x6a
   14000ae58:	movsx  eax,WORD PTR [r9+rdx*2+0x18cf4]
   14000ae61:	add    eax,edi
   14000ae63:	js     0x14000ae80
   14000ae65:	movsxd rcx,eax
   14000ae68:	movsx  eax,WORD PTR [r9+rcx*2+0x1c604]
   14000ae71:	cmp    eax,edi
   14000ae73:	jne    0x14000ae80
   14000ae75:	movsx  r13d,WORD PTR [r9+rcx*2+0x1a9c4]
   14000ae7e:	jmp    0x14000ae8c
   14000ae80:	movsxd rax,edi
   14000ae83:	movsx  r13d,WORD PTR [r9+rax*2+0x186e0]
   14000ae8c:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ae91:	lea    r14,[rbp+0x78]
   14000ae95:	test   r13d,r13d
   14000ae98:	jne    0x140004ef7
   14000ae9e:	mov    rax,QWORD PTR [rbp+0x110]
   14000aea5:	cmp    QWORD PTR [rbp+0x108],rax
   14000aeac:	jne    0x14000bc18
   14000aeb2:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000aeb6:	mov    rax,QWORD PTR [rbp+0x20]
   14000aeba:	movsxd r13,DWORD PTR [rax+rcx*4]
   14000aebe:	cmp    r15d,0xffffffff
   14000aec2:	je     0x14000afe4
   14000aec8:	movsx  eax,WORD PTR [r9+r13*2+0x187c0]
   14000aed1:	add    eax,0x3e
   14000aed4:	js     0x14000aef0
   14000aed6:	movsxd rcx,eax
   14000aed9:	cmp    WORD PTR [r9+rcx*2+0x1ae70],0x3e
   14000aee3:	jne    0x14000aef0
   14000aee5:	movsx  eax,WORD PTR [r9+rcx*2+0x19230]
   14000aeee:	jmp    0x14000aefb
   14000aef0:	movsx  eax,WORD PTR [r9+r13*2+0x181a0]
   14000aef9:	neg    eax
   14000aefb:	test   eax,eax
   14000aefd:	je     0x14000af15
   14000aeff:	mov    edx,r15d
   14000af02:	mov    rcx,rbx
   14000af05:	call   0x14000dd60
   14000af0a:	test   al,al
   14000af0c:	jne    0x14000af50
   14000af0e:	lea    r9,[rip+0xffffffffffff50eb]        # 0x140000000
   14000af15:	movsx  eax,WORD PTR [r9+r13*2+0x187c0]
   14000af1e:	add    eax,0x59
   14000af21:	js     0x14000af3d
   14000af23:	movsxd rcx,eax
   14000af26:	cmp    WORD PTR [r9+rcx*2+0x1ae70],0x59
   14000af30:	jne    0x14000af3d
   14000af32:	movsx  eax,WORD PTR [r9+rcx*2+0x19230]
   14000af3b:	jmp    0x14000af48
   14000af3d:	movsx  eax,WORD PTR [r9+r13*2+0x181a0]
   14000af46:	neg    eax
   14000af48:	test   eax,eax
   14000af4a:	je     0x14000afe4
   14000af50:	mov    DWORD PTR [r14],r15d
   14000af53:	mov    rax,QWORD PTR [rbp+0x40]
   14000af57:	lea    rdx,[rbp+0x48]
   14000af5b:	lea    rcx,[r14+0x20]
   14000af5f:	mov    QWORD PTR [r14+0x8],rax
   14000af63:	call   QWORD PTR [rip+0xa247]        # 0x1400151b0
   14000af69:	mov    eax,DWORD PTR [rbp+0x58]
   14000af6c:	mov    r15d,0x3d
   14000af72:	mov    DWORD PTR [r14+0x10],eax
   14000af76:	mov    eax,DWORD PTR [rbp+0x5c]
   14000af79:	mov    DWORD PTR [r14+0x14],eax
   14000af7d:	mov    eax,DWORD PTR [rbp+0x60]
   14000af80:	mov    DWORD PTR [r14+0x18],eax
   14000af84:	mov    eax,DWORD PTR [rbp+0x64]
   14000af87:	mov    DWORD PTR [r14+0x1c],eax
   14000af8b:	mov    eax,DWORD PTR [rbp+0x68]
   14000af8e:	mov    DWORD PTR [rbp+0x58],eax
   14000af91:	mov    eax,DWORD PTR [rbp+0x6c]
   14000af94:	mov    DWORD PTR [rbp+0x5c],eax
   14000af97:	mov    eax,DWORD PTR [rbp+0x70]
   14000af9a:	mov    DWORD PTR [rbp+0x60],eax
   14000af9d:	mov    eax,DWORD PTR [rbp+0x74]
   14000afa0:	mov    DWORD PTR [rbp+0x64],eax
   14000afa3:	mov    eax,DWORD PTR [rbp+0x5c]
   14000afa6:	add    DWORD PTR [rbp+0x58],eax
   14000afa9:	mov    eax,DWORD PTR [rbp+0x5c]
   14000afac:	add    DWORD PTR [rbp+0x64],eax
   14000afaf:	mov    DWORD PTR [rbp+0x5c],r12d
   14000afb3:	lea    rax,[rbp+0xa8]
   14000afba:	mov    QWORD PTR [rbp+0x108],r14
   14000afc1:	mov    QWORD PTR [rbp+0x40],r12
   14000afc5:	mov    QWORD PTR [rbp+0x110],rax
   14000afcc:	lea    r9,[rip+0xffffffffffff502d]        # 0x140000000
   14000afd3:	mov    edx,0xffffff96
   14000afd8:	lea    rdi,[rip+0xc2c1]        # 0x1400172a0
   14000afdf:	jmp    0x140004f90
   14000afe4:	mov    DWORD PTR [r14],r15d
   14000afe7:	mov    rax,QWORD PTR [rbp+0x40]
   14000afeb:	lea    rcx,[rbp+0x98]
   14000aff2:	lea    rdx,[rbp+0x48]
   14000aff6:	mov    BYTE PTR [rsp+0x418],0x1
   14000affe:	mov    QWORD PTR [rbp+0x80],rax
   14000b005:	call   QWORD PTR [rip+0xa1a5]        # 0x1400151b0
   14000b00b:	mov    eax,DWORD PTR [rbp+0x58]
   14000b00e:	mov    rcx,rbx
   14000b011:	mov    DWORD PTR [rbp+0x88],eax
   14000b017:	mov    eax,DWORD PTR [rbp+0x5c]
   14000b01a:	mov    DWORD PTR [rbp+0x8c],eax
   14000b020:	mov    eax,DWORD PTR [rbp+0x60]
   14000b023:	mov    DWORD PTR [rbp+0x90],eax
   14000b029:	mov    eax,DWORD PTR [rbp+0x64]
   14000b02c:	mov    DWORD PTR [rbp+0x94],eax
   14000b032:	call   0x140010810
   14000b037:	lea    rdx,[rbx+0x20]
   14000b03b:	mov    DWORD PTR [rbp+0xa8],eax
   14000b041:	lea    rcx,[rsp+0x1c0]
   14000b049:	mov    r15d,eax
   14000b04c:	movsd  xmm0,QWORD PTR [rbx+0x68]
   14000b051:	movsd  QWORD PTR [rbp+0x40],xmm0
   14000b056:	movsd  QWORD PTR [rbp+0xb0],xmm0
   14000b05e:	call   QWORD PTR [rip+0xa144]        # 0x1400151a8
   14000b064:	lea    rdx,[rsp+0x1c0]
   14000b06c:	lea    rcx,[rbp+0x48]
   14000b070:	call   QWORD PTR [rip+0xa13a]        # 0x1400151b0
   14000b076:	lea    rcx,[rbp+0xc8]
   14000b07d:	mov    rdx,rax
   14000b080:	call   QWORD PTR [rip+0xa12a]        # 0x1400151b0
   14000b086:	lea    rcx,[rsp+0x1c0]
   14000b08e:	call   QWORD PTR [rip+0xa14c]        # 0x1400151e0
   14000b094:	lea    rcx,[rsp+0x3a0]
   14000b09c:	mov    rdx,rbx
   14000b09f:	call   0x140003f40
   14000b0a4:	lea    r8,[rip+0xffffffffffff4f55]        # 0x140000000
   14000b0ab:	mov    rdx,rax
   14000b0ae:	mov    eax,DWORD PTR [rax]
   14000b0b0:	mov    DWORD PTR [rbp+0x58],eax
   14000b0b3:	mov    eax,DWORD PTR [rdx+0x4]
   14000b0b6:	mov    DWORD PTR [rbp+0x5c],eax
   14000b0b9:	mov    eax,DWORD PTR [rdx+0x8]
   14000b0bc:	mov    DWORD PTR [rbp+0x60],eax
   14000b0bf:	mov    eax,DWORD PTR [rdx+0xc]
   14000b0c2:	mov    DWORD PTR [rbp+0x64],eax
   14000b0c5:	mov    eax,DWORD PTR [rdx]
   14000b0c7:	mov    DWORD PTR [rbp+0xb8],eax
   14000b0cd:	mov    eax,DWORD PTR [rdx+0x4]
   14000b0d0:	mov    DWORD PTR [rbp+0xbc],eax
   14000b0d6:	mov    eax,DWORD PTR [rdx+0x8]
   14000b0d9:	mov    DWORD PTR [rbp+0xc0],eax
   14000b0df:	mov    eax,DWORD PTR [rdx+0xc]
   14000b0e2:	mov    DWORD PTR [rbp+0xc4],eax
   14000b0e8:	movsx  eax,WORD PTR [r8+r13*2+0x187c0]
   14000b0f1:	add    eax,r15d
   14000b0f4:	js     0x14000b112
   14000b0f6:	movsxd rcx,eax
   14000b0f9:	movsx  eax,WORD PTR [r8+rcx*2+0x1ae70]
   14000b102:	cmp    eax,r15d
   14000b105:	jne    0x14000b112
   14000b107:	movsx  eax,WORD PTR [r8+rcx*2+0x19230]
   14000b110:	jmp    0x14000b11d
   14000b112:	movsx  eax,WORD PTR [r8+r13*2+0x181a0]
   14000b11b:	neg    eax
   14000b11d:	test   eax,eax
   14000b11f:	je     0x14000b333
   14000b125:	lea    rcx,[rsp+0x50]
   14000b12a:	call   QWORD PTR [rip+0xa0c0]        # 0x1400151f0
   14000b130:	movsxd rdx,DWORD PTR [r14]
   14000b133:	cmp    edx,0x69
   14000b136:	ja     0x14000b236
   14000b13c:	mov    rax,rdx
   14000b13f:	lea    rdx,[rip+0xffffffffffff4eba]        # 0x140000000
   14000b146:	mov    rdx,QWORD PTR [rdx+rax*8+0x178b0]
   14000b14e:	test   rdx,rdx
   14000b151:	je     0x14000b16d
   14000b153:	or     rcx,0xffffffffffffffff
   14000b157:	xor    eax,eax
   14000b159:	mov    rdi,rdx
   14000b15c:	repnz scas al,BYTE PTR es:[rdi]
   14000b15e:	not    rcx
   14000b161:	dec    rcx
   14000b164:	mov    DWORD PTR [rsp+0x180],ecx
   14000b16b:	jmp    0x14000b175
   14000b16d:	mov    DWORD PTR [rsp+0x180],r12d
   14000b175:	mov    QWORD PTR [rsp+0x188],rdx
   14000b17d:	movaps xmm0,XMMWORD PTR [rsp+0x180]
   14000b185:	lea    rcx,[rsp+0x100]
   14000b18d:	lea    rdx,[rsp+0x330]
   14000b195:	movdqa XMMWORD PTR [rsp+0x330],xmm0
   14000b19e:	call   QWORD PTR [rip+0x9fbc]        # 0x140015160
   14000b1a4:	lea    rcx,[rsp+0x410]
   14000b1ac:	mov    dl,0x20
   14000b1ae:	call   QWORD PTR [rip+0xa01c]        # 0x1400151d0
   14000b1b4:	lea    r8,[rip+0xc0cd]        # 0x140017288
   14000b1bb:	lea    rdx,[rip+0xc0b6]        # 0x140017278
   14000b1c2:	lea    rcx,[rsp+0x168]
   14000b1ca:	xor    r9d,r9d
   14000b1cd:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b1d5:	mov    rdi,rax
   14000b1d8:	call   QWORD PTR [rip+0x9fea]        # 0x1400151c8
   14000b1de:	lea    r8,[rsp+0x100]
   14000b1e6:	mov    rcx,rax
   14000b1e9:	movzx  eax,WORD PTR [rdi]
   14000b1ec:	lea    rdx,[rsp+0x170]
   14000b1f4:	xor    r9d,r9d
   14000b1f7:	mov    WORD PTR [rsp+0x20],ax
   14000b1fc:	call   QWORD PTR [rip+0x9fbe]        # 0x1400151c0
   14000b202:	lea    rcx,[rsp+0x50]
   14000b207:	mov    rdx,rax
   14000b20a:	call   QWORD PTR [rip+0x9fa8]        # 0x1400151b8
   14000b210:	lea    rcx,[rsp+0x170]
   14000b218:	call   QWORD PTR [rip+0xa19a]        # 0x1400153b8
   14000b21e:	lea    rcx,[rsp+0x168]
   14000b226:	call   QWORD PTR [rip+0xa18c]        # 0x1400153b8
   14000b22c:	lea    rcx,[rsp+0x100]
   14000b234:	jmp    0x14000b273
   14000b236:	lea    r8,[rip+0xc02b]        # 0x140017268
   14000b23d:	lea    rdx,[rip+0xc034]        # 0x140017278
   14000b244:	lea    rcx,[rsp+0x160]
   14000b24c:	xor    r9d,r9d
   14000b24f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b257:	call   QWORD PTR [rip+0x9f6b]        # 0x1400151c8
   14000b25d:	lea    rcx,[rsp+0x50]
   14000b262:	mov    rdx,rax
   14000b265:	call   QWORD PTR [rip+0x9f4d]        # 0x1400151b8
   14000b26b:	lea    rcx,[rsp+0x160]
   14000b273:	call   QWORD PTR [rip+0xa13f]        # 0x1400153b8
   14000b279:	mov    DWORD PTR [rsp+0x1a0],0x1
   14000b284:	mov    eax,DWORD PTR [rbp+0x88]
   14000b28a:	lea    rcx,[rsp+0x1a4]
   14000b292:	lea    rdx,[rsp+0x50]
   14000b297:	mov    DWORD PTR [rcx],eax
   14000b299:	mov    eax,DWORD PTR [rbp+0x8c]
   14000b29f:	mov    DWORD PTR [rcx+0x4],eax
   14000b2a2:	mov    eax,DWORD PTR [rbp+0x90]
   14000b2a8:	mov    DWORD PTR [rcx+0x8],eax
   14000b2ab:	mov    eax,DWORD PTR [rbp+0x94]
   14000b2b1:	mov    DWORD PTR [rcx+0xc],eax
   14000b2b4:	lea    rcx,[rsp+0x1b8]
   14000b2bc:	call   QWORD PTR [rip+0xa106]        # 0x1400153c8
   14000b2c2:	mov    rax,QWORD PTR [rbp+0x118]
   14000b2c9:	mov    ecx,DWORD PTR [rax]
   14000b2cb:	cmp    ecx,0x1
   14000b2ce:	je     0x14000b2ed
   14000b2d0:	test   ecx,ecx
   14000b2d2:	je     0x14000b2ed
   14000b2d4:	lea    rcx,[rbp+0x118]
   14000b2db:	mov    edx,0x7fffffff
   14000b2e0:	mov    r8d,0x1
   14000b2e6:	call   0x1400049c0
   14000b2eb:	jmp    0x14000b2fa
   14000b2ed:	lea    rcx,[rbp+0x118]
   14000b2f4:	call   QWORD PTR [rip+0xa096]        # 0x140015390
   14000b2fa:	lea    r8,[rsp+0x1a0]
   14000b302:	lea    rcx,[rbp+0x118]
   14000b309:	mov    rdx,rax
   14000b30c:	call   0x1400040c0
   14000b311:	lea    rcx,[rsp+0x1b8]
   14000b319:	call   QWORD PTR [rip+0xa099]        # 0x1400153b8
   14000b31f:	lea    rcx,[rsp+0x50]
   14000b324:	call   QWORD PTR [rip+0xa08e]        # 0x1400153b8
   14000b32a:	mov    esi,DWORD PTR [rsp+0x30]
   14000b32e:	jmp    0x14000afcc
   14000b333:	mov    ecx,DWORD PTR [rip+0x1915f]        # 0x140024498
   14000b339:	lea    rbx,[rip+0x19158]        # 0x140024498
   14000b340:	test   ecx,ecx
   14000b342:	je     0x14000b3cd
   14000b348:	movsx  edi,WORD PTR [r8+r13*2+0x187c0]
   14000b351:	lea    eax,[rdi+rcx*1]
   14000b354:	test   eax,eax
   14000b356:	js     0x14000b373
   14000b358:	movsxd rdx,eax
   14000b35b:	movsx  eax,WORD PTR [r8+rdx*2+0x1ae70]
   14000b364:	cmp    eax,ecx
   14000b366:	jne    0x14000b373
   14000b368:	movsx  eax,WORD PTR [r8+rdx*2+0x19230]
   14000b371:	jmp    0x14000b37e
   14000b373:	movsx  eax,WORD PTR [r8+r13*2+0x181a0]
   14000b37c:	neg    eax
   14000b37e:	test   eax,eax
   14000b380:	jle    0x14000b3c2
   14000b382:	movsxd rdx,eax
   14000b385:	movsx  eax,WORD PTR [r8+rdx*2+0x187c0]
   14000b38e:	add    eax,r15d
   14000b391:	js     0x14000b3af
   14000b393:	movsxd rcx,eax
   14000b396:	movsx  eax,WORD PTR [r8+rcx*2+0x1ae70]
   14000b39f:	cmp    eax,r15d
   14000b3a2:	jne    0x14000b3af
   14000b3a4:	movsx  eax,WORD PTR [r8+rcx*2+0x19230]
   14000b3ad:	jmp    0x14000b3ba
   14000b3af:	movsx  eax,WORD PTR [r8+rdx*2+0x181a0]
   14000b3b8:	neg    eax
   14000b3ba:	test   eax,eax
   14000b3bc:	jne    0x14000b444
   14000b3c2:	mov    ecx,DWORD PTR [rbx+0x4]
   14000b3c5:	add    rbx,0x4
   14000b3c9:	test   ecx,ecx
   14000b3cb:	jne    0x14000b351
   14000b3cd:	mov    ebx,0x1
   14000b3d2:	mov    rdi,rbx
   14000b3d5:	cmp    rdi,0x6a
   14000b3d9:	jge    0x14000bb42
   14000b3df:	cmp    rdi,0x3e
   14000b3e3:	je     0x14000b64a
   14000b3e9:	cmp    rdi,0x62
   14000b3ed:	je     0x14000b64a
   14000b3f3:	cmp    rdi,0x64
   14000b3f7:	je     0x14000b64a
   14000b3fd:	cmp    rdi,0x65
   14000b401:	je     0x14000b64a
   14000b407:	cmp    rdi,0x66
   14000b40b:	je     0x14000b64a
   14000b411:	movsx  eax,WORD PTR [r8+r13*2+0x187c0]
   14000b41a:	add    eax,ebx
   14000b41c:	js     0x14000b628
   14000b422:	movsxd rcx,eax
   14000b425:	movsx  eax,WORD PTR [r8+rcx*2+0x1ae70]
   14000b42e:	cmp    eax,ebx
   14000b430:	jne    0x14000b628
   14000b436:	movsx  ecx,WORD PTR [r8+rcx*2+0x19230]
   14000b43f:	jmp    0x14000b633
   14000b444:	movsxd rax,DWORD PTR [rbx]
   14000b447:	mov    rdx,QWORD PTR [r8+rax*8+0x178b0]
   14000b44f:	test   rdx,rdx
   14000b452:	je     0x14000b46e
   14000b454:	or     rcx,0xffffffffffffffff
   14000b458:	xor    eax,eax
   14000b45a:	mov    rdi,rdx
   14000b45d:	repnz scas al,BYTE PTR es:[rdi]
   14000b45f:	not    rcx
   14000b462:	dec    rcx
   14000b465:	mov    DWORD PTR [rsp+0x110],ecx
   14000b46c:	jmp    0x14000b476
   14000b46e:	mov    DWORD PTR [rsp+0x110],r12d
   14000b476:	mov    QWORD PTR [rsp+0x118],rdx
   14000b47e:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   14000b486:	lea    rcx,[rsp+0xd8]
   14000b48e:	lea    rdx,[rsp+0x350]
   14000b496:	movdqa XMMWORD PTR [rsp+0x350],xmm0
   14000b49f:	call   QWORD PTR [rip+0x9cbb]        # 0x140015160
   14000b4a5:	lea    rcx,[rsp+0x420]
   14000b4ad:	mov    dl,0x20
   14000b4af:	call   QWORD PTR [rip+0x9d1b]        # 0x1400151d0
   14000b4b5:	lea    r8,[rip+0xbd94]        # 0x140017250
   14000b4bc:	lea    rdx,[rip+0xbdb5]        # 0x140017278
   14000b4c3:	lea    rcx,[rsp+0x128]
   14000b4cb:	xor    r9d,r9d
   14000b4ce:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b4d6:	mov    rdi,rax
   14000b4d9:	call   QWORD PTR [rip+0x9ce9]        # 0x1400151c8
   14000b4df:	lea    r8,[rsp+0xd8]
   14000b4e7:	mov    rcx,rax
   14000b4ea:	movzx  eax,WORD PTR [rdi]
   14000b4ed:	lea    rdx,[rsp+0xa0]
   14000b4f5:	xor    r9d,r9d
   14000b4f8:	mov    WORD PTR [rsp+0x20],ax
   14000b4fd:	call   QWORD PTR [rip+0x9cbd]        # 0x1400151c0
   14000b503:	lea    rcx,[rsp+0x128]
   14000b50b:	call   QWORD PTR [rip+0x9ea7]        # 0x1400153b8
   14000b511:	lea    rcx,[rsp+0xd8]
   14000b519:	call   QWORD PTR [rip+0x9e99]        # 0x1400153b8
   14000b51f:	mov    DWORD PTR [rsp+0x1f0],0x1
   14000b52a:	mov    eax,DWORD PTR [rbp+0x88]
   14000b530:	lea    rcx,[rsp+0x1f4]
   14000b538:	lea    rdx,[rsp+0xa0]
   14000b540:	mov    DWORD PTR [rcx],eax
   14000b542:	mov    eax,DWORD PTR [rbp+0x8c]
   14000b548:	mov    DWORD PTR [rcx+0x4],eax
   14000b54b:	mov    eax,DWORD PTR [rbp+0x90]
   14000b551:	mov    DWORD PTR [rcx+0x8],eax
   14000b554:	mov    eax,DWORD PTR [rbp+0x94]
   14000b55a:	mov    DWORD PTR [rcx+0xc],eax
   14000b55d:	lea    rcx,[rsp+0x208]
   14000b565:	call   QWORD PTR [rip+0x9e5d]        # 0x1400153c8
   14000b56b:	mov    rax,QWORD PTR [rbp+0x118]
   14000b572:	mov    ecx,DWORD PTR [rax]
   14000b574:	cmp    ecx,0x1
   14000b577:	je     0x14000b596
   14000b579:	test   ecx,ecx
   14000b57b:	je     0x14000b596
   14000b57d:	lea    rcx,[rbp+0x118]
   14000b584:	mov    edx,0x7fffffff
   14000b589:	mov    r8d,0x1
   14000b58f:	call   0x1400049c0
   14000b594:	jmp    0x14000b5a3
   14000b596:	lea    rcx,[rbp+0x118]
   14000b59d:	call   QWORD PTR [rip+0x9ded]        # 0x140015390
   14000b5a3:	lea    r8,[rsp+0x1f0]
   14000b5ab:	lea    rcx,[rbp+0x118]
   14000b5b2:	mov    rdx,rax
   14000b5b5:	call   0x1400040c0
   14000b5ba:	lea    rcx,[rsp+0x208]
   14000b5c2:	call   QWORD PTR [rip+0x9df0]        # 0x1400153b8
   14000b5c8:	mov    r15d,DWORD PTR [rbx]
   14000b5cb:	mov    QWORD PTR [rbp+0x40],r12
   14000b5cf:	mov    eax,DWORD PTR [rbp+0x88]
   14000b5d5:	lea    rcx,[rsp+0xa0]
   14000b5dd:	mov    DWORD PTR [rbp+0x58],eax
   14000b5e0:	mov    eax,DWORD PTR [rbp+0x8c]
   14000b5e6:	mov    DWORD PTR [rbp+0x5c],eax
   14000b5e9:	mov    eax,DWORD PTR [rbp+0x90]
   14000b5ef:	mov    DWORD PTR [rbp+0x60],eax
   14000b5f2:	mov    eax,DWORD PTR [rbp+0x94]
   14000b5f8:	mov    DWORD PTR [rbp+0x64],eax
   14000b5fb:	mov    DWORD PTR [rbp+0x5c],r12d
   14000b5ff:	lea    rax,[rbp+0xd8]
   14000b606:	mov    QWORD PTR [rbp+0x108],r14
   14000b60d:	mov    QWORD PTR [rbp+0x110],rax
   14000b614:	call   QWORD PTR [rip+0x9d9e]        # 0x1400153b8
   14000b61a:	mov    esi,DWORD PTR [rsp+0x30]
   14000b61e:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b623:	jmp    0x14000afcc
   14000b628:	movsx  ecx,WORD PTR [r8+r13*2+0x181a0]
   14000b631:	neg    ecx
   14000b633:	test   ecx,ecx
   14000b635:	jle    0x14000b64a
   14000b637:	mov    edx,r15d
   14000b63a:	call   0x140002680
   14000b63f:	test   eax,eax
   14000b641:	jne    0x14000b654
   14000b643:	lea    r8,[rip+0xffffffffffff49b6]        # 0x140000000
   14000b64a:	inc    ebx
   14000b64c:	inc    rdi
   14000b64f:	jmp    0x14000b3d5
   14000b654:	lea    rdx,[rip+0xffffffffffff49a5]        # 0x140000000
   14000b65b:	mov    rdx,QWORD PTR [rdx+rdi*8+0x178b0]
   14000b663:	test   rdx,rdx
   14000b666:	je     0x14000b682
   14000b668:	or     rcx,0xffffffffffffffff
   14000b66c:	xor    eax,eax
   14000b66e:	mov    rdi,rdx
   14000b671:	repnz scas al,BYTE PTR es:[rdi]
   14000b673:	not    rcx
   14000b676:	dec    rcx
   14000b679:	mov    DWORD PTR [rsp+0x150],ecx
   14000b680:	jmp    0x14000b68a
   14000b682:	mov    DWORD PTR [rsp+0x150],r12d
   14000b68a:	mov    QWORD PTR [rsp+0x158],rdx
   14000b692:	movaps xmm0,XMMWORD PTR [rsp+0x150]
   14000b69a:	lea    rcx,[rsp+0xf8]
   14000b6a2:	lea    rdx,[rsp+0x70]
   14000b6a7:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14000b6ad:	call   QWORD PTR [rip+0x9aad]        # 0x140015160
   14000b6b3:	lea    rcx,[rsp+0x428]
   14000b6bb:	mov    dl,0x20
   14000b6bd:	call   QWORD PTR [rip+0x9b0d]        # 0x1400151d0
   14000b6c3:	lea    r8,[rip+0xbb86]        # 0x140017250
   14000b6ca:	lea    rdx,[rip+0xbba7]        # 0x140017278
   14000b6d1:	lea    rcx,[rsp+0x138]
   14000b6d9:	xor    r9d,r9d
   14000b6dc:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b6e4:	mov    rdi,rax
   14000b6e7:	call   QWORD PTR [rip+0x9adb]        # 0x1400151c8
   14000b6ed:	lea    r8,[rsp+0xf8]
   14000b6f5:	mov    rcx,rax
   14000b6f8:	movzx  eax,WORD PTR [rdi]
   14000b6fb:	lea    rdx,[rsp+0xc8]
   14000b703:	xor    r9d,r9d
   14000b706:	mov    WORD PTR [rsp+0x20],ax
   14000b70b:	call   QWORD PTR [rip+0x9aaf]        # 0x1400151c0
   14000b711:	lea    rcx,[rsp+0x138]
   14000b719:	call   QWORD PTR [rip+0x9c99]        # 0x1400153b8
   14000b71f:	lea    rcx,[rsp+0xf8]
   14000b727:	call   QWORD PTR [rip+0x9c8b]        # 0x1400153b8
   14000b72d:	mov    DWORD PTR [rsp+0x270],0x1
   14000b738:	mov    eax,DWORD PTR [rbp+0x88]
   14000b73e:	lea    rcx,[rsp+0x274]
   14000b746:	lea    rdx,[rsp+0xc8]
   14000b74e:	mov    DWORD PTR [rcx],eax
   14000b750:	mov    eax,DWORD PTR [rbp+0x8c]
   14000b756:	mov    DWORD PTR [rcx+0x4],eax
   14000b759:	mov    eax,DWORD PTR [rbp+0x90]
   14000b75f:	mov    DWORD PTR [rcx+0x8],eax
   14000b762:	mov    eax,DWORD PTR [rbp+0x94]
   14000b768:	mov    DWORD PTR [rcx+0xc],eax
   14000b76b:	lea    rcx,[rsp+0x288]
   14000b773:	call   QWORD PTR [rip+0x9c4f]        # 0x1400153c8
   14000b779:	lea    rcx,[rbp+0x118]
   14000b780:	lea    rdx,[rsp+0x270]
   14000b788:	call   0x140004c10
   14000b78d:	lea    rcx,[rsp+0x288]
   14000b795:	call   QWORD PTR [rip+0x9c1d]        # 0x1400153b8
   14000b79b:	mov    QWORD PTR [rbp+0x40],r12
   14000b79f:	mov    eax,DWORD PTR [rbp+0x88]
   14000b7a5:	mov    DWORD PTR [rbp+0x58],eax
   14000b7a8:	mov    eax,DWORD PTR [rbp+0x8c]
   14000b7ae:	lea    rcx,[rsp+0xc8]
   14000b7b6:	mov    DWORD PTR [rbp+0x5c],eax
   14000b7b9:	mov    eax,DWORD PTR [rbp+0x90]
   14000b7bf:	mov    r15d,ebx
   14000b7c2:	mov    DWORD PTR [rbp+0x60],eax
   14000b7c5:	mov    eax,DWORD PTR [rbp+0x94]
   14000b7cb:	mov    DWORD PTR [rbp+0x64],eax
   14000b7ce:	mov    DWORD PTR [rbp+0x5c],r12d
   14000b7d2:	call   QWORD PTR [rip+0x9be0]        # 0x1400153b8
   14000b7d8:	mov    esi,DWORD PTR [rsp+0x30]
   14000b7dc:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b7e1:	jmp    0x14000afcc
   14000b7e6:	movzx  eax,BYTE PTR [rsp+0x418]
   14000b7ee:	dec    DWORD PTR [rbp+0x10]
   14000b7f1:	test   al,al
   14000b7f3:	sete   al
   14000b7f6:	jmp    0x14000bc1a
   14000b7fb:	or     rcx,0xffffffffffffffff
   14000b7ff:	lea    rdx,[rip+0xba2a]        # 0x140017230
   14000b806:	xor    eax,eax
   14000b808:	mov    rdi,rdx
   14000b80b:	mov    QWORD PTR [rsp+0x48],rdx
   14000b810:	lea    rdx,[rsp+0x70]
   14000b815:	repnz scas al,BYTE PTR es:[rdi]
   14000b817:	not    rcx
   14000b81a:	dec    rcx
   14000b81d:	mov    DWORD PTR [rsp+0x40],ecx
   14000b821:	lea    rcx,[rsp+0xe8]
   14000b829:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14000b82e:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14000b834:	call   QWORD PTR [rip+0x9926]        # 0x140015160
   14000b83a:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000b83e:	lea    rcx,[rsp+0x234]
   14000b846:	shl    rdx,0x4
   14000b84a:	add    rdx,QWORD PTR [rbp+0x28]
   14000b84e:	mov    DWORD PTR [rsp+0x230],0x1
   14000b859:	mov    eax,DWORD PTR [rdx]
   14000b85b:	mov    DWORD PTR [rcx],eax
   14000b85d:	mov    eax,DWORD PTR [rdx+0x4]
   14000b860:	mov    DWORD PTR [rcx+0x4],eax
   14000b863:	mov    eax,DWORD PTR [rdx+0x8]
   14000b866:	mov    DWORD PTR [rcx+0x8],eax
   14000b869:	mov    eax,DWORD PTR [rdx+0xc]
   14000b86c:	lea    rdx,[rsp+0xe8]
   14000b874:	mov    DWORD PTR [rcx+0xc],eax
   14000b877:	lea    rcx,[rsp+0x248]
   14000b87f:	call   QWORD PTR [rip+0x9b43]        # 0x1400153c8
   14000b885:	lea    rcx,[rbp+0x118]
   14000b88c:	lea    rdx,[rsp+0x230]
   14000b894:	call   0x140004c10
   14000b899:	lea    rcx,[rsp+0x248]
   14000b8a1:	call   QWORD PTR [rip+0x9b11]        # 0x1400153b8
   14000b8a7:	lea    rcx,[rsp+0xe8]
   14000b8af:	jmp    0x14000bc12
   14000b8b4:	or     rcx,0xffffffffffffffff
   14000b8b8:	lea    rdx,[rip+0xb939]        # 0x1400171f8
   14000b8bf:	xor    eax,eax
   14000b8c1:	mov    rdi,rdx
   14000b8c4:	mov    QWORD PTR [rsp+0x48],rdx
   14000b8c9:	lea    rdx,[rsp+0x70]
   14000b8ce:	repnz scas al,BYTE PTR es:[rdi]
   14000b8d0:	not    rcx
   14000b8d3:	dec    rcx
   14000b8d6:	mov    DWORD PTR [rsp+0x40],ecx
   14000b8da:	lea    rcx,[rsp+0xa8]
   14000b8e2:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14000b8e7:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14000b8ed:	call   QWORD PTR [rip+0x986d]        # 0x140015160
   14000b8f3:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000b8f7:	lea    rcx,[rsp+0x254]
   14000b8ff:	shl    rdx,0x4
   14000b903:	add    rdx,QWORD PTR [rbp+0x28]
   14000b907:	mov    DWORD PTR [rsp+0x250],0x1
   14000b912:	mov    eax,DWORD PTR [rdx]
   14000b914:	mov    DWORD PTR [rcx],eax
   14000b916:	mov    eax,DWORD PTR [rdx+0x4]
   14000b919:	mov    DWORD PTR [rcx+0x4],eax
   14000b91c:	mov    eax,DWORD PTR [rdx+0x8]
   14000b91f:	mov    DWORD PTR [rcx+0x8],eax
   14000b922:	mov    eax,DWORD PTR [rdx+0xc]
   14000b925:	lea    rdx,[rsp+0xa8]
   14000b92d:	mov    DWORD PTR [rcx+0xc],eax
   14000b930:	lea    rcx,[rsp+0x268]
   14000b938:	call   QWORD PTR [rip+0x9a8a]        # 0x1400153c8
   14000b93e:	lea    rcx,[rbp+0x118]
   14000b945:	lea    rdx,[rsp+0x250]
   14000b94d:	call   0x140004c10
   14000b952:	lea    rcx,[rsp+0x268]
   14000b95a:	call   QWORD PTR [rip+0x9a58]        # 0x1400153b8
   14000b960:	lea    rcx,[rsp+0xa8]
   14000b968:	jmp    0x14000bc12
   14000b96d:	lea    rdx,[rsp+0x120]
   14000b975:	mov    rcx,rbx
   14000b978:	call   0x14000dd40
   14000b97d:	lea    rcx,[rsp+0x3b0]
   14000b985:	mov    rdx,rbx
   14000b988:	mov    rdi,rax
   14000b98b:	call   0x140003f40
   14000b990:	mov    DWORD PTR [rsp+0x290],0x1
   14000b99b:	mov    ecx,DWORD PTR [rax]
   14000b99d:	lea    rdx,[rsp+0x294]
   14000b9a5:	mov    DWORD PTR [rdx],ecx
   14000b9a7:	mov    ecx,DWORD PTR [rax+0x4]
   14000b9aa:	mov    DWORD PTR [rdx+0x4],ecx
   14000b9ad:	mov    ecx,DWORD PTR [rax+0x8]
   14000b9b0:	mov    DWORD PTR [rdx+0x8],ecx
   14000b9b3:	mov    ecx,DWORD PTR [rax+0xc]
   14000b9b6:	mov    DWORD PTR [rdx+0xc],ecx
   14000b9b9:	lea    rcx,[rsp+0x2a8]
   14000b9c1:	mov    rdx,rdi
   14000b9c4:	call   QWORD PTR [rip+0x99fe]        # 0x1400153c8
   14000b9ca:	lea    rcx,[rbp+0x118]
   14000b9d1:	lea    rdx,[rsp+0x290]
   14000b9d9:	call   0x140004c10
   14000b9de:	lea    rcx,[rsp+0x2a8]
   14000b9e6:	call   QWORD PTR [rip+0x99cc]        # 0x1400153b8
   14000b9ec:	lea    rcx,[rsp+0x120]
   14000b9f4:	jmp    0x14000bc12
   14000b9f9:	lea    rdx,[rsp+0x130]
   14000ba01:	mov    rcx,rbx
   14000ba04:	call   0x14000dd40
   14000ba09:	lea    rcx,[rsp+0x390]
   14000ba11:	mov    rdx,rbx
   14000ba14:	mov    rdi,rax
   14000ba17:	call   0x140003f40
   14000ba1c:	mov    DWORD PTR [rsp+0x2d0],0x1
   14000ba27:	mov    ecx,DWORD PTR [rax]
   14000ba29:	lea    rdx,[rsp+0x2d4]
   14000ba31:	mov    DWORD PTR [rdx],ecx
   14000ba33:	mov    ecx,DWORD PTR [rax+0x4]
   14000ba36:	mov    DWORD PTR [rdx+0x4],ecx
   14000ba39:	mov    ecx,DWORD PTR [rax+0x8]
   14000ba3c:	mov    DWORD PTR [rdx+0x8],ecx
   14000ba3f:	mov    ecx,DWORD PTR [rax+0xc]
   14000ba42:	mov    DWORD PTR [rdx+0xc],ecx
   14000ba45:	lea    rcx,[rsp+0x2e8]
   14000ba4d:	mov    rdx,rdi
   14000ba50:	call   QWORD PTR [rip+0x9972]        # 0x1400153c8
   14000ba56:	lea    rcx,[rbp+0x118]
   14000ba5d:	lea    rdx,[rsp+0x2d0]
   14000ba65:	call   0x140004c10
   14000ba6a:	lea    rcx,[rsp+0x2e8]
   14000ba72:	call   QWORD PTR [rip+0x9940]        # 0x1400153b8
   14000ba78:	lea    rcx,[rsp+0x130]
   14000ba80:	jmp    0x14000bc12
   14000ba85:	mov    QWORD PTR [rax+rcx*8],r12
   14000ba89:	or     rcx,0xffffffffffffffff
   14000ba8d:	lea    rdx,[rip+0xb79c]        # 0x140017230
   14000ba94:	mov    rdi,rdx
   14000ba97:	mov    QWORD PTR [rsp+0x48],rdx
   14000ba9c:	xor    eax,eax
   14000ba9e:	repnz scas al,BYTE PTR es:[rdi]
   14000baa0:	lea    rdx,[rsp+0x70]
   14000baa5:	not    rcx
   14000baa8:	dec    rcx
   14000baab:	mov    DWORD PTR [rsp+0x40],ecx
   14000baaf:	lea    rcx,[rsp+0xb0]
   14000bab7:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14000babc:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14000bac2:	call   QWORD PTR [rip+0x9698]        # 0x140015160
   14000bac8:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000bacc:	lea    rcx,[rsp+0x2b4]
   14000bad4:	shl    rdx,0x4
   14000bad8:	add    rdx,QWORD PTR [rbp+0x28]
   14000badc:	mov    DWORD PTR [rsp+0x2b0],0x1
   14000bae7:	mov    eax,DWORD PTR [rdx]
   14000bae9:	mov    DWORD PTR [rcx],eax
   14000baeb:	mov    eax,DWORD PTR [rdx+0x4]
   14000baee:	mov    DWORD PTR [rcx+0x4],eax
   14000baf1:	mov    eax,DWORD PTR [rdx+0x8]
   14000baf4:	mov    DWORD PTR [rcx+0x8],eax
   14000baf7:	mov    eax,DWORD PTR [rdx+0xc]
   14000bafa:	lea    rdx,[rsp+0xb0]
   14000bb02:	mov    DWORD PTR [rcx+0xc],eax
   14000bb05:	lea    rcx,[rsp+0x2c8]
   14000bb0d:	call   QWORD PTR [rip+0x98b5]        # 0x1400153c8
   14000bb13:	lea    rcx,[rbp+0x118]
   14000bb1a:	lea    rdx,[rsp+0x2b0]
   14000bb22:	call   0x140004c10
   14000bb27:	lea    rcx,[rsp+0x2c8]
   14000bb2f:	call   QWORD PTR [rip+0x9883]        # 0x1400153b8
   14000bb35:	lea    rcx,[rsp+0xb0]
   14000bb3d:	jmp    0x14000bc12
   14000bb42:	lea    r8,[rip+0xb71f]        # 0x140017268
   14000bb49:	lea    rdx,[rip+0xb728]        # 0x140017278
   14000bb50:	lea    rcx,[rsp+0xc0]
   14000bb58:	xor    r9d,r9d
   14000bb5b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000bb63:	call   QWORD PTR [rip+0x965f]        # 0x1400151c8
   14000bb69:	mov    DWORD PTR [rsp+0x1d0],0x1
   14000bb74:	mov    eax,DWORD PTR [rbp+0x88]
   14000bb7a:	lea    rcx,[rsp+0x1d4]
   14000bb82:	lea    rdx,[rsp+0xc0]
   14000bb8a:	mov    DWORD PTR [rcx],eax
   14000bb8c:	mov    eax,DWORD PTR [rbp+0x8c]
   14000bb92:	mov    DWORD PTR [rcx+0x4],eax
   14000bb95:	mov    eax,DWORD PTR [rbp+0x90]
   14000bb9b:	mov    DWORD PTR [rcx+0x8],eax
   14000bb9e:	mov    eax,DWORD PTR [rbp+0x94]
   14000bba4:	mov    DWORD PTR [rcx+0xc],eax
   14000bba7:	lea    rcx,[rsp+0x1e8]
   14000bbaf:	call   QWORD PTR [rip+0x9813]        # 0x1400153c8
   14000bbb5:	add    rbp,0x118
   14000bbbc:	mov    rax,QWORD PTR [rbp+0x0]
   14000bbc0:	mov    ecx,DWORD PTR [rax]
   14000bbc2:	cmp    ecx,0x1
   14000bbc5:	je     0x14000bbe0
   14000bbc7:	test   ecx,ecx
   14000bbc9:	je     0x14000bbe0
   14000bbcb:	mov    edx,0x7fffffff
   14000bbd0:	mov    r8d,0x1
   14000bbd6:	mov    rcx,rbp
   14000bbd9:	call   0x1400049c0
   14000bbde:	jmp    0x14000bbe9
   14000bbe0:	mov    rcx,rbp
   14000bbe3:	call   QWORD PTR [rip+0x97a7]        # 0x140015390
   14000bbe9:	lea    r8,[rsp+0x1d0]
   14000bbf1:	mov    rdx,rax
   14000bbf4:	mov    rcx,rbp
   14000bbf7:	call   0x1400040c0
   14000bbfc:	lea    rcx,[rsp+0x1e8]
   14000bc04:	call   QWORD PTR [rip+0x97ae]        # 0x1400153b8
   14000bc0a:	lea    rcx,[rsp+0xc0]
   14000bc12:	call   QWORD PTR [rip+0x97a0]        # 0x1400153b8
   14000bc18:	xor    al,al
   14000bc1a:	add    rsp,0x3c8
   14000bc21:	pop    r15
   14000bc23:	pop    r14
   14000bc25:	pop    r13
   14000bc27:	pop    r12
   14000bc29:	pop    rdi
   14000bc2a:	pop    rsi
   14000bc2b:	pop    rbp
   14000bc2c:	pop    rbx
   14000bc2d:	ret    
   14000bc2e:	xchg   ax,ax
   14000bc30:	mov    edi,0xe1000051
   14000bc35:	push   rcx
   14000bc36:	add    BYTE PTR [rax],al
   14000bc38:	js     0x14000bc8c
   14000bc3a:	add    BYTE PTR [rax],al
   14000bc3c:	cdq    
   14000bc3d:	push   rdx
   14000bc3e:	add    BYTE PTR [rax],al
   14000bc40:	icebp  
   14000bc41:	push   rdx
   14000bc42:	add    BYTE PTR [rax],al
   14000bc44:	cmp    edx,DWORD PTR [rbx+0x0]
   14000bc47:	add    BYTE PTR [rdx+0x53],dh
   14000bc4a:	add    BYTE PTR [rax],al
   14000bc4c:	mov    ch,0x53
   14000bc4e:	add    BYTE PTR [rax],al
   14000bc50:	stc    
   14000bc51:	push   rbx
   14000bc52:	add    BYTE PTR [rax],al
   14000bc54:	fist   WORD PTR [rax+rax*1+0x0]
   14000bc58:	(bad)  
   14000bc59:	push   rbp
   14000bc5a:	add    BYTE PTR [rax],al
   14000bc5c:	rex.RXB push r14
   14000bc5e:	add    BYTE PTR [rax],al
   14000bc60:	cmp    BYTE PTR [rsi+0x572a0000],ch
   14000bc66:	add    BYTE PTR [rax],al
   14000bc68:	outs   dx,BYTE PTR ds:[rsi]
   14000bc69:	push   rdi
   14000bc6a:	add    BYTE PTR [rax],al
   14000bc6c:	mov    edi,0x13000057
   14000bc71:	pop    rax
   14000bc72:	add    BYTE PTR [rax],al
   14000bc74:	sahf   
   14000bc75:	pop    rax
   14000bc76:	add    BYTE PTR [rax],al
   14000bc78:	rex.X pop rcx
   14000bc7a:	add    BYTE PTR [rax],al
   14000bc7c:	cld    
   14000bc7d:	pop    rcx
   14000bc7e:	add    BYTE PTR [rax],al
   14000bc80:	jo     0x14000bcdc
   14000bc82:	add    BYTE PTR [rax],al
   14000bc84:	xchg   edi,eax
   14000bc85:	pop    rbx
   14000bc86:	add    BYTE PTR [rax],al
   14000bc88:	(bad)  
   14000bc89:	pop    rsp
   14000bc8a:	add    BYTE PTR [rax],al
   14000bc8c:	in     al,dx
   14000bc8d:	pop    rsp
   14000bc8e:	add    BYTE PTR [rax],al
   14000bc90:	je     0x14000bcef
   14000bc92:	add    BYTE PTR [rax],al
   14000bc94:	xchg   ebp,eax
   14000bc95:	pop    rbp
   14000bc96:	add    BYTE PTR [rax],al
   14000bc98:	cs pop rsi
   14000bc9a:	add    BYTE PTR [rax],al
   14000bc9c:	add    ebx,DWORD PTR [rdi+0x0]
   14000bc9f:	add    BYTE PTR [rbx+0x60],bl
   14000bca2:	add    BYTE PTR [rax],al
   14000bca4:	movabs ds:0x3000006311000061,al
   14000bcad:	add    BYTE PTR fs:[rax],al
   14000bcb0:	jge    0x14000bd17
   14000bcb2:	add    BYTE PTR [rax],al
   14000bcb4:	stos   BYTE PTR es:[rdi],al
   14000bcb5:	data16 add BYTE PTR [rax],al
   14000bcb8:	or     ebp,DWORD PTR [rax+0x0]
   14000bcbb:	add    BYTE PTR [rdi-0x62ffff98],cl
   14000bcc1:	imul   eax,DWORD PTR [rax],0x0
   14000bcc4:	icebp  
   14000bcc5:	ins    DWORD PTR es:[rdi],dx
   14000bcc6:	add    BYTE PTR [rax],al
   14000bcc8:	sbb    BYTE PTR [rax+0x0],dh
   14000bccb:	add    BYTE PTR [rax+0x70],bl
   14000bcce:	add    BYTE PTR [rax],al
   14000bcd0:	mov    edi,0x40000070
   14000bcd5:	jno    0x14000bcd7
   14000bcd7:	add    BYTE PTR [rax-0x3fffff8f],al
   14000bcdd:	jno    0x14000bcdf
   14000bcdf:	add    BYTE PTR [rax],al
   14000bce1:	jb     0x14000bce3
   14000bce3:	add    BYTE PTR [rcx+0x72],bh
   14000bce6:	add    BYTE PTR [rax],al
   14000bce8:	shl    DWORD PTR [rdx+0x0],cl
   14000bceb:	add    bh,ah
   14000bced:	jae    0x14000bcef
   14000bcef:	add    dh,bh
   14000bcf1:	je     0x14000bcf3
   14000bcf3:	add    BYTE PTR [rsi+0x46000075],dh
   14000bcf9:	jbe    0x14000bcfb
   14000bcfb:	add    BYTE PTR [rcx+0x79000076],al
   14000bd01:	ja     0x14000bd03
   14000bd03:	add    BYTE PTR [rax+0x78],cl
   14000bd06:	add    BYTE PTR [rax],al
   14000bd08:	add    BYTE PTR [rcx+0x0],bh
   14000bd0b:	add    BYTE PTR [rax-0x6ffff87],bl
   14000bd11:	jns    0x14000bd13
   14000bd13:	add    BYTE PTR [rbx],cl
   14000bd15:	jnp    0x14000bd17
   14000bd17:	add    BYTE PTR [rbx+0x7b],ah
   14000bd1a:	add    BYTE PTR [rax],al
   14000bd1c:	(bad)  
   14000bd1d:	jnp    0x14000bd1f
   14000bd1f:	add    BYTE PTR [rbp+0x7c],al
   14000bd22:	add    BYTE PTR [rax],al
   14000bd24:	(bad)  
   14000bd27:	add    BYTE PTR [rcx],cl
   14000bd29:	jge    0x14000bd2b
   14000bd2b:	add    BYTE PTR [rbx-0xfffff83],cl
   14000bd31:	jge    0x14000bd33
   14000bd33:	add    BYTE PTR [rdi+rdi*2],al
   14000bd36:	add    BYTE PTR [rax],al
   14000bd38:	and    al,BYTE PTR [rax-0x7f8a0000]
   14000bd3e:	add    BYTE PTR [rax],al
   14000bd40:	xlat   BYTE PTR ds:[rbx]
   14000bd41:	add    BYTE PTR [rax],0x0
   14000bd44:	xor    al,0x81
   14000bd46:	add    BYTE PTR [rax],al
   14000bd48:	xchg   ecx,eax
   14000bd49:	add    DWORD PTR [rax],0x81e300
   14000bd4f:	add    BYTE PTR [rdx+rax*4-0x7cac0000],bh
   14000bd56:	add    BYTE PTR [rax],al
   14000bd58:	cdq    
   14000bd59:	add    DWORD PTR [rax],0x0
   14000bd5c:	(bad)  
   14000bd5d:	add    DWORD PTR [rax],0x0
   14000bd60:	push   rsp
   14000bd61:	test   BYTE PTR [rax],al
   14000bd63:	add    BYTE PTR [rax+0x9000084],ch
   14000bd69:	test   DWORD PTR [rax],eax
   14000bd6b:	add    BYTE PTR [rcx-0x7b],bl
   14000bd6e:	add    BYTE PTR [rax],al
   14000bd70:	test   eax,0xfa000085
   14000bd75:	test   DWORD PTR [rax],eax
   14000bd77:	add    BYTE PTR [rbx-0x7a],cl
   14000bd7a:	add    BYTE PTR [rax],al
   14000bd7c:	pushf  
   14000bd7d:	xchg   BYTE PTR [rax],al
   14000bd7f:	add    ch,ch
   14000bd81:	xchg   BYTE PTR [rax],al
   14000bd83:	add    BYTE PTR [rsi],bh
   14000bd85:	xchg   DWORD PTR [rax],eax
   14000bd87:	add    BYTE PTR [rdi-0x1fffff79],cl
   14000bd8d:	xchg   DWORD PTR [rax],eax
   14000bd8f:	add    BYTE PTR [rcx],dh
   14000bd91:	mov    BYTE PTR [rax],al
   14000bd93:	add    BYTE PTR [rdx-0x1bffff78],al
   14000bd99:	mov    BYTE PTR [rax],al
   14000bd9b:	add    BYTE PTR [rsi-0x77],al
   14000bd9e:	add    BYTE PTR [rax],al
   14000bda0:	test   al,0x89
   14000bda2:	add    BYTE PTR [rax],al
   14000bda4:	(bad)  
   14000bda5:	mov    al,BYTE PTR [rax]
   14000bda7:	add    BYTE PTR [rax-0x76],ch
   14000bdaa:	add    BYTE PTR [rax],al
   14000bdac:	retf   0x8a
   14000bdaf:	add    BYTE PTR [rbx+rcx*4],ch
   14000bdb2:	add    BYTE PTR [rax],al
   14000bdb4:	mov    cs,WORD PTR [rbx-0x74100000]
   14000bdba:	add    BYTE PTR [rax],al
   14000bdbc:	push   rdx
   14000bdbd:	mov    WORD PTR [rax],es
   14000bdbf:	add    BYTE PTR [rsp+rcx*4-0x72ea0000],dh
   14000bdc6:	add    BYTE PTR [rax],al
   14000bdc8:	js     0x14000bd57
   14000bdca:	add    BYTE PTR [rax],al
   14000bdcc:	fimul  DWORD PTR [rbp-0x71c40000]
   14000bdd2:	add    BYTE PTR [rax],al
   14000bdd4:	sahf   
   14000bdd5:	mov    es,WORD PTR [rax]
   14000bdd7:	add    BYTE PTR [rax],al
   14000bdd9:	pop    QWORD PTR [rax]
   14000bddb:	add    BYTE PTR [rdx-0x71],ah
   14000bdde:	add    BYTE PTR [rax],al
   14000bde0:	(bad)  
   14000bde1:	pop    QWORD PTR [rax]
   14000bde3:	add    BYTE PTR [rsi],ah
   14000bde5:	nop
   14000bde6:	add    BYTE PTR [rax],al
   14000bde8:	mov    BYTE PTR [rax-0x6f160000],dl
   14000bdee:	add    BYTE PTR [rax],al
   14000bdf0:	rex.WR xchg rcx,rax
   14000bdf2:	add    BYTE PTR [rax],al
   14000bdf4:	(bad)  
   14000bdf5:	xchg   ecx,eax
   14000bdf6:	add    BYTE PTR [rax],al
   14000bdf8:	rex.WR xchg rdx,rax
   14000bdfa:	add    BYTE PTR [rax],al
   14000bdfc:	pop    rsp
   14000bdfd:	xchg   edx,eax
   14000bdfe:	add    BYTE PTR [rax],al
   14000be00:	ins    BYTE PTR es:[rdi],dx
   14000be01:	xchg   edx,eax
   14000be02:	add    BYTE PTR [rax],al
   14000be04:	jl     0x14000bd98
   14000be06:	add    BYTE PTR [rax],al
   14000be08:	mov    WORD PTR [rdx-0x6d640000],ss
   14000be0e:	add    BYTE PTR [rax],al
   14000be10:	lods   al,BYTE PTR ds:[rsi]
   14000be11:	xchg   edx,eax
   14000be12:	add    BYTE PTR [rax],al
   14000be14:	mov    esp,0xcc000092
   14000be19:	xchg   edx,eax
   14000be1a:	add    BYTE PTR [rax],al
   14000be1c:	fcom   QWORD PTR [rdx-0x6d140000]
   14000be22:	add    BYTE PTR [rax],al
   14000be24:	cld    
   14000be25:	xchg   edx,eax
   14000be26:	add    BYTE PTR [rax],al
   14000be28:	or     al,0x93
   14000be2a:	add    BYTE PTR [rax],al
   14000be2c:	xchg   bx,ax
   14000be2e:	add    BYTE PTR [rax],al
   14000be30:	(bad)  
   14000be31:	xchg   ebx,eax
   14000be32:	add    BYTE PTR [rax],al
   14000be34:	or     edx,DWORD PTR [rax+rax*1+0x945c00]
   14000be3b:	add    BYTE PTR [rdx*4-0x6abc0000],dh
   14000be42:	add    BYTE PTR [rax],al
   14000be44:	push   rsp
   14000be45:	xchg   ebp,eax
   14000be46:	add    BYTE PTR [rax],al
   14000be48:	test   al,0x95
   14000be4a:	add    BYTE PTR [rax],al
   14000be4c:	or     DWORD PTR [rsi-0x69960000],edx
   14000be52:	add    BYTE PTR [rax],al
   14000be54:	xlat   BYTE PTR ds:[rbx]
   14000be55:	xchg   esi,eax
   14000be56:	add    BYTE PTR [rax],al
   14000be58:	jmp    0x16900bef3
   14000be5d:	xchg   edi,eax
   14000be5e:	add    BYTE PTR [rax],al
   14000be60:	jns    0x14000bdf9
   14000be62:	add    BYTE PTR [rax],al
   14000be64:	ins    BYTE PTR es:[rdi],dx
   14000be65:	cwde   
   14000be66:	add    BYTE PTR [rax],al
   14000be68:	cs cdq 
   14000be6a:	add    BYTE PTR [rax],al
   14000be6c:	rex.X (bad) 
   14000be6e:	add    BYTE PTR [rax],al
   14000be70:	add    DWORD PTR [rbx-0x63fd0000],ebx
   14000be76:	add    BYTE PTR [rax],al
   14000be78:	imul   ebx,DWORD PTR [rbp-0x62480000],0x9ed50000
   14000be82:	add    BYTE PTR [rax],al
   14000be84:	(bad)  
   14000be85:	lahf   
   14000be86:	add    BYTE PTR [rax],al
   14000be88:	(bad)  
   14000be89:	lahf   
   14000be8a:	add    BYTE PTR [rax],al
   14000be8c:	sub    DWORD PTR [rax-0x5fa00000],esp
   14000be92:	add    BYTE PTR [rax],al
   14000be94:	(bad)  
   14000be95:	movabs al,ds:0xa1780000a1370000
   14000be9e:	add    BYTE PTR [rax],al
   14000bea0:	xor    ah,BYTE PTR [rdx-0x5d2e0000]
   14000bea6:	add    BYTE PTR [rax],al
   14000bea8:	(bad)  
   14000bea9:	movabs ds:0xa3fd0000a3670000,eax
   14000beb2:	add    BYTE PTR [rax],al
   14000beb4:	data16 movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000beb6:	add    BYTE PTR [rax],al
   14000beb8:	cld    
   14000beb9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000beba:	add    BYTE PTR [rax],al
   14000bebc:	movs   DWORD PTR es:[rdi],DWORD PTR ss:[rsi]
   14000bebe:	add    BYTE PTR [rax],al
   14000bec0:	movabs eax,ds:0x290000a5e10000a5
   14000bec9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000beca:	add    BYTE PTR [rax],al
   14000becc:	in     al,dx
   14000becd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bece:	add    BYTE PTR [rax],al
   14000bed0:	cmp    eax,0xb40000a7
   14000bed5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bed6:	add    BYTE PTR [rax],al
   14000bed8:	or     ebp,DWORD PTR [rcx-0x55840000]
   14000bede:	add    BYTE PTR [rax],al
   14000bee0:	(bad)  
   14000bee1:	stos   DWORD PTR es:[rdi],eax
   14000bee2:	add    BYTE PTR [rax],al
   14000bee4:	lods   al,BYTE PTR cs:[rsi]
   14000bee6:	add    BYTE PTR [rax],al
   14000bee8:	jb     0x14000be96
   14000beea:	add    BYTE PTR [rax],al
   14000beec:	xchg   ebx,eax
   14000beed:	lods   al,BYTE PTR ds:[rsi]
   14000beee:	add    BYTE PTR [rax],al
   14000bef0:	fld    TBYTE PTR [rax+rax*1+0xad2300]
   14000bef7:	add    BYTE PTR [rdi-0x53],ah
   14000befa:	add    BYTE PTR [rax],al
   14000befc:	mov    eax,0xf80000ad
   14000bf01:	lods   eax,DWORD PTR ds:[rsi]
   14000bf02:	add    BYTE PTR [rax],al
   14000bf04:	scas   al,BYTE PTR es:[rdi]
	...
   14000bf0e:	add    DWORD PTR [rbp+0x4030302],esi
   14000bf14:	add    al,0xb5
   14000bf16:	mov    ch,0xb5
   14000bf18:	add    eax,0x7b506b5
   14000bf1d:	mov    ch,0x8
   14000bf1f:	mov    ch,0x9
   14000bf21:	or     cl,BYTE PTR [rbx]
   14000bf23:	or     al,0xd
   14000bf25:	or     eax,0x11100f0e
   14000bf2a:	adc    dl,BYTE PTR [rbx]
   14000bf2c:	mov    ch,0x14
   14000bf2e:	adc    eax,0xb5b5b516
   14000bf33:	mov    ch,0xb5
   14000bf35:	mov    ch,0xb5
   14000bf37:	(bad)  
   14000bf38:	mov    ch,0xb5
   14000bf3a:	mov    ch,0xc
   14000bf3c:	sbb    BYTE PTR [rcx],bl
   14000bf3e:	sbb    dh,BYTE PTR [rbp-0x4ae34ae5]
   14000bf44:	sbb    eax,0x1fb51eb5
   14000bf49:	and    BYTE PTR [rcx],ah
   14000bf4b:	and    ah,BYTE PTR [rbx]
   14000bf4d:	and    al,0x25
   14000bf4f:	es es mov ch,0xb5
   14000bf53:	mov    ch,0xb5
   14000bf55:	mov    ch,0xb5
   14000bf57:	mov    ch,0x27
   14000bf59:	sub    BYTE PTR [rcx],ch
   14000bf5b:	sub    ch,BYTE PTR [rbx]
   14000bf5d:	sub    al,0x2d
   14000bf5f:	sub    eax,0x31302f2e
   14000bf64:	xor    dh,BYTE PTR [rbx]
   14000bf66:	xor    al,0x35
   14000bf68:	ss (bad) 
   14000bf6a:	cmp    BYTE PTR [rcx],bh
   14000bf6c:	cmp    bh,BYTE PTR [rbx]
   14000bf6e:	cmp    al,0x3d
   14000bf70:	ds (bad) 
   14000bf72:	rex
   14000bf73:	rex.B
   14000bf74:	rex.X
   14000bf75:	rex.XB
   14000bf76:	rex.R
   14000bf77:	rex.RB
   14000bf78:	rex.RX
   14000bf79:	rex.R mov bpl,0xb5
   14000bf7c:	mov    ch,0xb5
   14000bf7e:	mov    ch,0xb5
   14000bf80:	mov    ch,0xb5
   14000bf82:	mov    ch,0xb5
   14000bf84:	mov    ch,0xb5
   14000bf86:	mov    ch,0xb5
   14000bf88:	mov    ch,0xb5
   14000bf8a:	mov    ch,0xb5
   14000bf8c:	mov    ch,0xb5
   14000bf8e:	mov    ch,0xb5
   14000bf90:	mov    ch,0xb5
   14000bf92:	mov    ch,0xb5
   14000bf94:	mov    ch,0xb5
   14000bf96:	mov    ch,0xb5
   14000bf98:	mov    ch,0xb5
   14000bf9a:	mov    ch,0xb5
   14000bf9c:	mov    ch,0x47
   14000bf9e:	rex.W
   14000bf9f:	rex.WB mov r13b,0x4a
   14000bfa2:	rex.WXB
   14000bfa3:	rex.WXB
   14000bfa4:	rex.RXB
   14000bfa5:	rex.W or al,0x2
   14000bfa8:	rex.WR
   14000bfa9:	rex.WRB mov r13b,0xb5
   14000bfac:	mov    ch,0x4e
   14000bfae:	rex.WRXB mov r13b,0x50
   14000bfb1:	push   rcx
   14000bfb2:	push   rdx
   14000bfb3:	push   rbx
   14000bfb4:	push   rsp
   14000bfb5:	push   rbp
   14000bfb6:	push   rsi
   14000bfb7:	push   rdi
   14000bfb8:	pop    rax
   14000bfb9:	mov    ch,0x59
   14000bfbb:	pop    rdx
   14000bfbc:	pop    rbx
   14000bfbd:	mov    ch,0x5c
   14000bfbf:	pop    rbp
   14000bfc0:	mov    ch,0x5e
   14000bfc2:	pop    rdi
   14000bfc3:	(bad)  
   14000bfc4:	mov    ch,0x61
   14000bfc6:	(bad)
   14000bfcb:	mov    ch,0x61
   14000bfcd:	(bad)
   14000bfd2:	addr32 push 0x67b56a69
   14000bfd8:	push   0x6bb56a69
   14000bfdd:	mov    ch,0x6b
   14000bfdf:	mov    ch,0x6c
   14000bfe1:	mov    ch,0x6c
   14000bfe3:	mov    ch,0x6d
   14000bfe5:	mov    ch,0x6d
   14000bfe7:	mov    ch,0x6e
   14000bfe9:	mov    ch,0x6e
   14000bfeb:	mov    ch,0x6f
   14000bfed:	mov    ch,0x6f
   14000bfef:	mov    ch,0x70
   14000bff1:	mov    ch,0x70
   14000bff3:	mov    ch,0x71
   14000bff5:	mov    ch,0x71
   14000bff7:	jb     0x14000c06c
   14000bff9:	je     0x14000c070
   14000bffb:	jbe    0x14000c074
   14000bffd:	js     0x14000c078
   14000bfff:	jp     0x14000c07c
   14000c001:	jl     0x14000c080
   14000c003:	mov    ch,0x7e
   14000c005:	or     al,0xb5
   14000c007:	mov    ch,0x7e
   14000c009:	or     al,0xb5
   14000c00b:	mov    ch,0xb5
   14000c00d:	mov    ch,0xb5
   14000c00f:	mov    ch,0xb5
   14000c011:	mov    ch,0xb5
   14000c013:	mov    ch,0xb5
   14000c015:	mov    ch,0xb5
   14000c017:	mov    ch,0xb5
   14000c019:	mov    ch,0x7f
   14000c01b:	add    BYTE PTR [rcx-0x7d4afdf4],0x83
   14000c022:	test   BYTE PTR [rbp-0x77787a7a],al
   14000c028:	mov    BYTE PTR [rcx+0xc89b50c],cl
   14000c02e:	mov    ch,0x8a
   14000c030:	mov    ch,0x8b
   14000c032:	mov    WORD PTR [rbp-0x70714a4b],cs
   14000c038:	nop
   14000c039:	xchg   ecx,eax
   14000c03a:	xchg   edx,eax
   14000c03b:	xchg   ebx,eax
   14000c03c:	mov    ch,0x94
   14000c03e:	mov    ch,0x95
   14000c040:	mov    ch,0x96
   14000c042:	mov    ch,0x97
   14000c044:	mov    ch,0x98
   14000c046:	cdq    
   14000c047:	(bad)  
   14000c048:	fwait
   14000c049:	pushf  
   14000c04a:	popf   
   14000c04b:	sahf   
   14000c04c:	or     al,0x2
   14000c04e:	lahf   
   14000c04f:	movabs al,ds:0xa7a6a5a4a3a2b5a1
   14000c058:	mov    ch,0xa8
   14000c05a:	mov    ch,0xa9
   14000c05c:	stos   BYTE PTR es:[rdi],al
   14000c05d:	stos   DWORD PTR es:[rdi],eax
   14000c05e:	lods   al,BYTE PTR ds:[rsi]
   14000c05f:	lods   eax,DWORD PTR ds:[rsi]
   14000c060:	or     al,0xae
   14000c062:	or     al,0xb5
   14000c064:	scas   eax,DWORD PTR es:[rdi]
   14000c065:	mov    ch,0xb0
   14000c067:	mov    cl,0xb2
   14000c069:	mov    bl,0xb4
   14000c06b:	or     al,0xcc
   14000c06d:	int3   
   14000c06e:	int3   
   14000c06f:	int3   
   14000c070:	rex push rdi
   14000c072:	sub    rsp,0x20
   14000c076:	cmp    QWORD PTR [rcx+0x8],0x0
   14000c07b:	mov    rdi,rcx
   14000c07e:	je     0x14000c0d2
   14000c080:	mov    QWORD PTR [rsp+0x30],rbx
   14000c085:	xor    ebx,ebx
   14000c087:	cmp    DWORD PTR [rcx+0x10],ebx
   14000c08a:	jle    0x14000c0c3
   14000c08c:	mov    QWORD PTR [rsp+0x38],rsi
   14000c091:	mov    rsi,rbx
   14000c094:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000c0a0:	mov    rax,QWORD PTR [rdi+0x8]
   14000c0a4:	mov    rcx,QWORD PTR [rsi+rax*1]
   14000c0a8:	test   rcx,rcx
   14000c0ab:	je     0x14000c0b3
   14000c0ad:	call   QWORD PTR [rip+0x904d]        # 0x140015100
   14000c0b3:	inc    ebx
   14000c0b5:	add    rsi,0x8
   14000c0b9:	cmp    ebx,DWORD PTR [rdi+0x10]
   14000c0bc:	jl     0x14000c0a0
   14000c0be:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c0c3:	mov    rcx,QWORD PTR [rdi+0x8]
   14000c0c7:	call   QWORD PTR [rip+0x9033]        # 0x140015100
   14000c0cd:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c0d2:	add    rsp,0x20
   14000c0d6:	pop    rdi
   14000c0d7:	ret    
   14000c0d8:	int3   
   14000c0d9:	int3   
   14000c0da:	int3   
   14000c0db:	int3   
   14000c0dc:	int3   
   14000c0dd:	int3   
   14000c0de:	int3   
   14000c0df:	int3   
   14000c0e0:	rex push rbx
   14000c0e2:	sub    rsp,0x30
   14000c0e6:	mov    r11d,r8d
   14000c0e9:	mov    rbx,rcx
   14000c0ec:	test   edx,edx
   14000c0ee:	jne    0x14000c0fc
   14000c0f0:	add    rsp,0x30
   14000c0f4:	pop    rbx
   14000c0f5:	rex.W jmp QWORD PTR [rip+0x910c]        # 0x140015208
   14000c0fc:	movzx  eax,BYTE PTR [rbx]
   14000c0ff:	movsd  xmm3,QWORD PTR [rip+0xb1c9]        # 0x1400172d0
   14000c107:	xor    ecx,ecx
   14000c109:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14000c10e:	movapd xmm6,xmm3
   14000c112:	cmp    al,0x2b
   14000c114:	jne    0x14000c11d
   14000c116:	mov    ecx,0x1
   14000c11b:	jmp    0x14000c12e
   14000c11d:	cmp    al,0x2d
   14000c11f:	jne    0x14000c12e
   14000c121:	movsd  xmm6,QWORD PTR [rip+0xb19f]        # 0x1400172c8
   14000c129:	mov    ecx,0x1
   14000c12e:	mov    eax,edx
   14000c130:	sub    eax,ecx
   14000c132:	cmp    eax,0x2
   14000c135:	jl     0x14000c185
   14000c137:	movsxd rax,ecx
   14000c13a:	cmp    BYTE PTR [rax+rbx*1],0x30
   14000c13e:	jne    0x14000c185
   14000c140:	movzx  eax,BYTE PTR [rax+rbx*1+0x1]
   14000c145:	cmp    al,0x78
   14000c147:	je     0x14000c14d
   14000c149:	cmp    al,0x58
   14000c14b:	jne    0x14000c178
   14000c14d:	cmp    r8d,0x22
   14000c151:	jge    0x14000c178
   14000c153:	test   r8d,r8d
   14000c156:	je     0x14000c16d
   14000c158:	cmp    r8d,0x10
   14000c15c:	je     0x14000c16d
   14000c15e:	xorpd  xmm0,xmm0
   14000c162:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000c167:	add    rsp,0x30
   14000c16b:	pop    rbx
   14000c16c:	ret    
   14000c16d:	mov    r11d,0x10
   14000c173:	add    ecx,0x2
   14000c176:	jmp    0x14000c191
   14000c178:	test   r8d,r8d
   14000c17b:	jne    0x14000c191
   14000c17d:	lea    r11d,[r8+0x8]
   14000c181:	inc    ecx
   14000c183:	jmp    0x14000c191
   14000c185:	mov    eax,0xa
   14000c18a:	test   r8d,r8d
   14000c18d:	cmove  r11d,eax
   14000c191:	mov    QWORD PTR [rsp+0x40],rdi
   14000c196:	movsxd rdi,ecx
   14000c199:	movsxd r9,edx
   14000c19c:	cmp    rdi,r9
   14000c19f:	mov    r10d,ecx
   14000c1a2:	mov    r8,rdi
   14000c1a5:	jge    0x14000c3c4
   14000c1ab:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c1b0:	movzx  edx,BYTE PTR [r8+rbx*1]
   14000c1b5:	lea    eax,[rdx-0x30]
   14000c1b8:	cmp    al,0x9
   14000c1ba:	ja     0x14000c1c4
   14000c1bc:	movsx  eax,dl
   14000c1bf:	sub    eax,0x30
   14000c1c2:	jmp    0x14000c1e0
   14000c1c4:	lea    eax,[rdx-0x61]
   14000c1c7:	cmp    al,0x19
   14000c1c9:	ja     0x14000c1d3
   14000c1cb:	movsx  eax,dl
   14000c1ce:	sub    eax,0x57
   14000c1d1:	jmp    0x14000c1e0
   14000c1d3:	lea    eax,[rdx-0x41]
   14000c1d6:	cmp    al,0x19
   14000c1d8:	ja     0x14000c1f4
   14000c1da:	movsx  eax,dl
   14000c1dd:	sub    eax,0x37
   14000c1e0:	cmp    eax,0xffffffff
   14000c1e3:	je     0x14000c1f4
   14000c1e5:	cmp    eax,r11d
   14000c1e8:	jge    0x14000c1f4
   14000c1ea:	inc    r8
   14000c1ed:	inc    ecx
   14000c1ef:	cmp    r8,r9
   14000c1f2:	jl     0x14000c1b0
   14000c1f4:	cmp    r10d,ecx
   14000c1f7:	je     0x14000c3c4
   14000c1fd:	xorpd  xmm2,xmm2
   14000c201:	lea    eax,[rcx-0x1]
   14000c204:	movsxd rdx,eax
   14000c207:	cmp    rdx,rdi
   14000c20a:	jl     0x14000c3ea
   14000c210:	mov    rax,rdx
   14000c213:	sub    rax,rdi
   14000c216:	inc    rax
   14000c219:	cmp    rax,0x4
   14000c21d:	jl     0x14000c360
   14000c223:	movd   xmm1,r11d
   14000c228:	lea    r8,[rdi+0x3]
   14000c22c:	cvtdq2pd xmm1,xmm1
   14000c230:	movzx  ecx,BYTE PTR [rbx+rdx*1]
   14000c234:	lea    eax,[rcx-0x30]
   14000c237:	cmp    al,0x9
   14000c239:	ja     0x14000c243
   14000c23b:	movsx  eax,cl
   14000c23e:	sub    eax,0x30
   14000c241:	jmp    0x14000c264
   14000c243:	lea    eax,[rcx-0x61]
   14000c246:	cmp    al,0x19
   14000c248:	ja     0x14000c252
   14000c24a:	movsx  eax,cl
   14000c24d:	sub    eax,0x57
   14000c250:	jmp    0x14000c264
   14000c252:	lea    eax,[rcx-0x41]
   14000c255:	cmp    al,0x19
   14000c257:	ja     0x14000c261
   14000c259:	movsx  eax,cl
   14000c25c:	sub    eax,0x37
   14000c25f:	jmp    0x14000c264
   14000c261:	or     eax,0xffffffff
   14000c264:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x1]
   14000c269:	movd   xmm0,eax
   14000c26d:	lea    eax,[rcx-0x30]
   14000c270:	cvtdq2pd xmm0,xmm0
   14000c274:	mulsd  xmm0,xmm3
   14000c278:	mulsd  xmm3,xmm1
   14000c27c:	addsd  xmm2,xmm0
   14000c280:	cmp    al,0x9
   14000c282:	ja     0x14000c28c
   14000c284:	movsx  eax,cl
   14000c287:	sub    eax,0x30
   14000c28a:	jmp    0x14000c2ad
   14000c28c:	lea    eax,[rcx-0x61]
   14000c28f:	cmp    al,0x19
   14000c291:	ja     0x14000c29b
   14000c293:	movsx  eax,cl
   14000c296:	sub    eax,0x57
   14000c299:	jmp    0x14000c2ad
   14000c29b:	lea    eax,[rcx-0x41]
   14000c29e:	cmp    al,0x19
   14000c2a0:	ja     0x14000c2aa
   14000c2a2:	movsx  eax,cl
   14000c2a5:	sub    eax,0x37
   14000c2a8:	jmp    0x14000c2ad
   14000c2aa:	or     eax,0xffffffff
   14000c2ad:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x2]
   14000c2b2:	movd   xmm0,eax
   14000c2b6:	lea    eax,[rcx-0x30]
   14000c2b9:	cvtdq2pd xmm0,xmm0
   14000c2bd:	mulsd  xmm0,xmm3
   14000c2c1:	mulsd  xmm3,xmm1
   14000c2c5:	addsd  xmm2,xmm0
   14000c2c9:	cmp    al,0x9
   14000c2cb:	ja     0x14000c2d5
   14000c2cd:	movsx  eax,cl
   14000c2d0:	sub    eax,0x30
   14000c2d3:	jmp    0x14000c2f6
   14000c2d5:	lea    eax,[rcx-0x61]
   14000c2d8:	cmp    al,0x19
   14000c2da:	ja     0x14000c2e4
   14000c2dc:	movsx  eax,cl
   14000c2df:	sub    eax,0x57
   14000c2e2:	jmp    0x14000c2f6
   14000c2e4:	lea    eax,[rcx-0x41]
   14000c2e7:	cmp    al,0x19
   14000c2e9:	ja     0x14000c2f3
   14000c2eb:	movsx  eax,cl
   14000c2ee:	sub    eax,0x37
   14000c2f1:	jmp    0x14000c2f6
   14000c2f3:	or     eax,0xffffffff
   14000c2f6:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x3]
   14000c2fb:	movd   xmm0,eax
   14000c2ff:	lea    eax,[rcx-0x30]
   14000c302:	cvtdq2pd xmm0,xmm0
   14000c306:	mulsd  xmm0,xmm3
   14000c30a:	mulsd  xmm3,xmm1
   14000c30e:	addsd  xmm2,xmm0
   14000c312:	cmp    al,0x9
   14000c314:	ja     0x14000c31e
   14000c316:	movsx  eax,cl
   14000c319:	sub    eax,0x30
   14000c31c:	jmp    0x14000c33f
   14000c31e:	lea    eax,[rcx-0x61]
   14000c321:	cmp    al,0x19
   14000c323:	ja     0x14000c32d
   14000c325:	movsx  eax,cl
   14000c328:	sub    eax,0x57
   14000c32b:	jmp    0x14000c33f
   14000c32d:	lea    eax,[rcx-0x41]
   14000c330:	cmp    al,0x19
   14000c332:	ja     0x14000c33c
   14000c334:	movsx  eax,cl
   14000c337:	sub    eax,0x37
   14000c33a:	jmp    0x14000c33f
   14000c33c:	or     eax,0xffffffff
   14000c33f:	movd   xmm0,eax
   14000c343:	sub    rdx,0x4
   14000c347:	cmp    rdx,r8
   14000c34a:	cvtdq2pd xmm0,xmm0
   14000c34e:	mulsd  xmm0,xmm3
   14000c352:	mulsd  xmm3,xmm1
   14000c356:	addsd  xmm2,xmm0
   14000c35a:	jge    0x14000c230
   14000c360:	cmp    rdx,rdi
   14000c363:	jl     0x14000c3ea
   14000c369:	movd   xmm1,r11d
   14000c36e:	cvtdq2pd xmm1,xmm1
   14000c372:	movzx  ecx,BYTE PTR [rdx+rbx*1]
   14000c376:	lea    eax,[rcx-0x30]
   14000c379:	cmp    al,0x9
   14000c37b:	ja     0x14000c385
   14000c37d:	movsx  eax,cl
   14000c380:	sub    eax,0x30
   14000c383:	jmp    0x14000c3a6
   14000c385:	lea    eax,[rcx-0x61]
   14000c388:	cmp    al,0x19
   14000c38a:	ja     0x14000c394
   14000c38c:	movsx  eax,cl
   14000c38f:	sub    eax,0x57
   14000c392:	jmp    0x14000c3a6
   14000c394:	lea    eax,[rcx-0x41]
   14000c397:	cmp    al,0x19
   14000c399:	ja     0x14000c3a3
   14000c39b:	movsx  eax,cl
   14000c39e:	sub    eax,0x37
   14000c3a1:	jmp    0x14000c3a6
   14000c3a3:	or     eax,0xffffffff
   14000c3a6:	movd   xmm0,eax
   14000c3aa:	dec    rdx
   14000c3ad:	cmp    rdx,rdi
   14000c3b0:	cvtdq2pd xmm0,xmm0
   14000c3b4:	mulsd  xmm0,xmm3
   14000c3b8:	mulsd  xmm3,xmm1
   14000c3bc:	addsd  xmm2,xmm0
   14000c3c0:	jge    0x14000c372
   14000c3c2:	jmp    0x14000c3ea
   14000c3c4:	lea    rdx,[rip+0xaeed]        # 0x1400172b8
   14000c3cb:	mov    rcx,rbx
   14000c3ce:	call   QWORD PTR [rip+0x8e2c]        # 0x140015200
   14000c3d4:	test   eax,eax
   14000c3d6:	jne    0x14000c3e0
   14000c3d8:	call   QWORD PTR [rip+0x8e1a]        # 0x1400151f8
   14000c3de:	jmp    0x14000c3e6
   14000c3e0:	call   QWORD PTR [rip+0x8e22]        # 0x140015208
   14000c3e6:	movapd xmm2,xmm0
   14000c3ea:	mov    rdi,QWORD PTR [rsp+0x40]
   14000c3ef:	mulsd  xmm2,xmm6
   14000c3f3:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000c3f8:	movapd xmm0,xmm2
   14000c3fc:	add    rsp,0x30
   14000c400:	pop    rbx
   14000c401:	ret    
   14000c402:	int3   
   14000c403:	int3   
   14000c404:	int3   
   14000c405:	int3   
   14000c406:	int3   
   14000c407:	int3   
   14000c408:	int3   
   14000c409:	int3   
   14000c40a:	int3   
   14000c40b:	int3   
   14000c40c:	int3   
   14000c40d:	int3   
   14000c40e:	int3   
   14000c40f:	int3   
   14000c410:	add    rcx,0x48
   14000c414:	rex.W jmp QWORD PTR [rip+0x8d9d]        # 0x1400151b8
   14000c41b:	int3   
   14000c41c:	int3   
   14000c41d:	int3   
   14000c41e:	int3   
   14000c41f:	int3   
   14000c420:	mov    rax,QWORD PTR [rcx]
   14000c423:	ret    
   14000c424:	int3   
   14000c425:	int3   
   14000c426:	int3   
   14000c427:	int3   
   14000c428:	int3   
   14000c429:	int3   
   14000c42a:	int3   
   14000c42b:	int3   
   14000c42c:	int3   
   14000c42d:	int3   
   14000c42e:	int3   
   14000c42f:	int3   
   14000c430:	mov    QWORD PTR [rcx],rdx
   14000c433:	ret    
   14000c434:	int3   
   14000c435:	int3   
   14000c436:	int3   
   14000c437:	int3   
   14000c438:	int3   
   14000c439:	int3   
   14000c43a:	int3   
   14000c43b:	int3   
   14000c43c:	int3   
   14000c43d:	int3   
   14000c43e:	int3   
   14000c43f:	int3   
   14000c440:	mov    rax,QWORD PTR [rcx+0x8]
   14000c444:	ret    
   14000c445:	int3   
   14000c446:	int3   
   14000c447:	int3   
   14000c448:	int3   
   14000c449:	int3   
   14000c44a:	int3   
   14000c44b:	int3   
   14000c44c:	int3   
   14000c44d:	int3   
   14000c44e:	int3   
   14000c44f:	int3   
   14000c450:	lea    rax,[rcx+0x10]
   14000c454:	ret    
   14000c455:	int3   
   14000c456:	int3   
   14000c457:	int3   
   14000c458:	int3   
   14000c459:	int3   
   14000c45a:	int3   
   14000c45b:	int3   
   14000c45c:	int3   
   14000c45d:	int3   
   14000c45e:	int3   
   14000c45f:	int3   
   14000c460:	mov    QWORD PTR [rsp+0x8],rbx
   14000c465:	mov    QWORD PTR [rsp+0x10],rbp
   14000c46a:	mov    QWORD PTR [rsp+0x18],rsi
   14000c46f:	push   rdi
   14000c470:	sub    rsp,0x20
   14000c474:	mov    rax,QWORD PTR [rcx+0x40]
   14000c478:	lea    rsi,[rcx+0x40]
   14000c47c:	mov    rbp,rdx
   14000c47f:	mov    ebx,DWORD PTR [rax+0x4]
   14000c482:	mov    rdx,r8
   14000c485:	mov    rcx,rsi
   14000c488:	mov    rdi,r8
   14000c48b:	call   QWORD PTR [rip+0x8d87]        # 0x140015218
   14000c491:	mov    r11,QWORD PTR [rdi]
   14000c494:	mov    r9d,DWORD PTR [r11+0x4]
   14000c498:	mov    r8d,ebx
   14000c49b:	mov    rdx,rbp
   14000c49e:	mov    rcx,rsi
   14000c4a1:	call   QWORD PTR [rip+0x8d69]        # 0x140015210
   14000c4a7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c4ac:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c4b1:	mov    rax,rbp
   14000c4b4:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c4b9:	add    rsp,0x20
   14000c4bd:	pop    rdi
   14000c4be:	ret    
   14000c4bf:	int3   
   14000c4c0:	cmp    rdx,r8
   14000c4c3:	je     0x14000c52b
   14000c4c5:	mov    QWORD PTR [rsp+0x8],rbx
   14000c4ca:	mov    QWORD PTR [rsp+0x10],rsi
   14000c4cf:	push   rdi
   14000c4d0:	sub    rsp,0x20
   14000c4d4:	mov    rdi,r9
   14000c4d7:	mov    rsi,r8
   14000c4da:	mov    rbx,rdx
   14000c4dd:	nop    DWORD PTR [rax]
   14000c4e0:	mov    ecx,0x10
   14000c4e5:	call   0x14001463e
   14000c4ea:	test   rax,rax
   14000c4ed:	je     0x14000c50a
   14000c4ef:	mov    rdx,QWORD PTR [rdi]
   14000c4f2:	mov    ecx,DWORD PTR [rdx]
   14000c4f4:	mov    DWORD PTR [rax],ecx
   14000c4f6:	mov    ecx,DWORD PTR [rdx+0x4]
   14000c4f9:	mov    DWORD PTR [rax+0x4],ecx
   14000c4fc:	mov    ecx,DWORD PTR [rdx+0x8]
   14000c4ff:	mov    DWORD PTR [rax+0x8],ecx
   14000c502:	mov    ecx,DWORD PTR [rdx+0xc]
   14000c505:	mov    DWORD PTR [rax+0xc],ecx
   14000c508:	jmp    0x14000c50c
   14000c50a:	xor    eax,eax
   14000c50c:	mov    QWORD PTR [rbx],rax
   14000c50f:	add    rbx,0x8
   14000c513:	add    rdi,0x8
   14000c517:	cmp    rbx,rsi
   14000c51a:	jne    0x14000c4e0
   14000c51c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c521:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c526:	add    rsp,0x20
   14000c52a:	pop    rdi
   14000c52b:	repz ret 
   14000c52d:	int3   
   14000c52e:	int3   
   14000c52f:	int3   
   14000c530:	sub    rsp,0x28
   14000c534:	mov    rdx,QWORD PTR [rcx]
   14000c537:	mov    eax,DWORD PTR [rdx]
   14000c539:	test   eax,eax
   14000c53b:	je     0x14000c54d
   14000c53d:	cmp    eax,0xffffffff
   14000c540:	je     0x14000c5aa
   14000c542:	lock add DWORD PTR [rdx],0xffffffff
   14000c546:	setne  al
   14000c549:	test   al,al
   14000c54b:	jne    0x14000c5aa
   14000c54d:	mov    QWORD PTR [rsp+0x30],rbx
   14000c552:	mov    QWORD PTR [rsp+0x38],rsi
   14000c557:	mov    rsi,QWORD PTR [rcx]
   14000c55a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000c55e:	mov    QWORD PTR [rsp+0x20],rdi
   14000c563:	lea    rbx,[rsi+rax*8+0x10]
   14000c568:	movsxd rax,DWORD PTR [rsi+0x8]
   14000c56c:	lea    rdi,[rsi+rax*8+0x10]
   14000c571:	cmp    rdi,rbx
   14000c574:	je     0x14000c592
   14000c576:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c580:	mov    rcx,QWORD PTR [rbx-0x8]
   14000c584:	sub    rbx,0x8
   14000c588:	call   0x140014638
   14000c58d:	cmp    rbx,rdi
   14000c590:	jne    0x14000c580
   14000c592:	mov    rcx,rsi
   14000c595:	call   QWORD PTR [rip+0x8e0d]        # 0x1400153a8
   14000c59b:	mov    rdi,QWORD PTR [rsp+0x20]
   14000c5a0:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c5a5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c5aa:	add    rsp,0x28
   14000c5ae:	ret    
   14000c5af:	int3   
   14000c5b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c5b5:	mov    QWORD PTR [rsp+0x18],rbp
   14000c5ba:	mov    QWORD PTR [rsp+0x20],rsi
   14000c5bf:	mov    DWORD PTR [rsp+0x10],edx
   14000c5c3:	push   rdi
   14000c5c4:	sub    rsp,0x20
   14000c5c8:	mov    rdx,QWORD PTR [rcx]
   14000c5cb:	movsxd rdi,r8d
   14000c5ce:	mov    rbp,rcx
   14000c5d1:	movsxd rax,DWORD PTR [rdx+0x8]
   14000c5d5:	mov    r8d,edi
   14000c5d8:	lea    rbx,[rdx+rax*8+0x10]
   14000c5dd:	lea    rdx,[rsp+0x38]
   14000c5e2:	call   QWORD PTR [rip+0x8db0]        # 0x140015398
   14000c5e8:	mov    r10,QWORD PTR [rbp+0x0]
   14000c5ec:	movsxd rdx,DWORD PTR [rsp+0x38]
   14000c5f1:	movsxd r9,DWORD PTR [r10+0x8]
   14000c5f5:	mov    rcx,rbp
   14000c5f8:	mov    rsi,rax
   14000c5fb:	add    rdx,r9
   14000c5fe:	lea    r8,[r10+rdx*8+0x10]
   14000c603:	lea    rdx,[r10+r9*8+0x10]
   14000c608:	mov    r9,rbx
   14000c60b:	call   0x14000c4c0
   14000c610:	mov    rdx,QWORD PTR [rbp+0x0]
   14000c614:	movsxd r11,DWORD PTR [rsp+0x38]
   14000c619:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000c61d:	lea    r9,[rbx+r11*8]
   14000c621:	lea    r8,[rdx+rcx*8+0x10]
   14000c626:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000c62a:	add    rcx,r11
   14000c62d:	add    rcx,rdi
   14000c630:	lea    rdx,[rdx+rcx*8+0x10]
   14000c635:	mov    rcx,rbp
   14000c638:	call   0x14000c4c0
   14000c63d:	mov    r11d,DWORD PTR [rsi]
   14000c640:	test   r11d,r11d
   14000c643:	je     0x14000c656
   14000c645:	cmp    r11d,0xffffffff
   14000c649:	je     0x14000c68b
   14000c64b:	lock add DWORD PTR [rsi],0xffffffff
   14000c64f:	setne  al
   14000c652:	test   al,al
   14000c654:	jne    0x14000c68b
   14000c656:	movsxd rax,DWORD PTR [rsi+0xc]
   14000c65a:	lea    rbx,[rsi+rax*8+0x10]
   14000c65f:	movsxd rax,DWORD PTR [rsi+0x8]
   14000c663:	lea    rdi,[rsi+rax*8+0x10]
   14000c668:	cmp    rdi,rbx
   14000c66b:	je     0x14000c682
   14000c66d:	nop    DWORD PTR [rax]
   14000c670:	mov    rcx,QWORD PTR [rbx-0x8]
   14000c674:	sub    rbx,0x8
   14000c678:	call   0x140014638
   14000c67d:	cmp    rbx,rdi
   14000c680:	jne    0x14000c670
   14000c682:	mov    rcx,rsi
   14000c685:	call   QWORD PTR [rip+0x8d1d]        # 0x1400153a8
   14000c68b:	mov    rdx,QWORD PTR [rbp+0x0]
   14000c68f:	movsxd rax,DWORD PTR [rsp+0x38]
   14000c694:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c699:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000c69d:	mov    rbp,QWORD PTR [rsp+0x40]
   14000c6a2:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c6a7:	add    rcx,rax
   14000c6aa:	lea    rax,[rdx+rcx*8+0x10]
   14000c6af:	add    rsp,0x20
   14000c6b3:	pop    rdi
   14000c6b4:	ret    
   14000c6b5:	int3   
   14000c6b6:	int3   
   14000c6b7:	int3   
   14000c6b8:	int3   
   14000c6b9:	int3   
   14000c6ba:	int3   
   14000c6bb:	int3   
   14000c6bc:	int3   
   14000c6bd:	int3   
   14000c6be:	int3   
   14000c6bf:	int3   
   14000c6c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c6c5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c6ca:	push   rdi
   14000c6cb:	sub    rsp,0x20
   14000c6cf:	xor    esi,esi
   14000c6d1:	mov    rdi,rcx
   14000c6d4:	add    rcx,0x10
   14000c6d8:	mov    QWORD PTR [rcx-0x10],rsi
   14000c6dc:	mov    QWORD PTR [rcx-0x8],rsi
   14000c6e0:	call   QWORD PTR [rip+0x8cda]        # 0x1400153c0
   14000c6e6:	mov    QWORD PTR [rdi+0x18],rsi
   14000c6ea:	mov    DWORD PTR [rdi+0x20],esi
   14000c6ed:	mov    DWORD PTR [rdi+0x24],0xffffffff
   14000c6f4:	mov    QWORD PTR [rdi+0x28],rsi
   14000c6f8:	mov    QWORD PTR [rdi+0x30],rsi
   14000c6fc:	mov    rax,QWORD PTR [rip+0x8cad]        # 0x1400153b0
   14000c703:	lea    rcx,[rdi+0x40]
   14000c707:	mov    QWORD PTR [rdi+0x38],rax
   14000c70b:	call   QWORD PTR [rip+0x8adf]        # 0x1400151f0
   14000c711:	lea    rcx,[rdi+0x48]
   14000c715:	call   QWORD PTR [rip+0x8ad5]        # 0x1400151f0
   14000c71b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c720:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c725:	mov    rax,rdi
   14000c728:	add    rsp,0x20
   14000c72c:	pop    rdi
   14000c72d:	ret    
   14000c72e:	int3   
   14000c72f:	int3   
   14000c730:	rex push rbx
   14000c732:	sub    rsp,0x20
   14000c736:	mov    rbx,rcx
   14000c739:	add    rcx,0x48
   14000c73d:	call   QWORD PTR [rip+0x8c75]        # 0x1400153b8
   14000c743:	lea    rcx,[rbx+0x40]
   14000c747:	call   QWORD PTR [rip+0x8c6b]        # 0x1400153b8
   14000c74d:	lea    rcx,[rbx+0x38]
   14000c751:	call   0x14000c530
   14000c756:	lea    rcx,[rbx+0x10]
   14000c75a:	add    rsp,0x20
   14000c75e:	pop    rbx
   14000c75f:	jmp    0x14000c070
   14000c764:	int3   
   14000c765:	int3   
   14000c766:	int3   
   14000c767:	int3   
   14000c768:	int3   
   14000c769:	int3   
   14000c76a:	int3   
   14000c76b:	int3   
   14000c76c:	int3   
   14000c76d:	int3   
   14000c76e:	int3   
   14000c76f:	int3   
   14000c770:	sub    rsp,0x38
   14000c774:	test   r8d,r8d
   14000c777:	jle    0x14000c806
   14000c77d:	mov    eax,DWORD PTR [rsp+0x60]
   14000c781:	add    rcx,0x38
   14000c785:	mov    DWORD PTR [rsp+0x20],edx
   14000c789:	mov    DWORD PTR [rsp+0x2c],eax
   14000c78d:	mov    rax,QWORD PTR [rcx]
   14000c790:	mov    QWORD PTR [rsp+0x30],rbx
   14000c795:	mov    edx,DWORD PTR [rax]
   14000c797:	mov    DWORD PTR [rsp+0x24],r8d
   14000c79c:	mov    DWORD PTR [rsp+0x28],r9d
   14000c7a1:	cmp    edx,0x1
   14000c7a4:	je     0x14000c7bc
   14000c7a6:	test   edx,edx
   14000c7a8:	je     0x14000c7bc
   14000c7aa:	mov    edx,0x7fffffff
   14000c7af:	mov    r8d,0x1
   14000c7b5:	call   0x14000c5b0
   14000c7ba:	jmp    0x14000c7c2
   14000c7bc:	call   QWORD PTR [rip+0x8bce]        # 0x140015390
   14000c7c2:	mov    ecx,0x10
   14000c7c7:	mov    rbx,rax
   14000c7ca:	call   0x14001463e
   14000c7cf:	test   rax,rax
   14000c7d2:	je     0x14000c7fc
   14000c7d4:	lea    rdx,[rsp+0x20]
   14000c7d9:	mov    ecx,DWORD PTR [rdx]
   14000c7db:	mov    DWORD PTR [rax],ecx
   14000c7dd:	mov    ecx,DWORD PTR [rdx+0x4]
   14000c7e0:	mov    DWORD PTR [rax+0x4],ecx
   14000c7e3:	mov    ecx,DWORD PTR [rdx+0x8]
   14000c7e6:	mov    DWORD PTR [rax+0x8],ecx
   14000c7e9:	mov    ecx,DWORD PTR [rdx+0xc]
   14000c7ec:	mov    DWORD PTR [rax+0xc],ecx
   14000c7ef:	mov    QWORD PTR [rbx],rax
   14000c7f2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c7f7:	add    rsp,0x38
   14000c7fb:	ret    
   14000c7fc:	xor    eax,eax
   14000c7fe:	mov    QWORD PTR [rbx],rax
   14000c801:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c806:	add    rsp,0x38
   14000c80a:	ret    
   14000c80b:	int3   
   14000c80c:	int3   
   14000c80d:	int3   
   14000c80e:	int3   
   14000c80f:	int3   
   14000c810:	movzx  eax,WORD PTR [rcx]
   14000c813:	cmp    ax,0x66
   14000c817:	jne    0x14000c835
   14000c819:	cmp    WORD PTR [rcx+0x2],0x6f
   14000c81e:	jne    0x14000c8e2
   14000c824:	cmp    WORD PTR [rcx+0x4],0x72
   14000c829:	jne    0x14000c8e2
   14000c82f:	mov    eax,0x15
   14000c834:	ret    
   14000c835:	cmp    ax,0x67
   14000c839:	jne    0x14000c857
   14000c83b:	cmp    WORD PTR [rcx+0x2],0x65
   14000c840:	jne    0x14000c8e2
   14000c846:	cmp    WORD PTR [rcx+0x4],0x74
   14000c84b:	jne    0x14000c8e2
   14000c851:	mov    eax,0x5f
   14000c856:	ret    
   14000c857:	cmp    ax,0x69
   14000c85b:	jne    0x14000c87b
   14000c85d:	cmp    WORD PTR [rcx+0x2],0x6e
   14000c862:	jne    0x14000c8e2
   14000c864:	cmp    WORD PTR [rcx+0x4],0x74
   14000c869:	jne    0x14000c8e2
   14000c86b:	mov    eax,0x1d
   14000c870:	mov    ecx,0x56
   14000c875:	test   dl,dl
   14000c877:	cmovne eax,ecx
   14000c87a:	ret    
   14000c87b:	cmp    ax,0x6e
   14000c87f:	jne    0x14000c895
   14000c881:	cmp    WORD PTR [rcx+0x2],0x65
   14000c886:	jne    0x14000c8e2
   14000c888:	cmp    WORD PTR [rcx+0x4],0x77
   14000c88d:	jne    0x14000c8e2
   14000c88f:	mov    eax,0x2b
   14000c894:	ret    
   14000c895:	cmp    ax,0x73
   14000c899:	jne    0x14000c8af
   14000c89b:	cmp    WORD PTR [rcx+0x2],0x65
   14000c8a0:	jne    0x14000c8e2
   14000c8a2:	cmp    WORD PTR [rcx+0x4],0x74
   14000c8a7:	jne    0x14000c8e2
   14000c8a9:	mov    eax,0x60
   14000c8ae:	ret    
   14000c8af:	cmp    ax,0x74
   14000c8b3:	jne    0x14000c8c9
   14000c8b5:	cmp    WORD PTR [rcx+0x2],0x72
   14000c8ba:	jne    0x14000c8e2
   14000c8bc:	cmp    WORD PTR [rcx+0x4],0x79
   14000c8c1:	jne    0x14000c8e2
   14000c8c3:	mov    eax,0x49
   14000c8c8:	ret    
   14000c8c9:	cmp    ax,0x76
   14000c8cd:	jne    0x14000c8e2
   14000c8cf:	cmp    WORD PTR [rcx+0x2],0x61
   14000c8d4:	jne    0x14000c8e2
   14000c8d6:	cmp    WORD PTR [rcx+0x4],0x72
   14000c8db:	mov    eax,0x4b
   14000c8e0:	je     0x14000c8e7
   14000c8e2:	mov    eax,0x1d
   14000c8e7:	repz ret 
   14000c8e9:	int3   
   14000c8ea:	int3   
   14000c8eb:	int3   
   14000c8ec:	int3   
   14000c8ed:	int3   
   14000c8ee:	int3   
   14000c8ef:	int3   
   14000c8f0:	movzx  eax,WORD PTR [rcx]
   14000c8f3:	cmp    ax,0x62
   14000c8f7:	jne    0x14000c92a
   14000c8f9:	cmp    WORD PTR [rcx+0x2],0x79
   14000c8fe:	jne    0x14000cabc
   14000c904:	cmp    WORD PTR [rcx+0x4],0x74
   14000c909:	jne    0x14000cabc
   14000c90f:	cmp    WORD PTR [rcx+0x6],0x65
   14000c914:	jne    0x14000cabc
   14000c91a:	mov    eax,0x1d
   14000c91f:	mov    ecx,0x56
   14000c924:	test   dl,dl
   14000c926:	cmovne eax,ecx
   14000c929:	ret    
   14000c92a:	cmp    ax,0x63
   14000c92e:	jne    0x14000c972
   14000c930:	movzx  eax,WORD PTR [rcx+0x2]
   14000c934:	cmp    ax,0x61
   14000c938:	jne    0x14000c956
   14000c93a:	cmp    WORD PTR [rcx+0x4],0x73
   14000c93f:	jne    0x14000cabc
   14000c945:	cmp    WORD PTR [rcx+0x6],0x65
   14000c94a:	jne    0x14000cabc
   14000c950:	mov    eax,0x5
   14000c955:	ret    
   14000c956:	cmp    ax,0x68
   14000c95a:	jne    0x14000cabc
   14000c960:	cmp    WORD PTR [rcx+0x4],0x61
   14000c965:	jne    0x14000cabc
   14000c96b:	cmp    WORD PTR [rcx+0x6],0x72
   14000c970:	jmp    0x14000c914
   14000c972:	cmp    ax,0x65
   14000c976:	jne    0x14000c9c4
   14000c978:	movzx  eax,WORD PTR [rcx+0x2]
   14000c97c:	cmp    ax,0x6c
   14000c980:	jne    0x14000c99e
   14000c982:	cmp    WORD PTR [rcx+0x4],0x73
   14000c987:	jne    0x14000cabc
   14000c98d:	cmp    WORD PTR [rcx+0x6],0x65
   14000c992:	jne    0x14000cabc
   14000c998:	mov    eax,0x10
   14000c99d:	ret    
   14000c99e:	cmp    ax,0x6e
   14000c9a2:	jne    0x14000cabc
   14000c9a8:	cmp    WORD PTR [rcx+0x4],0x75
   14000c9ad:	jne    0x14000cabc
   14000c9b3:	cmp    WORD PTR [rcx+0x6],0x6d
   14000c9b8:	jne    0x14000cabc
   14000c9be:	mov    eax,0x56
   14000c9c3:	ret    
   14000c9c4:	cmp    ax,0x67
   14000c9c8:	jne    0x14000c9ea
   14000c9ca:	cmp    WORD PTR [rcx+0x2],0x6f
   14000c9cf:	jne    0x14000cabc
   14000c9d5:	cmp    WORD PTR [rcx+0x4],0x74
   14000c9da:	jne    0x14000cabc
   14000c9e0:	cmp    WORD PTR [rcx+0x6],0x6f
   14000c9e5:	jmp    0x14000c914
   14000c9ea:	cmp    ax,0x6c
   14000c9ee:	jne    0x14000ca10
   14000c9f0:	cmp    WORD PTR [rcx+0x2],0x6f
   14000c9f5:	jne    0x14000cabc
   14000c9fb:	cmp    WORD PTR [rcx+0x4],0x6e
   14000ca00:	jne    0x14000cabc
   14000ca06:	cmp    WORD PTR [rcx+0x6],0x67
   14000ca0b:	jmp    0x14000c914
   14000ca10:	cmp    ax,0x6e
   14000ca14:	jne    0x14000ca3d
   14000ca16:	cmp    WORD PTR [rcx+0x2],0x75
   14000ca1b:	jne    0x14000cabc
   14000ca21:	cmp    WORD PTR [rcx+0x4],0x6c
   14000ca26:	jne    0x14000cabc
   14000ca2c:	cmp    WORD PTR [rcx+0x6],0x6c
   14000ca31:	jne    0x14000cabc
   14000ca37:	mov    eax,0x51
   14000ca3c:	ret    
   14000ca3d:	cmp    ax,0x74
   14000ca41:	jne    0x14000ca7b
   14000ca43:	movzx  eax,WORD PTR [rcx+0x2]
   14000ca47:	cmp    ax,0x68
   14000ca4b:	jne    0x14000ca61
   14000ca4d:	cmp    WORD PTR [rcx+0x4],0x69
   14000ca52:	jne    0x14000cabc
   14000ca54:	cmp    WORD PTR [rcx+0x6],0x73
   14000ca59:	jne    0x14000cabc
   14000ca5b:	mov    eax,0x46
   14000ca60:	ret    
   14000ca61:	cmp    ax,0x72
   14000ca65:	jne    0x14000cabc
   14000ca67:	cmp    WORD PTR [rcx+0x4],0x75
   14000ca6c:	jne    0x14000cabc
   14000ca6e:	cmp    WORD PTR [rcx+0x6],0x65
   14000ca73:	jne    0x14000cabc
   14000ca75:	mov    eax,0x52
   14000ca7a:	ret    
   14000ca7b:	cmp    ax,0x76
   14000ca7f:	jne    0x14000ca9c
   14000ca81:	cmp    WORD PTR [rcx+0x2],0x6f
   14000ca86:	jne    0x14000cabc
   14000ca88:	cmp    WORD PTR [rcx+0x4],0x69
   14000ca8d:	jne    0x14000cabc
   14000ca8f:	cmp    WORD PTR [rcx+0x6],0x64
   14000ca94:	jne    0x14000cabc
   14000ca96:	mov    eax,0x4c
   14000ca9b:	ret    
   14000ca9c:	cmp    ax,0x77
   14000caa0:	jne    0x14000cabc
   14000caa2:	cmp    WORD PTR [rcx+0x2],0x69
   14000caa7:	jne    0x14000cabc
   14000caa9:	cmp    WORD PTR [rcx+0x4],0x74
   14000caae:	jne    0x14000cabc
   14000cab0:	cmp    WORD PTR [rcx+0x6],0x68
   14000cab5:	mov    eax,0x4e
   14000caba:	je     0x14000cac1
   14000cabc:	mov    eax,0x1d
   14000cac1:	repz ret 
   14000cac3:	int3   
   14000cac4:	int3   
   14000cac5:	int3   
   14000cac6:	int3   
   14000cac7:	int3   
   14000cac8:	int3   
   14000cac9:	int3   
   14000caca:	int3   
   14000cacb:	int3   
   14000cacc:	int3   
   14000cacd:	int3   
   14000cace:	int3   
   14000cacf:	int3   
   14000cad0:	movzx  eax,WORD PTR [rcx]
   14000cad3:	cmp    ax,0x62
   14000cad7:	jne    0x14000cb0b
   14000cad9:	cmp    WORD PTR [rcx+0x2],0x72
   14000cade:	jne    0x14000ccde
   14000cae4:	cmp    WORD PTR [rcx+0x4],0x65
   14000cae9:	jne    0x14000ccde
   14000caef:	cmp    WORD PTR [rcx+0x6],0x61
   14000caf4:	jne    0x14000ccde
   14000cafa:	cmp    WORD PTR [rcx+0x8],0x6b
   14000caff:	jne    0x14000ccde
   14000cb05:	mov    eax,0x4
   14000cb0a:	ret    
   14000cb0b:	cmp    ax,0x63
   14000cb0f:	jne    0x14000cbae
   14000cb15:	movzx  eax,WORD PTR [rcx+0x2]
   14000cb19:	cmp    ax,0x61
   14000cb1d:	jne    0x14000cb46
   14000cb1f:	cmp    WORD PTR [rcx+0x4],0x74
   14000cb24:	jne    0x14000ccde
   14000cb2a:	cmp    WORD PTR [rcx+0x6],0x63
   14000cb2f:	jne    0x14000ccde
   14000cb35:	cmp    WORD PTR [rcx+0x8],0x68
   14000cb3a:	jne    0x14000ccde
   14000cb40:	mov    eax,0x6
   14000cb45:	ret    
   14000cb46:	cmp    ax,0x6c
   14000cb4a:	jne    0x14000cb73
   14000cb4c:	cmp    WORD PTR [rcx+0x4],0x61
   14000cb51:	jne    0x14000ccde
   14000cb57:	cmp    WORD PTR [rcx+0x6],0x73
   14000cb5c:	jne    0x14000ccde
   14000cb62:	cmp    WORD PTR [rcx+0x8],0x73
   14000cb67:	jne    0x14000ccde
   14000cb6d:	mov    eax,0x56
   14000cb72:	ret    
   14000cb73:	cmp    ax,0x6f
   14000cb77:	jne    0x14000ccde
   14000cb7d:	cmp    WORD PTR [rcx+0x4],0x6e
   14000cb82:	jne    0x14000ccde
   14000cb88:	cmp    WORD PTR [rcx+0x6],0x73
   14000cb8d:	jne    0x14000ccde
   14000cb93:	cmp    WORD PTR [rcx+0x8],0x74
   14000cb98:	jne    0x14000ccde
   14000cb9e:	mov    eax,0x56
   14000cba3:	mov    ecx,0x54
   14000cba8:	test   dl,dl
   14000cbaa:	cmovne eax,ecx
   14000cbad:	ret    
   14000cbae:	cmp    ax,0x66
   14000cbb2:	jne    0x14000cc49
   14000cbb8:	movzx  eax,WORD PTR [rcx+0x2]
   14000cbbc:	cmp    ax,0x61
   14000cbc0:	jne    0x14000cbe9
   14000cbc2:	cmp    WORD PTR [rcx+0x4],0x6c
   14000cbc7:	jne    0x14000ccde
   14000cbcd:	cmp    WORD PTR [rcx+0x6],0x73
   14000cbd2:	jne    0x14000ccde
   14000cbd8:	cmp    WORD PTR [rcx+0x8],0x65
   14000cbdd:	jne    0x14000ccde
   14000cbe3:	mov    eax,0x53
   14000cbe8:	ret    
   14000cbe9:	cmp    ax,0x69
   14000cbed:	jne    0x14000cc22
   14000cbef:	cmp    WORD PTR [rcx+0x4],0x6e
   14000cbf4:	jne    0x14000ccde
   14000cbfa:	cmp    WORD PTR [rcx+0x6],0x61
   14000cbff:	jne    0x14000ccde
   14000cc05:	cmp    WORD PTR [rcx+0x8],0x6c
   14000cc0a:	jne    0x14000ccde
   14000cc10:	mov    eax,0x56
   14000cc15:	mov    ecx,0x1d
   14000cc1a:	test   dl,dl
   14000cc1c:	cmovne ecx,eax
   14000cc1f:	mov    eax,ecx
   14000cc21:	ret    
   14000cc22:	cmp    ax,0x6c
   14000cc26:	jne    0x14000ccde
   14000cc2c:	cmp    WORD PTR [rcx+0x4],0x6f
   14000cc31:	jne    0x14000ccde
   14000cc37:	cmp    WORD PTR [rcx+0x6],0x61
   14000cc3c:	jne    0x14000ccde
   14000cc42:	cmp    WORD PTR [rcx+0x8],0x74
   14000cc47:	jmp    0x14000cc0a
   14000cc49:	cmp    ax,0x73
   14000cc4d:	jne    0x14000cc8f
   14000cc4f:	movzx  eax,WORD PTR [rcx+0x2]
   14000cc53:	cmp    ax,0x68
   14000cc57:	jne    0x14000cc6e
   14000cc59:	cmp    WORD PTR [rcx+0x4],0x6f
   14000cc5e:	jne    0x14000ccde
   14000cc60:	cmp    WORD PTR [rcx+0x6],0x72
   14000cc65:	jne    0x14000ccde
   14000cc67:	cmp    WORD PTR [rcx+0x8],0x74
   14000cc6c:	jmp    0x14000cc0a
   14000cc6e:	cmp    ax,0x75
   14000cc72:	jne    0x14000ccde
   14000cc74:	cmp    WORD PTR [rcx+0x4],0x70
   14000cc79:	jne    0x14000ccde
   14000cc7b:	cmp    WORD PTR [rcx+0x6],0x65
   14000cc80:	jne    0x14000ccde
   14000cc82:	cmp    WORD PTR [rcx+0x8],0x72
   14000cc87:	jne    0x14000ccde
   14000cc89:	mov    eax,0x56
   14000cc8e:	ret    
   14000cc8f:	cmp    ax,0x74
   14000cc93:	jne    0x14000ccb7
   14000cc95:	cmp    WORD PTR [rcx+0x2],0x68
   14000cc9a:	jne    0x14000ccde
   14000cc9c:	cmp    WORD PTR [rcx+0x4],0x72
   14000cca1:	jne    0x14000ccde
   14000cca3:	cmp    WORD PTR [rcx+0x6],0x6f
   14000cca8:	jne    0x14000ccde
   14000ccaa:	cmp    WORD PTR [rcx+0x8],0x77
   14000ccaf:	jne    0x14000ccde
   14000ccb1:	mov    eax,0x47
   14000ccb6:	ret    
   14000ccb7:	cmp    ax,0x77
   14000ccbb:	jne    0x14000ccde
   14000ccbd:	cmp    WORD PTR [rcx+0x2],0x68
   14000ccc2:	jne    0x14000ccde
   14000ccc4:	cmp    WORD PTR [rcx+0x4],0x69
   14000ccc9:	jne    0x14000ccde
   14000cccb:	cmp    WORD PTR [rcx+0x6],0x6c
   14000ccd0:	jne    0x14000ccde
   14000ccd2:	cmp    WORD PTR [rcx+0x8],0x65
   14000ccd7:	mov    eax,0x4d
   14000ccdc:	je     0x14000cce3
   14000ccde:	mov    eax,0x1d
   14000cce3:	repz ret 
   14000cce5:	int3   
   14000cce6:	int3   
   14000cce7:	int3   
   14000cce8:	int3   
   14000cce9:	int3   
   14000ccea:	int3   
   14000cceb:	int3   
   14000ccec:	int3   
   14000cced:	int3   
   14000ccee:	int3   
   14000ccef:	int3   
   14000ccf0:	movzx  eax,WORD PTR [rcx]
   14000ccf3:	cmp    ax,0x64
   14000ccf7:	jne    0x14000cd7d
   14000ccfd:	movzx  eax,WORD PTR [rcx+0x2]
   14000cd01:	cmp    ax,0x65
   14000cd05:	jne    0x14000cd37
   14000cd07:	cmp    WORD PTR [rcx+0x4],0x6c
   14000cd0c:	jne    0x14000d011
   14000cd12:	cmp    WORD PTR [rcx+0x6],ax
   14000cd16:	jne    0x14000d011
   14000cd1c:	cmp    WORD PTR [rcx+0x8],0x74
   14000cd21:	jne    0x14000d011
   14000cd27:	cmp    WORD PTR [rcx+0xa],ax
   14000cd2b:	jne    0x14000d011
   14000cd31:	mov    eax,0xb
   14000cd36:	ret    
   14000cd37:	cmp    ax,0x6f
   14000cd3b:	jne    0x14000d011
   14000cd41:	cmp    WORD PTR [rcx+0x4],0x75
   14000cd46:	jne    0x14000d011
   14000cd4c:	cmp    WORD PTR [rcx+0x6],0x62
   14000cd51:	jne    0x14000d011
   14000cd57:	cmp    WORD PTR [rcx+0x8],0x6c
   14000cd5c:	jne    0x14000d011
   14000cd62:	cmp    WORD PTR [rcx+0xa],0x65
   14000cd67:	jne    0x14000d011
   14000cd6d:	mov    ecx,0x56
   14000cd72:	mov    eax,0x1d
   14000cd77:	test   dl,dl
   14000cd79:	cmovne eax,ecx
   14000cd7c:	ret    
   14000cd7d:	cmp    ax,0x65
   14000cd81:	jne    0x14000cdc0
   14000cd83:	cmp    WORD PTR [rcx+0x2],0x78
   14000cd88:	jne    0x14000d011
   14000cd8e:	cmp    WORD PTR [rcx+0x4],0x70
   14000cd93:	jne    0x14000d011
   14000cd99:	cmp    WORD PTR [rcx+0x6],0x6f
   14000cd9e:	jne    0x14000d011
   14000cda4:	cmp    WORD PTR [rcx+0x8],0x72
   14000cda9:	jne    0x14000d011
   14000cdaf:	cmp    WORD PTR [rcx+0xa],0x74
   14000cdb4:	jne    0x14000d011
   14000cdba:	mov    eax,0x56
   14000cdbf:	ret    
   14000cdc0:	cmp    ax,0x69
   14000cdc4:	jne    0x14000ce0f
   14000cdc6:	cmp    WORD PTR [rcx+0x2],0x6d
   14000cdcb:	jne    0x14000d011
   14000cdd1:	cmp    WORD PTR [rcx+0x4],0x70
   14000cdd6:	jne    0x14000d011
   14000cddc:	cmp    WORD PTR [rcx+0x6],0x6f
   14000cde1:	jne    0x14000d011
   14000cde7:	cmp    WORD PTR [rcx+0x8],0x72
   14000cdec:	jne    0x14000d011
   14000cdf2:	cmp    WORD PTR [rcx+0xa],0x74
   14000cdf7:	jne    0x14000d011
   14000cdfd:	mov    eax,0x5b
   14000ce02:	mov    ecx,0x56
   14000ce07:	test   dl,dl
   14000ce09:	cmovne ecx,eax
   14000ce0c:	mov    eax,ecx
   14000ce0e:	ret    
   14000ce0f:	cmp    ax,0x6e
   14000ce13:	jne    0x14000ce40
   14000ce15:	cmp    WORD PTR [rcx+0x2],0x61
   14000ce1a:	jne    0x14000d011
   14000ce20:	cmp    WORD PTR [rcx+0x4],0x74
   14000ce25:	jne    0x14000d011
   14000ce2b:	cmp    WORD PTR [rcx+0x6],0x69
   14000ce30:	jne    0x14000d011
   14000ce36:	cmp    WORD PTR [rcx+0x8],0x76
   14000ce3b:	jmp    0x14000cd5c
   14000ce40:	cmp    ax,0x70
   14000ce44:	jne    0x14000ced6
   14000ce4a:	movzx  eax,WORD PTR [rcx+0x2]
   14000ce4e:	cmp    ax,0x75
   14000ce52:	jne    0x14000ce90
   14000ce54:	cmp    WORD PTR [rcx+0x4],0x62
   14000ce59:	jne    0x14000d011
   14000ce5f:	cmp    WORD PTR [rcx+0x6],0x6c
   14000ce64:	jne    0x14000d011
   14000ce6a:	cmp    WORD PTR [rcx+0x8],0x69
   14000ce6f:	jne    0x14000d011
   14000ce75:	cmp    WORD PTR [rcx+0xa],0x63
   14000ce7a:	jne    0x14000d011
   14000ce80:	mov    ecx,0x5a
   14000ce85:	mov    eax,0x1d
   14000ce8a:	test   dl,dl
   14000ce8c:	cmovne eax,ecx
   14000ce8f:	ret    
   14000ce90:	cmp    ax,0x72
   14000ce94:	jne    0x14000d011
   14000ce9a:	cmp    WORD PTR [rcx+0x4],0x61
   14000ce9f:	jne    0x14000d011
   14000cea5:	cmp    WORD PTR [rcx+0x6],0x67
   14000ceaa:	jne    0x14000d011
   14000ceb0:	cmp    WORD PTR [rcx+0x8],0x6d
   14000ceb5:	jne    0x14000d011
   14000cebb:	cmp    WORD PTR [rcx+0xa],0x61
   14000cec0:	jne    0x14000d011
   14000cec6:	mov    ecx,0x5c
   14000cecb:	mov    eax,0x1d
   14000ced0:	test   dl,dl
   14000ced2:	cmovne eax,ecx
   14000ced5:	ret    
   14000ced6:	cmp    ax,0x72
   14000ceda:	jne    0x14000cf18
   14000cedc:	cmp    WORD PTR [rcx+0x2],0x65
   14000cee1:	jne    0x14000d011
   14000cee7:	cmp    WORD PTR [rcx+0x4],0x74
   14000ceec:	jne    0x14000d011
   14000cef2:	cmp    WORD PTR [rcx+0x6],0x75
   14000cef7:	jne    0x14000d011
   14000cefd:	cmp    WORD PTR [rcx+0x8],ax
   14000cf01:	jne    0x14000d011
   14000cf07:	cmp    WORD PTR [rcx+0xa],0x6e
   14000cf0c:	jne    0x14000d011
   14000cf12:	mov    eax,0x3b
   14000cf17:	ret    
   14000cf18:	cmp    ax,0x73
   14000cf1c:	jne    0x14000cfbb
   14000cf22:	test   dl,dl
   14000cf24:	je     0x14000cf5f
   14000cf26:	cmp    WORD PTR [rcx+0x2],0x69
   14000cf2b:	jne    0x14000cf5f
   14000cf2d:	cmp    WORD PTR [rcx+0x4],0x67
   14000cf32:	jne    0x14000d011
   14000cf38:	cmp    WORD PTR [rcx+0x6],0x6e
   14000cf3d:	jne    0x14000d011
   14000cf43:	cmp    WORD PTR [rcx+0x8],0x61
   14000cf48:	jne    0x14000d011
   14000cf4e:	cmp    WORD PTR [rcx+0xa],0x6c
   14000cf53:	jne    0x14000d011
   14000cf59:	mov    eax,0x43
   14000cf5e:	ret    
   14000cf5f:	movzx  eax,WORD PTR [rcx+0x2]
   14000cf63:	cmp    ax,0x74
   14000cf67:	jne    0x14000cf93
   14000cf69:	cmp    WORD PTR [rcx+0x4],0x61
   14000cf6e:	jne    0x14000d011
   14000cf74:	cmp    WORD PTR [rcx+0x6],ax
   14000cf78:	jne    0x14000d011
   14000cf7e:	cmp    WORD PTR [rcx+0x8],0x69
   14000cf83:	jne    0x14000d011
   14000cf89:	cmp    WORD PTR [rcx+0xa],0x63
   14000cf8e:	jmp    0x14000cd67
   14000cf93:	cmp    ax,0x77
   14000cf97:	jne    0x14000d011
   14000cf99:	cmp    WORD PTR [rcx+0x4],0x69
   14000cf9e:	jne    0x14000d011
   14000cfa0:	cmp    WORD PTR [rcx+0x6],0x74
   14000cfa5:	jne    0x14000d011
   14000cfa7:	cmp    WORD PTR [rcx+0x8],0x63
   14000cfac:	jne    0x14000d011
   14000cfae:	cmp    WORD PTR [rcx+0xa],0x68
   14000cfb3:	jne    0x14000d011
   14000cfb5:	mov    eax,0x45
   14000cfba:	ret    
   14000cfbb:	cmp    ax,0x74
   14000cfbf:	jne    0x14000d011
   14000cfc1:	movzx  eax,WORD PTR [rcx+0x2]
   14000cfc5:	cmp    ax,0x68
   14000cfc9:	jne    0x14000cfea
   14000cfcb:	cmp    WORD PTR [rcx+0x4],0x72
   14000cfd0:	jne    0x14000d011
   14000cfd2:	cmp    WORD PTR [rcx+0x6],0x6f
   14000cfd7:	jne    0x14000d011
   14000cfd9:	cmp    WORD PTR [rcx+0x8],0x77
   14000cfde:	jne    0x14000d011
   14000cfe0:	cmp    WORD PTR [rcx+0xa],0x73
   14000cfe5:	jmp    0x14000cd67
   14000cfea:	cmp    ax,0x79
   14000cfee:	jne    0x14000d011
   14000cff0:	cmp    WORD PTR [rcx+0x4],0x70
   14000cff5:	jne    0x14000d011
   14000cff7:	cmp    WORD PTR [rcx+0x6],0x65
   14000cffc:	jne    0x14000d011
   14000cffe:	cmp    WORD PTR [rcx+0x8],0x6f
   14000d003:	jne    0x14000d011
   14000d005:	cmp    WORD PTR [rcx+0xa],0x66
   14000d00a:	mov    eax,0x4a
   14000d00f:	je     0x14000d016
   14000d011:	mov    eax,0x1d
   14000d016:	repz ret 
   14000d018:	int3   
   14000d019:	int3   
   14000d01a:	int3   
   14000d01b:	int3   
   14000d01c:	int3   
   14000d01d:	int3   
   14000d01e:	int3   
   14000d01f:	int3   
   14000d020:	movzx  eax,WORD PTR [rcx]
   14000d023:	cmp    ax,0x62
   14000d027:	jne    0x14000d07b
   14000d029:	cmp    WORD PTR [rcx+0x2],0x6f
   14000d02e:	jne    0x14000d1b5
   14000d034:	cmp    WORD PTR [rcx+0x4],0x6f
   14000d039:	jne    0x14000d1b5
   14000d03f:	cmp    WORD PTR [rcx+0x6],0x6c
   14000d044:	jne    0x14000d1b5
   14000d04a:	cmp    WORD PTR [rcx+0x8],0x65
   14000d04f:	jne    0x14000d1b5
   14000d055:	cmp    WORD PTR [rcx+0xa],0x61
   14000d05a:	jne    0x14000d1b5
   14000d060:	cmp    WORD PTR [rcx+0xc],0x6e
   14000d065:	jne    0x14000d1b5
   14000d06b:	mov    eax,0x1d
   14000d070:	mov    ecx,0x56
   14000d075:	test   dl,dl
   14000d077:	cmovne eax,ecx
   14000d07a:	ret    
   14000d07b:	cmp    ax,0x64
   14000d07f:	jne    0x14000d0c9
   14000d081:	cmp    WORD PTR [rcx+0x2],0x65
   14000d086:	jne    0x14000d1b5
   14000d08c:	cmp    WORD PTR [rcx+0x4],0x66
   14000d091:	jne    0x14000d1b5
   14000d097:	cmp    WORD PTR [rcx+0x6],0x61
   14000d09c:	jne    0x14000d1b5
   14000d0a2:	cmp    WORD PTR [rcx+0x8],0x75
   14000d0a7:	jne    0x14000d1b5
   14000d0ad:	cmp    WORD PTR [rcx+0xa],0x6c
   14000d0b2:	jne    0x14000d1b5
   14000d0b8:	cmp    WORD PTR [rcx+0xc],0x74
   14000d0bd:	jne    0x14000d1b5
   14000d0c3:	mov    eax,0xa
   14000d0c8:	ret    
   14000d0c9:	cmp    ax,0x65
   14000d0cd:	jne    0x14000d116
   14000d0cf:	cmp    WORD PTR [rcx+0x2],0x78
   14000d0d4:	jne    0x14000d1b5
   14000d0da:	cmp    WORD PTR [rcx+0x4],0x74
   14000d0df:	jne    0x14000d1b5
   14000d0e5:	cmp    WORD PTR [rcx+0x6],ax
   14000d0e9:	jne    0x14000d1b5
   14000d0ef:	cmp    WORD PTR [rcx+0x8],0x6e
   14000d0f4:	jne    0x14000d1b5
   14000d0fa:	cmp    WORD PTR [rcx+0xa],0x64
   14000d0ff:	jne    0x14000d1b5
   14000d105:	cmp    WORD PTR [rcx+0xc],0x73
   14000d10a:	jne    0x14000d1b5
   14000d110:	mov    eax,0x56
   14000d115:	ret    
   14000d116:	cmp    ax,0x66
   14000d11a:	jne    0x14000d154
   14000d11c:	cmp    WORD PTR [rcx+0x2],0x69
   14000d121:	jne    0x14000d1b5
   14000d127:	cmp    WORD PTR [rcx+0x4],0x6e
   14000d12c:	jne    0x14000d1b5
   14000d132:	cmp    WORD PTR [rcx+0x6],0x61
   14000d137:	jne    0x14000d1b5
   14000d139:	cmp    WORD PTR [rcx+0x8],0x6c
   14000d13e:	jne    0x14000d1b5
   14000d140:	cmp    WORD PTR [rcx+0xa],0x6c
   14000d145:	jne    0x14000d1b5
   14000d147:	cmp    WORD PTR [rcx+0xc],0x79
   14000d14c:	jne    0x14000d1b5
   14000d14e:	mov    eax,0x14
   14000d153:	ret    
   14000d154:	cmp    ax,0x70
   14000d158:	jne    0x14000d1b5
   14000d15a:	movzx  eax,WORD PTR [rcx+0x2]
   14000d15e:	cmp    ax,0x61
   14000d162:	jne    0x14000d189
   14000d164:	cmp    WORD PTR [rcx+0x4],0x63
   14000d169:	jne    0x14000d1b5
   14000d16b:	cmp    WORD PTR [rcx+0x6],0x6b
   14000d170:	jne    0x14000d1b5
   14000d172:	cmp    WORD PTR [rcx+0x8],ax
   14000d176:	jne    0x14000d1b5
   14000d178:	cmp    WORD PTR [rcx+0xa],0x67
   14000d17d:	jne    0x14000d1b5
   14000d17f:	cmp    WORD PTR [rcx+0xc],0x65
   14000d184:	jmp    0x14000d065
   14000d189:	cmp    ax,0x72
   14000d18d:	jne    0x14000d1b5
   14000d18f:	cmp    WORD PTR [rcx+0x4],0x69
   14000d194:	jne    0x14000d1b5
   14000d196:	cmp    WORD PTR [rcx+0x6],0x76
   14000d19b:	jne    0x14000d1b5
   14000d19d:	cmp    WORD PTR [rcx+0x8],0x61
   14000d1a2:	jne    0x14000d1b5
   14000d1a4:	cmp    WORD PTR [rcx+0xa],0x74
   14000d1a9:	jne    0x14000d1b5
   14000d1ab:	cmp    WORD PTR [rcx+0xc],0x65
   14000d1b0:	jmp    0x14000d065
   14000d1b5:	mov    eax,0x1d
   14000d1ba:	ret    
   14000d1bb:	int3   
   14000d1bc:	int3   
   14000d1bd:	int3   
   14000d1be:	int3   
   14000d1bf:	int3   
   14000d1c0:	movzx  eax,WORD PTR [rcx]
   14000d1c3:	cmp    ax,0x61
   14000d1c7:	jne    0x14000d225
   14000d1c9:	cmp    WORD PTR [rcx+0x2],0x62
   14000d1ce:	jne    0x14000d403
   14000d1d4:	cmp    WORD PTR [rcx+0x4],0x73
   14000d1d9:	jne    0x14000d403
   14000d1df:	cmp    WORD PTR [rcx+0x6],0x74
   14000d1e4:	jne    0x14000d403
   14000d1ea:	cmp    WORD PTR [rcx+0x8],0x72
   14000d1ef:	jne    0x14000d403
   14000d1f5:	cmp    WORD PTR [rcx+0xa],ax
   14000d1f9:	jne    0x14000d403
   14000d1ff:	cmp    WORD PTR [rcx+0xc],0x63
   14000d204:	jne    0x14000d403
   14000d20a:	cmp    WORD PTR [rcx+0xe],0x74
   14000d20f:	jne    0x14000d403
   14000d215:	mov    eax,0x1d
   14000d21a:	mov    ecx,0x56
   14000d21f:	test   dl,dl
   14000d221:	cmovne eax,ecx
   14000d224:	ret    
   14000d225:	cmp    ax,0x63
   14000d229:	jne    0x14000d27e
   14000d22b:	cmp    WORD PTR [rcx+0x2],0x6f
   14000d230:	jne    0x14000d403
   14000d236:	cmp    WORD PTR [rcx+0x4],0x6e
   14000d23b:	jne    0x14000d403
   14000d241:	cmp    WORD PTR [rcx+0x6],0x74
   14000d246:	jne    0x14000d403
   14000d24c:	cmp    WORD PTR [rcx+0x8],0x69
   14000d251:	jne    0x14000d403
   14000d257:	cmp    WORD PTR [rcx+0xa],0x6e
   14000d25c:	jne    0x14000d403
   14000d262:	cmp    WORD PTR [rcx+0xc],0x75
   14000d267:	jne    0x14000d403
   14000d26d:	cmp    WORD PTR [rcx+0xe],0x65
   14000d272:	jne    0x14000d403
   14000d278:	mov    eax,0x9
   14000d27d:	ret    
   14000d27e:	cmp    ax,0x64
   14000d282:	jne    0x14000d2d7
   14000d284:	cmp    WORD PTR [rcx+0x2],0x65
   14000d289:	jne    0x14000d403
   14000d28f:	cmp    WORD PTR [rcx+0x4],0x62
   14000d294:	jne    0x14000d403
   14000d29a:	cmp    WORD PTR [rcx+0x6],0x75
   14000d29f:	jne    0x14000d403
   14000d2a5:	cmp    WORD PTR [rcx+0x8],0x67
   14000d2aa:	jne    0x14000d403
   14000d2b0:	cmp    WORD PTR [rcx+0xa],0x67
   14000d2b5:	jne    0x14000d403
   14000d2bb:	cmp    WORD PTR [rcx+0xc],0x65
   14000d2c0:	jne    0x14000d403
   14000d2c6:	cmp    WORD PTR [rcx+0xe],0x72
   14000d2cb:	jne    0x14000d403
   14000d2d1:	mov    eax,0x55
   14000d2d6:	ret    
   14000d2d7:	cmp    ax,0x66
   14000d2db:	jne    0x14000d330
   14000d2dd:	cmp    WORD PTR [rcx+0x2],0x75
   14000d2e2:	jne    0x14000d403
   14000d2e8:	cmp    WORD PTR [rcx+0x4],0x6e
   14000d2ed:	jne    0x14000d403
   14000d2f3:	cmp    WORD PTR [rcx+0x6],0x63
   14000d2f8:	jne    0x14000d403
   14000d2fe:	cmp    WORD PTR [rcx+0x8],0x74
   14000d303:	jne    0x14000d403
   14000d309:	cmp    WORD PTR [rcx+0xa],0x69
   14000d30e:	jne    0x14000d403
   14000d314:	cmp    WORD PTR [rcx+0xc],0x6f
   14000d319:	jne    0x14000d403
   14000d31f:	cmp    WORD PTR [rcx+0xe],0x6e
   14000d324:	jne    0x14000d403
   14000d32a:	mov    eax,0x16
   14000d32f:	ret    
   14000d330:	test   dl,dl
   14000d332:	je     0x14000d3c9
   14000d338:	cmp    ax,0x70
   14000d33c:	jne    0x14000d38c
   14000d33e:	cmp    WORD PTR [rcx+0x2],0x72
   14000d343:	jne    0x14000d403
   14000d349:	cmp    WORD PTR [rcx+0x4],0x6f
   14000d34e:	jne    0x14000d403
   14000d354:	cmp    WORD PTR [rcx+0x6],ax
   14000d358:	jne    0x14000d403
   14000d35e:	cmp    WORD PTR [rcx+0x8],0x65
   14000d363:	jne    0x14000d403
   14000d369:	cmp    WORD PTR [rcx+0xa],0x72
   14000d36e:	jne    0x14000d403
   14000d374:	cmp    WORD PTR [rcx+0xc],0x74
   14000d379:	jne    0x14000d403
   14000d37f:	cmp    WORD PTR [rcx+0xe],0x79
   14000d384:	jne    0x14000d403
   14000d386:	mov    eax,0x42
   14000d38b:	ret    
   14000d38c:	cmp    ax,0x72
   14000d390:	jne    0x14000d3c9
   14000d392:	cmp    WORD PTR [rcx+0x2],0x65
   14000d397:	jne    0x14000d403
   14000d399:	cmp    WORD PTR [rcx+0x4],0x61
   14000d39e:	jne    0x14000d403
   14000d3a0:	cmp    WORD PTR [rcx+0x6],0x64
   14000d3a5:	jne    0x14000d403
   14000d3a7:	cmp    WORD PTR [rcx+0x8],0x6f
   14000d3ac:	jne    0x14000d403
   14000d3ae:	cmp    WORD PTR [rcx+0xa],0x6e
   14000d3b3:	jne    0x14000d403
   14000d3b5:	cmp    WORD PTR [rcx+0xc],0x6c
   14000d3ba:	jne    0x14000d403
   14000d3bc:	cmp    WORD PTR [rcx+0xe],0x79
   14000d3c1:	jne    0x14000d403
   14000d3c3:	mov    eax,0x44
   14000d3c8:	ret    
   14000d3c9:	cmp    ax,0x76
   14000d3cd:	jne    0x14000d403
   14000d3cf:	cmp    WORD PTR [rcx+0x2],0x6f
   14000d3d4:	jne    0x14000d403
   14000d3d6:	cmp    WORD PTR [rcx+0x4],0x6c
   14000d3db:	jne    0x14000d403
   14000d3dd:	cmp    WORD PTR [rcx+0x6],0x61
   14000d3e2:	jne    0x14000d403
   14000d3e4:	cmp    WORD PTR [rcx+0x8],0x74
   14000d3e9:	jne    0x14000d403
   14000d3eb:	cmp    WORD PTR [rcx+0xa],0x69
   14000d3f0:	jne    0x14000d403
   14000d3f2:	cmp    WORD PTR [rcx+0xc],0x6c
   14000d3f7:	jne    0x14000d403
   14000d3f9:	cmp    WORD PTR [rcx+0xe],0x65
   14000d3fe:	jmp    0x14000d20f
   14000d403:	mov    eax,0x1d
   14000d408:	ret    
   14000d409:	int3   
   14000d40a:	int3   
   14000d40b:	int3   
   14000d40c:	int3   
   14000d40d:	int3   
   14000d40e:	int3   
   14000d40f:	int3   
   14000d410:	movzx  eax,WORD PTR [rcx]
   14000d413:	cmp    ax,0x69
   14000d417:	jne    0x14000d481
   14000d419:	cmp    WORD PTR [rcx+0x2],0x6e
   14000d41e:	jne    0x14000d4ff
   14000d424:	cmp    WORD PTR [rcx+0x4],0x74
   14000d429:	jne    0x14000d4ff
   14000d42f:	cmp    WORD PTR [rcx+0x6],0x65
   14000d434:	jne    0x14000d4ff
   14000d43a:	cmp    WORD PTR [rcx+0x8],0x72
   14000d43f:	jne    0x14000d4ff
   14000d445:	cmp    WORD PTR [rcx+0xa],0x66
   14000d44a:	jne    0x14000d4ff
   14000d450:	cmp    WORD PTR [rcx+0xc],0x61
   14000d455:	jne    0x14000d4ff
   14000d45b:	cmp    WORD PTR [rcx+0xe],0x63
   14000d460:	jne    0x14000d4ff
   14000d466:	cmp    WORD PTR [rcx+0x10],0x65
   14000d46b:	jne    0x14000d4ff
   14000d471:	mov    eax,0x1d
   14000d476:	mov    ecx,0x56
   14000d47b:	test   dl,dl
   14000d47d:	cmovne eax,ecx
   14000d480:	ret    
   14000d481:	cmp    ax,0x70
   14000d485:	jne    0x14000d4bf
   14000d487:	cmp    WORD PTR [rcx+0x2],0x72
   14000d48c:	jne    0x14000d4ff
   14000d48e:	cmp    WORD PTR [rcx+0x4],0x6f
   14000d493:	jne    0x14000d4ff
   14000d495:	cmp    WORD PTR [rcx+0x6],0x74
   14000d49a:	jne    0x14000d4ff
   14000d49c:	cmp    WORD PTR [rcx+0x8],0x65
   14000d4a1:	jne    0x14000d4ff
   14000d4a3:	cmp    WORD PTR [rcx+0xa],0x63
   14000d4a8:	jne    0x14000d4ff
   14000d4aa:	cmp    WORD PTR [rcx+0xc],0x74
   14000d4af:	jne    0x14000d4ff
   14000d4b1:	cmp    WORD PTR [rcx+0xe],0x65
   14000d4b6:	jne    0x14000d4ff
   14000d4b8:	cmp    WORD PTR [rcx+0x10],0x64
   14000d4bd:	jmp    0x14000d46b
   14000d4bf:	cmp    ax,0x74
   14000d4c3:	jne    0x14000d4ff
   14000d4c5:	cmp    WORD PTR [rcx+0x2],0x72
   14000d4ca:	jne    0x14000d4ff
   14000d4cc:	cmp    WORD PTR [rcx+0x4],0x61
   14000d4d1:	jne    0x14000d4ff
   14000d4d3:	cmp    WORD PTR [rcx+0x6],0x6e
   14000d4d8:	jne    0x14000d4ff
   14000d4da:	cmp    WORD PTR [rcx+0x8],0x73
   14000d4df:	jne    0x14000d4ff
   14000d4e1:	cmp    WORD PTR [rcx+0xa],0x69
   14000d4e6:	jne    0x14000d4ff
   14000d4e8:	cmp    WORD PTR [rcx+0xc],0x65
   14000d4ed:	jne    0x14000d4ff
   14000d4ef:	cmp    WORD PTR [rcx+0xe],0x6e
   14000d4f4:	jne    0x14000d4ff
   14000d4f6:	cmp    WORD PTR [rcx+0x10],ax
   14000d4fa:	jmp    0x14000d46b
   14000d4ff:	mov    eax,0x1d
   14000d504:	ret    
   14000d505:	int3   
   14000d506:	int3   
   14000d507:	int3   
   14000d508:	int3   
   14000d509:	int3   
   14000d50a:	int3   
   14000d50b:	int3   
   14000d50c:	int3   
   14000d50d:	int3   
   14000d50e:	int3   
   14000d50f:	int3   
   14000d510:	cmp    WORD PTR [rcx],0x69
   14000d514:	jne    0x14000d5b1
   14000d51a:	movzx  eax,WORD PTR [rcx+0x2]
   14000d51e:	cmp    ax,0x6d
   14000d522:	jne    0x14000d56f
   14000d524:	cmp    WORD PTR [rcx+0x4],0x70
   14000d529:	jne    0x14000d5b1
   14000d52f:	cmp    WORD PTR [rcx+0x6],0x6c
   14000d534:	jne    0x14000d5b1
   14000d536:	cmp    WORD PTR [rcx+0x8],0x65
   14000d53b:	jne    0x14000d5b1
   14000d53d:	cmp    WORD PTR [rcx+0xa],ax
   14000d541:	jne    0x14000d5b1
   14000d543:	cmp    WORD PTR [rcx+0xc],0x65
   14000d548:	jne    0x14000d5b1
   14000d54a:	cmp    WORD PTR [rcx+0xe],0x6e
   14000d54f:	jne    0x14000d5b1
   14000d551:	cmp    WORD PTR [rcx+0x10],0x74
   14000d556:	jne    0x14000d5b1
   14000d558:	cmp    WORD PTR [rcx+0x12],0x73
   14000d55d:	jne    0x14000d5b1
   14000d55f:	mov    eax,0x1d
   14000d564:	mov    ecx,0x56
   14000d569:	test   dl,dl
   14000d56b:	cmovne eax,ecx
   14000d56e:	ret    
   14000d56f:	cmp    ax,0x6e
   14000d573:	jne    0x14000d5b1
   14000d575:	cmp    WORD PTR [rcx+0x4],0x73
   14000d57a:	jne    0x14000d5b1
   14000d57c:	cmp    WORD PTR [rcx+0x6],0x74
   14000d581:	jne    0x14000d5b1
   14000d583:	cmp    WORD PTR [rcx+0x8],0x61
   14000d588:	jne    0x14000d5b1
   14000d58a:	cmp    WORD PTR [rcx+0xa],ax
   14000d58e:	jne    0x14000d5b1
   14000d590:	cmp    WORD PTR [rcx+0xc],0x63
   14000d595:	jne    0x14000d5b1
   14000d597:	cmp    WORD PTR [rcx+0xe],0x65
   14000d59c:	jne    0x14000d5b1
   14000d59e:	cmp    WORD PTR [rcx+0x10],0x6f
   14000d5a3:	jne    0x14000d5b1
   14000d5a5:	cmp    WORD PTR [rcx+0x12],0x66
   14000d5aa:	mov    eax,0x20
   14000d5af:	je     0x14000d5b6
   14000d5b1:	mov    eax,0x1d
   14000d5b6:	repz ret 
   14000d5b8:	int3   
   14000d5b9:	int3   
   14000d5ba:	int3   
   14000d5bb:	int3   
   14000d5bc:	int3   
   14000d5bd:	int3   
   14000d5be:	int3   
   14000d5bf:	int3   
   14000d5c0:	add    r8d,0xfffffffe
   14000d5c4:	mov    r10,rdx
   14000d5c7:	cmp    r8d,0xa
   14000d5cb:	ja     0x14000d659
   14000d5d1:	lea    rdx,[rip+0xffffffffffff2a28]        # 0x140000000
   14000d5d8:	movsxd rax,r8d
   14000d5db:	mov    ecx,DWORD PTR [rdx+rax*4+0xd754]
   14000d5e2:	add    rcx,rdx
   14000d5e5:	jmp    rcx
   14000d5e7:	movzx  eax,WORD PTR [r10]
   14000d5eb:	cmp    ax,0x61
   14000d5ef:	jne    0x14000d60a
   14000d5f1:	cmp    WORD PTR [r10+0x2],0x73
   14000d5f7:	jne    0x14000d659
   14000d5f9:	mov    eax,0x1d
   14000d5fe:	mov    ecx,0x5d
   14000d603:	test   r9b,r9b
   14000d606:	cmovne eax,ecx
   14000d609:	ret    
   14000d60a:	cmp    ax,0x64
   14000d60e:	jne    0x14000d61e
   14000d610:	cmp    WORD PTR [r10+0x2],0x6f
   14000d616:	jne    0x14000d659
   14000d618:	mov    eax,0xe
   14000d61d:	ret    
   14000d61e:	cmp    ax,0x69
   14000d622:	jne    0x14000d641
   14000d624:	movzx  eax,WORD PTR [r10+0x2]
   14000d629:	cmp    ax,0x66
   14000d62d:	jne    0x14000d635
   14000d62f:	mov    eax,0x1e
   14000d634:	ret    
   14000d635:	cmp    ax,0x6e
   14000d639:	jne    0x14000d659
   14000d63b:	mov    eax,0x1f
   14000d640:	ret    
   14000d641:	test   r9b,r9b
   14000d644:	je     0x14000d659
   14000d646:	cmp    ax,0x6f
   14000d64a:	jne    0x14000d659
   14000d64c:	cmp    WORD PTR [r10+0x2],0x6e
   14000d652:	mov    eax,0x5e
   14000d657:	je     0x14000d65e
   14000d659:	mov    eax,0x1d
   14000d65e:	ret    
   14000d65f:	movzx  edx,r9b
   14000d663:	mov    rcx,r10
   14000d666:	jmp    0x14000c810
   14000d66b:	movzx  edx,r9b
   14000d66f:	mov    rcx,r10
   14000d672:	jmp    0x14000c8f0
   14000d677:	movzx  edx,r9b
   14000d67b:	mov    rcx,r10
   14000d67e:	jmp    0x14000cad0
   14000d683:	movzx  edx,r9b
   14000d687:	mov    rcx,r10
   14000d68a:	jmp    0x14000ccf0
   14000d68f:	movzx  edx,r9b
   14000d693:	mov    rcx,r10
   14000d696:	jmp    0x14000d020
   14000d69b:	movzx  edx,r9b
   14000d69f:	mov    rcx,r10
   14000d6a2:	jmp    0x14000d1c0
   14000d6a7:	movzx  edx,r9b
   14000d6ab:	mov    rcx,r10
   14000d6ae:	jmp    0x14000d410
   14000d6b3:	movzx  edx,r9b
   14000d6b7:	mov    rcx,r10
   14000d6ba:	jmp    0x14000d510
   14000d6bf:	cmp    WORD PTR [r10],0x73
   14000d6c4:	jne    0x14000d659
   14000d6c6:	cmp    WORD PTR [r10+0x2],0x79
   14000d6cc:	jne    0x14000d659
   14000d6ce:	cmp    WORD PTR [r10+0x4],0x6e
   14000d6d4:	jne    0x14000d659
   14000d6d6:	cmp    WORD PTR [r10+0x6],0x63
   14000d6dc:	jne    0x14000d659
   14000d6e2:	cmp    WORD PTR [r10+0x8],0x68
   14000d6e8:	jne    0x14000d659
   14000d6ee:	cmp    WORD PTR [r10+0xa],0x72
   14000d6f4:	jne    0x14000d659
   14000d6fa:	cmp    WORD PTR [r10+0xc],0x6f
   14000d700:	jne    0x14000d659
   14000d706:	cmp    WORD PTR [r10+0xe],0x6e
   14000d70c:	jne    0x14000d659
   14000d712:	cmp    WORD PTR [r10+0x10],0x69
   14000d718:	jne    0x14000d659
   14000d71e:	cmp    WORD PTR [r10+0x12],0x7a
   14000d724:	jne    0x14000d659
   14000d72a:	cmp    WORD PTR [r10+0x14],0x65
   14000d730:	jne    0x14000d659
   14000d736:	cmp    WORD PTR [r10+0x16],0x64
   14000d73c:	jne    0x14000d659
   14000d742:	mov    eax,0x1d
   14000d747:	mov    ecx,0x56
   14000d74c:	test   r9b,r9b
   14000d74f:	cmovne eax,ecx
   14000d752:	ret    
   14000d753:	nop
   14000d754:	out    0xd5,eax
   14000d756:	add    BYTE PTR [rax],al
   14000d758:	pop    rdi
   14000d759:	(bad)  
   14000d75a:	add    BYTE PTR [rax],al
   14000d75c:	imul   edx,esi,0x0
   14000d75f:	add    BYTE PTR [rdi-0x2a],dh
   14000d762:	add    BYTE PTR [rax],al
   14000d764:	adc    esi,0x0
   14000d767:	add    BYTE PTR [rdi-0x64ffff2a],cl
   14000d76d:	(bad)  
   14000d76e:	add    BYTE PTR [rax],al
   14000d770:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d771:	(bad)  
   14000d772:	add    BYTE PTR [rax],al
   14000d774:	mov    bl,0xd6
   14000d776:	add    BYTE PTR [rax],al
   14000d778:	pop    rcx
   14000d779:	(bad)  
   14000d77a:	add    BYTE PTR [rax],al
   14000d77c:	mov    edi,0x8d0000d6
   14000d781:	ror    BYTE PTR [rbx+r9*4-0x2f],1
   14000d786:	cmp    ax,0x9
   14000d78a:	ja     0x14000d791
   14000d78c:	sub    dl,0x30
   14000d78f:	jmp    0x14000d7a2
   14000d791:	lea    eax,[rdx-0x61]
   14000d794:	cmp    ax,0x5
   14000d798:	ja     0x14000d79f
   14000d79a:	sub    dl,0x57
   14000d79d:	jmp    0x14000d7a2
   14000d79f:	sub    dl,0x37
   14000d7a2:	lea    eax,[r8-0x30]
   14000d7a6:	cmp    ax,0x9
   14000d7aa:	ja     0x14000d7b2
   14000d7ac:	sub    r8b,0x30
   14000d7b0:	jmp    0x14000d7c6
   14000d7b2:	lea    eax,[r8-0x61]
   14000d7b6:	cmp    ax,0x5
   14000d7ba:	ja     0x14000d7c2
   14000d7bc:	sub    r8b,0x57
   14000d7c0:	jmp    0x14000d7c6
   14000d7c2:	sub    r8b,0x37
   14000d7c6:	lea    eax,[r9-0x30]
   14000d7ca:	cmp    ax,0x9
   14000d7ce:	ja     0x14000d7d6
   14000d7d0:	sub    r9b,0x30
   14000d7d4:	jmp    0x14000d7ea
   14000d7d6:	lea    eax,[r9-0x61]
   14000d7da:	cmp    ax,0x5
   14000d7de:	ja     0x14000d7e6
   14000d7e0:	sub    r9b,0x57
   14000d7e4:	jmp    0x14000d7ea
   14000d7e6:	sub    r9b,0x37
   14000d7ea:	movzx  eax,WORD PTR [rsp+0x28]
   14000d7ef:	lea    ecx,[rax-0x30]
   14000d7f2:	cmp    cx,0x9
   14000d7f6:	ja     0x14000d7fc
   14000d7f8:	sub    al,0x30
   14000d7fa:	jmp    0x14000d80b
   14000d7fc:	lea    ecx,[rax-0x61]
   14000d7ff:	cmp    cx,0x5
   14000d803:	ja     0x14000d809
   14000d805:	sub    al,0x57
   14000d807:	jmp    0x14000d80b
   14000d809:	sub    al,0x37
   14000d80b:	shl    dl,0x4
   14000d80e:	shl    r9b,0x4
   14000d812:	add    r9b,al
   14000d815:	add    dl,r8b
   14000d818:	movzx  eax,r9b
   14000d81c:	movzx  ecx,dl
   14000d81f:	shl    cx,0x8
   14000d823:	or     cx,ax
   14000d826:	mov    rax,r10
   14000d829:	mov    WORD PTR [r10],cx
   14000d82d:	ret    
   14000d82e:	int3   
   14000d82f:	int3   
   14000d830:	mov    QWORD PTR [rsp+0x8],rbx
   14000d835:	mov    QWORD PTR [rsp+0x10],rsi
   14000d83a:	push   rdi
   14000d83b:	sub    rsp,0x20
   14000d83f:	mov    rbx,rcx
   14000d842:	mov    QWORD PTR [rcx],rdx
   14000d845:	add    rcx,0x8
   14000d849:	mov    rdi,rdx
   14000d84c:	call   QWORD PTR [rip+0x799e]        # 0x1400151f0
   14000d852:	lea    rcx,[rbx+0x10]
   14000d856:	call   QWORD PTR [rip+0x7994]        # 0x1400151f0
   14000d85c:	lea    rcx,[rbx+0x18]
   14000d860:	call   QWORD PTR [rip+0x798a]        # 0x1400151f0
   14000d866:	xor    esi,esi
   14000d868:	lea    rcx,[rbx+0x58]
   14000d86c:	mov    QWORD PTR [rbx+0x20],rsi
   14000d870:	mov    DWORD PTR [rbx+0x28],esi
   14000d873:	mov    DWORD PTR [rbx+0x2c],esi
   14000d876:	mov    dl,0xa
   14000d878:	mov    QWORD PTR [rbx+0x30],rsi
   14000d87c:	mov    QWORD PTR [rbx+0x40],rsi
   14000d880:	mov    QWORD PTR [rbx+0x48],rsi
   14000d884:	mov    QWORD PTR [rbx+0x50],rsi
   14000d888:	call   QWORD PTR [rip+0x7942]        # 0x1400151d0
   14000d88e:	mov    DWORD PTR [rbx+0x5c],esi
   14000d891:	mov    DWORD PTR [rbx+0x60],esi
   14000d894:	mov    QWORD PTR [rbx+0x68],rsi
   14000d898:	mov    DWORD PTR [rbx+0x70],esi
   14000d89b:	mov    DWORD PTR [rbx+0x74],esi
   14000d89e:	mov    DWORD PTR [rbx+0x78],0xffffffff
   14000d8a5:	mov    DWORD PTR [rbx+0x7c],esi
   14000d8a8:	mov    DWORD PTR [rbx+0x80],esi
   14000d8ae:	mov    DWORD PTR [rbx+0x84],esi
   14000d8b4:	mov    DWORD PTR [rbx+0x88],esi
   14000d8ba:	mov    BYTE PTR [rbx+0x8c],sil
   14000d8c1:	mov    BYTE PTR [rbx+0x8d],sil
   14000d8c8:	mov    BYTE PTR [rbx+0x8e],sil
   14000d8cf:	mov    BYTE PTR [rbx+0x8f],sil
   14000d8d6:	mov    BYTE PTR [rbx+0x90],sil
   14000d8dd:	mov    BYTE PTR [rbx+0x91],0x1
   14000d8e4:	mov    BYTE PTR [rbx+0x92],0x1
   14000d8eb:	test   rdi,rdi
   14000d8ee:	je     0x14000d8fb
   14000d8f0:	mov    rdx,rbx
   14000d8f3:	mov    rcx,rdi
   14000d8f6:	call   0x14000c430
   14000d8fb:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d900:	mov    rax,rbx
   14000d903:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d908:	add    rsp,0x20
   14000d90c:	pop    rdi
   14000d90d:	ret    
   14000d90e:	int3   
   14000d90f:	int3   
   14000d910:	mov    al,BYTE PTR [rcx+0x92]
   14000d916:	ret    
   14000d917:	int3   
   14000d918:	int3   
   14000d919:	int3   
   14000d91a:	int3   
   14000d91b:	int3   
   14000d91c:	int3   
   14000d91d:	int3   
   14000d91e:	int3   
   14000d91f:	int3   
   14000d920:	mov    QWORD PTR [rsp+0x8],rbx
   14000d925:	mov    QWORD PTR [rsp+0x10],rbp
   14000d92a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d92f:	push   rdi
   14000d930:	sub    rsp,0x20
   14000d934:	mov    rdi,rcx
   14000d937:	mov    rcx,QWORD PTR [rcx]
   14000d93a:	movzx  ebx,r9b
   14000d93e:	mov    ebp,r8d
   14000d941:	mov    rsi,rdx
   14000d944:	test   rcx,rcx
   14000d947:	je     0x14000d94e
   14000d949:	call   0x14000c410
   14000d94e:	lea    rcx,[rdi+0x8]
   14000d952:	mov    rdx,rsi
   14000d955:	mov    BYTE PTR [rdi+0x92],bl
   14000d95b:	call   QWORD PTR [rip+0x7857]        # 0x1400151b8
   14000d961:	lea    rcx,[rdi+0x10]
   14000d965:	call   QWORD PTR [rip+0x78c5]        # 0x140015230
   14000d96b:	lea    rcx,[rdi+0x10]
   14000d96f:	mov    edx,0x400
   14000d974:	call   QWORD PTR [rip+0x78ae]        # 0x140015228
   14000d97a:	lea    rcx,[rdi+0x18]
   14000d97e:	call   QWORD PTR [rip+0x78ac]        # 0x140015230
   14000d984:	xor    ebx,ebx
   14000d986:	mov    rcx,rsi
   14000d989:	mov    QWORD PTR [rdi+0x20],rbx
   14000d98d:	mov    DWORD PTR [rdi+0x28],ebx
   14000d990:	mov    DWORD PTR [rdi+0x2c],ebx
   14000d993:	call   QWORD PTR [rip+0x77f7]        # 0x140015190
   14000d999:	mov    QWORD PTR [rdi+0x30],rax
   14000d99d:	mov    rcx,QWORD PTR [rsi]
   14000d9a0:	movsxd rdx,DWORD PTR [rcx+0x4]
   14000d9a4:	mov    QWORD PTR [rdi+0x40],rax
   14000d9a8:	mov    QWORD PTR [rdi+0x48],rax
   14000d9ac:	lea    rcx,[rax+rdx*2]
   14000d9b0:	mov    dl,0xa
   14000d9b2:	mov    QWORD PTR [rdi+0x50],rax
   14000d9b6:	mov    QWORD PTR [rdi+0x38],rcx
   14000d9ba:	lea    rcx,[rsp+0x48]
   14000d9bf:	call   QWORD PTR [rip+0x780b]        # 0x1400151d0
   14000d9c5:	movzx  r11d,WORD PTR [rsp+0x48]
   14000d9cb:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d9d0:	mov    DWORD PTR [rdi+0x5c],ebx
   14000d9d3:	mov    DWORD PTR [rdi+0x60],ebp
   14000d9d6:	mov    QWORD PTR [rdi+0x68],rbx
   14000d9da:	mov    DWORD PTR [rdi+0x70],ebx
   14000d9dd:	mov    DWORD PTR [rdi+0x74],ebx
   14000d9e0:	mov    DWORD PTR [rdi+0x7c],ebx
   14000d9e3:	mov    DWORD PTR [rdi+0x84],ebx
   14000d9e9:	mov    DWORD PTR [rdi+0x88],ebp
   14000d9ef:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d9f4:	mov    BYTE PTR [rdi+0x8c],bl
   14000d9fa:	mov    BYTE PTR [rdi+0x8d],bl
   14000da00:	mov    BYTE PTR [rdi+0x8e],bl
   14000da06:	mov    BYTE PTR [rdi+0x8f],bl
   14000da0c:	mov    BYTE PTR [rdi+0x90],bl
   14000da12:	mov    rbx,QWORD PTR [rsp+0x30]
   14000da17:	mov    WORD PTR [rdi+0x58],r11w
   14000da1c:	mov    DWORD PTR [rdi+0x78],0xffffffff
   14000da23:	mov    BYTE PTR [rdi+0x91],0x1
   14000da2a:	add    rsp,0x20
   14000da2e:	pop    rdi
   14000da2f:	ret    
   14000da30:	dec    ecx
   14000da32:	cmp    ecx,0x4f
   14000da35:	ja     0x14000da58
   14000da37:	lea    rdx,[rip+0xffffffffffff25c2]        # 0x140000000
   14000da3e:	movsxd rax,ecx
   14000da41:	movzx  eax,BYTE PTR [rdx+rax*1+0xda64]
   14000da49:	mov    ecx,DWORD PTR [rdx+rax*4+0xda5c]
   14000da50:	add    rcx,rdx
   14000da53:	jmp    rcx
   14000da55:	mov    al,0x1
   14000da57:	ret    
   14000da58:	xor    al,al
   14000da5a:	ret    
   14000da5b:	nop
   14000da5c:	push   rbp
   14000da5d:	fiadd  DWORD PTR [rax]
   14000da5f:	add    BYTE PTR [rax-0x26],bl
   14000da62:	add    BYTE PTR [rax],al
   14000da64:	add    BYTE PTR [rax],al
   14000da66:	add    BYTE PTR [rcx],al
   14000da68:	add    DWORD PTR [rcx],eax
   14000da6a:	add    DWORD PTR [rcx],eax
   14000da6c:	add    DWORD PTR [rcx],eax
   14000da6e:	add    DWORD PTR [rax],eax
   14000da70:	add    BYTE PTR [rcx],al
   14000da72:	add    DWORD PTR [rcx],eax
   14000da74:	add    BYTE PTR [rax],al
   14000da76:	add    BYTE PTR [rcx],al
   14000da78:	add    DWORD PTR [rcx],eax
   14000da7a:	add    BYTE PTR [rax],al
   14000da7c:	add    BYTE PTR [rax],al
   14000da7e:	add    BYTE PTR [rax],al
   14000da80:	add    DWORD PTR [rcx],eax
   14000da82:	add    DWORD PTR [rcx],eax
   14000da84:	add    DWORD PTR [rcx],eax
   14000da86:	add    BYTE PTR [rcx],al
   14000da88:	add    BYTE PTR [rax],al
   14000da8a:	add    BYTE PTR [rax],al
   14000da8c:	add    BYTE PTR [rcx],al
   14000da8e:	add    DWORD PTR [rcx],eax
   14000da90:	add    BYTE PTR [rax],al
   14000da92:	add    DWORD PTR [rax],eax
   14000da94:	add    BYTE PTR [rax],al
   14000da96:	add    BYTE PTR [rax],al
   14000da98:	add    DWORD PTR [rcx],eax
   14000da9a:	add    DWORD PTR [rcx],eax
   14000da9c:	add    BYTE PTR [rax],al
   14000da9e:	add    BYTE PTR [rcx],al
   14000daa0:	add    DWORD PTR [rcx],eax
   14000daa2:	add    BYTE PTR [rax],al
   14000daa4:	add    DWORD PTR [rcx],eax
   14000daa6:	add    DWORD PTR [rcx],eax
   14000daa8:	add    DWORD PTR [rcx],eax
   14000daaa:	add    DWORD PTR [rcx],eax
   14000daac:	add    DWORD PTR [rcx],eax
   14000daae:	add    DWORD PTR [rcx],eax
   14000dab0:	add    DWORD PTR [rcx],eax
   14000dab2:	add    BYTE PTR [rax],al
   14000dab4:	int3   
   14000dab5:	int3   
   14000dab6:	int3   
   14000dab7:	int3   
   14000dab8:	int3   
   14000dab9:	int3   
   14000daba:	int3   
   14000dabb:	int3   
   14000dabc:	int3   
   14000dabd:	int3   
   14000dabe:	int3   
   14000dabf:	int3   
   14000dac0:	sub    rsp,0x28
   14000dac4:	cmp    cx,0x61
   14000dac8:	jb     0x14000dad0
   14000daca:	cmp    cx,0x7a
   14000dace:	jbe    0x14000db3a
   14000dad0:	cmp    cx,0x41
   14000dad4:	jb     0x14000dadc
   14000dad6:	cmp    cx,0x5a
   14000dada:	jbe    0x14000db3a
   14000dadc:	cmp    cx,0x30
   14000dae0:	jb     0x14000dae8
   14000dae2:	cmp    cx,0x39
   14000dae6:	jbe    0x14000db3a
   14000dae8:	cmp    cx,0x24
   14000daec:	je     0x14000db3a
   14000daee:	cmp    cx,0x5f
   14000daf2:	je     0x14000db3a
   14000daf4:	mov    eax,0x200c
   14000daf9:	cmp    cx,ax
   14000dafc:	je     0x14000db3a
   14000dafe:	mov    eax,0x200d
   14000db03:	cmp    cx,ax
   14000db06:	je     0x14000db3a
   14000db08:	movzx  ecx,cx
   14000db0b:	call   QWORD PTR [rip+0x7727]        # 0x140015238
   14000db11:	cmp    eax,0x13
   14000db14:	ja     0x14000db33
   14000db16:	lea    rdx,[rip+0xffffffffffff24e3]        # 0x140000000
   14000db1d:	cdqe   
   14000db1f:	movzx  eax,BYTE PTR [rdx+rax*1+0xdb4c]
   14000db27:	mov    ecx,DWORD PTR [rdx+rax*4+0xdb44]
   14000db2e:	add    rcx,rdx
   14000db31:	jmp    rcx
   14000db33:	xor    al,al
   14000db35:	add    rsp,0x28
   14000db39:	ret    
   14000db3a:	mov    al,0x1
   14000db3c:	add    rsp,0x28
   14000db40:	ret    
   14000db41:	nop    DWORD PTR [rax]
   14000db44:	cmp    bl,bl
   14000db46:	add    BYTE PTR [rax],al
   14000db48:	xor    ebx,ebx
   14000db4a:	add    BYTE PTR [rax],al
   14000db4c:	add    BYTE PTR [rax],al
   14000db4e:	add    DWORD PTR [rax],eax
   14000db50:	add    BYTE PTR [rcx],al
   14000db52:	add    DWORD PTR [rcx],eax
   14000db54:	add    DWORD PTR [rcx],eax
   14000db56:	add    DWORD PTR [rcx],eax
   14000db58:	add    DWORD PTR [rcx],eax
   14000db5a:	add    BYTE PTR [rax],al
   14000db5c:	add    BYTE PTR [rax],al
   14000db5e:	add    BYTE PTR [rax],al
   14000db60:	movzx  eax,WORD PTR [rcx+0x58]
   14000db64:	cmp    ax,0xa
   14000db68:	je     0x14000db87
   14000db6a:	cmp    ax,0xd
   14000db6e:	je     0x14000db87
   14000db70:	mov    ecx,0x2028
   14000db75:	cmp    ax,cx
   14000db78:	je     0x14000db87
   14000db7a:	mov    ecx,0x2029
   14000db7f:	cmp    ax,cx
   14000db82:	je     0x14000db87
   14000db84:	xor    al,al
   14000db86:	ret    
   14000db87:	mov    al,0x1
   14000db89:	ret    
   14000db8a:	int3   
   14000db8b:	int3   
   14000db8c:	int3   
   14000db8d:	int3   
   14000db8e:	int3   
   14000db8f:	int3   
   14000db90:	movzx  eax,WORD PTR [rcx+0x58]
   14000db94:	cmp    eax,0xa
   14000db97:	je     0x14000dbbf
   14000db99:	cmp    eax,0xd
   14000db9c:	je     0x14000dbaf
   14000db9e:	cmp    eax,0x2027
   14000dba3:	jle    0x14000dbac
   14000dba5:	cmp    eax,0x2029
   14000dbaa:	jle    0x14000dbbf
   14000dbac:	xor    eax,eax
   14000dbae:	ret    
   14000dbaf:	mov    rcx,QWORD PTR [rcx+0x30]
   14000dbb3:	xor    eax,eax
   14000dbb5:	cmp    WORD PTR [rcx],0xa
   14000dbb9:	sete   al
   14000dbbc:	inc    eax
   14000dbbe:	ret    
   14000dbbf:	mov    eax,0x1
   14000dbc4:	ret    
   14000dbc5:	int3   
   14000dbc6:	int3   
   14000dbc7:	int3   
   14000dbc8:	int3   
   14000dbc9:	int3   
   14000dbca:	int3   
   14000dbcb:	int3   
   14000dbcc:	int3   
   14000dbcd:	int3   
   14000dbce:	int3   
   14000dbcf:	int3   
   14000dbd0:	mov    WORD PTR [rsp+0x8],cx
   14000dbd5:	sub    rsp,0x28
   14000dbd9:	lea    rcx,[rsp+0x38]
   14000dbde:	mov    dl,0x61
   14000dbe0:	call   QWORD PTR [rip+0x75ea]        # 0x1400151d0
   14000dbe6:	movzx  eax,WORD PTR [rax]
   14000dbe9:	cmp    WORD PTR [rsp+0x30],ax
   14000dbee:	jb     0x14000dc07
   14000dbf0:	lea    rcx,[rsp+0x38]
   14000dbf5:	mov    dl,0x7a
   14000dbf7:	call   QWORD PTR [rip+0x75d3]        # 0x1400151d0
   14000dbfd:	movzx  eax,WORD PTR [rax]
   14000dc00:	cmp    ax,WORD PTR [rsp+0x30]
   14000dc05:	jae    0x14000dc86
   14000dc07:	lea    rcx,[rsp+0x38]
   14000dc0c:	mov    dl,0x41
   14000dc0e:	call   QWORD PTR [rip+0x75bc]        # 0x1400151d0
   14000dc14:	movzx  eax,WORD PTR [rax]
   14000dc17:	cmp    WORD PTR [rsp+0x30],ax
   14000dc1c:	jb     0x14000dc35
   14000dc1e:	lea    rcx,[rsp+0x38]
   14000dc23:	mov    dl,0x5a
   14000dc25:	call   QWORD PTR [rip+0x75a5]        # 0x1400151d0
   14000dc2b:	movzx  eax,WORD PTR [rax]
   14000dc2e:	cmp    ax,WORD PTR [rsp+0x30]
   14000dc33:	jae    0x14000dc86
   14000dc35:	lea    rcx,[rsp+0x38]
   14000dc3a:	mov    dl,0x24
   14000dc3c:	call   QWORD PTR [rip+0x758e]        # 0x1400151d0
   14000dc42:	movzx  eax,WORD PTR [rax]
   14000dc45:	cmp    WORD PTR [rsp+0x30],ax
   14000dc4a:	je     0x14000dc86
   14000dc4c:	lea    rcx,[rsp+0x38]
   14000dc51:	mov    dl,0x5f
   14000dc53:	call   QWORD PTR [rip+0x7577]        # 0x1400151d0
   14000dc59:	mov    r11,rax
   14000dc5c:	movzx  eax,WORD PTR [rsp+0x30]
   14000dc61:	cmp    ax,WORD PTR [r11]
   14000dc65:	je     0x14000dc86
   14000dc67:	mov    ecx,0x80
   14000dc6c:	cmp    ax,cx
   14000dc6f:	jae    0x14000dc78
   14000dc71:	xor    al,al
   14000dc73:	add    rsp,0x28
   14000dc77:	ret    
   14000dc78:	movzx  ecx,ax
   14000dc7b:	call   QWORD PTR [rip+0x75bf]        # 0x140015240
   14000dc81:	add    rsp,0x28
   14000dc85:	ret    
   14000dc86:	mov    al,0x1
   14000dc88:	add    rsp,0x28
   14000dc8c:	ret    
   14000dc8d:	int3   
   14000dc8e:	int3   
   14000dc8f:	int3   
   14000dc90:	mov    WORD PTR [rsp+0x8],cx
   14000dc95:	sub    rsp,0x38
   14000dc99:	lea    rcx,[rsp+0x48]
   14000dc9e:	mov    dl,0x30
   14000dca0:	call   QWORD PTR [rip+0x752a]        # 0x1400151d0
   14000dca6:	movzx  eax,WORD PTR [rax]
   14000dca9:	cmp    WORD PTR [rsp+0x40],ax
   14000dcae:	jb     0x14000dcc7
   14000dcb0:	lea    rcx,[rsp+0x50]
   14000dcb5:	mov    dl,0x39
   14000dcb7:	call   QWORD PTR [rip+0x7513]        # 0x1400151d0
   14000dcbd:	movzx  eax,WORD PTR [rax]
   14000dcc0:	cmp    ax,WORD PTR [rsp+0x40]
   14000dcc5:	jae    0x14000dd23
   14000dcc7:	lea    rcx,[rsp+0x58]
   14000dccc:	mov    dl,0x61
   14000dcce:	call   QWORD PTR [rip+0x74fc]        # 0x1400151d0
   14000dcd4:	movzx  eax,WORD PTR [rax]
   14000dcd7:	cmp    WORD PTR [rsp+0x40],ax
   14000dcdc:	jb     0x14000dcf5
   14000dcde:	lea    rcx,[rsp+0x20]
   14000dce3:	mov    dl,0x66
   14000dce5:	call   QWORD PTR [rip+0x74e5]        # 0x1400151d0
   14000dceb:	movzx  eax,WORD PTR [rax]
   14000dcee:	cmp    ax,WORD PTR [rsp+0x40]
   14000dcf3:	jae    0x14000dd23
   14000dcf5:	lea    rcx,[rsp+0x22]
   14000dcfa:	mov    dl,0x41
   14000dcfc:	call   QWORD PTR [rip+0x74ce]        # 0x1400151d0
   14000dd02:	movzx  eax,WORD PTR [rax]
   14000dd05:	cmp    WORD PTR [rsp+0x40],ax
   14000dd0a:	jb     0x14000dd2a
   14000dd0c:	lea    rcx,[rsp+0x24]
   14000dd11:	mov    dl,0x46
   14000dd13:	call   QWORD PTR [rip+0x74b7]        # 0x1400151d0
   14000dd19:	movzx  eax,WORD PTR [rax]
   14000dd1c:	cmp    ax,WORD PTR [rsp+0x40]
   14000dd21:	jb     0x14000dd2a
   14000dd23:	mov    al,0x1
   14000dd25:	add    rsp,0x38
   14000dd29:	ret    
   14000dd2a:	xor    al,al
   14000dd2c:	add    rsp,0x38
   14000dd30:	ret    
   14000dd31:	int3   
   14000dd32:	int3   
   14000dd33:	int3   
   14000dd34:	int3   
   14000dd35:	int3   
   14000dd36:	int3   
   14000dd37:	int3   
   14000dd38:	int3   
   14000dd39:	int3   
   14000dd3a:	int3   
   14000dd3b:	int3   
   14000dd3c:	int3   
   14000dd3d:	int3   
   14000dd3e:	int3   
   14000dd3f:	int3   
   14000dd40:	rex push rbx
   14000dd42:	sub    rsp,0x20
   14000dd46:	mov    rbx,rdx
   14000dd49:	lea    rdx,[rcx+0x18]
   14000dd4d:	mov    rcx,rbx
   14000dd50:	call   QWORD PTR [rip+0x7672]        # 0x1400153c8
   14000dd56:	mov    rax,rbx
   14000dd59:	add    rsp,0x20
   14000dd5d:	pop    rbx
   14000dd5e:	ret    
   14000dd5f:	int3   
   14000dd60:	cmp    edx,0x37
   14000dd63:	je     0x14000dd7e
   14000dd65:	test   edx,edx
   14000dd67:	je     0x14000dd7e
   14000dd69:	cmp    BYTE PTR [rcx+0x8f],0x0
   14000dd70:	jne    0x14000dd7e
   14000dd72:	cmp    BYTE PTR [rcx+0x90],0x0
   14000dd79:	jne    0x14000dd7e
   14000dd7b:	xor    al,al
   14000dd7d:	ret    
   14000dd7e:	mov    al,0x1
   14000dd80:	ret    
   14000dd81:	int3   
   14000dd82:	int3   
   14000dd83:	int3   
   14000dd84:	int3   
   14000dd85:	int3   
   14000dd86:	int3   
   14000dd87:	int3   
   14000dd88:	int3   
   14000dd89:	int3   
   14000dd8a:	int3   
   14000dd8b:	int3   
   14000dd8c:	int3   
   14000dd8d:	int3   
   14000dd8e:	int3   
   14000dd8f:	int3   
   14000dd90:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd95:	mov    QWORD PTR [rsp+0x20],rbp
   14000dd9a:	mov    DWORD PTR [rsp+0x10],edx
   14000dd9e:	push   rsi
   14000dd9f:	push   rdi
   14000dda0:	push   r12
   14000dda2:	sub    rsp,0x20
   14000dda6:	mov    eax,DWORD PTR [rcx+0x4]
   14000dda9:	mov    rsi,QWORD PTR [rcx+0x8]
   14000ddad:	mov    rbx,rcx
   14000ddb0:	cmp    edx,eax
   14000ddb2:	lea    r9,[rsp+0x48]
   14000ddb7:	lea    rcx,[rsp+0x50]
   14000ddbc:	cmovge r9,rcx
   14000ddc0:	movsxd rbp,r8d
   14000ddc3:	mov    DWORD PTR [rsp+0x50],eax
   14000ddc7:	movsxd r12,DWORD PTR [r9]
   14000ddca:	mov    edi,edx
   14000ddcc:	cmp    ebp,DWORD PTR [rbx]
   14000ddce:	je     0x14000de05
   14000ddd0:	cmp    ebp,0x20
   14000ddd3:	jle    0x14000dde2
   14000ddd5:	mov    rcx,rbp
   14000ddd8:	call   QWORD PTR [rip+0x733a]        # 0x140015118
   14000ddde:	mov    DWORD PTR [rbx],ebp
   14000dde0:	jmp    0x14000ddec
   14000dde2:	lea    rax,[rbx+0x10]
   14000dde6:	mov    DWORD PTR [rbx],0x20
   14000ddec:	mov    r8,r12
   14000ddef:	mov    rdx,rsi
   14000ddf2:	mov    rcx,rax
   14000ddf5:	mov    QWORD PTR [rbx+0x8],rax
   14000ddf9:	mov    DWORD PTR [rbx+0x4],0x0
   14000de00:	call   0x140014998
   14000de05:	lea    rax,[rbx+0x10]
   14000de09:	mov    DWORD PTR [rbx+0x4],r12d
   14000de0d:	cmp    rsi,rax
   14000de10:	je     0x14000de21
   14000de12:	cmp    rsi,QWORD PTR [rbx+0x8]
   14000de16:	je     0x14000de21
   14000de18:	mov    rcx,rsi
   14000de1b:	call   QWORD PTR [rip+0x72df]        # 0x140015100
   14000de21:	mov    rbp,QWORD PTR [rsp+0x58]
   14000de26:	mov    DWORD PTR [rbx+0x4],edi
   14000de29:	mov    rbx,QWORD PTR [rsp+0x40]
   14000de2e:	add    rsp,0x20
   14000de32:	pop    r12
   14000de34:	pop    rdi
   14000de35:	pop    rsi
   14000de36:	ret    
   14000de37:	int3   
   14000de38:	int3   
   14000de39:	int3   
   14000de3a:	int3   
   14000de3b:	int3   
   14000de3c:	int3   
   14000de3d:	int3   
   14000de3e:	int3   
   14000de3f:	int3   
   14000de40:	mov    QWORD PTR [rsp+0x8],rbx
   14000de45:	mov    QWORD PTR [rsp+0x20],rbp
   14000de4a:	mov    DWORD PTR [rsp+0x10],edx
   14000de4e:	push   rsi
   14000de4f:	push   rdi
   14000de50:	push   r12
   14000de52:	sub    rsp,0x20
   14000de56:	mov    eax,DWORD PTR [rcx+0x4]
   14000de59:	mov    rsi,QWORD PTR [rcx+0x8]
   14000de5d:	mov    rbx,rcx
   14000de60:	cmp    edx,eax
   14000de62:	lea    r9,[rsp+0x48]
   14000de67:	lea    rcx,[rsp+0x50]
   14000de6c:	cmovge r9,rcx
   14000de70:	movsxd rbp,r8d
   14000de73:	mov    DWORD PTR [rsp+0x50],eax
   14000de77:	movsxd r12,DWORD PTR [r9]
   14000de7a:	mov    edi,edx
   14000de7c:	cmp    ebp,DWORD PTR [rbx]
   14000de7e:	je     0x14000deb5
   14000de80:	cmp    ebp,0x40
   14000de83:	jle    0x14000de92
   14000de85:	mov    rcx,rbp
   14000de88:	call   QWORD PTR [rip+0x728a]        # 0x140015118
   14000de8e:	mov    DWORD PTR [rbx],ebp
   14000de90:	jmp    0x14000de9c
   14000de92:	lea    rax,[rbx+0x10]
   14000de96:	mov    DWORD PTR [rbx],0x40
   14000de9c:	mov    r8,r12
   14000de9f:	mov    rdx,rsi
   14000dea2:	mov    rcx,rax
   14000dea5:	mov    QWORD PTR [rbx+0x8],rax
   14000dea9:	mov    DWORD PTR [rbx+0x4],0x0
   14000deb0:	call   0x140014998
   14000deb5:	lea    rax,[rbx+0x10]
   14000deb9:	mov    DWORD PTR [rbx+0x4],r12d
   14000debd:	cmp    rsi,rax
   14000dec0:	je     0x14000ded1
   14000dec2:	cmp    rsi,QWORD PTR [rbx+0x8]
   14000dec6:	je     0x14000ded1
   14000dec8:	mov    rcx,rsi
   14000decb:	call   QWORD PTR [rip+0x722f]        # 0x140015100
   14000ded1:	mov    rbp,QWORD PTR [rsp+0x58]
   14000ded6:	mov    DWORD PTR [rbx+0x4],edi
   14000ded9:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dede:	add    rsp,0x20
   14000dee2:	pop    r12
   14000dee4:	pop    rdi
   14000dee5:	pop    rsi
   14000dee6:	ret    
   14000dee7:	int3   
   14000dee8:	int3   
   14000dee9:	int3   
   14000deea:	int3   
   14000deeb:	int3   
   14000deec:	int3   
   14000deed:	int3   
   14000deee:	int3   
   14000deef:	int3   
   14000def0:	movzx  eax,WORD PTR [rcx+0x58]
   14000def4:	xor    r8d,r8d
   14000def7:	mov    rdx,rcx
   14000defa:	cmp    eax,0xa
   14000defd:	je     0x14000df2b
   14000deff:	cmp    eax,0xd
   14000df02:	je     0x14000df17
   14000df04:	cmp    eax,0x2027
   14000df09:	jle    0x14000df12
   14000df0b:	cmp    eax,0x2029
   14000df10:	jle    0x14000df2b
   14000df12:	mov    r9d,r8d
   14000df15:	jmp    0x14000df31
   14000df17:	mov    rax,QWORD PTR [rcx+0x30]
   14000df1b:	mov    r9d,r8d
   14000df1e:	cmp    WORD PTR [rax],0xa
   14000df22:	sete   r9b
   14000df26:	inc    r9d
   14000df29:	jmp    0x14000df31
   14000df2b:	mov    r9d,0x1
   14000df31:	mov    rcx,QWORD PTR [rcx+0x30]
   14000df35:	add    rcx,0x2
   14000df39:	movzx  eax,WORD PTR [rcx-0x2]
   14000df3d:	mov    QWORD PTR [rdx+0x30],rcx
   14000df41:	mov    WORD PTR [rdx+0x58],ax
   14000df45:	cmp    r9d,0x2
   14000df49:	jne    0x14000df5a
   14000df4b:	movzx  eax,WORD PTR [rcx]
   14000df4e:	mov    WORD PTR [rdx+0x58],ax
   14000df52:	lea    rax,[rcx+0x2]
   14000df56:	mov    QWORD PTR [rdx+0x30],rax
   14000df5a:	movzx  eax,WORD PTR [rdx+0x58]
   14000df5e:	cmp    eax,0xa
   14000df61:	je     0x14000df76
   14000df63:	cmp    eax,0xd
   14000df66:	je     0x14000df91
   14000df68:	cmp    eax,0x2027
   14000df6d:	jle    0x14000df8f
   14000df6f:	cmp    eax,0x2029
   14000df74:	jg     0x14000df8f
   14000df76:	mov    rax,QWORD PTR [rdx+0x30]
   14000df7a:	inc    DWORD PTR [rdx+0x60]
   14000df7d:	mov    r8d,0x1
   14000df83:	mov    ecx,r8d
   14000df86:	lea    rcx,[rax+rcx*2-0x2]
   14000df8b:	mov    QWORD PTR [rdx+0x40],rcx
   14000df8f:	repz ret 
   14000df91:	mov    rax,QWORD PTR [rdx+0x30]
   14000df95:	cmp    WORD PTR [rax],0xa
   14000df99:	sete   r8b
   14000df9d:	inc    DWORD PTR [rdx+0x60]
   14000dfa0:	inc    r8d
   14000dfa3:	mov    ecx,r8d
   14000dfa6:	lea    rcx,[rax+rcx*2-0x2]
   14000dfab:	mov    QWORD PTR [rdx+0x40],rcx
   14000dfaf:	ret    
   14000dfb0:	rex push rbx
   14000dfb2:	push   r12
   14000dfb4:	push   r13
   14000dfb6:	push   r14
   14000dfb8:	sub    rsp,0x38
   14000dfbc:	mov    r14,rcx
   14000dfbf:	mov    r12,rdx
   14000dfc2:	lea    rcx,[rsp+0x60]
   14000dfc7:	mov    dl,0x75
   14000dfc9:	mov    r13,r8
   14000dfcc:	call   QWORD PTR [rip+0x71fe]        # 0x1400151d0
   14000dfd2:	movzx  eax,WORD PTR [rax]
   14000dfd5:	cmp    WORD PTR [r14+0x58],ax
   14000dfda:	jne    0x14000e0b2
   14000dfe0:	mov    rbx,QWORD PTR [r14+0x30]
   14000dfe4:	movzx  ecx,WORD PTR [rbx]
   14000dfe7:	call   0x14000dc90
   14000dfec:	test   al,al
   14000dfee:	je     0x14000e0b2
   14000dff4:	movzx  ecx,WORD PTR [rbx+0x2]
   14000dff8:	call   0x14000dc90
   14000dffd:	test   al,al
   14000dfff:	je     0x14000e0b2
   14000e005:	movzx  ecx,WORD PTR [rbx+0x4]
   14000e009:	call   0x14000dc90
   14000e00e:	test   al,al
   14000e010:	je     0x14000e0b2
   14000e016:	movzx  ecx,WORD PTR [rbx+0x6]
   14000e01a:	call   0x14000dc90
   14000e01f:	test   al,al
   14000e021:	je     0x14000e0b2
   14000e027:	mov    QWORD PTR [rsp+0x68],rbp
   14000e02c:	mov    rcx,r14
   14000e02f:	mov    QWORD PTR [rsp+0x70],rsi
   14000e034:	mov    QWORD PTR [rsp+0x30],rdi
   14000e039:	call   0x14000def0
   14000e03e:	movzx  ebx,WORD PTR [r14+0x58]
   14000e043:	mov    rcx,r14
   14000e046:	call   0x14000def0
   14000e04b:	movzx  edi,WORD PTR [r14+0x58]
   14000e050:	mov    rcx,r14
   14000e053:	call   0x14000def0
   14000e058:	movzx  esi,WORD PTR [r14+0x58]
   14000e05d:	mov    rcx,r14
   14000e060:	call   0x14000def0
   14000e065:	movzx  ebp,WORD PTR [r14+0x58]
   14000e06a:	mov    rcx,r14
   14000e06d:	call   0x14000def0
   14000e072:	test   r13,r13
   14000e075:	je     0x14000e07c
   14000e077:	mov    BYTE PTR [r13+0x0],0x1
   14000e07c:	movzx  r9d,si
   14000e080:	movzx  r8d,di
   14000e084:	movzx  edx,bx
   14000e087:	mov    rcx,r12
   14000e08a:	mov    WORD PTR [rsp+0x20],bp
   14000e08f:	call   0x14000d780
   14000e094:	mov    rdi,QWORD PTR [rsp+0x30]
   14000e099:	mov    rsi,QWORD PTR [rsp+0x70]
   14000e09e:	mov    rbp,QWORD PTR [rsp+0x68]
   14000e0a3:	mov    rax,r12
   14000e0a6:	add    rsp,0x38
   14000e0aa:	pop    r14
   14000e0ac:	pop    r13
   14000e0ae:	pop    r12
   14000e0b0:	pop    rbx
   14000e0b1:	ret    
   14000e0b2:	xor    eax,eax
   14000e0b4:	mov    BYTE PTR [r13+0x0],0x0
   14000e0b9:	mov    WORD PTR [r12],ax
   14000e0be:	mov    rax,r12
   14000e0c1:	add    rsp,0x38
   14000e0c5:	pop    r14
   14000e0c7:	pop    r13
   14000e0c9:	pop    r12
   14000e0cb:	pop    rbx
   14000e0cc:	ret    
   14000e0cd:	int3   
   14000e0ce:	int3   
   14000e0cf:	int3   
   14000e0d0:	mov    QWORD PTR [rsp+0x18],rbp
   14000e0d5:	mov    QWORD PTR [rsp+0x20],rsi
   14000e0da:	push   r12
   14000e0dc:	sub    rsp,0x20
   14000e0e0:	mov    rax,QWORD PTR [rcx+0x30]
   14000e0e4:	mov    rbp,rcx
   14000e0e7:	mov    r12,r8
   14000e0ea:	movzx  ecx,WORD PTR [rax]
   14000e0ed:	mov    rsi,rdx
   14000e0f0:	call   0x14000dc90
   14000e0f5:	test   al,al
   14000e0f7:	je     0x14000e1c2
   14000e0fd:	mov    rax,QWORD PTR [rbp+0x30]
   14000e101:	movzx  ecx,WORD PTR [rax+0x2]
   14000e105:	call   0x14000dc90
   14000e10a:	test   al,al
   14000e10c:	je     0x14000e1c2
   14000e112:	mov    rcx,rbp
   14000e115:	mov    QWORD PTR [rsp+0x30],rbx
   14000e11a:	mov    QWORD PTR [rsp+0x38],rdi
   14000e11f:	call   0x14000def0
   14000e124:	movzx  ebx,WORD PTR [rbp+0x58]
   14000e128:	mov    rcx,rbp
   14000e12b:	call   0x14000def0
   14000e130:	movzx  edi,WORD PTR [rbp+0x58]
   14000e134:	mov    rcx,rbp
   14000e137:	call   0x14000def0
   14000e13c:	test   r12,r12
   14000e13f:	je     0x14000e146
   14000e141:	mov    BYTE PTR [r12],0x1
   14000e146:	cmp    bx,0x30
   14000e14a:	jb     0x14000e157
   14000e14c:	cmp    bx,0x39
   14000e150:	ja     0x14000e157
   14000e152:	sub    bl,0x30
   14000e155:	jmp    0x14000e16b
   14000e157:	cmp    bx,0x61
   14000e15b:	jb     0x14000e168
   14000e15d:	cmp    bx,0x66
   14000e161:	ja     0x14000e168
   14000e163:	sub    bl,0x57
   14000e166:	jmp    0x14000e16b
   14000e168:	sub    bl,0x37
   14000e16b:	cmp    di,0x30
   14000e16f:	jb     0x14000e17d
   14000e171:	cmp    di,0x39
   14000e175:	ja     0x14000e17d
   14000e177:	sub    dil,0x30
   14000e17b:	jmp    0x14000e193
   14000e17d:	cmp    di,0x61
   14000e181:	jb     0x14000e18f
   14000e183:	cmp    di,0x66
   14000e187:	ja     0x14000e18f
   14000e189:	sub    dil,0x57
   14000e18d:	jmp    0x14000e193
   14000e18f:	sub    dil,0x37
   14000e193:	movzx  eax,dil
   14000e197:	mov    rdi,QWORD PTR [rsp+0x38]
   14000e19c:	movzx  ecx,bl
   14000e19f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e1a4:	shl    cx,0x4
   14000e1a8:	add    cx,ax
   14000e1ab:	mov    rax,rsi
   14000e1ae:	mov    WORD PTR [rsi],cx
   14000e1b1:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e1b6:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e1bb:	add    rsp,0x20
   14000e1bf:	pop    r12
   14000e1c1:	ret    
   14000e1c2:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e1c7:	xor    eax,eax
   14000e1c9:	mov    BYTE PTR [r12],0x0
   14000e1ce:	mov    WORD PTR [rsi],ax
   14000e1d1:	mov    rax,rsi
   14000e1d4:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e1d9:	add    rsp,0x20
   14000e1dd:	pop    r12
   14000e1df:	ret    
   14000e1e0:	rex push rbx
   14000e1e2:	push   rsi
   14000e1e3:	push   rdi
   14000e1e4:	sub    rsp,0x60
   14000e1e8:	mov    ebx,edx
   14000e1ea:	mov    rsi,rcx
   14000e1ed:	xor    edx,edx
   14000e1ef:	add    rcx,0x10
   14000e1f3:	call   QWORD PTR [rip+0x705f]        # 0x140015258
   14000e1f9:	mov    BYTE PTR [rsi+0x8c],0x1
   14000e200:	mov    DWORD PTR [rsi+0x7c],0x0
   14000e207:	cmp    ebx,0x1
   14000e20a:	jne    0x14000e230
   14000e20c:	lea    rcx,[rsp+0x88]
   14000e214:	mov    dl,0x3d
   14000e216:	call   QWORD PTR [rip+0x6fb4]        # 0x1400151d0
   14000e21c:	lea    rcx,[rsi+0x10]
   14000e220:	movzx  edx,WORD PTR [rax]
   14000e223:	call   QWORD PTR [rip+0x7027]        # 0x140015250
   14000e229:	nop    DWORD PTR [rax+0x0]
   14000e230:	movzx  ecx,WORD PTR [rsi+0x58]
   14000e234:	sub    ecx,0x2f
   14000e237:	je     0x14000e496
   14000e23d:	sub    ecx,0x2c
   14000e240:	je     0x14000e321
   14000e246:	cmp    ecx,0x1
   14000e249:	je     0x14000e2ab
   14000e24b:	mov    rax,QWORD PTR [rsi+0x38]
   14000e24f:	cmp    QWORD PTR [rsi+0x30],rax
   14000e253:	ja     0x14000e265
   14000e255:	mov    rcx,rsi
   14000e258:	call   0x14000db60
   14000e25d:	test   al,al
   14000e25f:	je     0x14000e3ef
   14000e265:	lea    r8,[rip+0x9194]        # 0x140017400
   14000e26c:	lea    rdx,[rip+0x9005]        # 0x140017278
   14000e273:	lea    rcx,[rsp+0x30]
   14000e278:	xor    r9d,r9d
   14000e27b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e283:	call   QWORD PTR [rip+0x6f3f]        # 0x1400151c8
   14000e289:	lea    rcx,[rsi+0x18]
   14000e28d:	mov    rdx,rax
   14000e290:	call   QWORD PTR [rip+0x6f22]        # 0x1400151b8
   14000e296:	lea    rcx,[rsp+0x30]
   14000e29b:	call   QWORD PTR [rip+0x7117]        # 0x1400153b8
   14000e2a1:	xor    al,al
   14000e2a3:	add    rsp,0x60
   14000e2a7:	pop    rdi
   14000e2a8:	pop    rsi
   14000e2a9:	pop    rbx
   14000e2aa:	ret    
   14000e2ab:	movzx  edx,WORD PTR [rsi+0x58]
   14000e2af:	lea    rcx,[rsi+0x10]
   14000e2b3:	call   QWORD PTR [rip+0x6f97]        # 0x140015250
   14000e2b9:	mov    rcx,rsi
   14000e2bc:	call   0x14000def0
   14000e2c1:	mov    r11,QWORD PTR [rsi+0x38]
   14000e2c5:	cmp    QWORD PTR [rsi+0x30],r11
   14000e2c9:	ja     0x14000e2db
   14000e2cb:	mov    rcx,rsi
   14000e2ce:	call   0x14000db60
   14000e2d3:	test   al,al
   14000e2d5:	je     0x14000e3ef
   14000e2db:	lea    r8,[rip+0x90e6]        # 0x1400173c8
   14000e2e2:	lea    rdx,[rip+0x8f8f]        # 0x140017278
   14000e2e9:	lea    rcx,[rsp+0x38]
   14000e2ee:	xor    r9d,r9d
   14000e2f1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e2f9:	call   QWORD PTR [rip+0x6ec9]        # 0x1400151c8
   14000e2ff:	lea    rcx,[rsi+0x18]
   14000e303:	mov    rdx,rax
   14000e306:	call   QWORD PTR [rip+0x6eac]        # 0x1400151b8
   14000e30c:	lea    rcx,[rsp+0x38]
   14000e311:	call   QWORD PTR [rip+0x70a1]        # 0x1400153b8
   14000e317:	xor    al,al
   14000e319:	add    rsp,0x60
   14000e31d:	pop    rdi
   14000e31e:	pop    rsi
   14000e31f:	pop    rbx
   14000e320:	ret    
   14000e321:	movzx  edx,WORD PTR [rsi+0x58]
   14000e325:	lea    rcx,[rsi+0x10]
   14000e329:	call   QWORD PTR [rip+0x6f21]        # 0x140015250
   14000e32f:	mov    rcx,rsi
   14000e332:	call   0x14000def0
   14000e337:	mov    rax,QWORD PTR [rsi+0x38]
   14000e33b:	cmp    QWORD PTR [rsi+0x30],rax
   14000e33f:	ja     0x14000e3d6
   14000e345:	mov    rcx,rsi
   14000e348:	call   0x14000db60
   14000e34d:	test   al,al
   14000e34f:	jne    0x14000e3d6
   14000e355:	lea    rcx,[rsp+0x88]
   14000e35d:	mov    dl,0x5d
   14000e35f:	call   QWORD PTR [rip+0x6e6b]        # 0x1400151d0
   14000e365:	movzx  eax,WORD PTR [rax]
   14000e368:	cmp    WORD PTR [rsi+0x58],ax
   14000e36c:	je     0x14000e3d6
   14000e36e:	lea    rcx,[rsp+0x80]
   14000e376:	mov    dl,0x5c
   14000e378:	call   QWORD PTR [rip+0x6e52]        # 0x1400151d0
   14000e37e:	movzx  edx,WORD PTR [rsi+0x58]
   14000e382:	lea    rcx,[rsi+0x10]
   14000e386:	movzx  eax,WORD PTR [rax]
   14000e389:	cmp    dx,ax
   14000e38c:	jne    0x14000e3ba
   14000e38e:	call   QWORD PTR [rip+0x6ebc]        # 0x140015250
   14000e394:	mov    rcx,rsi
   14000e397:	call   0x14000def0
   14000e39c:	mov    r11,QWORD PTR [rsi+0x38]
   14000e3a0:	cmp    QWORD PTR [rsi+0x30],r11
   14000e3a4:	ja     0x14000e40a
   14000e3a6:	mov    rcx,rsi
   14000e3a9:	call   0x14000db60
   14000e3ae:	test   al,al
   14000e3b0:	jne    0x14000e40a
   14000e3b2:	movzx  edx,WORD PTR [rsi+0x58]
   14000e3b6:	lea    rcx,[rsi+0x10]
   14000e3ba:	call   QWORD PTR [rip+0x6e90]        # 0x140015250
   14000e3c0:	mov    rcx,rsi
   14000e3c3:	call   0x14000def0
   14000e3c8:	mov    rax,QWORD PTR [rsi+0x38]
   14000e3cc:	cmp    QWORD PTR [rsi+0x30],rax
   14000e3d0:	jbe    0x14000e345
   14000e3d6:	lea    rcx,[rsp+0x90]
   14000e3de:	mov    dl,0x5d
   14000e3e0:	call   QWORD PTR [rip+0x6dea]        # 0x1400151d0
   14000e3e6:	movzx  eax,WORD PTR [rax]
   14000e3e9:	cmp    WORD PTR [rsi+0x58],ax
   14000e3ed:	jne    0x14000e450
   14000e3ef:	movzx  edx,WORD PTR [rsi+0x58]
   14000e3f3:	lea    rcx,[rsi+0x10]
   14000e3f7:	call   QWORD PTR [rip+0x6e53]        # 0x140015250
   14000e3fd:	mov    rcx,rsi
   14000e400:	call   0x14000def0
   14000e405:	jmp    0x14000e230
   14000e40a:	lea    r8,[rip+0x8fb7]        # 0x1400173c8
   14000e411:	lea    rdx,[rip+0x8e60]        # 0x140017278
   14000e418:	lea    rcx,[rsp+0x40]
   14000e41d:	xor    r9d,r9d
   14000e420:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e428:	call   QWORD PTR [rip+0x6d9a]        # 0x1400151c8
   14000e42e:	lea    rcx,[rsi+0x18]
   14000e432:	mov    rdx,rax
   14000e435:	call   QWORD PTR [rip+0x6d7d]        # 0x1400151b8
   14000e43b:	lea    rcx,[rsp+0x40]
   14000e440:	call   QWORD PTR [rip+0x6f72]        # 0x1400153b8
   14000e446:	xor    al,al
   14000e448:	add    rsp,0x60
   14000e44c:	pop    rdi
   14000e44d:	pop    rsi
   14000e44e:	pop    rbx
   14000e44f:	ret    
   14000e450:	lea    r8,[rip+0x8f49]        # 0x1400173a0
   14000e457:	lea    rdx,[rip+0x8e1a]        # 0x140017278
   14000e45e:	lea    rcx,[rsp+0x48]
   14000e463:	xor    r9d,r9d
   14000e466:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e46e:	call   QWORD PTR [rip+0x6d54]        # 0x1400151c8
   14000e474:	lea    rcx,[rsi+0x18]
   14000e478:	mov    rdx,rax
   14000e47b:	call   QWORD PTR [rip+0x6d37]        # 0x1400151b8
   14000e481:	lea    rcx,[rsp+0x48]
   14000e486:	call   QWORD PTR [rip+0x6f2c]        # 0x1400153b8
   14000e48c:	xor    al,al
   14000e48e:	add    rsp,0x60
   14000e492:	pop    rdi
   14000e493:	pop    rsi
   14000e494:	pop    rbx
   14000e495:	ret    
   14000e496:	mov    rcx,rsi
   14000e499:	call   0x14000def0
   14000e49e:	movzx  ecx,WORD PTR [rsi+0x58]
   14000e4a2:	mov    DWORD PTR [rsi+0x7c],0x0
   14000e4a9:	call   0x14000dbd0
   14000e4ae:	test   al,al
   14000e4b0:	je     0x14000e4f9
   14000e4b2:	movzx  eax,WORD PTR [rsi+0x58]
   14000e4b6:	cmp    eax,0x67
   14000e4b9:	je     0x14000e4d3
   14000e4bb:	cmp    eax,0x69
   14000e4be:	je     0x14000e4cc
   14000e4c0:	cmp    eax,0x6d
   14000e4c3:	jne    0x14000e516
   14000e4c5:	mov    eax,0x4
   14000e4ca:	jmp    0x14000e4d8
   14000e4cc:	mov    eax,0x2
   14000e4d1:	jmp    0x14000e4d8
   14000e4d3:	mov    eax,0x1
   14000e4d8:	mov    ecx,DWORD PTR [rsi+0x7c]
   14000e4db:	test   eax,ecx
   14000e4dd:	jne    0x14000e516
   14000e4df:	or     ecx,eax
   14000e4e1:	mov    DWORD PTR [rsi+0x7c],ecx
   14000e4e4:	mov    rcx,rsi
   14000e4e7:	call   0x14000def0
   14000e4ec:	movzx  ecx,WORD PTR [rsi+0x58]
   14000e4f0:	call   0x14000dbd0
   14000e4f5:	test   al,al
   14000e4f7:	jne    0x14000e4b2
   14000e4f9:	mov    rax,QWORD PTR [rsi+0x30]
   14000e4fd:	sub    rax,QWORD PTR [rsi+0x50]
   14000e501:	sar    rax,1
   14000e504:	dec    eax
   14000e506:	mov    DWORD PTR [rsi+0x84],eax
   14000e50c:	mov    al,0x1
   14000e50e:	add    rsp,0x60
   14000e512:	pop    rdi
   14000e513:	pop    rsi
   14000e514:	pop    rbx
   14000e515:	ret    
   14000e516:	movzx  ebx,WORD PTR [rsi+0x58]
   14000e51a:	lea    rcx,[rsp+0x98]
   14000e522:	mov    dl,0x20
   14000e524:	call   QWORD PTR [rip+0x6ca6]        # 0x1400151d0
   14000e52a:	lea    r8,[rip+0x8e47]        # 0x140017378
   14000e531:	lea    rdx,[rip+0x8d40]        # 0x140017278
   14000e538:	lea    rcx,[rsp+0x58]
   14000e53d:	xor    r9d,r9d
   14000e540:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e548:	mov    rdi,rax
   14000e54b:	call   QWORD PTR [rip+0x6c77]        # 0x1400151c8
   14000e551:	lea    rdx,[rsp+0x50]
   14000e556:	mov    rcx,rax
   14000e559:	movzx  eax,WORD PTR [rdi]
   14000e55c:	xor    r9d,r9d
   14000e55f:	movzx  r8d,bx
   14000e563:	mov    WORD PTR [rsp+0x20],ax
   14000e568:	call   QWORD PTR [rip+0x6cda]        # 0x140015248
   14000e56e:	lea    rcx,[rsi+0x18]
   14000e572:	mov    rdx,rax
   14000e575:	call   QWORD PTR [rip+0x6c3d]        # 0x1400151b8
   14000e57b:	lea    rcx,[rsp+0x50]
   14000e580:	call   QWORD PTR [rip+0x6e32]        # 0x1400153b8
   14000e586:	lea    rcx,[rsp+0x58]
   14000e58b:	call   QWORD PTR [rip+0x6e27]        # 0x1400153b8
   14000e591:	xor    al,al
   14000e593:	add    rsp,0x60
   14000e597:	pop    rdi
   14000e598:	pop    rsi
   14000e599:	pop    rbx
   14000e59a:	ret    
   14000e59b:	int3   
   14000e59c:	int3   
   14000e59d:	int3   
   14000e59e:	int3   
   14000e59f:	int3   
   14000e5a0:	mov    WORD PTR [rsp+0x10],dx
   14000e5a5:	push   rbx
   14000e5a6:	push   rbp
   14000e5a7:	push   rsi
   14000e5a8:	push   rdi
   14000e5a9:	push   r12
   14000e5ab:	push   r13
   14000e5ad:	push   r15
   14000e5af:	sub    rsp,0xd0
   14000e5b6:	mov    rdi,rcx
   14000e5b9:	lea    rcx,[rsp+0x128]
   14000e5c1:	mov    dl,0x30
   14000e5c3:	call   QWORD PTR [rip+0x6c07]        # 0x1400151d0
   14000e5c9:	xor    r15d,r15d
   14000e5cc:	mov    r11,rax
   14000e5cf:	movzx  eax,WORD PTR [rsp+0x118]
   14000e5d7:	cmp    ax,WORD PTR [r11]
   14000e5db:	je     0x14000e7d1
   14000e5e1:	movzx  ebx,WORD PTR [rdi+0x58]
   14000e5e5:	mov    r13,QWORD PTR [rdi+0x30]
   14000e5e9:	lea    rcx,[rsp+0x70]
   14000e5ee:	mov    QWORD PTR [rsp+0x68],rcx
   14000e5f3:	mov    QWORD PTR [rsp+0x110],r14
   14000e5fb:	mov    r14d,0xff
   14000e601:	movzx  ecx,al
   14000e604:	cmp    ax,r14w
   14000e608:	mov    edx,0x40
   14000e60d:	cmova  ecx,r15d
   14000e611:	mov    esi,0x1
   14000e616:	mov    DWORD PTR [rsp+0x60],edx
   14000e61a:	mov    BYTE PTR [rsp+0x70],cl
   14000e61e:	mov    DWORD PTR [rsp+0x64],esi
   14000e622:	movzx  ecx,bx
   14000e625:	cmp    ecx,0x39
   14000e628:	ja     0x14000e62f
   14000e62a:	cmp    ecx,0x30
   14000e62d:	jae    0x14000e64f
   14000e62f:	cmp    ecx,0x7f
   14000e632:	jbe    0x14000e6ef
   14000e638:	call   QWORD PTR [rip+0x6bfa]        # 0x140015238
   14000e63e:	cmp    eax,0x3
   14000e641:	jne    0x14000e6ef
   14000e647:	mov    esi,DWORD PTR [rsp+0x64]
   14000e64b:	mov    edx,DWORD PTR [rsp+0x60]
   14000e64f:	cmp    bx,r14w
   14000e653:	movzx  r12d,bl
   14000e657:	cmova  r12d,r15d
   14000e65b:	cmp    esi,edx
   14000e65d:	jne    0x14000e6c7
   14000e65f:	mov    rbx,QWORD PTR [rsp+0x68]
   14000e664:	lea    ebp,[rsi+rsi*1]
   14000e667:	cmp    ebp,edx
   14000e669:	je     0x14000e6a9
   14000e66b:	cmp    ebp,0x40
   14000e66e:	jle    0x14000e684
   14000e670:	movsxd rcx,ebp
   14000e673:	call   QWORD PTR [rip+0x6a9f]        # 0x140015118
   14000e679:	mov    DWORD PTR [rsp+0x60],ebp
   14000e67d:	mov    QWORD PTR [rsp+0x68],rax
   14000e682:	jmp    0x14000e696
   14000e684:	lea    rax,[rsp+0x70]
   14000e689:	mov    DWORD PTR [rsp+0x60],0x40
   14000e691:	mov    QWORD PTR [rsp+0x68],rax
   14000e696:	movsxd r8,esi
   14000e699:	mov    rdx,rbx
   14000e69c:	mov    rcx,rax
   14000e69f:	mov    DWORD PTR [rsp+0x64],r15d
   14000e6a4:	call   0x140014998
   14000e6a9:	lea    rax,[rsp+0x70]
   14000e6ae:	mov    DWORD PTR [rsp+0x64],esi
   14000e6b2:	cmp    rbx,rax
   14000e6b5:	je     0x14000e6c7
   14000e6b7:	cmp    rbx,QWORD PTR [rsp+0x68]
   14000e6bc:	je     0x14000e6c7
   14000e6be:	mov    rcx,rbx
   14000e6c1:	call   QWORD PTR [rip+0x6a39]        # 0x140015100
   14000e6c7:	mov    rax,QWORD PTR [rsp+0x68]
   14000e6cc:	movsxd rcx,esi
   14000e6cf:	inc    esi
   14000e6d1:	mov    DWORD PTR [rsp+0x64],esi
   14000e6d5:	mov    BYTE PTR [rcx+rax*1],r12b
   14000e6d9:	mov    bx,WORD PTR [r13+0x0]
   14000e6de:	mov    esi,DWORD PTR [rsp+0x64]
   14000e6e2:	mov    edx,DWORD PTR [rsp+0x60]
   14000e6e6:	add    r13,0x2
   14000e6ea:	jmp    0x14000e622
   14000e6ef:	lea    rcx,[rsp+0x128]
   14000e6f7:	mov    dl,0x2e
   14000e6f9:	call   QWORD PTR [rip+0x6ad1]        # 0x1400151d0
   14000e6ff:	mov    r14,QWORD PTR [rsp+0x110]
   14000e707:	cmp    bx,WORD PTR [rax]
   14000e70a:	je     0x14000e7ab
   14000e710:	lea    rcx,[rsp+0x128]
   14000e718:	mov    dl,0x65
   14000e71a:	call   QWORD PTR [rip+0x6ab0]        # 0x1400151d0
   14000e720:	cmp    bx,WORD PTR [rax]
   14000e723:	je     0x14000e7ab
   14000e729:	lea    rcx,[rsp+0x128]
   14000e731:	mov    dl,0x45
   14000e733:	call   QWORD PTR [rip+0x6a97]        # 0x1400151d0
   14000e739:	cmp    bx,WORD PTR [rax]
   14000e73c:	je     0x14000e7ab
   14000e73e:	cmp    r13,QWORD PTR [rdi+0x30]
   14000e742:	je     0x14000e754
   14000e744:	lea    rax,[r13-0x2]
   14000e748:	mov    rcx,rdi
   14000e74b:	mov    QWORD PTR [rdi+0x30],rax
   14000e74f:	call   0x14000def0
   14000e754:	mov    ecx,DWORD PTR [rsp+0x64]
   14000e758:	cmp    ecx,DWORD PTR [rsp+0x60]
   14000e75c:	jne    0x14000e772
   14000e75e:	lea    r8d,[rcx+rcx*1]
   14000e762:	mov    edx,ecx
   14000e764:	lea    rcx,[rsp+0x60]
   14000e769:	call   0x14000de40
   14000e76e:	mov    ecx,DWORD PTR [rsp+0x64]
   14000e772:	movsxd rax,ecx
   14000e775:	inc    ecx
   14000e777:	xor    edx,edx
   14000e779:	mov    DWORD PTR [rsp+0x64],ecx
   14000e77d:	mov    rcx,rax
   14000e780:	mov    rax,QWORD PTR [rsp+0x68]
   14000e785:	mov    BYTE PTR [rcx+rax*1],r15b
   14000e789:	mov    rcx,QWORD PTR [rsp+0x68]
   14000e78e:	call   QWORD PTR [rip+0x695c]        # 0x1400150f0
   14000e794:	mov    rcx,QWORD PTR [rsp+0x68]
   14000e799:	lea    rax,[rsp+0x70]
   14000e79e:	cmp    rcx,rax
   14000e7a1:	movsd  QWORD PTR [rdi+0x68],xmm0
   14000e7a6:	jmp    0x14000f111
   14000e7ab:	mov    rcx,QWORD PTR [rsp+0x68]
   14000e7b0:	lea    rax,[rsp+0x70]
   14000e7b5:	cmp    rcx,rax
   14000e7b8:	je     0x14000e853
   14000e7be:	call   QWORD PTR [rip+0x693c]        # 0x140015100
   14000e7c4:	mov    ax,WORD PTR [rsp+0x118]
   14000e7cc:	jmp    0x14000e85b
   14000e7d1:	movzx  ecx,WORD PTR [rdi+0x58]
   14000e7d5:	cmp    ecx,0x39
   14000e7d8:	ja     0x14000e7df
   14000e7da:	cmp    ecx,0x30
   14000e7dd:	jae    0x14000e7f7
   14000e7df:	cmp    ecx,0x7f
   14000e7e2:	jbe    0x14000e85b
   14000e7e4:	call   QWORD PTR [rip+0x6a4e]        # 0x140015238
   14000e7ea:	cmp    eax,0x3
   14000e7ed:	jne    0x14000e853
   14000e7ef:	mov    ax,WORD PTR [rsp+0x118]
   14000e7f7:	cmp    BYTE PTR [rdi+0x92],r15b
   14000e7fe:	jne    0x14000e85b
   14000e800:	lea    r8,[rip+0x8c81]        # 0x140017488
   14000e807:	lea    rdx,[rip+0x8a6a]        # 0x140017278
   14000e80e:	lea    rcx,[rsp+0x128]
   14000e816:	xor    r9d,r9d
   14000e819:	mov    DWORD PTR [rdi+0x5c],0x1
   14000e820:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000e828:	call   QWORD PTR [rip+0x699a]        # 0x1400151c8
   14000e82e:	lea    rcx,[rdi+0x18]
   14000e832:	mov    rdx,rax
   14000e835:	call   QWORD PTR [rip+0x697d]        # 0x1400151b8
   14000e83b:	lea    rcx,[rsp+0x128]
   14000e843:	call   QWORD PTR [rip+0x6b6f]        # 0x1400153b8
   14000e849:	mov    eax,0x61
   14000e84e:	jmp    0x14000f11e
   14000e853:	mov    ax,WORD PTR [rsp+0x118]
   14000e85b:	lea    rcx,[rsp+0x40]
   14000e860:	mov    dl,0x30
   14000e862:	mov    DWORD PTR [rsp+0x30],0x20
   14000e86a:	mov    QWORD PTR [rsp+0x38],rcx
   14000e86f:	lea    rcx,[rsp+0x128]
   14000e877:	mov    DWORD PTR [rsp+0x34],0x1
   14000e87f:	mov    BYTE PTR [rsp+0x40],al
   14000e883:	call   QWORD PTR [rip+0x6947]        # 0x1400151d0
   14000e889:	movzx  eax,WORD PTR [rax]
   14000e88c:	cmp    WORD PTR [rsp+0x118],ax
   14000e894:	jne    0x14000eab7
   14000e89a:	lea    rcx,[rsp+0x128]
   14000e8a2:	mov    dl,0x78
   14000e8a4:	call   QWORD PTR [rip+0x6926]        # 0x1400151d0
   14000e8aa:	movzx  ecx,WORD PTR [rdi+0x58]
   14000e8ae:	cmp    cx,WORD PTR [rax]
   14000e8b1:	je     0x14000e8d0
   14000e8b3:	lea    rcx,[rsp+0x128]
   14000e8bb:	mov    dl,0x58
   14000e8bd:	call   QWORD PTR [rip+0x690d]        # 0x1400151d0
   14000e8c3:	mov    cx,WORD PTR [rdi+0x58]
   14000e8c7:	cmp    cx,WORD PTR [rax]
   14000e8ca:	jne    0x14000eab7
   14000e8d0:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000e8d4:	mov    WORD PTR [rsp+0x118],cx
   14000e8dc:	mov    ecx,DWORD PTR [rsp+0x34]
   14000e8e0:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000e8e4:	jne    0x14000e8fa
   14000e8e6:	lea    r8d,[rcx+rcx*1]
   14000e8ea:	mov    edx,ecx
   14000e8ec:	lea    rcx,[rsp+0x30]
   14000e8f1:	call   0x14000dd90
   14000e8f6:	mov    ecx,DWORD PTR [rsp+0x34]
   14000e8fa:	movsxd rax,ecx
   14000e8fd:	inc    ecx
   14000e8ff:	mov    DWORD PTR [rsp+0x34],ecx
   14000e903:	mov    rcx,rax
   14000e906:	mov    rax,QWORD PTR [rsp+0x38]
   14000e90b:	mov    BYTE PTR [rcx+rax*1],bl
   14000e90e:	mov    rcx,rdi
   14000e911:	call   0x14000def0
   14000e916:	movzx  ecx,WORD PTR [rdi+0x58]
   14000e91a:	call   0x14000dc90
   14000e91f:	test   al,al
   14000e921:	je     0x14000e9d5
   14000e927:	nop    WORD PTR [rax+rax*1+0x0]
   14000e930:	movsxd rbx,DWORD PTR [rsp+0x34]
   14000e935:	mov    eax,DWORD PTR [rsp+0x30]
   14000e939:	movzx  r12d,BYTE PTR [rdi+0x58]
   14000e93e:	cmp    ebx,eax
   14000e940:	jne    0x14000e9aa
   14000e942:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e947:	lea    ebp,[rbx+rbx*1]
   14000e94a:	cmp    ebp,eax
   14000e94c:	je     0x14000e98c
   14000e94e:	cmp    ebp,0x20
   14000e951:	jle    0x14000e967
   14000e953:	movsxd rcx,ebp
   14000e956:	call   QWORD PTR [rip+0x67bc]        # 0x140015118
   14000e95c:	mov    DWORD PTR [rsp+0x30],ebp
   14000e960:	mov    QWORD PTR [rsp+0x38],rax
   14000e965:	jmp    0x14000e979
   14000e967:	lea    rax,[rsp+0x40]
   14000e96c:	mov    DWORD PTR [rsp+0x30],0x20
   14000e974:	mov    QWORD PTR [rsp+0x38],rax
   14000e979:	mov    r8,rbx
   14000e97c:	mov    rdx,rsi
   14000e97f:	mov    rcx,rax
   14000e982:	mov    DWORD PTR [rsp+0x34],r15d
   14000e987:	call   0x140014998
   14000e98c:	lea    rax,[rsp+0x40]
   14000e991:	mov    DWORD PTR [rsp+0x34],ebx
   14000e995:	cmp    rsi,rax
   14000e998:	je     0x14000e9aa
   14000e99a:	cmp    rsi,QWORD PTR [rsp+0x38]
   14000e99f:	je     0x14000e9aa
   14000e9a1:	mov    rcx,rsi
   14000e9a4:	call   QWORD PTR [rip+0x6756]        # 0x140015100
   14000e9aa:	mov    rax,QWORD PTR [rsp+0x38]
   14000e9af:	mov    rcx,rbx
   14000e9b2:	inc    ebx
   14000e9b4:	mov    DWORD PTR [rsp+0x34],ebx
   14000e9b8:	mov    BYTE PTR [rcx+rax*1],r12b
   14000e9bc:	mov    rcx,rdi
   14000e9bf:	call   0x14000def0
   14000e9c4:	movzx  ecx,WORD PTR [rdi+0x58]
   14000e9c8:	call   0x14000dc90
   14000e9cd:	test   al,al
   14000e9cf:	jne    0x14000e930
   14000e9d5:	mov    edx,DWORD PTR [rsp+0x34]
   14000e9d9:	cmp    edx,0x3
   14000e9dc:	jge    0x14000ea90
   14000e9e2:	lea    rcx,[rsp+0x128]
   14000e9ea:	mov    dl,0x20
   14000e9ec:	mov    DWORD PTR [rdi+0x5c],0x2
   14000e9f3:	call   QWORD PTR [rip+0x67d7]        # 0x1400151d0
   14000e9f9:	lea    r8,[rip+0x8a50]        # 0x140017450
   14000ea00:	lea    rdx,[rip+0x8871]        # 0x140017278
   14000ea07:	lea    rcx,[rsp+0xb8]
   14000ea0f:	xor    r9d,r9d
   14000ea12:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ea1a:	mov    rbx,rax
   14000ea1d:	call   QWORD PTR [rip+0x67a5]        # 0x1400151c8
   14000ea23:	movzx  r8d,WORD PTR [rsp+0x118]
   14000ea2c:	mov    rcx,rax
   14000ea2f:	movzx  eax,WORD PTR [rbx]
   14000ea32:	lea    rdx,[rsp+0xc0]
   14000ea3a:	xor    r9d,r9d
   14000ea3d:	mov    WORD PTR [rsp+0x20],ax
   14000ea42:	call   QWORD PTR [rip+0x6800]        # 0x140015248
   14000ea48:	lea    rcx,[rdi+0x18]
   14000ea4c:	mov    rdx,rax
   14000ea4f:	call   QWORD PTR [rip+0x6763]        # 0x1400151b8
   14000ea55:	lea    rcx,[rsp+0xc0]
   14000ea5d:	call   QWORD PTR [rip+0x6955]        # 0x1400153b8
   14000ea63:	lea    rcx,[rsp+0xb8]
   14000ea6b:	call   QWORD PTR [rip+0x6947]        # 0x1400153b8
   14000ea71:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ea76:	lea    r11,[rsp+0x40]
   14000ea7b:	cmp    rcx,r11
   14000ea7e:	je     0x14000ea86
   14000ea80:	call   QWORD PTR [rip+0x667a]        # 0x140015100
   14000ea86:	mov    eax,0x61
   14000ea8b:	jmp    0x14000f11e
   14000ea90:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ea95:	mov    r8d,0x10
   14000ea9b:	call   0x14000c0e0
   14000eaa0:	mov    rcx,QWORD PTR [rsp+0x38]
   14000eaa5:	lea    rax,[rsp+0x40]
   14000eaaa:	cmp    rcx,rax
   14000eaad:	movsd  QWORD PTR [rdi+0x68],xmm0
   14000eab2:	jmp    0x14000f111
   14000eab7:	movzx  ecx,WORD PTR [rdi+0x58]
   14000eabb:	cmp    ecx,0x39
   14000eabe:	ja     0x14000eac5
   14000eac0:	cmp    ecx,0x30
   14000eac3:	jae    0x14000eadd
   14000eac5:	cmp    ecx,0x7f
   14000eac8:	jbe    0x14000eb76
   14000eace:	call   QWORD PTR [rip+0x6764]        # 0x140015238
   14000ead4:	cmp    eax,0x3
   14000ead7:	jne    0x14000eb76
   14000eadd:	movsxd rbx,DWORD PTR [rsp+0x34]
   14000eae2:	mov    eax,DWORD PTR [rsp+0x30]
   14000eae6:	movzx  r12d,BYTE PTR [rdi+0x58]
   14000eaeb:	cmp    ebx,eax
   14000eaed:	jne    0x14000eb57
   14000eaef:	mov    rsi,QWORD PTR [rsp+0x38]
   14000eaf4:	lea    ebp,[rbx+rbx*1]
   14000eaf7:	cmp    ebp,eax
   14000eaf9:	je     0x14000eb39
   14000eafb:	cmp    ebp,0x20
   14000eafe:	jle    0x14000eb14
   14000eb00:	movsxd rcx,ebp
   14000eb03:	call   QWORD PTR [rip+0x660f]        # 0x140015118
   14000eb09:	mov    DWORD PTR [rsp+0x30],ebp
   14000eb0d:	mov    QWORD PTR [rsp+0x38],rax
   14000eb12:	jmp    0x14000eb26
   14000eb14:	lea    rax,[rsp+0x40]
   14000eb19:	mov    DWORD PTR [rsp+0x30],0x20
   14000eb21:	mov    QWORD PTR [rsp+0x38],rax
   14000eb26:	mov    r8,rbx
   14000eb29:	mov    rdx,rsi
   14000eb2c:	mov    rcx,rax
   14000eb2f:	mov    DWORD PTR [rsp+0x34],r15d
   14000eb34:	call   0x140014998
   14000eb39:	lea    rax,[rsp+0x40]
   14000eb3e:	mov    DWORD PTR [rsp+0x34],ebx
   14000eb42:	cmp    rsi,rax
   14000eb45:	je     0x14000eb57
   14000eb47:	cmp    rsi,QWORD PTR [rsp+0x38]
   14000eb4c:	je     0x14000eb57
   14000eb4e:	mov    rcx,rsi
   14000eb51:	call   QWORD PTR [rip+0x65a9]        # 0x140015100
   14000eb57:	mov    rax,QWORD PTR [rsp+0x38]
   14000eb5c:	mov    rcx,rbx
   14000eb5f:	inc    ebx
   14000eb61:	mov    DWORD PTR [rsp+0x34],ebx
   14000eb65:	mov    BYTE PTR [rcx+rax*1],r12b
   14000eb69:	mov    rcx,rdi
   14000eb6c:	call   0x14000def0
   14000eb71:	jmp    0x14000eab7
   14000eb76:	lea    rcx,[rsp+0x128]
   14000eb7e:	mov    dl,0x2e
   14000eb80:	call   QWORD PTR [rip+0x664a]        # 0x1400151d0
   14000eb86:	movzx  eax,WORD PTR [rax]
   14000eb89:	cmp    WORD PTR [rdi+0x58],ax
   14000eb8d:	jne    0x14000ee5d
   14000eb93:	mov    ecx,DWORD PTR [rsp+0x34]
   14000eb97:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000eb9b:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000eb9f:	jne    0x14000ebb5
   14000eba1:	lea    r8d,[rcx+rcx*1]
   14000eba5:	mov    edx,ecx
   14000eba7:	lea    rcx,[rsp+0x30]
   14000ebac:	call   0x14000dd90
   14000ebb1:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ebb5:	movsxd rax,ecx
   14000ebb8:	inc    ecx
   14000ebba:	mov    DWORD PTR [rsp+0x34],ecx
   14000ebbe:	mov    rcx,rax
   14000ebc1:	mov    rax,QWORD PTR [rsp+0x38]
   14000ebc6:	mov    BYTE PTR [rcx+rax*1],bl
   14000ebc9:	mov    rcx,rdi
   14000ebcc:	call   0x14000def0
   14000ebd1:	movzx  ecx,WORD PTR [rdi+0x58]
   14000ebd5:	cmp    ecx,0x39
   14000ebd8:	ja     0x14000ebdf
   14000ebda:	cmp    ecx,0x30
   14000ebdd:	jae    0x14000ebf7
   14000ebdf:	cmp    ecx,0x7f
   14000ebe2:	jbe    0x14000ec90
   14000ebe8:	call   QWORD PTR [rip+0x664a]        # 0x140015238
   14000ebee:	cmp    eax,0x3
   14000ebf1:	jne    0x14000ec90
   14000ebf7:	movsxd rbx,DWORD PTR [rsp+0x34]
   14000ebfc:	mov    eax,DWORD PTR [rsp+0x30]
   14000ec00:	movzx  r12d,BYTE PTR [rdi+0x58]
   14000ec05:	cmp    ebx,eax
   14000ec07:	jne    0x14000ec71
   14000ec09:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ec0e:	lea    ebp,[rbx+rbx*1]
   14000ec11:	cmp    ebp,eax
   14000ec13:	je     0x14000ec53
   14000ec15:	cmp    ebp,0x20
   14000ec18:	jle    0x14000ec2e
   14000ec1a:	movsxd rcx,ebp
   14000ec1d:	call   QWORD PTR [rip+0x64f5]        # 0x140015118
   14000ec23:	mov    DWORD PTR [rsp+0x30],ebp
   14000ec27:	mov    QWORD PTR [rsp+0x38],rax
   14000ec2c:	jmp    0x14000ec40
   14000ec2e:	lea    rax,[rsp+0x40]
   14000ec33:	mov    DWORD PTR [rsp+0x30],0x20
   14000ec3b:	mov    QWORD PTR [rsp+0x38],rax
   14000ec40:	mov    r8,rbx
   14000ec43:	mov    rdx,rsi
   14000ec46:	mov    rcx,rax
   14000ec49:	mov    DWORD PTR [rsp+0x34],r15d
   14000ec4e:	call   0x140014998
   14000ec53:	lea    rax,[rsp+0x40]
   14000ec58:	mov    DWORD PTR [rsp+0x34],ebx
   14000ec5c:	cmp    rsi,rax
   14000ec5f:	je     0x14000ec71
   14000ec61:	cmp    rsi,QWORD PTR [rsp+0x38]
   14000ec66:	je     0x14000ec71
   14000ec68:	mov    rcx,rsi
   14000ec6b:	call   QWORD PTR [rip+0x648f]        # 0x140015100
   14000ec71:	mov    rax,QWORD PTR [rsp+0x38]
   14000ec76:	mov    rcx,rbx
   14000ec79:	inc    ebx
   14000ec7b:	mov    DWORD PTR [rsp+0x34],ebx
   14000ec7f:	mov    BYTE PTR [rcx+rax*1],r12b
   14000ec83:	mov    rcx,rdi
   14000ec86:	call   0x14000def0
   14000ec8b:	jmp    0x14000ebd1
   14000ec90:	lea    rcx,[rsp+0x128]
   14000ec98:	mov    dl,0x65
   14000ec9a:	call   QWORD PTR [rip+0x6530]        # 0x1400151d0
   14000eca0:	movzx  eax,WORD PTR [rax]
   14000eca3:	cmp    WORD PTR [rdi+0x58],ax
   14000eca7:	je     0x14000ecc6
   14000eca9:	lea    rcx,[rsp+0x128]
   14000ecb1:	mov    dl,0x45
   14000ecb3:	call   QWORD PTR [rip+0x6517]        # 0x1400151d0
   14000ecb9:	movzx  eax,WORD PTR [rax]
   14000ecbc:	cmp    WORD PTR [rdi+0x58],ax
   14000ecc0:	jne    0x14000f022
   14000ecc6:	mov    rax,QWORD PTR [rdi+0x30]
   14000ecca:	movzx  ecx,WORD PTR [rax]
   14000eccd:	cmp    ecx,0x39
   14000ecd0:	ja     0x14000ecd7
   14000ecd2:	cmp    ecx,0x30
   14000ecd5:	jae    0x14000ed49
   14000ecd7:	cmp    ecx,0x7f
   14000ecda:	jbe    0x14000ece7
   14000ecdc:	call   QWORD PTR [rip+0x6556]        # 0x140015238
   14000ece2:	cmp    eax,0x3
   14000ece5:	je     0x14000ed49
   14000ece7:	lea    rcx,[rsp+0x128]
   14000ecef:	mov    dl,0x2b
   14000ecf1:	call   QWORD PTR [rip+0x64d9]        # 0x1400151d0
   14000ecf7:	mov    rcx,QWORD PTR [rdi+0x30]
   14000ecfb:	movzx  eax,WORD PTR [rax]
   14000ecfe:	cmp    WORD PTR [rcx],ax
   14000ed01:	je     0x14000ed23
   14000ed03:	lea    rcx,[rsp+0x128]
   14000ed0b:	mov    dl,0x2d
   14000ed0d:	call   QWORD PTR [rip+0x64bd]        # 0x1400151d0
   14000ed13:	mov    rcx,QWORD PTR [rdi+0x30]
   14000ed17:	movzx  eax,WORD PTR [rax]
   14000ed1a:	cmp    WORD PTR [rcx],ax
   14000ed1d:	jne    0x14000f022
   14000ed23:	movzx  ecx,WORD PTR [rcx+0x2]
   14000ed27:	cmp    ecx,0x39
   14000ed2a:	ja     0x14000ed31
   14000ed2c:	cmp    ecx,0x30
   14000ed2f:	jae    0x14000ed49
   14000ed31:	cmp    ecx,0x7f
   14000ed34:	jbe    0x14000f022
   14000ed3a:	call   QWORD PTR [rip+0x64f8]        # 0x140015238
   14000ed40:	cmp    eax,0x3
   14000ed43:	jne    0x14000f022
   14000ed49:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ed4d:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000ed51:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000ed55:	jne    0x14000ed6b
   14000ed57:	lea    r8d,[rcx+rcx*1]
   14000ed5b:	mov    edx,ecx
   14000ed5d:	lea    rcx,[rsp+0x30]
   14000ed62:	call   0x14000dd90
   14000ed67:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ed6b:	movsxd rax,ecx
   14000ed6e:	inc    ecx
   14000ed70:	mov    DWORD PTR [rsp+0x34],ecx
   14000ed74:	mov    rcx,rax
   14000ed77:	mov    rax,QWORD PTR [rsp+0x38]
   14000ed7c:	mov    BYTE PTR [rcx+rax*1],bl
   14000ed7f:	mov    rcx,rdi
   14000ed82:	call   0x14000def0
   14000ed87:	lea    rcx,[rsp+0x128]
   14000ed8f:	mov    dl,0x2b
   14000ed91:	call   QWORD PTR [rip+0x6439]        # 0x1400151d0
   14000ed97:	movzx  eax,WORD PTR [rax]
   14000ed9a:	cmp    WORD PTR [rdi+0x58],ax
   14000ed9e:	je     0x14000edb9
   14000eda0:	lea    rcx,[rsp+0x128]
   14000eda8:	mov    dl,0x2d
   14000edaa:	call   QWORD PTR [rip+0x6420]        # 0x1400151d0
   14000edb0:	movzx  eax,WORD PTR [rax]
   14000edb3:	cmp    WORD PTR [rdi+0x58],ax
   14000edb7:	jne    0x14000edf7
   14000edb9:	mov    ecx,DWORD PTR [rsp+0x34]
   14000edbd:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000edc1:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000edc5:	jne    0x14000eddb
   14000edc7:	lea    r8d,[rcx+rcx*1]
   14000edcb:	mov    edx,ecx
   14000edcd:	lea    rcx,[rsp+0x30]
   14000edd2:	call   0x14000dd90
   14000edd7:	mov    ecx,DWORD PTR [rsp+0x34]
   14000eddb:	movsxd rax,ecx
   14000edde:	inc    ecx
   14000ede0:	mov    DWORD PTR [rsp+0x34],ecx
   14000ede4:	mov    rcx,rax
   14000ede7:	mov    rax,QWORD PTR [rsp+0x38]
   14000edec:	mov    BYTE PTR [rcx+rax*1],bl
   14000edef:	mov    rcx,rdi
   14000edf2:	call   0x14000def0
   14000edf7:	movzx  ecx,WORD PTR [rdi+0x58]
   14000edfb:	cmp    ecx,0x39
   14000edfe:	ja     0x14000ee05
   14000ee00:	cmp    ecx,0x30
   14000ee03:	jae    0x14000ee1d
   14000ee05:	cmp    ecx,0x7f
   14000ee08:	jbe    0x14000f022
   14000ee0e:	call   QWORD PTR [rip+0x6424]        # 0x140015238
   14000ee14:	cmp    eax,0x3
   14000ee17:	jne    0x14000f022
   14000ee1d:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ee21:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000ee25:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000ee29:	jne    0x14000ee3f
   14000ee2b:	lea    r8d,[rcx+rcx*1]
   14000ee2f:	mov    edx,ecx
   14000ee31:	lea    rcx,[rsp+0x30]
   14000ee36:	call   0x14000dd90
   14000ee3b:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ee3f:	movsxd rax,ecx
   14000ee42:	inc    ecx
   14000ee44:	mov    DWORD PTR [rsp+0x34],ecx
   14000ee48:	mov    rcx,rax
   14000ee4b:	mov    rax,QWORD PTR [rsp+0x38]
   14000ee50:	mov    BYTE PTR [rcx+rax*1],bl
   14000ee53:	mov    rcx,rdi
   14000ee56:	call   0x14000def0
   14000ee5b:	jmp    0x14000edf7
   14000ee5d:	lea    rcx,[rsp+0x128]
   14000ee65:	mov    dl,0x65
   14000ee67:	call   QWORD PTR [rip+0x6363]        # 0x1400151d0
   14000ee6d:	movzx  eax,WORD PTR [rax]
   14000ee70:	cmp    WORD PTR [rdi+0x58],ax
   14000ee74:	je     0x14000ee93
   14000ee76:	lea    rcx,[rsp+0x128]
   14000ee7e:	mov    dl,0x45
   14000ee80:	call   QWORD PTR [rip+0x634a]        # 0x1400151d0
   14000ee86:	movzx  eax,WORD PTR [rax]
   14000ee89:	cmp    WORD PTR [rdi+0x58],ax
   14000ee8d:	jne    0x14000f022
   14000ee93:	mov    rax,QWORD PTR [rdi+0x30]
   14000ee97:	movzx  ecx,WORD PTR [rax]
   14000ee9a:	cmp    ecx,0x39
   14000ee9d:	ja     0x14000eea4
   14000ee9f:	cmp    ecx,0x30
   14000eea2:	jae    0x14000ef16
   14000eea4:	cmp    ecx,0x7f
   14000eea7:	jbe    0x14000eeb4
   14000eea9:	call   QWORD PTR [rip+0x6389]        # 0x140015238
   14000eeaf:	cmp    eax,0x3
   14000eeb2:	je     0x14000ef16
   14000eeb4:	lea    rcx,[rsp+0x128]
   14000eebc:	mov    dl,0x2b
   14000eebe:	call   QWORD PTR [rip+0x630c]        # 0x1400151d0
   14000eec4:	mov    rcx,QWORD PTR [rdi+0x30]
   14000eec8:	movzx  eax,WORD PTR [rax]
   14000eecb:	cmp    WORD PTR [rcx],ax
   14000eece:	je     0x14000eef0
   14000eed0:	lea    rcx,[rsp+0x128]
   14000eed8:	mov    dl,0x2d
   14000eeda:	call   QWORD PTR [rip+0x62f0]        # 0x1400151d0
   14000eee0:	mov    rcx,QWORD PTR [rdi+0x30]
   14000eee4:	movzx  eax,WORD PTR [rax]
   14000eee7:	cmp    WORD PTR [rcx],ax
   14000eeea:	jne    0x14000f022
   14000eef0:	movzx  ecx,WORD PTR [rcx+0x2]
   14000eef4:	cmp    ecx,0x39
   14000eef7:	ja     0x14000eefe
   14000eef9:	cmp    ecx,0x30
   14000eefc:	jae    0x14000ef16
   14000eefe:	cmp    ecx,0x7f
   14000ef01:	jbe    0x14000f022
   14000ef07:	call   QWORD PTR [rip+0x632b]        # 0x140015238
   14000ef0d:	cmp    eax,0x3
   14000ef10:	jne    0x14000f022
   14000ef16:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ef1a:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000ef1e:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000ef22:	jne    0x14000ef38
   14000ef24:	lea    r8d,[rcx+rcx*1]
   14000ef28:	mov    edx,ecx
   14000ef2a:	lea    rcx,[rsp+0x30]
   14000ef2f:	call   0x14000dd90
   14000ef34:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ef38:	movsxd rax,ecx
   14000ef3b:	inc    ecx
   14000ef3d:	mov    DWORD PTR [rsp+0x34],ecx
   14000ef41:	mov    rcx,rax
   14000ef44:	mov    rax,QWORD PTR [rsp+0x38]
   14000ef49:	mov    BYTE PTR [rcx+rax*1],bl
   14000ef4c:	mov    rcx,rdi
   14000ef4f:	call   0x14000def0
   14000ef54:	lea    rcx,[rsp+0x128]
   14000ef5c:	mov    dl,0x2b
   14000ef5e:	call   QWORD PTR [rip+0x626c]        # 0x1400151d0
   14000ef64:	movzx  eax,WORD PTR [rax]
   14000ef67:	cmp    WORD PTR [rdi+0x58],ax
   14000ef6b:	je     0x14000ef86
   14000ef6d:	lea    rcx,[rsp+0x128]
   14000ef75:	mov    dl,0x2d
   14000ef77:	call   QWORD PTR [rip+0x6253]        # 0x1400151d0
   14000ef7d:	movzx  eax,WORD PTR [rax]
   14000ef80:	cmp    WORD PTR [rdi+0x58],ax
   14000ef84:	jne    0x14000efc4
   14000ef86:	mov    ecx,DWORD PTR [rsp+0x34]
   14000ef8a:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000ef8e:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000ef92:	jne    0x14000efa8
   14000ef94:	lea    r8d,[rcx+rcx*1]
   14000ef98:	mov    edx,ecx
   14000ef9a:	lea    rcx,[rsp+0x30]
   14000ef9f:	call   0x14000dd90
   14000efa4:	mov    ecx,DWORD PTR [rsp+0x34]
   14000efa8:	movsxd rax,ecx
   14000efab:	inc    ecx
   14000efad:	mov    DWORD PTR [rsp+0x34],ecx
   14000efb1:	mov    rcx,rax
   14000efb4:	mov    rax,QWORD PTR [rsp+0x38]
   14000efb9:	mov    BYTE PTR [rcx+rax*1],bl
   14000efbc:	mov    rcx,rdi
   14000efbf:	call   0x14000def0
   14000efc4:	movzx  ecx,WORD PTR [rdi+0x58]
   14000efc8:	cmp    ecx,0x39
   14000efcb:	ja     0x14000efd2
   14000efcd:	cmp    ecx,0x30
   14000efd0:	jae    0x14000efe2
   14000efd2:	cmp    ecx,0x7f
   14000efd5:	jbe    0x14000f022
   14000efd7:	call   QWORD PTR [rip+0x625b]        # 0x140015238
   14000efdd:	cmp    eax,0x3
   14000efe0:	jne    0x14000f022
   14000efe2:	mov    ecx,DWORD PTR [rsp+0x34]
   14000efe6:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000efea:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000efee:	jne    0x14000f004
   14000eff0:	lea    r8d,[rcx+rcx*1]
   14000eff4:	mov    edx,ecx
   14000eff6:	lea    rcx,[rsp+0x30]
   14000effb:	call   0x14000dd90
   14000f000:	mov    ecx,DWORD PTR [rsp+0x34]
   14000f004:	movsxd rax,ecx
   14000f007:	inc    ecx
   14000f009:	mov    DWORD PTR [rsp+0x34],ecx
   14000f00d:	mov    rcx,rax
   14000f010:	mov    rax,QWORD PTR [rsp+0x38]
   14000f015:	mov    BYTE PTR [rcx+rax*1],bl
   14000f018:	mov    rcx,rdi
   14000f01b:	call   0x14000def0
   14000f020:	jmp    0x14000efc4
   14000f022:	mov    ecx,DWORD PTR [rsp+0x34]
   14000f026:	cmp    ecx,0x1
   14000f029:	jne    0x14000f041
   14000f02b:	mov    rcx,QWORD PTR [rsp+0x38]
   14000f030:	lea    rax,[rsp+0x40]
   14000f035:	mov    QWORD PTR [rdi+0x68],r15
   14000f039:	cmp    rcx,rax
   14000f03c:	jmp    0x14000f111
   14000f041:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000f045:	jne    0x14000f05b
   14000f047:	lea    r8d,[rcx+rcx*1]
   14000f04b:	mov    edx,ecx
   14000f04d:	lea    rcx,[rsp+0x30]
   14000f052:	call   0x14000dd90
   14000f057:	mov    ecx,DWORD PTR [rsp+0x34]
   14000f05b:	movsxd rax,ecx
   14000f05e:	inc    ecx
   14000f060:	lea    r8,[rsp+0x120]
   14000f068:	mov    DWORD PTR [rsp+0x34],ecx
   14000f06c:	mov    rcx,rax
   14000f06f:	mov    rax,QWORD PTR [rsp+0x38]
   14000f074:	mov    BYTE PTR [rcx+rax*1],r15b
   14000f078:	mov    rbx,QWORD PTR [rsp+0x38]
   14000f07d:	lea    rdx,[rsp+0xb0]
   14000f085:	mov    rcx,rbx
   14000f088:	mov    QWORD PTR [rsp+0xb0],r15
   14000f090:	mov    BYTE PTR [rsp+0x120],r15b
   14000f098:	call   QWORD PTR [rip+0x61c2]        # 0x140015260
   14000f09e:	mov    eax,DWORD PTR [rsp+0x34]
   14000f0a2:	dec    eax
   14000f0a4:	movsxd rcx,eax
   14000f0a7:	mov    rax,QWORD PTR [rsp+0xb0]
   14000f0af:	movsd  QWORD PTR [rdi+0x68],xmm0
   14000f0b4:	sub    rax,rbx
   14000f0b7:	cmp    rax,rcx
   14000f0ba:	je     0x14000f104
   14000f0bc:	lea    r8,[rip+0x8365]        # 0x140017428
   14000f0c3:	lea    rdx,[rip+0x81ae]        # 0x140017278
   14000f0ca:	lea    rcx,[rsp+0x128]
   14000f0d2:	xor    r9d,r9d
   14000f0d5:	mov    DWORD PTR [rdi+0x5c],0x7
   14000f0dc:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000f0e4:	call   QWORD PTR [rip+0x60de]        # 0x1400151c8
   14000f0ea:	lea    rcx,[rdi+0x18]
   14000f0ee:	mov    rdx,rax
   14000f0f1:	call   QWORD PTR [rip+0x60c1]        # 0x1400151b8
   14000f0f7:	lea    rcx,[rsp+0x128]
   14000f0ff:	jmp    0x14000ea6b
   14000f104:	mov    rcx,QWORD PTR [rsp+0x38]
   14000f109:	lea    rax,[rsp+0x40]
   14000f10e:	cmp    rcx,rax
   14000f111:	je     0x14000f119
   14000f113:	call   QWORD PTR [rip+0x5fe7]        # 0x140015100
   14000f119:	mov    eax,0x2f
   14000f11e:	add    rsp,0xd0
   14000f125:	pop    r15
   14000f127:	pop    r13
   14000f129:	pop    r12
   14000f12b:	pop    rdi
   14000f12c:	pop    rsi
   14000f12d:	pop    rbp
   14000f12e:	pop    rbx
   14000f12f:	ret    
   14000f130:	rex push rbp
   14000f132:	sub    rsp,0x180
   14000f139:	mov    eax,DWORD PTR [rcx+0x78]
   14000f13c:	mov    rbp,rcx
   14000f13f:	cmp    eax,0xffffffff
   14000f142:	je     0x14000f154
   14000f144:	mov    DWORD PTR [rcx+0x78],0xffffffff
   14000f14b:	add    rsp,0x180
   14000f152:	pop    rbp
   14000f153:	ret    
   14000f154:	mov    QWORD PTR [rsp+0x160],r12
   14000f15c:	mov    QWORD PTR [rsp+0x158],r13
   14000f164:	mov    QWORD PTR [rsp+0x178],rbx
   14000f16c:	mov    QWORD PTR [rsp+0x170],rsi
   14000f174:	mov    BYTE PTR [rcx+0x8f],0x0
   14000f17b:	xor    r12d,r12d
   14000f17e:	mov    QWORD PTR [rsp+0x168],rdi
   14000f186:	lea    r13,[rip+0xffffffffffff0e73]        # 0x140000000
   14000f18d:	nop    DWORD PTR [rax]
   14000f190:	mov    rax,QWORD PTR [rbp+0x40]
   14000f194:	movzx  ecx,WORD PTR [rbp+0x58]
   14000f198:	mov    BYTE PTR [rbp+0x8c],r12b
   14000f19f:	mov    QWORD PTR [rbp+0x48],rax
   14000f1a3:	call   QWORD PTR [rip+0x60c7]        # 0x140015270
   14000f1a9:	test   al,al
   14000f1ab:	je     0x14000f20f
   14000f1ad:	nop    DWORD PTR [rax]
   14000f1b0:	mov    rcx,rbp
   14000f1b3:	call   0x14000db90
   14000f1b8:	test   eax,eax
   14000f1ba:	je     0x14000f1f9
   14000f1bc:	mov    ecx,eax
   14000f1be:	mov    rax,QWORD PTR [rbp+0x30]
   14000f1c2:	lea    rcx,[rax+rcx*2-0x2]
   14000f1c7:	mov    QWORD PTR [rbp+0x48],rcx
   14000f1cb:	cmp    BYTE PTR [rbp+0x8e],r12b
   14000f1d2:	jne    0x14000f3e9
   14000f1d8:	cmp    DWORD PTR [rbp+0x70],0x2
   14000f1dc:	mov    BYTE PTR [rbp+0x8f],0x1
   14000f1e3:	jne    0x14000f1f2
   14000f1e5:	mov    BYTE PTR [rbp+0x8d],0x1
   14000f1ec:	mov    DWORD PTR [rbp+0x70],r12d
   14000f1f0:	jmp    0x14000f1f9
   14000f1f2:	mov    BYTE PTR [rbp+0x8d],r12b
   14000f1f9:	mov    rcx,rbp
   14000f1fc:	call   0x14000def0
   14000f201:	movzx  ecx,WORD PTR [rbp+0x58]
   14000f205:	call   QWORD PTR [rip+0x6065]        # 0x140015270
   14000f20b:	test   al,al
   14000f20d:	jne    0x14000f1b0
   14000f20f:	mov    rcx,QWORD PTR [rbp+0x30]
   14000f213:	lea    rax,[rcx-0x2]
   14000f217:	mov    QWORD PTR [rbp+0x50],rax
   14000f21b:	mov    eax,DWORD PTR [rbp+0x60]
   14000f21e:	mov    DWORD PTR [rbp+0x88],eax
   14000f224:	cmp    rcx,QWORD PTR [rbp+0x38]
   14000f228:	ja     0x140010657
   14000f22e:	movzx  ebx,WORD PTR [rbp+0x58]
   14000f232:	mov    rcx,rbp
   14000f235:	call   0x14000def0
   14000f23a:	lea    r11d,[rbx-0x21]
   14000f23e:	cmp    r11d,0x5d
   14000f242:	ja     0x14001031d
   14000f248:	movsxd rax,r11d
   14000f24b:	movzx  eax,BYTE PTR [r13+rax*1+0x106f8]
   14000f254:	mov    ecx,DWORD PTR [r13+rax*4+0x1068c]
   14000f25c:	add    rcx,r13
   14000f25f:	jmp    rcx
   14000f261:	lea    rcx,[rsp+0xa2]
   14000f269:	mov    dl,0x2a
   14000f26b:	call   QWORD PTR [rip+0x5f5f]        # 0x1400151d0
   14000f271:	movzx  eax,WORD PTR [rax]
   14000f274:	cmp    WORD PTR [rbp+0x58],ax
   14000f278:	jne    0x14000f34c
   14000f27e:	mov    rcx,rbp
   14000f281:	call   0x14000def0
   14000f286:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f290:	mov    rax,QWORD PTR [rbp+0x38]
   14000f294:	cmp    QWORD PTR [rbp+0x30],rax
   14000f298:	ja     0x14000f408
   14000f29e:	lea    rcx,[rsp+0xc0]
   14000f2a6:	mov    dl,0x2a
   14000f2a8:	call   QWORD PTR [rip+0x5f22]        # 0x1400151d0
   14000f2ae:	movzx  eax,WORD PTR [rax]
   14000f2b1:	cmp    WORD PTR [rbp+0x58],ax
   14000f2b5:	jne    0x14000f33f
   14000f2bb:	mov    rcx,rbp
   14000f2be:	call   0x14000def0
   14000f2c3:	lea    rcx,[rsp+0xaa]
   14000f2cb:	mov    dl,0x2f
   14000f2cd:	call   QWORD PTR [rip+0x5efd]        # 0x1400151d0
   14000f2d3:	movzx  eax,WORD PTR [rax]
   14000f2d6:	cmp    WORD PTR [rbp+0x58],ax
   14000f2da:	jne    0x14000f290
   14000f2dc:	mov    rcx,rbp
   14000f2df:	call   0x14000def0
   14000f2e4:	cmp    QWORD PTR [rbp+0x0],r12
   14000f2e8:	je     0x14000f190
   14000f2ee:	mov    rdi,QWORD PTR [rbp+0x50]
   14000f2f2:	mov    esi,DWORD PTR [rbp+0x88]
   14000f2f8:	mov    rbx,QWORD PTR [rbp+0x50]
   14000f2fc:	sub    rdi,QWORD PTR [rbp+0x48]
   14000f300:	lea    rcx,[rbp+0x8]
   14000f304:	sar    rdi,1
   14000f307:	call   QWORD PTR [rip+0x5e83]        # 0x140015190
   14000f30d:	mov    r8,QWORD PTR [rbp+0x30]
   14000f311:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f315:	sub    r8,rbx
   14000f318:	mov    rdx,rbx
   14000f31b:	sub    rdx,rax
   14000f31e:	sar    r8,1
   14000f321:	lea    eax,[rdi+0x3]
   14000f324:	sar    rdx,1
   14000f327:	add    r8d,0xfffffffb
   14000f32b:	mov    r9d,esi
   14000f32e:	add    edx,0x2
   14000f331:	mov    DWORD PTR [rsp+0x20],eax
   14000f335:	call   0x14000c770
   14000f33a:	jmp    0x14000f190
   14000f33f:	mov    rcx,rbp
   14000f342:	call   0x14000def0
   14000f347:	jmp    0x14000f290
   14000f34c:	lea    rcx,[rsp+0x76]
   14000f351:	mov    dl,0x2f
   14000f353:	call   QWORD PTR [rip+0x5e77]        # 0x1400151d0
   14000f359:	movzx  eax,WORD PTR [rax]
   14000f35c:	cmp    WORD PTR [rbp+0x58],ax
   14000f360:	jne    0x14000f408
   14000f366:	mov    rax,QWORD PTR [rbp+0x38]
   14000f36a:	cmp    QWORD PTR [rbp+0x30],rax
   14000f36e:	ja     0x14000f38e
   14000f370:	mov    rcx,rbp
   14000f373:	call   0x14000db60
   14000f378:	test   al,al
   14000f37a:	jne    0x14000f38e
   14000f37c:	mov    rcx,rbp
   14000f37f:	call   0x14000def0
   14000f384:	mov    r11,QWORD PTR [rbp+0x38]
   14000f388:	cmp    QWORD PTR [rbp+0x30],r11
   14000f38c:	jbe    0x14000f370
   14000f38e:	cmp    QWORD PTR [rbp+0x0],r12
   14000f392:	je     0x14000f190
   14000f398:	mov    rdi,QWORD PTR [rbp+0x50]
   14000f39c:	mov    esi,DWORD PTR [rbp+0x88]
   14000f3a2:	mov    rbx,QWORD PTR [rbp+0x50]
   14000f3a6:	sub    rdi,QWORD PTR [rbp+0x48]
   14000f3aa:	lea    rcx,[rbp+0x8]
   14000f3ae:	sar    rdi,1
   14000f3b1:	call   QWORD PTR [rip+0x5dd9]        # 0x140015190
   14000f3b7:	mov    r8,QWORD PTR [rbp+0x30]
   14000f3bb:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f3bf:	sub    r8,rbx
   14000f3c2:	mov    rdx,rbx
   14000f3c5:	sub    rdx,rax
   14000f3c8:	sar    r8,1
   14000f3cb:	lea    eax,[rdi+0x3]
   14000f3ce:	sar    rdx,1
   14000f3d1:	add    r8d,0xfffffffd
   14000f3d5:	mov    r9d,esi
   14000f3d8:	add    edx,0x2
   14000f3db:	mov    DWORD PTR [rsp+0x20],eax
   14000f3df:	call   0x14000c770
   14000f3e4:	jmp    0x14000f190
   14000f3e9:	mov    eax,DWORD PTR [rbp+0x60]
   14000f3ec:	mov    DWORD PTR [rbp+0x88],eax
   14000f3f2:	mov    rax,QWORD PTR [rbp+0x30]
   14000f3f6:	sub    rax,0x2
   14000f3fa:	mov    QWORD PTR [rbp+0x50],rax
   14000f3fe:	mov    eax,0x3d
   14000f403:	jmp    0x140010659
   14000f408:	lea    rcx,[rsp+0xc2]
   14000f410:	mov    dl,0x3d
   14000f412:	call   QWORD PTR [rip+0x5db8]        # 0x1400151d0
   14000f418:	movzx  eax,WORD PTR [rax]
   14000f41b:	cmp    WORD PTR [rbp+0x58],ax
   14000f41f:	jne    0x14000f433
   14000f421:	mov    rcx,rbp
   14000f424:	call   0x14000def0
   14000f429:	mov    eax,0xd
   14000f42e:	jmp    0x140010659
   14000f433:	mov    eax,0xc
   14000f438:	jmp    0x140010659
   14000f43d:	mov    eax,0x48
   14000f442:	jmp    0x140010659
   14000f447:	mov    eax,0x37
   14000f44c:	jmp    0x140010659
   14000f451:	lea    rcx,[rsp+0x7a]
   14000f456:	mov    dl,0x7c
   14000f458:	call   QWORD PTR [rip+0x5d72]        # 0x1400151d0
   14000f45e:	movzx  eax,WORD PTR [rax]
   14000f461:	cmp    WORD PTR [rbp+0x58],ax
   14000f465:	jne    0x14000f479
   14000f467:	mov    rcx,rbp
   14000f46a:	call   0x14000def0
   14000f46f:	mov    eax,0x32
   14000f474:	jmp    0x140010659
   14000f479:	lea    rcx,[rsp+0xc6]
   14000f481:	mov    dl,0x3d
   14000f483:	call   QWORD PTR [rip+0x5d47]        # 0x1400151d0
   14000f489:	movzx  eax,WORD PTR [rax]
   14000f48c:	cmp    WORD PTR [rbp+0x58],ax
   14000f490:	jne    0x14000f4a4
   14000f492:	mov    rcx,rbp
   14000f495:	call   0x14000def0
   14000f49a:	mov    eax,0x31
   14000f49f:	jmp    0x140010659
   14000f4a4:	mov    eax,0x30
   14000f4a9:	jmp    0x140010659
   14000f4ae:	mov    eax,0x21
   14000f4b3:	jmp    0x140010659
   14000f4b8:	lea    rcx,[rsp+0x7e]
   14000f4bd:	mov    dl,0x3d
   14000f4bf:	call   QWORD PTR [rip+0x5d0b]        # 0x1400151d0
   14000f4c5:	movzx  eax,WORD PTR [rax]
   14000f4c8:	cmp    WORD PTR [rbp+0x58],ax
   14000f4cc:	jne    0x14000f4e0
   14000f4ce:	mov    rcx,rbp
   14000f4d1:	call   0x14000def0
   14000f4d6:	mov    eax,0x50
   14000f4db:	jmp    0x140010659
   14000f4e0:	mov    eax,0x4f
   14000f4e5:	jmp    0x140010659
   14000f4ea:	mov    eax,0x38
   14000f4ef:	jmp    0x140010659
   14000f4f4:	mov    eax,0x22
   14000f4f9:	jmp    0x140010659
   14000f4fe:	mov    eax,0x36
   14000f503:	jmp    0x140010659
   14000f508:	lea    rcx,[rsp+0xb0]
   14000f510:	mov    dl,0x3e
   14000f512:	call   QWORD PTR [rip+0x5cb8]        # 0x1400151d0
   14000f518:	movzx  eax,WORD PTR [rax]
   14000f51b:	cmp    WORD PTR [rbp+0x58],ax
   14000f51f:	jne    0x14000f5b8
   14000f525:	mov    rcx,rbp
   14000f528:	call   0x14000def0
   14000f52d:	lea    rcx,[rsp+0x82]
   14000f535:	mov    dl,0x3e
   14000f537:	call   QWORD PTR [rip+0x5c93]        # 0x1400151d0
   14000f53d:	movzx  eax,WORD PTR [rax]
   14000f540:	cmp    WORD PTR [rbp+0x58],ax
   14000f544:	jne    0x14000f583
   14000f546:	mov    rcx,rbp
   14000f549:	call   0x14000def0
   14000f54e:	lea    rcx,[rsp+0xbc]
   14000f556:	mov    dl,0x3d
   14000f558:	call   QWORD PTR [rip+0x5c72]        # 0x1400151d0
   14000f55e:	movzx  eax,WORD PTR [rax]
   14000f561:	cmp    WORD PTR [rbp+0x58],ax
   14000f565:	jne    0x14000f579
   14000f567:	mov    rcx,rbp
   14000f56a:	call   0x14000def0
   14000f56f:	mov    eax,0x1c
   14000f574:	jmp    0x140010659
   14000f579:	mov    eax,0x1b
   14000f57e:	jmp    0x140010659
   14000f583:	lea    rcx,[rsp+0x86]
   14000f58b:	mov    dl,0x3d
   14000f58d:	call   QWORD PTR [rip+0x5c3d]        # 0x1400151d0
   14000f593:	movzx  eax,WORD PTR [rax]
   14000f596:	cmp    WORD PTR [rbp+0x58],ax
   14000f59a:	jne    0x14000f5ae
   14000f59c:	mov    rcx,rbp
   14000f59f:	call   0x14000def0
   14000f5a4:	mov    eax,0x1a
   14000f5a9:	jmp    0x140010659
   14000f5ae:	mov    eax,0x19
   14000f5b3:	jmp    0x140010659
   14000f5b8:	lea    rcx,[rsp+0xb4]
   14000f5c0:	mov    dl,0x3d
   14000f5c2:	call   QWORD PTR [rip+0x5c08]        # 0x1400151d0
   14000f5c8:	movzx  eax,WORD PTR [rax]
   14000f5cb:	cmp    WORD PTR [rbp+0x58],ax
   14000f5cf:	jne    0x14000f5e3
   14000f5d1:	mov    rcx,rbp
   14000f5d4:	call   0x14000def0
   14000f5d9:	mov    eax,0x17
   14000f5de:	jmp    0x140010659
   14000f5e3:	mov    eax,0x18
   14000f5e8:	jmp    0x140010659
   14000f5ed:	lea    rcx,[rsp+0x8a]
   14000f5f5:	mov    dl,0x3d
   14000f5f7:	call   QWORD PTR [rip+0x5bd3]        # 0x1400151d0
   14000f5fd:	movzx  eax,WORD PTR [rax]
   14000f600:	cmp    WORD PTR [rbp+0x58],ax
   14000f604:	jne    0x14000f643
   14000f606:	mov    rcx,rbp
   14000f609:	call   0x14000def0
   14000f60e:	lea    rcx,[rsp+0xc4]
   14000f616:	mov    dl,0x3d
   14000f618:	call   QWORD PTR [rip+0x5bb2]        # 0x1400151d0
   14000f61e:	movzx  eax,WORD PTR [rax]
   14000f621:	cmp    WORD PTR [rbp+0x58],ax
   14000f625:	jne    0x14000f639
   14000f627:	mov    rcx,rbp
   14000f62a:	call   0x14000def0
   14000f62f:	mov    eax,0x13
   14000f634:	jmp    0x140010659
   14000f639:	mov    eax,0x12
   14000f63e:	jmp    0x140010659
   14000f643:	mov    eax,0x11
   14000f648:	jmp    0x140010659
   14000f64d:	lea    rcx,[rsp+0x8e]
   14000f655:	mov    dl,0x3d
   14000f657:	call   QWORD PTR [rip+0x5b73]        # 0x1400151d0
   14000f65d:	movzx  eax,WORD PTR [rax]
   14000f660:	cmp    WORD PTR [rbp+0x58],ax
   14000f664:	jne    0x14000f678
   14000f666:	mov    rcx,rbp
   14000f669:	call   0x14000def0
   14000f66e:	mov    eax,0x23
   14000f673:	jmp    0x140010659
   14000f678:	lea    rcx,[rsp+0xb8]
   14000f680:	mov    dl,0x3c
   14000f682:	call   QWORD PTR [rip+0x5b48]        # 0x1400151d0
   14000f688:	movzx  eax,WORD PTR [rax]
   14000f68b:	cmp    WORD PTR [rbp+0x58],ax
   14000f68f:	jne    0x14000f6ce
   14000f691:	mov    rcx,rbp
   14000f694:	call   0x14000def0
   14000f699:	lea    rcx,[rsp+0x92]
   14000f6a1:	mov    dl,0x3d
   14000f6a3:	call   QWORD PTR [rip+0x5b27]        # 0x1400151d0
   14000f6a9:	movzx  eax,WORD PTR [rax]
   14000f6ac:	cmp    WORD PTR [rbp+0x58],ax
   14000f6b0:	jne    0x14000f6c4
   14000f6b2:	mov    rcx,rbp
   14000f6b5:	call   0x14000def0
   14000f6ba:	mov    eax,0x27
   14000f6bf:	jmp    0x140010659
   14000f6c4:	mov    eax,0x26
   14000f6c9:	jmp    0x140010659
   14000f6ce:	mov    eax,0x25
   14000f6d3:	jmp    0x140010659
   14000f6d8:	mov    eax,0x7
   14000f6dd:	jmp    0x140010659
   14000f6e2:	movzx  ecx,WORD PTR [rbp+0x58]
   14000f6e6:	cmp    ecx,0x39
   14000f6e9:	ja     0x14000f6f0
   14000f6eb:	cmp    ecx,0x30
   14000f6ee:	jae    0x14000f708
   14000f6f0:	cmp    ecx,0x7f
   14000f6f3:	jbe    0x14000fa54
   14000f6f9:	call   QWORD PTR [rip+0x5b39]        # 0x140015238
   14000f6ff:	cmp    eax,0x3
   14000f702:	jne    0x14000fa54
   14000f708:	lea    rax,[rsp+0x50]
   14000f70d:	mov    edx,0x1
   14000f712:	mov    DWORD PTR [rsp+0x40],0x20
   14000f71a:	mov    QWORD PTR [rsp+0x48],rax
   14000f71f:	mov    DWORD PTR [rsp+0x44],edx
   14000f723:	mov    BYTE PTR [rsp+0x50],bl
   14000f727:	movzx  ecx,WORD PTR [rbp+0x58]
   14000f72b:	cmp    ecx,0x39
   14000f72e:	ja     0x14000f735
   14000f730:	cmp    ecx,0x30
   14000f733:	jae    0x14000f749
   14000f735:	cmp    ecx,0x7f
   14000f738:	jbe    0x14000f784
   14000f73a:	call   QWORD PTR [rip+0x5af8]        # 0x140015238
   14000f740:	cmp    eax,0x3
   14000f743:	jne    0x14000f784
   14000f745:	mov    edx,DWORD PTR [rsp+0x44]
   14000f749:	movzx  ebx,BYTE PTR [rbp+0x58]
   14000f74d:	cmp    edx,DWORD PTR [rsp+0x40]
   14000f751:	jne    0x14000f765
   14000f753:	lea    r8d,[rdx+rdx*1]
   14000f757:	lea    rcx,[rsp+0x40]
   14000f75c:	call   0x14000dd90
   14000f761:	mov    edx,DWORD PTR [rsp+0x44]
   14000f765:	mov    rax,QWORD PTR [rsp+0x48]
   14000f76a:	movsxd rcx,edx
   14000f76d:	inc    edx
   14000f76f:	mov    DWORD PTR [rsp+0x44],edx
   14000f773:	mov    BYTE PTR [rcx+rax*1],bl
   14000f776:	mov    rcx,rbp
   14000f779:	call   0x14000def0
   14000f77e:	mov    edx,DWORD PTR [rsp+0x44]
   14000f782:	jmp    0x14000f727
   14000f784:	lea    rcx,[rsp+0xac]
   14000f78c:	mov    dl,0x65
   14000f78e:	call   QWORD PTR [rip+0x5a3c]        # 0x1400151d0
   14000f794:	movzx  eax,WORD PTR [rax]
   14000f797:	cmp    WORD PTR [rbp+0x58],ax
   14000f79b:	je     0x14000f7ba
   14000f79d:	lea    rcx,[rsp+0x96]
   14000f7a5:	mov    dl,0x45
   14000f7a7:	call   QWORD PTR [rip+0x5a23]        # 0x1400151d0
   14000f7ad:	movzx  eax,WORD PTR [rax]
   14000f7b0:	cmp    WORD PTR [rbp+0x58],ax
   14000f7b4:	jne    0x14000f94e
   14000f7ba:	mov    rax,QWORD PTR [rbp+0x30]
   14000f7be:	movzx  ecx,WORD PTR [rax]
   14000f7c1:	cmp    ecx,0x39
   14000f7c4:	ja     0x14000f7cb
   14000f7c6:	cmp    ecx,0x30
   14000f7c9:	jae    0x14000f83d
   14000f7cb:	cmp    ecx,0x7f
   14000f7ce:	jbe    0x14000f7db
   14000f7d0:	call   QWORD PTR [rip+0x5a62]        # 0x140015238
   14000f7d6:	cmp    eax,0x3
   14000f7d9:	je     0x14000f83d
   14000f7db:	lea    rcx,[rsp+0xae]
   14000f7e3:	mov    dl,0x2b
   14000f7e5:	call   QWORD PTR [rip+0x59e5]        # 0x1400151d0
   14000f7eb:	mov    rcx,QWORD PTR [rbp+0x30]
   14000f7ef:	movzx  eax,WORD PTR [rax]
   14000f7f2:	cmp    WORD PTR [rcx],ax
   14000f7f5:	je     0x14000f817
   14000f7f7:	lea    rcx,[rsp+0x9a]
   14000f7ff:	mov    dl,0x2d
   14000f801:	call   QWORD PTR [rip+0x59c9]        # 0x1400151d0
   14000f807:	mov    rcx,QWORD PTR [rbp+0x30]
   14000f80b:	movzx  eax,WORD PTR [rax]
   14000f80e:	cmp    WORD PTR [rcx],ax
   14000f811:	jne    0x14000f94e
   14000f817:	movzx  ecx,WORD PTR [rcx+0x2]
   14000f81b:	cmp    ecx,0x39
   14000f81e:	ja     0x14000f825
   14000f820:	cmp    ecx,0x30
   14000f823:	jae    0x14000f83d
   14000f825:	cmp    ecx,0x7f
   14000f828:	jbe    0x14000f94e
   14000f82e:	call   QWORD PTR [rip+0x5a04]        # 0x140015238
   14000f834:	cmp    eax,0x3
   14000f837:	jne    0x14000f94e
   14000f83d:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f841:	movzx  ebx,BYTE PTR [rbp+0x58]
   14000f845:	cmp    ecx,DWORD PTR [rsp+0x40]
   14000f849:	jne    0x14000f85f
   14000f84b:	lea    r8d,[rcx+rcx*1]
   14000f84f:	mov    edx,ecx
   14000f851:	lea    rcx,[rsp+0x40]
   14000f856:	call   0x14000dd90
   14000f85b:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f85f:	movsxd rax,ecx
   14000f862:	inc    ecx
   14000f864:	mov    DWORD PTR [rsp+0x44],ecx
   14000f868:	mov    rcx,rax
   14000f86b:	mov    rax,QWORD PTR [rsp+0x48]
   14000f870:	mov    BYTE PTR [rcx+rax*1],bl
   14000f873:	mov    rcx,rbp
   14000f876:	call   0x14000def0
   14000f87b:	lea    rcx,[rsp+0xb2]
   14000f883:	mov    dl,0x2b
   14000f885:	call   QWORD PTR [rip+0x5945]        # 0x1400151d0
   14000f88b:	movzx  eax,WORD PTR [rax]
   14000f88e:	cmp    WORD PTR [rbp+0x58],ax
   14000f892:	je     0x14000f8ad
   14000f894:	lea    rcx,[rsp+0x9e]
   14000f89c:	mov    dl,0x2d
   14000f89e:	call   QWORD PTR [rip+0x592c]        # 0x1400151d0
   14000f8a4:	movzx  eax,WORD PTR [rax]
   14000f8a7:	cmp    WORD PTR [rbp+0x58],ax
   14000f8ab:	jne    0x14000f8f0
   14000f8ad:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f8b1:	movzx  ebx,BYTE PTR [rbp+0x58]
   14000f8b5:	cmp    ecx,DWORD PTR [rsp+0x40]
   14000f8b9:	jne    0x14000f8cf
   14000f8bb:	lea    r8d,[rcx+rcx*1]
   14000f8bf:	mov    edx,ecx
   14000f8c1:	lea    rcx,[rsp+0x40]
   14000f8c6:	call   0x14000dd90
   14000f8cb:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f8cf:	movsxd rax,ecx
   14000f8d2:	inc    ecx
   14000f8d4:	mov    DWORD PTR [rsp+0x44],ecx
   14000f8d8:	mov    rcx,rax
   14000f8db:	mov    rax,QWORD PTR [rsp+0x48]
   14000f8e0:	mov    BYTE PTR [rcx+rax*1],bl
   14000f8e3:	mov    rcx,rbp
   14000f8e6:	call   0x14000def0
   14000f8eb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f8f0:	movzx  ecx,WORD PTR [rbp+0x58]
   14000f8f4:	cmp    ecx,0x39
   14000f8f7:	ja     0x14000f8fe
   14000f8f9:	cmp    ecx,0x30
   14000f8fc:	jae    0x14000f90e
   14000f8fe:	cmp    ecx,0x7f
   14000f901:	jbe    0x14000f94e
   14000f903:	call   QWORD PTR [rip+0x592f]        # 0x140015238
   14000f909:	cmp    eax,0x3
   14000f90c:	jne    0x14000f94e
   14000f90e:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f912:	movzx  ebx,BYTE PTR [rbp+0x58]
   14000f916:	cmp    ecx,DWORD PTR [rsp+0x40]
   14000f91a:	jne    0x14000f930
   14000f91c:	lea    r8d,[rcx+rcx*1]
   14000f920:	mov    edx,ecx
   14000f922:	lea    rcx,[rsp+0x40]
   14000f927:	call   0x14000dd90
   14000f92c:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f930:	movsxd rax,ecx
   14000f933:	inc    ecx
   14000f935:	mov    DWORD PTR [rsp+0x44],ecx
   14000f939:	mov    rcx,rax
   14000f93c:	mov    rax,QWORD PTR [rsp+0x48]
   14000f941:	mov    BYTE PTR [rcx+rax*1],bl
   14000f944:	mov    rcx,rbp
   14000f947:	call   0x14000def0
   14000f94c:	jmp    0x14000f8f0
   14000f94e:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f952:	cmp    ecx,DWORD PTR [rsp+0x40]
   14000f956:	jne    0x14000f96c
   14000f958:	lea    r8d,[rcx+rcx*1]
   14000f95c:	mov    edx,ecx
   14000f95e:	lea    rcx,[rsp+0x40]
   14000f963:	call   0x14000dd90
   14000f968:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f96c:	movsxd rax,ecx
   14000f96f:	inc    ecx
   14000f971:	lea    r8,[rsp+0x190]
   14000f979:	mov    DWORD PTR [rsp+0x44],ecx
   14000f97d:	mov    rcx,rax
   14000f980:	mov    rax,QWORD PTR [rsp+0x48]
   14000f985:	mov    BYTE PTR [rcx+rax*1],r12b
   14000f989:	mov    rbx,QWORD PTR [rsp+0x48]
   14000f98e:	lea    rdx,[rsp+0xc8]
   14000f996:	mov    rcx,rbx
   14000f999:	mov    QWORD PTR [rsp+0xc8],r12
   14000f9a1:	mov    BYTE PTR [rsp+0x190],r12b
   14000f9a9:	call   QWORD PTR [rip+0x58b1]        # 0x140015260
   14000f9af:	mov    eax,DWORD PTR [rsp+0x44]
   14000f9b3:	dec    eax
   14000f9b5:	movsxd rcx,eax
   14000f9b8:	mov    rax,QWORD PTR [rsp+0xc8]
   14000f9c0:	movsd  QWORD PTR [rbp+0x68],xmm0
   14000f9c5:	sub    rax,rbx
   14000f9c8:	cmp    rax,rcx
   14000f9cb:	je     0x14000fa35
   14000f9cd:	lea    r8,[rip+0x7a54]        # 0x140017428
   14000f9d4:	lea    rdx,[rip+0x789d]        # 0x140017278
   14000f9db:	lea    rcx,[rsp+0x120]
   14000f9e3:	xor    r9d,r9d
   14000f9e6:	mov    DWORD PTR [rbp+0x5c],0x7
   14000f9ed:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000f9f5:	call   QWORD PTR [rip+0x57cd]        # 0x1400151c8
   14000f9fb:	lea    rcx,[rbp+0x18]
   14000f9ff:	mov    rdx,rax
   14000fa02:	call   QWORD PTR [rip+0x57b0]        # 0x1400151b8
   14000fa08:	lea    rcx,[rsp+0x120]
   14000fa10:	call   QWORD PTR [rip+0x59a2]        # 0x1400153b8
   14000fa16:	mov    rcx,QWORD PTR [rsp+0x48]
   14000fa1b:	lea    r11,[rsp+0x50]
   14000fa20:	cmp    rcx,r11
   14000fa23:	je     0x14000fa2b
   14000fa25:	call   QWORD PTR [rip+0x56d5]        # 0x140015100
   14000fa2b:	mov    eax,0x61
   14000fa30:	jmp    0x140010659
   14000fa35:	mov    rcx,QWORD PTR [rsp+0x48]
   14000fa3a:	lea    rax,[rsp+0x50]
   14000fa3f:	cmp    rcx,rax
   14000fa42:	je     0x14000fa4a
   14000fa44:	call   QWORD PTR [rip+0x56b6]        # 0x140015100
   14000fa4a:	mov    eax,0x2f
   14000fa4f:	jmp    0x140010659
   14000fa54:	mov    eax,0xf
   14000fa59:	jmp    0x140010659
   14000fa5e:	lea    rcx,[rsp+0xb6]
   14000fa66:	mov    dl,0x3d
   14000fa68:	call   QWORD PTR [rip+0x5762]        # 0x1400151d0
   14000fa6e:	movzx  eax,WORD PTR [rax]
   14000fa71:	cmp    WORD PTR [rbp+0x58],ax
   14000fa75:	jne    0x14000fa89
   14000fa77:	mov    rcx,rbp
   14000fa7a:	call   0x14000def0
   14000fa7f:	mov    eax,0x29
   14000fa84:	jmp    0x140010659
   14000fa89:	lea    rcx,[rsp+0x70]
   14000fa8e:	mov    dl,0x2d
   14000fa90:	call   QWORD PTR [rip+0x573a]        # 0x1400151d0
   14000fa96:	movzx  eax,WORD PTR [rax]
   14000fa99:	cmp    WORD PTR [rbp+0x58],ax
   14000fa9d:	jne    0x14000fadd
   14000fa9f:	mov    rcx,rbp
   14000faa2:	call   0x14000def0
   14000faa7:	cmp    BYTE PTR [rbp+0x8f],r12b
   14000faae:	je     0x14000fad3
   14000fab0:	cmp    BYTE PTR [rbp+0x91],r12b
   14000fab7:	jne    0x14000fad3
   14000fab9:	cmp    BYTE PTR [rbp+0x8d],r12b
   14000fac0:	jne    0x14000fad3
   14000fac2:	mov    DWORD PTR [rbp+0x78],0x2a
   14000fac9:	mov    eax,0x3d
   14000face:	jmp    0x140010659
   14000fad3:	mov    eax,0x2a
   14000fad8:	jmp    0x140010659
   14000fadd:	mov    eax,0x28
   14000fae2:	jmp    0x140010659
   14000fae7:	mov    eax,0x8
   14000faec:	jmp    0x140010659
   14000faf1:	lea    rcx,[rsp+0xba]
   14000faf9:	mov    dl,0x3d
   14000fafb:	call   QWORD PTR [rip+0x56cf]        # 0x1400151d0
   14000fb01:	movzx  eax,WORD PTR [rax]
   14000fb04:	cmp    WORD PTR [rbp+0x58],ax
   14000fb08:	jne    0x14000fb1c
   14000fb0a:	mov    rcx,rbp
   14000fb0d:	call   0x14000def0
   14000fb12:	mov    eax,0x34
   14000fb17:	jmp    0x140010659
   14000fb1c:	lea    rcx,[rsp+0xa6]
   14000fb24:	mov    dl,0x2b
   14000fb26:	call   QWORD PTR [rip+0x56a4]        # 0x1400151d0
   14000fb2c:	movzx  eax,WORD PTR [rax]
   14000fb2f:	cmp    WORD PTR [rbp+0x58],ax
   14000fb33:	jne    0x14000fb73
   14000fb35:	mov    rcx,rbp
   14000fb38:	call   0x14000def0
   14000fb3d:	cmp    BYTE PTR [rbp+0x8f],r12b
   14000fb44:	je     0x14000fb69
   14000fb46:	cmp    BYTE PTR [rbp+0x91],r12b
   14000fb4d:	jne    0x14000fb69
   14000fb4f:	cmp    BYTE PTR [rbp+0x8d],r12b
   14000fb56:	jne    0x14000fb69
   14000fb58:	mov    DWORD PTR [rbp+0x78],0x35
   14000fb5f:	mov    eax,0x3d
   14000fb64:	jmp    0x140010659
   14000fb69:	mov    eax,0x35
   14000fb6e:	jmp    0x140010659
   14000fb73:	mov    eax,0x33
   14000fb78:	jmp    0x140010659
   14000fb7d:	lea    rcx,[rsp+0xbe]
   14000fb85:	mov    dl,0x3d
   14000fb87:	call   QWORD PTR [rip+0x5643]        # 0x1400151d0
   14000fb8d:	movzx  eax,WORD PTR [rax]
   14000fb90:	cmp    WORD PTR [rbp+0x58],ax
   14000fb94:	jne    0x14000fba8
   14000fb96:	mov    rcx,rbp
   14000fb99:	call   0x14000def0
   14000fb9e:	mov    eax,0x40
   14000fba3:	jmp    0x140010659
   14000fba8:	mov    eax,0x3f
   14000fbad:	jmp    0x140010659
   14000fbb2:	mov    eax,0x3c
   14000fbb7:	jmp    0x140010659
   14000fbbc:	mov    eax,0x24
   14000fbc1:	jmp    0x140010659
   14000fbc6:	lea    rcx,[rsp+0x72]
   14000fbcb:	mov    dl,0x3d
   14000fbcd:	call   QWORD PTR [rip+0x55fd]        # 0x1400151d0
   14000fbd3:	movzx  eax,WORD PTR [rax]
   14000fbd6:	cmp    WORD PTR [rbp+0x58],ax
   14000fbda:	jne    0x14000fbee
   14000fbdc:	mov    rcx,rbp
   14000fbdf:	call   0x14000def0
   14000fbe4:	mov    eax,0x3
   14000fbe9:	jmp    0x140010659
   14000fbee:	lea    rcx,[rsp+0x74]
   14000fbf3:	mov    dl,0x26
   14000fbf5:	call   QWORD PTR [rip+0x55d5]        # 0x1400151d0
   14000fbfb:	movzx  eax,WORD PTR [rax]
   14000fbfe:	cmp    WORD PTR [rbp+0x58],ax
   14000fc02:	jne    0x14000fc16
   14000fc04:	mov    rcx,rbp
   14000fc07:	call   0x14000def0
   14000fc0c:	mov    eax,0x2
   14000fc11:	jmp    0x140010659
   14000fc16:	mov    eax,0x1
   14000fc1b:	jmp    0x140010659
   14000fc20:	lea    rcx,[rsp+0x78]
   14000fc25:	mov    dl,0x3d
   14000fc27:	call   QWORD PTR [rip+0x55a3]        # 0x1400151d0
   14000fc2d:	movzx  eax,WORD PTR [rax]
   14000fc30:	cmp    WORD PTR [rbp+0x58],ax
   14000fc34:	jne    0x14000fc48
   14000fc36:	mov    rcx,rbp
   14000fc39:	call   0x14000def0
   14000fc3e:	mov    eax,0x3a
   14000fc43:	jmp    0x140010659
   14000fc48:	mov    eax,0x39
   14000fc4d:	jmp    0x140010659
   14000fc52:	lea    rcx,[rsp+0x7c]
   14000fc57:	mov    dl,0x3d
   14000fc59:	call   QWORD PTR [rip+0x5571]        # 0x1400151d0
   14000fc5f:	movzx  eax,WORD PTR [rax]
   14000fc62:	cmp    WORD PTR [rbp+0x58],ax
   14000fc66:	jne    0x14000fca5
   14000fc68:	mov    rcx,rbp
   14000fc6b:	call   0x14000def0
   14000fc70:	lea    rcx,[rsp+0x80]
   14000fc78:	mov    dl,0x3d
   14000fc7a:	call   QWORD PTR [rip+0x5550]        # 0x1400151d0
   14000fc80:	movzx  eax,WORD PTR [rax]
   14000fc83:	cmp    WORD PTR [rbp+0x58],ax
   14000fc87:	jne    0x14000fc9b
   14000fc89:	mov    rcx,rbp
   14000fc8c:	call   0x14000def0
   14000fc91:	mov    eax,0x2e
   14000fc96:	jmp    0x140010659
   14000fc9b:	mov    eax,0x2d
   14000fca0:	jmp    0x140010659
   14000fca5:	mov    eax,0x2c
   14000fcaa:	jmp    0x140010659
   14000fcaf:	cmp    QWORD PTR [rbp+0x0],0x0
   14000fcb4:	mov    rdi,QWORD PTR [rbp+0x30]
   14000fcb8:	je     0x14000fd04
   14000fcba:	cmp    rdi,QWORD PTR [rbp+0x38]
   14000fcbe:	ja     0x14000fd04
   14000fcc0:	mov    rcx,rbp
   14000fcc3:	call   0x14000db60
   14000fcc8:	test   al,al
   14000fcca:	jne    0x14000fe0f
   14000fcd0:	lea    rcx,[rsp+0x84]
   14000fcd8:	mov    dl,0x5c
   14000fcda:	call   QWORD PTR [rip+0x54f0]        # 0x1400151d0
   14000fce0:	mov    cx,WORD PTR [rbp+0x58]
   14000fce4:	cmp    cx,WORD PTR [rax]
   14000fce7:	je     0x14000fd04
   14000fce9:	cmp    cx,bx
   14000fcec:	je     0x14000fda6
   14000fcf2:	mov    rcx,rbp
   14000fcf5:	call   0x14000def0
   14000fcfa:	mov    r11,QWORD PTR [rbp+0x38]
   14000fcfe:	cmp    QWORD PTR [rbp+0x30],r11
   14000fd02:	jbe    0x14000fcc0
   14000fd04:	lea    rcx,[rbp+0x10]
   14000fd08:	xor    edx,edx
   14000fd0a:	mov    BYTE PTR [rbp+0x8c],0x1
   14000fd11:	call   QWORD PTR [rip+0x5541]        # 0x140015258
   14000fd17:	mov    rax,QWORD PTR [rbp+0x30]
   14000fd1b:	sub    rdi,0x2
   14000fd1f:	sub    rax,0x2
   14000fd23:	cmp    rdi,rax
   14000fd26:	je     0x14000fd4e
   14000fd28:	nop    DWORD PTR [rax+rax*1+0x0]
   14000fd30:	movzx  edx,WORD PTR [rdi]
   14000fd33:	lea    rcx,[rbp+0x10]
   14000fd37:	call   QWORD PTR [rip+0x5513]        # 0x140015250
   14000fd3d:	mov    rax,QWORD PTR [rbp+0x30]
   14000fd41:	add    rdi,0x2
   14000fd45:	sub    rax,0x2
   14000fd49:	cmp    rdi,rax
   14000fd4c:	jne    0x14000fd30
   14000fd4e:	mov    rax,QWORD PTR [rbp+0x38]
   14000fd52:	cmp    QWORD PTR [rbp+0x30],rax
   14000fd56:	ja     0x14001021d
   14000fd5c:	nop    DWORD PTR [rax+0x0]
   14000fd60:	mov    rcx,rbp
   14000fd63:	call   0x14000db90
   14000fd68:	mov    edi,eax
   14000fd6a:	test   eax,eax
   14000fd6c:	je     0x14000fe70
   14000fd72:	movzx  edx,WORD PTR [rbp+0x58]
   14000fd76:	lea    rcx,[rbp+0x10]
   14000fd7a:	mov    r12b,0x1
   14000fd7d:	call   QWORD PTR [rip+0x54cd]        # 0x140015250
   14000fd83:	cmp    edi,0x2
   14000fd86:	jne    0x14000fd99
   14000fd88:	mov    rax,QWORD PTR [rbp+0x30]
   14000fd8c:	lea    rcx,[rbp+0x10]
   14000fd90:	movzx  edx,WORD PTR [rax]
   14000fd93:	call   QWORD PTR [rip+0x54b7]        # 0x140015250
   14000fd99:	mov    rcx,rbp
   14000fd9c:	call   0x14000def0
   14000fda1:	jmp    0x14001020f
   14000fda6:	mov    rbx,QWORD PTR [rbp+0x30]
   14000fdaa:	lea    rcx,[rbp+0x8]
   14000fdae:	sub    rbx,rdi
   14000fdb1:	sar    rbx,1
   14000fdb4:	call   QWORD PTR [rip+0x53d6]        # 0x140015190
   14000fdba:	mov    rcx,QWORD PTR [rbp+0x0]
   14000fdbe:	sub    rdi,rax
   14000fdc1:	lea    rdx,[rsp+0xe8]
   14000fdc9:	mov    r9d,ebx
   14000fdcc:	sar    rdi,1
   14000fdcf:	add    rcx,0x48
   14000fdd3:	lea    r8d,[rdi-0x1]
   14000fdd7:	call   QWORD PTR [rip+0x5433]        # 0x140015210
   14000fddd:	mov    rax,QWORD PTR [rsp+0xe8]
   14000fde5:	mov    rcx,rbp
   14000fde8:	mov    QWORD PTR [rbp+0x20],rax
   14000fdec:	mov    eax,DWORD PTR [rsp+0xf0]
   14000fdf3:	mov    DWORD PTR [rbp+0x28],eax
   14000fdf6:	mov    eax,DWORD PTR [rsp+0xf4]
   14000fdfd:	mov    DWORD PTR [rbp+0x2c],eax
   14000fe00:	call   0x14000def0
   14000fe05:	mov    eax,0x41
   14000fe0a:	jmp    0x140010659
   14000fe0f:	cmp    BYTE PTR [rbp+0x92],0x0
   14000fe16:	jne    0x14000fd04
   14000fe1c:	mov    edx,0x1
   14000fe21:	lea    r8,[rip+0x7718]        # 0x140017540
   14000fe28:	lea    rcx,[rsp+0x110]
   14000fe30:	mov    DWORD PTR [rbp+0x5c],edx
   14000fe33:	lea    rdx,[rip+0x743e]        # 0x140017278
   14000fe3a:	xor    r9d,r9d
   14000fe3d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000fe45:	call   QWORD PTR [rip+0x537d]        # 0x1400151c8
   14000fe4b:	lea    rcx,[rbp+0x18]
   14000fe4f:	mov    rdx,rax
   14000fe52:	call   QWORD PTR [rip+0x5360]        # 0x1400151b8
   14000fe58:	lea    rcx,[rsp+0x110]
   14000fe60:	call   QWORD PTR [rip+0x5552]        # 0x1400153b8
   14000fe66:	mov    eax,0x61
   14000fe6b:	jmp    0x140010659
   14000fe70:	cmp    WORD PTR [rbp+0x58],bx
   14000fe74:	je     0x1400102c3
   14000fe7a:	lea    rcx,[rsp+0x88]
   14000fe82:	mov    dl,0x5c
   14000fe84:	call   QWORD PTR [rip+0x5346]        # 0x1400151d0
   14000fe8a:	movzx  eax,WORD PTR [rax]
   14000fe8d:	cmp    WORD PTR [rbp+0x58],ax
   14000fe91:	jne    0x1400101f9
   14000fe97:	mov    rcx,rbp
   14000fe9a:	call   0x14000def0
   14000fe9f:	movzx  edi,WORD PTR [rbp+0x58]
   14000fea3:	cmp    edi,0x2029
   14000fea9:	mov    eax,edi
   14000feab:	jg     0x1400101e2
   14000feb1:	cmp    eax,0x2028
   14000feb6:	jge    0x1400101d8
   14000febc:	sub    eax,0xa
   14000febf:	cmp    eax,0x6e
   14000fec2:	ja     0x1400101e2
   14000fec8:	cdqe   
   14000feca:	movzx  eax,BYTE PTR [r13+rax*1+0x10794]
   14000fed3:	mov    ecx,DWORD PTR [r13+rax*4+0x10758]
   14000fedb:	add    rcx,r13
   14000fede:	jmp    rcx
   14000fee0:	lea    r8,[rsp+0x190]
   14000fee8:	lea    rdx,[rsp+0x8c]
   14000fef0:	mov    rcx,rbp
   14000fef3:	mov    BYTE PTR [rsp+0x190],0x0
   14000fefb:	call   0x14000dfb0
   14000ff00:	cmp    BYTE PTR [rsp+0x190],0x0
   14000ff08:	mov    di,WORD PTR [rax]
   14000ff0b:	jne    0x1400101ea
   14000ff11:	lea    r8,[rip+0x7608]        # 0x140017520
   14000ff18:	lea    rdx,[rip+0x7359]        # 0x140017278
   14000ff1f:	lea    rcx,[rsp+0xe0]
   14000ff27:	xor    r9d,r9d
   14000ff2a:	mov    DWORD PTR [rbp+0x5c],0x5
   14000ff31:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ff39:	call   QWORD PTR [rip+0x5289]        # 0x1400151c8
   14000ff3f:	lea    rcx,[rbp+0x18]
   14000ff43:	mov    rdx,rax
   14000ff46:	call   QWORD PTR [rip+0x526c]        # 0x1400151b8
   14000ff4c:	lea    rcx,[rsp+0xe0]
   14000ff54:	call   QWORD PTR [rip+0x545e]        # 0x1400153b8
   14000ff5a:	mov    eax,0x61
   14000ff5f:	jmp    0x140010659
   14000ff64:	lea    r8,[rsp+0x190]
   14000ff6c:	lea    rdx,[rsp+0x90]
   14000ff74:	mov    rcx,rbp
   14000ff77:	mov    BYTE PTR [rsp+0x190],0x0
   14000ff7f:	call   0x14000e0d0
   14000ff84:	cmp    BYTE PTR [rsp+0x190],0x0
   14000ff8c:	mov    di,WORD PTR [rax]
   14000ff8f:	jne    0x1400101ea
   14000ff95:	lea    r8,[rip+0x755c]        # 0x1400174f8
   14000ff9c:	lea    rdx,[rip+0x72d5]        # 0x140017278
   14000ffa3:	lea    rcx,[rsp+0x118]
   14000ffab:	xor    r9d,r9d
   14000ffae:	mov    DWORD PTR [rbp+0x5c],0x9
   14000ffb5:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ffbd:	call   QWORD PTR [rip+0x5205]        # 0x1400151c8
   14000ffc3:	lea    rcx,[rbp+0x18]
   14000ffc7:	mov    rdx,rax
   14000ffca:	call   QWORD PTR [rip+0x51e8]        # 0x1400151b8
   14000ffd0:	lea    rcx,[rsp+0x118]
   14000ffd8:	call   QWORD PTR [rip+0x53da]        # 0x1400153b8
   14000ffde:	mov    eax,0x61
   14000ffe3:	jmp    0x140010659
   14000ffe8:	lea    rcx,[rsp+0x198]
   14000fff0:	mov    dl,0x5c
   14000fff2:	call   QWORD PTR [rip+0x51d8]        # 0x1400151d0
   14000fff8:	mov    di,WORD PTR [rsp+0x198]
   140010000:	mov    rcx,rbp
   140010003:	call   0x14000def0
   140010008:	lea    rcx,[rbp+0x10]
   14001000c:	movzx  edx,di
   14001000f:	call   QWORD PTR [rip+0x523b]        # 0x140015250
   140010015:	jmp    0x14001020f
   14001001a:	lea    rcx,[rsp+0x1a0]
   140010022:	mov    dl,0x27
   140010024:	call   QWORD PTR [rip+0x51a6]        # 0x1400151d0
   14001002a:	mov    di,WORD PTR [rsp+0x1a0]
   140010032:	mov    rcx,rbp
   140010035:	call   0x14000def0
   14001003a:	lea    rcx,[rbp+0x10]
   14001003e:	mov    dx,di
   140010041:	call   QWORD PTR [rip+0x5209]        # 0x140015250
   140010047:	jmp    0x14001020f
   14001004c:	lea    rcx,[rsp+0x1a8]
   140010054:	mov    dl,0x22
   140010056:	call   QWORD PTR [rip+0x5174]        # 0x1400151d0
   14001005c:	mov    di,WORD PTR [rsp+0x1a8]
   140010064:	mov    rcx,rbp
   140010067:	call   0x14000def0
   14001006c:	lea    rcx,[rbp+0x10]
   140010070:	mov    dx,di
   140010073:	call   QWORD PTR [rip+0x51d7]        # 0x140015250
   140010079:	jmp    0x14001020f
   14001007e:	lea    rcx,[rsp+0x3a]
   140010083:	mov    dl,0x8
   140010085:	call   QWORD PTR [rip+0x5145]        # 0x1400151d0
   14001008b:	mov    di,WORD PTR [rsp+0x3a]
   140010090:	mov    rcx,rbp
   140010093:	call   0x14000def0
   140010098:	lea    rcx,[rbp+0x10]
   14001009c:	mov    dx,di
   14001009f:	call   QWORD PTR [rip+0x51ab]        # 0x140015250
   1400100a5:	jmp    0x14001020f
   1400100aa:	lea    rcx,[rsp+0x34]
   1400100af:	mov    dl,0xc
   1400100b1:	call   QWORD PTR [rip+0x5119]        # 0x1400151d0
   1400100b7:	mov    di,WORD PTR [rsp+0x34]
   1400100bc:	mov    rcx,rbp
   1400100bf:	call   0x14000def0
   1400100c4:	lea    rcx,[rbp+0x10]
   1400100c8:	mov    dx,di
   1400100cb:	call   QWORD PTR [rip+0x517f]        # 0x140015250
   1400100d1:	jmp    0x14001020f
   1400100d6:	lea    rcx,[rsp+0x38]
   1400100db:	mov    dl,0xa
   1400100dd:	call   QWORD PTR [rip+0x50ed]        # 0x1400151d0
   1400100e3:	mov    di,WORD PTR [rsp+0x38]
   1400100e8:	mov    rcx,rbp
   1400100eb:	call   0x14000def0
   1400100f0:	lea    rcx,[rbp+0x10]
   1400100f4:	mov    dx,di
   1400100f7:	call   QWORD PTR [rip+0x5153]        # 0x140015250
   1400100fd:	jmp    0x14001020f
   140010102:	lea    rcx,[rsp+0x30]
   140010107:	mov    dl,0xd
   140010109:	call   QWORD PTR [rip+0x50c1]        # 0x1400151d0
   14001010f:	mov    di,WORD PTR [rsp+0x30]
   140010114:	mov    rcx,rbp
   140010117:	call   0x14000def0
   14001011c:	lea    rcx,[rbp+0x10]
   140010120:	mov    dx,di
   140010123:	call   QWORD PTR [rip+0x5127]        # 0x140015250
   140010129:	jmp    0x14001020f
   14001012e:	lea    rcx,[rsp+0x32]
   140010133:	mov    dl,0x9
   140010135:	call   QWORD PTR [rip+0x5095]        # 0x1400151d0
   14001013b:	mov    di,WORD PTR [rsp+0x32]
   140010140:	mov    rcx,rbp
   140010143:	call   0x14000def0
   140010148:	lea    rcx,[rbp+0x10]
   14001014c:	mov    dx,di
   14001014f:	call   QWORD PTR [rip+0x50fb]        # 0x140015250
   140010155:	jmp    0x14001020f
   14001015a:	lea    rcx,[rsp+0x36]
   14001015f:	mov    dl,0xb
   140010161:	call   QWORD PTR [rip+0x5069]        # 0x1400151d0
   140010167:	mov    di,WORD PTR [rsp+0x36]
   14001016c:	mov    rcx,rbp
   14001016f:	call   0x14000def0
   140010174:	lea    rcx,[rbp+0x10]
   140010178:	mov    dx,di
   14001017b:	call   QWORD PTR [rip+0x50cf]        # 0x140015250
   140010181:	jmp    0x14001020f
   140010186:	mov    rax,QWORD PTR [rbp+0x30]
   14001018a:	movzx  ecx,WORD PTR [rax]
   14001018d:	cmp    ecx,0x39
   140010190:	ja     0x14001019b
   140010192:	cmp    ecx,0x30
   140010195:	jae    0x140010270
   14001019b:	cmp    ecx,0x7f
   14001019e:	jbe    0x1400101af
   1400101a0:	call   QWORD PTR [rip+0x5092]        # 0x140015238
   1400101a6:	cmp    eax,0x3
   1400101a9:	je     0x140010270
   1400101af:	mov    rcx,rbp
   1400101b2:	call   0x14000def0
   1400101b7:	lea    rcx,[rsp+0x3c]
   1400101bc:	xor    edx,edx
   1400101be:	call   QWORD PTR [rip+0x500c]        # 0x1400151d0
   1400101c4:	mov    di,WORD PTR [rsp+0x3c]
   1400101c9:	lea    rcx,[rbp+0x10]
   1400101cd:	mov    dx,di
   1400101d0:	call   QWORD PTR [rip+0x507a]        # 0x140015250
   1400101d6:	jmp    0x14001020f
   1400101d8:	mov    rcx,rbp
   1400101db:	call   0x14000def0
   1400101e0:	jmp    0x14001020f
   1400101e2:	mov    rcx,rbp
   1400101e5:	call   0x14000def0
   1400101ea:	lea    rcx,[rbp+0x10]
   1400101ee:	mov    dx,di
   1400101f1:	call   QWORD PTR [rip+0x5059]        # 0x140015250
   1400101f7:	jmp    0x14001020f
   1400101f9:	movzx  edx,WORD PTR [rbp+0x58]
   1400101fd:	lea    rcx,[rbp+0x10]
   140010201:	call   QWORD PTR [rip+0x5049]        # 0x140015250
   140010207:	mov    rcx,rbp
   14001020a:	call   0x14000def0
   14001020f:	mov    rax,QWORD PTR [rbp+0x38]
   140010213:	cmp    QWORD PTR [rbp+0x30],rax
   140010217:	jbe    0x14000fd60
   14001021d:	lea    r8,[rip+0x72b4]        # 0x1400174d8
   140010224:	lea    rdx,[rip+0x704d]        # 0x140017278
   14001022b:	lea    rcx,[rsp+0x128]
   140010233:	xor    r9d,r9d
   140010236:	mov    DWORD PTR [rbp+0x5c],0x3
   14001023d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140010245:	call   QWORD PTR [rip+0x4f7d]        # 0x1400151c8
   14001024b:	lea    rcx,[rbp+0x18]
   14001024f:	mov    rdx,rax
   140010252:	call   QWORD PTR [rip+0x4f60]        # 0x1400151b8
   140010258:	lea    rcx,[rsp+0x128]
   140010260:	call   QWORD PTR [rip+0x5152]        # 0x1400153b8
   140010266:	mov    eax,0x61
   14001026b:	jmp    0x140010659
   140010270:	lea    r8,[rip+0x7239]        # 0x1400174b0
   140010277:	lea    rdx,[rip+0x6ffa]        # 0x140017278
   14001027e:	lea    rcx,[rsp+0xf8]
   140010286:	xor    r9d,r9d
   140010289:	mov    DWORD PTR [rbp+0x5c],0x4
   140010290:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140010298:	call   QWORD PTR [rip+0x4f2a]        # 0x1400151c8
   14001029e:	lea    rcx,[rbp+0x18]
   1400102a2:	mov    rdx,rax
   1400102a5:	call   QWORD PTR [rip+0x4f0d]        # 0x1400151b8
   1400102ab:	lea    rcx,[rsp+0xf8]
   1400102b3:	call   QWORD PTR [rip+0x50ff]        # 0x1400153b8
   1400102b9:	mov    eax,0x61
   1400102be:	jmp    0x140010659
   1400102c3:	mov    rcx,rbp
   1400102c6:	call   0x14000def0
   1400102cb:	mov    rcx,QWORD PTR [rbp+0x0]
   1400102cf:	test   rcx,rcx
   1400102d2:	je     0x1400102f8
   1400102d4:	lea    r8,[rbp+0x10]
   1400102d8:	lea    rdx,[rsp+0x130]
   1400102e0:	call   0x14000c460
   1400102e5:	mov    rcx,QWORD PTR [rax]
   1400102e8:	mov    QWORD PTR [rbp+0x20],rcx
   1400102ec:	mov    ecx,DWORD PTR [rax+0x8]
   1400102ef:	mov    DWORD PTR [rbp+0x28],ecx
   1400102f2:	mov    eax,DWORD PTR [rax+0xc]
   1400102f5:	mov    DWORD PTR [rbp+0x2c],eax
   1400102f8:	mov    eax,0x41
   1400102fd:	mov    ecx,0x57
   140010302:	test   r12b,r12b
   140010305:	cmovne eax,ecx
   140010308:	jmp    0x140010659
   14001030d:	movzx  edx,bx
   140010310:	mov    rcx,rbp
   140010313:	call   0x14000e5a0
   140010318:	jmp    0x140010659
   14001031d:	lea    rcx,[rsp+0x94]
   140010325:	mov    dl,0x5c
   140010327:	xor    sil,sil
   14001032a:	call   QWORD PTR [rip+0x4ea0]        # 0x1400151d0
   140010330:	cmp    bx,WORD PTR [rax]
   140010333:	jne    0x1400103d9
   140010339:	lea    rcx,[rsp+0x98]
   140010341:	mov    dl,0x75
   140010343:	call   QWORD PTR [rip+0x4e87]        # 0x1400151d0
   140010349:	movzx  eax,WORD PTR [rax]
   14001034c:	cmp    WORD PTR [rbp+0x58],ax
   140010350:	jne    0x1400103d9
   140010356:	lea    r8,[rsp+0x190]
   14001035e:	lea    rdx,[rsp+0x9c]
   140010366:	mov    rcx,rbp
   140010369:	mov    sil,0x1
   14001036c:	mov    BYTE PTR [rsp+0x190],r12b
   140010374:	call   0x14000dfb0
   140010379:	movzx  ebx,WORD PTR [rax]
   14001037c:	cmp    BYTE PTR [rsp+0x190],r12b
   140010384:	jne    0x1400103d9
   140010386:	lea    r8,[rip+0x7193]        # 0x140017520
   14001038d:	lea    rdx,[rip+0x6ee4]        # 0x140017278
   140010394:	lea    rcx,[rsp+0xd0]
   14001039c:	xor    r9d,r9d
   14001039f:	mov    DWORD PTR [rbp+0x5c],0x5
   1400103a6:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400103ae:	call   QWORD PTR [rip+0x4e14]        # 0x1400151c8
   1400103b4:	lea    rcx,[rbp+0x18]
   1400103b8:	mov    rdx,rax
   1400103bb:	call   QWORD PTR [rip+0x4df7]        # 0x1400151b8
   1400103c1:	lea    rcx,[rsp+0xd0]
   1400103c9:	call   QWORD PTR [rip+0x4fe9]        # 0x1400153b8
   1400103cf:	mov    eax,0x61
   1400103d4:	jmp    0x140010659
   1400103d9:	cmp    bx,0x61
   1400103dd:	jb     0x1400103e5
   1400103df:	cmp    bx,0x7a
   1400103e3:	jbe    0x14001041d
   1400103e5:	cmp    bx,0x41
   1400103e9:	jb     0x1400103f1
   1400103eb:	cmp    bx,0x5a
   1400103ef:	jbe    0x14001041d
   1400103f1:	cmp    bx,0x24
   1400103f5:	je     0x14001041d
   1400103f7:	cmp    bx,0x5f
   1400103fb:	je     0x14001041d
   1400103fd:	movzx  ecx,bx
   140010400:	call   QWORD PTR [rip+0x4e32]        # 0x140015238
   140010406:	cmp    eax,0x4
   140010409:	je     0x14001041d
   14001040b:	cmp    eax,0xd
   14001040e:	jle    0x140010588
   140010414:	cmp    eax,0x12
   140010417:	jg     0x140010588
   14001041d:	test   sil,sil
   140010420:	je     0x140010442
   140010422:	lea    rcx,[rbp+0x10]
   140010426:	xor    edx,edx
   140010428:	call   QWORD PTR [rip+0x4e2a]        # 0x140015258
   14001042e:	lea    rcx,[rbp+0x10]
   140010432:	movzx  edx,bx
   140010435:	call   QWORD PTR [rip+0x4e15]        # 0x140015250
   14001043b:	mov    BYTE PTR [rbp+0x8c],0x1
   140010442:	movzx  ebx,WORD PTR [rbp+0x58]
   140010446:	lea    rcx,[rsp+0xa0]
   14001044e:	mov    dl,0x5c
   140010450:	call   QWORD PTR [rip+0x4d7a]        # 0x1400151d0
   140010456:	movzx  eax,WORD PTR [rax]
   140010459:	cmp    WORD PTR [rbp+0x58],ax
   14001045d:	jne    0x140010514
   140010463:	lea    rcx,[rsp+0xa4]
   14001046b:	mov    dl,0x75
   14001046d:	call   QWORD PTR [rip+0x4d5d]        # 0x1400151d0
   140010473:	mov    rcx,QWORD PTR [rbp+0x30]
   140010477:	movzx  eax,WORD PTR [rax]
   14001047a:	cmp    WORD PTR [rcx],ax
   14001047d:	jne    0x140010514
   140010483:	test   sil,sil
   140010486:	jne    0x1400104bd
   140010488:	lea    rbx,[rbp+0x10]
   14001048c:	xor    edx,edx
   14001048e:	mov    sil,0x1
   140010491:	mov    rcx,rbx
   140010494:	call   QWORD PTR [rip+0x4dbe]        # 0x140015258
   14001049a:	mov    r8,QWORD PTR [rbp+0x50]
   14001049e:	mov    r9,QWORD PTR [rbp+0x30]
   1400104a2:	sub    r9,r8
   1400104a5:	xor    edx,edx
   1400104a7:	mov    rcx,rbx
   1400104aa:	sar    r9,1
   1400104ad:	dec    r9d
   1400104b0:	call   QWORD PTR [rip+0x4db2]        # 0x140015268
   1400104b6:	mov    BYTE PTR [rbp+0x8c],sil
   1400104bd:	mov    rcx,rbp
   1400104c0:	call   0x14000def0
   1400104c5:	lea    r8,[rsp+0x190]
   1400104cd:	lea    rdx,[rsp+0xa8]
   1400104d5:	mov    rcx,rbp
   1400104d8:	mov    BYTE PTR [rsp+0x190],r12b
   1400104e0:	call   0x14000dfb0
   1400104e5:	movzx  ebx,WORD PTR [rax]
   1400104e8:	cmp    BYTE PTR [rsp+0x190],r12b
   1400104f0:	je     0x14001053f
   1400104f2:	movzx  ecx,bx
   1400104f5:	call   0x14000dac0
   1400104fa:	test   al,al
   1400104fc:	je     0x140010442
   140010502:	lea    rcx,[rbp+0x10]
   140010506:	movzx  edx,bx
   140010509:	call   QWORD PTR [rip+0x4d41]        # 0x140015250
   14001050f:	jmp    0x140010442
   140010514:	movzx  ecx,bx
   140010517:	call   0x14000dac0
   14001051c:	test   al,al
   14001051e:	je     0x140010592
   140010520:	test   sil,sil
   140010523:	je     0x140010532
   140010525:	lea    rcx,[rbp+0x10]
   140010529:	movzx  edx,bx
   14001052c:	call   QWORD PTR [rip+0x4d1e]        # 0x140015250
   140010532:	mov    rcx,rbp
   140010535:	call   0x14000def0
   14001053a:	jmp    0x140010442
   14001053f:	lea    r8,[rip+0x6fda]        # 0x140017520
   140010546:	lea    rdx,[rip+0x6d2b]        # 0x140017278
   14001054d:	lea    rcx,[rsp+0xd8]
   140010555:	xor    r9d,r9d
   140010558:	mov    DWORD PTR [rbp+0x5c],0x5
   14001055f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140010567:	call   QWORD PTR [rip+0x4c5b]        # 0x1400151c8
   14001056d:	lea    rcx,[rbp+0x18]
   140010571:	mov    rdx,rax
   140010574:	call   QWORD PTR [rip+0x4c3e]        # 0x1400151b8
   14001057a:	lea    rcx,[rsp+0xd8]
   140010582:	call   QWORD PTR [rip+0x4e30]        # 0x1400153b8
   140010588:	mov    eax,0x61
   14001058d:	jmp    0x140010659
   140010592:	mov    rdx,QWORD PTR [rbp+0x50]
   140010596:	mov    rdi,QWORD PTR [rbp+0x30]
   14001059a:	mov    ebx,0x1d
   14001059f:	sub    rdi,rdx
   1400105a2:	sar    rdi,1
   1400105a5:	dec    edi
   1400105a7:	mov    DWORD PTR [rbp+0x84],edi
   1400105ad:	test   sil,sil
   1400105b0:	jne    0x1400105c7
   1400105b2:	movzx  r9d,BYTE PTR [rbp+0x92]
   1400105ba:	mov    r8d,edi
   1400105bd:	mov    rcx,rbp
   1400105c0:	call   0x14000d5c0
   1400105c5:	mov    ebx,eax
   1400105c7:	mov    rcx,QWORD PTR [rbp+0x0]
   1400105cb:	test   rcx,rcx
   1400105ce:	je     0x140010653
   1400105d4:	cmp    ebx,0x1d
   1400105d7:	jne    0x140010606
   1400105d9:	test   sil,sil
   1400105dc:	je     0x140010606
   1400105de:	lea    r8,[rbp+0x10]
   1400105e2:	lea    rdx,[rsp+0x140]
   1400105ea:	call   0x14000c460
   1400105ef:	mov    rcx,QWORD PTR [rax]
   1400105f2:	mov    QWORD PTR [rbp+0x20],rcx
   1400105f6:	mov    ecx,DWORD PTR [rax+0x8]
   1400105f9:	mov    DWORD PTR [rbp+0x28],ecx
   1400105fc:	mov    eax,DWORD PTR [rax+0xc]
   1400105ff:	mov    DWORD PTR [rbp+0x2c],eax
   140010602:	mov    eax,ebx
   140010604:	jmp    0x140010659
   140010606:	lea    rcx,[rbp+0x8]
   14001060a:	call   QWORD PTR [rip+0x4b80]        # 0x140015190
   140010610:	mov    r8,QWORD PTR [rbp+0x50]
   140010614:	mov    rcx,QWORD PTR [rbp+0x0]
   140010618:	sub    r8,rax
   14001061b:	lea    rdx,[rsp+0x100]
   140010623:	add    rcx,0x48
   140010627:	sar    r8,1
   14001062a:	mov    r9d,edi
   14001062d:	call   QWORD PTR [rip+0x4bdd]        # 0x140015210
   140010633:	mov    rax,QWORD PTR [rsp+0x100]
   14001063b:	mov    QWORD PTR [rbp+0x20],rax
   14001063f:	mov    eax,DWORD PTR [rsp+0x108]
   140010646:	mov    DWORD PTR [rbp+0x28],eax
   140010649:	mov    eax,DWORD PTR [rsp+0x10c]
   140010650:	mov    DWORD PTR [rbp+0x2c],eax
   140010653:	mov    eax,ebx
   140010655:	jmp    0x140010659
   140010657:	xor    eax,eax
   140010659:	mov    rsi,QWORD PTR [rsp+0x170]
   140010661:	mov    rdi,QWORD PTR [rsp+0x168]
   140010669:	mov    rbx,QWORD PTR [rsp+0x178]
   140010671:	mov    r12,QWORD PTR [rsp+0x160]
   140010679:	mov    r13,QWORD PTR [rsp+0x158]
   140010681:	add    rsp,0x180
   140010688:	pop    rbp
   140010689:	ret    
   14001068a:	xchg   ax,ax
   14001068c:	push   rdx
   14001068d:	cld    
   14001068e:	add    BYTE PTR [rax],al
   140010690:	scas   eax,DWORD PTR es:[rdi]
   140010691:	cld    
   140010692:	add    BYTE PTR [rax],al
   140010694:	and    ah,bh
   140010696:	add    BYTE PTR [rax],al
   140010698:	(bad)  
   140010699:	sti    
   14001069a:	add    BYTE PTR [rax],al
   14001069c:	mov    esp,0xb20000fb
   1400106a1:	sti    
   1400106a2:	add    BYTE PTR [rax],al
   1400106a4:	jge    0x1400106a1
   1400106a6:	add    BYTE PTR [rax],al
   1400106a8:	icebp  
   1400106a9:	cli    
   1400106aa:	add    BYTE PTR [rax],al
   1400106ac:	out    0xfa,eax
   1400106ae:	add    BYTE PTR [rax],al
   1400106b0:	pop    rsi
   1400106b1:	cli    
   1400106b2:	add    BYTE PTR [rax],al
   1400106b4:	loop   0x1400106ac
   1400106b6:	add    BYTE PTR [rax],al
   1400106b8:	(bad)  
   1400106b9:	repnz add BYTE PTR [rax],al
   1400106bc:	or     eax,0xd8000103
   1400106c1:	test   BYTE PTR [rax],0x0
   1400106c4:	pop    rdi
   1400106c5:	sti    
   1400106c6:	add    BYTE PTR [rax],al
   1400106c8:	rex.WRB test BYTE PTR [r8],0x0
   1400106cc:	in     eax,dx
   1400106cd:	cmc    
   1400106ce:	add    BYTE PTR [rax],al
   1400106d0:	or     ch,dh
   1400106d2:	add    BYTE PTR [rax],al
   1400106d4:	(bad)  
   1400106d5:	hlt    
   1400106d6:	add    BYTE PTR [rax],al
   1400106d8:	hlt    
   1400106d9:	hlt    
   1400106da:	add    BYTE PTR [rax],al
   1400106dc:	(bad)  
   1400106dd:	hlt    
   1400106de:	add    BYTE PTR [rax],al
   1400106e0:	mov    eax,0xae0000f4
   1400106e5:	hlt    
   1400106e6:	add    BYTE PTR [rax],al
   1400106e8:	push   rcx
   1400106e9:	hlt    
   1400106ea:	add    BYTE PTR [rax],al
   1400106ec:	rex.RXB hlt 
   1400106ee:	add    BYTE PTR [rax],al
   1400106f0:	cmp    eax,0x1d0000f4
   1400106f5:	add    eax,DWORD PTR [rcx]
   1400106f7:	add    BYTE PTR [rax],al
   1400106f9:	add    DWORD PTR [rdx],ebx
   1400106fb:	sbb    al,BYTE PTR [rdx]
   1400106fd:	add    eax,DWORD PTR [rcx]
   1400106ff:	add    al,0x5
   140010701:	(bad)  
   140010702:	(bad)  
   140010703:	or     BYTE PTR [rcx],cl
   140010705:	or     cl,BYTE PTR [rbx]
   140010707:	or     al,0xc
   140010709:	or     al,0xc
   14001070b:	or     al,0xc
   14001070d:	or     al,0xc
   14001070f:	or     al,0xc
   140010711:	or     eax,0x11100f0e
   140010716:	adc    bl,BYTE PTR [rdx]
   140010718:	sbb    bl,BYTE PTR [rdx]
   14001071a:	sbb    bl,BYTE PTR [rdx]
   14001071c:	sbb    bl,BYTE PTR [rdx]
   14001071e:	sbb    bl,BYTE PTR [rdx]
   140010720:	sbb    bl,BYTE PTR [rdx]
   140010722:	sbb    bl,BYTE PTR [rdx]
   140010724:	sbb    bl,BYTE PTR [rdx]
   140010726:	sbb    bl,BYTE PTR [rdx]
   140010728:	sbb    bl,BYTE PTR [rdx]
   14001072a:	sbb    bl,BYTE PTR [rdx]
   14001072c:	sbb    bl,BYTE PTR [rdx]
   14001072e:	sbb    bl,BYTE PTR [rdx]
   140010730:	sbb    bl,BYTE PTR [rdx]
   140010732:	adc    ebx,DWORD PTR [rdx]
   140010734:	adc    al,0x15
   140010736:	sbb    bl,BYTE PTR [rdx]
   140010738:	sbb    bl,BYTE PTR [rdx]
   14001073a:	sbb    bl,BYTE PTR [rdx]
   14001073c:	sbb    bl,BYTE PTR [rdx]
   14001073e:	sbb    bl,BYTE PTR [rdx]
   140010740:	sbb    bl,BYTE PTR [rdx]
   140010742:	sbb    bl,BYTE PTR [rdx]
   140010744:	sbb    bl,BYTE PTR [rdx]
   140010746:	sbb    bl,BYTE PTR [rdx]
   140010748:	sbb    bl,BYTE PTR [rdx]
   14001074a:	sbb    bl,BYTE PTR [rdx]
   14001074c:	sbb    bl,BYTE PTR [rdx]
   14001074e:	sbb    bl,BYTE PTR [rdx]
   140010750:	sbb    bl,BYTE PTR [rdx]
   140010752:	(bad)  
   140010753:	(bad)  
   140010754:	sbb    BYTE PTR [rcx],bl
   140010756:	xchg   ax,ax
   140010758:	fadd   DWORD PTR [rcx]
   14001075a:	add    DWORD PTR [rax],eax
   14001075c:	rex.WR add BYTE PTR [rcx],r8b
   14001075f:	add    BYTE PTR [rdx],bl
   140010761:	add    BYTE PTR [rcx],al
   140010763:	add    BYTE PTR [rsi+0x70000101],al
   140010769:	add    al,BYTE PTR [rcx]
   14001076b:	add    al,ch
   14001076d:	inc    DWORD PTR [rax]
   14001076f:	add    BYTE PTR [rsi+0x0],bh
   140010772:	add    DWORD PTR [rax],eax
   140010774:	stos   BYTE PTR es:[rdi],al
   140010775:	add    BYTE PTR [rcx],al
   140010777:	add    dh,dl
   140010779:	add    BYTE PTR [rcx],al
   14001077b:	add    BYTE PTR [rdx],al
   14001077d:	add    DWORD PTR [rcx],eax
   14001077f:	add    BYTE PTR [rsi],ch
   140010781:	add    DWORD PTR [rcx],eax
   140010783:	add    al,ah
   140010785:	inc    BYTE PTR [rax]
   140010787:	add    BYTE PTR [rdx+0x1],bl
   14001078a:	add    DWORD PTR [rax],eax
   14001078c:	inc    DWORD PTR fs:[rax]
   14001078f:	add    dl,ah
   140010791:	add    DWORD PTR [rcx],eax
   140010793:	add    BYTE PTR [rax],al
   140010795:	(bad)  
   140010796:	(bad)  
   140010797:	add    BYTE PTR [rsi],cl
   140010799:	(bad)  
   14001079a:	(bad)  
   14001079b:	(bad)  
   14001079c:	(bad)  
   14001079d:	(bad)  
   14001079e:	(bad)  
   14001079f:	(bad)  
   1400107a0:	(bad)  
   1400107a1:	(bad)  
   1400107a2:	(bad)  
   1400107a3:	(bad)  
   1400107a4:	(bad)  
   1400107a5:	(bad)  
   1400107a6:	(bad)  
   1400107a7:	(bad)  
   1400107a8:	(bad)  
   1400107a9:	(bad)  
   1400107aa:	(bad)  
   1400107ab:	(bad)  
   1400107ac:	add    DWORD PTR [rsi],ecx
   1400107ae:	(bad)  
   1400107af:	(bad)  
   1400107b0:	(bad)  
   1400107b1:	add    cl,BYTE PTR [rsi]
   1400107b3:	(bad)  
   1400107b4:	(bad)  
   1400107b5:	(bad)  
   1400107b6:	(bad)  
   1400107b7:	(bad)  
   1400107b8:	(bad)  
   1400107b9:	(bad)  
   1400107ba:	add    eax,DWORD PTR [rsp+rax*1]
   1400107bd:	add    al,0x4
   1400107bf:	add    al,0x4
   1400107c1:	add    al,0x4
   1400107c3:	add    al,0xe
   1400107c5:	(bad)  
   1400107c6:	(bad)  
   1400107c7:	(bad)  
   1400107c8:	(bad)  
   1400107c9:	(bad)  
   1400107ca:	(bad)  
   1400107cb:	(bad)  
   1400107cc:	(bad)  
   1400107cd:	(bad)  
   1400107ce:	(bad)  
   1400107cf:	(bad)  
   1400107d0:	(bad)  
   1400107d1:	(bad)  
   1400107d2:	(bad)  
   1400107d3:	(bad)  
   1400107d4:	(bad)  
   1400107d5:	(bad)  
   1400107d6:	(bad)  
   1400107d7:	(bad)  
   1400107d8:	(bad)  
   1400107d9:	(bad)  
   1400107da:	(bad)  
   1400107db:	(bad)  
   1400107dc:	(bad)  
   1400107dd:	(bad)  
   1400107de:	(bad)  
   1400107df:	(bad)  
   1400107e0:	(bad)  
   1400107e1:	(bad)  
   1400107e2:	(bad)  
   1400107e3:	(bad)  
   1400107e4:	(bad)  
   1400107e5:	(bad)  
   1400107e6:	add    eax,0xe0e0e0e
   1400107eb:	(bad)  
   1400107ec:	(bad)  
   1400107ed:	(bad)  
   1400107ee:	(bad)  
   1400107ef:	(bad)  
   1400107f0:	(bad)  
   1400107f1:	(bad)  
   1400107f2:	(bad)  
   1400107f3:	(bad)  
   1400107f4:	(bad)  
   1400107f5:	(bad)  
   1400107f6:	(bad)  
   1400107f7:	(bad)  
   1400107f8:	or     BYTE PTR [rsi],cl
   1400107fa:	(bad)  
   1400107fb:	(bad)  
   1400107fc:	or     DWORD PTR [rsi],ecx
   1400107fe:	or     cl,BYTE PTR [rbx]
   140010800:	or     al,0xe
   140010802:	or     eax,0xcccccccc
   140010807:	int3   
   140010808:	int3   
   140010809:	int3   
   14001080a:	int3   
   14001080b:	int3   
   14001080c:	int3   
   14001080d:	int3   
   14001080e:	int3   
   14001080f:	int3   
   140010810:	mov    QWORD PTR [rsp+0x8],rbx
   140010815:	mov    QWORD PTR [rsp+0x10],rbp
   14001081a:	mov    QWORD PTR [rsp+0x18],rsi
   14001081f:	push   rdi
   140010820:	sub    rsp,0x20
   140010824:	mov    ebx,DWORD PTR [rcx+0x80]
   14001082a:	xor    ebp,ebp
   14001082c:	mov    rdi,rcx
   14001082f:	mov    QWORD PTR [rcx+0x20],rbp
   140010833:	mov    DWORD PTR [rcx+0x28],ebp
   140010836:	mov    DWORD PTR [rcx+0x2c],ebp
   140010839:	call   0x14000f130
   14001083e:	mov    rdx,QWORD PTR [rdi+0x30]
   140010842:	mov    BYTE PTR [rdi+0x91],bpl
   140010849:	sub    rdx,QWORD PTR [rdi+0x50]
   14001084d:	mov    esi,eax
   14001084f:	mov    DWORD PTR [rdi+0x80],eax
   140010855:	sar    rdx,1
   140010858:	mov    BYTE PTR [rdi+0x8e],bpl
   14001085f:	dec    edx
   140010861:	cmp    ebx,0x37
   140010864:	sete   al
   140010867:	mov    DWORD PTR [rdi+0x84],edx
   14001086d:	mov    BYTE PTR [rdi+0x90],al
   140010873:	lea    eax,[rsi-0x4]
   140010876:	cmp    eax,0x4a
   140010879:	ja     0x1400108b6
   14001087b:	lea    rdx,[rip+0xfffffffffffef77e]        # 0x140000000
   140010882:	cdqe   
   140010884:	movzx  eax,BYTE PTR [rdx+rax*1+0x10930]
   14001088c:	mov    ecx,DWORD PTR [rdx+rax*4+0x1091c]
   140010893:	add    rcx,rdx
   140010896:	jmp    rcx
   140010898:	mov    DWORD PTR [rdi+0x70],0x1
   14001089f:	mov    DWORD PTR [rdi+0x74],ebp
   1400108a2:	jmp    0x1400108c8
   1400108a4:	mov    DWORD PTR [rdi+0x70],0x2
   1400108ab:	jmp    0x1400108c8
   1400108ad:	mov    BYTE PTR [rdi+0x8e],0x1
   1400108b4:	jmp    0x1400108c8
   1400108b6:	mov    ecx,esi
   1400108b8:	call   0x14000da30
   1400108bd:	test   al,al
   1400108bf:	je     0x1400108c8
   1400108c1:	mov    BYTE PTR [rdi+0x91],0x1
   1400108c8:	mov    ecx,DWORD PTR [rdi+0x70]
   1400108cb:	sub    ecx,0x1
   1400108ce:	je     0x1400108e6
   1400108d0:	cmp    ecx,0x1
   1400108d3:	jne    0x140010904
   1400108d5:	cmp    esi,0xe
   1400108d8:	je     0x140010904
   1400108da:	mov    eax,esi
   1400108dc:	cmp    esi,0x10
   1400108df:	je     0x140010906
   1400108e1:	mov    DWORD PTR [rdi+0x70],ebp
   1400108e4:	jmp    0x140010906
   1400108e6:	cmp    esi,0x3c
   1400108e9:	jne    0x1400108fc
   1400108eb:	add    DWORD PTR [rdi+0x74],0xffffffff
   1400108ef:	mov    eax,esi
   1400108f1:	jne    0x140010906
   1400108f3:	mov    DWORD PTR [rdi+0x70],0x2
   1400108fa:	jmp    0x140010906
   1400108fc:	cmp    esi,0x24
   1400108ff:	jne    0x140010904
   140010901:	inc    DWORD PTR [rdi+0x74]
   140010904:	mov    eax,esi
   140010906:	mov    rbx,QWORD PTR [rsp+0x30]
   14001090b:	mov    rbp,QWORD PTR [rsp+0x38]
   140010910:	mov    rsi,QWORD PTR [rsp+0x40]
   140010915:	add    rsp,0x20
   140010919:	pop    rdi
   14001091a:	ret    
   14001091b:	nop
   14001091c:	lods   eax,DWORD PTR ds:[rsi]
   14001091d:	or     BYTE PTR [rcx],al
   14001091f:	add    cl,al
   140010921:	or     BYTE PTR [rcx],al
   140010923:	add    BYTE PTR [rax+rcx*1+0x8980001],ah
   14001092a:	add    DWORD PTR [rax],eax
   14001092c:	mov    dh,0x8
   14001092e:	add    DWORD PTR [rax],eax
   140010930:	add    BYTE PTR [rsp+rax*1],al
   140010933:	add    DWORD PTR [rax+rax*1],eax
   140010936:	add    al,0x4
   140010938:	add    al,0x4
   14001093a:	add    al,BYTE PTR [rdx+rax*1]
   14001093d:	add    al,0x4
   14001093f:	add    al,0x4
   140010941:	add    eax,DWORD PTR [rsp+rax*1]
   140010944:	add    al,0x4
   140010946:	add    al,0x4
   140010948:	add    al,0x4
   14001094a:	add    eax,DWORD PTR [rsp+rax*1]
   14001094d:	add    DWORD PTR [rsp+rax*1],eax
   140010950:	add    al,0x4
   140010952:	add    al,0x4
   140010954:	add    al,0x4
   140010956:	add    al,0x4
   140010958:	add    al,0x4
   14001095a:	add    al,0x4
   14001095c:	add    al,0x4
   14001095e:	add    al,0x4
   140010960:	add    al,0x4
   140010962:	add    DWORD PTR [rsp+rax*1],eax
   140010965:	add    al,0x4
   140010967:	add    BYTE PTR [rcx+rax*1],al
   14001096a:	add    al,0x4
   14001096c:	add    al,0x4
   14001096e:	add    al,0x4
   140010970:	add    al,0x4
   140010972:	add    al,0x0
   140010974:	add    DWORD PTR [rsp+rax*1],eax
   140010977:	add    al,0x4
   140010979:	add    eax,DWORD PTR [rbx]
   14001097b:	int3   
   14001097c:	int3   
   14001097d:	int3   
   14001097e:	int3   
   14001097f:	int3   
   140010980:	rex push rbx
   140010982:	push   rbp
   140010983:	push   r13
   140010985:	push   r15
   140010987:	sub    rsp,0x158
   14001098e:	xor    r13d,r13d
   140010991:	mov    rbp,r8
   140010994:	mov    r15,rdx
   140010997:	mov    DWORD PTR [rsp+0x180],r13d
   14001099f:	mov    rbx,rcx
   1400109a2:	call   0x140010810
   1400109a7:	cmp    DWORD PTR [rbx+0x80],0xf
   1400109ae:	je     0x1400109c0
   1400109b0:	mov    al,0x1
   1400109b2:	add    rsp,0x158
   1400109b9:	pop    r15
   1400109bb:	pop    r13
   1400109bd:	pop    rbp
   1400109be:	pop    rbx
   1400109bf:	ret    
   1400109c0:	mov    QWORD PTR [rsp+0x188],rsi
   1400109c8:	mov    QWORD PTR [rsp+0x148],r12
   1400109d0:	mov    QWORD PTR [rsp+0x140],r14
   1400109d8:	lea    r14,[rip+0x6c61]        # 0x140017640
   1400109df:	mov    QWORD PTR [rsp+0x150],rdi
   1400109e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400109f0:	mov    r12,QWORD PTR [rbx+0x50]
   1400109f4:	mov    esi,DWORD PTR [rbx+0x88]
   1400109fa:	mov    rcx,rbx
   1400109fd:	sub    r12,QWORD PTR [rbx+0x48]
   140010a01:	sar    r12,1
   140010a04:	inc    r12d
   140010a07:	call   0x140010810
   140010a0c:	mov    edx,DWORD PTR [rbx+0x80]
   140010a12:	cmp    edx,0x1d
   140010a15:	je     0x140010a20
   140010a17:	cmp    edx,0x56
   140010a1a:	jne    0x14001113d
   140010a20:	cmp    BYTE PTR [rbx+0x8c],0x0
   140010a27:	je     0x140010a3a
   140010a29:	lea    rdx,[rbx+0x10]
   140010a2d:	lea    rcx,[rsp+0x30]
   140010a32:	call   QWORD PTR [rip+0x4990]        # 0x1400153c8
   140010a38:	jmp    0x140010a75
   140010a3a:	cmp    edx,0x41
   140010a3d:	jne    0x140010a5f
   140010a3f:	mov    r8d,DWORD PTR [rbx+0x84]
   140010a46:	mov    rdx,QWORD PTR [rbx+0x50]
   140010a4a:	lea    rcx,[rsp+0x30]
   140010a4f:	sub    r8d,0x2
   140010a53:	add    rdx,0x2
   140010a57:	call   QWORD PTR [rip+0x47c3]        # 0x140015220
   140010a5d:	jmp    0x140010a75
   140010a5f:	mov    r8d,DWORD PTR [rbx+0x84]
   140010a66:	mov    rdx,QWORD PTR [rbx+0x50]
   140010a6a:	lea    rcx,[rsp+0x30]
   140010a6f:	call   QWORD PTR [rip+0x47ab]        # 0x140015220
   140010a75:	or     rcx,0xffffffffffffffff
   140010a79:	xor    eax,eax
   140010a7b:	mov    rdi,r14
   140010a7e:	repnz scas al,BYTE PTR es:[rdi]
   140010a80:	mov    QWORD PTR [rsp+0xa8],r14
   140010a88:	lea    rdx,[rsp+0xe0]
   140010a90:	not    rcx
   140010a93:	dec    rcx
   140010a96:	mov    DWORD PTR [rsp+0xa0],ecx
   140010a9d:	lea    rcx,[rsp+0x30]
   140010aa2:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   140010aaa:	movdqa XMMWORD PTR [rsp+0xe0],xmm0
   140010ab3:	call   QWORD PTR [rip+0x48af]        # 0x140015368
   140010ab9:	test   al,al
   140010abb:	jne    0x140010b10
   140010abd:	or     rcx,0xffffffffffffffff
   140010ac1:	lea    rdx,[rip+0x6b70]        # 0x140017638
   140010ac8:	xor    eax,eax
   140010aca:	mov    rdi,rdx
   140010acd:	mov    QWORD PTR [rsp+0x88],rdx
   140010ad5:	lea    rdx,[rsp+0x100]
   140010add:	repnz scas al,BYTE PTR es:[rdi]
   140010adf:	not    rcx
   140010ae2:	dec    rcx
   140010ae5:	mov    DWORD PTR [rsp+0x80],ecx
   140010aec:	lea    rcx,[rsp+0x30]
   140010af1:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   140010af9:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   140010b02:	call   QWORD PTR [rip+0x4860]        # 0x140015368
   140010b08:	test   al,al
   140010b0a:	je     0x140011194
   140010b10:	or     rcx,0xffffffffffffffff
   140010b14:	xor    eax,eax
   140010b16:	mov    rdi,r14
   140010b19:	repnz scas al,BYTE PTR es:[rdi]
   140010b1b:	mov    QWORD PTR [rsp+0xc8],r14
   140010b23:	lea    rdx,[rsp+0x120]
   140010b2b:	not    rcx
   140010b2e:	dec    rcx
   140010b31:	mov    DWORD PTR [rsp+0xc0],ecx
   140010b38:	lea    rcx,[rsp+0x30]
   140010b3d:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   140010b45:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   140010b4e:	call   QWORD PTR [rip+0x4814]        # 0x140015368
   140010b54:	test   al,al
   140010b56:	je     0x140010c4c
   140010b5c:	mov    rcx,rbx
   140010b5f:	call   0x140010810
   140010b64:	cmp    eax,0x1d
   140010b67:	jne    0x140010c1d
   140010b6d:	or     rcx,0xffffffffffffffff
   140010b71:	lea    rdx,[rip+0x6ab8]        # 0x140017630
   140010b78:	xor    eax,eax
   140010b7a:	mov    rdi,rdx
   140010b7d:	mov    QWORD PTR [rsp+0x98],rdx
   140010b85:	or     r13d,0x1
   140010b89:	repnz scas al,BYTE PTR es:[rdi]
   140010b8b:	not    rcx
   140010b8e:	dec    rcx
   140010b91:	mov    DWORD PTR [rsp+0x90],ecx
   140010b98:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   140010ba0:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   140010ba9:	cmp    BYTE PTR [rbx+0x8c],al
   140010baf:	je     0x140010bc2
   140010bb1:	lea    rdx,[rbx+0x10]
   140010bb5:	lea    rcx,[rsp+0x50]
   140010bba:	call   QWORD PTR [rip+0x4808]        # 0x1400153c8
   140010bc0:	jmp    0x140010c01
   140010bc2:	cmp    DWORD PTR [rbx+0x80],0x41
   140010bc9:	jne    0x140010beb
   140010bcb:	mov    r8d,DWORD PTR [rbx+0x84]
   140010bd2:	mov    rdx,QWORD PTR [rbx+0x50]
   140010bd6:	lea    rcx,[rsp+0x50]
   140010bdb:	sub    r8d,0x2
   140010bdf:	add    rdx,0x2
   140010be3:	call   QWORD PTR [rip+0x4637]        # 0x140015220
   140010be9:	jmp    0x140010c01
   140010beb:	mov    r8d,DWORD PTR [rbx+0x84]
   140010bf2:	mov    rdx,QWORD PTR [rbx+0x50]
   140010bf6:	lea    rcx,[rsp+0x50]
   140010bfb:	call   QWORD PTR [rip+0x461f]        # 0x140015220
   140010c01:	lea    rdx,[rsp+0xf0]
   140010c09:	lea    rcx,[rsp+0x50]
   140010c0e:	call   QWORD PTR [rip+0x4754]        # 0x140015368
   140010c14:	test   al,al
   140010c16:	je     0x140010c1d
   140010c18:	xor    dil,dil
   140010c1b:	jmp    0x140010c20
   140010c1d:	mov    dil,0x1
   140010c20:	test   r13b,0x1
   140010c24:	je     0x140010c35
   140010c26:	lea    rcx,[rsp+0x50]
   140010c2b:	and    r13d,0xfffffffe
   140010c2f:	call   QWORD PTR [rip+0x4783]        # 0x1400153b8
   140010c35:	test   dil,dil
   140010c38:	jne    0x140011194
   140010c3e:	mov    rax,QWORD PTR [r15]
   140010c41:	mov    rcx,r15
   140010c44:	call   QWORD PTR [rax+0x8]
   140010c47:	jmp    0x140011115
   140010c4c:	mov    rcx,rbx
   140010c4f:	call   0x140010810
   140010c54:	lea    rcx,[rsp+0x38]
   140010c59:	call   QWORD PTR [rip+0x4591]        # 0x1400151f0
   140010c5f:	lea    rcx,[rsp+0x40]
   140010c64:	call   QWORD PTR [rip+0x4586]        # 0x1400151f0
   140010c6a:	mov    eax,DWORD PTR [rbx+0x80]
   140010c70:	xor    r14b,r14b
   140010c73:	cmp    eax,0x41
   140010c76:	jne    0x140010d79
   140010c7c:	cmp    BYTE PTR [rbx+0x8c],0x0
   140010c83:	mov    r14b,0x1
   140010c86:	je     0x140010c99
   140010c88:	lea    rdx,[rbx+0x10]
   140010c8c:	lea    rcx,[rsp+0x68]
   140010c91:	call   QWORD PTR [rip+0x4731]        # 0x1400153c8
   140010c97:	jmp    0x140010cb7
   140010c99:	mov    r8d,DWORD PTR [rbx+0x84]
   140010ca0:	mov    rdx,QWORD PTR [rbx+0x50]
   140010ca4:	lea    rcx,[rsp+0x68]
   140010ca9:	sub    r8d,0x2
   140010cad:	add    rdx,0x2
   140010cb1:	call   QWORD PTR [rip+0x4569]        # 0x140015220
   140010cb7:	lea    rdx,[rsp+0x68]
   140010cbc:	lea    rcx,[rsp+0x38]
   140010cc1:	call   QWORD PTR [rip+0x44f1]        # 0x1400151b8
   140010cc7:	lea    rcx,[rsp+0x68]
   140010ccc:	call   QWORD PTR [rip+0x46e6]        # 0x1400153b8
   140010cd2:	or     rcx,0xffffffffffffffff
   140010cd6:	lea    rdx,[rip+0x474f]        # 0x14001542c
   140010cdd:	mov    rdi,rdx
   140010ce0:	xor    eax,eax
   140010ce2:	mov    QWORD PTR [rsp+0xb8],rdx
   140010cea:	repnz scas al,BYTE PTR es:[rdi]
   140010cec:	lea    r8d,[rax+0x1]
   140010cf0:	lea    rdx,[rsp+0x110]
   140010cf8:	not    rcx
   140010cfb:	dec    rcx
   140010cfe:	mov    DWORD PTR [rsp+0xb0],ecx
   140010d05:	lea    rcx,[rsp+0x38]
   140010d0a:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   140010d12:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   140010d1b:	call   QWORD PTR [rip+0x4567]        # 0x140015288
   140010d21:	test   al,al
   140010d23:	jne    0x140010f0f
   140010d29:	lea    r8,[rip+0x68e0]        # 0x140017610
   140010d30:	lea    rdx,[rip+0x6541]        # 0x140017278
   140010d37:	lea    rcx,[rsp+0x180]
   140010d3f:	xor    r9d,r9d
   140010d42:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140010d4a:	call   QWORD PTR [rip+0x4478]        # 0x1400151c8
   140010d50:	lea    rcx,[rbp+0x18]
   140010d54:	mov    rdx,rax
   140010d57:	call   QWORD PTR [rip+0x445b]        # 0x1400151b8
   140010d5d:	lea    rcx,[rsp+0x180]
   140010d65:	call   QWORD PTR [rip+0x464d]        # 0x1400153b8
   140010d6b:	mov    edx,DWORD PTR [rbx+0x88]
   140010d71:	mov    DWORD PTR [rbp+0xc],edx
   140010d74:	jmp    0x1400112f3
   140010d79:	cmp    eax,0x1d
   140010d7c:	jne    0x140010f0f
   140010d82:	mov    edx,DWORD PTR [rbx+0x80]
   140010d88:	lea    rcx,[rip+0x6551]        # 0x1400172e0
   140010d8f:	mov    eax,0x1d
   140010d94:	cmp    eax,edx
   140010d96:	je     0x140010df3
   140010d98:	mov    eax,DWORD PTR [rcx+0x4]
   140010d9b:	add    rcx,0x4
   140010d9f:	test   eax,eax
   140010da1:	jne    0x140010d94
   140010da3:	lea    r8,[rip+0x684e]        # 0x1400175f8
   140010daa:	lea    rdx,[rip+0x64c7]        # 0x140017278
   140010db1:	lea    rcx,[rsp+0x180]
   140010db9:	xor    r9d,r9d
   140010dbc:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140010dc4:	call   QWORD PTR [rip+0x43fe]        # 0x1400151c8
   140010dca:	lea    rcx,[rbp+0x18]
   140010dce:	mov    rdx,rax
   140010dd1:	call   QWORD PTR [rip+0x43e1]        # 0x1400151b8
   140010dd7:	lea    rcx,[rsp+0x180]
   140010ddf:	call   QWORD PTR [rip+0x45d3]        # 0x1400153b8
   140010de5:	mov    edx,DWORD PTR [rbx+0x88]
   140010deb:	mov    DWORD PTR [rbp+0xc],edx
   140010dee:	jmp    0x1400112f3
   140010df3:	cmp    BYTE PTR [rbx+0x8c],0x0
   140010dfa:	je     0x140010e0d
   140010dfc:	lea    rdx,[rbx+0x10]
   140010e00:	lea    rcx,[rsp+0x60]
   140010e05:	call   QWORD PTR [rip+0x45bd]        # 0x1400153c8
   140010e0b:	jmp    0x140010e48
   140010e0d:	cmp    edx,0x41
   140010e10:	jne    0x140010e32
   140010e12:	mov    r8d,DWORD PTR [rbx+0x84]
   140010e19:	mov    rdx,QWORD PTR [rbx+0x50]
   140010e1d:	lea    rcx,[rsp+0x60]
   140010e22:	sub    r8d,0x2
   140010e26:	add    rdx,0x2
   140010e2a:	call   QWORD PTR [rip+0x43f0]        # 0x140015220
   140010e30:	jmp    0x140010e48
   140010e32:	mov    r8d,DWORD PTR [rbx+0x84]
   140010e39:	mov    rdx,QWORD PTR [rbx+0x50]
   140010e3d:	lea    rcx,[rsp+0x60]
   140010e42:	call   QWORD PTR [rip+0x43d8]        # 0x140015220
   140010e48:	lea    rdx,[rsp+0x60]
   140010e4d:	lea    rcx,[rsp+0x38]
   140010e52:	call   QWORD PTR [rip+0x43c0]        # 0x140015218
   140010e58:	lea    rcx,[rsp+0x60]
   140010e5d:	call   QWORD PTR [rip+0x4555]        # 0x1400153b8
   140010e63:	mov    rcx,rbx
   140010e66:	call   0x140010810
   140010e6b:	cmp    DWORD PTR [rbx+0x88],esi
   140010e71:	jne    0x140010da3
   140010e77:	cmp    DWORD PTR [rbx+0x80],0xf
   140010e7e:	jne    0x140010eb7
   140010e80:	lea    rcx,[rsp+0x180]
   140010e88:	mov    dl,0x2e
   140010e8a:	call   QWORD PTR [rip+0x4340]        # 0x1400151d0
   140010e90:	lea    rcx,[rsp+0x38]
   140010e95:	movzx  edx,WORD PTR [rax]
   140010e98:	call   QWORD PTR [rip+0x43e2]        # 0x140015280
   140010e9e:	mov    rcx,rbx
   140010ea1:	call   0x140010810
   140010ea6:	cmp    DWORD PTR [rbx+0x88],esi
   140010eac:	je     0x140010d82
   140010eb2:	jmp    0x140010da3
   140010eb7:	cmp    DWORD PTR [rbx+0x80],0x2f
   140010ebe:	jne    0x140011144
   140010ec4:	cmp    BYTE PTR [rbx+0x8c],0x0
   140010ecb:	je     0x140010ede
   140010ecd:	lea    rdx,[rbx+0x10]
   140010ed1:	lea    rcx,[rsp+0x70]
   140010ed6:	call   QWORD PTR [rip+0x44ec]        # 0x1400153c8
   140010edc:	jmp    0x140010ef4
   140010ede:	mov    r8d,DWORD PTR [rbx+0x84]
   140010ee5:	mov    rdx,QWORD PTR [rbx+0x50]
   140010ee9:	lea    rcx,[rsp+0x70]
   140010eee:	call   QWORD PTR [rip+0x432c]        # 0x140015220
   140010ef4:	lea    rdx,[rsp+0x70]
   140010ef9:	lea    rcx,[rsp+0x40]
   140010efe:	call   QWORD PTR [rip+0x42b4]        # 0x1400151b8
   140010f04:	lea    rcx,[rsp+0x70]
   140010f09:	call   QWORD PTR [rip+0x44a9]        # 0x1400153b8
   140010f0f:	mov    rcx,rbx
   140010f12:	call   0x140010810
   140010f17:	cmp    eax,0x1d
   140010f1a:	jne    0x140010fd8
   140010f20:	or     rcx,0xffffffffffffffff
   140010f24:	lea    rdx,[rip+0x66c9]        # 0x1400175f4
   140010f2b:	xor    eax,eax
   140010f2d:	mov    rdi,rdx
   140010f30:	mov    QWORD PTR [rsp+0xd8],rdx
   140010f38:	or     r13d,0x2
   140010f3c:	repnz scas al,BYTE PTR es:[rdi]
   140010f3e:	not    rcx
   140010f41:	dec    rcx
   140010f44:	mov    DWORD PTR [rsp+0xd0],ecx
   140010f4b:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   140010f53:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   140010f5c:	cmp    BYTE PTR [rbx+0x8c],al
   140010f62:	je     0x140010f75
   140010f64:	lea    rdx,[rbx+0x10]
   140010f68:	lea    rcx,[rsp+0x58]
   140010f6d:	call   QWORD PTR [rip+0x4455]        # 0x1400153c8
   140010f73:	jmp    0x140010fb4
   140010f75:	cmp    DWORD PTR [rbx+0x80],0x41
   140010f7c:	jne    0x140010f9e
   140010f7e:	mov    r8d,DWORD PTR [rbx+0x84]
   140010f85:	mov    rdx,QWORD PTR [rbx+0x50]
   140010f89:	lea    rcx,[rsp+0x58]
   140010f8e:	sub    r8d,0x2
   140010f92:	add    rdx,0x2
   140010f96:	call   QWORD PTR [rip+0x4284]        # 0x140015220
   140010f9c:	jmp    0x140010fb4
   140010f9e:	mov    r8d,DWORD PTR [rbx+0x84]
   140010fa5:	mov    rdx,QWORD PTR [rbx+0x50]
   140010fa9:	lea    rcx,[rsp+0x58]
   140010fae:	call   QWORD PTR [rip+0x426c]        # 0x140015220
   140010fb4:	lea    rdx,[rsp+0x130]
   140010fbc:	lea    rcx,[rsp+0x58]
   140010fc1:	call   QWORD PTR [rip+0x43a1]        # 0x140015368
   140010fc7:	test   al,al
   140010fc9:	je     0x140010fd8
   140010fcb:	cmp    DWORD PTR [rbx+0x88],esi
   140010fd1:	jne    0x140010fd8
   140010fd3:	xor    dil,dil
   140010fd6:	jmp    0x140010fdb
   140010fd8:	mov    dil,0x1
   140010fdb:	test   r13b,0x2
   140010fdf:	je     0x140010ff0
   140010fe1:	lea    rcx,[rsp+0x58]
   140010fe6:	and    r13d,0xfffffffd
   140010fea:	call   QWORD PTR [rip+0x43c8]        # 0x1400153b8
   140010ff0:	test   dil,dil
   140010ff3:	jne    0x140011354
   140010ff9:	mov    rcx,rbx
   140010ffc:	call   0x140010810
   140011001:	cmp    eax,0x1d
   140011004:	jne    0x14001125f
   14001100a:	cmp    DWORD PTR [rbx+0x88],esi
   140011010:	jne    0x14001125f
   140011016:	cmp    BYTE PTR [rbx+0x8c],dil
   14001101d:	je     0x140011030
   14001101f:	lea    rdx,[rbx+0x10]
   140011023:	lea    rcx,[rsp+0x48]
   140011028:	call   QWORD PTR [rip+0x439a]        # 0x1400153c8
   14001102e:	jmp    0x14001106f
   140011030:	cmp    DWORD PTR [rbx+0x80],0x41
   140011037:	jne    0x140011059
   140011039:	mov    r8d,DWORD PTR [rbx+0x84]
   140011040:	mov    rdx,QWORD PTR [rbx+0x50]
   140011044:	lea    rcx,[rsp+0x48]
   140011049:	sub    r8d,0x2
   14001104d:	add    rdx,0x2
   140011051:	call   QWORD PTR [rip+0x41c9]        # 0x140015220
   140011057:	jmp    0x14001106f
   140011059:	mov    r8d,DWORD PTR [rbx+0x84]
   140011060:	mov    rdx,QWORD PTR [rbx+0x50]
   140011064:	lea    rcx,[rsp+0x48]
   140011069:	call   QWORD PTR [rip+0x41b1]        # 0x140015220
   14001106f:	lea    rdx,[rsp+0x198]
   140011077:	lea    rcx,[rsp+0x48]
   14001107c:	xor    r8d,r8d
   14001107f:	call   QWORD PTR [rip+0x41f3]        # 0x140015278
   140011085:	movzx  ecx,WORD PTR [rax]
   140011088:	cmp    ecx,0x5a
   14001108b:	ja     0x140011092
   14001108d:	cmp    ecx,0x41
   140011090:	jae    0x1400110aa
   140011092:	cmp    ecx,0x7f
   140011095:	jbe    0x1400111f4
   14001109b:	call   QWORD PTR [rip+0x4197]        # 0x140015238
   1400110a1:	cmp    eax,0xe
   1400110a4:	jne    0x1400111f4
   1400110aa:	test   r14b,r14b
   1400110ad:	je     0x1400110cc
   1400110af:	mov    rax,QWORD PTR [r15]
   1400110b2:	lea    r8,[rsp+0x48]
   1400110b7:	lea    rdx,[rsp+0x38]
   1400110bc:	mov    r9d,esi
   1400110bf:	mov    rcx,r15
   1400110c2:	mov    DWORD PTR [rsp+0x20],r12d
   1400110c7:	call   QWORD PTR [rax+0x10]
   1400110ca:	jmp    0x1400110ed
   1400110cc:	mov    rax,QWORD PTR [r15]
   1400110cf:	lea    r9,[rsp+0x48]
   1400110d4:	lea    r8,[rsp+0x40]
   1400110d9:	lea    rdx,[rsp+0x38]
   1400110de:	mov    rcx,r15
   1400110e1:	mov    DWORD PTR [rsp+0x28],r12d
   1400110e6:	mov    DWORD PTR [rsp+0x20],esi
   1400110ea:	call   QWORD PTR [rax+0x18]
   1400110ed:	lea    rcx,[rsp+0x48]
   1400110f2:	call   QWORD PTR [rip+0x42c0]        # 0x1400153b8
   1400110f8:	lea    rcx,[rsp+0x40]
   1400110fd:	call   QWORD PTR [rip+0x42b5]        # 0x1400153b8
   140011103:	lea    rcx,[rsp+0x38]
   140011108:	call   QWORD PTR [rip+0x42aa]        # 0x1400153b8
   14001110e:	lea    r14,[rip+0x652b]        # 0x140017640
   140011115:	cmp    DWORD PTR [rbx+0x88],esi
   14001111b:	jne    0x140011194
   14001111d:	mov    rcx,rbx
   140011120:	call   0x140010810
   140011125:	lea    rcx,[rsp+0x30]
   14001112a:	call   QWORD PTR [rip+0x4288]        # 0x1400153b8
   140011130:	cmp    DWORD PTR [rbx+0x80],0xf
   140011137:	je     0x1400109f0
   14001113d:	mov    al,0x1
   14001113f:	jmp    0x140011326
   140011144:	lea    r8,[rip+0x6485]        # 0x1400175d0
   14001114b:	lea    rdx,[rip+0x6126]        # 0x140017278
   140011152:	lea    rcx,[rsp+0x180]
   14001115a:	xor    r9d,r9d
   14001115d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140011165:	call   QWORD PTR [rip+0x405d]        # 0x1400151c8
   14001116b:	lea    rcx,[rbp+0x18]
   14001116f:	mov    rdx,rax
   140011172:	call   QWORD PTR [rip+0x4040]        # 0x1400151b8
   140011178:	lea    rcx,[rsp+0x180]
   140011180:	call   QWORD PTR [rip+0x4232]        # 0x1400153b8
   140011186:	mov    edx,DWORD PTR [rbx+0x88]
   14001118c:	mov    DWORD PTR [rbp+0xc],edx
   14001118f:	jmp    0x1400112f3
   140011194:	lea    r8,[rip+0x60cd]        # 0x140017268
   14001119b:	lea    rdx,[rip+0x60d6]        # 0x140017278
   1400111a2:	lea    rcx,[rsp+0x180]
   1400111aa:	xor    r9d,r9d
   1400111ad:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400111b5:	call   QWORD PTR [rip+0x400d]        # 0x1400151c8
   1400111bb:	lea    rcx,[rbp+0x18]
   1400111bf:	mov    rdx,rax
   1400111c2:	call   QWORD PTR [rip+0x3ff0]        # 0x1400151b8
   1400111c8:	lea    rcx,[rsp+0x180]
   1400111d0:	call   QWORD PTR [rip+0x41e2]        # 0x1400153b8
   1400111d6:	mov    edx,DWORD PTR [rbx+0x88]
   1400111dc:	mov    DWORD PTR [rbp+0xc],edx
   1400111df:	mov    rax,QWORD PTR [rbx+0x50]
   1400111e3:	sub    rax,QWORD PTR [rbx+0x48]
   1400111e7:	sar    rax,1
   1400111ea:	inc    eax
   1400111ec:	mov    DWORD PTR [rbp+0x10],eax
   1400111ef:	jmp    0x140011319
   1400111f4:	lea    r8,[rip+0x63b5]        # 0x1400175b0
   1400111fb:	lea    rdx,[rip+0x6076]        # 0x140017278
   140011202:	lea    rcx,[rsp+0x180]
   14001120a:	xor    r9d,r9d
   14001120d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140011215:	call   QWORD PTR [rip+0x3fad]        # 0x1400151c8
   14001121b:	lea    rcx,[rbp+0x18]
   14001121f:	mov    rdx,rax
   140011222:	call   QWORD PTR [rip+0x3f90]        # 0x1400151b8
   140011228:	lea    rcx,[rsp+0x180]
   140011230:	call   QWORD PTR [rip+0x4182]        # 0x1400153b8
   140011236:	mov    edx,DWORD PTR [rbx+0x88]
   14001123c:	lea    rcx,[rsp+0x48]
   140011241:	mov    DWORD PTR [rbp+0xc],edx
   140011244:	mov    rax,QWORD PTR [rbx+0x50]
   140011248:	sub    rax,QWORD PTR [rbx+0x48]
   14001124c:	sar    rax,1
   14001124f:	inc    eax
   140011251:	mov    DWORD PTR [rbp+0x10],eax
   140011254:	call   QWORD PTR [rip+0x415e]        # 0x1400153b8
   14001125a:	jmp    0x140011303
   14001125f:	test   r14b,r14b
   140011262:	je     0x1400112a8
   140011264:	lea    r8,[rip+0x631d]        # 0x140017588
   14001126b:	lea    rdx,[rip+0x6006]        # 0x140017278
   140011272:	lea    rcx,[rsp+0x180]
   14001127a:	xor    r9d,r9d
   14001127d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140011285:	call   QWORD PTR [rip+0x3f3d]        # 0x1400151c8
   14001128b:	lea    rcx,[rbp+0x18]
   14001128f:	mov    rdx,rax
   140011292:	call   QWORD PTR [rip+0x3f20]        # 0x1400151b8
   140011298:	lea    rcx,[rsp+0x180]
   1400112a0:	call   QWORD PTR [rip+0x4112]        # 0x1400153b8
   1400112a6:	jmp    0x1400112ea
   1400112a8:	lea    r8,[rip+0x62b1]        # 0x140017560
   1400112af:	lea    rdx,[rip+0x5fc2]        # 0x140017278
   1400112b6:	lea    rcx,[rsp+0x180]
   1400112be:	xor    r9d,r9d
   1400112c1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400112c9:	call   QWORD PTR [rip+0x3ef9]        # 0x1400151c8
   1400112cf:	lea    rcx,[rbp+0x18]
   1400112d3:	mov    rdx,rax
   1400112d6:	call   QWORD PTR [rip+0x3edc]        # 0x1400151b8
   1400112dc:	lea    rcx,[rsp+0x180]
   1400112e4:	call   QWORD PTR [rip+0x40ce]        # 0x1400153b8
   1400112ea:	mov    eax,DWORD PTR [rbx+0x88]
   1400112f0:	mov    DWORD PTR [rbp+0xc],eax
   1400112f3:	mov    rax,QWORD PTR [rbx+0x50]
   1400112f7:	sub    rax,QWORD PTR [rbx+0x48]
   1400112fb:	sar    rax,1
   1400112fe:	inc    eax
   140011300:	mov    DWORD PTR [rbp+0x10],eax
   140011303:	lea    rcx,[rsp+0x40]
   140011308:	call   QWORD PTR [rip+0x40aa]        # 0x1400153b8
   14001130e:	lea    rcx,[rsp+0x38]
   140011313:	call   QWORD PTR [rip+0x409f]        # 0x1400153b8
   140011319:	lea    rcx,[rsp+0x30]
   14001131e:	call   QWORD PTR [rip+0x4094]        # 0x1400153b8
   140011324:	xor    al,al
   140011326:	mov    rdi,QWORD PTR [rsp+0x150]
   14001132e:	mov    r12,QWORD PTR [rsp+0x148]
   140011336:	mov    rsi,QWORD PTR [rsp+0x188]
   14001133e:	mov    r14,QWORD PTR [rsp+0x140]
   140011346:	add    rsp,0x158
   14001134d:	pop    r15
   14001134f:	pop    r13
   140011351:	pop    rbp
   140011352:	pop    rbx
   140011353:	ret    
   140011354:	test   r14b,r14b
   140011357:	je     0x14001139d
   140011359:	lea    r8,[rip+0x6228]        # 0x140017588
   140011360:	lea    rdx,[rip+0x5f11]        # 0x140017278
   140011367:	lea    rcx,[rsp+0x180]
   14001136f:	xor    r9d,r9d
   140011372:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001137a:	call   QWORD PTR [rip+0x3e48]        # 0x1400151c8
   140011380:	lea    rcx,[rbp+0x18]
   140011384:	mov    rdx,rax
   140011387:	call   QWORD PTR [rip+0x3e2b]        # 0x1400151b8
   14001138d:	lea    rcx,[rsp+0x180]
   140011395:	call   QWORD PTR [rip+0x401d]        # 0x1400153b8
   14001139b:	jmp    0x1400113df
   14001139d:	lea    r8,[rip+0x61bc]        # 0x140017560
   1400113a4:	lea    rdx,[rip+0x5ecd]        # 0x140017278
   1400113ab:	lea    rcx,[rsp+0x180]
   1400113b3:	xor    r9d,r9d
   1400113b6:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400113be:	call   QWORD PTR [rip+0x3e04]        # 0x1400151c8
   1400113c4:	lea    rcx,[rbp+0x18]
   1400113c8:	mov    rdx,rax
   1400113cb:	call   QWORD PTR [rip+0x3de7]        # 0x1400151b8
   1400113d1:	lea    rcx,[rsp+0x180]
   1400113d9:	call   QWORD PTR [rip+0x3fd9]        # 0x1400153b8
   1400113df:	mov    eax,DWORD PTR [rbx+0x88]
   1400113e5:	cmp    eax,esi
   1400113e7:	je     0x1400112f0
   1400113ed:	mov    DWORD PTR [rbp+0xc],esi
   1400113f0:	mov    DWORD PTR [rbp+0x10],r12d
   1400113f4:	jmp    0x140011303
   1400113f9:	int3   
   1400113fa:	int3   
   1400113fb:	int3   
   1400113fc:	int3   
   1400113fd:	int3   
   1400113fe:	int3   
   1400113ff:	int3   
   140011400:	xor    eax,eax
   140011402:	ret    
   140011403:	int3   
   140011404:	int3   
   140011405:	int3   
   140011406:	int3   
   140011407:	int3   
   140011408:	int3   
   140011409:	int3   
   14001140a:	int3   
   14001140b:	int3   
   14001140c:	int3   
   14001140d:	int3   
   14001140e:	int3   
   14001140f:	int3   
   140011410:	mov    rax,rcx
   140011413:	ret    
   140011414:	int3   
   140011415:	int3   
   140011416:	int3   
   140011417:	int3   
   140011418:	int3   
   140011419:	int3   
   14001141a:	int3   
   14001141b:	int3   
   14001141c:	int3   
   14001141d:	int3   
   14001141e:	int3   
   14001141f:	int3   
   140011420:	mov    QWORD PTR [rsp+0x10],rbx
   140011425:	push   rsi
   140011426:	sub    rsp,0x20
   14001142a:	mov    rax,QWORD PTR [rdx]
   14001142d:	mov    rbx,rdx
   140011430:	mov    rsi,rcx
   140011433:	mov    rdx,rcx
   140011436:	mov    rcx,rbx
   140011439:	call   QWORD PTR [rax+0x1f8]
   14001143f:	test   al,al
   140011441:	je     0x14001147e
   140011443:	mov    QWORD PTR [rsp+0x30],rdi
   140011448:	mov    rdi,QWORD PTR [rsi+0x10]
   14001144c:	test   rdi,rdi
   14001144f:	je     0x140011479
   140011451:	mov    rax,QWORD PTR [rbx]
   140011454:	mov    rdx,rdi
   140011457:	mov    rcx,rbx
   14001145a:	call   QWORD PTR [rax+0x8]
   14001145d:	test   al,al
   14001145f:	je     0x14001146d
   140011461:	mov    rax,QWORD PTR [rdi]
   140011464:	mov    rdx,rbx
   140011467:	mov    rcx,rdi
   14001146a:	call   QWORD PTR [rax+0x28]
   14001146d:	mov    rax,QWORD PTR [rbx]
   140011470:	mov    rdx,rdi
   140011473:	mov    rcx,rbx
   140011476:	call   QWORD PTR [rax+0x10]
   140011479:	mov    rdi,QWORD PTR [rsp+0x30]
   14001147e:	mov    rax,QWORD PTR [rbx]
   140011481:	mov    rdx,rsi
   140011484:	mov    rcx,rbx
   140011487:	mov    rbx,QWORD PTR [rsp+0x38]
   14001148c:	add    rsp,0x20
   140011490:	pop    rsi
   140011491:	rex.W jmp QWORD PTR [rax+0x4d8]
   140011498:	int3   
   140011499:	int3   
   14001149a:	int3   
   14001149b:	int3   
   14001149c:	int3   
   14001149d:	int3   
   14001149e:	int3   
   14001149f:	int3   
   1400114a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400114a5:	push   rdi
   1400114a6:	sub    rsp,0x20
   1400114aa:	mov    rax,QWORD PTR [rdx]
   1400114ad:	mov    rdi,rdx
   1400114b0:	mov    rbx,rcx
   1400114b3:	mov    rdx,rcx
   1400114b6:	mov    rcx,rdi
   1400114b9:	call   QWORD PTR [rax+0x270]
   1400114bf:	mov    r11,QWORD PTR [rdi]
   1400114c2:	mov    rdx,rbx
   1400114c5:	mov    rcx,rdi
   1400114c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400114cd:	add    rsp,0x20
   1400114d1:	pop    rdi
   1400114d2:	rex.WB jmp QWORD PTR [r11+0x550]
   1400114d9:	int3   
   1400114da:	int3   
   1400114db:	int3   
   1400114dc:	int3   
   1400114dd:	int3   
   1400114de:	int3   
   1400114df:	int3   
   1400114e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400114e5:	push   rdi
   1400114e6:	sub    rsp,0x20
   1400114ea:	mov    rax,QWORD PTR [rdx]
   1400114ed:	mov    rdi,rdx
   1400114f0:	mov    rbx,rcx
   1400114f3:	mov    rdx,rcx
   1400114f6:	mov    rcx,rdi
   1400114f9:	call   QWORD PTR [rax+0x268]
   1400114ff:	mov    r11,QWORD PTR [rdi]
   140011502:	mov    rdx,rbx
   140011505:	mov    rcx,rdi
   140011508:	mov    rbx,QWORD PTR [rsp+0x30]
   14001150d:	add    rsp,0x20
   140011511:	pop    rdi
   140011512:	rex.WB jmp QWORD PTR [r11+0x548]
   140011519:	int3   
   14001151a:	int3   
   14001151b:	int3   
   14001151c:	int3   
   14001151d:	int3   
   14001151e:	int3   
   14001151f:	int3   
   140011520:	mov    QWORD PTR [rsp+0x8],rbx
   140011525:	push   rdi
   140011526:	sub    rsp,0x20
   14001152a:	mov    rax,QWORD PTR [rdx]
   14001152d:	mov    rdi,rdx
   140011530:	mov    rbx,rcx
   140011533:	mov    rdx,rcx
   140011536:	mov    rcx,rdi
   140011539:	call   QWORD PTR [rax+0x260]
   14001153f:	mov    r11,QWORD PTR [rdi]
   140011542:	mov    rdx,rbx
   140011545:	mov    rcx,rdi
   140011548:	mov    rbx,QWORD PTR [rsp+0x30]
   14001154d:	add    rsp,0x20
   140011551:	pop    rdi
   140011552:	rex.WB jmp QWORD PTR [r11+0x540]
   140011559:	int3   
   14001155a:	int3   
   14001155b:	int3   
   14001155c:	int3   
   14001155d:	int3   
   14001155e:	int3   
   14001155f:	int3   
   140011560:	mov    QWORD PTR [rsp+0x8],rbx
   140011565:	push   rdi
   140011566:	sub    rsp,0x20
   14001156a:	mov    rax,QWORD PTR [rdx]
   14001156d:	mov    rdi,rdx
   140011570:	mov    rbx,rcx
   140011573:	mov    rdx,rcx
   140011576:	mov    rcx,rdi
   140011579:	call   QWORD PTR [rax+0x258]
   14001157f:	mov    r11,QWORD PTR [rdi]
   140011582:	mov    rdx,rbx
   140011585:	mov    rcx,rdi
   140011588:	mov    rbx,QWORD PTR [rsp+0x30]
   14001158d:	add    rsp,0x20
   140011591:	pop    rdi
   140011592:	rex.WB jmp QWORD PTR [r11+0x538]
   140011599:	int3   
   14001159a:	int3   
   14001159b:	int3   
   14001159c:	int3   
   14001159d:	int3   
   14001159e:	int3   
   14001159f:	int3   
   1400115a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400115a5:	push   rdi
   1400115a6:	sub    rsp,0x20
   1400115aa:	mov    rax,QWORD PTR [rdx]
   1400115ad:	mov    rdi,rdx
   1400115b0:	mov    rbx,rcx
   1400115b3:	mov    rdx,rcx
   1400115b6:	mov    rcx,rdi
   1400115b9:	call   QWORD PTR [rax+0x250]
   1400115bf:	mov    r11,QWORD PTR [rdi]
   1400115c2:	mov    rdx,rbx
   1400115c5:	mov    rcx,rdi
   1400115c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400115cd:	add    rsp,0x20
   1400115d1:	pop    rdi
   1400115d2:	rex.WB jmp QWORD PTR [r11+0x530]
   1400115d9:	int3   
   1400115da:	int3   
   1400115db:	int3   
   1400115dc:	int3   
   1400115dd:	int3   
   1400115de:	int3   
   1400115df:	int3   
   1400115e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400115e5:	push   rdi
   1400115e6:	sub    rsp,0x20
   1400115ea:	mov    rax,QWORD PTR [rdx]
   1400115ed:	mov    rdi,rdx
   1400115f0:	mov    rbx,rcx
   1400115f3:	mov    rdx,rcx
   1400115f6:	mov    rcx,rdi
   1400115f9:	call   QWORD PTR [rax+0x248]
   1400115ff:	mov    r11,QWORD PTR [rdi]
   140011602:	mov    rdx,rbx
   140011605:	mov    rcx,rdi
   140011608:	mov    rbx,QWORD PTR [rsp+0x30]
   14001160d:	add    rsp,0x20
   140011611:	pop    rdi
   140011612:	rex.WB jmp QWORD PTR [r11+0x528]
   140011619:	int3   
   14001161a:	int3   
   14001161b:	int3   
   14001161c:	int3   
   14001161d:	int3   
   14001161e:	int3   
   14001161f:	int3   
   140011620:	mov    QWORD PTR [rsp+0x8],rbx
   140011625:	push   rdi
   140011626:	sub    rsp,0x20
   14001162a:	mov    rax,QWORD PTR [rdx]
   14001162d:	mov    rdi,rdx
   140011630:	mov    rbx,rcx
   140011633:	mov    rdx,rcx
   140011636:	mov    rcx,rdi
   140011639:	call   QWORD PTR [rax+0x240]
   14001163f:	mov    r11,QWORD PTR [rdi]
   140011642:	mov    rdx,rbx
   140011645:	mov    rcx,rdi
   140011648:	mov    rbx,QWORD PTR [rsp+0x30]
   14001164d:	add    rsp,0x20
   140011651:	pop    rdi
   140011652:	rex.WB jmp QWORD PTR [r11+0x520]
   140011659:	int3   
   14001165a:	int3   
   14001165b:	int3   
   14001165c:	int3   
   14001165d:	int3   
   14001165e:	int3   
   14001165f:	int3   
   140011660:	mov    QWORD PTR [rsp+0x8],rbx
   140011665:	push   rdi
   140011666:	sub    rsp,0x20
   14001166a:	mov    rax,QWORD PTR [rdx]
   14001166d:	mov    rdi,rdx
   140011670:	mov    rbx,rcx
   140011673:	mov    rdx,rcx
   140011676:	mov    rcx,rdi
   140011679:	call   QWORD PTR [rax+0x238]
   14001167f:	mov    r11,QWORD PTR [rdi]
   140011682:	mov    rdx,rbx
   140011685:	mov    rcx,rdi
   140011688:	mov    rbx,QWORD PTR [rsp+0x30]
   14001168d:	add    rsp,0x20
   140011691:	pop    rdi
   140011692:	rex.WB jmp QWORD PTR [r11+0x518]
   140011699:	int3   
   14001169a:	int3   
   14001169b:	int3   
   14001169c:	int3   
   14001169d:	int3   
   14001169e:	int3   
   14001169f:	int3   
   1400116a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400116a5:	push   rsi
   1400116a6:	sub    rsp,0x20
   1400116aa:	mov    rax,QWORD PTR [rdx]
   1400116ad:	mov    rbx,rdx
   1400116b0:	mov    rsi,rcx
   1400116b3:	mov    rdx,rcx
   1400116b6:	mov    rcx,rbx
   1400116b9:	call   QWORD PTR [rax+0x230]
   1400116bf:	test   al,al
   1400116c1:	je     0x14001172f
   1400116c3:	mov    QWORD PTR [rsp+0x30],rdi
   1400116c8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400116cc:	test   rdi,rdi
   1400116cf:	je     0x1400116f9
   1400116d1:	mov    rax,QWORD PTR [rbx]
   1400116d4:	mov    rdx,rdi
   1400116d7:	mov    rcx,rbx
   1400116da:	call   QWORD PTR [rax+0x8]
   1400116dd:	test   al,al
   1400116df:	je     0x1400116ed
   1400116e1:	mov    rax,QWORD PTR [rdi]
   1400116e4:	mov    rdx,rbx
   1400116e7:	mov    rcx,rdi
   1400116ea:	call   QWORD PTR [rax+0x28]
   1400116ed:	mov    rax,QWORD PTR [rbx]
   1400116f0:	mov    rdx,rdi
   1400116f3:	mov    rcx,rbx
   1400116f6:	call   QWORD PTR [rax+0x10]
   1400116f9:	mov    rdi,QWORD PTR [rsi+0x18]
   1400116fd:	test   rdi,rdi
   140011700:	je     0x14001172a
   140011702:	mov    rax,QWORD PTR [rbx]
   140011705:	mov    rdx,rdi
   140011708:	mov    rcx,rbx
   14001170b:	call   QWORD PTR [rax+0x8]
   14001170e:	test   al,al
   140011710:	je     0x14001171e
   140011712:	mov    rax,QWORD PTR [rdi]
   140011715:	mov    rdx,rbx
   140011718:	mov    rcx,rdi
   14001171b:	call   QWORD PTR [rax+0x28]
   14001171e:	mov    rax,QWORD PTR [rbx]
   140011721:	mov    rdx,rdi
   140011724:	mov    rcx,rbx
   140011727:	call   QWORD PTR [rax+0x10]
   14001172a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001172f:	mov    rax,QWORD PTR [rbx]
   140011732:	mov    rdx,rsi
   140011735:	mov    rcx,rbx
   140011738:	mov    rbx,QWORD PTR [rsp+0x38]
   14001173d:	add    rsp,0x20
   140011741:	pop    rsi
   140011742:	rex.W jmp QWORD PTR [rax+0x510]
   140011749:	int3   
   14001174a:	int3   
   14001174b:	int3   
   14001174c:	int3   
   14001174d:	int3   
   14001174e:	int3   
   14001174f:	int3   
   140011750:	mov    QWORD PTR [rsp+0x10],rbx
   140011755:	push   rsi
   140011756:	sub    rsp,0x20
   14001175a:	mov    rax,QWORD PTR [rdx]
   14001175d:	mov    rbx,rdx
   140011760:	mov    rsi,rcx
   140011763:	mov    rdx,rcx
   140011766:	mov    rcx,rbx
   140011769:	call   QWORD PTR [rax+0x228]
   14001176f:	test   al,al
   140011771:	je     0x1400117ae
   140011773:	mov    QWORD PTR [rsp+0x30],rdi
   140011778:	mov    rdi,QWORD PTR [rsi+0x10]
   14001177c:	test   rdi,rdi
   14001177f:	je     0x1400117a9
   140011781:	mov    rax,QWORD PTR [rbx]
   140011784:	mov    rdx,rdi
   140011787:	mov    rcx,rbx
   14001178a:	call   QWORD PTR [rax+0x8]
   14001178d:	test   al,al
   14001178f:	je     0x14001179d
   140011791:	mov    rax,QWORD PTR [rdi]
   140011794:	mov    rdx,rbx
   140011797:	mov    rcx,rdi
   14001179a:	call   QWORD PTR [rax+0x28]
   14001179d:	mov    rax,QWORD PTR [rbx]
   1400117a0:	mov    rdx,rdi
   1400117a3:	mov    rcx,rbx
   1400117a6:	call   QWORD PTR [rax+0x10]
   1400117a9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400117ae:	mov    rax,QWORD PTR [rbx]
   1400117b1:	mov    rdx,rsi
   1400117b4:	mov    rcx,rbx
   1400117b7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400117bc:	add    rsp,0x20
   1400117c0:	pop    rsi
   1400117c1:	rex.W jmp QWORD PTR [rax+0x508]
   1400117c8:	int3   
   1400117c9:	int3   
   1400117ca:	int3   
   1400117cb:	int3   
   1400117cc:	int3   
   1400117cd:	int3   
   1400117ce:	int3   
   1400117cf:	int3   
   1400117d0:	mov    QWORD PTR [rsp+0x18],rbp
   1400117d5:	push   rdi
   1400117d6:	sub    rsp,0x20
   1400117da:	mov    rax,QWORD PTR [rdx]
   1400117dd:	mov    rdi,rdx
   1400117e0:	mov    rbp,rcx
   1400117e3:	mov    rdx,rcx
   1400117e6:	mov    rcx,rdi
   1400117e9:	call   QWORD PTR [rax+0x220]
   1400117ef:	test   al,al
   1400117f1:	je     0x140011885
   1400117f7:	mov    QWORD PTR [rsp+0x30],rbx
   1400117fc:	mov    rbx,rbp
   1400117ff:	test   rbp,rbp
   140011802:	je     0x140011880
   140011804:	mov    QWORD PTR [rsp+0x38],rsi
   140011809:	nop    DWORD PTR [rax+0x0]
   140011810:	mov    rsi,QWORD PTR [rbx+0x10]
   140011814:	test   rsi,rsi
   140011817:	je     0x140011841
   140011819:	mov    rax,QWORD PTR [rdi]
   14001181c:	mov    rdx,rsi
   14001181f:	mov    rcx,rdi
   140011822:	call   QWORD PTR [rax+0x8]
   140011825:	test   al,al
   140011827:	je     0x140011835
   140011829:	mov    rax,QWORD PTR [rsi]
   14001182c:	mov    rdx,rdi
   14001182f:	mov    rcx,rsi
   140011832:	call   QWORD PTR [rax+0x28]
   140011835:	mov    rax,QWORD PTR [rdi]
   140011838:	mov    rdx,rsi
   14001183b:	mov    rcx,rdi
   14001183e:	call   QWORD PTR [rax+0x10]
   140011841:	mov    rsi,QWORD PTR [rbx+0x18]
   140011845:	test   rsi,rsi
   140011848:	je     0x140011872
   14001184a:	mov    rax,QWORD PTR [rdi]
   14001184d:	mov    rdx,rsi
   140011850:	mov    rcx,rdi
   140011853:	call   QWORD PTR [rax+0x8]
   140011856:	test   al,al
   140011858:	je     0x140011866
   14001185a:	mov    rax,QWORD PTR [rsi]
   14001185d:	mov    rdx,rdi
   140011860:	mov    rcx,rsi
   140011863:	call   QWORD PTR [rax+0x28]
   140011866:	mov    rax,QWORD PTR [rdi]
   140011869:	mov    rdx,rsi
   14001186c:	mov    rcx,rdi
   14001186f:	call   QWORD PTR [rax+0x10]
   140011872:	mov    rbx,QWORD PTR [rbx+0x20]
   140011876:	test   rbx,rbx
   140011879:	jne    0x140011810
   14001187b:	mov    rsi,QWORD PTR [rsp+0x38]
   140011880:	mov    rbx,QWORD PTR [rsp+0x30]
   140011885:	mov    rax,QWORD PTR [rdi]
   140011888:	mov    rdx,rbp
   14001188b:	mov    rcx,rdi
   14001188e:	mov    rbp,QWORD PTR [rsp+0x40]
   140011893:	add    rsp,0x20
   140011897:	pop    rdi
   140011898:	rex.W jmp QWORD PTR [rax+0x500]
   14001189f:	int3   
   1400118a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400118a5:	push   rdi
   1400118a6:	sub    rsp,0x20
   1400118aa:	mov    rax,QWORD PTR [rdx]
   1400118ad:	mov    rdi,rdx
   1400118b0:	mov    rbx,rcx
   1400118b3:	mov    rdx,rcx
   1400118b6:	mov    rcx,rdi
   1400118b9:	call   QWORD PTR [rax+0x218]
   1400118bf:	mov    r11,QWORD PTR [rdi]
   1400118c2:	mov    rdx,rbx
   1400118c5:	mov    rcx,rdi
   1400118c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400118cd:	add    rsp,0x20
   1400118d1:	pop    rdi
   1400118d2:	rex.WB jmp QWORD PTR [r11+0x4f8]
   1400118d9:	int3   
   1400118da:	int3   
   1400118db:	int3   
   1400118dc:	int3   
   1400118dd:	int3   
   1400118de:	int3   
   1400118df:	int3   
   1400118e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400118e5:	push   rsi
   1400118e6:	sub    rsp,0x20
   1400118ea:	mov    rax,QWORD PTR [rdx]
   1400118ed:	mov    rbx,rdx
   1400118f0:	mov    rsi,rcx
   1400118f3:	mov    rdx,rcx
   1400118f6:	mov    rcx,rbx
   1400118f9:	call   QWORD PTR [rax+0x208]
   1400118ff:	test   al,al
   140011901:	je     0x14001196f
   140011903:	mov    QWORD PTR [rsp+0x30],rdi
   140011908:	mov    rdi,QWORD PTR [rsi+0x10]
   14001190c:	test   rdi,rdi
   14001190f:	je     0x140011939
   140011911:	mov    rax,QWORD PTR [rbx]
   140011914:	mov    rdx,rdi
   140011917:	mov    rcx,rbx
   14001191a:	call   QWORD PTR [rax+0x8]
   14001191d:	test   al,al
   14001191f:	je     0x14001192d
   140011921:	mov    rax,QWORD PTR [rdi]
   140011924:	mov    rdx,rbx
   140011927:	mov    rcx,rdi
   14001192a:	call   QWORD PTR [rax+0x28]
   14001192d:	mov    rax,QWORD PTR [rbx]
   140011930:	mov    rdx,rdi
   140011933:	mov    rcx,rbx
   140011936:	call   QWORD PTR [rax+0x10]
   140011939:	mov    rdi,QWORD PTR [rsi+0x28]
   14001193d:	test   rdi,rdi
   140011940:	je     0x14001196a
   140011942:	mov    rax,QWORD PTR [rbx]
   140011945:	mov    rdx,rdi
   140011948:	mov    rcx,rbx
   14001194b:	call   QWORD PTR [rax+0x8]
   14001194e:	test   al,al
   140011950:	je     0x14001195e
   140011952:	mov    rax,QWORD PTR [rdi]
   140011955:	mov    rdx,rbx
   140011958:	mov    rcx,rdi
   14001195b:	call   QWORD PTR [rax+0x28]
   14001195e:	mov    rax,QWORD PTR [rbx]
   140011961:	mov    rdx,rdi
   140011964:	mov    rcx,rbx
   140011967:	call   QWORD PTR [rax+0x10]
   14001196a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001196f:	mov    rax,QWORD PTR [rbx]
   140011972:	mov    rdx,rsi
   140011975:	mov    rcx,rbx
   140011978:	mov    rbx,QWORD PTR [rsp+0x38]
   14001197d:	add    rsp,0x20
   140011981:	pop    rsi
   140011982:	rex.W jmp QWORD PTR [rax+0x4e8]
   140011989:	int3   
   14001198a:	int3   
   14001198b:	int3   
   14001198c:	int3   
   14001198d:	int3   
   14001198e:	int3   
   14001198f:	int3   
   140011990:	mov    QWORD PTR [rsp+0x10],rbx
   140011995:	push   rsi
   140011996:	sub    rsp,0x20
   14001199a:	mov    rax,QWORD PTR [rdx]
   14001199d:	mov    rbx,rdx
   1400119a0:	mov    rsi,rcx
   1400119a3:	mov    rdx,rcx
   1400119a6:	mov    rcx,rbx
   1400119a9:	call   QWORD PTR [rax+0x200]
   1400119af:	test   al,al
   1400119b1:	je     0x140011a54
   1400119b7:	mov    QWORD PTR [rsp+0x30],rdi
   1400119bc:	mov    rdi,QWORD PTR [rsi+0x10]
   1400119c0:	test   rdi,rdi
   1400119c3:	je     0x1400119ed
   1400119c5:	mov    rax,QWORD PTR [rbx]
   1400119c8:	mov    rdx,rdi
   1400119cb:	mov    rcx,rbx
   1400119ce:	call   QWORD PTR [rax+0x8]
   1400119d1:	test   al,al
   1400119d3:	je     0x1400119e1
   1400119d5:	mov    rax,QWORD PTR [rdi]
   1400119d8:	mov    rdx,rbx
   1400119db:	mov    rcx,rdi
   1400119de:	call   QWORD PTR [rax+0x28]
   1400119e1:	mov    rax,QWORD PTR [rbx]
   1400119e4:	mov    rdx,rdi
   1400119e7:	mov    rcx,rbx
   1400119ea:	call   QWORD PTR [rax+0x10]
   1400119ed:	mov    rdi,QWORD PTR [rsi+0x40]
   1400119f1:	test   rdi,rdi
   1400119f4:	je     0x140011a1e
   1400119f6:	mov    rax,QWORD PTR [rbx]
   1400119f9:	mov    rdx,rdi
   1400119fc:	mov    rcx,rbx
   1400119ff:	call   QWORD PTR [rax+0x8]
   140011a02:	test   al,al
   140011a04:	je     0x140011a12
   140011a06:	mov    rax,QWORD PTR [rdi]
   140011a09:	mov    rdx,rbx
   140011a0c:	mov    rcx,rdi
   140011a0f:	call   QWORD PTR [rax+0x28]
   140011a12:	mov    rax,QWORD PTR [rbx]
   140011a15:	mov    rdx,rdi
   140011a18:	mov    rcx,rbx
   140011a1b:	call   QWORD PTR [rax+0x10]
   140011a1e:	mov    rdi,QWORD PTR [rsi+0x68]
   140011a22:	test   rdi,rdi
   140011a25:	je     0x140011a4f
   140011a27:	mov    rax,QWORD PTR [rbx]
   140011a2a:	mov    rdx,rdi
   140011a2d:	mov    rcx,rbx
   140011a30:	call   QWORD PTR [rax+0x8]
   140011a33:	test   al,al
   140011a35:	je     0x140011a43
   140011a37:	mov    rax,QWORD PTR [rdi]
   140011a3a:	mov    rdx,rbx
   140011a3d:	mov    rcx,rdi
   140011a40:	call   QWORD PTR [rax+0x28]
   140011a43:	mov    rax,QWORD PTR [rbx]
   140011a46:	mov    rdx,rdi
   140011a49:	mov    rcx,rbx
   140011a4c:	call   QWORD PTR [rax+0x10]
   140011a4f:	mov    rdi,QWORD PTR [rsp+0x30]
   140011a54:	mov    rax,QWORD PTR [rbx]
   140011a57:	mov    rdx,rsi
   140011a5a:	mov    rcx,rbx
   140011a5d:	mov    rbx,QWORD PTR [rsp+0x38]
   140011a62:	add    rsp,0x20
   140011a66:	pop    rsi
   140011a67:	rex.W jmp QWORD PTR [rax+0x4e0]
   140011a6e:	int3   
   140011a6f:	int3   
   140011a70:	mov    QWORD PTR [rsp+0x18],rbp
   140011a75:	push   rsi
   140011a76:	sub    rsp,0x20
   140011a7a:	mov    rax,QWORD PTR [rdx]
   140011a7d:	mov    rsi,rdx
   140011a80:	mov    rbp,rcx
   140011a83:	mov    rdx,rcx
   140011a86:	mov    rcx,rsi
   140011a89:	call   QWORD PTR [rax+0x210]
   140011a8f:	test   al,al
   140011a91:	je     0x140011ae9
   140011a93:	mov    QWORD PTR [rsp+0x30],rbx
   140011a98:	mov    rbx,rbp
   140011a9b:	test   rbp,rbp
   140011a9e:	je     0x140011ae4
   140011aa0:	mov    QWORD PTR [rsp+0x38],rdi
   140011aa5:	mov    rdi,QWORD PTR [rbx+0x10]
   140011aa9:	test   rdi,rdi
   140011aac:	je     0x140011ad6
   140011aae:	mov    rax,QWORD PTR [rsi]
   140011ab1:	mov    rdx,rdi
   140011ab4:	mov    rcx,rsi
   140011ab7:	call   QWORD PTR [rax+0x8]
   140011aba:	test   al,al
   140011abc:	je     0x140011aca
   140011abe:	mov    rax,QWORD PTR [rdi]
   140011ac1:	mov    rdx,rsi
   140011ac4:	mov    rcx,rdi
   140011ac7:	call   QWORD PTR [rax+0x28]
   140011aca:	mov    rax,QWORD PTR [rsi]
   140011acd:	mov    rdx,rdi
   140011ad0:	mov    rcx,rsi
   140011ad3:	call   QWORD PTR [rax+0x10]
   140011ad6:	mov    rbx,QWORD PTR [rbx+0x18]
   140011ada:	test   rbx,rbx
   140011add:	jne    0x140011aa5
   140011adf:	mov    rdi,QWORD PTR [rsp+0x38]
   140011ae4:	mov    rbx,QWORD PTR [rsp+0x30]
   140011ae9:	mov    rax,QWORD PTR [rsi]
   140011aec:	mov    rdx,rbp
   140011aef:	mov    rcx,rsi
   140011af2:	mov    rbp,QWORD PTR [rsp+0x40]
   140011af7:	add    rsp,0x20
   140011afb:	pop    rsi
   140011afc:	rex.W jmp QWORD PTR [rax+0x4f0]
   140011b03:	int3   
   140011b04:	int3   
   140011b05:	int3   
   140011b06:	int3   
   140011b07:	int3   
   140011b08:	int3   
   140011b09:	int3   
   140011b0a:	int3   
   140011b0b:	int3   
   140011b0c:	int3   
   140011b0d:	int3   
   140011b0e:	int3   
   140011b0f:	int3   
   140011b10:	mov    QWORD PTR [rsp+0x8],rbx
   140011b15:	push   rdi
   140011b16:	sub    rsp,0x20
   140011b1a:	mov    rax,QWORD PTR [rdx]
   140011b1d:	mov    rdi,rdx
   140011b20:	mov    rbx,rcx
   140011b23:	mov    rdx,rcx
   140011b26:	mov    rcx,rdi
   140011b29:	call   QWORD PTR [rax+0x1f0]
   140011b2f:	mov    r11,QWORD PTR [rdi]
   140011b32:	mov    rdx,rbx
   140011b35:	mov    rcx,rdi
   140011b38:	mov    rbx,QWORD PTR [rsp+0x30]
   140011b3d:	add    rsp,0x20
   140011b41:	pop    rdi
   140011b42:	rex.WB jmp QWORD PTR [r11+0x4d0]
   140011b49:	int3   
   140011b4a:	int3   
   140011b4b:	int3   
   140011b4c:	int3   
   140011b4d:	int3   
   140011b4e:	int3   
   140011b4f:	int3   
   140011b50:	mov    QWORD PTR [rsp+0x8],rbx
   140011b55:	push   rdi
   140011b56:	sub    rsp,0x20
   140011b5a:	mov    rax,QWORD PTR [rdx]
   140011b5d:	mov    rdi,rdx
   140011b60:	mov    rbx,rcx
   140011b63:	mov    rdx,rcx
   140011b66:	mov    rcx,rdi
   140011b69:	call   QWORD PTR [rax+0x1e8]
   140011b6f:	mov    r11,QWORD PTR [rdi]
   140011b72:	mov    rdx,rbx
   140011b75:	mov    rcx,rdi
   140011b78:	mov    rbx,QWORD PTR [rsp+0x30]
   140011b7d:	add    rsp,0x20
   140011b81:	pop    rdi
   140011b82:	rex.WB jmp QWORD PTR [r11+0x4c8]
   140011b89:	int3   
   140011b8a:	int3   
   140011b8b:	int3   
   140011b8c:	int3   
   140011b8d:	int3   
   140011b8e:	int3   
   140011b8f:	int3   
   140011b90:	mov    QWORD PTR [rsp+0x8],rbx
   140011b95:	push   rdi
   140011b96:	sub    rsp,0x20
   140011b9a:	mov    rax,QWORD PTR [rdx]
   140011b9d:	mov    rdi,rdx
   140011ba0:	mov    rbx,rcx
   140011ba3:	mov    rdx,rcx
   140011ba6:	mov    rcx,rdi
   140011ba9:	call   QWORD PTR [rax+0x1e0]
   140011baf:	mov    r11,QWORD PTR [rdi]
   140011bb2:	mov    rdx,rbx
   140011bb5:	mov    rcx,rdi
   140011bb8:	mov    rbx,QWORD PTR [rsp+0x30]
   140011bbd:	add    rsp,0x20
   140011bc1:	pop    rdi
   140011bc2:	rex.WB jmp QWORD PTR [r11+0x4c0]
   140011bc9:	int3   
   140011bca:	int3   
   140011bcb:	int3   
   140011bcc:	int3   
   140011bcd:	int3   
   140011bce:	int3   
   140011bcf:	int3   
   140011bd0:	mov    QWORD PTR [rsp+0x10],rbx
   140011bd5:	push   rsi
   140011bd6:	sub    rsp,0x20
   140011bda:	mov    rax,QWORD PTR [rdx]
   140011bdd:	mov    rbx,rdx
   140011be0:	mov    rsi,rcx
   140011be3:	mov    rdx,rcx
   140011be6:	mov    rcx,rbx
   140011be9:	call   QWORD PTR [rax+0x1d8]
   140011bef:	test   al,al
   140011bf1:	je     0x140011c5f
   140011bf3:	mov    QWORD PTR [rsp+0x30],rdi
   140011bf8:	mov    rdi,QWORD PTR [rsi+0x10]
   140011bfc:	test   rdi,rdi
   140011bff:	je     0x140011c29
   140011c01:	mov    rax,QWORD PTR [rbx]
   140011c04:	mov    rdx,rdi
   140011c07:	mov    rcx,rbx
   140011c0a:	call   QWORD PTR [rax+0x8]
   140011c0d:	test   al,al
   140011c0f:	je     0x140011c1d
   140011c11:	mov    rax,QWORD PTR [rdi]
   140011c14:	mov    rdx,rbx
   140011c17:	mov    rcx,rdi
   140011c1a:	call   QWORD PTR [rax+0x28]
   140011c1d:	mov    rax,QWORD PTR [rbx]
   140011c20:	mov    rdx,rdi
   140011c23:	mov    rcx,rbx
   140011c26:	call   QWORD PTR [rax+0x10]
   140011c29:	mov    rdi,QWORD PTR [rsi+0x18]
   140011c2d:	test   rdi,rdi
   140011c30:	je     0x140011c5a
   140011c32:	mov    rax,QWORD PTR [rbx]
   140011c35:	mov    rdx,rdi
   140011c38:	mov    rcx,rbx
   140011c3b:	call   QWORD PTR [rax+0x8]
   140011c3e:	test   al,al
   140011c40:	je     0x140011c4e
   140011c42:	mov    rax,QWORD PTR [rdi]
   140011c45:	mov    rdx,rbx
   140011c48:	mov    rcx,rdi
   140011c4b:	call   QWORD PTR [rax+0x28]
   140011c4e:	mov    rax,QWORD PTR [rbx]
   140011c51:	mov    rdx,rdi
   140011c54:	mov    rcx,rbx
   140011c57:	call   QWORD PTR [rax+0x10]
   140011c5a:	mov    rdi,QWORD PTR [rsp+0x30]
   140011c5f:	mov    rax,QWORD PTR [rbx]
   140011c62:	mov    rdx,rsi
   140011c65:	mov    rcx,rbx
   140011c68:	mov    rbx,QWORD PTR [rsp+0x38]
   140011c6d:	add    rsp,0x20
   140011c71:	pop    rsi
   140011c72:	rex.W jmp QWORD PTR [rax+0x4b8]
   140011c79:	int3   
   140011c7a:	int3   
   140011c7b:	int3   
   140011c7c:	int3   
   140011c7d:	int3   
   140011c7e:	int3   
   140011c7f:	int3   
   140011c80:	mov    QWORD PTR [rsp+0x10],rbx
   140011c85:	push   rsi
   140011c86:	sub    rsp,0x20
   140011c8a:	mov    rax,QWORD PTR [rdx]
   140011c8d:	mov    rbx,rdx
   140011c90:	mov    rsi,rcx
   140011c93:	mov    rdx,rcx
   140011c96:	mov    rcx,rbx
   140011c99:	call   QWORD PTR [rax+0x1d0]
   140011c9f:	test   al,al
   140011ca1:	je     0x140011cde
   140011ca3:	mov    QWORD PTR [rsp+0x30],rdi
   140011ca8:	mov    rdi,QWORD PTR [rsi+0x10]
   140011cac:	test   rdi,rdi
   140011caf:	je     0x140011cd9
   140011cb1:	mov    rax,QWORD PTR [rbx]
   140011cb4:	mov    rdx,rdi
   140011cb7:	mov    rcx,rbx
   140011cba:	call   QWORD PTR [rax+0x8]
   140011cbd:	test   al,al
   140011cbf:	je     0x140011ccd
   140011cc1:	mov    rax,QWORD PTR [rdi]
   140011cc4:	mov    rdx,rbx
   140011cc7:	mov    rcx,rdi
   140011cca:	call   QWORD PTR [rax+0x28]
   140011ccd:	mov    rax,QWORD PTR [rbx]
   140011cd0:	mov    rdx,rdi
   140011cd3:	mov    rcx,rbx
   140011cd6:	call   QWORD PTR [rax+0x10]
   140011cd9:	mov    rdi,QWORD PTR [rsp+0x30]
   140011cde:	mov    rax,QWORD PTR [rbx]
   140011ce1:	mov    rdx,rsi
   140011ce4:	mov    rcx,rbx
   140011ce7:	mov    rbx,QWORD PTR [rsp+0x38]
   140011cec:	add    rsp,0x20
   140011cf0:	pop    rsi
   140011cf1:	rex.W jmp QWORD PTR [rax+0x4b0]
   140011cf8:	int3   
   140011cf9:	int3   
   140011cfa:	int3   
   140011cfb:	int3   
   140011cfc:	int3   
   140011cfd:	int3   
   140011cfe:	int3   
   140011cff:	int3   
   140011d00:	mov    QWORD PTR [rsp+0x10],rbx
   140011d05:	push   rsi
   140011d06:	sub    rsp,0x20
   140011d0a:	mov    rax,QWORD PTR [rdx]
   140011d0d:	mov    rbx,rdx
   140011d10:	mov    rsi,rcx
   140011d13:	mov    rdx,rcx
   140011d16:	mov    rcx,rbx
   140011d19:	call   QWORD PTR [rax+0x1c8]
   140011d1f:	test   al,al
   140011d21:	je     0x140011d8f
   140011d23:	mov    QWORD PTR [rsp+0x30],rdi
   140011d28:	mov    rdi,QWORD PTR [rsi+0x10]
   140011d2c:	test   rdi,rdi
   140011d2f:	je     0x140011d59
   140011d31:	mov    rax,QWORD PTR [rbx]
   140011d34:	mov    rdx,rdi
   140011d37:	mov    rcx,rbx
   140011d3a:	call   QWORD PTR [rax+0x8]
   140011d3d:	test   al,al
   140011d3f:	je     0x140011d4d
   140011d41:	mov    rax,QWORD PTR [rdi]
   140011d44:	mov    rdx,rbx
   140011d47:	mov    rcx,rdi
   140011d4a:	call   QWORD PTR [rax+0x28]
   140011d4d:	mov    rax,QWORD PTR [rbx]
   140011d50:	mov    rdx,rdi
   140011d53:	mov    rcx,rbx
   140011d56:	call   QWORD PTR [rax+0x10]
   140011d59:	mov    rdi,QWORD PTR [rsi+0x18]
   140011d5d:	test   rdi,rdi
   140011d60:	je     0x140011d8a
   140011d62:	mov    rax,QWORD PTR [rbx]
   140011d65:	mov    rdx,rdi
   140011d68:	mov    rcx,rbx
   140011d6b:	call   QWORD PTR [rax+0x8]
   140011d6e:	test   al,al
   140011d70:	je     0x140011d7e
   140011d72:	mov    rax,QWORD PTR [rdi]
   140011d75:	mov    rdx,rbx
   140011d78:	mov    rcx,rdi
   140011d7b:	call   QWORD PTR [rax+0x28]
   140011d7e:	mov    rax,QWORD PTR [rbx]
   140011d81:	mov    rdx,rdi
   140011d84:	mov    rcx,rbx
   140011d87:	call   QWORD PTR [rax+0x10]
   140011d8a:	mov    rdi,QWORD PTR [rsp+0x30]
   140011d8f:	mov    rax,QWORD PTR [rbx]
   140011d92:	mov    rdx,rsi
   140011d95:	mov    rcx,rbx
   140011d98:	mov    rbx,QWORD PTR [rsp+0x38]
   140011d9d:	add    rsp,0x20
   140011da1:	pop    rsi
   140011da2:	rex.W jmp QWORD PTR [rax+0x4a8]
   140011da9:	int3   
   140011daa:	int3   
   140011dab:	int3   
   140011dac:	int3   
   140011dad:	int3   
   140011dae:	int3   
   140011daf:	int3   
   140011db0:	mov    QWORD PTR [rsp+0x10],rbx
   140011db5:	push   rsi
   140011db6:	sub    rsp,0x20
   140011dba:	mov    rax,QWORD PTR [rdx]
   140011dbd:	mov    rbx,rdx
   140011dc0:	mov    rsi,rcx
   140011dc3:	mov    rdx,rcx
   140011dc6:	mov    rcx,rbx
   140011dc9:	call   QWORD PTR [rax+0x1c0]
   140011dcf:	test   al,al
   140011dd1:	je     0x140011e0e
   140011dd3:	mov    QWORD PTR [rsp+0x30],rdi
   140011dd8:	mov    rdi,QWORD PTR [rsi+0x10]
   140011ddc:	test   rdi,rdi
   140011ddf:	je     0x140011e09
   140011de1:	mov    rax,QWORD PTR [rbx]
   140011de4:	mov    rdx,rdi
   140011de7:	mov    rcx,rbx
   140011dea:	call   QWORD PTR [rax+0x8]
   140011ded:	test   al,al
   140011def:	je     0x140011dfd
   140011df1:	mov    rax,QWORD PTR [rdi]
   140011df4:	mov    rdx,rbx
   140011df7:	mov    rcx,rdi
   140011dfa:	call   QWORD PTR [rax+0x28]
   140011dfd:	mov    rax,QWORD PTR [rbx]
   140011e00:	mov    rdx,rdi
   140011e03:	mov    rcx,rbx
   140011e06:	call   QWORD PTR [rax+0x10]
   140011e09:	mov    rdi,QWORD PTR [rsp+0x30]
   140011e0e:	mov    rax,QWORD PTR [rbx]
   140011e11:	mov    rdx,rsi
   140011e14:	mov    rcx,rbx
   140011e17:	mov    rbx,QWORD PTR [rsp+0x38]
   140011e1c:	add    rsp,0x20
   140011e20:	pop    rsi
   140011e21:	rex.W jmp QWORD PTR [rax+0x4a0]
   140011e28:	int3   
   140011e29:	int3   
   140011e2a:	int3   
   140011e2b:	int3   
   140011e2c:	int3   
   140011e2d:	int3   
   140011e2e:	int3   
   140011e2f:	int3   
   140011e30:	mov    QWORD PTR [rsp+0x10],rbx
   140011e35:	push   rsi
   140011e36:	sub    rsp,0x20
   140011e3a:	mov    rax,QWORD PTR [rdx]
   140011e3d:	mov    rbx,rdx
   140011e40:	mov    rsi,rcx
   140011e43:	mov    rdx,rcx
   140011e46:	mov    rcx,rbx
   140011e49:	call   QWORD PTR [rax+0x1b8]
   140011e4f:	test   al,al
   140011e51:	je     0x140011ebf
   140011e53:	mov    QWORD PTR [rsp+0x30],rdi
   140011e58:	mov    rdi,QWORD PTR [rsi+0x10]
   140011e5c:	test   rdi,rdi
   140011e5f:	je     0x140011e89
   140011e61:	mov    rax,QWORD PTR [rbx]
   140011e64:	mov    rdx,rdi
   140011e67:	mov    rcx,rbx
   140011e6a:	call   QWORD PTR [rax+0x8]
   140011e6d:	test   al,al
   140011e6f:	je     0x140011e7d
   140011e71:	mov    rax,QWORD PTR [rdi]
   140011e74:	mov    rdx,rbx
   140011e77:	mov    rcx,rdi
   140011e7a:	call   QWORD PTR [rax+0x28]
   140011e7d:	mov    rax,QWORD PTR [rbx]
   140011e80:	mov    rdx,rdi
   140011e83:	mov    rcx,rbx
   140011e86:	call   QWORD PTR [rax+0x10]
   140011e89:	mov    rdi,QWORD PTR [rsi+0x18]
   140011e8d:	test   rdi,rdi
   140011e90:	je     0x140011eba
   140011e92:	mov    rax,QWORD PTR [rbx]
   140011e95:	mov    rdx,rdi
   140011e98:	mov    rcx,rbx
   140011e9b:	call   QWORD PTR [rax+0x8]
   140011e9e:	test   al,al
   140011ea0:	je     0x140011eae
   140011ea2:	mov    rax,QWORD PTR [rdi]
   140011ea5:	mov    rdx,rbx
   140011ea8:	mov    rcx,rdi
   140011eab:	call   QWORD PTR [rax+0x28]
   140011eae:	mov    rax,QWORD PTR [rbx]
   140011eb1:	mov    rdx,rdi
   140011eb4:	mov    rcx,rbx
   140011eb7:	call   QWORD PTR [rax+0x10]
   140011eba:	mov    rdi,QWORD PTR [rsp+0x30]
   140011ebf:	mov    rax,QWORD PTR [rbx]
   140011ec2:	mov    rdx,rsi
   140011ec5:	mov    rcx,rbx
   140011ec8:	mov    rbx,QWORD PTR [rsp+0x38]
   140011ecd:	add    rsp,0x20
   140011ed1:	pop    rsi
   140011ed2:	rex.W jmp QWORD PTR [rax+0x498]
   140011ed9:	int3   
   140011eda:	int3   
   140011edb:	int3   
   140011edc:	int3   
   140011edd:	int3   
   140011ede:	int3   
   140011edf:	int3   
   140011ee0:	mov    QWORD PTR [rsp+0x18],rbp
   140011ee5:	push   rsi
   140011ee6:	sub    rsp,0x20
   140011eea:	mov    rax,QWORD PTR [rdx]
   140011eed:	mov    rsi,rdx
   140011ef0:	mov    rbp,rcx
   140011ef3:	mov    rdx,rcx
   140011ef6:	mov    rcx,rsi
   140011ef9:	call   QWORD PTR [rax+0x1b0]
   140011eff:	test   al,al
   140011f01:	je     0x140011f59
   140011f03:	mov    QWORD PTR [rsp+0x30],rbx
   140011f08:	mov    rbx,rbp
   140011f0b:	test   rbp,rbp
   140011f0e:	je     0x140011f54
   140011f10:	mov    QWORD PTR [rsp+0x38],rdi
   140011f15:	mov    rdi,QWORD PTR [rbx+0x10]
   140011f19:	test   rdi,rdi
   140011f1c:	je     0x140011f46
   140011f1e:	mov    rax,QWORD PTR [rsi]
   140011f21:	mov    rdx,rdi
   140011f24:	mov    rcx,rsi
   140011f27:	call   QWORD PTR [rax+0x8]
   140011f2a:	test   al,al
   140011f2c:	je     0x140011f3a
   140011f2e:	mov    rax,QWORD PTR [rdi]
   140011f31:	mov    rdx,rsi
   140011f34:	mov    rcx,rdi
   140011f37:	call   QWORD PTR [rax+0x28]
   140011f3a:	mov    rax,QWORD PTR [rsi]
   140011f3d:	mov    rdx,rdi
   140011f40:	mov    rcx,rsi
   140011f43:	call   QWORD PTR [rax+0x10]
   140011f46:	mov    rbx,QWORD PTR [rbx+0x18]
   140011f4a:	test   rbx,rbx
   140011f4d:	jne    0x140011f15
   140011f4f:	mov    rdi,QWORD PTR [rsp+0x38]
   140011f54:	mov    rbx,QWORD PTR [rsp+0x30]
   140011f59:	mov    rax,QWORD PTR [rsi]
   140011f5c:	mov    rdx,rbp
   140011f5f:	mov    rcx,rsi
   140011f62:	mov    rbp,QWORD PTR [rsp+0x40]
   140011f67:	add    rsp,0x20
   140011f6b:	pop    rsi
   140011f6c:	rex.W jmp QWORD PTR [rax+0x490]
   140011f73:	int3   
   140011f74:	int3   
   140011f75:	int3   
   140011f76:	int3   
   140011f77:	int3   
   140011f78:	int3   
   140011f79:	int3   
   140011f7a:	int3   
   140011f7b:	int3   
   140011f7c:	int3   
   140011f7d:	int3   
   140011f7e:	int3   
   140011f7f:	int3   
   140011f80:	mov    QWORD PTR [rsp+0x10],rbx
   140011f85:	push   rsi
   140011f86:	sub    rsp,0x20
   140011f8a:	mov    rax,QWORD PTR [rdx]
   140011f8d:	mov    rbx,rdx
   140011f90:	mov    rsi,rcx
   140011f93:	mov    rdx,rcx
   140011f96:	mov    rcx,rbx
   140011f99:	call   QWORD PTR [rax+0x1a8]
   140011f9f:	test   al,al
   140011fa1:	je     0x140011fde
   140011fa3:	mov    QWORD PTR [rsp+0x30],rdi
   140011fa8:	mov    rdi,QWORD PTR [rsi+0x10]
   140011fac:	test   rdi,rdi
   140011faf:	je     0x140011fd9
   140011fb1:	mov    rax,QWORD PTR [rbx]
   140011fb4:	mov    rdx,rdi
   140011fb7:	mov    rcx,rbx
   140011fba:	call   QWORD PTR [rax+0x8]
   140011fbd:	test   al,al
   140011fbf:	je     0x140011fcd
   140011fc1:	mov    rax,QWORD PTR [rdi]
   140011fc4:	mov    rdx,rbx
   140011fc7:	mov    rcx,rdi
   140011fca:	call   QWORD PTR [rax+0x28]
   140011fcd:	mov    rax,QWORD PTR [rbx]
   140011fd0:	mov    rdx,rdi
   140011fd3:	mov    rcx,rbx
   140011fd6:	call   QWORD PTR [rax+0x10]
   140011fd9:	mov    rdi,QWORD PTR [rsp+0x30]
   140011fde:	mov    rax,QWORD PTR [rbx]
   140011fe1:	mov    rdx,rsi
   140011fe4:	mov    rcx,rbx
   140011fe7:	mov    rbx,QWORD PTR [rsp+0x38]
   140011fec:	add    rsp,0x20
   140011ff0:	pop    rsi
   140011ff1:	rex.W jmp QWORD PTR [rax+0x488]
   140011ff8:	int3   
   140011ff9:	int3   
   140011ffa:	int3   
   140011ffb:	int3   
   140011ffc:	int3   
   140011ffd:	int3   
   140011ffe:	int3   
   140011fff:	int3   
   140012000:	mov    QWORD PTR [rsp+0x10],rbx
   140012005:	push   rsi
   140012006:	sub    rsp,0x20
   14001200a:	mov    rax,QWORD PTR [rdx]
   14001200d:	mov    rbx,rdx
   140012010:	mov    rsi,rcx
   140012013:	mov    rdx,rcx
   140012016:	mov    rcx,rbx
   140012019:	call   QWORD PTR [rax+0x1a0]
   14001201f:	test   al,al
   140012021:	je     0x14001205e
   140012023:	mov    QWORD PTR [rsp+0x30],rdi
   140012028:	mov    rdi,QWORD PTR [rsi+0x10]
   14001202c:	test   rdi,rdi
   14001202f:	je     0x140012059
   140012031:	mov    rax,QWORD PTR [rbx]
   140012034:	mov    rdx,rdi
   140012037:	mov    rcx,rbx
   14001203a:	call   QWORD PTR [rax+0x8]
   14001203d:	test   al,al
   14001203f:	je     0x14001204d
   140012041:	mov    rax,QWORD PTR [rdi]
   140012044:	mov    rdx,rbx
   140012047:	mov    rcx,rdi
   14001204a:	call   QWORD PTR [rax+0x28]
   14001204d:	mov    rax,QWORD PTR [rbx]
   140012050:	mov    rdx,rdi
   140012053:	mov    rcx,rbx
   140012056:	call   QWORD PTR [rax+0x10]
   140012059:	mov    rdi,QWORD PTR [rsp+0x30]
   14001205e:	mov    rax,QWORD PTR [rbx]
   140012061:	mov    rdx,rsi
   140012064:	mov    rcx,rbx
   140012067:	mov    rbx,QWORD PTR [rsp+0x38]
   14001206c:	add    rsp,0x20
   140012070:	pop    rsi
   140012071:	rex.W jmp QWORD PTR [rax+0x480]
   140012078:	int3   
   140012079:	int3   
   14001207a:	int3   
   14001207b:	int3   
   14001207c:	int3   
   14001207d:	int3   
   14001207e:	int3   
   14001207f:	int3   
   140012080:	mov    QWORD PTR [rsp+0x10],rbx
   140012085:	push   rsi
   140012086:	sub    rsp,0x20
   14001208a:	mov    rax,QWORD PTR [rdx]
   14001208d:	mov    rbx,rdx
   140012090:	mov    rsi,rcx
   140012093:	mov    rdx,rcx
   140012096:	mov    rcx,rbx
   140012099:	call   QWORD PTR [rax+0x198]
   14001209f:	test   al,al
   1400120a1:	je     0x1400120de
   1400120a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400120a8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400120ac:	test   rdi,rdi
   1400120af:	je     0x1400120d9
   1400120b1:	mov    rax,QWORD PTR [rbx]
   1400120b4:	mov    rdx,rdi
   1400120b7:	mov    rcx,rbx
   1400120ba:	call   QWORD PTR [rax+0x8]
   1400120bd:	test   al,al
   1400120bf:	je     0x1400120cd
   1400120c1:	mov    rax,QWORD PTR [rdi]
   1400120c4:	mov    rdx,rbx
   1400120c7:	mov    rcx,rdi
   1400120ca:	call   QWORD PTR [rax+0x28]
   1400120cd:	mov    rax,QWORD PTR [rbx]
   1400120d0:	mov    rdx,rdi
   1400120d3:	mov    rcx,rbx
   1400120d6:	call   QWORD PTR [rax+0x10]
   1400120d9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400120de:	mov    rax,QWORD PTR [rbx]
   1400120e1:	mov    rdx,rsi
   1400120e4:	mov    rcx,rbx
   1400120e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400120ec:	add    rsp,0x20
   1400120f0:	pop    rsi
   1400120f1:	rex.W jmp QWORD PTR [rax+0x478]
   1400120f8:	int3   
   1400120f9:	int3   
   1400120fa:	int3   
   1400120fb:	int3   
   1400120fc:	int3   
   1400120fd:	int3   
   1400120fe:	int3   
   1400120ff:	int3   
   140012100:	mov    QWORD PTR [rsp+0x10],rbx
   140012105:	push   rsi
   140012106:	sub    rsp,0x20
   14001210a:	mov    rax,QWORD PTR [rdx]
   14001210d:	mov    rbx,rdx
   140012110:	mov    rsi,rcx
   140012113:	mov    rdx,rcx
   140012116:	mov    rcx,rbx
   140012119:	call   QWORD PTR [rax+0x190]
   14001211f:	test   al,al
   140012121:	je     0x14001215e
   140012123:	mov    QWORD PTR [rsp+0x30],rdi
   140012128:	mov    rdi,QWORD PTR [rsi+0x10]
   14001212c:	test   rdi,rdi
   14001212f:	je     0x140012159
   140012131:	mov    rax,QWORD PTR [rbx]
   140012134:	mov    rdx,rdi
   140012137:	mov    rcx,rbx
   14001213a:	call   QWORD PTR [rax+0x8]
   14001213d:	test   al,al
   14001213f:	je     0x14001214d
   140012141:	mov    rax,QWORD PTR [rdi]
   140012144:	mov    rdx,rbx
   140012147:	mov    rcx,rdi
   14001214a:	call   QWORD PTR [rax+0x28]
   14001214d:	mov    rax,QWORD PTR [rbx]
   140012150:	mov    rdx,rdi
   140012153:	mov    rcx,rbx
   140012156:	call   QWORD PTR [rax+0x10]
   140012159:	mov    rdi,QWORD PTR [rsp+0x30]
   14001215e:	mov    rax,QWORD PTR [rbx]
   140012161:	mov    rdx,rsi
   140012164:	mov    rcx,rbx
   140012167:	mov    rbx,QWORD PTR [rsp+0x38]
   14001216c:	add    rsp,0x20
   140012170:	pop    rsi
   140012171:	rex.W jmp QWORD PTR [rax+0x470]
   140012178:	int3   
   140012179:	int3   
   14001217a:	int3   
   14001217b:	int3   
   14001217c:	int3   
   14001217d:	int3   
   14001217e:	int3   
   14001217f:	int3   
   140012180:	mov    QWORD PTR [rsp+0x10],rbx
   140012185:	push   rsi
   140012186:	sub    rsp,0x20
   14001218a:	mov    rax,QWORD PTR [rdx]
   14001218d:	mov    rbx,rdx
   140012190:	mov    rsi,rcx
   140012193:	mov    rdx,rcx
   140012196:	mov    rcx,rbx
   140012199:	call   QWORD PTR [rax+0x188]
   14001219f:	test   al,al
   1400121a1:	je     0x1400121de
   1400121a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400121a8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400121ac:	test   rdi,rdi
   1400121af:	je     0x1400121d9
   1400121b1:	mov    rax,QWORD PTR [rbx]
   1400121b4:	mov    rdx,rdi
   1400121b7:	mov    rcx,rbx
   1400121ba:	call   QWORD PTR [rax+0x8]
   1400121bd:	test   al,al
   1400121bf:	je     0x1400121cd
   1400121c1:	mov    rax,QWORD PTR [rdi]
   1400121c4:	mov    rdx,rbx
   1400121c7:	mov    rcx,rdi
   1400121ca:	call   QWORD PTR [rax+0x28]
   1400121cd:	mov    rax,QWORD PTR [rbx]
   1400121d0:	mov    rdx,rdi
   1400121d3:	mov    rcx,rbx
   1400121d6:	call   QWORD PTR [rax+0x10]
   1400121d9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400121de:	mov    rax,QWORD PTR [rbx]
   1400121e1:	mov    rdx,rsi
   1400121e4:	mov    rcx,rbx
   1400121e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400121ec:	add    rsp,0x20
   1400121f0:	pop    rsi
   1400121f1:	rex.W jmp QWORD PTR [rax+0x468]
   1400121f8:	int3   
   1400121f9:	int3   
   1400121fa:	int3   
   1400121fb:	int3   
   1400121fc:	int3   
   1400121fd:	int3   
   1400121fe:	int3   
   1400121ff:	int3   
   140012200:	mov    QWORD PTR [rsp+0x10],rbx
   140012205:	push   rsi
   140012206:	sub    rsp,0x20
   14001220a:	mov    rax,QWORD PTR [rdx]
   14001220d:	mov    rbx,rdx
   140012210:	mov    rsi,rcx
   140012213:	mov    rdx,rcx
   140012216:	mov    rcx,rbx
   140012219:	call   QWORD PTR [rax+0x180]
   14001221f:	test   al,al
   140012221:	je     0x14001225e
   140012223:	mov    QWORD PTR [rsp+0x30],rdi
   140012228:	mov    rdi,QWORD PTR [rsi+0x10]
   14001222c:	test   rdi,rdi
   14001222f:	je     0x140012259
   140012231:	mov    rax,QWORD PTR [rbx]
   140012234:	mov    rdx,rdi
   140012237:	mov    rcx,rbx
   14001223a:	call   QWORD PTR [rax+0x8]
   14001223d:	test   al,al
   14001223f:	je     0x14001224d
   140012241:	mov    rax,QWORD PTR [rdi]
   140012244:	mov    rdx,rbx
   140012247:	mov    rcx,rdi
   14001224a:	call   QWORD PTR [rax+0x28]
   14001224d:	mov    rax,QWORD PTR [rbx]
   140012250:	mov    rdx,rdi
   140012253:	mov    rcx,rbx
   140012256:	call   QWORD PTR [rax+0x10]
   140012259:	mov    rdi,QWORD PTR [rsp+0x30]
   14001225e:	mov    rax,QWORD PTR [rbx]
   140012261:	mov    rdx,rsi
   140012264:	mov    rcx,rbx
   140012267:	mov    rbx,QWORD PTR [rsp+0x38]
   14001226c:	add    rsp,0x20
   140012270:	pop    rsi
   140012271:	rex.W jmp QWORD PTR [rax+0x460]
   140012278:	int3   
   140012279:	int3   
   14001227a:	int3   
   14001227b:	int3   
   14001227c:	int3   
   14001227d:	int3   
   14001227e:	int3   
   14001227f:	int3   
   140012280:	mov    QWORD PTR [rsp+0x10],rbx
   140012285:	push   rsi
   140012286:	sub    rsp,0x20
   14001228a:	mov    rax,QWORD PTR [rdx]
   14001228d:	mov    rbx,rdx
   140012290:	mov    rsi,rcx
   140012293:	mov    rdx,rcx
   140012296:	mov    rcx,rbx
   140012299:	call   QWORD PTR [rax+0x178]
   14001229f:	test   al,al
   1400122a1:	je     0x1400122de
   1400122a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400122a8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400122ac:	test   rdi,rdi
   1400122af:	je     0x1400122d9
   1400122b1:	mov    rax,QWORD PTR [rbx]
   1400122b4:	mov    rdx,rdi
   1400122b7:	mov    rcx,rbx
   1400122ba:	call   QWORD PTR [rax+0x8]
   1400122bd:	test   al,al
   1400122bf:	je     0x1400122cd
   1400122c1:	mov    rax,QWORD PTR [rdi]
   1400122c4:	mov    rdx,rbx
   1400122c7:	mov    rcx,rdi
   1400122ca:	call   QWORD PTR [rax+0x28]
   1400122cd:	mov    rax,QWORD PTR [rbx]
   1400122d0:	mov    rdx,rdi
   1400122d3:	mov    rcx,rbx
   1400122d6:	call   QWORD PTR [rax+0x10]
   1400122d9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400122de:	mov    rax,QWORD PTR [rbx]
   1400122e1:	mov    rdx,rsi
   1400122e4:	mov    rcx,rbx
   1400122e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400122ec:	add    rsp,0x20
   1400122f0:	pop    rsi
   1400122f1:	rex.W jmp QWORD PTR [rax+0x458]
   1400122f8:	int3   
   1400122f9:	int3   
   1400122fa:	int3   
   1400122fb:	int3   
   1400122fc:	int3   
   1400122fd:	int3   
   1400122fe:	int3   
   1400122ff:	int3   
   140012300:	mov    QWORD PTR [rsp+0x10],rbx
   140012305:	push   rsi
   140012306:	sub    rsp,0x20
   14001230a:	mov    rax,QWORD PTR [rdx]
   14001230d:	mov    rbx,rdx
   140012310:	mov    rsi,rcx
   140012313:	mov    rdx,rcx
   140012316:	mov    rcx,rbx
   140012319:	call   QWORD PTR [rax+0x170]
   14001231f:	test   al,al
   140012321:	je     0x14001235e
   140012323:	mov    QWORD PTR [rsp+0x30],rdi
   140012328:	mov    rdi,QWORD PTR [rsi+0x10]
   14001232c:	test   rdi,rdi
   14001232f:	je     0x140012359
   140012331:	mov    rax,QWORD PTR [rbx]
   140012334:	mov    rdx,rdi
   140012337:	mov    rcx,rbx
   14001233a:	call   QWORD PTR [rax+0x8]
   14001233d:	test   al,al
   14001233f:	je     0x14001234d
   140012341:	mov    rax,QWORD PTR [rdi]
   140012344:	mov    rdx,rbx
   140012347:	mov    rcx,rdi
   14001234a:	call   QWORD PTR [rax+0x28]
   14001234d:	mov    rax,QWORD PTR [rbx]
   140012350:	mov    rdx,rdi
   140012353:	mov    rcx,rbx
   140012356:	call   QWORD PTR [rax+0x10]
   140012359:	mov    rdi,QWORD PTR [rsp+0x30]
   14001235e:	mov    rax,QWORD PTR [rbx]
   140012361:	mov    rdx,rsi
   140012364:	mov    rcx,rbx
   140012367:	mov    rbx,QWORD PTR [rsp+0x38]
   14001236c:	add    rsp,0x20
   140012370:	pop    rsi
   140012371:	rex.W jmp QWORD PTR [rax+0x450]
   140012378:	int3   
   140012379:	int3   
   14001237a:	int3   
   14001237b:	int3   
   14001237c:	int3   
   14001237d:	int3   
   14001237e:	int3   
   14001237f:	int3   
   140012380:	mov    QWORD PTR [rsp+0x10],rbx
   140012385:	push   rsi
   140012386:	sub    rsp,0x20
   14001238a:	mov    rax,QWORD PTR [rdx]
   14001238d:	mov    rbx,rdx
   140012390:	mov    rsi,rcx
   140012393:	mov    rdx,rcx
   140012396:	mov    rcx,rbx
   140012399:	call   QWORD PTR [rax+0x168]
   14001239f:	test   al,al
   1400123a1:	je     0x1400123de
   1400123a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400123a8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400123ac:	test   rdi,rdi
   1400123af:	je     0x1400123d9
   1400123b1:	mov    rax,QWORD PTR [rbx]
   1400123b4:	mov    rdx,rdi
   1400123b7:	mov    rcx,rbx
   1400123ba:	call   QWORD PTR [rax+0x8]
   1400123bd:	test   al,al
   1400123bf:	je     0x1400123cd
   1400123c1:	mov    rax,QWORD PTR [rdi]
   1400123c4:	mov    rdx,rbx
   1400123c7:	mov    rcx,rdi
   1400123ca:	call   QWORD PTR [rax+0x28]
   1400123cd:	mov    rax,QWORD PTR [rbx]
   1400123d0:	mov    rdx,rdi
   1400123d3:	mov    rcx,rbx
   1400123d6:	call   QWORD PTR [rax+0x10]
   1400123d9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400123de:	mov    rax,QWORD PTR [rbx]
   1400123e1:	mov    rdx,rsi
   1400123e4:	mov    rcx,rbx
   1400123e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400123ec:	add    rsp,0x20
   1400123f0:	pop    rsi
   1400123f1:	rex.W jmp QWORD PTR [rax+0x448]
   1400123f8:	int3   
   1400123f9:	int3   
   1400123fa:	int3   
   1400123fb:	int3   
   1400123fc:	int3   
   1400123fd:	int3   
   1400123fe:	int3   
   1400123ff:	int3   
   140012400:	mov    QWORD PTR [rsp+0x10],rbx
   140012405:	push   rsi
   140012406:	sub    rsp,0x20
   14001240a:	mov    rax,QWORD PTR [rdx]
   14001240d:	mov    rbx,rdx
   140012410:	mov    rsi,rcx
   140012413:	mov    rdx,rcx
   140012416:	mov    rcx,rbx
   140012419:	call   QWORD PTR [rax+0x160]
   14001241f:	test   al,al
   140012421:	je     0x14001245e
   140012423:	mov    QWORD PTR [rsp+0x30],rdi
   140012428:	mov    rdi,QWORD PTR [rsi+0x10]
   14001242c:	test   rdi,rdi
   14001242f:	je     0x140012459
   140012431:	mov    rax,QWORD PTR [rbx]
   140012434:	mov    rdx,rdi
   140012437:	mov    rcx,rbx
   14001243a:	call   QWORD PTR [rax+0x8]
   14001243d:	test   al,al
   14001243f:	je     0x14001244d
   140012441:	mov    rax,QWORD PTR [rdi]
   140012444:	mov    rdx,rbx
   140012447:	mov    rcx,rdi
   14001244a:	call   QWORD PTR [rax+0x28]
   14001244d:	mov    rax,QWORD PTR [rbx]
   140012450:	mov    rdx,rdi
   140012453:	mov    rcx,rbx
   140012456:	call   QWORD PTR [rax+0x10]
   140012459:	mov    rdi,QWORD PTR [rsp+0x30]
   14001245e:	mov    rax,QWORD PTR [rbx]
   140012461:	mov    rdx,rsi
   140012464:	mov    rcx,rbx
   140012467:	mov    rbx,QWORD PTR [rsp+0x38]
   14001246c:	add    rsp,0x20
   140012470:	pop    rsi
   140012471:	rex.W jmp QWORD PTR [rax+0x440]
   140012478:	int3   
   140012479:	int3   
   14001247a:	int3   
   14001247b:	int3   
   14001247c:	int3   
   14001247d:	int3   
   14001247e:	int3   
   14001247f:	int3   
   140012480:	mov    QWORD PTR [rsp+0x10],rbx
   140012485:	push   rsi
   140012486:	sub    rsp,0x20
   14001248a:	mov    rax,QWORD PTR [rdx]
   14001248d:	mov    rbx,rdx
   140012490:	mov    rsi,rcx
   140012493:	mov    rdx,rcx
   140012496:	mov    rcx,rbx
   140012499:	call   QWORD PTR [rax+0x158]
   14001249f:	test   al,al
   1400124a1:	je     0x1400124de
   1400124a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400124a8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400124ac:	test   rdi,rdi
   1400124af:	je     0x1400124d9
   1400124b1:	mov    rax,QWORD PTR [rbx]
   1400124b4:	mov    rdx,rdi
   1400124b7:	mov    rcx,rbx
   1400124ba:	call   QWORD PTR [rax+0x8]
   1400124bd:	test   al,al
   1400124bf:	je     0x1400124cd
   1400124c1:	mov    rax,QWORD PTR [rdi]
   1400124c4:	mov    rdx,rbx
   1400124c7:	mov    rcx,rdi
   1400124ca:	call   QWORD PTR [rax+0x28]
   1400124cd:	mov    rax,QWORD PTR [rbx]
   1400124d0:	mov    rdx,rdi
   1400124d3:	mov    rcx,rbx
   1400124d6:	call   QWORD PTR [rax+0x10]
   1400124d9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400124de:	mov    rax,QWORD PTR [rbx]
   1400124e1:	mov    rdx,rsi
   1400124e4:	mov    rcx,rbx
   1400124e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400124ec:	add    rsp,0x20
   1400124f0:	pop    rsi
   1400124f1:	rex.W jmp QWORD PTR [rax+0x438]
   1400124f8:	int3   
   1400124f9:	int3   
   1400124fa:	int3   
   1400124fb:	int3   
   1400124fc:	int3   
   1400124fd:	int3   
   1400124fe:	int3   
   1400124ff:	int3   
   140012500:	mov    QWORD PTR [rsp+0x10],rbx
   140012505:	push   rsi
   140012506:	sub    rsp,0x20
   14001250a:	mov    rax,QWORD PTR [rdx]
   14001250d:	mov    rbx,rdx
   140012510:	mov    rsi,rcx
   140012513:	mov    rdx,rcx
   140012516:	mov    rcx,rbx
   140012519:	call   QWORD PTR [rax+0x150]
   14001251f:	test   al,al
   140012521:	je     0x14001258f
   140012523:	mov    QWORD PTR [rsp+0x30],rdi
   140012528:	mov    rdi,QWORD PTR [rsi+0x10]
   14001252c:	test   rdi,rdi
   14001252f:	je     0x140012559
   140012531:	mov    rax,QWORD PTR [rbx]
   140012534:	mov    rdx,rdi
   140012537:	mov    rcx,rbx
   14001253a:	call   QWORD PTR [rax+0x8]
   14001253d:	test   al,al
   14001253f:	je     0x14001254d
   140012541:	mov    rax,QWORD PTR [rdi]
   140012544:	mov    rdx,rbx
   140012547:	mov    rcx,rdi
   14001254a:	call   QWORD PTR [rax+0x28]
   14001254d:	mov    rax,QWORD PTR [rbx]
   140012550:	mov    rdx,rdi
   140012553:	mov    rcx,rbx
   140012556:	call   QWORD PTR [rax+0x10]
   140012559:	mov    rdi,QWORD PTR [rsi+0x20]
   14001255d:	test   rdi,rdi
   140012560:	je     0x14001258a
   140012562:	mov    rax,QWORD PTR [rbx]
   140012565:	mov    rdx,rdi
   140012568:	mov    rcx,rbx
   14001256b:	call   QWORD PTR [rax+0x8]
   14001256e:	test   al,al
   140012570:	je     0x14001257e
   140012572:	mov    rax,QWORD PTR [rdi]
   140012575:	mov    rdx,rbx
   140012578:	mov    rcx,rdi
   14001257b:	call   QWORD PTR [rax+0x28]
   14001257e:	mov    rax,QWORD PTR [rbx]
   140012581:	mov    rdx,rdi
   140012584:	mov    rcx,rbx
   140012587:	call   QWORD PTR [rax+0x10]
   14001258a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001258f:	mov    rax,QWORD PTR [rbx]
   140012592:	mov    rdx,rsi
   140012595:	mov    rcx,rbx
   140012598:	mov    rbx,QWORD PTR [rsp+0x38]
   14001259d:	add    rsp,0x20
   1400125a1:	pop    rsi
   1400125a2:	rex.W jmp QWORD PTR [rax+0x430]
   1400125a9:	int3   
   1400125aa:	int3   
   1400125ab:	int3   
   1400125ac:	int3   
   1400125ad:	int3   
   1400125ae:	int3   
   1400125af:	int3   
   1400125b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400125b5:	push   rsi
   1400125b6:	sub    rsp,0x20
   1400125ba:	mov    rax,QWORD PTR [rdx]
   1400125bd:	mov    rbx,rdx
   1400125c0:	mov    rsi,rcx
   1400125c3:	mov    rdx,rcx
   1400125c6:	mov    rcx,rbx
   1400125c9:	call   QWORD PTR [rax+0x148]
   1400125cf:	test   al,al
   1400125d1:	je     0x140012674
   1400125d7:	mov    QWORD PTR [rsp+0x30],rdi
   1400125dc:	mov    rdi,QWORD PTR [rsi+0x10]
   1400125e0:	test   rdi,rdi
   1400125e3:	je     0x14001260d
   1400125e5:	mov    rax,QWORD PTR [rbx]
   1400125e8:	mov    rdx,rdi
   1400125eb:	mov    rcx,rbx
   1400125ee:	call   QWORD PTR [rax+0x8]
   1400125f1:	test   al,al
   1400125f3:	je     0x140012601
   1400125f5:	mov    rax,QWORD PTR [rdi]
   1400125f8:	mov    rdx,rbx
   1400125fb:	mov    rcx,rdi
   1400125fe:	call   QWORD PTR [rax+0x28]
   140012601:	mov    rax,QWORD PTR [rbx]
   140012604:	mov    rdx,rdi
   140012607:	mov    rcx,rbx
   14001260a:	call   QWORD PTR [rax+0x10]
   14001260d:	mov    rdi,QWORD PTR [rsi+0x18]
   140012611:	test   rdi,rdi
   140012614:	je     0x14001263e
   140012616:	mov    rax,QWORD PTR [rbx]
   140012619:	mov    rdx,rdi
   14001261c:	mov    rcx,rbx
   14001261f:	call   QWORD PTR [rax+0x8]
   140012622:	test   al,al
   140012624:	je     0x140012632
   140012626:	mov    rax,QWORD PTR [rdi]
   140012629:	mov    rdx,rbx
   14001262c:	mov    rcx,rdi
   14001262f:	call   QWORD PTR [rax+0x28]
   140012632:	mov    rax,QWORD PTR [rbx]
   140012635:	mov    rdx,rdi
   140012638:	mov    rcx,rbx
   14001263b:	call   QWORD PTR [rax+0x10]
   14001263e:	mov    rdi,QWORD PTR [rsi+0x20]
   140012642:	test   rdi,rdi
   140012645:	je     0x14001266f
   140012647:	mov    rax,QWORD PTR [rbx]
   14001264a:	mov    rdx,rdi
   14001264d:	mov    rcx,rbx
   140012650:	call   QWORD PTR [rax+0x8]
   140012653:	test   al,al
   140012655:	je     0x140012663
   140012657:	mov    rax,QWORD PTR [rdi]
   14001265a:	mov    rdx,rbx
   14001265d:	mov    rcx,rdi
   140012660:	call   QWORD PTR [rax+0x28]
   140012663:	mov    rax,QWORD PTR [rbx]
   140012666:	mov    rdx,rdi
   140012669:	mov    rcx,rbx
   14001266c:	call   QWORD PTR [rax+0x10]
   14001266f:	mov    rdi,QWORD PTR [rsp+0x30]
   140012674:	mov    rax,QWORD PTR [rbx]
   140012677:	mov    rdx,rsi
   14001267a:	mov    rcx,rbx
   14001267d:	mov    rbx,QWORD PTR [rsp+0x38]
   140012682:	add    rsp,0x20
   140012686:	pop    rsi
   140012687:	rex.W jmp QWORD PTR [rax+0x428]
   14001268e:	int3   
   14001268f:	int3   
   140012690:	mov    QWORD PTR [rsp+0x10],rbx
   140012695:	push   rsi
   140012696:	sub    rsp,0x20
   14001269a:	mov    rax,QWORD PTR [rdx]
   14001269d:	mov    rbx,rdx
   1400126a0:	mov    rsi,rcx
   1400126a3:	mov    rdx,rcx
   1400126a6:	mov    rcx,rbx
   1400126a9:	call   QWORD PTR [rax+0x140]
   1400126af:	test   al,al
   1400126b1:	je     0x14001271f
   1400126b3:	mov    QWORD PTR [rsp+0x30],rdi
   1400126b8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400126bc:	test   rdi,rdi
   1400126bf:	je     0x1400126e9
   1400126c1:	mov    rax,QWORD PTR [rbx]
   1400126c4:	mov    rdx,rdi
   1400126c7:	mov    rcx,rbx
   1400126ca:	call   QWORD PTR [rax+0x8]
   1400126cd:	test   al,al
   1400126cf:	je     0x1400126dd
   1400126d1:	mov    rax,QWORD PTR [rdi]
   1400126d4:	mov    rdx,rbx
   1400126d7:	mov    rcx,rdi
   1400126da:	call   QWORD PTR [rax+0x28]
   1400126dd:	mov    rax,QWORD PTR [rbx]
   1400126e0:	mov    rdx,rdi
   1400126e3:	mov    rcx,rbx
   1400126e6:	call   QWORD PTR [rax+0x10]
   1400126e9:	mov    rdi,QWORD PTR [rsi+0x18]
   1400126ed:	test   rdi,rdi
   1400126f0:	je     0x14001271a
   1400126f2:	mov    rax,QWORD PTR [rbx]
   1400126f5:	mov    rdx,rdi
   1400126f8:	mov    rcx,rbx
   1400126fb:	call   QWORD PTR [rax+0x8]
   1400126fe:	test   al,al
   140012700:	je     0x14001270e
   140012702:	mov    rax,QWORD PTR [rdi]
   140012705:	mov    rdx,rbx
   140012708:	mov    rcx,rdi
   14001270b:	call   QWORD PTR [rax+0x28]
   14001270e:	mov    rax,QWORD PTR [rbx]
   140012711:	mov    rdx,rdi
   140012714:	mov    rcx,rbx
   140012717:	call   QWORD PTR [rax+0x10]
   14001271a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001271f:	mov    rax,QWORD PTR [rbx]
   140012722:	mov    rdx,rsi
   140012725:	mov    rcx,rbx
   140012728:	mov    rbx,QWORD PTR [rsp+0x38]
   14001272d:	add    rsp,0x20
   140012731:	pop    rsi
   140012732:	rex.W jmp QWORD PTR [rax+0x420]
   140012739:	int3   
   14001273a:	int3   
   14001273b:	int3   
   14001273c:	int3   
   14001273d:	int3   
   14001273e:	int3   
   14001273f:	int3   
   140012740:	mov    QWORD PTR [rsp+0x10],rbx
   140012745:	push   rsi
   140012746:	sub    rsp,0x20
   14001274a:	mov    rax,QWORD PTR [rdx]
   14001274d:	mov    rbx,rdx
   140012750:	mov    rsi,rcx
   140012753:	mov    rdx,rcx
   140012756:	mov    rcx,rbx
   140012759:	call   QWORD PTR [rax+0x138]
   14001275f:	test   al,al
   140012761:	je     0x14001279e
   140012763:	mov    QWORD PTR [rsp+0x30],rdi
   140012768:	mov    rdi,QWORD PTR [rsi+0x10]
   14001276c:	test   rdi,rdi
   14001276f:	je     0x140012799
   140012771:	mov    rax,QWORD PTR [rbx]
   140012774:	mov    rdx,rdi
   140012777:	mov    rcx,rbx
   14001277a:	call   QWORD PTR [rax+0x8]
   14001277d:	test   al,al
   14001277f:	je     0x14001278d
   140012781:	mov    rax,QWORD PTR [rdi]
   140012784:	mov    rdx,rbx
   140012787:	mov    rcx,rdi
   14001278a:	call   QWORD PTR [rax+0x28]
   14001278d:	mov    rax,QWORD PTR [rbx]
   140012790:	mov    rdx,rdi
   140012793:	mov    rcx,rbx
   140012796:	call   QWORD PTR [rax+0x10]
   140012799:	mov    rdi,QWORD PTR [rsp+0x30]
   14001279e:	mov    rax,QWORD PTR [rbx]
   1400127a1:	mov    rdx,rsi
   1400127a4:	mov    rcx,rbx
   1400127a7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400127ac:	add    rsp,0x20
   1400127b0:	pop    rsi
   1400127b1:	rex.W jmp QWORD PTR [rax+0x418]
   1400127b8:	int3   
   1400127b9:	int3   
   1400127ba:	int3   
   1400127bb:	int3   
   1400127bc:	int3   
   1400127bd:	int3   
   1400127be:	int3   
   1400127bf:	int3   
   1400127c0:	mov    QWORD PTR [rsp+0x18],rbp
   1400127c5:	push   rsi
   1400127c6:	sub    rsp,0x20
   1400127ca:	mov    rax,QWORD PTR [rdx]
   1400127cd:	mov    rsi,rdx
   1400127d0:	mov    rbp,rcx
   1400127d3:	mov    rdx,rcx
   1400127d6:	mov    rcx,rsi
   1400127d9:	call   QWORD PTR [rax+0x130]
   1400127df:	test   al,al
   1400127e1:	je     0x140012839
   1400127e3:	mov    QWORD PTR [rsp+0x30],rbx
   1400127e8:	mov    rbx,rbp
   1400127eb:	test   rbp,rbp
   1400127ee:	je     0x140012834
   1400127f0:	mov    QWORD PTR [rsp+0x38],rdi
   1400127f5:	mov    rdi,QWORD PTR [rbx+0x10]
   1400127f9:	test   rdi,rdi
   1400127fc:	je     0x140012826
   1400127fe:	mov    rax,QWORD PTR [rsi]
   140012801:	mov    rdx,rdi
   140012804:	mov    rcx,rsi
   140012807:	call   QWORD PTR [rax+0x8]
   14001280a:	test   al,al
   14001280c:	je     0x14001281a
   14001280e:	mov    rax,QWORD PTR [rdi]
   140012811:	mov    rdx,rsi
   140012814:	mov    rcx,rdi
   140012817:	call   QWORD PTR [rax+0x28]
   14001281a:	mov    rax,QWORD PTR [rsi]
   14001281d:	mov    rdx,rdi
   140012820:	mov    rcx,rsi
   140012823:	call   QWORD PTR [rax+0x10]
   140012826:	mov    rbx,QWORD PTR [rbx+0x18]
   14001282a:	test   rbx,rbx
   14001282d:	jne    0x1400127f5
   14001282f:	mov    rdi,QWORD PTR [rsp+0x38]
   140012834:	mov    rbx,QWORD PTR [rsp+0x30]
   140012839:	mov    rax,QWORD PTR [rsi]
   14001283c:	mov    rdx,rbp
   14001283f:	mov    rcx,rsi
   140012842:	mov    rbp,QWORD PTR [rsp+0x40]
   140012847:	add    rsp,0x20
   14001284b:	pop    rsi
   14001284c:	rex.W jmp QWORD PTR [rax+0x410]
   140012853:	int3   
   140012854:	int3   
   140012855:	int3   
   140012856:	int3   
   140012857:	int3   
   140012858:	int3   
   140012859:	int3   
   14001285a:	int3   
   14001285b:	int3   
   14001285c:	int3   
   14001285d:	int3   
   14001285e:	int3   
   14001285f:	int3   
   140012860:	mov    QWORD PTR [rsp+0x10],rbx
   140012865:	push   rsi
   140012866:	sub    rsp,0x20
   14001286a:	mov    rax,QWORD PTR [rdx]
   14001286d:	mov    rbx,rdx
   140012870:	mov    rsi,rcx
   140012873:	mov    rdx,rcx
   140012876:	mov    rcx,rbx
   140012879:	call   QWORD PTR [rax+0x128]
   14001287f:	test   al,al
   140012881:	je     0x1400128be
   140012883:	mov    QWORD PTR [rsp+0x30],rdi
   140012888:	mov    rdi,QWORD PTR [rsi+0x10]
   14001288c:	test   rdi,rdi
   14001288f:	je     0x1400128b9
   140012891:	mov    rax,QWORD PTR [rbx]
   140012894:	mov    rdx,rdi
   140012897:	mov    rcx,rbx
   14001289a:	call   QWORD PTR [rax+0x8]
   14001289d:	test   al,al
   14001289f:	je     0x1400128ad
   1400128a1:	mov    rax,QWORD PTR [rdi]
   1400128a4:	mov    rdx,rbx
   1400128a7:	mov    rcx,rdi
   1400128aa:	call   QWORD PTR [rax+0x28]
   1400128ad:	mov    rax,QWORD PTR [rbx]
   1400128b0:	mov    rdx,rdi
   1400128b3:	mov    rcx,rbx
   1400128b6:	call   QWORD PTR [rax+0x10]
   1400128b9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400128be:	mov    rax,QWORD PTR [rbx]
   1400128c1:	mov    rdx,rsi
   1400128c4:	mov    rcx,rbx
   1400128c7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400128cc:	add    rsp,0x20
   1400128d0:	pop    rsi
   1400128d1:	rex.W jmp QWORD PTR [rax+0x408]
   1400128d8:	int3   
   1400128d9:	int3   
   1400128da:	int3   
   1400128db:	int3   
   1400128dc:	int3   
   1400128dd:	int3   
   1400128de:	int3   
   1400128df:	int3   
   1400128e0:	mov    QWORD PTR [rsp+0x18],rbp
   1400128e5:	push   rsi
   1400128e6:	sub    rsp,0x20
   1400128ea:	mov    rax,QWORD PTR [rdx]
   1400128ed:	mov    rsi,rdx
   1400128f0:	mov    rbp,rcx
   1400128f3:	mov    rdx,rcx
   1400128f6:	mov    rcx,rsi
   1400128f9:	call   QWORD PTR [rax+0x120]
   1400128ff:	test   al,al
   140012901:	je     0x140012959
   140012903:	mov    QWORD PTR [rsp+0x30],rbx
   140012908:	mov    rbx,rbp
   14001290b:	test   rbp,rbp
   14001290e:	je     0x140012954
   140012910:	mov    QWORD PTR [rsp+0x38],rdi
   140012915:	mov    rdi,QWORD PTR [rbx+0x10]
   140012919:	test   rdi,rdi
   14001291c:	je     0x140012946
   14001291e:	mov    rax,QWORD PTR [rsi]
   140012921:	mov    rdx,rdi
   140012924:	mov    rcx,rsi
   140012927:	call   QWORD PTR [rax+0x8]
   14001292a:	test   al,al
   14001292c:	je     0x14001293a
   14001292e:	mov    rax,QWORD PTR [rdi]
   140012931:	mov    rdx,rsi
   140012934:	mov    rcx,rdi
   140012937:	call   QWORD PTR [rax+0x28]
   14001293a:	mov    rax,QWORD PTR [rsi]
   14001293d:	mov    rdx,rdi
   140012940:	mov    rcx,rsi
   140012943:	call   QWORD PTR [rax+0x10]
   140012946:	mov    rbx,QWORD PTR [rbx+0x18]
   14001294a:	test   rbx,rbx
   14001294d:	jne    0x140012915
   14001294f:	mov    rdi,QWORD PTR [rsp+0x38]
   140012954:	mov    rbx,QWORD PTR [rsp+0x30]
   140012959:	mov    rax,QWORD PTR [rsi]
   14001295c:	mov    rdx,rbp
   14001295f:	mov    rcx,rsi
   140012962:	mov    rbp,QWORD PTR [rsp+0x40]
   140012967:	add    rsp,0x20
   14001296b:	pop    rsi
   14001296c:	rex.W jmp QWORD PTR [rax+0x400]
   140012973:	int3   
   140012974:	int3   
   140012975:	int3   
   140012976:	int3   
   140012977:	int3   
   140012978:	int3   
   140012979:	int3   
   14001297a:	int3   
   14001297b:	int3   
   14001297c:	int3   
   14001297d:	int3   
   14001297e:	int3   
   14001297f:	int3   
   140012980:	mov    QWORD PTR [rsp+0x10],rbx
   140012985:	push   rsi
   140012986:	sub    rsp,0x20
   14001298a:	mov    rax,QWORD PTR [rdx]
   14001298d:	mov    rbx,rdx
   140012990:	mov    rsi,rcx
   140012993:	mov    rdx,rcx
   140012996:	mov    rcx,rbx
   140012999:	call   QWORD PTR [rax+0x118]
   14001299f:	test   al,al
   1400129a1:	je     0x1400129de
   1400129a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400129a8:	mov    rdi,QWORD PTR [rsi+0x20]
   1400129ac:	test   rdi,rdi
   1400129af:	je     0x1400129d9
   1400129b1:	mov    rax,QWORD PTR [rbx]
   1400129b4:	mov    rdx,rdi
   1400129b7:	mov    rcx,rbx
   1400129ba:	call   QWORD PTR [rax+0x8]
   1400129bd:	test   al,al
   1400129bf:	je     0x1400129cd
   1400129c1:	mov    rax,QWORD PTR [rdi]
   1400129c4:	mov    rdx,rbx
   1400129c7:	mov    rcx,rdi
   1400129ca:	call   QWORD PTR [rax+0x28]
   1400129cd:	mov    rax,QWORD PTR [rbx]
   1400129d0:	mov    rdx,rdi
   1400129d3:	mov    rcx,rbx
   1400129d6:	call   QWORD PTR [rax+0x10]
   1400129d9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400129de:	mov    rax,QWORD PTR [rbx]
   1400129e1:	mov    rdx,rsi
   1400129e4:	mov    rcx,rbx
   1400129e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400129ec:	add    rsp,0x20
   1400129f0:	pop    rsi
   1400129f1:	rex.W jmp QWORD PTR [rax+0x3f8]
   1400129f8:	int3   
   1400129f9:	int3   
   1400129fa:	int3   
   1400129fb:	int3   
   1400129fc:	int3   
   1400129fd:	int3   
   1400129fe:	int3   
   1400129ff:	int3   
   140012a00:	mov    QWORD PTR [rsp+0x8],rbx
   140012a05:	push   rdi
   140012a06:	sub    rsp,0x20
   140012a0a:	mov    rax,QWORD PTR [rdx]
   140012a0d:	mov    rdi,rdx
   140012a10:	mov    rbx,rcx
   140012a13:	mov    rdx,rcx
   140012a16:	mov    rcx,rdi
   140012a19:	call   QWORD PTR [rax+0x110]
   140012a1f:	mov    r11,QWORD PTR [rdi]
   140012a22:	mov    rdx,rbx
   140012a25:	mov    rcx,rdi
   140012a28:	mov    rbx,QWORD PTR [rsp+0x30]
   140012a2d:	add    rsp,0x20
   140012a31:	pop    rdi
   140012a32:	rex.WB jmp QWORD PTR [r11+0x3f0]
   140012a39:	int3   
   140012a3a:	int3   
   140012a3b:	int3   
   140012a3c:	int3   
   140012a3d:	int3   
   140012a3e:	int3   
   140012a3f:	int3   
   140012a40:	mov    QWORD PTR [rsp+0x10],rbx
   140012a45:	push   rsi
   140012a46:	sub    rsp,0x20
   140012a4a:	mov    rax,QWORD PTR [rdx]
   140012a4d:	mov    rbx,rdx
   140012a50:	mov    rsi,rcx
   140012a53:	mov    rdx,rcx
   140012a56:	mov    rcx,rbx
   140012a59:	call   QWORD PTR [rax+0x108]
   140012a5f:	test   al,al
   140012a61:	je     0x140012a9e
   140012a63:	mov    QWORD PTR [rsp+0x30],rdi
   140012a68:	mov    rdi,QWORD PTR [rsi+0x10]
   140012a6c:	test   rdi,rdi
   140012a6f:	je     0x140012a99
   140012a71:	mov    rax,QWORD PTR [rbx]
   140012a74:	mov    rdx,rdi
   140012a77:	mov    rcx,rbx
   140012a7a:	call   QWORD PTR [rax+0x8]
   140012a7d:	test   al,al
   140012a7f:	je     0x140012a8d
   140012a81:	mov    rax,QWORD PTR [rdi]
   140012a84:	mov    rdx,rbx
   140012a87:	mov    rcx,rdi
   140012a8a:	call   QWORD PTR [rax+0x28]
   140012a8d:	mov    rax,QWORD PTR [rbx]
   140012a90:	mov    rdx,rdi
   140012a93:	mov    rcx,rbx
   140012a96:	call   QWORD PTR [rax+0x10]
   140012a99:	mov    rdi,QWORD PTR [rsp+0x30]
   140012a9e:	mov    rax,QWORD PTR [rbx]
   140012aa1:	mov    rdx,rsi
   140012aa4:	mov    rcx,rbx
   140012aa7:	mov    rbx,QWORD PTR [rsp+0x38]
   140012aac:	add    rsp,0x20
   140012ab0:	pop    rsi
   140012ab1:	rex.W jmp QWORD PTR [rax+0x3e8]
   140012ab8:	int3   
   140012ab9:	int3   
   140012aba:	int3   
   140012abb:	int3   
   140012abc:	int3   
   140012abd:	int3   
   140012abe:	int3   
   140012abf:	int3   
   140012ac0:	mov    QWORD PTR [rsp+0x10],rbx
   140012ac5:	push   rsi
   140012ac6:	sub    rsp,0x20
   140012aca:	mov    rax,QWORD PTR [rdx]
   140012acd:	mov    rbx,rdx
   140012ad0:	mov    rsi,rcx
   140012ad3:	mov    rdx,rcx
   140012ad6:	mov    rcx,rbx
   140012ad9:	call   QWORD PTR [rax+0x100]
   140012adf:	test   al,al
   140012ae1:	je     0x140012b84
   140012ae7:	mov    QWORD PTR [rsp+0x30],rdi
   140012aec:	mov    rdi,QWORD PTR [rsi+0x10]
   140012af0:	test   rdi,rdi
   140012af3:	je     0x140012b1d
   140012af5:	mov    rax,QWORD PTR [rbx]
   140012af8:	mov    rdx,rdi
   140012afb:	mov    rcx,rbx
   140012afe:	call   QWORD PTR [rax+0x8]
   140012b01:	test   al,al
   140012b03:	je     0x140012b11
   140012b05:	mov    rax,QWORD PTR [rdi]
   140012b08:	mov    rdx,rbx
   140012b0b:	mov    rcx,rdi
   140012b0e:	call   QWORD PTR [rax+0x28]
   140012b11:	mov    rax,QWORD PTR [rbx]
   140012b14:	mov    rdx,rdi
   140012b17:	mov    rcx,rbx
   140012b1a:	call   QWORD PTR [rax+0x10]
   140012b1d:	mov    rdi,QWORD PTR [rsi+0x18]
   140012b21:	test   rdi,rdi
   140012b24:	je     0x140012b4e
   140012b26:	mov    rax,QWORD PTR [rbx]
   140012b29:	mov    rdx,rdi
   140012b2c:	mov    rcx,rbx
   140012b2f:	call   QWORD PTR [rax+0x8]
   140012b32:	test   al,al
   140012b34:	je     0x140012b42
   140012b36:	mov    rax,QWORD PTR [rdi]
   140012b39:	mov    rdx,rbx
   140012b3c:	mov    rcx,rdi
   140012b3f:	call   QWORD PTR [rax+0x28]
   140012b42:	mov    rax,QWORD PTR [rbx]
   140012b45:	mov    rdx,rdi
   140012b48:	mov    rcx,rbx
   140012b4b:	call   QWORD PTR [rax+0x10]
   140012b4e:	mov    rdi,QWORD PTR [rsi+0x20]
   140012b52:	test   rdi,rdi
   140012b55:	je     0x140012b7f
   140012b57:	mov    rax,QWORD PTR [rbx]
   140012b5a:	mov    rdx,rdi
   140012b5d:	mov    rcx,rbx
   140012b60:	call   QWORD PTR [rax+0x8]
   140012b63:	test   al,al
   140012b65:	je     0x140012b73
   140012b67:	mov    rax,QWORD PTR [rdi]
   140012b6a:	mov    rdx,rbx
   140012b6d:	mov    rcx,rdi
   140012b70:	call   QWORD PTR [rax+0x28]
   140012b73:	mov    rax,QWORD PTR [rbx]
   140012b76:	mov    rdx,rdi
   140012b79:	mov    rcx,rbx
   140012b7c:	call   QWORD PTR [rax+0x10]
   140012b7f:	mov    rdi,QWORD PTR [rsp+0x30]
   140012b84:	mov    rax,QWORD PTR [rbx]
   140012b87:	mov    rdx,rsi
   140012b8a:	mov    rcx,rbx
   140012b8d:	mov    rbx,QWORD PTR [rsp+0x38]
   140012b92:	add    rsp,0x20
   140012b96:	pop    rsi
   140012b97:	rex.W jmp QWORD PTR [rax+0x3e0]
   140012b9e:	int3   
   140012b9f:	int3   
   140012ba0:	mov    QWORD PTR [rsp+0x10],rbx
   140012ba5:	push   rsi
   140012ba6:	sub    rsp,0x20
   140012baa:	mov    rax,QWORD PTR [rdx]
   140012bad:	mov    rbx,rdx
   140012bb0:	mov    rsi,rcx
   140012bb3:	mov    rdx,rcx
   140012bb6:	mov    rcx,rbx
   140012bb9:	call   QWORD PTR [rax+0xf8]
   140012bbf:	test   al,al
   140012bc1:	je     0x140012c2f
   140012bc3:	mov    QWORD PTR [rsp+0x30],rdi
   140012bc8:	mov    rdi,QWORD PTR [rsi+0x10]
   140012bcc:	test   rdi,rdi
   140012bcf:	je     0x140012bf9
   140012bd1:	mov    rax,QWORD PTR [rbx]
   140012bd4:	mov    rdx,rdi
   140012bd7:	mov    rcx,rbx
   140012bda:	call   QWORD PTR [rax+0x8]
   140012bdd:	test   al,al
   140012bdf:	je     0x140012bed
   140012be1:	mov    rax,QWORD PTR [rdi]
   140012be4:	mov    rdx,rbx
   140012be7:	mov    rcx,rdi
   140012bea:	call   QWORD PTR [rax+0x28]
   140012bed:	mov    rax,QWORD PTR [rbx]
   140012bf0:	mov    rdx,rdi
   140012bf3:	mov    rcx,rbx
   140012bf6:	call   QWORD PTR [rax+0x10]
   140012bf9:	mov    rdi,QWORD PTR [rsi+0x18]
   140012bfd:	test   rdi,rdi
   140012c00:	je     0x140012c2a
   140012c02:	mov    rax,QWORD PTR [rbx]
   140012c05:	mov    rdx,rdi
   140012c08:	mov    rcx,rbx
   140012c0b:	call   QWORD PTR [rax+0x8]
   140012c0e:	test   al,al
   140012c10:	je     0x140012c1e
   140012c12:	mov    rax,QWORD PTR [rdi]
   140012c15:	mov    rdx,rbx
   140012c18:	mov    rcx,rdi
   140012c1b:	call   QWORD PTR [rax+0x28]
   140012c1e:	mov    rax,QWORD PTR [rbx]
   140012c21:	mov    rdx,rdi
   140012c24:	mov    rcx,rbx
   140012c27:	call   QWORD PTR [rax+0x10]
   140012c2a:	mov    rdi,QWORD PTR [rsp+0x30]
   140012c2f:	mov    rax,QWORD PTR [rbx]
   140012c32:	mov    rdx,rsi
   140012c35:	mov    rcx,rbx
   140012c38:	mov    rbx,QWORD PTR [rsp+0x38]
   140012c3d:	add    rsp,0x20
   140012c41:	pop    rsi
   140012c42:	rex.W jmp QWORD PTR [rax+0x3d8]
   140012c49:	int3   
   140012c4a:	int3   
   140012c4b:	int3   
   140012c4c:	int3   
   140012c4d:	int3   
   140012c4e:	int3   
   140012c4f:	int3   
   140012c50:	mov    QWORD PTR [rsp+0x10],rbx
   140012c55:	push   rsi
   140012c56:	sub    rsp,0x20
   140012c5a:	mov    rax,QWORD PTR [rdx]
   140012c5d:	mov    rbx,rdx
   140012c60:	mov    rsi,rcx
   140012c63:	mov    rdx,rcx
   140012c66:	mov    rcx,rbx
   140012c69:	call   QWORD PTR [rax+0xf0]
   140012c6f:	test   al,al
   140012c71:	je     0x140012cdf
   140012c73:	mov    QWORD PTR [rsp+0x30],rdi
   140012c78:	mov    rdi,QWORD PTR [rsi+0x10]
   140012c7c:	test   rdi,rdi
   140012c7f:	je     0x140012ca9
   140012c81:	mov    rax,QWORD PTR [rbx]
   140012c84:	mov    rdx,rdi
   140012c87:	mov    rcx,rbx
   140012c8a:	call   QWORD PTR [rax+0x8]
   140012c8d:	test   al,al
   140012c8f:	je     0x140012c9d
   140012c91:	mov    rax,QWORD PTR [rdi]
   140012c94:	mov    rdx,rbx
   140012c97:	mov    rcx,rdi
   140012c9a:	call   QWORD PTR [rax+0x28]
   140012c9d:	mov    rax,QWORD PTR [rbx]
   140012ca0:	mov    rdx,rdi
   140012ca3:	mov    rcx,rbx
   140012ca6:	call   QWORD PTR [rax+0x10]
   140012ca9:	mov    rdi,QWORD PTR [rsi+0x18]
   140012cad:	test   rdi,rdi
   140012cb0:	je     0x140012cda
   140012cb2:	mov    rax,QWORD PTR [rbx]
   140012cb5:	mov    rdx,rdi
   140012cb8:	mov    rcx,rbx
   140012cbb:	call   QWORD PTR [rax+0x8]
   140012cbe:	test   al,al
   140012cc0:	je     0x140012cce
   140012cc2:	mov    rax,QWORD PTR [rdi]
   140012cc5:	mov    rdx,rbx
   140012cc8:	mov    rcx,rdi
   140012ccb:	call   QWORD PTR [rax+0x28]
   140012cce:	mov    rax,QWORD PTR [rbx]
   140012cd1:	mov    rdx,rdi
   140012cd4:	mov    rcx,rbx
   140012cd7:	call   QWORD PTR [rax+0x10]
   140012cda:	mov    rdi,QWORD PTR [rsp+0x30]
   140012cdf:	mov    rax,QWORD PTR [rbx]
   140012ce2:	mov    rdx,rsi
   140012ce5:	mov    rcx,rbx
   140012ce8:	mov    rbx,QWORD PTR [rsp+0x38]
   140012ced:	add    rsp,0x20
   140012cf1:	pop    rsi
   140012cf2:	rex.W jmp QWORD PTR [rax+0x3d0]
   140012cf9:	int3   
   140012cfa:	int3   
   140012cfb:	int3   
   140012cfc:	int3   
   140012cfd:	int3   
   140012cfe:	int3   
   140012cff:	int3   
   140012d00:	mov    QWORD PTR [rsp+0x10],rbx
   140012d05:	push   rsi
   140012d06:	sub    rsp,0x20
   140012d0a:	mov    rax,QWORD PTR [rdx]
   140012d0d:	mov    rbx,rdx
   140012d10:	mov    rsi,rcx
   140012d13:	mov    rdx,rcx
   140012d16:	mov    rcx,rbx
   140012d19:	call   QWORD PTR [rax+0xe8]
   140012d1f:	test   al,al
   140012d21:	je     0x140012df5
   140012d27:	mov    QWORD PTR [rsp+0x30],rdi
   140012d2c:	mov    rdi,QWORD PTR [rsi+0x10]
   140012d30:	test   rdi,rdi
   140012d33:	je     0x140012d5d
   140012d35:	mov    rax,QWORD PTR [rbx]
   140012d38:	mov    rdx,rdi
   140012d3b:	mov    rcx,rbx
   140012d3e:	call   QWORD PTR [rax+0x8]
   140012d41:	test   al,al
   140012d43:	je     0x140012d51
   140012d45:	mov    rax,QWORD PTR [rdi]
   140012d48:	mov    rdx,rbx
   140012d4b:	mov    rcx,rdi
   140012d4e:	call   QWORD PTR [rax+0x28]
   140012d51:	mov    rax,QWORD PTR [rbx]
   140012d54:	mov    rdx,rdi
   140012d57:	mov    rcx,rbx
   140012d5a:	call   QWORD PTR [rax+0x10]
   140012d5d:	mov    rdi,QWORD PTR [rsi+0x18]
   140012d61:	test   rdi,rdi
   140012d64:	je     0x140012d8e
   140012d66:	mov    rax,QWORD PTR [rbx]
   140012d69:	mov    rdx,rdi
   140012d6c:	mov    rcx,rbx
   140012d6f:	call   QWORD PTR [rax+0x8]
   140012d72:	test   al,al
   140012d74:	je     0x140012d82
   140012d76:	mov    rax,QWORD PTR [rdi]
   140012d79:	mov    rdx,rbx
   140012d7c:	mov    rcx,rdi
   140012d7f:	call   QWORD PTR [rax+0x28]
   140012d82:	mov    rax,QWORD PTR [rbx]
   140012d85:	mov    rdx,rdi
   140012d88:	mov    rcx,rbx
   140012d8b:	call   QWORD PTR [rax+0x10]
   140012d8e:	mov    rdi,QWORD PTR [rsi+0x20]
   140012d92:	test   rdi,rdi
   140012d95:	je     0x140012dbf
   140012d97:	mov    rax,QWORD PTR [rbx]
   140012d9a:	mov    rdx,rdi
   140012d9d:	mov    rcx,rbx
   140012da0:	call   QWORD PTR [rax+0x8]
   140012da3:	test   al,al
   140012da5:	je     0x140012db3
   140012da7:	mov    rax,QWORD PTR [rdi]
   140012daa:	mov    rdx,rbx
   140012dad:	mov    rcx,rdi
   140012db0:	call   QWORD PTR [rax+0x28]
   140012db3:	mov    rax,QWORD PTR [rbx]
   140012db6:	mov    rdx,rdi
   140012db9:	mov    rcx,rbx
   140012dbc:	call   QWORD PTR [rax+0x10]
   140012dbf:	mov    rdi,QWORD PTR [rsi+0x28]
   140012dc3:	test   rdi,rdi
   140012dc6:	je     0x140012df0
   140012dc8:	mov    rax,QWORD PTR [rbx]
   140012dcb:	mov    rdx,rdi
   140012dce:	mov    rcx,rbx
   140012dd1:	call   QWORD PTR [rax+0x8]
   140012dd4:	test   al,al
   140012dd6:	je     0x140012de4
   140012dd8:	mov    rax,QWORD PTR [rdi]
   140012ddb:	mov    rdx,rbx
   140012dde:	mov    rcx,rdi
   140012de1:	call   QWORD PTR [rax+0x28]
   140012de4:	mov    rax,QWORD PTR [rbx]
   140012de7:	mov    rdx,rdi
   140012dea:	mov    rcx,rbx
   140012ded:	call   QWORD PTR [rax+0x10]
   140012df0:	mov    rdi,QWORD PTR [rsp+0x30]
   140012df5:	mov    rax,QWORD PTR [rbx]
   140012df8:	mov    rdx,rsi
   140012dfb:	mov    rcx,rbx
   140012dfe:	mov    rbx,QWORD PTR [rsp+0x38]
   140012e03:	add    rsp,0x20
   140012e07:	pop    rsi
   140012e08:	rex.W jmp QWORD PTR [rax+0x3c8]
   140012e0f:	int3   
   140012e10:	mov    QWORD PTR [rsp+0x10],rbx
   140012e15:	push   rsi
   140012e16:	sub    rsp,0x20
   140012e1a:	mov    rax,QWORD PTR [rdx]
   140012e1d:	mov    rbx,rdx
   140012e20:	mov    rsi,rcx
   140012e23:	mov    rdx,rcx
   140012e26:	mov    rcx,rbx
   140012e29:	call   QWORD PTR [rax+0xe0]
   140012e2f:	test   al,al
   140012e31:	je     0x140012f05
   140012e37:	mov    QWORD PTR [rsp+0x30],rdi
   140012e3c:	mov    rdi,QWORD PTR [rsi+0x10]
   140012e40:	test   rdi,rdi
   140012e43:	je     0x140012e6d
   140012e45:	mov    rax,QWORD PTR [rbx]
   140012e48:	mov    rdx,rdi
   140012e4b:	mov    rcx,rbx
   140012e4e:	call   QWORD PTR [rax+0x8]
   140012e51:	test   al,al
   140012e53:	je     0x140012e61
   140012e55:	mov    rax,QWORD PTR [rdi]
   140012e58:	mov    rdx,rbx
   140012e5b:	mov    rcx,rdi
   140012e5e:	call   QWORD PTR [rax+0x28]
   140012e61:	mov    rax,QWORD PTR [rbx]
   140012e64:	mov    rdx,rdi
   140012e67:	mov    rcx,rbx
   140012e6a:	call   QWORD PTR [rax+0x10]
   140012e6d:	mov    rdi,QWORD PTR [rsi+0x18]
   140012e71:	test   rdi,rdi
   140012e74:	je     0x140012e9e
   140012e76:	mov    rax,QWORD PTR [rbx]
   140012e79:	mov    rdx,rdi
   140012e7c:	mov    rcx,rbx
   140012e7f:	call   QWORD PTR [rax+0x8]
   140012e82:	test   al,al
   140012e84:	je     0x140012e92
   140012e86:	mov    rax,QWORD PTR [rdi]
   140012e89:	mov    rdx,rbx
   140012e8c:	mov    rcx,rdi
   140012e8f:	call   QWORD PTR [rax+0x28]
   140012e92:	mov    rax,QWORD PTR [rbx]
   140012e95:	mov    rdx,rdi
   140012e98:	mov    rcx,rbx
   140012e9b:	call   QWORD PTR [rax+0x10]
   140012e9e:	mov    rdi,QWORD PTR [rsi+0x20]
   140012ea2:	test   rdi,rdi
   140012ea5:	je     0x140012ecf
   140012ea7:	mov    rax,QWORD PTR [rbx]
   140012eaa:	mov    rdx,rdi
   140012ead:	mov    rcx,rbx
   140012eb0:	call   QWORD PTR [rax+0x8]
   140012eb3:	test   al,al
   140012eb5:	je     0x140012ec3
   140012eb7:	mov    rax,QWORD PTR [rdi]
   140012eba:	mov    rdx,rbx
   140012ebd:	mov    rcx,rdi
   140012ec0:	call   QWORD PTR [rax+0x28]
   140012ec3:	mov    rax,QWORD PTR [rbx]
   140012ec6:	mov    rdx,rdi
   140012ec9:	mov    rcx,rbx
   140012ecc:	call   QWORD PTR [rax+0x10]
   140012ecf:	mov    rdi,QWORD PTR [rsi+0x28]
   140012ed3:	test   rdi,rdi
   140012ed6:	je     0x140012f00
   140012ed8:	mov    rax,QWORD PTR [rbx]
   140012edb:	mov    rdx,rdi
   140012ede:	mov    rcx,rbx
   140012ee1:	call   QWORD PTR [rax+0x8]
   140012ee4:	test   al,al
   140012ee6:	je     0x140012ef4
   140012ee8:	mov    rax,QWORD PTR [rdi]
   140012eeb:	mov    rdx,rbx
   140012eee:	mov    rcx,rdi
   140012ef1:	call   QWORD PTR [rax+0x28]
   140012ef4:	mov    rax,QWORD PTR [rbx]
   140012ef7:	mov    rdx,rdi
   140012efa:	mov    rcx,rbx
   140012efd:	call   QWORD PTR [rax+0x10]
   140012f00:	mov    rdi,QWORD PTR [rsp+0x30]
   140012f05:	mov    rax,QWORD PTR [rbx]
   140012f08:	mov    rdx,rsi
   140012f0b:	mov    rcx,rbx
   140012f0e:	mov    rbx,QWORD PTR [rsp+0x38]
   140012f13:	add    rsp,0x20
   140012f17:	pop    rsi
   140012f18:	rex.W jmp QWORD PTR [rax+0x3c0]
   140012f1f:	int3   
   140012f20:	mov    QWORD PTR [rsp+0x10],rbx
   140012f25:	push   rsi
   140012f26:	sub    rsp,0x20
   140012f2a:	mov    rax,QWORD PTR [rdx]
   140012f2d:	mov    rbx,rdx
   140012f30:	mov    rsi,rcx
   140012f33:	mov    rdx,rcx
   140012f36:	mov    rcx,rbx
   140012f39:	call   QWORD PTR [rax+0xd8]
   140012f3f:	test   al,al
   140012f41:	je     0x140012fe4
   140012f47:	mov    QWORD PTR [rsp+0x30],rdi
   140012f4c:	mov    rdi,QWORD PTR [rsi+0x10]
   140012f50:	test   rdi,rdi
   140012f53:	je     0x140012f7d
   140012f55:	mov    rax,QWORD PTR [rbx]
   140012f58:	mov    rdx,rdi
   140012f5b:	mov    rcx,rbx
   140012f5e:	call   QWORD PTR [rax+0x8]
   140012f61:	test   al,al
   140012f63:	je     0x140012f71
   140012f65:	mov    rax,QWORD PTR [rdi]
   140012f68:	mov    rdx,rbx
   140012f6b:	mov    rcx,rdi
   140012f6e:	call   QWORD PTR [rax+0x28]
   140012f71:	mov    rax,QWORD PTR [rbx]
   140012f74:	mov    rdx,rdi
   140012f77:	mov    rcx,rbx
   140012f7a:	call   QWORD PTR [rax+0x10]
   140012f7d:	mov    rdi,QWORD PTR [rsi+0x18]
   140012f81:	test   rdi,rdi
   140012f84:	je     0x140012fae
   140012f86:	mov    rax,QWORD PTR [rbx]
   140012f89:	mov    rdx,rdi
   140012f8c:	mov    rcx,rbx
   140012f8f:	call   QWORD PTR [rax+0x8]
   140012f92:	test   al,al
   140012f94:	je     0x140012fa2
   140012f96:	mov    rax,QWORD PTR [rdi]
   140012f99:	mov    rdx,rbx
   140012f9c:	mov    rcx,rdi
   140012f9f:	call   QWORD PTR [rax+0x28]
   140012fa2:	mov    rax,QWORD PTR [rbx]
   140012fa5:	mov    rdx,rdi
   140012fa8:	mov    rcx,rbx
   140012fab:	call   QWORD PTR [rax+0x10]
   140012fae:	mov    rdi,QWORD PTR [rsi+0x20]
   140012fb2:	test   rdi,rdi
   140012fb5:	je     0x140012fdf
   140012fb7:	mov    rax,QWORD PTR [rbx]
   140012fba:	mov    rdx,rdi
   140012fbd:	mov    rcx,rbx
   140012fc0:	call   QWORD PTR [rax+0x8]
   140012fc3:	test   al,al
   140012fc5:	je     0x140012fd3
   140012fc7:	mov    rax,QWORD PTR [rdi]
   140012fca:	mov    rdx,rbx
   140012fcd:	mov    rcx,rdi
   140012fd0:	call   QWORD PTR [rax+0x28]
   140012fd3:	mov    rax,QWORD PTR [rbx]
   140012fd6:	mov    rdx,rdi
   140012fd9:	mov    rcx,rbx
   140012fdc:	call   QWORD PTR [rax+0x10]
   140012fdf:	mov    rdi,QWORD PTR [rsp+0x30]
   140012fe4:	mov    rax,QWORD PTR [rbx]
   140012fe7:	mov    rdx,rsi
   140012fea:	mov    rcx,rbx
   140012fed:	mov    rbx,QWORD PTR [rsp+0x38]
   140012ff2:	add    rsp,0x20
   140012ff6:	pop    rsi
   140012ff7:	rex.W jmp QWORD PTR [rax+0x3b8]
   140012ffe:	int3   
   140012fff:	int3   
   140013000:	mov    QWORD PTR [rsp+0x10],rbx
   140013005:	push   rsi
   140013006:	sub    rsp,0x20
   14001300a:	mov    rax,QWORD PTR [rdx]
   14001300d:	mov    rbx,rdx
   140013010:	mov    rsi,rcx
   140013013:	mov    rdx,rcx
   140013016:	mov    rcx,rbx
   140013019:	call   QWORD PTR [rax+0xd0]
   14001301f:	test   al,al
   140013021:	je     0x1400130c4
   140013027:	mov    QWORD PTR [rsp+0x30],rdi
   14001302c:	mov    rdi,QWORD PTR [rsi+0x10]
   140013030:	test   rdi,rdi
   140013033:	je     0x14001305d
   140013035:	mov    rax,QWORD PTR [rbx]
   140013038:	mov    rdx,rdi
   14001303b:	mov    rcx,rbx
   14001303e:	call   QWORD PTR [rax+0x8]
   140013041:	test   al,al
   140013043:	je     0x140013051
   140013045:	mov    rax,QWORD PTR [rdi]
   140013048:	mov    rdx,rbx
   14001304b:	mov    rcx,rdi
   14001304e:	call   QWORD PTR [rax+0x28]
   140013051:	mov    rax,QWORD PTR [rbx]
   140013054:	mov    rdx,rdi
   140013057:	mov    rcx,rbx
   14001305a:	call   QWORD PTR [rax+0x10]
   14001305d:	mov    rdi,QWORD PTR [rsi+0x18]
   140013061:	test   rdi,rdi
   140013064:	je     0x14001308e
   140013066:	mov    rax,QWORD PTR [rbx]
   140013069:	mov    rdx,rdi
   14001306c:	mov    rcx,rbx
   14001306f:	call   QWORD PTR [rax+0x8]
   140013072:	test   al,al
   140013074:	je     0x140013082
   140013076:	mov    rax,QWORD PTR [rdi]
   140013079:	mov    rdx,rbx
   14001307c:	mov    rcx,rdi
   14001307f:	call   QWORD PTR [rax+0x28]
   140013082:	mov    rax,QWORD PTR [rbx]
   140013085:	mov    rdx,rdi
   140013088:	mov    rcx,rbx
   14001308b:	call   QWORD PTR [rax+0x10]
   14001308e:	mov    rdi,QWORD PTR [rsi+0x20]
   140013092:	test   rdi,rdi
   140013095:	je     0x1400130bf
   140013097:	mov    rax,QWORD PTR [rbx]
   14001309a:	mov    rdx,rdi
   14001309d:	mov    rcx,rbx
   1400130a0:	call   QWORD PTR [rax+0x8]
   1400130a3:	test   al,al
   1400130a5:	je     0x1400130b3
   1400130a7:	mov    rax,QWORD PTR [rdi]
   1400130aa:	mov    rdx,rbx
   1400130ad:	mov    rcx,rdi
   1400130b0:	call   QWORD PTR [rax+0x28]
   1400130b3:	mov    rax,QWORD PTR [rbx]
   1400130b6:	mov    rdx,rdi
   1400130b9:	mov    rcx,rbx
   1400130bc:	call   QWORD PTR [rax+0x10]
   1400130bf:	mov    rdi,QWORD PTR [rsp+0x30]
   1400130c4:	mov    rax,QWORD PTR [rbx]
   1400130c7:	mov    rdx,rsi
   1400130ca:	mov    rcx,rbx
   1400130cd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400130d2:	add    rsp,0x20
   1400130d6:	pop    rsi
   1400130d7:	rex.W jmp QWORD PTR [rax+0x3b0]
   1400130de:	int3   
   1400130df:	int3   
   1400130e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400130e5:	push   rdi
   1400130e6:	sub    rsp,0x20
   1400130ea:	mov    rax,QWORD PTR [rdx]
   1400130ed:	mov    rdi,rdx
   1400130f0:	mov    rbx,rcx
   1400130f3:	mov    rdx,rcx
   1400130f6:	mov    rcx,rdi
   1400130f9:	call   QWORD PTR [rax+0xc8]
   1400130ff:	mov    r11,QWORD PTR [rdi]
   140013102:	mov    rdx,rbx
   140013105:	mov    rcx,rdi
   140013108:	mov    rbx,QWORD PTR [rsp+0x30]
   14001310d:	add    rsp,0x20
   140013111:	pop    rdi
   140013112:	rex.WB jmp QWORD PTR [r11+0x3a8]
   140013119:	int3   
   14001311a:	int3   
   14001311b:	int3   
   14001311c:	int3   
   14001311d:	int3   
   14001311e:	int3   
   14001311f:	int3   
   140013120:	mov    QWORD PTR [rsp+0x8],rbx
   140013125:	push   rdi
   140013126:	sub    rsp,0x20
   14001312a:	mov    rax,QWORD PTR [rdx]
   14001312d:	mov    rdi,rdx
   140013130:	mov    rbx,rcx
   140013133:	mov    rdx,rcx
   140013136:	mov    rcx,rdi
   140013139:	call   QWORD PTR [rax+0xc0]
   14001313f:	mov    r11,QWORD PTR [rdi]
   140013142:	mov    rdx,rbx
   140013145:	mov    rcx,rdi
   140013148:	mov    rbx,QWORD PTR [rsp+0x30]
   14001314d:	add    rsp,0x20
   140013151:	pop    rdi
   140013152:	rex.WB jmp QWORD PTR [r11+0x3a0]
   140013159:	int3   
   14001315a:	int3   
   14001315b:	int3   
   14001315c:	int3   
   14001315d:	int3   
   14001315e:	int3   
   14001315f:	int3   
   140013160:	mov    QWORD PTR [rsp+0x10],rbx
   140013165:	push   rsi
   140013166:	sub    rsp,0x20
   14001316a:	mov    rax,QWORD PTR [rdx]
   14001316d:	mov    rbx,rdx
   140013170:	mov    rsi,rcx
   140013173:	mov    rdx,rcx
   140013176:	mov    rcx,rbx
   140013179:	call   QWORD PTR [rax+0xb8]
   14001317f:	test   al,al
   140013181:	je     0x1400131be
   140013183:	mov    QWORD PTR [rsp+0x30],rdi
   140013188:	mov    rdi,QWORD PTR [rsi+0x10]
   14001318c:	test   rdi,rdi
   14001318f:	je     0x1400131b9
   140013191:	mov    rax,QWORD PTR [rbx]
   140013194:	mov    rdx,rdi
   140013197:	mov    rcx,rbx
   14001319a:	call   QWORD PTR [rax+0x8]
   14001319d:	test   al,al
   14001319f:	je     0x1400131ad
   1400131a1:	mov    rax,QWORD PTR [rdi]
   1400131a4:	mov    rdx,rbx
   1400131a7:	mov    rcx,rdi
   1400131aa:	call   QWORD PTR [rax+0x28]
   1400131ad:	mov    rax,QWORD PTR [rbx]
   1400131b0:	mov    rdx,rdi
   1400131b3:	mov    rcx,rbx
   1400131b6:	call   QWORD PTR [rax+0x10]
   1400131b9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400131be:	mov    rax,QWORD PTR [rbx]
   1400131c1:	mov    rdx,rsi
   1400131c4:	mov    rcx,rbx
   1400131c7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400131cc:	add    rsp,0x20
   1400131d0:	pop    rsi
   1400131d1:	rex.W jmp QWORD PTR [rax+0x398]
   1400131d8:	int3   
   1400131d9:	int3   
   1400131da:	int3   
   1400131db:	int3   
   1400131dc:	int3   
   1400131dd:	int3   
   1400131de:	int3   
   1400131df:	int3   
   1400131e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400131e5:	push   rsi
   1400131e6:	sub    rsp,0x20
   1400131ea:	mov    rax,QWORD PTR [rdx]
   1400131ed:	mov    rbx,rdx
   1400131f0:	mov    rsi,rcx
   1400131f3:	mov    rdx,rcx
   1400131f6:	mov    rcx,rbx
   1400131f9:	call   QWORD PTR [rax+0xb0]
   1400131ff:	test   al,al
   140013201:	je     0x14001326f
   140013203:	mov    QWORD PTR [rsp+0x30],rdi
   140013208:	mov    rdi,QWORD PTR [rsi+0x10]
   14001320c:	test   rdi,rdi
   14001320f:	je     0x140013239
   140013211:	mov    rax,QWORD PTR [rbx]
   140013214:	mov    rdx,rdi
   140013217:	mov    rcx,rbx
   14001321a:	call   QWORD PTR [rax+0x8]
   14001321d:	test   al,al
   14001321f:	je     0x14001322d
   140013221:	mov    rax,QWORD PTR [rdi]
   140013224:	mov    rdx,rbx
   140013227:	mov    rcx,rdi
   14001322a:	call   QWORD PTR [rax+0x28]
   14001322d:	mov    rax,QWORD PTR [rbx]
   140013230:	mov    rdx,rdi
   140013233:	mov    rcx,rbx
   140013236:	call   QWORD PTR [rax+0x10]
   140013239:	mov    rdi,QWORD PTR [rsi+0x18]
   14001323d:	test   rdi,rdi
   140013240:	je     0x14001326a
   140013242:	mov    rax,QWORD PTR [rbx]
   140013245:	mov    rdx,rdi
   140013248:	mov    rcx,rbx
   14001324b:	call   QWORD PTR [rax+0x8]
   14001324e:	test   al,al
   140013250:	je     0x14001325e
   140013252:	mov    rax,QWORD PTR [rdi]
   140013255:	mov    rdx,rbx
   140013258:	mov    rcx,rdi
   14001325b:	call   QWORD PTR [rax+0x28]
   14001325e:	mov    rax,QWORD PTR [rbx]
   140013261:	mov    rdx,rdi
   140013264:	mov    rcx,rbx
   140013267:	call   QWORD PTR [rax+0x10]
   14001326a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001326f:	mov    rax,QWORD PTR [rbx]
   140013272:	mov    rdx,rsi
   140013275:	mov    rcx,rbx
   140013278:	mov    rbx,QWORD PTR [rsp+0x38]
   14001327d:	add    rsp,0x20
   140013281:	pop    rsi
   140013282:	rex.W jmp QWORD PTR [rax+0x390]
   140013289:	int3   
   14001328a:	int3   
   14001328b:	int3   
   14001328c:	int3   
   14001328d:	int3   
   14001328e:	int3   
   14001328f:	int3   
   140013290:	mov    QWORD PTR [rsp+0x10],rbx
   140013295:	push   rsi
   140013296:	sub    rsp,0x20
   14001329a:	mov    rax,QWORD PTR [rdx]
   14001329d:	mov    rbx,rdx
   1400132a0:	mov    rsi,rcx
   1400132a3:	mov    rdx,rcx
   1400132a6:	mov    rcx,rbx
   1400132a9:	call   QWORD PTR [rax+0xa8]
   1400132af:	test   al,al
   1400132b1:	je     0x14001331f
   1400132b3:	mov    QWORD PTR [rsp+0x30],rdi
   1400132b8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400132bc:	test   rdi,rdi
   1400132bf:	je     0x1400132e9
   1400132c1:	mov    rax,QWORD PTR [rbx]
   1400132c4:	mov    rdx,rdi
   1400132c7:	mov    rcx,rbx
   1400132ca:	call   QWORD PTR [rax+0x8]
   1400132cd:	test   al,al
   1400132cf:	je     0x1400132dd
   1400132d1:	mov    rax,QWORD PTR [rdi]
   1400132d4:	mov    rdx,rbx
   1400132d7:	mov    rcx,rdi
   1400132da:	call   QWORD PTR [rax+0x28]
   1400132dd:	mov    rax,QWORD PTR [rbx]
   1400132e0:	mov    rdx,rdi
   1400132e3:	mov    rcx,rbx
   1400132e6:	call   QWORD PTR [rax+0x10]
   1400132e9:	mov    rdi,QWORD PTR [rsi+0x18]
   1400132ed:	test   rdi,rdi
   1400132f0:	je     0x14001331a
   1400132f2:	mov    rax,QWORD PTR [rbx]
   1400132f5:	mov    rdx,rdi
   1400132f8:	mov    rcx,rbx
   1400132fb:	call   QWORD PTR [rax+0x8]
   1400132fe:	test   al,al
   140013300:	je     0x14001330e
   140013302:	mov    rax,QWORD PTR [rdi]
   140013305:	mov    rdx,rbx
   140013308:	mov    rcx,rdi
   14001330b:	call   QWORD PTR [rax+0x28]
   14001330e:	mov    rax,QWORD PTR [rbx]
   140013311:	mov    rdx,rdi
   140013314:	mov    rcx,rbx
   140013317:	call   QWORD PTR [rax+0x10]
   14001331a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001331f:	mov    rax,QWORD PTR [rbx]
   140013322:	mov    rdx,rsi
   140013325:	mov    rcx,rbx
   140013328:	mov    rbx,QWORD PTR [rsp+0x38]
   14001332d:	add    rsp,0x20
   140013331:	pop    rsi
   140013332:	rex.W jmp QWORD PTR [rax+0x388]
   140013339:	int3   
   14001333a:	int3   
   14001333b:	int3   
   14001333c:	int3   
   14001333d:	int3   
   14001333e:	int3   
   14001333f:	int3   
   140013340:	mov    QWORD PTR [rsp+0x10],rbx
   140013345:	push   rsi
   140013346:	sub    rsp,0x20
   14001334a:	mov    rax,QWORD PTR [rdx]
   14001334d:	mov    rbx,rdx
   140013350:	mov    rsi,rcx
   140013353:	mov    rdx,rcx
   140013356:	mov    rcx,rbx
   140013359:	call   QWORD PTR [rax+0xa0]
   14001335f:	test   al,al
   140013361:	je     0x140013404
   140013367:	mov    QWORD PTR [rsp+0x30],rdi
   14001336c:	mov    rdi,QWORD PTR [rsi+0x10]
   140013370:	test   rdi,rdi
   140013373:	je     0x14001339d
   140013375:	mov    rax,QWORD PTR [rbx]
   140013378:	mov    rdx,rdi
   14001337b:	mov    rcx,rbx
   14001337e:	call   QWORD PTR [rax+0x8]
   140013381:	test   al,al
   140013383:	je     0x140013391
   140013385:	mov    rax,QWORD PTR [rdi]
   140013388:	mov    rdx,rbx
   14001338b:	mov    rcx,rdi
   14001338e:	call   QWORD PTR [rax+0x28]
   140013391:	mov    rax,QWORD PTR [rbx]
   140013394:	mov    rdx,rdi
   140013397:	mov    rcx,rbx
   14001339a:	call   QWORD PTR [rax+0x10]
   14001339d:	mov    rdi,QWORD PTR [rsi+0x18]
   1400133a1:	test   rdi,rdi
   1400133a4:	je     0x1400133ce
   1400133a6:	mov    rax,QWORD PTR [rbx]
   1400133a9:	mov    rdx,rdi
   1400133ac:	mov    rcx,rbx
   1400133af:	call   QWORD PTR [rax+0x8]
   1400133b2:	test   al,al
   1400133b4:	je     0x1400133c2
   1400133b6:	mov    rax,QWORD PTR [rdi]
   1400133b9:	mov    rdx,rbx
   1400133bc:	mov    rcx,rdi
   1400133bf:	call   QWORD PTR [rax+0x28]
   1400133c2:	mov    rax,QWORD PTR [rbx]
   1400133c5:	mov    rdx,rdi
   1400133c8:	mov    rcx,rbx
   1400133cb:	call   QWORD PTR [rax+0x10]
   1400133ce:	mov    rdi,QWORD PTR [rsi+0x20]
   1400133d2:	test   rdi,rdi
   1400133d5:	je     0x1400133ff
   1400133d7:	mov    rax,QWORD PTR [rbx]
   1400133da:	mov    rdx,rdi
   1400133dd:	mov    rcx,rbx
   1400133e0:	call   QWORD PTR [rax+0x8]
   1400133e3:	test   al,al
   1400133e5:	je     0x1400133f3
   1400133e7:	mov    rax,QWORD PTR [rdi]
   1400133ea:	mov    rdx,rbx
   1400133ed:	mov    rcx,rdi
   1400133f0:	call   QWORD PTR [rax+0x28]
   1400133f3:	mov    rax,QWORD PTR [rbx]
   1400133f6:	mov    rdx,rdi
   1400133f9:	mov    rcx,rbx
   1400133fc:	call   QWORD PTR [rax+0x10]
   1400133ff:	mov    rdi,QWORD PTR [rsp+0x30]
   140013404:	mov    rax,QWORD PTR [rbx]
   140013407:	mov    rdx,rsi
   14001340a:	mov    rcx,rbx
   14001340d:	mov    rbx,QWORD PTR [rsp+0x38]
   140013412:	add    rsp,0x20
   140013416:	pop    rsi
   140013417:	rex.W jmp QWORD PTR [rax+0x380]
   14001341e:	int3   
   14001341f:	int3   
   140013420:	mov    QWORD PTR [rsp+0x18],rbp
   140013425:	push   rsi
   140013426:	sub    rsp,0x20
   14001342a:	mov    rax,QWORD PTR [rdx]
   14001342d:	mov    rsi,rdx
   140013430:	mov    rbp,rcx
   140013433:	mov    rdx,rcx
   140013436:	mov    rcx,rsi
   140013439:	call   QWORD PTR [rax+0x98]
   14001343f:	test   al,al
   140013441:	je     0x140013499
   140013443:	mov    QWORD PTR [rsp+0x30],rbx
   140013448:	mov    rbx,rbp
   14001344b:	test   rbp,rbp
   14001344e:	je     0x140013494
   140013450:	mov    QWORD PTR [rsp+0x38],rdi
   140013455:	mov    rdi,QWORD PTR [rbx+0x10]
   140013459:	test   rdi,rdi
   14001345c:	je     0x140013486
   14001345e:	mov    rax,QWORD PTR [rsi]
   140013461:	mov    rdx,rdi
   140013464:	mov    rcx,rsi
   140013467:	call   QWORD PTR [rax+0x8]
   14001346a:	test   al,al
   14001346c:	je     0x14001347a
   14001346e:	mov    rax,QWORD PTR [rdi]
   140013471:	mov    rdx,rsi
   140013474:	mov    rcx,rdi
   140013477:	call   QWORD PTR [rax+0x28]
   14001347a:	mov    rax,QWORD PTR [rsi]
   14001347d:	mov    rdx,rdi
   140013480:	mov    rcx,rsi
   140013483:	call   QWORD PTR [rax+0x10]
   140013486:	mov    rbx,QWORD PTR [rbx+0x18]
   14001348a:	test   rbx,rbx
   14001348d:	jne    0x140013455
   14001348f:	mov    rdi,QWORD PTR [rsp+0x38]
   140013494:	mov    rbx,QWORD PTR [rsp+0x30]
   140013499:	mov    rax,QWORD PTR [rsi]
   14001349c:	mov    rdx,rbp
   14001349f:	mov    rcx,rsi
   1400134a2:	mov    rbp,QWORD PTR [rsp+0x40]
   1400134a7:	add    rsp,0x20
   1400134ab:	pop    rsi
   1400134ac:	rex.W jmp QWORD PTR [rax+0x378]
   1400134b3:	int3   
   1400134b4:	int3   
   1400134b5:	int3   
   1400134b6:	int3   
   1400134b7:	int3   
   1400134b8:	int3   
   1400134b9:	int3   
   1400134ba:	int3   
   1400134bb:	int3   
   1400134bc:	int3   
   1400134bd:	int3   
   1400134be:	int3   
   1400134bf:	int3   
   1400134c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400134c5:	push   rsi
   1400134c6:	sub    rsp,0x20
   1400134ca:	mov    rax,QWORD PTR [rdx]
   1400134cd:	mov    rbx,rdx
   1400134d0:	mov    rsi,rcx
   1400134d3:	mov    rdx,rcx
   1400134d6:	mov    rcx,rbx
   1400134d9:	call   QWORD PTR [rax+0x90]
   1400134df:	test   al,al
   1400134e1:	je     0x14001354f
   1400134e3:	mov    QWORD PTR [rsp+0x30],rdi
   1400134e8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400134ec:	test   rdi,rdi
   1400134ef:	je     0x140013519
   1400134f1:	mov    rax,QWORD PTR [rbx]
   1400134f4:	mov    rdx,rdi
   1400134f7:	mov    rcx,rbx
   1400134fa:	call   QWORD PTR [rax+0x8]
   1400134fd:	test   al,al
   1400134ff:	je     0x14001350d
   140013501:	mov    rax,QWORD PTR [rdi]
   140013504:	mov    rdx,rbx
   140013507:	mov    rcx,rdi
   14001350a:	call   QWORD PTR [rax+0x28]
   14001350d:	mov    rax,QWORD PTR [rbx]
   140013510:	mov    rdx,rdi
   140013513:	mov    rcx,rbx
   140013516:	call   QWORD PTR [rax+0x10]
   140013519:	mov    rdi,QWORD PTR [rsi+0x18]
   14001351d:	test   rdi,rdi
   140013520:	je     0x14001354a
   140013522:	mov    rax,QWORD PTR [rbx]
   140013525:	mov    rdx,rdi
   140013528:	mov    rcx,rbx
   14001352b:	call   QWORD PTR [rax+0x8]
   14001352e:	test   al,al
   140013530:	je     0x14001353e
   140013532:	mov    rax,QWORD PTR [rdi]
   140013535:	mov    rdx,rbx
   140013538:	mov    rcx,rdi
   14001353b:	call   QWORD PTR [rax+0x28]
   14001353e:	mov    rax,QWORD PTR [rbx]
   140013541:	mov    rdx,rdi
   140013544:	mov    rcx,rbx
   140013547:	call   QWORD PTR [rax+0x10]
   14001354a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001354f:	mov    rax,QWORD PTR [rbx]
   140013552:	mov    rdx,rsi
   140013555:	mov    rcx,rbx
   140013558:	mov    rbx,QWORD PTR [rsp+0x38]
   14001355d:	add    rsp,0x20
   140013561:	pop    rsi
   140013562:	rex.W jmp QWORD PTR [rax+0x370]
   140013569:	int3   
   14001356a:	int3   
   14001356b:	int3   
   14001356c:	int3   
   14001356d:	int3   
   14001356e:	int3   
   14001356f:	int3   
   140013570:	mov    QWORD PTR [rsp+0x10],rbx
   140013575:	push   rsi
   140013576:	sub    rsp,0x20
   14001357a:	mov    rax,QWORD PTR [rdx]
   14001357d:	mov    rbx,rdx
   140013580:	mov    rsi,rcx
   140013583:	mov    rdx,rcx
   140013586:	mov    rcx,rbx
   140013589:	call   QWORD PTR [rax+0x88]
   14001358f:	test   al,al
   140013591:	je     0x1400135ce
   140013593:	mov    QWORD PTR [rsp+0x30],rdi
   140013598:	mov    rdi,QWORD PTR [rsi+0x10]
   14001359c:	test   rdi,rdi
   14001359f:	je     0x1400135c9
   1400135a1:	mov    rax,QWORD PTR [rbx]
   1400135a4:	mov    rdx,rdi
   1400135a7:	mov    rcx,rbx
   1400135aa:	call   QWORD PTR [rax+0x8]
   1400135ad:	test   al,al
   1400135af:	je     0x1400135bd
   1400135b1:	mov    rax,QWORD PTR [rdi]
   1400135b4:	mov    rdx,rbx
   1400135b7:	mov    rcx,rdi
   1400135ba:	call   QWORD PTR [rax+0x28]
   1400135bd:	mov    rax,QWORD PTR [rbx]
   1400135c0:	mov    rdx,rdi
   1400135c3:	mov    rcx,rbx
   1400135c6:	call   QWORD PTR [rax+0x10]
   1400135c9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400135ce:	mov    rax,QWORD PTR [rbx]
   1400135d1:	mov    rdx,rsi
   1400135d4:	mov    rcx,rbx
   1400135d7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400135dc:	add    rsp,0x20
   1400135e0:	pop    rsi
   1400135e1:	rex.W jmp QWORD PTR [rax+0x368]
   1400135e8:	int3   
   1400135e9:	int3   
   1400135ea:	int3   
   1400135eb:	int3   
   1400135ec:	int3   
   1400135ed:	int3   
   1400135ee:	int3   
   1400135ef:	int3   
   1400135f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400135f5:	push   rsi
   1400135f6:	sub    rsp,0x20
   1400135fa:	mov    rax,QWORD PTR [rdx]
   1400135fd:	mov    rbx,rdx
   140013600:	mov    rsi,rcx
   140013603:	mov    rdx,rcx
   140013606:	mov    rcx,rbx
   140013609:	call   QWORD PTR [rax+0x80]
   14001360f:	test   al,al
   140013611:	je     0x14001364e
   140013613:	mov    QWORD PTR [rsp+0x30],rdi
   140013618:	mov    rdi,QWORD PTR [rsi+0x20]
   14001361c:	test   rdi,rdi
   14001361f:	je     0x140013649
   140013621:	mov    rax,QWORD PTR [rbx]
   140013624:	mov    rdx,rdi
   140013627:	mov    rcx,rbx
   14001362a:	call   QWORD PTR [rax+0x8]
   14001362d:	test   al,al
   14001362f:	je     0x14001363d
   140013631:	mov    rax,QWORD PTR [rdi]
   140013634:	mov    rdx,rbx
   140013637:	mov    rcx,rdi
   14001363a:	call   QWORD PTR [rax+0x28]
   14001363d:	mov    rax,QWORD PTR [rbx]
   140013640:	mov    rdx,rdi
   140013643:	mov    rcx,rbx
   140013646:	call   QWORD PTR [rax+0x10]
   140013649:	mov    rdi,QWORD PTR [rsp+0x30]
   14001364e:	mov    rax,QWORD PTR [rbx]
   140013651:	mov    rdx,rsi
   140013654:	mov    rcx,rbx
   140013657:	mov    rbx,QWORD PTR [rsp+0x38]
   14001365c:	add    rsp,0x20
   140013660:	pop    rsi
   140013661:	rex.W jmp QWORD PTR [rax+0x360]
   140013668:	int3   
   140013669:	int3   
   14001366a:	int3   
   14001366b:	int3   
   14001366c:	int3   
   14001366d:	int3   
   14001366e:	int3   
   14001366f:	int3   
   140013670:	mov    QWORD PTR [rsp+0x10],rbx
   140013675:	push   rsi
   140013676:	sub    rsp,0x20
   14001367a:	mov    rax,QWORD PTR [rdx]
   14001367d:	mov    rbx,rdx
   140013680:	mov    rsi,rcx
   140013683:	mov    rdx,rcx
   140013686:	mov    rcx,rbx
   140013689:	call   QWORD PTR [rax+0x78]
   14001368c:	test   al,al
   14001368e:	je     0x1400136cb
   140013690:	mov    QWORD PTR [rsp+0x30],rdi
   140013695:	mov    rdi,QWORD PTR [rsi+0x10]
   140013699:	test   rdi,rdi
   14001369c:	je     0x1400136c6
   14001369e:	mov    rax,QWORD PTR [rbx]
   1400136a1:	mov    rdx,rdi
   1400136a4:	mov    rcx,rbx
   1400136a7:	call   QWORD PTR [rax+0x8]
   1400136aa:	test   al,al
   1400136ac:	je     0x1400136ba
   1400136ae:	mov    rax,QWORD PTR [rdi]
   1400136b1:	mov    rdx,rbx
   1400136b4:	mov    rcx,rdi
   1400136b7:	call   QWORD PTR [rax+0x28]
   1400136ba:	mov    rax,QWORD PTR [rbx]
   1400136bd:	mov    rdx,rdi
   1400136c0:	mov    rcx,rbx
   1400136c3:	call   QWORD PTR [rax+0x10]
   1400136c6:	mov    rdi,QWORD PTR [rsp+0x30]
   1400136cb:	mov    rax,QWORD PTR [rbx]
   1400136ce:	mov    rdx,rsi
   1400136d1:	mov    rcx,rbx
   1400136d4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400136d9:	add    rsp,0x20
   1400136dd:	pop    rsi
   1400136de:	rex.W jmp QWORD PTR [rax+0x358]
   1400136e5:	int3   
   1400136e6:	int3   
   1400136e7:	int3   
   1400136e8:	int3   
   1400136e9:	int3   
   1400136ea:	int3   
   1400136eb:	int3   
   1400136ec:	int3   
   1400136ed:	int3   
   1400136ee:	int3   
   1400136ef:	int3   
   1400136f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400136f5:	push   rsi
   1400136f6:	sub    rsp,0x20
   1400136fa:	mov    rax,QWORD PTR [rdx]
   1400136fd:	mov    rbx,rdx
   140013700:	mov    rsi,rcx
   140013703:	mov    rdx,rcx
   140013706:	mov    rcx,rbx
   140013709:	call   QWORD PTR [rax+0x70]
   14001370c:	test   al,al
   14001370e:	je     0x1400137b1
   140013714:	mov    QWORD PTR [rsp+0x30],rdi
   140013719:	mov    rdi,QWORD PTR [rsi+0x10]
   14001371d:	test   rdi,rdi
   140013720:	je     0x14001374a
   140013722:	mov    rax,QWORD PTR [rbx]
   140013725:	mov    rdx,rdi
   140013728:	mov    rcx,rbx
   14001372b:	call   QWORD PTR [rax+0x8]
   14001372e:	test   al,al
   140013730:	je     0x14001373e
   140013732:	mov    rax,QWORD PTR [rdi]
   140013735:	mov    rdx,rbx
   140013738:	mov    rcx,rdi
   14001373b:	call   QWORD PTR [rax+0x28]
   14001373e:	mov    rax,QWORD PTR [rbx]
   140013741:	mov    rdx,rdi
   140013744:	mov    rcx,rbx
   140013747:	call   QWORD PTR [rax+0x10]
   14001374a:	mov    rdi,QWORD PTR [rsi+0x18]
   14001374e:	test   rdi,rdi
   140013751:	je     0x14001377b
   140013753:	mov    rax,QWORD PTR [rbx]
   140013756:	mov    rdx,rdi
   140013759:	mov    rcx,rbx
   14001375c:	call   QWORD PTR [rax+0x8]
   14001375f:	test   al,al
   140013761:	je     0x14001376f
   140013763:	mov    rax,QWORD PTR [rdi]
   140013766:	mov    rdx,rbx
   140013769:	mov    rcx,rdi
   14001376c:	call   QWORD PTR [rax+0x28]
   14001376f:	mov    rax,QWORD PTR [rbx]
   140013772:	mov    rdx,rdi
   140013775:	mov    rcx,rbx
   140013778:	call   QWORD PTR [rax+0x10]
   14001377b:	mov    rdi,QWORD PTR [rsi+0x20]
   14001377f:	test   rdi,rdi
   140013782:	je     0x1400137ac
   140013784:	mov    rax,QWORD PTR [rbx]
   140013787:	mov    rdx,rdi
   14001378a:	mov    rcx,rbx
   14001378d:	call   QWORD PTR [rax+0x8]
   140013790:	test   al,al
   140013792:	je     0x1400137a0
   140013794:	mov    rax,QWORD PTR [rdi]
   140013797:	mov    rdx,rbx
   14001379a:	mov    rcx,rdi
   14001379d:	call   QWORD PTR [rax+0x28]
   1400137a0:	mov    rax,QWORD PTR [rbx]
   1400137a3:	mov    rdx,rdi
   1400137a6:	mov    rcx,rbx
   1400137a9:	call   QWORD PTR [rax+0x10]
   1400137ac:	mov    rdi,QWORD PTR [rsp+0x30]
   1400137b1:	mov    rax,QWORD PTR [rbx]
   1400137b4:	mov    rdx,rsi
   1400137b7:	mov    rcx,rbx
   1400137ba:	mov    rbx,QWORD PTR [rsp+0x38]
   1400137bf:	add    rsp,0x20
   1400137c3:	pop    rsi
   1400137c4:	rex.W jmp QWORD PTR [rax+0x350]
   1400137cb:	int3   
   1400137cc:	int3   
   1400137cd:	int3   
   1400137ce:	int3   
   1400137cf:	int3   
   1400137d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400137d5:	push   rsi
   1400137d6:	sub    rsp,0x20
   1400137da:	mov    rax,QWORD PTR [rdx]
   1400137dd:	mov    rbx,rdx
   1400137e0:	mov    rsi,rcx
   1400137e3:	mov    rdx,rcx
   1400137e6:	mov    rcx,rbx
   1400137e9:	call   QWORD PTR [rax+0x68]
   1400137ec:	test   al,al
   1400137ee:	je     0x14001382b
   1400137f0:	mov    QWORD PTR [rsp+0x30],rdi
   1400137f5:	mov    rdi,QWORD PTR [rsi+0x20]
   1400137f9:	test   rdi,rdi
   1400137fc:	je     0x140013826
   1400137fe:	mov    rax,QWORD PTR [rbx]
   140013801:	mov    rdx,rdi
   140013804:	mov    rcx,rbx
   140013807:	call   QWORD PTR [rax+0x8]
   14001380a:	test   al,al
   14001380c:	je     0x14001381a
   14001380e:	mov    rax,QWORD PTR [rdi]
   140013811:	mov    rdx,rbx
   140013814:	mov    rcx,rdi
   140013817:	call   QWORD PTR [rax+0x28]
   14001381a:	mov    rax,QWORD PTR [rbx]
   14001381d:	mov    rdx,rdi
   140013820:	mov    rcx,rbx
   140013823:	call   QWORD PTR [rax+0x10]
   140013826:	mov    rdi,QWORD PTR [rsp+0x30]
   14001382b:	mov    rax,QWORD PTR [rbx]
   14001382e:	mov    rdx,rsi
   140013831:	mov    rcx,rbx
   140013834:	mov    rbx,QWORD PTR [rsp+0x38]
   140013839:	add    rsp,0x20
   14001383d:	pop    rsi
   14001383e:	rex.W jmp QWORD PTR [rax+0x348]
   140013845:	int3   
   140013846:	int3   
   140013847:	int3   
   140013848:	int3   
   140013849:	int3   
   14001384a:	int3   
   14001384b:	int3   
   14001384c:	int3   
   14001384d:	int3   
   14001384e:	int3   
   14001384f:	int3   
   140013850:	mov    QWORD PTR [rsp+0x10],rbx
   140013855:	push   rsi
   140013856:	sub    rsp,0x20
   14001385a:	mov    rax,QWORD PTR [rdx]
   14001385d:	mov    rbx,rdx
   140013860:	mov    rsi,rcx
   140013863:	mov    rdx,rcx
   140013866:	mov    rcx,rbx
   140013869:	call   QWORD PTR [rax+0x60]
   14001386c:	test   al,al
   14001386e:	je     0x1400138ab
   140013870:	mov    QWORD PTR [rsp+0x30],rdi
   140013875:	mov    rdi,QWORD PTR [rsi+0x10]
   140013879:	test   rdi,rdi
   14001387c:	je     0x1400138a6
   14001387e:	mov    rax,QWORD PTR [rbx]
   140013881:	mov    rdx,rdi
   140013884:	mov    rcx,rbx
   140013887:	call   QWORD PTR [rax+0x8]
   14001388a:	test   al,al
   14001388c:	je     0x14001389a
   14001388e:	mov    rax,QWORD PTR [rdi]
   140013891:	mov    rdx,rbx
   140013894:	mov    rcx,rdi
   140013897:	call   QWORD PTR [rax+0x28]
   14001389a:	mov    rax,QWORD PTR [rbx]
   14001389d:	mov    rdx,rdi
   1400138a0:	mov    rcx,rbx
   1400138a3:	call   QWORD PTR [rax+0x10]
   1400138a6:	mov    rdi,QWORD PTR [rsp+0x30]
   1400138ab:	mov    rax,QWORD PTR [rbx]
   1400138ae:	mov    rdx,rsi
   1400138b1:	mov    rcx,rbx
   1400138b4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400138b9:	add    rsp,0x20
   1400138bd:	pop    rsi
   1400138be:	rex.W jmp QWORD PTR [rax+0x340]
   1400138c5:	int3   
   1400138c6:	int3   
   1400138c7:	int3   
   1400138c8:	int3   
   1400138c9:	int3   
   1400138ca:	int3   
   1400138cb:	int3   
   1400138cc:	int3   
   1400138cd:	int3   
   1400138ce:	int3   
   1400138cf:	int3   
   1400138d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400138d5:	push   rsi
   1400138d6:	sub    rsp,0x20
   1400138da:	mov    rax,QWORD PTR [rdx]
   1400138dd:	mov    rbx,rdx
   1400138e0:	mov    rsi,rcx
   1400138e3:	mov    rdx,rcx
   1400138e6:	mov    rcx,rbx
   1400138e9:	call   QWORD PTR [rax+0x58]
   1400138ec:	test   al,al
   1400138ee:	je     0x14001395c
   1400138f0:	mov    QWORD PTR [rsp+0x30],rdi
   1400138f5:	mov    rdi,QWORD PTR [rsi+0x20]
   1400138f9:	test   rdi,rdi
   1400138fc:	je     0x140013926
   1400138fe:	mov    rax,QWORD PTR [rbx]
   140013901:	mov    rdx,rdi
   140013904:	mov    rcx,rbx
   140013907:	call   QWORD PTR [rax+0x8]
   14001390a:	test   al,al
   14001390c:	je     0x14001391a
   14001390e:	mov    rax,QWORD PTR [rdi]
   140013911:	mov    rdx,rbx
   140013914:	mov    rcx,rdi
   140013917:	call   QWORD PTR [rax+0x28]
   14001391a:	mov    rax,QWORD PTR [rbx]
   14001391d:	mov    rdx,rdi
   140013920:	mov    rcx,rbx
   140013923:	call   QWORD PTR [rax+0x10]
   140013926:	mov    rdi,QWORD PTR [rsi+0x28]
   14001392a:	test   rdi,rdi
   14001392d:	je     0x140013957
   14001392f:	mov    rax,QWORD PTR [rbx]
   140013932:	mov    rdx,rdi
   140013935:	mov    rcx,rbx
   140013938:	call   QWORD PTR [rax+0x8]
   14001393b:	test   al,al
   14001393d:	je     0x14001394b
   14001393f:	mov    rax,QWORD PTR [rdi]
   140013942:	mov    rdx,rbx
   140013945:	mov    rcx,rdi
   140013948:	call   QWORD PTR [rax+0x28]
   14001394b:	mov    rax,QWORD PTR [rbx]
   14001394e:	mov    rdx,rdi
   140013951:	mov    rcx,rbx
   140013954:	call   QWORD PTR [rax+0x10]
   140013957:	mov    rdi,QWORD PTR [rsp+0x30]
   14001395c:	mov    rax,QWORD PTR [rbx]
   14001395f:	mov    rdx,rsi
   140013962:	mov    rcx,rbx
   140013965:	mov    rbx,QWORD PTR [rsp+0x38]
   14001396a:	add    rsp,0x20
   14001396e:	pop    rsi
   14001396f:	rex.W jmp QWORD PTR [rax+0x338]
   140013976:	int3   
   140013977:	int3   
   140013978:	int3   
   140013979:	int3   
   14001397a:	int3   
   14001397b:	int3   
   14001397c:	int3   
   14001397d:	int3   
   14001397e:	int3   
   14001397f:	int3   
   140013980:	mov    QWORD PTR [rsp+0x10],rbx
   140013985:	push   rsi
   140013986:	sub    rsp,0x20
   14001398a:	mov    rax,QWORD PTR [rdx]
   14001398d:	mov    rbx,rdx
   140013990:	mov    rsi,rcx
   140013993:	mov    rdx,rcx
   140013996:	mov    rcx,rbx
   140013999:	call   QWORD PTR [rax+0x50]
   14001399c:	test   al,al
   14001399e:	je     0x140013a0c
   1400139a0:	mov    QWORD PTR [rsp+0x30],rdi
   1400139a5:	mov    rdi,QWORD PTR [rsi+0x20]
   1400139a9:	test   rdi,rdi
   1400139ac:	je     0x1400139d6
   1400139ae:	mov    rax,QWORD PTR [rbx]
   1400139b1:	mov    rdx,rdi
   1400139b4:	mov    rcx,rbx
   1400139b7:	call   QWORD PTR [rax+0x8]
   1400139ba:	test   al,al
   1400139bc:	je     0x1400139ca
   1400139be:	mov    rax,QWORD PTR [rdi]
   1400139c1:	mov    rdx,rbx
   1400139c4:	mov    rcx,rdi
   1400139c7:	call   QWORD PTR [rax+0x28]
   1400139ca:	mov    rax,QWORD PTR [rbx]
   1400139cd:	mov    rdx,rdi
   1400139d0:	mov    rcx,rbx
   1400139d3:	call   QWORD PTR [rax+0x10]
   1400139d6:	mov    rdi,QWORD PTR [rsi+0x28]
   1400139da:	test   rdi,rdi
   1400139dd:	je     0x140013a07
   1400139df:	mov    rax,QWORD PTR [rbx]
   1400139e2:	mov    rdx,rdi
   1400139e5:	mov    rcx,rbx
   1400139e8:	call   QWORD PTR [rax+0x8]
   1400139eb:	test   al,al
   1400139ed:	je     0x1400139fb
   1400139ef:	mov    rax,QWORD PTR [rdi]
   1400139f2:	mov    rdx,rbx
   1400139f5:	mov    rcx,rdi
   1400139f8:	call   QWORD PTR [rax+0x28]
   1400139fb:	mov    rax,QWORD PTR [rbx]
   1400139fe:	mov    rdx,rdi
   140013a01:	mov    rcx,rbx
   140013a04:	call   QWORD PTR [rax+0x10]
   140013a07:	mov    rdi,QWORD PTR [rsp+0x30]
   140013a0c:	mov    rax,QWORD PTR [rbx]
   140013a0f:	mov    rdx,rsi
   140013a12:	mov    rcx,rbx
   140013a15:	mov    rbx,QWORD PTR [rsp+0x38]
   140013a1a:	add    rsp,0x20
   140013a1e:	pop    rsi
   140013a1f:	rex.W jmp QWORD PTR [rax+0x330]
   140013a26:	int3   
   140013a27:	int3   
   140013a28:	int3   
   140013a29:	int3   
   140013a2a:	int3   
   140013a2b:	int3   
   140013a2c:	int3   
   140013a2d:	int3   
   140013a2e:	int3   
   140013a2f:	int3   
   140013a30:	mov    QWORD PTR [rsp+0x8],rbx
   140013a35:	push   rdi
   140013a36:	sub    rsp,0x20
   140013a3a:	mov    rax,QWORD PTR [rdx]
   140013a3d:	mov    rdi,rdx
   140013a40:	mov    rbx,rcx
   140013a43:	mov    rdx,rcx
   140013a46:	mov    rcx,rdi
   140013a49:	call   QWORD PTR [rax+0x48]
   140013a4c:	mov    r11,QWORD PTR [rdi]
   140013a4f:	mov    rdx,rbx
   140013a52:	mov    rcx,rdi
   140013a55:	mov    rbx,QWORD PTR [rsp+0x30]
   140013a5a:	add    rsp,0x20
   140013a5e:	pop    rdi
   140013a5f:	rex.WB jmp QWORD PTR [r11+0x328]
   140013a66:	int3   
   140013a67:	int3   
   140013a68:	int3   
   140013a69:	int3   
   140013a6a:	int3   
   140013a6b:	int3   
   140013a6c:	int3   
   140013a6d:	int3   
   140013a6e:	int3   
   140013a6f:	int3   
   140013a70:	mov    QWORD PTR [rsp+0x10],rbx
   140013a75:	push   rsi
   140013a76:	sub    rsp,0x20
   140013a7a:	mov    rax,QWORD PTR [rdx]
   140013a7d:	mov    rbx,rdx
   140013a80:	mov    rsi,rcx
   140013a83:	mov    rdx,rcx
   140013a86:	mov    rcx,rbx
   140013a89:	call   QWORD PTR [rax+0x40]
   140013a8c:	test   al,al
   140013a8e:	je     0x140013acb
   140013a90:	mov    QWORD PTR [rsp+0x30],rdi
   140013a95:	mov    rdi,QWORD PTR [rsi+0x10]
   140013a99:	test   rdi,rdi
   140013a9c:	je     0x140013ac6
   140013a9e:	mov    rax,QWORD PTR [rbx]
   140013aa1:	mov    rdx,rdi
   140013aa4:	mov    rcx,rbx
   140013aa7:	call   QWORD PTR [rax+0x8]
   140013aaa:	test   al,al
   140013aac:	je     0x140013aba
   140013aae:	mov    rax,QWORD PTR [rdi]
   140013ab1:	mov    rdx,rbx
   140013ab4:	mov    rcx,rdi
   140013ab7:	call   QWORD PTR [rax+0x28]
   140013aba:	mov    rax,QWORD PTR [rbx]
   140013abd:	mov    rdx,rdi
   140013ac0:	mov    rcx,rbx
   140013ac3:	call   QWORD PTR [rax+0x10]
   140013ac6:	mov    rdi,QWORD PTR [rsp+0x30]
   140013acb:	mov    rax,QWORD PTR [rbx]
   140013ace:	mov    rdx,rsi
   140013ad1:	mov    rcx,rbx
   140013ad4:	mov    rbx,QWORD PTR [rsp+0x38]
   140013ad9:	add    rsp,0x20
   140013add:	pop    rsi
   140013ade:	rex.W jmp QWORD PTR [rax+0x320]
   140013ae5:	int3   
   140013ae6:	int3   
   140013ae7:	int3   
   140013ae8:	int3   
   140013ae9:	int3   
   140013aea:	int3   
   140013aeb:	int3   
   140013aec:	int3   
   140013aed:	int3   
   140013aee:	int3   
   140013aef:	int3   
   140013af0:	mov    QWORD PTR [rsp+0x10],rbx
   140013af5:	push   rsi
   140013af6:	sub    rsp,0x20
   140013afa:	mov    rax,QWORD PTR [rdx]
   140013afd:	mov    rbx,rdx
   140013b00:	mov    rsi,rcx
   140013b03:	mov    rdx,rcx
   140013b06:	mov    rcx,rbx
   140013b09:	call   QWORD PTR [rax+0x38]
   140013b0c:	test   al,al
   140013b0e:	je     0x140013b4b
   140013b10:	mov    QWORD PTR [rsp+0x30],rdi
   140013b15:	mov    rdi,QWORD PTR [rsi+0x10]
   140013b19:	test   rdi,rdi
   140013b1c:	je     0x140013b46
   140013b1e:	mov    rax,QWORD PTR [rbx]
   140013b21:	mov    rdx,rdi
   140013b24:	mov    rcx,rbx
   140013b27:	call   QWORD PTR [rax+0x8]
   140013b2a:	test   al,al
   140013b2c:	je     0x140013b3a
   140013b2e:	mov    rax,QWORD PTR [rdi]
   140013b31:	mov    rdx,rbx
   140013b34:	mov    rcx,rdi
   140013b37:	call   QWORD PTR [rax+0x28]
   140013b3a:	mov    rax,QWORD PTR [rbx]
   140013b3d:	mov    rdx,rdi
   140013b40:	mov    rcx,rbx
   140013b43:	call   QWORD PTR [rax+0x10]
   140013b46:	mov    rdi,QWORD PTR [rsp+0x30]
   140013b4b:	mov    rax,QWORD PTR [rbx]
   140013b4e:	mov    rdx,rsi
   140013b51:	mov    rcx,rbx
   140013b54:	mov    rbx,QWORD PTR [rsp+0x38]
   140013b59:	add    rsp,0x20
   140013b5d:	pop    rsi
   140013b5e:	rex.W jmp QWORD PTR [rax+0x318]
   140013b65:	int3   
   140013b66:	int3   
   140013b67:	int3   
   140013b68:	int3   
   140013b69:	int3   
   140013b6a:	int3   
   140013b6b:	int3   
   140013b6c:	int3   
   140013b6d:	int3   
   140013b6e:	int3   
   140013b6f:	int3   
   140013b70:	mov    QWORD PTR [rsp+0x18],rbp
   140013b75:	push   rsi
   140013b76:	sub    rsp,0x20
   140013b7a:	mov    rax,QWORD PTR [rdx]
   140013b7d:	mov    rsi,rdx
   140013b80:	mov    rbp,rcx
   140013b83:	mov    rdx,rcx
   140013b86:	mov    rcx,rsi
   140013b89:	call   QWORD PTR [rax+0x30]
   140013b8c:	test   al,al
   140013b8e:	je     0x140013be6
   140013b90:	mov    QWORD PTR [rsp+0x30],rbx
   140013b95:	mov    rbx,rbp
   140013b98:	test   rbp,rbp
   140013b9b:	je     0x140013be1
   140013b9d:	mov    QWORD PTR [rsp+0x38],rdi
   140013ba2:	mov    rdi,QWORD PTR [rbx+0x10]
   140013ba6:	test   rdi,rdi
   140013ba9:	je     0x140013bd3
   140013bab:	mov    rax,QWORD PTR [rsi]
   140013bae:	mov    rdx,rdi
   140013bb1:	mov    rcx,rsi
   140013bb4:	call   QWORD PTR [rax+0x8]
   140013bb7:	test   al,al
   140013bb9:	je     0x140013bc7
   140013bbb:	mov    rax,QWORD PTR [rdi]
   140013bbe:	mov    rdx,rsi
   140013bc1:	mov    rcx,rdi
   140013bc4:	call   QWORD PTR [rax+0x28]
   140013bc7:	mov    rax,QWORD PTR [rsi]
   140013bca:	mov    rdx,rdi
   140013bcd:	mov    rcx,rsi
   140013bd0:	call   QWORD PTR [rax+0x10]
   140013bd3:	mov    rbx,QWORD PTR [rbx+0x18]
   140013bd7:	test   rbx,rbx
   140013bda:	jne    0x140013ba2
   140013bdc:	mov    rdi,QWORD PTR [rsp+0x38]
   140013be1:	mov    rbx,QWORD PTR [rsp+0x30]
   140013be6:	mov    rax,QWORD PTR [rsi]
   140013be9:	mov    rdx,rbp
   140013bec:	mov    rcx,rsi
   140013bef:	mov    rbp,QWORD PTR [rsp+0x40]
   140013bf4:	add    rsp,0x20
   140013bf8:	pop    rsi
   140013bf9:	rex.W jmp QWORD PTR [rax+0x310]
   140013c00:	mov    QWORD PTR [rsp+0x10],rbx
   140013c05:	push   rsi
   140013c06:	sub    rsp,0x20
   140013c0a:	mov    rax,QWORD PTR [rdx]
   140013c0d:	mov    rbx,rdx
   140013c10:	mov    rsi,rcx
   140013c13:	mov    rdx,rcx
   140013c16:	mov    rcx,rbx
   140013c19:	call   QWORD PTR [rax+0x28]
   140013c1c:	test   al,al
   140013c1e:	je     0x140013c5b
   140013c20:	mov    QWORD PTR [rsp+0x30],rdi
   140013c25:	mov    rdi,QWORD PTR [rsi+0x10]
   140013c29:	test   rdi,rdi
   140013c2c:	je     0x140013c56
   140013c2e:	mov    rax,QWORD PTR [rbx]
   140013c31:	mov    rdx,rdi
   140013c34:	mov    rcx,rbx
   140013c37:	call   QWORD PTR [rax+0x8]
   140013c3a:	test   al,al
   140013c3c:	je     0x140013c4a
   140013c3e:	mov    rax,QWORD PTR [rdi]
   140013c41:	mov    rdx,rbx
   140013c44:	mov    rcx,rdi
   140013c47:	call   QWORD PTR [rax+0x28]
   140013c4a:	mov    rax,QWORD PTR [rbx]
   140013c4d:	mov    rdx,rdi
   140013c50:	mov    rcx,rbx
   140013c53:	call   QWORD PTR [rax+0x10]
   140013c56:	mov    rdi,QWORD PTR [rsp+0x30]
   140013c5b:	mov    rax,QWORD PTR [rbx]
   140013c5e:	mov    rdx,rsi
   140013c61:	mov    rcx,rbx
   140013c64:	mov    rbx,QWORD PTR [rsp+0x38]
   140013c69:	add    rsp,0x20
   140013c6d:	pop    rsi
   140013c6e:	rex.W jmp QWORD PTR [rax+0x308]
   140013c75:	int3   
   140013c76:	int3   
   140013c77:	int3   
   140013c78:	int3   
   140013c79:	int3   
   140013c7a:	int3   
   140013c7b:	int3   
   140013c7c:	int3   
   140013c7d:	int3   
   140013c7e:	int3   
   140013c7f:	int3   
   140013c80:	mov    QWORD PTR [rsp+0x10],rbx
   140013c85:	push   rsi
   140013c86:	sub    rsp,0x20
   140013c8a:	mov    rax,QWORD PTR [rdx]
   140013c8d:	mov    rbx,rdx
   140013c90:	mov    rsi,rcx
   140013c93:	mov    rdx,rcx
   140013c96:	mov    rcx,rbx
   140013c99:	call   QWORD PTR [rax+0x20]
   140013c9c:	test   al,al
   140013c9e:	je     0x140013cdb
   140013ca0:	mov    QWORD PTR [rsp+0x30],rdi
   140013ca5:	mov    rdi,QWORD PTR [rsi+0x10]
   140013ca9:	test   rdi,rdi
   140013cac:	je     0x140013cd6
   140013cae:	mov    rax,QWORD PTR [rbx]
   140013cb1:	mov    rdx,rdi
   140013cb4:	mov    rcx,rbx
   140013cb7:	call   QWORD PTR [rax+0x8]
   140013cba:	test   al,al
   140013cbc:	je     0x140013cca
   140013cbe:	mov    rax,QWORD PTR [rdi]
   140013cc1:	mov    rdx,rbx
   140013cc4:	mov    rcx,rdi
   140013cc7:	call   QWORD PTR [rax+0x28]
   140013cca:	mov    rax,QWORD PTR [rbx]
   140013ccd:	mov    rdx,rdi
   140013cd0:	mov    rcx,rbx
   140013cd3:	call   QWORD PTR [rax+0x10]
   140013cd6:	mov    rdi,QWORD PTR [rsp+0x30]
   140013cdb:	mov    rax,QWORD PTR [rbx]
   140013cde:	mov    rdx,rsi
   140013ce1:	mov    rcx,rbx
   140013ce4:	mov    rbx,QWORD PTR [rsp+0x38]
   140013ce9:	add    rsp,0x20
   140013ced:	pop    rsi
   140013cee:	rex.W jmp QWORD PTR [rax+0x300]
   140013cf5:	int3   
   140013cf6:	int3   
   140013cf7:	int3   
   140013cf8:	int3   
   140013cf9:	int3   
   140013cfa:	int3   
   140013cfb:	int3   
   140013cfc:	int3   
   140013cfd:	int3   
   140013cfe:	int3   
   140013cff:	int3   
   140013d00:	mov    QWORD PTR [rsp+0x8],rbx
   140013d05:	push   rdi
   140013d06:	sub    rsp,0x20
   140013d0a:	mov    rax,QWORD PTR [rdx]
   140013d0d:	mov    rdi,rdx
   140013d10:	mov    rbx,rcx
   140013d13:	mov    rdx,rcx
   140013d16:	mov    rcx,rdi
   140013d19:	call   QWORD PTR [rax+0x18]
   140013d1c:	mov    r11,QWORD PTR [rdi]
   140013d1f:	mov    rdx,rbx
   140013d22:	mov    rcx,rdi
   140013d25:	mov    rbx,QWORD PTR [rsp+0x30]
   140013d2a:	add    rsp,0x20
   140013d2e:	pop    rdi
   140013d2f:	rex.WB jmp QWORD PTR [r11+0x2f8]
   140013d36:	int3   
   140013d37:	int3   
   140013d38:	int3   
   140013d39:	int3   
   140013d3a:	int3   
   140013d3b:	int3   
   140013d3c:	int3   
   140013d3d:	int3   
   140013d3e:	int3   
   140013d3f:	int3   
   140013d40:	mov    QWORD PTR [rsp+0x10],rbx
   140013d45:	push   rsi
   140013d46:	sub    rsp,0x20
   140013d4a:	mov    rax,QWORD PTR [rdx]
   140013d4d:	mov    rbx,rdx
   140013d50:	mov    rsi,rcx
   140013d53:	mov    rdx,rcx
   140013d56:	mov    rcx,rbx
   140013d59:	call   QWORD PTR [rax+0x2f0]
   140013d5f:	test   al,al
   140013d61:	je     0x140013dcf
   140013d63:	mov    QWORD PTR [rsp+0x30],rdi
   140013d68:	mov    rdi,QWORD PTR [rsi+0x10]
   140013d6c:	test   rdi,rdi
   140013d6f:	je     0x140013d99
   140013d71:	mov    rax,QWORD PTR [rbx]
   140013d74:	mov    rdx,rdi
   140013d77:	mov    rcx,rbx
   140013d7a:	call   QWORD PTR [rax+0x8]
   140013d7d:	test   al,al
   140013d7f:	je     0x140013d8d
   140013d81:	mov    rax,QWORD PTR [rdi]
   140013d84:	mov    rdx,rbx
   140013d87:	mov    rcx,rdi
   140013d8a:	call   QWORD PTR [rax+0x28]
   140013d8d:	mov    rax,QWORD PTR [rbx]
   140013d90:	mov    rdx,rdi
   140013d93:	mov    rcx,rbx
   140013d96:	call   QWORD PTR [rax+0x10]
   140013d99:	mov    rdi,QWORD PTR [rsi+0x18]
   140013d9d:	test   rdi,rdi
   140013da0:	je     0x140013dca
   140013da2:	mov    rax,QWORD PTR [rbx]
   140013da5:	mov    rdx,rdi
   140013da8:	mov    rcx,rbx
   140013dab:	call   QWORD PTR [rax+0x8]
   140013dae:	test   al,al
   140013db0:	je     0x140013dbe
   140013db2:	mov    rax,QWORD PTR [rdi]
   140013db5:	mov    rdx,rbx
   140013db8:	mov    rcx,rdi
   140013dbb:	call   QWORD PTR [rax+0x28]
   140013dbe:	mov    rax,QWORD PTR [rbx]
   140013dc1:	mov    rdx,rdi
   140013dc4:	mov    rcx,rbx
   140013dc7:	call   QWORD PTR [rax+0x10]
   140013dca:	mov    rdi,QWORD PTR [rsp+0x30]
   140013dcf:	mov    rax,QWORD PTR [rbx]
   140013dd2:	mov    rdx,rsi
   140013dd5:	mov    rcx,rbx
   140013dd8:	mov    rbx,QWORD PTR [rsp+0x38]
   140013ddd:	add    rsp,0x20
   140013de1:	pop    rsi
   140013de2:	rex.W jmp QWORD PTR [rax+0x5d0]
   140013de9:	int3   
   140013dea:	int3   
   140013deb:	int3   
   140013dec:	int3   
   140013ded:	int3   
   140013dee:	int3   
   140013def:	int3   
   140013df0:	mov    QWORD PTR [rsp+0x10],rbx
   140013df5:	push   rsi
   140013df6:	sub    rsp,0x20
   140013dfa:	mov    rax,QWORD PTR [rdx]
   140013dfd:	mov    rbx,rdx
   140013e00:	mov    rsi,rcx
   140013e03:	mov    rdx,rcx
   140013e06:	mov    rcx,rbx
   140013e09:	call   QWORD PTR [rax+0x2d0]
   140013e0f:	test   al,al
   140013e11:	je     0x140013e7f
   140013e13:	mov    QWORD PTR [rsp+0x30],rdi
   140013e18:	mov    rdi,QWORD PTR [rsi+0x48]
   140013e1c:	test   rdi,rdi
   140013e1f:	je     0x140013e49
   140013e21:	mov    rax,QWORD PTR [rbx]
   140013e24:	mov    rdx,rdi
   140013e27:	mov    rcx,rbx
   140013e2a:	call   QWORD PTR [rax+0x8]
   140013e2d:	test   al,al
   140013e2f:	je     0x140013e3d
   140013e31:	mov    rax,QWORD PTR [rdi]
   140013e34:	mov    rdx,rbx
   140013e37:	mov    rcx,rdi
   140013e3a:	call   QWORD PTR [rax+0x28]
   140013e3d:	mov    rax,QWORD PTR [rbx]
   140013e40:	mov    rdx,rdi
   140013e43:	mov    rcx,rbx
   140013e46:	call   QWORD PTR [rax+0x10]
   140013e49:	mov    rdi,QWORD PTR [rsi+0x50]
   140013e4d:	test   rdi,rdi
   140013e50:	je     0x140013e7a
   140013e52:	mov    rax,QWORD PTR [rbx]
   140013e55:	mov    rdx,rdi
   140013e58:	mov    rcx,rbx
   140013e5b:	call   QWORD PTR [rax+0x8]
   140013e5e:	test   al,al
   140013e60:	je     0x140013e6e
   140013e62:	mov    rax,QWORD PTR [rdi]
   140013e65:	mov    rdx,rbx
   140013e68:	mov    rcx,rdi
   140013e6b:	call   QWORD PTR [rax+0x28]
   140013e6e:	mov    rax,QWORD PTR [rbx]
   140013e71:	mov    rdx,rdi
   140013e74:	mov    rcx,rbx
   140013e77:	call   QWORD PTR [rax+0x10]
   140013e7a:	mov    rdi,QWORD PTR [rsp+0x30]
   140013e7f:	mov    rax,QWORD PTR [rbx]
   140013e82:	mov    rdx,rsi
   140013e85:	mov    rcx,rbx
   140013e88:	mov    rbx,QWORD PTR [rsp+0x38]
   140013e8d:	add    rsp,0x20
   140013e91:	pop    rsi
   140013e92:	rex.W jmp QWORD PTR [rax+0x5b0]
   140013e99:	int3   
   140013e9a:	int3   
   140013e9b:	int3   
   140013e9c:	int3   
   140013e9d:	int3   
   140013e9e:	int3   
   140013e9f:	int3   
   140013ea0:	mov    QWORD PTR [rsp+0x10],rbx
   140013ea5:	push   rsi
   140013ea6:	sub    rsp,0x20
   140013eaa:	mov    rax,QWORD PTR [rdx]
   140013ead:	mov    rbx,rdx
   140013eb0:	mov    rsi,rcx
   140013eb3:	mov    rdx,rcx
   140013eb6:	mov    rcx,rbx
   140013eb9:	call   QWORD PTR [rax+0x2c0]
   140013ebf:	test   al,al
   140013ec1:	je     0x140013f2f
   140013ec3:	mov    QWORD PTR [rsp+0x30],rdi
   140013ec8:	mov    rdi,QWORD PTR [rsi+0x10]
   140013ecc:	test   rdi,rdi
   140013ecf:	je     0x140013ef9
   140013ed1:	mov    rax,QWORD PTR [rbx]
   140013ed4:	mov    rdx,rdi
   140013ed7:	mov    rcx,rbx
   140013eda:	call   QWORD PTR [rax+0x8]
   140013edd:	test   al,al
   140013edf:	je     0x140013eed
   140013ee1:	mov    rax,QWORD PTR [rdi]
   140013ee4:	mov    rdx,rbx
   140013ee7:	mov    rcx,rdi
   140013eea:	call   QWORD PTR [rax+0x28]
   140013eed:	mov    rax,QWORD PTR [rbx]
   140013ef0:	mov    rdx,rdi
   140013ef3:	mov    rcx,rbx
   140013ef6:	call   QWORD PTR [rax+0x10]
   140013ef9:	mov    rdi,QWORD PTR [rsi+0x18]
   140013efd:	test   rdi,rdi
   140013f00:	je     0x140013f2a
   140013f02:	mov    rax,QWORD PTR [rbx]
   140013f05:	mov    rdx,rdi
   140013f08:	mov    rcx,rbx
   140013f0b:	call   QWORD PTR [rax+0x8]
   140013f0e:	test   al,al
   140013f10:	je     0x140013f1e
   140013f12:	mov    rax,QWORD PTR [rdi]
   140013f15:	mov    rdx,rbx
   140013f18:	mov    rcx,rdi
   140013f1b:	call   QWORD PTR [rax+0x28]
   140013f1e:	mov    rax,QWORD PTR [rbx]
   140013f21:	mov    rdx,rdi
   140013f24:	mov    rcx,rbx
   140013f27:	call   QWORD PTR [rax+0x10]
   140013f2a:	mov    rdi,QWORD PTR [rsp+0x30]
   140013f2f:	mov    rax,QWORD PTR [rbx]
   140013f32:	mov    rdx,rsi
   140013f35:	mov    rcx,rbx
   140013f38:	mov    rbx,QWORD PTR [rsp+0x38]
   140013f3d:	add    rsp,0x20
   140013f41:	pop    rsi
   140013f42:	rex.W jmp QWORD PTR [rax+0x5a0]
   140013f49:	int3   
   140013f4a:	int3   
   140013f4b:	int3   
   140013f4c:	int3   
   140013f4d:	int3   
   140013f4e:	int3   
   140013f4f:	int3   
   140013f50:	mov    QWORD PTR [rsp+0x10],rbx
   140013f55:	push   rsi
   140013f56:	sub    rsp,0x20
   140013f5a:	mov    rax,QWORD PTR [rdx]
   140013f5d:	mov    rbx,rdx
   140013f60:	mov    rsi,rcx
   140013f63:	mov    rdx,rcx
   140013f66:	mov    rcx,rbx
   140013f69:	call   QWORD PTR [rax+0x2b8]
   140013f6f:	test   al,al
   140013f71:	je     0x140013fae
   140013f73:	mov    QWORD PTR [rsp+0x30],rdi
   140013f78:	mov    rdi,QWORD PTR [rsi+0x20]
   140013f7c:	test   rdi,rdi
   140013f7f:	je     0x140013fa9
   140013f81:	mov    rax,QWORD PTR [rbx]
   140013f84:	mov    rdx,rdi
   140013f87:	mov    rcx,rbx
   140013f8a:	call   QWORD PTR [rax+0x8]
   140013f8d:	test   al,al
   140013f8f:	je     0x140013f9d
   140013f91:	mov    rax,QWORD PTR [rdi]
   140013f94:	mov    rdx,rbx
   140013f97:	mov    rcx,rdi
   140013f9a:	call   QWORD PTR [rax+0x28]
   140013f9d:	mov    rax,QWORD PTR [rbx]
   140013fa0:	mov    rdx,rdi
   140013fa3:	mov    rcx,rbx
   140013fa6:	call   QWORD PTR [rax+0x10]
   140013fa9:	mov    rdi,QWORD PTR [rsp+0x30]
   140013fae:	mov    rax,QWORD PTR [rbx]
   140013fb1:	mov    rdx,rsi
   140013fb4:	mov    rcx,rbx
   140013fb7:	mov    rbx,QWORD PTR [rsp+0x38]
   140013fbc:	add    rsp,0x20
   140013fc0:	pop    rsi
   140013fc1:	rex.W jmp QWORD PTR [rax+0x598]
   140013fc8:	int3   
   140013fc9:	int3   
   140013fca:	int3   
   140013fcb:	int3   
   140013fcc:	int3   
   140013fcd:	int3   
   140013fce:	int3   
   140013fcf:	int3   
   140013fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140013fd5:	push   rdi
   140013fd6:	sub    rsp,0x20
   140013fda:	mov    rax,QWORD PTR [rdx]
   140013fdd:	mov    rdi,rdx
   140013fe0:	mov    rbx,rcx
   140013fe3:	mov    rdx,rcx
   140013fe6:	mov    rcx,rdi
   140013fe9:	call   QWORD PTR [rax+0x298]
   140013fef:	mov    r11,QWORD PTR [rdi]
   140013ff2:	mov    rdx,rbx
   140013ff5:	mov    rcx,rdi
   140013ff8:	mov    rbx,QWORD PTR [rsp+0x30]
   140013ffd:	add    rsp,0x20
   140014001:	pop    rdi
   140014002:	rex.WB jmp QWORD PTR [r11+0x578]
   140014009:	int3   
   14001400a:	int3   
   14001400b:	int3   
   14001400c:	int3   
   14001400d:	int3   
   14001400e:	int3   
   14001400f:	int3   
   140014010:	mov    QWORD PTR [rsp+0x10],rbx
   140014015:	push   rsi
   140014016:	sub    rsp,0x20
   14001401a:	mov    rax,QWORD PTR [rdx]
   14001401d:	mov    rbx,rdx
   140014020:	mov    rsi,rcx
   140014023:	mov    rdx,rcx
   140014026:	mov    rcx,rbx
   140014029:	call   QWORD PTR [rax+0x2b0]
   14001402f:	test   al,al
   140014031:	je     0x1400140d4
   140014037:	mov    QWORD PTR [rsp+0x30],rdi
   14001403c:	mov    rdi,QWORD PTR [rsi+0x10]
   140014040:	test   rdi,rdi
   140014043:	je     0x14001406d
   140014045:	mov    rax,QWORD PTR [rbx]
   140014048:	mov    rdx,rdi
   14001404b:	mov    rcx,rbx
   14001404e:	call   QWORD PTR [rax+0x8]
   140014051:	test   al,al
   140014053:	je     0x140014061
   140014055:	mov    rax,QWORD PTR [rdi]
   140014058:	mov    rdx,rbx
   14001405b:	mov    rcx,rdi
   14001405e:	call   QWORD PTR [rax+0x28]
   140014061:	mov    rax,QWORD PTR [rbx]
   140014064:	mov    rdx,rdi
   140014067:	mov    rcx,rbx
   14001406a:	call   QWORD PTR [rax+0x10]
   14001406d:	mov    rdi,QWORD PTR [rsi+0x18]
   140014071:	test   rdi,rdi
   140014074:	je     0x14001409e
   140014076:	mov    rax,QWORD PTR [rbx]
   140014079:	mov    rdx,rdi
   14001407c:	mov    rcx,rbx
   14001407f:	call   QWORD PTR [rax+0x8]
   140014082:	test   al,al
   140014084:	je     0x140014092
   140014086:	mov    rax,QWORD PTR [rdi]
   140014089:	mov    rdx,rbx
   14001408c:	mov    rcx,rdi
   14001408f:	call   QWORD PTR [rax+0x28]
   140014092:	mov    rax,QWORD PTR [rbx]
   140014095:	mov    rdx,rdi
   140014098:	mov    rcx,rbx
   14001409b:	call   QWORD PTR [rax+0x10]
   14001409e:	mov    rdi,QWORD PTR [rsi+0x20]
   1400140a2:	test   rdi,rdi
   1400140a5:	je     0x1400140cf
   1400140a7:	mov    rax,QWORD PTR [rbx]
   1400140aa:	mov    rdx,rdi
   1400140ad:	mov    rcx,rbx
   1400140b0:	call   QWORD PTR [rax+0x8]
   1400140b3:	test   al,al
   1400140b5:	je     0x1400140c3
   1400140b7:	mov    rax,QWORD PTR [rdi]
   1400140ba:	mov    rdx,rbx
   1400140bd:	mov    rcx,rdi
   1400140c0:	call   QWORD PTR [rax+0x28]
   1400140c3:	mov    rax,QWORD PTR [rbx]
   1400140c6:	mov    rdx,rdi
   1400140c9:	mov    rcx,rbx
   1400140cc:	call   QWORD PTR [rax+0x10]
   1400140cf:	mov    rdi,QWORD PTR [rsp+0x30]
   1400140d4:	mov    rax,QWORD PTR [rbx]
   1400140d7:	mov    rdx,rsi
   1400140da:	mov    rcx,rbx
   1400140dd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400140e2:	add    rsp,0x20
   1400140e6:	pop    rsi
   1400140e7:	rex.W jmp QWORD PTR [rax+0x590]
   1400140ee:	int3   
   1400140ef:	int3   
   1400140f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400140f5:	push   rsi
   1400140f6:	sub    rsp,0x20
   1400140fa:	mov    rax,QWORD PTR [rdx]
   1400140fd:	mov    rbx,rdx
   140014100:	mov    rsi,rcx
   140014103:	mov    rdx,rcx
   140014106:	mov    rcx,rbx
   140014109:	call   QWORD PTR [rax+0x2a8]
   14001410f:	test   al,al
   140014111:	je     0x14001417f
   140014113:	mov    QWORD PTR [rsp+0x30],rdi
   140014118:	mov    rdi,QWORD PTR [rsi+0x10]
   14001411c:	test   rdi,rdi
   14001411f:	je     0x140014149
   140014121:	mov    rax,QWORD PTR [rbx]
   140014124:	mov    rdx,rdi
   140014127:	mov    rcx,rbx
   14001412a:	call   QWORD PTR [rax+0x8]
   14001412d:	test   al,al
   14001412f:	je     0x14001413d
   140014131:	mov    rax,QWORD PTR [rdi]
   140014134:	mov    rdx,rbx
   140014137:	mov    rcx,rdi
   14001413a:	call   QWORD PTR [rax+0x28]
   14001413d:	mov    rax,QWORD PTR [rbx]
   140014140:	mov    rdx,rdi
   140014143:	mov    rcx,rbx
   140014146:	call   QWORD PTR [rax+0x10]
   140014149:	mov    rdi,QWORD PTR [rsi+0x18]
   14001414d:	test   rdi,rdi
   140014150:	je     0x14001417a
   140014152:	mov    rax,QWORD PTR [rbx]
   140014155:	mov    rdx,rdi
   140014158:	mov    rcx,rbx
   14001415b:	call   QWORD PTR [rax+0x8]
   14001415e:	test   al,al
   140014160:	je     0x14001416e
   140014162:	mov    rax,QWORD PTR [rdi]
   140014165:	mov    rdx,rbx
   140014168:	mov    rcx,rdi
   14001416b:	call   QWORD PTR [rax+0x28]
   14001416e:	mov    rax,QWORD PTR [rbx]
   140014171:	mov    rdx,rdi
   140014174:	mov    rcx,rbx
   140014177:	call   QWORD PTR [rax+0x10]
   14001417a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001417f:	mov    rax,QWORD PTR [rbx]
   140014182:	mov    rdx,rsi
   140014185:	mov    rcx,rbx
   140014188:	mov    rbx,QWORD PTR [rsp+0x38]
   14001418d:	add    rsp,0x20
   140014191:	pop    rsi
   140014192:	rex.W jmp QWORD PTR [rax+0x588]
   140014199:	int3   
   14001419a:	int3   
   14001419b:	int3   
   14001419c:	int3   
   14001419d:	int3   
   14001419e:	int3   
   14001419f:	int3   
   1400141a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400141a5:	push   rsi
   1400141a6:	sub    rsp,0x20
   1400141aa:	mov    rax,QWORD PTR [rdx]
   1400141ad:	mov    rbx,rdx
   1400141b0:	mov    rsi,rcx
   1400141b3:	mov    rdx,rcx
   1400141b6:	mov    rcx,rbx
   1400141b9:	call   QWORD PTR [rax+0x2a0]
   1400141bf:	test   al,al
   1400141c1:	je     0x14001422f
   1400141c3:	mov    QWORD PTR [rsp+0x30],rdi
   1400141c8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400141cc:	test   rdi,rdi
   1400141cf:	je     0x1400141f9
   1400141d1:	mov    rax,QWORD PTR [rbx]
   1400141d4:	mov    rdx,rdi
   1400141d7:	mov    rcx,rbx
   1400141da:	call   QWORD PTR [rax+0x8]
   1400141dd:	test   al,al
   1400141df:	je     0x1400141ed
   1400141e1:	mov    rax,QWORD PTR [rdi]
   1400141e4:	mov    rdx,rbx
   1400141e7:	mov    rcx,rdi
   1400141ea:	call   QWORD PTR [rax+0x28]
   1400141ed:	mov    rax,QWORD PTR [rbx]
   1400141f0:	mov    rdx,rdi
   1400141f3:	mov    rcx,rbx
   1400141f6:	call   QWORD PTR [rax+0x10]
   1400141f9:	mov    rdi,QWORD PTR [rsi+0x18]
   1400141fd:	test   rdi,rdi
   140014200:	je     0x14001422a
   140014202:	mov    rax,QWORD PTR [rbx]
   140014205:	mov    rdx,rdi
   140014208:	mov    rcx,rbx
   14001420b:	call   QWORD PTR [rax+0x8]
   14001420e:	test   al,al
   140014210:	je     0x14001421e
   140014212:	mov    rax,QWORD PTR [rdi]
   140014215:	mov    rdx,rbx
   140014218:	mov    rcx,rdi
   14001421b:	call   QWORD PTR [rax+0x28]
   14001421e:	mov    rax,QWORD PTR [rbx]
   140014221:	mov    rdx,rdi
   140014224:	mov    rcx,rbx
   140014227:	call   QWORD PTR [rax+0x10]
   14001422a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001422f:	mov    rax,QWORD PTR [rbx]
   140014232:	mov    rdx,rsi
   140014235:	mov    rcx,rbx
   140014238:	mov    rbx,QWORD PTR [rsp+0x38]
   14001423d:	add    rsp,0x20
   140014241:	pop    rsi
   140014242:	rex.W jmp QWORD PTR [rax+0x580]
   140014249:	int3   
   14001424a:	int3   
   14001424b:	int3   
   14001424c:	int3   
   14001424d:	int3   
   14001424e:	int3   
   14001424f:	int3   
   140014250:	mov    QWORD PTR [rsp+0x18],rbp
   140014255:	push   rsi
   140014256:	sub    rsp,0x20
   14001425a:	mov    rax,QWORD PTR [rdx]
   14001425d:	mov    rsi,rdx
   140014260:	mov    rbp,rcx
   140014263:	mov    rdx,rcx
   140014266:	mov    rcx,rsi
   140014269:	call   QWORD PTR [rax+0x290]
   14001426f:	test   al,al
   140014271:	je     0x1400142c9
   140014273:	mov    QWORD PTR [rsp+0x30],rbx
   140014278:	mov    rbx,rbp
   14001427b:	test   rbp,rbp
   14001427e:	je     0x1400142c4
   140014280:	mov    QWORD PTR [rsp+0x38],rdi
   140014285:	mov    rdi,QWORD PTR [rbx+0x18]
   140014289:	test   rdi,rdi
   14001428c:	je     0x1400142b6
   14001428e:	mov    rax,QWORD PTR [rsi]
   140014291:	mov    rdx,rdi
   140014294:	mov    rcx,rsi
   140014297:	call   QWORD PTR [rax+0x8]
   14001429a:	test   al,al
   14001429c:	je     0x1400142aa
   14001429e:	mov    rax,QWORD PTR [rdi]
   1400142a1:	mov    rdx,rsi
   1400142a4:	mov    rcx,rdi
   1400142a7:	call   QWORD PTR [rax+0x28]
   1400142aa:	mov    rax,QWORD PTR [rsi]
   1400142ad:	mov    rdx,rdi
   1400142b0:	mov    rcx,rsi
   1400142b3:	call   QWORD PTR [rax+0x10]
   1400142b6:	mov    rbx,QWORD PTR [rbx+0x10]
   1400142ba:	test   rbx,rbx
   1400142bd:	jne    0x140014285
   1400142bf:	mov    rdi,QWORD PTR [rsp+0x38]
   1400142c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400142c9:	mov    rax,QWORD PTR [rsi]
   1400142cc:	mov    rdx,rbp
   1400142cf:	mov    rcx,rsi
   1400142d2:	mov    rbp,QWORD PTR [rsp+0x40]
   1400142d7:	add    rsp,0x20
   1400142db:	pop    rsi
   1400142dc:	rex.W jmp QWORD PTR [rax+0x570]
   1400142e3:	int3   
   1400142e4:	int3   
   1400142e5:	int3   
   1400142e6:	int3   
   1400142e7:	int3   
   1400142e8:	int3   
   1400142e9:	int3   
   1400142ea:	int3   
   1400142eb:	int3   
   1400142ec:	int3   
   1400142ed:	int3   
   1400142ee:	int3   
   1400142ef:	int3   
   1400142f0:	mov    QWORD PTR [rsp+0x18],rbp
   1400142f5:	push   rsi
   1400142f6:	sub    rsp,0x20
   1400142fa:	mov    rax,QWORD PTR [rdx]
   1400142fd:	mov    rsi,rdx
   140014300:	mov    rbp,rcx
   140014303:	mov    rdx,rcx
   140014306:	mov    rcx,rsi
   140014309:	call   QWORD PTR [rax+0x288]
   14001430f:	test   al,al
   140014311:	je     0x140014369
   140014313:	mov    QWORD PTR [rsp+0x30],rbx
   140014318:	mov    rbx,rbp
   14001431b:	test   rbp,rbp
   14001431e:	je     0x140014364
   140014320:	mov    QWORD PTR [rsp+0x38],rdi
   140014325:	mov    rdi,QWORD PTR [rbx+0x18]
   140014329:	test   rdi,rdi
   14001432c:	je     0x140014356
   14001432e:	mov    rax,QWORD PTR [rsi]
   140014331:	mov    rdx,rdi
   140014334:	mov    rcx,rsi
   140014337:	call   QWORD PTR [rax+0x8]
   14001433a:	test   al,al
   14001433c:	je     0x14001434a
   14001433e:	mov    rax,QWORD PTR [rdi]
   140014341:	mov    rdx,rsi
   140014344:	mov    rcx,rdi
   140014347:	call   QWORD PTR [rax+0x28]
   14001434a:	mov    rax,QWORD PTR [rsi]
   14001434d:	mov    rdx,rdi
   140014350:	mov    rcx,rsi
   140014353:	call   QWORD PTR [rax+0x10]
   140014356:	mov    rbx,QWORD PTR [rbx+0x10]
   14001435a:	test   rbx,rbx
   14001435d:	jne    0x140014325
   14001435f:	mov    rdi,QWORD PTR [rsp+0x38]
   140014364:	mov    rbx,QWORD PTR [rsp+0x30]
   140014369:	mov    rax,QWORD PTR [rsi]
   14001436c:	mov    rdx,rbp
   14001436f:	mov    rcx,rsi
   140014372:	mov    rbp,QWORD PTR [rsp+0x40]
   140014377:	add    rsp,0x20
   14001437b:	pop    rsi
   14001437c:	rex.W jmp QWORD PTR [rax+0x568]
   140014383:	int3   
   140014384:	int3   
   140014385:	int3   
   140014386:	int3   
   140014387:	int3   
   140014388:	int3   
   140014389:	int3   
   14001438a:	int3   
   14001438b:	int3   
   14001438c:	int3   
   14001438d:	int3   
   14001438e:	int3   
   14001438f:	int3   
   140014390:	mov    QWORD PTR [rsp+0x8],rbx
   140014395:	push   rdi
   140014396:	sub    rsp,0x20
   14001439a:	mov    rax,QWORD PTR [rdx]
   14001439d:	mov    rdi,rdx
   1400143a0:	mov    rbx,rcx
   1400143a3:	mov    rdx,rcx
   1400143a6:	mov    rcx,rdi
   1400143a9:	call   QWORD PTR [rax+0x280]
   1400143af:	mov    r11,QWORD PTR [rdi]
   1400143b2:	mov    rdx,rbx
   1400143b5:	mov    rcx,rdi
   1400143b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400143bd:	add    rsp,0x20
   1400143c1:	pop    rdi
   1400143c2:	rex.WB jmp QWORD PTR [r11+0x560]
   1400143c9:	int3   
   1400143ca:	int3   
   1400143cb:	int3   
   1400143cc:	int3   
   1400143cd:	int3   
   1400143ce:	int3   
   1400143cf:	int3   
   1400143d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400143d5:	push   rsi
   1400143d6:	sub    rsp,0x20
   1400143da:	mov    rax,QWORD PTR [rdx]
   1400143dd:	mov    rbx,rdx
   1400143e0:	mov    rsi,rcx
   1400143e3:	mov    rdx,rcx
   1400143e6:	mov    rcx,rbx
   1400143e9:	call   QWORD PTR [rax+0x2d8]
   1400143ef:	test   al,al
   1400143f1:	je     0x14001442e
   1400143f3:	mov    QWORD PTR [rsp+0x30],rdi
   1400143f8:	mov    rdi,QWORD PTR [rsi+0x20]
   1400143fc:	test   rdi,rdi
   1400143ff:	je     0x140014429
   140014401:	mov    rax,QWORD PTR [rbx]
   140014404:	mov    rdx,rdi
   140014407:	mov    rcx,rbx
   14001440a:	call   QWORD PTR [rax+0x8]
   14001440d:	test   al,al
   14001440f:	je     0x14001441d
   140014411:	mov    rax,QWORD PTR [rdi]
   140014414:	mov    rdx,rbx
   140014417:	mov    rcx,rdi
   14001441a:	call   QWORD PTR [rax+0x28]
   14001441d:	mov    rax,QWORD PTR [rbx]
   140014420:	mov    rdx,rdi
   140014423:	mov    rcx,rbx
   140014426:	call   QWORD PTR [rax+0x10]
   140014429:	mov    rdi,QWORD PTR [rsp+0x30]
   14001442e:	mov    rax,QWORD PTR [rbx]
   140014431:	mov    rdx,rsi
   140014434:	mov    rcx,rbx
   140014437:	mov    rbx,QWORD PTR [rsp+0x38]
   14001443c:	add    rsp,0x20
   140014440:	pop    rsi
   140014441:	rex.W jmp QWORD PTR [rax+0x5c8]
   140014448:	int3   
   140014449:	int3   
   14001444a:	int3   
   14001444b:	int3   
   14001444c:	int3   
   14001444d:	int3   
   14001444e:	int3   
   14001444f:	int3   
   140014450:	mov    QWORD PTR [rsp+0x8],rbx
   140014455:	push   rdi
   140014456:	sub    rsp,0x20
   14001445a:	mov    rax,QWORD PTR [rdx]
   14001445d:	mov    rdi,rdx
   140014460:	mov    rbx,rcx
   140014463:	mov    rdx,rcx
   140014466:	mov    rcx,rdi
   140014469:	call   QWORD PTR [rax+0x278]
   14001446f:	mov    r11,QWORD PTR [rdi]
   140014472:	mov    rdx,rbx
   140014475:	mov    rcx,rdi
   140014478:	mov    rbx,QWORD PTR [rsp+0x30]
   14001447d:	add    rsp,0x20
   140014481:	pop    rdi
   140014482:	rex.WB jmp QWORD PTR [r11+0x558]
   140014489:	int3   
   14001448a:	int3   
   14001448b:	int3   
   14001448c:	int3   
   14001448d:	int3   
   14001448e:	int3   
   14001448f:	int3   
   140014490:	mov    QWORD PTR [rsp+0x10],rbx
   140014495:	push   rsi
   140014496:	sub    rsp,0x20
   14001449a:	mov    rax,QWORD PTR [rdx]
   14001449d:	mov    rbx,rdx
   1400144a0:	mov    rsi,rcx
   1400144a3:	mov    rdx,rcx
   1400144a6:	mov    rcx,rbx
   1400144a9:	call   QWORD PTR [rax+0x2e0]
   1400144af:	test   al,al
   1400144b1:	je     0x1400144ee
   1400144b3:	mov    QWORD PTR [rsp+0x30],rdi
   1400144b8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400144bc:	test   rdi,rdi
   1400144bf:	je     0x1400144e9
   1400144c1:	mov    rax,QWORD PTR [rbx]
   1400144c4:	mov    rdx,rdi
   1400144c7:	mov    rcx,rbx
   1400144ca:	call   QWORD PTR [rax+0x8]
   1400144cd:	test   al,al
   1400144cf:	je     0x1400144dd
   1400144d1:	mov    rax,QWORD PTR [rdi]
   1400144d4:	mov    rdx,rbx
   1400144d7:	mov    rcx,rdi
   1400144da:	call   QWORD PTR [rax+0x28]
   1400144dd:	mov    rax,QWORD PTR [rbx]
   1400144e0:	mov    rdx,rdi
   1400144e3:	mov    rcx,rbx
   1400144e6:	call   QWORD PTR [rax+0x10]
   1400144e9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400144ee:	mov    rax,QWORD PTR [rbx]
   1400144f1:	mov    rdx,rsi
   1400144f4:	mov    rcx,rbx
   1400144f7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400144fc:	add    rsp,0x20
   140014500:	pop    rsi
   140014501:	rex.W jmp QWORD PTR [rax+0x5b8]
   140014508:	int3   
   140014509:	int3   
   14001450a:	int3   
   14001450b:	int3   
   14001450c:	int3   
   14001450d:	int3   
   14001450e:	int3   
   14001450f:	int3   
   140014510:	mov    QWORD PTR [rsp+0x10],rbx
   140014515:	push   rsi
   140014516:	sub    rsp,0x20
   14001451a:	mov    rax,QWORD PTR [rdx]
   14001451d:	mov    rbx,rdx
   140014520:	mov    rsi,rcx
   140014523:	mov    rdx,rcx
   140014526:	mov    rcx,rbx
   140014529:	call   QWORD PTR [rax+0x2e8]
   14001452f:	test   al,al
   140014531:	je     0x14001459f
   140014533:	mov    QWORD PTR [rsp+0x30],rdi
   140014538:	mov    rdi,QWORD PTR [rsi+0x10]
   14001453c:	test   rdi,rdi
   14001453f:	je     0x140014569
   140014541:	mov    rax,QWORD PTR [rbx]
   140014544:	mov    rdx,rdi
   140014547:	mov    rcx,rbx
   14001454a:	call   QWORD PTR [rax+0x8]
   14001454d:	test   al,al
   14001454f:	je     0x14001455d
   140014551:	mov    rax,QWORD PTR [rdi]
   140014554:	mov    rdx,rbx
   140014557:	mov    rcx,rdi
   14001455a:	call   QWORD PTR [rax+0x28]
   14001455d:	mov    rax,QWORD PTR [rbx]
   140014560:	mov    rdx,rdi
   140014563:	mov    rcx,rbx
   140014566:	call   QWORD PTR [rax+0x10]
   140014569:	mov    rdi,QWORD PTR [rsi+0x18]
   14001456d:	test   rdi,rdi
   140014570:	je     0x14001459a
   140014572:	mov    rax,QWORD PTR [rbx]
   140014575:	mov    rdx,rdi
   140014578:	mov    rcx,rbx
   14001457b:	call   QWORD PTR [rax+0x8]
   14001457e:	test   al,al
   140014580:	je     0x14001458e
   140014582:	mov    rax,QWORD PTR [rdi]
   140014585:	mov    rdx,rbx
   140014588:	mov    rcx,rdi
   14001458b:	call   QWORD PTR [rax+0x28]
   14001458e:	mov    rax,QWORD PTR [rbx]
   140014591:	mov    rdx,rdi
   140014594:	mov    rcx,rbx
   140014597:	call   QWORD PTR [rax+0x10]
   14001459a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001459f:	mov    rax,QWORD PTR [rbx]
   1400145a2:	mov    rdx,rsi
   1400145a5:	mov    rcx,rbx
   1400145a8:	mov    rbx,QWORD PTR [rsp+0x38]
   1400145ad:	add    rsp,0x20
   1400145b1:	pop    rsi
   1400145b2:	rex.W jmp QWORD PTR [rax+0x5c0]
   1400145b9:	int3   
   1400145ba:	int3   
   1400145bb:	int3   
   1400145bc:	int3   
   1400145bd:	int3   
   1400145be:	int3   
   1400145bf:	int3   
   1400145c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400145c5:	push   rsi
   1400145c6:	sub    rsp,0x20
   1400145ca:	mov    rax,QWORD PTR [rdx]
   1400145cd:	mov    rbx,rdx
   1400145d0:	mov    rsi,rcx
   1400145d3:	mov    rdx,rcx
   1400145d6:	mov    rcx,rbx
   1400145d9:	call   QWORD PTR [rax+0x2c8]
   1400145df:	test   al,al
   1400145e1:	je     0x14001461e
   1400145e3:	mov    QWORD PTR [rsp+0x30],rdi
   1400145e8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400145ec:	test   rdi,rdi
   1400145ef:	je     0x140014619
   1400145f1:	mov    rax,QWORD PTR [rbx]
   1400145f4:	mov    rdx,rdi
   1400145f7:	mov    rcx,rbx
   1400145fa:	call   QWORD PTR [rax+0x8]
   1400145fd:	test   al,al
   1400145ff:	je     0x14001460d
   140014601:	mov    rax,QWORD PTR [rdi]
   140014604:	mov    rdx,rbx
   140014607:	mov    rcx,rdi
   14001460a:	call   QWORD PTR [rax+0x28]
   14001460d:	mov    rax,QWORD PTR [rbx]
   140014610:	mov    rdx,rdi
   140014613:	mov    rcx,rbx
   140014616:	call   QWORD PTR [rax+0x10]
   140014619:	mov    rdi,QWORD PTR [rsp+0x30]
   14001461e:	mov    rax,QWORD PTR [rbx]
   140014621:	mov    rdx,rsi
   140014624:	mov    rcx,rbx
   140014627:	mov    rbx,QWORD PTR [rsp+0x38]
   14001462c:	add    rsp,0x20
   140014630:	pop    rsi
   140014631:	rex.W jmp QWORD PTR [rax+0x5a8]
   140014638:	jmp    QWORD PTR [rip+0xaea]        # 0x140015128
   14001463e:	jmp    QWORD PTR [rip+0xadc]        # 0x140015120
   140014644:	sub    rsp,0x38
   140014648:	lea    rcx,[rip+0x4b5]        # 0x140014b04
   14001464f:	call   0x140014ab4
   140014654:	mov    r11d,DWORD PTR [rip+0xff0d]        # 0x140024568
   14001465b:	mov    r9d,DWORD PTR [rip+0xff02]        # 0x140024564
   140014662:	lea    rax,[rip+0xfeeb]        # 0x140024554
   140014669:	lea    r8,[rip+0xfed0]        # 0x140024540
   140014670:	lea    rdx,[rip+0xfed1]        # 0x140024548
   140014677:	lea    rcx,[rip+0xfeba]        # 0x140024538
   14001467e:	mov    DWORD PTR [rip+0xfecf],r11d        # 0x140024554
   140014685:	mov    QWORD PTR [rsp+0x20],rax
   14001468a:	call   QWORD PTR [rip+0xa50]        # 0x1400150e0
   140014690:	mov    DWORD PTR [rip+0xfeba],eax        # 0x140024550
   140014696:	test   eax,eax
   140014698:	jns    0x1400146a4
   14001469a:	mov    ecx,0x8
   14001469f:	call   0x1400149fc
   1400146a4:	add    rsp,0x38
   1400146a8:	ret    
   1400146a9:	int3   
   1400146aa:	int3   
   1400146ab:	int3   
   1400146ac:	mov    QWORD PTR [rsp+0x8],rsi
   1400146b1:	push   rdi
   1400146b2:	sub    rsp,0x20
   1400146b6:	mov    rax,QWORD PTR gs:0x30
   1400146bf:	mov    rdi,QWORD PTR [rax+0x8]
   1400146c3:	xor    esi,esi
   1400146c5:	xor    eax,eax
   1400146c7:	lock cmpxchg QWORD PTR [rip+0xfea8],rdi        # 0x140024578
   1400146d0:	je     0x1400146ed
   1400146d2:	cmp    rax,rdi
   1400146d5:	jne    0x1400146e0
   1400146d7:	mov    edi,0x1
   1400146dc:	mov    esi,edi
   1400146de:	jmp    0x1400146f2
   1400146e0:	mov    ecx,0x3e8
   1400146e5:	call   QWORD PTR [rip+0x93d]        # 0x140015028
   1400146eb:	jmp    0x1400146c5
   1400146ed:	mov    edi,0x1
   1400146f2:	mov    eax,DWORD PTR [rip+0xfe7c]        # 0x140024574
   1400146f8:	cmp    eax,edi
   1400146fa:	jne    0x140014708
   1400146fc:	mov    ecx,0x1f
   140014701:	call   0x1400149fc
   140014706:	jmp    0x14001473f
   140014708:	mov    eax,DWORD PTR [rip+0xfe66]        # 0x140024574
   14001470e:	test   eax,eax
   140014710:	jne    0x140014739
   140014712:	mov    DWORD PTR [rip+0xfe5c],edi        # 0x140024574
   140014718:	lea    rdx,[rip+0xce9]        # 0x140015408
   14001471f:	lea    rcx,[rip+0xcca]        # 0x1400153f0
   140014726:	call   0x140014c18
   14001472b:	test   eax,eax
   14001472d:	je     0x14001473f
   14001472f:	mov    eax,0xff
   140014734:	jmp    0x140014821
   140014739:	mov    DWORD PTR [rip+0xfe1d],edi        # 0x14002455c
   14001473f:	mov    eax,DWORD PTR [rip+0xfe2f]        # 0x140024574
   140014745:	cmp    eax,edi
   140014747:	jne    0x140014766
   140014749:	lea    rdx,[rip+0xc98]        # 0x1400153e8
   140014750:	lea    rcx,[rip+0xc81]        # 0x1400153d8
   140014757:	call   0x140014c12
   14001475c:	mov    DWORD PTR [rip+0xfe0e],0x2        # 0x140024574
   140014766:	test   esi,esi
   140014768:	jne    0x140014773
   14001476a:	xor    eax,eax
   14001476c:	xchg   QWORD PTR [rip+0xfe05],rax        # 0x140024578
   140014773:	cmp    QWORD PTR [rip+0xfe15],0x0        # 0x140024590
   14001477b:	je     0x14001479c
   14001477d:	lea    rcx,[rip+0xfe0c]        # 0x140024590
   140014784:	call   0x140014bd0
   140014789:	test   eax,eax
   14001478b:	je     0x14001479c
   14001478d:	xor    r8d,r8d
   140014790:	lea    edx,[r8+0x2]
   140014794:	xor    ecx,ecx
   140014796:	call   QWORD PTR [rip+0xfdf4]        # 0x140024590
   14001479c:	mov    rcx,QWORD PTR [rip+0x90d]        # 0x1400150b0
   1400147a3:	mov    rax,QWORD PTR [rip+0xfd96]        # 0x140024540
   1400147aa:	mov    QWORD PTR [rcx],rax
   1400147ad:	mov    r8,QWORD PTR [rip+0xfd8c]        # 0x140024540
   1400147b4:	mov    rdx,QWORD PTR [rip+0xfd8d]        # 0x140024548
   1400147bb:	mov    ecx,DWORD PTR [rip+0xfd77]        # 0x140024538
   1400147c1:	call   0x140001b90
   1400147c6:	mov    DWORD PTR [rip+0xfd8c],eax        # 0x140024558
   1400147cc:	cmp    DWORD PTR [rip+0xfd69],0x0        # 0x14002453c
   1400147d3:	jne    0x1400147dd
   1400147d5:	mov    ecx,eax
   1400147d7:	call   QWORD PTR [rip+0x8db]        # 0x1400150b8
   1400147dd:	cmp    DWORD PTR [rip+0xfd78],0x0        # 0x14002455c
   1400147e4:	jne    0x1400147f2
   1400147e6:	call   QWORD PTR [rip+0x8d4]        # 0x1400150c0
   1400147ec:	mov    eax,DWORD PTR [rip+0xfd66]        # 0x140024558
   1400147f2:	jmp    0x140014821
   1400147f4:	mov    DWORD PTR [rip+0xfd5e],eax        # 0x140024558
   1400147fa:	cmp    DWORD PTR [rip+0xfd3b],0x0        # 0x14002453c
   140014801:	jne    0x14001480c
   140014803:	mov    ecx,eax
   140014805:	call   QWORD PTR [rip+0x8bd]        # 0x1400150c8
   14001480b:	int3   
   14001480c:	cmp    DWORD PTR [rip+0xfd49],0x0        # 0x14002455c
   140014813:	jne    0x140014821
   140014815:	call   QWORD PTR [rip+0x8a5]        # 0x1400150c0
   14001481b:	mov    eax,DWORD PTR [rip+0xfd37]        # 0x140024558
   140014821:	mov    rsi,QWORD PTR [rsp+0x30]
   140014826:	add    rsp,0x20
   14001482a:	pop    rdi
   14001482b:	ret    
   14001482c:	sub    rsp,0x28
   140014830:	mov    eax,0x5a4d
   140014835:	cmp    WORD PTR [rip+0xfffffffffffeb7c4],ax        # 0x140000000
   14001483c:	je     0x140014842
   14001483e:	xor    eax,eax
   140014840:	jmp    0x140014891
   140014842:	movsxd rcx,DWORD PTR [rip+0xfffffffffffeb7f3]        # 0x14000003c
   140014849:	lea    rax,[rip+0xfffffffffffeb7b0]        # 0x140000000
   140014850:	add    rcx,rax
   140014853:	cmp    DWORD PTR [rcx],0x4550
   140014859:	jne    0x14001483e
   14001485b:	movzx  eax,WORD PTR [rcx+0x18]
   14001485f:	cmp    eax,0x10b
   140014864:	je     0x140014880
   140014866:	cmp    eax,0x20b
   14001486b:	jne    0x14001483e
   14001486d:	xor    eax,eax
   14001486f:	cmp    DWORD PTR [rcx+0x84],0xe
   140014876:	jbe    0x140014891
   140014878:	cmp    DWORD PTR [rcx+0xf8],eax
   14001487e:	jmp    0x14001488e
   140014880:	xor    eax,eax
   140014882:	cmp    DWORD PTR [rcx+0x74],0xe
   140014886:	jbe    0x140014891
   140014888:	cmp    DWORD PTR [rcx+0xe8],eax
   14001488e:	setne  al
   140014891:	mov    ecx,0x1
   140014896:	mov    DWORD PTR [rip+0xfca0],eax        # 0x14002453c
   14001489c:	call   QWORD PTR [rip+0x7ce]        # 0x140015070
   1400148a2:	or     rcx,0xffffffffffffffff
   1400148a6:	call   QWORD PTR [rip+0x7cc]        # 0x140015078
   1400148ac:	mov    rcx,QWORD PTR [rip+0x7cd]        # 0x140015080
   1400148b3:	mov    QWORD PTR [rip+0xfcc6],rax        # 0x140024580
   1400148ba:	mov    QWORD PTR [rip+0xfcc7],rax        # 0x140024588
   1400148c1:	mov    eax,DWORD PTR [rip+0xfca9]        # 0x140024570
   1400148c7:	mov    DWORD PTR [rcx],eax
   1400148c9:	mov    rdx,QWORD PTR [rip+0x7b8]        # 0x140015088
   1400148d0:	mov    eax,DWORD PTR [rip+0xfc96]        # 0x14002456c
   1400148d6:	mov    DWORD PTR [rdx],eax
   1400148d8:	call   0x140014acc
   1400148dd:	call   0x140014c20
   1400148e2:	cmp    DWORD PTR [rip+0xfc37],0x0        # 0x140024520
   1400148e9:	jne    0x1400148f8
   1400148eb:	lea    rcx,[rip+0x32e]        # 0x140014c20
   1400148f2:	call   QWORD PTR [rip+0x798]        # 0x140015090
   1400148f8:	cmp    DWORD PTR [rip+0xfc1d],0xffffffff        # 0x14002451c
   1400148ff:	jne    0x14001490a
   140014901:	or     ecx,0xffffffff
   140014904:	call   QWORD PTR [rip+0x78e]        # 0x140015098
   14001490a:	xor    eax,eax
   14001490c:	add    rsp,0x28
   140014910:	ret    
   140014911:	int3   
   140014912:	int3   
   140014913:	int3   
   140014914:	sub    rsp,0x28
   140014918:	call   0x140014c24
   14001491d:	add    rsp,0x28
   140014921:	jmp    0x1400146ac
   140014926:	int3   
   140014927:	int3   
   140014928:	mov    QWORD PTR [rsp+0x8],rbx
   14001492d:	mov    QWORD PTR [rsp+0x10],rsi
   140014932:	push   rdi
   140014933:	sub    rsp,0x20
   140014937:	mov    esi,edx
   140014939:	mov    rbx,rcx
   14001493c:	test   dl,0x2
   14001493f:	je     0x14001496b
   140014941:	mov    r8d,DWORD PTR [rcx-0x8]
   140014945:	lea    r9,[rip+0x44e]        # 0x140014d9a
   14001494c:	mov    edx,0x18
   140014951:	call   0x140014d24
   140014956:	test   sil,0x1
   14001495a:	je     0x140014965
   14001495c:	lea    rcx,[rbx-0x8]
   140014960:	call   0x140014638
   140014965:	lea    rax,[rbx-0x8]
   140014969:	jmp    0x140014981
   14001496b:	call   0x140014d9a
   140014970:	test   sil,0x1
   140014974:	je     0x14001497e
   140014976:	mov    rcx,rbx
   140014979:	call   0x140014638
   14001497e:	mov    rax,rbx
   140014981:	mov    rbx,QWORD PTR [rsp+0x30]
   140014986:	mov    rsi,QWORD PTR [rsp+0x38]
   14001498b:	add    rsp,0x20
   14001498f:	pop    rdi
   140014990:	ret    
   140014991:	int3   
   140014992:	jmp    QWORD PTR [rip+0x770]        # 0x140015108
   140014998:	jmp    QWORD PTR [rip+0x75a]        # 0x1400150f8
   14001499e:	int3   
   14001499f:	int3   
   1400149a0:	sub    rsp,0x28
   1400149a4:	mov    rax,QWORD PTR [rcx]
   1400149a7:	cmp    DWORD PTR [rax],0xe06d7363
   1400149ad:	jne    0x1400149da
   1400149af:	cmp    DWORD PTR [rax+0x18],0x4
   1400149b3:	jne    0x1400149da
   1400149b5:	mov    eax,DWORD PTR [rax+0x20]
   1400149b8:	cmp    eax,0x19930520
   1400149bd:	je     0x1400149d4
   1400149bf:	cmp    eax,0x19930521
   1400149c4:	je     0x1400149d4
   1400149c6:	cmp    eax,0x19930522
   1400149cb:	je     0x1400149d4
   1400149cd:	cmp    eax,0x1994000
   1400149d2:	jne    0x1400149da
   1400149d4:	call   0x140014d82
   1400149d9:	int3   
   1400149da:	xor    eax,eax
   1400149dc:	add    rsp,0x28
   1400149e0:	ret    
   1400149e1:	int3   
   1400149e2:	int3   
   1400149e3:	int3   
   1400149e4:	sub    rsp,0x28
   1400149e8:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x1400149a0
   1400149ef:	call   QWORD PTR [rip+0x62b]        # 0x140015020
   1400149f5:	xor    eax,eax
   1400149f7:	add    rsp,0x28
   1400149fb:	ret    
   1400149fc:	jmp    QWORD PTR [rip+0x6e6]        # 0x1400150e8
   140014a02:	int3   
   140014a03:	int3   
   140014a04:	rex push rbx
   140014a06:	sub    rsp,0x20
   140014a0a:	mov    rbx,rcx
   140014a0d:	mov    rcx,QWORD PTR [rip+0xfb74]        # 0x140024588
   140014a14:	call   QWORD PTR [rip+0x716]        # 0x140015130
   140014a1a:	mov    QWORD PTR [rsp+0x38],rax
   140014a1f:	cmp    rax,0xffffffffffffffff
   140014a23:	jne    0x140014a30
   140014a25:	mov    rcx,rbx
   140014a28:	call   QWORD PTR [rip+0x61a]        # 0x140015048
   140014a2e:	jmp    0x140014aae
   140014a30:	mov    ecx,0x8
   140014a35:	call   0x140014d94
   140014a3a:	nop
   140014a3b:	mov    rcx,QWORD PTR [rip+0xfb46]        # 0x140024588
   140014a42:	call   QWORD PTR [rip+0x6e8]        # 0x140015130
   140014a48:	mov    QWORD PTR [rsp+0x38],rax
   140014a4d:	mov    rcx,QWORD PTR [rip+0xfb2c]        # 0x140024580
   140014a54:	call   QWORD PTR [rip+0x6d6]        # 0x140015130
   140014a5a:	mov    QWORD PTR [rsp+0x40],rax
   140014a5f:	mov    rcx,rbx
   140014a62:	call   QWORD PTR [rip+0x610]        # 0x140015078
   140014a68:	mov    rcx,rax
   140014a6b:	lea    r8,[rsp+0x40]
   140014a70:	lea    rdx,[rsp+0x38]
   140014a75:	call   0x140014d8e
   140014a7a:	mov    rbx,rax
   140014a7d:	mov    rcx,QWORD PTR [rsp+0x38]
   140014a82:	call   QWORD PTR [rip+0x5f0]        # 0x140015078
   140014a88:	mov    QWORD PTR [rip+0xfaf9],rax        # 0x140024588
   140014a8f:	mov    rcx,QWORD PTR [rsp+0x40]
   140014a94:	call   QWORD PTR [rip+0x5de]        # 0x140015078
   140014a9a:	mov    QWORD PTR [rip+0xfadf],rax        # 0x140024580
   140014aa1:	mov    ecx,0x8
   140014aa6:	call   0x140014d88
   140014aab:	mov    rax,rbx
   140014aae:	add    rsp,0x20
   140014ab2:	pop    rbx
   140014ab3:	ret    
   140014ab4:	sub    rsp,0x28
   140014ab8:	call   0x140014a04
   140014abd:	neg    rax
   140014ac0:	sbb    eax,eax
   140014ac2:	neg    eax
   140014ac4:	dec    eax
   140014ac6:	add    rsp,0x28
   140014aca:	ret    
   140014acb:	int3   
   140014acc:	mov    QWORD PTR [rsp+0x8],rbx
   140014ad1:	push   rdi
   140014ad2:	sub    rsp,0x20
   140014ad6:	lea    rbx,[rip+0xb703]        # 0x1400201e0
   140014add:	lea    rdi,[rip+0xb6fc]        # 0x1400201e0
   140014ae4:	jmp    0x140014af4
   140014ae6:	mov    rax,QWORD PTR [rbx]
   140014ae9:	test   rax,rax
   140014aec:	je     0x140014af0
   140014aee:	call   rax
   140014af0:	add    rbx,0x8
   140014af4:	cmp    rbx,rdi
   140014af7:	jb     0x140014ae6
   140014af9:	mov    rbx,QWORD PTR [rsp+0x30]
   140014afe:	add    rsp,0x20
   140014b02:	pop    rdi
   140014b03:	ret    
   140014b04:	mov    QWORD PTR [rsp+0x8],rbx
   140014b09:	push   rdi
   140014b0a:	sub    rsp,0x20
   140014b0e:	lea    rbx,[rip+0xb6db]        # 0x1400201f0
   140014b15:	lea    rdi,[rip+0xb6d4]        # 0x1400201f0
   140014b1c:	jmp    0x140014b2c
   140014b1e:	mov    rax,QWORD PTR [rbx]
   140014b21:	test   rax,rax
   140014b24:	je     0x140014b28
   140014b26:	call   rax
   140014b28:	add    rbx,0x8
   140014b2c:	cmp    rbx,rdi
   140014b2f:	jb     0x140014b1e
   140014b31:	mov    rbx,QWORD PTR [rsp+0x30]
   140014b36:	add    rsp,0x20
   140014b3a:	pop    rdi
   140014b3b:	ret    
   140014b3c:	jmp    QWORD PTR [rip+0x596]        # 0x1400150d8
   140014b42:	jmp    QWORD PTR [rip+0x588]        # 0x1400150d0
   140014b48:	int3   
   140014b49:	int3   
   140014b4a:	int3   
   140014b4b:	int3   
   140014b4c:	int3   
   140014b4d:	int3   
   140014b4e:	int3   
   140014b4f:	int3   
   140014b50:	mov    rax,rcx
   140014b53:	mov    ecx,0x5a4d
   140014b58:	cmp    WORD PTR [rax],cx
   140014b5b:	je     0x140014b60
   140014b5d:	xor    eax,eax
   140014b5f:	ret    
   140014b60:	movsxd rcx,DWORD PTR [rax+0x3c]
   140014b64:	add    rcx,rax
   140014b67:	xor    eax,eax
   140014b69:	cmp    DWORD PTR [rcx],0x4550
   140014b6f:	jne    0x140014b7d
   140014b71:	mov    edx,0x20b
   140014b76:	cmp    WORD PTR [rcx+0x18],dx
   140014b7a:	sete   al
   140014b7d:	repz ret 
   140014b7f:	int3   
   140014b80:	movsxd r8,DWORD PTR [rcx+0x3c]
   140014b84:	xor    r9d,r9d
   140014b87:	mov    r10,rdx
   140014b8a:	add    r8,rcx
   140014b8d:	movzx  eax,WORD PTR [r8+0x14]
   140014b92:	movzx  r11d,WORD PTR [r8+0x6]
   140014b97:	lea    rcx,[rax+r8*1+0x18]
   140014b9c:	test   r11d,r11d
   140014b9f:	je     0x140014bbf
   140014ba1:	mov    edx,DWORD PTR [rcx+0xc]
   140014ba4:	cmp    r10,rdx
   140014ba7:	jb     0x140014bb3
   140014ba9:	mov    eax,DWORD PTR [rcx+0x8]
   140014bac:	add    eax,edx
   140014bae:	cmp    r10,rax
   140014bb1:	jb     0x140014bc2
   140014bb3:	inc    r9d
   140014bb6:	add    rcx,0x28
   140014bba:	cmp    r9d,r11d
   140014bbd:	jb     0x140014ba1
   140014bbf:	xor    eax,eax
   140014bc1:	ret    
   140014bc2:	mov    rax,rcx
   140014bc5:	ret    
   140014bc6:	int3   
   140014bc7:	int3   
   140014bc8:	int3   
   140014bc9:	int3   
   140014bca:	int3   
   140014bcb:	int3   
   140014bcc:	int3   
   140014bcd:	int3   
   140014bce:	int3   
   140014bcf:	int3   
   140014bd0:	sub    rsp,0x28
   140014bd4:	mov    r8,rcx
   140014bd7:	lea    r9,[rip+0xfffffffffffeb422]        # 0x140000000
   140014bde:	mov    rcx,r9
   140014be1:	call   0x140014b50
   140014be6:	test   eax,eax
   140014be8:	je     0x140014c0c
   140014bea:	sub    r8,r9
   140014bed:	mov    rdx,r8
   140014bf0:	mov    rcx,r9
   140014bf3:	call   0x140014b80
   140014bf8:	test   rax,rax
   140014bfb:	je     0x140014c0c
   140014bfd:	mov    eax,DWORD PTR [rax+0x24]
   140014c00:	shr    eax,0x1f
   140014c03:	not    eax
   140014c05:	and    eax,0x1
   140014c08:	jmp    0x140014c0c
   140014c0a:	xor    eax,eax
   140014c0c:	add    rsp,0x28
   140014c10:	ret    
   140014c11:	int3   
   140014c12:	jmp    QWORD PTR [rip+0x490]        # 0x1400150a8
   140014c18:	jmp    QWORD PTR [rip+0x482]        # 0x1400150a0
   140014c1e:	int3   
   140014c1f:	int3   
   140014c20:	xor    eax,eax
   140014c22:	ret    
   140014c23:	int3   
   140014c24:	mov    QWORD PTR [rsp+0x18],rbx
   140014c29:	push   rdi
   140014c2a:	sub    rsp,0x20
   140014c2e:	mov    rax,QWORD PTR [rip+0xf8f3]        # 0x140024528
   140014c35:	and    QWORD PTR [rsp+0x30],0x0
   140014c3b:	movabs rdi,0x2b992ddfa232
   140014c45:	cmp    rax,rdi
   140014c48:	je     0x140014c56
   140014c4a:	not    rax
   140014c4d:	mov    QWORD PTR [rip+0xf8dc],rax        # 0x140024530
   140014c54:	jmp    0x140014ccc
   140014c56:	lea    rcx,[rsp+0x30]
   140014c5b:	call   QWORD PTR [rip+0x3cf]        # 0x140015030
   140014c61:	mov    rbx,QWORD PTR [rsp+0x30]
   140014c66:	call   QWORD PTR [rip+0x394]        # 0x140015000
   140014c6c:	mov    r11d,eax
   140014c6f:	xor    rbx,r11
   140014c72:	call   QWORD PTR [rip+0x390]        # 0x140015008
   140014c78:	mov    r11d,eax
   140014c7b:	xor    rbx,r11
   140014c7e:	call   QWORD PTR [rip+0x38c]        # 0x140015010
   140014c84:	lea    rcx,[rsp+0x38]
   140014c89:	mov    r11d,eax
   140014c8c:	xor    rbx,r11
   140014c8f:	call   QWORD PTR [rip+0x383]        # 0x140015018
   140014c95:	mov    r11,QWORD PTR [rsp+0x38]
   140014c9a:	xor    r11,rbx
   140014c9d:	movabs rax,0xffffffffffff
   140014ca7:	and    r11,rax
   140014caa:	movabs rax,0x2b992ddfa233
   140014cb4:	cmp    r11,rdi
   140014cb7:	cmove  r11,rax
   140014cbb:	mov    QWORD PTR [rip+0xf866],r11        # 0x140024528
   140014cc2:	not    r11
   140014cc5:	mov    QWORD PTR [rip+0xf864],r11        # 0x140024530
   140014ccc:	mov    rbx,QWORD PTR [rsp+0x40]
   140014cd1:	add    rsp,0x20
   140014cd5:	pop    rdi
   140014cd6:	ret    
   140014cd7:	int3   
   140014cd8:	mov    QWORD PTR [rsp+0x10],rbx
   140014cdd:	mov    DWORD PTR [rsp+0x18],r8d
   140014ce2:	mov    QWORD PTR [rsp+0x8],rcx
   140014ce7:	push   rsi
   140014ce8:	push   rdi
   140014ce9:	push   r12
   140014ceb:	sub    rsp,0x40
   140014cef:	mov    rsi,r9
   140014cf2:	mov    edi,r8d
   140014cf5:	mov    r12,rdx
   140014cf8:	mov    rbx,rcx
   140014cfb:	sub    edi,0x1
   140014cfe:	mov    DWORD PTR [rsp+0x70],edi
   140014d02:	js     0x140014d13
   140014d04:	sub    rbx,r12
   140014d07:	mov    QWORD PTR [rsp+0x60],rbx
   140014d0c:	mov    rcx,rbx
   140014d0f:	call   rsi
   140014d11:	jmp    0x140014cfb
   140014d13:	jmp    0x140014d15
   140014d15:	mov    rbx,QWORD PTR [rsp+0x68]
   140014d1a:	add    rsp,0x40
   140014d1e:	pop    r12
   140014d20:	pop    rdi
   140014d21:	pop    rsi
   140014d22:	ret    
   140014d23:	int3   
   140014d24:	mov    rax,rsp
   140014d27:	mov    QWORD PTR [rax+0x20],r9
   140014d2b:	mov    DWORD PTR [rax+0x18],r8d
   140014d2f:	mov    QWORD PTR [rax+0x10],rdx
   140014d33:	push   rbx
   140014d34:	push   rsi
   140014d35:	push   rdi
   140014d36:	push   r12
   140014d38:	sub    rsp,0x38
   140014d3c:	mov    r12,r9
   140014d3f:	movsxd rdi,r8d
   140014d42:	mov    rsi,rdx
   140014d45:	and    DWORD PTR [rax-0x38],0x0
   140014d49:	mov    rbx,rdi
   140014d4c:	imul   rbx,rdx
   140014d50:	add    rbx,rcx
   140014d53:	mov    QWORD PTR [rax+0x8],rbx
   140014d57:	sub    edi,0x1
   140014d5a:	mov    DWORD PTR [rsp+0x70],edi
   140014d5e:	js     0x140014d70
   140014d60:	sub    rbx,rsi
   140014d63:	mov    QWORD PTR [rsp+0x60],rbx
   140014d68:	mov    rcx,rbx
   140014d6b:	call   r12
   140014d6e:	jmp    0x140014d57
   140014d70:	mov    DWORD PTR [rsp+0x20],0x1
   140014d78:	add    rsp,0x38
   140014d7c:	pop    r12
   140014d7e:	pop    rdi
   140014d7f:	pop    rsi
   140014d80:	pop    rbx
   140014d81:	ret    
   140014d82:	jmp    QWORD PTR [rip+0x2e0]        # 0x140015068
   140014d88:	jmp    QWORD PTR [rip+0x2d2]        # 0x140015060
   140014d8e:	jmp    QWORD PTR [rip+0x2c4]        # 0x140015058
   140014d94:	jmp    QWORD PTR [rip+0x2b6]        # 0x140015050
   140014d9a:	jmp    QWORD PTR [rip+0x2a0]        # 0x140015040
   140014da0:	rex push rbp
   140014da2:	sub    rsp,0x20
   140014da6:	mov    rbp,rdx
   140014da9:	mov    rax,QWORD PTR [rcx]
   140014dac:	mov    rdx,rcx
   140014daf:	mov    ecx,DWORD PTR [rax]
   140014db1:	call   0x140014b42
   140014db6:	add    rsp,0x20
   140014dba:	pop    rbp
   140014dbb:	ret    
   140014dbc:	rex push rbp
   140014dbe:	sub    rsp,0x20
   140014dc2:	mov    rbp,rdx
   140014dc5:	mov    ecx,0x8
   140014dca:	call   0x140014d88
   140014dcf:	add    rsp,0x20
   140014dd3:	pop    rbp
   140014dd4:	ret    
   140014dd5:	int3   
   140014dd6:	int3   
   140014dd7:	int3   
   140014dd8:	int3   
   140014dd9:	int3   
   140014dda:	int3   
   140014ddb:	int3   
   140014ddc:	int3   
   140014ddd:	int3   
   140014dde:	int3   
   140014ddf:	int3   
   140014de0:	rex push rbp
   140014de2:	sub    rsp,0x20
   140014de6:	mov    rbp,rdx
   140014de9:	mov    rax,QWORD PTR [rcx]
   140014dec:	xor    ecx,ecx
   140014dee:	cmp    DWORD PTR [rax],0xc0000005
   140014df4:	sete   cl
   140014df7:	mov    eax,ecx
   140014df9:	mov    eax,ecx
   140014dfb:	add    rsp,0x20
   140014dff:	pop    rbp
   140014e00:	ret    
   140014e01:	rex push rbp
   140014e03:	sub    rsp,0x20
   140014e07:	mov    rbp,rdx
   140014e0a:	mov    QWORD PTR [rbp+0x38],rcx
   140014e0e:	mov    QWORD PTR [rbp+0x28],rcx
   140014e12:	mov    rax,QWORD PTR [rbp+0x28]
   140014e16:	mov    rcx,QWORD PTR [rax]
   140014e19:	mov    QWORD PTR [rbp+0x30],rcx
   140014e1d:	mov    rax,QWORD PTR [rbp+0x30]
   140014e21:	cmp    DWORD PTR [rax],0xe06d7363
   140014e27:	je     0x140014e35
   140014e29:	mov    DWORD PTR [rbp+0x20],0x0
   140014e30:	mov    eax,DWORD PTR [rbp+0x20]
   140014e33:	jmp    0x140014e3a
   140014e35:	call   0x140014d82
   140014e3a:	add    rsp,0x20
   140014e3e:	pop    rbp
   140014e3f:	ret    
   140014e40:	rex push rbp
   140014e42:	sub    rsp,0x20
   140014e46:	mov    rbp,rdx
   140014e49:	cmp    DWORD PTR [rbp+0x20],0x0
   140014e4d:	jne    0x140014e64
   140014e4f:	mov    r9,QWORD PTR [rbp+0x78]
   140014e53:	mov    r8d,DWORD PTR [rbp+0x70]
   140014e57:	mov    rdx,QWORD PTR [rbp+0x68]
   140014e5b:	mov    rcx,QWORD PTR [rbp+0x60]
   140014e5f:	call   0x140014cd8
   140014e64:	add    rsp,0x20
   140014e68:	pop    rbp
   140014e69:	ret    

Disassembly of section .rdata:

0000000140015000 <.rdata>:
   140015000:	sbb    ah,BYTE PTR [rsi]
   140015002:	add    al,BYTE PTR [rax]
   140015004:	add    BYTE PTR [rax],al
   140015006:	add    BYTE PTR [rax],al
   140015008:	add    al,0x26
   14001500a:	add    al,BYTE PTR [rax]
   14001500c:	add    BYTE PTR [rax],al
   14001500e:	add    BYTE PTR [rax],al
   140015010:	hlt    
   140015011:	and    eax,0x2
   140015016:	add    BYTE PTR [rax],al
   140015018:	fisub  DWORD PTR [rip+0x2]        # 0x140015020
   14001501e:	add    BYTE PTR [rax],al
   140015020:	mov    esp,0x225
   140015025:	add    BYTE PTR [rax],al
   140015027:	add    BYTE PTR [rbp+riz*1+0x2],dh
   14001502e:	add    BYTE PTR [rax],al
   140015030:	xor    BYTE PTR [rsi],ah
   140015032:	add    al,BYTE PTR [rax]
	...
   140015040:	jle    0x140015067
   140015042:	add    al,BYTE PTR [rax]
   140015044:	add    BYTE PTR [rax],al
   140015046:	add    BYTE PTR [rax],al
   140015048:	(bad)  
   140015049:	and    eax,0x2
   14001504e:	add    BYTE PTR [rax],al
   140015050:	pop    rdx
   140015051:	and    eax,0x2
   140015056:	add    BYTE PTR [rax],al
   140015058:	rex.WR and rax,0x2
   14001505e:	add    BYTE PTR [rax],al
   140015060:	rex.X and eax,0x2
   140015066:	add    BYTE PTR [rax],al
   140015068:	cs and eax,0x2
   14001506e:	add    BYTE PTR [rax],al
   140015070:	sbb    al,0x25
   140015072:	add    al,BYTE PTR [rax]
   140015074:	add    BYTE PTR [rax],al
   140015076:	add    BYTE PTR [rax],al
   140015078:	or     ah,BYTE PTR [rip+0x2]        # 0x140015080
   14001507e:	add    BYTE PTR [rax],al
   140015080:	add    BYTE PTR [rip+0x2],ah        # 0x140015088
   140015086:	add    BYTE PTR [rax],al
   140015088:	hlt    
   140015089:	and    al,0x2
   14001508b:	add    BYTE PTR [rax],al
   14001508d:	add    BYTE PTR [rax],al
   14001508f:	add    al,ah
   140015091:	and    al,0x2
   140015093:	add    BYTE PTR [rax],al
   140015095:	add    BYTE PTR [rax],al
   140015097:	add    dl,cl
   140015099:	and    al,0x2
   14001509b:	add    BYTE PTR [rax],al
   14001509d:	add    BYTE PTR [rax],al
   14001509f:	add    BYTE PTR [rsp+0x2],bh
   1400150a6:	add    BYTE PTR [rax],al
   1400150a8:	mov    al,0x24
   1400150aa:	add    al,BYTE PTR [rax]
   1400150ac:	add    BYTE PTR [rax],al
   1400150ae:	add    BYTE PTR [rax],al
   1400150b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400150b1:	and    al,0x2
   1400150b3:	add    BYTE PTR [rax],al
   1400150b5:	add    BYTE PTR [rax],al
   1400150b7:	add    BYTE PTR [rsp+0x2],bl
   1400150be:	add    BYTE PTR [rax],al
   1400150c0:	xchg   edx,eax
   1400150c1:	and    al,0x2
   1400150c3:	add    BYTE PTR [rax],al
   1400150c5:	add    BYTE PTR [rax],al
   1400150c7:	add    BYTE PTR [rdx+0x224],cl
   1400150cd:	add    BYTE PTR [rax],al
   1400150cf:	add    BYTE PTR [rsp+0x2],bh
   1400150d3:	add    BYTE PTR [rax],al
   1400150d5:	add    BYTE PTR [rax],al
   1400150d7:	add    BYTE PTR [rsp+0x2],ah
   1400150db:	add    BYTE PTR [rax],al
   1400150dd:	add    BYTE PTR [rax],al
   1400150df:	add    BYTE PTR [rsp+0x2],dl
   1400150e3:	add    BYTE PTR [rax],al
   1400150e5:	add    BYTE PTR [rax],al
   1400150e7:	add    BYTE PTR [rsi+0x24],al
   1400150ea:	add    al,BYTE PTR [rax]
   1400150ec:	add    BYTE PTR [rax],al
   1400150ee:	add    BYTE PTR [rax],al
   1400150f0:	xor    BYTE PTR [rdx+rax*1],ah
   1400150f3:	add    BYTE PTR [rax],al
   1400150f5:	add    BYTE PTR [rax],al
   1400150f7:	add    BYTE PTR [rsi],ah
   1400150f9:	and    al,0x2
   1400150fb:	add    BYTE PTR [rax],al
   1400150fd:	add    BYTE PTR [rax],al
   1400150ff:	add    BYTE PTR [rsi],bl
   140015101:	and    al,0x2
   140015103:	add    BYTE PTR [rax],al
   140015105:	add    BYTE PTR [rax],al
   140015107:	add    BYTE PTR [rdx],dl
   140015109:	and    al,0x2
   14001510b:	add    BYTE PTR [rax],al
   14001510d:	add    BYTE PTR [rax],al
   14001510f:	add    BYTE PTR [rax],cl
   140015111:	and    al,0x2
   140015113:	add    BYTE PTR [rax],al
   140015115:	add    BYTE PTR [rax],al
   140015117:	add    dh,bh
   140015119:	and    eax,DWORD PTR [rdx]
   14001511b:	add    BYTE PTR [rax],al
   14001511d:	add    BYTE PTR [rax],al
   14001511f:	add    ah,ch
   140015121:	and    eax,DWORD PTR [rdx]
   140015123:	add    BYTE PTR [rax],al
   140015125:	add    BYTE PTR [rax],al
   140015127:	add    ah,bl
   140015129:	and    eax,DWORD PTR [rdx]
   14001512b:	add    BYTE PTR [rax],al
   14001512d:	add    BYTE PTR [rax],al
   14001512f:	add    BYTE PTR [rbp+riz*1+0x2],ch
	...
   14001513f:	add    BYTE PTR [rsi+0x1d],dl
   140015142:	add    al,BYTE PTR [rax]
   140015144:	add    BYTE PTR [rax],al
   140015146:	add    BYTE PTR [rax],al
   140015148:	pushf  
   140015149:	sbb    eax,0x2
   14001514e:	add    BYTE PTR [rax],al
   140015150:	mov    esi,0x21d
   140015155:	add    BYTE PTR [rax],al
   140015157:	add    BYTE PTR [rdx],al
   140015159:	(bad)  
   14001515a:	add    al,BYTE PTR [rax]
   14001515c:	add    BYTE PTR [rax],al
   14001515e:	add    BYTE PTR [rax],al
   140015160:	rex.W (bad) 
   140015162:	add    al,BYTE PTR [rax]
   140015164:	add    BYTE PTR [rax],al
   140015166:	add    BYTE PTR [rax],al
   140015168:	outs   dx,BYTE PTR ds:[rsi]
   140015169:	(bad)  
   14001516a:	add    al,BYTE PTR [rax]
   14001516c:	add    BYTE PTR [rax],al
   14001516e:	add    BYTE PTR [rax],al
   140015170:	nop
   140015171:	(bad)  
   140015172:	add    al,BYTE PTR [rax]
   140015174:	add    BYTE PTR [rax],al
   140015176:	add    BYTE PTR [rax],al
   140015178:	(bad)  
   140015179:	(bad)  
   14001517a:	add    al,BYTE PTR [rax]
   14001517c:	add    BYTE PTR [rax],al
   14001517e:	add    BYTE PTR [rax],al
   140015180:	or     bl,BYTE PTR [rdi]
   140015182:	add    al,BYTE PTR [rax]
   140015184:	add    BYTE PTR [rax],al
   140015186:	add    BYTE PTR [rax],al
   140015188:	rex.WX (bad) 
   14001518a:	add    al,BYTE PTR [rax]
   14001518c:	add    BYTE PTR [rax],al
   14001518e:	add    BYTE PTR [rax],al
   140015190:	jbe    0x1400151b1
   140015192:	add    al,BYTE PTR [rax]
   140015194:	add    BYTE PTR [rax],al
   140015196:	add    BYTE PTR [rax],al
   140015198:	pushf  
   140015199:	(bad)  
   14001519a:	add    al,BYTE PTR [rax]
   14001519c:	add    BYTE PTR [rax],al
   14001519e:	add    BYTE PTR [rax],al
   1400151a0:	enter  0x21f,0x0
   1400151a4:	add    BYTE PTR [rax],al
   1400151a6:	add    BYTE PTR [rax],al
   1400151a8:	call   0x1400153cc
   1400151ad:	add    BYTE PTR [rax],al
   1400151af:	add    BYTE PTR [rax],cl
   1400151b1:	and    BYTE PTR [rdx],al
   1400151b3:	add    BYTE PTR [rax],al
   1400151b5:	add    BYTE PTR [rax],al
   1400151b7:	add    BYTE PTR [rax+riz*1],ch
   1400151ba:	add    al,BYTE PTR [rax]
   1400151bc:	add    BYTE PTR [rax],al
   1400151be:	add    BYTE PTR [rax],al
   1400151c0:	rex.WRX and BYTE PTR [rdx],r8b
   1400151c3:	add    BYTE PTR [rax],al
   1400151c5:	add    BYTE PTR [rax],al
   1400151c7:	add    BYTE PTR [rdx+0x20],bh
   1400151ca:	add    al,BYTE PTR [rax]
   1400151cc:	add    BYTE PTR [rax],al
   1400151ce:	add    BYTE PTR [rax],al
   1400151d0:	mov    dl,0x20
   1400151d2:	add    al,BYTE PTR [rax]
   1400151d4:	add    BYTE PTR [rax],al
   1400151d6:	add    BYTE PTR [rax],al
   1400151d8:	(bad)  
   1400151d9:	and    BYTE PTR [rdx],al
   1400151db:	add    BYTE PTR [rax],al
   1400151dd:	add    BYTE PTR [rax],al
   1400151df:	add    ah,dh
   1400151e1:	and    BYTE PTR [rdx],al
   1400151e3:	add    BYTE PTR [rax],al
   1400151e5:	add    BYTE PTR [rax],al
   1400151e7:	add    BYTE PTR [rsi],cl
   1400151e9:	and    DWORD PTR [rdx],eax
   1400151eb:	add    BYTE PTR [rax],al
   1400151ed:	add    BYTE PTR [rax],al
   1400151ef:	add    BYTE PTR [rax+0x1d],al
   1400151f2:	add    al,BYTE PTR [rax]
   1400151f4:	add    BYTE PTR [rax],al
   1400151f6:	add    BYTE PTR [rax],al
   1400151f8:	rex.X and DWORD PTR [rdx],eax
   1400151fb:	add    BYTE PTR [rax],al
   1400151fd:	add    BYTE PTR [rax],al
   1400151ff:	add    BYTE PTR [rdx+0x21],dl
   140015202:	add    al,BYTE PTR [rax]
   140015204:	add    BYTE PTR [rax],al
   140015206:	add    BYTE PTR [rax],al
   140015208:	push   0x21
   14001520a:	add    al,BYTE PTR [rax]
   14001520c:	add    BYTE PTR [rax],al
   14001520e:	add    BYTE PTR [rax],al
   140015210:	jp     0x140015233
   140015212:	add    al,BYTE PTR [rax]
   140015214:	add    BYTE PTR [rax],al
   140015216:	add    BYTE PTR [rax],al
   140015218:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015219:	and    DWORD PTR [rdx],eax
   14001521b:	add    BYTE PTR [rax],al
   14001521d:	add    BYTE PTR [rax],al
   14001521f:	add    ah,cl
   140015221:	and    DWORD PTR [rdx],eax
   140015223:	add    BYTE PTR [rax],al
   140015225:	add    BYTE PTR [rax],al
   140015227:	add    dh,ch
   140015229:	and    DWORD PTR [rdx],eax
   14001522b:	add    BYTE PTR [rax],al
   14001522d:	add    BYTE PTR [rax],al
   14001522f:	add    BYTE PTR [rdx+riz*1],cl
   140015232:	add    al,BYTE PTR [rax]
   140015234:	add    BYTE PTR [rax],al
   140015236:	add    BYTE PTR [rax],al
   140015238:	and    al,BYTE PTR es:[rdx]
   14001523b:	add    BYTE PTR [rax],al
   14001523d:	add    BYTE PTR [rax],al
   14001523f:	add    BYTE PTR [rsi+0x22],cl
   140015242:	add    al,BYTE PTR [rax]
   140015244:	add    BYTE PTR [rax],al
   140015246:	add    BYTE PTR [rax],al
   140015248:	jb     0x14001526c
   14001524a:	add    al,BYTE PTR [rax]
   14001524c:	add    BYTE PTR [rax],al
   14001524e:	add    BYTE PTR [rax],al
   140015250:	cwde   
   140015251:	and    al,BYTE PTR [rdx]
   140015253:	add    BYTE PTR [rax],al
   140015255:	add    BYTE PTR [rax],al
   140015257:	add    BYTE PTR [rdx+riz*1+0x2],bh
   14001525e:	add    BYTE PTR [rax],al
   140015260:	fsub   DWORD PTR [rdx]
   140015262:	add    al,BYTE PTR [rax]
   140015264:	add    BYTE PTR [rax],al
   140015266:	add    BYTE PTR [rax],al
   140015268:	cli    
   140015269:	and    al,BYTE PTR [rdx]
   14001526b:	add    BYTE PTR [rax],al
   14001526d:	add    BYTE PTR [rax],al
   14001526f:	add    BYTE PTR [rax],ch
   140015271:	and    eax,DWORD PTR [rdx]
   140015273:	add    BYTE PTR [rax],al
   140015275:	add    BYTE PTR [rax],al
   140015277:	add    BYTE PTR [rdx+0x23],al
   14001527a:	add    al,BYTE PTR [rax]
   14001527c:	add    BYTE PTR [rax],al
   14001527e:	add    BYTE PTR [rax],al
   140015280:	and    eax,DWORD PTR fs:[rdx]
   140015283:	add    BYTE PTR [rax],al
   140015285:	add    BYTE PTR [rax],al
   140015287:	add    BYTE PTR [rbx+riz*1+0x2],cl
   14001528e:	add    BYTE PTR [rax],al
   140015290:	(bad)  
   140015291:	sbb    al,0x2
   140015293:	add    BYTE PTR [rax],al
   140015295:	add    BYTE PTR [rax],al
   140015297:	add    BYTE PTR [rsp+rbx*1+0x2],bh
   14001529e:	add    BYTE PTR [rax],al
   1400152a0:	js     0x1400152be
   1400152a2:	add    al,BYTE PTR [rax]
   1400152a4:	add    BYTE PTR [rax],al
   1400152a6:	add    BYTE PTR [rax],al
   1400152a8:	cmp    bl,BYTE PTR [rdx+rax*1]
   1400152ab:	add    BYTE PTR [rax],al
   1400152ad:	add    BYTE PTR [rax],al
   1400152af:	add    al,bh
   1400152b1:	sbb    eax,DWORD PTR [rdx]
   1400152b3:	add    BYTE PTR [rax],al
   1400152b5:	add    BYTE PTR [rax],al
   1400152b7:	add    dh,cl
   1400152b9:	sbb    eax,DWORD PTR [rdx]
   1400152bb:	add    BYTE PTR [rax],al
   1400152bd:	add    BYTE PTR [rax],al
   1400152bf:	add    BYTE PTR [rax+0x21b],dl
   1400152c5:	add    BYTE PTR [rax],al
   1400152c7:	add    BYTE PTR [rsi+0x1b],ch
   1400152ca:	add    al,BYTE PTR [rax]
   1400152cc:	add    BYTE PTR [rax],al
   1400152ce:	add    BYTE PTR [rax],al
   1400152d0:	rex.WRX sbb r8,QWORD PTR [rdx]
   1400152d3:	add    BYTE PTR [rax],al
   1400152d5:	add    BYTE PTR [rax],al
   1400152d7:	add    BYTE PTR [rbx+rbx*1],ch
   1400152da:	add    al,BYTE PTR [rax]
   1400152dc:	add    BYTE PTR [rax],al
   1400152de:	add    BYTE PTR [rax],al
   1400152e0:	out    dx,al
   1400152e1:	sbb    al,BYTE PTR [rdx]
   1400152e3:	add    BYTE PTR [rax],al
   1400152e5:	add    BYTE PTR [rax],al
   1400152e7:	add    al,al
   1400152e9:	sbb    al,BYTE PTR [rdx]
   1400152eb:	add    BYTE PTR [rax],al
   1400152ed:	add    BYTE PTR [rax],al
   1400152ef:	add    BYTE PTR [rdx+rbx*1+0x2],bl
   1400152f6:	add    BYTE PTR [rax],al
   1400152f8:	outs   dx,BYTE PTR ds:[rsi]
   1400152f9:	sbb    al,BYTE PTR [rdx]
   1400152fb:	add    BYTE PTR [rax],al
   1400152fd:	add    BYTE PTR [rax],al
   1400152ff:	add    BYTE PTR [rax+0x1a],dl
   140015302:	add    al,BYTE PTR [rax]
   140015304:	add    BYTE PTR [rax],al
   140015306:	add    BYTE PTR [rax],al
   140015308:	sub    BYTE PTR [rdx],bl
   14001530a:	add    al,BYTE PTR [rax]
   14001530c:	add    BYTE PTR [rax],al
   14001530e:	add    BYTE PTR [rax],al
   140015310:	or     BYTE PTR [rdx],bl
   140015312:	add    al,BYTE PTR [rax]
   140015314:	add    BYTE PTR [rax],al
   140015316:	add    BYTE PTR [rax],al
   140015318:	in     al,0x19
   14001531a:	add    al,BYTE PTR [rax]
   14001531c:	add    BYTE PTR [rax],al
   14001531e:	add    BYTE PTR [rax],al
   140015320:	(bad)  
   140015321:	sbb    DWORD PTR [rdx],eax
   140015323:	add    BYTE PTR [rax],al
   140015325:	add    BYTE PTR [rax],al
   140015327:	add    BYTE PTR [rdx+0x219],bh
   14001532d:	add    BYTE PTR [rax],al
   14001532f:	add    BYTE PTR [rsi+0x219],cl
   140015335:	add    BYTE PTR [rax],al
   140015337:	add    BYTE PTR [rsi+0x19],bl
   14001533a:	add    al,BYTE PTR [rax]
   14001533c:	add    BYTE PTR [rax],al
   14001533e:	add    BYTE PTR [rax],al
   140015340:	sbb    DWORD PTR [rdx],r8d
   140015343:	add    BYTE PTR [rax],al
   140015345:	add    BYTE PTR [rax],al
   140015347:	add    BYTE PTR [rsi],ah
   140015349:	sbb    DWORD PTR [rdx],eax
   14001534b:	add    BYTE PTR [rax],al
   14001534d:	add    BYTE PTR [rax],al
   14001534f:	add    BYTE PTR [rax],al
   140015351:	sbb    DWORD PTR [rdx],eax
   140015353:	add    BYTE PTR [rax],al
   140015355:	add    BYTE PTR [rax],al
   140015357:	add    al,bl
   140015359:	sbb    BYTE PTR [rdx],al
   14001535b:	add    BYTE PTR [rax],al
   14001535d:	add    BYTE PTR [rax],al
   14001535f:	add    BYTE PTR [rax+0x218],bh
   140015365:	add    BYTE PTR [rax],al
   140015367:	add    BYTE PTR [rax+0x218],dl
   14001536d:	add    BYTE PTR [rax],al
   14001536f:	add    BYTE PTR [rdx+0x18],ah
   140015372:	add    al,BYTE PTR [rax]
   140015374:	add    BYTE PTR [rax],al
   140015376:	add    BYTE PTR [rax],al
   140015378:	sbb    BYTE PTR ds:[rdx],al
   14001537b:	add    BYTE PTR [rax],al
   14001537d:	add    BYTE PTR [rax],al
   14001537f:	add    dh,bh
   140015381:	(bad)  
   140015382:	add    al,BYTE PTR [rax]
   140015384:	add    BYTE PTR [rax],al
   140015386:	add    BYTE PTR [rax],al
   140015388:	(bad)  
   140015389:	sbb    BYTE PTR [rdx],al
   14001538b:	add    BYTE PTR [rax],al
   14001538d:	add    BYTE PTR [rax],al
   14001538f:	add    dl,bl
   140015391:	(bad)  
   140015392:	add    al,BYTE PTR [rax]
   140015394:	add    BYTE PTR [rax],al
   140015396:	add    BYTE PTR [rax],al
   140015398:	test   al,0x17
   14001539a:	add    al,BYTE PTR [rax]
   14001539c:	add    BYTE PTR [rax],al
   14001539e:	add    BYTE PTR [rax],al
   1400153a0:	adc    BYTE PTR [rdi],0x2
   1400153a3:	add    BYTE PTR [rax],al
   1400153a5:	add    BYTE PTR [rax],al
   1400153a7:	add    BYTE PTR [rax+0x17],bl
   1400153aa:	add    al,BYTE PTR [rax]
   1400153ac:	add    BYTE PTR [rax],al
   1400153ae:	add    BYTE PTR [rax],al
   1400153b0:	xor    dl,BYTE PTR [rdi]
   1400153b2:	add    al,BYTE PTR [rax]
   1400153b4:	add    BYTE PTR [rax],al
   1400153b6:	add    BYTE PTR [rax],al
   1400153b8:	sbb    al,0x17
   1400153ba:	add    al,BYTE PTR [rax]
   1400153bc:	add    BYTE PTR [rax],al
   1400153be:	add    BYTE PTR [rax],al
   1400153c0:	sub    BYTE PTR [rcx],ah
   1400153c2:	add    al,BYTE PTR [rax]
   1400153c4:	add    BYTE PTR [rax],al
   1400153c6:	add    BYTE PTR [rax],al
   1400153c8:	add    BYTE PTR [rdi],dl
   1400153ca:	add    al,BYTE PTR [rax]
	...
   1400153e0:	rex.R
   1400153e1:	rex.RX add DWORD PTR [rax+0x1],r8d
	...
   1400153f5:	add    BYTE PTR [rax],al
   1400153f7:	add    BYTE PTR [rax+rcx*2],ch
   1400153fa:	add    DWORD PTR [rax+0x1],eax
   1400153fd:	add    BYTE PTR [rax],al
   1400153ff:	add    ah,ah
   140015401:	add    QWORD PTR [r8+0x1],rax
	...
   14001540d:	add    BYTE PTR [rax],al
   14001540f:	add    BYTE PTR [rdx+0x61],ah
   140015412:	and    BYTE PTR fs:[rcx+0x6c],ah
   140015416:	ins    BYTE PTR es:[rdi],dx
   140015417:	outs   dx,DWORD PTR ds:[rsi]
   140015418:	movsxd esp,DWORD PTR [rcx+0x74]
   14001541b:	imul   ebp,DWORD PTR [rdi+0x6e],0x73250000
   140015422:	cmp    ah,BYTE PTR [rip+0x203a2064]        # 0x1603b748c
   140015428:	and    eax,0x6a000073
   14001542d:	jae    0x14001542f
   14001542f:	add    BYTE PTR [rsi+0x61],al
   140015432:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14001543a:	outs   dx,DWORD PTR ds:[rsi]
   14001543b:	jo     0x1400154a2
   14001543d:	outs   dx,BYTE PTR ds:[rsi]
   14001543e:	and    BYTE PTR [rsi+0x69],ah
   140015441:	ins    BYTE PTR es:[rdi],dx
   140015442:	add    BYTE PTR gs:[rsi+0x69],ah
   140015446:	ins    BYTE PTR es:[rdi],dx
   140015447:	gs jae 0x14001544a
   14001544a:	add    BYTE PTR [rax],al
   14001544c:	add    BYTE PTR [rax],al
   14001544e:	add    BYTE PTR [rax],al
   140015450:	ins    BYTE PTR es:[rdi],dx
   140015451:	imul   esi,DWORD PTR [rbx+0x74],0x20666f20
   140015458:	jno    0x1400154c7
   14001545a:	ins    BYTE PTR es:[rdi],dx
   14001545b:	and    BYTE PTR [rdi+0x72],ch
   14001545e:	and    BYTE PTR [rdx+0x73],ch
   140015461:	and    BYTE PTR [rsi+0x69],ah
   140015464:	ins    BYTE PTR es:[rdi],dx
   140015465:	gs jae 0x140015488
   140015468:	je     0x1400154d9
   14001546a:	and    BYTE PTR [rsi+0x65],dh
   14001546d:	jb     0x1400154d8
   14001546f:	data16 jns 0x140015472
   140015472:	add    BYTE PTR [rax],al
   140015474:	jae    0x140015476
   140015476:	add    BYTE PTR [rax],al
   140015478:	jae    0x1400154e3
   14001547a:	ins    BYTE PTR es:[rdi],dx
   14001547b:	outs   dx,BYTE PTR gs:[rsi]
   14001547d:	je     0x14001547f
   14001547f:	add    BYTE PTR [rdi+rbp*2+0x6e],al
   140015483:	(bad)  
   140015484:	je     0x1400154a6
   140015486:	outs   dx,DWORD PTR ds:[rsi]
   140015487:	jne    0x1400154fd
   140015489:	jo     0x140015500
   14001548b:	je     0x1400154ad
   14001548d:	jae    0x140015508
   14001548f:	outs   dx,BYTE PTR ds:[rsi]
   140015490:	je     0x1400154f3
   140015492:	js     0x1400154b4
   140015494:	gs jb  0x140015509
   140015497:	outs   dx,DWORD PTR ds:[rsi]
   140015498:	jb     0x14001550d
   14001549a:	add    BYTE PTR [rax],al
   14001549c:	add    BYTE PTR [rax],al
   14001549e:	add    BYTE PTR [rax],al
   1400154a0:	push   rcx
   1400154a1:	rex.WRB
   1400154a2:	rex.WR and BYTE PTR [rbx+0x79],r14b
   1400154a6:	outs   dx,BYTE PTR ds:[rsi]
   1400154a7:	je     0x14001550a
   1400154a9:	js     0x1400154cb
   1400154ab:	jbe    0x140015512
   1400154ad:	jb     0x140015518
   1400154af:	imul   sp,WORD PTR [rbp+0x72],0x3100
   1400154b5:	xor    BYTE PTR cs:[rax],al
   1400154b8:	jno    0x140015527
   1400154ba:	ins    BYTE PTR es:[rdi],dx
   1400154bb:	ins    BYTE PTR es:[rdi],dx
   1400154bc:	imul   ebp,DWORD PTR [rsi+0x74],0x1cac000
   1400154c3:	rex add DWORD PTR [rax],eax
   1400154c6:	add    BYTE PTR [rax],al
   1400154c8:	shl    BYTE PTR [rsi],1
   1400154ca:	add    BYTE PTR [rax+0x1],al
   1400154cd:	add    BYTE PTR [rax],al
   1400154cf:	add    al,al
   1400154d1:	add    BYTE PTR es:[rax+0x1],al
   1400154d5:	add    BYTE PTR [rax],al
   1400154d7:	add    al,al
   1400154d9:	add    BYTE PTR es:[rax+0x1],al
   1400154dd:	add    BYTE PTR [rax],al
   1400154df:	add    al,al
   1400154e1:	add    BYTE PTR es:[rax+0x1],al
	...
   1400154ed:	add    BYTE PTR [rax],al
   1400154ef:	add    BYTE PTR [rax],bh
   1400154f1:	retf   
   1400154f2:	add    DWORD PTR [rax+0x1],eax
   1400154f5:	add    BYTE PTR [rax],al
   1400154f7:	add    BYTE PTR [rax+0x41],dh
   1400154fa:	add    BYTE PTR [rax+0x1],al
   1400154fd:	add    BYTE PTR [rax],al
   1400154ff:	add    BYTE PTR [rax],al
   140015501:	adc    al,0x1
   140015503:	rex add DWORD PTR [rax],eax
   140015506:	add    BYTE PTR [rax],al
   140015508:	add    BYTE PTR [rcx+rax*1],dl
   14001550b:	rex add DWORD PTR [rax],eax
   14001550e:	add    BYTE PTR [rax],al
   140015510:	add    BYTE PTR [rcx+rax*1],dl
   140015513:	rex add DWORD PTR [rax],eax
   140015516:	add    BYTE PTR [rax],al
   140015518:	add    BYTE PTR [rcx+rax*1],dl
   14001551b:	rex add DWORD PTR [rax],eax
   14001551e:	add    BYTE PTR [rax],al
   140015520:	xchg   edx,eax
   140015521:	add    QWORD PTR [r8+0x1],rax
   140015525:	add    BYTE PTR [rax],al
   140015527:	add    BYTE PTR [rdx+0x1400149],dl
   14001552d:	add    BYTE PTR [rax],al
   14001552f:	add    BYTE PTR [rdx+0x1400149],dl
	...
   14001553d:	add    BYTE PTR [rax],al
   14001553f:	add    al,dh
   140015541:	int3   
   140015542:	add    DWORD PTR [rax+0x1],eax
   140015545:	add    BYTE PTR [rax],al
   140015547:	add    BYTE PTR [rax+0x41],dh
   14001554a:	add    BYTE PTR [rax+0x1],al
   14001554d:	add    BYTE PTR [rax],al
   14001554f:	add    BYTE PTR [rax],dl
   140015551:	adc    al,0x1
   140015553:	rex add DWORD PTR [rax],eax
   140015556:	add    BYTE PTR [rax],al
   140015558:	add    BYTE PTR [rcx+rax*1],dl
   14001555b:	rex add DWORD PTR [rax],eax
   14001555e:	add    BYTE PTR [rax],al
   140015560:	add    BYTE PTR [rcx+rax*1],dl
   140015563:	rex add DWORD PTR [rax],eax
   140015566:	add    BYTE PTR [rax],al
   140015568:	add    BYTE PTR [rcx+rax*1],dl
   14001556b:	rex add DWORD PTR [rax],eax
   14001556e:	add    BYTE PTR [rax],al
   140015570:	and    BYTE PTR [rcx+rax*1],dl
   140015573:	rex add DWORD PTR [rax],eax
   140015576:	add    BYTE PTR [rax],al
   140015578:	push   rax
   140015579:	sub    eax,DWORD PTR [rax]
   14001557b:	rex add DWORD PTR [rax],eax
   14001557e:	add    BYTE PTR [rax],al
   140015580:	add    BYTE PTR [rip+0x14000],dh        # 0x140029586
	...
   14001558e:	add    BYTE PTR [rax],al
   140015590:	or     ch,0x1
   140015593:	rex add DWORD PTR [rax],eax
   140015596:	add    BYTE PTR [rax],al
   140015598:	jo     0x1400155db
   14001559a:	add    BYTE PTR [rax+0x1],al
   14001559d:	add    BYTE PTR [rax],al
   14001559f:	add    BYTE PTR [rax],dl
   1400155a1:	adc    al,0x1
   1400155a3:	rex add DWORD PTR [rax],eax
   1400155a6:	add    BYTE PTR [rax],al
   1400155a8:	add    BYTE PTR [rcx+rax*1],dl
   1400155ab:	rex add DWORD PTR [rax],eax
   1400155ae:	add    BYTE PTR [rax],al
   1400155b0:	add    BYTE PTR [rcx+rax*1],dl
   1400155b3:	rex add DWORD PTR [rax],eax
   1400155b6:	add    BYTE PTR [rax],al
   1400155b8:	add    BYTE PTR [rcx+rax*1],dl
   1400155bb:	rex add DWORD PTR [rax],eax
   1400155be:	add    BYTE PTR [rax],al
   1400155c0:	movabs al,ds:0x1400114
   1400155c9:	(bad)  
   1400155ca:	add    BYTE PTR [rax+0x1],al
   1400155cd:	add    BYTE PTR [rax],al
   1400155cf:	add    BYTE PTR [rax],al
   1400155d1:	(bad)  
   1400155d2:	add    BYTE PTR [rax+0x1],al
	...
   1400155dd:	add    BYTE PTR [rax],al
   1400155df:	add    BYTE PTR [rax],dl
   1400155e1:	(bad)  
   1400155e2:	add    DWORD PTR [rax+0x1],eax
   1400155e5:	add    BYTE PTR [rax],al
   1400155e7:	add    BYTE PTR [rax+0x41],dh
   1400155ea:	add    BYTE PTR [rax+0x1],al
   1400155ed:	add    BYTE PTR [rax],al
   1400155ef:	add    BYTE PTR [rax],dl
   1400155f1:	adc    al,0x1
   1400155f3:	rex add DWORD PTR [rax],eax
   1400155f6:	add    BYTE PTR [rax],al
   1400155f8:	add    BYTE PTR [rcx+rax*1],dl
   1400155fb:	rex add DWORD PTR [rax],eax
   1400155fe:	add    BYTE PTR [rax],al
   140015600:	add    BYTE PTR [rcx+rax*1],dl
   140015603:	rex add DWORD PTR [rax],eax
   140015606:	add    BYTE PTR [rax],al
   140015608:	add    BYTE PTR [rcx+rax*1],dl
   14001560b:	rex add DWORD PTR [rax],eax
   14001560e:	add    BYTE PTR [rax],al
   140015610:	loopne 0x140015626
   140015612:	add    DWORD PTR [rax+0x1],eax
   140015615:	add    BYTE PTR [rax],al
   140015617:	add    BYTE PTR [rax+0x39],dl
   14001561a:	add    BYTE PTR [rax+0x1],al
   14001561d:	add    BYTE PTR [rax],al
   14001561f:	add    BYTE PTR [rax+0x39],dl
   140015622:	add    BYTE PTR [rax+0x1],al
	...
   14001562d:	add    BYTE PTR [rax],al
   14001562f:	add    BYTE PTR [rax+0x14001ce],ah
   140015635:	add    BYTE PTR [rax],al
   140015637:	add    BYTE PTR [rax+0x41],dh
   14001563a:	add    BYTE PTR [rax+0x1],al
   14001563d:	add    BYTE PTR [rax],al
   14001563f:	add    BYTE PTR [rax],dl
   140015641:	adc    al,0x1
   140015643:	rex add DWORD PTR [rax],eax
   140015646:	add    BYTE PTR [rax],al
   140015648:	add    BYTE PTR [rcx+rax*1],dl
   14001564b:	rex add DWORD PTR [rax],eax
   14001564e:	add    BYTE PTR [rax],al
   140015650:	add    BYTE PTR [rcx+rax*1],dl
   140015653:	rex add DWORD PTR [rax],eax
   140015656:	add    BYTE PTR [rax],al
   140015658:	add    BYTE PTR [rcx+rax*1],dl
   14001565b:	rex add DWORD PTR [rax],eax
   14001565e:	add    BYTE PTR [rax],al
   140015660:	and    BYTE PTR [rip+0x14001],dl        # 0x140029667
   140015666:	add    BYTE PTR [rax],al
   140015668:	add    BYTE PTR [rdi],ah
   14001566a:	add    BYTE PTR [rax+0x1],al
   14001566d:	add    BYTE PTR [rax],al
   14001566f:	add    BYTE PTR [rax],al
   140015671:	(bad)  
   140015672:	add    BYTE PTR [rax+0x1],al
	...
   14001567d:	add    BYTE PTR [rax],al
   14001567f:	add    BYTE PTR [rax],dh
   140015681:	iret   
   140015682:	add    DWORD PTR [rax+0x1],eax
   140015685:	add    BYTE PTR [rax],al
   140015687:	add    BYTE PTR [rax+0x41],dh
   14001568a:	add    BYTE PTR [rax+0x1],al
   14001568d:	add    BYTE PTR [rax],al
   14001568f:	add    BYTE PTR [rax],dl
   140015691:	adc    al,0x1
   140015693:	rex add DWORD PTR [rax],eax
   140015696:	add    BYTE PTR [rax],al
   140015698:	add    BYTE PTR [rcx+rax*1],dl
   14001569b:	rex add DWORD PTR [rax],eax
   14001569e:	add    BYTE PTR [rax],al
   1400156a0:	add    BYTE PTR [rcx+rax*1],dl
   1400156a3:	rex add DWORD PTR [rax],eax
   1400156a6:	add    BYTE PTR [rax],al
   1400156a8:	add    BYTE PTR [rcx+rax*1],dl
   1400156ab:	rex add DWORD PTR [rax],eax
   1400156ae:	add    BYTE PTR [rax],al
   1400156b0:	(bad)  
   1400156b1:	adc    eax,0x14001
   1400156b6:	add    BYTE PTR [rax],al
   1400156b8:	add    BYTE PTR [rdi],ah
   1400156ba:	add    BYTE PTR [rax+0x1],al
   1400156bd:	add    BYTE PTR [rax],al
   1400156bf:	add    BYTE PTR [rax],al
   1400156c1:	(bad)  
   1400156c2:	add    BYTE PTR [rax+0x1],al
	...
   1400156cd:	add    BYTE PTR [rax],al
   1400156cf:	add    al,al
   1400156d1:	iret   
   1400156d2:	add    DWORD PTR [rax+0x1],eax
   1400156d5:	add    BYTE PTR [rax],al
   1400156d7:	add    BYTE PTR [rax+0x41],dh
   1400156da:	add    BYTE PTR [rax+0x1],al
   1400156dd:	add    BYTE PTR [rax],al
   1400156df:	add    BYTE PTR [rax],dl
   1400156e1:	adc    al,0x1
   1400156e3:	rex add DWORD PTR [rax],eax
   1400156e6:	add    BYTE PTR [rax],al
   1400156e8:	add    BYTE PTR [rcx+rax*1],dl
   1400156eb:	rex add DWORD PTR [rax],eax
   1400156ee:	add    BYTE PTR [rax],al
   1400156f0:	add    BYTE PTR [rcx+rax*1],dl
   1400156f3:	rex add DWORD PTR [rax],eax
   1400156f6:	add    BYTE PTR [rax],al
   1400156f8:	add    BYTE PTR [rcx+rax*1],dl
   1400156fb:	rex add DWORD PTR [rax],eax
   1400156fe:	add    BYTE PTR [rax],al
   140015700:	movabs al,ds:0x1400115
   140015709:	(bad)  
   14001570a:	add    BYTE PTR [rax+0x1],al
   14001570d:	add    BYTE PTR [rax],al
   14001570f:	add    BYTE PTR [rax],al
   140015711:	(bad)  
   140015712:	add    BYTE PTR [rax+0x1],al
	...
   14001571d:	add    BYTE PTR [rax],al
   14001571f:	add    BYTE PTR [rax-0x30],dl
   140015722:	add    DWORD PTR [rax+0x1],eax
   140015725:	add    BYTE PTR [rax],al
   140015727:	add    BYTE PTR [rax+0x41],dh
   14001572a:	add    BYTE PTR [rax+0x1],al
   14001572d:	add    BYTE PTR [rax],al
   14001572f:	add    BYTE PTR [rax],dl
   140015731:	adc    al,0x1
   140015733:	rex add DWORD PTR [rax],eax
   140015736:	add    BYTE PTR [rax],al
   140015738:	add    BYTE PTR [rcx+rax*1],dl
   14001573b:	rex add DWORD PTR [rax],eax
   14001573e:	add    BYTE PTR [rax],al
   140015740:	add    BYTE PTR [rcx+rax*1],dl
   140015743:	rex add DWORD PTR [rax],eax
   140015746:	add    BYTE PTR [rax],al
   140015748:	add    BYTE PTR [rcx+rax*1],dl
   14001574b:	rex add DWORD PTR [rax],eax
   14001574e:	add    BYTE PTR [rax],al
   140015750:	and    BYTE PTR [rsi],dl
   140015752:	add    DWORD PTR [rax+0x1],eax
   140015755:	add    BYTE PTR [rax],al
   140015757:	add    BYTE PTR [rax+0x2b],dl
   14001575a:	add    BYTE PTR [rax+0x1],al
   14001575d:	add    BYTE PTR [rax],al
   14001575f:	add    BYTE PTR [rax+0x2b],dl
   140015762:	add    BYTE PTR [rax+0x1],al
	...
   14001576d:	add    BYTE PTR [rax],al
   14001576f:	add    al,ah
   140015771:	rol    BYTE PTR [rcx],1
   140015773:	rex add DWORD PTR [rax],eax
   140015776:	add    BYTE PTR [rax],al
   140015778:	jo     0x1400157bb
   14001577a:	add    BYTE PTR [rax+0x1],al
   14001577d:	add    BYTE PTR [rax],al
   14001577f:	add    BYTE PTR [rax],dl
   140015781:	adc    al,0x1
   140015783:	rex add DWORD PTR [rax],eax
   140015786:	add    BYTE PTR [rax],al
   140015788:	add    BYTE PTR [rcx+rax*1],dl
   14001578b:	rex add DWORD PTR [rax],eax
   14001578e:	add    BYTE PTR [rax],al
   140015790:	add    BYTE PTR [rcx+rax*1],dl
   140015793:	rex add DWORD PTR [rax],eax
   140015796:	add    BYTE PTR [rax],al
   140015798:	add    BYTE PTR [rcx+rax*1],dl
   14001579b:	rex add DWORD PTR [rax],eax
   14001579e:	add    BYTE PTR [rax],al
   1400157a0:	loopne 0x1400157b7
   1400157a2:	add    DWORD PTR [rax+0x1],eax
   1400157a5:	add    BYTE PTR [rax],al
   1400157a7:	add    BYTE PTR [rax+0x39],dl
   1400157aa:	add    BYTE PTR [rax+0x1],al
   1400157ad:	add    BYTE PTR [rax],al
   1400157af:	add    BYTE PTR [rax+0x39],dl
   1400157b2:	add    BYTE PTR [rax+0x1],al
	...
   1400157bd:	add    BYTE PTR [rax],al
   1400157bf:	add    BYTE PTR [rax-0x2f],dh
   1400157c2:	add    DWORD PTR [rax+0x1],eax
   1400157c5:	add    BYTE PTR [rax],al
   1400157c7:	add    BYTE PTR [rax+0x41],dh
   1400157ca:	add    BYTE PTR [rax+0x1],al
   1400157cd:	add    BYTE PTR [rax],al
   1400157cf:	add    BYTE PTR [rax],dl
   1400157d1:	adc    al,0x1
   1400157d3:	rex add DWORD PTR [rax],eax
   1400157d6:	add    BYTE PTR [rax],al
   1400157d8:	add    BYTE PTR [rcx+rax*1],dl
   1400157db:	rex add DWORD PTR [rax],eax
   1400157de:	add    BYTE PTR [rax],al
   1400157e0:	add    BYTE PTR [rcx+rax*1],dl
   1400157e3:	rex add DWORD PTR [rax],eax
   1400157e6:	add    BYTE PTR [rax],al
   1400157e8:	add    BYTE PTR [rcx+rax*1],dl
   1400157eb:	rex add DWORD PTR [rax],eax
   1400157ee:	add    BYTE PTR [rax],al
   1400157f0:	(bad)  
   1400157f1:	(bad)  
   1400157f2:	add    DWORD PTR [rax+0x1],eax
   1400157f5:	add    BYTE PTR [rax],al
   1400157f7:	add    BYTE PTR [rax+0x27],dh
   1400157fa:	add    BYTE PTR [rax+0x1],al
   1400157fd:	add    BYTE PTR [rax],al
   1400157ff:	add    BYTE PTR [rax+0x27],dh
   140015802:	add    BYTE PTR [rax+0x1],al
	...
   140015811:	rol    BYTE PTR [rcx],cl
   140015813:	rex add DWORD PTR [rax],eax
   140015816:	add    BYTE PTR [rax],al
   140015818:	jo     0x14001585b
   14001581a:	add    BYTE PTR [rax+0x1],al
   14001581d:	add    BYTE PTR [rax],al
   14001581f:	add    BYTE PTR [rax],dl
   140015821:	adc    al,0x1
   140015823:	rex add DWORD PTR [rax],eax
   140015826:	add    BYTE PTR [rax],al
   140015828:	add    BYTE PTR [rcx+rax*1],dl
   14001582b:	rex add DWORD PTR [rax],eax
   14001582e:	add    BYTE PTR [rax],al
   140015830:	add    BYTE PTR [rcx+rax*1],dl
   140015833:	rex add DWORD PTR [rax],eax
   140015836:	add    BYTE PTR [rax],al
   140015838:	add    BYTE PTR [rcx+rax*1],dl
   14001583b:	rex add DWORD PTR [rax],eax
   14001583e:	add    BYTE PTR [rax],al
   140015840:	movabs al,ds:0x5000000001400116
   140015849:	cmp    DWORD PTR [rax],eax
   14001584b:	rex add DWORD PTR [rax],eax
   14001584e:	add    BYTE PTR [rax],al
   140015850:	mov    al,0x30
   140015852:	add    BYTE PTR [rax+0x1],al
	...
   14001585d:	add    BYTE PTR [rax],al
   14001585f:	add    BYTE PTR [rax+0x14001d2],dl
   140015865:	add    BYTE PTR [rax],al
   140015867:	add    BYTE PTR [rax+0x41],dh
   14001586a:	add    BYTE PTR [rax+0x1],al
   14001586d:	add    BYTE PTR [rax],al
   14001586f:	add    BYTE PTR [rax],dl
   140015871:	adc    al,0x1
   140015873:	rex add DWORD PTR [rax],eax
   140015876:	add    BYTE PTR [rax],al
   140015878:	add    BYTE PTR [rcx+rax*1],dl
   14001587b:	rex add DWORD PTR [rax],eax
   14001587e:	add    BYTE PTR [rax],al
   140015880:	add    BYTE PTR [rcx+rax*1],dl
   140015883:	rex add DWORD PTR [rax],eax
   140015886:	add    BYTE PTR [rax],al
   140015888:	add    BYTE PTR [rcx+rax*1],dl
   14001588b:	rex add DWORD PTR [rax],eax
   14001588e:	add    BYTE PTR [rax],al
   140015890:	push   rax
   140015891:	(bad)  
   140015892:	add    DWORD PTR [rax+0x1],eax
   140015895:	add    BYTE PTR [rax],al
   140015897:	add    BYTE PTR [rax+0x2b],dl
   14001589a:	add    BYTE PTR [rax+0x1],al
   14001589d:	add    BYTE PTR [rax],al
   14001589f:	add    BYTE PTR [rax],al
   1400158a1:	xor    eax,0x14000
	...
   1400158ae:	add    BYTE PTR [rax],al
   1400158b0:	and    bl,dl
   1400158b2:	add    DWORD PTR [rax+0x1],eax
   1400158b5:	add    BYTE PTR [rax],al
   1400158b7:	add    BYTE PTR [rax+0x41],dh
   1400158ba:	add    BYTE PTR [rax+0x1],al
   1400158bd:	add    BYTE PTR [rax],al
   1400158bf:	add    BYTE PTR [rax],al
   1400158c1:	adc    al,0x1
   1400158c3:	rex add DWORD PTR [rax],eax
   1400158c6:	add    BYTE PTR [rax],al
   1400158c8:	add    BYTE PTR [rcx+rax*1],dl
   1400158cb:	rex add DWORD PTR [rax],eax
   1400158ce:	add    BYTE PTR [rax],al
   1400158d0:	add    BYTE PTR [rcx+rax*1],dl
   1400158d3:	rex add DWORD PTR [rax],eax
   1400158d6:	add    BYTE PTR [rax],al
   1400158d8:	add    BYTE PTR [rcx+rax*1],dl
   1400158db:	rex add DWORD PTR [rax],eax
   1400158de:	add    BYTE PTR [rax],al
   1400158e0:	movabs al,ds:0x5000000001400118
   1400158e9:	sub    eax,DWORD PTR [rax]
   1400158eb:	rex add DWORD PTR [rax],eax
   1400158ee:	add    BYTE PTR [rax],al
   1400158f0:	sub    BYTE PTR [rax],0x0
   1400158f3:	rex add DWORD PTR [rax],eax
	...
   1400158fe:	add    BYTE PTR [rax],al
   140015900:	test   al,0xd3
   140015902:	add    DWORD PTR [rax+0x1],eax
   140015905:	add    BYTE PTR [rax],al
   140015907:	add    BYTE PTR [rax+0x41],dh
   14001590a:	add    BYTE PTR [rax+0x1],al
   14001590d:	add    BYTE PTR [rax],al
   14001590f:	add    BYTE PTR [rax],al
   140015911:	adc    al,0x1
   140015913:	rex add DWORD PTR [rax],eax
   140015916:	add    BYTE PTR [rax],al
   140015918:	add    BYTE PTR [rcx+rax*1],dl
   14001591b:	rex add DWORD PTR [rax],eax
   14001591e:	add    BYTE PTR [rax],al
   140015920:	add    BYTE PTR [rcx+rax*1],dl
   140015923:	rex add DWORD PTR [rax],eax
   140015926:	add    BYTE PTR [rax],al
   140015928:	add    BYTE PTR [rcx+rax*1],dl
   14001592b:	rex add DWORD PTR [rax],eax
   14001592e:	add    BYTE PTR [rax],al
   140015930:	rcl    BYTE PTR [rdi],1
   140015932:	add    DWORD PTR [rax+0x1],eax
   140015935:	add    BYTE PTR [rax],al
   140015937:	add    al,dl
   140015939:	sub    BYTE PTR [rax],al
   14001593b:	rex add DWORD PTR [rax],eax
   14001593e:	add    BYTE PTR [rax],al
   140015940:	jo     0x14001596f
   140015942:	add    BYTE PTR [rax+0x1],al
	...
   14001594d:	add    BYTE PTR [rax],al
   14001594f:	add    al,dh
   140015951:	(bad)  
   140015952:	add    DWORD PTR [rax+0x1],eax
   140015955:	add    BYTE PTR [rax],al
   140015957:	add    BYTE PTR [rax+0x41],dh
   14001595a:	add    BYTE PTR [rax+0x1],al
   14001595d:	add    BYTE PTR [rax],al
   14001595f:	add    BYTE PTR [rax],al
   140015961:	adc    al,0x1
   140015963:	rex add DWORD PTR [rax],eax
   140015966:	add    BYTE PTR [rax],al
   140015968:	add    BYTE PTR [rcx+rax*1],dl
   14001596b:	rex add DWORD PTR [rax],eax
   14001596e:	add    BYTE PTR [rax],al
   140015970:	add    BYTE PTR [rcx+rax*1],dl
   140015973:	rex add DWORD PTR [rax],eax
   140015976:	add    BYTE PTR [rax],al
   140015978:	add    BYTE PTR [rcx+rax*1],dl
   14001597b:	rex add DWORD PTR [rax],eax
   14001597e:	add    BYTE PTR [rax],al
   140015980:	jo     0x14001599c
   140015982:	add    DWORD PTR [rax+0x1],eax
   140015985:	add    BYTE PTR [rax],al
   140015987:	add    BYTE PTR [rax],al
   140015989:	cmp    DWORD PTR [rax],eax
   14001598b:	rex add DWORD PTR [rax],eax
   14001598e:	add    BYTE PTR [rax],al
   140015990:	sar    BYTE PTR [rbx],1
   140015992:	add    BYTE PTR [rax+0x1],al
	...
   14001599d:	add    BYTE PTR [rax],al
   14001599f:	add    BYTE PTR [rax-0x2b],bh
   1400159a2:	add    DWORD PTR [rax+0x1],eax
   1400159a5:	add    BYTE PTR [rax],al
   1400159a7:	add    BYTE PTR [rax+0x41],dh
   1400159aa:	add    BYTE PTR [rax+0x1],al
   1400159ad:	add    BYTE PTR [rax],al
   1400159af:	add    BYTE PTR [rax],al
   1400159b1:	adc    al,0x1
   1400159b3:	rex add DWORD PTR [rax],eax
   1400159b6:	add    BYTE PTR [rax],al
   1400159b8:	add    BYTE PTR [rcx+rax*1],dl
   1400159bb:	rex add DWORD PTR [rax],eax
   1400159be:	add    BYTE PTR [rax],al
   1400159c0:	add    BYTE PTR [rcx+rax*1],dl
   1400159c3:	rex add DWORD PTR [rax],eax
   1400159c6:	add    BYTE PTR [rax],al
   1400159c8:	add    BYTE PTR [rcx+rax*1],dl
   1400159cb:	rex add DWORD PTR [rax],eax
   1400159ce:	add    BYTE PTR [rax],al
   1400159d0:	loopne 0x1400159ea
   1400159d2:	add    DWORD PTR [rax+0x1],eax
   1400159d5:	add    BYTE PTR [rax],al
   1400159d7:	add    BYTE PTR [rax],al
   1400159d9:	cmp    DWORD PTR [rax],eax
   1400159db:	rex add DWORD PTR [rax],eax
   1400159de:	add    BYTE PTR [rax],al
   1400159e0:	jo     0x140015a11
   1400159e2:	add    BYTE PTR [rax+0x1],al
	...
   1400159ed:	add    BYTE PTR [rax],al
   1400159ef:	add    BYTE PTR [rax],cl
   1400159f1:	(bad)  
   1400159f2:	add    DWORD PTR [rax+0x1],eax
   1400159f5:	add    BYTE PTR [rax],al
   1400159f7:	add    BYTE PTR [rax+0x41],dh
   1400159fa:	add    BYTE PTR [rax+0x1],al
   1400159fd:	add    BYTE PTR [rax],al
   1400159ff:	add    BYTE PTR [rax],al
   140015a01:	adc    al,0x1
   140015a03:	rex add DWORD PTR [rax],eax
   140015a06:	add    BYTE PTR [rax],al
   140015a08:	add    BYTE PTR [rcx+rax*1],dl
   140015a0b:	rex add DWORD PTR [rax],eax
   140015a0e:	add    BYTE PTR [rax],al
   140015a10:	add    BYTE PTR [rcx+rax*1],dl
   140015a13:	rex add DWORD PTR [rax],eax
   140015a16:	add    BYTE PTR [rax],al
   140015a18:	add    BYTE PTR [rcx+rax*1],dl
   140015a1b:	rex add DWORD PTR [rax],eax
   140015a1e:	add    BYTE PTR [rax],al
   140015a20:	nop
   140015a21:	sbb    DWORD PTR [rcx],eax
   140015a23:	rex add DWORD PTR [rax],eax
   140015a26:	add    BYTE PTR [rax],al
   140015a28:	lock sub DWORD PTR [rax],eax
   140015a2b:	rex add DWORD PTR [rax],eax
   140015a2e:	add    BYTE PTR [rax],al
   140015a30:	adc    BYTE PTR [rdx],ch
   140015a32:	add    BYTE PTR [rax+0x1],al
	...
   140015a3d:	add    BYTE PTR [rax],al
   140015a3f:	add    BYTE PTR [rax+0x14001d6],bl
   140015a45:	add    BYTE PTR [rax],al
   140015a47:	add    BYTE PTR [rax+0x41],dh
   140015a4a:	add    BYTE PTR [rax+0x1],al
   140015a4d:	add    BYTE PTR [rax],al
   140015a4f:	add    BYTE PTR [rax],al
   140015a51:	adc    al,0x1
   140015a53:	rex add DWORD PTR [rax],eax
   140015a56:	add    BYTE PTR [rax],al
   140015a58:	add    BYTE PTR [rcx+rax*1],dl
   140015a5b:	rex add DWORD PTR [rax],eax
   140015a5e:	add    BYTE PTR [rax],al
   140015a60:	add    BYTE PTR [rcx+rax*1],dl
   140015a63:	rex add DWORD PTR [rax],eax
   140015a66:	add    BYTE PTR [rax],al
   140015a68:	add    BYTE PTR [rcx+rax*1],dl
   140015a6b:	rex add DWORD PTR [rax],eax
   140015a6e:	add    BYTE PTR [rax],al
   140015a70:	adc    BYTE PTR [rbx],bl
   140015a72:	add    DWORD PTR [rax+0x1],eax
   140015a75:	add    BYTE PTR [rax],al
   140015a77:	add    BYTE PTR [rax],al
   140015a79:	(bad)  
   140015a7a:	add    BYTE PTR [rax+0x1],al
   140015a7d:	add    BYTE PTR [rax],al
   140015a7f:	add    BYTE PTR [rax],al
   140015a81:	(bad)  
   140015a82:	add    BYTE PTR [rax+0x1],al
   140015a85:	add    BYTE PTR [rax],al
   140015a87:	add    BYTE PTR [rax],dh
   140015a89:	sub    al,BYTE PTR [rax]
   140015a8b:	rex add DWORD PTR [rax],eax
   140015a8e:	add    BYTE PTR [rax],al
   140015a90:	sub    bh,dl
   140015a92:	add    DWORD PTR [rax+0x1],eax
   140015a95:	add    BYTE PTR [rax],al
   140015a97:	add    BYTE PTR [rax+0x41],dh
   140015a9a:	add    BYTE PTR [rax+0x1],al
   140015a9d:	add    BYTE PTR [rax],al
   140015a9f:	add    BYTE PTR [rax],al
   140015aa1:	adc    al,0x1
   140015aa3:	rex add DWORD PTR [rax],eax
   140015aa6:	add    BYTE PTR [rax],al
   140015aa8:	add    BYTE PTR [rcx+rax*1],dl
   140015aab:	rex add DWORD PTR [rax],eax
   140015aae:	add    BYTE PTR [rax],al
   140015ab0:	add    BYTE PTR [rcx+rax*1],dl
   140015ab3:	rex add DWORD PTR [rax],eax
   140015ab6:	add    BYTE PTR [rax],al
   140015ab8:	add    BYTE PTR [rcx+rax*1],dl
   140015abb:	rex add DWORD PTR [rax],eax
   140015abe:	add    BYTE PTR [rax],al
   140015ac0:	push   rax
   140015ac1:	sbb    eax,DWORD PTR [rcx]
   140015ac3:	rex add DWORD PTR [rax],eax
   140015ac6:	add    BYTE PTR [rax],al
   140015ac8:	add    BYTE PTR [rdi],ah
   140015aca:	add    BYTE PTR [rax+0x1],al
   140015acd:	add    BYTE PTR [rax],al
   140015acf:	add    BYTE PTR [rax],al
   140015ad1:	(bad)  
   140015ad2:	add    BYTE PTR [rax+0x1],al
   140015ad5:	add    BYTE PTR [rax],al
   140015ad7:	add    BYTE PTR [rax],dh
   140015ad9:	sub    al,BYTE PTR [rax]
   140015adb:	rex add DWORD PTR [rax],eax
   140015ade:	add    BYTE PTR [rax],al
   140015ae0:	mov    eax,0x14001d7
   140015ae5:	add    BYTE PTR [rax],al
   140015ae7:	add    BYTE PTR [rax+0x41],dh
   140015aea:	add    BYTE PTR [rax+0x1],al
   140015aed:	add    BYTE PTR [rax],al
   140015aef:	add    BYTE PTR [rax],al
   140015af1:	adc    al,0x1
   140015af3:	rex add DWORD PTR [rax],eax
   140015af6:	add    BYTE PTR [rax],al
   140015af8:	add    BYTE PTR [rcx+rax*1],dl
   140015afb:	rex add DWORD PTR [rax],eax
   140015afe:	add    BYTE PTR [rax],al
   140015b00:	add    BYTE PTR [rcx+rax*1],dl
   140015b03:	rex add DWORD PTR [rax],eax
   140015b06:	add    BYTE PTR [rax],al
   140015b08:	add    BYTE PTR [rcx+rax*1],dl
   140015b0b:	rex add DWORD PTR [rax],eax
   140015b0e:	add    BYTE PTR [rax],al
   140015b10:	nop
   140015b11:	sbb    eax,DWORD PTR [rcx]
   140015b13:	rex add DWORD PTR [rax],eax
   140015b16:	add    BYTE PTR [rax],al
   140015b18:	add    BYTE PTR [rdi],ah
   140015b1a:	add    BYTE PTR [rax+0x1],al
   140015b1d:	add    BYTE PTR [rax],al
   140015b1f:	add    BYTE PTR [rax],al
   140015b21:	(bad)  
   140015b22:	add    BYTE PTR [rax+0x1],al
   140015b25:	add    BYTE PTR [rax],al
   140015b27:	add    BYTE PTR [rax+0x2a],dl
   140015b2a:	add    BYTE PTR [rax+0x1],al
   140015b2d:	add    BYTE PTR [rax],al
   140015b2f:	add    BYTE PTR [rax-0x28],cl
   140015b32:	add    DWORD PTR [rax+0x1],eax
   140015b35:	add    BYTE PTR [rax],al
   140015b37:	add    BYTE PTR [rax+0x41],dh
   140015b3a:	add    BYTE PTR [rax+0x1],al
   140015b3d:	add    BYTE PTR [rax],al
   140015b3f:	add    BYTE PTR [rax],dl
   140015b41:	adc    al,0x1
   140015b43:	rex add DWORD PTR [rax],eax
   140015b46:	add    BYTE PTR [rax],al
   140015b48:	add    BYTE PTR [rcx+rax*1],dl
   140015b4b:	rex add DWORD PTR [rax],eax
   140015b4e:	add    BYTE PTR [rax],al
   140015b50:	add    BYTE PTR [rcx+rax*1],dl
   140015b53:	rex add DWORD PTR [rax],eax
   140015b56:	add    BYTE PTR [rax],al
   140015b58:	add    BYTE PTR [rcx+rax*1],dl
   140015b5b:	rex add DWORD PTR [rax],eax
   140015b5e:	add    BYTE PTR [rax],al
   140015b60:	rcr    BYTE PTR [rbx],1
   140015b62:	add    DWORD PTR [rax+0x1],eax
   140015b65:	add    BYTE PTR [rax],al
   140015b67:	add    BYTE PTR [rax],al
   140015b69:	cmp    DWORD PTR [rax],eax
   140015b6b:	rex add DWORD PTR [rax],eax
   140015b6e:	add    BYTE PTR [rax],al
   140015b70:	sub    BYTE PTR [rdx],0x0
   140015b73:	rex add DWORD PTR [rax],eax
	...
   140015b7e:	add    BYTE PTR [rax],al
   140015b80:	fcomp  st(0)
   140015b82:	add    DWORD PTR [rax+0x1],eax
   140015b85:	add    BYTE PTR [rax],al
   140015b87:	add    BYTE PTR [rax+0x41],dh
   140015b8a:	add    BYTE PTR [rax+0x1],al
   140015b8d:	add    BYTE PTR [rax],al
   140015b8f:	add    BYTE PTR [rax],dl
   140015b91:	adc    al,0x1
   140015b93:	rex add DWORD PTR [rax],eax
   140015b96:	add    BYTE PTR [rax],al
   140015b98:	add    BYTE PTR [rcx+rax*1],dl
   140015b9b:	rex add DWORD PTR [rax],eax
   140015b9e:	add    BYTE PTR [rax],al
   140015ba0:	add    BYTE PTR [rcx+rax*1],dl
   140015ba3:	rex add DWORD PTR [rax],eax
   140015ba6:	add    BYTE PTR [rax],al
   140015ba8:	add    BYTE PTR [rcx+rax*1],dl
   140015bab:	rex add DWORD PTR [rax],eax
   140015bae:	add    BYTE PTR [rax],al
   140015bb0:	sbb    BYTE PTR [rcx+rax*1],0x40
   140015bb4:	add    DWORD PTR [rax],eax
   140015bb6:	add    BYTE PTR [rax],al
   140015bb8:	add    BYTE PTR [rcx],bh
   140015bba:	add    BYTE PTR [rax+0x1],al
   140015bbd:	add    BYTE PTR [rax],al
   140015bbf:	add    BYTE PTR [rax],dl
   140015bc1:	cmp    eax,DWORD PTR [rax]
   140015bc3:	rex add DWORD PTR [rax],eax
	...
   140015bce:	add    BYTE PTR [rax],al
   140015bd0:	push   0x14001d9
   140015bd5:	add    BYTE PTR [rax],al
   140015bd7:	add    BYTE PTR [rax+0x41],dh
   140015bda:	add    BYTE PTR [rax+0x1],al
   140015bdd:	add    BYTE PTR [rax],al
   140015bdf:	add    BYTE PTR [rax],dl
   140015be1:	adc    al,0x1
   140015be3:	rex add DWORD PTR [rax],eax
   140015be6:	add    BYTE PTR [rax],al
   140015be8:	add    BYTE PTR [rcx+rax*1],dl
   140015beb:	rex add DWORD PTR [rax],eax
   140015bee:	add    BYTE PTR [rax],al
   140015bf0:	add    BYTE PTR [rcx+rax*1],dl
   140015bf3:	rex add DWORD PTR [rax],eax
   140015bf6:	add    BYTE PTR [rax],al
   140015bf8:	add    BYTE PTR [rcx+rax*1],dl
   140015bfb:	rex add DWORD PTR [rax],eax
   140015bfe:	add    BYTE PTR [rax],al
   140015c00:	add    BYTE PTR [rip+0x14001],bl        # 0x140029c07
   140015c06:	add    BYTE PTR [rax],al
   140015c08:	push   rax
   140015c09:	cmp    DWORD PTR [rax],eax
   140015c0b:	rex add DWORD PTR [rax],eax
   140015c0e:	add    BYTE PTR [rax],al
   140015c10:	mov    al,0x30
   140015c12:	add    BYTE PTR [rax+0x1],al
	...
   140015c1d:	add    BYTE PTR [rax],al
   140015c1f:	add    al,bh
   140015c21:	fld    DWORD PTR [rcx]
   140015c23:	rex add DWORD PTR [rax],eax
   140015c26:	add    BYTE PTR [rax],al
   140015c28:	jo     0x140015c6b
   140015c2a:	add    BYTE PTR [rax+0x1],al
   140015c2d:	add    BYTE PTR [rax],al
   140015c2f:	add    BYTE PTR [rax],dl
   140015c31:	adc    al,0x1
   140015c33:	rex add DWORD PTR [rax],eax
   140015c36:	add    BYTE PTR [rax],al
   140015c38:	add    BYTE PTR [rcx+rax*1],dl
   140015c3b:	rex add DWORD PTR [rax],eax
   140015c3e:	add    BYTE PTR [rax],al
   140015c40:	add    BYTE PTR [rcx+rax*1],dl
   140015c43:	rex add DWORD PTR [rax],eax
   140015c46:	add    BYTE PTR [rax],al
   140015c48:	add    BYTE PTR [rcx+rax*1],dl
   140015c4b:	rex add DWORD PTR [rax],eax
   140015c4e:	add    BYTE PTR [rax],al
   140015c50:	mov    al,0x1d
   140015c52:	add    DWORD PTR [rax+0x1],eax
   140015c55:	add    BYTE PTR [rax],al
   140015c57:	add    BYTE PTR [rax+0x2b],dl
   140015c5a:	add    BYTE PTR [rax+0x1],al
   140015c5d:	add    BYTE PTR [rax],al
   140015c5f:	add    BYTE PTR [rax+0x2b],dh
   140015c62:	add    BYTE PTR [rax+0x1],al
	...
   140015c6d:	add    BYTE PTR [rax],al
   140015c6f:	add    BYTE PTR [rax+0x14001da],cl
   140015c75:	add    BYTE PTR [rax],al
   140015c77:	add    BYTE PTR [rax+0x41],dh
   140015c7a:	add    BYTE PTR [rax+0x1],al
   140015c7d:	add    BYTE PTR [rax],al
   140015c7f:	add    BYTE PTR [rax],dl
   140015c81:	adc    al,0x1
   140015c83:	rex add DWORD PTR [rax],eax
   140015c86:	add    BYTE PTR [rax],al
   140015c88:	add    BYTE PTR [rcx+rax*1],dl
   140015c8b:	rex add DWORD PTR [rax],eax
   140015c8e:	add    BYTE PTR [rax],al
   140015c90:	add    BYTE PTR [rcx+rax*1],dl
   140015c93:	rex add DWORD PTR [rax],eax
   140015c96:	add    BYTE PTR [rax],al
   140015c98:	add    BYTE PTR [rcx+rax*1],dl
   140015c9b:	rex add DWORD PTR [rax],eax
   140015c9e:	add    BYTE PTR [rax],al
   140015ca0:	xor    BYTE PTR [rsi],bl
   140015ca2:	add    DWORD PTR [rax+0x1],eax
   140015ca5:	add    BYTE PTR [rax],al
   140015ca7:	add    BYTE PTR [rax],al
   140015ca9:	cmp    DWORD PTR [rax],eax
   140015cab:	rex add DWORD PTR [rax],eax
   140015cae:	add    BYTE PTR [rax],al
   140015cb0:	sub    BYTE PTR [rdx],0x0
   140015cb3:	rex add DWORD PTR [rax],eax
	...
   140015cbe:	add    BYTE PTR [rax],al
   140015cc0:	sbb    bl,bl
   140015cc2:	add    DWORD PTR [rax+0x1],eax
   140015cc5:	add    BYTE PTR [rax],al
   140015cc7:	add    BYTE PTR [rax+0x41],dh
   140015cca:	add    BYTE PTR [rax+0x1],al
   140015ccd:	add    BYTE PTR [rax],al
   140015ccf:	add    BYTE PTR [rax],al
   140015cd1:	adc    al,0x1
   140015cd3:	rex add DWORD PTR [rax],eax
   140015cd6:	add    BYTE PTR [rax],al
   140015cd8:	add    BYTE PTR [rcx+rax*1],dl
   140015cdb:	rex add DWORD PTR [rax],eax
   140015cde:	add    BYTE PTR [rax],al
   140015ce0:	add    BYTE PTR [rcx+rax*1],dl
   140015ce3:	rex add DWORD PTR [rax],eax
   140015ce6:	add    BYTE PTR [rax],al
   140015ce8:	add    BYTE PTR [rcx+rax*1],dl
   140015ceb:	rex add DWORD PTR [rax],eax
   140015cee:	add    BYTE PTR [rax],al
   140015cf0:	loopne 0x140015d10
   140015cf2:	add    DWORD PTR [rax+0x1],eax
   140015cf5:	add    BYTE PTR [rax],al
   140015cf7:	add    BYTE PTR [rax],al
   140015cf9:	cmp    DWORD PTR [rax],eax
   140015cfb:	rex add DWORD PTR [rax],eax
   140015cfe:	add    BYTE PTR [rax],al
   140015d00:	nop
   140015d01:	sub    al,0x0
   140015d03:	rex add DWORD PTR [rax],eax
	...
   140015d0e:	add    BYTE PTR [rax],al
   140015d10:	movabs al,ds:0x70000000014001db
   140015d19:	add    BYTE PTR [r8+0x1],al
   140015d1d:	add    BYTE PTR [rax],al
   140015d1f:	add    BYTE PTR [rax],dl
   140015d21:	adc    al,0x1
   140015d23:	rex add DWORD PTR [rax],eax
   140015d26:	add    BYTE PTR [rax],al
   140015d28:	add    BYTE PTR [rcx+rax*1],dl
   140015d2b:	rex add DWORD PTR [rax],eax
   140015d2e:	add    BYTE PTR [rax],al
   140015d30:	add    BYTE PTR [rcx+rax*1],dl
   140015d33:	rex add DWORD PTR [rax],eax
   140015d36:	add    BYTE PTR [rax],al
   140015d38:	add    BYTE PTR [rcx+rax*1],dl
   140015d3b:	rex add DWORD PTR [rax],eax
   140015d3e:	add    BYTE PTR [rax],al
   140015d40:	sbb    BYTE PTR [rdi],0x1
   140015d43:	rex add DWORD PTR [rax],eax
   140015d46:	add    BYTE PTR [rax],al
   140015d48:	add    BYTE PTR [rcx],bh
   140015d4a:	add    BYTE PTR [rax+0x1],al
   140015d4d:	add    BYTE PTR [rax],al
   140015d4f:	add    BYTE PTR [rax+0x2b],dl
   140015d52:	add    BYTE PTR [rax+0x1],al
	...
   140015d5d:	add    BYTE PTR [rax],al
   140015d5f:	add    BYTE PTR [rax],dh
   140015d61:	fadd   QWORD PTR [rcx]
   140015d63:	rex add DWORD PTR [rax],eax
   140015d66:	add    BYTE PTR [rax],al
   140015d68:	jo     0x140015dab
   140015d6a:	add    BYTE PTR [rax+0x1],al
   140015d6d:	add    BYTE PTR [rax],al
   140015d6f:	add    BYTE PTR [rax],dl
   140015d71:	adc    al,0x1
   140015d73:	rex add DWORD PTR [rax],eax
   140015d76:	add    BYTE PTR [rax],al
   140015d78:	add    BYTE PTR [rcx+rax*1],dl
   140015d7b:	rex add DWORD PTR [rax],eax
   140015d7e:	add    BYTE PTR [rax],al
   140015d80:	add    BYTE PTR [rcx+rax*1],dl
   140015d83:	rex add DWORD PTR [rax],eax
   140015d86:	add    BYTE PTR [rax],al
   140015d88:	add    BYTE PTR [rcx+rax*1],dl
   140015d8b:	rex add DWORD PTR [rax],eax
   140015d8e:	add    BYTE PTR [rax],al
   140015d90:	add    BYTE PTR [rax],ah
   140015d92:	add    DWORD PTR [rax+0x1],eax
   140015d95:	add    BYTE PTR [rax],al
   140015d97:	add    BYTE PTR [rax],al
   140015d99:	cmp    DWORD PTR [rax],eax
   140015d9b:	rex add DWORD PTR [rax],eax
   140015d9e:	add    BYTE PTR [rax],al
   140015da0:	push   rax
   140015da1:	sub    eax,DWORD PTR [rax]
   140015da3:	rex add DWORD PTR [rax],eax
	...
   140015dae:	add    BYTE PTR [rax],al
   140015db0:	rcr    ah,0x1
   140015db3:	rex add DWORD PTR [rax],eax
   140015db6:	add    BYTE PTR [rax],al
   140015db8:	jo     0x140015dfb
   140015dba:	add    BYTE PTR [rax+0x1],al
   140015dbd:	add    BYTE PTR [rax],al
   140015dbf:	add    BYTE PTR [rax],dl
   140015dc1:	adc    al,0x1
   140015dc3:	rex add DWORD PTR [rax],eax
   140015dc6:	add    BYTE PTR [rax],al
   140015dc8:	add    BYTE PTR [rcx+rax*1],dl
   140015dcb:	rex add DWORD PTR [rax],eax
   140015dce:	add    BYTE PTR [rax],al
   140015dd0:	add    BYTE PTR [rcx+rax*1],dl
   140015dd3:	rex add DWORD PTR [rax],eax
   140015dd6:	add    BYTE PTR [rax],al
   140015dd8:	add    BYTE PTR [rcx+rax*1],dl
   140015ddb:	rex add DWORD PTR [rax],eax
   140015dde:	add    BYTE PTR [rax],al
   140015de0:	and    BYTE PTR [rax],0x1
   140015de3:	rex add DWORD PTR [rax],eax
   140015de6:	add    BYTE PTR [rax],al
   140015de8:	push   rax
   140015de9:	sub    eax,DWORD PTR [rax]
   140015deb:	rex add DWORD PTR [rax],eax
   140015dee:	add    BYTE PTR [rax],al
   140015df0:	jo     0x140015e1d
   140015df2:	add    BYTE PTR [rax+0x1],al
	...
   140015dfd:	add    BYTE PTR [rax],al
   140015dff:	add    BYTE PTR [rax-0x23],dl
   140015e02:	add    DWORD PTR [rax+0x1],eax
   140015e05:	add    BYTE PTR [rax],al
   140015e07:	add    BYTE PTR [rax+0x41],dh
   140015e0a:	add    BYTE PTR [rax+0x1],al
   140015e0d:	add    BYTE PTR [rax],al
   140015e0f:	add    BYTE PTR [rax],dl
   140015e11:	adc    al,0x1
   140015e13:	rex add DWORD PTR [rax],eax
   140015e16:	add    BYTE PTR [rax],al
   140015e18:	add    BYTE PTR [rcx+rax*1],dl
   140015e1b:	rex add DWORD PTR [rax],eax
   140015e1e:	add    BYTE PTR [rax],al
   140015e20:	add    BYTE PTR [rcx+rax*1],dl
   140015e23:	rex add DWORD PTR [rax],eax
   140015e26:	add    BYTE PTR [rax],al
   140015e28:	add    BYTE PTR [rcx+rax*1],dl
   140015e2b:	rex add DWORD PTR [rax],eax
   140015e2e:	add    BYTE PTR [rax],al
   140015e30:	add    BYTE PTR [rcx],ah
   140015e32:	add    DWORD PTR [rax+0x1],eax
   140015e35:	add    BYTE PTR [rax],al
   140015e37:	add    BYTE PTR [rax+0x2b],dl
   140015e3a:	add    BYTE PTR [rax+0x1],al
   140015e3d:	add    BYTE PTR [rax],al
   140015e3f:	add    BYTE PTR [rax+0x2b],dh
   140015e42:	add    BYTE PTR [rax+0x1],al
	...
   140015e4d:	add    BYTE PTR [rax],al
   140015e4f:	add    al,ah
   140015e51:	fld    QWORD PTR [rcx]
   140015e53:	rex add DWORD PTR [rax],eax
   140015e56:	add    BYTE PTR [rax],al
   140015e58:	jo     0x140015e9b
   140015e5a:	add    BYTE PTR [rax+0x1],al
   140015e5d:	add    BYTE PTR [rax],al
   140015e5f:	add    BYTE PTR [rax],dl
   140015e61:	adc    al,0x1
   140015e63:	rex add DWORD PTR [rax],eax
   140015e66:	add    BYTE PTR [rax],al
   140015e68:	add    BYTE PTR [rcx+rax*1],dl
   140015e6b:	rex add DWORD PTR [rax],eax
   140015e6e:	add    BYTE PTR [rax],al
   140015e70:	add    BYTE PTR [rcx+rax*1],dl
   140015e73:	rex add DWORD PTR [rax],eax
   140015e76:	add    BYTE PTR [rax],al
   140015e78:	add    BYTE PTR [rcx+rax*1],dl
   140015e7b:	rex add DWORD PTR [rax],eax
   140015e7e:	add    BYTE PTR [rax],al
   140015e80:	and    BYTE PTR [rcx],0x1
   140015e83:	rex add DWORD PTR [rax],eax
   140015e86:	add    BYTE PTR [rax],al
   140015e88:	push   rax
   140015e89:	sub    eax,DWORD PTR [rax]
   140015e8b:	rex add DWORD PTR [rax],eax
   140015e8e:	add    BYTE PTR [rax],al
   140015e90:	jo     0x140015ebd
   140015e92:	add    BYTE PTR [rax+0x1],al
	...
   140015e9d:	add    BYTE PTR [rax],al
   140015e9f:	add    BYTE PTR [rax-0x22],dh
   140015ea2:	add    DWORD PTR [rax+0x1],eax
   140015ea5:	add    BYTE PTR [rax],al
   140015ea7:	add    BYTE PTR [rax+0x41],dh
   140015eaa:	add    BYTE PTR [rax+0x1],al
   140015ead:	add    BYTE PTR [rax],al
   140015eaf:	add    BYTE PTR [rax],dl
   140015eb1:	adc    al,0x1
   140015eb3:	rex add DWORD PTR [rax],eax
   140015eb6:	add    BYTE PTR [rax],al
   140015eb8:	add    BYTE PTR [rcx+rax*1],dl
   140015ebb:	rex add DWORD PTR [rax],eax
   140015ebe:	add    BYTE PTR [rax],al
   140015ec0:	add    BYTE PTR [rcx+rax*1],dl
   140015ec3:	rex add DWORD PTR [rax],eax
   140015ec6:	add    BYTE PTR [rax],al
   140015ec8:	add    BYTE PTR [rcx+rax*1],dl
   140015ecb:	rex add DWORD PTR [rax],eax
   140015ece:	add    BYTE PTR [rax],al
   140015ed0:	add    BYTE PTR [rdx],ah
   140015ed2:	add    DWORD PTR [rax+0x1],eax
   140015ed5:	add    BYTE PTR [rax],al
   140015ed7:	add    BYTE PTR [rax+0x2b],dl
   140015eda:	add    BYTE PTR [rax+0x1],al
   140015edd:	add    BYTE PTR [rax],al
   140015edf:	add    BYTE PTR [rax+0x2b],dh
   140015ee2:	add    BYTE PTR [rax+0x1],al
	...
   140015ef1:	fild   WORD PTR [rcx]
   140015ef3:	rex add DWORD PTR [rax],eax
   140015ef6:	add    BYTE PTR [rax],al
   140015ef8:	jo     0x140015f3b
   140015efa:	add    BYTE PTR [rax+0x1],al
   140015efd:	add    BYTE PTR [rax],al
   140015eff:	add    BYTE PTR [rax],dl
   140015f01:	adc    al,0x1
   140015f03:	rex add DWORD PTR [rax],eax
   140015f06:	add    BYTE PTR [rax],al
   140015f08:	add    BYTE PTR [rcx+rax*1],dl
   140015f0b:	rex add DWORD PTR [rax],eax
   140015f0e:	add    BYTE PTR [rax],al
   140015f10:	add    BYTE PTR [rcx+rax*1],dl
   140015f13:	rex add DWORD PTR [rax],eax
   140015f16:	add    BYTE PTR [rax],al
   140015f18:	add    BYTE PTR [rcx+rax*1],dl
   140015f1b:	rex add DWORD PTR [rax],eax
   140015f1e:	add    BYTE PTR [rax],al
   140015f20:	and    BYTE PTR [rdx],0x1
   140015f23:	rex add DWORD PTR [rax],eax
   140015f26:	add    BYTE PTR [rax],al
   140015f28:	push   rax
   140015f29:	sub    eax,DWORD PTR [rax]
   140015f2b:	rex add DWORD PTR [rax],eax
   140015f2e:	add    BYTE PTR [rax],al
   140015f30:	jo     0x140015f5d
   140015f32:	add    BYTE PTR [rax+0x1],al
	...
   140015f3d:	add    BYTE PTR [rax],al
   140015f3f:	add    BYTE PTR [rax+0x14001df],dl
   140015f45:	add    BYTE PTR [rax],al
   140015f47:	add    BYTE PTR [rax+0x41],dh
   140015f4a:	add    BYTE PTR [rax+0x1],al
   140015f4d:	add    BYTE PTR [rax],al
   140015f4f:	add    BYTE PTR [rax],dl
   140015f51:	adc    al,0x1
   140015f53:	rex add DWORD PTR [rax],eax
   140015f56:	add    BYTE PTR [rax],al
   140015f58:	add    BYTE PTR [rcx+rax*1],dl
   140015f5b:	rex add DWORD PTR [rax],eax
   140015f5e:	add    BYTE PTR [rax],al
   140015f60:	add    BYTE PTR [rcx+rax*1],dl
   140015f63:	rex add DWORD PTR [rax],eax
   140015f66:	add    BYTE PTR [rax],al
   140015f68:	add    BYTE PTR [rcx+rax*1],dl
   140015f6b:	rex add DWORD PTR [rax],eax
   140015f6e:	add    BYTE PTR [rax],al
   140015f70:	add    BYTE PTR [rbx],ah
   140015f72:	add    DWORD PTR [rax+0x1],eax
   140015f75:	add    BYTE PTR [rax],al
   140015f77:	add    BYTE PTR [rax+0x2b],dl
   140015f7a:	add    BYTE PTR [rax+0x1],al
   140015f7d:	add    BYTE PTR [rax],al
   140015f7f:	add    BYTE PTR [rax+0x2b],dh
   140015f82:	add    BYTE PTR [rax+0x1],al
	...
   140015f8d:	add    BYTE PTR [rax],al
   140015f8f:	add    BYTE PTR [rax],ah
   140015f91:	loopne 0x140015f94
   140015f93:	rex add DWORD PTR [rax],eax
   140015f96:	add    BYTE PTR [rax],al
   140015f98:	jo     0x140015fdb
   140015f9a:	add    BYTE PTR [rax+0x1],al
   140015f9d:	add    BYTE PTR [rax],al
   140015f9f:	add    BYTE PTR [rax],dl
   140015fa1:	adc    al,0x1
   140015fa3:	rex add DWORD PTR [rax],eax
   140015fa6:	add    BYTE PTR [rax],al
   140015fa8:	add    BYTE PTR [rcx+rax*1],dl
   140015fab:	rex add DWORD PTR [rax],eax
   140015fae:	add    BYTE PTR [rax],al
   140015fb0:	add    BYTE PTR [rcx+rax*1],dl
   140015fb3:	rex add DWORD PTR [rax],eax
   140015fb6:	add    BYTE PTR [rax],al
   140015fb8:	add    BYTE PTR [rcx+rax*1],dl
   140015fbb:	rex add DWORD PTR [rax],eax
   140015fbe:	add    BYTE PTR [rax],al
   140015fc0:	and    BYTE PTR [rbx],0x1
   140015fc3:	rex add DWORD PTR [rax],eax
   140015fc6:	add    BYTE PTR [rax],al
   140015fc8:	push   rax
   140015fc9:	sub    eax,DWORD PTR [rax]
   140015fcb:	rex add DWORD PTR [rax],eax
   140015fce:	add    BYTE PTR [rax],al
   140015fd0:	jo     0x140015ffd
   140015fd2:	add    BYTE PTR [rax+0x1],al
	...
   140015fdd:	add    BYTE PTR [rax],al
   140015fdf:	add    BYTE PTR [rax+0x14001e0],dh
   140015fe5:	add    BYTE PTR [rax],al
   140015fe7:	add    BYTE PTR [rax+0x41],dh
   140015fea:	add    BYTE PTR [rax+0x1],al
   140015fed:	add    BYTE PTR [rax],al
   140015fef:	add    BYTE PTR [rax],dl
   140015ff1:	adc    al,0x1
   140015ff3:	rex add DWORD PTR [rax],eax
   140015ff6:	add    BYTE PTR [rax],al
   140015ff8:	add    BYTE PTR [rcx+rax*1],dl
   140015ffb:	rex add DWORD PTR [rax],eax
   140015ffe:	add    BYTE PTR [rax],al
   140016000:	add    BYTE PTR [rcx+rax*1],dl
   140016003:	rex add DWORD PTR [rax],eax
   140016006:	add    BYTE PTR [rax],al
   140016008:	add    BYTE PTR [rcx+rax*1],dl
   14001600b:	rex add DWORD PTR [rax],eax
   14001600e:	add    BYTE PTR [rax],al
   140016010:	add    BYTE PTR [rcx+rax*1],ah
   140016013:	rex add DWORD PTR [rax],eax
   140016016:	add    BYTE PTR [rax],al
   140016018:	push   rax
   140016019:	sub    eax,DWORD PTR [rax]
   14001601b:	rex add DWORD PTR [rax],eax
   14001601e:	add    BYTE PTR [rax],al
   140016020:	jo     0x14001604d
   140016022:	add    BYTE PTR [rax+0x1],al
	...
   14001602d:	add    BYTE PTR [rax],al
   14001602f:	add    BYTE PTR [rax-0x1f],al
   140016032:	add    DWORD PTR [rax+0x1],eax
   140016035:	add    BYTE PTR [rax],al
   140016037:	add    BYTE PTR [rax+0x41],dh
   14001603a:	add    BYTE PTR [rax+0x1],al
   14001603d:	add    BYTE PTR [rax],al
   14001603f:	add    BYTE PTR [rax],dl
   140016041:	adc    al,0x1
   140016043:	rex add DWORD PTR [rax],eax
   140016046:	add    BYTE PTR [rax],al
   140016048:	add    BYTE PTR [rcx+rax*1],dl
   14001604b:	rex add DWORD PTR [rax],eax
   14001604e:	add    BYTE PTR [rax],al
   140016050:	add    BYTE PTR [rcx+rax*1],dl
   140016053:	rex add DWORD PTR [rax],eax
   140016056:	add    BYTE PTR [rax],al
   140016058:	add    BYTE PTR [rcx+rax*1],dl
   14001605b:	rex add DWORD PTR [rax],eax
   14001605e:	add    BYTE PTR [rax],al
   140016060:	and    BYTE PTR [rcx+rax*1],0x40
   140016064:	add    DWORD PTR [rax],eax
   140016066:	add    BYTE PTR [rax],al
   140016068:	push   rax
   140016069:	sub    eax,DWORD PTR [rax]
   14001606b:	rex add DWORD PTR [rax],eax
   14001606e:	add    BYTE PTR [rax],al
   140016070:	jo     0x14001609d
   140016072:	add    BYTE PTR [rax+0x1],al
	...
   14001607d:	add    BYTE PTR [rax],al
   14001607f:	add    al,dl
   140016081:	loope  0x140016084
   140016083:	rex add DWORD PTR [rax],eax
   140016086:	add    BYTE PTR [rax],al
   140016088:	jo     0x1400160cb
   14001608a:	add    BYTE PTR [rax+0x1],al
   14001608d:	add    BYTE PTR [rax],al
   14001608f:	add    BYTE PTR [rax],dl
   140016091:	adc    al,0x1
   140016093:	rex add DWORD PTR [rax],eax
   140016096:	add    BYTE PTR [rax],al
   140016098:	adc    BYTE PTR [rcx+rax*1],dl
   14001609b:	rex add DWORD PTR [rax],eax
   14001609e:	add    BYTE PTR [rax],al
   1400160a0:	add    BYTE PTR [rcx+rax*1],dl
   1400160a3:	rex add DWORD PTR [rax],eax
   1400160a6:	add    BYTE PTR [rax],al
   1400160a8:	add    BYTE PTR [rcx+rax*1],dl
   1400160ab:	rex add DWORD PTR [rax],eax
   1400160ae:	add    BYTE PTR [rax],al
   1400160b0:	add    BYTE PTR [rip+0x14001],ah        # 0x14002a0b7
   1400160b6:	add    BYTE PTR [rax],al
   1400160b8:	add    BYTE PTR [rcx],bh
   1400160ba:	add    BYTE PTR [rax+0x1],al
   1400160bd:	add    BYTE PTR [rax],al
   1400160bf:	add    BYTE PTR [rax],ah
   1400160c1:	xor    al,0x0
   1400160c3:	rex add DWORD PTR [rax],eax
	...
   1400160ce:	add    BYTE PTR [rax],al
   1400160d0:	(bad)  
   1400160d1:	loop   0x1400160d4
   1400160d3:	rex add DWORD PTR [rax],eax
   1400160d6:	add    BYTE PTR [rax],al
   1400160d8:	jo     0x14001611b
   1400160da:	add    BYTE PTR [rax+0x1],al
   1400160dd:	add    BYTE PTR [rax],al
   1400160df:	add    BYTE PTR [rax],dl
   1400160e1:	adc    al,0x1
   1400160e3:	rex add DWORD PTR [rax],eax
   1400160e6:	add    BYTE PTR [rax],al
   1400160e8:	add    BYTE PTR [rcx+rax*1],dl
   1400160eb:	rex add DWORD PTR [rax],eax
   1400160ee:	add    BYTE PTR [rax],al
   1400160f0:	add    BYTE PTR [rcx+rax*1],dl
   1400160f3:	rex add DWORD PTR [rax],eax
   1400160f6:	add    BYTE PTR [rax],al
   1400160f8:	add    BYTE PTR [rcx+rax*1],dl
   1400160fb:	rex add DWORD PTR [rax],eax
   1400160fe:	add    BYTE PTR [rax],al
   140016100:	mov    al,0x25
   140016102:	add    DWORD PTR [rax+0x1],eax
   140016105:	add    BYTE PTR [rax],al
   140016107:	add    BYTE PTR [rax],al
   140016109:	cmp    DWORD PTR [rax],eax
   14001610b:	rex add DWORD PTR [rax],eax
   14001610e:	add    BYTE PTR [rax],al
   140016110:	and    BYTE PTR [rax+rax*1],dh
   140016113:	rex add DWORD PTR [rax],eax
	...
   14001611e:	add    BYTE PTR [rax],al
   140016120:	lock loop 0x140016124
   140016123:	rex add DWORD PTR [rax],eax
   140016126:	add    BYTE PTR [rax],al
   140016128:	jo     0x14001616b
   14001612a:	add    BYTE PTR [rax+0x1],al
   14001612d:	add    BYTE PTR [rax],al
   14001612f:	add    BYTE PTR [rax],dl
   140016131:	adc    al,0x1
   140016133:	rex add DWORD PTR [rax],eax
   140016136:	add    BYTE PTR [rax],al
   140016138:	add    BYTE PTR [rcx+rax*1],dl
   14001613b:	rex add DWORD PTR [rax],eax
   14001613e:	add    BYTE PTR [rax],al
   140016140:	add    BYTE PTR [rcx+rax*1],dl
   140016143:	rex add DWORD PTR [rax],eax
   140016146:	add    BYTE PTR [rax],al
   140016148:	add    BYTE PTR [rcx+rax*1],dl
   14001614b:	rex add DWORD PTR [rax],eax
   14001614e:	add    BYTE PTR [rax],al
   140016150:	nop
   140016151:	add    DWORD PTR es:[rax+0x1],eax
   140016155:	add    BYTE PTR [rax],al
   140016157:	add    BYTE PTR [rax],al
   140016159:	cmp    DWORD PTR [rax],eax
   14001615b:	rex add DWORD PTR [rax],eax
   14001615e:	add    BYTE PTR [rax],al
   140016160:	shl    BYTE PTR [rcx],0x0
   140016163:	rex add DWORD PTR [rax],eax
	...
   14001616e:	add    BYTE PTR [rax],al
   140016170:	and    bl,0x1
   140016173:	rex add DWORD PTR [rax],eax
   140016176:	add    BYTE PTR [rax],al
   140016178:	jo     0x1400161bb
   14001617a:	add    BYTE PTR [rax+0x1],al
   14001617d:	add    BYTE PTR [rax],al
   14001617f:	add    BYTE PTR [rax],al
   140016181:	adc    al,0x1
   140016183:	rex add DWORD PTR [rax],eax
   140016186:	add    BYTE PTR [rax],al
   140016188:	add    BYTE PTR [rcx+rax*1],dl
   14001618b:	rex add DWORD PTR [rax],eax
   14001618e:	add    BYTE PTR [rax],al
   140016190:	adc    BYTE PTR [rcx+rax*1],dl
   140016193:	rex add DWORD PTR [rax],eax
   140016196:	add    BYTE PTR [rax],al
   140016198:	add    BYTE PTR [rcx+rax*1],dl
   14001619b:	rex add DWORD PTR [rax],eax
   14001619e:	add    BYTE PTR [rax],al
   1400161a0:	rex (bad) 
   1400161a2:	add    DWORD PTR [rax+0x1],eax
   1400161a5:	add    BYTE PTR [rax],al
   1400161a7:	add    BYTE PTR [rax+0x2b],dl
   1400161aa:	add    BYTE PTR [rax+0x1],al
   1400161ad:	add    BYTE PTR [rax],al
   1400161af:	add    BYTE PTR [rax],al
   1400161b1:	xor    eax,0x14000
	...
   1400161be:	add    BYTE PTR [rax],al
   1400161c0:	adc    ah,ah
   1400161c2:	add    DWORD PTR [rax+0x1],eax
   1400161c5:	add    BYTE PTR [rax],al
   1400161c7:	add    BYTE PTR [rax+0x41],dh
   1400161ca:	add    BYTE PTR [rax+0x1],al
   1400161cd:	add    BYTE PTR [rax],al
   1400161cf:	add    BYTE PTR [rax],al
   1400161d1:	adc    al,0x1
   1400161d3:	rex add DWORD PTR [rax],eax
   1400161d6:	add    BYTE PTR [rax],al
   1400161d8:	add    BYTE PTR [rcx+rax*1],dl
   1400161db:	rex add DWORD PTR [rax],eax
   1400161de:	add    BYTE PTR [rax],al
   1400161e0:	add    BYTE PTR [rcx+rax*1],dl
   1400161e3:	rex add DWORD PTR [rax],eax
   1400161e6:	add    BYTE PTR [rax],al
   1400161e8:	add    BYTE PTR [rcx+rax*1],dl
   1400161eb:	rex add DWORD PTR [rax],eax
   1400161ee:	add    BYTE PTR [rax],al
   1400161f0:	shl    BYTE PTR [rdi],0x1
   1400161f3:	rex add DWORD PTR [rax],eax
   1400161f6:	add    BYTE PTR [rax],al
   1400161f8:	add    BYTE PTR [rcx],bh
   1400161fa:	add    BYTE PTR [rax+0x1],al
   1400161fd:	add    BYTE PTR [rax],al
   1400161ff:	add    al,dl
   140016201:	cmp    eax,DWORD PTR [rax]
   140016203:	rex add DWORD PTR [rax],eax
	...
   14001620e:	add    BYTE PTR [rax],al
   140016210:	cwde   
   140016211:	in     al,0x1
   140016213:	rex add DWORD PTR [rax],eax
   140016216:	add    BYTE PTR [rax],al
   140016218:	jo     0x14001625b
   14001621a:	add    BYTE PTR [rax+0x1],al
   14001621d:	add    BYTE PTR [rax],al
   14001621f:	add    BYTE PTR [rax],al
   140016221:	adc    al,0x1
   140016223:	rex add DWORD PTR [rax],eax
   140016226:	add    BYTE PTR [rax],al
   140016228:	add    BYTE PTR [rcx+rax*1],dl
   14001622b:	rex add DWORD PTR [rax],eax
   14001622e:	add    BYTE PTR [rax],al
   140016230:	adc    BYTE PTR [rcx+rax*1],dl
   140016233:	rex add DWORD PTR [rax],eax
   140016236:	add    BYTE PTR [rax],al
   140016238:	add    BYTE PTR [rcx+rax*1],dl
   14001623b:	rex add DWORD PTR [rax],eax
   14001623e:	add    BYTE PTR [rax],al
   140016240:	(bad)  
   140016241:	sub    BYTE PTR [rcx],al
   140016243:	rex add DWORD PTR [rax],eax
   140016246:	add    BYTE PTR [rax],al
   140016248:	push   rax
   140016249:	sub    eax,DWORD PTR [rax]
   14001624b:	rex add DWORD PTR [rax],eax
   14001624e:	add    BYTE PTR [rax],al
   140016250:	add    BYTE PTR [rip+0x14000],dh        # 0x14002a256
	...
   14001625e:	add    BYTE PTR [rax],al
   140016260:	sub    ch,ah
   140016262:	add    DWORD PTR [rax+0x1],eax
   140016265:	add    BYTE PTR [rax],al
   140016267:	add    BYTE PTR [rax+0x41],dh
   14001626a:	add    BYTE PTR [rax+0x1],al
   14001626d:	add    BYTE PTR [rax],al
   14001626f:	add    BYTE PTR [rax],al
   140016271:	adc    al,0x1
   140016273:	rex add DWORD PTR [rax],eax
   140016276:	add    BYTE PTR [rax],al
   140016278:	add    BYTE PTR [rcx+rax*1],dl
   14001627b:	rex add DWORD PTR [rax],eax
   14001627e:	add    BYTE PTR [rax],al
   140016280:	add    BYTE PTR [rcx+rax*1],dl
   140016283:	rex add DWORD PTR [rax],eax
   140016286:	add    BYTE PTR [rax],al
   140016288:	add    BYTE PTR [rcx+rax*1],dl
   14001628b:	rex add DWORD PTR [rax],eax
   14001628e:	add    BYTE PTR [rax],al
   140016290:	sub    BYTE PTR [rcx],0x1
   140016293:	rex add DWORD PTR [rax],eax
   140016296:	add    BYTE PTR [rax],al
   140016298:	and    BYTE PTR [rax+rax*1],ch
   14001629b:	rex add DWORD PTR [rax],eax
   14001629e:	add    BYTE PTR [rax],al
   1400162a0:	sub    al,0x0
   1400162a3:	rex add DWORD PTR [rax],eax
	...
   1400162ae:	add    BYTE PTR [rax],al
   1400162b0:	mov    al,0xe5
   1400162b2:	add    DWORD PTR [rax+0x1],eax
   1400162b5:	add    BYTE PTR [rax],al
   1400162b7:	add    BYTE PTR [rax+0x41],dh
   1400162ba:	add    BYTE PTR [rax+0x1],al
   1400162bd:	add    BYTE PTR [rax],al
   1400162bf:	add    BYTE PTR [rax],al
   1400162c1:	adc    al,0x1
   1400162c3:	rex add DWORD PTR [rax],eax
   1400162c6:	add    BYTE PTR [rax],al
   1400162c8:	add    BYTE PTR [rcx+rax*1],dl
   1400162cb:	rex add DWORD PTR [rax],eax
   1400162ce:	add    BYTE PTR [rax],al
   1400162d0:	add    BYTE PTR [rcx+rax*1],dl
   1400162d3:	rex add DWORD PTR [rax],eax
   1400162d6:	add    BYTE PTR [rax],al
   1400162d8:	add    BYTE PTR [rcx+rax*1],dl
   1400162db:	rex add DWORD PTR [rax],eax
   1400162de:	add    BYTE PTR [rax],al
   1400162e0:	loopne 0x14001630a
   1400162e2:	add    DWORD PTR [rax+0x1],eax
   1400162e5:	add    BYTE PTR [rax],al
   1400162e7:	add    BYTE PTR [rax],al
   1400162e9:	cmp    DWORD PTR [rax],eax
   1400162eb:	rex add DWORD PTR [rax],eax
   1400162ee:	add    BYTE PTR [rax],al
   1400162f0:	nop
   1400162f1:	sub    al,0x0
   1400162f3:	rex add DWORD PTR [rax],eax
	...
   1400162fe:	add    BYTE PTR [rax],al
   140016300:	cmp    dh,ah
   140016302:	add    DWORD PTR [rax+0x1],eax
   140016305:	add    BYTE PTR [rax],al
   140016307:	add    BYTE PTR [rax+0x41],dh
   14001630a:	add    BYTE PTR [rax+0x1],al
   14001630d:	add    BYTE PTR [rax],al
   14001630f:	add    BYTE PTR [rax],al
   140016311:	adc    al,0x1
   140016313:	rex add DWORD PTR [rax],eax
   140016316:	add    BYTE PTR [rax],al
   140016318:	add    BYTE PTR [rcx+rax*1],dl
   14001631b:	rex add DWORD PTR [rax],eax
   14001631e:	add    BYTE PTR [rax],al
   140016320:	adc    BYTE PTR [rcx+rax*1],dl
   140016323:	rex add DWORD PTR [rax],eax
   140016326:	add    BYTE PTR [rax],al
   140016328:	add    BYTE PTR [rcx+rax*1],dl
   14001632b:	rex add DWORD PTR [rax],eax
   14001632e:	add    BYTE PTR [rax],al
   140016330:	add    BYTE PTR [rdx],ch
   140016332:	add    DWORD PTR [rax+0x1],eax
   140016335:	add    BYTE PTR [rax],al
   140016337:	add    BYTE PTR [rax],al
   140016339:	(bad)  
   14001633a:	add    BYTE PTR [rax+0x1],al
   14001633d:	add    BYTE PTR [rax],al
   14001633f:	add    BYTE PTR [rax],al
   140016341:	(bad)  
   140016342:	add    BYTE PTR [rax+0x1],al
	...
   14001634d:	add    BYTE PTR [rax],al
   14001634f:	add    al,cl
   140016351:	out    0x1,al
   140016353:	rex add DWORD PTR [rax],eax
   140016356:	add    BYTE PTR [rax],al
   140016358:	jo     0x14001639b
   14001635a:	add    BYTE PTR [rax+0x1],al
   14001635d:	add    BYTE PTR [rax],al
   14001635f:	add    BYTE PTR [rax],al
   140016361:	adc    al,0x1
   140016363:	rex add DWORD PTR [rax],eax
   140016366:	add    BYTE PTR [rax],al
   140016368:	add    BYTE PTR [rcx+rax*1],dl
   14001636b:	rex add DWORD PTR [rax],eax
   14001636e:	add    BYTE PTR [rax],al
   140016370:	adc    BYTE PTR [rcx+rax*1],dl
   140016373:	rex add DWORD PTR [rax],eax
   140016376:	add    BYTE PTR [rax],al
   140016378:	add    BYTE PTR [rcx+rax*1],dl
   14001637b:	rex add DWORD PTR [rax],eax
   14001637e:	add    BYTE PTR [rax],al
   140016380:	sub    al,BYTE PTR [rcx]
   140016383:	rex add DWORD PTR [rax],eax
   140016386:	add    BYTE PTR [rax],al
   140016388:	add    BYTE PTR [rcx],bh
   14001638a:	add    BYTE PTR [rax+0x1],al
   14001638d:	add    BYTE PTR [rax],al
   14001638f:	add    BYTE PTR [rax+0x2b],dl
   140016392:	add    BYTE PTR [rax+0x1],al
	...
   14001639d:	add    BYTE PTR [rax],al
   14001639f:	add    BYTE PTR [rax-0x19],bl
   1400163a2:	add    DWORD PTR [rax+0x1],eax
   1400163a5:	add    BYTE PTR [rax],al
   1400163a7:	add    BYTE PTR [rax+0x41],dh
   1400163aa:	add    BYTE PTR [rax+0x1],al
   1400163ad:	add    BYTE PTR [rax],al
   1400163af:	add    BYTE PTR [rax],al
   1400163b1:	adc    al,0x1
   1400163b3:	rex add DWORD PTR [rax],eax
   1400163b6:	add    BYTE PTR [rax],al
   1400163b8:	add    BYTE PTR [rcx+rax*1],dl
   1400163bb:	rex add DWORD PTR [rax],eax
   1400163be:	add    BYTE PTR [rax],al
   1400163c0:	adc    BYTE PTR [rcx+rax*1],dl
   1400163c3:	rex add DWORD PTR [rax],eax
   1400163c6:	add    BYTE PTR [rax],al
   1400163c8:	add    BYTE PTR [rcx+rax*1],dl
   1400163cb:	rex add DWORD PTR [rax],eax
   1400163ce:	add    BYTE PTR [rax],al
   1400163d0:	shr    BYTE PTR [rdx],0x1
   1400163d3:	rex add DWORD PTR [rax],eax
   1400163d6:	add    BYTE PTR [rax],al
   1400163d8:	add    BYTE PTR [rip+0x14000],dh        # 0x14002a3de
   1400163de:	add    BYTE PTR [rax],al
   1400163e0:	jo     0x14001640f
   1400163e2:	add    BYTE PTR [rax+0x1],al
	...
   1400163ed:	add    BYTE PTR [rax],al
   1400163ef:	add    al,ch
   1400163f1:	out    0x1,eax
   1400163f3:	rex add DWORD PTR [rax],eax
   1400163f6:	add    BYTE PTR [rax],al
   1400163f8:	jo     0x14001643b
   1400163fa:	add    BYTE PTR [rax+0x1],al
   1400163fd:	add    BYTE PTR [rax],al
   1400163ff:	add    BYTE PTR [rax],al
   140016401:	adc    al,0x1
   140016403:	rex add DWORD PTR [rax],eax
   140016406:	add    BYTE PTR [rax],al
   140016408:	add    BYTE PTR [rcx+rax*1],dl
   14001640b:	rex add DWORD PTR [rax],eax
   14001640e:	add    BYTE PTR [rax],al
   140016410:	adc    BYTE PTR [rcx+rax*1],dl
   140016413:	rex add DWORD PTR [rax],eax
   140016416:	add    BYTE PTR [rax],al
   140016418:	add    BYTE PTR [rcx+rax*1],dl
   14001641b:	rex add DWORD PTR [rax],eax
   14001641e:	add    BYTE PTR [rax],al
   140016420:	movabs al,ds:0x500000000140012b
   140016429:	cmp    DWORD PTR [rax],eax
   14001642b:	rex add DWORD PTR [rax],eax
   14001642e:	add    BYTE PTR [rax],al
   140016430:	adc    BYTE PTR [rsi],ch
   140016432:	add    BYTE PTR [rax+0x1],al
	...
   14001643d:	add    BYTE PTR [rax],al
   14001643f:	add    BYTE PTR [rax-0x18],bh
   140016442:	add    DWORD PTR [rax+0x1],eax
   140016445:	add    BYTE PTR [rax],al
   140016447:	add    BYTE PTR [rax+0x41],dh
   14001644a:	add    BYTE PTR [rax+0x1],al
   14001644d:	add    BYTE PTR [rax],al
   14001644f:	add    BYTE PTR [rax],al
   140016451:	adc    al,0x1
   140016453:	rex add DWORD PTR [rax],eax
   140016456:	add    BYTE PTR [rax],al
   140016458:	add    BYTE PTR [rcx+rax*1],dl
   14001645b:	rex add DWORD PTR [rax],eax
   14001645e:	add    BYTE PTR [rax],al
   140016460:	adc    BYTE PTR [rcx+rax*1],dl
   140016463:	rex add DWORD PTR [rax],eax
   140016466:	add    BYTE PTR [rax],al
   140016468:	add    BYTE PTR [rcx+rax*1],dl
   14001646b:	rex add DWORD PTR [rax],eax
   14001646e:	add    BYTE PTR [rax],al
   140016470:	push   rax
   140016471:	sub    al,0x1
   140016473:	rex add DWORD PTR [rax],eax
   140016476:	add    BYTE PTR [rax],al
   140016478:	push   rax
   140016479:	cmp    DWORD PTR [rax],eax
   14001647b:	rex add DWORD PTR [rax],eax
   14001647e:	add    BYTE PTR [rax],al
   140016480:	shl    BYTE PTR [rcx],0x0
   140016483:	rex add DWORD PTR [rax],eax
	...
   14001648e:	add    BYTE PTR [rax],al
   140016490:	or     cl,ch
   140016492:	add    DWORD PTR [rax+0x1],eax
   140016495:	add    BYTE PTR [rax],al
   140016497:	add    BYTE PTR [rax+0x41],dh
   14001649a:	add    BYTE PTR [rax+0x1],al
   14001649d:	add    BYTE PTR [rax],al
   14001649f:	add    BYTE PTR [rax],al
   1400164a1:	adc    al,0x1
   1400164a3:	rex add DWORD PTR [rax],eax
   1400164a6:	add    BYTE PTR [rax],al
   1400164a8:	add    BYTE PTR [rcx+rax*1],dl
   1400164ab:	rex add DWORD PTR [rax],eax
   1400164ae:	add    BYTE PTR [rax],al
   1400164b0:	adc    BYTE PTR [rcx+rax*1],dl
   1400164b3:	rex add DWORD PTR [rax],eax
   1400164b6:	add    BYTE PTR [rax],al
   1400164b8:	add    BYTE PTR [rcx+rax*1],dl
   1400164bb:	rex add DWORD PTR [rax],eax
   1400164be:	add    BYTE PTR [rax],al
   1400164c0:	add    BYTE PTR [rip+0x14001],ch        # 0x14002a4c7
   1400164c6:	add    BYTE PTR [rax],al
   1400164c8:	sub    BYTE PTR [rdx],0x0
   1400164cb:	rex add DWORD PTR [rax],eax
   1400164ce:	add    BYTE PTR [rax],al
   1400164d0:	jo     0x140016501
   1400164d2:	add    BYTE PTR [rax+0x1],al
	...
   1400164dd:	add    BYTE PTR [rax],al
   1400164df:	add    BYTE PTR [rax+0x14001e9],bl
   1400164e5:	add    BYTE PTR [rax],al
   1400164e7:	add    BYTE PTR [rax+0x41],dh
   1400164ea:	add    BYTE PTR [rax+0x1],al
   1400164ed:	add    BYTE PTR [rax],al
   1400164ef:	add    BYTE PTR [rax],al
   1400164f1:	adc    al,0x1
   1400164f3:	rex add DWORD PTR [rax],eax
   1400164f6:	add    BYTE PTR [rax],al
   1400164f8:	add    BYTE PTR [rcx+rax*1],dl
   1400164fb:	rex add DWORD PTR [rax],eax
   1400164fe:	add    BYTE PTR [rax],al
   140016500:	adc    BYTE PTR [rcx+rax*1],dl
   140016503:	rex add DWORD PTR [rax],eax
   140016506:	add    BYTE PTR [rax],al
   140016508:	add    BYTE PTR [rcx+rax*1],dl
   14001650b:	rex add DWORD PTR [rax],eax
   14001650e:	add    BYTE PTR [rax],al
   140016510:	adc    BYTE PTR [rsi],ch
   140016512:	add    DWORD PTR [rax+0x1],eax
   140016515:	add    BYTE PTR [rax],al
   140016517:	add    BYTE PTR [rax+0x140002a],al
   14001651d:	add    BYTE PTR [rax],al
   14001651f:	add    BYTE PTR [rax+0x2f],dh
   140016522:	add    BYTE PTR [rax+0x1],al
	...
   14001652d:	add    BYTE PTR [rax],al
   14001652f:	add    BYTE PTR [rax],ch
   140016531:	(bad)  
   140016532:	add    DWORD PTR [rax+0x1],eax
   140016535:	add    BYTE PTR [rax],al
   140016537:	add    BYTE PTR [rax+0x41],dh
   14001653a:	add    BYTE PTR [rax+0x1],al
   14001653d:	add    BYTE PTR [rax],al
   14001653f:	add    BYTE PTR [rax],al
   140016541:	adc    al,0x1
   140016543:	rex add DWORD PTR [rax],eax
   140016546:	add    BYTE PTR [rax],al
   140016548:	add    BYTE PTR [rcx+rax*1],dl
   14001654b:	rex add DWORD PTR [rax],eax
   14001654e:	add    BYTE PTR [rax],al
   140016550:	adc    BYTE PTR [rcx+rax*1],dl
   140016553:	rex add DWORD PTR [rax],eax
   140016556:	add    BYTE PTR [rax],al
   140016558:	add    BYTE PTR [rcx+rax*1],dl
   14001655b:	rex add DWORD PTR [rax],eax
   14001655e:	add    BYTE PTR [rax],al
   140016560:	and    BYTE PTR [rdi],ch
   140016562:	add    DWORD PTR [rax+0x1],eax
   140016565:	add    BYTE PTR [rax],al
   140016567:	add    BYTE PTR [rax],al
   140016569:	xor    eax,0x14000
   14001656e:	add    BYTE PTR [rax],al
   140016570:	and    BYTE PTR [rax+rax*1],dh
   140016573:	rex add DWORD PTR [rax],eax
	...
   14001657e:	add    BYTE PTR [rax],al
   140016580:	mov    eax,0x14001ea
   140016585:	add    BYTE PTR [rax],al
   140016587:	add    BYTE PTR [rax+0x41],dh
   14001658a:	add    BYTE PTR [rax+0x1],al
   14001658d:	add    BYTE PTR [rax],al
   14001658f:	add    BYTE PTR [rax],al
   140016591:	adc    al,0x1
   140016593:	rex add DWORD PTR [rax],eax
   140016596:	add    BYTE PTR [rax],al
   140016598:	add    BYTE PTR [rcx+rax*1],dl
   14001659b:	rex add DWORD PTR [rax],eax
   14001659e:	add    BYTE PTR [rax],al
   1400165a0:	adc    BYTE PTR [rcx+rax*1],dl
   1400165a3:	rex add DWORD PTR [rax],eax
   1400165a6:	add    BYTE PTR [rax],al
   1400165a8:	add    BYTE PTR [rcx+rax*1],dl
   1400165ab:	rex add DWORD PTR [rax],eax
   1400165ae:	add    BYTE PTR [rax],al
   1400165b0:	add    BYTE PTR [rax],dh
   1400165b2:	add    DWORD PTR [rax+0x1],eax
   1400165b5:	add    BYTE PTR [rax],al
   1400165b7:	add    BYTE PTR [rax],al
   1400165b9:	xor    eax,0x14000
   1400165be:	add    BYTE PTR [rax],al
   1400165c0:	and    BYTE PTR [rax+rax*1],dh
   1400165c3:	rex add DWORD PTR [rax],eax
	...
   1400165ce:	add    BYTE PTR [rax],al
   1400165d0:	rex.W jmp 0x1400165d4
   1400165d3:	rex add DWORD PTR [rax],eax
   1400165d6:	add    BYTE PTR [rax],al
   1400165d8:	jo     0x14001661b
   1400165da:	add    BYTE PTR [rax+0x1],al
   1400165dd:	add    BYTE PTR [rax],al
   1400165df:	add    BYTE PTR [rax],al
   1400165e1:	adc    al,0x1
   1400165e3:	rex add DWORD PTR [rax],eax
   1400165e6:	add    BYTE PTR [rax],al
   1400165e8:	add    BYTE PTR [rcx+rax*1],dl
   1400165eb:	rex add DWORD PTR [rax],eax
   1400165ee:	add    BYTE PTR [rax],al
   1400165f0:	adc    BYTE PTR [rcx+rax*1],dl
   1400165f3:	rex add DWORD PTR [rax],eax
   1400165f6:	add    BYTE PTR [rax],al
   1400165f8:	add    BYTE PTR [rcx+rax*1],dl
   1400165fb:	rex add DWORD PTR [rax],eax
   1400165fe:	add    BYTE PTR [rax],al
   140016600:	loopne 0x140016632
   140016602:	add    DWORD PTR [rax+0x1],eax
   140016605:	add    BYTE PTR [rax],al
   140016607:	add    BYTE PTR [rax+0x39],dl
   14001660a:	add    BYTE PTR [rax+0x1],al
   14001660d:	add    BYTE PTR [rax],al
   14001660f:	add    BYTE PTR [rax+0x1400030],dh
	...
   14001661d:	add    BYTE PTR [rax],al
   14001661f:	add    al,bl
   140016621:	jmp    0x140016624
   140016623:	rex add DWORD PTR [rax],eax
   140016626:	add    BYTE PTR [rax],al
   140016628:	jo     0x14001666b
   14001662a:	add    BYTE PTR [rax+0x1],al
   14001662d:	add    BYTE PTR [rax],al
   14001662f:	add    BYTE PTR [rax],al
   140016631:	adc    al,0x1
   140016633:	rex add DWORD PTR [rax],eax
   140016636:	add    BYTE PTR [rax],al
   140016638:	add    BYTE PTR [rcx+rax*1],dl
   14001663b:	rex add DWORD PTR [rax],eax
   14001663e:	add    BYTE PTR [rax],al
   140016640:	adc    BYTE PTR [rcx+rax*1],dl
   140016643:	rex add DWORD PTR [rax],eax
   140016646:	add    BYTE PTR [rax],al
   140016648:	add    BYTE PTR [rcx+rax*1],dl
   14001664b:	rex add DWORD PTR [rax],eax
   14001664e:	add    BYTE PTR [rax],al
   140016650:	and    BYTE PTR [rcx],dh
   140016652:	add    DWORD PTR [rax+0x1],eax
   140016655:	add    BYTE PTR [rax],al
   140016657:	add    BYTE PTR [rax+0x39],dl
   14001665a:	add    BYTE PTR [rax+0x1],al
   14001665d:	add    BYTE PTR [rax],al
   14001665f:	add    BYTE PTR [rax+0x1400030],dh
	...
   14001666d:	add    BYTE PTR [rax],al
   14001666f:	add    BYTE PTR [rax-0x14],ch
   140016672:	add    DWORD PTR [rax+0x1],eax
   140016675:	add    BYTE PTR [rax],al
   140016677:	add    BYTE PTR [rax+0x41],dh
   14001667a:	add    BYTE PTR [rax+0x1],al
   14001667d:	add    BYTE PTR [rax],al
   14001667f:	add    BYTE PTR [rax],al
   140016681:	adc    al,0x1
   140016683:	rex add DWORD PTR [rax],eax
   140016686:	add    BYTE PTR [rax],al
   140016688:	add    BYTE PTR [rcx+rax*1],dl
   14001668b:	rex add DWORD PTR [rax],eax
   14001668e:	add    BYTE PTR [rax],al
   140016690:	adc    BYTE PTR [rcx+rax*1],dl
   140016693:	rex add DWORD PTR [rax],eax
   140016696:	add    BYTE PTR [rax],al
   140016698:	add    BYTE PTR [rcx+rax*1],dl
   14001669b:	rex add DWORD PTR [rax],eax
   14001669e:	add    BYTE PTR [rax],al
   1400166a0:	(bad)  
   1400166a1:	xor    DWORD PTR [rcx],eax
   1400166a3:	rex add DWORD PTR [rax],eax
   1400166a6:	add    BYTE PTR [rax],al
   1400166a8:	push   rax
   1400166a9:	sub    eax,DWORD PTR [rax]
   1400166ab:	rex add DWORD PTR [rax],eax
   1400166ae:	add    BYTE PTR [rax],al
   1400166b0:	add    BYTE PTR [rip+0x14000],dh        # 0x14002a6b6
	...
   1400166be:	add    BYTE PTR [rax],al
   1400166c0:	clc    
   1400166c1:	in     al,dx
   1400166c2:	add    DWORD PTR [rax+0x1],eax
   1400166c5:	add    BYTE PTR [rax],al
   1400166c7:	add    BYTE PTR [rax+0x41],dh
   1400166ca:	add    BYTE PTR [rax+0x1],al
   1400166cd:	add    BYTE PTR [rax],al
   1400166cf:	add    BYTE PTR [rax],al
   1400166d1:	adc    al,0x1
   1400166d3:	rex add DWORD PTR [rax],eax
   1400166d6:	add    BYTE PTR [rax],al
   1400166d8:	add    BYTE PTR [rcx+rax*1],dl
   1400166db:	rex add DWORD PTR [rax],eax
   1400166de:	add    BYTE PTR [rax],al
   1400166e0:	adc    BYTE PTR [rcx+rax*1],dl
   1400166e3:	rex add DWORD PTR [rax],eax
   1400166e6:	add    BYTE PTR [rax],al
   1400166e8:	add    BYTE PTR [rcx+rax*1],dl
   1400166eb:	rex add DWORD PTR [rax],eax
   1400166ee:	add    BYTE PTR [rax],al
   1400166f0:	loopne 0x140016723
   1400166f2:	add    DWORD PTR [rax+0x1],eax
   1400166f5:	add    BYTE PTR [rax],al
   1400166f7:	add    BYTE PTR [rax+0x39],dl
   1400166fa:	add    BYTE PTR [rax+0x1],al
   1400166fd:	add    BYTE PTR [rax],al
   1400166ff:	add    al,al
   140016701:	xor    DWORD PTR [rax],eax
   140016703:	rex add DWORD PTR [rax],eax
	...
   14001670e:	add    BYTE PTR [rax],al
   140016710:	mov    ch,ch
   140016712:	add    DWORD PTR [rax+0x1],eax
   140016715:	add    BYTE PTR [rax],al
   140016717:	add    BYTE PTR [rax+0x41],dh
   14001671a:	add    BYTE PTR [rax+0x1],al
   14001671d:	add    BYTE PTR [rax],al
   14001671f:	add    BYTE PTR [rax],al
   140016721:	adc    al,0x1
   140016723:	rex add DWORD PTR [rax],eax
   140016726:	add    BYTE PTR [rax],al
   140016728:	add    BYTE PTR [rcx+rax*1],dl
   14001672b:	rex add DWORD PTR [rax],eax
   14001672e:	add    BYTE PTR [rax],al
   140016730:	add    BYTE PTR [rcx+rax*1],dl
   140016733:	rex add DWORD PTR [rax],eax
   140016736:	add    BYTE PTR [rax],al
   140016738:	add    BYTE PTR [rcx+rax*1],dl
   14001673b:	rex add DWORD PTR [rax],eax
   14001673e:	add    BYTE PTR [rax],al
   140016740:	rex xor eax,DWORD PTR [rcx]
   140016743:	rex add DWORD PTR [rax],eax
   140016746:	add    BYTE PTR [rax],al
   140016748:	add    BYTE PTR [rip+0x14000],dh        # 0x14002a74e
   14001674e:	add    BYTE PTR [rax],al
   140016750:	adc    BYTE PTR [rbx],bh
   140016752:	add    BYTE PTR [rax+0x1],al
	...
   14001675d:	add    BYTE PTR [rax],al
   14001675f:	add    BYTE PTR [rax],dl
   140016761:	out    dx,al
   140016762:	add    DWORD PTR [rax+0x1],eax
   140016765:	add    BYTE PTR [rax],al
   140016767:	add    BYTE PTR [rax+0x41],dh
   14001676a:	add    BYTE PTR [rax+0x1],al
   14001676d:	add    BYTE PTR [rax],al
   14001676f:	add    BYTE PTR [rax],al
   140016771:	adc    al,0x1
   140016773:	rex add DWORD PTR [rax],eax
   140016776:	add    BYTE PTR [rax],al
   140016778:	add    BYTE PTR [rcx+rax*1],dl
   14001677b:	rex add DWORD PTR [rax],eax
   14001677e:	add    BYTE PTR [rax],al
   140016780:	adc    BYTE PTR [rcx+rax*1],dl
   140016783:	rex add DWORD PTR [rax],eax
   140016786:	add    BYTE PTR [rax],al
   140016788:	add    BYTE PTR [rcx+rax*1],dl
   14001678b:	rex add DWORD PTR [rax],eax
   14001678e:	add    BYTE PTR [rax],al
   140016790:	nop
   140016791:	xor    al,BYTE PTR [rcx]
   140016793:	rex add DWORD PTR [rax],eax
   140016796:	add    BYTE PTR [rax],al
   140016798:	push   rax
   140016799:	cmp    DWORD PTR [rax],eax
   14001679b:	rex add DWORD PTR [rax],eax
   14001679e:	add    BYTE PTR [rax],al
   1400167a0:	jo     0x1400167d4
   1400167a2:	add    BYTE PTR [rax+0x1],al
	...
   1400167ad:	add    BYTE PTR [rax],al
   1400167af:	add    BYTE PTR [rax+0x14001ee],ah
   1400167b5:	add    BYTE PTR [rax],al
   1400167b7:	add    BYTE PTR [rax+0x41],dh
   1400167ba:	add    BYTE PTR [rax+0x1],al
   1400167bd:	add    BYTE PTR [rax],al
   1400167bf:	add    BYTE PTR [rax],al
   1400167c1:	adc    al,0x1
   1400167c3:	rex add DWORD PTR [rax],eax
   1400167c6:	add    BYTE PTR [rax],al
   1400167c8:	add    BYTE PTR [rcx+rax*1],dl
   1400167cb:	rex add DWORD PTR [rax],eax
   1400167ce:	add    BYTE PTR [rax],al
   1400167d0:	add    BYTE PTR [rcx+rax*1],dl
   1400167d3:	rex add DWORD PTR [rax],eax
   1400167d6:	add    BYTE PTR [rax],al
   1400167d8:	add    BYTE PTR [rcx+rax*1],dl
   1400167db:	rex add DWORD PTR [rax],eax
   1400167de:	add    BYTE PTR [rax],al
   1400167e0:	shl    BYTE PTR [rcx+rax*1],0x40
   1400167e4:	add    DWORD PTR [rax],eax
   1400167e6:	add    BYTE PTR [rax],al
   1400167e8:	push   rax
   1400167e9:	cmp    DWORD PTR [rax],eax
   1400167eb:	rex add DWORD PTR [rax],eax
   1400167ee:	add    BYTE PTR [rax],al
   1400167f0:	loopne 0x140016824
   1400167f2:	add    BYTE PTR [rax+0x1],al
	...
   1400167fd:	add    BYTE PTR [rax],al
   1400167ff:	add    BYTE PTR [rax],ch
   140016801:	out    dx,eax
   140016802:	add    DWORD PTR [rax+0x1],eax
   140016805:	add    BYTE PTR [rax],al
   140016807:	add    BYTE PTR [rax+0x41],dh
   14001680a:	add    BYTE PTR [rax+0x1],al
   14001680d:	add    BYTE PTR [rax],al
   14001680f:	add    BYTE PTR [rax],al
   140016811:	adc    al,0x1
   140016813:	rex add DWORD PTR [rax],eax
   140016816:	add    BYTE PTR [rax],al
   140016818:	add    BYTE PTR [rcx+rax*1],dl
   14001681b:	rex add DWORD PTR [rax],eax
   14001681e:	add    BYTE PTR [rax],al
   140016820:	add    BYTE PTR [rcx+rax*1],dl
   140016823:	rex add DWORD PTR [rax],eax
   140016826:	add    BYTE PTR [rax],al
   140016828:	add    BYTE PTR [rcx+rax*1],dl
   14001682b:	rex add DWORD PTR [rax],eax
   14001682e:	add    BYTE PTR [rax],al
   140016830:	and    BYTE PTR [rcx+rax*1],dh
   140016833:	rex add DWORD PTR [rax],eax
   140016836:	add    BYTE PTR [rax],al
   140016838:	add    BYTE PTR [rcx],bh
   14001683a:	add    BYTE PTR [rax+0x1],al
   14001683d:	add    BYTE PTR [rax],al
   14001683f:	add    al,dl
   140016841:	cmp    eax,DWORD PTR [rax]
   140016843:	rex add DWORD PTR [rax],eax
	...
   14001684e:	add    BYTE PTR [rax],al
   140016850:	mov    al,0xef
   140016852:	add    DWORD PTR [rax+0x1],eax
   140016855:	add    BYTE PTR [rax],al
   140016857:	add    BYTE PTR [rax+0x41],dh
   14001685a:	add    BYTE PTR [rax+0x1],al
   14001685d:	add    BYTE PTR [rax],al
   14001685f:	add    BYTE PTR [rax],al
   140016861:	adc    al,0x1
   140016863:	rex add DWORD PTR [rax],eax
   140016866:	add    BYTE PTR [rax],al
   140016868:	add    BYTE PTR [rcx+rax*1],dl
   14001686b:	rex add DWORD PTR [rax],eax
   14001686e:	add    BYTE PTR [rax],al
   140016870:	add    BYTE PTR [rcx+rax*1],dl
   140016873:	rex add DWORD PTR [rax],eax
   140016876:	add    BYTE PTR [rax],al
   140016878:	add    BYTE PTR [rcx+rax*1],dl
   14001687b:	rex add DWORD PTR [rax],eax
   14001687e:	add    BYTE PTR [rax],al
   140016880:	jo     0x1400168b7
   140016882:	add    DWORD PTR [rax+0x1],eax
   140016885:	add    BYTE PTR [rax],al
   140016887:	add    BYTE PTR [rax+0x2b],dl
   14001688a:	add    BYTE PTR [rax+0x1],al
   14001688d:	add    BYTE PTR [rax],al
   14001688f:	add    BYTE PTR [rax+0x33],dh
   140016892:	add    BYTE PTR [rax+0x1],al
	...
   14001689d:	add    BYTE PTR [rax],al
   14001689f:	add    BYTE PTR [rax],bh
   1400168a1:	lock add DWORD PTR [rax+0x1],eax
   1400168a5:	add    BYTE PTR [rax],al
   1400168a7:	add    BYTE PTR [rax+0x41],dh
   1400168aa:	add    BYTE PTR [rax+0x1],al
   1400168ad:	add    BYTE PTR [rax],al
   1400168af:	add    BYTE PTR [rax],al
   1400168b1:	adc    al,0x1
   1400168b3:	rex add DWORD PTR [rax],eax
   1400168b6:	add    BYTE PTR [rax],al
   1400168b8:	add    BYTE PTR [rcx+rax*1],dl
   1400168bb:	rex add DWORD PTR [rax],eax
   1400168be:	add    BYTE PTR [rax],al
   1400168c0:	adc    BYTE PTR [rcx+rax*1],dl
   1400168c3:	rex add DWORD PTR [rax],eax
   1400168c6:	add    BYTE PTR [rax],al
   1400168c8:	add    BYTE PTR [rcx+rax*1],dl
   1400168cb:	rex add DWORD PTR [rax],eax
   1400168ce:	add    BYTE PTR [rax],al
   1400168d0:	lock xor eax,0x14001
   1400168d6:	add    BYTE PTR [rax],al
   1400168d8:	add    BYTE PTR [rip+0x14000],dh        # 0x14002a8de
   1400168de:	add    BYTE PTR [rax],al
   1400168e0:	and    BYTE PTR [rax+rax*1],dh
   1400168e3:	rex add DWORD PTR [rax],eax
	...
   1400168ee:	add    BYTE PTR [rax],al
   1400168f0:	enter  0x1f0,0x40
   1400168f4:	add    DWORD PTR [rax],eax
   1400168f6:	add    BYTE PTR [rax],al
   1400168f8:	jo     0x14001693b
   1400168fa:	add    BYTE PTR [rax+0x1],al
   1400168fd:	add    BYTE PTR [rax],al
   1400168ff:	add    BYTE PTR [rax],al
   140016901:	adc    al,0x1
   140016903:	rex add DWORD PTR [rax],eax
   140016906:	add    BYTE PTR [rax],al
   140016908:	add    BYTE PTR [rcx+rax*1],dl
   14001690b:	rex add DWORD PTR [rax],eax
   14001690e:	add    BYTE PTR [rax],al
   140016910:	adc    BYTE PTR [rcx+rax*1],dl
   140016913:	rex add DWORD PTR [rax],eax
   140016916:	add    BYTE PTR [rax],al
   140016918:	add    BYTE PTR [rcx+rax*1],dl
   14001691b:	rex add DWORD PTR [rax],eax
   14001691e:	add    BYTE PTR [rax],al
   140016920:	jo     0x140016958
   140016922:	add    DWORD PTR [rax+0x1],eax
   140016925:	add    BYTE PTR [rax],al
   140016927:	add    BYTE PTR [rax+0x2b],dl
   14001692a:	add    BYTE PTR [rax+0x1],al
   14001692d:	add    BYTE PTR [rax],al
   14001692f:	add    BYTE PTR [rax],al
   140016931:	xor    eax,0x14000
	...
   14001693e:	add    BYTE PTR [rax],al
   140016940:	pop    rax
   140016941:	icebp  
   140016942:	add    DWORD PTR [rax+0x1],eax
   140016945:	add    BYTE PTR [rax],al
   140016947:	add    BYTE PTR [rax+0x41],dh
   14001694a:	add    BYTE PTR [rax+0x1],al
   14001694d:	add    BYTE PTR [rax],al
   14001694f:	add    BYTE PTR [rax],al
   140016951:	adc    al,0x1
   140016953:	rex add DWORD PTR [rax],eax
   140016956:	add    BYTE PTR [rax],al
   140016958:	add    BYTE PTR [rcx+rax*1],dl
   14001695b:	rex add DWORD PTR [rax],eax
   14001695e:	add    BYTE PTR [rax],al
   140016960:	add    BYTE PTR [rcx+rax*1],dl
   140016963:	rex add DWORD PTR [rax],eax
   140016966:	add    BYTE PTR [rax],al
   140016968:	add    BYTE PTR [rcx+rax*1],dl
   14001696b:	rex add DWORD PTR [rax],eax
   14001696e:	add    BYTE PTR [rax],al
   140016970:	shl    BYTE PTR [rdi],1
   140016972:	add    DWORD PTR [rax+0x1],eax
   140016975:	add    BYTE PTR [rax],al
   140016977:	add    BYTE PTR [rax],al
   140016979:	xor    eax,0x14000
   14001697e:	add    BYTE PTR [rax],al
   140016980:	and    BYTE PTR [rax+rax*1],dh
   140016983:	rex add DWORD PTR [rax],eax
	...
   14001698e:	add    BYTE PTR [rax],al
   140016990:	loopne 0x140016983
   140016992:	add    DWORD PTR [rax+0x1],eax
   140016995:	add    BYTE PTR [rax],al
   140016997:	add    BYTE PTR [rax+0x41],dh
   14001699a:	add    BYTE PTR [rax+0x1],al
   14001699d:	add    BYTE PTR [rax],al
   14001699f:	add    BYTE PTR [rax],al
   1400169a1:	adc    al,0x1
   1400169a3:	rex add DWORD PTR [rax],eax
   1400169a6:	add    BYTE PTR [rax],al
   1400169a8:	add    BYTE PTR [rcx+rax*1],dl
   1400169ab:	rex add DWORD PTR [rax],eax
   1400169ae:	add    BYTE PTR [rax],al
   1400169b0:	add    BYTE PTR [rcx+rax*1],dl
   1400169b3:	rex add DWORD PTR [rax],eax
   1400169b6:	add    BYTE PTR [rax],al
   1400169b8:	add    BYTE PTR [rcx+rax*1],dl
   1400169bb:	rex add DWORD PTR [rax],eax
   1400169be:	add    BYTE PTR [rax],al
   1400169c0:	push   rax
   1400169c1:	cmp    BYTE PTR [rcx],al
   1400169c3:	rex add DWORD PTR [rax],eax
   1400169c6:	add    BYTE PTR [rax],al
   1400169c8:	push   rax
   1400169c9:	sub    eax,DWORD PTR [rax]
   1400169cb:	rex add DWORD PTR [rax],eax
   1400169ce:	add    BYTE PTR [rax],al
   1400169d0:	sub    BYTE PTR [rax],0x0
   1400169d3:	rex add DWORD PTR [rax],eax
	...
   1400169de:	add    BYTE PTR [rax],al
   1400169e0:	push   0x14001f2
   1400169e5:	add    BYTE PTR [rax],al
   1400169e7:	add    BYTE PTR [rax+0x41],dh
   1400169ea:	add    BYTE PTR [rax+0x1],al
   1400169ed:	add    BYTE PTR [rax],al
   1400169ef:	add    BYTE PTR [rax],al
   1400169f1:	adc    al,0x1
   1400169f3:	rex add DWORD PTR [rax],eax
   1400169f6:	add    BYTE PTR [rax],al
   1400169f8:	add    BYTE PTR [rcx+rax*1],dl
   1400169fb:	rex add DWORD PTR [rax],eax
   1400169fe:	add    BYTE PTR [rax],al
   140016a00:	adc    BYTE PTR [rcx+rax*1],dl
   140016a03:	rex add DWORD PTR [rax],eax
   140016a06:	add    BYTE PTR [rax],al
   140016a08:	add    BYTE PTR [rcx+rax*1],dl
   140016a0b:	rex add DWORD PTR [rax],eax
   140016a0e:	add    BYTE PTR [rax],al
   140016a10:	lock add DWORD PTR ss:[rax+0x1],eax
   140016a15:	add    BYTE PTR [rax],al
   140016a17:	add    BYTE PTR [rax],al
   140016a19:	xor    eax,0x14000
   140016a1e:	add    BYTE PTR [rax],al
   140016a20:	and    BYTE PTR [rip+0x14000],dh        # 0x14002aa26
	...
   140016a2e:	add    BYTE PTR [rax],al
   140016a30:	clc    
   140016a31:	repnz add DWORD PTR [rax+0x1],eax
   140016a35:	add    BYTE PTR [rax],al
   140016a37:	add    BYTE PTR [rax+0x41],dh
   140016a3a:	add    BYTE PTR [rax+0x1],al
   140016a3d:	add    BYTE PTR [rax],al
   140016a3f:	add    BYTE PTR [rax],dl
   140016a41:	adc    al,0x1
   140016a43:	rex add DWORD PTR [rax],eax
   140016a46:	add    BYTE PTR [rax],al
   140016a48:	add    BYTE PTR [rcx+rax*1],dl
   140016a4b:	rex add DWORD PTR [rax],eax
   140016a4e:	add    BYTE PTR [rax],al
   140016a50:	add    BYTE PTR [rcx+rax*1],dl
   140016a53:	rex add DWORD PTR [rax],eax
   140016a56:	add    BYTE PTR [rax],al
   140016a58:	add    BYTE PTR [rcx+rax*1],dl
   140016a5b:	rex add DWORD PTR [rax],eax
   140016a5e:	add    BYTE PTR [rax],al
   140016a60:	cmp    BYTE PTR [rcx],0x1
   140016a63:	rex add DWORD PTR [rax],eax
   140016a66:	add    BYTE PTR [rax],al
   140016a68:	sub    BYTE PTR [rdx],0x0
   140016a6b:	rex add DWORD PTR [rax],eax
   140016a6e:	add    BYTE PTR [rax],al
   140016a70:	push   rax
   140016a71:	add    BYTE PTR ss:[rax+0x1],al
	...
   140016a7d:	add    BYTE PTR [rax],al
   140016a7f:	add    BYTE PTR [rax+0x14001f3],cl
   140016a85:	add    BYTE PTR [rax],al
   140016a87:	add    BYTE PTR [rax+0x41],dh
   140016a8a:	add    BYTE PTR [rax+0x1],al
   140016a8d:	add    BYTE PTR [rax],al
   140016a8f:	add    BYTE PTR [rax],dl
   140016a91:	adc    al,0x1
   140016a93:	rex add DWORD PTR [rax],eax
   140016a96:	add    BYTE PTR [rax],al
   140016a98:	add    BYTE PTR [rcx+rax*1],dl
   140016a9b:	rex add DWORD PTR [rax],eax
   140016a9e:	add    BYTE PTR [rax],al
   140016aa0:	add    BYTE PTR [rcx+rax*1],dl
   140016aa3:	rex add DWORD PTR [rax],eax
   140016aa6:	add    BYTE PTR [rax],al
   140016aa8:	add    BYTE PTR [rcx+rax*1],dl
   140016aab:	rex add DWORD PTR [rax],eax
   140016aae:	add    BYTE PTR [rax],al
   140016ab0:	sar    BYTE PTR [rax],1
   140016ab2:	add    DWORD PTR [rax+0x1],eax
   140016ab5:	add    BYTE PTR [rax],al
   140016ab7:	add    BYTE PTR [rax+0x140002a],al
   140016abd:	add    BYTE PTR [rax],al
   140016abf:	add    BYTE PTR [rax+0x36],dl
   140016ac2:	add    BYTE PTR [rax+0x1],al
	...
   140016acd:	add    BYTE PTR [rax],al
   140016acf:	add    BYTE PTR [rax],ah
   140016ad1:	hlt    
   140016ad2:	add    DWORD PTR [rax+0x1],eax
   140016ad5:	add    BYTE PTR [rax],al
   140016ad7:	add    BYTE PTR [rax+0x41],dh
   140016ada:	add    BYTE PTR [rax+0x1],al
   140016add:	add    BYTE PTR [rax],al
   140016adf:	add    BYTE PTR [rax],al
   140016ae1:	adc    al,0x1
   140016ae3:	rex add DWORD PTR [rax],eax
   140016ae6:	add    BYTE PTR [rax],al
   140016ae8:	add    BYTE PTR [rcx+rax*1],dl
   140016aeb:	rex add DWORD PTR [rax],eax
   140016aee:	add    BYTE PTR [rax],al
   140016af0:	add    BYTE PTR [rcx+rax*1],dl
   140016af3:	rex add DWORD PTR [rax],eax
   140016af6:	add    BYTE PTR [rax],al
   140016af8:	add    BYTE PTR [rcx+rax*1],dl
   140016afb:	rex add DWORD PTR [rax],eax
   140016afe:	add    BYTE PTR [rax],al
   140016b00:	xor    BYTE PTR [rdx],bh
   140016b02:	add    DWORD PTR [rax+0x1],eax
   140016b05:	add    BYTE PTR [rax],al
   140016b07:	add    BYTE PTR [rax],dl
   140016b09:	cmp    eax,DWORD PTR [rax]
   140016b0b:	rex add DWORD PTR [rax],eax
   140016b0e:	add    BYTE PTR [rax],al
   140016b10:	lock (bad) 
   140016b12:	add    BYTE PTR [rax+0x1],al
	...
   140016b1d:	add    BYTE PTR [rax],al
   140016b1f:	add    BYTE PTR [rax],cl
   140016b21:	cmc    
   140016b22:	add    DWORD PTR [rax+0x1],eax
   140016b25:	add    BYTE PTR [rax],al
   140016b27:	add    BYTE PTR [rax+0x41],dh
   140016b2a:	add    BYTE PTR [rax+0x1],al
   140016b2d:	add    BYTE PTR [rax],al
   140016b2f:	add    BYTE PTR [rax],al
   140016b31:	adc    al,0x1
   140016b33:	rex add DWORD PTR [rax],eax
   140016b36:	add    BYTE PTR [rax],al
   140016b38:	add    BYTE PTR [rcx+rax*1],dl
   140016b3b:	rex add DWORD PTR [rax],eax
   140016b3e:	add    BYTE PTR [rax],al
   140016b40:	add    BYTE PTR [rcx+rax*1],dl
   140016b43:	rex add DWORD PTR [rax],eax
   140016b46:	add    BYTE PTR [rax],al
   140016b48:	add    BYTE PTR [rcx+rax*1],dl
   140016b4b:	rex add DWORD PTR [rax],eax
   140016b4e:	add    BYTE PTR [rax],al
   140016b50:	jo     0x140016b8d
   140016b52:	add    DWORD PTR [rax+0x1],eax
   140016b55:	add    BYTE PTR [rax],al
   140016b57:	add    BYTE PTR [rax],al
   140016b59:	cmp    DWORD PTR [rax],eax
   140016b5b:	rex add DWORD PTR [rax],eax
   140016b5e:	add    BYTE PTR [rax],al
   140016b60:	sar    BYTE PTR [rbx],1
   140016b62:	add    BYTE PTR [rax+0x1],al
	...
   140016b6d:	add    BYTE PTR [rax],al
   140016b6f:	add    BYTE PTR [rax+0x14001f5],dl
   140016b75:	add    BYTE PTR [rax],al
   140016b77:	add    BYTE PTR [rax+0x41],dh
   140016b7a:	add    BYTE PTR [rax+0x1],al
   140016b7d:	add    BYTE PTR [rax],al
   140016b7f:	add    BYTE PTR [rax],al
   140016b81:	adc    al,0x1
   140016b83:	rex add DWORD PTR [rax],eax
   140016b86:	add    BYTE PTR [rax],al
   140016b88:	add    BYTE PTR [rcx+rax*1],dl
   140016b8b:	rex add DWORD PTR [rax],eax
   140016b8e:	add    BYTE PTR [rax],al
   140016b90:	add    BYTE PTR [rcx+rax*1],dl
   140016b93:	rex add DWORD PTR [rax],eax
   140016b96:	add    BYTE PTR [rax],al
   140016b98:	add    BYTE PTR [rcx+rax*1],dl
   140016b9b:	rex add DWORD PTR [rax],eax
   140016b9e:	add    BYTE PTR [rax],al
   140016ba0:	jo     0x140016bdc
   140016ba2:	add    DWORD PTR [rax+0x1],eax
   140016ba5:	add    BYTE PTR [rax],al
   140016ba7:	add    BYTE PTR [rax+0x38],al
   140016baa:	add    BYTE PTR [rax+0x1],al
   140016bad:	add    BYTE PTR [rax],al
   140016baf:	add    BYTE PTR [rax+0x1400038],ah
	...
   140016bbd:	add    BYTE PTR [rax],al
   140016bbf:	add    BYTE PTR [rax],bl
   140016bc1:	test   BYTE PTR [rcx],0x40
   140016bc4:	add    DWORD PTR [rax],eax
   140016bc6:	add    BYTE PTR [rax],al
   140016bc8:	jo     0x140016c0b
   140016bca:	add    BYTE PTR [rax+0x1],al
   140016bcd:	add    BYTE PTR [rax],al
   140016bcf:	add    BYTE PTR [rax],al
   140016bd1:	adc    al,0x1
   140016bd3:	rex add DWORD PTR [rax],eax
   140016bd6:	add    BYTE PTR [rax],al
   140016bd8:	add    BYTE PTR [rcx+rax*1],dl
   140016bdb:	rex add DWORD PTR [rax],eax
   140016bde:	add    BYTE PTR [rax],al
   140016be0:	add    BYTE PTR [rcx+rax*1],dl
   140016be3:	rex add DWORD PTR [rax],eax
   140016be6:	add    BYTE PTR [rax],al
   140016be8:	add    BYTE PTR [rcx+rax*1],dl
   140016beb:	rex add DWORD PTR [rax],eax
   140016bee:	add    BYTE PTR [rax],al
   140016bf0:	lock cmp al,BYTE PTR [rcx]
   140016bf3:	rex add DWORD PTR [rax],eax
   140016bf6:	add    BYTE PTR [rax],al
   140016bf8:	cmp    BYTE PTR [rax],al
   140016bfb:	rex add DWORD PTR [rax],eax
   140016bfe:	add    BYTE PTR [rax],al
   140016c00:	movabs al,ds:0x1400038
   140016c09:	add    BYTE PTR [rax],al
   140016c0b:	add    BYTE PTR [rax],al
   140016c0d:	add    BYTE PTR [rax],al
   140016c0f:	add    BYTE PTR [rax+0x14001f6],ah
   140016c15:	add    BYTE PTR [rax],al
   140016c17:	add    BYTE PTR [rax+0x41],dh
   140016c1a:	add    BYTE PTR [rax+0x1],al
   140016c1d:	add    BYTE PTR [rax],al
   140016c1f:	add    BYTE PTR [rax],al
   140016c21:	adc    al,0x1
   140016c23:	rex add DWORD PTR [rax],eax
   140016c26:	add    BYTE PTR [rax],al
   140016c28:	add    BYTE PTR [rcx+rax*1],dl
   140016c2b:	rex add DWORD PTR [rax],eax
   140016c2e:	add    BYTE PTR [rax],al
   140016c30:	add    BYTE PTR [rcx+rax*1],dl
   140016c33:	rex add DWORD PTR [rax],eax
   140016c36:	add    BYTE PTR [rax],al
   140016c38:	add    BYTE PTR [rcx+rax*1],dl
   140016c3b:	rex add DWORD PTR [rax],eax
   140016c3e:	add    BYTE PTR [rax],al
   140016c40:	add    BYTE PTR [rcx+rax*1],bh
   140016c43:	rex add DWORD PTR [rax],eax
   140016c46:	add    BYTE PTR [rax],al
   140016c48:	add    BYTE PTR [rcx],bh
   140016c4a:	add    BYTE PTR [rax+0x1],al
   140016c4d:	add    BYTE PTR [rax],al
   140016c4f:	add    BYTE PTR [rax+0x2b],dh
   140016c52:	add    BYTE PTR [rax+0x1],al
	...
   140016c5d:	add    BYTE PTR [rax],al
   140016c5f:	add    BYTE PTR [rax],dh
   140016c61:	test   DWORD PTR [rcx],0x140
   140016c67:	add    BYTE PTR [rax+0x41],dh
   140016c6a:	add    BYTE PTR [rax+0x1],al
   140016c6d:	add    BYTE PTR [rax],al
   140016c6f:	add    BYTE PTR [rax],al
   140016c71:	adc    al,0x1
   140016c73:	rex add DWORD PTR [rax],eax
   140016c76:	add    BYTE PTR [rax],al
   140016c78:	add    BYTE PTR [rcx+rax*1],dl
   140016c7b:	rex add DWORD PTR [rax],eax
   140016c7e:	add    BYTE PTR [rax],al
   140016c80:	add    BYTE PTR [rcx+rax*1],dl
   140016c83:	rex add DWORD PTR [rax],eax
   140016c86:	add    BYTE PTR [rax],al
   140016c88:	add    BYTE PTR [rcx+rax*1],dl
   140016c8b:	rex add DWORD PTR [rax],eax
   140016c8e:	add    BYTE PTR [rax],al
   140016c90:	cmp    BYTE PTR [rcx+rax*1],0x40
   140016c94:	add    DWORD PTR [rax],eax
   140016c96:	add    BYTE PTR [rax],al
   140016c98:	add    BYTE PTR [rcx],bh
   140016c9a:	add    BYTE PTR [rax+0x1],al
   140016c9d:	add    BYTE PTR [rax],al
   140016c9f:	add    BYTE PTR [rax+0x2b],dh
   140016ca2:	add    BYTE PTR [rax+0x1],al
	...
   140016cad:	add    BYTE PTR [rax],al
   140016caf:	add    al,al
   140016cb1:	test   DWORD PTR [rcx],0x140
   140016cb7:	add    BYTE PTR [rax+0x41],dh
   140016cba:	add    BYTE PTR [rax+0x1],al
   140016cbd:	add    BYTE PTR [rax],al
   140016cbf:	add    BYTE PTR [rax],al
   140016cc1:	adc    al,0x1
   140016cc3:	rex add DWORD PTR [rax],eax
   140016cc6:	add    BYTE PTR [rax],al
   140016cc8:	add    BYTE PTR [rcx+rax*1],dl
   140016ccb:	rex add DWORD PTR [rax],eax
   140016cce:	add    BYTE PTR [rax],al
   140016cd0:	adc    BYTE PTR [rcx+rax*1],dl
   140016cd3:	rex add DWORD PTR [rax],eax
   140016cd6:	add    BYTE PTR [rax],al
   140016cd8:	add    BYTE PTR [rcx+rax*1],dl
   140016cdb:	rex add DWORD PTR [rax],eax
   140016cde:	add    BYTE PTR [rax],al
   140016ce0:	add    BYTE PTR [rip+0x14001],bh        # 0x14002ace7
   140016ce6:	add    BYTE PTR [rax],al
   140016ce8:	add    BYTE PTR [rdi],ah
   140016cea:	add    BYTE PTR [rax+0x1],al
   140016ced:	add    BYTE PTR [rax],al
   140016cef:	add    BYTE PTR [rax+0x39],dl
   140016cf2:	add    BYTE PTR [rax+0x1],al
	...
   140016cfd:	add    BYTE PTR [rax],al
   140016cff:	add    BYTE PTR [rax-0x8],dl
   140016d02:	add    DWORD PTR [rax+0x1],eax
   140016d05:	add    BYTE PTR [rax],al
   140016d07:	add    BYTE PTR [rax+0x41],dh
   140016d0a:	add    BYTE PTR [rax+0x1],al
   140016d0d:	add    BYTE PTR [rax],al
   140016d0f:	add    BYTE PTR [rax],al
   140016d11:	adc    al,0x1
   140016d13:	rex add DWORD PTR [rax],eax
   140016d16:	add    BYTE PTR [rax],al
   140016d18:	add    BYTE PTR [rcx+rax*1],dl
   140016d1b:	rex add DWORD PTR [rax],eax
   140016d1e:	add    BYTE PTR [rax],al
   140016d20:	add    BYTE PTR [rcx+rax*1],dl
   140016d23:	rex add DWORD PTR [rax],eax
   140016d26:	add    BYTE PTR [rax],al
   140016d28:	add    BYTE PTR [rcx+rax*1],dl
   140016d2b:	rex add DWORD PTR [rax],eax
   140016d2e:	add    BYTE PTR [rax],al
   140016d30:	nop
   140016d31:	rex.XB add DWORD PTR [r8+0x1],eax
   140016d35:	add    BYTE PTR [rax],al
   140016d37:	add    BYTE PTR [rax],al
   140016d39:	xor    eax,0x14000
   140016d3e:	add    BYTE PTR [rax],al
   140016d40:	jo     0x140016d75
   140016d42:	add    BYTE PTR [rax+0x1],al
	...
   140016d4d:	add    BYTE PTR [rax],al
   140016d4f:	add    al,bl
   140016d51:	clc    
   140016d52:	add    DWORD PTR [rax+0x1],eax
   140016d55:	add    BYTE PTR [rax],al
   140016d57:	add    BYTE PTR [rax+0x41],dh
   140016d5a:	add    BYTE PTR [rax+0x1],al
   140016d5d:	add    BYTE PTR [rax],al
   140016d5f:	add    BYTE PTR [rax],al
   140016d61:	adc    al,0x1
   140016d63:	rex add DWORD PTR [rax],eax
   140016d66:	add    BYTE PTR [rax],al
   140016d68:	add    BYTE PTR [rcx+rax*1],dl
   140016d6b:	rex add DWORD PTR [rax],eax
   140016d6e:	add    BYTE PTR [rax],al
   140016d70:	add    BYTE PTR [rcx+rax*1],dl
   140016d73:	rex add DWORD PTR [rax],eax
   140016d76:	add    BYTE PTR [rax],al
   140016d78:	add    BYTE PTR [rcx+rax*1],dl
   140016d7b:	rex add DWORD PTR [rax],eax
   140016d7e:	add    BYTE PTR [rax],al
   140016d80:	rol    BYTE PTR [rbx+0x1],1
   140016d83:	rex add DWORD PTR [rax],eax
   140016d86:	add    BYTE PTR [rax],al
   140016d88:	adc    BYTE PTR [rbx],bh
   140016d8a:	add    BYTE PTR [rax+0x1],al
   140016d8d:	add    BYTE PTR [rax],al
   140016d8f:	add    BYTE PTR [rax],dh
   140016d91:	cmp    eax,DWORD PTR [rax]
   140016d93:	rex add DWORD PTR [rax],eax
	...
   140016d9e:	add    BYTE PTR [rax],al
   140016da0:	(bad)  
   140016da1:	stc    
   140016da2:	add    DWORD PTR [rax+0x1],eax
   140016da5:	add    BYTE PTR [rax],al
   140016da7:	add    BYTE PTR [rax+0x41],dh
   140016daa:	add    BYTE PTR [rax+0x1],al
   140016dad:	add    BYTE PTR [rax],al
   140016daf:	add    BYTE PTR [rax],al
   140016db1:	adc    al,0x1
   140016db3:	rex add DWORD PTR [rax],eax
   140016db6:	add    BYTE PTR [rax],al
   140016db8:	add    BYTE PTR [rcx+rax*1],dl
   140016dbb:	rex add DWORD PTR [rax],eax
   140016dbe:	add    BYTE PTR [rax],al
   140016dc0:	add    BYTE PTR [rcx+rax*1],dl
   140016dc3:	rex add DWORD PTR [rax],eax
   140016dc6:	add    BYTE PTR [rax],al
   140016dc8:	add    BYTE PTR [rcx+rax*1],dl
   140016dcb:	rex add DWORD PTR [rax],eax
   140016dce:	add    BYTE PTR [rax],al
   140016dd0:	push   rax
   140016dd1:	rex.X add DWORD PTR [rax+0x1],eax
   140016dd5:	add    BYTE PTR [rax],al
   140016dd7:	add    BYTE PTR [rax+0x3b],ah
   140016dda:	add    BYTE PTR [rax+0x1],al
   140016ddd:	add    BYTE PTR [rax],al
   140016ddf:	add    BYTE PTR [rax+0x140003b],al
	...
   140016ded:	add    BYTE PTR [rax],al
   140016def:	add    al,ch
   140016df1:	stc    
   140016df2:	add    DWORD PTR [rax+0x1],eax
   140016df5:	add    BYTE PTR [rax],al
   140016df7:	add    BYTE PTR [rax+0x41],dh
   140016dfa:	add    BYTE PTR [rax+0x1],al
   140016dfd:	add    BYTE PTR [rax],al
   140016dff:	add    BYTE PTR [rax],al
   140016e01:	adc    al,0x1
   140016e03:	rex add DWORD PTR [rax],eax
   140016e06:	add    BYTE PTR [rax],al
   140016e08:	add    BYTE PTR [rcx+rax*1],dl
   140016e0b:	rex add DWORD PTR [rax],eax
   140016e0e:	add    BYTE PTR [rax],al
   140016e10:	add    BYTE PTR [rcx+rax*1],dl
   140016e13:	rex add DWORD PTR [rax],eax
   140016e16:	add    BYTE PTR [rax],al
   140016e18:	add    BYTE PTR [rcx+rax*1],dl
   140016e1b:	rex add DWORD PTR [rax],eax
   140016e1e:	add    BYTE PTR [rax],al
   140016e20:	push   rax
   140016e21:	add    DWORD PTR [rax+0x1],r8d
   140016e25:	add    BYTE PTR [rax],al
   140016e27:	add    BYTE PTR [rax],al
   140016e29:	xor    eax,0x14000
   140016e2e:	add    BYTE PTR [rax],al
   140016e30:	jo     0x140016e65
   140016e32:	add    BYTE PTR [rax+0x1],al
	...
   140016e3d:	add    BYTE PTR [rax],al
   140016e3f:	add    BYTE PTR [rax-0x6],dh
   140016e42:	add    DWORD PTR [rax+0x1],eax
   140016e45:	add    BYTE PTR [rax],al
   140016e47:	add    BYTE PTR [rax+0x41],dh
   140016e4a:	add    BYTE PTR [rax+0x1],al
   140016e4d:	add    BYTE PTR [rax],al
   140016e4f:	add    BYTE PTR [rax],al
   140016e51:	adc    al,0x1
   140016e53:	rex add DWORD PTR [rax],eax
   140016e56:	add    BYTE PTR [rax],al
   140016e58:	add    BYTE PTR [rcx+rax*1],dl
   140016e5b:	rex add DWORD PTR [rax],eax
   140016e5e:	add    BYTE PTR [rax],al
   140016e60:	add    BYTE PTR [rcx+rax*1],dl
   140016e63:	rex add DWORD PTR [rax],eax
   140016e66:	add    BYTE PTR [rax],al
   140016e68:	add    BYTE PTR [rcx+rax*1],dl
   140016e6b:	rex add DWORD PTR [rax],eax
   140016e6e:	add    BYTE PTR [rax],al
   140016e70:	nop
   140016e71:	add    DWORD PTR [rax+0x1],r8d
   140016e75:	add    BYTE PTR [rax],al
   140016e77:	add    BYTE PTR [rax+0x2b],dl
   140016e7a:	add    BYTE PTR [rax+0x1],al
   140016e7d:	add    BYTE PTR [rax],al
   140016e7f:	add    BYTE PTR [rax],al
   140016e81:	xor    eax,0x14000
	...
   140016e8e:	add    BYTE PTR [rax],al
   140016e90:	clc    
   140016e91:	cli    
   140016e92:	add    DWORD PTR [rax+0x1],eax
   140016e95:	add    BYTE PTR [rax],al
   140016e97:	add    BYTE PTR [rax+0x41],dh
   140016e9a:	add    BYTE PTR [rax+0x1],al
   140016e9d:	add    BYTE PTR [rax],al
   140016e9f:	add    BYTE PTR [rax],al
   140016ea1:	adc    al,0x1
   140016ea3:	rex add DWORD PTR [rax],eax
   140016ea6:	add    BYTE PTR [rax],al
   140016ea8:	add    BYTE PTR [rcx+rax*1],dl
   140016eab:	rex add DWORD PTR [rax],eax
   140016eae:	add    BYTE PTR [rax],al
   140016eb0:	add    BYTE PTR [rcx+rax*1],dl
   140016eb3:	rex add DWORD PTR [rax],eax
   140016eb6:	add    BYTE PTR [rax],al
   140016eb8:	add    BYTE PTR [rcx+rax*1],dl
   140016ebb:	rex add DWORD PTR [rax],eax
   140016ebe:	add    BYTE PTR [rax],al
   140016ec0:	adc    BYTE PTR [rbp+0x1],al
   140016ec3:	rex add DWORD PTR [rax],eax
   140016ec6:	add    BYTE PTR [rax],al
   140016ec8:	add    BYTE PTR [rcx],bh
   140016eca:	add    BYTE PTR [rax+0x1],al
   140016ecd:	add    BYTE PTR [rax],al
   140016ecf:	add    al,dl
   140016ed1:	cmp    eax,DWORD PTR [rax]
   140016ed3:	rex add DWORD PTR [rax],eax
	...
   140016ede:	add    BYTE PTR [rax],al
   140016ee0:	cmp    bl,0x1
   140016ee3:	rex add DWORD PTR [rax],eax
   140016ee6:	add    BYTE PTR [rax],al
   140016ee8:	jo     0x140016f2b
   140016eea:	add    BYTE PTR [rax+0x1],al
   140016eed:	add    BYTE PTR [rax],al
   140016eef:	add    BYTE PTR [rax],al
   140016ef1:	adc    al,0x1
   140016ef3:	rex add DWORD PTR [rax],eax
   140016ef6:	add    BYTE PTR [rax],al
   140016ef8:	add    BYTE PTR [rcx+rax*1],dl
   140016efb:	rex add DWORD PTR [rax],eax
   140016efe:	add    BYTE PTR [rax],al
   140016f00:	add    BYTE PTR [rcx+rax*1],dl
   140016f03:	rex add DWORD PTR [rax],eax
   140016f06:	add    BYTE PTR [rax],al
   140016f08:	add    BYTE PTR [rcx+rax*1],dl
   140016f0b:	rex add DWORD PTR [rax],eax
   140016f0e:	add    BYTE PTR [rax],al
   140016f10:	rex cmp eax,0x14001
   140016f16:	add    BYTE PTR [rax],al
   140016f18:	and    BYTE PTR [rax+rax*1],bh
   140016f1b:	rex add DWORD PTR [rax],eax
   140016f1e:	add    BYTE PTR [rax],al
   140016f20:	cmp    BYTE PTR [rax+rax*1],0x40
   140016f24:	add    DWORD PTR [rax],eax
	...
   140016f2e:	add    BYTE PTR [rax],al
   140016f30:	or     ah,bh
   140016f32:	add    DWORD PTR [rax+0x1],eax
   140016f35:	add    BYTE PTR [rax],al
   140016f37:	add    BYTE PTR [rax+0x41],dh
   140016f3a:	add    BYTE PTR [rax+0x1],al
   140016f3d:	add    BYTE PTR [rax],al
   140016f3f:	add    BYTE PTR [rax],al
   140016f41:	adc    al,0x1
   140016f43:	rex add DWORD PTR [rax],eax
   140016f46:	add    BYTE PTR [rax],al
   140016f48:	add    BYTE PTR [rcx+rax*1],dl
   140016f4b:	rex add DWORD PTR [rax],eax
   140016f4e:	add    BYTE PTR [rax],al
   140016f50:	add    BYTE PTR [rcx+rax*1],dl
   140016f53:	rex add DWORD PTR [rax],eax
   140016f56:	add    BYTE PTR [rax],al
   140016f58:	add    BYTE PTR [rcx+rax*1],dl
   140016f5b:	rex add DWORD PTR [rax],eax
   140016f5e:	add    BYTE PTR [rax],al
   140016f60:	lock rex.X add DWORD PTR [rax+0x1],eax
   140016f65:	add    BYTE PTR [rax],al
   140016f67:	add    BYTE PTR [rax+0x3b],ah
   140016f6a:	add    BYTE PTR [rax+0x1],al
   140016f6d:	add    BYTE PTR [rax],al
   140016f6f:	add    BYTE PTR [rax+0x140003b],al
	...
   140016f7d:	add    BYTE PTR [rax],al
   140016f7f:	add    BYTE PTR [rax+0x14001fc],dl
   140016f85:	add    BYTE PTR [rax],al
   140016f87:	add    BYTE PTR [rax+0x41],dh
   140016f8a:	add    BYTE PTR [rax+0x1],al
   140016f8d:	add    BYTE PTR [rax],al
   140016f8f:	add    BYTE PTR [rax],al
   140016f91:	adc    al,0x1
   140016f93:	rex add DWORD PTR [rax],eax
   140016f96:	add    BYTE PTR [rax],al
   140016f98:	add    BYTE PTR [rcx+rax*1],dl
   140016f9b:	rex add DWORD PTR [rax],eax
   140016f9e:	add    BYTE PTR [rax],al
   140016fa0:	add    BYTE PTR [rcx+rax*1],dl
   140016fa3:	rex add DWORD PTR [rax],eax
   140016fa6:	add    BYTE PTR [rax],al
   140016fa8:	add    BYTE PTR [rcx+rax*1],dl
   140016fab:	rex add DWORD PTR [rax],eax
   140016fae:	add    BYTE PTR [rax],al
   140016fb0:	push   rax
   140016fb1:	(bad)  
   140016fb2:	add    DWORD PTR [rax+0x1],eax
   140016fb5:	add    BYTE PTR [rax],al
   140016fb7:	add    BYTE PTR [rax],al
   140016fb9:	(bad)  
   140016fba:	add    BYTE PTR [rax+0x1],al
   140016fbd:	add    BYTE PTR [rax],al
   140016fbf:	add    BYTE PTR [rax],al
   140016fc1:	xor    eax,0x14000
	...
   140016fce:	add    BYTE PTR [rax],al
   140016fd0:	sbb    ch,bh
   140016fd2:	add    DWORD PTR [rax+0x1],eax
   140016fd5:	add    BYTE PTR [rax],al
   140016fd7:	add    BYTE PTR [rax+0x41],dh
   140016fda:	add    BYTE PTR [rax+0x1],al
   140016fdd:	add    BYTE PTR [rax],al
   140016fdf:	add    BYTE PTR [rax],al
   140016fe1:	adc    al,0x1
   140016fe3:	rex add DWORD PTR [rax],eax
   140016fe6:	add    BYTE PTR [rax],al
   140016fe8:	add    BYTE PTR [rcx+rax*1],dl
   140016feb:	rex add DWORD PTR [rax],eax
   140016fee:	add    BYTE PTR [rax],al
   140016ff0:	add    BYTE PTR [rcx+rax*1],dl
   140016ff3:	rex add DWORD PTR [rax],eax
   140016ff6:	add    BYTE PTR [rax],al
   140016ff8:	add    BYTE PTR [rcx+rax*1],dl
   140016ffb:	rex add DWORD PTR [rax],eax
   140016ffe:	add    BYTE PTR [rax],al
   140017000:	sar    BYTE PTR [rdi],1
   140017002:	add    DWORD PTR [rax+0x1],eax
   140017005:	add    BYTE PTR [rax],al
   140017007:	add    al,dh
   140017009:	cmp    eax,0x14000
   14001700e:	add    BYTE PTR [rax],al
   140017010:	adc    BYTE PTR [rsi],bh
   140017012:	add    BYTE PTR [rax+0x1],al
	...
   140017021:	inc    BYTE PTR [rcx]
   140017023:	rex add DWORD PTR [rax],eax
   140017026:	add    BYTE PTR [rax],al
   140017028:	jo     0x14001706b
   14001702a:	add    BYTE PTR [rax+0x1],al
   14001702d:	add    BYTE PTR [rax],al
   14001702f:	add    BYTE PTR [rax],al
   140017031:	adc    al,0x1
   140017033:	rex add DWORD PTR [rax],eax
   140017036:	add    BYTE PTR [rax],al
   140017038:	add    BYTE PTR [rcx+rax*1],dl
   14001703b:	rex add DWORD PTR [rax],eax
   14001703e:	add    BYTE PTR [rax],al
   140017040:	add    BYTE PTR [rcx+rax*1],dl
   140017043:	rex add DWORD PTR [rax],eax
   140017046:	add    BYTE PTR [rax],al
   140017048:	adc    BYTE PTR [rcx+rax*1],dl
   14001704b:	rex add DWORD PTR [rax],eax
   14001704e:	add    BYTE PTR [rax],al
   140017050:	movabs al,ds:0x600000000140013e
   140017059:	add    BYTE PTR ds:[rax+0x1],al
   14001705d:	add    BYTE PTR [rax],al
   14001705f:	add    BYTE PTR [rax+0x140003e],dl
	...
   14001706d:	add    BYTE PTR [rax],al
   14001706f:	add    BYTE PTR [rax+0x14001fe],dl
   140017075:	add    BYTE PTR [rax],al
   140017077:	add    BYTE PTR [rax+0x41],dh
   14001707a:	add    BYTE PTR [rax+0x1],al
   14001707d:	add    BYTE PTR [rax],al
   14001707f:	add    BYTE PTR [rax],al
   140017081:	adc    al,0x1
   140017083:	rex add DWORD PTR [rax],eax
   140017086:	add    BYTE PTR [rax],al
   140017088:	add    BYTE PTR [rcx+rax*1],dl
   14001708b:	rex add DWORD PTR [rax],eax
   14001708e:	add    BYTE PTR [rax],al
   140017090:	add    BYTE PTR [rcx+rax*1],dl
   140017093:	rex add DWORD PTR [rax],eax
   140017096:	add    BYTE PTR [rax],al
   140017098:	adc    BYTE PTR [rcx+rax*1],dl
   14001709b:	rex add DWORD PTR [rax],eax
   14001709e:	add    BYTE PTR [rax],al
   1400170a0:	rol    BYTE PTR [rbp+0x1],0x40
   1400170a4:	add    DWORD PTR [rax],eax
   1400170a6:	add    BYTE PTR [rax],al
   1400170a8:	loopne 0x1400170ee
   1400170aa:	add    BYTE PTR [rax+0x1],al
   1400170ad:	add    BYTE PTR [rax],al
   1400170af:	add    BYTE PTR [rax],dh
   1400170b1:	add    BYTE PTR [r8+0x1],r8b
	...
   1400170bd:	add    BYTE PTR [rax],al
   1400170bf:	add    BYTE PTR [rax],ah
   1400170c1:	inc    DWORD PTR [rcx]
   1400170c3:	rex add DWORD PTR [rax],eax
   1400170c6:	add    BYTE PTR [rax],al
   1400170c8:	jo     0x14001710b
   1400170ca:	add    BYTE PTR [rax+0x1],al
   1400170cd:	add    BYTE PTR [rax],al
   1400170cf:	add    BYTE PTR [rax],al
   1400170d1:	adc    al,0x1
   1400170d3:	rex add DWORD PTR [rax],eax
   1400170d6:	add    BYTE PTR [rax],al
   1400170d8:	add    BYTE PTR [rcx+rax*1],dl
   1400170db:	rex add DWORD PTR [rax],eax
   1400170de:	add    BYTE PTR [rax],al
   1400170e0:	add    BYTE PTR [rcx+rax*1],dl
   1400170e3:	rex add DWORD PTR [rax],eax
   1400170e6:	add    BYTE PTR [rax],al
   1400170e8:	adc    BYTE PTR [rcx+rax*1],dl
   1400170eb:	rex add DWORD PTR [rax],eax
   1400170ee:	add    BYTE PTR [rax],al
   1400170f0:	adc    BYTE PTR [rax+0x1],al
   1400170f3:	rex add DWORD PTR [rax],eax
   1400170f6:	add    BYTE PTR [rax],al
   1400170f8:	sar    BYTE PTR [rsi],0x0
   1400170fb:	rex add DWORD PTR [rax],eax
   1400170fe:	add    BYTE PTR [rax],al
   140017100:	adc    BYTE PTR [rdi],bh
   140017102:	add    BYTE PTR [rax+0x1],al
	...
   14001710d:	add    BYTE PTR [rax],al
   14001710f:	add    BYTE PTR [rax+0x14001ff],dh
   140017115:	add    BYTE PTR [rax],al
   140017117:	add    BYTE PTR [rax+0x41],dh
   14001711a:	add    BYTE PTR [rax+0x1],al
   14001711d:	add    BYTE PTR [rax],al
   14001711f:	add    BYTE PTR [rax],al
   140017121:	adc    al,0x1
   140017123:	rex add DWORD PTR [rax],eax
   140017126:	add    BYTE PTR [rax],al
   140017128:	add    BYTE PTR [rcx+rax*1],dl
   14001712b:	rex add DWORD PTR [rax],eax
   14001712e:	add    BYTE PTR [rax],al
   140017130:	add    BYTE PTR [rcx+rax*1],dl
   140017133:	rex add DWORD PTR [rax],eax
   140017136:	add    BYTE PTR [rax],al
   140017138:	adc    BYTE PTR [rcx+rax*1],dl
   14001713b:	rex add DWORD PTR [rax],eax
   14001713e:	add    BYTE PTR [rax],al
   140017140:	lock rex add DWORD PTR [rax+0x1],eax
   140017145:	add    BYTE PTR [rax],al
   140017147:	add    BYTE PTR [rax+0x3e],ah
   14001714a:	add    BYTE PTR [rax+0x1],al
   14001714d:	add    BYTE PTR [rax],al
   14001714f:	add    al,al
   140017151:	xor    DWORD PTR [rax],eax
   140017153:	rex add DWORD PTR [rax],eax
	...
   14001715e:	add    BYTE PTR [rax],al
   140017160:	add    BYTE PTR [rdx],al
   140017163:	rex add DWORD PTR [rax],eax
   140017166:	add    BYTE PTR [rax],al
   140017168:	jo     0x1400171ab
   14001716a:	add    BYTE PTR [rax+0x1],al
   14001716d:	add    BYTE PTR [rax],al
   14001716f:	add    BYTE PTR [rax],al
   140017171:	adc    al,0x1
   140017173:	rex add DWORD PTR [rax],eax
   140017176:	add    BYTE PTR [rax],al
   140017178:	add    BYTE PTR [rcx+rax*1],dl
   14001717b:	rex add DWORD PTR [rax],eax
   14001717e:	add    BYTE PTR [rax],al
   140017180:	add    BYTE PTR [rcx+rax*1],dl
   140017183:	rex add DWORD PTR [rax],eax
   140017186:	add    BYTE PTR [rax],al
   140017188:	adc    BYTE PTR [rcx+rax*1],dl
   14001718b:	rex add DWORD PTR [rax],eax
   14001718e:	add    BYTE PTR [rax],al
   140017190:	movabs al,ds:0x6000000001400141
   140017199:	add    BYTE PTR ds:[rax+0x1],al
   14001719d:	add    BYTE PTR [rax],al
   14001719f:	add    BYTE PTR [rax+0x1400030],dh
	...
   1400171ad:	add    BYTE PTR [rax],al
   1400171af:	add    al,dl
   1400171b1:	add    BYTE PTR [rdx],al
   1400171b3:	rex add DWORD PTR [rax],eax
   1400171b6:	add    BYTE PTR [rax],al
   1400171b8:	jo     0x1400171fb
   1400171ba:	add    BYTE PTR [rax+0x1],al
   1400171bd:	add    BYTE PTR [rax],al
   1400171bf:	add    BYTE PTR [rax],al
   1400171c1:	adc    al,0x1
   1400171c3:	rex add DWORD PTR [rax],eax
   1400171c6:	add    BYTE PTR [rax],al
   1400171c8:	add    BYTE PTR [rcx+rax*1],dl
   1400171cb:	rex add DWORD PTR [rax],eax
   1400171ce:	add    BYTE PTR [rax],al
   1400171d0:	add    BYTE PTR [rcx+rax*1],dl
   1400171d3:	rex add DWORD PTR [rax],eax
   1400171d6:	add    BYTE PTR [rax],al
   1400171d8:	adc    BYTE PTR [rcx+rax*1],dl
   1400171db:	rex add DWORD PTR [rax],eax
   1400171de:	add    BYTE PTR [rax],al
   1400171e0:	lock cmp eax,0x14001
   1400171e6:	add    BYTE PTR [rax],al
   1400171e8:	rol    BYTE PTR [rdx+0x0],0x40
   1400171ec:	add    DWORD PTR [rax],eax
   1400171ee:	add    BYTE PTR [rax],al
   1400171f0:	xor    BYTE PTR [rbx+0x0],al
   1400171f3:	rex add DWORD PTR [rax],eax
   1400171f6:	add    BYTE PTR [rax],al
   1400171f8:	rex.RB js 0x14001726b
   1400171fb:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140017200:	and    BYTE PTR [rcx+0x20],ah
   140017203:	jno    0x14001727a
   140017205:	(bad)  
   140017206:	ins    BYTE PTR es:[rdi],dx
   140017207:	imul   esp,DWORD PTR [rsi+0x69],0x6e206465
   14001720e:	(bad)  
   14001720f:	ins    DWORD PTR es:[rdi],dx
   140017210:	and    BYTE PTR gs:[rcx+0x64],ch
   140017214:	and    BYTE PTR [rdi+0x72],ch
   140017217:	and    BYTE PTR [rcx+0x20],ah
   14001721a:	jae    0x140017290
   14001721c:	jb     0x140017287
   14001721e:	outs   dx,BYTE PTR ds:[rsi]
   14001721f:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   140017224:	gs jb  0x140017288
   140017227:	ins    BYTE PTR es:[rdi],dx
	...
   140017230:	rex.RB js 0x1400172a3
   140017233:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140017238:	and    BYTE PTR [rcx+0x20],ah
   14001723b:	jno    0x1400172b2
   14001723d:	(bad)  
   14001723e:	ins    BYTE PTR es:[rdi],dx
   14001723f:	imul   esp,DWORD PTR [rsi+0x69],0x6e206465
   140017246:	(bad)  
   140017247:	ins    DWORD PTR es:[rdi],dx
   140017248:	and    BYTE PTR gs:[rcx+0x64],ch
   14001724c:	add    BYTE PTR [rax],al
   14001724e:	add    BYTE PTR [rax],al
   140017250:	rex.RB js 0x1400172c3
   140017253:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140017258:	and    BYTE PTR [rdi+rbp*2+0x6b],dh
   14001725c:	outs   dx,BYTE PTR gs:[rsi]
   14001725e:	and    BYTE PTR [rax+0x25],ah
   140017261:	xor    DWORD PTR [rdi],esp
   140017263:	add    BYTE PTR [rax],al
   140017265:	add    BYTE PTR [rax],al
   140017267:	add    BYTE PTR [rbx+0x79],dl
   14001726a:	outs   dx,BYTE PTR ds:[rsi]
   14001726b:	je     0x1400172ce
   14001726d:	js     0x14001728f
   14001726f:	gs jb  0x1400172e4
   140017272:	outs   dx,DWORD PTR ds:[rsi]
   140017273:	jb     0x140017275
   140017275:	add    BYTE PTR [rax],al
   140017277:	add    BYTE PTR [rcx+0x51],dl
   14001727a:	ins    DWORD PTR es:[rdi],dx
   14001727b:	ins    BYTE PTR es:[rdi],dx
   14001727c:	push   rax
   14001727d:	(bad)  
   14001727e:	jb     0x1400172f3
   140017280:	gs jb  0x140017283
   140017283:	add    BYTE PTR [rax],al
   140017285:	add    BYTE PTR [rax],al
   140017287:	add    BYTE PTR [rbp+0x6e],dl
   14001728a:	gs js  0x1400172fd
   14001728d:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140017292:	and    BYTE PTR [rdi+rbp*2+0x6b],dh
   140017296:	outs   dx,BYTE PTR gs:[rsi]
   140017298:	and    BYTE PTR [rax+0x25],ah
   14001729b:	xor    DWORD PTR [rdi],esp
   14001729d:	add    BYTE PTR [rax],al
   14001729f:	add    BYTE PTR [rcx+0x67],cl
   1400172a2:	outs   dx,BYTE PTR ds:[rsi]
   1400172a3:	outs   dx,DWORD PTR ds:[rsi]
   1400172a4:	jb     0x14001730b
   1400172a6:	and    BYTE PTR fs:[rcx+0x6e],ah
   1400172aa:	outs   dx,BYTE PTR ds:[rsi]
   1400172ab:	outs   dx,DWORD PTR ds:[rsi]
   1400172ac:	je     0x14001730f
   1400172ae:	je     0x140017319
   1400172b0:	outs   dx,DWORD PTR ds:[rsi]
   1400172b1:	outs   dx,BYTE PTR ds:[rsi]
   1400172b2:	add    BYTE PTR [rax],al
   1400172b4:	add    BYTE PTR [rax],al
   1400172b6:	add    BYTE PTR [rax],al
   1400172b8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400172ba:	imul   bp,WORD PTR [rsi+0x69],0x7974
	...
   1400172cc:	add    BYTE PTR [rax],al
   1400172ce:	lock mov edi,0x0
   1400172d4:	add    BYTE PTR [rax],al
   1400172d6:	lock (bad) 
	...
   1400172e0:	sbb    eax,0x42000000
   1400172e5:	add    BYTE PTR [rax],al
   1400172e7:	add    BYTE PTR [rbx+0x0],al
   1400172ea:	add    BYTE PTR [rax],al
   1400172ec:	add    BYTE PTR [rax],r8b
   1400172ef:	add    BYTE PTR [rsi+0x0],bl
   1400172f2:	add    BYTE PTR [rax],al
   1400172f4:	add    al,0x0
   1400172f6:	add    BYTE PTR [rax],al
   1400172f8:	add    eax,0x6000000
   1400172fd:	add    BYTE PTR [rax],al
   1400172ff:	add    BYTE PTR [rcx],cl
   140017301:	add    BYTE PTR [rax],al
   140017303:	add    BYTE PTR [rdx],cl
   140017305:	add    BYTE PTR [rax],al
   140017307:	add    BYTE PTR [rbx],cl
   140017309:	add    BYTE PTR [rax],al
   14001730b:	add    BYTE PTR [rsi],cl
   14001730d:	add    BYTE PTR [rax],al
   14001730f:	add    BYTE PTR [rax],dl
   140017311:	add    BYTE PTR [rax],al
   140017313:	add    BYTE PTR [rbx+0x0],dl
   140017316:	add    BYTE PTR [rax],al
   140017318:	adc    al,0x0
   14001731a:	add    BYTE PTR [rax],al
   14001731c:	adc    eax,0x16000000
   140017321:	add    BYTE PTR [rax],al
   140017323:	add    BYTE PTR [rsi],bl
   140017325:	add    BYTE PTR [rax],al
   140017327:	add    BYTE PTR [rdi],bl
   140017329:	add    BYTE PTR [rax],al
   14001732b:	add    BYTE PTR [rax],ah
   14001732d:	add    BYTE PTR [rax],al
   14001732f:	add    BYTE PTR [rbx],ch
   140017331:	add    BYTE PTR [rax],al
   140017333:	add    BYTE PTR [rcx+0x0],dl
   140017336:	add    BYTE PTR [rax],al
   140017338:	cmp    eax,DWORD PTR [rax]
   14001733a:	add    BYTE PTR [rax],al
   14001733c:	add    BYTE PTR [r8],r8b
   14001733f:	add    BYTE PTR [rsi+0x0],al
   140017342:	add    BYTE PTR [rax],al
   140017344:	rex.RXB add BYTE PTR [r8],r8b
   140017347:	add    BYTE PTR [rdx+0x0],dl
   14001734a:	add    BYTE PTR [rax],al
   14001734c:	rex.WB add BYTE PTR [r8],al
   14001734f:	add    BYTE PTR [rdx+0x0],cl
   140017352:	add    BYTE PTR [rax],al
   140017354:	rex.WXB add BYTE PTR [r8],al
   140017357:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001735b:	add    BYTE PTR [rbp+0x0],cl
   14001735e:	add    BYTE PTR [rax],al
   140017360:	push   rsp
   140017361:	add    BYTE PTR [rax],al
   140017363:	add    BYTE PTR [rbp+0x0],dl
   140017366:	add    BYTE PTR [rax],al
   140017368:	push   rsi
   140017369:	add    BYTE PTR [rax],al
   14001736b:	add    BYTE PTR [rsi+0x0],cl
	...
   140017376:	add    BYTE PTR [rax],al
   140017378:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001737a:	jbe    0x1400173dd
   14001737c:	ins    BYTE PTR es:[rdi],dx
   14001737d:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x6c756765
   140017385:	(bad)  
   140017386:	jb     0x1400173a8
   140017388:	gs js  0x1400173fb
   14001738b:	jb     0x1400173f2
   14001738d:	jae    0x140017402
   14001738f:	imul   ebp,DWORD PTR [rdi+0x6e],0x616c6620
   140017396:	and    BYTE PTR [edi],ah
   140017399:	and    eax,0x2730
   14001739e:	add    BYTE PTR [rax],al
   1400173a0:	push   rbp
   1400173a1:	outs   dx,BYTE PTR ds:[rsi]
   1400173a2:	je     0x140017409
   1400173a4:	jb     0x140017413
   1400173a6:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
   1400173ad:	jb     0x140017414
   1400173af:	addr32 jne 0x14001741e
   1400173b2:	(bad)  
   1400173b3:	jb     0x1400173d5
   1400173b5:	gs js  0x140017428
   1400173b8:	jb     0x14001741f
   1400173ba:	jae    0x14001742f
   1400173bc:	imul   ebp,DWORD PTR [rdi+0x6e],0x616c6320
   1400173c3:	jae    0x140017438
   1400173c5:	add    BYTE PTR [rax],al
   1400173c7:	add    BYTE PTR [rbp+0x6e],dl
   1400173ca:	je     0x140017431
   1400173cc:	jb     0x14001743b
   1400173ce:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
   1400173d5:	jb     0x14001743c
   1400173d7:	addr32 jne 0x140017446
   1400173da:	(bad)  
   1400173db:	jb     0x1400173fd
   1400173dd:	gs js  0x140017450
   1400173e0:	jb     0x140017447
   1400173e2:	jae    0x140017457
   1400173e4:	imul   ebp,DWORD PTR [rdi+0x6e],0x63616220
   1400173eb:	imul   esi,DWORD PTR [rbx+0x6c],0x61
   1400173ef:	jae    0x140017459
   1400173f1:	and    BYTE PTR [rbx+0x65],dh
   1400173f4:	jno    0x14001746b
   1400173f6:	outs   dx,BYTE PTR gs:[rsi]
   1400173f8:	movsxd esp,DWORD PTR [rbp+0x0]
   1400173fb:	add    BYTE PTR [rax],al
   1400173fd:	add    BYTE PTR [rax],al
   1400173ff:	add    BYTE PTR [rbp+0x6e],dl
   140017402:	je     0x140017469
   140017404:	jb     0x140017473
   140017406:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
   14001740d:	jb     0x140017474
   14001740f:	addr32 jne 0x14001747e
   140017412:	(bad)  
   140017413:	jb     0x140017435
   140017415:	gs js  0x140017488
   140017418:	jb     0x14001747f
   14001741a:	jae    0x14001748f
   14001741c:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696c20
   140017423:	gs jb  0x140017487
   140017426:	ins    BYTE PTR es:[rdi],dx
   140017427:	add    BYTE PTR [rcx+0x6c],cl
   14001742a:	ins    BYTE PTR es:[rdi],dx
   14001742b:	gs addr32 (bad) 
   14001742e:	ins    BYTE PTR es:[rdi],dx
   14001742f:	and    BYTE PTR [rbx+0x79],dh
   140017432:	outs   dx,BYTE PTR ds:[rsi]
   140017433:	je     0x140017496
   140017435:	js     0x140017457
   140017437:	outs   dx,WORD PTR ds:[rsi]
   140017439:	jb     0x14001745b
   14001743b:	gs js  0x1400174ae
   14001743e:	outs   dx,DWORD PTR ds:[rsi]
   14001743f:	outs   dx,BYTE PTR ds:[rsi]
   140017440:	outs   dx,BYTE PTR gs:[rsi]
   140017442:	je     0x1400174ad
   140017444:	(bad)  
   140017445:	ins    BYTE PTR es:[rdi],dx
   140017446:	and    BYTE PTR [rsi+0x75],ch
   140017449:	ins    DWORD PTR es:[rdi],dx
   14001744a:	(bad)  
   14001744b:	gs jb  0x14001744e
   14001744e:	add    BYTE PTR [rax],al
   140017450:	rex.B je 0x140017473
   140017453:	ins    BYTE PTR es:[rdi],dx
   140017454:	gs (bad) 
   140017456:	jae    0x1400174cc
   140017458:	and    BYTE PTR [rdi+0x6e],ch
   14001745b:	and    BYTE PTR gs:[rax+0x65],ch
   14001745f:	js     0x1400174c2
   140017461:	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
   140017466:	(bad)  
   140017467:	ins    BYTE PTR es:[rdi],dx
   140017468:	and    BYTE PTR [rcx+rbp*2+0x67],ah
   14001746c:	imul   esi,DWORD PTR [rax+riz*1+0x69],0x65722073
   140017474:	jno    0x1400174eb
   140017476:	imul   esi,DWORD PTR [rdx+0x65],0x66612064
   14001747d:	je     0x1400174e4
   14001747f:	jb     0x1400174a1
   140017481:	(bad)  
   140017482:	xor    BYTE PTR [rip+0x2731],ah        # 0x140019bb9
   140017488:	rex.R
   140017489:	movsxd ebp,DWORD PTR gs:[rcx+0x6d]
   14001748d:	(bad)  
   14001748e:	ins    BYTE PTR es:[rdi],dx
   14001748f:	and    BYTE PTR [rsi+0x75],ch
   140017492:	ins    DWORD PTR es:[rdi],dx
   140017493:	(bad)  
   140017494:	gs jb  0x14001750a
   140017497:	and    BYTE PTR [rbx+0x61],ah
   14001749a:	outs   dx,BYTE PTR ds:[rsi]
   14001749b:	(bad)  
   14001749c:	je     0x1400174be
   14001749e:	jae    0x140017514
   1400174a0:	(bad)  
   1400174a1:	jb     0x140017517
   1400174a3:	and    BYTE PTR [rdi+0x69],dh
   1400174a6:	je     0x140017510
   1400174a8:	and    BYTE PTR [rdi],ah
   1400174aa:	xor    BYTE PTR [rdi],ah
   1400174ac:	add    BYTE PTR [rax],al
   1400174ae:	add    BYTE PTR [rax],al
   1400174b0:	movsxd r14,DWORD PTR [r9+r12*2+0x6c]
   1400174b5:	and    BYTE PTR [rbp+0x73],ah
   1400174b8:	movsxd esp,DWORD PTR [rcx+0x70]
   1400174bb:	and    BYTE PTR gs:[rbx+0x65],dh
   1400174bf:	jno    0x140017536
   1400174c1:	outs   dx,BYTE PTR gs:[rsi]
   1400174c3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400174c6:	and    BYTE PTR [rcx+0x72],ah
   1400174c9:	and    BYTE PTR gs:[rsi+0x6f],ch
   1400174cd:	je     0x1400174ef
   1400174cf:	(bad)  
   1400174d0:	ins    BYTE PTR es:[rdi],dx
   1400174d1:	ins    BYTE PTR es:[rdi],dx
   1400174d2:	outs   dx,DWORD PTR ds:[rsi]
   1400174d3:	ja     0x14001753a
   1400174d5:	add    BYTE PTR fs:[rax],al
   1400174d8:	push   rbp
   1400174d9:	outs   dx,BYTE PTR ds:[rsi]
   1400174da:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   1400174de:	gs and BYTE PTR fs:[rbx+0x74],dh
   1400174e3:	jb     0x14001754e
   1400174e5:	outs   dx,BYTE PTR ds:[rsi]
   1400174e6:	and    BYTE PTR [ecx+0x74],ah
   1400174ea:	and    BYTE PTR [rbp+0x6e],ah
   1400174ed:	and    BYTE PTR fs:[rdi+0x66],ch
   1400174f1:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   1400174f5:	add    BYTE PTR gs:[rax],al
   1400174f8:	rex.WB ins BYTE PTR es:[rdi],dx
   1400174fa:	ins    BYTE PTR es:[rdi],dx
   1400174fb:	gs addr32 (bad) 
   1400174fe:	ins    BYTE PTR es:[rdi],dx
   1400174ff:	and    BYTE PTR [rax+0x65],ch
   140017502:	js     0x140017565
   140017504:	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
   140017509:	(bad)  
   14001750a:	ins    BYTE PTR es:[rdi],dx
   14001750b:	and    BYTE PTR [rbp+0x73],ah
   14001750e:	movsxd esp,DWORD PTR [rcx+0x70]
   140017511:	and    BYTE PTR gs:[rbx+0x65],dh
   140017515:	jno    0x14001758c
   140017517:	outs   dx,BYTE PTR gs:[rsi]
   140017519:	movsxd esp,DWORD PTR [rbp+0x0]
   14001751c:	add    BYTE PTR [rax],al
   14001751e:	add    BYTE PTR [rax],al
   140017520:	rex.WB ins BYTE PTR es:[rdi],dx
   140017522:	ins    BYTE PTR es:[rdi],dx
   140017523:	gs addr32 (bad) 
   140017526:	ins    BYTE PTR es:[rdi],dx
   140017527:	and    BYTE PTR [rbp+0x6e],dh
   14001752a:	imul   esp,DWORD PTR [rbx+0x6f],0x65206564
   140017531:	jae    0x140017596
   140017533:	(bad)  
   140017534:	jo     0x14001759b
   140017536:	and    BYTE PTR [rbx+0x65],dh
   140017539:	jno    0x1400175b0
   14001753b:	outs   dx,BYTE PTR gs:[rsi]
   14001753d:	movsxd esp,DWORD PTR [rbp+0x0]
   140017540:	push   rbx
   140017541:	je     0x1400175b5
   140017543:	(bad)  
   140017544:	jns    0x140017566
   140017546:	outs   dx,BYTE PTR ds:[rsi]
   140017547:	gs ja  0x1400175b6
   14001754a:	imul   ebp,DWORD PTR [rsi+0x65],0x206e6920
   140017551:	jae    0x1400175c7
   140017553:	jb     0x1400175be
   140017555:	outs   dx,BYTE PTR ds:[rsi]
   140017556:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   14001755b:	gs jb  0x1400175bf
   14001755e:	ins    BYTE PTR es:[rdi],dx
   14001755f:	add    BYTE PTR [rbp+0x6f],cl
   140017562:	fs jne 0x1400175d1
   140017565:	and    BYTE PTR gs:[rcx+0x6d],ch
   140017569:	jo     0x1400175da
   14001756b:	jb     0x1400175e1
   14001756d:	and    BYTE PTR [rdx+0x65],dh
   140017570:	jno    0x1400175e7
   140017572:	imul   esi,DWORD PTR [rdx+0x65],0x20612073
   140017579:	jno    0x1400175f0
   14001757b:	(bad)  
   14001757c:	ins    BYTE PTR es:[rdi],dx
   14001757d:	imul   esp,DWORD PTR [rsi+0x69],0x7265
   140017584:	add    BYTE PTR [rax],al
   140017586:	add    BYTE PTR [rax],al
   140017588:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x6f706d69
   140017591:	jb     0x140017607
   140017593:	and    BYTE PTR [rdx+0x65],dh
   140017596:	jno    0x14001760d
   140017598:	imul   esi,DWORD PTR [rdx+0x65],0x20612073
   14001759f:	jno    0x140017616
   1400175a1:	(bad)  
   1400175a2:	ins    BYTE PTR es:[rdi],dx
   1400175a3:	imul   esp,DWORD PTR [rsi+0x69],0x7265
   1400175aa:	add    BYTE PTR [rax],al
   1400175ac:	add    BYTE PTR [rax],al
   1400175ae:	add    BYTE PTR [rax],al
   1400175b0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400175b2:	jbe    0x140017615
   1400175b4:	ins    BYTE PTR es:[rdi],dx
   1400175b5:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x726f706d
   1400175bd:	je     0x1400175df
   1400175bf:	jno    0x140017636
   1400175c1:	(bad)  
   1400175c2:	ins    BYTE PTR es:[rdi],dx
   1400175c3:	imul   esp,DWORD PTR [rsi+0x69],0x7265
   1400175ca:	add    BYTE PTR [rax],al
   1400175cc:	add    BYTE PTR [rax],al
   1400175ce:	add    BYTE PTR [rax],al
   1400175d0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400175d2:	fs jne 0x140017641
   1400175d5:	and    BYTE PTR gs:[rcx+0x6d],ch
   1400175d9:	jo     0x14001764a
   1400175db:	jb     0x140017651
   1400175dd:	and    BYTE PTR [rdx+0x65],dh
   1400175e0:	jno    0x140017657
   1400175e2:	imul   esi,DWORD PTR [rdx+0x65],0x20612073
   1400175e9:	jbe    0x140017650
   1400175eb:	jb     0x140017660
   1400175ed:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   1400175f4:	(bad)  
   1400175f5:	jae    0x1400175f7
   1400175f7:	add    BYTE PTR [rcx+0x6e],cl
   1400175fa:	jbe    0x14001765d
   1400175fc:	ins    BYTE PTR es:[rdi],dx
   1400175fd:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x6c75646f
   140017605:	and    BYTE PTR gs:[rbp+0x52],dl
   140017609:	rex.WB add BYTE PTR [r8],al
   14001760c:	add    BYTE PTR [rax],al
   14001760e:	add    BYTE PTR [rax],al
   140017610:	rex.WB ins DWORD PTR es:[rdi],dx
   140017612:	jo     0x140017683
   140017614:	jb     0x14001768a
   140017616:	gs and BYTE PTR fs:[rsi+0x69],ah
   14001761b:	ins    BYTE PTR es:[rdi],dx
   14001761c:	and    BYTE PTR gs:[rbp+0x75],ch
   140017620:	jae    0x140017696
   140017622:	and    BYTE PTR [rdx+0x65],ah
   140017625:	and    BYTE PTR [rcx+0x20],ah
   140017628:	jae    0x14001768d
   14001762a:	jb     0x140017695
   14001762c:	jo     0x1400176a2
   14001762e:	add    BYTE PTR [rax],al
   140017630:	ins    BYTE PTR es:[rdi],dx
   140017631:	imul   esp,DWORD PTR [rdx+0x72],0x797261
   140017638:	imul   ebp,DWORD PTR [rbp+0x70],0x74726f
   14001763f:	add    BYTE PTR [rax+0x72],dh
   140017642:	(bad)  
   140017643:	ins    DWORD PTR es:[edi],dx
   140017645:	(bad)  
   140017646:	add    BYTE PTR [rax],al
   140017648:	jae    0x1400176af
   14001764a:	je     0x14001764c
   14001764c:	addr32 gs je 0x140017650
   140017650:	outs   dx,DWORD PTR ds:[rsi]
   140017651:	outs   dx,BYTE PTR ds:[rsi]
   140017652:	add    BYTE PTR [rax],al
   140017654:	jo     0x1400176cb
   140017656:	(bad)  
   140017657:	ins    BYTE PTR es:[rdi],dx
   140017658:	imul   esp,DWORD PTR [rbx+0x0],0x0
   14001765f:	add    BYTE PTR [rbx+0x6f],ah
   140017662:	ins    DWORD PTR es:[rdi],dx
   140017663:	ins    DWORD PTR es:[rdi],dx
   140017664:	outs   dx,BYTE PTR gs:[rsi]
   140017666:	je     0x140017668
   140017668:	ins    DWORD PTR es:[rdi],dx
   140017669:	jne    0x1400176d7
   14001766b:	je     0x1400176d6
   14001766d:	ins    BYTE PTR es:[rdi],dx
   14001766e:	imul   ebp,DWORD PTR [rsi+0x65],0x72747320
   140017675:	imul   ebp,DWORD PTR [rsi+0x67],0x74696c20
   14001767c:	gs jb  0x1400176e0
   14001767f:	ins    BYTE PTR es:[rdi],dx
	...
   140017688:	jb     0x1400176ef
   14001768a:	jae    0x1400176f1
   14001768c:	jb     0x140017704
   14001768e:	gs and BYTE PTR fs:[rdi+0x6f],dh
   140017693:	jb     0x1400176f9
   140017695:	add    BYTE PTR [rax],al
   140017697:	add    BYTE PTR [rbp+riz*2+0x62],ah
   14001769b:	jne    0x140017704
   14001769d:	addr32 gs jb 0x1400176a1
   1400176a1:	add    BYTE PTR [rax],al
   1400176a3:	add    BYTE PTR [rbx+0x6f],ah
   1400176a6:	outs   dx,BYTE PTR ds:[rsi]
   1400176a7:	jae    0x14001771d
   1400176a9:	add    BYTE PTR [rax],al
   1400176ab:	add    BYTE PTR [rsi+0x61],ah
   1400176ae:	ins    BYTE PTR es:[rdi],dx
   1400176af:	jae    0x140017716
   1400176b1:	add    BYTE PTR [rax],al
   1400176b3:	add    BYTE PTR [rdx+rsi*2+0x75],dh
   1400176b7:	add    BYTE PTR gs:[rax],al
   1400176ba:	add    BYTE PTR [rax],al
   1400176bc:	outs   dx,BYTE PTR ds:[rsi]
   1400176bd:	jne    0x14001772b
   1400176bf:	ins    BYTE PTR es:[rdi],dx
   1400176c0:	add    BYTE PTR [rax],al
   1400176c2:	add    BYTE PTR [rax],al
   1400176c4:	pop    rsi
   1400176c5:	cmp    eax,0x5e0000
   1400176ca:	add    BYTE PTR [rax],al
   1400176cc:	ja     0x140017737
   1400176ce:	je     0x140017738
   1400176d0:	add    BYTE PTR [rax],al
   1400176d2:	add    BYTE PTR [rax],al
   1400176d4:	ja     0x14001773e
   1400176d6:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x6f760000
   1400176de:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x61760000
   1400176e6:	jb     0x1400176e8
   1400176e8:	je     0x140017763
   1400176ea:	jo     0x140017751
   1400176ec:	outs   dx,DWORD PTR ds:[rsi]
   1400176ed:	data16 add BYTE PTR [rax],al
   1400176f0:	je     0x140017764
   1400176f2:	jns    0x1400176f4
   1400176f4:	jle    0x1400176f6
   1400176f6:	add    BYTE PTR [rax],al
   1400176f8:	je     0x140017762
   1400176fa:	jb     0x14001776b
   1400176fc:	ja     0x1400176fe
   1400176fe:	add    BYTE PTR [rax],al
   140017700:	je     0x14001776a
   140017702:	imul   esi,DWORD PTR [rbx+0x0],0x73000000
   140017709:	ja     0x140017774
   14001770b:	je     0x140017770
   14001770d:	push   0x65720000
   140017712:	(bad)  
   140017713:	outs   dx,DWORD PTR fs:[rsi]
   140017715:	outs   dx,BYTE PTR ds:[rsi]
   140017716:	ins    BYTE PTR es:[rdi],dx
   140017717:	jns    0x140017719
   140017719:	add    BYTE PTR [rax],al
   14001771b:	add    BYTE PTR [rbx+0x69],dh
   14001771e:	outs   dx,BYTE PTR ds:[esi]
   140017720:	(bad)  
   140017721:	ins    BYTE PTR es:[rdi],dx
   140017722:	add    BYTE PTR [rax],al
   140017724:	add    BYTE PTR [rax],al
   140017726:	add    BYTE PTR [rax],al
   140017728:	jo     0x14001779c
   14001772a:	outs   dx,DWORD PTR ds:[rsi]
   14001772b:	jo     0x140017792
   14001772d:	jb     0x1400177a3
   14001772f:	jns    0x140017731
   140017731:	add    BYTE PTR [rax],al
   140017733:	add    BYTE PTR [rax],al
   140017735:	add    BYTE PTR [rax],al
   140017737:	add    BYTE PTR [rbx+0x74],dh
   14001773a:	jb     0x1400177a5
   14001773c:	outs   dx,BYTE PTR ds:[rsi]
   14001773d:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   140017742:	gs jb  0x1400177a6
   140017745:	ins    BYTE PTR es:[rdi],dx
   140017746:	add    BYTE PTR [rax],al
   140017748:	sub    bh,BYTE PTR [rip+0x2a0000]        # 0x1402b774e
   14001774e:	add    BYTE PTR [rax],al
   140017750:	cmp    eax,DWORD PTR [rax]
   140017752:	add    BYTE PTR [rax],al
   140017754:	sub    DWORD PTR [rax],eax
   140017756:	add    BYTE PTR [rax],al
   140017758:	jb     0x1400177bf
   14001775a:	je     0x1400177d1
   14001775c:	jb     0x1400177cc
   14001775e:	add    BYTE PTR [rax],al
   140017760:	and    eax,0x2500003d
   140017765:	add    BYTE PTR [rax],al
   140017767:	add    BYTE PTR [rbp+0x0],bl
   14001776a:	add    BYTE PTR [rax],al
   14001776c:	jge    0x14001776e
   14001776e:	add    BYTE PTR [rax],al
   140017770:	(bad)  
   140017771:	add    BYTE PTR [rax],al
   140017773:	add    BYTE PTR [rbx],ch
   140017775:	sub    eax,DWORD PTR [rax]
   140017777:	add    BYTE PTR [rbx],ch
   140017779:	cmp    eax,0x2b0000
   14001777e:	add    BYTE PTR [rax],al
   140017780:	jl     0x1400177fe
   140017782:	add    BYTE PTR [rax],al
   140017784:	jl     0x1400177c3
   140017786:	add    BYTE PTR [rax],al
   140017788:	jl     0x14001778a
   14001778a:	add    BYTE PTR [rax],al
   14001778c:	add    BYTE PTR [rax],al
   14001778e:	add    BYTE PTR [rax],al
   140017790:	outs   dx,BYTE PTR ds:[rsi]
   140017791:	jne    0x140017800
   140017793:	gs jb  0x1400177ff
   140017796:	movsxd esp,DWORD PTR [rax]
   140017798:	ins    BYTE PTR es:[rdi],dx
   140017799:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x21006c61
   1400177a1:	cmp    eax,0x3d21003d
   1400177a6:	add    BYTE PTR [rax],al
   1400177a8:	and    DWORD PTR [rax],eax
   1400177aa:	add    BYTE PTR [rax],al
   1400177ac:	outs   dx,BYTE PTR ds:[rsi]
   1400177ad:	gs ja  0x1400177b0
   1400177b0:	sub    eax,0x2d00002d
   1400177b5:	cmp    eax,0x2d0000
   1400177ba:	add    BYTE PTR [rax],al
   1400177bc:	cmp    al,0x3c
   1400177be:	cmp    eax,0x3c3c00
   1400177c3:	add    BYTE PTR [rax+rax*1],bh
   1400177c6:	add    BYTE PTR [rax],al
   1400177c8:	sub    BYTE PTR [rax],al
   1400177ca:	add    BYTE PTR [rax],al
   1400177cc:	cmp    al,0x3d
   1400177ce:	add    BYTE PTR [rax],al
   1400177d0:	pop    rbx
   1400177d1:	add    BYTE PTR [rax],al
   1400177d3:	add    BYTE PTR [rbx+0x0],bh
   1400177d6:	add    BYTE PTR [rax],al
   1400177d8:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
   1400177df:	outs   dx,DWORD PTR gs:[rsi]
   1400177e1:	data16 add BYTE PTR [rax],al
   1400177e4:	imul   ebp,DWORD PTR [rsi+0x0],0x666900
   1400177eb:	add    BYTE PTR [rax],al
   1400177ed:	add    BYTE PTR [rax],al
   1400177ef:	add    BYTE PTR [rcx+0x64],ch
   1400177f2:	outs   dx,BYTE PTR gs:[rsi]
   1400177f4:	je     0x14001785f
   1400177f6:	imul   sp,WORD PTR [rbp+0x72],0x0
   1400177fc:	ds ds ds cmp eax,0x0
   140017804:	ds ds add BYTE PTR ds:[rsi],bh
   140017809:	ds cmp eax,0x3e3e00
   14001780f:	add    BYTE PTR [rsi],bh
   140017811:	add    BYTE PTR [rax],al
   140017813:	add    BYTE PTR [rsi],bh
   140017815:	cmp    eax,0x75660000
   14001781a:	outs   dx,BYTE PTR ds:[rsi]
   14001781b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001781f:	outs   dx,BYTE PTR ds:[rsi]
   140017820:	add    BYTE PTR [rax],al
   140017822:	add    BYTE PTR [rax],al
   140017824:	outs   dx,WORD PTR ds:[rsi]
   140017826:	jb     0x140017828
   140017828:	imul   bp,WORD PTR [rsi+0x61],0x6c6c
   14001782e:	jns    0x140017830
   140017830:	cmp    eax,0x3d003d3d
   140017835:	cmp    eax,0x3d0000
   14001783a:	add    BYTE PTR [rax],al
   14001783c:	gs ins BYTE PTR es:[rdi],dx
   14001783e:	jae    0x1400178a5
   140017840:	add    BYTE PTR [rax],al
   140017842:	add    BYTE PTR [rax],al
   140017844:	add    BYTE PTR cs:[rax],al
   140017847:	add    BYTE PTR [rdi+rbp*2+0x0],ah
   14001784b:	add    BYTE PTR [rdi],ch
   14001784d:	cmp    eax,0x2f0000
   140017852:	add    BYTE PTR [rax],al
   140017854:	fs gs ins BYTE PTR es:[rdi],dx
   140017857:	gs je  0x1400178bf
   14001785a:	add    BYTE PTR [rax],al
   14001785c:	add    BYTE PTR [rax],al
   14001785e:	add    BYTE PTR [rax],al
   140017860:	fs gs data16 (bad) 
   140017864:	jne    0x1400178d2
   140017866:	je     0x140017868
   140017868:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001786b:	je     0x1400178d6
   14001786d:	outs   dx,BYTE PTR ds:[rsi]
   14001786e:	jne    0x1400178d5
   140017870:	add    BYTE PTR [rax],al
   140017872:	add    BYTE PTR [rax],al
   140017874:	sub    al,0x0
   140017876:	add    BYTE PTR [rax],al
   140017878:	cmp    al,BYTE PTR [rax]
   14001787a:	add    BYTE PTR [rax],al
   14001787c:	movsxd esp,DWORD PTR [rcx+0x74]
   14001787f:	movsxd ebp,DWORD PTR [rax+0x0]
   140017882:	add    BYTE PTR [rax],al
   140017884:	movsxd esp,DWORD PTR [rcx+0x73]
   140017887:	add    BYTE PTR gs:[rax],al
   14001788a:	add    BYTE PTR [rax],al
   14001788c:	(bad)
   140017891:	add    BYTE PTR [rax],al
   140017893:	add    BYTE PTR [rsi],ah
   140017895:	cmp    eax,0x26260000
   14001789a:	add    BYTE PTR [rax],al
   14001789c:	add    BYTE PTR es:[rax],al
   14001789f:	add    BYTE PTR [rbp+0x6e],ah
   1400178a2:	and    BYTE PTR fs:[rdi+0x66],ch
   1400178a6:	and    BYTE PTR [rsi+0x69],ah
   1400178a9:	ins    BYTE PTR es:[rdi],dx
   1400178aa:	add    BYTE PTR gs:[rax],al
   1400178ad:	add    BYTE PTR [rax],al
   1400178af:	add    BYTE PTR [rax+0x1400178],ah
   1400178b5:	add    BYTE PTR [rax],al
   1400178b7:	add    BYTE PTR [rax+rdi*2+0x14001],bl
   1400178be:	add    BYTE PTR [rax],al
   1400178c0:	cwde   
   1400178c1:	js     0x1400178c4
   1400178c3:	rex add DWORD PTR [rax],eax
   1400178c6:	add    BYTE PTR [rax],al
   1400178c8:	xchg   esp,eax
   1400178c9:	js     0x1400178cc
   1400178cb:	rex add DWORD PTR [rax],eax
   1400178ce:	add    BYTE PTR [rax],al
   1400178d0:	mov    WORD PTR [rax+0x1],?
   1400178d3:	rex add DWORD PTR [rax],eax
   1400178d6:	add    BYTE PTR [rax],al
   1400178d8:	test   BYTE PTR [rax+0x1],bh
   1400178db:	rex add DWORD PTR [rax],eax
   1400178de:	add    BYTE PTR [rax],al
   1400178e0:	jl     0x14001795a
   1400178e2:	add    DWORD PTR [rax+0x1],eax
   1400178e5:	add    BYTE PTR [rax],al
   1400178e7:	add    BYTE PTR [rax+0x78],bh
   1400178ea:	add    DWORD PTR [rax+0x1],eax
   1400178ed:	add    BYTE PTR [rax],al
   1400178ef:	add    BYTE PTR [rax+rdi*2+0x1],dh
   1400178f3:	rex add DWORD PTR [rax],eax
   1400178f6:	add    BYTE PTR [rax],al
   1400178f8:	push   0x1400178
   1400178fd:	add    BYTE PTR [rax],al
   1400178ff:	add    BYTE PTR [rax+0x78],ah
   140017902:	add    DWORD PTR [rax+0x1],eax
   140017905:	add    BYTE PTR [rax],al
   140017907:	add    BYTE PTR [rax+rdi*2+0x1],dl
   14001790b:	rex add DWORD PTR [rax],eax
   14001790e:	add    BYTE PTR [rax],al
   140017910:	push   rax
   140017911:	js     0x140017914
   140017913:	rex add DWORD PTR [rax],eax
   140017916:	add    BYTE PTR [rax],al
   140017918:	rex.WR js 0x14001791c
   14001791b:	rex add DWORD PTR [rax],eax
   14001791e:	add    BYTE PTR [rax],al
   140017920:	rex.W js 0x140017924
   140017923:	rex add DWORD PTR [rax],eax
   140017926:	add    BYTE PTR [rax],al
   140017928:	rex.R js 0x14001792c
   14001792b:	rex add DWORD PTR [rax],eax
   14001792e:	add    BYTE PTR [rax],al
   140017930:	cmp    al,0x78
   140017932:	add    DWORD PTR [rax+0x1],eax
   140017935:	add    BYTE PTR [rax],al
   140017937:	add    BYTE PTR [rax],bh
   140017939:	js     0x14001793c
   14001793b:	rex add DWORD PTR [rax],eax
   14001793e:	add    BYTE PTR [rax],al
   140017940:	xor    al,0x78
   140017942:	add    DWORD PTR [rax+0x1],eax
   140017945:	add    BYTE PTR [rax],al
   140017947:	add    BYTE PTR [rax],dh
   140017949:	js     0x14001794c
   14001794b:	rex add DWORD PTR [rax],eax
   14001794e:	add    BYTE PTR [rax],al
   140017950:	sub    BYTE PTR [rax+0x1],bh
   140017953:	rex add DWORD PTR [rax],eax
   140017956:	add    BYTE PTR [rax],al
   140017958:	and    al,0x78
   14001795a:	add    DWORD PTR [rax+0x1],eax
   14001795d:	add    BYTE PTR [rax],al
   14001795f:	add    BYTE PTR [rax],bl
   140017961:	js     0x140017964
   140017963:	rex add DWORD PTR [rax],eax
   140017966:	add    BYTE PTR [rax],al
   140017968:	adc    al,0x78
   14001796a:	add    DWORD PTR [rax+0x1],eax
   14001796d:	add    BYTE PTR [rax],al
   14001796f:	add    BYTE PTR [rax],dl
   140017971:	js     0x140017974
   140017973:	rex add DWORD PTR [rax],eax
   140017976:	add    BYTE PTR [rax],al
   140017978:	or     al,0x78
   14001797a:	add    DWORD PTR [rax+0x1],eax
   14001797d:	add    BYTE PTR [rax],al
   14001797f:	add    BYTE PTR [rax],cl
   140017981:	js     0x140017984
   140017983:	rex add DWORD PTR [rax],eax
   140017986:	add    BYTE PTR [rax],al
   140017988:	add    al,0x78
   14001798a:	add    DWORD PTR [rax+0x1],eax
   14001798d:	add    BYTE PTR [rax],al
   14001798f:	add    ah,bh
   140017991:	ja     0x140017994
   140017993:	rex add DWORD PTR [rax],eax
   140017996:	add    BYTE PTR [rax],al
   140017998:	lock ja 0x14001799c
   14001799b:	rex add DWORD PTR [rax],eax
   14001799e:	add    BYTE PTR [rax],al
   1400179a0:	call   0x141417b1c
   1400179a5:	add    BYTE PTR [rax],al
   1400179a7:	add    ah,ah
   1400179a9:	ja     0x1400179ac
   1400179ab:	rex add DWORD PTR [rax],eax
   1400179ae:	add    BYTE PTR [rax],al
   1400179b0:	fdiv   DWORD PTR [rdi+0x1]
   1400179b3:	rex add DWORD PTR [rax],eax
   1400179b6:	add    BYTE PTR [rax],al
   1400179b8:	(bad)  
   1400179b9:	ja     0x1400179bc
   1400179bb:	rex add DWORD PTR [rax],eax
   1400179be:	add    BYTE PTR [rax],al
   1400179c0:	shl    BYTE PTR [rdi+0x1],1
   1400179c3:	rex add DWORD PTR [rax],eax
   1400179c6:	add    BYTE PTR [rax],al
   1400179c8:	int3   
   1400179c9:	ja     0x1400179cc
   1400179cb:	rex add DWORD PTR [rax],eax
   1400179ce:	add    BYTE PTR [rax],al
   1400179d0:	enter  0x177,0x40
   1400179d4:	add    DWORD PTR [rax],eax
   1400179d6:	add    BYTE PTR [rax],al
   1400179d8:	(bad)  
   1400179d9:	ja     0x1400179dc
   1400179db:	rex add DWORD PTR [rax],eax
   1400179de:	add    BYTE PTR [rax],al
   1400179e0:	shl    BYTE PTR [rdi+0x1],0x40
   1400179e4:	add    DWORD PTR [rax],eax
   1400179e6:	add    BYTE PTR [rax],al
   1400179e8:	mov    esp,0x1400177
   1400179ed:	add    BYTE PTR [rax],al
   1400179ef:	add    BYTE PTR [rax+0x1400177],bh
   1400179f5:	add    BYTE PTR [rax],al
   1400179f7:	add    BYTE PTR [rdi+rsi*2+0x14001],dh
   1400179fe:	add    BYTE PTR [rax],al
   140017a00:	mov    al,0x77
   140017a02:	add    DWORD PTR [rax+0x1],eax
   140017a05:	add    BYTE PTR [rax],al
   140017a07:	add    BYTE PTR [rdi+rsi*2+0x14001],ch
   140017a0e:	add    BYTE PTR [rax],al
   140017a10:	test   al,0x77
   140017a12:	add    DWORD PTR [rax+0x1],eax
   140017a15:	add    BYTE PTR [rax],al
   140017a17:	add    BYTE PTR [rdi+rsi*2+0x14001],ah
   140017a1e:	add    BYTE PTR [rax],al
   140017a20:	movabs al,ds:0x9000000001400177
   140017a29:	ja     0x140017a2c
   140017a2b:	rex add DWORD PTR [rax],eax
   140017a2e:	add    BYTE PTR [rax],al
   140017a30:	mov    BYTE PTR [rdi+0x1],dh
   140017a33:	rex add DWORD PTR [rax],eax
   140017a36:	add    BYTE PTR [rax],al
   140017a38:	test   BYTE PTR [rdi+0x1],dh
   140017a3b:	rex add DWORD PTR [rax],eax
   140017a3e:	add    BYTE PTR [rax],al
   140017a40:	xor    BYTE PTR [rdi+0x1],0x40
   140017a44:	add    DWORD PTR [rax],eax
   140017a46:	add    BYTE PTR [rax],al
   140017a48:	jl     0x140017ac1
   140017a4a:	add    DWORD PTR [rax+0x1],eax
   140017a4d:	add    BYTE PTR [rax],al
   140017a4f:	add    BYTE PTR [rax+0x77],bh
   140017a52:	add    DWORD PTR [rax+0x1],eax
   140017a55:	add    BYTE PTR [rax],al
   140017a57:	add    BYTE PTR [rdi+rsi*2+0x1],dh
   140017a5b:	rex add DWORD PTR [rax],eax
   140017a5e:	add    BYTE PTR [rax],al
   140017a60:	jo     0x140017ad9
   140017a62:	add    DWORD PTR [rax+0x1],eax
   140017a65:	add    BYTE PTR [rax],al
   140017a67:	add    BYTE PTR [rdi+rsi*2+0x1],ch
   140017a6b:	rex add DWORD PTR [rax],eax
   140017a6e:	add    BYTE PTR [rax],al
   140017a70:	push   0x1400177
   140017a75:	add    BYTE PTR [rax],al
   140017a77:	add    BYTE PTR [rdi+rsi*2+0x1],ah
   140017a7b:	rex add DWORD PTR [rax],eax
   140017a7e:	add    BYTE PTR [rax],al
   140017a80:	(bad)  
   140017a81:	ja     0x140017a84
   140017a83:	rex add DWORD PTR [rax],eax
   140017a86:	add    BYTE PTR [rax],al
   140017a88:	pop    rax
   140017a89:	ja     0x140017a8c
   140017a8b:	rex add DWORD PTR [rax],eax
   140017a8e:	add    BYTE PTR [rax],al
   140017a90:	push   rsp
   140017a91:	ja     0x140017a94
   140017a93:	rex add DWORD PTR [rax],eax
   140017a96:	add    BYTE PTR [rax],al
   140017a98:	push   rax
   140017a99:	ja     0x140017a9c
   140017a9b:	rex add DWORD PTR [rax],eax
	...
   140017aa6:	add    BYTE PTR [rax],al
   140017aa8:	rex.WR ja 0x140017aac
   140017aab:	rex add DWORD PTR [rax],eax
   140017aae:	add    BYTE PTR [rax],al
   140017ab0:	rex.W ja 0x140017ab4
   140017ab3:	rex add DWORD PTR [rax],eax
   140017ab6:	add    BYTE PTR [rax],al
   140017ab8:	cmp    BYTE PTR [rdi+0x1],dh
   140017abb:	rex add DWORD PTR [rax],eax
   140017abe:	add    BYTE PTR [rax],al
   140017ac0:	sub    BYTE PTR [rdi+0x1],dh
   140017ac3:	rex add DWORD PTR [rax],eax
   140017ac6:	add    BYTE PTR [rax],al
   140017ac8:	sbb    al,0x77
   140017aca:	add    DWORD PTR [rax+0x1],eax
   140017acd:	add    BYTE PTR [rax],al
   140017acf:	add    BYTE PTR [rax],dl
   140017ad1:	ja     0x140017ad4
   140017ad3:	rex add DWORD PTR [rax],eax
   140017ad6:	add    BYTE PTR [rax],al
   140017ad8:	or     BYTE PTR [rdi+0x1],dh
   140017adb:	rex add DWORD PTR [rax],eax
   140017ade:	add    BYTE PTR [rax],al
   140017ae0:	add    BYTE PTR [rdi+0x1],dh
   140017ae3:	rex add DWORD PTR [rax],eax
   140017ae6:	add    BYTE PTR [rax],al
   140017ae8:	clc    
   140017ae9:	jbe    0x140017aec
   140017aeb:	rex add DWORD PTR [rax],eax
   140017aee:	add    BYTE PTR [rax],al
   140017af0:	hlt    
   140017af1:	jbe    0x140017af4
   140017af3:	rex add DWORD PTR [rax],eax
   140017af6:	add    BYTE PTR [rax],al
   140017af8:	lock jbe 0x140017afc
   140017afb:	rex add DWORD PTR [rax],eax
   140017afe:	add    BYTE PTR [rax],al
   140017b00:	call   0x141417c7b
   140017b05:	add    BYTE PTR [rax],al
   140017b07:	add    ah,ah
   140017b09:	jbe    0x140017b0c
   140017b0b:	rex add DWORD PTR [rax],eax
   140017b0e:	add    BYTE PTR [rax],al
   140017b10:	fdiv   QWORD PTR [rsi+0x1]
   140017b13:	rex add DWORD PTR [rax],eax
   140017b16:	add    BYTE PTR [rax],al
   140017b18:	(bad)  
   140017b19:	jbe    0x140017b1c
   140017b1b:	rex add DWORD PTR [rax],eax
   140017b1e:	add    BYTE PTR [rax],al
   140017b20:	int3   
   140017b21:	jbe    0x140017b24
   140017b23:	rex add DWORD PTR [rax],eax
   140017b26:	add    BYTE PTR [rax],al
   140017b28:	enter  0x176,0x40
   140017b2c:	add    DWORD PTR [rax],eax
   140017b2e:	add    BYTE PTR [rax],al
   140017b30:	(bad)  
   140017b31:	jbe    0x140017b34
   140017b33:	rex add DWORD PTR [rax],eax
   140017b36:	add    BYTE PTR [rax],al
   140017b38:	mov    esp,0x1400176
   140017b3d:	add    BYTE PTR [rax],al
   140017b3f:	add    BYTE PTR [rsi+rsi*2+0x14001],dh
   140017b46:	add    BYTE PTR [rax],al
   140017b48:	lods   al,BYTE PTR ds:[rsi]
   140017b49:	jbe    0x140017b4c
   140017b4b:	rex add DWORD PTR [rax],eax
   140017b4e:	add    BYTE PTR [rax],al
   140017b50:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017b51:	jbe    0x140017b54
   140017b53:	rex add DWORD PTR [rax],eax
   140017b56:	add    BYTE PTR [rax],al
   140017b58:	cwde   
   140017b59:	jbe    0x140017b5c
   140017b5b:	rex add DWORD PTR [rax],eax
   140017b5e:	add    BYTE PTR [rax],al
   140017b60:	mov    BYTE PTR [rsi+0x1],dh
   140017b63:	rex add DWORD PTR [rax],eax
   140017b66:	add    BYTE PTR [rax],al
   140017b68:	push   0x1400176
   140017b6d:	add    BYTE PTR [rax],al
   140017b6f:	add    BYTE PTR [rax+0x76],ah
   140017b72:	add    DWORD PTR [rax+0x1],eax
	...
   140017b7d:	add    BYTE PTR [rax],al
   140017b7f:	add    BYTE PTR [rsi+rsi*2+0x1],dl
   140017b83:	rex add DWORD PTR [rax],eax
   140017b86:	add    BYTE PTR [rax],al
   140017b88:	cmp    BYTE PTR [rsi+0x1],dh
   140017b8b:	rex add DWORD PTR [rax],eax
   140017b8e:	add    BYTE PTR [rax],al
   140017b90:	rex jbe 0x140017b94
   140017b93:	rex add DWORD PTR [rax],eax
   140017b96:	add    BYTE PTR [rax],al
   140017b98:	hlt    
   140017b99:	jne    0x140017b9c
   140017b9b:	rex add DWORD PTR [rax],eax
   140017b9e:	add    BYTE PTR [rax],al
   140017ba0:	push   rax
   140017ba1:	jbe    0x140017ba4
   140017ba3:	rex add DWORD PTR [rax],eax
   140017ba6:	add    BYTE PTR [rax],al
   140017ba8:	rex.WR jbe 0x140017bac
   140017bab:	rex add DWORD PTR [rax],eax
   140017bae:	add    BYTE PTR [rax],al
   140017bb0:	rex.W jbe 0x140017bb4
   140017bb3:	rex add DWORD PTR [rax],eax
	...
   140017bfe:	add    BYTE PTR [rax],al
   140017c00:	push   0x0
   140017c02:	push   0x0
   140017c04:	push   0x0
   140017c06:	push   0x0
   140017c08:	push   0x0
   140017c0a:	push   0x0
   140017c0c:	imul   eax,DWORD PTR [rax],0x71
   140017c0f:	add    BYTE PTR [rcx+0x0],dh
   140017c12:	je     0x140017c14
   140017c14:	je     0x140017c16
   140017c16:	je     0x140017c18
   140017c18:	je     0x140017c1a
   140017c1a:	ja     0x140017c1c
   140017c1c:	jns    0x140017c1e
   140017c1e:	jne    0x140017c20
   140017c20:	jne    0x140017c22
   140017c22:	jbe    0x140017c24
   140017c24:	jbe    0x140017c26
   140017c26:	jbe    0x140017c28
   140017c28:	jbe    0x140017c2a
   140017c2a:	jbe    0x140017c2c
   140017c2c:	jbe    0x140017c2e
   140017c2e:	jbe    0x140017c30
   140017c30:	jbe    0x140017c32
   140017c32:	jp     0x140017c34
   140017c34:	jnp    0x140017c36
   140017c36:	jae    0x140017c38
   140017c38:	jb     0x140017c3a
   140017c3a:	jle    0x140017c3c
   140017c3c:	jle    0x140017c3e
   140017c3e:	jg     0x140017c40
   140017c40:	jg     0x140017c42
   140017c42:	add    BYTE PTR [rax],0x80
   140017c45:	add    BYTE PTR [rbp+0x0],bh
   140017c48:	outs   dx,DWORD PTR ds:[rsi]
   140017c49:	add    BYTE PTR [rdi+0x0],ch
   140017c4c:	outs   dx,DWORD PTR ds:[rsi]
   140017c4d:	add    BYTE PTR [rdi+0x0],ch
   140017c50:	(bad)  
   140017c51:	add    BYTE PTR [rdx-0x7dff7e00],al
   140017c57:	add    BYTE PTR [rdx-0x7dff7e00],al
   140017c5d:	add    BYTE PTR [rdi+0x0],ch
   140017c60:	mov    al,BYTE PTR [rax]
   140017c62:	mov    al,BYTE PTR [rax]
   140017c64:	mov    al,BYTE PTR [rax]
   140017c66:	mov    eax,DWORD PTR [rax]
   140017c68:	mov    eax,DWORD PTR [rax]
   140017c6a:	mov    WORD PTR [rax],es
   140017c6c:	mov    WORD PTR [rax],es
   140017c6e:	outs   dx,DWORD PTR ds:[rsi]
   140017c6f:	add    BYTE PTR [rdi+0x0],ch
   140017c72:	outs   dx,DWORD PTR ds:[rsi]
   140017c73:	add    BYTE PTR [rdi+0x0],ch
   140017c76:	outs   dx,DWORD PTR ds:[rsi]
   140017c77:	add    BYTE PTR [rdi+0x0],ch
   140017c7a:	outs   dx,DWORD PTR ds:[rsi]
   140017c7b:	add    BYTE PTR [rdi+0x0],ch
   140017c7e:	outs   dx,DWORD PTR ds:[rsi]
   140017c7f:	add    BYTE PTR [rdi+0x0],ch
   140017c82:	outs   dx,DWORD PTR ds:[rsi]
   140017c83:	add    BYTE PTR [rdi+0x0],ch
   140017c86:	outs   dx,DWORD PTR ds:[rsi]
   140017c87:	add    BYTE PTR [rdi+0x0],ch
   140017c8a:	outs   dx,DWORD PTR ds:[rsi]
   140017c8b:	add    BYTE PTR [rdi+0x0],ch
   140017c8e:	outs   dx,DWORD PTR ds:[rsi]
   140017c8f:	add    BYTE PTR [rdi+0x0],ch
   140017c92:	jl     0x140017c94
   140017c94:	jl     0x140017c96
   140017c96:	jl     0x140017c98
   140017c98:	jl     0x140017c9a
   140017c9a:	jl     0x140017c9c
   140017c9c:	jl     0x140017c9e
   140017c9e:	jl     0x140017ca0
   140017ca0:	pop    QWORD PTR [rax]
   140017ca2:	pop    QWORD PTR [rax]
   140017ca4:	pop    QWORD PTR [rax]
   140017ca6:	pop    QWORD PTR [rax]
   140017ca8:	pop    QWORD PTR [rax]
   140017caa:	pop    QWORD PTR [rax]
   140017cac:	pop    QWORD PTR [rax]
   140017cae:	pop    QWORD PTR [rax]
   140017cb0:	pop    QWORD PTR [rax]
   140017cb2:	pop    QWORD PTR [rax]
   140017cb4:	pop    QWORD PTR [rax]
   140017cb6:	pop    QWORD PTR [rax]
   140017cb8:	pop    QWORD PTR [rax]
   140017cba:	pop    QWORD PTR [rax]
   140017cbc:	pop    QWORD PTR [rax]
   140017cbe:	pop    QWORD PTR [rax]
   140017cc0:	pop    QWORD PTR [rax]
   140017cc2:	pop    QWORD PTR [rax]
   140017cc4:	add    DWORD PTR [rax],0x910091
   140017cca:	xchg   ecx,eax
   140017ccb:	add    BYTE PTR [rcx-0x6fff7000],dl
   140017cd1:	add    BYTE PTR [rbp-0x6aff6b00],dl
   140017cd7:	add    BYTE PTR [rbx-0x69ff6d00],dl
   140017cdd:	add    BYTE PTR [rsi-0x69ff6a00],dl
   140017ce3:	add    BYTE PTR [rcx-0x66ff6700],bl
   140017ce9:	add    BYTE PTR [rcx-0x66ff6700],bl
   140017cef:	add    BYTE PTR [rcx-0x66ff6700],bl
   140017cf5:	add    BYTE PTR [rcx-0x66ff6700],bl
   140017cfb:	add    BYTE PTR [rcx-0x66ff6700],bl
   140017d01:	add    BYTE PTR [rcx-0x66ff6700],bl
   140017d07:	add    BYTE PTR [rcx-0x66ff6700],bl
   140017d0d:	add    BYTE PTR [rcx-0x66ff6700],bl
   140017d13:	add    BYTE PTR [rcx-0x66ff6700],bl
   140017d19:	add    BYTE PTR [rcx-0x66ff6700],bl
   140017d1f:	add    BYTE PTR [rcx-0x65ff6600],bl
   140017d25:	add    BYTE PTR [rax+0x0],bh
   140017d28:	js     0x140017d2a
   140017d2a:	js     0x140017d2c
   140017d2c:	js     0x140017d2e
   140017d2e:	js     0x140017d30
   140017d30:	popf   
   140017d31:	add    BYTE PTR [rbp-0x61ff6200],bl
   140017d37:	add    BYTE PTR [rsi-0x63ff6200],bl
   140017d3d:	add    BYTE PTR [rax+rax*1+0x9f009f],bl
   140017d44:	movabs al,ds:0xa100a100a100a000
   140017d4d:	add    BYTE PTR [rdx-0x5dff5e00],ah
   140017d53:	add    BYTE PTR [rdx-0x5dff5e00],ah
   140017d59:	add    BYTE PTR [rdx-0x5dff5e00],ah
   140017d5f:	add    BYTE PTR [rdx-0x5cff5d00],ah
   140017d65:	add    BYTE PTR [rbx-0x5bff5d00],ah
   140017d6b:	add    BYTE PTR [rax+rax*1+0xa500a4],ah
   140017d72:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017d73:	add    BYTE PTR [rbp-0x59ff5b00],ah
   140017d79:	add    BYTE PTR [rsi-0x59ff5a00],ah
   140017d7f:	add    BYTE PTR [rsi-0x59ff5a00],ah
   140017d85:	add    BYTE PTR [rdi-0x58ff5900],ah
   140017d8b:	add    BYTE PTR [rdi-0x58ff5900],ah
   140017d91:	add    BYTE PTR [rax-0x57ff5800],ch
   140017d97:	add    BYTE PTR [rax-0x56ff5800],ch
   140017d9d:	add    BYTE PTR [rcx-0x56ff5700],ch
   140017da3:	add    BYTE PTR [rcx-0x55ff5600],ch
   140017da9:	add    BYTE PTR [rbx-0x53ff5500],ch
   140017daf:	add    BYTE PTR [rax+rax*1+0xad00ad],ch
   140017db6:	scas   al,BYTE PTR es:[rdi]
   140017db7:	add    BYTE PTR [rsi-0x50ff5100],ch
   140017dbd:	add    BYTE PTR [rax-0x4eff5000],dh
   140017dc3:	add    BYTE PTR [rcx-0x4dff4e00],dh
   140017dc9:	add    BYTE PTR [rbx-0x4bff4d00],dh
   140017dcf:	add    BYTE PTR [rax+rax*1+0xb500b5],dh
   140017dd6:	xchg   esp,eax
   140017dd7:	add    BYTE PTR [rax+rax*1+0xb600b6],dl
   140017dde:	mov    bh,0x0
   140017de0:	mov    bh,0x0
   140017de2:	mov    bh,0x0
   140017de4:	mov    bh,0x0
   140017de6:	mov    bh,0x0
   140017de8:	mov    bh,0x0
   140017dea:	mov    bh,0x0
   140017dec:	mov    bh,0x0
   140017dee:	mov    bh,0x0
   140017df0:	mov    bh,0x0
   140017df2:	mov    bh,0x0
   140017df4:	mov    bh,0x0
   140017df6:	ins    DWORD PTR es:[rdi],dx
   140017df7:	add    BYTE PTR [rbp+0x0],ch
   140017dfa:	mov    eax,0xb900b800
   140017dff:	add    BYTE PTR [rcx-0x45ff4600],bh
   140017e05:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140017e09:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140017e0d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140017e11:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140017e15:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140017e19:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140017e1d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140017e21:	add    BYTE PTR [rax+rax*1-0x7d],ch
   140017e25:	add    bl,al
   140017e27:	add    bl,al
   140017e29:	add    dl,al
   140017e2b:	add    dl,al
   140017e2d:	add    BYTE PTR [rsi-0x3bff7200],cl
   140017e33:	add    ah,al
   140017e35:	add    ch,al
   140017e37:	add    ch,al
   140017e39:	add    bh,al
   140017e3b:	add    bh,al
   140017e3d:	add    dh,al
   140017e3f:	add    al,cl
   140017e41:	add    bl,cl
   140017e43:	add    cl,cl
   140017e45:	add    cl,cl
   140017e47:	add    ah,cl
   140017e49:	add    dl,cl
   140017e4b:	add    dl,cl
   140017e4d:	add    BYTE PTR [rax+rax*1+0x850085],al
   140017e54:	xchg   BYTE PTR [rax],al
   140017e56:	xchg   BYTE PTR [rax],al
   140017e58:	mov    ebx,0xbb00bb00
   140017e5d:	add    BYTE PTR [rbx-0x44ff4500],bh
   140017e63:	add    BYTE PTR [rbx-0x43ff4500],bh
   140017e69:	add    BYTE PTR [rax+rax*1+0xbc00bc],bh
   140017e70:	mov    ebp,0xbd00bd00
   140017e75:	add    BYTE PTR [rbp-0x41ff4200],bh
   140017e7b:	add    BYTE PTR [rdi-0x32ff7800],al
   140017e81:	add    ch,cl
   140017e83:	add    al,dl
   140017e85:	add    al,dl
   140017e87:	add    dh,cl
   140017e89:	add    dh,cl
   140017e8b:	add    cl,dl
   140017e8d:	add    bh,cl
   140017e8f:	add    BYTE PTR [rdi-0x3fff4000],bh
   140017e95:	add    BYTE PTR [rcx-0x76ff7700],cl
   140017e9b:	add    dl,dl
   140017e9d:	add    bl,dl
   140017e9f:	add    cl,al
   140017ea1:	add    cl,al
   140017ea3:	add    ah,dl
   140017ea5:	add    BYTE PTR [rbp-0x64ff6500],cl
   140017eab:	add    ch,dl
   140017ead:	add    ch,dl
   140017eaf:	add    BYTE PTR [rax-0x68ff6800],bl
   140017eb5:	add    BYTE PTR [rdi+0x7000d600],dl
   140017ebb:	add    BYTE PTR [rax+0x0],dh
   140017ebe:	xlat   BYTE PTR ds:[rbx]
   140017ebf:	add    bh,dl
   140017ec1:	add    BYTE PTR [rsi+0x0],ch
   140017ec4:	outs   dx,BYTE PTR ds:[rsi]
   140017ec5:	add    BYTE PTR [rdx-0x27ff6e00],dl
   140017ecb:	add    BYTE PTR [rax],al
   140017ecd:	add    BYTE PTR [rax],al
   140017ecf:	add    BYTE PTR [rdx],al
   140017ed1:	add    BYTE PTR [rdx],al
   140017ed3:	add    BYTE PTR [rdx],al
   140017ed5:	add    BYTE PTR [rdx],al
   140017ed7:	add    BYTE PTR [rdx],al
   140017ed9:	add    BYTE PTR [rdx],al
   140017edb:	add    BYTE PTR [rdx],al
   140017edd:	add    BYTE PTR [rcx],al
   140017edf:	add    BYTE PTR [rcx],al
   140017ee1:	add    BYTE PTR [rcx],al
   140017ee3:	add    BYTE PTR [rcx],al
   140017ee5:	add    BYTE PTR [rdx],al
   140017ee7:	add    BYTE PTR [rdx],al
   140017ee9:	add    BYTE PTR [rcx],al
   140017eeb:	add    BYTE PTR [rcx],al
   140017eed:	add    BYTE PTR [rdx],al
   140017eef:	add    BYTE PTR [rdx],al
   140017ef1:	add    BYTE PTR [rdx],al
   140017ef3:	add    BYTE PTR [rdx],al
   140017ef5:	add    BYTE PTR [rbx],al
   140017ef7:	add    BYTE PTR [rbx],al
   140017ef9:	add    BYTE PTR [rip+0x4000500],al        # 0x1440183ff
   140017eff:	add    BYTE PTR [rax+rax*1],al
   140017f02:	add    al,BYTE PTR [rax]
   140017f04:	add    al,BYTE PTR [rax]
   140017f06:	add    BYTE PTR [rax],al
   140017f08:	add    DWORD PTR [rax],eax
   140017f0a:	add    DWORD PTR [rax],eax
   140017f0c:	add    al,BYTE PTR [rax]
   140017f0e:	add    DWORD PTR [rax],eax
   140017f10:	add    eax,DWORD PTR [rax]
   140017f12:	add    al,BYTE PTR [rax]
   140017f14:	add    eax,DWORD PTR [rax]
   140017f16:	add    al,BYTE PTR [rax]
   140017f18:	add    DWORD PTR [rax],eax
   140017f1a:	add    eax,0x4000400
   140017f1f:	add    BYTE PTR [rcx],al
   140017f21:	add    BYTE PTR [rcx],al
   140017f23:	add    BYTE PTR [rcx],al
   140017f25:	add    BYTE PTR [rcx],al
   140017f27:	add    BYTE PTR [rcx],al
   140017f29:	add    BYTE PTR [rcx],al
   140017f2b:	add    BYTE PTR [rcx],al
   140017f2d:	add    BYTE PTR [rbx],al
   140017f2f:	add    BYTE PTR [rcx],al
   140017f31:	add    BYTE PTR [rcx],al
   140017f33:	add    BYTE PTR [rcx],al
   140017f35:	add    BYTE PTR [rax],al
   140017f37:	add    BYTE PTR [rcx],al
   140017f39:	add    BYTE PTR [rdx],al
   140017f3b:	add    BYTE PTR [rax+rax*1],al
   140017f3e:	(bad)  
   140017f3f:	add    BYTE PTR [rsi],al
   140017f41:	add    BYTE PTR [rbx],al
   140017f43:	add    BYTE PTR [rbx],al
   140017f45:	add    BYTE PTR [rdi],al
   140017f47:	add    BYTE PTR [rdi],al
   140017f49:	add    BYTE PTR [rax+rax*1],al
   140017f4c:	add    al,0x0
   140017f4e:	add    eax,0x5000500
   140017f53:	add    BYTE PTR [rsi],al
   140017f55:	add    BYTE PTR [rsi],al
   140017f57:	add    BYTE PTR [rdx],cl
   140017f59:	add    BYTE PTR [rsi],al
   140017f5b:	add    BYTE PTR [rdi],al
   140017f5d:	add    BYTE PTR [rcx],al
   140017f5f:	add    BYTE PTR [rcx],al
   140017f61:	add    BYTE PTR [rcx],al
   140017f63:	add    BYTE PTR [rcx],al
   140017f65:	add    BYTE PTR [rcx],al
   140017f67:	add    BYTE PTR [rcx],al
   140017f69:	add    BYTE PTR [rcx],al
   140017f6b:	add    BYTE PTR [rcx],al
   140017f6d:	add    BYTE PTR [rcx],al
   140017f6f:	add    BYTE PTR [rcx],al
   140017f71:	add    BYTE PTR [rcx],al
   140017f73:	add    BYTE PTR [rcx],al
   140017f75:	add    BYTE PTR [rcx],al
   140017f77:	add    BYTE PTR [rcx],al
   140017f79:	add    BYTE PTR [rcx],al
   140017f7b:	add    BYTE PTR [rcx],al
   140017f7d:	add    BYTE PTR [rcx],al
   140017f7f:	add    BYTE PTR [rcx],al
   140017f81:	add    BYTE PTR [rcx],al
   140017f83:	add    BYTE PTR [rdx],al
   140017f85:	add    BYTE PTR [rbx],al
   140017f87:	add    BYTE PTR [rbx],al
   140017f89:	add    BYTE PTR [rax+rax*1],al
   140017f8c:	add    eax,0x4000300
   140017f91:	add    BYTE PTR [rbx],al
   140017f93:	add    BYTE PTR [rcx],al
   140017f95:	add    BYTE PTR [rcx],al
   140017f97:	add    BYTE PTR [rdx],al
   140017f99:	add    BYTE PTR [rbx],al
   140017f9b:	add    BYTE PTR [rax+rax*1],al
   140017f9e:	add    DWORD PTR [rax],eax
   140017fa0:	add    al,BYTE PTR [rax]
   140017fa2:	add    eax,DWORD PTR [rax]
   140017fa4:	(bad)  
   140017fa5:	add    BYTE PTR [rax],cl
   140017fa7:	add    BYTE PTR [rcx],al
   140017fa9:	add    BYTE PTR [rbx],al
   140017fab:	add    BYTE PTR [rcx],al
   140017fad:	add    BYTE PTR [rcx],al
   140017faf:	add    BYTE PTR [rcx],al
   140017fb1:	add    BYTE PTR [rcx],al
   140017fb3:	add    BYTE PTR [rcx],al
   140017fb5:	add    BYTE PTR [rcx],al
   140017fb7:	add    BYTE PTR [rcx],al
   140017fb9:	add    BYTE PTR [rcx],al
   140017fbb:	add    BYTE PTR [rcx],al
   140017fbd:	add    BYTE PTR [rcx],al
   140017fbf:	add    BYTE PTR [rcx],al
   140017fc1:	add    BYTE PTR [rcx],al
   140017fc3:	add    BYTE PTR [rcx],al
   140017fc5:	add    BYTE PTR [rcx],al
   140017fc7:	add    BYTE PTR [rcx],al
   140017fc9:	add    BYTE PTR [rcx],al
   140017fcb:	add    BYTE PTR [rcx],al
   140017fcd:	add    BYTE PTR [rcx],al
   140017fcf:	add    BYTE PTR [rcx],al
   140017fd1:	add    BYTE PTR [rcx],al
   140017fd3:	add    BYTE PTR [rcx],al
   140017fd5:	add    BYTE PTR [rcx],al
   140017fd7:	add    BYTE PTR [rcx],al
   140017fd9:	add    BYTE PTR [rcx],al
   140017fdb:	add    BYTE PTR [rcx],al
   140017fdd:	add    BYTE PTR [rcx],al
   140017fdf:	add    BYTE PTR [rcx],al
   140017fe1:	add    BYTE PTR [rcx],al
   140017fe3:	add    BYTE PTR [rcx],al
   140017fe5:	add    BYTE PTR [rcx],al
   140017fe7:	add    BYTE PTR [rcx],al
   140017fe9:	add    BYTE PTR [rcx],al
   140017feb:	add    BYTE PTR [rcx],al
   140017fed:	add    BYTE PTR [rcx],al
   140017fef:	add    BYTE PTR [rcx],al
   140017ff1:	add    BYTE PTR [rcx],al
   140017ff3:	add    BYTE PTR [rcx],al
   140017ff5:	add    BYTE PTR [rcx],al
   140017ff7:	add    BYTE PTR [rcx],al
   140017ff9:	add    BYTE PTR [rax+rax*1],al
   140017ffc:	add    eax,DWORD PTR [rax]
   140017ffe:	add    eax,0x2000100
   140018003:	add    BYTE PTR [rax+rax*1],al
   140018006:	add    al,0x0
   140018008:	add    al,0x0
   14001800a:	add    eax,DWORD PTR [rax]
   14001800c:	add    BYTE PTR [rax],al
   14001800e:	add    DWORD PTR [rax],eax
   140018010:	add    DWORD PTR [rax],eax
   140018012:	add    eax,DWORD PTR [rax]
   140018014:	add    DWORD PTR [rax],eax
   140018016:	add    DWORD PTR [rax],eax
   140018018:	add    DWORD PTR [rax],eax
   14001801a:	add    al,BYTE PTR [rax]
   14001801c:	add    al,BYTE PTR [rax]
   14001801e:	add    DWORD PTR [rax],eax
   140018020:	add    al,BYTE PTR [rax]
   140018022:	add    al,BYTE PTR [rax]
   140018024:	add    al,BYTE PTR [rax]
   140018026:	add    al,BYTE PTR [rax]
   140018028:	add    al,BYTE PTR [rax]
   14001802a:	add    al,BYTE PTR [rax]
   14001802c:	add    al,BYTE PTR [rax]
   14001802e:	add    al,BYTE PTR [rax]
   140018030:	add    al,BYTE PTR [rax]
   140018032:	add    DWORD PTR [rax],eax
   140018034:	add    eax,DWORD PTR [rax]
   140018036:	add    eax,DWORD PTR [rax]
   140018038:	add    eax,DWORD PTR [rax]
   14001803a:	add    DWORD PTR [rax],eax
   14001803c:	add    eax,DWORD PTR [rax]
   14001803e:	add    eax,DWORD PTR [rax]
   140018040:	add    DWORD PTR [rax],eax
   140018042:	add    eax,DWORD PTR [rax]
   140018044:	add    eax,DWORD PTR [rax]
   140018046:	add    eax,DWORD PTR [rax]
   140018048:	add    DWORD PTR [rax],eax
   14001804a:	add    eax,DWORD PTR [rax]
   14001804c:	add    eax,DWORD PTR [rax]
   14001804e:	add    eax,DWORD PTR [rax]
   140018050:	add    eax,DWORD PTR [rax]
   140018052:	add    eax,DWORD PTR [rax]
   140018054:	add    eax,DWORD PTR [rax]
   140018056:	add    DWORD PTR [rax],eax
   140018058:	add    eax,DWORD PTR [rax]
   14001805a:	add    eax,DWORD PTR [rax]
   14001805c:	add    eax,DWORD PTR [rax]
   14001805e:	add    eax,DWORD PTR [rax]
   140018060:	add    eax,DWORD PTR [rax]
   140018062:	add    DWORD PTR [rax],eax
   140018064:	add    eax,DWORD PTR [rax]
   140018066:	add    eax,DWORD PTR [rax]
   140018068:	add    eax,DWORD PTR [rax]
   14001806a:	add    eax,DWORD PTR [rax]
   14001806c:	add    DWORD PTR [rax],eax
   14001806e:	add    eax,DWORD PTR [rax]
   140018070:	add    eax,DWORD PTR [rax]
   140018072:	add    eax,DWORD PTR [rax]
   140018074:	add    eax,DWORD PTR [rax]
   140018076:	add    DWORD PTR [rax],eax
   140018078:	add    eax,DWORD PTR [rax]
   14001807a:	add    DWORD PTR [rax],eax
   14001807c:	add    eax,DWORD PTR [rax]
   14001807e:	add    DWORD PTR [rax],eax
   140018080:	add    eax,DWORD PTR [rax]
   140018082:	add    DWORD PTR [rax],eax
   140018084:	add    eax,DWORD PTR [rax]
   140018086:	add    DWORD PTR [rax],eax
   140018088:	add    eax,DWORD PTR [rax]
   14001808a:	add    DWORD PTR [rax],eax
   14001808c:	add    eax,DWORD PTR [rax]
   14001808e:	add    DWORD PTR [rax],eax
   140018090:	add    eax,DWORD PTR [rax]
   140018092:	add    DWORD PTR [rax],eax
   140018094:	add    eax,DWORD PTR [rax]
   140018096:	add    DWORD PTR [rax],eax
   140018098:	add    eax,DWORD PTR [rax]
   14001809a:	add    DWORD PTR [rax],eax
   14001809c:	add    eax,DWORD PTR [rax]
   14001809e:	add    DWORD PTR [rax],eax
   1400180a0:	add    eax,0x5000100
   1400180a5:	add    BYTE PTR [rcx],al
   1400180a7:	add    BYTE PTR [rbx],al
   1400180a9:	add    BYTE PTR [rcx],al
   1400180ab:	add    BYTE PTR [rbx],al
   1400180ad:	add    BYTE PTR [rcx],al
   1400180af:	add    BYTE PTR [rcx],al
   1400180b1:	add    BYTE PTR [rcx],al
   1400180b3:	add    BYTE PTR [rcx],al
   1400180b5:	add    BYTE PTR [rcx],al
   1400180b7:	add    BYTE PTR [rcx],al
   1400180b9:	add    BYTE PTR [rcx],al
   1400180bb:	add    BYTE PTR [rcx],al
   1400180bd:	add    BYTE PTR [rcx],al
   1400180bf:	add    BYTE PTR [rcx],al
   1400180c1:	add    BYTE PTR [rcx],al
   1400180c3:	add    BYTE PTR [rcx],al
   1400180c5:	add    BYTE PTR [rcx],al
   1400180c7:	add    BYTE PTR [rbx],al
   1400180c9:	add    BYTE PTR [rax],al
   1400180cb:	add    BYTE PTR [rcx],al
   1400180cd:	add    BYTE PTR [rcx],al
   1400180cf:	add    BYTE PTR [rbx],al
   1400180d1:	add    BYTE PTR [rax],al
   1400180d3:	add    BYTE PTR [rcx],al
   1400180d5:	add    BYTE PTR [rcx],al
   1400180d7:	add    BYTE PTR [rcx],al
   1400180d9:	add    BYTE PTR [rcx],al
   1400180db:	add    BYTE PTR [rcx],al
   1400180dd:	add    BYTE PTR [rcx],al
   1400180df:	add    BYTE PTR [rcx],al
   1400180e1:	add    BYTE PTR [rcx],al
   1400180e3:	add    BYTE PTR [rcx],al
   1400180e5:	add    BYTE PTR [rcx],al
   1400180e7:	add    BYTE PTR [rcx],al
   1400180e9:	add    BYTE PTR [rcx],al
   1400180eb:	add    BYTE PTR [rcx],al
   1400180ed:	add    BYTE PTR [rcx],al
   1400180ef:	add    BYTE PTR [rcx],al
   1400180f1:	add    BYTE PTR [rcx],al
   1400180f3:	add    BYTE PTR [rbx],al
   1400180f5:	add    BYTE PTR [rcx],al
   1400180f7:	add    BYTE PTR [rdx],al
   1400180f9:	add    BYTE PTR [rax],al
   1400180fb:	add    BYTE PTR [rcx],al
   1400180fd:	add    BYTE PTR [rbx],al
   1400180ff:	add    BYTE PTR [rbx],al
   140018101:	add    BYTE PTR [rcx],al
   140018103:	add    BYTE PTR [rcx],al
   140018105:	add    BYTE PTR [rcx],al
   140018107:	add    BYTE PTR [rbx],al
   140018109:	add    BYTE PTR [rcx],al
   14001810b:	add    BYTE PTR [rbx],al
   14001810d:	add    BYTE PTR [rdx],al
   14001810f:	add    BYTE PTR [rdx],al
   140018111:	add    BYTE PTR [rdx],al
   140018113:	add    BYTE PTR [rax],al
   140018115:	add    BYTE PTR [rcx],al
   140018117:	add    BYTE PTR [rdx],al
   140018119:	add    BYTE PTR [rax],al
   14001811b:	add    BYTE PTR [rcx],al
   14001811d:	add    BYTE PTR [rcx],al
   14001811f:	add    BYTE PTR [rdx],al
   140018121:	add    BYTE PTR [rdx],al
   140018123:	add    BYTE PTR [rdi],al
   140018125:	add    BYTE PTR [rip+0x7000700],al        # 0x14701882b
   14001812b:	add    BYTE PTR [rdi],al
   14001812d:	add    BYTE PTR [rip+0xa000900],al        # 0x14a018a33
   140018133:	add    BYTE PTR [rdi],al
   140018135:	add    BYTE PTR [rax],cl
   140018137:	add    BYTE PTR [rdx],al
   140018139:	add    BYTE PTR [rdx],al
   14001813b:	add    BYTE PTR [rbx],al
   14001813d:	add    BYTE PTR [rbx],al
   14001813f:	add    BYTE PTR [rdx],al
   140018141:	add    BYTE PTR [rdx],al
   140018143:	add    BYTE PTR [rbx],al
   140018145:	add    BYTE PTR [rbx],al
   140018147:	add    BYTE PTR [rbx],al
   140018149:	add    BYTE PTR [rbx],al
   14001814b:	add    BYTE PTR [rip+0x3000500],al        # 0x143018651
   140018151:	add    BYTE PTR [rip+0x2000100],al        # 0x142018257
   140018157:	add    BYTE PTR [rax],al
   140018159:	add    BYTE PTR [rcx],al
   14001815b:	add    BYTE PTR [rax+rax*1],al
   14001815e:	add    eax,DWORD PTR [rax]
   140018160:	add    eax,DWORD PTR [rax]
   140018162:	add    eax,DWORD PTR [rax]
   140018164:	add    eax,DWORD PTR [rax]
   140018166:	add    eax,DWORD PTR [rax]
   140018168:	add    eax,DWORD PTR [rax]
   14001816a:	add    al,0x0
   14001816c:	add    eax,0x2000200
   140018171:	add    BYTE PTR [rdx],al
   140018173:	add    BYTE PTR [rcx],al
   140018175:	add    BYTE PTR [rax],cl
   140018177:	add    BYTE PTR [rax],cl
   140018179:	add    BYTE PTR [rdi],al
   14001817b:	add    BYTE PTR [rcx],al
   14001817d:	add    BYTE PTR [rbx],al
   14001817f:	add    BYTE PTR [rax],al
   140018181:	add    BYTE PTR [rcx],al
   140018183:	add    BYTE PTR [rax],al
   140018185:	add    BYTE PTR [rcx],al
   140018187:	add    BYTE PTR [rcx],al
   140018189:	add    BYTE PTR [rcx],al
   14001818b:	add    BYTE PTR [rcx],al
   14001818d:	add    BYTE PTR [rcx],al
   14001818f:	add    BYTE PTR [rdx],al
   140018191:	add    BYTE PTR [rcx],al
   140018193:	add    BYTE PTR [rcx],al
   140018195:	add    BYTE PTR [rax],al
   140018197:	add    BYTE PTR [rcx],al
   140018199:	add    BYTE PTR [rdx],al
	...
   1400181a3:	add    BYTE PTR [rax+rax*1],bl
   1400181a6:	add    BYTE PTR [rax],al
   1400181a8:	add    BYTE PTR [rax],al
   1400181aa:	add    BYTE PTR [rax],al
   1400181ac:	sbb    al,0x0
   1400181ae:	add    BYTE PTR [rax],al
   1400181b0:	mov    ecx,0xd800fc00
   1400181b5:	add    al,ah
   1400181b7:	add    ah,bl
   1400181b9:	add    BYTE PTR [rax+rax*1+0xd400ec],ah
   1400181c0:	add    eax,DWORD PTR [rax]
   1400181c2:	xchg   ebp,eax
   1400181c3:	add    BYTE PTR [rdx+0x0],dl
   1400181c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400181c7:	add    ah,ah
   1400181c9:	add    al,ch
   1400181cb:	add    BYTE PTR [rcx-0x5cff4a00],bl
   1400181d1:	add    BYTE PTR [rax-0x35ff6c00],ch
   1400181d7:	add    BYTE PTR [rbp+0x59000000],bh
   1400181dd:	add    BYTE PTR [rdx+0x0],bl
   1400181e0:	push   rbp
   1400181e1:	add    BYTE PTR [rax],al
   1400181e3:	add    BYTE PTR [rdi+0x0],cl
   1400181e6:	rex.WX add BYTE PTR [rcx+r8*1+0x0],spl
   1400181eb:	add    BYTE PTR [rax],al
   1400181ed:	add    BYTE PTR [rax],al
   1400181ef:	add    BYTE PTR [rax],al
   1400181f1:	add    BYTE PTR [rdi+0x0],dl
   1400181f4:	add    BYTE PTR [rax],al
   1400181f6:	add    BYTE PTR [rax],al
   1400181f8:	push   rbx
   1400181f9:	add    BYTE PTR [rsi+0x0],dl
   1400181fc:	rex.WRX add BYTE PTR [rax],r8b
   1400181ff:	add    BYTE PTR [rax],al
   140018201:	add    BYTE PTR [rbx+0x0],cl
   140018204:	rex.WRB add BYTE PTR [r8+0x0],r10b
   140018208:	rex.WR add BYTE PTR [rax+0x0],r11b
   14001820c:	push   rcx
   14001820d:	add    BYTE PTR [rax],al
   14001820f:	add    BYTE PTR [rax+rax*1+0x0],dl
   140018213:	add    BYTE PTR [rax],al
   140018215:	add    BYTE PTR [rdx+0x0],dh
   14001821b:	add    BYTE PTR [rbp-0x58ff4800],ah
   140018221:	add    BYTE PTR [rsi+0x0],ah
   140018227:	add    BYTE PTR [rax],al
   140018229:	add    BYTE PTR [rax+rax*1+0xb300b5],dh
   140018230:	mov    bh,0x0
   140018232:	add    BYTE PTR [rax],al
   140018234:	(bad)  
	...
   14001823d:	add    bl,cl
	...
   14001824b:	add    cl,al
   14001824d:	add    BYTE PTR [rax],al
   14001824f:	add    BYTE PTR [rax],al
   140018251:	add    BYTE PTR [rax],al
   140018253:	add    BYTE PTR [rbx-0x45ff4400],bh
   140018259:	add    BYTE PTR [rdi-0x3dff3d00],bh
   14001825f:	add    al,al
   140018261:	add    BYTE PTR [rsi-0x33ff3300],bh
   140018267:	add    dh,cl
   140018269:	add    BYTE PTR [rax],al
   14001826b:	add    ch,bl
   14001826d:	add    BYTE PTR [rax],al
   14001826f:	add    cl,bl
   140018271:	add    BYTE PTR [rax],al
   140018273:	add    BYTE PTR [rax],al
   140018275:	add    BYTE PTR [rdi-0x61ff6e00],bl
   14001827b:	add    BYTE PTR [rbx+0x74007300],dl
   140018281:	add    BYTE PTR [rbp+0x0],dh
   140018284:	mov    es,WORD PTR [rax]
   140018286:	jbe    0x140018288
   140018288:	pop    QWORD PTR [rax]
   14001828a:	ja     0x14001828c
   14001828c:	js     0x14001828e
   14001828e:	jns    0x140018290
   140018290:	jp     0x140018292
   140018292:	jnp    0x140018294
   140018294:	jl     0x140018296
   140018296:	jge    0x140018298
   140018298:	jle    0x14001829a
   14001829a:	jg     0x14001829c
   14001829c:	add    BYTE PTR [rax],0x81
   14001829f:	add    BYTE PTR [rdx-0x6fff7d00],al
   1400182a5:	add    BYTE PTR [rax+rax*1+0x860085],al
   1400182ac:	xchg   DWORD PTR [rax],eax
   1400182ae:	mov    BYTE PTR [rax],al
   1400182b0:	mov    DWORD PTR [rax],eax
   1400182b2:	mov    al,BYTE PTR [rax]
   1400182b4:	mov    eax,DWORD PTR [rax]
   1400182b6:	mov    WORD PTR [rax],es
   1400182b8:	lea    eax,[rax]
   1400182ba:	xchg   ecx,eax
   1400182bb:	add    BYTE PTR [rax],al
   1400182bd:	add    BYTE PTR [rax],al
   1400182bf:	add    BYTE PTR [rbp-0x5fff0300],bl
   1400182c5:	add    BYTE PTR [rax],al
   1400182c7:	add    BYTE PTR [rcx-0x5e000000],ah
   1400182cd:	add    BYTE PTR [rax+rax*1+0xf90000],bl
   1400182d4:	repnz add al,dh
   1400182d7:	add    bh,dh
   1400182d9:	add    al,bh
   1400182db:	add    dh,dh
   1400182dd:	add    ch,dh
   1400182df:	add    bl,bh
   1400182e1:	add    ah,dh
   1400182e3:	add    bl,dh
   1400182e5:	add    cl,dh
   1400182e7:	add    dl,bh
   1400182e9:	add    ch,ch
   1400182eb:	add    BYTE PTR [rax],al
   1400182ed:	add    cl,ah
   1400182ef:	add    BYTE PTR [rax],al
   1400182f1:	add    BYTE PTR [rax],al
   1400182f3:	add    ch,ah
   1400182f5:	add    BYTE PTR [rax],al
   1400182f7:	add    BYTE PTR [rax],al
   1400182f9:	add    cl,ch
   1400182fb:	add    BYTE PTR [rax],al
   1400182fd:	add    BYTE PTR [rax],al
   1400182ff:	add    BYTE PTR [rdi+0x9700],bl
   140018305:	add    BYTE PTR [rsi-0x65000000],dl
   14001830b:	add    BYTE PTR [rcx+0x59000000],ch
   140018311:	add    DWORD PTR [rcx+0x1],ebx
   140018314:	pop    rdx
   140018315:	add    DWORD PTR [rax],eax
   140018317:	add    BYTE PTR [rdi+0x1],dl
   14001831a:	add    BYTE PTR [rax],al
   14001831c:	pop    rax
   14001831d:	add    DWORD PTR [rax],eax
   14001831f:	add    BYTE PTR [rbx+0x1],bl
   140018322:	add    al,0x1
   140018324:	or     eax,DWORD PTR [rcx]
   140018326:	or     al,BYTE PTR [rcx]
   140018328:	adc    al,BYTE PTR [rcx]
   14001832a:	(bad)  
   14001832b:	add    DWORD PTR [rax],eax
   14001832d:	add    BYTE PTR [rdi],al
   14001832f:	add    DWORD PTR [rax],eax
   140018331:	add    BYTE PTR [rcx+rax*1+0x0],bl
   140018335:	add    BYTE PTR [rbx+0x1],ah
   140018338:	or     BYTE PTR [rcx],al
   14001833a:	or     DWORD PTR [rcx],eax
   14001833c:	push   rdx
   14001833d:	add    BYTE PTR [rsi],cl
   14001833f:	add    DWORD PTR [rcx+rax*1],ecx
   140018342:	(bad)  
   140018343:	add    DWORD PTR [rbp+0x1],ebx
   140018346:	(bad)
   14001834b:	add    BYTE PTR [rdx],bl
   14001834d:	add    DWORD PTR [rax],eax
   14001834f:	add    BYTE PTR [rax],al
   140018351:	add    BYTE PTR [rax],al
   140018353:	add    BYTE PTR [rax],al
   140018355:	add    BYTE PTR [rbx+0x1],dl
   140018358:	add    BYTE PTR [rax],al
   14001835a:	fs add esi,edi
   14001835d:	add    BYTE PTR [rax],ch
   14001835f:	add    DWORD PTR [rax],eax
   140018361:	add    BYTE PTR [rax],al
   140018363:	add    BYTE PTR [rax],al
   140018365:	add    BYTE PTR [rbx],bl
   140018367:	add    DWORD PTR [rax],eax
   140018369:	add    BYTE PTR [rax],al
   14001836b:	add    BYTE PTR [rax],dl
   14001836d:	add    DWORD PTR [rcx],edx
   14001836f:	add    DWORD PTR [rax],eax
   140018371:	add    BYTE PTR [rip+0x29010d01],al        # 0x169029078
   140018377:	add    DWORD PTR [rdx],ebp
   140018379:	add    DWORD PTR [rax],eax
   14001837b:	add    BYTE PTR [rcx+0x1],bl
   14001837e:	add    BYTE PTR [rax],al
   140018380:	add    BYTE PTR [rax],al
   140018382:	pop    rbx
   140018383:	add    DWORD PTR [rax],eax
   140018385:	add    BYTE PTR [rcx+rax*1+0x55],dl
   140018389:	add    DWORD PTR [rax],eax
   14001838b:	add    BYTE PTR [rcx+0x1],cl
   14001838e:	(bad)  
   14001838f:	add    DWORD PTR [rax],eax
   140018391:	add    BYTE PTR [rcx],bh
   140018393:	add    DWORD PTR [rdx],edi
   140018395:	add    DWORD PTR [rbx],edi
   140018397:	add    DWORD PTR [rcx+rax*1],edi
   14001839a:	add    BYTE PTR [rax],al
   14001839c:	xor    eax,0x37013601
   1400183a1:	add    DWORD PTR [rax],edi
   1400183a3:	add    DWORD PTR [rcx+0x1],edx
   1400183a6:	push   rdx
   1400183a7:	add    DWORD PTR [rax],eax
	...
   1400183b1:	add    BYTE PTR [rip+0x2f012e01],ch        # 0x16f02b1b8
   1400183b7:	add    DWORD PTR [rdx],eax
   1400183b9:	add    DWORD PTR [rax],eax
   1400183bb:	add    edx,ebx
   1400183bd:	add    dl,ah
   1400183bf:	add    dh,bl
   1400183c1:	add    dh,ch
   1400183c3:	add    dh,dl
   1400183c5:	add    BYTE PTR [rbx],al
   1400183c7:	add    DWORD PTR [rax],eax
   1400183c9:	add    BYTE PTR [rbp-0x15ff1a00],ah
   1400183cf:	add    bh,cl
   1400183d1:	add    ah,al
   1400183d3:	add    BYTE PTR [rax],al
   1400183d5:	add    BYTE PTR [rax],al
   1400183d7:	add    bh,dl
	...
   1400183e1:	add    al,dl
	...
   1400183eb:	add    BYTE PTR [rax],al
   1400183ed:	add    al,cl
   1400183ef:	add    dh,al
   1400183f1:	add    cl,cl
   1400183f3:	add    bh,al
   1400183f5:	add    ch,al
   1400183f7:	add    dl,dl
   1400183f9:	add    cl,dl
   1400183fb:	add    bl,dl
   1400183fd:	add    BYTE PTR [rax],al
   1400183ff:	add    bh,bl
   140018401:	add    BYTE PTR [rax],al
   140018403:	add    bl,bl
   140018405:	add    BYTE PTR [rax],al
   140018407:	add    BYTE PTR [rcx],al
   140018409:	add    DWORD PTR [rbp-0x11000000],esp
   14001840f:	add    dh,bh
   140018411:	add    bh,bh
   140018413:	add    BYTE PTR [rax],al
   140018415:	add    dh,bh
   140018417:	add    BYTE PTR [rax],al
   140018419:	add    BYTE PTR [rax],al
   14001841b:	add    BYTE PTR [rcx],dh
   14001841d:	add    DWORD PTR [rax],eax
   14001841f:	add    BYTE PTR [rax],al
   140018421:	add    BYTE PTR [rax],al
   140018423:	add    BYTE PTR [rbx],dh
   140018425:	add    DWORD PTR [rax],eax
   140018427:	add    bl,ah
   140018429:	add    BYTE PTR [rax],al
   14001842b:	add    BYTE PTR [rax],al
   14001842d:	add    bh,ah
   14001842f:	add    BYTE PTR [rax],al
   140018431:	add    BYTE PTR [rax],al
   140018433:	add    bl,ch
   140018435:	add    BYTE PTR [rsi],ah
   140018437:	add    DWORD PTR [rax],eax
   140018439:	add    BYTE PTR [rsi],bl
   14001843b:	add    DWORD PTR [rdi],esp
   14001843d:	add    DWORD PTR [rcx],esp
   14001843f:	add    DWORD PTR [rax],eax
   140018441:	add    BYTE PTR [rip+0xfffffffffe000001],ah        # 0x13e018448
   140018447:	add    BYTE PTR [rdi],bl
   140018449:	add    DWORD PTR [rax],eax
   14001844b:	add    dh,bh
   14001844d:	add    BYTE PTR [rax],al
   14001844f:	add    BYTE PTR [rax],al
   140018451:	add    BYTE PTR [rdx],dh
   140018453:	add    DWORD PTR [rax],eax
   140018455:	add    BYTE PTR [rax],al
   140018457:	add    BYTE PTR [rax],al
   140018459:	add    BYTE PTR [rcx+rax*1],dh
   14001845c:	add    BYTE PTR [rax],al
   14001845e:	add    BYTE PTR [rax],al
   140018460:	add    BYTE PTR [rax],al
   140018462:	sub    al,0x1
   140018464:	add    BYTE PTR [rax],al
   140018466:	sub    eax,DWORD PTR [rcx]
   140018468:	push   rdx
   140018469:	add    BYTE PTR [rbp+0x0],ch
   14001846c:	add    DWORD PTR gs:[rax],eax
   14001846f:	add    BYTE PTR [rax],al
   140018471:	add    BYTE PTR [rdx+0x0],dh
   140018474:	adc    al,0x1
   140018476:	(bad)  
   140018477:	add    DWORD PTR [rax],eax
   140018479:	add    BYTE PTR [rbx+0x0],dh
   14001847c:	sbb    al,BYTE PTR [rcx]
   14001847e:	jbe    0x140018480
   140018480:	pop    QWORD PTR [rax]
   140018482:	js     0x140018484
   140018484:	jns    0x140018486
   140018486:	push   rbp
   140018487:	add    BYTE PTR [rbp+0x0],bh
   14001848a:	jle    0x14001848c
   14001848c:	rex.WRXB add BYTE PTR [r15+0x0],r15b
   140018490:	(bad)  
   140018491:	add    BYTE PTR [rbx+0x0],dl
   140018494:	push   rsi
   140018495:	add    dh,bh
   140018497:	add    BYTE PTR [rax+0x0],dl
   14001849a:	pop    rax
   14001849b:	add    BYTE PTR [rbp-0x78ffaf00],al
   1400184a1:	add    BYTE PTR [rax+rax*1-0x77],dl
   1400184a5:	add    BYTE PTR [rdx-0x73fee500],cl
   1400184ab:	add    BYTE PTR [rbp+0x9100],cl
   1400184b1:	add    BYTE PTR [rdi+0x0],ch
   1400184b4:	outs   dx,BYTE PTR ds:[rsi]
   1400184b5:	add    BYTE PTR [rcx+0x0],dh
   1400184b8:	(bad)  
   1400184b9:	add    BYTE PTR [rax+0x0],dh
   1400184bc:	(bad)  
   1400184bd:	add    BYTE PTR [rax],al
   1400184bf:	add    BYTE PTR [rdx+0x0],ch
   1400184c2:	adc    eax,0x11301
   1400184c7:	add    BYTE PTR [rax],al
   1400184c9:	add    BYTE PTR [rax],al
   1400184cb:	add    BYTE PTR [rbx+0x1],bl
   1400184ce:	add    BYTE PTR [rax],al
   1400184d0:	imul   eax,DWORD PTR [rax],0xffffff99
   1400184d3:	add    BYTE PTR [rdx+0x9f00],bl
   1400184d9:	add    BYTE PTR [rax+0x3d000000],bl
   1400184df:	add    DWORD PTR [rsi],edi
   1400184e1:	add    DWORD PTR [rax],eax
   1400184e3:	add    BYTE PTR [rcx+0x1],bl
   1400184e6:	add    BYTE PTR [rax],al
   1400184e8:	add    BYTE PTR [rax],al
   1400184ea:	pop    rbx
   1400184eb:	add    DWORD PTR [rax],eax
   1400184ed:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400184f1:	add    BYTE PTR [rax],al
   1400184f3:	add    BYTE PTR [rax],al
   1400184f5:	add    BYTE PTR [rax+0x1],al
   1400184f8:	add    DWORD PTR [r11+0x1],r8d
   1400184fc:	rex.RX add DWORD PTR [rax],r8d
   1400184ff:	add    BYTE PTR [rax],al
   140018501:	add    BYTE PTR [rcx+rax*1+0x45],al
   140018505:	add    DWORD PTR [rax],eax
   140018507:	add    BYTE PTR [rcx+0x1],al
   14001850a:	add    BYTE PTR [rax],al
   14001850c:	rex.X add DWORD PTR [rsi],edx
   14001850f:	add    DWORD PTR [rax+0x1],ecx
   140018512:	add    BYTE PTR [rax],al
   140018514:	(bad)  
   140018515:	add    DWORD PTR [rdi+0x1],eax
   140018518:	add    BYTE PTR [rax],al
   14001851a:	rex.WX add QWORD PTR [rbx+0x1],rcx
   14001851e:	add    BYTE PTR [rax],al
   140018520:	(bad)  
   140018521:	add    DWORD PTR [rcx+rax*1+0x4d],ecx
   140018525:	add    DWORD PTR [rax],eax
   140018527:	add    BYTE PTR [rax],al
   140018529:	add    BYTE PTR [rsi+0x1],cl
   14001852c:	add    BYTE PTR [rax],al
   14001852e:	add    BYTE PTR [rax],al
   140018530:	add    BYTE PTR [rax],al
   140018532:	rex.WRXB add QWORD PTR [r8+0x1],r10
   140018536:	stos   DWORD PTR es:[rdi],eax
   140018537:	add    BYTE PTR [rdx+0x0],ch
   14001853d:	add    BYTE PTR [rax],al
   14001853f:	add    BYTE PTR [rax],dh
   140018541:	add    DWORD PTR [rax],eax
   140018543:	add    BYTE PTR [rax],al
   140018545:	add    BYTE PTR [rax],al
   140018547:	add    BYTE PTR [rdi],bh
   140018549:	add    DWORD PTR [rbx],esp
   14001854b:	add    DWORD PTR [rcx+rax*1],ebx
   14001854e:	add    BYTE PTR [rax],al
   140018550:	and    al,0x1
   140018552:	and    BYTE PTR [rcx],al
   140018554:	add    BYTE PTR [rax],al
   140018556:	and    al,BYTE PTR [rcx]
   140018558:	sbb    BYTE PTR [rcx],al
   14001855a:	add    BYTE PTR [rax],al
   14001855c:	sbb    DWORD PTR [rcx],eax
   14001855e:	sbb    eax,0x1
   140018563:	add    BYTE PTR [rbx+0x1],bl
   140018566:	add    BYTE PTR [rax],al
   140018568:	push   rsi
   140018569:	add    DWORD PTR [rax+rax*1+0x0],esp
   14001856d:	add    BYTE PTR [rax],al
   14001856f:	add    BYTE PTR [rax+0x0],ch
   140018572:	pop    rbx
   140018573:	add    BYTE PTR [rax],al
   140018575:	add    BYTE PTR [rbp+0x0],bl
   140018578:	data16 add BYTE PTR [rax],al
   14001857b:	add    BYTE PTR [rsi+0x0],bl
   14001857e:	add    BYTE PTR [ecx+0x0],ch
   140018582:	pop    rdi
   140018583:	add    BYTE PTR [rbp+0x0],ah
   140018586:	pop    rsp
   140018587:	add    BYTE PTR [rax],al
   140018589:	add    BYTE PTR [rdx+0x0],ah
   14001858c:	scas   eax,DWORD PTR es:[rdi]
   14001858d:	add    BYTE PTR [rbp-0x51ff4f00],ch
   140018593:	add    BYTE PTR [rax+rax*1+0x15e00b0],ch
   14001859a:	(bad)  
   14001859b:	add    BYTE PTR [rdi+0x1],bl
   14001859e:	add    al,0x0
   1400185a0:	add    al,BYTE PTR [rax]
   1400185a2:	rex.W add BYTE PTR [rbx+0x0],spl
   1400185a6:	add    BYTE PTR [rax],al
   1400185a8:	add    BYTE PTR [rax],al
   1400185aa:	rex.WXB add BYTE PTR [r13+0x0],cl
   1400185ae:	rex.WR add BYTE PTR [rip+0x500],r12b        # 0x140018ab5
   1400185b5:	add    BYTE PTR [rcx+0x0],cl
   1400185b8:	add    BYTE PTR [rax],al
   1400185ba:	xor    eax,DWORD PTR [rax]
   1400185bc:	xor    al,BYTE PTR [rax]
   1400185be:	xor    DWORD PTR [rax],eax
   1400185c0:	add    BYTE PTR [rax],al
   1400185c2:	add    BYTE PTR [rax],al
   1400185c4:	add    BYTE PTR [rax],al
   1400185c7:	add    BYTE PTR [rcx+0x0],al
   1400185ca:	sub    DWORD PTR [rax],eax
   1400185cc:	sub    al,BYTE PTR [rax]
   1400185ce:	sub    eax,DWORD PTR [rax]
   1400185d0:	sub    al,0x0
   1400185d2:	add    BYTE PTR cs:[rdi],ch
   1400185d5:	add    BYTE PTR [rax+rax*1+0x2d],al
   1400185d9:	add    BYTE PTR [rax],al
   1400185db:	add    BYTE PTR [rbx],dh
	...
   1400185e5:	add    BYTE PTR [rax],al
   1400185e7:	add    BYTE PTR [rax+rax*1],bh
   1400185ea:	add    BYTE PTR [rax],al
   1400185ec:	cmp    eax,0x0
   1400185f1:	add    BYTE PTR [rax],ah
   1400185f3:	add    BYTE PTR [rax],al
   1400185f5:	add    BYTE PTR [rax],al
   1400185f7:	add    BYTE PTR [rbp+0x0],al
   1400185fa:	and    DWORD PTR [rax],eax
   1400185fc:	add    BYTE PTR [rax],al
   1400185fe:	and    al,0x0
   140018600:	and    al,BYTE PTR [rax]
   140018602:	(bad)  
   140018603:	add    BYTE PTR [rax],al
   140018605:	add    BYTE PTR [rbx],ah
   140018607:	add    BYTE PTR [rdi],bl
   140018609:	add    BYTE PTR [rax],al
   14001860b:	add    BYTE PTR [rsi],bh
   14001860d:	add    BYTE PTR [rax],al
   14001860f:	add    BYTE PTR [rdi],bh
   140018611:	add    BYTE PTR [rcx+0x42000000],bl
   140018617:	add    BYTE PTR [rsi+0x0],al
	...
   140018622:	cdq    
   140018623:	add    BYTE PTR [rsi],dl
   140018625:	add    DWORD PTR [rax],eax
   140018627:	add    BYTE PTR [rbx+0x0],al
   14001862a:	push   rdx
   14001862b:	add    BYTE PTR [rbx+0x0],dh
   14001862e:	sbb    al,BYTE PTR [rcx]
   140018630:	jbe    0x140018632
   140018632:	pop    QWORD PTR [rax]
   140018634:	js     0x140018636
   140018636:	jns    0x140018638
   140018638:	push   rbp
   140018639:	add    BYTE PTR [rbp+0x0],bh
   14001863c:	jle    0x14001863e
   14001863e:	jg     0x140018640
   140018640:	(bad)  
   140018641:	add    BYTE PTR [rbx+0x0],dl
   140018644:	push   rsi
   140018645:	add    dh,bh
   140018647:	add    BYTE PTR [rax+0x0],bl
   14001864a:	test   DWORD PTR [rax],eax
   14001864c:	push   rcx
   14001864d:	add    BYTE PTR [rdi-0x76ffac00],al
   140018653:	add    BYTE PTR [rdx-0x73fee500],cl
   140018659:	add    BYTE PTR [rbp+0x47009100],cl
   14001865f:	add    BYTE PTR [rax],al
   140018661:	add    BYTE PTR [rdx],bh
   140018663:	add    BYTE PTR [rax+rax*1],dh
   140018666:	cmp    eax,DWORD PTR [rax]
   140018668:	xor    eax,0x0
   14001866d:	add    BYTE PTR [rax],al
   14001866f:	add    BYTE PTR [rax],al
   140018671:	add    BYTE PTR [rdi],dh
   140018673:	add    BYTE PTR [rax],al
   140018675:	add    BYTE PTR [rax],bh
   140018677:	add    BYTE PTR [rcx],bh
   140018679:	add    BYTE PTR [rsi],dh
	...
   140018683:	add    BYTE PTR [rax],dh
   140018685:	add    BYTE PTR [rax],al
   140018687:	add    BYTE PTR [rsi],ah
   140018689:	add    BYTE PTR [rdi],ah
   14001868b:	add    BYTE PTR [rax],al
   14001868d:	add    BYTE PTR [rax],ch
   14001868f:	add    BYTE PTR [rax],cl
   140018691:	add    BYTE PTR [rax],al
   140018693:	add    BYTE PTR [rax],al
   140018695:	add    BYTE PTR [rcx],cl
   140018697:	add    BYTE PTR [rax],al
   140018699:	add    BYTE PTR [rbx],cl
   14001869b:	add    BYTE PTR [rax],al
   14001869d:	add    BYTE PTR [rdx],cl
   14001869f:	add    BYTE PTR [rax],al
   1400186a1:	add    BYTE PTR [rcx],al
   1400186a3:	add    BYTE PTR [rbx],bl
   1400186a5:	add    BYTE PTR [rdi],cl
   1400186a7:	add    BYTE PTR [rsi],cl
   1400186a9:	add    BYTE PTR [rdx],bl
   1400186ab:	add    BYTE PTR [rip+0x1d000c00],cl        # 0x15d0192b1
   1400186b1:	add    BYTE PTR [rdi],al
   1400186b3:	add    BYTE PTR [rax],al
   1400186b5:	add    BYTE PTR [rdx],dl
   1400186b7:	add    BYTE PTR [rax],al
   1400186b9:	add    BYTE PTR [rbx],dl
   1400186bb:	add    BYTE PTR [rax],al
   1400186bd:	add    BYTE PTR [rax],bl
   1400186bf:	add    BYTE PTR [rcx],bl
   1400186c1:	add    BYTE PTR [rax],al
   1400186c3:	add    BYTE PTR [rax+rax*1],dl
   1400186c6:	adc    eax,0x16000000
   1400186cb:	add    BYTE PTR [rdi],dl
   1400186cd:	add    BYTE PTR [rax],dl
   1400186cf:	add    BYTE PTR [rcx],dl
   1400186d1:	add    BYTE PTR [rsi+0x1],ah
	...
   1400186e0:	(bad)  
   1400186e1:	add    BYTE PTR [rcx-0x39ff2cfe],al
   1400186e7:	add    cl,dl
   1400186e9:	add    BYTE PTR [rcx],cl
   1400186eb:	add    bh,ch
   1400186ed:	add    DWORD PTR [rdx+rax*1-0x77],edi
   1400186f1:	add    bh,ah
   1400186f3:	add    DWORD PTR [rbx+0x2],edi
   1400186f6:	jg     0x1400186fa
   1400186f8:	jge    0x1400186fc
   1400186fa:	test   DWORD PTR [rdx],eax
   1400186fc:	(bad)  
   1400186fd:	add    BYTE PTR [rdx+0x7e028002],al
   140018703:	add    dl,BYTE PTR [rdx]
   140018705:	add    BYTE PTR [rax],cl
   140018707:	add    dh,BYTE PTR [rdx]
   140018709:	add    ch,BYTE PTR [rax]
   14001870b:	add    ch,BYTE PTR [rdi]
   14001870d:	add    ch,BYTE PTR [rdx]
   14001870f:	add    bl,BYTE PTR [rbx]
   140018711:	add    al,cl
   140018713:	add    ch,al
   140018715:	add    bh,al
   140018717:	add    ah,cl
   140018719:	add    dl,ch
   14001871b:	add    ah,dl
   14001871d:	add    bh,ah
   14001871f:	add    BYTE PTR [rdi],bl
   140018721:	add    ah,BYTE PTR [rbp+0x2]
   140018724:	fs add cl,bl
   140018727:	add    cl,ch
   140018729:	add    BYTE PTR [rdx],bl
   14001872b:	add    bh,ah
   14001872d:	add    esi,esp
   14001872f:	add    DWORD PTR [rdi+0x1],esp
   140018732:	add    WORD PTR [rcx],cx
   140018735:	add    BYTE PTR [rbp+0x1],ah
   140018738:	push   0xffffffffe000ca01
   14001873d:	add    DWORD PTR [rcx+0x1],ebp
   140018740:	ins    DWORD PTR es:[rdi],dx
   140018741:	add    BYTE PTR [rcx],dl
   140018743:	add    BYTE PTR [rbx+0xd001800],dl
   140018749:	add    BYTE PTR [rdx+0x19001300],dl
   14001874f:	add    BYTE PTR [rbx],bh
   140018751:	add    BYTE PTR [rdi],dl
   140018753:	add    BYTE PTR [rax],cl
   140018755:	add    BYTE PTR [rax+rax*1],bl
   140018758:	sbb    eax,DWORD PTR [rax]
   14001875a:	sbb    BYTE PTR [rcx],al
   14001875c:	lldt   WORD PTR [rdx]
   14001875f:	add    DWORD PTR [rdx],ecx
   140018761:	add    BYTE PTR [rsi],cl
   140018763:	add    DWORD PTR [rax+rax*1],ecx
   140018766:	adc    BYTE PTR [rcx],al
   140018768:	or     eax,DWORD PTR [rax]
   14001876a:	lgdt   [rax+rax*1]
   14001876e:	(bad)  
   14001876f:	add    DWORD PTR [rip+0xe011700],edx        # 0x14e029e75
   140018775:	add    BYTE PTR [rcx],dl
   140018777:	add    DWORD PTR [rip+0xffffffff9e013601],ecx        # 0xde02bd7e
   14001877d:	add    DWORD PTR [rbx],edx
   14001877f:	add    DWORD PTR [rcx+rax*1],edx
   140018782:	int    0x0
   140018784:	ret    
   140018785:	add    dl,al
   140018787:	add    al,dl
   140018789:	add    bh,cl
   14001878b:	add    dh,ah
   14001878d:	add    ah,al
   14001878f:	add    BYTE PTR [rcx+rax*1+0x6b],ch
   140018793:	add    eax,ebp
   140018795:	add    bh,dl
   140018797:	add    esi,edx
   140018799:	add    DWORD PTR [rcx+rax*1+0x4d],ecx
   14001879d:	add    ecx,ebx
   14001879f:	add    DWORD PTR [rdi+0x1],ecx
   1400187a2:	fadd   DWORD PTR [rcx]
   1400187a4:	rex.WRX add QWORD PTR [rbx-0x4dfe50ff],r13
   1400187ab:	add    DWORD PTR [rsi-0x3efe52ff],ebp
   1400187b1:	add    edx,eax
   1400187b3:	add    eax,ecx
   1400187b5:	add    BYTE PTR [rdx-0x2dff3700],bh
   1400187bb:	add    BYTE PTR [rax],al
   1400187bd:	add    BYTE PTR [rax],al
   1400187bf:	add    BYTE PTR [rax],cl
   1400187c1:	add    ecx,ecx
   1400187c3:	add    al,0x94
   1400187c5:	or     dl,BYTE PTR [rdx+rcx*1+0x3aa0a2e]
   1400187cc:	pop    rsi
   1400187cd:	add    BYTE PTR [rax+0x0],ch
   1400187d0:	ja     0x1400187d2
   1400187d2:	xchg   esi,eax
   1400187d3:	call   FWORD PTR [rax+rax*1+0x4f]
   1400187d7:	add    BYTE PTR [rcx+0x0],dl
   1400187da:	(bad)  
   1400187db:	add    DWORD PTR [rsi+0x4e0107ff],edx
   1400187e1:	add    BYTE PTR [rsi-0x71006901],dl
   1400187e7:	add    bl,BYTE PTR [rcx+0x0]
   1400187ea:	jge    0x1400187ec
   1400187ec:	add    eax,DWORD PTR [rcx]
   1400187ee:	in     eax,0x0
   1400187f0:	xchg   esi,eax
   1400187f1:	call   QWORD PTR [rsi+0x42ff96ff]
   1400187f7:	add    DWORD PTR [rdx],edi
   1400187f9:	add    ecx,ecx
   1400187fb:	add    al,0x96
   1400187fd:	call   QWORD PTR [rsi-0x63006901]
   140018803:	add    DWORD PTR [rsi-0x3006901],edx
   140018809:	or     BYTE PTR [rcx-0x36fb36fa],dh
   14001880f:	add    al,0xc9
   140018811:	add    al,0x96
   140018813:	dec    DWORD PTR [rdx+0x3]
   140018816:	leave  
   140018817:	add    al,0x96
   140018819:	call   QWORD PTR [rsi-0x36006901]
   14001881f:	add    al,0xc9
   140018821:	add    al,0x96
   140018823:	call   QWORD PTR [rsi-0x69006901]
   140018829:	call   QWORD PTR [rsi-0x36006901]
   14001882f:	add    al,0x96
   140018831:	dec    ecx
   140018833:	add    al,0xc9
   140018835:	add    al,0x96
   140018837:	dec    ecx
   140018839:	add    al,0xc9
   14001883b:	add    al,0x8d
   14001883d:	add    al,bl
   14001883f:	add    BYTE PTR [rsi-0x36006901],dl
   140018845:	add    al,0xc9
   140018847:	add    al,0xc9
   140018849:	add    al,0x96
   14001884b:	call   QWORD PTR [rsi-0x2e006901]
   140018851:	add    cl,cl
   140018853:	add    al,0x19
   140018855:	add    ecx,ecx
   140018857:	add    al,0xc9
   140018859:	add    al,0xc9
   14001885b:	add    al,0xc9
   14001885d:	add    al,0x6f
   14001885f:	add    ecx,ecx
   140018861:	add    al,0xc9
   140018863:	add    al,0xc9
   140018865:	add    al,0xc9
   140018867:	add    al,0xc9
   140018869:	add    al,0xc9
   14001886b:	add    al,0xdb
   14001886d:	add    cl,cl
   14001886f:	add    al,0xc9
   140018871:	add    al,0xc9
   140018873:	add    al,0x65
   140018875:	add    BYTE PTR [rsi+0x0],ah
   140018878:	jae    0x14001887a
   14001887a:	cmp    al,BYTE PTR [rcx]
   14001887c:	cmp    al,BYTE PTR [rcx]
   14001887e:	cmp    al,BYTE PTR [rcx]
   140018880:	cmp    al,BYTE PTR [rcx]
   140018882:	cmp    al,BYTE PTR [rcx]
   140018884:	add    DWORD PTR gs:[rbx+0x1],ebx
   140018888:	push   rcx
   140018889:	add    ecx,ecx
   14001888b:	add    al,0x47
   14001888d:	add    cl,cl
   14001888f:	add    al,0x46
   140018891:	add    BYTE PTR [rsi-0x36fb36f8],dl
   140018897:	add    al,0x96
   140018899:	call   QWORD PTR [rsi-0x69006901]
   14001889f:	call   QWORD PTR [rsi-0x69006901]
   1400188a5:	call   QWORD PTR [rsi-0x69006901]
   1400188ab:	call   QWORD PTR [rsi-0x69006901]
   1400188b1:	call   QWORD PTR [rsi-0x69006901]
   1400188b7:	call   QWORD PTR [rsi-0x69006901]
   1400188bd:	call   QWORD PTR [rsi-0x69006901]
   1400188c3:	call   QWORD PTR [rsi-0x69006901]
   1400188c9:	call   QWORD PTR [rsi-0x69006901]
   1400188cf:	call   QWORD PTR [rsi-0x69006901]
   1400188d5:	call   QWORD PTR [rsi-0x69006901]
   1400188db:	jmp    QWORD PTR [rdx+0x0]
   1400188de:	leave  
   1400188df:	add    al,0x96
   1400188e1:	call   QWORD PTR [rsi+0x410042ff]
   1400188e7:	add    BYTE PTR [rsi-0x69fb3601],dl
   1400188ed:	call   QWORD PTR [rsi-0x69fb3601]
   1400188f3:	call   QWORD PTR [rsi-0x69006901]
   1400188f9:	call   QWORD PTR [rsi-0x69006901]
   1400188ff:	call   QWORD PTR [rsi-0x69006901]
   140018905:	call   QWORD PTR [rsi-0x69006901]
   14001890b:	dec    ecx
   14001890d:	add    al,0x2c
   14001890f:	add    cl,cl
   140018911:	add    al,0xc9
   140018913:	add    al,0x40
   140018915:	add    BYTE PTR [rcx],bh
   140018917:	add    cl,cl
   140018919:	add    al,0x96
   14001891b:	call   QWORD PTR [rsi-0x36fb36f8]
   140018921:	add    al,0x96
   140018923:	dec    DWORD PTR [rcx+0x31ff9600]
   140018929:	add    BYTE PTR [rsi+0x5dff96ff],dl
   14001892f:	add    BYTE PTR [rax+0x1],bl
   140018932:	fiadd  DWORD PTR [rcx]
   140018934:	pop    rdi
   140018935:	add    BYTE PTR [rsi+0x0],dl
   140018938:	xchg   esi,eax
   140018939:	inc    DWORD PTR [rsi+0x55ff9601]
   14001893f:	add    BYTE PTR [rdx+rcx*1-0x69006a],dl
   140018946:	xchg   esi,eax
   140018947:	call   QWORD PTR [rsi-0x42006901]
   14001894d:	add    BYTE PTR [rsi-0x69fe2501],dl
   140018953:	call   QWORD PTR [rax+0x0]
   140018956:	xchg   esi,eax
   140018957:	call   QWORD PTR [rsi+0x53ff96ff]
   14001895d:	add    BYTE PTR [rsi-0x69006901],dl
   140018963:	call   QWORD PTR [rdx+rcx*1-0x69006a]
   14001896a:	(bad)  
   14001896b:	add    DWORD PTR [rsi-0x7dfdd801],edx
   140018971:	add    BYTE PTR [rsi],ch
   140018973:	or     ch,BYTE PTR [rsi]
   140018975:	add    BYTE PTR [rbx],dh
   140018977:	add    BYTE PTR [rax+rax*1],dh
   14001897a:	(bad)  
   14001897b:	or     ecx,ecx
   14001897d:	add    al,0x96
   14001897f:	(bad)  
   140018980:	(bad)  
   140018981:	add    cl,cl
   140018983:	add    al,0x38
   140018985:	add    BYTE PTR [rsi+0x3c003aff],dl
   14001898b:	add    BYTE PTR [rsi-0x25006901],dl
   140018991:	add    DWORD PTR [rsi-0x69006901],edx
   140018997:	call   QWORD PTR [rsi-0x25ffc201]
   14001899d:	add    DWORD PTR [rsi],edi
   14001899f:	add    BYTE PTR [rbx+0x0],al
   1400189a2:	xchg   esp,eax
   1400189a3:	or     al,BYTE PTR [rax+rax*1-0x6a]
   1400189a7:	call   QWORD PTR [rsi-0x69f5d101]
   1400189ad:	call   QWORD PTR [rsi-0x69ffa801]
   1400189b3:	call   QWORD PTR [rsi-0x69006901]
   1400189b9:	jmp    FWORD PTR [rsi+0x0]
   1400189bc:	xchg   esi,eax
   1400189bd:	call   QWORD PTR [rsi-0x69006901]
   1400189c3:	call   QWORD PTR [rsi-0x17006901]
   1400189c9:	inc    DWORD PTR [rbp+0x0]
   1400189cc:	leave  
   1400189cd:	add    al,0x7a
   1400189cf:	add    BYTE PTR [rdi-0x69006a00],cl
   1400189d5:	call   QWORD PTR [rsi-0x69fa7401]
   1400189db:	dec    DWORD PTR [rdx+0x0]
   1400189de:	rex.WR add BYTE PTR [rbp+0x0],r9b
   1400189e2:	xchg   esi,eax
   1400189e3:	dec    DWORD PTR [rip+0x48004901]        # 0x18801d2ea
   1400189e9:	add    BYTE PTR [rbx+0x2],ah
   1400189ec:	rex.WXB add BYTE PTR [r10+0x0],sil
   1400189f0:	lea    eax,[rcx]
   1400189f2:	cmp    al,BYTE PTR [rcx]
   1400189f4:	fiadd  DWORD PTR [rcx]
   1400189f6:	leave  
   1400189f7:	add    al,0x1f
   1400189f9:	add    ecx,ecx
   1400189fb:	add    al,0xc9
   1400189fd:	add    al,0xc9
   1400189ff:	add    al,0xc9
   140018a01:	add    al,0x8d
   140018a03:	add    ecx,ecx
   140018a05:	add    al,0xc9
   140018a07:	add    al,0xc9
   140018a09:	add    al,0xc9
   140018a0b:	add    al,0xc9
   140018a0d:	add    al,0xda
   140018a0f:	add    bh,dl
   140018a11:	add    dh,al
   140018a13:	add    al,al
   140018a15:	add    BYTE PTR [rsi-0x72fe7300],dh
   140018a1b:	add    DWORD PTR [rax],edi
   140018a1d:	add    ecx,ecx
   140018a1f:	add    al,0x37
   140018a21:	add    cl,cl
   140018a23:	add    al,0x3b
   140018a25:	add    cl,cl
   140018a27:	add    al,0x96
   140018a29:	dec    DWORD PTR [rsi-0x69fb36fe]
   140018a2f:	dec    ecx
   140018a31:	add    al,0x36
   140018a33:	add    BYTE PTR [rip+0x3204c900],dh        # 0x172065339
   140018a39:	add    BYTE PTR [rsi],ch
   140018a3b:	or     dl,BYTE PTR [rsi+0x7c04c9ff]
   140018a41:	add    BYTE PTR [rsi],ch
   140018a43:	or     dl,BYTE PTR [rsi+0x5a04c9ff]
   140018a49:	add    cl,cl
   140018a4b:	add    al,0xc9
   140018a4d:	add    al,0x69
   140018a4f:	add    BYTE PTR [rax+0x0],bl
   140018a52:	leave  
   140018a53:	add    al,0x96
   140018a55:	call   QWORD PTR [rax+rax*1-0x63]
   140018a59:	add    ch,ah
   140018a5b:	call   QWORD PTR [rsi-0x36006901]
   140018a61:	add    al,0x96
   140018a63:	(bad)  
   140018a64:	fiadd  DWORD PTR [rcx]
   140018a66:	leave  
   140018a67:	add    al,0x96
   140018a69:	call   QWORD PTR [rdx+0x0]
   140018a6c:	leave  
   140018a6d:	add    al,0x5b
   140018a6f:	add    BYTE PTR [rsi],ch
   140018a71:	or     dl,BYTE PTR [rsi+0x7804c9ff]
   140018a77:	add    BYTE PTR [rsi],ch
   140018a79:	or     dl,BYTE PTR [rsi+0x6704c9ff]
   140018a7f:	add    BYTE PTR [rsi],ch
   140018a81:	or     dh,bh
   140018a83:	jmp    FWORD PTR [rsi]
   140018a85:	or     dl,BYTE PTR [rsi-0x69000101]
   140018a8b:	dec    DWORD PTR [rbx]
   140018a8d:	add    dl,ah
   140018a8f:	call   QWORD PTR [rcx]
   140018a91:	add    BYTE PTR [rsi+0x2eff96ff],dl
   140018a97:	or     bl,bl
   140018a99:	call   rbp
   140018a9b:	add    DWORD PTR [rdi],ecx
   140018a9d:	add    BYTE PTR [rdi],ah
   140018a9f:	add    cl,BYTE PTR [rdx+0x2e04c900]
   140018aa5:	or     cl,BYTE PTR [rsi]
   140018aa7:	add    al,dh
   140018aa9:	push   QWORD PTR [rcx-0x13f69dff]
   140018aaf:	dec    DWORD PTR [rdx+0x3]
   140018ab2:	(bad)  
   140018ab3:	add    BYTE PTR [rip+0x62052c00],al        # 0x1a206b6b9
   140018ab9:	or     DWORD PTR [rax+rax*1],eax
   140018abc:	fdiv   st(7),st
   140018abe:	add    al,BYTE PTR [rax]
   140018ac0:	leave  
   140018ac1:	add    al,0x7
   140018ac3:	add    dh,ch
   140018ac5:	dec    ecx
   140018ac7:	add    al,0xa
   140018ac9:	add    cl,cl
   140018acb:	add    al,0xe6
   140018acd:	push   rbx
   140018acf:	dec    eax
   140018ad1:	or     DWORD PTR [rsi-0x69006901],edx
   140018ad7:	call   QWORD PTR [rsi-0x69006901]
   140018add:	dec    ecx
   140018adf:	add    al,0x96
   140018ae1:	call   QWORD PTR [rsi-0x20006901]
   140018ae7:	inc    ebp
   140018ae9:	jmp    rdi
   140018aeb:	call   QWORD PTR [rdx+rcx*1-0x69ffe9]
   140018af2:	(bad)
   140018af5:	dec    ecx
   140018af7:	add    al,0xf4
   140018af9:	call   QWORD PTR [rsi-0x69ff7301]
   140018aff:	call   QWORD PTR [rsi-0x25ffe901]
   140018b05:	add    esp,edi
   140018b07:	call   FWORD PTR [rdx]
   140018b09:	add    BYTE PTR [rdx+rcx*1-0x69fff4],dl
   140018b10:	leave  
   140018b11:	add    al,0x71
   140018b13:	add    BYTE PTR [rsi],bl
   140018b15:	add    BYTE PTR [rsi-0x69ff7101],dl
   140018b1b:	dec    DWORD PTR [rsi-0x36ff8700]
   140018b21:	add    al,0x96
   140018b23:	(bad)  
   140018b24:	std    
   140018b25:	jmp    FWORD PTR [rip+0xfffffffffbff9600]        # 0x13c01212b
   140018b2b:	call   QWORD PTR [rsi-0x69f5d101]
   140018b31:	jmp    FWORD PTR [rax+rax*1+0x2e]
   140018b35:	or     dl,BYTE PTR [rsi-0x69ff3001]
   140018b3b:	call   QWORD PTR [rsi+0x2e006aff]
   140018b41:	or     ah,BYTE PTR [rip+0x19ff9600]        # 0x15a012147
   140018b47:	add    BYTE PTR [rax+rax*1],ah
   140018b4a:	xchg   esi,eax
   140018b4b:	(bad)  
   140018b4c:	fiadd  DWORD PTR [rcx]
   140018b4e:	add    BYTE PTR es:[rax],ch
   140018b51:	add    BYTE PTR [rsi-0x69006901],dl
   140018b57:	call   QWORD PTR [rsi-0x77fb3601]
   140018b5d:	add    BYTE PTR [rsi],ch
   140018b5f:	or     dl,BYTE PTR [rsi-0x59fb3601]
   140018b65:	add    BYTE PTR [rsi],ch
   140018b67:	or     dl,BYTE PTR [rsi-0x69fff201]
   140018b6d:	dec    eax
   140018b6f:	add    BYTE PTR [rsi-0x36006901],dl
   140018b75:	add    al,0x96
   140018b77:	call   QWORD PTR [rsi-0x69fe2501]
   140018b7d:	call   QWORD PTR [rsi+0x10ffefff]
   140018b83:	add    BYTE PTR [rdx+rcx*1-0x69000b],dl
   140018b8a:	xchg   esi,eax
   140018b8b:	inc    DWORD PTR [rbx-0x69f8ed00]
   140018b91:	call   QWORD PTR [rsi-0x69f9b001]
   140018b97:	call   QWORD PTR [rsi-0x69fa1201]
   140018b9d:	call   QWORD PTR [rsi-0x69006901]
   140018ba3:	call   QWORD PTR [rsi+0x6dff96ff]
   140018ba9:	add    BYTE PTR [rsi-0x69006901],dl
   140018baf:	call   QWORD PTR [rsi-0x69006901]
   140018bb5:	call   QWORD PTR [rsi-0x69006901]
   140018bbb:	call   QWORD PTR [rdx+rcx*1-0x69006a]
   140018bc2:	xchg   esi,eax
   140018bc3:	(bad)  
   140018bc4:	jmp    0x12d0178c9
   140018bc9:	add    bl,BYTE PTR [rax+0x29ffc400]
   140018bcf:	add    BYTE PTR [rsi-0x40006901],dl
   140018bd5:	add    BYTE PTR [rsi-0x69ff4e01],dl
   140018bdb:	call   QWORD PTR [rsi-0x7c006901]
   140018be1:	add    ebx,ecx
   140018be3:	add    BYTE PTR [rsi-0x69f88d01],dl
   140018be9:	call   QWORD PTR [rsi-0x69006901]
   140018bef:	call   QWORD PTR [rsi-0x69006901]
   140018bf5:	call   QWORD PTR [rsi-0x4b006901]
   140018bfb:	add    BYTE PTR [rbx],ch
   140018bfd:	add    BYTE PTR [rax+0x1],bh
   140018c00:	scas   al,BYTE PTR es:[rdi]
   140018c01:	add    BYTE PTR [rax],dh
   140018c03:	add    dl,bl
   140018c05:	add    eax,esi
   140018c07:	add    BYTE PTR [rsi-0x69fff701],dl
   140018c0d:	(bad)  
   140018c0e:	in     al,dx
   140018c0f:	add    ch,BYTE PTR [rdi+0x0]
   140018c12:	xchg   esi,eax
   140018c13:	(bad)  
   140018c14:	(bad)  
   140018c15:	(bad)  
   140018c16:	in     al,dx
   140018c17:	add    dl,BYTE PTR [rsi+0x6aff96ff]
   140018c1d:	add    al,0x96
   140018c1f:	call   QWORD PTR [rsi+0xaff96ff]
   140018c25:	add    al,0x96
   140018c27:	call   QWORD PTR [rsi-0x69ff1b01]
   140018c2d:	push   QWORD PTR [rdx+0x7]
   140018c30:	xchg   esi,eax
   140018c31:	jmp    QWORD PTR [rdi]
   140018c33:	add    DWORD PTR [rip+0xffffffff96ff9600],edx        # 0xd7012239
   140018c39:	(bad)  
   140018c3a:	mov    eax,0x27017b00
   140018c3f:	add    cl,dl
   140018c41:	(bad)  
   140018c42:	and    BYTE PTR [rcx],al
   140018c44:	cli    
   140018c45:	or     dl,BYTE PTR [rdx]
   140018c47:	add    BYTE PTR [rsi-0x1dffdd01],dl
   140018c4d:	add    DWORD PTR [rcx],esp
   140018c4f:	add    BYTE PTR [rdi],ah
   140018c51:	add    cl,BYTE PTR [rdx+0x2e04c900]
   140018c57:	or     bl,BYTE PTR [rdi]
   140018c59:	add    BYTE PTR [rcx],cl
   140018c5b:	add    BYTE PTR [rdi-0x7cfffcff],cl
   140018c61:	add    dl,BYTE PTR [rbx]
   140018c63:	add    BYTE PTR [rip+0x1c052c00],bl        # 0x15c06b869
   140018c69:	add    BYTE PTR [rcx],al
   140018c6b:	add    BYTE PTR [rbx],bl
   140018c6d:	add    cl,cl
   140018c6f:	add    al,0x18
   140018c71:	add    BYTE PTR [rax],al
   140018c73:	add    cl,cl
   140018c75:	add    al,0x14
   140018c77:	add    cl,cl
   140018c79:	add    al,0xf9
   140018c7b:	(bad)  
   140018c7c:	clc    
   140018c7d:	call   QWORD PTR [rsi-0x69ff3e01]
   140018c83:	dec    ebp
   140018c85:	add    BYTE PTR [rsi+0x2a002fff],dl
   140018c8b:	add    BYTE PTR [rcx+0x1],cl
   140018c8e:	rol    BYTE PTR [rax],1
   140018c90:	(bad)  
   140018c91:	add    DWORD PTR [rsi-0x69ff7f01],edx
   140018c97:	call   QWORD PTR [rsi+0x30ff96ff]
   140018c9d:	or     ah,ch
   140018c9f:	add    dh,BYTE PTR [rcx-0x69ffdcfa]
   140018ca5:	inc    DWORD PTR [rax+rax*1-0x69006a]
   140018cac:	and    BYTE PTR [rax],al
   140018cae:	xchg   esi,eax
   140018caf:	call   QWORD PTR [rsi-0x13fd1301]
   140018cb5:	add    bl,BYTE PTR [rsi+0x0]
   140018cb8:	in     al,dx
   140018cb9:	add    dl,BYTE PTR [rsi-0x69ff0501]
   140018cbf:	push   QWORD PTR [rax+rax*1-0x6a]
   140018cc3:	call   QWORD PTR [rsi-0x16ff1601]
   140018cc9:	add    BYTE PTR [rsi-0x69006901],dl
   140018ccf:	call   QWORD PTR [rsi-0x76006901]
   140018cd5:	add    DWORD PTR [rsi-0x69ff2901],edx
   140018cdb:	jmp    QWORD PTR [rax+rax*1-0x6a]
   140018cdf:	call   QWORD PTR [rsi-0x69fe2501]
   140018ce5:	call   QWORD PTR [rsi-0x69ff9f01]
   140018ceb:	call   QWORD PTR [rsi-0x69006901]
   140018cf1:	call   QWORD PTR [rsi+0xfff91ff]
   140018cf7:	add    BYTE PTR [rdi+0x0],al
   140018cfa:	push   rdi
   140018cfb:	add    BYTE PTR [rax+0x0],dl
   140018cfe:	xor    DWORD PTR [rcx],eax
   140018d00:	cli    
   140018d01:	call   QWORD PTR [rcx-0x6e006e01]
   140018d07:	call   QWORD PTR [rcx-0x6e006e01]
   140018d0d:	call   QWORD PTR [rcx-0x6e006e01]
   140018d13:	call   QWORD PTR [rcx-0x6e006e01]
   140018d19:	call   rsi
   140018d1b:	call   QWORD PTR [rcx-0x6e006e01]
   140018d21:	call   QWORD PTR [rcx-0x6e006e01]
   140018d27:	call   QWORD PTR [rcx-0x6e006e01]
   140018d2d:	call   FWORD PTR [rdi+0x0]
   140018d30:	xchg   ecx,eax
   140018d31:	call   QWORD PTR [rcx+0x3ff91ff]
   140018d37:	add    BYTE PTR [rcx-0x4006e01],dl
   140018d3d:	push   rbp
   140018d3f:	dec    DWORD PTR [rcx]
   140018d41:	add    BYTE PTR [rbp+0x0],ch
   140018d44:	pop    rbx
   140018d45:	add    BYTE PTR [rcx+0x2d003eff],dl
   140018d4b:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018d51:	push   QWORD PTR [rdx]
   140018d53:	add    BYTE PTR [rdi],bh
   140018d55:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018d5b:	call   QWORD PTR [rcx-0x6e006e01]
   140018d61:	jmp    QWORD PTR [rax]
   140018d63:	add    BYTE PTR [rcx-0x3aff3401],dl
   140018d69:	add    BYTE PTR [rcx-0x4dff4201],dl
   140018d6f:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018d75:	call   QWORD PTR [rcx-0x46ff4901]
   140018d7b:	add    BYTE PTR [rax+rax*1-0x6e006f],bh
   140018d82:	xchg   ecx,eax
   140018d83:	call   QWORD PTR [rcx-0x6eff3e01]
   140018d89:	inc    esi
   140018d8b:	add    BYTE PTR [rax+0x72007100],ch
   140018d91:	add    BYTE PTR [rcx+0x740085ff],dl
   140018d97:	add    BYTE PTR [rbx+0x0],bh
   140018d9a:	add    DWORD PTR [rax],0x840082
   140018da0:	xchg   ecx,eax
   140018da1:	dec    DWORD PTR [rax-0x71ff7500]
   140018da7:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018dad:	call   QWORD PTR [rcx-0x6e006e01]
   140018db3:	call   QWORD PTR [rcx-0x6e006e01]
   140018db9:	call   QWORD PTR [rcx-0x6b006e01]
   140018dbf:	add    BYTE PTR [rcx-0x6eff6801],dl
   140018dc5:	(bad)  
   140018dc6:	mov    edx,0xdb000600
   140018dcb:	call   QWORD PTR [rcx-0x6e006e01]
   140018dd1:	call   QWORD PTR [rcx-0x6e006e01]
   140018dd7:	call   QWORD PTR [rcx-0x6e006e01]
   140018ddd:	call   QWORD PTR [rcx-0x6e006e01]
   140018de3:	call   QWORD PTR [rcx-0x6e006e01]
   140018de9:	call   QWORD PTR [rcx-0x6e006e01]
   140018def:	call   QWORD PTR [rcx-0x6e006e01]
   140018df5:	call   QWORD PTR [rcx-0x6e006e01]
   140018dfb:	call   QWORD PTR [rcx-0x6e006e01]
   140018e01:	call   QWORD PTR [rcx-0x6e006e01]
   140018e07:	call   QWORD PTR [rcx-0x6e006e01]
   140018e0d:	call   QWORD PTR [rcx+0x2aff91ff]
   140018e13:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018e19:	call   QWORD PTR [rcx+0x16ff91ff]
   140018e1f:	add    BYTE PTR [rcx+0x2ff91ff],dl
   140018e25:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018e2b:	call   QWORD PTR [rcx-0x6e006e01]
   140018e31:	call   QWORD PTR [rcx-0x6e006e01]
   140018e37:	call   QWORD PTR [rcx-0x6e006e01]
   140018e3d:	call   QWORD PTR [rcx-0x6eff9f01]
   140018e43:	inc    DWORD PTR [rdx+0x0]
   140018e46:	adc    eax,0x91ff9100
   140018e4b:	inc    DWORD PTR [rax]
   140018e4d:	add    BYTE PTR [rcx+0x230112ff],dl
   140018e53:	add    BYTE PTR [rax+0x0],bl
   140018e56:	xchg   ecx,eax
   140018e57:	call   QWORD PTR [rcx-0x6e006e01]
   140018e5d:	call   QWORD PTR [rcx-0x6e006e01]
   140018e63:	jmp    FWORD PTR [rcx]
   140018e65:	add    BYTE PTR [rbx+0x0],cl
   140018e68:	xchg   ecx,eax
   140018e69:	call   QWORD PTR [rcx+0x31ff91ff]
   140018e6f:	add    BYTE PTR [rcx+0x30ff91ff],dl
   140018e75:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018e7b:	call   QWORD PTR [rcx-0x6e006e01]
   140018e81:	call   QWORD PTR [rcx-0x6effc601]
   140018e87:	call   QWORD PTR [rcx-0x6e006e01]
   140018e8d:	call   QWORD PTR [rcx-0x6e006e01]
   140018e93:	call   QWORD PTR [rcx+0x4dff91ff]
   140018e99:	add    BYTE PTR [rcx+0x36ff91ff],dl
   140018e9f:	add    BYTE PTR [rcx-0x6effe401],dl
   140018ea5:	push   rbx
   140018ea7:	add    BYTE PTR [rcx-0x6effe601],dl
   140018ead:	jmp    QWORD PTR [rax-0x6effdc00]
   140018eb3:	call   QWORD PTR [rcx+0x2800a9ff]
   140018eb9:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018ebf:	call   QWORD PTR [rcx+0x38ff91ff]
   140018ec5:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018ecb:	call   QWORD PTR [rcx-0x4b006e01]
   140018ed1:	add    BYTE PTR [rcx-0x5c006e01],dl
   140018ed7:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018edd:	push   rsi
   140018edf:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018ee5:	call   QWORD PTR [rcx-0x6e006e01]
   140018eeb:	call   QWORD PTR [rcx-0x6e006e01]
   140018ef1:	call   QWORD PTR [rcx-0x6e006e01]
   140018ef7:	call   QWORD PTR [rcx-0x6e006e01]
   140018efd:	call   QWORD PTR [rcx-0x6efff701]
   140018f03:	call   QWORD PTR [rcx-0x6e006e01]
   140018f09:	call   QWORD PTR [rcx-0x6effba01]
   140018f0f:	call   QWORD PTR [rcx-0x6e006e01]
   140018f15:	call   QWORD PTR [rcx-0x6e006e01]
   140018f1b:	call   QWORD PTR [rcx-0x6e006e01]
   140018f21:	call   QWORD PTR [rcx-0x6e006e01]
   140018f27:	(bad)  
   140018f28:	cmp    eax,0x9100d300
   140018f2d:	call   QWORD PTR [rax]
   140018f2f:	add    DWORD PTR [rcx],eax
   140018f31:	add    DWORD PTR [rax],eax
   140018f33:	add    esp,ebp
   140018f35:	add    BYTE PTR [rcx+0x530051ff],dl
   140018f3b:	add    BYTE PTR [rbp+0x0],dl
   140018f3e:	add    BYTE PTR [rsi+0x0],r11b
   140018f42:	xchg   ecx,eax
   140018f43:	call   QWORD PTR [rcx-0x6e006e01]
   140018f49:	call   QWORD PTR [rcx-0x6e006e01]
   140018f4f:	call   QWORD PTR [rcx-0x6eff1401]
   140018f55:	(bad)  
   140018f56:	fiadd  DWORD PTR [rax]
   140018f58:	xchg   ecx,eax
   140018f59:	call   rcx
   140018f5b:	add    BYTE PTR [rcx-0xb006e01],dl
   140018f61:	add    BYTE PTR [rcx-0x6eff1c01],dl
   140018f67:	call   QWORD PTR [rcx-0x6eff1b01]
   140018f6d:	(bad)  
   140018f6e:	out    dx,al
   140018f6f:	add    BYTE PTR [rcx-0x6effde01],dl
   140018f75:	jmp    QWORD PTR [rdi-0xa006f00]
   140018f7b:	add    BYTE PTR [rcx-0x1ff0201],dl
   140018f81:	add    BYTE PTR [rcx-0x1e006e01],dl
   140018f87:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018f8d:	call   QWORD PTR [rcx-0x6e006e01]
   140018f93:	(bad)  
   140018f94:	fld    DWORD PTR [rax]
   140018f96:	xchg   ecx,eax
   140018f97:	inc    edx
   140018f99:	add    ch,dl
   140018f9b:	add    BYTE PTR [rcx-0x2f006e01],dl
   140018fa1:	add    BYTE PTR [rcx-0x6eff3001],dl
   140018fa7:	push   QWORD PTR [rax+rax*1]
   140018faa:	xchg   ecx,eax
   140018fab:	dec    ebp
   140018fad:	add    BYTE PTR [rcx-0x6effc801],dl
   140018fb3:	dec    ecx
   140018fb5:	add    BYTE PTR [rcx-0x6eff3801],dl
   140018fbb:	call   QWORD PTR [rcx-0x6e006e01]
   140018fc1:	call   QWORD PTR [rcx-0x6e006e01]
   140018fc7:	call   QWORD PTR [rcx-0x6efee901]
   140018fcd:	jmp    QWORD PTR [rdi]
   140018fcf:	add    BYTE PTR [rcx-0x6effdd01],dl
   140018fd5:	jmp    FWORD PTR [rbp-0x6eff2500]
   140018fdb:	call   QWORD PTR [rcx-0x18ffca01]
   140018fe1:	add    BYTE PTR [rcx-0x6effb601],dl
   140018fe7:	call   QWORD PTR [rcx+0x3b002cff]
   140018fed:	add    BYTE PTR [rcx-0x6e006e01],dl
   140018ff3:	jmp    FWORD PTR [rdi]
   140018ff5:	add    BYTE PTR [rcx+0x660018ff],dl
   140018ffb:	add    BYTE PTR [rcx-0x6eff9a01],dl
   140019001:	call   QWORD PTR [rcx-0x6eff9001]
   140019007:	call   QWORD PTR [rcx-0x6e006e01]
   14001900d:	call   QWORD PTR [rcx+0x1aff91ff]
   140019013:	add    BYTE PTR [rcx-0x6e006e01],dl
   140019019:	call   QWORD PTR [rcx-0x6e006e01]
   14001901f:	inc    DWORD PTR [rcx+0x0]
   140019022:	xchg   ecx,eax
   140019023:	call   QWORD PTR [rcx-0x6e006e01]
   140019029:	dec    DWORD PTR [rax+rax*1-0x6f]
   14001902d:	call   QWORD PTR [rcx-0x6e006e01]
   140019033:	call   QWORD PTR [rcx+0x4fff91ff]
   140019039:	add    BYTE PTR [rcx+0x59ff91ff],dl
   14001903f:	add    BYTE PTR [rcx+0x33ff91ff],dl
   140019045:	add    BYTE PTR [rcx-0x6e006e01],dl
   14001904b:	call   QWORD PTR [rcx-0x3d006e01]
   140019051:	call   QWORD PTR [rcx-0x6effda01]
   140019057:	inc    ecx
   140019059:	call   QWORD PTR [rcx-0x6e006e01]
   14001905f:	call   QWORD PTR [rcx-0x6efe7c01]
   140019065:	call   QWORD PTR [rcx-0x6efef701]
   14001906b:	call   QWORD PTR [rcx-0x6e006e01]
   140019071:	call   QWORD PTR [rcx-0x35ff6101]
   140019077:	call   QWORD PTR [rcx+0x1cff91ff]
   14001907d:	add    BYTE PTR [rcx-0x6effd901],dl
   140019083:	call   QWORD PTR [rdi]
   140019085:	add    BYTE PTR [rcx-0x6e006e01],dl
   14001908b:	call   QWORD PTR [rcx-0x6effd401]
   140019091:	dec    DWORD PTR [rsi+0x0]
   140019094:	xchg   ecx,eax
   140019095:	(bad)  
   140019096:	cmp    al,BYTE PTR [rax]
   140019098:	xchg   ecx,eax
   140019099:	inc    DWORD PTR [rbx+0x0]
   14001909c:	xchg   ecx,eax
   14001909d:	call   QWORD PTR [rcx-0x6e006e01]
   1400190a3:	call   QWORD PTR [rcx+0x12ff91ff]
   1400190a9:	add    BYTE PTR [rcx-0x3c006e01],dl
   1400190af:	add    BYTE PTR [rcx-0x6e006e01],dl
   1400190b5:	call   QWORD PTR [rcx-0x6eff5e01]
   1400190bb:	call   QWORD PTR [rcx-0x6e006e01]
   1400190c1:	call   QWORD PTR [rax+rax*1]
   1400190c4:	xchg   ecx,eax
   1400190c5:	call   QWORD PTR [rcx-0x6eff6201]
   1400190cb:	call   QWORD PTR [rcx-0x6effe001]
   1400190d1:	call   QWORD PTR [rcx-0x6e006e01]
   1400190d7:	call   QWORD PTR [rcx-0x6e006e01]
   1400190dd:	call   QWORD PTR [rcx-0x6e006e01]
   1400190e3:	call   QWORD PTR [rcx-0x6e006e01]
   1400190e9:	call   QWORD PTR [rcx-0x6e006e01]
   1400190ef:	dec    esi
   1400190f1:	add    BYTE PTR [rcx-0x6e006e01],dl
   1400190f7:	call   QWORD PTR [rcx-0x6006e01]
   1400190fd:	call   QWORD PTR [rcx-0x6e006e01]
   140019103:	call   QWORD PTR [rcx-0x6e006e01]
   140019109:	call   QWORD PTR [rcx-0x6e001701]
   14001910f:	call   QWORD PTR [rcx-0xb006e01]
   140019115:	call   QWORD PTR [rcx+0x56ff91ff]
   14001911b:	add    DWORD PTR [rcx-0x6e006e01],edx
   140019121:	call   QWORD PTR [rcx-0x6e006e01]
   140019127:	call   QWORD PTR [rcx-0x6e006e01]
   14001912d:	call   QWORD PTR [rcx-0xf006e01]
   140019133:	jmp    rax
   140019135:	call   QWORD PTR [rcx-0x6efffa01]
   14001913b:	call   QWORD PTR [rcx-0x6e006e01]
   140019141:	call   FWORD PTR [rax-0x6e006f00]
   140019147:	call   QWORD PTR [rcx-0x6eff0701]
   14001914d:	call   QWORD PTR [rcx-0x6efeb501]
   140019153:	call   QWORD PTR [rcx+0x44ff91ff]
   140019159:	add    DWORD PTR [rcx-0x6e006e01],edx
   14001915f:	call   QWORD PTR [rcx-0x6efe7e01]
   140019165:	call   QWORD PTR [rcx-0x6e001401]
   14001916b:	call   QWORD PTR [rcx+0xe0001ff]
   140019171:	add    BYTE PTR [rcx-0x6efe9001],dl
   140019177:	(bad)  
   140019178:	call   0xd1019d7d
   14001917d:	call   QWORD PTR [rcx-0x6efff401]
   140019183:	dec    DWORD PTR [rdx]
   140019185:	add    BYTE PTR [rcx-0x72ff5b01],dl
   14001918b:	add    BYTE PTR [rcx+0x7ff91ff],dl
   140019191:	add    BYTE PTR [rcx-0x6effbf01],dl
   140019197:	call   QWORD PTR [rcx-0x6effec01]
   14001919d:	call   QWORD PTR [rcx+0x11ff91ff]
   1400191a3:	add    BYTE PTR [rcx+0x3cffffff],dl
   1400191a9:	add    BYTE PTR [rcx-0x6effd101],dl
   1400191af:	call   QWORD PTR [rcx-0x6e006e01]
   1400191b5:	call   QWORD PTR [rcx-0x6e000e01]
   1400191bb:	call   QWORD PTR [rcx-0x1006e01]
   1400191c1:	(bad)  
   1400191c2:	out    dx,eax
   1400191c3:	(bad)  
   1400191c4:	cld    
   1400191c5:	call   QWORD PTR [rcx-0x6e006e01]
   1400191cb:	call   QWORD PTR [rcx-0x1b006e01]
   1400191d1:	add    DWORD PTR [rdx-0x2fec700],ecx
   1400191d7:	call   QWORD PTR [rcx-0x6e006e01]
   1400191dd:	call   QWORD PTR [rcx-0x6efffb01]
   1400191e3:	call   QWORD PTR [rcx+0x10000dff]
   1400191e9:	add    BYTE PTR [rcx+0x0],ah
   1400191ec:	jg     0x1400191ee
   1400191ee:	xchg   ecx,eax
   1400191ef:	call   QWORD PTR [rcx-0x6e006e01]
   1400191f5:	call   QWORD PTR [rcx-0x6e006e01]
   1400191fb:	call   QWORD PTR [rcx-0x6e006e01]
   140019201:	call   QWORD PTR [rcx-0x6e006e01]
   140019207:	push   rdx
   140019209:	call   QWORD PTR [rcx-0x6e006e01]
   14001920f:	call   QWORD PTR [rcx-0x6e006e01]
   140019215:	(bad)  
   140019216:	clc    
   140019217:	call   QWORD PTR [rcx-0x6e006e01]
   14001921d:	call   QWORD PTR [rcx-0x6e006e01]
   140019223:	call   QWORD PTR [rcx+0xff91ff]
   140019229:	add    BYTE PTR [rax],al
   14001922b:	add    BYTE PTR [rax],al
   14001922d:	add    BYTE PTR [rax],al
   14001922f:	add    BYTE PTR [rax-0x4ffe6aff],ch
   140019235:	add    DWORD PTR [rcx+rax*1+0xf5015a],edx
   14001923c:	cmp    eax,0x96016202
   140019241:	add    DWORD PTR [rdx-0x1],edi
   140019244:	int    0x1
   140019246:	nop
   140019247:	dec    DWORD PTR [rdi+0x78ff7dff]
   14001924d:	inc    eax
   14001924f:	add    DWORD PTR [rsi+0x1],ebx
   140019252:	jne    0x140019253
   140019254:	xchg   edx,eax
   140019255:	add    DWORD PTR [rax-0x7afef3ff],ecx
   14001925b:	push   QWORD PTR [rdx-0x1]
   14001925e:	rol    DWORD PTR [rcx],1
   140019260:	pop    QWORD PTR [rcx]
   140019262:	mov    es,WORD PTR [rcx]
   140019264:	jge    0x140019265
   140019266:	jne    0x140019267
   140019268:	rol    DWORD PTR [rcx],1
   14001926a:	int    0x1
   14001926c:	fiadd  DWORD PTR [rcx]
   14001926e:	js     0x14001926f
   140019270:	cs add al,al
   140019273:	add    DWORD PTR [rdx-0x1],edi
   140019276:	nop
   140019277:	dec    DWORD PTR [rdi-0x7afe5701]
   14001927d:	call   FWORD PTR [rsi+0x1]
   140019280:	jb     0x140019281
   140019282:	cmc    
   140019283:	add    BYTE PTR [rdi],ah
   140019285:	add    ah,cl
   140019287:	add    esp,esp
   140019289:	add    DWORD PTR [rcx+rax*1],ecx
   14001928c:	add    cl,BYTE PTR [rdx+rax*1]
   140019290:	popf   
   140019291:	add    edx,esp
   140019293:	add    DWORD PTR [rsi-0x48fdd1ff],esi
   140019299:	add    DWORD PTR [rip+0x67022e01],eax        # 0x1a703c0a0
   14001929f:	add    ah,BYTE PTR [rcx+rax*1+0x1a201c4]
   1400192a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400192a7:	add    DWORD PTR [rbx],ebx
   1400192a9:	add    esi,eax
   1400192ab:	add    DWORD PTR [rdi-0x53fe5400],ecx
   1400192b1:	add    BYTE PTR [rsi],ch
   1400192b3:	add    ah,BYTE PTR [rsi+0x2e01a700]
   1400192b9:	add    al,al
   1400192bb:	add    DWORD PTR [rax+0x2],esp
   1400192be:	rex.WB add BYTE PTR [r10],spl
   1400192c1:	add    al,al
   1400192c3:	add    DWORD PTR [rbp+0x11b00],edx
   1400192c9:	add    BYTE PTR [rbx+0x1],al
   1400192cc:	cwde   
   1400192cd:	add    DWORD PTR [rax],eax
   1400192cf:	add    BYTE PTR [rax],ah
   1400192d1:	add    dh,BYTE PTR [rbx]
   1400192d3:	add    DWORD PTR [rcx+rax*1],ecx
   1400192d6:	add    BYTE PTR [rax],al
   1400192d8:	add    BYTE PTR [rax],al
   1400192da:	add    BYTE PTR [rax],al
   1400192dc:	pop    QWORD PTR [rax]
   1400192de:	mov    eax,0xc0015e00
   1400192e3:	add    ebp,esi
   1400192e5:	add    BYTE PTR [rsi+0x49006500],ah
   1400192eb:	add    ch,cl
   1400192ed:	add    DWORD PTR [rcx+0x1],ecx
   1400192f0:	rol    DWORD PTR [rcx],1
   1400192f2:	out    dx,al
   1400192f3:	add    al,cl
   1400192f5:	add    DWORD PTR [rax+0x5000f101],ebp
   1400192fb:	add    DWORD PTR [rdx+0x2],ebp
   1400192fe:	mov    ebp,0x6029900
   140019303:	add    DWORD PTR [rdi+0x14300],ecx
   140019309:	add    BYTE PTR [rbp-0x70fec300],dh
   14001930f:	add    bl,al
   140019311:	add    DWORD PTR [rax],eax
   140019313:	add    BYTE PTR [rbx],bh
   140019315:	add    DWORD PTR [rdx-0x70ff70ff],edi
   14001931b:	add    al,al
   14001931d:	add    BYTE PTR [rbx],ch
   14001931f:	add    al,BYTE PTR [rax]
   140019321:	add    BYTE PTR [rdi-0xcff1000],cl
   140019327:	add    BYTE PTR [rdi],ch
   140019329:	add    DWORD PTR [rdi+0x6501c400],edx
   14001932f:	add    BYTE PTR [rdi-0x70ff4700],cl
   140019335:	add    BYTE PTR [rbx+0x38008f01],dh
   14001933b:	add    DWORD PTR [rcx],esi
   14001933d:	add    esp,esi
   14001933f:	add    BYTE PTR [rax],al
   140019341:	add    BYTE PTR [rax],al
   140019343:	add    BYTE PTR [rdi],ch
   140019345:	add    edx,ebp
   140019347:	add    DWORD PTR [rbx],ebp
   140019349:	add    bh,BYTE PTR [rax+rax*1]
   14001934c:	cmp    al,0x0
   14001934e:	push   rsi
   14001934f:	add    DWORD PTR [rdi-0x40ff7100],ecx
   140019355:	add    BYTE PTR [rax-0x4ff03ff],dh
   14001935b:	add    BYTE PTR [rdi+0x0],ah
   14001935e:	pop    rax
   14001935f:	add    DWORD PTR [rip+0xffffffff90003d00],edi        # 0xd001d065
   140019365:	add    BYTE PTR [rax+rax*1],bh
   140019368:	xor    DWORD PTR [rcx],eax
   14001936a:	xchg   esi,eax
   14001936b:	add    dl,BYTE PTR [rbp+0x67003c02]
   140019371:	add    BYTE PTR [rax+0x60028f02],dl
   140019377:	add    DWORD PTR [rbp+0x1],eax
   14001937a:	push   rdx
   14001937b:	add    DWORD PTR [rip+0x46022c00],edi        # 0x18603bf81
   140019381:	add    ebp,esi
   140019383:	add    DWORD PTR [rip+0x10100],edi        # 0x140029489
   140019389:	add    DWORD PTR [rdx-0x57ff70ff],ebp
   14001938f:	add    BYTE PTR [rcx+rax*1+0x2970298],dh
   140019396:	test   eax,0x1e015c00
   14001939b:	add    cl,BYTE PTR [rax]
   14001939d:	add    DWORD PTR [rax+0x0],eax
   1400193a0:	add    DWORD PTR [r9+0x2],edi
   1400193a4:	jp     0x1400193a8
   1400193a6:	jmp    0x1400193a9
   1400193a8:	je     0x1400193ac
   1400193aa:	ins    BYTE PTR es:[rdi],dx
   1400193ab:	add    ch,BYTE PTR [rbx+0x2]
   1400193ae:	add    eax,DWORD PTR [rcx]
   1400193b0:	add    al,BYTE PTR [rcx]
   1400193b2:	mov    bl,0x0
   1400193b4:	add    BYTE PTR [r14-0x70fe3100],bpl
   1400193bb:	add    BYTE PTR [rsi+0x2],ch
   1400193be:	add    eax,DWORD PTR [rcx]
   1400193c0:	add    al,BYTE PTR [rcx]
   1400193c2:	movabs al,ds:0x9010b020d019f01
   1400193cb:	add    DWORD PTR [rip+0xffffffffdd005702],ecx        # 0x11d01ead3
   1400193d1:	add    DWORD PTR [rax+0x0],ebx
   1400193d4:	adc    eax,DWORD PTR [rdx]
   1400193d6:	add    BYTE PTR [rax],al
   1400193d8:	scas   al,BYTE PTR es:[rdi]
   1400193d9:	add    BYTE PTR [rip+0xffffffff8f00af02],cl        # 0xcf0242e1
   1400193df:	add    BYTE PTR [rbx+0x53005701],bl
   1400193e5:	add    DWORD PTR [rax+0x0],ebx
   1400193e8:	pop    rcx
   1400193e9:	add    BYTE PTR [rdx+0x0],al
   1400193ec:	add    BYTE PTR [rax],al
   1400193ee:	push   rdi
   1400193ef:	add    BYTE PTR [rsi],ch
   1400193f1:	add    bl,BYTE PTR [rax+0x0]
   1400193f4:	rol    DWORD PTR [rcx],cl
   1400193f6:	lar    eax,WORD PTR [rdx+0x0]
   1400193fa:	(bad)  
   1400193fc:	pop    rcx
   1400193fd:	add    BYTE PTR [rdi-0x64fef600],ch
   140019403:	add    DWORD PTR [rip+0x59023702],ecx        # 0x19903cb0b
   140019409:	add    BYTE PTR [rip+0x20e02],cl        # 0x14003a211
   14001940f:	add    BYTE PTR [rdi+0x0],dl
   140019412:	rex.X add BYTE PTR [rax+0x0],bl
   140019416:	push   rdi
   140019417:	add    BYTE PTR [rdi+0x0],dl
   14001941a:	pop    rax
   14001941b:	add    BYTE PTR [rax+0x0],bl
   14001941e:	and    eax,0xf00ae02
   140019423:	add    ch,ah
   140019425:	add    bl,ch
   140019427:	add    BYTE PTR [rdi],cl
   140019429:	add    bl,BYTE PTR [rcx+0x0]
   14001942c:	movsxd eax,DWORD PTR [rdx]
   14001942e:	(bad)  
   14001942f:	add    bl,BYTE PTR [rcx+0x0]
   140019432:	pop    rcx
   140019433:	add    BYTE PTR [rax],al
   140019435:	add    BYTE PTR [rdi],cl
   140019437:	add    cl,BYTE PTR [rsi]
   140019439:	add    bl,dh
   14001943b:	add    esp,ebx
   14001943d:	add    DWORD PTR [rsi],ecx
   14001943f:	add    dl,BYTE PTR [rdx+rax*1]
   140019442:	adc    al,BYTE PTR [rdx]
   140019444:	rex.XB add BYTE PTR [r15-0x42fe4200],bpl
   14001944b:	add    DWORD PTR [rsi],ecx
   14001944d:	add    al,BYTE PTR [rax]
   14001944f:	add    BYTE PTR [rax+rax*1+0x43],al
   140019453:	add    BYTE PTR [rsi-0x6dfd6d00],ch
   140019459:	add    ch,BYTE PTR [rcx+0x0]
   14001945c:	add    BYTE PTR [rax],al
   14001945e:	add    BYTE PTR [rdi],r9b
   140019461:	add    cl,BYTE PTR [rbx+0x0]
   140019464:	rex.WR add BYTE PTR [rdi],r9b
   140019467:	add    al,BYTE PTR [rax]
   140019469:	add    BYTE PTR [rdi+0x2],ch
   14001946c:	rex.XB add BYTE PTR [rip+0x38011e01],bl        # 0x17802b274
   140019473:	add    dh,BYTE PTR [rsi]
   140019475:	add    cl,BYTE PTR [rsi]
   140019477:	add    al,BYTE PTR [rax+rax*1-0x51]
   14001947b:	add    BYTE PTR [rsi],cl
   14001947d:	add    dh,BYTE PTR [rax-0x73ff9600]
   140019483:	add    ch,BYTE PTR [rbx+0x0]
   140019486:	rex.WXB add BYTE PTR [r8+r8*1+0x26],cl
   14001948b:	add    ah,BYTE PTR [rdx+rax*1]
   14001948e:	scas   al,BYTE PTR es:[rdi]
   14001948f:	add    BYTE PTR [rax],al
   140019491:	add    BYTE PTR [rip+0xffffffff91011e01],bl        # 0xd102b298
   140019497:	add    cl,BYTE PTR [rbp+0x0]
   14001949a:	rex.WRX add BYTE PTR [rsi-0x74fd7300],r13b
   1400194a1:	add    al,BYTE PTR [rax]
   1400194a3:	add    BYTE PTR [rdi],bl
   1400194a5:	add    DWORD PTR [rax],esp
   1400194a7:	add    DWORD PTR [rax],eax
	...
   1400194b1:	add    BYTE PTR [rbp+0xafff],bl
   1400194b7:	add    BYTE PTR [rax+0x4d000000],dh
   1400194bd:	add    BYTE PTR [rsi+0x0],cl
   1400194c0:	popf   
   1400194c1:	jmp    FWORD PTR [rdi-0x50000000]
   1400194c7:	add    BYTE PTR [rdi],bl
   1400194c9:	add    DWORD PTR [rax],esp
   1400194cb:	add    DWORD PTR [rax],eax
   1400194cd:	add    BYTE PTR [rdx],ah
   1400194cf:	add    DWORD PTR [rbx],esp
   1400194d1:	add    DWORD PTR [rax],eax
   1400194d3:	add    BYTE PTR [rax],al
   1400194d5:	add    BYTE PTR [rdi+0x0],dl
   1400194d8:	add    BYTE PTR [rax],al
   1400194da:	pop    rax
   1400194db:	add    BYTE PTR [rax],al
   1400194dd:	add    BYTE PTR [rdx+0x50012402],cl
   1400194e3:	add    BYTE PTR [rcx+0x0],dl
   1400194e6:	and    eax,0x26002301
   1400194eb:	add    DWORD PTR [rax],eax
   1400194ed:	add    BYTE PTR [rax],al
   1400194ef:	add    BYTE PTR [rcx+0x0],bl
   1400194f2:	push   rdx
   1400194f3:	add    BYTE PTR [rbx+0x0],dl
   1400194f6:	add    BYTE PTR [rax],al
   1400194f8:	add    BYTE PTR [rax],al
   1400194fa:	push   rsp
   1400194fb:	add    BYTE PTR [rbx],ah
   1400194fd:	add    BYTE PTR [rbp+0x0],dl
   140019500:	push   rax
   140019501:	add    BYTE PTR [rcx+0x0],dl
   140019504:	(bad)  
   140019505:	add    BYTE PTR [rip+0x1000400],al        # 0x14101990b
   14001950b:	add    BYTE PTR [rbx],al
   14001950d:	add    BYTE PTR [rdx],al
   14001950f:	add    BYTE PTR [rdx+0x0],dl
   140019512:	push   rbx
   140019513:	add    BYTE PTR [rax+0x0],dl
   140019516:	push   rcx
   140019517:	add    BYTE PTR [rax+rax*1+0x23],dl
   14001951b:	add    BYTE PTR [rbp+0x0],dl
   14001951e:	add    BYTE PTR [rax],al
   140019520:	add    BYTE PTR [rax],al
   140019522:	add    BYTE PTR [rax],al
   140019524:	push   rdx
   140019525:	add    BYTE PTR [rbx+0x0],dl
   140019528:	push   rax
   140019529:	add    BYTE PTR [rcx+0x0],dl
   14001952c:	push   rsp
   14001952d:	add    BYTE PTR [rax],al
   14001952f:	add    BYTE PTR [rbp+0x0],dl
   140019532:	xor    DWORD PTR [rax],eax
   140019534:	xor    al,0x0
   140019536:	xor    al,BYTE PTR [rax]
   140019538:	push   rdx
   140019539:	add    BYTE PTR [rbx+0x0],dl
   14001953c:	push   rax
   14001953d:	add    BYTE PTR [rcx+0x0],dl
   140019540:	push   rsp
   140019541:	add    BYTE PTR [rax],al
   140019543:	add    BYTE PTR [rbp+0x0],dl
   140019546:	xor    DWORD PTR [rax],eax
   140019548:	xor    al,0x0
   14001954a:	xor    al,BYTE PTR [rax]
   14001954c:	push   rdx
   14001954d:	add    BYTE PTR [rbx+0x0],dl
   140019550:	add    BYTE PTR [rax],al
   140019552:	add    BYTE PTR [rax],al
   140019554:	push   rsp
   140019555:	add    BYTE PTR [rax],al
   140019557:	add    BYTE PTR [rbp+0x0],dl
   14001955a:	and    eax,DWORD PTR [rax]
   14001955c:	add    BYTE PTR [rax],al
   14001955e:	add    BYTE PTR [rax],al
   140019560:	and    eax,DWORD PTR [rax]
   140019562:	add    BYTE PTR [rax],al
   140019564:	xor    DWORD PTR [rax],eax
   140019566:	xor    al,0x0
   140019568:	xor    al,BYTE PTR [rax]
   14001956a:	add    BYTE PTR cs:[rdx],ah
   14001956d:	add    BYTE PTR [rbx],dh
   14001956f:	add    BYTE PTR [rbx],ah
   140019571:	add    BYTE PTR [rax],al
   140019573:	add    BYTE PTR [rax],al
   140019575:	add    BYTE PTR [rbx],ah
   140019577:	add    BYTE PTR [rdx],ah
   140019579:	add    DWORD PTR [rbx],esp
   14001957b:	add    DWORD PTR [rbx],esp
   14001957d:	add    BYTE PTR [rsi],ch
   14001957f:	add    BYTE PTR [rdx],ah
   140019581:	add    BYTE PTR [rbx],dh
   140019583:	add    BYTE PTR [rax],al
   140019585:	add    BYTE PTR [rax],al
   140019587:	add    BYTE PTR [rbx],ah
   140019589:	add    BYTE PTR [rcx+rax*1],ah
   14001958c:	add    BYTE PTR [rax],al
   14001958e:	add    BYTE PTR [rax],al
   140019590:	and    eax,0x26000001
   140019595:	add    DWORD PTR [rax+0x0],edi
   14001959b:	add    BYTE PTR [rsi],ch
   14001959d:	add    BYTE PTR [rdx],ah
   14001959f:	add    BYTE PTR [rbx],dh
   1400195a1:	add    BYTE PTR [rbx],ah
   1400195a3:	add    BYTE PTR [rcx],dh
   1400195a5:	add    BYTE PTR [rax+rax*1],dh
   1400195a8:	xor    al,BYTE PTR [rax]
   1400195aa:	xor    DWORD PTR [rax],eax
   1400195ac:	xor    al,0x0
   1400195ae:	xor    al,BYTE PTR [rax]
   1400195b0:	mov    eax,0x0
   1400195b5:	add    BYTE PTR [rax],al
   1400195b7:	add    BYTE PTR [rax],al
   1400195b9:	add    BYTE PTR [rcx],dh
   1400195bb:	add    BYTE PTR [rax+rax*1],dh
   1400195be:	xor    al,BYTE PTR [rax]
   1400195c0:	xor    DWORD PTR [rax],eax
   1400195c2:	xor    al,0x0
   1400195c4:	xor    al,BYTE PTR [rax]
   1400195c6:	xor    DWORD PTR [rax],eax
   1400195c8:	xor    al,0x0
   1400195ca:	xor    al,BYTE PTR [rax]
   1400195cc:	and    eax,DWORD PTR [rax]
   1400195ce:	add    BYTE PTR [rax],al
   1400195d0:	add    BYTE PTR [rax],al
   1400195d2:	xor    DWORD PTR [rax],eax
   1400195d4:	xor    al,0x0
   1400195d6:	xor    al,BYTE PTR [rax]
   1400195d8:	add    BYTE PTR [rax],al
   1400195da:	mov    eax,0x22002e00
   1400195df:	add    BYTE PTR [rbx],dh
   1400195e1:	add    BYTE PTR [rsi],ch
   1400195e3:	add    BYTE PTR [rdx],ah
   1400195e5:	add    BYTE PTR [rbx],dh
   1400195e7:	add    BYTE PTR [rax],al
   1400195e9:	add    BYTE PTR [rax],al
   1400195eb:	add    BYTE PTR [rcx],dh
   1400195ed:	add    BYTE PTR [rax+rax*1],dh
   1400195f0:	xor    al,BYTE PTR [rax]
   1400195f2:	add    BYTE PTR cs:[rdx],ah
   1400195f5:	add    BYTE PTR [rbx],dh
   1400195f7:	add    BYTE PTR [rsi],ch
   1400195f9:	add    BYTE PTR [rdx],ah
   1400195fb:	add    BYTE PTR [rbx],dh
   1400195fd:	add    BYTE PTR [rsi],ch
   1400195ff:	add    BYTE PTR [rdx],ah
   140019601:	add    BYTE PTR [rbx],dh
   140019603:	add    BYTE PTR [rax],al
   140019605:	add    BYTE PTR [rax],al
   140019607:	add    BYTE PTR [rax],al
   140019609:	add    BYTE PTR [rsi],ch
   14001960b:	add    BYTE PTR [rdx],ah
   14001960d:	add    BYTE PTR [rbx],dh
   14001960f:	add    BYTE PTR [rax],al
   140019611:	add    BYTE PTR [rax],al
   140019613:	add    BYTE PTR [rbx],ah
   140019615:	add    BYTE PTR [rcx],dh
   140019617:	add    BYTE PTR [rax+rax*1],dh
   14001961a:	xor    al,BYTE PTR [rax]
   14001961c:	add    BYTE PTR [rax],al
   14001961e:	and    eax,DWORD PTR [rax]
   140019620:	add    BYTE PTR [rax],al
   140019622:	add    BYTE PTR [rax],al
   140019624:	add    BYTE PTR cs:[rdx],ah
   140019627:	add    BYTE PTR [rbx],dh
   140019629:	add    BYTE PTR [rax],al
   14001962b:	add    BYTE PTR [rax],al
   14001962d:	add    BYTE PTR [rbx],ah
	...
   14001963b:	add    BYTE PTR [rax],al
   14001963d:	add    BYTE PTR [rbx],ah
	...
   14001964b:	add    BYTE PTR [rax],al
   14001964d:	add    BYTE PTR [rsi],ch
   14001964f:	add    BYTE PTR [rdx],ah
   140019651:	add    BYTE PTR [rbx],dh
   140019653:	add    dl,bh
   140019655:	add    cl,bh
   140019657:	add    BYTE PTR [rax],al
   140019659:	add    BYTE PTR [rax],al
   14001965b:	add    BYTE PTR [rax],al
   14001965d:	add    BYTE PTR [rcx],dh
   14001965f:	add    BYTE PTR [rax+rax*1],dh
   140019662:	xor    al,BYTE PTR [rax]
   140019664:	add    BYTE PTR [rax],al
   140019666:	add    BYTE PTR [rax],al
   140019668:	xor    DWORD PTR [rax],eax
   14001966a:	xor    al,0x0
   14001966c:	xor    al,BYTE PTR [rax]
   14001966e:	cli    
   14001966f:	add    cl,bh
   140019671:	add    BYTE PTR [rax],al
   140019673:	add    BYTE PTR [rax],al
   140019675:	add    BYTE PTR [rax],al
   140019677:	add    BYTE PTR [rcx],dh
   140019679:	add    BYTE PTR [rax+rax*1],dh
   14001967c:	xor    al,BYTE PTR [rax]
   14001967e:	cli    
   14001967f:	add    cl,bh
   140019681:	add    BYTE PTR [rax],al
   140019683:	add    BYTE PTR [rax],al
   140019685:	add    BYTE PTR [rax],al
   140019687:	add    BYTE PTR [rcx],dh
   140019689:	add    BYTE PTR [rax+rax*1],dh
   14001968c:	xor    al,BYTE PTR [rax]
	...
   140019696:	add    BYTE PTR cs:[rdx],ah
   140019699:	add    BYTE PTR [rbx],dh
   14001969b:	add    BYTE PTR [rax],al
   14001969d:	add    BYTE PTR [rax],al
   14001969f:	add    BYTE PTR [rsi],ch
   1400196a1:	add    BYTE PTR [rdx],ah
   1400196a3:	add    BYTE PTR [rbx],dh
	...
   1400196ad:	add    BYTE PTR [rax],al
   1400196af:	add    BYTE PTR [rsi],ch
   1400196b1:	add    BYTE PTR [rdx],ah
   1400196b3:	add    BYTE PTR [rbx],dh
   1400196b5:	add    BYTE PTR [rax],al
   1400196b7:	add    BYTE PTR [rbx],ah
   1400196b9:	add    BYTE PTR [rax],al
   1400196bb:	add    BYTE PTR [rax],al
   1400196bd:	add    BYTE PTR [rax],al
   1400196bf:	add    BYTE PTR [rsi],ch
   1400196c1:	add    BYTE PTR [rdx],ah
   1400196c3:	add    BYTE PTR [rbx],dh
	...
   1400196f5:	add    BYTE PTR [rax],al
   1400196f7:	add    bh,bh
   1400196f9:	add    dh,bh
   1400196fb:	add    BYTE PTR [rcx+0x0],bl
   140019701:	add    BYTE PTR [rcx],dh
   140019703:	add    BYTE PTR [rax+rax*1],dh
   140019706:	xor    al,BYTE PTR [rax]
	...
   140019710:	(bad)  
   140019711:	add    BYTE PTR [rax],al
   140019713:	add    BYTE PTR [rax],al
   140019715:	add    BYTE PTR [rax],al
   140019717:	add    BYTE PTR [rbx+0x0],bl
	...
   140019729:	add    BYTE PTR [rax+rax*1+0x9d0000],bl
   140019730:	add    BYTE PTR [rax],al
   140019732:	add    BYTE PTR [rax],al
   140019734:	(bad)  
   140019735:	add    DWORD PTR [rax],eax
   140019737:	add    BYTE PTR [rax],al
   140019739:	add    BYTE PTR [rsi],ch
   14001973b:	add    BYTE PTR [rdx],ah
   14001973d:	add    BYTE PTR [rbx],dh
   14001973f:	add    BYTE PTR [rax],al
   140019741:	add    BYTE PTR [rax],al
   140019743:	add    BYTE PTR [rsi-0x61000000],bl
   140019749:	add    BYTE PTR [rax+0x0],al
   14001974c:	add    BYTE PTR [rax],al
   14001974e:	(bad)  
   14001974f:	add    BYTE PTR [rdi],bl
   140019751:	add    BYTE PTR [rcx+0x0],bl
   140019757:	add    BYTE PTR [rax+0x0],ah
   14001975d:	add    BYTE PTR [rcx+0x21004100],ah
   140019763:	add    BYTE PTR [rax],al
   140019765:	add    BYTE PTR [rdx-0x5e000000],bl
   14001976b:	add    BYTE PTR [rax],al
   14001976d:	add    BYTE PTR [rbx+0x2300],bl
   140019773:	add    BYTE PTR [rax],al
   140019775:	add    BYTE PTR [rbx+0x25002400],ah
   14001977b:	add    BYTE PTR [rax],al
   14001977d:	add    BYTE PTR [rsi],ah
   14001977f:	add    BYTE PTR [rax+rax*1+0x9d0000],bl
   140019786:	add    BYTE PTR [rax],al
   140019788:	add    BYTE PTR [rax],al
   14001978a:	add    BYTE PTR [rax],al
   14001978c:	sub    al,BYTE PTR [rax]
   14001978e:	add    BYTE PTR [rax],al
   140019790:	add    BYTE PTR [rax],al
   140019792:	add    BYTE PTR [rax],al
   140019794:	sub    eax,0xa400
   140019799:	add    BYTE PTR [rsi-0x61000000],bl
   14001979f:	add    BYTE PTR [rax+0x0],al
	...
   1400197ae:	movabs al,ds:0x4100a10000000000
   1400197b7:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401c8bd
   1400197bd:	add    BYTE PTR [rdx],dh
   1400197bf:	add    BYTE PTR [rdx+0x3600],ah
   1400197c5:	add    BYTE PTR [rax],al
   1400197c7:	add    BYTE PTR [rax],al
   1400197c9:	add    BYTE PTR [rax],al
   1400197cb:	add    BYTE PTR [rbx+0x0],ah
   1400197d1:	add    BYTE PTR [rax],al
   1400197d3:	add    BYTE PTR [rax],al
   1400197d5:	add    BYTE PTR [rax],al
   1400197d7:	add    BYTE PTR [rax+rax*1],ch
   1400197da:	cmp    BYTE PTR [rax],al
   1400197dc:	and    BYTE PTR [rax],al
   1400197de:	add    BYTE PTR [rax],al
   1400197e0:	add    BYTE PTR [rax],al
   1400197e2:	add    BYTE PTR [rax],al
   1400197e4:	sub    DWORD PTR [rax],eax
   1400197e6:	add    BYTE PTR [rax],al
   1400197e8:	add    BYTE PTR [rax],al
   1400197ea:	add    BYTE PTR [rax],al
   1400197ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400197ed:	add    BYTE PTR [rax],al
   1400197ef:	add    BYTE PTR [rax],al
   1400197f1:	add    BYTE PTR [rsi],ch
   1400197f3:	add    BYTE PTR [rdx],ah
   1400197f5:	add    BYTE PTR [rbx],dh
	...
   14001981f:	add    BYTE PTR [rsi],bl
   140019821:	add    BYTE PTR [rdi],bl
	...
   140019833:	add    BYTE PTR [rcx],ah
	...
   140019841:	add    BYTE PTR [rbx],ah
   140019843:	add    BYTE PTR [rax],al
   140019845:	add    BYTE PTR [rax],al
   140019847:	add    BYTE PTR [rax],al
   140019849:	add    BYTE PTR [rax+rax*1],ah
   14001984c:	and    eax,0x26000000
	...
   14001985d:	add    BYTE PTR [rdx+rax*1],al
   140019860:	add    BYTE PTR [rax],al
   140019862:	add    BYTE PTR [rax],al
   140019864:	add    BYTE PTR [rax],al
   140019866:	sub    eax,0x0
	...
   140019887:	add    BYTE PTR [rax],al
   140019889:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401c98f
   14001988f:	add    BYTE PTR [rdx],dh
   140019891:	add    BYTE PTR [rax],al
   140019893:	add    BYTE PTR [rsi],dh
	...
   1400198a9:	add    BYTE PTR [rax+rax*1],ch
   1400198ac:	cmp    BYTE PTR [rax],al
   1400198ae:	and    BYTE PTR [rax],al
   1400198b0:	add    BYTE PTR [rax],al
   1400198b2:	add    BYTE PTR [rax],al
   1400198b4:	add    BYTE PTR [rax],al
   1400198b6:	sub    DWORD PTR [rax],eax
	...
   1400198c4:	add    BYTE PTR cs:[rdx],ah
   1400198c7:	add    BYTE PTR [rbx],dh
	...
   1400198d9:	add    BYTE PTR [rax],al
   1400198db:	add    BYTE PTR [rsi],bl
   1400198dd:	add    BYTE PTR [rdi],bl
	...
   1400198ef:	add    BYTE PTR [rcx],ah
	...
   1400198fd:	add    BYTE PTR [rbx],ah
   1400198ff:	add    BYTE PTR [rax],al
   140019901:	add    BYTE PTR [rax],al
   140019903:	add    BYTE PTR [rax],al
   140019905:	add    BYTE PTR [rax+rax*1],ah
   140019908:	and    eax,0x26000000
	...
   140019919:	add    BYTE PTR [rdx],ch
   14001991b:	add    BYTE PTR [rax],al
   14001991d:	add    BYTE PTR [rax],al
   14001991f:	add    BYTE PTR [rax],al
   140019921:	add    BYTE PTR [rip+0x0],ch        # 0x140019927
	...
   140019943:	add    BYTE PTR [rax],al
   140019945:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401ca4b
   14001994b:	add    BYTE PTR [rdx],dh
   14001994d:	add    BYTE PTR [rax],al
   14001994f:	add    BYTE PTR [rsi],dh
	...
   140019965:	add    BYTE PTR [rax+rax*1],ch
   140019968:	cmp    BYTE PTR [rax],al
   14001996a:	and    BYTE PTR [rax],al
   14001996c:	add    BYTE PTR [rax],al
   14001996e:	add    BYTE PTR [rax],al
   140019970:	add    BYTE PTR [rax],al
   140019972:	sub    DWORD PTR [rax],eax
	...
   140019980:	add    BYTE PTR cs:[rdx],ah
   140019983:	add    BYTE PTR [rbx],dh
	...
   140019995:	add    BYTE PTR [rax],al
   140019997:	add    BYTE PTR [rbx],al
   140019999:	add    al,BYTE PTR [rax]
   14001999b:	add    BYTE PTR [rsi],bl
   14001999d:	add    BYTE PTR [rdi],bl
	...
   1400199af:	add    bl,bl
	...
   1400199bd:	add    BYTE PTR [rbx],ah
   1400199bf:	add    BYTE PTR [rax],al
   1400199c1:	add    BYTE PTR [rax],al
   1400199c3:	add    BYTE PTR [rax],al
   1400199c5:	add    BYTE PTR [rax+rax*1],ah
   1400199c8:	and    eax,0x26000000
	...
   1400199d9:	add    BYTE PTR [rdx+rax*1],al
   1400199dc:	add    BYTE PTR [rax],al
   1400199de:	add    BYTE PTR [rax],al
   1400199e0:	add    BYTE PTR [rax],al
   1400199e2:	sub    eax,0x0
	...
   140019a03:	add    BYTE PTR [rax],al
   140019a05:	add    BYTE PTR [rip+0x7020500],dh        # 0x147039f0b
   140019a0b:	add    al,BYTE PTR [rsi]
   140019a0d:	add    al,BYTE PTR [rax]
   140019a0f:	add    BYTE PTR [rsi],dh
	...
   140019a19:	add    bl,ah
	...
   140019a23:	add    BYTE PTR [rax],al
   140019a25:	add    BYTE PTR [rax+rax*1],ch
   140019a28:	cmp    BYTE PTR [rax],al
   140019a2a:	and    BYTE PTR [rax],al
   140019a2c:	(bad)  
   140019a2d:	add    BYTE PTR [rax],al
   140019a2f:	add    BYTE PTR [rax],al
   140019a31:	add    BYTE PTR [rcx],ch
	...
   140019a3f:	add    BYTE PTR [rsi],ch
   140019a41:	add    BYTE PTR [rdx],ah
   140019a43:	add    BYTE PTR [rbx],dh
	...
   140019a55:	add    BYTE PTR [rax],al
   140019a57:	add    BYTE PTR [rbx],al
   140019a59:	add    al,BYTE PTR [rax]
   140019a5b:	add    BYTE PTR [rsi],bl
   140019a5d:	add    BYTE PTR [rdi],bl
	...
   140019a6f:	add    bl,bl
	...
   140019a7d:	add    BYTE PTR [rbx],ah
   140019a7f:	add    BYTE PTR [rax],al
   140019a81:	add    BYTE PTR [rax],al
   140019a83:	add    BYTE PTR [rax],al
   140019a85:	add    BYTE PTR [rax+rax*1],ah
   140019a88:	and    eax,0x26000000
	...
   140019a99:	add    BYTE PTR [rdx+rax*1],al
   140019a9c:	add    BYTE PTR [rax],al
   140019a9e:	add    BYTE PTR [rax],al
   140019aa0:	add    BYTE PTR [rax],al
   140019aa2:	sub    eax,0x0
	...
   140019aaf:	add    BYTE PTR [rax],al
   140019ab1:	add    BYTE PTR [rbx],dh
   140019ab3:	add    al,BYTE PTR [rax]
	...
   140019ac5:	add    BYTE PTR [rip+0x7020500],dh        # 0x147039fcb
   140019acb:	add    al,BYTE PTR [rsi]
   140019acd:	add    al,BYTE PTR [rax]
   140019acf:	add    BYTE PTR [rsi],dh
	...
   140019ad9:	add    bl,ah
	...
   140019ae3:	add    BYTE PTR [rax],al
   140019ae5:	add    BYTE PTR [rax+rax*1],ch
   140019ae8:	cmp    BYTE PTR [rax],al
   140019aea:	and    BYTE PTR [rax],al
   140019aec:	(bad)  
   140019aed:	add    BYTE PTR [rax],al
   140019aef:	add    BYTE PTR [rax],al
   140019af1:	add    BYTE PTR [rcx],ch
	...
   140019aff:	add    BYTE PTR [rsi],ch
   140019b01:	add    BYTE PTR [rdx],ah
   140019b03:	add    BYTE PTR [rbx],dh
	...
   140019b15:	add    BYTE PTR [rax],al
   140019b17:	add    BYTE PTR [rbx],al
   140019b19:	add    al,BYTE PTR [rax]
   140019b1b:	add    BYTE PTR [rsi],bl
   140019b1d:	add    BYTE PTR [rdi],bl
	...
   140019b2f:	add    bl,bl
	...
   140019b3d:	add    BYTE PTR [rbx],ah
   140019b3f:	add    BYTE PTR [rax],al
   140019b41:	add    BYTE PTR [rax],al
   140019b43:	add    BYTE PTR [rax],al
   140019b45:	add    BYTE PTR [rax+rax*1],ah
   140019b48:	and    eax,0x26000000
	...
   140019b59:	add    BYTE PTR [rdx+rax*1],al
   140019b5c:	add    BYTE PTR [rax],al
   140019b5e:	add    BYTE PTR [rax],al
   140019b60:	add    BYTE PTR [rax],al
   140019b62:	sub    eax,0x0
	...
   140019b6f:	add    BYTE PTR [rax],al
   140019b71:	add    BYTE PTR [rax],dh
   140019b73:	add    al,BYTE PTR [rax]
	...
   140019b85:	add    BYTE PTR [rip+0x7020500],dh        # 0x14703a08b
   140019b8b:	add    al,BYTE PTR [rsi]
   140019b8d:	add    al,BYTE PTR [rax]
   140019b8f:	add    BYTE PTR [rsi],dh
	...
   140019b99:	add    bl,ah
	...
   140019ba3:	add    BYTE PTR [rax],al
   140019ba5:	add    BYTE PTR [rax+rax*1],ch
   140019ba8:	cmp    BYTE PTR [rax],al
   140019baa:	and    BYTE PTR [rax],al
   140019bac:	(bad)  
   140019bad:	add    BYTE PTR [rax],al
   140019baf:	add    BYTE PTR [rax],al
   140019bb1:	add    BYTE PTR [rcx],ch
	...
   140019bbf:	add    BYTE PTR [rsi],ch
   140019bc1:	add    BYTE PTR [rdx],ah
   140019bc3:	add    BYTE PTR [rbx],dh
	...
   140019bd5:	add    BYTE PTR [rax],al
   140019bd7:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01b9dd
	...
   140019bed:	add    BYTE PTR [rcx],ah
	...
   140019bfb:	add    BYTE PTR [rbx],ah
   140019bfd:	add    BYTE PTR [rax],al
   140019bff:	add    BYTE PTR [rax],al
   140019c01:	add    BYTE PTR [rax],al
   140019c03:	add    BYTE PTR [rax+rax*1],ah
   140019c06:	and    eax,0x26000000
   140019c0b:	add    BYTE PTR [rax],al
   140019c0d:	add    BYTE PTR [rax],al
   140019c0f:	add    BYTE PTR [rax],al
   140019c11:	add    BYTE PTR [rdi],ah
   140019c13:	add    BYTE PTR [rax],al
   140019c15:	add    BYTE PTR [rax],ch
   140019c17:	add    BYTE PTR [rdx],ch
   140019c19:	add    BYTE PTR [rbx],ch
   140019c1b:	add    BYTE PTR [rax],al
   140019c1d:	add    BYTE PTR [rax],al
   140019c1f:	add    BYTE PTR [rip+0x0],ch        # 0x140019c25
   140019c25:	add    BYTE PTR [rax],al
   140019c27:	add    BYTE PTR [rdi],ch
   140019c29:	add    BYTE PTR [rax],al
   140019c2b:	add    BYTE PTR [rax],dh
	...
   140019c41:	add    BYTE PTR [rax],al
   140019c43:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401cd49
   140019c49:	add    BYTE PTR [rdx],dh
   140019c4b:	add    BYTE PTR [rax],al
   140019c4d:	add    BYTE PTR [rsi],dh
   140019c4f:	add    BYTE PTR [rax],al
   140019c51:	add    BYTE PTR [rdi],dh
   140019c53:	add    BYTE PTR [rax],al
   140019c55:	add    BYTE PTR [rcx],bh
   140019c57:	add    BYTE PTR [rax],al
   140019c59:	add    BYTE PTR [rdx],bh
	...
   140019c63:	add    BYTE PTR [rax+rax*1],ch
   140019c66:	cmp    BYTE PTR [rax],al
   140019c68:	and    BYTE PTR [rax],al
   140019c6a:	add    BYTE PTR [rax],al
   140019c6c:	add    BYTE PTR [rax],al
   140019c6e:	add    BYTE PTR [rax],al
   140019c70:	sub    DWORD PTR [rax],eax
	...
   140019c7e:	add    BYTE PTR cs:[rdx],ah
   140019c81:	add    BYTE PTR [rbx],dh
	...
   140019c93:	add    BYTE PTR [rax],al
   140019c95:	add    BYTE PTR [rdi+rdi*8+0x0],bh
   140019c99:	add    BYTE PTR [rax],al
   140019c9b:	add    BYTE PTR [rax],al
   140019c9d:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01baa3
	...
   140019cb3:	add    BYTE PTR [rcx],ah
	...
   140019cc1:	add    BYTE PTR [rbx],ah
   140019cc3:	add    BYTE PTR [rax],al
   140019cc5:	add    BYTE PTR [rax],al
   140019cc7:	add    BYTE PTR [rax],al
   140019cc9:	add    BYTE PTR [rax+rax*1],ah
   140019ccc:	and    eax,0x26000000
   140019cd1:	add    BYTE PTR [rax],al
   140019cd3:	add    BYTE PTR [rax],al
   140019cd5:	add    BYTE PTR [rax],al
   140019cd7:	add    BYTE PTR [rdi],ah
   140019cd9:	add    BYTE PTR [rax],al
   140019cdb:	add    BYTE PTR [rax],ch
   140019cdd:	add    BYTE PTR [rdx],ch
   140019cdf:	add    BYTE PTR [rbx],ch
   140019ce1:	add    BYTE PTR [rax],al
   140019ce3:	add    BYTE PTR [rax],al
   140019ce5:	add    BYTE PTR [rip+0x0],ch        # 0x140019ceb
   140019ceb:	add    BYTE PTR [rax],al
   140019ced:	add    BYTE PTR [rdi],ch
   140019cef:	add    BYTE PTR [rax],al
   140019cf1:	add    BYTE PTR [rax],dh
	...
   140019d07:	add    BYTE PTR [rax],al
   140019d09:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401ce0f
   140019d0f:	add    BYTE PTR [rdx],dh
   140019d11:	add    BYTE PTR [rax],al
   140019d13:	add    BYTE PTR [rsi],dh
   140019d15:	add    BYTE PTR [rax],al
   140019d17:	add    BYTE PTR [rdi],dh
   140019d19:	add    BYTE PTR [rax],al
   140019d1b:	add    BYTE PTR [rcx],bh
   140019d1d:	add    BYTE PTR [rax],al
   140019d1f:	add    BYTE PTR [rdx],bh
	...
   140019d29:	add    BYTE PTR [rax+rax*1],ch
   140019d2c:	cmp    BYTE PTR [rax],al
   140019d2e:	and    BYTE PTR [rax],al
   140019d30:	add    BYTE PTR [rax],al
   140019d32:	add    BYTE PTR [rax],al
   140019d34:	add    BYTE PTR [rax],al
   140019d36:	sub    DWORD PTR [rax],eax
	...
   140019d44:	add    BYTE PTR cs:[rdx],ah
   140019d47:	add    BYTE PTR [rbx],dh
	...
   140019d59:	add    BYTE PTR [rax],al
   140019d5b:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01bb61
	...
   140019d71:	add    BYTE PTR [rcx],ah
	...
   140019d7f:	add    BYTE PTR [rbx],ah
   140019d81:	add    BYTE PTR [rax],al
   140019d83:	add    BYTE PTR [rax],al
   140019d85:	add    BYTE PTR [rax],al
   140019d87:	add    BYTE PTR [rax+rax*1],ah
   140019d8a:	and    eax,0x26000000
   140019d8f:	add    BYTE PTR [rax],al
   140019d91:	add    BYTE PTR [rax],al
   140019d93:	add    BYTE PTR [rax],al
   140019d95:	add    BYTE PTR [rdi],ah
   140019d97:	add    BYTE PTR [rax],al
   140019d99:	add    BYTE PTR [rax],ch
   140019d9b:	add    BYTE PTR [rdx],ch
   140019d9d:	add    BYTE PTR [rbx],ch
   140019d9f:	add    BYTE PTR [rax],al
   140019da1:	add    BYTE PTR [rax],al
   140019da3:	add    BYTE PTR [rip+0x0],ch        # 0x140019da9
   140019da9:	add    BYTE PTR [rax],al
   140019dab:	add    BYTE PTR [rdi],ch
   140019dad:	add    BYTE PTR [rax],al
   140019daf:	add    BYTE PTR [rax],dh
	...
   140019dc5:	add    BYTE PTR [rax],al
   140019dc7:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401cecd
   140019dcd:	add    BYTE PTR [rdx],dh
   140019dcf:	add    BYTE PTR [rax],al
   140019dd1:	add    BYTE PTR [rsi],dh
   140019dd3:	add    BYTE PTR [rax],al
   140019dd5:	add    BYTE PTR [rdi],dh
   140019dd7:	add    BYTE PTR [rax],al
   140019dd9:	add    BYTE PTR [rcx],bh
   140019ddb:	add    BYTE PTR [rdx],bl
   140019ddd:	add    DWORD PTR [rdx],edi
	...
   140019de7:	add    BYTE PTR [rax+rax*1],ch
   140019dea:	cmp    BYTE PTR [rax],al
   140019dec:	and    BYTE PTR [rax],al
   140019dee:	add    BYTE PTR [rax],al
   140019df0:	add    BYTE PTR [rax],al
   140019df2:	add    BYTE PTR [rax],al
   140019df4:	sub    DWORD PTR [rax],eax
	...
   140019e02:	add    BYTE PTR cs:[rdx],ah
   140019e05:	add    BYTE PTR [rbx],dh
	...
   140019e17:	add    BYTE PTR [rax],al
   140019e19:	add    al,dh
   140019e1b:	add    DWORD PTR [rax],eax
   140019e1d:	add    BYTE PTR [rax],al
   140019e1f:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01bc25
	...
   140019e35:	add    BYTE PTR [rcx],ah
	...
   140019e43:	add    BYTE PTR [rbx],ah
   140019e45:	add    BYTE PTR [rax],al
   140019e47:	add    BYTE PTR [rax],al
   140019e49:	add    BYTE PTR [rax],al
   140019e4b:	add    BYTE PTR [rax+rax*1],ah
   140019e4e:	and    eax,0x26000000
   140019e53:	add    BYTE PTR [rax],al
   140019e55:	add    BYTE PTR [rax],al
   140019e57:	add    BYTE PTR [rax],al
   140019e59:	add    BYTE PTR [rdi],ah
   140019e5b:	add    BYTE PTR [rax],al
   140019e5d:	add    BYTE PTR [rax],ch
   140019e5f:	add    BYTE PTR [rdx],ch
   140019e61:	add    BYTE PTR [rbx],ch
   140019e63:	add    BYTE PTR [rax],al
   140019e65:	add    BYTE PTR [rax],al
   140019e67:	add    BYTE PTR [rip+0x0],ch        # 0x140019e6d
   140019e6d:	add    BYTE PTR [rax],al
   140019e6f:	add    BYTE PTR [rdi],ch
   140019e71:	add    BYTE PTR [rax],al
   140019e73:	add    BYTE PTR [rax],dh
   140019e75:	add    BYTE PTR [rax],al
   140019e77:	add    BYTE PTR [rax],al
   140019e79:	add    cl,dh
   140019e7b:	add    DWORD PTR [rax],eax
	...
   140019e89:	add    BYTE PTR [rax],al
   140019e8b:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401cf91
   140019e91:	add    BYTE PTR [rdx],dh
   140019e93:	add    BYTE PTR [rax],al
   140019e95:	add    BYTE PTR [rsi],dh
   140019e97:	add    BYTE PTR [rax],al
   140019e99:	add    BYTE PTR [rdi],dh
   140019e9b:	add    BYTE PTR [rax],al
   140019e9d:	add    BYTE PTR [rcx],bh
   140019e9f:	add    BYTE PTR [rax],al
   140019ea1:	add    BYTE PTR [rdx],bh
	...
   140019eab:	add    BYTE PTR [rax+rax*1],ch
   140019eae:	cmp    BYTE PTR [rax],al
   140019eb0:	and    BYTE PTR [rax],al
   140019eb2:	add    BYTE PTR [rax],al
   140019eb4:	add    BYTE PTR [rax],al
   140019eb6:	add    BYTE PTR [rax],al
   140019eb8:	sub    DWORD PTR [rax],eax
	...
   140019ec6:	add    BYTE PTR cs:[rdx],ah
   140019ec9:	add    BYTE PTR [rbx],dh
	...
   140019edb:	add    BYTE PTR [rax],al
   140019edd:	add    al,ch
   140019edf:	add    DWORD PTR [rax],eax
   140019ee1:	add    BYTE PTR [rax],al
   140019ee3:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01bce9
	...
   140019ef9:	add    BYTE PTR [rcx],ah
	...
   140019f07:	add    BYTE PTR [rbx],ah
   140019f09:	add    BYTE PTR [rax],al
   140019f0b:	add    BYTE PTR [rax],al
   140019f0d:	add    BYTE PTR [rax],al
   140019f0f:	add    BYTE PTR [rax+rax*1],ah
   140019f12:	and    eax,0x26000000
   140019f17:	add    BYTE PTR [rax],al
   140019f19:	add    BYTE PTR [rax],al
   140019f1b:	add    BYTE PTR [rax],al
   140019f1d:	add    BYTE PTR [rdi],ah
   140019f1f:	add    BYTE PTR [rax],al
   140019f21:	add    BYTE PTR [rax],ch
   140019f23:	add    BYTE PTR [rdx],ch
   140019f25:	add    BYTE PTR [rbx],ch
   140019f27:	add    BYTE PTR [rax],al
   140019f29:	add    BYTE PTR [rax],al
   140019f2b:	add    BYTE PTR [rip+0x0],ch        # 0x140019f31
   140019f31:	add    BYTE PTR [rax],al
   140019f33:	add    BYTE PTR [rdi],ch
   140019f35:	add    BYTE PTR [rax],al
   140019f37:	add    BYTE PTR [rax],dh
   140019f39:	add    BYTE PTR [rax],al
   140019f3b:	add    BYTE PTR [rax],al
   140019f3d:	add    dh,ch
   140019f3f:	add    DWORD PTR [rax],eax
	...
   140019f4d:	add    BYTE PTR [rax],al
   140019f4f:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401d055
   140019f55:	add    BYTE PTR [rdx],dh
   140019f57:	add    BYTE PTR [rax],al
   140019f59:	add    BYTE PTR [rsi],dh
   140019f5b:	add    BYTE PTR [rax],al
   140019f5d:	add    BYTE PTR [rdi],dh
   140019f5f:	add    BYTE PTR [rax],al
   140019f61:	add    BYTE PTR [rcx],bh
   140019f63:	add    BYTE PTR [rax],al
   140019f65:	add    BYTE PTR [rdx],bh
	...
   140019f6f:	add    BYTE PTR [rax+rax*1],ch
   140019f72:	cmp    BYTE PTR [rax],al
   140019f74:	and    BYTE PTR [rax],al
   140019f76:	add    BYTE PTR [rax],al
   140019f78:	add    BYTE PTR [rax],al
   140019f7a:	add    BYTE PTR [rax],al
   140019f7c:	sub    DWORD PTR [rax],eax
	...
   140019f8a:	add    BYTE PTR cs:[rdx],ah
   140019f8d:	add    BYTE PTR [rbx],dh
	...
   140019f9f:	add    BYTE PTR [rax],al
   140019fa1:	add    al,ch
   140019fa3:	add    DWORD PTR [rax],eax
   140019fa5:	add    BYTE PTR [rax],al
   140019fa7:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01bdad
	...
   140019fbd:	add    BYTE PTR [rcx],ah
	...
   140019fcb:	add    BYTE PTR [rbx],ah
   140019fcd:	add    BYTE PTR [rax],al
   140019fcf:	add    BYTE PTR [rax],al
   140019fd1:	add    BYTE PTR [rax],al
   140019fd3:	add    BYTE PTR [rax+rax*1],ah
   140019fd6:	and    eax,0x26000000
   140019fdb:	add    BYTE PTR [rax],al
   140019fdd:	add    BYTE PTR [rax],al
   140019fdf:	add    BYTE PTR [rax],al
   140019fe1:	add    BYTE PTR [rdi],ah
   140019fe3:	add    BYTE PTR [rax],al
   140019fe5:	add    BYTE PTR [rax],ch
   140019fe7:	add    BYTE PTR [rdx],ch
   140019fe9:	add    BYTE PTR [rbx],ch
   140019feb:	add    BYTE PTR [rax],al
   140019fed:	add    BYTE PTR [rax],al
   140019fef:	add    BYTE PTR [rip+0x0],ch        # 0x140019ff5
   140019ff5:	add    BYTE PTR [rax],al
   140019ff7:	add    BYTE PTR [rdi],ch
   140019ff9:	add    BYTE PTR [rax],al
   140019ffb:	add    BYTE PTR [rax],dh
   140019ffd:	add    BYTE PTR [rax],al
   140019fff:	add    BYTE PTR [rax],al
   14001a001:	add    cl,ch
   14001a003:	add    DWORD PTR [rax],eax
	...
   14001a011:	add    BYTE PTR [rax],al
   14001a013:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401d119
   14001a019:	add    BYTE PTR [rdx],dh
   14001a01b:	add    BYTE PTR [rax],al
   14001a01d:	add    BYTE PTR [rsi],dh
   14001a01f:	add    BYTE PTR [rax],al
   14001a021:	add    BYTE PTR [rdi],dh
   14001a023:	add    BYTE PTR [rax],al
   14001a025:	add    BYTE PTR [rcx],bh
   14001a027:	add    BYTE PTR [rax],al
   14001a029:	add    BYTE PTR [rdx],bh
	...
   14001a033:	add    BYTE PTR [rax+rax*1],ch
   14001a036:	cmp    BYTE PTR [rax],al
   14001a038:	and    BYTE PTR [rax],al
   14001a03a:	add    BYTE PTR [rax],al
   14001a03c:	add    BYTE PTR [rax],al
   14001a03e:	add    BYTE PTR [rax],al
   14001a040:	sub    DWORD PTR [rax],eax
	...
   14001a04e:	add    BYTE PTR cs:[rdx],ah
   14001a051:	add    BYTE PTR [rbx],dh
	...
   14001a063:	add    BYTE PTR [rax],al
   14001a065:	add    al,dh
   14001a067:	add    DWORD PTR [rax],eax
   14001a069:	add    BYTE PTR [rax],al
   14001a06b:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01be71
	...
   14001a081:	add    BYTE PTR [rcx],ah
	...
   14001a08f:	add    BYTE PTR [rbx],ah
   14001a091:	add    BYTE PTR [rax],al
   14001a093:	add    BYTE PTR [rax],al
   14001a095:	add    BYTE PTR [rax],al
   14001a097:	add    BYTE PTR [rax+rax*1],ah
   14001a09a:	and    eax,0x26000000
   14001a09f:	add    BYTE PTR [rax],al
   14001a0a1:	add    BYTE PTR [rax],al
   14001a0a3:	add    BYTE PTR [rax],al
   14001a0a5:	add    BYTE PTR [rdi],ah
   14001a0a7:	add    BYTE PTR [rax],al
   14001a0a9:	add    BYTE PTR [rax],ch
   14001a0ab:	add    BYTE PTR [rdx],ch
   14001a0ad:	add    BYTE PTR [rbx],ch
   14001a0af:	add    BYTE PTR [rax],al
   14001a0b1:	add    BYTE PTR [rax],al
   14001a0b3:	add    BYTE PTR [rip+0x0],ch        # 0x14001a0b9
   14001a0b9:	add    BYTE PTR [rax],al
   14001a0bb:	add    BYTE PTR [rdi],ch
   14001a0bd:	add    BYTE PTR [rax],al
   14001a0bf:	add    BYTE PTR [rax],dh
   14001a0c1:	add    BYTE PTR [rax],al
   14001a0c3:	add    BYTE PTR [rax],al
   14001a0c5:	add    bl,dh
   14001a0c7:	add    DWORD PTR [rax],eax
	...
   14001a0d5:	add    BYTE PTR [rax],al
   14001a0d7:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401d1dd
   14001a0dd:	add    BYTE PTR [rdx],dh
   14001a0df:	add    BYTE PTR [rax],al
   14001a0e1:	add    BYTE PTR [rsi],dh
   14001a0e3:	add    BYTE PTR [rax],al
   14001a0e5:	add    BYTE PTR [rdi],dh
   14001a0e7:	add    BYTE PTR [rax],al
   14001a0e9:	add    BYTE PTR [rcx],bh
   14001a0eb:	add    BYTE PTR [rax],al
   14001a0ed:	add    BYTE PTR [rdx],bh
	...
   14001a0f7:	add    BYTE PTR [rax+rax*1],ch
   14001a0fa:	cmp    BYTE PTR [rax],al
   14001a0fc:	and    BYTE PTR [rax],al
   14001a0fe:	add    BYTE PTR [rax],al
   14001a100:	add    BYTE PTR [rax],al
   14001a102:	add    BYTE PTR [rax],al
   14001a104:	sub    DWORD PTR [rax],eax
	...
   14001a112:	add    BYTE PTR cs:[rdx],ah
   14001a115:	add    BYTE PTR [rbx],dh
	...
   14001a127:	add    BYTE PTR [rax],al
   14001a129:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01bf2f
	...
   14001a13f:	add    BYTE PTR [rcx],ah
	...
   14001a14d:	add    BYTE PTR [rbx],ah
   14001a14f:	add    ah,bl
   14001a151:	add    BYTE PTR [rax],al
   14001a153:	add    BYTE PTR [rax],al
   14001a155:	add    ch,bl
   14001a157:	add    BYTE PTR [rip+0x26000000],ah        # 0x16601a15d
   14001a15d:	add    BYTE PTR [rax],al
   14001a15f:	add    BYTE PTR [rax],al
   14001a161:	add    BYTE PTR [rax],al
   14001a163:	add    BYTE PTR [rdi],ah
   14001a165:	add    BYTE PTR [rax],al
   14001a167:	add    BYTE PTR [rax],ch
   14001a169:	add    BYTE PTR [rdx],ch
   14001a16b:	add    BYTE PTR [rbx],ch
   14001a16d:	add    BYTE PTR [rax],al
   14001a16f:	add    BYTE PTR [rax],al
   14001a171:	add    BYTE PTR [rip+0x0],ch        # 0x14001a177
   14001a177:	add    BYTE PTR [rax],al
   14001a179:	add    BYTE PTR [rdi],ch
   14001a17b:	add    BYTE PTR [rax],al
   14001a17d:	add    BYTE PTR [rax],dh
	...
   14001a18b:	add    BYTE PTR [rax],al
   14001a18d:	add    bh,bl
   14001a18f:	add    BYTE PTR [rax],al
   14001a191:	add    BYTE PTR [rax],al
   14001a193:	add    BYTE PTR [rax],al
   14001a195:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401d29b
   14001a19b:	add    BYTE PTR [rdx],dh
   14001a19d:	add    al,ah
   14001a19f:	add    BYTE PTR [rsi],dh
   14001a1a1:	add    BYTE PTR [rax],al
   14001a1a3:	add    BYTE PTR [rdi],dh
   14001a1a5:	add    dl,ah
   14001a1a7:	add    BYTE PTR [rcx],bh
   14001a1a9:	add    BYTE PTR [rax],al
   14001a1ab:	add    BYTE PTR [rdx],bh
   14001a1ad:	add    BYTE PTR [rax],al
   14001a1af:	add    ch,ah
   14001a1b1:	add    BYTE PTR [rax],al
   14001a1b3:	add    BYTE PTR [rax],al
   14001a1b5:	add    BYTE PTR [rax+rax*1],ch
   14001a1b8:	cmp    BYTE PTR [rax],al
   14001a1ba:	and    BYTE PTR [rax],al
   14001a1bc:	add    BYTE PTR [rax],al
   14001a1be:	add    BYTE PTR [rax],al
   14001a1c0:	add    BYTE PTR [rax],al
   14001a1c2:	sub    DWORD PTR [rax],eax
	...
   14001a1d0:	add    BYTE PTR cs:[rdx],ah
   14001a1d3:	add    BYTE PTR [rbx],dh
	...
   14001a1e5:	add    BYTE PTR [rax],al
   14001a1e7:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01bfed
	...
   14001a1fd:	add    BYTE PTR [rcx],ah
	...
   14001a20b:	add    BYTE PTR [rbx],ah
   14001a20d:	add    ah,bl
   14001a20f:	add    BYTE PTR [rax],al
   14001a211:	add    BYTE PTR [rax],al
   14001a213:	add    BYTE PTR [rdx+0x2],al
   14001a216:	and    eax,0x26000000
   14001a21b:	add    BYTE PTR [rax],al
   14001a21d:	add    BYTE PTR [rax],al
   14001a21f:	add    BYTE PTR [rax],al
   14001a221:	add    BYTE PTR [rdi],ah
   14001a223:	add    BYTE PTR [rax],al
   14001a225:	add    BYTE PTR [rax],ch
   14001a227:	add    BYTE PTR [rdx],ch
   14001a229:	add    BYTE PTR [rbx],ch
   14001a22b:	add    BYTE PTR [rax],al
   14001a22d:	add    BYTE PTR [rax],al
   14001a22f:	add    BYTE PTR [rip+0x0],ch        # 0x14001a235
   14001a235:	add    BYTE PTR [rax],al
   14001a237:	add    BYTE PTR [rdi],ch
   14001a239:	add    BYTE PTR [rax],al
   14001a23b:	add    BYTE PTR [rax],dh
	...
   14001a249:	add    BYTE PTR [rax],al
   14001a24b:	add    bh,bl
   14001a24d:	add    BYTE PTR [rax],al
   14001a24f:	add    BYTE PTR [rax],al
   14001a251:	add    BYTE PTR [rax],al
   14001a253:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401d359
   14001a259:	add    BYTE PTR [rdx],dh
   14001a25b:	add    al,ah
   14001a25d:	add    BYTE PTR [rsi],dh
   14001a25f:	add    BYTE PTR [rax],al
   14001a261:	add    BYTE PTR [rdi],dh
   14001a263:	add    dl,ah
   14001a265:	add    BYTE PTR [rcx],bh
   14001a267:	add    BYTE PTR [rax],al
   14001a269:	add    BYTE PTR [rdx],bh
   14001a26b:	add    BYTE PTR [rax],al
   14001a26d:	add    ch,ah
   14001a26f:	add    BYTE PTR [rax],al
   14001a271:	add    BYTE PTR [rax],al
   14001a273:	add    BYTE PTR [rax+rax*1],ch
   14001a276:	cmp    BYTE PTR [rax],al
   14001a278:	and    BYTE PTR [rax],al
   14001a27a:	add    BYTE PTR [rax],al
   14001a27c:	add    BYTE PTR [rax],al
   14001a27e:	add    BYTE PTR [rax],al
   14001a280:	sub    DWORD PTR [rax],eax
	...
   14001a28e:	add    BYTE PTR cs:[rdx],ah
   14001a291:	add    BYTE PTR [rbx],dh
	...
   14001a2a3:	add    BYTE PTR [rax],al
   14001a2a5:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01c0ab
	...
   14001a2bb:	add    BYTE PTR [rcx],ah
	...
   14001a2c9:	add    BYTE PTR [rbx],ah
   14001a2cb:	add    ah,bl
   14001a2cd:	add    BYTE PTR [rax],al
   14001a2cf:	add    BYTE PTR [rax],al
   14001a2d1:	add    BYTE PTR [rdx+0x2],al
   14001a2d4:	jo     0x14001a2d8
   14001a2d6:	add    BYTE PTR [rax],al
   14001a2d8:	add    BYTE PTR es:[rax],al
   14001a2db:	add    BYTE PTR [rax],al
   14001a2dd:	add    BYTE PTR [rax],al
   14001a2df:	add    BYTE PTR [rdi],ah
   14001a2e1:	add    BYTE PTR [rax],al
   14001a2e3:	add    BYTE PTR [rax],ch
   14001a2e5:	add    BYTE PTR [rdx],ch
   14001a2e7:	add    BYTE PTR [rbx],ch
   14001a2e9:	add    BYTE PTR [rax],al
   14001a2eb:	add    BYTE PTR [rax],al
   14001a2ed:	add    BYTE PTR [rip+0x0],ch        # 0x14001a2f3
   14001a2f3:	add    BYTE PTR [rax],al
   14001a2f5:	add    BYTE PTR [rdi],ch
   14001a2f7:	add    BYTE PTR [rax],al
   14001a2f9:	add    BYTE PTR [rax],dh
	...
   14001a307:	add    BYTE PTR [rax],al
   14001a309:	add    bh,bl
   14001a30b:	add    BYTE PTR [rax],al
   14001a30d:	add    BYTE PTR [rax],al
   14001a30f:	add    BYTE PTR [rax],al
   14001a311:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401d417
   14001a317:	add    BYTE PTR [rdx],dh
   14001a319:	add    al,ah
   14001a31b:	add    BYTE PTR [rsi],dh
   14001a31d:	add    BYTE PTR [rax],al
   14001a31f:	add    BYTE PTR [rdi],dh
   14001a321:	add    dl,ah
   14001a323:	add    BYTE PTR [rcx],bh
   14001a325:	add    BYTE PTR [rax],al
   14001a327:	add    BYTE PTR [rdx],bh
   14001a329:	add    BYTE PTR [rax],al
   14001a32b:	add    ch,ah
   14001a32d:	add    BYTE PTR [rax],al
   14001a32f:	add    BYTE PTR [rax],al
   14001a331:	add    BYTE PTR [rax+rax*1],ch
   14001a334:	cmp    BYTE PTR [rax],al
   14001a336:	and    BYTE PTR [rax],al
   14001a338:	add    BYTE PTR [rax],al
   14001a33a:	add    BYTE PTR [rax],al
   14001a33c:	add    BYTE PTR [rax],al
   14001a33e:	sub    DWORD PTR [rax],eax
	...
   14001a34c:	add    BYTE PTR cs:[rdx],ah
   14001a34f:	add    BYTE PTR [rbx],dh
	...
   14001a361:	add    BYTE PTR [rax],al
   14001a363:	add    BYTE PTR [rdi+0x0],ch
   14001a366:	jo     0x14001a368
   14001a368:	jno    0x14001a36a
   14001a36a:	add    BYTE PTR [rax],al
   14001a36c:	add    BYTE PTR [rax],al
   14001a36e:	jae    0x14001a370
   14001a370:	jne    0x14001a372
   14001a372:	jbe    0x14001a374
   14001a374:	add    BYTE PTR [rax],al
   14001a376:	add    BYTE PTR [rax],al
   14001a378:	ja     0x14001a37a
   14001a37a:	add    BYTE PTR [rax],al
   14001a37c:	js     0x14001a37e
   14001a37e:	add    BYTE PTR [rax],al
   14001a380:	add    BYTE PTR [rax],al
   14001a382:	add    BYTE PTR [rax],al
   14001a384:	jp     0x14001a386
   14001a386:	jnp    0x14001a388
   14001a388:	jl     0x14001a38a
	...
   14001a396:	and    eax,DWORD PTR [rax]
   14001a398:	jge    0x14001a39a
   14001a39a:	jle    0x14001a39c
   14001a39c:	jg     0x14001a39e
	...
   14001a3b2:	add    BYTE PTR [rax],0x0
	...
   14001a3d1:	add    BYTE PTR [rbx+0x0],al
	...
   14001a3df:	add    BYTE PTR [rcx],dh
   14001a3e1:	add    BYTE PTR [rax+rax*1],dh
   14001a3e4:	xor    al,BYTE PTR [rax]
   14001a3e6:	test   BYTE PTR [rax],al
   14001a3e8:	test   DWORD PTR [rax],eax
   14001a3ea:	xchg   BYTE PTR [rax],al
   14001a3ec:	add    BYTE PTR [rax],al
   14001a3ee:	mov    BYTE PTR [rax],al
   14001a3f0:	mov    DWORD PTR [rax],eax
   14001a3f2:	mov    al,BYTE PTR [rax]
   14001a3f4:	mov    eax,DWORD PTR [rax]
   14001a3f6:	mov    WORD PTR [rax],es
   14001a3f8:	lea    eax,[rax]
   14001a3fa:	add    BYTE PTR [rax],al
   14001a3fc:	add    BYTE PTR [rax],al
   14001a3fe:	add    DWORD PTR [rax],0x790087
   14001a404:	jb     0x14001a406
   14001a406:	je     0x14001a408
   14001a408:	(bad)  
	...
   14001a415:	add    BYTE PTR [rax],al
   14001a417:	add    BYTE PTR [rsi],ch
   14001a419:	add    BYTE PTR [rdx],ah
   14001a41b:	add    BYTE PTR [rbx],dh
	...
   14001a42d:	add    BYTE PTR [rax],al
   14001a42f:	add    BYTE PTR [rdi+0x0],ch
   14001a432:	jo     0x14001a434
   14001a434:	jno    0x14001a436
   14001a436:	add    BYTE PTR [rax],al
   14001a438:	add    BYTE PTR [rax],al
   14001a43a:	jae    0x14001a43c
   14001a43c:	jne    0x14001a43e
   14001a43e:	jbe    0x14001a440
   14001a440:	add    BYTE PTR [rax],al
   14001a442:	add    BYTE PTR [rax],al
   14001a444:	ja     0x14001a446
   14001a446:	add    BYTE PTR [rax],al
   14001a448:	js     0x14001a44a
   14001a44a:	add    BYTE PTR [rax],al
   14001a44c:	add    BYTE PTR [rax],al
   14001a44e:	add    BYTE PTR [rax],al
   14001a450:	jp     0x14001a452
   14001a452:	jnp    0x14001a454
   14001a454:	jl     0x14001a456
	...
   14001a462:	and    eax,DWORD PTR [rax]
   14001a464:	jge    0x14001a466
   14001a466:	jle    0x14001a468
   14001a468:	jg     0x14001a46a
	...
   14001a47e:	add    BYTE PTR [rax],0x0
   14001a481:	add    BYTE PTR [rax],al
   14001a483:	add    BYTE PTR [rax],al
   14001a485:	add    BYTE PTR [rbx+0x1],cl
	...
   14001a49b:	add    BYTE PTR [rax],al
   14001a49d:	add    BYTE PTR [rbx+0x0],al
   14001a4a3:	add    BYTE PTR [rax],al
   14001a4a5:	add    BYTE PTR [rax],al
   14001a4a7:	add    BYTE PTR [rax],al
   14001a4a9:	add    BYTE PTR [rbp+0x34003101],cl
   14001a4af:	add    BYTE PTR [rdx],dh
   14001a4b1:	add    BYTE PTR [rax+rax*1+0x860085],al
   14001a4b8:	add    BYTE PTR [rax],al
   14001a4ba:	mov    BYTE PTR [rax],al
   14001a4bc:	mov    DWORD PTR [rax],eax
   14001a4be:	mov    al,BYTE PTR [rax]
   14001a4c0:	mov    eax,DWORD PTR [rax]
   14001a4c2:	mov    WORD PTR [rax],es
   14001a4c4:	lea    eax,[rax]
   14001a4c6:	add    BYTE PTR [rax],al
   14001a4c8:	add    BYTE PTR [rax],al
   14001a4ca:	add    DWORD PTR [rax],0x790087
   14001a4d0:	jb     0x14001a4d2
   14001a4d2:	je     0x14001a4d4
   14001a4d4:	(bad)  
	...
   14001a4e1:	add    BYTE PTR [rax],al
   14001a4e3:	add    BYTE PTR [rsi],ch
   14001a4e5:	add    BYTE PTR [rsi+0x1],dh
   14001a4e8:	jl     0x14001a4eb
	...
   14001a4fa:	add    BYTE PTR [rax],al
   14001a4fc:	outs   dx,DWORD PTR ds:[rsi]
   14001a4fd:	add    BYTE PTR [rax+0x0],dh
   14001a500:	jno    0x14001a502
   14001a502:	add    BYTE PTR [rax],al
   14001a504:	add    BYTE PTR [rax],al
   14001a506:	jae    0x14001a508
   14001a508:	jne    0x14001a50a
   14001a50a:	jbe    0x14001a50c
   14001a50c:	add    BYTE PTR [rax],al
   14001a50e:	add    BYTE PTR [rax],al
   14001a510:	ja     0x14001a512
   14001a512:	add    BYTE PTR [rax],al
   14001a514:	js     0x14001a516
   14001a516:	add    BYTE PTR [rax],al
   14001a518:	add    BYTE PTR [rax],al
   14001a51a:	add    BYTE PTR [rax],al
   14001a51c:	jp     0x14001a51e
   14001a51e:	jnp    0x14001a520
   14001a520:	jl     0x14001a522
	...
   14001a52e:	and    eax,DWORD PTR [rax]
   14001a530:	jge    0x14001a532
   14001a532:	jle    0x14001a534
   14001a534:	jg     0x14001a536
	...
   14001a54a:	add    BYTE PTR [rax],0x0
   14001a54d:	add    BYTE PTR [rax],al
   14001a54f:	add    BYTE PTR [rax],al
   14001a551:	add    BYTE PTR [rbx+0x1],cl
	...
   14001a567:	add    BYTE PTR [rax],al
   14001a569:	add    BYTE PTR [rbx+0x0],al
   14001a56f:	add    BYTE PTR [rax],al
   14001a571:	add    BYTE PTR [rax],al
   14001a573:	add    BYTE PTR [rax],al
   14001a575:	add    BYTE PTR [rbp+0x34003101],cl
   14001a57b:	add    BYTE PTR [rdx],dh
   14001a57d:	add    BYTE PTR [rax+rax*1+0x860085],al
   14001a584:	add    BYTE PTR [rax],al
   14001a586:	mov    BYTE PTR [rax],al
   14001a588:	mov    DWORD PTR [rax],eax
   14001a58a:	mov    al,BYTE PTR [rax]
   14001a58c:	mov    eax,DWORD PTR [rax]
   14001a58e:	mov    WORD PTR [rax],es
   14001a590:	lea    eax,[rax]
   14001a592:	add    BYTE PTR [rax],al
   14001a594:	add    BYTE PTR [rax],al
   14001a596:	add    DWORD PTR [rax],0x790087
   14001a59c:	jb     0x14001a59e
   14001a59e:	je     0x14001a5a0
   14001a5a0:	(bad)  
	...
   14001a5ad:	add    BYTE PTR [rax],al
   14001a5af:	add    BYTE PTR [rsi],ch
   14001a5b1:	add    BYTE PTR [rdx],ah
   14001a5b3:	add    BYTE PTR [rbx],dh
	...
   14001a5c5:	add    BYTE PTR [rax],al
   14001a5c7:	add    BYTE PTR [rdi+0x0],ch
   14001a5ca:	jo     0x14001a5cc
   14001a5cc:	jno    0x14001a5ce
   14001a5ce:	add    BYTE PTR [rax],al
   14001a5d0:	add    BYTE PTR [rax],al
   14001a5d2:	jae    0x14001a5d4
   14001a5d4:	jne    0x14001a5d6
   14001a5d6:	jbe    0x14001a5d8
   14001a5d8:	add    BYTE PTR [rax],al
   14001a5da:	add    BYTE PTR [rax],al
   14001a5dc:	ja     0x14001a5de
   14001a5de:	add    BYTE PTR [rax],al
   14001a5e0:	js     0x14001a5e2
   14001a5e2:	add    BYTE PTR [rax],al
   14001a5e4:	add    BYTE PTR [rax],al
   14001a5e6:	add    BYTE PTR [rax],al
   14001a5e8:	jp     0x14001a5ea
   14001a5ea:	jnp    0x14001a5ec
   14001a5ec:	jl     0x14001a5ee
	...
   14001a5fa:	and    eax,DWORD PTR [rax]
   14001a5fc:	jge    0x14001a5fe
   14001a5fe:	jle    0x14001a600
   14001a600:	jg     0x14001a602
	...
   14001a616:	add    BYTE PTR [rax],0x0
   14001a619:	add    BYTE PTR [rax],al
   14001a61b:	add    BYTE PTR [rax],al
   14001a61d:	add    BYTE PTR [rbx+0x1],cl
	...
   14001a62b:	add    BYTE PTR [rax],al
   14001a62d:	add    BYTE PTR [rcx+rax*1+0x0],cl
   14001a634:	add    BYTE PTR [rax],al
   14001a636:	add    DWORD PTR [rax],0x0
	...
   14001a641:	add    BYTE PTR [rbp+0x34003101],cl
   14001a647:	add    BYTE PTR [rdx],dh
   14001a649:	add    BYTE PTR [rax+rax*1+0x860085],al
   14001a650:	add    BYTE PTR [rax],al
   14001a652:	mov    BYTE PTR [rax],al
   14001a654:	mov    DWORD PTR [rax],eax
   14001a656:	mov    al,BYTE PTR [rax]
   14001a658:	mov    eax,DWORD PTR [rax]
   14001a65a:	mov    WORD PTR [rax],es
   14001a65c:	lea    eax,[rax]
   14001a65e:	add    BYTE PTR [rax],al
   14001a660:	add    BYTE PTR [rax],al
   14001a662:	add    DWORD PTR [rax],0x790087
   14001a668:	jb     0x14001a66a
   14001a66a:	je     0x14001a66c
   14001a66c:	(bad)  
	...
   14001a679:	add    BYTE PTR [rax],al
   14001a67b:	add    BYTE PTR [rsi],ch
   14001a67d:	add    BYTE PTR [rsi+0x1],dh
   14001a680:	jl     0x14001a683
	...
   14001a692:	add    BYTE PTR [rax],al
   14001a694:	(bad)  
	...
   14001a69d:	add    bh,dl
   14001a69f:	add    BYTE PTR [rax],al
   14001a6a1:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01c4a7
   14001a6a7:	add    cl,bl
	...
   14001a6b5:	add    dl,bl
   14001a6b7:	add    BYTE PTR [rcx],ah
	...
   14001a6c5:	add    BYTE PTR [rbx],ah
   14001a6c7:	add    ah,bl
   14001a6c9:	add    BYTE PTR [rax],al
   14001a6cb:	add    BYTE PTR [rax],al
   14001a6cd:	add    ch,bl
   14001a6cf:	add    BYTE PTR [rip+0x26000000],ah        # 0x16601a6d5
   14001a6d5:	add    BYTE PTR [rax],al
   14001a6d7:	add    BYTE PTR [rax],al
   14001a6d9:	add    BYTE PTR [rax],al
   14001a6db:	add    BYTE PTR [rdi],ah
   14001a6dd:	add    BYTE PTR [rax],al
   14001a6df:	add    BYTE PTR [rax],ch
   14001a6e1:	add    BYTE PTR [rdx],ch
   14001a6e3:	add    BYTE PTR [rbx],ch
   14001a6e5:	add    BYTE PTR [rax],al
   14001a6e7:	add    BYTE PTR [rax],al
   14001a6e9:	add    BYTE PTR [rip+0x0],ch        # 0x14001a6ef
   14001a6ef:	add    BYTE PTR [rax],al
   14001a6f1:	add    BYTE PTR [rdi],ch
   14001a6f3:	add    BYTE PTR [rax],al
   14001a6f5:	add    BYTE PTR [rax],dh
	...
   14001a6ff:	add    BYTE PTR [rax],al
   14001a701:	add    dh,bl
   14001a703:	add    BYTE PTR [rax],al
   14001a705:	add    bh,bl
   14001a707:	add    BYTE PTR [rax],al
   14001a709:	add    BYTE PTR [rax],al
   14001a70b:	add    BYTE PTR [rax],al
   14001a70d:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401d813
   14001a713:	add    BYTE PTR [rdx],dh
   14001a715:	add    al,ah
   14001a717:	add    BYTE PTR [rsi],dh
   14001a719:	add    cl,ah
   14001a71b:	add    BYTE PTR [rdi],dh
   14001a71d:	add    dl,ah
   14001a71f:	add    BYTE PTR [rcx],bh
   14001a721:	add    bl,ah
   14001a723:	add    BYTE PTR [rdx],bh
   14001a725:	add    ah,ah
   14001a727:	add    ch,ah
   14001a729:	add    BYTE PTR [rax],al
   14001a72b:	add    BYTE PTR [rax],al
   14001a72d:	add    BYTE PTR [rax+rax*1],ch
   14001a730:	cmp    BYTE PTR [rax],al
   14001a732:	and    BYTE PTR [rax],al
   14001a734:	(bad)  
   14001a735:	add    al,bl
   14001a737:	add    BYTE PTR [rax],al
   14001a739:	add    BYTE PTR [rcx],ch
	...
   14001a747:	add    BYTE PTR [rsi],ch
   14001a749:	add    BYTE PTR [rdx],ah
   14001a74b:	add    BYTE PTR [rbx],dh
	...
   14001a75d:	add    BYTE PTR [rax],al
   14001a75f:	add    ch,dl
	...
   14001a769:	add    bh,dl
   14001a76b:	add    BYTE PTR [rax],al
   14001a76d:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01c573
   14001a773:	add    cl,bl
	...
   14001a781:	add    dl,bl
   14001a783:	add    bl,bl
	...
   14001a791:	add    BYTE PTR [rbx],ah
   14001a793:	add    ah,bl
   14001a795:	add    BYTE PTR [rax],al
   14001a797:	add    BYTE PTR [rax],al
   14001a799:	add    ch,bl
   14001a79b:	add    BYTE PTR [rip+0x26000000],ah        # 0x16601a7a1
   14001a7a1:	add    BYTE PTR [rax],al
   14001a7a3:	add    BYTE PTR [rax],al
   14001a7a5:	add    BYTE PTR [rax],al
   14001a7a7:	add    BYTE PTR [rdi],ah
   14001a7a9:	add    BYTE PTR [rax],al
   14001a7ab:	add    BYTE PTR [rax],ch
   14001a7ad:	add    BYTE PTR [rdx],ch
   14001a7af:	add    BYTE PTR [rbx],ch
   14001a7b1:	add    BYTE PTR [rax],al
   14001a7b3:	add    BYTE PTR [rax],al
   14001a7b5:	add    BYTE PTR [rip+0x0],ch        # 0x14001a7bb
   14001a7bb:	add    BYTE PTR [rax],al
   14001a7bd:	add    BYTE PTR [rdi],ch
   14001a7bf:	add    BYTE PTR [rax],al
   14001a7c1:	add    BYTE PTR [rax],dh
	...
   14001a7cb:	add    BYTE PTR [rax],al
   14001a7cd:	add    dh,bl
   14001a7cf:	add    BYTE PTR [rax],al
   14001a7d1:	add    bh,bl
   14001a7d3:	add    BYTE PTR [rax],al
   14001a7d5:	add    BYTE PTR [rax],al
   14001a7d7:	add    BYTE PTR [rax],al
   14001a7d9:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401d8df
   14001a7df:	add    BYTE PTR [rdx],dh
   14001a7e1:	add    al,ah
   14001a7e3:	add    BYTE PTR [rsi],dh
   14001a7e5:	add    cl,ah
   14001a7e7:	add    BYTE PTR [rdi],dh
   14001a7e9:	add    dl,ah
   14001a7eb:	add    BYTE PTR [rcx],bh
   14001a7ed:	add    bl,ah
   14001a7ef:	add    BYTE PTR [rdx],bh
   14001a7f1:	add    ah,ah
   14001a7f3:	add    ch,ah
   14001a7f5:	add    BYTE PTR [rax],al
   14001a7f7:	add    BYTE PTR [rax],al
   14001a7f9:	add    BYTE PTR [rax+rax*1],ch
   14001a7fc:	cmp    BYTE PTR [rax],al
   14001a7fe:	and    BYTE PTR [rax],al
   14001a800:	(bad)  
   14001a801:	add    al,bl
   14001a803:	add    BYTE PTR [rax],al
   14001a805:	add    BYTE PTR [rcx],ch
	...
   14001a813:	add    BYTE PTR [rsi],ch
   14001a815:	add    BYTE PTR [rdx],ah
   14001a817:	add    BYTE PTR [rbx],dh
	...
   14001a829:	add    BYTE PTR [rax],al
   14001a82b:	add    BYTE PTR [rsi+0x2],al
   14001a82e:	jo     0x14001a830
   14001a830:	jno    0x14001a832
   14001a832:	add    BYTE PTR [rax],al
   14001a834:	add    BYTE PTR [rax],al
   14001a836:	rex.W add sil,BYTE PTR [rbp+0x0]
   14001a83a:	rex.WX add bl,BYTE PTR [rsi]
   14001a83d:	add    BYTE PTR [rdi],bl
   14001a83f:	add    BYTE PTR [rbx+0x2],cl
   14001a842:	add    BYTE PTR [rax],al
   14001a844:	js     0x14001a846
   14001a846:	add    BYTE PTR [rax],al
   14001a848:	add    BYTE PTR [rax],al
   14001a84a:	add    BYTE PTR [rax],al
   14001a84c:	jp     0x14001a84e
   14001a84e:	rex.WRB add r9b,BYTE PTR [r14+0x2]
	...
   14001a85e:	and    eax,DWORD PTR [rax]
   14001a860:	rex.WRXB add r15b,BYTE PTR [r14+0x0]
   14001a864:	jg     0x14001a866
   14001a866:	fld    QWORD PTR [rax]
   14001a868:	and    eax,0x26000000
   14001a86d:	add    BYTE PTR [rax],al
   14001a86f:	add    BYTE PTR [rax],al
   14001a871:	add    BYTE PTR [rax],al
   14001a873:	add    BYTE PTR [rdi],ah
   14001a875:	add    BYTE PTR [rax],al
   14001a877:	add    BYTE PTR [rax],ch
   14001a879:	add    BYTE PTR [rax+0x2],dl
   14001a87c:	sub    eax,DWORD PTR [rax]
   14001a87e:	add    BYTE PTR [rax],al
   14001a880:	add    BYTE PTR [rax],al
   14001a882:	push   rdx
   14001a883:	add    al,BYTE PTR [rax]
   14001a885:	add    BYTE PTR [rax],al
   14001a887:	add    BYTE PTR [rax],al
   14001a889:	add    BYTE PTR [rdi],ch
   14001a88b:	add    BYTE PTR [rax],al
   14001a88d:	add    BYTE PTR [rax],dh
	...
   14001a897:	add    BYTE PTR [rax],al
   14001a899:	add    BYTE PTR [rbx+0x2],dl
   14001a89c:	add    BYTE PTR [rax],al
   14001a89e:	fild   WORD PTR [rax]
   14001a8a0:	add    BYTE PTR [rax],al
   14001a8a2:	add    BYTE PTR [rax],al
   14001a8a4:	add    BYTE PTR [rax],al
   14001a8a6:	push   rsp
   14001a8a7:	add    dh,BYTE PTR [rcx]
   14001a8a9:	add    BYTE PTR [rax+rax*1],dh
   14001a8ac:	xor    al,BYTE PTR [rax]
   14001a8ae:	push   rbp
   14001a8af:	add    dl,BYTE PTR [rsi+0x2]
   14001a8b2:	push   rdi
   14001a8b3:	add    dh,BYTE PTR [rdi]
   14001a8b5:	add    BYTE PTR [rcx+0x2],bl
   14001a8b8:	pop    rdx
   14001a8b9:	add    bl,BYTE PTR [rbx+0x2]
   14001a8bc:	pop    rsp
   14001a8bd:	add    bl,BYTE PTR [rbp+0x2]
   14001a8c0:	pop    rsi
   14001a8c1:	add    al,BYTE PTR [rax]
   14001a8c3:	add    BYTE PTR [rax],al
   14001a8c5:	add    BYTE PTR [rcx+0x2],dl
   14001a8c8:	pop    rax
   14001a8c9:	add    cl,BYTE PTR [rdx+rax*1+0x47]
   14001a8cd:	add    cl,BYTE PTR [rcx+0x2]
   14001a8d0:	(bad)  
   14001a8d1:	add    BYTE PTR [rcx],ch
	...
   14001a8df:	add    BYTE PTR [rsi],ch
   14001a8e1:	add    BYTE PTR [rsi+0x1],dh
   14001a8e4:	jl     0x14001a8e7
	...
   14001a8f6:	add    BYTE PTR [rax],al
   14001a8f8:	ins    DWORD PTR es:[rdi],dx
   14001a8f9:	add    DWORD PTR [rax+0x0],esi
   14001a8fc:	jno    0x14001a8fe
   14001a8fe:	add    BYTE PTR [rax],al
   14001a900:	add    BYTE PTR [rax],al
   14001a902:	outs   dx,DWORD PTR ds:[rsi]
   14001a903:	add    DWORD PTR [rbp+0x0],esi
   14001a906:	jno    0x14001a909
   14001a908:	(bad)  
   14001a909:	add    BYTE PTR [rdi],bl
   14001a90b:	add    BYTE PTR [rdx+0x1],dh
   14001a90e:	add    BYTE PTR [rax],al
   14001a910:	js     0x14001a912
   14001a912:	add    BYTE PTR [rax],al
   14001a914:	add    BYTE PTR [rax],al
   14001a916:	add    BYTE PTR [rax],al
   14001a918:	jp     0x14001a91a
   14001a91a:	je     0x14001a91d
   14001a91c:	jne    0x14001a91f
	...
   14001a92a:	and    eax,DWORD PTR [rax]
   14001a92c:	ja     0x14001a92f
   14001a92e:	jle    0x14001a930
   14001a930:	jg     0x14001a932
   14001a932:	fld    QWORD PTR [rax]
   14001a934:	and    eax,0x26000000
   14001a939:	add    BYTE PTR [rax],al
   14001a93b:	add    BYTE PTR [rax],al
   14001a93d:	add    BYTE PTR [rax],al
   14001a93f:	add    BYTE PTR [rdi],ah
   14001a941:	add    BYTE PTR [rax],al
   14001a943:	add    BYTE PTR [rax],ch
   14001a945:	add    BYTE PTR [rax+0x1],bh
   14001a948:	sub    eax,DWORD PTR [rax]
   14001a94a:	add    BYTE PTR [rax],al
   14001a94c:	add    BYTE PTR [rax],al
   14001a94e:	jp     0x14001a951
   14001a950:	add    BYTE PTR [rax],al
   14001a952:	add    BYTE PTR [rax],al
   14001a954:	add    BYTE PTR [rax],al
   14001a956:	(bad)  
   14001a957:	add    BYTE PTR [rax],al
   14001a959:	add    BYTE PTR [rax],dh
   14001a95b:	add    BYTE PTR [rax],al
   14001a95d:	add    dl,ch
   14001a95f:	inc    BYTE PTR [rax]
   14001a961:	add    BYTE PTR [rax],al
   14001a963:	add    BYTE PTR [rax],al
   14001a965:	add    BYTE PTR [rbx+0x1],bh
   14001a968:	add    BYTE PTR [rax],al
   14001a96a:	fild   WORD PTR [rax]
   14001a96c:	add    BYTE PTR [rax],al
   14001a96e:	add    BYTE PTR [rax],al
   14001a970:	add    BYTE PTR [rax],al
   14001a972:	jge    0x14001a975
   14001a974:	xor    DWORD PTR [rax],eax
   14001a976:	xor    al,0x0
   14001a978:	xor    al,BYTE PTR [rax]
   14001a97a:	jle    0x14001a97d
   14001a97c:	jg     0x14001a97f
   14001a97e:	add    BYTE PTR [rcx],0x37
   14001a981:	add    BYTE PTR [rdx-0x7bfe7cff],al
   14001a987:	add    DWORD PTR [rbp-0x78fe79ff],eax
   14001a98d:	add    DWORD PTR [rax],eax
   14001a98f:	add    BYTE PTR [rax],al
   14001a991:	add    BYTE PTR [rcx+0x1],bh
   14001a994:	add    DWORD PTR [rcx],0x16e0173
   14001a99a:	jo     0x14001a99d
   14001a99c:	(bad)  
   14001a99d:	add    BYTE PTR [rcx],ch
	...
   14001a9ab:	add    BYTE PTR [rsi],ch
   14001a9ad:	add    BYTE PTR [rsi+0x1],dh
   14001a9b0:	jl     0x14001a9b3
	...
   14001a9c2:	add    BYTE PTR [rax],al
   14001a9c4:	and    DWORD PTR [rdx],eax
   14001a9c6:	cmp    al,0x2
   14001a9c8:	xor    eax,0x8e027802
   14001a9cd:	add    dl,BYTE PTR [rax+rax*1+0x21d0211]
   14001a9d4:	adc    BYTE PTR [rdx],al
   14001a9d6:	mov    es,WORD PTR [rax]
   14001a9d8:	xchg   esp,eax
   14001a9d9:	add    al,BYTE PTR [rdi]
   14001a9db:	add    esp,esi
   14001a9dd:	add    DWORD PTR [rcx+0x68026901],ecx
   14001a9e3:	add    ch,BYTE PTR [rbp+0x2]
   14001a9e6:	data16 add dl,BYTE PTR [rax]
   14001a9e9:	add    BYTE PTR [rbp+0x2],dh
   14001a9ec:	mov    esp,0x3900b701
   14001a9f1:	add    DWORD PTR [rbx],esp
   14001a9f3:	add    bh,BYTE PTR [rdi+0x7700b701]
   14001a9f9:	add    al,BYTE PTR [rbx-0x7ff02fe]
   14001a9ff:	add    BYTE PTR [rdx+rax*1+0x23f01e5],al
   14001aa06:	add    bl,BYTE PTR ds:[rdi+0x2]
   14001aa0a:	cwde   
   14001aa0b:	add    BYTE PTR [rax+0x1],al
   14001aa0e:	mov    ch,0x1
   14001aa10:	mov    dl,0x0
   14001aa12:	cmp    DWORD PTR [rcx],eax
   14001aa14:	mov    ecx,0xad01b101
   14001aa19:	add    BYTE PTR [rdi-0x2ff5b00],dh
   14001aa1f:	add    dh,cl
   14001aa21:	add    DWORD PTR [rcx],edi
   14001aa23:	add    ecx,ecx
   14001aa25:	add    DWORD PTR [rdi-0x3afe43ff],edi
   14001aa2b:	add    ebp,edi
   14001aa2d:	add    dl,cl
   14001aa2f:	add    DWORD PTR [rcx-0x38fea4ff],ebp
   14001aa35:	add    eax,edi
   14001aa37:	add    BYTE PTR [rdi+0x1],bl
   14001aa3a:	mov    esp,0xd201db00
   14001aa3f:	add    edx,esi
   14001aa41:	add    DWORD PTR [rbx-0x40ff6a00],ebp
   14001aa47:	add    esi,ecx
   14001aa49:	add    BYTE PTR [rsi-0x2bfe7000],bh
   14001aa4f:	add    DWORD PTR [rax],eax
   14001aa51:	add    BYTE PTR [rdi-0x10ff0800],dh
   14001aa57:	add    ebp,edx
   14001aa59:	add    ebp,ebp
   14001aa5b:	add    BYTE PTR [rcx-0x66fe76ff],bl
   14001aa61:	add    DWORD PTR [rbx+0x1],ecx
   14001aa64:	rol    BYTE PTR [rcx],1
   14001aa66:	test   DWORD PTR [rax],0xce0200
   14001aa6c:	xchg   ecx,eax
   14001aa6d:	add    dh,cl
   14001aa6f:	add    BYTE PTR [rsi],bh
   14001aa71:	add    BYTE PTR [rcx-0x31fe04ff],bl
   14001aa77:	add    BYTE PTR [rax],al
   14001aa79:	add    bh,bh
   14001aa7b:	add    DWORD PTR [rax],eax
   14001aa7d:	add    BYTE PTR [rax+rax*1+0xce0000],bh
   14001aa84:	(bad)  
   14001aa85:	add    BYTE PTR [rax+rax*1+0x3e00ce],bh
   14001aa8c:	ds add al,bh
   14001aa8f:	add    esp,ecx
   14001aa91:	add    DWORD PTR [rcx-0x31ffc1ff],esp
   14001aa97:	add    cl,bh
   14001aa99:	add    esi,ecx
   14001aa9b:	add    BYTE PTR [rdi-0x68fd79fe],al
   14001aaa1:	add    DWORD PTR [rax],eax
   14001aaa3:	add    BYTE PTR [rax],al
   14001aaa5:	add    BYTE PTR [rdx-0x65ffc1ff],bl
   14001aaab:	add    ebx,ecx
   14001aaad:	add    DWORD PTR [rsi],edi
   14001aaaf:	add    BYTE PTR [rax+rax*1+0x3e01fa],dl
   14001aab6:	mov    ebx,0x15003e00
   14001aabb:	add    DWORD PTR [rdx-0x63fe5cff],ebx
   14001aac1:	add    DWORD PTR [rdx],ebp
   14001aac3:	add    DWORD PTR [rcx],ebx
   14001aac5:	add    DWORD PTR [rcx+0x9401],ecx
   14001aacb:	add    BYTE PTR [rax],al
   14001aacd:	add    BYTE PTR [rax],al
   14001aacf:	add    BYTE PTR [rsi-0x55ffc1ff],ah
   14001aad5:	add    BYTE PTR [rsi],bh
   14001aad7:	add    BYTE PTR [rax+rax*1+0x127003e],dh
   14001aade:	add    al,BYTE PTR [rdx]
   14001aae0:	sub    BYTE PTR [rcx],al
   14001aae2:	add    al,0x1
   14001aae4:	sub    DWORD PTR [rcx],eax
   14001aae6:	add    BYTE PTR ds:[rax+0x3e01f702],cl
   14001aaed:	add    BYTE PTR [rsi],bh
   14001aaef:	add    BYTE PTR [rsi],bh
   14001aaf1:	add    BYTE PTR [rsi+0x2b020200],dh
   14001aaf7:	add    DWORD PTR [rdx+0x3e003e01],ecx
   14001aafd:	add    ah,cl
   14001aaff:	add    ebx,ecx
   14001ab01:	add    esi,ecx
   14001ab03:	add    BYTE PTR [rdx+0x1],ch
   14001ab06:	jbe    0x14001ab0a
   14001ab08:	push   0x1
   14001ab0a:	add    BYTE PTR ds:[rdi+0x201f600],ah
   14001ab11:	add    bh,BYTE PTR [rsi]
   14001ab13:	add    BYTE PTR [rsi],bh
   14001ab15:	add    BYTE PTR [rdx+0x1],al
   14001ab18:	add    BYTE PTR ds:[rcx],ch
   14001ab1b:	add    bh,BYTE PTR [rcx+rax*1+0x640063]
   14001ab22:	pop    rbp
   14001ab23:	add    dh,cl
   14001ab25:	add    BYTE PTR [rsi],bh
   14001ab27:	add    BYTE PTR [rcx+rax*1-0x32],ah
   14001ab2b:	add    dh,bh
   14001ab2d:	add    esi,ecx
   14001ab2f:	add    BYTE PTR [rsi+0x0],bl
   14001ab32:	add    BYTE PTR ds:[rsi],bh
   14001ab35:	add    dh,cl
   14001ab37:	add    BYTE PTR [rsi],bh
   14001ab39:	add    BYTE PTR [rsi],bh
   14001ab3b:	add    BYTE PTR [rdi+0x0],bl
   14001ab3e:	(bad)  
   14001ab3f:	add    BYTE PTR [rsi],bh
   14001ab41:	add    BYTE PTR [rcx+0x0],ah
   14001ab44:	push   rsi
   14001ab45:	add    BYTE PTR [rsi],bh
   14001ab47:	add    BYTE PTR [rdx+0x0],bl
   14001ab4a:	in     eax,dx
   14001ab4b:	add    DWORD PTR [rsi],edi
   14001ab4d:	add    BYTE PTR [rbx+0x0],bl
   14001ab50:	mov    esp,0x5c01ec00
   14001ab55:	add    BYTE PTR [rbx+0x1],ah
   14001ab58:	add    BYTE PTR ds:[rcx+0x1],ah
   14001ab5c:	ins    BYTE PTR es:[rdi],dx
   14001ab5d:	add    BYTE PTR [rsi],bh
   14001ab5f:	add    bl,ah
   14001ab61:	add    DWORD PTR [rbp+0x1],ebx
   14001ab64:	repnz add BYTE PTR [rcx+0x1],bl
   14001ab68:	test   DWORD PTR [rax],0x14b0139
   14001ab6e:	(bad)  
   14001ab6f:	add    DWORD PTR [rsi+0x0],esp
   14001ab72:	push   0xffffffffce013900
   14001ab77:	add    BYTE PTR [rsi],bh
   14001ab79:	add    dh,cl
   14001ab7b:	add    BYTE PTR [rsi+0x3e010400],dh
   14001ab81:	add    dh,cl
   14001ab83:	add    dh,cl
   14001ab85:	add    dh,cl
   14001ab87:	add    bh,ch
   14001ab89:	add    BYTE PTR [rsi],bh
   14001ab8b:	add    BYTE PTR [rdx+0x0],ah
   14001ab8e:	mov    dh,0x0
   14001ab90:	cmp    DWORD PTR [rcx],eax
   14001ab92:	cmp    DWORD PTR [rcx],eax
   14001ab94:	add    BYTE PTR ds:[rsi+0x0],ch
   14001ab98:	push   0x1
   14001ab9a:	rex.W add BYTE PTR [rsi],dil
   14001ab9d:	add    dh,cl
   14001ab9f:	add    BYTE PTR [rbp+0x0],al
   14001aba2:	add    BYTE PTR ds:[rsi],bh
   14001aba5:	add    DWORD PTR [rsi+0x0],eax
   14001aba8:	add    BYTE PTR ds:[rsi],bh
   14001abab:	add    BYTE PTR [rdi+0x0],al
   14001abae:	add    al,0x1
   14001abb0:	(bad)  
   14001abb1:	add    BYTE PTR [rsi],bh
   14001abb3:	add    dh,dh
   14001abb5:	add    BYTE PTR [rcx+0x3e024501],cl
   14001abbb:	add    BYTE PTR [rsi],bh
   14001abbd:	add    ah,cl
   14001abbf:	add    DWORD PTR [rax],eax
   14001abc1:	add    BYTE PTR [rdx+0x0],cl
   14001abc4:	(bad)  
   14001abc5:	add    BYTE PTR [rsi],bh
   14001abc7:	add    BYTE PTR [rdi+0x0],cl
   14001abca:	retf   
   14001abcb:	add    DWORD PTR [rax],eax
   14001abcd:	add    dh,cl
   14001abcf:	add    BYTE PTR [rdx],al
   14001abd1:	add    dh,BYTE PTR [rip+0x3e00ce01]        # 0x17e0279d8
   14001abd7:	add    BYTE PTR [rdx+0x1],ch
   14001abda:	sub    eax,0x11902
   14001abdf:	add    BYTE PTR [rcx],bl
   14001abe1:	add    DWORD PTR [rip+0x3e01],esi        # 0x14001e9e8
   14001abe7:	add    BYTE PTR [rcx+rax*1],bl
   14001abea:	xchg   ebx,eax
   14001abeb:	add    DWORD PTR [rcx],ebx
   14001abed:	add    DWORD PTR [rcx],ebx
   14001abef:	add    DWORD PTR [rax],eax
   14001abf1:	add    BYTE PTR [rip+0x19101],dh        # 0x140033cf8
   14001abf7:	add    dh,cl
   14001abf9:	add    BYTE PTR [rdx],dh
   14001abfb:	add    DWORD PTR [rcx],ebx
   14001abfd:	add    DWORD PTR [rcx+rax*1],esi
   14001ac00:	push   rdi
   14001ac01:	add    edi,ebx
   14001ac03:	add    DWORD PTR [rcx+rax*1+0x3e],edx
   14001ac07:	add    BYTE PTR [rsi],bh
   14001ac09:	add    BYTE PTR [rbp+0x1],dl
   14001ac0c:	ins    BYTE PTR es:[rdi],dx
   14001ac0d:	add    BYTE PTR [rcx+0x1],dl
   14001ac10:	sbb    DWORD PTR [rcx],eax
   14001ac12:	sbb    DWORD PTR [rcx],eax
   14001ac14:	(bad)  
   14001ac15:	add    BYTE PTR [rsi],ch
   14001ac17:	add    DWORD PTR [rip+0x3e01],esi        # 0x14001ea1e
   14001ac1d:	add    BYTE PTR [rdx+0x1],cl
   14001ac20:	xor    BYTE PTR [rcx],al
   14001ac22:	sbb    DWORD PTR [rcx],eax
   14001ac24:	sbb    DWORD PTR [rcx],eax
   14001ac26:	cmp    al,BYTE PTR [rcx]
   14001ac28:	cmp    al,0x1
   14001ac2a:	add    BYTE PTR ds:[rip+0x3e000001],dh        # 0x17e01ac32
   14001ac31:	add    BYTE PTR [rsi],bh
   14001ac33:	add    BYTE PTR [rcx],bl
   14001ac35:	add    DWORD PTR [rcx],ebx
   14001ac37:	add    DWORD PTR [rcx+rax*1+0x19],eax
   14001ac3b:	add    DWORD PTR [rcx],ebx
   14001ac3d:	add    DWORD PTR [rip+0x2012c01],ebp        # 0x14202d844
   14001ac43:	add    dh,BYTE PTR [rdi]
   14001ac45:	add    DWORD PTR [rsi+0x0],ebp
   14001ac48:	mov    cl,0x0
   14001ac4a:	add    BYTE PTR [rax],al
   14001ac4c:	rex.RXB add DWORD PTR [r8],r8d
   14001ac4f:	add    BYTE PTR [rsi],bh
   14001ac51:	add    BYTE PTR [rcx],bh
   14001ac53:	add    cl,BYTE PTR [rdx]
   14001ac55:	add    dh,BYTE PTR [rdx+rax*1]
   14001ac58:	add    QWORD PTR [rcx],rbx
   14001ac5b:	add    DWORD PTR [rcx],ebp
   14001ac5d:	add    ah,BYTE PTR [rcx]
   14001ac5f:	add    DWORD PTR [rbx+0x2],esi
   14001ac62:	xor    DWORD PTR [rdx],eax
   14001ac64:	add    BYTE PTR [rax],al
   14001ac66:	add    BYTE PTR [rax],al
   14001ac68:	add    al,BYTE PTR [rdx]
   14001ac6a:	add    BYTE PTR [rax],al
   14001ac6c:	add    DWORD PTR [rdx],eax
   14001ac6e:	or     eax,DWORD PTR [rdx]
   14001ac70:	add    BYTE PTR [rax],al
   14001ac72:	add    BYTE PTR [rax],al
   14001ac74:	add    al,BYTE PTR [rdx]
   14001ac76:	add    BYTE PTR [rax],al
   14001ac78:	add    BYTE PTR [rax],al
   14001ac7a:	or     al,BYTE PTR [rdx]
	...
   14001ac84:	mov    ebx,0x20a01
   14001ac89:	add    ch,ah
   14001ac8b:	add    DWORD PTR [rax],eax
   14001ac8d:	add    BYTE PTR [rax],al
   14001ac8f:	add    BYTE PTR [rax],al
   14001ac91:	add    BYTE PTR [rcx],al
   14001ac93:	add    cl,BYTE PTR [rbx]
   14001ac95:	add    al,BYTE PTR [rax]
   14001ac97:	add    BYTE PTR [rax],al
   14001ac99:	add    BYTE PTR [rax],al
   14001ac9b:	add    BYTE PTR [rax],al
   14001ac9d:	add    BYTE PTR [rcx],al
   14001ac9f:	add    cl,BYTE PTR [rbx]
   14001aca1:	add    dl,BYTE PTR [rip+0x17021602]        # 0x15703c2a9
   14001aca7:	add    bl,BYTE PTR [rax]
   14001aca9:	add    bl,BYTE PTR [rdx+rax*1]
   14001acac:	sbb    DWORD PTR [rdx],eax
   14001acae:	sbb    al,BYTE PTR [rdx]
	...
   14001acbc:	add    BYTE PTR [rax],al
   14001acbe:	add    al,BYTE PTR [r8]
	...
   14001accd:	add    BYTE PTR [rdx+0x1],ch
   14001acd0:	add    al,BYTE PTR [r10+r8*1+0x15]
   14001acd5:	add    dl,BYTE PTR [rsi]
   14001acd7:	add    dl,BYTE PTR [rdi]
   14001acd9:	add    bl,BYTE PTR [rax]
   14001acdb:	add    bl,BYTE PTR [rdx+rax*1]
   14001acde:	sbb    DWORD PTR [rdx],eax
   14001ace0:	sbb    al,BYTE PTR [rdx]
   14001ace2:	cmp    DWORD PTR [rdx],eax
	...
   14001acec:	add    BYTE PTR [rax],al
   14001acee:	(bad)  
   14001acef:	add    BYTE PTR [rax],al
   14001acf1:	add    BYTE PTR [rax],al
   14001acf3:	add    BYTE PTR [rdx],bh
   14001acf5:	add    bh,BYTE PTR [rbx]
   14001acf7:	add    dl,BYTE PTR [rip+0x17021602]        # 0x15703c2ff
   14001acfd:	add    bl,BYTE PTR [rax]
   14001acff:	add    bl,BYTE PTR [rdx+rax*1]
   14001ad02:	sbb    DWORD PTR [rdx],eax
   14001ad04:	sbb    al,BYTE PTR [rdx]
	...
   14001ad7a:	mov    eax,0x1
	...
   14001ada7:	add    BYTE PTR [rcx+0x2],al
	...
   14001adba:	jno    0x14001adbe
   14001adbc:	jb     0x14001adc0
   14001adbe:	adc    eax,0x17021602
   14001adc3:	add    bl,BYTE PTR [rax]
   14001adc5:	add    bl,BYTE PTR [rdx+rax*1]
   14001adc8:	sbb    DWORD PTR [rdx],eax
   14001adca:	sbb    al,BYTE PTR [rdx]
	...
   14001ae70:	and    al,0x0
   14001ae72:	cmp    al,0x0
   14001ae74:	add    eax,0x1f002400
   14001ae79:	add    BYTE PTR [rdi],al
   14001ae7b:	add    BYTE PTR [rdx+0x0],al
   14001ae7e:	adc    BYTE PTR [rax],al
   14001ae80:	and    DWORD PTR [rax],eax
   14001ae82:	(bad)  
   14001ae83:	add    BYTE PTR [rax+rax*1],ah
   14001ae86:	(bad)  
   14001ae87:	add    BYTE PTR [rdi],al
   14001ae89:	add    BYTE PTR [rdi],al
   14001ae8b:	add    BYTE PTR [rdi],al
   14001ae8d:	add    BYTE PTR [rcx],ah
   14001ae8f:	add    BYTE PTR [rax+rax*1],ah
   14001ae92:	(bad)  
   14001ae93:	add    BYTE PTR [rdi],dh
   14001ae95:	add    BYTE PTR [rax],cl
   14001ae97:	add    BYTE PTR [rax+rax*1],ah
   14001ae9a:	(bad)  
   14001ae9b:	add    BYTE PTR [rdi],al
   14001ae9d:	add    BYTE PTR [rax+rax*1],ah
   14001aea0:	(bad)  
   14001aea1:	add    BYTE PTR [rdi],dh
   14001aea3:	add    BYTE PTR [rdi],al
   14001aea5:	add    BYTE PTR [rdi],al
   14001aea7:	add    BYTE PTR [rax+rax*1],ah
   14001aeaa:	and    al,0x0
   14001aeac:	adc    DWORD PTR [rax],eax
   14001aeae:	(bad)  
   14001aeaf:	add    BYTE PTR [rcx],ah
   14001aeb1:	add    BYTE PTR [rcx],ah
   14001aeb3:	add    BYTE PTR [rdi],al
   14001aeb5:	add    BYTE PTR [rdi],al
   14001aeb7:	add    BYTE PTR [rdi],al
   14001aeb9:	add    BYTE PTR [rax+rax*1],ah
   14001aebc:	(bad)  
   14001aebd:	add    BYTE PTR [rax+rax*1],ah
   14001aec0:	(bad)  
   14001aec1:	add    BYTE PTR [rdi],al
   14001aec3:	add    BYTE PTR [rdx],ah
   14001aec5:	add    BYTE PTR [rax+rax*1],bh
   14001aec8:	(bad)  
   14001aec9:	add    BYTE PTR [rax+rax*1],ah
   14001aecc:	(bad)  
   14001aecd:	add    BYTE PTR [rdx+0x0],al
   14001aed0:	cmp    al,0x0
   14001aed2:	and    DWORD PTR [rax],eax
   14001aed4:	(bad)  
   14001aed5:	add    BYTE PTR [rcx],ah
   14001aed7:	add    BYTE PTR [rdi],al
   14001aed9:	add    BYTE PTR [rbp+0x0],cl
   14001aedc:	and    DWORD PTR [rax],eax
   14001aede:	or     BYTE PTR [rax],al
   14001aee0:	cmp    al,0x0
   14001aee2:	adc    al,0x0
   14001aee4:	and    al,0x0
   14001aee6:	and    DWORD PTR [rax],eax
   14001aee8:	add    DWORD PTR [rax],eax
   14001aeea:	and    al,0x0
   14001aeec:	or     BYTE PTR [rax],al
   14001aeee:	and    DWORD PTR [rax],eax
   14001aef0:	(bad)  
   14001aef1:	add    BYTE PTR [rcx],ah
   14001aef3:	add    BYTE PTR [rdx],al
   14001aef5:	add    BYTE PTR [rdi],dh
   14001aef7:	add    BYTE PTR [rcx],ah
   14001aef9:	add    BYTE PTR [rcx],ah
   14001aefb:	add    BYTE PTR [rip+0x18000100],bl        # 0x15801b001
   14001af01:	add    BYTE PTR [rcx],ah
   14001af03:	add    BYTE PTR [rax],cl
   14001af05:	add    BYTE PTR [rcx],al
   14001af07:	add    bh,bh
   14001af09:	inc    DWORD PTR [rdx]
   14001af0b:	add    BYTE PTR [rdi],dh
   14001af0d:	add    bh,bh
   14001af0f:	jmp    QWORD PTR [rip+0x24000800]        # 0x16401b715
   14001af15:	add    bh,bh
   14001af17:	(bad)  
   14001af18:	(bad)  
   14001af19:	(bad)  
   14001af1a:	(bad)  
   14001af1b:	dec    DWORD PTR [rax]
   14001af1d:	add    BYTE PTR [rax+rax*1],ah
   14001af20:	and    al,0x0
   14001af22:	and    DWORD PTR [rax],eax
   14001af24:	(bad)  
   14001af25:	add    BYTE PTR [rdx],al
   14001af27:	add    BYTE PTR [rax],dh
   14001af29:	add    BYTE PTR [rcx],al
   14001af2b:	add    BYTE PTR [rax+rax*1],ah
   14001af2e:	(bad)  
   14001af2f:	add    BYTE PTR [rax+rax*1],ah
   14001af32:	and    al,0x0
   14001af34:	cmp    al,0x0
   14001af36:	and    al,0x0
   14001af38:	and    DWORD PTR [rax],eax
   14001af3a:	adc    DWORD PTR [rax],eax
   14001af3c:	cmp    al,0x0
   14001af3e:	or     BYTE PTR [rax],al
   14001af40:	add    BYTE PTR [rax],al
   14001af42:	and    al,0x0
   14001af44:	or     BYTE PTR [rax],al
   14001af46:	add    al,BYTE PTR [rax]
   14001af48:	(bad)  
   14001af49:	(bad)  
   14001af4a:	cmp    al,0x0
   14001af4c:	cmp    al,0x0
   14001af4e:	or     BYTE PTR [rax],al
   14001af50:	(bad)  
   14001af51:	add    bh,bh
   14001af53:	(bad)  
   14001af54:	cmp    eax,0x8000700
   14001af59:	add    BYTE PTR [rax],cl
   14001af5b:	add    BYTE PTR [rcx],ah
   14001af5d:	add    BYTE PTR [rax],cl
   14001af5f:	add    bh,bh
   14001af61:	dec    DWORD PTR [rax]
   14001af63:	add    BYTE PTR [rax+rax*1],bh
   14001af66:	(bad)  
   14001af67:	add    BYTE PTR [rax],dh
   14001af69:	add    BYTE PTR [rax+rax*1],bh
   14001af6c:	adc    al,0x0
   14001af6e:	xor    BYTE PTR [rax],al
   14001af70:	or     BYTE PTR [rax],al
   14001af72:	and    al,0x0
   14001af74:	or     BYTE PTR [rax],al
   14001af76:	or     al,BYTE PTR [rax]
   14001af78:	or     BYTE PTR [rax],al
   14001af7a:	cmp    eax,0x37004f00
   14001af7f:	add    bh,bh
   14001af81:	(bad)  
   14001af82:	(bad)  
   14001af83:	push   QWORD PTR [rax]
   14001af85:	add    BYTE PTR [rax],cl
   14001af87:	add    BYTE PTR [rax],cl
   14001af89:	add    BYTE PTR [rax],ch
   14001af8b:	add    BYTE PTR [rax],ch
   14001af8d:	add    BYTE PTR [rip+0x8000800],bh        # 0x14801b793
   14001af93:	add    BYTE PTR [rax+rax*1],bh
   14001af96:	add    eax,0x3e003d00
   14001af9b:	add    BYTE PTR [rdi+0x0],cl
   14001af9e:	cmp    al,0x0
   14001afa0:	xor    eax,DWORD PTR [rax]
   14001afa2:	xor    eax,DWORD PTR [rax]
   14001afa4:	cmp    BYTE PTR [rax],al
   14001afa6:	sub    BYTE PTR [rax],al
   14001afa8:	rex.WRXB add BYTE PTR [rip+0x28003e00],r15b        # 0x16801edaf
   14001afaf:	add    BYTE PTR [rdi+0x0],cl
   14001afb2:	cmp    eax,0x3c003e00
   14001afb7:	add    BYTE PTR [rdx],dh
   14001afb9:	add    BYTE PTR [rax],cl
   14001afbb:	add    BYTE PTR [rbx],dh
   14001afbd:	add    BYTE PTR [rax],bh
   14001afbf:	add    BYTE PTR [rsi],dh
   14001afc1:	add    BYTE PTR [rax+rax*1],bh
   14001afc4:	xor    eax,DWORD PTR [rax]
   14001afc6:	cmp    eax,0x3c003e00
   14001afcb:	add    BYTE PTR [rax],cl
   14001afcd:	add    BYTE PTR [rdx],dh
   14001afcf:	add    BYTE PTR [rdi],dh
   14001afd1:	add    BYTE PTR [rip+0x36003e00],bh        # 0x17601edd7
   14001afd7:	add    BYTE PTR [rax+rax*1],bh
   14001afda:	sbb    eax,0x2a003c00
   14001afdf:	add    BYTE PTR [rax+rax*1],bh
   14001afe2:	pop    rbx
   14001afe3:	add    BYTE PTR [rax+rax*1+0x38],bl
   14001afe7:	add    BYTE PTR [rax],bh
   14001afe9:	add    BYTE PTR [rip+0x3d003e00],bh        # 0x17d01edef
   14001afef:	add    BYTE PTR [rsi],bh
   14001aff1:	add    BYTE PTR [rax],bh
   14001aff3:	add    BYTE PTR [rip+0x3c000f00],dh        # 0x17c01bef9
   14001aff9:	add    BYTE PTR [rax],cl
   14001affb:	add    BYTE PTR [rdi],al
   14001affd:	add    BYTE PTR [rip+0x3d003e00],bh        # 0x17d01ee03
   14001b003:	add    BYTE PTR [rsi],bh
   14001b005:	add    BYTE PTR [rip+0x3e003d00],bl        # 0x17e01ed0b
   14001b00b:	add    BYTE PTR [rip+0x8001900],bl        # 0x14801c911
   14001b011:	add    BYTE PTR [rbx],bl
   14001b013:	add    BYTE PTR [rdi],al
   14001b015:	add    bh,bh
   14001b017:	dec    DWORD PTR [rdi]
   14001b019:	add    BYTE PTR [rip+0x8002200],bl        # 0x14801d21f
   14001b01f:	add    BYTE PTR [rax+rax*1],ah
   14001b022:	sbb    DWORD PTR [rax],eax
   14001b024:	cmp    eax,0x26001b00
   14001b029:	add    BYTE PTR [rax+rax*1],cl
   14001b02c:	(bad)  
   14001b02d:	call   FWORD PTR [rcx]
   14001b02f:	add    BYTE PTR [rcx],ah
   14001b031:	add    BYTE PTR [rbx],bl
   14001b033:	add    BYTE PTR [rax+rax*1],bh
   14001b036:	rex.WXB add BYTE PTR [r8+r8*1],cl
   14001b03a:	and    al,0x0
   14001b03c:	add    BYTE PTR es:[rdx],ah
   14001b03f:	add    BYTE PTR [rcx+0x0],bl
   14001b042:	and    al,0x0
   14001b044:	sbb    eax,0x26000700
   14001b049:	add    BYTE PTR [rip+0xffffffffff005600],bl        # 0x13f02064f
   14001b04f:	call   FWORD PTR [rcx]
   14001b051:	add    BYTE PTR [rax+rax*1],cl
   14001b054:	sbb    eax,DWORD PTR [rax]
   14001b056:	sbb    DWORD PTR [rax],eax
   14001b058:	sbb    DWORD PTR [rax],eax
   14001b05a:	sbb    eax,DWORD PTR [rax]
   14001b05c:	sbb    eax,DWORD PTR [rax]
   14001b05e:	(bad)  
   14001b05f:	add    BYTE PTR [rdi],cl
   14001b061:	add    BYTE PTR [rbx+0x0],cl
   14001b064:	cmp    eax,0x4b003e00
   14001b069:	add    BYTE PTR [rsi],ah
   14001b06b:	add    BYTE PTR [rip+0x26003e00],bh        # 0x16601ee71
   14001b071:	add    BYTE PTR [rsi],ah
   14001b073:	add    bh,bh
   14001b075:	dec    DWORD PTR [rbx+0x0]
   14001b078:	push   rsi
   14001b079:	add    BYTE PTR [rip+0x56003e00],bh        # 0x19601ee7f
   14001b07f:	add    BYTE PTR [rip+0x39003e00],bh        # 0x17901ee85
   14001b085:	add    BYTE PTR [rdx],ah
   14001b087:	add    BYTE PTR [rip+0x56003e00],bh        # 0x19601ee8d
   14001b08d:	add    bh,bh
   14001b08f:	(bad)  
   14001b090:	(bad)  
   14001b091:	add    BYTE PTR [rcx],bh
   14001b093:	add    BYTE PTR [rdi],cl
   14001b095:	add    BYTE PTR [rip+0xf003e00],bh        # 0x14f01ee9b
   14001b09b:	add    bh,bh
   14001b09d:	(bad)  
   14001b09e:	(bad)  
   14001b09f:	add    BYTE PTR [rbx+0x0],cl
   14001b0a2:	adc    al,BYTE PTR [rax]
   14001b0a4:	adc    eax,DWORD PTR [rax]
   14001b0a6:	rex.WXB add r15b,dil
   14001b0a9:	call   FWORD PTR [rsi+0x0]
   14001b0ac:	cmp    DWORD PTR [rax],eax
   14001b0ae:	adc    al,BYTE PTR [rax]
   14001b0b0:	adc    eax,DWORD PTR [rax]
   14001b0b2:	cmp    eax,0x56003e00
   14001b0b7:	add    BYTE PTR [rdi],bh
   14001b0b9:	add    BYTE PTR [rdx],ah
   14001b0bb:	add    BYTE PTR [rsi+0x0],dl
   14001b0be:	and    al,0x0
   14001b0c0:	and    al,BYTE PTR [rax]
   14001b0c2:	(bad)  
   14001b0c3:	add    BYTE PTR [rax+rax*1],ah
   14001b0c6:	adc    al,BYTE PTR [rax]
   14001b0c8:	adc    eax,DWORD PTR [rax]
   14001b0ca:	cmp    eax,0xf003e00
   14001b0cf:	add    bh,bh
   14001b0d1:	call   QWORD PTR [rdx]
   14001b0d3:	add    BYTE PTR [rbx],dl
   14001b0d5:	add    BYTE PTR [rbp+0x0],bl
   14001b0d8:	sub    eax,0xf002e00
   14001b0dd:	add    BYTE PTR [rip+0xffffffffff003e00],bh        # 0x13f01eee3
   14001b0e3:	jmp    FWORD PTR [rip+0xffffffffff002e00]        # 0x13f01dee9
   14001b0e9:	(bad)  
   14001b0ea:	(bad)  
   14001b0eb:	(bad)  
   14001b0ec:	(bad)  
   14001b0ed:	(bad)  
   14001b0ee:	(bad)  
   14001b0ef:	(bad)  
   14001b0f0:	(bad)  
   14001b0f1:	jmp    QWORD PTR [rcx]
   14001b0f3:	add    BYTE PTR [rdx],ah
   14001b0f5:	add    bh,bh
   14001b0f7:	jmp    QWORD PTR [rax+rax*1]
   14001b0fa:	(bad)  
   14001b0fb:	jmp    FWORD PTR [rip+0x21002e00]        # 0x16101df01
   14001b101:	add    BYTE PTR [rdx],ah
   14001b103:	add    bh,bh
   14001b105:	jmp    QWORD PTR [rax+rax*1]
   14001b108:	sub    eax,0xff002e00
   14001b10d:	call   QWORD PTR [rdi]
   14001b10f:	add    BYTE PTR [rax],bl
   14001b111:	add    bh,bh
   14001b113:	(bad)  
   14001b114:	(bad)  
   14001b115:	call   FWORD PTR [rcx]
   14001b117:	add    bh,bh
   14001b119:	call   FWORD PTR [rbx]
   14001b11b:	add    bh,bh
   14001b11d:	call   FWORD PTR [rbp+0x0]
   14001b120:	and    BYTE PTR [rax],al
   14001b122:	(bad)  
   14001b123:	add    BYTE PTR [rax],bl
   14001b125:	add    BYTE PTR [rbx],ah
   14001b127:	add    BYTE PTR [rip+0xffffffffff002500],bl        # 0x13f01d62d
   14001b12d:	(bad)  
   14001b12e:	(bad)  
   14001b12f:	jmp    QWORD PTR [rsi]
   14001b131:	add    BYTE PTR [rdi],bl
   14001b133:	add    BYTE PTR [rax],ah
   14001b135:	add    bh,bh
   14001b137:	(bad)  
   14001b138:	(bad)  
   14001b139:	jmp    QWORD PTR [rbx]
   14001b13b:	add    BYTE PTR [rip+0x17002500],bl        # 0x15701d641
   14001b141:	add    BYTE PTR [rax],bl
   14001b143:	add    BYTE PTR [rdx+0x0],ah
   14001b146:	movsxd eax,DWORD PTR [rax]
   14001b148:	add    BYTE PTR fs:[rbp+0x0],ah
   14001b14c:	data16 add BYTE PTR [rdi+0x0],ah
   14001b150:	(bad)  
   14001b151:	add    BYTE PTR [rax],ah
   14001b153:	add    BYTE PTR [rdi],dl
   14001b155:	add    BYTE PTR [rax],bl
   14001b157:	add    BYTE PTR [rbx],ah
   14001b159:	add    BYTE PTR [rip+0xffffffffff002500],bl        # 0x13f01d65f
   14001b15f:	(bad)  
   14001b160:	(bad)  
   14001b161:	(bad)  
   14001b162:	(bad)  
   14001b163:	call   FWORD PTR [rdi]
   14001b165:	add    BYTE PTR [rax],ah
   14001b167:	add    BYTE PTR [rdi],dl
   14001b169:	add    BYTE PTR [rax],bl
   14001b16b:	add    BYTE PTR [rbx],ah
   14001b16d:	add    bh,bh
   14001b16f:	jmp    QWORD PTR [rip+0x43004200]        # 0x18301f375
   14001b175:	add    BYTE PTR [rax+rax*1+0x1f],al
   14001b179:	add    BYTE PTR [rax],ah
   14001b17b:	add    BYTE PTR [rdi],dl
   14001b17d:	add    BYTE PTR [rax],bl
   14001b17f:	add    BYTE PTR [rbx],ah
   14001b181:	add    bh,bh
   14001b183:	jmp    QWORD PTR [rip+0x43004200]        # 0x18301f389
   14001b189:	add    BYTE PTR [rax+rax*1+0x1f],al
   14001b18d:	add    BYTE PTR [rax],ah
   14001b18f:	add    bh,bh
   14001b191:	(bad)  
   14001b192:	(bad)  
   14001b193:	jmp    QWORD PTR [rbx]
   14001b195:	add    bh,bh
   14001b197:	jmp    QWORD PTR [rip+0xffffffffff001d00]        # 0x13f01ce9d
   14001b19d:	(bad)  
   14001b19e:	(bad)  
   14001b19f:	call   FWORD PTR [rip+0x42ffff00]        # 0x18301b0a5
   14001b1a5:	add    BYTE PTR [rbx+0x0],al
   14001b1a8:	add    BYTE PTR [rsi+0x0],r11b
   14001b1ac:	pop    rdi
   14001b1ad:	add    BYTE PTR [rax+0x0],ah
   14001b1b0:	sbb    eax,0xffffff00
   14001b1b5:	call   FWORD PTR [rip+0x18001700]        # 0x15801c8bb
   14001b1bb:	add    BYTE PTR [rip+0x5f005e00],bl        # 0x19f020fc1
   14001b1c1:	add    BYTE PTR [rax+0x0],ah
   14001b1c4:	(bad)  
   14001b1c5:	(bad)  
   14001b1c6:	(bad)  
   14001b1c7:	call   FWORD PTR [rip+0xffffffffff002000]        # 0x13f01d1cd
   14001b1cd:	(bad)  
   14001b1ce:	(bad)  
   14001b1cf:	jmp    QWORD PTR [rbx]
   14001b1d1:	add    bh,bh
   14001b1d3:	jmp    QWORD PTR [rip+0xffffffffff002400]        # 0x13f01d5d9
   14001b1d9:	(bad)  
   14001b1da:	(bad)  
   14001b1db:	call   FWORD PTR [rsi+0x0]
   14001b1de:	pop    rdi
   14001b1df:	add    BYTE PTR [rax+0x0],ah
   14001b1e2:	sbb    eax,0x43004200
   14001b1e7:	add    BYTE PTR [rax+rax*1+0x42],al
   14001b1eb:	add    BYTE PTR [rbx+0x0],al
   14001b1ee:	add    BYTE PTR [rax+rax*1],r12b
   14001b1f2:	(bad)  
   14001b1f3:	(bad)  
   14001b1f4:	(bad)  
   14001b1f5:	(bad)  
   14001b1f6:	(bad)  
   14001b1f7:	(bad)  
   14001b1f8:	(bad)  
   14001b1f9:	inc    DWORD PTR [rdx+0x0]
   14001b1fc:	add    BYTE PTR [r8+r8*1+0x42],al
   14001b201:	add    BYTE PTR [rbx+0x0],al
   14001b204:	add    BYTE PTR [rdx+0x0],r8b
   14001b208:	add    BYTE PTR [r8+r8*1+0x1d],al
   14001b20d:	add    bh,bh
   14001b20f:	(bad)  
   14001b210:	(bad)  
   14001b211:	inc    DWORD PTR [rdx+0x0]
   14001b214:	add    BYTE PTR [r8+r8*1-0x1],al
   14001b219:	jmp    QWORD PTR [rax+rax*1]
   14001b21c:	pop    rsi
   14001b21d:	add    BYTE PTR [rdi+0x0],bl
   14001b220:	(bad)  
   14001b221:	add    BYTE PTR [rsi+0x0],bl
   14001b224:	pop    rdi
   14001b225:	add    BYTE PTR [rax+0x0],ah
   14001b228:	(bad)  
   14001b229:	(bad)  
   14001b22a:	(bad)  
   14001b22b:	inc    DWORD PTR [rdx+0x0]
   14001b22e:	add    BYTE PTR [r8+r8*1+0x5e],al
   14001b233:	add    BYTE PTR [rdi+0x0],bl
   14001b236:	(bad)  
   14001b237:	add    BYTE PTR [rsi+0x0],bl
   14001b23a:	pop    rdi
   14001b23b:	add    BYTE PTR [rax+0x0],ah
   14001b23e:	pop    rsi
   14001b23f:	add    BYTE PTR [rdi+0x0],bl
   14001b242:	(bad)  
   14001b243:	add    bh,bh
   14001b245:	(bad)  
   14001b246:	(bad)  
   14001b247:	(bad)  
   14001b248:	(bad)  
   14001b249:	call   FWORD PTR [rsi+0x0]
   14001b24c:	pop    rdi
   14001b24d:	add    BYTE PTR [rax+0x0],ah
   14001b250:	(bad)  
   14001b251:	(bad)  
   14001b252:	(bad)  
   14001b253:	call   FWORD PTR [rip+0x43004200]        # 0x18301f459
   14001b259:	add    BYTE PTR [rax+rax*1-0x1],al
   14001b25d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b163
   14001b263:	call   FWORD PTR [rsi+0x0]
   14001b266:	pop    rdi
   14001b267:	add    BYTE PTR [rax+0x0],ah
   14001b26a:	(bad)  
   14001b26b:	(bad)  
   14001b26c:	(bad)  
   14001b26d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b173
   14001b273:	(bad)  
   14001b274:	(bad)  
   14001b275:	(bad)  
   14001b276:	(bad)  
   14001b277:	(bad)  
   14001b278:	(bad)  
   14001b279:	(bad)  
   14001b27a:	(bad)  
   14001b27b:	(bad)  
   14001b27c:	(bad)  
   14001b27d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b183
   14001b283:	(bad)  
   14001b284:	(bad)  
   14001b285:	(bad)  
   14001b286:	(bad)  
   14001b287:	(bad)  
   14001b288:	(bad)  
   14001b289:	(bad)  
   14001b28a:	(bad)  
   14001b28b:	(bad)  
   14001b28c:	(bad)  
   14001b28d:	call   FWORD PTR [rsi+0x0]
   14001b290:	pop    rdi
   14001b291:	add    BYTE PTR [rax+0x0],ah
   14001b294:	cmp    eax,0xff003e00
   14001b299:	(bad)  
   14001b29a:	(bad)  
   14001b29b:	(bad)  
   14001b29c:	(bad)  
   14001b29d:	inc    DWORD PTR [rdx+0x0]
   14001b2a0:	add    BYTE PTR [r8+r8*1-0x1],al
   14001b2a5:	(bad)  
   14001b2a6:	(bad)  
   14001b2a7:	inc    DWORD PTR [rdx+0x0]
   14001b2aa:	add    BYTE PTR [r8+r8*1+0x3d],al
   14001b2af:	add    BYTE PTR [rsi],bh
   14001b2b1:	add    bh,bh
   14001b2b3:	(bad)  
   14001b2b4:	(bad)  
   14001b2b5:	(bad)  
   14001b2b6:	(bad)  
   14001b2b7:	inc    DWORD PTR [rdx+0x0]
   14001b2ba:	add    BYTE PTR [r8+r8*1+0x3d],al
   14001b2bf:	add    BYTE PTR [rsi],bh
   14001b2c1:	add    bh,bh
   14001b2c3:	(bad)  
   14001b2c4:	(bad)  
   14001b2c5:	(bad)  
   14001b2c6:	(bad)  
   14001b2c7:	inc    DWORD PTR [rdx+0x0]
   14001b2ca:	add    BYTE PTR [r8+r8*1-0x1],al
   14001b2cf:	(bad)  
   14001b2d0:	(bad)  
   14001b2d1:	(bad)  
   14001b2d2:	(bad)  
   14001b2d3:	(bad)  
   14001b2d4:	(bad)  
   14001b2d5:	call   FWORD PTR [rsi+0x0]
   14001b2d8:	pop    rdi
   14001b2d9:	add    BYTE PTR [rax+0x0],ah
   14001b2dc:	(bad)  
   14001b2dd:	(bad)  
   14001b2de:	(bad)  
   14001b2df:	call   FWORD PTR [rsi+0x0]
   14001b2e2:	pop    rdi
   14001b2e3:	add    BYTE PTR [rax+0x0],ah
   14001b2e6:	(bad)  
   14001b2e7:	(bad)  
   14001b2e8:	(bad)  
   14001b2e9:	(bad)  
   14001b2ea:	(bad)  
   14001b2eb:	(bad)  
   14001b2ec:	(bad)  
   14001b2ed:	(bad)  
   14001b2ee:	(bad)  
   14001b2ef:	call   FWORD PTR [rsi+0x0]
   14001b2f2:	pop    rdi
   14001b2f3:	add    BYTE PTR [rax+0x0],ah
   14001b2f6:	(bad)  
   14001b2f7:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b1fd
   14001b2fd:	(bad)  
   14001b2fe:	(bad)  
   14001b2ff:	call   FWORD PTR [rsi+0x0]
   14001b302:	pop    rdi
   14001b303:	add    BYTE PTR [rax+0x0],ah
   14001b306:	(bad)  
   14001b307:	(bad)  
   14001b308:	(bad)  
   14001b309:	(bad)  
   14001b30a:	(bad)  
   14001b30b:	(bad)  
   14001b30c:	(bad)  
   14001b30d:	(bad)  
   14001b30e:	(bad)  
   14001b30f:	(bad)  
   14001b310:	(bad)  
   14001b311:	(bad)  
   14001b312:	(bad)  
   14001b313:	(bad)  
   14001b314:	(bad)  
   14001b315:	(bad)  
   14001b316:	(bad)  
   14001b317:	(bad)  
   14001b318:	(bad)  
   14001b319:	(bad)  
   14001b31a:	(bad)  
   14001b31b:	(bad)  
   14001b31c:	(bad)  
   14001b31d:	(bad)  
   14001b31e:	(bad)  
   14001b31f:	(bad)  
   14001b320:	(bad)  
   14001b321:	(bad)  
   14001b322:	(bad)  
   14001b323:	(bad)  
   14001b324:	(bad)  
   14001b325:	(bad)  
   14001b326:	(bad)  
   14001b327:	(bad)  
   14001b328:	(bad)  
   14001b329:	(bad)  
   14001b32a:	(bad)  
   14001b32b:	(bad)  
   14001b32c:	(bad)  
   14001b32d:	(bad)  
   14001b32e:	(bad)  
   14001b32f:	(bad)  
   14001b330:	(bad)  
   14001b331:	(bad)  
   14001b332:	(bad)  
   14001b333:	(bad)  
   14001b334:	(bad)  
   14001b335:	(bad)  
   14001b336:	(bad)  
   14001b337:	(bad)  
   14001b338:	cmp    eax,0x3003e00
   14001b33d:	add    bh,bh
   14001b33f:	(bad)  
   14001b340:	(bad)  
   14001b341:	inc    DWORD PTR [rdx+0x0]
   14001b344:	add    BYTE PTR [r8+r8*1-0x1],al
   14001b349:	(bad)  
   14001b34a:	(bad)  
   14001b34b:	(bad)  
   14001b34c:	(bad)  
   14001b34d:	(bad)  
   14001b34e:	(bad)  
   14001b34f:	dec    DWORD PTR [rip+0xffffffffffffff00]        # 0x14001b255
   14001b355:	(bad)  
   14001b356:	(bad)  
   14001b357:	call   QWORD PTR [rcx]
   14001b359:	add    bh,bh
   14001b35b:	(bad)  
   14001b35c:	(bad)  
   14001b35d:	(bad)  
   14001b35e:	(bad)  
   14001b35f:	(bad)  
   14001b360:	(bad)  
   14001b361:	(bad)  
   14001b362:	(bad)  
   14001b363:	(bad)  
   14001b364:	(bad)  
   14001b365:	(bad)  
   14001b366:	(bad)  
   14001b367:	(bad)  
   14001b368:	(bad)  
   14001b369:	call   FWORD PTR [rdx]
   14001b36b:	add    bh,bh
   14001b36d:	call   FWORD PTR [rax+rax*1]
   14001b370:	(bad)  
   14001b371:	(bad)  
   14001b372:	(bad)  
   14001b373:	call   FWORD PTR [rdi]
   14001b375:	add    bh,bh
   14001b377:	(bad)  
   14001b378:	(bad)  
   14001b379:	call   FWORD PTR [rsi+0x0]
   14001b37c:	pop    rdi
   14001b37d:	add    BYTE PTR [rax+0x0],ah
   14001b380:	(bad)  
   14001b381:	(bad)  
   14001b382:	(bad)  
   14001b383:	jmp    QWORD PTR [rdi]
   14001b385:	add    bh,bh
   14001b387:	jmp    FWORD PTR [rcx]
   14001b389:	add    BYTE PTR [rdx],ch
   14001b38b:	add    bh,bh
   14001b38d:	dec    DWORD PTR [rax+rax*1]
   14001b390:	or     eax,0xff000300
   14001b395:	(bad)  
   14001b396:	(bad)  
   14001b397:	push   QWORD PTR [rcx]
   14001b399:	add    bh,bh
   14001b39b:	(bad)  
   14001b39c:	(bad)  
   14001b39d:	push   QWORD PTR [rax+rax*1]
   14001b3a0:	xor    eax,0xff001600
   14001b3a5:	dec    DWORD PTR [rip+0x3affff00]        # 0x17b01b2ab
   14001b3ab:	add    bh,bh
   14001b3ad:	call   QWORD PTR [rcx]
   14001b3af:	add    BYTE PTR [rip+0xffffffffffffff00],bl        # 0x14001b2b5
   14001b3b5:	inc    DWORD PTR [rax+0x0]
   14001b3b8:	and    DWORD PTR [rax],eax
   14001b3ba:	and    al,BYTE PTR [rax]
   14001b3bc:	(bad)  
   14001b3bd:	jmp    QWORD PTR [rax+rax*1]
   14001b3c0:	sbb    al,BYTE PTR [rax]
   14001b3c2:	(bad)  
   14001b3c3:	call   FWORD PTR [rax+rax*1]
   14001b3c6:	(bad)  
   14001b3c7:	(bad)  
   14001b3c8:	(bad)  
   14001b3c9:	(bad)  
   14001b3ca:	(bad)  
   14001b3cb:	jmp    FWORD PTR [rbx]
   14001b3cd:	add    bh,bh
   14001b3cf:	(bad)  
   14001b3d0:	(bad)  
   14001b3d1:	(bad)  
   14001b3d2:	(bad)  
   14001b3d3:	jmp    FWORD PTR [rdi]
   14001b3d5:	add    BYTE PTR [rax+0x0],dl
   14001b3d8:	(bad)  
   14001b3d9:	jmp    QWORD PTR [rdi]
   14001b3db:	add    bh,bh
   14001b3dd:	jmp    FWORD PTR [rcx]
   14001b3df:	add    BYTE PTR [rdx],ch
   14001b3e1:	add    bh,bh
   14001b3e3:	(bad)  
   14001b3e4:	(bad)  
   14001b3e5:	(bad)  
   14001b3e6:	(bad)  
   14001b3e7:	(bad)  
   14001b3e8:	(bad)  
   14001b3e9:	(bad)  
   14001b3ea:	(bad)  
   14001b3eb:	(bad)  
   14001b3ec:	(bad)  
   14001b3ed:	push   QWORD PTR [rcx]
   14001b3ef:	add    bh,bh
   14001b3f1:	(bad)  
   14001b3f2:	(bad)  
   14001b3f3:	push   QWORD PTR [rax+rax*1]
   14001b3f6:	xor    eax,0x42004100
   14001b3fb:	add    BYTE PTR [rbx+0x0],al
   14001b3fe:	add    BYTE PTR [rdx],r15b
   14001b401:	add    BYTE PTR [rsi+0x0],al
   14001b404:	(bad)  
   14001b405:	(bad)  
   14001b406:	(bad)  
   14001b407:	(bad)  
   14001b408:	(bad)  
   14001b409:	(bad)  
   14001b40a:	(bad)  
   14001b40b:	inc    DWORD PTR [rax+0x0]
   14001b40e:	(bad)  
   14001b40f:	(bad)  
   14001b410:	(bad)  
   14001b411:	(bad)  
   14001b412:	(bad)  
   14001b413:	(bad)  
   14001b414:	(bad)  
   14001b415:	(bad)  
   14001b416:	(bad)  
   14001b417:	call   QWORD PTR [rcx+0x0]
   14001b41a:	push   rdx
   14001b41b:	add    BYTE PTR [rbx+0x0],dl
   14001b41e:	(bad)  
   14001b41f:	(bad)  
   14001b420:	(bad)  
   14001b421:	(bad)  
   14001b422:	(bad)  
   14001b423:	call   QWORD PTR [rdi+0x0]
   14001b426:	(bad)  
   14001b427:	(bad)  
   14001b428:	(bad)  
   14001b429:	(bad)  
   14001b42a:	(bad)  
   14001b42b:	call   QWORD PTR [rax+0x0]
   14001b42e:	(bad)  
   14001b42f:	(bad)  
   14001b430:	(bad)  
   14001b431:	call   FWORD PTR [rsi+0x0]
   14001b434:	pop    rdi
   14001b435:	add    BYTE PTR [rax+0x0],ah
   14001b438:	(bad)  
   14001b439:	(bad)  
   14001b43a:	(bad)  
   14001b43b:	(bad)  
   14001b43c:	(bad)  
   14001b43d:	(bad)  
   14001b43e:	(bad)  
   14001b43f:	(bad)  
   14001b440:	(bad)  
   14001b441:	(bad)  
   14001b442:	(bad)  
   14001b443:	(bad)  
   14001b444:	(bad)  
   14001b445:	(bad)  
   14001b446:	(bad)  
   14001b447:	(bad)  
   14001b448:	(bad)  
   14001b449:	(bad)  
   14001b44a:	(bad)  
   14001b44b:	(bad)  
   14001b44c:	(bad)  
   14001b44d:	(bad)  
   14001b44e:	(bad)  
   14001b44f:	(bad)  
   14001b450:	(bad)  
   14001b451:	(bad)  
   14001b452:	(bad)  
   14001b453:	(bad)  
   14001b454:	(bad)  
   14001b455:	(bad)  
   14001b456:	(bad)  
   14001b457:	(bad)  
   14001b458:	(bad)  
   14001b459:	(bad)  
   14001b45a:	(bad)  
   14001b45b:	(bad)  
   14001b45c:	(bad)  
   14001b45d:	(bad)  
   14001b45e:	(bad)  
   14001b45f:	dec    DWORD PTR [rax+rax*1]
   14001b462:	or     eax,0xffffff00
   14001b467:	(bad)  
   14001b468:	(bad)  
   14001b469:	(bad)  
   14001b46a:	(bad)  
   14001b46b:	(bad)  
   14001b46c:	(bad)  
   14001b46d:	(bad)  
   14001b46e:	(bad)  
   14001b46f:	(bad)  
   14001b470:	(bad)  
   14001b471:	(bad)  
   14001b472:	(bad)  
   14001b473:	call   QWORD PTR [rsi]
   14001b475:	add    bh,bh
   14001b477:	(bad)  
   14001b478:	(bad)  
   14001b479:	(bad)  
   14001b47a:	(bad)  
   14001b47b:	(bad)  
   14001b47c:	(bad)  
   14001b47d:	(bad)  
   14001b47e:	(bad)  
   14001b47f:	(bad)  
   14001b480:	(bad)  
   14001b481:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b387
   14001b487:	(bad)  
   14001b488:	(bad)  
   14001b489:	jmp    QWORD PTR [rcx]
   14001b48b:	add    BYTE PTR [rdx],ah
   14001b48d:	add    bh,bh
   14001b48f:	jmp    QWORD PTR [rax+rax*1]
   14001b492:	(bad)  
   14001b493:	(bad)  
   14001b494:	(bad)  
   14001b495:	(bad)  
   14001b496:	(bad)  
   14001b497:	(bad)  
   14001b498:	(bad)  
   14001b499:	(bad)  
   14001b49a:	(bad)  
   14001b49b:	(bad)  
   14001b49c:	(bad)  
   14001b49d:	jmp    FWORD PTR [rbx]
   14001b49f:	add    bh,bh
   14001b4a1:	(bad)  
   14001b4a2:	(bad)  
   14001b4a3:	(bad)  
   14001b4a4:	(bad)  
   14001b4a5:	jmp    FWORD PTR [rdi]
   14001b4a7:	add    bh,bh
   14001b4a9:	(bad)  
   14001b4aa:	(bad)  
   14001b4ab:	(bad)  
   14001b4ac:	(bad)  
   14001b4ad:	(bad)  
   14001b4ae:	(bad)  
   14001b4af:	(bad)  
   14001b4b0:	(bad)  
   14001b4b1:	(bad)  
   14001b4b2:	(bad)  
   14001b4b3:	(bad)  
   14001b4b4:	(bad)  
   14001b4b5:	(bad)  
   14001b4b6:	(bad)  
   14001b4b7:	(bad)  
   14001b4b8:	(bad)  
   14001b4b9:	(bad)  
   14001b4ba:	(bad)  
   14001b4bb:	(bad)  
   14001b4bc:	(bad)  
   14001b4bd:	(bad)  
   14001b4be:	(bad)  
   14001b4bf:	(bad)  
   14001b4c0:	(bad)  
   14001b4c1:	(bad)  
   14001b4c2:	(bad)  
   14001b4c3:	(bad)  
   14001b4c4:	(bad)  
   14001b4c5:	(bad)  
   14001b4c6:	(bad)  
   14001b4c7:	(bad)  
   14001b4c8:	(bad)  
   14001b4c9:	inc    DWORD PTR [rcx+0x0]
   14001b4cc:	rex.X add BYTE PTR [rbx+0x0],al
   14001b4d0:	add    dil,r15b
   14001b4d3:	inc    DWORD PTR [rsi+0x0]
   14001b4d6:	(bad)  
   14001b4d7:	(bad)  
   14001b4d8:	(bad)  
   14001b4d9:	(bad)  
   14001b4da:	(bad)  
   14001b4db:	(bad)  
   14001b4dc:	(bad)  
   14001b4dd:	(bad)  
   14001b4de:	(bad)  
   14001b4df:	(bad)  
   14001b4e0:	(bad)  
   14001b4e1:	(bad)  
   14001b4e2:	(bad)  
   14001b4e3:	(bad)  
   14001b4e4:	(bad)  
   14001b4e5:	(bad)  
   14001b4e6:	(bad)  
   14001b4e7:	(bad)  
   14001b4e8:	(bad)  
   14001b4e9:	call   QWORD PTR [rcx+0x0]
   14001b4ec:	push   rdx
   14001b4ed:	add    BYTE PTR [rbx+0x0],dl
   14001b4f0:	(bad)  
   14001b4f1:	(bad)  
   14001b4f2:	(bad)  
   14001b4f3:	(bad)  
   14001b4f4:	(bad)  
   14001b4f5:	call   QWORD PTR [rdi+0x0]
   14001b4f8:	(bad)  
   14001b4f9:	(bad)  
   14001b4fa:	(bad)  
   14001b4fb:	(bad)  
   14001b4fc:	(bad)  
   14001b4fd:	(bad)  
   14001b4fe:	(bad)  
   14001b4ff:	(bad)  
   14001b500:	(bad)  
   14001b501:	(bad)  
   14001b502:	(bad)  
   14001b503:	call   FWORD PTR [rsi+0x0]
   14001b506:	pop    rdi
   14001b507:	add    BYTE PTR [rax+0x0],ah
   14001b50a:	(bad)  
   14001b50b:	(bad)  
   14001b50c:	(bad)  
   14001b50d:	(bad)  
   14001b50e:	(bad)  
   14001b50f:	(bad)  
   14001b510:	(bad)  
   14001b511:	(bad)  
   14001b512:	(bad)  
   14001b513:	(bad)  
   14001b514:	(bad)  
   14001b515:	(bad)  
   14001b516:	(bad)  
   14001b517:	(bad)  
   14001b518:	(bad)  
   14001b519:	(bad)  
   14001b51a:	(bad)  
   14001b51b:	dec    DWORD PTR [rax+rax*1]
   14001b51e:	or     eax,0xffffff00
   14001b523:	(bad)  
   14001b524:	(bad)  
   14001b525:	(bad)  
   14001b526:	(bad)  
   14001b527:	(bad)  
   14001b528:	(bad)  
   14001b529:	(bad)  
   14001b52a:	(bad)  
   14001b52b:	(bad)  
   14001b52c:	(bad)  
   14001b52d:	(bad)  
   14001b52e:	(bad)  
   14001b52f:	call   QWORD PTR [rsi]
   14001b531:	add    bh,bh
   14001b533:	(bad)  
   14001b534:	(bad)  
   14001b535:	(bad)  
   14001b536:	(bad)  
   14001b537:	(bad)  
   14001b538:	(bad)  
   14001b539:	(bad)  
   14001b53a:	(bad)  
   14001b53b:	(bad)  
   14001b53c:	(bad)  
   14001b53d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b443
   14001b543:	(bad)  
   14001b544:	(bad)  
   14001b545:	jmp    QWORD PTR [rcx]
   14001b547:	add    BYTE PTR [rdx],ah
   14001b549:	add    bh,bh
   14001b54b:	jmp    QWORD PTR [rax+rax*1]
   14001b54e:	(bad)  
   14001b54f:	(bad)  
   14001b550:	(bad)  
   14001b551:	(bad)  
   14001b552:	(bad)  
   14001b553:	(bad)  
   14001b554:	(bad)  
   14001b555:	(bad)  
   14001b556:	(bad)  
   14001b557:	(bad)  
   14001b558:	(bad)  
   14001b559:	jmp    FWORD PTR [rbx]
   14001b55b:	add    bh,bh
   14001b55d:	(bad)  
   14001b55e:	(bad)  
   14001b55f:	(bad)  
   14001b560:	(bad)  
   14001b561:	jmp    FWORD PTR [rdi]
   14001b563:	add    bh,bh
   14001b565:	(bad)  
   14001b566:	(bad)  
   14001b567:	(bad)  
   14001b568:	(bad)  
   14001b569:	(bad)  
   14001b56a:	(bad)  
   14001b56b:	(bad)  
   14001b56c:	(bad)  
   14001b56d:	(bad)  
   14001b56e:	(bad)  
   14001b56f:	(bad)  
   14001b570:	(bad)  
   14001b571:	(bad)  
   14001b572:	(bad)  
   14001b573:	(bad)  
   14001b574:	(bad)  
   14001b575:	(bad)  
   14001b576:	(bad)  
   14001b577:	(bad)  
   14001b578:	(bad)  
   14001b579:	(bad)  
   14001b57a:	(bad)  
   14001b57b:	(bad)  
   14001b57c:	(bad)  
   14001b57d:	(bad)  
   14001b57e:	(bad)  
   14001b57f:	(bad)  
   14001b580:	(bad)  
   14001b581:	(bad)  
   14001b582:	(bad)  
   14001b583:	(bad)  
   14001b584:	(bad)  
   14001b585:	inc    DWORD PTR [rcx+0x0]
   14001b588:	rex.X add BYTE PTR [rbx+0x0],al
   14001b58c:	add    dil,r15b
   14001b58f:	inc    DWORD PTR [rsi+0x0]
   14001b592:	(bad)  
   14001b593:	(bad)  
   14001b594:	(bad)  
   14001b595:	(bad)  
   14001b596:	(bad)  
   14001b597:	(bad)  
   14001b598:	(bad)  
   14001b599:	(bad)  
   14001b59a:	(bad)  
   14001b59b:	(bad)  
   14001b59c:	(bad)  
   14001b59d:	(bad)  
   14001b59e:	(bad)  
   14001b59f:	(bad)  
   14001b5a0:	(bad)  
   14001b5a1:	(bad)  
   14001b5a2:	(bad)  
   14001b5a3:	(bad)  
   14001b5a4:	(bad)  
   14001b5a5:	call   QWORD PTR [rcx+0x0]
   14001b5a8:	push   rdx
   14001b5a9:	add    BYTE PTR [rbx+0x0],dl
   14001b5ac:	(bad)  
   14001b5ad:	(bad)  
   14001b5ae:	(bad)  
   14001b5af:	(bad)  
   14001b5b0:	(bad)  
   14001b5b1:	call   QWORD PTR [rdi+0x0]
   14001b5b4:	(bad)  
   14001b5b5:	(bad)  
   14001b5b6:	(bad)  
   14001b5b7:	(bad)  
   14001b5b8:	(bad)  
   14001b5b9:	(bad)  
   14001b5ba:	(bad)  
   14001b5bb:	(bad)  
   14001b5bc:	(bad)  
   14001b5bd:	(bad)  
   14001b5be:	(bad)  
   14001b5bf:	call   FWORD PTR [rsi+0x0]
   14001b5c2:	pop    rdi
   14001b5c3:	add    BYTE PTR [rax+0x0],ah
   14001b5c6:	(bad)  
   14001b5c7:	(bad)  
   14001b5c8:	(bad)  
   14001b5c9:	(bad)  
   14001b5ca:	(bad)  
   14001b5cb:	(bad)  
   14001b5cc:	(bad)  
   14001b5cd:	(bad)  
   14001b5ce:	(bad)  
   14001b5cf:	(bad)  
   14001b5d0:	(bad)  
   14001b5d1:	(bad)  
   14001b5d2:	(bad)  
   14001b5d3:	(bad)  
   14001b5d4:	(bad)  
   14001b5d5:	(bad)  
   14001b5d6:	(bad)  
   14001b5d7:	dec    DWORD PTR [rdx]
   14001b5d9:	add    bh,bh
   14001b5db:	dec    DWORD PTR [rax+rax*1]
   14001b5de:	or     eax,0xffffff00
   14001b5e3:	(bad)  
   14001b5e4:	(bad)  
   14001b5e5:	(bad)  
   14001b5e6:	(bad)  
   14001b5e7:	(bad)  
   14001b5e8:	(bad)  
   14001b5e9:	(bad)  
   14001b5ea:	(bad)  
   14001b5eb:	(bad)  
   14001b5ec:	(bad)  
   14001b5ed:	(bad)  
   14001b5ee:	(bad)  
   14001b5ef:	call   QWORD PTR [rsi]
   14001b5f1:	add    bh,bh
   14001b5f3:	(bad)  
   14001b5f4:	(bad)  
   14001b5f5:	(bad)  
   14001b5f6:	(bad)  
   14001b5f7:	(bad)  
   14001b5f8:	(bad)  
   14001b5f9:	(bad)  
   14001b5fa:	(bad)  
   14001b5fb:	(bad)  
   14001b5fc:	(bad)  
   14001b5fd:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b503
   14001b603:	(bad)  
   14001b604:	(bad)  
   14001b605:	jmp    QWORD PTR [rcx]
   14001b607:	add    BYTE PTR [rdx],ah
   14001b609:	add    bh,bh
   14001b60b:	jmp    QWORD PTR [rax+rax*1]
   14001b60e:	(bad)  
   14001b60f:	(bad)  
   14001b610:	(bad)  
   14001b611:	(bad)  
   14001b612:	(bad)  
   14001b613:	(bad)  
   14001b614:	(bad)  
   14001b615:	(bad)  
   14001b616:	(bad)  
   14001b617:	(bad)  
   14001b618:	(bad)  
   14001b619:	jmp    FWORD PTR [rbx]
   14001b61b:	add    bh,bh
   14001b61d:	(bad)  
   14001b61e:	(bad)  
   14001b61f:	(bad)  
   14001b620:	(bad)  
   14001b621:	jmp    FWORD PTR [rdi]
   14001b623:	add    bh,bh
   14001b625:	(bad)  
   14001b626:	(bad)  
   14001b627:	(bad)  
   14001b628:	(bad)  
   14001b629:	(bad)  
   14001b62a:	(bad)  
   14001b62b:	(bad)  
   14001b62c:	(bad)  
   14001b62d:	(bad)  
   14001b62e:	(bad)  
   14001b62f:	(bad)  
   14001b630:	(bad)  
   14001b631:	(bad)  
   14001b632:	(bad)  
   14001b633:	(bad)  
   14001b634:	(bad)  
   14001b635:	(bad)  
   14001b636:	(bad)  
   14001b637:	(bad)  
   14001b638:	(bad)  
   14001b639:	(bad)  
   14001b63a:	(bad)  
   14001b63b:	(bad)  
   14001b63c:	(bad)  
   14001b63d:	(bad)  
   14001b63e:	(bad)  
   14001b63f:	(bad)  
   14001b640:	(bad)  
   14001b641:	(bad)  
   14001b642:	(bad)  
   14001b643:	(bad)  
   14001b644:	(bad)  
   14001b645:	inc    DWORD PTR [rcx+0x0]
   14001b648:	rex.X add BYTE PTR [rbx+0x0],al
   14001b64c:	add    dil,r15b
   14001b64f:	inc    DWORD PTR [rsi+0x0]
   14001b652:	(bad)  
   14001b653:	(bad)  
   14001b654:	(bad)  
   14001b655:	(bad)  
   14001b656:	(bad)  
   14001b657:	(bad)  
   14001b658:	(bad)  
   14001b659:	dec    DWORD PTR [rbx+0x0]
   14001b65c:	(bad)  
   14001b65d:	(bad)  
   14001b65e:	(bad)  
   14001b65f:	(bad)  
   14001b660:	(bad)  
   14001b661:	(bad)  
   14001b662:	(bad)  
   14001b663:	(bad)  
   14001b664:	(bad)  
   14001b665:	call   QWORD PTR [rcx+0x0]
   14001b668:	push   rdx
   14001b669:	add    BYTE PTR [rbx+0x0],dl
   14001b66c:	push   rsp
   14001b66d:	add    bh,bh
   14001b66f:	(bad)  
   14001b670:	(bad)  
   14001b671:	call   QWORD PTR [rdi+0x0]
   14001b674:	(bad)  
   14001b675:	(bad)  
   14001b676:	(bad)  
   14001b677:	(bad)  
   14001b678:	(bad)  
   14001b679:	(bad)  
   14001b67a:	(bad)  
   14001b67b:	(bad)  
   14001b67c:	(bad)  
   14001b67d:	(bad)  
   14001b67e:	(bad)  
   14001b67f:	call   FWORD PTR [rsi+0x0]
   14001b682:	pop    rdi
   14001b683:	add    BYTE PTR [rax+0x0],ah
   14001b686:	(bad)  
   14001b687:	(bad)  
   14001b688:	(bad)  
   14001b689:	(bad)  
   14001b68a:	(bad)  
   14001b68b:	(bad)  
   14001b68c:	(bad)  
   14001b68d:	(bad)  
   14001b68e:	(bad)  
   14001b68f:	(bad)  
   14001b690:	(bad)  
   14001b691:	(bad)  
   14001b692:	(bad)  
   14001b693:	(bad)  
   14001b694:	(bad)  
   14001b695:	(bad)  
   14001b696:	(bad)  
   14001b697:	dec    DWORD PTR [rdx]
   14001b699:	add    bh,bh
   14001b69b:	dec    DWORD PTR [rax+rax*1]
   14001b69e:	or     eax,0xffffff00
   14001b6a3:	(bad)  
   14001b6a4:	(bad)  
   14001b6a5:	(bad)  
   14001b6a6:	(bad)  
   14001b6a7:	(bad)  
   14001b6a8:	(bad)  
   14001b6a9:	(bad)  
   14001b6aa:	(bad)  
   14001b6ab:	(bad)  
   14001b6ac:	(bad)  
   14001b6ad:	(bad)  
   14001b6ae:	(bad)  
   14001b6af:	call   QWORD PTR [rsi]
   14001b6b1:	add    bh,bh
   14001b6b3:	(bad)  
   14001b6b4:	(bad)  
   14001b6b5:	(bad)  
   14001b6b6:	(bad)  
   14001b6b7:	(bad)  
   14001b6b8:	(bad)  
   14001b6b9:	(bad)  
   14001b6ba:	(bad)  
   14001b6bb:	(bad)  
   14001b6bc:	(bad)  
   14001b6bd:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b5c3
   14001b6c3:	(bad)  
   14001b6c4:	(bad)  
   14001b6c5:	jmp    QWORD PTR [rcx]
   14001b6c7:	add    BYTE PTR [rdx],ah
   14001b6c9:	add    bh,bh
   14001b6cb:	jmp    QWORD PTR [rax+rax*1]
   14001b6ce:	(bad)  
   14001b6cf:	(bad)  
   14001b6d0:	(bad)  
   14001b6d1:	(bad)  
   14001b6d2:	(bad)  
   14001b6d3:	(bad)  
   14001b6d4:	(bad)  
   14001b6d5:	(bad)  
   14001b6d6:	(bad)  
   14001b6d7:	(bad)  
   14001b6d8:	(bad)  
   14001b6d9:	jmp    FWORD PTR [rbx]
   14001b6db:	add    bh,bh
   14001b6dd:	(bad)  
   14001b6de:	(bad)  
   14001b6df:	(bad)  
   14001b6e0:	(bad)  
   14001b6e1:	jmp    FWORD PTR [rdi]
   14001b6e3:	add    bh,bh
   14001b6e5:	(bad)  
   14001b6e6:	(bad)  
   14001b6e7:	(bad)  
   14001b6e8:	(bad)  
   14001b6e9:	(bad)  
   14001b6ea:	(bad)  
   14001b6eb:	(bad)  
   14001b6ec:	(bad)  
   14001b6ed:	(bad)  
   14001b6ee:	(bad)  
   14001b6ef:	(bad)  
   14001b6f0:	(bad)  
   14001b6f1:	push   QWORD PTR [rdi]
   14001b6f3:	add    bh,bh
   14001b6f5:	(bad)  
   14001b6f6:	(bad)  
   14001b6f7:	(bad)  
   14001b6f8:	(bad)  
   14001b6f9:	(bad)  
   14001b6fa:	(bad)  
   14001b6fb:	(bad)  
   14001b6fc:	(bad)  
   14001b6fd:	(bad)  
   14001b6fe:	(bad)  
   14001b6ff:	(bad)  
   14001b700:	(bad)  
   14001b701:	(bad)  
   14001b702:	(bad)  
   14001b703:	(bad)  
   14001b704:	(bad)  
   14001b705:	inc    DWORD PTR [rcx+0x0]
   14001b708:	rex.X add BYTE PTR [rbx+0x0],al
   14001b70c:	add    dil,r15b
   14001b70f:	inc    DWORD PTR [rsi+0x0]
   14001b712:	(bad)  
   14001b713:	(bad)  
   14001b714:	(bad)  
   14001b715:	(bad)  
   14001b716:	(bad)  
   14001b717:	(bad)  
   14001b718:	(bad)  
   14001b719:	dec    DWORD PTR [rbx+0x0]
   14001b71c:	(bad)  
   14001b71d:	(bad)  
   14001b71e:	(bad)  
   14001b71f:	(bad)  
   14001b720:	(bad)  
   14001b721:	(bad)  
   14001b722:	(bad)  
   14001b723:	(bad)  
   14001b724:	(bad)  
   14001b725:	call   QWORD PTR [rcx+0x0]
   14001b728:	push   rdx
   14001b729:	add    BYTE PTR [rbx+0x0],dl
   14001b72c:	push   rsp
   14001b72d:	add    bh,bh
   14001b72f:	(bad)  
   14001b730:	(bad)  
   14001b731:	call   QWORD PTR [rdi+0x0]
   14001b734:	(bad)  
   14001b735:	(bad)  
   14001b736:	(bad)  
   14001b737:	(bad)  
   14001b738:	(bad)  
   14001b739:	(bad)  
   14001b73a:	(bad)  
   14001b73b:	(bad)  
   14001b73c:	(bad)  
   14001b73d:	(bad)  
   14001b73e:	(bad)  
   14001b73f:	call   FWORD PTR [rsi+0x0]
   14001b742:	pop    rdi
   14001b743:	add    BYTE PTR [rax+0x0],ah
   14001b746:	(bad)  
   14001b747:	(bad)  
   14001b748:	(bad)  
   14001b749:	(bad)  
   14001b74a:	(bad)  
   14001b74b:	(bad)  
   14001b74c:	(bad)  
   14001b74d:	(bad)  
   14001b74e:	(bad)  
   14001b74f:	(bad)  
   14001b750:	(bad)  
   14001b751:	(bad)  
   14001b752:	(bad)  
   14001b753:	(bad)  
   14001b754:	(bad)  
   14001b755:	(bad)  
   14001b756:	(bad)  
   14001b757:	dec    DWORD PTR [rdx]
   14001b759:	add    bh,bh
   14001b75b:	dec    DWORD PTR [rax+rax*1]
   14001b75e:	or     eax,0xffffff00
   14001b763:	(bad)  
   14001b764:	(bad)  
   14001b765:	(bad)  
   14001b766:	(bad)  
   14001b767:	(bad)  
   14001b768:	(bad)  
   14001b769:	(bad)  
   14001b76a:	(bad)  
   14001b76b:	(bad)  
   14001b76c:	(bad)  
   14001b76d:	(bad)  
   14001b76e:	(bad)  
   14001b76f:	call   QWORD PTR [rsi]
   14001b771:	add    bh,bh
   14001b773:	(bad)  
   14001b774:	(bad)  
   14001b775:	(bad)  
   14001b776:	(bad)  
   14001b777:	(bad)  
   14001b778:	(bad)  
   14001b779:	(bad)  
   14001b77a:	(bad)  
   14001b77b:	(bad)  
   14001b77c:	(bad)  
   14001b77d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b683
   14001b783:	(bad)  
   14001b784:	(bad)  
   14001b785:	jmp    QWORD PTR [rcx]
   14001b787:	add    BYTE PTR [rdx],ah
   14001b789:	add    bh,bh
   14001b78b:	jmp    QWORD PTR [rax+rax*1]
   14001b78e:	(bad)  
   14001b78f:	(bad)  
   14001b790:	(bad)  
   14001b791:	(bad)  
   14001b792:	(bad)  
   14001b793:	(bad)  
   14001b794:	(bad)  
   14001b795:	(bad)  
   14001b796:	(bad)  
   14001b797:	(bad)  
   14001b798:	(bad)  
   14001b799:	jmp    FWORD PTR [rbx]
   14001b79b:	add    bh,bh
   14001b79d:	(bad)  
   14001b79e:	(bad)  
   14001b79f:	(bad)  
   14001b7a0:	(bad)  
   14001b7a1:	jmp    FWORD PTR [rdi]
   14001b7a3:	add    bh,bh
   14001b7a5:	(bad)  
   14001b7a6:	(bad)  
   14001b7a7:	(bad)  
   14001b7a8:	(bad)  
   14001b7a9:	(bad)  
   14001b7aa:	(bad)  
   14001b7ab:	(bad)  
   14001b7ac:	(bad)  
   14001b7ad:	(bad)  
   14001b7ae:	(bad)  
   14001b7af:	(bad)  
   14001b7b0:	(bad)  
   14001b7b1:	push   QWORD PTR [rdi]
   14001b7b3:	add    bh,bh
   14001b7b5:	(bad)  
   14001b7b6:	(bad)  
   14001b7b7:	(bad)  
   14001b7b8:	(bad)  
   14001b7b9:	(bad)  
   14001b7ba:	(bad)  
   14001b7bb:	(bad)  
   14001b7bc:	(bad)  
   14001b7bd:	(bad)  
   14001b7be:	(bad)  
   14001b7bf:	(bad)  
   14001b7c0:	(bad)  
   14001b7c1:	(bad)  
   14001b7c2:	(bad)  
   14001b7c3:	(bad)  
   14001b7c4:	(bad)  
   14001b7c5:	inc    DWORD PTR [rcx+0x0]
   14001b7c8:	rex.X add BYTE PTR [rbx+0x0],al
   14001b7cc:	add    dil,r15b
   14001b7cf:	inc    DWORD PTR [rsi+0x0]
   14001b7d2:	(bad)  
   14001b7d3:	(bad)  
   14001b7d4:	(bad)  
   14001b7d5:	(bad)  
   14001b7d6:	(bad)  
   14001b7d7:	(bad)  
   14001b7d8:	(bad)  
   14001b7d9:	dec    DWORD PTR [rbx+0x0]
   14001b7dc:	(bad)  
   14001b7dd:	(bad)  
   14001b7de:	(bad)  
   14001b7df:	(bad)  
   14001b7e0:	(bad)  
   14001b7e1:	(bad)  
   14001b7e2:	(bad)  
   14001b7e3:	(bad)  
   14001b7e4:	(bad)  
   14001b7e5:	call   QWORD PTR [rcx+0x0]
   14001b7e8:	push   rdx
   14001b7e9:	add    BYTE PTR [rbx+0x0],dl
   14001b7ec:	push   rsp
   14001b7ed:	add    bh,bh
   14001b7ef:	(bad)  
   14001b7f0:	(bad)  
   14001b7f1:	call   QWORD PTR [rdi+0x0]
   14001b7f4:	(bad)  
   14001b7f5:	(bad)  
   14001b7f6:	(bad)  
   14001b7f7:	(bad)  
   14001b7f8:	(bad)  
   14001b7f9:	(bad)  
   14001b7fa:	(bad)  
   14001b7fb:	(bad)  
   14001b7fc:	(bad)  
   14001b7fd:	(bad)  
   14001b7fe:	(bad)  
   14001b7ff:	call   FWORD PTR [rsi+0x0]
   14001b802:	pop    rdi
   14001b803:	add    BYTE PTR [rax+0x0],ah
   14001b806:	(bad)  
   14001b807:	(bad)  
   14001b808:	(bad)  
   14001b809:	(bad)  
   14001b80a:	(bad)  
   14001b80b:	(bad)  
   14001b80c:	(bad)  
   14001b80d:	(bad)  
   14001b80e:	(bad)  
   14001b80f:	(bad)  
   14001b810:	(bad)  
   14001b811:	(bad)  
   14001b812:	(bad)  
   14001b813:	(bad)  
   14001b814:	(bad)  
   14001b815:	(bad)  
   14001b816:	(bad)  
   14001b817:	dec    DWORD PTR [rbx]
   14001b819:	add    BYTE PTR [rax+rax*1],cl
   14001b81c:	or     eax,0xffffff00
   14001b821:	(bad)  
   14001b822:	(bad)  
   14001b823:	(bad)  
   14001b824:	(bad)  
   14001b825:	(bad)  
   14001b826:	(bad)  
   14001b827:	(bad)  
   14001b828:	(bad)  
   14001b829:	(bad)  
   14001b82a:	(bad)  
   14001b82b:	(bad)  
   14001b82c:	(bad)  
   14001b82d:	call   QWORD PTR [rsi]
   14001b82f:	add    bh,bh
   14001b831:	(bad)  
   14001b832:	(bad)  
   14001b833:	(bad)  
   14001b834:	(bad)  
   14001b835:	(bad)  
   14001b836:	(bad)  
   14001b837:	(bad)  
   14001b838:	(bad)  
   14001b839:	(bad)  
   14001b83a:	(bad)  
   14001b83b:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b741
   14001b841:	(bad)  
   14001b842:	(bad)  
   14001b843:	jmp    QWORD PTR [rcx]
   14001b845:	add    BYTE PTR [rdx],ah
   14001b847:	add    bh,bh
   14001b849:	jmp    QWORD PTR [rax+rax*1]
   14001b84c:	(bad)  
   14001b84d:	(bad)  
   14001b84e:	(bad)  
   14001b84f:	(bad)  
   14001b850:	(bad)  
   14001b851:	jmp    FWORD PTR [rax]
   14001b853:	add    bh,bh
   14001b855:	jmp    FWORD PTR [rdx]
   14001b857:	add    BYTE PTR [rbx],ch
   14001b859:	add    BYTE PTR [rax+rax*1],ch
   14001b85c:	(bad)  
   14001b85d:	(bad)  
   14001b85e:	(bad)  
   14001b85f:	jmp    FWORD PTR [rdi]
   14001b861:	add    bh,bh
   14001b863:	(bad)  
   14001b864:	(bad)  
   14001b865:	(bad)  
   14001b866:	(bad)  
   14001b867:	push   QWORD PTR [rbx]
   14001b869:	add    bh,bh
   14001b86b:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001b771
   14001b871:	(bad)  
   14001b872:	(bad)  
   14001b873:	(bad)  
   14001b874:	(bad)  
   14001b875:	(bad)  
   14001b876:	(bad)  
   14001b877:	(bad)  
   14001b878:	(bad)  
   14001b879:	(bad)  
   14001b87a:	(bad)  
   14001b87b:	(bad)  
   14001b87c:	(bad)  
   14001b87d:	(bad)  
   14001b87e:	(bad)  
   14001b87f:	(bad)  
   14001b880:	(bad)  
   14001b881:	(bad)  
   14001b882:	(bad)  
   14001b883:	inc    DWORD PTR [rcx+0x0]
   14001b886:	rex.X add BYTE PTR [rbx+0x0],al
   14001b88a:	add    dil,r15b
   14001b88d:	inc    DWORD PTR [rsi+0x0]
   14001b890:	(bad)  
   14001b891:	dec    DWORD PTR [rax+0x0]
   14001b894:	(bad)  
   14001b895:	dec    DWORD PTR [rdx+0x0]
   14001b898:	(bad)  
   14001b899:	dec    DWORD PTR [rax+rax*1-0x1]
   14001b89d:	(bad)  
   14001b89e:	(bad)  
   14001b89f:	(bad)  
   14001b8a0:	(bad)  
   14001b8a1:	(bad)  
   14001b8a2:	(bad)  
   14001b8a3:	call   QWORD PTR [rcx+0x0]
   14001b8a6:	push   rdx
   14001b8a7:	add    BYTE PTR [rbx+0x0],dl
   14001b8aa:	(bad)  
   14001b8ab:	(bad)  
   14001b8ac:	(bad)  
   14001b8ad:	(bad)  
   14001b8ae:	(bad)  
   14001b8af:	call   QWORD PTR [rdi+0x0]
   14001b8b2:	(bad)  
   14001b8b3:	(bad)  
   14001b8b4:	(bad)  
   14001b8b5:	(bad)  
   14001b8b6:	(bad)  
   14001b8b7:	(bad)  
   14001b8b8:	(bad)  
   14001b8b9:	(bad)  
   14001b8ba:	(bad)  
   14001b8bb:	(bad)  
   14001b8bc:	(bad)  
   14001b8bd:	call   FWORD PTR [rsi+0x0]
   14001b8c0:	pop    rdi
   14001b8c1:	add    BYTE PTR [rax+0x0],ah
   14001b8c4:	(bad)  
   14001b8c5:	(bad)  
   14001b8c6:	(bad)  
   14001b8c7:	(bad)  
   14001b8c8:	(bad)  
   14001b8c9:	(bad)  
   14001b8ca:	(bad)  
   14001b8cb:	(bad)  
   14001b8cc:	(bad)  
   14001b8cd:	(bad)  
   14001b8ce:	(bad)  
   14001b8cf:	(bad)  
   14001b8d0:	(bad)  
   14001b8d1:	(bad)  
   14001b8d2:	(bad)  
   14001b8d3:	(bad)  
   14001b8d4:	(bad)  
   14001b8d5:	inc    DWORD PTR [rdi]
   14001b8d7:	add    bh,bh
   14001b8d9:	(bad)  
   14001b8da:	(bad)  
   14001b8db:	(bad)  
   14001b8dc:	(bad)  
   14001b8dd:	dec    DWORD PTR [rbx]
   14001b8df:	add    BYTE PTR [rax+rax*1],cl
   14001b8e2:	or     eax,0xffffff00
   14001b8e7:	(bad)  
   14001b8e8:	(bad)  
   14001b8e9:	(bad)  
   14001b8ea:	(bad)  
   14001b8eb:	(bad)  
   14001b8ec:	(bad)  
   14001b8ed:	(bad)  
   14001b8ee:	(bad)  
   14001b8ef:	(bad)  
   14001b8f0:	(bad)  
   14001b8f1:	(bad)  
   14001b8f2:	(bad)  
   14001b8f3:	call   QWORD PTR [rsi]
   14001b8f5:	add    bh,bh
   14001b8f7:	(bad)  
   14001b8f8:	(bad)  
   14001b8f9:	(bad)  
   14001b8fa:	(bad)  
   14001b8fb:	(bad)  
   14001b8fc:	(bad)  
   14001b8fd:	(bad)  
   14001b8fe:	(bad)  
   14001b8ff:	(bad)  
   14001b900:	(bad)  
   14001b901:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b807
   14001b907:	(bad)  
   14001b908:	(bad)  
   14001b909:	jmp    QWORD PTR [rcx]
   14001b90b:	add    BYTE PTR [rdx],ah
   14001b90d:	add    bh,bh
   14001b90f:	jmp    QWORD PTR [rax+rax*1]
   14001b912:	(bad)  
   14001b913:	(bad)  
   14001b914:	(bad)  
   14001b915:	(bad)  
   14001b916:	(bad)  
   14001b917:	jmp    FWORD PTR [rax]
   14001b919:	add    bh,bh
   14001b91b:	jmp    FWORD PTR [rdx]
   14001b91d:	add    BYTE PTR [rbx],ch
   14001b91f:	add    BYTE PTR [rax+rax*1],ch
   14001b922:	(bad)  
   14001b923:	(bad)  
   14001b924:	(bad)  
   14001b925:	jmp    FWORD PTR [rdi]
   14001b927:	add    bh,bh
   14001b929:	(bad)  
   14001b92a:	(bad)  
   14001b92b:	(bad)  
   14001b92c:	(bad)  
   14001b92d:	push   QWORD PTR [rbx]
   14001b92f:	add    bh,bh
   14001b931:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001b837
   14001b937:	(bad)  
   14001b938:	(bad)  
   14001b939:	(bad)  
   14001b93a:	(bad)  
   14001b93b:	(bad)  
   14001b93c:	(bad)  
   14001b93d:	(bad)  
   14001b93e:	(bad)  
   14001b93f:	(bad)  
   14001b940:	(bad)  
   14001b941:	(bad)  
   14001b942:	(bad)  
   14001b943:	(bad)  
   14001b944:	(bad)  
   14001b945:	(bad)  
   14001b946:	(bad)  
   14001b947:	(bad)  
   14001b948:	(bad)  
   14001b949:	inc    DWORD PTR [rcx+0x0]
   14001b94c:	rex.X add BYTE PTR [rbx+0x0],al
   14001b950:	add    dil,r15b
   14001b953:	inc    DWORD PTR [rsi+0x0]
   14001b956:	(bad)  
   14001b957:	dec    DWORD PTR [rax+0x0]
   14001b95a:	(bad)  
   14001b95b:	dec    DWORD PTR [rdx+0x0]
   14001b95e:	(bad)  
   14001b95f:	dec    DWORD PTR [rax+rax*1-0x1]
   14001b963:	(bad)  
   14001b964:	(bad)  
   14001b965:	(bad)  
   14001b966:	(bad)  
   14001b967:	(bad)  
   14001b968:	(bad)  
   14001b969:	call   QWORD PTR [rcx+0x0]
   14001b96c:	push   rdx
   14001b96d:	add    BYTE PTR [rbx+0x0],dl
   14001b970:	(bad)  
   14001b971:	(bad)  
   14001b972:	(bad)  
   14001b973:	(bad)  
   14001b974:	(bad)  
   14001b975:	call   QWORD PTR [rdi+0x0]
   14001b978:	(bad)  
   14001b979:	(bad)  
   14001b97a:	(bad)  
   14001b97b:	(bad)  
   14001b97c:	(bad)  
   14001b97d:	(bad)  
   14001b97e:	(bad)  
   14001b97f:	(bad)  
   14001b980:	(bad)  
   14001b981:	(bad)  
   14001b982:	(bad)  
   14001b983:	call   FWORD PTR [rsi+0x0]
   14001b986:	pop    rdi
   14001b987:	add    BYTE PTR [rax+0x0],ah
   14001b98a:	(bad)  
   14001b98b:	(bad)  
   14001b98c:	(bad)  
   14001b98d:	(bad)  
   14001b98e:	(bad)  
   14001b98f:	(bad)  
   14001b990:	(bad)  
   14001b991:	(bad)  
   14001b992:	(bad)  
   14001b993:	(bad)  
   14001b994:	(bad)  
   14001b995:	(bad)  
   14001b996:	(bad)  
   14001b997:	(bad)  
   14001b998:	(bad)  
   14001b999:	(bad)  
   14001b99a:	(bad)  
   14001b99b:	dec    DWORD PTR [rbx]
   14001b99d:	add    BYTE PTR [rax+rax*1],cl
   14001b9a0:	or     eax,0xffffff00
   14001b9a5:	(bad)  
   14001b9a6:	(bad)  
   14001b9a7:	(bad)  
   14001b9a8:	(bad)  
   14001b9a9:	(bad)  
   14001b9aa:	(bad)  
   14001b9ab:	(bad)  
   14001b9ac:	(bad)  
   14001b9ad:	(bad)  
   14001b9ae:	(bad)  
   14001b9af:	(bad)  
   14001b9b0:	(bad)  
   14001b9b1:	call   QWORD PTR [rsi]
   14001b9b3:	add    bh,bh
   14001b9b5:	(bad)  
   14001b9b6:	(bad)  
   14001b9b7:	(bad)  
   14001b9b8:	(bad)  
   14001b9b9:	(bad)  
   14001b9ba:	(bad)  
   14001b9bb:	(bad)  
   14001b9bc:	(bad)  
   14001b9bd:	(bad)  
   14001b9be:	(bad)  
   14001b9bf:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b8c5
   14001b9c5:	(bad)  
   14001b9c6:	(bad)  
   14001b9c7:	jmp    QWORD PTR [rcx]
   14001b9c9:	add    BYTE PTR [rdx],ah
   14001b9cb:	add    bh,bh
   14001b9cd:	jmp    QWORD PTR [rax+rax*1]
   14001b9d0:	(bad)  
   14001b9d1:	(bad)  
   14001b9d2:	(bad)  
   14001b9d3:	(bad)  
   14001b9d4:	(bad)  
   14001b9d5:	jmp    FWORD PTR [rax]
   14001b9d7:	add    bh,bh
   14001b9d9:	jmp    FWORD PTR [rdx]
   14001b9db:	add    BYTE PTR [rbx],ch
   14001b9dd:	add    BYTE PTR [rax+rax*1],ch
   14001b9e0:	(bad)  
   14001b9e1:	(bad)  
   14001b9e2:	(bad)  
   14001b9e3:	jmp    FWORD PTR [rdi]
   14001b9e5:	add    bh,bh
   14001b9e7:	(bad)  
   14001b9e8:	(bad)  
   14001b9e9:	(bad)  
   14001b9ea:	(bad)  
   14001b9eb:	push   QWORD PTR [rbx]
   14001b9ed:	add    bh,bh
   14001b9ef:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001b8f5
   14001b9f5:	(bad)  
   14001b9f6:	(bad)  
   14001b9f7:	(bad)  
   14001b9f8:	(bad)  
   14001b9f9:	(bad)  
   14001b9fa:	(bad)  
   14001b9fb:	(bad)  
   14001b9fc:	(bad)  
   14001b9fd:	(bad)  
   14001b9fe:	(bad)  
   14001b9ff:	(bad)  
   14001ba00:	(bad)  
   14001ba01:	(bad)  
   14001ba02:	(bad)  
   14001ba03:	(bad)  
   14001ba04:	(bad)  
   14001ba05:	(bad)  
   14001ba06:	(bad)  
   14001ba07:	inc    DWORD PTR [rcx+0x0]
   14001ba0a:	rex.X add BYTE PTR [rbx+0x0],al
   14001ba0e:	add    dil,r15b
   14001ba11:	inc    DWORD PTR [rsi+0x0]
   14001ba14:	(bad)  
   14001ba15:	dec    DWORD PTR [rax+0x0]
   14001ba18:	(bad)  
   14001ba19:	dec    DWORD PTR [rdx+0x0]
   14001ba1c:	rex.WXB add BYTE PTR [r8+r8*1-0x1],cl
   14001ba21:	(bad)  
   14001ba22:	(bad)  
   14001ba23:	(bad)  
   14001ba24:	(bad)  
   14001ba25:	(bad)  
   14001ba26:	(bad)  
   14001ba27:	call   QWORD PTR [rcx+0x0]
   14001ba2a:	push   rdx
   14001ba2b:	add    BYTE PTR [rbx+0x0],dl
   14001ba2e:	(bad)  
   14001ba2f:	(bad)  
   14001ba30:	(bad)  
   14001ba31:	(bad)  
   14001ba32:	(bad)  
   14001ba33:	call   QWORD PTR [rdi+0x0]
   14001ba36:	(bad)  
   14001ba37:	(bad)  
   14001ba38:	(bad)  
   14001ba39:	(bad)  
   14001ba3a:	(bad)  
   14001ba3b:	(bad)  
   14001ba3c:	(bad)  
   14001ba3d:	(bad)  
   14001ba3e:	(bad)  
   14001ba3f:	(bad)  
   14001ba40:	(bad)  
   14001ba41:	call   FWORD PTR [rsi+0x0]
   14001ba44:	pop    rdi
   14001ba45:	add    BYTE PTR [rax+0x0],ah
   14001ba48:	(bad)  
   14001ba49:	(bad)  
   14001ba4a:	(bad)  
   14001ba4b:	(bad)  
   14001ba4c:	(bad)  
   14001ba4d:	(bad)  
   14001ba4e:	(bad)  
   14001ba4f:	(bad)  
   14001ba50:	(bad)  
   14001ba51:	(bad)  
   14001ba52:	(bad)  
   14001ba53:	(bad)  
   14001ba54:	(bad)  
   14001ba55:	(bad)  
   14001ba56:	(bad)  
   14001ba57:	(bad)  
   14001ba58:	(bad)  
   14001ba59:	dec    DWORD PTR [rax]
   14001ba5b:	add    bh,bh
   14001ba5d:	(bad)  
   14001ba5e:	(bad)  
   14001ba5f:	dec    DWORD PTR [rbx]
   14001ba61:	add    BYTE PTR [rax+rax*1],cl
   14001ba64:	or     eax,0xffffff00
   14001ba69:	(bad)  
   14001ba6a:	(bad)  
   14001ba6b:	(bad)  
   14001ba6c:	(bad)  
   14001ba6d:	(bad)  
   14001ba6e:	(bad)  
   14001ba6f:	(bad)  
   14001ba70:	(bad)  
   14001ba71:	(bad)  
   14001ba72:	(bad)  
   14001ba73:	(bad)  
   14001ba74:	(bad)  
   14001ba75:	call   QWORD PTR [rsi]
   14001ba77:	add    bh,bh
   14001ba79:	(bad)  
   14001ba7a:	(bad)  
   14001ba7b:	(bad)  
   14001ba7c:	(bad)  
   14001ba7d:	(bad)  
   14001ba7e:	(bad)  
   14001ba7f:	(bad)  
   14001ba80:	(bad)  
   14001ba81:	(bad)  
   14001ba82:	(bad)  
   14001ba83:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001b989
   14001ba89:	(bad)  
   14001ba8a:	(bad)  
   14001ba8b:	jmp    QWORD PTR [rcx]
   14001ba8d:	add    BYTE PTR [rdx],ah
   14001ba8f:	add    bh,bh
   14001ba91:	jmp    QWORD PTR [rax+rax*1]
   14001ba94:	(bad)  
   14001ba95:	(bad)  
   14001ba96:	(bad)  
   14001ba97:	(bad)  
   14001ba98:	(bad)  
   14001ba99:	jmp    FWORD PTR [rax]
   14001ba9b:	add    bh,bh
   14001ba9d:	jmp    FWORD PTR [rdx]
   14001ba9f:	add    BYTE PTR [rbx],ch
   14001baa1:	add    BYTE PTR [rax+rax*1],ch
   14001baa4:	(bad)  
   14001baa5:	(bad)  
   14001baa6:	(bad)  
   14001baa7:	jmp    FWORD PTR [rdi]
   14001baa9:	add    bh,bh
   14001baab:	(bad)  
   14001baac:	(bad)  
   14001baad:	(bad)  
   14001baae:	(bad)  
   14001baaf:	push   QWORD PTR [rbx]
   14001bab1:	add    bh,bh
   14001bab3:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001b9b9
   14001bab9:	(bad)  
   14001baba:	cmp    BYTE PTR [rax],al
   14001babc:	(bad)  
   14001babd:	(bad)  
   14001babe:	(bad)  
   14001babf:	(bad)  
   14001bac0:	(bad)  
   14001bac1:	(bad)  
   14001bac2:	(bad)  
   14001bac3:	(bad)  
   14001bac4:	(bad)  
   14001bac5:	(bad)  
   14001bac6:	(bad)  
   14001bac7:	(bad)  
   14001bac8:	(bad)  
   14001bac9:	(bad)  
   14001baca:	(bad)  
   14001bacb:	inc    DWORD PTR [rcx+0x0]
   14001bace:	rex.X add BYTE PTR [rbx+0x0],al
   14001bad2:	add    dil,r15b
   14001bad5:	inc    DWORD PTR [rsi+0x0]
   14001bad8:	(bad)  
   14001bad9:	dec    DWORD PTR [rax+0x0]
   14001badc:	(bad)  
   14001badd:	dec    DWORD PTR [rdx+0x0]
   14001bae0:	(bad)  
   14001bae1:	dec    DWORD PTR [rax+rax*1-0x1]
   14001bae5:	(bad)  
   14001bae6:	(bad)  
   14001bae7:	(bad)  
   14001bae8:	(bad)  
   14001bae9:	(bad)  
   14001baea:	(bad)  
   14001baeb:	call   QWORD PTR [rcx+0x0]
   14001baee:	push   rdx
   14001baef:	add    BYTE PTR [rbx+0x0],dl
   14001baf2:	(bad)  
   14001baf3:	(bad)  
   14001baf4:	(bad)  
   14001baf5:	(bad)  
   14001baf6:	(bad)  
   14001baf7:	call   QWORD PTR [rdi+0x0]
   14001bafa:	(bad)  
   14001bafb:	(bad)  
   14001bafc:	(bad)  
   14001bafd:	(bad)  
   14001bafe:	(bad)  
   14001baff:	(bad)  
   14001bb00:	(bad)  
   14001bb01:	(bad)  
   14001bb02:	(bad)  
   14001bb03:	(bad)  
   14001bb04:	(bad)  
   14001bb05:	call   FWORD PTR [rsi+0x0]
   14001bb08:	pop    rdi
   14001bb09:	add    BYTE PTR [rax+0x0],ah
   14001bb0c:	(bad)  
   14001bb0d:	(bad)  
   14001bb0e:	(bad)  
   14001bb0f:	(bad)  
   14001bb10:	(bad)  
   14001bb11:	(bad)  
   14001bb12:	(bad)  
   14001bb13:	(bad)  
   14001bb14:	(bad)  
   14001bb15:	(bad)  
   14001bb16:	(bad)  
   14001bb17:	(bad)  
   14001bb18:	(bad)  
   14001bb19:	(bad)  
   14001bb1a:	(bad)  
   14001bb1b:	(bad)  
   14001bb1c:	(bad)  
   14001bb1d:	dec    DWORD PTR [rax]
   14001bb1f:	add    bh,bh
   14001bb21:	(bad)  
   14001bb22:	(bad)  
   14001bb23:	dec    DWORD PTR [rbx]
   14001bb25:	add    BYTE PTR [rax+rax*1],cl
   14001bb28:	or     eax,0xffffff00
   14001bb2d:	(bad)  
   14001bb2e:	(bad)  
   14001bb2f:	(bad)  
   14001bb30:	(bad)  
   14001bb31:	(bad)  
   14001bb32:	(bad)  
   14001bb33:	(bad)  
   14001bb34:	(bad)  
   14001bb35:	(bad)  
   14001bb36:	(bad)  
   14001bb37:	(bad)  
   14001bb38:	(bad)  
   14001bb39:	call   QWORD PTR [rsi]
   14001bb3b:	add    bh,bh
   14001bb3d:	(bad)  
   14001bb3e:	(bad)  
   14001bb3f:	(bad)  
   14001bb40:	(bad)  
   14001bb41:	(bad)  
   14001bb42:	(bad)  
   14001bb43:	(bad)  
   14001bb44:	(bad)  
   14001bb45:	(bad)  
   14001bb46:	(bad)  
   14001bb47:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001ba4d
   14001bb4d:	(bad)  
   14001bb4e:	(bad)  
   14001bb4f:	jmp    QWORD PTR [rcx]
   14001bb51:	add    BYTE PTR [rdx],ah
   14001bb53:	add    bh,bh
   14001bb55:	jmp    QWORD PTR [rax+rax*1]
   14001bb58:	(bad)  
   14001bb59:	(bad)  
   14001bb5a:	(bad)  
   14001bb5b:	(bad)  
   14001bb5c:	(bad)  
   14001bb5d:	jmp    FWORD PTR [rax]
   14001bb5f:	add    bh,bh
   14001bb61:	jmp    FWORD PTR [rdx]
   14001bb63:	add    BYTE PTR [rbx],ch
   14001bb65:	add    BYTE PTR [rax+rax*1],ch
   14001bb68:	(bad)  
   14001bb69:	(bad)  
   14001bb6a:	(bad)  
   14001bb6b:	jmp    FWORD PTR [rdi]
   14001bb6d:	add    bh,bh
   14001bb6f:	(bad)  
   14001bb70:	(bad)  
   14001bb71:	(bad)  
   14001bb72:	(bad)  
   14001bb73:	push   QWORD PTR [rbx]
   14001bb75:	add    bh,bh
   14001bb77:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001ba7d
   14001bb7d:	(bad)  
   14001bb7e:	cmp    BYTE PTR [rax],al
   14001bb80:	(bad)  
   14001bb81:	(bad)  
   14001bb82:	(bad)  
   14001bb83:	(bad)  
   14001bb84:	(bad)  
   14001bb85:	(bad)  
   14001bb86:	(bad)  
   14001bb87:	(bad)  
   14001bb88:	(bad)  
   14001bb89:	(bad)  
   14001bb8a:	(bad)  
   14001bb8b:	(bad)  
   14001bb8c:	(bad)  
   14001bb8d:	(bad)  
   14001bb8e:	(bad)  
   14001bb8f:	inc    DWORD PTR [rcx+0x0]
   14001bb92:	rex.X add BYTE PTR [rbx+0x0],al
   14001bb96:	add    dil,r15b
   14001bb99:	inc    DWORD PTR [rsi+0x0]
   14001bb9c:	(bad)  
   14001bb9d:	dec    DWORD PTR [rax+0x0]
   14001bba0:	(bad)  
   14001bba1:	dec    DWORD PTR [rdx+0x0]
   14001bba4:	(bad)  
   14001bba5:	dec    DWORD PTR [rax+rax*1-0x1]
   14001bba9:	(bad)  
   14001bbaa:	(bad)  
   14001bbab:	(bad)  
   14001bbac:	(bad)  
   14001bbad:	(bad)  
   14001bbae:	(bad)  
   14001bbaf:	call   QWORD PTR [rcx+0x0]
   14001bbb2:	push   rdx
   14001bbb3:	add    BYTE PTR [rbx+0x0],dl
   14001bbb6:	(bad)  
   14001bbb7:	(bad)  
   14001bbb8:	(bad)  
   14001bbb9:	(bad)  
   14001bbba:	(bad)  
   14001bbbb:	call   QWORD PTR [rdi+0x0]
   14001bbbe:	(bad)  
   14001bbbf:	(bad)  
   14001bbc0:	(bad)  
   14001bbc1:	(bad)  
   14001bbc2:	(bad)  
   14001bbc3:	(bad)  
   14001bbc4:	(bad)  
   14001bbc5:	(bad)  
   14001bbc6:	(bad)  
   14001bbc7:	(bad)  
   14001bbc8:	(bad)  
   14001bbc9:	call   FWORD PTR [rsi+0x0]
   14001bbcc:	pop    rdi
   14001bbcd:	add    BYTE PTR [rax+0x0],ah
   14001bbd0:	(bad)  
   14001bbd1:	(bad)  
   14001bbd2:	(bad)  
   14001bbd3:	(bad)  
   14001bbd4:	(bad)  
   14001bbd5:	(bad)  
   14001bbd6:	(bad)  
   14001bbd7:	(bad)  
   14001bbd8:	(bad)  
   14001bbd9:	(bad)  
   14001bbda:	(bad)  
   14001bbdb:	(bad)  
   14001bbdc:	(bad)  
   14001bbdd:	(bad)  
   14001bbde:	(bad)  
   14001bbdf:	(bad)  
   14001bbe0:	(bad)  
   14001bbe1:	dec    DWORD PTR [rax]
   14001bbe3:	add    bh,bh
   14001bbe5:	(bad)  
   14001bbe6:	(bad)  
   14001bbe7:	dec    DWORD PTR [rbx]
   14001bbe9:	add    BYTE PTR [rax+rax*1],cl
   14001bbec:	or     eax,0xffffff00
   14001bbf1:	(bad)  
   14001bbf2:	(bad)  
   14001bbf3:	(bad)  
   14001bbf4:	(bad)  
   14001bbf5:	(bad)  
   14001bbf6:	(bad)  
   14001bbf7:	(bad)  
   14001bbf8:	(bad)  
   14001bbf9:	(bad)  
   14001bbfa:	(bad)  
   14001bbfb:	(bad)  
   14001bbfc:	(bad)  
   14001bbfd:	call   QWORD PTR [rsi]
   14001bbff:	add    bh,bh
   14001bc01:	(bad)  
   14001bc02:	(bad)  
   14001bc03:	(bad)  
   14001bc04:	(bad)  
   14001bc05:	(bad)  
   14001bc06:	(bad)  
   14001bc07:	(bad)  
   14001bc08:	(bad)  
   14001bc09:	(bad)  
   14001bc0a:	(bad)  
   14001bc0b:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001bb11
   14001bc11:	(bad)  
   14001bc12:	(bad)  
   14001bc13:	jmp    QWORD PTR [rcx]
   14001bc15:	add    BYTE PTR [rdx],ah
   14001bc17:	add    bh,bh
   14001bc19:	jmp    QWORD PTR [rax+rax*1]
   14001bc1c:	(bad)  
   14001bc1d:	(bad)  
   14001bc1e:	(bad)  
   14001bc1f:	(bad)  
   14001bc20:	(bad)  
   14001bc21:	jmp    FWORD PTR [rax]
   14001bc23:	add    bh,bh
   14001bc25:	jmp    FWORD PTR [rdx]
   14001bc27:	add    BYTE PTR [rbx],ch
   14001bc29:	add    BYTE PTR [rax+rax*1],ch
   14001bc2c:	(bad)  
   14001bc2d:	(bad)  
   14001bc2e:	(bad)  
   14001bc2f:	jmp    FWORD PTR [rdi]
   14001bc31:	add    bh,bh
   14001bc33:	(bad)  
   14001bc34:	(bad)  
   14001bc35:	(bad)  
   14001bc36:	(bad)  
   14001bc37:	push   QWORD PTR [rbx]
   14001bc39:	add    bh,bh
   14001bc3b:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001bb41
   14001bc41:	(bad)  
   14001bc42:	cmp    BYTE PTR [rax],al
   14001bc44:	(bad)  
   14001bc45:	(bad)  
   14001bc46:	(bad)  
   14001bc47:	(bad)  
   14001bc48:	(bad)  
   14001bc49:	(bad)  
   14001bc4a:	(bad)  
   14001bc4b:	(bad)  
   14001bc4c:	(bad)  
   14001bc4d:	(bad)  
   14001bc4e:	(bad)  
   14001bc4f:	(bad)  
   14001bc50:	(bad)  
   14001bc51:	(bad)  
   14001bc52:	(bad)  
   14001bc53:	inc    DWORD PTR [rcx+0x0]
   14001bc56:	rex.X add BYTE PTR [rbx+0x0],al
   14001bc5a:	add    dil,r15b
   14001bc5d:	inc    DWORD PTR [rsi+0x0]
   14001bc60:	(bad)  
   14001bc61:	dec    DWORD PTR [rax+0x0]
   14001bc64:	(bad)  
   14001bc65:	dec    DWORD PTR [rdx+0x0]
   14001bc68:	(bad)  
   14001bc69:	dec    DWORD PTR [rax+rax*1-0x1]
   14001bc6d:	(bad)  
   14001bc6e:	(bad)  
   14001bc6f:	(bad)  
   14001bc70:	(bad)  
   14001bc71:	(bad)  
   14001bc72:	(bad)  
   14001bc73:	call   QWORD PTR [rcx+0x0]
   14001bc76:	push   rdx
   14001bc77:	add    BYTE PTR [rbx+0x0],dl
   14001bc7a:	(bad)  
   14001bc7b:	(bad)  
   14001bc7c:	(bad)  
   14001bc7d:	(bad)  
   14001bc7e:	(bad)  
   14001bc7f:	call   QWORD PTR [rdi+0x0]
   14001bc82:	(bad)  
   14001bc83:	(bad)  
   14001bc84:	(bad)  
   14001bc85:	(bad)  
   14001bc86:	(bad)  
   14001bc87:	(bad)  
   14001bc88:	(bad)  
   14001bc89:	(bad)  
   14001bc8a:	(bad)  
   14001bc8b:	(bad)  
   14001bc8c:	(bad)  
   14001bc8d:	call   FWORD PTR [rsi+0x0]
   14001bc90:	pop    rdi
   14001bc91:	add    BYTE PTR [rax+0x0],ah
   14001bc94:	(bad)  
   14001bc95:	(bad)  
   14001bc96:	(bad)  
   14001bc97:	(bad)  
   14001bc98:	(bad)  
   14001bc99:	(bad)  
   14001bc9a:	(bad)  
   14001bc9b:	(bad)  
   14001bc9c:	(bad)  
   14001bc9d:	(bad)  
   14001bc9e:	(bad)  
   14001bc9f:	(bad)  
   14001bca0:	(bad)  
   14001bca1:	(bad)  
   14001bca2:	(bad)  
   14001bca3:	(bad)  
   14001bca4:	(bad)  
   14001bca5:	dec    DWORD PTR [rax]
   14001bca7:	add    bh,bh
   14001bca9:	(bad)  
   14001bcaa:	(bad)  
   14001bcab:	dec    DWORD PTR [rbx]
   14001bcad:	add    BYTE PTR [rax+rax*1],cl
   14001bcb0:	or     eax,0xffffff00
   14001bcb5:	(bad)  
   14001bcb6:	(bad)  
   14001bcb7:	(bad)  
   14001bcb8:	(bad)  
   14001bcb9:	(bad)  
   14001bcba:	(bad)  
   14001bcbb:	(bad)  
   14001bcbc:	(bad)  
   14001bcbd:	(bad)  
   14001bcbe:	(bad)  
   14001bcbf:	(bad)  
   14001bcc0:	(bad)  
   14001bcc1:	call   QWORD PTR [rsi]
   14001bcc3:	add    bh,bh
   14001bcc5:	(bad)  
   14001bcc6:	(bad)  
   14001bcc7:	(bad)  
   14001bcc8:	(bad)  
   14001bcc9:	(bad)  
   14001bcca:	(bad)  
   14001bccb:	(bad)  
   14001bccc:	(bad)  
   14001bccd:	(bad)  
   14001bcce:	(bad)  
   14001bccf:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001bbd5
   14001bcd5:	(bad)  
   14001bcd6:	(bad)  
   14001bcd7:	jmp    QWORD PTR [rcx]
   14001bcd9:	add    BYTE PTR [rdx],ah
   14001bcdb:	add    bh,bh
   14001bcdd:	jmp    QWORD PTR [rax+rax*1]
   14001bce0:	(bad)  
   14001bce1:	(bad)  
   14001bce2:	(bad)  
   14001bce3:	(bad)  
   14001bce4:	(bad)  
   14001bce5:	jmp    FWORD PTR [rax]
   14001bce7:	add    bh,bh
   14001bce9:	jmp    FWORD PTR [rdx]
   14001bceb:	add    BYTE PTR [rbx],ch
   14001bced:	add    BYTE PTR [rax+rax*1],ch
   14001bcf0:	(bad)  
   14001bcf1:	(bad)  
   14001bcf2:	(bad)  
   14001bcf3:	jmp    FWORD PTR [rdi]
   14001bcf5:	add    bh,bh
   14001bcf7:	(bad)  
   14001bcf8:	(bad)  
   14001bcf9:	(bad)  
   14001bcfa:	(bad)  
   14001bcfb:	push   QWORD PTR [rbx]
   14001bcfd:	add    bh,bh
   14001bcff:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001bc05
   14001bd05:	(bad)  
   14001bd06:	cmp    BYTE PTR [rax],al
   14001bd08:	(bad)  
   14001bd09:	(bad)  
   14001bd0a:	(bad)  
   14001bd0b:	(bad)  
   14001bd0c:	(bad)  
   14001bd0d:	(bad)  
   14001bd0e:	(bad)  
   14001bd0f:	(bad)  
   14001bd10:	(bad)  
   14001bd11:	(bad)  
   14001bd12:	(bad)  
   14001bd13:	(bad)  
   14001bd14:	(bad)  
   14001bd15:	(bad)  
   14001bd16:	(bad)  
   14001bd17:	inc    DWORD PTR [rcx+0x0]
   14001bd1a:	rex.X add BYTE PTR [rbx+0x0],al
   14001bd1e:	add    dil,r15b
   14001bd21:	inc    DWORD PTR [rsi+0x0]
   14001bd24:	(bad)  
   14001bd25:	dec    DWORD PTR [rax+0x0]
   14001bd28:	(bad)  
   14001bd29:	dec    DWORD PTR [rdx+0x0]
   14001bd2c:	(bad)  
   14001bd2d:	dec    DWORD PTR [rax+rax*1-0x1]
   14001bd31:	(bad)  
   14001bd32:	(bad)  
   14001bd33:	(bad)  
   14001bd34:	(bad)  
   14001bd35:	(bad)  
   14001bd36:	(bad)  
   14001bd37:	call   QWORD PTR [rcx+0x0]
   14001bd3a:	push   rdx
   14001bd3b:	add    BYTE PTR [rbx+0x0],dl
   14001bd3e:	(bad)  
   14001bd3f:	(bad)  
   14001bd40:	(bad)  
   14001bd41:	(bad)  
   14001bd42:	(bad)  
   14001bd43:	call   QWORD PTR [rdi+0x0]
   14001bd46:	(bad)  
   14001bd47:	(bad)  
   14001bd48:	(bad)  
   14001bd49:	(bad)  
   14001bd4a:	(bad)  
   14001bd4b:	(bad)  
   14001bd4c:	(bad)  
   14001bd4d:	(bad)  
   14001bd4e:	(bad)  
   14001bd4f:	(bad)  
   14001bd50:	(bad)  
   14001bd51:	call   FWORD PTR [rsi+0x0]
   14001bd54:	pop    rdi
   14001bd55:	add    BYTE PTR [rax+0x0],ah
   14001bd58:	(bad)  
   14001bd59:	(bad)  
   14001bd5a:	(bad)  
   14001bd5b:	(bad)  
   14001bd5c:	(bad)  
   14001bd5d:	(bad)  
   14001bd5e:	(bad)  
   14001bd5f:	(bad)  
   14001bd60:	(bad)  
   14001bd61:	(bad)  
   14001bd62:	(bad)  
   14001bd63:	(bad)  
   14001bd64:	(bad)  
   14001bd65:	(bad)  
   14001bd66:	(bad)  
   14001bd67:	(bad)  
   14001bd68:	(bad)  
   14001bd69:	dec    DWORD PTR [rbx]
   14001bd6b:	add    BYTE PTR [rax+rax*1],cl
   14001bd6e:	or     eax,0xffffff00
   14001bd73:	(bad)  
   14001bd74:	(bad)  
   14001bd75:	(bad)  
   14001bd76:	(bad)  
   14001bd77:	(bad)  
   14001bd78:	(bad)  
   14001bd79:	(bad)  
   14001bd7a:	(bad)  
   14001bd7b:	(bad)  
   14001bd7c:	(bad)  
   14001bd7d:	(bad)  
   14001bd7e:	(bad)  
   14001bd7f:	call   QWORD PTR [rsi]
   14001bd81:	add    bh,bh
   14001bd83:	(bad)  
   14001bd84:	(bad)  
   14001bd85:	(bad)  
   14001bd86:	(bad)  
   14001bd87:	(bad)  
   14001bd88:	(bad)  
   14001bd89:	(bad)  
   14001bd8a:	(bad)  
   14001bd8b:	(bad)  
   14001bd8c:	(bad)  
   14001bd8d:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f01db93
   14001bd93:	(bad)  
   14001bd94:	(bad)  
   14001bd95:	jmp    QWORD PTR [rcx]
   14001bd97:	add    BYTE PTR [rdx],ah
   14001bd99:	add    bh,bh
   14001bd9b:	jmp    QWORD PTR [rax+rax*1]
   14001bd9e:	(bad)  
   14001bd9f:	(bad)  
   14001bda0:	(bad)  
   14001bda1:	(bad)  
   14001bda2:	(bad)  
   14001bda3:	jmp    FWORD PTR [rax]
   14001bda5:	add    bh,bh
   14001bda7:	jmp    FWORD PTR [rdx]
   14001bda9:	add    BYTE PTR [rbx],ch
   14001bdab:	add    BYTE PTR [rax+rax*1],ch
   14001bdae:	(bad)  
   14001bdaf:	(bad)  
   14001bdb0:	(bad)  
   14001bdb1:	jmp    FWORD PTR [rdi]
   14001bdb3:	add    bh,bh
   14001bdb5:	(bad)  
   14001bdb6:	(bad)  
   14001bdb7:	(bad)  
   14001bdb8:	(bad)  
   14001bdb9:	push   QWORD PTR [rbx]
   14001bdbb:	add    bh,bh
   14001bdbd:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001bcc3
   14001bdc3:	(bad)  
   14001bdc4:	(bad)  
   14001bdc5:	(bad)  
   14001bdc6:	(bad)  
   14001bdc7:	(bad)  
   14001bdc8:	(bad)  
   14001bdc9:	(bad)  
   14001bdca:	(bad)  
   14001bdcb:	(bad)  
   14001bdcc:	(bad)  
   14001bdcd:	(bad)  
   14001bdce:	cmp    eax,0xffffff00
   14001bdd3:	(bad)  
   14001bdd4:	(bad)  
   14001bdd5:	inc    DWORD PTR [rcx+0x0]
   14001bdd8:	rex.X add BYTE PTR [rbx+0x0],al
   14001bddc:	add    BYTE PTR [rbp+0x0],r8b
   14001bde0:	rex.RX add dil,r15b
   14001bde3:	dec    DWORD PTR [rax+0x0]
   14001bde6:	rex.WB add BYTE PTR [r10+0x0],cl
   14001bdea:	(bad)  
   14001bdeb:	dec    DWORD PTR [rax+rax*1-0x1]
   14001bdef:	dec    DWORD PTR [rsi+0x0]
   14001bdf2:	(bad)  
   14001bdf3:	(bad)  
   14001bdf4:	(bad)  
   14001bdf5:	call   QWORD PTR [rcx+0x0]
   14001bdf8:	push   rdx
   14001bdf9:	add    BYTE PTR [rbx+0x0],dl
   14001bdfc:	(bad)  
   14001bdfd:	(bad)  
   14001bdfe:	(bad)  
   14001bdff:	(bad)  
   14001be00:	(bad)  
   14001be01:	call   QWORD PTR [rdi+0x0]
   14001be04:	(bad)  
   14001be05:	(bad)  
   14001be06:	(bad)  
   14001be07:	(bad)  
   14001be08:	(bad)  
   14001be09:	(bad)  
   14001be0a:	(bad)  
   14001be0b:	(bad)  
   14001be0c:	(bad)  
   14001be0d:	(bad)  
   14001be0e:	(bad)  
   14001be0f:	call   FWORD PTR [rsi+0x0]
   14001be12:	pop    rdi
   14001be13:	add    BYTE PTR [rax+0x0],ah
   14001be16:	(bad)  
   14001be17:	(bad)  
   14001be18:	(bad)  
   14001be19:	(bad)  
   14001be1a:	(bad)  
   14001be1b:	(bad)  
   14001be1c:	(bad)  
   14001be1d:	(bad)  
   14001be1e:	(bad)  
   14001be1f:	(bad)  
   14001be20:	(bad)  
   14001be21:	(bad)  
   14001be22:	(bad)  
   14001be23:	(bad)  
   14001be24:	(bad)  
   14001be25:	(bad)  
   14001be26:	(bad)  
   14001be27:	dec    DWORD PTR [rbx]
   14001be29:	add    BYTE PTR [rax+rax*1],cl
   14001be2c:	or     eax,0xffffff00
   14001be31:	(bad)  
   14001be32:	(bad)  
   14001be33:	(bad)  
   14001be34:	(bad)  
   14001be35:	(bad)  
   14001be36:	(bad)  
   14001be37:	(bad)  
   14001be38:	(bad)  
   14001be39:	(bad)  
   14001be3a:	(bad)  
   14001be3b:	(bad)  
   14001be3c:	(bad)  
   14001be3d:	call   QWORD PTR [rsi]
   14001be3f:	add    bh,bh
   14001be41:	(bad)  
   14001be42:	(bad)  
   14001be43:	(bad)  
   14001be44:	(bad)  
   14001be45:	(bad)  
   14001be46:	(bad)  
   14001be47:	(bad)  
   14001be48:	(bad)  
   14001be49:	(bad)  
   14001be4a:	(bad)  
   14001be4b:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f01dc51
   14001be51:	(bad)  
   14001be52:	(bad)  
   14001be53:	jmp    QWORD PTR [rcx]
   14001be55:	add    BYTE PTR [rdx],ah
   14001be57:	add    bh,bh
   14001be59:	jmp    QWORD PTR [rax+rax*1]
   14001be5c:	(bad)  
   14001be5d:	(bad)  
   14001be5e:	(bad)  
   14001be5f:	(bad)  
   14001be60:	(bad)  
   14001be61:	jmp    FWORD PTR [rax]
   14001be63:	add    bh,bh
   14001be65:	jmp    FWORD PTR [rdx]
   14001be67:	add    BYTE PTR [rbx],ch
   14001be69:	add    BYTE PTR [rax+rax*1],ch
   14001be6c:	(bad)  
   14001be6d:	(bad)  
   14001be6e:	(bad)  
   14001be6f:	jmp    FWORD PTR [rdi]
   14001be71:	add    bh,bh
   14001be73:	(bad)  
   14001be74:	(bad)  
   14001be75:	(bad)  
   14001be76:	(bad)  
   14001be77:	push   QWORD PTR [rbx]
   14001be79:	add    bh,bh
   14001be7b:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001bd81
   14001be81:	(bad)  
   14001be82:	(bad)  
   14001be83:	(bad)  
   14001be84:	(bad)  
   14001be85:	(bad)  
   14001be86:	(bad)  
   14001be87:	(bad)  
   14001be88:	(bad)  
   14001be89:	(bad)  
   14001be8a:	(bad)  
   14001be8b:	(bad)  
   14001be8c:	cmp    eax,0xffffff00
   14001be91:	(bad)  
   14001be92:	(bad)  
   14001be93:	inc    DWORD PTR [rcx+0x0]
   14001be96:	rex.X add BYTE PTR [rbx+0x0],al
   14001be9a:	add    BYTE PTR [rbp+0x0],r8b
   14001be9e:	rex.RX add dil,r15b
   14001bea1:	dec    DWORD PTR [rax+0x0]
   14001bea4:	rex.WB add BYTE PTR [r10+0x0],cl
   14001bea8:	(bad)  
   14001bea9:	dec    DWORD PTR [rax+rax*1-0x1]
   14001bead:	dec    DWORD PTR [rsi+0x0]
   14001beb0:	(bad)  
   14001beb1:	(bad)  
   14001beb2:	(bad)  
   14001beb3:	call   QWORD PTR [rcx+0x0]
   14001beb6:	push   rdx
   14001beb7:	add    BYTE PTR [rbx+0x0],dl
   14001beba:	(bad)  
   14001bebb:	(bad)  
   14001bebc:	(bad)  
   14001bebd:	(bad)  
   14001bebe:	(bad)  
   14001bebf:	call   QWORD PTR [rdi+0x0]
   14001bec2:	(bad)  
   14001bec3:	(bad)  
   14001bec4:	(bad)  
   14001bec5:	(bad)  
   14001bec6:	(bad)  
   14001bec7:	(bad)  
   14001bec8:	(bad)  
   14001bec9:	(bad)  
   14001beca:	(bad)  
   14001becb:	(bad)  
   14001becc:	(bad)  
   14001becd:	call   FWORD PTR [rsi+0x0]
   14001bed0:	pop    rdi
   14001bed1:	add    BYTE PTR [rax+0x0],ah
   14001bed4:	(bad)  
   14001bed5:	(bad)  
   14001bed6:	(bad)  
   14001bed7:	(bad)  
   14001bed8:	(bad)  
   14001bed9:	(bad)  
   14001beda:	(bad)  
   14001bedb:	(bad)  
   14001bedc:	(bad)  
   14001bedd:	(bad)  
   14001bede:	(bad)  
   14001bedf:	(bad)  
   14001bee0:	(bad)  
   14001bee1:	(bad)  
   14001bee2:	(bad)  
   14001bee3:	(bad)  
   14001bee4:	(bad)  
   14001bee5:	dec    DWORD PTR [rbx]
   14001bee7:	add    BYTE PTR [rax+rax*1],cl
   14001beea:	or     eax,0xffffff00
   14001beef:	(bad)  
   14001bef0:	(bad)  
   14001bef1:	(bad)  
   14001bef2:	(bad)  
   14001bef3:	(bad)  
   14001bef4:	(bad)  
   14001bef5:	(bad)  
   14001bef6:	(bad)  
   14001bef7:	(bad)  
   14001bef8:	(bad)  
   14001bef9:	(bad)  
   14001befa:	(bad)  
   14001befb:	call   QWORD PTR [rsi]
   14001befd:	add    bh,bh
   14001beff:	(bad)  
   14001bf00:	(bad)  
   14001bf01:	(bad)  
   14001bf02:	(bad)  
   14001bf03:	(bad)  
   14001bf04:	(bad)  
   14001bf05:	(bad)  
   14001bf06:	(bad)  
   14001bf07:	(bad)  
   14001bf08:	(bad)  
   14001bf09:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f01dd0f
   14001bf0f:	(bad)  
   14001bf10:	(bad)  
   14001bf11:	jmp    QWORD PTR [rcx]
   14001bf13:	add    BYTE PTR [rdx],ah
   14001bf15:	add    bh,bh
   14001bf17:	jmp    QWORD PTR [rax+rax*1]
   14001bf1a:	(bad)  
   14001bf1b:	(bad)  
   14001bf1c:	(bad)  
   14001bf1d:	(bad)  
   14001bf1e:	(bad)  
   14001bf1f:	jmp    FWORD PTR [rax]
   14001bf21:	add    bh,bh
   14001bf23:	jmp    FWORD PTR [rdx]
   14001bf25:	add    BYTE PTR [rbx],ch
   14001bf27:	add    BYTE PTR [rax+rax*1],ch
   14001bf2a:	(bad)  
   14001bf2b:	(bad)  
   14001bf2c:	(bad)  
   14001bf2d:	jmp    FWORD PTR [rdi]
   14001bf2f:	add    bh,bh
   14001bf31:	(bad)  
   14001bf32:	(bad)  
   14001bf33:	(bad)  
   14001bf34:	(bad)  
   14001bf35:	push   QWORD PTR [rbx]
   14001bf37:	add    bh,bh
   14001bf39:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001be3f
   14001bf3f:	(bad)  
   14001bf40:	(bad)  
   14001bf41:	(bad)  
   14001bf42:	(bad)  
   14001bf43:	(bad)  
   14001bf44:	(bad)  
   14001bf45:	(bad)  
   14001bf46:	(bad)  
   14001bf47:	(bad)  
   14001bf48:	(bad)  
   14001bf49:	(bad)  
   14001bf4a:	cmp    eax,0xffffff00
   14001bf4f:	(bad)  
   14001bf50:	(bad)  
   14001bf51:	inc    DWORD PTR [rcx+0x0]
   14001bf54:	rex.X add BYTE PTR [rbx+0x0],al
   14001bf58:	add    BYTE PTR [rbp+0x0],r8b
   14001bf5c:	rex.RX add dil,r15b
   14001bf5f:	dec    DWORD PTR [rax+0x0]
   14001bf62:	rex.WB add BYTE PTR [r10+0x0],cl
   14001bf66:	(bad)  
   14001bf67:	dec    DWORD PTR [rax+rax*1-0x1]
   14001bf6b:	dec    DWORD PTR [rsi+0x0]
   14001bf6e:	(bad)  
   14001bf6f:	(bad)  
   14001bf70:	(bad)  
   14001bf71:	call   QWORD PTR [rcx+0x0]
   14001bf74:	push   rdx
   14001bf75:	add    BYTE PTR [rbx+0x0],dl
   14001bf78:	(bad)  
   14001bf79:	(bad)  
   14001bf7a:	(bad)  
   14001bf7b:	(bad)  
   14001bf7c:	(bad)  
   14001bf7d:	call   QWORD PTR [rdi+0x0]
   14001bf80:	(bad)  
   14001bf81:	(bad)  
   14001bf82:	(bad)  
   14001bf83:	(bad)  
   14001bf84:	(bad)  
   14001bf85:	(bad)  
   14001bf86:	(bad)  
   14001bf87:	(bad)  
   14001bf88:	(bad)  
   14001bf89:	(bad)  
   14001bf8a:	(bad)  
   14001bf8b:	call   FWORD PTR [rsi+0x0]
   14001bf8e:	pop    rdi
   14001bf8f:	add    BYTE PTR [rax+0x0],ah
   14001bf92:	(bad)  
   14001bf93:	(bad)  
   14001bf94:	(bad)  
   14001bf95:	(bad)  
   14001bf96:	(bad)  
   14001bf97:	(bad)  
   14001bf98:	(bad)  
   14001bf99:	(bad)  
   14001bf9a:	(bad)  
   14001bf9b:	(bad)  
   14001bf9c:	(bad)  
   14001bf9d:	(bad)  
   14001bf9e:	(bad)  
   14001bf9f:	(bad)  
   14001bfa0:	(bad)  
   14001bfa1:	(bad)  
   14001bfa2:	(bad)  
   14001bfa3:	inc    DWORD PTR [rax+rax*1]
   14001bfa6:	add    eax,0xff000600
   14001bfab:	(bad)  
   14001bfac:	(bad)  
   14001bfad:	dec    DWORD PTR [rcx]
   14001bfaf:	add    BYTE PTR [rdx],cl
   14001bfb1:	add    BYTE PTR [rbx],cl
   14001bfb3:	add    bh,bh
   14001bfb5:	(bad)  
   14001bfb6:	(bad)  
   14001bfb7:	dec    DWORD PTR [rsi]
   14001bfb9:	add    bh,bh
   14001bfbb:	call   QWORD PTR [rax]
   14001bfbd:	add    bh,bh
   14001bfbf:	(bad)  
   14001bfc0:	(bad)  
   14001bfc1:	(bad)  
   14001bfc2:	(bad)  
   14001bfc3:	call   QWORD PTR [rax+rax*1]
   14001bfc6:	adc    eax,0xff001600
   14001bfcb:	(bad)  
   14001bfcc:	(bad)  
   14001bfcd:	(bad)  
   14001bfce:	(bad)  
   14001bfcf:	(bad)  
   14001bfd0:	(bad)  
   14001bfd1:	(bad)  
   14001bfd2:	(bad)  
   14001bfd3:	(bad)  
   14001bfd4:	(bad)  
   14001bfd5:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f01dddb
   14001bfdb:	add    BYTE PTR [rax],ah
   14001bfdd:	add    bh,bh
   14001bfdf:	(bad)  
   14001bfe0:	(bad)  
   14001bfe1:	(bad)  
   14001bfe2:	(bad)  
   14001bfe3:	(bad)  
   14001bfe4:	(bad)  
   14001bfe5:	(bad)  
   14001bfe6:	(bad)  
   14001bfe7:	(bad)  
   14001bfe8:	(bad)  
   14001bfe9:	(bad)  
   14001bfea:	(bad)  
   14001bfeb:	(bad)  
   14001bfec:	(bad)  
   14001bfed:	(bad)  
   14001bfee:	(bad)  
   14001bfef:	(bad)  
   14001bff0:	(bad)  
   14001bff1:	jmp    FWORD PTR [rbx]
   14001bff3:	add    bh,bh
   14001bff5:	(bad)  
   14001bff6:	(bad)  
   14001bff7:	(bad)  
   14001bff8:	(bad)  
   14001bff9:	(bad)  
   14001bffa:	(bad)  
   14001bffb:	(bad)  
   14001bffc:	(bad)  
   14001bffd:	(bad)  
   14001bffe:	(bad)  
   14001bfff:	(bad)  
   14001c000:	(bad)  
   14001c001:	(bad)  
   14001c002:	(bad)  
   14001c003:	(bad)  
   14001c004:	(bad)  
   14001c005:	(bad)  
   14001c006:	(bad)  
   14001c007:	(bad)  
   14001c008:	(bad)  
   14001c009:	(bad)  
   14001c00a:	(bad)  
   14001c00b:	(bad)  
   14001c00c:	(bad)  
   14001c00d:	(bad)  
   14001c00e:	(bad)  
   14001c00f:	(bad)  
   14001c010:	(bad)  
   14001c011:	(bad)  
   14001c012:	cmp    eax,DWORD PTR [rax]
   14001c014:	(bad)  
   14001c015:	(bad)  
   14001c016:	(bad)  
   14001c017:	(bad)  
   14001c018:	(bad)  
   14001c019:	(bad)  
   14001c01a:	(bad)  
   14001c01b:	(bad)  
   14001c01c:	(bad)  
   14001c01d:	(bad)  
   14001c01e:	(bad)  
   14001c01f:	inc    DWORD PTR [rdx+0x0]
   14001c022:	add    BYTE PTR [r8+r8*1+0x45],al
   14001c027:	add    BYTE PTR [rsi+0x0],al
   14001c02a:	rex.RXB add r15b,r15b
   14001c02d:	dec    DWORD PTR [rcx+0x0]
   14001c030:	rex.WX add BYTE PTR [rbx+0x0],cl
   14001c034:	rex.WR add BYTE PTR [rbp+0x0],r9b
   14001c038:	rex.WRX add dil,r15b
   14001c03b:	(bad)  
   14001c03c:	(bad)  
   14001c03d:	call   QWORD PTR [rcx+0x0]
   14001c040:	push   rdx
   14001c041:	add    BYTE PTR [rbx+0x0],dl
   14001c044:	push   rsp
   14001c045:	add    BYTE PTR [rbp+0x0],dl
   14001c048:	push   rsi
   14001c049:	add    bh,bh
   14001c04b:	(bad)  
   14001c04c:	(bad)  
   14001c04d:	(bad)  
   14001c04e:	(bad)  
   14001c04f:	(bad)  
   14001c050:	(bad)  
   14001c051:	(bad)  
   14001c052:	(bad)  
   14001c053:	(bad)  
   14001c054:	(bad)  
   14001c055:	(bad)  
   14001c056:	(bad)  
   14001c057:	call   FWORD PTR [rsi+0x0]
   14001c05a:	pop    rdi
   14001c05b:	add    BYTE PTR [rax+0x0],ah
   14001c05e:	(bad)  
   14001c05f:	(bad)  
   14001c060:	(bad)  
   14001c061:	(bad)  
   14001c062:	(bad)  
   14001c063:	(bad)  
   14001c064:	(bad)  
   14001c065:	(bad)  
   14001c066:	(bad)  
   14001c067:	(bad)  
   14001c068:	(bad)  
   14001c069:	(bad)  
   14001c06a:	(bad)  
   14001c06b:	(bad)  
   14001c06c:	(bad)  
   14001c06d:	(bad)  
   14001c06e:	(bad)  
   14001c06f:	inc    DWORD PTR [rax+rax*1]
   14001c072:	add    eax,0xff000600
   14001c077:	(bad)  
   14001c078:	(bad)  
   14001c079:	dec    DWORD PTR [rcx]
   14001c07b:	add    BYTE PTR [rdx],cl
   14001c07d:	add    BYTE PTR [rbx],cl
   14001c07f:	add    bh,bh
   14001c081:	(bad)  
   14001c082:	(bad)  
   14001c083:	dec    DWORD PTR [rsi]
   14001c085:	add    bh,bh
   14001c087:	call   QWORD PTR [rax]
   14001c089:	add    bh,bh
   14001c08b:	(bad)  
   14001c08c:	(bad)  
   14001c08d:	(bad)  
   14001c08e:	(bad)  
   14001c08f:	call   QWORD PTR [rax+rax*1]
   14001c092:	adc    eax,0xff001600
   14001c097:	(bad)  
   14001c098:	(bad)  
   14001c099:	(bad)  
   14001c09a:	(bad)  
   14001c09b:	(bad)  
   14001c09c:	(bad)  
   14001c09d:	(bad)  
   14001c09e:	(bad)  
   14001c09f:	(bad)  
   14001c0a0:	(bad)  
   14001c0a1:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f01dea7
   14001c0a7:	add    BYTE PTR [rax],ah
   14001c0a9:	add    bh,bh
   14001c0ab:	(bad)  
   14001c0ac:	(bad)  
   14001c0ad:	(bad)  
   14001c0ae:	(bad)  
   14001c0af:	(bad)  
   14001c0b0:	(bad)  
   14001c0b1:	(bad)  
   14001c0b2:	(bad)  
   14001c0b3:	(bad)  
   14001c0b4:	(bad)  
   14001c0b5:	(bad)  
   14001c0b6:	(bad)  
   14001c0b7:	(bad)  
   14001c0b8:	(bad)  
   14001c0b9:	(bad)  
   14001c0ba:	(bad)  
   14001c0bb:	(bad)  
   14001c0bc:	(bad)  
   14001c0bd:	jmp    FWORD PTR [rbx]
   14001c0bf:	add    bh,bh
   14001c0c1:	(bad)  
   14001c0c2:	(bad)  
   14001c0c3:	(bad)  
   14001c0c4:	(bad)  
   14001c0c5:	jmp    FWORD PTR [rdi]
   14001c0c7:	add    bh,bh
   14001c0c9:	(bad)  
   14001c0ca:	(bad)  
   14001c0cb:	(bad)  
   14001c0cc:	(bad)  
   14001c0cd:	(bad)  
   14001c0ce:	(bad)  
   14001c0cf:	(bad)  
   14001c0d0:	(bad)  
   14001c0d1:	(bad)  
   14001c0d2:	(bad)  
   14001c0d3:	(bad)  
   14001c0d4:	(bad)  
   14001c0d5:	(bad)  
   14001c0d6:	(bad)  
   14001c0d7:	(bad)  
   14001c0d8:	(bad)  
   14001c0d9:	(bad)  
   14001c0da:	(bad)  
   14001c0db:	(bad)  
   14001c0dc:	(bad)  
   14001c0dd:	(bad)  
   14001c0de:	cmp    eax,DWORD PTR [rax]
   14001c0e0:	(bad)  
   14001c0e1:	(bad)  
   14001c0e2:	(bad)  
   14001c0e3:	(bad)  
   14001c0e4:	(bad)  
   14001c0e5:	(bad)  
   14001c0e6:	(bad)  
   14001c0e7:	(bad)  
   14001c0e8:	(bad)  
   14001c0e9:	inc    DWORD PTR [rcx+0x0]
   14001c0ec:	rex.X add BYTE PTR [rbx+0x0],al
   14001c0f0:	add    BYTE PTR [rbp+0x0],r8b
   14001c0f4:	rex.RX add BYTE PTR [rdi+0x0],r8b
   14001c0f8:	(bad)  
   14001c0f9:	dec    DWORD PTR [rcx+0x0]
   14001c0fc:	rex.WX add BYTE PTR [rbx+0x0],cl
   14001c100:	rex.WR add BYTE PTR [rbp+0x0],r9b
   14001c104:	rex.WRX add dil,r15b
   14001c107:	(bad)  
   14001c108:	(bad)  
   14001c109:	call   QWORD PTR [rcx+0x0]
   14001c10c:	push   rdx
   14001c10d:	add    BYTE PTR [rbx+0x0],dl
   14001c110:	push   rsp
   14001c111:	add    BYTE PTR [rbp+0x0],dl
   14001c114:	push   rsi
   14001c115:	add    bh,bh
   14001c117:	(bad)  
   14001c118:	(bad)  
   14001c119:	(bad)  
   14001c11a:	(bad)  
   14001c11b:	(bad)  
   14001c11c:	(bad)  
   14001c11d:	(bad)  
   14001c11e:	(bad)  
   14001c11f:	(bad)  
   14001c120:	(bad)  
   14001c121:	(bad)  
   14001c122:	(bad)  
   14001c123:	call   FWORD PTR [rsi+0x0]
   14001c126:	pop    rdi
   14001c127:	add    BYTE PTR [rax+0x0],ah
   14001c12a:	(bad)  
   14001c12b:	(bad)  
   14001c12c:	(bad)  
   14001c12d:	(bad)  
   14001c12e:	(bad)  
   14001c12f:	(bad)  
   14001c130:	(bad)  
   14001c131:	(bad)  
   14001c132:	(bad)  
   14001c133:	(bad)  
   14001c134:	(bad)  
   14001c135:	(bad)  
   14001c136:	(bad)  
   14001c137:	(bad)  
   14001c138:	(bad)  
   14001c139:	(bad)  
   14001c13a:	(bad)  
   14001c13b:	inc    DWORD PTR [rax+rax*1]
   14001c13e:	add    eax,0xff000600
   14001c143:	(bad)  
   14001c144:	(bad)  
   14001c145:	dec    DWORD PTR [rcx]
   14001c147:	add    BYTE PTR [rdx],cl
   14001c149:	add    BYTE PTR [rbx],cl
   14001c14b:	add    bh,bh
   14001c14d:	(bad)  
   14001c14e:	(bad)  
   14001c14f:	dec    DWORD PTR [rsi]
   14001c151:	add    bh,bh
   14001c153:	call   QWORD PTR [rax]
   14001c155:	add    bh,bh
   14001c157:	(bad)  
   14001c158:	(bad)  
   14001c159:	(bad)  
   14001c15a:	(bad)  
   14001c15b:	call   QWORD PTR [rax+rax*1]
   14001c15e:	adc    eax,0xff001600
   14001c163:	(bad)  
   14001c164:	(bad)  
   14001c165:	(bad)  
   14001c166:	(bad)  
   14001c167:	(bad)  
   14001c168:	(bad)  
   14001c169:	(bad)  
   14001c16a:	(bad)  
   14001c16b:	(bad)  
   14001c16c:	(bad)  
   14001c16d:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f01df73
   14001c173:	add    BYTE PTR [rax],ah
   14001c175:	add    bh,bh
   14001c177:	(bad)  
   14001c178:	(bad)  
   14001c179:	(bad)  
   14001c17a:	(bad)  
   14001c17b:	(bad)  
   14001c17c:	(bad)  
   14001c17d:	(bad)  
   14001c17e:	(bad)  
   14001c17f:	(bad)  
   14001c180:	(bad)  
   14001c181:	(bad)  
   14001c182:	(bad)  
   14001c183:	(bad)  
   14001c184:	(bad)  
   14001c185:	(bad)  
   14001c186:	(bad)  
   14001c187:	(bad)  
   14001c188:	(bad)  
   14001c189:	jmp    FWORD PTR [rbx]
   14001c18b:	add    bh,bh
   14001c18d:	(bad)  
   14001c18e:	(bad)  
   14001c18f:	(bad)  
   14001c190:	(bad)  
   14001c191:	jmp    FWORD PTR [rdi]
   14001c193:	add    bh,bh
   14001c195:	(bad)  
   14001c196:	(bad)  
   14001c197:	(bad)  
   14001c198:	(bad)  
   14001c199:	(bad)  
   14001c19a:	(bad)  
   14001c19b:	(bad)  
   14001c19c:	(bad)  
   14001c19d:	(bad)  
   14001c19e:	(bad)  
   14001c19f:	(bad)  
   14001c1a0:	(bad)  
   14001c1a1:	(bad)  
   14001c1a2:	(bad)  
   14001c1a3:	(bad)  
   14001c1a4:	(bad)  
   14001c1a5:	(bad)  
   14001c1a6:	(bad)  
   14001c1a7:	(bad)  
   14001c1a8:	(bad)  
   14001c1a9:	(bad)  
   14001c1aa:	cmp    eax,DWORD PTR [rax]
   14001c1ac:	(bad)  
   14001c1ad:	(bad)  
   14001c1ae:	(bad)  
   14001c1af:	(bad)  
   14001c1b0:	(bad)  
   14001c1b1:	(bad)  
   14001c1b2:	(bad)  
   14001c1b3:	(bad)  
   14001c1b4:	(bad)  
   14001c1b5:	inc    DWORD PTR [rcx+0x0]
   14001c1b8:	rex.X add BYTE PTR [rbx+0x0],al
   14001c1bc:	add    BYTE PTR [rbp+0x0],r8b
   14001c1c0:	rex.RX add BYTE PTR [rdi+0x0],r8b
   14001c1c4:	(bad)  
   14001c1c5:	dec    DWORD PTR [rcx+0x0]
   14001c1c8:	rex.WX add BYTE PTR [rbx+0x0],cl
   14001c1cc:	rex.WR add BYTE PTR [rbp+0x0],r9b
   14001c1d0:	rex.WRX add dil,r15b
   14001c1d3:	(bad)  
   14001c1d4:	(bad)  
   14001c1d5:	call   QWORD PTR [rcx+0x0]
   14001c1d8:	push   rdx
   14001c1d9:	add    BYTE PTR [rbx+0x0],dl
   14001c1dc:	push   rsp
   14001c1dd:	add    BYTE PTR [rbp+0x0],dl
   14001c1e0:	push   rsi
   14001c1e1:	add    bh,bh
   14001c1e3:	(bad)  
   14001c1e4:	(bad)  
   14001c1e5:	(bad)  
   14001c1e6:	(bad)  
   14001c1e7:	(bad)  
   14001c1e8:	(bad)  
   14001c1e9:	(bad)  
   14001c1ea:	(bad)  
   14001c1eb:	(bad)  
   14001c1ec:	(bad)  
   14001c1ed:	(bad)  
   14001c1ee:	(bad)  
   14001c1ef:	call   FWORD PTR [rsi+0x0]
   14001c1f2:	pop    rdi
   14001c1f3:	add    BYTE PTR [rax+0x0],ah
   14001c1f6:	(bad)  
   14001c1f7:	(bad)  
   14001c1f8:	(bad)  
   14001c1f9:	(bad)  
   14001c1fa:	(bad)  
   14001c1fb:	(bad)  
   14001c1fc:	(bad)  
   14001c1fd:	(bad)  
   14001c1fe:	(bad)  
   14001c1ff:	(bad)  
   14001c200:	(bad)  
   14001c201:	(bad)  
   14001c202:	(bad)  
   14001c203:	(bad)  
   14001c204:	(bad)  
   14001c205:	(bad)  
   14001c206:	(bad)  
   14001c207:	inc    DWORD PTR [rax+rax*1]
   14001c20a:	add    eax,0xff000600
   14001c20f:	(bad)  
   14001c210:	(bad)  
   14001c211:	dec    DWORD PTR [rcx]
   14001c213:	add    BYTE PTR [rdx],cl
   14001c215:	add    BYTE PTR [rbx],cl
   14001c217:	add    bh,bh
   14001c219:	(bad)  
   14001c21a:	(bad)  
   14001c21b:	dec    DWORD PTR [rsi]
   14001c21d:	add    bh,bh
   14001c21f:	call   QWORD PTR [rax]
   14001c221:	add    bh,bh
   14001c223:	(bad)  
   14001c224:	(bad)  
   14001c225:	(bad)  
   14001c226:	(bad)  
   14001c227:	call   QWORD PTR [rax+rax*1]
   14001c22a:	adc    eax,0xff001600
   14001c22f:	(bad)  
   14001c230:	(bad)  
   14001c231:	(bad)  
   14001c232:	(bad)  
   14001c233:	(bad)  
   14001c234:	(bad)  
   14001c235:	(bad)  
   14001c236:	(bad)  
   14001c237:	(bad)  
   14001c238:	(bad)  
   14001c239:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f01e03f
   14001c23f:	add    BYTE PTR [rax],ah
   14001c241:	add    bh,bh
   14001c243:	(bad)  
   14001c244:	(bad)  
   14001c245:	(bad)  
   14001c246:	(bad)  
   14001c247:	(bad)  
   14001c248:	(bad)  
   14001c249:	(bad)  
   14001c24a:	(bad)  
   14001c24b:	(bad)  
   14001c24c:	(bad)  
   14001c24d:	(bad)  
   14001c24e:	(bad)  
   14001c24f:	(bad)  
   14001c250:	(bad)  
   14001c251:	(bad)  
   14001c252:	(bad)  
   14001c253:	(bad)  
   14001c254:	(bad)  
   14001c255:	jmp    FWORD PTR [rbx]
   14001c257:	add    bh,bh
   14001c259:	(bad)  
   14001c25a:	(bad)  
   14001c25b:	(bad)  
   14001c25c:	(bad)  
   14001c25d:	jmp    FWORD PTR [rdi]
   14001c25f:	add    bh,bh
   14001c261:	(bad)  
   14001c262:	(bad)  
   14001c263:	(bad)  
   14001c264:	(bad)  
   14001c265:	(bad)  
   14001c266:	(bad)  
   14001c267:	(bad)  
   14001c268:	(bad)  
   14001c269:	(bad)  
   14001c26a:	(bad)  
   14001c26b:	(bad)  
   14001c26c:	(bad)  
   14001c26d:	push   QWORD PTR [rdi]
   14001c26f:	add    bh,bh
   14001c271:	(bad)  
   14001c272:	(bad)  
   14001c273:	(bad)  
   14001c274:	(bad)  
   14001c275:	(bad)  
   14001c276:	cmp    eax,DWORD PTR [rax]
   14001c278:	(bad)  
   14001c279:	(bad)  
   14001c27a:	(bad)  
   14001c27b:	(bad)  
   14001c27c:	(bad)  
   14001c27d:	(bad)  
   14001c27e:	(bad)  
   14001c27f:	(bad)  
   14001c280:	(bad)  
   14001c281:	inc    DWORD PTR [rcx+0x0]
   14001c284:	rex.X add BYTE PTR [rbx+0x0],al
   14001c288:	add    BYTE PTR [rbp+0x0],r8b
   14001c28c:	rex.RX add BYTE PTR [rdi+0x0],r8b
   14001c290:	(bad)  
   14001c291:	dec    DWORD PTR [rcx+0x0]
   14001c294:	rex.WX add BYTE PTR [rbx+0x0],cl
   14001c298:	rex.WR add BYTE PTR [rbp+0x0],r9b
   14001c29c:	rex.WRX add dil,r15b
   14001c29f:	(bad)  
   14001c2a0:	(bad)  
   14001c2a1:	call   QWORD PTR [rcx+0x0]
   14001c2a4:	push   rdx
   14001c2a5:	add    BYTE PTR [rbx+0x0],dl
   14001c2a8:	push   rsp
   14001c2a9:	add    BYTE PTR [rbp+0x0],dl
   14001c2ac:	push   rsi
   14001c2ad:	add    bh,bh
   14001c2af:	(bad)  
   14001c2b0:	(bad)  
   14001c2b1:	(bad)  
   14001c2b2:	(bad)  
   14001c2b3:	(bad)  
   14001c2b4:	(bad)  
   14001c2b5:	(bad)  
   14001c2b6:	(bad)  
   14001c2b7:	(bad)  
   14001c2b8:	(bad)  
   14001c2b9:	(bad)  
   14001c2ba:	(bad)  
   14001c2bb:	call   FWORD PTR [rsi+0x0]
   14001c2be:	pop    rdi
   14001c2bf:	add    BYTE PTR [rax+0x0],ah
   14001c2c2:	(bad)  
   14001c2c3:	(bad)  
   14001c2c4:	(bad)  
   14001c2c5:	(bad)  
   14001c2c6:	(bad)  
   14001c2c7:	(bad)  
   14001c2c8:	(bad)  
   14001c2c9:	(bad)  
   14001c2ca:	(bad)  
   14001c2cb:	(bad)  
   14001c2cc:	(bad)  
   14001c2cd:	(bad)  
   14001c2ce:	(bad)  
   14001c2cf:	(bad)  
   14001c2d0:	(bad)  
   14001c2d1:	(bad)  
   14001c2d2:	(bad)  
   14001c2d3:	inc    DWORD PTR [rax+rax*1]
   14001c2d6:	(bad)  
   14001c2d7:	(bad)  
   14001c2d8:	(bad)  
   14001c2d9:	(bad)  
   14001c2da:	(bad)  
   14001c2db:	(bad)  
   14001c2dc:	(bad)  
   14001c2dd:	dec    DWORD PTR [rcx]
   14001c2df:	add    bh,bh
   14001c2e1:	dec    DWORD PTR [rbx]
   14001c2e3:	add    BYTE PTR [rax+rax*1],cl
   14001c2e6:	or     eax,0xff000e00
   14001c2eb:	(bad)  
   14001c2ec:	(bad)  
   14001c2ed:	(bad)  
   14001c2ee:	(bad)  
   14001c2ef:	(bad)  
   14001c2f0:	(bad)  
   14001c2f1:	(bad)  
   14001c2f2:	(bad)  
   14001c2f3:	(bad)  
   14001c2f4:	(bad)  
   14001c2f5:	call   QWORD PTR [rip+0xffffffffff001600]        # 0x13f01d8fb
   14001c2fb:	(bad)  
   14001c2fc:	(bad)  
   14001c2fd:	(bad)  
   14001c2fe:	(bad)  
   14001c2ff:	(bad)  
   14001c300:	(bad)  
   14001c301:	(bad)  
   14001c302:	(bad)  
   14001c303:	(bad)  
   14001c304:	(bad)  
   14001c305:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f01e10b
   14001c30b:	(bad)  
   14001c30c:	(bad)  
   14001c30d:	jmp    QWORD PTR [rcx]
   14001c30f:	add    BYTE PTR [rdx],ah
   14001c311:	add    bh,bh
   14001c313:	jmp    QWORD PTR [rax+rax*1]
   14001c316:	(bad)  
   14001c317:	(bad)  
   14001c318:	(bad)  
   14001c319:	(bad)  
   14001c31a:	(bad)  
   14001c31b:	jmp    FWORD PTR [rax]
   14001c31d:	add    bh,bh
   14001c31f:	jmp    FWORD PTR [rdx]
   14001c321:	add    BYTE PTR [rbx],ch
   14001c323:	add    BYTE PTR [rax+rax*1],ch
   14001c326:	(bad)  
   14001c327:	(bad)  
   14001c328:	(bad)  
   14001c329:	jmp    FWORD PTR [rdi]
   14001c32b:	add    bh,bh
   14001c32d:	(bad)  
   14001c32e:	(bad)  
   14001c32f:	(bad)  
   14001c330:	(bad)  
   14001c331:	push   QWORD PTR [rbx]
   14001c333:	add    bh,bh
   14001c335:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001c23b
   14001c33b:	(bad)  
   14001c33c:	(bad)  
   14001c33d:	(bad)  
   14001c33e:	(bad)  
   14001c33f:	(bad)  
   14001c340:	(bad)  
   14001c341:	(bad)  
   14001c342:	cmp    eax,DWORD PTR [rax]
   14001c344:	(bad)  
   14001c345:	(bad)  
   14001c346:	cmp    eax,0xffffff00
   14001c34b:	(bad)  
   14001c34c:	(bad)  
   14001c34d:	inc    DWORD PTR [rcx+0x0]
   14001c350:	rex.X add BYTE PTR [rbx+0x0],al
   14001c354:	add    BYTE PTR [rbp+0x0],r8b
   14001c358:	rex.RX add BYTE PTR [rdi+0x0],r8b
   14001c35c:	rex.W add BYTE PTR [rcx+0x0],cl
   14001c360:	rex.WX add BYTE PTR [rbx+0x0],cl
   14001c364:	rex.WR add BYTE PTR [rbp+0x0],r9b
   14001c368:	rex.WRX add dil,r15b
   14001c36b:	(bad)  
   14001c36c:	(bad)  
   14001c36d:	call   QWORD PTR [rcx+0x0]
   14001c370:	push   rdx
   14001c371:	add    BYTE PTR [rbx+0x0],dl
   14001c374:	push   rsp
   14001c375:	add    BYTE PTR [rbp+0x0],dl
   14001c378:	(bad)  
   14001c379:	call   QWORD PTR [rdi+0x0]
   14001c37c:	(bad)  
   14001c37d:	(bad)  
   14001c37e:	(bad)  
   14001c37f:	(bad)  
   14001c380:	(bad)  
   14001c381:	(bad)  
   14001c382:	(bad)  
   14001c383:	(bad)  
   14001c384:	(bad)  
   14001c385:	(bad)  
   14001c386:	(bad)  
   14001c387:	call   FWORD PTR [rsi+0x0]
   14001c38a:	pop    rdi
   14001c38b:	add    BYTE PTR [rax+0x0],ah
   14001c38e:	(bad)  
   14001c38f:	(bad)  
   14001c390:	(bad)  
   14001c391:	(bad)  
   14001c392:	(bad)  
   14001c393:	(bad)  
   14001c394:	(bad)  
   14001c395:	(bad)  
   14001c396:	(bad)  
   14001c397:	(bad)  
   14001c398:	(bad)  
   14001c399:	(bad)  
   14001c39a:	(bad)  
   14001c39b:	(bad)  
   14001c39c:	(bad)  
   14001c39d:	(bad)  
   14001c39e:	(bad)  
   14001c39f:	inc    DWORD PTR [rax+rax*1]
   14001c3a2:	(bad)  
   14001c3a3:	(bad)  
   14001c3a4:	(bad)  
   14001c3a5:	(bad)  
   14001c3a6:	(bad)  
   14001c3a7:	(bad)  
   14001c3a8:	(bad)  
   14001c3a9:	dec    DWORD PTR [rcx]
   14001c3ab:	add    bh,bh
   14001c3ad:	dec    DWORD PTR [rbx]
   14001c3af:	add    BYTE PTR [rax+rax*1],cl
   14001c3b2:	or     eax,0xff000e00
   14001c3b7:	(bad)  
   14001c3b8:	(bad)  
   14001c3b9:	(bad)  
   14001c3ba:	(bad)  
   14001c3bb:	(bad)  
   14001c3bc:	(bad)  
   14001c3bd:	(bad)  
   14001c3be:	(bad)  
   14001c3bf:	(bad)  
   14001c3c0:	(bad)  
   14001c3c1:	call   QWORD PTR [rip+0xffffffffff001600]        # 0x13f01d9c7
   14001c3c7:	(bad)  
   14001c3c8:	(bad)  
   14001c3c9:	(bad)  
   14001c3ca:	(bad)  
   14001c3cb:	(bad)  
   14001c3cc:	(bad)  
   14001c3cd:	(bad)  
   14001c3ce:	(bad)  
   14001c3cf:	(bad)  
   14001c3d0:	(bad)  
   14001c3d1:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f01e1d7
   14001c3d7:	(bad)  
   14001c3d8:	(bad)  
   14001c3d9:	jmp    QWORD PTR [rcx]
   14001c3db:	add    BYTE PTR [rdx],ah
   14001c3dd:	add    bh,bh
   14001c3df:	jmp    QWORD PTR [rax+rax*1]
   14001c3e2:	(bad)  
   14001c3e3:	(bad)  
   14001c3e4:	(bad)  
   14001c3e5:	(bad)  
   14001c3e6:	(bad)  
   14001c3e7:	jmp    FWORD PTR [rax]
   14001c3e9:	add    bh,bh
   14001c3eb:	jmp    FWORD PTR [rdx]
   14001c3ed:	add    BYTE PTR [rbx],ch
   14001c3ef:	add    BYTE PTR [rax+rax*1],ch
   14001c3f2:	(bad)  
   14001c3f3:	(bad)  
   14001c3f4:	(bad)  
   14001c3f5:	jmp    FWORD PTR [rdi]
   14001c3f7:	add    bh,bh
   14001c3f9:	(bad)  
   14001c3fa:	(bad)  
   14001c3fb:	(bad)  
   14001c3fc:	(bad)  
   14001c3fd:	push   QWORD PTR [rbx]
   14001c3ff:	add    bh,bh
   14001c401:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001c307
   14001c407:	(bad)  
   14001c408:	(bad)  
   14001c409:	(bad)  
   14001c40a:	(bad)  
   14001c40b:	(bad)  
   14001c40c:	(bad)  
   14001c40d:	(bad)  
   14001c40e:	cmp    eax,DWORD PTR [rax]
   14001c410:	(bad)  
   14001c411:	(bad)  
   14001c412:	cmp    eax,0xffffff00
   14001c417:	(bad)  
   14001c418:	(bad)  
   14001c419:	inc    DWORD PTR [rcx+0x0]
   14001c41c:	rex.X add BYTE PTR [rbx+0x0],al
   14001c420:	add    BYTE PTR [rbp+0x0],r8b
   14001c424:	rex.RX add BYTE PTR [rdi+0x0],r8b
   14001c428:	rex.W add BYTE PTR [rcx+0x0],cl
   14001c42c:	rex.WX add BYTE PTR [rbx+0x0],cl
   14001c430:	rex.WR add BYTE PTR [rbp+0x0],r9b
   14001c434:	rex.WRX add dil,r15b
   14001c437:	(bad)  
   14001c438:	(bad)  
   14001c439:	call   QWORD PTR [rcx+0x0]
   14001c43c:	push   rdx
   14001c43d:	add    BYTE PTR [rbx+0x0],dl
   14001c440:	push   rsp
   14001c441:	add    BYTE PTR [rbp+0x0],dl
   14001c444:	(bad)  
   14001c445:	call   QWORD PTR [rdi+0x0]
   14001c448:	(bad)  
   14001c449:	(bad)  
   14001c44a:	(bad)  
   14001c44b:	(bad)  
   14001c44c:	(bad)  
   14001c44d:	(bad)  
   14001c44e:	(bad)  
   14001c44f:	(bad)  
   14001c450:	(bad)  
   14001c451:	(bad)  
   14001c452:	(bad)  
   14001c453:	call   FWORD PTR [rsi+0x0]
   14001c456:	pop    rdi
   14001c457:	add    BYTE PTR [rax+0x0],ah
   14001c45a:	(bad)  
   14001c45b:	(bad)  
   14001c45c:	(bad)  
   14001c45d:	(bad)  
   14001c45e:	(bad)  
   14001c45f:	(bad)  
   14001c460:	(bad)  
   14001c461:	(bad)  
   14001c462:	(bad)  
   14001c463:	(bad)  
   14001c464:	(bad)  
   14001c465:	(bad)  
   14001c466:	(bad)  
   14001c467:	(bad)  
   14001c468:	(bad)  
   14001c469:	(bad)  
   14001c46a:	(bad)  
   14001c46b:	inc    DWORD PTR [rax+rax*1]
   14001c46e:	add    eax,0xff000600
   14001c473:	(bad)  
   14001c474:	(bad)  
   14001c475:	dec    DWORD PTR [rcx]
   14001c477:	add    BYTE PTR [rdx],cl
   14001c479:	add    BYTE PTR [rbx],cl
   14001c47b:	add    BYTE PTR [rax+rax*1],cl
   14001c47e:	or     eax,0xff000e00
   14001c483:	call   QWORD PTR [rax]
   14001c485:	add    bh,bh
   14001c487:	(bad)  
   14001c488:	(bad)  
   14001c489:	(bad)  
   14001c48a:	(bad)  
   14001c48b:	call   QWORD PTR [rax+rax*1]
   14001c48e:	adc    eax,0xff001600
   14001c493:	(bad)  
   14001c494:	(bad)  
   14001c495:	(bad)  
   14001c496:	(bad)  
   14001c497:	(bad)  
   14001c498:	(bad)  
   14001c499:	(bad)  
   14001c49a:	(bad)  
   14001c49b:	(bad)  
   14001c49c:	(bad)  
   14001c49d:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f01e2a3
   14001c4a3:	add    BYTE PTR [rax],ah
   14001c4a5:	add    BYTE PTR [rcx],ah
   14001c4a7:	add    BYTE PTR [rdx],ah
   14001c4a9:	add    bh,bh
   14001c4ab:	jmp    QWORD PTR [rax+rax*1]
   14001c4ae:	(bad)  
   14001c4af:	(bad)  
   14001c4b0:	(bad)  
   14001c4b1:	(bad)  
   14001c4b2:	(bad)  
   14001c4b3:	jmp    FWORD PTR [rax]
   14001c4b5:	add    bh,bh
   14001c4b7:	jmp    FWORD PTR [rdx]
   14001c4b9:	add    BYTE PTR [rbx],ch
   14001c4bb:	add    BYTE PTR [rax+rax*1],ch
   14001c4be:	(bad)  
   14001c4bf:	(bad)  
   14001c4c0:	(bad)  
   14001c4c1:	jmp    FWORD PTR [rdi]
   14001c4c3:	add    bh,bh
   14001c4c5:	(bad)  
   14001c4c6:	(bad)  
   14001c4c7:	(bad)  
   14001c4c8:	(bad)  
   14001c4c9:	push   QWORD PTR [rbx]
   14001c4cb:	add    bh,bh
   14001c4cd:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001c3d3
   14001c4d3:	(bad)  
   14001c4d4:	(bad)  
   14001c4d5:	(bad)  
   14001c4d6:	(bad)  
   14001c4d7:	(bad)  
   14001c4d8:	(bad)  
   14001c4d9:	(bad)  
   14001c4da:	cmp    eax,DWORD PTR [rax]
   14001c4dc:	(bad)  
   14001c4dd:	(bad)  
   14001c4de:	cmp    eax,0xffffff00
   14001c4e3:	(bad)  
   14001c4e4:	(bad)  
   14001c4e5:	inc    DWORD PTR [rcx+0x0]
   14001c4e8:	rex.X add BYTE PTR [rbx+0x0],al
   14001c4ec:	add    BYTE PTR [rbp+0x0],r8b
   14001c4f0:	rex.RX add BYTE PTR [rdi+0x0],r8b
   14001c4f4:	rex.W add BYTE PTR [rcx+0x0],cl
   14001c4f8:	rex.WX add BYTE PTR [rbx+0x0],cl
   14001c4fc:	rex.WR add BYTE PTR [rbp+0x0],r9b
   14001c500:	rex.WRX add dil,r15b
   14001c503:	(bad)  
   14001c504:	(bad)  
   14001c505:	call   QWORD PTR [rcx+0x0]
   14001c508:	push   rdx
   14001c509:	add    BYTE PTR [rbx+0x0],dl
   14001c50c:	push   rsp
   14001c50d:	add    BYTE PTR [rbp+0x0],dl
   14001c510:	push   rsi
   14001c511:	add    BYTE PTR [rdi+0x0],dl
   14001c514:	(bad)  
   14001c515:	(bad)  
   14001c516:	(bad)  
   14001c517:	(bad)  
   14001c518:	(bad)  
   14001c519:	(bad)  
   14001c51a:	(bad)  
   14001c51b:	(bad)  
   14001c51c:	(bad)  
   14001c51d:	(bad)  
   14001c51e:	(bad)  
   14001c51f:	call   FWORD PTR [rsi+0x0]
   14001c522:	pop    rdi
   14001c523:	add    BYTE PTR [rax+0x0],ah
   14001c526:	(bad)  
   14001c527:	(bad)  
   14001c528:	(bad)  
   14001c529:	(bad)  
   14001c52a:	(bad)  
   14001c52b:	(bad)  
   14001c52c:	(bad)  
   14001c52d:	(bad)  
   14001c52e:	(bad)  
   14001c52f:	(bad)  
   14001c530:	(bad)  
   14001c531:	(bad)  
   14001c532:	(bad)  
   14001c533:	(bad)  
   14001c534:	(bad)  
   14001c535:	(bad)  
   14001c536:	(bad)  
   14001c537:	inc    DWORD PTR [rax+rax*1]
   14001c53a:	add    eax,0xff000600
   14001c53f:	(bad)  
   14001c540:	(bad)  
   14001c541:	dec    DWORD PTR [rcx]
   14001c543:	add    BYTE PTR [rdx],cl
   14001c545:	add    BYTE PTR [rbx],cl
   14001c547:	add    BYTE PTR [rax+rax*1],cl
   14001c54a:	or     eax,0xff000e00
   14001c54f:	call   QWORD PTR [rax]
   14001c551:	add    bh,bh
   14001c553:	(bad)  
   14001c554:	(bad)  
   14001c555:	(bad)  
   14001c556:	(bad)  
   14001c557:	call   QWORD PTR [rax+rax*1]
   14001c55a:	adc    eax,0xff001600
   14001c55f:	(bad)  
   14001c560:	(bad)  
   14001c561:	(bad)  
   14001c562:	(bad)  
   14001c563:	(bad)  
   14001c564:	(bad)  
   14001c565:	(bad)  
   14001c566:	(bad)  
   14001c567:	(bad)  
   14001c568:	(bad)  
   14001c569:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f01e36f
   14001c56f:	add    BYTE PTR [rax],ah
   14001c571:	add    BYTE PTR [rcx],ah
   14001c573:	add    BYTE PTR [rdx],ah
   14001c575:	add    bh,bh
   14001c577:	jmp    QWORD PTR [rax+rax*1]
   14001c57a:	(bad)  
   14001c57b:	(bad)  
   14001c57c:	(bad)  
   14001c57d:	(bad)  
   14001c57e:	(bad)  
   14001c57f:	jmp    FWORD PTR [rax]
   14001c581:	add    bh,bh
   14001c583:	jmp    FWORD PTR [rdx]
   14001c585:	add    BYTE PTR [rbx],ch
   14001c587:	add    BYTE PTR [rax+rax*1],ch
   14001c58a:	(bad)  
   14001c58b:	(bad)  
   14001c58c:	(bad)  
   14001c58d:	jmp    FWORD PTR [rdi]
   14001c58f:	add    bh,bh
   14001c591:	(bad)  
   14001c592:	(bad)  
   14001c593:	(bad)  
   14001c594:	(bad)  
   14001c595:	push   QWORD PTR [rbx]
   14001c597:	add    bh,bh
   14001c599:	push   QWORD PTR [rip+0x37ffff00]        # 0x17801c49f
   14001c59f:	add    bh,bh
   14001c5a1:	(bad)  
   14001c5a2:	(bad)  
   14001c5a3:	(bad)  
   14001c5a4:	(bad)  
   14001c5a5:	(bad)  
   14001c5a6:	cmp    eax,DWORD PTR [rax]
   14001c5a8:	(bad)  
   14001c5a9:	(bad)  
   14001c5aa:	cmp    eax,0xffffff00
   14001c5af:	(bad)  
   14001c5b0:	(bad)  
   14001c5b1:	inc    DWORD PTR [rcx+0x0]
   14001c5b4:	rex.X add BYTE PTR [rbx+0x0],al
   14001c5b8:	add    BYTE PTR [rbp+0x0],r8b
   14001c5bc:	rex.RX add BYTE PTR [rdi+0x0],r8b
   14001c5c0:	rex.W add BYTE PTR [rcx+0x0],cl
   14001c5c4:	rex.WX add BYTE PTR [rbx+0x0],cl
   14001c5c8:	rex.WR add BYTE PTR [rbp+0x0],r9b
   14001c5cc:	rex.WRX add dil,r15b
   14001c5cf:	(bad)  
   14001c5d0:	(bad)  
   14001c5d1:	call   QWORD PTR [rcx+0x0]
   14001c5d4:	push   rdx
   14001c5d5:	add    BYTE PTR [rbx+0x0],dl
   14001c5d8:	push   rsp
   14001c5d9:	add    BYTE PTR [rbp+0x0],dl
   14001c5dc:	push   rsi
   14001c5dd:	add    BYTE PTR [rdi+0x0],dl
   14001c5e0:	(bad)  
   14001c5e1:	(bad)  
   14001c5e2:	(bad)  
   14001c5e3:	(bad)  
   14001c5e4:	(bad)  
   14001c5e5:	(bad)  
   14001c5e6:	(bad)  
   14001c5e7:	(bad)  
   14001c5e8:	(bad)  
   14001c5e9:	(bad)  
   14001c5ea:	(bad)  
   14001c5eb:	call   FWORD PTR [rsi+0x0]
   14001c5ee:	pop    rdi
   14001c5ef:	add    BYTE PTR [rax+0x0],ah
   14001c5f2:	(bad)  
   14001c5f3:	(bad)  
   14001c5f4:	(bad)  
   14001c5f5:	(bad)  
   14001c5f6:	(bad)  
   14001c5f7:	(bad)  
   14001c5f8:	(bad)  
   14001c5f9:	(bad)  
   14001c5fa:	(bad)  
   14001c5fb:	(bad)  
   14001c5fc:	(bad)  
   14001c5fd:	(bad)  
   14001c5fe:	(bad)  
   14001c5ff:	(bad)  
   14001c600:	(bad)  
   14001c601:	(bad)  
   14001c602:	(bad)  
   14001c603:	jmp    QWORD PTR [rax]
   14001c605:	add    BYTE PTR [rsi],dl
   14001c607:	add    BYTE PTR [rdx],dl
   14001c609:	add    BYTE PTR [rcx],cl
   14001c60b:	add    BYTE PTR [rdx],dl
   14001c60d:	add    BYTE PTR [rdx],ch
   14001c60f:	add    BYTE PTR [rdx],dl
   14001c611:	add    BYTE PTR [rsi],cl
   14001c613:	add    BYTE PTR [rax],ah
   14001c615:	add    BYTE PTR [rbx],al
   14001c617:	add    BYTE PTR [rdx],dl
   14001c619:	add    BYTE PTR [rbx],al
   14001c61b:	add    BYTE PTR [rbx],al
   14001c61d:	add    BYTE PTR [rdx],dl
   14001c61f:	add    BYTE PTR [rdx],dl
   14001c621:	add    BYTE PTR [rax],ah
   14001c623:	add    BYTE PTR [rdx],dl
   14001c625:	add    BYTE PTR [rax],ah
   14001c627:	add    BYTE PTR [rbx],al
   14001c629:	add    BYTE PTR [rsi],dl
   14001c62b:	add    BYTE PTR [rbx],al
   14001c62d:	add    BYTE PTR [rdx],dl
   14001c62f:	add    BYTE PTR [rbx],al
   14001c631:	add    BYTE PTR [rdx],dl
   14001c633:	add    BYTE PTR [rcx],bl
   14001c635:	add    BYTE PTR [rdx],dl
   14001c637:	add    BYTE PTR [rsi],dl
   14001c639:	add    BYTE PTR [rsi],cl
   14001c63b:	add    BYTE PTR [rdx],dl
   14001c63d:	add    BYTE PTR [rdx],dl
   14001c63f:	add    BYTE PTR [rsi],cl
   14001c641:	add    BYTE PTR [rdx],ch
   14001c643:	add    BYTE PTR [rdx],dl
   14001c645:	add    BYTE PTR [rax],ah
   14001c647:	add    BYTE PTR [rsi],dl
   14001c649:	add    BYTE PTR [rbp+0x0],cl
   14001c64c:	add    eax,DWORD PTR [rax]
   14001c64e:	add    BYTE PTR fs:[rbx],al
   14001c651:	add    BYTE PTR [rbx],al
   14001c653:	add    BYTE PTR [rbx],al
   14001c655:	add    BYTE PTR [rdi+0x0],ah
   14001c658:	sub    al,BYTE PTR [rax]
   14001c65a:	adc    al,BYTE PTR [rax]
   14001c65c:	sub    al,BYTE PTR [rax]
   14001c65e:	adc    al,BYTE PTR [rax]
   14001c660:	add    eax,DWORD PTR [rax]
   14001c662:	add    eax,DWORD PTR [rax]
   14001c664:	sbb    DWORD PTR [rax],eax
   14001c666:	sbb    DWORD PTR [rax],eax
   14001c668:	add    eax,DWORD PTR [rax]
   14001c66a:	imul   eax,DWORD PTR [rax],0x190012
   14001c670:	add    eax,DWORD PTR [rax]
   14001c672:	add    eax,DWORD PTR [rax]
   14001c674:	adc    al,BYTE PTR [rax]
   14001c676:	adc    al,BYTE PTR [rax]
   14001c678:	add    eax,DWORD PTR [rax]
   14001c67a:	adc    al,BYTE PTR [rax]
   14001c67c:	sub    al,BYTE PTR [rax]
   14001c67e:	add    eax,DWORD PTR [rax]
   14001c680:	sub    al,BYTE PTR [rax]
   14001c682:	sub    al,BYTE PTR [rax]
   14001c684:	sub    al,BYTE PTR [rax]
   14001c686:	sbb    DWORD PTR [rax],eax
   14001c688:	adc    al,BYTE PTR [rax]
   14001c68a:	adc    al,BYTE PTR [rax]
   14001c68c:	sub    al,BYTE PTR [rax]
   14001c68e:	add    al,BYTE PTR [rax]
   14001c690:	(bad)  
   14001c691:	call   QWORD PTR [rdx]
   14001c693:	add    BYTE PTR [rdx],dl
   14001c695:	add    BYTE PTR [rdx],ch
   14001c697:	add    BYTE PTR [rdx],dl
   14001c699:	add    BYTE PTR [rdx],dl
   14001c69b:	add    BYTE PTR [rsi],cl
   14001c69d:	add    BYTE PTR [rdx],dl
   14001c69f:	add    BYTE PTR [rsi],cl
   14001c6a1:	add    BYTE PTR [rdx],dl
   14001c6a3:	add    BYTE PTR [rdx],al
   14001c6a5:	add    BYTE PTR [rax+rax*1],al
   14001c6a8:	add    al,BYTE PTR [rax]
   14001c6aa:	adc    al,BYTE PTR [rax]
   14001c6ac:	sub    al,BYTE PTR [rax]
   14001c6ae:	adc    al,BYTE PTR [rax]
   14001c6b0:	add    BYTE PTR ss:[rsi],cl
   14001c6b3:	add    BYTE PTR [rax],bh
   14001c6b5:	add    BYTE PTR [rdx],dl
   14001c6b7:	add    bh,bh
   14001c6b9:	inc    DWORD PTR [rax+rax*1]
   14001c6bc:	(bad)  
   14001c6bd:	call   QWORD PTR [rdx]
   14001c6bf:	add    bh,bh
   14001c6c1:	call   QWORD PTR [rdx]
   14001c6c3:	add    BYTE PTR [rdx],dl
   14001c6c5:	add    BYTE PTR [rdx],dl
   14001c6c7:	add    BYTE PTR [rdx],dl
   14001c6c9:	add    BYTE PTR [rsi],dh
   14001c6cb:	add    BYTE PTR [rsi],dh
   14001c6cd:	add    BYTE PTR [rax],bh
   14001c6cf:	add    BYTE PTR [rax],bh
   14001c6d1:	add    BYTE PTR [rax+rax*1],ch
   14001c6d4:	add    BYTE PTR ss:[rdx],dl
   14001c6d7:	add    BYTE PTR [rax],bh
   14001c6d9:	add    BYTE PTR [rdx],dl
   14001c6db:	add    BYTE PTR [rbx],cl
   14001c6dd:	add    BYTE PTR [rax+rax*1],cl
   14001c6e0:	sub    eax,0xffffff00
   14001c6e5:	push   QWORD PTR [rbx]
   14001c6e7:	add    BYTE PTR [rsi],dh
   14001c6e9:	add    BYTE PTR [rbx],dh
   14001c6eb:	add    BYTE PTR [rax],bh
   14001c6ed:	add    BYTE PTR [rsi],dh
   14001c6ef:	add    BYTE PTR [rdx],ch
   14001c6f1:	add    BYTE PTR [rax],bh
   14001c6f3:	add    BYTE PTR [rsi],dh
   14001c6f5:	add    BYTE PTR [rsi],ch
   14001c6f7:	add    BYTE PTR [rsi],dh
   14001c6f9:	add    BYTE PTR [rsi],dh
   14001c6fb:	add    BYTE PTR [rbx],dh
   14001c6fd:	add    BYTE PTR [rsi],ch
   14001c6ff:	add    BYTE PTR [rdx],dh
   14001c701:	add    BYTE PTR [rbx],bh
   14001c703:	add    BYTE PTR [rbx],bh
   14001c705:	add    BYTE PTR [rdx],dl
   14001c707:	add    BYTE PTR [rdx],ch
   14001c709:	add    bh,bh
   14001c70b:	(bad)  
   14001c70c:	(bad)  
   14001c70d:	(bad)  
   14001c70e:	(bad)  
   14001c70f:	jmp    FWORD PTR [rip+0x46003600]        # 0x18601fd15
   14001c715:	add    BYTE PTR [rsi],dh
   14001c717:	add    BYTE PTR [rdx],dh
   14001c719:	add    BYTE PTR [rsi],dh
   14001c71b:	add    BYTE PTR [rbx],bh
   14001c71d:	add    BYTE PTR [rsi],cl
   14001c71f:	add    BYTE PTR [rbx],bh
   14001c721:	add    BYTE PTR [rdx],al
   14001c723:	add    BYTE PTR [rbx],bh
   14001c725:	add    BYTE PTR [rsi],dh
   14001c727:	add    BYTE PTR [rbx],dl
   14001c729:	add    BYTE PTR [rax],bh
   14001c72b:	add    BYTE PTR [rsi],dh
   14001c72d:	add    BYTE PTR [rsi],dh
   14001c72f:	add    BYTE PTR [rsi],dh
   14001c731:	add    BYTE PTR [rax],bh
   14001c733:	add    BYTE PTR [rsi],cl
   14001c735:	add    BYTE PTR [rbx],bh
   14001c737:	add    BYTE PTR [rbx],ch
   14001c739:	add    BYTE PTR [rsi],dh
   14001c73b:	add    BYTE PTR [rsi],dh
   14001c73d:	add    BYTE PTR [rax],bh
   14001c73f:	add    BYTE PTR [rax],bh
   14001c741:	add    BYTE PTR [rdx],dl
   14001c743:	add    BYTE PTR [rdx],al
   14001c745:	add    BYTE PTR [rdi],dl
   14001c747:	add    BYTE PTR [rdx],al
   14001c749:	add    BYTE PTR [rsi],dh
   14001c74b:	add    BYTE PTR [rax+rax*1+0x38],al
   14001c74f:	add    BYTE PTR [rsi],cl
   14001c751:	add    BYTE PTR [rsi],dh
   14001c753:	add    BYTE PTR [rsi],dh
   14001c755:	add    BYTE PTR [rdx],al
   14001c757:	add    BYTE PTR [rsi],dh
   14001c759:	add    BYTE PTR [rbx],dl
   14001c75b:	add    BYTE PTR [rbx],al
   14001c75d:	add    BYTE PTR [rax+rax*1],bh
   14001c760:	cmp    al,0x0
   14001c762:	cmp    eax,DWORD PTR [rax]
   14001c764:	adc    al,BYTE PTR [rax]
   14001c766:	add    BYTE PTR ss:[rdx],dl
   14001c769:	add    BYTE PTR [rdx],dl
   14001c76b:	add    BYTE PTR [rbp+0x0],ch
   14001c76e:	adc    al,BYTE PTR [rax]
   14001c770:	cmp    eax,DWORD PTR [rax]
   14001c772:	add    BYTE PTR ss:[rsi],dh
   14001c775:	add    BYTE PTR [rdx],dl
   14001c777:	add    BYTE PTR [rsi],dh
   14001c779:	add    BYTE PTR [rsi],dh
   14001c77b:	add    BYTE PTR [rbx],bh
   14001c77d:	add    BYTE PTR [rbx],bh
   14001c77f:	add    BYTE PTR [rsi],dh
   14001c781:	add    BYTE PTR [rbx],bh
   14001c783:	add    BYTE PTR [rbx],bh
   14001c785:	add    BYTE PTR [rsi],dh
   14001c787:	add    BYTE PTR [rdx],bh
   14001c789:	add    BYTE PTR [rsi],ah
   14001c78b:	add    BYTE PTR [rsi],dh
   14001c78d:	add    BYTE PTR [rdx],bh
   14001c78f:	add    BYTE PTR [rdx],dl
   14001c791:	add    BYTE PTR [rdx],ch
   14001c793:	add    BYTE PTR [rdx],bh
   14001c795:	add    BYTE PTR [rdx],al
   14001c797:	add    BYTE PTR [rsi],dh
   14001c799:	add    BYTE PTR [rdx],al
   14001c79b:	add    BYTE PTR [rdx],dl
   14001c79d:	add    BYTE PTR [rsi],dh
   14001c79f:	add    BYTE PTR [rip+0x2d000200],ch        # 0x16d01c9a5
   14001c7a5:	add    BYTE PTR [rdx],al
   14001c7a7:	add    BYTE PTR [rax+rax*1],al
   14001c7aa:	add    eax,DWORD PTR [rax]
   14001c7ac:	adc    al,BYTE PTR [rax]
   14001c7ae:	adc    al,BYTE PTR [rax]
   14001c7b0:	rex.X add BYTE PTR [rax+0x0],al
   14001c7b4:	add    eax,DWORD PTR [rax]
   14001c7b6:	adc    al,BYTE PTR [rax]
   14001c7b8:	add    BYTE PTR ss:[rdx],dl
   14001c7bb:	add    BYTE PTR [rax],bh
   14001c7bd:	add    BYTE PTR [rdx],al
   14001c7bf:	add    BYTE PTR [rsi],dh
   14001c7c1:	add    BYTE PTR [rdx],dl
   14001c7c3:	add    BYTE PTR [rdx],dl
   14001c7c5:	add    BYTE PTR [rdx],dl
   14001c7c7:	add    BYTE PTR [rsi],ch
   14001c7c9:	add    BYTE PTR [rsi],dh
   14001c7cb:	add    BYTE PTR [rax+rax*1],bh
   14001c7ce:	cmp    BYTE PTR [rax],al
   14001c7d0:	add    eax,DWORD PTR [rax]
   14001c7d2:	add    eax,DWORD PTR [rax]
   14001c7d4:	add    BYTE PTR ss:[rdi],ch
   14001c7d7:	add    BYTE PTR [rdx],al
   14001c7d9:	add    BYTE PTR [rcx],bh
   14001c7db:	add    BYTE PTR [rsi],dh
   14001c7dd:	add    BYTE PTR [rdx],dl
   14001c7df:	add    BYTE PTR [rax],bh
   14001c7e1:	add    BYTE PTR [rsi],dh
   14001c7e3:	add    BYTE PTR [rdx],al
   14001c7e5:	add    BYTE PTR [rax],bh
   14001c7e7:	add    BYTE PTR [rsi],dh
   14001c7e9:	add    BYTE PTR [rsi],dh
   14001c7eb:	add    BYTE PTR [rax],bh
   14001c7ed:	add    BYTE PTR [rdx],al
   14001c7ef:	add    BYTE PTR [rcx],bh
   14001c7f1:	add    BYTE PTR [rsi],dh
   14001c7f3:	add    BYTE PTR [rdx],al
   14001c7f5:	add    BYTE PTR [rdx],dl
   14001c7f7:	add    BYTE PTR [rdx],dl
   14001c7f9:	add    BYTE PTR [rsi],dh
   14001c7fb:	add    BYTE PTR [rsi],dh
   14001c7fd:	add    BYTE PTR [rax],bh
   14001c7ff:	add    bh,bh
   14001c801:	(bad)  
   14001c802:	add    BYTE PTR ds:[rdx],dl
   14001c805:	add    BYTE PTR [rsi],dh
   14001c807:	add    BYTE PTR [rax+rax*1],bh
   14001c80a:	cmp    BYTE PTR [rax],al
   14001c80c:	(bad)  
   14001c80d:	call   QWORD PTR [rdx]
   14001c80f:	add    BYTE PTR [rsi],cl
   14001c811:	add    BYTE PTR [rsi],dh
   14001c813:	add    BYTE PTR [rdx],dl
   14001c815:	add    BYTE PTR [rsi],dh
   14001c817:	add    BYTE PTR [rdx],al
   14001c819:	add    BYTE PTR [rbx],dl
   14001c81b:	add    BYTE PTR [rbx],bh
   14001c81d:	add    bh,bh
   14001c81f:	(bad)  
   14001c820:	cmp    eax,DWORD PTR [rax]
   14001c822:	add    BYTE PTR ss:[rsi],dh
   14001c825:	add    bh,bh
   14001c827:	(bad)  
   14001c828:	(bad)  
   14001c829:	add    BYTE PTR [rax+rax*1],ch
   14001c82c:	cmp    eax,DWORD PTR [rax]
   14001c82e:	cmp    eax,DWORD PTR [rax]
   14001c830:	(bad)  
   14001c831:	push   QWORD PTR [rsi]
   14001c833:	add    BYTE PTR [rdx],al
   14001c835:	add    bh,bh
   14001c837:	call   QWORD PTR [rdx]
   14001c839:	add    BYTE PTR [rcx+0x0],al
   14001c83c:	cmp    eax,DWORD PTR [rax]
   14001c83e:	rex.WR add BYTE PTR [rsi+0x0],r9b
   14001c842:	pop    rsp
   14001c843:	add    BYTE PTR [rsi+0x0],bl
   14001c846:	add    BYTE PTR ss:[rsi],dh
   14001c849:	add    BYTE PTR [rsi+0x0],cl
   14001c84c:	adc    al,BYTE PTR [rax]
   14001c84e:	rex.WR add BYTE PTR [rbx],r15b
   14001c851:	add    BYTE PTR [rbx],bh
   14001c853:	add    BYTE PTR [rdx],dl
   14001c855:	add    BYTE PTR [rip+0x36003600],bh        # 0x17601fe5b
   14001c85b:	add    bh,bh
   14001c85d:	dec    DWORD PTR [rax+rax*1+0x43]
   14001c861:	add    BYTE PTR [rbx],bh
   14001c863:	add    BYTE PTR [rbx],bh
   14001c865:	add    BYTE PTR [rsi+0x0],cl
   14001c868:	rex.WRX add BYTE PTR [rsi],r14b
   14001c86b:	add    BYTE PTR [rsi],dh
   14001c86d:	add    bh,bh
   14001c86f:	push   QWORD PTR [rsi]
   14001c871:	add    BYTE PTR [rsi],dh
   14001c873:	add    BYTE PTR [rbx],bh
   14001c875:	add    BYTE PTR [rbx],bh
   14001c877:	add    BYTE PTR [rbp+0x0],al
   14001c87a:	cmp    eax,DWORD PTR [rax]
   14001c87c:	cmp    eax,DWORD PTR [rax]
   14001c87e:	cmp    eax,0xe003d00
   14001c883:	add    BYTE PTR [rax+rax*1+0x2f],cl
   14001c887:	add    BYTE PTR [rax],dh
   14001c889:	add    bh,bh
   14001c88b:	inc    DWORD PTR [rdi+0x0]
   14001c88e:	(bad)  
   14001c88f:	push   QWORD PTR [rsi]
   14001c891:	add    BYTE PTR [rsi],cl
   14001c893:	add    BYTE PTR [rdi],dl
   14001c895:	add    BYTE PTR [rip+0x3b004c00],al        # 0x17b02149b
   14001c89b:	add    BYTE PTR [rbx],dl
   14001c89d:	add    BYTE PTR [rip+0x5001500],bh        # 0x14501dda3
   14001c8a3:	add    bh,bh
   14001c8a5:	(bad)  
   14001c8a6:	(bad)  
   14001c8a7:	dec    DWORD PTR [rsi]
   14001c8a9:	add    bh,bh
   14001c8ab:	jmp    QWORD PTR [rbx]
   14001c8ad:	add    BYTE PTR [rax+rax*1],ah
   14001c8b0:	(bad)  
   14001c8b1:	(bad)  
   14001c8b2:	(bad)  
   14001c8b3:	dec    DWORD PTR [rsi]
   14001c8b5:	add    bh,bh
   14001c8b7:	(bad)  
   14001c8b8:	(bad)  
   14001c8b9:	call   QWORD PTR [rdi]
   14001c8bb:	add    bh,bh
   14001c8bd:	(bad)  
   14001c8be:	(bad)  
   14001c8bf:	(bad)  
   14001c8c0:	(bad)  
   14001c8c1:	(bad)  
   14001c8c2:	(bad)  
   14001c8c3:	call   FWORD PTR [rax+0x0]
   14001c8c6:	(bad)  
   14001c8c7:	add    bh,bh
   14001c8c9:	jmp    FWORD PTR [rdx]
   14001c8cb:	add    bh,bh
   14001c8cd:	(bad)  
   14001c8ce:	(bad)  
   14001c8cf:	(bad)  
   14001c8d0:	(bad)  
   14001c8d1:	jmp    QWORD PTR [rbx]
   14001c8d3:	add    BYTE PTR [rax+rax*1],ah
   14001c8d6:	(bad)  
   14001c8d7:	(bad)  
   14001c8d8:	(bad)  
   14001c8d9:	(bad)  
   14001c8da:	(bad)  
   14001c8db:	(bad)  
   14001c8dc:	(bad)  
   14001c8dd:	jmp    QWORD PTR [rbx]
   14001c8df:	add    BYTE PTR [rax+rax*1],ah
   14001c8e2:	sbb    DWORD PTR [rax],eax
   14001c8e4:	sbb    al,BYTE PTR [rax]
   14001c8e6:	sbb    eax,DWORD PTR [rax]
   14001c8e8:	sbb    al,0x0
   14001c8ea:	sbb    eax,0x1f001e00
   14001c8ef:	add    bh,bh
   14001c8f1:	(bad)  
   14001c8f2:	(bad)  
   14001c8f3:	(bad)  
   14001c8f4:	(bad)  
   14001c8f5:	(bad)  
   14001c8f6:	(bad)  
   14001c8f7:	(bad)  
   14001c8f8:	(bad)  
   14001c8f9:	(bad)  
   14001c8fa:	(bad)  
   14001c8fb:	(bad)  
   14001c8fc:	(bad)  
   14001c8fd:	dec    DWORD PTR [rsi]
   14001c8ff:	add    bh,bh
   14001c901:	(bad)  
   14001c902:	(bad)  
   14001c903:	(bad)  
   14001c904:	(bad)  
   14001c905:	(bad)  
   14001c906:	(bad)  
   14001c907:	(bad)  
   14001c908:	(bad)  
   14001c909:	(bad)  
   14001c90a:	(bad)  
   14001c90b:	(bad)  
   14001c90c:	(bad)  
   14001c90d:	inc    DWORD PTR [rdx]
   14001c90f:	add    BYTE PTR [rdi],dl
   14001c911:	add    BYTE PTR [rax],bl
   14001c913:	add    BYTE PTR [rcx],bl
   14001c915:	add    BYTE PTR [rdx],bl
   14001c917:	add    BYTE PTR [rbx],bl
   14001c919:	add    BYTE PTR [rax+rax*1],bl
   14001c91c:	sbb    eax,0x1f001e00
   14001c921:	add    BYTE PTR [rsi],cl
   14001c923:	add    bh,bh
   14001c925:	(bad)  
   14001c926:	(bad)  
   14001c927:	(bad)  
   14001c928:	(bad)  
   14001c929:	(bad)  
   14001c92a:	(bad)  
   14001c92b:	(bad)  
   14001c92c:	(bad)  
   14001c92d:	call   QWORD PTR [rdx]
   14001c92f:	add    bh,bh
   14001c931:	(bad)  
   14001c932:	(bad)  
   14001c933:	call   QWORD PTR [rdi]
   14001c935:	add    BYTE PTR [rax],bl
   14001c937:	add    BYTE PTR [rcx],bl
   14001c939:	add    BYTE PTR [rdx],bl
   14001c93b:	add    BYTE PTR [rbx],bl
   14001c93d:	add    BYTE PTR [rax+rax*1],bl
   14001c940:	sbb    eax,0x1f001e00
   14001c945:	add    bh,bh
   14001c947:	(bad)  
   14001c948:	(bad)  
   14001c949:	(bad)  
   14001c94a:	(bad)  
   14001c94b:	(bad)  
   14001c94c:	(bad)  
   14001c94d:	(bad)  
   14001c94e:	(bad)  
   14001c94f:	(bad)  
   14001c950:	(bad)  
   14001c951:	(bad)  
   14001c952:	(bad)  
   14001c953:	(bad)  
   14001c954:	(bad)  
   14001c955:	(bad)  
   14001c956:	(bad)  
   14001c957:	(bad)  
   14001c958:	(bad)  
   14001c959:	(bad)  
   14001c95a:	(bad)  
   14001c95b:	(bad)  
   14001c95c:	(bad)  
   14001c95d:	(bad)  
   14001c95e:	(bad)  
   14001c95f:	(bad)  
   14001c960:	(bad)  
   14001c961:	(bad)  
   14001c962:	(bad)  
   14001c963:	(bad)  
   14001c964:	(bad)  
   14001c965:	(bad)  
   14001c966:	(bad)  
   14001c967:	(bad)  
   14001c968:	(bad)  
   14001c969:	(bad)  
   14001c96a:	(bad)  
   14001c96b:	(bad)  
   14001c96c:	(bad)  
   14001c96d:	(bad)  
   14001c96e:	(bad)  
   14001c96f:	(bad)  
   14001c970:	(bad)  
   14001c971:	(bad)  
   14001c972:	(bad)  
   14001c973:	(bad)  
   14001c974:	(bad)  
   14001c975:	(bad)  
   14001c976:	(bad)  
   14001c977:	(bad)  
   14001c978:	(bad)  
   14001c979:	(bad)  
   14001c97a:	(bad)  
   14001c97b:	(bad)  
   14001c97c:	(bad)  
   14001c97d:	(bad)  
   14001c97e:	(bad)  
   14001c97f:	(bad)  
   14001c980:	(bad)  
   14001c981:	(bad)  
   14001c982:	(bad)  
   14001c983:	(bad)  
   14001c984:	(bad)  
   14001c985:	(bad)  
   14001c986:	(bad)  
   14001c987:	(bad)  
   14001c988:	(bad)  
   14001c989:	(bad)  
   14001c98a:	(bad)  
   14001c98b:	(bad)  
   14001c98c:	(bad)  
   14001c98d:	(bad)  
   14001c98e:	(bad)  
   14001c98f:	(bad)  
   14001c990:	(bad)  
   14001c991:	(bad)  
   14001c992:	(bad)  
   14001c993:	(bad)  
   14001c994:	(bad)  
   14001c995:	(bad)  
   14001c996:	(bad)  
   14001c997:	(bad)  
   14001c998:	(bad)  
   14001c999:	(bad)  
   14001c99a:	(bad)  
   14001c99b:	(bad)  
   14001c99c:	(bad)  
   14001c99d:	(bad)  
   14001c99e:	(bad)  
   14001c99f:	(bad)  
   14001c9a0:	(bad)  
   14001c9a1:	(bad)  
   14001c9a2:	(bad)  
   14001c9a3:	(bad)  
   14001c9a4:	(bad)  
   14001c9a5:	(bad)  
   14001c9a6:	(bad)  
   14001c9a7:	(bad)  
   14001c9a8:	(bad)  
   14001c9a9:	(bad)  
   14001c9aa:	(bad)  
   14001c9ab:	(bad)  
   14001c9ac:	(bad)  
   14001c9ad:	(bad)  
   14001c9ae:	(bad)  
   14001c9af:	(bad)  
   14001c9b0:	(bad)  
   14001c9b1:	(bad)  
   14001c9b2:	(bad)  
   14001c9b3:	(bad)  
   14001c9b4:	(bad)  
   14001c9b5:	(bad)  
   14001c9b6:	(bad)  
   14001c9b7:	(bad)  
   14001c9b8:	(bad)  
   14001c9b9:	call   FWORD PTR [rax+0x0]
   14001c9bc:	(bad)  
   14001c9bd:	(bad)  
   14001c9be:	(bad)  
   14001c9bf:	(bad)  
   14001c9c0:	(bad)  
   14001c9c1:	(bad)  
   14001c9c2:	(bad)  
   14001c9c3:	(bad)  
   14001c9c4:	(bad)  
   14001c9c5:	(bad)  
   14001c9c6:	(bad)  
   14001c9c7:	(bad)  
   14001c9c8:	(bad)  
   14001c9c9:	(bad)  
   14001c9ca:	(bad)  
   14001c9cb:	(bad)  
   14001c9cc:	(bad)  
   14001c9cd:	(bad)  
   14001c9ce:	(bad)  
   14001c9cf:	(bad)  
   14001c9d0:	(bad)  
   14001c9d1:	(bad)  
   14001c9d2:	(bad)  
   14001c9d3:	(bad)  
   14001c9d4:	(bad)  
   14001c9d5:	(bad)  
   14001c9d6:	(bad)  
   14001c9d7:	(bad)  
   14001c9d8:	(bad)  
   14001c9d9:	(bad)  
   14001c9da:	(bad)  
   14001c9db:	(bad)  
   14001c9dc:	(bad)  
   14001c9dd:	(bad)  
   14001c9de:	(bad)  
   14001c9df:	(bad)  
   14001c9e0:	(bad)  
   14001c9e1:	(bad)  
   14001c9e2:	(bad)  
   14001c9e3:	(bad)  
   14001c9e4:	(bad)  
   14001c9e5:	(bad)  
   14001c9e6:	(bad)  
   14001c9e7:	dec    DWORD PTR [rsi]
   14001c9e9:	add    bh,bh
   14001c9eb:	(bad)  
   14001c9ec:	(bad)  
   14001c9ed:	(bad)  
   14001c9ee:	(bad)  
   14001c9ef:	(bad)  
   14001c9f0:	(bad)  
   14001c9f1:	(bad)  
   14001c9f2:	(bad)  
   14001c9f3:	(bad)  
   14001c9f4:	(bad)  
   14001c9f5:	(bad)  
   14001c9f6:	(bad)  
   14001c9f7:	(bad)  
   14001c9f8:	(bad)  
   14001c9f9:	call   QWORD PTR [rdi]
   14001c9fb:	add    BYTE PTR [rax],bl
   14001c9fd:	add    BYTE PTR [rcx],bl
   14001c9ff:	add    BYTE PTR [rdx],bl
   14001ca01:	add    BYTE PTR [rbx],bl
   14001ca03:	add    BYTE PTR [rax+rax*1],bl
   14001ca06:	sbb    eax,0x1f001e00
   14001ca0b:	add    bh,bh
   14001ca0d:	(bad)  
   14001ca0e:	(bad)  
   14001ca0f:	(bad)  
   14001ca10:	(bad)  
   14001ca11:	(bad)  
   14001ca12:	(bad)  
   14001ca13:	(bad)  
   14001ca14:	(bad)  
   14001ca15:	(bad)  
   14001ca16:	(bad)  
   14001ca17:	(bad)  
   14001ca18:	(bad)  
   14001ca19:	(bad)  
   14001ca1a:	(bad)  
   14001ca1b:	(bad)  
   14001ca1c:	(bad)  
   14001ca1d:	(bad)  
   14001ca1e:	(bad)  
   14001ca1f:	(bad)  
   14001ca20:	(bad)  
   14001ca21:	(bad)  
   14001ca22:	(bad)  
   14001ca23:	(bad)  
   14001ca24:	(bad)  
   14001ca25:	(bad)  
   14001ca26:	(bad)  
   14001ca27:	(bad)  
   14001ca28:	(bad)  
   14001ca29:	(bad)  
   14001ca2a:	(bad)  
   14001ca2b:	(bad)  
   14001ca2c:	(bad)  
   14001ca2d:	(bad)  
   14001ca2e:	(bad)  
   14001ca2f:	(bad)  
   14001ca30:	(bad)  
   14001ca31:	(bad)  
   14001ca32:	(bad)  
   14001ca33:	(bad)  
   14001ca34:	(bad)  
   14001ca35:	(bad)  
   14001ca36:	(bad)  
   14001ca37:	(bad)  
   14001ca38:	(bad)  
   14001ca39:	(bad)  
   14001ca3a:	(bad)  
   14001ca3b:	(bad)  
   14001ca3c:	(bad)  
   14001ca3d:	(bad)  
   14001ca3e:	(bad)  
   14001ca3f:	(bad)  
   14001ca40:	(bad)  
   14001ca41:	(bad)  
   14001ca42:	(bad)  
   14001ca43:	(bad)  
   14001ca44:	(bad)  
   14001ca45:	(bad)  
   14001ca46:	(bad)  
   14001ca47:	(bad)  
   14001ca48:	(bad)  
   14001ca49:	(bad)  
   14001ca4a:	(bad)  
   14001ca4b:	(bad)  
   14001ca4c:	(bad)  
   14001ca4d:	(bad)  
   14001ca4e:	(bad)  
   14001ca4f:	(bad)  
   14001ca50:	(bad)  
   14001ca51:	(bad)  
   14001ca52:	(bad)  
   14001ca53:	(bad)  
   14001ca54:	(bad)  
   14001ca55:	(bad)  
   14001ca56:	(bad)  
   14001ca57:	(bad)  
   14001ca58:	(bad)  
   14001ca59:	(bad)  
   14001ca5a:	(bad)  
   14001ca5b:	(bad)  
   14001ca5c:	(bad)  
   14001ca5d:	(bad)  
   14001ca5e:	(bad)  
   14001ca5f:	(bad)  
   14001ca60:	(bad)  
   14001ca61:	(bad)  
   14001ca62:	(bad)  
   14001ca63:	(bad)  
   14001ca64:	(bad)  
   14001ca65:	(bad)  
   14001ca66:	(bad)  
   14001ca67:	(bad)  
   14001ca68:	(bad)  
   14001ca69:	(bad)  
   14001ca6a:	(bad)  
   14001ca6b:	(bad)  
   14001ca6c:	(bad)  
   14001ca6d:	(bad)  
   14001ca6e:	(bad)  
   14001ca6f:	(bad)  
   14001ca70:	(bad)  
   14001ca71:	(bad)  
   14001ca72:	(bad)  
   14001ca73:	(bad)  
   14001ca74:	(bad)  
   14001ca75:	(bad)  
   14001ca76:	(bad)  
   14001ca77:	(bad)  
   14001ca78:	(bad)  
   14001ca79:	(bad)  
   14001ca7a:	(bad)  
   14001ca7b:	(bad)  
   14001ca7c:	(bad)  
   14001ca7d:	(bad)  
   14001ca7e:	(bad)  
   14001ca7f:	(bad)  
   14001ca80:	(bad)  
   14001ca81:	(bad)  
   14001ca82:	(bad)  
   14001ca83:	(bad)  
   14001ca84:	(bad)  
   14001ca85:	(bad)  
   14001ca86:	(bad)  
   14001ca87:	(bad)  
   14001ca88:	(bad)  
   14001ca89:	(bad)  
   14001ca8a:	(bad)  
   14001ca8b:	(bad)  
   14001ca8c:	(bad)  
   14001ca8d:	(bad)  
   14001ca8e:	(bad)  
   14001ca8f:	(bad)  
   14001ca90:	(bad)  
   14001ca91:	(bad)  
   14001ca92:	(bad)  
   14001ca93:	(bad)  
   14001ca94:	(bad)  
   14001ca95:	(bad)  
   14001ca96:	(bad)  
   14001ca97:	(bad)  
   14001ca98:	(bad)  
   14001ca99:	(bad)  
   14001ca9a:	(bad)  
   14001ca9b:	(bad)  
   14001ca9c:	(bad)  
   14001ca9d:	(bad)  
   14001ca9e:	(bad)  
   14001ca9f:	(bad)  
   14001caa0:	(bad)  
   14001caa1:	(bad)  
   14001caa2:	(bad)  
   14001caa3:	(bad)  
   14001caa4:	(bad)  
   14001caa5:	(bad)  
   14001caa6:	(bad)  
   14001caa7:	(bad)  
   14001caa8:	(bad)  
   14001caa9:	inc    DWORD PTR [rax]
   14001caab:	add    BYTE PTR [rax],al
   14001caad:	add    BYTE PTR [rax],al
   14001caaf:	add    BYTE PTR [rax+0x1],ah
   14001cab2:	add    al,BYTE PTR [rax+0x1]
   14001cab5:	add    BYTE PTR [rax],al
   14001cab7:	add    BYTE PTR [rax],ch
   14001cab9:	add    QWORD PTR [r8+0x1],rax
   14001cabd:	add    BYTE PTR [rax],al
   14001cabf:	add    BYTE PTR [rcx],al
	...
   14001cac9:	add    BYTE PTR [rax],al
   14001cacb:	add    BYTE PTR [rax],dl
   14001cacd:	xor    BYTE PTR [rdx],al
   14001cacf:	add    al,ch
   14001cad1:	retf   0x1
   14001cad4:	ror    dl,0x1
	...
   14001caef:	add    BYTE PTR [rcx],al
   14001caf1:	add    BYTE PTR [rax],al
   14001caf3:	add    BYTE PTR [rax],al
   14001caf5:	retf   
   14001caf6:	add    DWORD PTR [rax],eax
	...
   14001cb00:	adc    bl,cl
   14001cb02:	add    DWORD PTR [rax],eax
	...
   14001cb10:	adc    BYTE PTR [rax],dh
   14001cb12:	add    al,BYTE PTR [rax]
	...
   14001cb1c:	(bad)  
   14001cb1d:	(bad)  
   14001cb1e:	(bad)  
   14001cb1f:	inc    DWORD PTR [rax]
   14001cb21:	add    BYTE PTR [rax],al
   14001cb23:	add    BYTE PTR [rax+0x0],al
   14001cb26:	add    BYTE PTR [rax],al
   14001cb28:	call   0x14001ccf7
	...
   14001cb35:	add    BYTE PTR [rax],al
   14001cb37:	add    BYTE PTR [rcx],al
	...
   14001cb41:	add    BYTE PTR [rax],al
   14001cb43:	add    BYTE PTR [rax],bh
   14001cb45:	xor    BYTE PTR [rdx],al
   14001cb47:	add    BYTE PTR [rax-0x35],ah
   14001cb4a:	add    DWORD PTR [rax],eax
   14001cb4c:	cmp    bl,cl
   14001cb4e:	add    DWORD PTR [rax],eax
	...
   14001cb68:	add    al,BYTE PTR [rax]
   14001cb6a:	add    BYTE PTR [rax],al
   14001cb6c:	js     0x14001cb39
   14001cb6e:	add    DWORD PTR [rax],eax
	...
   14001cb78:	nop
   14001cb79:	retf   
   14001cb7a:	add    DWORD PTR [rax],eax
   14001cb7c:	mov    eax,0x1cb
	...
   14001cb8d:	add    BYTE PTR [rax],al
   14001cb8f:	add    BYTE PTR [rax],bh
   14001cb91:	xor    BYTE PTR [rdx],al
   14001cb93:	add    BYTE PTR [rcx],al
   14001cb95:	add    BYTE PTR [rax],al
   14001cb97:	add    BYTE PTR [rax],al
   14001cb99:	add    BYTE PTR [rax],al
   14001cb9b:	add    bh,bh
   14001cb9d:	(bad)  
   14001cb9e:	(bad)  
   14001cb9f:	inc    DWORD PTR [rax]
   14001cba1:	add    BYTE PTR [rax],al
   14001cba3:	add    BYTE PTR [rax+0x0],al
   14001cba6:	add    BYTE PTR [rax],al
   14001cba8:	(bad)  
   14001cba9:	retf   
   14001cbaa:	add    DWORD PTR [rax],eax
	...
   14001cbb8:	(bad)  
   14001cbb9:	xor    BYTE PTR [rdx],al
   14001cbbb:	add    BYTE PTR [rax],al
   14001cbbd:	add    BYTE PTR [rax],al
   14001cbbf:	add    BYTE PTR [rax],cl
   14001cbc1:	add    BYTE PTR [rax],al
   14001cbc3:	add    bh,bh
   14001cbc5:	(bad)  
   14001cbc6:	(bad)  
   14001cbc7:	inc    DWORD PTR [rax]
   14001cbc9:	add    BYTE PTR [rax],al
   14001cbcb:	add    BYTE PTR [rax+0x0],al
   14001cbce:	add    BYTE PTR [rax],al
   14001cbd0:	loopne 0x14001cb9d
   14001cbd2:	add    DWORD PTR [rax],eax
	...
   14001cbe8:	add    DWORD PTR [rax],eax
   14001cbea:	add    BYTE PTR [rax],al
   14001cbec:	clc    
   14001cbed:	retf   
   14001cbee:	add    DWORD PTR [rax],eax
	...
   14001cbf8:	or     ah,cl
   14001cbfa:	add    DWORD PTR [rax],eax
	...
   14001cc08:	(bad)  
   14001cc09:	xor    BYTE PTR [rdx],al
	...
   14001cc13:	add    bh,bh
   14001cc15:	(bad)  
   14001cc16:	(bad)  
   14001cc17:	inc    DWORD PTR [rax]
   14001cc19:	add    BYTE PTR [rax],al
   14001cc1b:	add    BYTE PTR [rax+0x0],al
   14001cc1e:	add    BYTE PTR [rax],al
   14001cc20:	loopne 0x14001cbed
   14001cc22:	add    DWORD PTR [rax],eax
	...
   14001cc38:	add    eax,DWORD PTR [rax]
   14001cc3a:	add    BYTE PTR [rax],al
   14001cc3c:	rex.W int3 
   14001cc3e:	add    DWORD PTR [rax],eax
	...
   14001cc48:	push   0xffffffff900001cc
   14001cc4d:	retf   
   14001cc4e:	add    DWORD PTR [rax],eax
   14001cc50:	mov    eax,0x1cb
	...
   14001cc65:	add    BYTE PTR [rax],al
   14001cc67:	add    BYTE PTR [rax+0x2000230],cl
   14001cc6d:	add    BYTE PTR [rax],al
   14001cc6f:	add    BYTE PTR [rax],al
   14001cc71:	add    BYTE PTR [rax],al
   14001cc73:	add    bh,bh
   14001cc75:	(bad)  
   14001cc76:	(bad)  
   14001cc77:	inc    DWORD PTR [rax]
   14001cc79:	add    BYTE PTR [rax],al
   14001cc7b:	add    BYTE PTR [rax+0x0],al
   14001cc7e:	add    BYTE PTR [rax],al
   14001cc80:	xor    ah,cl
   14001cc82:	add    DWORD PTR [rax],eax
	...
   14001cc98:	add    eax,DWORD PTR [rax]
   14001cc9a:	add    BYTE PTR [rax],al
   14001cc9c:	test   al,0xcc
   14001cc9e:	add    DWORD PTR [rax],eax
	...
   14001cca8:	enter  0x1cc,0x0
   14001ccac:	nop
   14001ccad:	retf   
   14001ccae:	add    DWORD PTR [rax],eax
   14001ccb0:	mov    eax,0x1cb
	...
   14001ccc5:	add    BYTE PTR [rax],al
   14001ccc7:	add    BYTE PTR [rax+0x2000230],bh
   14001cccd:	add    BYTE PTR [rax],al
   14001cccf:	add    BYTE PTR [rax],al
   14001ccd1:	add    BYTE PTR [rax],al
   14001ccd3:	add    bh,bh
   14001ccd5:	(bad)  
   14001ccd6:	(bad)  
   14001ccd7:	inc    DWORD PTR [rax]
   14001ccd9:	add    BYTE PTR [rax],al
   14001ccdb:	add    BYTE PTR [rax+0x0],al
   14001ccde:	add    BYTE PTR [rax],al
   14001cce0:	nop
   14001cce1:	int3   
   14001cce2:	add    DWORD PTR [rax],eax
	...
   14001ccf0:	add    DWORD PTR [rax],eax
	...
   14001ccfa:	add    BYTE PTR [rax],al
   14001ccfc:	call   0x15801cf31
   14001cd01:	int    0x1
   14001cd03:	add    al,dh
   14001cd05:	int3   
   14001cd06:	add    DWORD PTR [rax],eax
	...
   14001cd20:	add    al,0x0
   14001cd22:	add    BYTE PTR [rax],al
   14001cd24:	xor    ch,cl
   14001cd26:	add    DWORD PTR [rax],eax
	...
   14001cd30:	pop    rax
   14001cd31:	int    0x1
   14001cd33:	add    BYTE PTR [rax-0x34],ch
   14001cd36:	add    DWORD PTR [rax],eax
   14001cd38:	nop
   14001cd39:	retf   
   14001cd3a:	add    DWORD PTR [rax],eax
   14001cd3c:	mov    eax,0x1cb
	...
   14001cd55:	add    BYTE PTR [rax],al
   14001cd57:	add    al,ch
   14001cd59:	xor    BYTE PTR [rdx],al
   14001cd5b:	add    BYTE PTR [rbx],al
   14001cd5d:	add    BYTE PTR [rax],al
   14001cd5f:	add    BYTE PTR [rax],al
   14001cd61:	add    BYTE PTR [rax],al
   14001cd63:	add    bh,bh
   14001cd65:	(bad)  
   14001cd66:	(bad)  
   14001cd67:	inc    DWORD PTR [rax]
   14001cd69:	add    BYTE PTR [rax],al
   14001cd6b:	add    BYTE PTR [rax+0x0],al
   14001cd6e:	add    BYTE PTR [rax],al
   14001cd70:	sbb    ch,cl
   14001cd72:	add    DWORD PTR [rax],eax
	...
   14001cd80:	add    DWORD PTR [rax],eax
	...
   14001cd8a:	add    BYTE PTR [rax],al
   14001cd8c:	and    BYTE PTR [rcx],dh
   14001cd8e:	add    al,BYTE PTR [rax]
   14001cd90:	test   al,0xcd
   14001cd92:	add    DWORD PTR [rax],eax
   14001cd94:	or     ch,0x1
	...
   14001cdaf:	add    BYTE PTR [rax+rax*1],al
   14001cdb2:	add    BYTE PTR [rax],al
   14001cdb4:	ror    ch,0x1
	...
   14001cdbf:	add    al,ch
   14001cdc1:	int    0x1
   14001cdc3:	add    BYTE PTR [rax-0x34],ch
   14001cdc6:	add    DWORD PTR [rax],eax
   14001cdc8:	nop
   14001cdc9:	retf   
   14001cdca:	add    DWORD PTR [rax],eax
   14001cdcc:	mov    eax,0x1cb
	...
   14001cde5:	add    BYTE PTR [rax],al
   14001cde7:	add    BYTE PTR [rax],ah
   14001cde9:	xor    DWORD PTR [rdx],eax
   14001cdeb:	add    BYTE PTR [rbx],al
   14001cded:	add    BYTE PTR [rax],al
   14001cdef:	add    BYTE PTR [rax],al
   14001cdf1:	add    BYTE PTR [rax],al
   14001cdf3:	add    bh,bh
   14001cdf5:	(bad)  
   14001cdf6:	(bad)  
   14001cdf7:	inc    DWORD PTR [rax]
   14001cdf9:	add    BYTE PTR [rax],al
   14001cdfb:	add    BYTE PTR [rax+0x0],al
   14001cdfe:	add    BYTE PTR [rax],al
   14001ce00:	test   al,0xcd
   14001ce02:	add    DWORD PTR [rax],eax
	...
   14001ce10:	add    DWORD PTR [rax],eax
	...
   14001ce1a:	add    BYTE PTR [rax],al
   14001ce1c:	push   rax
   14001ce1d:	xor    DWORD PTR [rdx],eax
   14001ce1f:	add    BYTE PTR [rax],bh
   14001ce21:	(bad)  
   14001ce22:	add    DWORD PTR [rax],eax
   14001ce24:	adc    dh,cl
   14001ce26:	add    DWORD PTR [rax],eax
	...
   14001ce40:	add    al,0x0
   14001ce42:	add    BYTE PTR [rax],al
   14001ce44:	push   rax
   14001ce45:	(bad)  
   14001ce46:	add    DWORD PTR [rax],eax
	...
   14001ce50:	js     0x14001ce20
   14001ce52:	add    DWORD PTR [rax],eax
   14001ce54:	push   0xffffffff900001cc
   14001ce59:	retf   
   14001ce5a:	add    DWORD PTR [rax],eax
   14001ce5c:	mov    eax,0x1cb
	...
   14001ce75:	add    BYTE PTR [rax],al
   14001ce77:	add    BYTE PTR [rax+0x31],dl
   14001ce7a:	add    al,BYTE PTR [rax]
   14001ce7c:	add    eax,DWORD PTR [rax]
   14001ce7e:	add    BYTE PTR [rax],al
   14001ce80:	add    BYTE PTR [rax],al
   14001ce82:	add    BYTE PTR [rax],al
   14001ce84:	(bad)  
   14001ce85:	(bad)  
   14001ce86:	(bad)  
   14001ce87:	inc    DWORD PTR [rax]
   14001ce89:	add    BYTE PTR [rax],al
   14001ce8b:	add    BYTE PTR [rax+0x0],al
   14001ce8e:	add    BYTE PTR [rax],al
   14001ce90:	cmp    dh,cl
   14001ce92:	add    DWORD PTR [rax],eax
	...
   14001cea0:	add    DWORD PTR [rax],eax
	...
   14001ceaa:	add    BYTE PTR [rax],al
   14001ceac:	mov    BYTE PTR [rcx],dh
   14001ceae:	add    al,BYTE PTR [rax]
   14001ceb0:	enter  0x1ce,0x0
   14001ceb4:	movabs al,ds:0x1ce
	...
   14001cecd:	add    BYTE PTR [rax],al
   14001cecf:	add    BYTE PTR [rax+rax*1],al
   14001ced2:	add    BYTE PTR [rax],al
   14001ced4:	loopne 0x14001cea4
   14001ced6:	add    DWORD PTR [rax],eax
	...
   14001cee0:	or     bh,cl
   14001cee2:	add    DWORD PTR [rax],eax
   14001cee4:	push   0xffffffff900001cc
   14001cee9:	retf   
   14001ceea:	add    DWORD PTR [rax],eax
   14001ceec:	mov    eax,0x1cb
	...
   14001cf05:	add    BYTE PTR [rax],al
   14001cf07:	add    BYTE PTR [rax+0x3000231],cl
   14001cf0d:	add    BYTE PTR [rax],al
   14001cf0f:	add    BYTE PTR [rax],al
   14001cf11:	add    BYTE PTR [rax],al
   14001cf13:	add    bh,bh
   14001cf15:	(bad)  
   14001cf16:	(bad)  
   14001cf17:	inc    DWORD PTR [rax]
   14001cf19:	add    BYTE PTR [rax],al
   14001cf1b:	add    BYTE PTR [rax+0x0],al
   14001cf1e:	add    BYTE PTR [rax],al
   14001cf20:	enter  0x1ce,0x0
	...
   14001cf30:	add    DWORD PTR [rax],eax
	...
   14001cf3a:	add    BYTE PTR [rax],al
   14001cf3c:	mov    eax,0x58000231
   14001cf41:	iret   
   14001cf42:	add    DWORD PTR [rax],eax
   14001cf44:	xor    bh,cl
   14001cf46:	add    DWORD PTR [rax],eax
	...
   14001cf60:	add    al,0x0
   14001cf62:	add    BYTE PTR [rax],al
   14001cf64:	jo     0x14001cf35
   14001cf66:	add    DWORD PTR [rax],eax
	...
   14001cf70:	cwde   
   14001cf71:	iret   
   14001cf72:	add    DWORD PTR [rax],eax
   14001cf74:	push   0xffffffff900001cc
   14001cf79:	retf   
   14001cf7a:	add    DWORD PTR [rax],eax
   14001cf7c:	mov    eax,0x1cb
	...
   14001cf95:	add    BYTE PTR [rax],al
   14001cf97:	add    BYTE PTR [rax+0x3000231],bh
   14001cf9d:	add    BYTE PTR [rax],al
   14001cf9f:	add    BYTE PTR [rax],al
   14001cfa1:	add    BYTE PTR [rax],al
   14001cfa3:	add    bh,bh
   14001cfa5:	(bad)  
   14001cfa6:	(bad)  
   14001cfa7:	inc    DWORD PTR [rax]
   14001cfa9:	add    BYTE PTR [rax],al
   14001cfab:	add    BYTE PTR [rax+0x0],al
   14001cfae:	add    BYTE PTR [rax],al
   14001cfb0:	pop    rax
   14001cfb1:	iret   
   14001cfb2:	add    DWORD PTR [rax],eax
	...
   14001cfc0:	add    DWORD PTR [rax],eax
	...
   14001cfca:	add    BYTE PTR [rax],al
   14001cfcc:	call   0x12801d202
   14001cfd1:	iret   
   14001cfd2:	add    DWORD PTR [rax],eax
   14001cfd4:	ror    bh,0x1
	...
   14001cfef:	add    BYTE PTR [rax+rax*1],al
   14001cff2:	add    BYTE PTR [rax],al
   14001cff4:	add    al,dl
   14001cff6:	add    DWORD PTR [rax],eax
	...
   14001d000:	sub    al,dl
   14001d002:	add    DWORD PTR [rax],eax
   14001d004:	push   0xffffffff900001cc
   14001d009:	retf   
   14001d00a:	add    DWORD PTR [rax],eax
   14001d00c:	mov    eax,0x1cb
	...
   14001d025:	add    BYTE PTR [rax],al
   14001d027:	add    al,ch
   14001d029:	xor    DWORD PTR [rdx],eax
   14001d02b:	add    BYTE PTR [rbx],al
   14001d02d:	add    BYTE PTR [rax],al
   14001d02f:	add    BYTE PTR [rax],al
   14001d031:	add    BYTE PTR [rax],al
   14001d033:	add    bh,bh
   14001d035:	(bad)  
   14001d036:	(bad)  
   14001d037:	inc    DWORD PTR [rax]
   14001d039:	add    BYTE PTR [rax],al
   14001d03b:	add    BYTE PTR [rax+0x0],al
   14001d03e:	add    BYTE PTR [rax],al
   14001d040:	call   0x14001d214
	...
   14001d04d:	add    BYTE PTR [rax],al
   14001d04f:	add    BYTE PTR [rcx],al
	...
   14001d059:	add    BYTE PTR [rax],al
   14001d05b:	add    BYTE PTR [rax],bl
   14001d05d:	xor    al,BYTE PTR [rdx]
   14001d05f:	add    BYTE PTR [rax-0x30],bh
   14001d062:	add    DWORD PTR [rax],eax
   14001d064:	push   rax
   14001d065:	rol    BYTE PTR [rcx],1
	...
   14001d07f:	add    BYTE PTR [rax+rax*1],al
   14001d082:	add    BYTE PTR [rax],al
   14001d084:	nop
   14001d085:	rol    BYTE PTR [rcx],1
	...
   14001d08f:	add    BYTE PTR [rax+0x680001d0],bh
   14001d095:	int3   
   14001d096:	add    DWORD PTR [rax],eax
   14001d098:	nop
   14001d099:	retf   
   14001d09a:	add    DWORD PTR [rax],eax
   14001d09c:	mov    eax,0x1cb
	...
   14001d0b5:	add    BYTE PTR [rax],al
   14001d0b7:	add    BYTE PTR [rax],bl
   14001d0b9:	xor    al,BYTE PTR [rdx]
   14001d0bb:	add    BYTE PTR [rbx],al
   14001d0bd:	add    BYTE PTR [rax],al
   14001d0bf:	add    BYTE PTR [rax],al
   14001d0c1:	add    BYTE PTR [rax],al
   14001d0c3:	add    bh,bh
   14001d0c5:	(bad)  
   14001d0c6:	(bad)  
   14001d0c7:	inc    DWORD PTR [rax]
   14001d0c9:	add    BYTE PTR [rax],al
   14001d0cb:	add    BYTE PTR [rax+0x0],al
   14001d0ce:	add    BYTE PTR [rax],al
   14001d0d0:	js     0x14001d0a2
   14001d0d2:	add    DWORD PTR [rax],eax
	...
   14001d0e0:	add    DWORD PTR [rax],eax
	...
   14001d0ea:	add    BYTE PTR [rax],al
   14001d0ec:	rex.W xor al,BYTE PTR [rdx]
   14001d0ef:	add    BYTE PTR [rax],cl
   14001d0f1:	rol    DWORD PTR [rcx],1
   14001d0f3:	add    al,ah
   14001d0f5:	rol    BYTE PTR [rcx],1
	...
   14001d10f:	add    BYTE PTR [rax+rax*1],al
   14001d112:	add    BYTE PTR [rax],al
   14001d114:	and    cl,dl
   14001d116:	add    DWORD PTR [rax],eax
	...
   14001d120:	rol    QWORD PTR [rcx],1
   14001d123:	add    BYTE PTR [rax-0x34],ch
   14001d126:	add    DWORD PTR [rax],eax
   14001d128:	nop
   14001d129:	retf   
   14001d12a:	add    DWORD PTR [rax],eax
   14001d12c:	mov    eax,0x1cb
	...
   14001d145:	add    BYTE PTR [rax],al
   14001d147:	add    BYTE PTR [rax+0x32],cl
   14001d14a:	add    al,BYTE PTR [rax]
   14001d14c:	add    eax,DWORD PTR [rax]
   14001d14e:	add    BYTE PTR [rax],al
   14001d150:	add    BYTE PTR [rax],al
   14001d152:	add    BYTE PTR [rax],al
   14001d154:	(bad)  
   14001d155:	(bad)  
   14001d156:	(bad)  
   14001d157:	inc    DWORD PTR [rax]
   14001d159:	add    BYTE PTR [rax],al
   14001d15b:	add    BYTE PTR [rax+0x0],al
   14001d15e:	add    BYTE PTR [rax],al
   14001d160:	or     cl,dl
   14001d162:	add    DWORD PTR [rax],eax
	...
   14001d170:	add    DWORD PTR [rax],eax
	...
   14001d17a:	add    BYTE PTR [rax],al
   14001d17c:	js     0x14001d1b0
   14001d17e:	add    al,BYTE PTR [rax]
   14001d180:	cwde   
   14001d181:	rol    DWORD PTR [rcx],1
   14001d183:	add    BYTE PTR [rax-0x2f],dh
   14001d186:	add    DWORD PTR [rax],eax
	...
   14001d1a0:	add    al,0x0
   14001d1a2:	add    BYTE PTR [rax],al
   14001d1a4:	mov    al,0xd1
   14001d1a6:	add    DWORD PTR [rax],eax
	...
   14001d1b0:	fcom   st(1)
   14001d1b2:	add    DWORD PTR [rax],eax
   14001d1b4:	push   0xffffffff900001cc
   14001d1b9:	retf   
   14001d1ba:	add    DWORD PTR [rax],eax
   14001d1bc:	mov    eax,0x1cb
	...
   14001d1d5:	add    BYTE PTR [rax],al
   14001d1d7:	add    BYTE PTR [rax+0x32],bh
   14001d1da:	add    al,BYTE PTR [rax]
   14001d1dc:	add    eax,DWORD PTR [rax]
   14001d1de:	add    BYTE PTR [rax],al
   14001d1e0:	add    BYTE PTR [rax],al
   14001d1e2:	add    BYTE PTR [rax],al
   14001d1e4:	(bad)  
   14001d1e5:	(bad)  
   14001d1e6:	(bad)  
   14001d1e7:	inc    DWORD PTR [rax]
   14001d1e9:	add    BYTE PTR [rax],al
   14001d1eb:	add    BYTE PTR [rax+0x0],al
   14001d1ee:	add    BYTE PTR [rax],al
   14001d1f0:	cwde   
   14001d1f1:	rol    DWORD PTR [rcx],1
	...
   14001d1ff:	add    BYTE PTR [rcx],al
	...
   14001d209:	add    BYTE PTR [rax],al
   14001d20b:	add    BYTE PTR [rax+0x28000232],ch
   14001d211:	rol    BYTE PTR [rcx],cl
   14001d213:	add    BYTE PTR [rax],al
   14001d215:	rol    BYTE PTR [rcx],cl
	...
   14001d22f:	add    BYTE PTR [rax+rax*1],al
   14001d232:	add    BYTE PTR [rax],al
   14001d234:	rol    BYTE PTR [rcx],cl
	...
   14001d23f:	add    BYTE PTR [rax-0x2e],ch
   14001d242:	add    DWORD PTR [rax],eax
   14001d244:	push   0xffffffff900001cc
   14001d249:	retf   
   14001d24a:	add    DWORD PTR [rax],eax
   14001d24c:	mov    eax,0x1cb
	...
   14001d265:	add    BYTE PTR [rax],al
   14001d267:	add    BYTE PTR [rax+0x3000232],ch
   14001d26d:	add    BYTE PTR [rax],al
   14001d26f:	add    BYTE PTR [rax],al
   14001d271:	add    BYTE PTR [rax],al
   14001d273:	add    bh,bh
   14001d275:	(bad)  
   14001d276:	(bad)  
   14001d277:	inc    DWORD PTR [rax]
   14001d279:	add    BYTE PTR [rax],al
   14001d27b:	add    BYTE PTR [rax+0x0],al
   14001d27e:	add    BYTE PTR [rax],al
   14001d280:	sub    dl,dl
   14001d282:	add    DWORD PTR [rax],eax
	...
   14001d290:	add    DWORD PTR [rax],eax
	...
   14001d29a:	add    BYTE PTR [rax],al
   14001d29c:	fdiv   DWORD PTR [rdx]
   14001d29e:	add    al,BYTE PTR [rax]
   14001d2a0:	mov    eax,0x900001d2
   14001d2a5:	rol    BYTE PTR [rcx],cl
	...
   14001d2bf:	add    BYTE PTR [rax+rax*1],al
   14001d2c2:	add    BYTE PTR [rax],al
   14001d2c4:	rcl    dl,1
   14001d2c6:	add    DWORD PTR [rax],eax
	...
   14001d2d0:	clc    
   14001d2d1:	rol    BYTE PTR [rcx],cl
   14001d2d3:	add    BYTE PTR [rax-0x34],ch
   14001d2d6:	add    DWORD PTR [rax],eax
   14001d2d8:	nop
   14001d2d9:	retf   
   14001d2da:	add    DWORD PTR [rax],eax
   14001d2dc:	mov    eax,0x1cb
	...
   14001d2f5:	add    BYTE PTR [rax],al
   14001d2f7:	add    al,bl
   14001d2f9:	xor    al,BYTE PTR [rdx]
   14001d2fb:	add    BYTE PTR [rbx],al
   14001d2fd:	add    BYTE PTR [rax],al
   14001d2ff:	add    BYTE PTR [rax],al
   14001d301:	add    BYTE PTR [rax],al
   14001d303:	add    bh,bh
   14001d305:	(bad)  
   14001d306:	(bad)  
   14001d307:	inc    DWORD PTR [rax]
   14001d309:	add    BYTE PTR [rax],al
   14001d30b:	add    BYTE PTR [rax+0x0],al
   14001d30e:	add    BYTE PTR [rax],al
   14001d310:	mov    eax,0x1d2
	...
   14001d31d:	add    BYTE PTR [rax],al
   14001d31f:	add    BYTE PTR [rcx],al
	...
   14001d329:	add    BYTE PTR [rax],al
   14001d32b:	add    BYTE PTR [rax],cl
   14001d32d:	xor    eax,DWORD PTR [rdx]
   14001d32f:	add    BYTE PTR [rax-0x2d],cl
   14001d332:	add    DWORD PTR [rax],eax
   14001d334:	and    bl,dl
   14001d336:	add    DWORD PTR [rax],eax
	...
   14001d350:	add    eax,DWORD PTR [rax]
   14001d352:	add    BYTE PTR [rax],al
   14001d354:	(bad)  
   14001d355:	rol    DWORD PTR [rcx],cl
	...
   14001d35f:	add    BYTE PTR [rax-0x6ffffe2d],al
   14001d365:	retf   
   14001d366:	add    DWORD PTR [rax],eax
   14001d368:	mov    eax,0x1cb
	...
   14001d37d:	add    BYTE PTR [rax],al
   14001d37f:	add    BYTE PTR [rax],cl
   14001d381:	xor    eax,DWORD PTR [rdx]
   14001d383:	add    BYTE PTR [rdx],al
   14001d385:	add    BYTE PTR [rax],al
   14001d387:	add    BYTE PTR [rax],al
   14001d389:	add    BYTE PTR [rax],al
   14001d38b:	add    bh,bh
   14001d38d:	(bad)  
   14001d38e:	(bad)  
   14001d38f:	inc    DWORD PTR [rax]
   14001d391:	add    BYTE PTR [rax],al
   14001d393:	add    BYTE PTR [rax+0x0],al
   14001d396:	add    BYTE PTR [rax],al
   14001d398:	rol    QWORD PTR [rcx],cl
	...
   14001d3a7:	add    BYTE PTR [rcx],al
	...
   14001d3b1:	add    BYTE PTR [rax],al
   14001d3b3:	add    BYTE PTR [rax],bh
   14001d3b5:	xor    eax,DWORD PTR [rdx]
   14001d3b7:	add    al,dl
   14001d3b9:	rol    DWORD PTR [rcx],cl
   14001d3bb:	add    BYTE PTR [rax+0x1d3],ch
	...
   14001d3d5:	add    BYTE PTR [rax],al
   14001d3d7:	add    BYTE PTR [rbx],al
   14001d3d9:	add    BYTE PTR [rax],al
   14001d3db:	add    al,ch
   14001d3dd:	rol    DWORD PTR [rcx],cl
	...
   14001d3e7:	add    BYTE PTR [rax],cl
   14001d3e9:	(bad)  
   14001d3ea:	add    DWORD PTR [rax],eax
   14001d3ec:	nop
   14001d3ed:	retf   
   14001d3ee:	add    DWORD PTR [rax],eax
   14001d3f0:	mov    eax,0x1cb
	...
   14001d405:	add    BYTE PTR [rax],al
   14001d407:	add    BYTE PTR [rax],bh
   14001d409:	xor    eax,DWORD PTR [rdx]
   14001d40b:	add    BYTE PTR [rdx],al
   14001d40d:	add    BYTE PTR [rax],al
   14001d40f:	add    BYTE PTR [rax],al
   14001d411:	add    BYTE PTR [rax],al
   14001d413:	add    bh,bh
   14001d415:	(bad)  
   14001d416:	(bad)  
   14001d417:	inc    DWORD PTR [rax]
   14001d419:	add    BYTE PTR [rax],al
   14001d41b:	add    BYTE PTR [rax+0x0],al
   14001d41e:	add    BYTE PTR [rax],al
   14001d420:	rcl    bl,1
   14001d422:	add    DWORD PTR [rax],eax
	...
   14001d438:	add    eax,DWORD PTR [rax]
   14001d43a:	add    BYTE PTR [rax],al
   14001d43c:	rex.W (bad) 
   14001d43e:	add    DWORD PTR [rax],eax
	...
   14001d448:	push   0xffffffff900001d4
   14001d44d:	retf   
   14001d44e:	add    DWORD PTR [rax],eax
   14001d450:	mov    eax,0x1cb
	...
   14001d465:	add    BYTE PTR [rax],al
   14001d467:	add    BYTE PTR [rax+0x33],ch
   14001d46a:	add    al,BYTE PTR [rax]
   14001d46c:	add    al,BYTE PTR [rax]
   14001d46e:	add    BYTE PTR [rax],al
   14001d470:	add    BYTE PTR [rax],al
   14001d472:	add    BYTE PTR [rax],al
   14001d474:	(bad)  
   14001d475:	(bad)  
   14001d476:	(bad)  
   14001d477:	inc    DWORD PTR [rax]
   14001d479:	add    BYTE PTR [rax],al
   14001d47b:	add    BYTE PTR [rax+0x0],al
   14001d47e:	add    BYTE PTR [rax],al
   14001d480:	xor    ah,dl
   14001d482:	add    DWORD PTR [rax],eax
	...
   14001d498:	add    eax,DWORD PTR [rax]
   14001d49a:	add    BYTE PTR [rax],al
   14001d49c:	test   al,0xd4
   14001d49e:	add    DWORD PTR [rax],eax
	...
   14001d4a8:	enter  0x1d4,0x0
   14001d4ac:	nop
   14001d4ad:	retf   
   14001d4ae:	add    DWORD PTR [rax],eax
   14001d4b0:	mov    eax,0x1cb
	...
   14001d4c5:	add    BYTE PTR [rax],al
   14001d4c7:	add    BYTE PTR [rax+0x2000233],bl
   14001d4cd:	add    BYTE PTR [rax],al
   14001d4cf:	add    BYTE PTR [rax],al
   14001d4d1:	add    BYTE PTR [rax],al
   14001d4d3:	add    bh,bh
   14001d4d5:	(bad)  
   14001d4d6:	(bad)  
   14001d4d7:	inc    DWORD PTR [rax]
   14001d4d9:	add    BYTE PTR [rax],al
   14001d4db:	add    BYTE PTR [rax+0x0],al
   14001d4de:	add    BYTE PTR [rax],al
   14001d4e0:	nop
   14001d4e1:	(bad)  
   14001d4e2:	add    DWORD PTR [rax],eax
	...
   14001d4f0:	add    DWORD PTR [rax],eax
	...
   14001d4fa:	add    BYTE PTR [rax],al
   14001d4fc:	shl    BYTE PTR [rbx],1
   14001d4fe:	add    al,BYTE PTR [rax]
   14001d500:	sbb    ch,dl
   14001d502:	add    DWORD PTR [rax],eax
   14001d504:	lock (bad) 
   14001d506:	add    DWORD PTR [rax],eax
	...
   14001d520:	add    eax,DWORD PTR [rax]
   14001d522:	add    BYTE PTR [rax],al
   14001d524:	xor    ch,dl
   14001d526:	add    DWORD PTR [rax],eax
	...
   14001d530:	push   rax
   14001d531:	(bad)  
   14001d532:	add    DWORD PTR [rax],eax
   14001d534:	nop
   14001d535:	retf   
   14001d536:	add    DWORD PTR [rax],eax
   14001d538:	mov    eax,0x1cb
	...
   14001d54d:	add    BYTE PTR [rax],al
   14001d54f:	add    al,dl
   14001d551:	xor    eax,DWORD PTR [rdx]
   14001d553:	add    BYTE PTR [rdx],al
   14001d555:	add    BYTE PTR [rax],al
   14001d557:	add    BYTE PTR [rax],al
   14001d559:	add    BYTE PTR [rax],al
   14001d55b:	add    bh,bh
   14001d55d:	(bad)  
   14001d55e:	(bad)  
   14001d55f:	inc    DWORD PTR [rax]
   14001d561:	add    BYTE PTR [rax],al
   14001d563:	add    BYTE PTR [rax+0x0],al
   14001d566:	add    BYTE PTR [rax],al
   14001d568:	sbb    ch,dl
   14001d56a:	add    DWORD PTR [rax],eax
	...
   14001d578:	add    DWORD PTR [rax],eax
	...
   14001d582:	add    BYTE PTR [rax],al
   14001d584:	or     BYTE PTR [rdx+rax*1],dh
   14001d587:	add    BYTE PTR [rax+0x780001d5],ah
   14001d58d:	(bad)  
   14001d58e:	add    DWORD PTR [rax],eax
	...
   14001d5a8:	add    al,0x0
   14001d5aa:	add    BYTE PTR [rax],al
   14001d5ac:	mov    eax,0x1d5
   14001d5b1:	add    BYTE PTR [rax],al
   14001d5b3:	add    BYTE PTR [rax],al
   14001d5b5:	add    BYTE PTR [rax],al
   14001d5b7:	add    al,ah
   14001d5b9:	(bad)  
   14001d5ba:	add    DWORD PTR [rax],eax
   14001d5bc:	enter  0x1d4,0x0
   14001d5c0:	nop
   14001d5c1:	retf   
   14001d5c2:	add    DWORD PTR [rax],eax
   14001d5c4:	mov    eax,0x1cb
	...
   14001d5dd:	add    BYTE PTR [rax],al
   14001d5df:	add    BYTE PTR [rax],cl
   14001d5e1:	xor    al,0x2
   14001d5e3:	add    BYTE PTR [rbx],al
   14001d5e5:	add    BYTE PTR [rax],al
   14001d5e7:	add    BYTE PTR [rax],al
   14001d5e9:	add    BYTE PTR [rax],al
   14001d5eb:	add    bh,bh
   14001d5ed:	(bad)  
   14001d5ee:	(bad)  
   14001d5ef:	inc    DWORD PTR [rax]
   14001d5f1:	add    BYTE PTR [rax],al
   14001d5f3:	add    BYTE PTR [rax+0x0],al
   14001d5f6:	add    BYTE PTR [rax],al
   14001d5f8:	movabs al,ds:0x1d5
   14001d601:	add    BYTE PTR [rax],al
   14001d603:	add    BYTE PTR [rax],al
   14001d605:	add    BYTE PTR [rax],al
   14001d607:	add    BYTE PTR [rcx],al
	...
   14001d611:	add    BYTE PTR [rax],al
   14001d613:	add    BYTE PTR [rax+0x34],al
   14001d616:	add    al,BYTE PTR [rax]
   14001d618:	xor    dh,dl
   14001d61a:	add    DWORD PTR [rax],eax
   14001d61c:	or     dh,dl
   14001d61e:	add    DWORD PTR [rax],eax
	...
   14001d638:	add    al,0x0
   14001d63a:	add    BYTE PTR [rax],al
   14001d63c:	rex.W (bad) 
   14001d63e:	add    DWORD PTR [rax],eax
	...
   14001d648:	jo     0x14001d620
   14001d64a:	add    DWORD PTR [rax],eax
   14001d64c:	enter  0x1d4,0x0
   14001d650:	nop
   14001d651:	retf   
   14001d652:	add    DWORD PTR [rax],eax
   14001d654:	mov    eax,0x1cb
	...
   14001d66d:	add    BYTE PTR [rax],al
   14001d66f:	add    BYTE PTR [rax+0x34],al
   14001d672:	add    al,BYTE PTR [rax]
   14001d674:	add    eax,DWORD PTR [rax]
   14001d676:	add    BYTE PTR [rax],al
   14001d678:	add    BYTE PTR [rax],al
   14001d67a:	add    BYTE PTR [rax],al
   14001d67c:	(bad)  
   14001d67d:	(bad)  
   14001d67e:	(bad)  
   14001d67f:	inc    DWORD PTR [rax]
   14001d681:	add    BYTE PTR [rax],al
   14001d683:	add    BYTE PTR [rax+0x0],al
   14001d686:	add    BYTE PTR [rax],al
   14001d688:	xor    dh,dl
   14001d68a:	add    DWORD PTR [rax],eax
	...
   14001d698:	add    DWORD PTR [rax],eax
	...
   14001d6a2:	add    BYTE PTR [rax],al
   14001d6a4:	js     0x14001d6da
   14001d6a6:	add    al,BYTE PTR [rax]
   14001d6a8:	rcl    dh,0x1
   14001d6ab:	add    BYTE PTR [rax+0x1d6],bl
	...
   14001d6c5:	add    BYTE PTR [rax],al
   14001d6c7:	add    BYTE PTR [rax+rax*1],al
   14001d6ca:	add    BYTE PTR [rax],al
   14001d6cc:	fcom   st(6)
   14001d6ce:	add    DWORD PTR [rax],eax
	...
   14001d6d8:	add    bh,dl
   14001d6da:	add    DWORD PTR [rax],eax
   14001d6dc:	push   0xffffffff900001d4
   14001d6e1:	retf   
   14001d6e2:	add    DWORD PTR [rax],eax
   14001d6e4:	mov    eax,0x1cb
	...
   14001d6fd:	add    BYTE PTR [rax],al
   14001d6ff:	add    BYTE PTR [rax+0x34],bh
   14001d702:	add    al,BYTE PTR [rax]
   14001d704:	add    eax,DWORD PTR [rax]
   14001d706:	add    BYTE PTR [rax],al
   14001d708:	add    BYTE PTR [rax],al
   14001d70a:	add    BYTE PTR [rax],al
   14001d70c:	(bad)  
   14001d70d:	(bad)  
   14001d70e:	(bad)  
   14001d70f:	inc    DWORD PTR [rax]
   14001d711:	add    BYTE PTR [rax],al
   14001d713:	add    BYTE PTR [rax+0x0],al
   14001d716:	add    BYTE PTR [rax],al
   14001d718:	rcl    dh,0x1
	...
   14001d727:	add    BYTE PTR [rcx],al
	...
   14001d731:	add    BYTE PTR [rax],al
   14001d733:	add    BYTE PTR [rax+0x50000234],dh
   14001d739:	xlat   BYTE PTR ds:[rbx]
   14001d73a:	add    DWORD PTR [rax],eax
   14001d73c:	sub    bh,dl
   14001d73e:	add    DWORD PTR [rax],eax
	...
   14001d758:	add    al,0x0
   14001d75a:	add    BYTE PTR [rax],al
   14001d75c:	push   0x1d7
   14001d761:	add    BYTE PTR [rax],al
   14001d763:	add    BYTE PTR [rax],al
   14001d765:	add    BYTE PTR [rax],al
   14001d767:	add    BYTE PTR [rax+0x680001d7],dl
   14001d76d:	(bad)  
   14001d76e:	add    DWORD PTR [rax],eax
   14001d770:	nop
   14001d771:	retf   
   14001d772:	add    DWORD PTR [rax],eax
   14001d774:	mov    eax,0x1cb
	...
   14001d78d:	add    BYTE PTR [rax],al
   14001d78f:	add    BYTE PTR [rax+0x3000234],dh
   14001d795:	add    BYTE PTR [rax],al
   14001d797:	add    BYTE PTR [rax],al
   14001d799:	add    BYTE PTR [rax],al
   14001d79b:	add    bh,bh
   14001d79d:	(bad)  
   14001d79e:	(bad)  
   14001d79f:	inc    DWORD PTR [rax]
   14001d7a1:	add    BYTE PTR [rax],al
   14001d7a3:	add    BYTE PTR [rax+0x0],al
   14001d7a6:	add    BYTE PTR [rax],al
   14001d7a8:	push   rax
   14001d7a9:	xlat   BYTE PTR ds:[rbx]
   14001d7aa:	add    DWORD PTR [rax],eax
	...
   14001d7b8:	add    DWORD PTR [rax],eax
	...
   14001d7c2:	add    BYTE PTR [rax],al
   14001d7c4:	lock xor al,0x2
   14001d7c7:	add    al,ah
   14001d7c9:	xlat   BYTE PTR ds:[rbx]
   14001d7ca:	add    DWORD PTR [rax],eax
   14001d7cc:	mov    eax,0x1d7
	...
   14001d7e5:	add    BYTE PTR [rax],al
   14001d7e7:	add    BYTE PTR [rax+rax*1],al
   14001d7ea:	add    BYTE PTR [rax],al
   14001d7ec:	clc    
   14001d7ed:	xlat   BYTE PTR ds:[rbx]
   14001d7ee:	add    DWORD PTR [rax],eax
	...
   14001d7f8:	and    al,bl
   14001d7fa:	add    DWORD PTR [rax],eax
   14001d7fc:	push   0xffffffff900001d4
   14001d801:	retf   
   14001d802:	add    DWORD PTR [rax],eax
   14001d804:	mov    eax,0x1cb
	...
   14001d81d:	add    BYTE PTR [rax],al
   14001d81f:	add    al,dh
   14001d821:	xor    al,0x2
   14001d823:	add    BYTE PTR [rbx],al
   14001d825:	add    BYTE PTR [rax],al
   14001d827:	add    BYTE PTR [rax],al
   14001d829:	add    BYTE PTR [rax],al
   14001d82b:	add    bh,bh
   14001d82d:	(bad)  
   14001d82e:	(bad)  
   14001d82f:	inc    DWORD PTR [rax]
   14001d831:	add    BYTE PTR [rax],al
   14001d833:	add    BYTE PTR [rax+0x0],al
   14001d836:	add    BYTE PTR [rax],al
   14001d838:	loopne 0x14001d811
   14001d83a:	add    DWORD PTR [rax],eax
	...
   14001d848:	add    DWORD PTR [rax],eax
	...
   14001d852:	add    BYTE PTR [rax],al
   14001d854:	xor    BYTE PTR [rip+0xffffffffd8700002],dh        # 0x11871d85c
   14001d85a:	add    DWORD PTR [rax],eax
   14001d85c:	rex.W fadd DWORD PTR [rcx]
	...
   14001d877:	add    BYTE PTR [rax+rax*1],al
   14001d87a:	add    BYTE PTR [rax],al
   14001d87c:	mov    al,bl
   14001d87e:	add    DWORD PTR [rax],eax
	...
   14001d888:	mov    al,0xd8
   14001d88a:	add    DWORD PTR [rax],eax
   14001d88c:	push   0xffffffff900001cc
   14001d891:	retf   
   14001d892:	add    DWORD PTR [rax],eax
   14001d894:	mov    eax,0x1cb
	...
   14001d8ad:	add    BYTE PTR [rax],al
   14001d8af:	add    BYTE PTR [rax],dh
   14001d8b1:	xor    eax,0x30002
   14001d8b6:	add    BYTE PTR [rax],al
   14001d8b8:	add    BYTE PTR [rax],al
   14001d8ba:	add    BYTE PTR [rax],al
   14001d8bc:	(bad)  
   14001d8bd:	(bad)  
   14001d8be:	(bad)  
   14001d8bf:	inc    DWORD PTR [rax]
   14001d8c1:	add    BYTE PTR [rax],al
   14001d8c3:	add    BYTE PTR [rax+0x0],al
   14001d8c6:	add    BYTE PTR [rax],al
   14001d8c8:	jo     0x14001d8a2
   14001d8ca:	add    DWORD PTR [rax],eax
	...
   14001d8d8:	add    DWORD PTR [rax],eax
	...
   14001d8e2:	add    BYTE PTR [rax],al
   14001d8e4:	push   0x235
   14001d8e9:	fld    DWORD PTR [rcx]
   14001d8eb:	add    al,bl
   14001d8ed:	fadd   DWORD PTR [rcx]
	...
   14001d907:	add    BYTE PTR [rax+rax*1],al
   14001d90a:	add    BYTE PTR [rax],al
   14001d90c:	sbb    cl,bl
   14001d90e:	add    DWORD PTR [rax],eax
	...
   14001d918:	rex fld DWORD PTR [rcx]
   14001d91b:	add    BYTE PTR [rax-0x34],ch
   14001d91e:	add    DWORD PTR [rax],eax
   14001d920:	nop
   14001d921:	retf   
   14001d922:	add    DWORD PTR [rax],eax
   14001d924:	mov    eax,0x1cb
	...
   14001d93d:	add    BYTE PTR [rax],al
   14001d93f:	add    BYTE PTR [rax+0x35],ch
   14001d942:	add    al,BYTE PTR [rax]
   14001d944:	add    eax,DWORD PTR [rax]
   14001d946:	add    BYTE PTR [rax],al
   14001d948:	add    BYTE PTR [rax],al
   14001d94a:	add    BYTE PTR [rax],al
   14001d94c:	(bad)  
   14001d94d:	(bad)  
   14001d94e:	(bad)  
   14001d94f:	inc    DWORD PTR [rax]
   14001d951:	add    BYTE PTR [rax],al
   14001d953:	add    BYTE PTR [rax+0x0],al
   14001d956:	add    BYTE PTR [rax],al
   14001d958:	add    cl,bl
   14001d95a:	add    DWORD PTR [rax],eax
	...
   14001d968:	add    DWORD PTR [rax],eax
	...
   14001d972:	add    BYTE PTR [rax],al
   14001d974:	movabs al,ds:0x680001d990000235
   14001d97d:	fld    DWORD PTR [rcx]
	...
   14001d997:	add    BYTE PTR [rax+rax*1],al
   14001d99a:	add    BYTE PTR [rax],al
   14001d99c:	test   al,0xd9
   14001d99e:	add    DWORD PTR [rax],eax
	...
   14001d9a8:	rcr    cl,1
   14001d9aa:	add    DWORD PTR [rax],eax
   14001d9ac:	push   0xffffffff900001cc
   14001d9b1:	retf   
   14001d9b2:	add    DWORD PTR [rax],eax
   14001d9b4:	mov    eax,0x1cb
	...
   14001d9cd:	add    BYTE PTR [rax],al
   14001d9cf:	add    BYTE PTR [rax+0x3000235],ah
   14001d9d5:	add    BYTE PTR [rax],al
   14001d9d7:	add    BYTE PTR [rax],al
   14001d9d9:	add    BYTE PTR [rax],al
   14001d9db:	add    bh,bh
   14001d9dd:	(bad)  
   14001d9de:	(bad)  
   14001d9df:	inc    DWORD PTR [rax]
   14001d9e1:	add    BYTE PTR [rax],al
   14001d9e3:	add    BYTE PTR [rax+0x0],al
   14001d9e6:	add    BYTE PTR [rax],al
   14001d9e8:	nop
   14001d9e9:	fld    DWORD PTR [rcx]
	...
   14001d9f7:	add    BYTE PTR [rcx],al
	...
   14001da01:	add    BYTE PTR [rax],al
   14001da03:	add    al,bl
   14001da05:	xor    eax,0xda200002
   14001da0a:	add    DWORD PTR [rax],eax
   14001da0c:	clc    
   14001da0d:	fld    DWORD PTR [rcx]
	...
   14001da27:	add    BYTE PTR [rax+rax*1],al
   14001da2a:	add    BYTE PTR [rax],al
   14001da2c:	cmp    dl,bl
   14001da2e:	add    DWORD PTR [rax],eax
	...
   14001da38:	(bad)  
   14001da39:	fiadd  DWORD PTR [rcx]
   14001da3b:	add    BYTE PTR [rax-0x34],ch
   14001da3e:	add    DWORD PTR [rax],eax
   14001da40:	nop
   14001da41:	retf   
   14001da42:	add    DWORD PTR [rax],eax
   14001da44:	mov    eax,0x1cb
	...
   14001da5d:	add    BYTE PTR [rax],al
   14001da5f:	add    al,bl
   14001da61:	xor    eax,0x30002
   14001da66:	add    BYTE PTR [rax],al
   14001da68:	add    BYTE PTR [rax],al
   14001da6a:	add    BYTE PTR [rax],al
   14001da6c:	(bad)  
   14001da6d:	(bad)  
   14001da6e:	(bad)  
   14001da6f:	inc    DWORD PTR [rax]
   14001da71:	add    BYTE PTR [rax],al
   14001da73:	add    BYTE PTR [rax+0x0],al
   14001da76:	add    BYTE PTR [rax],al
   14001da78:	and    dl,bl
   14001da7a:	add    DWORD PTR [rax],eax
	...
   14001da88:	add    DWORD PTR [rax],eax
	...
   14001da92:	add    BYTE PTR [rax],al
   14001da94:	or     BYTE PTR [rsi],dh
   14001da96:	add    al,BYTE PTR [rax]
   14001da98:	mov    al,0xda
   14001da9a:	add    DWORD PTR [rax],eax
   14001da9c:	mov    dl,bl
   14001da9e:	add    DWORD PTR [rax],eax
	...
   14001dab8:	add    al,0x0
   14001daba:	add    BYTE PTR [rax],al
   14001dabc:	enter  0x1da,0x0
	...
   14001dac8:	lock fiadd DWORD PTR [rcx]
   14001dacb:	add    BYTE PTR [rax-0x34],ch
   14001dace:	add    DWORD PTR [rax],eax
   14001dad0:	nop
   14001dad1:	retf   
   14001dad2:	add    DWORD PTR [rax],eax
   14001dad4:	mov    eax,0x1cb
	...
   14001daed:	add    BYTE PTR [rax],al
   14001daef:	add    BYTE PTR [rax],cl
   14001daf1:	add    al,BYTE PTR ss:[rax]
   14001daf4:	add    eax,DWORD PTR [rax]
   14001daf6:	add    BYTE PTR [rax],al
   14001daf8:	add    BYTE PTR [rax],al
   14001dafa:	add    BYTE PTR [rax],al
   14001dafc:	(bad)  
   14001dafd:	(bad)  
   14001dafe:	(bad)  
   14001daff:	inc    DWORD PTR [rax]
   14001db01:	add    BYTE PTR [rax],al
   14001db03:	add    BYTE PTR [rax+0x0],al
   14001db06:	add    BYTE PTR [rax],al
   14001db08:	mov    al,0xda
   14001db0a:	add    DWORD PTR [rax],eax
	...
   14001db18:	add    DWORD PTR [rax],eax
	...
   14001db22:	add    BYTE PTR [rax],al
   14001db24:	cmp    BYTE PTR [rsi],dh
   14001db26:	add    al,BYTE PTR [rax]
   14001db28:	rex fild DWORD PTR [rcx]
   14001db2b:	add    BYTE PTR [rax],bl
   14001db2d:	fild   DWORD PTR [rcx]
	...
   14001db47:	add    BYTE PTR [rbx],al
   14001db49:	add    BYTE PTR [rax],al
   14001db4b:	add    BYTE PTR [rax-0x25],bl
   14001db4e:	add    DWORD PTR [rax],eax
	...
   14001db58:	js     0x14001db35
   14001db5a:	add    DWORD PTR [rax],eax
   14001db5c:	nop
   14001db5d:	retf   
   14001db5e:	add    DWORD PTR [rax],eax
   14001db60:	mov    eax,0x1cb
	...
   14001db75:	add    BYTE PTR [rax],al
   14001db77:	add    BYTE PTR [rax],bh
   14001db79:	add    al,BYTE PTR ss:[rax]
   14001db7c:	add    al,BYTE PTR [rax]
   14001db7e:	add    BYTE PTR [rax],al
   14001db80:	add    BYTE PTR [rax],al
   14001db82:	add    BYTE PTR [rax],al
   14001db84:	(bad)  
   14001db85:	(bad)  
   14001db86:	(bad)  
   14001db87:	inc    DWORD PTR [rax]
   14001db89:	add    BYTE PTR [rax],al
   14001db8b:	add    BYTE PTR [rax+0x0],al
   14001db8e:	add    BYTE PTR [rax],al
   14001db90:	rex fild DWORD PTR [rcx]
	...
   14001db9f:	add    BYTE PTR [rcx],al
	...
   14001dba9:	add    BYTE PTR [rax],al
   14001dbab:	add    BYTE PTR [rax+0x36],ch
   14001dbae:	add    al,BYTE PTR [rax]
   14001dbb0:	enter  0x1db,0x0
   14001dbb4:	movabs al,ds:0x1db
	...
   14001dbcd:	add    BYTE PTR [rax],al
   14001dbcf:	add    BYTE PTR [rax+rax*1],al
   14001dbd2:	add    BYTE PTR [rax],al
   14001dbd4:	loopne 0x14001dbb1
   14001dbd6:	add    DWORD PTR [rax],eax
	...
   14001dbe0:	or     ah,bl
   14001dbe2:	add    DWORD PTR [rax],eax
   14001dbe4:	push   0xffffffff900001cc
   14001dbe9:	retf   
   14001dbea:	add    DWORD PTR [rax],eax
   14001dbec:	mov    eax,0x1cb
	...
   14001dc05:	add    BYTE PTR [rax],al
   14001dc07:	add    BYTE PTR [rax+0x36],ch
   14001dc0a:	add    al,BYTE PTR [rax]
   14001dc0c:	add    eax,DWORD PTR [rax]
   14001dc0e:	add    BYTE PTR [rax],al
   14001dc10:	add    BYTE PTR [rax],al
   14001dc12:	add    BYTE PTR [rax],al
   14001dc14:	(bad)  
   14001dc15:	(bad)  
   14001dc16:	(bad)  
   14001dc17:	inc    DWORD PTR [rax]
   14001dc19:	add    BYTE PTR [rax],al
   14001dc1b:	add    BYTE PTR [rax+0x0],al
   14001dc1e:	add    BYTE PTR [rax],al
   14001dc20:	enter  0x1db,0x0
	...
   14001dc30:	add    DWORD PTR [rax],eax
	...
   14001dc3a:	add    BYTE PTR [rax],al
   14001dc3c:	test   al,0x36
   14001dc3e:	add    al,BYTE PTR [rax]
   14001dc40:	pop    rax
   14001dc41:	fadd   QWORD PTR [rcx]
   14001dc43:	add    BYTE PTR [rax],dh
   14001dc45:	fadd   QWORD PTR [rcx]
	...
   14001dc5f:	add    BYTE PTR [rax+rax*1],al
   14001dc62:	add    BYTE PTR [rax],al
   14001dc64:	jo     0x14001dc42
   14001dc66:	add    DWORD PTR [rax],eax
	...
   14001dc70:	cwde   
   14001dc71:	fadd   QWORD PTR [rcx]
   14001dc73:	add    BYTE PTR [rax-0x34],ch
   14001dc76:	add    DWORD PTR [rax],eax
   14001dc78:	nop
   14001dc79:	retf   
   14001dc7a:	add    DWORD PTR [rax],eax
   14001dc7c:	mov    eax,0x1cb
	...
   14001dc95:	add    BYTE PTR [rax],al
   14001dc97:	add    BYTE PTR [rax+0x3000236],ch
   14001dc9d:	add    BYTE PTR [rax],al
   14001dc9f:	add    BYTE PTR [rax],al
   14001dca1:	add    BYTE PTR [rax],al
   14001dca3:	add    bh,bh
   14001dca5:	(bad)  
   14001dca6:	(bad)  
   14001dca7:	inc    DWORD PTR [rax]
   14001dca9:	add    BYTE PTR [rax],al
   14001dcab:	add    BYTE PTR [rax+0x0],al
   14001dcae:	add    BYTE PTR [rax],al
   14001dcb0:	pop    rax
   14001dcb1:	fadd   QWORD PTR [rcx]
	...
   14001dcbf:	add    BYTE PTR [rcx],al
	...
   14001dcc9:	add    BYTE PTR [rax],al
   14001dccb:	add    al,ch
   14001dccd:	add    al,BYTE PTR ss:[rax]
   14001dcd0:	call   0x10001deb1
   14001dcd5:	fadd   QWORD PTR [rcx]
	...
   14001dcef:	add    BYTE PTR [rax+rax*1],al
   14001dcf2:	add    BYTE PTR [rax],al
   14001dcf4:	add    ch,bl
   14001dcf6:	add    DWORD PTR [rax],eax
	...
   14001dd00:	sub    ch,bl
   14001dd02:	add    DWORD PTR [rax],eax
   14001dd04:	push   0xffffffff900001cc
   14001dd09:	retf   
   14001dd0a:	add    DWORD PTR [rax],eax
   14001dd0c:	mov    eax,0x1cb
	...
   14001dd25:	add    BYTE PTR [rax],al
   14001dd27:	add    al,ch
   14001dd29:	add    al,BYTE PTR ss:[rax]
   14001dd2c:	add    eax,DWORD PTR [rax]
   14001dd2e:	add    BYTE PTR [rax],al
   14001dd30:	add    BYTE PTR [rax],al
   14001dd32:	add    BYTE PTR [rax],al
   14001dd34:	(bad)  
   14001dd35:	(bad)  
   14001dd36:	(bad)  
   14001dd37:	inc    DWORD PTR [rax]
   14001dd39:	add    BYTE PTR [rax],al
   14001dd3b:	add    BYTE PTR [rax+0x0],al
   14001dd3e:	add    BYTE PTR [rax],al
   14001dd40:	call   0x14001df21
	...
   14001dd4d:	add    BYTE PTR [rax],al
   14001dd4f:	add    BYTE PTR [rcx],al
	...
   14001dd59:	add    BYTE PTR [rax],al
   14001dd5b:	add    BYTE PTR [rax],ah
   14001dd5d:	(bad)  
   14001dd5e:	add    al,BYTE PTR [rax]
   14001dd60:	js     0x14001dd3f
   14001dd62:	add    DWORD PTR [rax],eax
   14001dd64:	push   rax
   14001dd65:	fld    QWORD PTR [rcx]
	...
   14001dd7f:	add    BYTE PTR [rax+rax*1],al
   14001dd82:	add    BYTE PTR [rax],al
   14001dd84:	nop
   14001dd85:	fld    QWORD PTR [rcx]
	...
   14001dd8f:	add    BYTE PTR [rax+0x680001dd],bh
   14001dd95:	int3   
   14001dd96:	add    DWORD PTR [rax],eax
   14001dd98:	nop
   14001dd99:	retf   
   14001dd9a:	add    DWORD PTR [rax],eax
   14001dd9c:	mov    eax,0x1cb
	...
   14001ddb5:	add    BYTE PTR [rax],al
   14001ddb7:	add    BYTE PTR [rax],ah
   14001ddb9:	(bad)  
   14001ddba:	add    al,BYTE PTR [rax]
   14001ddbc:	add    eax,DWORD PTR [rax]
   14001ddbe:	add    BYTE PTR [rax],al
   14001ddc0:	add    BYTE PTR [rax],al
   14001ddc2:	add    BYTE PTR [rax],al
   14001ddc4:	(bad)  
   14001ddc5:	(bad)  
   14001ddc6:	(bad)  
   14001ddc7:	inc    DWORD PTR [rax]
   14001ddc9:	add    BYTE PTR [rax],al
   14001ddcb:	add    BYTE PTR [rax+0x0],al
   14001ddce:	add    BYTE PTR [rax],al
   14001ddd0:	js     0x14001ddaf
   14001ddd2:	add    DWORD PTR [rax],eax
	...
   14001dde0:	add    DWORD PTR [rax],eax
	...
   14001ddea:	add    BYTE PTR [rax],al
   14001ddec:	push   rax
   14001dded:	(bad)  
   14001ddee:	add    al,BYTE PTR [rax]
   14001ddf0:	or     dh,bl
   14001ddf2:	add    DWORD PTR [rax],eax
   14001ddf4:	loopne 0x14001ddd3
   14001ddf6:	add    DWORD PTR [rax],eax
	...
   14001de10:	add    al,0x0
   14001de12:	add    BYTE PTR [rax],al
   14001de14:	and    dh,bl
   14001de16:	add    DWORD PTR [rax],eax
	...
   14001de20:	rex.W fiadd WORD PTR [rcx]
   14001de23:	add    BYTE PTR [rax-0x34],ch
   14001de26:	add    DWORD PTR [rax],eax
   14001de28:	nop
   14001de29:	retf   
   14001de2a:	add    DWORD PTR [rax],eax
   14001de2c:	mov    eax,0x1cb
	...
   14001de45:	add    BYTE PTR [rax],al
   14001de47:	add    BYTE PTR [rax+0x37],dl
   14001de4a:	add    al,BYTE PTR [rax]
   14001de4c:	add    eax,DWORD PTR [rax]
   14001de4e:	add    BYTE PTR [rax],al
   14001de50:	add    BYTE PTR [rax],al
   14001de52:	add    BYTE PTR [rax],al
   14001de54:	(bad)  
   14001de55:	(bad)  
   14001de56:	(bad)  
   14001de57:	inc    DWORD PTR [rax]
   14001de59:	add    BYTE PTR [rax],al
   14001de5b:	add    BYTE PTR [rax+0x0],al
   14001de5e:	add    BYTE PTR [rax],al
   14001de60:	or     dh,bl
   14001de62:	add    DWORD PTR [rax],eax
	...
   14001de70:	add    DWORD PTR [rax],eax
	...
   14001de7a:	add    BYTE PTR [rax],al
   14001de7c:	mov    BYTE PTR [rdi],dh
   14001de7e:	add    al,BYTE PTR [rax]
   14001de80:	cwde   
   14001de81:	fiadd  WORD PTR [rcx]
   14001de83:	add    BYTE PTR [rax-0x22],dh
   14001de86:	add    DWORD PTR [rax],eax
	...
   14001dea0:	add    al,0x0
   14001dea2:	add    BYTE PTR [rax],al
   14001dea4:	mov    al,0xde
   14001dea6:	add    DWORD PTR [rax],eax
	...
   14001deb0:	fcomp  st(6)
   14001deb2:	add    DWORD PTR [rax],eax
   14001deb4:	push   0xffffffff900001cc
   14001deb9:	retf   
   14001deba:	add    DWORD PTR [rax],eax
   14001debc:	mov    eax,0x1cb
	...
   14001ded5:	add    BYTE PTR [rax],al
   14001ded7:	add    BYTE PTR [rax+0x3000237],cl
   14001dedd:	add    BYTE PTR [rax],al
   14001dedf:	add    BYTE PTR [rax],al
   14001dee1:	add    BYTE PTR [rax],al
   14001dee3:	add    bh,bh
   14001dee5:	(bad)  
   14001dee6:	(bad)  
   14001dee7:	inc    DWORD PTR [rax]
   14001dee9:	add    BYTE PTR [rax],al
   14001deeb:	add    BYTE PTR [rax+0x0],al
   14001deee:	add    BYTE PTR [rax],al
   14001def0:	cwde   
   14001def1:	fiadd  WORD PTR [rcx]
	...
   14001deff:	add    BYTE PTR [rcx],al
	...
   14001df09:	add    BYTE PTR [rax],al
   14001df0b:	add    al,al
   14001df0d:	(bad)  
   14001df0e:	add    al,BYTE PTR [rax]
   14001df10:	sub    bh,bl
   14001df12:	add    DWORD PTR [rax],eax
   14001df14:	add    bh,bl
   14001df16:	add    DWORD PTR [rax],eax
	...
   14001df30:	add    al,0x0
   14001df32:	add    BYTE PTR [rax],al
   14001df34:	rex fild WORD PTR [rcx]
	...
   14001df3f:	add    BYTE PTR [rax-0x21],ch
   14001df42:	add    DWORD PTR [rax],eax
   14001df44:	push   0xffffffff900001cc
   14001df49:	retf   
   14001df4a:	add    DWORD PTR [rax],eax
   14001df4c:	mov    eax,0x1cb
	...
   14001df65:	add    BYTE PTR [rax],al
   14001df67:	add    al,al
   14001df69:	(bad)  
   14001df6a:	add    al,BYTE PTR [rax]
   14001df6c:	add    eax,DWORD PTR [rax]
   14001df6e:	add    BYTE PTR [rax],al
   14001df70:	add    BYTE PTR [rax],al
   14001df72:	add    BYTE PTR [rax],al
   14001df74:	(bad)  
   14001df75:	(bad)  
   14001df76:	(bad)  
   14001df77:	inc    DWORD PTR [rax]
   14001df79:	add    BYTE PTR [rax],al
   14001df7b:	add    BYTE PTR [rax+0x0],al
   14001df7e:	add    BYTE PTR [rax],al
   14001df80:	sub    bh,bl
   14001df82:	add    DWORD PTR [rax],eax
	...
   14001df90:	add    DWORD PTR [rax],eax
	...
   14001df9a:	add    BYTE PTR [rax],al
   14001df9c:	clc    
   14001df9d:	(bad)  
   14001df9e:	add    al,BYTE PTR [rax]
   14001dfa0:	mov    eax,0x900001df
   14001dfa5:	fild   WORD PTR [rcx]
	...
   14001dfbf:	add    BYTE PTR [rax+rax*1],al
   14001dfc2:	add    BYTE PTR [rax],al
   14001dfc4:	rcr    bh,1
   14001dfc6:	add    DWORD PTR [rax],eax
	...
   14001dfd0:	clc    
   14001dfd1:	fild   WORD PTR [rcx]
   14001dfd3:	add    BYTE PTR [rax-0x34],ch
   14001dfd6:	add    DWORD PTR [rax],eax
   14001dfd8:	nop
   14001dfd9:	retf   
   14001dfda:	add    DWORD PTR [rax],eax
   14001dfdc:	mov    eax,0x1cb
	...
   14001dff5:	add    BYTE PTR [rax],al
   14001dff7:	add    al,bh
   14001dff9:	(bad)  
   14001dffa:	add    al,BYTE PTR [rax]
   14001dffc:	add    eax,DWORD PTR [rax]
   14001dffe:	add    BYTE PTR [rax],al
   14001e000:	add    BYTE PTR [rax],al
   14001e002:	add    BYTE PTR [rax],al
   14001e004:	(bad)  
   14001e005:	(bad)  
   14001e006:	(bad)  
   14001e007:	inc    DWORD PTR [rax]
   14001e009:	add    BYTE PTR [rax],al
   14001e00b:	add    BYTE PTR [rax+0x0],al
   14001e00e:	add    BYTE PTR [rax],al
   14001e010:	mov    eax,0x1df
	...
   14001e01d:	add    BYTE PTR [rax],al
   14001e01f:	add    BYTE PTR [rcx],al
	...
   14001e029:	add    BYTE PTR [rax],al
   14001e02b:	add    BYTE PTR [rax],dh
   14001e02d:	cmp    BYTE PTR [rdx],al
   14001e02f:	add    BYTE PTR [rax-0x20],cl
   14001e032:	add    DWORD PTR [rax],eax
   14001e034:	and    al,ah
   14001e036:	add    DWORD PTR [rax],eax
	...
   14001e050:	add    al,0x0
   14001e052:	add    BYTE PTR [rax],al
   14001e054:	(bad)  
   14001e055:	loopne 0x14001e058
	...
   14001e05f:	add    BYTE PTR [rax+0x680001e0],cl
   14001e065:	int3   
   14001e066:	add    DWORD PTR [rax],eax
   14001e068:	nop
   14001e069:	retf   
   14001e06a:	add    DWORD PTR [rax],eax
   14001e06c:	mov    eax,0x1cb
	...
   14001e085:	add    BYTE PTR [rax],al
   14001e087:	add    BYTE PTR [rax],dh
   14001e089:	cmp    BYTE PTR [rdx],al
   14001e08b:	add    BYTE PTR [rbx],al
   14001e08d:	add    BYTE PTR [rax],al
   14001e08f:	add    BYTE PTR [rax],al
   14001e091:	add    BYTE PTR [rax],al
   14001e093:	add    bh,bh
   14001e095:	(bad)  
   14001e096:	(bad)  
   14001e097:	inc    DWORD PTR [rax]
   14001e099:	add    BYTE PTR [rax],al
   14001e09b:	add    BYTE PTR [rax+0x0],al
   14001e09e:	add    BYTE PTR [rax],al
   14001e0a0:	rex.W loopne 0x14001e0a4
	...
   14001e0af:	add    BYTE PTR [rcx],al
	...
   14001e0b9:	add    BYTE PTR [rax],al
   14001e0bb:	add    BYTE PTR [rax+0x38],ch
   14001e0be:	add    al,BYTE PTR [rax]
   14001e0c0:	fsub   st,st(0)
   14001e0c2:	add    DWORD PTR [rax],eax
   14001e0c4:	mov    al,0xe0
   14001e0c6:	add    DWORD PTR [rax],eax
	...
   14001e0e0:	add    al,0x0
   14001e0e2:	add    BYTE PTR [rax],al
   14001e0e4:	lock loopne 0x14001e0e8
	...
   14001e0ef:	add    BYTE PTR [rax],bl
   14001e0f1:	loope  0x14001e0f4
   14001e0f3:	add    BYTE PTR [rax-0x34],ch
   14001e0f6:	add    DWORD PTR [rax],eax
   14001e0f8:	nop
   14001e0f9:	retf   
   14001e0fa:	add    DWORD PTR [rax],eax
   14001e0fc:	mov    eax,0x1cb
	...
   14001e115:	add    BYTE PTR [rax],al
   14001e117:	add    BYTE PTR [rax+0x38],ch
   14001e11a:	add    al,BYTE PTR [rax]
   14001e11c:	add    eax,DWORD PTR [rax]
   14001e11e:	add    BYTE PTR [rax],al
   14001e120:	add    BYTE PTR [rax],al
   14001e122:	add    BYTE PTR [rax],al
   14001e124:	(bad)  
   14001e125:	(bad)  
   14001e126:	(bad)  
   14001e127:	inc    DWORD PTR [rax]
   14001e129:	add    BYTE PTR [rax],al
   14001e12b:	add    BYTE PTR [rax+0x0],al
   14001e12e:	add    BYTE PTR [rax],al
   14001e130:	fsub   st,st(0)
   14001e132:	add    DWORD PTR [rax],eax
	...
   14001e140:	add    DWORD PTR [rax],eax
	...
   14001e14a:	add    BYTE PTR [rax],al
   14001e14c:	movabs al,ds:0x400001e168000238
   14001e155:	loope  0x14001e158
	...
   14001e16f:	add    BYTE PTR [rax+rax*1],al
   14001e172:	add    BYTE PTR [rax],al
   14001e174:	and    cl,0x1
	...
   14001e17f:	add    BYTE PTR [rax+0x680001e1],ch
   14001e185:	int3   
   14001e186:	add    DWORD PTR [rax],eax
   14001e188:	nop
   14001e189:	retf   
   14001e18a:	add    DWORD PTR [rax],eax
   14001e18c:	mov    eax,0x1cb
	...
   14001e1a5:	add    BYTE PTR [rax],al
   14001e1a7:	add    BYTE PTR [rax+0x3000238],ah
   14001e1ad:	add    BYTE PTR [rax],al
   14001e1af:	add    BYTE PTR [rax],al
   14001e1b1:	add    BYTE PTR [rax],al
   14001e1b3:	add    bh,bh
   14001e1b5:	(bad)  
   14001e1b6:	(bad)  
   14001e1b7:	inc    DWORD PTR [rax]
   14001e1b9:	add    BYTE PTR [rax],al
   14001e1bb:	add    BYTE PTR [rax+0x0],al
   14001e1be:	add    BYTE PTR [rax],al
   14001e1c0:	push   0x1e1
	...
   14001e1cd:	add    BYTE PTR [rax],al
   14001e1cf:	add    BYTE PTR [rcx],al
	...
   14001e1d9:	add    BYTE PTR [rax],al
   14001e1db:	add    al,dl
   14001e1dd:	cmp    BYTE PTR [rdx],al
   14001e1df:	add    al,bh
   14001e1e1:	loope  0x14001e1e4
   14001e1e3:	add    al,dl
   14001e1e5:	loope  0x14001e1e8
	...
   14001e1ff:	add    BYTE PTR [rax+rax*1],al
   14001e202:	add    BYTE PTR [rax],al
   14001e204:	adc    dl,ah
   14001e206:	add    DWORD PTR [rax],eax
	...
   14001e210:	cmp    dl,ah
   14001e212:	add    DWORD PTR [rax],eax
   14001e214:	push   0xffffffff900001cc
   14001e219:	retf   
   14001e21a:	add    DWORD PTR [rax],eax
   14001e21c:	mov    eax,0x1cb
	...
   14001e235:	add    BYTE PTR [rax],al
   14001e237:	add    al,dl
   14001e239:	cmp    BYTE PTR [rdx],al
   14001e23b:	add    BYTE PTR [rbx],al
   14001e23d:	add    BYTE PTR [rax],al
   14001e23f:	add    BYTE PTR [rax],al
   14001e241:	add    BYTE PTR [rax],al
   14001e243:	add    bh,bh
   14001e245:	(bad)  
   14001e246:	(bad)  
   14001e247:	inc    DWORD PTR [rax]
   14001e249:	add    BYTE PTR [rax],al
   14001e24b:	add    BYTE PTR [rax+0x0],al
   14001e24e:	add    BYTE PTR [rax],al
   14001e250:	clc    
   14001e251:	loope  0x14001e254
	...
   14001e25f:	add    BYTE PTR [rcx],al
	...
   14001e269:	add    BYTE PTR [rax],al
   14001e26b:	add    BYTE PTR [rax],cl
   14001e26d:	cmp    DWORD PTR [rdx],eax
   14001e26f:	add    BYTE PTR [rax+0x600001e2],cl
   14001e275:	loop   0x14001e278
	...
   14001e28f:	add    BYTE PTR [rax+rax*1],al
   14001e292:	add    BYTE PTR [rax],al
   14001e294:	movabs al,ds:0x1e2
   14001e29d:	add    BYTE PTR [rax],al
   14001e29f:	add    al,cl
   14001e2a1:	loop   0x14001e2a4
   14001e2a3:	add    BYTE PTR [rax-0x34],ch
   14001e2a6:	add    DWORD PTR [rax],eax
   14001e2a8:	nop
   14001e2a9:	retf   
   14001e2aa:	add    DWORD PTR [rax],eax
   14001e2ac:	mov    eax,0x1cb
	...
   14001e2c5:	add    BYTE PTR [rax],al
   14001e2c7:	add    BYTE PTR [rax],cl
   14001e2c9:	cmp    DWORD PTR [rdx],eax
   14001e2cb:	add    BYTE PTR [rbx],al
   14001e2cd:	add    BYTE PTR [rax],al
   14001e2cf:	add    BYTE PTR [rax],al
   14001e2d1:	add    BYTE PTR [rax],al
   14001e2d3:	add    bh,bh
   14001e2d5:	(bad)  
   14001e2d6:	(bad)  
   14001e2d7:	inc    DWORD PTR [rax]
   14001e2d9:	add    BYTE PTR [rax],al
   14001e2db:	add    BYTE PTR [rax+0x0],al
   14001e2de:	add    BYTE PTR [rax],al
   14001e2e0:	mov    dl,ah
   14001e2e2:	add    DWORD PTR [rax],eax
	...
   14001e2f0:	add    DWORD PTR [rax],eax
	...
   14001e2fa:	add    BYTE PTR [rax],al
   14001e2fc:	rex cmp DWORD PTR [rdx],eax
   14001e2ff:	add    BYTE PTR [rax],bl
   14001e301:	jrcxz  0x14001e304
   14001e303:	add    al,dh
   14001e305:	loop   0x14001e308
	...
   14001e31f:	add    BYTE PTR [rax+rax*1],al
   14001e322:	add    BYTE PTR [rax],al
   14001e324:	xor    bl,ah
   14001e326:	add    DWORD PTR [rax],eax
	...
   14001e330:	pop    rax
   14001e331:	jrcxz  0x14001e334
   14001e333:	add    BYTE PTR [rax-0x34],ch
   14001e336:	add    DWORD PTR [rax],eax
   14001e338:	nop
   14001e339:	retf   
   14001e33a:	add    DWORD PTR [rax],eax
   14001e33c:	mov    eax,0x1cb
	...
   14001e355:	add    BYTE PTR [rax],al
   14001e357:	add    BYTE PTR [rax+0x39],al
   14001e35a:	add    al,BYTE PTR [rax]
   14001e35c:	add    eax,DWORD PTR [rax]
   14001e35e:	add    BYTE PTR [rax],al
   14001e360:	add    BYTE PTR [rax],al
   14001e362:	add    BYTE PTR [rax],al
   14001e364:	(bad)  
   14001e365:	(bad)  
   14001e366:	(bad)  
   14001e367:	inc    DWORD PTR [rax]
   14001e369:	add    BYTE PTR [rax],al
   14001e36b:	add    BYTE PTR [rax+0x0],al
   14001e36e:	add    BYTE PTR [rax],al
   14001e370:	sbb    bl,ah
   14001e372:	add    DWORD PTR [rax],eax
	...
   14001e380:	add    DWORD PTR [rax],eax
	...
   14001e38a:	add    BYTE PTR [rax],al
   14001e38c:	jo     0x14001e3c7
   14001e38e:	add    al,BYTE PTR [rax]
   14001e390:	test   al,0xe3
   14001e392:	add    DWORD PTR [rax],eax
   14001e394:	and    bl,0x1
	...
   14001e3af:	add    BYTE PTR [rax+rax*1],al
   14001e3b2:	add    BYTE PTR [rax],al
   14001e3b4:	shl    bl,0x1
	...
   14001e3bf:	add    al,ch
   14001e3c1:	jrcxz  0x14001e3c4
   14001e3c3:	add    al,cl
   14001e3c5:	int3   
   14001e3c6:	add    DWORD PTR [rax],eax
   14001e3c8:	nop
   14001e3c9:	retf   
   14001e3ca:	add    DWORD PTR [rax],eax
   14001e3cc:	mov    eax,0x1cb
	...
   14001e3e5:	add    BYTE PTR [rax],al
   14001e3e7:	add    BYTE PTR [rax+0x39],dh
   14001e3ea:	add    al,BYTE PTR [rax]
   14001e3ec:	add    eax,DWORD PTR [rax]
   14001e3ee:	add    BYTE PTR [rax],al
   14001e3f0:	add    BYTE PTR [rax],al
   14001e3f2:	add    BYTE PTR [rax],al
   14001e3f4:	(bad)  
   14001e3f5:	(bad)  
   14001e3f6:	(bad)  
   14001e3f7:	inc    DWORD PTR [rax]
   14001e3f9:	add    BYTE PTR [rax],al
   14001e3fb:	add    BYTE PTR [rax+0x0],al
   14001e3fe:	add    BYTE PTR [rax],al
   14001e400:	test   al,0xe3
   14001e402:	add    DWORD PTR [rax],eax
	...
   14001e410:	add    DWORD PTR [rax],eax
	...
   14001e41a:	add    BYTE PTR [rax],al
   14001e41c:	cwde   
   14001e41d:	cmp    DWORD PTR [rdx],eax
   14001e41f:	add    BYTE PTR [rax],bh
   14001e421:	in     al,0x1
   14001e423:	add    BYTE PTR [rax],dl
   14001e425:	in     al,0x1
	...
   14001e43f:	add    BYTE PTR [rbx],al
   14001e441:	add    BYTE PTR [rax],al
   14001e443:	add    BYTE PTR [rax-0x1c],dl
   14001e446:	add    DWORD PTR [rax],eax
	...
   14001e450:	jo     0x14001e436
   14001e452:	add    DWORD PTR [rax],eax
   14001e454:	nop
   14001e455:	retf   
   14001e456:	add    DWORD PTR [rax],eax
   14001e458:	mov    eax,0x1cb
	...
   14001e46d:	add    BYTE PTR [rax],al
   14001e46f:	add    BYTE PTR [rax+0x2000239],bl
   14001e475:	add    BYTE PTR [rax],al
   14001e477:	add    BYTE PTR [rax],al
   14001e479:	add    BYTE PTR [rax],al
   14001e47b:	add    bh,bh
   14001e47d:	(bad)  
   14001e47e:	(bad)  
   14001e47f:	inc    DWORD PTR [rax]
   14001e481:	add    BYTE PTR [rax],al
   14001e483:	add    BYTE PTR [rax+0x0],al
   14001e486:	add    BYTE PTR [rax],al
   14001e488:	cmp    ah,ah
   14001e48a:	add    DWORD PTR [rax],eax
	...
   14001e498:	add    DWORD PTR [rax],eax
	...
   14001e4a2:	add    BYTE PTR [rax],al
   14001e4a4:	enter  0x239,0x0
   14001e4a8:	shl    ah,0x1
   14001e4ab:	add    BYTE PTR [rax+0x1e4],bl
	...
   14001e4c5:	add    BYTE PTR [rax],al
   14001e4c7:	add    BYTE PTR [rax+rax*1],al
   14001e4ca:	add    BYTE PTR [rax],al
   14001e4cc:	fsub   st,st(4)
   14001e4ce:	add    DWORD PTR [rax],eax
	...
   14001e4d8:	add    ch,ah
   14001e4da:	add    DWORD PTR [rax],eax
   14001e4dc:	enter  0x1cc,0x0
   14001e4e0:	nop
   14001e4e1:	retf   
   14001e4e2:	add    DWORD PTR [rax],eax
   14001e4e4:	mov    eax,0x1cb
	...
   14001e4fd:	add    BYTE PTR [rax],al
   14001e4ff:	add    al,cl
   14001e501:	cmp    DWORD PTR [rdx],eax
   14001e503:	add    BYTE PTR [rbx],al
   14001e505:	add    BYTE PTR [rax],al
   14001e507:	add    BYTE PTR [rax],al
   14001e509:	add    BYTE PTR [rax],al
   14001e50b:	add    bh,bh
   14001e50d:	(bad)  
   14001e50e:	(bad)  
   14001e50f:	inc    DWORD PTR [rax]
   14001e511:	add    BYTE PTR [rax],al
   14001e513:	add    BYTE PTR [rax+0x0],al
   14001e516:	add    BYTE PTR [rax],al
   14001e518:	shl    ah,0x1
	...
   14001e527:	add    BYTE PTR [rcx],al
	...
   14001e535:	cmp    al,BYTE PTR [rdx]
   14001e537:	add    BYTE PTR [rax-0x1b],dl
   14001e53a:	add    DWORD PTR [rax],eax
   14001e53c:	sub    ch,ah
   14001e53e:	add    DWORD PTR [rax],eax
	...
   14001e558:	add    eax,DWORD PTR [rax]
   14001e55a:	add    BYTE PTR [rax],al
   14001e55c:	push   0x1e5
   14001e561:	add    BYTE PTR [rax],al
   14001e563:	add    BYTE PTR [rax],al
   14001e565:	add    BYTE PTR [rax],al
   14001e567:	add    BYTE PTR [rax-0x6ffffe1b],cl
   14001e56d:	retf   
   14001e56e:	add    DWORD PTR [rax],eax
   14001e570:	mov    eax,0x1cb
	...
   14001e589:	cmp    al,BYTE PTR [rdx]
   14001e58b:	add    BYTE PTR [rdx],al
   14001e58d:	add    BYTE PTR [rax],al
   14001e58f:	add    BYTE PTR [rax],al
   14001e591:	add    BYTE PTR [rax],al
   14001e593:	add    bh,bh
   14001e595:	(bad)  
   14001e596:	(bad)  
   14001e597:	inc    DWORD PTR [rax]
   14001e599:	add    BYTE PTR [rax],al
   14001e59b:	add    BYTE PTR [rax+0x0],al
   14001e59e:	add    BYTE PTR [rax],al
   14001e5a0:	push   rax
   14001e5a1:	in     eax,0x1
	...
   14001e5af:	add    BYTE PTR [rcx],al
	...
   14001e5b9:	add    BYTE PTR [rax],al
   14001e5bb:	add    BYTE PTR [rax],bh
   14001e5bd:	cmp    al,BYTE PTR [rdx]
   14001e5bf:	add    al,bl
   14001e5c1:	in     eax,0x1
   14001e5c3:	add    BYTE PTR [rax+0x1e5],dh
	...
   14001e5dd:	add    BYTE PTR [rax],al
   14001e5df:	add    BYTE PTR [rbx],al
   14001e5e1:	add    BYTE PTR [rax],al
   14001e5e3:	add    al,dh
   14001e5e5:	in     eax,0x1
	...
   14001e5ef:	add    BYTE PTR [rax],dl
   14001e5f1:	out    0x1,al
   14001e5f3:	add    BYTE PTR [rax-0x47fffe35],dl
   14001e5f9:	retf   
   14001e5fa:	add    DWORD PTR [rax],eax
	...
   14001e610:	cmp    BYTE PTR [rdx],bh
   14001e612:	add    al,BYTE PTR [rax]
   14001e614:	add    al,BYTE PTR [rax]
   14001e616:	add    BYTE PTR [rax],al
   14001e618:	add    BYTE PTR [rax],al
   14001e61a:	add    BYTE PTR [rax],al
   14001e61c:	(bad)  
   14001e61d:	(bad)  
   14001e61e:	(bad)  
   14001e61f:	inc    DWORD PTR [rax]
   14001e621:	add    BYTE PTR [rax],al
   14001e623:	add    BYTE PTR [rax+0x0],al
   14001e626:	add    BYTE PTR [rax],al
   14001e628:	fsub   st,st(5)
   14001e62a:	add    DWORD PTR [rax],eax
	...
   14001e638:	add    DWORD PTR [rax],eax
	...
   14001e642:	add    BYTE PTR [rax],al
   14001e644:	js     0x14001e680
   14001e646:	add    al,BYTE PTR [rax]
   14001e648:	(bad)  
   14001e649:	out    0x1,al
   14001e64b:	add    BYTE PTR [rax],bh
   14001e64d:	out    0x1,al
	...
   14001e667:	add    BYTE PTR [rax+rax*1],al
   14001e66a:	add    BYTE PTR [rax],al
   14001e66c:	js     0x14001e654
   14001e66e:	add    DWORD PTR [rax],eax
	...
   14001e678:	movabs al,ds:0x900001ccc80001e6
   14001e681:	retf   
   14001e682:	add    DWORD PTR [rax],eax
   14001e684:	mov    eax,0x1cb
	...
   14001e69d:	add    BYTE PTR [rax],al
   14001e69f:	add    BYTE PTR [rax+0x3a],bh
   14001e6a2:	add    al,BYTE PTR [rax]
   14001e6a4:	add    eax,DWORD PTR [rax]
   14001e6a6:	add    BYTE PTR [rax],al
   14001e6a8:	add    BYTE PTR [rax],al
   14001e6aa:	add    BYTE PTR [rax],al
   14001e6ac:	(bad)  
   14001e6ad:	(bad)  
   14001e6ae:	(bad)  
   14001e6af:	inc    DWORD PTR [rax]
   14001e6b1:	add    BYTE PTR [rax],al
   14001e6b3:	add    BYTE PTR [rax+0x0],al
   14001e6b6:	add    BYTE PTR [rax],al
   14001e6b8:	(bad)  
   14001e6b9:	out    0x1,al
	...
   14001e6c7:	add    BYTE PTR [rcx],al
	...
   14001e6d1:	add    BYTE PTR [rax],al
   14001e6d3:	add    BYTE PTR [rax-0xffffdc6],ch
   14001e6d9:	out    0x1,al
   14001e6db:	add    al,cl
   14001e6dd:	out    0x1,al
	...
   14001e6f7:	add    BYTE PTR [rax+rax*1],al
   14001e6fa:	add    BYTE PTR [rax],al
   14001e6fc:	or     bh,ah
   14001e6fe:	add    DWORD PTR [rax],eax
	...
   14001e708:	xor    bh,ah
   14001e70a:	add    DWORD PTR [rax],eax
   14001e70c:	enter  0x1cc,0x0
   14001e710:	nop
   14001e711:	retf   
   14001e712:	add    DWORD PTR [rax],eax
   14001e714:	mov    eax,0x1cb
	...
   14001e72d:	add    BYTE PTR [rax],al
   14001e72f:	add    BYTE PTR [rax+0x300023a],ch
   14001e735:	add    BYTE PTR [rax],al
   14001e737:	add    BYTE PTR [rax],al
   14001e739:	add    BYTE PTR [rax],al
   14001e73b:	add    bh,bh
   14001e73d:	(bad)  
   14001e73e:	(bad)  
   14001e73f:	inc    DWORD PTR [rax]
   14001e741:	add    BYTE PTR [rax],al
   14001e743:	add    BYTE PTR [rax+0x0],al
   14001e746:	add    BYTE PTR [rax],al
   14001e748:	lock out 0x1,al
	...
   14001e757:	add    BYTE PTR [rcx],al
	...
   14001e761:	add    BYTE PTR [rax],al
   14001e763:	add    al,ah
   14001e765:	cmp    al,BYTE PTR [rdx]
   14001e767:	add    BYTE PTR [rax+0x580001e7],al
   14001e76d:	out    0x1,eax
	...
   14001e787:	add    BYTE PTR [rax+rax*1],al
   14001e78a:	add    BYTE PTR [rax],al
   14001e78c:	cwde   
   14001e78d:	out    0x1,eax
	...
   14001e797:	add    al,al
   14001e799:	out    0x1,eax
   14001e79b:	add    al,cl
   14001e79d:	int3   
   14001e79e:	add    DWORD PTR [rax],eax
   14001e7a0:	nop
   14001e7a1:	retf   
   14001e7a2:	add    DWORD PTR [rax],eax
   14001e7a4:	mov    eax,0x1cb
	...
   14001e7bd:	add    BYTE PTR [rax],al
   14001e7bf:	add    al,ah
   14001e7c1:	cmp    al,BYTE PTR [rdx]
   14001e7c3:	add    BYTE PTR [rbx],al
   14001e7c5:	add    BYTE PTR [rax],al
   14001e7c7:	add    BYTE PTR [rax],al
   14001e7c9:	add    BYTE PTR [rax],al
   14001e7cb:	add    bh,bh
   14001e7cd:	(bad)  
   14001e7ce:	(bad)  
   14001e7cf:	inc    DWORD PTR [rax]
   14001e7d1:	add    BYTE PTR [rax],al
   14001e7d3:	add    BYTE PTR [rax+0x0],al
   14001e7d6:	add    BYTE PTR [rax],al
   14001e7d8:	and    bh,0x1
	...
   14001e7e7:	add    BYTE PTR [rcx],al
	...
   14001e7f1:	add    BYTE PTR [rax],al
   14001e7f3:	add    BYTE PTR [rax],dl
   14001e7f5:	cmp    eax,DWORD PTR [rdx]
   14001e7f7:	add    BYTE PTR [rax],dl
   14001e7f9:	call   0x127e9e7ff
   14001e7fe:	add    DWORD PTR [rax],eax
	...
   14001e818:	add    al,0x0
   14001e81a:	add    BYTE PTR [rax],al
   14001e81c:	sub    al,ch
   14001e81e:	add    DWORD PTR [rax],eax
	...
   14001e828:	push   rax
   14001e829:	call   0x10cc9e82f
   14001e82e:	add    DWORD PTR [rax],eax
   14001e830:	nop
   14001e831:	retf   
   14001e832:	add    DWORD PTR [rax],eax
   14001e834:	mov    eax,0x1cb
	...
   14001e84d:	add    BYTE PTR [rax],al
   14001e84f:	add    BYTE PTR [rax],dl
   14001e851:	cmp    eax,DWORD PTR [rdx]
   14001e853:	add    BYTE PTR [rbx],al
   14001e855:	add    BYTE PTR [rax],al
   14001e857:	add    BYTE PTR [rax],al
   14001e859:	add    BYTE PTR [rax],al
   14001e85b:	add    bh,bh
   14001e85d:	(bad)  
   14001e85e:	(bad)  
   14001e85f:	inc    DWORD PTR [rax]
   14001e861:	add    BYTE PTR [rax],al
   14001e863:	add    BYTE PTR [rax+0x0],al
   14001e866:	add    BYTE PTR [rax],al
   14001e868:	adc    al,ch
   14001e86a:	add    DWORD PTR [rax],eax
	...
   14001e878:	add    DWORD PTR [rax],eax
	...
   14001e882:	add    BYTE PTR [rax],al
   14001e884:	cmp    rax,QWORD PTR [rdx]
   14001e887:	add    BYTE PTR [rax+0x780001e8],ah
   14001e88d:	call   0x14001e893
	...
   14001e8a6:	add    BYTE PTR [rax],al
   14001e8a8:	add    al,0x0
   14001e8aa:	add    BYTE PTR [rax],al
   14001e8ac:	mov    eax,0x1e8
   14001e8b1:	add    BYTE PTR [rax],al
   14001e8b3:	add    BYTE PTR [rax],al
   14001e8b5:	add    BYTE PTR [rax],al
   14001e8b7:	add    al,ah
   14001e8b9:	call   0x10cc9e8bf
   14001e8be:	add    DWORD PTR [rax],eax
   14001e8c0:	nop
   14001e8c1:	retf   
   14001e8c2:	add    DWORD PTR [rax],eax
   14001e8c4:	mov    eax,0x1cb
	...
   14001e8dd:	add    BYTE PTR [rax],al
   14001e8df:	add    BYTE PTR [rax+0x3b],cl
   14001e8e2:	add    al,BYTE PTR [rax]
   14001e8e4:	add    eax,DWORD PTR [rax]
   14001e8e6:	add    BYTE PTR [rax],al
   14001e8e8:	add    BYTE PTR [rax],al
   14001e8ea:	add    BYTE PTR [rax],al
   14001e8ec:	(bad)  
   14001e8ed:	(bad)  
   14001e8ee:	(bad)  
   14001e8ef:	inc    DWORD PTR [rax]
   14001e8f1:	add    BYTE PTR [rax],al
   14001e8f3:	add    BYTE PTR [rax+0x0],al
   14001e8f6:	add    BYTE PTR [rax],al
   14001e8f8:	movabs al,ds:0x1e8
   14001e901:	add    BYTE PTR [rax],al
   14001e903:	add    BYTE PTR [rax],al
   14001e905:	add    BYTE PTR [rax],al
   14001e907:	add    BYTE PTR [rcx],al
	...
   14001e911:	add    BYTE PTR [rax],al
   14001e913:	add    BYTE PTR [rax+0x3b],bh
   14001e916:	add    al,BYTE PTR [rax]
   14001e918:	xor    cl,ch
   14001e91a:	add    DWORD PTR [rax],eax
   14001e91c:	or     cl,ch
   14001e91e:	add    DWORD PTR [rax],eax
	...
   14001e938:	add    al,0x0
   14001e93a:	add    BYTE PTR [rax],al
   14001e93c:	jmp    0x14001e943
   14001e942:	add    BYTE PTR [rax],al
   14001e944:	add    BYTE PTR [rax],al
   14001e946:	add    BYTE PTR [rax],al
   14001e948:	jo     0x14001e933
   14001e94a:	add    DWORD PTR [rax],eax
   14001e94c:	enter  0x1cc,0x0
   14001e950:	nop
   14001e951:	retf   
   14001e952:	add    DWORD PTR [rax],eax
   14001e954:	mov    eax,0x1cb
	...
   14001e96d:	add    BYTE PTR [rax],al
   14001e96f:	add    BYTE PTR [rax+0x3b],bh
   14001e972:	add    al,BYTE PTR [rax]
   14001e974:	add    eax,DWORD PTR [rax]
   14001e976:	add    BYTE PTR [rax],al
   14001e978:	add    BYTE PTR [rax],al
   14001e97a:	add    BYTE PTR [rax],al
   14001e97c:	(bad)  
   14001e97d:	(bad)  
   14001e97e:	(bad)  
   14001e97f:	inc    DWORD PTR [rax]
   14001e981:	add    BYTE PTR [rax],al
   14001e983:	add    BYTE PTR [rax+0x0],al
   14001e986:	add    BYTE PTR [rax],al
   14001e988:	xor    cl,ch
   14001e98a:	add    DWORD PTR [rax],eax
	...
   14001e998:	add    DWORD PTR [rax],eax
	...
   14001e9a2:	add    BYTE PTR [rax],al
   14001e9a4:	test   al,0x3b
   14001e9a6:	add    al,BYTE PTR [rax]
   14001e9a8:	shr    cl,0x1
   14001e9ab:	add    BYTE PTR [rax+0x1e9],bl
	...
   14001e9c5:	add    BYTE PTR [rax],al
   14001e9c7:	add    BYTE PTR [rax+rax*1],al
   14001e9ca:	add    BYTE PTR [rax],al
   14001e9cc:	fsubr  st,st(1)
   14001e9ce:	add    DWORD PTR [rax],eax
	...
   14001e9d8:	add    dl,ch
   14001e9da:	add    DWORD PTR [rax],eax
   14001e9dc:	enter  0x1cc,0x0
   14001e9e0:	nop
   14001e9e1:	retf   
   14001e9e2:	add    DWORD PTR [rax],eax
   14001e9e4:	mov    eax,0x1cb
	...
   14001e9fd:	add    BYTE PTR [rax],al
   14001e9ff:	add    BYTE PTR [rax+0x300023b],ch
   14001ea05:	add    BYTE PTR [rax],al
   14001ea07:	add    BYTE PTR [rax],al
   14001ea09:	add    BYTE PTR [rax],al
   14001ea0b:	add    bh,bh
   14001ea0d:	(bad)  
   14001ea0e:	(bad)  
   14001ea0f:	inc    DWORD PTR [rax]
   14001ea11:	add    BYTE PTR [rax],al
   14001ea13:	add    BYTE PTR [rax+0x0],al
   14001ea16:	add    BYTE PTR [rax],al
   14001ea18:	shr    cl,0x1
	...
   14001ea27:	add    BYTE PTR [rcx],al
	...
   14001ea31:	add    BYTE PTR [rax],al
   14001ea33:	add    al,ah
   14001ea35:	cmp    eax,DWORD PTR [rdx]
   14001ea37:	add    BYTE PTR [rax-0x16],dl
   14001ea3a:	add    DWORD PTR [rax],eax
   14001ea3c:	sub    dl,ch
   14001ea3e:	add    DWORD PTR [rax],eax
	...
   14001ea58:	add    al,0x0
   14001ea5a:	add    BYTE PTR [rax],al
   14001ea5c:	push   0x1ea
   14001ea61:	add    BYTE PTR [rax],al
   14001ea63:	add    BYTE PTR [rax],al
   14001ea65:	add    BYTE PTR [rax],al
   14001ea67:	add    BYTE PTR [rax-0x37fffe16],dl
   14001ea6d:	int3   
   14001ea6e:	add    DWORD PTR [rax],eax
   14001ea70:	nop
   14001ea71:	retf   
   14001ea72:	add    DWORD PTR [rax],eax
   14001ea74:	mov    eax,0x1cb
	...
   14001ea8d:	add    BYTE PTR [rax],al
   14001ea8f:	add    al,ah
   14001ea91:	cmp    eax,DWORD PTR [rdx]
   14001ea93:	add    BYTE PTR [rbx],al
   14001ea95:	add    BYTE PTR [rax],al
   14001ea97:	add    BYTE PTR [rax],al
   14001ea99:	add    BYTE PTR [rax],al
   14001ea9b:	add    bh,bh
   14001ea9d:	(bad)  
   14001ea9e:	(bad)  
   14001ea9f:	inc    DWORD PTR [rax]
   14001eaa1:	add    BYTE PTR [rax],al
   14001eaa3:	add    BYTE PTR [rax+0x0],al
   14001eaa6:	add    BYTE PTR [rax],al
   14001eaa8:	push   rax
   14001eaa9:	(bad)  
   14001eaaa:	add    DWORD PTR [rax],eax
	...
   14001eab8:	add    DWORD PTR [rax],eax
	...
   14001eac2:	add    BYTE PTR [rax],al
   14001eac4:	sbb    BYTE PTR [rdx+rax*1],bh
   14001eac7:	add    al,ah
   14001eac9:	(bad)  
   14001eaca:	add    DWORD PTR [rax],eax
   14001eacc:	mov    eax,0x1ea
	...
   14001eae5:	add    BYTE PTR [rax],al
   14001eae7:	add    BYTE PTR [rax+rax*1],al
   14001eaea:	add    BYTE PTR [rax],al
   14001eaec:	clc    
   14001eaed:	(bad)  
   14001eaee:	add    DWORD PTR [rax],eax
	...
   14001eaf8:	and    bl,ch
   14001eafa:	add    DWORD PTR [rax],eax
   14001eafc:	enter  0x1cc,0x0
   14001eb00:	nop
   14001eb01:	retf   
   14001eb02:	add    DWORD PTR [rax],eax
   14001eb04:	mov    eax,0x1cb
	...
   14001eb1d:	add    BYTE PTR [rax],al
   14001eb1f:	add    BYTE PTR [rax],bl
   14001eb21:	cmp    al,0x2
   14001eb23:	add    BYTE PTR [rbx],al
   14001eb25:	add    BYTE PTR [rax],al
   14001eb27:	add    BYTE PTR [rax],al
   14001eb29:	add    BYTE PTR [rax],al
   14001eb2b:	add    bh,bh
   14001eb2d:	(bad)  
   14001eb2e:	(bad)  
   14001eb2f:	inc    DWORD PTR [rax]
   14001eb31:	add    BYTE PTR [rax],al
   14001eb33:	add    BYTE PTR [rax+0x0],al
   14001eb36:	add    BYTE PTR [rax],al
   14001eb38:	loopne 0x14001eb24
   14001eb3a:	add    DWORD PTR [rax],eax
	...
   14001eb48:	add    DWORD PTR [rax],eax
	...
   14001eb52:	add    BYTE PTR [rax],al
   14001eb54:	push   rax
   14001eb55:	cmp    al,0x2
   14001eb57:	add    BYTE PTR [rax-0x15],dh
   14001eb5a:	add    DWORD PTR [rax],eax
   14001eb5c:	rex.W jmp 0x14001eb60
	...
   14001eb77:	add    BYTE PTR [rax+rax*1],al
   14001eb7a:	add    BYTE PTR [rax],al
   14001eb7c:	mov    bl,ch
   14001eb7e:	add    DWORD PTR [rax],eax
	...
   14001eb88:	mov    al,0xeb
   14001eb8a:	add    DWORD PTR [rax],eax
   14001eb8c:	enter  0x1cc,0x0
   14001eb90:	nop
   14001eb91:	retf   
   14001eb92:	add    DWORD PTR [rax],eax
   14001eb94:	mov    eax,0x1cb
	...
   14001ebad:	add    BYTE PTR [rax],al
   14001ebaf:	add    BYTE PTR [rax+0x3c],dl
   14001ebb2:	add    al,BYTE PTR [rax]
   14001ebb4:	add    eax,DWORD PTR [rax]
   14001ebb6:	add    BYTE PTR [rax],al
   14001ebb8:	add    BYTE PTR [rax],al
   14001ebba:	add    BYTE PTR [rax],al
   14001ebbc:	(bad)  
   14001ebbd:	(bad)  
   14001ebbe:	(bad)  
   14001ebbf:	inc    DWORD PTR [rax]
   14001ebc1:	add    BYTE PTR [rax],al
   14001ebc3:	add    BYTE PTR [rax+0x0],al
   14001ebc6:	add    BYTE PTR [rax],al
   14001ebc8:	jo     0x14001ebb5
   14001ebca:	add    DWORD PTR [rax],eax
	...
   14001ebd8:	add    DWORD PTR [rax],eax
	...
   14001ebe2:	add    BYTE PTR [rax],al
   14001ebe4:	mov    BYTE PTR [rdx+rax*1],bh
   14001ebe7:	add    BYTE PTR [rax],al
   14001ebe9:	in     al,dx
   14001ebea:	add    DWORD PTR [rax],eax
   14001ebec:	fsubr  st,st(3)
   14001ebee:	add    DWORD PTR [rax],eax
	...
   14001ec08:	add    al,0x0
   14001ec0a:	add    BYTE PTR [rax],al
   14001ec0c:	sbb    ah,ch
   14001ec0e:	add    DWORD PTR [rax],eax
	...
   14001ec18:	in     al,dx
   14001ec1a:	add    DWORD PTR [rax],eax
   14001ec1c:	enter  0x1cc,0x0
   14001ec20:	nop
   14001ec21:	retf   
   14001ec22:	add    DWORD PTR [rax],eax
   14001ec24:	mov    eax,0x1cb
	...
   14001ec3d:	add    BYTE PTR [rax],al
   14001ec3f:	add    BYTE PTR [rax+0x300023c],cl
   14001ec45:	add    BYTE PTR [rax],al
   14001ec47:	add    BYTE PTR [rax],al
   14001ec49:	add    BYTE PTR [rax],al
   14001ec4b:	add    bh,bh
   14001ec4d:	(bad)  
   14001ec4e:	(bad)  
   14001ec4f:	inc    DWORD PTR [rax]
   14001ec51:	add    BYTE PTR [rax],al
   14001ec53:	add    BYTE PTR [rax+0x0],al
   14001ec56:	add    BYTE PTR [rax],al
   14001ec58:	add    ah,ch
   14001ec5a:	add    DWORD PTR [rax],eax
	...
   14001ec68:	add    DWORD PTR [rax],eax
	...
   14001ec72:	add    BYTE PTR [rax],al
   14001ec74:	mov    eax,0x9000023c
   14001ec79:	in     al,dx
   14001ec7a:	add    DWORD PTR [rax],eax
   14001ec7c:	push   0x1ec
	...
   14001ec95:	add    BYTE PTR [rax],al
   14001ec97:	add    BYTE PTR [rax+rax*1],al
   14001ec9a:	add    BYTE PTR [rax],al
   14001ec9c:	test   al,0xec
   14001ec9e:	add    DWORD PTR [rax],eax
	...
   14001eca8:	shr    ah,1
   14001ecaa:	add    DWORD PTR [rax],eax
   14001ecac:	enter  0x1cc,0x0
   14001ecb0:	nop
   14001ecb1:	retf   
   14001ecb2:	add    DWORD PTR [rax],eax
   14001ecb4:	mov    eax,0x1cb
	...
   14001eccd:	add    BYTE PTR [rax],al
   14001eccf:	add    BYTE PTR [rax+0x300023c],bh
   14001ecd5:	add    BYTE PTR [rax],al
   14001ecd7:	add    BYTE PTR [rax],al
   14001ecd9:	add    BYTE PTR [rax],al
   14001ecdb:	add    bh,bh
   14001ecdd:	(bad)  
   14001ecde:	(bad)  
   14001ecdf:	inc    DWORD PTR [rax]
   14001ece1:	add    BYTE PTR [rax],al
   14001ece3:	add    BYTE PTR [rax+0x0],al
   14001ece6:	add    BYTE PTR [rax],al
   14001ece8:	nop
   14001ece9:	in     al,dx
   14001ecea:	add    DWORD PTR [rax],eax
	...
   14001ecf8:	add    DWORD PTR [rax],eax
	...
   14001ed02:	add    BYTE PTR [rax],al
   14001ed04:	lock cmp al,0x2
   14001ed07:	add    BYTE PTR [rax],ah
   14001ed09:	in     eax,dx
   14001ed0a:	add    DWORD PTR [rax],eax
   14001ed0c:	clc    
   14001ed0d:	in     al,dx
   14001ed0e:	add    DWORD PTR [rax],eax
	...
   14001ed28:	add    al,0x0
   14001ed2a:	add    BYTE PTR [rax],al
   14001ed2c:	cmp    ch,ch
   14001ed2e:	add    DWORD PTR [rax],eax
	...
   14001ed38:	(bad)  
   14001ed39:	in     eax,dx
   14001ed3a:	add    DWORD PTR [rax],eax
   14001ed3c:	enter  0x1cc,0x0
   14001ed40:	nop
   14001ed41:	retf   
   14001ed42:	add    DWORD PTR [rax],eax
   14001ed44:	mov    eax,0x1cb
	...
   14001ed5d:	add    BYTE PTR [rax],al
   14001ed5f:	add    al,dh
   14001ed61:	cmp    al,0x2
   14001ed63:	add    BYTE PTR [rbx],al
   14001ed65:	add    BYTE PTR [rax],al
   14001ed67:	add    BYTE PTR [rax],al
   14001ed69:	add    BYTE PTR [rax],al
   14001ed6b:	add    bh,bh
   14001ed6d:	(bad)  
   14001ed6e:	(bad)  
   14001ed6f:	inc    DWORD PTR [rax]
   14001ed71:	add    BYTE PTR [rax],al
   14001ed73:	add    BYTE PTR [rax+0x0],al
   14001ed76:	add    BYTE PTR [rax],al
   14001ed78:	and    ch,ch
   14001ed7a:	add    DWORD PTR [rax],eax
	...
   14001ed88:	add    DWORD PTR [rax],eax
	...
   14001ed92:	add    BYTE PTR [rax],al
   14001ed94:	and    BYTE PTR [rip+0xffffffffedb00002],bh        # 0x12db1ed9c
   14001ed9a:	add    DWORD PTR [rax],eax
   14001ed9c:	mov    ch,ch
   14001ed9e:	add    DWORD PTR [rax],eax
	...
   14001edb8:	add    eax,DWORD PTR [rax]
   14001edba:	add    BYTE PTR [rax],al
   14001edbc:	enter  0x1ed,0x0
	...
   14001edc8:	call   0xd001efba
   14001edcd:	retf   
   14001edce:	add    DWORD PTR [rax],eax
   14001edd0:	mov    eax,0x1cb
	...
   14001ede5:	add    BYTE PTR [rax],al
   14001ede7:	add    BYTE PTR [rax],ah
   14001ede9:	cmp    eax,0x20002
   14001edee:	add    BYTE PTR [rax],al
   14001edf0:	add    BYTE PTR [rax],al
   14001edf2:	add    BYTE PTR [rax],al
   14001edf4:	(bad)  
   14001edf5:	(bad)  
   14001edf6:	(bad)  
   14001edf7:	inc    DWORD PTR [rax]
   14001edf9:	add    BYTE PTR [rax],al
   14001edfb:	add    BYTE PTR [rax+0x0],al
   14001edfe:	add    BYTE PTR [rax],al
   14001ee00:	mov    al,0xed
   14001ee02:	add    DWORD PTR [rax],eax
	...
   14001ee10:	add    DWORD PTR [rax],eax
	...
   14001ee1a:	add    BYTE PTR [rax],al
   14001ee1c:	push   rax
   14001ee1d:	cmp    eax,0xee380002
   14001ee22:	add    DWORD PTR [rax],eax
   14001ee24:	adc    dh,ch
   14001ee26:	add    DWORD PTR [rax],eax
	...
   14001ee40:	add    al,0x0
   14001ee42:	add    BYTE PTR [rax],al
   14001ee44:	push   rax
   14001ee45:	out    dx,al
   14001ee46:	add    DWORD PTR [rax],eax
	...
   14001ee50:	js     0x14001ee40
   14001ee52:	add    DWORD PTR [rax],eax
   14001ee54:	enter  0x1cc,0x0
   14001ee58:	nop
   14001ee59:	retf   
   14001ee5a:	add    DWORD PTR [rax],eax
   14001ee5c:	mov    eax,0x1cb
	...
   14001ee75:	add    BYTE PTR [rax],al
   14001ee77:	add    BYTE PTR [rax+0x3d],dl
   14001ee7a:	add    al,BYTE PTR [rax]
   14001ee7c:	add    eax,DWORD PTR [rax]
   14001ee7e:	add    BYTE PTR [rax],al
   14001ee80:	add    BYTE PTR [rax],al
   14001ee82:	add    BYTE PTR [rax],al
   14001ee84:	(bad)  
   14001ee85:	(bad)  
   14001ee86:	(bad)  
   14001ee87:	inc    DWORD PTR [rax]
   14001ee89:	add    BYTE PTR [rax],al
   14001ee8b:	add    BYTE PTR [rax+0x0],al
   14001ee8e:	add    BYTE PTR [rax],al
   14001ee90:	cmp    dh,ch
   14001ee92:	add    DWORD PTR [rax],eax
	...
   14001eea0:	add    DWORD PTR [rax],eax
	...
   14001eeaa:	add    BYTE PTR [rax],al
   14001eeac:	mov    BYTE PTR [rip+0xffffffffeec80002],bh        # 0x12ec9eeb4
   14001eeb2:	add    DWORD PTR [rax],eax
   14001eeb4:	movabs al,ds:0x1ee
	...
   14001eecd:	add    BYTE PTR [rax],al
   14001eecf:	add    BYTE PTR [rbx],al
   14001eed1:	add    BYTE PTR [rax],al
   14001eed3:	add    al,ah
   14001eed5:	out    dx,al
   14001eed6:	add    DWORD PTR [rax],eax
	...
   14001eee0:	add    bh,ch
   14001eee2:	add    DWORD PTR [rax],eax
   14001eee4:	nop
   14001eee5:	retf   
   14001eee6:	add    DWORD PTR [rax],eax
   14001eee8:	mov    eax,0x1cb
	...
   14001eefd:	add    BYTE PTR [rax],al
   14001eeff:	add    BYTE PTR [rax+0x200023d],cl
   14001ef05:	add    BYTE PTR [rax],al
   14001ef07:	add    BYTE PTR [rax],al
   14001ef09:	add    BYTE PTR [rax],al
   14001ef0b:	add    bh,bh
   14001ef0d:	(bad)  
   14001ef0e:	(bad)  
   14001ef0f:	inc    DWORD PTR [rax]
   14001ef11:	add    BYTE PTR [rax],al
   14001ef13:	add    BYTE PTR [rax+0x0],al
   14001ef16:	add    BYTE PTR [rax],al
   14001ef18:	enter  0x1ee,0x0
	...
   14001ef28:	add    DWORD PTR [rax],eax
	...
   14001ef32:	add    BYTE PTR [rax],al
   14001ef34:	mov    eax,0x5000023d
   14001ef39:	out    dx,eax
   14001ef3a:	add    DWORD PTR [rax],eax
   14001ef3c:	sub    bh,ch
   14001ef3e:	add    DWORD PTR [rax],eax
	...
   14001ef58:	add    eax,DWORD PTR [rax]
   14001ef5a:	add    BYTE PTR [rax],al
   14001ef5c:	push   0x1ef
   14001ef61:	add    BYTE PTR [rax],al
   14001ef63:	add    BYTE PTR [rax],al
   14001ef65:	add    BYTE PTR [rax],al
   14001ef67:	add    BYTE PTR [rax-0x6ffffe11],cl
   14001ef6d:	retf   
   14001ef6e:	add    DWORD PTR [rax],eax
   14001ef70:	mov    eax,0x1cb
	...
   14001ef85:	add    BYTE PTR [rax],al
   14001ef87:	add    BYTE PTR [rax+0x200023d],bh
   14001ef8d:	add    BYTE PTR [rax],al
   14001ef8f:	add    BYTE PTR [rax],al
   14001ef91:	add    BYTE PTR [rax],al
   14001ef93:	add    bh,bh
   14001ef95:	(bad)  
   14001ef96:	(bad)  
   14001ef97:	inc    DWORD PTR [rax]
   14001ef99:	add    BYTE PTR [rax],al
   14001ef9b:	add    BYTE PTR [rax+0x0],al
   14001ef9e:	add    BYTE PTR [rax],al
   14001efa0:	push   rax
   14001efa1:	out    dx,eax
   14001efa2:	add    DWORD PTR [rax],eax
	...
   14001efb0:	add    DWORD PTR [rax],eax
	...
   14001efba:	add    BYTE PTR [rax],al
   14001efbc:	call   0x11801f1fe
   14001efc1:	out    dx,eax
   14001efc2:	add    DWORD PTR [rax],eax
   14001efc4:	mov    al,0xef
   14001efc6:	add    DWORD PTR [rax],eax
	...
   14001efe0:	add    eax,DWORD PTR [rax]
   14001efe2:	add    BYTE PTR [rax],al
   14001efe4:	lock out dx,eax
   14001efe6:	add    DWORD PTR [rax],eax
	...
   14001eff0:	adc    al,dh
   14001eff2:	add    DWORD PTR [rax],eax
   14001eff4:	nop
   14001eff5:	retf   
   14001eff6:	add    DWORD PTR [rax],eax
   14001eff8:	mov    eax,0x1cb
	...
   14001f00d:	add    BYTE PTR [rax],al
   14001f00f:	add    al,ch
   14001f011:	cmp    eax,0x20002
   14001f016:	add    BYTE PTR [rax],al
   14001f018:	add    BYTE PTR [rax],al
   14001f01a:	add    BYTE PTR [rax],al
   14001f01c:	(bad)  
   14001f01d:	(bad)  
   14001f01e:	(bad)  
   14001f01f:	inc    DWORD PTR [rax]
   14001f021:	add    BYTE PTR [rax],al
   14001f023:	add    BYTE PTR [rax+0x0],al
   14001f026:	add    BYTE PTR [rax],al
   14001f028:	fsubr  st,st(7)
   14001f02a:	add    DWORD PTR [rax],eax
	...
   14001f038:	add    DWORD PTR [rax],eax
	...
   14001f042:	add    BYTE PTR [rax],al
   14001f044:	sbb    BYTE PTR [rsi],bh
   14001f046:	add    al,BYTE PTR [rax]
   14001f048:	(bad)  
   14001f049:	lock add DWORD PTR [rax],eax
   14001f04c:	cmp    al,dh
   14001f04e:	add    DWORD PTR [rax],eax
	...
   14001f068:	add    al,0x0
   14001f06a:	add    BYTE PTR [rax],al
   14001f06c:	js     0x14001f05e
   14001f06e:	add    DWORD PTR [rax],eax
	...
   14001f078:	movabs al,ds:0x900001ccc80001f0
   14001f081:	retf   
   14001f082:	add    DWORD PTR [rax],eax
   14001f084:	mov    eax,0x1cb
	...
   14001f09d:	add    BYTE PTR [rax],al
   14001f09f:	add    BYTE PTR [rax],bl
   14001f0a1:	add    al,BYTE PTR ds:[rax]
   14001f0a4:	add    eax,DWORD PTR [rax]
   14001f0a6:	add    BYTE PTR [rax],al
   14001f0a8:	add    BYTE PTR [rax],al
   14001f0aa:	add    BYTE PTR [rax],al
   14001f0ac:	(bad)  
   14001f0ad:	(bad)  
   14001f0ae:	(bad)  
   14001f0af:	inc    DWORD PTR [rax]
   14001f0b1:	add    BYTE PTR [rax],al
   14001f0b3:	add    BYTE PTR [rax+0x0],al
   14001f0b6:	add    BYTE PTR [rax],al
   14001f0b8:	(bad)  
   14001f0b9:	lock add DWORD PTR [rax],eax
	...
   14001f0c8:	add    DWORD PTR [rax],eax
	...
   14001f0d2:	add    BYTE PTR [rax],al
   14001f0d4:	push   rax
   14001f0d5:	add    al,BYTE PTR ds:[rax]
   14001f0d8:	lock lock add DWORD PTR [rax],eax
   14001f0dc:	enter  0x1f0,0x0
	...
   14001f0f8:	add    al,0x0
   14001f0fa:	add    BYTE PTR [rax],al
   14001f0fc:	or     cl,dh
   14001f0fe:	add    DWORD PTR [rax],eax
	...
   14001f108:	xor    cl,dh
   14001f10a:	add    DWORD PTR [rax],eax
   14001f10c:	enter  0x1cc,0x0
   14001f110:	nop
   14001f111:	retf   
   14001f112:	add    DWORD PTR [rax],eax
   14001f114:	mov    eax,0x1cb
	...
   14001f12d:	add    BYTE PTR [rax],al
   14001f12f:	add    BYTE PTR [rax+0x3e],dl
   14001f132:	add    al,BYTE PTR [rax]
   14001f134:	add    eax,DWORD PTR [rax]
   14001f136:	add    BYTE PTR [rax],al
   14001f138:	add    BYTE PTR [rax],al
   14001f13a:	add    BYTE PTR [rax],al
   14001f13c:	(bad)  
   14001f13d:	(bad)  
   14001f13e:	(bad)  
   14001f13f:	inc    DWORD PTR [rax]
   14001f141:	add    BYTE PTR [rax],al
   14001f143:	add    BYTE PTR [rax+0x0],al
   14001f146:	add    BYTE PTR [rax],al
   14001f148:	lock lock add DWORD PTR [rax],eax
	...
   14001f158:	add    DWORD PTR [rax],eax
	...
   14001f162:	add    BYTE PTR [rax],al
   14001f164:	cmp    BYTE PTR [rsi],0x2
   14001f167:	add    BYTE PTR [rax+0x580001f1],al
   14001f16d:	icebp  
   14001f16e:	add    DWORD PTR [rax],eax
	...
   14001f188:	add    eax,DWORD PTR [rax]
   14001f18a:	add    BYTE PTR [rax],al
   14001f18c:	cwde   
   14001f18d:	icebp  
   14001f18e:	add    DWORD PTR [rax],eax
	...
   14001f198:	mov    eax,0x900001f1
   14001f19d:	retf   
   14001f19e:	add    DWORD PTR [rax],eax
   14001f1a0:	mov    eax,0x1cb
	...
   14001f1b5:	add    BYTE PTR [rax],al
   14001f1b7:	add    BYTE PTR [rax+0x200023e],al
   14001f1bd:	add    BYTE PTR [rax],al
   14001f1bf:	add    BYTE PTR [rax],al
   14001f1c1:	add    BYTE PTR [rax],al
   14001f1c3:	add    bh,bh
   14001f1c5:	(bad)  
   14001f1c6:	(bad)  
   14001f1c7:	inc    DWORD PTR [rax]
   14001f1c9:	add    BYTE PTR [rax],al
   14001f1cb:	add    BYTE PTR [rax+0x0],al
   14001f1ce:	add    BYTE PTR [rax],al
   14001f1d0:	xor    cl,0x1
	...
   14001f1df:	add    BYTE PTR [rcx],al
	...
   14001f1e9:	add    BYTE PTR [rax],al
   14001f1eb:	add    BYTE PTR [rax+0x800023e],ch
   14001f1f1:	repnz add DWORD PTR [rax],eax
   14001f1f4:	loopne 0x14001f1e7
   14001f1f6:	add    DWORD PTR [rax],eax
	...
   14001f210:	add    eax,DWORD PTR [rax]
   14001f212:	add    BYTE PTR [rax],al
   14001f214:	and    dl,dh
   14001f216:	add    DWORD PTR [rax],eax
	...
   14001f220:	rex
   14001f221:	repnz add DWORD PTR [rax],eax
   14001f224:	nop
   14001f225:	retf   
   14001f226:	add    DWORD PTR [rax],eax
   14001f228:	mov    eax,0x1cb
	...
   14001f23d:	add    BYTE PTR [rax],al
   14001f23f:	add    BYTE PTR [rax+0x200023e],ch
   14001f245:	add    BYTE PTR [rax],al
   14001f247:	add    BYTE PTR [rax],al
   14001f249:	add    BYTE PTR [rax],al
   14001f24b:	add    bh,bh
   14001f24d:	(bad)  
   14001f24e:	(bad)  
   14001f24f:	inc    DWORD PTR [rax]
   14001f251:	add    BYTE PTR [rax],al
   14001f253:	add    BYTE PTR [rax+0x0],al
   14001f256:	add    BYTE PTR [rax],al
   14001f258:	or     dl,dh
   14001f25a:	add    DWORD PTR [rax],eax
	...
   14001f268:	add    DWORD PTR [rax],eax
	...
   14001f272:	add    BYTE PTR [rax],al
   14001f274:	fdivr  DWORD PTR [rsi]
   14001f276:	add    al,BYTE PTR [rax]
   14001f278:	nop
   14001f279:	repnz add DWORD PTR [rax],eax
   14001f27c:	push   0x1f2
	...
   14001f295:	add    BYTE PTR [rax],al
   14001f297:	add    BYTE PTR [rax+rax*1],al
   14001f29a:	add    BYTE PTR [rax],al
   14001f29c:	test   al,0xf2
   14001f29e:	add    DWORD PTR [rax],eax
	...
   14001f2a8:	shl    dl,1
   14001f2aa:	add    DWORD PTR [rax],eax
   14001f2ac:	enter  0x1cc,0x0
   14001f2b0:	nop
   14001f2b1:	retf   
   14001f2b2:	add    DWORD PTR [rax],eax
   14001f2b4:	mov    eax,0x1cb
	...
   14001f2cd:	add    BYTE PTR [rax],al
   14001f2cf:	add    al,bl
   14001f2d1:	add    al,BYTE PTR ds:[rax]
   14001f2d4:	add    eax,DWORD PTR [rax]
   14001f2d6:	add    BYTE PTR [rax],al
   14001f2d8:	add    BYTE PTR [rax],al
   14001f2da:	add    BYTE PTR [rax],al
   14001f2dc:	(bad)  
   14001f2dd:	(bad)  
   14001f2de:	(bad)  
   14001f2df:	inc    DWORD PTR [rax]
   14001f2e1:	add    BYTE PTR [rax],al
   14001f2e3:	add    BYTE PTR [rax+0x0],al
   14001f2e6:	add    BYTE PTR [rax],al
   14001f2e8:	nop
   14001f2e9:	repnz add DWORD PTR [rax],eax
	...
   14001f2f8:	add    DWORD PTR [rax],eax
	...
   14001f302:	add    BYTE PTR [rax],al
   14001f304:	or     BYTE PTR [rdi],bh
   14001f306:	add    al,BYTE PTR [rax]
   14001f308:	and    bl,dh
   14001f30a:	add    DWORD PTR [rax],eax
   14001f30c:	clc    
   14001f30d:	repnz add DWORD PTR [rax],eax
	...
   14001f328:	add    al,0x0
   14001f32a:	add    BYTE PTR [rax],al
   14001f32c:	cmp    bl,dh
   14001f32e:	add    DWORD PTR [rax],eax
	...
   14001f338:	(bad)  
   14001f339:	repz add DWORD PTR [rax],eax
   14001f33c:	push   0xffffffff900001cc
   14001f341:	retf   
   14001f342:	add    DWORD PTR [rax],eax
   14001f344:	mov    eax,0x1cb
	...
   14001f35d:	add    BYTE PTR [rax],al
   14001f35f:	add    BYTE PTR [rax],cl
   14001f361:	(bad)  
   14001f362:	add    al,BYTE PTR [rax]
   14001f364:	add    eax,DWORD PTR [rax]
   14001f366:	add    BYTE PTR [rax],al
   14001f368:	add    BYTE PTR [rax],al
   14001f36a:	add    BYTE PTR [rax],al
   14001f36c:	(bad)  
   14001f36d:	(bad)  
   14001f36e:	(bad)  
   14001f36f:	inc    DWORD PTR [rax]
   14001f371:	add    BYTE PTR [rax],al
   14001f373:	add    BYTE PTR [rax+0x0],al
   14001f376:	add    BYTE PTR [rax],al
   14001f378:	and    bl,dh
   14001f37a:	add    DWORD PTR [rax],eax
	...
   14001f388:	add    DWORD PTR [rax],eax
	...
   14001f392:	add    BYTE PTR [rax],al
   14001f394:	rex (bad) 
   14001f396:	add    al,BYTE PTR [rax]
   14001f398:	mov    al,0xf3
   14001f39a:	add    DWORD PTR [rax],eax
   14001f39c:	mov    bl,dh
   14001f39e:	add    DWORD PTR [rax],eax
	...
   14001f3b8:	add    eax,0xc8000000
   14001f3bd:	repz add DWORD PTR [rax],eax
	...
   14001f3c8:	clc    
   14001f3c9:	repz add DWORD PTR [rax],eax
   14001f3cc:	(bad)  
   14001f3cd:	repz add DWORD PTR [rax],eax
   14001f3d0:	push   0xffffffff900001cc
   14001f3d5:	retf   
   14001f3d6:	add    DWORD PTR [rax],eax
   14001f3d8:	mov    eax,0x1cb
	...
   14001f3f5:	add    BYTE PTR [rax],al
   14001f3f7:	add    BYTE PTR [rax+0x3f],al
   14001f3fa:	add    al,BYTE PTR [rax]
   14001f3fc:	add    al,0x0
   14001f3fe:	add    BYTE PTR [rax],al
   14001f400:	add    BYTE PTR [rax],al
   14001f402:	add    BYTE PTR [rax],al
   14001f404:	(bad)  
   14001f405:	(bad)  
   14001f406:	(bad)  
   14001f407:	inc    DWORD PTR [rax]
   14001f409:	add    BYTE PTR [rax],al
   14001f40b:	add    BYTE PTR [rax+0x0],al
   14001f40e:	add    BYTE PTR [rax],al
   14001f410:	mov    al,0xf3
   14001f412:	add    DWORD PTR [rax],eax
	...
   14001f420:	add    DWORD PTR [rax],eax
	...
   14001f42a:	add    BYTE PTR [rax],al
   14001f42c:	js     0x14001f46d
   14001f42e:	add    al,BYTE PTR [rax]
   14001f430:	rex.W hlt 
   14001f432:	add    DWORD PTR [rax],eax
   14001f434:	and    ah,dh
   14001f436:	add    DWORD PTR [rax],eax
	...
   14001f450:	add    eax,DWORD PTR [rax]
   14001f452:	add    BYTE PTR [rax],al
   14001f454:	(bad)  
   14001f455:	hlt    
   14001f456:	add    DWORD PTR [rax],eax
	...
   14001f460:	xor    ah,0x1
   14001f463:	add    BYTE PTR [rax-0x47fffe35],dl
   14001f469:	retf   
   14001f46a:	add    DWORD PTR [rax],eax
	...
   14001f480:	js     0x14001f4c1
   14001f482:	add    al,BYTE PTR [rax]
   14001f484:	add    al,BYTE PTR [rax]
   14001f486:	add    BYTE PTR [rax],al
   14001f488:	add    BYTE PTR [rax],al
   14001f48a:	add    BYTE PTR [rax],al
   14001f48c:	(bad)  
   14001f48d:	(bad)  
   14001f48e:	(bad)  
   14001f48f:	inc    DWORD PTR [rax]
   14001f491:	add    BYTE PTR [rax],al
   14001f493:	add    BYTE PTR [rax+0x0],al
   14001f496:	add    BYTE PTR [rax],al
   14001f498:	rex.W hlt 
   14001f49a:	add    DWORD PTR [rax],eax
	...
   14001f4b0:	add    eax,DWORD PTR [rax]
   14001f4b2:	add    BYTE PTR [rax],al
   14001f4b4:	shl    ah,0x1
	...
   14001f4bf:	add    al,ah
   14001f4c1:	hlt    
   14001f4c2:	add    DWORD PTR [rax],eax
   14001f4c4:	nop
   14001f4c5:	retf   
   14001f4c6:	add    DWORD PTR [rax],eax
   14001f4c8:	mov    eax,0x1cb
	...
   14001f4dd:	add    BYTE PTR [rax],al
   14001f4df:	add    BYTE PTR [rax+0x200023f],dh
   14001f4e5:	add    BYTE PTR [rax],al
   14001f4e7:	add    BYTE PTR [rax],al
   14001f4e9:	add    BYTE PTR [rax],al
   14001f4eb:	add    bh,bh
   14001f4ed:	(bad)  
   14001f4ee:	(bad)  
   14001f4ef:	inc    DWORD PTR [rax]
   14001f4f1:	add    BYTE PTR [rax],al
   14001f4f3:	add    BYTE PTR [rax+0x0],al
   14001f4f6:	add    BYTE PTR [rax],al
   14001f4f8:	test   al,0xf4
   14001f4fa:	add    DWORD PTR [rax],eax
	...
   14001f508:	add    DWORD PTR [rax],eax
	...
   14001f512:	add    BYTE PTR [rax],al
   14001f514:	loopne 0x14001f555
   14001f516:	add    al,BYTE PTR [rax]
   14001f518:	xor    ch,dh
   14001f51a:	add    DWORD PTR [rax],eax
   14001f51c:	or     ch,dh
   14001f51e:	add    DWORD PTR [rax],eax
	...
   14001f538:	add    eax,DWORD PTR [rax]
   14001f53a:	add    BYTE PTR [rax],al
   14001f53c:	rex.W cmc 
   14001f53e:	add    DWORD PTR [rax],eax
	...
   14001f548:	push   0xffffffff900001f5
   14001f54d:	retf   
   14001f54e:	add    DWORD PTR [rax],eax
   14001f550:	mov    eax,0x1cb
	...
   14001f565:	add    BYTE PTR [rax],al
   14001f567:	add    al,ah
   14001f569:	(bad)  
   14001f56a:	add    al,BYTE PTR [rax]
   14001f56c:	add    al,BYTE PTR [rax]
   14001f56e:	add    BYTE PTR [rax],al
   14001f570:	add    BYTE PTR [rax],al
   14001f572:	add    BYTE PTR [rax],al
   14001f574:	(bad)  
   14001f575:	(bad)  
   14001f576:	(bad)  
   14001f577:	inc    DWORD PTR [rax]
   14001f579:	add    BYTE PTR [rax],al
   14001f57b:	add    BYTE PTR [rax+0x0],al
   14001f57e:	add    BYTE PTR [rax],al
   14001f580:	xor    ch,dh
   14001f582:	add    DWORD PTR [rax],eax
	...
   14001f590:	add    DWORD PTR [rax],eax
	...
   14001f59a:	add    BYTE PTR [rax],al
   14001f59c:	adc    BYTE PTR [rax+0x2],al
   14001f59f:	add    BYTE PTR [rax-0x6ffffe0b],bh
   14001f5a5:	cmc    
   14001f5a6:	add    DWORD PTR [rax],eax
	...
   14001f5c0:	add    eax,DWORD PTR [rax]
   14001f5c2:	add    BYTE PTR [rax],al
   14001f5c4:	shl    ch,1
   14001f5c6:	add    DWORD PTR [rax],eax
	...
   14001f5d0:	lock cmc 
   14001f5d2:	add    DWORD PTR [rax],eax
   14001f5d4:	nop
   14001f5d5:	retf   
   14001f5d6:	add    DWORD PTR [rax],eax
   14001f5d8:	mov    eax,0x1cb
	...
   14001f5ed:	add    BYTE PTR [rax],al
   14001f5ef:	add    BYTE PTR [rax],dl
   14001f5f1:	add    al,BYTE PTR [rax]
   14001f5f4:	add    al,BYTE PTR [rax]
   14001f5f6:	add    BYTE PTR [rax],al
   14001f5f8:	add    BYTE PTR [rax],al
   14001f5fa:	add    BYTE PTR [rax],al
   14001f5fc:	(bad)  
   14001f5fd:	(bad)  
   14001f5fe:	(bad)  
   14001f5ff:	inc    DWORD PTR [rax]
   14001f601:	add    BYTE PTR [rax],al
   14001f603:	add    BYTE PTR [rax+0x0],al
   14001f606:	add    BYTE PTR [rax],al
   14001f608:	mov    eax,0x1f5
	...
   14001f615:	add    BYTE PTR [rax],al
   14001f617:	add    BYTE PTR [rcx],al
	...
   14001f621:	add    BYTE PTR [rax],al
   14001f623:	add    BYTE PTR [rax+0x40],al
   14001f626:	add    al,BYTE PTR [rax]
   14001f628:	rex test BYTE PTR [rcx],0x0
   14001f62c:	sbb    dh,dh
   14001f62e:	add    DWORD PTR [rax],eax
	...
   14001f648:	add    eax,DWORD PTR [rax]
   14001f64a:	add    BYTE PTR [rax],al
   14001f64c:	pop    rax
   14001f64d:	test   BYTE PTR [rcx],0x0
	...
   14001f658:	js     0x14001f650
   14001f65a:	add    DWORD PTR [rax],eax
   14001f65c:	nop
   14001f65d:	retf   
   14001f65e:	add    DWORD PTR [rax],eax
   14001f660:	mov    eax,0x1cb
	...
   14001f675:	add    BYTE PTR [rax],al
   14001f677:	add    BYTE PTR [rax+0x40],al
   14001f67a:	add    al,BYTE PTR [rax]
   14001f67c:	add    al,BYTE PTR [rax]
   14001f67e:	add    BYTE PTR [rax],al
   14001f680:	add    BYTE PTR [rax],al
   14001f682:	add    BYTE PTR [rax],al
   14001f684:	(bad)  
   14001f685:	(bad)  
   14001f686:	(bad)  
   14001f687:	inc    DWORD PTR [rax]
   14001f689:	add    BYTE PTR [rax],al
   14001f68b:	add    BYTE PTR [rax+0x0],al
   14001f68e:	add    BYTE PTR [rax],al
   14001f690:	rex test BYTE PTR [rcx],0x0
	...
   14001f6a0:	add    DWORD PTR [rax],eax
	...
   14001f6aa:	add    BYTE PTR [rax],al
   14001f6ac:	jo     0x14001f6ee
   14001f6ae:	add    al,BYTE PTR [rax]
   14001f6b0:	enter  0x1f6,0x0
   14001f6b4:	movabs al,ds:0x1f6
	...
   14001f6cd:	add    BYTE PTR [rax],al
   14001f6cf:	add    BYTE PTR [rax+rax*1],al
   14001f6d2:	add    BYTE PTR [rax],al
   14001f6d4:	loopne 0x14001f6cc
   14001f6d6:	add    DWORD PTR [rax],eax
	...
   14001f6e0:	or     bh,dh
   14001f6e2:	add    DWORD PTR [rax],eax
   14001f6e4:	loopne 0x14001f6da
   14001f6e6:	add    DWORD PTR [rax],eax
   14001f6e8:	nop
   14001f6e9:	retf   
   14001f6ea:	add    DWORD PTR [rax],eax
   14001f6ec:	mov    eax,0x1cb
	...
   14001f705:	add    BYTE PTR [rax],al
   14001f707:	add    BYTE PTR [rax+0x40],dh
   14001f70a:	add    al,BYTE PTR [rax]
   14001f70c:	add    eax,DWORD PTR [rax]
   14001f70e:	add    BYTE PTR [rax],al
   14001f710:	add    BYTE PTR [rax],al
   14001f712:	add    BYTE PTR [rax],al
   14001f714:	(bad)  
   14001f715:	(bad)  
   14001f716:	(bad)  
   14001f717:	inc    DWORD PTR [rax]
   14001f719:	add    BYTE PTR [rax],al
   14001f71b:	add    BYTE PTR [rax+0x0],al
   14001f71e:	add    BYTE PTR [rax],al
   14001f720:	enter  0x1f6,0x0
	...
   14001f730:	add    DWORD PTR [rax],eax
	...
   14001f73a:	add    BYTE PTR [rax],al
   14001f73c:	test   al,0x40
   14001f73e:	add    al,BYTE PTR [rax]
   14001f740:	pop    rax
   14001f741:	test   DWORD PTR [rcx],0x1f73000
	...
   14001f75f:	add    BYTE PTR [rax+rax*1],al
   14001f762:	add    BYTE PTR [rax],al
   14001f764:	jo     0x14001f75d
   14001f766:	add    DWORD PTR [rax],eax
	...
   14001f770:	cwde   
   14001f771:	test   DWORD PTR [rcx],0x1f4e000
   14001f777:	add    BYTE PTR [rax-0x47fffe35],dl
   14001f77d:	retf   
   14001f77e:	add    DWORD PTR [rax],eax
	...
   14001f798:	test   al,0x40
   14001f79a:	add    al,BYTE PTR [rax]
   14001f79c:	add    eax,DWORD PTR [rax]
   14001f79e:	add    BYTE PTR [rax],al
   14001f7a0:	add    BYTE PTR [rax],al
   14001f7a2:	add    BYTE PTR [rax],al
   14001f7a4:	(bad)  
   14001f7a5:	(bad)  
   14001f7a6:	(bad)  
   14001f7a7:	inc    DWORD PTR [rax]
   14001f7a9:	add    BYTE PTR [rax],al
   14001f7ab:	add    BYTE PTR [rax+0x0],al
   14001f7ae:	add    BYTE PTR [rax],al
   14001f7b0:	pop    rax
   14001f7b1:	test   DWORD PTR [rcx],0x0
	...
   14001f7bf:	add    BYTE PTR [rcx],al
	...
   14001f7c9:	add    BYTE PTR [rax],al
   14001f7cb:	add    al,ah
   14001f7cd:	add    al,BYTE PTR [rax]
   14001f7d0:	call   0x10001f9cc
   14001f7d5:	test   DWORD PTR [rcx],0x0
	...
   14001f7ef:	add    BYTE PTR [rax+rax*1],al
   14001f7f2:	add    BYTE PTR [rax],al
   14001f7f4:	add    al,bh
   14001f7f6:	add    DWORD PTR [rax],eax
	...
   14001f800:	sub    al,bh
   14001f802:	add    DWORD PTR [rax],eax
   14001f804:	enter  0x1cc,0x0
   14001f808:	nop
   14001f809:	retf   
   14001f80a:	add    DWORD PTR [rax],eax
   14001f80c:	mov    eax,0x1cb
	...
   14001f825:	add    BYTE PTR [rax],al
   14001f827:	add    al,ah
   14001f829:	add    al,BYTE PTR [rax]
   14001f82c:	add    eax,DWORD PTR [rax]
   14001f82e:	add    BYTE PTR [rax],al
   14001f830:	add    BYTE PTR [rax],al
   14001f832:	add    BYTE PTR [rax],al
   14001f834:	(bad)  
   14001f835:	(bad)  
   14001f836:	(bad)  
   14001f837:	inc    DWORD PTR [rax]
   14001f839:	add    BYTE PTR [rax],al
   14001f83b:	add    BYTE PTR [rax+0x0],al
   14001f83e:	add    BYTE PTR [rax],al
   14001f840:	call   0x14001fa3c
	...
   14001f84d:	add    BYTE PTR [rax],al
   14001f84f:	add    BYTE PTR [rcx],al
	...
   14001f859:	add    BYTE PTR [rax],al
   14001f85b:	add    BYTE PTR [rax],bl
   14001f85d:	add    al,BYTE PTR [r8]
   14001f860:	js     0x14001f85a
   14001f862:	add    DWORD PTR [rax],eax
   14001f864:	push   rax
   14001f865:	clc    
   14001f866:	add    DWORD PTR [rax],eax
	...
   14001f880:	add    eax,DWORD PTR [rax]
   14001f882:	add    BYTE PTR [rax],al
   14001f884:	nop
   14001f885:	clc    
   14001f886:	add    DWORD PTR [rax],eax
	...
   14001f890:	mov    al,0xf8
   14001f892:	add    DWORD PTR [rax],eax
   14001f894:	nop
   14001f895:	retf   
   14001f896:	add    DWORD PTR [rax],eax
   14001f898:	mov    eax,0x1cb
	...
   14001f8ad:	add    BYTE PTR [rax],al
   14001f8af:	add    BYTE PTR [rax],bl
   14001f8b1:	add    al,BYTE PTR [r8]
   14001f8b4:	add    al,BYTE PTR [rax]
   14001f8b6:	add    BYTE PTR [rax],al
   14001f8b8:	add    BYTE PTR [rax],al
   14001f8ba:	add    BYTE PTR [rax],al
   14001f8bc:	(bad)  
   14001f8bd:	(bad)  
   14001f8be:	(bad)  
   14001f8bf:	inc    DWORD PTR [rax]
   14001f8c1:	add    BYTE PTR [rax],al
   14001f8c3:	add    BYTE PTR [rax+0x0],al
   14001f8c6:	add    BYTE PTR [rax],al
   14001f8c8:	js     0x14001f8c2
   14001f8ca:	add    DWORD PTR [rax],eax
	...
   14001f8d8:	add    DWORD PTR [rax],eax
	...
   14001f8e2:	add    BYTE PTR [rax],al
   14001f8e4:	rex.W
   14001f8e5:	add    al,BYTE PTR [r8]
   14001f8e8:	add    cl,bh
   14001f8ea:	add    DWORD PTR [rax],eax
   14001f8ec:	fdivr  st,st(0)
   14001f8ee:	add    DWORD PTR [rax],eax
	...
   14001f908:	add    eax,DWORD PTR [rax]
   14001f90a:	add    BYTE PTR [rax],al
   14001f90c:	sbb    cl,bh
   14001f90e:	add    DWORD PTR [rax],eax
	...
   14001f918:	cmp    cl,bh
   14001f91a:	add    DWORD PTR [rax],eax
   14001f91c:	nop
   14001f91d:	retf   
   14001f91e:	add    DWORD PTR [rax],eax
   14001f920:	mov    eax,0x1cb
	...
   14001f935:	add    BYTE PTR [rax],al
   14001f937:	add    BYTE PTR [rax+0x41],cl
   14001f93a:	add    al,BYTE PTR [rax]
   14001f93c:	add    al,BYTE PTR [rax]
   14001f93e:	add    BYTE PTR [rax],al
   14001f940:	add    BYTE PTR [rax],al
   14001f942:	add    BYTE PTR [rax],al
   14001f944:	(bad)  
   14001f945:	(bad)  
   14001f946:	(bad)  
   14001f947:	inc    DWORD PTR [rax]
   14001f949:	add    BYTE PTR [rax],al
   14001f94b:	add    BYTE PTR [rax+0x0],al
   14001f94e:	add    BYTE PTR [rax],al
   14001f950:	add    cl,bh
   14001f952:	add    DWORD PTR [rax],eax
	...
   14001f960:	add    DWORD PTR [rax],eax
	...
   14001f96a:	add    BYTE PTR [rax],al
   14001f96c:	js     0x14001f9af
   14001f96e:	add    al,BYTE PTR [rax]
   14001f970:	mov    cl,bh
   14001f972:	add    DWORD PTR [rax],eax
   14001f974:	(bad)  
   14001f975:	stc    
   14001f976:	add    DWORD PTR [rax],eax
	...
   14001f990:	add    eax,DWORD PTR [rax]
   14001f992:	add    BYTE PTR [rax],al
   14001f994:	movabs al,ds:0x1f9
   14001f99d:	add    BYTE PTR [rax],al
   14001f99f:	add    al,al
   14001f9a1:	stc    
   14001f9a2:	add    DWORD PTR [rax],eax
   14001f9a4:	nop
   14001f9a5:	retf   
   14001f9a6:	add    DWORD PTR [rax],eax
   14001f9a8:	mov    eax,0x1cb
	...
   14001f9bd:	add    BYTE PTR [rax],al
   14001f9bf:	add    BYTE PTR [rax+0x41],bh
   14001f9c2:	add    al,BYTE PTR [rax]
   14001f9c4:	add    al,BYTE PTR [rax]
   14001f9c6:	add    BYTE PTR [rax],al
   14001f9c8:	add    BYTE PTR [rax],al
   14001f9ca:	add    BYTE PTR [rax],al
   14001f9cc:	(bad)  
   14001f9cd:	(bad)  
   14001f9ce:	(bad)  
   14001f9cf:	inc    DWORD PTR [rax]
   14001f9d1:	add    BYTE PTR [rax],al
   14001f9d3:	add    BYTE PTR [rax+0x0],al
   14001f9d6:	add    BYTE PTR [rax],al
   14001f9d8:	mov    cl,bh
   14001f9da:	add    DWORD PTR [rax],eax
	...
   14001f9e8:	add    DWORD PTR [rax],eax
	...
   14001f9f2:	add    BYTE PTR [rax],al
   14001f9f4:	mov    al,0x41
   14001f9f6:	add    al,BYTE PTR [rax]
   14001f9f8:	adc    dl,bh
   14001f9fa:	add    DWORD PTR [rax],eax
   14001f9fc:	call   0x14001fbfa
	...
   14001fa15:	add    BYTE PTR [rax],al
   14001fa17:	add    BYTE PTR [rbx],al
   14001fa19:	add    BYTE PTR [rax],al
   14001fa1b:	add    BYTE PTR [rax],ch
   14001fa1d:	cli    
   14001fa1e:	add    DWORD PTR [rax],eax
	...
   14001fa28:	rex.W cli 
   14001fa2a:	add    DWORD PTR [rax],eax
   14001fa2c:	nop
   14001fa2d:	retf   
   14001fa2e:	add    DWORD PTR [rax],eax
   14001fa30:	mov    eax,0x1cb
	...
   14001fa45:	add    BYTE PTR [rax],al
   14001fa47:	add    BYTE PTR [rax+0x2000241],dh
   14001fa4d:	add    BYTE PTR [rax],al
   14001fa4f:	add    BYTE PTR [rax],al
   14001fa51:	add    BYTE PTR [rax],al
   14001fa53:	add    bh,bh
   14001fa55:	(bad)  
   14001fa56:	(bad)  
   14001fa57:	inc    DWORD PTR [rax]
   14001fa59:	add    BYTE PTR [rax],al
   14001fa5b:	add    BYTE PTR [rax+0x0],al
   14001fa5e:	add    BYTE PTR [rax],al
   14001fa60:	adc    dl,bh
   14001fa62:	add    DWORD PTR [rax],eax
	...
   14001fa70:	add    DWORD PTR [rax],eax
	...
   14001fa7a:	add    BYTE PTR [rax],al
   14001fa7c:	call   0xd801fcc2
   14001fa81:	cli    
   14001fa82:	add    DWORD PTR [rax],eax
   14001fa84:	jo     0x14001fa80
   14001fa86:	add    DWORD PTR [rax],eax
	...
   14001faa0:	add    eax,DWORD PTR [rax]
   14001faa2:	add    BYTE PTR [rax],al
   14001faa4:	mov    al,0xfa
   14001faa6:	add    DWORD PTR [rax],eax
	...
   14001fab0:	sar    dl,1
   14001fab2:	add    DWORD PTR [rax],eax
   14001fab4:	nop
   14001fab5:	retf   
   14001fab6:	add    DWORD PTR [rax],eax
   14001fab8:	mov    eax,0x1cb
	...
   14001facd:	add    BYTE PTR [rax],al
   14001facf:	add    al,ch
   14001fad1:	add    al,BYTE PTR [r8]
   14001fad4:	add    al,BYTE PTR [rax]
   14001fad6:	add    BYTE PTR [rax],al
   14001fad8:	add    BYTE PTR [rax],al
   14001fada:	add    BYTE PTR [rax],al
   14001fadc:	(bad)  
   14001fadd:	(bad)  
   14001fade:	(bad)  
   14001fadf:	inc    DWORD PTR [rax]
   14001fae1:	add    BYTE PTR [rax],al
   14001fae3:	add    BYTE PTR [rax+0x0],al
   14001fae6:	add    BYTE PTR [rax],al
   14001fae8:	cwde   
   14001fae9:	cli    
   14001faea:	add    DWORD PTR [rax],eax
	...
   14001faf8:	add    DWORD PTR [rax],eax
	...
   14001fb02:	add    BYTE PTR [rax],al
   14001fb04:	sbb    BYTE PTR [rdx+0x2],al
   14001fb07:	add    BYTE PTR [rax],ah
   14001fb09:	sti    
   14001fb0a:	add    DWORD PTR [rax],eax
   14001fb0c:	clc    
   14001fb0d:	cli    
   14001fb0e:	add    DWORD PTR [rax],eax
	...
   14001fb28:	add    eax,DWORD PTR [rax]
   14001fb2a:	add    BYTE PTR [rax],al
   14001fb2c:	cmp    bl,bh
   14001fb2e:	add    DWORD PTR [rax],eax
	...
   14001fb38:	pop    rax
   14001fb39:	sti    
   14001fb3a:	add    DWORD PTR [rax],eax
   14001fb3c:	nop
   14001fb3d:	retf   
   14001fb3e:	add    DWORD PTR [rax],eax
   14001fb40:	mov    eax,0x1cb
	...
   14001fb55:	add    BYTE PTR [rax],al
   14001fb57:	add    BYTE PTR [rax],bl
   14001fb59:	rex.X add al,BYTE PTR [rax]
   14001fb5c:	add    al,BYTE PTR [rax]
   14001fb5e:	add    BYTE PTR [rax],al
   14001fb60:	add    BYTE PTR [rax],al
   14001fb62:	add    BYTE PTR [rax],al
   14001fb64:	(bad)  
   14001fb65:	(bad)  
   14001fb66:	(bad)  
   14001fb67:	inc    DWORD PTR [rax]
   14001fb69:	add    BYTE PTR [rax],al
   14001fb6b:	add    BYTE PTR [rax+0x0],al
   14001fb6e:	add    BYTE PTR [rax],al
   14001fb70:	and    bl,bh
   14001fb72:	add    DWORD PTR [rax],eax
	...
   14001fb80:	add    DWORD PTR [rax],eax
	...
   14001fb8a:	add    BYTE PTR [rax],al
   14001fb8c:	push   rax
   14001fb8d:	rex.X add al,BYTE PTR [rax]
   14001fb90:	test   al,0xfb
   14001fb92:	add    DWORD PTR [rax],eax
   14001fb94:	cmp    bl,0x1
	...
   14001fbaf:	add    BYTE PTR [rbx],al
   14001fbb1:	add    BYTE PTR [rax],al
   14001fbb3:	add    al,al
   14001fbb5:	sti    
   14001fbb6:	add    DWORD PTR [rax],eax
	...
   14001fbc0:	loopne 0x14001fbbd
   14001fbc2:	add    DWORD PTR [rax],eax
   14001fbc4:	nop
   14001fbc5:	retf   
   14001fbc6:	add    DWORD PTR [rax],eax
   14001fbc8:	mov    eax,0x1cb
	...
   14001fbdd:	add    BYTE PTR [rax],al
   14001fbdf:	add    BYTE PTR [rax+0x42],dl
   14001fbe2:	add    al,BYTE PTR [rax]
   14001fbe4:	add    al,BYTE PTR [rax]
   14001fbe6:	add    BYTE PTR [rax],al
   14001fbe8:	add    BYTE PTR [rax],al
   14001fbea:	add    BYTE PTR [rax],al
   14001fbec:	(bad)  
   14001fbed:	(bad)  
   14001fbee:	(bad)  
   14001fbef:	inc    DWORD PTR [rax]
   14001fbf1:	add    BYTE PTR [rax],al
   14001fbf3:	add    BYTE PTR [rax+0x0],al
   14001fbf6:	add    BYTE PTR [rax],al
   14001fbf8:	test   al,0xfb
   14001fbfa:	add    DWORD PTR [rax],eax
	...
   14001fc08:	add    DWORD PTR [rax],eax
	...
   14001fc12:	add    BYTE PTR [rax],al
   14001fc14:	add    BYTE PTR [rdx+0x2],0x0
   14001fc18:	xor    ah,bh
   14001fc1a:	add    DWORD PTR [rax],eax
   14001fc1c:	or     ah,bh
   14001fc1e:	add    DWORD PTR [rax],eax
	...
   14001fc38:	add    eax,DWORD PTR [rax]
   14001fc3a:	add    BYTE PTR [rax],al
   14001fc3c:	rex.W cld 
   14001fc3e:	add    DWORD PTR [rax],eax
	...
   14001fc48:	push   0xffffffff900001fc
   14001fc4d:	retf   
   14001fc4e:	add    DWORD PTR [rax],eax
   14001fc50:	mov    eax,0x1cb
	...
   14001fc65:	add    BYTE PTR [rax],al
   14001fc67:	add    BYTE PTR [rax+0x2000242],al
   14001fc6d:	add    BYTE PTR [rax],al
   14001fc6f:	add    BYTE PTR [rax],al
   14001fc71:	add    BYTE PTR [rax],al
   14001fc73:	add    bh,bh
   14001fc75:	(bad)  
   14001fc76:	(bad)  
   14001fc77:	inc    DWORD PTR [rax]
   14001fc79:	add    BYTE PTR [rax],al
   14001fc7b:	add    BYTE PTR [rax+0x0],al
   14001fc7e:	add    BYTE PTR [rax],al
   14001fc80:	xor    ah,bh
   14001fc82:	add    DWORD PTR [rax],eax
	...
   14001fc90:	add    DWORD PTR [rax],eax
	...
   14001fc9a:	add    BYTE PTR [rax],al
   14001fc9c:	mov    eax,0xb8000242
   14001fca1:	cld    
   14001fca2:	add    DWORD PTR [rax],eax
   14001fca4:	nop
   14001fca5:	cld    
   14001fca6:	add    DWORD PTR [rax],eax
	...
   14001fcc0:	add    eax,DWORD PTR [rax]
   14001fcc2:	add    BYTE PTR [rax],al
   14001fcc4:	sar    ah,1
   14001fcc6:	add    DWORD PTR [rax],eax
	...
   14001fcd0:	lock cld 
   14001fcd2:	add    DWORD PTR [rax],eax
   14001fcd4:	nop
   14001fcd5:	retf   
   14001fcd6:	add    DWORD PTR [rax],eax
   14001fcd8:	mov    eax,0x1cb
	...
   14001fced:	add    BYTE PTR [rax],al
   14001fcef:	add    BYTE PTR [rax+0x2000242],bh
   14001fcf5:	add    BYTE PTR [rax],al
   14001fcf7:	add    BYTE PTR [rax],al
   14001fcf9:	add    BYTE PTR [rax],al
   14001fcfb:	add    bh,bh
   14001fcfd:	(bad)  
   14001fcfe:	(bad)  
   14001fcff:	inc    DWORD PTR [rax]
   14001fd01:	add    BYTE PTR [rax],al
   14001fd03:	add    BYTE PTR [rax+0x0],al
   14001fd06:	add    BYTE PTR [rax],al
   14001fd08:	mov    eax,0x1fc
	...
   14001fd15:	add    BYTE PTR [rax],al
   14001fd17:	add    BYTE PTR [rcx],al
	...
   14001fd21:	add    BYTE PTR [rax],al
   14001fd23:	add    al,dh
   14001fd25:	rex.X add al,BYTE PTR [rax]
   14001fd28:	rex std 
   14001fd2a:	add    DWORD PTR [rax],eax
   14001fd2c:	sbb    ch,bh
   14001fd2e:	add    DWORD PTR [rax],eax
	...
   14001fd48:	add    eax,DWORD PTR [rax]
   14001fd4a:	add    BYTE PTR [rax],al
   14001fd4c:	pop    rax
   14001fd4d:	std    
   14001fd4e:	add    DWORD PTR [rax],eax
	...
   14001fd58:	js     0x14001fd57
   14001fd5a:	add    DWORD PTR [rax],eax
   14001fd5c:	nop
   14001fd5d:	retf   
   14001fd5e:	add    DWORD PTR [rax],eax
   14001fd60:	mov    eax,0x1cb
	...
   14001fd75:	add    BYTE PTR [rax],al
   14001fd77:	add    al,dh
   14001fd79:	rex.X add al,BYTE PTR [rax]
   14001fd7c:	add    al,BYTE PTR [rax]
   14001fd7e:	add    BYTE PTR [rax],al
   14001fd80:	add    BYTE PTR [rax],al
   14001fd82:	add    BYTE PTR [rax],al
   14001fd84:	(bad)  
   14001fd85:	(bad)  
   14001fd86:	(bad)  
   14001fd87:	inc    DWORD PTR [rax]
   14001fd89:	add    BYTE PTR [rax],al
   14001fd8b:	add    BYTE PTR [rax+0x0],al
   14001fd8e:	add    BYTE PTR [rax],al
   14001fd90:	rex std 
   14001fd92:	add    DWORD PTR [rax],eax
	...
   14001fda8:	add    eax,DWORD PTR [rax]
   14001fdaa:	add    BYTE PTR [rax],al
   14001fdac:	mov    eax,0x1fd
   14001fdb1:	add    BYTE PTR [rax],al
   14001fdb3:	add    BYTE PTR [rax],al
   14001fdb5:	add    BYTE PTR [rax],al
   14001fdb7:	add    al,bl
   14001fdb9:	std    
   14001fdba:	add    DWORD PTR [rax],eax
   14001fdbc:	nop
   14001fdbd:	retf   
   14001fdbe:	add    DWORD PTR [rax],eax
   14001fdc0:	mov    eax,0x1cb
	...
   14001fdd5:	add    BYTE PTR [rax],al
   14001fdd7:	add    BYTE PTR [rax],ch
   14001fdd9:	rex.XB add al,BYTE PTR [r8]
   14001fddc:	add    al,BYTE PTR [rax]
   14001fdde:	add    BYTE PTR [rax],al
   14001fde0:	add    BYTE PTR [rax],al
   14001fde2:	add    BYTE PTR [rax],al
   14001fde4:	(bad)  
   14001fde5:	(bad)  
   14001fde6:	(bad)  
   14001fde7:	inc    DWORD PTR [rax]
   14001fde9:	add    BYTE PTR [rax],al
   14001fdeb:	add    BYTE PTR [rax+0x0],al
   14001fdee:	add    BYTE PTR [rax],al
   14001fdf0:	movabs al,ds:0x1fd
   14001fdf9:	add    BYTE PTR [rax],al
   14001fdfb:	add    BYTE PTR [rax],al
   14001fdfd:	add    BYTE PTR [rax],al
   14001fdff:	add    BYTE PTR [rcx],al
	...
   14001fe09:	add    BYTE PTR [rax],al
   14001fe0b:	add    BYTE PTR [rax+0x43],bl
   14001fe0e:	add    al,BYTE PTR [rax]
   14001fe10:	sub    dh,bh
   14001fe12:	add    DWORD PTR [rax],eax
   14001fe14:	add    dh,bh
   14001fe16:	add    DWORD PTR [rax],eax
	...
   14001fe30:	add    al,0x0
   14001fe32:	add    BYTE PTR [rax],al
   14001fe34:	rex inc BYTE PTR [rcx]
	...
   14001fe3f:	add    BYTE PTR [rax-0x2],ch
   14001fe42:	add    DWORD PTR [rax],eax
   14001fe44:	fdivr  st,st(5)
   14001fe46:	add    DWORD PTR [rax],eax
   14001fe48:	nop
   14001fe49:	retf   
   14001fe4a:	add    DWORD PTR [rax],eax
   14001fe4c:	mov    eax,0x1cb
	...
   14001fe65:	add    BYTE PTR [rax],al
   14001fe67:	add    BYTE PTR [rax+0x43],bl
   14001fe6a:	add    al,BYTE PTR [rax]
   14001fe6c:	add    eax,DWORD PTR [rax]
   14001fe6e:	add    BYTE PTR [rax],al
   14001fe70:	add    BYTE PTR [rax],al
   14001fe72:	add    BYTE PTR [rax],al
   14001fe74:	(bad)  
   14001fe75:	(bad)  
   14001fe76:	(bad)  
   14001fe77:	inc    DWORD PTR [rax]
   14001fe79:	add    BYTE PTR [rax],al
   14001fe7b:	add    BYTE PTR [rax+0x0],al
   14001fe7e:	add    BYTE PTR [rax],al
   14001fe80:	sub    dh,bh
   14001fe82:	add    DWORD PTR [rax],eax
	...
   14001fe90:	add    DWORD PTR [rax],eax
	...
   14001fe9a:	add    BYTE PTR [rax],al
   14001fe9c:	nop
   14001fe9d:	rex.XB add al,BYTE PTR [r8]
   14001fea0:	mov    eax,0x900001fe
   14001fea5:	inc    BYTE PTR [rcx]
	...
   14001febf:	add    BYTE PTR [rax+rax*1],al
   14001fec2:	add    BYTE PTR [rax],al
   14001fec4:	sar    dh,1
   14001fec6:	add    DWORD PTR [rax],eax
	...
   14001fed0:	clc    
   14001fed1:	inc    BYTE PTR [rcx]
   14001fed3:	add    al,bl
   14001fed5:	std    
   14001fed6:	add    DWORD PTR [rax],eax
   14001fed8:	nop
   14001fed9:	retf   
   14001feda:	add    DWORD PTR [rax],eax
   14001fedc:	mov    eax,0x1cb
	...
   14001fef5:	add    BYTE PTR [rax],al
   14001fef7:	add    BYTE PTR [rax+0x3000243],dl
   14001fefd:	add    BYTE PTR [rax],al
   14001feff:	add    BYTE PTR [rax],al
   14001ff01:	add    BYTE PTR [rax],al
   14001ff03:	add    bh,bh
   14001ff05:	(bad)  
   14001ff06:	(bad)  
   14001ff07:	inc    DWORD PTR [rax]
   14001ff09:	add    BYTE PTR [rax],al
   14001ff0b:	add    BYTE PTR [rax+0x0],al
   14001ff0e:	add    BYTE PTR [rax],al
   14001ff10:	mov    eax,0x1fe
	...
   14001ff1d:	add    BYTE PTR [rax],al
   14001ff1f:	add    BYTE PTR [rcx],al
	...
   14001ff29:	add    BYTE PTR [rax],al
   14001ff2b:	add    al,cl
   14001ff2d:	rex.XB add al,BYTE PTR [r8]
   14001ff30:	inc    QWORD PTR [rcx]
   14001ff33:	add    BYTE PTR [rax],ah
   14001ff35:	inc    DWORD PTR [rcx]
	...
   14001ff4f:	add    BYTE PTR [rax+rax*1],al
   14001ff52:	add    BYTE PTR [rax],al
   14001ff54:	(bad)  
   14001ff55:	inc    DWORD PTR [rcx]
	...
   14001ff5f:	add    BYTE PTR [rax-0x27fffe01],cl
   14001ff65:	std    
   14001ff66:	add    DWORD PTR [rax],eax
   14001ff68:	nop
   14001ff69:	retf   
   14001ff6a:	add    DWORD PTR [rax],eax
   14001ff6c:	mov    eax,0x1cb
	...
   14001ff85:	add    BYTE PTR [rax],al
   14001ff87:	add    al,cl
   14001ff89:	rex.XB add al,BYTE PTR [r8]
   14001ff8c:	add    eax,DWORD PTR [rax]
   14001ff8e:	add    BYTE PTR [rax],al
   14001ff90:	add    BYTE PTR [rax],al
   14001ff92:	add    BYTE PTR [rax],al
   14001ff94:	(bad)  
   14001ff95:	(bad)  
   14001ff96:	(bad)  
   14001ff97:	inc    DWORD PTR [rax]
   14001ff99:	add    BYTE PTR [rax],al
   14001ff9b:	add    BYTE PTR [rax+0x0],al
   14001ff9e:	add    BYTE PTR [rax],al
   14001ffa0:	inc    QWORD PTR [rcx]
	...
   14001ffaf:	add    BYTE PTR [rcx],al
	...
   14001ffbd:	add    r8b,BYTE PTR [rax]
   14001ffc0:	fdivr  st,st(7)
   14001ffc2:	add    DWORD PTR [rax],eax
   14001ffc4:	mov    al,0xff
   14001ffc6:	add    DWORD PTR [rax],eax
	...
   14001ffe0:	add    al,0x0
   14001ffe2:	add    BYTE PTR [rax],al
   14001ffe4:	lock inc DWORD PTR [rcx]
	...
   14001ffef:	add    BYTE PTR [rax],bl
   14001fff1:	add    BYTE PTR [rdx],al
   14001fff3:	add    al,bl
   14001fff5:	std    
   14001fff6:	add    DWORD PTR [rax],eax
   14001fff8:	nop
   14001fff9:	retf   
   14001fffa:	add    DWORD PTR [rax],eax
   14001fffc:	mov    eax,0x1cb
	...
   140020019:	add    r8b,BYTE PTR [rax]
   14002001c:	add    eax,DWORD PTR [rax]
   14002001e:	add    BYTE PTR [rax],al
   140020020:	add    BYTE PTR [rax],al
   140020022:	add    BYTE PTR [rax],al
   140020024:	(bad)  
   140020025:	(bad)  
   140020026:	(bad)  
   140020027:	inc    DWORD PTR [rax]
   140020029:	add    BYTE PTR [rax],al
   14002002b:	add    BYTE PTR [rax+0x0],al
   14002002e:	add    BYTE PTR [rax],al
   140020030:	fdivr  st,st(7)
   140020032:	add    DWORD PTR [rax],eax
	...
   140020040:	add    DWORD PTR [rax],eax
	...
   14002004a:	add    BYTE PTR [rax],al
   14002004c:	cmp    BYTE PTR [rdx+rax*1+0x0],al
   140020050:	push   0x40000200
   140020055:	add    BYTE PTR [rdx],al
	...
   14002006f:	add    BYTE PTR [rax+rax*1],al
   140020072:	add    BYTE PTR [rax],al
   140020074:	add    BYTE PTR [rax],0x2
	...
   14002007f:	add    BYTE PTR [rax-0x27fffe00],ch
   140020085:	std    
   140020086:	add    DWORD PTR [rax],eax
   140020088:	nop
   140020089:	retf   
   14002008a:	add    DWORD PTR [rax],eax
   14002008c:	mov    eax,0x1cb
	...
   1400200a5:	add    BYTE PTR [rax],al
   1400200a7:	add    BYTE PTR [rax],bh
   1400200a9:	add    r8b,BYTE PTR [rax]
   1400200ac:	add    eax,DWORD PTR [rax]
   1400200ae:	add    BYTE PTR [rax],al
   1400200b0:	add    BYTE PTR [rax],al
   1400200b2:	add    BYTE PTR [rax],al
   1400200b4:	(bad)  
   1400200b5:	(bad)  
   1400200b6:	(bad)  
   1400200b7:	inc    DWORD PTR [rax]
   1400200b9:	add    BYTE PTR [rax],al
   1400200bb:	add    BYTE PTR [rax+0x0],al
   1400200be:	add    BYTE PTR [rax],al
   1400200c0:	push   0x200
	...
   1400200cd:	add    BYTE PTR [rax],al
   1400200cf:	add    BYTE PTR [rcx],al
	...
   1400200d9:	add    BYTE PTR [rax],al
   1400200db:	add    BYTE PTR [rax+0x44],ch
   1400200de:	add    al,BYTE PTR [rax]
   1400200e0:	clc    
   1400200e1:	add    BYTE PTR [rdx],al
   1400200e3:	add    al,dl
   1400200e5:	add    BYTE PTR [rdx],al
	...
   1400200ff:	add    BYTE PTR [rax+rax*1],al
   140020102:	add    BYTE PTR [rax],al
   140020104:	adc    BYTE PTR [rcx],al
   140020106:	add    al,BYTE PTR [rax]
	...
   140020110:	cmp    BYTE PTR [rcx],al
   140020112:	add    al,BYTE PTR [rax]
   140020114:	fdivr  st,st(5)
   140020116:	add    DWORD PTR [rax],eax
   140020118:	nop
   140020119:	retf   
   14002011a:	add    DWORD PTR [rax],eax
   14002011c:	mov    eax,0x1cb
	...
   140020135:	add    BYTE PTR [rax],al
   140020137:	add    BYTE PTR [rax+0x44],ch
   14002013a:	add    al,BYTE PTR [rax]
   14002013c:	add    eax,DWORD PTR [rax]
   14002013e:	add    BYTE PTR [rax],al
   140020140:	add    BYTE PTR [rax],al
   140020142:	add    BYTE PTR [rax],al
   140020144:	(bad)  
   140020145:	(bad)  
   140020146:	(bad)  
   140020147:	inc    DWORD PTR [rax]
   140020149:	add    BYTE PTR [rax],al
   14002014b:	add    BYTE PTR [rax+0x0],al
   14002014e:	add    BYTE PTR [rax],al
   140020150:	clc    
   140020151:	add    BYTE PTR [rdx],al
	...
   14002015f:	add    BYTE PTR [rcx],al
	...
   140020169:	add    BYTE PTR [rax],al
   14002016b:	add    al,dh
   14002016d:	add    r8b,BYTE PTR [rax]
   140020170:	mov    BYTE PTR [rcx],al
   140020172:	add    al,BYTE PTR [rax]
   140020174:	(bad)  
   140020175:	add    DWORD PTR [rdx],eax
	...
   14002018f:	add    BYTE PTR [rcx],al
   140020191:	add    BYTE PTR [rax],al
   140020193:	add    BYTE PTR [rax+0x201],ah
   140020199:	add    BYTE PTR [rax],al
   14002019b:	add    BYTE PTR [rax],al
   14002019d:	add    BYTE PTR [rax],al
   14002019f:	add    BYTE PTR [rax+0x201],dh
	...
   1400201ad:	add    BYTE PTR [rax],al
   1400201af:	add    al,dh
   1400201b1:	add    r8b,BYTE PTR [rax]
	...
   1400201bc:	(bad)  
   1400201bd:	(bad)  
   1400201be:	(bad)  
   1400201bf:	inc    DWORD PTR [rax]
   1400201c1:	add    BYTE PTR [rax],al
   1400201c3:	add    BYTE PTR [rax+0x0],al
   1400201c6:	add    BYTE PTR [rax],al
   1400201c8:	mov    BYTE PTR [rcx],al
   1400201ca:	add    al,BYTE PTR [rax]
	...
   1400201f8:	and    DWORD PTR [rax],eax
   1400201fa:	add    BYTE PTR [rax],al
   1400201fc:	add    BYTE PTR [rax],dl
   1400201fe:	add    BYTE PTR [rax],al
   140020200:	sub    DWORD PTR [rax],edx
   140020202:	add    BYTE PTR [rax],al
   140020204:	sbb    al,0x2
   140020206:	add    al,BYTE PTR [rax]
   140020208:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070210
   14002020e:	(bad)  
   14002020f:	add    BYTE PTR [rax],al
   140020211:	adc    BYTE PTR [rax],al
   140020213:	add    BYTE PTR [rcx],ch
   140020215:	adc    BYTE PTR [rax],al
   140020217:	add    BYTE PTR [rdx+rax*1],bl
   14002021a:	add    al,BYTE PTR [rax]
   14002021c:	add    DWORD PTR [rdi],ecx
   14002021e:	(bad)  
   14002021f:	add    BYTE PTR [rdi],cl
   140020221:	push   rsp
   140020222:	or     BYTE PTR [rax],al
   140020224:	sysenter 
   140020226:	(bad)  
   140020227:	add    BYTE PTR [rdi],cl
   140020229:	xor    cl,BYTE PTR [rbx]
   14002022b:	(bad)  
   14002022c:	and    DWORD PTR [rax],eax
   14002022e:	add    BYTE PTR [rax],al
   140020230:	adc    BYTE PTR [rax],0x0
   140020233:	add    BYTE PTR [rcx+0x50000010],ah
   140020239:	add    al,BYTE PTR [rdx]
   14002023b:	add    BYTE PTR [rcx],ah
   14002023d:	add    eax,0x34050002
   140020242:	(bad)  
   140020243:	add    BYTE PTR [rax-0x5efffff0],al
   140020249:	adc    BYTE PTR [rax],al
   14002024b:	add    BYTE PTR [rax+0x2],dl
   14002024e:	add    al,BYTE PTR [rax]
   140020250:	add    DWORD PTR [rax],ebx
   140020252:	(bad)  
   140020253:	add    BYTE PTR [rax],bl
   140020255:	or     BYTE PTR fs:[rax],al
   140020258:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   14002025c:	sbb    BYTE PTR [rdx],dh
   14002025e:	adc    al,0x70
   140020260:	add    DWORD PTR [rdx],ebx
   140020262:	or     al,BYTE PTR [rax]
   140020264:	sbb    dl,BYTE PTR [rsp+rcx*1+0x0]
   140020268:	sbb    dh,BYTE PTR [rdx+rcx*1]
   14002026b:	add    BYTE PTR [rdx],bl
   14002026d:	xor    dl,BYTE PTR [rsi]
   14002026f:	loopne 0x140020285
   140020271:	rcl    BYTE PTR [rdx],1
   140020273:	rcl    BYTE PTR [rax],0x70
   140020276:	punpcklbw mm4,DWORD PTR [rcx]
   140020279:	add    BYTE PTR [rax],al
   14002027b:	add    BYTE PTR [rax+0x12],dl
   14002027e:	add    BYTE PTR [rax],al
   140020280:	mov    ebp,0xc4000014
   140020285:	add    al,BYTE PTR [rdx]
   140020287:	add    BYTE PTR [rcx],ah
   140020289:	add    BYTE PTR [rax],al
   14002028b:	add    BYTE PTR [rbp-0x3affffec],bh
   140020291:	adc    al,0x0
   140020293:	add    BYTE PTR [rax+0x21000202],dh
   140020299:	(bad)  
   14002029a:	add    al,0x0
   14002029c:	(bad)  
   14002029d:	(bad)  
   14002029e:	ins    BYTE PTR es:[rdi],dx
   14002029f:	add    BYTE PTR [rax],cl
   1400202a1:	(bad)  
   1400202a2:	ins    DWORD PTR es:[rdi],dx
   1400202a3:	add    BYTE PTR [rbp-0x3affffec],bh
   1400202a9:	adc    al,0x0
   1400202ab:	add    BYTE PTR [rax+0x21000202],dh
   1400202b1:	or     BYTE PTR [rdx],al
   1400202b3:	add    BYTE PTR [rax],cl
   1400202b5:	fs jae 0x1400202b8
   1400202b8:	push   rax
   1400202b9:	adc    al,BYTE PTR [rax]
   1400202bb:	add    BYTE PTR [rbp-0x3bffffec],bh
   1400202c1:	add    al,BYTE PTR [rdx]
   1400202c3:	add    BYTE PTR [rcx],al
   1400202c5:	test   DWORD PTR [rcx],0x6af4f700
   1400202cb:	add    bh,ch
   1400202cd:	in     al,0x6b
   1400202cf:	add    BYTE PTR [rdi],cl
   1400202d1:	add    DWORD PTR [rsi+0x0],ebp
   1400202d4:	or     BYTE PTR [rax+0x7],dh
   1400202d7:	push   rax
   1400202d8:	(bad)  
   1400202d9:	xor    BYTE PTR [rax],al
   1400202db:	add    BYTE PTR [rcx],ah
   1400202dd:	add    BYTE PTR [rax],al
   1400202df:	add    BYTE PTR [rdi],bl
   1400202e1:	and    DWORD PTR [rax],eax
   1400202e3:	add    BYTE PTR [rdi],ah
   1400202e5:	and    DWORD PTR [rax],eax
   1400202e7:	add    BYTE PTR [rax],al
   1400202e9:	add    eax,DWORD PTR [rdx]
   1400202eb:	add    BYTE PTR [rcx],ah
   1400202ed:	or     BYTE PTR [rdx],al
   1400202ef:	add    BYTE PTR [rax],cl
   1400202f1:	hlt    
   1400202f2:	xor    BYTE PTR [rax],al
   1400202f4:	(bad)  
   1400202f5:	and    DWORD PTR [rax],eax
   1400202f7:	add    BYTE PTR [rdi],ah
   1400202f9:	and    DWORD PTR [rax],eax
   1400202fb:	add    BYTE PTR [rax],al
   1400202fd:	add    eax,DWORD PTR [rdx]
   1400202ff:	add    BYTE PTR [rcx],ah
   140020301:	or     BYTE PTR [rdx],al
   140020303:	add    BYTE PTR [rax],cl
   140020305:	in     al,0x31
   140020307:	add    BYTE PTR [rbp+0x1e],bh
   14002030a:	add    BYTE PTR [rax],al
   14002030c:	(bad)  
   14002030d:	and    DWORD PTR [rax],eax
   14002030f:	add    BYTE PTR [rbx+rax*1],dl
   140020312:	add    al,BYTE PTR [rax]
   140020314:	and    DWORD PTR [rax],ecx
   140020316:	add    al,BYTE PTR [rax]
   140020318:	or     BYTE PTR [rcx+rdi*1+0x0],dl
   14002031c:	nop
   14002031d:	sbb    eax,DWORD PTR [rax]
   14002031f:	add    BYTE PTR [rbp+0x1e],bh
   140020322:	add    BYTE PTR [rax],al
   140020324:	sub    BYTE PTR [rbx],al
   140020326:	add    al,BYTE PTR [rax]
   140020328:	add    DWORD PTR [rdx],edx
   14002032a:	(bad)  
   14002032b:	add    BYTE PTR [rdx],dl
   14002032d:	add    DWORD PTR [rdx],esi
   14002032f:	add    BYTE PTR [rbx],cl
   140020331:	ror    BYTE PTR [rcx],1
   140020333:	rol    BYTE PTR [rdi],0x70
   140020336:	(bad)  
   140020337:	(bad)  
   140020338:	add    eax,0x1000030
   14002033d:	(bad)  
   14002033e:	add    al,BYTE PTR [rax]
   140020340:	(bad)  
   140020341:	push   rdx
   140020342:	add    dh,BYTE PTR [rax]
   140020344:	add    DWORD PTR [rsi],eax
   140020346:	add    al,BYTE PTR [rax]
   140020348:	(bad)  
   140020349:	jb     0x14002034d
   14002034b:	xor    BYTE PTR [rcx],al
   14002034d:	adc    al,0x8
   14002034f:	add    BYTE PTR [rsp+rsi*1],dl
   140020352:	or     al,BYTE PTR [rax]
   140020354:	adc    al,0x32
   140020356:	adc    al,dl
   140020358:	(bad)  
   140020359:	ror    BYTE PTR [rax+rsi*2],0xb
   14002035d:	(bad)  
   14002035e:	or     dl,BYTE PTR [rax+0x21]
   140020361:	add    BYTE PTR [rax],al
   140020363:	add    BYTE PTR [rax+0x46],dl
   140020366:	add    BYTE PTR [rax],al
   140020368:	int3   
   140020369:	rex.RXB add BYTE PTR [r8],r8b
   14002036c:	test   BYTE PTR [rbx],al
   14002036e:	add    al,BYTE PTR [rax]
   140020370:	and    DWORD PTR [rax],ecx
   140020372:	add    al,BYTE PTR [rax]
   140020374:	or     ah,dh
   140020376:	sbb    BYTE PTR [rax],al
   140020378:	push   rax
   140020379:	rex.RX add BYTE PTR [rax],r8b
   14002037c:	int3   
   14002037d:	rex.RXB add BYTE PTR [r8],r8b
   140020380:	test   BYTE PTR [rbx],al
   140020382:	add    al,BYTE PTR [rax]
   140020384:	add    DWORD PTR [rcx+0xc],edx
   140020387:	add    BYTE PTR [rcx-0x3c],dl
   14002038a:	and    BYTE PTR [rax],al
   14002038c:	xor    BYTE PTR [rdi+rbx*1+0x0],ah
   140020390:	sbb    eax,0x10001e54
   140020395:	add    DWORD PTR [rcx],ebx
   140020397:	add    BYTE PTR [rcx],cl
   140020399:	loopne 0x1400203a2
   14002039b:	rol    BYTE PTR [rip+0x1300470],1        # 0x141320811
   1400203a1:	or     al,BYTE PTR [rax+rax*1]
   1400203a4:	or     dh,BYTE PTR [rsi+rax*1]
   1400203a7:	add    BYTE PTR [rdx],cl
   1400203a9:	xor    al,BYTE PTR [rsi]
   1400203ab:	jo     0x1400203ae
   1400203ad:	adc    al,0xa
   1400203af:	add    BYTE PTR [rcx+rax*1],dl
   1400203b2:	jns    0x1400203b4
   1400203b4:	or     eax,0x9e00bf0
   1400203b9:	rol    BYTE PTR [rdi],1
   1400203bb:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143620832
   1400203c2:	add    dh,BYTE PTR [rax]
   1400203c4:	and    DWORD PTR [rax],eax
   1400203c6:	add    BYTE PTR [rax],al
   1400203c8:	jo     0x14002038a
   1400203ca:	add    BYTE PTR [rax],al
   1400203cc:	add    al,0x0
   1400203cf:	add    BYTE PTR [rsp+rax*1],cl
   1400203d2:	add    al,BYTE PTR [rax]
   1400203d4:	and    DWORD PTR [rax],eax
   1400203d6:	add    BYTE PTR [rax],al
   1400203d8:	add    al,0x0
   1400203db:	add    BYTE PTR [rax+rax*8+0x3f80000],cl
   1400203e2:	add    al,BYTE PTR [rax]
   1400203e4:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a40703ec
   1400203ea:	(bad)  
   1400203eb:	add    BYTE PTR [rax-0x73ffff40],al
   1400203f1:	rol    BYTE PTR [rax],0x0
   1400203f4:	clc    
   1400203f5:	add    eax,DWORD PTR [rdx]
   1400203f7:	add    BYTE PTR [rcx],ah
   1400203f9:	add    eax,0x34050002
   1400203fe:	(bad)  
   1400203ff:	add    BYTE PTR [rax-0x40],dh
   140020402:	add    BYTE PTR [rax],al
   140020404:	add    al,0x0
   140020407:	add    BYTE PTR [rsp+rax*1],cl
   14002040a:	add    al,BYTE PTR [rax]
   14002040c:	add    DWORD PTR [rsi],eax
   14002040e:	add    al,BYTE PTR [rax]
   140020410:	(bad)  
   140020411:	xor    al,BYTE PTR [rdx]
   140020413:	jo     0x140020436
   140020415:	sub    DWORD PTR [rax+rax*1],eax
   140020418:	sub    DWORD PTR [rax+rcx*1+0x0],esi
   14002041c:	add    BYTE PTR [rax+0x2],ch
   14002041f:	add    al,ah
   140020421:	rol    BYTE PTR [rax],0x0
   140020424:	or     ecx,eax
   140020426:	add    BYTE PTR [rax],al
   140020428:	cmp    al,0x3
   14002042a:	add    al,BYTE PTR [rax]
   14002042c:	and    DWORD PTR [rip+0x68050002],eax        # 0x1a8070434
   140020432:	add    al,BYTE PTR [rax]
   140020434:	loopne 0x1400203f6
   140020436:	add    BYTE PTR [rax],al
   140020438:	or     ecx,eax
   14002043a:	add    BYTE PTR [rax],al
   14002043c:	cmp    al,0x3
   14002043e:	add    al,BYTE PTR [rax]
   140020440:	add    DWORD PTR [rsi+rax*1],edx
   140020443:	add    BYTE PTR [rsp+riz*2],dl
   140020446:	(bad)  
   140020447:	add    BYTE PTR [rsp+rsi*1],dl
   14002044a:	(bad)  
   14002044b:	add    BYTE PTR [rdx+rsi*1],dl
   14002044e:	adc    BYTE PTR [rax+0x21],dh
   140020451:	add    BYTE PTR [rax],al
   140020453:	add    BYTE PTR [rax],dh
   140020455:	(bad)
   140020458:	(bad)
   14002045c:	sub    al,0x12
   14002045e:	add    al,BYTE PTR [rax]
   140020460:	and    DWORD PTR [rsi],edx
   140020462:	(bad)  
   140020463:	add    BYTE PTR [rsi],dl
   140020465:	je     0x14002046b
   140020467:	add    BYTE PTR [rdx],cl
   140020469:	fs (bad) 
   14002046b:	add    BYTE PTR [rip+0x30000634],al        # 0x170020aa5
   140020471:	(bad)
   140020474:	(bad)
   140020478:	sub    al,0x12
   14002047a:	add    al,BYTE PTR [rax]
   14002047c:	add    DWORD PTR [rax],ebx
   14002047e:	or     BYTE PTR [rax],al
   140020480:	sbb    BYTE PTR [rcx+rcx*1+0x0],ah
   140020484:	sbb    BYTE PTR [rax+rcx*1+0x0],dl
   140020488:	sbb    BYTE PTR [rsi+rax*1],dh
   14002048b:	add    BYTE PTR [rax],bl
   14002048d:	xor    dl,BYTE PTR [rax+rsi*2]
   140020490:	add    DWORD PTR [rdi],ecx
   140020492:	(bad)  
   140020493:	add    BYTE PTR [rdi],cl
   140020495:	fs (bad) 
   140020497:	add    BYTE PTR [rdi],cl
   140020499:	xor    al,0x6
   14002049b:	add    BYTE PTR [rdi],cl
   14002049d:	xor    cl,BYTE PTR [rbx]
   14002049f:	jo     0x1400204c2
   1400204a1:	add    BYTE PTR [rax],al
   1400204a3:	add    BYTE PTR [rax-0x39],dh
   1400204a6:	add    BYTE PTR [rax],al
   1400204a8:	nop
   1400204a9:	mov    DWORD PTR [rax],0x2120000
   1400204af:	add    BYTE PTR [rcx],ah
   1400204b1:	add    BYTE PTR [rdx],al
   1400204b3:	add    BYTE PTR [rax],al
   1400204b5:	xor    al,0x6
   1400204b7:	add    BYTE PTR [rax-0x39],dh
   1400204ba:	add    BYTE PTR [rax],al
   1400204bc:	nop
   1400204bd:	mov    DWORD PTR [rax],0x2120000
   1400204c3:	add    BYTE PTR [rcx],ah
   1400204c5:	add    eax,0x34050002
   1400204ca:	(bad)  
   1400204cb:	add    BYTE PTR [rax-0x39],dh
   1400204ce:	add    BYTE PTR [rax],al
   1400204d0:	nop
   1400204d1:	mov    DWORD PTR [rax],0x2120000
   1400204d7:	add    BYTE PTR [rcx],al
   1400204d9:	or     DWORD PTR [rcx],eax
   1400204db:	add    BYTE PTR [rcx],cl
   1400204dd:	rex.X add BYTE PTR [rax],al
   1400204e0:	add    DWORD PTR [rcx],ecx
   1400204e2:	add    DWORD PTR [rax],eax
   1400204e4:	or     DWORD PTR [rdx+0x0],esp
   1400204e7:	add    BYTE PTR [rcx],al
   1400204e9:	(bad)  
   1400204ea:	add    al,BYTE PTR [rax]
   1400204ec:	(bad)  
   1400204ed:	xor    al,BYTE PTR [rdx]
   1400204ef:	xor    BYTE PTR [rcx],al
   1400204f1:	(bad)  
   1400204f2:	or     BYTE PTR [rax],al
   1400204f4:	(bad)  
   1400204f5:	push   rsp
   1400204f6:	or     eax,DWORD PTR [rax]
   1400204f8:	(bad)  
   1400204f9:	xor    al,0x8
   1400204fb:	add    BYTE PTR [rsi],dl
   1400204fd:	xor    dl,BYTE PTR [rdx]
   1400204ff:	rcl    BYTE PTR [rax],0x70
   140020502:	punpcklbw mm4,DWORD PTR [rcx]
   140020505:	add    BYTE PTR [rax],al
   140020507:	add    BYTE PTR [rax+0x270000df],dh
   14002050d:	loopne 0x14002050f
   14002050f:	add    BYTE PTR [rax],dh
   140020511:	add    eax,0x12210002
   140020516:	(bad)  
   140020517:	add    BYTE PTR [rdx],dl
   140020519:	je     0x140020521
   14002051b:	add    BYTE PTR [rip+0x5000e64],cl        # 0x145021385
   140020521:	push   rsp
   140020522:	or     eax,0xdfb000
   140020527:	add    BYTE PTR [rdi],ah
   140020529:	loopne 0x14002052b
   14002052b:	add    BYTE PTR [rax],dh
   14002052d:	add    eax,0xc010002
   140020532:	add    eax,0x8620c00
   140020537:	loopne 0x14002053f
   140020539:	rol    BYTE PTR [rax+rax*8],1
   14002053c:	add    dh,BYTE PTR [rax]
   14002053e:	add    BYTE PTR [rax],al
   140020540:	and    DWORD PTR [rax],eax
   140020542:	add    BYTE PTR [rax],al
   140020544:	shl    al,1
   140020546:	add    BYTE PTR [rax],al
   140020548:	adc    eax,0x680000e1
   14002054d:	add    eax,0xa210002
   140020552:	add    al,0x0
   140020554:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140020558:	add    eax,0xd0000634
   14002055d:	loopne 0x14002055f
   14002055f:	add    BYTE PTR [rip+0x680000e1],dl        # 0x1a8020646
   140020565:	add    eax,0x10010002
   14002056a:	(bad)  
   14002056b:	add    BYTE PTR [rax],dl
   14002056d:	or     DWORD PTR fs:[rax],eax
   140020570:	adc    BYTE PTR [rax+rcx*1+0x0],dl
   140020574:	adc    BYTE PTR [rdx],dh
   140020576:	or     al,0xc0
   140020578:	add    DWORD PTR [rax],ecx
   14002057a:	add    al,0x0
   14002057c:	or     BYTE PTR [rdx+0x60037004],dh
   140020582:	add    dh,BYTE PTR [rax]
   140020584:	and    DWORD PTR [rax],eax
   140020586:	add    BYTE PTR [rax],al
   140020588:	movabs al,ds:0xa80000e5f30000e5
   140020591:	add    eax,0x8210002
   140020596:	add    al,BYTE PTR [rax]
   140020598:	or     ah,ah
   14002059a:	and    al,BYTE PTR [rax]
   14002059c:	movabs al,ds:0xa80000e5f30000e5
   1400205a5:	add    eax,0x16010002
   1400205aa:	or     DWORD PTR [rax],eax
   1400205ac:	(bad)  
   1400205ad:	add    DWORD PTR [rdx],ebx
   1400205af:	add    BYTE PTR [rdi],cl
   1400205b1:	lock or eax,0x9c00bd0
   1400205b7:	jo     0x1400205c1
   1400205b9:	(bad)  
   1400205ba:	(bad)  
   1400205bb:	push   rax
   1400205bc:	(bad)  
   1400205bd:	xor    BYTE PTR [rax],al
   1400205bf:	add    BYTE PTR [rcx],ah
   1400205c1:	add    BYTE PTR [rdx],cl
   1400205c3:	add    BYTE PTR [rax],al
   1400205c5:	(bad)  
   1400205c6:	sub    eax,DWORD PTR [rax]
   1400205c8:	add    ah,al
   1400205ca:	sub    al,0x0
   1400205cc:	add    BYTE PTR [rbp+rbp*1+0x0],dh
   1400205d0:	add    BYTE PTR [rsi+rbp*1+0x0],ah
   1400205d4:	add    BYTE PTR [rdi+rbp*1],dh
   1400205d7:	add    BYTE PTR [rax],dh
   1400205d9:	icebp  
   1400205da:	add    BYTE PTR [rax],al
   1400205dc:	push   rsp
   1400205dd:	icebp  
   1400205de:	add    BYTE PTR [rax],al
   1400205e0:	or     BYTE PTR [rsi],al
   1400205e2:	add    al,BYTE PTR [rax]
   1400205e4:	and    DWORD PTR [rdx],esi
   1400205e6:	or     al,BYTE PTR [rax]
   1400205e8:	xor    dh,BYTE PTR [rbp+rbp*1+0x0]
   1400205ec:	and    BYTE PTR [rsi+rbp*1+0x0],ah
   1400205f0:	sbb    BYTE PTR [rdi+rbp*1],dh
   1400205f3:	add    BYTE PTR [rax],dl
   1400205f5:	(bad)  
   1400205f6:	sub    eax,DWORD PTR [rax]
   1400205f8:	or     ah,al
   1400205fa:	sub    al,0x0
   1400205fc:	xor    cl,dh
   1400205fe:	add    BYTE PTR [rax],al
   140020600:	push   rsp
   140020601:	icebp  
   140020602:	add    BYTE PTR [rax],al
   140020604:	or     BYTE PTR [rsi],al
   140020606:	add    al,BYTE PTR [rax]
   140020608:	add    DWORD PTR [rcx],ecx
   14002060a:	add    eax,DWORD PTR [rax]
   14002060c:	or     DWORD PTR [rcx],eax
   14002060e:	xor    BYTE PTR [rax],al
   140020610:	add    dl,BYTE PTR [rax+0x0]
   140020613:	add    BYTE PTR [rcx],al
   140020615:	adc    al,0x8
   140020617:	add    BYTE PTR [rsp+riz*2],dl
   14002061a:	or     BYTE PTR [rax],al
   14002061c:	adc    al,0x54
   14002061e:	(bad)  
   14002061f:	add    BYTE PTR [rsp+rsi*1],dl
   140020622:	(bad)  
   140020623:	add    BYTE PTR [rdx+rsi*1],dl
   140020626:	adc    BYTE PTR [rax+0x21],dh
   140020629:	add    BYTE PTR [rax],cl
   14002062b:	add    BYTE PTR [rax],al
   14002062d:	in     al,0x28
   14002062f:	add    BYTE PTR [rax],al
   140020631:	(bad)  
   140020632:	sub    DWORD PTR [rax],eax
   140020634:	add    BYTE PTR [rdx+rbp*1+0x0],dh
   140020638:	add    BYTE PTR [rcx+rsi*1+0x0],ah
   14002063c:	or     BYTE PTR [rcx],0x1
   14002063f:	add    al,al
   140020641:	or     DWORD PTR [rcx],eax
   140020643:	add    BYTE PTR [rax+0x6],ch
   140020646:	add    al,BYTE PTR [rax]
   140020648:	and    DWORD PTR [rdi],esp
   14002064a:	or     BYTE PTR [rax],al
   14002064c:	(bad)  
   14002064d:	je     0x140020679
   14002064f:	add    BYTE PTR [rax],bl
   140020651:	in     al,0x28
   140020653:	add    BYTE PTR [rax],dl
   140020655:	(bad)  
   140020656:	sub    DWORD PTR [rax],eax
   140020658:	or     BYTE PTR [rcx+rsi*1+0x0],ah
   14002065c:	or     BYTE PTR [rcx],0x1
   14002065f:	add    al,al
   140020661:	or     DWORD PTR [rcx],eax
   140020663:	add    BYTE PTR [rax+0x6],ch
   140020666:	add    al,BYTE PTR [rax]
   140020668:	add    DWORD PTR [rsi],ecx
   14002066a:	(bad)  
   14002066b:	add    BYTE PTR [rsi],cl
   14002066d:	add    DWORD PTR [rbx],ebp
   14002066f:	add    BYTE PTR [rdi],al
   140020671:	lock add eax,0x25003d0
   140020677:	xor    BYTE PTR [rcx],ah
   140020679:	add    BYTE PTR [rax],al
   14002067b:	add    BYTE PTR [rax],ah
   14002067d:	adc    al,0x1
   14002067f:	add    BYTE PTR [rbx+0x14],al
   140020682:	add    DWORD PTR [rax],eax
   140020684:	rcl    BYTE PTR [rcx],1
   140020686:	add    al,BYTE PTR [rax]
   140020688:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070690
   14002068e:	(bad)  
   14002068f:	add    BYTE PTR [rax],ah
   140020691:	adc    al,0x1
   140020693:	add    BYTE PTR [rbx+0x14],al
   140020696:	add    DWORD PTR [rax],eax
   140020698:	rcl    BYTE PTR [rcx],1
   14002069a:	add    al,BYTE PTR [rax]
   14002069c:	and    DWORD PTR [rax],eax
   14002069e:	add    BYTE PTR [rax],al
   1400206a0:	movabs al,ds:0xd0000116c3000116
   1400206a9:	adc    DWORD PTR [rdx],eax
   1400206ab:	add    BYTE PTR [rcx],ah
   1400206ad:	add    eax,0x74050002
   1400206b2:	(bad)  
   1400206b3:	add    BYTE PTR [rax-0x3cfffeea],ah
   1400206b9:	(bad)  
   1400206ba:	add    DWORD PTR [rax],eax
   1400206bc:	rcl    BYTE PTR [rcx],1
   1400206be:	add    al,BYTE PTR [rax]
   1400206c0:	and    DWORD PTR [rax],eax
   1400206c2:	add    BYTE PTR [rax],al
   1400206c4:	push   rax
   1400206c5:	(bad)  
   1400206c6:	add    DWORD PTR [rax],eax
   1400206c8:	jae    0x1400206e1
   1400206ca:	add    DWORD PTR [rax],eax
   1400206cc:	rcl    BYTE PTR [rcx],1
   1400206ce:	add    al,BYTE PTR [rax]
   1400206d0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40706d8
   1400206d6:	(bad)  
   1400206d7:	add    BYTE PTR [rax+0x17],dl
   1400206da:	add    DWORD PTR [rax],eax
   1400206dc:	jae    0x1400206f5
   1400206de:	add    DWORD PTR [rax],eax
   1400206e0:	rcl    BYTE PTR [rcx],1
   1400206e2:	add    al,BYTE PTR [rax]
   1400206e4:	and    DWORD PTR [rax],eax
   1400206e6:	add    BYTE PTR [rax],al
   1400206e8:	rcl    BYTE PTR [rdi],1
   1400206ea:	add    DWORD PTR [rax],eax
   1400206ec:	not    DWORD PTR [rdi]
   1400206ee:	add    DWORD PTR [rax],eax
   1400206f0:	sub    al,0x7
   1400206f2:	add    al,BYTE PTR [rax]
   1400206f4:	and    DWORD PTR [rax],eax
   1400206f6:	add    BYTE PTR [rax],al
   1400206f8:	not    DWORD PTR [rdi]
   1400206fa:	add    DWORD PTR [rax],eax
   1400206fc:	add    al,0x18
   1400206fe:	add    DWORD PTR [rax],eax
   140020700:	sbb    BYTE PTR [rdi],al
   140020702:	add    al,BYTE PTR [rax]
   140020704:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a407070c
   14002070a:	(bad)  
   14002070b:	add    bh,dh
   14002070d:	(bad)  
   14002070e:	add    DWORD PTR [rax],eax
   140020710:	add    al,0x18
   140020712:	add    DWORD PTR [rax],eax
   140020714:	sbb    BYTE PTR [rdi],al
   140020716:	add    al,BYTE PTR [rax]
   140020718:	and    DWORD PTR [rip+0x34050002],eax        # 0x174070720
   14002071e:	(bad)  
   14002071f:	add    al,dl
   140020721:	(bad)  
   140020722:	add    DWORD PTR [rax],eax
   140020724:	not    DWORD PTR [rdi]
   140020726:	add    DWORD PTR [rax],eax
   140020728:	sub    al,0x7
   14002072a:	add    al,BYTE PTR [rax]
   14002072c:	add    DWORD PTR [rdx],ecx
   14002072e:	add    al,0x0
   140020730:	or     dl,BYTE PTR [rax+rcx*1+0x0]
   140020734:	or     dh,BYTE PTR [rdx]
   140020736:	(bad)  
   140020737:	jo     0x14002075a
   140020739:	add    BYTE PTR [rax],al
   14002073b:	add    al,ah
   14002073d:	sbb    BYTE PTR [rcx],al
   14002073f:	add    BYTE PTR [rbx],al
   140020741:	sbb    DWORD PTR [rcx],eax
   140020743:	add    al,dl
   140020745:	adc    DWORD PTR [rdx],eax
   140020747:	add    BYTE PTR [rcx],ah
   140020749:	add    eax,0x74050002
   14002074e:	(bad)  
   14002074f:	add    al,ah
   140020751:	sbb    BYTE PTR [rcx],al
   140020753:	add    BYTE PTR [rbx],al
   140020755:	sbb    DWORD PTR [rcx],eax
   140020757:	add    al,dl
   140020759:	adc    DWORD PTR [rdx],eax
   14002075b:	add    BYTE PTR [rcx],ah
   14002075d:	add    BYTE PTR [rax],al
   14002075f:	add    BYTE PTR [rax-0x48fffee7],dl
   140020765:	sbb    DWORD PTR [rcx],eax
   140020767:	add    al,dl
   140020769:	adc    DWORD PTR [rdx],eax
   14002076b:	add    BYTE PTR [rcx],ah
   14002076d:	add    eax,0x74050002
   140020772:	(bad)  
   140020773:	add    BYTE PTR [rax-0x48fffee7],dl
   140020779:	sbb    DWORD PTR [rcx],eax
   14002077b:	add    al,dl
   14002077d:	adc    DWORD PTR [rdx],eax
   14002077f:	add    BYTE PTR [rcx],ah
   140020781:	add    BYTE PTR [rax],al
   140020783:	add    BYTE PTR [rax+0x1a],dh
   140020786:	add    DWORD PTR [rax],eax
   140020788:	xchg   ebx,eax
   140020789:	sbb    al,BYTE PTR [rcx]
   14002078b:	add    ah,al
   14002078d:	or     BYTE PTR [rdx],al
   14002078f:	add    BYTE PTR [rcx],ah
   140020791:	add    BYTE PTR [rax],al
   140020793:	add    BYTE PTR [rbx-0x5ffffee6],dl
   140020799:	sbb    al,BYTE PTR [rcx]
   14002079b:	add    BYTE PTR [rdi+rax*1+0x5210002],dh
   1400207a2:	add    al,BYTE PTR [rax]
   1400207a4:	add    eax,0x93000774
   1400207a9:	sbb    al,BYTE PTR [rcx]
   1400207ab:	add    BYTE PTR [rax-0x4bfffee6],ah
   1400207b1:	(bad)  
   1400207b2:	add    al,BYTE PTR [rax]
   1400207b4:	and    DWORD PTR [rip+0x34050002],eax        # 0x1740707bc
   1400207ba:	(bad)  
   1400207bb:	add    BYTE PTR [rax+0x1a],dh
   1400207be:	add    DWORD PTR [rax],eax
   1400207c0:	xchg   ebx,eax
   1400207c1:	sbb    al,BYTE PTR [rcx]
   1400207c3:	add    ah,al
   1400207c5:	or     BYTE PTR [rdx],al
   1400207c7:	add    BYTE PTR [rcx],ah
   1400207c9:	add    BYTE PTR [rax],al
   1400207cb:	add    al,dl
   1400207cd:	sbb    eax,DWORD PTR [rcx]
   1400207cf:	add    bl,dh
   1400207d1:	sbb    eax,DWORD PTR [rcx]
   1400207d3:	add    al,dl
   1400207d5:	adc    DWORD PTR [rdx],eax
   1400207d7:	add    BYTE PTR [rcx],ah
   1400207d9:	add    eax,0x74050002
   1400207de:	(bad)  
   1400207df:	add    al,dl
   1400207e1:	sbb    eax,DWORD PTR [rcx]
   1400207e3:	add    bl,dh
   1400207e5:	sbb    eax,DWORD PTR [rcx]
   1400207e7:	add    al,dl
   1400207e9:	adc    DWORD PTR [rdx],eax
   1400207eb:	add    BYTE PTR [rcx],ah
   1400207ed:	add    BYTE PTR [rax],al
   1400207ef:	add    BYTE PTR [rax-0x5cfffee4],al
   1400207f5:	sbb    al,0x1
   1400207f7:	add    al,dl
   1400207f9:	adc    DWORD PTR [rdx],eax
   1400207fb:	add    BYTE PTR [rcx],ah
   1400207fd:	add    eax,0x74050002
   140020802:	(bad)  
   140020803:	add    BYTE PTR [rax-0x5cfffee4],al
   140020809:	sbb    al,0x1
   14002080b:	add    al,dl
   14002080d:	adc    DWORD PTR [rdx],eax
   14002080f:	add    BYTE PTR [rcx],ah
   140020811:	add    BYTE PTR [rax],al
   140020813:	add    BYTE PTR [rax],al
   140020815:	sbb    eax,0x1d230001
   14002081a:	add    DWORD PTR [rax],eax
   14002081c:	rcl    BYTE PTR [rcx],1
   14002081e:	add    al,BYTE PTR [rax]
   140020820:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070828
   140020826:	(bad)  
   140020827:	add    BYTE PTR [rax],al
   140020829:	sbb    eax,0x1d230001
   14002082e:	add    DWORD PTR [rax],eax
   140020830:	rcl    BYTE PTR [rcx],1
   140020832:	add    al,BYTE PTR [rax]
   140020834:	and    DWORD PTR [rax],eax
   140020836:	add    BYTE PTR [rax],al
   140020838:	mov    al,0x1d
   14002083a:	add    DWORD PTR [rax],eax
   14002083c:	rcr    DWORD PTR [rip+0x11d00001],cl        # 0x151d20843
   140020842:	add    al,BYTE PTR [rax]
   140020844:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407084c
   14002084a:	(bad)  
   14002084b:	add    BYTE PTR [rax-0x2cfffee3],dh
   140020851:	sbb    eax,0x11d00001
   140020856:	add    al,BYTE PTR [rax]
   140020858:	and    DWORD PTR [rax],eax
   14002085a:	add    BYTE PTR [rax],al
   14002085c:	xor    BYTE PTR [rsi],bl
   14002085e:	add    DWORD PTR [rax],eax
   140020860:	push   rbx
   140020861:	(bad)  
   140020862:	add    DWORD PTR [rax],eax
   140020864:	rcl    BYTE PTR [rcx],1
   140020866:	add    al,BYTE PTR [rax]
   140020868:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070870
   14002086e:	(bad)  
   14002086f:	add    BYTE PTR [rax],dh
   140020871:	(bad)  
   140020872:	add    DWORD PTR [rax],eax
   140020874:	push   rbx
   140020875:	(bad)  
   140020876:	add    DWORD PTR [rax],eax
   140020878:	rcl    BYTE PTR [rcx],1
   14002087a:	add    al,BYTE PTR [rax]
   14002087c:	and    DWORD PTR [rax],eax
   14002087e:	add    BYTE PTR [rax],al
   140020880:	loopne 0x1400208a0
   140020882:	add    DWORD PTR [rax],eax
   140020884:	add    ebx,DWORD PTR [rdi]
   140020886:	add    DWORD PTR [rax],eax
   140020888:	(bad)  
   140020889:	or     BYTE PTR [rdx],al
   14002088b:	add    BYTE PTR [rcx],ah
   14002088d:	add    BYTE PTR [rax],al
   14002088f:	add    BYTE PTR [rbx],al
   140020891:	(bad)  
   140020892:	add    DWORD PTR [rax],eax
   140020894:	adc    BYTE PTR [rdi],bl
   140020896:	add    DWORD PTR [rax],eax
   140020898:	mov    al,0x8
   14002089a:	add    al,BYTE PTR [rax]
   14002089c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40708a4
   1400208a2:	(bad)  
   1400208a3:	add    BYTE PTR [rbx],al
   1400208a5:	(bad)  
   1400208a6:	add    DWORD PTR [rax],eax
   1400208a8:	adc    BYTE PTR [rdi],bl
   1400208aa:	add    DWORD PTR [rax],eax
   1400208ac:	mov    al,0x8
   1400208ae:	add    al,BYTE PTR [rax]
   1400208b0:	and    DWORD PTR [rip+0x34050002],eax        # 0x1740708b8
   1400208b6:	(bad)  
   1400208b7:	add    al,ah
   1400208b9:	(bad)  
   1400208ba:	add    DWORD PTR [rax],eax
   1400208bc:	add    ebx,DWORD PTR [rdi]
   1400208be:	add    DWORD PTR [rax],eax
   1400208c0:	(bad)  
   1400208c1:	or     BYTE PTR [rdx],al
   1400208c3:	add    BYTE PTR [rcx],al
   1400208c5:	or     al,BYTE PTR [rax+rax*1]
   1400208c8:	or     dl,BYTE PTR [rax+rcx*1+0x0]
   1400208cc:	or     dh,BYTE PTR [rdx]
   1400208ce:	(bad)  
   1400208cf:	(bad)  
   1400208d0:	and    DWORD PTR [rax],eax
   1400208d2:	add    BYTE PTR [rax],al
   1400208d4:	sbb    BYTE PTR [rdi],0x1
   1400208d7:	add    BYTE PTR [rbx-0x2ffffee1],ah
   1400208dd:	adc    DWORD PTR [rdx],eax
   1400208df:	add    BYTE PTR [rcx],ah
   1400208e1:	add    eax,0x74050002
   1400208e6:	(bad)  
   1400208e7:	add    BYTE PTR [rax-0x5cfffee1],al
   1400208ed:	(bad)  
   1400208ee:	add    DWORD PTR [rax],eax
   1400208f0:	rcl    BYTE PTR [rcx],1
   1400208f2:	add    al,BYTE PTR [rax]
   1400208f4:	and    DWORD PTR [rax],eax
   1400208f6:	add    BYTE PTR [rax],al
   1400208f8:	add    BYTE PTR [rax],ah
   1400208fa:	add    DWORD PTR [rax],eax
   1400208fc:	and    esp,DWORD PTR [rax]
   1400208fe:	add    DWORD PTR [rax],eax
   140020900:	rcl    BYTE PTR [rcx],1
   140020902:	add    al,BYTE PTR [rax]
   140020904:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407090c
   14002090a:	(bad)  
   14002090b:	add    BYTE PTR [rax],al
   14002090d:	and    BYTE PTR [rcx],al
   14002090f:	add    BYTE PTR [rbx],ah
   140020911:	and    BYTE PTR [rcx],al
   140020913:	add    al,dl
   140020915:	adc    DWORD PTR [rdx],eax
   140020917:	add    BYTE PTR [rcx],ah
   140020919:	add    BYTE PTR [rax],al
   14002091b:	add    BYTE PTR [rax-0x5cfffee0],al
   140020921:	and    BYTE PTR [rcx],al
   140020923:	add    al,dl
   140020925:	adc    DWORD PTR [rdx],eax
   140020927:	add    BYTE PTR [rcx],ah
   140020929:	add    eax,0x74050002
   14002092e:	(bad)  
   14002092f:	add    BYTE PTR [rax-0x5cfffee0],al
   140020935:	and    BYTE PTR [rcx],al
   140020937:	add    al,dl
   140020939:	adc    DWORD PTR [rdx],eax
   14002093b:	add    BYTE PTR [rcx],ah
   14002093d:	add    BYTE PTR [rax],al
   14002093f:	add    BYTE PTR [rax],al
   140020941:	and    DWORD PTR [rcx],eax
   140020943:	add    BYTE PTR [rbx],ah
   140020945:	and    DWORD PTR [rcx],eax
   140020947:	add    al,dl
   140020949:	adc    DWORD PTR [rdx],eax
   14002094b:	add    BYTE PTR [rcx],ah
   14002094d:	add    eax,0x74050002
   140020952:	(bad)  
   140020953:	add    BYTE PTR [rax],al
   140020955:	and    DWORD PTR [rcx],eax
   140020957:	add    BYTE PTR [rbx],ah
   140020959:	and    DWORD PTR [rcx],eax
   14002095b:	add    al,dl
   14002095d:	adc    DWORD PTR [rdx],eax
   14002095f:	add    BYTE PTR [rcx],ah
   140020961:	add    BYTE PTR [rax],al
   140020963:	add    BYTE PTR [rax-0x5cfffedf],al
   140020969:	and    DWORD PTR [rcx],eax
   14002096b:	add    al,dl
   14002096d:	adc    DWORD PTR [rdx],eax
   14002096f:	add    BYTE PTR [rcx],ah
   140020971:	add    eax,0x74050002
   140020976:	(bad)  
   140020977:	add    BYTE PTR [rax-0x5cfffedf],al
   14002097d:	and    DWORD PTR [rcx],eax
   14002097f:	add    al,dl
   140020981:	adc    DWORD PTR [rdx],eax
   140020983:	add    BYTE PTR [rcx],ah
   140020985:	add    BYTE PTR [rax],al
   140020987:	add    BYTE PTR [rax],al
   140020989:	and    al,BYTE PTR [rcx]
   14002098b:	add    BYTE PTR [rbx],ah
   14002098d:	and    al,BYTE PTR [rcx]
   14002098f:	add    al,dl
   140020991:	adc    DWORD PTR [rdx],eax
   140020993:	add    BYTE PTR [rcx],ah
   140020995:	add    eax,0x74050002
   14002099a:	(bad)  
   14002099b:	add    BYTE PTR [rax],al
   14002099d:	and    al,BYTE PTR [rcx]
   14002099f:	add    BYTE PTR [rbx],ah
   1400209a1:	and    al,BYTE PTR [rcx]
   1400209a3:	add    al,dl
   1400209a5:	adc    DWORD PTR [rdx],eax
   1400209a7:	add    BYTE PTR [rcx],ah
   1400209a9:	add    BYTE PTR [rax],al
   1400209ab:	add    BYTE PTR [rax-0x5cfffede],al
   1400209b1:	and    al,BYTE PTR [rcx]
   1400209b3:	add    al,dl
   1400209b5:	adc    DWORD PTR [rdx],eax
   1400209b7:	add    BYTE PTR [rcx],ah
   1400209b9:	add    eax,0x74050002
   1400209be:	(bad)  
   1400209bf:	add    BYTE PTR [rax-0x5cfffede],al
   1400209c5:	and    al,BYTE PTR [rcx]
   1400209c7:	add    al,dl
   1400209c9:	adc    DWORD PTR [rdx],eax
   1400209cb:	add    BYTE PTR [rcx],ah
   1400209cd:	add    BYTE PTR [rax],al
   1400209cf:	add    BYTE PTR [rax],al
   1400209d1:	and    eax,DWORD PTR [rcx]
   1400209d3:	add    BYTE PTR [rbx],ah
   1400209d5:	and    eax,DWORD PTR [rcx]
   1400209d7:	add    al,dl
   1400209d9:	adc    DWORD PTR [rdx],eax
   1400209db:	add    BYTE PTR [rcx],ah
   1400209dd:	add    eax,0x74050002
   1400209e2:	(bad)  
   1400209e3:	add    BYTE PTR [rax],al
   1400209e5:	and    eax,DWORD PTR [rcx]
   1400209e7:	add    BYTE PTR [rbx],ah
   1400209e9:	and    eax,DWORD PTR [rcx]
   1400209eb:	add    al,dl
   1400209ed:	adc    DWORD PTR [rdx],eax
   1400209ef:	add    BYTE PTR [rcx],ah
   1400209f1:	add    BYTE PTR [rax],al
   1400209f3:	add    BYTE PTR [rax-0x5cfffedd],al
   1400209f9:	and    eax,DWORD PTR [rcx]
   1400209fb:	add    al,dl
   1400209fd:	adc    DWORD PTR [rdx],eax
   1400209ff:	add    BYTE PTR [rcx],ah
   140020a01:	add    eax,0x74050002
   140020a06:	(bad)  
   140020a07:	add    BYTE PTR [rax-0x5cfffedd],al
   140020a0d:	and    eax,DWORD PTR [rcx]
   140020a0f:	add    al,dl
   140020a11:	adc    DWORD PTR [rdx],eax
   140020a13:	add    BYTE PTR [rcx],ah
   140020a15:	add    BYTE PTR [rax],al
   140020a17:	add    BYTE PTR [rax],al
   140020a19:	and    al,0x1
   140020a1b:	add    BYTE PTR [rbx],ah
   140020a1d:	and    al,0x1
   140020a1f:	add    al,dl
   140020a21:	adc    DWORD PTR [rdx],eax
   140020a23:	add    BYTE PTR [rcx],ah
   140020a25:	add    eax,0x74050002
   140020a2a:	(bad)  
   140020a2b:	add    BYTE PTR [rax],al
   140020a2d:	and    al,0x1
   140020a2f:	add    BYTE PTR [rbx],ah
   140020a31:	and    al,0x1
   140020a33:	add    al,dl
   140020a35:	adc    DWORD PTR [rdx],eax
   140020a37:	add    BYTE PTR [rcx],ah
   140020a39:	add    BYTE PTR [rax],al
   140020a3b:	add    BYTE PTR [rax-0x5cfffedc],al
   140020a41:	and    al,0x1
   140020a43:	add    al,dl
   140020a45:	adc    DWORD PTR [rdx],eax
   140020a47:	add    BYTE PTR [rcx],ah
   140020a49:	add    eax,0x74050002
   140020a4e:	(bad)  
   140020a4f:	add    BYTE PTR [rax-0x5cfffedc],al
   140020a55:	and    al,0x1
   140020a57:	add    al,dl
   140020a59:	adc    DWORD PTR [rdx],eax
   140020a5b:	add    BYTE PTR [rcx],ah
   140020a5d:	add    BYTE PTR [rax],al
   140020a5f:	add    BYTE PTR [rax],al
   140020a61:	and    eax,0x25230001
   140020a66:	add    DWORD PTR [rax],eax
   140020a68:	rcl    BYTE PTR [rcx],1
   140020a6a:	add    al,BYTE PTR [rax]
   140020a6c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070a74
   140020a72:	(bad)  
   140020a73:	add    BYTE PTR [rax],al
   140020a75:	and    eax,0x25230001
   140020a7a:	add    DWORD PTR [rax],eax
   140020a7c:	rcl    BYTE PTR [rcx],1
   140020a7e:	add    al,BYTE PTR [rax]
   140020a80:	and    DWORD PTR [rax],eax
   140020a82:	add    BYTE PTR [rax],al
   140020a84:	mov    al,0x25
   140020a86:	add    DWORD PTR [rax],eax
   140020a88:	xlat   BYTE PTR ds:[rbx]
   140020a89:	and    eax,0x11d00001
   140020a8e:	add    al,BYTE PTR [rax]
   140020a90:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070a98
   140020a96:	(bad)  
   140020a97:	add    BYTE PTR [rax-0x28fffedb],dh
   140020a9d:	and    eax,0x11d00001
   140020aa2:	add    al,BYTE PTR [rax]
   140020aa4:	and    DWORD PTR [rax],eax
   140020aa6:	add    BYTE PTR [rax],al
   140020aa8:	nop
   140020aa9:	add    DWORD PTR es:[rax],eax
   140020aac:	mov    bl,0x26
   140020aae:	add    DWORD PTR [rax],eax
   140020ab0:	rcl    BYTE PTR [rcx],1
   140020ab2:	add    al,BYTE PTR [rax]
   140020ab4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070abc
   140020aba:	(bad)  
   140020abb:	add    BYTE PTR [rax-0x4cfffeda],dl
   140020ac1:	add    DWORD PTR es:[rax],eax
   140020ac4:	rcl    BYTE PTR [rcx],1
   140020ac6:	add    al,BYTE PTR [rax]
   140020ac8:	and    DWORD PTR [rax],eax
   140020aca:	add    BYTE PTR [rax],al
   140020acc:	rex (bad) 
   140020ace:	add    DWORD PTR [rax],eax
   140020ad0:	movsxd esp,DWORD PTR [rdi]
   140020ad2:	add    DWORD PTR [rax],eax
   140020ad4:	rcl    BYTE PTR [rcx],1
   140020ad6:	add    al,BYTE PTR [rax]
   140020ad8:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070ae0
   140020ade:	(bad)  
   140020adf:	add    BYTE PTR [rax+0x27],al
   140020ae2:	add    DWORD PTR [rax],eax
   140020ae4:	movsxd esp,DWORD PTR [rdi]
   140020ae6:	add    DWORD PTR [rax],eax
   140020ae8:	rcl    BYTE PTR [rcx],1
   140020aea:	add    al,BYTE PTR [rax]
   140020aec:	and    DWORD PTR [rax],eax
   140020aee:	add    BYTE PTR [rax],al
   140020af0:	shl    BYTE PTR [rdi],0x1
   140020af3:	add    bl,ah
   140020af5:	(bad)  
   140020af6:	add    DWORD PTR [rax],eax
   140020af8:	(bad)  
   140020af9:	or     BYTE PTR [rdx],al
   140020afb:	add    BYTE PTR [rcx],ah
   140020afd:	add    BYTE PTR [rax],al
   140020aff:	add    bl,ah
   140020b01:	(bad)  
   140020b02:	add    DWORD PTR [rax],eax
   140020b04:	lock (bad) 
   140020b06:	add    DWORD PTR [rax],eax
   140020b08:	and    BYTE PTR [rbx],cl
   140020b0a:	add    al,BYTE PTR [rax]
   140020b0c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070b14
   140020b12:	(bad)  
   140020b13:	add    bl,ah
   140020b15:	(bad)  
   140020b16:	add    DWORD PTR [rax],eax
   140020b18:	lock (bad) 
   140020b1a:	add    DWORD PTR [rax],eax
   140020b1c:	and    BYTE PTR [rbx],cl
   140020b1e:	add    al,BYTE PTR [rax]
   140020b20:	and    DWORD PTR [rip+0x34050002],eax        # 0x174070b28
   140020b26:	(bad)  
   140020b27:	add    al,al
   140020b29:	(bad)  
   140020b2a:	add    DWORD PTR [rax],eax
   140020b2c:	jrcxz  0x140020b55
   140020b2e:	add    DWORD PTR [rax],eax
   140020b30:	(bad)  
   140020b31:	or     BYTE PTR [rdx],al
   140020b33:	add    BYTE PTR [rcx],ah
   140020b35:	add    BYTE PTR [rax],al
   140020b37:	add    BYTE PTR [rax+0x28],ah
   140020b3a:	add    DWORD PTR [rax],eax
   140020b3c:	sub    DWORD PTR [rax],0x1
   140020b3f:	add    al,dl
   140020b41:	adc    DWORD PTR [rdx],eax
   140020b43:	add    BYTE PTR [rcx],ah
   140020b45:	add    eax,0x74050002
   140020b4a:	(bad)  
   140020b4b:	add    BYTE PTR [rax+0x28],ah
   140020b4e:	add    DWORD PTR [rax],eax
   140020b50:	sub    DWORD PTR [rax],0x1
   140020b53:	add    al,dl
   140020b55:	adc    DWORD PTR [rdx],eax
   140020b57:	add    BYTE PTR [rcx],ah
   140020b59:	add    BYTE PTR [rax],al
   140020b5b:	add    al,ah
   140020b5d:	sub    BYTE PTR [rcx],al
   140020b5f:	add    BYTE PTR [rbx],al
   140020b61:	sub    DWORD PTR [rcx],eax
   140020b63:	add    ah,al
   140020b65:	or     BYTE PTR [rdx],al
   140020b67:	add    BYTE PTR [rcx],ah
   140020b69:	add    BYTE PTR [rax],al
   140020b6b:	add    BYTE PTR [rbx],al
   140020b6d:	sub    DWORD PTR [rcx],eax
   140020b6f:	add    BYTE PTR [rax],dl
   140020b71:	sub    DWORD PTR [rcx],eax
   140020b73:	add    BYTE PTR [rbx+rcx*1+0x5210002],cl
   140020b7a:	add    al,BYTE PTR [rax]
   140020b7c:	add    eax,0x3000774
   140020b81:	sub    DWORD PTR [rcx],eax
   140020b83:	add    BYTE PTR [rax],dl
   140020b85:	sub    DWORD PTR [rcx],eax
   140020b87:	add    BYTE PTR [rbx+rcx*1+0x5210002],cl
   140020b8e:	add    al,BYTE PTR [rax]
   140020b90:	add    eax,0xe0000634
   140020b95:	sub    BYTE PTR [rcx],al
   140020b97:	add    BYTE PTR [rbx],al
   140020b99:	sub    DWORD PTR [rcx],eax
   140020b9b:	add    ah,al
   140020b9d:	or     BYTE PTR [rdx],al
   140020b9f:	add    BYTE PTR [rcx],ah
   140020ba1:	add    BYTE PTR [rax],al
   140020ba3:	add    BYTE PTR [rax-0x5cfffed7],al
   140020ba9:	sub    DWORD PTR [rcx],eax
   140020bab:	add    al,dl
   140020bad:	adc    DWORD PTR [rdx],eax
   140020baf:	add    BYTE PTR [rcx],ah
   140020bb1:	add    eax,0x74050002
   140020bb6:	(bad)  
   140020bb7:	add    BYTE PTR [rax-0x5cfffed7],al
   140020bbd:	sub    DWORD PTR [rcx],eax
   140020bbf:	add    al,dl
   140020bc1:	adc    DWORD PTR [rdx],eax
   140020bc3:	add    BYTE PTR [rcx],ah
   140020bc5:	add    BYTE PTR [rax],al
   140020bc7:	add    BYTE PTR [rax+0x2a],al
   140020bca:	add    DWORD PTR [rax],eax
   140020bcc:	movsxd ebp,DWORD PTR [rdx]
   140020bce:	add    DWORD PTR [rax],eax
   140020bd0:	rcl    BYTE PTR [rcx],1
   140020bd2:	add    al,BYTE PTR [rax]
   140020bd4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070bdc
   140020bda:	(bad)  
   140020bdb:	add    BYTE PTR [rax+0x2a],al
   140020bde:	add    DWORD PTR [rax],eax
   140020be0:	movsxd ebp,DWORD PTR [rdx]
   140020be2:	add    DWORD PTR [rax],eax
   140020be4:	rcl    BYTE PTR [rcx],1
   140020be6:	add    al,BYTE PTR [rax]
   140020be8:	and    DWORD PTR [rax],eax
   140020bea:	add    BYTE PTR [rax],al
   140020bec:	shr    BYTE PTR [rdx],0x1
   140020bef:	add    bh,ah
   140020bf1:	sub    al,BYTE PTR [rcx]
   140020bf3:	add    al,dl
   140020bf5:	adc    DWORD PTR [rdx],eax
   140020bf7:	add    BYTE PTR [rcx],ah
   140020bf9:	add    eax,0x74050002
   140020bfe:	(bad)  
   140020bff:	add    al,al
   140020c01:	sub    al,BYTE PTR [rcx]
   140020c03:	add    bh,ah
   140020c05:	sub    al,BYTE PTR [rcx]
   140020c07:	add    al,dl
   140020c09:	adc    DWORD PTR [rdx],eax
   140020c0b:	add    BYTE PTR [rcx],ah
   140020c0d:	add    BYTE PTR [rax],al
   140020c0f:	add    BYTE PTR [rax-0x3cfffed5],ah
   140020c15:	sub    eax,DWORD PTR [rcx]
   140020c17:	add    al,dl
   140020c19:	adc    DWORD PTR [rdx],eax
   140020c1b:	add    BYTE PTR [rcx],ah
   140020c1d:	add    eax,0x74050002
   140020c22:	(bad)  
   140020c23:	add    BYTE PTR [rax-0x3cfffed5],ah
   140020c29:	sub    eax,DWORD PTR [rcx]
   140020c2b:	add    al,dl
   140020c2d:	adc    DWORD PTR [rdx],eax
   140020c2f:	add    BYTE PTR [rcx],ah
   140020c31:	add    BYTE PTR [rax],al
   140020c33:	add    BYTE PTR [rax+0x2c],dl
   140020c36:	add    DWORD PTR [rax],eax
   140020c38:	jae    0x140020c66
   140020c3a:	add    DWORD PTR [rax],eax
   140020c3c:	rcl    BYTE PTR [rcx],1
   140020c3e:	add    al,BYTE PTR [rax]
   140020c40:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070c48
   140020c46:	(bad)  
   140020c47:	add    BYTE PTR [rax+0x2c],dl
   140020c4a:	add    DWORD PTR [rax],eax
   140020c4c:	jae    0x140020c7a
   140020c4e:	add    DWORD PTR [rax],eax
   140020c50:	rcl    BYTE PTR [rcx],1
   140020c52:	add    al,BYTE PTR [rax]
   140020c54:	and    DWORD PTR [rax],eax
   140020c56:	add    BYTE PTR [rax],al
   140020c58:	add    BYTE PTR [rip+0x2d270001],ch        # 0x16d290c5f
   140020c5e:	add    DWORD PTR [rax],eax
   140020c60:	rcl    BYTE PTR [rcx],1
   140020c62:	add    al,BYTE PTR [rax]
   140020c64:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070c6c
   140020c6a:	(bad)  
   140020c6b:	add    BYTE PTR [rax],al
   140020c6d:	sub    eax,0x2d270001
   140020c72:	add    DWORD PTR [rax],eax
   140020c74:	rcl    BYTE PTR [rcx],1
   140020c76:	add    al,BYTE PTR [rax]
   140020c78:	and    DWORD PTR [rax],eax
   140020c7a:	add    BYTE PTR [rax],al
   140020c7c:	adc    BYTE PTR [rsi],ch
   140020c7e:	add    DWORD PTR [rax],eax
   140020c80:	(bad)  
   140020c81:	add    DWORD PTR cs:[rax],eax
   140020c84:	rcl    BYTE PTR [rcx],1
   140020c86:	add    al,BYTE PTR [rax]
   140020c88:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070c90
   140020c8e:	(bad)  
   140020c8f:	add    BYTE PTR [rax],dl
   140020c91:	add    DWORD PTR cs:[rax],eax
   140020c94:	(bad)  
   140020c95:	add    DWORD PTR cs:[rax],eax
   140020c98:	rcl    BYTE PTR [rcx],1
   140020c9a:	add    al,BYTE PTR [rax]
   140020c9c:	and    DWORD PTR [rax],eax
   140020c9e:	add    BYTE PTR [rax],al
   140020ca0:	and    BYTE PTR [rdi],ch
   140020ca2:	add    DWORD PTR [rax],eax
   140020ca4:	rex.RXB (bad) 
   140020ca6:	add    DWORD PTR [rax],eax
   140020ca8:	rcl    BYTE PTR [rcx],1
   140020caa:	add    al,BYTE PTR [rax]
   140020cac:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070cb4
   140020cb2:	(bad)  
   140020cb3:	add    BYTE PTR [rax],ah
   140020cb5:	(bad)  
   140020cb6:	add    DWORD PTR [rax],eax
   140020cb8:	rex.RXB (bad) 
   140020cba:	add    DWORD PTR [rax],eax
   140020cbc:	rcl    BYTE PTR [rcx],1
   140020cbe:	add    al,BYTE PTR [rax]
   140020cc0:	and    DWORD PTR [rax],eax
   140020cc2:	add    BYTE PTR [rax],al
   140020cc4:	add    BYTE PTR [rax],dh
   140020cc6:	add    DWORD PTR [rax],eax
   140020cc8:	(bad)  
   140020cc9:	xor    BYTE PTR [rcx],al
   140020ccb:	add    al,dl
   140020ccd:	adc    DWORD PTR [rdx],eax
   140020ccf:	add    BYTE PTR [rcx],ah
   140020cd1:	add    eax,0x74050002
   140020cd6:	(bad)  
   140020cd7:	add    BYTE PTR [rax],al
   140020cd9:	xor    BYTE PTR [rcx],al
   140020cdb:	add    BYTE PTR [rdi],ah
   140020cdd:	xor    BYTE PTR [rcx],al
   140020cdf:	add    al,dl
   140020ce1:	adc    DWORD PTR [rdx],eax
   140020ce3:	add    BYTE PTR [rcx],ah
   140020ce5:	add    BYTE PTR [rax],al
   140020ce7:	add    BYTE PTR [rax+0x31],ah
   140020cea:	add    DWORD PTR [rax],eax
   140020cec:	xor    DWORD PTR [rcx],0x1
   140020cef:	add    al,dl
   140020cf1:	adc    DWORD PTR [rdx],eax
   140020cf3:	add    BYTE PTR [rcx],ah
   140020cf5:	add    eax,0x74050002
   140020cfa:	(bad)  
   140020cfb:	add    BYTE PTR [rax+0x31],ah
   140020cfe:	add    DWORD PTR [rax],eax
   140020d00:	xor    DWORD PTR [rcx],0x1
   140020d03:	add    al,dl
   140020d05:	adc    DWORD PTR [rdx],eax
   140020d07:	add    BYTE PTR [rcx],ah
   140020d09:	add    BYTE PTR [rax],al
   140020d0b:	add    al,ah
   140020d0d:	xor    DWORD PTR [rcx],eax
   140020d0f:	add    BYTE PTR [rbx],al
   140020d11:	xor    al,BYTE PTR [rcx]
   140020d13:	add    al,dl
   140020d15:	adc    DWORD PTR [rdx],eax
   140020d17:	add    BYTE PTR [rcx],ah
   140020d19:	add    eax,0x74050002
   140020d1e:	(bad)  
   140020d1f:	add    al,ah
   140020d21:	xor    DWORD PTR [rcx],eax
   140020d23:	add    BYTE PTR [rbx],al
   140020d25:	xor    al,BYTE PTR [rcx]
   140020d27:	add    al,dl
   140020d29:	adc    DWORD PTR [rdx],eax
   140020d2b:	add    BYTE PTR [rcx],ah
   140020d2d:	add    BYTE PTR [rax],al
   140020d2f:	add    BYTE PTR [rax-0x4cfffece],dl
   140020d35:	xor    al,BYTE PTR [rcx]
   140020d37:	add    al,dl
   140020d39:	adc    DWORD PTR [rdx],eax
   140020d3b:	add    BYTE PTR [rcx],ah
   140020d3d:	add    eax,0x74050002
   140020d42:	(bad)  
   140020d43:	add    BYTE PTR [rax-0x4cfffece],dl
   140020d49:	xor    al,BYTE PTR [rcx]
   140020d4b:	add    al,dl
   140020d4d:	adc    DWORD PTR [rdx],eax
   140020d4f:	add    BYTE PTR [rcx],ah
   140020d51:	add    BYTE PTR [rax],al
   140020d53:	add    BYTE PTR [rax+0x33],al
   140020d56:	add    DWORD PTR [rax],eax
   140020d58:	xor    eax,DWORD PTR [ecx]
   140020d5b:	add    al,dl
   140020d5d:	adc    DWORD PTR [rdx],eax
   140020d5f:	add    BYTE PTR [rcx],ah
   140020d61:	add    eax,0x74050002
   140020d66:	(bad)  
   140020d67:	add    BYTE PTR [rax+0x33],al
   140020d6a:	add    DWORD PTR [rax],eax
   140020d6c:	xor    eax,DWORD PTR [ecx]
   140020d6f:	add    al,dl
   140020d71:	adc    DWORD PTR [rdx],eax
   140020d73:	add    BYTE PTR [rcx],ah
   140020d75:	add    BYTE PTR [rax],al
   140020d77:	add    BYTE PTR [rax],ah
   140020d79:	xor    al,0x1
   140020d7b:	add    BYTE PTR [rbx+0x34],al
   140020d7e:	add    DWORD PTR [rax],eax
   140020d80:	(bad)  
   140020d81:	or     BYTE PTR [rdx],al
   140020d83:	add    BYTE PTR [rcx],ah
   140020d85:	add    BYTE PTR [rax],al
   140020d87:	add    BYTE PTR [rbx+0x34],al
   140020d8a:	add    DWORD PTR [rax],eax
   140020d8c:	push   rax
   140020d8d:	xor    al,0x1
   140020d8f:	add    BYTE PTR [rax+0x2100020d],ch
   140020d95:	add    eax,0x74050002
   140020d9a:	(bad)  
   140020d9b:	add    BYTE PTR [rbx+0x34],al
   140020d9e:	add    DWORD PTR [rax],eax
   140020da0:	push   rax
   140020da1:	xor    al,0x1
   140020da3:	add    BYTE PTR [rax+0x2100020d],ch
   140020da9:	add    eax,0x34050002
   140020dae:	(bad)  
   140020daf:	add    BYTE PTR [rax],ah
   140020db1:	xor    al,0x1
   140020db3:	add    BYTE PTR [rbx+0x34],al
   140020db6:	add    DWORD PTR [rax],eax
   140020db8:	(bad)  
   140020db9:	or     BYTE PTR [rdx],al
   140020dbb:	add    BYTE PTR [rcx],ah
   140020dbd:	add    BYTE PTR [rax],al
   140020dbf:	add    al,al
   140020dc1:	xor    al,0x1
   140020dc3:	add    bl,ah
   140020dc5:	xor    al,0x1
   140020dc7:	add    al,dl
   140020dc9:	adc    DWORD PTR [rdx],eax
   140020dcb:	add    BYTE PTR [rcx],ah
   140020dcd:	add    eax,0x74050002
   140020dd2:	(bad)  
   140020dd3:	add    al,al
   140020dd5:	xor    al,0x1
   140020dd7:	add    bl,ah
   140020dd9:	xor    al,0x1
   140020ddb:	add    al,dl
   140020ddd:	adc    DWORD PTR [rdx],eax
   140020ddf:	add    BYTE PTR [rcx],ah
   140020de1:	add    BYTE PTR [rax],al
   140020de3:	add    BYTE PTR [rax+0x35],dh
   140020de6:	add    DWORD PTR [rax],eax
   140020de8:	xchg   ebx,eax
   140020de9:	xor    eax,0x11d00001
   140020dee:	add    al,BYTE PTR [rax]
   140020df0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070df8
   140020df6:	(bad)  
   140020df7:	add    BYTE PTR [rax+0x35],dh
   140020dfa:	add    DWORD PTR [rax],eax
   140020dfc:	xchg   ebx,eax
   140020dfd:	xor    eax,0x11d00001
   140020e02:	add    al,BYTE PTR [rax]
   140020e04:	and    DWORD PTR [rax],eax
   140020e06:	add    BYTE PTR [rax],al
   140020e08:	lock xor eax,0x36130001
   140020e0e:	add    DWORD PTR [rax],eax
   140020e10:	rcl    BYTE PTR [rcx],1
   140020e12:	add    al,BYTE PTR [rax]
   140020e14:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070e1c
   140020e1a:	(bad)  
   140020e1b:	add    al,dh
   140020e1d:	xor    eax,0x36130001
   140020e22:	add    DWORD PTR [rax],eax
   140020e24:	rcl    BYTE PTR [rcx],1
   140020e26:	add    al,BYTE PTR [rax]
   140020e28:	and    DWORD PTR [rax],eax
   140020e2a:	add    BYTE PTR [rax],al
   140020e2c:	jo     0x140020e64
   140020e2e:	add    DWORD PTR [rax],eax
   140020e30:	nop
   140020e31:	add    DWORD PTR ss:[rax],eax
   140020e34:	rcl    BYTE PTR [rcx],1
   140020e36:	add    al,BYTE PTR [rax]
   140020e38:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070e40
   140020e3e:	(bad)  
   140020e3f:	add    BYTE PTR [rax+0x36],dh
   140020e42:	add    DWORD PTR [rax],eax
   140020e44:	nop
   140020e45:	add    DWORD PTR ss:[rax],eax
   140020e48:	rcl    BYTE PTR [rcx],1
   140020e4a:	add    al,BYTE PTR [rax]
   140020e4c:	and    DWORD PTR [rax],eax
   140020e4e:	add    BYTE PTR [rax],al
   140020e50:	lock add DWORD PTR ss:[rax],eax
   140020e54:	adc    al,0x37
   140020e56:	add    DWORD PTR [rax],eax
   140020e58:	rcl    BYTE PTR [rcx],1
   140020e5a:	add    al,BYTE PTR [rax]
   140020e5c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070e64
   140020e62:	(bad)  
   140020e63:	add    al,dh
   140020e65:	add    DWORD PTR ss:[rax],eax
   140020e68:	adc    al,0x37
   140020e6a:	add    DWORD PTR [rax],eax
   140020e6c:	rcl    BYTE PTR [rcx],1
   140020e6e:	add    al,BYTE PTR [rax]
   140020e70:	and    DWORD PTR [rax],eax
   140020e72:	add    BYTE PTR [rax],al
   140020e74:	shl    BYTE PTR [rdi],1
   140020e76:	add    DWORD PTR [rax],eax
   140020e78:	lock (bad) 
   140020e7a:	add    DWORD PTR [rax],eax
   140020e7c:	rcl    BYTE PTR [rcx],1
   140020e7e:	add    al,BYTE PTR [rax]
   140020e80:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070e88
   140020e86:	(bad)  
   140020e87:	add    al,dl
   140020e89:	(bad)  
   140020e8a:	add    DWORD PTR [rax],eax
   140020e8c:	lock (bad) 
   140020e8e:	add    DWORD PTR [rax],eax
   140020e90:	rcl    BYTE PTR [rcx],1
   140020e92:	add    al,BYTE PTR [rax]
   140020e94:	and    DWORD PTR [rax],eax
   140020e96:	add    BYTE PTR [rax],al
   140020e98:	push   rax
   140020e99:	cmp    BYTE PTR [rcx],al
   140020e9b:	add    BYTE PTR [rax+0x38],dh
   140020e9e:	add    DWORD PTR [rax],eax
   140020ea0:	rcl    BYTE PTR [rcx],1
   140020ea2:	add    al,BYTE PTR [rax]
   140020ea4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070eac
   140020eaa:	(bad)  
   140020eab:	add    BYTE PTR [rax+0x38],dl
   140020eae:	add    DWORD PTR [rax],eax
   140020eb0:	jo     0x140020eea
   140020eb2:	add    DWORD PTR [rax],eax
   140020eb4:	rcl    BYTE PTR [rcx],1
   140020eb6:	add    al,BYTE PTR [rax]
   140020eb8:	and    DWORD PTR [rax],eax
   140020eba:	add    BYTE PTR [rax],al
   140020ebc:	sar    BYTE PTR [rax],1
   140020ebe:	add    DWORD PTR [rax],eax
   140020ec0:	lock cmp BYTE PTR [rcx],al
   140020ec3:	add    al,dl
   140020ec5:	adc    DWORD PTR [rdx],eax
   140020ec7:	add    BYTE PTR [rcx],ah
   140020ec9:	add    eax,0x74050002
   140020ece:	(bad)  
   140020ecf:	add    al,dl
   140020ed1:	cmp    BYTE PTR [rcx],al
   140020ed3:	add    al,dh
   140020ed5:	cmp    BYTE PTR [rcx],al
   140020ed7:	add    al,dl
   140020ed9:	adc    DWORD PTR [rdx],eax
   140020edb:	add    BYTE PTR [rcx],ah
   140020edd:	add    BYTE PTR [rax],al
   140020edf:	add    BYTE PTR [rax-0x5ffffec7],al
   140020ee5:	cmp    DWORD PTR [rcx],eax
   140020ee7:	add    al,dl
   140020ee9:	adc    DWORD PTR [rdx],eax
   140020eeb:	add    BYTE PTR [rcx],ah
   140020eed:	add    eax,0x74050002
   140020ef2:	(bad)  
   140020ef3:	add    BYTE PTR [rax-0x5ffffec7],al
   140020ef9:	cmp    DWORD PTR [rcx],eax
   140020efb:	add    al,dl
   140020efd:	adc    DWORD PTR [rdx],eax
   140020eff:	add    BYTE PTR [rcx],ah
   140020f01:	add    BYTE PTR [rax],al
   140020f03:	add    BYTE PTR [rax+0x3a],dh
   140020f06:	add    DWORD PTR [rax],eax
   140020f08:	nop
   140020f09:	cmp    al,BYTE PTR [rcx]
   140020f0b:	add    al,dl
   140020f0d:	adc    DWORD PTR [rdx],eax
   140020f0f:	add    BYTE PTR [rcx],ah
   140020f11:	add    eax,0x74050002
   140020f16:	(bad)  
   140020f17:	add    BYTE PTR [rax+0x3a],dh
   140020f1a:	add    DWORD PTR [rax],eax
   140020f1c:	nop
   140020f1d:	cmp    al,BYTE PTR [rcx]
   140020f1f:	add    al,dl
   140020f21:	adc    DWORD PTR [rdx],eax
   140020f23:	add    BYTE PTR [rcx],ah
   140020f25:	add    BYTE PTR [rax],al
   140020f27:	add    al,dh
   140020f29:	cmp    al,BYTE PTR [rcx]
   140020f2b:	add    BYTE PTR [rax],dl
   140020f2d:	cmp    eax,DWORD PTR [rcx]
   140020f2f:	add    al,dl
   140020f31:	adc    DWORD PTR [rdx],eax
   140020f33:	add    BYTE PTR [rcx],ah
   140020f35:	add    eax,0x74050002
   140020f3a:	(bad)  
   140020f3b:	add    al,dh
   140020f3d:	cmp    al,BYTE PTR [rcx]
   140020f3f:	add    BYTE PTR [rax],dl
   140020f41:	cmp    eax,DWORD PTR [rcx]
   140020f43:	add    al,dl
   140020f45:	adc    DWORD PTR [rdx],eax
   140020f47:	add    BYTE PTR [rcx],ah
   140020f49:	add    BYTE PTR [rax],al
   140020f4b:	add    BYTE PTR [rax+0x3b],dh
   140020f4e:	add    DWORD PTR [rax],eax
   140020f50:	nop
   140020f51:	cmp    eax,DWORD PTR [rcx]
   140020f53:	add    ah,al
   140020f55:	or     BYTE PTR [rdx],al
   140020f57:	add    BYTE PTR [rcx],ah
   140020f59:	add    BYTE PTR [rax],al
   140020f5b:	add    BYTE PTR [rax-0x62fffec5],dl
   140020f61:	cmp    eax,DWORD PTR [rcx]
   140020f63:	add    BYTE PTR [rdi+rcx*1+0x2],bh
   140020f67:	add    BYTE PTR [rcx],ah
   140020f69:	add    eax,0x74050002
   140020f6e:	(bad)  
   140020f6f:	add    BYTE PTR [rax-0x62fffec5],dl
   140020f75:	cmp    eax,DWORD PTR [rcx]
   140020f77:	add    BYTE PTR [rdi+rcx*1+0x2],bh
   140020f7b:	add    BYTE PTR [rcx],ah
   140020f7d:	add    eax,0x34050002
   140020f82:	(bad)  
   140020f83:	add    BYTE PTR [rax+0x3b],dh
   140020f86:	add    DWORD PTR [rax],eax
   140020f88:	nop
   140020f89:	cmp    eax,DWORD PTR [rcx]
   140020f8b:	add    ah,al
   140020f8d:	or     BYTE PTR [rdx],al
   140020f8f:	add    BYTE PTR [rcx],ah
   140020f91:	add    BYTE PTR [rax],al
   140020f93:	add    BYTE PTR [rax],al
   140020f95:	cmp    al,0x1
   140020f97:	add    BYTE PTR [rax],ah
   140020f99:	cmp    al,0x1
   140020f9b:	add    al,dl
   140020f9d:	adc    DWORD PTR [rdx],eax
   140020f9f:	add    BYTE PTR [rcx],ah
   140020fa1:	add    eax,0x74050002
   140020fa6:	(bad)  
   140020fa7:	add    BYTE PTR [rax],al
   140020fa9:	cmp    al,0x1
   140020fab:	add    BYTE PTR [rax],ah
   140020fad:	cmp    al,0x1
   140020faf:	add    al,dl
   140020fb1:	adc    DWORD PTR [rdx],eax
   140020fb3:	add    BYTE PTR [rcx],ah
   140020fb5:	add    BYTE PTR [rax],al
   140020fb7:	add    BYTE PTR [rax-0x5ffffec4],al
   140020fbd:	cmp    al,0x1
   140020fbf:	add    al,dl
   140020fc1:	adc    DWORD PTR [rdx],eax
   140020fc3:	add    BYTE PTR [rcx],ah
   140020fc5:	add    eax,0x74050002
   140020fca:	(bad)  
   140020fcb:	add    BYTE PTR [rax-0x5ffffec4],al
   140020fd1:	cmp    al,0x1
   140020fd3:	add    al,dl
   140020fd5:	adc    DWORD PTR [rdx],eax
   140020fd7:	add    BYTE PTR [rcx],ah
   140020fd9:	add    BYTE PTR [rax],al
   140020fdb:	add    BYTE PTR [rax+0x3d],al
   140020fde:	add    DWORD PTR [rax],eax
   140020fe0:	movsxd edi,DWORD PTR [rip+0x11d00001]        # 0x151d20fe7
   140020fe6:	add    al,BYTE PTR [rax]
   140020fe8:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4070ff0
   140020fee:	(bad)  
   140020fef:	add    BYTE PTR [rax+0x3d],al
   140020ff2:	add    DWORD PTR [rax],eax
   140020ff4:	movsxd edi,DWORD PTR [rip+0x11d00001]        # 0x151d20ffb
   140020ffa:	add    al,BYTE PTR [rax]
   140020ffc:	and    DWORD PTR [rax],eax
   140020ffe:	add    BYTE PTR [rax],al
   140021000:	lock cmp eax,0x3e130001
   140021006:	add    DWORD PTR [rax],eax
   140021008:	rcl    BYTE PTR [rcx],1
   14002100a:	add    al,BYTE PTR [rax]
   14002100c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4071014
   140021012:	(bad)  
   140021013:	add    al,dh
   140021015:	cmp    eax,0x3e130001
   14002101a:	add    DWORD PTR [rax],eax
   14002101c:	rcl    BYTE PTR [rcx],1
   14002101e:	add    al,BYTE PTR [rax]
   140021020:	and    DWORD PTR [rax],eax
   140021022:	add    BYTE PTR [rax],al
   140021024:	movabs al,ds:0xd000013ec300013e
   14002102d:	adc    DWORD PTR [rdx],eax
   14002102f:	add    BYTE PTR [rcx],ah
   140021031:	add    eax,0x74050002
   140021036:	(bad)  
   140021037:	add    BYTE PTR [rax-0x3cfffec2],ah
   14002103d:	add    DWORD PTR ds:[rax],eax
   140021040:	rcl    BYTE PTR [rcx],1
   140021042:	add    al,BYTE PTR [rax]
   140021044:	and    DWORD PTR [rax],eax
   140021046:	add    BYTE PTR [rax],al
   140021048:	push   rax
   140021049:	(bad)  
   14002104a:	add    DWORD PTR [rax],eax
   14002104c:	jae    0x14002108d
   14002104e:	add    DWORD PTR [rax],eax
   140021050:	rcl    BYTE PTR [rcx],1
   140021052:	add    al,BYTE PTR [rax]
   140021054:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407105c
   14002105a:	(bad)  
   14002105b:	add    BYTE PTR [rax+0x3f],dl
   14002105e:	add    DWORD PTR [rax],eax
   140021060:	jae    0x1400210a1
   140021062:	add    DWORD PTR [rax],eax
   140021064:	rcl    BYTE PTR [rcx],1
   140021066:	add    al,BYTE PTR [rax]
   140021068:	and    DWORD PTR [rax],eax
   14002106a:	add    BYTE PTR [rax],al
   14002106c:	adc    BYTE PTR [rax+0x1],al
   14002106f:	add    BYTE PTR [rdi],dh
   140021071:	rex add DWORD PTR [rax],eax
   140021074:	rcl    BYTE PTR [rcx],1
   140021076:	add    al,BYTE PTR [rax]
   140021078:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4071080
   14002107e:	(bad)  
   14002107f:	add    BYTE PTR [rax],dl
   140021081:	rex add DWORD PTR [rax],eax
   140021084:	(bad)  
   140021085:	rex add DWORD PTR [rax],eax
   140021088:	rcl    BYTE PTR [rcx],1
   14002108a:	add    al,BYTE PTR [rax]
   14002108c:	and    DWORD PTR [rax],eax
   14002108e:	add    BYTE PTR [rax],al
   140021090:	lock rex add DWORD PTR [rax],eax
   140021094:	adc    eax,DWORD PTR [rcx+0x1]
   140021097:	add    al,dl
   140021099:	adc    DWORD PTR [rdx],eax
   14002109b:	add    BYTE PTR [rcx],ah
   14002109d:	add    eax,0x74050002
   1400210a2:	(bad)  
   1400210a3:	add    al,dh
   1400210a5:	rex add DWORD PTR [rax],eax
   1400210a8:	adc    eax,DWORD PTR [rcx+0x1]
   1400210ab:	add    al,dl
   1400210ad:	adc    DWORD PTR [rdx],eax
   1400210af:	add    BYTE PTR [rcx],ah
   1400210b1:	add    BYTE PTR [rax],al
   1400210b3:	add    BYTE PTR [rax-0x3cfffebf],ah
   1400210b9:	add    DWORD PTR [r8],eax
   1400210bc:	rcl    BYTE PTR [rcx],1
   1400210be:	add    al,BYTE PTR [rax]
   1400210c0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40710c8
   1400210c6:	(bad)  
   1400210c7:	add    BYTE PTR [rax-0x3cfffebf],ah
   1400210cd:	add    DWORD PTR [r8],eax
   1400210d0:	rcl    BYTE PTR [rcx],1
   1400210d2:	add    al,BYTE PTR [rax]
   1400210d4:	and    DWORD PTR [rax],eax
   1400210d6:	add    BYTE PTR [rax],al
   1400210d8:	push   rax
   1400210d9:	rex.X add DWORD PTR [rax],eax
   1400210dc:	jae    0x140021120
   1400210de:	add    DWORD PTR [rax],eax
   1400210e0:	(bad)  
   1400210e1:	or     BYTE PTR [rdx],al
   1400210e3:	add    BYTE PTR [rcx],ah
   1400210e5:	add    BYTE PTR [rax],al
   1400210e7:	add    BYTE PTR [rbx+0x42],dh
   1400210ea:	add    DWORD PTR [rax],eax
   1400210ec:	add    BYTE PTR [rdx+0x1],0x0
   1400210f0:	or     BYTE PTR [rcx],dl
   1400210f2:	add    al,BYTE PTR [rax]
   1400210f4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40710fc
   1400210fa:	(bad)  
   1400210fb:	add    BYTE PTR [rbx+0x42],dh
   1400210fe:	add    DWORD PTR [rax],eax
   140021100:	add    BYTE PTR [rdx+0x1],0x0
   140021104:	or     BYTE PTR [rcx],dl
   140021106:	add    al,BYTE PTR [rax]
   140021108:	and    DWORD PTR [rip+0x34050002],eax        # 0x174071110
   14002110e:	(bad)  
   14002110f:	add    BYTE PTR [rax+0x42],dl
   140021112:	add    DWORD PTR [rax],eax
   140021114:	jae    0x140021158
   140021116:	add    DWORD PTR [rax],eax
   140021118:	(bad)  
   140021119:	or     BYTE PTR [rdx],al
   14002111b:	add    BYTE PTR [rcx],ah
   14002111d:	add    BYTE PTR [rax],al
   14002111f:	add    al,dh
   140021121:	rex.X add DWORD PTR [rax],eax
   140021124:	adc    eax,DWORD PTR [rbx+0x1]
   140021127:	add    ah,al
   140021129:	or     BYTE PTR [rdx],al
   14002112b:	add    BYTE PTR [rcx],ah
   14002112d:	add    BYTE PTR [rax],al
   14002112f:	add    BYTE PTR [rbx],dl
   140021131:	rex.XB add DWORD PTR [r8],eax
   140021134:	and    BYTE PTR [rbx+0x1],al
   140021137:	add    BYTE PTR [rax+0x11],dl
   14002113a:	add    al,BYTE PTR [rax]
   14002113c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4071144
   140021142:	(bad)  
   140021143:	add    BYTE PTR [rbx],dl
   140021145:	rex.XB add DWORD PTR [r8],eax
   140021148:	and    BYTE PTR [rbx+0x1],al
   14002114b:	add    BYTE PTR [rax+0x11],dl
   14002114e:	add    al,BYTE PTR [rax]
   140021150:	and    DWORD PTR [rip+0x34050002],eax        # 0x174071158
   140021156:	(bad)  
   140021157:	add    al,dh
   140021159:	rex.X add DWORD PTR [rax],eax
   14002115c:	adc    eax,DWORD PTR [rbx+0x1]
   14002115f:	add    ah,al
   140021161:	or     BYTE PTR [rdx],al
   140021163:	add    BYTE PTR [rcx],ah
   140021165:	add    BYTE PTR [rax],al
   140021167:	add    al,dl
   140021169:	rex.XB add DWORD PTR [r8],eax
   14002116c:	repz rex.XB add DWORD PTR [r8],eax
   140021170:	rcl    BYTE PTR [rcx],1
   140021172:	add    al,BYTE PTR [rax]
   140021174:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407117c
   14002117a:	(bad)  
   14002117b:	add    al,dl
   14002117d:	rex.XB add DWORD PTR [r8],eax
   140021180:	repz rex.XB add DWORD PTR [r8],eax
   140021184:	rcl    BYTE PTR [rcx],1
   140021186:	add    al,BYTE PTR [rax]
   140021188:	and    DWORD PTR [rax],eax
   14002118a:	add    BYTE PTR [rax],al
   14002118c:	nop
   14002118d:	add    DWORD PTR [rax],r8d
   140021190:	mov    bl,0x44
   140021192:	add    DWORD PTR [rax],eax
   140021194:	rcl    BYTE PTR [rcx],1
   140021196:	add    al,BYTE PTR [rax]
   140021198:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40711a0
   14002119e:	(bad)  
   14002119f:	add    BYTE PTR [rax-0x4cfffebc],dl
   1400211a5:	add    DWORD PTR [rax],r8d
   1400211a8:	rcl    BYTE PTR [rcx],1
   1400211aa:	add    al,BYTE PTR [rax]
   1400211ac:	and    DWORD PTR [rax],eax
   1400211ae:	add    BYTE PTR [rax],al
   1400211b0:	adc    BYTE PTR [rbp+0x1],al
   1400211b3:	add    BYTE PTR [rbx],dh
   1400211b5:	add    DWORD PTR [r8],r8d
   1400211b8:	rcl    BYTE PTR [rcx],1
   1400211ba:	add    al,BYTE PTR [rax]
   1400211bc:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40711c4
   1400211c2:	(bad)  
   1400211c3:	add    BYTE PTR [rax],dl
   1400211c5:	add    DWORD PTR [r8],r8d
   1400211c8:	xor    eax,DWORD PTR [rbp+0x1]
   1400211cb:	add    al,dl
   1400211cd:	adc    DWORD PTR [rdx],eax
   1400211cf:	add    BYTE PTR [rcx],al
   1400211d1:	or     al,BYTE PTR [rax+rax*1]
   1400211d4:	or     dh,BYTE PTR [rdi+rax*1]
   1400211d7:	add    BYTE PTR [rdx],cl
   1400211d9:	xor    al,BYTE PTR [rsi]
   1400211db:	(bad)  
   1400211dc:	and    DWORD PTR [rax],eax
   1400211de:	add    BYTE PTR [rax],al
   1400211e0:	rol    BYTE PTR [rbp+0x1],0x0
   1400211e4:	jrcxz  0x14002122b
   1400211e6:	add    DWORD PTR [rax],eax
   1400211e8:	rcl    BYTE PTR [rcx],1
   1400211ea:	add    al,BYTE PTR [rax]
   1400211ec:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40711f4
   1400211f2:	(bad)  
   1400211f3:	add    al,al
   1400211f5:	add    DWORD PTR [r8],r8d
   1400211f8:	jrcxz  0x14002123f
   1400211fa:	add    DWORD PTR [rax],eax
   1400211fc:	rcl    BYTE PTR [rcx],1
   1400211fe:	add    al,BYTE PTR [rax]
   140021200:	add    DWORD PTR [rcx+rax*1],eax
   140021203:	add    BYTE PTR [rdx+riz*2],al
   140021206:	add    BYTE PTR [rax],al
   140021208:	or     DWORD PTR [rdx],ecx
   14002120a:	add    al,0x0
   14002120c:	or     ah,BYTE PTR [rsi+rax*1+0x0]
   140021210:	or     dh,BYTE PTR [rdx]
   140021212:	(bad)  
   140021213:	jo     0x140021251
   140021215:	rex.WXB add QWORD PTR [r8],rax
   140021218:	add    DWORD PTR [rax],eax
   14002121a:	add    BYTE PTR [rax],al
   14002121c:	mov    dh,0x46
   14002121e:	add    DWORD PTR [rax],eax
   140021220:	hlt    
   140021221:	rex.RXB add DWORD PTR [r8],r8d
   140021224:	movabs al,ds:0x1000147f400014d
   14002122d:	add    al,0x1
   14002122f:	add    BYTE PTR [rdx+rax*2],al
   140021232:	add    BYTE PTR [rax],al
   140021234:	add    DWORD PTR [rsi],eax
   140021236:	add    al,BYTE PTR [rax]
   140021238:	(bad)  
   140021239:	xor    al,BYTE PTR [rdx]
   14002123b:	push   rax
   14002123c:	adc    DWORD PTR [rsi],eax
   14002123e:	add    al,BYTE PTR [rax]
   140021240:	(bad)  
   140021241:	xor    al,BYTE PTR [rdx]
   140021243:	xor    BYTE PTR [rbx+rcx*2],bh
   140021246:	add    DWORD PTR [rax],eax
   140021248:	add    DWORD PTR [rax],eax
   14002124a:	add    BYTE PTR [rax],al
   14002124c:	cmp    ecx,DWORD PTR [rdx+0x1]
   14002124f:	add    BYTE PTR [rcx-0x43fffeb6],ah
   140021255:	add    QWORD PTR [r8],r8
   140021258:	add    BYTE PTR [rax],al
   14002125a:	add    BYTE PTR [rax],al
   14002125c:	or     DWORD PTR [rcx+rax*1],eax
   14002125f:	add    BYTE PTR [rdx+rax*2],al
   140021262:	add    BYTE PTR [rax],al
   140021264:	cmp    al,0x4b
   140021266:	add    DWORD PTR [rax],eax
   140021268:	add    DWORD PTR [rax],eax
   14002126a:	add    BYTE PTR [rax],al
   14002126c:	xlat   BYTE PTR ds:[rbx]
   14002126d:	rex.WXB add QWORD PTR [r8],rax
   140021270:	or     cl,BYTE PTR [rcx+rax*1+0x0]
   140021274:	loopne 0x1400212c3
   140021276:	add    DWORD PTR [rax],eax
   140021278:	or     cl,BYTE PTR [rcx+rax*1+0x0]
   14002127c:	add    DWORD PTR [rdx],ecx
   14002127e:	add    al,0x0
   140021280:	or     dh,BYTE PTR [rax+rcx*1]
   140021283:	add    BYTE PTR [rdx],cl
   140021285:	xor    al,BYTE PTR [rsi]
   140021287:	jo     0x140021292
   140021289:	(bad)  
   14002128a:	(bad)  
   14002128b:	add    BYTE PTR [rdi],dl
   14002128d:	xor    al,0xd
   14002128f:	add    BYTE PTR [rdi],dl
   140021291:	jb     0x1400212a6
   140021293:	rcl    BYTE PTR [rcx],0x70
   140021296:	adc    BYTE PTR [rax+0x3c],ah
   140021299:	rex.WXB add QWORD PTR [r8],rax
   14002129c:	add    DWORD PTR [rax],eax
   14002129e:	add    BYTE PTR [rax],al
   1400212a0:	sti    
   1400212a1:	add    QWORD PTR [rax],r8
   1400212a4:	adc    eax,0x100014d
   1400212a9:	rex.WRX add QWORD PTR [rax],r8
   1400212ac:	adc    eax,0x1100014d
   1400212b1:	sbb    BYTE PTR [rip+0x14621800],al        # 0x154642ab7
   1400212b7:	rcl    BYTE PTR [rdx],0x70
   1400212ba:	adc    DWORD PTR [rax+0x10],esp
   1400212bd:	xor    BYTE PTR [rax],al
   1400212bf:	add    BYTE PTR [rbx+rcx*2],bh
   1400212c2:	add    DWORD PTR [rax],eax
   1400212c4:	add    DWORD PTR [rax],eax
   1400212c6:	add    BYTE PTR [rax],al
   1400212c8:	push   rdi
   1400212c9:	add    QWORD PTR [r8],r8
   1400212cc:	js     0x14002131b
   1400212ce:	add    DWORD PTR [rax],eax
   1400212d0:	rex
   1400212d1:	rex.WRX add QWORD PTR [rax],r8
   1400212d4:	add    BYTE PTR [rax],al
   1400212d6:	add    BYTE PTR [rax],al
   1400212d8:	push   0x214
   1400212dd:	add    BYTE PTR [rax],al
   1400212df:	add    BYTE PTR [rax],al
   1400212e1:	add    BYTE PTR [rax],al
   1400212e3:	add    al,dl
   1400212e5:	and    eax,DWORD PTR [rdx]
   1400212e7:	add    BYTE PTR [rax+0x51],al
   1400212ea:	add    DWORD PTR [rax],eax
   1400212ec:	push   0x213
   1400212f1:	add    BYTE PTR [rax],al
   1400212f3:	add    BYTE PTR [rax],al
   1400212f5:	add    BYTE PTR [rax],al
   1400212f7:	add    BYTE PTR [rdx],bh
   1400212f9:	and    al,0x2
   1400212fb:	add    BYTE PTR [rax+0x50],al
   1400212fe:	add    DWORD PTR [rax],eax
   140021300:	sub    BYTE PTR [rbx],dl
   140021302:	add    al,BYTE PTR [rax]
	...
   14002130c:	rex.WX
   14002130d:	add    al,BYTE PTR es:[rax]
   140021310:	add    BYTE PTR [rax+0x1],dl
	...
   140021327:	add    BYTE PTR [rdx],bl
   140021329:	add    al,BYTE PTR es:[rax]
   14002132c:	add    BYTE PTR [rax],al
   14002132e:	add    BYTE PTR [rax],al
   140021330:	add    al,0x26
   140021332:	add    al,BYTE PTR [rax]
   140021334:	add    BYTE PTR [rax],al
   140021336:	add    BYTE PTR [rax],al
   140021338:	hlt    
   140021339:	and    eax,0x2
   14002133e:	add    BYTE PTR [rax],al
   140021340:	fisub  DWORD PTR [rip+0x2]        # 0x140021348
   140021346:	add    BYTE PTR [rax],al
   140021348:	mov    esp,0x225
   14002134d:	add    BYTE PTR [rax],al
   14002134f:	add    BYTE PTR [rbp+riz*1+0x2],dh
   140021356:	add    BYTE PTR [rax],al
   140021358:	xor    BYTE PTR [rsi],ah
   14002135a:	add    al,BYTE PTR [rax]
	...
   140021368:	jle    0x14002138f
   14002136a:	add    al,BYTE PTR [rax]
   14002136c:	add    BYTE PTR [rax],al
   14002136e:	add    BYTE PTR [rax],al
   140021370:	(bad)  
   140021371:	and    eax,0x2
   140021376:	add    BYTE PTR [rax],al
   140021378:	pop    rdx
   140021379:	and    eax,0x2
   14002137e:	add    BYTE PTR [rax],al
   140021380:	rex.WR and rax,0x2
   140021386:	add    BYTE PTR [rax],al
   140021388:	rex.X and eax,0x2
   14002138e:	add    BYTE PTR [rax],al
   140021390:	cs and eax,0x2
   140021396:	add    BYTE PTR [rax],al
   140021398:	sbb    al,0x25
   14002139a:	add    al,BYTE PTR [rax]
   14002139c:	add    BYTE PTR [rax],al
   14002139e:	add    BYTE PTR [rax],al
   1400213a0:	or     ah,BYTE PTR [rip+0x2]        # 0x1400213a8
   1400213a6:	add    BYTE PTR [rax],al
   1400213a8:	add    BYTE PTR [rip+0x2],ah        # 0x1400213b0
   1400213ae:	add    BYTE PTR [rax],al
   1400213b0:	hlt    
   1400213b1:	and    al,0x2
   1400213b3:	add    BYTE PTR [rax],al
   1400213b5:	add    BYTE PTR [rax],al
   1400213b7:	add    al,ah
   1400213b9:	and    al,0x2
   1400213bb:	add    BYTE PTR [rax],al
   1400213bd:	add    BYTE PTR [rax],al
   1400213bf:	add    dl,cl
   1400213c1:	and    al,0x2
   1400213c3:	add    BYTE PTR [rax],al
   1400213c5:	add    BYTE PTR [rax],al
   1400213c7:	add    BYTE PTR [rsp+0x2],bh
   1400213ce:	add    BYTE PTR [rax],al
   1400213d0:	mov    al,0x24
   1400213d2:	add    al,BYTE PTR [rax]
   1400213d4:	add    BYTE PTR [rax],al
   1400213d6:	add    BYTE PTR [rax],al
   1400213d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400213d9:	and    al,0x2
   1400213db:	add    BYTE PTR [rax],al
   1400213dd:	add    BYTE PTR [rax],al
   1400213df:	add    BYTE PTR [rsp+0x2],bl
   1400213e6:	add    BYTE PTR [rax],al
   1400213e8:	xchg   edx,eax
   1400213e9:	and    al,0x2
   1400213eb:	add    BYTE PTR [rax],al
   1400213ed:	add    BYTE PTR [rax],al
   1400213ef:	add    BYTE PTR [rdx+0x224],cl
   1400213f5:	add    BYTE PTR [rax],al
   1400213f7:	add    BYTE PTR [rsp+0x2],bh
   1400213fb:	add    BYTE PTR [rax],al
   1400213fd:	add    BYTE PTR [rax],al
   1400213ff:	add    BYTE PTR [rsp+0x2],ah
   140021403:	add    BYTE PTR [rax],al
   140021405:	add    BYTE PTR [rax],al
   140021407:	add    BYTE PTR [rsp+0x2],dl
   14002140b:	add    BYTE PTR [rax],al
   14002140d:	add    BYTE PTR [rax],al
   14002140f:	add    BYTE PTR [rsi+0x24],al
   140021412:	add    al,BYTE PTR [rax]
   140021414:	add    BYTE PTR [rax],al
   140021416:	add    BYTE PTR [rax],al
   140021418:	xor    BYTE PTR [rdx+rax*1],ah
   14002141b:	add    BYTE PTR [rax],al
   14002141d:	add    BYTE PTR [rax],al
   14002141f:	add    BYTE PTR [rsi],ah
   140021421:	and    al,0x2
   140021423:	add    BYTE PTR [rax],al
   140021425:	add    BYTE PTR [rax],al
   140021427:	add    BYTE PTR [rsi],bl
   140021429:	and    al,0x2
   14002142b:	add    BYTE PTR [rax],al
   14002142d:	add    BYTE PTR [rax],al
   14002142f:	add    BYTE PTR [rdx],dl
   140021431:	and    al,0x2
   140021433:	add    BYTE PTR [rax],al
   140021435:	add    BYTE PTR [rax],al
   140021437:	add    BYTE PTR [rax],cl
   140021439:	and    al,0x2
   14002143b:	add    BYTE PTR [rax],al
   14002143d:	add    BYTE PTR [rax],al
   14002143f:	add    dh,bh
   140021441:	and    eax,DWORD PTR [rdx]
   140021443:	add    BYTE PTR [rax],al
   140021445:	add    BYTE PTR [rax],al
   140021447:	add    ah,ch
   140021449:	and    eax,DWORD PTR [rdx]
   14002144b:	add    BYTE PTR [rax],al
   14002144d:	add    BYTE PTR [rax],al
   14002144f:	add    ah,bl
   140021451:	and    eax,DWORD PTR [rdx]
   140021453:	add    BYTE PTR [rax],al
   140021455:	add    BYTE PTR [rax],al
   140021457:	add    BYTE PTR [rbp+riz*1+0x2],ch
	...
   140021467:	add    BYTE PTR [rsi+0x1d],dl
   14002146a:	add    al,BYTE PTR [rax]
   14002146c:	add    BYTE PTR [rax],al
   14002146e:	add    BYTE PTR [rax],al
   140021470:	pushf  
   140021471:	sbb    eax,0x2
   140021476:	add    BYTE PTR [rax],al
   140021478:	mov    esi,0x21d
   14002147d:	add    BYTE PTR [rax],al
   14002147f:	add    BYTE PTR [rdx],al
   140021481:	(bad)  
   140021482:	add    al,BYTE PTR [rax]
   140021484:	add    BYTE PTR [rax],al
   140021486:	add    BYTE PTR [rax],al
   140021488:	rex.W (bad) 
   14002148a:	add    al,BYTE PTR [rax]
   14002148c:	add    BYTE PTR [rax],al
   14002148e:	add    BYTE PTR [rax],al
   140021490:	outs   dx,BYTE PTR ds:[rsi]
   140021491:	(bad)  
   140021492:	add    al,BYTE PTR [rax]
   140021494:	add    BYTE PTR [rax],al
   140021496:	add    BYTE PTR [rax],al
   140021498:	nop
   140021499:	(bad)  
   14002149a:	add    al,BYTE PTR [rax]
   14002149c:	add    BYTE PTR [rax],al
   14002149e:	add    BYTE PTR [rax],al
   1400214a0:	(bad)  
   1400214a1:	(bad)  
   1400214a2:	add    al,BYTE PTR [rax]
   1400214a4:	add    BYTE PTR [rax],al
   1400214a6:	add    BYTE PTR [rax],al
   1400214a8:	or     bl,BYTE PTR [rdi]
   1400214aa:	add    al,BYTE PTR [rax]
   1400214ac:	add    BYTE PTR [rax],al
   1400214ae:	add    BYTE PTR [rax],al
   1400214b0:	rex.WX (bad) 
   1400214b2:	add    al,BYTE PTR [rax]
   1400214b4:	add    BYTE PTR [rax],al
   1400214b6:	add    BYTE PTR [rax],al
   1400214b8:	jbe    0x1400214d9
   1400214ba:	add    al,BYTE PTR [rax]
   1400214bc:	add    BYTE PTR [rax],al
   1400214be:	add    BYTE PTR [rax],al
   1400214c0:	pushf  
   1400214c1:	(bad)  
   1400214c2:	add    al,BYTE PTR [rax]
   1400214c4:	add    BYTE PTR [rax],al
   1400214c6:	add    BYTE PTR [rax],al
   1400214c8:	enter  0x21f,0x0
   1400214cc:	add    BYTE PTR [rax],al
   1400214ce:	add    BYTE PTR [rax],al
   1400214d0:	call   0x1400216f4
   1400214d5:	add    BYTE PTR [rax],al
   1400214d7:	add    BYTE PTR [rax],cl
   1400214d9:	and    BYTE PTR [rdx],al
   1400214db:	add    BYTE PTR [rax],al
   1400214dd:	add    BYTE PTR [rax],al
   1400214df:	add    BYTE PTR [rax+riz*1],ch
   1400214e2:	add    al,BYTE PTR [rax]
   1400214e4:	add    BYTE PTR [rax],al
   1400214e6:	add    BYTE PTR [rax],al
   1400214e8:	rex.WRX and BYTE PTR [rdx],r8b
   1400214eb:	add    BYTE PTR [rax],al
   1400214ed:	add    BYTE PTR [rax],al
   1400214ef:	add    BYTE PTR [rdx+0x20],bh
   1400214f2:	add    al,BYTE PTR [rax]
   1400214f4:	add    BYTE PTR [rax],al
   1400214f6:	add    BYTE PTR [rax],al
   1400214f8:	mov    dl,0x20
   1400214fa:	add    al,BYTE PTR [rax]
   1400214fc:	add    BYTE PTR [rax],al
   1400214fe:	add    BYTE PTR [rax],al
   140021500:	(bad)  
   140021501:	and    BYTE PTR [rdx],al
   140021503:	add    BYTE PTR [rax],al
   140021505:	add    BYTE PTR [rax],al
   140021507:	add    ah,dh
   140021509:	and    BYTE PTR [rdx],al
   14002150b:	add    BYTE PTR [rax],al
   14002150d:	add    BYTE PTR [rax],al
   14002150f:	add    BYTE PTR [rsi],cl
   140021511:	and    DWORD PTR [rdx],eax
   140021513:	add    BYTE PTR [rax],al
   140021515:	add    BYTE PTR [rax],al
   140021517:	add    BYTE PTR [rax+0x1d],al
   14002151a:	add    al,BYTE PTR [rax]
   14002151c:	add    BYTE PTR [rax],al
   14002151e:	add    BYTE PTR [rax],al
   140021520:	rex.X and DWORD PTR [rdx],eax
   140021523:	add    BYTE PTR [rax],al
   140021525:	add    BYTE PTR [rax],al
   140021527:	add    BYTE PTR [rdx+0x21],dl
   14002152a:	add    al,BYTE PTR [rax]
   14002152c:	add    BYTE PTR [rax],al
   14002152e:	add    BYTE PTR [rax],al
   140021530:	push   0x21
   140021532:	add    al,BYTE PTR [rax]
   140021534:	add    BYTE PTR [rax],al
   140021536:	add    BYTE PTR [rax],al
   140021538:	jp     0x14002155b
   14002153a:	add    al,BYTE PTR [rax]
   14002153c:	add    BYTE PTR [rax],al
   14002153e:	add    BYTE PTR [rax],al
   140021540:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140021541:	and    DWORD PTR [rdx],eax
   140021543:	add    BYTE PTR [rax],al
   140021545:	add    BYTE PTR [rax],al
   140021547:	add    ah,cl
   140021549:	and    DWORD PTR [rdx],eax
   14002154b:	add    BYTE PTR [rax],al
   14002154d:	add    BYTE PTR [rax],al
   14002154f:	add    dh,ch
   140021551:	and    DWORD PTR [rdx],eax
   140021553:	add    BYTE PTR [rax],al
   140021555:	add    BYTE PTR [rax],al
   140021557:	add    BYTE PTR [rdx+riz*1],cl
   14002155a:	add    al,BYTE PTR [rax]
   14002155c:	add    BYTE PTR [rax],al
   14002155e:	add    BYTE PTR [rax],al
   140021560:	and    al,BYTE PTR es:[rdx]
   140021563:	add    BYTE PTR [rax],al
   140021565:	add    BYTE PTR [rax],al
   140021567:	add    BYTE PTR [rsi+0x22],cl
   14002156a:	add    al,BYTE PTR [rax]
   14002156c:	add    BYTE PTR [rax],al
   14002156e:	add    BYTE PTR [rax],al
   140021570:	jb     0x140021594
   140021572:	add    al,BYTE PTR [rax]
   140021574:	add    BYTE PTR [rax],al
   140021576:	add    BYTE PTR [rax],al
   140021578:	cwde   
   140021579:	and    al,BYTE PTR [rdx]
   14002157b:	add    BYTE PTR [rax],al
   14002157d:	add    BYTE PTR [rax],al
   14002157f:	add    BYTE PTR [rdx+riz*1+0x2],bh
   140021586:	add    BYTE PTR [rax],al
   140021588:	fsub   DWORD PTR [rdx]
   14002158a:	add    al,BYTE PTR [rax]
   14002158c:	add    BYTE PTR [rax],al
   14002158e:	add    BYTE PTR [rax],al
   140021590:	cli    
   140021591:	and    al,BYTE PTR [rdx]
   140021593:	add    BYTE PTR [rax],al
   140021595:	add    BYTE PTR [rax],al
   140021597:	add    BYTE PTR [rax],ch
   140021599:	and    eax,DWORD PTR [rdx]
   14002159b:	add    BYTE PTR [rax],al
   14002159d:	add    BYTE PTR [rax],al
   14002159f:	add    BYTE PTR [rdx+0x23],al
   1400215a2:	add    al,BYTE PTR [rax]
   1400215a4:	add    BYTE PTR [rax],al
   1400215a6:	add    BYTE PTR [rax],al
   1400215a8:	and    eax,DWORD PTR fs:[rdx]
   1400215ab:	add    BYTE PTR [rax],al
   1400215ad:	add    BYTE PTR [rax],al
   1400215af:	add    BYTE PTR [rbx+riz*1+0x2],cl
   1400215b6:	add    BYTE PTR [rax],al
   1400215b8:	(bad)  
   1400215b9:	sbb    al,0x2
   1400215bb:	add    BYTE PTR [rax],al
   1400215bd:	add    BYTE PTR [rax],al
   1400215bf:	add    BYTE PTR [rsp+rbx*1+0x2],bh
   1400215c6:	add    BYTE PTR [rax],al
   1400215c8:	js     0x1400215e6
   1400215ca:	add    al,BYTE PTR [rax]
   1400215cc:	add    BYTE PTR [rax],al
   1400215ce:	add    BYTE PTR [rax],al
   1400215d0:	cmp    bl,BYTE PTR [rdx+rax*1]
   1400215d3:	add    BYTE PTR [rax],al
   1400215d5:	add    BYTE PTR [rax],al
   1400215d7:	add    al,bh
   1400215d9:	sbb    eax,DWORD PTR [rdx]
   1400215db:	add    BYTE PTR [rax],al
   1400215dd:	add    BYTE PTR [rax],al
   1400215df:	add    dh,cl
   1400215e1:	sbb    eax,DWORD PTR [rdx]
   1400215e3:	add    BYTE PTR [rax],al
   1400215e5:	add    BYTE PTR [rax],al
   1400215e7:	add    BYTE PTR [rax+0x21b],dl
   1400215ed:	add    BYTE PTR [rax],al
   1400215ef:	add    BYTE PTR [rsi+0x1b],ch
   1400215f2:	add    al,BYTE PTR [rax]
   1400215f4:	add    BYTE PTR [rax],al
   1400215f6:	add    BYTE PTR [rax],al
   1400215f8:	rex.WRX sbb r8,QWORD PTR [rdx]
   1400215fb:	add    BYTE PTR [rax],al
   1400215fd:	add    BYTE PTR [rax],al
   1400215ff:	add    BYTE PTR [rbx+rbx*1],ch
   140021602:	add    al,BYTE PTR [rax]
   140021604:	add    BYTE PTR [rax],al
   140021606:	add    BYTE PTR [rax],al
   140021608:	out    dx,al
   140021609:	sbb    al,BYTE PTR [rdx]
   14002160b:	add    BYTE PTR [rax],al
   14002160d:	add    BYTE PTR [rax],al
   14002160f:	add    al,al
   140021611:	sbb    al,BYTE PTR [rdx]
   140021613:	add    BYTE PTR [rax],al
   140021615:	add    BYTE PTR [rax],al
   140021617:	add    BYTE PTR [rdx+rbx*1+0x2],bl
   14002161e:	add    BYTE PTR [rax],al
   140021620:	outs   dx,BYTE PTR ds:[rsi]
   140021621:	sbb    al,BYTE PTR [rdx]
   140021623:	add    BYTE PTR [rax],al
   140021625:	add    BYTE PTR [rax],al
   140021627:	add    BYTE PTR [rax+0x1a],dl
   14002162a:	add    al,BYTE PTR [rax]
   14002162c:	add    BYTE PTR [rax],al
   14002162e:	add    BYTE PTR [rax],al
   140021630:	sub    BYTE PTR [rdx],bl
   140021632:	add    al,BYTE PTR [rax]
   140021634:	add    BYTE PTR [rax],al
   140021636:	add    BYTE PTR [rax],al
   140021638:	or     BYTE PTR [rdx],bl
   14002163a:	add    al,BYTE PTR [rax]
   14002163c:	add    BYTE PTR [rax],al
   14002163e:	add    BYTE PTR [rax],al
   140021640:	in     al,0x19
   140021642:	add    al,BYTE PTR [rax]
   140021644:	add    BYTE PTR [rax],al
   140021646:	add    BYTE PTR [rax],al
   140021648:	(bad)  
   140021649:	sbb    DWORD PTR [rdx],eax
   14002164b:	add    BYTE PTR [rax],al
   14002164d:	add    BYTE PTR [rax],al
   14002164f:	add    BYTE PTR [rdx+0x219],bh
   140021655:	add    BYTE PTR [rax],al
   140021657:	add    BYTE PTR [rsi+0x219],cl
   14002165d:	add    BYTE PTR [rax],al
   14002165f:	add    BYTE PTR [rsi+0x19],bl
   140021662:	add    al,BYTE PTR [rax]
   140021664:	add    BYTE PTR [rax],al
   140021666:	add    BYTE PTR [rax],al
   140021668:	sbb    DWORD PTR [rdx],r8d
   14002166b:	add    BYTE PTR [rax],al
   14002166d:	add    BYTE PTR [rax],al
   14002166f:	add    BYTE PTR [rsi],ah
   140021671:	sbb    DWORD PTR [rdx],eax
   140021673:	add    BYTE PTR [rax],al
   140021675:	add    BYTE PTR [rax],al
   140021677:	add    BYTE PTR [rax],al
   140021679:	sbb    DWORD PTR [rdx],eax
   14002167b:	add    BYTE PTR [rax],al
   14002167d:	add    BYTE PTR [rax],al
   14002167f:	add    al,bl
   140021681:	sbb    BYTE PTR [rdx],al
   140021683:	add    BYTE PTR [rax],al
   140021685:	add    BYTE PTR [rax],al
   140021687:	add    BYTE PTR [rax+0x218],bh
   14002168d:	add    BYTE PTR [rax],al
   14002168f:	add    BYTE PTR [rax+0x218],dl
   140021695:	add    BYTE PTR [rax],al
   140021697:	add    BYTE PTR [rdx+0x18],ah
   14002169a:	add    al,BYTE PTR [rax]
   14002169c:	add    BYTE PTR [rax],al
   14002169e:	add    BYTE PTR [rax],al
   1400216a0:	sbb    BYTE PTR ds:[rdx],al
   1400216a3:	add    BYTE PTR [rax],al
   1400216a5:	add    BYTE PTR [rax],al
   1400216a7:	add    dh,bh
   1400216a9:	(bad)  
   1400216aa:	add    al,BYTE PTR [rax]
   1400216ac:	add    BYTE PTR [rax],al
   1400216ae:	add    BYTE PTR [rax],al
   1400216b0:	(bad)  
   1400216b1:	sbb    BYTE PTR [rdx],al
   1400216b3:	add    BYTE PTR [rax],al
   1400216b5:	add    BYTE PTR [rax],al
   1400216b7:	add    dl,bl
   1400216b9:	(bad)  
   1400216ba:	add    al,BYTE PTR [rax]
   1400216bc:	add    BYTE PTR [rax],al
   1400216be:	add    BYTE PTR [rax],al
   1400216c0:	test   al,0x17
   1400216c2:	add    al,BYTE PTR [rax]
   1400216c4:	add    BYTE PTR [rax],al
   1400216c6:	add    BYTE PTR [rax],al
   1400216c8:	adc    BYTE PTR [rdi],0x2
   1400216cb:	add    BYTE PTR [rax],al
   1400216cd:	add    BYTE PTR [rax],al
   1400216cf:	add    BYTE PTR [rax+0x17],bl
   1400216d2:	add    al,BYTE PTR [rax]
   1400216d4:	add    BYTE PTR [rax],al
   1400216d6:	add    BYTE PTR [rax],al
   1400216d8:	xor    dl,BYTE PTR [rdi]
   1400216da:	add    al,BYTE PTR [rax]
   1400216dc:	add    BYTE PTR [rax],al
   1400216de:	add    BYTE PTR [rax],al
   1400216e0:	sbb    al,0x17
   1400216e2:	add    al,BYTE PTR [rax]
   1400216e4:	add    BYTE PTR [rax],al
   1400216e6:	add    BYTE PTR [rax],al
   1400216e8:	sub    BYTE PTR [rcx],ah
   1400216ea:	add    al,BYTE PTR [rax]
   1400216ec:	add    BYTE PTR [rax],al
   1400216ee:	add    BYTE PTR [rax],al
   1400216f0:	add    BYTE PTR [rdi],dl
   1400216f2:	add    al,BYTE PTR [rax]
	...
   140021700:	mov    es,WORD PTR [rcx]
   140021702:	(bad)  
   140021703:	(bad)  
   140021704:	xor    BYTE PTR [rcx+0x53],dl
   140021707:	je     0x14002177b
   140021709:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140021710:	rex.B
   140021711:	rex.B
   140021712:	rex
   140021713:	rex.B
   140021714:	rex.RB
   140021715:	rex.X push rsi
   140021717:	xor    BYTE PTR [rax+0x40],al
   14002171a:	pop    rdx
   14002171b:	add    al,dl
   14002171d:	add    bh,BYTE PTR [rdi]
   14002171f:	(bad)  
   140021720:	xor    DWORD PTR [rcx+0x53],edx
   140021723:	je     0x140021797
   140021725:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002172c:	rex.B
   14002172d:	rex.B
   14002172e:	rex pop rax
   140021730:	pop    rdx
   140021731:	add    cl,dl
   140021733:	(bad)  
   140021734:	(bad)  
   140021735:	jae    0x14002179f
   140021737:	(bad)  
   140021738:	jb     0x14002179f
   14002173a:	fs pop rdi
   14002173c:	outs   dx,BYTE PTR ds:[rsi]
   14002173d:	jne    0x1400217ab
   14002173f:	ins    BYTE PTR es:[rdi],dx
   140021740:	rex push rcx
   140021742:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14002174a:	rex
   14002174b:	xor    dl,BYTE PTR [rbp+0x44]
   14002174f:	(bad)  
   140021750:	je     0x1400217b3
   140021752:	rex xor DWORD PTR [rax+0x42],eax
   140021756:	add    BYTE PTR [rax],al
   140021758:	mov    DWORD PTR [rdx],ecx
   14002175a:	(bad)  
   14002175b:	imul   esi,DWORD PTR fs:[rbx+0x70],0x4065736f
   140021763:	push   rcx
   140021764:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14002176c:	rex
   14002176d:	rex push rbx
   14002176f:	pop    r8
   140021771:	push   rax
   140021772:	rex.RB
   140021773:	push   r13
   140021775:	rex.R (bad) 
   140021777:	je     0x1400217da
   140021779:	rex xor DWORD PTR [rax+0x40],eax
   14002177d:	pop    rdx
   14002177e:	add    BYTE PTR [rax],al
   140021780:	push   rbx
   140021781:	or     bh,BYTE PTR [rdi]
   140021783:	fs gs je 0x1400217e8
   140021787:	movsxd ebp,DWORD PTR [rax+0x40]
   14002178a:	push   rcx
   14002178b:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140021793:	rex
   140021794:	rex push rcx
   140021796:	rex.RB
   140021797:	rex.B
   140021798:	push   r8
   14002179a:	rex.RB
   14002179b:	push   r13
   14002179d:	rex.R (bad) 
   14002179f:	je     0x140021802
   1400217a1:	rex xor DWORD PTR [rax+0x48],eax
   1400217a5:	rex pop rdx
   1400217a7:	add    BYTE PTR [rbx+0xa],bl
   1400217aa:	(bad)  
   1400217ab:	fs gs je 0x140021810
   1400217af:	movsxd ebp,DWORD PTR [rax+0x5f]
   1400217b2:	addr32 jb 0x140021824
   1400217b5:	ja     0x1400217f7
   1400217b7:	push   rcx
   1400217b8:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   1400217c0:	rex
   1400217c1:	rex push rcx
   1400217c3:	rex.RB
   1400217c4:	rex.B
   1400217c5:	push   r8
   1400217c7:	rex.RB
   1400217c8:	push   r13
   1400217ca:	rex.R (bad) 
   1400217cc:	je     0x14002182f
   1400217ce:	rex xor DWORD PTR [rax+0x50],eax
   1400217d2:	rex.RB
   1400217d3:	rex.B
   1400217d4:	rex.W
   1400217d5:	rex.W
   1400217d6:	rex pop rdx
   1400217d8:	add    BYTE PTR [rax],al
   1400217da:	mov    BYTE PTR [rsi],0x3f
   1400217dd:	(bad)  
   1400217de:	jo     0x140021850
   1400217e0:	outs   dx,BYTE PTR gs:[rsi]
   1400217e2:	fs rex push rcx
   1400217e5:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   1400217ed:	rex
   1400217ee:	rex push rcx
   1400217f0:	rex.RB
   1400217f1:	rex.B
   1400217f2:	push   r8
   1400217f4:	rex.RB
   1400217f5:	push   r8
   1400217f7:	rex.RB
   1400217f8:	pop    r8
   1400217fa:	pop    rax
   1400217fb:	pop    rdx
   1400217fc:	add    BYTE PTR [rax],al
   1400217fe:	mov    eax,DWORD PTR [rdx]
   140021800:	(bad)  
   140021801:	(bad)  
   140021802:	xor    DWORD PTR [rcx+0x46],edx
   140021805:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x406f666e
   14002180d:	rex push rcx
   14002180f:	rex.RB
   140021810:	rex.B
   140021811:	rex.B
   140021812:	rex pop rax
   140021814:	pop    rdx
   140021815:	add    ch,dl
   140021817:	sbb    bh,BYTE PTR [rdi]
   140021819:	ja     0x14002187c
   14002181b:	jb     0x14002188b
   14002181d:	imul   ebp,DWORD PTR [rsi+0x67],0x654d5140
   140021824:	jae    0x140021899
   140021826:	(bad)  
   140021827:	rex.WR outs dx,DWORD PTR gs:[esi]
   14002182b:	addr32 addr32 gs jb 0x140021870
   140021830:	rex push rcx
   140021832:	rex.RB
   140021833:	rex.X
   140021834:	pop    r8
   140021836:	push   rax
   140021837:	rex.RB
   140021838:	rex.X
   140021839:	rex.R pop rdx
   14002183b:	pop    rdx
   14002183c:	add    BYTE PTR [rax],al
   14002183e:	xchg   esi,eax
   14002183f:	or     BYTE PTR [rdi],bh
   140021841:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140021844:	jae    0x1400218ba
   140021846:	rex.R (bad) 
   140021848:	je     0x1400218ab
   14002184a:	rex push rcx
   14002184c:	rex.X jns 0x1400218c3
   14002184f:	gs rex.B jb 0x1400218c5
   140021853:	(bad)  
   140021854:	jns    0x140021896
   140021856:	rex push rcx
   140021858:	rex.RB
   140021859:	rex.X
   14002185a:	push   r8
   14002185c:	rex.RB
   14002185d:	rex.X
   14002185e:	rex.R pop rax
   140021860:	pop    rdx
   140021861:	add    BYTE PTR [rbx+0x6f743f18],dh
   140021867:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140021869:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002186c:	cmp    BYTE PTR [rdx+0x69],al
   14002186f:	je     0x1400218b1
   140021871:	push   rcx
   140021872:	push   rbx
   140021873:	je     0x1400218e7
   140021875:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002187c:	rex.X
   14002187d:	rex.B (bad) 
   14002187f:	push   r14
   140021881:	push   rcx
   140021882:	rex.X jns 0x1400218f9
   140021885:	gs rex.B jb 0x1400218fb
   140021889:	(bad)  
   14002188a:	jns    0x1400218cc
   14002188c:	rex pop rax
   14002188e:	pop    rdx
   14002188f:	add    BYTE PTR [rdx+0x383f3f04],al
   140021895:	push   rcx
   140021896:	push   rbx
   140021897:	je     0x14002190b
   140021899:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400218a0:	rex.X
   1400218a1:	pop    r15
   1400218a3:	rex.WRX push rsi
   1400218a5:	push   rcx
   1400218a6:	rex.WR (bad) 
   1400218a8:	je     0x140021913
   1400218aa:	outs   dx,BYTE PTR ds:[rsi]
   1400218ab:	xor    DWORD PTR [rbx+0x74],edx
   1400218ae:	jb     0x140021919
   1400218b0:	outs   dx,BYTE PTR ds:[rsi]
   1400218b1:	addr32 rex
   1400218b3:	rex
   1400218b4:	rex pop rdx
   1400218b6:	add    BYTE PTR [rax],al
   1400218b8:	(bad)  
   1400218b9:	sbb    BYTE PTR [rdi],bh
   1400218bb:	je     0x14002192c
   1400218bd:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400218bf:	ja     0x140021926
   1400218c1:	jb     0x140021903
   1400218c3:	push   rcx
   1400218c4:	push   rbx
   1400218c5:	je     0x140021939
   1400218c7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400218ce:	rex.X
   1400218cf:	rex.B (bad) 
   1400218d1:	push   r14
   1400218d3:	xor    DWORD PTR [rax+0x58],eax
   1400218d6:	pop    rdx
   1400218d7:	add    al,ah
   1400218d9:	(bad)  
   1400218da:	(bad)  
   1400218db:	jae    0x140021952
   1400218dd:	data16 imul di,WORD PTR [rax+0x40],0x4651
   1400218e4:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x406f666e
   1400218ec:	rex push rcx
   1400218ee:	rex.RB
   1400218ef:	rex.X
   1400218f0:	rex.B (bad) 
   1400218f2:	push   r14
   1400218f4:	push   rcx
   1400218f5:	push   rbx
   1400218f6:	je     0x14002196a
   1400218f8:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   1400218ff:	add    BYTE PTR [rdi+0x303f3f00],dh
   140021905:	push   rcx
   140021906:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14002190f:	rex push rcx
   140021911:	rex.RB
   140021912:	rex.B
   140021913:	rex.B
   140021914:	rex
   140021915:	rex.B
   140021916:	rex.RB
   140021917:	rex.X push rsi
   140021919:	push   rcx
   14002191a:	push   rbx
   14002191b:	je     0x14002198f
   14002191d:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140021924:	add    BYTE PTR [rax],al
   140021926:	and    eax,0x6c633f08
   14002192b:	outs   dx,DWORD PTR ds:[rsi]
   14002192c:	jae    0x140021993
   14002192e:	rex push rcx
   140021930:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x63697665
   140021939:	gs rex
   14002193b:	rex push rbp
   14002193d:	rex.RB
   14002193e:	rex.B
   14002193f:	pop    r8
   140021941:	pop    rax
   140021942:	pop    rdx
   140021943:	add    BYTE PTR [rsi+0x2],ah
   140021946:	(bad)  
   140021947:	(bad)  
   140021948:	xor    DWORD PTR [rcx+0x42],edx
   14002194b:	jns    0x1400219c1
   14002194d:	gs rex.B jb 0x1400219c3
   140021951:	(bad)  
   140021952:	jns    0x140021994
   140021954:	rex push rcx
   140021956:	rex.RB
   140021957:	rex.B
   140021958:	rex.B
   140021959:	rex pop rax
   14002195b:	pop    rdx
   14002195c:	add    BYTE PTR [rax],al
   14002195e:	push   rdi
   14002195f:	or     al,0x3f
   140021961:	data16 jb 0x1400219d3
   140021964:	ins    DWORD PTR es:[rdi],dx
   140021965:	push   rbp
   140021966:	je     0x1400219ce
   140021968:	cmp    BYTE PTR [rax+0x51],al
   14002196b:	push   rbx
   14002196c:	je     0x1400219e0
   14002196e:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   140021975:	(bad)  
   140021976:	push   r14
   140021978:	xor    DWORD PTR [rax+0x41],eax
   14002197b:	rex.RB
   14002197c:	rex.X push rsi
   14002197e:	push   rcx
   14002197f:	rex.X jns 0x1400219f6
   140021982:	gs rex.B jb 0x1400219f8
   140021986:	(bad)  
   140021987:	jns    0x1400219c9
   140021989:	rex
   14002198a:	rex pop rdx
   14002198c:	add    BYTE PTR [rax],al
   14002198e:	adc    r15,QWORD PTR [rdi]
   140021991:	jb     0x1400219f8
   140021993:	(bad)  
   140021994:	fs rex.B ins BYTE PTR es:[rdi],dx
   140021997:	ins    BYTE PTR es:[rdi],dx
   140021998:	rex push rcx
   14002199a:	rex.WB
   14002199b:	rex.WRXB
   14002199c:	rex.R
   14002199d:	gs jbe 0x140021a09
   1400219a0:	movsxd esp,DWORD PTR [rbp+0x40]
   1400219a3:	rex push rcx
   1400219a5:	rex.RB
   1400219a6:	rex.B
   1400219a7:	rex.B (bad) 
   1400219a9:	push   r14
   1400219ab:	push   rcx
   1400219ac:	rex.X jns 0x140021a23
   1400219af:	gs rex.B jb 0x140021a25
   1400219b3:	(bad)  
   1400219b4:	jns    0x1400219f6
   1400219b6:	rex pop rax
   1400219b8:	pop    rdx
   1400219b9:	add    BYTE PTR [rcx+0x313f3f02],cl
   1400219bf:	push   rcx
   1400219c0:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   1400219c9:	rex.B
   1400219ca:	rex pop rax
   1400219cc:	pop    rdx
   1400219cd:	add    BYTE PTR [rsi+0x2],dh
   1400219d0:	(bad)  
   1400219d1:	(bad)  
   1400219d2:	xor    DWORD PTR [rcx+0x44],edx
   1400219d5:	gs (bad) 
   1400219d7:	jne    0x140021a40
   1400219d9:	rex
   1400219da:	rex push rcx
   1400219dc:	rex.RB
   1400219dd:	rex.B
   1400219de:	rex.B
   1400219df:	rex pop rax
   1400219e1:	pop    rdx
   1400219e2:	add    BYTE PTR [rax],al
   1400219e4:	ror    DWORD PTR [rdi],0x3f
   1400219e7:	ins    DWORD PTR es:[rdi],dx
   1400219e8:	(bad)  
   1400219e9:	jns    0x140021a4d
   1400219eb:	gs push rbx
   1400219ed:	jo     0x140021a50
   1400219ef:	movsxd esp,DWORD PTR [rbp+0x40]
   1400219f2:	push   rcx
   1400219f3:	rex.R
   1400219f4:	gs (bad) 
   1400219f6:	jne    0x140021a5f
   1400219f8:	rex
   1400219f9:	rex push rcx
   1400219fb:	rex.RB
   1400219fc:	rex.B
   1400219fd:	rex.B
   1400219fe:	rex.B
   1400219ff:	rex.RB
   140021a00:	push   r14
   140021a02:	xor    DWORD PTR [rax+0x58],eax
   140021a05:	pop    rdx
   140021a06:	add    BYTE PTR [rax],al
   140021a08:	push   rax
   140021a09:	add    al,0x3f
   140021a0b:	(bad)  
   140021a0c:	ss push rcx
   140021a0e:	push   rsp
   140021a0f:	gs js  0x140021a86
   140021a12:	push   rbx
   140021a13:	je     0x140021a87
   140021a15:	gs (bad) 
   140021a17:	ins    DWORD PTR es:[rdi],dx
   140021a18:	rex
   140021a19:	rex push rcx
   140021a1b:	rex.RB
   140021a1c:	rex.B
   140021a1d:	rex.B
   140021a1e:	rex.B
   140021a1f:	rex.RB
   140021a20:	push   r14
   140021a22:	xor    BYTE PTR [rax+0x48],al
   140021a25:	rex pop rdx
   140021a27:	add    BYTE PTR [rip+0x363f3f04],dh        # 0x176415931
   140021a2d:	push   rcx
   140021a2e:	rex.R
   140021a2f:	gs (bad) 
   140021a31:	jne    0x140021a9a
   140021a33:	rex
   140021a34:	rex push rcx
   140021a36:	rex.RB
   140021a37:	rex.B
   140021a38:	rex.B
   140021a39:	rex.B
   140021a3a:	rex.RB
   140021a3b:	push   r14
   140021a3d:	xor    BYTE PTR [rax+0x41],al
   140021a40:	rex.RB
   140021a41:	rex.X push rsi
   140021a43:	push   rcx
   140021a44:	push   rbx
   140021a45:	je     0x140021ab9
   140021a47:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140021a4e:	add    BYTE PTR [rax],al
   140021a50:	rex.B add al,0x3f
   140021a53:	(bad)  
   140021a54:	ss push rcx
   140021a56:	rex.R
   140021a57:	gs (bad) 
   140021a59:	jne    0x140021ac2
   140021a5b:	rex
   140021a5c:	rex push rcx
   140021a5e:	rex.RB
   140021a5f:	rex.B
   140021a60:	rex.B
   140021a61:	rex.B
   140021a62:	rex.RB
   140021a63:	push   r14
   140021a65:	xor    BYTE PTR [rax+0x50],al
   140021a68:	rex.RB
   140021a69:	rex.X
   140021a6a:	rex.R
   140021a6b:	rex pop rdx
   140021a6d:	add    dl,dl
   140021a6f:	sbb    bh,BYTE PTR [rdi]
   140021a71:	ja     0x140021ad4
   140021a73:	jb     0x140021ae3
   140021a75:	imul   ebp,DWORD PTR [rsi+0x67],0x654d5140
   140021a7c:	jae    0x140021af1
   140021a7e:	(bad)  
   140021a7f:	rex.WR outs dx,DWORD PTR gs:[esi]
   140021a83:	addr32 addr32 gs jb 0x140021ac8
   140021a88:	rex push rcx
   140021a8a:	rex.RB
   140021a8b:	rex.X
   140021a8c:	rex.B (bad) 
   140021a8e:	push   r14
   140021a90:	push   rcx
   140021a91:	rex.R
   140021a92:	gs (bad) 
   140021a94:	jne    0x140021afd
   140021a96:	rex
   140021a97:	rex pop rax
   140021a99:	pop    rdx
   140021a9a:	add    BYTE PTR [rax],al
   140021a9c:	or     al,0x1
   140021a9e:	(bad)  
   140021a9f:	(bad)  
   140021aa0:	xor    BYTE PTR [rcx+0x4d],dl
   140021aa3:	gs jae 0x140021b19
   140021aa6:	(bad)  
   140021aa7:	rex.WR outs dx,DWORD PTR gs:[esi]
   140021aab:	addr32 addr32 gs jb 0x140021af0
   140021ab0:	rex push rcx
   140021ab2:	rex.RB
   140021ab3:	rex.B
   140021ab4:	rex.B
   140021ab5:	rex push rax
   140021ab7:	rex.RB
   140021ab8:	rex.X
   140021ab9:	rex.R
   140021aba:	rex.W xor BYTE PTR [rax+0x5a],al
   140021abe:	add    BYTE PTR [rax],al
   140021ac0:	xor    BYTE PTR [rbx],cl
   140021ac2:	(bad)  
   140021ac3:	gs jb  0x140021b38
   140021ac6:	outs   dx,DWORD PTR ds:[rsi]
   140021ac7:	jb     0x140021b09
   140021ac9:	push   rcx
   140021aca:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x63697665
   140021ad3:	gs rex
   140021ad5:	rex push rcx
   140021ad7:	rex.RB
   140021ad8:	rex.X
   140021ad9:	rex.B (bad) 
   140021adb:	push   r15
   140021add:	xor    al,0x46
   140021adf:	imul   ebp,DWORD PTR [rbp+riz*2+0x45],0x726f7272
   140021ae7:	rex xor DWORD PTR [rax+0x58],eax
   140021aeb:	pop    rdx
   140021aec:	add    BYTE PTR [rax],al
   140021aee:	(bad)  
   140021aef:	adc    BYTE PTR [rdi],bh
   140021af1:	outs   dx,DWORD PTR ds:[rsi]
   140021af2:	jo     0x140021b59
   140021af4:	outs   dx,BYTE PTR ds:[rsi]
   140021af5:	rex push rcx
   140021af7:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   140021b00:	pop    r15
   140021b02:	rex.WRX push rsi
   140021b04:	(bad)  
   140021b05:	and    al,0x51
   140021b07:	rex.RX ins BYTE PTR es:[rdi],dx
   140021b09:	(bad)  
   140021b0a:	addr32 jae 0x140021b4d
   140021b0d:	push   rdi
   140021b0e:	xor    al,0x4f
   140021b10:	jo     0x140021b77
   140021b12:	outs   dx,BYTE PTR ds:[rsi]
   140021b13:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140021b15:	fs gs rex.RX ins BYTE PTR es:[rdi],dx
   140021b19:	(bad)  
   140021b1a:	addr32 rex push rcx
   140021b1d:	rex.WB
   140021b1e:	rex.WRXB
   140021b1f:	rex.R
   140021b20:	gs jbe 0x140021b8c
   140021b23:	movsxd esp,DWORD PTR [rbp+0x40]
   140021b26:	rex
   140021b27:	rex
   140021b28:	rex
   140021b29:	rex pop rdx
   140021b2b:	add    BYTE PTR [rbp+0x303f3f00],ch
   140021b31:	push   rcx
   140021b32:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   140021b3b:	rex.B
   140021b3c:	rex
   140021b3d:	rex.B
   140021b3e:	rex.RB
   140021b3f:	rex.X push rsi
   140021b41:	push   rcx
   140021b42:	push   rbx
   140021b43:	je     0x140021bb7
   140021b45:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140021b4c:	add    BYTE PTR [rax],al
   140021b4e:	outs   dx,DWORD PTR ds:[rsi]
   140021b4f:	add    bh,BYTE PTR [rdi]
   140021b51:	(bad)  
   140021b52:	xor    DWORD PTR [rcx+0x43],edx
   140021b55:	outs   dx,DWORD PTR ds:[rsi]
   140021b56:	jb     0x140021bbd
   140021b58:	rex.B jo 0x140021bcb
   140021b5b:	ins    BYTE PTR es:[rdi],dx
   140021b5c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140021b63:	rex
   140021b64:	rex push rbp
   140021b66:	rex.RB
   140021b67:	rex.B
   140021b68:	rex.B
   140021b69:	rex pop rax
   140021b6b:	pop    rdx
   140021b6c:	add    BYTE PTR [rax],al
   140021b6e:	outs   dx,BYTE PTR ds:[rsi]
   140021b6f:	add    bh,BYTE PTR [rdi]
   140021b71:	(bad)  
   140021b72:	xor    DWORD PTR [rcx+0x43],edx
   140021b75:	outs   dx,DWORD PTR ds:[rsi]
   140021b76:	ins    DWORD PTR es:[rdi],dx
   140021b77:	ins    DWORD PTR es:[rdi],dx
   140021b78:	(bad)  
   140021b79:	outs   dx,BYTE PTR ds:[rsi]
   140021b7a:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73726150
   140021b83:	gs jb  0x140021bc6
   140021b86:	rex push rcx
   140021b88:	rex.RB
   140021b89:	rex.B
   140021b8a:	rex.B
   140021b8b:	rex pop rax
   140021b8d:	pop    rdx
   140021b8e:	add    BYTE PTR [rax],al
   140021b90:	lea    ecx,[rsi]
   140021b92:	(bad)  
   140021b93:	imul   esi,DWORD PTR [rbx+0x53],0x51407465
   140021b9a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021b9c:	ins    DWORD PTR es:[rdi],dx
   140021b9d:	ins    DWORD PTR es:[rdi],dx
   140021b9e:	(bad)  
   140021b9f:	outs   dx,BYTE PTR ds:[rsi]
   140021ba0:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73726150
   140021ba9:	gs jb  0x140021bec
   140021bac:	rex push rcx
   140021bae:	rex.RB
   140021baf:	rex.X
   140021bb0:	pop    r15
   140021bb2:	rex.WRX
   140021bb3:	rex.B
   140021bb4:	rex.RB
   140021bb5:	rex.X push rsi
   140021bb7:	push   rcx
   140021bb8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021bba:	ins    DWORD PTR es:[rdi],dx
   140021bbb:	ins    DWORD PTR es:[rdi],dx
   140021bbc:	(bad)  
   140021bbd:	outs   dx,BYTE PTR ds:[rsi]
   140021bbe:	imul   r13,QWORD PTR fs:[rsi+0x65],0x6974704f
   140021bc7:	outs   dx,DWORD PTR ds:[rsi]
   140021bc8:	outs   dx,BYTE PTR ds:[rsi]
   140021bc9:	rex
   140021bca:	rex
   140021bcb:	rex pop rdx
   140021bcd:	add    dh,dl
   140021bcf:	(bad)  
   140021bd0:	(bad)  
   140021bd1:	jae    0x140021c3b
   140021bd3:	outs   dx,DWORD PTR ds:[rsi]
   140021bd4:	ja     0x140021c1e
   140021bd6:	gs ins BYTE PTR es:[rdi],dx
   140021bd8:	jo     0x140021c1a
   140021bda:	push   rcx
   140021bdb:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021bdd:	ins    DWORD PTR es:[rdi],dx
   140021bde:	ins    DWORD PTR es:[rdi],dx
   140021bdf:	(bad)  
   140021be0:	outs   dx,BYTE PTR ds:[rsi]
   140021be1:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73726150
   140021bea:	gs jb  0x140021c2d
   140021bed:	rex push rcx
   140021bef:	rex.RB
   140021bf0:	rex.B
   140021bf1:	pop    r8
   140021bf3:	rex.W
   140021bf4:	rex pop rdx
   140021bf6:	add    BYTE PTR [rax],al
   140021bf8:	pop    rbp
   140021bf9:	adc    DWORD PTR [rdi],edi
   140021bfb:	jo     0x140021c6c
   140021bfd:	jae    0x140021c68
   140021bff:	je     0x140021c6a
   140021c01:	outs   dx,DWORD PTR ds:[rsi]
   140021c02:	outs   dx,BYTE PTR ds:[rsi]
   140021c03:	(bad)  
   140021c04:	ins    BYTE PTR es:[rdi],dx
   140021c05:	rex.B jb 0x140021c6f
   140021c08:	jne    0x140021c77
   140021c0a:	outs   dx,BYTE PTR gs:[rsi]
   140021c0c:	je     0x140021c81
   140021c0e:	rex push rcx
   140021c10:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021c12:	ins    DWORD PTR es:[rdi],dx
   140021c13:	ins    DWORD PTR es:[rdi],dx
   140021c14:	(bad)  
   140021c15:	outs   dx,BYTE PTR ds:[rsi]
   140021c16:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73726150
   140021c1f:	gs jb  0x140021c62
   140021c22:	rex push rcx
   140021c24:	rex.RB
   140021c25:	rex.X
   140021c26:	rex.B (bad) 
   140021c28:	push   r14
   140021c2a:	push   rcx
   140021c2b:	push   rbx
   140021c2c:	je     0x140021ca0
   140021c2e:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140021c35:	rex
   140021c36:	rex pop rax
   140021c38:	pop    rdx
   140021c39:	add    BYTE PTR [rbx+0x72703f11],al
   140021c3f:	outs   dx,DWORD PTR ds:[rsi]
   140021c40:	movsxd esp,DWORD PTR [rbp+0x73]
   140021c43:	jae    0x140021c85
   140021c45:	push   rcx
   140021c46:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021c48:	ins    DWORD PTR es:[rdi],dx
   140021c49:	ins    DWORD PTR es:[rdi],dx
   140021c4a:	(bad)  
   140021c4b:	outs   dx,BYTE PTR ds:[rsi]
   140021c4c:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73726150
   140021c55:	gs jb  0x140021c98
   140021c58:	rex push rcx
   140021c5a:	rex.RB
   140021c5b:	rex.B
   140021c5c:	pop    r8
   140021c5e:	rex.B
   140021c5f:	rex.RB
   140021c60:	rex.X push rsi
   140021c62:	push   rcx
   140021c63:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021c65:	jb     0x140021ccc
   140021c67:	rex.B jo 0x140021cda
   140021c6a:	ins    BYTE PTR es:[rdi],dx
   140021c6b:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140021c72:	rex
   140021c73:	rex
   140021c74:	rex pop rdx
   140021c76:	add    BYTE PTR [rax],al
   140021c78:	jle    0x140021c80
   140021c7a:	(bad)  
   140021c7b:	(bad)  
   140021c7c:	fs fs push rax
   140021c7f:	outs   dx,DWORD PTR ds:[rsi]
   140021c80:	jae    0x140021ceb
   140021c82:	je     0x140021ced
   140021c84:	outs   dx,DWORD PTR ds:[rsi]
   140021c85:	outs   dx,BYTE PTR ds:[rsi]
   140021c86:	(bad)  
   140021c87:	ins    BYTE PTR es:[rdi],dx
   140021c88:	rex.B jb 0x140021cf2
   140021c8b:	jne    0x140021cfa
   140021c8d:	outs   dx,BYTE PTR gs:[rsi]
   140021c8f:	je     0x140021cd1
   140021c91:	push   rcx
   140021c92:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021c94:	ins    DWORD PTR es:[rdi],dx
   140021c95:	ins    DWORD PTR es:[rdi],dx
   140021c96:	(bad)  
   140021c97:	outs   dx,BYTE PTR ds:[rsi]
   140021c98:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73726150
   140021ca1:	gs jb  0x140021ce4
   140021ca4:	rex push rcx
   140021ca6:	rex.RB
   140021ca7:	rex.B
   140021ca8:	pop    r8
   140021caa:	rex.B
   140021cab:	rex.RB
   140021cac:	rex.X push rsi
   140021cae:	push   rcx
   140021caf:	push   rbx
   140021cb0:	je     0x140021d24
   140021cb2:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   140021cb9:	rex pop rdx
   140021cbb:	add    BYTE PTR [rcx+0x6],bh
   140021cbe:	(bad)  
   140021cbf:	(bad)  
   140021cc0:	fs fs rex.WRXB jo 0x140021d39
   140021cc5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f435140
   140021ccc:	ins    DWORD PTR es:[rdi],dx
   140021ccd:	ins    DWORD PTR es:[rdi],dx
   140021cce:	(bad)  
   140021ccf:	outs   dx,BYTE PTR ds:[rsi]
   140021cd0:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73726150
   140021cd9:	gs jb  0x140021d1c
   140021cdc:	rex push rcx
   140021cde:	rex.RB
   140021cdf:	rex.B
   140021ce0:	pop    r15
   140021ce2:	rex.WRX
   140021ce3:	rex.B
   140021ce4:	rex.RB
   140021ce5:	rex.X push rsi
   140021ce7:	push   rcx
   140021ce8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021cea:	ins    DWORD PTR es:[rdi],dx
   140021ceb:	ins    DWORD PTR es:[rdi],dx
   140021cec:	(bad)  
   140021ced:	outs   dx,BYTE PTR ds:[rsi]
   140021cee:	imul   r13,QWORD PTR fs:[rsi+0x65],0x6974704f
   140021cf7:	outs   dx,DWORD PTR ds:[rsi]
   140021cf8:	outs   dx,BYTE PTR ds:[rsi]
   140021cf9:	rex
   140021cfa:	rex
   140021cfb:	rex pop rdx
   140021cfd:	add    BYTE PTR [rdi+0x0],ah
   140021d00:	(bad)  
   140021d01:	(bad)  
   140021d02:	xor    BYTE PTR [rcx+0x43],dl
   140021d05:	outs   dx,DWORD PTR ds:[rsi]
   140021d06:	ins    DWORD PTR es:[rdi],dx
   140021d07:	ins    DWORD PTR es:[rdi],dx
   140021d08:	(bad)  
   140021d09:	outs   dx,BYTE PTR ds:[rsi]
   140021d0a:	imul   r13,QWORD PTR fs:[rsi+0x65],0x6974704f
   140021d13:	outs   dx,DWORD PTR ds:[rsi]
   140021d14:	outs   dx,BYTE PTR ds:[rsi]
   140021d15:	rex
   140021d16:	rex push rcx
   140021d18:	rex.RB
   140021d19:	rex.B
   140021d1a:	rex.B
   140021d1b:	rex
   140021d1c:	rex.B
   140021d1d:	rex.RB
   140021d1e:	rex.X push rsi
   140021d20:	push   rcx
   140021d21:	push   rbx
   140021d22:	je     0x140021d96
   140021d24:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140021d2b:	rex
   140021d2c:	rex
   140021d2d:	rex.B
   140021d2e:	rex.RB
   140021d2f:	rex.X push rsi
   140021d31:	push   rcx
   140021d32:	push   rbx
   140021d33:	je     0x140021da7
   140021d35:	imul   ebp,DWORD PTR [rsi+0x67],0x31314040
   140021d3c:	rex pop rdx
   140021d3e:	add    BYTE PTR [rax],al
   140021d40:	xchg   edi,eax
   140021d41:	add    DWORD PTR [rdi],edi
   140021d43:	(bad)  
   140021d44:	xor    BYTE PTR [rcx+0x53],dl
   140021d47:	je     0x140021dbb
   140021d49:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140021d50:	rex.B
   140021d51:	rex.B
   140021d52:	rex pop rax
   140021d54:	pop    rdx
   140021d55:	add    BYTE PTR [rbx+0x64613f06],dl
   140021d5b:	fs push rsi
   140021d5d:	gs jb  0x140021dd3
   140021d60:	imul   ebp,DWORD PTR [rdi+0x6e],0x6974704f
   140021d67:	outs   dx,DWORD PTR ds:[rsi]
   140021d68:	outs   dx,BYTE PTR ds:[rsi]
   140021d69:	rex push rcx
   140021d6b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021d6d:	ins    DWORD PTR es:[rdi],dx
   140021d6e:	ins    DWORD PTR es:[rdi],dx
   140021d6f:	(bad)  
   140021d70:	outs   dx,BYTE PTR ds:[rsi]
   140021d71:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73726150
   140021d7a:	gs jb  0x140021dbd
   140021d7d:	rex push rcx
   140021d7f:	rex.RB
   140021d80:	rex.B
   140021d81:	rex.B (bad) 
   140021d83:	push   r14
   140021d85:	push   rcx
   140021d86:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021d88:	ins    DWORD PTR es:[rdi],dx
   140021d89:	ins    DWORD PTR es:[rdi],dx
   140021d8a:	(bad)  
   140021d8b:	outs   dx,BYTE PTR ds:[rsi]
   140021d8c:	imul   r13,QWORD PTR fs:[rsi+0x65],0x6974704f
   140021d95:	outs   dx,DWORD PTR ds:[rsi]
   140021d96:	outs   dx,BYTE PTR ds:[rsi]
   140021d97:	rex
   140021d98:	rex pop rax
   140021d9a:	pop    rdx
   140021d9b:	add    BYTE PTR [rbp+0x2],ch
   140021d9e:	(bad)  
   140021d9f:	(bad)  
   140021da0:	xor    DWORD PTR [rcx+0x43],edx
   140021da3:	outs   dx,DWORD PTR ds:[rsi]
   140021da4:	ins    DWORD PTR es:[rdi],dx
   140021da5:	ins    DWORD PTR es:[rdi],dx
   140021da6:	(bad)  
   140021da7:	outs   dx,BYTE PTR ds:[rsi]
   140021da8:	imul   r13,QWORD PTR fs:[rsi+0x65],0x6974704f
   140021db1:	outs   dx,DWORD PTR ds:[rsi]
   140021db2:	outs   dx,BYTE PTR ds:[rsi]
   140021db3:	rex
   140021db4:	rex push rcx
   140021db6:	rex.RB
   140021db7:	rex.B
   140021db8:	rex.B
   140021db9:	rex pop rax
   140021dbb:	pop    rdx
   140021dbc:	add    BYTE PTR [rax],al
   140021dbe:	outs   dx,BYTE PTR ds:[rsi]
   140021dbf:	(bad)  
   140021dc0:	(bad)  
   140021dc1:	(bad)  
   140021dc2:	fs fs rex.W
   140021dc5:	gs ins BYTE PTR es:[rdi],dx
   140021dc7:	jo     0x140021e18
   140021dc9:	jo     0x140021e3f
   140021dcb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f435140
   140021dd2:	ins    DWORD PTR es:[rdi],dx
   140021dd3:	ins    DWORD PTR es:[rdi],dx
   140021dd4:	(bad)  
   140021dd5:	outs   dx,BYTE PTR ds:[rsi]
   140021dd6:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73726150
   140021ddf:	gs jb  0x140021e22
   140021de2:	rex push rcx
   140021de4:	rex.RB
   140021de5:	rex.B
   140021de6:	rex.B (bad) 
   140021de8:	push   r14
   140021dea:	push   rcx
   140021deb:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021ded:	ins    DWORD PTR es:[rdi],dx
   140021dee:	ins    DWORD PTR es:[rdi],dx
   140021def:	(bad)  
   140021df0:	outs   dx,BYTE PTR ds:[rsi]
   140021df1:	imul   r13,QWORD PTR fs:[rsi+0x65],0x6974704f
   140021dfa:	outs   dx,DWORD PTR ds:[rsi]
   140021dfb:	outs   dx,BYTE PTR ds:[rsi]
   140021dfc:	rex
   140021dfd:	rex pop rax
   140021dff:	pop    rdx
   140021e00:	add    BYTE PTR [rax],al
   140021e02:	sub    BYTE PTR [rip+0x7465733f],dl        # 0x1b4679147
   140021e08:	rex.B jo 0x140021e7b
   140021e0b:	ins    BYTE PTR es:[rdi],dx
   140021e0c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140021e13:	rex.R
   140021e14:	gs jae 0x140021e7a
   140021e17:	jb     0x140021e82
   140021e19:	jo     0x140021e8f
   140021e1b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f435140
   140021e22:	ins    DWORD PTR es:[rdi],dx
   140021e23:	ins    DWORD PTR es:[rdi],dx
   140021e24:	(bad)  
   140021e25:	outs   dx,BYTE PTR ds:[rsi]
   140021e26:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73726150
   140021e2f:	gs jb  0x140021e72
   140021e32:	rex push rcx
   140021e34:	rex.RB
   140021e35:	rex.B
   140021e36:	pop    r8
   140021e38:	rex.B
   140021e39:	rex.RB
   140021e3a:	rex.X push rsi
   140021e3c:	push   rcx
   140021e3d:	push   rbx
   140021e3e:	je     0x140021eb2
   140021e40:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140021e47:	add    BYTE PTR [rsi+0x303f3f01],dl
   140021e4d:	push   rcx
   140021e4e:	push   rbx
   140021e4f:	je     0x140021ec3
   140021e51:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140021e58:	rex.B
   140021e59:	rex.B
   140021e5a:	rex push rsi
   140021e5c:	push   rcx
   140021e5d:	rex.WR (bad) 
   140021e5f:	je     0x140021eca
   140021e61:	outs   dx,BYTE PTR ds:[rsi]
   140021e62:	xor    DWORD PTR [rbx+0x74],edx
   140021e65:	jb     0x140021ed0
   140021e67:	outs   dx,BYTE PTR ds:[rsi]
   140021e68:	addr32 rex
   140021e6a:	rex
   140021e6b:	rex pop rdx
   140021e6d:	add    BYTE PTR [rax+0x0],ch
   140021e70:	(bad)  
   140021e71:	(bad)  
   140021e72:	xor    BYTE PTR [rcx+0x43],dl
   140021e75:	outs   dx,DWORD PTR ds:[rsi]
   140021e76:	ins    DWORD PTR es:[rdi],dx
   140021e77:	ins    DWORD PTR es:[rdi],dx
   140021e78:	(bad)  
   140021e79:	outs   dx,BYTE PTR ds:[rsi]
   140021e7a:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73726150
   140021e83:	gs jb  0x140021ec6
   140021e86:	rex push rcx
   140021e88:	rex.RB
   140021e89:	rex.B
   140021e8a:	rex.B
   140021e8b:	rex pop rax
   140021e8d:	pop    rdx
   140021e8e:	add    BYTE PTR [rax],al
   140021e90:	sub    edx,DWORD PTR [rip+0x7465733f]        # 0x1b46791d5
   140021e96:	rex.B jo 0x140021f09
   140021e99:	ins    BYTE PTR es:[rdi],dx
   140021e9a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140021ea1:	push   rsi
   140021ea2:	gs jb  0x140021f18
   140021ea5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f435140
   140021eac:	jb     0x140021f13
   140021eae:	rex.B jo 0x140021f21
   140021eb1:	ins    BYTE PTR es:[rdi],dx
   140021eb2:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140021eb9:	rex
   140021eba:	rex push rbx
   140021ebc:	pop    r8
   140021ebe:	rex.B
   140021ebf:	rex.RB
   140021ec0:	rex.X push rsi
   140021ec2:	push   rcx
   140021ec3:	push   rbx
   140021ec4:	je     0x140021f38
   140021ec6:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140021ecd:	add    BYTE PTR [rdx],ch
   140021ecf:	adc    eax,0x7465733f
   140021ed4:	rex.B jo 0x140021f47
   140021ed7:	ins    BYTE PTR es:[rdi],dx
   140021ed8:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140021edf:	rex.WRX (bad) 
   140021ee1:	ins    DWORD PTR es:[rdi],dx
   140021ee2:	gs rex push rcx
   140021ee5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021ee7:	jb     0x140021f4e
   140021ee9:	rex.B jo 0x140021f5c
   140021eec:	ins    BYTE PTR es:[rdi],dx
   140021eed:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140021ef4:	rex
   140021ef5:	rex push rbx
   140021ef7:	pop    r8
   140021ef9:	rex.B
   140021efa:	rex.RB
   140021efb:	rex.X push rsi
   140021efd:	push   rcx
   140021efe:	push   rbx
   140021eff:	je     0x140021f73
   140021f01:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140021f08:	add    BYTE PTR [rax],al
   140021f0a:	(bad)  
   140021f0b:	or     al,0x3f
   140021f0d:	data16 jb 0x140021f7f
   140021f10:	ins    DWORD PTR es:[rdi],dx
   140021f11:	rex.B jae 0x140021f77
   140021f14:	imul   ebp,DWORD PTR [rcx+0x5f],0x706c6568
   140021f1b:	gs jb  0x140021f5e
   140021f1e:	push   rcx
   140021f1f:	push   rbx
   140021f20:	je     0x140021f94
   140021f22:	imul   ebp,DWORD PTR [rsi+0x67],0x41434040
   140021f29:	push   rax
   140021f2a:	rex.RB
   140021f2b:	push   r13
   140021f2d:	(bad)  
   140021f2e:	and    al,0x51
   140021f30:	push   rsp
   140021f31:	jns    0x140021fa3
   140021f33:	gs fs rex.B jb 0x140021faa
   140021f38:	(bad)  
   140021f39:	jns    0x140021f7f
   140021f3b:	(bad)  
   140021f3c:	je     0x140021f9f
   140021f3e:	rex
   140021f3f:	rex.RXB
   140021f40:	rex
   140021f41:	rex push rax
   140021f43:	rex.RB
   140021f44:	rex.X
   140021f45:	rex.R
   140021f46:	rex.W
   140021f47:	rex pop rdx
   140021f49:	add    BYTE PTR [rdx+0x0],ch
   140021f4c:	(bad)  
   140021f4d:	(bad)  
   140021f4e:	xor    BYTE PTR [rcx+0x43],dl
   140021f51:	outs   dx,DWORD PTR ds:[rsi]
   140021f52:	jb     0x140021fb9
   140021f54:	rex.B jo 0x140021fc7
   140021f57:	ins    BYTE PTR es:[rdi],dx
   140021f58:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140021f5f:	rex
   140021f60:	rex push rcx
   140021f62:	rex.RB
   140021f63:	rex.B
   140021f64:	rex.B
   140021f65:	rex
   140021f66:	rex.B
   140021f67:	rex.RB
   140021f68:	rex.B
   140021f69:	rex.W push rax
   140021f6b:	rex.RB
   140021f6c:	push   r8
   140021f6e:	rex.RB
   140021f6f:	rex.B
   140021f70:	rex.R
   140021f71:	rex.W
   140021f72:	rex pop rdx
   140021f74:	add    BYTE PTR [rax],al
   140021f76:	cmp    BYTE PTR [rdx],bl
   140021f78:	(bad)  
   140021f79:	jne    0x140021fe9
   140021f7b:	imul   esp,DWORD PTR [rbx+0x6f],0x51406564
   140021f82:	push   rbx
   140021f83:	je     0x140021ff7
   140021f85:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140021f8c:	rex.X
   140021f8d:	push   r8
   140021f8f:	rex.RB
   140021f90:	rex.X push rsi
   140021f92:	push   rcx
   140021f93:	rex.XB push 0x40407261
   140021f99:	pop    rax
   140021f9a:	pop    rdx
   140021f9b:	add    BYTE PTR [rcx],dl
   140021f9d:	sbb    DWORD PTR [rdi],edi
   140021f9f:	je     0x140022010
   140021fa1:	push   rbx
   140021fa2:	je     0x140022016
   140021fa4:	imul   ebp,DWORD PTR [rsi+0x67],0x74535140
   140021fab:	jb     0x140022016
   140021fad:	outs   dx,BYTE PTR ds:[rsi]
   140021fae:	addr32 push rdx
   140021fb0:	gs data16 rex
   140021fb3:	rex push rcx
   140021fb5:	rex.RB
   140021fb6:	rex.X
   140021fb7:	rex.B (bad) 
   140021fb9:	push   r14
   140021fbb:	push   rcx
   140021fbc:	push   rbx
   140021fbd:	je     0x140022031
   140021fbf:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140021fc6:	add    BYTE PTR [rax],al
   140021fc8:	(bad)  
   140021fc9:	adc    BYTE PTR [rdi],bh
   140021fcb:	outs   dx,BYTE PTR ds:[rsi]
   140021fcc:	jne    0x14002203b
   140021fce:	(bad)  
   140021fcf:	gs jb  0x140022012
   140021fd2:	push   rcx
   140021fd3:	push   rbx
   140021fd4:	je     0x140022048
   140021fd6:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   140021fdd:	(bad)  
   140021fde:	push   r14
   140021fe0:	xor    DWORD PTR [rax+0x4e],eax
   140021fe3:	rex.R
   140021fe4:	rex.W
   140021fe5:	rex pop rdx
   140021fe7:	add    BYTE PTR [rsi+0x303f3f01],bl
   140021fed:	push   rcx
   140021fee:	push   rbx
   140021fef:	je     0x140022063
   140021ff1:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   140021ff8:	rex push rcx
   140021ffa:	rex.RB
   140021ffb:	rex.B
   140021ffc:	rex.B
   140021ffd:	rex
   140021ffe:	rex.B
   140021fff:	rex.RB
   140022000:	rex.X push rsi
   140022002:	xor    BYTE PTR [rax+0x40],al
   140022005:	pop    rdx
   140022006:	add    BYTE PTR [rax],al
   140022008:	test   DWORD PTR [rbx],eax
   14002200a:	(bad)  
   14002200b:	(bad)  
   14002200c:	xor    al,0x51
   14002200e:	push   rbx
   14002200f:	je     0x140022083
   140022011:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   140022018:	rex push rcx
   14002201a:	rex.RB
   14002201b:	rex.B
   14002201c:	rex.B
   14002201d:	rex.B
   14002201e:	rex.RB
   14002201f:	push   r14
   140022021:	xor    BYTE PTR [rax+0x41],al
   140022024:	rex.RB
   140022025:	rex.X push rsi
   140022027:	xor    BYTE PTR [rax+0x40],al
   14002202a:	pop    rdx
   14002202b:	add    BYTE PTR [rsi+0x3],bh
   14002202e:	(bad)  
   14002202f:	(bad)  
   140022030:	xor    al,0x51
   140022032:	push   rbx
   140022033:	je     0x1400220a7
   140022035:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002203c:	rex.B
   14002203d:	rex.B
   14002203e:	rex.B
   14002203f:	rex.RB
   140022040:	push   r14
   140022042:	xor    BYTE PTR [rax+0x41],al
   140022045:	rex.RB
   140022046:	rex.X push rsi
   140022048:	xor    BYTE PTR [rax+0x40],al
   14002204b:	pop    rdx
   14002204c:	add    BYTE PTR [rax],al
   14002204e:	in     eax,0x6
   140022050:	(bad)  
   140022051:	(bad)  
   140022052:	jb     0x1400220bb
   140022054:	rex push rcx
   140022056:	push   rbx
   140022057:	je     0x1400220cb
   140022059:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140022060:	rex.X
   140022061:	rex.B (bad) 
   140022063:	push   r14
   140022065:	xor    DWORD PTR [rax+0x41],eax
   140022068:	rex.RB
   140022069:	rex.X push rsi
   14002206b:	xor    DWORD PTR [rax+0x48],eax
   14002206e:	push   rsi
   14002206f:	push   rcx
   140022070:	rex.XB push 0x40407261
   140022076:	rex pop rdx
   140022078:	add    BYTE PTR [rax],al
   14002207a:	lock sbb DWORD PTR [rdi],edi
   14002207d:	je     0x1400220f1
   14002207f:	(bad)  
   140022080:	outs   dx,BYTE PTR ds:[rsi]
   140022081:	jae    0x1400220ef
   140022083:	(bad)  
   140022084:	je     0x1400220eb
   140022086:	rex push rcx
   140022088:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002208a:	jb     0x1400220f1
   14002208c:	rex.B jo 0x1400220ff
   14002208f:	ins    BYTE PTR es:[rdi],dx
   140022090:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140022097:	rex
   140022098:	rex push rbx
   14002209a:	rex.B (bad) 
   14002209c:	push   r14
   14002209e:	push   rcx
   14002209f:	push   rbx
   1400220a0:	je     0x140022114
   1400220a2:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   1400220a9:	rex.X
   1400220aa:	xor    BYTE PTR [rax],r14b
   1400220ad:	rex.W
   1400220ae:	rex pop rdx
   1400220b0:	add    BYTE PTR [rax],al
   1400220b2:	push   rdi
   1400220b3:	add    BYTE PTR [rdi],bh
   1400220b5:	(bad)  
   1400220b6:	xor    BYTE PTR [rcx+0x43],dl
   1400220b9:	push   0x40407261
   1400220be:	push   rcx
   1400220bf:	rex.RB
   1400220c0:	rex.B
   1400220c1:	rex.B
   1400220c2:	rex push rbp
   1400220c4:	push   rcx
   1400220c5:	rex.WR (bad) 
   1400220c7:	je     0x140022132
   1400220c9:	outs   dx,BYTE PTR ds:[rsi]
   1400220ca:	xor    DWORD PTR [rbx+0x68],eax
   1400220cd:	(bad)  
   1400220ce:	jb     0x140022110
   1400220d0:	rex
   1400220d1:	rex pop rdx
   1400220d3:	add    BYTE PTR [rax+0xe],cl
   1400220d6:	(bad)  
   1400220d7:	imul   esi,DWORD PTR [rbx+0x4e],0x406c6c75
   1400220de:	push   rcx
   1400220df:	push   rbx
   1400220e0:	je     0x140022154
   1400220e2:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   1400220e9:	rex push rcx
   1400220eb:	rex.RB
   1400220ec:	rex.X
   1400220ed:	pop    r15
   1400220ef:	rex.WRX pop rax
   1400220f1:	pop    rdx
   1400220f2:	add    BYTE PTR [rax],al
   1400220f4:	rol    DWORD PTR [rdx],cl
   1400220f6:	(bad)  
   1400220f7:	(bad)  
   1400220f8:	xor    DWORD PTR [rcx+0x53],edx
   1400220fb:	je     0x14002216f
   1400220fd:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   140022104:	rex push rcx
   140022106:	rex.RB
   140022107:	rex.B
   140022108:	rex.B
   140022109:	rex pop rax
   14002210b:	pop    rdx
   14002210c:	add    BYTE PTR [rax],al
   14002210e:	movabs eax,ds:0x72745351303f3f01
   140022117:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14002211e:	rex push rcx
   140022120:	rex.RB
   140022121:	rex.B
   140022122:	rex.B
   140022123:	rex pop rax
   140022125:	pop    rdx
   140022126:	add    BYTE PTR [rax],al
   140022128:	jae    0x14002212b
   14002212a:	(bad)  
   14002212b:	(bad)  
   14002212c:	xor    BYTE PTR [rcx+0x53],dl
   14002212f:	push   0x64657261
   140022134:	rex.R (bad) 
   140022136:	je     0x140022199
   140022138:	rex
   140022139:	rex push rcx
   14002213b:	rex.RB
   14002213c:	rex.B
   14002213d:	rex.B
   14002213e:	rex pop rax
   140022140:	pop    rdx
   140022141:	add    bh,dh
   140022143:	adc    DWORD PTR [rdi],edi
   140022145:	jno    0x140022190
   140022147:	outs   dx,BYTE PTR ds:[rsi]
   140022148:	data16 rex
   14002214a:	rex pop rcx
   14002214c:	rex.B
   14002214d:	rex.WRX pop rax
   14002214f:	pop    rdx
   140022150:	add    BYTE PTR [rax],al
   140022152:	rex.XB adc dil,BYTE PTR [r15]
   140022155:	jno    0x1400221ca
   140022157:	je     0x1400221cb
   140022159:	movsxd ebp,DWORD PTR [rbp+0x70]
   14002215c:	rex
   14002215d:	rex pop rcx
   14002215f:	rex.B
   140022160:	rex.W push rax
   140022162:	rex.RB
   140022163:	rex.X
   140022164:	xor    BYTE PTR [rax+0x5a],r8b
   140022168:	add    BYTE PTR [rax],al
   14002216a:	(bad)  
   14002216b:	adc    bh,BYTE PTR [rdi]
   14002216d:	jno    0x1400221c2
   14002216f:	rex.WRX (bad) 
   140022171:	rex.WRX
   140022172:	rex
   140022173:	rex pop rcx
   140022175:	rex.B
   140022176:	rex.WRX pop rax
   140022178:	pop    rdx
   140022179:	add    BYTE PTR [rip+0x696d3f10],bl        # 0x1a96f608f
   14002217f:	fs push rdx
   140022181:	gs rex push cx
   140022185:	push   rbx
   140022186:	je     0x1400221fa
   140022188:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002218f:	rex.X
   140022190:	rex.B (bad) 
   140022192:	push   r14
   140022194:	push   rcx
   140022195:	push   rbx
   140022196:	je     0x14002220a
   140022198:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14002219f:	rex
   1400221a0:	rex.W
   1400221a1:	rex.W
   1400221a2:	rex pop rdx
   1400221a4:	add    BYTE PTR [rax],al
   1400221a6:	enter  0x3f06,0x61
   1400221aa:	jo     0x14002221c
   1400221ac:	outs   dx,BYTE PTR gs:[rsi]
   1400221ae:	fs rex push rcx
   1400221b1:	push   rbx
   1400221b2:	je     0x140022226
   1400221b4:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400221bb:	rex.B
   1400221bc:	rex.B
   1400221bd:	rex.B
   1400221be:	rex.RB
   1400221bf:	push   r14
   1400221c1:	xor    DWORD PTR [rax+0x41],eax
   1400221c4:	rex.RB
   1400221c5:	rex.X push rsi
   1400221c7:	xor    DWORD PTR [rax+0x40],eax
   1400221ca:	pop    rdx
   1400221cb:	add    BYTE PTR [rbx+0x303f3f01],dl
   1400221d1:	push   rcx
   1400221d2:	push   rbx
   1400221d3:	je     0x140022247
   1400221d5:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400221dc:	rex.B
   1400221dd:	rex.B
   1400221de:	rex push rax
   1400221e0:	rex.RB
   1400221e1:	rex.X push rsi
   1400221e3:	push   rcx
   1400221e4:	rex.XB push 0x40407261
   1400221ea:	rex.W
   1400221eb:	rex pop rdx
   1400221ed:	add    BYTE PTR [rsi+0x14],bl
   1400221f0:	(bad)  
   1400221f1:	jb     0x140022258
   1400221f3:	jae    0x14002225a
   1400221f5:	jb     0x14002226d
   1400221f7:	gs rex push rcx
   1400221fa:	push   rbx
   1400221fb:	je     0x14002226f
   1400221fd:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140022204:	rex.B
   140022205:	pop    r8
   140022207:	rex.W
   140022208:	rex pop rdx
   14002220a:	add    BYTE PTR [rax],al
   14002220c:	or     eax,0x6c633f08
   140022211:	gs (bad) 
   140022213:	jb     0x140022255
   140022215:	push   rcx
   140022216:	push   rbx
   140022217:	je     0x14002228b
   140022219:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140022220:	rex.B
   140022221:	pop    r8
   140022223:	pop    rax
   140022224:	pop    rdx
   140022225:	add    BYTE PTR [rdi+0x61633f07],bh
   14002222b:	je     0x140022292
   14002222d:	outs   dx,DWORD PTR ds:[esi]
   14002222f:	jb     0x1400222aa
   140022231:	rex push rcx
   140022233:	rex.XB push 0x40407261
   140022239:	push   rbx
   14002223a:	rex.B (bad) 
   14002223c:	push   r15
   14002223e:	xor    al,0x43
   140022240:	(bad)  
   140022241:	je     0x1400222a8
   140022243:	outs   dx,DWORD PTR ds:[esi]
   140022245:	jb     0x1400222c0
   140022247:	rex xor DWORD PTR [rax+0x49],eax
   14002224b:	rex pop rdx
   14002224d:	add    BYTE PTR [rsi+rcx*1],bl
   140022250:	(bad)  
   140022251:	imul   esi,DWORD PTR [rbx+0x4c],0x65747465
   140022258:	jb     0x1400222a9
   14002225a:	jb     0x1400222aa
   14002225c:	jne    0x1400222cb
   14002225e:	(bad)  
   14002225f:	gs jb  0x1400222a2
   140022262:	push   rcx
   140022263:	rex.XB push 0x40407261
   140022269:	push   rbx
   14002226a:	pop    r15
   14002226c:	rex.WRX
   14002226d:	rex.WB
   14002226e:	rex pop rdx
   140022270:	add    BYTE PTR [rax],al
   140022272:	out    dx,al
   140022273:	(bad)  
   140022274:	(bad)  
   140022275:	(bad)  
   140022276:	jb     0x1400222df
   140022278:	rex push rcx
   14002227a:	push   rbx
   14002227b:	je     0x1400222ef
   14002227d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140022284:	rex.X
   140022285:	rex.B (bad) 
   140022287:	push   r14
   140022289:	xor    DWORD PTR [rax+0x56],eax
   14002228c:	push   rcx
   14002228d:	rex.XB push 0x40407261
   140022293:	rex.W xor BYTE PTR [rax+0x5a],al
   140022297:	add    BYTE PTR [rbp+0x5],dl
   14002229a:	(bad)  
   14002229b:	(bad)  
   14002229c:	pop    rcx
   14002229d:	push   rcx
   14002229e:	push   rbx
   14002229f:	je     0x140022313
   1400222a1:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400222a8:	rex.B
   1400222a9:	rex.B
   1400222aa:	rex.B
   1400222ab:	rex.RB
   1400222ac:	push   r14
   1400222ae:	xor    BYTE PTR [rax+0x56],al
   1400222b1:	push   rcx
   1400222b2:	rex.XB push 0x40407261
   1400222b8:	rex pop rdx
   1400222ba:	add    BYTE PTR [rax],al
   1400222bc:	jns    0x1400222d2
   1400222be:	(bad)  
   1400222bf:	jb     0x140022326
   1400222c1:	jae    0x14002232c
   1400222c3:	jp     0x14002232a
   1400222c5:	rex push rcx
   1400222c7:	push   rbx
   1400222c8:	je     0x14002233c
   1400222ca:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400222d1:	rex.B
   1400222d2:	pop    r8
   1400222d4:	rex.W
   1400222d5:	rex pop rdx
   1400222d7:	add    BYTE PTR [rcx+0x12],cl
   1400222da:	(bad)  
   1400222db:	jno    0x140022350
   1400222dd:	je     0x140022351
   1400222df:	je     0x140022350
   1400222e1:	fs rex
   1400222e3:	rex pop rcx
   1400222e5:	rex.B
   1400222e6:	rex.WRX push rax
   1400222e8:	rex.RB
   1400222e9:	rex.X
   1400222ea:	rex.R push rax
   1400222ec:	rex.RB
   1400222ed:	push   r8
   1400222ef:	rex.RB
   1400222f0:	rex.X
   1400222f1:	rex.R push rax
   1400222f3:	rex.RB
   1400222f4:	pop    r15
   1400222f6:	rex.WRX
   1400222f7:	rex pop rdx
   1400222f9:	add    BYTE PTR [rdx+0xd],bl
   1400222fc:	(bad)  
   1400222fd:	imul   ebp,DWORD PTR [rsi+0x73],0x40747265
   140022304:	push   rcx
   140022305:	push   rbx
   140022306:	je     0x14002237a
   140022308:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002230f:	rex.B
   140022310:	rex.B
   140022311:	rex.B
   140022312:	rex.RB
   140022313:	push   r14
   140022315:	xor    DWORD PTR [rax+0x48],eax
   140022318:	push   rax
   140022319:	rex.RB
   14002231a:	rex.X push rsi
   14002231c:	push   rcx
   14002231d:	rex.XB push 0x40407261
   140022323:	rex.W
   140022324:	rex pop rdx
   140022326:	add    BYTE PTR [rax],al
   140022328:	popf   
   140022329:	(bad)  
   14002232a:	(bad)  
   14002232b:	imul   esi,DWORD PTR [rbx+0x53],0x65636170
   140022332:	rex push rcx
   140022334:	rex.XB push 0x40407261
   14002233a:	push   rbx
   14002233b:	pop    r15
   14002233d:	rex.WRX
   14002233e:	rex.WB
   14002233f:	rex pop rdx
   140022341:	add    BYTE PTR [rcx],al
   140022343:	(bad)  
   140022344:	(bad)  
   140022345:	(bad)  
   140022346:	je     0x140022388
   140022348:	push   rcx
   140022349:	push   rbx
   14002234a:	je     0x1400223be
   14002234c:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140022353:	rex.X
   140022354:	rex.B (bad) 
   140022356:	rex.X push rsi
   140022358:	push   rcx
   140022359:	rex.XB push 0x40407261
   14002235f:	rex.W
   140022360:	rex pop rdx
   140022362:	add    BYTE PTR [rax],al
   140022364:	int    0x6
   140022366:	(bad)  
   140022367:	(bad)  
   140022368:	jo     0x1400223da
   14002236a:	outs   dx,BYTE PTR gs:[rsi]
   14002236c:	fs rex push rcx
   14002236f:	push   rbx
   140022370:	je     0x1400223e4
   140022372:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140022379:	rex.B
   14002237a:	rex.B
   14002237b:	rex.B
   14002237c:	rex.RB
   14002237d:	push   r14
   14002237f:	xor    DWORD PTR [rax+0x56],eax
   140022382:	push   rcx
   140022383:	rex.XB push 0x40407261
   140022389:	rex pop rdx
   14002238b:	add    BYTE PTR [rsi],al
   14002238d:	or     edi,DWORD PTR [rdi]
   14002238f:	outs   dx,BYTE PTR gs:[rsi]
   140022391:	fs jae 0x1400223eb
   140022394:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14002239c:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400223a3:	rex.X
   1400223a4:	pop    r15
   1400223a6:	rex.WRX push rsi
   1400223a8:	push   rcx
   1400223a9:	rex.WR (bad) 
   1400223ab:	je     0x140022416
   1400223ad:	outs   dx,BYTE PTR ds:[rsi]
   1400223ae:	xor    DWORD PTR [rbx+0x74],edx
   1400223b1:	jb     0x14002241c
   1400223b3:	outs   dx,BYTE PTR ds:[rsi]
   1400223b4:	addr32 rex
   1400223b6:	rex push rdi
   1400223b8:	xor    al,0x43
   1400223ba:	(bad)  
   1400223bb:	jae    0x140022422
   1400223bd:	push   rbx
   1400223be:	outs   dx,BYTE PTR gs:[rsi]
   1400223c0:	jae    0x14002242b
   1400223c2:	je     0x14002242d
   1400223c4:	jbe    0x14002242f
   1400223c6:	je     0x140022441
   1400223c8:	rex push rcx
   1400223ca:	je     0x14002240c
   1400223cc:	rex
   1400223cd:	rex pop rdx
   1400223cf:	add    BYTE PTR [rcx+0x74],dl
   1400223d2:	xor    eax,0x65726f43
   1400223d7:	cs fs ins BYTE PTR es:[rdi],dx
   1400223da:	ins    BYTE PTR es:[rdi],dx
   1400223db:	add    BYTE PTR [rbx],dl
   1400223dd:	add    BYTE PTR [rdi],bh
   1400223df:	(bad)  
   1400223e0:	xor    eax,DWORD PTR [rax+0x59]
   1400223e3:	pop    r8
   1400223e5:	push   rax
   1400223e6:	rex.RB
   1400223e7:	pop    r8
   1400223e9:	rex pop rdx
   1400223eb:	add    BYTE PTR [rcx],dl
   1400223ed:	add    BYTE PTR [rdi],bh
   1400223ef:	(bad)  
   1400223f0:	xor    al,BYTE PTR [rax+0x59]
   1400223f3:	push   r8
   1400223f5:	rex.RB
   1400223f6:	pop    r8
   1400223f8:	pop    rdi
   1400223f9:	rex.WXB
   1400223fa:	rex pop rdx
   1400223fc:	add    BYTE PTR [rax],al
   1400223fe:	in     eax,0x4
   140022400:	ins    DWORD PTR es:[rdi],dx
   140022401:	(bad)  
   140022402:	ins    BYTE PTR es:[rdi],dx
   140022403:	ins    BYTE PTR es:[rdi],dx
   140022404:	outs   dx,DWORD PTR ds:[rsi]
   140022405:	movsxd eax,DWORD PTR [rax]
   140022407:	add    BYTE PTR [rsi],al
   140022409:	add    eax,0x6c616572
   14002240e:	ins    BYTE PTR es:[rdi],dx
   14002240f:	outs   dx,DWORD PTR ds:[rsi]
   140022410:	movsxd eax,DWORD PTR [rax]
   140022412:	lock add bl,BYTE PTR [rdi+0x70]
   140022416:	jne    0x14002248a
   140022418:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   14002241c:	ins    BYTE PTR es:[rdi],dx
   14002241d:	add    BYTE PTR [rsp+rax*1+0x65657266],ch
   140022424:	add    BYTE PTR [rax],al
   140022426:	lock add al,0x6d
   140022429:	gs ins DWORD PTR es:[rdi],dx
   14002242b:	movsxd esi,DWORD PTR [rax+0x79]
   14002242e:	add    BYTE PTR [rax],al
   140022430:	xor    al,BYTE PTR [rip+0x74727473]        # 0x1b47498a9
   140022436:	outs   dx,DWORD PTR ds:[rsi]
   140022437:	add    BYTE PTR fs:[rax],al
   14002243a:	rex.WRB push r11
   14002243c:	push   rsi
   14002243d:	rex.XB push r10
   14002243f:	cmp    DWORD PTR [rax],esi
   140022441:	cs fs ins BYTE PTR es:[rdi],dx
   140022444:	ins    BYTE PTR es:[rdi],dx
   140022445:	add    dl,ah
   140022447:	add    BYTE PTR [rdi+0x61],bl
   14002244a:	ins    DWORD PTR es:[rdi],dx
   14002244b:	jae    0x1400224b4
   14002244d:	pop    rdi
   14002244e:	gs js  0x1400224ba
   140022451:	je     0x140022453
   140022453:	add    BYTE PTR [rax+0x675f5f00],dl
   140022459:	gs je  0x1400224c9
   14002245c:	(bad)  
   14002245d:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140022464:	pop    rcx
   140022465:	add    BYTE PTR [rdi+0x5f],bl
   140022468:	rex.XB pop r15
   14002246a:	jae    0x1400224dc
   14002246c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140022470:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140022477:	ins    BYTE PTR es:[rdi],dx
   140022478:	gs jb  0x14002247b
   14002247b:	add    BYTE PTR [rbp+0x0],dl
   14002247e:	pop    rdi
   14002247f:	pop    rax
   140022480:	movsxd esi,DWORD PTR [rax+0x74]
   140022483:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1460072
   14002248c:	pop    rdi
   14002248d:	gs js  0x1400224f9
   140022490:	je     0x140022492
   140022492:	stc    
   140022493:	add    BYTE PTR [rdi+0x63],bl
   140022496:	gs js  0x140022502
   140022499:	je     0x14002249b
   14002249b:	add    BYTE PTR [rcx+0x69786504],dl
   1400224a1:	je     0x1400224a3
   1400224a3:	add    BYTE PTR [rcx+0x695f5f00],dl
   1400224a9:	outs   dx,BYTE PTR ds:[rsi]
   1400224aa:	imul   esi,DWORD PTR [rbp+riz*2+0x6e],0x1ce0076
   1400224b2:	pop    rdi
   1400224b3:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400224ba:	ins    DWORD PTR es:[rdi],dx
   1400224bb:	add    bh,cl
   1400224bd:	add    DWORD PTR [rdi+0x69],ebx
   1400224c0:	outs   dx,BYTE PTR ds:[rsi]
   1400224c1:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   1400224c9:	add    BYTE PTR [rcx],cl
   1400224cb:	add    DWORD PTR [rdi+0x63],ebx
   1400224ce:	outs   dx,DWORD PTR ds:[rsi]
   1400224cf:	outs   dx,BYTE PTR ds:[rsi]
   1400224d0:	imul   sp,WORD PTR [rdi+0x74],0x7268
   1400224d6:	gs (bad) 
   1400224d8:	fs ins BYTE PTR es:[rdi],dx
   1400224da:	outs   dx,DWORD PTR ds:[rsi]
   1400224db:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400224de:	add    BYTE PTR gs:[rdi+0x735f5f00],bh
   1400224e5:	gs je  0x14002255d
   1400224e8:	jae    0x14002254f
   1400224ea:	jb     0x140022559
   1400224ec:	(bad)  
   1400224ed:	je     0x140022557
   1400224ef:	gs jb  0x140022564
   1400224f2:	add    BYTE PTR [rax],al
   1400224f4:	or     BYTE PTR [rcx],al
   1400224f6:	pop    rdi
   1400224f7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400224fa:	ins    DWORD PTR es:[rdi],dx
   1400224fb:	outs   dx,DWORD PTR ds:[rsi]
   1400224fc:	fs add BYTE PTR gs:[rax],al
   140022500:	(bad)
   140022505:	outs   dx,DWORD PTR ds:[rsi]
   140022506:	fs add BYTE PTR gs:[rax],al
   14002250a:	(bad)  
   14002250b:	add    DWORD PTR [rdi+0x65],ebx
   14002250e:	outs   dx,BYTE PTR ds:[rsi]
   14002250f:	movsxd ebp,DWORD PTR [rdi+0x64]
   140022512:	gs pop rdi
   140022514:	jo     0x140022585
   140022516:	imul   ebp,DWORD PTR [rsi+0x74],0xbc007265
   14002251d:	add    BYTE PTR [rdi+0x5f],bl
   140022520:	jae    0x140022587
   140022522:	je     0x140022583
   140022524:	(bad)  
   140022525:	jo     0x140022597
   140022527:	pop    rdi
   140022528:	je     0x1400225a3
   14002252a:	jo     0x140022591
   14002252c:	add    BYTE PTR [rax],al
   14002252e:	rex.XB add BYTE PTR [r15],dil
   140022531:	je     0x140022598
   140022533:	jb     0x1400225a2
   140022535:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14002253c:	pop    rcx
   14002253d:	pop    r8
   14002253f:	pop    rax
   140022540:	pop    rdx
   140022541:	add    BYTE PTR [rbx+rax*1+0x6c6e755f],ah
   140022548:	outs   dx,DWORD PTR ds:[rsi]
   140022549:	movsxd ebp,DWORD PTR [rbx+0x0]
   14002254c:	test   DWORD PTR [rax],eax
   14002254e:	pop    rdi
   14002254f:	pop    rdi
   140022550:	fs ins BYTE PTR es:[rdi],dx
   140022552:	ins    BYTE PTR es:[rdi],dx
   140022553:	outs   dx,DWORD PTR ds:[rsi]
   140022554:	outs   dx,BYTE PTR ds:[rsi]
   140022555:	gs js  0x1400225c1
   140022558:	je     0x14002255a
   14002255a:	cmp    eax,0x6f6c5f02
   14002255f:	movsxd ebp,DWORD PTR [rbx+0x0]
   140022562:	in     al,0x2
   140022564:	pop    rdi
   140022565:	outs   dx,DWORD PTR ds:[rsi]
   140022566:	outs   dx,BYTE PTR ds:[rsi]
   140022567:	gs js  0x1400225d3
   14002256a:	je     0x14002256c
   14002256c:	sub    eax,0x65645f01
   140022571:	movsxd ebp,DWORD PTR [rdi+0x64]
   140022574:	gs pop rdi
   140022576:	jo     0x1400225e7
   140022578:	imul   ebp,DWORD PTR [rsi+0x74],0x38007265
   14002257f:	add    BYTE PTR [rdi],bh
   140022581:	pop    rdi
   140022582:	je     0x1400225fd
   140022584:	jo     0x1400225eb
   140022586:	pop    rdi
   140022587:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   14002258e:	outs   dx,DWORD PTR ds:[rsi]
   14002258f:	jb     0x1400225f0
   140022591:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   140022598:	ins    BYTE PTR es:[rdi],dx
   140022599:	pop    rdi
   14002259a:	ins    DWORD PTR es:[rdi],dx
   14002259b:	gs je  0x140022606
   14002259e:	outs   dx,DWORD PTR ds:[rsi]
   14002259f:	fs rex je 0x14002261c
   1400225a3:	jo     0x14002260a
   1400225a5:	pop    rdi
   1400225a6:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   1400225ad:	rex.RB
   1400225ae:	rex.B
   1400225af:	pop    r8
   1400225b1:	pop    rax
   1400225b2:	pop    rdx
   1400225b3:	add    al,al
   1400225b5:	add    al,0x53
   1400225b7:	ins    BYTE PTR es:[rdi],dx
   1400225b8:	gs gs jo 0x1400225bc
   1400225bc:	mov    bl,0x4
   1400225be:	push   rbx
   1400225bf:	gs je  0x140022617
   1400225c2:	outs   dx,BYTE PTR ds:[rsi]
   1400225c3:	push   0x6c646e61
   1400225c8:	gs fs rex.RB js 0x140022630
   1400225cd:	gs jo  0x140022644
   1400225d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400225d7:	gs jb  0x1400225da
   1400225da:	test   eax,0x65755103
   1400225df:	jb     0x14002265a
   1400225e1:	push   rax
   1400225e2:	gs jb  0x14002264b
   1400225e5:	outs   dx,DWORD PTR ds:[rsi]
   1400225e6:	jb     0x140022655
   1400225e8:	(bad)  
   1400225e9:	outs   dx,BYTE PTR ds:[rsi]
   1400225ea:	movsxd esp,DWORD PTR [rbp+0x43]
   1400225ed:	outs   dx,DWORD PTR ds:[rsi]
   1400225ee:	jne    0x14002265e
   1400225f0:	je     0x140022657
   1400225f2:	jb     0x1400225f4
   1400225f4:	(bad)  
   1400225f5:	add    al,BYTE PTR [rdi+0x65]
   1400225f8:	je     0x14002264e
   1400225fa:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140022601:	je     0x140022603
   140022603:	add    bl,cl
   140022605:	add    DWORD PTR [rdi+0x65],eax
   140022608:	je     0x14002264d
   14002260a:	jne    0x14002267e
   14002260c:	jb     0x140022673
   14002260e:	outs   dx,BYTE PTR ds:[rsi]
   14002260f:	je     0x140022665
   140022611:	push   0x64616572
   140022616:	rex.WB
   140022617:	add    BYTE PTR fs:[rax],al
   14002261a:	mov    DWORD PTR [rcx],0x43746547
   140022620:	jne    0x140022694
   140022622:	jb     0x140022689
   140022624:	outs   dx,BYTE PTR ds:[rsi]
   140022625:	je     0x140022677
   140022627:	jb     0x140022698
   140022629:	movsxd esp,DWORD PTR [rbp+0x73]
   14002262c:	jae    0x140022677
   14002262e:	add    BYTE PTR fs:[rax+0x74654702],al
   140022635:	push   rbx
   140022636:	jns    0x1400226ab
   140022638:	je     0x14002269f
   14002263a:	ins    DWORD PTR es:[rdi],dx
   14002263b:	push   rsp
   14002263c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140022643:	ins    BYTE PTR es:[rdi],dx
   140022644:	gs push rsp
   140022646:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   14002264d:	rex.WRX
   14002264e:	rex.RB
   14002264f:	xor    r14,QWORD PTR [rdx]
   140022652:	cs fs ins BYTE PTR es:[rdi],dx
   140022655:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140023000 <.data>:
   140023000:	adc    BYTE PTR [rcx+rax*1+0x40],dl
   140023004:	add    DWORD PTR [rax],eax
   140023006:	add    BYTE PTR [rax],al
   140023008:	adc    BYTE PTR [rcx+rax*1+0x40],dl
   14002300c:	add    DWORD PTR [rax],eax
   14002300e:	add    BYTE PTR [rax],al
   140023010:	mov    eax,0x14001ca
	...
   14002301d:	add    BYTE PTR [rax],al
   14002301f:	add    BYTE PTR [rsi],ch
   140023021:	(bad)  
   140023022:	push   r14
   140023024:	imul   r14d,DWORD PTR [rdx+0x65],0x76697463
   14002302c:	gs jae 0x14002306f
   14002302f:	push   rcx
   140023030:	push   rcx
   140023031:	ins    DWORD PTR es:[rdi],dx
   140023032:	ins    BYTE PTR es:[rdi],dx
   140023033:	rex.WX push rbx
   140023035:	rex
   140023036:	add    BYTE PTR [rax+0x14001ca],dil
	...
   140023045:	add    BYTE PTR [rax],al
   140023047:	add    BYTE PTR [rsi],ch
   140023049:	(bad)  
   14002304a:	push   r14
   14002304c:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002304e:	fs gs rex
   140023051:	push   r11
   140023053:	push   rsp
   140023054:	rex push rcx
   140023056:	push   rcx
   140023057:	ins    DWORD PTR es:[rdi],dx
   140023058:	ins    BYTE PTR es:[rdi],dx
   140023059:	rex.WX push rbx
   14002305b:	rex
   14002305c:	add    BYTE PTR [rax],al
   14002305f:	add    BYTE PTR [rax+0x14001ca],bh
	...
   14002306d:	add    BYTE PTR [rax],al
   14002306f:	add    BYTE PTR [rsi],ch
   140023071:	(bad)  
   140023072:	push   r14
   140023074:	rex.WRB (bad) 
   140023076:	outs   dx,BYTE PTR ds:[rsi]
   140023077:	(bad)  
   140023078:	addr32 gs fs rex push rcx
   14002307d:	push   rcx
   14002307e:	ins    DWORD PTR es:[rdi],dx
   14002307f:	ins    BYTE PTR es:[rdi],dx
   140023080:	rex.WX push rbx
   140023082:	rex
   140023083:	add    BYTE PTR [rax],al
   140023086:	add    BYTE PTR [rax],al
   140023088:	mov    eax,0x14001ca
	...
   140023095:	add    BYTE PTR [rax],al
   140023097:	add    BYTE PTR [rsi],ch
   140023099:	(bad)  
   14002309a:	push   r14
   14002309c:	rex.RB js 0x14002310f
   14002309f:	jb     0x140023106
   1400230a1:	jae    0x140023116
   1400230a3:	imul   ebp,DWORD PTR [rdi+0x6e],0x65646f4e
   1400230aa:	rex
   1400230ab:	push   r11
   1400230ad:	push   rsp
   1400230ae:	rex push rcx
   1400230b0:	push   rcx
   1400230b1:	ins    DWORD PTR es:[rdi],dx
   1400230b2:	ins    BYTE PTR es:[rdi],dx
   1400230b3:	rex.WX push rbx
   1400230b5:	rex
   1400230b6:	add    BYTE PTR [rax+0x14001ca],dil
	...
   1400230c5:	add    BYTE PTR [rax],al
   1400230c7:	add    BYTE PTR [rsi],ch
   1400230c9:	(bad)  
   1400230ca:	push   r14
   1400230cc:	push   rbx
   1400230cd:	je     0x140023130
   1400230cf:	je     0x140023136
   1400230d1:	ins    DWORD PTR es:[rdi],dx
   1400230d2:	outs   dx,BYTE PTR gs:[rsi]
   1400230d4:	je     0x140023116
   1400230d6:	push   r11
   1400230d8:	push   rsp
   1400230d9:	rex push rcx
   1400230db:	push   rcx
   1400230dc:	ins    DWORD PTR es:[rdi],dx
   1400230dd:	ins    BYTE PTR es:[rdi],dx
   1400230de:	rex.WX push rbx
   1400230e0:	rex
   1400230e1:	add    BYTE PTR [rax],al
   1400230e4:	add    BYTE PTR [rax],al
   1400230e6:	add    BYTE PTR [rax],al
   1400230e8:	mov    eax,0x14001ca
	...
   1400230f5:	add    BYTE PTR [rax],al
   1400230f7:	add    BYTE PTR [rsi],ch
   1400230f9:	(bad)  
   1400230fa:	push   r14
   1400230fc:	rex.WRX
   1400230fd:	gs jae 0x140023174
   140023100:	gs fs rex.RB js 0x140023175
   140023105:	jb     0x14002316c
   140023107:	jae    0x14002317c
   140023109:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140023110:	rex push rcx
   140023112:	push   rcx
   140023113:	ins    DWORD PTR es:[rdi],dx
   140023114:	ins    BYTE PTR es:[rdi],dx
   140023115:	rex.WX push rbx
   140023117:	rex
   140023118:	add    BYTE PTR [rax],al
   14002311b:	add    BYTE PTR [rax],al
   14002311d:	add    BYTE PTR [rax],al
   14002311f:	add    BYTE PTR [rax+0x14001ca],bh
	...
   14002312d:	add    BYTE PTR [rax],al
   14002312f:	add    BYTE PTR [rsi],ch
   140023131:	(bad)  
   140023132:	push   r14
   140023134:	push   rsp
   140023135:	push   0x78457369
   14002313a:	jo     0x1400231ae
   14002313c:	gs jae 0x1400231b2
   14002313f:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140023146:	rex push rcx
   140023148:	push   rcx
   140023149:	ins    DWORD PTR es:[rdi],dx
   14002314a:	ins    BYTE PTR es:[rdi],dx
   14002314b:	rex.WX push rbx
   14002314d:	rex
   14002314e:	add    BYTE PTR [rax+0x14001ca],dil
	...
   14002315d:	add    BYTE PTR [rax],al
   14002315f:	add    BYTE PTR [rsi],ch
   140023161:	(bad)  
   140023162:	push   r14
   140023164:	rex.WB
   140023165:	fs outs dx,BYTE PTR gs:[rsi]
   140023168:	je     0x1400231d3
   14002316a:	imul   sp,WORD PTR [rbp+0x72],0x7845
   140023170:	jo     0x1400231e4
   140023172:	gs jae 0x1400231e8
   140023175:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   14002317c:	rex push rcx
   14002317e:	push   rcx
   14002317f:	ins    DWORD PTR es:[rdi],dx
   140023180:	ins    BYTE PTR es:[rdi],dx
   140023181:	rex.WX push rbx
   140023183:	rex
   140023184:	add    BYTE PTR [rax],al
   140023187:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023195:	add    BYTE PTR [rax],al
   140023197:	add    BYTE PTR [rsi],ch
   140023199:	(bad)  
   14002319a:	push   r14
   14002319c:	rex.WRX jne 0x14002320b
   14002319f:	ins    BYTE PTR es:[rdi],dx
   1400231a0:	rex.RB js 0x140023213
   1400231a3:	jb     0x14002320a
   1400231a5:	jae    0x14002321a
   1400231a7:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400231ae:	rex push rcx
   1400231b0:	push   rcx
   1400231b1:	ins    DWORD PTR es:[rdi],dx
   1400231b2:	ins    BYTE PTR es:[rdi],dx
   1400231b3:	rex.WX push rbx
   1400231b5:	rex
   1400231b6:	add    BYTE PTR [rax+0x14001ca],dil
	...
   1400231c5:	add    BYTE PTR [rax],al
   1400231c7:	add    BYTE PTR [rsi],ch
   1400231c9:	(bad)  
   1400231ca:	push   r14
   1400231cc:	push   rsp
   1400231cd:	jb     0x140023244
   1400231cf:	imul   r14,QWORD PTR gs:[rbp+riz*2+0x72],0x41406c61
   1400231d9:	push   rbx
   1400231da:	push   rsp
   1400231db:	rex push rcx
   1400231dd:	push   rcx
   1400231de:	ins    DWORD PTR es:[rdi],dx
   1400231df:	ins    BYTE PTR es:[rdi],dx
   1400231e0:	rex.WX push rbx
   1400231e2:	rex
   1400231e3:	add    BYTE PTR [rax],al
   1400231e6:	add    BYTE PTR [rax],al
   1400231e8:	mov    eax,0x14001ca
	...
   1400231f5:	add    BYTE PTR [rax],al
   1400231f7:	add    BYTE PTR [rsi],ch
   1400231f9:	(bad)  
   1400231fa:	push   r14
   1400231fc:	rex.RX (bad) 
   1400231fe:	ins    BYTE PTR es:[rdi],dx
   1400231ff:	jae    0x140023266
   140023201:	imul   r14,QWORD PTR [rbp+riz*2+0x72],0x41406c61
   14002320a:	push   rbx
   14002320b:	push   rsp
   14002320c:	rex push rcx
   14002320e:	push   rcx
   14002320f:	ins    DWORD PTR es:[rdi],dx
   140023210:	ins    BYTE PTR es:[rdi],dx
   140023211:	rex.WX push rbx
   140023213:	rex
   140023214:	add    BYTE PTR [rax],al
   140023217:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023225:	add    BYTE PTR [rax],al
   140023227:	add    BYTE PTR [rsi],ch
   140023229:	(bad)  
   14002322a:	push   r14
   14002322c:	rex.WRX jne 0x14002329c
   14002322f:	gs jb  0x14002329b
   140023232:	movsxd ecx,DWORD PTR [rcx+rbp*2+0x74]
   140023236:	gs jb  0x14002329a
   140023239:	ins    BYTE PTR es:[rdi],dx
   14002323a:	rex
   14002323b:	push   r11
   14002323d:	push   rsp
   14002323e:	rex push rcx
   140023240:	push   rcx
   140023241:	ins    DWORD PTR es:[rdi],dx
   140023242:	ins    BYTE PTR es:[rdi],dx
   140023243:	rex.WX push rbx
   140023245:	rex
   140023246:	add    BYTE PTR [rax+0x14001ca],dil
	...
   140023255:	add    BYTE PTR [rax],al
   140023257:	add    BYTE PTR [rsi],ch
   140023259:	(bad)  
   14002325a:	push   r14
   14002325c:	push   rbx
   14002325d:	je     0x1400232d1
   14002325f:	imul   ebp,DWORD PTR [rsi+0x67],0x6574694c
   140023266:	jb     0x1400232c9
   140023268:	ins    BYTE PTR es:[rdi],dx
   140023269:	rex
   14002326a:	push   r11
   14002326c:	push   rsp
   14002326d:	rex push rcx
   14002326f:	push   rcx
   140023270:	ins    DWORD PTR es:[rdi],dx
   140023271:	ins    BYTE PTR es:[rdi],dx
   140023272:	rex.WX push rbx
   140023274:	rex
   140023275:	add    BYTE PTR [rax],al
   140023278:	mov    eax,0x14001ca
	...
   140023285:	add    BYTE PTR [rax],al
   140023287:	add    BYTE PTR [rsi],ch
   140023289:	(bad)  
   14002328a:	push   r14
   14002328c:	push   rdx
   14002328d:	gs addr32 rex.RB js 0x140023302
   140023292:	imul   r14,QWORD PTR [rbp+riz*2+0x72],0x41406c61
   14002329b:	push   rbx
   14002329c:	push   rsp
   14002329d:	rex push rcx
   14002329f:	push   rcx
   1400232a0:	ins    DWORD PTR es:[rdi],dx
   1400232a1:	ins    BYTE PTR es:[rdi],dx
   1400232a2:	rex.WX push rbx
   1400232a4:	rex
   1400232a5:	add    BYTE PTR [rax],al
   1400232a8:	mov    eax,0x14001ca
	...
   1400232b5:	add    BYTE PTR [rax],al
   1400232b7:	add    BYTE PTR [rsi],ch
   1400232b9:	(bad)  
   1400232ba:	push   r14
   1400232bc:	rex.B jb 0x140023331
   1400232bf:	(bad)  
   1400232c0:	jns    0x14002330e
   1400232c2:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x41406c61
   1400232ca:	push   rbx
   1400232cb:	push   rsp
   1400232cc:	rex push rcx
   1400232ce:	push   rcx
   1400232cf:	ins    DWORD PTR es:[rdi],dx
   1400232d0:	ins    BYTE PTR es:[rdi],dx
   1400232d1:	rex.WX push rbx
   1400232d3:	rex
   1400232d4:	add    BYTE PTR [rax],al
   1400232d7:	add    BYTE PTR [rax+0x14001ca],bh
	...
   1400232e5:	add    BYTE PTR [rax],al
   1400232e7:	add    BYTE PTR [rsi],ch
   1400232e9:	(bad)  
   1400232ea:	push   r14
   1400232ec:	rex.WRXB (bad) 
   1400232ee:	push   0x65
   1400232f0:	movsxd esi,DWORD PTR [rsp+rcx*2+0x69]
   1400232f4:	je     0x14002335b
   1400232f6:	jb     0x140023359
   1400232f8:	ins    BYTE PTR es:[rdi],dx
   1400232f9:	rex
   1400232fa:	push   r11
   1400232fc:	push   rsp
   1400232fd:	rex push rcx
   1400232ff:	push   rcx
   140023300:	ins    DWORD PTR es:[rdi],dx
   140023301:	ins    BYTE PTR es:[rdi],dx
   140023302:	rex.WX push rbx
   140023304:	rex
   140023305:	add    BYTE PTR [rax],al
   140023308:	mov    eax,0x14001ca
	...
   140023315:	add    BYTE PTR [rax],al
   140023317:	add    BYTE PTR [rsi],ch
   140023319:	(bad)  
   14002331a:	push   r14
   14002331c:	rex.RB ins BYTE PTR es:[rdi],dx
   14002331e:	imul   esi,DWORD PTR [rbx+0x69],0x41406e6f
   140023325:	push   rbx
   140023326:	push   rsp
   140023327:	rex push rcx
   140023329:	push   rcx
   14002332a:	ins    DWORD PTR es:[rdi],dx
   14002332b:	ins    BYTE PTR es:[rdi],dx
   14002332c:	rex.WX push rbx
   14002332e:	rex
   14002332f:	add    BYTE PTR [rax],al
   140023332:	add    BYTE PTR [rax],al
   140023334:	add    BYTE PTR [rax],al
   140023336:	add    BYTE PTR [rax],al
   140023338:	mov    eax,0x14001ca
	...
   140023345:	add    BYTE PTR [rax],al
   140023347:	add    BYTE PTR [rsi],ch
   140023349:	(bad)  
   14002334a:	push   r14
   14002334c:	rex.RB ins BYTE PTR es:[rdi],dx
   14002334e:	gs ins DWORD PTR es:[rdi],dx
   140023350:	outs   dx,BYTE PTR gs:[rsi]
   140023352:	je     0x1400233a0
   140023354:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   14002335b:	rex push rcx
   14002335d:	push   rcx
   14002335e:	ins    DWORD PTR es:[rdi],dx
   14002335f:	ins    BYTE PTR es:[rdi],dx
   140023360:	rex.WX push rbx
   140023362:	rex
   140023363:	add    BYTE PTR [rax],al
   140023366:	add    BYTE PTR [rax],al
   140023368:	mov    eax,0x14001ca
	...
   140023375:	add    BYTE PTR [rax],al
   140023377:	add    BYTE PTR [rsi],ch
   140023379:	(bad)  
   14002337a:	push   r14
   14002337c:	push   rax
   14002337d:	jb     0x1400233ee
   14002337f:	jo     0x1400233e6
   140023381:	jb     0x1400233f7
   140023383:	jns    0x1400233d3
   140023385:	(bad)  
   140023386:	ins    DWORD PTR es:[rdi],dx
   140023387:	gs rex
   140023389:	push   r11
   14002338b:	push   rsp
   14002338c:	rex push rcx
   14002338e:	push   rcx
   14002338f:	ins    DWORD PTR es:[rdi],dx
   140023390:	ins    BYTE PTR es:[rdi],dx
   140023391:	rex.WX push rbx
   140023393:	rex
   140023394:	add    BYTE PTR [rax],al
   140023397:	add    BYTE PTR [rax+0x14001ca],bh
	...
   1400233a5:	add    BYTE PTR [rax],al
   1400233a7:	add    BYTE PTR [rsi],ch
   1400233a9:	(bad)  
   1400233aa:	push   r14
   1400233ac:	push   rax
   1400233ad:	jb     0x14002341e
   1400233af:	jo     0x140023416
   1400233b1:	jb     0x140023427
   1400233b3:	jns    0x1400233f6
   1400233b5:	jae    0x14002342a
   1400233b7:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   1400233be:	rex
   1400233bf:	push   r11
   1400233c1:	push   rsp
   1400233c2:	rex push rcx
   1400233c4:	push   rcx
   1400233c5:	ins    DWORD PTR es:[rdi],dx
   1400233c6:	ins    BYTE PTR es:[rdi],dx
   1400233c7:	rex.WX push rbx
   1400233c9:	rex
   1400233ca:	add    BYTE PTR [rax],al
   1400233cd:	add    BYTE PTR [rax],al
   1400233cf:	add    BYTE PTR [rax+0x14001ca],bh
	...
   1400233dd:	add    BYTE PTR [rax],al
   1400233df:	add    BYTE PTR [rsi],ch
   1400233e1:	(bad)  
   1400233e2:	push   r14
   1400233e4:	push   rax
   1400233e5:	jb     0x140023456
   1400233e7:	jo     0x14002344e
   1400233e9:	jb     0x14002345f
   1400233eb:	jns    0x14002342e
   1400233ed:	jae    0x140023462
   1400233ef:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   1400233f6:	imul   r14,QWORD PTR [rbx+0x74],0x54534140
   1400233fe:	rex push rcx
   140023400:	push   rcx
   140023401:	ins    DWORD PTR es:[rdi],dx
   140023402:	ins    BYTE PTR es:[rdi],dx
   140023403:	rex.WX push rbx
   140023405:	rex
   140023406:	add    BYTE PTR [rax+0x14001ca],dil
	...
   140023415:	add    BYTE PTR [rax],al
   140023417:	add    BYTE PTR [rsi],ch
   140023419:	(bad)  
   14002341a:	push   r14
   14002341c:	push   rax
   14002341d:	jb     0x14002348e
   14002341f:	jo     0x140023486
   140023421:	jb     0x140023497
   140023423:	jns    0x140023473
   140023425:	(bad)  
   140023426:	ins    DWORD PTR es:[rdi],dx
   140023427:	rex.B outs dx,BYTE PTR gs:[rsi]
   14002342a:	fs push rsi
   14002342c:	(bad)  
   14002342d:	ins    BYTE PTR es:[rdi],dx
   14002342e:	jne    0x140023495
   140023430:	rex
   140023431:	push   r11
   140023433:	push   rsp
   140023434:	rex push rcx
   140023436:	push   rcx
   140023437:	ins    DWORD PTR es:[rdi],dx
   140023438:	ins    BYTE PTR es:[rdi],dx
   140023439:	rex.WX push rbx
   14002343b:	rex
   14002343c:	add    BYTE PTR [rax],al
   14002343f:	add    BYTE PTR [rax+0x14001ca],bh
	...
   14002344d:	add    BYTE PTR [rax],al
   14002344f:	add    BYTE PTR [rsi],ch
   140023451:	(bad)  
   140023452:	push   r14
   140023454:	push   rax
   140023455:	jb     0x1400234c6
   140023457:	jo     0x1400234be
   140023459:	jb     0x1400234cf
   14002345b:	jns    0x1400234a4
   14002345d:	gs je  0x1400234d4
   140023460:	gs jb  0x1400234b6
   140023463:	gs je  0x1400234da
   140023466:	gs jb  0x1400234a9
   140023469:	push   r11
   14002346b:	push   rsp
   14002346c:	rex push rcx
   14002346e:	push   rcx
   14002346f:	ins    DWORD PTR es:[rdi],dx
   140023470:	ins    BYTE PTR es:[rdi],dx
   140023471:	rex.WX push rbx
   140023473:	rex
   140023474:	add    BYTE PTR [rax],al
   140023477:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023485:	add    BYTE PTR [rax],al
   140023487:	add    BYTE PTR [rsi],ch
   140023489:	(bad)  
   14002348a:	push   r14
   14002348c:	rex.WB
   14002348d:	fs outs dx,BYTE PTR gs:[rsi]
   140023490:	je     0x1400234fb
   140023492:	imul   sp,WORD PTR [rbp+0x72],0x7250
   140023498:	outs   dx,DWORD PTR ds:[rsi]
   140023499:	jo     0x140023500
   14002349b:	jb     0x140023511
   14002349d:	jns    0x1400234ed
   14002349f:	(bad)  
   1400234a0:	ins    DWORD PTR es:[rdi],dx
   1400234a1:	gs rex
   1400234a3:	push   r11
   1400234a5:	push   rsp
   1400234a6:	rex push rcx
   1400234a8:	push   rcx
   1400234a9:	ins    DWORD PTR es:[rdi],dx
   1400234aa:	ins    BYTE PTR es:[rdi],dx
   1400234ab:	rex.WX push rbx
   1400234ad:	rex
   1400234ae:	add    BYTE PTR [rax+0x14001ca],dil
	...
   1400234bd:	add    BYTE PTR [rax],al
   1400234bf:	add    BYTE PTR [rsi],ch
   1400234c1:	(bad)  
   1400234c2:	push   r14
   1400234c4:	push   rbx
   1400234c5:	je     0x140023539
   1400234c7:	imul   ebp,DWORD PTR [rsi+0x67],0x6574694c
   1400234ce:	jb     0x140023531
   1400234d0:	ins    BYTE PTR es:[rdi],dx
   1400234d1:	push   rax
   1400234d2:	jb     0x140023543
   1400234d4:	jo     0x14002353b
   1400234d6:	jb     0x14002354c
   1400234d8:	jns    0x140023528
   1400234da:	(bad)  
   1400234db:	ins    DWORD PTR es:[rdi],dx
   1400234dc:	gs rex
   1400234de:	push   r11
   1400234e0:	push   rsp
   1400234e1:	rex push rcx
   1400234e3:	push   rcx
   1400234e4:	ins    DWORD PTR es:[rdi],dx
   1400234e5:	ins    BYTE PTR es:[rdi],dx
   1400234e6:	rex.WX push rbx
   1400234e8:	rex
   1400234e9:	add    BYTE PTR [rax],al
   1400234ec:	add    BYTE PTR [rax],al
   1400234ee:	add    BYTE PTR [rax],al
   1400234f0:	mov    eax,0x14001ca
	...
   1400234fd:	add    BYTE PTR [rax],al
   1400234ff:	add    BYTE PTR [rsi],ch
   140023501:	(bad)  
   140023502:	push   r14
   140023504:	rex.WRX jne 0x140023574
   140023507:	gs jb  0x140023573
   14002350a:	movsxd ecx,DWORD PTR [rcx+rbp*2+0x74]
   14002350e:	gs jb  0x140023572
   140023511:	ins    BYTE PTR es:[rdi],dx
   140023512:	push   rax
   140023513:	jb     0x140023584
   140023515:	jo     0x14002357c
   140023517:	jb     0x14002358d
   140023519:	jns    0x140023569
   14002351b:	(bad)  
   14002351c:	ins    DWORD PTR es:[rdi],dx
   14002351d:	gs rex
   14002351f:	push   r11
   140023521:	push   rsp
   140023522:	rex push rcx
   140023524:	push   rcx
   140023525:	ins    DWORD PTR es:[rdi],dx
   140023526:	ins    BYTE PTR es:[rdi],dx
   140023527:	rex.WX push rbx
   140023529:	rex
   14002352a:	add    BYTE PTR [rax],al
   14002352d:	add    BYTE PTR [rax],al
   14002352f:	add    BYTE PTR [rax+0x14001ca],bh
	...
   14002353d:	add    BYTE PTR [rax],al
   14002353f:	add    BYTE PTR [rsi],ch
   140023541:	(bad)  
   140023542:	push   r14
   140023544:	rex.B jb 0x1400235b9
   140023547:	(bad)  
   140023548:	jns    0x140023597
   14002354a:	gs ins DWORD PTR es:[rdi],dx
   14002354c:	(bad)  
   14002354d:	gs jb  0x140023595
   140023550:	js     0x1400235c2
   140023552:	jb     0x1400235b9
   140023554:	jae    0x1400235c9
   140023556:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   14002355d:	rex push rcx
   14002355f:	push   rcx
   140023560:	ins    DWORD PTR es:[rdi],dx
   140023561:	ins    BYTE PTR es:[rdi],dx
   140023562:	rex.WX push rbx
   140023564:	rex
   140023565:	add    BYTE PTR [rax],al
   140023568:	mov    eax,0x14001ca
	...
   140023575:	add    BYTE PTR [rax],al
   140023577:	add    BYTE PTR [rsi],ch
   140023579:	(bad)  
   14002357a:	push   r14
   14002357c:	rex.RX imul r12d,DWORD PTR [rbp+0x6c],0x6d654d64
   140023584:	(bad)  
   140023585:	gs jb  0x1400235cd
   140023588:	js     0x1400235fa
   14002358a:	jb     0x1400235f1
   14002358c:	jae    0x140023601
   14002358e:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140023595:	rex push rcx
   140023597:	push   rcx
   140023598:	ins    DWORD PTR es:[rdi],dx
   140023599:	ins    BYTE PTR es:[rdi],dx
   14002359a:	rex.WX push rbx
   14002359c:	rex
   14002359d:	add    BYTE PTR [rax],al
   1400235a0:	mov    eax,0x14001ca
	...
   1400235ad:	add    BYTE PTR [rax],al
   1400235af:	add    BYTE PTR [rsi],ch
   1400235b1:	(bad)  
   1400235b2:	push   r14
   1400235b4:	rex.WRX
   1400235b5:	gs ja  0x140023605
   1400235b8:	gs ins DWORD PTR es:[rdi],dx
   1400235ba:	(bad)  
   1400235bb:	gs jb  0x140023603
   1400235be:	js     0x140023630
   1400235c0:	jb     0x140023627
   1400235c2:	jae    0x140023637
   1400235c4:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400235cb:	rex push rcx
   1400235cd:	push   rcx
   1400235ce:	ins    DWORD PTR es:[rdi],dx
   1400235cf:	ins    BYTE PTR es:[rdi],dx
   1400235d0:	rex.WX push rbx
   1400235d2:	rex
   1400235d3:	add    BYTE PTR [rax],al
   1400235d6:	add    BYTE PTR [rax],al
   1400235d8:	mov    eax,0x14001ca
	...
   1400235e5:	add    BYTE PTR [rax],al
   1400235e7:	add    BYTE PTR [rsi],ch
   1400235e9:	(bad)  
   1400235ea:	push   r14
   1400235ec:	rex.WRX
   1400235ed:	gs ja  0x140023635
   1400235f0:	js     0x140023662
   1400235f2:	jb     0x140023659
   1400235f4:	jae    0x140023669
   1400235f6:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400235fd:	rex push rcx
   1400235ff:	push   rcx
   140023600:	ins    DWORD PTR es:[rdi],dx
   140023601:	ins    BYTE PTR es:[rdi],dx
   140023602:	rex.WX push rbx
   140023604:	rex
   140023605:	add    BYTE PTR [rax],al
   140023608:	mov    eax,0x14001ca
	...
   140023615:	add    BYTE PTR [rax],al
   140023617:	add    BYTE PTR [rsi],ch
   140023619:	(bad)  
   14002361a:	push   r14
   14002361c:	rex.XB (bad) 
   14002361e:	ins    BYTE PTR es:[rdi],dx
   14002361f:	ins    BYTE PTR es:[rdi],dx
   140023620:	rex.RB js 0x140023693
   140023623:	jb     0x14002368a
   140023625:	jae    0x14002369a
   140023627:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   14002362e:	rex push rcx
   140023630:	push   rcx
   140023631:	ins    DWORD PTR es:[rdi],dx
   140023632:	ins    BYTE PTR es:[rdi],dx
   140023633:	rex.WX push rbx
   140023635:	rex
   140023636:	add    BYTE PTR [rax+0x14001ca],dil
	...
   140023645:	add    BYTE PTR [rax],al
   140023647:	add    BYTE PTR [rsi],ch
   140023649:	(bad)  
   14002364a:	push   r14
   14002364c:	rex.B jb 0x1400236b6
   14002364f:	jne    0x1400236be
   140023651:	outs   dx,BYTE PTR gs:[rsi]
   140023653:	je     0x1400236a1
   140023655:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   14002365c:	rex push rcx
   14002365e:	push   rcx
   14002365f:	ins    DWORD PTR es:[rdi],dx
   140023660:	ins    BYTE PTR es:[rdi],dx
   140023661:	rex.WX push rbx
   140023663:	rex
   140023664:	add    BYTE PTR [rax],al
   140023667:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023675:	add    BYTE PTR [rax],al
   140023677:	add    BYTE PTR [rsi],ch
   140023679:	(bad)  
   14002367a:	push   r14
   14002367c:	push   rax
   14002367d:	outs   dx,DWORD PTR ds:[rsi]
   14002367e:	jae    0x1400236f4
   140023680:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140023682:	movsxd esi,DWORD PTR [rdx+0x65]
   140023685:	ins    DWORD PTR es:[rdi],dx
   140023686:	outs   dx,BYTE PTR gs:[rsi]
   140023688:	je     0x1400236cf
   14002368a:	js     0x1400236fc
   14002368c:	jb     0x1400236f3
   14002368e:	jae    0x140023703
   140023690:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140023697:	rex push rcx
   140023699:	push   rcx
   14002369a:	ins    DWORD PTR es:[rdi],dx
   14002369b:	ins    BYTE PTR es:[rdi],dx
   14002369c:	rex.WX push rbx
   14002369e:	rex
   14002369f:	add    BYTE PTR [rax],al
   1400236a2:	add    BYTE PTR [rax],al
   1400236a4:	add    BYTE PTR [rax],al
   1400236a6:	add    BYTE PTR [rax],al
   1400236a8:	mov    eax,0x14001ca
	...
   1400236b5:	add    BYTE PTR [rax],al
   1400236b7:	add    BYTE PTR [rsi],ch
   1400236b9:	(bad)  
   1400236ba:	push   r14
   1400236bc:	push   rax
   1400236bd:	outs   dx,DWORD PTR ds:[rsi]
   1400236be:	jae    0x140023734
   1400236c0:	rex.R
   1400236c1:	movsxd esi,DWORD PTR gs:[rdx+0x65]
   1400236c5:	ins    DWORD PTR es:[rdi],dx
   1400236c6:	outs   dx,BYTE PTR gs:[rsi]
   1400236c8:	je     0x14002370f
   1400236ca:	js     0x14002373c
   1400236cc:	jb     0x140023733
   1400236ce:	jae    0x140023743
   1400236d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400236d7:	rex push rcx
   1400236d9:	push   rcx
   1400236da:	ins    DWORD PTR es:[rdi],dx
   1400236db:	ins    BYTE PTR es:[rdi],dx
   1400236dc:	rex.WX push rbx
   1400236de:	rex
   1400236df:	add    BYTE PTR [rax],al
   1400236e2:	add    BYTE PTR [rax],al
   1400236e4:	add    BYTE PTR [rax],al
   1400236e6:	add    BYTE PTR [rax],al
   1400236e8:	mov    eax,0x14001ca
	...
   1400236f5:	add    BYTE PTR [rax],al
   1400236f7:	add    BYTE PTR [rsi],ch
   1400236f9:	(bad)  
   1400236fa:	push   r14
   1400236fc:	rex.R
   1400236fd:	gs ins BYTE PTR es:[rdi],dx
   1400236ff:	gs je  0x140023767
   140023702:	rex.RB js 0x140023775
   140023705:	jb     0x14002376c
   140023707:	jae    0x14002377c
   140023709:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140023710:	rex push rcx
   140023712:	push   rcx
   140023713:	ins    DWORD PTR es:[rdi],dx
   140023714:	ins    BYTE PTR es:[rdi],dx
   140023715:	rex.WX push rbx
   140023717:	rex
   140023718:	add    BYTE PTR [rax],al
   14002371b:	add    BYTE PTR [rax],al
   14002371d:	add    BYTE PTR [rax],al
   14002371f:	add    BYTE PTR [rax+0x14001ca],bh
	...
   14002372d:	add    BYTE PTR [rax],al
   14002372f:	add    BYTE PTR [rsi],ch
   140023731:	(bad)  
   140023732:	push   r14
   140023734:	push   rsi
   140023735:	outs   dx,DWORD PTR ds:[rsi]
   140023736:	imul   esp,DWORD PTR [rbp+rax*2+0x78],0x73657270
   14002373e:	jae    0x1400237a9
   140023740:	outs   dx,DWORD PTR ds:[rsi]
   140023741:	outs   dx,BYTE PTR ds:[rsi]
   140023742:	rex
   140023743:	push   r11
   140023745:	push   rsp
   140023746:	rex push rcx
   140023748:	push   rcx
   140023749:	ins    DWORD PTR es:[rdi],dx
   14002374a:	ins    BYTE PTR es:[rdi],dx
   14002374b:	rex.WX push rbx
   14002374d:	rex
   14002374e:	add    BYTE PTR [rax+0x14001ca],dil
	...
   14002375d:	add    BYTE PTR [rax],al
   14002375f:	add    BYTE PTR [rsi],ch
   140023761:	(bad)  
   140023762:	push   r14
   140023764:	push   rsp
   140023765:	jns    0x1400237d7
   140023767:	gs rex.WRXB
   140023769:	data16 rex.RB js 0x1400237dd
   14002376d:	jb     0x1400237d4
   14002376f:	jae    0x1400237e4
   140023771:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140023778:	rex push rcx
   14002377a:	push   rcx
   14002377b:	ins    DWORD PTR es:[rdi],dx
   14002377c:	ins    BYTE PTR es:[rdi],dx
   14002377d:	rex.WX push rbx
   14002377f:	rex
   140023780:	add    BYTE PTR [rax],al
   140023783:	add    BYTE PTR [rax],al
   140023785:	add    BYTE PTR [rax],al
   140023787:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023795:	add    BYTE PTR [rax],al
   140023797:	add    BYTE PTR [rsi],ch
   140023799:	(bad)  
   14002379a:	push   r14
   14002379c:	push   rax
   14002379d:	jb     0x140023804
   14002379f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400237a1:	movsxd esi,DWORD PTR [rdx+0x65]
   1400237a4:	ins    DWORD PTR es:[rdi],dx
   1400237a5:	outs   dx,BYTE PTR gs:[rsi]
   1400237a7:	je     0x1400237ee
   1400237a9:	js     0x14002381b
   1400237ab:	jb     0x140023812
   1400237ad:	jae    0x140023822
   1400237af:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400237b6:	rex push rcx
   1400237b8:	push   rcx
   1400237b9:	ins    DWORD PTR es:[rdi],dx
   1400237ba:	ins    BYTE PTR es:[rdi],dx
   1400237bb:	rex.WX push rbx
   1400237bd:	rex
   1400237be:	add    BYTE PTR [rax+0x14001ca],dil
	...
   1400237cd:	add    BYTE PTR [rax],al
   1400237cf:	add    BYTE PTR [rsi],ch
   1400237d1:	(bad)  
   1400237d2:	push   r14
   1400237d4:	push   rax
   1400237d5:	jb     0x14002383c
   1400237d7:	rex.R
   1400237d8:	movsxd esi,DWORD PTR gs:[rdx+0x65]
   1400237dc:	ins    DWORD PTR es:[rdi],dx
   1400237dd:	outs   dx,BYTE PTR gs:[rsi]
   1400237df:	je     0x140023826
   1400237e1:	js     0x140023853
   1400237e3:	jb     0x14002384a
   1400237e5:	jae    0x14002385a
   1400237e7:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400237ee:	rex push rcx
   1400237f0:	push   rcx
   1400237f1:	ins    DWORD PTR es:[rdi],dx
   1400237f2:	ins    BYTE PTR es:[rdi],dx
   1400237f3:	rex.WX push rbx
   1400237f5:	rex
   1400237f6:	add    BYTE PTR [rax+0x14001ca],dil
	...
   140023805:	add    BYTE PTR [rax],al
   140023807:	add    BYTE PTR [rsi],ch
   140023809:	(bad)  
   14002380a:	push   r14
   14002380c:	push   rbp
   14002380d:	outs   dx,BYTE PTR ds:[rsi]
   14002380e:	(bad)  
   14002380f:	jb     0x14002388a
   140023811:	push   rax
   140023812:	ins    BYTE PTR es:[rdi],dx
   140023813:	jne    0x140023888
   140023815:	rex.RB js 0x140023888
   140023818:	jb     0x14002387f
   14002381a:	jae    0x14002388f
   14002381c:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140023823:	rex push rcx
   140023825:	push   rcx
   140023826:	ins    DWORD PTR es:[rdi],dx
   140023827:	ins    BYTE PTR es:[rdi],dx
   140023828:	rex.WX push rbx
   14002382a:	rex
   14002382b:	add    BYTE PTR [rax],al
   14002382e:	add    BYTE PTR [rax],al
   140023830:	mov    eax,0x14001ca
	...
   14002383d:	add    BYTE PTR [rax],al
   14002383f:	add    BYTE PTR [rsi],ch
   140023841:	(bad)  
   140023842:	push   r14
   140023844:	push   rbp
   140023845:	outs   dx,BYTE PTR ds:[rsi]
   140023846:	(bad)  
   140023847:	jb     0x1400238c2
   140023849:	imul   r13,QWORD PTR [r14+0x75],0x70784573
   140023851:	jb     0x1400238b8
   140023853:	jae    0x1400238c8
   140023855:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   14002385c:	rex push rcx
   14002385e:	push   rcx
   14002385f:	ins    DWORD PTR es:[rdi],dx
   140023860:	ins    BYTE PTR es:[rdi],dx
   140023861:	rex.WX push rbx
   140023863:	rex
   140023864:	add    BYTE PTR [rax],al
   140023867:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023875:	add    BYTE PTR [rax],al
   140023877:	add    BYTE PTR [rsi],ch
   140023879:	(bad)  
   14002387a:	push   r14
   14002387c:	push   rsp
   14002387d:	imul   ebp,DWORD PTR [rsp+riz*2+0x65],0x72707845
   140023885:	gs jae 0x1400238fb
   140023888:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   14002388f:	rex push rcx
   140023891:	push   rcx
   140023892:	ins    DWORD PTR es:[rdi],dx
   140023893:	ins    BYTE PTR es:[rdi],dx
   140023894:	rex.WX push rbx
   140023896:	rex
   140023897:	add    BYTE PTR [rax],al
   14002389a:	add    BYTE PTR [rax],al
   14002389c:	add    BYTE PTR [rax],al
   14002389e:	add    BYTE PTR [rax],al
   1400238a0:	mov    eax,0x14001ca
	...
   1400238ad:	add    BYTE PTR [rax],al
   1400238af:	add    BYTE PTR [rsi],ch
   1400238b1:	(bad)  
   1400238b2:	push   r14
   1400238b4:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400238b6:	je     0x1400238fd
   1400238b8:	js     0x14002392a
   1400238ba:	jb     0x140023921
   1400238bc:	jae    0x140023931
   1400238be:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400238c5:	rex push rcx
   1400238c7:	push   rcx
   1400238c8:	ins    DWORD PTR es:[rdi],dx
   1400238c9:	ins    BYTE PTR es:[rdi],dx
   1400238ca:	rex.WX push rbx
   1400238cc:	rex
   1400238cd:	add    BYTE PTR [rax],al
   1400238d0:	mov    eax,0x14001ca
	...
   1400238dd:	add    BYTE PTR [rax],al
   1400238df:	add    BYTE PTR [rsi],ch
   1400238e1:	(bad)  
   1400238e2:	push   r14
   1400238e4:	rex.X imul ebp,DWORD PTR [rsi+0x61],0x78457972
   1400238ec:	jo     0x140023960
   1400238ee:	gs jae 0x140023964
   1400238f1:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400238f8:	rex push rcx
   1400238fa:	push   rcx
   1400238fb:	ins    DWORD PTR es:[rdi],dx
   1400238fc:	ins    BYTE PTR es:[rdi],dx
   1400238fd:	rex.WX push rbx
   1400238ff:	rex
   140023900:	add    BYTE PTR [rax],al
   140023903:	add    BYTE PTR [rax],al
   140023905:	add    BYTE PTR [rax],al
   140023907:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023915:	add    BYTE PTR [rax],al
   140023917:	add    BYTE PTR [rsi],ch
   140023919:	(bad)  
   14002391a:	push   r14
   14002391c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002391e:	outs   dx,BYTE PTR ds:[rsi]
   14002391f:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x456c616e
   140023928:	js     0x14002399a
   14002392a:	jb     0x140023991
   14002392c:	jae    0x1400239a1
   14002392e:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140023935:	rex push rcx
   140023937:	push   rcx
   140023938:	ins    DWORD PTR es:[rdi],dx
   140023939:	ins    BYTE PTR es:[rdi],dx
   14002393a:	rex.WX push rbx
   14002393c:	rex
   14002393d:	add    BYTE PTR [rax],al
   140023940:	mov    eax,0x14001ca
	...
   14002394d:	add    BYTE PTR [rax],al
   14002394f:	add    BYTE PTR [rsi],ch
   140023951:	(bad)  
   140023952:	push   r14
   140023954:	rex.RB js 0x1400239c7
   140023957:	jb     0x1400239be
   140023959:	jae    0x1400239ce
   14002395b:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140023962:	rex push rcx
   140023964:	push   rcx
   140023965:	ins    DWORD PTR es:[rdi],dx
   140023966:	ins    BYTE PTR es:[rdi],dx
   140023967:	rex.WX push rbx
   140023969:	rex
   14002396a:	add    BYTE PTR [rax],al
   14002396d:	add    BYTE PTR [rax],al
   14002396f:	add    BYTE PTR [rax+0x14001ca],bh
	...
   14002397d:	add    BYTE PTR [rax],al
   14002397f:	add    BYTE PTR [rsi],ch
   140023981:	(bad)  
   140023982:	push   r14
   140023984:	rex.X ins BYTE PTR es:[rdi],dx
   140023986:	outs   dx,DWORD PTR ds:[rsi]
   140023987:	movsxd ebp,DWORD PTR [rbx+0x40]
   14002398a:	push   r11
   14002398c:	push   rsp
   14002398d:	rex push rcx
   14002398f:	push   rcx
   140023990:	ins    DWORD PTR es:[rdi],dx
   140023991:	ins    BYTE PTR es:[rdi],dx
   140023992:	rex.WX push rbx
   140023994:	rex
   140023995:	add    BYTE PTR [rax],al
   140023998:	mov    eax,0x14001ca
	...
   1400239a5:	add    BYTE PTR [rax],al
   1400239a7:	add    BYTE PTR [rsi],ch
   1400239a9:	(bad)  
   1400239aa:	push   r14
   1400239ac:	push   rbx
   1400239ad:	je     0x140023a10
   1400239af:	je     0x140023a16
   1400239b1:	ins    DWORD PTR es:[rdi],dx
   1400239b2:	outs   dx,BYTE PTR gs:[rsi]
   1400239b4:	je     0x140023a02
   1400239b6:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   1400239bd:	rex push rcx
   1400239bf:	push   rcx
   1400239c0:	ins    DWORD PTR es:[rdi],dx
   1400239c1:	ins    BYTE PTR es:[rdi],dx
   1400239c2:	rex.WX push rbx
   1400239c4:	rex
   1400239c5:	add    BYTE PTR [rax],al
   1400239c8:	mov    eax,0x14001ca
	...
   1400239d5:	add    BYTE PTR [rax],al
   1400239d7:	add    BYTE PTR [rsi],ch
   1400239d9:	(bad)  
   1400239da:	push   r14
   1400239dc:	push   rsi
   1400239dd:	(bad)  
   1400239de:	jb     0x140023a49
   1400239e0:	(bad)  
   1400239e1:	(bad)  
   1400239e2:	ins    BYTE PTR es:[rdi],dx
   1400239e3:	gs push rbx
   1400239e5:	je     0x140023a48
   1400239e7:	je     0x140023a4e
   1400239e9:	ins    DWORD PTR es:[rdi],dx
   1400239ea:	outs   dx,BYTE PTR gs:[rsi]
   1400239ec:	je     0x140023a2e
   1400239ee:	push   r11
   1400239f0:	push   rsp
   1400239f1:	rex push rcx
   1400239f3:	push   rcx
   1400239f4:	ins    DWORD PTR es:[rdi],dx
   1400239f5:	ins    BYTE PTR es:[rdi],dx
   1400239f6:	rex.WX push rbx
   1400239f8:	rex
   1400239f9:	add    BYTE PTR [rax],al
   1400239fc:	add    BYTE PTR [rax],al
   1400239fe:	add    BYTE PTR [rax],al
   140023a00:	mov    eax,0x14001ca
	...
   140023a0d:	add    BYTE PTR [rax],al
   140023a0f:	add    BYTE PTR [rsi],ch
   140023a11:	(bad)  
   140023a12:	push   r14
   140023a14:	push   rsi
   140023a15:	(bad)  
   140023a16:	jb     0x140023a81
   140023a18:	(bad)  
   140023a19:	(bad)  
   140023a1a:	ins    BYTE PTR es:[rdi],dx
   140023a1b:	gs rex.R
   140023a1d:	movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
   140023a22:	(bad)  
   140023a23:	je     0x140023a8e
   140023a25:	outs   dx,DWORD PTR ds:[rsi]
   140023a26:	outs   dx,BYTE PTR ds:[rsi]
   140023a27:	rex
   140023a28:	push   r11
   140023a2a:	push   rsp
   140023a2b:	rex push rcx
   140023a2d:	push   rcx
   140023a2e:	ins    DWORD PTR es:[rdi],dx
   140023a2f:	ins    BYTE PTR es:[rdi],dx
   140023a30:	rex.WX push rbx
   140023a32:	rex
   140023a33:	add    BYTE PTR [rax],al
   140023a36:	add    BYTE PTR [rax],al
   140023a38:	mov    eax,0x14001ca
	...
   140023a45:	add    BYTE PTR [rax],al
   140023a47:	add    BYTE PTR [rsi],ch
   140023a49:	(bad)  
   140023a4a:	push   r14
   140023a4c:	push   rsi
   140023a4d:	(bad)  
   140023a4e:	jb     0x140023ab9
   140023a50:	(bad)  
   140023a51:	(bad)  
   140023a52:	ins    BYTE PTR es:[rdi],dx
   140023a53:	gs rex.R
   140023a55:	movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
   140023a5a:	(bad)  
   140023a5b:	je     0x140023ac6
   140023a5d:	outs   dx,DWORD PTR ds:[rsi]
   140023a5e:	outs   dx,BYTE PTR ds:[rsi]
   140023a5f:	imul   r14,QWORD PTR [rbx+0x74],0x54534140
   140023a67:	rex push rcx
   140023a69:	push   rcx
   140023a6a:	ins    DWORD PTR es:[rdi],dx
   140023a6b:	ins    BYTE PTR es:[rdi],dx
   140023a6c:	rex.WX push rbx
   140023a6e:	rex
   140023a6f:	add    BYTE PTR [rax],al
   140023a72:	add    BYTE PTR [rax],al
   140023a74:	add    BYTE PTR [rax],al
   140023a76:	add    BYTE PTR [rax],al
   140023a78:	mov    eax,0x14001ca
	...
   140023a85:	add    BYTE PTR [rax],al
   140023a87:	add    BYTE PTR [rsi],ch
   140023a89:	(bad)  
   140023a8a:	push   r14
   140023a8c:	rex.RB ins DWORD PTR es:[rdi],dx
   140023a8e:	jo     0x140023b04
   140023a90:	jns    0x140023ae5
   140023a92:	je     0x140023af5
   140023a94:	je     0x140023afb
   140023a96:	ins    DWORD PTR es:[rdi],dx
   140023a97:	outs   dx,BYTE PTR gs:[rsi]
   140023a99:	je     0x140023adb
   140023a9b:	push   r11
   140023a9d:	push   rsp
   140023a9e:	rex push rcx
   140023aa0:	push   rcx
   140023aa1:	ins    DWORD PTR es:[rdi],dx
   140023aa2:	ins    BYTE PTR es:[rdi],dx
   140023aa3:	rex.WX push rbx
   140023aa5:	rex
   140023aa6:	add    BYTE PTR [rax+0x14001ca],dil
	...
   140023ab5:	add    BYTE PTR [rax],al
   140023ab7:	add    BYTE PTR [rsi],ch
   140023ab9:	(bad)  
   140023aba:	push   r14
   140023abc:	rex.RB js 0x140023b2f
   140023abf:	jb     0x140023b26
   140023ac1:	jae    0x140023b36
   140023ac3:	imul   ebp,DWORD PTR [rdi+0x6e],0x74617453
   140023aca:	gs ins DWORD PTR es:[rdi],dx
   140023acc:	outs   dx,BYTE PTR gs:[rsi]
   140023ace:	je     0x140023b10
   140023ad0:	push   r11
   140023ad2:	push   rsp
   140023ad3:	rex push rcx
   140023ad5:	push   rcx
   140023ad6:	ins    DWORD PTR es:[rdi],dx
   140023ad7:	ins    BYTE PTR es:[rdi],dx
   140023ad8:	rex.WX push rbx
   140023ada:	rex
   140023adb:	add    BYTE PTR [rax],al
   140023ade:	add    BYTE PTR [rax],al
   140023ae0:	mov    eax,0x14001ca
	...
   140023aed:	add    BYTE PTR [rax],al
   140023aef:	add    BYTE PTR [rsi],ch
   140023af1:	(bad)  
   140023af2:	push   r14
   140023af4:	rex.WB
   140023af5:	push   bx
   140023af7:	je     0x140023b5a
   140023af9:	je     0x140023b60
   140023afb:	ins    DWORD PTR es:[rdi],dx
   140023afc:	outs   dx,BYTE PTR gs:[rsi]
   140023afe:	je     0x140023b40
   140023b00:	push   r11
   140023b02:	push   rsp
   140023b03:	rex push rcx
   140023b05:	push   rcx
   140023b06:	ins    DWORD PTR es:[rdi],dx
   140023b07:	ins    BYTE PTR es:[rdi],dx
   140023b08:	rex.WX push rbx
   140023b0a:	rex
   140023b0b:	add    BYTE PTR [rax],al
   140023b0e:	add    BYTE PTR [rax],al
   140023b10:	mov    eax,0x14001ca
	...
   140023b1d:	add    BYTE PTR [rax],al
   140023b1f:	add    BYTE PTR [rsi],ch
   140023b21:	(bad)  
   140023b22:	push   r14
   140023b24:	rex.R outs dx,DWORD PTR ds:[rsi]
   140023b26:	push   rdi
   140023b27:	push   0x53656c69
   140023b2c:	je     0x140023b8f
   140023b2e:	je     0x140023b95
   140023b30:	ins    DWORD PTR es:[rdi],dx
   140023b31:	outs   dx,BYTE PTR gs:[rsi]
   140023b33:	je     0x140023b75
   140023b35:	push   r11
   140023b37:	push   rsp
   140023b38:	rex push rcx
   140023b3a:	push   rcx
   140023b3b:	ins    DWORD PTR es:[rdi],dx
   140023b3c:	ins    BYTE PTR es:[rdi],dx
   140023b3d:	rex.WX push rbx
   140023b3f:	rex
   140023b40:	add    BYTE PTR [rax],al
   140023b43:	add    BYTE PTR [rax],al
   140023b45:	add    BYTE PTR [rax],al
   140023b47:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023b55:	add    BYTE PTR [rax],al
   140023b57:	add    BYTE PTR [rsi],ch
   140023b59:	(bad)  
   140023b5a:	push   r14
   140023b5c:	push   rdi
   140023b5d:	push   0x53656c69
   140023b62:	je     0x140023bc5
   140023b64:	je     0x140023bcb
   140023b66:	ins    DWORD PTR es:[rdi],dx
   140023b67:	outs   dx,BYTE PTR gs:[rsi]
   140023b69:	je     0x140023bab
   140023b6b:	push   r11
   140023b6d:	push   rsp
   140023b6e:	rex push rcx
   140023b70:	push   rcx
   140023b71:	ins    DWORD PTR es:[rdi],dx
   140023b72:	ins    BYTE PTR es:[rdi],dx
   140023b73:	rex.WX push rbx
   140023b75:	rex
   140023b76:	add    BYTE PTR [rax+0x14001ca],dil
	...
   140023b85:	add    BYTE PTR [rax],al
   140023b87:	add    BYTE PTR [rsi],ch
   140023b89:	(bad)  
   140023b8a:	push   r14
   140023b8c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140023b8e:	jb     0x140023be3
   140023b90:	je     0x140023bf3
   140023b92:	je     0x140023bf9
   140023b94:	ins    DWORD PTR es:[rdi],dx
   140023b95:	outs   dx,BYTE PTR gs:[rsi]
   140023b97:	je     0x140023bd9
   140023b99:	push   r11
   140023b9b:	push   rsp
   140023b9c:	rex push rcx
   140023b9e:	push   rcx
   140023b9f:	ins    DWORD PTR es:[rdi],dx
   140023ba0:	ins    BYTE PTR es:[rdi],dx
   140023ba1:	rex.WX push rbx
   140023ba3:	rex
   140023ba4:	add    BYTE PTR [rax],al
   140023ba7:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023bb5:	add    BYTE PTR [rax],al
   140023bb7:	add    BYTE PTR [rsi],ch
   140023bb9:	(bad)  
   140023bba:	push   r14
   140023bbc:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140023bbe:	movsxd esp,DWORD PTR [rcx+0x6c]
   140023bc1:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140023bc3:	jb     0x140023c18
   140023bc5:	je     0x140023c28
   140023bc7:	je     0x140023c2e
   140023bc9:	ins    DWORD PTR es:[rdi],dx
   140023bca:	outs   dx,BYTE PTR gs:[rsi]
   140023bcc:	je     0x140023c0e
   140023bce:	push   r11
   140023bd0:	push   rsp
   140023bd1:	rex push rcx
   140023bd3:	push   rcx
   140023bd4:	ins    DWORD PTR es:[rdi],dx
   140023bd5:	ins    BYTE PTR es:[rdi],dx
   140023bd6:	rex.WX push rbx
   140023bd8:	rex
   140023bd9:	add    BYTE PTR [rax],al
   140023bdc:	add    BYTE PTR [rax],al
   140023bde:	add    BYTE PTR [rax],al
   140023be0:	mov    eax,0x14001ca
	...
   140023bed:	add    BYTE PTR [rax],al
   140023bef:	add    BYTE PTR [rsi],ch
   140023bf1:	(bad)  
   140023bf2:	push   r14
   140023bf4:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140023bf6:	jb     0x140023c3d
   140023bf8:	(bad)  
   140023bf9:	movsxd ebp,DWORD PTR [rax+0x53]
   140023bfc:	je     0x140023c5f
   140023bfe:	je     0x140023c65
   140023c00:	ins    DWORD PTR es:[rdi],dx
   140023c01:	outs   dx,BYTE PTR gs:[rsi]
   140023c03:	je     0x140023c45
   140023c05:	push   r11
   140023c07:	push   rsp
   140023c08:	rex push rcx
   140023c0a:	push   rcx
   140023c0b:	ins    DWORD PTR es:[rdi],dx
   140023c0c:	ins    BYTE PTR es:[rdi],dx
   140023c0d:	rex.WX push rbx
   140023c0f:	rex
   140023c10:	add    BYTE PTR [rax],al
   140023c13:	add    BYTE PTR [rax],al
   140023c15:	add    BYTE PTR [rax],al
   140023c17:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023c25:	add    BYTE PTR [rax],al
   140023c27:	add    BYTE PTR [rsi],ch
   140023c29:	(bad)  
   140023c2a:	push   r14
   140023c2c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140023c2e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140023c31:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140023c33:	jb     0x140023c7a
   140023c35:	(bad)  
   140023c36:	movsxd ebp,DWORD PTR [rax+0x53]
   140023c39:	je     0x140023c9c
   140023c3b:	je     0x140023ca2
   140023c3d:	ins    DWORD PTR es:[rdi],dx
   140023c3e:	outs   dx,BYTE PTR gs:[rsi]
   140023c40:	je     0x140023c82
   140023c42:	push   r11
   140023c44:	push   rsp
   140023c45:	rex push rcx
   140023c47:	push   rcx
   140023c48:	ins    DWORD PTR es:[rdi],dx
   140023c49:	ins    BYTE PTR es:[rdi],dx
   140023c4a:	rex.WX push rbx
   140023c4c:	rex
   140023c4d:	add    BYTE PTR [rax],al
   140023c50:	mov    eax,0x14001ca
	...
   140023c5d:	add    BYTE PTR [rax],al
   140023c5f:	add    BYTE PTR [rsi],ch
   140023c61:	(bad)  
   140023c62:	push   r14
   140023c64:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140023c66:	outs   dx,BYTE PTR ds:[rsi]
   140023c67:	je     0x140023cd2
   140023c69:	outs   dx,BYTE PTR ds:[rsi]
   140023c6a:	jne    0x140023cd1
   140023c6c:	push   rbx
   140023c6d:	je     0x140023cd0
   140023c6f:	je     0x140023cd6
   140023c71:	ins    DWORD PTR es:[rdi],dx
   140023c72:	outs   dx,BYTE PTR gs:[rsi]
   140023c74:	je     0x140023cb6
   140023c76:	push   r11
   140023c78:	push   rsp
   140023c79:	rex push rcx
   140023c7b:	push   rcx
   140023c7c:	ins    DWORD PTR es:[rdi],dx
   140023c7d:	ins    BYTE PTR es:[rdi],dx
   140023c7e:	rex.WX push rbx
   140023c80:	rex
   140023c81:	add    BYTE PTR [rax],al
   140023c84:	add    BYTE PTR [rax],al
   140023c86:	add    BYTE PTR [rax],al
   140023c88:	mov    eax,0x14001ca
	...
   140023c95:	add    BYTE PTR [rax],al
   140023c97:	add    BYTE PTR [rsi],ch
   140023c99:	(bad)  
   140023c9a:	push   r14
   140023c9c:	rex.X jb 0x140023d04
   140023c9f:	(bad)  
   140023ca0:	imul   edx,DWORD PTR [rbx+0x74],0x61
   140023ca4:	je     0x140023d0b
   140023ca6:	ins    DWORD PTR es:[rdi],dx
   140023ca7:	outs   dx,BYTE PTR gs:[rsi]
   140023ca9:	je     0x140023ceb
   140023cab:	push   r11
   140023cad:	push   rsp
   140023cae:	rex push rcx
   140023cb0:	push   rcx
   140023cb1:	ins    DWORD PTR es:[rdi],dx
   140023cb2:	ins    BYTE PTR es:[rdi],dx
   140023cb3:	rex.WX push rbx
   140023cb5:	rex
   140023cb6:	add    BYTE PTR [rax+0x14001ca],dil
	...
   140023cc5:	add    BYTE PTR [rax],al
   140023cc7:	add    BYTE PTR [rsi],ch
   140023cc9:	(bad)  
   140023cca:	push   r14
   140023ccc:	push   rdx
   140023ccd:	gs je  0x140023d45
   140023cd0:	jb     0x140023d40
   140023cd2:	push   rbx
   140023cd3:	je     0x140023d36
   140023cd5:	je     0x140023d3c
   140023cd7:	ins    DWORD PTR es:[rdi],dx
   140023cd8:	outs   dx,BYTE PTR gs:[rsi]
   140023cda:	je     0x140023d1c
   140023cdc:	push   r11
   140023cde:	push   rsp
   140023cdf:	rex push rcx
   140023ce1:	push   rcx
   140023ce2:	ins    DWORD PTR es:[rdi],dx
   140023ce3:	ins    BYTE PTR es:[rdi],dx
   140023ce4:	rex.WX push rbx
   140023ce6:	rex
   140023ce7:	add    BYTE PTR [rax],al
   140023cea:	add    BYTE PTR [rax],al
   140023cec:	add    BYTE PTR [rax],al
   140023cee:	add    BYTE PTR [rax],al
   140023cf0:	mov    eax,0x14001ca
	...
   140023cfd:	add    BYTE PTR [rax],al
   140023cff:	add    BYTE PTR [rsi],ch
   140023d01:	(bad)  
   140023d02:	push   r14
   140023d04:	push   rdi
   140023d05:	imul   esi,DWORD PTR [rax+rbp*2+0x53],0x65746174
   140023d0d:	ins    DWORD PTR es:[rdi],dx
   140023d0e:	outs   dx,BYTE PTR gs:[rsi]
   140023d10:	je     0x140023d52
   140023d12:	push   r11
   140023d14:	push   rsp
   140023d15:	rex push rcx
   140023d17:	push   rcx
   140023d18:	ins    DWORD PTR es:[rdi],dx
   140023d19:	ins    BYTE PTR es:[rdi],dx
   140023d1a:	rex.WX push rbx
   140023d1c:	rex
   140023d1d:	add    BYTE PTR [rax],al
   140023d20:	mov    eax,0x14001ca
	...
   140023d2d:	add    BYTE PTR [rax],al
   140023d2f:	add    BYTE PTR [rsi],ch
   140023d31:	(bad)  
   140023d32:	push   r14
   140023d34:	rex.XB (bad) 
   140023d36:	jae    0x140023d9d
   140023d38:	rex.X ins BYTE PTR es:[rdi],dx
   140023d3a:	outs   dx,DWORD PTR ds:[rsi]
   140023d3b:	movsxd ebp,DWORD PTR [rbx+0x40]
   140023d3e:	push   r11
   140023d40:	push   rsp
   140023d41:	rex push rcx
   140023d43:	push   rcx
   140023d44:	ins    DWORD PTR es:[rdi],dx
   140023d45:	ins    BYTE PTR es:[rdi],dx
   140023d46:	rex.WX push rbx
   140023d48:	rex
   140023d49:	add    BYTE PTR [rax],al
   140023d4c:	add    BYTE PTR [rax],al
   140023d4e:	add    BYTE PTR [rax],al
   140023d50:	mov    eax,0x14001ca
	...
   140023d5d:	add    BYTE PTR [rax],al
   140023d5f:	add    BYTE PTR [rsi],ch
   140023d61:	(bad)  
   140023d62:	push   r14
   140023d64:	push   rbx
   140023d65:	ja     0x140023dd0
   140023d67:	je     0x140023dcc
   140023d69:	push   0x74617453
   140023d6e:	gs ins DWORD PTR es:[rdi],dx
   140023d70:	outs   dx,BYTE PTR gs:[rsi]
   140023d72:	je     0x140023db4
   140023d74:	push   r11
   140023d76:	push   rsp
   140023d77:	rex push rcx
   140023d79:	push   rcx
   140023d7a:	ins    DWORD PTR es:[rdi],dx
   140023d7b:	ins    BYTE PTR es:[rdi],dx
   140023d7c:	rex.WX push rbx
   140023d7e:	rex
   140023d7f:	add    BYTE PTR [rax],al
   140023d82:	add    BYTE PTR [rax],al
   140023d84:	add    BYTE PTR [rax],al
   140023d86:	add    BYTE PTR [rax],al
   140023d88:	mov    eax,0x14001ca
	...
   140023d95:	add    BYTE PTR [rax],al
   140023d97:	add    BYTE PTR [rsi],ch
   140023d99:	(bad)  
   140023d9a:	push   r14
   140023d9c:	rex.XB (bad) 
   140023d9e:	jae    0x140023e05
   140023da0:	rex.XB ins BYTE PTR es:[rdi],dx
   140023da2:	(bad)  
   140023da3:	jne    0x140023e18
   140023da5:	gs rex
   140023da7:	push   r11
   140023da9:	push   rsp
   140023daa:	rex push rcx
   140023dac:	push   rcx
   140023dad:	ins    DWORD PTR es:[rdi],dx
   140023dae:	ins    BYTE PTR es:[rdi],dx
   140023daf:	rex.WX push rbx
   140023db1:	rex
   140023db2:	add    BYTE PTR [rax],al
   140023db5:	add    BYTE PTR [rax],al
   140023db7:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023dc5:	add    BYTE PTR [rax],al
   140023dc7:	add    BYTE PTR [rsi],ch
   140023dc9:	(bad)  
   140023dca:	push   r14
   140023dcc:	rex.XB (bad) 
   140023dce:	jae    0x140023e35
   140023dd0:	rex.XB ins BYTE PTR es:[rdi],dx
   140023dd2:	(bad)  
   140023dd3:	jne    0x140023e48
   140023dd5:	gs jae 0x140023e18
   140023dd8:	push   r11
   140023dda:	push   rsp
   140023ddb:	rex push rcx
   140023ddd:	push   rcx
   140023dde:	ins    DWORD PTR es:[rdi],dx
   140023ddf:	ins    BYTE PTR es:[rdi],dx
   140023de0:	rex.WX push rbx
   140023de2:	rex
   140023de3:	add    BYTE PTR [rax],al
   140023de6:	add    BYTE PTR [rax],al
   140023de8:	mov    eax,0x14001ca
	...
   140023df5:	add    BYTE PTR [rax],al
   140023df7:	add    BYTE PTR [rsi],ch
   140023df9:	(bad)  
   140023dfa:	push   r14
   140023dfc:	rex.R
   140023dfd:	gs data16 (bad) 
   140023e00:	jne    0x140023e6e
   140023e02:	je     0x140023e47
   140023e04:	ins    BYTE PTR es:[rdi],dx
   140023e05:	(bad)  
   140023e06:	jne    0x140023e7b
   140023e08:	gs rex
   140023e0a:	push   r11
   140023e0c:	push   rsp
   140023e0d:	rex push rcx
   140023e0f:	push   rcx
   140023e10:	ins    DWORD PTR es:[rdi],dx
   140023e11:	ins    BYTE PTR es:[rdi],dx
   140023e12:	rex.WX push rbx
   140023e14:	rex
   140023e15:	add    BYTE PTR [rax],al
   140023e18:	mov    eax,0x14001ca
	...
   140023e25:	add    BYTE PTR [rax],al
   140023e27:	add    BYTE PTR [rsi],ch
   140023e29:	(bad)  
   140023e2a:	push   r14
   140023e2c:	rex.WR (bad) 
   140023e2e:	(bad)  
   140023e2f:	gs ins BYTE PTR es:[rdi],dx
   140023e31:	ins    BYTE PTR es:[rdi],dx
   140023e32:	gs fs push rbx
   140023e35:	je     0x140023e98
   140023e37:	je     0x140023e9e
   140023e39:	ins    DWORD PTR es:[rdi],dx
   140023e3a:	outs   dx,BYTE PTR gs:[rsi]
   140023e3c:	je     0x140023e7e
   140023e3e:	push   r11
   140023e40:	push   rsp
   140023e41:	rex push rcx
   140023e43:	push   rcx
   140023e44:	ins    DWORD PTR es:[rdi],dx
   140023e45:	ins    BYTE PTR es:[rdi],dx
   140023e46:	rex.WX push rbx
   140023e48:	rex
   140023e49:	add    BYTE PTR [rax],al
   140023e4c:	add    BYTE PTR [rax],al
   140023e4e:	add    BYTE PTR [rax],al
   140023e50:	mov    eax,0x14001ca
	...
   140023e5d:	add    BYTE PTR [rax],al
   140023e5f:	add    BYTE PTR [rsi],ch
   140023e61:	(bad)  
   140023e62:	push   r14
   140023e64:	push   rsp
   140023e65:	push   0x53776f72
   140023e6a:	je     0x140023ecd
   140023e6c:	je     0x140023ed3
   140023e6e:	ins    DWORD PTR es:[rdi],dx
   140023e6f:	outs   dx,BYTE PTR gs:[rsi]
   140023e71:	je     0x140023eb3
   140023e73:	push   r11
   140023e75:	push   rsp
   140023e76:	rex push rcx
   140023e78:	push   rcx
   140023e79:	ins    DWORD PTR es:[rdi],dx
   140023e7a:	ins    BYTE PTR es:[rdi],dx
   140023e7b:	rex.WX push rbx
   140023e7d:	rex
   140023e7e:	add    BYTE PTR [rax+0x14001ca],dil
	...
   140023e8d:	add    BYTE PTR [rax],al
   140023e8f:	add    BYTE PTR [rsi],ch
   140023e91:	(bad)  
   140023e92:	push   r14
   140023e94:	rex.XB (bad) 
   140023e96:	je     0x140023efb
   140023e98:	push   0x54534140
   140023e9d:	rex push rcx
   140023e9f:	push   rcx
   140023ea0:	ins    DWORD PTR es:[rdi],dx
   140023ea1:	ins    BYTE PTR es:[rdi],dx
   140023ea2:	rex.WX push rbx
   140023ea4:	rex
   140023ea5:	add    BYTE PTR [rax],al
   140023ea8:	mov    eax,0x14001ca
	...
   140023eb5:	add    BYTE PTR [rax],al
   140023eb7:	add    BYTE PTR [rsi],ch
   140023eb9:	(bad)  
   140023eba:	push   r14
   140023ebc:	rex.RX imul r13d,DWORD PTR [rsi+0x61],0x40796c6c
   140023ec4:	push   r11
   140023ec6:	push   rsp
   140023ec7:	rex push rcx
   140023ec9:	push   rcx
   140023eca:	ins    DWORD PTR es:[rdi],dx
   140023ecb:	ins    BYTE PTR es:[rdi],dx
   140023ecc:	rex.WX push rbx
   140023ece:	rex
   140023ecf:	add    BYTE PTR [rax],al
   140023ed2:	add    BYTE PTR [rax],al
   140023ed4:	add    BYTE PTR [rax],al
   140023ed6:	add    BYTE PTR [rax],al
   140023ed8:	mov    eax,0x14001ca
	...
   140023ee5:	add    BYTE PTR [rax],al
   140023ee7:	add    BYTE PTR [rsi],ch
   140023ee9:	(bad)  
   140023eea:	push   r14
   140023eec:	push   rsp
   140023eed:	jb     0x140023f68
   140023eef:	push   rbx
   140023ef0:	je     0x140023f53
   140023ef2:	je     0x140023f59
   140023ef4:	ins    DWORD PTR es:[rdi],dx
   140023ef5:	outs   dx,BYTE PTR gs:[rsi]
   140023ef7:	je     0x140023f39
   140023ef9:	push   r11
   140023efb:	push   rsp
   140023efc:	rex push rcx
   140023efe:	push   rcx
   140023eff:	ins    DWORD PTR es:[rdi],dx
   140023f00:	ins    BYTE PTR es:[rdi],dx
   140023f01:	rex.WX push rbx
   140023f03:	rex
   140023f04:	add    BYTE PTR [rax],al
   140023f07:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023f15:	add    BYTE PTR [rax],al
   140023f17:	add    BYTE PTR [rsi],ch
   140023f19:	(bad)  
   140023f1a:	push   r14
   140023f1c:	rex.RX jne 0x140023f8d
   140023f1f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140023f23:	outs   dx,BYTE PTR ds:[rsi]
   140023f24:	rex.RB js 0x140023f97
   140023f27:	jb     0x140023f8e
   140023f29:	jae    0x140023f9e
   140023f2b:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140023f32:	rex push rcx
   140023f34:	push   rcx
   140023f35:	ins    DWORD PTR es:[rdi],dx
   140023f36:	ins    BYTE PTR es:[rdi],dx
   140023f37:	rex.WX push rbx
   140023f39:	rex
   140023f3a:	add    BYTE PTR [rax],al
   140023f3d:	add    BYTE PTR [rax],al
   140023f3f:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140023f4d:	add    BYTE PTR [rax],al
   140023f4f:	add    BYTE PTR [rsi],ch
   140023f51:	(bad)  
   140023f52:	push   r14
   140023f54:	rex.RX jne 0x140023fc5
   140023f57:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140023f5b:	outs   dx,BYTE PTR ds:[rsi]
   140023f5c:	rex.R
   140023f5d:	movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
   140023f62:	(bad)  
   140023f63:	je     0x140023fce
   140023f65:	outs   dx,DWORD PTR ds:[rsi]
   140023f66:	outs   dx,BYTE PTR ds:[rsi]
   140023f67:	rex
   140023f68:	push   r11
   140023f6a:	push   rsp
   140023f6b:	rex push rcx
   140023f6d:	push   rcx
   140023f6e:	ins    DWORD PTR es:[rdi],dx
   140023f6f:	ins    BYTE PTR es:[rdi],dx
   140023f70:	rex.WX push rbx
   140023f72:	rex
   140023f73:	add    BYTE PTR [rax],al
   140023f76:	add    BYTE PTR [rax],al
   140023f78:	mov    eax,0x14001ca
	...
   140023f85:	add    BYTE PTR [rax],al
   140023f87:	add    BYTE PTR [rsi],ch
   140023f89:	(bad)  
   140023f8a:	push   r14
   140023f8c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140023f8e:	jb     0x140023ffd
   140023f90:	(bad)  
   140023f91:	ins    BYTE PTR es:[rdi],dx
   140023f92:	push   rax
   140023f93:	(bad)  
   140023f94:	jb     0x140023ff7
   140023f96:	ins    DWORD PTR es:[rdi],dx
   140023f97:	gs je  0x140023fff
   140023f9a:	jb     0x140023fe8
   140023f9c:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   140023fa3:	rex push rcx
   140023fa5:	push   rcx
   140023fa6:	ins    DWORD PTR es:[rdi],dx
   140023fa7:	ins    BYTE PTR es:[rdi],dx
   140023fa8:	rex.WX push rbx
   140023faa:	rex
   140023fab:	add    BYTE PTR [rax],al
   140023fae:	add    BYTE PTR [rax],al
   140023fb0:	mov    eax,0x14001ca
	...
   140023fbd:	add    BYTE PTR [rax],al
   140023fbf:	add    BYTE PTR [rsi],ch
   140023fc1:	(bad)  
   140023fc2:	push   r14
   140023fc4:	push   rbx
   140023fc5:	outs   dx,DWORD PTR ds:[rsi]
   140023fc6:	jne    0x14002403a
   140023fc8:	movsxd esp,DWORD PTR [rbp+0x45]
   140023fcb:	ins    BYTE PTR es:[rdi],dx
   140023fcc:	gs ins DWORD PTR es:[rdi],dx
   140023fce:	outs   dx,BYTE PTR gs:[rsi]
   140023fd0:	je     0x140024012
   140023fd2:	push   r11
   140023fd4:	push   rsp
   140023fd5:	rex push rcx
   140023fd7:	push   rcx
   140023fd8:	ins    DWORD PTR es:[rdi],dx
   140023fd9:	ins    BYTE PTR es:[rdi],dx
   140023fda:	rex.WX push rbx
   140023fdc:	rex
   140023fdd:	add    BYTE PTR [rax],al
   140023fe0:	mov    eax,0x14001ca
	...
   140023fed:	add    BYTE PTR [rax],al
   140023fef:	add    BYTE PTR [rsi],ch
   140023ff1:	(bad)  
   140023ff2:	push   r14
   140023ff4:	push   rbx
   140023ff5:	outs   dx,DWORD PTR ds:[rsi]
   140023ff6:	jne    0x14002406a
   140023ff8:	movsxd esp,DWORD PTR [rbp+0x45]
   140023ffb:	ins    BYTE PTR es:[rdi],dx
   140023ffc:	gs ins DWORD PTR es:[rdi],dx
   140023ffe:	outs   dx,BYTE PTR gs:[rsi]
   140024000:	je     0x140024075
   140024002:	rex
   140024003:	push   r11
   140024005:	push   rsp
   140024006:	rex push rcx
   140024008:	push   rcx
   140024009:	ins    DWORD PTR es:[rdi],dx
   14002400a:	ins    BYTE PTR es:[rdi],dx
   14002400b:	rex.WX push rbx
   14002400d:	rex
   14002400e:	add    BYTE PTR [rax+0x14001ca],dil
	...
   14002401d:	add    BYTE PTR [rax],al
   14002401f:	add    BYTE PTR [rsi],ch
   140024021:	(bad)  
   140024022:	push   r14
   140024024:	rex.RX jne 0x140024095
   140024027:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14002402b:	outs   dx,BYTE PTR ds:[rsi]
   14002402c:	rex.X outs dx,DWORD PTR ds:[rsi]
   14002402e:	fs jns 0x140024071
   140024031:	push   r11
   140024033:	push   rsp
   140024034:	rex push rcx
   140024036:	push   rcx
   140024037:	ins    DWORD PTR es:[rdi],dx
   140024038:	ins    BYTE PTR es:[rdi],dx
   140024039:	rex.WX push rbx
   14002403b:	rex
   14002403c:	add    BYTE PTR [rax],al
   14002403f:	add    BYTE PTR [rax+0x14001ca],bh
	...
   14002404d:	add    BYTE PTR [rax],al
   14002404f:	add    BYTE PTR [rsi],ch
   140024051:	(bad)  
   140024052:	push   r14
   140024054:	push   rax
   140024055:	jb     0x1400240c6
   140024057:	addr32 jb 0x1400240bb
   14002405a:	ins    DWORD PTR es:[rdi],dx
   14002405b:	rex
   14002405c:	push   r11
   14002405e:	push   rsp
   14002405f:	rex push rcx
   140024061:	push   rcx
   140024062:	ins    DWORD PTR es:[rdi],dx
   140024063:	ins    BYTE PTR es:[rdi],dx
   140024064:	rex.WX push rbx
   140024066:	rex
   140024067:	add    BYTE PTR [rax],al
   14002406a:	add    BYTE PTR [rax],al
   14002406c:	add    BYTE PTR [rax],al
   14002406e:	add    BYTE PTR [rax],al
   140024070:	mov    eax,0x14001ca
	...
   14002407d:	add    BYTE PTR [rax],al
   14002407f:	add    BYTE PTR [rsi],ch
   140024081:	(bad)  
   140024082:	push   r14
   140024084:	rex.RX jne 0x1400240f5
   140024087:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14002408b:	outs   dx,BYTE PTR ds:[rsi]
   14002408c:	push   rbx
   14002408d:	outs   dx,DWORD PTR ds:[rsi]
   14002408e:	jne    0x140024102
   140024090:	movsxd esp,DWORD PTR [rbp+0x45]
   140024093:	ins    BYTE PTR es:[rdi],dx
   140024094:	gs ins DWORD PTR es:[rdi],dx
   140024096:	outs   dx,BYTE PTR gs:[rsi]
   140024098:	je     0x1400240da
   14002409a:	push   r11
   14002409c:	push   rsp
   14002409d:	rex push rcx
   14002409f:	push   rcx
   1400240a0:	ins    DWORD PTR es:[rdi],dx
   1400240a1:	ins    BYTE PTR es:[rdi],dx
   1400240a2:	rex.WX push rbx
   1400240a4:	rex
   1400240a5:	add    BYTE PTR [rax],al
   1400240a8:	mov    eax,0x14001ca
	...
   1400240b5:	add    BYTE PTR [rax],al
   1400240b7:	add    BYTE PTR [rsi],ch
   1400240b9:	(bad)  
   1400240ba:	push   r14
   1400240bc:	push   rbx
   1400240bd:	je     0x140024120
   1400240bf:	je     0x140024126
   1400240c1:	ins    DWORD PTR es:[rdi],dx
   1400240c2:	outs   dx,BYTE PTR gs:[rsi]
   1400240c4:	je     0x140024119
   1400240c6:	outs   dx,DWORD PTR ds:[rsi]
   1400240c7:	jne    0x14002413b
   1400240c9:	movsxd esp,DWORD PTR [rbp+0x45]
   1400240cc:	ins    BYTE PTR es:[rdi],dx
   1400240cd:	gs ins DWORD PTR es:[rdi],dx
   1400240cf:	outs   dx,BYTE PTR gs:[rsi]
   1400240d1:	je     0x140024113
   1400240d3:	push   r11
   1400240d5:	push   rsp
   1400240d6:	rex push rcx
   1400240d8:	push   rcx
   1400240d9:	ins    DWORD PTR es:[rdi],dx
   1400240da:	ins    BYTE PTR es:[rdi],dx
   1400240db:	rex.WX push rbx
   1400240dd:	rex
   1400240de:	add    BYTE PTR [rax+0x14001ca],dil
	...
   1400240ed:	add    BYTE PTR [rax],al
   1400240ef:	add    BYTE PTR [rsi],ch
   1400240f1:	(bad)  
   1400240f2:	push   r14
   1400240f4:	rex.R
   1400240f5:	gs (bad) 
   1400240f7:	jne    0x140024160
   1400240f9:	addr32 gs jb 0x140024150
   1400240fd:	je     0x140024160
   1400240ff:	je     0x140024166
   140024101:	ins    DWORD PTR es:[rdi],dx
   140024102:	outs   dx,BYTE PTR gs:[rsi]
   140024104:	je     0x140024146
   140024106:	push   r11
   140024108:	push   rsp
   140024109:	rex push rcx
   14002410b:	push   rcx
   14002410c:	ins    DWORD PTR es:[rdi],dx
   14002410d:	ins    BYTE PTR es:[rdi],dx
   14002410e:	rex.WX push rbx
   140024110:	rex
   140024111:	add    BYTE PTR [rax],al
   140024114:	add    BYTE PTR [rax],al
   140024116:	add    BYTE PTR [rax],al
   140024118:	mov    eax,0x14001ca
	...
   140024125:	add    BYTE PTR [rax],al
   140024127:	add    BYTE PTR [rsi],ch
   140024129:	(bad)  
   14002412a:	push   r14
   14002412c:	push   rbp
   14002412d:	imul   edx,DWORD PTR [rcx+0x75],0x66696c61
   140024134:	imul   esp,DWORD PTR [rbp+0x64],0x41406449
   14002413b:	push   rbx
   14002413c:	push   rsp
   14002413d:	rex push rcx
   14002413f:	push   rcx
   140024140:	ins    DWORD PTR es:[rdi],dx
   140024141:	ins    BYTE PTR es:[rdi],dx
   140024142:	rex.WX push rbx
   140024144:	rex
   140024145:	add    BYTE PTR [rax],al
   140024148:	mov    eax,0x14001ca
	...
   140024155:	add    BYTE PTR [rax],al
   140024157:	add    BYTE PTR [rsi],ch
   140024159:	(bad)  
   14002415a:	push   r14
   14002415c:	push   rbp
   14002415d:	imul   ecx,DWORD PTR [rcx+0x6d],0x74726f70
   140024164:	rex
   140024165:	push   r11
   140024167:	push   rsp
   140024168:	rex push rcx
   14002416a:	push   rcx
   14002416b:	ins    DWORD PTR es:[rdi],dx
   14002416c:	ins    BYTE PTR es:[rdi],dx
   14002416d:	rex.WX push rbx
   14002416f:	rex
   140024170:	add    BYTE PTR [rax],al
   140024173:	add    BYTE PTR [rax],al
   140024175:	add    BYTE PTR [rax],al
   140024177:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140024185:	add    BYTE PTR [rax],al
   140024187:	add    BYTE PTR [rsi],ch
   140024189:	(bad)  
   14002418a:	push   r14
   14002418c:	push   rbp
   14002418d:	imul   ecx,DWORD PTR [rdi+0x62],0x7463656a
   140024194:	rex.WRB
   140024195:	gs ins DWORD PTR es:[rdi],dx
   140024197:	(bad)  
   140024198:	gs jb  0x1400241e7
   14002419b:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   1400241a2:	rex push rcx
   1400241a4:	push   rcx
   1400241a5:	ins    DWORD PTR es:[rdi],dx
   1400241a6:	ins    BYTE PTR es:[rdi],dx
   1400241a7:	rex.WX push rbx
   1400241a9:	rex
   1400241aa:	add    BYTE PTR [rax],al
   1400241ad:	add    BYTE PTR [rax],al
   1400241af:	add    BYTE PTR [rax+0x14001ca],bh
	...
   1400241bd:	add    BYTE PTR [rax],al
   1400241bf:	add    BYTE PTR [rsi],ch
   1400241c1:	(bad)  
   1400241c2:	push   r14
   1400241c4:	push   rbp
   1400241c5:	imul   edx,DWORD PTR [rcx+0x75],0x66696c61
   1400241cc:	imul   esp,DWORD PTR [rbp+0x64],0x67617250
   1400241d3:	ins    DWORD PTR es:[rdi],dx
   1400241d4:	(bad)  
   1400241d5:	rex.WB
   1400241d6:	fs rex
   1400241d8:	push   r11
   1400241da:	push   rsp
   1400241db:	rex push rcx
   1400241dd:	push   rcx
   1400241de:	ins    DWORD PTR es:[rdi],dx
   1400241df:	ins    BYTE PTR es:[rdi],dx
   1400241e0:	rex.WX push rbx
   1400241e2:	rex
   1400241e3:	add    BYTE PTR [rax],al
   1400241e6:	add    BYTE PTR [rax],al
   1400241e8:	mov    eax,0x14001ca
	...
   1400241f5:	add    BYTE PTR [rax],al
   1400241f7:	add    BYTE PTR [rsi],ch
   1400241f9:	(bad)  
   1400241fa:	push   r14
   1400241fc:	push   rbp
   1400241fd:	imul   edx,DWORD PTR [rax+0x72],0x616d6761
   140024204:	rex
   140024205:	push   r11
   140024207:	push   rsp
   140024208:	rex push rcx
   14002420a:	push   rcx
   14002420b:	ins    DWORD PTR es:[rdi],dx
   14002420c:	ins    BYTE PTR es:[rdi],dx
   14002420d:	rex.WX push rbx
   14002420f:	rex
   140024210:	add    BYTE PTR [rax],al
   140024213:	add    BYTE PTR [rax],al
   140024215:	add    BYTE PTR [rax],al
   140024217:	add    BYTE PTR [rax+0x14001ca],bh
	...
   140024225:	add    BYTE PTR [rax],al
   140024227:	add    BYTE PTR [rsi],ch
   140024229:	(bad)  
   14002422a:	push   r14
   14002422c:	push   rbp
   14002422d:	imul   ecx,DWORD PTR [rax+0x65],0x72656461
   140024234:	rex.WB je 0x14002429c
   140024237:	ins    DWORD PTR es:[rdi],dx
   140024238:	imul   r14,QWORD PTR [rbx+0x74],0x54534140
   140024240:	rex push rcx
   140024242:	push   rcx
   140024243:	ins    DWORD PTR es:[rdi],dx
   140024244:	ins    BYTE PTR es:[rdi],dx
   140024245:	rex.WX push rbx
   140024247:	rex
   140024248:	add    BYTE PTR [rax],al
   14002424b:	add    BYTE PTR [rax],al
   14002424d:	add    BYTE PTR [rax],al
   14002424f:	add    BYTE PTR [rax+0x14001ca],bh
	...
   14002425d:	add    BYTE PTR [rax],al
   14002425f:	add    BYTE PTR [rsi],ch
   140024261:	(bad)  
   140024262:	push   r14
   140024264:	push   rbp
   140024265:	imul   edx,DWORD PTR [rax+0x72],0x6172676f
   14002426c:	ins    DWORD PTR es:[rdi],dx
   14002426d:	rex
   14002426e:	push   r11
   140024270:	push   rsp
   140024271:	rex push rcx
   140024273:	push   rcx
   140024274:	ins    DWORD PTR es:[rdi],dx
   140024275:	ins    BYTE PTR es:[rdi],dx
   140024276:	rex.WX push rbx
   140024278:	rex
   140024279:	add    BYTE PTR [rax],al
   14002427c:	add    BYTE PTR [rax],al
   14002427e:	add    BYTE PTR [rax],al
   140024280:	mov    eax,0x14001ca
	...
   14002428d:	add    BYTE PTR [rax],al
   14002428f:	add    BYTE PTR [rsi],ch
   140024291:	(bad)  
   140024292:	push   r14
   140024294:	push   rbp
   140024295:	imul   eax,DWORD PTR [rcx+0x72],0x4d796172
   14002429c:	gs ins DWORD PTR es:[rdi],dx
   14002429e:	(bad)  
   14002429f:	gs jb  0x1400242ee
   1400242a2:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   1400242a9:	rex push rcx
   1400242ab:	push   rcx
   1400242ac:	ins    DWORD PTR es:[rdi],dx
   1400242ad:	ins    BYTE PTR es:[rdi],dx
   1400242ae:	rex.WX push rbx
   1400242b0:	rex
   1400242b1:	add    BYTE PTR [rax],al
   1400242b4:	add    BYTE PTR [rax],al
   1400242b6:	add    BYTE PTR [rax],al
   1400242b8:	mov    eax,0x14001ca
	...
   1400242c5:	add    BYTE PTR [rax],al
   1400242c7:	add    BYTE PTR [rsi],ch
   1400242c9:	(bad)  
   1400242ca:	push   r14
   1400242cc:	push   rbp
   1400242cd:	imul   ecx,DWORD PTR [rdi+0x62],0x7463656a
   1400242d4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400242d6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400242de:	jb     0x140024320
   1400242e0:	push   r11
   1400242e2:	push   rsp
   1400242e3:	rex push rcx
   1400242e5:	push   rcx
   1400242e6:	ins    DWORD PTR es:[rdi],dx
   1400242e7:	ins    BYTE PTR es:[rdi],dx
   1400242e8:	rex.WX push rbx
   1400242ea:	rex
   1400242eb:	add    BYTE PTR [rax],al
   1400242ee:	add    BYTE PTR [rax],al
   1400242f0:	mov    eax,0x14001ca
	...
   1400242fd:	add    BYTE PTR [rax],al
   1400242ff:	add    BYTE PTR [rsi],ch
   140024301:	(bad)  
   140024302:	push   r14
   140024304:	push   rbp
   140024305:	imul   edx,DWORD PTR [rax+0x61],0x656d6172
   14002430c:	je     0x140024373
   14002430e:	jb     0x14002435c
   140024310:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   140024317:	rex push rcx
   140024319:	push   rcx
   14002431a:	ins    DWORD PTR es:[rdi],dx
   14002431b:	ins    BYTE PTR es:[rdi],dx
   14002431c:	rex.WX push rbx
   14002431e:	rex
   14002431f:	add    BYTE PTR [rax],al
   140024322:	add    BYTE PTR [rax],al
   140024324:	add    BYTE PTR [rax],al
   140024326:	add    BYTE PTR [rax],al
   140024328:	mov    eax,0x14001ca
	...
   140024335:	add    BYTE PTR [rax],al
   140024337:	add    BYTE PTR [rsi],ch
   140024339:	(bad)  
   14002433a:	push   r14
   14002433c:	push   rbp
   14002433d:	imul   ecx,DWORD PTR [rdi+0x62],0x7463656a
   140024344:	rex.WRB
   140024345:	gs ins DWORD PTR es:[rdi],dx
   140024347:	(bad)  
   140024348:	gs jb  0x14002438b
   14002434b:	push   r11
   14002434d:	push   rsp
   14002434e:	rex push rcx
   140024350:	push   rcx
   140024351:	ins    DWORD PTR es:[rdi],dx
   140024352:	ins    BYTE PTR es:[rdi],dx
   140024353:	rex.WX push rbx
   140024355:	rex
   140024356:	add    BYTE PTR [rax+0x14001ca],dil
	...
   140024365:	add    BYTE PTR [rax],al
   140024367:	add    BYTE PTR [rsi],ch
   140024369:	(bad)  
   14002436a:	push   r14
   14002436c:	push   rbp
   14002436d:	imul   ecx,DWORD PTR [rdi+0x62],0x7463656a
   140024374:	rex.R
   140024375:	imul   bp,WORD PTR gs:[rsi+0x69],0x6974
   14002437c:	outs   dx,DWORD PTR ds:[rsi]
   14002437d:	outs   dx,BYTE PTR ds:[rsi]
   14002437e:	rex
   14002437f:	push   r11
   140024381:	push   rsp
   140024382:	rex push rcx
   140024384:	push   rcx
   140024385:	ins    DWORD PTR es:[rdi],dx
   140024386:	ins    BYTE PTR es:[rdi],dx
   140024387:	rex.WX push rbx
   140024389:	rex
   14002438a:	add    BYTE PTR [rax],al
   14002438d:	add    BYTE PTR [rax],al
   14002438f:	add    BYTE PTR [rax+0x14001ca],bh
	...
   14002439d:	add    BYTE PTR [rax],al
   14002439f:	add    BYTE PTR [rsi],ch
   1400243a1:	(bad)  
   1400243a2:	push   r14
   1400243a4:	push   rbp
   1400243a5:	imul   edx,DWORD PTR [rbx+0x6f],0x65637275
   1400243ac:	rex.RB ins BYTE PTR es:[rdi],dx
   1400243ae:	gs ins DWORD PTR es:[rdi],dx
   1400243b0:	outs   dx,BYTE PTR gs:[rsi]
   1400243b2:	je     0x1400243f4
   1400243b4:	push   r11
   1400243b6:	push   rsp
   1400243b7:	rex push rcx
   1400243b9:	push   rcx
   1400243ba:	ins    DWORD PTR es:[rdi],dx
   1400243bb:	ins    BYTE PTR es:[rdi],dx
   1400243bc:	rex.WX push rbx
   1400243be:	rex
   1400243bf:	add    BYTE PTR [rax],al
   1400243c2:	add    BYTE PTR [rax],al
   1400243c4:	add    BYTE PTR [rax],al
   1400243c6:	add    BYTE PTR [rax],al
   1400243c8:	mov    eax,0x14001ca
	...
   1400243d5:	add    BYTE PTR [rax],al
   1400243d7:	add    BYTE PTR [rsi],ch
   1400243d9:	(bad)  
   1400243da:	push   r14
   1400243dc:	push   rbp
   1400243dd:	imul   ecx,DWORD PTR [rdi+0x62],0x7463656a
   1400243e4:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x40676e69
   1400243ec:	push   r11
   1400243ee:	push   rsp
   1400243ef:	rex push rcx
   1400243f1:	push   rcx
   1400243f2:	ins    DWORD PTR es:[rdi],dx
   1400243f3:	ins    BYTE PTR es:[rdi],dx
   1400243f4:	rex.WX push rbx
   1400243f6:	rex
   1400243f7:	add    BYTE PTR [rax],al
   1400243fa:	add    BYTE PTR [rax],al
   1400243fc:	add    BYTE PTR [rax],al
   1400243fe:	add    BYTE PTR [rax],al
   140024400:	mov    eax,0x14001ca
	...
   14002440d:	add    BYTE PTR [rax],al
   14002440f:	add    BYTE PTR [rsi],ch
   140024411:	(bad)  
   140024412:	push   r14
   140024414:	push   rbp
   140024415:	imul   edx,DWORD PTR [rbx+0x63],0x74706972
   14002441c:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x40676e69
   140024424:	push   r11
   140024426:	push   rsp
   140024427:	rex push rcx
   140024429:	push   rcx
   14002442a:	ins    DWORD PTR es:[rdi],dx
   14002442b:	ins    BYTE PTR es:[rdi],dx
   14002442c:	rex.WX push rbx
   14002442e:	rex
   14002442f:	add    BYTE PTR [rax],al
   140024432:	add    BYTE PTR [rax],al
   140024434:	add    BYTE PTR [rax],al
   140024436:	add    BYTE PTR [rax],al
   140024438:	mov    eax,0x14001ca
	...
   140024445:	add    BYTE PTR [rax],al
   140024447:	add    BYTE PTR [rsi],ch
   140024449:	(bad)  
   14002444a:	push   r14
   14002444c:	push   rbp
   14002444d:	imul   eax,DWORD PTR [rcx+0x72],0x42796172
   140024454:	imul   ebp,DWORD PTR [rsi+0x64],0x40676e69
   14002445b:	push   r11
   14002445d:	push   rsp
   14002445e:	rex push rcx
   140024460:	push   rcx
   140024461:	ins    DWORD PTR es:[rdi],dx
   140024462:	ins    BYTE PTR es:[rdi],dx
   140024463:	rex.WX push rbx
   140024465:	rex
   140024466:	add    BYTE PTR [rax+0x14001ca],dil
	...
   140024475:	add    BYTE PTR [rax],al
   140024477:	add    BYTE PTR [rsi],ch
   140024479:	(bad)  
   14002447a:	push   r14
   14002447c:	push   rbp
   14002447d:	imul   edx,DWORD PTR [rax+0x75],0x63696c62
   140024484:	rex.WRB
   140024485:	gs ins DWORD PTR es:[rdi],dx
   140024487:	(bad)  
   140024488:	gs jb  0x1400244cb
   14002448b:	push   r11
   14002448d:	push   rsp
   14002448e:	rex push rcx
   140024490:	push   rcx
   140024491:	ins    DWORD PTR es:[rdi],dx
   140024492:	ins    BYTE PTR es:[rdi],dx
   140024493:	rex.WX push rbx
   140024495:	rex
   140024496:	add    BYTE PTR [rbx],sil
   140024499:	add    BYTE PTR [rax],al
   14002449b:	add    BYTE PTR [rcx],dl
   14002449d:	add    BYTE PTR [rax],al
   14002449f:	add    BYTE PTR [rax],cl
   1400244a1:	add    BYTE PTR [rax],al
   1400244a3:	add    BYTE PTR [rdi],al
   1400244a5:	add    BYTE PTR [rax],al
   1400244a7:	add    BYTE PTR [rip+0x3c000000],bh        # 0x17c0244ad
   1400244ad:	add    BYTE PTR [rax],al
   1400244af:	add    BYTE PTR [rax],bh
   1400244b1:	add    BYTE PTR [rax],al
   1400244b3:	add    BYTE PTR [rdi],dh
   1400244b5:	add    BYTE PTR [rax],al
   1400244b7:	add    BYTE PTR [rdi],ch
   1400244b9:	add    BYTE PTR [rax],al
   1400244bb:	add    BYTE PTR [rip+0x24000000],bl        # 0x1640244c1
   1400244c1:	add    BYTE PTR [rax],al
   1400244c3:	add    BYTE PTR [rdx],ah
   1400244c5:	add    BYTE PTR [rax],al
   1400244c7:	add    BYTE PTR [rcx],ah
   1400244c9:	add    BYTE PTR [rax],al
   1400244cb:	add    BYTE PTR [rax],al
   1400244cd:	add    BYTE PTR [rax],al
   1400244cf:	add    BYTE PTR [rax],dl
   1400244d1:	push   rsp
   1400244d2:	add    DWORD PTR [rax+0x1],eax
   1400244d5:	add    BYTE PTR [rax],al
   1400244d7:	add    BYTE PTR [rax],dl
   1400244d9:	push   rsp
   1400244da:	add    DWORD PTR [rax+0x1],eax
   1400244dd:	add    BYTE PTR [rax],al
   1400244df:	add    BYTE PTR [rax],dl
   1400244e1:	push   rsp
   1400244e2:	add    DWORD PTR [rax+0x1],eax
   1400244e5:	add    BYTE PTR [rax],al
   1400244e7:	add    BYTE PTR [rax],dl
   1400244e9:	push   rsp
   1400244ea:	add    DWORD PTR [rax+0x1],eax
   1400244ed:	add    BYTE PTR [rax],al
   1400244ef:	add    BYTE PTR [rax+0x14001ca],bh
	...
   1400244fd:	add    BYTE PTR [rax],al
   1400244ff:	add    BYTE PTR [rsi],ch
   140024501:	(bad)  
   140024502:	push   r14
   140024504:	je     0x14002457f
   140024506:	jo     0x14002456d
   140024508:	pop    rdi
   140024509:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140024510:	jne    0x1400244aa
   140024512:	add    BYTE PTR [rax],al
   140024514:	(bad)  
   140024515:	(bad)  
   140024516:	(bad)  
   140024517:	(bad)  
   140024518:	(bad)  
   140024519:	(bad)  
   14002451a:	(bad)  
   14002451b:	(bad)  
   14002451c:	(bad)  
   14002451d:	(bad)  
   14002451e:	(bad)  
   14002451f:	inc    DWORD PTR [rcx]
   140024521:	add    BYTE PTR [rax],al
   140024523:	add    BYTE PTR [rax],al
   140024525:	add    BYTE PTR [rax],al
   140024527:	add    BYTE PTR [rdx],dh
   140024529:	movabs ds:0x5dcd00002b992ddf,al
   140024532:	and    dl,dl
   140024534:	data16 (bad) 
   140024536:	(bad)  
   140024537:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140025000 <.pdata>:
   140025000:	add    BYTE PTR [rax],dl
   140025002:	add    BYTE PTR [rax],al
   140025004:	sub    DWORD PTR [rax],edx
   140025006:	add    BYTE PTR [rax],al
   140025008:	sbb    al,0x2
   14002500a:	add    al,BYTE PTR [rax]
   14002500c:	sub    DWORD PTR [rax],edx
   14002500e:	add    BYTE PTR [rax],al
   140025010:	pop    rcx
   140025011:	adc    BYTE PTR [rax],al
   140025013:	add    BYTE PTR [rax],cl
   140025015:	add    al,BYTE PTR [rdx]
   140025017:	add    BYTE PTR [rcx+0x10],bl
   14002501a:	add    BYTE PTR [rax],al
   14002501c:	jb     0x14002502e
   14002501e:	add    BYTE PTR [rax],al
   140025020:	clc    
   140025021:	add    DWORD PTR [rdx],eax
   140025023:	add    BYTE PTR [rax-0x5efffff0],al
   140025029:	adc    BYTE PTR [rax],al
   14002502b:	add    BYTE PTR [rax+0x2],dl
   14002502e:	add    al,BYTE PTR [rax]
   140025030:	movabs eax,ds:0x3c0000110e000010
   140025039:	add    al,BYTE PTR [rdx]
   14002503b:	add    BYTE PTR [rsi],cl
   14002503d:	adc    DWORD PTR [rax],eax
   14002503f:	add    BYTE PTR [rax],dl
   140025041:	adc    DWORD PTR [rax],eax
   140025043:	add    BYTE PTR [rdx+rax*1],ch
   140025046:	add    al,BYTE PTR [rax]
   140025048:	adc    BYTE PTR [rcx],dl
   14002504a:	add    BYTE PTR [rax],al
   14002504c:	rex.WX adc al,BYTE PTR [rax]
   14002504f:	add    BYTE PTR [rax+0x2],ah
   140025052:	add    al,BYTE PTR [rax]
   140025054:	push   rax
   140025055:	adc    al,BYTE PTR [rax]
   140025057:	add    BYTE PTR [rbp-0x3bffffec],bh
   14002505d:	add    al,BYTE PTR [rdx]
   14002505f:	add    BYTE PTR [rbp-0x3affffec],bh
   140025065:	adc    al,0x0
   140025067:	add    BYTE PTR [rax-0x3afffdfe],dh
   14002506d:	adc    al,0x0
   14002506f:	add    BYTE PTR [rbp-0x67ffffe6],bl
   140025075:	add    al,BYTE PTR [rdx]
   140025077:	add    BYTE PTR [rbp+0xd00001a],bl
   14002507d:	sbb    eax,DWORD PTR [rax]
   14002507f:	add    BYTE PTR [rax+0xd000202],cl
   140025085:	sbb    eax,DWORD PTR [rax]
   140025087:	add    BYTE PTR [rax+0x7800001b],dl
   14002508d:	add    al,BYTE PTR [rdx]
   14002508f:	add    BYTE PTR [rax+0x7d00001b],dl
   140025095:	(bad)  
   140025096:	add    BYTE PTR [rax],al
   140025098:	sub    BYTE PTR [rbx],al
   14002509a:	add    al,BYTE PTR [rax]
   14002509c:	jge    0x1400250bc
   14002509e:	add    BYTE PTR [rax],al
   1400250a0:	(bad)  
   1400250a1:	and    DWORD PTR [rax],eax
   1400250a3:	add    BYTE PTR [rbx+rax*1],dl
   1400250a6:	add    al,BYTE PTR [rax]
   1400250a8:	(bad)  
   1400250a9:	and    DWORD PTR [rax],eax
   1400250ab:	add    BYTE PTR [rdi],ah
   1400250ad:	and    DWORD PTR [rax],eax
   1400250af:	add    BYTE PTR [rax],al
   1400250b1:	add    eax,DWORD PTR [rdx]
   1400250b3:	add    BYTE PTR [rdi],ah
   1400250b5:	and    DWORD PTR [rax],eax
   1400250b7:	add    BYTE PTR [rbx],dl
   1400250b9:	and    eax,0x2ec0000
   1400250be:	add    al,BYTE PTR [rax]
   1400250c0:	adc    esp,DWORD PTR [rip+0x25ba0000]        # 0x165bc50c6
   1400250c6:	add    BYTE PTR [rax],al
   1400250c8:	fadd   QWORD PTR [rdx]
   1400250ca:	add    al,BYTE PTR [rax]
   1400250cc:	shl    BYTE PTR [rip+0x267e0000],0x0        # 0x1668050d3
   1400250d3:	add    BYTE PTR [rsi+rax*1],dl
   1400250d6:	add    al,BYTE PTR [rax]
   1400250d8:	shl    BYTE PTR [rsi],1
   1400250da:	add    BYTE PTR [rax],al
   1400250dc:	mul    BYTE PTR [rsi]
   1400250de:	add    BYTE PTR [rax],al
   1400250e0:	call   0xc00252e9
   1400250e5:	sub    BYTE PTR [rax],al
   1400250e7:	add    bh,al
   1400250e9:	sub    BYTE PTR [rax],al
   1400250eb:	add    BYTE PTR [rbx+rax*1],bh
   1400250ee:	add    al,BYTE PTR [rax]
   1400250f0:	shr    BYTE PTR [rax],1
   1400250f2:	add    BYTE PTR [rax],al
   1400250f4:	(bad)  
   1400250f5:	sub    DWORD PTR [rax],eax
   1400250f7:	add    al,ch
   1400250f9:	add    al,0x2
   1400250fb:	add    BYTE PTR [rax],dh
   1400250fd:	sub    al,BYTE PTR [rax]
   1400250ff:	add    BYTE PTR [rdx+rbp*1+0x0],cl
   140025103:	add    al,ch
   140025105:	add    al,0x2
   140025107:	add    BYTE PTR [rax+0x2a],dl
   14002510a:	add    BYTE PTR [rax],al
   14002510c:	jns    0x140025138
   14002510e:	add    BYTE PTR [rax],al
   140025110:	call   0x1b0025319
   140025115:	sub    eax,DWORD PTR [rax]
   140025117:	add    BYTE PTR [rbx+rbp*1+0x4e80000],cl
   14002511e:	add    al,BYTE PTR [rax]
   140025120:	sub    al,0x0
   140025123:	add    BYTE PTR [rdi+0x3c00002c],al
   140025129:	add    eax,DWORD PTR [rdx]
   14002512b:	add    BYTE PTR [rax-0x39ffffd4],dl
   140025131:	sub    al,0x0
   140025133:	add    al,ch
   140025135:	add    al,0x2
   140025137:	add    BYTE PTR [rax+0x2d],dh
   14002513a:	add    BYTE PTR [rax],al
   14002513c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002513d:	sub    eax,0x4e80000
   140025142:	add    al,BYTE PTR [rax]
   140025144:	jo     0x140025175
   140025146:	add    BYTE PTR [rax],al
   140025148:	mov    WORD PTR [rdi],gs
   14002514a:	add    BYTE PTR [rax],al
   14002514c:	call   0x100025355
   140025151:	xor    DWORD PTR [rax],eax
   140025153:	add    ah,bl
   140025155:	xor    DWORD PTR [rax],eax
   140025157:	add    al,ch
   140025159:	add    al,0x2
   14002515b:	add    al,ah
   14002515d:	xor    al,BYTE PTR [rax]
   14002515f:	add    BYTE PTR [rdi],ah
   140025161:	xor    eax,DWORD PTR [rax]
   140025163:	add    BYTE PTR [rbx+rax*1],bh
   140025166:	add    al,BYTE PTR [rax]
   140025168:	jo     0x14002519d
   14002516a:	add    BYTE PTR [rax],al
   14002516c:	mov    bh,0x33
   14002516e:	add    BYTE PTR [rax],al
   140025170:	cmp    al,0x3
   140025172:	add    al,BYTE PTR [rax]
   140025174:	and    BYTE PTR [rax+rax*1],dh
   140025177:	add    BYTE PTR [rsp+rsi*1],bh
   14002517a:	add    BYTE PTR [rax],al
   14002517c:	call   0x160025385
   140025181:	xor    eax,0x35960000
   140025186:	add    BYTE PTR [rax],al
   140025188:	call   0x130025391
   14002518d:	(bad)  
   14002518e:	add    BYTE PTR [rax],al
   140025190:	(bad)  
   140025191:	cmp    BYTE PTR [rax],al
   140025193:	add    BYTE PTR [rbx+rax*1],bh
   140025196:	add    al,BYTE PTR [rax]
   140025198:	cmp    BYTE PTR [rax],al
   14002519b:	add    BYTE PTR [rsi+0x3c000038],bl
   1400251a1:	add    eax,DWORD PTR [rdx]
   1400251a3:	add    BYTE PTR [rax-0x1ffffc8],ah
   1400251a9:	cmp    BYTE PTR [rax],al
   1400251ab:	add    BYTE PTR [rbx+rax*1],bh
   1400251ae:	add    al,BYTE PTR [rax]
   1400251b0:	add    BYTE PTR [rcx],bh
   1400251b2:	add    BYTE PTR [rax],al
   1400251b4:	sbb    al,0x39
   1400251b6:	add    BYTE PTR [rax],al
   1400251b8:	call   0x1a00253c1
   1400251bd:	cmp    eax,DWORD PTR [rax]
   1400251bf:	add    BYTE PTR [rbx+rdi*1+0x0],bh
   1400251c3:	add    al,ch
   1400251c5:	add    al,0x2
   1400251c7:	add    BYTE PTR [rax-0x30ffffc5],al
   1400251cd:	cmp    eax,DWORD PTR [rax]
   1400251cf:	add    BYTE PTR [rbx+rax*1+0x2],al
   1400251d3:	add    al,dl
   1400251d5:	cmp    eax,DWORD PTR [rax]
   1400251d7:	add    BYTE PTR [rdi],bl
   1400251d9:	cmp    al,0x0
   1400251db:	add    BYTE PTR [rbx+rax*1+0x2],al
   1400251df:	add    BYTE PTR [rax],ah
   1400251e1:	cmp    al,0x0
   1400251e3:	add    BYTE PTR [rbx+0x3c],dh
   1400251e6:	add    BYTE PTR [rax],al
   1400251e8:	call   0xc00253f1
   1400251ed:	cmp    al,0x0
   1400251ef:	add    bl,dl
   1400251f1:	cmp    al,0x0
   1400251f3:	add    al,ch
   1400251f5:	add    al,0x2
   1400251f7:	add    BYTE PTR [rax],dl
   1400251f9:	add    BYTE PTR ds:[rax],al
   1400251fc:	push   rdi
   1400251fd:	add    BYTE PTR ds:[rax],al
   140025200:	cmp    al,0x3
   140025202:	add    al,BYTE PTR [rax]
   140025204:	rex (bad) 
   140025206:	add    BYTE PTR [rax],al
   140025208:	lods   al,BYTE PTR ds:[rsi]
   140025209:	(bad)  
   14002520a:	add    BYTE PTR [rax],al
   14002520c:	nop
   14002520d:	add    al,0x2
   14002520f:	add    BYTE PTR [rax-0x43ffffc1],dh
   140025215:	add    BYTE PTR [rax],al
   140025218:	add    r8,QWORD PTR [rdx]
   14002521b:	add    al,al
   14002521d:	add    BYTE PTR [rax],al
   140025220:	cmp    eax,DWORD PTR [rcx+0x0]
   140025223:	add    BYTE PTR [rax+0x30000204],dl
   140025229:	rex.XB add BYTE PTR [r8],al
   14002522c:	cdq    
   14002522d:	rex.XB add BYTE PTR [r8],al
   140025230:	call   0x120025439
   140025235:	add    BYTE PTR [rax],r8b
   140025238:	sub    BYTE PTR [rbp+0x0],al
   14002523b:	add    al,ch
   14002523d:	add    al,0x2
   14002523f:	add    BYTE PTR [rax],dh
   140025241:	add    BYTE PTR [r8],r8b
   140025244:	js     0x14002528b
   140025246:	add    BYTE PTR [rax],al
   140025248:	call   0xc0025451
   14002524d:	add    BYTE PTR [r8],r8b
   140025250:	rex.R
   140025251:	rex.RX add BYTE PTR [rax],r8b
   140025254:	call   0x19002545d
   140025259:	rex.RX add BYTE PTR [rax],r8b
   14002525c:	int3   
   14002525d:	rex.RXB add BYTE PTR [r8],r8b
   140025260:	test   BYTE PTR [rbx],al
   140025262:	add    al,BYTE PTR [rax]
   140025264:	int3   
   140025265:	rex.RXB add BYTE PTR [r8],r8b
   140025268:	rex.W
   140025269:	rex.WB add BYTE PTR [r8],al
   14002526c:	jo     0x140025271
   14002526e:	add    al,BYTE PTR [rax]
   140025270:	rex.W
   140025271:	rex.WB add BYTE PTR [r8],al
   140025274:	mov    esi,0x60000049
   140025279:	add    eax,DWORD PTR [rdx]
   14002527b:	add    al,al
   14002527d:	rex.WB add BYTE PTR [r8],al
   140025280:	fwait
   140025281:	rex.WX add BYTE PTR [rax],al
   140025284:	jl     0x14002528a
   140025286:	add    al,BYTE PTR [rax]
   140025288:	movabs al,ds:0xe800004b9c00004a
   140025291:	add    al,0x2
   140025293:	add    BYTE PTR [rax+0x500004b],ah
   140025299:	rex.WR add BYTE PTR [rax],r8b
   14002529c:	call   0x1500254a5
   1400252a1:	rex.WR add BYTE PTR [rax],r8b
   1400252a4:	(bad)  
   1400252a5:	rex.WR add BYTE PTR [rax],r8b
   1400252a8:	movabs al,ds:0x6c00004c70000203
   1400252b1:	rol    BYTE PTR [rax],0x0
   1400252b4:	lods   al,BYTE PTR ds:[rsi]
   1400252b5:	add    eax,DWORD PTR [rdx]
   1400252b7:	add    BYTE PTR [rax-0x40],dh
   1400252ba:	add    BYTE PTR [rax],al
   1400252bc:	add    al,0x0
   1400252bf:	add    BYTE PTR [rsp+rax*1],cl
   1400252c2:	add    al,BYTE PTR [rax]
   1400252c4:	add    al,0x0
   1400252c7:	add    BYTE PTR [rax+rax*8+0x3f80000],cl
   1400252ce:	add    al,BYTE PTR [rax]
   1400252d0:	mov    eax,es
   1400252d2:	add    BYTE PTR [rax],al
   1400252d4:	ret    
   1400252d5:	rol    BYTE PTR [rax],0x0
   1400252d8:	in     al,0x3
   1400252da:	add    al,BYTE PTR [rax]
   1400252dc:	ret    
   1400252dd:	rol    BYTE PTR [rax],0x0
   1400252e0:	rol    al,cl
   1400252e2:	add    BYTE PTR [rax],al
   1400252e4:	(bad)  
   1400252e5:	add    eax,DWORD PTR [rdx]
   1400252e7:	add    dl,dl
   1400252e9:	rol    BYTE PTR [rax],0x0
   1400252ec:	fadd   st,st(0)
   1400252ee:	add    BYTE PTR [rax],al
   1400252f0:	(bad)
   1400252f4:	loopne 0x1400252b6
   1400252f6:	add    BYTE PTR [rax],al
   1400252f8:	or     ecx,eax
   1400252fa:	add    BYTE PTR [rax],al
   1400252fc:	cmp    al,0x3
   1400252fe:	add    al,BYTE PTR [rax]
   140025300:	or     ecx,eax
   140025302:	add    BYTE PTR [rax],al
   140025304:	ins    DWORD PTR es:[rdi],dx
   140025305:	rol    DWORD PTR [rax],0x0
   140025308:	sub    al,0x4
   14002530a:	add    al,BYTE PTR [rax]
   14002530c:	ins    DWORD PTR es:[rdi],dx
   14002530d:	rol    DWORD PTR [rax],0x0
   140025310:	add    al,ah
   140025312:	add    BYTE PTR [rax],al
   140025314:	adc    al,0x4
   140025316:	add    al,BYTE PTR [rax]
   140025318:	(bad)  
   140025319:	(bad)  
   14002531a:	add    BYTE PTR [rax],al
   14002531c:	mov    edi,0x140000c4
   140025321:	(bad)  
   140025322:	add    al,BYTE PTR [rax]
   140025324:	rol    ah,0x0
   140025327:	add    BYTE PTR [rip+0x400000c5],ch        # 0x1800253f2
   14002532d:	add    al,0x2
   14002532f:	add    BYTE PTR [rax],dh
   140025331:	(bad)
   140025334:	(bad)
   140025338:	sub    al,0x12
   14002533a:	add    al,BYTE PTR [rax]
   14002533c:	(bad)
   140025340:	stos   BYTE PTR es:[rdi],al
   140025341:	(bad)
   140025344:	(bad)  
   140025345:	add    al,0x2
   140025347:	add    BYTE PTR [rdx-0x50ffff3b],ch
   14002534d:	(bad)
   140025350:	push   rax
   140025351:	add    al,0x2
   140025353:	add    BYTE PTR [rax-0x4affff3b],dh
   140025359:	mov    BYTE PTR [rax],0x0
   14002535c:	jl     0x140025362
   14002535e:	add    al,BYTE PTR [rax]
   140025360:	rol    dh,0x0
   140025363:	add    BYTE PTR [rsi],ch
   140025365:	mov    DWORD PTR [rax],0x2049000
   14002536b:	add    BYTE PTR [rax],dh
   14002536d:	mov    DWORD PTR [rax],0xc76400
   140025373:	add    al,ch
   140025375:	add    al,0x2
   140025377:	add    BYTE PTR [rax-0x39],dh
   14002537a:	add    BYTE PTR [rax],al
   14002537c:	nop
   14002537d:	mov    DWORD PTR [rax],0x2120000
   140025383:	add    BYTE PTR [rax-0x3ffff39],dl
   140025389:	mov    DWORD PTR [rax],0x204c400
   14002538f:	add    ah,bh
   140025391:	mov    DWORD PTR [rax],0xc80600
   140025397:	add    BYTE PTR [rax+0x6000204],dh
   14002539d:	enter  0x0,0xb
   1400253a1:	enter  0x0,0xa0
   1400253a5:	add    al,0x2
   1400253a7:	add    BYTE PTR [rax],dh
   1400253a9:	fadd   DWORD PTR [rax]
   1400253ab:	add    BYTE PTR [rsi],cl
   1400253ad:	fld    DWORD PTR [rax]
   1400253af:	add    BYTE PTR [rax+0x20000204],dl
   1400253b5:	fld    DWORD PTR [rax]
   1400253b7:	add    BYTE PTR [rax],dh
   1400253b9:	fiadd  DWORD PTR [rax]
   1400253bb:	add    BYTE PTR [rsi+rax*1],dl
   1400253be:	add    al,BYTE PTR [rax]
   1400253c0:	rcr    dl,0x0
   1400253c3:	add    BYTE PTR [rax-0x25],ah
   1400253c6:	add    BYTE PTR [rax],al
   1400253c8:	sub    al,0x12
   1400253ca:	add    al,BYTE PTR [rax]
   1400253cc:	rcr    bl,1
   1400253ce:	add    BYTE PTR [rax],al
   1400253d0:	(bad)  
   1400253d1:	fadd   QWORD PTR [rax]
   1400253d3:	add    al,bl
   1400253d5:	add    al,0x2
   1400253d7:	add    BYTE PTR [rax+0x310000dc],dl
   1400253dd:	fld    QWORD PTR [rax]
   1400253df:	add    al,ah
   1400253e1:	add    al,0x2
   1400253e3:	add    BYTE PTR [rax-0x23],al
   1400253e6:	add    BYTE PTR [rax],al
   1400253e8:	pop    rdi
   1400253e9:	fld    QWORD PTR [rax]
   1400253eb:	add    al,ch
   1400253ed:	add    al,0x2
   1400253ef:	add    BYTE PTR [rax+0x370000dd],dl
   1400253f5:	fiadd  WORD PTR [rax]
   1400253f7:	add    al,dh
   1400253f9:	add    al,0x2
   1400253fb:	add    BYTE PTR [rax-0x22],al
   1400253fe:	add    BYTE PTR [rax],al
   140025400:	out    0xde,eax
   140025402:	add    BYTE PTR [rax],al
   140025404:	lock add al,0x2
   140025407:	add    BYTE PTR [rax+0x270000df],dh
   14002540d:	loopne 0x14002540f
   14002540f:	add    BYTE PTR [rax],dh
   140025411:	add    eax,0xe0270002
   140025416:	add    BYTE PTR [rax],al
   140025418:	mov    dl,0xe0
   14002541a:	add    BYTE PTR [rax],al
   14002541c:	adc    al,0x5
   14002541e:	add    al,BYTE PTR [rax]
   140025420:	mov    dl,0xe0
   140025422:	add    BYTE PTR [rax],al
   140025424:	int    0xe0
   140025426:	add    BYTE PTR [rax],al
   140025428:	add    al,0x5
   14002542a:	add    al,BYTE PTR [rax]
   14002542c:	shl    al,1
   14002542e:	add    BYTE PTR [rax],al
   140025430:	adc    eax,0x680000e1
   140025435:	add    eax,0xe1150002
   14002543a:	add    BYTE PTR [rax],al
   14002543c:	ret    0xe1
   14002543f:	add    BYTE PTR [rax+0x5],dl
   140025442:	add    al,BYTE PTR [rax]
   140025444:	ret    0xe1
   140025447:	add    al,ah
   140025449:	loope  0x14002544b
   14002544b:	add    BYTE PTR [rax+0x5],al
   14002544e:	add    al,BYTE PTR [rax]
   140025450:	loopne 0x140025433
   140025452:	add    BYTE PTR [rax],al
   140025454:	fwait
   140025455:	in     eax,0x0
   140025457:	add    BYTE PTR [rax+0x5],bh
   14002545a:	add    al,BYTE PTR [rax]
   14002545c:	movabs al,ds:0xa80000e5f30000e5
   140025465:	add    eax,0xe5f30002
   14002546a:	add    BYTE PTR [rax],al
   14002546c:	adc    bh,ah
   14002546e:	add    BYTE PTR [rax],al
   140025470:	xchg   esp,eax
   140025471:	add    eax,0xe7100002
   140025476:	add    BYTE PTR [rax],al
   140025478:	xor    cl,dh
   14002547a:	add    BYTE PTR [rax],al
   14002547c:	test   BYTE PTR [rip+0xfffffffff1300002],al        # 0x131325484
   140025482:	add    BYTE PTR [rax],al
   140025484:	push   rsp
   140025485:	icebp  
   140025486:	add    BYTE PTR [rax],al
   140025488:	or     BYTE PTR [rsi],al
   14002548a:	add    al,BYTE PTR [rax]
   14002548c:	push   rsp
   14002548d:	icebp  
   14002548e:	add    BYTE PTR [rax],al
   140025490:	mov    WORD PTR [rsi],es
   140025492:	add    DWORD PTR [rax],eax
   140025494:	in     al,0x5
   140025496:	add    al,BYTE PTR [rax]
   140025498:	mov    WORD PTR [rsi],es
   14002549a:	add    DWORD PTR [rax],eax
   14002549c:	add    ecx,DWORD PTR [rax]
   14002549e:	add    DWORD PTR [rax],eax
   1400254a0:	rol    BYTE PTR [rip+0x8100002],0x1        # 0x1481254a9
   1400254a7:	add    BYTE PTR [rbx+0x9],bh
   1400254aa:	add    DWORD PTR [rax],eax
   1400254ac:	adc    al,0x6
   1400254ae:	add    al,BYTE PTR [rax]
   1400254b0:	or     BYTE PTR [rcx],0x1
   1400254b3:	add    al,al
   1400254b5:	or     DWORD PTR [rcx],eax
   1400254b7:	add    BYTE PTR [rax+0x6],ch
   1400254ba:	add    al,BYTE PTR [rax]
   1400254bc:	ror    BYTE PTR [rcx],0x1
   1400254bf:	add    BYTE PTR [rbx+rdx*1+0x1],dl
   1400254c3:	add    BYTE PTR [rax+0x6],cl
   1400254c6:	add    al,BYTE PTR [rax]
   1400254c8:	push   rsp
   1400254c9:	adc    eax,DWORD PTR [rcx]
   1400254cb:	add    cl,bh
   1400254cd:	adc    eax,DWORD PTR [rcx]
   1400254cf:	add    BYTE PTR [rax],ch
   1400254d1:	(bad)  
   1400254d2:	add    al,BYTE PTR [rax]
   1400254d4:	and    BYTE PTR [rcx+rax*1],dl
   1400254d7:	add    BYTE PTR [rbx+0x14],al
   1400254da:	add    DWORD PTR [rax],eax
   1400254dc:	rcl    BYTE PTR [rcx],1
   1400254de:	add    al,BYTE PTR [rax]
   1400254e0:	rex.XB adc al,0x1
   1400254e3:	add    BYTE PTR [rsi+0x14],bh
   1400254e6:	add    DWORD PTR [rax],eax
   1400254e8:	mov    BYTE PTR [rsi],al
   1400254ea:	add    al,BYTE PTR [rax]
   1400254ec:	jle    0x140025502
   1400254ee:	add    DWORD PTR [rax],eax
   1400254f0:	cwde   
   1400254f1:	adc    al,0x1
   1400254f3:	add    BYTE PTR [rax+0x6],bh
   1400254f6:	add    al,BYTE PTR [rax]
   1400254f8:	movabs al,ds:0xa0000114d9000114
   140025501:	add    eax,DWORD PTR [rdx]
   140025503:	add    al,ah
   140025505:	adc    al,0x1
   140025507:	add    BYTE PTR [rcx],bl
   140025509:	adc    eax,0x3a00001
   14002550e:	add    al,BYTE PTR [rax]
   140025510:	and    BYTE PTR [rip+0x15590001],dl        # 0x1555b5517
   140025516:	add    DWORD PTR [rax],eax
   140025518:	movabs al,ds:0x9900011560000203
   140025521:	adc    eax,0x3a00001
   140025526:	add    al,BYTE PTR [rax]
   140025528:	movabs al,ds:0xa0000115d9000115
   140025531:	add    eax,DWORD PTR [rdx]
   140025533:	add    al,ah
   140025535:	adc    eax,0x16190001
   14002553a:	add    DWORD PTR [rax],eax
   14002553c:	movabs al,ds:0x5900011620000203
   140025545:	(bad)  
   140025546:	add    DWORD PTR [rax],eax
   140025548:	movabs al,ds:0x9900011660000203
   140025551:	(bad)  
   140025552:	add    DWORD PTR [rax],eax
   140025554:	movabs al,ds:0xc3000116a0000203
   14002555d:	(bad)  
   14002555e:	add    DWORD PTR [rax],eax
   140025560:	rcl    BYTE PTR [rcx],1
   140025562:	add    al,BYTE PTR [rax]
   140025564:	ret    
   140025565:	(bad)  
   140025566:	add    DWORD PTR [rax],eax
   140025568:	(bad)  
   140025569:	(bad)  
   14002556a:	add    DWORD PTR [rax],eax
   14002556c:	lods   al,BYTE PTR ds:[rsi]
   14002556d:	(bad)  
   14002556e:	add    al,BYTE PTR [rax]
   140025570:	(bad)  
   140025571:	(bad)  
   140025572:	add    DWORD PTR [rax],eax
   140025574:	rex.WB (bad) 
   140025576:	add    DWORD PTR [rax],eax
   140025578:	pushf  
   140025579:	(bad)  
   14002557a:	add    al,BYTE PTR [rax]
   14002557c:	push   rax
   14002557d:	(bad)  
   14002557e:	add    DWORD PTR [rax],eax
   140025580:	jae    0x140025599
   140025582:	add    DWORD PTR [rax],eax
   140025584:	rcl    BYTE PTR [rcx],1
   140025586:	add    al,BYTE PTR [rax]
   140025588:	jae    0x1400255a1
   14002558a:	add    DWORD PTR [rax],eax
   14002558c:	scas   al,BYTE PTR es:[rdi]
   14002558d:	(bad)  
   14002558e:	add    DWORD PTR [rax],eax
   140025590:	rol    BYTE PTR [rsi],1
   140025592:	add    al,BYTE PTR [rax]
   140025594:	scas   al,BYTE PTR es:[rdi]
   140025595:	(bad)  
   140025596:	add    DWORD PTR [rax],eax
   140025598:	enter  0x117,0x0
   14002559c:	rol    BYTE PTR [rsi],0x2
   14002559f:	add    al,dl
   1400255a1:	(bad)  
   1400255a2:	add    DWORD PTR [rax],eax
   1400255a4:	not    DWORD PTR [rdi]
   1400255a6:	add    DWORD PTR [rax],eax
   1400255a8:	sub    al,0x7
   1400255aa:	add    al,BYTE PTR [rax]
   1400255ac:	not    DWORD PTR [rdi]
   1400255ae:	add    DWORD PTR [rax],eax
   1400255b0:	add    al,0x18
   1400255b2:	add    DWORD PTR [rax],eax
   1400255b4:	sbb    BYTE PTR [rdi],al
   1400255b6:	add    al,BYTE PTR [rax]
   1400255b8:	add    al,0x18
   1400255ba:	add    DWORD PTR [rax],eax
   1400255bc:	sbb    BYTE PTR [rax],0x1
   1400255bf:	add    BYTE PTR [rdi+rax*1],al
   1400255c2:	add    al,BYTE PTR [rax]
   1400255c4:	sbb    BYTE PTR [rax],0x1
   1400255c7:	add    BYTE PTR [rbp-0xbfffee8],al
   1400255cd:	(bad)  
   1400255ce:	add    al,BYTE PTR [rax]
   1400255d0:	test   DWORD PTR [rax],ebx
   1400255d2:	add    DWORD PTR [rax],eax
   1400255d4:	lahf   
   1400255d5:	sbb    BYTE PTR [rcx],al
   1400255d7:	add    ah,ah
   1400255d9:	(bad)  
   1400255da:	add    al,BYTE PTR [rax]
   1400255dc:	movabs al,ds:0xa0000118d9000118
   1400255e5:	add    eax,DWORD PTR [rdx]
   1400255e7:	add    al,ah
   1400255e9:	sbb    BYTE PTR [rcx],al
   1400255eb:	add    BYTE PTR [rbx],al
   1400255ed:	sbb    DWORD PTR [rcx],eax
   1400255ef:	add    al,dl
   1400255f1:	adc    DWORD PTR [rdx],eax
   1400255f3:	add    BYTE PTR [rbx],al
   1400255f5:	sbb    DWORD PTR [rcx],eax
   1400255f7:	add    BYTE PTR [rdi+0x19],ch
   1400255fa:	add    DWORD PTR [rax],eax
   1400255fc:	rex.W (bad) 
   1400255fe:	add    al,BYTE PTR [rax]
   140025600:	outs   dx,DWORD PTR ds:[rsi]
   140025601:	sbb    DWORD PTR [rcx],eax
   140025603:	add    BYTE PTR [rcx+0x38000119],cl
   140025609:	(bad)  
   14002560a:	add    al,BYTE PTR [rax]
   14002560c:	nop
   14002560d:	sbb    DWORD PTR [rcx],eax
   14002560f:	add    BYTE PTR [rdi-0x2ffffee7],dh
   140025615:	adc    DWORD PTR [rdx],eax
   140025617:	add    BYTE PTR [rdi+0x54000119],dh
   14002561d:	sbb    al,BYTE PTR [rcx]
   14002561f:	add    BYTE PTR [rdi+rax*1+0x2],ch
   140025623:	add    BYTE PTR [rdx+rbx*1+0x1],dl
   140025627:	add    BYTE PTR [rsi+0x1a],ch
   14002562a:	add    DWORD PTR [rax],eax
   14002562c:	pop    rsp
   14002562d:	(bad)  
   14002562e:	add    al,BYTE PTR [rax]
   140025630:	jo     0x14002564c
   140025632:	add    DWORD PTR [rax],eax
   140025634:	xchg   ebx,eax
   140025635:	sbb    al,BYTE PTR [rcx]
   140025637:	add    ah,al
   140025639:	or     BYTE PTR [rdx],al
   14002563b:	add    BYTE PTR [rbx-0x5ffffee6],dl
   140025641:	sbb    al,BYTE PTR [rcx]
   140025643:	add    BYTE PTR [rdi+rax*1+0x1aa00002],dh
   14002564a:	add    DWORD PTR [rax],eax
   14002564c:	in     al,0x1a
   14002564e:	add    DWORD PTR [rax],eax
   140025650:	movabs al,ds:0xe900011ae4000207
   140025659:	sbb    al,BYTE PTR [rcx]
   14002565b:	add    BYTE PTR [rax-0x16fffdf9],dl
   140025661:	sbb    al,BYTE PTR [rcx]
   140025663:	add    BYTE PTR [rbx],al
   140025665:	sbb    eax,DWORD PTR [rcx]
   140025667:	add    BYTE PTR [rax+0x10000207],al
   14002566d:	sbb    eax,DWORD PTR [rcx]
   14002566f:	add    BYTE PTR [rcx+0x1b],cl
   140025672:	add    DWORD PTR [rax],eax
   140025674:	movabs al,ds:0x8900011b50000203
   14002567d:	sbb    eax,DWORD PTR [rcx]
   14002567f:	add    BYTE PTR [rax-0x6ffffdfd],ah
   140025685:	sbb    eax,DWORD PTR [rcx]
   140025687:	add    cl,cl
   140025689:	sbb    eax,DWORD PTR [rcx]
   14002568b:	add    BYTE PTR [rax-0x2ffffdfd],ah
   140025691:	sbb    eax,DWORD PTR [rcx]
   140025693:	add    bl,dh
   140025695:	sbb    eax,DWORD PTR [rcx]
   140025697:	add    al,dl
   140025699:	adc    DWORD PTR [rdx],eax
   14002569b:	add    bl,dh
   14002569d:	sbb    eax,DWORD PTR [rcx]
   14002569f:	add    BYTE PTR [rdi+0x1c],bl
   1400256a2:	add    DWORD PTR [rax],eax
   1400256a4:	fadd   DWORD PTR [rdi]
   1400256a6:	add    al,BYTE PTR [rax]
   1400256a8:	pop    rdi
   1400256a9:	sbb    al,0x1
   1400256ab:	add    BYTE PTR [rcx+0x1c],bh
   1400256ae:	add    DWORD PTR [rax],eax
   1400256b0:	enter  0x207,0x0
   1400256b4:	sbb    BYTE PTR [rcx+rax*1],0x0
   1400256b8:	movabs ds:0xa3000211d000011c,eax
   1400256c1:	sbb    al,0x1
   1400256c3:	add    dh,bl
   1400256c5:	sbb    al,0x1
   1400256c7:	add    ah,bh
   1400256c9:	(bad)  
   1400256ca:	add    al,BYTE PTR [rax]
   1400256cc:	ficomp WORD PTR [rcx+rax*1]
   1400256cf:	add    al,bh
   1400256d1:	sbb    al,0x1
   1400256d3:	add    ah,ch
   1400256d5:	(bad)  
   1400256d6:	add    al,BYTE PTR [rax]
   1400256d8:	add    BYTE PTR [rip+0x1d230001],bl        # 0x15d2556df
   1400256de:	add    DWORD PTR [rax],eax
   1400256e0:	rcl    BYTE PTR [rcx],1
   1400256e2:	add    al,BYTE PTR [rax]
   1400256e4:	and    ebx,DWORD PTR [rip+0x1d8f0001]        # 0x15d9156eb
   1400256ea:	add    DWORD PTR [rax],eax
   1400256ec:	and    BYTE PTR [rax],cl
   1400256ee:	add    al,BYTE PTR [rax]
   1400256f0:	(bad)  
   1400256f1:	sbb    eax,0x1da90001
   1400256f6:	add    DWORD PTR [rax],eax
   1400256f8:	adc    BYTE PTR [rax],cl
   1400256fa:	add    al,BYTE PTR [rax]
   1400256fc:	mov    al,0x1d
   1400256fe:	add    DWORD PTR [rax],eax
   140025700:	rcr    DWORD PTR [rip+0x11d00001],cl        # 0x151d25707
   140025706:	add    al,BYTE PTR [rax]
   140025708:	rcr    DWORD PTR [rip+0x1e0e0001],cl        # 0x15e10570f
   14002570e:	add    DWORD PTR [rax],eax
   140025710:	or     BYTE PTR [rdx],r8b
   140025713:	add    BYTE PTR [rsi],cl
   140025715:	(bad)  
   140025716:	add    DWORD PTR [rax],eax
   140025718:	sub    BYTE PTR [rsi],bl
   14002571a:	add    DWORD PTR [rax],eax
   14002571c:	xor    al,0x8
   14002571e:	add    al,BYTE PTR [rax]
   140025720:	xor    BYTE PTR [rsi],bl
   140025722:	add    DWORD PTR [rax],eax
   140025724:	push   rbx
   140025725:	(bad)  
   140025726:	add    DWORD PTR [rax],eax
   140025728:	rcl    BYTE PTR [rcx],1
   14002572a:	add    al,BYTE PTR [rax]
   14002572c:	push   rbx
   14002572d:	(bad)  
   14002572e:	add    DWORD PTR [rax],eax
   140025730:	mov    edi,0x6800011e
   140025735:	or     BYTE PTR [rdx],al
   140025737:	add    BYTE PTR [rdi-0x26fffee2],bh
   14002573d:	(bad)  
   14002573e:	add    DWORD PTR [rax],eax
   140025740:	pop    rax
   140025741:	or     BYTE PTR [rdx],al
   140025743:	add    al,ah
   140025745:	(bad)  
   140025746:	add    DWORD PTR [rax],eax
   140025748:	add    ebx,DWORD PTR [rdi]
   14002574a:	add    DWORD PTR [rax],eax
   14002574c:	(bad)  
   14002574d:	or     BYTE PTR [rdx],al
   14002574f:	add    BYTE PTR [rbx],al
   140025751:	(bad)  
   140025752:	add    DWORD PTR [rax],eax
   140025754:	adc    BYTE PTR [rdi],bl
   140025756:	add    DWORD PTR [rax],eax
   140025758:	mov    al,0x8
   14002575a:	add    al,BYTE PTR [rax]
   14002575c:	adc    BYTE PTR [rdi],bl
   14002575e:	add    DWORD PTR [rax],eax
   140025760:	push   rsp
   140025761:	(bad)  
   140025762:	add    DWORD PTR [rax],eax
   140025764:	pushf  
   140025765:	or     BYTE PTR [rdx],al
   140025767:	add    BYTE PTR [rdi+rbx*1+0x1],dl
   14002576b:	add    BYTE PTR [rcx+0x1f],bl
   14002576e:	add    DWORD PTR [rax],eax
   140025770:	mov    WORD PTR [rax],cs
   140025772:	add    al,BYTE PTR [rax]
   140025774:	pop    rcx
   140025775:	(bad)  
   140025776:	add    DWORD PTR [rax],eax
   140025778:	jae    0x140025799
   14002577a:	add    DWORD PTR [rax],eax
   14002577c:	jl     0x140025786
   14002577e:	add    al,BYTE PTR [rax]
   140025780:	sbb    BYTE PTR [rdi],0x1
   140025783:	add    BYTE PTR [rbx-0x2ffffee1],ah
   140025789:	adc    DWORD PTR [rdx],eax
   14002578b:	add    BYTE PTR [rbx-0x21fffee1],ah
   140025791:	(bad)  
   140025792:	add    DWORD PTR [rax],eax
   140025794:	loopne 0x14002579e
   140025796:	add    al,BYTE PTR [rax]
   140025798:	ficomp WORD PTR [rdi]
   14002579a:	add    DWORD PTR [rax],eax
   14002579c:	clc    
   14002579d:	(bad)  
   14002579e:	add    DWORD PTR [rax],eax
   1400257a0:	ror    BYTE PTR [rax],1
   1400257a2:	add    al,BYTE PTR [rax]
   1400257a4:	add    BYTE PTR [rax],ah
   1400257a6:	add    DWORD PTR [rax],eax
   1400257a8:	and    esp,DWORD PTR [rax]
   1400257aa:	add    DWORD PTR [rax],eax
   1400257ac:	rcl    BYTE PTR [rcx],1
   1400257ae:	add    al,BYTE PTR [rax]
   1400257b0:	and    esp,DWORD PTR [rax]
   1400257b2:	add    DWORD PTR [rax],eax
   1400257b4:	pop    rsi
   1400257b5:	and    BYTE PTR [rcx],al
   1400257b7:	add    BYTE PTR [rcx+rcx*1],al
   1400257ba:	add    al,BYTE PTR [rax]
   1400257bc:	pop    rsi
   1400257bd:	and    BYTE PTR [rcx],al
   1400257bf:	add    BYTE PTR [rax+0x20],bh
   1400257c2:	add    DWORD PTR [rax],eax
   1400257c4:	hlt    
   1400257c5:	or     BYTE PTR [rdx],al
   1400257c7:	add    BYTE PTR [rax-0x5cfffee0],al
   1400257cd:	and    BYTE PTR [rcx],al
   1400257cf:	add    al,dl
   1400257d1:	adc    DWORD PTR [rdx],eax
   1400257d3:	add    BYTE PTR [rbx-0x21fffee0],ah
   1400257d9:	and    BYTE PTR [rcx],al
   1400257db:	add    BYTE PTR [rax],ch
   1400257dd:	or     DWORD PTR [rdx],eax
   1400257df:	add    dh,bl
   1400257e1:	and    BYTE PTR [rcx],al
   1400257e3:	add    al,bh
   1400257e5:	and    BYTE PTR [rcx],al
   1400257e7:	add    BYTE PTR [rax],bl
   1400257e9:	or     DWORD PTR [rdx],eax
   1400257eb:	add    BYTE PTR [rax],al
   1400257ed:	and    DWORD PTR [rcx],eax
   1400257ef:	add    BYTE PTR [rbx],ah
   1400257f1:	and    DWORD PTR [rcx],eax
   1400257f3:	add    al,dl
   1400257f5:	adc    DWORD PTR [rdx],eax
   1400257f7:	add    BYTE PTR [rbx],ah
   1400257f9:	and    DWORD PTR [rcx],eax
   1400257fb:	add    BYTE PTR [rsi+0x21],bl
   1400257fe:	add    DWORD PTR [rax],eax
   140025800:	or     QWORD PTR [rdx],r8
   140025803:	add    BYTE PTR [rsi+0x21],bl
   140025806:	add    DWORD PTR [rax],eax
   140025808:	js     0x14002582b
   14002580a:	add    DWORD PTR [rax],eax
   14002580c:	cmp    al,0x9
   14002580e:	add    al,BYTE PTR [rax]
   140025810:	and    BYTE PTR [rcx],0x1
   140025813:	add    BYTE PTR [rbx-0x2ffffedf],ah
   140025819:	adc    DWORD PTR [rdx],eax
   14002581b:	add    BYTE PTR [rbx-0x21fffedf],ah
   140025821:	and    DWORD PTR [rcx],eax
   140025823:	add    BYTE PTR [rax+0x9],dh
   140025826:	add    al,BYTE PTR [rax]
   140025828:	fisub  WORD PTR [rcx]
   14002582a:	add    DWORD PTR [rax],eax
   14002582c:	clc    
   14002582d:	and    DWORD PTR [rcx],eax
   14002582f:	add    BYTE PTR [rax+0x9],ah
   140025832:	add    al,BYTE PTR [rax]
   140025834:	add    BYTE PTR [rdx],ah
   140025836:	add    DWORD PTR [rax],eax
   140025838:	and    esp,DWORD PTR [rdx]
   14002583a:	add    DWORD PTR [rax],eax
   14002583c:	rcl    BYTE PTR [rcx],1
   14002583e:	add    al,BYTE PTR [rax]
   140025840:	and    esp,DWORD PTR [rdx]
   140025842:	add    DWORD PTR [rax],eax
   140025844:	pop    rsi
   140025845:	and    al,BYTE PTR [rcx]
   140025847:	add    BYTE PTR [rcx+rcx*1+0x225e0002],dl
   14002584e:	add    DWORD PTR [rax],eax
   140025850:	js     0x140025874
   140025852:	add    DWORD PTR [rax],eax
   140025854:	test   BYTE PTR [rcx],cl
   140025856:	add    al,BYTE PTR [rax]
   140025858:	and    BYTE PTR [rdx],0x1
   14002585b:	add    BYTE PTR [rbx-0x2ffffede],ah
   140025861:	adc    DWORD PTR [rdx],eax
   140025863:	add    BYTE PTR [rbx-0x21fffede],ah
   140025869:	and    al,BYTE PTR [rcx]
   14002586b:	add    BYTE PTR [rax-0x21fffdf7],bh
   140025871:	and    al,BYTE PTR [rcx]
   140025873:	add    al,bh
   140025875:	and    al,BYTE PTR [rcx]
   140025877:	add    BYTE PTR [rax+0x209],ch
   14002587d:	and    eax,DWORD PTR [rcx]
   14002587f:	add    BYTE PTR [rbx],ah
   140025881:	and    eax,DWORD PTR [rcx]
   140025883:	add    al,dl
   140025885:	adc    DWORD PTR [rdx],eax
   140025887:	add    BYTE PTR [rbx],ah
   140025889:	and    eax,DWORD PTR [rcx]
   14002588b:	add    BYTE PTR [rsi+0x23],bl
   14002588e:	add    DWORD PTR [rax],eax
   140025890:	fmul   QWORD PTR [rcx]
   140025892:	add    al,BYTE PTR [rax]
   140025894:	pop    rsi
   140025895:	and    eax,DWORD PTR [rcx]
   140025897:	add    BYTE PTR [rax+0x23],bh
   14002589a:	add    DWORD PTR [rax],eax
   14002589c:	int3   
   14002589d:	or     DWORD PTR [rdx],eax
   14002589f:	add    BYTE PTR [rax-0x5cfffedd],al
   1400258a5:	and    eax,DWORD PTR [rcx]
   1400258a7:	add    al,dl
   1400258a9:	adc    DWORD PTR [rdx],eax
   1400258ab:	add    BYTE PTR [rbx-0x21fffedd],ah
   1400258b1:	and    eax,DWORD PTR [rcx]
   1400258b3:	add    BYTE PTR [rax],al
   1400258b5:	or     al,BYTE PTR [rdx]
   1400258b7:	add    dh,bl
   1400258b9:	and    eax,DWORD PTR [rcx]
   1400258bb:	add    al,bh
   1400258bd:	and    eax,DWORD PTR [rcx]
   1400258bf:	add    al,dh
   1400258c1:	or     DWORD PTR [rdx],eax
   1400258c3:	add    BYTE PTR [rax],al
   1400258c5:	and    al,0x1
   1400258c7:	add    BYTE PTR [rbx],ah
   1400258c9:	and    al,0x1
   1400258cb:	add    al,dl
   1400258cd:	adc    DWORD PTR [rdx],eax
   1400258cf:	add    BYTE PTR [rbx],ah
   1400258d1:	and    al,0x1
   1400258d3:	add    BYTE PTR [rsi+0x24],bl
   1400258d6:	add    DWORD PTR [rax],eax
   1400258d8:	and    al,0xa
   1400258da:	add    al,BYTE PTR [rax]
   1400258dc:	pop    rsi
   1400258dd:	and    al,0x1
   1400258df:	add    BYTE PTR [rax+0x24],bh
   1400258e2:	add    DWORD PTR [rax],eax
   1400258e4:	adc    al,0xa
   1400258e6:	add    al,BYTE PTR [rax]
   1400258e8:	and    BYTE PTR [rcx+rax*1],0x0
   1400258ec:	movabs ds:0xa3000211d0000124,eax
   1400258f5:	and    al,0x1
   1400258f7:	add    dh,bl
   1400258f9:	and    al,0x1
   1400258fb:	add    BYTE PTR [rax+0xa],cl
   1400258fe:	add    al,BYTE PTR [rax]
   140025900:	fisub  WORD PTR [rcx+rax*1]
   140025903:	add    al,bh
   140025905:	and    al,0x1
   140025907:	add    BYTE PTR [rax],bh
   140025909:	or     al,BYTE PTR [rdx]
   14002590b:	add    BYTE PTR [rax],al
   14002590d:	and    eax,0x25230001
   140025912:	add    DWORD PTR [rax],eax
   140025914:	rcl    BYTE PTR [rcx],1
   140025916:	add    al,BYTE PTR [rax]
   140025918:	and    esp,DWORD PTR [rip+0x258f0001]        # 0x16591591f
   14002591e:	add    DWORD PTR [rax],eax
   140025920:	ins    BYTE PTR es:[rdi],dx
   140025921:	or     al,BYTE PTR [rdx]
   140025923:	add    BYTE PTR [rdi-0x56fffedb],cl
   140025929:	and    eax,0xa5c0001
   14002592e:	add    al,BYTE PTR [rax]
   140025930:	mov    al,0x25
   140025932:	add    DWORD PTR [rax],eax
   140025934:	xlat   BYTE PTR ds:[rbx]
   140025935:	and    eax,0x11d00001
   14002593a:	add    al,BYTE PTR [rax]
   14002593c:	xlat   BYTE PTR ds:[rbx]
   14002593d:	and    eax,0x26740001
   140025942:	add    DWORD PTR [rax],eax
   140025944:	nop
   140025945:	or     al,BYTE PTR [rdx]
   140025947:	add    BYTE PTR [rsi+riz*1+0x1],dh
   14002594b:	add    BYTE PTR [rsi-0x7ffffeda],cl
   140025951:	or     al,BYTE PTR [rdx]
   140025953:	add    BYTE PTR [rax-0x4cfffeda],dl
   140025959:	add    DWORD PTR es:[rax],eax
   14002595c:	rcl    BYTE PTR [rcx],1
   14002595e:	add    al,BYTE PTR [rax]
   140025960:	mov    bl,0x26
   140025962:	add    DWORD PTR [rax],eax
   140025964:	(bad)  
   140025965:	(bad)  
   140025966:	add    DWORD PTR [rax],eax
   140025968:	mov    ah,0xa
   14002596a:	add    al,BYTE PTR [rax]
   14002596c:	(bad)  
   14002596d:	(bad)  
   14002596e:	add    DWORD PTR [rax],eax
   140025970:	cmp    DWORD PTR [rdi],esp
   140025972:	add    DWORD PTR [rax],eax
   140025974:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140025975:	or     al,BYTE PTR [rdx]
   140025977:	add    BYTE PTR [rax+0x27],al
   14002597a:	add    DWORD PTR [rax],eax
   14002597c:	movsxd esp,DWORD PTR [rdi]
   14002597e:	add    DWORD PTR [rax],eax
   140025980:	rcl    BYTE PTR [rcx],1
   140025982:	add    al,BYTE PTR [rax]
   140025984:	movsxd esp,DWORD PTR [rdi]
   140025986:	add    DWORD PTR [rax],eax
   140025988:	sahf   
   140025989:	(bad)  
   14002598a:	add    DWORD PTR [rax],eax
   14002598c:	fmul   DWORD PTR [rdx]
   14002598e:	add    al,BYTE PTR [rax]
   140025990:	sahf   
   140025991:	(bad)  
   140025992:	add    DWORD PTR [rax],eax
   140025994:	mov    eax,0xc8000127
   140025999:	or     al,BYTE PTR [rdx]
   14002599b:	add    al,al
   14002599d:	(bad)  
   14002599e:	add    DWORD PTR [rax],eax
   1400259a0:	jrcxz  0x1400259c9
   1400259a2:	add    DWORD PTR [rax],eax
   1400259a4:	(bad)  
   1400259a5:	or     BYTE PTR [rdx],al
   1400259a7:	add    bl,ah
   1400259a9:	(bad)  
   1400259aa:	add    DWORD PTR [rax],eax
   1400259ac:	lock (bad) 
   1400259ae:	add    DWORD PTR [rax],eax
   1400259b0:	and    BYTE PTR [rbx],cl
   1400259b2:	add    al,BYTE PTR [rax]
   1400259b4:	lock (bad) 
   1400259b6:	add    DWORD PTR [rax],eax
   1400259b8:	xor    al,0x28
   1400259ba:	add    DWORD PTR [rax],eax
   1400259bc:	or     al,0xb
   1400259be:	add    al,BYTE PTR [rax]
   1400259c0:	xor    al,0x28
   1400259c2:	add    DWORD PTR [rax],eax
   1400259c4:	cmp    DWORD PTR [rax],ebp
   1400259c6:	add    DWORD PTR [rax],eax
   1400259c8:	cld    
   1400259c9:	or     al,BYTE PTR [rdx]
   1400259cb:	add    BYTE PTR [rcx],bh
   1400259cd:	sub    BYTE PTR [rcx],al
   1400259cf:	add    BYTE PTR [rbx+0x28],dl
   1400259d2:	add    DWORD PTR [rax],eax
   1400259d4:	in     al,dx
   1400259d5:	or     al,BYTE PTR [rdx]
   1400259d7:	add    BYTE PTR [rax+0x28],ah
   1400259da:	add    DWORD PTR [rax],eax
   1400259dc:	sub    DWORD PTR [rax],0x1
   1400259df:	add    al,dl
   1400259e1:	adc    DWORD PTR [rdx],eax
   1400259e3:	add    BYTE PTR [rbx-0x41fffed8],al
   1400259e9:	sub    BYTE PTR [rcx],al
   1400259eb:	add    BYTE PTR [rbx+rcx*1+0x2],al
   1400259ef:	add    BYTE PTR [rsi-0x27fffed8],bh
   1400259f5:	sub    BYTE PTR [rcx],al
   1400259f7:	add    BYTE PTR [rbx+rcx*1],dh
   1400259fa:	add    al,BYTE PTR [rax]
   1400259fc:	loopne 0x140025a26
   1400259fe:	add    DWORD PTR [rax],eax
   140025a00:	add    ebp,DWORD PTR [rcx]
   140025a02:	add    DWORD PTR [rax],eax
   140025a04:	(bad)  
   140025a05:	or     BYTE PTR [rdx],al
   140025a07:	add    BYTE PTR [rbx],al
   140025a09:	sub    DWORD PTR [rcx],eax
   140025a0b:	add    BYTE PTR [rax],dl
   140025a0d:	sub    DWORD PTR [rcx],eax
   140025a0f:	add    BYTE PTR [rbx+rcx*1+0x29100002],cl
   140025a16:	add    DWORD PTR [rax],eax
   140025a18:	push   rsp
   140025a19:	sub    DWORD PTR [rcx],eax
   140025a1b:	add    BYTE PTR [rax+0xb],bh
   140025a1e:	add    al,BYTE PTR [rax]
   140025a20:	push   rsp
   140025a21:	sub    DWORD PTR [rcx],eax
   140025a23:	add    BYTE PTR [rcx+0x29],bl
   140025a26:	add    DWORD PTR [rax],eax
   140025a28:	push   0x5900020b
   140025a2d:	sub    DWORD PTR [rcx],eax
   140025a2f:	add    BYTE PTR [rbx+0x29],dh
   140025a32:	add    DWORD PTR [rax],eax
   140025a34:	pop    rax
   140025a35:	or     eax,DWORD PTR [rdx]
   140025a37:	add    BYTE PTR [rax-0x5cfffed7],al
   140025a3d:	sub    DWORD PTR [rcx],eax
   140025a3f:	add    al,dl
   140025a41:	adc    DWORD PTR [rdx],eax
   140025a43:	add    BYTE PTR [rbx-0x21fffed7],ah
   140025a49:	sub    DWORD PTR [rcx],eax
   140025a4b:	add    BYTE PTR [rax-0x21fffdf5],dh
   140025a51:	sub    DWORD PTR [rcx],eax
   140025a53:	add    al,bh
   140025a55:	sub    DWORD PTR [rcx],eax
   140025a57:	add    BYTE PTR [rax+0x20b],ah
   140025a5d:	sub    al,BYTE PTR [rcx]
   140025a5f:	add    BYTE PTR [rcx],bh
   140025a61:	sub    al,BYTE PTR [rcx]
   140025a63:	add    BYTE PTR [rax+0x40000203],ah
   140025a69:	sub    al,BYTE PTR [rcx]
   140025a6b:	add    BYTE PTR [rbx+0x2a],ah
   140025a6e:	add    DWORD PTR [rax],eax
   140025a70:	rcl    BYTE PTR [rcx],1
   140025a72:	add    al,BYTE PTR [rax]
   140025a74:	movsxd ebp,DWORD PTR [rdx]
   140025a76:	add    DWORD PTR [rax],eax
   140025a78:	sahf   
   140025a79:	sub    al,BYTE PTR [rcx]
   140025a7b:	add    ah,dl
   140025a7d:	or     eax,DWORD PTR [rdx]
   140025a7f:	add    BYTE PTR [rsi-0x47fffed6],bl
   140025a85:	sub    al,BYTE PTR [rcx]
   140025a87:	add    ah,al
   140025a89:	or     eax,DWORD PTR [rdx]
   140025a8b:	add    al,al
   140025a8d:	sub    al,BYTE PTR [rcx]
   140025a8f:	add    bh,ah
   140025a91:	sub    al,BYTE PTR [rcx]
   140025a93:	add    al,dl
   140025a95:	adc    DWORD PTR [rdx],eax
   140025a97:	add    bh,ah
   140025a99:	sub    al,BYTE PTR [rcx]
   140025a9b:	add    BYTE PTR [rbx+rbp*1+0xbf80001],al
   140025aa2:	add    al,BYTE PTR [rax]
   140025aa4:	test   BYTE PTR [rbx],ch
   140025aa6:	add    DWORD PTR [rax],eax
   140025aa8:	sahf   
   140025aa9:	sub    eax,DWORD PTR [rcx]
   140025aab:	add    al,ch
   140025aad:	or     eax,DWORD PTR [rdx]
   140025aaf:	add    BYTE PTR [rax-0x3cfffed5],ah
   140025ab5:	sub    eax,DWORD PTR [rcx]
   140025ab7:	add    al,dl
   140025ab9:	adc    DWORD PTR [rdx],eax
   140025abb:	add    bl,al
   140025abd:	sub    eax,DWORD PTR [rcx]
   140025abf:	add    BYTE PTR [rdi],ch
   140025ac1:	sub    al,0x1
   140025ac3:	add    BYTE PTR [rsp+rcx*1],bl
   140025ac6:	add    al,BYTE PTR [rax]
   140025ac8:	(bad)  
   140025ac9:	sub    al,0x1
   140025acb:	add    BYTE PTR [rcx+0x2c],cl
   140025ace:	add    DWORD PTR [rax],eax
   140025ad0:	or     al,0xc
   140025ad2:	add    al,BYTE PTR [rax]
   140025ad4:	push   rax
   140025ad5:	sub    al,0x1
   140025ad7:	add    BYTE PTR [rbx+0x2c],dh
   140025ada:	add    DWORD PTR [rax],eax
   140025adc:	rcl    BYTE PTR [rcx],1
   140025ade:	add    al,BYTE PTR [rax]
   140025ae0:	jae    0x140025b0e
   140025ae2:	add    DWORD PTR [rax],eax
   140025ae4:	fild   QWORD PTR [rcx+rax*1]
   140025ae7:	add    BYTE PTR [rax+0xc],al
   140025aea:	add    al,BYTE PTR [rax]
   140025aec:	fild   QWORD PTR [rcx+rax*1]
   140025aef:	add    cl,bh
   140025af1:	sub    al,0x1
   140025af3:	add    BYTE PTR [rax],dh
   140025af5:	or     al,0x2
   140025af7:	add    BYTE PTR [rax],al
   140025af9:	sub    eax,0x2d270001
   140025afe:	add    DWORD PTR [rax],eax
   140025b00:	rcl    BYTE PTR [rcx],1
   140025b02:	add    al,BYTE PTR [rax]
   140025b04:	(bad)  
   140025b05:	sub    eax,0x2df50001
   140025b0a:	add    DWORD PTR [rax],eax
   140025b0c:	fs or  al,0x2
   140025b0f:	add    ch,dh
   140025b11:	sub    eax,0x2e0f0001
   140025b16:	add    DWORD PTR [rax],eax
   140025b18:	push   rsp
   140025b19:	or     al,0x2
   140025b1b:	add    BYTE PTR [rax],dl
   140025b1d:	add    DWORD PTR cs:[rax],eax
   140025b20:	(bad)  
   140025b21:	add    DWORD PTR cs:[rax],eax
   140025b24:	rcl    BYTE PTR [rcx],1
   140025b26:	add    al,BYTE PTR [rax]
   140025b28:	(bad)  
   140025b29:	add    DWORD PTR cs:[rax],eax
   140025b2c:	add    eax,0x8800012f
   140025b31:	or     al,0x2
   140025b33:	add    BYTE PTR [rip+0x1f00012f],al        # 0x15f025c68
   140025b39:	(bad)  
   140025b3a:	add    DWORD PTR [rax],eax
   140025b3c:	js     0x140025b4a
   140025b3e:	add    al,BYTE PTR [rax]
   140025b40:	and    BYTE PTR [rdi],ch
   140025b42:	add    DWORD PTR [rax],eax
   140025b44:	rex.RXB (bad) 
   140025b46:	add    DWORD PTR [rax],eax
   140025b48:	rcl    BYTE PTR [rcx],1
   140025b4a:	add    al,BYTE PTR [rax]
   140025b4c:	rex.RXB (bad) 
   140025b4e:	add    DWORD PTR [rax],eax
   140025b50:	in     al,0x2f
   140025b52:	add    DWORD PTR [rax],eax
   140025b54:	lods   al,BYTE PTR ds:[rsi]
   140025b55:	or     al,0x2
   140025b57:	add    ah,ah
   140025b59:	(bad)  
   140025b5a:	add    DWORD PTR [rax],eax
   140025b5c:	(bad)  
   140025b5d:	(bad)  
   140025b5e:	add    DWORD PTR [rax],eax
   140025b60:	pushf  
   140025b61:	or     al,0x2
   140025b63:	add    BYTE PTR [rax],al
   140025b65:	xor    BYTE PTR [rcx],al
   140025b67:	add    BYTE PTR [rdi],ah
   140025b69:	xor    BYTE PTR [rcx],al
   140025b6b:	add    al,dl
   140025b6d:	adc    DWORD PTR [rdx],eax
   140025b6f:	add    BYTE PTR [rdi],ah
   140025b71:	xor    BYTE PTR [rcx],al
   140025b73:	add    ah,al
   140025b75:	xor    BYTE PTR [rcx],al
   140025b77:	add    al,dl
   140025b79:	or     al,0x2
   140025b7b:	add    ah,al
   140025b7d:	xor    BYTE PTR [rcx],al
   140025b7f:	add    dh,bl
   140025b81:	xor    BYTE PTR [rcx],al
   140025b83:	add    al,al
   140025b85:	or     al,0x2
   140025b87:	add    al,ah
   140025b89:	xor    BYTE PTR [rcx],al
   140025b8b:	add    BYTE PTR [rcx],bl
   140025b8d:	xor    DWORD PTR [rcx],eax
   140025b8f:	add    BYTE PTR [rax+0x20000203],ah
   140025b95:	xor    DWORD PTR [rcx],eax
   140025b97:	add    BYTE PTR [rcx+0x31],bl
   140025b9a:	add    DWORD PTR [rax],eax
   140025b9c:	movabs al,ds:0x8300013160000203
   140025ba5:	xor    DWORD PTR [rcx],eax
   140025ba7:	add    al,dl
   140025ba9:	adc    DWORD PTR [rdx],eax
   140025bab:	add    BYTE PTR [rbx-0x41fffecf],al
   140025bb1:	xor    DWORD PTR [rcx],eax
   140025bb3:	add    ah,dh
   140025bb5:	or     al,0x2
   140025bb7:	add    BYTE PTR [rsi-0x27fffecf],bh
   140025bbd:	xor    DWORD PTR [rcx],eax
   140025bbf:	add    ah,ah
   140025bc1:	or     al,0x2
   140025bc3:	add    al,ah
   140025bc5:	xor    DWORD PTR [rcx],eax
   140025bc7:	add    BYTE PTR [rbx],al
   140025bc9:	xor    al,BYTE PTR [rcx]
   140025bcb:	add    al,dl
   140025bcd:	adc    DWORD PTR [rdx],eax
   140025bcf:	add    BYTE PTR [rbx],al
   140025bd1:	xor    al,BYTE PTR [rcx]
   140025bd3:	add    BYTE PTR [rdi+0x32],ch
   140025bd6:	add    DWORD PTR [rax],eax
   140025bd8:	sbb    BYTE PTR [rip+0x326f0002],cl        # 0x172715be0
   140025bde:	add    DWORD PTR [rax],eax
   140025be0:	mov    DWORD PTR [rdx],esi
   140025be2:	add    DWORD PTR [rax],eax
   140025be4:	or     BYTE PTR [rip+0x32900002],cl        # 0x172925bec
   140025bea:	add    DWORD PTR [rax],eax
   140025bec:	mov    bl,0x32
   140025bee:	add    DWORD PTR [rax],eax
   140025bf0:	rcl    BYTE PTR [rcx],1
   140025bf2:	add    al,BYTE PTR [rax]
   140025bf4:	mov    bl,0x32
   140025bf6:	add    DWORD PTR [rax],eax
   140025bf8:	(bad)  
   140025bf9:	xor    eax,DWORD PTR [rcx]
   140025bfb:	add    BYTE PTR [rcx*1+0x331f0002],bh
   140025c02:	add    DWORD PTR [rax],eax
   140025c04:	cmp    DWORD PTR [rbx],esi
   140025c06:	add    DWORD PTR [rax],eax
   140025c08:	sub    al,0xd
   140025c0a:	add    al,BYTE PTR [rax]
   140025c0c:	rex xor eax,DWORD PTR [rcx]
   140025c0f:	add    BYTE PTR [rdi+0x33],ah
   140025c12:	add    DWORD PTR [rax],eax
   140025c14:	rcl    BYTE PTR [rcx],1
   140025c16:	add    al,BYTE PTR [rax]
   140025c18:	xor    eax,DWORD PTR [ecx]
   140025c1b:	add    BYTE PTR [rsp+rsi*1],al
   140025c1e:	add    DWORD PTR [rax],eax
   140025c20:	(bad)  
   140025c21:	or     eax,0x34040002
   140025c26:	add    DWORD PTR [rax],eax
   140025c28:	(bad)  
   140025c29:	xor    al,0x1
   140025c2b:	add    BYTE PTR [rax+0xd],dl
   140025c2e:	add    al,BYTE PTR [rax]
   140025c30:	and    BYTE PTR [rcx+rax*1],dh
   140025c33:	add    BYTE PTR [rbx+0x34],al
   140025c36:	add    DWORD PTR [rax],eax
   140025c38:	(bad)  
   140025c39:	or     BYTE PTR [rdx],al
   140025c3b:	add    BYTE PTR [rbx+0x34],al
   140025c3e:	add    DWORD PTR [rax],eax
   140025c40:	push   rax
   140025c41:	xor    al,0x1
   140025c43:	add    BYTE PTR [rax+0x5000020d],ch
   140025c49:	xor    al,0x1
   140025c4b:	add    BYTE PTR [rsp+rsi*1+0xd940001],dl
   140025c52:	add    al,BYTE PTR [rax]
   140025c54:	xchg   esp,eax
   140025c55:	xor    al,0x1
   140025c57:	add    BYTE PTR [rcx-0x7bfffecc],bl
   140025c5d:	or     eax,0x34990002
   140025c62:	add    DWORD PTR [rax],eax
   140025c64:	mov    bl,0x34
   140025c66:	add    DWORD PTR [rax],eax
   140025c68:	je     0x140025c77
   140025c6a:	add    al,BYTE PTR [rax]
   140025c6c:	shl    BYTE PTR [rcx+rax*1],0x0
   140025c70:	jrcxz  0x140025ca6
   140025c72:	add    DWORD PTR [rax],eax
   140025c74:	rcl    BYTE PTR [rcx],1
   140025c76:	add    al,BYTE PTR [rax]
   140025c78:	jrcxz  0x140025cae
   140025c7a:	add    DWORD PTR [rax],eax
   140025c7c:	rex.WRXB xor rax,0xdcc0001
   140025c82:	add    al,BYTE PTR [rax]
   140025c84:	rex.WRXB xor rax,0x35690001
   140025c8a:	add    DWORD PTR [rax],eax
   140025c8c:	mov    esp,0x7000020d
   140025c91:	xor    eax,0x35930001
   140025c96:	add    DWORD PTR [rax],eax
   140025c98:	rcl    BYTE PTR [rcx],1
   140025c9a:	add    al,BYTE PTR [rax]
   140025c9c:	xchg   ebx,eax
   140025c9d:	xor    eax,0x35ce0001
   140025ca2:	add    DWORD PTR [rax],eax
   140025ca4:	lock or eax,0x35ce0002
   140025caa:	add    DWORD PTR [rax],eax
   140025cac:	call   0x120025de6
   140025cb1:	or     eax,0x35f00002
   140025cb6:	add    DWORD PTR [rax],eax
   140025cb8:	adc    esi,DWORD PTR [rsi]
   140025cba:	add    DWORD PTR [rax],eax
   140025cbc:	rcl    BYTE PTR [rcx],1
   140025cbe:	add    al,BYTE PTR [rax]
   140025cc0:	adc    esi,DWORD PTR [rsi]
   140025cc2:	add    DWORD PTR [rax],eax
   140025cc4:	rex.WRX
   140025cc5:	add    DWORD PTR ss:[rax],eax
   140025cc8:	adc    al,0xe
   140025cca:	add    al,BYTE PTR [rax]
   140025ccc:	rex.WRX
   140025ccd:	add    DWORD PTR ss:[rax],eax
   140025cd0:	push   0x4000136
   140025cd5:	(bad)  
   140025cd6:	add    al,BYTE PTR [rax]
   140025cd8:	jo     0x140025d10
   140025cda:	add    DWORD PTR [rax],eax
   140025cdc:	nop
   140025cdd:	add    DWORD PTR ss:[rax],eax
   140025ce0:	rcl    BYTE PTR [rcx],1
   140025ce2:	add    al,BYTE PTR [rax]
   140025ce4:	nop
   140025ce5:	add    DWORD PTR ss:[rax],eax
   140025ce8:	retf   
   140025ce9:	add    DWORD PTR ss:[rax],eax
   140025cec:	cmp    BYTE PTR [rsi],cl
   140025cee:	add    al,BYTE PTR [rax]
   140025cf0:	retf   
   140025cf1:	add    DWORD PTR ss:[rax],eax
   140025cf4:	in     eax,0x36
   140025cf6:	add    DWORD PTR [rax],eax
   140025cf8:	sub    BYTE PTR [rsi],cl
   140025cfa:	add    al,BYTE PTR [rax]
   140025cfc:	lock add DWORD PTR ss:[rax],eax
   140025d00:	adc    al,0x37
   140025d02:	add    DWORD PTR [rax],eax
   140025d04:	rcl    BYTE PTR [rcx],1
   140025d06:	add    al,BYTE PTR [rax]
   140025d08:	adc    al,0x37
   140025d0a:	add    DWORD PTR [rax],eax
   140025d0c:	mov    cl,0x37
   140025d0e:	add    DWORD PTR [rax],eax
   140025d10:	pop    rsp
   140025d11:	(bad)  
   140025d12:	add    al,BYTE PTR [rax]
   140025d14:	mov    cl,0x37
   140025d16:	add    DWORD PTR [rax],eax
   140025d18:	retf   
   140025d19:	(bad)  
   140025d1a:	add    DWORD PTR [rax],eax
   140025d1c:	rex.WR (bad) 
   140025d1e:	add    al,BYTE PTR [rax]
   140025d20:	shl    BYTE PTR [rdi],1
   140025d22:	add    DWORD PTR [rax],eax
   140025d24:	lock (bad) 
   140025d26:	add    DWORD PTR [rax],eax
   140025d28:	rcl    BYTE PTR [rcx],1
   140025d2a:	add    al,BYTE PTR [rax]
   140025d2c:	lock (bad) 
   140025d2e:	add    DWORD PTR [rax],eax
   140025d30:	sub    edi,DWORD PTR [rax]
   140025d32:	add    DWORD PTR [rax],eax
   140025d34:	or     BYTE PTR [rsi],0x2
   140025d37:	add    BYTE PTR [rbx],ch
   140025d39:	cmp    BYTE PTR [rcx],al
   140025d3b:	add    BYTE PTR [rbp+0x38],al
   140025d3e:	add    DWORD PTR [rax],eax
   140025d40:	jo     0x140025d50
   140025d42:	add    al,BYTE PTR [rax]
   140025d44:	push   rax
   140025d45:	cmp    BYTE PTR [rcx],al
   140025d47:	add    BYTE PTR [rax+0x38],dh
   140025d4a:	add    DWORD PTR [rax],eax
   140025d4c:	rcl    BYTE PTR [rcx],1
   140025d4e:	add    al,BYTE PTR [rax]
   140025d50:	jo     0x140025d8a
   140025d52:	add    DWORD PTR [rax],eax
   140025d54:	stos   DWORD PTR es:[rdi],eax
   140025d55:	cmp    BYTE PTR [rcx],al
   140025d57:	add    BYTE PTR [rsi+rcx*1+0x38ab0002],ah
   140025d5e:	add    DWORD PTR [rax],eax
   140025d60:	(bad)
   140025d63:	add    BYTE PTR [rsi+rcx*1+0x38d00002],dl
   140025d6a:	add    DWORD PTR [rax],eax
   140025d6c:	lock cmp BYTE PTR [rcx],al
   140025d6f:	add    al,dl
   140025d71:	adc    DWORD PTR [rdx],eax
   140025d73:	add    al,dh
   140025d75:	cmp    BYTE PTR [rcx],al
   140025d77:	add    BYTE PTR [rcx+rdi*1+0x1],bl
   140025d7b:	add    al,cl
   140025d7d:	(bad)  
   140025d7e:	add    al,BYTE PTR [rax]
   140025d80:	pop    rsp
   140025d81:	cmp    DWORD PTR [rcx],eax
   140025d83:	add    BYTE PTR [rsi+0x39],dh
   140025d86:	add    DWORD PTR [rax],eax
   140025d88:	mov    eax,0x8000020e
   140025d8d:	cmp    DWORD PTR [rcx],eax
   140025d8f:	add    BYTE PTR [rax-0x2ffffec7],ah
   140025d95:	adc    DWORD PTR [rdx],eax
   140025d97:	add    BYTE PTR [rax+0xc000139],ah
   140025d9d:	cmp    al,BYTE PTR [rcx]
   140025d9f:	add    ah,ch
   140025da1:	(bad)  
   140025da2:	add    al,BYTE PTR [rax]
   140025da4:	or     al,0x3a
   140025da6:	add    DWORD PTR [rax],eax
   140025da8:	cmp    al,BYTE PTR es:[rcx]
   140025dab:	add    ah,bl
   140025dad:	(bad)  
   140025dae:	add    al,BYTE PTR [rax]
   140025db0:	xor    BYTE PTR [rdx],bh
   140025db2:	add    DWORD PTR [rax],eax
   140025db4:	data16 cmp al,BYTE PTR [rcx]
   140025db7:	add    BYTE PTR [rax+0x70000203],ah
   140025dbd:	cmp    al,BYTE PTR [rcx]
   140025dbf:	add    BYTE PTR [rax-0x2ffffec6],dl
   140025dc5:	adc    DWORD PTR [rdx],eax
   140025dc7:	add    BYTE PTR [rax-0x34fffec6],dl
   140025dcd:	cmp    al,BYTE PTR [rcx]
   140025dcf:	add    BYTE PTR [rax],dl
   140025dd1:	lar    eax,WORD PTR [rax]
   140025dd4:	retf   
   140025dd5:	cmp    al,BYTE PTR [rcx]
   140025dd7:	add    ch,ah
   140025dd9:	cmp    al,BYTE PTR [rcx]
   140025ddb:	add    BYTE PTR [rax],al
   140025ddd:	lar    eax,WORD PTR [rax]
   140025de0:	lock cmp al,BYTE PTR [rcx]
   140025de3:	add    BYTE PTR [rax],dl
   140025de5:	cmp    eax,DWORD PTR [rcx]
   140025de7:	add    al,dl
   140025de9:	adc    DWORD PTR [rdx],eax
   140025deb:	add    BYTE PTR [rax],dl
   140025ded:	cmp    eax,DWORD PTR [rcx]
   140025def:	add    BYTE PTR [rbx+0x3b],cl
   140025df2:	add    DWORD PTR [rax],eax
   140025df4:	xor    al,0xf
   140025df6:	add    al,BYTE PTR [rax]
   140025df8:	rex.WXB cmp rax,QWORD PTR [r9]
   140025dfb:	add    BYTE PTR [rbp+0x3b],ah
   140025dfe:	add    DWORD PTR [rax],eax
   140025e00:	and    al,0xf
   140025e02:	add    al,BYTE PTR [rax]
   140025e04:	jo     0x140025e41
   140025e06:	add    DWORD PTR [rax],eax
   140025e08:	nop
   140025e09:	cmp    eax,DWORD PTR [rcx]
   140025e0b:	add    ah,al
   140025e0d:	or     BYTE PTR [rdx],al
   140025e0f:	add    BYTE PTR [rax-0x62fffec5],dl
   140025e15:	cmp    eax,DWORD PTR [rcx]
   140025e17:	add    BYTE PTR [rdi+rcx*1+0x2],bh
   140025e1b:	add    BYTE PTR [rbp-0x1efffec5],bl
   140025e21:	cmp    eax,DWORD PTR [rcx]
   140025e23:	add    BYTE PTR [rax+0xf],ch
   140025e26:	add    al,BYTE PTR [rax]
   140025e28:	loope  0x140025e65
   140025e2a:	add    DWORD PTR [rax],eax
   140025e2c:	out    0x3b,al
   140025e2e:	add    DWORD PTR [rax],eax
   140025e30:	pop    rax
   140025e31:	lar    eax,WORD PTR [rax]
   140025e34:	out    0x3b,al
   140025e36:	add    DWORD PTR [rax],eax
   140025e38:	add    BYTE PTR [rcx+rax*1],bh
   140025e3b:	add    BYTE PTR [rax+0xf],cl
   140025e3e:	add    al,BYTE PTR [rax]
   140025e40:	add    BYTE PTR [rcx+rax*1],bh
   140025e43:	add    BYTE PTR [rax],ah
   140025e45:	cmp    al,0x1
   140025e47:	add    al,dl
   140025e49:	adc    DWORD PTR [rdx],eax
   140025e4b:	add    BYTE PTR [rax],ah
   140025e4d:	cmp    al,0x1
   140025e4f:	add    BYTE PTR [rbx+0x3c],bl
   140025e52:	add    DWORD PTR [rax],eax
   140025e54:	movabs al,ds:0x7500013c5b00020f
   140025e5d:	cmp    al,0x1
   140025e5f:	add    BYTE PTR [rax-0x7ffffdf1],dl
   140025e65:	cmp    al,0x1
   140025e67:	add    BYTE PTR [rax-0x2ffffec4],ah
   140025e6d:	adc    DWORD PTR [rdx],eax
   140025e6f:	add    BYTE PTR [rax-0x24fffec4],ah
   140025e75:	cmp    al,0x1
   140025e77:	add    ah,al
   140025e79:	lar    eax,WORD PTR [rax]
   140025e7c:	fstp   TBYTE PTR [rcx+rax*1]
   140025e7f:	add    ch,dh
   140025e81:	cmp    al,0x1
   140025e83:	add    BYTE PTR [rdi+rcx*1+0x3d000002],dh
   140025e8a:	add    DWORD PTR [rax],eax
   140025e8c:	ss cmp eax,0x3a00001
   140025e92:	add    al,BYTE PTR [rax]
   140025e94:	rex cmp eax,0x3d630001
   140025e9a:	add    DWORD PTR [rax],eax
   140025e9c:	rcl    BYTE PTR [rcx],1
   140025e9e:	add    al,BYTE PTR [rax]
   140025ea0:	movsxd edi,DWORD PTR [rip+0x3dcf0001]        # 0x17dd15ea7
   140025ea6:	add    DWORD PTR [rax],eax
   140025ea8:	call   0x10f0260bc
   140025ead:	cmp    eax,0x3de90001
   140025eb2:	add    DWORD PTR [rax],eax
   140025eb4:	fmul   DWORD PTR [rdi]
   140025eb6:	add    al,BYTE PTR [rax]
   140025eb8:	lock cmp eax,0x3e130001
   140025ebe:	add    DWORD PTR [rax],eax
   140025ec0:	rcl    BYTE PTR [rcx],1
   140025ec2:	add    al,BYTE PTR [rax]
   140025ec4:	adc    edi,DWORD PTR [rsi]
   140025ec6:	add    DWORD PTR [rax],eax
   140025ec8:	jg     0x140025f08
   140025eca:	add    DWORD PTR [rax],eax
   140025ecc:	or     al,0x10
   140025ece:	add    al,BYTE PTR [rax]
   140025ed0:	jg     0x140025f10
   140025ed2:	add    DWORD PTR [rax],eax
   140025ed4:	cdq    
   140025ed5:	add    DWORD PTR ds:[rax],eax
   140025ed8:	cld    
   140025ed9:	lar    eax,WORD PTR [rax]
   140025edc:	movabs al,ds:0xd000013ec300013e
   140025ee5:	adc    DWORD PTR [rdx],eax
   140025ee7:	add    bl,al
   140025ee9:	add    DWORD PTR ds:[rax],eax
   140025eec:	(bad)  
   140025eed:	(bad)  
   140025eee:	add    DWORD PTR [rax],eax
   140025ef0:	xor    BYTE PTR [rax],dl
   140025ef2:	add    al,BYTE PTR [rax]
   140025ef4:	(bad)  
   140025ef5:	(bad)  
   140025ef6:	add    DWORD PTR [rax],eax
   140025ef8:	rex.WB (bad) 
   140025efa:	add    DWORD PTR [rax],eax
   140025efc:	and    BYTE PTR [rax],dl
   140025efe:	add    al,BYTE PTR [rax]
   140025f00:	push   rax
   140025f01:	(bad)  
   140025f02:	add    DWORD PTR [rax],eax
   140025f04:	jae    0x140025f45
   140025f06:	add    DWORD PTR [rax],eax
   140025f08:	rcl    BYTE PTR [rcx],1
   140025f0a:	add    al,BYTE PTR [rax]
   140025f0c:	jae    0x140025f4d
   140025f0e:	add    DWORD PTR [rax],eax
   140025f10:	scas   al,BYTE PTR es:[rdi]
   140025f11:	(bad)  
   140025f12:	add    DWORD PTR [rax],eax
   140025f14:	push   rsp
   140025f15:	adc    BYTE PTR [rdx],al
   140025f17:	add    BYTE PTR [rsi-0x37fffec1],ch
   140025f1d:	(bad)  
   140025f1e:	add    DWORD PTR [rax],eax
   140025f20:	adc    BYTE PTR [rdx],r8b
   140025f23:	add    al,dl
   140025f25:	(bad)  
   140025f26:	add    DWORD PTR [rax],eax
   140025f28:	or     DWORD PTR [rax+0x1],eax
   140025f2b:	add    BYTE PTR [rax+0x10000203],ah
   140025f31:	rex add DWORD PTR [rax],eax
   140025f34:	(bad)  
   140025f35:	rex add DWORD PTR [rax],eax
   140025f38:	rcl    BYTE PTR [rcx],1
   140025f3a:	add    al,BYTE PTR [rax]
   140025f3c:	(bad)  
   140025f3d:	rex add DWORD PTR [rax],eax
   140025f40:	(bad)  
   140025f41:	rex add DWORD PTR [rax],eax
   140025f44:	js     0x140025f56
   140025f46:	add    al,BYTE PTR [rax]
   140025f48:	(bad)  
   140025f49:	rex add DWORD PTR [rax],eax
   140025f4c:	out    dx,al
   140025f4d:	rex add DWORD PTR [rax],eax
   140025f50:	push   0xfffffffff0000210
   140025f55:	rex add DWORD PTR [rax],eax
   140025f58:	adc    eax,DWORD PTR [rcx+0x1]
   140025f5b:	add    al,dl
   140025f5d:	adc    DWORD PTR [rdx],eax
   140025f5f:	add    BYTE PTR [rbx],dl
   140025f61:	add    DWORD PTR [r8],eax
   140025f64:	jg     0x140025fa7
   140025f66:	add    DWORD PTR [rax],eax
   140025f68:	pushf  
   140025f69:	adc    BYTE PTR [rdx],al
   140025f6b:	add    BYTE PTR [rdi+0x41],bh
   140025f6e:	add    DWORD PTR [rax],eax
   140025f70:	cdq    
   140025f71:	add    DWORD PTR [r8],eax
   140025f74:	mov    WORD PTR [rax],ss
   140025f76:	add    al,BYTE PTR [rax]
   140025f78:	movabs al,ds:0xd0000141c3000141
   140025f81:	adc    DWORD PTR [rdx],eax
   140025f83:	add    bl,al
   140025f85:	add    DWORD PTR [r8],eax
   140025f88:	(bad)  
   140025f89:	rex.X add DWORD PTR [rax],eax
   140025f8c:	rcl    BYTE PTR [rax],0x2
   140025f8f:	add    BYTE PTR [rdi],ch
   140025f91:	rex.X add DWORD PTR [rax],eax
   140025f94:	rex.WB
   140025f95:	rex.X add DWORD PTR [rax],eax
   140025f98:	mov    al,0x10
   140025f9a:	add    al,BYTE PTR [rax]
   140025f9c:	push   rax
   140025f9d:	rex.X add DWORD PTR [rax],eax
   140025fa0:	jae    0x140025fe4
   140025fa2:	add    DWORD PTR [rax],eax
   140025fa4:	(bad)  
   140025fa5:	or     BYTE PTR [rdx],al
   140025fa7:	add    BYTE PTR [rbx+0x42],dh
   140025faa:	add    DWORD PTR [rax],eax
   140025fac:	add    BYTE PTR [rdx+0x1],0x0
   140025fb0:	or     BYTE PTR [rcx],dl
   140025fb2:	add    al,BYTE PTR [rax]
   140025fb4:	add    BYTE PTR [rdx+0x1],0x0
   140025fb8:	vpshufb xmm14,xmm15,xmm12
   140025fbd:	adc    BYTE PTR [rdx],al
   140025fbf:	add    ah,al
   140025fc1:	rex.X add DWORD PTR [rax],eax
   140025fc4:	leave  
   140025fc5:	rex.X add DWORD PTR [rax],eax
   140025fc8:	in     al,0x10
   140025fca:	add    al,BYTE PTR [rax]
   140025fcc:	leave  
   140025fcd:	rex.X add DWORD PTR [rax],eax
   140025fd0:	jrcxz  0x140026014
   140025fd2:	add    DWORD PTR [rax],eax
   140025fd4:	(bad)  
   140025fd5:	adc    BYTE PTR [rdx],al
   140025fd7:	add    al,dh
   140025fd9:	rex.X add DWORD PTR [rax],eax
   140025fdc:	adc    eax,DWORD PTR [rbx+0x1]
   140025fdf:	add    ah,al
   140025fe1:	or     BYTE PTR [rdx],al
   140025fe3:	add    BYTE PTR [rbx],dl
   140025fe5:	rex.XB add DWORD PTR [r8],eax
   140025fe8:	and    BYTE PTR [rbx+0x1],al
   140025feb:	add    BYTE PTR [rax+0x11],dl
   140025fee:	add    al,BYTE PTR [rax]
   140025ff0:	and    BYTE PTR [rbx+0x1],al
   140025ff3:	add    BYTE PTR [rbx+rax*2+0x1],ah
   140025ff7:	add    BYTE PTR [rcx+rdx*1],bh
   140025ffa:	add    al,BYTE PTR [rax]
   140025ffc:	rex.XB add DWORD PTR fs:[r8],eax
   140026000:	imul   eax,DWORD PTR [rbx+0x1],0x2112c00
   140026007:	add    BYTE PTR [rcx+0x43],ch
   14002600a:	add    DWORD PTR [rax],eax
   14002600c:	add    DWORD PTR [rbx+0x1],0x0
   140026010:	sbb    al,0x11
   140026012:	add    al,BYTE PTR [rax]
   140026014:	nop
   140026015:	rex.XB add DWORD PTR [r8],eax
   140026018:	leave  
   140026019:	rex.XB add DWORD PTR [r8],eax
   14002601c:	movabs al,ds:0xf3000143d0000203
   140026025:	rex.XB add DWORD PTR [r8],eax
   140026028:	rcl    BYTE PTR [rcx],1
   14002602a:	add    al,BYTE PTR [rax]
   14002602c:	repz rex.XB add DWORD PTR [r8],eax
   140026030:	add    DWORD PTR cs:[rax],r8d
   140026034:	je     0x140026047
   140026036:	add    al,BYTE PTR [rax]
   140026038:	add    DWORD PTR cs:[rax],r8d
   14002603c:	rex.W
   14002603d:	add    DWORD PTR [rax],r8d
   140026040:	adc    DWORD PTR fs:[rdx],eax
   140026043:	add    BYTE PTR [rax+0x44],dl
   140026046:	add    DWORD PTR [rax],eax
   140026048:	mov    DWORD PTR [rcx+rax*1+0x0],eax
   14002604c:	movabs al,ds:0xb300014490000203
   140026055:	add    DWORD PTR [rax],r8d
   140026058:	rcl    BYTE PTR [rcx],1
   14002605a:	add    al,BYTE PTR [rax]
   14002605c:	mov    bl,0x44
   14002605e:	add    DWORD PTR [rax],eax
   140026060:	out    dx,al
   140026061:	add    DWORD PTR [rax],r8d
   140026064:	cwde   
   140026065:	adc    DWORD PTR [rdx],eax
   140026067:	add    dh,ch
   140026069:	add    DWORD PTR [rax],r8d
   14002606c:	or     BYTE PTR [rbp+0x1],al
   14002606f:	add    BYTE PTR [rax+0x10000211],cl
   140026075:	add    DWORD PTR [r8],r8d
   140026078:	xor    eax,DWORD PTR [rbp+0x1]
   14002607b:	add    al,dl
   14002607d:	adc    DWORD PTR [rdx],eax
   14002607f:	add    BYTE PTR [rbx],dh
   140026081:	add    DWORD PTR [r8],r8d
   140026084:	lahf   
   140026085:	add    DWORD PTR [r8],r8d
   140026088:	mov    esp,0x9f000211
   14002608d:	add    DWORD PTR [r8],r8d
   140026090:	mov    ecx,0xac000145
   140026095:	adc    DWORD PTR [rdx],eax
   140026097:	add    al,al
   140026099:	add    DWORD PTR [r8],r8d
   14002609c:	jrcxz  0x1400260e3
   14002609e:	add    DWORD PTR [rax],eax
   1400260a0:	rcl    BYTE PTR [rcx],1
   1400260a2:	add    al,BYTE PTR [rax]
   1400260a4:	jrcxz  0x1400260eb
   1400260a6:	add    DWORD PTR [rax],eax
   1400260a8:	(bad)  
   1400260a9:	rex.RX add DWORD PTR [rax],r8d
   1400260ac:	in     al,dx
   1400260ad:	adc    DWORD PTR [rdx],eax
   1400260af:	add    BYTE PTR [rsi],bl
   1400260b1:	rex.RX add DWORD PTR [rax],r8d
   1400260b4:	cmp    BYTE PTR [rsi+0x1],al
   1400260b7:	add    ah,bl
   1400260b9:	adc    DWORD PTR [rdx],eax
   1400260bb:	add    BYTE PTR [rsi+rax*2+0x1],al
   1400260bf:	add    BYTE PTR [rcx+0x146],ch
   1400260c5:	adc    al,BYTE PTR [rdx]
   1400260c7:	add    BYTE PTR [rsi+rax*2+0x482c0001],ch
   1400260ce:	add    DWORD PTR [rax],eax
   1400260d0:	or     BYTE PTR [rdx],dl
   1400260d2:	add    al,BYTE PTR [rax]
   1400260d4:	sub    al,0x48
   1400260d6:	add    DWORD PTR [rax],eax
   1400260d8:	adc    DWORD PTR [rcx+0x1],ecx
   1400260db:	add    BYTE PTR [rdx+rdx*1],ch
   1400260de:	add    al,BYTE PTR [rax]
   1400260e0:	adc    al,0x49
   1400260e2:	add    DWORD PTR [rax],eax
   1400260e4:	add    QWORD PTR es:[r8],rax
   1400260e8:	sub    al,0x12
   1400260ea:	add    al,BYTE PTR [rax]
   1400260ec:	sub    BYTE PTR [rcx+0x1],cl
   1400260ef:	add    BYTE PTR [rcx-0x6ffffeb7],dl
   1400260f5:	add    al,0x2
   1400260f7:	add    BYTE PTR [rax-0x1efffeb7],ah
   1400260fd:	add    QWORD PTR [r8],rax
   140026100:	sub    al,0x12
   140026102:	add    al,BYTE PTR [rax]
   140026104:	in     al,0x49
   140026106:	add    DWORD PTR [rax],eax
   140026108:	cld    
   140026109:	add    QWORD PTR [r8],rax
   14002610c:	sub    al,0x12
   14002610e:	add    al,BYTE PTR [rax]
   140026110:	add    al,0x4a
   140026112:	add    DWORD PTR [rax],eax
   140026114:	mov    ah,0x4a
   140026116:	add    DWORD PTR [rax],eax
   140026118:	cmp    al,0x12
   14002611a:	add    al,BYTE PTR [rax]
   14002611c:	mov    ah,0x4a
   14002611e:	add    DWORD PTR [rax],eax
   140026120:	retf   
   140026121:	rex.WX add QWORD PTR [rax],rax
   140026124:	sub    al,0x12
   140026126:	add    al,BYTE PTR [rax]
   140026128:	int3   
   140026129:	rex.WX add QWORD PTR [rax],rax
   14002612c:	add    al,0x4b
   14002612e:	add    DWORD PTR [rax],eax
   140026130:	movabs al,ds:0x3c00014b04000203
   140026139:	rex.WXB add QWORD PTR [r8],rax
   14002613c:	movabs al,ds:0x1100014bd0000203
   140026145:	add    QWORD PTR [rax],r8
   140026148:	pop    rsp
   140026149:	adc    al,BYTE PTR [rdx]
   14002614b:	add    BYTE PTR [rsp+rcx*2],ah
   14002614e:	add    DWORD PTR [rax],eax
   140026150:	xlat   BYTE PTR ds:[rbx]
   140026151:	add    QWORD PTR [rax],r8
   140026154:	jl     0x140026168
   140026156:	add    al,BYTE PTR [rax]
   140026158:	fmul   DWORD PTR [rcx+rax*1+0x0]
   14002615c:	and    ecx,DWORD PTR [rbp+0x1]
   14002615f:	add    BYTE PTR [rax+0x24000212],cl
   140026165:	add    QWORD PTR [r8],r8
   140026168:	(bad)  
   140026169:	add    QWORD PTR [r8],r8
   14002616c:	mov    al,0x12
   14002616e:	add    al,BYTE PTR [rax]
   140026170:	movabs al,ds:0x3400014dbc00014d
   140026179:	adc    al,BYTE PTR [rdx]
   14002617b:	add    BYTE PTR [rbp+rcx*2+0x4dd50001],bh
   140026182:	add    DWORD PTR [rax],eax
   140026184:	xor    al,0x12
   140026186:	add    al,BYTE PTR [rax]
   140026188:	loopne 0x1400261d7
   14002618a:	add    DWORD PTR [rax],eax
   14002618c:	add    DWORD PTR [rsi+0x1],ecx
   14002618f:	add    BYTE PTR [rdx+rdx*1],dh
   140026192:	add    al,BYTE PTR [rax]
   140026194:	add    DWORD PTR [rsi+0x1],ecx
   140026197:	add    BYTE PTR [rax+0x4e],al
   14002619a:	add    DWORD PTR [rax],eax
   14002619c:	xor    al,0x12
   14002619e:	add    al,BYTE PTR [rax]
   1400261a0:	rex
   1400261a1:	rex.WRX add QWORD PTR [rax],r8
   1400261a4:	push   0x4e
   1400261a6:	add    DWORD PTR [rax],eax
   1400261a8:	xor    al,0x12
   1400261aa:	add    al,BYTE PTR [rax]

Disassembly of section .rsrc:

0000000140027000 <.rsrc>:
	...
   140027008:	add    al,0x0
   14002700a:	add    BYTE PTR [rax],al
   14002700c:	add    BYTE PTR [rax],al
   14002700e:	add    DWORD PTR [rax],eax
   140027010:	sbb    BYTE PTR [rax],al
   140027012:	add    BYTE PTR [rax],al
   140027014:	sbb    BYTE PTR [rax],al
   140027016:	add    BYTE PTR [rax+0x0],al
   14002701c:	add    BYTE PTR [rax],al
   14002701e:	add    BYTE PTR [rax],al
   140027020:	add    al,0x0
   140027022:	add    BYTE PTR [rax],al
   140027024:	add    BYTE PTR [rax],al
   140027026:	add    DWORD PTR [rax],eax
   140027028:	add    DWORD PTR [rax],eax
   14002702a:	add    BYTE PTR [rax],al
   14002702c:	xor    BYTE PTR [rax],al
   14002702e:	add    BYTE PTR [rax+0x0],al
   140027034:	add    BYTE PTR [rax],al
   140027036:	add    BYTE PTR [rax],al
   140027038:	add    al,0x0
   14002703a:	add    BYTE PTR [rax],al
   14002703c:	add    BYTE PTR [rax],al
   14002703e:	add    DWORD PTR [rax],eax
   140027040:	or     DWORD PTR [rax+rax*1],eax
   140027043:	add    BYTE PTR [rax+0x0],cl
   140027046:	add    BYTE PTR [rax],al
   140027048:	pop    rax
   140027049:	jo     0x14002704d
   14002704b:	add    BYTE PTR [rdx+0x3],ch
   14002704e:	add    BYTE PTR [rax],al
   140027050:	in     al,0x4
   140027052:	add    BYTE PTR [rax],al
   140027054:	add    BYTE PTR [rax],al
   140027056:	add    BYTE PTR [rax],al
   140027058:	cmp    al,0x61
   14002705a:	jae    0x1400270cf
   14002705c:	gs ins DWORD PTR es:[rdi],dx
   14002705e:	(bad)  
   14002705f:	ins    BYTE PTR es:[rdi],dx
   140027060:	jns    0x140027082
   140027062:	js     0x1400270d1
   140027064:	ins    BYTE PTR es:[rdi],dx
   140027065:	outs   dx,BYTE PTR ds:[rsi]
   140027066:	jae    0x1400270a5
   140027068:	and    dh,BYTE PTR [rbp+0x72]
   14002706b:	outs   dx,BYTE PTR ds:[rsi]
   14002706c:	cmp    dh,BYTE PTR [rbx+0x63]
   14002706f:	push   0x73616d65
   140027074:	sub    eax,0x7263696d
   140027079:	outs   dx,DWORD PTR ds:[rsi]
   14002707a:	jae    0x1400270eb
   14002707c:	data16 je 0x1400270ac
   14002707f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140027082:	cmp    ah,BYTE PTR [rcx+0x73]
   140027085:	ins    DWORD PTR es:[rdi],dx
   140027086:	cs jbe 0x1400270ba
   140027089:	and    ah,BYTE PTR [rax]
   14002708b:	ins    DWORD PTR es:[rdi],dx
   14002708c:	(bad)  
   14002708d:	outs   dx,BYTE PTR ds:[rsi]
   14002708e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140027095:	jb     0x14002710a
   140027097:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14002709e:	xor    BYTE PTR [rdx],ah
   1400270a0:	ds or  eax,0x3c20200a
   1400270a6:	je     0x14002711a
   1400270a8:	jne    0x14002711d
   1400270aa:	je     0x1400270f5
   1400270ac:	outs   dx,BYTE PTR ds:[rsi]
   1400270ad:	outs   dx,WORD PTR ds:[rsi]
   1400270af:	and    BYTE PTR [rax+0x6d],bh
   1400270b2:	ins    BYTE PTR es:[rdi],dx
   1400270b3:	outs   dx,BYTE PTR ds:[rsi]
   1400270b4:	jae    0x1400270f3
   1400270b6:	and    dh,BYTE PTR [rbp+0x72]
   1400270b9:	outs   dx,BYTE PTR ds:[rsi]
   1400270ba:	cmp    dh,BYTE PTR [rbx+0x63]
   1400270bd:	push   0x73616d65
   1400270c2:	sub    eax,0x7263696d
   1400270c7:	outs   dx,DWORD PTR ds:[rsi]
   1400270c8:	jae    0x140027139
   1400270ca:	data16 je 0x1400270fa
   1400270cd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400270d0:	cmp    ah,BYTE PTR [rcx+0x73]
   1400270d3:	ins    DWORD PTR es:[rdi],dx
   1400270d4:	cs jbe 0x14002710a
   1400270d7:	and    bh,BYTE PTR [rsi]
   1400270d9:	or     eax,0x2020200a
   1400270de:	and    BYTE PTR [rbx+rsi*2],bh
   1400270e1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400270e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400270ed:	and    BYTE PTR [rax],ah
   1400270ef:	and    BYTE PTR [rax],ah
   1400270f1:	cmp    al,0x72
   1400270f3:	gs jno 0x14002716b
   1400270f6:	gs jae 0x14002716d
   1400270f9:	gs fs push rax
   1400270fc:	jb     0x140027167
   1400270fe:	jbe    0x140027169
   140027100:	ins    BYTE PTR es:[rdi],dx
   140027101:	gs addr32 gs jae 0x140027144
   140027106:	or     eax,0x2020200a
   14002710b:	and    BYTE PTR [rax],ah
   14002710d:	and    BYTE PTR [rax],ah
   14002710f:	and    BYTE PTR [rdx+rsi*2],bh
   140027112:	gs jno 0x14002718a
   140027115:	gs jae 0x14002718c
   140027118:	gs fs rex.RB js 0x140027182
   14002711d:	movsxd esi,DWORD PTR [rbp+0x74]
   140027120:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140027127:	ins    BYTE PTR es:[rdi],dx
   140027128:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14002712c:	gs ins BYTE PTR es:[rdi],dx
   14002712e:	cmp    eax,0x49736122
   140027133:	outs   dx,BYTE PTR ds:[rsi]
   140027134:	jbe    0x1400271a5
   140027136:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14002713a:	and    BYTE PTR [rbp+0x69],dh
   14002713d:	movsxd esp,DWORD PTR [r11+0x65]
   140027141:	jae    0x1400271b6
   140027143:	cmp    eax,0x6c616622
   140027148:	jae    0x1400271af
   14002714a:	and    bh,BYTE PTR [rsi]
   14002714c:	cmp    al,0x2f
   14002714e:	jb     0x1400271b5
   140027150:	jno    0x1400271c7
   140027152:	gs jae 0x1400271c9
   140027155:	gs fs rex.RB js 0x1400271bf
   14002715a:	movsxd esi,DWORD PTR [rbp+0x74]
   14002715d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140027164:	ins    BYTE PTR es:[rdi],dx
   140027165:	ds or  eax,0x2020200a
   14002716b:	and    BYTE PTR [rax],ah
   14002716d:	and    BYTE PTR [rdi+rbp*1],bh
   140027170:	jb     0x1400271d7
   140027172:	jno    0x1400271e9
   140027174:	gs jae 0x1400271eb
   140027177:	gs fs push rax
   14002717a:	jb     0x1400271e5
   14002717c:	jbe    0x1400271e7
   14002717e:	ins    BYTE PTR es:[rdi],dx
   14002717f:	gs addr32 gs jae 0x1400271c2
   140027184:	or     eax,0x2020200a
   140027189:	and    BYTE PTR [rdi+rbp*1],bh
   14002718c:	jae    0x1400271f3
   14002718e:	movsxd esi,DWORD PTR [rbp+0x72]
   140027191:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140027199:	cmp    al,0x2f
   14002719b:	je     0x14002720f
   14002719d:	jne    0x140027212
   14002719f:	je     0x1400271ea
   1400271a1:	outs   dx,BYTE PTR ds:[rsi]
   1400271a2:	outs   dx,WORD PTR ds:[rsi]
   1400271a4:	ds or  eax,0x3c20200a
   1400271aa:	fs gs jo 0x140027213
   1400271ae:	outs   dx,BYTE PTR ds:[rsi]
   1400271af:	fs outs dx,BYTE PTR gs:[rsi]
   1400271b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400271b5:	or     eax,0x2020200a
   1400271ba:	and    BYTE PTR [rsp+riz*2],bh
   1400271bd:	gs jo  0x140027225
   1400271c0:	outs   dx,BYTE PTR ds:[rsi]
   1400271c1:	fs outs dx,BYTE PTR gs:[rsi]
   1400271c4:	je     0x140027207
   1400271c6:	jae    0x14002723b
   1400271c8:	gs ins DWORD PTR es:[rdi],dx
   1400271ca:	(bad)  
   1400271cb:	ins    BYTE PTR es:[rdi],dx
   1400271cc:	jns    0x14002720c
   1400271ce:	or     eax,0x2020200a
   1400271d3:	and    BYTE PTR [rax],ah
   1400271d5:	and    BYTE PTR [rcx+riz*2],bh
   1400271d8:	jae    0x14002724d
   1400271da:	gs ins DWORD PTR es:[rdi],dx
   1400271dc:	(bad)  
   1400271dd:	ins    BYTE PTR es:[rdi],dx
   1400271de:	jns    0x140027229
   1400271e0:	fs outs dx,BYTE PTR gs:[rsi]
   1400271e3:	je     0x14002724e
   1400271e5:	je     0x140027260
   1400271e7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400271eb:	gs cmp eax,0x6e697722
   1400271f1:	xor    esi,DWORD PTR [rdx]
   1400271f3:	and    ah,BYTE PTR [rax]
   1400271f5:	outs   dx,BYTE PTR ds:[rsi]
   1400271f6:	(bad)  
   1400271f7:	ins    DWORD PTR es:[rdi],dx
   1400271f8:	gs cmp eax,0x63694d22
   1400271fe:	jb     0x14002726f
   140027200:	jae    0x140027271
   140027202:	data16 je 0x140027233
   140027205:	push   rdi
   140027206:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14002720d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002720f:	ins    DWORD PTR es:[rdi],dx
   140027210:	ins    DWORD PTR es:[rdi],dx
   140027211:	outs   dx,DWORD PTR ds:[rsi]
   140027212:	outs   dx,BYTE PTR ds:[rsi]
   140027213:	sub    eax,0x746e6f43
   140027218:	jb     0x140027289
   14002721a:	ins    BYTE PTR es:[rdi],dx
   14002721b:	jae    0x14002723f
   14002721d:	and    BYTE PTR [rsi+0x65],dh
   140027220:	jb     0x140027295
   140027222:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   140027229:	xor    BYTE PTR [rsi],ch
   14002722b:	xor    BYTE PTR [rsi],ch
   14002722d:	xor    BYTE PTR [rdx],ah
   14002722f:	and    BYTE PTR [rax+0x75],dh
   140027232:	(bad)  
   140027233:	ins    BYTE PTR es:[rdi],dx
   140027234:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14002723b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14002723f:	and    dh,BYTE PTR [rsi]
   140027241:	xor    eax,0x36623539
   140027246:	xor    al,0x31
   140027248:	xor    al,0x34
   14002724a:	movsxd esp,DWORD PTR [rbx+0x66]
   14002724d:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   140027251:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   140027255:	addr32 jne 0x1400272b9
   140027258:	addr32 gs cmp eax,0x20222a22
   14002725f:	jo     0x1400272d3
   140027261:	outs   dx,DWORD PTR ds:[rsi]
   140027262:	movsxd esp,DWORD PTR [rbp+0x73]
   140027265:	jae    0x1400272d6
   140027267:	jb     0x1400272aa
   140027269:	jb     0x1400272ce
   14002726b:	push   0x63657469
   140027270:	je     0x1400272e7
   140027272:	jb     0x1400272d9
   140027274:	cmp    eax,0x3e222a22
   140027279:	cmp    al,0x2f
   14002727b:	(bad)  
   14002727c:	jae    0x1400272f1
   14002727e:	gs ins DWORD PTR es:[rdi],dx
   140027280:	(bad)  
   140027281:	ins    BYTE PTR es:[rdi],dx
   140027282:	jns    0x1400272cd
   140027284:	fs outs dx,BYTE PTR gs:[rsi]
   140027287:	je     0x1400272f2
   140027289:	je     0x140027304
   14002728b:	ds or  eax,0x2020200a
   140027291:	and    BYTE PTR [rdi+rbp*1],bh
   140027294:	fs gs jo 0x1400272fd
   140027298:	outs   dx,BYTE PTR ds:[rsi]
   140027299:	fs outs dx,BYTE PTR gs:[rsi]
   14002729c:	je     0x1400272df
   14002729e:	jae    0x140027313
   1400272a0:	gs ins DWORD PTR es:[rdi],dx
   1400272a2:	(bad)  
   1400272a3:	ins    BYTE PTR es:[rdi],dx
   1400272a4:	jns    0x1400272e4
   1400272a6:	or     eax,0x3c20200a
   1400272ab:	(bad)  
   1400272ac:	fs gs jo 0x140027315
   1400272b0:	outs   dx,BYTE PTR ds:[rsi]
   1400272b1:	fs outs dx,BYTE PTR gs:[rsi]
   1400272b4:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400272b7:	or     eax,0x3c20200a
   1400272bc:	fs gs jo 0x140027325
   1400272c0:	outs   dx,BYTE PTR ds:[rsi]
   1400272c1:	fs outs dx,BYTE PTR gs:[rsi]
   1400272c4:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400272c7:	or     eax,0x2020200a
   1400272cc:	and    BYTE PTR [rsp+riz*2],bh
   1400272cf:	gs jo  0x140027337
   1400272d2:	outs   dx,BYTE PTR ds:[rsi]
   1400272d3:	fs outs dx,BYTE PTR gs:[rsi]
   1400272d6:	je     0x140027319
   1400272d8:	jae    0x14002734d
   1400272da:	gs ins DWORD PTR es:[rdi],dx
   1400272dc:	(bad)  
   1400272dd:	ins    BYTE PTR es:[rdi],dx
   1400272de:	jns    0x14002731e
   1400272e0:	or     eax,0x2020200a
   1400272e5:	and    BYTE PTR [rax],ah
   1400272e7:	and    BYTE PTR [rcx+riz*2],bh
   1400272ea:	jae    0x14002735f
   1400272ec:	gs ins DWORD PTR es:[rdi],dx
   1400272ee:	(bad)  
   1400272ef:	ins    BYTE PTR es:[rdi],dx
   1400272f0:	jns    0x14002733b
   1400272f2:	fs outs dx,BYTE PTR gs:[rsi]
   1400272f5:	je     0x140027360
   1400272f7:	je     0x140027372
   1400272f9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400272fd:	gs cmp eax,0x6e697722
   140027303:	xor    esi,DWORD PTR [rdx]
   140027305:	and    ah,BYTE PTR [rax]
   140027307:	outs   dx,BYTE PTR ds:[rsi]
   140027308:	(bad)  
   140027309:	ins    DWORD PTR es:[rdi],dx
   14002730a:	gs cmp eax,0x63694d22
   140027310:	jb     0x140027381
   140027312:	jae    0x140027383
   140027314:	data16 je 0x140027345
   140027317:	push   rsi
   140027318:	rex.XB cmp DWORD PTR [r8],esi
   14002731b:	cs rex.XB push r10
   14002731e:	push   rsp
   14002731f:	and    ah,BYTE PTR [rax]
   140027321:	jbe    0x140027388
   140027323:	jb     0x140027398
   140027325:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e39223d
   14002732c:	xor    BYTE PTR [rsi],ch
   14002732e:	xor    dh,BYTE PTR [rcx]
   140027330:	xor    BYTE PTR [rdx],dh
   140027332:	xor    ch,BYTE PTR [rsi]
   140027334:	cmp    BYTE PTR [rdx],ah
   140027336:	and    BYTE PTR [rax+0x72],dh
   140027339:	outs   dx,DWORD PTR ds:[rsi]
   14002733a:	movsxd esp,DWORD PTR [rbp+0x73]
   14002733d:	jae    0x1400273ae
   14002733f:	jb     0x140027382
   140027341:	jb     0x1400273a6
   140027343:	push   0x63657469
   140027348:	je     0x1400273bf
   14002734a:	jb     0x1400273b1
   14002734c:	cmp    eax,0x646d6122
   140027351:	ss xor al,0x22
   140027354:	and    BYTE PTR [rax+0x75],dh
   140027357:	(bad)  
   140027358:	ins    BYTE PTR es:[rdi],dx
   140027359:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140027360:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   140027364:	and    dh,BYTE PTR [rcx]
   140027366:	movsxd di,DWORD PTR [rax]
   140027369:	(bad)  
   14002736b:	(bad)  
   14002736c:	cmp    DWORD PTR [rcx+0x31],esp
   14002736f:	xor    DWORD PTR gs:[rax],edi
   140027372:	xor    esp,DWORD PTR gs:[rdx+0x22]
   140027376:	ds cmp al,0x2f
   140027379:	(bad)  
   14002737a:	jae    0x1400273ef
   14002737c:	gs ins DWORD PTR es:[rdi],dx
   14002737e:	(bad)  
   14002737f:	ins    BYTE PTR es:[rdi],dx
   140027380:	jns    0x1400273cb
   140027382:	fs outs dx,BYTE PTR gs:[rsi]
   140027385:	je     0x1400273f0
   140027387:	je     0x140027402
   140027389:	ds or  eax,0x2020200a
   14002738f:	and    BYTE PTR [rdi+rbp*1],bh
   140027392:	fs gs jo 0x1400273fb
   140027396:	outs   dx,BYTE PTR ds:[rsi]
   140027397:	fs outs dx,BYTE PTR gs:[rsi]
   14002739a:	je     0x1400273dd
   14002739c:	jae    0x140027411
   14002739e:	gs ins DWORD PTR es:[rdi],dx
   1400273a0:	(bad)  
   1400273a1:	ins    BYTE PTR es:[rdi],dx
   1400273a2:	jns    0x1400273e2
   1400273a4:	or     eax,0x3c20200a
   1400273a9:	(bad)  
   1400273aa:	fs gs jo 0x140027413
   1400273ae:	outs   dx,BYTE PTR ds:[rsi]
   1400273af:	fs outs dx,BYTE PTR gs:[rsi]
   1400273b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400273b5:	or     eax,0x612f3c0a
   1400273ba:	jae    0x14002742f
   1400273bc:	gs ins DWORD PTR es:[rdi],dx
   1400273be:	(bad)  
   1400273bf:	ins    BYTE PTR es:[rdi],dx
   1400273c0:	jns    0x140027400
   1400273c2:	push   rax
   1400273c3:	rex.B

Disassembly of section .reloc:

0000000140028000 <.reloc>:
   140028000:	add    BYTE PTR [rax+0x1],dl
   140028003:	add    BYTE PTR [rdx+rax*1-0x5c200000],bl
   14002800a:	clc    
   14002800b:	movabs ds:0xa4d0a4c8a4c0a400,eax
   140028014:	fsub   DWORD PTR [rax+riz*8-0x75b0f5c]
   14002801b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002801c:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140028022:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   140028028:	xor    BYTE PTR [rbp-0x5ab75ac0],ah
   14002802e:	push   rax
   14002802f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140028030:	pop    rax
   140028031:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140028032:	(bad)  
   140028033:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140028034:	push   0x78a570a5
   140028039:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002803a:	and    BYTE PTR [rbp-0x5a675a70],0xa0
   140028041:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140028042:	test   al,0xa5
   140028044:	mov    al,0xa5
   140028046:	mov    eax,0xc8a5c0a5
   14002804b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002804c:	shl    BYTE PTR [rbp-0x5a175a20],1
   140028052:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140028054:	clc    
   140028055:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140028056:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14002805c:	sbb    BYTE PTR [rsi-0x59cf59e0],ah
   140028062:	cmp    BYTE PTR [rsi-0x59b759c0],ah
   140028068:	push   rax
   140028069:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002806a:	pop    rax
   14002806b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002806c:	(bad)  
   14002806d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002806e:	push   0xffffffff80a670a6
   140028073:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140028074:	mov    BYTE PTR [rsi-0x59675970],ah
   14002807a:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   140028083:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140028084:	shl    BYTE PTR [rsi-0x591f5928],1
   14002808a:	call   0x138a97135
   14002808f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140028090:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140028096:	and    BYTE PTR [rdi-0x58cf58d8],ah
   14002809c:	cmp    BYTE PTR [rdi-0x58b758c0],ah
   1400280a2:	push   rax
   1400280a3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400280a4:	pop    rax
   1400280a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400280a6:	(bad)  
   1400280a7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400280a8:	jo     0x140028051
   1400280aa:	js     0x140028053
   1400280ac:	and    BYTE PTR [rdi-0x586f5878],0x98
   1400280b3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400280b4:	movabs al,ds:0xc8a7c0a7b0a7a8a7
   1400280bd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400280be:	shl    BYTE PTR [rdi-0x581f5828],1
   1400280c4:	call   0x138aa7170
   1400280c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400280ca:	add    BYTE PTR [rax-0x57e757f0],ch
   1400280d0:	and    BYTE PTR [rax-0x57cf57d8],ch
   1400280d6:	cmp    BYTE PTR [rax-0x57b757c0],ch
   1400280dc:	push   rax
   1400280dd:	test   al,0x60
   1400280df:	test   al,0x68
   1400280e1:	test   al,0x70
   1400280e3:	test   al,0x78
   1400280e5:	test   al,0x80
   1400280e7:	test   al,0x88
   1400280e9:	test   al,0x90
   1400280eb:	test   al,0x98
   1400280ed:	test   al,0xa0
   1400280ef:	test   al,0xb0
   1400280f1:	test   al,0xb8
   1400280f3:	test   al,0xc0
   1400280f5:	test   al,0xc8
   1400280f7:	test   al,0xd0
   1400280f9:	test   al,0xd8
   1400280fb:	test   al,0xe0
   1400280fd:	test   al,0xe8
   1400280ff:	test   al,0xf0
   140028101:	test   al,0x0
   140028103:	test   eax,0xa910a908
   140028108:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14002810e:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   140028114:	push   rax
   140028115:	test   eax,0xa960a958
   14002811a:	push   0x78a970a9
   14002811f:	test   eax,0xa988a980
   140028124:	nop
   140028125:	test   eax,0xa9a8a9a0
   14002812a:	mov    al,0xa9
   14002812c:	mov    eax,0xc8a9c0a9
   140028131:	test   eax,0xa9d8a9d0
   140028136:	loopne 0x1400280e1
   140028138:	lock test eax,0xaa00a9f8
   14002813e:	or     BYTE PTR [rdx-0x55e755f0],ch
   140028144:	and    BYTE PTR [rdx-0x55cf55d8],ch
   14002814a:	stos   BYTE PTR es:[rdi],al
   14002814c:	rex.W stos BYTE PTR es:[rdi],al
   14002814e:	push   rax
   14002814f:	stos   BYTE PTR es:[rdi],al
   140028150:	pop    rax
   140028151:	stos   BYTE PTR es:[rdi],al
   140028152:	(bad)  
   140028153:	stos   BYTE PTR es:[rdi],al
   140028154:	push   0x78aa70aa
   140028159:	stos   BYTE PTR es:[rdi],al
   14002815a:	sub    BYTE PTR [rdx-0x556f5578],0x98
   140028161:	stos   BYTE PTR es:[rdi],al
   140028162:	movabs al,ds:0xc0aab8aab0aaa8aa
   14002816b:	stos   BYTE PTR es:[rdi],al
   14002816c:	enter  0xd0aa,0xaa
   140028170:	fsubr  DWORD PTR [rdx-0x55175520]
   140028176:	lock stos BYTE PTR es:[rdi],al
   140028178:	clc    
   140028179:	stos   BYTE PTR es:[rdi],al
   14002817a:	add    BYTE PTR [rbx-0x54ef54f8],ch
   140028180:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   140028186:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   14002818c:	stos   QWORD PTR es:[rdi],rax
   14002818e:	push   rax
   14002818f:	stos   DWORD PTR es:[rdi],eax
   140028190:	pop    rax
   140028191:	stos   DWORD PTR es:[rdi],eax
   140028192:	(bad)  
   140028193:	stos   DWORD PTR es:[rdi],eax
   140028194:	push   0xffffffff80ab70ab
   140028199:	stos   DWORD PTR es:[rdi],eax
   14002819a:	mov    BYTE PTR [rbx-0x54675470],ch
   1400281a0:	movabs al,ds:0xc0abb8abb0aba8ab
   1400281a9:	stos   DWORD PTR es:[rdi],eax
   1400281aa:	shr    BYTE PTR [rbx-0x541f5428],1
   1400281b0:	call   0x138ae7260
   1400281b5:	stos   DWORD PTR es:[rdi],eax
   1400281b6:	add    BYTE PTR [rax+rcx*1+0x20ac10ac],ch
   1400281bd:	lods   al,BYTE PTR ds:[rsi]
   1400281be:	sub    BYTE PTR [rax+rsi*1+0x40ac38ac],ch
   1400281c5:	lods   al,BYTE PTR ds:[rsi]
   1400281c6:	rex.W lods al,BYTE PTR ds:[rsi]
   1400281c8:	push   rax
   1400281c9:	lods   al,BYTE PTR ds:[rsi]
   1400281ca:	pop    rax
   1400281cb:	lods   al,BYTE PTR ds:[rsi]
   1400281cc:	(bad)  
   1400281cd:	lods   al,BYTE PTR ds:[rsi]
   1400281ce:	jo     0x14002817c
   1400281d0:	js     0x14002817e
   1400281d2:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400281da:	movabs al,ds:0xc8acc0acb0aca8ac
   1400281e3:	lods   al,BYTE PTR ds:[rsi]
   1400281e4:	shr    BYTE PTR [rax+rbx*8-0x17531f54],1
   1400281eb:	lods   al,BYTE PTR ds:[rsi]
   1400281ec:	lock lods al,BYTE PTR ds:[rsi]
   1400281ee:	clc    
   1400281ef:	lods   al,BYTE PTR ds:[rsi]
   1400281f0:	add    BYTE PTR [rbp-0x52e752f0],ch
   1400281f6:	and    BYTE PTR [rbp-0x52cf52d8],ch
   1400281fc:	cmp    BYTE PTR [rbp-0x52b752c0],ch
   140028202:	push   rax
   140028203:	lods   eax,DWORD PTR ds:[rsi]
   140028204:	(bad)  
   140028205:	lods   eax,DWORD PTR ds:[rsi]
   140028206:	push   0x78ad70ad
   14002820b:	lods   eax,DWORD PTR ds:[rsi]
   14002820c:	sub    BYTE PTR [rbp-0x526f5278],0x98
   140028213:	lods   eax,DWORD PTR ds:[rsi]
   140028214:	movabs al,ds:0xc8adc0adb8adb0ad
   14002821d:	lods   eax,DWORD PTR ds:[rsi]
   14002821e:	shr    BYTE PTR [rbp-0x521f5228],1
   140028224:	call   0x140b072d6
   140028229:	scas   al,BYTE PTR es:[rdi]
   14002822a:	or     BYTE PTR [rsi-0x51e751f0],ch
   140028230:	and    BYTE PTR [rsi-0x51cf51d8],ch
   140028236:	cmp    BYTE PTR [rsi-0x51af51c0],ch
   14002823c:	pop    rax
   14002823d:	scas   al,BYTE PTR es:[rdi]
   14002823e:	(bad)  
   14002823f:	scas   al,BYTE PTR es:[rdi]
   140028240:	push   0x78ae70ae
   140028245:	scas   al,BYTE PTR es:[rdi]
   140028246:	sub    BYTE PTR [rsi-0x516f5178],0xa0
   14002824d:	scas   al,BYTE PTR es:[rdi]
   14002824e:	test   al,0xae
   140028250:	mov    al,0xae
   140028252:	mov    eax,0xc8aec0ae
   140028257:	scas   al,BYTE PTR es:[rdi]
   140028258:	shr    BYTE PTR [rsi-0x511f5128],1
   14002825e:	lock scas al,BYTE PTR es:[rdi]
   140028260:	clc    
   140028261:	scas   al,BYTE PTR es:[rdi]
   140028262:	add    BYTE PTR [rdi-0x50ef50f8],ch
   140028268:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   14002826e:	xor    BYTE PTR [rdi-0x50b750c0],ch
   140028274:	push   rax
   140028275:	scas   eax,DWORD PTR es:[rdi]
   140028276:	pop    rax
   140028277:	scas   eax,DWORD PTR es:[rdi]
   140028278:	(bad)  
   140028279:	scas   eax,DWORD PTR es:[rdi]
   14002827a:	push   0x78af70af
   14002827f:	scas   eax,DWORD PTR es:[rdi]
   140028280:	sub    BYTE PTR [rdi-0x50675070],0xa0
   140028287:	scas   eax,DWORD PTR es:[rdi]
   140028288:	test   al,0xaf
   14002828a:	mov    al,0xaf
   14002828c:	mov    eax,0xc8afc0af
   140028291:	scas   eax,DWORD PTR es:[rdi]
   140028292:	shr    BYTE PTR [rdi-0x50175020],1
   140028298:	lock scas eax,DWORD PTR es:[rdi]
   14002829a:	clc    
   14002829b:	scas   eax,DWORD PTR es:[rdi]
   14002829c:	add    BYTE PTR [rax+0x1],ah
   14002829f:	add    BYTE PTR [rbx+rax*1-0x60000000],ah
   1400282a6:	or     BYTE PTR [rax-0x5fe75ff0],ah
   1400282ac:	and    BYTE PTR [rax-0x5fc75fd0],ah
   1400282b2:	movabs al,ds:0xa060a058a050a048
   1400282bc:	push   0xffffffff80a070a0
   1400282c1:	movabs al,ds:0xa0a0a098a090a088
   1400282ca:	test   al,0xa0
   1400282cc:	mov    al,0xa0
   1400282ce:	mov    eax,0xd0a0c0a0
   1400282d3:	movabs al,ds:0xa0f0a0e8a0e0a0d8
   1400282dc:	clc    
   1400282dd:	movabs al,ds:0xa120a110a108a100
   1400282e6:	sub    BYTE PTR [rcx-0x5ec75ed0],ah
   1400282ec:	rex movabs eax,ds:0xa160a158a150a148
   1400282f6:	jo     0x140028299
   1400282f8:	js     0x14002829b
   1400282fa:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   140028301:	movabs eax,ds:0xa1c0a1b0a1a8a1a0
   14002830a:	enter  0xd0a1,0xa1
   14002830e:	fsub   DWORD PTR [rcx-0x5e175e20]
   140028314:	lock movabs eax,ds:0xa218a210a200a1f8
   14002831e:	and    BYTE PTR [rdx-0x5dcf5dd8],ah
   140028324:	cmp    BYTE PTR [rdx-0x5db75dc0],ah
   14002832a:	push   rax
   14002832b:	movabs ds:0xa278a270a268a260,al
   140028334:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   14002833b:	movabs ds:0xa2c0a2b8a2b0a2a0,al
   140028344:	enter  0xd0a2,0xa2
   140028348:	fsub   DWORD PTR [rdx-0x5d175d20]
   14002834e:	lock movabs ds:0xa318a310a308a300,al
   140028358:	and    BYTE PTR [rbx-0x5ccf5cd8],ah
   14002835e:	cmp    BYTE PTR [rbx-0x5caf5cc0],ah
   140028364:	pop    rax
   140028365:	movabs ds:0xa378a370a368a360,eax
   14002836e:	and    BYTE PTR [rbx-0x5c6f5c78],0xa0
   140028375:	movabs ds:0xa3c0a3b8a3b0a3a8,eax
   14002837e:	enter  0xd0a3,0xa3
   140028382:	fsub   DWORD PTR [rbx-0x5c0f5c20]
   140028388:	clc    
   140028389:	movabs ds:0xa418a410a408a400,eax
   140028392:	and    BYTE PTR [rax+rbp*1+0x40a430a4],ah
   140028399:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002839a:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002839c:	push   rax
   14002839d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002839e:	pop    rax
   14002839f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400283a0:	(bad)  
   1400283a1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400283a2:	push   0x78a470a4
   1400283a7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400283a8:	and    BYTE PTR [rax+rdx*4-0x5f5b675c],0xa4
   1400283b0:	test   al,0xa4
   1400283b2:	mov    al,0xa4
   1400283b4:	mov    eax,0xc8a4c0a4
   1400283b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400283ba:	shl    BYTE PTR [rax+riz*8-0xf5b175c],1
   1400283c1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400283c2:	clc    
   1400283c3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400283c4:	add    BYTE PTR [rbp-0x5aef5af8],ah
   1400283ca:	sbb    BYTE PTR [rbp-0x5acf5ae0],ah
   1400283d0:	cmp    BYTE PTR [rbp-0x5ab75ac0],ah
   1400283d6:	push   rax
   1400283d7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400283d8:	pop    rax
   1400283d9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400283da:	(bad)  
   1400283db:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400283dc:	push   0xffffffff80a570a5
   1400283e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400283e2:	mov    BYTE PTR [rbp-0x5a675a70],ah
   1400283e8:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   1400283f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400283f2:	shl    BYTE PTR [rbp-0x5a1f5a28],1
   1400283f8:	call   0x138a874a2
   1400283fd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400283fe:	add    BYTE PTR [rsi-0x59ef59f8],ah
   140028404:	and    BYTE PTR [rsi-0x59cf59d8],ah
   14002840a:	cmp    BYTE PTR [rsi-0x59b759c0],ah
   140028410:	push   rax
   140028411:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140028412:	pop    rax
   140028413:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140028414:	(bad)  
   140028415:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140028416:	jo     0x1400283be
   140028418:	js     0x1400283c0
   14002841a:	and    BYTE PTR [rsi-0x596f5978],0x98
   140028421:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140028422:	movabs al,ds:0xc8a6c0a6b0a6a8a6
   14002842b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002842c:	shl    BYTE PTR [rsi-0x591f5928],1
   140028432:	call   0x138a974dd
   140028437:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140028438:	add    BYTE PTR [rdi-0x58e758f0],ah
   14002843e:	and    BYTE PTR [rdi-0x58cf58d8],ah
   140028444:	cmp    BYTE PTR [rdi-0x58b758c0],ah
   14002844a:	push   rax
   14002844b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002844c:	(bad)  
   14002844d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002844e:	push   0x78a770a7
   140028453:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140028454:	and    BYTE PTR [rdi-0x586f5878],0x98
   14002845b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002845c:	movabs al,ds:0xc8a7c0a7b8a7b0a7
   140028465:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140028466:	shl    BYTE PTR [rdi-0x581f5828],1
   14002846c:	call   0x140aa7518
   140028471:	test   al,0x8
   140028473:	test   al,0x10
   140028475:	test   al,0x18
   140028477:	test   al,0x20
   140028479:	test   al,0x28
   14002847b:	test   al,0x30
   14002847d:	test   al,0x38
   14002847f:	test   al,0x40
   140028481:	test   al,0x50
   140028483:	test   al,0x58
   140028485:	test   al,0x60
   140028487:	test   al,0x68
   140028489:	test   al,0x70
   14002848b:	test   al,0x78
   14002848d:	test   al,0x80
   14002848f:	test   al,0x88
   140028491:	test   al,0x90
   140028493:	test   al,0xa0
   140028495:	test   al,0xa8
   140028497:	test   al,0xb0
   140028499:	test   al,0xb8
   14002849b:	test   al,0xc0
   14002849d:	test   al,0xc8
   14002849f:	test   al,0xd0
   1400284a1:	test   al,0xd8
   1400284a3:	test   al,0xe0
   1400284a5:	test   al,0xf0
   1400284a7:	test   al,0xf8
   1400284a9:	test   al,0x0
   1400284ab:	test   eax,0xa910a908
   1400284b0:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   1400284b6:	xor    BYTE PTR [rcx-0x56b756c0],ch
   1400284bc:	push   rax
   1400284bd:	test   eax,0xa960a958
   1400284c2:	push   0x78a970a9
   1400284c7:	test   eax,0xa990a980
   1400284cc:	cwde   
   1400284cd:	test   eax,0xa9a8a9a0
   1400284d2:	mov    al,0xa9
   1400284d4:	mov    eax,0xc8a9c0a9
   1400284d9:	test   eax,0xa9e0a9d0
   1400284de:	call   0x138ac758c
   1400284e3:	test   eax,0xaa08aa00
   1400284e8:	adc    BYTE PTR [rdx-0x55df55e8],ch
   1400284ee:	xor    BYTE PTR [rdx-0x55bf55c8],ch
   1400284f4:	rex.W stos BYTE PTR es:[rdi],al
   1400284f6:	push   rax
   1400284f7:	stos   BYTE PTR es:[rdi],al
   1400284f8:	pop    rax
   1400284f9:	stos   BYTE PTR es:[rdi],al
   1400284fa:	(bad)  
   1400284fb:	stos   BYTE PTR es:[rdi],al
   1400284fc:	push   0xffffffff80aa70aa
   140028501:	stos   BYTE PTR es:[rdi],al
   140028502:	mov    BYTE PTR [rdx-0x55675570],ch
   140028508:	movabs al,ds:0xc0aab8aab0aaa8aa
   140028511:	stos   BYTE PTR es:[rdi],al
   140028512:	shr    BYTE PTR [rdx-0x551f5528],1
   140028518:	call   0x138ad75c7
   14002851d:	stos   BYTE PTR es:[rdi],al
   14002851e:	add    BYTE PTR [rbx-0x54ef54f8],ch
   140028524:	and    BYTE PTR [rbx-0x54cf54d8],ch
   14002852a:	cmp    BYTE PTR [rbx-0x54b754c0],ch
   140028530:	push   rax
   140028531:	stos   DWORD PTR es:[rdi],eax
   140028532:	pop    rax
   140028533:	stos   DWORD PTR es:[rdi],eax
   140028534:	(bad)  
   140028535:	stos   DWORD PTR es:[rdi],eax
   140028536:	jo     0x1400284e3
   140028538:	js     0x1400284e5
   14002853a:	sub    BYTE PTR [rbx-0x546f5478],0x98
   140028541:	stos   DWORD PTR es:[rdi],eax
   140028542:	movabs al,ds:0xc8abc0abb0aba8ab
   14002854b:	stos   DWORD PTR es:[rdi],eax
   14002854c:	shr    BYTE PTR [rbx-0x541f5428],1
   140028552:	call   0x138ae7602
   140028557:	stos   DWORD PTR es:[rdi],eax
   140028558:	add    BYTE PTR [rax+rdx*1+0x20ac18ac],ch
   14002855f:	lods   al,BYTE PTR ds:[rsi]
   140028560:	sub    BYTE PTR [rax+rsi*1+0x40ac38ac],ch
   140028567:	lods   al,BYTE PTR ds:[rsi]
   140028568:	rex.W lods al,BYTE PTR ds:[rsi]
   14002856a:	push   rax
   14002856b:	lods   al,BYTE PTR ds:[rsi]
   14002856c:	(bad)  
   14002856d:	lods   al,BYTE PTR ds:[rsi]
   14002856e:	push   0x78ac70ac
   140028573:	lods   al,BYTE PTR ds:[rsi]
   140028574:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   14002857c:	movabs al,ds:0xc8acc0acb8acb0ac
   140028585:	lods   al,BYTE PTR ds:[rsi]
   140028586:	shr    BYTE PTR [rax+rbx*8-0x17531f54],1
   14002858d:	lods   al,BYTE PTR ds:[rsi]
   14002858e:	lock lods al,BYTE PTR ds:[rsi]
   140028590:	add    BYTE PTR [rbp-0x52ef52f8],ch
   140028596:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14002859c:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   1400285a2:	push   rax
   1400285a3:	lods   eax,DWORD PTR ds:[rsi]
   1400285a4:	pop    rax
   1400285a5:	lods   eax,DWORD PTR ds:[rsi]
   1400285a6:	(bad)  
   1400285a7:	lods   eax,DWORD PTR ds:[rsi]
   1400285a8:	push   0x78ad70ad
   1400285ad:	lods   eax,DWORD PTR ds:[rsi]
   1400285ae:	sub    BYTE PTR [rbp-0x526f5278],0xa0
   1400285b5:	lods   eax,DWORD PTR ds:[rsi]
   1400285b6:	test   al,0xad
   1400285b8:	mov    al,0xad
   1400285ba:	mov    eax,0xc8adc0ad
   1400285bf:	lods   eax,DWORD PTR ds:[rsi]
   1400285c0:	shr    BYTE PTR [rbp-0x521f5228],1
   1400285c6:	lock lods eax,DWORD PTR ds:[rsi]
   1400285c8:	clc    
   1400285c9:	lods   eax,DWORD PTR ds:[rsi]
   1400285ca:	add    BYTE PTR [rsi-0x51ef51f8],ch
   1400285d0:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   1400285d6:	xor    BYTE PTR [rsi-0x51b751c0],ch
   1400285dc:	push   rax
   1400285dd:	scas   al,BYTE PTR es:[rdi]
   1400285de:	pop    rax
   1400285df:	scas   al,BYTE PTR es:[rdi]
   1400285e0:	(bad)  
   1400285e1:	scas   al,BYTE PTR es:[rdi]
   1400285e2:	push   0x78ae70ae
   1400285e7:	scas   al,BYTE PTR es:[rdi]
   1400285e8:	sub    BYTE PTR [rsi-0x51675170],0xa0
   1400285ef:	scas   al,BYTE PTR es:[rdi]
   1400285f0:	test   al,0xae
   1400285f2:	mov    al,0xae
   1400285f4:	mov    eax,0xc8aec0ae
   1400285f9:	scas   al,BYTE PTR es:[rdi]
   1400285fa:	shr    BYTE PTR [rsi-0x51175120],1
   140028600:	lock scas al,BYTE PTR es:[rdi]
   140028602:	clc    
   140028603:	scas   al,BYTE PTR es:[rdi]
   140028604:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14002860a:	sbb    BYTE PTR [rdi-0x50cf50e0],ch
   140028610:	cmp    BYTE PTR [rdi-0x50b750c0],ch
   140028616:	push   rax
   140028617:	scas   eax,DWORD PTR es:[rdi]
   140028618:	pop    rax
   140028619:	scas   eax,DWORD PTR es:[rdi]
   14002861a:	(bad)  
   14002861b:	scas   eax,DWORD PTR es:[rdi]
   14002861c:	push   0xffffffff80af70af
   140028621:	scas   eax,DWORD PTR es:[rdi]
   140028622:	mov    BYTE PTR [rdi-0x50675070],ch
   140028628:	movabs al,ds:0xc0afb8afb0afa8af
   140028631:	scas   eax,DWORD PTR es:[rdi]
   140028632:	shr    BYTE PTR [rdi-0x501f5028],1
   140028638:	call   0x138b276ec
   14002863d:	scas   eax,DWORD PTR es:[rdi]
   14002863e:	add    BYTE PTR [rax],al
   140028640:	add    BYTE PTR [rax+0x1],dh
   140028643:	add    BYTE PTR [rax],bh
   140028645:	add    DWORD PTR [rax],eax
   140028647:	add    BYTE PTR [rax],al
   140028649:	movabs al,ds:0xa028a020a010a008
   140028652:	xor    BYTE PTR [rax-0x5fbf5fc8],ah
   140028658:	rex.W movabs al,ds:0xa070a060a058a050
   140028662:	js     0x140028604
   140028664:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14002866b:	movabs al,ds:0xa0c0a0b0a0a8a0a0
   140028674:	enter  0xd0a0,0xa0
   140028678:	fsub   DWORD PTR [rax-0x5f175f20]
   14002867e:	lock movabs al,ds:0xa118a110a100a0f8
   140028688:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   14002868e:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   140028694:	push   rax
   140028695:	movabs eax,ds:0xa178a170a168a160
   14002869e:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   1400286a5:	movabs eax,ds:0xa1c0a1b8a1b0a1a0
   1400286ae:	enter  0xd0a1,0xa1
   1400286b2:	fsub   DWORD PTR [rcx-0x5e175e20]
   1400286b8:	lock movabs eax,ds:0xa8c8a8c0a8b8a8b0
   1400286c2:	shr    BYTE PTR [rax-0x571f5728],1
   1400286c8:	call   0x138ab7775
   1400286cd:	test   al,0x0
   1400286cf:	test   eax,0xa910a908
   1400286d4:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   1400286da:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   1400286e0:	test   rax,0xffffffffa958a950
   1400286e6:	(bad)  
   1400286e7:	test   eax,0xa970a968
   1400286ec:	js     0x140028697
   1400286ee:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400286f5:	test   eax,0xa9a8a9a0
   1400286fa:	mov    al,0xa9
   1400286fc:	mov    eax,0xc8a9c0a9
   140028701:	test   eax,0xa9d8a9d0
   140028706:	loopne 0x1400286b1
   140028708:	call   0x138ac77b6
   14002870d:	test   eax,0xaa08aa00
   140028712:	adc    BYTE PTR [rdx-0x55df55e8],ch
   140028718:	sub    BYTE PTR [rdx-0x55c755d0],ch
   14002871e:	stos   BYTE PTR es:[rdi],al
   140028720:	rex.W stos BYTE PTR es:[rdi],al
   140028722:	push   rax
   140028723:	stos   BYTE PTR es:[rdi],al
   140028724:	pop    rax
   140028725:	stos   BYTE PTR es:[rdi],al
   140028726:	(bad)  
   140028727:	stos   BYTE PTR es:[rdi],al
   140028728:	push   0x78aa70aa
   14002872d:	stos   BYTE PTR es:[rdi],al
   14002872e:	sub    BYTE PTR [rdx-0x556f5578],0x98
   140028735:	stos   BYTE PTR es:[rdi],al
   140028736:	test   al,0xaa
   140028738:	mov    al,0xaa
   14002873a:	mov    eax,0xc8aac0aa
   14002873f:	stos   BYTE PTR es:[rdi],al
   140028740:	shr    BYTE PTR [rdx-0x551f5528],1
   140028746:	call   0x138ad77f5
   14002874b:	stos   BYTE PTR es:[rdi],al
   14002874c:	add    BYTE PTR [rbx-0x54ef54f8],ch
   140028752:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   140028758:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   14002875e:	stos   QWORD PTR es:[rdi],rax
   140028760:	push   rax
   140028761:	stos   DWORD PTR es:[rdi],eax
   140028762:	pop    rax
   140028763:	stos   DWORD PTR es:[rdi],eax
   140028764:	(bad)  
   140028765:	stos   DWORD PTR es:[rdi],eax
   140028766:	push   0xffffffff80ab70ab
   14002876b:	stos   DWORD PTR es:[rdi],eax
   14002876c:	mov    BYTE PTR [rbx-0x54675470],ch
   140028772:	movabs al,ds:0x1c000abb0aba8ab
   14002877b:	add    BYTE PTR [rax+rax*1],cl
   14002877e:	add    BYTE PTR [rax],al
   140028780:	mov    al,0xaa
   140028782:	mov    eax,0x23000aa
   140028787:	add    BYTE PTR [rax+rax*1-0x60000000],ch
   14002878e:	or     BYTE PTR [rax-0x5fc75ff0],ah
   140028794:	(bad)  
   140028795:	movabs al,ds:0xa120a0e8a0b8a088
   14002879e:	push   rax
   14002879f:	movabs eax,ds:0xa218a1e8a1b8a188
   1400287a8:	rex.W movabs ds:0xa308a2d8a2a8a278,al
   1400287b2:	cmp    BYTE PTR [rbx-0x5c675c98],ah
   1400287b8:	shl    BYTE PTR [rbx-0x5bbf5bf8],1
   1400287be:	js     0x140028764
   1400287c0:	mov    al,0xa4
   1400287c2:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400287c4:	xor    BYTE PTR [rbp-0x5a5f5a98],ah
   1400287ca:	fsub   DWORD PTR [rbp-0x59c759f8]
   1400287d0:	push   0xffffffffe8a6a8a6
   1400287d5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400287d6:	and    BYTE PTR [rdi-0x587758b0],ah
   1400287dc:	shl    BYTE PTR [rdi-0x57cf5808],0x68
   1400287e3:	test   al,0xa0
   1400287e5:	test   al,0xd0
   1400287e7:	test   al,0x8
   1400287e9:	test   eax,0xa970a940
   1400287ee:	cwde   
   1400287ef:	test   eax,0xaa00a9c8
   1400287f4:	cmp    BYTE PTR [rdx-0x55575588],ch
   1400287fa:	loopne 0x1400287a6
   1400287fc:	adc    BYTE PTR [rbx-0x548754b8],ch
   140028802:	test   al,0xab
   140028804:	loopne 0x1400287b1
   140028806:	sbb    BYTE PTR [rax+rdx*2-0x47537754],ch
   14002880d:	lods   al,BYTE PTR ds:[rsi]
   14002880e:	lock lods al,BYTE PTR ds:[rsi]
   140028810:	and    BYTE PTR [rbp-0x527752b0],ch
   140028816:	mov    eax,0x18ade8ad
   14002881b:	scas   al,BYTE PTR es:[rdi]
   14002881c:	push   rax
   14002881d:	scas   al,BYTE PTR es:[rdi]
   14002881e:	sub    BYTE PTR [rsi-0x51275158],0x8
   140028825:	scas   eax,DWORD PTR es:[rdi]
   140028826:	rex scas eax,DWORD PTR es:[rdi]
   140028828:	js     0x1400287d9
   14002882a:	mov    al,0xaf
   14002882c:	loopne 0x1400287dd
   14002882e:	add    BYTE PTR [rax],al
   140028830:	add    BYTE PTR [rax+0x2],al
   140028833:	add    BYTE PTR [rax+0x0],al
   140028836:	add    BYTE PTR [rax],al
   140028838:	adc    BYTE PTR [rax-0x5f8f5fc0],ah
   14002883e:	test   al,0xa0
   140028840:	loopne 0x1400287e2
   140028842:	sbb    BYTE PTR [rcx-0x5e875eb8],ah
   140028848:	mov    al,0xa1
   14002884a:	call   0x190a4a0f0
   14002884f:	movabs ds:0xa328a2f0a2b8a280,al
   140028858:	pop    rax
   140028859:	movabs ds:0xa438a400a3c8a390,eax
   140028862:	push   0xffffffffd8a4d0a4
   140028867:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140028868:	loopne 0x14002880e
   14002886a:	call   0x140a77913
	...
