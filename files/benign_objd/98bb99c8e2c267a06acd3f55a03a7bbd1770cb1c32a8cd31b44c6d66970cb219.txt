
98bb99c8e2c267a06acd3f55a03a7bbd1770cb1c32a8cd31b44c6d66970cb219.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x4495]        # 0x4054b0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x4496]        # 0x4054c0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x4499]        # 0x4054d0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x445c]        # 0x4054a0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x430f]        # 0x405360
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4431]        # 0x405490
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402b98
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401b50
  401081:	mov    rdx,QWORD PTR [rip+0x4368]        # 0x4053f0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x434e]        # 0x4053e0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x43b4]        # 0x405450
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x42eb]        # 0x405390
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401730
  4010af:	mov    rax,QWORD PTR [rip+0x425a]        # 0x405310
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402b98
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x909]        # 0x401a30
  401127:	call   0x401a20
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4315]        # 0x405480
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x42a5]        # 0x405440
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402bb0
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x42ca]        # 0x405490
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x41cb]        # 0x4053c0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x817e]        # 0x409380
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x41a7]        # 0x4053d0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x40ec]        # 0x405350
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401d40
  40127d:	lea    rcx,[rip+0x105c]        # 0x4022e0
  401284:	call   QWORD PTR [rip+0x80ee]        # 0x409378
  40128a:	mov    rdx,QWORD PTR [rip+0x411f]        # 0x4053b0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4021f0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402be0
  4012a5:	call   0x401b30
  4012aa:	mov    rax,QWORD PTR [rip+0x40af]        # 0x405360
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x40c1]        # 0x405380
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x1cca],eax        # 0x403000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402b20
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402b08
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402b20
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402b18
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401700
  4013bb:	mov    rax,QWORD PTR [rip+0x3fae]        # 0x405370
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x402cb0
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402b80
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x3f99]        # 0x4053d0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402b88
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x3fad]        # 0x405410
  401463:	mov    rcx,QWORD PTR [rip+0x3f96]        # 0x405400
  40146a:	call   0x402b78
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7e8f]        # 0x409328
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x3f89]        # 0x405430
  4014a7:	mov    rcx,QWORD PTR [rip+0x3f72]        # 0x405420
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402b78
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402b40
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x3fb5]        # 0x405490
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401740
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x3f85]        # 0x405490
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401740
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	jmp    QWORD PTR [rip+0x7daa]        # 0x4092e0
  401536:	nop
  401537:	nop
  401538:	jmp    QWORD PTR [rip+0x7d9a]        # 0x4092d8
  40153e:	nop
  40153f:	nop
  401540:	jmp    QWORD PTR [rip+0x7d82]        # 0x4092c8
  401546:	nop
  401547:	nop
  401548:	jmp    QWORD PTR [rip+0x7d72]        # 0x4092c0
  40154e:	nop
  40154f:	nop
  401550:	jmp    QWORD PTR [rip+0x7d62]        # 0x4092b8
  401556:	nop
  401557:	nop
  401558:	jmp    QWORD PTR [rip+0x7d52]        # 0x4092b0
  40155e:	nop
  40155f:	nop
  401560:	jmp    QWORD PTR [rip+0x7d42]        # 0x4092a8
  401566:	nop
  401567:	nop
  401568:	jmp    QWORD PTR [rip+0x7d32]        # 0x4092a0
  40156e:	nop
  40156f:	nop
  401570:	jmp    QWORD PTR [rip+0x7d22]        # 0x409298
  401576:	nop
  401577:	nop
  401578:	jmp    QWORD PTR [rip+0x7d12]        # 0x409290
  40157e:	nop
  40157f:	nop
  401580:	jmp    QWORD PTR [rip+0x7d02]        # 0x409288
  401586:	nop
  401587:	nop
  401588:	jmp    QWORD PTR [rip+0x7cf2]        # 0x409280
  40158e:	nop
  40158f:	nop
  401590:	push   rbx
  401591:	sub    rsp,0x30
  401595:	mov    rbx,rcx
  401598:	mov    rcx,QWORD PTR [rip+0x7471]        # 0x408a10
  40159f:	call   0x401b40
  4015a4:	cmp    rax,0xffffffffffffffff
  4015a8:	mov    QWORD PTR [rsp+0x20],rax
  4015ad:	je     0x401625
  4015af:	mov    ecx,0x8
  4015b4:	call   0x402b70
  4015b9:	mov    rcx,QWORD PTR [rip+0x7450]        # 0x408a10
  4015c0:	call   0x401b40
  4015c5:	mov    rcx,QWORD PTR [rip+0x744c]        # 0x408a18
  4015cc:	mov    QWORD PTR [rsp+0x20],rax
  4015d1:	call   0x401b40
  4015d6:	lea    rdx,[rsp+0x20]
  4015db:	lea    r8,[rsp+0x28]
  4015e0:	mov    rcx,rbx
  4015e3:	mov    QWORD PTR [rsp+0x28],rax
  4015e8:	call   0x402bb8
  4015ed:	mov    rcx,QWORD PTR [rsp+0x20]
  4015f2:	mov    rbx,rax
  4015f5:	call   0x401b50
  4015fa:	mov    rcx,QWORD PTR [rsp+0x28]
  4015ff:	mov    QWORD PTR [rip+0x740a],rax        # 0x408a10
  401606:	call   0x401b50
  40160b:	mov    ecx,0x8
  401610:	mov    QWORD PTR [rip+0x7401],rax        # 0x408a18
  401617:	call   0x402b58
  40161c:	mov    rax,rbx
  40161f:	add    rsp,0x30
  401623:	pop    rbx
  401624:	ret    
  401625:	mov    rax,QWORD PTR [rip+0x3d74]        # 0x4053a0
  40162c:	mov    rcx,rbx
  40162f:	call   QWORD PTR [rax]
  401631:	add    rsp,0x30
  401635:	pop    rbx
  401636:	ret    
  401637:	nop    WORD PTR [rax+rax*1+0x0]
  401640:	sub    rsp,0x28
  401644:	call   0x401590
  401649:	test   rax,rax
  40164c:	sete   al
  40164f:	movzx  eax,al
  401652:	neg    eax
  401654:	add    rsp,0x28
  401658:	ret    
  401659:	nop
  40165a:	nop
  40165b:	nop
  40165c:	nop
  40165d:	nop
  40165e:	nop
  40165f:	nop
  401660:	sub    rsp,0x28
  401664:	mov    rax,QWORD PTR [rip+0x3755]        # 0x404dc0
  40166b:	mov    rax,QWORD PTR [rax]
  40166e:	test   rax,rax
  401671:	je     0x401690
  401673:	call   rax
  401675:	mov    rax,QWORD PTR [rip+0x3744]        # 0x404dc0
  40167c:	lea    rdx,[rax+0x8]
  401680:	mov    rax,QWORD PTR [rax+0x8]
  401684:	mov    QWORD PTR [rip+0x3735],rdx        # 0x404dc0
  40168b:	test   rax,rax
  40168e:	jne    0x401673
  401690:	add    rsp,0x28
  401694:	ret    
  401695:	nop
  401696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016a0:	push   rsi
  4016a1:	push   rbx
  4016a2:	sub    rsp,0x28
  4016a6:	mov    rsi,QWORD PTR [rip+0x3c73]        # 0x405320
  4016ad:	mov    rax,QWORD PTR [rsi]
  4016b0:	cmp    eax,0xffffffff
  4016b3:	mov    ebx,eax
  4016b5:	je     0x4016e0
  4016b7:	test   ebx,ebx
  4016b9:	je     0x4016ca
  4016bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4016c0:	mov    eax,ebx
  4016c2:	call   QWORD PTR [rsi+rax*8]
  4016c5:	sub    ebx,0x1
  4016c8:	jne    0x4016c0
  4016ca:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401660
  4016d1:	add    rsp,0x28
  4016d5:	pop    rbx
  4016d6:	pop    rsi
  4016d7:	jmp    0x401640
  4016dc:	nop    DWORD PTR [rax+0x0]
  4016e0:	xor    ebx,ebx
  4016e2:	jmp    0x4016e6
  4016e4:	mov    ebx,eax
  4016e6:	lea    edx,[rbx+0x1]
  4016e9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4016ee:	mov    rax,rdx
  4016f1:	jne    0x4016e4
  4016f3:	jmp    0x4016b7
  4016f5:	nop
  4016f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401700:	mov    eax,DWORD PTR [rip+0x692a]        # 0x408030
  401706:	test   eax,eax
  401708:	je     0x401710
  40170a:	repz ret 
  40170c:	nop    DWORD PTR [rax+0x0]
  401710:	mov    DWORD PTR [rip+0x6916],0x1        # 0x408030
  40171a:	jmp    0x4016a0
  40171c:	nop
  40171d:	nop
  40171e:	nop
  40171f:	nop
  401720:	mov    rax,QWORD PTR [rip+0x7cb9]        # 0x4093e0
  401727:	rex.W jmp rax
  40172a:	nop
  40172b:	nop
  40172c:	nop
  40172d:	nop
  40172e:	nop
  40172f:	nop
  401730:	xor    eax,eax
  401732:	ret    
  401733:	nop
  401734:	nop
  401735:	nop
  401736:	nop
  401737:	nop
  401738:	nop
  401739:	nop
  40173a:	nop
  40173b:	nop
  40173c:	nop
  40173d:	nop
  40173e:	nop
  40173f:	nop
  401740:	push   r12
  401742:	push   rbp
  401743:	push   rdi
  401744:	push   rsi
  401745:	push   rbx
  401746:	sub    rsp,0x40
  40174a:	mov    rbx,QWORD PTR [rip+0x36cf]        # 0x404e20
  401751:	movabs rax,0x2b992ddfa232
  40175b:	mov    QWORD PTR [rsp+0x20],0x0
  401764:	cmp    rbx,rax
  401767:	je     0x401780
  401769:	not    rbx
  40176c:	mov    QWORD PTR [rip+0x36bd],rbx        # 0x404e30
  401773:	add    rsp,0x40
  401777:	pop    rbx
  401778:	pop    rsi
  401779:	pop    rdi
  40177a:	pop    rbp
  40177b:	pop    r12
  40177d:	ret    
  40177e:	xchg   ax,ax
  401780:	lea    rcx,[rsp+0x20]
  401785:	call   QWORD PTR [rip+0x7ba5]        # 0x409330
  40178b:	mov    r12,QWORD PTR [rsp+0x20]
  401790:	call   QWORD PTR [rip+0x7b7a]        # 0x409310
  401796:	mov    ebp,eax
  401798:	call   QWORD PTR [rip+0x7b7a]        # 0x409318
  40179e:	mov    edi,eax
  4017a0:	call   QWORD PTR [rip+0x7b92]        # 0x409338
  4017a6:	lea    rcx,[rsp+0x30]
  4017ab:	mov    esi,eax
  4017ad:	call   QWORD PTR [rip+0x7b9d]        # 0x409350
  4017b3:	xor    r12,QWORD PTR [rsp+0x30]
  4017b8:	mov    edx,edi
  4017ba:	movabs rax,0xffffffffffff
  4017c4:	xor    rbp,r12
  4017c7:	mov    rdi,rbp
  4017ca:	xor    rdi,rdx
  4017cd:	mov    edx,esi
  4017cf:	xor    rdi,rdx
  4017d2:	mov    rsi,rdi
  4017d5:	and    rsi,rax
  4017d8:	cmp    rsi,rbx
  4017db:	je     0x401800
  4017dd:	mov    rax,rsi
  4017e0:	not    rax
  4017e3:	mov    QWORD PTR [rip+0x3636],rsi        # 0x404e20
  4017ea:	mov    QWORD PTR [rip+0x363f],rax        # 0x404e30
  4017f1:	add    rsp,0x40
  4017f5:	pop    rbx
  4017f6:	pop    rsi
  4017f7:	pop    rdi
  4017f8:	pop    rbp
  4017f9:	pop    r12
  4017fb:	ret    
  4017fc:	nop    DWORD PTR [rax+0x0]
  401800:	movabs rax,0xffffd466d2205dcc
  40180a:	movabs rsi,0x2b992ddfa233
  401814:	jmp    0x4017e3
  401816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401820:	push   rbp
  401821:	push   rsi
  401822:	push   rbx
  401823:	mov    rbp,rsp
  401826:	sub    rsp,0x70
  40182a:	mov    rsi,rcx
  40182d:	lea    rcx,[rip+0x684c]        # 0x408080
  401834:	call   QWORD PTR [rip+0x7b26]        # 0x409360
  40183a:	mov    rbx,QWORD PTR [rip+0x6937]        # 0x408178
  401841:	xor    r8d,r8d
  401844:	lea    rdx,[rbp-0x28]
  401848:	mov    rcx,rbx
  40184b:	call   QWORD PTR [rip+0x7b17]        # 0x409368
  401851:	test   rax,rax
  401854:	mov    r9,rax
  401857:	je     0x401900
  40185d:	lea    rax,[rbp-0x20]
  401861:	mov    QWORD PTR [rsp+0x38],0x0
  40186a:	mov    r8,rbx
  40186d:	mov    rdx,QWORD PTR [rbp-0x28]
  401871:	xor    ecx,ecx
  401873:	mov    QWORD PTR [rsp+0x30],rax
  401878:	lea    rax,[rbp-0x18]
  40187c:	mov    QWORD PTR [rsp+0x28],rax
  401881:	lea    rax,[rip+0x67f8]        # 0x408080
  401888:	mov    QWORD PTR [rsp+0x20],rax
  40188d:	call   QWORD PTR [rip+0x7add]        # 0x409370
  401893:	mov    rax,QWORD PTR [rip+0x68de]        # 0x408178
  40189a:	xor    ecx,ecx
  40189c:	mov    QWORD PTR [rip+0x685d],rsi        # 0x408100
  4018a3:	mov    DWORD PTR [rip+0x6cd3],0xc0000409        # 0x408580
  4018ad:	mov    DWORD PTR [rip+0x6ccd],0x1        # 0x408584
  4018b7:	mov    QWORD PTR [rip+0x6cd2],rax        # 0x408590
  4018be:	mov    rax,QWORD PTR [rip+0x355b]        # 0x404e20
  4018c5:	mov    QWORD PTR [rbp-0x10],rax
  4018c9:	mov    rax,QWORD PTR [rip+0x3560]        # 0x404e30
  4018d0:	mov    QWORD PTR [rbp-0x8],rax
  4018d4:	call   QWORD PTR [rip+0x7a9e]        # 0x409378
  4018da:	lea    rcx,[rip+0x378f]        # 0x405070
  4018e1:	call   QWORD PTR [rip+0x7ab1]        # 0x409398
  4018e7:	call   QWORD PTR [rip+0x7a1b]        # 0x409308
  4018ed:	mov    edx,0xc0000409
  4018f2:	mov    rcx,rax
  4018f5:	call   QWORD PTR [rip+0x7a8d]        # 0x409388
  4018fb:	call   0x402b50
  401900:	mov    rax,QWORD PTR [rbp+0x18]
  401904:	mov    QWORD PTR [rip+0x686d],rax        # 0x408178
  40190b:	lea    rax,[rbp+0x8]
  40190f:	mov    QWORD PTR [rip+0x6802],rax        # 0x408118
  401916:	jmp    0x401893
  40191b:	nop
  40191c:	nop
  40191d:	nop
  40191e:	nop
  40191f:	nop
  401920:	sub    rsp,0x28
  401924:	test   edx,edx
  401926:	je     0x401940
  401928:	cmp    edx,0x3
  40192b:	je     0x401940
  40192d:	mov    eax,0x1
  401932:	add    rsp,0x28
  401936:	ret    
  401937:	nop    WORD PTR [rax+rax*1+0x0]
  401940:	call   0x402630
  401945:	mov    eax,0x1
  40194a:	add    rsp,0x28
  40194e:	ret    
  40194f:	nop
  401950:	push   rsi
  401951:	push   rbx
  401952:	sub    rsp,0x28
  401956:	mov    rax,QWORD PTR [rip+0x39a3]        # 0x405300
  40195d:	cmp    DWORD PTR [rax],0x2
  401960:	je     0x401968
  401962:	mov    DWORD PTR [rax],0x2
  401968:	cmp    edx,0x2
  40196b:	je     0x401980
  40196d:	cmp    edx,0x1
  401970:	je     0x4019b2
  401972:	mov    eax,0x1
  401977:	add    rsp,0x28
  40197b:	pop    rbx
  40197c:	pop    rsi
  40197d:	ret    
  40197e:	xchg   ax,ax
  401980:	lea    rbx,[rip+0x86d9]        # 0x40a060
  401987:	lea    rsi,[rip+0x86d2]        # 0x40a060
  40198e:	cmp    rbx,rsi
  401991:	je     0x401972
  401993:	mov    rax,QWORD PTR [rbx]
  401996:	test   rax,rax
  401999:	je     0x40199d
  40199b:	call   rax
  40199d:	add    rbx,0x8
  4019a1:	cmp    rbx,rsi
  4019a4:	jne    0x401993
  4019a6:	mov    eax,0x1
  4019ab:	add    rsp,0x28
  4019af:	pop    rbx
  4019b0:	pop    rsi
  4019b1:	ret    
  4019b2:	call   0x402630
  4019b7:	jmp    0x401972
  4019b9:	nop    DWORD PTR [rax+0x0]
  4019c0:	xor    eax,eax
  4019c2:	ret    
  4019c3:	nop
  4019c4:	nop
  4019c5:	nop
  4019c6:	nop
  4019c7:	nop
  4019c8:	nop
  4019c9:	nop
  4019ca:	nop
  4019cb:	nop
  4019cc:	nop
  4019cd:	nop
  4019ce:	nop
  4019cf:	nop
  4019d0:	sub    rsp,0x58
  4019d4:	mov    rax,QWORD PTR [rip+0x6c85]        # 0x408660
  4019db:	test   rax,rax
  4019de:	je     0x401a0c
  4019e0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4019e9:	mov    DWORD PTR [rsp+0x20],ecx
  4019ed:	lea    rcx,[rsp+0x20]
  4019f2:	mov    QWORD PTR [rsp+0x28],rdx
  4019f7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4019fd:	movsd  QWORD PTR [rsp+0x38],xmm3
  401a03:	movsd  QWORD PTR [rsp+0x40],xmm0
  401a09:	call   rax
  401a0b:	nop
  401a0c:	add    rsp,0x58
  401a10:	ret    
  401a11:	nop    DWORD PTR [rax+rax*1+0x0]
  401a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a20:	mov    QWORD PTR [rip+0x6c39],rcx        # 0x408660
  401a27:	jmp    0x402b90
  401a2c:	nop    DWORD PTR [rax+0x0]
  401a30:	push   rsi
  401a31:	push   rbx
  401a32:	sub    rsp,0x78
  401a36:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401a3b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401a40:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401a46:	cmp    DWORD PTR [rcx],0x6
  401a49:	ja     0x401b20
  401a4f:	mov    edx,DWORD PTR [rcx]
  401a51:	lea    rax,[rip+0x375c]        # 0x4051b4
  401a58:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401a5c:	add    rax,rdx
  401a5f:	jmp    rax
  401a61:	lea    rbx,[rip+0x3628]        # 0x405090
  401a68:	nop    DWORD PTR [rax+rax*1+0x0]
  401a70:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401a76:	mov    rsi,QWORD PTR [rcx+0x8]
  401a7a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401a7f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401a84:	call   0x402ba8
  401a89:	movsd  QWORD PTR [rsp+0x30],xmm8
  401a90:	lea    rcx,[rax+0x60]
  401a94:	lea    rdx,[rip+0x36ed]        # 0x405188
  401a9b:	movsd  QWORD PTR [rsp+0x28],xmm7
  401aa1:	mov    r9,rsi
  401aa4:	mov    r8,rbx
  401aa7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401aad:	call   0x402b38
  401ab2:	nop
  401ab3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401ab8:	xor    eax,eax
  401aba:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401abf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401ac5:	add    rsp,0x78
  401ac9:	pop    rbx
  401aca:	pop    rsi
  401acb:	ret    
  401acc:	nop    DWORD PTR [rax+0x0]
  401ad0:	lea    rbx,[rip+0x35d8]        # 0x4050af
  401ad7:	jmp    0x401a70
  401ad9:	nop    DWORD PTR [rax+0x0]
  401ae0:	lea    rbx,[rip+0x35e9]        # 0x4050d0
  401ae7:	jmp    0x401a70
  401ae9:	nop    DWORD PTR [rax+0x0]
  401af0:	lea    rbx,[rip+0x3649]        # 0x405140
  401af7:	jmp    0x401a70
  401afc:	nop    DWORD PTR [rax+0x0]
  401b00:	lea    rbx,[rip+0x3611]        # 0x405118
  401b07:	jmp    0x401a70
  401b0c:	nop    DWORD PTR [rax+0x0]
  401b10:	lea    rbx,[rip+0x35d9]        # 0x4050f0
  401b17:	jmp    0x401a70
  401b1c:	nop    DWORD PTR [rax+0x0]
  401b20:	lea    rbx,[rip+0x364f]        # 0x405176
  401b27:	jmp    0x401a70
  401b2c:	nop
  401b2d:	nop
  401b2e:	nop
  401b2f:	nop
  401b30:	fninit 
  401b32:	ret    
  401b33:	nop
  401b34:	nop
  401b35:	nop
  401b36:	nop
  401b37:	nop
  401b38:	nop
  401b39:	nop
  401b3a:	nop
  401b3b:	nop
  401b3c:	nop
  401b3d:	nop
  401b3e:	nop
  401b3f:	nop
  401b40:	mov    rax,rcx
  401b43:	ret    
  401b44:	xchg   ax,ax
  401b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b50:	mov    rax,rcx
  401b53:	ret    
  401b54:	nop
  401b55:	nop
  401b56:	nop
  401b57:	nop
  401b58:	nop
  401b59:	nop
  401b5a:	nop
  401b5b:	nop
  401b5c:	nop
  401b5d:	nop
  401b5e:	nop
  401b5f:	nop
  401b60:	push   rsi
  401b61:	push   rbx
  401b62:	sub    rsp,0x38
  401b66:	lea    rax,[rsp+0x58]
  401b6b:	mov    rbx,rcx
  401b6e:	mov    QWORD PTR [rsp+0x58],rdx
  401b73:	mov    QWORD PTR [rsp+0x60],r8
  401b78:	mov    QWORD PTR [rsp+0x68],r9
  401b7d:	mov    QWORD PTR [rsp+0x28],rax
  401b82:	call   0x402ba8
  401b87:	lea    rcx,[rip+0x3642]        # 0x4051d0
  401b8e:	lea    r9,[rax+0x60]
  401b92:	mov    r8d,0x1b
  401b98:	mov    edx,0x1
  401b9d:	call   0x402b28
  401ba2:	mov    rsi,QWORD PTR [rsp+0x28]
  401ba7:	call   0x402ba8
  401bac:	lea    rcx,[rax+0x60]
  401bb0:	mov    rdx,rbx
  401bb3:	mov    r8,rsi
  401bb6:	call   0x402af8
  401bbb:	call   0x402b50
  401bc0:	nop
  401bc1:	nop    DWORD PTR [rax+rax*1+0x0]
  401bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bd0:	push   r13
  401bd2:	push   r12
  401bd4:	push   rbp
  401bd5:	push   rdi
  401bd6:	push   rsi
  401bd7:	push   rbx
  401bd8:	sub    rsp,0x58
  401bdc:	movsxd rbp,DWORD PTR [rip+0x6aa1]        # 0x408684
  401be3:	mov    rbx,rcx
  401be6:	mov    rsi,rdx
  401be9:	mov    rdi,r8
  401bec:	test   ebp,ebp
  401bee:	jle    0x401cea
  401bf4:	mov    rax,QWORD PTR [rip+0x6a8d]        # 0x408688
  401bfb:	xor    r9d,r9d
  401bfe:	add    rax,0x8
  401c02:	mov    r10,QWORD PTR [rax]
  401c05:	cmp    rbx,r10
  401c08:	jb     0x401c1e
  401c0a:	mov    rdx,QWORD PTR [rax+0x8]
  401c0e:	mov    r11d,DWORD PTR [rdx+0x8]
  401c12:	add    r10,r11
  401c15:	cmp    rbx,r10
  401c18:	jb     0x401cd0
  401c1e:	add    r9d,0x1
  401c22:	add    rax,0x18
  401c26:	cmp    r9d,ebp
  401c29:	jne    0x401c02
  401c2b:	mov    rcx,rbx
  401c2e:	call   0x402840
  401c33:	test   rax,rax
  401c36:	mov    r12,rax
  401c39:	je     0x401d22
  401c3f:	lea    rbp,[rbp+rbp*2+0x0]
  401c44:	shl    rbp,0x3
  401c48:	mov    r13,rbp
  401c4b:	add    r13,QWORD PTR [rip+0x6a36]        # 0x408688
  401c52:	mov    QWORD PTR [r13+0x10],rax
  401c56:	mov    DWORD PTR [r13+0x0],0x0
  401c5e:	call   0x402960
  401c63:	mov    edx,DWORD PTR [r12+0xc]
  401c68:	mov    r8d,0x30
  401c6e:	add    rax,rdx
  401c71:	lea    rdx,[rsp+0x20]
  401c76:	mov    QWORD PTR [r13+0x8],rax
  401c7a:	mov    rax,QWORD PTR [rip+0x6a07]        # 0x408688
  401c81:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401c86:	call   QWORD PTR [rip+0x771c]        # 0x4093a8
  401c8c:	test   rax,rax
  401c8f:	je     0x401d05
  401c91:	mov    eax,DWORD PTR [rsp+0x44]
  401c95:	lea    edx,[rax-0x4]
  401c98:	and    edx,0xfffffffb
  401c9b:	je     0x401cc9
  401c9d:	sub    eax,0x40
  401ca0:	and    eax,0xffffffbf
  401ca3:	je     0x401cc9
  401ca5:	mov    r9,rbp
  401ca8:	add    r9,QWORD PTR [rip+0x69d9]        # 0x408688
  401caf:	mov    r8d,0x40
  401cb5:	mov    rdx,QWORD PTR [rsp+0x38]
  401cba:	mov    rcx,QWORD PTR [rsp+0x20]
  401cbf:	call   QWORD PTR [rip+0x76db]        # 0x4093a0
  401cc5:	test   eax,eax
  401cc7:	je     0x401cf1
  401cc9:	add    DWORD PTR [rip+0x69b4],0x1        # 0x408684
  401cd0:	mov    r8,rdi
  401cd3:	mov    rdx,rsi
  401cd6:	mov    rcx,rbx
  401cd9:	add    rsp,0x58
  401cdd:	pop    rbx
  401cde:	pop    rsi
  401cdf:	pop    rdi
  401ce0:	pop    rbp
  401ce1:	pop    r12
  401ce3:	pop    r13
  401ce5:	jmp    0x402b18
  401cea:	xor    ebp,ebp
  401cec:	jmp    0x401c2b
  401cf1:	call   QWORD PTR [rip+0x7629]        # 0x409320
  401cf7:	lea    rcx,[rip+0x354a]        # 0x405248
  401cfe:	mov    edx,eax
  401d00:	call   0x401b60
  401d05:	mov    rax,QWORD PTR [rip+0x697c]        # 0x408688
  401d0c:	mov    edx,DWORD PTR [r12+0x8]
  401d11:	lea    rcx,[rip+0x34f8]        # 0x405210
  401d18:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401d1d:	call   0x401b60
  401d22:	lea    rcx,[rip+0x34c7]        # 0x4051f0
  401d29:	mov    rdx,rbx
  401d2c:	call   0x401b60
  401d31:	nop
  401d32:	nop    DWORD PTR [rax+0x0]
  401d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d40:	push   rbp
  401d41:	push   r14
  401d43:	push   r13
  401d45:	push   r12
  401d47:	push   rdi
  401d48:	push   rsi
  401d49:	push   rbx
  401d4a:	mov    rbp,rsp
  401d4d:	sub    rsp,0x60
  401d51:	mov    ebx,DWORD PTR [rip+0x6929]        # 0x408680
  401d57:	test   ebx,ebx
  401d59:	je     0x401d70
  401d5b:	mov    rsp,rbp
  401d5e:	pop    rbx
  401d5f:	pop    rsi
  401d60:	pop    rdi
  401d61:	pop    r12
  401d63:	pop    r13
  401d65:	pop    r14
  401d67:	pop    rbp
  401d68:	ret    
  401d69:	nop    DWORD PTR [rax+0x0]
  401d70:	mov    DWORD PTR [rip+0x6906],0x1        # 0x408680
  401d7a:	call   0x402890
  401d7f:	cdqe   
  401d81:	lea    rax,[rax+rax*2]
  401d85:	lea    rax,[rax*8+0x1e]
  401d8d:	and    rax,0xfffffffffffffff0
  401d91:	call   0x402ab0
  401d96:	mov    rsi,QWORD PTR [rip+0x3593]        # 0x405330
  401d9d:	mov    rbx,QWORD PTR [rip+0x359c]        # 0x405340
  401da4:	sub    rsp,rax
  401da7:	mov    DWORD PTR [rip+0x68d3],0x0        # 0x408684
  401db1:	lea    rax,[rsp+0x20]
  401db6:	mov    QWORD PTR [rip+0x68cb],rax        # 0x408688
  401dbd:	mov    rax,rsi
  401dc0:	sub    rax,rbx
  401dc3:	cmp    rax,0x7
  401dc7:	jle    0x401d5b
  401dc9:	cmp    rax,0xb
  401dcd:	jle    0x401df5
  401dcf:	mov    r11d,DWORD PTR [rbx]
  401dd2:	test   r11d,r11d
  401dd5:	jne    0x401f20
  401ddb:	mov    r10d,DWORD PTR [rbx+0x4]
  401ddf:	test   r10d,r10d
  401de2:	jne    0x401f20
  401de8:	mov    r9d,DWORD PTR [rbx+0x8]
  401dec:	test   r9d,r9d
  401def:	jne    0x401e0c
  401df1:	add    rbx,0xc
  401df5:	mov    r8d,DWORD PTR [rbx]
  401df8:	test   r8d,r8d
  401dfb:	jne    0x401f20
  401e01:	mov    ecx,DWORD PTR [rbx+0x4]
  401e04:	test   ecx,ecx
  401e06:	jne    0x401f20
  401e0c:	mov    edx,DWORD PTR [rbx+0x8]
  401e0f:	cmp    edx,0x1
  401e12:	jne    0x40202c
  401e18:	add    rbx,0xc
  401e1c:	cmp    rbx,rsi
  401e1f:	jae    0x401d5b
  401e25:	mov    r12,QWORD PTR [rip+0x3534]        # 0x405360
  401e2c:	lea    r13,[rbp-0x30]
  401e30:	movabs r14,0xffffffff00000000
  401e3a:	mov    ecx,DWORD PTR [rbx+0x4]
  401e3d:	mov    eax,DWORD PTR [rbx]
  401e3f:	movzx  edx,BYTE PTR [rbx+0x8]
  401e43:	add    rax,r12
  401e46:	add    rcx,r12
  401e49:	cmp    edx,0x10
  401e4c:	mov    r8,QWORD PTR [rax]
  401e4f:	je     0x401f96
  401e55:	jbe    0x401f5d
  401e5b:	cmp    edx,0x20
  401e5e:	je     0x401fdf
  401e64:	cmp    edx,0x40
  401e67:	jne    0x401fcb
  401e6d:	sub    r8,rax
  401e70:	mov    rdx,r13
  401e73:	mov    rdi,r13
  401e76:	mov    rax,r8
  401e79:	add    rax,QWORD PTR [rcx]
  401e7c:	mov    r8d,0x8
  401e82:	mov    QWORD PTR [rbp-0x30],rax
  401e86:	call   0x401bd0
  401e8b:	add    rbx,0xc
  401e8f:	cmp    rbx,rsi
  401e92:	jb     0x401e3a
  401e94:	mov    eax,DWORD PTR [rip+0x67ea]        # 0x408684
  401e9a:	xor    ebx,ebx
  401e9c:	xor    esi,esi
  401e9e:	test   eax,eax
  401ea0:	jle    0x401d5b
  401ea6:	mov    r14,QWORD PTR [rip+0x74fb]        # 0x4093a8
  401ead:	lea    r13,[rbp-0x34]
  401eb1:	mov    r12,QWORD PTR [rip+0x74e8]        # 0x4093a0
  401eb8:	jmp    0x401ed3
  401eba:	nop    WORD PTR [rax+rax*1+0x0]
  401ec0:	add    esi,0x1
  401ec3:	add    rbx,0x18
  401ec7:	cmp    esi,DWORD PTR [rip+0x67b7]        # 0x408684
  401ecd:	jge    0x401d5b
  401ed3:	mov    rax,rbx
  401ed6:	add    rax,QWORD PTR [rip+0x67ab]        # 0x408688
  401edd:	mov    edx,DWORD PTR [rax]
  401edf:	test   edx,edx
  401ee1:	je     0x401ec0
  401ee3:	mov    rcx,QWORD PTR [rax+0x8]
  401ee7:	mov    r8d,0x30
  401eed:	mov    rdx,rdi
  401ef0:	call   r14
  401ef3:	test   rax,rax
  401ef6:	je     0x40200e
  401efc:	mov    rax,QWORD PTR [rip+0x6785]        # 0x408688
  401f03:	mov    r9,r13
  401f06:	mov    rdx,QWORD PTR [rbp-0x18]
  401f0a:	mov    rcx,QWORD PTR [rbp-0x30]
  401f0e:	mov    r8d,DWORD PTR [rax+rbx*1]
  401f12:	call   r12
  401f15:	jmp    0x401ec0
  401f17:	nop    WORD PTR [rax+rax*1+0x0]
  401f20:	cmp    rbx,rsi
  401f23:	jae    0x401d5b
  401f29:	mov    r12,QWORD PTR [rip+0x3430]        # 0x405360
  401f30:	lea    rdi,[rbp-0x30]
  401f34:	mov    ecx,DWORD PTR [rbx+0x4]
  401f37:	mov    eax,DWORD PTR [rbx]
  401f39:	mov    r8d,0x4
  401f3f:	mov    rdx,rdi
  401f42:	add    rbx,0x8
  401f46:	add    rcx,r12
  401f49:	add    eax,DWORD PTR [rcx]
  401f4b:	mov    DWORD PTR [rbp-0x30],eax
  401f4e:	call   0x401bd0
  401f53:	cmp    rbx,rsi
  401f56:	jb     0x401f34
  401f58:	jmp    0x401e94
  401f5d:	cmp    edx,0x8
  401f60:	jne    0x401fcb
  401f62:	movzx  edx,BYTE PTR [rcx]
  401f65:	mov    rdi,r13
  401f68:	mov    r10,rdx
  401f6b:	or     r10,0xffffffffffffff00
  401f72:	test   dl,dl
  401f74:	cmovs  rdx,r10
  401f78:	sub    rdx,rax
  401f7b:	lea    rax,[r8+rdx*1]
  401f7f:	mov    r8d,0x1
  401f85:	mov    rdx,r13
  401f88:	mov    QWORD PTR [rbp-0x30],rax
  401f8c:	call   0x401bd0
  401f91:	jmp    0x401e8b
  401f96:	movzx  edx,WORD PTR [rcx]
  401f99:	mov    rdi,r13
  401f9c:	mov    r10,rdx
  401f9f:	or     r10,0xffffffffffff0000
  401fa6:	test   dx,dx
  401fa9:	cmovs  rdx,r10
  401fad:	sub    rdx,rax
  401fb0:	lea    rax,[r8+rdx*1]
  401fb4:	mov    r8d,0x2
  401fba:	mov    rdx,r13
  401fbd:	mov    QWORD PTR [rbp-0x30],rax
  401fc1:	call   0x401bd0
  401fc6:	jmp    0x401e8b
  401fcb:	lea    rcx,[rip+0x32d6]        # 0x4052a8
  401fd2:	mov    QWORD PTR [rbp-0x30],0x0
  401fda:	call   0x401b60
  401fdf:	mov    edx,DWORD PTR [rcx]
  401fe1:	mov    rdi,r13
  401fe4:	mov    r10,rdx
  401fe7:	or     r10,r14
  401fea:	test   edx,edx
  401fec:	cmovs  rdx,r10
  401ff0:	sub    rdx,rax
  401ff3:	lea    rax,[r8+rdx*1]
  401ff7:	mov    r8d,0x4
  401ffd:	mov    rdx,r13
  402000:	mov    QWORD PTR [rbp-0x30],rax
  402004:	call   0x401bd0
  402009:	jmp    0x401e8b
  40200e:	add    rbx,QWORD PTR [rip+0x6673]        # 0x408688
  402015:	lea    rcx,[rip+0x31f4]        # 0x405210
  40201c:	mov    rax,QWORD PTR [rbx+0x10]
  402020:	mov    r8,QWORD PTR [rbx+0x8]
  402024:	mov    edx,DWORD PTR [rax+0x8]
  402027:	call   0x401b60
  40202c:	lea    rcx,[rip+0x323d]        # 0x405270
  402033:	call   0x401b60
  402038:	nop
  402039:	nop
  40203a:	nop
  40203b:	nop
  40203c:	nop
  40203d:	nop
  40203e:	nop
  40203f:	nop
  402040:	sub    rsp,0x28
  402044:	mov    eax,DWORD PTR [rcx]
  402046:	cmp    eax,0xc0000091
  40204b:	ja     0x4020b0
  40204d:	cmp    eax,0xc000008d
  402052:	jae    0x4020cf
  402054:	cmp    eax,0xc0000008
  402059:	je     0x402170
  40205f:	ja     0x402140
  402065:	cmp    eax,0x80000002
  40206a:	je     0x402170
  402070:	cmp    eax,0xc0000005
  402075:	jne    0x40214e
  40207b:	xor    edx,edx
  40207d:	mov    ecx,0xb
  402082:	call   0x402b10
  402087:	cmp    rax,0x1
  40208b:	je     0x4021d0
  402091:	test   rax,rax
  402094:	je     0x4021b0
  40209a:	mov    ecx,0xb
  40209f:	call   rax
  4020a1:	xor    eax,eax
  4020a3:	add    rsp,0x28
  4020a7:	ret    
  4020a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4020b0:	cmp    eax,0xc0000094
  4020b5:	je     0x402180
  4020bb:	ja     0x402100
  4020bd:	cmp    eax,0xc0000092
  4020c2:	je     0x402170
  4020c8:	cmp    eax,0xc0000093
  4020cd:	jne    0x40214e
  4020cf:	xor    edx,edx
  4020d1:	mov    ecx,0x8
  4020d6:	call   0x402b10
  4020db:	cmp    rax,0x1
  4020df:	mov    rdx,rax
  4020e2:	je     0x402158
  4020e4:	test   rdx,rdx
  4020e7:	mov    eax,0x1
  4020ec:	je     0x4020a3
  4020ee:	mov    ecx,0x8
  4020f3:	call   rdx
  4020f5:	xor    eax,eax
  4020f7:	add    rsp,0x28
  4020fb:	ret    
  4020fc:	nop    DWORD PTR [rax+0x0]
  402100:	cmp    eax,0xc0000095
  402105:	je     0x402170
  402107:	cmp    eax,0xc0000096
  40210c:	jne    0x40214e
  40210e:	xor    edx,edx
  402110:	mov    ecx,0x4
  402115:	call   0x402b10
  40211a:	cmp    rax,0x1
  40211e:	je     0x4021ba
  402124:	test   rax,rax
  402127:	je     0x4021b0
  40212d:	mov    ecx,0x4
  402132:	call   rax
  402134:	xor    eax,eax
  402136:	jmp    0x4020a3
  40213b:	nop    DWORD PTR [rax+rax*1+0x0]
  402140:	cmp    eax,0xc000001d
  402145:	je     0x40210e
  402147:	cmp    eax,0xc000008c
  40214c:	je     0x402170
  40214e:	mov    eax,0x1
  402153:	add    rsp,0x28
  402157:	ret    
  402158:	mov    edx,0x1
  40215d:	mov    ecx,0x8
  402162:	call   0x402b10
  402167:	call   0x401b30
  40216c:	nop    DWORD PTR [rax+0x0]
  402170:	xor    eax,eax
  402172:	add    rsp,0x28
  402176:	ret    
  402177:	nop    WORD PTR [rax+rax*1+0x0]
  402180:	xor    edx,edx
  402182:	mov    ecx,0x8
  402187:	call   0x402b10
  40218c:	cmp    rax,0x1
  402190:	mov    rdx,rax
  402193:	jne    0x4020e4
  402199:	mov    edx,0x1
  40219e:	mov    ecx,0x8
  4021a3:	call   0x402b10
  4021a8:	xor    eax,eax
  4021aa:	jmp    0x4020a3
  4021af:	nop
  4021b0:	mov    eax,0x4
  4021b5:	add    rsp,0x28
  4021b9:	ret    
  4021ba:	mov    edx,0x1
  4021bf:	mov    ecx,0x4
  4021c4:	call   0x402b10
  4021c9:	xor    eax,eax
  4021cb:	jmp    0x4020a3
  4021d0:	mov    edx,0x1
  4021d5:	mov    ecx,0xb
  4021da:	call   0x402b10
  4021df:	xor    eax,eax
  4021e1:	jmp    0x4020a3
  4021e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021f0:	push   r12
  4021f2:	push   rbp
  4021f3:	push   rdi
  4021f4:	push   rsi
  4021f5:	push   rbx
  4021f6:	sub    rsp,0x20
  4021fa:	call   0x402960
  4021ff:	mov    rbp,rax
  402202:	mov    eax,DWORD PTR [rip+0x64c0]        # 0x4086c8
  402208:	test   eax,eax
  40220a:	jne    0x402231
  40220c:	test   rbp,rbp
  40220f:	je     0x402231
  402211:	lea    rcx,[rip+0x30c8]        # 0x4052e0
  402218:	mov    DWORD PTR [rip+0x64a6],0x1        # 0x4086c8
  402222:	call   0x4027a0
  402227:	test   rax,rax
  40222a:	je     0x402240
  40222c:	mov    eax,0x1
  402231:	add    rsp,0x20
  402235:	pop    rbx
  402236:	pop    rsi
  402237:	pop    rdi
  402238:	pop    rbp
  402239:	pop    r12
  40223b:	ret    
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	lea    rbx,[rip+0x65b9]        # 0x408800
  402247:	mov    ecx,0x30
  40224c:	lea    rdx,[rip+0x64ad]        # 0x408700
  402253:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402040
  40225a:	xor    esi,esi
  40225c:	mov    rdi,rbx
  40225f:	rep stos QWORD PTR es:[rdi],rax
  402262:	mov    rdi,rdx
  402265:	sub    r12,rbp
  402268:	mov    cl,0x20
  40226a:	rep stos QWORD PTR es:[rdi],rax
  40226d:	mov    rdi,rdx
  402270:	jmp    0x4022a0
  402272:	mov    BYTE PTR [rdi],0x9
  402275:	mov    DWORD PTR [rdi+0x4],r12d
  402279:	add    rsi,0x1
  40227d:	mov    edx,DWORD PTR [rax+0xc]
  402280:	add    rbx,0xc
  402284:	mov    DWORD PTR [rbx-0xc],edx
  402287:	add    edx,DWORD PTR [rax+0x8]
  40228a:	mov    rax,rdi
  40228d:	sub    rax,rbp
  402290:	add    rdi,0x8
  402294:	mov    DWORD PTR [rbx-0x4],eax
  402297:	mov    DWORD PTR [rbx-0x8],edx
  40229a:	cmp    rsi,0x20
  40229e:	je     0x4022d5
  4022a0:	mov    rcx,rsi
  4022a3:	call   0x4028d0
  4022a8:	test   rax,rax
  4022ab:	jne    0x402272
  4022ad:	test   rsi,rsi
  4022b0:	je     0x40222c
  4022b6:	mov    edx,esi
  4022b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022c0:	mov    r8,rbp
  4022c3:	lea    rcx,[rip+0x6536]        # 0x408800
  4022ca:	call   QWORD PTR [rip+0x7088]        # 0x409358
  4022d0:	jmp    0x40222c
  4022d5:	mov    edx,0x20
  4022da:	jmp    0x4022c0
  4022dc:	nop    DWORD PTR [rax+0x0]
  4022e0:	push   rbx
  4022e1:	sub    rsp,0x20
  4022e5:	mov    rdx,QWORD PTR [rcx]
  4022e8:	mov    eax,DWORD PTR [rdx]
  4022ea:	mov    r8d,eax
  4022ed:	and    r8d,0x20ffffff
  4022f4:	cmp    r8d,0x20474343
  4022fb:	je     0x402400
  402301:	cmp    eax,0xc0000091
  402306:	mov    rbx,rcx
  402309:	ja     0x402390
  40230f:	cmp    eax,0xc000008d
  402314:	jae    0x4023a7
  40231a:	cmp    eax,0xc0000008
  40231f:	je     0x402353
  402321:	ja     0x402360
  402323:	cmp    eax,0x80000002
  402328:	je     0x402353
  40232a:	cmp    eax,0xc0000005
  40232f:	jne    0x402372
  402331:	xor    edx,edx
  402333:	mov    ecx,0xb
  402338:	call   0x402b10
  40233d:	cmp    rax,0x1
  402341:	je     0x402470
  402347:	test   rax,rax
  40234a:	je     0x402372
  40234c:	mov    ecx,0xb
  402351:	call   rax
  402353:	mov    eax,0xffffffff
  402358:	add    rsp,0x20
  40235c:	pop    rbx
  40235d:	ret    
  40235e:	xchg   ax,ax
  402360:	cmp    eax,0xc000001d
  402365:	je     0x402426
  40236b:	cmp    eax,0xc000008c
  402370:	je     0x402353
  402372:	mov    rax,QWORD PTR [rip+0x6347]        # 0x4086c0
  402379:	test   rax,rax
  40237c:	je     0x402358
  40237e:	mov    rcx,rbx
  402381:	add    rsp,0x20
  402385:	pop    rbx
  402386:	rex.W jmp rax
  402389:	nop    DWORD PTR [rax+0x0]
  402390:	cmp    eax,0xc0000094
  402395:	je     0x4023d2
  402397:	ja     0x402410
  402399:	cmp    eax,0xc0000092
  40239e:	je     0x402353
  4023a0:	cmp    eax,0xc0000093
  4023a5:	jne    0x402372
  4023a7:	xor    edx,edx
  4023a9:	mov    ecx,0x8
  4023ae:	call   0x402b10
  4023b3:	cmp    rax,0x1
  4023b7:	jne    0x4023e4
  4023b9:	mov    edx,0x1
  4023be:	mov    ecx,0x8
  4023c3:	call   0x402b10
  4023c8:	call   0x401b30
  4023cd:	jmp    0x402353
  4023d2:	xor    edx,edx
  4023d4:	mov    ecx,0x8
  4023d9:	call   0x402b10
  4023de:	cmp    rax,0x1
  4023e2:	je     0x402452
  4023e4:	test   rax,rax
  4023e7:	je     0x402372
  4023e9:	mov    ecx,0x8
  4023ee:	call   rax
  4023f0:	mov    eax,0xffffffff
  4023f5:	jmp    0x402358
  4023fa:	nop    WORD PTR [rax+rax*1+0x0]
  402400:	test   BYTE PTR [rdx+0x4],0x1
  402404:	jne    0x402301
  40240a:	jmp    0x402353
  40240f:	nop
  402410:	cmp    eax,0xc0000095
  402415:	je     0x402353
  40241b:	cmp    eax,0xc0000096
  402420:	jne    0x402372
  402426:	xor    edx,edx
  402428:	mov    ecx,0x4
  40242d:	call   0x402b10
  402432:	cmp    rax,0x1
  402436:	je     0x402484
  402438:	test   rax,rax
  40243b:	je     0x402372
  402441:	mov    ecx,0x4
  402446:	call   rax
  402448:	mov    eax,0xffffffff
  40244d:	jmp    0x402358
  402452:	mov    edx,0x1
  402457:	mov    ecx,0x8
  40245c:	call   0x402b10
  402461:	jmp    0x402353
  402466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402470:	mov    edx,0x1
  402475:	mov    ecx,0xb
  40247a:	call   0x402b10
  40247f:	jmp    0x402353
  402484:	mov    edx,0x1
  402489:	mov    ecx,0x4
  40248e:	call   0x402b10
  402493:	jmp    0x402353
  402498:	nop
  402499:	nop
  40249a:	nop
  40249b:	nop
  40249c:	nop
  40249d:	nop
  40249e:	nop
  40249f:	nop
  4024a0:	push   rbp
  4024a1:	push   rdi
  4024a2:	push   rsi
  4024a3:	push   rbx
  4024a4:	sub    rsp,0x28
  4024a8:	lea    rcx,[rip+0x64f1]        # 0x4089a0
  4024af:	call   QWORD PTR [rip+0x6e4b]        # 0x409300
  4024b5:	mov    rbx,QWORD PTR [rip+0x64c4]        # 0x408980
  4024bc:	test   rbx,rbx
  4024bf:	je     0x4024f4
  4024c1:	mov    rbp,QWORD PTR [rip+0x6ec8]        # 0x409390
  4024c8:	mov    rdi,QWORD PTR [rip+0x6e51]        # 0x409320
  4024cf:	nop
  4024d0:	mov    ecx,DWORD PTR [rbx]
  4024d2:	call   rbp
  4024d4:	mov    rsi,rax
  4024d7:	call   rdi
  4024d9:	test   eax,eax
  4024db:	jne    0x4024eb
  4024dd:	test   rsi,rsi
  4024e0:	je     0x4024eb
  4024e2:	mov    rax,QWORD PTR [rbx+0x8]
  4024e6:	mov    rcx,rsi
  4024e9:	call   rax
  4024eb:	mov    rbx,QWORD PTR [rbx+0x10]
  4024ef:	test   rbx,rbx
  4024f2:	jne    0x4024d0
  4024f4:	mov    rax,QWORD PTR [rip+0x6e4d]        # 0x409348
  4024fb:	lea    rcx,[rip+0x649e]        # 0x4089a0
  402502:	add    rsp,0x28
  402506:	pop    rbx
  402507:	pop    rsi
  402508:	pop    rdi
  402509:	pop    rbp
  40250a:	rex.W jmp rax
  40250d:	nop    DWORD PTR [rax]
  402510:	push   rdi
  402511:	push   rsi
  402512:	push   rbx
  402513:	sub    rsp,0x20
  402517:	mov    eax,DWORD PTR [rip+0x646b]        # 0x408988
  40251d:	test   eax,eax
  40251f:	jne    0x402530
  402521:	add    rsp,0x20
  402525:	pop    rbx
  402526:	pop    rsi
  402527:	pop    rdi
  402528:	ret    
  402529:	nop    DWORD PTR [rax+0x0]
  402530:	mov    rsi,rdx
  402533:	mov    edi,ecx
  402535:	mov    edx,0x18
  40253a:	mov    ecx,0x1
  40253f:	call   0x402b48
  402544:	test   rax,rax
  402547:	mov    rbx,rax
  40254a:	je     0x402588
  40254c:	mov    DWORD PTR [rax],edi
  40254e:	mov    QWORD PTR [rax+0x8],rsi
  402552:	lea    rcx,[rip+0x6447]        # 0x4089a0
  402559:	call   QWORD PTR [rip+0x6da1]        # 0x409300
  40255f:	mov    rax,QWORD PTR [rip+0x641a]        # 0x408980
  402566:	lea    rcx,[rip+0x6433]        # 0x4089a0
  40256d:	mov    QWORD PTR [rip+0x640c],rbx        # 0x408980
  402574:	mov    QWORD PTR [rbx+0x10],rax
  402578:	call   QWORD PTR [rip+0x6dca]        # 0x409348
  40257e:	xor    eax,eax
  402580:	add    rsp,0x20
  402584:	pop    rbx
  402585:	pop    rsi
  402586:	pop    rdi
  402587:	ret    
  402588:	mov    eax,0xffffffff
  40258d:	jmp    0x402521
  40258f:	nop
  402590:	push   rbx
  402591:	sub    rsp,0x20
  402595:	mov    eax,DWORD PTR [rip+0x63ed]        # 0x408988
  40259b:	test   eax,eax
  40259d:	jne    0x4025b0
  40259f:	xor    eax,eax
  4025a1:	add    rsp,0x20
  4025a5:	pop    rbx
  4025a6:	ret    
  4025a7:	nop    WORD PTR [rax+rax*1+0x0]
  4025b0:	mov    ebx,ecx
  4025b2:	lea    rcx,[rip+0x63e7]        # 0x4089a0
  4025b9:	call   QWORD PTR [rip+0x6d41]        # 0x409300
  4025bf:	mov    rdx,QWORD PTR [rip+0x63ba]        # 0x408980
  4025c6:	test   rdx,rdx
  4025c9:	je     0x4025e7
  4025cb:	mov    eax,DWORD PTR [rdx]
  4025cd:	cmp    eax,ebx
  4025cf:	jne    0x4025de
  4025d1:	jmp    0x40261f
  4025d3:	mov    r8d,DWORD PTR [rax]
  4025d6:	cmp    r8d,ebx
  4025d9:	je     0x402600
  4025db:	mov    rdx,rax
  4025de:	mov    rax,QWORD PTR [rdx+0x10]
  4025e2:	test   rax,rax
  4025e5:	jne    0x4025d3
  4025e7:	lea    rcx,[rip+0x63b2]        # 0x4089a0
  4025ee:	call   QWORD PTR [rip+0x6d54]        # 0x409348
  4025f4:	xor    eax,eax
  4025f6:	add    rsp,0x20
  4025fa:	pop    rbx
  4025fb:	ret    
  4025fc:	nop    DWORD PTR [rax+0x0]
  402600:	mov    rcx,rax
  402603:	mov    rax,QWORD PTR [rax+0x10]
  402607:	mov    QWORD PTR [rdx+0x10],rax
  40260b:	call   0x402b30
  402610:	lea    rcx,[rip+0x6389]        # 0x4089a0
  402617:	call   QWORD PTR [rip+0x6d2b]        # 0x409348
  40261d:	jmp    0x4025f4
  40261f:	mov    rax,QWORD PTR [rdx+0x10]
  402623:	mov    rcx,rdx
  402626:	mov    QWORD PTR [rip+0x6353],rax        # 0x408980
  40262d:	jmp    0x40260b
  40262f:	nop
  402630:	push   rbx
  402631:	sub    rsp,0x20
  402635:	cmp    edx,0x1
  402638:	je     0x4026d0
  40263e:	jb     0x402670
  402640:	cmp    edx,0x2
  402643:	je     0x402660
  402645:	cmp    edx,0x3
  402648:	jne    0x402665
  40264a:	mov    eax,DWORD PTR [rip+0x6338]        # 0x408988
  402650:	test   eax,eax
  402652:	je     0x402665
  402654:	call   0x4024a0
  402659:	jmp    0x402665
  40265b:	nop    DWORD PTR [rax+rax*1+0x0]
  402660:	call   0x401b30
  402665:	mov    eax,0x1
  40266a:	add    rsp,0x20
  40266e:	pop    rbx
  40266f:	ret    
  402670:	mov    eax,DWORD PTR [rip+0x6312]        # 0x408988
  402676:	test   eax,eax
  402678:	jne    0x402700
  40267e:	mov    eax,DWORD PTR [rip+0x6304]        # 0x408988
  402684:	cmp    eax,0x1
  402687:	jne    0x402665
  402689:	mov    rcx,QWORD PTR [rip+0x62f0]        # 0x408980
  402690:	test   rcx,rcx
  402693:	je     0x4026a6
  402695:	mov    rbx,QWORD PTR [rcx+0x10]
  402699:	call   0x402b30
  40269e:	test   rbx,rbx
  4026a1:	mov    rcx,rbx
  4026a4:	jne    0x402695
  4026a6:	lea    rcx,[rip+0x62f3]        # 0x4089a0
  4026ad:	mov    QWORD PTR [rip+0x62c8],0x0        # 0x408980
  4026b8:	mov    DWORD PTR [rip+0x62c6],0x0        # 0x408988
  4026c2:	call   QWORD PTR [rip+0x6c30]        # 0x4092f8
  4026c8:	jmp    0x402665
  4026ca:	nop    WORD PTR [rax+rax*1+0x0]
  4026d0:	mov    eax,DWORD PTR [rip+0x62b2]        # 0x408988
  4026d6:	test   eax,eax
  4026d8:	je     0x4026f0
  4026da:	mov    eax,0x1
  4026df:	mov    DWORD PTR [rip+0x629f],0x1        # 0x408988
  4026e9:	add    rsp,0x20
  4026ed:	pop    rbx
  4026ee:	ret    
  4026ef:	nop
  4026f0:	lea    rcx,[rip+0x62a9]        # 0x4089a0
  4026f7:	call   QWORD PTR [rip+0x6c43]        # 0x409340
  4026fd:	jmp    0x4026da
  4026ff:	nop
  402700:	call   0x4024a0
  402705:	jmp    0x40267e
  40270a:	nop
  40270b:	nop
  40270c:	nop
  40270d:	nop
  40270e:	nop
  40270f:	nop
  402710:	movsxd rax,DWORD PTR [rcx+0x3c]
  402714:	add    rcx,rax
  402717:	xor    eax,eax
  402719:	cmp    DWORD PTR [rcx],0x4550
  40271f:	je     0x402723
  402721:	repz ret 
  402723:	xor    eax,eax
  402725:	cmp    WORD PTR [rcx+0x18],0x20b
  40272b:	sete   al
  40272e:	ret    
  40272f:	nop
  402730:	cmp    WORD PTR [rcx],0x5a4d
  402735:	je     0x402740
  402737:	xor    eax,eax
  402739:	ret    
  40273a:	nop    WORD PTR [rax+rax*1+0x0]
  402740:	jmp    0x402710
  402742:	nop    DWORD PTR [rax+0x0]
  402746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402750:	movsxd rax,DWORD PTR [rcx+0x3c]
  402754:	add    rcx,rax
  402757:	movzx  eax,WORD PTR [rcx+0x14]
  40275b:	lea    rax,[rcx+rax*1+0x18]
  402760:	movzx  ecx,WORD PTR [rcx+0x6]
  402764:	test   ecx,ecx
  402766:	je     0x402791
  402768:	sub    ecx,0x1
  40276b:	lea    rcx,[rcx+rcx*4]
  40276f:	lea    r9,[rax+rcx*8+0x28]
  402774:	mov    r8d,DWORD PTR [rax+0xc]
  402778:	cmp    r8,rdx
  40277b:	mov    rcx,r8
  40277e:	ja     0x402788
  402780:	add    ecx,DWORD PTR [rax+0x8]
  402783:	cmp    rdx,rcx
  402786:	jb     0x402793
  402788:	add    rax,0x28
  40278c:	cmp    rax,r9
  40278f:	jne    0x402774
  402791:	xor    eax,eax
  402793:	repz ret 
  402795:	nop
  402796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027a0:	push   rdi
  4027a1:	push   rsi
  4027a2:	push   rbx
  4027a3:	sub    rsp,0x20
  4027a7:	mov    rsi,rcx
  4027aa:	call   0x402b08
  4027af:	cmp    rax,0x8
  4027b3:	ja     0x4027d0
  4027b5:	mov    rbx,QWORD PTR [rip+0x2ba4]        # 0x405360
  4027bc:	xor    edi,edi
  4027be:	cmp    WORD PTR [rbx],0x5a4d
  4027c3:	je     0x4027e0
  4027c5:	mov    rax,rdi
  4027c8:	add    rsp,0x20
  4027cc:	pop    rbx
  4027cd:	pop    rsi
  4027ce:	pop    rdi
  4027cf:	ret    
  4027d0:	xor    edi,edi
  4027d2:	mov    rax,rdi
  4027d5:	add    rsp,0x20
  4027d9:	pop    rbx
  4027da:	pop    rsi
  4027db:	pop    rdi
  4027dc:	ret    
  4027dd:	nop    DWORD PTR [rax]
  4027e0:	mov    rcx,rbx
  4027e3:	call   0x402710
  4027e8:	test   eax,eax
  4027ea:	je     0x4027c5
  4027ec:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4027f0:	add    rdx,rbx
  4027f3:	movzx  eax,WORD PTR [rdx+0x14]
  4027f7:	lea    rbx,[rdx+rax*1+0x18]
  4027fc:	movzx  eax,WORD PTR [rdx+0x6]
  402800:	test   eax,eax
  402802:	je     0x4027c5
  402804:	sub    eax,0x1
  402807:	lea    rax,[rax+rax*4]
  40280b:	lea    rdi,[rbx+rax*8+0x28]
  402810:	jmp    0x40281b
  402812:	add    rbx,0x28
  402816:	cmp    rbx,rdi
  402819:	je     0x4027d0
  40281b:	mov    r8d,0x8
  402821:	mov    rdx,rsi
  402824:	mov    rcx,rbx
  402827:	call   0x402b00
  40282c:	test   eax,eax
  40282e:	jne    0x402812
  402830:	mov    rdi,rbx
  402833:	mov    rax,rdi
  402836:	add    rsp,0x20
  40283a:	pop    rbx
  40283b:	pop    rsi
  40283c:	pop    rdi
  40283d:	ret    
  40283e:	xchg   ax,ax
  402840:	push   rsi
  402841:	push   rbx
  402842:	sub    rsp,0x28
  402846:	mov    rbx,QWORD PTR [rip+0x2b13]        # 0x405360
  40284d:	cmp    WORD PTR [rbx],0x5a4d
  402852:	je     0x402860
  402854:	xor    eax,eax
  402856:	add    rsp,0x28
  40285a:	pop    rbx
  40285b:	pop    rsi
  40285c:	ret    
  40285d:	nop    DWORD PTR [rax]
  402860:	mov    rsi,rcx
  402863:	mov    rcx,rbx
  402866:	call   0x402710
  40286b:	test   eax,eax
  40286d:	je     0x402854
  40286f:	sub    rsi,rbx
  402872:	mov    rcx,rbx
  402875:	mov    rdx,rsi
  402878:	add    rsp,0x28
  40287c:	pop    rbx
  40287d:	pop    rsi
  40287e:	jmp    0x402750
  402883:	nop    DWORD PTR [rax]
  402886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402890:	push   rbx
  402891:	sub    rsp,0x20
  402895:	mov    rbx,QWORD PTR [rip+0x2ac4]        # 0x405360
  40289c:	xor    eax,eax
  40289e:	cmp    WORD PTR [rbx],0x5a4d
  4028a3:	je     0x4028b0
  4028a5:	add    rsp,0x20
  4028a9:	pop    rbx
  4028aa:	ret    
  4028ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4028b0:	mov    rcx,rbx
  4028b3:	call   0x402710
  4028b8:	test   eax,eax
  4028ba:	je     0x4028a5
  4028bc:	movsxd rax,DWORD PTR [rbx+0x3c]
  4028c0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4028c5:	add    rsp,0x20
  4028c9:	pop    rbx
  4028ca:	ret    
  4028cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4028d0:	push   rdi
  4028d1:	push   rsi
  4028d2:	push   rbx
  4028d3:	sub    rsp,0x20
  4028d7:	mov    rsi,QWORD PTR [rip+0x2a82]        # 0x405360
  4028de:	xor    edi,edi
  4028e0:	mov    rbx,rcx
  4028e3:	cmp    WORD PTR [rsi],0x5a4d
  4028e8:	je     0x4028f5
  4028ea:	mov    rax,rdi
  4028ed:	add    rsp,0x20
  4028f1:	pop    rbx
  4028f2:	pop    rsi
  4028f3:	pop    rdi
  4028f4:	ret    
  4028f5:	mov    rcx,rsi
  4028f8:	call   0x402710
  4028fd:	test   eax,eax
  4028ff:	je     0x4028ea
  402901:	movsxd rax,DWORD PTR [rsi+0x3c]
  402905:	add    rsi,rax
  402908:	movzx  eax,WORD PTR [rsi+0x14]
  40290c:	lea    rdx,[rsi+rax*1+0x18]
  402911:	movzx  eax,WORD PTR [rsi+0x6]
  402915:	test   eax,eax
  402917:	je     0x4028ea
  402919:	sub    eax,0x1
  40291c:	lea    rax,[rax+rax*4]
  402920:	lea    rax,[rdx+rax*8+0x28]
  402925:	test   BYTE PTR [rdx+0x27],0x20
  402929:	je     0x402934
  40292b:	test   rbx,rbx
  40292e:	je     0x402950
  402930:	sub    rbx,0x1
  402934:	add    rdx,0x28
  402938:	cmp    rdx,rax
  40293b:	jne    0x402925
  40293d:	xor    edi,edi
  40293f:	mov    rax,rdi
  402942:	add    rsp,0x20
  402946:	pop    rbx
  402947:	pop    rsi
  402948:	pop    rdi
  402949:	ret    
  40294a:	nop    WORD PTR [rax+rax*1+0x0]
  402950:	mov    rdi,rdx
  402953:	mov    rax,rdi
  402956:	add    rsp,0x20
  40295a:	pop    rbx
  40295b:	pop    rsi
  40295c:	pop    rdi
  40295d:	ret    
  40295e:	xchg   ax,ax
  402960:	push   rsi
  402961:	push   rbx
  402962:	sub    rsp,0x28
  402966:	mov    rsi,QWORD PTR [rip+0x29f3]        # 0x405360
  40296d:	xor    ebx,ebx
  40296f:	cmp    WORD PTR [rsi],0x5a4d
  402974:	je     0x402980
  402976:	mov    rax,rbx
  402979:	add    rsp,0x28
  40297d:	pop    rbx
  40297e:	pop    rsi
  40297f:	ret    
  402980:	mov    rcx,rsi
  402983:	call   0x402710
  402988:	test   eax,eax
  40298a:	cmovne rbx,rsi
  40298e:	mov    rax,rbx
  402991:	add    rsp,0x28
  402995:	pop    rbx
  402996:	pop    rsi
  402997:	ret    
  402998:	nop    DWORD PTR [rax+rax*1+0x0]
  4029a0:	push   rsi
  4029a1:	push   rbx
  4029a2:	sub    rsp,0x28
  4029a6:	mov    rbx,QWORD PTR [rip+0x29b3]        # 0x405360
  4029ad:	xor    eax,eax
  4029af:	cmp    WORD PTR [rbx],0x5a4d
  4029b4:	je     0x4029c0
  4029b6:	add    rsp,0x28
  4029ba:	pop    rbx
  4029bb:	pop    rsi
  4029bc:	ret    
  4029bd:	nop    DWORD PTR [rax]
  4029c0:	mov    rsi,rcx
  4029c3:	mov    rcx,rbx
  4029c6:	call   0x402710
  4029cb:	test   eax,eax
  4029cd:	je     0x4029b6
  4029cf:	sub    rsi,rbx
  4029d2:	mov    rcx,rbx
  4029d5:	mov    rdx,rsi
  4029d8:	call   0x402750
  4029dd:	test   rax,rax
  4029e0:	je     0x4029f1
  4029e2:	mov    eax,DWORD PTR [rax+0x24]
  4029e5:	not    eax
  4029e7:	shr    eax,0x1f
  4029ea:	add    rsp,0x28
  4029ee:	pop    rbx
  4029ef:	pop    rsi
  4029f0:	ret    
  4029f1:	xor    eax,eax
  4029f3:	jmp    0x4029b6
  4029f5:	nop
  4029f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a00:	push   rbp
  402a01:	push   rdi
  402a02:	push   rsi
  402a03:	push   rbx
  402a04:	sub    rsp,0x28
  402a08:	mov    rdi,QWORD PTR [rip+0x2951]        # 0x405360
  402a0f:	xor    ebp,ebp
  402a11:	mov    esi,ecx
  402a13:	cmp    WORD PTR [rdi],0x5a4d
  402a18:	je     0x402a30
  402a1a:	mov    rax,rbp
  402a1d:	add    rsp,0x28
  402a21:	pop    rbx
  402a22:	pop    rsi
  402a23:	pop    rdi
  402a24:	pop    rbp
  402a25:	ret    
  402a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a30:	mov    rcx,rdi
  402a33:	call   0x402710
  402a38:	test   eax,eax
  402a3a:	je     0x402a1a
  402a3c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402a40:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402a47:	test   edx,edx
  402a49:	je     0x402a1a
  402a4b:	mov    ebx,edx
  402a4d:	mov    rcx,rdi
  402a50:	mov    rdx,rbx
  402a53:	call   0x402750
  402a58:	test   rax,rax
  402a5b:	je     0x402a1a
  402a5d:	add    rbx,rdi
  402a60:	mov    rdx,rbx
  402a63:	jne    0x402a77
  402a65:	jmp    0x402a1a
  402a67:	nop    WORD PTR [rax+rax*1+0x0]
  402a70:	sub    esi,0x1
  402a73:	add    rdx,0x14
  402a77:	mov    ecx,DWORD PTR [rdx+0x4]
  402a7a:	test   ecx,ecx
  402a7c:	jne    0x402a85
  402a7e:	mov    eax,DWORD PTR [rdx+0xc]
  402a81:	test   eax,eax
  402a83:	je     0x402aa0
  402a85:	test   esi,esi
  402a87:	jg     0x402a70
  402a89:	mov    ebp,DWORD PTR [rdx+0xc]
  402a8c:	add    rbp,rdi
  402a8f:	mov    rax,rbp
  402a92:	add    rsp,0x28
  402a96:	pop    rbx
  402a97:	pop    rsi
  402a98:	pop    rdi
  402a99:	pop    rbp
  402a9a:	ret    
  402a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402aa0:	xor    ebp,ebp
  402aa2:	mov    rax,rbp
  402aa5:	add    rsp,0x28
  402aa9:	pop    rbx
  402aaa:	pop    rsi
  402aab:	pop    rdi
  402aac:	pop    rbp
  402aad:	ret    
  402aae:	nop
  402aaf:	nop
  402ab0:	push   rcx
  402ab1:	push   rax
  402ab2:	cmp    rax,0x1000
  402ab8:	lea    rcx,[rsp+0x18]
  402abd:	jb     0x402ad8
  402abf:	sub    rcx,0x1000
  402ac6:	or     QWORD PTR [rcx],0x0
  402aca:	sub    rax,0x1000
  402ad0:	cmp    rax,0x1000
  402ad6:	ja     0x402abf
  402ad8:	sub    rcx,rax
  402adb:	or     QWORD PTR [rcx],0x0
  402adf:	pop    rax
  402ae0:	pop    rcx
  402ae1:	ret    
  402ae2:	nop
  402ae3:	nop
  402ae4:	nop
  402ae5:	nop
  402ae6:	nop
  402ae7:	nop
  402ae8:	nop
  402ae9:	nop
  402aea:	nop
  402aeb:	nop
  402aec:	nop
  402aed:	nop
  402aee:	nop
  402aef:	nop
  402af0:	jmp    QWORD PTR [rip+0x69aa]        # 0x4094a0
  402af6:	nop
  402af7:	nop
  402af8:	jmp    QWORD PTR [rip+0x699a]        # 0x409498
  402afe:	nop
  402aff:	nop
  402b00:	jmp    QWORD PTR [rip+0x698a]        # 0x409490
  402b06:	nop
  402b07:	nop
  402b08:	jmp    QWORD PTR [rip+0x697a]        # 0x409488
  402b0e:	nop
  402b0f:	nop
  402b10:	jmp    QWORD PTR [rip+0x696a]        # 0x409480
  402b16:	nop
  402b17:	nop
  402b18:	jmp    QWORD PTR [rip+0x695a]        # 0x409478
  402b1e:	nop
  402b1f:	nop
  402b20:	jmp    QWORD PTR [rip+0x694a]        # 0x409470
  402b26:	nop
  402b27:	nop
  402b28:	jmp    QWORD PTR [rip+0x693a]        # 0x409468
  402b2e:	nop
  402b2f:	nop
  402b30:	jmp    QWORD PTR [rip+0x692a]        # 0x409460
  402b36:	nop
  402b37:	nop
  402b38:	jmp    QWORD PTR [rip+0x691a]        # 0x409458
  402b3e:	nop
  402b3f:	nop
  402b40:	jmp    QWORD PTR [rip+0x690a]        # 0x409450
  402b46:	nop
  402b47:	nop
  402b48:	jmp    QWORD PTR [rip+0x68fa]        # 0x409448
  402b4e:	nop
  402b4f:	nop
  402b50:	jmp    QWORD PTR [rip+0x68ea]        # 0x409440
  402b56:	nop
  402b57:	nop
  402b58:	jmp    QWORD PTR [rip+0x68da]        # 0x409438
  402b5e:	nop
  402b5f:	nop
  402b60:	jmp    QWORD PTR [rip+0x68ca]        # 0x409430
  402b66:	nop
  402b67:	nop
  402b68:	jmp    QWORD PTR [rip+0x68ba]        # 0x409428
  402b6e:	nop
  402b6f:	nop
  402b70:	jmp    QWORD PTR [rip+0x68aa]        # 0x409420
  402b76:	nop
  402b77:	nop
  402b78:	jmp    QWORD PTR [rip+0x689a]        # 0x409418
  402b7e:	nop
  402b7f:	nop
  402b80:	jmp    QWORD PTR [rip+0x6882]        # 0x409408
  402b86:	nop
  402b87:	nop
  402b88:	jmp    QWORD PTR [rip+0x6872]        # 0x409400
  402b8e:	nop
  402b8f:	nop
  402b90:	jmp    QWORD PTR [rip+0x685a]        # 0x4093f0
  402b96:	nop
  402b97:	nop
  402b98:	jmp    QWORD PTR [rip+0x684a]        # 0x4093e8
  402b9e:	nop
  402b9f:	nop
  402ba0:	jmp    QWORD PTR [rip+0x683a]        # 0x4093e0
  402ba6:	nop
  402ba7:	nop
  402ba8:	jmp    QWORD PTR [rip+0x682a]        # 0x4093d8
  402bae:	nop
  402baf:	nop
  402bb0:	jmp    QWORD PTR [rip+0x6812]        # 0x4093c8
  402bb6:	nop
  402bb7:	nop
  402bb8:	jmp    QWORD PTR [rip+0x6802]        # 0x4093c0
  402bbe:	nop
  402bbf:	nop
  402bc0:	jmp    QWORD PTR [rip+0x67f2]        # 0x4093b8
  402bc6:	nop
  402bc7:	nop
  402bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bd0:	mov    rax,QWORD PTR [rip+0x5e19]        # 0x4089f0
  402bd7:	ret    
  402bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  402be0:	mov    rax,rcx
  402be3:	xchg   QWORD PTR [rip+0x5e06],rax        # 0x4089f0
  402bea:	ret    
  402beb:	nop
  402bec:	nop
  402bed:	nop
  402bee:	nop
  402bef:	nop
  402bf0:	jmp    QWORD PTR [rip+0x67b2]        # 0x4093a8
  402bf6:	nop
  402bf7:	nop
  402bf8:	jmp    QWORD PTR [rip+0x67a2]        # 0x4093a0
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0x6792]        # 0x409398
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0x6782]        # 0x409390
  402c0e:	nop
  402c0f:	nop
  402c10:	jmp    QWORD PTR [rip+0x6772]        # 0x409388
  402c16:	nop
  402c17:	nop
  402c18:	jmp    QWORD PTR [rip+0x6762]        # 0x409380
  402c1e:	nop
  402c1f:	nop
  402c20:	jmp    QWORD PTR [rip+0x6752]        # 0x409378
  402c26:	nop
  402c27:	nop
  402c28:	jmp    QWORD PTR [rip+0x6742]        # 0x409370
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0x6732]        # 0x409368
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0x6722]        # 0x409360
  402c3e:	nop
  402c3f:	nop
  402c40:	jmp    QWORD PTR [rip+0x6712]        # 0x409358
  402c46:	nop
  402c47:	nop
  402c48:	jmp    QWORD PTR [rip+0x6702]        # 0x409350
  402c4e:	nop
  402c4f:	nop
  402c50:	jmp    QWORD PTR [rip+0x66f2]        # 0x409348
  402c56:	nop
  402c57:	nop
  402c58:	jmp    QWORD PTR [rip+0x66e2]        # 0x409340
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0x66d2]        # 0x409338
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0x66c2]        # 0x409330
  402c6e:	nop
  402c6f:	nop
  402c70:	jmp    QWORD PTR [rip+0x66b2]        # 0x409328
  402c76:	nop
  402c77:	nop
  402c78:	jmp    QWORD PTR [rip+0x66a2]        # 0x409320
  402c7e:	nop
  402c7f:	nop
  402c80:	jmp    QWORD PTR [rip+0x6692]        # 0x409318
  402c86:	nop
  402c87:	nop
  402c88:	jmp    QWORD PTR [rip+0x6682]        # 0x409310
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0x6672]        # 0x409308
  402c96:	nop
  402c97:	nop
  402c98:	jmp    QWORD PTR [rip+0x6662]        # 0x409300
  402c9e:	nop
  402c9f:	nop
  402ca0:	jmp    QWORD PTR [rip+0x6652]        # 0x4092f8
  402ca6:	nop
  402ca7:	nop
  402ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cb0:	push   rbp
  402cb1:	push   r13
  402cb3:	push   r12
  402cb5:	push   rdi
  402cb6:	push   rsi
  402cb7:	push   rbx
  402cb8:	mov    rbp,rsp
  402cbb:	sub    rsp,0x68
  402cbf:	mov    r12d,ecx
  402cc2:	mov    r13,rdx
  402cc5:	call   0x401700
  402cca:	cmp    r12d,0x1
  402cce:	je     0x402f13
  402cd4:	jle    0x402ced
  402cd6:	mov    rdx,QWORD PTR [r13+0x8]
  402cda:	movzx  eax,BYTE PTR [rdx]
  402cdd:	cmp    al,0x2d
  402cdf:	je     0x402e9e
  402ce5:	cmp    al,0x2e
  402ce7:	je     0x402d9f
  402ced:	mov    rdi,QWORD PTR [rip+0x66e4]        # 0x4093d8
  402cf4:	call   rdi
  402cf6:	lea    rsi,[rax+0x60]
  402cfa:	call   rdi
  402cfc:	lea    rbx,[rax+0x30]
  402d00:	call   rdi
  402d02:	mov    rdx,rbx
  402d05:	mov    rcx,rax
  402d08:	mov    QWORD PTR [rsp+0x20],r13
  402d0d:	mov    r9d,r12d
  402d10:	mov    r8,rsi
  402d13:	call   0x401568
  402d18:	mov    rax,QWORD PTR [rip+0x27c1]        # 0x4054e0
  402d1f:	mov    rdx,rbp
  402d22:	mov    rcx,QWORD PTR [rax]
  402d25:	add    rcx,0x770
  402d2c:	call   0x402b60
  402d31:	test   eax,eax
  402d33:	mov    ebx,eax
  402d35:	je     0x402dd3
  402d3b:	mov    rax,QWORD PTR [rip+0x279e]        # 0x4054e0
  402d42:	xor    ecx,ecx
  402d44:	mov    rax,QWORD PTR [rax]
  402d47:	mov    DWORD PTR [rax+0xac4],0x1
  402d51:	call   0x401570
  402d56:	lea    rdx,[rbp-0x18]
  402d5a:	lea    rcx,[rbp-0x1c]
  402d5e:	call   0x401550
  402d63:	mov    esi,DWORD PTR [rbp-0x1c]
  402d66:	test   esi,esi
  402d68:	jne    0x402d71
  402d6a:	mov    eax,DWORD PTR [rbp-0x18]
  402d6d:	test   eax,eax
  402d6f:	je     0x402d90
  402d71:	mov    edi,DWORD PTR [rbp-0x18]
  402d74:	call   QWORD PTR [rip+0x665e]        # 0x4093d8
  402d7a:	lea    rdx,[rip+0x228f]        # 0x405010
  402d81:	lea    rcx,[rax+0x60]
  402d85:	mov    r9d,esi
  402d88:	mov    r8d,edi
  402d8b:	call   0x402b38
  402d90:	mov    eax,ebx
  402d92:	add    rsp,0x68
  402d96:	pop    rbx
  402d97:	pop    rsi
  402d98:	pop    rdi
  402d99:	pop    r12
  402d9b:	pop    r13
  402d9d:	pop    rbp
  402d9e:	ret    
  402d9f:	cmp    BYTE PTR [rdx+0x1],0x0
  402da3:	jne    0x402ced
  402da9:	mov    rax,QWORD PTR [rip+0x2740]        # 0x4054f0
  402db0:	mov    rbx,QWORD PTR [rax]
  402db3:	call   QWORD PTR [rip+0x661f]        # 0x4093d8
  402db9:	lea    rdx,[rip+0x280]        # 0x403040
  402dc0:	lea    rcx,[rax+0x30]
  402dc4:	mov    r8,rbx
  402dc7:	call   0x402b38
  402dcc:	xor    ecx,ecx
  402dce:	call   0x402b40
  402dd3:	mov    rsi,QWORD PTR [rip+0x2706]        # 0x4054e0
  402dda:	lea    rdx,[rip+0x1f5f]        # 0x404d40
  402de1:	mov    rax,QWORD PTR [rsi]
  402de4:	lea    rcx,[rax+0x28c]
  402deb:	call   0x401578
  402df0:	mov    rax,QWORD PTR [rsi]
  402df3:	lea    rcx,[rax+0x28c]
  402dfa:	call   0x401558
  402dff:	lea    rdx,[rbp-0x10]
  402e03:	lea    rcx,[rbp-0x14]
  402e07:	lea    r8,[rbp-0xc]
  402e0b:	call   0x401530
  402e10:	cmp    DWORD PTR [rbp-0x10],0x4
  402e14:	mov    rdi,rax
  402e17:	jle    0x402e37
  402e19:	lea    rcx,[rip+0x21e0]        # 0x405000
  402e20:	xor    r8d,r8d
  402e23:	xor    edx,edx
  402e25:	call   0x401548
  402e2a:	mov    rax,QWORD PTR [rsi]
  402e2d:	mov    DWORD PTR [rax+0x98],0x1
  402e37:	mov    r9d,DWORD PTR [rbp-0xc]
  402e3b:	mov    r8d,DWORD PTR [rbp-0x10]
  402e3f:	mov    rcx,rdi
  402e42:	mov    edx,DWORD PTR [rbp-0x14]
  402e45:	call   0x401560
  402e4a:	call   0x401538
  402e4f:	call   0x401588
  402e54:	call   0x401540
  402e59:	mov    rax,QWORD PTR [rip+0x2680]        # 0x4054e0
  402e60:	mov    rax,QWORD PTR [rax]
  402e63:	cmp    DWORD PTR [rax+0x228],0x0
  402e6a:	je     0x402d3b
  402e70:	cmp    DWORD PTR [rax+0x4c],0x0
  402e74:	jne    0x402d3b
  402e7a:	cmp    DWORD PTR [rax+0x1f8],0x0
  402e81:	jne    0x402d3b
  402e87:	cmp    DWORD PTR [rax+0x1f4],0x0
  402e8e:	jne    0x402d3b
  402e94:	call   0x401580
  402e99:	jmp    0x402d3b
  402e9e:	cmp    BYTE PTR [rdx+0x1],0x0
  402ea2:	jne    0x402ced
  402ea8:	mov    rax,QWORD PTR [rip+0x2641]        # 0x4054f0
  402eaf:	mov    rbx,QWORD PTR [rax]
  402eb2:	call   QWORD PTR [rip+0x6520]        # 0x4093d8
  402eb8:	lea    rcx,[rax+0x30]
  402ebc:	lea    rax,[rip+0xb7d]        # 0x403a40
  402ec3:	lea    rdx,[rip+0x1b36]        # 0x404a00
  402eca:	movsd  xmm0,QWORD PTR [rip+0x2196]        # 0x405068
  402ed2:	mov    r8,rbx
  402ed5:	mov    QWORD PTR [rsp+0x38],rax
  402eda:	lea    rax,[rip+0xedf]        # 0x403dc0
  402ee1:	movapd xmm3,xmm0
  402ee5:	movq   r9,xmm0
  402eea:	mov    QWORD PTR [rsp+0x30],rax
  402eef:	lea    rax,[rip+0x144a]        # 0x404340
  402ef6:	mov    QWORD PTR [rsp+0x28],rax
  402efb:	lea    rax,[rip+0x1a3e]        # 0x404940
  402f02:	mov    QWORD PTR [rsp+0x20],rax
  402f07:	call   0x402b38
  402f0c:	xor    ecx,ecx
  402f0e:	call   0x402b40
  402f13:	xor    ecx,ecx
  402f15:	call   0x402af0
  402f1a:	test   eax,eax
  402f1c:	je     0x402ced
  402f22:	mov    rax,QWORD PTR [rip+0x25c7]        # 0x4054f0
  402f29:	mov    rbx,QWORD PTR [rax]
  402f2c:	call   QWORD PTR [rip+0x64a6]        # 0x4093d8
  402f32:	lea    rdx,[rip+0x5c7]        # 0x403500
  402f39:	lea    rcx,[rax+0x30]
  402f3d:	mov    r8,rbx
  402f40:	call   0x402b38
  402f45:	xor    ecx,ecx
  402f47:	call   0x402b40
  402f4c:	nop
  402f4d:	nop
  402f4e:	nop
  402f4f:	nop
  402f50:	(bad)  
  402f51:	(bad)  
  402f52:	(bad)  
  402f53:	(bad)  
  402f54:	(bad)  
  402f55:	(bad)  
  402f56:	(bad)  
  402f57:	inc    DWORD PTR [rax]
  402f59:	add    BYTE PTR [rax],al
  402f5b:	add    BYTE PTR [rax],al
  402f5d:	add    BYTE PTR [rax],al
  402f5f:	add    bh,bh
  402f61:	(bad)  
  402f62:	(bad)  
  402f63:	(bad)  
  402f64:	(bad)  
  402f65:	(bad)  
  402f66:	(bad)  
  402f67:	inc    DWORD PTR [rax]
  402f69:	add    BYTE PTR [rax],al
  402f6b:	add    BYTE PTR [rax],al
  402f6d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000403000 <.data>:
  403000:	or     al,BYTE PTR [rax]
	...
  40303e:	add    BYTE PTR [rax],al
  403040:	or     dl,BYTE PTR [rcx+0x68]
  403043:	jne    0x4030b1
  403045:	ins    BYTE PTR es:[rdi],dx
  403046:	and    BYTE PTR [rip+0x450a2e73],ah        # 0x454a5ebf
  40304c:	js     0x4030b1
  40304e:	gs jo  0x4030c5
  403051:	and    BYTE PTR [rsi+0x6f],ah
  403054:	jb     0x403076
  403056:	(bad)  
  403057:	rex.RX
  403058:	cs (bad) 
  40305a:	and    BYTE PTR [rcx+0x6e],ah
  40305d:	and    BYTE PTR fs:[rdi],ah
  403060:	push   rax
  403061:	rex.RXB (bad) 
  403063:	sub    al,0x20
  403065:	jne    0x4030d7
  403067:	jo     0x4030ce
  403069:	jb     0x403098
  40306b:	movsxd esp,DWORD PTR [rcx+0x73]
  40306e:	and    BYTE PTR gs:[rdi+0x70],ch
  403072:	je     0x4030dd
  403074:	outs   dx,DWORD PTR ds:[rsi]
  403075:	outs   dx,BYTE PTR ds:[rsi]
  403076:	jae    0x403098
  403078:	je     0x4030db
  40307a:	imul   esp,DWORD PTR [rbp+0x20],0x61
  40307e:	outs   dx,BYTE PTR ds:[rsi]
  40307f:	and    BYTE PTR [rcx+0x72],ah
  403082:	addr32 jne 0x4030f2
  403085:	outs   dx,BYTE PTR gs:[rsi]
  403087:	je     0x4030b7
  403089:	or     cl,BYTE PTR [rdx]
  40308b:	and    BYTE PTR [rcx+0x6e],ch
  40308e:	movsxd ebp,DWORD PTR [rcx+0x64]
  403091:	outs   dx,BYTE PTR gs:[rsi]
  403093:	movsxd esp,DWORD PTR [rbp+0x73]
  403096:	and    BYTE PTR [rax],ah
  403098:	and    BYTE PTR [rax],ah
  40309a:	and    BYTE PTR [rbp+0x61],ch
  40309d:	je     0x403107
  40309f:	gs ins DWORD PTR es:[rdi],dx
  4030a1:	(bad)  
  4030a2:	je     0x40310d
  4030a4:	movsxd esp,DWORD PTR [rcx+0x20]
  4030a7:	and    BYTE PTR [rax],ah
  4030a9:	and    BYTE PTR [rsi+0x6f],ch
  4030ac:	jb     0x40311b
  4030ae:	(bad)  
  4030af:	ins    BYTE PTR es:[rdi],dx
  4030b0:	jae    0x4030d2
  4030b2:	and    BYTE PTR [rax],ah
  4030b4:	and    BYTE PTR [rax],ah
  4030b6:	and    BYTE PTR [rax],ah
  4030b8:	and    BYTE PTR [rdi+0x46],cl
  4030bb:	rex.RX pop rdi
  4030bd:	outs   dx,WORD PTR ds:[rsi]
  4030bf:	jb     0x40312e
  4030c1:	(bad)  
  4030c2:	je     0x4030e4
  4030c4:	and    BYTE PTR [rax],ah
  4030c6:	and    BYTE PTR [rax],ah
  4030c8:	jo     0x403139
  4030ca:	imul   ebp,DWORD PTR [rsi+0x74],0x73200a73
  4030d1:	jne    0x403140
  4030d3:	ins    DWORD PTR es:[rdi],dx
  4030d4:	(bad)  
  4030d5:	jb     0x403150
  4030d7:	and    BYTE PTR [rax],ah
  4030d9:	and    BYTE PTR [rax],ah
  4030db:	and    BYTE PTR [rax],ah
  4030dd:	and    BYTE PTR [rax],ah
  4030df:	data16 (bad) 
  4030e1:	movsxd esp,DWORD PTR [rbp+0x74]
  4030e4:	pop    rdi
  4030e5:	fs jne 0x403155
  4030e8:	jo     0x4030f4
  4030ea:	or     ah,BYTE PTR [rax]
  4030ec:	rex.RX (bad) 
  4030ee:	jb     0x403155
  4030f0:	(bad)  
  4030f1:	and    BYTE PTR [rax],ah
  4030f3:	and    BYTE PTR [rax],ah
  4030f5:	and    BYTE PTR [rax],ah
  4030f7:	and    BYTE PTR [rax],ah
  4030f9:	and    BYTE PTR [rax],ah
  4030fb:	rex.RX
  4030fc:	rex.B jb 0x403164
  4030ff:	(bad)  
  403100:	pop    rdi
  403101:	je     0x403172
  403103:	je     0x403166
  403105:	ins    BYTE PTR es:[rdi],dx
  403106:	and    BYTE PTR [rax],ah
  403108:	and    BYTE PTR [rax],ah
  40310a:	rex.RX movsxd r13d,DWORD PTR [rdi+0x70]
  40310e:	ins    BYTE PTR es:[rdi],dx
  40310f:	(bad)  
  403110:	outs   dx,BYTE PTR ds:[rsi]
  403111:	(bad)  
  403112:	jb     0x403187
  403114:	and    BYTE PTR [rax],ah
  403116:	and    BYTE PTR [rax],ah
  403118:	and    BYTE PTR [rsi+0x43],al
  40311b:	outs   dx,BYTE PTR gs:[rsi]
  40311d:	je     0x403191
  40311f:	jne    0x40318e
  403121:	jae    0x403143
  403123:	and    BYTE PTR [rax],ah
  403125:	and    BYTE PTR [rax],ah
  403127:	and    BYTE PTR [rsi+0x64],al
  40312a:	pop    rdi
  40312b:	movsxd esp,DWORD PTR [rsp+riz*2+0x5f]
  40312f:	imul   ebp,DWORD PTR [rsi+0xa],0x5f444620
  403136:	movsxd esp,DWORD PTR [rsp+riz*2+0x5f]
  40313a:	outs   dx,DWORD PTR ds:[rsi]
  40313b:	jne    0x4031b1
  40313d:	and    BYTE PTR [rax],ah
  40313f:	and    BYTE PTR [rax],ah
  403141:	and    BYTE PTR [rsi+0x46],al
  403144:	(bad)  
  403145:	movsxd esp,DWORD PTR [rbp+0x74]
  403148:	pop    rdi
  403149:	js     0x4031bd
  40314b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x69462020
  403153:	outs   dx,BYTE PTR ds:[rsi]
  403154:	outs   dx,BYTE PTR ds:[rsi]
  403155:	gs jb  0x403178
  403158:	and    BYTE PTR [rax],ah
  40315a:	and    BYTE PTR [rax],ah
  40315c:	and    BYTE PTR [rax],ah
  40315e:	and    BYTE PTR [rax],ah
  403160:	rex.RX
  403161:	rex.WB
  403162:	rex.R jae 0x403185
  403165:	and    BYTE PTR [rax],ah
  403167:	and    BYTE PTR [rax],ah
  403169:	and    BYTE PTR [rax],ah
  40316b:	and    BYTE PTR [rax],ah
  40316d:	and    BYTE PTR [rax],ah
  40316f:	rex.RX ins DWORD PTR es:[rdi],dx
  403171:	gs jb  0x4031db
  403174:	gs jae 0x403181
  403177:	and    BYTE PTR [rsi+0x6e],al
  40317a:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  403182:	and    BYTE PTR [rax],ah
  403184:	and    BYTE PTR [rax],ah
  403186:	and    BYTE PTR [rsi+0x4e],al
  403189:	imul   esp,DWORD PTR gs:[rdi+0x68],0x7265765f
  403191:	je     0x4031f8
  403193:	js     0x4031b5
  403195:	and    BYTE PTR [rsi+0x6f],al
  403198:	jne    0x40320e
  40319a:	gs jb  0x4031bd
  40319d:	and    BYTE PTR [rax],ah
  40319f:	and    BYTE PTR [rax],ah
  4031a1:	and    BYTE PTR [rax],ah
  4031a3:	and    BYTE PTR [rax],ah
  4031a5:	rex.RX
  4031a6:	rex.WRXB jo 0x40321d
  4031a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202073
  4031b0:	and    BYTE PTR [rax],ah
  4031b2:	and    BYTE PTR [rax],ah
  4031b4:	rex.RX push rax
  4031b6:	outs   dx,DWORD PTR ds:[rsi]
  4031b7:	imul   ebp,DWORD PTR [rsi+0x74],0x61656e5f
  4031be:	jb     0x4031ca
  4031c0:	and    BYTE PTR [rsi+0x51],al
  4031c3:	push   0x206c6c75
  4031c8:	and    BYTE PTR [rax],ah
  4031ca:	and    BYTE PTR [rax],ah
  4031cc:	and    BYTE PTR [rax],ah
  4031ce:	and    BYTE PTR [rax],ah
  4031d0:	rex.RX jae 0x403248
  4031d3:	ins    DWORD PTR es:[rdi],dx
  4031d4:	ins    DWORD PTR es:[rdi],dx
  4031d5:	(bad)  
  4031d6:	jb     0x403251
  4031d8:	and    BYTE PTR [rax],ah
  4031da:	and    BYTE PTR [rax],ah
  4031dc:	and    BYTE PTR [rax],ah
  4031de:	and    BYTE PTR [rsi+0x53],al
  4031e1:	imul   edi,DWORD PTR [rdx+0x65],0x20202020
  4031e8:	and    BYTE PTR [rax],ah
  4031ea:	and    BYTE PTR [rax],ah
  4031ec:	and    BYTE PTR [rax],ah
  4031ee:	rex.RX jbe 0x403256
  4031f1:	jb     0x403267
  4031f3:	imul   esp,DWORD PTR [rbx+0x65],0x20202073
  4031fa:	and    BYTE PTR [rax],ah
  4031fc:	and    BYTE PTR [rsi+0x56],al
  4031ff:	gs jb  0x403276
  403202:	gs js  0x403264
  403205:	(bad)  
  403206:	jbe    0x40326d
  403208:	or     ah,BYTE PTR [rax]
  40320a:	rex.RX js 0x403281
  40320d:	jb     0x403274
  40320f:	ins    DWORD PTR es:[rdi],dx
  403210:	gs jae 0x403233
  403213:	and    BYTE PTR [rax],ah
  403215:	and    BYTE PTR [rax],ah
  403217:	and    BYTE PTR [rax],ah
  403219:	rex.RX
  40321a:	rex.WRB (bad) 
  40321c:	jo     0x40328a
  40321e:	or     cl,BYTE PTR gs:[rdx]
  403221:	and    BYTE PTR [rdi+0x76],al
  403224:	gs jb  0x40329b
  403227:	imul   esp,DWORD PTR [rbx+0x65],0x20202073
  40322e:	and    BYTE PTR [rax],ah
  403230:	and    BYTE PTR [rdi+0x70],al
  403233:	outs   dx,DWORD PTR ds:[rsi]
  403234:	imul   ebp,DWORD PTR [rsi+0x74],0x20202073
  40323b:	and    BYTE PTR [rax],ah
  40323d:	and    BYTE PTR [rax],ah
  40323f:	and    BYTE PTR [rdi+0x61],al
  403242:	ins    BYTE PTR es:[rdi],dx
  403243:	ins    BYTE PTR es:[rdi],dx
  403244:	pop    rdi
  403245:	jo     0x4032b6
  403247:	imul   ebp,DWORD PTR [rsi+0x74],0x20202073
  40324e:	and    BYTE PTR [rdi+0x6e],al
  403251:	outs   dx,DWORD PTR ds:[rsi]
  403252:	pop    rdi
  403253:	jo     0x4032c1
  403255:	(bad)  
  403256:	outs   dx,BYTE PTR ds:[rsi]
  403257:	gs jae 0x40327a
  40325a:	and    BYTE PTR [rax],ah
  40325c:	and    BYTE PTR [rax],ah
  40325e:	rex.RXB imul r13d,DWORD PTR [r14+0x6e],0x200a7265
  403266:	rex.RXB movsxd r12d,DWORD PTR [r13+0x6e]
  40326a:	je     0x4032de
  40326c:	jne    0x4032db
  40326e:	jae    0x403290
  403270:	and    BYTE PTR [rax],ah
  403272:	and    BYTE PTR [rax],ah
  403274:	and    BYTE PTR [rdi+0x68],al
  403277:	jns    0x4032e9
  403279:	gs jb  0x4032ec
  40327c:	ins    BYTE PTR es:[rdi],dx
  40327d:	(bad)  
  40327e:	outs   dx,BYTE PTR ds:[rsi]
  40327f:	gs jae 0x4032a2
  403282:	and    BYTE PTR [rax],ah
  403284:	rex.RXB jb 0x4032f0
  403287:	fs addr32 gs jae 0x4032ac
  40328c:	and    BYTE PTR [rax],ah
  40328e:	and    BYTE PTR [rax],ah
  403290:	and    BYTE PTR [rax],ah
  403292:	and    BYTE PTR [rdi+0x6f],al
  403295:	jne    0x40330b
  403297:	gs jb  0x4032ba
  40329a:	and    BYTE PTR [rax],ah
  40329c:	and    BYTE PTR [rax],ah
  40329e:	and    BYTE PTR [rax],ah
  4032a0:	and    BYTE PTR [rax],ah
  4032a2:	rex.RXB
  4032a3:	rex.R jb 0x403315
  4032a6:	jo     0x403307
  4032a8:	imul   ebp,DWORD PTR fs:[rbp+0xa],0x4150200a
  4032b0:	jb     0x403317
  4032b2:	(bad)  
  4032b3:	pop    rdi
  4032b4:	imul   esp,DWORD PTR [rbp+0x65],0x70
  4032b8:	and    BYTE PTR [rax],ah
  4032ba:	and    BYTE PTR [rax],ah
  4032bc:	and    BYTE PTR [rax+0x64],dl
  4032bf:	jb     0x403330
  4032c1:	jo     0x4032e3
  4032c3:	xor    BYTE PTR fs:[rdx],bh
  4032c6:	xor    BYTE PTR [rax+rsi*1+0x20],al
  4032ca:	and    BYTE PTR [rax],ah
  4032cc:	push   rax
  4032cd:	rex.RX (bad) 
  4032cf:	movsxd esp,DWORD PTR [rbp+0x74]
  4032d2:	pop    rdi
  4032d3:	(bad)  
  4032d4:	jb     0x40333b
  4032d6:	(bad)  
  4032d7:	pop    rdi
  4032d8:	imul   esp,DWORD PTR [rbp+0x65],0x70
  4032dc:	and    BYTE PTR [rax+0x67],dl
  4032df:	outs   dx,DWORD PTR ds:[rsi]
  4032e0:	outs   dx,DWORD PTR ds:[rsi]
  4032e1:	and    BYTE PTR fs:[rax],ah
  4032e4:	and    BYTE PTR [rax],ah
  4032e6:	and    BYTE PTR [rax],ah
  4032e8:	and    BYTE PTR [rax],ah
  4032ea:	push   rax
  4032eb:	rex.RXB outs dx,DWORD PTR ds:[rsi]
  4032ed:	outs   dx,DWORD PTR ds:[rsi]
  4032ee:	fs pop rdi
  4032f0:	outs   dx,BYTE PTR ds:[rsi]
  4032f1:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  4032f9:	or     ah,BYTE PTR [rax]
  4032fb:	push   rax
  4032fc:	rex.WRB
  4032fd:	gs jb  0x403367
  403300:	gs pop rdi
  403302:	imul   esp,DWORD PTR [rbp+0x65],0x70
  403306:	and    BYTE PTR [rax],ah
  403308:	and    BYTE PTR [rax],ah
  40330a:	push   rax
  40330b:	outs   dx,DWORD PTR ds:[rsi]
  40330c:	jne    0x403382
  40330e:	jo     0x403385
  403310:	je     0x403371
  403312:	outs   dx,WORD PTR ds:[rsi]
  403314:	jb     0x403379
  403316:	gs and BYTE PTR fs:[rax+0x70],dl
  40331b:	jb     0x403382
  40331d:	movsxd ebp,DWORD PTR [rcx+0x73]
  403320:	imul   ebp,DWORD PTR [rdi+0x6e],0x746f6e5f
  403327:	or     cl,BYTE PTR [rdx]
  403329:	and    BYTE PTR [rcx+0x62],dl
  40332c:	rex.X outs dx,DWORD PTR ds:[rsi]
  40332e:	jne    0x40339e
  403330:	and    BYTE PTR fs:[rax],dh
  403333:	cmp    dh,BYTE PTR [rax]
  403335:	cs xor eax,0x62512020
  40333b:	rex.X pop rdi
  40333d:	jae    0x4033a2
  40333f:	(bad)  
  403340:	ins    BYTE PTR es:[rdi],dx
  403341:	gs pop rdi
  403343:	(bad)  
  403344:	outs   dx,DWORD PTR ds:[rsi]
  403345:	js     0x403367
  403347:	and    BYTE PTR [rcx+0x63],dl
  40334a:	outs   dx,DWORD PTR ds:[rsi]
  40334b:	jo     0x4033b9
  40334d:	(bad)  
  40334e:	outs   dx,BYTE PTR ds:[rsi]
  40334f:	(bad)  
  403350:	jb     0x403372
  403352:	and    BYTE PTR [rax],ah
  403354:	and    BYTE PTR [rax],ah
  403356:	and    BYTE PTR [rcx+0x47],dl
  403359:	outs   dx,DWORD PTR ds:[rsi]
  40335a:	outs   dx,DWORD PTR ds:[rsi]
  40335b:	fs pop rdi
  40335d:	jo     0x4033ce
  40335f:	imul   ebp,DWORD PTR [rsi+0x74],0x20202020
  403366:	push   rcx
  403367:	imul   ebp,DWORD PTR [rsi+0x74],0x6f697265
  40336e:	jb     0x40337a
  403370:	and    BYTE PTR [rcx+0x4a],dl
  403373:	outs   dx,DWORD PTR ds:[rsi]
  403374:	addr32 ins BYTE PTR es:[edi],dx
  403377:	and    BYTE PTR gs:[rax],ah
  40337a:	and    BYTE PTR [rax],ah
  40337c:	and    BYTE PTR [rax],ah
  40337e:	and    BYTE PTR [rax],ah
  403380:	push   rcx
  403381:	jb     0x4033e4
  403383:	outs   dx,BYTE PTR ds:[rsi]
  403384:	outs   dx,DWORD PTR fs:[rsi]
  403386:	ins    DWORD PTR es:[rdi],dx
  403387:	and    BYTE PTR [rax],ah
  403389:	and    BYTE PTR [rax],ah
  40338b:	and    BYTE PTR [rax],ah
  40338d:	and    BYTE PTR [rax],ah
  40338f:	push   rcx
  403390:	push   rdx
  403391:	outs   dx,DWORD PTR ds:[rsi]
  403392:	je     0x4033f5
  403394:	je     0x4033fb
  403396:	and    BYTE PTR [rax],ah
  403398:	and    BYTE PTR [rax],ah
  40339a:	and    BYTE PTR [rax],ah
  40339c:	and    BYTE PTR [rax],ah
  40339e:	push   rcx
  40339f:	jae    0x403406
  4033a1:	(bad)  
  4033a2:	jb     0x403407
  4033a4:	push   0x7473315f
  4033a9:	and    BYTE PTR [rax],ah
  4033ab:	and    BYTE PTR [rax],ah
  4033ad:	push   rcx
  4033ae:	je     0x403422
  4033b0:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  4033b7:	je     0x40341e
  4033b9:	or     ah,BYTE PTR [rax]
  4033bb:	push   rcx
  4033bc:	push   rsi
  4033bd:	gs jb  0x403434
  4033c0:	gs js  0x403422
  4033c3:	outs   dx,DWORD PTR ds:[esi]
  4033c5:	outs   dx,DWORD PTR ds:[rsi]
  4033c6:	or     cl,BYTE PTR fs:[rdx]
  4033c9:	and    BYTE PTR [rsp+rsi*1+0x5f],dl
  4033cd:	je     0x403441
  4033cf:	(bad)  
  4033d0:	movsxd esp,DWORD PTR [rbp+0x20]
  4033d3:	and    BYTE PTR [rax],ah
  4033d5:	and    BYTE PTR [rax],ah
  4033d7:	and    BYTE PTR [rax],ah
  4033d9:	push   rsp
  4033da:	movsxd ebp,DWORD PTR [rax+0x65]
  4033dd:	movsxd ebp,DWORD PTR [rbx+0x5f]
  4033e0:	outs   dx,DWORD PTR ds:[rsi]
  4033e1:	data16 je 0x403449
  4033e4:	outs   dx,BYTE PTR ds:[rsi]
  4033e5:	and    BYTE PTR [rax],ah
  4033e7:	and    BYTE PTR [rbx+rsi*2+0x74],dl
  4033eb:	(bad)  
  4033ec:	je     0x403457
  4033ee:	jae    0x403464
  4033f0:	imul   esp,DWORD PTR [rbx+0x73],0x20202020
  4033f7:	push   rsp
  4033f8:	jbe    0x40345f
  4033fa:	jb     0x403465
  4033fc:	data16 jns 0x40341f
  4033ff:	and    BYTE PTR [rax],ah
  403401:	and    BYTE PTR [rax],ah
  403403:	and    BYTE PTR [rax],ah
  403405:	and    BYTE PTR [rdx+rdi*2+0x5f],dl
  403409:	jae    0x40347f
  40340b:	outs   dx,DWORD PTR fs:[rsi]
  40340d:	jne    0x403483
  40340f:	or     ah,BYTE PTR [rax]
  403411:	push   rsp
  403412:	rex.RX (bad) 
  403414:	movsxd esp,DWORD PTR [rbp+0x74]
  403417:	pop    rdi
  403418:	ins    BYTE PTR es:[rdi],dx
  403419:	outs   dx,DWORD PTR ds:[rsi]
  40341a:	and    BYTE PTR [eax],ah
  40341d:	and    BYTE PTR [rax],ah
  40341f:	and    BYTE PTR [rcx+rcx*2+0x6e],dl
  403423:	jo     0x40349a
  403425:	je     0x403486
  403427:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2020
  40342e:	and    BYTE PTR [rax+rdx*2+0x6f],dl
  403432:	imul   ebp,DWORD PTR [rsi+0x74],0x6172745f
  403439:	movsxd esp,DWORD PTR [rbp+0x20]
  40343c:	and    BYTE PTR [rax],ah
  40343e:	push   rsp
  40343f:	rex.WRB
  403440:	gs jb  0x4034aa
  403443:	gs pop rdi
  403445:	je     0x4034b9
  403447:	(bad)  
  403448:	movsxd esp,DWORD PTR [rbp+0x20]
  40344b:	and    BYTE PTR [rax],ah
  40344d:	push   rsp
  40344e:	rex.WRXB jne 0x4034c5
  403451:	jo     0x4034c8
  403453:	je     0x4034b4
  403455:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x5420
  40345c:	push   rdi
  40345d:	imul   esp,DWORD PTR [rbp+riz*2+0x5f],0x63617274
  403465:	and    BYTE PTR gs:[rax],ah
  403468:	and    BYTE PTR [rax],ah
  40346a:	push   rsp
  40346b:	push   rsi
  40346c:	gs jb  0x4034e3
  40346f:	gs js  0x4034d1
  403472:	jae    0x4034e8
  403474:	outs   dx,DWORD PTR ds:[rsi]
  403475:	jo     0x403497
  403477:	and    BYTE PTR [rax],ah
  403479:	push   rsp
  40347a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40347c:	outs   dx,BYTE PTR ds:[rsi]
  40347d:	gs pop rdi
  40347f:	jae    0x4034f5
  403481:	outs   dx,DWORD PTR ds:[rsi]
  403482:	jo     0x40348e
  403484:	or     ah,BYTE PTR [rax]
  403486:	rex.B outs dx,BYTE PTR ds:[rsi]
  403488:	ins    BYTE PTR es:[edi],dx
  40348a:	gs pop rdi
  40348c:	ins    DWORD PTR es:[rdi],dx
  40348d:	(bad)  
  40348e:	js     0x4034b0
  403490:	and    BYTE PTR [rax],ah
  403492:	and    BYTE PTR [rax],ah
  403494:	and    BYTE PTR [rbx+0x65],al
  403497:	outs   dx,BYTE PTR ds:[rsi]
  403498:	je     0x40350c
  40349a:	jne    0x403509
  40349c:	pop    rdi
  40349d:	jae    0x403508
  40349f:	jp     0x403506
  4034a1:	and    BYTE PTR [rax],ah
  4034a3:	and    BYTE PTR [rdx+0x61],dl
  4034a6:	outs   dx,BYTE PTR ds:[rsi]
  4034a7:	outs   dx,DWORD PTR fs:[rsi]
  4034a9:	ins    DWORD PTR es:[rdi],dx
  4034aa:	pop    rdi
  4034ab:	imul   esi,DWORD PTR fs:[rbx+0x74],0x20202020
  4034b3:	push   rbp
  4034b4:	movsxd ebp,DWORD PTR [rdi+0x70]
  4034b7:	ins    BYTE PTR es:[rdi],dx
  4034b8:	(bad)  
  4034b9:	outs   dx,BYTE PTR ds:[rsi]
  4034ba:	(bad)  
  4034bb:	jb     0x40351c
  4034bd:	ins    DWORD PTR es:[rdi],dx
  4034be:	(bad)  
  4034bf:	js     0x4034e1
  4034c1:	and    BYTE PTR [rdi+0x69],dl
  4034c4:	fs gs pop rdi
  4034c7:	outs   dx,DWORD PTR ds:[rsi]
  4034c8:	jne    0x40353e
  4034ca:	jae    0x403535
  4034cc:	fs or  al,BYTE PTR gs:[rax]
	...
  403500:	or     dh,BYTE PTR [rcx+0x63]
  403503:	outs   dx,DWORD PTR ds:[rsi]
  403504:	outs   dx,BYTE PTR ds:[rsi]
  403505:	jbe    0x40356c
  403507:	js     0x403536
  403509:	and    BYTE PTR [rbx+0x6f],ah
  40350c:	ins    DWORD PTR es:[rdi],dx
  40350d:	jo     0x403584
  40350f:	je     0x403576
  403511:	and    BYTE PTR [rax+rbp*2+0x65],dh
  403515:	and    BYTE PTR [rbx+0x6f],ah
  403518:	outs   dx,BYTE PTR ds:[rsi]
  403519:	jbe    0x403580
  40351b:	js     0x40353d
  40351d:	push   0x2e6c6c75
  403522:	and    BYTE PTR [rax],ah
  403524:	push   rcx
  403525:	push   0x206c6c75
  40352a:	and    eax,0x20200a73
  40352f:	and    BYTE PTR [rax],ah
  403531:	imul   ebp,DWORD PTR [rsi+0x70],0x28207475
  403538:	jae    0x4035ae
  40353a:	imul   ebp,DWORD PTR fs:[rsi+0x29],0x6964203a
  403542:	ins    DWORD PTR es:[rdi],dx
  403543:	outs   dx,BYTE PTR gs:[rsi]
  403545:	jae    0x4035b0
  403547:	outs   dx,DWORD PTR ds:[rsi]
  403548:	outs   dx,BYTE PTR ds:[rsi]
  403549:	sub    al,0x20
  40354b:	outs   dx,BYTE PTR ds:[rsi]
  40354c:	jne    0x4035bb
  40354e:	(bad)  
  40354f:	gs jb  0x403572
  403552:	outs   dx,DWORD PTR ds:[rsi]
  403553:	data16 and BYTE PTR [rax+0x6f],dh
  403557:	imul   ebp,DWORD PTR [rsi+0x74],0x70202c73
  40355e:	outs   dx,DWORD PTR ds:[rsi]
  40355f:	imul   ebp,DWORD PTR [rsi+0x74],0x6f6f6320
  403566:	jb     0x4035cc
  403568:	imul   ebp,DWORD PTR [rsi+0x61],0xa736574
  40356f:	and    BYTE PTR [rax],ah
  403571:	and    BYTE PTR [rax],ah
  403573:	movsxd ebp,DWORD PTR [rdi+0x6d]
  403576:	ins    DWORD PTR es:[rdi],dx
  403577:	outs   dx,BYTE PTR gs:[rsi]
  403579:	je     0x4035ee
  40357b:	and    BYTE PTR [rbx+0x74],dh
  40357e:	(bad)  
  40357f:	jb     0x4035f5
  403581:	and    BYTE PTR [rdi+0x69],dh
  403584:	je     0x4035ee
  403586:	and    BYTE PTR [rcx+0x20],ah
  403589:	outs   dx,BYTE PTR ds:[rsi]
  40358a:	outs   dx,DWORD PTR ds:[rsi]
  40358b:	outs   dx,BYTE PTR ds:[rsi]
  40358c:	sub    eax,0x656d756e
  403591:	jb     0x4035fc
  403593:	movsxd esp,DWORD PTR [rax]
  403595:	movsxd ebp,DWORD PTR [rax+0x61]
  403598:	jb     0x4035fb
  40359a:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  40359e:	or     cl,BYTE PTR [rdx]
  4035a0:	outs   dx,DWORD PTR ds:[rsi]
  4035a1:	jo     0x403617
  4035a3:	imul   ebp,DWORD PTR [rdi+0x6e],0x71282073
  4035aa:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4035ad:	jbe    0x403614
  4035af:	js     0x4035df
  4035b1:	push   0x3a296d74
  4035b6:	or     ah,BYTE PTR [rax]
  4035b8:	and    BYTE PTR [rax],ah
  4035ba:	and    BYTE PTR [rcx+0x74],dl
  4035bd:	and    BYTE PTR [rax],ah
  4035bf:	and    BYTE PTR [rip+0x69727420],ch        # 0x69b2a9e5
  4035c5:	(bad)  
  4035c6:	outs   dx,BYTE PTR ds:[rsi]
  4035c7:	addr32 jne 0x403636
  4035ca:	(bad)  
  4035cb:	je     0x403632
  4035cd:	and    BYTE PTR fs:[rdi+0x75],ch
  4035d1:	je     0x403643
  4035d3:	jne    0x403649
  4035d5:	or     ah,BYTE PTR [rax]
  4035d7:	and    BYTE PTR [rax],ah
  4035d9:	and    BYTE PTR [rcx+0x4a],dl
  4035dc:	and    BYTE PTR [rax],ah
  4035de:	and    BYTE PTR [rip+0x676f6a20],ch        # 0x67afa004
  4035e4:	ins    BYTE PTR es:[edi],dx
  4035e6:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4035eb:	jo     0x403662
  4035ed:	je     0x40360f
  4035ef:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  4035f6:	and    BYTE PTR [rdi+0x66],ch
  4035f9:	and    BYTE PTR [rbp+0x65],ch
  4035fc:	jb     0x403665
  4035fe:	gs and BYTE PTR fs:[rsi+0x61],ah
  403603:	movsxd esp,DWORD PTR [rbp+0x74]
  403606:	jae    0x403612
  403608:	and    BYTE PTR [rax],ah
  40360a:	and    BYTE PTR [rax],ah
  40360c:	push   rsp
  40360d:	jbe    0x40362f
  40360f:	and    BYTE PTR [rax],ah
  403611:	sub    eax,0x72657620
  403616:	imul   esp,DWORD PTR [rsi+0x79],0x73657220
  40361d:	jne    0x40368b
  40361f:	je     0x40365b
  403621:	and    BYTE PTR [rbx+0x74],dh
  403624:	jb     0x40369b
  403626:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  40362a:	gs sub al,0x20
  40362d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  403630:	jbe    0x403697
  403632:	js     0x40369d
  403634:	je     0x4036af
  403636:	sub    al,0x20
  403638:	(bad)  
  403639:	outs   dx,BYTE PTR ds:[rsi]
  40363a:	and    BYTE PTR fs:[rax+0x6f],dh
  40363e:	imul   ebp,DWORD PTR [rsi+0x74],0x636e6920
  403645:	ins    BYTE PTR es:[rdi],dx
  403646:	jne    0x4036bb
  403648:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  40364f:	and    BYTE PTR [rsi],ch
  403651:	and    BYTE PTR [rax],ah
  403653:	and    BYTE PTR [rax],ah
  403655:	sub    eax,0x6e6f6320
  40365a:	movsxd ebp,DWORD PTR [rcx+0x73]
  40365d:	and    BYTE PTR gs:[rcx+rbp*2+0x73],ch
  403662:	je     0x403684
  403664:	outs   dx,DWORD PTR ds:[rsi]
  403665:	data16 and BYTE PTR [rcx+0x6c],ah
  403669:	ins    BYTE PTR es:[rdi],dx
  40366a:	and    BYTE PTR [rdi+0x70],ch
  40366d:	je     0x4036d8
  40366f:	outs   dx,DWORD PTR ds:[rsi]
  403670:	outs   dx,BYTE PTR ds:[rsi]
  403671:	jae    0x40367d
  403673:	and    BYTE PTR [rax],ah
  403675:	and    BYTE PTR [rax],ah
  403677:	sub    eax,0x20202020
  40367c:	sub    eax,0x656e6f20
  403681:	sub    eax,0x656e696c
  403686:	and    BYTE PTR [rbp+riz*2+0x73],ah
  40368a:	movsxd esi,DWORD PTR [rdx+0x69]
  40368d:	jo     0x403703
  40368f:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  403696:	(bad)  
  403697:	ins    BYTE PTR es:[rdi],dx
  403698:	ins    BYTE PTR es:[rdi],dx
  403699:	and    BYTE PTR [rdi+0x70],ch
  40369c:	je     0x403707
  40369e:	outs   dx,DWORD PTR ds:[rsi]
  40369f:	outs   dx,BYTE PTR ds:[rsi]
  4036a0:	jae    0x4036ac
  4036a2:	or     ch,BYTE PTR [rdi+0x75]
  4036a5:	je     0x403717
  4036a7:	jne    0x40371d
  4036a9:	and    BYTE PTR [rdi+0x70],ch
  4036ac:	je     0x403717
  4036ae:	outs   dx,DWORD PTR ds:[rsi]
  4036af:	outs   dx,BYTE PTR ds:[rsi]
  4036b0:	jae    0x4036d2
  4036b2:	sub    BYTE PTR [rbx+0x75],dh
  4036b5:	(bad)
  4036ba:	cmp    cl,BYTE PTR [rdx]
  4036bc:	and    BYTE PTR [rax],ah
  4036be:	and    BYTE PTR [rax],ah
  4036c0:	jae    0x4036e2
  4036c2:	and    BYTE PTR [rax],ah
  4036c4:	and    BYTE PTR [rip+0x6d757320],ch        # 0x6db5a9ea
  4036ca:	ins    DWORD PTR es:[rdi],dx
  4036cb:	(bad)  
  4036cc:	jb     0x403747
  4036ce:	and    BYTE PTR [rdi+0x66],ch
  4036d1:	and    BYTE PTR [rdx+0x65],dh
  4036d4:	jae    0x40374b
  4036d6:	ins    BYTE PTR es:[rdi],dx
  4036d7:	je     0x40374c
  4036d9:	and    BYTE PTR [rax],ch
  4036db:	fs gs data16 (bad) 
  4036df:	jne    0x40374d
  4036e1:	je     0x40370c
  4036e3:	or     ah,BYTE PTR [rax]
  4036e5:	and    BYTE PTR [rax],ah
  4036e7:	and    BYTE PTR [rcx+0x20],ch
  4036ea:	and    BYTE PTR [rax],ah
  4036ec:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a5ad12
  4036f2:	je     0x40375d
  4036f4:	movsxd esp,DWORD PTR [rbp+0x73]
  4036f7:	and    BYTE PTR [rcx+0x6e],ch
  4036fa:	movsxd ebp,DWORD PTR [rcx+0x64]
  4036fd:	outs   dx,BYTE PTR gs:[rsi]
  4036ff:	je     0x403721
  403701:	je     0x403772
  403703:	and    BYTE PTR [rbp+0x61],ah
  403706:	movsxd ebp,DWORD PTR [rax+0x20]
  403709:	data16 (bad) 
  40370b:	movsxd esp,DWORD PTR [rbp+0x74]
  40370e:	or     ah,BYTE PTR [rax]
  403710:	and    BYTE PTR [rax],ah
  403712:	and    BYTE PTR [rsi+0x20],ch
  403715:	and    BYTE PTR [rax],ah
  403717:	and    BYTE PTR [rip+0x726f6e20],ch        # 0x72afa53d
  40371d:	ins    DWORD PTR es:[rdi],dx
  40371e:	(bad)  
  40371f:	ins    BYTE PTR es:[rdi],dx
  403720:	jae    0x403742
  403722:	ja     0x40378d
  403724:	je     0x40378e
  403726:	and    BYTE PTR [rdi+0x66],ch
  403729:	data16 jae 0x403791
  40372c:	je     0x4037a1
  40372e:	or     ah,BYTE PTR [rax]
  403730:	and    BYTE PTR [rax],ah
  403732:	and    BYTE PTR [rax+0x20],dh
  403735:	and    BYTE PTR [rax],ah
  403737:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a5ad5d
  40373d:	je     0x4037a4
  40373f:	js     0x403761
  403741:	movsxd ebp,DWORD PTR [rdi+0x6f]
  403744:	jb     0x4037aa
  403746:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  40374d:	sub    BYTE PTR [rcx+0x6e],ch
  403750:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  403754:	gs jae 0x403777
  403757:	movsxd ebp,DWORD PTR [rdi+0x70]
  40375a:	ins    BYTE PTR es:[rdi],dx
  40375b:	(bad)  
  40375c:	outs   dx,BYTE PTR ds:[rsi]
  40375d:	(bad)  
  40375e:	jb     0x403780
  403760:	jo     0x4037d1
  403762:	imul   ebp,DWORD PTR [rsi+0x74],0x66692073
  403769:	and    BYTE PTR [rdi],ah
  40376b:	push   rcx
  40376c:	movsxd esp,DWORD PTR [rdi]
  40376e:	sub    DWORD PTR [rdx],ecx
  403770:	and    BYTE PTR [rax],ah
  403772:	and    BYTE PTR [rax],ah
  403774:	rex.RX js 0x403797
  403777:	and    BYTE PTR [rax],ah
  403779:	sub    eax,0x74786520
  40377e:	jb     0x4037e5
  403780:	ins    DWORD PTR es:[rdi],dx
  403781:	and    BYTE PTR gs:[rax+0x6f],dh
  403785:	imul   ebp,DWORD PTR [rsi+0x74],0x63282073
  40378c:	outs   dx,DWORD PTR ds:[rsi]
  40378d:	outs   dx,BYTE PTR ds:[rsi]
  40378e:	jbe    0x4037f5
  403790:	js     0x4037b2
  403792:	push   0x206c6c75
  403797:	jbe    0x4037fe
  403799:	jb     0x40380f
  40379b:	imul   esp,DWORD PTR [rbx+0x65],0x200a2973
  4037a2:	and    BYTE PTR [rax],ah
  4037a4:	and    BYTE PTR [rsi+0x41],al
  4037a7:	and    BYTE PTR [rax],ah
  4037a9:	and    BYTE PTR [rip+0x6d6f6320],ch        # 0x6daf9acf
  4037af:	jo     0x403826
  4037b1:	je     0x403818
  4037b3:	and    BYTE PTR [rdi+rbp*2+0x74],dh
  4037b7:	(bad)  
  4037b8:	ins    BYTE PTR es:[rdi],dx
  4037b9:	and    BYTE PTR [rcx+0x72],ah
  4037bc:	gs (bad) 
  4037be:	and    BYTE PTR [rcx+0x6e],ah
  4037c1:	and    BYTE PTR fs:[rsi+0x6f],dh
  4037c5:	ins    BYTE PTR es:[rdi],dx
  4037c6:	jne    0x403835
  4037c8:	or     ah,BYTE PTR gs:[rax]
  4037cb:	and    BYTE PTR [rax],ah
  4037cd:	and    BYTE PTR [rdi+0x20],ch
  4037d0:	and    BYTE PTR [rax],ah
  4037d2:	and    BYTE PTR [rip+0x46464f20],ch        # 0x468686f8
  4037d8:	and    BYTE PTR [rsi+0x6f],ah
  4037db:	jb     0x40384a
  4037dd:	(bad)  
  4037de:	je     0x403800
  4037e0:	sub    BYTE PTR [rcx+rbp*2+0x6d],ah
  4037e4:	sub    al,0x20
  4037e6:	outs   dx,BYTE PTR ds:[rsi]
  4037e7:	sub    al,0x20
  4037e9:	jo     0x40385a
  4037eb:	imul   ebp,DWORD PTR [rsi+0x74],0x66202c73
  4037f2:	(bad)  
  4037f3:	movsxd esp,DWORD PTR [rbp+0x74]
  4037f6:	jae    0x403821
  4037f8:	or     ah,BYTE PTR [rax]
  4037fa:	and    BYTE PTR [rax],ah
  4037fc:	and    BYTE PTR [rdi+0x20],al
  4037ff:	and    BYTE PTR [rax],ah
  403801:	and    BYTE PTR [rip+0x6f654720],ch        # 0x6fa57f27
  403807:	ins    DWORD PTR es:[rdi],dx
  403808:	jbe    0x403873
  40380a:	gs ja  0x40382d
  40380d:	outs   dx,DWORD PTR ds:[rsi]
  40380e:	jne    0x403884
  403810:	jo     0x403887
  403812:	je     0x403834
  403814:	sub    BYTE PTR [rdx],dh
  403816:	sub    eax,0x33202c64
  40381b:	sub    eax,0x61202c64
  403820:	outs   dx,BYTE PTR ds:[rsi]
  403821:	and    BYTE PTR fs:[rbp*1+0x200a2964],dh
  403829:	and    BYTE PTR [rax],ah
  40382b:	and    BYTE PTR [rbp+0x20],ch
  40382e:	and    BYTE PTR [rax],ah
  403830:	and    BYTE PTR [rip+0x74614d20],ch        # 0x74a18556
  403836:	push   0x74616d65
  40383b:	imul   esp,DWORD PTR [rbx+0x61],0x74756f20
  403842:	jo     0x4038b9
  403844:	je     0x403866
  403846:	sub    BYTE PTR [rdx],dh
  403848:	sub    eax,0x6e612064
  40384d:	and    BYTE PTR fs:[rbx],dh
  403850:	sub    eax,0x200a2964
  403855:	and    BYTE PTR [rax],ah
  403857:	and    BYTE PTR [rcx+0x56],dl
  40385a:	outs   dx,BYTE PTR ds:[rsi]
  40385b:	and    BYTE PTR [rax],ah
  40385d:	sub    eax,0x69727020
  403862:	outs   dx,BYTE PTR ds:[rsi]
  403863:	je     0x403885
  403865:	data16 (bad) 
  403867:	movsxd esp,DWORD PTR [rbp+0x74]
  40386a:	jae    0x40388c
  40386c:	je     0x4038d6
  40386e:	(bad)  
  40386f:	je     0x403891
  403871:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  403878:	and    BYTE PTR [rax+0x6f],dh
  40387b:	imul   ebp,DWORD PTR [rsi+0x74],0x202c6e20
  403882:	sub    eax,0x6669206e
  403887:	and    BYTE PTR [rsi+0x6f],ch
  40388a:	je     0x403896
  40388c:	and    BYTE PTR [rax],ah
  40388e:	and    BYTE PTR [rax],ah
  403890:	push   rsp
  403891:	rex.WRXB and BYTE PTR [r14+0x69],r12b
  403895:	ins    BYTE PTR es:[rdi],dx
  403896:	gs sub eax,0x74756f20
  40389c:	jo     0x403913
  40389e:	je     0x4038c0
  4038a0:	jb     0x403907
  4038a2:	jae    0x403919
  4038a4:	ins    BYTE PTR es:[rdi],dx
  4038a5:	je     0x40391a
  4038a7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4038ab:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x6d20
  4038b2:	(bad)  
  4038b3:	jns    0x4038d5
  4038b5:	(bad)  
  4038b6:	and    BYTE PTR gs:[rbp+0x6e],ah
  4038ba:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4038be:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4038c3:	and    BYTE PTR [rbx+0x69],dh
  4038c6:	outs   dx,BYTE PTR ds:[rsi]
  4038c7:	ins    BYTE PTR es:[edi],dx
  4038c9:	and    BYTE PTR gs:[rcx+0x75],dh
  4038cd:	outs   dx,DWORD PTR ds:[rsi]
  4038ce:	je     0x403935
  4038d0:	jae    0x4038dc
  4038d2:	or     ah,BYTE PTR [rbp+0x78]
  4038d5:	(bad)  
  4038d6:	ins    DWORD PTR es:[rdi],dx
  4038d7:	jo     0x403945
  4038d9:	gs jae 0x403916
  4038dc:	or     ah,BYTE PTR [rax]
  4038de:	and    BYTE PTR [rax],ah
  4038e0:	and    BYTE PTR [rdx+0x62],dh
  4038e3:	outs   dx,DWORD PTR ds:[rsi]
  4038e4:	js     0x403906
  4038e6:	movsxd esp,DWORD PTR [rax]
  4038e8:	xor    r12b,BYTE PTR [rax]
  4038eb:	jl     0x40390d
  4038ed:	jno    0x403952
  4038ef:	outs   dx,DWORD PTR ds:[rsi]
  4038f0:	outs   dx,BYTE PTR ds:[rsi]
  4038f1:	jbe    0x403958
  4038f3:	js     0x403915
  4038f5:	jae    0x403917
  4038f7:	outs   dx,BYTE PTR ds:[rsi]
  4038f8:	and    BYTE PTR [rax],ah
  4038fa:	and    BYTE PTR [rax],ah
  4038fc:	and    BYTE PTR [rax],ah
  4038fe:	and    BYTE PTR [rax],ah
  403900:	and    BYTE PTR [rax],ah
  403902:	and    BYTE PTR [rax],ah
  403904:	and    BYTE PTR [rax],ah
  403906:	and    BYTE PTR [rax],ah
  403908:	and    BYTE PTR [rax],ah
  40390a:	and    BYTE PTR [rax],ah
  40390c:	jb     0x403970
  40390e:	outs   dx,DWORD PTR ds:[rsi]
  40390f:	js     0x403931
  403911:	movsxd esp,DWORD PTR [rax]
  403913:	xor    r12b,BYTE PTR [rax]
  403916:	jl     0x403938
  403918:	jno    0x40397d
  40391a:	outs   dx,DWORD PTR ds:[rsi]
  40391b:	outs   dx,BYTE PTR ds:[rsi]
  40391c:	jbe    0x403983
  40391e:	js     0x403940
  403920:	imul   ecx,DWORD PTR [rdx],0x20202020
  403926:	jb     0x40398a
  403928:	outs   dx,DWORD PTR ds:[rsi]
  403929:	js     0x40394b
  40392b:	movsxd esp,DWORD PTR [rax]
  40392d:	xor    r12b,BYTE PTR [rax]
  403930:	jl     0x403952
  403932:	jno    0x403997
  403934:	outs   dx,DWORD PTR ds:[rsi]
  403935:	outs   dx,BYTE PTR ds:[rsi]
  403936:	jbe    0x40399d
  403938:	js     0x40395a
  40393a:	outs   dx,DWORD PTR ds:[rsi]
  40393b:	and    BYTE PTR [rax],ah
  40393d:	and    BYTE PTR [rax],ah
  40393f:	and    BYTE PTR [rax],ah
  403941:	and    BYTE PTR [rax],ah
  403943:	and    BYTE PTR [rax],ah
  403945:	and    BYTE PTR [rax],ah
  403947:	and    BYTE PTR [rax],ah
  403949:	and    BYTE PTR [rax],ah
  40394b:	and    BYTE PTR [rax],ah
  40394d:	and    BYTE PTR [rax],ah
  40394f:	and    BYTE PTR [rax],ah
  403951:	jb     0x4039b5
  403953:	outs   dx,DWORD PTR ds:[rsi]
  403954:	js     0x403976
  403956:	xor    DWORD PTR [rax],esi
  403958:	xor    BYTE PTR [rax],dh
  40395a:	and    BYTE PTR [rbx+0x20],dh
  40395d:	jl     0x40397f
  40395f:	jno    0x4039c4
  403961:	outs   dx,DWORD PTR ds:[rsi]
  403962:	outs   dx,BYTE PTR ds:[rsi]
  403963:	jbe    0x4039ca
  403965:	js     0x403987
  403967:	jae    0x403989
  403969:	push   rsp
  40396a:	jbe    0x40398c
  40396c:	rex.RX
  40396d:	or     spl,BYTE PTR [r8]
  403970:	and    BYTE PTR [rax],ah
  403972:	and    BYTE PTR [rdx+0x62],dh
  403975:	outs   dx,DWORD PTR ds:[rsi]
  403976:	js     0x403998
  403978:	movsxd esp,DWORD PTR [rax]
  40397a:	and    BYTE PTR fs:[rdx+rsi*1+0x20],al
  40397f:	jl     0x4039a1
  403981:	jno    0x4039e6
  403983:	outs   dx,DWORD PTR ds:[rsi]
  403984:	outs   dx,BYTE PTR ds:[rsi]
  403985:	jbe    0x4039ec
  403987:	js     0x4039a9
  403989:	jae    0x4039ab
  40398b:	push   rcx
  40398c:	movsxd esp,DWORD PTR [rax]
  40398e:	rex.RX js 0x4039b1
  403991:	and    BYTE PTR [rax],ah
  403993:	and    BYTE PTR [rax],ah
  403995:	and    BYTE PTR [rax],ah
  403997:	and    BYTE PTR [rax],ah
  403999:	and    BYTE PTR [rax],ah
  40399b:	and    BYTE PTR [rax],ah
  40399d:	and    BYTE PTR [rdx+0x62],dh
  4039a0:	outs   dx,DWORD PTR ds:[rsi]
  4039a1:	js     0x4039c3
  4039a3:	jns    0x4039c5
  4039a5:	xor    DWORD PTR [rax],esi
  4039a7:	xor    BYTE PTR [rax],dh
  4039a9:	and    BYTE PTR [rdi+0x30],dl
  4039ac:	and    BYTE PTR [rax+riz*1+0x71],bh
  4039b0:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4039b3:	jbe    0x403a1a
  4039b5:	js     0x4039d7
  4039b7:	jae    0x4039d9
  4039b9:	outs   dx,BYTE PTR ds:[rsi]
  4039ba:	or     ah,BYTE PTR [rax]
  4039bc:	and    BYTE PTR [rax],ah
  4039be:	and    BYTE PTR [rdx+0x62],dh
  4039c1:	outs   dx,DWORD PTR ds:[rsi]
  4039c2:	js     0x4039e4
  4039c4:	jns    0x4039e6
  4039c6:	xor    DWORD PTR [rax],esi
  4039c8:	xor    BYTE PTR [rax],dh
  4039ca:	and    BYTE PTR [rdi+0x30],dl
  4039cd:	and    BYTE PTR [rax+riz*1+0x71],bh
  4039d1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4039d4:	jbe    0x403a3b
  4039d6:	js     0x4039f8
  4039d8:	jae    0x4039fa
  4039da:	push   rcx
  4039db:	rex.WX and BYTE PTR [rax],spl
  4039de:	and    BYTE PTR [rax],ah
  4039e0:	and    BYTE PTR [rax],ah
  4039e2:	and    BYTE PTR [rax],ah
  4039e4:	and    BYTE PTR [rax],ah
  4039e6:	and    BYTE PTR [rax],ah
  4039e8:	and    BYTE PTR [rax],ah
  4039ea:	jb     0x403a4e
  4039ec:	outs   dx,DWORD PTR ds:[rsi]
  4039ed:	js     0x403a0f
  4039ef:	and    BYTE PTR fs:[rdi+0x31],al
  4039f3:	and    BYTE PTR [rcx+rsi*1+0x32],al
  4039f7:	and    BYTE PTR [rax+riz*1+0x71],bh
  4039fb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4039fe:	jbe    0x403a65
  403a00:	js     0x403a22
  403a02:	push   rcx
  403a03:	push   rdx
  403a04:	xor    BYTE PTR [rax],ah
  403a06:	rex.RX
  403a07:	and    BYTE PTR [r8+0x70],dl
  403a0b:	or     ah,BYTE PTR [rax]
  403a0d:	and    BYTE PTR [rax],ah
  403a0f:	and    BYTE PTR [rdx+0x62],dh
  403a12:	outs   dx,DWORD PTR ds:[rsi]
  403a13:	js     0x403a35
  403a15:	movsxd esp,DWORD PTR [rax]
  403a17:	rex.R (bad) 
  403a19:	and    BYTE PTR [rax+riz*1+0x71],bh
  403a1d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  403a20:	jbe    0x403a87
  403a22:	js     0x403a44
  403a24:	rex.RX
  403a25:	and    BYTE PTR [r14+rax*2+0x31],dl
  403a2a:	xor    BYTE PTR [rax],dh
  403a2c:	xor    BYTE PTR [rdx],cl
  403a2e:	or     al,BYTE PTR [rax]
	...
  403a40:	rex.RXB
  403a41:	outs   dx,DWORD PTR gs:[rsi]
  403a43:	ins    DWORD PTR es:[rdi],dx
  403a44:	jbe    0x403aaf
  403a46:	gs ja  0x403a69
  403a49:	outs   dx,DWORD PTR ds:[rsi]
  403a4a:	jne    0x403ac0
  403a4c:	jo     0x403ac3
  403a4e:	je     0x403a70
  403a50:	sub    BYTE PTR [rdx],dh
  403a52:	sub    eax,0x33202c64
  403a57:	sub    eax,0x61202c64
  403a5c:	outs   dx,BYTE PTR ds:[rsi]
  403a5d:	and    BYTE PTR fs:[rbp*1+0x200a2964],dh
  403a65:	and    BYTE PTR [rax],ah
  403a67:	and    BYTE PTR [rdi+0x61],al
  403a6a:	and    BYTE PTR [rax],ah
  403a6c:	and    BYTE PTR [rip+0x6c6c6120],ch        # 0x6cac9b92
  403a72:	and    BYTE PTR [rax+0x6f],dh
  403a75:	imul   ebp,DWORD PTR [rsi+0x74],0x73612073
  403a7c:	and    BYTE PTR [rdi+rbp*2+0x74],ah
  403a80:	jae    0x403a8c
  403a82:	and    BYTE PTR [rax],ah
  403a84:	and    BYTE PTR [rax],ah
  403a86:	and    BYTE PTR [rdi+0x70],al
  403a89:	and    BYTE PTR [rax],ah
  403a8b:	sub    eax,0x6f632020
  403a90:	jo     0x403afe
  403a92:	(bad)  
  403a93:	outs   dx,BYTE PTR ds:[rsi]
  403a94:	(bad)  
  403a95:	jb     0x403ab7
  403a97:	jo     0x403b08
  403a99:	imul   ebp,DWORD PTR [rsi+0x74],0x6e612073
  403aa0:	and    BYTE PTR fs:[rsi+0x65],dh
  403aa4:	jb     0x403b1a
  403aa6:	imul   esp,DWORD PTR [rbx+0x65],0x73612073
  403aad:	and    BYTE PTR [rdx+0x61],dh
  403ab0:	imul   ebp,DWORD PTR fs:[rcx+0xa],0x20202020
  403ab8:	and    BYTE PTR [rdi+0x76],al
  403abb:	and    BYTE PTR [rax],ah
  403abd:	sub    eax,0x65762020
  403ac2:	jb     0x403b38
  403ac4:	imul   esp,DWORD PTR [rbx+0x65],0x73612073
  403acb:	and    BYTE PTR [rbx+0x70],dh
  403ace:	push   0x73657265
  403ad3:	or     ah,BYTE PTR [rax]
  403ad5:	and    BYTE PTR [rax],ah
  403ad7:	and    BYTE PTR [rdi+0x69],al
  403ada:	and    BYTE PTR [rax],ah
  403adc:	and    BYTE PTR [rip+0x6e6e6920],ch        # 0x6eaea402
  403ae2:	gs jb  0x403b05
  403ae5:	jo     0x403b53
  403ae7:	(bad)  
  403ae8:	outs   dx,BYTE PTR ds:[rsi]
  403ae9:	gs jae 0x403b0c
  403aec:	outs   dx,DWORD PTR ds:[rsi]
  403aed:	outs   dx,BYTE PTR ds:[rsi]
  403aee:	ins    BYTE PTR es:[rdi],dx
  403aef:	jns    0x403afb
  403af1:	and    BYTE PTR [rax],ah
  403af3:	and    BYTE PTR [rax],ah
  403af5:	and    BYTE PTR [rdi+0x6e],al
  403af8:	and    BYTE PTR [rax],ah
  403afa:	sub    eax,0x6f6e2020
  403aff:	and    BYTE PTR [rax+0x6c],dh
  403b02:	(bad)  
  403b03:	outs   dx,BYTE PTR ds:[rsi]
  403b04:	gs jae 0x403b11
  403b07:	and    BYTE PTR [rax],ah
  403b09:	and    BYTE PTR [rax],ah
  403b0b:	and    BYTE PTR [rdi+0x6f],al
  403b0e:	and    BYTE PTR [rax],ah
  403b10:	sub    eax,0x756f2020
  403b15:	je     0x403b7c
  403b17:	jb     0x403b39
  403b19:	jo     0x403b87
  403b1b:	(bad)  
  403b1c:	outs   dx,BYTE PTR ds:[rsi]
  403b1d:	gs jae 0x403b40
  403b20:	outs   dx,DWORD PTR ds:[rsi]
  403b21:	outs   dx,BYTE PTR ds:[rsi]
  403b22:	ins    BYTE PTR es:[rdi],dx
  403b23:	jns    0x403b2f
  403b25:	and    BYTE PTR [rax],ah
  403b27:	and    BYTE PTR [rax],ah
  403b29:	rex.RXB movsxd r12d,DWORD PTR [r8]
  403b2c:	and    BYTE PTR [rax],ah
  403b2e:	sub    eax,0x6e656320
  403b33:	je     0x403ba7
  403b35:	jne    0x403ba4
  403b37:	jae    0x403b43
  403b39:	and    BYTE PTR [rax],ah
  403b3b:	and    BYTE PTR [rax],ah
  403b3d:	rex.RXB push 0x2d202020
  403b43:	and    BYTE PTR [rax+0x79],ch
  403b46:	jo     0x403bad
  403b48:	jb     0x403bba
  403b4a:	ins    BYTE PTR es:[rdi],dx
  403b4b:	(bad)  
  403b4c:	outs   dx,BYTE PTR ds:[rsi]
  403b4d:	and    BYTE PTR gs:[rcx+0x6e],ch
  403b51:	je     0x403bb8
  403b53:	jb     0x403bc8
  403b55:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  403b5a:	outs   dx,BYTE PTR ds:[rsi]
  403b5b:	jae    0x403b67
  403b5d:	and    BYTE PTR [rax],ah
  403b5f:	and    BYTE PTR [rax],ah
  403b61:	rex.RXB jb 0x403b84
  403b64:	and    BYTE PTR [rax],ah
  403b66:	sub    eax,0x64697220
  403b6b:	addr32 gs jae 0x403b79
  403b6f:	and    BYTE PTR [rax],ah
  403b71:	and    BYTE PTR [rax],ah
  403b73:	rex.RXB
  403b74:	rex.R outs dx,BYTE PTR ds:[rsi]
  403b76:	and    BYTE PTR [rax],ah
  403b78:	sub    eax,0x6f726420
  403b7d:	jo     0x403b9f
  403b7f:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  403b87:	outs   dx,BYTE PTR ds:[rsi]
  403b88:	and    BYTE PTR [rsi+0x20],ch
  403b8b:	imul   ebp,DWORD PTR [rsi+0x20],0x20642d33
  403b92:	(bad)  
  403b93:	outs   dx,BYTE PTR ds:[rsi]
  403b94:	and    BYTE PTR fs:[rbp*1+0x756f2064],dh
  403b9c:	je     0x403c0e
  403b9e:	jne    0x403c14
  403ba0:	or     cl,BYTE PTR [rdx]
  403ba2:	push   rax
  403ba3:	jb     0x403c0e
  403ba5:	outs   dx,BYTE PTR ds:[rsi]
  403ba6:	je     0x403bc8
  403ba8:	outs   dx,DWORD PTR ds:[rsi]
  403ba9:	jo     0x403c1f
  403bab:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  403bb2:	and    BYTE PTR [rax],ah
  403bb4:	and    BYTE PTR [rax+0x41],dl
  403bb7:	outs   dx,BYTE PTR ds:[rsi]
  403bb8:	and    BYTE PTR [rax],ah
  403bba:	sub    eax,0x65656b20
  403bbf:	jo     0x403be1
  403bc1:	outs   dx,BYTE PTR ds:[rsi]
  403bc2:	and    BYTE PTR [rcx+riz*2+0x72],ch
  403bc6:	addr32 gs jae 0x403c3e
  403bca:	and    BYTE PTR [rsi+0x61],ah
  403bcd:	movsxd esp,DWORD PTR [rbp+0x74]
  403bd0:	jae    0x403bf2
  403bd2:	(bad)  
  403bd3:	jns    0x403bf5
  403bd5:	(bad)  
  403bd6:	jb     0x403c3d
  403bd8:	(bad)  
  403bd9:	or     ah,BYTE PTR [rax]
  403bdb:	and    BYTE PTR [rax],ah
  403bdd:	and    BYTE PTR [rax+0x64],dl
  403be0:	imul   edi,DWORD PTR [rdx],0x6e
  403be3:	and    BYTE PTR [rip+0x6f726420],ch        # 0x6fb2a009
  403be9:	jo     0x403c0b
  403beb:	data16 (bad) 
  403bed:	movsxd esp,DWORD PTR [rbp+0x74]
  403bf0:	and    BYTE PTR [rcx+0x66],ch
  403bf3:	and    BYTE PTR [rsi+0x6f],ch
  403bf6:	jb     0x403c65
  403bf8:	(bad)  
  403bf9:	ins    BYTE PTR es:[rdi],dx
  403bfa:	pop    rbx
  403bfb:	imul   ebx,DWORD PTR [rbp+0x20],0x3c
  403bff:	cmp    eax,0x28206e20
  403c04:	fs gs data16 (bad) 
  403c08:	jne    0x403c76
  403c0a:	je     0x403c2c
  403c0c:	xor    BYTE PTR [rsi],ch
  403c0e:	xor    BYTE PTR [rcx],ch
  403c10:	or     ah,BYTE PTR [rax]
  403c12:	and    BYTE PTR [rax],ah
  403c14:	and    BYTE PTR [rax+0x44],dl
  403c17:	imul   edi,DWORD PTR [rdx],0x6e
  403c1a:	and    BYTE PTR [rip+0x6f726420],ch        # 0x6fb2a040
  403c20:	jo     0x403c42
  403c22:	data16 (bad) 
  403c24:	movsxd esp,DWORD PTR [rbp+0x74]
  403c27:	and    BYTE PTR [rcx+0x66],ch
  403c2a:	and    BYTE PTR [rsi+0x6f],ch
  403c2d:	jb     0x403c9c
  403c2f:	(bad)  
  403c30:	ins    BYTE PTR es:[rdi],dx
  403c31:	pop    rbx
  403c32:	imul   ebx,DWORD PTR [rbp+0x20],0x3e
  403c36:	cmp    eax,0x200a6e20
  403c3b:	and    BYTE PTR [rax],ah
  403c3d:	and    BYTE PTR [rax+0x67],dl
  403c40:	and    BYTE PTR [rax],ah
  403c42:	and    BYTE PTR [rip+0x69727020],ch        # 0x69b2ac68
  403c48:	outs   dx,BYTE PTR ds:[rsi]
  403c49:	je     0x403c6b
  403c4b:	outs   dx,DWORD PTR ds:[esi]
  403c4d:	outs   dx,DWORD PTR ds:[rsi]
  403c4e:	and    BYTE PTR fs:[rsi+0x61],ah
  403c52:	movsxd esp,DWORD PTR [rbp+0x74]
  403c55:	jae    0x403c77
  403c57:	sub    BYTE PTR [rsi+0x65],ch
  403c5a:	gs fs jae 0x403c7e
  403c5e:	(bad)  
  403c5f:	push   rcx
  403c60:	rex.RXB outs dx,BYTE PTR ds:[rsi]
  403c62:	(bad)  
  403c63:	and    BYTE PTR [rdi+0x72],ch
  403c66:	and    BYTE PTR [rdi],ah
  403c68:	push   rcx
  403c69:	push   rsi
  403c6a:	outs   dx,BYTE PTR ds:[rsi]
  403c6b:	(bad)  
  403c6c:	sub    DWORD PTR [rdx],ecx
  403c6e:	and    BYTE PTR [rax],ah
  403c70:	and    BYTE PTR [rax],ah
  403c72:	push   rax
  403c73:	rex.RX outs dx,BYTE PTR ds:[rsi]
  403c75:	and    BYTE PTR [rax],ah
  403c77:	sub    eax,0x65656b20
  403c7c:	jo     0x403c9e
  403c7e:	data16 (bad) 
  403c80:	movsxd esp,DWORD PTR [rbp+0x74]
  403c83:	jae    0x403ca5
  403c85:	ja     0x403cef
  403c87:	outs   dx,DWORD PTR ds:[rsi]
  403c88:	jae    0x403cef
  403c8a:	and    BYTE PTR [rcx+0x72],ah
  403c8d:	gs (bad) 
  403c8f:	and    BYTE PTR [rcx+0x73],ch
  403c92:	and    BYTE PTR [rcx+0x74],ah
  403c95:	and    BYTE PTR [rbp+riz*2+0x61],ch
  403c99:	jae    0x403d0f
  403c9b:	and    BYTE PTR [rsi+0xa],ch
  403c9e:	and    BYTE PTR [rax],ah
  403ca0:	and    BYTE PTR [rax],ah
  403ca2:	push   rax
  403ca3:	rex.RXB and BYTE PTR [r8],r12b
  403ca6:	and    BYTE PTR [rip+0x69727020],ch        # 0x69b2accc
  403cac:	outs   dx,BYTE PTR ds:[rsi]
  403cad:	je     0x403ccf
  403caf:	outs   dx,BYTE PTR ds:[rsi]
  403cb0:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  403cb8:	and    BYTE PTR [rdi+0x66],ch
  403cbb:	and    BYTE PTR [rdi+0x6f],ah
  403cbe:	outs   dx,DWORD PTR ds:[rsi]
  403cbf:	and    BYTE PTR fs:[rsi+0x61],ah
  403cc3:	movsxd esp,DWORD PTR [rbp+0x74]
  403cc6:	jae    0x403cd2
  403cc8:	and    BYTE PTR [rax],ah
  403cca:	and    BYTE PTR [rax],ah
  403ccc:	push   rax
  403ccd:	rex.WRB outs dx,BYTE PTR ds:[rsi]
  403ccf:	and    BYTE PTR [rax],ah
  403cd1:	sub    eax,0x65656b20
  403cd6:	jo     0x403cf8
  403cd8:	outs   dx,BYTE PTR ds:[rsi]
  403cd9:	and    BYTE PTR [rsi+0x61],ah
  403cdc:	movsxd esp,DWORD PTR [rbp+0x74]
  403cdf:	jae    0x403d01
  403ce1:	ja     0x403d4c
  403ce3:	je     0x403d4d
  403ce5:	and    BYTE PTR [rbp+0x6f],ch
  403ce8:	jae    0x403d5e
  403cea:	and    BYTE PTR [rbp+0x65],ch
  403ced:	jb     0x403d56
  403cef:	gs jae 0x403cfc
  403cf2:	and    BYTE PTR [rax],ah
  403cf4:	and    BYTE PTR [rax],ah
  403cf6:	push   rax
  403cf7:	outs   dx,DWORD PTR ds:[rsi]
  403cf8:	and    BYTE PTR [rax],ah
  403cfa:	and    BYTE PTR [rip+0x726f6620],ch        # 0x72afa320
  403d00:	movsxd esp,DWORD PTR [rbp+0x20]
  403d03:	outs   dx,DWORD PTR ds:[rsi]
  403d04:	jne    0x403d7a
  403d06:	jo     0x403d7d
  403d08:	je     0x403d38
  403d0a:	and    BYTE PTR [rax],ah
  403d0c:	rex.WB
  403d0d:	data16 and BYTE PTR [rbp+0x72],ah
  403d11:	jb     0x403d82
  403d13:	jb     0x403d41
  403d15:	and    BYTE PTR [rdi+0x75],ch
  403d18:	je     0x403d8a
  403d1a:	jne    0x403d90
  403d1c:	and    BYTE PTR [rsi+0x65],ch
  403d1f:	imul   esp,DWORD PTR [rdi+0x68],0x68726f62
  403d26:	outs   dx,DWORD PTR ds:[rsi]
  403d27:	outs   dx,DWORD PTR ds:[rsi]
  403d28:	and    BYTE PTR fs:[rdi+0x66],ch
  403d2c:	and    BYTE PTR [rsi+0x61],ah
  403d2f:	movsxd esp,DWORD PTR [rbp+0x74]
  403d32:	or     ah,BYTE PTR [rax]
  403d34:	and    BYTE PTR [rax],ah
  403d36:	and    BYTE PTR [rax+0x70],dl
  403d39:	and    BYTE PTR [rax],ah
  403d3b:	and    BYTE PTR [rip+0x206f6420],ch        # 0x20afa161
  403d41:	outs   dx,BYTE PTR ds:[rsi]
  403d42:	outs   dx,DWORD PTR ds:[rsi]
  403d43:	je     0x403d65
  403d45:	jb     0x403dac
  403d47:	jo     0x403db8
  403d49:	jb     0x403dbf
  403d4b:	and    BYTE PTR [rax+0x72],dh
  403d4e:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  403d52:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  403d59:	(bad)  
  403d5a:	ins    BYTE PTR es:[rdi],dx
  403d5b:	gs ins DWORD PTR es:[rdi],dx
  403d5d:	jae    0x403d69
  403d5f:	or     ah,BYTE PTR [rax]
  403d61:	and    BYTE PTR [rax],ah
  403d63:	and    BYTE PTR [rsi],ch
  403d65:	and    BYTE PTR [rax],ah
  403d67:	and    BYTE PTR [rax],ah
  403d69:	sub    eax,0x73696c20
  403d6e:	je     0x403d90
  403d70:	outs   dx,DWORD PTR ds:[rsi]
  403d71:	data16 and BYTE PTR [rcx+0x6c],ah
  403d75:	ins    BYTE PTR es:[rdi],dx
  403d76:	and    BYTE PTR [rdi+0x70],ch
  403d79:	je     0x403de4
  403d7b:	outs   dx,DWORD PTR ds:[rsi]
  403d7c:	outs   dx,BYTE PTR ds:[rsi]
  403d7d:	jae    0x403d89
  403d7f:	and    BYTE PTR [rax],ah
  403d81:	and    BYTE PTR [rax],ah
  403d83:	sub    eax,0x20202020
  403d88:	sub    eax,0x656e6f20
  403d8d:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  403d91:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
  403d96:	movsxd esi,DWORD PTR [rdx+0x69]
  403d99:	jo     0x403e0f
  403d9b:	imul   ebp,DWORD PTR [rdi+0x6e],0x666f2073
  403da2:	and    BYTE PTR [rcx+0x6c],ah
  403da5:	ins    BYTE PTR es:[rdi],dx
  403da6:	and    BYTE PTR [rdi+0x70],ch
  403da9:	je     0x403e14
  403dab:	outs   dx,DWORD PTR ds:[rsi]
  403dac:	outs   dx,BYTE PTR ds:[rsi]
  403dad:	jae    0x403db9
	...
  403dbf:	add    BYTE PTR [rbp+0x6f],cl
  403dc2:	jb     0x403e29
  403dc4:	and    BYTE PTR [rsi+0x6f],ah
  403dc7:	jb     0x403e36
  403dc9:	(bad)  
  403dca:	je     0x403e3f
  403dcc:	cmp    cl,BYTE PTR [rdx]
  403dce:	and    BYTE PTR [rax],ah
  403dd0:	and    BYTE PTR [rax],ah
  403dd2:	rex.RX (bad) 
  403dd4:	and    BYTE PTR [rax],ah
  403dd6:	and    BYTE PTR [rip+0x65726120],ch        # 0x65b29efc
  403ddc:	(bad)  
  403ddd:	and    BYTE PTR [rsi+0x6f],ah
  403de0:	jb     0x403e02
  403de2:	gs (bad) 
  403de4:	movsxd ebp,DWORD PTR [rax+0x20]
  403de7:	data16 (bad) 
  403de9:	movsxd esp,DWORD PTR [rbp+0x74]
  403dec:	or     ah,BYTE PTR [rax]
  403dee:	and    BYTE PTR [rax],ah
  403df0:	and    BYTE PTR [rsi+0x41],al
  403df3:	and    BYTE PTR [rax],ah
  403df5:	and    BYTE PTR [rip+0x6d6f6320],ch        # 0x6dafa11b
  403dfb:	jo     0x403e72
  403dfd:	je     0x403e64
  403dff:	and    BYTE PTR [rdi+rbp*2+0x74],dh
  403e03:	(bad)  
  403e04:	ins    BYTE PTR es:[rdi],dx
  403e05:	and    BYTE PTR [rcx+0x72],ah
  403e08:	gs (bad) 
  403e0a:	and    BYTE PTR [rcx+0x6e],ah
  403e0d:	and    BYTE PTR fs:[rsi+0x6f],dh
  403e11:	ins    BYTE PTR es:[rdi],dx
  403e12:	jne    0x403e81
  403e14:	and    BYTE PTR gs:[rsi+0x6f],ah
  403e18:	jb     0x403e3a
  403e1a:	outs   dx,DWORD PTR ds:[rsi]
  403e1b:	jo     0x403e91
  403e1d:	imul   ebp,DWORD PTR [rdi+0x6e],0x27732720
  403e24:	or     ah,BYTE PTR [rax]
  403e26:	and    BYTE PTR [rax],ah
  403e28:	and    BYTE PTR [rsi+0x63],al
  403e2b:	and    BYTE PTR [rax],ah
  403e2d:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afa153
  403e33:	outs   dx,BYTE PTR ds:[rsi]
  403e34:	je     0x403e56
  403e36:	jo     0x403ea4
  403e38:	jne    0x403ead
  403e3a:	and    BYTE PTR [rbx+0x6f],ah
  403e3d:	jo     0x403eab
  403e3f:	(bad)  
  403e40:	outs   dx,BYTE PTR ds:[rsi]
  403e41:	(bad)  
  403e42:	jb     0x403e64
  403e44:	jo     0x403eb5
  403e46:	imul   ebp,DWORD PTR [rsi+0x74],0x6f662073
  403e4d:	jb     0x403e6f
  403e4f:	gs (bad) 
  403e51:	movsxd ebp,DWORD PTR [rax+0x20]
  403e54:	data16 (bad) 
  403e56:	movsxd esp,DWORD PTR [rbp+0x74]
  403e59:	or     ah,BYTE PTR [rax]
  403e5b:	and    BYTE PTR [rax],ah
  403e5d:	and    BYTE PTR [rax],ah
  403e5f:	and    BYTE PTR [rax],ah
  403e61:	and    BYTE PTR [rax],ah
  403e63:	and    BYTE PTR [rax],ah
  403e65:	jne    0x403eda
  403e67:	and    BYTE PTR gs:[rdi],ah
  403e6a:	push   rcx
  403e6b:	movsxd esp,DWORD PTR [rdi]
  403e6d:	and    BYTE PTR [rax],ch
  403e6f:	fs gs data16 (bad) 
  403e73:	jne    0x403ee1
  403e75:	je     0x403ea0
  403e77:	and    BYTE PTR [rsi+0x6f],ah
  403e7a:	jb     0x403e9c
  403e7c:	movsxd ebp,DWORD PTR [rdi+0x70]
  403e7f:	ins    BYTE PTR es:[rdi],dx
  403e80:	(bad)  
  403e81:	outs   dx,BYTE PTR ds:[rsi]
  403e82:	(bad)  
  403e83:	jb     0x403ea5
  403e85:	(bad)  
  403e86:	outs   dx,BYTE PTR ds:[rsi]
  403e87:	and    BYTE PTR fs:[rdi],ah
  403e8a:	push   rcx
  403e8b:	imul   esp,DWORD PTR [rdi],0x726f6620
  403e91:	and    BYTE PTR [rcx+0x6e],ch
  403e94:	je     0x403efb
  403e96:	jb     0x403f01
  403e98:	outs   dx,DWORD PTR ds:[rsi]
  403e99:	jb     0x403ea5
  403e9b:	and    BYTE PTR [rax],ah
  403e9d:	and    BYTE PTR [rax],ah
  403e9f:	rex.RX
  403ea0:	rex.XB and BYTE PTR [r8],spl
  403ea3:	and    BYTE PTR [rip+0x6e656320],ch        # 0x6ea5a1c9
  403ea9:	je     0x403f1d
  403eab:	jne    0x403f1a
  403ead:	and    BYTE PTR [rsi+0x6f],ah
  403eb0:	jb     0x403ed2
  403eb2:	gs (bad) 
  403eb4:	movsxd ebp,DWORD PTR [rax+0x20]
  403eb7:	data16 (bad) 
  403eb9:	movsxd esp,DWORD PTR [rbp+0x74]
  403ebc:	or     ah,BYTE PTR [rax]
  403ebe:	and    BYTE PTR [rax],ah
  403ec0:	and    BYTE PTR [rsi+0x64],al
  403ec3:	and    BYTE PTR [rax],ah
  403ec5:	and    BYTE PTR [rip+0x65737520],ch        # 0x65b3b3eb
  403ecb:	and    BYTE PTR [rbx+0x64],ah
  403ece:	and    BYTE PTR fs:[rsi+0x6f],ah
  403ed2:	jb     0x403f41
  403ed4:	(bad)  
  403ed5:	je     0x403ef7
  403ed7:	outs   dx,WORD PTR ds:[rsi]
  403ed9:	jb     0x403efb
  403edb:	imul   ebp,DWORD PTR [rsi+0x70],0x28207475
  403ee2:	push   0x676f6d6f
  403ee7:	outs   dx,BYTE PTR gs:[rsi]
  403ee9:	outs   dx,DWORD PTR gs:[rsi]
  403eeb:	jne    0x403f60
  403eed:	and    BYTE PTR [rdi+0x69],dh
  403ef0:	je     0x403f5a
  403ef2:	and    BYTE PTR [rdi+0x66],ch
  403ef5:	data16 jae 0x403f5d
  403ef8:	je     0x403f1a
  403efa:	imul   si,WORD PTR [rdx+0x73],0x2974
  403f00:	or     ah,BYTE PTR [rax]
  403f02:	and    BYTE PTR [rax],ah
  403f04:	and    BYTE PTR [rsi+0x44],al
  403f07:	and    BYTE PTR [rax],ah
  403f09:	and    BYTE PTR [rip+0x65737520],ch        # 0x65b3b42f
  403f0f:	and    BYTE PTR [rbx+0x64],ah
  403f12:	and    BYTE PTR fs:[rsi+0x6f],ah
  403f16:	jb     0x403f85
  403f18:	(bad)  
  403f19:	je     0x403f3b
  403f1b:	outs   dx,WORD PTR ds:[rsi]
  403f1d:	jb     0x403f3f
  403f1f:	outs   dx,BYTE PTR ds:[rsi]
  403f20:	jne    0x403f8f
  403f22:	gs jb  0x403f8e
  403f25:	movsxd esp,DWORD PTR [rax]
  403f27:	outs   dx,DWORD PTR ds:[rsi]
  403f28:	jne    0x403f9e
  403f2a:	jo     0x403fa1
  403f2c:	je     0x403f4e
  403f2e:	sub    BYTE PTR [rdi+0x66],ch
  403f31:	data16 jae 0x403f99
  403f34:	je     0x403f56
  403f36:	imul   si,WORD PTR [rdx+0x73],0x2974
  403f3c:	or     ah,BYTE PTR [rax]
  403f3e:	and    BYTE PTR [rax],ah
  403f40:	and    BYTE PTR [rsi+0x46],al
  403f43:	and    BYTE PTR [rax],ah
  403f45:	and    BYTE PTR [rip+0x63616620],ch        # 0x63a1a56b
  403f4b:	gs je  0x403f6e
  403f4e:	fs jne 0x403fbe
  403f51:	jo     0x403f73
  403f53:	ja     0x403fbe
  403f55:	je     0x403fbf
  403f57:	outs   dx,DWORD PTR ds:[rsi]
  403f58:	jne    0x403fce
  403f5a:	and    BYTE PTR [rdx+0x69],dh
  403f5d:	fs addr32 gs jae 0x403f6c
  403f62:	and    BYTE PTR [rax],ah
  403f64:	and    BYTE PTR [rax],ah
  403f66:	rex.RX imul r12d,DWORD PTR [rax],0x202d2020
  403f6d:	imul   ebp,DWORD PTR [rsi+0x6e],0x70207265
  403f74:	ins    BYTE PTR es:[rdi],dx
  403f75:	(bad)  
  403f76:	outs   dx,BYTE PTR ds:[rsi]
  403f77:	and    BYTE PTR gs:[rsi+0x6f],ah
  403f7b:	jb     0x403f9d
  403f7d:	gs (bad) 
  403f7f:	movsxd ebp,DWORD PTR [rax+0x20]
  403f82:	data16 (bad) 
  403f84:	movsxd esp,DWORD PTR [rbp+0x74]
  403f87:	or     ah,BYTE PTR [rax]
  403f89:	and    BYTE PTR [rax],ah
  403f8b:	and    BYTE PTR [rsi+0x49],al
  403f8e:	and    BYTE PTR [rax],ah
  403f90:	and    BYTE PTR [rip+0x20444920],ch        # 0x208488b6
  403f96:	outs   dx,WORD PTR ds:[rsi]
  403f98:	jb     0x403fba
  403f9a:	gs (bad) 
  403f9c:	movsxd ebp,DWORD PTR [rax+0x20]
  403f9f:	data16 (bad) 
  403fa1:	movsxd esp,DWORD PTR [rbp+0x74]
  403fa4:	or     ah,BYTE PTR [rax]
  403fa6:	and    BYTE PTR [rax],ah
  403fa8:	and    BYTE PTR [rsi+0x6d],al
  403fab:	and    BYTE PTR [rax],ah
  403fad:	and    BYTE PTR [rip+0x72656d20],ch        # 0x72a5acd3
  403fb3:	and    BYTE PTR gs:[ebx+0x6f],ah
  403fb8:	jne    0x404028
  403fba:	je     0x403fdc
  403fbc:	outs   dx,WORD PTR ds:[rsi]
  403fbe:	jb     0x403fe0
  403fc0:	gs (bad) 
  403fc2:	movsxd ebp,DWORD PTR [rax+0x20]
  403fc5:	data16 (bad) 
  403fc7:	movsxd esp,DWORD PTR [rbp+0x74]
  403fca:	and    BYTE PTR [rax],ch
  403fcc:	xor    eax,0x6d203131
  403fd1:	(bad)  
  403fd2:	js     0x403ffd
  403fd4:	or     ah,BYTE PTR [rax]
  403fd6:	and    BYTE PTR [rax],ah
  403fd8:	and    BYTE PTR [rsi+0x6e],al
  403fdb:	and    BYTE PTR [rax],ah
  403fdd:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afa303
  403fe3:	outs   dx,BYTE PTR ds:[rsi]
  403fe4:	je     0x404006
  403fe6:	jo     0x404054
  403fe8:	jne    0x40405d
  403fea:	and    BYTE PTR [rsi+0x65],ch
  403fed:	imul   esp,DWORD PTR [rdi+0x68],0x69726f62
  403ff4:	outs   dx,BYTE PTR ds:[rsi]
  403ff5:	and    BYTE PTR [esi+0x61],ah
  403ff9:	movsxd esp,DWORD PTR [rbp+0x74]
  403ffc:	jae    0x40401e
  403ffe:	outs   dx,WORD PTR ds:[rsi]
  404000:	jb     0x404022
  404002:	gs (bad) 
  404004:	movsxd ebp,DWORD PTR [rax+0x20]
  404007:	data16 (bad) 
  404009:	movsxd esp,DWORD PTR [rbp+0x74]
  40400c:	or     ah,BYTE PTR [rax]
  40400e:	and    BYTE PTR [rax],ah
  404010:	and    BYTE PTR [rsi+0x4e],al
  404013:	and    BYTE PTR [rax],ah
  404015:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afa33b
  40401b:	outs   dx,BYTE PTR ds:[rsi]
  40401c:	je     0x40403e
  40401e:	jo     0x40408c
  404020:	jne    0x404095
  404022:	and    BYTE PTR [rsi+0x65],ch
  404025:	imul   esp,DWORD PTR [rdi+0x68],0x69726f62
  40402c:	outs   dx,BYTE PTR ds:[rsi]
  40402d:	and    BYTE PTR [esi+0x61],ah
  404031:	movsxd esp,DWORD PTR [rbp+0x74]
  404034:	jae    0x404056
  404036:	outs   dx,WORD PTR ds:[rsi]
  404038:	jb     0x40405a
  40403a:	gs (bad) 
  40403c:	movsxd ebp,DWORD PTR [rax+0x20]
  40403f:	jo     0x4040b0
  404041:	imul   ebp,DWORD PTR [rsi+0x74],0x2020200a
  404048:	and    BYTE PTR [rsi+0x6f],al
  40404b:	and    BYTE PTR [rax],ah
  40404d:	and    BYTE PTR [rip+0x74756f20],ch        # 0x74b5af73
  404053:	gs jb  0x404076
  404056:	jo     0x4040c4
  404058:	(bad)  
  404059:	outs   dx,BYTE PTR ds:[rsi]
  40405a:	and    BYTE PTR gs:[rax],ch
  40405d:	outs   dx,DWORD PTR ds:[rsi]
  40405e:	jb     0x404080
  404060:	ins    DWORD PTR es:[rdi],dx
  404061:	(bad)  
  404062:	js     0x4040c3
  404064:	outs   dx,DWORD PTR ds:[rsi]
  404065:	jne    0x4040db
  404067:	jae    0x4040d2
  404069:	fs sub DWORD PTR gs:[rax],esp
  40406d:	outs   dx,WORD PTR ds:[rsi]
  40406f:	jb     0x404091
  404071:	gs (bad) 
  404073:	movsxd ebp,DWORD PTR [rax+0x20]
  404076:	data16 (bad) 
  404078:	movsxd esp,DWORD PTR [rbp+0x74]
  40407b:	or     ah,BYTE PTR [rax]
  40407d:	and    BYTE PTR [rax],ah
  40407f:	and    BYTE PTR [rsi+0x4f],al
  404082:	and    BYTE PTR [rax],ah
  404084:	and    BYTE PTR [rip+0x74706f20],ch        # 0x74b0afaa
  40408a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e612073
  404091:	and    BYTE PTR fs:[rax+0x72],dh
  404095:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  404099:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
  4040a0:	jae    0x404116
  4040a2:	(bad)  
  4040a3:	outs   dx,BYTE PTR ds:[rsi]
  4040a4:	je     0x404119
  4040a6:	or     ah,BYTE PTR [rax]
  4040a8:	and    BYTE PTR [rax],ah
  4040aa:	and    BYTE PTR [rsi+0x50],al
  4040ad:	and    BYTE PTR [rax],ah
  4040af:	and    BYTE PTR [rip+0x61656e20],ch        # 0x61a5aed5
  4040b5:	jb     0x40411c
  4040b7:	jae    0x40412d
  4040b9:	and    BYTE PTR [rsi+0x65],dh
  4040bc:	jb     0x404132
  4040be:	gs js  0x4040e1
  4040c1:	outs   dx,WORD PTR ds:[rsi]
  4040c3:	jb     0x4040e5
  4040c5:	gs (bad) 
  4040c7:	movsxd ebp,DWORD PTR [rax+0x20]
  4040ca:	movsxd ebp,DWORD PTR [rdi+0x70]
  4040cd:	ins    BYTE PTR es:[rdi],dx
  4040ce:	(bad)  
  4040cf:	outs   dx,BYTE PTR ds:[rsi]
  4040d0:	(bad)  
  4040d1:	jb     0x4040f3
  4040d3:	jo     0x404144
  4040d5:	imul   ebp,DWORD PTR [rsi+0x74],0x2020200a
  4040dc:	and    BYTE PTR [rsi+0x51],al
  4040df:	and    BYTE PTR [rax],ah
  4040e1:	and    BYTE PTR [rip+0x6d6f6320],ch        # 0x6dafa407
  4040e7:	ins    DWORD PTR es:[rdi],dx
  4040e8:	(bad)  
  4040e9:	outs   dx,BYTE PTR ds:[rsi]
  4040ea:	and    BYTE PTR fs:[rbp+0x73],dh
  4040ee:	gs and BYTE PTR fs:[rsi+0x6f],ah
  4040f3:	jb     0x404115
  4040f5:	jno    0x40415a
  4040f7:	outs   dx,DWORD PTR ds:[rsi]
  4040f8:	outs   dx,BYTE PTR ds:[rsi]
  4040f9:	jbe    0x404160
  4040fb:	js     0x404107
  4040fd:	and    BYTE PTR [rax],ah
  4040ff:	and    BYTE PTR [rax],ah
  404101:	rex.RX jae 0x404124
  404104:	and    BYTE PTR [rax],ah
  404106:	sub    eax,0x6d757320
  40410b:	ins    DWORD PTR es:[rdi],dx
  40410c:	(bad)  
  40410d:	jb     0x404188
  40410f:	cmp    ah,BYTE PTR [rax]
  404111:	and    ebp,DWORD PTR [rcx+0x6e]
  404114:	je     0x404136
  404116:	sub    BYTE PTR [rax],bh
  404118:	sub    DWORD PTR [rax+riz*1],ebp
  40411b:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  404123:	outs   dx,BYTE PTR ds:[rsi]
  404124:	sub    al,0x20
  404126:	and    esi,DWORD PTR [rax+0x6f]
  404129:	imul   ebp,DWORD PTR [rsi+0x74],0x74202c73
  404130:	outs   dx,DWORD PTR ds:[rsi]
  404131:	je     0x404153
  404133:	jbe    0x40419a
  404135:	jb     0x4041ab
  404137:	imul   esp,DWORD PTR [rbx+0x65],0x74202c73
  40413e:	outs   dx,DWORD PTR ds:[rsi]
  40413f:	je     0x404161
  404141:	data16 (bad) 
  404143:	movsxd esp,DWORD PTR [rbp+0x74]
  404146:	jae    0x404174
  404148:	or     ah,BYTE PTR [rax]
  40414a:	and    BYTE PTR [rax],ah
  40414c:	and    BYTE PTR [rax],ah
  40414e:	and    BYTE PTR [rax],ah
  404150:	and    BYTE PTR [rax],ah
  404152:	and    BYTE PTR [rax],ah
  404154:	and    BYTE PTR [rax],ah
  404156:	and    BYTE PTR [rax],ah
  404158:	and    BYTE PTR [rax],ah
  40415a:	and    BYTE PTR [rax],ah
  40415c:	and    BYTE PTR [rax],ah
  40415e:	and    BYTE PTR [rsi+0x6f],ah
  404161:	jb     0x404183
  404163:	outs   dx,DWORD PTR ds:[rsi]
  404164:	jne    0x4041da
  404166:	jo     0x4041dd
  404168:	je     0x4041a4
  40416a:	and    BYTE PTR [rbx],ah
  40416c:	jbe    0x4041d3
  40416e:	jb     0x4041e4
  404170:	imul   esp,DWORD PTR [rbx+0x65],0x23202c73
  404177:	data16 (bad) 
  404179:	movsxd esp,DWORD PTR [rbp+0x74]
  40417c:	jae    0x4041aa
  40417e:	or     ah,BYTE PTR [rax]
  404180:	and    BYTE PTR [rax],ah
  404182:	and    BYTE PTR [rax],ah
  404184:	and    BYTE PTR [rax],ah
  404186:	and    BYTE PTR [rax],ah
  404188:	and    BYTE PTR [rax],ah
  40418a:	and    BYTE PTR [rax],ah
  40418c:	and    BYTE PTR [rax],ah
  40418e:	and    BYTE PTR [rax],ah
  404190:	and    BYTE PTR [rax],ah
  404192:	and    BYTE PTR [rax],ah
  404194:	and    BYTE PTR [rax],ah
  404196:	and    BYTE PTR [rax],ah
  404198:	and    BYTE PTR [rax],ah
  40419a:	and    BYTE PTR [rax],ah
  40419c:	and    BYTE PTR [rax],ah
  40419e:	and    BYTE PTR [rax],ah
  4041a0:	and    BYTE PTR [rbx],ah
  4041a2:	movsxd ebp,DWORD PTR [rdi+0x70]
  4041a5:	ins    BYTE PTR es:[rdi],dx
  4041a6:	(bad)  
  4041a7:	outs   dx,BYTE PTR ds:[rsi]
  4041a8:	(bad)  
  4041a9:	jb     0x4041cb
  4041ab:	jo     0x40421c
  4041ad:	imul   ebp,DWORD PTR [rsi+0x74],0x23202c73
  4041b4:	outs   dx,BYTE PTR ds:[rsi]
  4041b5:	outs   dx,DWORD PTR ds:[rsi]
  4041b6:	outs   dx,BYTE PTR ds:[rsi]
  4041b7:	sub    eax,0x706d6973
  4041bc:	ins    BYTE PTR es:[rdi],dx
  4041bd:	imul   esp,DWORD PTR [rbx+0x69],0x66206c61
  4041c4:	(bad)  
  4041c5:	movsxd esp,DWORD PTR [rbp+0x74]
  4041c8:	jae    0x4041d4
  4041ca:	and    BYTE PTR [rax],ah
  4041cc:	and    BYTE PTR [rax],ah
  4041ce:	and    BYTE PTR [rax],ah
  4041d0:	and    BYTE PTR [rax],ah
  4041d2:	and    BYTE PTR [rax],ah
  4041d4:	and    BYTE PTR [rax],ah
  4041d6:	and    BYTE PTR [rax],ah
  4041d8:	and    BYTE PTR [rax],ah
  4041da:	and    BYTE PTR [rax],ah
  4041dc:	and    BYTE PTR [rax],ah
  4041de:	and    esi,DWORD PTR [rdx+0x65]
  4041e1:	(bad)  
  4041e2:	ins    BYTE PTR es:[rdi],dx
  4041e3:	and    BYTE PTR [rax],ch
  4041e5:	xor    ch,BYTE PTR [rcx]
  4041e7:	sub    al,0x20
  4041e9:	ins    DWORD PTR es:[rdi],dx
  4041ea:	(bad)  
  4041eb:	js     0x40420d
  4041ed:	outs   dx,DWORD PTR ds:[rsi]
  4041ee:	jne    0x404264
  4041f0:	gs jb  0x404213
  4041f3:	jo     0x404261
  4041f5:	(bad)  
  4041f6:	outs   dx,BYTE PTR ds:[rsi]
  4041f7:	gs sub al,0x20
  4041fa:	ins    DWORD PTR es:[rdi],dx
  4041fb:	imul   ebp,DWORD PTR [rsi+0x20],0x74726576
  404202:	gs js  0x40420f
  404205:	and    BYTE PTR [rax],ah
  404207:	and    BYTE PTR [rax],ah
  404209:	rex.RX push rbx
  40420b:	and    BYTE PTR [rax],ah
  40420d:	and    BYTE PTR [rip+0x7a697320],ch        # 0x7aa9b533
  404213:	gs jae 0x404250
  404216:	and    BYTE PTR [rax],ah
  404218:	and    BYTE PTR [rbx],ah
  40421a:	imul   ebp,DWORD PTR [rsi+0x74],0x29302820
  404221:	and    BYTE PTR [rdx],cl
  404223:	and    BYTE PTR [rax],ah
  404225:	and    BYTE PTR [rax],ah
  404227:	and    BYTE PTR [rax],ah
  404229:	and    BYTE PTR [rax],ah
  40422b:	and    BYTE PTR [rax],ah
  40422d:	and    BYTE PTR [rax],ah
  40422f:	and    BYTE PTR [rax],ah
  404231:	and    BYTE PTR [rax],ah
  404233:	and    BYTE PTR [rax],ah
  404235:	and    BYTE PTR [rax],ah
  404237:	and    esi,DWORD PTR [rdx+0x65]
  40423a:	(bad)  
  40423b:	ins    BYTE PTR es:[rdi],dx
  40423c:	sub    BYTE PTR [rdx],dh
  40423e:	sub    DWORD PTR [rax],esp
  404240:	je     0x4042b1
  404242:	je     0x404264
  404244:	(bad)  
  404245:	jb     0x4042ac
  404247:	(bad)  
  404248:	sub    al,0x20
  40424a:	je     0x4042bb
  40424c:	je     0x40426e
  40424e:	jbe    0x4042bf
  404250:	ins    BYTE PTR es:[rdi],dx
  404251:	jne    0x4042c0
  404253:	or     ah,BYTE PTR gs:[rax]
  404256:	and    BYTE PTR [rax],ah
  404258:	and    BYTE PTR [rsi+0x74],al
  40425b:	and    BYTE PTR [rax],ah
  40425d:	and    BYTE PTR [rip+0x69727420],ch        # 0x69b2b683
  404263:	(bad)  
  404264:	outs   dx,BYTE PTR ds:[rsi]
  404265:	addr32 jne 0x4042d4
  404268:	(bad)  
  404269:	je     0x4042d4
  40426b:	outs   dx,DWORD PTR ds:[rsi]
  40426c:	outs   dx,BYTE PTR ds:[rsi]
  40426d:	and    BYTE PTR [rdi+0x69],dh
  404270:	je     0x4042da
  404272:	and    BYTE PTR [rbx+0x65],ah
  404275:	outs   dx,BYTE PTR ds:[rsi]
  404276:	je     0x4042ea
  404278:	jne    0x4042e7
  40427a:	jae    0x40429c
  40427c:	outs   dx,WORD PTR ds:[rsi]
  40427e:	jb     0x4042a0
  404280:	outs   dx,BYTE PTR ds:[rsi]
  404281:	outs   dx,DWORD PTR ds:[rsi]
  404282:	outs   dx,BYTE PTR ds:[rsi]
  404283:	sub    eax,0x706d6973
  404288:	ins    BYTE PTR es:[rdi],dx
  404289:	imul   esp,DWORD PTR [rbx+0x69],0x66206c61
  404290:	(bad)  
  404291:	movsxd esp,DWORD PTR [rbp+0x74]
  404294:	jae    0x4042b6
  404296:	sub    BYTE PTR [rdi+0x46],cl
  404299:	rex.RX and BYTE PTR [rsi+0x6f],r12b
  40429d:	jb     0x40430c
  40429f:	(bad)  
  4042a0:	je     0x4042cb
  4042a2:	or     ah,BYTE PTR [rax]
  4042a4:	and    BYTE PTR [rax],ah
  4042a6:	and    BYTE PTR [rsi+0x76],al
  4042a9:	and    BYTE PTR [rax],ah
  4042ab:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afa5d1
  4042b1:	outs   dx,BYTE PTR ds:[rsi]
  4042b2:	je     0x4042d4
  4042b4:	jo     0x404322
  4042b6:	jne    0x40432b
  4042b8:	and    BYTE PTR [rsi+0x65],dh
  4042bb:	jb     0x404331
  4042bd:	imul   esp,DWORD PTR [rbx+0x65],0x6f662073
  4042c4:	jb     0x4042e6
  4042c6:	gs (bad) 
  4042c8:	movsxd ebp,DWORD PTR [rax+0x20]
  4042cb:	data16 (bad) 
  4042cd:	movsxd esp,DWORD PTR [rbp+0x74]
  4042d0:	or     ah,BYTE PTR [rax]
  4042d2:	and    BYTE PTR [rax],ah
  4042d4:	and    BYTE PTR [rsi+0x56],al
  4042d7:	and    BYTE PTR [rax],ah
  4042d9:	and    BYTE PTR [rip+0x65766120],ch        # 0x65b6a3ff
  4042df:	jb     0x404342
  4042e1:	and    BYTE PTR gs:[edi+0x66],ch
  4042e6:	and    BYTE PTR [rsi+0x65],dh
  4042e9:	jb     0x40435f
  4042eb:	imul   esp,DWORD PTR [rbx+0x65],0x61282073
  4042f2:	and    BYTE PTR [rsi+0x65],ah
  4042f5:	(bad)  
  4042f6:	jae    0x404361
  4042f8:	(bad)  
  4042f9:	ins    BYTE PTR es:[rdi],dx
  4042fa:	and    BYTE PTR gs:[rax+0x6f],dh
  4042fe:	imul   ebp,DWORD PTR [rsi+0x74],0x726f6620
  404305:	and    BYTE PTR [rdi],ah
  404307:	rex.W (bad) 
  404309:	sub    DWORD PTR [rdx],ecx
  40430b:	and    BYTE PTR [rax],ah
  40430d:	and    BYTE PTR [rax],ah
  40430f:	rex.RX js 0x404332
  404312:	and    BYTE PTR [rax],ah
  404314:	sub    eax,0x74786520
  404319:	jb     0x404380
  40431b:	ins    DWORD PTR es:[rdi],dx
  40431c:	and    BYTE PTR gs:[rax+0x6f],dh
  404320:	imul   ebp,DWORD PTR [rsi+0x74],0x69282073
  404327:	outs   dx,BYTE PTR ds:[rsi]
  404328:	and    BYTE PTR [rdi+0x72],ch
  40432b:	fs gs jb 0x40434f
  40432f:	outs   dx,WORD PTR ds:[rsi]
  404331:	jb     0x404353
  404333:	xor    ch,BYTE PTR [rip+0xa0a2964]        # 0xa4a6c9d
  404339:	add    BYTE PTR [rax],al
  40433b:	add    BYTE PTR [rax],al
  40433d:	add    BYTE PTR [rax],al
  40433f:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  404343:	movsxd esp,DWORD PTR [rbp+0x20]
  404346:	outs   dx,DWORD PTR ds:[rsi]
  404347:	jo     0x4043bd
  404349:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  404350:	and    BYTE PTR [rax],ah
  404352:	and    BYTE PTR [rsp+rsi*1+0x20],dl
  404356:	and    BYTE PTR [rax],ah
  404358:	sub    eax,0x61727420
  40435d:	movsxd esp,DWORD PTR [rbp+0x20]
  404360:	(bad)  
  404361:	je     0x404383
  404363:	ins    BYTE PTR es:[rdi],dx
  404364:	gs jbe 0x4043cc
  404367:	ins    BYTE PTR es:[rdi],dx
  404368:	and    BYTE PTR [rsi+0x2c],ch
  40436b:	and    BYTE PTR [rdi*1+0x2c6c6c61],dh
  404372:	and    BYTE PTR [rip+0x6d656d3d],dh        # 0x6da5b0b5
  404378:	(bad)  
  404379:	addr32 (bad) 
  40437b:	jne    0x4043f0
  40437d:	jae    0x4043ab
  40437f:	and    BYTE PTR [rip+0x65203d31],ch        # 0x656080b6
  404385:	jbe    0x4043ec
  404387:	outs   dx,BYTE PTR ds:[rsi]
  404388:	je     0x4043fd
  40438a:	or     ah,BYTE PTR [rax]
  40438c:	and    BYTE PTR [rax],ah
  40438e:	and    BYTE PTR [rbx+riz*2+0x20],dl
  404392:	and    BYTE PTR [rax],ah
  404394:	sub    eax,0x65686320
  404399:	movsxd ebp,DWORD PTR [rbx+0x20]
  40439c:	data16 jb 0x404404
  40439f:	jno    0x404416
  4043a1:	outs   dx,BYTE PTR gs:[rsi]
  4043a3:	je     0x404411
  4043a5:	jns    0x4043c7
  4043a7:	fs jne 0x40441c
  4043aa:	imul   ebp,DWORD PTR [rsi+0x67],0x65786520
  4043b1:	movsxd esi,DWORD PTR [rbp+0x74]
  4043b4:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  4043bb:	and    BYTE PTR [rbx+rsi*2+0x20],dl
  4043bf:	and    BYTE PTR [rax],ah
  4043c1:	sub    eax,0x69727020
  4043c6:	outs   dx,BYTE PTR ds:[rsi]
  4043c7:	je     0x4043e9
  4043c9:	jae    0x40443f
  4043cb:	(bad)  
  4043cc:	je     0x404437
  4043ce:	jae    0x404444
  4043d0:	imul   esp,DWORD PTR [rbx+0x73],0x2020200a
  4043d7:	and    BYTE PTR [rsi+rsi*2+0x20],dl
  4043db:	and    BYTE PTR [rax],ah
  4043dd:	sub    eax,0x72657620
  4043e2:	imul   esp,DWORD PTR [rsi+0x79],0x73657220
  4043e9:	jne    0x404457
  4043eb:	je     0x404427
  4043ed:	and    BYTE PTR [rbx+0x74],dh
  4043f0:	jb     0x404467
  4043f2:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  4043f6:	gs sub al,0x20
  4043f9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4043fc:	jbe    0x404463
  4043fe:	js     0x404469
  404400:	je     0x40447b
  404402:	sub    al,0x20
  404404:	(bad)  
  404405:	outs   dx,BYTE PTR ds:[rsi]
  404406:	and    BYTE PTR fs:[rax+0x6f],dh
  40440a:	imul   ebp,DWORD PTR [rsi+0x74],0x636e6920
  404411:	ins    BYTE PTR es:[rdi],dx
  404412:	jne    0x404487
  404414:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  40441b:	and    BYTE PTR [rdx+rdi*2+0x20],dl
  40441f:	and    BYTE PTR [rax],ah
  404421:	sub    eax,0x6e657320
  404426:	and    BYTE PTR fs:[rcx+0x6c],ah
  40442a:	ins    BYTE PTR es:[rdi],dx
  40442b:	and    BYTE PTR [rdi+0x75],ch
  40442e:	je     0x4044a0
  404430:	jne    0x4044a6
  404432:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  404436:	jae    0x4044ac
  404438:	outs   dx,DWORD PTR fs:[rsi]
  40443a:	jne    0x4044b0
  40443c:	or     ah,BYTE PTR [rax]
  40443e:	and    BYTE PTR [rax],ah
  404440:	and    BYTE PTR [rsi+rax*2+0x6e],dl
  404444:	and    BYTE PTR [rax],ah
  404446:	sub    eax,0x70657220
  40444b:	outs   dx,DWORD PTR ds:[rsi]
  40444c:	jb     0x4044c2
  40444e:	and    BYTE PTR [rbx+0x75],dh
  404451:	ins    DWORD PTR es:[rdi],dx
  404452:	ins    DWORD PTR es:[rdi],dx
  404453:	(bad)  
  404454:	jb     0x4044cf
  404456:	and    BYTE PTR [rdi+0x68],dh
  404459:	outs   dx,BYTE PTR gs:[rsi]
  40445b:	and    BYTE PTR [rsi+0x20],ch
  40445e:	outs   dx,DWORD PTR ds:[rsi]
  40445f:	jb     0x404481
  404461:	ins    DWORD PTR es:[rdi],dx
  404462:	outs   dx,DWORD PTR ds:[rsi]
  404463:	jb     0x4044ca
  404465:	and    BYTE PTR [rsi+0x61],ah
  404468:	movsxd esp,DWORD PTR [rbp+0x74]
  40446b:	jae    0x40448d
  40446d:	movsxd esi,DWORD PTR [rdx+0x65]
  404470:	(bad)  
  404471:	je     0x4044d8
  404473:	or     ah,BYTE PTR fs:[rax]
  404476:	and    BYTE PTR [rax],ah
  404478:	and    BYTE PTR [rcx+rcx*2+0x20],dl
  40447c:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x202d
  404483:	imul   ebp,DWORD PTR [rsi+0x70],0x64207475
  40448a:	(bad)  
  40448b:	je     0x4044ee
  40448d:	and    BYTE PTR [rsi+0x72],ah
  404490:	outs   dx,DWORD PTR ds:[rsi]
  404491:	ins    DWORD PTR es:[rdi],dx
  404492:	and    BYTE PTR [rsi+0x69],ah
  404495:	ins    BYTE PTR es:[rdi],dx
  404496:	gs sub al,0x20
  404499:	outs   dx,BYTE PTR ds:[rsi]
  40449a:	outs   dx,DWORD PTR ds:[rsi]
  40449b:	and    BYTE PTR [rbx+0x70],dh
  40449e:	(bad)  
  40449f:	movsxd esp,DWORD PTR [rbp+0x73]
  4044a2:	and    BYTE PTR [rdi+0x72],ch
  4044a5:	and    BYTE PTR [rbx+0x69],dh
  4044a8:	outs   dx,BYTE PTR ds:[rsi]
  4044a9:	ins    BYTE PTR es:[edi],dx
  4044ab:	and    BYTE PTR gs:[rcx+0x75],dh
  4044af:	outs   dx,DWORD PTR ds:[rsi]
  4044b0:	je     0x404517
  4044b2:	jae    0x4044be
  4044b4:	and    BYTE PTR [rax],ah
  4044b6:	and    BYTE PTR [rax],ah
  4044b8:	push   rsp
  4044b9:	rex.WRXB and BYTE PTR [r14+0x69],r12b
  4044bd:	ins    BYTE PTR es:[rdi],dx
  4044be:	and    BYTE PTR gs:[rip+0x74756f20],ch        # 0x74b5b3e5
  4044c5:	jo     0x40453c
  4044c7:	je     0x4044e9
  4044c9:	jb     0x404530
  4044cb:	jae    0x404542
  4044cd:	ins    BYTE PTR es:[rdi],dx
  4044ce:	je     0x404543
  4044d0:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4044d4:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x6d20
  4044db:	(bad)  
  4044dc:	jns    0x4044fe
  4044de:	(bad)  
  4044df:	and    BYTE PTR gs:[rbp+0x6e],ah
  4044e3:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4044e7:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4044ec:	and    BYTE PTR [rbx+0x69],dh
  4044ef:	outs   dx,BYTE PTR ds:[rsi]
  4044f0:	ins    BYTE PTR es:[edi],dx
  4044f2:	and    BYTE PTR gs:[rcx+0x75],dh
  4044f6:	outs   dx,DWORD PTR ds:[rsi]
  4044f7:	je     0x40455e
  4044f9:	jae    0x404505
  4044fb:	and    BYTE PTR [rax],ah
  4044fd:	and    BYTE PTR [rax],ah
  4044ff:	push   rsp
  404500:	push   rax
  404501:	outs   dx,BYTE PTR ds:[rsi]
  404502:	and    BYTE PTR [rax],ah
  404504:	sub    eax,0x72757420
  404509:	outs   dx,BYTE PTR ds:[rsi]
  40450a:	and    BYTE PTR [rdi+0x6e],ch
  40450d:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  404511:	movsxd ebp,DWORD PTR [rcx+0x6e]
  404514:	and    BYTE PTR [edi+0x68],dh
  404518:	outs   dx,BYTE PTR gs:[rsi]
  40451a:	and    BYTE PTR [rax+0x6f],dh
  40451d:	imul   ebp,DWORD PTR [rsi+0x74],0x61206e20
  404524:	fs fs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40452c:	push   0xa6c6c75
  404531:	and    BYTE PTR [rax],ah
  404533:	and    BYTE PTR [rax],ah
  404535:	and    BYTE PTR [rbp+rcx*2+0x6e],dl
  404539:	and    BYTE PTR [rip+0x72757420],ch        # 0x72b5b95f
  40453f:	outs   dx,BYTE PTR ds:[rsi]
  404540:	and    BYTE PTR [rdi+0x6e],ch
  404543:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  404547:	movsxd ebp,DWORD PTR [rcx+0x6e]
  40454a:	and    BYTE PTR [ecx+0x74],ah
  40454e:	and    BYTE PTR [rbp+0x65],ch
  404551:	jb     0x4045ba
  404553:	and    BYTE PTR gs:[rsi+0xa],ch
  404557:	and    BYTE PTR [rax],ah
  404559:	and    BYTE PTR [rax],ah
  40455b:	and    BYTE PTR [rdi+rdx*2+0x6e],dl
  40455f:	and    BYTE PTR [rip+0x61727420],ch        # 0x61b2b985
  404565:	movsxd esp,DWORD PTR [rbp+0x20]
  404568:	ins    DWORD PTR es:[rdi],dx
  404569:	gs jb  0x4045d3
  40456c:	and    BYTE PTR gs:[rsi+0x61],ah
  404570:	movsxd esp,DWORD PTR [rbp+0x74]
  404573:	jae    0x404595
  404575:	ja     0x4045df
  404577:	outs   dx,BYTE PTR gs:[rsi]
  404579:	and    BYTE PTR [rdi+0x69],dh
  40457c:	fs je  0x4045e7
  40457f:	and    BYTE PTR [rsi],bh
  404581:	and    BYTE PTR [rsi+0xa],ch
  404584:	and    BYTE PTR [rax],ah
  404586:	and    BYTE PTR [rax],ah
  404588:	push   rsp
  404589:	push   rsi
  40458a:	outs   dx,BYTE PTR ds:[rsi]
  40458b:	and    BYTE PTR [rax],ah
  40458d:	sub    eax,0x6f747320
  404592:	jo     0x4045b4
  404594:	jno    0x4045fe
  404596:	jne    0x404604
  404598:	ins    BYTE PTR es:[rdi],dx
  404599:	and    BYTE PTR [rcx+0x66],ah
  40459c:	je     0x404603
  40459e:	jb     0x4045c0
  4045a0:	(bad)  
  4045a1:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x696f7020
  4045aa:	outs   dx,BYTE PTR ds:[rsi]
  4045ab:	je     0x4045cd
  4045ad:	outs   dx,BYTE PTR ds:[rsi]
  4045ae:	sub    al,0x20
  4045b0:	sub    eax,0x6f66206e
  4045b5:	jb     0x4045d7
  4045b7:	(bad)  
  4045b8:	outs   dx,WORD PTR gs:[rsi]
  4045bb:	jb     0x404622
  4045bd:	and    BYTE PTR [rax],ch
  4045bf:	jae    0x404626
  4045c1:	and    BYTE PTR gs:[rbx+rax*2+0x6e],dl
  4045c6:	sub    DWORD PTR [rdx],ecx
  4045c8:	and    BYTE PTR [rax],ah
  4045ca:	and    BYTE PTR [rax],ah
  4045cc:	and    BYTE PTR [rbx+rax*2+0x6e],dl
  4045d0:	and    BYTE PTR [rip+0x6f747320],ch        # 0x6fb4b8f6
  4045d6:	jo     0x4045f8
  4045d8:	jno    0x404642
  4045da:	jne    0x404648
  4045dc:	ins    BYTE PTR es:[rdi],dx
  4045dd:	and    BYTE PTR [rcx+0x66],ah
  4045e0:	je     0x404647
  4045e2:	jb     0x404604
  4045e4:	(bad)  
  4045e5:	jne    0x404650
  4045e7:	ins    BYTE PTR es:[rdi],dx
  4045e8:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6e6f6320
  4045f0:	and    BYTE PTR gs:[rsi+0x6f],ah
  4045f4:	jb     0x404616
  4045f6:	jo     0x404667
  4045f8:	imul   ebp,DWORD PTR [rsi+0x74],0x28206e20
  4045ff:	jae    0x404666
  404601:	and    BYTE PTR gs:[rsi+rdx*2+0x6e],dl
  404606:	sub    DWORD PTR [rdx],ecx
  404608:	or     dl,BYTE PTR [rax+0x72]
  40460b:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  40460f:	imul   ebp,DWORD PTR [rdi+0x6e],0x74706f20
  404616:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  40461d:	and    BYTE PTR [rax],ah
  40461f:	and    BYTE PTR [rbx+0x6e],al
  404622:	and    BYTE PTR [rax],ah
  404624:	and    BYTE PTR [rip+0x64617220],ch        # 0x64a1b84a
  40462a:	imul   esi,DWORD PTR [rbp+0x73],0x20666f20
  404631:	movsxd esp,DWORD PTR [rbp+0x6e]
  404634:	je     0x4046a8
  404636:	jne    0x4046a5
  404638:	and    BYTE PTR [rax],ch
  40463a:	jb     0x4046ab
  40463c:	jne    0x4046ac
  40463e:	outs   dx,DWORD PTR fs:[rsi]
  404640:	data16 data16 and BYTE PTR [rcx+0x64],ah
  404645:	fs gs sub DWORD PTR fs:[rsi],ebp
  40464a:	and    BYTE PTR [rax],ah
  40464c:	rex.WRB
  40464d:	gs jb  0x4046b7
  404650:	and    BYTE PTR gs:[rsi+0x61],ah
  404654:	movsxd esp,DWORD PTR [rbp+0x74]
  404657:	jae    0x404679
  404659:	imul   esp,DWORD PTR [rsi+0x20],0x2d6e6f6e
  404660:	movsxd ebp,DWORD PTR [rdi+0x6e]
  404663:	jbe    0x4046ca
  404665:	js     0x404671
  404667:	and    BYTE PTR [rax],ah
  404669:	and    BYTE PTR [rax],ah
  40466b:	and    BYTE PTR [rcx+0x6e],al
  40466e:	and    BYTE PTR [rax],ah
  404670:	sub    eax,0x736f6320
  404675:	imul   ebp,DWORD PTR [rsi+0x65],0x20666f20
  40467c:	ins    DWORD PTR es:[rdi],dx
  40467d:	(bad)  
  40467e:	js     0x4046e9
  404680:	ins    DWORD PTR es:[rdi],dx
  404681:	jne    0x4046f0
  404683:	and    BYTE PTR [rcx+0x6e],ah
  404686:	ins    BYTE PTR es:[edi],dx
  404688:	gs and BYTE PTR cs:[rax],ah
  40468c:	rex.WRB
  40468d:	gs jb  0x4046f7
  404690:	and    BYTE PTR gs:[rsi+0x61],ah
  404694:	movsxd esp,DWORD PTR [rbp+0x74]
  404697:	jae    0x4046b9
  404699:	imul   esp,DWORD PTR [rsi+0x20],0x69736f63
  4046a0:	outs   dx,BYTE PTR ds:[rsi]
  4046a1:	and    BYTE PTR gs:[rsi],bh
  4046a4:	and    BYTE PTR [rsi+0x20],ch
  4046a7:	outs   dx,DWORD PTR ds:[rsi]
  4046a8:	jb     0x4046ca
  4046aa:	outs   dx,BYTE PTR ds:[rsi]
  4046ab:	outs   dx,DWORD PTR ds:[rsi]
  4046ac:	outs   dx,BYTE PTR ds:[rsi]
  4046ad:	sub    eax,0x766e6f63
  4046b2:	gs js  0x4046bf
  4046b5:	and    BYTE PTR [rax],ah
  4046b7:	and    BYTE PTR [rax],ah
  4046b9:	and    BYTE PTR [rax],ah
  4046bb:	and    BYTE PTR [rax],ah
  4046bd:	and    BYTE PTR [rax],ah
  4046bf:	and    BYTE PTR [rbx+0x2d],al
  4046c2:	xor    BYTE PTR [rax],ah
  4046c4:	jb     0x404735
  4046c6:	jne    0x404736
  4046c8:	outs   dx,DWORD PTR fs:[rsi]
  4046ca:	data16 data16 sub al,0x20
  4046ce:	rex.B sub eax,0x39392e30
  4046d4:	(bad)  
  4046d5:	rex.XB sub eax,0x31302e30
  4046db:	and    BYTE PTR [rax+0x72],dh
  4046de:	gs sub eax,0x6772656d
  4046e4:	gs sub al,0x20
  4046e7:	xor    BYTE PTR [r14],bpl
  4046ea:	cmp    DWORD PTR [rcx],edi
  4046ec:	(bad)  
  4046ed:	rex.XB xor BYTE PTR [r14],bpl
  4046f0:	xor    BYTE PTR [rcx],dh
  4046f2:	and    BYTE PTR [rax+0x6f],dh
  4046f5:	jae    0x40476b
  4046f7:	sub    eax,0x6772656d
  4046fc:	or     ah,BYTE PTR gs:[rax]
  4046ff:	and    BYTE PTR [rax],ah
  404701:	and    BYTE PTR [rdx+0x6e],dl
  404704:	and    BYTE PTR [rax],ah
  404706:	and    BYTE PTR [rip+0x6e617220],ch        # 0x6ea1b92c
  40470c:	outs   dx,DWORD PTR fs:[rsi]
  40470e:	ins    DWORD PTR es:[rdi],dx
  40470f:	ins    BYTE PTR es:[rdi],dx
  404710:	jns    0x404732
  404712:	jo     0x404779
  404714:	jb     0x40478a
  404716:	jne    0x40478a
  404718:	(bad)  
  404719:	and    BYTE PTR [rbx+0x6f],ah
  40471c:	ins    DWORD PTR es:[rdi],dx
  40471d:	jo     0x404794
  40471f:	je     0x404782
  404721:	je     0x40478c
  404723:	outs   dx,DWORD PTR ds:[rsi]
  404724:	outs   dx,BYTE PTR ds:[rsi]
  404725:	jae    0x404747
  404727:	(bad)  
  404728:	jns    0x40474a
  40472a:	(bad)  
  40472b:	and    BYTE PTR [rsi+0x61],ah
  40472e:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  404732:	and    BYTE PTR [rdi+0x66],ch
  404735:	and    BYTE PTR [rbx+0x31],bl
  404738:	sub    eax,0x2b312c6e
  40473d:	outs   dx,BYTE PTR ds:[rsi]
  40473e:	pop    rbp
  40473f:	or     ah,BYTE PTR [rax]
  404741:	and    BYTE PTR [rax],ah
  404743:	and    BYTE PTR [rbp+0x6e],dl
  404746:	and    BYTE PTR [rax],ah
  404748:	and    BYTE PTR [rip+0x78616d20],ch        # 0x78a1b46e
  40474e:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  404752:	je     0x4047b5
  404754:	outs   dx,BYTE PTR ds:[rsi]
  404755:	movsxd esp,DWORD PTR [rbp+0x20]
  404758:	(bad)  
  404759:	gs ins BYTE PTR es:[rdi],dx
  40475b:	outs   dx,DWORD PTR ds:[rsi]
  40475c:	ja     0x40477e
  40475e:	jo     0x4047cc
  404760:	(bad)  
  404761:	outs   dx,BYTE PTR ds:[rsi]
  404762:	and    BYTE PTR gs:[rsi+0x6f],ah
  404766:	jb     0x404788
  404768:	(bad)  
  404769:	and    BYTE PTR [rsi+0x65],ch
  40476c:	ja     0x40479a
  40476e:	and    BYTE PTR [rbx+0x6f],ah
  404771:	jo     0x4047df
  404773:	(bad)  
  404774:	outs   dx,BYTE PTR ds:[rsi]
  404775:	(bad)  
  404776:	jb     0x404798
  404778:	jo     0x4047e9
  40477a:	imul   ebp,DWORD PTR [rsi+0x74],0x2020200a
  404781:	and    BYTE PTR [rdi+0x6e],dl
  404784:	and    BYTE PTR [rax],ah
  404786:	and    BYTE PTR [rip+0x6e696d20],ch        # 0x6ea9b4ac
  40478c:	and    BYTE PTR [rsi+0x61],ah
  40478f:	movsxd esp,DWORD PTR [rbp+0x74]
  404792:	and    BYTE PTR [rdi+0x69],dh
  404795:	fs je  0x404800
  404798:	and    BYTE PTR [rsi+0x6f],ah
  40479b:	jb     0x4047bd
  40479d:	outs   dx,DWORD PTR ds:[rsi]
  40479e:	jne    0x404814
  4047a0:	jae    0x40480b
  4047a2:	fs and BYTE PTR gs:[rax+0x6f],dh
  4047a7:	imul   ebp,DWORD PTR [rsi+0x74],0x65622820
  4047ae:	outs   dx,WORD PTR ds:[rsi]
  4047b0:	jb     0x404817
  4047b2:	and    BYTE PTR [rdx+0x6f],dh
  4047b5:	jne    0x404825
  4047b7:	outs   dx,DWORD PTR fs:[rsi]
  4047b9:	data16 sub WORD PTR [rdx],cx
  4047bd:	or     cl,BYTE PTR [rdi+0x75]
  4047c0:	je     0x404832
  4047c2:	jne    0x404838
  4047c4:	and    BYTE PTR [rsi+0x6f],ah
  4047c7:	jb     0x404836
  4047c9:	(bad)  
  4047ca:	je     0x40483f
  4047cc:	and    BYTE PTR [rax],ch
  4047ce:	ins    DWORD PTR es:[rdi],dx
  4047cf:	(bad)  
  4047d0:	jns    0x4047f2
  4047d2:	(bad)  
  4047d3:	and    BYTE PTR gs:[rbx+0x6f],ah
  4047d7:	ins    DWORD PTR es:[rdi],dx
  4047d8:	(bad)  
  4047d9:	imul   ebp,DWORD PTR [rsi+0x65],0x69203b64
  4047e0:	data16 and BYTE PTR [rsi+0x6f],ch
  4047e4:	outs   dx,BYTE PTR ds:[rsi]
  4047e5:	gs sub al,0x20
  4047e8:	jo     0x40485c
  4047ea:	outs   dx,DWORD PTR ds:[rsi]
  4047eb:	fs jne 0x404851
  4047ee:	gs jae 0x404811
  4047f1:	(bad)  
  4047f2:	and    BYTE PTR [rbx+0x75],dh
  4047f5:	ins    DWORD PTR es:[rdi],dx
  4047f6:	ins    DWORD PTR es:[rdi],dx
  4047f7:	(bad)  
  4047f8:	jb     0x404873
  4047fa:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4047fe:	jae    0x404874
  404800:	outs   dx,DWORD PTR fs:[rsi]
  404802:	jne    0x404878
  404804:	sub    DWORD PTR [rdx],edi
  404806:	or     ah,BYTE PTR [rax]
  404808:	and    BYTE PTR [rax],ah
  40480a:	and    BYTE PTR [rsi+0x20],ah
  40480d:	and    BYTE PTR [rax],ah
  40480f:	and    BYTE PTR [rip+0x63616620],ch        # 0x63a1ae35
  404815:	gs je  0x404838
  404818:	fs jne 0x404888
  40481b:	jo     0x404827
  40481d:	and    BYTE PTR [rax],ah
  40481f:	and    BYTE PTR [rax],ah
  404821:	rex.RXB and BYTE PTR [r8],r12b
  404824:	and    BYTE PTR [rax],ah
  404826:	sub    eax,0x6f654720
  40482b:	ins    DWORD PTR es:[rdi],dx
  40482c:	jbe    0x404897
  40482e:	gs ja  0x404851
  404831:	outs   dx,DWORD PTR ds:[rsi]
  404832:	jne    0x4048a8
  404834:	jo     0x4048ab
  404836:	je     0x404858
  404838:	sub    BYTE PTR [rbx+0x65],dh
  40483b:	and    BYTE PTR gs:[rdx+0x65],ah
  40483f:	ins    BYTE PTR es:[rdi],dx
  404840:	outs   dx,DWORD PTR ds:[rsi]
  404841:	ja     0x40486c
  404843:	or     ah,BYTE PTR [rax]
  404845:	and    BYTE PTR [rax],ah
  404847:	and    BYTE PTR [rcx+0x20],ch
  40484a:	and    BYTE PTR [rax],ah
  40484c:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a5be72
  404852:	je     0x4048bd
  404854:	movsxd esp,DWORD PTR [rbp+0x73]
  404857:	and    BYTE PTR [rcx+0x6e],ch
  40485a:	movsxd ebp,DWORD PTR [rcx+0x64]
  40485d:	outs   dx,BYTE PTR gs:[rsi]
  40485f:	je     0x404881
  404861:	je     0x4048d2
  404863:	and    BYTE PTR [rbp+0x61],ah
  404866:	movsxd ebp,DWORD PTR [rax+0x20]
  404869:	data16 (bad) 
  40486b:	movsxd esp,DWORD PTR [rbp+0x74]
  40486e:	or     ah,BYTE PTR [rax]
  404870:	and    BYTE PTR [rax],ah
  404872:	and    BYTE PTR [rbp+0x20],ch
  404875:	and    BYTE PTR [rax],ah
  404877:	and    BYTE PTR [rip+0x74614d20],ch        # 0x74a1959d
  40487d:	push   0x74616d65
  404882:	imul   esp,DWORD PTR [rbx+0x61],0x74756f20
  404889:	jo     0x404900
  40488b:	je     0x4048ad
  40488d:	sub    BYTE PTR [rdx],dh
  40488f:	sub    eax,0x6e612064
  404894:	and    BYTE PTR fs:[rbx],dh
  404897:	sub    eax,0x200a2964
  40489c:	and    BYTE PTR [rax],ah
  40489e:	and    BYTE PTR [rsi+0x20],ch
  4048a1:	and    BYTE PTR [rax],ah
  4048a3:	and    BYTE PTR [rip+0x726f6e20],ch        # 0x72afb6c9
  4048a9:	ins    DWORD PTR es:[rdi],dx
  4048aa:	(bad)  
  4048ab:	ins    BYTE PTR es:[rdi],dx
  4048ac:	jae    0x4048ce
  4048ae:	ja     0x404919
  4048b0:	je     0x40491a
  4048b2:	and    BYTE PTR [rdi+0x66],ch
  4048b5:	data16 jae 0x40491d
  4048b8:	je     0x40492d
  4048ba:	or     ah,BYTE PTR [rax]
  4048bc:	and    BYTE PTR [rax],ah
  4048be:	and    BYTE PTR [rdi+0x20],ch
  4048c1:	and    BYTE PTR [rax],ah
  4048c3:	and    BYTE PTR [rip+0x46464f20],ch        # 0x468697e9
  4048c9:	and    BYTE PTR [rsi+0x69],ah
  4048cc:	ins    BYTE PTR es:[rdi],dx
  4048cd:	and    BYTE PTR gs:[rsi+0x6f],ah
  4048d1:	jb     0x404940
  4048d3:	(bad)  
  4048d4:	je     0x4048f6
  4048d6:	sub    BYTE PTR [rcx+rbp*2+0x6d],ah
  4048da:	sub    al,0x20
  4048dc:	jo     0x40494d
  4048de:	imul   ebp,DWORD PTR [rsi+0x74],0x6e612073
  4048e5:	and    BYTE PTR fs:[rsi+0x61],ah
  4048e9:	movsxd esp,DWORD PTR [rbp+0x74]
  4048ec:	jae    0x404929
  4048ee:	and    BYTE PTR [rsi+0x6f],dl
  4048f1:	jb     0x404962
  4048f3:	outs   dx,BYTE PTR ds:[rsi]
  4048f4:	outs   dx,DWORD PTR ds:[rsi]
  4048f5:	imul   esp,DWORD PTR [rax],0x69676572
  4048fb:	outs   dx,DWORD PTR ds:[rsi]
  4048fc:	outs   dx,BYTE PTR ds:[rsi]
  4048fd:	jae    0x404928
  4048ff:	or     ah,BYTE PTR [rax]
  404901:	and    BYTE PTR [rax],ah
  404903:	and    BYTE PTR [rax+0x20],dh
  404906:	and    BYTE PTR [rax],ah
  404908:	and    BYTE PTR [rip+0x696f7020],ch        # 0x69afb92e
  40490e:	outs   dx,BYTE PTR ds:[rsi]
  40490f:	je     0x404931
  404911:	movsxd ebp,DWORD PTR [rdi+0x6f]
  404914:	jb     0x40497a
  404916:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  40491d:	or     ah,BYTE PTR [rax]
  40491f:	and    BYTE PTR [rax],ah
  404921:	and    BYTE PTR [rbx+0x20],dh
  404924:	and    BYTE PTR [rax],ah
  404926:	and    BYTE PTR [rip+0x6d757320],ch        # 0x6db5bc4c
  40492c:	ins    DWORD PTR es:[rdi],dx
  40492d:	(bad)  
  40492e:	jb     0x4049a9
  404930:	and    BYTE PTR [rax],ch
  404932:	jae    0x4049a8
  404934:	fs gs jb 0x4049aa
  404938:	sub    DWORD PTR [rdx],ecx
  40493a:	or     al,BYTE PTR [rax]
  40493c:	add    BYTE PTR [rax],al
  40493e:	add    BYTE PTR [rax],al
  404940:	and    BYTE PTR [rax],ah
  404942:	and    BYTE PTR [rax],ah
  404944:	push   rcx
  404945:	jae    0x404967
  404947:	and    BYTE PTR [rax],ah
  404949:	sub    eax,0x61657320
  40494e:	jb     0x4049b3
  404950:	push   0x6c6c6120
  404955:	and    BYTE PTR [rax+0x6f],dh
  404958:	imul   ebp,DWORD PTR [rsi+0x74],0x6f662073
  40495f:	jb     0x404981
  404961:	je     0x4049cb
  404963:	and    BYTE PTR gs:[rcx+0x6e],ch
  404967:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6973206c
  40496f:	ins    DWORD PTR es:[rdi],dx
  404970:	jo     0x4049de
  404972:	gs js  0x40497f
  404975:	and    BYTE PTR [rax],ah
  404977:	and    BYTE PTR [rax],ah
  404979:	push   rcx
  40497a:	rex.RXB outs dx,BYTE PTR ds:[rsi]
  40497c:	and    BYTE PTR [rax],ah
  40497e:	sub    eax,0x6f6f6720
  404983:	and    BYTE PTR fs:[rsi+0x61],ah
  404987:	movsxd esp,DWORD PTR [rbp+0x74]
  40498a:	and    BYTE PTR [rcx+0x66],ch
  40498d:	and    BYTE PTR [rsi+0x69],dh
  404990:	jae    0x4049fb
  404992:	(bad)  
  404993:	ins    BYTE PTR es:[rdi],dx
  404994:	and    BYTE PTR gs:[rsi+0x72],ah
  404998:	outs   dx,DWORD PTR ds:[rsi]
  404999:	ins    DWORD PTR es:[rdi],dx
  40499a:	and    BYTE PTR [rax+0x6f],dh
  40499d:	imul   ebp,DWORD PTR [rsi+0x74],0x202c6e20
  4049a4:	sub    eax,0x6f66206e
  4049a9:	jb     0x4049cb
  4049ab:	outs   dx,BYTE PTR ds:[rsi]
  4049ac:	outs   dx,DWORD PTR ds:[rsi]
  4049ad:	je     0x4049cf
  4049af:	jbe    0x404a1a
  4049b1:	jae    0x404a1c
  4049b3:	(bad)  
  4049b4:	ins    BYTE PTR es:[rdi],dx
  4049b5:	or     ah,BYTE PTR gs:[rax]
  4049b8:	and    BYTE PTR [rax],ah
  4049ba:	and    BYTE PTR [rcx+0x56],dl
  4049bd:	outs   dx,BYTE PTR ds:[rsi]
  4049be:	and    BYTE PTR [rax],ah
  4049c0:	sub    eax,0x6f6f6720
  4049c5:	and    BYTE PTR fs:[rsi+0x61],ah
  4049c9:	movsxd esp,DWORD PTR [rbp+0x74]
  4049cc:	and    BYTE PTR [rcx+0x66],ch
  4049cf:	and    BYTE PTR [rcx+0x74],ch
  4049d2:	and    BYTE PTR [rcx+0x6e],ch
  4049d5:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  4049d9:	gs jae 0x4049fc
  4049dc:	jo     0x404a4d
  4049de:	imul   ebp,DWORD PTR [rsi+0x74],0x202c6e20
  4049e5:	sub    eax,0x6669206e
  4049ea:	and    BYTE PTR [rsi+0x6f],ch
  4049ed:	je     0x4049f9
  4049ef:	or     al,BYTE PTR [rax]
	...
  4049fd:	add    BYTE PTR [rax],al
  4049ff:	add    BYTE PTR [rdx],cl
  404a01:	jno    0x404a66
  404a03:	outs   dx,DWORD PTR ds:[rsi]
  404a04:	outs   dx,BYTE PTR ds:[rsi]
  404a05:	jbe    0x404a6c
  404a07:	js     0x404a36
  404a09:	and    BYTE PTR [rbx+0x6f],ah
  404a0c:	ins    DWORD PTR es:[rdi],dx
  404a0d:	jo     0x404a84
  404a0f:	je     0x404a76
  404a11:	and    BYTE PTR [rax+rbp*2+0x65],dh
  404a15:	and    BYTE PTR [rbx+0x6f],ah
  404a18:	outs   dx,BYTE PTR ds:[rsi]
  404a19:	jbe    0x404a80
  404a1b:	js     0x404a3d
  404a1d:	push   0xa6c6c75
  404a22:	and    BYTE PTR [rax],ah
  404a24:	and    BYTE PTR [rax],ah
  404a26:	push   0x3a707474
  404a2b:	(bad)  
  404a2c:	(bad)  
  404a2d:	ja     0x404aa6
  404a2f:	ja     0x404a5f
  404a31:	jno    0x404a9b
  404a33:	jne    0x404aa1
  404a35:	ins    BYTE PTR es:[rdi],dx
  404a36:	outs   dx,DWORD PTR cs:[rsi]
  404a38:	jb     0x404aa1
  404a3a:	and    BYTE PTR [rax],ah
  404a3c:	and    eax,0x690a0a73
  404a41:	outs   dx,BYTE PTR ds:[rsi]
  404a42:	jo     0x404ab9
  404a44:	je     0x404a66
  404a46:	sub    BYTE PTR [rbx+0x74],dh
  404a49:	imul   ebp,DWORD PTR fs:[rsi+0x29],0x20200a3a
  404a51:	and    BYTE PTR [rax],ah
  404a53:	imul   si,WORD PTR [rdx+0x73],0x2074
  404a59:	ins    BYTE PTR es:[rdi],dx
  404a5a:	imul   ebp,DWORD PTR [rsi+0x65],0x64203a73
  404a61:	imul   ebp,DWORD PTR [rbp+0x65],0x6f69736e
  404a68:	outs   dx,BYTE PTR ds:[rsi]
  404a69:	and    BYTE PTR [rcx+0x6e],ah
  404a6c:	and    BYTE PTR fs:[rsi+0x75],ch
  404a70:	ins    DWORD PTR es:[rdi],dx
  404a71:	(bad)  
  404a72:	gs jb  0x404a95
  404a75:	outs   dx,DWORD PTR ds:[rsi]
  404a76:	data16 and BYTE PTR [rax+0x6f],dh
  404a7a:	imul   ebp,DWORD PTR [rsi+0x74],0x6f282073
  404a81:	jb     0x404aa3
  404a83:	jbe    0x404aee
  404a85:	movsxd esp,DWORD PTR [rbp+0x2d]
  404a88:	jbe    0x404aef
  404a8a:	jb     0x404aff
  404a8c:	(bad)  
  404a8d:	sub    DWORD PTR [rsi],ebp
  404a8f:	or     ah,BYTE PTR [rax]
  404a91:	and    BYTE PTR [rax],ah
  404a93:	and    BYTE PTR [rdi+0x74],ch
  404a96:	push   0x6c207265
  404a9b:	imul   ebp,DWORD PTR [rsi+0x65],0x70203a73
  404aa2:	outs   dx,DWORD PTR ds:[rsi]
  404aa3:	imul   ebp,DWORD PTR [rsi+0x74],0x6f6f6320
  404aaa:	jb     0x404b10
  404aac:	imul   ebp,DWORD PTR [rsi+0x61],0x2c736574
  404ab3:	and    BYTE PTR [rdx+0x65],ah
  404ab6:	jae    0x404b2c
  404ab8:	and    BYTE PTR [rcx+0x66],ch
  404abb:	and    BYTE PTR [rdi+0x6e],ch
  404abe:	and    BYTE PTR gs:[rax+0x6f],dh
  404ac2:	imul   ebp,DWORD PTR [rsi+0x74],0x72657020
  404ac9:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  404acd:	or     ah,BYTE PTR gs:[rax]
  404ad0:	and    BYTE PTR [rax],ah
  404ad2:	and    BYTE PTR [rbx+0x6f],ah
  404ad5:	ins    DWORD PTR es:[rdi],dx
  404ad6:	ins    DWORD PTR es:[rdi],dx
  404ad7:	outs   dx,BYTE PTR gs:[rsi]
  404ad9:	je     0x404b4e
  404adb:	cmp    ah,BYTE PTR [rax]
  404add:	and    BYTE PTR [rax],ah
  404adf:	and    BYTE PTR [rbx+0x74],dh
  404ae2:	(bad)  
  404ae3:	jb     0x404b59
  404ae5:	and    BYTE PTR [rdi+0x69],dh
  404ae8:	je     0x404b52
  404aea:	and    BYTE PTR [rcx+0x20],ah
  404aed:	outs   dx,BYTE PTR ds:[rsi]
  404aee:	outs   dx,DWORD PTR ds:[rsi]
  404aef:	outs   dx,BYTE PTR ds:[rsi]
  404af0:	sub    eax,0x656d756e
  404af5:	jb     0x404b60
  404af7:	movsxd esp,DWORD PTR [rax]
  404af9:	movsxd ebp,DWORD PTR [rax+0x61]
  404afc:	jb     0x404b5f
  404afe:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  404b02:	or     cl,BYTE PTR [rdx]
  404b04:	outs   dx,DWORD PTR ds:[rsi]
  404b05:	jo     0x404b7b
  404b07:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  404b0e:	and    BYTE PTR [rax],ah
  404b10:	and    BYTE PTR [rcx+0x74],dl
  404b13:	and    BYTE PTR [rax],ah
  404b15:	and    BYTE PTR [rip+0x69727420],ch        # 0x69b2bf3b
  404b1b:	(bad)  
  404b1c:	outs   dx,BYTE PTR ds:[rsi]
  404b1d:	addr32 jne 0x404b8c
  404b20:	(bad)  
  404b21:	je     0x404b88
  404b23:	and    BYTE PTR fs:[rdi+0x75],ch
  404b27:	je     0x404b99
  404b29:	jne    0x404b9f
  404b2b:	or     ah,BYTE PTR [rax]
  404b2d:	and    BYTE PTR [rax],ah
  404b2f:	and    BYTE PTR [rcx+0x4a],dl
  404b32:	and    BYTE PTR [rax],ah
  404b34:	and    BYTE PTR [rip+0x676f6a20],ch        # 0x67afb55a
  404b3a:	ins    BYTE PTR es:[edi],dx
  404b3c:	gs and BYTE PTR fs:[rcx+0x6e],ch
  404b41:	jo     0x404bb8
  404b43:	je     0x404b65
  404b45:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  404b4c:	and    BYTE PTR [rdi+0x66],ch
  404b4f:	and    BYTE PTR [rbp+0x65],ch
  404b52:	jb     0x404bbb
  404b54:	gs and BYTE PTR fs:[rsi+0x61],ah
  404b59:	movsxd esp,DWORD PTR [rbp+0x74]
  404b5c:	jae    0x404b68
  404b5e:	and    BYTE PTR [rax],ah
  404b60:	and    BYTE PTR [rax],ah
  404b62:	push   rcx
  404b63:	movsxd esp,DWORD PTR [rax]
  404b65:	and    BYTE PTR [rax],ah
  404b67:	sub    eax,0x65656b20
  404b6c:	jo     0x404b8e
  404b6e:	movsxd ebp,DWORD PTR [rdi+0x70]
  404b71:	ins    BYTE PTR es:[rdi],dx
  404b72:	(bad)  
  404b73:	outs   dx,BYTE PTR ds:[rsi]
  404b74:	(bad)  
  404b75:	jb     0x404b97
  404b77:	jo     0x404be8
  404b79:	imul   ebp,DWORD PTR [rsi+0x74],0x69772073
  404b80:	je     0x404bea
  404b82:	and    BYTE PTR [rsi+0x65],ch
  404b85:	(bad)  
  404b86:	jb     0x404bed
  404b88:	jae    0x404bfe
  404b8a:	and    BYTE PTR [rsi+0x61],ah
  404b8d:	movsxd esp,DWORD PTR [rbp+0x74]
  404b90:	or     ah,BYTE PTR [rax]
  404b92:	and    BYTE PTR [rax],ah
  404b94:	and    BYTE PTR [rcx+0x69],dl
  404b97:	and    BYTE PTR [rax],ah
  404b99:	and    BYTE PTR [rip+0x65656b20],ch        # 0x65a5b6bf
  404b9f:	jo     0x404bc1
  404ba1:	imul   ebp,DWORD PTR [rsi+0x74],0x6f697265
  404ba8:	jb     0x404bca
  404baa:	jo     0x404c1b
  404bac:	imul   ebp,DWORD PTR [rsi+0x74],0x69772073
  404bb3:	je     0x404c1d
  404bb5:	and    BYTE PTR [rsi+0x65],ch
  404bb8:	(bad)  
  404bb9:	jb     0x404c20
  404bbb:	jae    0x404c31
  404bbd:	and    BYTE PTR [rsi+0x61],ah
  404bc0:	movsxd esp,DWORD PTR [rbp+0x74]
  404bc3:	or     cl,BYTE PTR [rdx]
  404bc5:	push   rcx
  404bc6:	push   0x206c6c75
  404bcb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  404bce:	je     0x404c42
  404bd0:	outs   dx,DWORD PTR ds:[rsi]
  404bd1:	ins    BYTE PTR es:[rdi],dx
  404bd2:	and    BYTE PTR [rdi+0x70],ch
  404bd5:	je     0x404c40
  404bd7:	outs   dx,DWORD PTR ds:[rsi]
  404bd8:	outs   dx,BYTE PTR ds:[rsi]
  404bd9:	jae    0x404c15
  404bdb:	or     ah,BYTE PTR [rax]
  404bdd:	and    BYTE PTR [rax],ah
  404bdf:	and    BYTE PTR [rcx+0x62],dl
  404be2:	imul   edi,DWORD PTR [rdx],0x6e
  404be5:	and    BYTE PTR [rax],ah
  404be7:	and    BYTE PTR [rip+0x61637320],ch        # 0x61a3bf0d
  404bed:	ins    BYTE PTR es:[rdi],dx
  404bee:	and    BYTE PTR gs:[rbx+0x6f],ah
  404bf2:	outs   dx,DWORD PTR ds:[rsi]
  404bf3:	jb     0x404c59
  404bf5:	and    BYTE PTR [rbx+0x20],ch
  404bf8:	jae    0x404c69
  404bfa:	and    BYTE PTR [rax+rbp*2+0x61],dh
  404bfe:	je     0x404c20
  404c00:	ins    BYTE PTR es:[rdi],dx
  404c01:	outs   dx,DWORD PTR ds:[rsi]
  404c02:	ja     0x404c24
  404c04:	(bad)  
  404c05:	outs   dx,DWORD PTR ds:[rsi]
  404c06:	jne    0x404c76
  404c08:	and    BYTE PTR fs:[rcx+0x73],ch
  404c0c:	and    BYTE PTR [rsi+0xa],ch
  404c0f:	and    BYTE PTR [rax],ah
  404c11:	and    BYTE PTR [rax],ah
  404c13:	and    BYTE PTR [rax],ah
  404c15:	push   rcx
  404c16:	rex.X imul edi,DWORD PTR [rdx],0x6e
  404c1a:	and    BYTE PTR [rip+0x61637320],ch        # 0x61a3bf40
  404c20:	ins    BYTE PTR es:[rdi],dx
  404c21:	and    BYTE PTR gs:[rbx+0x6f],ah
  404c25:	outs   dx,DWORD PTR ds:[rsi]
  404c26:	jb     0x404c8c
  404c28:	and    BYTE PTR [rbx+0x20],ch
  404c2b:	jae    0x404c9c
  404c2d:	and    BYTE PTR [rax+rbp*2+0x61],dh
  404c31:	je     0x404c53
  404c33:	jne    0x404ca5
  404c35:	jo     0x404c9c
  404c37:	jb     0x404c59
  404c39:	(bad)  
  404c3a:	outs   dx,DWORD PTR ds:[rsi]
  404c3b:	jne    0x404cab
  404c3d:	and    BYTE PTR fs:[rcx+0x73],ch
  404c41:	and    BYTE PTR [rsi+0x20],ch
  404c44:	sub    BYTE PTR [rcx+0x42],dl
  404c47:	imul   esp,DWORD PTR [rax],0x69
  404c4a:	jae    0x404c6c
  404c4c:	and    eax,0x67322e32
  404c51:	sub    DWORD PTR [rdx],ecx
  404c53:	and    BYTE PTR [rax],ah
  404c55:	and    BYTE PTR [rax],ah
  404c57:	push   rcx
  404c58:	(bad)  
  404c5a:	and    BYTE PTR [rax],ah
  404c5c:	sub    eax,0x61637320
  404c61:	ins    BYTE PTR es:[rdi],dx
  404c62:	and    BYTE PTR gs:[rcx+0x6e],ch
  404c66:	jo     0x404cdd
  404c68:	je     0x404c8a
  404c6a:	je     0x404cdb
  404c6c:	and    BYTE PTR [rbp+0x6e],dh
  404c6f:	imul   esi,DWORD PTR [rax+riz*1+0x63],0x20656275
  404c77:	movsxd esp,DWORD PTR [rbp+0x6e]
  404c7a:	je     0x404ce1
  404c7c:	jb     0x404ce3
  404c7e:	and    BYTE PTR fs:[rcx+0x74],ah
  404c82:	and    BYTE PTR [rax+rbp*2+0x65],dh
  404c86:	and    BYTE PTR [rdi+0x72],ch
  404c89:	imul   esp,DWORD PTR [rdi+0x69],0x20200a6e
  404c90:	and    BYTE PTR [rax],ah
  404c92:	push   rcx
  404c93:	(bad)  
  404c94:	imul   edi,DWORD PTR [rdx],0x30
  404c97:	rex.X imul edi,DWORD PTR [rdx],0x30
  404c9b:	and    BYTE PTR [rip+0x6d657220],ch        # 0x6da5bec1
  404ca1:	outs   dx,DWORD PTR ds:[rsi]
  404ca2:	jbe    0x404d09
  404ca4:	and    BYTE PTR [rbx+0x2d],ch
  404ca7:	je     0x404d11
  404ca9:	and    BYTE PTR [rbx+0x6f],ah
  404cac:	outs   dx,DWORD PTR ds:[rsi]
  404cad:	jb     0x404d13
  404caf:	imul   ebp,DWORD PTR [rsi+0x61],0x66206574
  404cb6:	jb     0x404d27
  404cb8:	ins    DWORD PTR es:[rdi],dx
  404cb9:	and    BYTE PTR [rcx+0x6e],ch
  404cbc:	jo     0x404d33
  404cbe:	je     0x404cca
  404cc0:	and    BYTE PTR [rax],ah
  404cc2:	and    BYTE PTR [rax],ah
  404cc4:	push   rcx
  404cc5:	rex.WX outs dx,BYTE PTR ds:[rsi]
  404cc7:	and    BYTE PTR [rax],ah
  404cc9:	sub    eax,0x6e617220
  404cce:	outs   dx,DWORD PTR fs:[rsi]
  404cd0:	ins    DWORD PTR es:[rdi],dx
  404cd1:	ins    BYTE PTR es:[rdi],dx
  404cd2:	jns    0x404cf4
  404cd4:	push   0x6f
  404cd6:	addr32 ins BYTE PTR es:[edi],dx
  404cd9:	and    BYTE PTR gs:[rcx+0x6e],ch
  404cdd:	jo     0x404d54
  404cdf:	je     0x404d01
  404ce1:	imul   ebp,DWORD PTR [rsi+0x20],0x676e6172
  404ce8:	and    BYTE PTR gs:[rbx+0x2d],bl
  404cec:	outs   dx,BYTE PTR ds:[rsi]
  404ced:	sub    al,0x6e
  404cef:	pop    rbp
  404cf0:	or     ah,BYTE PTR [rax]
  404cf2:	and    BYTE PTR [rax],ah
  404cf4:	and    BYTE PTR [rcx+0x52],dl
  404cf7:	outs   dx,BYTE PTR ds:[rsi]
  404cf8:	and    BYTE PTR [rax],ah
  404cfa:	sub    eax,0x6e617220
  404cff:	outs   dx,DWORD PTR fs:[rsi]
  404d01:	ins    DWORD PTR es:[rdi],dx
  404d02:	and    BYTE PTR [rdx+0x6f],dh
  404d05:	je     0x404d68
  404d07:	je     0x404d72
  404d09:	outs   dx,DWORD PTR ds:[rsi]
  404d0a:	outs   dx,BYTE PTR ds:[rsi]
  404d0b:	and    BYTE PTR [rax],ch
  404d0d:	outs   dx,BYTE PTR ds:[rsi]
  404d0e:	cmp    eax,0x64656573
  404d13:	sub    al,0x20
  404d15:	outs   dx,BYTE PTR ds:[rsi]
  404d16:	cmp    eax,0x69742030
  404d1b:	ins    DWORD PTR es:[rdi],dx
  404d1c:	gs sub al,0x20
  404d1f:	outs   dx,BYTE PTR ds:[rsi]
  404d20:	cmp    eax,0x7420312d
  404d25:	imul   ebp,DWORD PTR [rbp+0x65],0x206f6e2f
  404d2c:	jb     0x404d9d
  404d2e:	je     0x404d91
  404d30:	je     0x404d97
  404d32:	sub    DWORD PTR [rdx],ecx
  404d34:	and    eax,0x25732573
  404d39:	jae    0x404d60
  404d3b:	jae    0x404d3d
  404d3d:	add    BYTE PTR [rax],al
  404d3f:	add    BYTE PTR [rax],ah
  404d41:	and    BYTE PTR fs:[rsi+0x20],dh
  404d45:	rex.W and BYTE PTR [rcx+0x62],dl
  404d49:	(bad)  
  404d4a:	and    BYTE PTR [rcx+0x66],dl
  404d4d:	and    BYTE PTR [rcx+0x67],dl
  404d50:	and    BYTE PTR [rcx+0x6d],dl
  404d53:	and    BYTE PTR [rcx+0x72],dl
  404d56:	and    BYTE PTR [rcx+0x75],dl
  404d59:	and    BYTE PTR [rcx+0x76],dl
  404d5c:	and    BYTE PTR [rcx+0x78],dl
  404d5f:	and    BYTE PTR [rcx+0x7a],dl
  404d62:	and    BYTE PTR [rdx+rdx*2+0x20],dl
  404d66:	and    BYTE PTR [r14+0x20],r10b
  404d6a:	rex.RX jo 0x404d8d
  404d6d:	rex.RXB je 0x404d90
  404d70:	push   rcx
  404d71:	xor    BYTE PTR [rax],ah
  404d73:	push   rcx
  404d74:	xor    DWORD PTR [rax],esp
  404d76:	push   rcx
  404d77:	xor    ah,BYTE PTR [rax]
  404d79:	push   rcx
  404d7a:	xor    esp,DWORD PTR [rax]
  404d7c:	push   rcx
  404d7d:	xor    al,0x20
  404d7f:	push   rcx
  404d80:	xor    eax,0x20365120
  404d85:	push   rcx
  404d86:	(bad)  
  404d87:	and    BYTE PTR [rcx+0x38],dl
  404d8a:	and    BYTE PTR [rcx+0x39],dl
  404d8d:	and    BYTE PTR [rax],al
	...
  404dbf:	add    BYTE PTR [rax+0x2f],ch
  404dc2:	add    BYTE PTR [rax],al
	...
  404dcd:	add    BYTE PTR [rax],al
  404dcf:	add    bh,bh
  404dd1:	(bad)  
  404dd2:	(bad)  
  404dd3:	(bad)  
  404dd4:	(bad)  
  404dd5:	(bad)  
  404dd6:	(bad)  
  404dd7:	inc    DWORD PTR [rax]
  404dd9:	add    BYTE PTR [rax],al
  404ddb:	add    BYTE PTR [rax],al
  404ddd:	add    BYTE PTR [rax],al
  404ddf:	add    bh,bh
	...
  404ded:	add    BYTE PTR [rax],al
  404def:	add    BYTE PTR [rdx],al
	...
  404dfd:	add    BYTE PTR [rax],al
  404dff:	add    bh,bh
  404e01:	(bad)  
  404e02:	(bad)  
  404e03:	inc    DWORD PTR [rax]
	...
  404e0d:	add    BYTE PTR [rax],al
  404e0f:	add    al,dl
  404e11:	sub    eax,DWORD PTR [rax+0x0]
  404e14:	add    BYTE PTR [rax],al
  404e16:	add    BYTE PTR [rax],al
  404e18:	loopne 0x404e45
  404e1a:	add    BYTE PTR [rax],al
  404e1d:	add    BYTE PTR [rax],al
  404e1f:	add    BYTE PTR [rdx],dh
  404e21:	movabs ds:0x2b992ddf,al
  404e2a:	add    BYTE PTR [rax],al
  404e2c:	add    BYTE PTR [rax],al
  404e2e:	add    BYTE PTR [rax],al
  404e30:	int    0x5d
  404e32:	and    dl,dl
  404e34:	data16 (bad) 
  404e36:	(bad)  
  404e37:	inc    DWORD PTR [rax]
  404e39:	add    BYTE PTR [rax],al
  404e3b:	add    BYTE PTR [rax],al
  404e3d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	push   rcx
  405001:	js     0x405064
  405003:	movsxd esi,DWORD PTR [rdi+rbx*2+0x6d]
  405007:	gs jb  0x405071
  40500a:	add    BYTE PTR gs:[rax],al
  40500d:	add    BYTE PTR [rax],al
  40500f:	add    BYTE PTR [rcx+0x68],dh
  405012:	jne    0x405080
  405014:	ins    BYTE PTR es:[rdi],dx
  405015:	and    BYTE PTR [rcx+0x6e],ch
  405018:	je     0x40507f
  40501a:	jb     0x40508a
  40501c:	(bad)  
  40501d:	ins    BYTE PTR es:[rdi],dx
  40501e:	and    BYTE PTR [rdi+0x61],dh
  405021:	jb     0x405091
  405023:	imul   ebp,DWORD PTR [rsi+0x67],0x616d2820
  40502a:	imul   ebp,DWORD PTR [rsi+0x29],0x6964203a
  405031:	and    BYTE PTR fs:[rsi+0x6f],ch
  405035:	je     0x405057
  405037:	data16 jb 0x40509f
  40503a:	and    BYTE PTR gs:[rip+0x79622064],ah        # 0x79a270a5
  405041:	je     0x4050a8
  405043:	jae    0x405065
  405045:	outs   dx,DWORD PTR ds:[rsi]
  405046:	data16 and BYTE PTR [rdi+rbp*2+0x6e],ch
  40504b:	and    BYTE PTR [ebp+0x65],ch
  40504f:	ins    DWORD PTR es:[rdi],dx
  405050:	outs   dx,DWORD PTR ds:[rsi]
  405051:	jb     0x4050cc
  405053:	and    BYTE PTR [rax],ch
  405055:	and    eax,0x69702064
  40505a:	movsxd esp,DWORD PTR gs:[rbp+0x73]
  40505e:	sub    DWORD PTR [rdx],ecx
	...
  40506c:	add    BYTE PTR [rax],al
  40506e:	loopne 0x4050af
  405070:	add    BYTE PTR [rbp+0x40],0x0
  405077:	add    BYTE PTR [rax+0x4080],al
  40507d:	add    BYTE PTR [rax],al
  40507f:	add    BYTE PTR [rax+0x19],dl
  405082:	add    BYTE PTR [rax],al
	...
  40508d:	add    BYTE PTR [rax],al
  40508f:	add    BYTE PTR [rcx+0x72],al
  405092:	addr32 jne 0x405102
  405095:	outs   dx,BYTE PTR gs:[rsi]
  405097:	je     0x4050b9
  405099:	outs   dx,DWORD PTR fs:[rsi]
  40509b:	ins    DWORD PTR es:[rdi],dx
  40509c:	(bad)  
  40509d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4050a4:	jb     0x4050c6
  4050a6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4050aa:	rex.B
  4050ab:	rex.WB
  4050ac:	rex.WRX sub QWORD PTR [rax],r8
  4050af:	rex.B jb 0x405119
  4050b2:	jne    0x405121
  4050b4:	outs   dx,BYTE PTR gs:[rsi]
  4050b6:	je     0x4050d8
  4050b8:	jae    0x405123
  4050ba:	outs   dx,BYTE PTR ds:[rsi]
  4050bb:	addr32 jne 0x40512a
  4050be:	(bad)  
  4050bf:	jb     0x40512a
  4050c1:	je     0x40513c
  4050c3:	and    BYTE PTR [rax],ch
  4050c5:	push   rbx
  4050c6:	rex.WB
  4050c7:	rex.RXB
  4050c8:	rex.WRX sub QWORD PTR [rax],r8
  4050cb:	add    BYTE PTR [rax],al
  4050cd:	add    BYTE PTR [rax],al
  4050cf:	add    BYTE PTR [rdi+0x76],cl
  4050d2:	gs jb  0x40513b
  4050d5:	ins    BYTE PTR es:[rdi],dx
  4050d6:	outs   dx,DWORD PTR ds:[rsi]
  4050d7:	ja     0x4050f9
  4050d9:	jb     0x40513c
  4050db:	outs   dx,BYTE PTR ds:[rsi]
  4050dc:	and    BYTE PTR gs:[ebp+0x72],ah
  4050e1:	jb     0x405152
  4050e3:	jb     0x405105
  4050e5:	sub    BYTE PTR [rdi+0x56],cl
  4050e8:	rex.RB push r10
  4050ea:	rex.RX
  4050eb:	rex.WR
  4050ec:	rex.WRXB push r15
  4050ee:	sub    DWORD PTR [rax],eax
  4050f0:	push   rax
  4050f1:	(bad)  
  4050f2:	jb     0x405168
  4050f4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  4050fb:	jae    0x40511d
  4050fd:	outs   dx,DWORD PTR ds:[rsi]
  4050fe:	data16 and BYTE PTR [rbx+0x69],dh
  405102:	outs   dx,BYTE PTR ds:[esi]
  405104:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40510b:	and    BYTE PTR gs:[rax],ch
  40510e:	push   rax
  40510f:	rex.WR
  405110:	rex.WRXB push r11
  405112:	push   rbx
  405113:	sub    DWORD PTR [rax],eax
  405115:	add    BYTE PTR [rax],al
  405117:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40511b:	(bad)  
  40511c:	ins    BYTE PTR es:[rdi],dx
  40511d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405121:	jae    0x405143
  405123:	outs   dx,DWORD PTR ds:[rsi]
  405124:	data16 and BYTE PTR [rbx+0x69],dh
  405128:	outs   dx,BYTE PTR ds:[esi]
  40512a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405131:	and    BYTE PTR gs:[rax],ch
  405134:	push   rsp
  405135:	rex.WR
  405136:	rex.WRXB push r11
  405138:	push   rbx
  405139:	sub    DWORD PTR [rax],eax
  40513b:	add    BYTE PTR [rax],al
  40513d:	add    BYTE PTR [rax],al
  40513f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405143:	and    BYTE PTR [rdx+0x65],dh
  405146:	jae    0x4051bd
  405148:	ins    BYTE PTR es:[rdi],dx
  405149:	je     0x40516b
  40514b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405152:	jae    0x4051c1
  405154:	(bad)  
  405155:	ins    BYTE PTR es:[rdi],dx
  405156:	ins    BYTE PTR es:[rdi],dx
  405157:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40515b:	(bad)  
  40515c:	and    BYTE PTR gs:[rdx+0x65],dh
  405160:	jo     0x4051d4
  405162:	gs jae 0x4051ca
  405165:	outs   dx,BYTE PTR ds:[rsi]
  405166:	je     0x4051cd
  405168:	and    BYTE PTR fs:[rax],ch
  40516b:	push   rbp
  40516c:	rex.WRX
  40516d:	rex.R
  40516e:	rex.RB push r10
  405170:	rex.RX
  405171:	rex.WR
  405172:	rex.WRXB push r15
  405174:	sub    DWORD PTR [rax],eax
  405176:	push   rbp
  405177:	outs   dx,BYTE PTR ds:[rsi]
  405178:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40517c:	outs   dx,BYTE PTR ds:[rsi]
  40517d:	and    BYTE PTR [rbp+0x72],ah
  405180:	jb     0x4051f1
  405182:	jb     0x405184
  405184:	add    BYTE PTR [rax],al
  405186:	add    BYTE PTR [rax],al
  405188:	pop    rdi
  405189:	ins    DWORD PTR es:[rdi],dx
  40518a:	(bad)  
  40518b:	je     0x4051f5
  40518d:	gs jb  0x405202
  405190:	sub    BYTE PTR [rcx],ch
  405192:	cmp    ah,BYTE PTR [rax]
  405194:	and    eax,0x6e692073
  405199:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657a12
  40519f:	sub    al,0x20
  4051a1:	and    eax,0x20202967
  4051a6:	sub    BYTE PTR [rdx+0x65],dh
  4051a9:	je     0x405221
  4051ab:	(bad)  
  4051ac:	ins    BYTE PTR es:[rdi],dx
  4051ad:	cmp    eax,0xa296725
  4051b2:	add    BYTE PTR [rax],al
  4051b4:	ins    BYTE PTR es:[rdi],dx
  4051b5:	leave  
  4051b6:	(bad)  
  4051b7:	jmp    FWORD PTR [rbp+0x1cffffc8]
  4051bd:	leave  
  4051be:	(bad)  
  4051bf:	jmp    FWORD PTR [rcx+rcx*8]
  4051c2:	(bad)  
  4051c3:	(bad)  
  4051c4:	cmp    al,0xc9
  4051c6:	(bad)  
  4051c7:	dec    DWORD PTR [rcx+rcx*8-0x1]
  4051cb:	call   FWORD PTR [rcx+rcx*8-0x1]
  4051cf:	dec    DWORD PTR [rbp+0x69]
  4051d2:	outs   dx,BYTE PTR ds:[rsi]
  4051d3:	addr32 ja 0x405203
  4051d6:	ja     0x40520e
  4051d8:	xor    al,0x20
  4051da:	jb     0x405251
  4051dc:	outs   dx,BYTE PTR ds:[rsi]
  4051dd:	je     0x405248
  4051df:	ins    DWORD PTR es:[rdi],dx
  4051e0:	and    BYTE PTR gs:[rsi+0x61],ah
  4051e4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4051ec:	add    BYTE PTR [rax],al
  4051ee:	add    BYTE PTR [rax],al
  4051f0:	rex.B
  4051f1:	fs fs jb 0x40525a
  4051f5:	jae    0x40526a
  4051f7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8726d
  4051fd:	jae    0x40521f
  4051ff:	outs   dx,BYTE PTR ds:[rsi]
  405200:	outs   dx,DWORD PTR ds:[rsi]
  405201:	and    BYTE PTR [rcx+0x6d],ch
  405204:	(bad)  
  405205:	addr32 gs sub eax,0x74636573
  40520c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405213:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40521a:	jne    0x405281
  40521c:	jb     0x405297
  40521e:	and    BYTE PTR [rsi+0x61],ah
  405221:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405229:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a27293
  40522f:	je     0x405296
  405231:	jae    0x405253
  405233:	(bad)  
  405234:	je     0x405256
  405236:	(bad)  
  405237:	fs fs jb 0x4052a0
  40523b:	jae    0x4052b0
  40523d:	and    BYTE PTR [rip+0x70],ah        # 0x4052b3
  405243:	add    BYTE PTR [rax],al
  405245:	add    BYTE PTR [rax],al
  405247:	add    BYTE PTR [rax],ah
  405249:	and    BYTE PTR [rsi+0x69],dl
  40524c:	jb     0x4052c2
  40524e:	jne    0x4052b1
  405250:	ins    BYTE PTR es:[rdi],dx
  405251:	push   rax
  405252:	jb     0x4052c3
  405254:	je     0x4052bb
  405256:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40525a:	(bad)  
  40525b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405263:	push   0x646f6320
  405268:	and    BYTE PTR gs:[rax],dh
  40526b:	js     0x405292
  40526d:	js     0x40526f
  40526f:	add    BYTE PTR [rax],ah
  405271:	and    BYTE PTR [rbp+0x6e],dl
  405274:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405278:	outs   dx,BYTE PTR ds:[rsi]
  405279:	and    BYTE PTR [rax+0x73],dh
  40527c:	gs jne 0x4052e3
  40527f:	outs   dx,DWORD PTR ds:[rsi]
  405280:	and    BYTE PTR [rdx+0x65],dh
  405283:	ins    BYTE PTR es:[rdi],dx
  405284:	outs   dx,DWORD PTR ds:[rsi]
  405285:	movsxd esp,DWORD PTR [rcx+0x74]
  405288:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40528f:	je     0x405300
  405291:	movsxd ebp,DWORD PTR [rdi+0x6c]
  405294:	and    BYTE PTR [rsi+0x65],dh
  405297:	jb     0x40530c
  405299:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4052a0:	or     al,BYTE PTR [rax]
  4052a2:	add    BYTE PTR [rax],al
  4052a4:	add    BYTE PTR [rax],al
  4052a6:	add    BYTE PTR [rax],al
  4052a8:	and    BYTE PTR [rax],ah
  4052aa:	push   rbp
  4052ab:	outs   dx,BYTE PTR ds:[rsi]
  4052ac:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4052b0:	outs   dx,BYTE PTR ds:[rsi]
  4052b1:	and    BYTE PTR [rax+0x73],dh
  4052b4:	gs jne 0x40531b
  4052b7:	outs   dx,DWORD PTR ds:[rsi]
  4052b8:	and    BYTE PTR [rdx+0x65],dh
  4052bb:	ins    BYTE PTR es:[rdi],dx
  4052bc:	outs   dx,DWORD PTR ds:[rsi]
  4052bd:	movsxd esp,DWORD PTR [rcx+0x74]
  4052c0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4052c7:	and    BYTE PTR [rbx+0x69],dh
  4052ca:	jp     0x405331
  4052cc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8136
	...
  4052de:	add    BYTE PTR [rax],al
  4052e0:	cs jo  0x405347
  4052e3:	(bad)  
  4052e4:	je     0x405347
	...
  4052ee:	add    BYTE PTR [rax],al
  4052f0:	rex sbb eax,0x0
	...
  4052fe:	add    BYTE PTR [rax],al
  405300:	lock rex.WRB
  405302:	add    BYTE PTR [rax],al
	...
  405311:	rex.WRX
  405312:	add    BYTE PTR [rax],al
	...
  40531d:	add    BYTE PTR [rax],al
  40531f:	add    BYTE PTR [rax+0x2f],dl
  405322:	add    BYTE PTR [rax],al
	...
  40532d:	add    BYTE PTR [rax],al
  40532f:	add    BYTE PTR [rax+rbx*2+0x40],al
	...
  40533e:	add    BYTE PTR [rax],al
  405340:	(bad)  
  405341:	pop    rax
  405342:	add    BYTE PTR [rax],al
	...
  40534d:	add    BYTE PTR [rax],al
  40534f:	add    BYTE PTR [rax+0x4050],al
	...
  405361:	add    BYTE PTR [rax+0x0],al
	...
  405370:	rcl    BYTE PTR [rbx+0x40],1
	...
  40537e:	add    BYTE PTR [rax],al
  405380:	clc    
  405381:	xchg   ebx,eax
  405382:	add    BYTE PTR [rax],al
	...
  40538d:	add    BYTE PTR [rax],al
  40538f:	add    BYTE PTR [rax],dl
  405391:	xchg   esp,eax
  405392:	add    BYTE PTR [rax],al
	...
  40539d:	add    BYTE PTR [rax],al
  40539f:	add    BYTE PTR [rax],ch
  4053a1:	xchg   esp,eax
  4053a2:	add    BYTE PTR [rax],al
	...
  4053ad:	add    BYTE PTR [rax],al
  4053af:	add    al,al
  4053b1:	xchg   BYTE PTR [rax+0x0],al
	...
  4053c0:	sub    BYTE PTR [rdx+0x40],cl
	...
  4053ce:	add    BYTE PTR [rax],al
  4053d0:	and    BYTE PTR [rdx+0x40],cl
	...
  4053de:	add    BYTE PTR [rax],al
  4053e0:	adc    BYTE PTR [rdx+0x40],cl
	...
  4053ee:	add    BYTE PTR [rax],al
  4053f0:	sbb    BYTE PTR [rdx+0x40],cl
	...
  4053fe:	add    BYTE PTR [rax],al
  405400:	add    BYTE PTR [rax+0x40],ah
	...
  40540e:	add    BYTE PTR [rax],al
  405410:	adc    BYTE PTR [rax+0x40],ah
	...
  40541e:	add    BYTE PTR [rax],al
  405420:	sbb    BYTE PTR [rax+0x40],ah
	...
  40542e:	add    BYTE PTR [rax],al
  405430:	xor    BYTE PTR [rax+0x40],ah
	...
  40543e:	add    BYTE PTR [rax],al
  405440:	rex add BYTE PTR [rax+0x0],0x0
	...
  40544d:	add    BYTE PTR [rax],al
  40544f:	add    BYTE PTR [rax+0x4086],dl
	...
  40545d:	add    BYTE PTR [rax],al
  40545f:	add    al,ah
  405461:	and    al,BYTE PTR [rax+0x0]
	...
  405470:	xor    BYTE PTR [rdx],bl
  405472:	add    BYTE PTR [rax],al
	...
  40547d:	add    BYTE PTR [rax],al
  40547f:	add    BYTE PTR [rax-0x7a],al
  405482:	add    BYTE PTR [rax],al
	...
  40548d:	add    BYTE PTR [rax],al
  40548f:	add    BYTE PTR [rax-0x7a],dh
  405492:	add    BYTE PTR [rax],al
	...
  40549d:	add    BYTE PTR [rax],al
  40549f:	add    BYTE PTR [rax-0x80],dl
  4054a2:	add    BYTE PTR [rax],al
	...
  4054ad:	add    BYTE PTR [rax],al
  4054af:	add    BYTE PTR [rax-0x7a],bl
  4054b2:	add    BYTE PTR [rax],al
	...
  4054bd:	add    BYTE PTR [rax],al
  4054bf:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  4054cf:	add    BYTE PTR [rax-0x7a],dl
  4054d2:	add    BYTE PTR [rax],al
	...
  4054dd:	add    BYTE PTR [rax],al
  4054df:	add    al,dl
  4054e1:	xchg   edx,eax
  4054e2:	add    BYTE PTR [rax],al
	...
  4054ed:	add    BYTE PTR [rax],al
  4054ef:	add    al,ch
  4054f1:	xchg   edx,eax
  4054f2:	add    BYTE PTR [rax],al
	...
  4054fd:	add    BYTE PTR [rax],al
  4054ff:	add    BYTE PTR [rdi+0x43],al
  405502:	rex.XB cmp spl,BYTE PTR [r8]
  405505:	sub    BYTE PTR [rdi+0x4e],al
  405508:	push   rbp
  405509:	sub    DWORD PTR [rax],esp
  40550b:	xor    al,0x2e
  40550d:	cmp    DWORD PTR [rsi],ebp
  40550f:	xor    al,0x0
	...
  40551d:	add    BYTE PTR [rax],al
  40551f:	add    BYTE PTR [rdi+0x43],al
  405522:	rex.XB cmp spl,BYTE PTR [r8]
  405525:	sub    BYTE PTR [rdi+0x4e],al
  405528:	push   rbp
  405529:	sub    DWORD PTR [rax],esp
  40552b:	xor    al,0x2e
  40552d:	cmp    DWORD PTR [rsi],ebp
  40552f:	xor    al,0x0
	...
  40553d:	add    BYTE PTR [rax],al
  40553f:	add    BYTE PTR [rdi+0x43],al
  405542:	rex.XB cmp spl,BYTE PTR [r8]
  405545:	sub    BYTE PTR [rdi+0x4e],al
  405548:	push   rbp
  405549:	sub    DWORD PTR [rax],esp
  40554b:	xor    al,0x2e
  40554d:	cmp    DWORD PTR [rsi],ebp
  40554f:	xor    al,0x0
	...
  40555d:	add    BYTE PTR [rax],al
  40555f:	add    BYTE PTR [rdi+0x43],al
  405562:	rex.XB cmp spl,BYTE PTR [r8]
  405565:	sub    BYTE PTR [rdi+0x4e],al
  405568:	push   rbp
  405569:	sub    DWORD PTR [rax],esp
  40556b:	xor    al,0x2e
  40556d:	cmp    DWORD PTR [rsi],ebp
  40556f:	xor    al,0x0
	...
  40557d:	add    BYTE PTR [rax],al
  40557f:	add    BYTE PTR [rdi+0x43],al
  405582:	rex.XB cmp spl,BYTE PTR [r8]
  405585:	sub    BYTE PTR [rdi+0x4e],al
  405588:	push   rbp
  405589:	sub    DWORD PTR [rax],esp
  40558b:	xor    al,0x2e
  40558d:	cmp    DWORD PTR [rsi],ebp
  40558f:	xor    al,0x0
	...
  40559d:	add    BYTE PTR [rax],al
  40559f:	add    BYTE PTR [rdi+0x43],al
  4055a2:	rex.XB cmp spl,BYTE PTR [r8]
  4055a5:	sub    BYTE PTR [rdi+0x4e],al
  4055a8:	push   rbp
  4055a9:	sub    DWORD PTR [rax],esp
  4055ab:	xor    al,0x2e
  4055ad:	cmp    DWORD PTR [rsi],ebp
  4055af:	xor    al,0x0
	...
  4055bd:	add    BYTE PTR [rax],al
  4055bf:	add    BYTE PTR [rdi+0x43],al
  4055c2:	rex.XB cmp spl,BYTE PTR [r8]
  4055c5:	sub    BYTE PTR [rdi+0x4e],al
  4055c8:	push   rbp
  4055c9:	sub    DWORD PTR [rax],esp
  4055cb:	xor    al,0x2e
  4055cd:	cmp    DWORD PTR [rsi],ebp
  4055cf:	xor    al,0x0
	...
  4055dd:	add    BYTE PTR [rax],al
  4055df:	add    BYTE PTR [rdi+0x43],al
  4055e2:	rex.XB cmp spl,BYTE PTR [r8]
  4055e5:	sub    BYTE PTR [rdi+0x4e],al
  4055e8:	push   rbp
  4055e9:	sub    DWORD PTR [rax],esp
  4055eb:	xor    al,0x2e
  4055ed:	cmp    DWORD PTR [rsi],ebp
  4055ef:	xor    al,0x0
	...
  4055fd:	add    BYTE PTR [rax],al
  4055ff:	add    BYTE PTR [rdi+0x43],al
  405602:	rex.XB cmp spl,BYTE PTR [r8]
  405605:	sub    BYTE PTR [rdi+0x4e],al
  405608:	push   rbp
  405609:	sub    DWORD PTR [rax],esp
  40560b:	xor    al,0x2e
  40560d:	cmp    DWORD PTR [rsi],ebp
  40560f:	xor    al,0x0
	...
  40561d:	add    BYTE PTR [rax],al
  40561f:	add    BYTE PTR [rdi+0x43],al
  405622:	rex.XB cmp spl,BYTE PTR [r8]
  405625:	sub    BYTE PTR [rdi+0x4e],al
  405628:	push   rbp
  405629:	sub    DWORD PTR [rax],esp
  40562b:	xor    al,0x2e
  40562d:	cmp    DWORD PTR [rsi],ebp
  40562f:	xor    al,0x0
	...
  40563d:	add    BYTE PTR [rax],al
  40563f:	add    BYTE PTR [rdi+0x43],al
  405642:	rex.XB cmp spl,BYTE PTR [r8]
  405645:	sub    BYTE PTR [rdi+0x4e],al
  405648:	push   rbp
  405649:	sub    DWORD PTR [rax],esp
  40564b:	xor    al,0x2e
  40564d:	cmp    DWORD PTR [rsi],ebp
  40564f:	xor    al,0x0
	...
  40565d:	add    BYTE PTR [rax],al
  40565f:	add    BYTE PTR [rdi+0x43],al
  405662:	rex.XB cmp spl,BYTE PTR [r8]
  405665:	sub    BYTE PTR [rdi+0x4e],al
  405668:	push   rbp
  405669:	sub    DWORD PTR [rax],esp
  40566b:	xor    al,0x2e
  40566d:	cmp    DWORD PTR [rsi],ebp
  40566f:	xor    al,0x0
	...
  40567d:	add    BYTE PTR [rax],al
  40567f:	add    BYTE PTR [rdi+0x43],al
  405682:	rex.XB cmp spl,BYTE PTR [r8]
  405685:	sub    BYTE PTR [rdi+0x4e],al
  405688:	push   rbp
  405689:	sub    DWORD PTR [rax],esp
  40568b:	xor    al,0x2e
  40568d:	cmp    DWORD PTR [rsi],ebp
  40568f:	xor    al,0x0
	...
  40569d:	add    BYTE PTR [rax],al
  40569f:	add    BYTE PTR [rdi+0x43],al
  4056a2:	rex.XB cmp spl,BYTE PTR [r8]
  4056a5:	sub    BYTE PTR [rdi+0x4e],al
  4056a8:	push   rbp
  4056a9:	sub    DWORD PTR [rax],esp
  4056ab:	xor    al,0x2e
  4056ad:	cmp    DWORD PTR [rsi],ebp
  4056af:	xor    al,0x0
	...
  4056bd:	add    BYTE PTR [rax],al
  4056bf:	add    BYTE PTR [rdi+0x43],al
  4056c2:	rex.XB cmp spl,BYTE PTR [r8]
  4056c5:	sub    BYTE PTR [rdi+0x4e],al
  4056c8:	push   rbp
  4056c9:	sub    DWORD PTR [rax],esp
  4056cb:	xor    al,0x2e
  4056cd:	cmp    DWORD PTR [rsi],ebp
  4056cf:	xor    al,0x0
	...
  4056dd:	add    BYTE PTR [rax],al
  4056df:	add    BYTE PTR [rdi+0x43],al
  4056e2:	rex.XB cmp spl,BYTE PTR [r8]
  4056e5:	sub    BYTE PTR [rdi+0x4e],al
  4056e8:	push   rbp
  4056e9:	sub    DWORD PTR [rax],esp
  4056eb:	xor    al,0x2e
  4056ed:	cmp    DWORD PTR [rsi],ebp
  4056ef:	xor    al,0x0
	...
  4056fd:	add    BYTE PTR [rax],al
  4056ff:	add    BYTE PTR [rdi+0x43],al
  405702:	rex.XB cmp spl,BYTE PTR [r8]
  405705:	sub    BYTE PTR [rdi+0x4e],al
  405708:	push   rbp
  405709:	sub    DWORD PTR [rax],esp
  40570b:	xor    al,0x2e
  40570d:	cmp    DWORD PTR [rsi],ebp
  40570f:	xor    al,0x0
	...
  40571d:	add    BYTE PTR [rax],al
  40571f:	add    BYTE PTR [rdi+0x43],al
  405722:	rex.XB cmp spl,BYTE PTR [r8]
  405725:	sub    BYTE PTR [rdi+0x4e],al
  405728:	push   rbp
  405729:	sub    DWORD PTR [rax],esp
  40572b:	xor    al,0x2e
  40572d:	cmp    DWORD PTR [rsi],ebp
  40572f:	xor    al,0x0
	...
  40573d:	add    BYTE PTR [rax],al
  40573f:	add    BYTE PTR [rdi+0x43],al
  405742:	rex.XB cmp spl,BYTE PTR [r8]
  405745:	sub    BYTE PTR [rdi+0x4e],al
  405748:	push   rbp
  405749:	sub    DWORD PTR [rax],esp
  40574b:	xor    al,0x2e
  40574d:	cmp    DWORD PTR [rsi],ebp
  40574f:	xor    al,0x0
	...
  40575d:	add    BYTE PTR [rax],al
  40575f:	add    BYTE PTR [rdi+0x43],al
  405762:	rex.XB cmp spl,BYTE PTR [r8]
  405765:	sub    BYTE PTR [rdi+0x4e],al
  405768:	push   rbp
  405769:	sub    DWORD PTR [rax],esp
  40576b:	xor    al,0x2e
  40576d:	cmp    DWORD PTR [rsi],ebp
  40576f:	xor    al,0x0
	...
  40577d:	add    BYTE PTR [rax],al
  40577f:	add    BYTE PTR [rdi+0x43],al
  405782:	rex.XB cmp spl,BYTE PTR [r8]
  405785:	sub    BYTE PTR [rdi+0x4e],al
  405788:	push   rbp
  405789:	sub    DWORD PTR [rax],esp
  40578b:	xor    al,0x2e
  40578d:	cmp    DWORD PTR [rsi],ebp
  40578f:	xor    al,0x0
	...
  40579d:	add    BYTE PTR [rax],al
  40579f:	add    BYTE PTR [rdi+0x43],al
  4057a2:	rex.XB cmp spl,BYTE PTR [r8]
  4057a5:	sub    BYTE PTR [rdi+0x4e],al
  4057a8:	push   rbp
  4057a9:	sub    DWORD PTR [rax],esp
  4057ab:	xor    al,0x2e
  4057ad:	cmp    DWORD PTR [rsi],ebp
  4057af:	xor    al,0x0
	...
  4057bd:	add    BYTE PTR [rax],al
  4057bf:	add    BYTE PTR [rdi+0x43],al
  4057c2:	rex.XB cmp spl,BYTE PTR [r8]
  4057c5:	sub    BYTE PTR [rdi+0x4e],al
  4057c8:	push   rbp
  4057c9:	sub    DWORD PTR [rax],esp
  4057cb:	xor    al,0x2e
  4057cd:	cmp    DWORD PTR [rsi],ebp
  4057cf:	xor    al,0x0
	...
  4057dd:	add    BYTE PTR [rax],al
  4057df:	add    BYTE PTR [rdi+0x43],al
  4057e2:	rex.XB cmp spl,BYTE PTR [r8]
  4057e5:	sub    BYTE PTR [rdi+0x4e],al
  4057e8:	push   rbp
  4057e9:	sub    DWORD PTR [rax],esp
  4057eb:	xor    al,0x2e
  4057ed:	cmp    DWORD PTR [rsi],ebp
  4057ef:	xor    al,0x0
	...
  4057fd:	add    BYTE PTR [rax],al
  4057ff:	add    BYTE PTR [rdi+0x43],al
  405802:	rex.XB cmp spl,BYTE PTR [r8]
  405805:	sub    BYTE PTR [rdi+0x4e],al
  405808:	push   rbp
  405809:	sub    DWORD PTR [rax],esp
  40580b:	xor    al,0x2e
  40580d:	cmp    DWORD PTR [rsi],ebp
  40580f:	xor    al,0x0
	...
  40581d:	add    BYTE PTR [rax],al
  40581f:	add    BYTE PTR [rdi+0x43],al
  405822:	rex.XB cmp spl,BYTE PTR [r8]
  405825:	sub    BYTE PTR [rdi+0x4e],al
  405828:	push   rbp
  405829:	sub    DWORD PTR [rax],esp
  40582b:	xor    al,0x2e
  40582d:	cmp    DWORD PTR [rsi],ebp
  40582f:	xor    al,0x0
	...
  40583d:	add    BYTE PTR [rax],al
  40583f:	add    BYTE PTR [rdi+0x43],al
  405842:	rex.XB cmp spl,BYTE PTR [r8]
  405845:	sub    BYTE PTR [rdi+0x4e],al
  405848:	push   rbp
  405849:	sub    DWORD PTR [rax],esp
  40584b:	xor    al,0x2e
  40584d:	cmp    DWORD PTR [rsi],ebp
  40584f:	xor    al,0x0
	...
  405865:	add    BYTE PTR [rax],al
  405867:	add    BYTE PTR [rcx],al
  405869:	add    BYTE PTR [rax],al
  40586b:	add    al,dl
  40586d:	xchg   edx,eax
  40586e:	add    BYTE PTR [rax],al
  405870:	loopne 0x4058c6
  405872:	add    BYTE PTR [rax],al
  405874:	add    BYTE PTR [rax],al
  405877:	add    al,ch
  405879:	xchg   edx,eax
  40587a:	add    BYTE PTR [rax],al
  40587c:	lock push rsp
  40587e:	add    BYTE PTR [rax],al
  405880:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax+0x37000015],dl
  40604d:	(bad)  
  40604e:	add    BYTE PTR [rax],al
  406050:	jl     0x4060c2
  406052:	add    BYTE PTR [rax],al
  406054:	rex (bad) 
  406056:	add    BYTE PTR [rax],al
  406058:	pop    rcx
  406059:	(bad)  
  40605a:	add    BYTE PTR [rax],al
  40605c:	test   BYTE PTR [rax+0x0],dh
  40605f:	add    BYTE PTR [rax+0x16],ah
  406062:	add    BYTE PTR [rax],al
  406064:	xchg   ebp,eax
  406065:	(bad)  
  406066:	add    BYTE PTR [rax],al
  406068:	mov    WORD PTR [rax+0x0],?
  40606b:	add    BYTE PTR [rax-0xaffffea],ah
  406071:	(bad)  
  406072:	add    BYTE PTR [rax],al
  406074:	xchg   esp,eax
  406075:	jo     0x406077
  406077:	add    BYTE PTR [rax],al
  406079:	(bad)  
  40607a:	add    BYTE PTR [rax],al
  40607c:	sbb    al,0x17
  40607e:	add    BYTE PTR [rax],al
  406080:	movabs al,ds:0x2a00001720000070
  406089:	(bad)  
  40608a:	add    BYTE PTR [rax],al
  40608c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40608d:	jo     0x40608f
  40608f:	add    BYTE PTR [rax],dh
  406091:	(bad)  
  406092:	add    BYTE PTR [rax],al
  406094:	xor    edx,DWORD PTR [rdi]
  406096:	add    BYTE PTR [rax],al
  406098:	test   al,0x70
  40609a:	add    BYTE PTR [rax],al
  40609c:	rex (bad) 
  40609e:	add    BYTE PTR [rax],al
  4060a0:	(bad)  
  4060a1:	sbb    BYTE PTR [rax],al
  4060a3:	add    BYTE PTR [rax+rsi*2+0x18200000],ch
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	sbb    ebx,DWORD PTR [rcx]
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	mov    esp,0x20000070
  4060b5:	sbb    DWORD PTR [rax],eax
  4060b7:	add    BYTE PTR [rdi+0x19],cl
  4060ba:	add    BYTE PTR [rax],al
  4060bc:	int3   
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax+0x19],dl
  4060c2:	add    BYTE PTR [rax],al
  4060c4:	mov    ecx,0xd4000019
  4060c9:	jo     0x4060cb
  4060cb:	add    al,al
  4060cd:	sbb    DWORD PTR [rax],eax
  4060cf:	add    bl,al
  4060d1:	sbb    DWORD PTR [rax],eax
  4060d3:	add    al,ah
  4060d5:	jo     0x4060d7
  4060d7:	add    al,dl
  4060d9:	sbb    DWORD PTR [rax],eax
  4060db:	add    BYTE PTR [rcx],dl
  4060dd:	sbb    al,BYTE PTR [rax]
  4060df:	add    ah,ah
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax],ah
  4060e5:	sbb    al,BYTE PTR [rax]
  4060e7:	add    BYTE PTR [rdx+rbx*1],ch
  4060ea:	add    BYTE PTR [rax],al
  4060ec:	in     al,dx
  4060ed:	jo     0x4060ef
  4060ef:	add    BYTE PTR [rax],dh
  4060f1:	sbb    al,BYTE PTR [rax]
  4060f3:	add    BYTE PTR [rbx+rbx*1],ch
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	lock jo 0x4060fb
  4060fb:	add    BYTE PTR [rax],dh
  4060fd:	sbb    eax,DWORD PTR [rax]
  4060ff:	add    BYTE PTR [rbx],dh
  406101:	sbb    eax,DWORD PTR [rax]
  406103:	add    BYTE PTR [rax],cl
  406105:	jno    0x406107
  406107:	add    BYTE PTR [rax+0x1b],al
  40610a:	add    BYTE PTR [rax],al
  40610c:	sbb    r8d,DWORD PTR [rax]
  40610f:	add    BYTE PTR [rcx+rsi*2],cl
  406112:	add    BYTE PTR [rax],al
  406114:	push   rax
  406115:	sbb    eax,DWORD PTR [rax]
  406117:	add    BYTE PTR [rbx+rbx*1+0x0],dl
  40611b:	add    BYTE PTR [rax],dl
  40611d:	jno    0x40611f
  40611f:	add    BYTE PTR [rax+0x1b],ah
  406122:	add    BYTE PTR [rax],al
  406124:	rcr    DWORD PTR [rbx],0x0
  406127:	add    BYTE PTR [rcx+rsi*2],dl
  40612a:	add    BYTE PTR [rax],al
  40612c:	rcr    BYTE PTR [rbx],1
  40612e:	add    BYTE PTR [rax],al
  406130:	xor    bl,BYTE PTR [rip+0x71200000]        # 0x71606136
  406136:	add    BYTE PTR [rax],al
  406138:	rex sbb eax,0x20390000
  40613e:	add    BYTE PTR [rax],al
  406140:	xor    al,0x71
  406142:	add    BYTE PTR [rax],al
  406144:	and    BYTE PTR [rax],al
  406147:	add    dh,ah
  406149:	and    DWORD PTR [rax],eax
  40614b:	add    BYTE PTR [rcx+rsi*2+0x0],cl
  40614f:	add    al,dh
  406151:	and    DWORD PTR [rax],eax
  406153:	add    ah,bl
  406155:	and    al,BYTE PTR [rax]
  406157:	add    BYTE PTR [rcx+rsi*2+0x0],dl
  40615b:	add    al,ah
  40615d:	and    al,BYTE PTR [rax]
  40615f:	add    BYTE PTR [rax+0x64000024],bl
  406165:	jno    0x406167
  406167:	add    BYTE PTR [rax+0xd000024],ah
  40616d:	and    eax,0x716c0000
  406172:	add    BYTE PTR [rax],al
  406174:	adc    BYTE PTR [rip+0x258f0000],ah        # 0x25cf617a
  40617a:	add    BYTE PTR [rax],al
  40617c:	jl     0x4061ef
  40617e:	add    BYTE PTR [rax],al
  406180:	nop
  406181:	and    eax,0x262f0000
  406186:	add    BYTE PTR [rax],al
  406188:	mov    BYTE PTR [rcx+0x0],dh
  40618b:	add    BYTE PTR [rax],dh
  40618d:	add    BYTE PTR es:[rax],al
  406190:	or     ah,BYTE PTR [rdi]
  406192:	add    BYTE PTR [rax],al
  406194:	nop
  406195:	jno    0x406197
  406197:	add    BYTE PTR [rax],dl
  406199:	(bad)  
  40619a:	add    BYTE PTR [rax],al
  40619c:	(bad)  
  40619d:	(bad)  
  40619e:	add    BYTE PTR [rax],al
  4061a0:	cwde   
  4061a1:	jno    0x4061a3
  4061a3:	add    BYTE PTR [rax],dh
  4061a5:	(bad)  
  4061a6:	add    BYTE PTR [rax],al
  4061a8:	rex.X (bad) 
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	pushf  
  4061ad:	jno    0x4061af
  4061af:	add    BYTE PTR [rax+0x27],dl
  4061b2:	add    BYTE PTR [rax],al
  4061b4:	xchg   ebp,eax
  4061b5:	(bad)  
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	movabs al,ds:0x3e000027a0000071
  4061c1:	sub    BYTE PTR [rax],al
  4061c3:	add    BYTE PTR [rcx+rsi*2+0x28400000],ah
  4061ca:	add    BYTE PTR [rax],al
  4061cc:	sub    DWORD PTR [rax],0x0
  4061cf:	add    BYTE PTR [rax-0x6fffff8f],dh
  4061d5:	sub    BYTE PTR [rax],al
  4061d7:	add    bl,cl
  4061d9:	sub    BYTE PTR [rax],al
  4061db:	add    BYTE PTR [rcx+rsi*2+0x28d00000],bh
  4061e2:	add    BYTE PTR [rax],al
  4061e4:	pop    rsi
  4061e5:	sub    DWORD PTR [rax],eax
  4061e7:	add    ah,al
  4061e9:	jno    0x4061eb
  4061eb:	add    BYTE PTR [rax+0x29],ah
  4061ee:	add    BYTE PTR [rax],al
  4061f0:	cwde   
  4061f1:	sub    DWORD PTR [rax],eax
  4061f3:	add    al,dl
  4061f5:	jno    0x4061f7
  4061f7:	add    BYTE PTR [rax-0xaffffd7],ah
  4061fd:	sub    DWORD PTR [rax],eax
  4061ff:	add    ah,bl
  406201:	jno    0x406203
  406203:	add    BYTE PTR [rax],al
  406205:	sub    al,BYTE PTR [rax]
  406207:	add    BYTE PTR [rsi-0x17ffffd6],ch
  40620d:	jno    0x40620f
  40620f:	add    al,dl
  406211:	sub    eax,DWORD PTR [rax]
  406213:	add    al,bl
  406215:	sub    eax,DWORD PTR [rax]
  406217:	add    al,bh
  406219:	jno    0x40621b
  40621b:	add    al,ah
  40621d:	sub    eax,DWORD PTR [rax]
  40621f:	add    bl,ch
  406221:	sub    eax,DWORD PTR [rax]
  406223:	add    ah,bh
  406225:	jno    0x406227
  406227:	add    BYTE PTR [rax+0x4d00002c],dh
  40622d:	(bad)  
  40622e:	add    BYTE PTR [rax],al
  406230:	.byte 0x68
  406231:	jo     0x406233
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	shr    BYTE PTR [rbx],0x0
  407033:	add    BYTE PTR [rcx],al
  407035:	add    BYTE PTR [rax],al
  407037:	add    ah,dl
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    al,ah
  407041:	and    al,BYTE PTR [rax]
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	shr    BYTE PTR [rbx],0x0
  407053:	add    BYTE PTR [rcx],al
  407055:	add    BYTE PTR [rax],al
  407057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40705e:	add    BYTE PTR [rax],al
  407060:	loopne 0x407084
  407062:	add    BYTE PTR [rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rdi],ecx
  40706a:	or     BYTE PTR [rip+0x30bc20f],al        # 0x34c327f
  407070:	or     BYTE PTR [rax],dh
  407072:	(bad)  
  407073:	(bad)  
  407074:	(bad)  
  407075:	jo     0x40707c
  407077:	rol    BYTE PTR [rbx],0xd0
  40707a:	add    DWORD PTR [rax+0x1],edx
  40707d:	add    eax,0x52050002
  407082:	add    DWORD PTR [rax],esi
  407084:	add    DWORD PTR [rcx+rax*1],eax
  407087:	add    BYTE PTR [rdx+rax*2],al
  40708a:	add    BYTE PTR [rax],al
  40708c:	add    DWORD PTR [rcx+rax*1],eax
  40708f:	add    BYTE PTR [rdx+rax*2],al
  407092:	add    BYTE PTR [rax],al
  407094:	add    DWORD PTR [rsi],eax
  407096:	add    eax,DWORD PTR [rax]
  407098:	(bad)  
  407099:	rex.X add sil,BYTE PTR [rax]
  40709c:	add    DWORD PTR [rax+0x0],esp
  40709f:	add    BYTE PTR [rcx],al
  4070a1:	add    BYTE PTR [rax],al
  4070a3:	add    BYTE PTR [rcx],al
  4070a5:	add    BYTE PTR [rax],al
  4070a7:	add    BYTE PTR [rcx],al
  4070a9:	add    BYTE PTR [rax],al
  4070ab:	add    BYTE PTR [rcx],al
  4070ad:	or     al,BYTE PTR [rsi]
  4070af:	add    BYTE PTR [rdx],cl
  4070b1:	jb     0x4070b9
  4070b3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07519
  4070b9:	push   rax
  4070ba:	add    al,al
  4070bc:	add    DWORD PTR [rdx],ecx
  4070be:	add    eax,0x6d20a05
  4070c3:	add    eax,DWORD PTR [rbx]
  4070c5:	xor    BYTE PTR [rdx],al
  4070c7:	(bad)  
  4070c8:	add    DWORD PTR [rax+0x0],edx
  4070cb:	add    BYTE PTR [rcx],al
  4070cd:	add    al,0x1
  4070cf:	add    BYTE PTR [rdx+rax*2],al
  4070d2:	add    BYTE PTR [rax],al
  4070d4:	add    DWORD PTR [rsi],eax
  4070d6:	add    eax,DWORD PTR [rax]
  4070d8:	(bad)  
  4070d9:	rex.X add sil,BYTE PTR [rax]
  4070dc:	add    DWORD PTR [rax+0x0],esp
  4070df:	add    BYTE PTR [rcx],al
  4070e1:	add    BYTE PTR [rax],al
  4070e3:	add    BYTE PTR [rcx],al
  4070e5:	add    al,0x1
  4070e7:	add    BYTE PTR [rdx+riz*4],al
  4070ea:	add    BYTE PTR [rax],al
  4070ec:	add    DWORD PTR [rax],eax
  4070ee:	add    BYTE PTR [rax],al
  4070f0:	add    DWORD PTR [rsi],edx
  4070f2:	or     DWORD PTR [rax],eax
  4070f4:	(bad)  
  4070f5:	mov    BYTE PTR [rsi],al
  4070f7:	add    BYTE PTR [rax],dl
  4070f9:	js     0x407100
  4070fb:	add    BYTE PTR [rbx],cl
  4070fd:	push   0xffffffffe2060004
  407102:	add    dh,BYTE PTR [rax]
  407104:	add    DWORD PTR [rax+0x0],esp
  407107:	add    BYTE PTR [rcx],al
  407109:	add    BYTE PTR [rax],al
  40710b:	add    BYTE PTR [rcx],al
  40710d:	add    BYTE PTR [rax],al
  40710f:	add    BYTE PTR [rcx],al
  407111:	add    BYTE PTR [rax],al
  407113:	add    BYTE PTR [rcx],al
  407115:	(bad)  
  407116:	add    eax,DWORD PTR [rax]
  407118:	(bad)  
  407119:	(bad)  
  40711b:	xor    BYTE PTR [rcx],al
  40711d:	(bad)  
  40711e:	add    BYTE PTR [rax],al
  407120:	add    DWORD PTR [rdi+rax*1],ecx
  407123:	add    BYTE PTR [rdx+riz*4],cl
  407126:	or     BYTE PTR [rax],dh
  407128:	(bad)  
  407129:	(bad)  
  40712a:	(bad)  
  40712b:	jo     0x407132
  40712d:	push   rax
  40712e:	add    al,0xc0
  407130:	add    dl,al
  407132:	add    BYTE PTR [rax],al
  407134:	add    DWORD PTR [rcx],edx
  407136:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e234d
  40713c:	or     dh,BYTE PTR [rax]
  40713e:	or     DWORD PTR [rax+0x8],esp
  407141:	jo     0x40714a
  407143:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220751a
  40714a:	add    BYTE PTR [rax],al
  40714c:	add    DWORD PTR [rcx+rax*1],eax
  40714f:	add    BYTE PTR [rdx+rax*2],al
  407152:	add    BYTE PTR [rax],al
  407154:	add    DWORD PTR [rdx],ecx
  407156:	(bad)  
  407157:	add    BYTE PTR [rdx],cl
  407159:	xor    al,BYTE PTR [rsi]
  40715b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075c1
  407161:	push   rax
  407162:	add    al,al
  407164:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245716c
  40716a:	add    DWORD PTR [rax],esi
  40716c:	add    DWORD PTR [rax],ecx
  40716e:	add    eax,0x4420800
  407173:	xor    BYTE PTR [rbx],al
  407175:	(bad)  
  407176:	add    dh,BYTE PTR [rax+0x1]
  407179:	push   rax
  40717a:	add    BYTE PTR [rax],al
  40717c:	add    DWORD PTR [rdi],eax
  40717e:	add    al,0x0
  407180:	(bad)  
  407181:	xor    al,BYTE PTR [rbx]
  407183:	xor    BYTE PTR [rdx],al
  407185:	(bad)  
  407186:	add    DWORD PTR [rax+0x1],esi
  407189:	add    eax,0x32050002
  40718e:	add    DWORD PTR [rax],esi
  407190:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457198
  407196:	add    DWORD PTR [rax],esi
  407198:	add    DWORD PTR [rax],eax
  40719a:	add    BYTE PTR [rax],al
  40719c:	add    DWORD PTR [rax],eax
  40719e:	add    BYTE PTR [rax],al
  4071a0:	add    DWORD PTR [rax],eax
  4071a2:	add    BYTE PTR [rax],al
  4071a4:	add    DWORD PTR [rdi],eax
  4071a6:	add    al,0x0
  4071a8:	(bad)  
  4071a9:	xor    al,BYTE PTR [rbx]
  4071ab:	xor    BYTE PTR [rdx],al
  4071ad:	(bad)  
  4071ae:	add    DWORD PTR [rax+0x1],esi
  4071b1:	(bad)  
  4071b2:	add    eax,DWORD PTR [rax]
  4071b4:	(bad)  
  4071b5:	rex.X add sil,BYTE PTR [rax]
  4071b8:	add    DWORD PTR [rax+0x0],esp
  4071bb:	add    BYTE PTR [rcx],al
  4071bd:	add    eax,0x32050002
  4071c2:	add    DWORD PTR [rax],esi
  4071c4:	add    DWORD PTR [rdi],eax
  4071c6:	add    al,0x0
  4071c8:	(bad)  
  4071c9:	xor    al,BYTE PTR [rbx]
  4071cb:	xor    BYTE PTR [rdx],al
  4071cd:	(bad)  
  4071ce:	add    DWORD PTR [rax+0x1],esi
  4071d1:	(bad)  
  4071d2:	add    eax,DWORD PTR [rax]
  4071d4:	(bad)  
  4071d5:	rex.X add sil,BYTE PTR [rax]
  4071d8:	add    DWORD PTR [rax+0x0],esp
  4071db:	add    BYTE PTR [rcx],al
  4071dd:	(bad)  
  4071de:	add    eax,DWORD PTR [rax]
  4071e0:	(bad)  
  4071e1:	rex.X add sil,BYTE PTR [rax]
  4071e4:	add    DWORD PTR [rax+0x0],esp
  4071e7:	add    BYTE PTR [rcx],al
  4071e9:	or     BYTE PTR [rip+0x4420800],al        # 0x48279ef
  4071ef:	xor    BYTE PTR [rbx],al
  4071f1:	(bad)  
  4071f2:	add    dh,BYTE PTR [rax+0x1]
  4071f5:	push   rax
  4071f6:	add    BYTE PTR [rax],al
  4071f8:	add    DWORD PTR [rax],eax
  4071fa:	add    BYTE PTR [rax],al
  4071fc:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	push   rax
  409001:	nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	or     al,0x99
  40900e:	add    BYTE PTR [rax],al
  409010:	adc    BYTE PTR [rdx-0x6f380000],0x0
	...
  40901f:	add    BYTE PTR [rax-0x67],bh
  409022:	add    BYTE PTR [rax],al
  409024:	clc    
  409025:	xchg   edx,eax
  409026:	add    BYTE PTR [rax],al
  409028:	mov    BYTE PTR [rcx+0x0],dl
  40902e:	add    BYTE PTR [rax],al
  409030:	add    BYTE PTR [rax],al
  409032:	add    BYTE PTR [rax],al
  409034:	add    BYTE PTR [rdx-0x6c480000],bl
	...
  40904e:	add    BYTE PTR [rax],al
  409050:	mov    al,0x94
  409052:	add    BYTE PTR [rax],al
  409054:	add    BYTE PTR [rax],al
  409056:	add    BYTE PTR [rax],al
  409058:	(bad)  
  409059:	xchg   esp,eax
  40905a:	add    BYTE PTR [rax],al
  40905c:	add    BYTE PTR [rax],al
  40905e:	add    BYTE PTR [rax],al
  409060:	fcom   DWORD PTR [rax+rax*1+0x0]
  409067:	add    al,ch
  409069:	xchg   esp,eax
  40906a:	add    BYTE PTR [rax],al
  40906c:	add    BYTE PTR [rax],al
  40906e:	add    BYTE PTR [rax],al
  409070:	clc    
  409071:	xchg   esp,eax
  409072:	add    BYTE PTR [rax],al
  409074:	add    BYTE PTR [rax],al
  409076:	add    BYTE PTR [rax],al
  409078:	add    al,0x95
  40907a:	add    BYTE PTR [rax],al
  40907c:	add    BYTE PTR [rax],al
  40907e:	add    BYTE PTR [rax],al
  409080:	adc    BYTE PTR [rbp+0x0],dl
  409086:	add    BYTE PTR [rax],al
  409088:	and    BYTE PTR [rbp+0x0],dl
  40908e:	add    BYTE PTR [rax],al
  409090:	xor    al,0x95
  409092:	add    BYTE PTR [rax],al
  409094:	add    BYTE PTR [rax],al
  409096:	add    BYTE PTR [rax],al
  409098:	rex xchg ebp,eax
  40909a:	add    BYTE PTR [rax],al
  40909c:	add    BYTE PTR [rax],al
  40909e:	add    BYTE PTR [rax],al
  4090a0:	push   rsp
  4090a1:	xchg   ebp,eax
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	add    BYTE PTR [rax],al
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	pop    rsp
  4090a9:	xchg   ebp,eax
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	add    BYTE PTR [rax],al
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	push   0x95
  4090b5:	add    BYTE PTR [rax],al
  4090b7:	add    BYTE PTR [rax-0x6b],bh
	...
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	mov    BYTE PTR [rbp+0x0],dl
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	movabs al,ds:0xb800000000000095
  4090d9:	xchg   ebp,eax
  4090da:	add    BYTE PTR [rax],al
  4090dc:	add    BYTE PTR [rax],al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	int3   
  4090e1:	xchg   ebp,eax
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	add    BYTE PTR [rax],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	loop   0x40907f
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	add    BYTE PTR [rax],al
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	clc    
  4090f1:	xchg   ebp,eax
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	add    BYTE PTR [rax],al
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	or     BYTE PTR [rsi+0x0],dl
  4090fe:	add    BYTE PTR [rax],al
  409100:	sbb    dl,BYTE PTR [rsi+0x0]
  409106:	add    BYTE PTR [rax],al
  409108:	xor    al,0x96
  40910a:	add    BYTE PTR [rax],al
  40910c:	add    BYTE PTR [rax],al
  40910e:	add    BYTE PTR [rax],al
  409110:	rex.R xchg esi,eax
  409112:	add    BYTE PTR [rax],al
  409114:	add    BYTE PTR [rax],al
  409116:	add    BYTE PTR [rax],al
  409118:	(bad)  
  409119:	xchg   esi,eax
  40911a:	add    BYTE PTR [rax],al
  40911c:	add    BYTE PTR [rax],al
  40911e:	add    BYTE PTR [rax],al
  409120:	js     0x4090b8
  409122:	add    BYTE PTR [rax],al
  409124:	add    BYTE PTR [rax],al
  409126:	add    BYTE PTR [rax],al
  409128:	xchg   edx,eax
  409129:	xchg   esi,eax
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    BYTE PTR [rax],al
  40912e:	add    BYTE PTR [rax],al
  409130:	test   al,0x96
  409132:	add    BYTE PTR [rax],al
  409134:	add    BYTE PTR [rax],al
  409136:	add    BYTE PTR [rax],al
  409138:	mov    esp,0x96
  40913d:	add    BYTE PTR [rax],al
  40913f:	add    dh,dl
  409141:	xchg   esi,eax
  409142:	add    BYTE PTR [rax],al
  409144:	add    BYTE PTR [rax],al
  409146:	add    BYTE PTR [rax],al
  409148:	(bad)  
  409149:	xchg   esi,eax
  40914a:	add    BYTE PTR [rax],al
  40914c:	add    BYTE PTR [rax],al
  40914e:	add    BYTE PTR [rax],al
  409150:	or     BYTE PTR [rdi+0x0],dl
  409156:	add    BYTE PTR [rax],al
  409158:	adc    BYTE PTR [rdi+0x0],dl
  40915e:	add    BYTE PTR [rax],al
  409160:	and    al,0x97
  409162:	add    BYTE PTR [rax],al
  409164:	add    BYTE PTR [rax],al
  409166:	add    BYTE PTR [rax],al
  409168:	xor    dl,BYTE PTR [rdi+0x0]
  40916e:	add    BYTE PTR [rax],al
  409170:	rex.WRX xchg rdi,rax
  409172:	add    BYTE PTR [rax],al
  409174:	add    BYTE PTR [rax],al
  409176:	add    BYTE PTR [rax],al
  409178:	(bad)  
  409179:	xchg   edi,eax
	...
  409186:	add    BYTE PTR [rax],al
  409188:	jo     0x409121
  40918a:	add    BYTE PTR [rax],al
  40918c:	add    BYTE PTR [rax],al
  40918e:	add    BYTE PTR [rax],al
  409190:	mov    BYTE PTR [rdi+0x0],dl
  409196:	add    BYTE PTR [rax],al
  409198:	xchg   esi,eax
  409199:	xchg   edi,eax
  40919a:	add    BYTE PTR [rax],al
  40919c:	add    BYTE PTR [rax],al
  40919e:	add    BYTE PTR [rax],al
  4091a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4091a1:	xchg   edi,eax
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	add    BYTE PTR [rax],al
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	mov    dl,0x97
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	add    BYTE PTR [rax],al
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	rcl    BYTE PTR [rdi+0x0],0x0
  4091b7:	add    al,dl
  4091b9:	xchg   edi,eax
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	add    BYTE PTR [rax],al
  4091be:	add    BYTE PTR [rax],al
  4091c0:	loop   0x409159
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	add    BYTE PTR [rax],al
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	not    BYTE PTR [rdi+0x0]
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	add    BYTE PTR [rax+0x0],bl
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	(bad)  
  4091d9:	cwde   
  4091da:	add    BYTE PTR [rax],al
  4091dc:	add    BYTE PTR [rax],al
  4091de:	add    BYTE PTR [rax],al
  4091e0:	sbb    BYTE PTR [rax+0x0],bl
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	and    bl,BYTE PTR [rax+0x0]
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	cs cwde 
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	add    BYTE PTR [rax],al
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	ss cwde 
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	add    BYTE PTR [rax],al
  4091fe:	add    BYTE PTR [rax],al
  409200:	rex cwde 
  409202:	add    BYTE PTR [rax],al
  409204:	add    BYTE PTR [rax],al
  409206:	add    BYTE PTR [rax],al
  409208:	rex.WX cdqe 
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	push   rsp
  409211:	cwde   
  409212:	add    BYTE PTR [rax],al
  409214:	add    BYTE PTR [rax],al
  409216:	add    BYTE PTR [rax],al
  409218:	pop    rsp
  409219:	cwde   
  40921a:	add    BYTE PTR [rax],al
  40921c:	add    BYTE PTR [rax],al
  40921e:	add    BYTE PTR [rax],al
  409220:	cbw    
  409222:	add    BYTE PTR [rax],al
  409224:	add    BYTE PTR [rax],al
  409226:	add    BYTE PTR [rax],al
  409228:	outs   dx,BYTE PTR ds:[rsi]
  409229:	cwde   
  40922a:	add    BYTE PTR [rax],al
  40922c:	add    BYTE PTR [rax],al
  40922e:	add    BYTE PTR [rax],al
  409230:	js     0x4091ca
  409232:	add    BYTE PTR [rax],al
  409234:	add    BYTE PTR [rax],al
  409236:	add    BYTE PTR [rax],al
  409238:	sbb    BYTE PTR [rax+0x0],0x0
  40923f:	add    BYTE PTR [rdx+0x98],cl
  409245:	add    BYTE PTR [rax],al
  409247:	add    BYTE PTR [rax+rbx*4+0x0],dl
  40924e:	add    BYTE PTR [rax],al
  409250:	sahf   
  409251:	cwde   
  409252:	add    BYTE PTR [rax],al
  409254:	add    BYTE PTR [rax],al
  409256:	add    BYTE PTR [rax],al
  409258:	test   al,0x98
  40925a:	add    BYTE PTR [rax],al
  40925c:	add    BYTE PTR [rax],al
  40925e:	add    BYTE PTR [rax],al
  409260:	mov    dl,0x98
  409262:	add    BYTE PTR [rax],al
  409264:	add    BYTE PTR [rax],al
  409266:	add    BYTE PTR [rax],al
  409268:	mov    esp,0x98
  40926d:	add    BYTE PTR [rax],al
  40926f:	add    al,cl
  409271:	cwde   
	...
  40927e:	add    BYTE PTR [rax],al
  409280:	mov    al,0x94
  409282:	add    BYTE PTR [rax],al
  409284:	add    BYTE PTR [rax],al
  409286:	add    BYTE PTR [rax],al
  409288:	(bad)  
  409289:	xchg   esp,eax
  40928a:	add    BYTE PTR [rax],al
  40928c:	add    BYTE PTR [rax],al
  40928e:	add    BYTE PTR [rax],al
  409290:	fcom   DWORD PTR [rax+rax*1+0x0]
  409297:	add    al,ch
  409299:	xchg   esp,eax
  40929a:	add    BYTE PTR [rax],al
  40929c:	add    BYTE PTR [rax],al
  40929e:	add    BYTE PTR [rax],al
  4092a0:	clc    
  4092a1:	xchg   esp,eax
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	add    BYTE PTR [rax],al
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	add    al,0x95
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	add    BYTE PTR [rax],al
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	adc    BYTE PTR [rbp+0x0],dl
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	and    BYTE PTR [rbp+0x0],dl
  4092be:	add    BYTE PTR [rax],al
  4092c0:	xor    al,0x95
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	add    BYTE PTR [rax],al
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	rex xchg ebp,eax
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	add    BYTE PTR [rax],al
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	push   rsp
  4092d1:	xchg   ebp,eax
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	add    BYTE PTR [rax],al
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	pop    rsp
  4092d9:	xchg   ebp,eax
  4092da:	add    BYTE PTR [rax],al
  4092dc:	add    BYTE PTR [rax],al
  4092de:	add    BYTE PTR [rax],al
  4092e0:	push   0x95
  4092e5:	add    BYTE PTR [rax],al
  4092e7:	add    BYTE PTR [rax-0x6b],bh
	...
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	mov    BYTE PTR [rbp+0x0],dl
  4092fe:	add    BYTE PTR [rax],al
  409300:	movabs al,ds:0xb800000000000095
  409309:	xchg   ebp,eax
  40930a:	add    BYTE PTR [rax],al
  40930c:	add    BYTE PTR [rax],al
  40930e:	add    BYTE PTR [rax],al
  409310:	int3   
  409311:	xchg   ebp,eax
  409312:	add    BYTE PTR [rax],al
  409314:	add    BYTE PTR [rax],al
  409316:	add    BYTE PTR [rax],al
  409318:	loop   0x4092af
  40931a:	add    BYTE PTR [rax],al
  40931c:	add    BYTE PTR [rax],al
  40931e:	add    BYTE PTR [rax],al
  409320:	clc    
  409321:	xchg   ebp,eax
  409322:	add    BYTE PTR [rax],al
  409324:	add    BYTE PTR [rax],al
  409326:	add    BYTE PTR [rax],al
  409328:	or     BYTE PTR [rsi+0x0],dl
  40932e:	add    BYTE PTR [rax],al
  409330:	sbb    dl,BYTE PTR [rsi+0x0]
  409336:	add    BYTE PTR [rax],al
  409338:	xor    al,0x96
  40933a:	add    BYTE PTR [rax],al
  40933c:	add    BYTE PTR [rax],al
  40933e:	add    BYTE PTR [rax],al
  409340:	rex.R xchg esi,eax
  409342:	add    BYTE PTR [rax],al
  409344:	add    BYTE PTR [rax],al
  409346:	add    BYTE PTR [rax],al
  409348:	(bad)  
  409349:	xchg   esi,eax
  40934a:	add    BYTE PTR [rax],al
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	js     0x4092e8
  409352:	add    BYTE PTR [rax],al
  409354:	add    BYTE PTR [rax],al
  409356:	add    BYTE PTR [rax],al
  409358:	xchg   edx,eax
  409359:	xchg   esi,eax
  40935a:	add    BYTE PTR [rax],al
  40935c:	add    BYTE PTR [rax],al
  40935e:	add    BYTE PTR [rax],al
  409360:	test   al,0x96
  409362:	add    BYTE PTR [rax],al
  409364:	add    BYTE PTR [rax],al
  409366:	add    BYTE PTR [rax],al
  409368:	mov    esp,0x96
  40936d:	add    BYTE PTR [rax],al
  40936f:	add    dh,dl
  409371:	xchg   esi,eax
  409372:	add    BYTE PTR [rax],al
  409374:	add    BYTE PTR [rax],al
  409376:	add    BYTE PTR [rax],al
  409378:	(bad)  
  409379:	xchg   esi,eax
  40937a:	add    BYTE PTR [rax],al
  40937c:	add    BYTE PTR [rax],al
  40937e:	add    BYTE PTR [rax],al
  409380:	or     BYTE PTR [rdi+0x0],dl
  409386:	add    BYTE PTR [rax],al
  409388:	adc    BYTE PTR [rdi+0x0],dl
  40938e:	add    BYTE PTR [rax],al
  409390:	and    al,0x97
  409392:	add    BYTE PTR [rax],al
  409394:	add    BYTE PTR [rax],al
  409396:	add    BYTE PTR [rax],al
  409398:	xor    dl,BYTE PTR [rdi+0x0]
  40939e:	add    BYTE PTR [rax],al
  4093a0:	rex.WRX xchg rdi,rax
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	add    BYTE PTR [rax],al
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	(bad)  
  4093a9:	xchg   edi,eax
	...
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	jo     0x409351
  4093ba:	add    BYTE PTR [rax],al
  4093bc:	add    BYTE PTR [rax],al
  4093be:	add    BYTE PTR [rax],al
  4093c0:	mov    BYTE PTR [rdi+0x0],dl
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	xchg   esi,eax
  4093c9:	xchg   edi,eax
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	add    BYTE PTR [rax],al
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4093d1:	xchg   edi,eax
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	add    BYTE PTR [rax],al
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	mov    dl,0x97
  4093da:	add    BYTE PTR [rax],al
  4093dc:	add    BYTE PTR [rax],al
  4093de:	add    BYTE PTR [rax],al
  4093e0:	rcl    BYTE PTR [rdi+0x0],0x0
  4093e7:	add    al,dl
  4093e9:	xchg   edi,eax
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	add    BYTE PTR [rax],al
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	loop   0x409389
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	add    BYTE PTR [rax],al
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	not    BYTE PTR [rdi+0x0]
  4093fe:	add    BYTE PTR [rax],al
  409400:	add    BYTE PTR [rax+0x0],bl
  409406:	add    BYTE PTR [rax],al
  409408:	(bad)  
  409409:	cwde   
  40940a:	add    BYTE PTR [rax],al
  40940c:	add    BYTE PTR [rax],al
  40940e:	add    BYTE PTR [rax],al
  409410:	sbb    BYTE PTR [rax+0x0],bl
  409416:	add    BYTE PTR [rax],al
  409418:	and    bl,BYTE PTR [rax+0x0]
  40941e:	add    BYTE PTR [rax],al
  409420:	cs cwde 
  409422:	add    BYTE PTR [rax],al
  409424:	add    BYTE PTR [rax],al
  409426:	add    BYTE PTR [rax],al
  409428:	ss cwde 
  40942a:	add    BYTE PTR [rax],al
  40942c:	add    BYTE PTR [rax],al
  40942e:	add    BYTE PTR [rax],al
  409430:	rex cwde 
  409432:	add    BYTE PTR [rax],al
  409434:	add    BYTE PTR [rax],al
  409436:	add    BYTE PTR [rax],al
  409438:	rex.WX cdqe 
  40943a:	add    BYTE PTR [rax],al
  40943c:	add    BYTE PTR [rax],al
  40943e:	add    BYTE PTR [rax],al
  409440:	push   rsp
  409441:	cwde   
  409442:	add    BYTE PTR [rax],al
  409444:	add    BYTE PTR [rax],al
  409446:	add    BYTE PTR [rax],al
  409448:	pop    rsp
  409449:	cwde   
  40944a:	add    BYTE PTR [rax],al
  40944c:	add    BYTE PTR [rax],al
  40944e:	add    BYTE PTR [rax],al
  409450:	cbw    
  409452:	add    BYTE PTR [rax],al
  409454:	add    BYTE PTR [rax],al
  409456:	add    BYTE PTR [rax],al
  409458:	outs   dx,BYTE PTR ds:[rsi]
  409459:	cwde   
  40945a:	add    BYTE PTR [rax],al
  40945c:	add    BYTE PTR [rax],al
  40945e:	add    BYTE PTR [rax],al
  409460:	js     0x4093fa
  409462:	add    BYTE PTR [rax],al
  409464:	add    BYTE PTR [rax],al
  409466:	add    BYTE PTR [rax],al
  409468:	sbb    BYTE PTR [rax+0x0],0x0
  40946f:	add    BYTE PTR [rdx+0x98],cl
  409475:	add    BYTE PTR [rax],al
  409477:	add    BYTE PTR [rax+rbx*4+0x0],dl
  40947e:	add    BYTE PTR [rax],al
  409480:	sahf   
  409481:	cwde   
  409482:	add    BYTE PTR [rax],al
  409484:	add    BYTE PTR [rax],al
  409486:	add    BYTE PTR [rax],al
  409488:	test   al,0x98
  40948a:	add    BYTE PTR [rax],al
  40948c:	add    BYTE PTR [rax],al
  40948e:	add    BYTE PTR [rax],al
  409490:	mov    dl,0x98
  409492:	add    BYTE PTR [rax],al
  409494:	add    BYTE PTR [rax],al
  409496:	add    BYTE PTR [rax],al
  409498:	mov    esp,0x98
  40949d:	add    BYTE PTR [rax],al
  40949f:	add    al,cl
  4094a1:	cwde   
	...
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	sbb    al,0x0
  4094b2:	jno    0x40951c
  4094b4:	pop    rdi
  4094b5:	movsxd ebp,DWORD PTR [rax+0x65]
  4094b8:	movsxd ebp,DWORD PTR [rbx+0x5f]
  4094bb:	outs   dx,DWORD PTR ds:[rsi]
  4094bc:	jne    0x409532
  4094be:	jo     0x409535
  4094c0:	je     0x4094c2
  4094c2:	add    BYTE PTR [rax],al
  4094c4:	(bad)  
  4094c5:	add    BYTE PTR [rcx+0x68],dh
  4094c8:	pop    rdi
  4094c9:	movsxd ebp,DWORD PTR [rax+0x65]
  4094cc:	movsxd ebp,DWORD PTR [rbx+0x5f]
  4094cf:	jo     0x409540
  4094d1:	imul   ebp,DWORD PTR [rsi+0x74],0x73
  4094d8:	and    al,BYTE PTR [rax]
  4094da:	jno    0x409544
  4094dc:	pop    rdi
  4094dd:	movsxd ebp,DWORD PTR [rax+0x65]
  4094e0:	movsxd ebp,DWORD PTR [rbx+0x66]
  4094e3:	ins    BYTE PTR es:[rdi],dx
  4094e4:	(bad)  
  4094e5:	addr32 jae 0x4094e8
  4094e8:	add    BYTE PTR gs:[rcx+0x68],dh
  4094ec:	pop    rdi
  4094ed:	data16 jb 0x409555
  4094f0:	gs jno 0x40955b
  4094f3:	jne    0x409561
  4094f5:	ins    BYTE PTR es:[rdi],dx
  4094f6:	add    BYTE PTR [rax],al
  4094f8:	ja     0x4094fa
  4094fa:	jno    0x409564
  4094fc:	pop    rdi
  4094fd:	imul   ebp,DWORD PTR [rsi+0x69],0x415f74
  409504:	js     0x409506
  409506:	jno    0x409570
  409508:	pop    rdi
  409509:	imul   ebp,DWORD PTR [rsi+0x69],0x425f74
  409510:	jnp    0x409512
  409512:	jno    0x40957c
  409514:	pop    rdi
  409515:	imul   ebp,DWORD PTR [rsi+0x69],0x616c6674
  40951c:	addr32 jae 0x40951f
  40951f:	add    BYTE PTR [rbx+0x5f687100],bl
  409525:	ins    DWORD PTR es:[rdi],dx
  409526:	gs ins DWORD PTR es:[rdi],dx
  409528:	data16 jb 0x409590
  40952b:	gs jae 0x409596
  40952e:	outs   dx,DWORD PTR ds:[rsi]
  40952f:	jb     0x4095a5
  409531:	add    BYTE PTR [rax],al
  409533:	add    dl,al
  409535:	add    BYTE PTR [rcx+0x68],dh
  409538:	pop    rdi
  409539:	outs   dx,DWORD PTR ds:[rsi]
  40953a:	jo     0x4095b0
  40953c:	imul   ebp,DWORD PTR [rdi+0x6e],0x71010e00
  409543:	push   0x6f72705f
  409548:	fs jne 0x4095ae
  40954b:	gs pop rdi
  40954d:	outs   dx,DWORD PTR ds:[rsi]
  40954e:	jne    0x4095c4
  409550:	jo     0x4095c7
  409552:	je     0x409554
  409554:	adc    eax,DWORD PTR [rcx]
  409556:	jno    0x4095c0
  409558:	pop    rdi
  409559:	jno    0x4095c3
  40955b:	add    BYTE PTR [rip+0x5f687101],dl        # 0x5fa90662
  409561:	jno    0x4095cb
  409563:	jne    0x4095d1
  409565:	ins    BYTE PTR es:[rdi],dx
  409566:	add    BYTE PTR [rax],al
  409568:	sbb    eax,DWORD PTR [rcx]
  40956a:	jno    0x4095d4
  40956c:	pop    rdi
  40956d:	jb     0x4095d4
  40956f:	(bad)  
  409570:	fs jo  0x4095e2
  409573:	imul   ebp,DWORD PTR [rsi+0x74],0x16b0073
  40957a:	jno    0x4095e4
  40957c:	pop    rdi
  40957d:	jbe    0x4095e4
  40957f:	jb     0x4095f4
  409581:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  409588:	fadd   DWORD PTR [rax]
  40958a:	rex.R
  40958b:	gs ins BYTE PTR es:[rdi],dx
  40958d:	gs je  0x4095f5
  409590:	rex.XB jb 0x4095fc
  409593:	je     0x4095fe
  409595:	movsxd esp,DWORD PTR [rcx+0x6c]
  409598:	push   rbx
  409599:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40959e:	outs   dx,BYTE PTR ds:[rsi]
  40959f:	add    al,bh
  4095a1:	add    BYTE PTR [rbp+0x6e],al
  4095a4:	je     0x40960b
  4095a6:	jb     0x4095eb
  4095a8:	jb     0x409613
  4095aa:	je     0x409615
  4095ac:	movsxd esp,DWORD PTR [rcx+0x6c]
  4095af:	push   rbx
  4095b0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4095b5:	outs   dx,BYTE PTR ds:[rsi]
  4095b6:	add    BYTE PTR [rax],al
  4095b8:	int    0x1
  4095ba:	rex.RXB
  4095bb:	gs je  0x409601
  4095be:	jne    0x409632
  4095c0:	jb     0x409627
  4095c2:	outs   dx,BYTE PTR ds:[rsi]
  4095c3:	je     0x409615
  4095c5:	jb     0x409636
  4095c7:	movsxd esp,DWORD PTR [rbp+0x73]
  4095ca:	jae    0x4095cc
  4095cc:	(bad)  
  4095cd:	add    DWORD PTR [rdi+0x65],eax
  4095d0:	je     0x409615
  4095d2:	jne    0x409646
  4095d4:	jb     0x40963b
  4095d6:	outs   dx,BYTE PTR ds:[rsi]
  4095d7:	je     0x409629
  4095d9:	jb     0x40964a
  4095db:	movsxd esp,DWORD PTR [rbp+0x73]
  4095de:	jae    0x409629
  4095e0:	fs add dl,dl
  4095e3:	add    DWORD PTR [rdi+0x65],eax
  4095e6:	je     0x40962b
  4095e8:	jne    0x40965c
  4095ea:	jb     0x409651
  4095ec:	outs   dx,BYTE PTR ds:[rsi]
  4095ed:	je     0x409643
  4095ef:	push   0x64616572
  4095f4:	rex.WB
  4095f5:	add    BYTE PTR fs:[rax],al
  4095f8:	adc    BYTE PTR [rdx],al
  4095fa:	rex.RXB
  4095fb:	gs je  0x40964a
  4095fe:	(bad)  
  4095ff:	jae    0x409675
  409601:	rex.RB jb 0x409676
  409604:	outs   dx,DWORD PTR ds:[rsi]
  409605:	jb     0x409607
  409607:	add    BYTE PTR [rbx+0x2],dh
  40960a:	rex.RXB
  40960b:	gs je  0x409661
  40960e:	je     0x409671
  409610:	jb     0x409686
  409612:	jne    0x409684
  409614:	rex.WB outs dx,BYTE PTR ds:[rsi]
  409616:	outs   dx,WORD PTR ds:[rsi]
  409618:	add    BYTE PTR [r10+0x74654702],cl
  40961f:	push   rbx
  409620:	jns    0x409695
  409622:	je     0x409689
  409624:	ins    DWORD PTR es:[rdi],dx
  409625:	push   rsp
  409626:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40962d:	ins    BYTE PTR es:[rdi],dx
  40962e:	gs push rsp
  409630:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  409637:	gs je  0x40968e
  40963a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  409641:	je     0x409643
  409643:	add    cl,bh
  409645:	add    cl,BYTE PTR [rcx+0x6e]
  409648:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  409650:	rex.XB jb 0x4096bc
  409653:	je     0x4096be
  409655:	movsxd esp,DWORD PTR [rcx+0x6c]
  409658:	push   rbx
  409659:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40965e:	outs   dx,BYTE PTR ds:[rsi]
  40965f:	add    BYTE PTR [rbx+0x3],cl
  409662:	rex.WR
  409663:	gs (bad) 
  409665:	jbe    0x4096cc
  409667:	rex.XB jb 0x4096d3
  40966a:	je     0x4096d5
  40966c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40966f:	push   rbx
  409670:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409675:	outs   dx,BYTE PTR ds:[rsi]
  409676:	add    BYTE PTR [rax],al
  409678:	mov    ebx,0x65755103
  40967d:	jb     0x4096f8
  40967f:	push   rax
  409680:	gs jb  0x4096e9
  409683:	outs   dx,DWORD PTR ds:[rsi]
  409684:	jb     0x4096f3
  409686:	(bad)  
  409687:	outs   dx,BYTE PTR ds:[rsi]
  409688:	movsxd esp,DWORD PTR [rbp+0x43]
  40968b:	outs   dx,DWORD PTR ds:[rsi]
  40968c:	jne    0x4096fc
  40968e:	je     0x4096f5
  409690:	jb     0x409692
  409692:	add    DWORD PTR [rdx+rdx*2],eax
  409695:	je     0x409703
  409697:	rex.B
  409698:	fs fs rex.RX jne 0x40970b
  40969d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4096a1:	outs   dx,BYTE PTR ds:[rsi]
  4096a2:	push   rsp
  4096a3:	(bad)  
  4096a4:	(bad)  
  4096a5:	ins    BYTE PTR es:[rdi],dx
  4096a6:	add    BYTE PTR gs:[rdx],al
  4096a9:	add    al,0x52
  4096ab:	je     0x409719
  4096ad:	rex.XB (bad) 
  4096af:	jo     0x409725
  4096b1:	jne    0x409725
  4096b3:	rex.XB outs dx,DWORD PTR gs:[rsi]
  4096b6:	outs   dx,BYTE PTR ds:[rsi]
  4096b7:	je     0x40971e
  4096b9:	js     0x40972f
  4096bb:	add    BYTE PTR [rcx],cl
  4096bd:	add    al,0x52
  4096bf:	je     0x40972d
  4096c1:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4096c3:	outs   dx,DWORD PTR ds:[rsi]
  4096c4:	imul   esi,DWORD PTR [rbp+0x70],0x46
  4096c8:	jne    0x409738
  4096ca:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4096ce:	outs   dx,BYTE PTR ds:[rsi]
  4096cf:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4096d1:	je     0x409745
  4096d3:	jns    0x4096d5
  4096d5:	add    BYTE PTR [rax],dl
  4096d7:	add    al,0x52
  4096d9:	je     0x409747
  4096db:	push   rsi
  4096dc:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  4096e3:	outs   dx,BYTE PTR ds:[rsi]
  4096e4:	ja     0x40974f
  4096e6:	outs   dx,BYTE PTR ds:[rsi]
  4096e7:	add    BYTE PTR fs:[rax],al
  4096ea:	lahf   
  4096eb:	add    al,0x53
  4096ed:	gs je  0x409745
  4096f0:	outs   dx,BYTE PTR ds:[rsi]
  4096f1:	push   0x6c646e61
  4096f6:	gs fs rex.RB js 0x40975e
  4096fb:	gs jo  0x409772
  4096fe:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409705:	gs jb  0x409708
  409708:	lods   al,BYTE PTR ds:[rsi]
  409709:	add    al,0x53
  40970b:	ins    BYTE PTR es:[rdi],dx
  40970c:	gs gs jo 0x409710
  409710:	mov    edx,0x72655404
  409715:	ins    DWORD PTR es:[rdi],dx
  409716:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40971d:	outs   dx,DWORD PTR ds:[rsi]
  40971e:	movsxd esp,DWORD PTR [rbp+0x73]
  409721:	jae    0x409723
  409723:	add    cl,al
  409725:	add    al,0x54
  409727:	ins    BYTE PTR es:[rdi],dx
  409728:	jae    0x409771
  40972a:	gs je  0x409783
  40972d:	(bad)  
  40972e:	ins    BYTE PTR es:[rdi],dx
  40972f:	jne    0x409796
  409731:	add    dh,cl
  409733:	add    al,0x55
  409735:	outs   dx,BYTE PTR ds:[rsi]
  409736:	push   0x6c646e61
  40973b:	gs fs rex.RB js 0x4097a3
  409740:	gs jo  0x4097b7
  409743:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40974a:	gs jb  0x40974d
  40974d:	add    ah,ch
  40974f:	add    al,0x56
  409751:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  409758:	jb     0x4097c9
  40975a:	je     0x4097c1
  40975c:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  409760:	out    dx,al
  409761:	add    al,0x56
  409763:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40976a:	jne    0x4097d1
  40976c:	jb     0x4097e7
  40976e:	add    BYTE PTR [rax],al
  409770:	(bad)  
  409771:	add    BYTE PTR [rdi+0x5f],bl
  409774:	rex.XB pop r15
  409776:	jae    0x4097e8
  409778:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40977c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  409783:	ins    BYTE PTR es:[rdi],dx
  409784:	gs jb  0x409787
  409787:	add    BYTE PTR [rsi+0x0],cl
  40978a:	pop    rdi
  40978b:	pop    rdi
  40978c:	fs ins BYTE PTR es:[rdi],dx
  40978e:	ins    BYTE PTR es:[rdi],dx
  40978f:	outs   dx,DWORD PTR ds:[rsi]
  409790:	outs   dx,BYTE PTR ds:[rsi]
  409791:	gs js  0x4097fd
  409794:	je     0x409796
  409796:	push   rcx
  409797:	add    BYTE PTR [rdi+0x5f],bl
  40979a:	addr32 gs je 0x40980b
  40979e:	(bad)  
  40979f:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  4097a6:	push   rdx
  4097a7:	add    BYTE PTR [rdi+0x5f],bl
  4097aa:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  4097b1:	add    BYTE PTR [rbx+0x0],dl
  4097b4:	pop    rdi
  4097b5:	pop    rdi
  4097b6:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  4097bd:	movsxd eax,DWORD PTR [rax]
  4097bf:	add    BYTE PTR [rdx+0x0],bl
  4097c2:	pop    rdi
  4097c3:	pop    rdi
  4097c4:	ins    BYTE PTR es:[rdi],dx
  4097c5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4097c8:	jbe    0x409829
  4097ca:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  4097d1:	add    BYTE PTR [rdi+0x5f],bl
  4097d4:	jae    0x40983b
  4097d6:	je     0x409837
  4097d8:	(bad)  
  4097d9:	jo     0x40984b
  4097db:	pop    rdi
  4097dc:	je     0x409857
  4097de:	jo     0x409845
  4097e0:	add    BYTE PTR [rax],al
  4097e2:	(bad)  
  4097e3:	add    BYTE PTR [rdi+0x5f],bl
  4097e6:	jae    0x40984d
  4097e8:	je     0x40985f
  4097ea:	jae    0x409851
  4097ec:	jb     0x40985b
  4097ee:	(bad)  
  4097ef:	je     0x409859
  4097f1:	gs jb  0x409866
  4097f4:	add    BYTE PTR [rax],al
  4097f6:	jno    0x4097f8
  4097f8:	pop    rdi
  4097f9:	(bad)  
  4097fa:	movsxd ebp,DWORD PTR [rbp+0x64]
  4097fd:	ins    BYTE PTR es:[rdi],dx
  4097fe:	outs   dx,BYTE PTR ds:[rsi]
  4097ff:	add    BYTE PTR [rax+0x0],bh
  409802:	pop    rdi
  409803:	(bad)  
  409804:	ins    DWORD PTR es:[rdi],dx
  409805:	jae    0x40986e
  409807:	pop    rdi
  409808:	gs js  0x409874
  40980b:	je     0x40980d
  40980d:	add    BYTE PTR [rdx+0x65635f00],cl
  409813:	js     0x40987e
  409815:	je     0x409817
  409817:	add    dl,bl
  409819:	add    BYTE PTR [rdi+0x66],bl
  40981c:	ins    DWORD PTR es:[rdi],dx
  40981d:	outs   dx,DWORD PTR ds:[rsi]
  40981e:	fs add BYTE PTR gs:[rax],al
  409822:	sbb    al,BYTE PTR [rcx]
  409824:	pop    rdi
  409825:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40982c:	ins    DWORD PTR es:[rdi],dx
  40982d:	add    BYTE PTR [rax+0x6f6c5f01],al
  409833:	movsxd ebp,DWORD PTR [rbx+0x0]
  409836:	and    eax,0x6e6f5f02
  40983b:	gs js  0x4098a7
  40983e:	je     0x409840
  409840:	push   rdx
  409841:	add    bl,BYTE PTR [rdi+0x73]
  409844:	gs je  0x4098b1
  409847:	ins    DWORD PTR es:[rdi],dx
  409848:	jo     0x40984a
  40984a:	(bad)
  40984e:	outs   dx,BYTE PTR ds:[rsi]
  40984f:	ins    BYTE PTR es:[rdi],dx
  409850:	outs   dx,DWORD PTR ds:[rsi]
  409851:	movsxd ebp,DWORD PTR [rbx+0x0]
  409854:	jg     0x409859
  409856:	(bad)  
  409857:	(bad)  
  409858:	outs   dx,DWORD PTR ds:[rsi]
  409859:	jb     0x4098cf
  40985b:	add    BYTE PTR [rax+0x6c616303],dl
  409861:	ins    BYTE PTR es:[rdi],dx
  409862:	outs   dx,DWORD PTR ds:[rsi]
  409863:	movsxd eax,DWORD PTR [rax]
  409865:	add    BYTE PTR [rbp+0x69786503],bl
  40986b:	je     0x40986d
  40986d:	add    BYTE PTR [rax+0x72706603],dh
  409873:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40987a:	data16 jb 0x4098e2
  40987d:	add    BYTE PTR gs:[rax],al
  409880:	ret    0x6603
  409883:	ja     0x4098f7
  409885:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40988d:	(bad)  
  40988e:	ins    BYTE PTR es:[rdi],dx
  40988f:	ins    BYTE PTR es:[rdi],dx
  409890:	outs   dx,DWORD PTR ds:[rsi]
  409891:	movsxd eax,DWORD PTR [rax]
  409893:	add    al,bh
  409895:	add    ebp,DWORD PTR [rbp+0x65]
  409898:	ins    DWORD PTR es:[rdi],dx
  409899:	movsxd esi,DWORD PTR [rax+0x79]
  40989c:	add    BYTE PTR [rax],al
  40989e:	(bad)  
  40989f:	add    al,0x73
  4098a1:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  4098a8:	sub    eax,DWORD PTR [rbx+rsi*2]
  4098ab:	je     0x40991f
  4098ad:	ins    BYTE PTR es:[rdi],dx
  4098ae:	outs   dx,BYTE PTR gs:[rsi]
  4098b0:	add    BYTE PTR [rax],al
  4098b2:	cs add al,0x73
  4098b5:	je     0x409929
  4098b7:	outs   dx,BYTE PTR ds:[rsi]
  4098b8:	movsxd ebp,DWORD PTR [rbp+0x70]
  4098bb:	add    BYTE PTR [rsi+0x4],cl
  4098be:	jbe    0x409926
  4098c0:	jo     0x409934
  4098c2:	imul   ebp,DWORD PTR [rsi+0x74],0xde000066
  4098c9:	add    al,0x5f
  4098cb:	imul   esi,DWORD PTR [rbx+0x61],0x797474
  4098d2:	add    BYTE PTR [rax],al
  4098d4:	add    BYTE PTR [rax-0x70000000],dl
  4098da:	add    BYTE PTR [rax],al
  4098dc:	add    BYTE PTR [rax-0x70000000],dl
  4098e2:	add    BYTE PTR [rax],al
  4098e4:	add    BYTE PTR [rax-0x70000000],dl
  4098ea:	add    BYTE PTR [rax],al
  4098ec:	add    BYTE PTR [rax-0x70000000],dl
  4098f2:	add    BYTE PTR [rax],al
  4098f4:	add    BYTE PTR [rax-0x70000000],dl
  4098fa:	add    BYTE PTR [rax],al
  4098fc:	add    BYTE PTR [rax-0x70000000],dl
  409902:	add    BYTE PTR [rax],al
  409904:	add    BYTE PTR [rax-0x70000000],dl
  40990a:	add    BYTE PTR [rax],al
  40990c:	ins    BYTE PTR es:[rdi],dx
  40990d:	imul   esp,DWORD PTR [rdx+0x71],0x6c6c7568
  409914:	sub    eax,0x6c642e35
  409919:	ins    BYTE PTR es:[rdi],dx
  40991a:	add    BYTE PTR [rax],al
  40991c:	adc    al,0x90
  40991e:	add    BYTE PTR [rax],al
  409920:	adc    al,0x90
  409922:	add    BYTE PTR [rax],al
  409924:	adc    al,0x90
  409926:	add    BYTE PTR [rax],al
  409928:	adc    al,0x90
  40992a:	add    BYTE PTR [rax],al
  40992c:	adc    al,0x90
  40992e:	add    BYTE PTR [rax],al
  409930:	adc    al,0x90
  409932:	add    BYTE PTR [rax],al
  409934:	adc    al,0x90
  409936:	add    BYTE PTR [rax],al
  409938:	adc    al,0x90
  40993a:	add    BYTE PTR [rax],al
  40993c:	adc    al,0x90
  40993e:	add    BYTE PTR [rax],al
  409940:	adc    al,0x90
  409942:	add    BYTE PTR [rax],al
  409944:	adc    al,0x90
  409946:	add    BYTE PTR [rax],al
  409948:	adc    al,0x90
  40994a:	add    BYTE PTR [rax],al
  40994c:	adc    al,0x90
  40994e:	add    BYTE PTR [rax],al
  409950:	adc    al,0x90
  409952:	add    BYTE PTR [rax],al
  409954:	adc    al,0x90
  409956:	add    BYTE PTR [rax],al
  409958:	adc    al,0x90
  40995a:	add    BYTE PTR [rax],al
  40995c:	adc    al,0x90
  40995e:	add    BYTE PTR [rax],al
  409960:	adc    al,0x90
  409962:	add    BYTE PTR [rax],al
  409964:	adc    al,0x90
  409966:	add    BYTE PTR [rax],al
  409968:	adc    al,0x90
  40996a:	add    BYTE PTR [rax],al
  40996c:	adc    al,0x90
  40996e:	add    BYTE PTR [rax],al
  409970:	adc    al,0x90
  409972:	add    BYTE PTR [rax],al
  409974:	adc    al,0x90
  409976:	add    BYTE PTR [rax],al
  409978:	rex.WXB
  409979:	rex.RB push r10
  40997b:	rex.WRX
  40997c:	rex.RB
  40997d:	xor    r14,QWORD PTR [rdx]
  409980:	cs fs ins BYTE PTR es:[rdi],dx
  409983:	ins    BYTE PTR es:[rdi],dx
  409984:	add    BYTE PTR [rax],al
  409986:	add    BYTE PTR [rax],al
  409988:	sub    BYTE PTR [rax-0x6fd80000],dl
  40998e:	add    BYTE PTR [rax],al
  409990:	sub    BYTE PTR [rax-0x6fd80000],dl
  409996:	add    BYTE PTR [rax],al
  409998:	sub    BYTE PTR [rax-0x6fd80000],dl
  40999e:	add    BYTE PTR [rax],al
  4099a0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099a6:	add    BYTE PTR [rax],al
  4099a8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099ae:	add    BYTE PTR [rax],al
  4099b0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099b6:	add    BYTE PTR [rax],al
  4099b8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099be:	add    BYTE PTR [rax],al
  4099c0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099c6:	add    BYTE PTR [rax],al
  4099c8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099ce:	add    BYTE PTR [rax],al
  4099d0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099d6:	add    BYTE PTR [rax],al
  4099d8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099de:	add    BYTE PTR [rax],al
  4099e0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099e6:	add    BYTE PTR [rax],al
  4099e8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099ee:	add    BYTE PTR [rax],al
  4099f0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099f6:	add    BYTE PTR [rax],al
  4099f8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099fe:	add    BYTE PTR [rax],al
  409a00:	ins    DWORD PTR es:[rdi],dx
  409a01:	jae    0x409a79
  409a03:	movsxd esi,DWORD PTR [rdx+0x74]
  409a06:	cs fs ins BYTE PTR es:[rdi],dx
  409a09:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax],ah
  40a029:	(bad)  
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x19],dl
  40a042:	add    BYTE PTR [rax],al
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax],ah
  40a049:	sbb    DWORD PTR [rax+0x0],eax
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
