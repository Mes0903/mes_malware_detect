
40973d2b21fc99adda02a0785133fbf4ec53602d8e26c79503ef357234b6b579.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x4b29]        # 0x140005b30
   140001007:	jmp    0x140004e98
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x4b39]        # 0x140005b50
   140001017:	jmp    0x140004e98
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x4b49]        # 0x140005b70
   140001027:	jmp    0x140004e98
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	lea    rax,[rip+0x6959]        # 0x140007990
   140001037:	mov    QWORD PTR [rip+0x1187a],rax        # 0x1400128b8
   14000103e:	lea    rax,[rip+0x67bb]        # 0x140007800
   140001045:	mov    QWORD PTR [rip+0x1185c],rax        # 0x1400128a8
   14000104c:	lea    rax,[rip+0x76cd]        # 0x140008720
   140001053:	mov    QWORD PTR [rip+0x11856],rax        # 0x1400128b0
   14000105a:	ret    
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	sub    rsp,0x28
   140001064:	call   0x140003f48
   140001069:	mov    QWORD PTR [rip+0x1185c],0x1        # 0x1400128d0
   140001074:	add    rsp,0x28
   140001078:	ret    
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	sub    rsp,0x28
   140001084:	xor    edx,edx
   140001086:	lea    rcx,[rip+0x11853]        # 0x1400128e0
   14000108d:	mov    r8d,0xa0
   140001093:	call   0x1400055d6
   140001098:	lea    rcx,[rip+0x4ae1]        # 0x140005b80
   14000109f:	add    rsp,0x28
   1400010a3:	jmp    0x140004e98
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	int3   
   1400010b1:	int3   
   1400010b2:	int3   
   1400010b3:	int3   
   1400010b4:	int3   
   1400010b5:	int3   
   1400010b6:	int3   
   1400010b7:	int3   
   1400010b8:	int3   
   1400010b9:	int3   
   1400010ba:	int3   
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400010c5:	mov    QWORD PTR [rsp+0x10],rdi
   1400010ca:	push   rbp
   1400010cb:	lea    rbp,[rsp-0x57]
   1400010d0:	sub    rsp,0xc0
   1400010d7:	mov    rax,QWORD PTR [rip+0x10f4a]        # 0x140012028
   1400010de:	xor    rax,rsp
   1400010e1:	mov    QWORD PTR [rbp+0x47],rax
   1400010e5:	mov    eax,DWORD PTR [rip+0x11785]        # 0x140012870
   1400010eb:	test   al,0x1
   1400010ed:	jne    0x140001104
   1400010ef:	or     eax,0x1
   1400010f2:	lea    rcx,[rip+0x4a97]        # 0x140005b90
   1400010f9:	mov    DWORD PTR [rip+0x11771],eax        # 0x140012870
   1400010ff:	call   0x140004e98
   140001104:	lea    rbx,[rip+0x1176d]        # 0x140012878
   14000110b:	xor    edx,edx
   14000110d:	mov    rcx,rbx
   140001110:	lea    r9,[rbp-0x31]
   140001114:	lea    r8,[rbp-0x35]
   140001118:	call   QWORD PTR [rip+0xa0aa]        # 0x14000b1c8
   14000111e:	xor    edi,edi
   140001120:	cmp    DWORD PTR [rbp-0x35],edi
   140001123:	je     0x14000115c
   140001125:	lea    rax,[rip+0x11754]        # 0x140012880
   14000112c:	mov    QWORD PTR [rbp-0x19],rbx
   140001130:	mov    QWORD PTR [rbp-0x31],rax
   140001134:	lea    rax,[rip+0xa4b5]        # 0x14000b5f0
   14000113b:	mov    QWORD PTR [rip+0x1173e],rax        # 0x140012880
   140001142:	lea    rax,[rip+0x10fc7]        # 0x140012110
   140001149:	mov    DWORD PTR [rbp-0x11],edi
   14000114c:	lea    rcx,[rbp-0x19]
   140001150:	mov    QWORD PTR [rip+0x11741],rax        # 0x140012898
   140001157:	call   0x1400031b0
   14000115c:	mov    rax,QWORD PTR [rbp-0x31]
   140001160:	mov    r10,QWORD PTR [rax+0x8]
   140001164:	cmp    DWORD PTR [r10],0x5
   140001168:	jbe    0x14000121a
   14000116e:	movabs rdx,0x400000000000
   140001178:	test   QWORD PTR [r10+0x10],rdx
   14000117c:	je     0x14000121a
   140001182:	mov    rax,QWORD PTR [r10+0x18]
   140001186:	and    rax,rdx
   140001189:	cmp    rax,QWORD PTR [r10+0x18]
   14000118d:	jne    0x14000121a
   140001193:	lea    rax,[rip+0xc6d6]        # 0x14000d870
   14000119a:	xor    r9d,r9d
   14000119d:	lea    rcx,[rip+0xca00]        # 0x14000dba4
   1400011a4:	xor    r8d,r8d
   1400011a7:	sub    ecx,eax
   1400011a9:	lea    rdx,[rbp-0x29]
   1400011ad:	movzx  eax,BYTE PTR [rip+0xd210]        # 0x14000e3c4
   1400011b4:	or     ecx,0xb000000
   1400011ba:	movzx  eax,WORD PTR [rip+0xc9e4]        # 0x14000dba5
   1400011c1:	mov    DWORD PTR [rbp-0x25],eax
   1400011c4:	mov    rax,QWORD PTR [r10+0x8]
   1400011c8:	mov    QWORD PTR [rbp-0x9],rax
   1400011cc:	mov    DWORD PTR [rbp-0x29],ecx
   1400011cf:	mov    rcx,QWORD PTR [r10+0x20]
   1400011d3:	mov    DWORD PTR [rbp-0x21],edi
   1400011d6:	mov    DWORD PTR [rbp-0x1d],0x4000
   1400011dd:	movzx  eax,WORD PTR [rax]
   1400011e0:	mov    DWORD PTR [rbp-0x1],eax
   1400011e3:	lea    rax,[rip+0xc9c5]        # 0x14000dbaf
   1400011ea:	mov    QWORD PTR [rbp+0x7],rax
   1400011ee:	lea    rax,[rbp-0x9]
   1400011f2:	mov    QWORD PTR [rsp+0x28],rax
   1400011f7:	mov    DWORD PTR [rsp+0x20],0x2
   1400011ff:	mov    DWORD PTR [rbp+0x3],0x2
   140001206:	mov    DWORD PTR [rbp+0xf],0xf
   14000120d:	mov    DWORD PTR [rbp+0x13],0x1
   140001214:	call   QWORD PTR [rip+0xa00e]        # 0x14000b228
   14000121a:	xor    edx,edx
   14000121c:	lea    ecx,[rdx+0x2]
   14000121f:	call   QWORD PTR [rip+0x9f13]        # 0x14000b138
   140001225:	call   0x140001250
   14000122a:	mov    DWORD PTR [rbp-0x39],eax
   14000122d:	call   0x140007dc8
   140001232:	mov    r10,QWORD PTR [rax+0x8]
   140001236:	cmp    DWORD PTR [r10],0x5
   14000123a:	ja     0x140005ba6
   140001240:	jmp    0x140005bf2
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    rax,rsp
   140001253:	push   rbp
   140001254:	push   r14
   140001256:	push   r15
   140001258:	lea    rbp,[rax-0x528]
   14000125f:	sub    rsp,0x610
   140001266:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   14000126e:	mov    QWORD PTR [rax+0x8],rbx
   140001272:	mov    QWORD PTR [rax+0x10],rsi
   140001276:	mov    QWORD PTR [rax+0x18],rdi
   14000127a:	mov    QWORD PTR [rax+0x20],r12
   14000127e:	mov    rax,QWORD PTR [rip+0x10da3]        # 0x140012028
   140001285:	xor    rax,rsp
   140001288:	mov    QWORD PTR [rbp+0x500],rax
   14000128f:	lea    rcx,[rbp-0x40]
   140001293:	call   0x140002230
   140001298:	nop
   140001299:	xor    edx,edx
   14000129b:	xor    ecx,ecx
   14000129d:	call   QWORD PTR [rip+0x9d8d]        # 0x14000b030
   1400012a3:	mov    r14d,eax
   1400012a6:	test   eax,eax
   1400012a8:	js     0x140005c16
   1400012ae:	lea    rcx,[rsp+0x30]
   1400012b3:	call   0x14000399c
   1400012b8:	nop
   1400012b9:	xor    r9d,r9d
   1400012bc:	xor    r8d,r8d
   1400012bf:	mov    r14d,0x1
   1400012c5:	mov    edx,r14d
   1400012c8:	xor    ecx,ecx
   1400012ca:	call   QWORD PTR [rip+0x9ee8]        # 0x14000b1b8
   1400012d0:	mov    QWORD PTR [rip+0x115f1],rax        # 0x1400128c8
   1400012d7:	test   rax,rax
   1400012da:	je     0x140005fe9
   1400012e0:	mov    DWORD PTR [rbp+0x4e0],r14d
   1400012e7:	mov    QWORD PTR [rbp+0x4e8],0x2
   1400012f2:	mov    DWORD PTR [rbp+0x4f0],0x4
   1400012fc:	mov    QWORD PTR [rbp+0x4f8],0x218
   140001307:	lea    rax,[rsp+0x78]
   14000130c:	mov    QWORD PTR [rsp+0x20],rax
   140001311:	lea    r9,[rip+0xa810]        # 0x14000bb28
   140001318:	mov    r8d,r14d
   14000131b:	xor    edx,edx
   14000131d:	lea    rcx,[rip+0xa7f4]        # 0x14000bb18
   140001324:	call   QWORD PTR [rip+0x9d2e]        # 0x14000b058
   14000132a:	test   eax,eax
   14000132c:	js     0x14000137f
   14000132e:	lea    rbx,[rbp+0x4e0]
   140001335:	mov    rsi,QWORD PTR [rsp+0x78]
   14000133a:	mov    rax,QWORD PTR [rsi]
   14000133d:	mov    rdi,QWORD PTR [rax+0x18]
   140001341:	mov    rcx,rdi
   140001344:	call   QWORD PTR [rip+0xa086]        # 0x14000b3d0
   14000134a:	mov    r8,QWORD PTR [rbx+0x8]
   14000134e:	mov    edx,DWORD PTR [rbx]
   140001350:	mov    rcx,rsi
   140001353:	call   rdi
   140001355:	add    rbx,0x10
   140001359:	lea    rax,[rbp+0x500]
   140001360:	cmp    rbx,rax
   140001363:	jne    0x140001335
   140001365:	mov    rdi,QWORD PTR [rsp+0x78]
   14000136a:	mov    rax,QWORD PTR [rdi]
   14000136d:	mov    rbx,QWORD PTR [rax+0x10]
   140001371:	mov    rcx,rbx
   140001374:	call   QWORD PTR [rip+0xa056]        # 0x14000b3d0
   14000137a:	mov    rcx,rdi
   14000137d:	call   rbx
   14000137f:	call   0x140003500
   140001384:	mov    ebx,eax
   140001386:	test   eax,eax
   140001388:	js     0x140005c36
   14000138e:	call   0x1400032a0
   140001393:	mov    ebx,eax
   140001395:	test   eax,eax
   140001397:	js     0x140005c59
   14000139d:	xor    r12d,r12d
   1400013a0:	mov    QWORD PTR [rbp-0x78],r12
   1400013a4:	mov    QWORD PTR [rsp+0x68],r12
   1400013a9:	lea    rdx,[rip+0x10ea0]        # 0x140012250
   1400013b0:	lea    ecx,[r12+0x48]
   1400013b5:	call   0x1400050e4
   1400013ba:	mov    rdi,rax
   1400013bd:	mov    QWORD PTR [rsp+0x60],rax
   1400013c2:	mov    QWORD PTR [rbp-0x58],rax
   1400013c6:	test   rax,rax
   1400013c9:	je     0x140005c7c
   1400013cf:	mov    QWORD PTR [rbp-0x60],rax
   1400013d3:	lea    rax,[rip+0xa6f6]        # 0x14000bad0
   1400013da:	mov    QWORD PTR [rdi],rax
   1400013dd:	mov    QWORD PTR [rdi+0x10],r12
   1400013e1:	mov    QWORD PTR [rsp+0x50],r12
   1400013e6:	lea    rdx,[rsp+0x50]
   1400013eb:	xor    ecx,ecx
   1400013ed:	call   QWORD PTR [rip+0x9c4d]        # 0x14000b040
   1400013f3:	test   eax,eax
   1400013f5:	js     0x140001428
   1400013f7:	mov    rsi,QWORD PTR [rdi+0x10]
   1400013fb:	test   rsi,rsi
   1400013fe:	jne    0x140005c99
   140001404:	mov    rbx,QWORD PTR [rsp+0x50]
   140001409:	mov    rax,QWORD PTR [rbx]
   14000140c:	mov    rsi,QWORD PTR [rax]
   14000140f:	mov    rcx,rsi
   140001412:	call   QWORD PTR [rip+0x9fb8]        # 0x14000b3d0
   140001418:	lea    r8,[rdi+0x10]
   14000141c:	lea    rdx,[rip+0xa64d]        # 0x14000ba70
   140001423:	mov    rcx,rbx
   140001426:	call   rsi
   140001428:	mov    rsi,QWORD PTR [rsp+0x50]
   14000142d:	test   rsi,rsi
   140001430:	je     0x14000144c
   140001432:	mov    QWORD PTR [rsp+0x50],r12
   140001437:	mov    rax,QWORD PTR [rsi]
   14000143a:	mov    rbx,QWORD PTR [rax+0x10]
   14000143e:	mov    rcx,rbx
   140001441:	call   QWORD PTR [rip+0x9f89]        # 0x14000b3d0
   140001447:	mov    rcx,rsi
   14000144a:	call   rbx
   14000144c:	mov    DWORD PTR [rdi+0x2c],r14d
   140001450:	lea    rax,[rip+0xa341]        # 0x14000b798
   140001457:	mov    QWORD PTR [rdi],rax
   14000145a:	lea    rax,[rip+0xa307]        # 0x14000b768
   140001461:	mov    QWORD PTR [rdi+0x18],rax
   140001465:	lea    rax,[rip+0xa2d4]        # 0x14000b740
   14000146c:	mov    QWORD PTR [rdi+0x20],rax
   140001470:	mov    rsi,QWORD PTR [rip+0x115a9]        # 0x140012a20
   140001477:	test   rsi,rsi
   14000147a:	jne    0x140005cb8
   140001480:	lea    rax,[rip+0xa269]        # 0x14000b6f0
   140001487:	mov    QWORD PTR [rdi],rax
   14000148a:	lea    rax,[rip+0xa22f]        # 0x14000b6c0
   140001491:	mov    QWORD PTR [rdi+0x18],rax
   140001495:	lea    rax,[rip+0xa1fc]        # 0x14000b698
   14000149c:	mov    QWORD PTR [rdi+0x20],rax
   1400014a0:	mov    QWORD PTR [rdi+0x30],r12
   1400014a4:	mov    QWORD PTR [rdi+0x38],r12
   1400014a8:	mov    QWORD PTR [rdi+0x40],r12
   1400014ac:	mov    QWORD PTR [rsp+0x68],rdi
   1400014b1:	mov    QWORD PTR [rsp+0x60],r12
   1400014b6:	mov    rcx,rdi
   1400014b9:	call   0x140001f90
   1400014be:	mov    ebx,eax
   1400014c0:	test   eax,eax
   1400014c2:	js     0x140005cd3
   1400014c8:	test   rdi,rdi
   1400014cb:	je     0x1400014ec
   1400014cd:	mov    rax,QWORD PTR [rdi]
   1400014d0:	mov    rbx,QWORD PTR [rax+0x8]
   1400014d4:	lea    rax,[rip+0x8f5]        # 0x140001dd0
   1400014db:	cmp    rbx,rax
   1400014de:	jne    0x140005d0b
   1400014e4:	mov    rcx,rdi
   1400014e7:	call   0x140001dd0
   1400014ec:	mov    QWORD PTR [rbp-0x78],rdi
   1400014f0:	test   rdi,rdi
   1400014f3:	je     0x140001514
   1400014f5:	mov    rax,QWORD PTR [rdi]
   1400014f8:	mov    rbx,QWORD PTR [rax+0x10]
   1400014fc:	lea    rax,[rip+0x8ed]        # 0x140001df0
   140001503:	cmp    rbx,rax
   140001506:	jne    0x140005d1f
   14000150c:	mov    rcx,rdi
   14000150f:	call   0x140001df0
   140001514:	mov    QWORD PTR [rsp+0x40],r12
   140001519:	lea    rax,[rsp+0x40]
   14000151e:	mov    QWORD PTR [rsp+0x20],rax
   140001523:	lea    r9,[rip+0xa15e]        # 0x14000b688
   14000152a:	mov    r8d,r14d
   14000152d:	xor    edx,edx
   14000152f:	lea    rcx,[rip+0xa142]        # 0x14000b678
   140001536:	call   QWORD PTR [rip+0x9b1c]        # 0x14000b058
   14000153c:	mov    ebx,eax
   14000153e:	test   eax,eax
   140001540:	js     0x140005d33
   140001546:	test   rdi,rdi
   140001549:	je     0x140005d56
   14000154f:	lea    r15,[rdi+0x20]
   140001553:	mov    rbx,QWORD PTR [rsp+0x40]
   140001558:	mov    rax,QWORD PTR [rbx]
   14000155b:	mov    rsi,QWORD PTR [rax+0x18]
   14000155f:	mov    rcx,rsi
   140001562:	call   QWORD PTR [rip+0x9e68]        # 0x14000b3d0
   140001568:	mov    rdx,r15
   14000156b:	mov    rcx,rbx
   14000156e:	call   rsi
   140001570:	mov    ebx,eax
   140001572:	test   eax,eax
   140001574:	js     0x140005d5e
   14000157a:	lea    rcx,[rbp-0x40]
   14000157e:	call   0x140002890
   140001583:	lea    rcx,[rbp+0x240]
   14000158a:	call   0x140002400
   14000158f:	nop
   140001590:	mov    QWORD PTR [rsp+0x48],r12
   140001595:	test   rdi,rdi
   140001598:	je     0x140005f7e
   14000159e:	lea    r15,[rdi+0x18]
   1400015a2:	test   r15,r15
   1400015a5:	je     0x140005f7e
   1400015ab:	mov    rsi,r12
   1400015ae:	mov    QWORD PTR [rsp+0x48],r12
   1400015b3:	mov    QWORD PTR [rsp+0x38],r12
   1400015b8:	lea    rax,[rsp+0x38]
   1400015bd:	mov    QWORD PTR [rsp+0x20],rax
   1400015c2:	lea    r9,[rip+0xa09f]        # 0x14000b668
   1400015c9:	mov    r8d,r14d
   1400015cc:	xor    edx,edx
   1400015ce:	lea    rcx,[rip+0xa083]        # 0x14000b658
   1400015d5:	call   QWORD PTR [rip+0x9a7d]        # 0x14000b058
   1400015db:	mov    ebx,eax
   1400015dd:	test   eax,eax
   1400015df:	js     0x140005d81
   1400015e5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400015ea:	mov    rax,QWORD PTR [rbx]
   1400015ed:	mov    rdi,QWORD PTR [rax+0x28]
   1400015f1:	mov    rcx,rdi
   1400015f4:	call   QWORD PTR [rip+0x9dd6]        # 0x14000b3d0
   1400015fa:	mov    rdx,r15
   1400015fd:	mov    rcx,rbx
   140001600:	call   rdi
   140001602:	mov    ebx,eax
   140001604:	test   eax,eax
   140001606:	js     0x140005d88
   14000160c:	mov    rsi,QWORD PTR [rsp+0x38]
   140001611:	test   rsi,rsi
   140001614:	je     0x140001630
   140001616:	mov    rax,QWORD PTR [rsi]
   140001619:	mov    rbx,QWORD PTR [rax+0x8]
   14000161d:	mov    rcx,rbx
   140001620:	call   QWORD PTR [rip+0x9daa]        # 0x14000b3d0
   140001626:	mov    rcx,rsi
   140001629:	call   rbx
   14000162b:	mov    rsi,QWORD PTR [rsp+0x38]
   140001630:	mov    QWORD PTR [rsp+0x48],rsi
   140001635:	test   rsi,rsi
   140001638:	je     0x140001654
   14000163a:	mov    QWORD PTR [rsp+0x38],r12
   14000163f:	mov    rax,QWORD PTR [rsi]
   140001642:	mov    rbx,QWORD PTR [rax+0x10]
   140001646:	mov    rcx,rbx
   140001649:	call   QWORD PTR [rip+0x9d81]        # 0x14000b3d0
   14000164f:	mov    rcx,rsi
   140001652:	call   rbx
   140001654:	mov    rax,QWORD PTR [rsi]
   140001657:	mov    rbx,QWORD PTR [rax+0x18]
   14000165b:	mov    rcx,rbx
   14000165e:	call   QWORD PTR [rip+0x9d6c]        # 0x14000b3d0
   140001664:	lea    r8,[rip+0x9fdd]        # 0x14000b648
   14000166b:	lea    rdx,[rip+0x9fc6]        # 0x14000b638
   140001672:	mov    rcx,rsi
   140001675:	call   rbx
   140001677:	mov    ebx,eax
   140001679:	test   eax,eax
   14000167b:	js     0x140005dbb
   140001681:	lea    rcx,[rbp+0x240]
   140001688:	call   0x140002890
   14000168d:	lea    rcx,[rbp+0x380]
   140001694:	call   0x1400025d0
   140001699:	nop
   14000169a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000169f:	mov    rax,QWORD PTR [rbx]
   1400016a2:	mov    rdi,QWORD PTR [rax+0x20]
   1400016a6:	mov    rcx,rdi
   1400016a9:	call   QWORD PTR [rip+0x9d21]        # 0x14000b3d0
   1400016af:	mov    rcx,rbx
   1400016b2:	call   rdi
   1400016b4:	mov    ebx,eax
   1400016b6:	test   eax,eax
   1400016b8:	js     0x140005dc8
   1400016be:	lea    r9,[rip+0x9f4b]        # 0x14000b610
   1400016c5:	xor    r8d,r8d
   1400016c8:	mov    edx,r14d
   1400016cb:	xor    ecx,ecx
   1400016cd:	call   QWORD PTR [rip+0x9ae5]        # 0x14000b1b8
   1400016d3:	mov    rbx,rax
   1400016d6:	mov    QWORD PTR [rsp+0x70],rax
   1400016db:	test   rax,rax
   1400016de:	je     0x140005deb
   1400016e4:	lea    rcx,[rbp+0x380]
   1400016eb:	call   0x140002890
   1400016f0:	mov    eax,DWORD PTR [rip+0x112aa]        # 0x1400129a0
   1400016f6:	test   al,0x1
   1400016f8:	je     0x140005e0b
   1400016fe:	lea    r9,[rbp-0x80]
   140001702:	lea    r8,[rsp+0x58]
   140001707:	xor    edx,edx
   140001709:	lea    rcx,[rip+0x11270]        # 0x140012980
   140001710:	call   QWORD PTR [rip+0x9ab2]        # 0x14000b1c8
   140001716:	cmp    DWORD PTR [rsp+0x58],0x0
   14000171b:	jne    0x140005e26
   140001721:	mov    rax,QWORD PTR [rbp-0x80]
   140001725:	mov    r10,QWORD PTR [rax+0x8]
   140001729:	cmp    DWORD PTR [r10],0x5
   14000172d:	jbe    0x1400017fc
   140001733:	movabs rdx,0x400000000000
   14000173d:	test   QWORD PTR [r10+0x10],rdx
   140001741:	je     0x1400017fc
   140001747:	mov    rax,QWORD PTR [r10+0x18]
   14000174b:	and    rax,rdx
   14000174e:	cmp    rax,QWORD PTR [r10+0x18]
   140001752:	jne    0x1400017fc
   140001758:	lea    rcx,[rip+0xc597]        # 0x14000dcf6
   14000175f:	lea    rax,[rip+0xc10a]        # 0x14000d870
   140001766:	sub    ecx,eax
   140001768:	movzx  eax,BYTE PTR [rip+0xcc55]        # 0x14000e3c4
   14000176f:	or     ecx,0xb000000
   140001775:	mov    DWORD PTR [rbp-0x70],ecx
   140001778:	movzx  eax,WORD PTR [rip+0xc578]        # 0x14000dcf7
   14000177f:	mov    DWORD PTR [rbp-0x6c],eax
   140001782:	mov    DWORD PTR [rbp-0x68],r12d
   140001786:	mov    DWORD PTR [rbp-0x64],0x4000
   14000178d:	mov    rax,QWORD PTR [r10+0x8]
   140001791:	mov    QWORD PTR [rbp+0x4c0],rax
   140001798:	movzx  eax,WORD PTR [rax]
   14000179b:	mov    DWORD PTR [rbp+0x4c8],eax
   1400017a1:	mov    DWORD PTR [rbp+0x4cc],0x2
   1400017ab:	lea    rax,[rip+0xc54f]        # 0x14000dd01
   1400017b2:	mov    QWORD PTR [rbp+0x4d0],rax
   1400017b9:	mov    DWORD PTR [rbp+0x4d8],0xf
   1400017c3:	mov    DWORD PTR [rbp+0x4dc],r14d
   1400017ca:	lea    rax,[rbp+0x4c0]
   1400017d1:	mov    QWORD PTR [rsp+0x28],rax
   1400017d6:	mov    DWORD PTR [rsp+0x20],0x2
   1400017de:	xor    r9d,r9d
   1400017e1:	xor    r8d,r8d
   1400017e4:	lea    rdx,[rbp-0x70]
   1400017e8:	mov    rcx,QWORD PTR [r10+0x20]
   1400017ec:	call   QWORD PTR [rip+0x9a36]        # 0x14000b228
   1400017f2:	mov    rsi,QWORD PTR [rsp+0x48]
   1400017f7:	mov    rbx,QWORD PTR [rsp+0x70]
   1400017fc:	or     edx,0xffffffff
   1400017ff:	mov    rcx,rbx
   140001802:	call   QWORD PTR [rip+0x9970]        # 0x14000b178
   140001808:	lea    rcx,[rbp+0x100]
   14000180f:	call   0x140009a88
   140001814:	nop
   140001815:	call   0x14000a350
   14000181a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000181f:	mov    rax,QWORD PTR [rbx]
   140001822:	mov    rdi,QWORD PTR [rax+0x28]
   140001826:	mov    rcx,rdi
   140001829:	call   QWORD PTR [rip+0x9ba1]        # 0x14000b3d0
   14000182f:	mov    rcx,rbx
   140001832:	call   rdi
   140001834:	mov    r14d,eax
   140001837:	test   eax,eax
   140001839:	js     0x140005e8e
   14000183f:	jmp    0x140005eae
   140001844:	int3   
   140001845:	int3   
   140001846:	int3   
   140001847:	int3   
   140001848:	int3   
   140001849:	int3   
   14000184a:	int3   
   14000184b:	int3   
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	mov    QWORD PTR [rsp+0x18],rbp
   140001855:	push   rdi
   140001856:	sub    rsp,0x20
   14000185a:	mov    rdi,r9
   14000185d:	mov    rbp,r8
   140001860:	test   r9,r9
   140001863:	je     0x140006034
   140001869:	mov    QWORD PTR [r9],0x0
   140001870:	test   rdx,rdx
   140001873:	jne    0x14000605a
   140001879:	mov    QWORD PTR [rsp+0x30],rbx
   14000187e:	lea    rcx,[rsp+0x48]
   140001883:	mov    QWORD PTR [rsp+0x38],rsi
   140001888:	call   0x140001910
   14000188d:	mov    rbx,QWORD PTR [rsp+0x48]
   140001892:	test   rbx,rbx
   140001895:	je     0x140006064
   14000189b:	mov    rax,QWORD PTR [rbx]
   14000189e:	mov    rsi,QWORD PTR [rax]
   1400018a1:	lea    rax,[rip+0x3e8]        # 0x140001c90
   1400018a8:	cmp    rsi,rax
   1400018ab:	jne    0x140006088
   1400018b1:	mov    r8,rdi
   1400018b4:	mov    rdx,rbp
   1400018b7:	mov    rcx,rbx
   1400018ba:	call   0x140001c90
   1400018bf:	mov    edi,eax
   1400018c1:	test   eax,eax
   1400018c3:	js     0x1400060a2
   1400018c9:	xor    edi,edi
   1400018cb:	test   rbx,rbx
   1400018ce:	je     0x1400018ef
   1400018d0:	mov    rax,QWORD PTR [rbx]
   1400018d3:	mov    rsi,QWORD PTR [rax+0x10]
   1400018d7:	lea    rax,[rip+0x362]        # 0x140001c40
   1400018de:	cmp    rsi,rax
   1400018e1:	jne    0x1400060c1
   1400018e7:	mov    rcx,rbx
   1400018ea:	call   0x140001c40
   1400018ef:	mov    rsi,QWORD PTR [rsp+0x38]
   1400018f4:	mov    eax,edi
   1400018f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018fb:	mov    rbp,QWORD PTR [rsp+0x40]
   140001900:	add    rsp,0x20
   140001904:	pop    rdi
   140001905:	ret    
   140001906:	int3   
   140001907:	int3   
   140001908:	int3   
   140001909:	int3   
   14000190a:	int3   
   14000190b:	int3   
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	rex push rsi
   140001912:	push   rdi
   140001913:	push   r12
   140001915:	sub    rsp,0x30
   140001919:	mov    rsi,rcx
   14000191c:	lea    rdx,[rip+0x1092d]        # 0x140012250
   140001923:	xor    r12d,r12d
   140001926:	mov    QWORD PTR [rcx],r12
   140001929:	mov    ecx,0x90
   14000192e:	call   0x1400050e4
   140001933:	mov    rdi,rax
   140001936:	test   rax,rax
   140001939:	je     0x140001ac0
   14000193f:	lea    rax,[rip+0xa18a]        # 0x14000bad0
   140001946:	mov    QWORD PTR [rsp+0x58],rbx
   14000194b:	mov    QWORD PTR [rdi],rax
   14000194e:	lea    rdx,[rsp+0x50]
   140001953:	xor    ecx,ecx
   140001955:	mov    QWORD PTR [rdi+0x10],r12
   140001959:	mov    QWORD PTR [rsp+0x28],r14
   14000195e:	mov    QWORD PTR [rsp+0x50],r12
   140001963:	call   QWORD PTR [rip+0x96d7]        # 0x14000b040
   140001969:	test   eax,eax
   14000196b:	js     0x1400019b2
   14000196d:	mov    QWORD PTR [rsp+0x60],rbp
   140001972:	mov    QWORD PTR [rsp+0x20],r15
   140001977:	mov    r15,QWORD PTR [rdi+0x10]
   14000197b:	test   r15,r15
   14000197e:	jne    0x1400060d6
   140001984:	mov    rbx,QWORD PTR [rsp+0x50]
   140001989:	mov    rax,QWORD PTR [rbx]
   14000198c:	mov    rbp,QWORD PTR [rax]
   14000198f:	mov    rcx,rbp
   140001992:	call   QWORD PTR [rip+0x9a38]        # 0x14000b3d0
   140001998:	lea    r8,[rdi+0x10]
   14000199c:	mov    rcx,rbx
   14000199f:	lea    rdx,[rip+0xa0ca]        # 0x14000ba70
   1400019a6:	call   rbp
   1400019a8:	mov    r15,QWORD PTR [rsp+0x20]
   1400019ad:	mov    rbp,QWORD PTR [rsp+0x60]
   1400019b2:	mov    r14,QWORD PTR [rsp+0x50]
   1400019b7:	test   r14,r14
   1400019ba:	je     0x1400019d6
   1400019bc:	mov    QWORD PTR [rsp+0x50],r12
   1400019c1:	mov    rax,QWORD PTR [r14]
   1400019c4:	mov    rbx,QWORD PTR [rax+0x10]
   1400019c8:	mov    rcx,rbx
   1400019cb:	call   QWORD PTR [rip+0x99ff]        # 0x14000b3d0
   1400019d1:	mov    rcx,r14
   1400019d4:	call   rbx
   1400019d6:	lea    rax,[rip+0x9ff3]        # 0x14000b9d0
   1400019dd:	mov    DWORD PTR [rdi+0x28],r12d
   1400019e1:	mov    QWORD PTR [rdi+0x18],rax
   1400019e5:	lea    rcx,[rdi+0x20]
   1400019e9:	mov    QWORD PTR [rdi+0x30],r12
   1400019ed:	call   QWORD PTR [rip+0x9795]        # 0x14000b188
   1400019f3:	mov    r14,QWORD PTR [rip+0x11026]        # 0x140012a20
   1400019fa:	lea    rax,[rip+0x9fcf]        # 0x14000b9d0
   140001a01:	mov    QWORD PTR [rdi+0x48],r12
   140001a05:	mov    QWORD PTR [rdi+0x50],r12
   140001a09:	mov    QWORD PTR [rdi+0x58],r12
   140001a0d:	mov    QWORD PTR [rdi+0x60],r12
   140001a11:	mov    QWORD PTR [rdi+0x18],rax
   140001a15:	lea    rax,[rip+0x9f4c]        # 0x14000b968
   140001a1c:	mov    QWORD PTR [rdi+0x38],rax
   140001a20:	lea    rax,[rip+0x9f21]        # 0x14000b948
   140001a27:	mov    QWORD PTR [rdi+0x40],rax
   140001a2b:	lea    rax,[rip+0x9e66]        # 0x14000b898
   140001a32:	mov    QWORD PTR [rdi],rax
   140001a35:	lea    rax,[rip+0x9e34]        # 0x14000b870
   140001a3c:	mov    QWORD PTR [rdi+0x18],rax
   140001a40:	lea    rax,[rip+0x9e99]        # 0x14000b8e0
   140001a47:	mov    QWORD PTR [rdi+0x38],rax
   140001a4b:	lea    rax,[rip+0x9d96]        # 0x14000b7e8
   140001a52:	mov    QWORD PTR [rdi+0x40],rax
   140001a56:	mov    DWORD PTR [rdi+0x6c],0x1
   140001a5d:	test   r14,r14
   140001a60:	jne    0x1400060f5
   140001a66:	lea    rax,[rip+0x9e2b]        # 0x14000b898
   140001a6d:	mov    QWORD PTR [rdi],rax
   140001a70:	lea    rax,[rip+0x9df9]        # 0x14000b870
   140001a77:	mov    QWORD PTR [rdi+0x18],rax
   140001a7b:	lea    rax,[rip+0x9d86]        # 0x14000b808
   140001a82:	mov    QWORD PTR [rdi+0x38],rax
   140001a86:	lea    rax,[rip+0x9d5b]        # 0x14000b7e8
   140001a8d:	mov    QWORD PTR [rdi+0x40],rax
   140001a91:	mov    QWORD PTR [rdi+0x70],r12
   140001a95:	mov    QWORD PTR [rdi+0x78],r12
   140001a99:	mov    QWORD PTR [rdi+0x80],r12
   140001aa0:	mov    DWORD PTR [rdi+0x88],r12d
   140001aa7:	mov    r14,QWORD PTR [rsi]
   140001aaa:	test   r14,r14
   140001aad:	jne    0x140006110
   140001ab3:	mov    r14,QWORD PTR [rsp+0x28]
   140001ab8:	mov    rbx,QWORD PTR [rsp+0x58]
   140001abd:	mov    QWORD PTR [rsi],rdi
   140001ac0:	mov    rax,rsi
   140001ac3:	add    rsp,0x30
   140001ac7:	pop    r12
   140001ac9:	pop    rdi
   140001aca:	pop    rsi
   140001acb:	ret    
   140001acc:	int3   
   140001acd:	int3   
   140001ace:	int3   
   140001acf:	int3   
   140001ad0:	int3   
   140001ad1:	int3   
   140001ad2:	int3   
   140001ad3:	int3   
   140001ad4:	int3   
   140001ad5:	int3   
   140001ad6:	int3   
   140001ad7:	int3   
   140001ad8:	int3   
   140001ad9:	int3   
   140001ada:	int3   
   140001adb:	int3   
   140001adc:	int3   
   140001add:	int3   
   140001ade:	int3   
   140001adf:	int3   
   140001ae0:	rex push rdi
   140001ae2:	push   r14
   140001ae4:	push   r15
   140001ae6:	sub    rsp,0x30
   140001aea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001af3:	mov    QWORD PTR [rsp+0x50],rbx
   140001af8:	mov    QWORD PTR [rsp+0x60],rbp
   140001afd:	mov    QWORD PTR [rsp+0x68],rsi
   140001b02:	mov    rsi,rdx
   140001b05:	mov    rdi,rcx
   140001b08:	test   rdx,rdx
   140001b0b:	je     0x14000612c
   140001b11:	xor    ebp,ebp
   140001b13:	mov    ebx,ebp
   140001b15:	mov    QWORD PTR [rsp+0x58],rbx
   140001b1a:	test   rcx,rcx
   140001b1d:	je     0x140001b4c
   140001b1f:	mov    rax,QWORD PTR [rcx]
   140001b22:	mov    rbx,QWORD PTR [rax]
   140001b25:	mov    rcx,rbx
   140001b28:	call   QWORD PTR [rip+0x98a2]        # 0x14000b3d0
   140001b2e:	lea    r8,[rsp+0x58]
   140001b33:	lea    rdx,[rip+0x9f56]        # 0x14000ba90
   140001b3a:	mov    rcx,rdi
   140001b3d:	call   rbx
   140001b3f:	mov    rbx,QWORD PTR [rsp+0x58]
   140001b44:	test   eax,eax
   140001b46:	js     0x14000617e
   140001b4c:	mov    r14b,0x1
   140001b4f:	test   rbx,rbx
   140001b52:	je     0x140001b78
   140001b54:	mov    QWORD PTR [rsp+0x58],rbp
   140001b59:	mov    rax,QWORD PTR [rbx]
   140001b5c:	mov    r15,QWORD PTR [rax+0x10]
   140001b60:	lea    rax,[rip+0xd9]        # 0x140001c40
   140001b67:	cmp    r15,rax
   140001b6a:	jne    0x140006186
   140001b70:	mov    rcx,rbx
   140001b73:	call   0x140001c40
   140001b78:	test   r14b,r14b
   140001b7b:	je     0x140001bda
   140001b7d:	mov    QWORD PTR [rsp+0x58],rbp
   140001b82:	mov    rax,QWORD PTR [rsi]
   140001b85:	mov    rbx,QWORD PTR [rax]
   140001b88:	mov    rcx,rbx
   140001b8b:	call   QWORD PTR [rip+0x983f]        # 0x14000b3d0
   140001b91:	lea    r8,[rsp+0x58]
   140001b96:	lea    rdx,[rip+0x9ef3]        # 0x14000ba90
   140001b9d:	mov    rcx,rsi
   140001ba0:	call   rbx
   140001ba2:	test   eax,eax
   140001ba4:	js     0x14000619b
   140001baa:	mov    r15b,0x1
   140001bad:	mov    r14,QWORD PTR [rsp+0x58]
   140001bb2:	test   r14,r14
   140001bb5:	je     0x140001bd1
   140001bb7:	mov    QWORD PTR [rsp+0x58],rbp
   140001bbc:	mov    rax,QWORD PTR [r14]
   140001bbf:	mov    rbx,QWORD PTR [rax+0x10]
   140001bc3:	mov    rcx,rbx
   140001bc6:	call   QWORD PTR [rip+0x9804]        # 0x14000b3d0
   140001bcc:	mov    rcx,r14
   140001bcf:	call   rbx
   140001bd1:	test   r15b,r15b
   140001bd4:	je     0x1400061a3
   140001bda:	lea    r14,[rdi+0x8]
   140001bde:	mov    rcx,r14
   140001be1:	call   QWORD PTR [rip+0x95a9]        # 0x14000b190
   140001be7:	cmp    QWORD PTR [rdi+0x18],rsi
   140001beb:	je     0x140001c13
   140001bed:	mov    rax,QWORD PTR [rsi]
   140001bf0:	mov    rbx,QWORD PTR [rax+0x8]
   140001bf4:	mov    rcx,rbx
   140001bf7:	call   QWORD PTR [rip+0x97d3]        # 0x14000b3d0
   140001bfd:	mov    rcx,rsi
   140001c00:	call   rbx
   140001c02:	mov    rbx,QWORD PTR [rdi+0x18]
   140001c06:	mov    QWORD PTR [rdi+0x18],rsi
   140001c0a:	test   rbx,rbx
   140001c0d:	jne    0x1400061ee
   140001c13:	mov    rcx,r14
   140001c16:	call   QWORD PTR [rip+0x9594]        # 0x14000b1b0
   140001c1c:	mov    eax,ebp
   140001c1e:	mov    rbx,QWORD PTR [rsp+0x50]
   140001c23:	mov    rbp,QWORD PTR [rsp+0x60]
   140001c28:	mov    rsi,QWORD PTR [rsp+0x68]
   140001c2d:	add    rsp,0x30
   140001c31:	pop    r15
   140001c33:	pop    r14
   140001c35:	pop    rdi
   140001c36:	ret    
   140001c37:	int3   
   140001c38:	int3   
   140001c39:	int3   
   140001c3a:	int3   
   140001c3b:	int3   
   140001c3c:	int3   
   140001c3d:	int3   
   140001c3e:	int3   
   140001c3f:	int3   
   140001c40:	rex push rbx
   140001c42:	sub    rsp,0x20
   140001c46:	or     ebx,0xffffffff
   140001c49:	lock xadd DWORD PTR [rcx+0x6c],ebx
   140001c4e:	sub    ebx,0x1
   140001c51:	je     0x14000620a
   140001c57:	mov    eax,ebx
   140001c59:	add    rsp,0x20
   140001c5d:	pop    rbx
   140001c5e:	ret    
   140001c5f:	int3   
   140001c60:	int3   
   140001c61:	int3   
   140001c62:	int3   
   140001c63:	int3   
   140001c64:	int3   
   140001c65:	int3   
   140001c66:	int3   
   140001c67:	int3   
   140001c68:	int3   
   140001c69:	int3   
   140001c6a:	int3   
   140001c6b:	int3   
   140001c6c:	int3   
   140001c6d:	int3   
   140001c6e:	int3   
   140001c6f:	int3   
   140001c70:	mov    eax,0x1
   140001c75:	lock xadd DWORD PTR [rcx+0x6c],eax
   140001c7a:	inc    eax
   140001c7c:	ret    
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	int3   
   140001c81:	int3   
   140001c82:	int3   
   140001c83:	int3   
   140001c84:	int3   
   140001c85:	int3   
   140001c86:	int3   
   140001c87:	int3   
   140001c88:	int3   
   140001c89:	int3   
   140001c8a:	int3   
   140001c8b:	int3   
   140001c8c:	int3   
   140001c8d:	int3   
   140001c8e:	int3   
   140001c8f:	int3   
   140001c90:	mov    QWORD PTR [rsp+0x8],rbx
   140001c95:	mov    QWORD PTR [rsp+0x10],rsi
   140001c9a:	push   rdi
   140001c9b:	sub    rsp,0x20
   140001c9f:	xor    ebx,ebx
   140001ca1:	mov    r9,rdx
   140001ca4:	mov    QWORD PTR [r8],rbx
   140001ca7:	mov    rdi,rcx
   140001caa:	cmp    DWORD PTR [rdx],ebx
   140001cac:	je     0x140001d4e
   140001cb2:	lea    rdx,[rip+0x9dd7]        # 0x14000ba90
   140001cb9:	mov    rcx,r9
   140001cbc:	call   0x140001f60
   140001cc1:	test   eax,eax
   140001cc3:	jne    0x140001dac
   140001cc9:	lea    rdx,[rip+0x9da0]        # 0x14000ba70
   140001cd0:	call   0x140001f60
   140001cd5:	test   eax,eax
   140001cd7:	jne    0x14000627e
   140001cdd:	lea    rdx,[rip+0x9dcc]        # 0x14000bab0
   140001ce4:	lea    r10,[rdi+0x18]
   140001ce8:	call   0x140001f60
   140001ced:	test   eax,eax
   140001cef:	jne    0x140001db4
   140001cf5:	lea    rdx,[rip+0x9dc4]        # 0x14000bac0
   140001cfc:	add    r10,0x20
   140001d00:	call   0x140001f60
   140001d05:	test   eax,eax
   140001d07:	je     0x140006286
   140001d0d:	mov    QWORD PTR [r8],r10
   140001d10:	test   ebx,ebx
   140001d12:	js     0x140001d3c
   140001d14:	mov    rsi,QWORD PTR [r8]
   140001d17:	mov    rax,QWORD PTR [rsi]
   140001d1a:	mov    rdi,QWORD PTR [rax+0x8]
   140001d1e:	lea    rax,[rip+0xffffffffffffff4b]        # 0x140001c70
   140001d25:	cmp    rdi,rax
   140001d28:	je     0x140001dbc
   140001d2e:	mov    rcx,rdi
   140001d31:	call   QWORD PTR [rip+0x9699]        # 0x14000b3d0
   140001d37:	mov    rcx,rsi
   140001d3a:	call   rdi
   140001d3c:	mov    eax,ebx
   140001d3e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d43:	mov    rsi,QWORD PTR [rsp+0x38]
   140001d48:	add    rsp,0x20
   140001d4c:	pop    rdi
   140001d4d:	ret    
   140001d4e:	mov    eax,DWORD PTR [rip+0x9d10]        # 0x14000ba64
   140001d54:	cmp    DWORD PTR [rdx+0x4],eax
   140001d57:	jne    0x140001cb2
   140001d5d:	mov    eax,DWORD PTR [rip+0x9d05]        # 0x14000ba68
   140001d63:	cmp    DWORD PTR [rdx+0x8],eax
   140001d66:	jne    0x140001cb2
   140001d6c:	mov    eax,DWORD PTR [rip+0x9cfa]        # 0x14000ba6c
   140001d72:	cmp    DWORD PTR [rdx+0xc],eax
   140001d75:	jne    0x140001cb2
   140001d7b:	mov    QWORD PTR [r8],rcx
   140001d7e:	mov    rax,QWORD PTR [rcx]
   140001d81:	mov    rsi,QWORD PTR [rax+0x8]
   140001d85:	lea    rax,[rip+0xfffffffffffffee4]        # 0x140001c70
   140001d8c:	cmp    rsi,rax
   140001d8f:	jne    0x14000626a
   140001d95:	call   0x140001c70
   140001d9a:	mov    rsi,QWORD PTR [rsp+0x38]
   140001d9f:	mov    eax,ebx
   140001da1:	mov    rbx,QWORD PTR [rsp+0x30]
   140001da6:	add    rsp,0x20
   140001daa:	pop    rdi
   140001dab:	ret    
   140001dac:	mov    QWORD PTR [r8],rdi
   140001daf:	jmp    0x140001d14
   140001db4:	mov    QWORD PTR [r8],r10
   140001db7:	jmp    0x140001d10
   140001dbc:	mov    rcx,rsi
   140001dbf:	jmp    0x140001d95
   140001dc1:	int3   
   140001dc2:	int3   
   140001dc3:	int3   
   140001dc4:	int3   
   140001dc5:	int3   
   140001dc6:	int3   
   140001dc7:	int3   
   140001dc8:	int3   
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	mov    eax,0x1
   140001dd5:	lock xadd DWORD PTR [rcx+0x2c],eax
   140001dda:	inc    eax
   140001ddc:	ret    
   140001ddd:	int3   
   140001dde:	int3   
   140001ddf:	int3   
   140001de0:	int3   
   140001de1:	int3   
   140001de2:	int3   
   140001de3:	int3   
   140001de4:	int3   
   140001de5:	int3   
   140001de6:	int3   
   140001de7:	int3   
   140001de8:	int3   
   140001de9:	int3   
   140001dea:	int3   
   140001deb:	int3   
   140001dec:	int3   
   140001ded:	int3   
   140001dee:	int3   
   140001def:	int3   
   140001df0:	mov    QWORD PTR [rsp+0x10],rbx
   140001df5:	push   rsi
   140001df6:	sub    rsp,0x20
   140001dfa:	mov    rsi,rcx
   140001dfd:	or     ebx,0xffffffff
   140001e00:	lock xadd DWORD PTR [rcx+0x2c],ebx
   140001e05:	sub    ebx,0x1
   140001e08:	je     0x1400062ac
   140001e0e:	mov    eax,ebx
   140001e10:	mov    rbx,QWORD PTR [rsp+0x38]
   140001e15:	add    rsp,0x20
   140001e19:	pop    rsi
   140001e1a:	ret    
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	int3   
   140001e21:	int3   
   140001e22:	int3   
   140001e23:	int3   
   140001e24:	int3   
   140001e25:	int3   
   140001e26:	int3   
   140001e27:	int3   
   140001e28:	int3   
   140001e29:	int3   
   140001e2a:	int3   
   140001e2b:	int3   
   140001e2c:	int3   
   140001e2d:	int3   
   140001e2e:	int3   
   140001e2f:	int3   
   140001e30:	mov    QWORD PTR [rsp+0x8],rbx
   140001e35:	mov    QWORD PTR [rsp+0x10],rsi
   140001e3a:	push   rdi
   140001e3b:	sub    rsp,0x20
   140001e3f:	mov    r9,rdx
   140001e42:	mov    rsi,rcx
   140001e45:	xor    ebx,ebx
   140001e47:	lea    rdx,[rip+0x9c12]        # 0x14000ba60
   140001e4e:	mov    rcx,r9
   140001e51:	mov    QWORD PTR [r8],rbx
   140001e54:	call   0x140001f60
   140001e59:	test   eax,eax
   140001e5b:	jne    0x14000630a
   140001e61:	cmp    DWORD PTR [r9],0x94ea2b94
   140001e68:	je     0x140001f18
   140001e6e:	lea    rdx,[rip+0x9bfb]        # 0x14000ba70
   140001e75:	call   0x140001f60
   140001e7a:	test   eax,eax
   140001e7c:	jne    0x140001f50
   140001e82:	lea    rdx,[rip+0x9bf7]        # 0x14000ba80
   140001e89:	add    rsi,0x18
   140001e8d:	call   0x140001f60
   140001e92:	test   eax,eax
   140001e94:	jne    0x140001ec5
   140001e96:	lea    rdx,[rip+0x9c03]        # 0x14000baa0
   140001e9d:	call   0x140001f60
   140001ea2:	test   eax,eax
   140001ea4:	jne    0x1400062fe
   140001eaa:	mov    ebx,0x80004002
   140001eaf:	test   ebx,ebx
   140001eb1:	jns    0x140001ec8
   140001eb3:	mov    eax,ebx
   140001eb5:	mov    rbx,QWORD PTR [rsp+0x30]
   140001eba:	mov    rsi,QWORD PTR [rsp+0x38]
   140001ebf:	add    rsp,0x20
   140001ec3:	pop    rdi
   140001ec4:	ret    
   140001ec5:	mov    QWORD PTR [r8],rsi
   140001ec8:	mov    rdi,QWORD PTR [r8]
   140001ecb:	mov    rax,QWORD PTR [rdi]
   140001ece:	mov    rsi,QWORD PTR [rax+0x8]
   140001ed2:	lea    rax,[rip+0xfffffffffffffef7]        # 0x140001dd0
   140001ed9:	cmp    rsi,rax
   140001edc:	jne    0x140001ef8
   140001ede:	mov    rcx,rdi
   140001ee1:	call   0x140001dd0
   140001ee6:	mov    eax,ebx
   140001ee8:	mov    rbx,QWORD PTR [rsp+0x30]
   140001eed:	mov    rsi,QWORD PTR [rsp+0x38]
   140001ef2:	add    rsp,0x20
   140001ef6:	pop    rdi
   140001ef7:	ret    
   140001ef8:	mov    rcx,rsi
   140001efb:	call   QWORD PTR [rip+0x94cf]        # 0x14000b3d0
   140001f01:	mov    rcx,rdi
   140001f04:	call   rsi
   140001f06:	mov    rsi,QWORD PTR [rsp+0x38]
   140001f0b:	mov    eax,ebx
   140001f0d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f12:	add    rsp,0x20
   140001f16:	pop    rdi
   140001f17:	ret    
   140001f18:	mov    eax,DWORD PTR [rip+0x9b76]        # 0x14000ba94
   140001f1e:	cmp    DWORD PTR [r9+0x4],eax
   140001f22:	jne    0x140001e6e
   140001f28:	mov    eax,DWORD PTR [rip+0x9b6a]        # 0x14000ba98
   140001f2e:	cmp    DWORD PTR [r9+0x8],eax
   140001f32:	jne    0x140001e6e
   140001f38:	mov    eax,DWORD PTR [rip+0x9b5e]        # 0x14000ba9c
   140001f3e:	cmp    DWORD PTR [r9+0xc],eax
   140001f42:	jne    0x140001e6e
   140001f48:	mov    QWORD PTR [r8],rsi
   140001f4b:	jmp    0x140001ec8
   140001f50:	mov    QWORD PTR [r8],rsi
   140001f53:	jmp    0x140001eaf
   140001f58:	int3   
   140001f59:	int3   
   140001f5a:	int3   
   140001f5b:	int3   
   140001f5c:	int3   
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	mov    eax,DWORD PTR [rdx]
   140001f62:	cmp    DWORD PTR [rcx],eax
   140001f64:	je     0x140001f69
   140001f66:	xor    eax,eax
   140001f68:	ret    
   140001f69:	mov    eax,DWORD PTR [rdx+0x4]
   140001f6c:	cmp    DWORD PTR [rcx+0x4],eax
   140001f6f:	jne    0x140001f66
   140001f71:	mov    eax,DWORD PTR [rdx+0x8]
   140001f74:	cmp    DWORD PTR [rcx+0x8],eax
   140001f77:	jne    0x140001f66
   140001f79:	mov    eax,DWORD PTR [rdx+0xc]
   140001f7c:	cmp    DWORD PTR [rcx+0xc],eax
   140001f7f:	jne    0x140001f66
   140001f81:	mov    eax,0x1
   140001f86:	ret    
   140001f87:	int3   
   140001f88:	int3   
   140001f89:	int3   
   140001f8a:	int3   
   140001f8b:	int3   
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	push   r12
   140001f92:	push   r14
   140001f94:	push   r15
   140001f96:	sub    rsp,0x30
   140001f9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001fa3:	mov    QWORD PTR [rsp+0x50],rbx
   140001fa8:	mov    QWORD PTR [rsp+0x60],rsi
   140001fad:	mov    QWORD PTR [rsp+0x68],rdi
   140001fb2:	mov    rsi,rcx
   140001fb5:	lea    rdi,[rip+0x10094]        # 0x140012050
   140001fbc:	lea    r15,[rip+0x1014d]        # 0x140012110
   140001fc3:	movabs r12,0xfffffffffffffff
   140001fcd:	nop    DWORD PTR [rax]
   140001fd0:	cmp    rdi,r15
   140001fd3:	je     0x14000206a
   140001fd9:	mov    rcx,QWORD PTR [rsi+0x38]
   140001fdd:	cmp    rdi,rcx
   140001fe0:	jb     0x140006328
   140001fe6:	mov    rdx,QWORD PTR [rsi+0x40]
   140001fea:	cmp    rcx,rdx
   140001fed:	jne    0x14000204d
   140001fef:	mov    rax,rdx
   140001ff2:	sub    rax,rcx
   140001ff5:	sar    rax,0x4
   140001ff9:	cmp    rax,0x1
   140001ffd:	jae    0x14000204d
   140001fff:	mov    r8,QWORD PTR [rsi+0x30]
   140002003:	sub    rcx,r8
   140002006:	sar    rcx,0x4
   14000200a:	mov    rax,r12
   14000200d:	sub    rax,rcx
   140002010:	cmp    rax,0x1
   140002014:	jb     0x140006368
   14000201a:	lea    r9,[rcx+0x1]
   14000201e:	sub    rdx,r8
   140002021:	sar    rdx,0x4
   140002025:	mov    rcx,rdx
   140002028:	shr    rcx,1
   14000202b:	mov    rax,r12
   14000202e:	sub    rax,rcx
   140002031:	cmp    rax,rdx
   140002034:	jb     0x140006374
   14000203a:	add    rdx,rcx
   14000203d:	cmp    rdx,r9
   140002040:	cmovb  rdx,r9
   140002044:	lea    rcx,[rsi+0x30]
   140002048:	call   0x140002130
   14000204d:	mov    rax,QWORD PTR [rsi+0x38]
   140002051:	test   rax,rax
   140002054:	je     0x14000205c
   140002056:	movups xmm0,XMMWORD PTR [rdi]
   140002059:	movups XMMWORD PTR [rax],xmm0
   14000205c:	add    QWORD PTR [rsi+0x38],0x10
   140002061:	add    rdi,0x10
   140002065:	jmp    0x140001fd0
   14000206a:	xor    eax,eax
   14000206c:	mov    rbx,QWORD PTR [rsp+0x50]
   140002071:	mov    rsi,QWORD PTR [rsp+0x60]
   140002076:	mov    rdi,QWORD PTR [rsp+0x68]
   14000207b:	add    rsp,0x30
   14000207f:	pop    r15
   140002081:	pop    r14
   140002083:	pop    r12
   140002085:	ret    
   140002086:	mov    eax,DWORD PTR [rsp+0x58]
   14000208a:	jmp    0x14000206c
   14000208c:	int3   
   14000208d:	int3   
   14000208e:	int3   
   14000208f:	int3   
   140002090:	int3   
   140002091:	int3   
   140002092:	int3   
   140002093:	int3   
   140002094:	int3   
   140002095:	int3   
   140002096:	int3   
   140002097:	int3   
   140002098:	int3   
   140002099:	int3   
   14000209a:	int3   
   14000209b:	int3   
   14000209c:	int3   
   14000209d:	int3   
   14000209e:	int3   
   14000209f:	int3   
   1400020a0:	sub    rsp,0x28
   1400020a4:	mov    DWORD PTR [r8],0x0
   1400020ab:	mov    r9,QWORD PTR [rcx+0x20]
   1400020af:	sub    r9,QWORD PTR [rcx+0x18]
   1400020b3:	sar    r9,0x4
   1400020b7:	mov    eax,edx
   1400020b9:	cmp    rax,r9
   1400020bc:	jae    0x14000637e
   1400020c2:	mov    DWORD PTR [r8],0x1
   1400020c9:	xor    eax,eax
   1400020cb:	add    rsp,0x28
   1400020cf:	ret    
   1400020d0:	int3   
   1400020d1:	int3   
   1400020d2:	int3   
   1400020d3:	int3   
   1400020d4:	int3   
   1400020d5:	int3   
   1400020d6:	int3   
   1400020d7:	int3   
   1400020d8:	int3   
   1400020d9:	int3   
   1400020da:	int3   
   1400020db:	int3   
   1400020dc:	int3   
   1400020dd:	int3   
   1400020de:	int3   
   1400020df:	int3   
   1400020e0:	sub    rsp,0x38
   1400020e4:	mov    r10,rcx
   1400020e7:	mov    ecx,edx
   1400020e9:	mov    rax,QWORD PTR [r10+0x20]
   1400020ed:	sub    rax,QWORD PTR [r10+0x18]
   1400020f1:	sar    rax,0x4
   1400020f5:	cmp    rcx,rax
   1400020f8:	jae    0x1400063a4
   1400020fe:	shl    rcx,0x4
   140002102:	xor    edx,edx
   140002104:	add    rcx,QWORD PTR [r10+0x18]
   140002108:	mov    QWORD PTR [rsp+0x20],r9
   14000210d:	mov    r9,r8
   140002110:	mov    r8d,0x401
   140002116:	call   QWORD PTR [rip+0x8f3c]        # 0x14000b058
   14000211c:	add    rsp,0x38
   140002120:	ret    
   140002121:	int3   
   140002122:	int3   
   140002123:	int3   
   140002124:	int3   
   140002125:	int3   
   140002126:	int3   
   140002127:	int3   
   140002128:	int3   
   140002129:	int3   
   14000212a:	int3   
   14000212b:	int3   
   14000212c:	int3   
   14000212d:	int3   
   14000212e:	int3   
   14000212f:	int3   
   140002130:	push   r14
   140002132:	sub    rsp,0x40
   140002136:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000213f:	mov    QWORD PTR [rsp+0x50],rbx
   140002144:	mov    QWORD PTR [rsp+0x60],rsi
   140002149:	mov    QWORD PTR [rsp+0x68],rdi
   14000214e:	mov    rdi,rdx
   140002151:	mov    r14,rcx
   140002154:	xor    ebx,ebx
   140002156:	mov    QWORD PTR [rsp+0x58],rbx
   14000215b:	test   rdx,rdx
   14000215e:	je     0x140002188
   140002160:	movabs rax,0xfffffffffffffff
   14000216a:	cmp    rdx,rax
   14000216d:	ja     0x1400021dc
   14000216f:	mov    rcx,rdx
   140002172:	shl    rcx,0x4
   140002176:	call   0x140004950
   14000217b:	mov    rbx,rax
   14000217e:	mov    QWORD PTR [rsp+0x58],rax
   140002183:	test   rax,rax
   140002186:	je     0x1400021dc
   140002188:	mov    r8,rbx
   14000218b:	mov    rdx,QWORD PTR [r14+0x8]
   14000218f:	mov    rcx,QWORD PTR [r14]
   140002192:	call   0x1400021f0
   140002197:	nop
   140002198:	mov    rcx,QWORD PTR [r14]
   14000219b:	mov    rsi,QWORD PTR [r14+0x8]
   14000219f:	sub    rsi,rcx
   1400021a2:	test   rcx,rcx
   1400021a5:	je     0x1400021ad
   1400021a7:	call   QWORD PTR [rip+0x917b]        # 0x14000b328
   1400021ad:	shl    rdi,0x4
   1400021b1:	add    rdi,rbx
   1400021b4:	mov    QWORD PTR [r14+0x10],rdi
   1400021b8:	and    rsi,0xfffffffffffffff0
   1400021bc:	add    rsi,rbx
   1400021bf:	mov    QWORD PTR [r14+0x8],rsi
   1400021c3:	mov    QWORD PTR [r14],rbx
   1400021c6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400021cb:	mov    rsi,QWORD PTR [rsp+0x60]
   1400021d0:	mov    rdi,QWORD PTR [rsp+0x68]
   1400021d5:	add    rsp,0x40
   1400021d9:	pop    r14
   1400021db:	ret    
   1400021dc:	call   0x140004380
   1400021e1:	int3   
   1400021e2:	int3   
   1400021e3:	int3   
   1400021e4:	int3   
   1400021e5:	int3   
   1400021e6:	int3   
   1400021e7:	int3   
   1400021e8:	int3   
   1400021e9:	int3   
   1400021ea:	int3   
   1400021eb:	int3   
   1400021ec:	int3   
   1400021ed:	int3   
   1400021ee:	int3   
   1400021ef:	int3   
   1400021f0:	sub    rsp,0x38
   1400021f4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400021fd:	cmp    rcx,rdx
   140002200:	je     0x14000221b
   140002202:	test   r8,r8
   140002205:	je     0x14000220e
   140002207:	movups xmm0,XMMWORD PTR [rcx]
   14000220a:	movups XMMWORD PTR [r8],xmm0
   14000220e:	add    r8,0x10
   140002212:	add    rcx,0x10
   140002216:	cmp    rcx,rdx
   140002219:	jne    0x140002202
   14000221b:	mov    rax,r8
   14000221e:	add    rsp,0x38
   140002222:	ret    
   140002223:	int3   
   140002224:	int3   
   140002225:	int3   
   140002226:	int3   
   140002227:	int3   
   140002228:	int3   
   140002229:	int3   
   14000222a:	int3   
   14000222b:	int3   
   14000222c:	int3   
   14000222d:	int3   
   14000222e:	int3   
   14000222f:	int3   
   140002230:	mov    QWORD PTR [rsp+0x10],rbx
   140002235:	mov    QWORD PTR [rsp+0x18],rbp
   14000223a:	mov    QWORD PTR [rsp+0x20],rsi
   14000223f:	push   rdi
   140002240:	sub    rsp,0x70
   140002244:	mov    rax,QWORD PTR [rip+0xfddd]        # 0x140012028
   14000224b:	xor    rax,rsp
   14000224e:	mov    QWORD PTR [rsp+0x68],rax
   140002253:	mov    rbx,rcx
   140002256:	call   0x1400030a0
   14000225b:	xor    ebp,ebp
   14000225d:	lea    rdi,[rbx+0x38]
   140002261:	xor    edx,edx
   140002263:	mov    r8d,0x90
   140002269:	mov    rcx,QWORD PTR [rax+0x8]
   14000226d:	lea    rax,[rbx+0x68]
   140002271:	mov    QWORD PTR [rbx+0x28],rax
   140002275:	lea    rax,[rip+0x98d4]        # 0x14000bb50
   14000227c:	mov    QWORD PTR [rbx+0x8],rbp
   140002280:	mov    QWORD PTR [rbx+0x10],rbx
   140002284:	mov    QWORD PTR [rbx+0x18],rbp
   140002288:	mov    DWORD PTR [rbx+0x20],ebp
   14000228b:	mov    QWORD PTR [rbx+0x30],rdi
   14000228f:	mov    QWORD PTR [rdi+0x28],rcx
   140002293:	lea    rcx,[rdi+0x58]
   140002297:	mov    DWORD PTR [rdi],ebp
   140002299:	mov    BYTE PTR [rdi+0x4],bpl
   14000229d:	mov    BYTE PTR [rdi+0x48],bpl
   1400022a1:	mov    DWORD PTR [rdi+0x30],ebp
   1400022a4:	mov    QWORD PTR [rdi+0x38],rax
   1400022a8:	mov    QWORD PTR [rdi+0x40],rbp
   1400022ac:	mov    QWORD PTR [rdi+0x50],0x1
   1400022b4:	mov    QWORD PTR [rcx+0x90],rbp
   1400022bb:	mov    QWORD PTR [rcx+0x98],rbp
   1400022c2:	call   0x1400055d6
   1400022c7:	mov    QWORD PTR [rdi+0xf8],rbp
   1400022ce:	lea    rax,[rip+0x9863]        # 0x14000bb38
   1400022d5:	mov    QWORD PTR [rbx+0x138],rbp
   1400022dc:	lea    rdx,[rsp+0x30]
   1400022e1:	mov    rcx,rbx
   1400022e4:	mov    QWORD PTR [rbx],rax
   1400022e7:	call   0x140002810
   1400022ec:	mov    rdi,QWORD PTR [rbx+0x30]
   1400022f0:	mov    rcx,QWORD PTR [rdi+0x28]
   1400022f4:	cmp    DWORD PTR [rcx],0x5
   1400022f7:	jbe    0x1400063ca
   1400022fd:	movabs rdx,0x400000000000
   140002307:	test   QWORD PTR [rcx+0x10],rdx
   14000230b:	je     0x1400063ca
   140002311:	mov    rcx,QWORD PTR [rcx+0x18]
   140002315:	mov    rax,rcx
   140002318:	and    rax,rdx
   14000231b:	cmp    rax,rcx
   14000231e:	jne    0x1400063ca
   140002324:	lea    rdx,[rdi+0x8]
   140002328:	lea    ecx,[rbp+0x3]
   14000232b:	call   QWORD PTR [rip+0x8eef]        # 0x14000b220
   140002331:	mov    rcx,QWORD PTR [rsp+0x30]
   140002336:	mov    DWORD PTR [rdi],0x1
   14000233c:	test   rcx,rcx
   14000233f:	jne    0x1400063d5
   140002345:	mov    rax,QWORD PTR [rbx+0x30]
   140002349:	mov    rdi,QWORD PTR [rax+0x28]
   14000234d:	cmp    DWORD PTR [rdi],0x5
   140002350:	jbe    0x1400023b9
   140002352:	movabs rdx,0x400000000000
   14000235c:	mov    rcx,rdi
   14000235f:	call   0x140003070
   140002364:	test   al,al
   140002366:	je     0x1400023b9
   140002368:	call   QWORD PTR [rip+0x8db2]        # 0x14000b120
   14000236e:	mov    DWORD PTR [rsp+0x30],eax
   140002372:	lea    rax,[rsp+0x30]
   140002377:	mov    QWORD PTR [rsp+0x58],rax
   14000237c:	mov    QWORD PTR [rsp+0x60],0x4
   140002385:	mov    rcx,rbx
   140002388:	call   0x140004058
   14000238d:	mov    r8,QWORD PTR [rbx+0x30]
   140002391:	lea    rdx,[rip+0xb7b9]        # 0x14000db51
   140002398:	mov    r9,rax
   14000239b:	add    r8,0x8
   14000239f:	lea    rax,[rsp+0x38]
   1400023a4:	mov    rcx,rdi
   1400023a7:	mov    QWORD PTR [rsp+0x28],rax
   1400023ac:	mov    DWORD PTR [rsp+0x20],0x3
   1400023b4:	call   0x140002fc0
   1400023b9:	cmp    DWORD PTR [rbx+0x20],ebp
   1400023bc:	jne    0x1400023c7
   1400023be:	lea    rcx,[rbx+0x8]
   1400023c2:	call   0x140002ef0
   1400023c7:	mov    rax,rbx
   1400023ca:	mov    rcx,QWORD PTR [rsp+0x68]
   1400023cf:	xor    rcx,rsp
   1400023d2:	call   0x140004dd0
   1400023d7:	lea    r11,[rsp+0x70]
   1400023dc:	mov    rbx,QWORD PTR [r11+0x18]
   1400023e0:	mov    rbp,QWORD PTR [r11+0x20]
   1400023e4:	mov    rsi,QWORD PTR [r11+0x28]
   1400023e8:	mov    rsp,r11
   1400023eb:	pop    rdi
   1400023ec:	ret    
   1400023ed:	int3   
   1400023ee:	int3   
   1400023ef:	int3   
   1400023f0:	int3   
   1400023f1:	int3   
   1400023f2:	int3   
   1400023f3:	int3   
   1400023f4:	int3   
   1400023f5:	int3   
   1400023f6:	int3   
   1400023f7:	int3   
   1400023f8:	int3   
   1400023f9:	int3   
   1400023fa:	int3   
   1400023fb:	int3   
   1400023fc:	int3   
   1400023fd:	int3   
   1400023fe:	int3   
   1400023ff:	int3   
   140002400:	mov    QWORD PTR [rsp+0x10],rbx
   140002405:	mov    QWORD PTR [rsp+0x18],rbp
   14000240a:	mov    QWORD PTR [rsp+0x20],rsi
   14000240f:	push   rdi
   140002410:	sub    rsp,0x70
   140002414:	mov    rax,QWORD PTR [rip+0xfc0d]        # 0x140012028
   14000241b:	xor    rax,rsp
   14000241e:	mov    QWORD PTR [rsp+0x68],rax
   140002423:	mov    rbx,rcx
   140002426:	call   0x1400030a0
   14000242b:	xor    ebp,ebp
   14000242d:	lea    rdi,[rbx+0x38]
   140002431:	xor    edx,edx
   140002433:	mov    r8d,0x90
   140002439:	mov    rcx,QWORD PTR [rax+0x8]
   14000243d:	lea    rax,[rbx+0x68]
   140002441:	mov    QWORD PTR [rbx+0x28],rax
   140002445:	lea    rax,[rip+0x972c]        # 0x14000bb78
   14000244c:	mov    QWORD PTR [rbx+0x8],rbp
   140002450:	mov    QWORD PTR [rbx+0x10],rbx
   140002454:	mov    QWORD PTR [rbx+0x18],rbp
   140002458:	mov    DWORD PTR [rbx+0x20],ebp
   14000245b:	mov    QWORD PTR [rbx+0x30],rdi
   14000245f:	mov    QWORD PTR [rdi+0x28],rcx
   140002463:	lea    rcx,[rdi+0x58]
   140002467:	mov    DWORD PTR [rdi],ebp
   140002469:	mov    BYTE PTR [rdi+0x4],bpl
   14000246d:	mov    BYTE PTR [rdi+0x48],bpl
   140002471:	mov    DWORD PTR [rdi+0x30],ebp
   140002474:	mov    QWORD PTR [rdi+0x38],rax
   140002478:	mov    QWORD PTR [rdi+0x40],rbp
   14000247c:	mov    QWORD PTR [rdi+0x50],0x1
   140002484:	mov    QWORD PTR [rcx+0x90],rbp
   14000248b:	mov    QWORD PTR [rcx+0x98],rbp
   140002492:	call   0x1400055d6
   140002497:	mov    QWORD PTR [rdi+0xf8],rbp
   14000249e:	lea    rax,[rip+0x96bb]        # 0x14000bb60
   1400024a5:	mov    QWORD PTR [rbx+0x138],rbp
   1400024ac:	lea    rdx,[rsp+0x30]
   1400024b1:	mov    rcx,rbx
   1400024b4:	mov    QWORD PTR [rbx],rax
   1400024b7:	call   0x140002810
   1400024bc:	mov    rdi,QWORD PTR [rbx+0x30]
   1400024c0:	mov    rcx,QWORD PTR [rdi+0x28]
   1400024c4:	cmp    DWORD PTR [rcx],0x5
   1400024c7:	jbe    0x1400063e2
   1400024cd:	movabs rdx,0x400000000000
   1400024d7:	test   QWORD PTR [rcx+0x10],rdx
   1400024db:	je     0x1400063e2
   1400024e1:	mov    rcx,QWORD PTR [rcx+0x18]
   1400024e5:	mov    rax,rcx
   1400024e8:	and    rax,rdx
   1400024eb:	cmp    rax,rcx
   1400024ee:	jne    0x1400063e2
   1400024f4:	lea    rdx,[rdi+0x8]
   1400024f8:	lea    ecx,[rbp+0x3]
   1400024fb:	call   QWORD PTR [rip+0x8d1f]        # 0x14000b220
   140002501:	mov    rcx,QWORD PTR [rsp+0x30]
   140002506:	mov    DWORD PTR [rdi],0x1
   14000250c:	test   rcx,rcx
   14000250f:	jne    0x1400063ed
   140002515:	mov    rax,QWORD PTR [rbx+0x30]
   140002519:	mov    rdi,QWORD PTR [rax+0x28]
   14000251d:	cmp    DWORD PTR [rdi],0x5
   140002520:	jbe    0x140002589
   140002522:	movabs rdx,0x400000000000
   14000252c:	mov    rcx,rdi
   14000252f:	call   0x140003070
   140002534:	test   al,al
   140002536:	je     0x140002589
   140002538:	call   QWORD PTR [rip+0x8be2]        # 0x14000b120
   14000253e:	mov    DWORD PTR [rsp+0x30],eax
   140002542:	lea    rax,[rsp+0x30]
   140002547:	mov    QWORD PTR [rsp+0x58],rax
   14000254c:	mov    QWORD PTR [rsp+0x60],0x4
   140002555:	mov    rcx,rbx
   140002558:	call   0x140004058
   14000255d:	mov    r8,QWORD PTR [rbx+0x30]
   140002561:	lea    rdx,[rip+0xb5a7]        # 0x14000db0f
   140002568:	mov    r9,rax
   14000256b:	add    r8,0x8
   14000256f:	lea    rax,[rsp+0x38]
   140002574:	mov    rcx,rdi
   140002577:	mov    QWORD PTR [rsp+0x28],rax
   14000257c:	mov    DWORD PTR [rsp+0x20],0x3
   140002584:	call   0x140002fc0
   140002589:	cmp    DWORD PTR [rbx+0x20],ebp
   14000258c:	jne    0x140002597
   14000258e:	lea    rcx,[rbx+0x8]
   140002592:	call   0x140002ef0
   140002597:	mov    rax,rbx
   14000259a:	mov    rcx,QWORD PTR [rsp+0x68]
   14000259f:	xor    rcx,rsp
   1400025a2:	call   0x140004dd0
   1400025a7:	lea    r11,[rsp+0x70]
   1400025ac:	mov    rbx,QWORD PTR [r11+0x18]
   1400025b0:	mov    rbp,QWORD PTR [r11+0x20]
   1400025b4:	mov    rsi,QWORD PTR [r11+0x28]
   1400025b8:	mov    rsp,r11
   1400025bb:	pop    rdi
   1400025bc:	ret    
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	int3   
   1400025c1:	int3   
   1400025c2:	int3   
   1400025c3:	int3   
   1400025c4:	int3   
   1400025c5:	int3   
   1400025c6:	int3   
   1400025c7:	int3   
   1400025c8:	int3   
   1400025c9:	int3   
   1400025ca:	int3   
   1400025cb:	int3   
   1400025cc:	int3   
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400025d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400025da:	mov    QWORD PTR [rsp+0x20],rsi
   1400025df:	push   rdi
   1400025e0:	sub    rsp,0x70
   1400025e4:	mov    rax,QWORD PTR [rip+0xfa3d]        # 0x140012028
   1400025eb:	xor    rax,rsp
   1400025ee:	mov    QWORD PTR [rsp+0x68],rax
   1400025f3:	mov    rbx,rcx
   1400025f6:	call   0x1400030a0
   1400025fb:	xor    ebp,ebp
   1400025fd:	lea    rdi,[rbx+0x38]
   140002601:	xor    edx,edx
   140002603:	mov    r8d,0x90
   140002609:	mov    rcx,QWORD PTR [rax+0x8]
   14000260d:	lea    rax,[rbx+0x68]
   140002611:	mov    QWORD PTR [rbx+0x28],rax
   140002615:	lea    rax,[rip+0x9594]        # 0x14000bbb0
   14000261c:	mov    QWORD PTR [rbx+0x8],rbp
   140002620:	mov    QWORD PTR [rbx+0x10],rbx
   140002624:	mov    QWORD PTR [rbx+0x18],rbp
   140002628:	mov    DWORD PTR [rbx+0x20],ebp
   14000262b:	mov    QWORD PTR [rbx+0x30],rdi
   14000262f:	mov    QWORD PTR [rdi+0x28],rcx
   140002633:	lea    rcx,[rdi+0x58]
   140002637:	mov    DWORD PTR [rdi],ebp
   140002639:	mov    BYTE PTR [rdi+0x4],bpl
   14000263d:	mov    BYTE PTR [rdi+0x48],bpl
   140002641:	mov    DWORD PTR [rdi+0x30],ebp
   140002644:	mov    QWORD PTR [rdi+0x38],rax
   140002648:	mov    QWORD PTR [rdi+0x40],rbp
   14000264c:	mov    QWORD PTR [rdi+0x50],0x1
   140002654:	mov    QWORD PTR [rcx+0x90],rbp
   14000265b:	mov    QWORD PTR [rcx+0x98],rbp
   140002662:	call   0x1400055d6
   140002667:	mov    QWORD PTR [rdi+0xf8],rbp
   14000266e:	lea    rax,[rip+0x9523]        # 0x14000bb98
   140002675:	mov    QWORD PTR [rbx+0x138],rbp
   14000267c:	lea    rdx,[rsp+0x30]
   140002681:	mov    rcx,rbx
   140002684:	mov    QWORD PTR [rbx],rax
   140002687:	call   0x140002810
   14000268c:	mov    rdi,QWORD PTR [rbx+0x30]
   140002690:	mov    rcx,QWORD PTR [rdi+0x28]
   140002694:	cmp    DWORD PTR [rcx],0x5
   140002697:	jbe    0x1400063fa
   14000269d:	movabs rdx,0x400000000000
   1400026a7:	test   QWORD PTR [rcx+0x10],rdx
   1400026ab:	je     0x1400063fa
   1400026b1:	mov    rcx,QWORD PTR [rcx+0x18]
   1400026b5:	mov    rax,rcx
   1400026b8:	and    rax,rdx
   1400026bb:	cmp    rax,rcx
   1400026be:	jne    0x1400063fa
   1400026c4:	lea    rdx,[rdi+0x8]
   1400026c8:	lea    ecx,[rbp+0x3]
   1400026cb:	call   QWORD PTR [rip+0x8b4f]        # 0x14000b220
   1400026d1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400026d6:	mov    DWORD PTR [rdi],0x1
   1400026dc:	test   rcx,rcx
   1400026df:	jne    0x140006405
   1400026e5:	mov    rax,QWORD PTR [rbx+0x30]
   1400026e9:	mov    rdi,QWORD PTR [rax+0x28]
   1400026ed:	cmp    DWORD PTR [rdi],0x5
   1400026f0:	jbe    0x140002759
   1400026f2:	movabs rdx,0x400000000000
   1400026fc:	mov    rcx,rdi
   1400026ff:	call   0x140003070
   140002704:	test   al,al
   140002706:	je     0x140002759
   140002708:	call   QWORD PTR [rip+0x8a12]        # 0x14000b120
   14000270e:	mov    DWORD PTR [rsp+0x30],eax
   140002712:	lea    rax,[rsp+0x30]
   140002717:	mov    QWORD PTR [rsp+0x58],rax
   14000271c:	mov    QWORD PTR [rsp+0x60],0x4
   140002725:	mov    rcx,rbx
   140002728:	call   0x140004058
   14000272d:	mov    r8,QWORD PTR [rbx+0x30]
   140002731:	lea    rdx,[rip+0xb3a1]        # 0x14000dad9
   140002738:	mov    r9,rax
   14000273b:	add    r8,0x8
   14000273f:	lea    rax,[rsp+0x38]
   140002744:	mov    rcx,rdi
   140002747:	mov    QWORD PTR [rsp+0x28],rax
   14000274c:	mov    DWORD PTR [rsp+0x20],0x3
   140002754:	call   0x140002fc0
   140002759:	cmp    DWORD PTR [rbx+0x20],ebp
   14000275c:	jne    0x140002767
   14000275e:	lea    rcx,[rbx+0x8]
   140002762:	call   0x140002ef0
   140002767:	mov    rax,rbx
   14000276a:	mov    rcx,QWORD PTR [rsp+0x68]
   14000276f:	xor    rcx,rsp
   140002772:	call   0x140004dd0
   140002777:	lea    r11,[rsp+0x70]
   14000277c:	mov    rbx,QWORD PTR [r11+0x18]
   140002780:	mov    rbp,QWORD PTR [r11+0x20]
   140002784:	mov    rsi,QWORD PTR [r11+0x28]
   140002788:	mov    rsp,r11
   14000278b:	pop    rdi
   14000278c:	ret    
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	int3   
   140002791:	int3   
   140002792:	int3   
   140002793:	int3   
   140002794:	int3   
   140002795:	int3   
   140002796:	int3   
   140002797:	int3   
   140002798:	int3   
   140002799:	int3   
   14000279a:	int3   
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400027a5:	push   rdi
   1400027a6:	sub    rsp,0x20
   1400027aa:	mov    rax,QWORD PTR [rcx]
   1400027ad:	mov    rbx,rcx
   1400027b0:	mov    rdi,QWORD PTR [rax+0x8]
   1400027b4:	lea    rax,[rip+0x375]        # 0x140002b30
   1400027bb:	cmp    rdi,rax
   1400027be:	je     0x1400027eb
   1400027c0:	lea    rax,[rip+0x549]        # 0x140002d10
   1400027c7:	cmp    rdi,rax
   1400027ca:	je     0x1400027fb
   1400027cc:	lea    rax,[rip+0x17d]        # 0x140002950
   1400027d3:	cmp    rdi,rax
   1400027d6:	jne    0x140006412
   1400027dc:	mov    rbx,QWORD PTR [rsp+0x38]
   1400027e1:	add    rsp,0x20
   1400027e5:	pop    rdi
   1400027e6:	jmp    0x140002950
   1400027eb:	call   0x140002b30
   1400027f0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400027f5:	add    rsp,0x20
   1400027f9:	pop    rdi
   1400027fa:	ret    
   1400027fb:	mov    rbx,QWORD PTR [rsp+0x38]
   140002800:	add    rsp,0x20
   140002804:	pop    rdi
   140002805:	jmp    0x140002d10
   14000280a:	int3   
   14000280b:	int3   
   14000280c:	int3   
   14000280d:	int3   
   14000280e:	int3   
   14000280f:	int3   
   140002810:	mov    QWORD PTR [rsp+0x18],rbx
   140002815:	mov    QWORD PTR [rsp+0x20],rsi
   14000281a:	push   rdi
   14000281b:	sub    rsp,0x20
   14000281f:	xor    esi,esi
   140002821:	mov    rdi,rdx
   140002824:	mov    DWORD PTR [rsp+0x30],esi
   140002828:	cmp    QWORD PTR [rcx+0x138],rsi
   14000282f:	jne    0x140006426
   140002835:	lea    ebx,[rsi+0x2]
   140002838:	mov    QWORD PTR [rsp+0x30],rsi
   14000283d:	lea    rcx,[rsp+0x30]
   140002842:	mov    rax,QWORD PTR [rcx]
   140002845:	mov    QWORD PTR [rdi],rax
   140002848:	mov    QWORD PTR [rcx],rsi
   14000284b:	test   bl,0x2
   14000284e:	je     0x14000285d
   140002850:	mov    rcx,QWORD PTR [rsp+0x30]
   140002855:	and    ebx,0xfffffffd
   140002858:	test   rcx,rcx
   14000285b:	jne    0x140002879
   14000285d:	test   bl,0x1
   140002860:	jne    0x140006450
   140002866:	mov    rbx,QWORD PTR [rsp+0x40]
   14000286b:	mov    rax,rdi
   14000286e:	mov    rsi,QWORD PTR [rsp+0x48]
   140002873:	add    rsp,0x20
   140002877:	pop    rdi
   140002878:	ret    
   140002879:	call   QWORD PTR [rip+0x8931]        # 0x14000b1b0
   14000287f:	jmp    0x14000285d
   140002881:	int3   
   140002882:	int3   
   140002883:	int3   
   140002884:	int3   
   140002885:	int3   
   140002886:	int3   
   140002887:	int3   
   140002888:	int3   
   140002889:	int3   
   14000288a:	int3   
   14000288b:	int3   
   14000288c:	int3   
   14000288d:	int3   
   14000288e:	int3   
   14000288f:	int3   
   140002890:	mov    QWORD PTR [rsp+0x10],rbx
   140002895:	mov    QWORD PTR [rsp+0x18],rsi
   14000289a:	push   rdi
   14000289b:	sub    rsp,0x90
   1400028a2:	mov    rax,QWORD PTR [rip+0xf77f]        # 0x140012028
   1400028a9:	xor    rax,rsp
   1400028ac:	mov    QWORD PTR [rsp+0x80],rax
   1400028b4:	lea    rdx,[rsp+0x30]
   1400028b9:	mov    rbx,rcx
   1400028bc:	call   0x140002810
   1400028c1:	mov    rdx,QWORD PTR [rbx+0x30]
   1400028c5:	mov    eax,DWORD PTR [rdx+0x50]
   1400028c8:	cmp    eax,0x1
   1400028cb:	jl     0x14000646a
   1400028d1:	xor    esi,esi
   1400028d3:	cmp    DWORD PTR [rdx+0x54],esi
   1400028d6:	jl     0x1400028db
   1400028d8:	mov    DWORD PTR [rdx+0x54],esi
   1400028db:	sub    eax,0x1
   1400028de:	mov    DWORD PTR [rdx+0x50],eax
   1400028e1:	jne    0x14000292f
   1400028e3:	mov    dil,0x1
   1400028e6:	mov    rcx,QWORD PTR [rsp+0x30]
   1400028eb:	test   rcx,rcx
   1400028ee:	jne    0x140002934
   1400028f0:	test   dil,dil
   1400028f3:	je     0x140006476
   1400028f9:	mov    rcx,rbx
   1400028fc:	call   0x1400027a0
   140002901:	cmp    DWORD PTR [rbx+0x20],esi
   140002904:	jne    0x1400064ed
   14000290a:	mov    rcx,QWORD PTR [rsp+0x80]
   140002912:	xor    rcx,rsp
   140002915:	call   0x140004dd0
   14000291a:	lea    r11,[rsp+0x90]
   140002922:	mov    rbx,QWORD PTR [r11+0x18]
   140002926:	mov    rsi,QWORD PTR [r11+0x20]
   14000292a:	mov    rsp,r11
   14000292d:	pop    rdi
   14000292e:	ret    
   14000292f:	xor    dil,dil
   140002932:	jmp    0x1400028e6
   140002934:	call   QWORD PTR [rip+0x8876]        # 0x14000b1b0
   14000293a:	jmp    0x1400028f0
   14000293c:	int3   
   14000293d:	int3   
   14000293e:	int3   
   14000293f:	int3   
   140002940:	int3   
   140002941:	int3   
   140002942:	int3   
   140002943:	int3   
   140002944:	int3   
   140002945:	int3   
   140002946:	int3   
   140002947:	int3   
   140002948:	int3   
   140002949:	int3   
   14000294a:	int3   
   14000294b:	int3   
   14000294c:	int3   
   14000294d:	int3   
   14000294e:	int3   
   14000294f:	int3   
   140002950:	mov    r11,rsp
   140002953:	mov    QWORD PTR [r11+0x18],rbx
   140002957:	mov    QWORD PTR [r11+0x20],rsi
   14000295b:	push   rbp
   14000295c:	lea    rbp,[r11-0xc8]
   140002963:	sub    rsp,0x1c0
   14000296a:	mov    rax,QWORD PTR [rip+0xf6b7]        # 0x140012028
   140002971:	xor    rax,rsp
   140002974:	mov    QWORD PTR [rbp+0xb0],rax
   14000297b:	mov    rax,QWORD PTR [rcx+0x30]
   14000297f:	mov    rbx,rcx
   140002982:	xor    esi,esi
   140002984:	mov    QWORD PTR [r11+0x10],rdi
   140002988:	mov    ecx,DWORD PTR [rax+0x54]
   14000298b:	test   ecx,ecx
   14000298d:	js     0x1400064fc
   140002993:	lea    rdx,[rsp+0x60]
   140002998:	mov    rcx,rbx
   14000299b:	call   0x140002810
   1400029a0:	mov    rax,QWORD PTR [rbx+0x30]
   1400029a4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400029a9:	mov    DWORD PTR [rax],0x2
   1400029af:	test   rcx,rcx
   1400029b2:	jne    0x140006672
   1400029b8:	mov    rdx,QWORD PTR [rbx+0x30]
   1400029bc:	mov    rdi,QWORD PTR [rdx+0x28]
   1400029c0:	cmp    DWORD PTR [rdi],0x5
   1400029c3:	jbe    0x140002ab6
   1400029c9:	movabs r8,0x400000000000
   1400029d3:	test   QWORD PTR [rdi+0x10],r8
   1400029d7:	je     0x140002ab6
   1400029dd:	mov    rax,QWORD PTR [rdi+0x18]
   1400029e1:	and    rax,r8
   1400029e4:	cmp    rax,QWORD PTR [rdi+0x18]
   1400029e8:	jne    0x140002ab6
   1400029ee:	mov    eax,DWORD PTR [rdx+0x54]
   1400029f1:	mov    DWORD PTR [rsp+0x30],eax
   1400029f5:	lea    rax,[rsp+0x30]
   1400029fa:	mov    QWORD PTR [rbp-0x70],rax
   1400029fe:	mov    QWORD PTR [rbp-0x68],0x4
   140002a06:	call   QWORD PTR [rip+0x8714]        # 0x14000b120
   140002a0c:	mov    DWORD PTR [rsp+0x38],eax
   140002a10:	lea    rax,[rsp+0x38]
   140002a15:	mov    QWORD PTR [rbp-0x60],rax
   140002a19:	mov    QWORD PTR [rbp-0x58],0x4
   140002a21:	mov    r8,QWORD PTR [rbx+0x30]
   140002a25:	lea    rax,[rip+0xae44]        # 0x14000d870
   140002a2c:	lea    rcx,[rip+0xb8fb]        # 0x14000e32e
   140002a33:	add    r8,0x8
   140002a37:	sub    ecx,eax
   140002a39:	lea    rdx,[rsp+0x50]
   140002a3e:	movzx  eax,BYTE PTR [rip+0xb97f]        # 0x14000e3c4
   140002a45:	or     ecx,0xb000000
   140002a4b:	movzx  eax,WORD PTR [rip+0xb8dd]        # 0x14000e32f
   140002a52:	xor    r9d,r9d
   140002a55:	mov    DWORD PTR [rsp+0x54],eax
   140002a59:	mov    rax,QWORD PTR [rdi+0x8]
   140002a5d:	mov    QWORD PTR [rsp+0x70],rax
   140002a62:	mov    DWORD PTR [rsp+0x50],ecx
   140002a66:	mov    rcx,QWORD PTR [rdi+0x20]
   140002a6a:	mov    DWORD PTR [rsp+0x58],esi
   140002a6e:	mov    DWORD PTR [rsp+0x5c],0x4000
   140002a76:	movzx  eax,WORD PTR [rax]
   140002a79:	mov    DWORD PTR [rsp+0x78],eax
   140002a7d:	lea    rax,[rip+0xb8b5]        # 0x14000e339
   140002a84:	mov    QWORD PTR [rbp-0x80],rax
   140002a88:	lea    rax,[rsp+0x70]
   140002a8d:	mov    QWORD PTR [rsp+0x28],rax
   140002a92:	mov    DWORD PTR [rsp+0x20],0x4
   140002a9a:	mov    DWORD PTR [rsp+0x7c],0x2
   140002aa2:	mov    DWORD PTR [rbp-0x78],0x32
   140002aa9:	mov    DWORD PTR [rbp-0x74],0x1
   140002ab0:	call   QWORD PTR [rip+0x8772]        # 0x14000b228
   140002ab6:	mov    rdi,QWORD PTR [rsp+0x1d8]
   140002abe:	cmp    DWORD PTR [rbx+0x20],esi
   140002ac1:	je     0x140002afd
   140002ac3:	add    rbx,0x8
   140002ac7:	call   QWORD PTR [rip+0x8653]        # 0x14000b120
   140002acd:	cmp    DWORD PTR [rbx+0x18],eax
   140002ad0:	jne    0x14000667e
   140002ad6:	mov    rax,QWORD PTR [rbx]
   140002ad9:	mov    DWORD PTR [rbx+0x18],esi
   140002adc:	cmp    QWORD PTR [rax],rsi
   140002adf:	je     0x140002afa
   140002ae1:	mov    rax,QWORD PTR [rbx]
   140002ae4:	mov    rax,QWORD PTR [rax]
   140002ae7:	cmp    rax,rbx
   140002aea:	jne    0x140006696
   140002af0:	mov    rcx,QWORD PTR [rbx]
   140002af3:	mov    rax,QWORD PTR [rbx+0x10]
   140002af7:	mov    QWORD PTR [rcx],rax
   140002afa:	mov    QWORD PTR [rbx],rsi
   140002afd:	mov    rcx,QWORD PTR [rbp+0xb0]
   140002b04:	xor    rcx,rsp
   140002b07:	call   0x140004dd0
   140002b0c:	lea    r11,[rsp+0x1c0]
   140002b14:	mov    rbx,QWORD PTR [r11+0x20]
   140002b18:	mov    rsi,QWORD PTR [r11+0x28]
   140002b1c:	mov    rsp,r11
   140002b1f:	pop    rbp
   140002b20:	ret    
   140002b21:	int3   
   140002b22:	int3   
   140002b23:	int3   
   140002b24:	int3   
   140002b25:	int3   
   140002b26:	int3   
   140002b27:	int3   
   140002b28:	int3   
   140002b29:	int3   
   140002b2a:	int3   
   140002b2b:	int3   
   140002b2c:	int3   
   140002b2d:	int3   
   140002b2e:	int3   
   140002b2f:	int3   
   140002b30:	mov    r11,rsp
   140002b33:	mov    QWORD PTR [r11+0x18],rbx
   140002b37:	mov    QWORD PTR [r11+0x20],rsi
   140002b3b:	push   rbp
   140002b3c:	lea    rbp,[r11-0xc8]
   140002b43:	sub    rsp,0x1c0
   140002b4a:	mov    rax,QWORD PTR [rip+0xf4d7]        # 0x140012028
   140002b51:	xor    rax,rsp
   140002b54:	mov    QWORD PTR [rbp+0xb0],rax
   140002b5b:	mov    rax,QWORD PTR [rcx+0x30]
   140002b5f:	mov    rbx,rcx
   140002b62:	xor    esi,esi
   140002b64:	mov    QWORD PTR [r11+0x10],rdi
   140002b68:	mov    ecx,DWORD PTR [rax+0x54]
   140002b6b:	test   ecx,ecx
   140002b6d:	js     0x1400066ac
   140002b73:	lea    rdx,[rsp+0x60]
   140002b78:	mov    rcx,rbx
   140002b7b:	call   0x140002810
   140002b80:	mov    rax,QWORD PTR [rbx+0x30]
   140002b84:	mov    rcx,QWORD PTR [rsp+0x60]
   140002b89:	mov    DWORD PTR [rax],0x2
   140002b8f:	test   rcx,rcx
   140002b92:	jne    0x140006822
   140002b98:	mov    rdx,QWORD PTR [rbx+0x30]
   140002b9c:	mov    rdi,QWORD PTR [rdx+0x28]
   140002ba0:	cmp    DWORD PTR [rdi],0x5
   140002ba3:	jbe    0x140002c96
   140002ba9:	movabs r8,0x400000000000
   140002bb3:	test   QWORD PTR [rdi+0x10],r8
   140002bb7:	je     0x140002c96
   140002bbd:	mov    rax,QWORD PTR [rdi+0x18]
   140002bc1:	and    rax,r8
   140002bc4:	cmp    rax,QWORD PTR [rdi+0x18]
   140002bc8:	jne    0x140002c96
   140002bce:	mov    eax,DWORD PTR [rdx+0x54]
   140002bd1:	mov    DWORD PTR [rsp+0x30],eax
   140002bd5:	lea    rax,[rsp+0x30]
   140002bda:	mov    QWORD PTR [rbp-0x70],rax
   140002bde:	mov    QWORD PTR [rbp-0x68],0x4
   140002be6:	call   QWORD PTR [rip+0x8534]        # 0x14000b120
   140002bec:	mov    DWORD PTR [rsp+0x38],eax
   140002bf0:	lea    rax,[rsp+0x38]
   140002bf5:	mov    QWORD PTR [rbp-0x60],rax
   140002bf9:	mov    QWORD PTR [rbp-0x58],0x4
   140002c01:	mov    r8,QWORD PTR [rbx+0x30]
   140002c05:	lea    rax,[rip+0xac64]        # 0x14000d870
   140002c0c:	lea    rcx,[rip+0xb204]        # 0x14000de17
   140002c13:	add    r8,0x8
   140002c17:	sub    ecx,eax
   140002c19:	lea    rdx,[rsp+0x50]
   140002c1e:	movzx  eax,BYTE PTR [rip+0xb79f]        # 0x14000e3c4
   140002c25:	or     ecx,0xb000000
   140002c2b:	movzx  eax,WORD PTR [rip+0xb1e6]        # 0x14000de18
   140002c32:	xor    r9d,r9d
   140002c35:	mov    DWORD PTR [rsp+0x54],eax
   140002c39:	mov    rax,QWORD PTR [rdi+0x8]
   140002c3d:	mov    QWORD PTR [rsp+0x70],rax
   140002c42:	mov    DWORD PTR [rsp+0x50],ecx
   140002c46:	mov    rcx,QWORD PTR [rdi+0x20]
   140002c4a:	mov    DWORD PTR [rsp+0x58],esi
   140002c4e:	mov    DWORD PTR [rsp+0x5c],0x4000
   140002c56:	movzx  eax,WORD PTR [rax]
   140002c59:	mov    DWORD PTR [rsp+0x78],eax
   140002c5d:	lea    rax,[rip+0xb1be]        # 0x14000de22
   140002c64:	mov    QWORD PTR [rbp-0x80],rax
   140002c68:	lea    rax,[rsp+0x70]
   140002c6d:	mov    QWORD PTR [rsp+0x28],rax
   140002c72:	mov    DWORD PTR [rsp+0x20],0x4
   140002c7a:	mov    DWORD PTR [rsp+0x7c],0x2
   140002c82:	mov    DWORD PTR [rbp-0x78],0x33
   140002c89:	mov    DWORD PTR [rbp-0x74],0x1
   140002c90:	call   QWORD PTR [rip+0x8592]        # 0x14000b228
   140002c96:	mov    rdi,QWORD PTR [rsp+0x1d8]
   140002c9e:	cmp    DWORD PTR [rbx+0x20],esi
   140002ca1:	je     0x140002cdd
   140002ca3:	add    rbx,0x8
   140002ca7:	call   QWORD PTR [rip+0x8473]        # 0x14000b120
   140002cad:	cmp    DWORD PTR [rbx+0x18],eax
   140002cb0:	jne    0x14000682e
   140002cb6:	mov    rax,QWORD PTR [rbx]
   140002cb9:	mov    DWORD PTR [rbx+0x18],esi
   140002cbc:	cmp    QWORD PTR [rax],rsi
   140002cbf:	je     0x140002cda
   140002cc1:	mov    rax,QWORD PTR [rbx]
   140002cc4:	mov    rax,QWORD PTR [rax]
   140002cc7:	cmp    rax,rbx
   140002cca:	jne    0x140006846
   140002cd0:	mov    rcx,QWORD PTR [rbx]
   140002cd3:	mov    rax,QWORD PTR [rbx+0x10]
   140002cd7:	mov    QWORD PTR [rcx],rax
   140002cda:	mov    QWORD PTR [rbx],rsi
   140002cdd:	mov    rcx,QWORD PTR [rbp+0xb0]
   140002ce4:	xor    rcx,rsp
   140002ce7:	call   0x140004dd0
   140002cec:	lea    r11,[rsp+0x1c0]
   140002cf4:	mov    rbx,QWORD PTR [r11+0x20]
   140002cf8:	mov    rsi,QWORD PTR [r11+0x28]
   140002cfc:	mov    rsp,r11
   140002cff:	pop    rbp
   140002d00:	ret    
   140002d01:	int3   
   140002d02:	int3   
   140002d03:	int3   
   140002d04:	int3   
   140002d05:	int3   
   140002d06:	int3   
   140002d07:	int3   
   140002d08:	int3   
   140002d09:	int3   
   140002d0a:	int3   
   140002d0b:	int3   
   140002d0c:	int3   
   140002d0d:	int3   
   140002d0e:	int3   
   140002d0f:	int3   
   140002d10:	mov    r11,rsp
   140002d13:	mov    QWORD PTR [r11+0x18],rbx
   140002d17:	mov    QWORD PTR [r11+0x20],rsi
   140002d1b:	push   rbp
   140002d1c:	lea    rbp,[r11-0xc8]
   140002d23:	sub    rsp,0x1c0
   140002d2a:	mov    rax,QWORD PTR [rip+0xf2f7]        # 0x140012028
   140002d31:	xor    rax,rsp
   140002d34:	mov    QWORD PTR [rbp+0xb0],rax
   140002d3b:	mov    rax,QWORD PTR [rcx+0x30]
   140002d3f:	mov    rbx,rcx
   140002d42:	xor    esi,esi
   140002d44:	mov    QWORD PTR [r11+0x10],rdi
   140002d48:	mov    ecx,DWORD PTR [rax+0x54]
   140002d4b:	test   ecx,ecx
   140002d4d:	js     0x14000685c
   140002d53:	lea    rdx,[rsp+0x60]
   140002d58:	mov    rcx,rbx
   140002d5b:	call   0x140002810
   140002d60:	mov    rax,QWORD PTR [rbx+0x30]
   140002d64:	mov    rcx,QWORD PTR [rsp+0x60]
   140002d69:	mov    DWORD PTR [rax],0x2
   140002d6f:	test   rcx,rcx
   140002d72:	jne    0x1400069d2
   140002d78:	mov    rdx,QWORD PTR [rbx+0x30]
   140002d7c:	mov    rdi,QWORD PTR [rdx+0x28]
   140002d80:	cmp    DWORD PTR [rdi],0x5
   140002d83:	jbe    0x140002e76
   140002d89:	movabs r8,0x400000000000
   140002d93:	test   QWORD PTR [rdi+0x10],r8
   140002d97:	je     0x140002e76
   140002d9d:	mov    rax,QWORD PTR [rdi+0x18]
   140002da1:	and    rax,r8
   140002da4:	cmp    rax,QWORD PTR [rdi+0x18]
   140002da8:	jne    0x140002e76
   140002dae:	mov    eax,DWORD PTR [rdx+0x54]
   140002db1:	mov    DWORD PTR [rsp+0x30],eax
   140002db5:	lea    rax,[rsp+0x30]
   140002dba:	mov    QWORD PTR [rbp-0x70],rax
   140002dbe:	mov    QWORD PTR [rbp-0x68],0x4
   140002dc6:	call   QWORD PTR [rip+0x8354]        # 0x14000b120
   140002dcc:	mov    DWORD PTR [rsp+0x38],eax
   140002dd0:	lea    rax,[rsp+0x38]
   140002dd5:	mov    QWORD PTR [rbp-0x60],rax
   140002dd9:	mov    QWORD PTR [rbp-0x58],0x4
   140002de1:	mov    r8,QWORD PTR [rbx+0x30]
   140002de5:	lea    rax,[rip+0xaa84]        # 0x14000d870
   140002dec:	lea    rcx,[rip+0xb175]        # 0x14000df68
   140002df3:	add    r8,0x8
   140002df7:	sub    ecx,eax
   140002df9:	lea    rdx,[rsp+0x50]
   140002dfe:	movzx  eax,BYTE PTR [rip+0xb5bf]        # 0x14000e3c4
   140002e05:	or     ecx,0xb000000
   140002e0b:	movzx  eax,WORD PTR [rip+0xb157]        # 0x14000df69
   140002e12:	xor    r9d,r9d
   140002e15:	mov    DWORD PTR [rsp+0x54],eax
   140002e19:	mov    rax,QWORD PTR [rdi+0x8]
   140002e1d:	mov    QWORD PTR [rsp+0x70],rax
   140002e22:	mov    DWORD PTR [rsp+0x50],ecx
   140002e26:	mov    rcx,QWORD PTR [rdi+0x20]
   140002e2a:	mov    DWORD PTR [rsp+0x58],esi
   140002e2e:	mov    DWORD PTR [rsp+0x5c],0x4000
   140002e36:	movzx  eax,WORD PTR [rax]
   140002e39:	mov    DWORD PTR [rsp+0x78],eax
   140002e3d:	lea    rax,[rip+0xb12f]        # 0x14000df73
   140002e44:	mov    QWORD PTR [rbp-0x80],rax
   140002e48:	lea    rax,[rsp+0x70]
   140002e4d:	mov    QWORD PTR [rsp+0x28],rax
   140002e52:	mov    DWORD PTR [rsp+0x20],0x4
   140002e5a:	mov    DWORD PTR [rsp+0x7c],0x2
   140002e62:	mov    DWORD PTR [rbp-0x78],0x3f
   140002e69:	mov    DWORD PTR [rbp-0x74],0x1
   140002e70:	call   QWORD PTR [rip+0x83b2]        # 0x14000b228
   140002e76:	mov    rdi,QWORD PTR [rsp+0x1d8]
   140002e7e:	cmp    DWORD PTR [rbx+0x20],esi
   140002e81:	je     0x140002ebd
   140002e83:	add    rbx,0x8
   140002e87:	call   QWORD PTR [rip+0x8293]        # 0x14000b120
   140002e8d:	cmp    DWORD PTR [rbx+0x18],eax
   140002e90:	jne    0x1400069de
   140002e96:	mov    rax,QWORD PTR [rbx]
   140002e99:	mov    DWORD PTR [rbx+0x18],esi
   140002e9c:	cmp    QWORD PTR [rax],rsi
   140002e9f:	je     0x140002eba
   140002ea1:	mov    rax,QWORD PTR [rbx]
   140002ea4:	mov    rax,QWORD PTR [rax]
   140002ea7:	cmp    rax,rbx
   140002eaa:	jne    0x1400069f6
   140002eb0:	mov    rcx,QWORD PTR [rbx]
   140002eb3:	mov    rax,QWORD PTR [rbx+0x10]
   140002eb7:	mov    QWORD PTR [rcx],rax
   140002eba:	mov    QWORD PTR [rbx],rsi
   140002ebd:	mov    rcx,QWORD PTR [rbp+0xb0]
   140002ec4:	xor    rcx,rsp
   140002ec7:	call   0x140004dd0
   140002ecc:	lea    r11,[rsp+0x1c0]
   140002ed4:	mov    rbx,QWORD PTR [r11+0x20]
   140002ed8:	mov    rsi,QWORD PTR [r11+0x28]
   140002edc:	mov    rsp,r11
   140002edf:	pop    rbp
   140002ee0:	ret    
   140002ee1:	int3   
   140002ee2:	int3   
   140002ee3:	int3   
   140002ee4:	int3   
   140002ee5:	int3   
   140002ee6:	int3   
   140002ee7:	int3   
   140002ee8:	int3   
   140002ee9:	int3   
   140002eea:	int3   
   140002eeb:	int3   
   140002eec:	int3   
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	rex push rbx
   140002ef2:	sub    rsp,0x20
   140002ef6:	cmp    DWORD PTR [rcx+0x18],0x0
   140002efa:	mov    rbx,rcx
   140002efd:	jne    0x140006a0c
   140002f03:	mov    QWORD PTR [rsp+0x30],rsi
   140002f08:	mov    QWORD PTR [rsp+0x38],rdi
   140002f0d:	call   QWORD PTR [rip+0x820d]        # 0x14000b120
   140002f13:	mov    r8d,eax
   140002f16:	mov    esi,eax
   140002f18:	movabs rax,0xcccccccccccccccd
   140002f22:	mul    rsi
   140002f25:	lea    rax,[rip+0xf9b4]        # 0x1400128e0
   140002f2c:	shr    rdx,0x4
   140002f30:	lea    rcx,[rdx+rdx*4]
   140002f34:	shl    rcx,0x2
   140002f38:	sub    r8,rcx
   140002f3b:	mov    rcx,QWORD PTR [rax+r8*8]
   140002f3f:	lea    rdi,[rax+r8*8]
   140002f43:	test   rcx,rcx
   140002f46:	je     0x140002f7c
   140002f48:	cmp    DWORD PTR [rcx+0x8],esi
   140002f4b:	jne    0x140006a1c
   140002f51:	mov    rdi,QWORD PTR [rsp+0x38]
   140002f56:	mov    rsi,QWORD PTR [rsp+0x30]
   140002f5b:	mov    QWORD PTR [rbx],rcx
   140002f5e:	test   rcx,rcx
   140002f61:	je     0x140002f76
   140002f63:	mov    rax,QWORD PTR [rcx]
   140002f66:	mov    QWORD PTR [rbx+0x10],rax
   140002f6a:	mov    QWORD PTR [rcx],rbx
   140002f6d:	call   QWORD PTR [rip+0x81ad]        # 0x14000b120
   140002f73:	mov    DWORD PTR [rbx+0x18],eax
   140002f76:	add    rsp,0x20
   140002f7a:	pop    rbx
   140002f7b:	ret    
   140002f7c:	mov    ecx,0x18
   140002f81:	call   QWORD PTR [rip+0x8429]        # 0x14000b3b0
   140002f87:	mov    rcx,rax
   140002f8a:	test   rax,rax
   140002f8d:	je     0x140002fae
   140002f8f:	xor    eax,eax
   140002f91:	mov    QWORD PTR [rcx],rax
   140002f94:	mov    DWORD PTR [rcx+0x8],esi
   140002f97:	mov    QWORD PTR [rcx+0x10],rax
   140002f9b:	prefetchw BYTE PTR [rdi]
   140002f9e:	mov    rax,QWORD PTR [rdi]
   140002fa1:	mov    QWORD PTR [rcx+0x10],rax
   140002fa5:	lock cmpxchg QWORD PTR [rdi],rcx
   140002faa:	je     0x140002f51
   140002fac:	jmp    0x140002f9e
   140002fae:	xor    ecx,ecx
   140002fb0:	jmp    0x140002f51
   140002fb2:	int3   
   140002fb3:	int3   
   140002fb4:	int3   
   140002fb5:	int3   
   140002fb6:	int3   
   140002fb7:	int3   
   140002fb8:	int3   
   140002fb9:	int3   
   140002fba:	int3   
   140002fbb:	int3   
   140002fbc:	int3   
   140002fbd:	int3   
   140002fbe:	int3   
   140002fbf:	int3   
   140002fc0:	rex push rbx
   140002fc2:	sub    rsp,0x40
   140002fc6:	lea    rax,[rip+0xa8a3]        # 0x14000d870
   140002fcd:	mov    r10d,edx
   140002fd0:	sub    r10d,eax
   140002fd3:	mov    r11,r8
   140002fd6:	movzx  eax,BYTE PTR [rip+0xb3e7]        # 0x14000e3c4
   140002fdd:	lea    r8,[rdx+0x1]
   140002fe1:	movzx  eax,BYTE PTR [rdx]
   140002fe4:	mov    rbx,rcx
   140002fe7:	mov    rdx,QWORD PTR [rsp+0x78]
   140002fec:	shl    eax,0x18
   140002fef:	or     eax,r10d
   140002ff2:	mov    QWORD PTR [rsp+0x28],rdx
   140002ff7:	mov    DWORD PTR [rsp+0x30],eax
   140002ffb:	movzx  eax,WORD PTR [r8]
   140002fff:	mov    DWORD PTR [rsp+0x34],eax
   140003003:	mov    eax,DWORD PTR [r8+0x2]
   140003007:	mov    DWORD PTR [rsp+0x38],eax
   14000300b:	mov    eax,DWORD PTR [r8+0x6]
   14000300f:	add    r8,0xa
   140003013:	mov    DWORD PTR [rsp+0x3c],eax
   140003017:	mov    rax,QWORD PTR [rcx+0x8]
   14000301b:	mov    QWORD PTR [rdx],rax
   14000301e:	mov    rax,QWORD PTR [rcx+0x8]
   140003022:	movzx  ecx,WORD PTR [rax]
   140003025:	mov    QWORD PTR [rdx+0x10],r8
   140003029:	mov    DWORD PTR [rdx+0x8],ecx
   14000302c:	mov    DWORD PTR [rdx+0xc],0x2
   140003033:	movzx  eax,WORD PTR [r8]
   140003037:	mov    r8,r11
   14000303a:	mov    DWORD PTR [rdx+0x18],eax
   14000303d:	mov    eax,DWORD PTR [rsp+0x70]
   140003041:	mov    DWORD PTR [rdx+0x1c],0x1
   140003048:	lea    rdx,[rsp+0x30]
   14000304d:	mov    rcx,QWORD PTR [rbx+0x20]
   140003051:	mov    DWORD PTR [rsp+0x20],eax
   140003055:	call   QWORD PTR [rip+0x81cd]        # 0x14000b228
   14000305b:	add    rsp,0x40
   14000305f:	pop    rbx
   140003060:	ret    
   140003061:	int3   
   140003062:	int3   
   140003063:	int3   
   140003064:	int3   
   140003065:	int3   
   140003066:	int3   
   140003067:	int3   
   140003068:	int3   
   140003069:	int3   
   14000306a:	int3   
   14000306b:	int3   
   14000306c:	int3   
   14000306d:	int3   
   14000306e:	int3   
   14000306f:	int3   
   140003070:	test   rdx,rdx
   140003073:	je     0x14000308a
   140003075:	test   QWORD PTR [rcx+0x10],rdx
   140003079:	je     0x14000308d
   14000307b:	mov    rcx,QWORD PTR [rcx+0x18]
   14000307f:	mov    rax,rcx
   140003082:	and    rax,rdx
   140003085:	cmp    rax,rcx
   140003088:	jne    0x14000308d
   14000308a:	mov    al,0x1
   14000308c:	ret    
   14000308d:	xor    al,al
   14000308f:	ret    
   140003090:	int3   
   140003091:	int3   
   140003092:	int3   
   140003093:	int3   
   140003094:	int3   
   140003095:	int3   
   140003096:	int3   
   140003097:	int3   
   140003098:	int3   
   140003099:	int3   
   14000309a:	int3   
   14000309b:	int3   
   14000309c:	int3   
   14000309d:	int3   
   14000309e:	int3   
   14000309f:	int3   
   1400030a0:	sub    rsp,0x48
   1400030a4:	mov    eax,DWORD PTR [rip+0xf8f6]        # 0x1400129a0
   1400030aa:	test   al,0x1
   1400030ac:	je     0x1400030d8
   1400030ae:	lea    r9,[rsp+0x60]
   1400030b3:	xor    edx,edx
   1400030b5:	lea    r8,[rsp+0x50]
   1400030ba:	lea    rcx,[rip+0xf8bf]        # 0x140012980
   1400030c1:	call   QWORD PTR [rip+0x8101]        # 0x14000b1c8
   1400030c7:	cmp    DWORD PTR [rsp+0x50],0x0
   1400030cc:	jne    0x1400030ef
   1400030ce:	mov    rax,QWORD PTR [rsp+0x60]
   1400030d3:	add    rsp,0x48
   1400030d7:	ret    
   1400030d8:	or     eax,0x1
   1400030db:	lea    rcx,[rip+0x2abe]        # 0x140005ba0
   1400030e2:	mov    DWORD PTR [rip+0xf8b8],eax        # 0x1400129a0
   1400030e8:	call   0x140004e98
   1400030ed:	jmp    0x1400030ae
   1400030ef:	lea    rax,[rip+0x84fa]        # 0x14000b5f0
   1400030f6:	mov    QWORD PTR [rsp+0x40],rbx
   1400030fb:	mov    QWORD PTR [rip+0xf886],rax        # 0x140012988
   140003102:	mov    eax,DWORD PTR [rip+0xf768]        # 0x140012870
   140003108:	mov    QWORD PTR [rsp+0x38],rdi
   14000310d:	lea    rdi,[rip+0xf874]        # 0x140012988
   140003114:	mov    QWORD PTR [rsp+0x60],rdi
   140003119:	test   al,0x1
   14000311b:	je     0x140006a2e
   140003121:	lea    rbx,[rip+0xf750]        # 0x140012878
   140003128:	xor    edx,edx
   14000312a:	mov    rcx,rbx
   14000312d:	lea    r9,[rsp+0x68]
   140003132:	lea    r8,[rsp+0x58]
   140003137:	call   QWORD PTR [rip+0x808b]        # 0x14000b1c8
   14000313d:	cmp    DWORD PTR [rsp+0x58],0x0
   140003142:	jne    0x140006a49
   140003148:	mov    rax,QWORD PTR [rsp+0x68]
   14000314d:	mov    rcx,QWORD PTR [rax+0x8]
   140003151:	mov    rax,QWORD PTR [rip+0xf830]        # 0x140012988
   140003158:	mov    QWORD PTR [rip+0xf831],rcx        # 0x140012990
   14000315f:	mov    BYTE PTR [rip+0xf832],0x0        # 0x140012998
   140003166:	mov    DWORD PTR [rip+0xf82c],0x1        # 0x14001299c
   140003170:	mov    rbx,QWORD PTR [rax+0x8]
   140003174:	lea    rax,[rip+0x115]        # 0x140003290
   14000317b:	cmp    rbx,rax
   14000317e:	jne    0x140006a8e
   140003184:	mov    r8,rdi
   140003187:	lea    rcx,[rip+0xf7f2]        # 0x140012980
   14000318e:	xor    edx,edx
   140003190:	call   QWORD PTR [rip+0x8012]        # 0x14000b1a8
   140003196:	mov    rdi,QWORD PTR [rsp+0x38]
   14000319b:	mov    rbx,QWORD PTR [rsp+0x40]
   1400031a0:	jmp    0x1400030ce
   1400031a5:	int3   
   1400031a6:	int3   
   1400031a7:	int3   
   1400031a8:	int3   
   1400031a9:	int3   
   1400031aa:	int3   
   1400031ab:	int3   
   1400031ac:	int3   
   1400031ad:	int3   
   1400031ae:	int3   
   1400031af:	int3   
   1400031b0:	rex push rbx
   1400031b2:	sub    rsp,0x40
   1400031b6:	mov    rax,QWORD PTR [rip+0xee6b]        # 0x140012028
   1400031bd:	xor    rax,rsp
   1400031c0:	mov    QWORD PTR [rsp+0x30],rax
   1400031c5:	cmp    DWORD PTR [rcx+0x8],0x0
   1400031c9:	mov    rbx,rcx
   1400031cc:	jne    0x140003267
   1400031d2:	mov    QWORD PTR [rsp+0x58],rsi
   1400031d7:	lea    rdx,[rip+0xcc2]        # 0x140003ea0
   1400031de:	mov    QWORD PTR [rsp+0x60],rdi
   1400031e3:	mov    rdi,QWORD PTR [rcx]
   1400031e6:	lea    rcx,[rsp+0x20]
   1400031eb:	mov    QWORD PTR [rsp+0x68],r14
   1400031f0:	mov    rsi,QWORD PTR [rdi+0x20]
   1400031f4:	mov    QWORD PTR [rdi+0x10],rsi
   1400031f8:	mov    r8,rsi
   1400031fb:	mov    BYTE PTR [rdi+0x18],0x1
   1400031ff:	mov    rax,QWORD PTR [rsi+0x8]
   140003203:	lea    r9,[rsi+0x20]
   140003207:	movups xmm0,XMMWORD PTR [rax-0x10]
   14000320b:	xor    eax,eax
   14000320d:	mov    QWORD PTR [rsi+0x28],rax
   140003211:	movups XMMWORD PTR [rsp+0x20],xmm0
   140003216:	mov    QWORD PTR [rsi+0x30],rax
   14000321a:	call   QWORD PTR [rip+0x7ff8]        # 0x14000b218
   140003220:	test   eax,eax
   140003222:	jne    0x140003239
   140003224:	mov    r8,QWORD PTR [rsi+0x8]
   140003228:	lea    edx,[rax+0x2]
   14000322b:	mov    rcx,QWORD PTR [rsi+0x20]
   14000322f:	movzx  r9d,WORD PTR [r8]
   140003233:	call   QWORD PTR [rip+0x7fff]        # 0x14000b238
   140003239:	mov    rax,QWORD PTR [rdi+0x8]
   14000323d:	mov    r14,QWORD PTR [rsp+0x68]
   140003242:	mov    DWORD PTR [rdi+0x1c],0x1
   140003249:	mov    rsi,QWORD PTR [rax+0x8]
   14000324d:	lea    rax,[rip+0x3c]        # 0x140003290
   140003254:	cmp    rsi,rax
   140003257:	jne    0x140006aa2
   14000325d:	mov    rsi,QWORD PTR [rsp+0x58]
   140003262:	mov    rdi,QWORD PTR [rsp+0x60]
   140003267:	mov    rcx,QWORD PTR [rbx]
   14000326a:	mov    edx,DWORD PTR [rbx+0x8]
   14000326d:	lea    r8,[rcx+0x8]
   140003271:	call   QWORD PTR [rip+0x7f31]        # 0x14000b1a8
   140003277:	mov    rcx,QWORD PTR [rsp+0x30]
   14000327c:	xor    rcx,rsp
   14000327f:	call   0x140004dd0
   140003284:	add    rsp,0x40
   140003288:	pop    rbx
   140003289:	ret    
   14000328a:	int3   
   14000328b:	int3   
   14000328c:	int3   
   14000328d:	int3   
   14000328e:	int3   
   14000328f:	int3   
   140003290:	ret    0x0
   140003293:	int3   
   140003294:	int3   
   140003295:	int3   
   140003296:	int3   
   140003297:	int3   
   140003298:	int3   
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	int3   
   14000329d:	int3   
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	mov    QWORD PTR [rsp+0x20],rbx
   1400032a5:	push   rsi
   1400032a6:	sub    rsp,0x30
   1400032aa:	lea    rcx,[rsp+0x40]
   1400032af:	call   0x140003480
   1400032b4:	lea    rcx,[rsp+0x48]
   1400032b9:	xor    ebx,ebx
   1400032bb:	cmp    rcx,rax
   1400032be:	je     0x1400032ca
   1400032c0:	mov    rbx,QWORD PTR [rax]
   1400032c3:	mov    QWORD PTR [rax],0x0
   1400032ca:	mov    rsi,QWORD PTR [rsp+0x40]
   1400032cf:	mov    QWORD PTR [rsp+0x50],rdi
   1400032d4:	test   rsi,rsi
   1400032d7:	jne    0x140006ab8
   1400032dd:	test   rbx,rbx
   1400032e0:	je     0x140006adc
   1400032e6:	mov    r9d,0x1
   1400032ec:	lea    rax,[rip+0xf5cd]        # 0x1400128c0
   1400032f3:	mov    r8d,r9d
   1400032f6:	mov    QWORD PTR [rsp+0x20],rax
   1400032fb:	mov    rdx,rbx
   1400032fe:	lea    rcx,[rip+0x88bb]        # 0x14000bbc0
   140003305:	call   QWORD PTR [rip+0x7d45]        # 0x14000b050
   14000330b:	mov    edi,eax
   14000330d:	test   eax,eax
   14000330f:	js     0x140006b00
   140003315:	xor    edi,edi
   140003317:	test   rbx,rbx
   14000331a:	je     0x14000333b
   14000331c:	mov    rdx,QWORD PTR [rbx]
   14000331f:	lea    rax,[rip+0x3a]        # 0x140003360
   140003326:	mov    rsi,QWORD PTR [rdx+0x10]
   14000332a:	cmp    rsi,rax
   14000332d:	jne    0x140006b1f
   140003333:	mov    rcx,rbx
   140003336:	call   0x140003360
   14000333b:	mov    rbx,QWORD PTR [rsp+0x58]
   140003340:	mov    eax,edi
   140003342:	mov    rdi,QWORD PTR [rsp+0x50]
   140003347:	add    rsp,0x30
   14000334b:	pop    rsi
   14000334c:	ret    
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	int3   
   140003351:	int3   
   140003352:	int3   
   140003353:	int3   
   140003354:	int3   
   140003355:	int3   
   140003356:	int3   
   140003357:	int3   
   140003358:	int3   
   140003359:	int3   
   14000335a:	int3   
   14000335b:	int3   
   14000335c:	int3   
   14000335d:	int3   
   14000335e:	int3   
   14000335f:	int3   
   140003360:	mov    QWORD PTR [rsp+0x8],rbx
   140003365:	mov    QWORD PTR [rsp+0x10],rsi
   14000336a:	mov    QWORD PTR [rsp+0x18],rdi
   14000336f:	push   r14
   140003371:	sub    rsp,0x20
   140003375:	mov    r14,rcx
   140003378:	or     ebx,0xffffffff
   14000337b:	lock xadd DWORD PTR [rcx+0xc],ebx
   140003380:	sub    ebx,0x1
   140003383:	je     0x140006b34
   140003389:	test   BYTE PTR [rcx+0x14],0x6
   14000338d:	je     0x140006b65
   140003393:	mov    rsi,QWORD PTR [rsp+0x38]
   140003398:	mov    eax,ebx
   14000339a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000339f:	mov    rdi,QWORD PTR [rsp+0x40]
   1400033a4:	add    rsp,0x20
   1400033a8:	pop    r14
   1400033aa:	ret    
   1400033ab:	int3   
   1400033ac:	int3   
   1400033ad:	int3   
   1400033ae:	int3   
   1400033af:	int3   
   1400033b0:	int3   
   1400033b1:	int3   
   1400033b2:	int3   
   1400033b3:	int3   
   1400033b4:	int3   
   1400033b5:	int3   
   1400033b6:	int3   
   1400033b7:	int3   
   1400033b8:	int3   
   1400033b9:	int3   
   1400033ba:	int3   
   1400033bb:	int3   
   1400033bc:	int3   
   1400033bd:	int3   
   1400033be:	int3   
   1400033bf:	int3   
   1400033c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400033c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400033ca:	push   rdi
   1400033cb:	sub    rsp,0x20
   1400033cf:	xor    esi,esi
   1400033d1:	mov    rdi,rcx
   1400033d4:	mov    QWORD PTR [r8],rsi
   1400033d7:	mov    r9d,DWORD PTR [rdx]
   1400033da:	test   r9d,r9d
   1400033dd:	je     0x140006b90
   1400033e3:	cmp    r9d,0x1
   1400033e7:	jne    0x14000343e
   1400033e9:	mov    eax,DWORD PTR [rip+0xa0fd]        # 0x14000d4ec
   1400033ef:	cmp    DWORD PTR [rdx+0x4],eax
   1400033f2:	jne    0x14000343e
   1400033f4:	mov    eax,DWORD PTR [rip+0xa0f6]        # 0x14000d4f0
   1400033fa:	cmp    DWORD PTR [rdx+0x8],eax
   1400033fd:	jne    0x14000343e
   1400033ff:	mov    eax,DWORD PTR [rip+0xa0ef]        # 0x14000d4f4
   140003405:	cmp    DWORD PTR [rdx+0xc],eax
   140003408:	jne    0x14000343e
   14000340a:	mov    QWORD PTR [r8],rdi
   14000340d:	mov    rax,QWORD PTR [rdi]
   140003410:	mov    rbx,QWORD PTR [rax+0x8]
   140003414:	lea    rax,[rip+0x35]        # 0x140003450
   14000341b:	cmp    rbx,rax
   14000341e:	jne    0x140006bc7
   140003424:	mov    rcx,rdi
   140003427:	call   0x140003450
   14000342c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003431:	mov    eax,esi
   140003433:	mov    rsi,QWORD PTR [rsp+0x38]
   140003438:	add    rsp,0x20
   14000343c:	pop    rdi
   14000343d:	ret    
   14000343e:	mov    esi,0x80004002
   140003443:	jmp    0x14000342c
   140003445:	int3   
   140003446:	int3   
   140003447:	int3   
   140003448:	int3   
   140003449:	int3   
   14000344a:	int3   
   14000344b:	int3   
   14000344c:	int3   
   14000344d:	int3   
   14000344e:	int3   
   14000344f:	int3   
   140003450:	rex push rbx
   140003452:	sub    rsp,0x20
   140003456:	mov    ebx,0x1
   14000345b:	lock xadd DWORD PTR [rcx+0xc],ebx
   140003460:	inc    ebx
   140003462:	test   BYTE PTR [rcx+0x14],0x6
   140003466:	je     0x140006bdc
   14000346c:	mov    eax,ebx
   14000346e:	add    rsp,0x20
   140003472:	pop    rbx
   140003473:	ret    
   140003474:	int3   
   140003475:	int3   
   140003476:	int3   
   140003477:	int3   
   140003478:	int3   
   140003479:	int3   
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	int3   
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	mov    QWORD PTR [rsp+0x18],rbx
   140003485:	push   rdi
   140003486:	sub    rsp,0x20
   14000348a:	mov    rdi,rcx
   14000348d:	mov    QWORD PTR [rcx],0x0
   140003494:	mov    ecx,0x18
   140003499:	lea    rdx,[rip+0xedb0]        # 0x140012250
   1400034a0:	call   0x1400050e4
   1400034a5:	mov    rbx,rax
   1400034a8:	test   rax,rax
   1400034ab:	je     0x1400034de
   1400034ad:	mov    DWORD PTR [rax+0xc],0x1
   1400034b4:	mov    DWORD PTR [rax+0x14],0x4
   1400034bb:	lea    rax,[rip+0x870e]        # 0x14000bbd0
   1400034c2:	mov    QWORD PTR [rbx],rax
   1400034c5:	mov    QWORD PTR [rsp+0x38],r14
   1400034ca:	mov    r14,QWORD PTR [rdi]
   1400034cd:	test   r14,r14
   1400034d0:	jne    0x140006c1a
   1400034d6:	mov    r14,QWORD PTR [rsp+0x38]
   1400034db:	mov    QWORD PTR [rdi],rbx
   1400034de:	mov    rax,rdi
   1400034e1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400034e6:	add    rsp,0x20
   1400034ea:	pop    rdi
   1400034eb:	ret    
   1400034ec:	int3   
   1400034ed:	int3   
   1400034ee:	int3   
   1400034ef:	int3   
   1400034f0:	int3   
   1400034f1:	int3   
   1400034f2:	int3   
   1400034f3:	int3   
   1400034f4:	int3   
   1400034f5:	int3   
   1400034f6:	int3   
   1400034f7:	int3   
   1400034f8:	int3   
   1400034f9:	int3   
   1400034fa:	int3   
   1400034fb:	int3   
   1400034fc:	int3   
   1400034fd:	int3   
   1400034fe:	int3   
   1400034ff:	int3   
   140003500:	rex push rbp
   140003502:	push   rdi
   140003503:	lea    rbp,[rsp-0x4f]
   140003508:	sub    rsp,0xe8
   14000350f:	xor    edi,edi
   140003511:	lea    r9,[rbp+0x6f]
   140003515:	lea    r8,[rbp-0x41]
   140003519:	mov    QWORD PTR [rbp-0x41],rdi
   14000351d:	lea    rcx,[rip+0x86dc]        # 0x14000bc00
   140003524:	mov    DWORD PTR [rbp+0x6f],edi
   140003527:	lea    edx,[rdi+0x1]
   14000352a:	call   QWORD PTR [rip+0x7d60]        # 0x14000b290
   140003530:	test   eax,eax
   140003532:	je     0x140006c3e
   140003538:	lea    rax,[rbp-0x41]
   14000353c:	mov    QWORD PTR [rsp+0xe0],rbx
   140003544:	lea    rdx,[rbp+0x67]
   140003548:	mov    QWORD PTR [rbp+0x67],rax
   14000354c:	lea    rcx,[rbp-0x21]
   140003550:	call   0x1400036f0
   140003555:	mov    rcx,QWORD PTR [rbp-0x41]
   140003559:	lea    rdx,[rbp+0x7f]
   14000355d:	mov    QWORD PTR [rbp-0x49],rdi
   140003561:	mov    QWORD PTR [rbp+0x7f],rdi
   140003565:	call   0x140003860
   14000356a:	mov    ebx,eax
   14000356c:	test   eax,eax
   14000356e:	js     0x140006c59
   140003574:	lea    rax,[rbp-0x49]
   140003578:	mov    QWORD PTR [rbp-0x31],rax
   14000357c:	lea    rdx,[rbp-0x31]
   140003580:	lea    rax,[rbp+0x7f]
   140003584:	lea    rcx,[rbp-0x1]
   140003588:	mov    QWORD PTR [rbp-0x29],rax
   14000358c:	call   0x140003840
   140003591:	lea    rax,[rbp-0x39]
   140003595:	mov    QWORD PTR [rbp-0x39],rdi
   140003599:	lea    rdx,[rbp+0x67]
   14000359d:	mov    QWORD PTR [rbp+0x67],rax
   1400035a1:	lea    rcx,[rbp-0x11]
   1400035a5:	call   0x1400036f0
   1400035aa:	lea    rcx,[rbp-0x39]
   1400035ae:	call   0x140003710
   1400035b3:	test   eax,eax
   1400035b5:	js     0x140003655
   1400035bb:	mov    rbx,QWORD PTR [rbp-0x39]
   1400035bf:	test   rbx,rbx
   1400035c2:	je     0x140003655
   1400035c8:	mov    rcx,QWORD PTR [rbp+0x7f]
   1400035cc:	lea    r9,[rbp+0x77]
   1400035d0:	lea    r8,[rbp-0x31]
   1400035d4:	mov    QWORD PTR [rbp-0x49],rdi
   1400035d8:	lea    rdx,[rbp+0x67]
   1400035dc:	mov    QWORD PTR [rbp-0x31],rdi
   1400035e0:	mov    DWORD PTR [rbp+0x67],edi
   1400035e3:	mov    DWORD PTR [rbp+0x77],edi
   1400035e6:	call   QWORD PTR [rip+0x7c5c]        # 0x14000b248
   1400035ec:	test   eax,eax
   1400035ee:	je     0x140006c77
   1400035f4:	mov    rdx,rbx
   1400035f7:	mov    DWORD PTR [rbp+0x17],0x3
   1400035fe:	lea    rcx,[rbp+0x27]
   140003602:	mov    QWORD PTR [rbp+0x1b],0x1
   14000360a:	call   QWORD PTR [rip+0x7c90]        # 0x14000b2a0
   140003610:	cmp    DWORD PTR [rbp+0x67],edi
   140003613:	je     0x140006c8e
   140003619:	mov    r8,QWORD PTR [rbp-0x31]
   14000361d:	lea    r9,[rbp-0x49]
   140003621:	mov    ecx,0x1
   140003626:	lea    rdx,[rbp+0x17]
   14000362a:	call   QWORD PTR [rip+0x7c50]        # 0x14000b280
   140003630:	test   eax,eax
   140003632:	jne    0x140006c96
   140003638:	mov    r8,QWORD PTR [rbp-0x49]
   14000363c:	xor    r9d,r9d
   14000363f:	mov    rcx,QWORD PTR [rbp+0x7f]
   140003643:	lea    edx,[r9+0x1]
   140003647:	call   QWORD PTR [rip+0x7c03]        # 0x14000b250
   14000364d:	test   eax,eax
   14000364f:	je     0x140006cca
   140003655:	mov    rcx,QWORD PTR [rbp+0x7f]
   140003659:	xor    r9d,r9d
   14000365c:	mov    QWORD PTR [rsp+0x40],rdi
   140003661:	xor    r8d,r8d
   140003664:	mov    DWORD PTR [rsp+0x38],edi
   140003668:	or     edx,0xffffffff
   14000366b:	mov    QWORD PTR [rsp+0x30],rdi
   140003670:	mov    DWORD PTR [rsp+0x28],0x2
   140003678:	mov    DWORD PTR [rsp+0x20],edi
   14000367c:	call   QWORD PTR [rip+0x79b6]        # 0x14000b038
   140003682:	mov    ebx,eax
   140003684:	test   eax,eax
   140003686:	js     0x140006ce6
   14000368c:	mov    ebx,edi
   14000368e:	cmp    BYTE PTR [rbp-0x9],dil
   140003692:	je     0x1400036a1
   140003694:	mov    rcx,QWORD PTR [rbp-0x11]
   140003698:	mov    rcx,QWORD PTR [rcx]
   14000369b:	call   QWORD PTR [rip+0x7a17]        # 0x14000b0b8
   1400036a1:	cmp    BYTE PTR [rbp+0xf],dil
   1400036a5:	je     0x1400036c1
   1400036a7:	mov    rcx,QWORD PTR [rbp-0x1]
   1400036ab:	mov    rcx,QWORD PTR [rcx]
   1400036ae:	call   QWORD PTR [rip+0x7a04]        # 0x14000b0b8
   1400036b4:	mov    rcx,QWORD PTR [rbp+0x7]
   1400036b8:	mov    rcx,QWORD PTR [rcx]
   1400036bb:	call   QWORD PTR [rip+0x79f7]        # 0x14000b0b8
   1400036c1:	cmp    BYTE PTR [rbp-0x19],dil
   1400036c5:	je     0x1400036d4
   1400036c7:	mov    rcx,QWORD PTR [rbp-0x21]
   1400036cb:	mov    rcx,QWORD PTR [rcx]
   1400036ce:	call   QWORD PTR [rip+0x79e4]        # 0x14000b0b8
   1400036d4:	mov    eax,ebx
   1400036d6:	mov    rbx,QWORD PTR [rsp+0xe0]
   1400036de:	add    rsp,0xe8
   1400036e5:	pop    rdi
   1400036e6:	pop    rbp
   1400036e7:	ret    
   1400036e8:	int3   
   1400036e9:	int3   
   1400036ea:	int3   
   1400036eb:	int3   
   1400036ec:	int3   
   1400036ed:	int3   
   1400036ee:	int3   
   1400036ef:	int3   
   1400036f0:	mov    rax,QWORD PTR [rdx]
   1400036f3:	mov    QWORD PTR [rcx],rax
   1400036f6:	mov    rax,rcx
   1400036f9:	mov    BYTE PTR [rcx+0x8],0x1
   1400036fd:	ret    
   1400036fe:	int3   
   1400036ff:	int3   
   140003700:	int3   
   140003701:	int3   
   140003702:	int3   
   140003703:	int3   
   140003704:	int3   
   140003705:	int3   
   140003706:	int3   
   140003707:	int3   
   140003708:	int3   
   140003709:	int3   
   14000370a:	int3   
   14000370b:	int3   
   14000370c:	int3   
   14000370d:	int3   
   14000370e:	int3   
   14000370f:	int3   
   140003710:	rex push rbp
   140003712:	push   rbx
   140003713:	mov    rbp,rsp
   140003716:	sub    rsp,0x58
   14000371a:	mov    rbx,rcx
   14000371d:	test   rcx,rcx
   140003720:	je     0x140006d04
   140003726:	lea    rax,[rbp+0x18]
   14000372a:	mov    QWORD PTR [rsp+0x50],rdi
   14000372f:	xor    edi,edi
   140003731:	mov    QWORD PTR [rsp+0x20],rax
   140003736:	mov    QWORD PTR [rcx],rdi
   140003739:	xor    r9d,r9d
   14000373c:	xor    r8d,r8d
   14000373f:	mov    DWORD PTR [rbp+0x18],edi
   140003742:	lea    edx,[rdi+0x1c]
   140003745:	lea    rcx,[rdi-0x4]
   140003749:	call   QWORD PTR [rip+0x7b09]        # 0x14000b258
   14000374f:	mov    eax,DWORD PTR [rbp+0x18]
   140003752:	test   eax,eax
   140003754:	je     0x140006d29
   14000375a:	mov    edx,eax
   14000375c:	xor    ecx,ecx
   14000375e:	call   QWORD PTR [rip+0x794c]        # 0x14000b0b0
   140003764:	mov    QWORD PTR [rbp+0x20],rax
   140003768:	mov    r8,rax
   14000376b:	test   rax,rax
   14000376e:	je     0x140006d44
   140003774:	lea    rax,[rbp+0x20]
   140003778:	lea    rdx,[rbp+0x28]
   14000377c:	mov    QWORD PTR [rbp+0x28],rax
   140003780:	lea    rcx,[rbp-0x18]
   140003784:	call   0x1400036f0
   140003789:	lea    r9,[rbp+0x18]
   14000378d:	mov    QWORD PTR [rsp+0x20],r9
   140003792:	lea    edx,[rdi+0x1c]
   140003795:	mov    r9d,DWORD PTR [rbp+0x18]
   140003799:	lea    rcx,[rdi-0x4]
   14000379d:	call   QWORD PTR [rip+0x7ab5]        # 0x14000b258
   1400037a3:	test   eax,eax
   1400037a5:	je     0x140006d67
   1400037ab:	mov    rcx,QWORD PTR [rbp+0x20]
   1400037af:	cmp    DWORD PTR [rcx],edi
   1400037b1:	jbe    0x140006dda
   1400037b7:	mov    rcx,QWORD PTR [rcx+0x8]
   1400037bb:	call   QWORD PTR [rip+0x7aaf]        # 0x14000b270
   1400037c1:	mov    edx,eax
   1400037c3:	xor    ecx,ecx
   1400037c5:	mov    DWORD PTR [rbp+0x18],eax
   1400037c8:	call   QWORD PTR [rip+0x78e2]        # 0x14000b0b0
   1400037ce:	mov    QWORD PTR [rbp+0x28],rax
   1400037d2:	mov    r9,rax
   1400037d5:	test   rax,rax
   1400037d8:	je     0x140006d83
   1400037de:	lea    rax,[rbp+0x28]
   1400037e2:	lea    rdx,[rbp+0x30]
   1400037e6:	mov    QWORD PTR [rbp+0x30],rax
   1400037ea:	lea    rcx,[rbp-0x28]
   1400037ee:	call   0x1400036f0
   1400037f3:	mov    r8,QWORD PTR [rbp+0x20]
   1400037f7:	mov    rdx,r9
   1400037fa:	mov    ecx,DWORD PTR [rbp+0x18]
   1400037fd:	mov    r8,QWORD PTR [r8+0x8]
   140003801:	call   QWORD PTR [rip+0x7a59]        # 0x14000b260
   140003807:	test   eax,eax
   140003809:	je     0x140006da6
   14000380f:	mov    rax,QWORD PTR [rbp+0x28]
   140003813:	mov    QWORD PTR [rbx],rax
   140003816:	cmp    BYTE PTR [rbp-0x10],0x0
   14000381a:	je     0x140003829
   14000381c:	mov    rcx,QWORD PTR [rbp-0x18]
   140003820:	mov    rcx,QWORD PTR [rcx]
   140003823:	call   QWORD PTR [rip+0x788f]        # 0x14000b0b8
   140003829:	mov    eax,edi
   14000382b:	mov    rdi,QWORD PTR [rsp+0x50]
   140003830:	add    rsp,0x58
   140003834:	pop    rbx
   140003835:	pop    rbp
   140003836:	ret    
   140003837:	int3   
   140003838:	int3   
   140003839:	int3   
   14000383a:	int3   
   14000383b:	int3   
   14000383c:	int3   
   14000383d:	int3   
   14000383e:	int3   
   14000383f:	int3   
   140003840:	movups xmm0,XMMWORD PTR [rdx]
   140003843:	mov    BYTE PTR [rcx+0x10],0x1
   140003847:	mov    rax,rcx
   14000384a:	movdqu XMMWORD PTR [rcx],xmm0
   14000384e:	ret    
   14000384f:	int3   
   140003850:	int3   
   140003851:	int3   
   140003852:	int3   
   140003853:	int3   
   140003854:	int3   
   140003855:	int3   
   140003856:	int3   
   140003857:	int3   
   140003858:	int3   
   140003859:	int3   
   14000385a:	int3   
   14000385b:	int3   
   14000385c:	int3   
   14000385d:	int3   
   14000385e:	int3   
   14000385f:	int3   
   140003860:	mov    r11,rsp
   140003863:	push   rbp
   140003864:	push   rsi
   140003865:	push   rdi
   140003866:	lea    rbp,[r11-0x5f]
   14000386a:	sub    rsp,0x90
   140003871:	mov    rdi,rdx
   140003874:	mov    rsi,rcx
   140003877:	test   rdx,rdx
   14000387a:	je     0x140006de4
   140003880:	lea    rax,[rbp+0x1b]
   140003884:	mov    QWORD PTR [r11+0x8],rbx
   140003888:	mov    QWORD PTR [r11-0x58],rax
   14000388c:	lea    r8,[rbp+0x17]
   140003890:	xor    ebx,ebx
   140003892:	lea    rax,[rbp+0x6f]
   140003896:	mov    QWORD PTR [r11-0x60],rbx
   14000389a:	xor    r9d,r9d
   14000389d:	mov    QWORD PTR [r11-0x68],rax
   1400038a1:	lea    rax,[rbp+0x77]
   1400038a5:	mov    QWORD PTR [r11-0x70],rbx
   1400038a9:	mov    QWORD PTR [r11-0x78],rax
   1400038ad:	lea    rax,[rbp+0x7f]
   1400038b1:	mov    QWORD PTR [rdx],rbx
   1400038b4:	xor    edx,edx
   1400038b6:	mov    QWORD PTR [r11-0x80],rbx
   1400038ba:	mov    QWORD PTR [rsp+0x20],rax
   1400038bf:	mov    DWORD PTR [rbp+0x17],ebx
   1400038c2:	mov    DWORD PTR [rbp+0x7f],ebx
   1400038c5:	mov    DWORD PTR [rbp+0x77],ebx
   1400038c8:	mov    DWORD PTR [rbp+0x6f],ebx
   1400038cb:	mov    DWORD PTR [rbp+0x1b],ebx
   1400038ce:	call   QWORD PTR [rip+0x7994]        # 0x14000b268
   1400038d4:	mov    edx,DWORD PTR [rbp+0x1b]
   1400038d7:	xor    ecx,ecx
   1400038d9:	add    edx,DWORD PTR [rbp+0x6f]
   1400038dc:	add    edx,DWORD PTR [rbp+0x77]
   1400038df:	add    edx,DWORD PTR [rbp+0x7f]
   1400038e2:	add    edx,DWORD PTR [rbp+0x17]
   1400038e5:	call   QWORD PTR [rip+0x77c5]        # 0x14000b0b0
   1400038eb:	mov    QWORD PTR [rbp+0x1f],rax
   1400038ef:	mov    r10,rax
   1400038f2:	test   rax,rax
   1400038f5:	je     0x140006e09
   1400038fb:	lea    rax,[rbp+0x1f]
   1400038ff:	lea    rdx,[rbp+0x27]
   140003903:	mov    QWORD PTR [rbp+0x27],rax
   140003907:	lea    rcx,[rbp+0x2f]
   14000390b:	call   0x1400036f0
   140003910:	mov    eax,DWORD PTR [rbp+0x7f]
   140003913:	lea    r8,[rbp+0x1b]
   140003917:	mov    edx,DWORD PTR [rbp+0x17]
   14000391a:	mov    QWORD PTR [rsp+0x50],r8
   14000391f:	add    rdx,r10
   140003922:	mov    r9,rdx
   140003925:	lea    r8,[rbp+0x17]
   140003929:	add    rdx,rax
   14000392c:	mov    eax,DWORD PTR [rbp+0x77]
   14000392f:	mov    rcx,rdx
   140003932:	add    rdx,rax
   140003935:	mov    eax,DWORD PTR [rbp+0x6f]
   140003938:	add    rax,rdx
   14000393b:	mov    QWORD PTR [rsp+0x48],rax
   140003940:	lea    rax,[rbp+0x6f]
   140003944:	mov    QWORD PTR [rsp+0x40],rax
   140003949:	lea    rax,[rbp+0x77]
   14000394d:	mov    QWORD PTR [rsp+0x38],rdx
   140003952:	mov    rdx,r10
   140003955:	mov    QWORD PTR [rsp+0x30],rax
   14000395a:	lea    rax,[rbp+0x7f]
   14000395e:	mov    QWORD PTR [rsp+0x28],rcx
   140003963:	mov    rcx,rsi
   140003966:	mov    QWORD PTR [rsp+0x20],rax
   14000396b:	call   QWORD PTR [rip+0x78f7]        # 0x14000b268
   140003971:	test   eax,eax
   140003973:	je     0x140006e2e
   140003979:	mov    rax,QWORD PTR [rbp+0x1f]
   14000397d:	mov    QWORD PTR [rdi],rax
   140003980:	mov    eax,ebx
   140003982:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000398a:	add    rsp,0x90
   140003991:	pop    rdi
   140003992:	pop    rsi
   140003993:	pop    rbp
   140003994:	ret    
   140003995:	int3   
   140003996:	int3   
   140003997:	int3   
   140003998:	int3   
   140003999:	int3   
   14000399a:	int3   
   14000399b:	int3   
   14000399c:	mov    BYTE PTR [rcx+0x1],0x1
   1400039a0:	mov    rax,rcx
   1400039a3:	ret    
   1400039a4:	int3   
   1400039a5:	int3   
   1400039a6:	int3   
   1400039a7:	int3   
   1400039a8:	int3   
   1400039a9:	int3   
   1400039aa:	int3   
   1400039ab:	int3   
   1400039ac:	int3   
   1400039ad:	int3   
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	rex push rbx
   1400039b2:	sub    rsp,0x20
   1400039b6:	mov    rbx,rcx
   1400039b9:	call   0x140003c10
   1400039be:	mov    DWORD PTR [rbx+0x88],eax
   1400039c4:	xor    eax,eax
   1400039c6:	add    rsp,0x20
   1400039ca:	pop    rbx
   1400039cb:	ret    
   1400039cc:	int3   
   1400039cd:	int3   
   1400039ce:	int3   
   1400039cf:	int3   
   1400039d0:	int3   
   1400039d1:	int3   
   1400039d2:	int3   
   1400039d3:	int3   
   1400039d4:	int3   
   1400039d5:	int3   
   1400039d6:	int3   
   1400039d7:	int3   
   1400039d8:	int3   
   1400039d9:	int3   
   1400039da:	int3   
   1400039db:	int3   
   1400039dc:	int3   
   1400039dd:	int3   
   1400039de:	int3   
   1400039df:	int3   
   1400039e0:	rex push rdi
   1400039e2:	push   r12
   1400039e4:	push   r13
   1400039e6:	push   r14
   1400039e8:	push   r15
   1400039ea:	sub    rsp,0x30
   1400039ee:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400039f7:	mov    QWORD PTR [rsp+0x68],rbx
   1400039fc:	mov    QWORD PTR [rsp+0x70],rbp
   140003a01:	mov    QWORD PTR [rsp+0x78],rsi
   140003a06:	mov    r12,r8
   140003a09:	mov    rbx,rdx
   140003a0c:	mov    rdi,rcx
   140003a0f:	mov    rax,QWORD PTR [rcx]
   140003a12:	mov    rsi,QWORD PTR [rax+0x50]
   140003a16:	lea    rax,[rip+0x53]        # 0x140003a70
   140003a1d:	cmp    rsi,rax
   140003a20:	jne    0x140006e62
   140003a26:	call   0x140003a70
   140003a2b:	mov    esi,eax
   140003a2d:	test   eax,eax
   140003a2f:	js     0x140003a41
   140003a31:	xor    r15d,r15d
   140003a34:	xor    r13d,r13d
   140003a37:	cmp    r15,QWORD PTR [rdi+0x18]
   140003a3b:	jb     0x140006e7c
   140003a41:	mov    eax,esi
   140003a43:	mov    rbx,QWORD PTR [rsp+0x68]
   140003a48:	mov    rbp,QWORD PTR [rsp+0x70]
   140003a4d:	mov    rsi,QWORD PTR [rsp+0x78]
   140003a52:	add    rsp,0x30
   140003a56:	pop    r15
   140003a58:	pop    r14
   140003a5a:	pop    r13
   140003a5c:	pop    r12
   140003a5e:	pop    rdi
   140003a5f:	ret    
   140003a60:	int3   
   140003a61:	int3   
   140003a62:	int3   
   140003a63:	int3   
   140003a64:	int3   
   140003a65:	int3   
   140003a66:	int3   
   140003a67:	int3   
   140003a68:	int3   
   140003a69:	int3   
   140003a6a:	int3   
   140003a6b:	int3   
   140003a6c:	int3   
   140003a6d:	int3   
   140003a6e:	int3   
   140003a6f:	int3   
   140003a70:	mov    rax,rsp
   140003a73:	mov    QWORD PTR [rax+0x10],rbx
   140003a77:	push   rdi
   140003a78:	sub    rsp,0x70
   140003a7c:	xor    edi,edi
   140003a7e:	lea    r8,[rax+0x20]
   140003a82:	mov    rbx,rcx
   140003a85:	mov    QWORD PTR [rax+0x20],rdi
   140003a89:	xor    r9d,r9d
   140003a8c:	lea    rcx,[rip+0x837d]        # 0x14000be10
   140003a93:	lea    edx,[rdi+0x1]
   140003a96:	call   QWORD PTR [rip+0x77f4]        # 0x14000b290
   140003a9c:	test   eax,eax
   140003a9e:	je     0x140006f34
   140003aa4:	lea    rax,[rsp+0x98]
   140003aac:	mov    QWORD PTR [rsp+0x80],rsi
   140003ab4:	lea    rdx,[rsp+0x30]
   140003ab9:	mov    QWORD PTR [rsp+0x30],rax
   140003abe:	lea    rcx,[rsp+0x48]
   140003ac3:	call   0x1400036f0
   140003ac8:	mov    rax,QWORD PTR [rsp+0x98]
   140003ad0:	lea    r9,[rip+0x8301]        # 0x14000bdd8
   140003ad7:	xor    r8d,r8d
   140003ada:	mov    QWORD PTR [rsp+0x60],rax
   140003adf:	lea    edx,[rdi+0x1]
   140003ae2:	mov    DWORD PTR [rsp+0x58],0x8
   140003aea:	lea    rcx,[rsp+0x58]
   140003aef:	mov    DWORD PTR [rsp+0x68],edi
   140003af3:	call   QWORD PTR [rip+0x76bf]        # 0x14000b1b8
   140003af9:	mov    rcx,QWORD PTR [rbx+0x38]
   140003afd:	mov    rsi,rax
   140003b00:	mov    QWORD PTR [rbx+0x38],rdi
   140003b04:	lea    rdx,[rcx-0x1]
   140003b08:	cmp    rdx,0xfffffffffffffffd
   140003b0c:	jbe    0x140006f50
   140003b12:	mov    QWORD PTR [rbx+0x38],rsi
   140003b16:	cmp    rsi,0xffffffffffffffff
   140003b1a:	je     0x140006f5c
   140003b20:	xor    r8d,r8d
   140003b23:	lea    r9,[rip+0x827e]        # 0x14000bda8
   140003b2a:	lea    rcx,[rsp+0x58]
   140003b2f:	lea    edx,[r8+0x1]
   140003b33:	call   QWORD PTR [rip+0x767f]        # 0x14000b1b8
   140003b39:	mov    rcx,QWORD PTR [rbx+0x40]
   140003b3d:	mov    rsi,rax
   140003b40:	mov    QWORD PTR [rbx+0x40],rdi
   140003b44:	lea    rdx,[rcx-0x1]
   140003b48:	cmp    rdx,0xfffffffffffffffd
   140003b4c:	jbe    0x140006f79
   140003b52:	mov    QWORD PTR [rbx+0x40],rsi
   140003b56:	cmp    rsi,0xffffffffffffffff
   140003b5a:	je     0x140006f85
   140003b60:	lea    r9,[rbx-0x38]
   140003b64:	mov    QWORD PTR [rsp+0x28],rdi
   140003b69:	lea    r8,[rip+0xfffffffffffffe40]        # 0x1400039b0
   140003b70:	mov    DWORD PTR [rsp+0x20],edi
   140003b74:	xor    edx,edx
   140003b76:	xor    ecx,ecx
   140003b78:	call   QWORD PTR [rip+0x75b2]        # 0x14000b130
   140003b7e:	mov    rcx,QWORD PTR [rbx+0x48]
   140003b82:	mov    rsi,rax
   140003b85:	mov    QWORD PTR [rbx+0x48],rdi
   140003b89:	lea    rdx,[rcx-0x1]
   140003b8d:	cmp    rdx,0xfffffffffffffffd
   140003b91:	jbe    0x140003bf6
   140003b93:	mov    QWORD PTR [rbx+0x48],rsi
   140003b97:	cmp    rsi,0xffffffffffffffff
   140003b9b:	je     0x140006fa2
   140003ba1:	mov    rax,QWORD PTR [rbx+0x38]
   140003ba5:	lea    rdx,[rsp+0x38]
   140003baa:	xor    r8d,r8d
   140003bad:	mov    QWORD PTR [rsp+0x38],rax
   140003bb2:	or     r9d,0xffffffff
   140003bb6:	mov    QWORD PTR [rsp+0x40],rsi
   140003bbb:	lea    ecx,[r8+0x2]
   140003bbf:	call   QWORD PTR [rip+0x7613]        # 0x14000b1d8
   140003bc5:	test   eax,eax
   140003bc7:	jne    0x140003bfe
   140003bc9:	cmp    BYTE PTR [rsp+0x50],0x0
   140003bce:	mov    rsi,QWORD PTR [rsp+0x80]
   140003bd6:	je     0x140003be6
   140003bd8:	mov    rcx,QWORD PTR [rsp+0x48]
   140003bdd:	mov    rcx,QWORD PTR [rcx]
   140003be0:	call   QWORD PTR [rip+0x74d2]        # 0x14000b0b8
   140003be6:	mov    eax,edi
   140003be8:	mov    rbx,QWORD PTR [rsp+0x88]
   140003bf0:	add    rsp,0x70
   140003bf4:	pop    rdi
   140003bf5:	ret    
   140003bf6:	call   QWORD PTR [rip+0x74a4]        # 0x14000b0a0
   140003bfc:	jmp    0x140003b93
   140003bfe:	mov    edi,DWORD PTR [rbx+0x50]
   140003c01:	jmp    0x140003bc9
   140003c03:	int3   
   140003c04:	int3   
   140003c05:	int3   
   140003c06:	int3   
   140003c07:	int3   
   140003c08:	int3   
   140003c09:	int3   
   140003c0a:	int3   
   140003c0b:	int3   
   140003c0c:	int3   
   140003c0d:	int3   
   140003c0e:	int3   
   140003c0f:	int3   
   140003c10:	mov    QWORD PTR [rsp+0x8],rcx
   140003c15:	push   rbx
   140003c16:	push   rsi
   140003c17:	push   rdi
   140003c18:	sub    rsp,0x30
   140003c1c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003c25:	xor    esi,esi
   140003c27:	mov    QWORD PTR [rsp+0x60],rsi
   140003c2c:	mov    QWORD PTR [rsp+0x58],rsi
   140003c31:	mov    QWORD PTR [rsp+0x50],rsi
   140003c36:	lea    rcx,[rsp+0x60]
   140003c3b:	call   QWORD PTR [rip+0x73bf]        # 0x14000b000
   140003c41:	mov    ebx,eax
   140003c43:	test   eax,eax
   140003c45:	js     0x140006fc0
   140003c4b:	mov    rdi,QWORD PTR [rsp+0x58]
   140003c50:	test   rdi,rdi
   140003c53:	jne    0x140006fde
   140003c59:	lea    rcx,[rsp+0x58]
   140003c5e:	call   QWORD PTR [rip+0x73ac]        # 0x14000b010
   140003c64:	mov    ebx,eax
   140003c66:	test   eax,eax
   140003c68:	js     0x140006ffe
   140003c6e:	mov    rdi,QWORD PTR [rsp+0x50]
   140003c73:	test   rdi,rdi
   140003c76:	jne    0x140007019
   140003c7c:	lea    rcx,[rsp+0x50]
   140003c81:	call   QWORD PTR [rip+0x7391]        # 0x14000b018
   140003c87:	mov    ebx,eax
   140003c89:	test   eax,eax
   140003c8b:	js     0x140007039
   140003c91:	mov    rbx,QWORD PTR [rsp+0x50]
   140003c96:	mov    rax,QWORD PTR [rbx]
   140003c99:	mov    rdi,QWORD PTR [rax+0x18]
   140003c9d:	mov    rcx,rdi
   140003ca0:	call   QWORD PTR [rip+0x772a]        # 0x14000b3d0
   140003ca6:	lea    r8,[rip+0x80fb]        # 0x14000bda8
   140003cad:	lea    rdx,[rip+0x8124]        # 0x14000bdd8
   140003cb4:	mov    rcx,rbx
   140003cb7:	call   rdi
   140003cb9:	mov    ebx,eax
   140003cbb:	test   eax,eax
   140003cbd:	js     0x140007054
   140003cc3:	mov    ebx,esi
   140003cc5:	jmp    0x14000706e
   140003cca:	int3   
   140003ccb:	int3   
   140003ccc:	int3   
   140003ccd:	int3   
   140003cce:	int3   
   140003ccf:	int3   
   140003cd0:	mov    QWORD PTR [rsp+0x10],rbx
   140003cd5:	mov    QWORD PTR [rsp+0x18],rbp
   140003cda:	mov    QWORD PTR [rsp+0x20],rsi
   140003cdf:	push   r14
   140003ce1:	sub    rsp,0x40
   140003ce5:	mov    rbx,QWORD PTR [rcx+0x10]
   140003ce9:	mov    rsi,r9
   140003cec:	mov    rbp,r8
   140003cef:	mov    r14,rdx
   140003cf2:	test   rbx,rbx
   140003cf5:	je     0x140003d52
   140003cf7:	mov    rax,QWORD PTR [rbx]
   140003cfa:	mov    QWORD PTR [rsp+0x50],rdi
   140003cff:	mov    rdi,QWORD PTR [rax+0x28]
   140003d03:	mov    rcx,rdi
   140003d06:	call   QWORD PTR [rip+0x76c4]        # 0x14000b3d0
   140003d0c:	mov    eax,DWORD PTR [rsp+0x80]
   140003d13:	mov    r9,rsi
   140003d16:	mov    DWORD PTR [rsp+0x30],eax
   140003d1a:	mov    r8,rbp
   140003d1d:	mov    rax,QWORD PTR [rsp+0x78]
   140003d22:	mov    rdx,r14
   140003d25:	mov    QWORD PTR [rsp+0x28],rax
   140003d2a:	mov    rcx,rbx
   140003d2d:	mov    eax,DWORD PTR [rsp+0x70]
   140003d31:	mov    DWORD PTR [rsp+0x20],eax
   140003d35:	call   rdi
   140003d37:	mov    rdi,QWORD PTR [rsp+0x50]
   140003d3c:	mov    rbx,QWORD PTR [rsp+0x58]
   140003d41:	mov    rbp,QWORD PTR [rsp+0x60]
   140003d46:	mov    rsi,QWORD PTR [rsp+0x68]
   140003d4b:	add    rsp,0x40
   140003d4f:	pop    r14
   140003d51:	ret    
   140003d52:	mov    eax,0x8007000e
   140003d57:	jmp    0x140003d3c
   140003d59:	int3   
   140003d5a:	int3   
   140003d5b:	int3   
   140003d5c:	int3   
   140003d5d:	int3   
   140003d5e:	int3   
   140003d5f:	int3   
   140003d60:	mov    QWORD PTR [rsp+0x10],rbx
   140003d65:	mov    QWORD PTR [rsp+0x18],rbp
   140003d6a:	mov    QWORD PTR [rsp+0x20],rsi
   140003d6f:	push   r14
   140003d71:	sub    rsp,0x40
   140003d75:	mov    rbx,QWORD PTR [rcx+0x10]
   140003d79:	mov    esi,r9d
   140003d7c:	mov    rbp,r8
   140003d7f:	mov    r14,rdx
   140003d82:	test   rbx,rbx
   140003d85:	je     0x140003de4
   140003d87:	mov    rax,QWORD PTR [rbx]
   140003d8a:	mov    QWORD PTR [rsp+0x50],rdi
   140003d8f:	mov    rdi,QWORD PTR [rax+0x20]
   140003d93:	mov    rcx,rdi
   140003d96:	call   QWORD PTR [rip+0x7634]        # 0x14000b3d0
   140003d9c:	mov    rax,QWORD PTR [rsp+0x80]
   140003da4:	mov    r9d,esi
   140003da7:	mov    QWORD PTR [rsp+0x30],rax
   140003dac:	mov    r8,rbp
   140003daf:	mov    eax,DWORD PTR [rsp+0x78]
   140003db3:	mov    rdx,r14
   140003db6:	mov    DWORD PTR [rsp+0x28],eax
   140003dba:	mov    rcx,rbx
   140003dbd:	mov    rax,QWORD PTR [rsp+0x70]
   140003dc2:	mov    QWORD PTR [rsp+0x20],rax
   140003dc7:	call   rdi
   140003dc9:	mov    rdi,QWORD PTR [rsp+0x50]
   140003dce:	mov    rbx,QWORD PTR [rsp+0x58]
   140003dd3:	mov    rbp,QWORD PTR [rsp+0x60]
   140003dd8:	mov    rsi,QWORD PTR [rsp+0x68]
   140003ddd:	add    rsp,0x40
   140003de1:	pop    r14
   140003de3:	ret    
   140003de4:	mov    eax,0x8007000e
   140003de9:	jmp    0x140003dce
   140003deb:	int3   
   140003dec:	int3   
   140003ded:	int3   
   140003dee:	int3   
   140003def:	int3   
   140003df0:	int3   
   140003df1:	int3   
   140003df2:	int3   
   140003df3:	int3   
   140003df4:	int3   
   140003df5:	int3   
   140003df6:	int3   
   140003df7:	int3   
   140003df8:	int3   
   140003df9:	int3   
   140003dfa:	int3   
   140003dfb:	int3   
   140003dfc:	int3   
   140003dfd:	int3   
   140003dfe:	int3   
   140003dff:	int3   
   140003e00:	mov    QWORD PTR [rsp+0x10],rbx
   140003e05:	mov    QWORD PTR [rsp+0x18],rbp
   140003e0a:	mov    QWORD PTR [rsp+0x20],rsi
   140003e0f:	push   r14
   140003e11:	sub    rsp,0x40
   140003e15:	mov    rbx,QWORD PTR [rcx+0x10]
   140003e19:	mov    esi,r9d
   140003e1c:	mov    rbp,r8
   140003e1f:	mov    r14,rdx
   140003e22:	test   rbx,rbx
   140003e25:	je     0x140003e84
   140003e27:	mov    rax,QWORD PTR [rbx]
   140003e2a:	mov    QWORD PTR [rsp+0x50],rdi
   140003e2f:	mov    rdi,QWORD PTR [rax+0x18]
   140003e33:	mov    rcx,rdi
   140003e36:	call   QWORD PTR [rip+0x7594]        # 0x14000b3d0
   140003e3c:	mov    rax,QWORD PTR [rsp+0x80]
   140003e44:	mov    r9d,esi
   140003e47:	mov    QWORD PTR [rsp+0x30],rax
   140003e4c:	mov    r8,rbp
   140003e4f:	mov    eax,DWORD PTR [rsp+0x78]
   140003e53:	mov    rdx,r14
   140003e56:	mov    DWORD PTR [rsp+0x28],eax
   140003e5a:	mov    rcx,rbx
   140003e5d:	mov    rax,QWORD PTR [rsp+0x70]
   140003e62:	mov    QWORD PTR [rsp+0x20],rax
   140003e67:	call   rdi
   140003e69:	mov    rdi,QWORD PTR [rsp+0x50]
   140003e6e:	mov    rbx,QWORD PTR [rsp+0x58]
   140003e73:	mov    rbp,QWORD PTR [rsp+0x60]
   140003e78:	mov    rsi,QWORD PTR [rsp+0x68]
   140003e7d:	add    rsp,0x40
   140003e81:	pop    r14
   140003e83:	ret    
   140003e84:	mov    eax,0x8007000e
   140003e89:	jmp    0x140003e6e
   140003e8b:	int3   
   140003e8c:	int3   
   140003e8d:	int3   
   140003e8e:	int3   
   140003e8f:	int3   
   140003e90:	int3   
   140003e91:	int3   
   140003e92:	int3   
   140003e93:	int3   
   140003e94:	int3   
   140003e95:	int3   
   140003e96:	int3   
   140003e97:	int3   
   140003e98:	int3   
   140003e99:	int3   
   140003e9a:	int3   
   140003e9b:	int3   
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	mov    QWORD PTR [rsp+0x18],rbx
   140003ea5:	mov    QWORD PTR [rsp+0x20],rdi
   140003eaa:	push   r12
   140003eac:	push   r14
   140003eae:	push   r15
   140003eb0:	sub    rsp,0x40
   140003eb4:	mov    rbx,QWORD PTR [rsp+0x90]
   140003ebc:	mov    r14,r9
   140003ebf:	movzx  edi,r8b
   140003ec3:	mov    r15d,edx
   140003ec6:	mov    r12,rcx
   140003ec9:	test   rbx,rbx
   140003ecc:	je     0x140003f17
   140003ece:	mov    QWORD PTR [rsp+0x60],rbp
   140003ed3:	mov    eax,edx
   140003ed5:	mov    rbp,QWORD PTR [rsp+0x80]
   140003edd:	mov    QWORD PTR [rsp+0x68],rsi
   140003ee2:	test   edx,edx
   140003ee4:	je     0x140003f33
   140003ee6:	cmp    eax,0x1
   140003ee9:	jne    0x140003f00
   140003eeb:	test   r8b,r8b
   140003eee:	je     0x140003f2c
   140003ef0:	movzx  eax,r8b
   140003ef4:	inc    eax
   140003ef6:	mov    DWORD PTR [rbx],eax
   140003ef8:	mov    QWORD PTR [rbx+0x10],r9
   140003efc:	mov    QWORD PTR [rbx+0x18],rbp
   140003f00:	mov    rsi,QWORD PTR [rbx+0x28]
   140003f04:	test   rsi,rsi
   140003f07:	jne    0x140007098
   140003f0d:	mov    rbp,QWORD PTR [rsp+0x60]
   140003f12:	mov    rsi,QWORD PTR [rsp+0x68]
   140003f17:	mov    rbx,QWORD PTR [rsp+0x70]
   140003f1c:	mov    rdi,QWORD PTR [rsp+0x78]
   140003f21:	add    rsp,0x40
   140003f25:	pop    r15
   140003f27:	pop    r14
   140003f29:	pop    r12
   140003f2b:	ret    
   140003f2c:	mov    eax,0x100
   140003f31:	jmp    0x140003ef6
   140003f33:	mov    DWORD PTR [rbx],0x0
   140003f39:	jmp    0x140003f00
   140003f3b:	int3   
   140003f3c:	int3   
   140003f3d:	int3   
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	int3   
   140003f41:	int3   
   140003f42:	int3   
   140003f43:	int3   
   140003f44:	int3   
   140003f45:	int3   
   140003f46:	int3   
   140003f47:	int3   
   140003f48:	sub    rsp,0x28
   140003f4c:	cmp    QWORD PTR [rip+0xe94c],0x0        # 0x1400128a0
   140003f54:	lea    rax,[rip+0x3935]        # 0x140007890
   140003f5b:	je     0x140003f72
   140003f5d:	test   rax,rax
   140003f60:	je     0x140003f72
   140003f62:	mov    rcx,QWORD PTR [rsp+0x28]
   140003f67:	mov    edx,0x893
   140003f6c:	call   0x140007848
   140003f71:	int3   
   140003f72:	mov    QWORD PTR [rip+0xe927],rax        # 0x1400128a0
   140003f79:	add    rsp,0x28
   140003f7d:	ret    
   140003f7e:	int3   
   140003f7f:	int3   
   140003f80:	int3   
   140003f81:	int3   
   140003f82:	int3   
   140003f83:	int3   
   140003f84:	mov    QWORD PTR [rsp+0x8],rbx
   140003f89:	push   rdi
   140003f8a:	sub    rsp,0x20
   140003f8e:	lea    rbx,[rip+0xe94b]        # 0x1400128e0
   140003f95:	mov    rdi,QWORD PTR [rbx]
   140003f98:	jmp    0x140003fa7
   140003f9a:	mov    rcx,rdi
   140003f9d:	mov    rdi,QWORD PTR [rdi+0x10]
   140003fa1:	call   QWORD PTR [rip+0x7311]        # 0x14000b2b8
   140003fa7:	test   rdi,rdi
   140003faa:	jne    0x140003f9a
   140003fac:	mov    QWORD PTR [rbx],rdi
   140003faf:	lea    rax,[rip+0xe9ca]        # 0x140012980
   140003fb6:	add    rbx,0x8
   140003fba:	cmp    rbx,rax
   140003fbd:	jne    0x140003f95
   140003fbf:	mov    rbx,QWORD PTR [rsp+0x30]
   140003fc4:	add    rsp,0x20
   140003fc8:	pop    rdi
   140003fc9:	ret    
   140003fca:	int3   
   140003fcb:	int3   
   140003fcc:	int3   
   140003fcd:	int3   
   140003fce:	int3   
   140003fcf:	int3   
   140003fd0:	mov    QWORD PTR [rsp+0x8],rcx
   140003fd5:	sub    rsp,0x28
   140003fd9:	lea    r9,[rsp+0x38]
   140003fde:	xor    edx,edx
   140003fe0:	lea    r8,[rsp+0x30]
   140003fe5:	lea    rcx,[rip+0xe88c]        # 0x140012878
   140003fec:	call   QWORD PTR [rip+0x71d6]        # 0x14000b1c8
   140003ff2:	test   eax,eax
   140003ff4:	je     0x140004009
   140003ff6:	cmp    DWORD PTR [rsp+0x30],0x0
   140003ffb:	jne    0x140004009
   140003ffd:	mov    rcx,QWORD PTR [rsp+0x38]
   140004002:	xor    edx,edx
   140004004:	call   0x1400077c0
   140004009:	add    rsp,0x28
   14000400d:	ret    
   14000400e:	int3   
   14000400f:	int3   
   140004010:	int3   
   140004011:	int3   
   140004012:	int3   
   140004013:	int3   
   140004014:	mov    QWORD PTR [rsp+0x8],rcx
   140004019:	sub    rsp,0x28
   14000401d:	lea    r9,[rsp+0x38]
   140004022:	xor    edx,edx
   140004024:	lea    r8,[rsp+0x30]
   140004029:	lea    rcx,[rip+0xe950]        # 0x140012980
   140004030:	call   QWORD PTR [rip+0x7192]        # 0x14000b1c8
   140004036:	test   eax,eax
   140004038:	je     0x14000404d
   14000403a:	cmp    DWORD PTR [rsp+0x30],0x0
   14000403f:	jne    0x14000404d
   140004041:	mov    rcx,QWORD PTR [rsp+0x38]
   140004046:	xor    edx,edx
   140004048:	call   0x1400077c0
   14000404d:	add    rsp,0x28
   140004051:	ret    
   140004052:	int3   
   140004053:	int3   
   140004054:	int3   
   140004055:	int3   
   140004056:	int3   
   140004057:	int3   
   140004058:	mov    rax,QWORD PTR [rcx+0x30]
   14000405c:	xor    ecx,ecx
   14000405e:	cmp    BYTE PTR [rax+0x4],cl
   140004061:	je     0x14000407a
   140004063:	add    rax,0x18
   140004067:	cmp    DWORD PTR [rax],ecx
   140004069:	jne    0x14000407d
   14000406b:	cmp    DWORD PTR [rax+0x4],ecx
   14000406e:	jne    0x14000407d
   140004070:	cmp    DWORD PTR [rax+0x8],ecx
   140004073:	jne    0x14000407d
   140004075:	cmp    DWORD PTR [rax+0xc],ecx
   140004078:	jne    0x14000407d
   14000407a:	mov    rax,rcx
   14000407d:	ret    
   14000407e:	int3   
   14000407f:	int3   
   140004080:	int3   
   140004081:	int3   
   140004082:	int3   
   140004083:	int3   
   140004084:	rex push rbx
   140004086:	sub    rsp,0x20
   14000408a:	mov    rbx,rcx
   14000408d:	call   0x140005122
   140004092:	lea    rax,[rip+0x7e0f]        # 0x14000bea8
   140004099:	mov    QWORD PTR [rbx],rax
   14000409c:	mov    rax,rbx
   14000409f:	add    rsp,0x20
   1400040a3:	pop    rbx
   1400040a4:	ret    
   1400040a5:	int3   
   1400040a6:	int3   
   1400040a7:	int3   
   1400040a8:	int3   
   1400040a9:	int3   
   1400040aa:	int3   
   1400040ab:	int3   
   1400040ac:	rex push rbx
   1400040ae:	sub    rsp,0x20
   1400040b2:	lea    rax,[rip+0x7dff]        # 0x14000beb8
   1400040b9:	mov    r8d,0x1
   1400040bf:	lea    rdx,[rsp+0x30]
   1400040c4:	mov    QWORD PTR [rsp+0x30],rax
   1400040c9:	mov    rbx,rcx
   1400040cc:	call   0x140005116
   1400040d1:	lea    rax,[rip+0x7dd0]        # 0x14000bea8
   1400040d8:	mov    QWORD PTR [rbx],rax
   1400040db:	mov    rax,rbx
   1400040de:	add    rsp,0x20
   1400040e2:	pop    rbx
   1400040e3:	ret    
   1400040e4:	int3   
   1400040e5:	int3   
   1400040e6:	int3   
   1400040e7:	int3   
   1400040e8:	int3   
   1400040e9:	int3   
   1400040ea:	int3   
   1400040eb:	int3   
   1400040ec:	mov    QWORD PTR [rsp+0x8],rcx
   1400040f1:	push   rbx
   1400040f2:	sub    rsp,0x20
   1400040f6:	mov    QWORD PTR [rsp+0x30],rdx
   1400040fb:	mov    rbx,rcx
   1400040fe:	lea    rdx,[rsp+0x30]
   140004103:	call   0x14000510a
   140004108:	lea    rax,[rip+0x7db9]        # 0x14000bec8
   14000410f:	mov    QWORD PTR [rbx],rax
   140004112:	mov    rax,rbx
   140004115:	add    rsp,0x20
   140004119:	pop    rbx
   14000411a:	ret    
   14000411b:	int3   
   14000411c:	int3   
   14000411d:	int3   
   14000411e:	int3   
   14000411f:	int3   
   140004120:	int3   
   140004121:	int3   
   140004122:	int3   
   140004123:	int3   
   140004124:	rex push rbx
   140004126:	sub    rsp,0x20
   14000412a:	mov    rbx,rcx
   14000412d:	call   0x140005122
   140004132:	lea    rax,[rip+0x7d8f]        # 0x14000bec8
   140004139:	mov    QWORD PTR [rbx],rax
   14000413c:	mov    rax,rbx
   14000413f:	add    rsp,0x20
   140004143:	pop    rbx
   140004144:	ret    
   140004145:	int3   
   140004146:	int3   
   140004147:	int3   
   140004148:	int3   
   140004149:	int3   
   14000414a:	int3   
   14000414b:	int3   
   14000414c:	lea    rax,[rip+0x7d55]        # 0x14000bea8
   140004153:	mov    QWORD PTR [rcx],rax
   140004156:	jmp    0x14000512e
   14000415b:	int3   
   14000415c:	int3   
   14000415d:	int3   
   14000415e:	int3   
   14000415f:	int3   
   140004160:	int3   
   140004161:	int3   
   140004162:	int3   
   140004163:	int3   
   140004164:	jmp    0x14000512e
   140004169:	int3   
   14000416a:	int3   
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	rex push rbx
   140004172:	sub    rsp,0x20
   140004176:	lea    rax,[rip+0x7d5b]        # 0x14000bed8
   14000417d:	mov    rbx,rcx
   140004180:	mov    QWORD PTR [rcx],rax
   140004183:	test   dl,0x1
   140004186:	je     0x14000418d
   140004188:	call   0x140004ecc
   14000418d:	mov    rax,rbx
   140004190:	add    rsp,0x20
   140004194:	pop    rbx
   140004195:	ret    
   140004196:	int3   
   140004197:	int3   
   140004198:	int3   
   140004199:	int3   
   14000419a:	int3   
   14000419b:	int3   
   14000419c:	int3   
   14000419d:	int3   
   14000419e:	int3   
   14000419f:	int3   
   1400041a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400041a5:	push   rdi
   1400041a6:	sub    rsp,0x20
   1400041aa:	lea    rax,[rip+0x7cf7]        # 0x14000bea8
   1400041b1:	mov    ebx,edx
   1400041b3:	mov    QWORD PTR [rcx],rax
   1400041b6:	mov    rdi,rcx
   1400041b9:	call   0x14000512e
   1400041be:	test   bl,0x1
   1400041c1:	je     0x1400041cb
   1400041c3:	mov    rcx,rdi
   1400041c6:	call   0x140004ecc
   1400041cb:	mov    rax,rdi
   1400041ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400041d3:	add    rsp,0x20
   1400041d7:	pop    rdi
   1400041d8:	ret    
   1400041d9:	int3   
   1400041da:	int3   
   1400041db:	int3   
   1400041dc:	int3   
   1400041dd:	int3   
   1400041de:	int3   
   1400041df:	int3   
   1400041e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400041e5:	push   rdi
   1400041e6:	sub    rsp,0x20
   1400041ea:	mov    ebx,edx
   1400041ec:	mov    rdi,rcx
   1400041ef:	call   0x14000512e
   1400041f4:	test   bl,0x1
   1400041f7:	je     0x140004201
   1400041f9:	mov    rcx,rdi
   1400041fc:	call   0x140004ecc
   140004201:	mov    rax,rdi
   140004204:	mov    rbx,QWORD PTR [rsp+0x30]
   140004209:	add    rsp,0x20
   14000420d:	pop    rdi
   14000420e:	ret    
   14000420f:	int3   
   140004210:	int3   
   140004211:	int3   
   140004212:	int3   
   140004213:	int3   
   140004214:	int3   
   140004215:	int3   
   140004216:	int3   
   140004217:	int3   
   140004218:	mov    rax,rsp
   14000421b:	mov    QWORD PTR [rax+0x18],r8
   14000421f:	mov    QWORD PTR [rax+0x10],rdx
   140004223:	mov    QWORD PTR [rax+0x8],rcx
   140004227:	push   rbx
   140004228:	push   rsi
   140004229:	push   rdi
   14000422a:	push   r14
   14000422c:	sub    rsp,0x38
   140004230:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140004238:	mov    rsi,r8
   14000423b:	mov    rbx,rcx
   14000423e:	mov    rdi,rdx
   140004241:	or     rdi,0xf
   140004245:	mov    r9,0xfffffffffffffffe
   14000424c:	cmp    rdi,r9
   14000424f:	jbe    0x140004256
   140004251:	mov    rdi,rdx
   140004254:	jmp    0x140004287
   140004256:	mov    r8,QWORD PTR [rcx+0x18]
   14000425a:	mov    rcx,r8
   14000425d:	shr    rcx,1
   140004260:	movabs rax,0xaaaaaaaaaaaaaaab
   14000426a:	mul    rdi
   14000426d:	shr    rdx,1
   140004270:	cmp    rcx,rdx
   140004273:	jbe    0x140004287
   140004275:	mov    rax,r9
   140004278:	sub    rax,rcx
   14000427b:	cmp    r8,rax
   14000427e:	lea    rdi,[rcx+r8*1]
   140004282:	jbe    0x140004287
   140004284:	mov    rdi,r9
   140004287:	lea    rcx,[rdi+0x1]
   14000428b:	xor    r14d,r14d
   14000428e:	test   rcx,rcx
   140004291:	je     0x1400042ac
   140004293:	cmp    rcx,0xffffffffffffffff
   140004297:	ja     0x1400042a6
   140004299:	call   0x140004950
   14000429e:	mov    r14,rax
   1400042a1:	test   rax,rax
   1400042a4:	jne    0x1400042ac
   1400042a6:	call   0x140004380
   1400042ab:	nop
   1400042ac:	jmp    0x1400042c2
   1400042ae:	mov    rbx,QWORD PTR [rsp+0x60]
   1400042b3:	mov    rsi,QWORD PTR [rsp+0x70]
   1400042b8:	mov    rdi,QWORD PTR [rsp+0x68]
   1400042bd:	mov    r14,QWORD PTR [rsp+0x78]
   1400042c2:	test   rsi,rsi
   1400042c5:	je     0x1400042e6
   1400042c7:	cmp    QWORD PTR [rbx+0x18],0x10
   1400042cc:	jb     0x1400042d3
   1400042ce:	mov    rdx,QWORD PTR [rbx]
   1400042d1:	jmp    0x1400042d6
   1400042d3:	mov    rdx,rbx
   1400042d6:	test   rsi,rsi
   1400042d9:	je     0x1400042e6
   1400042db:	mov    r8,rsi
   1400042de:	mov    rcx,r14
   1400042e1:	call   0x140005164
   1400042e6:	cmp    QWORD PTR [rbx+0x18],0x10
   1400042eb:	jb     0x1400042f5
   1400042ed:	mov    rcx,QWORD PTR [rbx]
   1400042f0:	call   0x140004ecc
   1400042f5:	mov    BYTE PTR [rbx],0x0
   1400042f8:	mov    QWORD PTR [rbx],r14
   1400042fb:	mov    QWORD PTR [rbx+0x18],rdi
   1400042ff:	mov    QWORD PTR [rbx+0x10],rsi
   140004303:	cmp    rdi,0x10
   140004307:	jb     0x14000430c
   140004309:	mov    rbx,r14
   14000430c:	mov    BYTE PTR [rbx+rsi*1],0x0
   140004310:	add    rsp,0x38
   140004314:	pop    r14
   140004316:	pop    rdi
   140004317:	pop    rsi
   140004318:	pop    rbx
   140004319:	ret    
   14000431a:	int3   
   14000431b:	int3   
   14000431c:	int3   
   14000431d:	int3   
   14000431e:	int3   
   14000431f:	int3   
   140004320:	mov    QWORD PTR [rsp+0x8],rbx
   140004325:	mov    QWORD PTR [rsp+0x10],rsi
   14000432a:	push   rdi
   14000432b:	sub    rsp,0x20
   14000432f:	mov    rdi,r8
   140004332:	mov    rbx,rcx
   140004335:	test   dl,dl
   140004337:	je     0x140004358
   140004339:	cmp    QWORD PTR [rcx+0x18],0x10
   14000433e:	jb     0x140004358
   140004340:	mov    rsi,QWORD PTR [rcx]
   140004343:	test   r8,r8
   140004346:	je     0x140004350
   140004348:	mov    rdx,rsi
   14000434b:	call   0x140005164
   140004350:	mov    rcx,rsi
   140004353:	call   0x140004ecc
   140004358:	mov    rsi,QWORD PTR [rsp+0x38]
   14000435d:	mov    QWORD PTR [rbx+0x18],0xf
   140004365:	mov    QWORD PTR [rbx+0x10],rdi
   140004369:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000436d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004372:	add    rsp,0x20
   140004376:	pop    rdi
   140004377:	ret    
   140004378:	int3   
   140004379:	int3   
   14000437a:	int3   
   14000437b:	int3   
   14000437c:	int3   
   14000437d:	int3   
   14000437e:	int3   
   14000437f:	int3   
   140004380:	sub    rsp,0x48
   140004384:	lea    rcx,[rsp+0x20]
   140004389:	call   0x1400040ac
   14000438e:	lea    rdx,[rip+0xbaab]        # 0x14000fe40
   140004395:	lea    rcx,[rsp+0x20]
   14000439a:	call   0x14000514c
   14000439f:	int3   
   1400043a0:	int3   
   1400043a1:	int3   
   1400043a2:	int3   
   1400043a3:	int3   
   1400043a4:	int3   
   1400043a5:	int3   
   1400043a6:	int3   
   1400043a7:	int3   
   1400043a8:	sub    rsp,0x28
   1400043ac:	lea    rcx,[rip+0x7c45]        # 0x14000bff8
   1400043b3:	call   0x1400043c0
   1400043b8:	int3   
   1400043b9:	int3   
   1400043ba:	int3   
   1400043bb:	int3   
   1400043bc:	int3   
   1400043bd:	int3   
   1400043be:	int3   
   1400043bf:	int3   
   1400043c0:	sub    rsp,0x48
   1400043c4:	mov    rdx,rcx
   1400043c7:	lea    rcx,[rsp+0x20]
   1400043cc:	call   0x1400040ec
   1400043d1:	lea    rdx,[rip+0xbb18]        # 0x14000fef0
   1400043d8:	lea    rcx,[rsp+0x20]
   1400043dd:	call   0x14000514c
   1400043e2:	int3   
   1400043e3:	int3   
   1400043e4:	int3   
   1400043e5:	int3   
   1400043e6:	int3   
   1400043e7:	int3   
   1400043e8:	int3   
   1400043e9:	int3   
   1400043ea:	int3   
   1400043eb:	int3   
   1400043ec:	sub    rsp,0x48
   1400043f0:	mov    rdx,rcx
   1400043f3:	lea    rcx,[rsp+0x20]
   1400043f8:	call   0x1400040ec
   1400043fd:	lea    rdx,[rip+0xbb54]        # 0x14000ff58
   140004404:	lea    rcx,[rsp+0x20]
   140004409:	call   0x14000514c
   14000440e:	int3   
   14000440f:	int3   
   140004410:	int3   
   140004411:	int3   
   140004412:	int3   
   140004413:	int3   
   140004414:	int3   
   140004415:	int3   
   140004416:	int3   
   140004417:	int3   
   140004418:	sub    rsp,0x28
   14000441c:	lea    rcx,[rip+0x7bbd]        # 0x14000bfe0
   140004423:	call   0x1400043ec
   140004428:	int3   
   140004429:	int3   
   14000442a:	int3   
   14000442b:	int3   
   14000442c:	int3   
   14000442d:	int3   
   14000442e:	int3   
   14000442f:	int3   
   140004430:	mov    QWORD PTR [rsp+0x8],rbx
   140004435:	mov    QWORD PTR [rsp+0x10],rbp
   14000443a:	mov    QWORD PTR [rsp+0x18],rsi
   14000443f:	push   rdi
   140004440:	sub    rsp,0x20
   140004444:	mov    rdi,QWORD PTR [rdx+0x10]
   140004448:	mov    rbp,r8
   14000444b:	mov    rsi,rdx
   14000444e:	mov    rbx,rcx
   140004451:	cmp    rdi,r8
   140004454:	jb     0x14000452c
   14000445a:	sub    rdi,r8
   14000445d:	cmp    r9,rdi
   140004460:	cmovb  rdi,r9
   140004464:	cmp    rcx,rdx
   140004467:	jne    0x140004495
   140004469:	lea    rax,[rdi+r8*1]
   14000446d:	cmp    QWORD PTR [rcx+0x10],rax
   140004471:	jb     0x140004532
   140004477:	cmp    QWORD PTR [rcx+0x18],0x10
   14000447c:	mov    QWORD PTR [rcx+0x10],rax
   140004480:	jb     0x140004485
   140004482:	mov    rcx,QWORD PTR [rcx]
   140004485:	mov    BYTE PTR [rcx+rax*1],0x0
   140004489:	xor    edx,edx
   14000448b:	mov    rcx,rbx
   14000448e:	call   0x140004750
   140004493:	jmp    0x140004514
   140004495:	cmp    rdi,0xfffffffffffffffe
   140004499:	ja     0x140004538
   14000449f:	cmp    QWORD PTR [rcx+0x18],rdi
   1400044a3:	jae    0x1400044b3
   1400044a5:	mov    r8,QWORD PTR [rcx+0x10]
   1400044a9:	mov    rdx,rdi
   1400044ac:	call   0x140004218
   1400044b1:	jmp    0x1400044ce
   1400044b3:	test   rdi,rdi
   1400044b6:	jne    0x1400044d3
   1400044b8:	and    QWORD PTR [rcx+0x10],rdi
   1400044bc:	cmp    QWORD PTR [rcx+0x18],0x10
   1400044c1:	jb     0x1400044c8
   1400044c3:	mov    rax,QWORD PTR [rcx]
   1400044c6:	jmp    0x1400044cb
   1400044c8:	mov    rax,rcx
   1400044cb:	mov    BYTE PTR [rax],0x0
   1400044ce:	test   rdi,rdi
   1400044d1:	je     0x140004514
   1400044d3:	cmp    QWORD PTR [rsi+0x18],0x10
   1400044d8:	jb     0x1400044dd
   1400044da:	mov    rsi,QWORD PTR [rsi]
   1400044dd:	cmp    QWORD PTR [rbx+0x18],0x10
   1400044e2:	jb     0x1400044e9
   1400044e4:	mov    rcx,QWORD PTR [rbx]
   1400044e7:	jmp    0x1400044ec
   1400044e9:	mov    rcx,rbx
   1400044ec:	test   rdi,rdi
   1400044ef:	je     0x1400044fd
   1400044f1:	lea    rdx,[rsi+rbp*1]
   1400044f5:	mov    r8,rdi
   1400044f8:	call   0x140005164
   1400044fd:	cmp    QWORD PTR [rbx+0x18],0x10
   140004502:	mov    QWORD PTR [rbx+0x10],rdi
   140004506:	jb     0x14000450d
   140004508:	mov    rax,QWORD PTR [rbx]
   14000450b:	jmp    0x140004510
   14000450d:	mov    rax,rbx
   140004510:	mov    BYTE PTR [rax+rdi*1],0x0
   140004514:	mov    rbp,QWORD PTR [rsp+0x38]
   140004519:	mov    rax,rbx
   14000451c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004521:	mov    rsi,QWORD PTR [rsp+0x40]
   140004526:	add    rsp,0x20
   14000452a:	pop    rdi
   14000452b:	ret    
   14000452c:	call   0x140004418
   140004531:	int3   
   140004532:	call   0x140004418
   140004537:	int3   
   140004538:	call   0x1400043a8
   14000453d:	int3   
   14000453e:	int3   
   14000453f:	int3   
   140004540:	int3   
   140004541:	int3   
   140004542:	int3   
   140004543:	int3   
   140004544:	mov    QWORD PTR [rsp+0x8],rbx
   140004549:	mov    QWORD PTR [rsp+0x10],rsi
   14000454e:	push   rdi
   14000454f:	sub    rsp,0x20
   140004553:	mov    rdi,r8
   140004556:	mov    rsi,rdx
   140004559:	mov    rbx,rcx
   14000455c:	test   rdx,rdx
   14000455f:	je     0x1400045ad
   140004561:	cmp    QWORD PTR [rcx+0x18],0x10
   140004566:	jb     0x14000456d
   140004568:	mov    rax,QWORD PTR [rcx]
   14000456b:	jmp    0x140004570
   14000456d:	mov    rax,rcx
   140004570:	cmp    rdx,rax
   140004573:	jb     0x1400045ad
   140004575:	cmp    QWORD PTR [rcx+0x18],0x10
   14000457a:	jb     0x14000457f
   14000457c:	mov    rcx,QWORD PTR [rcx]
   14000457f:	add    rcx,QWORD PTR [rbx+0x10]
   140004583:	cmp    rcx,rdx
   140004586:	jbe    0x1400045ad
   140004588:	cmp    QWORD PTR [rbx+0x18],0x10
   14000458d:	jb     0x140004594
   14000458f:	mov    rax,QWORD PTR [rbx]
   140004592:	jmp    0x140004597
   140004594:	mov    rax,rbx
   140004597:	sub    rsi,rax
   14000459a:	mov    r9,r8
   14000459d:	mov    r8,rsi
   1400045a0:	mov    rdx,rbx
   1400045a3:	mov    rcx,rbx
   1400045a6:	call   0x140004430
   1400045ab:	jmp    0x140004627
   1400045ad:	cmp    r8,0xfffffffffffffffe
   1400045b1:	ja     0x140004637
   1400045b7:	cmp    QWORD PTR [rbx+0x18],r8
   1400045bb:	jae    0x1400045ce
   1400045bd:	mov    r8,QWORD PTR [rbx+0x10]
   1400045c1:	mov    rdx,rdi
   1400045c4:	mov    rcx,rbx
   1400045c7:	call   0x140004218
   1400045cc:	jmp    0x1400045e9
   1400045ce:	test   r8,r8
   1400045d1:	jne    0x1400045e9
   1400045d3:	and    QWORD PTR [rbx+0x10],r8
   1400045d7:	cmp    QWORD PTR [rbx+0x18],0x10
   1400045dc:	jb     0x1400045e3
   1400045de:	mov    rax,QWORD PTR [rbx]
   1400045e1:	jmp    0x1400045e6
   1400045e3:	mov    rax,rbx
   1400045e6:	mov    BYTE PTR [rax],0x0
   1400045e9:	test   rdi,rdi
   1400045ec:	je     0x140004624
   1400045ee:	cmp    QWORD PTR [rbx+0x18],0x10
   1400045f3:	jb     0x1400045fa
   1400045f5:	mov    rcx,QWORD PTR [rbx]
   1400045f8:	jmp    0x1400045fd
   1400045fa:	mov    rcx,rbx
   1400045fd:	test   rdi,rdi
   140004600:	je     0x14000460d
   140004602:	mov    r8,rdi
   140004605:	mov    rdx,rsi
   140004608:	call   0x140005164
   14000460d:	cmp    QWORD PTR [rbx+0x18],0x10
   140004612:	mov    QWORD PTR [rbx+0x10],rdi
   140004616:	jb     0x14000461d
   140004618:	mov    rax,QWORD PTR [rbx]
   14000461b:	jmp    0x140004620
   14000461d:	mov    rax,rbx
   140004620:	mov    BYTE PTR [rax+rdi*1],0x0
   140004624:	mov    rax,rbx
   140004627:	mov    rbx,QWORD PTR [rsp+0x30]
   14000462c:	mov    rsi,QWORD PTR [rsp+0x38]
   140004631:	add    rsp,0x20
   140004635:	pop    rdi
   140004636:	ret    
   140004637:	mov    rcx,rbx
   14000463a:	call   0x1400043a8
   14000463f:	int3   
   140004640:	int3   
   140004641:	int3   
   140004642:	int3   
   140004643:	int3   
   140004644:	int3   
   140004645:	int3   
   140004646:	int3   
   140004647:	int3   
   140004648:	int3   
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	int3   
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	mov    QWORD PTR [rsp+0x8],rbx
   140004655:	push   rdi
   140004656:	sub    rsp,0x20
   14000465a:	mov    ecx,r8d
   14000465d:	mov    edi,r8d
   140004660:	mov    rbx,rdx
   140004663:	call   0x140004988
   140004668:	test   rax,rax
   14000466b:	mov    DWORD PTR [rbx],edi
   14000466d:	lea    rax,[rip+0xd98c]        # 0x140012000
   140004674:	jne    0x14000467d
   140004676:	lea    rax,[rip+0xd993]        # 0x140012010
   14000467d:	mov    QWORD PTR [rbx+0x8],rax
   140004681:	mov    rax,rbx
   140004684:	mov    rbx,QWORD PTR [rsp+0x30]
   140004689:	add    rsp,0x20
   14000468d:	pop    rdi
   14000468e:	ret    
   14000468f:	int3   
   140004690:	int3   
   140004691:	int3   
   140004692:	int3   
   140004693:	int3   
   140004694:	int3   
   140004695:	int3   
   140004696:	int3   
   140004697:	int3   
   140004698:	int3   
   140004699:	int3   
   14000469a:	int3   
   14000469b:	int3   
   14000469c:	int3   
   14000469d:	int3   
   14000469e:	int3   
   14000469f:	int3   
   1400046a0:	mov    DWORD PTR [rdx],r8d
   1400046a3:	mov    rax,rdx
   1400046a6:	mov    QWORD PTR [rdx+0x8],rcx
   1400046aa:	ret    
   1400046ab:	int3   
   1400046ac:	int3   
   1400046ad:	int3   
   1400046ae:	int3   
   1400046af:	int3   
   1400046b0:	int3   
   1400046b1:	int3   
   1400046b2:	int3   
   1400046b3:	int3   
   1400046b4:	int3   
   1400046b5:	int3   
   1400046b6:	int3   
   1400046b7:	int3   
   1400046b8:	int3   
   1400046b9:	int3   
   1400046ba:	int3   
   1400046bb:	int3   
   1400046bc:	int3   
   1400046bd:	int3   
   1400046be:	int3   
   1400046bf:	int3   
   1400046c0:	cmp    rcx,QWORD PTR [rdx+0x8]
   1400046c4:	jne    0x1400046d1
   1400046c6:	cmp    DWORD PTR [rdx],r8d
   1400046c9:	jne    0x1400046d1
   1400046cb:	mov    eax,0x1
   1400046d0:	ret    
   1400046d1:	xor    eax,eax
   1400046d3:	ret    
   1400046d4:	int3   
   1400046d5:	int3   
   1400046d6:	int3   
   1400046d7:	int3   
   1400046d8:	int3   
   1400046d9:	int3   
   1400046da:	int3   
   1400046db:	int3   
   1400046dc:	int3   
   1400046dd:	int3   
   1400046de:	int3   
   1400046df:	int3   
   1400046e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400046e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400046ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400046ef:	push   r14
   1400046f1:	sub    rsp,0x30
   1400046f5:	mov    rax,QWORD PTR [rcx]
   1400046f8:	mov    rsi,rcx
   1400046fb:	mov    r14,r8
   1400046fe:	mov    edi,edx
   140004700:	mov    rbx,QWORD PTR [rax+0x18]
   140004704:	mov    rcx,rbx
   140004707:	call   QWORD PTR [rip+0x6cc3]        # 0x14000b3d0
   14000470d:	mov    r8d,edi
   140004710:	lea    rdx,[rsp+0x20]
   140004715:	mov    rcx,rsi
   140004718:	call   rbx
   14000471a:	mov    rcx,QWORD PTR [r14+0x8]
   14000471e:	cmp    QWORD PTR [rax+0x8],rcx
   140004722:	jne    0x140004732
   140004724:	mov    ecx,DWORD PTR [r14]
   140004727:	cmp    DWORD PTR [rax],ecx
   140004729:	jne    0x140004732
   14000472b:	mov    eax,0x1
   140004730:	jmp    0x140004734
   140004732:	xor    eax,eax
   140004734:	mov    rbx,QWORD PTR [rsp+0x40]
   140004739:	mov    rsi,QWORD PTR [rsp+0x48]
   14000473e:	mov    rdi,QWORD PTR [rsp+0x50]
   140004743:	add    rsp,0x30
   140004747:	pop    r14
   140004749:	ret    
   14000474a:	int3   
   14000474b:	int3   
   14000474c:	int3   
   14000474d:	int3   
   14000474e:	int3   
   14000474f:	int3   
   140004750:	mov    QWORD PTR [rsp+0x8],rbx
   140004755:	push   rdi
   140004756:	sub    rsp,0x20
   14000475a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000475e:	mov    rbx,rcx
   140004761:	cmp    rdi,rdx
   140004764:	jb     0x1400047de
   140004766:	mov    rax,rdi
   140004769:	sub    rax,rdx
   14000476c:	cmp    rax,r8
   14000476f:	ja     0x14000478a
   140004771:	cmp    QWORD PTR [rcx+0x18],0x10
   140004776:	mov    QWORD PTR [rcx+0x10],rdx
   14000477a:	jb     0x140004781
   14000477c:	mov    rax,QWORD PTR [rcx]
   14000477f:	jmp    0x140004784
   140004781:	mov    rax,rcx
   140004784:	mov    BYTE PTR [rax+rdx*1],0x0
   140004788:	jmp    0x1400047d0
   14000478a:	test   r8,r8
   14000478d:	je     0x1400047d0
   14000478f:	cmp    QWORD PTR [rcx+0x18],0x10
   140004794:	jb     0x14000479b
   140004796:	mov    rax,QWORD PTR [rcx]
   140004799:	jmp    0x14000479e
   14000479b:	mov    rax,rcx
   14000479e:	sub    rdi,r8
   1400047a1:	lea    rcx,[rax+rdx*1]
   1400047a5:	mov    rax,rdi
   1400047a8:	sub    rax,rdx
   1400047ab:	je     0x1400047b9
   1400047ad:	lea    rdx,[rcx+r8*1]
   1400047b1:	mov    r8,rax
   1400047b4:	call   0x1400050d6
   1400047b9:	cmp    QWORD PTR [rbx+0x18],0x10
   1400047be:	mov    QWORD PTR [rbx+0x10],rdi
   1400047c2:	jb     0x1400047c9
   1400047c4:	mov    rax,QWORD PTR [rbx]
   1400047c7:	jmp    0x1400047cc
   1400047c9:	mov    rax,rbx
   1400047cc:	mov    BYTE PTR [rax+rdi*1],0x0
   1400047d0:	mov    rax,rbx
   1400047d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400047d8:	add    rsp,0x20
   1400047dc:	pop    rdi
   1400047dd:	ret    
   1400047de:	call   0x140004418
   1400047e3:	int3   
   1400047e4:	int3   
   1400047e5:	int3   
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	int3   
   1400047e9:	int3   
   1400047ea:	int3   
   1400047eb:	int3   
   1400047ec:	int3   
   1400047ed:	int3   
   1400047ee:	int3   
   1400047ef:	int3   
   1400047f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400047f5:	push   rdi
   1400047f6:	sub    rsp,0x30
   1400047fa:	xor    ebx,ebx
   1400047fc:	mov    ecx,r8d
   1400047ff:	mov    DWORD PTR [rsp+0x20],ebx
   140004803:	mov    rdi,rdx
   140004806:	call   0x140004988
   14000480b:	test   rax,rax
   14000480e:	mov    QWORD PTR [rdi+0x18],0xf
   140004816:	mov    QWORD PTR [rdi+0x10],rbx
   14000481a:	lea    rdx,[rip+0x771f]        # 0x14000bf40
   140004821:	cmovne rdx,rax
   140004825:	mov    BYTE PTR [rdi],bl
   140004827:	cmp    BYTE PTR [rdx],bl
   140004829:	je     0x14000483a
   14000482b:	or     rax,0xffffffffffffffff
   14000482f:	inc    rax
   140004832:	cmp    BYTE PTR [rdx+rax*1],bl
   140004835:	jne    0x14000482f
   140004837:	mov    rbx,rax
   14000483a:	mov    r8,rbx
   14000483d:	mov    rcx,rdi
   140004840:	call   0x140004544
   140004845:	mov    rbx,QWORD PTR [rsp+0x40]
   14000484a:	mov    rax,rdi
   14000484d:	add    rsp,0x30
   140004851:	pop    rdi
   140004852:	ret    
   140004853:	int3   
   140004854:	int3   
   140004855:	int3   
   140004856:	int3   
   140004857:	int3   
   140004858:	int3   
   140004859:	int3   
   14000485a:	int3   
   14000485b:	int3   
   14000485c:	int3   
   14000485d:	int3   
   14000485e:	int3   
   14000485f:	int3   
   140004860:	rex push rbx
   140004862:	sub    rsp,0x30
   140004866:	xor    eax,eax
   140004868:	mov    rbx,rdx
   14000486b:	mov    DWORD PTR [rsp+0x20],eax
   14000486f:	cmp    r8d,0x1
   140004873:	jne    0x140004898
   140004875:	mov    QWORD PTR [rdx+0x18],0xf
   14000487d:	lea    r8d,[rax+0x15]
   140004881:	mov    QWORD PTR [rdx+0x10],rax
   140004885:	mov    rcx,rbx
   140004888:	mov    BYTE PTR [rdx],al
   14000488a:	lea    rdx,[rip+0x76ff]        # 0x14000bf90
   140004891:	call   0x140004544
   140004896:	jmp    0x14000489d
   140004898:	call   0x1400047f0
   14000489d:	mov    rax,rbx
   1400048a0:	add    rsp,0x30
   1400048a4:	pop    rbx
   1400048a5:	ret    
   1400048a6:	int3   
   1400048a7:	int3   
   1400048a8:	int3   
   1400048a9:	int3   
   1400048aa:	int3   
   1400048ab:	int3   
   1400048ac:	int3   
   1400048ad:	int3   
   1400048ae:	int3   
   1400048af:	int3   
   1400048b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400048b5:	push   rdi
   1400048b6:	sub    rsp,0x30
   1400048ba:	xor    ebx,ebx
   1400048bc:	mov    ecx,r8d
   1400048bf:	mov    DWORD PTR [rsp+0x20],ebx
   1400048c3:	mov    rdi,rdx
   1400048c6:	call   0x1400049b8
   1400048cb:	test   rax,rax
   1400048ce:	mov    QWORD PTR [rdi+0x18],0xf
   1400048d6:	mov    QWORD PTR [rdi+0x10],rbx
   1400048da:	lea    rdx,[rip+0x765f]        # 0x14000bf40
   1400048e1:	cmovne rdx,rax
   1400048e5:	mov    BYTE PTR [rdi],bl
   1400048e7:	cmp    BYTE PTR [rdx],bl
   1400048e9:	je     0x1400048fa
   1400048eb:	or     rax,0xffffffffffffffff
   1400048ef:	inc    rax
   1400048f2:	cmp    BYTE PTR [rdx+rax*1],bl
   1400048f5:	jne    0x1400048ef
   1400048f7:	mov    rbx,rax
   1400048fa:	mov    r8,rbx
   1400048fd:	mov    rcx,rdi
   140004900:	call   0x140004544
   140004905:	mov    rbx,QWORD PTR [rsp+0x40]
   14000490a:	mov    rax,rdi
   14000490d:	add    rsp,0x30
   140004911:	pop    rdi
   140004912:	ret    
   140004913:	int3   
   140004914:	int3   
   140004915:	int3   
   140004916:	int3   
   140004917:	int3   
   140004918:	int3   
   140004919:	int3   
   14000491a:	int3   
   14000491b:	int3   
   14000491c:	int3   
   14000491d:	int3   
   14000491e:	int3   
   14000491f:	int3   
   140004920:	lea    rax,[rip+0x7611]        # 0x14000bf38
   140004927:	ret    
   140004928:	int3   
   140004929:	int3   
   14000492a:	int3   
   14000492b:	int3   
   14000492c:	int3   
   14000492d:	int3   
   14000492e:	int3   
   14000492f:	int3   
   140004930:	lea    rax,[rip+0x7649]        # 0x14000bf80
   140004937:	ret    
   140004938:	int3   
   140004939:	int3   
   14000493a:	int3   
   14000493b:	int3   
   14000493c:	int3   
   14000493d:	int3   
   14000493e:	int3   
   14000493f:	int3   
   140004940:	lea    rax,[rip+0x7691]        # 0x14000bfd8
   140004947:	ret    
   140004948:	int3   
   140004949:	int3   
   14000494a:	int3   
   14000494b:	int3   
   14000494c:	int3   
   14000494d:	int3   
   14000494e:	int3   
   14000494f:	int3   
   140004950:	rex push rbx
   140004952:	sub    rsp,0x20
   140004956:	mov    rbx,rcx
   140004959:	jmp    0x14000496a
   14000495b:	mov    rcx,rbx
   14000495e:	call   0x140005170
   140004963:	test   eax,eax
   140004965:	je     0x14000497b
   140004967:	mov    rcx,rbx
   14000496a:	call   QWORD PTR [rip+0x6a40]        # 0x14000b3b0
   140004970:	test   rax,rax
   140004973:	je     0x14000495b
   140004975:	add    rsp,0x20
   140004979:	pop    rbx
   14000497a:	ret    
   14000497b:	call   0x140004380
   140004980:	int3   
   140004981:	int3   
   140004982:	int3   
   140004983:	int3   
   140004984:	int3   
   140004985:	int3   
   140004986:	int3   
   140004987:	int3   
   140004988:	cmp    QWORD PTR [rip+0x7f78],0x0        # 0x14000c908
   140004990:	lea    rax,[rip+0x7f69]        # 0x14000c900
   140004997:	je     0x1400049a8
   140004999:	cmp    DWORD PTR [rax],ecx
   14000499b:	je     0x1400049ab
   14000499d:	add    rax,0x10
   1400049a1:	cmp    QWORD PTR [rax+0x8],0x0
   1400049a6:	jne    0x140004999
   1400049a8:	xor    eax,eax
   1400049aa:	ret    
   1400049ab:	mov    rax,QWORD PTR [rax+0x8]
   1400049af:	ret    
   1400049b0:	int3   
   1400049b1:	int3   
   1400049b2:	int3   
   1400049b3:	int3   
   1400049b4:	int3   
   1400049b5:	int3   
   1400049b6:	int3   
   1400049b7:	int3   
   1400049b8:	cmp    QWORD PTR [rip+0x7658],0x0        # 0x14000c018
   1400049c0:	lea    rax,[rip+0x7649]        # 0x14000c010
   1400049c7:	je     0x1400049d8
   1400049c9:	cmp    DWORD PTR [rax],ecx
   1400049cb:	je     0x1400049db
   1400049cd:	add    rax,0x10
   1400049d1:	cmp    QWORD PTR [rax+0x8],0x0
   1400049d6:	jne    0x1400049c9
   1400049d8:	xor    eax,eax
   1400049da:	ret    
   1400049db:	mov    rax,QWORD PTR [rax+0x8]
   1400049df:	ret    
   1400049e0:	int3   
   1400049e1:	int3   
   1400049e2:	int3   
   1400049e3:	int3   
   1400049e4:	int3   
   1400049e5:	int3   
   1400049e6:	int3   
   1400049e7:	int3   
   1400049e8:	int3   
   1400049e9:	int3   
   1400049ea:	int3   
   1400049eb:	int3   
   1400049ec:	int3   
   1400049ed:	int3   
   1400049ee:	int3   
   1400049ef:	int3   
   1400049f0:	sub    rsp,0x28
   1400049f4:	mov    eax,0x5a4d
   1400049f9:	cmp    WORD PTR [rip+0xffffffffffffb600],ax        # 0x140000000
   140004a00:	je     0x140004a06
   140004a02:	xor    eax,eax
   140004a04:	jmp    0x140004a55
   140004a06:	movsxd rcx,DWORD PTR [rip+0xffffffffffffb62f]        # 0x14000003c
   140004a0d:	lea    rax,[rip+0xffffffffffffb5ec]        # 0x140000000
   140004a14:	add    rcx,rax
   140004a17:	cmp    DWORD PTR [rcx],0x4550
   140004a1d:	jne    0x140004a02
   140004a1f:	movzx  eax,WORD PTR [rcx+0x18]
   140004a23:	cmp    eax,0x10b
   140004a28:	je     0x140004a44
   140004a2a:	cmp    eax,0x20b
   140004a2f:	jne    0x140004a02
   140004a31:	xor    eax,eax
   140004a33:	cmp    DWORD PTR [rcx+0x84],0xe
   140004a3a:	jbe    0x140004a55
   140004a3c:	cmp    DWORD PTR [rcx+0xf8],eax
   140004a42:	jmp    0x140004a52
   140004a44:	xor    eax,eax
   140004a46:	cmp    DWORD PTR [rcx+0x74],0xe
   140004a4a:	jbe    0x140004a55
   140004a4c:	cmp    DWORD PTR [rcx+0xe8],eax
   140004a52:	setne  al
   140004a55:	mov    ecx,0x2
   140004a5a:	mov    DWORD PTR [rip+0xd840],eax        # 0x1400122a0
   140004a60:	call   0x140005248
   140004a65:	mov    ecx,eax
   140004a67:	call   QWORD PTR [rip+0x686b]        # 0x14000b2d8
   140004a6d:	mov    rcx,QWORD PTR [rip+0x68e4]        # 0x14000b358
   140004a74:	or     rax,0xffffffffffffffff
   140004a78:	mov    QWORD PTR [rip+0xddc1],rax        # 0x140012840
   140004a7f:	mov    QWORD PTR [rip+0xddc2],rax        # 0x140012848
   140004a86:	mov    eax,DWORD PTR [rip+0xdda0]        # 0x14001282c
   140004a8c:	mov    DWORD PTR [rcx],eax
   140004a8e:	mov    rcx,QWORD PTR [rip+0x68b3]        # 0x14000b348
   140004a95:	mov    eax,DWORD PTR [rip+0xdd85]        # 0x140012820
   140004a9b:	mov    DWORD PTR [rcx],eax
   140004a9d:	call   0x1400052a0
   140004aa2:	cmp    DWORD PTR [rip+0xd577],0x0        # 0x140012020
   140004aa9:	jne    0x140004ab8
   140004aab:	lea    rcx,[rip+0x7ee]        # 0x1400052a0
   140004ab2:	call   QWORD PTR [rip+0x68c0]        # 0x14000b378
   140004ab8:	xor    eax,eax
   140004aba:	add    rsp,0x28
   140004abe:	ret    
   140004abf:	int3   
   140004ac0:	int3   
   140004ac1:	int3   
   140004ac2:	int3   
   140004ac3:	int3   
   140004ac4:	int3   
   140004ac5:	int3   
   140004ac6:	int3   
   140004ac7:	int3   
   140004ac8:	int3   
   140004ac9:	int3   
   140004aca:	int3   
   140004acb:	int3   
   140004acc:	int3   
   140004acd:	int3   
   140004ace:	int3   
   140004acf:	int3   
   140004ad0:	sub    rsp,0x38
   140004ad4:	mov    eax,DWORD PTR [rip+0xdd4e]        # 0x140012828
   140004ada:	lea    r8,[rip+0xd7b7]        # 0x140012298
   140004ae1:	mov    r9d,DWORD PTR [rip+0xdd3c]        # 0x140012824
   140004ae8:	lea    rdx,[rip+0xd7a1]        # 0x140012290
   140004aef:	mov    DWORD PTR [rip+0xd7af],eax        # 0x1400122a4
   140004af5:	lea    rcx,[rip+0xd78c]        # 0x140012288
   140004afc:	lea    rax,[rip+0xd7a1]        # 0x1400122a4
   140004b03:	mov    QWORD PTR [rsp+0x20],rax
   140004b08:	call   QWORD PTR [rip+0x67fa]        # 0x14000b308
   140004b0e:	mov    DWORD PTR [rip+0xd778],eax        # 0x14001228c
   140004b14:	add    rsp,0x38
   140004b18:	ret    
   140004b19:	int3   
   140004b1a:	int3   
   140004b1b:	int3   
   140004b1c:	int3   
   140004b1d:	int3   
   140004b1e:	int3   
   140004b1f:	int3   
   140004b20:	mov    QWORD PTR [rsp+0x8],rbx
   140004b25:	mov    QWORD PTR [rsp+0x10],rsi
   140004b2a:	mov    QWORD PTR [rsp+0x18],rdi
   140004b2f:	push   r12
   140004b31:	push   r14
   140004b33:	push   r15
   140004b35:	sub    rsp,0xb0
   140004b3c:	xor    r15d,r15d
   140004b3f:	mov    DWORD PTR [rsp+0x20],r15d
   140004b44:	lea    rcx,[rsp+0x40]
   140004b49:	call   QWORD PTR [rip+0x65c9]        # 0x14000b118
   140004b4f:	nop
   140004b50:	mov    rax,QWORD PTR gs:0x30
   140004b59:	mov    rbx,QWORD PTR [rax+0x8]
   140004b5d:	mov    r14d,r15d
   140004b60:	xor    eax,eax
   140004b62:	lock cmpxchg QWORD PTR [rip+0xdcc5],rbx        # 0x140012830
   140004b6b:	je     0x140004b89
   140004b6d:	cmp    rax,rbx
   140004b70:	jne    0x140004b7c
   140004b72:	mov    edi,0x1
   140004b77:	mov    r14d,edi
   140004b7a:	jmp    0x140004b8e
   140004b7c:	mov    ecx,0x3e8
   140004b81:	call   QWORD PTR [rip+0x6639]        # 0x14000b1c0
   140004b87:	jmp    0x140004b60
   140004b89:	mov    edi,0x1
   140004b8e:	mov    eax,DWORD PTR [rip+0xdca4]        # 0x140012838
   140004b94:	cmp    eax,edi
   140004b96:	jne    0x140004ba6
   140004b98:	mov    esi,0x1f
   140004b9d:	mov    ecx,esi
   140004b9f:	call   0x140005294
   140004ba4:	jmp    0x140004c17
   140004ba6:	mov    eax,DWORD PTR [rip+0xdc8c]        # 0x140012838
   140004bac:	test   eax,eax
   140004bae:	jne    0x140004c0c
   140004bb0:	mov    DWORD PTR [rip+0xdc82],edi        # 0x140012838
   140004bb6:	lea    r12,[rip+0x6883]        # 0x14000b440
   140004bbd:	lea    rbx,[rip+0x6864]        # 0x14000b428
   140004bc4:	mov    QWORD PTR [rsp+0x30],rbx
   140004bc9:	mov    eax,r15d
   140004bcc:	mov    DWORD PTR [rsp+0x24],eax
   140004bd0:	cmp    rbx,r12
   140004bd3:	jae    0x140004bfe
   140004bd5:	test   eax,eax
   140004bd7:	jne    0x140004c02
   140004bd9:	mov    rsi,QWORD PTR [rbx]
   140004bdc:	test   rsi,rsi
   140004bdf:	je     0x140004bf3
   140004be1:	mov    rcx,rsi
   140004be4:	mov    rax,QWORD PTR [rip+0x67e5]        # 0x14000b3d0
   140004beb:	call   rax
   140004bed:	call   rsi
   140004bef:	mov    DWORD PTR [rsp+0x24],eax
   140004bf3:	add    rbx,0x8
   140004bf7:	mov    QWORD PTR [rsp+0x30],rbx
   140004bfc:	jmp    0x140004bd0
   140004bfe:	test   eax,eax
   140004c00:	je     0x140004c12
   140004c02:	mov    eax,0xff
   140004c07:	jmp    0x140004d73
   140004c0c:	mov    DWORD PTR [rip+0xd66e],edi        # 0x140012280
   140004c12:	mov    esi,0x1f
   140004c17:	mov    eax,DWORD PTR [rip+0xdc1b]        # 0x140012838
   140004c1d:	cmp    eax,edi
   140004c1f:	jne    0x140004c3e
   140004c21:	lea    rdx,[rip+0x67f8]        # 0x14000b420
   140004c28:	lea    rcx,[rip+0x67b1]        # 0x14000b3e0
   140004c2f:	call   0x14000546a
   140004c34:	mov    DWORD PTR [rip+0xdbfa],0x2        # 0x140012838
   140004c3e:	test   r14d,r14d
   140004c41:	jne    0x140004c4d
   140004c43:	mov    rax,r15
   140004c46:	xchg   QWORD PTR [rip+0xdbe3],rax        # 0x140012830
   140004c4d:	cmp    QWORD PTR [rip+0xdbfc],r15        # 0x140012850
   140004c54:	je     0x140004c84
   140004c56:	lea    rcx,[rip+0xdbf3]        # 0x140012850
   140004c5d:	call   0x140005300
   140004c62:	test   eax,eax
   140004c64:	je     0x140004c84
   140004c66:	mov    rbx,QWORD PTR [rip+0xdbe3]        # 0x140012850
   140004c6d:	mov    rcx,rbx
   140004c70:	mov    rax,QWORD PTR [rip+0x6759]        # 0x14000b3d0
   140004c77:	call   rax
   140004c79:	xor    r8d,r8d
   140004c7c:	lea    edx,[r8+0x2]
   140004c80:	xor    ecx,ecx
   140004c82:	call   rbx
   140004c84:	mov    rax,QWORD PTR [rip+0x66d5]        # 0x14000b360
   140004c8b:	mov    rdx,QWORD PTR [rax]
   140004c8e:	test   rdx,rdx
   140004c91:	jne    0x140004c9d
   140004c93:	mov    eax,0xff
   140004c98:	jmp    0x140004d73
   140004c9d:	mov    QWORD PTR [rsp+0x28],rdx
   140004ca2:	mov    ecx,DWORD PTR [rsp+0x20]
   140004ca6:	cmp    WORD PTR [rdx],0x20
   140004caa:	ja     0x140004d24
   140004cac:	cmp    WORD PTR [rdx],r15w
   140004cb0:	je     0x140004cb6
   140004cb2:	test   ecx,ecx
   140004cb4:	jne    0x140004d24
   140004cb6:	movzx  eax,WORD PTR [rdx]
   140004cb9:	sub    ax,di
   140004cbc:	cmp    ax,si
   140004cbf:	ja     0x140004ccc
   140004cc1:	add    rdx,0x2
   140004cc5:	mov    QWORD PTR [rsp+0x28],rdx
   140004cca:	jmp    0x140004cb6
   140004ccc:	mov    ecx,DWORD PTR [rsp+0x7c]
   140004cd0:	movzx  eax,WORD PTR [rsp+0x80]
   140004cd8:	mov    r9d,0xa
   140004cde:	and    cl,dil
   140004ce1:	cmovne r9d,eax
   140004ce5:	mov    r8,rdx
   140004ce8:	xor    edx,edx
   140004cea:	lea    rcx,[rip+0xffffffffffffb30f]        # 0x140000000
   140004cf1:	call   0x1400010c0
   140004cf6:	mov    DWORD PTR [rip+0xd580],eax        # 0x14001227c
   140004cfc:	cmp    DWORD PTR [rip+0xd59d],r15d        # 0x1400122a0
   140004d03:	jne    0x140004d0d
   140004d05:	mov    ecx,eax
   140004d07:	call   QWORD PTR [rip+0x65e3]        # 0x14000b2f0
   140004d0d:	cmp    DWORD PTR [rip+0xd56c],r15d        # 0x140012280
   140004d14:	jne    0x140004d22
   140004d16:	call   QWORD PTR [rip+0x6664]        # 0x14000b380
   140004d1c:	mov    eax,DWORD PTR [rip+0xd55a]        # 0x14001227c
   140004d22:	jmp    0x140004d73
   140004d24:	cmp    WORD PTR [rdx],0x22
   140004d28:	jne    0x140004d38
   140004d2a:	mov    eax,r15d
   140004d2d:	test   ecx,ecx
   140004d2f:	sete   al
   140004d32:	mov    ecx,eax
   140004d34:	mov    DWORD PTR [rsp+0x20],eax
   140004d38:	add    rdx,0x2
   140004d3c:	mov    QWORD PTR [rsp+0x28],rdx
   140004d41:	jmp    0x140004ca6
   140004d46:	mov    DWORD PTR [rip+0xd530],eax        # 0x14001227c
   140004d4c:	cmp    DWORD PTR [rip+0xd54d],0x0        # 0x1400122a0
   140004d53:	jne    0x140004d5e
   140004d55:	mov    ecx,eax
   140004d57:	call   QWORD PTR [rip+0x65d3]        # 0x14000b330
   140004d5d:	int3   
   140004d5e:	cmp    DWORD PTR [rip+0xd51b],0x0        # 0x140012280
   140004d65:	jne    0x140004d73
   140004d67:	call   QWORD PTR [rip+0x6613]        # 0x14000b380
   140004d6d:	mov    eax,DWORD PTR [rip+0xd509]        # 0x14001227c
   140004d73:	lea    r11,[rsp+0xb0]
   140004d7b:	mov    rbx,QWORD PTR [r11+0x20]
   140004d7f:	mov    rsi,QWORD PTR [r11+0x28]
   140004d83:	mov    rdi,QWORD PTR [r11+0x30]
   140004d87:	mov    rsp,r11
   140004d8a:	pop    r15
   140004d8c:	pop    r14
   140004d8e:	pop    r12
   140004d90:	ret    
   140004d91:	int3   
   140004d92:	int3   
   140004d93:	int3   
   140004d94:	int3   
   140004d95:	int3   
   140004d96:	int3   
   140004d97:	int3   
   140004d98:	int3   
   140004d99:	int3   
   140004d9a:	int3   
   140004d9b:	int3   
   140004d9c:	int3   
   140004d9d:	int3   
   140004d9e:	int3   
   140004d9f:	int3   
   140004da0:	sub    rsp,0x28
   140004da4:	call   0x140005394
   140004da9:	add    rsp,0x28
   140004dad:	jmp    0x140004b20
   140004db2:	int3   
   140004db3:	int3   
   140004db4:	int3   
   140004db5:	int3   
   140004db6:	int3   
   140004db7:	int3   
   140004db8:	int3   
   140004db9:	int3   
   140004dba:	int3   
   140004dbb:	int3   
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	int3   
   140004dc1:	int3   
   140004dc2:	int3   
   140004dc3:	int3   
   140004dc4:	int3   
   140004dc5:	int3   
   140004dc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004dd0:	cmp    rcx,QWORD PTR [rip+0xd251]        # 0x140012028
   140004dd7:	jne    0x140004de9
   140004dd9:	rol    rcx,0x10
   140004ddd:	test   cx,0xffff
   140004de2:	jne    0x140004de5
   140004de4:	ret    
   140004de5:	ror    rcx,0x10
   140004de9:	jmp    0x140004f20
   140004dee:	int3   
   140004def:	int3   
   140004df0:	int3   
   140004df1:	int3   
   140004df2:	int3   
   140004df3:	int3   
   140004df4:	mov    QWORD PTR [rsp+0x8],rbx
   140004df9:	push   rdi
   140004dfa:	sub    rsp,0x20
   140004dfe:	mov    rdi,rcx
   140004e01:	mov    rax,QWORD PTR [rip+0xda40]        # 0x140012848
   140004e08:	mov    QWORD PTR [rsp+0x38],rax
   140004e0d:	cmp    rax,0xffffffffffffffff
   140004e11:	jne    0x140004e2a
   140004e13:	mov    rbx,QWORD PTR [rip+0x64e6]        # 0x14000b300
   140004e1a:	mov    rcx,rbx
   140004e1d:	call   QWORD PTR [rip+0x65ad]        # 0x14000b3d0
   140004e23:	mov    rcx,rdi
   140004e26:	call   rbx
   140004e28:	jmp    0x140004e87
   140004e2a:	mov    ecx,0x8
   140004e2f:	call   0x140005482
   140004e34:	nop
   140004e35:	mov    rax,QWORD PTR [rip+0xda0c]        # 0x140012848
   140004e3c:	mov    QWORD PTR [rsp+0x38],rax
   140004e41:	mov    rax,QWORD PTR [rip+0xd9f8]        # 0x140012840
   140004e48:	mov    QWORD PTR [rsp+0x40],rax
   140004e4d:	lea    r8,[rsp+0x40]
   140004e52:	lea    rdx,[rsp+0x38]
   140004e57:	mov    rcx,rdi
   140004e5a:	call   0x14000549a
   140004e5f:	mov    rbx,rax
   140004e62:	mov    rdx,QWORD PTR [rsp+0x38]
   140004e67:	mov    QWORD PTR [rip+0xd9da],rdx        # 0x140012848
   140004e6e:	mov    rdx,QWORD PTR [rsp+0x40]
   140004e73:	mov    QWORD PTR [rip+0xd9c6],rdx        # 0x140012840
   140004e7a:	mov    ecx,0x8
   140004e7f:	call   0x14000548e
   140004e84:	mov    rax,rbx
   140004e87:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e8c:	add    rsp,0x20
   140004e90:	pop    rdi
   140004e91:	ret    
   140004e92:	int3   
   140004e93:	int3   
   140004e94:	int3   
   140004e95:	int3   
   140004e96:	int3   
   140004e97:	int3   
   140004e98:	sub    rsp,0x28
   140004e9c:	call   0x140004df4
   140004ea1:	neg    rax
   140004ea4:	sbb    eax,eax
   140004ea6:	neg    eax
   140004ea8:	dec    eax
   140004eaa:	add    rsp,0x28
   140004eae:	ret    
   140004eaf:	int3   
   140004eb0:	int3   
   140004eb1:	int3   
   140004eb2:	int3   
   140004eb3:	int3   
   140004eb4:	int3   
   140004eb5:	int3   
   140004eb6:	int3   
   140004eb7:	int3   
   140004eb8:	int3   
   140004eb9:	int3   
   140004eba:	int3   
   140004ebb:	int3   
   140004ebc:	int3   
   140004ebd:	int3   
   140004ebe:	int3   
   140004ebf:	int3   
   140004ec0:	jmp    QWORD PTR [rip+0x64da]        # 0x14000b3a0
   140004ec6:	int3   
   140004ec7:	int3   
   140004ec8:	int3   
   140004ec9:	int3   
   140004eca:	int3   
   140004ecb:	int3   
   140004ecc:	jmp    QWORD PTR [rip+0x6456]        # 0x14000b328
   140004ed2:	int3   
   140004ed3:	int3   
   140004ed4:	int3   
   140004ed5:	int3   
   140004ed6:	int3   
   140004ed7:	int3   
   140004ed8:	rex push rbx
   140004eda:	sub    rsp,0x20
   140004ede:	mov    rbx,rcx
   140004ee1:	xor    ecx,ecx
   140004ee3:	call   QWORD PTR [rip+0x6197]        # 0x14000b080
   140004ee9:	mov    rcx,rbx
   140004eec:	call   QWORD PTR [rip+0x6196]        # 0x14000b088
   140004ef2:	call   QWORD PTR [rip+0x6218]        # 0x14000b110
   140004ef8:	mov    rcx,rax
   140004efb:	mov    edx,0xc0000409
   140004f00:	add    rsp,0x20
   140004f04:	pop    rbx
   140004f05:	rex.W jmp QWORD PTR [rip+0x621c]        # 0x14000b128
   140004f0c:	int3   
   140004f0d:	int3   
   140004f0e:	int3   
   140004f0f:	int3   
   140004f10:	int3   
   140004f11:	int3   
   140004f12:	int3   
   140004f13:	int3   
   140004f14:	int3   
   140004f15:	int3   
   140004f16:	int3   
   140004f17:	int3   
   140004f18:	int3   
   140004f19:	int3   
   140004f1a:	int3   
   140004f1b:	int3   
   140004f1c:	int3   
   140004f1d:	int3   
   140004f1e:	int3   
   140004f1f:	int3   
   140004f20:	mov    QWORD PTR [rsp+0x8],rcx
   140004f25:	sub    rsp,0x88
   140004f2c:	lea    rcx,[rip+0xd41d]        # 0x140012350
   140004f33:	call   QWORD PTR [rip+0x6227]        # 0x14000b160
   140004f39:	mov    rax,QWORD PTR [rip+0xd508]        # 0x140012448
   140004f40:	mov    QWORD PTR [rsp+0x48],rax
   140004f45:	xor    r8d,r8d
   140004f48:	lea    rdx,[rsp+0x50]
   140004f4d:	mov    rcx,QWORD PTR [rsp+0x48]
   140004f52:	call   QWORD PTR [rip+0x6210]        # 0x14000b168
   140004f58:	mov    QWORD PTR [rsp+0x40],rax
   140004f5d:	cmp    QWORD PTR [rsp+0x40],0x0
   140004f63:	je     0x140004fa7
   140004f65:	mov    QWORD PTR [rsp+0x38],0x0
   140004f6e:	lea    rax,[rsp+0x58]
   140004f73:	mov    QWORD PTR [rsp+0x30],rax
   140004f78:	lea    rax,[rsp+0x60]
   140004f7d:	mov    QWORD PTR [rsp+0x28],rax
   140004f82:	lea    rax,[rip+0xd3c7]        # 0x140012350
   140004f89:	mov    QWORD PTR [rsp+0x20],rax
   140004f8e:	mov    r9,QWORD PTR [rsp+0x40]
   140004f93:	mov    r8,QWORD PTR [rsp+0x48]
   140004f98:	mov    rdx,QWORD PTR [rsp+0x50]
   140004f9d:	xor    ecx,ecx
   140004f9f:	call   QWORD PTR [rip+0x61b3]        # 0x14000b158
   140004fa5:	jmp    0x140004fca
   140004fa7:	mov    rax,QWORD PTR [rip+0xd43a]        # 0x1400123e8
   140004fae:	mov    rax,QWORD PTR [rax]
   140004fb1:	mov    QWORD PTR [rip+0xd490],rax        # 0x140012448
   140004fb8:	mov    rax,QWORD PTR [rip+0xd429]        # 0x1400123e8
   140004fbf:	add    rax,0x8
   140004fc3:	mov    QWORD PTR [rip+0xd41e],rax        # 0x1400123e8
   140004fca:	mov    rax,QWORD PTR [rip+0xd477]        # 0x140012448
   140004fd1:	mov    QWORD PTR [rip+0xd2e8],rax        # 0x1400122c0
   140004fd8:	mov    rax,QWORD PTR [rsp+0x90]
   140004fe0:	mov    QWORD PTR [rip+0xd3e9],rax        # 0x1400123d0
   140004fe7:	mov    DWORD PTR [rip+0xd2bf],0xc0000409        # 0x1400122b0
   140004ff1:	mov    DWORD PTR [rip+0xd2b9],0x1        # 0x1400122b4
   140004ffb:	mov    DWORD PTR [rip+0xd2c3],0x3        # 0x1400122c8
   140005005:	mov    eax,0x8
   14000500a:	imul   rax,rax,0x0
   14000500e:	lea    rcx,[rip+0xd2bb]        # 0x1400122d0
   140005015:	mov    QWORD PTR [rcx+rax*1],0x2
   14000501d:	mov    eax,0x8
   140005022:	imul   rax,rax,0x1
   140005026:	lea    rcx,[rip+0xd2a3]        # 0x1400122d0
   14000502d:	mov    rdx,QWORD PTR [rip+0xcff4]        # 0x140012028
   140005034:	mov    QWORD PTR [rcx+rax*1],rdx
   140005038:	mov    eax,0x8
   14000503d:	imul   rax,rax,0x2
   140005041:	lea    rcx,[rip+0xd288]        # 0x1400122d0
   140005048:	mov    rdx,QWORD PTR [rip+0xcfe1]        # 0x140012030
   14000504f:	mov    QWORD PTR [rcx+rax*1],rdx
   140005053:	mov    eax,0x8
   140005058:	imul   rax,rax,0x0
   14000505c:	mov    rcx,QWORD PTR [rip+0xcfc5]        # 0x140012028
   140005063:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005068:	mov    eax,0x8
   14000506d:	imul   rax,rax,0x1
   140005071:	mov    rcx,QWORD PTR [rip+0xcfb8]        # 0x140012030
   140005078:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000507d:	lea    rcx,[rip+0x827c]        # 0x14000d300
   140005084:	call   0x140004ed8
   140005089:	add    rsp,0x88
   140005090:	ret    
   140005091:	int3   
   140005092:	int3   
   140005093:	int3   
   140005094:	int3   
   140005095:	int3   
   140005096:	int3   
   140005097:	int3   
   140005098:	int3   
   140005099:	int3   
   14000509a:	int3   
   14000509b:	int3   
   14000509c:	int3   
   14000509d:	int3   
   14000509e:	int3   
   14000509f:	int3   
   1400050a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400050a5:	push   rdi
   1400050a6:	sub    rsp,0x20
   1400050aa:	mov    ebx,edx
   1400050ac:	mov    rdi,rcx
   1400050af:	call   QWORD PTR [rip+0x6243]        # 0x14000b2f8
   1400050b5:	test   bl,0x1
   1400050b8:	je     0x1400050c2
   1400050ba:	mov    rcx,rdi
   1400050bd:	call   0x140004ecc
   1400050c2:	mov    rax,rdi
   1400050c5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400050ca:	add    rsp,0x20
   1400050ce:	pop    rdi
   1400050cf:	ret    
   1400050d0:	int3   
   1400050d1:	int3   
   1400050d2:	int3   
   1400050d3:	int3   
   1400050d4:	int3   
   1400050d5:	int3   
   1400050d6:	jmp    QWORD PTR [rip+0x62bc]        # 0x14000b398
   1400050dc:	int3   
   1400050dd:	int3   
   1400050de:	int3   
   1400050df:	int3   
   1400050e0:	int3   
   1400050e1:	int3   
   1400050e2:	int3   
   1400050e3:	int3   
   1400050e4:	sub    rsp,0x38
   1400050e8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400050f1:	call   0x140004950
   1400050f6:	nop
   1400050f7:	jmp    0x1400050fe
   1400050f9:	mov    rax,QWORD PTR [rsp+0x50]
   1400050fe:	add    rsp,0x38
   140005102:	ret    
   140005103:	int3   
   140005104:	int3   
   140005105:	int3   
   140005106:	int3   
   140005107:	int3   
   140005108:	int3   
   140005109:	int3   
   14000510a:	jmp    QWORD PTR [rip+0x6278]        # 0x14000b388
   140005110:	int3   
   140005111:	int3   
   140005112:	int3   
   140005113:	int3   
   140005114:	int3   
   140005115:	int3   
   140005116:	jmp    QWORD PTR [rip+0x61c4]        # 0x14000b2e0
   14000511c:	int3   
   14000511d:	int3   
   14000511e:	int3   
   14000511f:	int3   
   140005120:	int3   
   140005121:	int3   
   140005122:	jmp    QWORD PTR [rip+0x6188]        # 0x14000b2b0
   140005128:	int3   
   140005129:	int3   
   14000512a:	int3   
   14000512b:	int3   
   14000512c:	int3   
   14000512d:	int3   
   14000512e:	jmp    QWORD PTR [rip+0x619c]        # 0x14000b2d0
   140005134:	int3   
   140005135:	int3   
   140005136:	int3   
   140005137:	int3   
   140005138:	int3   
   140005139:	int3   
   14000513a:	int3   
   14000513b:	int3   
   14000513c:	int3   
   14000513d:	int3   
   14000513e:	int3   
   14000513f:	int3   
   140005140:	jmp    QWORD PTR [rip+0x61a2]        # 0x14000b2e8
   140005146:	int3   
   140005147:	int3   
   140005148:	int3   
   140005149:	int3   
   14000514a:	int3   
   14000514b:	int3   
   14000514c:	jmp    QWORD PTR [rip+0x6266]        # 0x14000b3b8
   140005152:	int3   
   140005153:	int3   
   140005154:	int3   
   140005155:	int3   
   140005156:	int3   
   140005157:	int3   
   140005158:	jmp    QWORD PTR [rip+0x61f2]        # 0x14000b350
   14000515e:	int3   
   14000515f:	int3   
   140005160:	int3   
   140005161:	int3   
   140005162:	int3   
   140005163:	int3   
   140005164:	jmp    QWORD PTR [rip+0x61ce]        # 0x14000b338
   14000516a:	int3   
   14000516b:	int3   
   14000516c:	int3   
   14000516d:	int3   
   14000516e:	int3   
   14000516f:	int3   
   140005170:	jmp    QWORD PTR [rip+0x619a]        # 0x14000b310
   140005176:	int3   
   140005177:	int3   
   140005178:	int3   
   140005179:	int3   
   14000517a:	int3   
   14000517b:	int3   
   14000517c:	int3   
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	sub    rsp,0x28
   140005184:	mov    rax,QWORD PTR [rcx]
   140005187:	cmp    DWORD PTR [rax],0xe06d7363
   14000518d:	jne    0x1400051b2
   14000518f:	cmp    DWORD PTR [rax+0x18],0x4
   140005193:	jne    0x1400051b2
   140005195:	mov    ecx,DWORD PTR [rax+0x20]
   140005198:	lea    eax,[rcx-0x19930520]
   14000519e:	cmp    eax,0x2
   1400051a1:	jbe    0x1400051ab
   1400051a3:	cmp    ecx,0x1994000
   1400051a9:	jne    0x1400051b2
   1400051ab:	call   QWORD PTR [rip+0x618f]        # 0x14000b340
   1400051b1:	int3   
   1400051b2:	xor    eax,eax
   1400051b4:	add    rsp,0x28
   1400051b8:	ret    
   1400051b9:	int3   
   1400051ba:	int3   
   1400051bb:	int3   
   1400051bc:	int3   
   1400051bd:	int3   
   1400051be:	int3   
   1400051bf:	int3   
   1400051c0:	sub    rsp,0x28
   1400051c4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005180
   1400051cb:	call   QWORD PTR [rip+0x5eaf]        # 0x14000b080
   1400051d1:	xor    eax,eax
   1400051d3:	add    rsp,0x28
   1400051d7:	ret    
   1400051d8:	int3   
   1400051d9:	int3   
   1400051da:	int3   
   1400051db:	int3   
   1400051dc:	int3   
   1400051dd:	int3   
   1400051de:	jmp    QWORD PTR [rip+0x60e4]        # 0x14000b2c8
   1400051e4:	int3   
   1400051e5:	int3   
   1400051e6:	int3   
   1400051e7:	int3   
   1400051e8:	int3   
   1400051e9:	int3   
   1400051ea:	int3   
   1400051eb:	int3   
   1400051ec:	sub    rsp,0x18
   1400051f0:	xor    edx,edx
   1400051f2:	lea    rax,[rcx-0x1]
   1400051f6:	cmp    rax,0xfffffffffffffffd
   1400051fa:	ja     0x140005238
   1400051fc:	mov    eax,0x5a4d
   140005201:	cmp    WORD PTR [rcx],ax
   140005204:	jne    0x140005230
   140005206:	cmp    DWORD PTR [rcx+0x3c],edx
   140005209:	jl     0x140005230
   14000520b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140005212:	jae    0x140005230
   140005214:	movsxd rax,DWORD PTR [rcx+0x3c]
   140005218:	add    rax,rcx
   14000521b:	mov    QWORD PTR [rsp],rax
   14000521f:	cmp    DWORD PTR [rax],0x4550
   140005225:	cmovne rax,rdx
   140005229:	mov    rdx,rax
   14000522c:	mov    QWORD PTR [rsp],rax
   140005230:	jmp    0x140005238
   140005232:	xor    edx,edx
   140005234:	mov    QWORD PTR [rsp],rdx
   140005238:	mov    rax,rdx
   14000523b:	add    rsp,0x18
   14000523f:	ret    
   140005240:	int3   
   140005241:	int3   
   140005242:	int3   
   140005243:	int3   
   140005244:	int3   
   140005245:	int3   
   140005246:	int3   
   140005247:	int3   
   140005248:	rex push rbx
   14000524a:	sub    rsp,0x20
   14000524e:	mov    ebx,ecx
   140005250:	xor    ecx,ecx
   140005252:	call   QWORD PTR [rip+0x5e80]        # 0x14000b0d8
   140005258:	test   rax,rax
   14000525b:	je     0x140005285
   14000525d:	mov    rcx,rax
   140005260:	call   0x1400051ec
   140005265:	test   rax,rax
   140005268:	je     0x140005285
   14000526a:	mov    ecx,0x2
   14000526f:	cmp    WORD PTR [rax+0x5c],cx
   140005273:	jne    0x140005279
   140005275:	mov    eax,ecx
   140005277:	jmp    0x140005287
   140005279:	cmp    WORD PTR [rax+0x5c],0x3
   14000527e:	mov    eax,0x1
   140005283:	je     0x140005287
   140005285:	mov    eax,ebx
   140005287:	add    rsp,0x20
   14000528b:	pop    rbx
   14000528c:	ret    
   14000528d:	int3   
   14000528e:	int3   
   14000528f:	int3   
   140005290:	int3   
   140005291:	int3   
   140005292:	int3   
   140005293:	int3   
   140005294:	jmp    QWORD PTR [rip+0x6026]        # 0x14000b2c0
   14000529a:	int3   
   14000529b:	int3   
   14000529c:	int3   
   14000529d:	int3   
   14000529e:	int3   
   14000529f:	int3   
   1400052a0:	xor    eax,eax
   1400052a2:	ret    
   1400052a3:	int3   
   1400052a4:	int3   
   1400052a5:	int3   
   1400052a6:	int3   
   1400052a7:	int3   
   1400052a8:	int3   
   1400052a9:	int3   
   1400052aa:	int3   
   1400052ab:	int3   
   1400052ac:	int3   
   1400052ad:	int3   
   1400052ae:	int3   
   1400052af:	int3   
   1400052b0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400052b4:	xor    r9d,r9d
   1400052b7:	add    r8,rcx
   1400052ba:	mov    r10,rdx
   1400052bd:	movzx  eax,WORD PTR [r8+0x14]
   1400052c2:	movzx  r11d,WORD PTR [r8+0x6]
   1400052c7:	add    rax,0x18
   1400052cb:	add    rax,r8
   1400052ce:	test   r11d,r11d
   1400052d1:	je     0x1400052f1
   1400052d3:	mov    edx,DWORD PTR [rax+0xc]
   1400052d6:	cmp    r10,rdx
   1400052d9:	jb     0x1400052e5
   1400052db:	mov    ecx,DWORD PTR [rax+0x8]
   1400052de:	add    ecx,edx
   1400052e0:	cmp    r10,rcx
   1400052e3:	jb     0x1400052f3
   1400052e5:	inc    r9d
   1400052e8:	add    rax,0x28
   1400052ec:	cmp    r9d,r11d
   1400052ef:	jb     0x1400052d3
   1400052f1:	xor    eax,eax
   1400052f3:	ret    
   1400052f4:	int3   
   1400052f5:	int3   
   1400052f6:	int3   
   1400052f7:	int3   
   1400052f8:	int3   
   1400052f9:	int3   
   1400052fa:	int3   
   1400052fb:	int3   
   1400052fc:	int3   
   1400052fd:	int3   
   1400052fe:	int3   
   1400052ff:	int3   
   140005300:	mov    QWORD PTR [rsp+0x8],rbx
   140005305:	push   rdi
   140005306:	sub    rsp,0x20
   14000530a:	mov    rbx,rcx
   14000530d:	lea    rdi,[rip+0xffffffffffffacec]        # 0x140000000
   140005314:	mov    rcx,rdi
   140005317:	call   0x140005360
   14000531c:	test   eax,eax
   14000531e:	je     0x140005342
   140005320:	sub    rbx,rdi
   140005323:	mov    rdx,rbx
   140005326:	mov    rcx,rdi
   140005329:	call   0x1400052b0
   14000532e:	test   rax,rax
   140005331:	je     0x140005342
   140005333:	mov    eax,DWORD PTR [rax+0x24]
   140005336:	shr    eax,0x1f
   140005339:	not    eax
   14000533b:	and    eax,0x1
   14000533e:	jmp    0x140005342
   140005340:	xor    eax,eax
   140005342:	mov    rbx,QWORD PTR [rsp+0x30]
   140005347:	add    rsp,0x20
   14000534b:	pop    rdi
   14000534c:	ret    
   14000534d:	int3   
   14000534e:	int3   
   14000534f:	int3   
   140005350:	int3   
   140005351:	int3   
   140005352:	int3   
   140005353:	int3   
   140005354:	int3   
   140005355:	int3   
   140005356:	int3   
   140005357:	int3   
   140005358:	int3   
   140005359:	int3   
   14000535a:	int3   
   14000535b:	int3   
   14000535c:	int3   
   14000535d:	int3   
   14000535e:	int3   
   14000535f:	int3   
   140005360:	mov    rax,rcx
   140005363:	mov    ecx,0x5a4d
   140005368:	cmp    WORD PTR [rax],cx
   14000536b:	je     0x140005370
   14000536d:	xor    eax,eax
   14000536f:	ret    
   140005370:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005374:	add    rcx,rax
   140005377:	xor    eax,eax
   140005379:	cmp    DWORD PTR [rcx],0x4550
   14000537f:	jne    0x14000538d
   140005381:	mov    edx,0x20b
   140005386:	cmp    WORD PTR [rcx+0x18],dx
   14000538a:	sete   al
   14000538d:	ret    
   14000538e:	int3   
   14000538f:	int3   
   140005390:	int3   
   140005391:	int3   
   140005392:	int3   
   140005393:	int3   
   140005394:	mov    QWORD PTR [rsp+0x20],rbx
   140005399:	push   rbp
   14000539a:	mov    rbp,rsp
   14000539d:	sub    rsp,0x20
   1400053a1:	and    QWORD PTR [rbp+0x18],0x0
   1400053a6:	movabs rbx,0x2b992ddfa232
   1400053b0:	mov    rax,QWORD PTR [rip+0xcc71]        # 0x140012028
   1400053b7:	cmp    rax,rbx
   1400053ba:	jne    0x14000544f
   1400053c0:	lea    rcx,[rbp+0x18]
   1400053c4:	call   QWORD PTR [rip+0x5e26]        # 0x14000b1f0
   1400053ca:	mov    rax,QWORD PTR [rbp+0x18]
   1400053ce:	mov    QWORD PTR [rbp+0x10],rax
   1400053d2:	call   QWORD PTR [rip+0x5d30]        # 0x14000b108
   1400053d8:	mov    eax,eax
   1400053da:	xor    QWORD PTR [rbp+0x10],rax
   1400053de:	call   QWORD PTR [rip+0x5d3c]        # 0x14000b120
   1400053e4:	mov    eax,eax
   1400053e6:	xor    QWORD PTR [rbp+0x10],rax
   1400053ea:	call   QWORD PTR [rip+0x5df8]        # 0x14000b1e8
   1400053f0:	mov    eax,eax
   1400053f2:	shl    rax,0x18
   1400053f6:	xor    QWORD PTR [rbp+0x10],rax
   1400053fa:	call   QWORD PTR [rip+0x5de8]        # 0x14000b1e8
   140005400:	mov    eax,eax
   140005402:	lea    rcx,[rbp+0x10]
   140005406:	xor    rax,QWORD PTR [rbp+0x10]
   14000540a:	xor    rax,rcx
   14000540d:	lea    rcx,[rbp+0x20]
   140005411:	mov    QWORD PTR [rbp+0x10],rax
   140005415:	call   QWORD PTR [rip+0x5d2d]        # 0x14000b148
   14000541b:	mov    eax,DWORD PTR [rbp+0x20]
   14000541e:	movabs rcx,0xffffffffffff
   140005428:	shl    rax,0x20
   14000542c:	xor    rax,QWORD PTR [rbp+0x20]
   140005430:	xor    rax,QWORD PTR [rbp+0x10]
   140005434:	and    rax,rcx
   140005437:	movabs rcx,0x2b992ddfa233
   140005441:	cmp    rax,rbx
   140005444:	cmove  rax,rcx
   140005448:	mov    QWORD PTR [rip+0xcbd9],rax        # 0x140012028
   14000544f:	mov    rbx,QWORD PTR [rsp+0x48]
   140005454:	not    rax
   140005457:	mov    QWORD PTR [rip+0xcbd2],rax        # 0x140012030
   14000545e:	add    rsp,0x20
   140005462:	pop    rbp
   140005463:	ret    
   140005464:	int3   
   140005465:	int3   
   140005466:	int3   
   140005467:	int3   
   140005468:	int3   
   140005469:	int3   
   14000546a:	jmp    QWORD PTR [rip+0x5f00]        # 0x14000b370
   140005470:	int3   
   140005471:	int3   
   140005472:	int3   
   140005473:	int3   
   140005474:	int3   
   140005475:	int3   
   140005476:	jmp    QWORD PTR [rip+0x5eec]        # 0x14000b368
   14000547c:	int3   
   14000547d:	int3   
   14000547e:	int3   
   14000547f:	int3   
   140005480:	int3   
   140005481:	int3   
   140005482:	jmp    QWORD PTR [rip+0x5e98]        # 0x14000b320
   140005488:	int3   
   140005489:	int3   
   14000548a:	int3   
   14000548b:	int3   
   14000548c:	int3   
   14000548d:	int3   
   14000548e:	jmp    QWORD PTR [rip+0x5e84]        # 0x14000b318
   140005494:	int3   
   140005495:	int3   
   140005496:	int3   
   140005497:	int3   
   140005498:	int3   
   140005499:	int3   
   14000549a:	jmp    QWORD PTR [rip+0x5ef0]        # 0x14000b390
   1400054a0:	int3   
   1400054a1:	int3   
   1400054a2:	int3   
   1400054a3:	int3   
   1400054a4:	int3   
   1400054a5:	int3   
   1400054a6:	int3   
   1400054a7:	int3   
   1400054a8:	sub    rsp,0x28
   1400054ac:	mov    r8,QWORD PTR [r9+0x38]
   1400054b0:	mov    rcx,rdx
   1400054b3:	mov    rdx,r9
   1400054b6:	call   0x1400054cc
   1400054bb:	mov    eax,0x1
   1400054c0:	add    rsp,0x28
   1400054c4:	ret    
   1400054c5:	int3   
   1400054c6:	int3   
   1400054c7:	int3   
   1400054c8:	int3   
   1400054c9:	int3   
   1400054ca:	int3   
   1400054cb:	int3   
   1400054cc:	rex push rbx
   1400054ce:	sub    rsp,0x20
   1400054d2:	mov    r11d,DWORD PTR [r8]
   1400054d5:	mov    rbx,rdx
   1400054d8:	and    r11d,0xfffffff8
   1400054dc:	mov    r9,rcx
   1400054df:	test   BYTE PTR [r8],0x4
   1400054e3:	mov    r10,rcx
   1400054e6:	je     0x1400054fb
   1400054e8:	mov    eax,DWORD PTR [r8+0x8]
   1400054ec:	movsxd r10,DWORD PTR [r8+0x4]
   1400054f0:	neg    eax
   1400054f2:	add    r10,rcx
   1400054f5:	movsxd rcx,eax
   1400054f8:	and    r10,rcx
   1400054fb:	movsxd rax,r11d
   1400054fe:	mov    rdx,QWORD PTR [rax+r10*1]
   140005502:	mov    rax,QWORD PTR [rbx+0x10]
   140005506:	mov    ecx,DWORD PTR [rax+0x8]
   140005509:	add    rcx,QWORD PTR [rbx+0x8]
   14000550d:	test   BYTE PTR [rcx+0x3],0xf
   140005511:	je     0x14000551f
   140005513:	movzx  eax,BYTE PTR [rcx+0x3]
   140005517:	and    eax,0xfffffff0
   14000551a:	cdqe   
   14000551c:	add    r9,rax
   14000551f:	xor    r9,rdx
   140005522:	mov    rcx,r9
   140005525:	add    rsp,0x20
   140005529:	pop    rbx
   14000552a:	jmp    0x140004dd0
   14000552f:	int3   
   140005530:	int3   
   140005531:	int3   
   140005532:	int3   
   140005533:	int3   
   140005534:	int3   
   140005535:	int3   
   140005536:	int3   
   140005537:	int3   
   140005538:	mov    rax,rsp
   14000553b:	mov    QWORD PTR [rax+0x8],rbx
   14000553f:	mov    QWORD PTR [rax+0x10],rbp
   140005543:	mov    QWORD PTR [rax+0x18],rsi
   140005547:	mov    QWORD PTR [rax+0x20],rdi
   14000554b:	push   r14
   14000554d:	sub    rsp,0x20
   140005551:	mov    rbx,QWORD PTR [r9+0x38]
   140005555:	mov    rsi,rdx
   140005558:	mov    r14,r8
   14000555b:	mov    rbp,rcx
   14000555e:	mov    rdx,r9
   140005561:	mov    rcx,rsi
   140005564:	mov    rdi,r9
   140005567:	lea    r8,[rbx+0x4]
   14000556b:	call   0x1400054cc
   140005570:	mov    r11d,DWORD PTR [rbx+0x4]
   140005574:	mov    r8d,0x1
   14000557a:	mov    r10d,DWORD PTR [rbp+0x4]
   14000557e:	mov    eax,r11d
   140005581:	and    eax,r8d
   140005584:	and    r11d,0x2
   140005588:	and    r10b,0x66
   14000558c:	cmove  r11d,eax
   140005590:	test   r11d,r11d
   140005593:	je     0x1400055a9
   140005595:	mov    r9,rdi
   140005598:	mov    r8,r14
   14000559b:	mov    rdx,rsi
   14000559e:	mov    rcx,rbp
   1400055a1:	call   0x140005158
   1400055a6:	mov    r8d,eax
   1400055a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400055ae:	mov    eax,r8d
   1400055b1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400055b6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400055bb:	mov    rdi,QWORD PTR [rsp+0x48]
   1400055c0:	add    rsp,0x20
   1400055c4:	pop    r14
   1400055c6:	ret    
   1400055c7:	int3   
   1400055c8:	int3   
   1400055c9:	int3   
   1400055ca:	int3   
   1400055cb:	int3   
   1400055cc:	int3   
   1400055cd:	int3   
   1400055ce:	int3   
   1400055cf:	int3   
   1400055d0:	int3   
   1400055d1:	int3   
   1400055d2:	int3   
   1400055d3:	int3   
   1400055d4:	int3   
   1400055d5:	int3   
   1400055d6:	jmp    QWORD PTR [rip+0x5de4]        # 0x14000b3c0
   1400055dc:	int3   
   1400055dd:	int3   
   1400055de:	int3   
   1400055df:	int3   
   1400055e0:	int3   
   1400055e1:	int3   
   1400055e2:	int3   
   1400055e3:	int3   
   1400055e4:	int3   
   1400055e5:	int3   
   1400055e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400055f0:	jmp    rax
   1400055f2:	int3   
   1400055f3:	int3   
   1400055f4:	int3   
   1400055f5:	int3   
   1400055f6:	int3   
   1400055f7:	int3   
   1400055f8:	int3   
   1400055f9:	int3   
   1400055fa:	int3   
   1400055fb:	int3   
   1400055fc:	int3   
   1400055fd:	int3   
   1400055fe:	int3   
   1400055ff:	int3   
   140005600:	int3   
   140005601:	int3   
   140005602:	int3   
   140005603:	int3   
   140005604:	int3   
   140005605:	int3   
   140005606:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005610:	sub    rsp,0x10
   140005614:	mov    QWORD PTR [rsp],r10
   140005618:	mov    QWORD PTR [rsp+0x8],r11
   14000561d:	xor    r11,r11
   140005620:	lea    r10,[rsp+0x18]
   140005625:	sub    r10,rax
   140005628:	cmovb  r10,r11
   14000562c:	mov    r11,QWORD PTR gs:0x10
   140005635:	cmp    r10,r11
   140005638:	jae    0x14000564f
   14000563a:	and    r10w,0xf000
   140005640:	lea    r11,[r11-0x1000]
   140005647:	test   BYTE PTR [r11],r11b
   14000564a:	cmp    r10,r11
   14000564d:	jne    0x140005640
   14000564f:	mov    r10,QWORD PTR [rsp]
   140005653:	mov    r11,QWORD PTR [rsp+0x8]
   140005658:	add    rsp,0x10
   14000565c:	ret    
   14000565d:	int3   
   14000565e:	int3   
   14000565f:	int3   
   140005660:	mov    DWORD PTR [rip+0xd202],ecx        # 0x140012868
   140005666:	mov    eax,0x1
   14000566b:	lock xadd DWORD PTR [rip+0xd339],eax        # 0x1400129ac
   140005673:	inc    eax
   140005675:	ret    
   140005676:	int3   
   140005677:	int3   
   140005678:	int3   
   140005679:	int3   
   14000567a:	int3   
   14000567b:	int3   
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	mov    DWORD PTR [rip+0xd1da],ecx        # 0x140012860
   140005686:	mov    eax,0x1
   14000568b:	ret    
   14000568c:	mov    DWORD PTR [rip+0xd1ca],ecx        # 0x14001285c
   140005692:	mov    eax,0x1
   140005697:	lock xadd DWORD PTR [rip+0xd309],eax        # 0x1400129a8
   14000569f:	inc    eax
   1400056a1:	ret    
   1400056a2:	int3   
   1400056a3:	int3   
   1400056a4:	mov    DWORD PTR [rip+0xd1ae],ecx        # 0x140012858
   1400056aa:	mov    eax,0x1
   1400056af:	lock xadd DWORD PTR [rip+0xd2f9],eax        # 0x1400129b0
   1400056b7:	inc    eax
   1400056b9:	ret    
   1400056ba:	int3   
   1400056bb:	int3   
   1400056bc:	mov    DWORD PTR [rip+0xd1a2],ecx        # 0x140012864
   1400056c2:	mov    eax,0x1
   1400056c7:	lock xadd DWORD PTR [rip+0xd2d5],eax        # 0x1400129a4
   1400056cf:	inc    eax
   1400056d1:	ret    
   1400056d2:	int3   
   1400056d3:	int3   
   1400056d4:	int3   
   1400056d5:	int3   
   1400056d6:	int3   
   1400056d7:	int3   
   1400056d8:	int3   
   1400056d9:	int3   
   1400056da:	int3   
   1400056db:	int3   
   1400056dc:	int3   
   1400056dd:	int3   
   1400056de:	int3   
   1400056df:	int3   
   1400056e0:	sub    rcx,0x38
   1400056e4:	jmp    0x140008c00
   1400056e9:	int3   
   1400056ea:	int3   
   1400056eb:	int3   
   1400056ec:	int3   
   1400056ed:	int3   
   1400056ee:	int3   
   1400056ef:	int3   
   1400056f0:	sub    rcx,0x38
   1400056f4:	jmp    0x140008c70
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	int3   
   1400056fd:	int3   
   1400056fe:	int3   
   1400056ff:	int3   
   140005700:	sub    rcx,0x20
   140005704:	jmp    0x140008d78
   140005709:	int3   
   14000570a:	int3   
   14000570b:	int3   
   14000570c:	int3   
   14000570d:	int3   
   14000570e:	int3   
   14000570f:	int3   
   140005710:	sub    rcx,0x18
   140005714:	jmp    0x140001c70
   140005719:	int3   
   14000571a:	int3   
   14000571b:	int3   
   14000571c:	int3   
   14000571d:	int3   
   14000571e:	int3   
   14000571f:	int3   
   140005720:	sub    rcx,0x38
   140005724:	jmp    0x140001c70
   140005729:	int3   
   14000572a:	int3   
   14000572b:	int3   
   14000572c:	int3   
   14000572d:	int3   
   14000572e:	int3   
   14000572f:	int3   
   140005730:	sub    rcx,0x40
   140005734:	jmp    0x140001c70
   140005739:	int3   
   14000573a:	int3   
   14000573b:	int3   
   14000573c:	int3   
   14000573d:	int3   
   14000573e:	int3   
   14000573f:	int3   
   140005740:	mov    eax,0x80004001
   140005745:	ret    
   140005746:	int3   
   140005747:	int3   
   140005748:	int3   
   140005749:	int3   
   14000574a:	int3   
   14000574b:	int3   
   14000574c:	int3   
   14000574d:	int3   
   14000574e:	int3   
   14000574f:	int3   
   140005750:	sub    rcx,0x18
   140005754:	jmp    0x140001c90
   140005759:	int3   
   14000575a:	int3   
   14000575b:	int3   
   14000575c:	int3   
   14000575d:	int3   
   14000575e:	int3   
   14000575f:	int3   
   140005760:	sub    rcx,0x38
   140005764:	jmp    0x140001c90
   140005769:	int3   
   14000576a:	int3   
   14000576b:	int3   
   14000576c:	int3   
   14000576d:	int3   
   14000576e:	int3   
   14000576f:	int3   
   140005770:	sub    rcx,0x40
   140005774:	jmp    0x140001c90
   140005779:	int3   
   14000577a:	int3   
   14000577b:	int3   
   14000577c:	int3   
   14000577d:	int3   
   14000577e:	int3   
   14000577f:	int3   
   140005780:	sub    rcx,0x18
   140005784:	jmp    0x140001c40
   140005789:	int3   
   14000578a:	int3   
   14000578b:	int3   
   14000578c:	int3   
   14000578d:	int3   
   14000578e:	int3   
   14000578f:	int3   
   140005790:	sub    rcx,0x38
   140005794:	jmp    0x140001c40
   140005799:	int3   
   14000579a:	int3   
   14000579b:	int3   
   14000579c:	int3   
   14000579d:	int3   
   14000579e:	int3   
   14000579f:	int3   
   1400057a0:	sub    rcx,0x40
   1400057a4:	jmp    0x140001c40
   1400057a9:	int3   
   1400057aa:	int3   
   1400057ab:	int3   
   1400057ac:	int3   
   1400057ad:	int3   
   1400057ae:	int3   
   1400057af:	int3   
   1400057b0:	and    QWORD PTR [r9],0x0
   1400057b4:	mov    eax,0x80004002
   1400057b9:	ret    
   1400057ba:	int3   
   1400057bb:	int3   
   1400057bc:	int3   
   1400057bd:	int3   
   1400057be:	int3   
   1400057bf:	int3   
   1400057c0:	mov    rax,QWORD PTR [rcx+0x20]
   1400057c4:	sub    rax,QWORD PTR [rcx+0x18]
   1400057c8:	sar    rax,0x4
   1400057cc:	mov    DWORD PTR [rdx],eax
   1400057ce:	xor    eax,eax
   1400057d0:	ret    
   1400057d1:	int3   
   1400057d2:	int3   
   1400057d3:	int3   
   1400057d4:	int3   
   1400057d5:	int3   
   1400057d6:	int3   
   1400057d7:	int3   
   1400057d8:	int3   
   1400057d9:	int3   
   1400057da:	int3   
   1400057db:	int3   
   1400057dc:	int3   
   1400057dd:	int3   
   1400057de:	int3   
   1400057df:	int3   
   1400057e0:	sub    rcx,0x18
   1400057e4:	jmp    0x140001dd0
   1400057e9:	int3   
   1400057ea:	int3   
   1400057eb:	int3   
   1400057ec:	int3   
   1400057ed:	int3   
   1400057ee:	int3   
   1400057ef:	int3   
   1400057f0:	sub    rcx,0x20
   1400057f4:	jmp    0x140001dd0
   1400057f9:	int3   
   1400057fa:	int3   
   1400057fb:	int3   
   1400057fc:	int3   
   1400057fd:	int3   
   1400057fe:	int3   
   1400057ff:	int3   
   140005800:	sub    rcx,0x18
   140005804:	jmp    0x140001e30
   140005809:	int3   
   14000580a:	int3   
   14000580b:	int3   
   14000580c:	int3   
   14000580d:	int3   
   14000580e:	int3   
   14000580f:	int3   
   140005810:	sub    rcx,0x20
   140005814:	jmp    0x140001e30
   140005819:	int3   
   14000581a:	int3   
   14000581b:	int3   
   14000581c:	int3   
   14000581d:	int3   
   14000581e:	int3   
   14000581f:	int3   
   140005820:	sub    rcx,0x18
   140005824:	jmp    0x140001df0
   140005829:	int3   
   14000582a:	int3   
   14000582b:	int3   
   14000582c:	int3   
   14000582d:	int3   
   14000582e:	int3   
   14000582f:	int3   
   140005830:	sub    rcx,0x20
   140005834:	jmp    0x140001df0
   140005839:	int3   
   14000583a:	int3   
   14000583b:	int3   
   14000583c:	int3   
   14000583d:	int3   
   14000583e:	int3   
   14000583f:	int3   
   140005840:	int3   
   140005841:	int3   
   140005842:	int3   
   140005843:	int3   
   140005844:	int3   
   140005845:	int3   
   140005846:	int3   
   140005847:	int3   
   140005848:	int3   
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	lea    rcx,[rdx+0xc0]
   140005857:	jmp    0x140009c48
   14000585c:	lea    rcx,[rdx+0x30]
   140005863:	jmp    0x140009b78
   140005868:	lea    rcx,[rdx+0x88]
   14000586f:	jmp    0x140007388
   140005874:	lea    rcx,[rdx+0x68]
   14000587b:	jmp    0x140007388
   140005880:	lea    rcx,[rdx+0x60]
   140005887:	jmp    0x140007588
   14000588c:	rex push rbp
   14000588e:	sub    rsp,0x20
   140005892:	mov    rbp,rdx
   140005895:	mov    rdx,QWORD PTR [rbp+0xa8]
   14000589c:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400058a3:	call   0x140003290
   1400058a8:	add    rsp,0x20
   1400058ac:	pop    rbp
   1400058ad:	ret    
   1400058ae:	lea    rcx,[rdx+0x40]
   1400058b5:	jmp    0x140007388
   1400058ba:	lea    rcx,[rdx+0x340]
   1400058c1:	jmp    0x140009c74
   1400058c6:	lea    rcx,[rdx+0x48]
   1400058cd:	jmp    0x140007388
   1400058d2:	lea    rcx,[rdx+0x38]
   1400058d9:	jmp    0x140007388
   1400058de:	lea    rcx,[rdx+0x480]
   1400058e5:	jmp    0x140009c1c
   1400058ea:	lea    rcx,[rdx+0x70]
   1400058f1:	jmp    0x140008b7c
   1400058f6:	lea    rcx,[rdx+0x200]
   1400058fd:	jmp    0x140009bf0
   140005902:	int3   
   140005903:	int3   
   140005904:	int3   
   140005905:	int3   
   140005906:	int3   
   140005907:	int3   
   140005908:	int3   
   140005909:	int3   
   14000590a:	int3   
   14000590b:	int3   
   14000590c:	int3   
   14000590d:	int3   
   14000590e:	int3   
   14000590f:	int3   
   140005910:	lea    rcx,[rdx+0x58]
   140005917:	jmp    0x140007388
   14000591c:	lea    rcx,[rdx+0x58]
   140005923:	jmp    0x140007388
   140005928:	lea    rcx,[rdx+0x58]
   14000592f:	jmp    0x140007388
   140005934:	int3   
   140005935:	int3   
   140005936:	int3   
   140005937:	int3   
   140005938:	int3   
   140005939:	int3   
   14000593a:	int3   
   14000593b:	int3   
   14000593c:	int3   
   14000593d:	int3   
   14000593e:	int3   
   14000593f:	int3   
   140005940:	mov    QWORD PTR [rsp+0x10],rdx
   140005945:	push   rbp
   140005946:	sub    rsp,0x20
   14000594a:	mov    rbp,rdx
   14000594d:	call   0x140009920
   140005952:	mov    DWORD PTR [rbp+0x58],eax
   140005955:	mov    rcx,QWORD PTR [rbp+0x48]
   140005959:	mov    r9d,eax
   14000595c:	mov    edx,0x3f
   140005961:	call   0x140009a0c
   140005966:	nop
   140005967:	lea    rax,[rip+0xffffffffffffc718]        # 0x140002086
   14000596e:	add    rsp,0x20
   140005972:	pop    rbp
   140005973:	ret    
   140005974:	int3   
   140005975:	int3   
   140005976:	int3   
   140005977:	int3   
   140005978:	int3   
   140005979:	int3   
   14000597a:	int3   
   14000597b:	int3   
   14000597c:	int3   
   14000597d:	int3   
   14000597e:	int3   
   14000597f:	int3   
   140005980:	mov    QWORD PTR [rsp+0x10],rdx
   140005985:	push   rbp
   140005986:	sub    rsp,0x30
   14000598a:	mov    rbp,rdx
   14000598d:	mov    rcx,QWORD PTR [rbp+0x58]
   140005991:	call   QWORD PTR [rip+0x5991]        # 0x14000b328
   140005997:	xor    edx,edx
   140005999:	xor    ecx,ecx
   14000599b:	call   0x14000514c
   1400059a0:	nop
   1400059a1:	int3   
   1400059a2:	int3   
   1400059a3:	int3   
   1400059a4:	int3   
   1400059a5:	int3   
   1400059a6:	int3   
   1400059a7:	int3   
   1400059a8:	int3   
   1400059a9:	int3   
   1400059aa:	int3   
   1400059ab:	int3   
   1400059ac:	int3   
   1400059ad:	int3   
   1400059ae:	int3   
   1400059af:	int3   
   1400059b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400059b5:	push   rbp
   1400059b6:	sub    rsp,0x20
   1400059ba:	mov    rbp,rdx
   1400059bd:	xor    edx,edx
   1400059bf:	xor    ecx,ecx
   1400059c1:	call   0x14000514c
   1400059c6:	nop
   1400059c7:	int3   
   1400059c8:	int3   
   1400059c9:	int3   
   1400059ca:	int3   
   1400059cb:	int3   
   1400059cc:	int3   
   1400059cd:	int3   
   1400059ce:	int3   
   1400059cf:	int3   
   1400059d0:	lea    rcx,[rdx+0x60]
   1400059d7:	jmp    0x140008b88
   1400059dc:	int3   
   1400059dd:	int3   
   1400059de:	int3   
   1400059df:	int3   
   1400059e0:	int3   
   1400059e1:	int3   
   1400059e2:	int3   
   1400059e3:	int3   
   1400059e4:	int3   
   1400059e5:	int3   
   1400059e6:	int3   
   1400059e7:	int3   
   1400059e8:	int3   
   1400059e9:	int3   
   1400059ea:	int3   
   1400059eb:	int3   
   1400059ec:	int3   
   1400059ed:	int3   
   1400059ee:	int3   
   1400059ef:	int3   
   1400059f0:	lea    rcx,[rdx+0x60]
   1400059f7:	jmp    0x140007388
   1400059fc:	lea    rcx,[rdx+0x58]
   140005a03:	jmp    0x140007388
   140005a08:	lea    rcx,[rdx+0x50]
   140005a0f:	jmp    0x140007388
   140005a14:	int3   
   140005a15:	int3   
   140005a16:	int3   
   140005a17:	int3   
   140005a18:	int3   
   140005a19:	int3   
   140005a1a:	mov    QWORD PTR [rsp+0x10],rdx
   140005a1f:	push   rbp
   140005a20:	sub    rsp,0x20
   140005a24:	mov    rbp,rdx
   140005a27:	mov    rcx,QWORD PTR [rbp+0x68]
   140005a2b:	mov    QWORD PTR [rbp+0x68],rcx
   140005a2f:	xor    eax,eax
   140005a31:	add    rcx,0x1
   140005a35:	je     0x140005a4c
   140005a37:	cmp    rcx,0xffffffffffffffff
   140005a3b:	ja     0x140005a47
   140005a3d:	call   0x140004950
   140005a42:	test   rax,rax
   140005a45:	jne    0x140005a4c
   140005a47:	call   0x140004380
   140005a4c:	mov    QWORD PTR [rbp+0x78],rax
   140005a50:	lea    rax,[rip+0xffffffffffffe857]        # 0x1400042ae
   140005a57:	add    rsp,0x20
   140005a5b:	pop    rbp
   140005a5c:	ret    
   140005a5d:	int3   
   140005a5e:	mov    QWORD PTR [rsp+0x10],rdx
   140005a63:	push   rbp
   140005a64:	sub    rsp,0x20
   140005a68:	mov    rbp,rdx
   140005a6b:	xor    r8d,r8d
   140005a6e:	mov    dl,0x1
   140005a70:	mov    rcx,QWORD PTR [rbp+0x60]
   140005a74:	call   0x140004320
   140005a79:	xor    edx,edx
   140005a7b:	xor    ecx,ecx
   140005a7d:	call   0x14000514c
   140005a82:	nop
   140005a83:	int3   
   140005a84:	int3   
   140005a85:	int3   
   140005a86:	int3   
   140005a87:	int3   
   140005a88:	int3   
   140005a89:	rex push rbp
   140005a8b:	sub    rsp,0x20
   140005a8f:	mov    rbp,rdx
   140005a92:	mov    rax,QWORD PTR [rcx]
   140005a95:	mov    rdx,rcx
   140005a98:	mov    ecx,DWORD PTR [rax]
   140005a9a:	call   0x1400051de
   140005a9f:	nop
   140005aa0:	add    rsp,0x20
   140005aa4:	pop    rbp
   140005aa5:	ret    
   140005aa6:	int3   
   140005aa7:	int3   
   140005aa8:	int3   
   140005aa9:	int3   
   140005aaa:	int3   
   140005aab:	int3   
   140005aac:	int3   
   140005aad:	rex push rbp
   140005aaf:	sub    rsp,0x20
   140005ab3:	mov    rbp,rdx
   140005ab6:	mov    ecx,0x8
   140005abb:	call   0x14000548e
   140005ac0:	nop
   140005ac1:	add    rsp,0x20
   140005ac5:	pop    rbp
   140005ac6:	ret    
   140005ac7:	int3   
   140005ac8:	int3   
   140005ac9:	int3   
   140005aca:	int3   
   140005acb:	int3   
   140005acc:	int3   
   140005acd:	int3   
   140005ace:	mov    QWORD PTR [rsp+0x10],rdx
   140005ad3:	push   rbp
   140005ad4:	sub    rsp,0x20
   140005ad8:	mov    rbp,rdx
   140005adb:	and    QWORD PTR [rbp+0x50],0x0
   140005ae0:	lea    rax,[rip+0xfffffffffffff612]        # 0x1400050f9
   140005ae7:	add    rsp,0x20
   140005aeb:	pop    rbp
   140005aec:	ret    
   140005aed:	int3   
   140005aee:	int3   
   140005aef:	int3   
   140005af0:	int3   
   140005af1:	int3   
   140005af2:	int3   
   140005af3:	int3   
   140005af4:	int3   
   140005af5:	int3   
   140005af6:	int3   
   140005af7:	int3   
   140005af8:	int3   
   140005af9:	int3   
   140005afa:	int3   
   140005afb:	int3   
   140005afc:	int3   
   140005afd:	int3   
   140005afe:	int3   
   140005aff:	int3   
   140005b00:	rex push rbp
   140005b02:	sub    rsp,0x20
   140005b06:	mov    rbp,rdx
   140005b09:	mov    rax,QWORD PTR [rcx]
   140005b0c:	xor    ecx,ecx
   140005b0e:	cmp    DWORD PTR [rax],0xc0000005
   140005b14:	sete   cl
   140005b17:	mov    eax,ecx
   140005b19:	add    rsp,0x20
   140005b1d:	pop    rbp
   140005b1e:	ret    
   140005b1f:	int3   
   140005b20:	int3   
   140005b21:	int3   
   140005b22:	int3   
   140005b23:	int3   
   140005b24:	int3   
   140005b25:	int3   
   140005b26:	int3   
   140005b27:	int3   
   140005b28:	int3   
   140005b29:	int3   
   140005b2a:	int3   
   140005b2b:	int3   
   140005b2c:	int3   
   140005b2d:	int3   
   140005b2e:	int3   
   140005b2f:	int3   
   140005b30:	lea    rax,[rip+0x63a1]        # 0x14000bed8
   140005b37:	mov    QWORD PTR [rip+0xc4c2],rax        # 0x140012000
   140005b3e:	ret    
   140005b3f:	int3   
   140005b40:	int3   
   140005b41:	int3   
   140005b42:	int3   
   140005b43:	int3   
   140005b44:	int3   
   140005b45:	int3   
   140005b46:	int3   
   140005b47:	int3   
   140005b48:	int3   
   140005b49:	int3   
   140005b4a:	int3   
   140005b4b:	int3   
   140005b4c:	int3   
   140005b4d:	int3   
   140005b4e:	int3   
   140005b4f:	int3   
   140005b50:	lea    rax,[rip+0x6381]        # 0x14000bed8
   140005b57:	mov    QWORD PTR [rip+0xc4aa],rax        # 0x140012008
   140005b5e:	ret    
   140005b5f:	int3   
   140005b60:	int3   
   140005b61:	int3   
   140005b62:	int3   
   140005b63:	int3   
   140005b64:	int3   
   140005b65:	int3   
   140005b66:	int3   
   140005b67:	int3   
   140005b68:	int3   
   140005b69:	int3   
   140005b6a:	int3   
   140005b6b:	int3   
   140005b6c:	int3   
   140005b6d:	int3   
   140005b6e:	int3   
   140005b6f:	int3   
   140005b70:	lea    rax,[rip+0x6361]        # 0x14000bed8
   140005b77:	mov    QWORD PTR [rip+0xc492],rax        # 0x140012010
   140005b7e:	ret    
   140005b7f:	int3   
   140005b80:	jmp    0x140003f84
   140005b85:	int3   
   140005b86:	int3   
   140005b87:	int3   
   140005b88:	int3   
   140005b89:	int3   
   140005b8a:	int3   
   140005b8b:	int3   
   140005b8c:	int3   
   140005b8d:	int3   
   140005b8e:	int3   
   140005b8f:	int3   
   140005b90:	jmp    0x140003fd0
   140005b95:	int3   
   140005b96:	int3   
   140005b97:	int3   
   140005b98:	int3   
   140005b99:	int3   
   140005b9a:	int3   
   140005b9b:	int3   
   140005b9c:	int3   
   140005b9d:	int3   
   140005b9e:	int3   
   140005b9f:	int3   
   140005ba0:	jmp    0x140004014
   140005ba5:	int3   
   140005ba6:	movabs rdx,0x400000000000
   140005bb0:	mov    rcx,r10
   140005bb3:	call   0x140003070
   140005bb8:	test   al,al
   140005bba:	je     0x140005bf2
   140005bbc:	lea    rax,[rbp-0x39]
   140005bc0:	mov    QWORD PTR [rbp+0x3f],0x4
   140005bc8:	mov    QWORD PTR [rbp+0x37],rax
   140005bcc:	lea    rax,[rbp+0x17]
   140005bd0:	xor    r9d,r9d
   140005bd3:	mov    QWORD PTR [rsp+0x28],rax
   140005bd8:	lea    rdx,[rip+0x7fa7]        # 0x14000db86
   140005bdf:	xor    r8d,r8d
   140005be2:	mov    DWORD PTR [rsp+0x20],0x3
   140005bea:	mov    rcx,r10
   140005bed:	call   0x140002fc0
   140005bf2:	xor    eax,eax
   140005bf4:	mov    rcx,QWORD PTR [rbp+0x47]
   140005bf8:	xor    rcx,rsp
   140005bfb:	call   0x140004dd0
   140005c00:	lea    r11,[rsp+0xc0]
   140005c08:	mov    rbx,QWORD PTR [r11+0x10]
   140005c0c:	mov    rdi,QWORD PTR [r11+0x18]
   140005c10:	mov    rsp,r11
   140005c13:	pop    rbp
   140005c14:	ret    
   140005c15:	int3   
   140005c16:	mov    rcx,QWORD PTR [rbp+0x528]
   140005c1d:	mov    r9d,eax
   140005c20:	lea    r8,[rip+0x78e1]        # 0x14000d508
   140005c27:	mov    edx,0x14e
   140005c2c:	call   0x140009210
   140005c31:	jmp    0x140005ff7
   140005c36:	mov    rcx,QWORD PTR [rbp+0x528]
   140005c3d:	mov    r9d,eax
   140005c40:	lea    r8,[rip+0x78c1]        # 0x14000d508
   140005c47:	mov    edx,0x166
   140005c4c:	call   0x140009210
   140005c51:	mov    r14d,ebx
   140005c54:	jmp    0x140005fe9
   140005c59:	mov    rcx,QWORD PTR [rbp+0x528]
   140005c60:	mov    r9d,eax
   140005c63:	lea    r8,[rip+0x789e]        # 0x14000d508
   140005c6a:	mov    edx,0x169
   140005c6f:	call   0x140009210
   140005c74:	mov    r14d,ebx
   140005c77:	jmp    0x140005fe9
   140005c7c:	lea    rcx,[rsp+0x60]
   140005c81:	call   0x140007588
   140005c86:	nop
   140005c87:	lea    rcx,[rsp+0x68]
   140005c8c:	call   0x1400073f8
   140005c91:	mov    r14d,0x8007000e
   140005c97:	jmp    0x140005ceb
   140005c99:	mov    QWORD PTR [rdi+0x10],r12
   140005c9d:	mov    rax,QWORD PTR [rsi]
   140005ca0:	mov    rbx,QWORD PTR [rax+0x10]
   140005ca4:	mov    rcx,rbx
   140005ca7:	call   QWORD PTR [rip+0x5723]        # 0x14000b3d0
   140005cad:	mov    rcx,rsi
   140005cb0:	call   rbx
   140005cb2:	nop
   140005cb3:	jmp    0x140001404
   140005cb8:	mov    rax,QWORD PTR [rsi]
   140005cbb:	mov    rbx,QWORD PTR [rax+0x8]
   140005cbf:	mov    rcx,rbx
   140005cc2:	call   QWORD PTR [rip+0x5708]        # 0x14000b3d0
   140005cc8:	mov    rcx,rsi
   140005ccb:	call   rbx
   140005ccd:	nop
   140005cce:	jmp    0x140001480
   140005cd3:	lea    rcx,[rsp+0x60]
   140005cd8:	call   0x140007588
   140005cdd:	nop
   140005cde:	lea    rcx,[rsp+0x68]
   140005ce3:	call   0x1400073f8
   140005ce8:	mov    r14d,ebx
   140005ceb:	mov    rcx,QWORD PTR [rbp+0x528]
   140005cf2:	mov    r9d,r14d
   140005cf5:	lea    r8,[rip+0x780c]        # 0x14000d508
   140005cfc:	mov    edx,0x16e
   140005d01:	call   0x140009210
   140005d06:	jmp    0x140005fdf
   140005d0b:	mov    rcx,rbx
   140005d0e:	call   QWORD PTR [rip+0x56bc]        # 0x14000b3d0
   140005d14:	mov    rcx,rdi
   140005d17:	call   rbx
   140005d19:	nop
   140005d1a:	jmp    0x1400014ec
   140005d1f:	mov    rcx,rbx
   140005d22:	call   QWORD PTR [rip+0x56a8]        # 0x14000b3d0
   140005d28:	mov    rcx,rdi
   140005d2b:	call   rbx
   140005d2d:	nop
   140005d2e:	jmp    0x140001514
   140005d33:	mov    rcx,QWORD PTR [rbp+0x528]
   140005d3a:	mov    r9d,eax
   140005d3d:	lea    r8,[rip+0x77c4]        # 0x14000d508
   140005d44:	mov    edx,0x178
   140005d49:	call   0x140009210
   140005d4e:	mov    r14d,ebx
   140005d51:	jmp    0x140005fd4
   140005d56:	mov    r15,r12
   140005d59:	jmp    0x140001553
   140005d5e:	mov    rcx,QWORD PTR [rbp+0x528]
   140005d65:	mov    r9d,eax
   140005d68:	lea    r8,[rip+0x7799]        # 0x14000d508
   140005d6f:	mov    edx,0x17a
   140005d74:	call   0x140009210
   140005d79:	mov    r14d,ebx
   140005d7c:	jmp    0x140005fd4
   140005d81:	mov    edx,0x26
   140005d86:	jmp    0x140005d8d
   140005d88:	mov    edx,0x28
   140005d8d:	mov    r9d,eax
   140005d90:	lea    r8,[rip+0x7771]        # 0x14000d508
   140005d97:	mov    rcx,QWORD PTR [rbp+0x528]
   140005d9e:	call   0x140009210
   140005da3:	nop
   140005da4:	lea    rcx,[rsp+0x38]
   140005da9:	call   0x1400073f8
   140005dae:	test   ebx,ebx
   140005db0:	jns    0x140001654
   140005db6:	jmp    0x140005f9e
   140005dbb:	mov    r9d,eax
   140005dbe:	mov    edx,0x183
   140005dc3:	jmp    0x140005fa6
   140005dc8:	mov    rcx,QWORD PTR [rbp+0x528]
   140005dcf:	mov    r9d,eax
   140005dd2:	lea    r8,[rip+0x772f]        # 0x14000d508
   140005dd9:	mov    edx,0x189
   140005dde:	call   0x140009210
   140005de3:	mov    r14d,ebx
   140005de6:	jmp    0x140005f70
   140005deb:	mov    rcx,QWORD PTR [rbp+0x528]
   140005df2:	lea    r8,[rip+0x770f]        # 0x14000d508
   140005df9:	mov    edx,0x18d
   140005dfe:	call   0x1400091f0
   140005e03:	mov    r14d,eax
   140005e06:	jmp    0x140005f65
   140005e0b:	or     eax,0x1
   140005e0e:	mov    DWORD PTR [rip+0xcb8c],eax        # 0x1400129a0
   140005e14:	lea    rcx,[rip+0xfffffffffffffd85]        # 0x140005ba0
   140005e1b:	call   0x140004e98
   140005e20:	nop
   140005e21:	jmp    0x1400016fe
   140005e26:	lea    r15,[rip+0xcb5b]        # 0x140012988
   140005e2d:	mov    QWORD PTR [rbp-0x80],r15
   140005e31:	lea    rax,[rip+0x57b8]        # 0x14000b5f0
   140005e38:	mov    QWORD PTR [rip+0xcb49],rax        # 0x140012988
   140005e3f:	call   0x140007dc8
   140005e44:	mov    rdx,QWORD PTR [rax+0x8]
   140005e48:	mov    QWORD PTR [rip+0xcb41],rdx        # 0x140012990
   140005e4f:	mov    BYTE PTR [rip+0xcb42],0x0        # 0x140012998
   140005e56:	mov    DWORD PTR [rip+0xcb3f],r14d        # 0x14001299c
   140005e5d:	mov    rax,QWORD PTR [rip+0xcb24]        # 0x140012988
   140005e64:	mov    rdi,QWORD PTR [rax+0x8]
   140005e68:	mov    rcx,rdi
   140005e6b:	call   QWORD PTR [rip+0x555f]        # 0x14000b3d0
   140005e71:	mov    rcx,r15
   140005e74:	call   rdi
   140005e76:	mov    r8,r15
   140005e79:	xor    edx,edx
   140005e7b:	lea    rcx,[rip+0xcafe]        # 0x140012980
   140005e82:	call   QWORD PTR [rip+0x5320]        # 0x14000b1a8
   140005e88:	nop
   140005e89:	jmp    0x140001721
   140005e8e:	mov    rcx,QWORD PTR [rbp+0x528]
   140005e95:	mov    r9d,eax
   140005e98:	lea    r8,[rip+0x7669]        # 0x14000d508
   140005e9f:	mov    edx,0x199
   140005ea4:	call   0x140009210
   140005ea9:	jmp    0x140005f58
   140005eae:	mov    rax,QWORD PTR [rsi]
   140005eb1:	mov    rbx,QWORD PTR [rax+0x20]
   140005eb5:	mov    rcx,rbx
   140005eb8:	call   QWORD PTR [rip+0x5512]        # 0x14000b3d0
   140005ebe:	mov    rcx,rsi
   140005ec1:	call   rbx
   140005ec3:	mov    r14d,eax
   140005ec6:	test   eax,eax
   140005ec8:	jns    0x140005ee7
   140005eca:	mov    rcx,QWORD PTR [rbp+0x528]
   140005ed1:	mov    r9d,eax
   140005ed4:	lea    r8,[rip+0x762d]        # 0x14000d508
   140005edb:	mov    edx,0x19c
   140005ee0:	call   0x140009210
   140005ee5:	jmp    0x140005f58
   140005ee7:	mov    rbx,QWORD PTR [rsp+0x40]
   140005eec:	mov    rax,QWORD PTR [rbx]
   140005eef:	mov    rdi,QWORD PTR [rax+0x30]
   140005ef3:	mov    rcx,rdi
   140005ef6:	call   QWORD PTR [rip+0x54d4]        # 0x14000b3d0
   140005efc:	mov    rcx,rbx
   140005eff:	call   rdi
   140005f01:	mov    r14d,eax
   140005f04:	test   eax,eax
   140005f06:	jns    0x140005f25
   140005f08:	mov    rcx,QWORD PTR [rbp+0x528]
   140005f0f:	mov    r9d,eax
   140005f12:	lea    r8,[rip+0x75ef]        # 0x14000d508
   140005f19:	mov    edx,0x19e
   140005f1e:	call   0x140009210
   140005f23:	jmp    0x140005f58
   140005f25:	mov    rcx,QWORD PTR [rip+0xc99c]        # 0x1400128c8
   140005f2c:	call   QWORD PTR [rip+0x524e]        # 0x14000b180
   140005f32:	mov    ecx,DWORD PTR [rip+0xc988]        # 0x1400128c0
   140005f38:	test   ecx,ecx
   140005f3a:	je     0x140005f49
   140005f3c:	call   QWORD PTR [rip+0x511e]        # 0x14000b060
   140005f42:	mov    DWORD PTR [rip+0xc977],r12d        # 0x1400128c0
   140005f49:	lea    rcx,[rbp+0x100]
   140005f50:	call   0x140002890
   140005f55:	mov    r14d,r12d
   140005f58:	lea    rcx,[rbp+0x100]
   140005f5f:	call   0x140009bf0
   140005f64:	nop
   140005f65:	lea    rcx,[rsp+0x70]
   140005f6a:	call   0x140007478
   140005f6f:	nop
   140005f70:	lea    rcx,[rbp+0x380]
   140005f77:	call   0x140009c1c
   140005f7c:	jmp    0x140005fbc
   140005f7e:	mov    rcx,QWORD PTR [rbp+0x528]
   140005f85:	mov    ebx,0x80070057
   140005f8a:	mov    r9d,ebx
   140005f8d:	lea    r8,[rip+0x7574]        # 0x14000d508
   140005f94:	mov    edx,0x1c
   140005f99:	call   0x140009210
   140005f9e:	mov    r9d,ebx
   140005fa1:	mov    edx,0x182
   140005fa6:	lea    r8,[rip+0x755b]        # 0x14000d508
   140005fad:	mov    rcx,QWORD PTR [rbp+0x528]
   140005fb4:	call   0x140009210
   140005fb9:	mov    r14d,ebx
   140005fbc:	lea    rcx,[rsp+0x48]
   140005fc1:	call   0x1400073f8
   140005fc6:	nop
   140005fc7:	lea    rcx,[rbp+0x240]
   140005fce:	call   0x140009c74
   140005fd3:	nop
   140005fd4:	lea    rcx,[rsp+0x40]
   140005fd9:	call   0x1400073f8
   140005fde:	nop
   140005fdf:	lea    rcx,[rbp-0x78]
   140005fe3:	call   0x1400073f8
   140005fe8:	nop
   140005fe9:	cmp    BYTE PTR [rsp+0x31],0x0
   140005fee:	je     0x140005ff7
   140005ff0:	call   QWORD PTR [rip+0x5032]        # 0x14000b028
   140005ff6:	nop
   140005ff7:	lea    rcx,[rbp-0x40]
   140005ffb:	call   0x140009c48
   140006000:	mov    eax,r14d
   140006003:	mov    rcx,QWORD PTR [rbp+0x500]
   14000600a:	xor    rcx,rsp
   14000600d:	call   0x140004dd0
   140006012:	lea    r11,[rsp+0x610]
   14000601a:	mov    rbx,QWORD PTR [r11+0x20]
   14000601e:	mov    rsi,QWORD PTR [r11+0x28]
   140006022:	mov    rdi,QWORD PTR [r11+0x30]
   140006026:	mov    r12,QWORD PTR [r11+0x38]
   14000602a:	mov    rsp,r11
   14000602d:	pop    r15
   14000602f:	pop    r14
   140006031:	pop    rbp
   140006032:	ret    
   140006033:	int3   
   140006034:	mov    rcx,QWORD PTR [rsp+0x28]
   140006039:	lea    r8,[rip+0x8408]        # 0x14000e448
   140006040:	mov    r9d,0x80004003
   140006046:	mov    edx,0x99
   14000604b:	call   0x140009210
   140006050:	mov    eax,0x80004003
   140006055:	jmp    0x1400018fb
   14000605a:	mov    eax,0x80040110
   14000605f:	jmp    0x1400018fb
   140006064:	mov    rcx,QWORD PTR [rsp+0x28]
   140006069:	lea    r8,[rip+0x83d8]        # 0x14000e448
   140006070:	mov    edi,0x8007000e
   140006075:	mov    edx,0xa2
   14000607a:	mov    r9d,edi
   14000607d:	call   0x140009210
   140006082:	nop
   140006083:	jmp    0x1400018cb
   140006088:	mov    rcx,rsi
   14000608b:	call   QWORD PTR [rip+0x533f]        # 0x14000b3d0
   140006091:	mov    r8,rdi
   140006094:	mov    rdx,rbp
   140006097:	mov    rcx,rbx
   14000609a:	call   rsi
   14000609c:	nop
   14000609d:	jmp    0x1400018bf
   1400060a2:	mov    rcx,QWORD PTR [rsp+0x28]
   1400060a7:	lea    r8,[rip+0x839a]        # 0x14000e448
   1400060ae:	mov    r9d,edi
   1400060b1:	mov    edx,0xa4
   1400060b6:	call   0x140009210
   1400060bb:	nop
   1400060bc:	jmp    0x1400018cb
   1400060c1:	mov    rcx,rsi
   1400060c4:	call   QWORD PTR [rip+0x5306]        # 0x14000b3d0
   1400060ca:	mov    rcx,rbx
   1400060cd:	call   rsi
   1400060cf:	nop
   1400060d0:	jmp    0x1400018ef
   1400060d5:	int3   
   1400060d6:	mov    QWORD PTR [rdi+0x10],r12
   1400060da:	mov    rax,QWORD PTR [r15]
   1400060dd:	mov    rbx,QWORD PTR [rax+0x10]
   1400060e1:	mov    rcx,rbx
   1400060e4:	call   QWORD PTR [rip+0x52e6]        # 0x14000b3d0
   1400060ea:	mov    rcx,r15
   1400060ed:	call   rbx
   1400060ef:	nop
   1400060f0:	jmp    0x140001984
   1400060f5:	mov    rax,QWORD PTR [r14]
   1400060f8:	mov    rbx,QWORD PTR [rax+0x8]
   1400060fc:	mov    rcx,rbx
   1400060ff:	call   QWORD PTR [rip+0x52cb]        # 0x14000b3d0
   140006105:	mov    rcx,r14
   140006108:	call   rbx
   14000610a:	nop
   14000610b:	jmp    0x140001a66
   140006110:	mov    rax,QWORD PTR [r14]
   140006113:	mov    rbx,QWORD PTR [rax+0x10]
   140006117:	mov    rcx,rbx
   14000611a:	call   QWORD PTR [rip+0x52b0]        # 0x14000b3d0
   140006120:	mov    rcx,r14
   140006123:	call   rbx
   140006125:	nop
   140006126:	jmp    0x140001ab3
   14000612b:	int3   
   14000612c:	add    rcx,0x8
   140006130:	call   QWORD PTR [rip+0x505a]        # 0x14000b190
   140006136:	nop
   140006137:	mov    rax,QWORD PTR [rdi+0x18]
   14000613b:	xor    ebp,ebp
   14000613d:	mov    QWORD PTR [rdi+0x18],rbp
   140006141:	mov    QWORD PTR [rsp+0x58],rax
   140006146:	mov    esi,DWORD PTR [rdi+0x10]
   140006149:	mov    DWORD PTR [rdi+0x10],ebp
   14000614c:	lea    rcx,[rdi+0x8]
   140006150:	call   QWORD PTR [rip+0x505a]        # 0x14000b1b0
   140006156:	test   esi,esi
   140006158:	je     0x140006163
   14000615a:	mov    ecx,esi
   14000615c:	call   0x140009244
   140006161:	jmp    0x14000616e
   140006163:	lea    rcx,[rsp+0x58]
   140006168:	call   0x1400073f8
   14000616d:	nop
   14000616e:	lea    rcx,[rsp+0x58]
   140006173:	call   0x1400073f8
   140006178:	nop
   140006179:	jmp    0x140001c1c
   14000617e:	xor    r14b,r14b
   140006181:	jmp    0x140001b4f
   140006186:	mov    rcx,r15
   140006189:	call   QWORD PTR [rip+0x5241]        # 0x14000b3d0
   14000618f:	mov    rcx,rbx
   140006192:	call   r15
   140006195:	nop
   140006196:	jmp    0x140001b78
   14000619b:	xor    r15b,r15b
   14000619e:	jmp    0x140001bad
   1400061a3:	mov    DWORD PTR [rsp+0x58],ebp
   1400061a7:	lea    r8,[rsp+0x58]
   1400061ac:	mov    rcx,rsi
   1400061af:	call   0x140008ef4
   1400061b4:	mov    esi,eax
   1400061b6:	test   eax,eax
   1400061b8:	js     0x140001c1e
   1400061be:	lea    rcx,[rdi+0x8]
   1400061c2:	call   QWORD PTR [rip+0x4fc8]        # 0x14000b190
   1400061c8:	mov    ebp,DWORD PTR [rdi+0x10]
   1400061cb:	mov    edx,DWORD PTR [rsp+0x58]
   1400061cf:	mov    DWORD PTR [rdi+0x10],edx
   1400061d2:	lea    rcx,[rdi+0x8]
   1400061d6:	call   QWORD PTR [rip+0x4fd4]        # 0x14000b1b0
   1400061dc:	test   ebp,ebp
   1400061de:	je     0x1400061e7
   1400061e0:	mov    ecx,ebp
   1400061e2:	call   0x140009244
   1400061e7:	mov    eax,esi
   1400061e9:	jmp    0x140001c1e
   1400061ee:	mov    rax,QWORD PTR [rbx]
   1400061f1:	mov    rdi,QWORD PTR [rax+0x10]
   1400061f5:	mov    rcx,rdi
   1400061f8:	call   QWORD PTR [rip+0x51d2]        # 0x14000b3d0
   1400061fe:	mov    rcx,rbx
   140006201:	call   rdi
   140006203:	nop
   140006204:	jmp    0x140001c13
   140006209:	int3   
   14000620a:	mov    QWORD PTR [rsp+0x30],rsi
   14000620f:	mov    QWORD PTR [rsp+0x38],rdi
   140006214:	test   rcx,rcx
   140006217:	je     0x140006238
   140006219:	mov    rax,QWORD PTR [rcx+0x38]
   14000621d:	lea    rsi,[rcx+0x38]
   140006221:	mov    rdi,QWORD PTR [rax+0x40]
   140006225:	mov    rcx,rdi
   140006228:	call   QWORD PTR [rip+0x51a2]        # 0x14000b3d0
   14000622e:	mov    edx,0x1
   140006233:	mov    rcx,rsi
   140006236:	call   rdi
   140006238:	mov    rsi,QWORD PTR [rip+0xc7e1]        # 0x140012a20
   14000623f:	test   rsi,rsi
   140006242:	je     0x140006259
   140006244:	mov    rax,QWORD PTR [rsi]
   140006247:	mov    rdi,QWORD PTR [rax+0x10]
   14000624b:	mov    rcx,rdi
   14000624e:	call   QWORD PTR [rip+0x517c]        # 0x14000b3d0
   140006254:	mov    rcx,rsi
   140006257:	call   rdi
   140006259:	mov    rsi,QWORD PTR [rsp+0x30]
   14000625e:	mov    eax,ebx
   140006260:	mov    rdi,QWORD PTR [rsp+0x38]
   140006265:	jmp    0x140001c59
   14000626a:	mov    rcx,rsi
   14000626d:	call   QWORD PTR [rip+0x515d]        # 0x14000b3d0
   140006273:	mov    rcx,rdi
   140006276:	call   rsi
   140006278:	nop
   140006279:	jmp    0x140001d3c
   14000627e:	mov    QWORD PTR [r8],rdi
   140006281:	jmp    0x140001d10
   140006286:	lea    rdx,[rip+0x726b]        # 0x14000d4f8
   14000628d:	call   0x140001f60
   140006292:	test   eax,eax
   140006294:	je     0x1400062a2
   140006296:	lea    rax,[r10+0x8]
   14000629a:	mov    QWORD PTR [r8],rax
   14000629d:	jmp    0x140001d10
   1400062a2:	mov    ebx,0x80004002
   1400062a7:	jmp    0x140001d10
   1400062ac:	mov    QWORD PTR [rsp+0x30],rdi
   1400062b1:	test   rcx,rcx
   1400062b4:	je     0x1400062d0
   1400062b6:	mov    rax,QWORD PTR [rcx]
   1400062b9:	mov    rdi,QWORD PTR [rax+0x48]
   1400062bd:	mov    rcx,rdi
   1400062c0:	call   QWORD PTR [rip+0x510a]        # 0x14000b3d0
   1400062c6:	mov    edx,0x1
   1400062cb:	mov    rcx,rsi
   1400062ce:	call   rdi
   1400062d0:	mov    rsi,QWORD PTR [rip+0xc749]        # 0x140012a20
   1400062d7:	test   rsi,rsi
   1400062da:	je     0x1400062f1
   1400062dc:	mov    rax,QWORD PTR [rsi]
   1400062df:	mov    rdi,QWORD PTR [rax+0x10]
   1400062e3:	mov    rcx,rdi
   1400062e6:	call   QWORD PTR [rip+0x50e4]        # 0x14000b3d0
   1400062ec:	mov    rcx,rsi
   1400062ef:	call   rdi
   1400062f1:	mov    rdi,QWORD PTR [rsp+0x30]
   1400062f6:	mov    eax,ebx
   1400062f8:	jmp    0x140001e10
   1400062fd:	int3   
   1400062fe:	lea    rax,[rsi+0x8]
   140006302:	mov    QWORD PTR [r8],rax
   140006305:	jmp    0x140001eaf
   14000630a:	mov    QWORD PTR [r8],rsi
   14000630d:	mov    rax,QWORD PTR [rsi]
   140006310:	mov    rdi,QWORD PTR [rax+0x8]
   140006314:	mov    rcx,rdi
   140006317:	call   QWORD PTR [rip+0x50b3]        # 0x14000b3d0
   14000631d:	mov    rcx,rsi
   140006320:	call   rdi
   140006322:	nop
   140006323:	jmp    0x140001eb3
   140006328:	mov    rax,QWORD PTR [rsi+0x30]
   14000632c:	cmp    rax,rdi
   14000632f:	ja     0x140001fe6
   140006335:	mov    r14,rdi
   140006338:	sub    r14,rax
   14000633b:	cmp    rcx,QWORD PTR [rsi+0x40]
   14000633f:	jne    0x14000634a
   140006341:	lea    rcx,[rsi+0x30]
   140006345:	call   0x1400074a4
   14000634a:	and    r14,0xfffffffffffffff0
   14000634e:	add    r14,QWORD PTR [rsi+0x30]
   140006352:	mov    rax,QWORD PTR [rsi+0x38]
   140006356:	test   rax,rax
   140006359:	je     0x14000205c
   14000635f:	movups xmm0,XMMWORD PTR [r14]
   140006363:	jmp    0x140002059
   140006368:	lea    rcx,[rip+0x8161]        # 0x14000e4d0
   14000636f:	call   0x1400043c0
   140006374:	xor    edx,edx
   140006376:	jmp    0x14000203d
   14000637b:	int3   
   14000637c:	int3   
   14000637d:	int3   
   14000637e:	mov    rcx,QWORD PTR [rsp+0x28]
   140006383:	lea    r8,[rip+0x810e]        # 0x14000e498
   14000638a:	mov    r9d,0x8000000b
   140006390:	mov    edx,0x5a
   140006395:	call   0x140009210
   14000639a:	mov    eax,0x8000000b
   14000639f:	jmp    0x1400020cb
   1400063a4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400063a9:	lea    r8,[rip+0x80e8]        # 0x14000e498
   1400063b0:	mov    r9d,0x8000000b
   1400063b6:	mov    edx,0x4b
   1400063bb:	call   0x140009210
   1400063c0:	mov    eax,0x8000000b
   1400063c5:	jmp    0x14000211c
   1400063ca:	xor    eax,eax
   1400063cc:	mov    QWORD PTR [rdi+0x8],rax
   1400063d0:	jmp    0x140002331
   1400063d5:	call   QWORD PTR [rip+0x4dd5]        # 0x14000b1b0
   1400063db:	nop
   1400063dc:	jmp    0x140002345
   1400063e1:	int3   
   1400063e2:	xor    eax,eax
   1400063e4:	mov    QWORD PTR [rdi+0x8],rax
   1400063e8:	jmp    0x140002501
   1400063ed:	call   QWORD PTR [rip+0x4dbd]        # 0x14000b1b0
   1400063f3:	nop
   1400063f4:	jmp    0x140002515
   1400063f9:	int3   
   1400063fa:	xor    eax,eax
   1400063fc:	mov    QWORD PTR [rdi+0x8],rax
   140006400:	jmp    0x1400026d1
   140006405:	call   QWORD PTR [rip+0x4da5]        # 0x14000b1b0
   14000640b:	nop
   14000640c:	jmp    0x1400026e5
   140006411:	int3   
   140006412:	mov    rcx,rdi
   140006415:	call   QWORD PTR [rip+0x4fb5]        # 0x14000b3d0
   14000641b:	mov    rcx,rbx
   14000641e:	call   rdi
   140006420:	nop
   140006421:	jmp    0x1400027f0
   140006426:	mov    rax,QWORD PTR [rcx+0x138]
   14000642d:	mov    ebx,0x1
   140006432:	mov    rcx,rsi
   140006435:	test   rax,rax
   140006438:	je     0x14000643e
   14000643a:	lea    rcx,[rax+0x8]
   14000643e:	lea    rdx,[rsp+0x38]
   140006443:	call   0x140009e18
   140006448:	mov    rcx,rax
   14000644b:	jmp    0x140002842
   140006450:	mov    rcx,QWORD PTR [rsp+0x38]
   140006455:	test   rcx,rcx
   140006458:	je     0x140002866
   14000645e:	call   QWORD PTR [rip+0x4d4c]        # 0x14000b1b0
   140006464:	nop
   140006465:	jmp    0x140002866
   14000646a:	mov    ecx,0x7
   14000646f:	int    0x29
   140006471:	jmp    0x1400028d1
   140006476:	mov    rax,QWORD PTR [rbx+0x30]
   14000647a:	mov    rdi,QWORD PTR [rax+0x28]
   14000647e:	cmp    DWORD PTR [rdi],0x5
   140006481:	jbe    0x140002901
   140006487:	lea    rax,[rsp+0x38]
   14000648c:	mov    DWORD PTR [rsp+0x38],esi
   140006490:	mov    QWORD PTR [rsp+0x60],rax
   140006495:	mov    QWORD PTR [rsp+0x68],0x4
   14000649e:	call   QWORD PTR [rip+0x4c7c]        # 0x14000b120
   1400064a4:	mov    DWORD PTR [rsp+0x30],eax
   1400064a8:	lea    rax,[rsp+0x30]
   1400064ad:	mov    QWORD PTR [rsp+0x70],rax
   1400064b2:	mov    QWORD PTR [rsp+0x78],0x4
   1400064bb:	mov    r8,QWORD PTR [rbx+0x30]
   1400064bf:	lea    rax,[rsp+0x40]
   1400064c4:	mov    QWORD PTR [rsp+0x28],rax
   1400064c9:	lea    rdx,[rip+0x7ae3]        # 0x14000dfb3
   1400064d0:	add    r8,0x8
   1400064d4:	mov    DWORD PTR [rsp+0x20],0x4
   1400064dc:	xor    r9d,r9d
   1400064df:	mov    rcx,rdi
   1400064e2:	call   0x140002fc0
   1400064e7:	nop
   1400064e8:	jmp    0x140002901
   1400064ed:	lea    rcx,[rbx+0x8]
   1400064f1:	call   0x140007190
   1400064f6:	nop
   1400064f7:	jmp    0x14000290a
   1400064fc:	cmp    ecx,DWORD PTR [rax+0x5c]
   1400064ff:	jne    0x140002993
   140006505:	lea    rdi,[rax+0x58]
   140006509:	test   rdi,rdi
   14000650c:	je     0x140002993
   140006512:	mov    rcx,rbx
   140006515:	call   0x140007210
   14000651a:	mov    rax,QWORD PTR [rbx+0x30]
   14000651e:	mov    r10,QWORD PTR [rax+0x28]
   140006522:	cmp    DWORD PTR [r10],0x5
   140006526:	jbe    0x140002ab6
   14000652c:	movabs rdx,0x400000000000
   140006536:	mov    rcx,r10
   140006539:	call   0x140003070
   14000653e:	test   al,al
   140006540:	je     0x140002ab6
   140006546:	mov    eax,DWORD PTR [rdi+0x4]
   140006549:	lea    rcx,[rbp-0x20]
   14000654d:	mov    rdx,QWORD PTR [rdi+0x30]
   140006551:	mov    DWORD PTR [rsp+0x34],eax
   140006555:	lea    rax,[rsp+0x34]
   14000655a:	mov    QWORD PTR [rbp-0x30],rax
   14000655e:	mov    QWORD PTR [rbp-0x28],0x4
   140006566:	call   0x140008a98
   14000656b:	mov    rdx,QWORD PTR [rdi+0x78]
   14000656f:	lea    rcx,[rdi+0x38]
   140006573:	mov    QWORD PTR [rbp-0x10],rcx
   140006577:	lea    rcx,[rbp+0x0]
   14000657b:	mov    QWORD PTR [rbp-0x8],0x4
   140006583:	call   0x140008a98
   140006588:	mov    ecx,DWORD PTR [rdi]
   14000658a:	lea    rax,[rsp+0x40]
   14000658f:	mov    rdx,QWORD PTR [rdi+0x10]
   140006593:	mov    DWORD PTR [rsp+0x40],ecx
   140006597:	lea    rcx,[rbp+0x20]
   14000659b:	mov    QWORD PTR [rbp+0x10],rax
   14000659f:	mov    QWORD PTR [rbp+0x18],0x4
   1400065a7:	call   0x140008acc
   1400065ac:	mov    ecx,DWORD PTR [rdi+0x18]
   1400065af:	lea    rax,[rsp+0x3c]
   1400065b4:	mov    rdx,QWORD PTR [rdi+0x40]
   1400065b8:	mov    DWORD PTR [rsp+0x3c],ecx
   1400065bc:	lea    rcx,[rbp+0x40]
   1400065c0:	mov    QWORD PTR [rbp+0x30],rax
   1400065c4:	mov    QWORD PTR [rbp+0x38],0x4
   1400065cc:	call   0x140008a98
   1400065d1:	mov    ecx,DWORD PTR [rdi+0x48]
   1400065d4:	lea    rax,[rsp+0x44]
   1400065d9:	mov    rdx,QWORD PTR [rdi+0x50]
   1400065dd:	mov    DWORD PTR [rsp+0x44],ecx
   1400065e1:	lea    rcx,[rbp+0x60]
   1400065e5:	mov    QWORD PTR [rbp+0x50],rax
   1400065e9:	mov    QWORD PTR [rbp+0x58],0x4
   1400065f1:	call   0x140008a98
   1400065f6:	mov    rdx,QWORD PTR [rdi+0x58]
   1400065fa:	lea    rcx,[rbp+0x70]
   1400065fe:	call   0x140008acc
   140006603:	mov    ecx,DWORD PTR [rdi+0x60]
   140006606:	lea    rax,[rsp+0x48]
   14000660b:	mov    rdx,QWORD PTR [rdi+0x68]
   14000660f:	mov    DWORD PTR [rsp+0x48],ecx
   140006613:	lea    rcx,[rbp+0x90]
   14000661a:	mov    QWORD PTR [rbp+0x80],rax
   140006621:	mov    QWORD PTR [rbp+0x88],0x4
   14000662c:	call   0x140008a98
   140006631:	mov    rdx,QWORD PTR [rdi+0x70]
   140006635:	lea    rcx,[rbp+0xa0]
   14000663c:	call   0x140008acc
   140006641:	mov    r8,QWORD PTR [rbx+0x30]
   140006645:	lea    rax,[rbp-0x50]
   140006649:	mov    QWORD PTR [rsp+0x28],rax
   14000664e:	lea    rdx,[rip+0x7bd4]        # 0x14000e229
   140006655:	add    r8,0x8
   140006659:	mov    DWORD PTR [rsp+0x20],0x10
   140006661:	xor    r9d,r9d
   140006664:	mov    rcx,r10
   140006667:	call   0x140002fc0
   14000666c:	nop
   14000666d:	jmp    0x140002ab6
   140006672:	call   QWORD PTR [rip+0x4b38]        # 0x14000b1b0
   140006678:	nop
   140006679:	jmp    0x1400029b8
   14000667e:	mov    rcx,QWORD PTR [rbp+0xc8]
   140006685:	mov    r9d,0x8007029c
   14000668b:	call   0x140009e3c
   140006690:	nop
   140006691:	jmp    0x140002ad6
   140006696:	add    rax,0x10
   14000669a:	mov    QWORD PTR [rbx],rax
   14000669d:	cmp    QWORD PTR [rax],rsi
   1400066a0:	jne    0x140002ae1
   1400066a6:	jmp    0x140002afa
   1400066ab:	int3   
   1400066ac:	cmp    ecx,DWORD PTR [rax+0x5c]
   1400066af:	jne    0x140002b73
   1400066b5:	lea    rdi,[rax+0x58]
   1400066b9:	test   rdi,rdi
   1400066bc:	je     0x140002b73
   1400066c2:	mov    rcx,rbx
   1400066c5:	call   0x140007210
   1400066ca:	mov    rax,QWORD PTR [rbx+0x30]
   1400066ce:	mov    r10,QWORD PTR [rax+0x28]
   1400066d2:	cmp    DWORD PTR [r10],0x5
   1400066d6:	jbe    0x140002c96
   1400066dc:	movabs rdx,0x400000000000
   1400066e6:	mov    rcx,r10
   1400066e9:	call   0x140003070
   1400066ee:	test   al,al
   1400066f0:	je     0x140002c96
   1400066f6:	mov    eax,DWORD PTR [rdi+0x4]
   1400066f9:	lea    rcx,[rbp-0x20]
   1400066fd:	mov    rdx,QWORD PTR [rdi+0x30]
   140006701:	mov    DWORD PTR [rsp+0x34],eax
   140006705:	lea    rax,[rsp+0x34]
   14000670a:	mov    QWORD PTR [rbp-0x30],rax
   14000670e:	mov    QWORD PTR [rbp-0x28],0x4
   140006716:	call   0x140008a98
   14000671b:	mov    rdx,QWORD PTR [rdi+0x78]
   14000671f:	lea    rcx,[rdi+0x38]
   140006723:	mov    QWORD PTR [rbp-0x10],rcx
   140006727:	lea    rcx,[rbp+0x0]
   14000672b:	mov    QWORD PTR [rbp-0x8],0x4
   140006733:	call   0x140008a98
   140006738:	mov    ecx,DWORD PTR [rdi]
   14000673a:	lea    rax,[rsp+0x40]
   14000673f:	mov    rdx,QWORD PTR [rdi+0x10]
   140006743:	mov    DWORD PTR [rsp+0x40],ecx
   140006747:	lea    rcx,[rbp+0x20]
   14000674b:	mov    QWORD PTR [rbp+0x10],rax
   14000674f:	mov    QWORD PTR [rbp+0x18],0x4
   140006757:	call   0x140008acc
   14000675c:	mov    ecx,DWORD PTR [rdi+0x18]
   14000675f:	lea    rax,[rsp+0x3c]
   140006764:	mov    rdx,QWORD PTR [rdi+0x40]
   140006768:	mov    DWORD PTR [rsp+0x3c],ecx
   14000676c:	lea    rcx,[rbp+0x40]
   140006770:	mov    QWORD PTR [rbp+0x30],rax
   140006774:	mov    QWORD PTR [rbp+0x38],0x4
   14000677c:	call   0x140008a98
   140006781:	mov    ecx,DWORD PTR [rdi+0x48]
   140006784:	lea    rax,[rsp+0x44]
   140006789:	mov    rdx,QWORD PTR [rdi+0x50]
   14000678d:	mov    DWORD PTR [rsp+0x44],ecx
   140006791:	lea    rcx,[rbp+0x60]
   140006795:	mov    QWORD PTR [rbp+0x50],rax
   140006799:	mov    QWORD PTR [rbp+0x58],0x4
   1400067a1:	call   0x140008a98
   1400067a6:	mov    rdx,QWORD PTR [rdi+0x58]
   1400067aa:	lea    rcx,[rbp+0x70]
   1400067ae:	call   0x140008acc
   1400067b3:	mov    ecx,DWORD PTR [rdi+0x60]
   1400067b6:	lea    rax,[rsp+0x48]
   1400067bb:	mov    rdx,QWORD PTR [rdi+0x68]
   1400067bf:	mov    DWORD PTR [rsp+0x48],ecx
   1400067c3:	lea    rcx,[rbp+0x90]
   1400067ca:	mov    QWORD PTR [rbp+0x80],rax
   1400067d1:	mov    QWORD PTR [rbp+0x88],0x4
   1400067dc:	call   0x140008a98
   1400067e1:	mov    rdx,QWORD PTR [rdi+0x70]
   1400067e5:	lea    rcx,[rbp+0xa0]
   1400067ec:	call   0x140008acc
   1400067f1:	mov    r8,QWORD PTR [rbx+0x30]
   1400067f5:	lea    rax,[rbp-0x50]
   1400067f9:	mov    QWORD PTR [rsp+0x28],rax
   1400067fe:	lea    rdx,[rip+0x750c]        # 0x14000dd11
   140006805:	add    r8,0x8
   140006809:	mov    DWORD PTR [rsp+0x20],0x10
   140006811:	xor    r9d,r9d
   140006814:	mov    rcx,r10
   140006817:	call   0x140002fc0
   14000681c:	nop
   14000681d:	jmp    0x140002c96
   140006822:	call   QWORD PTR [rip+0x4988]        # 0x14000b1b0
   140006828:	nop
   140006829:	jmp    0x140002b98
   14000682e:	mov    rcx,QWORD PTR [rbp+0xc8]
   140006835:	mov    r9d,0x8007029c
   14000683b:	call   0x140009e3c
   140006840:	nop
   140006841:	jmp    0x140002cb6
   140006846:	add    rax,0x10
   14000684a:	mov    QWORD PTR [rbx],rax
   14000684d:	cmp    QWORD PTR [rax],rsi
   140006850:	jne    0x140002cc1
   140006856:	jmp    0x140002cda
   14000685b:	int3   
   14000685c:	cmp    ecx,DWORD PTR [rax+0x5c]
   14000685f:	jne    0x140002d53
   140006865:	lea    rdi,[rax+0x58]
   140006869:	test   rdi,rdi
   14000686c:	je     0x140002d53
   140006872:	mov    rcx,rbx
   140006875:	call   0x140007210
   14000687a:	mov    rax,QWORD PTR [rbx+0x30]
   14000687e:	mov    r10,QWORD PTR [rax+0x28]
   140006882:	cmp    DWORD PTR [r10],0x5
   140006886:	jbe    0x140002e76
   14000688c:	movabs rdx,0x400000000000
   140006896:	mov    rcx,r10
   140006899:	call   0x140003070
   14000689e:	test   al,al
   1400068a0:	je     0x140002e76
   1400068a6:	mov    eax,DWORD PTR [rdi+0x4]
   1400068a9:	lea    rcx,[rbp-0x20]
   1400068ad:	mov    rdx,QWORD PTR [rdi+0x30]
   1400068b1:	mov    DWORD PTR [rsp+0x34],eax
   1400068b5:	lea    rax,[rsp+0x34]
   1400068ba:	mov    QWORD PTR [rbp-0x30],rax
   1400068be:	mov    QWORD PTR [rbp-0x28],0x4
   1400068c6:	call   0x140008a98
   1400068cb:	mov    rdx,QWORD PTR [rdi+0x78]
   1400068cf:	lea    rcx,[rdi+0x38]
   1400068d3:	mov    QWORD PTR [rbp-0x10],rcx
   1400068d7:	lea    rcx,[rbp+0x0]
   1400068db:	mov    QWORD PTR [rbp-0x8],0x4
   1400068e3:	call   0x140008a98
   1400068e8:	mov    ecx,DWORD PTR [rdi]
   1400068ea:	lea    rax,[rsp+0x40]
   1400068ef:	mov    rdx,QWORD PTR [rdi+0x10]
   1400068f3:	mov    DWORD PTR [rsp+0x40],ecx
   1400068f7:	lea    rcx,[rbp+0x20]
   1400068fb:	mov    QWORD PTR [rbp+0x10],rax
   1400068ff:	mov    QWORD PTR [rbp+0x18],0x4
   140006907:	call   0x140008acc
   14000690c:	mov    ecx,DWORD PTR [rdi+0x18]
   14000690f:	lea    rax,[rsp+0x3c]
   140006914:	mov    rdx,QWORD PTR [rdi+0x40]
   140006918:	mov    DWORD PTR [rsp+0x3c],ecx
   14000691c:	lea    rcx,[rbp+0x40]
   140006920:	mov    QWORD PTR [rbp+0x30],rax
   140006924:	mov    QWORD PTR [rbp+0x38],0x4
   14000692c:	call   0x140008a98
   140006931:	mov    ecx,DWORD PTR [rdi+0x48]
   140006934:	lea    rax,[rsp+0x44]
   140006939:	mov    rdx,QWORD PTR [rdi+0x50]
   14000693d:	mov    DWORD PTR [rsp+0x44],ecx
   140006941:	lea    rcx,[rbp+0x60]
   140006945:	mov    QWORD PTR [rbp+0x50],rax
   140006949:	mov    QWORD PTR [rbp+0x58],0x4
   140006951:	call   0x140008a98
   140006956:	mov    rdx,QWORD PTR [rdi+0x58]
   14000695a:	lea    rcx,[rbp+0x70]
   14000695e:	call   0x140008acc
   140006963:	mov    ecx,DWORD PTR [rdi+0x60]
   140006966:	lea    rax,[rsp+0x48]
   14000696b:	mov    rdx,QWORD PTR [rdi+0x68]
   14000696f:	mov    DWORD PTR [rsp+0x48],ecx
   140006973:	lea    rcx,[rbp+0x90]
   14000697a:	mov    QWORD PTR [rbp+0x80],rax
   140006981:	mov    QWORD PTR [rbp+0x88],0x4
   14000698c:	call   0x140008a98
   140006991:	mov    rdx,QWORD PTR [rdi+0x70]
   140006995:	lea    rcx,[rbp+0xa0]
   14000699c:	call   0x140008acc
   1400069a1:	mov    r8,QWORD PTR [rbx+0x30]
   1400069a5:	lea    rax,[rbp-0x50]
   1400069a9:	mov    QWORD PTR [rsp+0x28],rax
   1400069ae:	lea    rdx,[rip+0x74a1]        # 0x14000de56
   1400069b5:	add    r8,0x8
   1400069b9:	mov    DWORD PTR [rsp+0x20],0x10
   1400069c1:	xor    r9d,r9d
   1400069c4:	mov    rcx,r10
   1400069c7:	call   0x140002fc0
   1400069cc:	nop
   1400069cd:	jmp    0x140002e76
   1400069d2:	call   QWORD PTR [rip+0x47d8]        # 0x14000b1b0
   1400069d8:	nop
   1400069d9:	jmp    0x140002d78
   1400069de:	mov    rcx,QWORD PTR [rbp+0xc8]
   1400069e5:	mov    r9d,0x8007029c
   1400069eb:	call   0x140009e3c
   1400069f0:	nop
   1400069f1:	jmp    0x140002e96
   1400069f6:	add    rax,0x10
   1400069fa:	mov    QWORD PTR [rbx],rax
   1400069fd:	cmp    QWORD PTR [rax],rsi
   140006a00:	jne    0x140002ea1
   140006a06:	jmp    0x140002eba
   140006a0b:	int3   
   140006a0c:	mov    rcx,QWORD PTR [rsp+0x28]
   140006a11:	mov    edx,0x759
   140006a16:	call   0x140007848
   140006a1b:	int3   
   140006a1c:	mov    rcx,QWORD PTR [rcx+0x10]
   140006a20:	test   rcx,rcx
   140006a23:	jne    0x140002f48
   140006a29:	jmp    0x140002f7c
   140006a2e:	or     eax,0x1
   140006a31:	lea    rcx,[rip+0xfffffffffffff158]        # 0x140005b90
   140006a38:	mov    DWORD PTR [rip+0xbe32],eax        # 0x140012870
   140006a3e:	call   0x140004e98
   140006a43:	nop
   140006a44:	jmp    0x140003121
   140006a49:	lea    rax,[rip+0xbe30]        # 0x140012880
   140006a50:	mov    QWORD PTR [rsp+0x20],rbx
   140006a55:	mov    QWORD PTR [rsp+0x68],rax
   140006a5a:	lea    rax,[rip+0x4b8f]        # 0x14000b5f0
   140006a61:	mov    QWORD PTR [rip+0xbe18],rax        # 0x140012880
   140006a68:	lea    rax,[rip+0xb6a1]        # 0x140012110
   140006a6f:	mov    DWORD PTR [rsp+0x28],0x0
   140006a77:	lea    rcx,[rsp+0x20]
   140006a7c:	mov    QWORD PTR [rip+0xbe15],rax        # 0x140012898
   140006a83:	call   0x1400031b0
   140006a88:	nop
   140006a89:	jmp    0x140003148
   140006a8e:	mov    rcx,rbx
   140006a91:	call   QWORD PTR [rip+0x4939]        # 0x14000b3d0
   140006a97:	mov    rcx,rdi
   140006a9a:	call   rbx
   140006a9c:	nop
   140006a9d:	jmp    0x140003184
   140006aa2:	mov    rcx,rsi
   140006aa5:	call   QWORD PTR [rip+0x4925]        # 0x14000b3d0
   140006aab:	lea    rcx,[rdi+0x8]
   140006aaf:	call   rsi
   140006ab1:	nop
   140006ab2:	jmp    0x14000325d
   140006ab7:	int3   
   140006ab8:	mov    QWORD PTR [rsp+0x40],0x0
   140006ac1:	mov    rax,QWORD PTR [rsi]
   140006ac4:	mov    rdi,QWORD PTR [rax+0x10]
   140006ac8:	mov    rcx,rdi
   140006acb:	call   QWORD PTR [rip+0x48ff]        # 0x14000b3d0
   140006ad1:	mov    rcx,rsi
   140006ad4:	call   rdi
   140006ad6:	nop
   140006ad7:	jmp    0x1400032dd
   140006adc:	mov    rcx,QWORD PTR [rsp+0x38]
   140006ae1:	lea    r8,[rip+0x7960]        # 0x14000e448
   140006ae8:	mov    edi,0x8007000e
   140006aed:	mov    edx,0xb7
   140006af2:	mov    r9d,edi
   140006af5:	call   0x140009210
   140006afa:	nop
   140006afb:	jmp    0x140003317
   140006b00:	mov    rcx,QWORD PTR [rsp+0x38]
   140006b05:	lea    r8,[rip+0x793c]        # 0x14000e448
   140006b0c:	mov    r9d,eax
   140006b0f:	mov    edx,0xbe
   140006b14:	call   0x140009210
   140006b19:	nop
   140006b1a:	jmp    0x140003317
   140006b1f:	mov    rcx,rsi
   140006b22:	call   QWORD PTR [rip+0x48a8]        # 0x14000b3d0
   140006b28:	mov    rcx,rbx
   140006b2b:	call   rsi
   140006b2d:	nop
   140006b2e:	jmp    0x14000333b
   140006b33:	int3   
   140006b34:	movzx  eax,BYTE PTR [rcx+0x14]
   140006b38:	and    al,0x5
   140006b3a:	cmp    al,0x5
   140006b3c:	mov    rax,QWORD PTR [rcx]
   140006b3f:	sete   sil
   140006b43:	mov    rdi,QWORD PTR [rax+0x28]
   140006b47:	mov    rcx,rdi
   140006b4a:	call   QWORD PTR [rip+0x4880]        # 0x14000b3d0
   140006b50:	mov    edx,0x1
   140006b55:	mov    rcx,r14
   140006b58:	call   rdi
   140006b5a:	test   sil,sil
   140006b5d:	je     0x140003393
   140006b63:	jmp    0x140006b6e
   140006b65:	cmp    ebx,0x1
   140006b68:	jne    0x140003393
   140006b6e:	mov    rsi,QWORD PTR [rip+0xbeab]        # 0x140012a20
   140006b75:	mov    rax,QWORD PTR [rsi]
   140006b78:	mov    rdi,QWORD PTR [rax+0x10]
   140006b7c:	mov    rcx,rdi
   140006b7f:	call   QWORD PTR [rip+0x484b]        # 0x14000b3d0
   140006b85:	mov    rcx,rsi
   140006b88:	call   rdi
   140006b8a:	nop
   140006b8b:	jmp    0x140003393
   140006b90:	mov    eax,DWORD PTR [rip+0x4ece]        # 0x14000ba64
   140006b96:	cmp    DWORD PTR [rdx+0x4],eax
   140006b99:	jne    0x1400033e3
   140006b9f:	mov    eax,DWORD PTR [rip+0x4ec3]        # 0x14000ba68
   140006ba5:	cmp    DWORD PTR [rdx+0x8],eax
   140006ba8:	jne    0x1400033e3
   140006bae:	mov    ecx,DWORD PTR [rip+0x4eb8]        # 0x14000ba6c
   140006bb4:	cmp    DWORD PTR [rdx+0xc],ecx
   140006bb7:	jne    0x1400033e3
   140006bbd:	mov    QWORD PTR [r8],rdi
   140006bc0:	mov    rcx,QWORD PTR [rdi]
   140006bc3:	mov    rbx,QWORD PTR [rcx+0x8]
   140006bc7:	mov    rcx,rbx
   140006bca:	call   QWORD PTR [rip+0x4800]        # 0x14000b3d0
   140006bd0:	mov    rcx,rdi
   140006bd3:	call   rbx
   140006bd5:	nop
   140006bd6:	jmp    0x14000342c
   140006bdb:	int3   
   140006bdc:	cmp    ebx,0x2
   140006bdf:	jne    0x14000346c
   140006be5:	mov    QWORD PTR [rsp+0x30],rsi
   140006bea:	mov    rsi,QWORD PTR [rip+0xbe2f]        # 0x140012a20
   140006bf1:	mov    QWORD PTR [rsp+0x38],rdi
   140006bf6:	mov    rax,QWORD PTR [rsi]
   140006bf9:	mov    rdi,QWORD PTR [rax+0x8]
   140006bfd:	mov    rcx,rdi
   140006c00:	call   QWORD PTR [rip+0x47ca]        # 0x14000b3d0
   140006c06:	mov    rcx,rsi
   140006c09:	call   rdi
   140006c0b:	mov    rdi,QWORD PTR [rsp+0x38]
   140006c10:	mov    rsi,QWORD PTR [rsp+0x30]
   140006c15:	jmp    0x14000346c
   140006c1a:	mov    rax,QWORD PTR [r14]
   140006c1d:	mov    QWORD PTR [rsp+0x30],rsi
   140006c22:	mov    rsi,QWORD PTR [rax+0x10]
   140006c26:	mov    rcx,rsi
   140006c29:	call   QWORD PTR [rip+0x47a1]        # 0x14000b3d0
   140006c2f:	mov    rcx,r14
   140006c32:	call   rsi
   140006c34:	mov    rsi,QWORD PTR [rsp+0x30]
   140006c39:	jmp    0x1400034d6
   140006c3e:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006c42:	lea    r8,[rip+0x68bf]        # 0x14000d508
   140006c49:	mov    edx,0xe0
   140006c4e:	call   0x1400091f0
   140006c53:	nop
   140006c54:	jmp    0x1400036de
   140006c59:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006c5d:	lea    r8,[rip+0x68a4]        # 0x14000d508
   140006c64:	mov    r9d,eax
   140006c67:	mov    edx,0xea
   140006c6c:	call   0x140009210
   140006c71:	nop
   140006c72:	jmp    0x1400036c1
   140006c77:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006c7b:	lea    r8,[rip+0x6886]        # 0x14000d508
   140006c82:	mov    edx,0xaa
   140006c87:	call   0x1400091f0
   140006c8c:	jmp    0x140006ca2
   140006c8e:	mov    r8,rdi
   140006c91:	jmp    0x14000361d
   140006c96:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006c9a:	mov    r9d,eax
   140006c9d:	call   0x14000a268
   140006ca2:	mov    ebx,eax
   140006ca4:	test   eax,eax
   140006ca6:	jns    0x140003638
   140006cac:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006cb0:	lea    r8,[rip+0x6851]        # 0x14000d508
   140006cb7:	mov    r9d,eax
   140006cba:	mov    edx,0xfd
   140006cbf:	call   0x140009210
   140006cc4:	nop
   140006cc5:	jmp    0x14000368e
   140006cca:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006cce:	lea    r8,[rip+0x6833]        # 0x14000d508
   140006cd5:	mov    edx,0xfe
   140006cda:	call   0x1400091f0
   140006cdf:	mov    ebx,eax
   140006ce1:	jmp    0x14000368e
   140006ce6:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006cea:	lea    r8,[rip+0x6817]        # 0x14000d508
   140006cf1:	mov    r9d,eax
   140006cf4:	mov    edx,0x102
   140006cf9:	call   0x140009210
   140006cfe:	nop
   140006cff:	jmp    0x14000368e
   140006d04:	mov    rcx,QWORD PTR [rbp+0x10]
   140006d08:	lea    r8,[rip+0x67f9]        # 0x14000d508
   140006d0f:	mov    r9d,0x80070057
   140006d15:	mov    edx,0x31
   140006d1a:	call   0x140009210
   140006d1f:	mov    eax,0x80070057
   140006d24:	jmp    0x140003830
   140006d29:	mov    rcx,QWORD PTR [rbp+0x10]
   140006d2d:	lea    r8,[rip+0x67d4]        # 0x14000d508
   140006d34:	mov    edx,0x36
   140006d39:	call   0x1400091f0
   140006d3e:	nop
   140006d3f:	jmp    0x14000382b
   140006d44:	mov    rcx,QWORD PTR [rbp+0x10]
   140006d48:	lea    r8,[rip+0x67b9]        # 0x14000d508
   140006d4f:	mov    edi,0x8007000e
   140006d54:	mov    edx,0x3a
   140006d59:	mov    r9d,edi
   140006d5c:	call   0x140009210
   140006d61:	nop
   140006d62:	jmp    0x140003829
   140006d67:	mov    rcx,QWORD PTR [rbp+0x10]
   140006d6b:	lea    r8,[rip+0x6796]        # 0x14000d508
   140006d72:	mov    edx,0x41
   140006d77:	call   0x1400091f0
   140006d7c:	mov    edi,eax
   140006d7e:	jmp    0x140003816
   140006d83:	mov    rcx,QWORD PTR [rbp+0x10]
   140006d87:	lea    r8,[rip+0x677a]        # 0x14000d508
   140006d8e:	mov    edi,0x8007000e
   140006d93:	mov    edx,0x49
   140006d98:	mov    r9d,edi
   140006d9b:	call   0x140009210
   140006da0:	nop
   140006da1:	jmp    0x140003816
   140006da6:	mov    rcx,QWORD PTR [rbp+0x10]
   140006daa:	lea    r8,[rip+0x6757]        # 0x14000d508
   140006db1:	mov    edx,0x50
   140006db6:	call   0x1400091f0
   140006dbb:	cmp    BYTE PTR [rbp-0x20],0x0
   140006dbf:	mov    edi,eax
   140006dc1:	je     0x140003816
   140006dc7:	mov    rcx,QWORD PTR [rbp-0x28]
   140006dcb:	mov    rcx,QWORD PTR [rcx]
   140006dce:	call   QWORD PTR [rip+0x42e4]        # 0x14000b0b8
   140006dd4:	nop
   140006dd5:	jmp    0x140003816
   140006dda:	mov    edi,0x1
   140006ddf:	jmp    0x140003816
   140006de4:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006de8:	lea    r8,[rip+0x6719]        # 0x14000d508
   140006def:	mov    r9d,0x80070057
   140006df5:	mov    edx,0x5e
   140006dfa:	call   0x140009210
   140006dff:	mov    eax,0x80070057
   140006e04:	jmp    0x14000398a
   140006e09:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006e0d:	lea    r8,[rip+0x66f4]        # 0x14000d508
   140006e14:	mov    r9d,0x8007000e
   140006e1a:	mov    edx,0x7a
   140006e1f:	call   0x140009210
   140006e24:	mov    eax,0x8007000e
   140006e29:	jmp    0x140003982
   140006e2e:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006e32:	lea    r8,[rip+0x66cf]        # 0x14000d508
   140006e39:	mov    edx,0x94
   140006e3e:	call   0x1400091f0
   140006e43:	cmp    BYTE PTR [rbp+0x37],0x0
   140006e47:	mov    ebx,eax
   140006e49:	je     0x140003980
   140006e4f:	mov    rcx,QWORD PTR [rbp+0x2f]
   140006e53:	mov    rcx,QWORD PTR [rcx]
   140006e56:	call   QWORD PTR [rip+0x425c]        # 0x14000b0b8
   140006e5c:	nop
   140006e5d:	jmp    0x140003980
   140006e62:	mov    rcx,rsi
   140006e65:	call   QWORD PTR [rip+0x4565]        # 0x14000b3d0
   140006e6b:	mov    r8,r12
   140006e6e:	mov    rdx,rbx
   140006e71:	mov    rcx,rdi
   140006e74:	call   rsi
   140006e76:	nop
   140006e77:	jmp    0x140003a2b
   140006e7c:	mov    QWORD PTR [rsp+0x60],0x0
   140006e85:	mov    rax,QWORD PTR [rdi+0x10]
   140006e89:	mov    rsi,QWORD PTR [r13+rax*1+0x10]
   140006e8e:	test   rsi,rsi
   140006e91:	je     0x140006ebd
   140006e93:	mov    rax,QWORD PTR [rsi]
   140006e96:	mov    rbx,QWORD PTR [rax]
   140006e99:	mov    rcx,rbx
   140006e9c:	call   QWORD PTR [rip+0x452e]        # 0x14000b3d0
   140006ea2:	lea    r8,[rsp+0x60]
   140006ea7:	lea    rdx,[rip+0x664a]        # 0x14000d4f8
   140006eae:	mov    rcx,rsi
   140006eb1:	call   rbx
   140006eb3:	mov    rbx,QWORD PTR [rsp+0x60]
   140006eb8:	test   rbx,rbx
   140006ebb:	jne    0x140006ecf
   140006ebd:	mov    rdx,rdi
   140006ec0:	lea    rcx,[rsp+0x60]
   140006ec5:	call   0x140008b08
   140006eca:	mov    rbx,QWORD PTR [rsp+0x60]
   140006ecf:	mov    r14,QWORD PTR [rdi+0x10]
   140006ed3:	add    r14,r13
   140006ed6:	mov    rax,QWORD PTR [r12]
   140006eda:	mov    rbp,QWORD PTR [rax+0x18]
   140006ede:	mov    rcx,rbp
   140006ee1:	call   QWORD PTR [rip+0x44e9]        # 0x14000b3d0
   140006ee7:	lea    r9,[r14+0x18]
   140006eeb:	mov    r8,rbx
   140006eee:	mov    rdx,r14
   140006ef1:	mov    rcx,r12
   140006ef4:	call   rbp
   140006ef6:	mov    esi,eax
   140006ef8:	mov    r14,QWORD PTR [rsp+0x60]
   140006efd:	test   r14,r14
   140006f00:	je     0x140006f20
   140006f02:	mov    QWORD PTR [rsp+0x60],0x0
   140006f0b:	mov    rax,QWORD PTR [r14]
   140006f0e:	mov    rbx,QWORD PTR [rax+0x10]
   140006f12:	mov    rcx,rbx
   140006f15:	call   QWORD PTR [rip+0x44b5]        # 0x14000b3d0
   140006f1b:	mov    rcx,r14
   140006f1e:	call   rbx
   140006f20:	inc    r15
   140006f23:	add    r13,0x20
   140006f27:	test   esi,esi
   140006f29:	jns    0x140003a37
   140006f2f:	jmp    0x140003a41
   140006f34:	mov    rcx,QWORD PTR [rsp+0x78]
   140006f39:	lea    r8,[rip+0x7508]        # 0x14000e448
   140006f40:	mov    edx,0x31
   140006f45:	call   0x1400091f0
   140006f4a:	nop
   140006f4b:	jmp    0x140003be8
   140006f50:	call   QWORD PTR [rip+0x414a]        # 0x14000b0a0
   140006f56:	nop
   140006f57:	jmp    0x140003b12
   140006f5c:	mov    rcx,QWORD PTR [rsp+0x78]
   140006f61:	lea    r8,[rip+0x74e0]        # 0x14000e448
   140006f68:	mov    edx,0x38
   140006f6d:	call   0x1400091f0
   140006f72:	mov    edi,eax
   140006f74:	jmp    0x140003bc9
   140006f79:	call   QWORD PTR [rip+0x4121]        # 0x14000b0a0
   140006f7f:	nop
   140006f80:	jmp    0x140003b52
   140006f85:	mov    rcx,QWORD PTR [rsp+0x78]
   140006f8a:	lea    r8,[rip+0x74b7]        # 0x14000e448
   140006f91:	mov    edx,0x3b
   140006f96:	call   0x1400091f0
   140006f9b:	mov    edi,eax
   140006f9d:	jmp    0x140003bc9
   140006fa2:	mov    rcx,QWORD PTR [rsp+0x78]
   140006fa7:	lea    r8,[rip+0x749a]        # 0x14000e448
   140006fae:	mov    edx,0x3f
   140006fb3:	call   0x1400091f0
   140006fb8:	mov    edi,eax
   140006fba:	jmp    0x140003bc9
   140006fbf:	int3   
   140006fc0:	mov    rcx,QWORD PTR [rsp+0x48]
   140006fc5:	mov    r9d,eax
   140006fc8:	lea    r8,[rip+0x7479]        # 0x14000e448
   140006fcf:	mov    edx,0x6d
   140006fd4:	call   0x140009210
   140006fd9:	jmp    0x14000706e
   140006fde:	mov    QWORD PTR [rsp+0x58],rsi
   140006fe3:	mov    rax,QWORD PTR [rdi]
   140006fe6:	mov    rbx,QWORD PTR [rax+0x10]
   140006fea:	mov    rcx,rbx
   140006fed:	call   QWORD PTR [rip+0x43dd]        # 0x14000b3d0
   140006ff3:	mov    rcx,rdi
   140006ff6:	call   rbx
   140006ff8:	nop
   140006ff9:	jmp    0x140003c59
   140006ffe:	mov    rcx,QWORD PTR [rsp+0x48]
   140007003:	mov    r9d,eax
   140007006:	lea    r8,[rip+0x743b]        # 0x14000e448
   14000700d:	mov    edx,0x6f
   140007012:	call   0x140009210
   140007017:	jmp    0x14000706e
   140007019:	mov    QWORD PTR [rsp+0x50],rsi
   14000701e:	mov    rax,QWORD PTR [rdi]
   140007021:	mov    rbx,QWORD PTR [rax+0x10]
   140007025:	mov    rcx,rbx
   140007028:	call   QWORD PTR [rip+0x43a2]        # 0x14000b3d0
   14000702e:	mov    rcx,rdi
   140007031:	call   rbx
   140007033:	nop
   140007034:	jmp    0x140003c7c
   140007039:	mov    rcx,QWORD PTR [rsp+0x48]
   14000703e:	mov    r9d,eax
   140007041:	lea    r8,[rip+0x7400]        # 0x14000e448
   140007048:	mov    edx,0x71
   14000704d:	call   0x140009210
   140007052:	jmp    0x14000706e
   140007054:	mov    rcx,QWORD PTR [rsp+0x48]
   140007059:	mov    r9d,eax
   14000705c:	lea    r8,[rip+0x73e5]        # 0x14000e448
   140007063:	mov    edx,0x75
   140007068:	call   0x140009210
   14000706d:	nop
   14000706e:	lea    rcx,[rsp+0x50]
   140007073:	call   0x1400073f8
   140007078:	nop
   140007079:	lea    rcx,[rsp+0x58]
   14000707e:	call   0x1400073f8
   140007083:	nop
   140007084:	lea    rcx,[rsp+0x60]
   140007089:	call   0x1400073f8
   14000708e:	mov    eax,ebx
   140007090:	add    rsp,0x30
   140007094:	pop    rdi
   140007095:	pop    rsi
   140007096:	pop    rbx
   140007097:	ret    
   140007098:	mov    rcx,rsi
   14000709b:	call   QWORD PTR [rip+0x432f]        # 0x14000b3d0
   1400070a1:	mov    rax,QWORD PTR [rbx+0x30]
   1400070a5:	mov    r9,r14
   1400070a8:	mov    QWORD PTR [rsp+0x30],rax
   1400070ad:	movzx  r8d,dil
   1400070b1:	mov    rax,QWORD PTR [rsp+0x88]
   1400070b9:	mov    edx,r15d
   1400070bc:	mov    QWORD PTR [rsp+0x28],rax
   1400070c1:	mov    rcx,r12
   1400070c4:	mov    QWORD PTR [rsp+0x20],rbp
   1400070c9:	call   rsi
   1400070cb:	nop
   1400070cc:	jmp    0x140003f0d
   1400070d1:	int3   
   1400070d2:	int3   
   1400070d3:	int3   
   1400070d4:	int3   
   1400070d5:	int3   
   1400070d6:	int3   
   1400070d7:	int3   
   1400070d8:	int3   
   1400070d9:	int3   
   1400070da:	int3   
   1400070db:	int3   
   1400070dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400070e1:	mov    QWORD PTR [rsp+0x10],rsi
   1400070e6:	mov    QWORD PTR [rsp+0x18],rdi
   1400070eb:	push   r14
   1400070ed:	sub    rsp,0x20
   1400070f1:	mov    sil,dl
   1400070f4:	call   QWORD PTR [rip+0x4026]        # 0x14000b120
   1400070fa:	mov    ebx,eax
   1400070fc:	lea    r14,[rip+0xb7dd]        # 0x1400128e0
   140007103:	mov    edi,eax
   140007105:	movabs rax,0xcccccccccccccccd
   14000710f:	mul    rdi
   140007112:	shr    rdx,0x4
   140007116:	lea    rcx,[rdx+rdx*4]
   14000711a:	shl    rcx,0x2
   14000711e:	sub    rbx,rcx
   140007121:	mov    rax,QWORD PTR [r14+rbx*8]
   140007125:	jmp    0x140007130
   140007127:	cmp    DWORD PTR [rax+0x8],edi
   14000712a:	je     0x140007173
   14000712c:	mov    rax,QWORD PTR [rax+0x10]
   140007130:	test   rax,rax
   140007133:	jne    0x140007127
   140007135:	test   sil,sil
   140007138:	je     0x140007171
   14000713a:	lea    ecx,[rax+0x18]
   14000713d:	call   QWORD PTR [rip+0x426d]        # 0x14000b3b0
   140007143:	mov    rcx,rax
   140007146:	test   rax,rax
   140007149:	je     0x140007171
   14000714b:	xor    eax,eax
   14000714d:	mov    QWORD PTR [rcx],rax
   140007150:	and    QWORD PTR [rcx+0x10],rax
   140007154:	mov    DWORD PTR [rcx+0x8],edi
   140007157:	prefetchw BYTE PTR [r14+rbx*8]
   14000715c:	mov    rax,QWORD PTR [r14+rbx*8]
   140007160:	mov    QWORD PTR [rcx+0x10],rax
   140007164:	lock cmpxchg QWORD PTR [r14+rbx*8],rcx
   14000716a:	jne    0x14000715c
   14000716c:	mov    rax,rcx
   14000716f:	jmp    0x140007173
   140007171:	xor    eax,eax
   140007173:	mov    rbx,QWORD PTR [rsp+0x30]
   140007178:	mov    rsi,QWORD PTR [rsp+0x38]
   14000717d:	mov    rdi,QWORD PTR [rsp+0x40]
   140007182:	add    rsp,0x20
   140007186:	pop    r14
   140007188:	ret    
   140007189:	int3   
   14000718a:	int3   
   14000718b:	int3   
   14000718c:	int3   
   14000718d:	int3   
   14000718e:	int3   
   14000718f:	int3   
   140007190:	rex push rbx
   140007192:	sub    rsp,0x20
   140007196:	mov    rbx,rcx
   140007199:	call   QWORD PTR [rip+0x3f81]        # 0x14000b120
   14000719f:	cmp    DWORD PTR [rbx+0x18],eax
   1400071a2:	je     0x1400071b4
   1400071a4:	mov    rcx,QWORD PTR [rsp+0x28]
   1400071a9:	mov    r9d,0x8007029c
   1400071af:	call   0x140009e3c
   1400071b4:	mov    rax,QWORD PTR [rbx]
   1400071b7:	xor    edx,edx
   1400071b9:	mov    DWORD PTR [rbx+0x18],edx
   1400071bc:	jmp    0x1400071d0
   1400071be:	mov    rax,QWORD PTR [rbx]
   1400071c1:	mov    rax,QWORD PTR [rax]
   1400071c4:	cmp    rax,rbx
   1400071c7:	je     0x1400071d7
   1400071c9:	add    rax,0x10
   1400071cd:	mov    QWORD PTR [rbx],rax
   1400071d0:	cmp    QWORD PTR [rax],rdx
   1400071d3:	jne    0x1400071be
   1400071d5:	jmp    0x1400071e1
   1400071d7:	mov    rcx,QWORD PTR [rbx]
   1400071da:	mov    rax,QWORD PTR [rbx+0x10]
   1400071de:	mov    QWORD PTR [rcx],rax
   1400071e1:	mov    QWORD PTR [rbx],rdx
   1400071e4:	add    rsp,0x20
   1400071e8:	pop    rbx
   1400071e9:	ret    
   1400071ea:	int3   
   1400071eb:	int3   
   1400071ec:	int3   
   1400071ed:	int3   
   1400071ee:	int3   
   1400071ef:	int3   
   1400071f0:	sub    rsp,0x28
   1400071f4:	cmp    DWORD PTR [rcx+0x20],0x0
   1400071f8:	je     0x140007203
   1400071fa:	add    rcx,0x8
   1400071fe:	call   0x140007190
   140007203:	add    rsp,0x28
   140007207:	ret    
   140007208:	int3   
   140007209:	int3   
   14000720a:	int3   
   14000720b:	int3   
   14000720c:	int3   
   14000720d:	int3   
   14000720e:	int3   
   14000720f:	int3   
   140007210:	rex push rbx
   140007212:	sub    rsp,0x20
   140007216:	lea    rdx,[rsp+0x30]
   14000721b:	mov    rbx,rcx
   14000721e:	call   0x140002810
   140007223:	mov    rax,QWORD PTR [rbx+0x30]
   140007227:	mov    rcx,QWORD PTR [rsp+0x30]
   14000722c:	mov    DWORD PTR [rax],0x2
   140007232:	test   rcx,rcx
   140007235:	je     0x14000723d
   140007237:	call   QWORD PTR [rip+0x3f73]        # 0x14000b1b0
   14000723d:	add    rsp,0x20
   140007241:	pop    rbx
   140007242:	ret    
   140007243:	int3   
   140007244:	int3   
   140007245:	int3   
   140007246:	int3   
   140007247:	int3   
   140007248:	int3   
   140007249:	int3   
   14000724a:	int3   
   14000724b:	int3   
   14000724c:	mov    QWORD PTR [rsp+0x8],rbx
   140007251:	mov    QWORD PTR [rsp+0x10],rsi
   140007256:	push   rdi
   140007257:	sub    rsp,0x20
   14000725b:	xor    esi,esi
   14000725d:	lea    rbx,[rcx+0x38]
   140007261:	lea    rax,[rip+0x6268]        # 0x14000d4d0
   140007268:	mov    rdi,rcx
   14000726b:	mov    QWORD PTR [rcx],rax
   14000726e:	lea    rax,[rcx+0x68]
   140007272:	mov    QWORD PTR [rcx+0x28],rax
   140007276:	mov    QWORD PTR [rcx+0x8],rsi
   14000727a:	mov    QWORD PTR [rcx+0x10],rcx
   14000727e:	mov    QWORD PTR [rcx+0x18],rsi
   140007282:	mov    DWORD PTR [rcx+0x20],esi
   140007285:	mov    QWORD PTR [rcx+0x30],rbx
   140007289:	lea    rcx,[rbx+0x58]
   14000728d:	mov    QWORD PTR [rbx+0x28],rdx
   140007291:	xor    edx,edx
   140007293:	mov    DWORD PTR [rbx],esi
   140007295:	mov    BYTE PTR [rbx+0x4],sil
   140007299:	mov    QWORD PTR [rbx+0x38],r8
   14000729d:	mov    r8d,0x90
   1400072a3:	mov    BYTE PTR [rbx+0x48],sil
   1400072a7:	mov    DWORD PTR [rbx+0x30],esi
   1400072aa:	mov    QWORD PTR [rbx+0x40],rsi
   1400072ae:	mov    QWORD PTR [rbx+0x50],0x1
   1400072b6:	mov    QWORD PTR [rcx+0x90],rsi
   1400072bd:	mov    QWORD PTR [rcx+0x98],rsi
   1400072c4:	call   0x1400055d6
   1400072c9:	mov    QWORD PTR [rbx+0xf8],rsi
   1400072d0:	mov    rax,rdi
   1400072d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072d8:	mov    QWORD PTR [rdi+0x138],rsi
   1400072df:	mov    rsi,QWORD PTR [rsp+0x38]
   1400072e4:	add    rsp,0x20
   1400072e8:	pop    rdi
   1400072e9:	ret    
   1400072ea:	int3   
   1400072eb:	int3   
   1400072ec:	int3   
   1400072ed:	int3   
   1400072ee:	int3   
   1400072ef:	int3   
   1400072f0:	sub    rsp,0x28
   1400072f4:	cmp    DWORD PTR [rcx+0x20],0x0
   1400072f8:	jne    0x140007303
   1400072fa:	add    rcx,0x8
   1400072fe:	call   0x140002ef0
   140007303:	add    rsp,0x28
   140007307:	ret    
   140007308:	int3   
   140007309:	int3   
   14000730a:	int3   
   14000730b:	int3   
   14000730c:	int3   
   14000730d:	int3   
   14000730e:	int3   
   14000730f:	int3   
   140007310:	rex push rbx
   140007312:	sub    rsp,0x20
   140007316:	lea    rdx,[rsp+0x30]
   14000731b:	mov    rbx,rcx
   14000731e:	call   0x140002810
   140007323:	mov    rbx,QWORD PTR [rbx+0x30]
   140007327:	mov    rcx,QWORD PTR [rbx+0x28]
   14000732b:	cmp    DWORD PTR [rcx],0x5
   14000732e:	jbe    0x14000735e
   140007330:	movabs rdx,0x400000000000
   14000733a:	test   QWORD PTR [rcx+0x10],rdx
   14000733e:	je     0x14000735e
   140007340:	mov    rax,QWORD PTR [rcx+0x18]
   140007344:	and    rax,rdx
   140007347:	cmp    rax,QWORD PTR [rcx+0x18]
   14000734b:	jne    0x14000735e
   14000734d:	lea    rdx,[rbx+0x8]
   140007351:	mov    ecx,0x3
   140007356:	call   QWORD PTR [rip+0x3ec4]        # 0x14000b220
   14000735c:	jmp    0x140007364
   14000735e:	xor    eax,eax
   140007360:	mov    QWORD PTR [rbx+0x8],rax
   140007364:	mov    rcx,QWORD PTR [rsp+0x30]
   140007369:	mov    DWORD PTR [rbx],0x1
   14000736f:	test   rcx,rcx
   140007372:	je     0x14000737a
   140007374:	call   QWORD PTR [rip+0x3e36]        # 0x14000b1b0
   14000737a:	add    rsp,0x20
   14000737e:	pop    rbx
   14000737f:	ret    
   140007380:	int3   
   140007381:	int3   
   140007382:	int3   
   140007383:	int3   
   140007384:	int3   
   140007385:	int3   
   140007386:	int3   
   140007387:	int3   
   140007388:	jmp    0x1400073f8
   14000738d:	int3   
   14000738e:	int3   
   14000738f:	int3   
   140007390:	int3   
   140007391:	int3   
   140007392:	int3   
   140007393:	int3   
   140007394:	mov    QWORD PTR [rsp+0x10],rbx
   140007399:	mov    QWORD PTR [rsp+0x18],rsi
   14000739e:	push   rdi
   14000739f:	sub    rsp,0x20
   1400073a3:	mov    rdi,rdx
   1400073a6:	mov    rsi,rcx
   1400073a9:	cmp    QWORD PTR [rcx],rdx
   1400073ac:	je     0x1400073dd
   1400073ae:	test   rdx,rdx
   1400073b1:	je     0x1400073c8
   1400073b3:	mov    rax,QWORD PTR [rdx]
   1400073b6:	mov    rbx,QWORD PTR [rax+0x8]
   1400073ba:	mov    rcx,rbx
   1400073bd:	call   QWORD PTR [rip+0x400d]        # 0x14000b3d0
   1400073c3:	mov    rcx,rdi
   1400073c6:	call   rbx
   1400073c8:	mov    rax,QWORD PTR [rsi]
   1400073cb:	lea    rcx,[rsp+0x30]
   1400073d0:	mov    QWORD PTR [rsp+0x30],rax
   1400073d5:	mov    QWORD PTR [rsi],rdi
   1400073d8:	call   0x1400073f8
   1400073dd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400073e2:	mov    rax,rsi
   1400073e5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400073ea:	add    rsp,0x20
   1400073ee:	pop    rdi
   1400073ef:	ret    
   1400073f0:	int3   
   1400073f1:	int3   
   1400073f2:	int3   
   1400073f3:	int3   
   1400073f4:	int3   
   1400073f5:	int3   
   1400073f6:	int3   
   1400073f7:	int3   
   1400073f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400073fd:	push   rdi
   1400073fe:	sub    rsp,0x20
   140007402:	mov    rdi,QWORD PTR [rcx]
   140007405:	xor    eax,eax
   140007407:	test   rdi,rdi
   14000740a:	je     0x140007424
   14000740c:	mov    QWORD PTR [rcx],rax
   14000740f:	mov    rax,QWORD PTR [rdi]
   140007412:	mov    rbx,QWORD PTR [rax+0x10]
   140007416:	mov    rcx,rbx
   140007419:	call   QWORD PTR [rip+0x3fb1]        # 0x14000b3d0
   14000741f:	mov    rcx,rdi
   140007422:	call   rbx
   140007424:	mov    rbx,QWORD PTR [rsp+0x30]
   140007429:	add    rsp,0x20
   14000742d:	pop    rdi
   14000742e:	ret    
   14000742f:	int3   
   140007430:	int3   
   140007431:	int3   
   140007432:	int3   
   140007433:	int3   
   140007434:	int3   
   140007435:	int3   
   140007436:	int3   
   140007437:	int3   
   140007438:	mov    r10d,DWORD PTR [rcx+0x50]
   14000743c:	mov    r9,rcx
   14000743f:	cmp    r10d,0x1
   140007443:	jge    0x14000744c
   140007445:	mov    ecx,0x7
   14000744a:	int    0x29
   14000744c:	xor    eax,eax
   14000744e:	cmp    DWORD PTR [r9+0x54],eax
   140007452:	jl     0x140007458
   140007454:	mov    DWORD PTR [r9+0x54],edx
   140007458:	test   r8,r8
   14000745b:	je     0x140007464
   14000745d:	mov    ecx,DWORD PTR [r9+0x54]
   140007461:	mov    DWORD PTR [r8],ecx
   140007464:	lea    ecx,[r10-0x1]
   140007468:	test   ecx,ecx
   14000746a:	mov    DWORD PTR [r9+0x50],ecx
   14000746e:	sete   al
   140007471:	ret    
   140007472:	int3   
   140007473:	int3   
   140007474:	int3   
   140007475:	int3   
   140007476:	int3   
   140007477:	int3   
   140007478:	sub    rsp,0x28
   14000747c:	mov    rdx,QWORD PTR [rcx]
   14000747f:	and    QWORD PTR [rcx],0x0
   140007483:	lea    rax,[rdx-0x1]
   140007487:	cmp    rax,0xfffffffffffffffd
   14000748b:	ja     0x140007496
   14000748d:	mov    rcx,rdx
   140007490:	call   QWORD PTR [rip+0x3c0a]        # 0x14000b0a0
   140007496:	add    rsp,0x28
   14000749a:	ret    
   14000749b:	int3   
   14000749c:	int3   
   14000749d:	int3   
   14000749e:	int3   
   14000749f:	int3   
   1400074a0:	int3   
   1400074a1:	int3   
   1400074a2:	int3   
   1400074a3:	int3   
   1400074a4:	sub    rsp,0x28
   1400074a8:	mov    rdx,QWORD PTR [rcx+0x10]
   1400074ac:	mov    r8,QWORD PTR [rcx+0x8]
   1400074b0:	mov    rax,rdx
   1400074b3:	sub    rax,r8
   1400074b6:	sar    rax,0x4
   1400074ba:	cmp    rax,0x1
   1400074be:	jae    0x140007515
   1400074c0:	sub    r8,QWORD PTR [rcx]
   1400074c3:	movabs r9,0xfffffffffffffff
   1400074cd:	sar    r8,0x4
   1400074d1:	mov    rax,r9
   1400074d4:	sub    rax,r8
   1400074d7:	cmp    rax,0x1
   1400074db:	jae    0x1400074ea
   1400074dd:	lea    rcx,[rip+0x6fec]        # 0x14000e4d0
   1400074e4:	call   0x1400043c0
   1400074e9:	int3   
   1400074ea:	sub    rdx,QWORD PTR [rcx]
   1400074ed:	inc    r8
   1400074f0:	sar    rdx,0x4
   1400074f4:	mov    rax,rdx
   1400074f7:	shr    rax,1
   1400074fa:	sub    r9,rax
   1400074fd:	cmp    r9,rdx
   140007500:	jae    0x140007506
   140007502:	xor    edx,edx
   140007504:	jmp    0x140007509
   140007506:	add    rdx,rax
   140007509:	cmp    rdx,r8
   14000750c:	cmovb  rdx,r8
   140007510:	call   0x140002130
   140007515:	add    rsp,0x28
   140007519:	ret    
   14000751a:	int3   
   14000751b:	int3   
   14000751c:	int3   
   14000751d:	int3   
   14000751e:	int3   
   14000751f:	int3   
   140007520:	mov    QWORD PTR [rsp+0x8],rbx
   140007525:	push   rdi
   140007526:	sub    rsp,0x20
   14000752a:	mov    rax,QWORD PTR [rcx+0x8]
   14000752e:	mov    rdi,rdx
   140007531:	mov    rbx,rcx
   140007534:	cmp    rdx,rax
   140007537:	jae    0x140007555
   140007539:	cmp    QWORD PTR [rcx],rdx
   14000753c:	ja     0x140007555
   14000753e:	sub    rdi,QWORD PTR [rcx]
   140007541:	cmp    rax,QWORD PTR [rcx+0x10]
   140007545:	jne    0x14000754c
   140007547:	call   0x1400074a4
   14000754c:	and    rdi,0xfffffffffffffff0
   140007550:	add    rdi,QWORD PTR [rbx]
   140007553:	jmp    0x140007560
   140007555:	cmp    rax,QWORD PTR [rcx+0x10]
   140007559:	jne    0x140007560
   14000755b:	call   0x1400074a4
   140007560:	mov    rax,QWORD PTR [rbx+0x8]
   140007564:	test   rax,rax
   140007567:	je     0x140007570
   140007569:	movups xmm0,XMMWORD PTR [rdi]
   14000756c:	movdqu XMMWORD PTR [rax],xmm0
   140007570:	add    QWORD PTR [rbx+0x8],0x10
   140007575:	mov    rbx,QWORD PTR [rsp+0x30]
   14000757a:	add    rsp,0x20
   14000757e:	pop    rdi
   14000757f:	ret    
   140007580:	int3   
   140007581:	int3   
   140007582:	int3   
   140007583:	int3   
   140007584:	int3   
   140007585:	int3   
   140007586:	int3   
   140007587:	int3   
   140007588:	sub    rsp,0x28
   14000758c:	mov    rcx,QWORD PTR [rcx]
   14000758f:	test   rcx,rcx
   140007592:	je     0x14000759a
   140007594:	call   QWORD PTR [rip+0x3d8e]        # 0x14000b328
   14000759a:	add    rsp,0x28
   14000759e:	ret    
   14000759f:	int3   
   1400075a0:	int3   
   1400075a1:	int3   
   1400075a2:	int3   
   1400075a3:	int3   
   1400075a4:	int3   
   1400075a5:	int3   
   1400075a6:	int3   
   1400075a7:	int3   
   1400075a8:	mov    rax,rsp
   1400075ab:	mov    QWORD PTR [rax+0x10],rbx
   1400075af:	mov    QWORD PTR [rax+0x18],rsi
   1400075b3:	mov    QWORD PTR [rax+0x20],rdi
   1400075b7:	push   r14
   1400075b9:	sub    rsp,0x20
   1400075bd:	mov    rbx,rdx
   1400075c0:	mov    BYTE PTR [rax+0x8],0x0
   1400075c4:	lea    rdx,[rax+0x8]
   1400075c8:	mov    rdi,rcx
   1400075cb:	test   r8,r8
   1400075ce:	mov    r14,r9
   1400075d1:	cmovne rdx,r8
   1400075d5:	mov    rcx,rdx
   1400075d8:	call   0x1400086c8
   1400075dd:	sub    rbx,rdi
   1400075e0:	mov    rcx,rdi
   1400075e3:	cmp    rax,rbx
   1400075e6:	mov    rsi,rax
   1400075e9:	cmovb  rbx,rax
   1400075ed:	mov    r8,rbx
   1400075f0:	call   0x140005164
   1400075f5:	xor    eax,eax
   1400075f7:	cmp    rbx,0x1
   1400075fb:	cmova  rax,rdi
   1400075ff:	test   r14,r14
   140007602:	je     0x140007607
   140007604:	mov    QWORD PTR [r14],rax
   140007607:	cmp    rbx,rsi
   14000760a:	jae    0x140007617
   14000760c:	test   rbx,rbx
   14000760f:	je     0x140007617
   140007611:	xor    eax,eax
   140007613:	mov    BYTE PTR [rbx+rdi*1-0x1],al
   140007617:	mov    rsi,QWORD PTR [rsp+0x40]
   14000761c:	lea    rax,[rbx+rdi*1]
   140007620:	mov    rbx,QWORD PTR [rsp+0x38]
   140007625:	mov    rdi,QWORD PTR [rsp+0x48]
   14000762a:	add    rsp,0x20
   14000762e:	pop    r14
   140007630:	ret    
   140007631:	int3   
   140007632:	int3   
   140007633:	int3   
   140007634:	int3   
   140007635:	int3   
   140007636:	int3   
   140007637:	int3   
   140007638:	mov    rax,rsp
   14000763b:	mov    QWORD PTR [rax+0x10],rbx
   14000763f:	mov    QWORD PTR [rax+0x18],rbp
   140007643:	mov    QWORD PTR [rax+0x20],rsi
   140007647:	push   rdi
   140007648:	push   r14
   14000764a:	push   r15
   14000764c:	sub    rsp,0x20
   140007650:	xor    r15d,r15d
   140007653:	mov    rdi,rcx
   140007656:	lea    rcx,[rax+0x8]
   14000765a:	mov    WORD PTR [rax+0x8],r15w
   14000765f:	test   r8,r8
   140007662:	mov    r14,r9
   140007665:	mov    rbx,rdx
   140007668:	cmovne rcx,r8
   14000766c:	call   0x1400086f0
   140007671:	sub    rbx,rdi
   140007674:	mov    rbp,rax
   140007677:	shr    rbp,1
   14000767a:	mov    rdx,rcx
   14000767d:	shr    rbx,1
   140007680:	mov    rcx,rdi
   140007683:	cmp    rbp,rbx
   140007686:	cmovb  rbx,rbp
   14000768a:	lea    rsi,[rbx+rbx*1]
   14000768e:	mov    r8,rsi
   140007691:	call   0x140005164
   140007696:	cmp    rbx,0x1
   14000769a:	mov    eax,r15d
   14000769d:	cmova  rax,rdi
   1400076a1:	test   r14,r14
   1400076a4:	je     0x1400076a9
   1400076a6:	mov    QWORD PTR [r14],rax
   1400076a9:	cmp    rbx,rbp
   1400076ac:	jae    0x1400076ba
   1400076ae:	test   rbx,rbx
   1400076b1:	je     0x1400076ba
   1400076b3:	xor    eax,eax
   1400076b5:	mov    WORD PTR [rsi+rdi*1-0x2],ax
   1400076ba:	mov    rbx,QWORD PTR [rsp+0x48]
   1400076bf:	lea    rax,[rsi+rdi*1]
   1400076c3:	mov    rsi,QWORD PTR [rsp+0x58]
   1400076c8:	mov    rbp,QWORD PTR [rsp+0x50]
   1400076cd:	add    rsp,0x20
   1400076d1:	pop    r15
   1400076d3:	pop    r14
   1400076d5:	pop    rdi
   1400076d6:	ret    
   1400076d7:	int3   
   1400076d8:	int3   
   1400076d9:	int3   
   1400076da:	int3   
   1400076db:	int3   
   1400076dc:	int3   
   1400076dd:	int3   
   1400076de:	int3   
   1400076df:	int3   
   1400076e0:	rex push rbx
   1400076e2:	sub    rsp,0x20
   1400076e6:	movups xmm0,XMMWORD PTR [rdx]
   1400076e9:	mov    rbx,rcx
   1400076ec:	movups XMMWORD PTR [rcx],xmm0
   1400076ef:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400076f3:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400076f7:	movups xmm0,XMMWORD PTR [rdx+0x20]
   1400076fb:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400076ff:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140007703:	movups XMMWORD PTR [rcx+0x30],xmm1
   140007707:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14000770b:	movups XMMWORD PTR [rcx+0x40],xmm0
   14000770f:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140007713:	movups XMMWORD PTR [rcx+0x50],xmm1
   140007717:	movups xmm0,XMMWORD PTR [rdx+0x60]
   14000771b:	movups XMMWORD PTR [rcx+0x60],xmm0
   14000771f:	mov    ecx,0x80
   140007724:	movups xmm0,XMMWORD PTR [rdx+0x70]
   140007728:	movups XMMWORD PTR [rbx+rcx*1-0x10],xmm0
   14000772d:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140007731:	movups XMMWORD PTR [rbx+rcx*1],xmm1
   140007735:	lea    rcx,[rbx+0x90]
   14000773c:	and    QWORD PTR [rcx],0x0
   140007740:	and    QWORD PTR [rcx+0x8],0x0
   140007745:	mov    r8,QWORD PTR [rdx+0x98]
   14000774c:	mov    rdx,QWORD PTR [rdx+0x90]
   140007753:	call   0x140008a18
   140007758:	mov    rax,rbx
   14000775b:	add    rsp,0x20
   14000775f:	pop    rbx
   140007760:	ret    
   140007761:	int3   
   140007762:	int3   
   140007763:	int3   
   140007764:	int3   
   140007765:	int3   
   140007766:	int3   
   140007767:	int3   
   140007768:	add    rcx,0x90
   14000776f:	jmp    0x140008a5c
   140007774:	int3   
   140007775:	int3   
   140007776:	int3   
   140007777:	int3   
   140007778:	int3   
   140007779:	int3   
   14000777a:	int3   
   14000777b:	int3   
   14000777c:	rex push rbx
   14000777e:	sub    rsp,0x20
   140007782:	cmp    BYTE PTR [rcx+0x10],0x0
   140007786:	lea    rax,[rip+0x3e63]        # 0x14000b5f0
   14000778d:	mov    QWORD PTR [rcx],rax
   140007790:	je     0x1400077a8
   140007792:	mov    rbx,QWORD PTR [rcx+0x8]
   140007796:	mov    rcx,QWORD PTR [rbx+0x20]
   14000779a:	call   QWORD PTR [rip+0x3a90]        # 0x14000b230
   1400077a0:	and    QWORD PTR [rbx+0x20],0x0
   1400077a5:	and    DWORD PTR [rbx],0x0
   1400077a8:	add    rsp,0x20
   1400077ac:	pop    rbx
   1400077ad:	ret    
   1400077ae:	int3   
   1400077af:	int3   
   1400077b0:	int3   
   1400077b1:	int3   
   1400077b2:	int3   
   1400077b3:	int3   
   1400077b4:	int3   
   1400077b5:	int3   
   1400077b6:	int3   
   1400077b7:	int3   
   1400077b8:	int3   
   1400077b9:	int3   
   1400077ba:	int3   
   1400077bb:	int3   
   1400077bc:	int3   
   1400077bd:	int3   
   1400077be:	int3   
   1400077bf:	int3   
   1400077c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400077c5:	push   rdi
   1400077c6:	sub    rsp,0x20
   1400077ca:	mov    ebx,edx
   1400077cc:	mov    rdi,rcx
   1400077cf:	call   0x14000777c
   1400077d4:	test   bl,0x1
   1400077d7:	je     0x1400077e2
   1400077d9:	mov    rcx,rdi
   1400077dc:	call   QWORD PTR [rip+0x3b46]        # 0x14000b328
   1400077e2:	mov    rax,rdi
   1400077e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400077ea:	add    rsp,0x20
   1400077ee:	pop    rdi
   1400077ef:	ret    
   1400077f0:	int3   
   1400077f1:	int3   
   1400077f2:	int3   
   1400077f3:	int3   
   1400077f4:	int3   
   1400077f5:	int3   
   1400077f6:	int3   
   1400077f7:	int3   
   1400077f8:	int3   
   1400077f9:	int3   
   1400077fa:	int3   
   1400077fb:	int3   
   1400077fc:	int3   
   1400077fd:	int3   
   1400077fe:	int3   
   1400077ff:	int3   
   140007800:	rex push rbx
   140007802:	sub    rsp,0x20
   140007806:	lea    rcx,[rip+0x6bcb]        # 0x14000e3d8
   14000780d:	call   QWORD PTR [rip+0x38c5]        # 0x14000b0d8
   140007813:	test   rax,rax
   140007816:	je     0x14000783b
   140007818:	lea    rdx,[rip+0x6bd1]        # 0x14000e3f0
   14000781f:	mov    rcx,rax
   140007822:	call   QWORD PTR [rip+0x38a0]        # 0x14000b0c8
   140007828:	mov    rbx,rax
   14000782b:	test   rax,rax
   14000782e:	je     0x14000783b
   140007830:	mov    rcx,rax
   140007833:	call   QWORD PTR [rip+0x3b97]        # 0x14000b3d0
   140007839:	call   rbx
   14000783b:	add    rsp,0x20
   14000783f:	pop    rbx
   140007840:	ret    
   140007841:	int3   
   140007842:	int3   
   140007843:	int3   
   140007844:	int3   
   140007845:	int3   
   140007846:	int3   
   140007847:	int3   
   140007848:	sub    rsp,0x48
   14000784c:	mov    rax,QWORD PTR [rsp+0x48]
   140007851:	lea    r8,[rip+0x5c58]        # 0x14000d4b0
   140007858:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   140007860:	xor    r9d,r9d
   140007863:	mov    DWORD PTR [rsp+0x30],0x4
   14000786b:	mov    QWORD PTR [rsp+0x28],rax
   140007870:	and    QWORD PTR [rsp+0x20],0x0
   140007876:	call   0x140008340
   14000787b:	add    rsp,0x48
   14000787f:	ret    
   140007880:	int3   
   140007881:	int3   
   140007882:	int3   
   140007883:	int3   
   140007884:	int3   
   140007885:	int3   
   140007886:	int3   
   140007887:	int3   
   140007888:	int3   
   140007889:	int3   
   14000788a:	int3   
   14000788b:	int3   
   14000788c:	int3   
   14000788d:	int3   
   14000788e:	int3   
   14000788f:	int3   
   140007890:	mov    QWORD PTR [rsp+0x8],rbx
   140007895:	push   rdi
   140007896:	sub    rsp,0x20
   14000789a:	mov    rbx,rdx
   14000789d:	mov    dil,cl
   1400078a0:	call   0x140007dc8
   1400078a5:	mov    rcx,rax
   1400078a8:	mov    r8,rbx
   1400078ab:	mov    dl,dil
   1400078ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400078b3:	add    rsp,0x20
   1400078b7:	pop    rdi
   1400078b8:	jmp    0x1400081e0
   1400078bd:	int3   
   1400078be:	int3   
   1400078bf:	int3   
   1400078c0:	int3   
   1400078c1:	int3   
   1400078c2:	int3   
   1400078c3:	int3   
   1400078c4:	mov    rax,rsp
   1400078c7:	mov    QWORD PTR [rax+0x8],rbx
   1400078cb:	mov    QWORD PTR [rax+0x10],rbp
   1400078cf:	mov    QWORD PTR [rax+0x18],rsi
   1400078d3:	mov    QWORD PTR [rax+0x20],rdi
   1400078d7:	push   r14
   1400078d9:	sub    rsp,0x20
   1400078dd:	mov    rdi,rdx
   1400078e0:	mov    BYTE PTR [rdx],0x0
   1400078e3:	xor    edx,edx
   1400078e5:	mov    rbp,r8
   1400078e8:	mov    rsi,rcx
   1400078eb:	xor    r14b,r14b
   1400078ee:	call   0x1400070dc
   1400078f3:	mov    rbx,rax
   1400078f6:	test   rax,rax
   1400078f9:	je     0x140007947
   1400078fb:	cmp    QWORD PTR [rax],0x0
   1400078ff:	je     0x140007947
   140007901:	mov    BYTE PTR [rdi],r14b
   140007904:	mov    r9,rbp
   140007907:	mov    rdx,QWORD PTR [rax]
   14000790a:	mov    r8,rdi
   14000790d:	mov    rcx,rsi
   140007910:	call   0x140007cd4
   140007915:	test   al,al
   140007917:	je     0x14000791d
   140007919:	mov    QWORD PTR [rsi+0x40],rdi
   14000791d:	mov    rbp,QWORD PTR [rbx]
   140007920:	mov    rdi,QWORD PTR [rbp+0x8]
   140007924:	mov    rax,QWORD PTR [rdi]
   140007927:	mov    rbx,QWORD PTR [rax]
   14000792a:	mov    rcx,rbx
   14000792d:	call   QWORD PTR [rip+0x3a9d]        # 0x14000b3d0
   140007933:	mov    rdx,rsi
   140007936:	mov    rcx,rdi
   140007939:	call   rbx
   14000793b:	mov    rbp,QWORD PTR [rbp+0x10]
   14000793f:	or     r14b,al
   140007942:	test   rbp,rbp
   140007945:	jne    0x140007920
   140007947:	mov    rbx,QWORD PTR [rip+0xaf52]        # 0x1400128a0
   14000794e:	test   rbx,rbx
   140007951:	je     0x140007964
   140007953:	mov    rcx,rbx
   140007956:	call   QWORD PTR [rip+0x3a74]        # 0x14000b3d0
   14000795c:	mov    rdx,rsi
   14000795f:	mov    cl,r14b
   140007962:	call   rbx
   140007964:	mov    rbx,QWORD PTR [rsp+0x30]
   140007969:	mov    rbp,QWORD PTR [rsp+0x38]
   14000796e:	mov    rsi,QWORD PTR [rsp+0x40]
   140007973:	mov    rdi,QWORD PTR [rsp+0x48]
   140007978:	add    rsp,0x20
   14000797c:	pop    r14
   14000797e:	ret    
   14000797f:	int3   
   140007980:	int3   
   140007981:	int3   
   140007982:	int3   
   140007983:	int3   
   140007984:	int3   
   140007985:	int3   
   140007986:	int3   
   140007987:	int3   
   140007988:	int3   
   140007989:	int3   
   14000798a:	int3   
   14000798b:	int3   
   14000798c:	int3   
   14000798d:	int3   
   14000798e:	int3   
   14000798f:	int3   
   140007990:	mov    QWORD PTR [rsp+0x8],rbx
   140007995:	push   rsi
   140007996:	sub    rsp,0x150
   14000799d:	mov    rax,QWORD PTR [rip+0xa684]        # 0x140012028
   1400079a4:	xor    rax,rsp
   1400079a7:	mov    QWORD PTR [rsp+0x140],rax
   1400079af:	mov    al,BYTE PTR [rip+0xb05b]        # 0x140012a10
   1400079b5:	lea    rsi,[rip+0xb074]        # 0x140012a30
   1400079bc:	test   al,al
   1400079be:	jne    0x140007a74
   1400079c4:	mov    ebx,0x40
   1400079c9:	xor    edx,edx
   1400079cb:	mov    r8d,ebx
   1400079ce:	mov    rcx,rsi
   1400079d1:	call   0x1400055d6
   1400079d6:	and    QWORD PTR [rsp+0x20],0x0
   1400079dc:	lea    r8,[rsp+0x20]
   1400079e1:	lea    rdx,[rip+0xffffffffffffdc98]        # 0x140005680
   1400079e8:	lea    ecx,[rbx-0x3a]
   1400079eb:	call   QWORD PTR [rip+0x36ef]        # 0x14000b0e0
   1400079f1:	test   eax,eax
   1400079f3:	je     0x140007a6d
   1400079f5:	mov    rcx,QWORD PTR [rsp+0x20]
   1400079fa:	lea    rdx,[rsp+0x30]
   1400079ff:	mov    r8d,0x104
   140007a05:	call   QWORD PTR [rip+0x36dd]        # 0x14000b0e8
   140007a0b:	test   eax,eax
   140007a0d:	je     0x140007a6d
   140007a0f:	lea    rcx,[rsp+0x30]
   140007a14:	or     rax,0xffffffffffffffff
   140007a18:	inc    rax
   140007a1b:	cmp    BYTE PTR [rcx+rax*1],0x0
   140007a1f:	jne    0x140007a18
   140007a21:	lea    rdx,[rsp+0x30]
   140007a26:	add    rdx,rax
   140007a29:	jmp    0x140007a34
   140007a2b:	cmp    BYTE PTR [rdx-0x1],0x5c
   140007a2f:	je     0x140007a3e
   140007a31:	dec    rdx
   140007a34:	lea    rax,[rsp+0x30]
   140007a39:	cmp    rdx,rax
   140007a3c:	ja     0x140007a2b
   140007a3e:	mov    rcx,rsi
   140007a41:	sub    rdx,rsi
   140007a44:	lea    rax,[rbx+0x7fffffbe]
   140007a4b:	test   rax,rax
   140007a4e:	je     0x140007a62
   140007a50:	mov    al,BYTE PTR [rdx+rcx*1]
   140007a53:	test   al,al
   140007a55:	je     0x140007a62
   140007a57:	mov    BYTE PTR [rcx],al
   140007a59:	inc    rcx
   140007a5c:	sub    rbx,0x1
   140007a60:	jne    0x140007a44
   140007a62:	test   rbx,rbx
   140007a65:	jne    0x140007a6a
   140007a67:	dec    rcx
   140007a6a:	mov    BYTE PTR [rcx],0x0
   140007a6d:	mov    BYTE PTR [rip+0xaf9c],0x1        # 0x140012a10
   140007a74:	mov    rax,rsi
   140007a77:	mov    rcx,QWORD PTR [rsp+0x140]
   140007a7f:	xor    rcx,rsp
   140007a82:	call   0x140004dd0
   140007a87:	mov    rbx,QWORD PTR [rsp+0x160]
   140007a8f:	add    rsp,0x150
   140007a96:	pop    rsi
   140007a97:	ret    
   140007a98:	int3   
   140007a99:	int3   
   140007a9a:	int3   
   140007a9b:	int3   
   140007a9c:	int3   
   140007a9d:	int3   
   140007a9e:	int3   
   140007a9f:	int3   
   140007aa0:	mov    QWORD PTR [rsp+0x20],rbx
   140007aa5:	push   rbp
   140007aa6:	push   rsi
   140007aa7:	push   rdi
   140007aa8:	push   r14
   140007aaa:	push   r15
   140007aac:	sub    rsp,0x250
   140007ab3:	mov    rax,QWORD PTR [rip+0xa56e]        # 0x140012028
   140007aba:	xor    rax,rsp
   140007abd:	mov    QWORD PTR [rsp+0x240],rax
   140007ac5:	mov    r14,rcx
   140007ac8:	lea    rsi,[rip+0x5871]        # 0x14000d340
   140007acf:	mov    ecx,DWORD PTR [r8]
   140007ad2:	xor    r15d,r15d
   140007ad5:	mov    rbx,r8
   140007ad8:	mov    rdi,rdx
   140007adb:	test   ecx,ecx
   140007add:	je     0x140007b17
   140007adf:	sub    ecx,0x1
   140007ae2:	je     0x140007b0e
   140007ae4:	sub    ecx,0x1
   140007ae7:	je     0x140007b05
   140007ae9:	sub    ecx,0x1
   140007aec:	je     0x140007afc
   140007aee:	cmp    ecx,0x1
   140007af1:	jne    0x140007b1e
   140007af3:	lea    rsi,[rip+0x588e]        # 0x14000d388
   140007afa:	jmp    0x140007b1e
   140007afc:	lea    rsi,[rip+0x587d]        # 0x14000d380
   140007b03:	jmp    0x140007b1e
   140007b05:	lea    rsi,[rip+0x585c]        # 0x14000d368
   140007b0c:	jmp    0x140007b1e
   140007b0e:	lea    rsi,[rip+0x5843]        # 0x14000d358
   140007b15:	jmp    0x140007b1e
   140007b17:	lea    rsi,[rip+0x582a]        # 0x14000d348
   140007b1e:	mov    r8d,DWORD PTR [r8+0x4]
   140007b22:	lea    rax,[rsp+0x40]
   140007b27:	mov    QWORD PTR [rsp+0x30],r15
   140007b2c:	mov    r9d,0x400
   140007b32:	mov    DWORD PTR [rsp+0x28],0x100
   140007b3a:	xor    edx,edx
   140007b3c:	mov    ecx,0x1200
   140007b41:	mov    QWORD PTR [rsp+0x20],rax
   140007b46:	mov    WORD PTR [rsp+0x40],r15w
   140007b4c:	call   QWORD PTR [rip+0x35a6]        # 0x14000b0f8
   140007b52:	mov    r9,QWORD PTR [rbx+0x30]
   140007b56:	lea    rdi,[r14+rdi*2]
   140007b5a:	mov    rax,QWORD PTR [rbx+0x80]
   140007b61:	mov    rdx,rdi
   140007b64:	mov    rcx,r14
   140007b67:	test   r9,r9
   140007b6a:	je     0x140007b8f
   140007b6c:	mov    QWORD PTR [rsp+0x30],rax
   140007b71:	lea    r8,[rip+0x5820]        # 0x14000d398
   140007b78:	mov    rax,QWORD PTR [rbx+0x78]
   140007b7c:	mov    QWORD PTR [rsp+0x28],rax
   140007b81:	mov    eax,DWORD PTR [rbx+0x38]
   140007b84:	mov    DWORD PTR [rsp+0x20],eax
   140007b88:	call   0x1400080f8
   140007b8d:	jmp    0x140007ba4
   140007b8f:	mov    r9,QWORD PTR [rbx+0x78]
   140007b93:	lea    r8,[rip+0x5826]        # 0x14000d3c0
   140007b9a:	mov    QWORD PTR [rsp+0x20],rax
   140007b9f:	call   0x1400080f8
   140007ba4:	mov    r9,QWORD PTR [rbx+0x88]
   140007bab:	mov    rbp,rax
   140007bae:	test   r9,r9
   140007bb1:	je     0x140007bc8
   140007bb3:	lea    r8,[rip+0x581e]        # 0x14000d3d8
   140007bba:	mov    rdx,rdi
   140007bbd:	mov    rcx,rax
   140007bc0:	call   0x1400080f8
   140007bc5:	mov    rbp,rax
   140007bc8:	call   QWORD PTR [rip+0x3552]        # 0x14000b120
   140007bce:	lea    rcx,[rsp+0x40]
   140007bd3:	mov    r9,rsi
   140007bd6:	mov    QWORD PTR [rsp+0x38],rcx
   140007bdb:	lea    r8,[rip+0x5816]        # 0x14000d3f8
   140007be2:	mov    ecx,DWORD PTR [rbx+0x4]
   140007be5:	mov    rdx,rdi
   140007be8:	mov    DWORD PTR [rsp+0x30],ecx
   140007bec:	mov    rcx,rbp
   140007bef:	mov    DWORD PTR [rsp+0x28],eax
   140007bf3:	mov    eax,DWORD PTR [rbx+0x3c]
   140007bf6:	mov    DWORD PTR [rsp+0x20],eax
   140007bfa:	call   0x1400080f8
   140007bff:	cmp    QWORD PTR [rbx+0x10],r15
   140007c03:	jne    0x140007c15
   140007c05:	cmp    QWORD PTR [rbx+0x40],r15
   140007c09:	jne    0x140007c15
   140007c0b:	cmp    QWORD PTR [rbx+0x28],r15
   140007c0f:	je     0x140007ca5
   140007c15:	lea    r8,[rip+0x5814]        # 0x14000d430
   140007c1c:	mov    rdx,rdi
   140007c1f:	mov    rcx,rax
   140007c22:	call   0x1400080f8
   140007c27:	mov    r9,QWORD PTR [rbx+0x10]
   140007c2b:	test   r9,r9
   140007c2e:	je     0x140007c42
   140007c30:	lea    r8,[rip+0x5809]        # 0x14000d440
   140007c37:	mov    rdx,rdi
   140007c3a:	mov    rcx,rax
   140007c3d:	call   0x1400080f8
   140007c42:	mov    r9,QWORD PTR [rbx+0x40]
   140007c46:	test   r9,r9
   140007c49:	je     0x140007c5d
   140007c4b:	lea    r8,[rip+0x5806]        # 0x14000d458
   140007c52:	mov    rdx,rdi
   140007c55:	mov    rcx,rax
   140007c58:	call   0x1400080f8
   140007c5d:	mov    rcx,QWORD PTR [rbx+0x20]
   140007c61:	mov    rdx,rdi
   140007c64:	mov    r9,QWORD PTR [rbx+0x28]
   140007c68:	test   rcx,rcx
   140007c6b:	je     0x140007c83
   140007c6d:	mov    QWORD PTR [rsp+0x20],rcx
   140007c72:	lea    r8,[rip+0x5807]        # 0x14000d480
   140007c79:	mov    rcx,rax
   140007c7c:	call   0x1400080f8
   140007c81:	jmp    0x140007ca5
   140007c83:	mov    rcx,rax
   140007c86:	test   r9,r9
   140007c89:	je     0x140007c99
   140007c8b:	lea    r8,[rip+0x5806]        # 0x14000d498
   140007c92:	call   0x1400080f8
   140007c97:	jmp    0x140007ca5
   140007c99:	lea    r8,[rip+0x5808]        # 0x14000d4a8
   140007ca0:	call   0x1400080f8
   140007ca5:	xor    eax,eax
   140007ca7:	mov    rcx,QWORD PTR [rsp+0x240]
   140007caf:	xor    rcx,rsp
   140007cb2:	call   0x140004dd0
   140007cb7:	mov    rbx,QWORD PTR [rsp+0x298]
   140007cbf:	add    rsp,0x250
   140007cc6:	pop    r15
   140007cc8:	pop    r14
   140007cca:	pop    rdi
   140007ccb:	pop    rsi
   140007ccc:	pop    rbp
   140007ccd:	ret    
   140007cce:	int3   
   140007ccf:	int3   
   140007cd0:	int3   
   140007cd1:	int3   
   140007cd2:	int3   
   140007cd3:	int3   
   140007cd4:	mov    QWORD PTR [rsp+0x8],rbx
   140007cd9:	mov    QWORD PTR [rsp+0x10],rbp
   140007cde:	mov    QWORD PTR [rsp+0x18],rsi
   140007ce3:	push   rdi
   140007ce4:	sub    rsp,0x20
   140007ce8:	xor    al,al
   140007cea:	mov    BYTE PTR [r8],0x0
   140007cee:	mov    rbp,r9
   140007cf1:	mov    rbx,r8
   140007cf4:	mov    rsi,rdx
   140007cf7:	mov    rdi,rcx
   140007cfa:	test   rdx,rdx
   140007cfd:	je     0x140007daa
   140007d03:	mov    rdx,QWORD PTR [rdx+0x10]
   140007d07:	call   0x140007cd4
   140007d0c:	mov    rdx,QWORD PTR [rsi+0x20]
   140007d10:	xor    esi,esi
   140007d12:	test   rdx,rdx
   140007d15:	je     0x140007daa
   140007d1b:	cmp    DWORD PTR [rdx],esi
   140007d1d:	jne    0x140007d2e
   140007d1f:	lea    eax,[rsi+0x1]
   140007d22:	lock xadd DWORD PTR [rip+0xa426],eax        # 0x140012150
   140007d2a:	inc    eax
   140007d2c:	mov    DWORD PTR [rdx],eax
   140007d2e:	cmp    DWORD PTR [rdi+0x48],esi
   140007d31:	jne    0x140007d44
   140007d33:	movups xmm0,XMMWORD PTR [rdx]
   140007d36:	movups XMMWORD PTR [rdi+0x48],xmm0
   140007d3a:	movsd  xmm1,QWORD PTR [rdx+0x10]
   140007d3f:	movsd  QWORD PTR [rdi+0x58],xmm1
   140007d44:	movups xmm0,XMMWORD PTR [rdx]
   140007d47:	or     rcx,0xffffffffffffffff
   140007d4b:	mov    rax,rcx
   140007d4e:	movups XMMWORD PTR [rdi+0x60],xmm0
   140007d52:	movsd  xmm1,QWORD PTR [rdx+0x10]
   140007d57:	movsd  QWORD PTR [rdi+0x70],xmm1
   140007d5c:	lea    rdi,[rbx+rbp*1]
   140007d60:	inc    rax
   140007d63:	cmp    BYTE PTR [rbx+rax*1],sil
   140007d67:	jne    0x140007d60
   140007d69:	add    rbx,rax
   140007d6c:	mov    rax,rdi
   140007d6f:	sub    rax,rbx
   140007d72:	cmp    rax,0x2
   140007d76:	jle    0x140007da8
   140007d78:	mov    BYTE PTR [rbx],0x5c
   140007d7b:	inc    rbx
   140007d7e:	mov    rdx,QWORD PTR [rdx+0x8]
   140007d82:	inc    rcx
   140007d85:	cmp    BYTE PTR [rdx+rcx*1],sil
   140007d89:	jne    0x140007d82
   140007d8b:	inc    rcx
   140007d8e:	sub    rdi,rbx
   140007d91:	cmp    rcx,rdi
   140007d94:	cmovb  rdi,rcx
   140007d98:	mov    rcx,rbx
   140007d9b:	mov    r8,rdi
   140007d9e:	call   0x140005164
   140007da3:	mov    BYTE PTR [rdi+rbx*1-0x1],sil
   140007da8:	mov    al,0x1
   140007daa:	mov    rbx,QWORD PTR [rsp+0x30]
   140007daf:	mov    rbp,QWORD PTR [rsp+0x38]
   140007db4:	mov    rsi,QWORD PTR [rsp+0x40]
   140007db9:	add    rsp,0x20
   140007dbd:	pop    rdi
   140007dbe:	ret    
   140007dbf:	int3   
   140007dc0:	int3   
   140007dc1:	int3   
   140007dc2:	int3   
   140007dc3:	int3   
   140007dc4:	int3   
   140007dc5:	int3   
   140007dc6:	int3   
   140007dc7:	int3   
   140007dc8:	rex push rbx
   140007dca:	sub    rsp,0x30
   140007dce:	mov    eax,DWORD PTR [rip+0xaa9c]        # 0x140012870
   140007dd4:	test   al,0x1
   140007dd6:	jne    0x140007ded
   140007dd8:	or     eax,0x1
   140007ddb:	lea    rcx,[rip+0xffffffffffffddae]        # 0x140005b90
   140007de2:	mov    DWORD PTR [rip+0xaa88],eax        # 0x140012870
   140007de8:	call   0x140004e98
   140007ded:	lea    rbx,[rip+0xaa84]        # 0x140012878
   140007df4:	xor    edx,edx
   140007df6:	mov    rcx,rbx
   140007df9:	lea    r9,[rsp+0x48]
   140007dfe:	lea    r8,[rsp+0x40]
   140007e03:	call   QWORD PTR [rip+0x33bf]        # 0x14000b1c8
   140007e09:	cmp    DWORD PTR [rsp+0x40],0x0
   140007e0e:	je     0x140007e4c
   140007e10:	lea    rax,[rip+0xaa69]        # 0x140012880
   140007e17:	mov    QWORD PTR [rsp+0x20],rbx
   140007e1c:	mov    QWORD PTR [rsp+0x48],rax
   140007e21:	lea    rax,[rip+0x37c8]        # 0x14000b5f0
   140007e28:	mov    QWORD PTR [rip+0xaa51],rax        # 0x140012880
   140007e2f:	and    DWORD PTR [rsp+0x28],0x0
   140007e34:	lea    rax,[rip+0xa2d5]        # 0x140012110
   140007e3b:	lea    rcx,[rsp+0x20]
   140007e40:	mov    QWORD PTR [rip+0xaa51],rax        # 0x140012898
   140007e47:	call   0x1400031b0
   140007e4c:	mov    rax,QWORD PTR [rsp+0x48]
   140007e51:	add    rsp,0x30
   140007e55:	pop    rbx
   140007e56:	ret    
   140007e57:	int3   
   140007e58:	int3   
   140007e59:	int3   
   140007e5a:	int3   
   140007e5b:	int3   
   140007e5c:	int3   
   140007e5d:	int3   
   140007e5e:	int3   
   140007e5f:	int3   
   140007e60:	mov    QWORD PTR [rsp+0x18],rbx
   140007e65:	mov    DWORD PTR [rsp+0x10],edx
   140007e69:	mov    QWORD PTR [rsp+0x8],rcx
   140007e6e:	push   rbp
   140007e6f:	push   rsi
   140007e70:	push   rdi
   140007e71:	push   r12
   140007e73:	push   r13
   140007e75:	push   r14
   140007e77:	push   r15
   140007e79:	sub    rsp,0x40
   140007e7d:	mov    r15d,DWORD PTR [rsp+0xb0]
   140007e85:	mov    r13,r8
   140007e88:	mov    r14,QWORD PTR [rsp+0xd0]
   140007e90:	xor    r8d,r8d
   140007e93:	mov    rax,QWORD PTR [rsp+0xe0]
   140007e9b:	mov    r12,r9
   140007e9e:	mov    edi,DWORD PTR [rsp+0xb8]
   140007ea5:	mov    ebp,r8d
   140007ea8:	mov    r10d,r15d
   140007eab:	mov    WORD PTR [r14],r8w
   140007eaf:	mov    BYTE PTR [rax],r8b
   140007eb2:	test   r15d,r15d
   140007eb5:	je     0x140007f2a
   140007eb7:	sub    r10d,0x1
   140007ebb:	je     0x140007f21
   140007ebd:	sub    r10d,0x1
   140007ec1:	je     0x140007f18
   140007ec3:	sub    r10d,0x1
   140007ec7:	je     0x140007ed8
   140007ec9:	cmp    r10d,0x1
   140007ecd:	jne    0x140007f33
   140007ecf:	mov    ecx,edi
   140007ed1:	call   0x140005680
   140007ed6:	jmp    0x140007f31
   140007ed8:	test   edi,edi
   140007eda:	js     0x140007f0f
   140007edc:	mov    rax,QWORD PTR [rsp+0xa8]
   140007ee4:	mov    edi,0x8007029c
   140007ee9:	mov    DWORD PTR [rsp+0x38],edi
   140007eed:	mov    r8,r13
   140007ef0:	mov    DWORD PTR [rsp+0x30],0x3
   140007ef8:	mov    QWORD PTR [rsp+0x28],rax
   140007efd:	mov    rax,QWORD PTR [rsp+0xa0]
   140007f05:	mov    QWORD PTR [rsp+0x20],rax
   140007f0a:	call   0x140008340
   140007f0f:	mov    ecx,edi
   140007f11:	call   0x14000568c
   140007f16:	jmp    0x140007f31
   140007f18:	mov    ecx,edi
   140007f1a:	call   0x1400056bc
   140007f1f:	jmp    0x140007f31
   140007f21:	mov    ecx,edi
   140007f23:	call   0x1400056a4
   140007f28:	jmp    0x140007f31
   140007f2a:	mov    ecx,edi
   140007f2c:	call   0x140005660
   140007f31:	mov    ebp,eax
   140007f33:	mov    rbx,QWORD PTR [rsp+0xf0]
   140007f3b:	mov    esi,0x1
   140007f40:	mov    eax,esi
   140007f42:	mov    DWORD PTR [rbx],r15d
   140007f45:	mov    DWORD PTR [rbx+0x4],edi
   140007f48:	lock xadd DWORD PTR [rip+0xaa64],eax        # 0x1400129b4
   140007f50:	add    eax,esi
   140007f52:	xor    ecx,ecx
   140007f54:	mov    DWORD PTR [rbx+0x8],eax
   140007f57:	mov    rax,QWORD PTR [rsp+0xc0]
   140007f5f:	test   rax,rax
   140007f62:	je     0x140007f69
   140007f64:	cmp    WORD PTR [rax],cx
   140007f67:	jne    0x140007f6c
   140007f69:	mov    rax,rcx
   140007f6c:	mov    QWORD PTR [rbx+0x10],rax
   140007f70:	call   QWORD PTR [rip+0x31aa]        # 0x14000b120
   140007f76:	mov    rdi,QWORD PTR [rip+0xa93b]        # 0x1400128b8
   140007f7d:	mov    DWORD PTR [rbx+0x18],eax
   140007f80:	mov    eax,DWORD PTR [rsp+0x88]
   140007f87:	mov    DWORD PTR [rbx+0x38],eax
   140007f8a:	mov    rax,QWORD PTR [rsp+0xa0]
   140007f92:	mov    QWORD PTR [rbx+0x20],rax
   140007f96:	mov    rax,QWORD PTR [rsp+0xa8]
   140007f9e:	mov    QWORD PTR [rbx+0x80],rax
   140007fa5:	mov    rax,QWORD PTR [rsp+0x80]
   140007fad:	mov    DWORD PTR [rbx+0x3c],ebp
   140007fb0:	xor    ebp,ebp
   140007fb2:	mov    QWORD PTR [rbx+0x88],rax
   140007fb9:	mov    QWORD PTR [rbx+0x30],r13
   140007fbd:	mov    QWORD PTR [rbx+0x28],r12
   140007fc1:	mov    QWORD PTR [rbx+0x40],rbp
   140007fc5:	mov    DWORD PTR [rbx+0x60],ebp
   140007fc8:	mov    QWORD PTR [rbx+0x68],rbp
   140007fcc:	mov    QWORD PTR [rbx+0x70],rbp
   140007fd0:	mov    DWORD PTR [rbx+0x48],ebp
   140007fd3:	mov    QWORD PTR [rbx+0x50],rbp
   140007fd7:	mov    QWORD PTR [rbx+0x58],rbp
   140007fdb:	test   rdi,rdi
   140007fde:	je     0x140007fed
   140007fe0:	mov    rcx,rdi
   140007fe3:	call   QWORD PTR [rip+0x33e7]        # 0x14000b3d0
   140007fe9:	call   rdi
   140007feb:	jmp    0x140007ff0
   140007fed:	mov    rax,rbp
   140007ff0:	mov    rdx,QWORD PTR [rsp+0xe0]
   140007ff8:	mov    r8d,0x400
   140007ffe:	mov    rcx,rbx
   140008001:	mov    QWORD PTR [rbx+0x78],rax
   140008005:	call   0x1400078c4
   14000800a:	mov    rdi,QWORD PTR [rip+0xa9b7]        # 0x1400129c8
   140008011:	test   rdi,rdi
   140008014:	je     0x140008024
   140008016:	mov    rcx,rdi
   140008019:	call   QWORD PTR [rip+0x33b1]        # 0x14000b3d0
   14000801f:	mov    rcx,rbx
   140008022:	call   rdi
   140008024:	cmp    DWORD PTR [rbx+0x4],ebp
   140008027:	jl     0x140008046
   140008029:	cmp    r15d,0x4
   14000802d:	je     0x140008046
   14000802f:	mov    rcx,QWORD PTR [rsp+0x78]
   140008034:	lea    r8,[rip+0x5475]        # 0x14000d4b0
   14000803b:	mov    edx,0xb46
   140008040:	call   0x1400089e0
   140008045:	int3   
   140008046:	cmp    BYTE PTR [rip+0xa9a3],bpl        # 0x1400129f0
   14000804d:	mov    rdi,QWORD PTR [rip+0xa9a4]        # 0x1400129f8
   140008054:	jne    0x140008067
   140008056:	cmp    QWORD PTR [rip+0xa843],rbp        # 0x1400128a0
   14000805d:	jne    0x140008064
   14000805f:	test   rdi,rdi
   140008062:	je     0x140008067
   140008064:	mov    sil,bpl
   140008067:	cmp    BYTE PTR [rsp+0xc8],bpl
   14000806f:	jne    0x140008099
   140008071:	test   sil,sil
   140008074:	jne    0x140008099
   140008076:	test   rdi,rdi
   140008079:	je     0x1400080da
   14000807b:	cmp    BYTE PTR [rip+0xa95e],bpl        # 0x1400129e0
   140008082:	jne    0x1400080da
   140008084:	mov    rcx,rdi
   140008087:	call   QWORD PTR [rip+0x3343]        # 0x14000b3d0
   14000808d:	xor    r8d,r8d
   140008090:	xor    edx,edx
   140008092:	mov    rcx,rbx
   140008095:	call   rdi
   140008097:	jmp    0x1400080da
   140008099:	mov    r15d,0x800
   14000809f:	test   rdi,rdi
   1400080a2:	je     0x1400080b8
   1400080a4:	mov    rcx,rdi
   1400080a7:	call   QWORD PTR [rip+0x3323]        # 0x14000b3d0
   1400080ad:	mov    r8d,r15d
   1400080b0:	mov    rdx,r14
   1400080b3:	mov    rcx,rbx
   1400080b6:	call   rdi
   1400080b8:	cmp    WORD PTR [r14],bp
   1400080bc:	jne    0x1400080cc
   1400080be:	mov    r8,rbx
   1400080c1:	mov    rdx,r15
   1400080c4:	mov    rcx,r14
   1400080c7:	call   0x140007aa0
   1400080cc:	test   sil,sil
   1400080cf:	je     0x1400080da
   1400080d1:	mov    rcx,r14
   1400080d4:	call   QWORD PTR [rip+0x2f96]        # 0x14000b070
   1400080da:	mov    rbx,QWORD PTR [rsp+0x90]
   1400080e2:	add    rsp,0x40
   1400080e6:	pop    r15
   1400080e8:	pop    r14
   1400080ea:	pop    r13
   1400080ec:	pop    r12
   1400080ee:	pop    rdi
   1400080ef:	pop    rsi
   1400080f0:	pop    rbp
   1400080f1:	ret    
   1400080f2:	int3   
   1400080f3:	int3   
   1400080f4:	int3   
   1400080f5:	int3   
   1400080f6:	int3   
   1400080f7:	int3   
   1400080f8:	mov    QWORD PTR [rsp+0x18],r8
   1400080fd:	mov    QWORD PTR [rsp+0x20],r9
   140008102:	push   rbx
   140008103:	push   rsi
   140008104:	push   rdi
   140008105:	sub    rsp,0x20
   140008109:	mov    r10,rdx
   14000810c:	lea    r9,[rsp+0x58]
   140008111:	sub    r10,rcx
   140008114:	mov    rsi,rdx
   140008117:	sar    r10,1
   14000811a:	mov    rbx,rcx
   14000811d:	lea    rax,[r10-0x1]
   140008121:	cmp    rax,0x7ffffffe
   140008127:	ja     0x14000814b
   140008129:	lea    rdi,[r10-0x1]
   14000812d:	mov    rdx,rdi
   140008130:	call   QWORD PTR [rip+0x3272]        # 0x14000b3a8
   140008136:	xor    ecx,ecx
   140008138:	test   eax,eax
   14000813a:	js     0x140008145
   14000813c:	cdqe   
   14000813e:	cmp    rax,rdi
   140008141:	ja     0x140008145
   140008143:	jne    0x140008155
   140008145:	mov    WORD PTR [rbx+rdi*2],cx
   140008149:	jmp    0x140008155
   14000814b:	xor    ecx,ecx
   14000814d:	test   r10,r10
   140008150:	je     0x140008155
   140008152:	mov    WORD PTR [rbx],cx
   140008155:	cmp    rsi,rbx
   140008158:	je     0x14000816b
   14000815a:	or     rax,0xffffffffffffffff
   14000815e:	inc    rax
   140008161:	cmp    WORD PTR [rbx+rax*2],cx
   140008165:	jne    0x14000815e
   140008167:	lea    rbx,[rbx+rax*2]
   14000816b:	mov    rax,rbx
   14000816e:	add    rsp,0x20
   140008172:	pop    rdi
   140008173:	pop    rsi
   140008174:	pop    rbx
   140008175:	ret    
   140008176:	int3   
   140008177:	int3   
   140008178:	int3   
   140008179:	int3   
   14000817a:	int3   
   14000817b:	int3   
   14000817c:	int3   
   14000817d:	int3   
   14000817e:	int3   
   14000817f:	int3   
   140008180:	mov    QWORD PTR [rsp+0x8],rbx
   140008185:	mov    QWORD PTR [rsp+0x10],rsi
   14000818a:	push   rdi
   14000818b:	sub    rsp,0x20
   14000818f:	mov    r8d,DWORD PTR [rdx+0x8]
   140008193:	mov    rdi,rdx
   140008196:	mov    eax,DWORD PTR [rip+0xa0ac]        # 0x140012248
   14000819c:	mov    rsi,rcx
   14000819f:	mov    DWORD PTR [rip+0xa0a2],r8d        # 0x140012248
   1400081a6:	cmp    eax,r8d
   1400081a9:	je     0x1400081c5
   1400081ab:	mov    rax,QWORD PTR [rcx]
   1400081ae:	mov    rbx,QWORD PTR [rax+0x10]
   1400081b2:	mov    rcx,rbx
   1400081b5:	call   QWORD PTR [rip+0x3215]        # 0x14000b3d0
   1400081bb:	mov    r8,rdi
   1400081be:	xor    edx,edx
   1400081c0:	mov    rcx,rsi
   1400081c3:	call   rbx
   1400081c5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400081ca:	mov    al,0x1
   1400081cc:	mov    rsi,QWORD PTR [rsp+0x38]
   1400081d1:	add    rsp,0x20
   1400081d5:	pop    rdi
   1400081d6:	ret    
   1400081d7:	int3   
   1400081d8:	int3   
   1400081d9:	int3   
   1400081da:	int3   
   1400081db:	int3   
   1400081dc:	int3   
   1400081dd:	int3   
   1400081de:	int3   
   1400081df:	int3   
   1400081e0:	sub    rsp,0x28
   1400081e4:	test   dl,dl
   1400081e6:	jne    0x140008208
   1400081e8:	cmp    DWORD PTR [rcx+0x14],0x1
   1400081ec:	jne    0x1400081fa
   1400081ee:	mov    rdx,r8
   1400081f1:	add    rsp,0x28
   1400081f5:	jmp    0x140008384
   1400081fa:	cmp    DWORD PTR [rcx+0x14],0x2
   1400081fe:	jne    0x140008208
   140008200:	mov    rdx,r8
   140008203:	call   0x140008510
   140008208:	add    rsp,0x28
   14000820c:	ret    
   14000820d:	int3   
   14000820e:	int3   
   14000820f:	int3   
   140008210:	int3   
   140008211:	int3   
   140008212:	int3   
   140008213:	int3   
   140008214:	rex push rbx
   140008216:	push   rdi
   140008217:	mov    eax,0x15c8
   14000821c:	call   0x140005610
   140008221:	sub    rsp,rax
   140008224:	mov    rax,QWORD PTR [rip+0x9dfd]        # 0x140012028
   14000822b:	xor    rax,rsp
   14000822e:	mov    QWORD PTR [rsp+0x15b0],rax
   140008236:	mov    edi,DWORD PTR [rsp+0x1610]
   14000823d:	mov    r10,QWORD PTR [rsp+0x1600]
   140008245:	mov    r11,QWORD PTR [rsp+0x1608]
   14000824d:	test   edi,edi
   14000824f:	jne    0x14000825f
   140008251:	cmp    QWORD PTR [rip+0xa777],0x0        # 0x1400129d0
   140008259:	je     0x14000825f
   14000825b:	mov    bl,0x1
   14000825d:	jmp    0x140008261
   14000825f:	xor    bl,bl
   140008261:	lea    rax,[rsp+0x120]
   140008269:	mov    QWORD PTR [rsp+0x70],rax
   14000826e:	lea    rax,[rsp+0x1b0]
   140008276:	mov    QWORD PTR [rsp+0x60],rax
   14000827b:	lea    rax,[rsp+0x5b0]
   140008283:	mov    QWORD PTR [rsp+0x50],rax
   140008288:	mov    eax,DWORD PTR [rsp+0x1618]
   14000828f:	mov    BYTE PTR [rsp+0x48],bl
   140008293:	and    QWORD PTR [rsp+0x40],0x0
   140008299:	mov    DWORD PTR [rsp+0x38],eax
   14000829d:	mov    DWORD PTR [rsp+0x30],edi
   1400082a1:	mov    QWORD PTR [rsp+0x28],r11
   1400082a6:	mov    QWORD PTR [rsp+0x20],r10
   1400082ab:	call   0x140007e60
   1400082b0:	cmp    edi,0x4
   1400082b3:	jne    0x1400082d4
   1400082b5:	lea    ecx,[rdi+0x3]
   1400082b8:	int    0x29
   1400082ba:	mov    rcx,QWORD PTR [rsp+0x15b0]
   1400082c2:	xor    rcx,rsp
   1400082c5:	call   0x140004dd0
   1400082ca:	add    rsp,0x15c8
   1400082d1:	pop    rdi
   1400082d2:	pop    rbx
   1400082d3:	ret    
   1400082d4:	test   edi,edi
   1400082d6:	jne    0x1400082ba
   1400082d8:	test   bl,bl
   1400082da:	je     0x1400082fe
   1400082dc:	mov    rbx,QWORD PTR [rip+0xa6ed]        # 0x1400129d0
   1400082e3:	mov    rcx,rbx
   1400082e6:	call   QWORD PTR [rip+0x30e4]        # 0x14000b3d0
   1400082ec:	lea    rdx,[rsp+0x5b0]
   1400082f4:	lea    rcx,[rsp+0x120]
   1400082fc:	call   rbx
   1400082fe:	and    QWORD PTR [rsp+0x110],0x0
   140008307:	lea    rdx,[rsp+0x120]
   14000830f:	and    QWORD PTR [rsp+0x118],0x0
   140008318:	lea    rcx,[rsp+0x80]
   140008320:	call   0x1400087b0
   140008325:	lea    rdx,[rip+0x7ccc]        # 0x14000fff8
   14000832c:	lea    rcx,[rsp+0x80]
   140008334:	call   0x14000514c
   140008339:	int3   
   14000833a:	int3   
   14000833b:	int3   
   14000833c:	int3   
   14000833d:	int3   
   14000833e:	int3   
   14000833f:	int3   
   140008340:	sub    rsp,0x58
   140008344:	mov    eax,DWORD PTR [rsp+0x98]
   14000834b:	mov    DWORD PTR [rsp+0x38],eax
   14000834f:	mov    eax,DWORD PTR [rsp+0x90]
   140008356:	mov    DWORD PTR [rsp+0x30],eax
   14000835a:	mov    rax,QWORD PTR [rsp+0x88]
   140008362:	mov    QWORD PTR [rsp+0x28],rax
   140008367:	mov    rax,QWORD PTR [rsp+0x80]
   14000836f:	mov    QWORD PTR [rsp+0x20],rax
   140008374:	call   0x140008214
   140008379:	add    rsp,0x58
   14000837d:	ret    
   14000837e:	int3   
   14000837f:	int3   
   140008380:	int3   
   140008381:	int3   
   140008382:	int3   
   140008383:	int3   
   140008384:	mov    QWORD PTR [rsp+0x18],rbx
   140008389:	push   rbp
   14000838a:	lea    rbp,[rsp-0x60]
   14000838f:	sub    rsp,0x160
   140008396:	mov    rax,QWORD PTR [rip+0x9c8b]        # 0x140012028
   14000839d:	xor    rax,rsp
   1400083a0:	mov    QWORD PTR [rbp+0x50],rax
   1400083a4:	mov    r10,QWORD PTR [rcx+0x8]
   1400083a8:	mov    r11,rdx
   1400083ab:	cmp    DWORD PTR [r10],0x5
   1400083af:	jbe    0x1400084ec
   1400083b5:	movabs rdx,0x200000000000
   1400083bf:	mov    rcx,r10
   1400083c2:	call   0x140003070
   1400083c7:	test   al,al
   1400083c9:	je     0x1400084ec
   1400083cf:	mov    eax,DWORD PTR [r11+0x4]
   1400083d3:	lea    rcx,[rbp-0x80]
   1400083d7:	mov    rdx,QWORD PTR [r11+0x30]
   1400083db:	mov    ebx,0x4
   1400083e0:	and    DWORD PTR [rsp+0x7c],0x0
   1400083e5:	mov    DWORD PTR [rsp+0x40],eax
   1400083e9:	lea    rax,[rsp+0x40]
   1400083ee:	mov    QWORD PTR [rsp+0x70],rax
   1400083f3:	mov    DWORD PTR [rsp+0x78],ebx
   1400083f7:	call   0x140008a98
   1400083fc:	mov    rdx,QWORD PTR [r11+0x78]
   140008400:	lea    rcx,[r11+0x38]
   140008404:	and    DWORD PTR [rbp-0x64],0x0
   140008408:	mov    QWORD PTR [rbp-0x70],rcx
   14000840c:	lea    rcx,[rbp-0x60]
   140008410:	mov    DWORD PTR [rbp-0x68],ebx
   140008413:	call   0x140008a98
   140008418:	mov    ecx,DWORD PTR [r11]
   14000841b:	lea    rax,[rsp+0x38]
   140008420:	mov    rdx,QWORD PTR [r11+0x10]
   140008424:	and    DWORD PTR [rbp-0x44],0x0
   140008428:	mov    DWORD PTR [rsp+0x38],ecx
   14000842c:	lea    rcx,[rbp-0x40]
   140008430:	mov    QWORD PTR [rbp-0x50],rax
   140008434:	mov    DWORD PTR [rbp-0x48],ebx
   140008437:	call   0x140008acc
   14000843c:	mov    ecx,DWORD PTR [r11+0x18]
   140008440:	lea    rax,[rsp+0x30]
   140008445:	mov    rdx,QWORD PTR [r11+0x40]
   140008449:	and    DWORD PTR [rbp-0x24],0x0
   14000844d:	mov    DWORD PTR [rsp+0x30],ecx
   140008451:	lea    rcx,[rbp-0x20]
   140008455:	mov    QWORD PTR [rbp-0x30],rax
   140008459:	mov    DWORD PTR [rbp-0x28],ebx
   14000845c:	call   0x140008a98
   140008461:	mov    ecx,DWORD PTR [r11+0x48]
   140008465:	lea    rax,[rsp+0x34]
   14000846a:	mov    rdx,QWORD PTR [r11+0x50]
   14000846e:	and    DWORD PTR [rbp-0x4],0x0
   140008472:	mov    DWORD PTR [rsp+0x34],ecx
   140008476:	lea    rcx,[rbp+0x0]
   14000847a:	mov    QWORD PTR [rbp-0x10],rax
   14000847e:	mov    DWORD PTR [rbp-0x8],ebx
   140008481:	call   0x140008a98
   140008486:	mov    rdx,QWORD PTR [r11+0x58]
   14000848a:	lea    rcx,[rbp+0x10]
   14000848e:	call   0x140008acc
   140008493:	mov    ecx,DWORD PTR [r11+0x60]
   140008497:	lea    rax,[rsp+0x3c]
   14000849c:	mov    rdx,QWORD PTR [r11+0x68]
   1400084a0:	and    DWORD PTR [rbp+0x2c],0x0
   1400084a4:	mov    DWORD PTR [rsp+0x3c],ecx
   1400084a8:	lea    rcx,[rbp+0x30]
   1400084ac:	mov    QWORD PTR [rbp+0x20],rax
   1400084b0:	mov    DWORD PTR [rbp+0x28],ebx
   1400084b3:	call   0x140008a98
   1400084b8:	mov    rdx,QWORD PTR [r11+0x70]
   1400084bc:	lea    rcx,[rbp+0x40]
   1400084c0:	call   0x140008acc
   1400084c5:	lea    rax,[rsp+0x50]
   1400084ca:	xor    r9d,r9d
   1400084cd:	mov    QWORD PTR [rsp+0x28],rax
   1400084d2:	lea    rdx,[rip+0x53a8]        # 0x14000d881
   1400084d9:	xor    r8d,r8d
   1400084dc:	mov    DWORD PTR [rsp+0x20],0x10
   1400084e4:	mov    rcx,r10
   1400084e7:	call   0x140002fc0
   1400084ec:	mov    rcx,QWORD PTR [rbp+0x50]
   1400084f0:	xor    rcx,rsp
   1400084f3:	call   0x140004dd0
   1400084f8:	mov    rbx,QWORD PTR [rsp+0x180]
   140008500:	add    rsp,0x160
   140008507:	pop    rbp
   140008508:	ret    
   140008509:	int3   
   14000850a:	int3   
   14000850b:	int3   
   14000850c:	int3   
   14000850d:	int3   
   14000850e:	int3   
   14000850f:	int3   
   140008510:	mov    QWORD PTR [rsp+0x18],rdi
   140008515:	push   rbp
   140008516:	lea    rbp,[rsp-0x90]
   14000851e:	sub    rsp,0x190
   140008525:	mov    rax,QWORD PTR [rip+0x9afc]        # 0x140012028
   14000852c:	xor    rax,rsp
   14000852f:	mov    QWORD PTR [rbp+0x80],rax
   140008536:	mov    r11,QWORD PTR [rcx+0x8]
   14000853a:	mov    r10,rdx
   14000853d:	cmp    DWORD PTR [r11],0x5
   140008541:	jbe    0x1400086a0
   140008547:	mov    eax,DWORD PTR [rdx+0x4]
   14000854a:	lea    rcx,[rbp-0x80]
   14000854e:	mov    rdx,QWORD PTR [rdx+0x30]
   140008552:	mov    edi,0x4
   140008557:	and    DWORD PTR [rsp+0x7c],0x0
   14000855c:	mov    DWORD PTR [rsp+0x40],eax
   140008560:	lea    rax,[rsp+0x40]
   140008565:	mov    QWORD PTR [rsp+0x70],rax
   14000856a:	mov    DWORD PTR [rsp+0x78],edi
   14000856e:	call   0x140008a98
   140008573:	mov    rdx,QWORD PTR [r10+0x78]
   140008577:	lea    rcx,[r10+0x38]
   14000857b:	and    DWORD PTR [rbp-0x64],0x0
   14000857f:	mov    QWORD PTR [rbp-0x70],rcx
   140008583:	lea    rcx,[rbp-0x60]
   140008587:	mov    DWORD PTR [rbp-0x68],edi
   14000858a:	call   0x140008a98
   14000858f:	mov    ecx,DWORD PTR [r10]
   140008592:	lea    rax,[rsp+0x38]
   140008597:	mov    rdx,QWORD PTR [r10+0x10]
   14000859b:	and    DWORD PTR [rbp-0x44],0x0
   14000859f:	mov    DWORD PTR [rsp+0x38],ecx
   1400085a3:	lea    rcx,[rbp-0x40]
   1400085a7:	mov    QWORD PTR [rbp-0x50],rax
   1400085ab:	mov    DWORD PTR [rbp-0x48],edi
   1400085ae:	call   0x140008acc
   1400085b3:	mov    ecx,DWORD PTR [r10+0x18]
   1400085b7:	lea    rax,[rsp+0x48]
   1400085bc:	mov    rdx,QWORD PTR [r10+0x40]
   1400085c0:	and    DWORD PTR [rbp-0x24],0x0
   1400085c4:	mov    DWORD PTR [rsp+0x48],ecx
   1400085c8:	lea    rcx,[rbp-0x20]
   1400085cc:	mov    QWORD PTR [rbp-0x30],rax
   1400085d0:	mov    DWORD PTR [rbp-0x28],edi
   1400085d3:	call   0x140008a98
   1400085d8:	mov    ecx,DWORD PTR [r10+0x48]
   1400085dc:	lea    rax,[rsp+0x30]
   1400085e1:	mov    rdx,QWORD PTR [r10+0x50]
   1400085e5:	and    DWORD PTR [rbp-0x4],0x0
   1400085e9:	mov    DWORD PTR [rsp+0x30],ecx
   1400085ed:	lea    rcx,[rbp+0x0]
   1400085f1:	mov    QWORD PTR [rbp-0x10],rax
   1400085f5:	mov    DWORD PTR [rbp-0x8],edi
   1400085f8:	call   0x140008a98
   1400085fd:	mov    rdx,QWORD PTR [r10+0x58]
   140008601:	lea    rcx,[rbp+0x10]
   140008605:	call   0x140008acc
   14000860a:	mov    ecx,DWORD PTR [r10+0x60]
   14000860e:	lea    rax,[rsp+0x34]
   140008613:	mov    rdx,QWORD PTR [r10+0x68]
   140008617:	and    DWORD PTR [rbp+0x2c],0x0
   14000861b:	mov    DWORD PTR [rsp+0x34],ecx
   14000861f:	lea    rcx,[rbp+0x30]
   140008623:	mov    QWORD PTR [rbp+0x20],rax
   140008627:	mov    DWORD PTR [rbp+0x28],edi
   14000862a:	call   0x140008a98
   14000862f:	mov    rdx,QWORD PTR [r10+0x70]
   140008633:	lea    rcx,[rbp+0x40]
   140008637:	call   0x140008acc
   14000863c:	mov    ecx,DWORD PTR [r10+0x8]
   140008640:	lea    rax,[rsp+0x3c]
   140008645:	and    DWORD PTR [rbp+0x5c],0x0
   140008649:	and    DWORD PTR [rbp+0x6c],0x0
   14000864d:	mov    rdx,QWORD PTR [r10+0x28]
   140008651:	mov    QWORD PTR [rbp+0x50],rax
   140008655:	mov    eax,DWORD PTR [r10+0x3c]
   140008659:	mov    DWORD PTR [rsp+0x44],eax
   14000865d:	lea    rax,[rsp+0x44]
   140008662:	mov    DWORD PTR [rsp+0x3c],ecx
   140008666:	lea    rcx,[rbp+0x70]
   14000866a:	mov    QWORD PTR [rbp+0x60],rax
   14000866e:	mov    DWORD PTR [rbp+0x58],edi
   140008671:	mov    DWORD PTR [rbp+0x68],edi
   140008674:	call   0x140008a98
   140008679:	lea    rax,[rsp+0x50]
   14000867e:	xor    r9d,r9d
   140008681:	mov    QWORD PTR [rsp+0x28],rax
   140008686:	lea    rdx,[rip+0x52f7]        # 0x14000d984
   14000868d:	xor    r8d,r8d
   140008690:	mov    DWORD PTR [rsp+0x20],0x13
   140008698:	mov    rcx,r11
   14000869b:	call   0x140002fc0
   1400086a0:	mov    rcx,QWORD PTR [rbp+0x80]
   1400086a7:	xor    rcx,rsp
   1400086aa:	call   0x140004dd0
   1400086af:	mov    rdi,QWORD PTR [rsp+0x1b0]
   1400086b7:	add    rsp,0x190
   1400086be:	pop    rbp
   1400086bf:	ret    
   1400086c0:	int3   
   1400086c1:	int3   
   1400086c2:	int3   
   1400086c3:	int3   
   1400086c4:	int3   
   1400086c5:	int3   
   1400086c6:	int3   
   1400086c7:	int3   
   1400086c8:	mov    rax,rcx
   1400086cb:	test   rcx,rcx
   1400086ce:	jne    0x1400086d4
   1400086d0:	lea    eax,[rcx+0x1]
   1400086d3:	ret    
   1400086d4:	or     rcx,0xffffffffffffffff
   1400086d8:	inc    rcx
   1400086db:	cmp    BYTE PTR [rax+rcx*1],0x0
   1400086df:	jne    0x1400086d8
   1400086e1:	mov    eax,0x1
   1400086e6:	add    rax,rcx
   1400086e9:	ret    
   1400086ea:	int3   
   1400086eb:	int3   
   1400086ec:	int3   
   1400086ed:	int3   
   1400086ee:	int3   
   1400086ef:	int3   
   1400086f0:	xor    edx,edx
   1400086f2:	test   rcx,rcx
   1400086f5:	jne    0x1400086fb
   1400086f7:	lea    eax,[rdx+0x2]
   1400086fa:	ret    
   1400086fb:	or     rax,0xffffffffffffffff
   1400086ff:	inc    rax
   140008702:	cmp    WORD PTR [rcx+rax*2],dx
   140008706:	jne    0x1400086ff
   140008708:	lea    rax,[rax*2+0x2]
   140008710:	ret    
   140008711:	int3   
   140008712:	int3   
   140008713:	int3   
   140008714:	int3   
   140008715:	int3   
   140008716:	int3   
   140008717:	int3   
   140008718:	int3   
   140008719:	int3   
   14000871a:	int3   
   14000871b:	int3   
   14000871c:	int3   
   14000871d:	int3   
   14000871e:	int3   
   14000871f:	int3   
   140008720:	mov    QWORD PTR [rsp+0x8],rbx
   140008725:	mov    QWORD PTR [rsp+0x10],rsi
   14000872a:	push   rdi
   14000872b:	sub    rsp,0x20
   14000872f:	mov    rdi,QWORD PTR [rip+0xa2d2]        # 0x140012a08
   140008736:	xor    ebx,ebx
   140008738:	mov    esi,ecx
   14000873a:	test   rdi,rdi
   14000873d:	jne    0x140008786
   14000873f:	mov    rax,QWORD PTR [rip+0xa2ba]        # 0x140012a00
   140008746:	test   rax,rax
   140008749:	jne    0x140008767
   14000874b:	xor    edx,edx
   14000874d:	lea    rcx,[rip+0x5c84]        # 0x14000e3d8
   140008754:	mov    r8d,0x800
   14000875a:	call   QWORD PTR [rip+0x2970]        # 0x14000b0d0
   140008760:	mov    QWORD PTR [rip+0xa299],rax        # 0x140012a00
   140008767:	lea    rdx,[rip+0x5ca2]        # 0x14000e410
   14000876e:	mov    rcx,rax
   140008771:	call   QWORD PTR [rip+0x2951]        # 0x14000b0c8
   140008777:	mov    QWORD PTR [rip+0xa28a],rax        # 0x140012a08
   14000877e:	mov    rdi,rax
   140008781:	test   rax,rax
   140008784:	je     0x140008795
   140008786:	mov    rcx,rdi
   140008789:	call   QWORD PTR [rip+0x2c41]        # 0x14000b3d0
   14000878f:	mov    ecx,esi
   140008791:	call   rdi
   140008793:	mov    ebx,eax
   140008795:	mov    rsi,QWORD PTR [rsp+0x38]
   14000879a:	mov    eax,ebx
   14000879c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400087a1:	add    rsp,0x20
   1400087a5:	pop    rdi
   1400087a6:	ret    
   1400087a7:	int3   
   1400087a8:	int3   
   1400087a9:	int3   
   1400087aa:	int3   
   1400087ab:	int3   
   1400087ac:	int3   
   1400087ad:	int3   
   1400087ae:	int3   
   1400087af:	int3   
   1400087b0:	mov    rax,rsp
   1400087b3:	mov    QWORD PTR [rax+0x8],rbx
   1400087b7:	mov    QWORD PTR [rax+0x10],rbp
   1400087bb:	mov    QWORD PTR [rax+0x18],rsi
   1400087bf:	mov    QWORD PTR [rax+0x20],rdi
   1400087c3:	push   r14
   1400087c5:	sub    rsp,0x20
   1400087c9:	movups xmm0,XMMWORD PTR [rdx]
   1400087cc:	mov    rbp,rcx
   1400087cf:	mov    r14,rdx
   1400087d2:	movups XMMWORD PTR [rcx],xmm0
   1400087d5:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400087d9:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400087dd:	movups xmm0,XMMWORD PTR [rdx+0x20]
   1400087e1:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400087e5:	movups xmm1,XMMWORD PTR [rdx+0x30]
   1400087e9:	movups XMMWORD PTR [rcx+0x30],xmm1
   1400087ed:	movups xmm0,XMMWORD PTR [rdx+0x40]
   1400087f1:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400087f5:	movups xmm1,XMMWORD PTR [rdx+0x50]
   1400087f9:	movups XMMWORD PTR [rcx+0x50],xmm1
   1400087fd:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140008801:	movups XMMWORD PTR [rcx+0x60],xmm0
   140008805:	mov    ecx,0x80
   14000880a:	movups xmm0,XMMWORD PTR [rdx+0x70]
   14000880e:	movups XMMWORD PTR [rbp+rcx*1-0x10],xmm0
   140008813:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140008817:	movups XMMWORD PTR [rbp+rcx*1+0x0],xmm1
   14000881c:	mov    rcx,QWORD PTR [rdx+0x70]
   140008820:	call   0x1400086f0
   140008825:	mov    rcx,QWORD PTR [r14+0x58]
   140008829:	mov    rdi,rax
   14000882c:	call   0x1400086f0
   140008831:	mov    rcx,QWORD PTR [r14+0x10]
   140008835:	add    rdi,rax
   140008838:	call   0x1400086f0
   14000883d:	mov    rcx,QWORD PTR [r14+0x68]
   140008841:	add    rdi,rax
   140008844:	call   0x1400086c8
   140008849:	mov    rcx,QWORD PTR [r14+0x50]
   14000884d:	add    rdi,rax
   140008850:	call   0x1400086c8
   140008855:	mov    rcx,QWORD PTR [r14+0x40]
   140008859:	add    rdi,rax
   14000885c:	call   0x1400086c8
   140008861:	mov    rcx,QWORD PTR [r14+0x30]
   140008865:	add    rdi,rax
   140008868:	call   0x1400086c8
   14000886d:	mov    rcx,QWORD PTR [r14+0x28]
   140008871:	add    rdi,rax
   140008874:	call   0x1400086c8
   140008879:	mov    rcx,QWORD PTR [r14+0x20]
   14000887d:	add    rdi,rax
   140008880:	call   0x1400086c8
   140008885:	mov    rcx,QWORD PTR [r14+0x78]
   140008889:	add    rdi,rax
   14000888c:	call   0x1400086c8
   140008891:	add    rdi,rax
   140008894:	lea    rsi,[rbp+0x90]
   14000889b:	mov    rax,QWORD PTR [rsi]
   14000889e:	xor    ebx,ebx
   1400088a0:	test   rax,rax
   1400088a3:	je     0x1400088b3
   1400088a5:	cmp    DWORD PTR [rax],0x1
   1400088a8:	jne    0x1400088b3
   1400088aa:	cmp    QWORD PTR [rbp+0x98],rdi
   1400088b1:	jae    0x1400088e9
   1400088b3:	mov    rcx,rsi
   1400088b6:	call   0x140008a5c
   1400088bb:	test   rdi,rdi
   1400088be:	jne    0x1400088ca
   1400088c0:	mov    rcx,rsi
   1400088c3:	call   0x140008a5c
   1400088c8:	jmp    0x1400088e9
   1400088ca:	lea    rcx,[rdi+0x4]
   1400088ce:	call   QWORD PTR [rip+0x2adc]        # 0x14000b3b0
   1400088d4:	test   rax,rax
   1400088d7:	je     0x1400088e9
   1400088d9:	mov    r8,rdi
   1400088dc:	mov    DWORD PTR [rax],ebx
   1400088de:	mov    rdx,rax
   1400088e1:	mov    rcx,rsi
   1400088e4:	call   0x140008a18
   1400088e9:	mov    rcx,QWORD PTR [rsi]
   1400088ec:	mov    rax,QWORD PTR [rsi+0x8]
   1400088f0:	test   rcx,rcx
   1400088f3:	jne    0x1400088fa
   1400088f5:	mov    rcx,rbx
   1400088f8:	jmp    0x140008904
   1400088fa:	add    rcx,0x4
   1400088fe:	je     0x140008904
   140008900:	lea    rbx,[rax+rcx*1]
   140008904:	mov    r8,QWORD PTR [r14+0x10]
   140008908:	lea    r9,[rbp+0x10]
   14000890c:	mov    rdx,rbx
   14000890f:	call   0x140007638
   140008914:	mov    r8,QWORD PTR [r14+0x20]
   140008918:	lea    r9,[rbp+0x20]
   14000891c:	mov    rdx,rbx
   14000891f:	mov    rcx,rax
   140008922:	call   0x1400075a8
   140008927:	mov    r8,QWORD PTR [r14+0x28]
   14000892b:	lea    r9,[rbp+0x28]
   14000892f:	mov    rdx,rbx
   140008932:	mov    rcx,rax
   140008935:	call   0x1400075a8
   14000893a:	mov    r8,QWORD PTR [r14+0x30]
   14000893e:	lea    r9,[rbp+0x30]
   140008942:	mov    rdx,rbx
   140008945:	mov    rcx,rax
   140008948:	call   0x1400075a8
   14000894d:	mov    r8,QWORD PTR [r14+0x40]
   140008951:	lea    r9,[rbp+0x40]
   140008955:	mov    rdx,rbx
   140008958:	mov    rcx,rax
   14000895b:	call   0x1400075a8
   140008960:	mov    r8,QWORD PTR [r14+0x78]
   140008964:	lea    r9,[rbp+0x78]
   140008968:	mov    rdx,rbx
   14000896b:	mov    rcx,rax
   14000896e:	call   0x1400075a8
   140008973:	mov    r8,QWORD PTR [r14+0x68]
   140008977:	lea    r9,[rbp+0x68]
   14000897b:	mov    rdx,rbx
   14000897e:	mov    rcx,rax
   140008981:	call   0x1400075a8
   140008986:	mov    r8,QWORD PTR [r14+0x70]
   14000898a:	lea    r9,[rbp+0x70]
   14000898e:	mov    rdx,rbx
   140008991:	mov    rcx,rax
   140008994:	call   0x140007638
   140008999:	mov    r8,QWORD PTR [r14+0x50]
   14000899d:	lea    r9,[rbp+0x50]
   1400089a1:	mov    rdx,rbx
   1400089a4:	mov    rcx,rax
   1400089a7:	call   0x1400075a8
   1400089ac:	mov    r8,QWORD PTR [r14+0x58]
   1400089b0:	lea    r9,[rbp+0x58]
   1400089b4:	mov    rdx,rbx
   1400089b7:	mov    rcx,rax
   1400089ba:	mov    rbx,QWORD PTR [rsp+0x30]
   1400089bf:	mov    rbp,QWORD PTR [rsp+0x38]
   1400089c4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400089c9:	mov    rdi,QWORD PTR [rsp+0x48]
   1400089ce:	add    rsp,0x20
   1400089d2:	pop    r14
   1400089d4:	jmp    0x140007638
   1400089d9:	int3   
   1400089da:	int3   
   1400089db:	int3   
   1400089dc:	int3   
   1400089dd:	int3   
   1400089de:	int3   
   1400089df:	int3   
   1400089e0:	sub    rsp,0x48
   1400089e4:	mov    rax,QWORD PTR [rsp+0x48]
   1400089e9:	xor    r9d,r9d
   1400089ec:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   1400089f4:	mov    DWORD PTR [rsp+0x30],0x4
   1400089fc:	mov    QWORD PTR [rsp+0x28],rax
   140008a01:	and    QWORD PTR [rsp+0x20],0x0
   140008a07:	call   0x140008340
   140008a0c:	add    rsp,0x48
   140008a10:	ret    
   140008a11:	int3   
   140008a12:	int3   
   140008a13:	int3   
   140008a14:	int3   
   140008a15:	int3   
   140008a16:	int3   
   140008a17:	int3   
   140008a18:	mov    QWORD PTR [rsp+0x8],rbx
   140008a1d:	mov    QWORD PTR [rsp+0x10],rsi
   140008a22:	push   rdi
   140008a23:	sub    rsp,0x20
   140008a27:	mov    rsi,r8
   140008a2a:	mov    rbx,rdx
   140008a2d:	mov    rdi,rcx
   140008a30:	call   0x140008a5c
   140008a35:	test   rbx,rbx
   140008a38:	je     0x140008a44
   140008a3a:	mov    QWORD PTR [rdi],rbx
   140008a3d:	mov    QWORD PTR [rdi+0x8],rsi
   140008a41:	lock inc DWORD PTR [rbx]
   140008a44:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a49:	mov    rsi,QWORD PTR [rsp+0x38]
   140008a4e:	add    rsp,0x20
   140008a52:	pop    rdi
   140008a53:	ret    
   140008a54:	int3   
   140008a55:	int3   
   140008a56:	int3   
   140008a57:	int3   
   140008a58:	int3   
   140008a59:	int3   
   140008a5a:	int3   
   140008a5b:	int3   
   140008a5c:	rex push rbx
   140008a5e:	sub    rsp,0x20
   140008a62:	mov    rbx,rcx
   140008a65:	mov    rcx,QWORD PTR [rcx]
   140008a68:	test   rcx,rcx
   140008a6b:	je     0x140008a8b
   140008a6d:	or     eax,0xffffffff
   140008a70:	lock xadd DWORD PTR [rcx],eax
   140008a74:	cmp    eax,0x1
   140008a77:	jne    0x140008a82
   140008a79:	mov    rcx,QWORD PTR [rbx]
   140008a7c:	call   QWORD PTR [rip+0x2836]        # 0x14000b2b8
   140008a82:	and    QWORD PTR [rbx],0x0
   140008a86:	and    QWORD PTR [rbx+0x8],0x0
   140008a8b:	add    rsp,0x20
   140008a8f:	pop    rbx
   140008a90:	ret    
   140008a91:	int3   
   140008a92:	int3   
   140008a93:	int3   
   140008a94:	int3   
   140008a95:	int3   
   140008a96:	int3   
   140008a97:	int3   
   140008a98:	xor    eax,eax
   140008a9a:	lea    r8,[rip+0x489f]        # 0x14000d340
   140008aa1:	test   rdx,rdx
   140008aa4:	je     0x140008ab6
   140008aa6:	mov    r8,rdx
   140008aa9:	or     rax,0xffffffffffffffff
   140008aad:	inc    rax
   140008ab0:	cmp    BYTE PTR [rdx+rax*1],0x0
   140008ab4:	jne    0x140008aad
   140008ab6:	and    DWORD PTR [rcx+0xc],0x0
   140008aba:	inc    eax
   140008abc:	mov    DWORD PTR [rcx+0x8],eax
   140008abf:	mov    QWORD PTR [rcx],r8
   140008ac2:	ret    
   140008ac3:	int3   
   140008ac4:	int3   
   140008ac5:	int3   
   140008ac6:	int3   
   140008ac7:	int3   
   140008ac8:	int3   
   140008ac9:	int3   
   140008aca:	int3   
   140008acb:	int3   
   140008acc:	xor    r9d,r9d
   140008acf:	lea    r8,[rip+0x58fa]        # 0x14000e3d0
   140008ad6:	mov    eax,r9d
   140008ad9:	test   rdx,rdx
   140008adc:	je     0x140008aef
   140008ade:	mov    r8,rdx
   140008ae1:	or     rax,0xffffffffffffffff
   140008ae5:	inc    rax
   140008ae8:	cmp    WORD PTR [rdx+rax*2],r9w
   140008aed:	jne    0x140008ae5
   140008aef:	lea    eax,[rax*2+0x2]
   140008af6:	mov    QWORD PTR [rcx],r8
   140008af9:	mov    DWORD PTR [rcx+0x8],eax
   140008afc:	mov    DWORD PTR [rcx+0xc],r9d
   140008b00:	ret    
   140008b01:	int3   
   140008b02:	int3   
   140008b03:	int3   
   140008b04:	int3   
   140008b05:	int3   
   140008b06:	int3   
   140008b07:	int3   
   140008b08:	mov    QWORD PTR [rsp+0x8],rbx
   140008b0d:	mov    QWORD PTR [rsp+0x10],rsi
   140008b12:	push   rdi
   140008b13:	sub    rsp,0x20
   140008b17:	mov    rsi,rcx
   140008b1a:	test   rdx,rdx
   140008b1d:	je     0x140008b25
   140008b1f:	lea    rdi,[rdx+0x8]
   140008b23:	jmp    0x140008b27
   140008b25:	xor    edi,edi
   140008b27:	test   rdi,rdi
   140008b2a:	je     0x140008b41
   140008b2c:	mov    rax,QWORD PTR [rdi]
   140008b2f:	mov    rbx,QWORD PTR [rax+0x8]
   140008b33:	mov    rcx,rbx
   140008b36:	call   QWORD PTR [rip+0x2894]        # 0x14000b3d0
   140008b3c:	mov    rcx,rdi
   140008b3f:	call   rbx
   140008b41:	mov    rbx,QWORD PTR [rsi]
   140008b44:	mov    QWORD PTR [rsi],rdi
   140008b47:	test   rbx,rbx
   140008b4a:	je     0x140008b61
   140008b4c:	mov    rax,QWORD PTR [rbx]
   140008b4f:	mov    rdi,QWORD PTR [rax+0x10]
   140008b53:	mov    rcx,rdi
   140008b56:	call   QWORD PTR [rip+0x2874]        # 0x14000b3d0
   140008b5c:	mov    rcx,rbx
   140008b5f:	call   rdi
   140008b61:	mov    rbx,QWORD PTR [rsp+0x30]
   140008b66:	mov    rax,rsi
   140008b69:	mov    rsi,QWORD PTR [rsp+0x38]
   140008b6e:	add    rsp,0x20
   140008b72:	pop    rdi
   140008b73:	ret    
   140008b74:	int3   
   140008b75:	int3   
   140008b76:	int3   
   140008b77:	int3   
   140008b78:	int3   
   140008b79:	int3   
   140008b7a:	int3   
   140008b7b:	int3   
   140008b7c:	jmp    0x140007478
   140008b81:	int3   
   140008b82:	int3   
   140008b83:	int3   
   140008b84:	int3   
   140008b85:	int3   
   140008b86:	int3   
   140008b87:	int3   
   140008b88:	mov    QWORD PTR [rsp+0x8],rbx
   140008b8d:	push   rdi
   140008b8e:	sub    rsp,0x20
   140008b92:	mov    rdi,QWORD PTR [rcx]
   140008b95:	test   rdi,rdi
   140008b98:	je     0x140008bb3
   140008b9a:	and    QWORD PTR [rcx],0x0
   140008b9e:	mov    rax,QWORD PTR [rdi]
   140008ba1:	mov    rbx,QWORD PTR [rax+0x10]
   140008ba5:	mov    rcx,rbx
   140008ba8:	call   QWORD PTR [rip+0x2822]        # 0x14000b3d0
   140008bae:	mov    rcx,rdi
   140008bb1:	call   rbx
   140008bb3:	mov    rbx,QWORD PTR [rsp+0x30]
   140008bb8:	add    rsp,0x20
   140008bbc:	pop    rdi
   140008bbd:	ret    
   140008bbe:	int3   
   140008bbf:	int3   
   140008bc0:	int3   
   140008bc1:	int3   
   140008bc2:	int3   
   140008bc3:	int3   
   140008bc4:	rex push rbx
   140008bc6:	sub    rsp,0x20
   140008bca:	lea    rax,[rip+0x2e27]        # 0x14000b9f8
   140008bd1:	mov    QWORD PTR [rcx],rax
   140008bd4:	lea    rbx,[rcx+0x10]
   140008bd8:	lea    rax,[rip+0x2d69]        # 0x14000b948
   140008bdf:	mov    QWORD PTR [rcx+0x8],rax
   140008be3:	mov    rcx,rbx
   140008be6:	call   0x140009100
   140008beb:	mov    rcx,rbx
   140008bee:	add    rsp,0x20
   140008bf2:	pop    rbx
   140008bf3:	jmp    0x140009100
   140008bf8:	int3   
   140008bf9:	int3   
   140008bfa:	int3   
   140008bfb:	int3   
   140008bfc:	int3   
   140008bfd:	int3   
   140008bfe:	int3   
   140008bff:	int3   
   140008c00:	mov    QWORD PTR [rsp+0x8],rbx
   140008c05:	push   rdi
   140008c06:	sub    rsp,0x20
   140008c0a:	mov    rbx,rcx
   140008c0d:	mov    DWORD PTR [rcx+0x6c],0xc0000001
   140008c14:	add    rcx,0x38
   140008c18:	mov    edi,edx
   140008c1a:	call   0x140008bc4
   140008c1f:	mov    ecx,DWORD PTR [rbx+0x28]
   140008c22:	lea    rax,[rip+0x2da7]        # 0x14000b9d0
   140008c29:	mov    QWORD PTR [rbx+0x18],rax
   140008c2d:	test   ecx,ecx
   140008c2f:	je     0x140008c3a
   140008c31:	call   0x140009244
   140008c36:	and    DWORD PTR [rbx+0x28],0x0
   140008c3a:	lea    rcx,[rbx+0x30]
   140008c3e:	call   0x1400073f8
   140008c43:	lea    rcx,[rbx+0x10]
   140008c47:	call   0x1400073f8
   140008c4c:	test   dil,0x1
   140008c50:	je     0x140008c5b
   140008c52:	mov    rcx,rbx
   140008c55:	call   QWORD PTR [rip+0x26cd]        # 0x14000b328
   140008c5b:	mov    rax,rbx
   140008c5e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008c63:	add    rsp,0x20
   140008c67:	pop    rdi
   140008c68:	ret    
   140008c69:	int3   
   140008c6a:	int3   
   140008c6b:	int3   
   140008c6c:	int3   
   140008c6d:	int3   
   140008c6e:	int3   
   140008c6f:	int3   
   140008c70:	mov    QWORD PTR [rsp+0x8],rbx
   140008c75:	push   rdi
   140008c76:	sub    rsp,0x20
   140008c7a:	mov    rbx,rcx
   140008c7d:	mov    edi,edx
   140008c7f:	sub    rcx,0xffffffffffffff80
   140008c83:	call   0x140007478
   140008c88:	lea    rcx,[rbx+0x78]
   140008c8c:	call   0x140007478
   140008c91:	lea    rcx,[rbx+0x70]
   140008c95:	call   0x140007478
   140008c9a:	lea    rcx,[rbx+0x38]
   140008c9e:	mov    DWORD PTR [rbx+0x6c],0xc0000001
   140008ca5:	call   0x140008bc4
   140008caa:	mov    ecx,DWORD PTR [rbx+0x28]
   140008cad:	lea    rax,[rip+0x2d1c]        # 0x14000b9d0
   140008cb4:	mov    QWORD PTR [rbx+0x18],rax
   140008cb8:	test   ecx,ecx
   140008cba:	je     0x140008cc5
   140008cbc:	call   0x140009244
   140008cc1:	and    DWORD PTR [rbx+0x28],0x0
   140008cc5:	lea    rcx,[rbx+0x30]
   140008cc9:	call   0x1400073f8
   140008cce:	lea    rcx,[rbx+0x10]
   140008cd2:	call   0x1400073f8
   140008cd7:	test   dil,0x1
   140008cdb:	je     0x140008ce6
   140008cdd:	mov    rcx,rbx
   140008ce0:	call   QWORD PTR [rip+0x2642]        # 0x14000b328
   140008ce6:	mov    rax,rbx
   140008ce9:	mov    rbx,QWORD PTR [rsp+0x30]
   140008cee:	add    rsp,0x20
   140008cf2:	pop    rdi
   140008cf3:	ret    
   140008cf4:	int3   
   140008cf5:	int3   
   140008cf6:	int3   
   140008cf7:	int3   
   140008cf8:	int3   
   140008cf9:	int3   
   140008cfa:	int3   
   140008cfb:	int3   
   140008cfc:	int3   
   140008cfd:	int3   
   140008cfe:	int3   
   140008cff:	int3   
   140008d00:	rex push rbx
   140008d02:	sub    rsp,0x20
   140008d06:	lea    rax,[rip+0x2ec3]        # 0x14000bbd0
   140008d0d:	mov    rbx,rcx
   140008d10:	mov    QWORD PTR [rcx],rax
   140008d13:	mov    DWORD PTR [rcx+0xc],0xc0000001
   140008d1a:	test   dl,0x1
   140008d1d:	je     0x140008d25
   140008d1f:	call   QWORD PTR [rip+0x2603]        # 0x14000b328
   140008d25:	mov    rax,rbx
   140008d28:	add    rsp,0x20
   140008d2c:	pop    rbx
   140008d2d:	ret    
   140008d2e:	int3   
   140008d2f:	int3   
   140008d30:	int3   
   140008d31:	int3   
   140008d32:	int3   
   140008d33:	int3   
   140008d34:	int3   
   140008d35:	int3   
   140008d36:	int3   
   140008d37:	int3   
   140008d38:	int3   
   140008d39:	int3   
   140008d3a:	int3   
   140008d3b:	int3   
   140008d3c:	int3   
   140008d3d:	int3   
   140008d3e:	int3   
   140008d3f:	int3   
   140008d40:	mov    QWORD PTR [rsp+0x8],rbx
   140008d45:	push   rdi
   140008d46:	sub    rsp,0x20
   140008d4a:	mov    ebx,edx
   140008d4c:	mov    rdi,rcx
   140008d4f:	call   0x140008bc4
   140008d54:	test   bl,0x1
   140008d57:	je     0x140008d62
   140008d59:	mov    rcx,rdi
   140008d5c:	call   QWORD PTR [rip+0x25c6]        # 0x14000b328
   140008d62:	mov    rax,rdi
   140008d65:	mov    rbx,QWORD PTR [rsp+0x30]
   140008d6a:	add    rsp,0x20
   140008d6e:	pop    rdi
   140008d6f:	ret    
   140008d70:	int3   
   140008d71:	int3   
   140008d72:	int3   
   140008d73:	int3   
   140008d74:	int3   
   140008d75:	int3   
   140008d76:	int3   
   140008d77:	int3   
   140008d78:	mov    QWORD PTR [rsp+0x8],rcx
   140008d7d:	push   rdi
   140008d7e:	sub    rsp,0x30
   140008d82:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008d8b:	mov    QWORD PTR [rsp+0x48],rbx
   140008d90:	mov    edi,edx
   140008d92:	mov    rbx,rcx
   140008d95:	add    rcx,0x20
   140008d99:	call   0x140008bc4
   140008d9e:	lea    rax,[rip+0x2c2b]        # 0x14000b9d0
   140008da5:	mov    QWORD PTR [rbx],rax
   140008da8:	mov    ecx,DWORD PTR [rbx+0x10]
   140008dab:	test   ecx,ecx
   140008dad:	je     0x140008db8
   140008daf:	call   0x140009244
   140008db4:	and    DWORD PTR [rbx+0x10],0x0
   140008db8:	lea    rcx,[rbx+0x18]
   140008dbc:	call   0x1400073f8
   140008dc1:	test   dil,0x1
   140008dc5:	je     0x140008dd0
   140008dc7:	mov    rcx,rbx
   140008dca:	call   QWORD PTR [rip+0x2558]        # 0x14000b328
   140008dd0:	mov    rax,rbx
   140008dd3:	mov    rbx,QWORD PTR [rsp+0x48]
   140008dd8:	add    rsp,0x30
   140008ddc:	pop    rdi
   140008ddd:	ret    
   140008dde:	mov    rcx,QWORD PTR [rdx+0x40]
   140008de5:	add    rcx,0x18
   140008de9:	jmp    0x140007388
   140008dee:	int3   
   140008def:	int3   
   140008df0:	int3   
   140008df1:	int3   
   140008df2:	int3   
   140008df3:	int3   
   140008df4:	int3   
   140008df5:	int3   
   140008df6:	int3   
   140008df7:	int3   
   140008df8:	int3   
   140008df9:	int3   
   140008dfa:	int3   
   140008dfb:	int3   
   140008dfc:	int3   
   140008dfd:	int3   
   140008dfe:	int3   
   140008dff:	int3   
   140008e00:	mov    QWORD PTR [rsp+0x8],rbx
   140008e05:	mov    QWORD PTR [rsp+0x10],rsi
   140008e0a:	push   rdi
   140008e0b:	sub    rsp,0x20
   140008e0f:	mov    rdi,QWORD PTR [rcx+0x10]
   140008e13:	mov    esi,edx
   140008e15:	test   rdi,rdi
   140008e18:	je     0x140008e33
   140008e1a:	mov    rax,QWORD PTR [rdi]
   140008e1d:	mov    rbx,QWORD PTR [rax+0x40]
   140008e21:	mov    rcx,rbx
   140008e24:	call   QWORD PTR [rip+0x25a6]        # 0x14000b3d0
   140008e2a:	mov    edx,esi
   140008e2c:	mov    rcx,rdi
   140008e2f:	call   rbx
   140008e31:	jmp    0x140008e38
   140008e33:	mov    eax,0x8007000e
   140008e38:	mov    rbx,QWORD PTR [rsp+0x30]
   140008e3d:	mov    rsi,QWORD PTR [rsp+0x38]
   140008e42:	add    rsp,0x20
   140008e46:	pop    rdi
   140008e47:	ret    
   140008e48:	int3   
   140008e49:	int3   
   140008e4a:	int3   
   140008e4b:	int3   
   140008e4c:	int3   
   140008e4d:	int3   
   140008e4e:	int3   
   140008e4f:	int3   
   140008e50:	mov    QWORD PTR [rsp+0x8],rbx
   140008e55:	mov    QWORD PTR [rsp+0x10],rbp
   140008e5a:	mov    QWORD PTR [rsp+0x18],rsi
   140008e5f:	push   rdi
   140008e60:	push   r14
   140008e62:	push   r15
   140008e64:	sub    rsp,0x20
   140008e68:	and    QWORD PTR [r8],0x0
   140008e6c:	lea    rbp,[rcx+0x8]
   140008e70:	mov    rdi,rcx
   140008e73:	mov    r14,r8
   140008e76:	mov    rcx,rbp
   140008e79:	mov    r15,rdx
   140008e7c:	xor    esi,esi
   140008e7e:	call   QWORD PTR [rip+0x231c]        # 0x14000b1a0
   140008e84:	cmp    QWORD PTR [rdi+0x18],rsi
   140008e88:	jne    0x140008e94
   140008e8a:	mov    esi,DWORD PTR [rdi+0x10]
   140008e8d:	mov    ebx,0x80004005
   140008e92:	jmp    0x140008eb4
   140008e94:	mov    rdi,QWORD PTR [rdi+0x18]
   140008e98:	mov    rax,QWORD PTR [rdi]
   140008e9b:	mov    rbx,QWORD PTR [rax]
   140008e9e:	mov    rcx,rbx
   140008ea1:	call   QWORD PTR [rip+0x2529]        # 0x14000b3d0
   140008ea7:	mov    r8,r14
   140008eaa:	mov    rdx,r15
   140008ead:	mov    rcx,rdi
   140008eb0:	call   rbx
   140008eb2:	mov    ebx,eax
   140008eb4:	mov    rcx,rbp
   140008eb7:	call   QWORD PTR [rip+0x22db]        # 0x14000b198
   140008ebd:	test   esi,esi
   140008ebf:	je     0x140008ed0
   140008ec1:	mov    r8,r14
   140008ec4:	mov    rdx,r15
   140008ec7:	mov    ecx,esi
   140008ec9:	call   0x1400093a4
   140008ece:	mov    ebx,eax
   140008ed0:	mov    rbp,QWORD PTR [rsp+0x48]
   140008ed5:	mov    eax,ebx
   140008ed7:	mov    rbx,QWORD PTR [rsp+0x40]
   140008edc:	mov    rsi,QWORD PTR [rsp+0x50]
   140008ee1:	add    rsp,0x20
   140008ee5:	pop    r15
   140008ee7:	pop    r14
   140008ee9:	pop    rdi
   140008eea:	ret    
   140008eeb:	int3   
   140008eec:	int3   
   140008eed:	int3   
   140008eee:	int3   
   140008eef:	int3   
   140008ef0:	int3   
   140008ef1:	int3   
   140008ef2:	int3   
   140008ef3:	int3   
   140008ef4:	mov    QWORD PTR [rsp+0x8],rbx
   140008ef9:	mov    QWORD PTR [rsp+0x10],rbp
   140008efe:	mov    QWORD PTR [rsp+0x18],rsi
   140008f03:	push   rdi
   140008f04:	sub    rsp,0x20
   140008f08:	and    DWORD PTR [r8],0x0
   140008f0c:	mov    rsi,r8
   140008f0f:	mov    rbp,rcx
   140008f12:	call   0x1400095e4
   140008f17:	test   eax,eax
   140008f19:	js     0x140008f44
   140008f1b:	mov    rdi,QWORD PTR [rip+0x9af6]        # 0x140012a18
   140008f22:	mov    rax,QWORD PTR [rdi]
   140008f25:	mov    rbx,QWORD PTR [rax+0x18]
   140008f29:	mov    rcx,rbx
   140008f2c:	call   QWORD PTR [rip+0x249e]        # 0x14000b3d0
   140008f32:	mov    r9,rsi
   140008f35:	lea    r8,[rip+0x2b24]        # 0x14000ba60
   140008f3c:	mov    rdx,rbp
   140008f3f:	mov    rcx,rdi
   140008f42:	call   rbx
   140008f44:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f49:	mov    rbp,QWORD PTR [rsp+0x38]
   140008f4e:	mov    rsi,QWORD PTR [rsp+0x40]
   140008f53:	add    rsp,0x20
   140008f57:	pop    rdi
   140008f58:	ret    
   140008f59:	int3   
   140008f5a:	int3   
   140008f5b:	int3   
   140008f5c:	int3   
   140008f5d:	int3   
   140008f5e:	int3   
   140008f5f:	int3   
   140008f60:	mov    rax,rsp
   140008f63:	push   rdi
   140008f64:	push   r14
   140008f66:	push   r15
   140008f68:	sub    rsp,0x30
   140008f6c:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140008f74:	mov    QWORD PTR [rax+0x10],rbx
   140008f78:	mov    QWORD PTR [rax+0x18],rbp
   140008f7c:	mov    QWORD PTR [rax+0x20],rsi
   140008f80:	mov    r14,r9
   140008f83:	mov    r15,r8
   140008f86:	mov    rdi,rdx
   140008f89:	mov    rbp,rcx
   140008f8c:	lea    rsi,[rcx-0x8]
   140008f90:	mov    rax,QWORD PTR [rsi]
   140008f93:	mov    rbx,QWORD PTR [rax+0x48]
   140008f97:	mov    rcx,rbx
   140008f9a:	call   QWORD PTR [rip+0x2430]        # 0x14000b3d0
   140008fa0:	mov    r9,r14
   140008fa3:	mov    r8,r15
   140008fa6:	mov    rdx,rdi
   140008fa9:	mov    rcx,rsi
   140008fac:	call   rbx
   140008fae:	mov    ebx,eax
   140008fb0:	test   eax,eax
   140008fb2:	jns    0x140009077
   140008fb8:	xor    ebx,ebx
   140008fba:	cmp    QWORD PTR [rbp+0x10],rbx
   140008fbe:	jbe    0x140009057
   140008fc4:	mov    rcx,QWORD PTR [rsi+0x10]
   140008fc8:	mov    rax,QWORD PTR [rdi]
   140008fcb:	sub    rax,QWORD PTR [rcx]
   140008fce:	jne    0x140008fd8
   140008fd0:	mov    rax,QWORD PTR [rdi+0x8]
   140008fd4:	sub    rax,QWORD PTR [rcx+0x8]
   140008fd8:	test   rax,rax
   140008fdb:	je     0x140008fec
   140008fdd:	inc    rbx
   140008fe0:	add    rcx,0x20
   140008fe4:	cmp    rbx,QWORD PTR [rbp+0x10]
   140008fe8:	jb     0x140008fc8
   140008fea:	jmp    0x140009057
   140008fec:	shl    rbx,0x5
   140008ff0:	add    rbx,QWORD PTR [rbp+0x8]
   140008ff4:	mov    rbx,QWORD PTR [rbx+0x10]
   140008ff8:	mov    QWORD PTR [rsp+0x50],rbx
   140008ffd:	test   rbx,rbx
   140009000:	je     0x140009018
   140009002:	mov    rax,QWORD PTR [rbx]
   140009005:	mov    rdi,QWORD PTR [rax+0x8]
   140009009:	mov    rcx,rdi
   14000900c:	call   QWORD PTR [rip+0x23be]        # 0x14000b3d0
   140009012:	mov    rcx,rbx
   140009015:	call   rdi
   140009017:	nop
   140009018:	test   rbx,rbx
   14000901b:	jne    0x14000902f
   14000901d:	mov    rdx,rsi
   140009020:	lea    rcx,[rsp+0x50]
   140009025:	call   0x140007394
   14000902a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000902f:	mov    rax,QWORD PTR [rbx]
   140009032:	mov    rdi,QWORD PTR [rax]
   140009035:	mov    rcx,rdi
   140009038:	call   QWORD PTR [rip+0x2392]        # 0x14000b3d0
   14000903e:	mov    r8,r14
   140009041:	mov    rdx,r15
   140009044:	mov    rcx,rbx
   140009047:	call   rdi
   140009049:	mov    ebx,eax
   14000904b:	lea    rcx,[rsp+0x50]
   140009050:	call   0x1400073f8
   140009055:	jmp    0x140009077
   140009057:	mov    rax,QWORD PTR [rsi]
   14000905a:	mov    rbx,QWORD PTR [rax+0x60]
   14000905e:	mov    rcx,rbx
   140009061:	call   QWORD PTR [rip+0x2369]        # 0x14000b3d0
   140009067:	mov    r9,r14
   14000906a:	mov    r8,r15
   14000906d:	mov    rdx,rdi
   140009070:	mov    rcx,rsi
   140009073:	call   rbx
   140009075:	mov    ebx,eax
   140009077:	mov    eax,ebx
   140009079:	mov    rbx,QWORD PTR [rsp+0x58]
   14000907e:	mov    rbp,QWORD PTR [rsp+0x60]
   140009083:	mov    rsi,QWORD PTR [rsp+0x68]
   140009088:	add    rsp,0x30
   14000908c:	pop    r15
   14000908e:	pop    r14
   140009090:	pop    rdi
   140009091:	ret    
   140009092:	lea    rcx,[rdx+0x50]
   140009099:	jmp    0x140007388
   14000909e:	int3   
   14000909f:	int3   
   1400090a0:	int3   
   1400090a1:	int3   
   1400090a2:	int3   
   1400090a3:	int3   
   1400090a4:	int3   
   1400090a5:	int3   
   1400090a6:	int3   
   1400090a7:	int3   
   1400090a8:	int3   
   1400090a9:	int3   
   1400090aa:	int3   
   1400090ab:	int3   
   1400090ac:	int3   
   1400090ad:	int3   
   1400090ae:	int3   
   1400090af:	int3   
   1400090b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400090b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400090ba:	push   rdi
   1400090bb:	sub    rsp,0x20
   1400090bf:	mov    rdi,QWORD PTR [rcx+0x10]
   1400090c3:	mov    rsi,rdx
   1400090c6:	test   rdi,rdi
   1400090c9:	je     0x1400090e5
   1400090cb:	mov    rax,QWORD PTR [rdi]
   1400090ce:	mov    rbx,QWORD PTR [rax+0x38]
   1400090d2:	mov    rcx,rbx
   1400090d5:	call   QWORD PTR [rip+0x22f5]        # 0x14000b3d0
   1400090db:	mov    rdx,rsi
   1400090de:	mov    rcx,rdi
   1400090e1:	call   rbx
   1400090e3:	jmp    0x1400090ea
   1400090e5:	mov    eax,0x8007000e
   1400090ea:	mov    rbx,QWORD PTR [rsp+0x30]
   1400090ef:	mov    rsi,QWORD PTR [rsp+0x38]
   1400090f4:	add    rsp,0x20
   1400090f8:	pop    rdi
   1400090f9:	ret    
   1400090fa:	int3   
   1400090fb:	int3   
   1400090fc:	int3   
   1400090fd:	int3   
   1400090fe:	int3   
   1400090ff:	int3   
   140009100:	rex push rbx
   140009102:	sub    rsp,0x20
   140009106:	mov    rbx,rcx
   140009109:	mov    rcx,QWORD PTR [rcx]
   14000910c:	test   rcx,rcx
   14000910f:	je     0x14000911b
   140009111:	call   QWORD PTR [rip+0x1f31]        # 0x14000b048
   140009117:	and    QWORD PTR [rbx],0x0
   14000911b:	and    QWORD PTR [rbx+0x8],0x0
   140009120:	and    QWORD PTR [rbx+0x18],0x0
   140009125:	add    rsp,0x20
   140009129:	pop    rbx
   14000912a:	ret    
   14000912b:	int3   
   14000912c:	int3   
   14000912d:	int3   
   14000912e:	int3   
   14000912f:	int3   
   140009130:	int3   
   140009131:	int3   
   140009132:	int3   
   140009133:	int3   
   140009134:	mov    rax,rsp
   140009137:	mov    QWORD PTR [rax+0x8],rbx
   14000913b:	mov    QWORD PTR [rax+0x10],rbp
   14000913f:	mov    QWORD PTR [rax+0x18],rsi
   140009143:	mov    QWORD PTR [rax+0x20],rdi
   140009147:	push   r14
   140009149:	sub    rsp,0x50
   14000914d:	mov    rdi,r8
   140009150:	mov    esi,edx
   140009152:	mov    rbp,rcx
   140009155:	call   QWORD PTR [rip+0x1f35]        # 0x14000b090
   14000915b:	mov    r14,QWORD PTR [rsp+0x88]
   140009163:	mov    ebx,eax
   140009165:	test   eax,eax
   140009167:	jne    0x14000919b
   140009169:	mov    DWORD PTR [rsp+0x38],0x8007029c
   140009171:	xor    r9d,r9d
   140009174:	mov    DWORD PTR [rsp+0x30],0x3
   14000917c:	mov    r8,rdi
   14000917f:	mov    QWORD PTR [rsp+0x28],r14
   140009184:	mov    edx,esi
   140009186:	and    QWORD PTR [rsp+0x20],0x0
   14000918c:	mov    rcx,rbp
   14000918f:	call   0x140008340
   140009194:	mov    ebx,0x29c
   140009199:	jmp    0x14000919d
   14000919b:	jle    0x1400091a6
   14000919d:	movzx  ebx,bx
   1400091a0:	or     ebx,0x80070000
   1400091a6:	mov    DWORD PTR [rsp+0x38],ebx
   1400091aa:	xor    r9d,r9d
   1400091ad:	mov    DWORD PTR [rsp+0x30],0x2
   1400091b5:	mov    r8,rdi
   1400091b8:	mov    QWORD PTR [rsp+0x28],r14
   1400091bd:	mov    edx,esi
   1400091bf:	and    QWORD PTR [rsp+0x20],0x0
   1400091c5:	mov    rcx,rbp
   1400091c8:	call   0x140008214
   1400091cd:	mov    rbp,QWORD PTR [rsp+0x68]
   1400091d2:	mov    eax,ebx
   1400091d4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400091d9:	mov    rsi,QWORD PTR [rsp+0x70]
   1400091de:	mov    rdi,QWORD PTR [rsp+0x78]
   1400091e3:	add    rsp,0x50
   1400091e7:	pop    r14
   1400091e9:	ret    
   1400091ea:	int3   
   1400091eb:	int3   
   1400091ec:	int3   
   1400091ed:	int3   
   1400091ee:	int3   
   1400091ef:	int3   
   1400091f0:	sub    rsp,0x48
   1400091f4:	mov    rax,QWORD PTR [rsp+0x48]
   1400091f9:	mov    QWORD PTR [rsp+0x28],rax
   1400091fe:	call   0x140009134
   140009203:	add    rsp,0x48
   140009207:	ret    
   140009208:	int3   
   140009209:	int3   
   14000920a:	int3   
   14000920b:	int3   
   14000920c:	int3   
   14000920d:	int3   
   14000920e:	int3   
   14000920f:	int3   
   140009210:	sub    rsp,0x48
   140009214:	mov    rax,QWORD PTR [rsp+0x48]
   140009219:	mov    DWORD PTR [rsp+0x38],r9d
   14000921e:	xor    r9d,r9d
   140009221:	mov    DWORD PTR [rsp+0x30],0x2
   140009229:	mov    QWORD PTR [rsp+0x28],rax
   14000922e:	and    QWORD PTR [rsp+0x20],0x0
   140009234:	call   0x140008340
   140009239:	add    rsp,0x48
   14000923d:	ret    
   14000923e:	int3   
   14000923f:	int3   
   140009240:	int3   
   140009241:	int3   
   140009242:	int3   
   140009243:	int3   
   140009244:	test   ecx,ecx
   140009246:	je     0x14000928f
   140009248:	mov    QWORD PTR [rsp+0x8],rbx
   14000924d:	mov    QWORD PTR [rsp+0x10],rsi
   140009252:	push   rdi
   140009253:	sub    rsp,0x20
   140009257:	mov    esi,ecx
   140009259:	call   0x1400095e4
   14000925e:	test   eax,eax
   140009260:	js     0x140009280
   140009262:	mov    rdi,QWORD PTR [rip+0x97af]        # 0x140012a18
   140009269:	mov    rax,QWORD PTR [rdi]
   14000926c:	mov    rbx,QWORD PTR [rax+0x20]
   140009270:	mov    rcx,rbx
   140009273:	call   QWORD PTR [rip+0x2157]        # 0x14000b3d0
   140009279:	mov    edx,esi
   14000927b:	mov    rcx,rdi
   14000927e:	call   rbx
   140009280:	mov    rbx,QWORD PTR [rsp+0x30]
   140009285:	mov    rsi,QWORD PTR [rsp+0x38]
   14000928a:	add    rsp,0x20
   14000928e:	pop    rdi
   14000928f:	ret    
   140009290:	int3   
   140009291:	int3   
   140009292:	int3   
   140009293:	int3   
   140009294:	int3   
   140009295:	int3   
   140009296:	int3   
   140009297:	int3   
   140009298:	int3   
   140009299:	int3   
   14000929a:	int3   
   14000929b:	int3   
   14000929c:	int3   
   14000929d:	int3   
   14000929e:	int3   
   14000929f:	int3   
   1400092a0:	mov    rax,rsp
   1400092a3:	mov    QWORD PTR [rax+0x8],rbx
   1400092a7:	mov    QWORD PTR [rax+0x10],rbp
   1400092ab:	mov    QWORD PTR [rax+0x18],rsi
   1400092af:	mov    QWORD PTR [rax+0x20],rdi
   1400092b3:	push   r12
   1400092b5:	push   r14
   1400092b7:	push   r15
   1400092b9:	sub    rsp,0x20
   1400092bd:	mov    rbp,QWORD PTR [rcx+0x18]
   1400092c1:	mov    r12,rdx
   1400092c4:	mov    rsi,rcx
   1400092c7:	test   rbp,rbp
   1400092ca:	je     0x140009364
   1400092d0:	mov    r14,rbp
   1400092d3:	lea    r15,[rbp-0x1]
   1400092d7:	shl    r14,0x5
   1400092db:	mov    rax,QWORD PTR [rsi+0x10]
   1400092df:	mov    rdi,QWORD PTR [r14+rax*1-0x10]
   1400092e4:	test   rdi,rdi
   1400092e7:	je     0x1400092fe
   1400092e9:	mov    rax,QWORD PTR [rdi]
   1400092ec:	mov    rbx,QWORD PTR [rax+0x10]
   1400092f0:	mov    rcx,rbx
   1400092f3:	call   QWORD PTR [rip+0x20d7]        # 0x14000b3d0
   1400092f9:	mov    rcx,rdi
   1400092fc:	call   rbx
   1400092fe:	mov    rax,QWORD PTR [r12]
   140009302:	mov    rbx,QWORD PTR [rsi+0x10]
   140009306:	mov    rdi,QWORD PTR [rax+0x20]
   14000930a:	mov    rcx,rdi
   14000930d:	call   QWORD PTR [rip+0x20bd]        # 0x14000b3d0
   140009313:	mov    edx,DWORD PTR [r14+rbx*1-0x8]
   140009318:	mov    rcx,r12
   14000931b:	call   rdi
   14000931d:	mov    r8,QWORD PTR [rsi+0x18]
   140009321:	cmp    r15,r8
   140009324:	jae    0x140009353
   140009326:	lea    rax,[r8-0x1]
   14000932a:	cmp    r15,rax
   14000932d:	je     0x14000934f
   14000932f:	mov    rcx,QWORD PTR [rsi+0x10]
   140009333:	sub    r8,r15
   140009336:	add    rcx,0xffffffffffffffe0
   14000933a:	shl    r8,0x5
   14000933e:	add    rcx,r14
   140009341:	sub    r8,0x20
   140009345:	lea    rdx,[rcx+0x20]
   140009349:	call   QWORD PTR [rip+0x2049]        # 0x14000b398
   14000934f:	dec    QWORD PTR [rsi+0x18]
   140009353:	sub    r14,0x20
   140009357:	dec    r15
   14000935a:	sub    rbp,0x1
   14000935e:	jne    0x1400092db
   140009364:	mov    rax,QWORD PTR [rsi]
   140009367:	mov    rbx,QWORD PTR [rax+0x58]
   14000936b:	mov    rcx,rbx
   14000936e:	call   QWORD PTR [rip+0x205c]        # 0x14000b3d0
   140009374:	mov    rdx,r12
   140009377:	mov    rcx,rsi
   14000937a:	mov    rax,rbx
   14000937d:	mov    rbx,QWORD PTR [rsp+0x40]
   140009382:	mov    rbp,QWORD PTR [rsp+0x48]
   140009387:	mov    rsi,QWORD PTR [rsp+0x50]
   14000938c:	mov    rdi,QWORD PTR [rsp+0x58]
   140009391:	add    rsp,0x20
   140009395:	pop    r15
   140009397:	pop    r14
   140009399:	pop    r12
   14000939b:	rex.W jmp rax
   14000939e:	int3   
   14000939f:	int3   
   1400093a0:	int3   
   1400093a1:	int3   
   1400093a2:	int3   
   1400093a3:	int3   
   1400093a4:	mov    rax,rsp
   1400093a7:	mov    QWORD PTR [rax+0x8],rbx
   1400093ab:	mov    QWORD PTR [rax+0x10],rbp
   1400093af:	mov    QWORD PTR [rax+0x18],rsi
   1400093b3:	mov    QWORD PTR [rax+0x20],rdi
   1400093b7:	push   r14
   1400093b9:	sub    rsp,0x20
   1400093bd:	and    QWORD PTR [r8],0x0
   1400093c1:	mov    rsi,r8
   1400093c4:	mov    rbp,rdx
   1400093c7:	mov    r14d,ecx
   1400093ca:	call   0x1400095e4
   1400093cf:	test   eax,eax
   1400093d1:	js     0x1400093f8
   1400093d3:	mov    rdi,QWORD PTR [rip+0x963e]        # 0x140012a18
   1400093da:	mov    rax,QWORD PTR [rdi]
   1400093dd:	mov    rbx,QWORD PTR [rax+0x28]
   1400093e1:	mov    rcx,rbx
   1400093e4:	call   QWORD PTR [rip+0x1fe6]        # 0x14000b3d0
   1400093ea:	mov    r9,rsi
   1400093ed:	mov    r8,rbp
   1400093f0:	mov    edx,r14d
   1400093f3:	mov    rcx,rdi
   1400093f6:	call   rbx
   1400093f8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400093fd:	mov    rbp,QWORD PTR [rsp+0x38]
   140009402:	mov    rsi,QWORD PTR [rsp+0x40]
   140009407:	mov    rdi,QWORD PTR [rsp+0x48]
   14000940c:	add    rsp,0x20
   140009410:	pop    r14
   140009412:	ret    
   140009413:	int3   
   140009414:	int3   
   140009415:	int3   
   140009416:	int3   
   140009417:	int3   
   140009418:	int3   
   140009419:	int3   
   14000941a:	int3   
   14000941b:	int3   
   14000941c:	int3   
   14000941d:	int3   
   14000941e:	int3   
   14000941f:	int3   
   140009420:	mov    rax,rsp
   140009423:	mov    QWORD PTR [rax+0x8],rbx
   140009427:	mov    QWORD PTR [rax+0x10],rbp
   14000942b:	mov    QWORD PTR [rax+0x18],rsi
   14000942f:	mov    QWORD PTR [rax+0x20],rdi
   140009433:	push   r14
   140009435:	sub    rsp,0x20
   140009439:	mov    rdi,QWORD PTR [rcx+0x10]
   14000943d:	mov    rsi,r9
   140009440:	mov    rbp,r8
   140009443:	mov    r14,rdx
   140009446:	test   rdi,rdi
   140009449:	je     0x14000946b
   14000944b:	mov    rax,QWORD PTR [rdi]
   14000944e:	mov    rbx,QWORD PTR [rax+0x30]
   140009452:	mov    rcx,rbx
   140009455:	call   QWORD PTR [rip+0x1f75]        # 0x14000b3d0
   14000945b:	mov    r9,rsi
   14000945e:	mov    r8,rbp
   140009461:	mov    rdx,r14
   140009464:	mov    rcx,rdi
   140009467:	call   rbx
   140009469:	jmp    0x140009470
   14000946b:	mov    eax,0x8007000e
   140009470:	mov    rbx,QWORD PTR [rsp+0x30]
   140009475:	mov    rbp,QWORD PTR [rsp+0x38]
   14000947a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000947f:	mov    rdi,QWORD PTR [rsp+0x48]
   140009484:	add    rsp,0x20
   140009488:	pop    r14
   14000948a:	ret    
   14000948b:	int3   
   14000948c:	int3   
   14000948d:	int3   
   14000948e:	int3   
   14000948f:	int3   
   140009490:	int3   
   140009491:	int3   
   140009492:	int3   
   140009493:	int3   
   140009494:	mov    rax,rsp
   140009497:	mov    QWORD PTR [rax+0x10],rdx
   14000949b:	push   rdi
   14000949c:	sub    rsp,0x30
   1400094a0:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   1400094a8:	mov    QWORD PTR [rax+0x8],rbx
   1400094ac:	mov    QWORD PTR [rax+0x18],rsi
   1400094b0:	mov    rsi,rdx
   1400094b3:	mov    rdi,rcx
   1400094b6:	and    DWORD PTR [rax-0x18],0x0
   1400094ba:	and    QWORD PTR [rdx],0x0
   1400094be:	mov    DWORD PTR [rax-0x18],0x1
   1400094c5:	mov    rcx,rdx
   1400094c8:	call   0x1400073f8
   1400094cd:	mov    rax,QWORD PTR [rdi]
   1400094d0:	mov    rbx,QWORD PTR [rax+0x20]
   1400094d4:	mov    rcx,rbx
   1400094d7:	call   QWORD PTR [rip+0x1ef3]        # 0x14000b3d0
   1400094dd:	mov    r8,rsi
   1400094e0:	lea    rdx,[rip+0x2579]        # 0x14000ba60
   1400094e7:	mov    rcx,rdi
   1400094ea:	call   rbx
   1400094ec:	mov    rax,rsi
   1400094ef:	mov    rbx,QWORD PTR [rsp+0x40]
   1400094f4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400094f9:	add    rsp,0x30
   1400094fd:	pop    rdi
   1400094fe:	ret    
   1400094ff:	int3   
   140009500:	rex push rbp
   140009502:	sub    rsp,0x20
   140009506:	mov    rbp,rdx
   140009509:	mov    eax,DWORD PTR [rbp+0x20]
   14000950c:	and    eax,0x1
   14000950f:	test   eax,eax
   140009511:	je     0x140009520
   140009513:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140009517:	mov    rcx,QWORD PTR [rbp+0x48]
   14000951b:	call   0x140007388
   140009520:	add    rsp,0x20
   140009524:	pop    rbp
   140009525:	ret    
   140009526:	int3   
   140009527:	int3   
   140009528:	int3   
   140009529:	int3   
   14000952a:	int3   
   14000952b:	int3   
   14000952c:	mov    QWORD PTR [rsp+0x10],rbx
   140009531:	mov    QWORD PTR [rsp+0x18],rbp
   140009536:	mov    QWORD PTR [rsp+0x20],rsi
   14000953b:	push   rdi
   14000953c:	push   r14
   14000953e:	push   r15
   140009540:	sub    rsp,0x20
   140009544:	and    QWORD PTR [r9],0x0
   140009548:	mov    r14,r9
   14000954b:	mov    rbp,r8
   14000954e:	mov    r15,rdx
   140009551:	mov    rdi,rcx
   140009554:	mov    esi,0x80004001
   140009559:	test   rcx,rcx
   14000955c:	je     0x1400095c1
   14000955e:	mov    rax,QWORD PTR [rcx]
   140009561:	mov    rbx,QWORD PTR [rax]
   140009564:	mov    rcx,rbx
   140009567:	call   QWORD PTR [rip+0x1e63]        # 0x14000b3d0
   14000956d:	lea    r8,[rsp+0x40]
   140009572:	mov    rcx,rdi
   140009575:	lea    rdx,[rip+0x3f7c]        # 0x14000d4f8
   14000957c:	call   rbx
   14000957e:	test   eax,eax
   140009580:	js     0x1400095c1
   140009582:	mov    rdi,QWORD PTR [rsp+0x40]
   140009587:	mov    rax,QWORD PTR [rdi]
   14000958a:	mov    rbx,QWORD PTR [rax+0x18]
   14000958e:	mov    rcx,rbx
   140009591:	call   QWORD PTR [rip+0x1e39]        # 0x14000b3d0
   140009597:	mov    r9,r14
   14000959a:	mov    r8,rbp
   14000959d:	mov    rdx,r15
   1400095a0:	mov    rcx,rdi
   1400095a3:	call   rbx
   1400095a5:	mov    rdi,QWORD PTR [rsp+0x40]
   1400095aa:	mov    esi,eax
   1400095ac:	mov    rdx,QWORD PTR [rdi]
   1400095af:	mov    rbx,QWORD PTR [rdx+0x10]
   1400095b3:	mov    rcx,rbx
   1400095b6:	call   QWORD PTR [rip+0x1e14]        # 0x14000b3d0
   1400095bc:	mov    rcx,rdi
   1400095bf:	call   rbx
   1400095c1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400095c6:	mov    eax,esi
   1400095c8:	mov    rsi,QWORD PTR [rsp+0x58]
   1400095cd:	mov    rbp,QWORD PTR [rsp+0x50]
   1400095d2:	add    rsp,0x20
   1400095d6:	pop    r15
   1400095d8:	pop    r14
   1400095da:	pop    rdi
   1400095db:	ret    
   1400095dc:	int3   
   1400095dd:	int3   
   1400095de:	int3   
   1400095df:	int3   
   1400095e0:	int3   
   1400095e1:	int3   
   1400095e2:	int3   
   1400095e3:	int3   
   1400095e4:	mov    QWORD PTR [rsp+0x10],rbx
   1400095e9:	push   rdi
   1400095ea:	sub    rsp,0x30
   1400095ee:	xor    edi,edi
   1400095f0:	cmp    QWORD PTR [rip+0x9421],rdi        # 0x140012a18
   1400095f7:	mov    ebx,edi
   1400095f9:	jne    0x14000965f
   1400095fb:	lea    rcx,[rsp+0x40]
   140009600:	mov    QWORD PTR [rsp+0x40],rdi
   140009605:	call   0x1400073f8
   14000960a:	lea    rax,[rsp+0x40]
   14000960f:	xor    edx,edx
   140009611:	lea    r9,[rip+0x4e70]        # 0x14000e488
   140009618:	mov    QWORD PTR [rsp+0x20],rax
   14000961d:	lea    r8d,[rdi+0x1]
   140009621:	lea    rcx,[rip+0x4ec8]        # 0x14000e4f0
   140009628:	call   QWORD PTR [rip+0x1a2a]        # 0x14000b058
   14000962e:	mov    ebx,eax
   140009630:	test   eax,eax
   140009632:	js     0x140009655
   140009634:	mov    rcx,QWORD PTR [rsp+0x40]
   140009639:	xor    eax,eax
   14000963b:	lock cmpxchg QWORD PTR [rip+0x93d4],rcx        # 0x140012a18
   140009644:	mov    rcx,QWORD PTR [rsp+0x40]
   140009649:	test   rax,rax
   14000964c:	cmove  rcx,rdi
   140009650:	mov    QWORD PTR [rsp+0x40],rcx
   140009655:	lea    rcx,[rsp+0x40]
   14000965a:	call   0x1400073f8
   14000965f:	mov    eax,ebx
   140009661:	mov    rbx,QWORD PTR [rsp+0x48]
   140009666:	add    rsp,0x30
   14000966a:	pop    rdi
   14000966b:	ret    
   14000966c:	int3   
   14000966d:	int3   
   14000966e:	int3   
   14000966f:	int3   
   140009670:	int3   
   140009671:	int3   
   140009672:	int3   
   140009673:	int3   
   140009674:	int3   
   140009675:	int3   
   140009676:	int3   
   140009677:	int3   
   140009678:	int3   
   140009679:	int3   
   14000967a:	int3   
   14000967b:	int3   
   14000967c:	int3   
   14000967d:	int3   
   14000967e:	int3   
   14000967f:	int3   
   140009680:	mov    rax,rsp
   140009683:	push   rdi
   140009684:	sub    rsp,0x30
   140009688:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140009690:	mov    QWORD PTR [rax+0x10],rbx
   140009694:	mov    QWORD PTR [rax+0x18],rsi
   140009698:	mov    rbx,r9
   14000969b:	mov    rdi,r8
   14000969e:	mov    rsi,rdx
   1400096a1:	add    rcx,0xffffffffffffffe0
   1400096a5:	lea    rdx,[rax+0x8]
   1400096a9:	call   0x140009494
   1400096ae:	nop
   1400096af:	mov    r9,rbx
   1400096b2:	mov    r8,rdi
   1400096b5:	mov    rdx,rsi
   1400096b8:	mov    rcx,QWORD PTR [rax]
   1400096bb:	call   0x14000952c
   1400096c0:	mov    ebx,eax
   1400096c2:	lea    rcx,[rsp+0x40]
   1400096c7:	call   0x1400073f8
   1400096cc:	mov    eax,ebx
   1400096ce:	mov    rbx,QWORD PTR [rsp+0x48]
   1400096d3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400096d8:	add    rsp,0x30
   1400096dc:	pop    rdi
   1400096dd:	ret    
   1400096de:	lea    rcx,[rdx+0x40]
   1400096e5:	jmp    0x140007388
   1400096ea:	int3   
   1400096eb:	int3   
   1400096ec:	int3   
   1400096ed:	int3   
   1400096ee:	int3   
   1400096ef:	int3   
   1400096f0:	rex push rbx
   1400096f2:	sub    rsp,0x20
   1400096f6:	mov    rbx,rcx
   1400096f9:	mov    rcx,QWORD PTR [rcx+0x40]
   1400096fd:	lea    rax,[rcx-0x1]
   140009701:	cmp    rax,0xfffffffffffffffd
   140009705:	ja     0x14000970d
   140009707:	call   QWORD PTR [rip+0x1a73]        # 0x14000b180
   14000970d:	mov    rcx,QWORD PTR [rbx+0x48]
   140009711:	lea    rax,[rcx-0x1]
   140009715:	cmp    rax,0xfffffffffffffffd
   140009719:	ja     0x140009724
   14000971b:	or     edx,0xffffffff
   14000971e:	call   QWORD PTR [rip+0x1a54]        # 0x14000b178
   140009724:	xor    eax,eax
   140009726:	add    rsp,0x20
   14000972a:	pop    rbx
   14000972b:	ret    
   14000972c:	int3   
   14000972d:	int3   
   14000972e:	int3   
   14000972f:	int3   
   140009730:	int3   
   140009731:	int3   
   140009732:	int3   
   140009733:	int3   
   140009734:	mov    r9d,DWORD PTR [rcx+0x8]
   140009738:	mov    r8,QWORD PTR [rcx]
   14000973b:	shl    r9,0x4
   14000973f:	add    r9,r8
   140009742:	jmp    0x14000975d
   140009744:	mov    rax,QWORD PTR [r8]
   140009747:	sub    rax,QWORD PTR [rdx]
   14000974a:	jne    0x140009754
   14000974c:	mov    rax,QWORD PTR [r8+0x8]
   140009750:	sub    rax,QWORD PTR [rdx+0x8]
   140009754:	test   rax,rax
   140009757:	je     0x140009762
   140009759:	add    r8,0x10
   14000975d:	cmp    r8,r9
   140009760:	jne    0x140009744
   140009762:	cmp    r8,r9
   140009765:	setne  al
   140009768:	ret    
   140009769:	int3   
   14000976a:	int3   
   14000976b:	int3   
   14000976c:	int3   
   14000976d:	int3   
   14000976e:	int3   
   14000976f:	int3   
   140009770:	mov    rax,rsp
   140009773:	push   r14
   140009775:	sub    rsp,0x30
   140009779:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140009781:	mov    QWORD PTR [rax+0x8],rbx
   140009785:	mov    QWORD PTR [rax+0x18],rsi
   140009789:	mov    QWORD PTR [rax+0x20],rdi
   14000978d:	mov    rsi,r8
   140009790:	mov    edi,edx
   140009792:	mov    r14,rcx
   140009795:	xor    ebx,ebx
   140009797:	cmp    ebx,edi
   140009799:	jae    0x1400097b1
   14000979b:	mov    edx,ebx
   14000979d:	shl    rdx,0x4
   1400097a1:	add    rdx,rsi
   1400097a4:	lea    rcx,[r14+0x10]
   1400097a8:	call   0x140007520
   1400097ad:	inc    ebx
   1400097af:	jmp    0x140009797
   1400097b1:	xor    eax,eax
   1400097b3:	jmp    0x1400097b9
   1400097b5:	mov    eax,DWORD PTR [rsp+0x48]
   1400097b9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400097be:	mov    rsi,QWORD PTR [rsp+0x50]
   1400097c3:	mov    rdi,QWORD PTR [rsp+0x58]
   1400097c8:	add    rsp,0x30
   1400097cc:	pop    r14
   1400097ce:	ret    
   1400097cf:	mov    QWORD PTR [rsp+0x10],rdx
   1400097d4:	push   rbp
   1400097d5:	sub    rsp,0x20
   1400097d9:	mov    rbp,rdx
   1400097dc:	call   0x140009920
   1400097e1:	mov    DWORD PTR [rbp+0x48],eax
   1400097e4:	mov    rcx,QWORD PTR [rbp+0x38]
   1400097e8:	mov    r9d,eax
   1400097eb:	mov    edx,0x69
   1400097f0:	call   0x140009a0c
   1400097f5:	nop
   1400097f6:	lea    rax,[rip+0xffffffffffffffb8]        # 0x1400097b5
   1400097fd:	add    rsp,0x20
   140009801:	pop    rbp
   140009802:	ret    
   140009803:	int3   
   140009804:	int3   
   140009805:	int3   
   140009806:	int3   
   140009807:	int3   
   140009808:	int3   
   140009809:	int3   
   14000980a:	int3   
   14000980b:	int3   
   14000980c:	int3   
   14000980d:	int3   
   14000980e:	int3   
   14000980f:	int3   
   140009810:	mov    rax,rsp
   140009813:	push   rbx
   140009814:	sub    rsp,0x50
   140009818:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140009820:	movaps XMMWORD PTR [rax-0x18],xmm6
   140009824:	mov    rbx,rcx
   140009827:	mov    QWORD PTR [rax-0x28],r8
   14000982b:	mov    DWORD PTR [rax-0x20],edx
   14000982e:	mov    r10,QWORD PTR [rcx+0x18]
   140009832:	mov    r11,QWORD PTR [rcx+0x10]
   140009836:	movaps xmm6,XMMWORD PTR [rax-0x28]
   14000983a:	movdqa XMMWORD PTR [rax-0x28],xmm6
   14000983f:	cmp    r11,r10
   140009842:	je     0x140009892
   140009844:	mov    rdx,r11
   140009847:	lea    rcx,[rsp+0x30]
   14000984c:	call   0x140009734
   140009851:	test   al,al
   140009853:	jne    0x14000985e
   140009855:	add    r11,0x10
   140009859:	cmp    r11,r10
   14000985c:	jne    0x140009844
   14000985e:	cmp    r11,r10
   140009861:	je     0x140009892
   140009863:	movdqa XMMWORD PTR [rsp+0x30],xmm6
   140009869:	lea    rdx,[r11+0x10]
   14000986d:	jmp    0x14000988d
   14000986f:	lea    rcx,[rsp+0x30]
   140009874:	call   0x140009734
   140009879:	test   al,al
   14000987b:	jne    0x140009889
   14000987d:	movups xmm0,XMMWORD PTR [rdx]
   140009880:	movdqu XMMWORD PTR [r11],xmm0
   140009885:	add    r11,0x10
   140009889:	add    rdx,0x10
   14000988d:	cmp    rdx,r10
   140009890:	jne    0x14000986f
   140009892:	mov    rcx,QWORD PTR [rbx+0x18]
   140009896:	mov    rax,QWORD PTR [rbx+0x10]
   14000989a:	cmp    r11,rax
   14000989d:	jne    0x1400098aa
   14000989f:	cmp    rcx,rcx
   1400098a2:	jne    0x1400098aa
   1400098a4:	mov    QWORD PTR [rbx+0x18],rax
   1400098a8:	jmp    0x1400098d0
   1400098aa:	cmp    r11,rcx
   1400098ad:	je     0x1400098d0
   1400098af:	mov    rax,rcx
   1400098b2:	cmp    rcx,rcx
   1400098b5:	je     0x1400098cc
   1400098b7:	movups xmm0,XMMWORD PTR [rcx]
   1400098ba:	movdqu XMMWORD PTR [r11],xmm0
   1400098bf:	add    r11,0x10
   1400098c3:	add    rcx,0x10
   1400098c7:	cmp    rcx,rax
   1400098ca:	jne    0x1400098b7
   1400098cc:	mov    QWORD PTR [rbx+0x18],r11
   1400098d0:	xor    eax,eax
   1400098d2:	jmp    0x1400098d8
   1400098d4:	mov    eax,DWORD PTR [rsp+0x68]
   1400098d8:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   1400098dd:	add    rsp,0x50
   1400098e1:	pop    rbx
   1400098e2:	ret    
   1400098e3:	mov    QWORD PTR [rsp+0x10],rdx
   1400098e8:	push   rbp
   1400098e9:	sub    rsp,0x20
   1400098ed:	mov    rbp,rdx
   1400098f0:	call   0x140009920
   1400098f5:	mov    DWORD PTR [rbp+0x68],eax
   1400098f8:	mov    rcx,QWORD PTR [rbp+0x58]
   1400098fc:	mov    r9d,eax
   1400098ff:	mov    edx,0x7a
   140009904:	call   0x140009a0c
   140009909:	nop
   14000990a:	lea    rax,[rip+0xffffffffffffffc3]        # 0x1400098d4
   140009911:	add    rsp,0x20
   140009915:	pop    rbp
   140009916:	ret    
   140009917:	int3   
   140009918:	int3   
   140009919:	int3   
   14000991a:	int3   
   14000991b:	int3   
   14000991c:	int3   
   14000991d:	int3   
   14000991e:	int3   
   14000991f:	int3   
   140009920:	rex push rbx
   140009922:	sub    rsp,0x30
   140009926:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000992f:	mov    rbx,QWORD PTR [rip+0x90a2]        # 0x1400129d8
   140009936:	test   rbx,rbx
   140009939:	je     0x140009948
   14000993b:	mov    rcx,rbx
   14000993e:	call   QWORD PTR [rip+0x1a8c]        # 0x14000b3d0
   140009944:	call   rbx
   140009946:	jmp    0x140009963
   140009948:	xor    edx,edx
   14000994a:	xor    ecx,ecx
   14000994c:	call   0x14000514c
   140009951:	nop
   140009952:	mov    eax,DWORD PTR [rsp+0x40]
   140009956:	jmp    0x14000995d
   140009958:	mov    eax,0x8007000e
   14000995d:	jmp    0x140009963
   14000995f:	mov    eax,DWORD PTR [rsp+0x40]
   140009963:	add    rsp,0x30
   140009967:	pop    rbx
   140009968:	ret    
   140009969:	mov    QWORD PTR [rsp+0x10],rdx
   14000996e:	push   rbp
   14000996f:	sub    rsp,0x20
   140009973:	mov    rbp,rdx
   140009976:	mov    rax,QWORD PTR [rbp+0x28]
   14000997a:	mov    ecx,DWORD PTR [rax+0x4]
   14000997d:	mov    DWORD PTR [rbp+0x40],ecx
   140009980:	lea    rax,[rip+0xffffffffffffffcb]        # 0x140009952
   140009987:	add    rsp,0x20
   14000998b:	pop    rbp
   14000998c:	ret    
   14000998d:	int3   
   14000998e:	mov    QWORD PTR [rsp+0x10],rdx
   140009993:	push   rbp
   140009994:	sub    rsp,0x20
   140009998:	mov    rbp,rdx
   14000999b:	lea    rax,[rip+0xffffffffffffffb6]        # 0x140009958
   1400099a2:	add    rsp,0x20
   1400099a6:	pop    rbp
   1400099a7:	ret    
   1400099a8:	int3   
   1400099a9:	mov    QWORD PTR [rsp+0x10],rdx
   1400099ae:	push   rbx
   1400099af:	push   rbp
   1400099b0:	sub    rsp,0x28
   1400099b4:	mov    rbp,rdx
   1400099b7:	mov    rbx,QWORD PTR [rip+0x902a]        # 0x1400129e8
   1400099be:	test   rbx,rbx
   1400099c1:	je     0x1400099d7
   1400099c3:	mov    rcx,rbx
   1400099c6:	call   QWORD PTR [rip+0x1a04]        # 0x14000b3d0
   1400099cc:	call   rbx
   1400099ce:	test   eax,eax
   1400099d0:	jns    0x1400099d7
   1400099d2:	mov    DWORD PTR [rbp+0x40],eax
   1400099d5:	jmp    0x1400099f7
   1400099d7:	mov    rcx,QWORD PTR [rbp+0x38]
   1400099db:	cmp    BYTE PTR [rip+0x8862],0x0        # 0x140012244
   1400099e2:	je     0x1400099f0
   1400099e4:	mov    r9d,0x8007023e
   1400099ea:	call   0x140009a48
   1400099ef:	int3   
   1400099f0:	mov    DWORD PTR [rbp+0x40],0x8007023e
   1400099f7:	lea    rax,[rip+0xffffffffffffff61]        # 0x14000995f
   1400099fe:	add    rsp,0x28
   140009a02:	pop    rbp
   140009a03:	pop    rbx
   140009a04:	ret    
   140009a05:	int3   
   140009a06:	int3   
   140009a07:	int3   
   140009a08:	int3   
   140009a09:	int3   
   140009a0a:	int3   
   140009a0b:	int3   
   140009a0c:	sub    rsp,0x48
   140009a10:	mov    rax,QWORD PTR [rsp+0x48]
   140009a15:	lea    r8,[rip+0x4a7c]        # 0x14000e498
   140009a1c:	mov    DWORD PTR [rsp+0x38],r9d
   140009a21:	xor    r9d,r9d
   140009a24:	mov    DWORD PTR [rsp+0x30],0x1
   140009a2c:	mov    QWORD PTR [rsp+0x28],rax
   140009a31:	and    QWORD PTR [rsp+0x20],0x0
   140009a37:	call   0x140008340
   140009a3c:	add    rsp,0x48
   140009a40:	ret    
   140009a41:	int3   
   140009a42:	int3   
   140009a43:	int3   
   140009a44:	int3   
   140009a45:	int3   
   140009a46:	int3   
   140009a47:	int3   
   140009a48:	sub    rsp,0x48
   140009a4c:	mov    rax,QWORD PTR [rsp+0x48]
   140009a51:	lea    r8,[rip+0x3a58]        # 0x14000d4b0
   140009a58:	mov    DWORD PTR [rsp+0x38],r9d
   140009a5d:	mov    edx,0xad2
   140009a62:	mov    DWORD PTR [rsp+0x30],0x4
   140009a6a:	xor    r9d,r9d
   140009a6d:	mov    QWORD PTR [rsp+0x28],rax
   140009a72:	and    QWORD PTR [rsp+0x20],0x0
   140009a78:	call   0x140008340
   140009a7d:	add    rsp,0x48
   140009a81:	ret    
   140009a82:	int3   
   140009a83:	int3   
   140009a84:	int3   
   140009a85:	int3   
   140009a86:	int3   
   140009a87:	int3   
   140009a88:	rex push rbx
   140009a8a:	sub    rsp,0x20
   140009a8e:	mov    rbx,rcx
   140009a91:	call   0x1400030a0
   140009a96:	lea    r8,[rip+0x4a4b]        # 0x14000e4e8
   140009a9d:	mov    rcx,rbx
   140009aa0:	mov    rdx,QWORD PTR [rax+0x8]
   140009aa4:	call   0x14000724c
   140009aa9:	lea    rax,[rip+0x4980]        # 0x14000e430
   140009ab0:	mov    rcx,rbx
   140009ab3:	mov    QWORD PTR [rbx],rax
   140009ab6:	call   0x14000a28c
   140009abb:	mov    rax,rbx
   140009abe:	add    rsp,0x20
   140009ac2:	pop    rbx
   140009ac3:	ret    
   140009ac4:	int3   
   140009ac5:	int3   
   140009ac6:	int3   
   140009ac7:	int3   
   140009ac8:	int3   
   140009ac9:	int3   
   140009aca:	int3   
   140009acb:	int3   
   140009acc:	sub    rsp,0x68
   140009ad0:	mov    rax,QWORD PTR [rip+0x8551]        # 0x140012028
   140009ad7:	xor    rax,rsp
   140009ada:	mov    QWORD PTR [rsp+0x50],rax
   140009adf:	cmp    DWORD PTR [rcx],0x5
   140009ae2:	mov    r8,rdx
   140009ae5:	mov    r10,rcx
   140009ae8:	jbe    0x140009b21
   140009aea:	movabs rdx,0x400000000000
   140009af4:	call   0x140003070
   140009af9:	test   al,al
   140009afb:	je     0x140009b21
   140009afd:	lea    rax,[rsp+0x30]
   140009b02:	xor    r9d,r9d
   140009b05:	mov    QWORD PTR [rsp+0x28],rax
   140009b0a:	lea    rdx,[rip+0x485b]        # 0x14000e36c
   140009b11:	mov    rcx,r10
   140009b14:	mov    DWORD PTR [rsp+0x20],0x2
   140009b1c:	call   0x140002fc0
   140009b21:	mov    rcx,QWORD PTR [rsp+0x50]
   140009b26:	xor    rcx,rsp
   140009b29:	call   0x140004dd0
   140009b2e:	add    rsp,0x68
   140009b32:	ret    
   140009b33:	int3   
   140009b34:	int3   
   140009b35:	int3   
   140009b36:	int3   
   140009b37:	int3   
   140009b38:	int3   
   140009b39:	int3   
   140009b3a:	int3   
   140009b3b:	int3   
   140009b3c:	rex push rbx
   140009b3e:	sub    rsp,0x20
   140009b42:	mov    rbx,rcx
   140009b45:	add    rcx,0x138
   140009b4c:	call   0x14000a65c
   140009b51:	lea    rcx,[rbx+0x38]
   140009b55:	call   0x140009b98
   140009b5a:	lea    rcx,[rbx+0x8]
   140009b5e:	cmp    DWORD PTR [rcx+0x18],0x0
   140009b62:	je     0x140009b69
   140009b64:	call   0x140007190
   140009b69:	add    rsp,0x20
   140009b6d:	pop    rbx
   140009b6e:	ret    
   140009b6f:	int3   
   140009b70:	int3   
   140009b71:	int3   
   140009b72:	int3   
   140009b73:	int3   
   140009b74:	int3   
   140009b75:	int3   
   140009b76:	int3   
   140009b77:	int3   
   140009b78:	sub    rsp,0x28
   140009b7c:	cmp    BYTE PTR [rcx+0x1],0x0
   140009b80:	je     0x140009b8c
   140009b82:	mov    BYTE PTR [rcx+0x1],0x0
   140009b86:	call   QWORD PTR [rip+0x149c]        # 0x14000b028
   140009b8c:	add    rsp,0x28
   140009b90:	ret    
   140009b91:	int3   
   140009b92:	int3   
   140009b93:	int3   
   140009b94:	int3   
   140009b95:	int3   
   140009b96:	int3   
   140009b97:	int3   
   140009b98:	rex push rbx
   140009b9a:	sub    rsp,0x20
   140009b9e:	mov    rbx,rcx
   140009ba1:	add    rcx,0xe8
   140009ba8:	call   0x140008a5c
   140009bad:	cmp    BYTE PTR [rbx+0x48],0x0
   140009bb1:	je     0x140009bc1
   140009bb3:	mov    rcx,QWORD PTR [rbx+0x40]
   140009bb7:	call   QWORD PTR [rip+0x16fb]        # 0x14000b2b8
   140009bbd:	mov    BYTE PTR [rbx+0x48],0x0
   140009bc1:	and    QWORD PTR [rbx+0x40],0x0
   140009bc6:	cmp    DWORD PTR [rbx],0x1
   140009bc9:	jne    0x140009bde
   140009bcb:	mov    rcx,QWORD PTR [rbx+0x28]
   140009bcf:	lea    rdx,[rbx+0x8]
   140009bd3:	mov    DWORD PTR [rbx],0x2
   140009bd9:	call   0x140009acc
   140009bde:	mov    DWORD PTR [rbx],0x3
   140009be4:	add    rsp,0x20
   140009be8:	pop    rbx
   140009be9:	ret    
   140009bea:	int3   
   140009beb:	int3   
   140009bec:	int3   
   140009bed:	int3   
   140009bee:	int3   
   140009bef:	int3   
   140009bf0:	rex push rbx
   140009bf2:	sub    rsp,0x20
   140009bf6:	lea    rax,[rip+0x4833]        # 0x14000e430
   140009bfd:	mov    rbx,rcx
   140009c00:	mov    QWORD PTR [rcx],rax
   140009c03:	call   0x140009d80
   140009c08:	mov    rcx,rbx
   140009c0b:	add    rsp,0x20
   140009c0f:	pop    rbx
   140009c10:	jmp    0x140009b3c
   140009c15:	int3   
   140009c16:	int3   
   140009c17:	int3   
   140009c18:	int3   
   140009c19:	int3   
   140009c1a:	int3   
   140009c1b:	int3   
   140009c1c:	rex push rbx
   140009c1e:	sub    rsp,0x20
   140009c22:	lea    rax,[rip+0x1f6f]        # 0x14000bb98
   140009c29:	mov    rbx,rcx
   140009c2c:	mov    QWORD PTR [rcx],rax
   140009c2f:	call   0x140009d80
   140009c34:	mov    rcx,rbx
   140009c37:	add    rsp,0x20
   140009c3b:	pop    rbx
   140009c3c:	jmp    0x140009b3c
   140009c41:	int3   
   140009c42:	int3   
   140009c43:	int3   
   140009c44:	int3   
   140009c45:	int3   
   140009c46:	int3   
   140009c47:	int3   
   140009c48:	rex push rbx
   140009c4a:	sub    rsp,0x20
   140009c4e:	lea    rax,[rip+0x1ee3]        # 0x14000bb38
   140009c55:	mov    rbx,rcx
   140009c58:	mov    QWORD PTR [rcx],rax
   140009c5b:	call   0x140009d80
   140009c60:	mov    rcx,rbx
   140009c63:	add    rsp,0x20
   140009c67:	pop    rbx
   140009c68:	jmp    0x140009b3c
   140009c6d:	int3   
   140009c6e:	int3   
   140009c6f:	int3   
   140009c70:	int3   
   140009c71:	int3   
   140009c72:	int3   
   140009c73:	int3   
   140009c74:	rex push rbx
   140009c76:	sub    rsp,0x20
   140009c7a:	lea    rax,[rip+0x1edf]        # 0x14000bb60
   140009c81:	mov    rbx,rcx
   140009c84:	mov    QWORD PTR [rcx],rax
   140009c87:	call   0x140009d80
   140009c8c:	mov    rcx,rbx
   140009c8f:	add    rsp,0x20
   140009c93:	pop    rbx
   140009c94:	jmp    0x140009b3c
   140009c99:	int3   
   140009c9a:	int3   
   140009c9b:	int3   
   140009c9c:	int3   
   140009c9d:	int3   
   140009c9e:	int3   
   140009c9f:	int3   
   140009ca0:	mov    QWORD PTR [rsp+0x8],rbx
   140009ca5:	push   rdi
   140009ca6:	sub    rsp,0x20
   140009caa:	mov    rdi,rcx
   140009cad:	mov    DWORD PTR [rcx+0x2c],0xc0000001
   140009cb4:	add    rcx,0x10
   140009cb8:	mov    ebx,edx
   140009cba:	call   0x1400073f8
   140009cbf:	test   bl,0x1
   140009cc2:	je     0x140009ccd
   140009cc4:	mov    rcx,rdi
   140009cc7:	call   QWORD PTR [rip+0x165b]        # 0x14000b328
   140009ccd:	mov    rax,rdi
   140009cd0:	mov    rbx,QWORD PTR [rsp+0x30]
   140009cd5:	add    rsp,0x20
   140009cd9:	pop    rdi
   140009cda:	ret    
   140009cdb:	int3   
   140009cdc:	int3   
   140009cdd:	int3   
   140009cde:	int3   
   140009cdf:	int3   
   140009ce0:	int3   
   140009ce1:	int3   
   140009ce2:	int3   
   140009ce3:	int3   
   140009ce4:	int3   
   140009ce5:	int3   
   140009ce6:	int3   
   140009ce7:	int3   
   140009ce8:	int3   
   140009ce9:	int3   
   140009cea:	int3   
   140009ceb:	int3   
   140009cec:	int3   
   140009ced:	int3   
   140009cee:	int3   
   140009cef:	int3   
   140009cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140009cf5:	push   rdi
   140009cf6:	sub    rsp,0x20
   140009cfa:	mov    rbx,rcx
   140009cfd:	mov    edi,edx
   140009cff:	mov    rcx,QWORD PTR [rcx+0x30]
   140009d03:	test   rcx,rcx
   140009d06:	je     0x140009d1d
   140009d08:	call   QWORD PTR [rip+0x161a]        # 0x14000b328
   140009d0e:	and    QWORD PTR [rbx+0x30],0x0
   140009d13:	and    QWORD PTR [rbx+0x38],0x0
   140009d18:	and    QWORD PTR [rbx+0x40],0x0
   140009d1d:	lea    rcx,[rbx+0x10]
   140009d21:	mov    DWORD PTR [rbx+0x2c],0xc0000001
   140009d28:	call   0x1400073f8
   140009d2d:	test   dil,0x1
   140009d31:	je     0x140009d3c
   140009d33:	mov    rcx,rbx
   140009d36:	call   QWORD PTR [rip+0x15ec]        # 0x14000b328
   140009d3c:	mov    rax,rbx
   140009d3f:	mov    rbx,QWORD PTR [rsp+0x30]
   140009d44:	add    rsp,0x20
   140009d48:	pop    rdi
   140009d49:	ret    
   140009d4a:	int3   
   140009d4b:	int3   
   140009d4c:	int3   
   140009d4d:	int3   
   140009d4e:	int3   
   140009d4f:	int3   
   140009d50:	mov    QWORD PTR [rsp+0x8],rbx
   140009d55:	push   rdi
   140009d56:	sub    rsp,0x20
   140009d5a:	mov    rdi,rcx
   140009d5d:	mov    rbx,rdx
   140009d60:	mov    rcx,rdx
   140009d63:	call   QWORD PTR [rip+0x1427]        # 0x14000b190
   140009d69:	mov    QWORD PTR [rdi],rbx
   140009d6c:	mov    rax,rdi
   140009d6f:	mov    rbx,QWORD PTR [rsp+0x30]
   140009d74:	add    rsp,0x20
   140009d78:	pop    rdi
   140009d79:	ret    
   140009d7a:	int3   
   140009d7b:	int3   
   140009d7c:	int3   
   140009d7d:	int3   
   140009d7e:	int3   
   140009d7f:	int3   
   140009d80:	mov    QWORD PTR [rsp+0x10],rbx
   140009d85:	mov    QWORD PTR [rsp+0x18],rsi
   140009d8a:	push   rdi
   140009d8b:	sub    rsp,0x20
   140009d8f:	lea    rdi,[rcx+0x138]
   140009d96:	mov    rbx,rcx
   140009d99:	cmp    QWORD PTR [rdi],0x0
   140009d9d:	mov    sil,0x1
   140009da0:	je     0x140009dd9
   140009da2:	lea    rdx,[rsp+0x30]
   140009da7:	call   0x140002810
   140009dac:	mov    rax,QWORD PTR [rdi]
   140009daf:	test   rax,rax
   140009db2:	je     0x140009db9
   140009db4:	cmp    DWORD PTR [rax],0x1
   140009db7:	je     0x140009dc4
   140009db9:	xor    sil,sil
   140009dbc:	mov    rcx,rdi
   140009dbf:	call   0x14000a65c
   140009dc4:	mov    rcx,QWORD PTR [rsp+0x30]
   140009dc9:	test   rcx,rcx
   140009dcc:	je     0x140009dd4
   140009dce:	call   QWORD PTR [rip+0x13dc]        # 0x14000b1b0
   140009dd4:	test   sil,sil
   140009dd7:	je     0x140009e01
   140009dd9:	mov    rcx,QWORD PTR [rbx+0x30]
   140009ddd:	cmp    DWORD PTR [rcx],0x1
   140009de0:	jne    0x140009e01
   140009de2:	cmp    DWORD PTR [rcx+0x5c],0x0
   140009de6:	lea    r8,[rsp+0x30]
   140009deb:	mov    edx,0x8007023e
   140009df0:	cmovl  edx,DWORD PTR [rcx+0x5c]
   140009df4:	call   0x140007438
   140009df9:	mov    rcx,rbx
   140009dfc:	call   0x1400027a0
   140009e01:	mov    rbx,QWORD PTR [rsp+0x38]
   140009e06:	mov    rsi,QWORD PTR [rsp+0x40]
   140009e0b:	add    rsp,0x20
   140009e0f:	pop    rdi
   140009e10:	ret    
   140009e11:	int3   
   140009e12:	int3   
   140009e13:	int3   
   140009e14:	int3   
   140009e15:	int3   
   140009e16:	int3   
   140009e17:	int3   
   140009e18:	rex push rbx
   140009e1a:	sub    rsp,0x20
   140009e1e:	add    rcx,0xf8
   140009e25:	mov    rbx,rdx
   140009e28:	call   0x14000a638
   140009e2d:	mov    rax,rbx
   140009e30:	add    rsp,0x20
   140009e34:	pop    rbx
   140009e35:	ret    
   140009e36:	int3   
   140009e37:	int3   
   140009e38:	int3   
   140009e39:	int3   
   140009e3a:	int3   
   140009e3b:	int3   
   140009e3c:	rex push rbx
   140009e3e:	sub    rsp,0x40
   140009e42:	mov    rax,QWORD PTR [rsp+0x48]
   140009e47:	lea    r8,[rip+0x3662]        # 0x14000d4b0
   140009e4e:	mov    ebx,r9d
   140009e51:	mov    edx,0x76d
   140009e56:	mov    DWORD PTR [rsp+0x38],ebx
   140009e5a:	xor    r9d,r9d
   140009e5d:	mov    DWORD PTR [rsp+0x30],0x3
   140009e65:	mov    QWORD PTR [rsp+0x28],rax
   140009e6a:	and    QWORD PTR [rsp+0x20],0x0
   140009e70:	call   0x140008340
   140009e75:	mov    eax,ebx
   140009e77:	add    rsp,0x40
   140009e7b:	pop    rbx
   140009e7c:	ret    
   140009e7d:	int3   
   140009e7e:	int3   
   140009e7f:	int3   
   140009e80:	int3   
   140009e81:	int3   
   140009e82:	int3   
   140009e83:	int3   
   140009e84:	int3   
   140009e85:	int3   
   140009e86:	int3   
   140009e87:	int3   
   140009e88:	int3   
   140009e89:	int3   
   140009e8a:	int3   
   140009e8b:	int3   
   140009e8c:	int3   
   140009e8d:	int3   
   140009e8e:	int3   
   140009e8f:	int3   
   140009e90:	mov    QWORD PTR [rsp+0x18],rbx
   140009e95:	push   rbp
   140009e96:	push   rsi
   140009e97:	push   rdi
   140009e98:	lea    rbp,[rsp-0x90]
   140009ea0:	sub    rsp,0x190
   140009ea7:	mov    rax,QWORD PTR [rip+0x817a]        # 0x140012028
   140009eae:	xor    rax,rsp
   140009eb1:	mov    QWORD PTR [rbp+0x80],rax
   140009eb8:	mov    rax,QWORD PTR [rcx]
   140009ebb:	mov    rsi,rcx
   140009ebe:	mov    rdi,rdx
   140009ec1:	mov    rbx,QWORD PTR [rax+0x10]
   140009ec5:	mov    rcx,rbx
   140009ec8:	call   QWORD PTR [rip+0x1502]        # 0x14000b3d0
   140009ece:	mov    edx,DWORD PTR [rdi+0x8]
   140009ed1:	mov    rcx,rsi
   140009ed4:	call   rbx
   140009ed6:	xor    ebx,ebx
   140009ed8:	test   al,al
   140009eda:	mov    rax,QWORD PTR [rsi+0x30]
   140009ede:	mov    r10,QWORD PTR [rax+0x28]
   140009ee2:	jne    0x14000a01b
   140009ee8:	cmp    DWORD PTR [r10],0x5
   140009eec:	jbe    0x14000a199
   140009ef2:	movabs rdx,0x600000000000
   140009efc:	mov    rcx,r10
   140009eff:	call   0x140003070
   140009f04:	test   al,al
   140009f06:	je     0x14000a199
   140009f0c:	mov    eax,DWORD PTR [rdi+0x4]
   140009f0f:	lea    rcx,[rbp-0x80]
   140009f13:	mov    rdx,QWORD PTR [rdi+0x30]
   140009f17:	mov    DWORD PTR [rsp+0x3c],eax
   140009f1b:	lea    rax,[rsp+0x3c]
   140009f20:	mov    QWORD PTR [rsp+0x70],rax
   140009f25:	mov    QWORD PTR [rsp+0x78],0x4
   140009f2e:	call   0x140008a98
   140009f33:	mov    rdx,QWORD PTR [rdi+0x78]
   140009f37:	lea    rcx,[rdi+0x38]
   140009f3b:	mov    QWORD PTR [rbp-0x70],rcx
   140009f3f:	lea    rcx,[rbp-0x60]
   140009f43:	mov    QWORD PTR [rbp-0x68],0x4
   140009f4b:	call   0x140008a98
   140009f50:	mov    ecx,DWORD PTR [rdi]
   140009f52:	lea    rax,[rsp+0x38]
   140009f57:	mov    rdx,QWORD PTR [rdi+0x10]
   140009f5b:	mov    DWORD PTR [rsp+0x38],ecx
   140009f5f:	lea    rcx,[rbp-0x40]
   140009f63:	mov    QWORD PTR [rbp-0x50],rax
   140009f67:	mov    QWORD PTR [rbp-0x48],0x4
   140009f6f:	call   0x140008acc
   140009f74:	mov    ecx,DWORD PTR [rdi+0x18]
   140009f77:	lea    rax,[rsp+0x40]
   140009f7c:	mov    rdx,QWORD PTR [rdi+0x40]
   140009f80:	mov    DWORD PTR [rsp+0x40],ecx
   140009f84:	lea    rcx,[rbp-0x20]
   140009f88:	mov    QWORD PTR [rbp-0x30],rax
   140009f8c:	mov    QWORD PTR [rbp-0x28],0x4
   140009f94:	call   0x140008a98
   140009f99:	mov    ecx,DWORD PTR [rdi+0x48]
   140009f9c:	lea    rax,[rsp+0x30]
   140009fa1:	mov    rdx,QWORD PTR [rdi+0x50]
   140009fa5:	mov    DWORD PTR [rsp+0x30],ecx
   140009fa9:	lea    rcx,[rbp+0x0]
   140009fad:	mov    QWORD PTR [rbp-0x10],rax
   140009fb1:	mov    QWORD PTR [rbp-0x8],0x4
   140009fb9:	call   0x140008a98
   140009fbe:	mov    rdx,QWORD PTR [rdi+0x58]
   140009fc2:	lea    rcx,[rbp+0x10]
   140009fc6:	call   0x140008acc
   140009fcb:	mov    ecx,DWORD PTR [rdi+0x60]
   140009fce:	lea    rax,[rsp+0x34]
   140009fd3:	mov    rdx,QWORD PTR [rdi+0x68]
   140009fd7:	mov    DWORD PTR [rsp+0x34],ecx
   140009fdb:	lea    rcx,[rbp+0x30]
   140009fdf:	mov    QWORD PTR [rbp+0x20],rax
   140009fe3:	mov    QWORD PTR [rbp+0x28],0x4
   140009feb:	call   0x140008a98
   140009ff0:	mov    rdx,QWORD PTR [rdi+0x70]
   140009ff4:	lea    rcx,[rbp+0x40]
   140009ff8:	call   0x140008acc
   140009ffd:	lea    rax,[rsp+0x50]
   14000a002:	mov    QWORD PTR [rsp+0x28],rax
   14000a007:	lea    rdx,[rip+0x3fee]        # 0x14000dffc
   14000a00e:	mov    DWORD PTR [rsp+0x20],0x10
   14000a016:	jmp    0x14000a186
   14000a01b:	cmp    DWORD PTR [r10],0x5
   14000a01f:	jbe    0x14000a199
   14000a025:	movabs rdx,0x400000000000
   14000a02f:	mov    rcx,r10
   14000a032:	call   0x140003070
   14000a037:	test   al,al
   14000a039:	je     0x14000a199
   14000a03f:	mov    eax,DWORD PTR [rdi+0x4]
   14000a042:	lea    rcx,[rbp-0x80]
   14000a046:	mov    rdx,QWORD PTR [rdi+0x30]
   14000a04a:	mov    DWORD PTR [rsp+0x34],eax
   14000a04e:	lea    rax,[rsp+0x34]
   14000a053:	mov    QWORD PTR [rsp+0x70],rax
   14000a058:	mov    QWORD PTR [rsp+0x78],0x4
   14000a061:	call   0x140008a98
   14000a066:	mov    rdx,QWORD PTR [rdi+0x78]
   14000a06a:	lea    rcx,[rdi+0x38]
   14000a06e:	mov    QWORD PTR [rbp-0x70],rcx
   14000a072:	lea    rcx,[rbp-0x60]
   14000a076:	mov    QWORD PTR [rbp-0x68],0x4
   14000a07e:	call   0x140008a98
   14000a083:	mov    ecx,DWORD PTR [rdi]
   14000a085:	lea    rax,[rsp+0x30]
   14000a08a:	mov    rdx,QWORD PTR [rdi+0x10]
   14000a08e:	mov    DWORD PTR [rsp+0x30],ecx
   14000a092:	lea    rcx,[rbp-0x40]
   14000a096:	mov    QWORD PTR [rbp-0x50],rax
   14000a09a:	mov    QWORD PTR [rbp-0x48],0x4
   14000a0a2:	call   0x140008acc
   14000a0a7:	mov    ecx,DWORD PTR [rdi+0x18]
   14000a0aa:	lea    rax,[rsp+0x40]
   14000a0af:	mov    rdx,QWORD PTR [rdi+0x40]
   14000a0b3:	mov    DWORD PTR [rsp+0x40],ecx
   14000a0b7:	lea    rcx,[rbp-0x20]
   14000a0bb:	mov    QWORD PTR [rbp-0x30],rax
   14000a0bf:	mov    QWORD PTR [rbp-0x28],0x4
   14000a0c7:	call   0x140008a98
   14000a0cc:	mov    ecx,DWORD PTR [rdi+0x48]
   14000a0cf:	lea    rax,[rsp+0x38]
   14000a0d4:	mov    rdx,QWORD PTR [rdi+0x50]
   14000a0d8:	mov    DWORD PTR [rsp+0x38],ecx
   14000a0dc:	lea    rcx,[rbp+0x0]
   14000a0e0:	mov    QWORD PTR [rbp-0x10],rax
   14000a0e4:	mov    QWORD PTR [rbp-0x8],0x4
   14000a0ec:	call   0x140008a98
   14000a0f1:	mov    rdx,QWORD PTR [rdi+0x58]
   14000a0f5:	lea    rcx,[rbp+0x10]
   14000a0f9:	call   0x140008acc
   14000a0fe:	mov    ecx,DWORD PTR [rdi+0x60]
   14000a101:	lea    rax,[rsp+0x3c]
   14000a106:	mov    rdx,QWORD PTR [rdi+0x68]
   14000a10a:	mov    DWORD PTR [rsp+0x3c],ecx
   14000a10e:	lea    rcx,[rbp+0x30]
   14000a112:	mov    QWORD PTR [rbp+0x20],rax
   14000a116:	mov    QWORD PTR [rbp+0x28],0x4
   14000a11e:	call   0x140008a98
   14000a123:	mov    rdx,QWORD PTR [rdi+0x70]
   14000a127:	lea    rcx,[rbp+0x40]
   14000a12b:	call   0x140008acc
   14000a130:	mov    ecx,DWORD PTR [rdi+0x8]
   14000a133:	lea    rax,[rsp+0x44]
   14000a138:	mov    rdx,QWORD PTR [rdi+0x28]
   14000a13c:	mov    QWORD PTR [rbp+0x50],rax
   14000a140:	mov    eax,DWORD PTR [rdi+0x3c]
   14000a143:	mov    DWORD PTR [rsp+0x48],eax
   14000a147:	lea    rax,[rsp+0x48]
   14000a14c:	mov    DWORD PTR [rsp+0x44],ecx
   14000a150:	lea    rcx,[rbp+0x70]
   14000a154:	mov    QWORD PTR [rbp+0x60],rax
   14000a158:	mov    QWORD PTR [rbp+0x58],0x4
   14000a160:	mov    QWORD PTR [rbp+0x68],0x4
   14000a168:	call   0x140008a98
   14000a16d:	lea    rax,[rsp+0x50]
   14000a172:	mov    QWORD PTR [rsp+0x28],rax
   14000a177:	lea    rdx,[rip+0x3f83]        # 0x14000e101
   14000a17e:	mov    DWORD PTR [rsp+0x20],0x13
   14000a186:	mov    r8,QWORD PTR [rsi+0x30]
   14000a18a:	xor    r9d,r9d
   14000a18d:	add    r8,0x8
   14000a191:	mov    rcx,r10
   14000a194:	call   0x140002fc0
   14000a199:	lea    rdx,[rsp+0x48]
   14000a19e:	mov    rcx,rsi
   14000a1a1:	call   0x140002810
   14000a1a6:	mov    rcx,QWORD PTR [rsi+0x30]
   14000a1aa:	mov    eax,DWORD PTR [rdi+0x4]
   14000a1ad:	cmp    eax,DWORD PTR [rcx+0x5c]
   14000a1b0:	je     0x14000a1c8
   14000a1b2:	cmp    eax,DWORD PTR [rcx+0x54]
   14000a1b5:	jne    0x14000a1bc
   14000a1b7:	cmp    DWORD PTR [rcx+0x54],ebx
   14000a1ba:	jl     0x14000a1c8
   14000a1bc:	add    rcx,0x58
   14000a1c0:	mov    rdx,rdi
   14000a1c3:	call   0x1400087b0
   14000a1c8:	mov    rcx,QWORD PTR [rsp+0x48]
   14000a1cd:	test   rcx,rcx
   14000a1d0:	je     0x14000a1d8
   14000a1d2:	call   QWORD PTR [rip+0xfd8]        # 0x14000b1b0
   14000a1d8:	mov    al,0x1
   14000a1da:	mov    rcx,QWORD PTR [rbp+0x80]
   14000a1e1:	xor    rcx,rsp
   14000a1e4:	call   0x140004dd0
   14000a1e9:	mov    rbx,QWORD PTR [rsp+0x1c0]
   14000a1f1:	add    rsp,0x190
   14000a1f8:	pop    rdi
   14000a1f9:	pop    rsi
   14000a1fa:	pop    rbp
   14000a1fb:	ret    
   14000a1fc:	int3   
   14000a1fd:	int3   
   14000a1fe:	int3   
   14000a1ff:	int3   
   14000a200:	int3   
   14000a201:	int3   
   14000a202:	int3   
   14000a203:	int3   
   14000a204:	rex push rbx
   14000a206:	sub    rsp,0x50
   14000a20a:	mov    ebx,DWORD PTR [rsp+0x98]
   14000a211:	mov    rax,rcx
   14000a214:	test   ebx,ebx
   14000a216:	jle    0x14000a221
   14000a218:	movzx  ebx,bx
   14000a21b:	or     ebx,0x80070000
   14000a221:	mov    rcx,QWORD PTR [rsp+0x88]
   14000a229:	lea    r8,[rip+0x32d8]        # 0x14000d508
   14000a230:	mov    DWORD PTR [rsp+0x38],ebx
   14000a234:	xor    r9d,r9d
   14000a237:	mov    DWORD PTR [rsp+0x30],0x2
   14000a23f:	mov    edx,0xb4
   14000a244:	mov    QWORD PTR [rsp+0x28],rcx
   14000a249:	mov    rcx,rax
   14000a24c:	and    QWORD PTR [rsp+0x20],0x0
   14000a252:	call   0x140008214
   14000a257:	mov    eax,ebx
   14000a259:	add    rsp,0x50
   14000a25d:	pop    rbx
   14000a25e:	ret    
   14000a25f:	int3   
   14000a260:	int3   
   14000a261:	int3   
   14000a262:	int3   
   14000a263:	int3   
   14000a264:	int3   
   14000a265:	int3   
   14000a266:	int3   
   14000a267:	int3   
   14000a268:	sub    rsp,0x48
   14000a26c:	mov    rax,QWORD PTR [rsp+0x48]
   14000a271:	mov    DWORD PTR [rsp+0x38],r9d
   14000a276:	mov    QWORD PTR [rsp+0x28],rax
   14000a27b:	call   0x14000a204
   14000a280:	add    rsp,0x48
   14000a284:	ret    
   14000a285:	int3   
   14000a286:	int3   
   14000a287:	int3   
   14000a288:	int3   
   14000a289:	int3   
   14000a28a:	int3   
   14000a28b:	int3   
   14000a28c:	mov    QWORD PTR [rsp+0x10],rbx
   14000a291:	push   rdi
   14000a292:	sub    rsp,0x70
   14000a296:	mov    rax,QWORD PTR [rip+0x7d8b]        # 0x140012028
   14000a29d:	xor    rax,rsp
   14000a2a0:	mov    QWORD PTR [rsp+0x68],rax
   14000a2a5:	mov    rbx,rcx
   14000a2a8:	call   0x140007310
   14000a2ad:	mov    rax,QWORD PTR [rbx+0x30]
   14000a2b1:	mov    rdi,QWORD PTR [rax+0x28]
   14000a2b5:	cmp    DWORD PTR [rdi],0x5
   14000a2b8:	jbe    0x14000a325
   14000a2ba:	movabs rdx,0x400000000000
   14000a2c4:	mov    rcx,rdi
   14000a2c7:	call   0x140003070
   14000a2cc:	test   al,al
   14000a2ce:	je     0x14000a325
   14000a2d0:	call   QWORD PTR [rip+0xe4a]        # 0x14000b120
   14000a2d6:	and    DWORD PTR [rsp+0x64],0x0
   14000a2db:	mov    DWORD PTR [rsp+0x30],eax
   14000a2df:	lea    rax,[rsp+0x30]
   14000a2e4:	mov    QWORD PTR [rsp+0x58],rax
   14000a2e9:	mov    DWORD PTR [rsp+0x60],0x4
   14000a2f1:	mov    rcx,rbx
   14000a2f4:	call   0x140004058
   14000a2f9:	mov    r8,QWORD PTR [rbx+0x30]
   14000a2fd:	lea    rdx,[rip+0x37a6]        # 0x14000daaa
   14000a304:	mov    r9,rax
   14000a307:	add    r8,0x8
   14000a30b:	lea    rax,[rsp+0x38]
   14000a310:	mov    rcx,rdi
   14000a313:	mov    QWORD PTR [rsp+0x28],rax
   14000a318:	mov    DWORD PTR [rsp+0x20],0x3
   14000a320:	call   0x140002fc0
   14000a325:	mov    rcx,rbx
   14000a328:	call   0x1400072f0
   14000a32d:	mov    rcx,QWORD PTR [rsp+0x68]
   14000a332:	xor    rcx,rsp
   14000a335:	call   0x140004dd0
   14000a33a:	mov    rbx,QWORD PTR [rsp+0x88]
   14000a342:	add    rsp,0x70
   14000a346:	pop    rdi
   14000a347:	ret    
   14000a348:	int3   
   14000a349:	int3   
   14000a34a:	int3   
   14000a34b:	int3   
   14000a34c:	int3   
   14000a34d:	int3   
   14000a34e:	int3   
   14000a34f:	int3   
   14000a350:	sub    rsp,0x28
   14000a354:	xor    r8d,r8d
   14000a357:	lea    rcx,[rip+0x2a2]        # 0x14000a600
   14000a35e:	xor    edx,edx
   14000a360:	call   QWORD PTR [rip+0xea2]        # 0x14000b208
   14000a366:	test   rax,rax
   14000a369:	jne    0x14000a37a
   14000a36b:	mov    rcx,QWORD PTR [rip+0x8556]        # 0x1400128c8
   14000a372:	call   QWORD PTR [rip+0xe08]        # 0x14000b180
   14000a378:	jmp    0x14000a39b
   14000a37a:	or     DWORD PTR [rsp+0x34],0xffffffff
   14000a37f:	lea    rdx,[rsp+0x30]
   14000a384:	xor    r9d,r9d
   14000a387:	mov    DWORD PTR [rsp+0x30],0xf4143e00
   14000a38f:	xor    r8d,r8d
   14000a392:	mov    rcx,rax
   14000a395:	call   QWORD PTR [rip+0xe65]        # 0x14000b200
   14000a39b:	add    rsp,0x28
   14000a39f:	ret    
   14000a3a0:	int3   
   14000a3a1:	int3   
   14000a3a2:	int3   
   14000a3a3:	int3   
   14000a3a4:	int3   
   14000a3a5:	int3   
   14000a3a6:	int3   
   14000a3a7:	int3   
   14000a3a8:	int3   
   14000a3a9:	int3   
   14000a3aa:	int3   
   14000a3ab:	int3   
   14000a3ac:	int3   
   14000a3ad:	int3   
   14000a3ae:	int3   
   14000a3af:	int3   
   14000a3b0:	mov    rax,rsp
   14000a3b3:	mov    QWORD PTR [rax+0x10],rbx
   14000a3b7:	mov    QWORD PTR [rax+0x18],rsi
   14000a3bb:	mov    QWORD PTR [rax+0x20],rdi
   14000a3bf:	push   rbp
   14000a3c0:	lea    rbp,[rax-0xa8]
   14000a3c7:	sub    rsp,0x1a0
   14000a3ce:	mov    rax,QWORD PTR [rip+0x7c53]        # 0x140012028
   14000a3d5:	xor    rax,rsp
   14000a3d8:	mov    QWORD PTR [rbp+0x90],rax
   14000a3df:	mov    rdi,QWORD PTR [rcx+0x30]
   14000a3e3:	mov    rbx,rcx
   14000a3e6:	mov    eax,DWORD PTR [rdi+0x54]
   14000a3e9:	test   eax,eax
   14000a3eb:	jns    0x14000a3f8
   14000a3ed:	cmp    eax,DWORD PTR [rdi+0x5c]
   14000a3f0:	jne    0x14000a3f8
   14000a3f2:	add    rdi,0x58
   14000a3f6:	jmp    0x14000a3fa
   14000a3f8:	xor    edi,edi
   14000a3fa:	call   0x140007210
   14000a3ff:	test   rdi,rdi
   14000a402:	je     0x14000a542
   14000a408:	mov    rax,QWORD PTR [rbx+0x30]
   14000a40c:	mov    r10,QWORD PTR [rax+0x28]
   14000a410:	cmp    DWORD PTR [r10],0x5
   14000a414:	jbe    0x14000a5c7
   14000a41a:	movabs rdx,0x400000000000
   14000a424:	mov    rcx,r10
   14000a427:	call   0x140003070
   14000a42c:	test   al,al
   14000a42e:	je     0x14000a5c7
   14000a434:	mov    eax,DWORD PTR [rdi+0x4]
   14000a437:	lea    rcx,[rbp-0x40]
   14000a43b:	mov    rdx,QWORD PTR [rdi+0x30]
   14000a43f:	mov    esi,0x4
   14000a444:	and    DWORD PTR [rbp-0x44],0x0
   14000a448:	mov    DWORD PTR [rsp+0x38],eax
   14000a44c:	lea    rax,[rsp+0x38]
   14000a451:	mov    QWORD PTR [rbp-0x50],rax
   14000a455:	mov    DWORD PTR [rbp-0x48],esi
   14000a458:	call   0x140008a98
   14000a45d:	mov    rdx,QWORD PTR [rdi+0x78]
   14000a461:	lea    rcx,[rdi+0x38]
   14000a465:	and    DWORD PTR [rbp-0x24],0x0
   14000a469:	mov    QWORD PTR [rbp-0x30],rcx
   14000a46d:	lea    rcx,[rbp-0x20]
   14000a471:	mov    DWORD PTR [rbp-0x28],esi
   14000a474:	call   0x140008a98
   14000a479:	mov    ecx,DWORD PTR [rdi]
   14000a47b:	lea    rax,[rsp+0x40]
   14000a480:	mov    rdx,QWORD PTR [rdi+0x10]
   14000a484:	and    DWORD PTR [rbp-0x4],0x0
   14000a488:	mov    DWORD PTR [rsp+0x40],ecx
   14000a48c:	lea    rcx,[rbp+0x0]
   14000a490:	mov    QWORD PTR [rbp-0x10],rax
   14000a494:	mov    DWORD PTR [rbp-0x8],esi
   14000a497:	call   0x140008acc
   14000a49c:	mov    ecx,DWORD PTR [rdi+0x18]
   14000a49f:	lea    rax,[rsp+0x3c]
   14000a4a4:	mov    rdx,QWORD PTR [rdi+0x40]
   14000a4a8:	and    DWORD PTR [rbp+0x1c],0x0
   14000a4ac:	mov    DWORD PTR [rsp+0x3c],ecx
   14000a4b0:	lea    rcx,[rbp+0x20]
   14000a4b4:	mov    QWORD PTR [rbp+0x10],rax
   14000a4b8:	mov    DWORD PTR [rbp+0x18],esi
   14000a4bb:	call   0x140008a98
   14000a4c0:	mov    ecx,DWORD PTR [rdi+0x48]
   14000a4c3:	lea    rax,[rsp+0x30]
   14000a4c8:	mov    rdx,QWORD PTR [rdi+0x50]
   14000a4cc:	and    DWORD PTR [rbp+0x3c],0x0
   14000a4d0:	mov    DWORD PTR [rsp+0x30],ecx
   14000a4d4:	lea    rcx,[rbp+0x40]
   14000a4d8:	mov    QWORD PTR [rbp+0x30],rax
   14000a4dc:	mov    DWORD PTR [rbp+0x38],esi
   14000a4df:	call   0x140008a98
   14000a4e4:	mov    rdx,QWORD PTR [rdi+0x58]
   14000a4e8:	lea    rcx,[rbp+0x50]
   14000a4ec:	call   0x140008acc
   14000a4f1:	mov    ecx,DWORD PTR [rdi+0x60]
   14000a4f4:	lea    rax,[rsp+0x34]
   14000a4f9:	mov    rdx,QWORD PTR [rdi+0x68]
   14000a4fd:	and    DWORD PTR [rbp+0x6c],0x0
   14000a501:	mov    DWORD PTR [rsp+0x34],ecx
   14000a505:	lea    rcx,[rbp+0x70]
   14000a509:	mov    QWORD PTR [rbp+0x60],rax
   14000a50d:	mov    DWORD PTR [rbp+0x68],esi
   14000a510:	call   0x140008a98
   14000a515:	mov    rdx,QWORD PTR [rdi+0x70]
   14000a519:	lea    rcx,[rbp+0x80]
   14000a520:	call   0x140008acc
   14000a525:	lea    rax,[rbp-0x70]
   14000a529:	mov    rcx,r10
   14000a52c:	mov    QWORD PTR [rsp+0x28],rax
   14000a531:	lea    rdx,[rip+0x3687]        # 0x14000dbbf
   14000a538:	mov    DWORD PTR [rsp+0x20],0x10
   14000a540:	jmp    0x14000a5b7
   14000a542:	mov    r8,QWORD PTR [rbx+0x30]
   14000a546:	mov    rdi,QWORD PTR [r8+0x28]
   14000a54a:	cmp    DWORD PTR [rdi],0x5
   14000a54d:	jbe    0x14000a5c7
   14000a54f:	movabs rdx,0x400000000000
   14000a559:	mov    rcx,rdi
   14000a55c:	call   0x140003070
   14000a561:	test   al,al
   14000a563:	je     0x14000a5c7
   14000a565:	mov    eax,DWORD PTR [r8+0x54]
   14000a569:	mov    esi,0x4
   14000a56e:	and    DWORD PTR [rsp+0x7c],0x0
   14000a573:	mov    DWORD PTR [rsp+0x34],eax
   14000a577:	lea    rax,[rsp+0x34]
   14000a57c:	mov    QWORD PTR [rsp+0x70],rax
   14000a581:	mov    DWORD PTR [rsp+0x78],esi
   14000a585:	call   QWORD PTR [rip+0xb95]        # 0x14000b120
   14000a58b:	and    DWORD PTR [rbp-0x74],0x0
   14000a58f:	lea    rdx,[rip+0x3728]        # 0x14000dcbe
   14000a596:	mov    DWORD PTR [rsp+0x30],eax
   14000a59a:	mov    rcx,rdi
   14000a59d:	lea    rax,[rsp+0x30]
   14000a5a2:	mov    DWORD PTR [rbp-0x78],esi
   14000a5a5:	mov    QWORD PTR [rbp-0x80],rax
   14000a5a9:	lea    rax,[rsp+0x50]
   14000a5ae:	mov    QWORD PTR [rsp+0x28],rax
   14000a5b3:	mov    DWORD PTR [rsp+0x20],esi
   14000a5b7:	mov    r8,QWORD PTR [rbx+0x30]
   14000a5bb:	xor    r9d,r9d
   14000a5be:	add    r8,0x8
   14000a5c2:	call   0x140002fc0
   14000a5c7:	mov    rcx,rbx
   14000a5ca:	call   0x1400071f0
   14000a5cf:	mov    rcx,QWORD PTR [rbp+0x90]
   14000a5d6:	xor    rcx,rsp
   14000a5d9:	call   0x140004dd0
   14000a5de:	lea    r11,[rsp+0x1a0]
   14000a5e6:	mov    rbx,QWORD PTR [r11+0x18]
   14000a5ea:	mov    rsi,QWORD PTR [r11+0x20]
   14000a5ee:	mov    rdi,QWORD PTR [r11+0x28]
   14000a5f2:	mov    rsp,r11
   14000a5f5:	pop    rbp
   14000a5f6:	ret    
   14000a5f7:	int3   
   14000a5f8:	int3   
   14000a5f9:	int3   
   14000a5fa:	int3   
   14000a5fb:	int3   
   14000a5fc:	int3   
   14000a5fd:	int3   
   14000a5fe:	int3   
   14000a5ff:	int3   
   14000a600:	mov    rcx,QWORD PTR [rip+0x82c1]        # 0x1400128c8
   14000a607:	rex.W jmp QWORD PTR [rip+0xb72]        # 0x14000b180
   14000a60e:	int3   
   14000a60f:	int3   
   14000a610:	int3   
   14000a611:	int3   
   14000a612:	int3   
   14000a613:	int3   
   14000a614:	int3   
   14000a615:	int3   
   14000a616:	int3   
   14000a617:	int3   
   14000a618:	int3   
   14000a619:	int3   
   14000a61a:	int3   
   14000a61b:	int3   
   14000a61c:	int3   
   14000a61d:	int3   
   14000a61e:	int3   
   14000a61f:	int3   
   14000a620:	mov    eax,DWORD PTR [rip+0x7c22]        # 0x140012248
   14000a626:	cmp    eax,edx
   14000a628:	mov    DWORD PTR [rip+0x7c1a],edx        # 0x140012248
   14000a62e:	sete   al
   14000a631:	ret    
   14000a632:	int3   
   14000a633:	int3   
   14000a634:	int3   
   14000a635:	int3   
   14000a636:	int3   
   14000a637:	int3   
   14000a638:	rex push rbx
   14000a63a:	sub    rsp,0x20
   14000a63e:	mov    rbx,rdx
   14000a641:	mov    rdx,rcx
   14000a644:	mov    rcx,rbx
   14000a647:	call   0x140009d50
   14000a64c:	mov    rax,rbx
   14000a64f:	add    rsp,0x20
   14000a653:	pop    rbx
   14000a654:	ret    
   14000a655:	int3   
   14000a656:	int3   
   14000a657:	int3   
   14000a658:	int3   
   14000a659:	int3   
   14000a65a:	int3   
   14000a65b:	int3   
   14000a65c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a661:	push   rdi
   14000a662:	sub    rsp,0x20
   14000a666:	mov    rbx,rcx
   14000a669:	mov    rcx,QWORD PTR [rcx]
   14000a66c:	test   rcx,rcx
   14000a66f:	je     0x14000a69b
   14000a671:	or     eax,0xffffffff
   14000a674:	lock xadd DWORD PTR [rcx],eax
   14000a678:	cmp    eax,0x1
   14000a67b:	jne    0x14000a697
   14000a67d:	mov    rdi,QWORD PTR [rbx]
   14000a680:	test   rdi,rdi
   14000a683:	je     0x14000a697
   14000a685:	lea    rcx,[rdi+0x8]
   14000a689:	call   0x140009b98
   14000a68e:	mov    rcx,rdi
   14000a691:	call   QWORD PTR [rip+0xc91]        # 0x14000b328
   14000a697:	and    QWORD PTR [rbx],0x0
   14000a69b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a6a0:	add    rsp,0x20
   14000a6a4:	pop    rdi
   14000a6a5:	ret    

Disassembly of section .rdata:

000000014000b000 <.rdata>:
   14000b000:	loopne 0x14000b011
   14000b002:	add    DWORD PTR [rax],eax
	...
   14000b010:	add    dl,BYTE PTR [rax]
   14000b012:	add    DWORD PTR [rax],eax
   14000b014:	add    BYTE PTR [rax],al
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	sbb    BYTE PTR [rax],dl
   14000b01a:	add    DWORD PTR [rax],eax
	...
   14000b028:	mov    cs,WORD PTR [rbx]
   14000b02a:	add    DWORD PTR [rax],eax
   14000b02c:	add    BYTE PTR [rax],al
   14000b02e:	add    BYTE PTR [rax],al
   14000b030:	jl     0x14000b03d
   14000b032:	add    DWORD PTR [rax],eax
   14000b034:	add    BYTE PTR [rax],al
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	or     eax,DWORD PTR ss:[rcx]
   14000b03b:	add    BYTE PTR [rax],al
   14000b03d:	add    BYTE PTR [rax],al
   14000b03f:	add    BYTE PTR [rdx+rcx*1+0x1],ch
   14000b043:	add    BYTE PTR [rax],al
   14000b045:	add    BYTE PTR [rax],al
   14000b047:	add    BYTE PTR [rdx+rcx*1+0x1],bl
   14000b04b:	add    BYTE PTR [rax],al
   14000b04d:	add    BYTE PTR [rax],al
   14000b04f:	add    dl,bh
   14000b051:	or     DWORD PTR [rcx],eax
   14000b053:	add    BYTE PTR [rax],al
   14000b055:	add    BYTE PTR [rax],al
   14000b057:	add    BYTE PTR [rsi],al
   14000b059:	or     DWORD PTR [rcx],eax
   14000b05b:	add    BYTE PTR [rax],al
   14000b05d:	add    BYTE PTR [rax],al
   14000b05f:	add    BYTE PTR [rdx],dl
   14000b061:	or     al,BYTE PTR [rcx]
	...
   14000b06f:	add    BYTE PTR [rax+rcx*1+0x1],dl
	...
   14000b07f:	add    BYTE PTR [rdx+0xc],dl
   14000b082:	add    DWORD PTR [rax],eax
   14000b084:	add    BYTE PTR [rax],al
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	ss or  al,0x1
   14000b08b:	add    BYTE PTR [rax],al
   14000b08d:	add    BYTE PTR [rax],al
   14000b08f:	add    BYTE PTR [rdx+0x109],al
	...
   14000b09d:	add    BYTE PTR [rax],al
   14000b09f:	add    BYTE PTR [rax+0x10a],ah
	...
   14000b0ad:	add    BYTE PTR [rax],al
   14000b0af:	add    ah,al
   14000b0b1:	or     al,BYTE PTR [rcx]
   14000b0b3:	add    BYTE PTR [rax],al
   14000b0b5:	add    BYTE PTR [rax],al
   14000b0b7:	add    ah,cl
   14000b0b9:	or     DWORD PTR [rcx],eax
	...
   14000b0c7:	add    BYTE PTR [rax+0x108],bh
   14000b0cd:	add    BYTE PTR [rax],al
   14000b0cf:	add    BYTE PTR [rdx],dl
   14000b0d1:	or     BYTE PTR [rcx],al
   14000b0d3:	add    BYTE PTR [rax],al
   14000b0d5:	add    BYTE PTR [rax],al
   14000b0d7:	add    BYTE PTR [rdx+0x8],ch
   14000b0da:	add    DWORD PTR [rax],eax
   14000b0dc:	add    BYTE PTR [rax],al
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	or     BYTE PTR ds:[rcx],al
   14000b0e3:	add    BYTE PTR [rax],al
   14000b0e5:	add    BYTE PTR [rax],al
   14000b0e7:	add    dl,cl
   14000b0e9:	or     BYTE PTR [rcx],al
	...
   14000b0f7:	add    BYTE PTR [rsi+0x8],bh
   14000b0fa:	add    DWORD PTR [rax],eax
	...
   14000b108:	mov    dl,0xc
   14000b10a:	add    DWORD PTR [rax],eax
   14000b10c:	add    BYTE PTR [rax],al
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	jo     0x14000b11e
   14000b112:	add    DWORD PTR [rax],eax
   14000b114:	add    BYTE PTR [rax],al
   14000b116:	add    BYTE PTR [rax],al
   14000b118:	loop   0x14000b125
   14000b11a:	add    DWORD PTR [rax],eax
   14000b11c:	add    BYTE PTR [rax],al
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	lock or BYTE PTR [rcx],al
   14000b123:	add    BYTE PTR [rax],al
   14000b125:	add    BYTE PTR [rax],al
   14000b127:	add    BYTE PTR [rsp+rcx*1+0x1],al
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	movabs ds:0xa000000000000109,al
   14000b139:	or     eax,DWORD PTR [rcx]
	...
   14000b147:	add    BYTE PTR [rax+0x10c],bl
	...
   14000b155:	add    BYTE PTR [rax],al
   14000b157:	add    BYTE PTR [rdx],ah
   14000b159:	or     al,0x1
   14000b15b:	add    BYTE PTR [rax],al
   14000b15d:	add    BYTE PTR [rax],al
   14000b15f:	add    ah,dh
   14000b161:	or     eax,DWORD PTR [rcx]
   14000b163:	add    BYTE PTR [rax],al
   14000b165:	add    BYTE PTR [rax],al
   14000b167:	add    BYTE PTR [rax],cl
   14000b169:	or     al,0x1
	...
   14000b177:	add    ah,ah
   14000b179:	or     DWORD PTR [rcx],eax
   14000b17b:	add    BYTE PTR [rax],al
   14000b17d:	add    BYTE PTR [rax],al
   14000b17f:	add    al,bl
   14000b181:	or     DWORD PTR [rcx],eax
   14000b183:	add    BYTE PTR [rax],al
   14000b185:	add    BYTE PTR [rax],al
   14000b187:	add    BYTE PTR [rdx+rcx*1+0x1],cl
   14000b18e:	add    BYTE PTR [rax],al
   14000b190:	rex.X or al,BYTE PTR [rcx]
   14000b193:	add    BYTE PTR [rax],al
   14000b195:	add    BYTE PTR [rax],al
   14000b197:	add    BYTE PTR [rdx],bl
   14000b199:	or     DWORD PTR [rcx],eax
   14000b19b:	add    BYTE PTR [rax],al
   14000b19d:	add    BYTE PTR [rax],al
   14000b19f:	add    BYTE PTR [rdx],dh
   14000b1a1:	or     DWORD PTR [rcx],eax
   14000b1a3:	add    BYTE PTR [rax],al
   14000b1a5:	add    BYTE PTR [rax],al
   14000b1a7:	add    al,ch
   14000b1a9:	(bad)  
   14000b1aa:	add    DWORD PTR [rax],eax
   14000b1ac:	add    BYTE PTR [rax],al
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	sub    BYTE PTR [rdx],cl
   14000b1b2:	add    DWORD PTR [rax],eax
   14000b1b4:	add    BYTE PTR [rax],al
   14000b1b6:	add    BYTE PTR [rax],al
   14000b1b8:	xchg   edx,eax
   14000b1b9:	or     DWORD PTR [rcx],eax
   14000b1bb:	add    BYTE PTR [rax],al
   14000b1bd:	add    BYTE PTR [rax],al
   14000b1bf:	add    dl,bl
   14000b1c1:	or     eax,DWORD PTR [rcx]
   14000b1c3:	add    BYTE PTR [rax],al
   14000b1c5:	add    BYTE PTR [rax],al
   14000b1c7:	add    BYTE PTR [rax+rcx*1],ah
   14000b1ca:	add    DWORD PTR [rax],eax
	...
   14000b1d8:	mov    dl,0x9
   14000b1da:	add    DWORD PTR [rax],eax
	...
   14000b1e8:	loop   0x14000b1f6
   14000b1ea:	add    DWORD PTR [rax],eax
   14000b1ec:	add    BYTE PTR [rax],al
   14000b1ee:	add    BYTE PTR [rax],al
   14000b1f0:	enter  0x10c,0x0
	...
   14000b200:	or     ax,WORD PTR [rcx]
   14000b203:	add    BYTE PTR [rax],al
   14000b205:	add    BYTE PTR [rax],al
   14000b207:	add    BYTE PTR [rsi+0xb],cl
   14000b20a:	add    DWORD PTR [rax],eax
	...
   14000b218:	loopne 0x14000b222
   14000b21a:	add    DWORD PTR [rax],eax
   14000b21c:	add    BYTE PTR [rax],al
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	ror    BYTE PTR [rbx],0x1
   14000b223:	add    BYTE PTR [rax],al
   14000b225:	add    BYTE PTR [rax],al
   14000b227:	add    ah,bh
   14000b229:	(bad)  
   14000b22a:	add    DWORD PTR [rax],eax
   14000b22c:	add    BYTE PTR [rax],al
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	nop
   14000b231:	or     BYTE PTR [rcx],al
   14000b233:	add    BYTE PTR [rax],al
   14000b235:	add    BYTE PTR [rax],al
   14000b237:	add    BYTE PTR [rdx+0x108],ah
	...
   14000b245:	add    BYTE PTR [rax],al
   14000b247:	add    dh,bh
   14000b249:	or     al,BYTE PTR [rcx]
   14000b24b:	add    BYTE PTR [rax],al
   14000b24d:	add    BYTE PTR [rax],al
   14000b24f:	add    BYTE PTR [rdx],bl
   14000b251:	or     eax,DWORD PTR [rcx]
   14000b253:	add    BYTE PTR [rax],al
   14000b255:	add    BYTE PTR [rax],al
   14000b257:	add    BYTE PTR [rsi+0x10a],ch
   14000b25d:	add    BYTE PTR [rax],al
   14000b25f:	add    dl,ah
   14000b261:	or     al,BYTE PTR [rcx]
   14000b263:	add    BYTE PTR [rax],al
   14000b265:	add    BYTE PTR [rax],al
   14000b267:	add    ah,ch
   14000b269:	or     al,BYTE PTR [rcx]
   14000b26b:	add    BYTE PTR [rax],al
   14000b26d:	add    BYTE PTR [rax],al
   14000b26f:	add    dl,dl
   14000b271:	or     al,BYTE PTR [rcx]
	...
   14000b27f:	add    BYTE PTR [rdi+rcx*1+0x1],ah
	...
   14000b28f:	add    BYTE PTR [rdx+0x9],cl
   14000b292:	add    DWORD PTR [rax],eax
	...
   14000b2a0:	movabs al,ds:0x10f
   14000b2a9:	add    BYTE PTR [rax],al
   14000b2ab:	add    BYTE PTR [rax],al
   14000b2ad:	add    BYTE PTR [rax],al
   14000b2af:	add    BYTE PTR [rsi],bh
   14000b2b1:	(bad)  
   14000b2b2:	add    DWORD PTR [rax],eax
   14000b2b4:	add    BYTE PTR [rax],al
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	mov    eax,0x105
   14000b2bd:	add    BYTE PTR [rax],al
   14000b2bf:	add    dl,ah
   14000b2c1:	(bad)  
   14000b2c2:	add    DWORD PTR [rax],eax
   14000b2c4:	add    BYTE PTR [rax],al
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	(bad)  
   14000b2c9:	(bad)  
   14000b2ca:	add    DWORD PTR [rax],eax
   14000b2cc:	add    BYTE PTR [rax],al
   14000b2ce:	add    BYTE PTR [rax],al
   14000b2d0:	pop    rsp
   14000b2d1:	(bad)  
   14000b2d2:	add    DWORD PTR [rax],eax
   14000b2d4:	add    BYTE PTR [rax],al
   14000b2d6:	add    BYTE PTR [rax],al
   14000b2d8:	add    al,BYTE PTR [rdi]
   14000b2da:	add    DWORD PTR [rax],eax
   14000b2dc:	add    BYTE PTR [rax],al
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	(bad)  
   14000b2e1:	(bad)  
   14000b2e2:	add    DWORD PTR [rax],eax
   14000b2e4:	add    BYTE PTR [rax],al
   14000b2e6:	add    BYTE PTR [rax],al
   14000b2e8:	je     0x14000b2f0
   14000b2ea:	add    DWORD PTR [rax],eax
   14000b2ec:	add    BYTE PTR [rax],al
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	adc    al,0x7
   14000b2f2:	add    DWORD PTR [rax],eax
   14000b2f4:	add    BYTE PTR [rax],al
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	rol    BYTE PTR [rdi],1
   14000b2fa:	add    DWORD PTR [rax],eax
   14000b2fc:	add    BYTE PTR [rax],al
   14000b2fe:	add    BYTE PTR [rax],al
   14000b300:	mov    BYTE PTR [rdi],0x1
   14000b303:	add    BYTE PTR [rax],al
   14000b305:	add    BYTE PTR [rax],al
   14000b307:	add    al,dh
   14000b309:	(bad)  
   14000b30a:	add    DWORD PTR [rax],eax
   14000b30c:	add    BYTE PTR [rax],al
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	enter  0x106,0x0
   14000b314:	add    BYTE PTR [rax],al
   14000b316:	add    BYTE PTR [rax],al
   14000b318:	scas   al,BYTE PTR es:[rdi]
   14000b319:	(bad)  
   14000b31a:	add    DWORD PTR [rax],eax
   14000b31c:	add    BYTE PTR [rax],al
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b321:	(bad)  
   14000b322:	add    DWORD PTR [rax],eax
   14000b324:	add    BYTE PTR [rax],al
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	in     al,0x5
   14000b32a:	add    DWORD PTR [rax],eax
   14000b32c:	add    BYTE PTR [rax],al
   14000b32e:	add    BYTE PTR [rax],al
   14000b330:	sbb    al,0x7
   14000b332:	add    DWORD PTR [rax],eax
   14000b334:	add    BYTE PTR [rax],al
   14000b336:	add    BYTE PTR [rax],al
   14000b338:	mov    esi,0x106
   14000b33d:	add    BYTE PTR [rax],al
   14000b33f:	add    BYTE PTR [rdx+0x107],dl
   14000b345:	add    BYTE PTR [rax],al
   14000b347:	add    BYTE PTR [rdx+0x7],bh
   14000b34a:	add    DWORD PTR [rax],eax
   14000b34c:	add    BYTE PTR [rax],al
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	test   al,0x6
   14000b352:	add    DWORD PTR [rax],eax
   14000b354:	add    BYTE PTR [rax],al
   14000b356:	add    BYTE PTR [rax],al
   14000b358:	jo     0x14000b361
   14000b35a:	add    DWORD PTR [rax],eax
   14000b35c:	add    BYTE PTR [rax],al
   14000b35e:	add    BYTE PTR [rax],al
   14000b360:	data16 (bad) 
   14000b362:	add    DWORD PTR [rax],eax
   14000b364:	add    BYTE PTR [rax],al
   14000b366:	add    BYTE PTR [rax],al
   14000b368:	rex.WRX (bad) 
   14000b36a:	add    DWORD PTR [rax],eax
   14000b36c:	add    BYTE PTR [rax],al
   14000b36e:	add    BYTE PTR [rax],al
   14000b370:	rex.X (bad) 
   14000b372:	add    DWORD PTR [rax],eax
   14000b374:	add    BYTE PTR [rax],al
   14000b376:	add    BYTE PTR [rax],al
   14000b378:	cs (bad) 
   14000b37a:	add    DWORD PTR [rax],eax
   14000b37c:	add    BYTE PTR [rax],al
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	and    al,0x7
   14000b382:	add    DWORD PTR [rax],eax
   14000b384:	add    BYTE PTR [rax],al
   14000b386:	add    BYTE PTR [rax],al
   14000b388:	inc    BYTE PTR [rip+0x1]        # 0x14000b38f
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	mov    eax,0x107
   14000b395:	add    BYTE PTR [rax],al
   14000b397:	add    ah,dh
   14000b399:	add    eax,0x1
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	fadd   DWORD PTR [rip+0x1]        # 0x14000b3a7
   14000b3a6:	add    BYTE PTR [rax],al
   14000b3a8:	retf   0x105
   14000b3ab:	add    BYTE PTR [rax],al
   14000b3ad:	add    BYTE PTR [rax],al
   14000b3af:	add    al,al
   14000b3b1:	add    eax,0x1
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	xchg   edx,eax
   14000b3b9:	(bad)  
   14000b3ba:	add    DWORD PTR [rax],eax
   14000b3bc:	add    BYTE PTR [rax],al
   14000b3be:	add    BYTE PTR [rax],al
   14000b3c0:	adc    BYTE PTR [rcx],r8b
	...
   14000b3cf:	add    BYTE PTR [rax+0x1400032],dl
   14000b3d5:	add    BYTE PTR [rax],al
   14000b3d7:	add    al,dh
   14000b3d9:	push   rbp
   14000b3da:	add    BYTE PTR [rax+0x1],al
	...
   14000b3e5:	add    BYTE PTR [rax],al
   14000b3e7:	add    al,dl
   14000b3e9:	rex.WX add BYTE PTR [rax+0x1],al
   14000b3ed:	add    BYTE PTR [rax],al
   14000b3ef:	add    BYTE PTR [rax],al
   14000b3f1:	adc    BYTE PTR [rax],al
   14000b3f3:	rex add DWORD PTR [rax],eax
   14000b3f6:	add    BYTE PTR [rax],al
   14000b3f8:	adc    BYTE PTR [rax],dl
   14000b3fa:	add    BYTE PTR [rax+0x1],al
   14000b3fd:	add    BYTE PTR [rax],al
   14000b3ff:	add    BYTE PTR [rax],ah
   14000b401:	adc    BYTE PTR [rax],al
   14000b403:	rex add DWORD PTR [rax],eax
   14000b406:	add    BYTE PTR [rax],al
   14000b408:	xor    BYTE PTR [rax],dl
   14000b40a:	add    BYTE PTR [rax+0x1],al
   14000b40d:	add    BYTE PTR [rax],al
   14000b40f:	add    BYTE PTR [rax+0x1400010],al
   14000b415:	add    BYTE PTR [rax],al
   14000b417:	add    BYTE PTR [rax+0x10],ah
   14000b41a:	add    BYTE PTR [rax+0x1],al
	...
   14000b42d:	add    BYTE PTR [rax],al
   14000b42f:	add    al,dh
   14000b431:	rex.WB add BYTE PTR [r8+0x1],al
   14000b435:	add    BYTE PTR [rax],al
   14000b437:	add    al,al
   14000b439:	push   rcx
   14000b43a:	add    BYTE PTR [rax+0x1],al
	...
   14000b449:	adc    BYTE PTR [rax],al
   14000b44b:	add    BYTE PTR [rax],dl
   14000b44d:	adc    BYTE PTR [rax],al
   14000b44f:	add    BYTE PTR [rax],ah
   14000b451:	adc    BYTE PTR [rax],al
   14000b453:	add    BYTE PTR [rax],dh
   14000b455:	adc    BYTE PTR [rax],al
   14000b457:	add    BYTE PTR [rax+0x10],ah
   14000b45a:	add    BYTE PTR [rax],al
   14000b45c:	adc    BYTE PTR [rax],0x0
   14000b45f:	add    BYTE PTR [rax+0x18],dl
   14000b462:	add    BYTE PTR [rax],al
   14000b464:	loopne 0x14000b480
   14000b466:	add    BYTE PTR [rax],al
   14000b468:	sbb    al,0x0
   14000b46b:	add    BYTE PTR [rax+0x1c],dh
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	nop
   14000b471:	sbb    al,0x0
   14000b473:	add    al,dl
   14000b475:	sbb    eax,0x1df00000
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	xor    BYTE PTR [rsi],bl
   14000b47e:	add    BYTE PTR [rax],al
   14000b480:	movabs al,ds:0x50000020e0000020
   14000b489:	sub    DWORD PTR [rax],eax
   14000b48b:	add    BYTE PTR [rax],dh
   14000b48d:	sub    eax,DWORD PTR [rax]
   14000b48f:	add    BYTE PTR [rax],dl
   14000b491:	sub    eax,0x32900000
   14000b496:	add    BYTE PTR [rax],al
   14000b498:	(bad)  
   14000b499:	xor    eax,DWORD PTR [rax]
   14000b49b:	add    al,al
   14000b49d:	xor    eax,DWORD PTR [rax]
   14000b49f:	add    BYTE PTR [rax+0x34],dl
   14000b4a2:	add    BYTE PTR [rax],al
   14000b4a4:	mov    al,0x39
   14000b4a6:	add    BYTE PTR [rax],al
   14000b4a8:	loopne 0x14000b4e3
   14000b4aa:	add    BYTE PTR [rax],al
   14000b4ac:	jo     0x14000b4e8
   14000b4ae:	add    BYTE PTR [rax],al
   14000b4b0:	sar    BYTE PTR [rax+rax*1],1
   14000b4b3:	add    BYTE PTR [rax+0x3d],ah
   14000b4b6:	add    BYTE PTR [rax],al
   14000b4b8:	add    BYTE PTR [rsi],bh
   14000b4ba:	add    BYTE PTR [rax],al
   14000b4bc:	movabs al,ds:0xa00000417000003e
   14000b4c5:	add    BYTE PTR [r8],al
   14000b4c8:	loopne 0x14000b50b
   14000b4ca:	add    BYTE PTR [rax],al
   14000b4cc:	push   rax
   14000b4cd:	rex.RX add BYTE PTR [rax],r8b
   14000b4d0:	movabs al,ds:0xe0000046c0000046
   14000b4d9:	rex.RX add BYTE PTR [rax],r8b
   14000b4dc:	lock rex.RXB add BYTE PTR [r8],r8b
   14000b4e0:	(bad)  
   14000b4e1:	rex.W add BYTE PTR [rax],al
   14000b4e4:	mov    al,0x48
   14000b4e6:	add    BYTE PTR [rax],al
   14000b4e8:	and    BYTE PTR [rcx+0x0],cl
   14000b4eb:	add    BYTE PTR [rax],dh
   14000b4ed:	rex.WB add BYTE PTR [r8],al
   14000b4f0:	rex
   14000b4f1:	rex.WB add BYTE PTR [r8],al
   14000b4f4:	lock rex.WB add BYTE PTR [r8],al
   14000b4f8:	ror    BYTE PTR [rdx+0x0],1
   14000b4fb:	add    BYTE PTR [rax-0x3fffffb3],ah
   14000b501:	rex.WRX add BYTE PTR [rax],r8b
   14000b504:	and    BYTE PTR [rdi+0x0],cl
   14000b507:	add    BYTE PTR [rax+0x40000050],ah
   14000b50d:	push   rcx
   14000b50e:	add    BYTE PTR [rax],al
   14000b510:	adc    BYTE PTR [rcx+0x0],0x0
   14000b514:	rcl    BYTE PTR [rcx+0x0],0x0
   14000b518:	movabs al,ds:0xe000005680000052
   14000b521:	push   rsi
   14000b522:	add    BYTE PTR [rax],al
   14000b524:	lock push rsi
   14000b526:	add    BYTE PTR [rax],al
   14000b528:	add    BYTE PTR [rdi+0x0],dl
   14000b52b:	add    BYTE PTR [rax],dl
   14000b52d:	push   rdi
   14000b52e:	add    BYTE PTR [rax],al
   14000b530:	and    BYTE PTR [rdi+0x0],dl
   14000b533:	add    BYTE PTR [rax],dh
   14000b535:	push   rdi
   14000b536:	add    BYTE PTR [rax],al
   14000b538:	rex push rdi
   14000b53a:	add    BYTE PTR [rax],al
   14000b53c:	push   rax
   14000b53d:	push   rdi
   14000b53e:	add    BYTE PTR [rax],al
   14000b540:	(bad)  
   14000b541:	push   rdi
   14000b542:	add    BYTE PTR [rax],al
   14000b544:	jo     0x14000b59d
   14000b546:	add    BYTE PTR [rax],al
   14000b548:	adc    BYTE PTR [rdi+0x0],0x0
   14000b54c:	nop
   14000b54d:	push   rdi
   14000b54e:	add    BYTE PTR [rax],al
   14000b550:	movabs al,ds:0xc0000057b0000057
   14000b559:	push   rdi
   14000b55a:	add    BYTE PTR [rax],al
   14000b55c:	loopne 0x14000b5b5
   14000b55e:	add    BYTE PTR [rax],al
   14000b560:	lock push rdi
   14000b562:	add    BYTE PTR [rax],al
   14000b564:	add    BYTE PTR [rax+0x0],bl
   14000b567:	add    BYTE PTR [rax],dl
   14000b569:	pop    rax
   14000b56a:	add    BYTE PTR [rax],al
   14000b56c:	and    BYTE PTR [rax+0x0],bl
   14000b56f:	add    BYTE PTR [rax],dh
   14000b571:	pop    rax
   14000b572:	add    BYTE PTR [rax],al
   14000b574:	xor    BYTE PTR [rbx+0x0],bl
   14000b577:	add    BYTE PTR [rax+0x5b],dl
   14000b57a:	add    BYTE PTR [rax],al
   14000b57c:	jo     0x14000b5d9
   14000b57e:	add    BYTE PTR [rax],al
   14000b580:	sbb    BYTE PTR [rbx+0x0],0x0
   14000b584:	nop
   14000b585:	pop    rbx
   14000b586:	add    BYTE PTR [rax],al
   14000b588:	movabs al,ds:0x77c000005b
   14000b591:	js     0x14000b593
   14000b593:	add    BYTE PTR [rax-0x6fffff88],dl
   14000b599:	jns    0x14000b59b
   14000b59b:	add    BYTE PTR [rax-0x1fffff7f],al
   14000b5a1:	add    DWORD PTR [rax],0x872000
   14000b5a7:	add    BYTE PTR [rax],al
   14000b5a9:	lea    eax,[rax]
   14000b5ab:	add    BYTE PTR [rax-0x73],al
   14000b5ae:	add    BYTE PTR [rax],al
   14000b5b0:	add    BYTE PTR [rsi-0x71b00000],cl
   14000b5b6:	add    BYTE PTR [rax],al
   14000b5b8:	(bad)  
   14000b5b9:	pop    QWORD PTR [rax]
   14000b5bb:	add    BYTE PTR [rax-0x5fffff70],dh
   14000b5c1:	xchg   edx,eax
   14000b5c2:	add    BYTE PTR [rax],al
   14000b5c4:	and    BYTE PTR [rax+rax*1+0x968000],dl
   14000b5cb:	add    al,dh
   14000b5cd:	xchg   esi,eax
   14000b5ce:	add    BYTE PTR [rax],al
   14000b5d0:	jo     0x14000b569
   14000b5d2:	add    BYTE PTR [rax],al
   14000b5d4:	adc    BYTE PTR [rax-0x63600000],bl
   14000b5da:	add    BYTE PTR [rax],al
   14000b5dc:	lock pushf 
   14000b5de:	add    BYTE PTR [rax],al
   14000b5e0:	nop
   14000b5e1:	sahf   
   14000b5e2:	add    BYTE PTR [rax],al
   14000b5e4:	mov    al,0xa3
   14000b5e6:	add    BYTE PTR [rax],al
   14000b5e8:	add    BYTE PTR [rsi-0x59e00000],ah
   14000b5ee:	add    BYTE PTR [rax],al
   14000b5f0:	add    BYTE PTR [rcx+0x14000],0x0
   14000b5f7:	add    BYTE PTR [rax+0x1400032],dl
   14000b5fd:	add    BYTE PTR [rax],al
   14000b5ff:	add    al,ah
   14000b601:	add    DWORD PTR [rax],0x140
   14000b607:	add    al,al
   14000b609:	ja     0x14000b60b
   14000b60b:	rex add DWORD PTR [rax],eax
   14000b60e:	add    BYTE PTR [rax],al
   14000b610:	push   rbx
   14000b611:	add    BYTE PTR [rcx+0x0],cl
   14000b614:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000b618:	jae    0x14000b61a
   14000b61a:	je     0x14000b61c
   14000b61c:	push   rbx
   14000b61d:	add    BYTE PTR [rax+0x0],ch
   14000b620:	jne    0x14000b622
   14000b622:	je     0x14000b624
   14000b624:	add    BYTE PTR fs:[rdi+0x0],ch
   14000b628:	ja     0x14000b62a
   14000b62a:	outs   dx,BYTE PTR ds:[rsi]
   14000b62b:	add    BYTE PTR [rbp+0x0],al
   14000b62e:	jbe    0x14000b630
   14000b630:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b634:	je     0x14000b636
   14000b636:	add    BYTE PTR [rax],al
   14000b638:	and    ecx,DWORD PTR [rbp-0x57294c5]
   14000b63e:	mov    ecx,0xb9bd8d40
   14000b643:	push   rax
   14000b644:	xor    edi,DWORD PTR [rsi]
   14000b646:	sub    al,0x52
   14000b648:	add    DWORD PTR [rax+rax*4+0x7bde934],esp
   14000b64f:	rex.R mov esp,0x868a7902
   14000b655:	push   0xffffffffffffffc0
   14000b657:	push   rcx
   14000b658:	push   0xffffffffa35fafd8
   14000b65d:	jrcxz  0x14000b60b
   14000b65f:	rex.X xchg esi,eax
   14000b661:	popf   
   14000b662:	mov    dh,0x9b
   14000b664:	mov    esi,0xae0c409a
   14000b669:	pop    rbp
   14000b66a:	push   0xfffffffffffffff4
   14000b66c:	mov    esi,0xb24b6cb6
   14000b671:	(bad)
   14000b674:	(bad)  
   14000b675:	jne    0x14000b6bc
   14000b677:	jl     0x14000b612
   14000b679:	retf   0x8580
   14000b67c:	pop    rbp
   14000b67d:	xchg   edx,eax
   14000b67e:	(bad)  
   14000b67f:	rex.RB xchg r13d,eax
   14000b681:	fwait
   14000b682:	mov    bh,0xc9
   14000b684:	(bad)  
   14000b685:	rex.RB cld 
   14000b687:	add    DWORD PTR [rcx+rdi*8],eax
   14000b68a:	rcr    esp,cl
   14000b68c:	ret    
   14000b68d:	rcr    ecx,1
   14000b68f:	rex.WRX lods rax,QWORD PTR ds:[rsi]
   14000b691:	xchg   esp,eax
   14000b692:	rex.WXB
   14000b693:	gs xor rdi,r10
   14000b697:	(bad)  
   14000b698:	adc    BYTE PTR [rax+0x0],bl
   14000b69b:	rex add DWORD PTR [rax],eax
   14000b69e:	add    BYTE PTR [rax],al
   14000b6a0:	lock push rdi
   14000b6a2:	add    BYTE PTR [rax+0x1],al
   14000b6a5:	add    BYTE PTR [rax],al
   14000b6a7:	add    BYTE PTR [rax],dh
   14000b6a9:	pop    rax
   14000b6aa:	add    BYTE PTR [rax+0x1],al
   14000b6ad:	add    BYTE PTR [rax],al
   14000b6af:	add    BYTE PTR [rax-0x69],dh
   14000b6b2:	add    BYTE PTR [rax+0x1],al
   14000b6b5:	add    BYTE PTR [rax],al
   14000b6b7:	add    BYTE PTR [rax],dl
   14000b6b9:	cwde   
   14000b6ba:	add    BYTE PTR [rax+0x1],al
   14000b6bd:	add    BYTE PTR [rax],al
   14000b6bf:	add    BYTE PTR [rax],al
   14000b6c1:	pop    rax
   14000b6c2:	add    BYTE PTR [rax+0x1],al
   14000b6c5:	add    BYTE PTR [rax],al
   14000b6c7:	add    al,ah
   14000b6c9:	push   rdi
   14000b6ca:	add    BYTE PTR [rax+0x1],al
   14000b6cd:	add    BYTE PTR [rax],al
   14000b6cf:	add    BYTE PTR [rax],ah
   14000b6d1:	pop    rax
   14000b6d2:	add    BYTE PTR [rax+0x1],al
   14000b6d5:	add    BYTE PTR [rax],al
   14000b6d7:	add    al,al
   14000b6d9:	push   rdi
   14000b6da:	add    BYTE PTR [rax+0x1],al
   14000b6dd:	add    BYTE PTR [rax],al
   14000b6df:	add    al,ah
   14000b6e1:	and    BYTE PTR [rax],al
   14000b6e3:	rex add DWORD PTR [rax],eax
   14000b6e6:	add    BYTE PTR [rax],al
   14000b6e8:	movabs al,ds:0x3000000001400020
   14000b6f1:	(bad)  
   14000b6f2:	add    BYTE PTR [rax+0x1],al
   14000b6f5:	add    BYTE PTR [rax],al
   14000b6f7:	add    al,dl
   14000b6f9:	sbb    eax,0x14000
   14000b6fe:	add    BYTE PTR [rax],al
   14000b700:	lock sbb eax,0x14000
   14000b706:	add    BYTE PTR [rax],al
   14000b708:	add    BYTE PTR [rsi],bh
   14000b70a:	add    BYTE PTR [rax+0x1],al
   14000b70d:	add    BYTE PTR [rax],al
   14000b70f:	add    BYTE PTR [rax+0x3d],ah
   14000b712:	add    BYTE PTR [rax+0x1],al
   14000b715:	add    BYTE PTR [rax],al
   14000b717:	add    al,dl
   14000b719:	cmp    al,0x0
   14000b71b:	rex add DWORD PTR [rax],eax
   14000b71e:	add    BYTE PTR [rax],al
   14000b720:	and    BYTE PTR [rax+rax*1+0x140],dl
   14000b727:	add    BYTE PTR [rax+0x1400090],dh
   14000b72d:	add    BYTE PTR [rax],al
   14000b72f:	add    BYTE PTR [rax],al
   14000b731:	mov    es,WORD PTR [rax]
   14000b733:	rex add DWORD PTR [rax],eax
   14000b736:	add    BYTE PTR [rax],al
   14000b738:	lock pushf 
   14000b73a:	add    BYTE PTR [rax+0x1],al
   14000b73d:	add    BYTE PTR [rax],al
   14000b73f:	add    BYTE PTR [rax],dl
   14000b741:	pop    rax
   14000b742:	add    BYTE PTR [rax+0x1],al
   14000b745:	add    BYTE PTR [rax],al
   14000b747:	add    al,dh
   14000b749:	push   rdi
   14000b74a:	add    BYTE PTR [rax+0x1],al
   14000b74d:	add    BYTE PTR [rax],al
   14000b74f:	add    BYTE PTR [rax],dh
   14000b751:	pop    rax
   14000b752:	add    BYTE PTR [rax+0x1],al
   14000b755:	add    BYTE PTR [rax],al
   14000b757:	add    al,al
   14000b759:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b75d:	add    BYTE PTR [rax],al
   14000b75f:	add    al,al
   14000b761:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b765:	add    BYTE PTR [rax],al
   14000b767:	add    BYTE PTR [rax],al
   14000b769:	pop    rax
   14000b76a:	add    BYTE PTR [rax+0x1],al
   14000b76d:	add    BYTE PTR [rax],al
   14000b76f:	add    al,ah
   14000b771:	push   rdi
   14000b772:	add    BYTE PTR [rax+0x1],al
   14000b775:	add    BYTE PTR [rax],al
   14000b777:	add    BYTE PTR [rax],ah
   14000b779:	pop    rax
   14000b77a:	add    BYTE PTR [rax+0x1],al
   14000b77d:	add    BYTE PTR [rax],al
   14000b77f:	add    al,al
   14000b781:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b785:	add    BYTE PTR [rax],al
   14000b787:	add    al,al
   14000b789:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b78d:	add    BYTE PTR [rax],al
   14000b78f:	add    al,al
   14000b791:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b795:	add    BYTE PTR [rax],al
   14000b797:	add    BYTE PTR [rax],dh
   14000b799:	(bad)  
   14000b79a:	add    BYTE PTR [rax+0x1],al
   14000b79d:	add    BYTE PTR [rax],al
   14000b79f:	add    al,dl
   14000b7a1:	sbb    eax,0x14000
   14000b7a6:	add    BYTE PTR [rax],al
   14000b7a8:	lock sbb eax,0x14000
   14000b7ae:	add    BYTE PTR [rax],al
   14000b7b0:	add    BYTE PTR [rsi],bh
   14000b7b2:	add    BYTE PTR [rax+0x1],al
   14000b7b5:	add    BYTE PTR [rax],al
   14000b7b7:	add    BYTE PTR [rax+0x3d],ah
   14000b7ba:	add    BYTE PTR [rax+0x1],al
   14000b7bd:	add    BYTE PTR [rax],al
   14000b7bf:	add    al,dl
   14000b7c1:	cmp    al,0x0
   14000b7c3:	rex add DWORD PTR [rax],eax
   14000b7c6:	add    BYTE PTR [rax],al
   14000b7c8:	and    BYTE PTR [rax+rax*1+0x140],dl
   14000b7cf:	add    BYTE PTR [rax+0x1400090],dh
   14000b7d5:	add    BYTE PTR [rax],al
   14000b7d7:	add    BYTE PTR [rax],al
   14000b7d9:	mov    es,WORD PTR [rax]
   14000b7db:	rex add DWORD PTR [rax],eax
   14000b7de:	add    BYTE PTR [rax],al
   14000b7e0:	movabs al,ds:0x700000000140009c
   14000b7e9:	push   rdi
   14000b7ea:	add    BYTE PTR [rax+0x1],al
   14000b7ed:	add    BYTE PTR [rax],al
   14000b7ef:	add    BYTE PTR [rax],dh
   14000b7f1:	push   rdi
   14000b7f2:	add    BYTE PTR [rax+0x1],al
   14000b7f5:	add    BYTE PTR [rax],al
   14000b7f7:	add    BYTE PTR [rax+0x1400057],ah
   14000b7fd:	add    BYTE PTR [rax],al
   14000b7ff:	add    BYTE PTR [rax-0x71],ah
   14000b802:	add    BYTE PTR [rax+0x1],al
   14000b805:	add    BYTE PTR [rax],al
   14000b807:	add    BYTE PTR [rax+0x57],ah
   14000b80a:	add    BYTE PTR [rax+0x1],al
   14000b80d:	add    BYTE PTR [rax],al
   14000b80f:	add    BYTE PTR [rax],ah
   14000b811:	push   rdi
   14000b812:	add    BYTE PTR [rax+0x1],al
   14000b815:	add    BYTE PTR [rax],al
   14000b817:	add    BYTE PTR [rax+0x1400057],dl
   14000b81d:	add    BYTE PTR [rax],al
   14000b81f:	add    al,ah
   14000b821:	cmp    DWORD PTR [rax],eax
   14000b823:	rex add DWORD PTR [rax],eax
   14000b826:	add    BYTE PTR [rax],al
   14000b828:	movabs al,ds:0xa000000001400052
   14000b831:	push   rdx
   14000b832:	add    BYTE PTR [rax+0x1],al
   14000b835:	add    BYTE PTR [rax],al
   14000b837:	add    BYTE PTR [rax+0x1400052],ah
   14000b83d:	add    BYTE PTR [rax],al
   14000b83f:	add    BYTE PTR [rax+0x1400092],ah
   14000b845:	add    BYTE PTR [rax],al
   14000b847:	add    al,dh
   14000b849:	push   rsi
   14000b84a:	add    BYTE PTR [rax+0x1],al
   14000b84d:	add    BYTE PTR [rax],al
   14000b84f:	add    BYTE PTR [rax+0x1400057],dh
   14000b855:	add    BYTE PTR [rax],al
   14000b857:	add    BYTE PTR [rax+0x3a],dh
   14000b85a:	add    BYTE PTR [rax+0x1],al
   14000b85d:	add    BYTE PTR [rax],al
   14000b85f:	add    al,dh
   14000b861:	xchg   esi,eax
   14000b862:	add    BYTE PTR [rax+0x1],al
   14000b865:	add    BYTE PTR [rax],al
   14000b867:	add    BYTE PTR [rax+0x1400096],al
   14000b86d:	add    BYTE PTR [rax],al
   14000b86f:	add    BYTE PTR [rax+0x57],dl
   14000b872:	add    BYTE PTR [rax+0x1],al
   14000b875:	add    BYTE PTR [rax],al
   14000b877:	add    BYTE PTR [rax],dl
   14000b879:	push   rdi
   14000b87a:	add    BYTE PTR [rax+0x1],al
   14000b87d:	add    BYTE PTR [rax],al
   14000b87f:	add    BYTE PTR [rax+0x1400057],al
   14000b885:	add    BYTE PTR [rax],al
   14000b887:	add    al,ah
   14000b889:	sbb    al,BYTE PTR [rax]
   14000b88b:	rex add DWORD PTR [rax],eax
   14000b88e:	add    BYTE PTR [rax],al
   14000b890:	push   rax
   14000b891:	mov    es,WORD PTR [rax]
   14000b893:	rex add DWORD PTR [rax],eax
   14000b896:	add    BYTE PTR [rax],al
   14000b898:	nop
   14000b899:	sbb    al,0x0
   14000b89b:	rex add DWORD PTR [rax],eax
   14000b89e:	add    BYTE PTR [rax],al
   14000b8a0:	jo     0x14000b8be
   14000b8a2:	add    BYTE PTR [rax+0x1],al
   14000b8a5:	add    BYTE PTR [rax],al
   14000b8a7:	add    BYTE PTR [rax+0x1c],al
   14000b8aa:	add    BYTE PTR [rax+0x1],al
   14000b8ad:	add    BYTE PTR [rax],al
   14000b8af:	add    BYTE PTR [rax],al
   14000b8b1:	add    BYTE PTR ds:[rax+0x1],al
   14000b8b5:	add    BYTE PTR [rax],al
   14000b8b7:	add    BYTE PTR [rax+0x3d],ah
   14000b8ba:	add    BYTE PTR [rax+0x1],al
   14000b8bd:	add    BYTE PTR [rax],al
   14000b8bf:	add    al,dl
   14000b8c1:	cmp    al,0x0
   14000b8c3:	rex add DWORD PTR [rax],eax
   14000b8c6:	add    BYTE PTR [rax],al
   14000b8c8:	and    BYTE PTR [rax+rax*1+0x140],dl
   14000b8cf:	add    BYTE PTR [rax+0x1400090],dh
   14000b8d5:	add    BYTE PTR [rax],al
   14000b8d7:	add    BYTE PTR [rax],al
   14000b8d9:	mov    es,WORD PTR [rax]
   14000b8db:	rex add DWORD PTR [rax],eax
   14000b8de:	add    BYTE PTR [rax],al
   14000b8e0:	(bad)  
   14000b8e1:	push   rdi
   14000b8e2:	add    BYTE PTR [rax+0x1],al
   14000b8e5:	add    BYTE PTR [rax],al
   14000b8e7:	add    BYTE PTR [rax],ah
   14000b8e9:	push   rdi
   14000b8ea:	add    BYTE PTR [rax+0x1],al
   14000b8ed:	add    BYTE PTR [rax],al
   14000b8ef:	add    BYTE PTR [rax+0x1400057],dl
   14000b8f5:	add    BYTE PTR [rax],al
   14000b8f7:	add    al,ah
   14000b8f9:	cmp    DWORD PTR [rax],eax
   14000b8fb:	rex add DWORD PTR [rax],eax
   14000b8fe:	add    BYTE PTR [rax],al
   14000b900:	movabs al,ds:0xa000000001400052
   14000b909:	push   rdx
   14000b90a:	add    BYTE PTR [rax+0x1],al
   14000b90d:	add    BYTE PTR [rax],al
   14000b90f:	add    BYTE PTR [rax+0x1400052],ah
   14000b915:	add    BYTE PTR [rax],al
   14000b917:	add    BYTE PTR [rax+0x1400092],ah
   14000b91d:	add    BYTE PTR [rax],al
   14000b91f:	add    al,ah
   14000b921:	push   rsi
   14000b922:	add    BYTE PTR [rax+0x1],al
   14000b925:	add    BYTE PTR [rax],al
   14000b927:	add    BYTE PTR [rax+0x1400057],dh
   14000b92d:	add    BYTE PTR [rax],al
   14000b92f:	add    BYTE PTR [rax+0x1400052],ah
   14000b935:	add    BYTE PTR [rax],al
   14000b937:	add    BYTE PTR [rax+0x1400052],ah
   14000b93d:	add    BYTE PTR [rax],al
   14000b93f:	add    BYTE PTR [rax+0x1400096],al
   14000b945:	add    BYTE PTR [rax],al
   14000b947:	add    al,al
   14000b949:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b94d:	add    BYTE PTR [rax],al
   14000b94f:	add    al,al
   14000b951:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b955:	add    BYTE PTR [rax],al
   14000b957:	add    al,al
   14000b959:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b95d:	add    BYTE PTR [rax],al
   14000b95f:	add    BYTE PTR [rax-0x71],ah
   14000b962:	add    BYTE PTR [rax+0x1],al
   14000b965:	add    BYTE PTR [rax],al
   14000b967:	add    al,al
   14000b969:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b96d:	add    BYTE PTR [rax],al
   14000b96f:	add    al,al
   14000b971:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b975:	add    BYTE PTR [rax],al
   14000b977:	add    al,al
   14000b979:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b97d:	add    BYTE PTR [rax],al
   14000b97f:	add    al,ah
   14000b981:	cmp    DWORD PTR [rax],eax
   14000b983:	rex add DWORD PTR [rax],eax
   14000b986:	add    BYTE PTR [rax],al
   14000b988:	movabs al,ds:0xa000000001400052
   14000b991:	push   rdx
   14000b992:	add    BYTE PTR [rax+0x1],al
   14000b995:	add    BYTE PTR [rax],al
   14000b997:	add    BYTE PTR [rax+0x1400052],ah
   14000b99d:	add    BYTE PTR [rax],al
   14000b99f:	add    BYTE PTR [rax+0x1400092],ah
   14000b9a5:	add    BYTE PTR [rax],al
   14000b9a7:	add    BYTE PTR [rax],al
   14000b9a9:	push   rdi
   14000b9aa:	add    BYTE PTR [rax+0x1],al
   14000b9ad:	add    BYTE PTR [rax],al
   14000b9af:	add    BYTE PTR [rax+0x1400057],dh
   14000b9b5:	add    BYTE PTR [rax],al
   14000b9b7:	add    BYTE PTR [rax+0x1400052],ah
   14000b9bd:	add    BYTE PTR [rax],al
   14000b9bf:	add    BYTE PTR [rax+0x1400052],ah
   14000b9c5:	add    BYTE PTR [rax],al
   14000b9c7:	add    BYTE PTR [rax+0x1400096],al
   14000b9cd:	add    BYTE PTR [rax],al
   14000b9cf:	add    al,al
   14000b9d1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b9d5:	add    BYTE PTR [rax],al
   14000b9d7:	add    al,al
   14000b9d9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b9dd:	add    BYTE PTR [rax],al
   14000b9df:	add    al,al
   14000b9e1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b9e5:	add    BYTE PTR [rax],al
   14000b9e7:	add    al,ah
   14000b9e9:	sbb    al,BYTE PTR [rax]
   14000b9eb:	rex add DWORD PTR [rax],eax
   14000b9ee:	add    BYTE PTR [rax],al
   14000b9f0:	push   rax
   14000b9f1:	mov    es,WORD PTR [rax]
   14000b9f3:	rex add DWORD PTR [rax],eax
   14000b9f6:	add    BYTE PTR [rax],al
   14000b9f8:	ror    BYTE PTR [rsi+0x0],0x40
   14000b9fc:	add    DWORD PTR [rax],eax
   14000b9fe:	add    BYTE PTR [rax],al
   14000ba00:	ror    BYTE PTR [rsi+0x0],0x40
   14000ba04:	add    DWORD PTR [rax],eax
   14000ba06:	add    BYTE PTR [rax],al
   14000ba08:	ror    BYTE PTR [rsi+0x0],0x40
   14000ba0c:	add    DWORD PTR [rax],eax
   14000ba0e:	add    BYTE PTR [rax],al
   14000ba10:	loopne 0x14000ba4b
   14000ba12:	add    BYTE PTR [rax+0x1],al
   14000ba15:	add    BYTE PTR [rax],al
   14000ba17:	add    BYTE PTR [rax+0x1400052],ah
   14000ba1d:	add    BYTE PTR [rax],al
   14000ba1f:	add    BYTE PTR [rax+0x1400052],ah
   14000ba25:	add    BYTE PTR [rax],al
   14000ba27:	add    BYTE PTR [rax+0x1400052],ah
   14000ba2d:	add    BYTE PTR [rax],al
   14000ba2f:	add    BYTE PTR [rax+0x1400092],ah
   14000ba35:	add    BYTE PTR [rax],al
   14000ba37:	add    BYTE PTR [rax-0x73],al
   14000ba3a:	add    BYTE PTR [rax+0x1],al
   14000ba3d:	add    BYTE PTR [rax],al
   14000ba3f:	add    BYTE PTR [rax+0x1400057],dh
   14000ba45:	add    BYTE PTR [rax],al
   14000ba47:	add    BYTE PTR [rax+0x1400052],ah
   14000ba4d:	add    BYTE PTR [rax],al
   14000ba4f:	add    BYTE PTR [rax+0x1400052],ah
   14000ba55:	add    BYTE PTR [rax],al
   14000ba57:	add    al,al
   14000ba59:	rex.WRX add BYTE PTR [rax+0x1],r8b
	...
   14000ba65:	add    BYTE PTR [rax],al
   14000ba67:	add    al,al
   14000ba69:	add    BYTE PTR [rax],al
   14000ba6b:	add    BYTE PTR [rax],al
   14000ba6d:	add    BYTE PTR [rax],al
   14000ba6f:	rex.RX add r8d,DWORD PTR [rax]
   14000ba72:	add    BYTE PTR [rax],al
   14000ba74:	add    BYTE PTR [rax],al
   14000ba76:	add    BYTE PTR [rax],al
   14000ba78:	rol    BYTE PTR [rax],0x0
   14000ba7b:	add    BYTE PTR [rax],al
   14000ba7d:	add    BYTE PTR [rax],al
   14000ba7f:	rex.RX xchg esi,eax
   14000ba81:	or     BYTE PTR [rbp+rbx*8+0x6f],dl
   14000ba85:	fwait
   14000ba86:	stos   BYTE PTR es:[rdi],al
   14000ba87:	rex.WRXB (bad) 
   14000ba89:	pushf  
   14000ba8a:	in     eax,0xc3
   14000ba8c:	lahf   
   14000ba8d:	cwde   
   14000ba8e:	cmp    ebx,esi
   14000ba90:	xchg   esp,eax
   14000ba91:	sub    ebp,edx
   14000ba93:	xchg   esp,eax
   14000ba94:	int3   
   14000ba95:	jmp    0x13fc1047a
   14000ba9a:	out    dx,al
   14000ba9b:	fs retf 0x5b8f
   14000ba9f:	nop
   14000baa0:	jae    0x14000bb0e
   14000baa2:	loop   0x14000ba74
   14000baa4:	push   rdx
   14000baa5:	mov    bh,0xbd
   14000baa7:	rex.RB lahf 
   14000baa9:	lock mov ebx,0xbdab7515
   14000baaf:	or     esp,DWORD PTR [rbx-0x5603b7ff]
   14000bab5:	sub    ecx,edi
   14000bab7:	adc    DWORD PTR [rdx+0xaa0029],esp
   14000babd:	cmp    eax,0x78cf5273
   14000bac2:	mov    ah,0xa4
   14000bac4:	iret   
   14000bac5:	cmp    al,0xf0
   14000bac7:	rex.WRB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bac9:	cmp    rdx,QWORD PTR ss:[r12+r14*2]
   14000bace:	cdq    
   14000bacf:	mov    eax,eax
   14000bad1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000bad5:	add    BYTE PTR [rax],al
   14000bad7:	add    al,al
   14000bad9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000badd:	add    BYTE PTR [rax],al
   14000badf:	add    al,al
   14000bae1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000bae5:	add    BYTE PTR [rax],al
   14000bae7:	add    BYTE PTR [rax],al
   14000bae9:	add    BYTE PTR ds:[rax+0x1],al
   14000baed:	add    BYTE PTR [rax],al
   14000baef:	add    BYTE PTR [rax+0x3d],ah
   14000baf2:	add    BYTE PTR [rax+0x1],al
   14000baf5:	add    BYTE PTR [rax],al
   14000baf7:	add    al,dl
   14000baf9:	cmp    al,0x0
   14000bafb:	rex add DWORD PTR [rax],eax
   14000bafe:	add    BYTE PTR [rax],al
   14000bb00:	and    BYTE PTR [rax+rax*1+0x140],dl
   14000bb07:	add    BYTE PTR [rax+0x1400090],dh
   14000bb0d:	add    BYTE PTR [rax],al
   14000bb0f:	add    BYTE PTR [rax],al
   14000bb11:	mov    es,WORD PTR [rax]
   14000bb13:	rex add DWORD PTR [rax],eax
   14000bb16:	add    BYTE PTR [rax],al
   14000bb18:	rex.WXB add rax,QWORD PTR [r8]
   14000bb1b:	add    BYTE PTR [rax],al
   14000bb1d:	add    BYTE PTR [rax],al
   14000bb1f:	add    al,al
   14000bb21:	add    BYTE PTR [rax],al
   14000bb23:	add    BYTE PTR [rax],al
   14000bb25:	add    BYTE PTR [rax],al
   14000bb27:	rex.RX pop rbx
   14000bb29:	add    DWORD PTR [rax],eax
   14000bb2b:	add    BYTE PTR [rax],al
   14000bb2d:	add    BYTE PTR [rax],al
   14000bb2f:	add    al,al
   14000bb31:	add    BYTE PTR [rax],al
   14000bb33:	add    BYTE PTR [rax],al
   14000bb35:	add    BYTE PTR [rax],al
   14000bb37:	rex.RX xchg eax,eax
   14000bb39:	sahf   
   14000bb3a:	add    BYTE PTR [rax+0x1],al
   14000bb3d:	add    BYTE PTR [rax],al
   14000bb3f:	add    BYTE PTR [rax+0x29],dl
   14000bb42:	add    BYTE PTR [rax+0x1],al
   14000bb45:	add    BYTE PTR [rax],al
   14000bb47:	add    BYTE PTR [rax],ah
   14000bb49:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bb4a:	add    BYTE PTR [rax+0x1],al
   14000bb4d:	add    BYTE PTR [rax],al
   14000bb4f:	add    BYTE PTR [rax+0x72],dl
   14000bb52:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14000bb55:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000bb5d:	add    BYTE PTR [rax],al
   14000bb5f:	add    BYTE PTR [rax+0x140009e],dl
   14000bb65:	add    BYTE PTR [rax],al
   14000bb67:	add    BYTE PTR [rax],dl
   14000bb69:	sub    eax,0x14000
   14000bb6e:	add    BYTE PTR [rax],al
   14000bb70:	and    BYTE PTR [rsi+0x14000],ah
   14000bb76:	add    BYTE PTR [rax],al
   14000bb78:	push   rbx
   14000bb79:	je     0x14000bbdc
   14000bb7b:	jb     0x14000bbf1
   14000bb7d:	push   rbx
   14000bb7e:	gs jb  0x14000bbf7
   14000bb81:	imul   esp,DWORD PTR [rbx+0x65],0x74736f48
   14000bb88:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bb8a:	outs   dx,BYTE PTR ds:[rsi]
   14000bb8b:	je     0x14000bbff
   14000bb8d:	outs   dx,DWORD PTR ds:[rsi]
   14000bb8e:	ins    BYTE PTR es:[rdi],dx
   14000bb8f:	ins    BYTE PTR es:[rdi],dx
   14000bb90:	gs jb  0x14000bb93
   14000bb93:	add    BYTE PTR [rax],al
   14000bb95:	add    BYTE PTR [rax],al
   14000bb97:	add    BYTE PTR [rax+0x140009e],dl
   14000bb9d:	add    BYTE PTR [rax],al
   14000bb9f:	add    BYTE PTR [rax],dh
   14000bba1:	sub    eax,DWORD PTR [rax]
   14000bba3:	rex add DWORD PTR [rax],eax
   14000bba6:	add    BYTE PTR [rax],al
   14000bba8:	and    BYTE PTR [rsi+0x14000],ah
   14000bbae:	add    BYTE PTR [rax],al
   14000bbb0:	push   rax
   14000bbb1:	outs   dx,DWORD PTR ds:[rsi]
   14000bbb2:	jae    0x14000bc28
   14000bbb4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bbb6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000bbbe:	add    BYTE PTR [rax],al
   14000bbc0:	mov    edx,0xd7e21530
   14000bbc5:	hlt    
   14000bbc6:	jo     0x14000bc0c
   14000bbc8:	popf   
   14000bbc9:	js     0x14000bc0f
   14000bbcb:	xchg   esp,eax
   14000bbcc:	mov    edx,ebx
   14000bbce:	cmp    dl,BYTE PTR [rsi+0x400033c0]
   14000bbd4:	add    DWORD PTR [rax],eax
   14000bbd6:	add    BYTE PTR [rax],al
   14000bbd8:	push   rax
   14000bbd9:	xor    al,0x0
   14000bbdb:	rex add DWORD PTR [rax],eax
   14000bbde:	add    BYTE PTR [rax],al
   14000bbe0:	(bad)  
   14000bbe1:	xor    eax,DWORD PTR [rax]
   14000bbe3:	rex add DWORD PTR [rax],eax
   14000bbe6:	add    BYTE PTR [rax],al
   14000bbe8:	push   rax
   14000bbe9:	sbb    BYTE PTR [rax],al
   14000bbeb:	rex add DWORD PTR [rax],eax
   14000bbee:	add    BYTE PTR [rax],al
   14000bbf0:	rex push rdi
   14000bbf2:	add    BYTE PTR [rax+0x1],al
   14000bbf5:	add    BYTE PTR [rax],al
   14000bbf7:	add    BYTE PTR [rax],al
   14000bbf9:	lea    eax,[rax]
   14000bbfb:	rex add DWORD PTR [rax],eax
   14000bbfe:	add    BYTE PTR [rax],al
   14000bc00:	rex.WRXB add BYTE PTR [r10],r15b
   14000bc03:	add    BYTE PTR [rax+0x0],dl
   14000bc06:	push   rbx
   14000bc07:	add    BYTE PTR [rdi+0x0],al
   14000bc0a:	cmp    al,BYTE PTR [rax]
   14000bc0c:	rex.X add BYTE PTR [rbp+0x0],dl
   14000bc10:	add    BYTE PTR [rdx],r15b
   14000bc13:	add    BYTE PTR [rax],ch
   14000bc15:	add    BYTE PTR [rcx+0x0],al
   14000bc18:	cmp    eax,DWORD PTR [rax]
   14000bc1a:	cmp    eax,DWORD PTR [rax]
   14000bc1c:	xor    eax,DWORD PTR [rax]
   14000bc1e:	cmp    eax,DWORD PTR [rax]
   14000bc20:	cmp    eax,DWORD PTR [rax]
   14000bc22:	cmp    eax,DWORD PTR [rax]
   14000bc24:	push   rax
   14000bc25:	add    BYTE PTR [rbx+0x0],dl
   14000bc28:	sub    DWORD PTR [rax],eax
   14000bc2a:	sub    BYTE PTR [rax],al
   14000bc2c:	add    BYTE PTR [r11],dil
   14000bc2f:	add    BYTE PTR [rbx],bh
   14000bc31:	add    BYTE PTR [rbx],dh
   14000bc33:	add    BYTE PTR [rbx],bh
   14000bc35:	add    BYTE PTR [rbx],bh
   14000bc37:	add    BYTE PTR [rbx],bh
   14000bc39:	add    BYTE PTR [rbx+0x0],dl
   14000bc3c:	pop    rcx
   14000bc3d:	add    BYTE PTR [rcx],ch
   14000bc3f:	add    BYTE PTR [rax],ch
   14000bc41:	add    BYTE PTR [rcx+0x0],al
   14000bc44:	cmp    eax,DWORD PTR [rax]
   14000bc46:	cmp    eax,DWORD PTR [rax]
   14000bc48:	xor    BYTE PTR [rax],al
   14000bc4a:	js     0x14000bc4c
   14000bc4c:	rex.X add BYTE PTR [rbx],dil
   14000bc4f:	add    BYTE PTR [rbx],bh
   14000bc51:	add    BYTE PTR [rbx],bh
   14000bc53:	add    BYTE PTR [rbx+0x0],dl
   14000bc56:	sub    eax,0x2d003100
   14000bc5b:	add    BYTE PTR [rip+0x38002d00],dh        # 0x17800e961
   14000bc61:	add    BYTE PTR [rax],dh
   14000bc63:	add    BYTE PTR [rip+0x36003200],ch        # 0x17600ee69
   14000bc69:	add    BYTE PTR [rdi],dh
   14000bc6b:	add    BYTE PTR [rsi],dh
   14000bc6d:	add    BYTE PTR [rip+0x39003400],dh        # 0x17900f073
   14000bc73:	add    BYTE PTR [rip+0x37003700],dh        # 0x17700f379
   14000bc79:	add    BYTE PTR [rip+0x39003100],ch        # 0x17900ed7f
   14000bc7f:	add    BYTE PTR [rcx],dh
   14000bc81:	add    BYTE PTR [rcx],dh
   14000bc83:	add    BYTE PTR [rsi],dh
   14000bc85:	add    BYTE PTR [rip+0x32003600],dh        # 0x17200f28b
   14000bc8b:	add    BYTE PTR [rcx],dh
   14000bc8d:	add    BYTE PTR [rdi],dh
   14000bc8f:	add    BYTE PTR [rip+0x36003200],ch        # 0x17600ee95
   14000bc95:	add    BYTE PTR [rdx],dh
   14000bc97:	add    BYTE PTR [rip+0x39003000],dh        # 0x17900ec9d
   14000bc9d:	add    BYTE PTR [rsi],dh
   14000bc9f:	add    BYTE PTR [rip+0x31003400],dh        # 0x17100f0a5
   14000bca5:	add    BYTE PTR [rip+0x31003400],ch        # 0x17100f0ab
   14000bcab:	add    BYTE PTR [rdi],dh
   14000bcad:	add    BYTE PTR [rax],bh
   14000bcaf:	add    BYTE PTR [rax],dh
   14000bcb1:	add    BYTE PTR [rax+rax*1],dh
   14000bcb4:	xor    DWORD PTR [rax],eax
   14000bcb6:	cmp    BYTE PTR [rax],al
   14000bcb8:	(bad)  
   14000bcb9:	add    BYTE PTR [rsi],dh
   14000bcbb:	add    BYTE PTR [rip+0x33003100],ch        # 0x17300edc1
   14000bcc1:	add    BYTE PTR [rsi],dh
   14000bcc3:	add    BYTE PTR [rsi],dh
   14000bcc5:	add    BYTE PTR [rdi],dh
   14000bcc7:	add    BYTE PTR [rsi],dh
   14000bcc9:	add    BYTE PTR [rax],dh
   14000bccb:	add    BYTE PTR [rdi],dh
   14000bccd:	add    BYTE PTR [rdi],dh
   14000bccf:	add    BYTE PTR [rip+0x28002900],dh        # 0x16800e5d5
   14000bcd5:	add    BYTE PTR [rcx+0x0],al
   14000bcd8:	cmp    eax,DWORD PTR [rax]
   14000bcda:	cmp    eax,DWORD PTR [rax]
   14000bcdc:	xor    eax,DWORD PTR [rax]
   14000bcde:	cmp    eax,DWORD PTR [rax]
   14000bce0:	cmp    eax,DWORD PTR [rax]
   14000bce2:	cmp    eax,DWORD PTR [rax]
   14000bce4:	rex.X add BYTE PTR [rcx+0x0],al
   14000bce8:	sub    DWORD PTR [rax],eax
   14000bcea:	sub    BYTE PTR [rax],al
   14000bcec:	add    BYTE PTR [r11],dil
   14000bcef:	add    BYTE PTR [rbx],bh
   14000bcf1:	add    BYTE PTR [rbx],dh
   14000bcf3:	add    BYTE PTR [rbx],bh
   14000bcf5:	add    BYTE PTR [rbx],bh
   14000bcf7:	add    BYTE PTR [rbx],bh
   14000bcf9:	add    BYTE PTR [rcx+0x0],al
   14000bcfc:	rex.XB add BYTE PTR [r9],bpl
   14000bcff:	add    BYTE PTR [rax],ch
   14000bd01:	add    BYTE PTR [rax+0x0],bl
   14000bd04:	add    BYTE PTR [r11],dil
   14000bd07:	add    BYTE PTR [rbx],bh
   14000bd09:	add    BYTE PTR [rbx],dh
   14000bd0b:	add    BYTE PTR [rbx],bh
   14000bd0d:	add    BYTE PTR [rbx],bh
   14000bd0f:	add    BYTE PTR [rbx],bh
   14000bd11:	add    BYTE PTR [rcx+0x0],al
   14000bd14:	push   rbp
   14000bd15:	add    BYTE PTR [rbx],bh
   14000bd17:	add    BYTE PTR [rax],ch
   14000bd19:	add    BYTE PTR [rcx],ah
   14000bd1b:	add    BYTE PTR [rax],ch
   14000bd1d:	add    BYTE PTR [rdi+0x0],dl
   14000bd20:	rex.WB add BYTE PTR [r14+0x0],cl
   14000bd24:	cmp    al,BYTE PTR [rax]
   14000bd26:	(bad)  
   14000bd27:	add    BYTE PTR [rdi],ch
   14000bd29:	add    BYTE PTR [rcx+0x0],cl
   14000bd2c:	push   rbx
   14000bd2d:	add    BYTE PTR [rbp+0x0],cl
   14000bd30:	push   rbp
   14000bd31:	add    BYTE PTR [rax+rax*1+0x54],cl
   14000bd35:	add    BYTE PTR [rcx+0x0],cl
   14000bd38:	push   rbx
   14000bd39:	add    BYTE PTR [rbp+0x0],al
   14000bd3c:	push   rbx
   14000bd3d:	add    BYTE PTR [rbx+0x0],dl
   14000bd40:	rex.WB add BYTE PTR [r15+0x0],cl
   14000bd44:	rex.WRX add BYTE PTR [rbx+0x0],r10b
   14000bd48:	rex.WXB add BYTE PTR [r13+0x0],dl
   14000bd4c:	sub    DWORD PTR [rax],eax
   14000bd4e:	sub    DWORD PTR [rax],eax
   14000bd50:	sub    DWORD PTR [rax],eax
   14000bd52:	sub    BYTE PTR [rax],al
   14000bd54:	pop    rax
   14000bd55:	add    BYTE PTR [rcx+0x0],al
   14000bd58:	cmp    eax,DWORD PTR [rax]
   14000bd5a:	cmp    eax,DWORD PTR [rax]
   14000bd5c:	xor    eax,DWORD PTR [rax]
   14000bd5e:	cmp    eax,DWORD PTR [rax]
   14000bd60:	cmp    eax,DWORD PTR [rax]
   14000bd62:	cmp    eax,DWORD PTR [rax]
   14000bd64:	rex.WB add BYTE PTR [r13+0x0],dl
   14000bd68:	cmp    eax,DWORD PTR [rax]
   14000bd6a:	sub    BYTE PTR [rax],al
   14000bd6c:	and    DWORD PTR [rax],eax
   14000bd6e:	sub    BYTE PTR [rax],al
   14000bd70:	push   rdi
   14000bd71:	add    BYTE PTR [rcx+0x0],cl
   14000bd74:	rex.WRX add BYTE PTR [rdx],r15b
   14000bd77:	add    BYTE PTR [rdi],ch
   14000bd79:	add    BYTE PTR [rdi],ch
   14000bd7b:	add    BYTE PTR [rcx+0x0],cl
   14000bd7e:	push   rbx
   14000bd7f:	add    BYTE PTR [rbp+0x0],cl
   14000bd82:	push   rbp
   14000bd83:	add    BYTE PTR [rax+rax*1+0x54],cl
   14000bd87:	add    BYTE PTR [rcx+0x0],cl
   14000bd8a:	push   rbx
   14000bd8b:	add    BYTE PTR [rbp+0x0],al
   14000bd8e:	push   rbx
   14000bd8f:	add    BYTE PTR [rbx+0x0],dl
   14000bd92:	rex.WB add BYTE PTR [r15+0x0],cl
   14000bd96:	rex.WRX add BYTE PTR [rbx+0x0],r10b
   14000bd9a:	rex.WXB add BYTE PTR [r13+0x0],dl
   14000bd9e:	sub    DWORD PTR [rax],eax
   14000bda0:	sub    DWORD PTR [rax],eax
   14000bda2:	sub    DWORD PTR [rax],eax
   14000bda4:	add    BYTE PTR [rax],al
   14000bda6:	add    BYTE PTR [rax],al
   14000bda8:	push   rbx
   14000bda9:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000bdad:	add    BYTE PTR [rax+0x0],dh
   14000bdb0:	and    BYTE PTR [rax],al
   14000bdb2:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000bdb6:	jbe    0x14000bdb8
   14000bdb8:	imul   eax,DWORD PTR [rax],0x610067
   14000bdbe:	je     0x14000bdc0
   14000bdc0:	imul   eax,DWORD PTR [rax],0x6e006f
   14000bdc6:	push   rbx
   14000bdc7:	add    BYTE PTR [rbp+0x0],ah
   14000bdca:	jb     0x14000bdcc
   14000bdcc:	jbe    0x14000bdce
   14000bdce:	add    BYTE PTR gs:[rdx+0x0],dh
   14000bdd2:	add    BYTE PTR [rax],al
   14000bdd4:	add    BYTE PTR [rax],al
   14000bdd6:	add    BYTE PTR [rax],al
   14000bdd8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000bddc:	jbe    0x14000bdde
   14000bdde:	imul   eax,DWORD PTR [rax],0x610067
   14000bde4:	je     0x14000bde6
   14000bde6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000bdec:	push   rbx
   14000bded:	add    BYTE PTR [rbp+0x0],ah
   14000bdf0:	jb     0x14000bdf2
   14000bdf2:	jbe    0x14000bdf4
   14000bdf4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000bdf8:	and    BYTE PTR [rax],al
   14000bdfa:	push   rbx
   14000bdfb:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000bdff:	add    BYTE PTR [rdx+0x0],dh
   14000be02:	je     0x14000be04
   14000be04:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000be09:	add    BYTE PTR [rax],al
   14000be0b:	add    BYTE PTR [rax],al
   14000be0d:	add    BYTE PTR [rax],al
   14000be0f:	add    BYTE PTR [rax+rax*1+0x3a],al
   14000be13:	add    BYTE PTR [rax],ch
   14000be15:	add    BYTE PTR [rcx+0x0],al
   14000be18:	cmp    eax,DWORD PTR [rax]
   14000be1a:	cmp    eax,DWORD PTR [rax]
   14000be1c:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000be20:	cmp    eax,DWORD PTR [rax]
   14000be22:	cmp    eax,DWORD PTR [rax]
   14000be24:	cmp    eax,DWORD PTR [rax]
   14000be26:	push   rbx
   14000be27:	add    BYTE PTR [rcx+0x0],bl
   14000be2a:	sub    DWORD PTR [rax],eax
   14000be2c:	sub    BYTE PTR [rax],al
   14000be2e:	add    BYTE PTR [r11],dil
   14000be31:	add    BYTE PTR [rbx],bh
   14000be33:	add    BYTE PTR [rax],dh
   14000be35:	add    BYTE PTR [rax+0x0],bh
   14000be38:	xor    BYTE PTR [rax],al
   14000be3a:	xor    BYTE PTR [rax],al
   14000be3c:	xor    DWORD PTR [rax],eax
   14000be3e:	rex.RX add BYTE PTR [rax],r14b
   14000be41:	add    BYTE PTR [rax],dh
   14000be43:	add    BYTE PTR [rax],dh
   14000be45:	add    BYTE PTR [rbx],dh
   14000be47:	add    BYTE PTR [rbx],bh
   14000be49:	add    BYTE PTR [rbx],bh
   14000be4b:	add    BYTE PTR [rbx],bh
   14000be4d:	add    BYTE PTR [rdi+0x0],dl
   14000be50:	add    BYTE PTR [rcx],r13b
   14000be53:	add    BYTE PTR [rax],ch
   14000be55:	add    BYTE PTR [rcx+0x0],al
   14000be58:	cmp    eax,DWORD PTR [rax]
   14000be5a:	cmp    eax,DWORD PTR [rax]
   14000be5c:	xor    BYTE PTR [rax],al
   14000be5e:	js     0x14000be60
   14000be60:	xor    BYTE PTR [rax],al
   14000be62:	xor    BYTE PTR [rax],al
   14000be64:	xor    DWORD PTR [rax],eax
   14000be66:	rex.RX add BYTE PTR [rax],r14b
   14000be69:	add    BYTE PTR [rax],dh
   14000be6b:	add    BYTE PTR [rax],dh
   14000be6d:	add    BYTE PTR [rbx],dh
   14000be6f:	add    BYTE PTR [rbx],bh
   14000be71:	add    BYTE PTR [rbx],bh
   14000be73:	add    BYTE PTR [rbx],bh
   14000be75:	add    BYTE PTR [rcx+0x0],al
   14000be78:	rex.XB add BYTE PTR [r9],bpl
   14000be7b:	add    BYTE PTR [rax],al
   14000be7d:	add    BYTE PTR [rax],al
   14000be7f:	add    BYTE PTR [rdx],ah
   14000be81:	add    eax,0x41993
   14000be86:	add    BYTE PTR [rax],al
   14000be88:	sub    al,0xf7
   14000be8a:	add    BYTE PTR [rax],al
   14000be8c:	add    al,BYTE PTR [rax]
   14000be8e:	add    BYTE PTR [rax],al
   14000be90:	rex.WR test QWORD PTR [rax],0x800
   14000be97:	add    BYTE PTR [rax+0x200000f7],ah
   14000be9d:	add    BYTE PTR [rax],al
   14000be9f:	add    BYTE PTR [rax],al
   14000bea1:	add    BYTE PTR [rax],al
   14000bea3:	add    BYTE PTR [rcx],al
   14000bea5:	add    BYTE PTR [rax],al
   14000bea7:	add    BYTE PTR [rax+0x1400041],ah
   14000bead:	add    BYTE PTR [rax],al
   14000beaf:	add    BYTE PTR [rax+0x51],al
   14000beb2:	add    BYTE PTR [rax+0x1],al
   14000beb5:	add    BYTE PTR [rax],al
   14000beb7:	add    BYTE PTR [rdx+0x61],ah
   14000beba:	and    BYTE PTR fs:[rcx+0x6c],ah
   14000bebe:	ins    BYTE PTR es:[rdi],dx
   14000bebf:	outs   dx,DWORD PTR ds:[rsi]
   14000bec0:	movsxd esp,DWORD PTR [rcx+0x74]
   14000bec3:	imul   ebp,DWORD PTR [rdi+0x6e],0x41e00000
   14000beca:	add    BYTE PTR [rax+0x1],al
   14000becd:	add    BYTE PTR [rax],al
   14000becf:	add    BYTE PTR [rax+0x51],al
   14000bed2:	add    BYTE PTR [rax+0x1],al
   14000bed5:	add    BYTE PTR [rax],al
   14000bed7:	add    BYTE PTR [rax+0x41],dh
   14000beda:	add    BYTE PTR [rax+0x1],al
   14000bedd:	add    BYTE PTR [rax],al
   14000bedf:	add    al,al
   14000bee1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000bee5:	add    BYTE PTR [rax],al
   14000bee7:	add    al,al
   14000bee9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000beed:	add    BYTE PTR [rax],al
   14000beef:	add    BYTE PTR [rax+0x1400046],ah
   14000bef5:	add    BYTE PTR [rax],al
   14000bef7:	add    al,al
   14000bef9:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000befd:	add    BYTE PTR [rax],al
   14000beff:	add    al,ah
   14000bf01:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000bf05:	add    BYTE PTR [rax],al
   14000bf07:	add    BYTE PTR [rax+0x41],dh
   14000bf0a:	add    BYTE PTR [rax+0x1],al
   14000bf0d:	add    BYTE PTR [rax],al
   14000bf0f:	add    BYTE PTR [rax],ah
   14000bf11:	rex.WB add BYTE PTR [r8+0x1],al
   14000bf15:	add    BYTE PTR [rax],al
   14000bf17:	add    al,dh
   14000bf19:	rex.RXB add BYTE PTR [r8+0x1],r8b
   14000bf1d:	add    BYTE PTR [rax],al
   14000bf1f:	add    BYTE PTR [rax+0x1400046],ah
   14000bf25:	add    BYTE PTR [rax],al
   14000bf27:	add    al,al
   14000bf29:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000bf2d:	add    BYTE PTR [rax],al
   14000bf2f:	add    al,ah
   14000bf31:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000bf35:	add    BYTE PTR [rax],al
   14000bf37:	add    BYTE PTR [rdi+0x65],ah
   14000bf3a:	outs   dx,BYTE PTR ds:[rsi]
   14000bf3b:	gs jb  0x14000bfa7
   14000bf3e:	movsxd eax,DWORD PTR [rax]
   14000bf40:	jne    0x14000bfb0
   14000bf42:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000bf46:	outs   dx,BYTE PTR ds:[rsi]
   14000bf47:	and    BYTE PTR [rbp+0x72],ah
   14000bf4a:	jb     0x14000bfbb
   14000bf4c:	jb     0x14000bf4e
   14000bf4e:	add    BYTE PTR [rax],al
   14000bf50:	jo     0x14000bf93
   14000bf52:	add    BYTE PTR [rax+0x1],al
   14000bf55:	add    BYTE PTR [rax],al
   14000bf57:	add    BYTE PTR [rax],dh
   14000bf59:	rex.WB add BYTE PTR [r8+0x1],al
   14000bf5d:	add    BYTE PTR [rax],al
   14000bf5f:	add    BYTE PTR [rax+0x48],ah
   14000bf62:	add    BYTE PTR [rax+0x1],al
   14000bf65:	add    BYTE PTR [rax],al
   14000bf67:	add    BYTE PTR [rax+0x1400046],ah
   14000bf6d:	add    BYTE PTR [rax],al
   14000bf6f:	add    al,al
   14000bf71:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000bf75:	add    BYTE PTR [rax],al
   14000bf77:	add    al,ah
   14000bf79:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000bf7d:	add    BYTE PTR [rax],al
   14000bf7f:	add    BYTE PTR [rcx+0x6f],ch
   14000bf82:	jae    0x14000bff8
   14000bf84:	jb     0x14000bfeb
   14000bf86:	(bad)  
   14000bf87:	ins    DWORD PTR es:[rdi],dx
	...
   14000bf90:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000bf97:	ins    DWORD PTR es:[rdi],dx
   14000bf98:	and    BYTE PTR [rbx+0x74],dh
   14000bf9b:	jb     0x14000c002
   14000bf9d:	(bad)  
   14000bf9e:	ins    DWORD PTR es:[rdi],dx
   14000bf9f:	and    BYTE PTR [rbp+0x72],ah
   14000bfa2:	jb     0x14000c013
   14000bfa4:	jb     0x14000bfa6
   14000bfa6:	add    BYTE PTR [rax],al
   14000bfa8:	jo     0x14000bfeb
   14000bfaa:	add    BYTE PTR [rax+0x1],al
   14000bfad:	add    BYTE PTR [rax],al
   14000bfaf:	add    BYTE PTR [rax+0x49],al
   14000bfb2:	add    BYTE PTR [rax+0x1],al
   14000bfb5:	add    BYTE PTR [rax],al
   14000bfb7:	add    BYTE PTR [rax+0x1400048],dh
   14000bfbd:	add    BYTE PTR [rax],al
   14000bfbf:	add    BYTE PTR [rax+0x46],dl
   14000bfc2:	add    BYTE PTR [rax+0x1],al
   14000bfc5:	add    BYTE PTR [rax],al
   14000bfc7:	add    al,al
   14000bfc9:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000bfcd:	add    BYTE PTR [rax],al
   14000bfcf:	add    al,ah
   14000bfd1:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000bfd5:	add    BYTE PTR [rax],al
   14000bfd7:	add    BYTE PTR [rbx+0x79],dh
   14000bfda:	jae    0x14000c050
   14000bfdc:	gs ins DWORD PTR es:[rdi],dx
   14000bfde:	add    BYTE PTR [rax],al
   14000bfe0:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14000bfe7:	and    BYTE PTR [rbx+0x74],dh
   14000bfea:	jb     0x14000c055
   14000bfec:	outs   dx,BYTE PTR ds:[rsi]
   14000bfed:	and    BYTE PTR [eax+0x6f],dh
   14000bff1:	jae    0x14000c05c
   14000bff3:	je     0x14000c05e
   14000bff5:	outs   dx,DWORD PTR ds:[rsi]
   14000bff6:	outs   dx,BYTE PTR ds:[rsi]
   14000bff7:	add    BYTE PTR [rbx+0x74],dh
   14000bffa:	jb     0x14000c065
   14000bffc:	outs   dx,BYTE PTR ds:[rsi]
   14000bffd:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14000c002:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000c006:	add    BYTE PTR [eax],al
   14000c009:	add    BYTE PTR [rax],al
   14000c00b:	add    BYTE PTR [rax],al
   14000c00d:	add    BYTE PTR [rax],al
   14000c00f:	add    BYTE PTR [rip+0x0],al        # 0x14000c015
   14000c015:	add    BYTE PTR [rax],al
   14000c017:	add    al,al
   14000c019:	(bad)  
   14000c01a:	add    BYTE PTR [rax+0x1],al
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rdi+0x0],dh
   14000c025:	add    BYTE PTR [rax],al
   14000c027:	add    al,bl
   14000c029:	(bad)  
   14000c02a:	add    BYTE PTR [rax+0x1],al
   14000c02d:	add    BYTE PTR [rax],al
   14000c02f:	add    BYTE PTR [rax+rax*1],dl
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	add    BYTE PTR [rax],al
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	call   0x14140c101
   14000c03d:	add    BYTE PTR [rax],al
   14000c03f:	add    BYTE PTR [rdi+0x0],ch
   14000c042:	add    BYTE PTR [rax],al
   14000c044:	add    BYTE PTR [rax],al
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	clc    
   14000c049:	(bad)  
   14000c04a:	add    BYTE PTR [rax+0x1],al
   14000c04d:	add    BYTE PTR [rax],al
   14000c04f:	add    BYTE PTR [rdx+0x0],ch
   14000c055:	add    BYTE PTR [rax],al
   14000c057:	add    BYTE PTR [rax],dl
   14000c059:	(bad)
   14000c05c:	add    DWORD PTR [rax],eax
   14000c05e:	add    BYTE PTR [rax],al
   14000c060:	mov    es,WORD PTR [rax]
   14000c062:	add    BYTE PTR [rax],al
   14000c064:	add    BYTE PTR [rax],al
   14000c066:	add    BYTE PTR [rax],al
   14000c068:	adc    ch,al
   14000c06a:	add    BYTE PTR [rax+0x1],al
   14000c06d:	add    BYTE PTR [rax],al
   14000c06f:	add    BYTE PTR [rdx+0x0],dl
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	add    BYTE PTR [rax],al
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	rol    ah,0x0
   14000c07b:	rex add DWORD PTR [rax],eax
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	repz add eax,DWORD PTR [rax]
   14000c083:	add    BYTE PTR [rax],al
   14000c085:	add    BYTE PTR [rax],al
   14000c087:	add    BYTE PTR [rax],ch
   14000c089:	(bad)
   14000c08c:	add    DWORD PTR [rax],eax
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	hlt    
   14000c091:	add    eax,DWORD PTR [rax]
   14000c093:	add    BYTE PTR [rax],al
   14000c095:	add    BYTE PTR [rax],al
   14000c097:	add    BYTE PTR [rax],ch
   14000c099:	(bad)
   14000c09c:	add    DWORD PTR [rax],eax
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	cmc    
   14000c0a1:	add    eax,DWORD PTR [rax]
   14000c0a3:	add    BYTE PTR [rax],al
   14000c0a5:	add    BYTE PTR [rax],al
   14000c0a7:	add    BYTE PTR [rax],ch
   14000c0a9:	(bad)
   14000c0ac:	add    DWORD PTR [rax],eax
   14000c0ae:	add    BYTE PTR [rax],al
   14000c0b0:	adc    BYTE PTR [rax],al
   14000c0b2:	add    BYTE PTR [rax],al
   14000c0b4:	add    BYTE PTR [rax],al
   14000c0b6:	add    BYTE PTR [rax],al
   14000c0b8:	rol    ah,0x0
   14000c0bb:	rex add DWORD PTR [rax],eax
   14000c0be:	add    BYTE PTR [rax],al
   14000c0c0:	(bad)  
   14000c0c1:	add    BYTE PTR [rax],al
   14000c0c3:	add    BYTE PTR [rax],al
   14000c0c5:	add    BYTE PTR [rax],al
   14000c0c7:	add    al,ch
   14000c0c9:	(bad)  
   14000c0ca:	add    BYTE PTR [rax+0x1],al
   14000c0cd:	add    BYTE PTR [rax],al
   14000c0cf:	add    BYTE PTR [rcx+rcx*1+0x0],ah
   14000c0d3:	add    BYTE PTR [rax],al
   14000c0d5:	add    BYTE PTR [rax],al
   14000c0d7:	add    BYTE PTR [rax],dl
   14000c0d9:	(bad)
   14000c0dc:	add    DWORD PTR [rax],eax
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	xchg   ecx,eax
   14000c0e1:	add    BYTE PTR [rax],al
   14000c0e3:	add    BYTE PTR [rax],al
   14000c0e5:	add    BYTE PTR [rax],al
   14000c0e7:	add    BYTE PTR [rax],bh
   14000c0e9:	(bad)
   14000c0ec:	add    DWORD PTR [rax],eax
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	or     eax,DWORD PTR [rcx]
   14000c0f2:	add    BYTE PTR [rax],al
   14000c0f4:	add    BYTE PTR [rax],al
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	push   rax
   14000c0f9:	(bad)
   14000c0fc:	add    DWORD PTR [rax],eax
   14000c0fe:	add    BYTE PTR [rax],al
   14000c100:	jo     0x14000c102
   14000c102:	add    BYTE PTR [rax],al
   14000c104:	add    BYTE PTR [rax],al
   14000c106:	add    BYTE PTR [rax],al
   14000c108:	push   0x14000c5
   14000c10d:	add    BYTE PTR [rax],al
   14000c10f:	add    BYTE PTR [rax+0x0],dl
   14000c112:	add    BYTE PTR [rax],al
   14000c114:	add    BYTE PTR [rax],al
   14000c116:	add    BYTE PTR [rax],al
   14000c118:	fadd   st,st(4)
   14000c11a:	add    BYTE PTR [rax+0x1],al
   14000c11d:	add    BYTE PTR [rax],al
   14000c11f:	add    BYTE PTR [rdx],al
   14000c121:	add    BYTE PTR [rax],al
   14000c123:	add    BYTE PTR [rax],al
   14000c125:	add    BYTE PTR [rax],al
   14000c127:	add    BYTE PTR [rax+0x14000c5],al
   14000c12d:	add    BYTE PTR [rax],al
   14000c12f:	add    BYTE PTR [rdi],ah
   14000c131:	add    BYTE PTR [rax],al
   14000c133:	add    BYTE PTR [rax],al
   14000c135:	add    BYTE PTR [rax],al
   14000c137:	add    BYTE PTR [rax-0x3b],ch
   14000c13a:	add    BYTE PTR [rax+0x1],al
   14000c13d:	add    BYTE PTR [rax],al
   14000c13f:	add    BYTE PTR [rax+rax*1],cl
   14000c142:	add    BYTE PTR [rax],al
   14000c144:	add    BYTE PTR [rax],al
   14000c146:	add    BYTE PTR [rax],al
   14000c148:	rol    ah,0x0
   14000c14b:	rex add DWORD PTR [rax],eax
   14000c14e:	add    BYTE PTR [rax],al
   14000c150:	sldt   WORD PTR [rax]
   14000c153:	add    BYTE PTR [rax],al
   14000c155:	add    BYTE PTR [rax],al
   14000c157:	add    al,ch
   14000c159:	(bad)  
   14000c15a:	add    BYTE PTR [rax+0x1],al
   14000c15d:	add    BYTE PTR [rax],al
   14000c15f:	add    BYTE PTR [rcx],al
   14000c161:	add    BYTE PTR [rax],al
   14000c163:	add    BYTE PTR [rax],al
   14000c165:	add    BYTE PTR [rax],al
   14000c167:	add    BYTE PTR [rax+0x14000c5],ah
   14000c16d:	add    BYTE PTR [rax],al
   14000c16f:	add    BYTE PTR [rsi],al
   14000c171:	add    BYTE PTR [rax],al
   14000c173:	add    BYTE PTR [rax],al
   14000c175:	add    BYTE PTR [rax],al
   14000c177:	add    BYTE PTR [rax-0x3b],dl
   14000c17a:	add    BYTE PTR [rax+0x1],al
   14000c17d:	add    BYTE PTR [rax],al
   14000c17f:	add    BYTE PTR [rbx+0x0],bh
   14000c182:	add    BYTE PTR [rax],al
   14000c184:	add    BYTE PTR [rax],al
   14000c186:	add    BYTE PTR [rax],al
   14000c188:	push   rax
   14000c189:	(bad)
   14000c18c:	add    DWORD PTR [rax],eax
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	and    DWORD PTR [rax],eax
   14000c192:	add    BYTE PTR [rax],al
   14000c194:	add    BYTE PTR [rax],al
   14000c196:	add    BYTE PTR [rax],al
   14000c198:	mov    eax,0x14000c5
   14000c19d:	add    BYTE PTR [rax],al
   14000c19f:	add    ah,dl
   14000c1a1:	add    BYTE PTR [rax],al
   14000c1a3:	add    BYTE PTR [rax],al
   14000c1a5:	add    BYTE PTR [rax],al
   14000c1a7:	add    BYTE PTR [rax+0x14000c5],bh
   14000c1ad:	add    BYTE PTR [rax],al
   14000c1af:	add    BYTE PTR [rbx+0x0],al
   14000c1b5:	add    BYTE PTR [rax],al
   14000c1b7:	add    BYTE PTR [rax-0x3b],dl
   14000c1ba:	add    BYTE PTR [rax+0x1],al
   14000c1bd:	add    BYTE PTR [rax],al
   14000c1bf:	add    dh,ah
   14000c1c1:	add    eax,DWORD PTR [rax]
   14000c1c3:	add    BYTE PTR [rax],al
   14000c1c5:	add    BYTE PTR [rax],al
   14000c1c7:	add    al,al
   14000c1c9:	(bad)  
   14000c1ca:	add    BYTE PTR [rax+0x1],al
   14000c1cd:	add    BYTE PTR [rax],al
   14000c1cf:	add    BYTE PTR [rax],cl
   14000c1d1:	add    BYTE PTR [rax],al
   14000c1d3:	add    BYTE PTR [rax],al
   14000c1d5:	add    BYTE PTR [rax],al
   14000c1d7:	add    al,dl
   14000c1d9:	(bad)
   14000c1dc:	add    DWORD PTR [rax],eax
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	adc    eax,0x0
   14000c1e5:	add    BYTE PTR [rax],al
   14000c1e7:	add    al,ch
   14000c1e9:	(bad)
   14000c1ec:	add    DWORD PTR [rax],eax
   14000c1ee:	add    BYTE PTR [rax],al
   14000c1f0:	adc    DWORD PTR [rax],eax
   14000c1f2:	add    BYTE PTR [rax],al
   14000c1f4:	add    BYTE PTR [rax],al
   14000c1f6:	add    BYTE PTR [rax],al
   14000c1f8:	or     dh,al
   14000c1fa:	add    BYTE PTR [rax+0x1],al
   14000c1fd:	add    BYTE PTR [rax],al
   14000c1ff:	add    BYTE PTR [rsi+0x0],ch
   14000c202:	add    BYTE PTR [rax],al
   14000c204:	add    BYTE PTR [rax],al
   14000c206:	add    BYTE PTR [rax],al
   14000c208:	sub    ch,al
   14000c20a:	add    BYTE PTR [rax+0x1],al
   14000c20d:	add    BYTE PTR [rax],al
   14000c20f:	add    BYTE PTR [rcx+0x9],ah
   14000c212:	add    BYTE PTR [rax],al
   14000c214:	add    BYTE PTR [rax],al
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	adc    ch,al
   14000c21a:	add    BYTE PTR [rax+0x1],al
   14000c21d:	add    BYTE PTR [rax],al
   14000c21f:	add    bl,ah
   14000c221:	add    eax,DWORD PTR [rax]
   14000c223:	add    BYTE PTR [rax],al
   14000c225:	add    BYTE PTR [rax],al
   14000c227:	add    BYTE PTR [rax],ah
   14000c229:	mov    BYTE PTR [rax],0x40
   14000c22c:	add    DWORD PTR [rax],eax
   14000c22e:	add    BYTE PTR [rax],al
   14000c230:	(bad)  
   14000c231:	add    BYTE PTR [rax],al
   14000c233:	add    BYTE PTR [rax],al
   14000c235:	add    BYTE PTR [rax],al
   14000c237:	add    al,dl
   14000c239:	(bad)
   14000c23c:	add    DWORD PTR [rax],eax
   14000c23e:	add    BYTE PTR [rax],al
   14000c240:	add    eax,DWORD PTR [rax]
   14000c242:	add    BYTE PTR [rax],al
   14000c244:	add    BYTE PTR [rax],al
   14000c246:	add    BYTE PTR [rax],al
   14000c248:	add    ch,0x0
   14000c24b:	rex add DWORD PTR [rax],eax
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	(bad)  
   14000c251:	add    BYTE PTR [rax],al
   14000c253:	add    BYTE PTR [rax],al
   14000c255:	add    BYTE PTR [rax],al
   14000c257:	add    BYTE PTR [rax],ch
   14000c259:	(bad)
   14000c25c:	add    DWORD PTR [rax],eax
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	(bad)  
   14000c261:	add    al,0x0
   14000c263:	add    BYTE PTR [rax],al
   14000c265:	add    BYTE PTR [rax],al
   14000c267:	add    al,ch
   14000c269:	(bad)
   14000c26c:	add    DWORD PTR [rax],eax
   14000c26e:	add    BYTE PTR [rax],al
   14000c270:	sbb    DWORD PTR [rax],eax
   14000c272:	add    BYTE PTR [rax],al
   14000c274:	add    BYTE PTR [rax],al
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	sub    ch,al
   14000c27a:	add    BYTE PTR [rax+0x1],al
   14000c27d:	add    BYTE PTR [rax],al
   14000c27f:	add    BYTE PTR [rax],ah
   14000c281:	add    BYTE PTR [rax],al
   14000c283:	add    BYTE PTR [rax],al
   14000c285:	add    BYTE PTR [rax],al
   14000c287:	add    al,al
   14000c289:	(bad)  
   14000c28a:	add    BYTE PTR [rax+0x1],al
   14000c28d:	add    BYTE PTR [rax],al
   14000c28f:	add    BYTE PTR [rax+rax*1],al
   14000c292:	add    BYTE PTR [rax],al
   14000c294:	add    BYTE PTR [rax],al
   14000c296:	add    BYTE PTR [rax],al
   14000c298:	cmp    dh,al
   14000c29a:	add    BYTE PTR [rax+0x1],al
   14000c29d:	add    BYTE PTR [rax],al
   14000c29f:	add    BYTE PTR [rip+0x0],bl        # 0x14000c2a5
   14000c2a5:	add    BYTE PTR [rax],al
   14000c2a7:	add    BYTE PTR [rax],ch
   14000c2a9:	(bad)
   14000c2ac:	add    DWORD PTR [rax],eax
   14000c2ae:	add    BYTE PTR [rax],al
   14000c2b0:	adc    eax,DWORD PTR [rax]
   14000c2b2:	add    BYTE PTR [rax],al
   14000c2b4:	add    BYTE PTR [rax],al
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	rol    ah,0x0
   14000c2bb:	rex add DWORD PTR [rax],eax
   14000c2be:	add    BYTE PTR [rax],al
   14000c2c0:	sbb    eax,0x27
   14000c2c5:	add    BYTE PTR [rax],al
   14000c2c7:	add    BYTE PTR [rax-0x3a],dl
   14000c2ca:	add    BYTE PTR [rax+0x1],al
   14000c2cd:	add    BYTE PTR [rax],al
   14000c2cf:	add    BYTE PTR [rax+0x27],al
   14000c2d2:	add    BYTE PTR [rax],al
   14000c2d4:	add    BYTE PTR [rax],al
   14000c2d6:	add    BYTE PTR [rax],al
   14000c2d8:	push   0x14000c6
   14000c2dd:	add    BYTE PTR [rax],al
   14000c2df:	add    BYTE PTR [rcx+0x27],al
   14000c2e2:	add    BYTE PTR [rax],al
   14000c2e4:	add    BYTE PTR [rax],al
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	js     0x14000c2b0
   14000c2ea:	add    BYTE PTR [rax+0x1],al
   14000c2ed:	add    BYTE PTR [rax],al
   14000c2ef:	add    BYTE PTR [rdi],bh
   14000c2f1:	(bad)  
   14000c2f2:	add    BYTE PTR [rax],al
   14000c2f4:	add    BYTE PTR [rax],al
   14000c2f6:	add    BYTE PTR [rax],al
   14000c2f8:	nop
   14000c2f9:	mov    BYTE PTR [rax],0x40
   14000c2fc:	add    DWORD PTR [rax],eax
   14000c2fe:	add    BYTE PTR [rax],al
   14000c300:	xor    eax,0x27
   14000c305:	add    BYTE PTR [rax],al
   14000c307:	add    BYTE PTR [rax+0x14000c6],dh
   14000c30d:	add    BYTE PTR [rax],al
   14000c30f:	add    BYTE PTR [rcx],bl
   14000c311:	(bad)  
   14000c312:	add    BYTE PTR [rax],al
   14000c314:	add    BYTE PTR [rax],al
   14000c316:	add    BYTE PTR [rax],al
   14000c318:	rol    dh,1
   14000c31a:	add    BYTE PTR [rax+0x1],al
   14000c31d:	add    BYTE PTR [rax],al
   14000c31f:	add    BYTE PTR [rbp+0x27],al
   14000c322:	add    BYTE PTR [rax],al
   14000c324:	add    BYTE PTR [rax],al
   14000c326:	add    BYTE PTR [rax],al
   14000c328:	call   0x14140c3f3
   14000c32d:	add    BYTE PTR [rax],al
   14000c32f:	add    BYTE PTR [rbp+0x27],cl
   14000c332:	add    BYTE PTR [rax],al
   14000c334:	add    BYTE PTR [rax],al
   14000c336:	add    BYTE PTR [rax],al
   14000c338:	add    bh,al
   14000c33a:	add    BYTE PTR [rax+0x1],al
   14000c33d:	add    BYTE PTR [rax],al
   14000c33f:	add    BYTE PTR [rsi+0x27],al
   14000c342:	add    BYTE PTR [rax],al
   14000c344:	add    BYTE PTR [rax],al
   14000c346:	add    BYTE PTR [rax],al
   14000c348:	sbb    bh,al
   14000c34a:	add    BYTE PTR [rax+0x1],al
   14000c34d:	add    BYTE PTR [rax],al
   14000c34f:	add    BYTE PTR [rdi],dh
   14000c351:	(bad)  
   14000c352:	add    BYTE PTR [rax],al
   14000c354:	add    BYTE PTR [rax],al
   14000c356:	add    BYTE PTR [rax],al
   14000c358:	xor    bh,al
   14000c35a:	add    BYTE PTR [rax+0x1],al
   14000c35d:	add    BYTE PTR [rax],al
   14000c35f:	add    BYTE PTR [rsi],bl
   14000c361:	(bad)  
   14000c362:	add    BYTE PTR [rax],al
   14000c364:	add    BYTE PTR [rax],al
   14000c366:	add    BYTE PTR [rax],al
   14000c368:	push   rax
   14000c369:	mov    DWORD PTR [rax],0x140
   14000c36f:	add    BYTE PTR [rcx+0x27],dl
   14000c372:	add    BYTE PTR [rax],al
   14000c374:	add    BYTE PTR [rax],al
   14000c376:	add    BYTE PTR [rax],al
   14000c378:	(bad)  
   14000c379:	mov    DWORD PTR [rax],0x140
   14000c37f:	add    BYTE PTR [rdi+riz*1],dh
   14000c382:	add    BYTE PTR [rax],al
   14000c384:	add    BYTE PTR [rax],al
   14000c386:	add    BYTE PTR [rax],al
   14000c388:	js     0x14000c351
   14000c38a:	add    BYTE PTR [rax+0x1],al
   14000c38d:	add    BYTE PTR [rax],al
   14000c38f:	add    BYTE PTR [rdi+riz*1],dl
   14000c392:	add    BYTE PTR [rax],al
   14000c394:	add    BYTE PTR [rax],al
   14000c396:	add    BYTE PTR [rax],al
   14000c398:	nop
   14000c399:	mov    DWORD PTR [rax],0x140
   14000c39f:	add    BYTE PTR [rsi],ah
   14000c3a1:	(bad)  
   14000c3a2:	add    BYTE PTR [rax],al
   14000c3a4:	add    BYTE PTR [rax],al
   14000c3a6:	add    BYTE PTR [rax],al
   14000c3a8:	movabs al,ds:0x48000000014000c7
   14000c3b1:	(bad)  
   14000c3b2:	add    BYTE PTR [rax],al
   14000c3b4:	add    BYTE PTR [rax],al
   14000c3b6:	add    BYTE PTR [rax],al
   14000c3b8:	mov    eax,0x14000c7
   14000c3bd:	add    BYTE PTR [rax],al
   14000c3bf:	add    BYTE PTR [rax],ch
   14000c3c1:	(bad)  
   14000c3c2:	add    BYTE PTR [rax],al
   14000c3c4:	add    BYTE PTR [rax],al
   14000c3c6:	add    BYTE PTR [rax],al
   14000c3c8:	rol    bh,1
   14000c3ca:	add    BYTE PTR [rax+0x1],al
   14000c3cd:	add    BYTE PTR [rax],al
   14000c3cf:	add    BYTE PTR [rax],bh
   14000c3d1:	(bad)  
   14000c3d2:	add    BYTE PTR [rax],al
   14000c3d4:	add    BYTE PTR [rax],al
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	call   0x14140c4a4
   14000c3dd:	add    BYTE PTR [rax],al
   14000c3df:	add    BYTE PTR [rdi+0x27],cl
   14000c3e2:	add    BYTE PTR [rax],al
   14000c3e4:	add    BYTE PTR [rax],al
   14000c3e6:	add    BYTE PTR [rax],al
   14000c3e8:	clc    
   14000c3e9:	mov    DWORD PTR [rax],0x140
   14000c3ef:	add    BYTE PTR [rdx+0x27],al
   14000c3f2:	add    BYTE PTR [rax],al
   14000c3f4:	add    BYTE PTR [rax],al
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	adc    al,cl
   14000c3fa:	add    BYTE PTR [rax+0x1],al
   14000c3fd:	add    BYTE PTR [rax],al
   14000c3ff:	add    BYTE PTR [rdi+riz*1+0x0],al
   14000c403:	add    BYTE PTR [rax],al
   14000c405:	add    BYTE PTR [rax],al
   14000c407:	add    BYTE PTR [rax],ah
   14000c409:	enter  0x4000,0x1
   14000c40d:	add    BYTE PTR [rax],al
   14000c40f:	add    BYTE PTR [rbx+0x27],al
   14000c412:	add    BYTE PTR [rax],al
   14000c414:	add    BYTE PTR [rax],al
   14000c416:	add    BYTE PTR [rax],al
   14000c418:	xor    al,cl
   14000c41a:	add    BYTE PTR [rax+0x1],al
   14000c41d:	add    BYTE PTR [rax],al
   14000c41f:	add    BYTE PTR [rdi+0x27],al
   14000c422:	add    BYTE PTR [rax],al
   14000c424:	add    BYTE PTR [rax],al
   14000c426:	add    BYTE PTR [rax],al
   14000c428:	rex.W enter 0x4000,0x1
   14000c42d:	add    BYTE PTR [rax],al
   14000c42f:	add    BYTE PTR [rdx],bh
   14000c431:	(bad)  
   14000c432:	add    BYTE PTR [rax],al
   14000c434:	add    BYTE PTR [rax],al
   14000c436:	add    BYTE PTR [rax],al
   14000c438:	pop    rax
   14000c439:	enter  0x4000,0x1
   14000c43d:	add    BYTE PTR [rax],al
   14000c43f:	add    BYTE PTR [rcx+0x27],cl
   14000c442:	add    BYTE PTR [rax],al
   14000c444:	add    BYTE PTR [rax],al
   14000c446:	add    BYTE PTR [rax],al
   14000c448:	jo     0x14000c412
   14000c44a:	add    BYTE PTR [rax+0x1],al
   14000c44d:	add    BYTE PTR [rax],al
   14000c44f:	add    BYTE PTR [rsi],dh
   14000c451:	(bad)  
   14000c452:	add    BYTE PTR [rax],al
   14000c454:	add    BYTE PTR [rax],al
   14000c456:	add    BYTE PTR [rax],al
   14000c458:	or     al,0x0
   14000c45b:	rex add DWORD PTR [rax],eax
   14000c45e:	add    BYTE PTR [rax],al
   14000c460:	cmp    eax,0x27
   14000c465:	add    BYTE PTR [rax],al
   14000c467:	add    BYTE PTR [rax+0x14000c8],dl
   14000c46d:	add    BYTE PTR [rax],al
   14000c46f:	add    BYTE PTR [rbx],bh
   14000c471:	(bad)  
   14000c472:	add    BYTE PTR [rax],al
   14000c474:	add    BYTE PTR [rax],al
   14000c476:	add    BYTE PTR [rax],al
   14000c478:	test   al,0xc8
   14000c47a:	add    BYTE PTR [rax+0x1],al
   14000c47d:	add    BYTE PTR [rax],al
   14000c47f:	add    BYTE PTR [rcx],bh
   14000c481:	(bad)  
   14000c482:	add    BYTE PTR [rax],al
   14000c484:	add    BYTE PTR [rax],al
   14000c486:	add    BYTE PTR [rax],al
   14000c488:	ror    al,0x0
   14000c48b:	rex add DWORD PTR [rax],eax
   14000c48e:	add    BYTE PTR [rax],al
   14000c490:	rex.WR (bad) 
   14000c492:	add    BYTE PTR [rax],al
   14000c494:	add    BYTE PTR [rax],al
   14000c496:	add    BYTE PTR [rax],al
   14000c498:	fmul   st,st(0)
   14000c49a:	add    BYTE PTR [rax+0x1],al
   14000c49d:	add    BYTE PTR [rax],al
   14000c49f:	add    BYTE PTR [rbx],dh
   14000c4a1:	(bad)  
   14000c4a2:	add    BYTE PTR [rax],al
   14000c4a4:	add    BYTE PTR [rax],al
   14000c4a6:	add    BYTE PTR [rax],al
   14000c4a8:	call   0x14140c575
	...
   14000c4bd:	add    BYTE PTR [rax],al
   14000c4bf:	add    BYTE PTR [rax+0x65],dh
   14000c4c2:	jb     0x14000c531
   14000c4c4:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   14000c4cb:	fs outs dx,BYTE PTR gs:[rsi]
   14000c4ce:	imul   esp,DWORD PTR [rbp+0x64],0x0
   14000c4d5:	add    BYTE PTR [rax],al
   14000c4d7:	add    BYTE PTR [rsi+0x69],ah
   14000c4da:	ins    BYTE PTR es:[rdi],dx
   14000c4db:	and    BYTE PTR gs:[rbp+0x78],ah
   14000c4df:	imul   esi,DWORD PTR [rbx+0x74],0x73
   14000c4e6:	add    BYTE PTR [rax],al
   14000c4e8:	outs   dx,BYTE PTR ds:[rsi]
   14000c4e9:	outs   dx,DWORD PTR ds:[rsi]
   14000c4ea:	and    BYTE PTR [rbx+0x75],dh
   14000c4ed:	movsxd ebp,DWORD PTR [rax+0x20]
   14000c4f0:	fs gs jbe 0x14000c55d
   14000c4f4:	movsxd esp,DWORD PTR [rbp+0x0]
   14000c4f7:	add    BYTE PTR [rsi+0x69],ah
   14000c4fa:	ins    BYTE PTR es:[rdi],dx
   14000c4fb:	outs   dx,BYTE PTR gs:[rsi]
   14000c4fd:	(bad)  
   14000c4fe:	ins    DWORD PTR es:[rdi],dx
   14000c4ff:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   14000c504:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000c508:	add    BYTE PTR [eax],al
   14000c50b:	add    BYTE PTR [rax],al
   14000c50d:	add    BYTE PTR [rax],al
   14000c50f:	add    BYTE PTR [rbp+riz*2+0x76],ah
   14000c513:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   14000c51a:	jb     0x14000c581
   14000c51c:	jae    0x14000c58d
   14000c51e:	jne    0x14000c592
   14000c520:	movsxd esp,DWORD PTR [rbp+0x20]
   14000c523:	(bad)  
   14000c524:	jne    0x14000c599
   14000c526:	jns    0x14000c528
   14000c528:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   14000c52f:	jb     0x14000c531
   14000c531:	add    BYTE PTR [rax],al
   14000c533:	add    BYTE PTR [rax],al
   14000c535:	add    BYTE PTR [rax],al
   14000c537:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   14000c53b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000c540:	jns    0x14000c562
   14000c542:	outs   dx,BYTE PTR ds:[rsi]
   14000c543:	outs   dx,DWORD PTR ds:[rsi]
   14000c544:	je     0x14000c566
   14000c546:	gs ins DWORD PTR es:[rdi],dx
   14000c548:	jo     0x14000c5be
   14000c54a:	jns    0x14000c54c
   14000c54c:	add    BYTE PTR [rax],al
   14000c54e:	add    BYTE PTR [rax],al
   14000c550:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14000c557:	and    BYTE PTR [rcx+0x72],ah
   14000c55a:	addr32 jne 0x14000c5ca
   14000c55d:	outs   dx,BYTE PTR gs:[rsi]
   14000c55f:	je     0x14000c561
   14000c561:	add    BYTE PTR [rax],al
   14000c563:	add    BYTE PTR [rax],al
   14000c565:	add    BYTE PTR [rax],al
   14000c567:	add    BYTE PTR [rsi+0x6f],ch
   14000c56a:	and    BYTE PTR [rbx+0x70],dh
   14000c56d:	(bad)  
   14000c56e:	movsxd esp,DWORD PTR [rbp+0x20]
   14000c571:	outs   dx,DWORD PTR ds:[rsi]
   14000c572:	outs   dx,BYTE PTR ds:[rsi]
   14000c573:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14000c577:	imul   esp,DWORD PTR [rbx+0x65],0x0
   14000c57e:	add    BYTE PTR [rax],al
   14000c580:	outs   dx,BYTE PTR ds:[rsi]
   14000c581:	outs   dx,DWORD PTR ds:[rsi]
   14000c582:	and    BYTE PTR [rbx+0x75],dh
   14000c585:	movsxd ebp,DWORD PTR [rax+0x20]
   14000c588:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   14000c58f:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14000c593:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000c598:	jns    0x14000c59a
   14000c59a:	add    BYTE PTR [rax],al
   14000c59c:	add    BYTE PTR [rax],al
   14000c59e:	add    BYTE PTR [rax],al
   14000c5a0:	data16 jne 0x14000c611
   14000c5a3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000c5a7:	outs   dx,BYTE PTR ds:[rsi]
   14000c5a8:	and    BYTE PTR [rsi+0x6f],ch
   14000c5ab:	je     0x14000c5cd
   14000c5ad:	jae    0x14000c624
   14000c5af:	jo     0x14000c621
   14000c5b1:	outs   dx,DWORD PTR ds:[rsi]
   14000c5b2:	jb     0x14000c628
   14000c5b4:	gs add BYTE PTR fs:[rax],al
   14000c5b8:	outs   dx,BYTE PTR ds:[rsi]
   14000c5b9:	outs   dx,DWORD PTR ds:[rsi]
   14000c5ba:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   14000c5be:	imul   esp,DWORD PTR [rax],0x61
   14000c5c1:	jbe    0x14000c624
   14000c5c3:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14000c5cb:	add    BYTE PTR [rax],al
   14000c5cd:	add    BYTE PTR [rax],al
   14000c5cf:	add    BYTE PTR [rsi+0x6f],ch
   14000c5d2:	je     0x14000c5f4
   14000c5d4:	outs   dx,BYTE PTR gs:[rsi]
   14000c5d6:	outs   dx,DWORD PTR ds:[rsi]
   14000c5d7:	jne    0x14000c640
   14000c5d9:	push   0x6d656d20
   14000c5de:	outs   dx,DWORD PTR ds:[rsi]
   14000c5df:	jb     0x14000c65a
   14000c5e1:	add    BYTE PTR [rax],al
   14000c5e3:	add    BYTE PTR [rax],al
   14000c5e5:	add    BYTE PTR [rax],al
   14000c5e7:	add    BYTE PTR [rdx+0x65],dh
   14000c5ea:	jae    0x14000c65b
   14000c5ec:	jne    0x14000c660
   14000c5ee:	movsxd esp,DWORD PTR [rbp+0x20]
   14000c5f1:	jne    0x14000c661
   14000c5f3:	(bad)  
   14000c5f4:	jbe    0x14000c657
   14000c5f6:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   14000c5fe:	jb     0x14000c679
   14000c600:	and    BYTE PTR [rcx+0x67],ah
   14000c603:	(bad)  
   14000c604:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   14000c60b:	jae    0x14000c680
   14000c60d:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14000c611:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   14000c618:	imul   eax,DWORD PTR [rax],0x0
   14000c61b:	add    BYTE PTR [rax],al
   14000c61d:	add    BYTE PTR [rax],al
   14000c61f:	add    BYTE PTR [rdi+0x70],ch
   14000c622:	gs jb  0x14000c686
   14000c625:	je     0x14000c690
   14000c627:	outs   dx,DWORD PTR ds:[rsi]
   14000c628:	outs   dx,BYTE PTR ds:[rsi]
   14000c629:	and    BYTE PTR [rbx+0x61],ah
   14000c62c:	outs   dx,BYTE PTR ds:[rsi]
   14000c62d:	movsxd esp,DWORD PTR [rbp+0x6c]
   14000c630:	gs add BYTE PTR fs:[rax],al
   14000c634:	add    BYTE PTR [rax],al
   14000c636:	add    BYTE PTR [rax],al
   14000c638:	je     0x14000c6a9
   14000c63a:	outs   dx,DWORD PTR ds:[rsi]
   14000c63b:	and    BYTE PTR [rbp+0x61],ch
   14000c63e:	outs   dx,BYTE PTR ds:[rsi]
   14000c63f:	jns    0x14000c661
   14000c641:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   14000c648:	jo     0x14000c6af
   14000c64a:	outs   dx,BYTE PTR ds:[rsi]
   14000c64b:	add    BYTE PTR [rax],al
   14000c64d:	add    BYTE PTR [rax],al
   14000c64f:	add    BYTE PTR [rax+0x65],dh
   14000c652:	jb     0x14000c6c1
   14000c654:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   14000c65b:	fs outs dx,BYTE PTR gs:[rsi]
   14000c65e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   14000c665:	add    BYTE PTR [rax],al
   14000c667:	add    BYTE PTR [rcx+0x64],ah
   14000c66a:	fs jb  0x14000c6d2
   14000c66d:	jae    0x14000c6e2
   14000c66f:	pop    rdi
   14000c670:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   14000c677:	add    BYTE PTR [rcx+0x64],ah
   14000c67a:	fs jb  0x14000c6e2
   14000c67d:	jae    0x14000c6f2
   14000c67f:	pop    rdi
   14000c680:	outs   dx,BYTE PTR ds:[rsi]
   14000c681:	outs   dx,DWORD PTR ds:[rsi]
   14000c682:	je     0x14000c6e3
   14000c684:	(bad)  
   14000c685:	jbe    0x14000c6e8
   14000c687:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14000c68f:	add    BYTE PTR [rcx+0x64],ah
   14000c692:	fs jb  0x14000c6fa
   14000c695:	jae    0x14000c70a
   14000c697:	pop    rdi
   14000c698:	data16 (bad) 
   14000c69a:	ins    DWORD PTR es:[rdi],dx
   14000c69b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   14000c6a3:	jae    0x14000c71a
   14000c6a5:	jo     0x14000c717
   14000c6a7:	outs   dx,DWORD PTR ds:[rsi]
   14000c6a8:	jb     0x14000c71e
   14000c6aa:	gs add BYTE PTR fs:[rax],al
   14000c6ae:	add    BYTE PTR [rax],al
   14000c6b0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000c6b3:	outs   dx,BYTE PTR ds:[rsi]
   14000c6b4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000c6b9:	outs   dx,BYTE PTR ds:[rsi]
   14000c6ba:	pop    rdi
   14000c6bb:	(bad)  
   14000c6bc:	ins    BYTE PTR es:[rdi],dx
   14000c6bd:	jb     0x14000c724
   14000c6bf:	(bad)  
   14000c6c0:	fs jns 0x14000c722
   14000c6c3:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   14000c6ca:	jb     0x14000c731
   14000c6cc:	jae    0x14000c741
   14000c6ce:	add    BYTE PTR [rax],al
   14000c6d0:	(bad)
   14000c6d5:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   14000c6dd:	jb     0x14000c748
   14000c6df:	jo     0x14000c755
   14000c6e1:	outs   dx,DWORD PTR ds:[rsi]
   14000c6e2:	jb     0x14000c6e4
   14000c6e4:	add    BYTE PTR [rax],al
   14000c6e6:	add    BYTE PTR [rax],al
   14000c6e8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000c6eb:	outs   dx,BYTE PTR ds:[rsi]
   14000c6ec:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000c6f1:	outs   dx,BYTE PTR ds:[rsi]
   14000c6f2:	pop    rdi
   14000c6f3:	(bad)  
   14000c6f4:	(bad)  
   14000c6f5:	outs   dx,DWORD PTR ds:[rsi]
   14000c6f6:	jb     0x14000c76c
   14000c6f8:	gs add BYTE PTR fs:[rax],al
   14000c6fc:	add    BYTE PTR [rax],al
   14000c6fe:	add    BYTE PTR [rax],al
   14000c700:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000c703:	outs   dx,BYTE PTR ds:[rsi]
   14000c704:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000c709:	outs   dx,BYTE PTR ds:[rsi]
   14000c70a:	pop    rdi
   14000c70b:	jb     0x14000c772
   14000c70d:	data16 jne 0x14000c783
   14000c710:	gs add BYTE PTR fs:[rax],al
   14000c714:	add    BYTE PTR [rax],al
   14000c716:	add    BYTE PTR [rax],al
   14000c718:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000c71b:	outs   dx,BYTE PTR ds:[rsi]
   14000c71c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000c721:	outs   dx,BYTE PTR ds:[rsi]
   14000c722:	pop    rdi
   14000c723:	jb     0x14000c78a
   14000c725:	jae    0x14000c78c
   14000c727:	je     0x14000c729
   14000c729:	add    BYTE PTR [rax],al
   14000c72b:	add    BYTE PTR [rax],al
   14000c72d:	add    BYTE PTR [rax],al
   14000c72f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   14000c733:	je     0x14000c79e
   14000c735:	outs   dx,BYTE PTR ds:[rsi]
   14000c736:	(bad)  
   14000c737:	je     0x14000c7a2
   14000c739:	outs   dx,DWORD PTR ds:[rsi]
   14000c73a:	outs   dx,BYTE PTR ds:[rsi]
   14000c73b:	pop    rdi
   14000c73c:	(bad)  
   14000c73d:	fs fs jb 0x14000c7a6
   14000c741:	jae    0x14000c7b6
   14000c743:	pop    rdi
   14000c744:	jb     0x14000c7ab
   14000c746:	jno    0x14000c7bd
   14000c748:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14000c74f:	add    BYTE PTR [rdx+0x61],ah
   14000c752:	fs pop rdi
   14000c754:	(bad)  
   14000c755:	fs fs jb 0x14000c7be
   14000c759:	jae    0x14000c7ce
   14000c75b:	add    BYTE PTR [rax],al
   14000c75d:	add    BYTE PTR [rax],al
   14000c75f:	add    BYTE PTR [rax+0x6f],ch
   14000c762:	jae    0x14000c7d8
   14000c764:	pop    rdi
   14000c765:	jne    0x14000c7d5
   14000c767:	jb     0x14000c7ce
   14000c769:	(bad)  
   14000c76a:	movsxd ebp,DWORD PTR [rax+0x61]
   14000c76d:	(bad)  
   14000c76e:	ins    BYTE PTR es:[rdi],dx
   14000c76f:	add    BYTE PTR gs:[rax],al
   14000c772:	add    BYTE PTR [rax],al
   14000c774:	add    BYTE PTR [rax],al
   14000c776:	add    BYTE PTR [rax],al
   14000c778:	outs   dx,DWORD PTR ds:[rsi]
   14000c779:	jo     0x14000c7e0
   14000c77b:	jb     0x14000c7de
   14000c77d:	je     0x14000c7e8
   14000c77f:	outs   dx,DWORD PTR ds:[rsi]
   14000c780:	outs   dx,BYTE PTR ds:[rsi]
   14000c781:	pop    rdi
   14000c782:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   14000c789:	jb     0x14000c7f0
   14000c78b:	jae    0x14000c800
   14000c78d:	add    BYTE PTR [rax],al
   14000c78f:	add    BYTE PTR [rcx+0x6e],ch
   14000c792:	je     0x14000c7f9
   14000c794:	jb     0x14000c808
   14000c796:	jne    0x14000c808
   14000c798:	je     0x14000c7ff
   14000c79a:	add    BYTE PTR fs:[rax],al
   14000c79d:	add    BYTE PTR [rax],al
   14000c79f:	add    BYTE PTR [rcx+0x6e],ch
   14000c7a2:	jbe    0x14000c805
   14000c7a4:	ins    BYTE PTR es:[rdi],dx
   14000c7a5:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   14000c7ad:	outs   dx,BYTE PTR gs:[rsi]
   14000c7af:	je     0x14000c7b1
   14000c7b1:	add    BYTE PTR [rax],al
   14000c7b3:	add    BYTE PTR [rax],al
   14000c7b5:	add    BYTE PTR [rax],al
   14000c7b7:	add    BYTE PTR [rcx+0x6c],ah
   14000c7ba:	jb     0x14000c821
   14000c7bc:	(bad)  
   14000c7bd:	fs jns 0x14000c81f
   14000c7c0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000c7c3:	outs   dx,BYTE PTR ds:[rsi]
   14000c7c4:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000c7c9:	add    BYTE PTR [rax],al
   14000c7cb:	add    BYTE PTR [rax],al
   14000c7cd:	add    BYTE PTR [rax],al
   14000c7cf:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14000c7d3:	pop    rdi
   14000c7d4:	ins    DWORD PTR es:[rdi],dx
   14000c7d5:	(bad)  
   14000c7d6:	outs   dx,BYTE PTR ds:[rsi]
   14000c7d7:	jns    0x14000c838
   14000c7d9:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   14000c7e0:	jo     0x14000c847
   14000c7e2:	outs   dx,BYTE PTR ds:[rsi]
   14000c7e3:	add    BYTE PTR [rax],al
   14000c7e5:	add    BYTE PTR [rax],al
   14000c7e7:	add    BYTE PTR [rbp+0x65],ch
   14000c7ea:	jae    0x14000c85f
   14000c7ec:	(bad)  
   14000c7ed:	addr32 gs pop rdi
   14000c7f0:	jae    0x14000c85b
   14000c7f2:	jp     0x14000c859
   14000c7f4:	add    BYTE PTR [rax],al
   14000c7f6:	add    BYTE PTR [rax],al
   14000c7f8:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   14000c7ff:	gs pop rdi
   14000c801:	je     0x14000c872
   14000c803:	outs   dx,DWORD PTR ds:[rsi]
   14000c804:	pop    rdi
   14000c805:	ins    BYTE PTR es:[rdi],dx
   14000c806:	outs   dx,DWORD PTR ds:[rsi]
   14000c807:	outs   dx,BYTE PTR ds:[rsi]
   14000c808:	add    BYTE PTR [eax],al
   14000c80b:	add    BYTE PTR [rax],al
   14000c80d:	add    BYTE PTR [rax],al
   14000c80f:	add    BYTE PTR [rsi+0x65],ch
   14000c812:	je     0x14000c88b
   14000c814:	outs   dx,DWORD PTR ds:[rsi]
   14000c815:	jb     0x14000c882
   14000c817:	pop    rdi
   14000c818:	outs   dx,DWORD PTR fs:[rsi]
   14000c81a:	ja     0x14000c88a
   14000c81c:	add    BYTE PTR [rax],al
   14000c81e:	add    BYTE PTR [rax],al
   14000c820:	outs   dx,BYTE PTR ds:[rsi]
   14000c821:	gs je  0x14000c89b
   14000c824:	outs   dx,DWORD PTR ds:[rsi]
   14000c825:	jb     0x14000c892
   14000c827:	pop    rdi
   14000c828:	jb     0x14000c88f
   14000c82a:	jae    0x14000c891
   14000c82c:	je     0x14000c82e
   14000c82e:	add    BYTE PTR [rax],al
   14000c830:	outs   dx,BYTE PTR ds:[rsi]
   14000c831:	gs je  0x14000c8ab
   14000c834:	outs   dx,DWORD PTR ds:[rsi]
   14000c835:	jb     0x14000c8a2
   14000c837:	pop    rdi
   14000c838:	jne    0x14000c8a8
   14000c83a:	jb     0x14000c8a1
   14000c83c:	(bad)  
   14000c83d:	movsxd ebp,DWORD PTR [rax+0x61]
   14000c840:	(bad)  
   14000c841:	ins    BYTE PTR es:[rdi],dx
   14000c842:	add    BYTE PTR gs:[rax],al
   14000c845:	add    BYTE PTR [rax],al
   14000c847:	add    BYTE PTR [rsi+0x6f],ch
   14000c84a:	pop    rdi
   14000c84b:	(bad)  
   14000c84c:	jne    0x14000c8b4
   14000c84e:	data16 gs jb 0x14000c8b1
   14000c852:	jae    0x14000c8c4
   14000c854:	(bad)  
   14000c855:	movsxd esp,DWORD PTR [rbp+0x0]
   14000c858:	outs   dx,BYTE PTR ds:[rsi]
   14000c859:	outs   dx,DWORD PTR ds:[rsi]
   14000c85a:	pop    rdi
   14000c85b:	jo     0x14000c8cf
   14000c85d:	outs   dx,DWORD PTR ds:[rsi]
   14000c85e:	je     0x14000c8cf
   14000c860:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000c863:	pop    rdi
   14000c864:	outs   dx,DWORD PTR ds:[rsi]
   14000c865:	jo     0x14000c8db
   14000c867:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000c86e:	add    BYTE PTR [rax],al
   14000c870:	outs   dx,BYTE PTR ds:[rsi]
   14000c871:	outs   dx,DWORD PTR ds:[rsi]
   14000c872:	je     0x14000c8d3
   14000c874:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000c877:	outs   dx,BYTE PTR ds:[rsi]
   14000c878:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000c87d:	add    BYTE PTR [rax],al
   14000c87f:	add    BYTE PTR [rsi+0x6f],ch
   14000c882:	je     0x14000c8e3
   14000c884:	(bad)  
   14000c885:	pop    rdi
   14000c886:	jae    0x14000c8f7
   14000c888:	movsxd ebp,DWORD PTR [rbx+0x65]
   14000c88b:	je     0x14000c88d
   14000c88d:	add    BYTE PTR [rax],al
   14000c88f:	add    BYTE PTR [rdi+0x70],ch
   14000c892:	gs jb  0x14000c8f6
   14000c895:	je     0x14000c900
   14000c897:	outs   dx,DWORD PTR ds:[rsi]
   14000c898:	outs   dx,BYTE PTR ds:[rsi]
   14000c899:	pop    rdi
   14000c89a:	outs   dx,BYTE PTR ds:[rsi]
   14000c89b:	outs   dx,DWORD PTR ds:[rsi]
   14000c89c:	je     0x14000c8fd
   14000c89e:	jae    0x14000c915
   14000c8a0:	jo     0x14000c912
   14000c8a2:	outs   dx,DWORD PTR ds:[rsi]
   14000c8a3:	jb     0x14000c919
   14000c8a5:	gs add BYTE PTR fs:[rax+0x72],dh
   14000c8aa:	outs   dx,DWORD PTR ds:[rsi]
   14000c8ab:	je     0x14000c91c
   14000c8ad:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000c8b0:	pop    rdi
   14000c8b1:	outs   dx,BYTE PTR ds:[rsi]
   14000c8b2:	outs   dx,DWORD PTR ds:[rsi]
   14000c8b3:	je     0x14000c914
   14000c8b5:	jae    0x14000c92c
   14000c8b7:	jo     0x14000c929
   14000c8b9:	outs   dx,DWORD PTR ds:[rsi]
   14000c8ba:	jb     0x14000c930
   14000c8bc:	gs add BYTE PTR fs:[rax],al
   14000c8c0:	ja     0x14000c934
   14000c8c2:	outs   dx,DWORD PTR ds:[rsi]
   14000c8c3:	outs   dx,BYTE PTR ds:[rsi]
   14000c8c4:	addr32 pop rdi
   14000c8c6:	jo     0x14000c93a
   14000c8c8:	outs   dx,DWORD PTR ds:[rsi]
   14000c8c9:	je     0x14000c93a
   14000c8cb:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000c8ce:	pop    rdi
   14000c8cf:	je     0x14000c94a
   14000c8d1:	jo     0x14000c938
   14000c8d3:	add    BYTE PTR [rax],al
   14000c8d5:	add    BYTE PTR [rax],al
   14000c8d7:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   14000c8db:	gs fs pop rdi
   14000c8de:	outs   dx,DWORD PTR ds:[rsi]
   14000c8df:	jne    0x14000c955
   14000c8e1:	add    BYTE PTR [rax],al
   14000c8e3:	add    BYTE PTR [rax],al
   14000c8e5:	add    BYTE PTR [rax],al
   14000c8e7:	add    BYTE PTR [rdi+0x70],ch
   14000c8ea:	gs jb  0x14000c94e
   14000c8ed:	je     0x14000c958
   14000c8ef:	outs   dx,DWORD PTR ds:[rsi]
   14000c8f0:	outs   dx,BYTE PTR ds:[rsi]
   14000c8f1:	pop    rdi
   14000c8f2:	ja     0x14000c963
   14000c8f4:	jne    0x14000c962
   14000c8f6:	fs pop rdi
   14000c8f8:	(bad)  
   14000c8f9:	ins    BYTE PTR es:[rdi],dx
   14000c8fa:	outs   dx,DWORD PTR ds:[rsi]
   14000c8fb:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000c8fe:	add    BYTE PTR [rax],al
   14000c900:	data16 add BYTE PTR [rax],al
   14000c903:	add    BYTE PTR [rax],al
   14000c905:	add    BYTE PTR [rax],al
   14000c907:	add    al,dh
   14000c909:	int    0x0
   14000c90b:	rex add DWORD PTR [rax],eax
   14000c90e:	add    BYTE PTR [rax],al
   14000c910:	add    BYTE PTR fs:[rax],al
   14000c913:	add    BYTE PTR [rax],al
   14000c915:	add    BYTE PTR [rax],al
   14000c917:	add    BYTE PTR [rax],dl
   14000c919:	(bad)  
   14000c91a:	add    BYTE PTR [rax+0x1],al
   14000c91d:	add    BYTE PTR [rax],al
   14000c91f:	add    BYTE PTR [rbp+0x0],ah
   14000c922:	add    BYTE PTR [rax],al
   14000c924:	add    BYTE PTR [rax],al
   14000c926:	add    BYTE PTR [rax],al
   14000c928:	and    dh,cl
   14000c92a:	add    BYTE PTR [rax+0x1],al
   14000c92d:	add    BYTE PTR [rax],al
   14000c92f:	add    BYTE PTR [rcx+0x0],dh
   14000c932:	add    BYTE PTR [rax],al
   14000c934:	add    BYTE PTR [rax],al
   14000c936:	add    BYTE PTR [rax],al
   14000c938:	cmp    dh,cl
   14000c93a:	add    BYTE PTR [rax+0x1],al
   14000c93d:	add    BYTE PTR [rax],al
   14000c93f:	add    BYTE PTR [rdi],al
   14000c941:	add    BYTE PTR [rax],al
   14000c943:	add    BYTE PTR [rax],al
   14000c945:	add    BYTE PTR [rax],al
   14000c947:	add    BYTE PTR [rax-0x32],dl
   14000c94a:	add    BYTE PTR [rax+0x1],al
   14000c94d:	add    BYTE PTR [rax],al
   14000c94f:	add    BYTE PTR [rcx],ah
   14000c951:	add    BYTE PTR [rax],al
   14000c953:	add    BYTE PTR [rax],al
   14000c955:	add    BYTE PTR [rax],al
   14000c957:	add    BYTE PTR [rax-0x32],ch
   14000c95a:	add    BYTE PTR [rax+0x1],al
   14000c95d:	add    BYTE PTR [rax],al
   14000c95f:	add    BYTE PTR [rsi],cl
   14000c961:	add    BYTE PTR [rax],al
   14000c963:	add    BYTE PTR [rax],al
   14000c965:	add    BYTE PTR [rax],al
   14000c967:	add    BYTE PTR [rax+0x14000ce],al
   14000c96d:	add    BYTE PTR [rax],al
   14000c96f:	add    BYTE PTR [rcx],cl
   14000c971:	add    BYTE PTR [rax],al
   14000c973:	add    BYTE PTR [rax],al
   14000c975:	add    BYTE PTR [rax],al
   14000c977:	add    BYTE PTR [rax+0x14000ce],dl
   14000c97d:	add    BYTE PTR [rax],al
   14000c97f:	add    BYTE PTR [rax+0x0],ch
   14000c982:	add    BYTE PTR [rax],al
   14000c984:	add    BYTE PTR [rax],al
   14000c986:	add    BYTE PTR [rax],al
   14000c988:	test   al,0xce
   14000c98a:	add    BYTE PTR [rax+0x1],al
   14000c98d:	add    BYTE PTR [rax],al
   14000c98f:	add    BYTE PTR [rax],ah
   14000c991:	add    BYTE PTR [rax],al
   14000c993:	add    BYTE PTR [rax],al
   14000c995:	add    BYTE PTR [rax],al
   14000c997:	add    BYTE PTR [rax+0x14000ce],bh
   14000c99d:	add    BYTE PTR [rax],al
   14000c99f:	add    BYTE PTR [rdx+0x0],ch
   14000c9a2:	add    BYTE PTR [rax],al
   14000c9a4:	add    BYTE PTR [rax],al
   14000c9a6:	add    BYTE PTR [rax],al
   14000c9a8:	enter  0xce,0x40
   14000c9ac:	add    DWORD PTR [rax],eax
   14000c9ae:	add    BYTE PTR [rax],al
   14000c9b0:	add    BYTE PTR [eax],al
   14000c9b3:	add    BYTE PTR [rax],al
   14000c9b5:	add    BYTE PTR [rax],al
   14000c9b7:	add    al,ah
   14000c9b9:	(bad)  
   14000c9ba:	add    BYTE PTR [rax+0x1],al
   14000c9bd:	add    BYTE PTR [rax],al
   14000c9bf:	add    BYTE PTR [rbx+0x0],ch
   14000c9c2:	add    BYTE PTR [rax],al
   14000c9c4:	add    BYTE PTR [rax],al
   14000c9c6:	add    BYTE PTR [rax],al
   14000c9c8:	add    bh,cl
   14000c9ca:	add    BYTE PTR [rax+0x1],al
   14000c9cd:	add    BYTE PTR [rax],al
   14000c9cf:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000c9d3:	add    BYTE PTR [rax],al
   14000c9d5:	add    BYTE PTR [rax],al
   14000c9d7:	add    BYTE PTR [rax],bl
   14000c9d9:	iret   
   14000c9da:	add    BYTE PTR [rax+0x1],al
   14000c9dd:	add    BYTE PTR [rax],al
   14000c9df:	add    BYTE PTR [rdx],dl
   14000c9e1:	add    BYTE PTR [rax],al
   14000c9e3:	add    BYTE PTR [rax],al
   14000c9e5:	add    BYTE PTR [rax],al
   14000c9e7:	add    BYTE PTR [rax],cl
   14000c9e9:	mov    BYTE PTR [rax],0x40
   14000c9ec:	add    DWORD PTR [rax],eax
   14000c9ee:	add    BYTE PTR [rax],al
   14000c9f0:	ins    DWORD PTR es:[rdi],dx
   14000c9f1:	add    BYTE PTR [rax],al
   14000c9f3:	add    BYTE PTR [rax],al
   14000c9f5:	add    BYTE PTR [rax],al
   14000c9f7:	add    BYTE PTR [rax],dh
   14000c9f9:	iret   
   14000c9fa:	add    BYTE PTR [rax+0x1],al
   14000c9fd:	add    BYTE PTR [rax],al
   14000c9ff:	add    BYTE PTR [rax],dl
   14000ca01:	add    BYTE PTR [rax],al
   14000ca03:	add    BYTE PTR [rax],al
   14000ca05:	add    BYTE PTR [rax],al
   14000ca07:	add    BYTE PTR [rax],dl
   14000ca09:	(bad)
   14000ca0c:	add    DWORD PTR [rax],eax
   14000ca0e:	add    BYTE PTR [rax],al
   14000ca10:	sub    DWORD PTR [rax],eax
   14000ca12:	add    BYTE PTR [rax],al
   14000ca14:	add    BYTE PTR [rax],al
   14000ca16:	add    BYTE PTR [rax],al
   14000ca18:	cmp    ch,al
   14000ca1a:	add    BYTE PTR [rax+0x1],al
   14000ca1d:	add    BYTE PTR [rax],al
   14000ca1f:	add    BYTE PTR [rax],cl
   14000ca21:	add    BYTE PTR [rax],al
   14000ca23:	add    BYTE PTR [rax],al
   14000ca25:	add    BYTE PTR [rax],al
   14000ca27:	add    BYTE PTR [rax-0x31],dl
   14000ca2a:	add    BYTE PTR [rax+0x1],al
   14000ca2d:	add    BYTE PTR [rax],al
   14000ca2f:	add    BYTE PTR [rcx],dl
   14000ca31:	add    BYTE PTR [rax],al
   14000ca33:	add    BYTE PTR [rax],al
   14000ca35:	add    BYTE PTR [rax],al
   14000ca37:	add    al,bl
   14000ca39:	(bad)  
   14000ca3a:	add    BYTE PTR [rax+0x1],al
   14000ca3d:	add    BYTE PTR [rax],al
   14000ca3f:	add    BYTE PTR [rbx],bl
   14000ca41:	add    BYTE PTR [rax],al
   14000ca43:	add    BYTE PTR [rax],al
   14000ca45:	add    BYTE PTR [rax],al
   14000ca47:	add    BYTE PTR [rax-0x31],ch
   14000ca4a:	add    BYTE PTR [rax+0x1],al
   14000ca4d:	add    BYTE PTR [rax],al
   14000ca4f:	add    BYTE PTR [rsi],ah
   14000ca51:	add    BYTE PTR [rax],al
   14000ca53:	add    BYTE PTR [rax],al
   14000ca55:	add    BYTE PTR [rax],al
   14000ca57:	add    al,bh
   14000ca59:	(bad)  
   14000ca5a:	add    BYTE PTR [rax+0x1],al
   14000ca5d:	add    BYTE PTR [rax],al
   14000ca5f:	add    BYTE PTR [rax],ch
   14000ca61:	add    BYTE PTR [rax],al
   14000ca63:	add    BYTE PTR [rax],al
   14000ca65:	add    BYTE PTR [rax],al
   14000ca67:	add    BYTE PTR [rax+0x14000c5],ah
   14000ca6d:	add    BYTE PTR [rax],al
   14000ca6f:	add    BYTE PTR [rsi+0x0],ch
   14000ca72:	add    BYTE PTR [rax],al
   14000ca74:	add    BYTE PTR [rax],al
   14000ca76:	add    BYTE PTR [rax],al
   14000ca78:	js     0x14000ca49
   14000ca7a:	add    BYTE PTR [rax+0x1],al
   14000ca7d:	add    BYTE PTR [rax],al
   14000ca7f:	add    BYTE PTR [rdi+0x0],ch
   14000ca82:	add    BYTE PTR [rax],al
   14000ca84:	add    BYTE PTR [rax],al
   14000ca86:	add    BYTE PTR [rax],al
   14000ca88:	nop
   14000ca89:	iret   
   14000ca8a:	add    BYTE PTR [rax+0x1],al
   14000ca8d:	add    BYTE PTR [rax],al
   14000ca8f:	add    BYTE PTR [rdx],ch
   14000ca91:	add    BYTE PTR [rax],al
   14000ca93:	add    BYTE PTR [rax],al
   14000ca95:	add    BYTE PTR [rax],al
   14000ca97:	add    BYTE PTR [rax+0x14000cf],ch
   14000ca9d:	add    BYTE PTR [rax],al
   14000ca9f:	add    BYTE PTR [rcx],bl
   14000caa1:	add    BYTE PTR [rax],al
   14000caa3:	add    BYTE PTR [rax],al
   14000caa5:	add    BYTE PTR [rax],al
   14000caa7:	add    al,al
   14000caa9:	iret   
   14000caaa:	add    BYTE PTR [rax+0x1],al
   14000caad:	add    BYTE PTR [rax],al
   14000caaf:	add    BYTE PTR [rax+rax*1],al
   14000cab2:	add    BYTE PTR [rax],al
   14000cab4:	add    BYTE PTR [rax],al
   14000cab6:	add    BYTE PTR [rax],al
   14000cab8:	nop
   14000cab9:	mov    DWORD PTR [rax],0x140
   14000cabf:	add    BYTE PTR [rsi],dl
   14000cac1:	add    BYTE PTR [rax],al
   14000cac3:	add    BYTE PTR [rax],al
   14000cac5:	add    BYTE PTR [rax],al
   14000cac7:	add    BYTE PTR [rax-0x3b],dl
   14000caca:	add    BYTE PTR [rax+0x1],al
   14000cacd:	add    BYTE PTR [rax],al
   14000cacf:	add    BYTE PTR [rip+0x0],bl        # 0x14000cad5
   14000cad5:	add    BYTE PTR [rax],al
   14000cad7:	add    al,ch
   14000cad9:	iret   
   14000cada:	add    BYTE PTR [rax+0x1],al
   14000cadd:	add    BYTE PTR [rax],al
   14000cadf:	add    BYTE PTR [rip+0x0],al        # 0x14000cae5
   14000cae5:	add    BYTE PTR [rax],al
   14000cae7:	add    BYTE PTR [rax],ch
   14000cae9:	(bad)
   14000caec:	add    DWORD PTR [rax],eax
   14000caee:	add    BYTE PTR [rax],al
   14000caf0:	adc    eax,0x0
   14000caf5:	add    BYTE PTR [rax],al
   14000caf7:	add    al,bh
   14000caf9:	iret   
   14000cafa:	add    BYTE PTR [rax+0x1],al
   14000cafd:	add    BYTE PTR [rax],al
   14000caff:	add    BYTE PTR [rbx+0x0],dh
   14000cb02:	add    BYTE PTR [rax],al
   14000cb04:	add    BYTE PTR [rax],al
   14000cb06:	add    BYTE PTR [rax],al
   14000cb08:	or     al,dl
   14000cb0a:	add    BYTE PTR [rax+0x1],al
   14000cb0d:	add    BYTE PTR [rax],al
   14000cb0f:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000cb13:	add    BYTE PTR [rax],al
   14000cb15:	add    BYTE PTR [rax],al
   14000cb17:	add    BYTE PTR [rax],bl
   14000cb19:	rol    BYTE PTR [rax],1
   14000cb1b:	rex add DWORD PTR [rax],eax
   14000cb1e:	add    BYTE PTR [rax],al
   14000cb20:	jne    0x14000cb22
   14000cb22:	add    BYTE PTR [rax],al
   14000cb24:	add    BYTE PTR [rax],al
   14000cb26:	add    BYTE PTR [rax],al
   14000cb28:	sub    al,dl
   14000cb2a:	add    BYTE PTR [rax+0x1],al
   14000cb2d:	add    BYTE PTR [rax],al
   14000cb2f:	add    BYTE PTR [rsi+0x0],dh
   14000cb32:	add    BYTE PTR [rax],al
   14000cb34:	add    BYTE PTR [rax],al
   14000cb36:	add    BYTE PTR [rax],al
   14000cb38:	cmp    al,dl
   14000cb3a:	add    BYTE PTR [rax+0x1],al
   14000cb3d:	add    BYTE PTR [rax],al
   14000cb3f:	add    BYTE PTR [rdi+0x0],dh
   14000cb42:	add    BYTE PTR [rax],al
   14000cb44:	add    BYTE PTR [rax],al
   14000cb46:	add    BYTE PTR [rax],al
   14000cb48:	push   rax
   14000cb49:	rol    BYTE PTR [rax],1
   14000cb4b:	rex add DWORD PTR [rax],eax
   14000cb4e:	add    BYTE PTR [rax],al
   14000cb50:	or     al,BYTE PTR [rax]
   14000cb52:	add    BYTE PTR [rax],al
   14000cb54:	add    BYTE PTR [rax],al
   14000cb56:	add    BYTE PTR [rax],al
   14000cb58:	(bad)  
   14000cb59:	rol    BYTE PTR [rax],1
   14000cb5b:	rex add DWORD PTR [rax],eax
   14000cb5e:	add    BYTE PTR [rax],al
   14000cb60:	jns    0x14000cb62
   14000cb62:	add    BYTE PTR [rax],al
   14000cb64:	add    BYTE PTR [rax],al
   14000cb66:	add    BYTE PTR [rax],al
   14000cb68:	js     0x14000cb3a
   14000cb6a:	add    BYTE PTR [rax+0x1],al
   14000cb6d:	add    BYTE PTR [rax],al
   14000cb6f:	add    BYTE PTR [rdi],ah
   14000cb71:	add    BYTE PTR [rax],al
   14000cb73:	add    BYTE PTR [rax],al
   14000cb75:	add    BYTE PTR [rax],al
   14000cb77:	add    BYTE PTR [rax+0x14000c5],bh
   14000cb7d:	add    BYTE PTR [rax],al
   14000cb7f:	add    BYTE PTR [rax+0x0],bh
   14000cb82:	add    BYTE PTR [rax],al
   14000cb84:	add    BYTE PTR [rax],al
   14000cb86:	add    BYTE PTR [rax],al
   14000cb88:	adc    al,0x0
   14000cb8b:	rex add DWORD PTR [rax],eax
   14000cb8e:	add    BYTE PTR [rax],al
   14000cb90:	jp     0x14000cb92
   14000cb92:	add    BYTE PTR [rax],al
   14000cb94:	add    BYTE PTR [rax],al
   14000cb96:	add    BYTE PTR [rax],al
   14000cb98:	cwde   
   14000cb99:	rol    BYTE PTR [rax],1
   14000cb9b:	rex add DWORD PTR [rax],eax
   14000cb9e:	add    BYTE PTR [rax],al
   14000cba0:	jnp    0x14000cba2
   14000cba2:	add    BYTE PTR [rax],al
   14000cba4:	add    BYTE PTR [rax],al
   14000cba6:	add    BYTE PTR [rax],al
   14000cba8:	test   al,0xd0
   14000cbaa:	add    BYTE PTR [rax+0x1],al
   14000cbad:	add    BYTE PTR [rax],al
   14000cbaf:	add    BYTE PTR [rax+rax*1],bl
   14000cbb2:	add    BYTE PTR [rax],al
   14000cbb4:	add    BYTE PTR [rax],al
   14000cbb6:	add    BYTE PTR [rax],al
   14000cbb8:	push   0x14000c5
   14000cbbd:	add    BYTE PTR [rax],al
   14000cbbf:	add    BYTE PTR [rax+rax*1+0x0],bh
   14000cbc3:	add    BYTE PTR [rax],al
   14000cbc5:	add    BYTE PTR [rax],al
   14000cbc7:	add    al,al
   14000cbc9:	rol    BYTE PTR [rax],1
   14000cbcb:	rex add DWORD PTR [rax],eax
   14000cbce:	add    BYTE PTR [rax],al
   14000cbd0:	(bad)  
   14000cbd1:	add    BYTE PTR [rax],al
   14000cbd3:	add    BYTE PTR [rax],al
   14000cbd5:	add    BYTE PTR [rax],al
   14000cbd7:	add    al,bl
   14000cbd9:	rol    BYTE PTR [rax],1
   14000cbdb:	rex add DWORD PTR [rax],eax
   14000cbde:	add    BYTE PTR [rax],al
   14000cbe0:	adc    eax,DWORD PTR [rax]
   14000cbe2:	add    BYTE PTR [rax],al
   14000cbe4:	add    BYTE PTR [rax],al
   14000cbe6:	add    BYTE PTR [rax],al
   14000cbe8:	call   0x14140ccb1
   14000cbed:	add    BYTE PTR [rax],al
   14000cbef:	add    BYTE PTR [rdx],al
   14000cbf1:	add    BYTE PTR [rax],al
   14000cbf3:	add    BYTE PTR [rax],al
   14000cbf5:	add    BYTE PTR [rax],al
   14000cbf7:	add    BYTE PTR [rax+0x14000c5],al
   14000cbfd:	add    BYTE PTR [rax],al
   14000cbff:	add    BYTE PTR [rbx],al
   14000cc01:	add    BYTE PTR [rax],al
   14000cc03:	add    BYTE PTR [rax],al
   14000cc05:	add    BYTE PTR [rax],al
   14000cc07:	add    al,bh
   14000cc09:	rol    BYTE PTR [rax],1
   14000cc0b:	rex add DWORD PTR [rax],eax
   14000cc0e:	add    BYTE PTR [rax],al
   14000cc10:	adc    al,0x0
   14000cc12:	add    BYTE PTR [rax],al
   14000cc14:	add    BYTE PTR [rax],al
   14000cc16:	add    BYTE PTR [rax],al
   14000cc18:	or     cl,dl
   14000cc1a:	add    BYTE PTR [rax+0x1],al
   14000cc1d:	add    BYTE PTR [rax],al
   14000cc1f:	add    BYTE PTR [rax+0x0],al
   14000cc25:	add    BYTE PTR [rax],al
   14000cc27:	add    BYTE PTR [rax],bl
   14000cc29:	rol    DWORD PTR [rax],1
   14000cc2b:	rex add DWORD PTR [rax],eax
   14000cc2e:	add    BYTE PTR [rax],al
   14000cc30:	jge    0x14000cc32
   14000cc32:	add    BYTE PTR [rax],al
   14000cc34:	add    BYTE PTR [rax],al
   14000cc36:	add    BYTE PTR [rax],al
   14000cc38:	sub    cl,dl
   14000cc3a:	add    BYTE PTR [rax+0x1],al
   14000cc3d:	add    BYTE PTR [rax],al
   14000cc3f:	add    BYTE PTR [rsi+0x0],bh
   14000cc42:	add    BYTE PTR [rax],al
   14000cc44:	add    BYTE PTR [rax],al
   14000cc46:	add    BYTE PTR [rax],al
   14000cc48:	cmp    cl,dl
   14000cc4a:	add    BYTE PTR [rax+0x1],al
   14000cc4d:	add    BYTE PTR [rax],al
   14000cc4f:	add    BYTE PTR [rax+rax*1],cl
   14000cc52:	add    BYTE PTR [rax],al
   14000cc54:	add    BYTE PTR [rax],al
   14000cc56:	add    BYTE PTR [rax],al
   14000cc58:	rol    ch,1
   14000cc5a:	add    BYTE PTR [rax+0x1],al
   14000cc5d:	add    BYTE PTR [rax],al
   14000cc5f:	add    BYTE PTR [rcx+0x0],al
   14000cc65:	add    BYTE PTR [rax],al
   14000cc67:	add    BYTE PTR [rax-0x2f],cl
   14000cc6a:	add    BYTE PTR [rax+0x1],al
   14000cc6d:	add    BYTE PTR [rax],al
   14000cc6f:	add    BYTE PTR [rcx+0x0],ch
   14000cc72:	add    BYTE PTR [rax],al
   14000cc74:	add    BYTE PTR [rax],al
   14000cc76:	add    BYTE PTR [rax],al
   14000cc78:	and    dh,al
   14000cc7a:	add    BYTE PTR [rax+0x1],al
   14000cc7d:	add    BYTE PTR [rax],al
   14000cc7f:	add    BYTE PTR [rax+0x0],dh
   14000cc82:	add    BYTE PTR [rax],al
   14000cc84:	add    BYTE PTR [rax],al
   14000cc86:	add    BYTE PTR [rax],al
   14000cc88:	pop    rax
   14000cc89:	rol    DWORD PTR [rax],1
   14000cc8b:	rex add DWORD PTR [rax],eax
   14000cc8e:	add    BYTE PTR [rax],al
   14000cc90:	add    DWORD PTR [rax],eax
   14000cc92:	add    BYTE PTR [rax],al
   14000cc94:	add    BYTE PTR [rax],al
   14000cc96:	add    BYTE PTR [rax],al
   14000cc98:	jo     0x14000cc6b
   14000cc9a:	add    BYTE PTR [rax+0x1],al
   14000cc9d:	add    BYTE PTR [rax],al
   14000cc9f:	add    BYTE PTR [rdx+0x0],al
   14000cca5:	add    BYTE PTR [rax],al
   14000cca7:	add    BYTE PTR [rax+0x14000d1],cl
   14000ccad:	add    BYTE PTR [rax],al
   14000ccaf:	add    BYTE PTR [rax+rax*1+0x0],cl
   14000ccb6:	add    BYTE PTR [rax],al
   14000ccb8:	movabs al,ds:0x85000000014000d1
   14000ccc1:	add    BYTE PTR [rax],al
   14000ccc3:	add    BYTE PTR [rax],al
   14000ccc5:	add    BYTE PTR [rax],al
   14000ccc7:	add    BYTE PTR [rax+0x14000d1],bh
   14000cccd:	add    BYTE PTR [rax],al
   14000cccf:	add    BYTE PTR [rip+0x0],cl        # 0x14000ccd5
   14000ccd5:	add    BYTE PTR [rax],al
   14000ccd7:	add    al,al
   14000ccd9:	(bad)  
   14000ccda:	add    BYTE PTR [rax+0x1],al
   14000ccdd:	add    BYTE PTR [rax],al
   14000ccdf:	add    BYTE PTR [rsi+0x0],al
   14000cce5:	add    BYTE PTR [rax],al
   14000cce7:	add    al,cl
   14000cce9:	rol    DWORD PTR [rax],1
   14000cceb:	rex add DWORD PTR [rax],eax
   14000ccee:	add    BYTE PTR [rax],al
   14000ccf0:	xchg   DWORD PTR [rax],eax
   14000ccf2:	add    BYTE PTR [rax],al
   14000ccf4:	add    BYTE PTR [rax],al
   14000ccf6:	add    BYTE PTR [rax],al
   14000ccf8:	fcom   st(1)
   14000ccfa:	add    BYTE PTR [rax+0x1],al
   14000ccfd:	add    BYTE PTR [rax],al
   14000ccff:	add    BYTE PTR [rsi],bl
   14000cd01:	add    BYTE PTR [rax],al
   14000cd03:	add    BYTE PTR [rax],al
   14000cd05:	add    BYTE PTR [rax],al
   14000cd07:	add    al,dh
   14000cd09:	rol    DWORD PTR [rax],1
   14000cd0b:	rex add DWORD PTR [rax],eax
   14000cd0e:	add    BYTE PTR [rax],al
   14000cd10:	and    al,0x0
   14000cd12:	add    BYTE PTR [rax],al
   14000cd14:	add    BYTE PTR [rax],al
   14000cd16:	add    BYTE PTR [rax],al
   14000cd18:	or     dl,dl
   14000cd1a:	add    BYTE PTR [rax+0x1],al
   14000cd1d:	add    BYTE PTR [rax],al
   14000cd1f:	add    BYTE PTR [rbx],cl
   14000cd21:	add    BYTE PTR [rax],al
   14000cd23:	add    BYTE PTR [rax],al
   14000cd25:	add    BYTE PTR [rax],al
   14000cd27:	add    al,ch
   14000cd29:	(bad)
   14000cd2c:	add    DWORD PTR [rax],eax
   14000cd2e:	add    BYTE PTR [rax],al
   14000cd30:	and    al,BYTE PTR [rax]
   14000cd32:	add    BYTE PTR [rax],al
   14000cd34:	add    BYTE PTR [rax],al
   14000cd36:	add    BYTE PTR [rax],al
   14000cd38:	sub    dl,dl
   14000cd3a:	add    BYTE PTR [rax+0x1],al
   14000cd3d:	add    BYTE PTR [rax],al
   14000cd3f:	add    BYTE PTR [rdi+0x0],bh
   14000cd42:	add    BYTE PTR [rax],al
   14000cd44:	add    BYTE PTR [rax],al
   14000cd46:	add    BYTE PTR [rax],al
   14000cd48:	rol    BYTE PTR [rax],cl
   14000cd4b:	rex add DWORD PTR [rax],eax
   14000cd4e:	add    BYTE PTR [rax],al
   14000cd50:	mov    DWORD PTR [rax],eax
   14000cd52:	add    BYTE PTR [rax],al
   14000cd54:	add    BYTE PTR [rax],al
   14000cd56:	add    BYTE PTR [rax],al
   14000cd58:	pop    rax
   14000cd59:	rol    BYTE PTR [rax],cl
   14000cd5b:	rex add DWORD PTR [rax],eax
   14000cd5e:	add    BYTE PTR [rax],al
   14000cd60:	mov    eax,DWORD PTR [rax]
   14000cd62:	add    BYTE PTR [rax],al
   14000cd64:	add    BYTE PTR [rax],al
   14000cd66:	add    BYTE PTR [rax],al
   14000cd68:	push   0x14000d2
   14000cd6d:	add    BYTE PTR [rax],al
   14000cd6f:	add    BYTE PTR [rdx+0x0],cl
   14000cd75:	add    BYTE PTR [rax],al
   14000cd77:	add    BYTE PTR [rax-0x2e],bh
   14000cd7a:	add    BYTE PTR [rax+0x1],al
   14000cd7d:	add    BYTE PTR [rax],al
   14000cd7f:	add    BYTE PTR [rdi],dl
   14000cd81:	add    BYTE PTR [rax],al
   14000cd83:	add    BYTE PTR [rax],al
   14000cd85:	add    BYTE PTR [rax],al
   14000cd87:	add    BYTE PTR [rax+0x14000d2],cl
   14000cd8d:	add    BYTE PTR [rax],al
   14000cd8f:	add    BYTE PTR [rax],bl
   14000cd91:	add    BYTE PTR [rax],al
   14000cd93:	add    BYTE PTR [rax],al
   14000cd95:	add    BYTE PTR [rax],al
   14000cd97:	add    BYTE PTR [rax],bh
   14000cd99:	mov    BYTE PTR [rax],0x40
   14000cd9c:	add    DWORD PTR [rax],eax
   14000cd9e:	add    BYTE PTR [rax],al
   14000cda0:	(bad)  
   14000cda1:	add    BYTE PTR [rax],al
   14000cda3:	add    BYTE PTR [rax],al
   14000cda5:	add    BYTE PTR [rax],al
   14000cda7:	add    BYTE PTR [rax+0x14000d2],ch
   14000cdad:	add    BYTE PTR [rax],al
   14000cdaf:	add    BYTE PTR [rdx+0x0],dh
   14000cdb2:	add    BYTE PTR [rax],al
   14000cdb4:	add    BYTE PTR [rax],al
   14000cdb6:	add    BYTE PTR [rax],al
   14000cdb8:	mov    eax,0x14000d2
   14000cdbd:	add    BYTE PTR [rax],al
   14000cdbf:	add    BYTE PTR [rax+rax*1+0x0],al
   14000cdc6:	add    BYTE PTR [rax],al
   14000cdc8:	fcom   st(2)
   14000cdca:	add    BYTE PTR [rax+0x1],al
   14000cdcd:	add    BYTE PTR [rax],al
   14000cdcf:	add    BYTE PTR [rax+0x0],cl
   14000cdd5:	add    BYTE PTR [rax],al
   14000cdd7:	add    al,ch
   14000cdd9:	rol    BYTE PTR [rax],cl
   14000cddb:	rex add DWORD PTR [rax],eax
	...
   14000cdee:	add    BYTE PTR [rax],al
   14000cdf0:	(bad)  
   14000cdf1:	fs fs jb 0x14000ce5a
   14000cdf5:	jae    0x14000ce6a
   14000cdf7:	and    BYTE PTR [rsi+0x61],ah
   14000cdfa:	ins    DWORD PTR es:[rdi],dx
   14000cdfb:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   14000ce03:	jae    0x14000ce7a
   14000ce05:	jo     0x14000ce77
   14000ce07:	outs   dx,DWORD PTR ds:[rsi]
   14000ce08:	jb     0x14000ce7e
   14000ce0a:	gs add BYTE PTR fs:[rax],al
   14000ce0e:	add    BYTE PTR [rax],al
   14000ce10:	(bad)  
   14000ce11:	fs fs jb 0x14000ce7a
   14000ce15:	jae    0x14000ce8a
   14000ce17:	and    BYTE PTR [rcx+0x6e],ch
   14000ce1a:	and    BYTE PTR [rbp+0x73],dh
   14000ce1d:	add    BYTE PTR gs:[rax],al
   14000ce20:	(bad)  
   14000ce21:	fs fs jb 0x14000ce8a
   14000ce25:	jae    0x14000ce9a
   14000ce27:	and    BYTE PTR [rsi+0x6f],ch
   14000ce2a:	je     0x14000ce4c
   14000ce2c:	(bad)  
   14000ce2d:	jbe    0x14000ce90
   14000ce2f:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14000ce37:	add    BYTE PTR [rcx+0x6c],ah
   14000ce3a:	jb     0x14000cea1
   14000ce3c:	(bad)  
   14000ce3d:	fs jns 0x14000ce60
   14000ce40:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000ce43:	outs   dx,BYTE PTR ds:[rsi]
   14000ce44:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000ce49:	add    BYTE PTR [rax],al
   14000ce4b:	add    BYTE PTR [rax],al
   14000ce4d:	add    BYTE PTR [rax],al
   14000ce4f:	add    BYTE PTR [rcx+0x72],ah
   14000ce52:	addr32 jne 0x14000cec2
   14000ce55:	outs   dx,BYTE PTR gs:[rsi]
   14000ce57:	je     0x14000ce79
   14000ce59:	ins    BYTE PTR es:[rdi],dx
   14000ce5a:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   14000ce61:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000ce65:	add    BYTE PTR [eax],al
   14000ce68:	(bad)  
   14000ce69:	jb     0x14000ced2
   14000ce6b:	jne    0x14000ceda
   14000ce6d:	outs   dx,BYTE PTR gs:[rsi]
   14000ce6f:	je     0x14000ce91
   14000ce71:	outs   dx,DWORD PTR ds:[rsi]
   14000ce72:	jne    0x14000cee8
   14000ce74:	and    BYTE PTR [rdi+0x66],ch
   14000ce77:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   14000ce7b:	(bad)  
   14000ce7c:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   14000ce83:	and    BYTE PTR [rcx+0x64],ah
   14000ce86:	fs jb  0x14000ceee
   14000ce89:	jae    0x14000cefe
   14000ce8b:	add    BYTE PTR [rax],al
   14000ce8d:	add    BYTE PTR [rax],al
   14000ce8f:	add    BYTE PTR [rdx+0x61],ah
   14000ce92:	and    BYTE PTR fs:[rsi+0x69],ah
   14000ce96:	ins    BYTE PTR es:[rdi],dx
   14000ce97:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   14000ce9c:	movsxd esi,DWORD PTR [rdx+0x69]
   14000ce9f:	jo     0x14000cf15
   14000cea1:	outs   dx,DWORD PTR ds:[rsi]
   14000cea2:	jb     0x14000cea4
   14000cea4:	add    BYTE PTR [rax],al
   14000cea6:	add    BYTE PTR [rax],al
   14000cea8:	(bad)
   14000cead:	gs jae 0x14000cf23
   14000ceb0:	(bad)  
   14000ceb1:	add    BYTE PTR gs:[eax],al
   14000ceb5:	add    BYTE PTR [rax],al
   14000ceb7:	add    BYTE PTR [rdx+0x72],ah
   14000ceba:	outs   dx,DWORD PTR ds:[rsi]
   14000cebb:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   14000cebf:	jo     0x14000cf2a
   14000cec1:	jo     0x14000cf28
   14000cec3:	add    BYTE PTR [rax],al
   14000cec5:	add    BYTE PTR [rax],al
   14000cec7:	add    BYTE PTR [rbx+0x6f],ah
   14000ceca:	outs   dx,BYTE PTR ds:[rsi]
   14000cecb:	outs   dx,BYTE PTR ds:[rsi]
   14000cecc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ced1:	outs   dx,BYTE PTR ds:[rsi]
   14000ced2:	and    BYTE PTR [rcx+0x62],ah
   14000ced5:	outs   dx,DWORD PTR ds:[rsi]
   14000ced6:	jb     0x14000cf4c
   14000ced8:	gs add BYTE PTR fs:[rax],al
   14000cedc:	add    BYTE PTR [rax],al
   14000cede:	add    BYTE PTR [rax],al
   14000cee0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000cee3:	outs   dx,BYTE PTR ds:[rsi]
   14000cee4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000cee9:	outs   dx,BYTE PTR ds:[rsi]
   14000ceea:	and    BYTE PTR [rcx+0x6c],ah
   14000ceed:	jb     0x14000cf54
   14000ceef:	(bad)  
   14000cef0:	fs jns 0x14000cf13
   14000cef3:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   14000cefa:	jb     0x14000cf61
   14000cefc:	jae    0x14000cf71
   14000cefe:	add    BYTE PTR [rax],al
   14000cf00:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000cf03:	outs   dx,BYTE PTR ds:[rsi]
   14000cf04:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000cf09:	outs   dx,BYTE PTR ds:[rsi]
   14000cf0a:	and    BYTE PTR [rdx+0x65],dh
   14000cf0d:	data16 jne 0x14000cf83
   14000cf10:	gs add BYTE PTR fs:[rax],al
   14000cf14:	add    BYTE PTR [rax],al
   14000cf16:	add    BYTE PTR [rax],al
   14000cf18:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000cf1b:	outs   dx,BYTE PTR ds:[rsi]
   14000cf1c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000cf21:	outs   dx,BYTE PTR ds:[rsi]
   14000cf22:	and    BYTE PTR [rdx+0x65],dh
   14000cf25:	jae    0x14000cf8c
   14000cf27:	je     0x14000cf29
   14000cf29:	add    BYTE PTR [rax],al
   14000cf2b:	add    BYTE PTR [rax],al
   14000cf2d:	add    BYTE PTR [rax],al
   14000cf2f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   14000cf33:	je     0x14000cf9e
   14000cf35:	outs   dx,BYTE PTR ds:[rsi]
   14000cf36:	(bad)  
   14000cf37:	je     0x14000cfa2
   14000cf39:	outs   dx,DWORD PTR ds:[rsi]
   14000cf3a:	outs   dx,BYTE PTR ds:[rsi]
   14000cf3b:	and    BYTE PTR [rcx+0x64],ah
   14000cf3e:	fs jb  0x14000cfa6
   14000cf41:	jae    0x14000cfb6
   14000cf43:	and    BYTE PTR [rdx+0x65],dh
   14000cf46:	jno    0x14000cfbd
   14000cf48:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14000cf4f:	add    BYTE PTR [rbp+0x78],ah
   14000cf52:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   14000cf56:	(bad)  
   14000cf57:	(bad)  
   14000cf58:	ins    BYTE PTR es:[rdi],dx
   14000cf59:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000cf5d:	jb     0x14000cfcc
   14000cf5f:	(bad)  
   14000cf60:	je     0x14000cf82
   14000cf62:	gs jb  0x14000cfd7
   14000cf65:	outs   dx,DWORD PTR ds:[rsi]
   14000cf66:	jb     0x14000cf68
   14000cf68:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   14000cf6f:	outs   dx,DWORD PTR ds:[rsi]
   14000cf70:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14000cf74:	add    BYTE PTR gs:[eax],al
   14000cf78:	push   0x2074736f
   14000cf7d:	jne    0x14000cfed
   14000cf7f:	jb     0x14000cfe6
   14000cf81:	(bad)  
   14000cf82:	movsxd ebp,DWORD PTR [rax+0x61]
   14000cf85:	(bad)  
   14000cf86:	ins    BYTE PTR es:[rdi],dx
   14000cf87:	add    BYTE PTR gs:[rax],al
   14000cf8a:	add    BYTE PTR [rax],al
   14000cf8c:	add    BYTE PTR [rax],al
   14000cf8e:	add    BYTE PTR [rax],al
   14000cf90:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   14000cf98:	gs jb  0x14000cfbb
   14000cf9b:	jb     0x14000d002
   14000cf9d:	ins    DWORD PTR es:[rdi],dx
   14000cf9e:	outs   dx,DWORD PTR ds:[rsi]
   14000cf9f:	jbe    0x14000d006
   14000cfa1:	add    BYTE PTR fs:[rax],al
   14000cfa4:	add    BYTE PTR [rax],al
   14000cfa6:	add    BYTE PTR [rax],al
   14000cfa8:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   14000cfb0:	(bad)  
   14000cfb1:	jns    0x14000d027
   14000cfb3:	and    BYTE PTR gs:[rbx+0x65],dh
   14000cfb7:	jno    0x14000d02e
   14000cfb9:	outs   dx,BYTE PTR gs:[rsi]
   14000cfbb:	movsxd esp,DWORD PTR [rbp+0x0]
   14000cfbe:	add    BYTE PTR [rax],al
   14000cfc0:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   14000cfc7:	jo     0x14000d03b
   14000cfc9:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   14000cfd0:	and    BYTE PTR [rbx+0x6f],ah
   14000cfd3:	outs   dx,BYTE PTR ds:[rsi]
   14000cfd4:	je     0x14000d048
   14000cfd6:	outs   dx,DWORD PTR ds:[rsi]
   14000cfd7:	ins    BYTE PTR es:[rdi],dx
   14000cfd8:	and    BYTE PTR [rdi+0x70],ch
   14000cfdb:	gs jb  0x14000d03f
   14000cfde:	je     0x14000d049
   14000cfe0:	outs   dx,DWORD PTR ds:[rsi]
   14000cfe1:	outs   dx,BYTE PTR ds:[rsi]
   14000cfe2:	add    BYTE PTR [rax],al
   14000cfe4:	add    BYTE PTR [rax],al
   14000cfe6:	add    BYTE PTR [rax],al
   14000cfe8:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14000cfef:	and    BYTE PTR [rbx+0x65],dh
   14000cff2:	imul   eax,DWORD PTR gs:[rax],0x0
   14000cff6:	add    BYTE PTR [rax],al
   14000cff8:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   14000cfff:	jb     0x14000d066
   14000d001:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000d005:	jns    0x14000d007
   14000d007:	add    BYTE PTR [rbp+0x65],ch
   14000d00a:	jae    0x14000d07f
   14000d00c:	(bad)  
   14000d00d:	and    BYTE PTR gs:[ebx+0x69],dh
   14000d012:	jp     0x14000d079
   14000d014:	add    BYTE PTR [rax],al
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	outs   dx,BYTE PTR ds:[rsi]
   14000d019:	gs je  0x14000d093
   14000d01c:	outs   dx,DWORD PTR ds:[rsi]
   14000d01d:	jb     0x14000d08a
   14000d01f:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   14000d023:	outs   dx,BYTE PTR ds:[rsi]
   14000d024:	add    BYTE PTR [rax],al
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	outs   dx,BYTE PTR ds:[rsi]
   14000d029:	gs je  0x14000d0a3
   14000d02c:	outs   dx,DWORD PTR ds:[rsi]
   14000d02d:	jb     0x14000d09a
   14000d02f:	and    BYTE PTR [rdx+0x65],dh
   14000d032:	jae    0x14000d099
   14000d034:	je     0x14000d036
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	outs   dx,BYTE PTR ds:[rsi]
   14000d039:	gs je  0x14000d0b3
   14000d03c:	outs   dx,DWORD PTR ds:[rsi]
   14000d03d:	jb     0x14000d0aa
   14000d03f:	and    BYTE PTR [rbp+0x6e],dh
   14000d042:	jb     0x14000d0a9
   14000d044:	(bad)  
   14000d045:	movsxd ebp,DWORD PTR [rax+0x61]
   14000d048:	(bad)  
   14000d049:	ins    BYTE PTR es:[rdi],dx
   14000d04a:	add    BYTE PTR gs:[rax],al
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rsi+0x6f],ch
   14000d052:	and    BYTE PTR [rdx+0x75],ah
   14000d055:	data16 data16 gs jb 0x14000d07a
   14000d05a:	jae    0x14000d0cc
   14000d05c:	(bad)  
   14000d05d:	movsxd esp,DWORD PTR [rbp+0x0]
   14000d060:	outs   dx,BYTE PTR ds:[rsi]
   14000d061:	outs   dx,DWORD PTR ds:[rsi]
   14000d062:	and    BYTE PTR [rbx+0x68],ah
   14000d065:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   14000d06d:	gs jae 0x14000d0e3
	...
   14000d078:	outs   dx,BYTE PTR ds:[rsi]
   14000d079:	outs   dx,DWORD PTR ds:[rsi]
   14000d07a:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14000d07e:	imul   eax,DWORD PTR [rax],0x6e
   14000d081:	outs   dx,DWORD PTR ds:[rsi]
   14000d082:	and    BYTE PTR [rbp+0x65],ch
   14000d085:	jae    0x14000d0fa
   14000d087:	(bad)  
   14000d088:	and    BYTE PTR gs:[ecx+0x76],ah
   14000d08d:	(bad)  
   14000d08e:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14000d096:	add    BYTE PTR [rax],al
   14000d098:	outs   dx,BYTE PTR ds:[rsi]
   14000d099:	outs   dx,DWORD PTR ds:[rsi]
   14000d09a:	and    BYTE PTR [rbp+0x65],ch
   14000d09d:	jae    0x14000d112
   14000d09f:	(bad)  
   14000d0a0:	add    BYTE PTR gs:[eax],al
   14000d0a4:	add    BYTE PTR [rax],al
   14000d0a6:	add    BYTE PTR [rax],al
   14000d0a8:	outs   dx,BYTE PTR ds:[rsi]
   14000d0a9:	outs   dx,DWORD PTR ds:[rsi]
   14000d0aa:	and    BYTE PTR [rax+0x72],dh
   14000d0ad:	outs   dx,DWORD PTR ds:[rsi]
   14000d0ae:	je     0x14000d11f
   14000d0b0:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000d0b3:	and    BYTE PTR [rdi+0x70],ch
   14000d0b6:	je     0x14000d121
   14000d0b8:	outs   dx,DWORD PTR ds:[rsi]
   14000d0b9:	outs   dx,BYTE PTR ds:[rsi]
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	add    BYTE PTR [rax],al
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	outs   dx,BYTE PTR ds:[rsi]
   14000d0c1:	outs   dx,DWORD PTR ds:[rsi]
   14000d0c2:	and    BYTE PTR [rbx+0x74],dh
   14000d0c5:	jb     0x14000d12c
   14000d0c7:	(bad)  
   14000d0c8:	ins    DWORD PTR es:[rdi],dx
   14000d0c9:	and    BYTE PTR [rdx+0x65],dh
   14000d0cc:	jae    0x14000d13d
   14000d0ce:	jne    0x14000d142
   14000d0d0:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d0d3:	add    BYTE PTR [rax],al
   14000d0d5:	add    BYTE PTR [rax],al
   14000d0d7:	add    BYTE PTR [rsi+0x6f],ch
   14000d0da:	and    BYTE PTR [rbx+0x75],dh
   14000d0dd:	movsxd ebp,DWORD PTR [rax+0x20]
   14000d0e0:	fs gs jbe 0x14000d14d
   14000d0e4:	movsxd esp,DWORD PTR [rbp+0x20]
   14000d0e7:	outs   dx,DWORD PTR ds:[rsi]
   14000d0e8:	jb     0x14000d10a
   14000d0ea:	(bad)  
   14000d0eb:	fs fs jb 0x14000d154
   14000d0ef:	jae    0x14000d164
   14000d0f1:	add    BYTE PTR [rax],al
   14000d0f3:	add    BYTE PTR [rax],al
   14000d0f5:	add    BYTE PTR [rax],al
   14000d0f7:	add    BYTE PTR [rsi+0x6f],ch
   14000d0fa:	and    BYTE PTR [rbx+0x75],dh
   14000d0fd:	movsxd ebp,DWORD PTR [rax+0x20]
   14000d100:	jo     0x14000d174
   14000d102:	outs   dx,DWORD PTR ds:[rsi]
   14000d103:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d106:	jae    0x14000d108
   14000d108:	outs   dx,BYTE PTR ds:[rsi]
   14000d109:	outs   dx,DWORD PTR ds:[rsi]
   14000d10a:	je     0x14000d12c
   14000d10c:	(bad)  
   14000d10d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14000d111:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000d116:	jns    0x14000d118
   14000d118:	outs   dx,BYTE PTR ds:[rsi]
   14000d119:	outs   dx,DWORD PTR ds:[rsi]
   14000d11a:	je     0x14000d13c
   14000d11c:	(bad)  
   14000d11d:	and    BYTE PTR [rbx+0x6f],dh
   14000d120:	movsxd ebp,DWORD PTR [rbx+0x65]
   14000d123:	je     0x14000d125
   14000d125:	add    BYTE PTR [rax],al
   14000d127:	add    BYTE PTR [rsi+0x6f],ch
   14000d12a:	je     0x14000d14c
   14000d12c:	(bad)  
   14000d12d:	and    BYTE PTR [rbx+0x74],dh
   14000d130:	jb     0x14000d197
   14000d132:	(bad)  
   14000d133:	ins    DWORD PTR es:[rdi],dx
   14000d134:	add    BYTE PTR [rax],al
   14000d136:	add    BYTE PTR [rax],al
   14000d138:	outs   dx,BYTE PTR ds:[rsi]
   14000d139:	outs   dx,DWORD PTR ds:[rsi]
   14000d13a:	je     0x14000d15c
   14000d13c:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000d13f:	outs   dx,BYTE PTR ds:[rsi]
   14000d140:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000d145:	add    BYTE PTR [rax],al
   14000d147:	add    BYTE PTR [rsi+0x6f],ch
   14000d14a:	je     0x14000d16c
   14000d14c:	jae    0x14000d1c3
   14000d14e:	jo     0x14000d1c0
   14000d150:	outs   dx,DWORD PTR ds:[rsi]
   14000d151:	jb     0x14000d1c7
   14000d153:	gs add BYTE PTR fs:[rax],al
   14000d157:	add    BYTE PTR [rdi+0x70],ch
   14000d15a:	gs jb  0x14000d1be
   14000d15d:	je     0x14000d1c8
   14000d15f:	outs   dx,DWORD PTR ds:[rsi]
   14000d160:	outs   dx,BYTE PTR ds:[rsi]
   14000d161:	and    BYTE PTR [rcx+0x6e],ch
   14000d164:	and    BYTE PTR [rax+0x72],dh
   14000d167:	outs   dx,DWORD PTR ds:[rsi]
   14000d168:	addr32 jb 0x14000d1d0
   14000d16b:	jae    0x14000d1e0
   14000d16d:	add    BYTE PTR [rax],al
   14000d16f:	add    BYTE PTR [rdi+0x70],ch
   14000d172:	gs jb  0x14000d1d6
   14000d175:	je     0x14000d1e0
   14000d177:	outs   dx,DWORD PTR ds:[rsi]
   14000d178:	outs   dx,BYTE PTR ds:[rsi]
   14000d179:	and    BYTE PTR [rsi+0x6f],ch
   14000d17c:	je     0x14000d19e
   14000d17e:	jo     0x14000d1e5
   14000d180:	jb     0x14000d1ef
   14000d182:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   14000d18a:	gs jb  0x14000d1ee
   14000d18d:	je     0x14000d1f8
   14000d18f:	outs   dx,DWORD PTR ds:[rsi]
   14000d190:	outs   dx,BYTE PTR ds:[rsi]
   14000d191:	and    BYTE PTR [rsi+0x6f],ch
   14000d194:	je     0x14000d1b6
   14000d196:	jae    0x14000d20d
   14000d198:	jo     0x14000d20a
   14000d19a:	outs   dx,DWORD PTR ds:[rsi]
   14000d19b:	jb     0x14000d211
   14000d19d:	gs add BYTE PTR fs:[rdi+0x70],ch
   14000d1a2:	gs jb  0x14000d206
   14000d1a5:	je     0x14000d210
   14000d1a7:	outs   dx,DWORD PTR ds:[rsi]
   14000d1a8:	outs   dx,BYTE PTR ds:[rsi]
   14000d1a9:	and    BYTE PTR [rdi+0x6f],dh
   14000d1ac:	jne    0x14000d21a
   14000d1ae:	and    BYTE PTR fs:[rdx+0x6c],ah
   14000d1b2:	outs   dx,DWORD PTR ds:[rsi]
   14000d1b3:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	outs   dx,DWORD PTR ds:[rsi]
   14000d1b9:	ja     0x14000d229
   14000d1bb:	gs jb  0x14000d1de
   14000d1be:	fs gs (bad) 
   14000d1c1:	add    BYTE PTR fs:[rax],al
   14000d1c4:	add    BYTE PTR [rax],al
   14000d1c6:	add    BYTE PTR [rax],al
   14000d1c8:	jo     0x14000d23c
   14000d1ca:	outs   dx,DWORD PTR ds:[rsi]
   14000d1cb:	je     0x14000d23c
   14000d1cd:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000d1d0:	and    BYTE PTR [rbp+0x72],ah
   14000d1d3:	jb     0x14000d244
   14000d1d5:	jb     0x14000d1d7
   14000d1d7:	add    BYTE PTR [rax+0x72],dh
   14000d1da:	outs   dx,DWORD PTR ds:[rsi]
   14000d1db:	je     0x14000d24c
   14000d1dd:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000d1e0:	and    BYTE PTR [rsi+0x6f],ch
   14000d1e3:	je     0x14000d205
   14000d1e5:	jae    0x14000d25c
   14000d1e7:	jo     0x14000d259
   14000d1e9:	outs   dx,DWORD PTR ds:[rsi]
   14000d1ea:	jb     0x14000d260
   14000d1ec:	gs add BYTE PTR fs:[rax],al
   14000d1f0:	jb     0x14000d257
   14000d1f2:	(bad)  
   14000d1f3:	and    BYTE PTR fs:[rdi+0x6e],ch
   14000d1f7:	ins    BYTE PTR es:[rdi],dx
   14000d1f8:	jns    0x14000d21a
   14000d1fa:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   14000d201:	jae    0x14000d277
   14000d203:	gs ins DWORD PTR es:[rdi],dx
   14000d205:	add    BYTE PTR [rax],al
   14000d207:	add    BYTE PTR [rdx+0x65],dh
   14000d20a:	jae    0x14000d27b
   14000d20c:	jne    0x14000d280
   14000d20e:	movsxd esp,DWORD PTR [rbp+0x20]
   14000d211:	fs gs (bad) 
   14000d214:	fs ins BYTE PTR es:[rdi],dx
   14000d216:	outs   dx,DWORD PTR ds:[rsi]
   14000d217:	movsxd ebp,DWORD PTR [rbx+0x20]
   14000d21a:	ja     0x14000d28b
   14000d21c:	jne    0x14000d28a
   14000d21e:	and    BYTE PTR fs:[rdi+0x63],ch
   14000d222:	movsxd esi,DWORD PTR [rbp+0x72]
   14000d225:	add    BYTE PTR [rax],al
   14000d227:	add    BYTE PTR [rdx+0x65],dh
   14000d22a:	jae    0x14000d2a1
   14000d22c:	ins    BYTE PTR es:[rdi],dx
   14000d22d:	je     0x14000d24f
   14000d22f:	outs   dx,DWORD PTR ds:[rsi]
   14000d230:	jne    0x14000d2a6
   14000d232:	and    BYTE PTR [rdi+0x66],ch
   14000d235:	and    BYTE PTR [rdx+0x61],dh
   14000d238:	outs   dx,BYTE PTR ds:[rsi]
   14000d239:	add    BYTE PTR gs:[eax],al
   14000d23d:	add    BYTE PTR [rax],al
   14000d23f:	add    BYTE PTR [rbx+0x74],dh
   14000d242:	(bad)  
   14000d243:	je     0x14000d2aa
   14000d245:	and    BYTE PTR [rsi+0x6f],ch
   14000d248:	je     0x14000d26a
   14000d24a:	jb     0x14000d2b1
   14000d24c:	movsxd ebp,DWORD PTR [rdi+0x76]
   14000d24f:	gs jb  0x14000d2b3
   14000d252:	(bad)  
   14000d253:	ins    BYTE PTR es:[rdi],dx
   14000d254:	add    BYTE PTR gs:[rax],al
   14000d257:	add    BYTE PTR [rbx+0x74],dh
   14000d25a:	jb     0x14000d2c1
   14000d25c:	(bad)  
   14000d25d:	ins    DWORD PTR es:[rdi],dx
   14000d25e:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   14000d262:	outs   dx,DWORD PTR gs:[rsi]
   14000d264:	jne    0x14000d2da
   14000d266:	add    BYTE PTR [rax],al
   14000d268:	je     0x14000d2cf
   14000d26a:	js     0x14000d2e0
   14000d26c:	and    BYTE PTR [rsi+0x69],ah
   14000d26f:	ins    BYTE PTR es:[rdi],dx
   14000d270:	and    BYTE PTR gs:[rdx+0x75],ah
   14000d274:	jae    0x14000d2ef
   14000d276:	add    BYTE PTR [rax],al
   14000d278:	je     0x14000d2e3
   14000d27a:	ins    DWORD PTR es:[rdi],dx
   14000d27b:	gs and BYTE PTR fs:[rdi+0x75],ch
   14000d280:	je     0x14000d282
   14000d282:	add    BYTE PTR [rax],al
   14000d284:	add    BYTE PTR [rax],al
   14000d286:	add    BYTE PTR [rax],al
   14000d288:	je     0x14000d2f9
   14000d28a:	outs   dx,DWORD PTR ds:[rsi]
   14000d28b:	and    BYTE PTR [rbp+0x61],ch
   14000d28e:	outs   dx,BYTE PTR ds:[rsi]
   14000d28f:	jns    0x14000d2b1
   14000d291:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   14000d298:	jo     0x14000d2ff
   14000d29a:	outs   dx,BYTE PTR ds:[rsi]
   14000d29b:	and    BYTE PTR [rcx+0x6e],ch
   14000d29e:	and    BYTE PTR [rbx+0x79],dh
   14000d2a1:	jae    0x14000d317
   14000d2a3:	gs ins DWORD PTR es:[rdi],dx
   14000d2a5:	add    BYTE PTR [rax],al
   14000d2a7:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14000d2ab:	and    BYTE PTR [rbp+0x61],ch
   14000d2ae:	outs   dx,BYTE PTR ds:[rsi]
   14000d2af:	jns    0x14000d2d1
   14000d2b1:	ins    BYTE PTR es:[rdi],dx
   14000d2b2:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   14000d2b9:	outs   dx,DWORD PTR ds:[rsi]
   14000d2ba:	outs   dx,DWORD PTR ds:[rsi]
   14000d2bb:	and    BYTE PTR [rbp+0x61],ch
   14000d2be:	outs   dx,BYTE PTR ds:[rsi]
   14000d2bf:	jns    0x14000d2e1
   14000d2c1:	jae    0x14000d33c
   14000d2c3:	ins    DWORD PTR es:[rdi],dx
   14000d2c4:	(bad)  
   14000d2c5:	outs   dx,DWORD PTR ds:[rsi]
   14000d2c6:	ins    BYTE PTR es:[rdi],dx
   14000d2c7:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   14000d2ce:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000d2d2:	gs ins BYTE PTR es:[rdi],dx
   14000d2d4:	jae    0x14000d2d6
   14000d2d6:	add    BYTE PTR [rax],al
   14000d2d8:	jbe    0x14000d33b
   14000d2da:	ins    BYTE PTR es:[rdi],dx
   14000d2db:	jne    0x14000d342
   14000d2dd:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   14000d2e1:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14000d2e5:	add    BYTE PTR gs:[edi+0x72],dh
   14000d2ea:	outs   dx,DWORD PTR ds:[rsi]
   14000d2eb:	outs   dx,BYTE PTR ds:[rsi]
   14000d2ec:	and    BYTE PTR [eax+0x72],dh
   14000d2f0:	outs   dx,DWORD PTR ds:[rsi]
   14000d2f1:	je     0x14000d362
   14000d2f3:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000d2f6:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000d2fa:	add    BYTE PTR gs:[rax],al
   14000d2fd:	add    BYTE PTR [rax],al
   14000d2ff:	add    BYTE PTR [rax+0x1400122],dh
   14000d305:	add    BYTE PTR [rax],al
   14000d307:	add    BYTE PTR [rax+0x23],dl
   14000d30a:	add    DWORD PTR [rax+0x1],eax
   14000d30d:	add    BYTE PTR [rax],al
   14000d30f:	add    BYTE PTR [rax+0x1400050],ah
   14000d315:	add    BYTE PTR [rax],al
   14000d317:	add    BYTE PTR [rdx],ah
   14000d319:	add    eax,0x21993
   14000d31e:	add    BYTE PTR [rax],al
   14000d320:	movabs al,ds:0xb0000000010000f8
   14000d329:	clc    
   14000d32a:	add    BYTE PTR [rax],al
   14000d32c:	(bad)  
   14000d32d:	add    BYTE PTR [rax],al
   14000d32f:	add    al,bl
   14000d331:	clc    
   14000d332:	add    BYTE PTR [rax],al
   14000d334:	and    BYTE PTR [rax],al
   14000d336:	add    BYTE PTR [rax],al
   14000d338:	add    BYTE PTR [rax],al
   14000d33a:	add    BYTE PTR [rax],al
   14000d33c:	add    DWORD PTR [rax],eax
	...
   14000d346:	add    BYTE PTR [rax],al
   14000d348:	rex.RB js 0x14000d3ae
   14000d34b:	gs jo  0x14000d3c2
   14000d34e:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000d355:	add    BYTE PTR [rax],al
   14000d357:	add    BYTE PTR [rdx+0x65],dl
   14000d35a:	je     0x14000d3d1
   14000d35c:	jb     0x14000d3cc
   14000d35e:	rex.W jb 0x14000d361
   14000d361:	add    BYTE PTR [rax],al
   14000d363:	add    BYTE PTR [rax],al
   14000d365:	add    BYTE PTR [rax],al
   14000d367:	add    BYTE PTR [rdx+0x65],dl
   14000d36a:	je     0x14000d3e1
   14000d36c:	jb     0x14000d3dc
   14000d36e:	rex.W jb 0x14000d3cc
   14000d371:	push   rax
   14000d372:	jb     0x14000d3d9
   14000d374:	push   rdx
   14000d375:	gs ins BYTE PTR es:[rdi],dx
   14000d377:	gs (bad) 
   14000d379:	jae    0x14000d3e0
   14000d37b:	pop    rbp
   14000d37c:	add    BYTE PTR [rax],al
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d382:	addr32 rex.W jb 0x14000d386
   14000d386:	add    BYTE PTR [rax],al
   14000d388:	rex.RX (bad) 
   14000d38a:	imul   ebp,DWORD PTR [rsi+rax*2+0x61],0x7473
   14000d392:	add    BYTE PTR [rax],al
   14000d394:	add    BYTE PTR [rax],al
   14000d396:	add    BYTE PTR [rax],al
   14000d398:	and    eax,0x73006800
   14000d39d:	add    BYTE PTR [rax],ch
   14000d39f:	add    BYTE PTR [rip+0x29006400],ah        # 0x1690137a5
   14000d3a5:	add    BYTE PTR [rax+rax*1+0x25],bl
   14000d3a9:	add    BYTE PTR [rax+0x0],ch
   14000d3ac:	jae    0x14000d3ae
   14000d3ae:	and    DWORD PTR [rax],eax
   14000d3b0:	and    eax,0x3a007000
   14000d3b5:	add    BYTE PTR [rax],ah
	...
   14000d3bf:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3013bc5
   14000d3c5:	add    BYTE PTR [rcx],ah
   14000d3c7:	add    BYTE PTR [rip+0x3a007000],ah        # 0x17a0143cd
   14000d3cd:	add    BYTE PTR [rax],ah
	...
   14000d3d7:	add    BYTE PTR [rax],ch
   14000d3d9:	add    BYTE PTR [rbx+0x0],ah
   14000d3dc:	(bad)  
   14000d3dd:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000d3e1:	add    BYTE PTR [rbp+0x0],ah
   14000d3e4:	jb     0x14000d3e6
   14000d3e6:	cmp    al,BYTE PTR [rax]
   14000d3e8:	and    BYTE PTR [rax],al
   14000d3ea:	and    eax,0x29007000
   14000d3ef:	add    BYTE PTR [rax],ah
   14000d3f1:	add    BYTE PTR [rax],al
   14000d3f3:	add    BYTE PTR [rax],al
   14000d3f5:	add    BYTE PTR [rax],al
   14000d3f7:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3013bfd
   14000d3fd:	add    BYTE PTR [rax],ch
   14000d3ff:	add    BYTE PTR [rip+0x29006400],ah        # 0x169013805
   14000d405:	add    BYTE PTR [rax],ah
   14000d407:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d40b:	add    BYTE PTR [rax+rax*1+0x28],ah
   14000d40f:	add    BYTE PTR [rip+0x29007800],ah        # 0x169014c15
   14000d415:	add    BYTE PTR [rax],ah
   14000d417:	add    BYTE PTR [rip+0x38003000],ah        # 0x17801041d
   14000d41d:	add    BYTE PTR [rax+0x0],bl
   14000d420:	and    BYTE PTR [rax],al
   14000d422:	and    eax,0x73007700
	...
   14000d42f:	add    BYTE PTR [rax],ah
   14000d431:	add    BYTE PTR [rax],ah
   14000d433:	add    BYTE PTR [rax],ah
   14000d435:	add    BYTE PTR [rax],ah
	...
   14000d43f:	add    BYTE PTR [rbp+0x0],cl
   14000d442:	jae    0x14000d444
   14000d444:	add    BYTE PTR [edx],bh
   14000d447:	add    BYTE PTR [rbx+0x0],bl
   14000d44a:	and    eax,0x73007700
   14000d44f:	add    BYTE PTR [rbp+0x0],bl
   14000d452:	and    BYTE PTR [rax],al
   14000d454:	add    BYTE PTR [rax],al
   14000d456:	add    BYTE PTR [rax],al
   14000d458:	rex.XB add BYTE PTR [r9+0x0],spl
   14000d45c:	ins    BYTE PTR es:[rdi],dx
   14000d45d:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000d461:	add    BYTE PTR [rdi+0x0],ch
   14000d464:	outs   dx,BYTE PTR ds:[rsi]
   14000d465:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d469:	add    BYTE PTR [rax+0x0],bh
   14000d46c:	je     0x14000d46e
   14000d46e:	cmp    al,BYTE PTR [rax]
   14000d470:	pop    rbx
   14000d471:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3013c77
   14000d477:	add    BYTE PTR [rbp+0x0],bl
   14000d47a:	and    BYTE PTR [rax],al
   14000d47c:	add    BYTE PTR [rax],al
   14000d47e:	add    BYTE PTR [rax],al
   14000d480:	pop    rbx
   14000d481:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3013c87
   14000d487:	add    BYTE PTR [rax],ch
   14000d489:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3013c8f
   14000d48f:	add    BYTE PTR [rcx],ch
   14000d491:	add    BYTE PTR [rbp+0x0],bl
   14000d494:	or     al,BYTE PTR [rax]
   14000d496:	add    BYTE PTR [rax],al
   14000d498:	pop    rbx
   14000d499:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3013c9f
   14000d49f:	add    BYTE PTR [rbp+0x0],bl
   14000d4a2:	or     al,BYTE PTR [rax]
   14000d4a4:	add    BYTE PTR [rax],al
   14000d4a6:	add    BYTE PTR [rax],al
   14000d4a8:	or     al,BYTE PTR [rax]
   14000d4aa:	add    BYTE PTR [rax],al
   14000d4ac:	add    BYTE PTR [rax],al
   14000d4ae:	add    BYTE PTR [rax],al
   14000d4b0:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000d4b7:	ins    BYTE PTR es:[rdi],dx
   14000d4b8:	pop    rsp
   14000d4b9:	jae    0x14000d51f
   14000d4bb:	imul   ebx,DWORD PTR [rcx+rbp*2+0x6e],0x63
   14000d4c0:	pop    rsp
   14000d4c1:	ja     0x14000d52c
   14000d4c3:	ins    BYTE PTR es:[rdi],dx
   14000d4c4:	pop    rsp
   14000d4c5:	push   rdx
   14000d4c6:	gs jae 0x14000d53e
   14000d4c9:	ins    BYTE PTR es:[rdi],dx
   14000d4ca:	je     0x14000d4fa
   14000d4cc:	push   0xffffffff90000000
   14000d4d1:	sahf   
   14000d4d2:	add    BYTE PTR [rax+0x1],al
   14000d4d5:	add    BYTE PTR [rax],al
   14000d4d7:	add    al,al
   14000d4d9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000d4dd:	add    BYTE PTR [rax],al
   14000d4df:	add    al,al
   14000d4e1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000d4e5:	add    BYTE PTR [rax],al
   14000d4e7:	add    BYTE PTR [rcx],al
   14000d4e9:	add    BYTE PTR [rax],al
   14000d4eb:	add    BYTE PTR [rax],al
   14000d4ed:	add    BYTE PTR [rax],al
   14000d4ef:	add    al,al
   14000d4f1:	add    BYTE PTR [rax],al
   14000d4f3:	add    BYTE PTR [rax],al
   14000d4f5:	add    BYTE PTR [rax],al
   14000d4f7:	rex.RX rol DWORD PTR [rax+0x51],0x6d
   14000d4fc:	ss je  0x14000d4cd
   14000d4ff:	adc    DWORD PTR [rax+0xaa0034],eax
   14000d505:	(bad)  
   14000d506:	or     edx,edi
   14000d508:	jae    0x14000d572
   14000d50a:	gs ins BYTE PTR es:[rdi],dx
   14000d50c:	ins    BYTE PTR es:[rdi],dx
   14000d50d:	pop    rsp
   14000d50e:	outs   dx,DWORD PTR ds:[rsi]
   14000d50f:	outs   dx,BYTE PTR ds:[rsi]
   14000d510:	movsxd ebp,DWORD PTR gs:[rdi+0x72]
   14000d514:	gs pop rsp
   14000d516:	jae    0x14000d580
   14000d518:	gs ins BYTE PTR es:[rdi],dx
   14000d51a:	ins    BYTE PTR es:[rdi],dx
   14000d51b:	push   0x5c74736f
   14000d520:	gs js  0x14000d588
   14000d523:	pop    rsp
   14000d524:	jae    0x14000d58e
   14000d526:	gs ins BYTE PTR es:[rdi],dx
   14000d528:	ins    BYTE PTR es:[rdi],dx
   14000d529:	push   0x2e74736f
   14000d52e:	movsxd esi,DWORD PTR [rax+0x70]
   14000d531:	add    BYTE PTR [rax],al
   14000d533:	add    BYTE PTR [rax],al
   14000d535:	add    BYTE PTR [rax],al
   14000d537:	add    BYTE PTR [rdx],ah
   14000d539:	add    eax,0x11993
   14000d53e:	add    BYTE PTR [rax],al
   14000d540:	je     0x14000d53c
	...
   14000d54a:	add    BYTE PTR [rax],al
   14000d54c:	add    al,BYTE PTR [rax]
   14000d54e:	add    BYTE PTR [rax],al
   14000d550:	jl     0x14000d54c
   14000d552:	add    BYTE PTR [rax],al
   14000d554:	sub    BYTE PTR [rax],al
   14000d556:	add    BYTE PTR [rax],al
   14000d558:	add    BYTE PTR [rax],al
   14000d55a:	add    BYTE PTR [rax],al
   14000d55c:	add    DWORD PTR [rax],eax
   14000d55e:	add    BYTE PTR [rax],al
   14000d560:	and    al,BYTE PTR [rip+0x31993]        # 0x14003eef9
   14000d566:	add    BYTE PTR [rax],al
   14000d568:	rex.R in al,dx
	...
   14000d572:	add    BYTE PTR [rax],al
   14000d574:	or     al,0x0
   14000d576:	add    BYTE PTR [rax],al
   14000d578:	pop    rsp
   14000d579:	in     al,dx
   14000d57a:	add    BYTE PTR [rax],al
   14000d57c:	and    BYTE PTR [rax],al
   14000d57e:	add    BYTE PTR [rax],al
   14000d580:	add    BYTE PTR [rax],al
   14000d582:	add    BYTE PTR [rax],al
   14000d584:	add    DWORD PTR [rax],eax
   14000d586:	add    BYTE PTR [rax],al
   14000d588:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ef21
   14000d58e:	add    BYTE PTR [rax],al
   14000d590:	cld    
   14000d591:	cli    
	...
   14000d59a:	add    BYTE PTR [rax],al
   14000d59c:	add    eax,DWORD PTR [rax]
   14000d59e:	add    BYTE PTR [rax],al
   14000d5a0:	add    al,0xfb
   14000d5a2:	add    BYTE PTR [rax],al
   14000d5a4:	and    BYTE PTR [rax],al
   14000d5a6:	add    BYTE PTR [rax],al
   14000d5a8:	add    BYTE PTR [rax],al
   14000d5aa:	add    BYTE PTR [rax],al
   14000d5ac:	add    DWORD PTR [rax],eax
   14000d5ae:	add    BYTE PTR [rax],al
   14000d5b0:	and    al,BYTE PTR [rip+0x31993]        # 0x14003ef49
   14000d5b6:	add    BYTE PTR [rax],al
   14000d5b8:	je     0x14000d5af
	...
   14000d5c2:	add    BYTE PTR [rax],al
   14000d5c4:	or     BYTE PTR [rax],al
   14000d5c6:	add    BYTE PTR [rax],al
   14000d5c8:	mov    ebp,?
   14000d5ca:	add    BYTE PTR [rax],al
   14000d5cc:	and    BYTE PTR [rax],al
   14000d5ce:	add    BYTE PTR [rax],al
   14000d5d0:	add    BYTE PTR [rax],al
   14000d5d2:	add    BYTE PTR [rax],al
   14000d5d4:	add    DWORD PTR [rax],eax
   14000d5d6:	add    BYTE PTR [rax],al
   14000d5d8:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ef71
   14000d5de:	add    BYTE PTR [rax],al
   14000d5e0:	xor    al,0xfb
	...
   14000d5ea:	add    BYTE PTR [rax],al
   14000d5ec:	add    eax,DWORD PTR [rax]
   14000d5ee:	add    BYTE PTR [rax],al
   14000d5f0:	cmp    al,0xfb
   14000d5f2:	add    BYTE PTR [rax],al
   14000d5f4:	and    BYTE PTR [rax],al
   14000d5f6:	add    BYTE PTR [rax],al
   14000d5f8:	add    BYTE PTR [rax],al
   14000d5fa:	add    BYTE PTR [rax],al
   14000d5fc:	add    DWORD PTR [rax],eax
   14000d5fe:	add    BYTE PTR [rax],al
   14000d600:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ef99
   14000d606:	add    BYTE PTR [rax],al
   14000d608:	mov    ebx,?
	...
   14000d612:	add    BYTE PTR [rax],al
   14000d614:	add    eax,DWORD PTR [rax]
   14000d616:	add    BYTE PTR [rax],al
   14000d618:	xchg   esp,eax
   14000d619:	sti    
   14000d61a:	add    BYTE PTR [rax],al
   14000d61c:	and    BYTE PTR [rax],al
   14000d61e:	add    BYTE PTR [rax],al
   14000d620:	add    BYTE PTR [rax],al
   14000d622:	add    BYTE PTR [rax],al
   14000d624:	add    DWORD PTR [rax],eax
   14000d626:	add    BYTE PTR [rax],al
   14000d628:	and    al,BYTE PTR [rip+0x11993]        # 0x14001efc1
   14000d62e:	add    BYTE PTR [rax],al
   14000d630:	shl    ah,0x0
	...
   14000d63b:	add    BYTE PTR [rax+rax*1],al
   14000d63e:	add    BYTE PTR [rax],al
   14000d640:	enter  0xf4,0x0
   14000d644:	and    BYTE PTR [rax],al
   14000d646:	add    BYTE PTR [rax],al
   14000d648:	add    BYTE PTR [rax],al
   14000d64a:	add    BYTE PTR [rax],al
   14000d64c:	add    DWORD PTR [rax],eax
   14000d64e:	add    BYTE PTR [rax],al
   14000d650:	and    al,BYTE PTR [rip+0x21993]        # 0x14002efe9
   14000d656:	add    BYTE PTR [rax],al
   14000d658:	fdivr  st,st(3)
   14000d65a:	add    BYTE PTR [rax],al
   14000d65c:	add    DWORD PTR [rax],eax
   14000d65e:	add    BYTE PTR [rax],al
   14000d660:	call   0x14800d760
   14000d665:	add    BYTE PTR [rax],al
   14000d667:	add    BYTE PTR [rax],bh
   14000d669:	cld    
   14000d66a:	add    BYTE PTR [rax],al
   14000d66c:	and    BYTE PTR [rax],al
   14000d66e:	add    BYTE PTR [rax],al
   14000d670:	add    BYTE PTR [rax],al
   14000d672:	add    BYTE PTR [rax],al
   14000d674:	add    DWORD PTR [rax],eax
   14000d676:	add    BYTE PTR [rax],al
   14000d678:	and    al,BYTE PTR [rip+0x21993]        # 0x14002f011
   14000d67e:	add    BYTE PTR [rax],al
   14000d680:	enter  0xee,0x0
   14000d684:	add    DWORD PTR [rax],eax
   14000d686:	add    BYTE PTR [rax],al
   14000d688:	fsubr  st,st(6)
   14000d68a:	add    BYTE PTR [rax],al
   14000d68c:	add    eax,0x0
   14000d691:	out    dx,eax
   14000d692:	add    BYTE PTR [rax],al
   14000d694:	and    BYTE PTR [rax],al
   14000d696:	add    BYTE PTR [rax],al
   14000d698:	add    BYTE PTR [rax],al
   14000d69a:	add    BYTE PTR [rax],al
   14000d69c:	add    DWORD PTR [rax],eax
   14000d69e:	add    BYTE PTR [rax],al
   14000d6a0:	and    al,BYTE PTR [rip+0x21993]        # 0x14002f039
   14000d6a6:	add    BYTE PTR [rax],al
   14000d6a8:	rex.W out dx,al
   14000d6aa:	add    BYTE PTR [rax],al
   14000d6ac:	add    DWORD PTR [rax],eax
   14000d6ae:	add    BYTE PTR [rax],al
   14000d6b0:	pop    rax
   14000d6b1:	out    dx,al
   14000d6b2:	add    BYTE PTR [rax],al
   14000d6b4:	add    eax,0x80000000
   14000d6b9:	out    dx,al
   14000d6ba:	add    BYTE PTR [rax],al
   14000d6bc:	xor    BYTE PTR [rax],al
   14000d6be:	add    BYTE PTR [rax],al
   14000d6c0:	add    BYTE PTR [rax],al
   14000d6c2:	add    BYTE PTR [rax],al
   14000d6c4:	add    DWORD PTR [rax],eax
   14000d6c6:	add    BYTE PTR [rax],al
   14000d6c8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002f061
   14000d6ce:	add    BYTE PTR [rax],al
   14000d6d0:	sar    ah,0x0
   14000d6d3:	add    BYTE PTR [rcx],al
   14000d6d5:	add    BYTE PTR [rax],al
   14000d6d7:	add    al,dl
   14000d6d9:	cld    
   14000d6da:	add    BYTE PTR [rax],al
   14000d6dc:	(bad)  
   14000d6dd:	add    BYTE PTR [rax],al
   14000d6df:	add    al,bh
   14000d6e1:	cld    
   14000d6e2:	add    BYTE PTR [rax],al
   14000d6e4:	and    BYTE PTR [rax],al
   14000d6e6:	add    BYTE PTR [rax],al
   14000d6e8:	add    BYTE PTR [rax],al
   14000d6ea:	add    BYTE PTR [rax],al
   14000d6ec:	add    DWORD PTR [rax],eax
   14000d6ee:	add    BYTE PTR [rax],al
   14000d6f0:	and    al,BYTE PTR [rip+0x21993]        # 0x14002f089
   14000d6f6:	add    BYTE PTR [rax],al
   14000d6f8:	push   rsp
   14000d6f9:	std    
   14000d6fa:	add    BYTE PTR [rax],al
   14000d6fc:	add    DWORD PTR [rax],eax
   14000d6fe:	add    BYTE PTR [rax],al
   14000d700:	fs std 
   14000d702:	add    BYTE PTR [rax],al
   14000d704:	(bad)  
   14000d705:	add    BYTE PTR [rax],al
   14000d707:	add    BYTE PTR [rbp+rdi*8+0x200000],cl
   14000d70e:	add    BYTE PTR [rax],al
   14000d710:	add    BYTE PTR [rax],al
   14000d712:	add    BYTE PTR [rax],al
   14000d714:	add    DWORD PTR [rax],eax
   14000d716:	add    BYTE PTR [rax],al
   14000d718:	and    al,BYTE PTR [rip+0x21993]        # 0x14002f0b1
   14000d71e:	add    BYTE PTR [rax],al
   14000d720:	jl     0x14000d70f
   14000d722:	add    BYTE PTR [rax],al
   14000d724:	add    DWORD PTR [rax],eax
   14000d726:	add    BYTE PTR [rax],al
   14000d728:	mov    ebp,gs
   14000d72a:	add    BYTE PTR [rax],al
   14000d72c:	(bad)  
   14000d72d:	add    BYTE PTR [rax],al
   14000d72f:	add    BYTE PTR [rbp+rbp*8+0x200000],dh
   14000d736:	add    BYTE PTR [rax],al
   14000d738:	add    BYTE PTR [rax],al
   14000d73a:	add    BYTE PTR [rax],al
   14000d73c:	add    DWORD PTR [rax],eax
   14000d73e:	add    BYTE PTR [rax],al
   14000d740:	and    al,BYTE PTR [rip+0xd1993]        # 0x1400df0d9
   14000d746:	add    BYTE PTR [rax],al
   14000d748:	je     0x14000d733
	...
   14000d752:	add    BYTE PTR [rax],al
   14000d754:	sub    BYTE PTR [rax],al
   14000d756:	add    BYTE PTR [rax],al
   14000d758:	fsub   st(1),st
   14000d75a:	add    BYTE PTR [rax],al
   14000d75c:	mov    al,0x0
   14000d75e:	add    BYTE PTR [rax],al
   14000d760:	add    BYTE PTR [rax],al
   14000d762:	add    BYTE PTR [rax],al
   14000d764:	add    DWORD PTR [rax],eax
	...
   14000d772:	add    BYTE PTR [rax],al
   14000d774:	stos   DWORD PTR es:[rdi],eax
   14000d775:	cmp    DWORD PTR [rdi+0x55],ebx
   14000d77b:	add    BYTE PTR [rdx],al
   14000d77d:	add    BYTE PTR [rax],al
   14000d77f:	add    BYTE PTR [rbx],ah
   14000d781:	add    BYTE PTR [rax],al
   14000d783:	add    BYTE PTR [rax],al
   14000d785:	in     eax,0x0
   14000d787:	add    BYTE PTR [rax],al
   14000d789:	rol    DWORD PTR [rax],1
   14000d78b:	add    BYTE PTR [rax],al
   14000d78d:	add    BYTE PTR [rax],al
   14000d78f:	add    BYTE PTR [rbx+0x559f39],ch
   14000d795:	add    BYTE PTR [rax],al
   14000d797:	add    BYTE PTR [rip+0xffffffffb0000000],cl        # 0xf000d79d
   14000d79d:	add    eax,DWORD PTR [rax]
   14000d79f:	add    BYTE PTR [rax],bh
   14000d7a1:	in     eax,0x0
   14000d7a3:	add    BYTE PTR [rax],bh
   14000d7a5:	rol    DWORD PTR [rax],1
	...
   14000d7cf:	add    BYTE PTR [rax+0x0],ah
	...
   14000d825:	add    BYTE PTR [rax],al
   14000d827:	add    BYTE PTR [rax],ch
   14000d829:	and    BYTE PTR [rcx],al
   14000d82b:	rex add DWORD PTR [rax],eax
	...
   14000d83e:	add    BYTE PTR [rax],al
   14000d840:	shl    BYTE PTR [rbx+0x14000],1
   14000d846:	add    BYTE PTR [rax],al
   14000d848:	fdiv   DWORD PTR [rbx+0x14000]
   14000d84e:	add    BYTE PTR [rax],al
   14000d850:	rex.W mov spl,0x0
   14000d853:	rex add DWORD PTR [rax],eax
   14000d856:	add    BYTE PTR [rax],al
   14000d858:	push   0x0
   14000d85a:	add    BYTE PTR [rax],al
   14000d85c:	add    BYTE PTR [rax],al
   14000d85e:	add    BYTE PTR [rax],al
   14000d860:	add    BYTE PTR [rip+0x0],dh        # 0x14000d866
	...
   14000d86e:	add    BYTE PTR [rax],al
   14000d870:	rex.RB push r12
   14000d872:	push   rdi
   14000d873:	xor    BYTE PTR [rax],dl
   14000d875:	add    BYTE PTR [rax],al
   14000d877:	add    DWORD PTR [rsi+0x2b88040e],eax
   14000d87d:	add    eax,0xb03bb8a
   14000d882:	add    eax,0x0
   14000d887:	add    BYTE PTR [rax],al
   14000d889:	and    BYTE PTR [rax],al
   14000d88b:	add    bh,dh
   14000d88d:	add    BYTE PTR [rax],al
   14000d88f:	rex.RX (bad) 
   14000d891:	ins    BYTE PTR es:[rdi],dx
   14000d892:	ins    BYTE PTR es:[rdi],dx
   14000d893:	(bad)  
   14000d895:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000d898:	jb     0x14000d90c
   14000d89a:	outs   dx,DWORD PTR ds:[rsi]
   14000d89b:	jb     0x14000d89d
   14000d89d:	ja     0x14000d908
   14000d89f:	ins    BYTE PTR es:[rdi],dx
   14000d8a0:	push   rdx
   14000d8a1:	gs jae 0x14000d919
   14000d8a4:	ins    BYTE PTR es:[rdi],dx
   14000d8a5:	je     0x14000d8a7
   14000d8a7:	cwde   
   14000d8a8:	(bad)  
   14000d8a9:	push   0x75736572
   14000d8ae:	ins    BYTE PTR es:[rdi],dx
   14000d8af:	je     0x14000d8b1
   14000d8b1:	or     BYTE PTR [rsi+0x69],ah
   14000d8b4:	ins    BYTE PTR es:[rdi],dx
   14000d8b5:	gs rex.WRX (bad) 
   14000d8b8:	ins    DWORD PTR es:[rdi],dx
   14000d8b9:	add    BYTE PTR gs:[rdx],al
   14000d8bc:	ins    BYTE PTR es:[rdi],dx
   14000d8bd:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   14000d8c4:	gs jb  0x14000d8c7
   14000d8c7:	or     BYTE PTR [rbp+0x6f],ch
   14000d8ca:	fs jne 0x14000d939
   14000d8cd:	add    BYTE PTR gs:[rdx],al
   14000d8d0:	data16 (bad) 
   14000d8d2:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14000d8da:	add    BYTE PTR gs:[rax],cl
   14000d8dd:	ins    DWORD PTR es:[rdi],dx
   14000d8de:	gs jae 0x14000d954
   14000d8e1:	(bad)  
   14000d8e2:	add    BYTE PTR gs:[ecx],al
   14000d8e6:	je     0x14000d950
   14000d8e8:	jb     0x14000d94f
   14000d8ea:	(bad)  
   14000d8eb:	fs rex.WB
   14000d8ed:	add    BYTE PTR fs:[rax],cl
   14000d8f0:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d8f3:	ins    BYTE PTR es:[rdi],dx
   14000d8f4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d8f6:	outs   dx,BYTE PTR ds:[rsi]
   14000d8f7:	je     0x14000d95e
   14000d8f9:	js     0x14000d96f
   14000d8fb:	add    BYTE PTR [rdx],al
   14000d8fd:	outs   dx,DWORD PTR ds:[rsi]
   14000d8fe:	jb     0x14000d969
   14000d900:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000d908:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d90a:	outs   dx,BYTE PTR ds:[rsi]
   14000d90b:	je     0x14000d972
   14000d90d:	js     0x14000d983
   14000d90f:	rex.WB
   14000d910:	add    BYTE PTR fs:[rax],cl
   14000d913:	outs   dx,DWORD PTR ds:[rsi]
   14000d914:	jb     0x14000d97f
   14000d916:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000d91e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d920:	outs   dx,BYTE PTR ds:[rsi]
   14000d921:	je     0x14000d988
   14000d923:	js     0x14000d999
   14000d925:	rex.WRX (bad) 
   14000d927:	ins    DWORD PTR es:[rdi],dx
   14000d928:	add    BYTE PTR gs:[rdx],al
   14000d92b:	outs   dx,DWORD PTR ds:[rsi]
   14000d92c:	jb     0x14000d997
   14000d92e:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000d936:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d938:	outs   dx,BYTE PTR ds:[rsi]
   14000d939:	je     0x14000d9a0
   14000d93b:	js     0x14000d9b1
   14000d93d:	rex.WRB
   14000d93e:	gs jae 0x14000d9b4
   14000d941:	(bad)  
   14000d942:	add    BYTE PTR gs:[ecx],al
   14000d946:	movsxd esi,DWORD PTR [rbp+0x72]
   14000d949:	jb     0x14000d9b0
   14000d94b:	outs   dx,BYTE PTR ds:[rsi]
   14000d94c:	je     0x14000d991
   14000d94e:	outs   dx,DWORD PTR ds:[rsi]
   14000d94f:	outs   dx,BYTE PTR ds:[rsi]
   14000d950:	je     0x14000d9b7
   14000d952:	js     0x14000d9c8
   14000d954:	rex.WB
   14000d955:	add    BYTE PTR fs:[rax],cl
   14000d958:	movsxd esi,DWORD PTR [rbp+0x72]
   14000d95b:	jb     0x14000d9c2
   14000d95d:	outs   dx,BYTE PTR ds:[rsi]
   14000d95e:	je     0x14000d9a3
   14000d960:	outs   dx,DWORD PTR ds:[rsi]
   14000d961:	outs   dx,BYTE PTR ds:[rsi]
   14000d962:	je     0x14000d9c9
   14000d964:	js     0x14000d9da
   14000d966:	rex.WRX (bad) 
   14000d968:	ins    DWORD PTR es:[rdi],dx
   14000d969:	add    BYTE PTR gs:[rdx],al
   14000d96c:	movsxd esi,DWORD PTR [rbp+0x72]
   14000d96f:	jb     0x14000d9d6
   14000d971:	outs   dx,BYTE PTR ds:[rsi]
   14000d972:	je     0x14000d9b7
   14000d974:	outs   dx,DWORD PTR ds:[rsi]
   14000d975:	outs   dx,BYTE PTR ds:[rsi]
   14000d976:	je     0x14000d9dd
   14000d978:	js     0x14000d9ee
   14000d97a:	rex.WRB
   14000d97b:	gs jae 0x14000d9f1
   14000d97e:	(bad)  
   14000d97f:	add    BYTE PTR gs:[ecx],al
   14000d983:	add    ecx,DWORD PTR [rbx]
   14000d985:	add    eax,0x0
   14000d98a:	add    BYTE PTR [rax],al
   14000d98c:	add    BYTE PTR [rax],al
   14000d98e:	add    BYTE PTR [rdx],bl
   14000d990:	add    DWORD PTR [rax],eax
   14000d992:	rex.RX (bad) 
   14000d994:	ins    BYTE PTR es:[rdi],dx
   14000d995:	ins    BYTE PTR es:[rdi],dx
   14000d996:	(bad)  
   14000d998:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000d99b:	jb     0x14000da0f
   14000d99d:	outs   dx,DWORD PTR ds:[rsi]
   14000d99e:	jb     0x14000d9a0
   14000d9a0:	ja     0x14000da0b
   14000d9a2:	ins    BYTE PTR es:[rdi],dx
   14000d9a3:	push   rdx
   14000d9a4:	gs jae 0x14000da1c
   14000d9a7:	ins    BYTE PTR es:[rdi],dx
   14000d9a8:	je     0x14000d9aa
   14000d9aa:	cwde   
   14000d9ab:	adc    DWORD PTR [rax+0x72],ebp
   14000d9ae:	gs jae 0x14000da26
   14000d9b1:	ins    BYTE PTR es:[rdi],dx
   14000d9b2:	je     0x14000d9b4
   14000d9b4:	or     BYTE PTR [rsi+0x69],ah
   14000d9b7:	ins    BYTE PTR es:[rdi],dx
   14000d9b8:	gs rex.WRX (bad) 
   14000d9bb:	ins    DWORD PTR es:[rdi],dx
   14000d9bc:	add    BYTE PTR gs:[rdx],al
   14000d9bf:	ins    BYTE PTR es:[rdi],dx
   14000d9c0:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   14000d9c7:	gs jb  0x14000d9ca
   14000d9ca:	or     BYTE PTR [rbp+0x6f],ch
   14000d9cd:	fs jne 0x14000da3c
   14000d9d0:	add    BYTE PTR gs:[rdx],al
   14000d9d3:	data16 (bad) 
   14000d9d5:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14000d9dd:	add    BYTE PTR gs:[rax],cl
   14000d9e0:	ins    DWORD PTR es:[rdi],dx
   14000d9e1:	gs jae 0x14000da57
   14000d9e4:	(bad)  
   14000d9e5:	add    BYTE PTR gs:[ecx],al
   14000d9e9:	je     0x14000da53
   14000d9eb:	jb     0x14000da52
   14000d9ed:	(bad)  
   14000d9ee:	fs rex.WB
   14000d9f0:	add    BYTE PTR fs:[rax],cl
   14000d9f3:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d9f6:	ins    BYTE PTR es:[rdi],dx
   14000d9f7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d9f9:	outs   dx,BYTE PTR ds:[rsi]
   14000d9fa:	je     0x14000da61
   14000d9fc:	js     0x14000da72
   14000d9fe:	add    BYTE PTR [rdx],al
   14000da00:	outs   dx,DWORD PTR ds:[rsi]
   14000da01:	jb     0x14000da6c
   14000da03:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000da0b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000da0d:	outs   dx,BYTE PTR ds:[rsi]
   14000da0e:	je     0x14000da75
   14000da10:	js     0x14000da86
   14000da12:	rex.WB
   14000da13:	add    BYTE PTR fs:[rax],cl
   14000da16:	outs   dx,DWORD PTR ds:[rsi]
   14000da17:	jb     0x14000da82
   14000da19:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000da21:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000da23:	outs   dx,BYTE PTR ds:[rsi]
   14000da24:	je     0x14000da8b
   14000da26:	js     0x14000da9c
   14000da28:	rex.WRX (bad) 
   14000da2a:	ins    DWORD PTR es:[rdi],dx
   14000da2b:	add    BYTE PTR gs:[rdx],al
   14000da2e:	outs   dx,DWORD PTR ds:[rsi]
   14000da2f:	jb     0x14000da9a
   14000da31:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000da39:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000da3b:	outs   dx,BYTE PTR ds:[rsi]
   14000da3c:	je     0x14000daa3
   14000da3e:	js     0x14000dab4
   14000da40:	rex.WRB
   14000da41:	gs jae 0x14000dab7
   14000da44:	(bad)  
   14000da45:	add    BYTE PTR gs:[ecx],al
   14000da49:	movsxd esi,DWORD PTR [rbp+0x72]
   14000da4c:	jb     0x14000dab3
   14000da4e:	outs   dx,BYTE PTR ds:[rsi]
   14000da4f:	je     0x14000da94
   14000da51:	outs   dx,DWORD PTR ds:[rsi]
   14000da52:	outs   dx,BYTE PTR ds:[rsi]
   14000da53:	je     0x14000daba
   14000da55:	js     0x14000dacb
   14000da57:	rex.WB
   14000da58:	add    BYTE PTR fs:[rax],cl
   14000da5b:	movsxd esi,DWORD PTR [rbp+0x72]
   14000da5e:	jb     0x14000dac5
   14000da60:	outs   dx,BYTE PTR ds:[rsi]
   14000da61:	je     0x14000daa6
   14000da63:	outs   dx,DWORD PTR ds:[rsi]
   14000da64:	outs   dx,BYTE PTR ds:[rsi]
   14000da65:	je     0x14000dacc
   14000da67:	js     0x14000dadd
   14000da69:	rex.WRX (bad) 
   14000da6b:	ins    DWORD PTR es:[rdi],dx
   14000da6c:	add    BYTE PTR gs:[rdx],al
   14000da6f:	movsxd esi,DWORD PTR [rbp+0x72]
   14000da72:	jb     0x14000dad9
   14000da74:	outs   dx,BYTE PTR ds:[rsi]
   14000da75:	je     0x14000daba
   14000da77:	outs   dx,DWORD PTR ds:[rsi]
   14000da78:	outs   dx,BYTE PTR ds:[rsi]
   14000da79:	je     0x14000dae0
   14000da7b:	js     0x14000daf1
   14000da7d:	rex.WRB
   14000da7e:	gs jae 0x14000daf4
   14000da81:	(bad)  
   14000da82:	add    BYTE PTR gs:[ecx],al
   14000da86:	data16 (bad) 
   14000da88:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x644965
   14000da90:	or     BYTE PTR [rsi+0x61],ah
   14000da93:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x756f4365
   14000da9b:	outs   dx,BYTE PTR ds:[rsi]
   14000da9c:	je     0x14000da9e
   14000da9e:	or     BYTE PTR [rsi+0x75],ah
   14000daa1:	outs   dx,BYTE PTR ds:[rsi]
   14000daa2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000daa6:	outs   dx,BYTE PTR ds:[rsi]
   14000daa7:	add    BYTE PTR [rdx],al
   14000daa9:	add    ecx,DWORD PTR [rbx]
   14000daab:	add    eax,0x1
   14000dab0:	add    BYTE PTR [rax],al
   14000dab2:	add    BYTE PTR [rax],al
   14000dab5:	and    eax,DWORD PTR [rax]
   14000dab7:	add    BYTE PTR [rbx+0x6c],al
   14000daba:	gs (bad) 
   14000dabc:	outs   dx,BYTE PTR ds:[rsi]
   14000dabd:	jne    0x14000db2f
   14000dabf:	add    BYTE PTR [rdi+0x69],dh
   14000dac2:	ins    BYTE PTR es:[rdi],dx
   14000dac3:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000dac8:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x68740198
   14000dad0:	jb     0x14000db37
   14000dad2:	(bad)  
   14000dad3:	fs rex.WB
   14000dad5:	add    BYTE PTR fs:[rax],cl
   14000dad8:	add    ecx,DWORD PTR [rbx]
   14000dada:	add    eax,0x1
   14000dadf:	add    BYTE PTR [rax],al
   14000dae1:	add    BYTE PTR [rax],al
   14000dae4:	sub    al,BYTE PTR [rax]
   14000dae6:	add    BYTE PTR [rax+0x6f],dl
   14000dae9:	jae    0x14000db5f
   14000daeb:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000daed:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000daf5:	add    BYTE PTR [rdi+0x69],dh
   14000daf8:	ins    BYTE PTR es:[rdi],dx
   14000daf9:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000dafe:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x68740198
   14000db06:	jb     0x14000db6d
   14000db08:	(bad)  
   14000db09:	fs rex.WB
   14000db0b:	add    BYTE PTR fs:[rax],cl
   14000db0e:	add    ecx,DWORD PTR [rbx]
   14000db10:	add    eax,0x1
   14000db15:	add    BYTE PTR [rax],al
   14000db17:	add    BYTE PTR [rax],al
   14000db1a:	add    BYTE PTR ss:[rax],al
   14000db1d:	push   rbx
   14000db1e:	je     0x14000db81
   14000db20:	jb     0x14000db96
   14000db22:	push   rbx
   14000db23:	gs jb  0x14000db9c
   14000db26:	imul   esp,DWORD PTR [rbx+0x65],0x74736f48
   14000db2d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000db2f:	outs   dx,BYTE PTR ds:[rsi]
   14000db30:	je     0x14000dba4
   14000db32:	outs   dx,DWORD PTR ds:[rsi]
   14000db33:	ins    BYTE PTR es:[rdi],dx
   14000db34:	ins    BYTE PTR es:[rdi],dx
   14000db35:	gs jb  0x14000db38
   14000db38:	ja     0x14000dba3
   14000db3a:	ins    BYTE PTR es:[rdi],dx
   14000db3b:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000db40:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x68740198
   14000db48:	jb     0x14000dbaf
   14000db4a:	(bad)  
   14000db4b:	fs rex.WB
   14000db4d:	add    BYTE PTR fs:[rax],cl
   14000db50:	add    ecx,DWORD PTR [rbx]
   14000db52:	add    eax,0x1
   14000db57:	add    BYTE PTR [rax],al
   14000db59:	add    BYTE PTR [rax],al
   14000db5c:	sub    DWORD PTR [rax],eax
   14000db5e:	add    BYTE PTR [rax+0x72],dl
   14000db61:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14000db64:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000db6c:	add    BYTE PTR [rdi+0x69],dh
   14000db6f:	ins    BYTE PTR es:[rdi],dx
   14000db70:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000db75:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x68740198
   14000db7d:	jb     0x14000dbe4
   14000db7f:	(bad)  
   14000db80:	fs rex.WB
   14000db82:	add    BYTE PTR fs:[rax],cl
   14000db85:	add    ecx,DWORD PTR [rbx]
   14000db87:	add    eax,0x0
   14000db8c:	add    BYTE PTR [rax],al
   14000db8e:	add    BYTE PTR [rax],al
   14000db91:	adc    al,BYTE PTR [rax]
   14000db93:	add    BYTE PTR [rbx+0x49],dl
   14000db96:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000db98:	jae    0x14000dc0e
   14000db9a:	rex.RB js 0x14000dc06
   14000db9d:	je     0x14000db9f
   14000db9f:	push   0x3070072
   14000dba4:	or     eax,DWORD PTR [rip+0x0]        # 0x14000dbaa
   14000dbaa:	add    BYTE PTR [rax],al
   14000dbac:	add    BYTE PTR [rax],al
   14000dbaf:	sldt   WORD PTR [rax]
   14000dbb2:	push   rbx
   14000dbb3:	rex.WB
   14000dbb4:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000dbb6:	jae    0x14000dc2c
   14000dbb8:	push   rbx
   14000dbb9:	je     0x14000dc1c
   14000dbbb:	jb     0x14000dc31
   14000dbbd:	add    BYTE PTR [rbx],al
   14000dbbf:	or     eax,DWORD PTR [rip+0x2]        # 0x14000dbc7
   14000dbc5:	add    BYTE PTR [rax],al
   14000dbc7:	add    BYTE PTR [rax],al
   14000dbca:	repz add BYTE PTR [rax],al
   14000dbcd:	rex.XB ins BYTE PTR es:[rdi],dx
   14000dbcf:	gs (bad) 
   14000dbd1:	outs   dx,BYTE PTR ds:[rsi]
   14000dbd2:	jne    0x14000dc44
   14000dbd4:	add    BYTE PTR [rdi+0x69],dh
   14000dbd7:	ins    BYTE PTR es:[rdi],dx
   14000dbd8:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000dbdd:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680e98
   14000dbe5:	gs jae 0x14000dc5d
   14000dbe8:	ins    BYTE PTR es:[rdi],dx
   14000dbe9:	je     0x14000dbeb
   14000dbeb:	or     BYTE PTR [rsi+0x69],ah
   14000dbee:	ins    BYTE PTR es:[rdi],dx
   14000dbef:	gs rex.WRX (bad) 
   14000dbf2:	ins    DWORD PTR es:[rdi],dx
   14000dbf3:	add    BYTE PTR gs:[rdx],al
   14000dbf6:	ins    BYTE PTR es:[rdi],dx
   14000dbf7:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   14000dbfe:	gs jb  0x14000dc01
   14000dc01:	or     BYTE PTR [rbp+0x6f],ch
   14000dc04:	fs jne 0x14000dc73
   14000dc07:	add    BYTE PTR gs:[rdx],al
   14000dc0a:	data16 (bad) 
   14000dc0c:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14000dc14:	add    BYTE PTR gs:[rax],cl
   14000dc17:	ins    DWORD PTR es:[rdi],dx
   14000dc18:	gs jae 0x14000dc8e
   14000dc1b:	(bad)  
   14000dc1c:	add    BYTE PTR gs:[ecx],al
   14000dc20:	je     0x14000dc8a
   14000dc22:	jb     0x14000dc89
   14000dc24:	(bad)  
   14000dc25:	fs rex.WB
   14000dc27:	add    BYTE PTR fs:[rax],cl
   14000dc2a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000dc2d:	ins    BYTE PTR es:[rdi],dx
   14000dc2e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000dc30:	outs   dx,BYTE PTR ds:[rsi]
   14000dc31:	je     0x14000dc98
   14000dc33:	js     0x14000dca9
   14000dc35:	add    BYTE PTR [rdx],al
   14000dc37:	outs   dx,DWORD PTR ds:[rsi]
   14000dc38:	jb     0x14000dca3
   14000dc3a:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000dc42:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000dc44:	outs   dx,BYTE PTR ds:[rsi]
   14000dc45:	je     0x14000dcac
   14000dc47:	js     0x14000dcbd
   14000dc49:	rex.WB
   14000dc4a:	add    BYTE PTR fs:[rax],cl
   14000dc4d:	outs   dx,DWORD PTR ds:[rsi]
   14000dc4e:	jb     0x14000dcb9
   14000dc50:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000dc58:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000dc5a:	outs   dx,BYTE PTR ds:[rsi]
   14000dc5b:	je     0x14000dcc2
   14000dc5d:	js     0x14000dcd3
   14000dc5f:	rex.WRX (bad) 
   14000dc61:	ins    DWORD PTR es:[rdi],dx
   14000dc62:	add    BYTE PTR gs:[rdx],al
   14000dc65:	outs   dx,DWORD PTR ds:[rsi]
   14000dc66:	jb     0x14000dcd1
   14000dc68:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000dc70:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000dc72:	outs   dx,BYTE PTR ds:[rsi]
   14000dc73:	je     0x14000dcda
   14000dc75:	js     0x14000dceb
   14000dc77:	rex.WRB
   14000dc78:	gs jae 0x14000dcee
   14000dc7b:	(bad)  
   14000dc7c:	add    BYTE PTR gs:[ecx],al
   14000dc80:	movsxd esi,DWORD PTR [rbp+0x72]
   14000dc83:	jb     0x14000dcea
   14000dc85:	outs   dx,BYTE PTR ds:[rsi]
   14000dc86:	je     0x14000dccb
   14000dc88:	outs   dx,DWORD PTR ds:[rsi]
   14000dc89:	outs   dx,BYTE PTR ds:[rsi]
   14000dc8a:	je     0x14000dcf1
   14000dc8c:	js     0x14000dd02
   14000dc8e:	rex.WB
   14000dc8f:	add    BYTE PTR fs:[rax],cl
   14000dc92:	movsxd esi,DWORD PTR [rbp+0x72]
   14000dc95:	jb     0x14000dcfc
   14000dc97:	outs   dx,BYTE PTR ds:[rsi]
   14000dc98:	je     0x14000dcdd
   14000dc9a:	outs   dx,DWORD PTR ds:[rsi]
   14000dc9b:	outs   dx,BYTE PTR ds:[rsi]
   14000dc9c:	je     0x14000dd03
   14000dc9e:	js     0x14000dd14
   14000dca0:	rex.WRX (bad) 
   14000dca2:	ins    DWORD PTR es:[rdi],dx
   14000dca3:	add    BYTE PTR gs:[rdx],al
   14000dca6:	movsxd esi,DWORD PTR [rbp+0x72]
   14000dca9:	jb     0x14000dd10
   14000dcab:	outs   dx,BYTE PTR ds:[rsi]
   14000dcac:	je     0x14000dcf1
   14000dcae:	outs   dx,DWORD PTR ds:[rsi]
   14000dcaf:	outs   dx,BYTE PTR ds:[rsi]
   14000dcb0:	je     0x14000dd17
   14000dcb2:	js     0x14000dd28
   14000dcb4:	rex.WRB
   14000dcb5:	gs jae 0x14000dd2b
   14000dcb8:	(bad)  
   14000dcb9:	add    BYTE PTR gs:[ecx],al
   14000dcbd:	add    ecx,DWORD PTR [rbx]
   14000dcbf:	add    eax,0x2
   14000dcc4:	add    BYTE PTR [rax],al
   14000dcc6:	add    BYTE PTR [rax],al
   14000dcc9:	sub    al,0x0
   14000dccb:	add    BYTE PTR [rbx+0x6c],al
   14000dcce:	gs (bad) 
   14000dcd0:	outs   dx,BYTE PTR ds:[rsi]
   14000dcd1:	jne    0x14000dd43
   14000dcd3:	add    BYTE PTR [rdi+0x69],dh
   14000dcd6:	ins    BYTE PTR es:[rdi],dx
   14000dcd7:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000dcdc:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680298
   14000dce4:	gs jae 0x14000dd5c
   14000dce7:	ins    BYTE PTR es:[rdi],dx
   14000dce8:	je     0x14000dcea
   14000dcea:	or     BYTE PTR [rax+rbp*2+0x72],dh
   14000dcee:	gs (bad) 
   14000dcf0:	fs rex.WB
   14000dcf2:	add    BYTE PTR fs:[rax],cl
   14000dcf5:	add    ecx,DWORD PTR [rbx]
   14000dcf7:	add    eax,0x0
   14000dcfc:	add    BYTE PTR [rax],al
   14000dcfe:	add    BYTE PTR [rax],al
   14000dd01:	sldt   WORD PTR [rax]
   14000dd04:	push   rbx
   14000dd05:	rex.WB
   14000dd06:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000dd08:	jae    0x14000dd7e
   14000dd0a:	push   rdx
   14000dd0b:	gs (bad) 
   14000dd0d:	fs jns 0x14000dd10
   14000dd10:	add    ecx,DWORD PTR [rbx]
   14000dd12:	add    eax,0x2
   14000dd17:	add    BYTE PTR [rax],al
   14000dd19:	add    BYTE PTR [rax],al
   14000dd1c:	cli    
   14000dd1d:	add    BYTE PTR [rax],al
   14000dd1f:	push   rax
   14000dd20:	outs   dx,DWORD PTR ds:[rsi]
   14000dd21:	jae    0x14000dd97
   14000dd23:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000dd25:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000dd2d:	add    BYTE PTR [rdi+0x69],dh
   14000dd30:	ins    BYTE PTR es:[rdi],dx
   14000dd31:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000dd36:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680e98
   14000dd3e:	gs jae 0x14000ddb6
   14000dd41:	ins    BYTE PTR es:[rdi],dx
   14000dd42:	je     0x14000dd44
   14000dd44:	or     BYTE PTR [rsi+0x69],ah
   14000dd47:	ins    BYTE PTR es:[rdi],dx
   14000dd48:	gs rex.WRX (bad) 
   14000dd4b:	ins    DWORD PTR es:[rdi],dx
   14000dd4c:	add    BYTE PTR gs:[rdx],al
   14000dd4f:	ins    BYTE PTR es:[rdi],dx
   14000dd50:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   14000dd57:	gs jb  0x14000dd5a
   14000dd5a:	or     BYTE PTR [rbp+0x6f],ch
   14000dd5d:	fs jne 0x14000ddcc
   14000dd60:	add    BYTE PTR gs:[rdx],al
   14000dd63:	data16 (bad) 
   14000dd65:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14000dd6d:	add    BYTE PTR gs:[rax],cl
   14000dd70:	ins    DWORD PTR es:[rdi],dx
   14000dd71:	gs jae 0x14000dde7
   14000dd74:	(bad)  
   14000dd75:	add    BYTE PTR gs:[ecx],al
   14000dd79:	je     0x14000dde3
   14000dd7b:	jb     0x14000dde2
   14000dd7d:	(bad)  
   14000dd7e:	fs rex.WB
   14000dd80:	add    BYTE PTR fs:[rax],cl
   14000dd83:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000dd86:	ins    BYTE PTR es:[rdi],dx
   14000dd87:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000dd89:	outs   dx,BYTE PTR ds:[rsi]
   14000dd8a:	je     0x14000ddf1
   14000dd8c:	js     0x14000de02
   14000dd8e:	add    BYTE PTR [rdx],al
   14000dd90:	outs   dx,DWORD PTR ds:[rsi]
   14000dd91:	jb     0x14000ddfc
   14000dd93:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000dd9b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000dd9d:	outs   dx,BYTE PTR ds:[rsi]
   14000dd9e:	je     0x14000de05
   14000dda0:	js     0x14000de16
   14000dda2:	rex.WB
   14000dda3:	add    BYTE PTR fs:[rax],cl
   14000dda6:	outs   dx,DWORD PTR ds:[rsi]
   14000dda7:	jb     0x14000de12
   14000dda9:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000ddb1:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ddb3:	outs   dx,BYTE PTR ds:[rsi]
   14000ddb4:	je     0x14000de1b
   14000ddb6:	js     0x14000de2c
   14000ddb8:	rex.WRX (bad) 
   14000ddba:	ins    DWORD PTR es:[rdi],dx
   14000ddbb:	add    BYTE PTR gs:[rdx],al
   14000ddbe:	outs   dx,DWORD PTR ds:[rsi]
   14000ddbf:	jb     0x14000de2a
   14000ddc1:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000ddc9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ddcb:	outs   dx,BYTE PTR ds:[rsi]
   14000ddcc:	je     0x14000de33
   14000ddce:	js     0x14000de44
   14000ddd0:	rex.WRB
   14000ddd1:	gs jae 0x14000de47
   14000ddd4:	(bad)  
   14000ddd5:	add    BYTE PTR gs:[ecx],al
   14000ddd9:	movsxd esi,DWORD PTR [rbp+0x72]
   14000dddc:	jb     0x14000de43
   14000ddde:	outs   dx,BYTE PTR ds:[rsi]
   14000dddf:	je     0x14000de24
   14000dde1:	outs   dx,DWORD PTR ds:[rsi]
   14000dde2:	outs   dx,BYTE PTR ds:[rsi]
   14000dde3:	je     0x14000de4a
   14000dde5:	js     0x14000de5b
   14000dde7:	rex.WB
   14000dde8:	add    BYTE PTR fs:[rax],cl
   14000ddeb:	movsxd esi,DWORD PTR [rbp+0x72]
   14000ddee:	jb     0x14000de55
   14000ddf0:	outs   dx,BYTE PTR ds:[rsi]
   14000ddf1:	je     0x14000de36
   14000ddf3:	outs   dx,DWORD PTR ds:[rsi]
   14000ddf4:	outs   dx,BYTE PTR ds:[rsi]
   14000ddf5:	je     0x14000de5c
   14000ddf7:	js     0x14000de6d
   14000ddf9:	rex.WRX (bad) 
   14000ddfb:	ins    DWORD PTR es:[rdi],dx
   14000ddfc:	add    BYTE PTR gs:[rdx],al
   14000ddff:	movsxd esi,DWORD PTR [rbp+0x72]
   14000de02:	jb     0x14000de69
   14000de04:	outs   dx,BYTE PTR ds:[rsi]
   14000de05:	je     0x14000de4a
   14000de07:	outs   dx,DWORD PTR ds:[rsi]
   14000de08:	outs   dx,BYTE PTR ds:[rsi]
   14000de09:	je     0x14000de70
   14000de0b:	js     0x14000de81
   14000de0d:	rex.WRB
   14000de0e:	gs jae 0x14000de84
   14000de11:	(bad)  
   14000de12:	add    BYTE PTR gs:[ecx],al
   14000de16:	add    ecx,DWORD PTR [rbx]
   14000de18:	add    eax,0x2
   14000de1d:	add    BYTE PTR [rax],al
   14000de1f:	add    BYTE PTR [rax],al
   14000de22:	xor    eax,DWORD PTR [rax]
   14000de24:	add    BYTE PTR [rax+0x6f],dl
   14000de27:	jae    0x14000de9d
   14000de29:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000de2b:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000de33:	add    BYTE PTR [rdi+0x69],dh
   14000de36:	ins    BYTE PTR es:[rdi],dx
   14000de37:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000de3c:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680298
   14000de44:	gs jae 0x14000debc
   14000de47:	ins    BYTE PTR es:[rdi],dx
   14000de48:	je     0x14000de4a
   14000de4a:	or     BYTE PTR [rax+rbp*2+0x72],dh
   14000de4e:	gs (bad) 
   14000de50:	fs rex.WB
   14000de52:	add    BYTE PTR fs:[rax],cl
   14000de55:	add    ecx,DWORD PTR [rbx]
   14000de57:	add    eax,0x2
   14000de5c:	add    BYTE PTR [rax],al
   14000de5e:	add    BYTE PTR [rax],al
   14000de61:	(bad)  
   14000de62:	add    DWORD PTR [rax],eax
   14000de64:	push   rbx
   14000de65:	je     0x14000dec8
   14000de67:	jb     0x14000dedd
   14000de69:	push   rbx
   14000de6a:	gs jb  0x14000dee3
   14000de6d:	imul   esp,DWORD PTR [rbx+0x65],0x74736f48
   14000de74:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000de76:	outs   dx,BYTE PTR ds:[rsi]
   14000de77:	je     0x14000deeb
   14000de79:	outs   dx,DWORD PTR ds:[rsi]
   14000de7a:	ins    BYTE PTR es:[rdi],dx
   14000de7b:	ins    BYTE PTR es:[rdi],dx
   14000de7c:	gs jb  0x14000de7f
   14000de7f:	ja     0x14000deea
   14000de81:	ins    BYTE PTR es:[rdi],dx
   14000de82:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000de87:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680e98
   14000de8f:	gs jae 0x14000df07
   14000de92:	ins    BYTE PTR es:[rdi],dx
   14000de93:	je     0x14000de95
   14000de95:	or     BYTE PTR [rsi+0x69],ah
   14000de98:	ins    BYTE PTR es:[rdi],dx
   14000de99:	gs rex.WRX (bad) 
   14000de9c:	ins    DWORD PTR es:[rdi],dx
   14000de9d:	add    BYTE PTR gs:[rdx],al
   14000dea0:	ins    BYTE PTR es:[rdi],dx
   14000dea1:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   14000dea8:	gs jb  0x14000deab
   14000deab:	or     BYTE PTR [rbp+0x6f],ch
   14000deae:	fs jne 0x14000df1d
   14000deb1:	add    BYTE PTR gs:[rdx],al
   14000deb4:	data16 (bad) 
   14000deb6:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14000debe:	add    BYTE PTR gs:[rax],cl
   14000dec1:	ins    DWORD PTR es:[rdi],dx
   14000dec2:	gs jae 0x14000df38
   14000dec5:	(bad)  
   14000dec6:	add    BYTE PTR gs:[ecx],al
   14000deca:	je     0x14000df34
   14000decc:	jb     0x14000df33
   14000dece:	(bad)  
   14000decf:	fs rex.WB
   14000ded1:	add    BYTE PTR fs:[rax],cl
   14000ded4:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ded7:	ins    BYTE PTR es:[rdi],dx
   14000ded8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000deda:	outs   dx,BYTE PTR ds:[rsi]
   14000dedb:	je     0x14000df42
   14000dedd:	js     0x14000df53
   14000dedf:	add    BYTE PTR [rdx],al
   14000dee1:	outs   dx,DWORD PTR ds:[rsi]
   14000dee2:	jb     0x14000df4d
   14000dee4:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000deec:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000deee:	outs   dx,BYTE PTR ds:[rsi]
   14000deef:	je     0x14000df56
   14000def1:	js     0x14000df67
   14000def3:	rex.WB
   14000def4:	add    BYTE PTR fs:[rax],cl
   14000def7:	outs   dx,DWORD PTR ds:[rsi]
   14000def8:	jb     0x14000df63
   14000defa:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000df02:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000df04:	outs   dx,BYTE PTR ds:[rsi]
   14000df05:	je     0x14000df6c
   14000df07:	js     0x14000df7d
   14000df09:	rex.WRX (bad) 
   14000df0b:	ins    DWORD PTR es:[rdi],dx
   14000df0c:	add    BYTE PTR gs:[rdx],al
   14000df0f:	outs   dx,DWORD PTR ds:[rsi]
   14000df10:	jb     0x14000df7b
   14000df12:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000df1a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000df1c:	outs   dx,BYTE PTR ds:[rsi]
   14000df1d:	je     0x14000df84
   14000df1f:	js     0x14000df95
   14000df21:	rex.WRB
   14000df22:	gs jae 0x14000df98
   14000df25:	(bad)  
   14000df26:	add    BYTE PTR gs:[ecx],al
   14000df2a:	movsxd esi,DWORD PTR [rbp+0x72]
   14000df2d:	jb     0x14000df94
   14000df2f:	outs   dx,BYTE PTR ds:[rsi]
   14000df30:	je     0x14000df75
   14000df32:	outs   dx,DWORD PTR ds:[rsi]
   14000df33:	outs   dx,BYTE PTR ds:[rsi]
   14000df34:	je     0x14000df9b
   14000df36:	js     0x14000dfac
   14000df38:	rex.WB
   14000df39:	add    BYTE PTR fs:[rax],cl
   14000df3c:	movsxd esi,DWORD PTR [rbp+0x72]
   14000df3f:	jb     0x14000dfa6
   14000df41:	outs   dx,BYTE PTR ds:[rsi]
   14000df42:	je     0x14000df87
   14000df44:	outs   dx,DWORD PTR ds:[rsi]
   14000df45:	outs   dx,BYTE PTR ds:[rsi]
   14000df46:	je     0x14000dfad
   14000df48:	js     0x14000dfbe
   14000df4a:	rex.WRX (bad) 
   14000df4c:	ins    DWORD PTR es:[rdi],dx
   14000df4d:	add    BYTE PTR gs:[rdx],al
   14000df50:	movsxd esi,DWORD PTR [rbp+0x72]
   14000df53:	jb     0x14000dfba
   14000df55:	outs   dx,BYTE PTR ds:[rsi]
   14000df56:	je     0x14000df9b
   14000df58:	outs   dx,DWORD PTR ds:[rsi]
   14000df59:	outs   dx,BYTE PTR ds:[rsi]
   14000df5a:	je     0x14000dfc1
   14000df5c:	js     0x14000dfd2
   14000df5e:	rex.WRB
   14000df5f:	gs jae 0x14000dfd5
   14000df62:	(bad)  
   14000df63:	add    BYTE PTR gs:[ecx],al
   14000df67:	add    ecx,DWORD PTR [rbx]
   14000df69:	add    eax,0x2
   14000df6e:	add    BYTE PTR [rax],al
   14000df70:	add    BYTE PTR [rax],al
   14000df73:	(bad)  
   14000df74:	add    BYTE PTR [rax],al
   14000df76:	push   rbx
   14000df77:	je     0x14000dfda
   14000df79:	jb     0x14000dfef
   14000df7b:	push   rbx
   14000df7c:	gs jb  0x14000dff5
   14000df7f:	imul   esp,DWORD PTR [rbx+0x65],0x74736f48
   14000df86:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000df88:	outs   dx,BYTE PTR ds:[rsi]
   14000df89:	je     0x14000dffd
   14000df8b:	outs   dx,DWORD PTR ds:[rsi]
   14000df8c:	ins    BYTE PTR es:[rdi],dx
   14000df8d:	ins    BYTE PTR es:[rdi],dx
   14000df8e:	gs jb  0x14000df91
   14000df91:	ja     0x14000dffc
   14000df93:	ins    BYTE PTR es:[rdi],dx
   14000df94:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000df99:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680298
   14000dfa1:	gs jae 0x14000e019
   14000dfa4:	ins    BYTE PTR es:[rdi],dx
   14000dfa5:	je     0x14000dfa7
   14000dfa7:	or     BYTE PTR [rax+rbp*2+0x72],dh
   14000dfab:	gs (bad) 
   14000dfad:	fs rex.WB
   14000dfaf:	add    BYTE PTR fs:[rax],cl
   14000dfb2:	add    ecx,DWORD PTR [rbx]
   14000dfb4:	add    eax,0x0
   14000dfb9:	add    BYTE PTR [rax],al
   14000dfbb:	add    BYTE PTR [rax],al
   14000dfbd:	add    BYTE PTR [rip+0x63410000],bh        # 0x1a341dfc3
   14000dfc3:	je     0x14000e02e
   14000dfc5:	jbe    0x14000e030
   14000dfc7:	je     0x14000e042
   14000dfc9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000dfcb:	je     0x14000e032
   14000dfcd:	jb     0x14000e03c
   14000dfcf:	gs imul esp,DWORD PTR fs:[rcx+0x74],0x6f745365
   14000dfd8:	jo     0x14000dfda
   14000dfda:	ja     0x14000e045
   14000dfdc:	ins    BYTE PTR es:[rdi],dx
   14000dfdd:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000dfe2:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680298
   14000dfea:	gs jae 0x14000e062
   14000dfed:	ins    BYTE PTR es:[rdi],dx
   14000dfee:	je     0x14000dff0
   14000dff0:	or     BYTE PTR [rax+rbp*2+0x72],dh
   14000dff4:	gs (bad) 
   14000dff6:	fs rex.WB
   14000dff8:	add    BYTE PTR fs:[rax],cl
   14000dffb:	add    ecx,DWORD PTR [rbx]
   14000dffd:	add    eax,0x0
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	(bad)  
   14000e005:	add    BYTE PTR [rax],al
   14000e007:	stc    
   14000e008:	add    BYTE PTR [rax],al
   14000e00a:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000e00f:	imul   esi,DWORD PTR [rcx+rdi*2+0x45],0x726f7272
   14000e017:	add    BYTE PTR [rdi+0x69],dh
   14000e01a:	ins    BYTE PTR es:[rdi],dx
   14000e01b:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000e020:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680e98
   14000e028:	gs jae 0x14000e0a0
   14000e02b:	ins    BYTE PTR es:[rdi],dx
   14000e02c:	je     0x14000e02e
   14000e02e:	or     BYTE PTR [rsi+0x69],ah
   14000e031:	ins    BYTE PTR es:[rdi],dx
   14000e032:	gs rex.WRX (bad) 
   14000e035:	ins    DWORD PTR es:[rdi],dx
   14000e036:	add    BYTE PTR gs:[rdx],al
   14000e039:	ins    BYTE PTR es:[rdi],dx
   14000e03a:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   14000e041:	gs jb  0x14000e044
   14000e044:	or     BYTE PTR [rbp+0x6f],ch
   14000e047:	fs jne 0x14000e0b6
   14000e04a:	add    BYTE PTR gs:[rdx],al
   14000e04d:	data16 (bad) 
   14000e04f:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14000e057:	add    BYTE PTR gs:[rax],cl
   14000e05a:	ins    DWORD PTR es:[rdi],dx
   14000e05b:	gs jae 0x14000e0d1
   14000e05e:	(bad)  
   14000e05f:	add    BYTE PTR gs:[ecx],al
   14000e063:	je     0x14000e0cd
   14000e065:	jb     0x14000e0cc
   14000e067:	(bad)  
   14000e068:	fs rex.WB
   14000e06a:	add    BYTE PTR fs:[rax],cl
   14000e06d:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e070:	ins    BYTE PTR es:[rdi],dx
   14000e071:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e073:	outs   dx,BYTE PTR ds:[rsi]
   14000e074:	je     0x14000e0db
   14000e076:	js     0x14000e0ec
   14000e078:	add    BYTE PTR [rdx],al
   14000e07a:	outs   dx,DWORD PTR ds:[rsi]
   14000e07b:	jb     0x14000e0e6
   14000e07d:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000e085:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e087:	outs   dx,BYTE PTR ds:[rsi]
   14000e088:	je     0x14000e0ef
   14000e08a:	js     0x14000e100
   14000e08c:	rex.WB
   14000e08d:	add    BYTE PTR fs:[rax],cl
   14000e090:	outs   dx,DWORD PTR ds:[rsi]
   14000e091:	jb     0x14000e0fc
   14000e093:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000e09b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e09d:	outs   dx,BYTE PTR ds:[rsi]
   14000e09e:	je     0x14000e105
   14000e0a0:	js     0x14000e116
   14000e0a2:	rex.WRX (bad) 
   14000e0a4:	ins    DWORD PTR es:[rdi],dx
   14000e0a5:	add    BYTE PTR gs:[rdx],al
   14000e0a8:	outs   dx,DWORD PTR ds:[rsi]
   14000e0a9:	jb     0x14000e114
   14000e0ab:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000e0b3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e0b5:	outs   dx,BYTE PTR ds:[rsi]
   14000e0b6:	je     0x14000e11d
   14000e0b8:	js     0x14000e12e
   14000e0ba:	rex.WRB
   14000e0bb:	gs jae 0x14000e131
   14000e0be:	(bad)  
   14000e0bf:	add    BYTE PTR gs:[ecx],al
   14000e0c3:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e0c6:	jb     0x14000e12d
   14000e0c8:	outs   dx,BYTE PTR ds:[rsi]
   14000e0c9:	je     0x14000e10e
   14000e0cb:	outs   dx,DWORD PTR ds:[rsi]
   14000e0cc:	outs   dx,BYTE PTR ds:[rsi]
   14000e0cd:	je     0x14000e134
   14000e0cf:	js     0x14000e145
   14000e0d1:	rex.WB
   14000e0d2:	add    BYTE PTR fs:[rax],cl
   14000e0d5:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e0d8:	jb     0x14000e13f
   14000e0da:	outs   dx,BYTE PTR ds:[rsi]
   14000e0db:	je     0x14000e120
   14000e0dd:	outs   dx,DWORD PTR ds:[rsi]
   14000e0de:	outs   dx,BYTE PTR ds:[rsi]
   14000e0df:	je     0x14000e146
   14000e0e1:	js     0x14000e157
   14000e0e3:	rex.WRX (bad) 
   14000e0e5:	ins    DWORD PTR es:[rdi],dx
   14000e0e6:	add    BYTE PTR gs:[rdx],al
   14000e0e9:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e0ec:	jb     0x14000e153
   14000e0ee:	outs   dx,BYTE PTR ds:[rsi]
   14000e0ef:	je     0x14000e134
   14000e0f1:	outs   dx,DWORD PTR ds:[rsi]
   14000e0f2:	outs   dx,BYTE PTR ds:[rsi]
   14000e0f3:	je     0x14000e15a
   14000e0f5:	js     0x14000e16b
   14000e0f7:	rex.WRB
   14000e0f8:	gs jae 0x14000e16e
   14000e0fb:	(bad)  
   14000e0fc:	add    BYTE PTR gs:[ecx],al
   14000e100:	add    ecx,DWORD PTR [rbx]
   14000e102:	add    eax,0x0
   14000e107:	add    BYTE PTR [rax],al
   14000e109:	add    BYTE PTR [rax],al
   14000e10c:	sbb    al,0x1
   14000e10e:	add    BYTE PTR [rcx+0x63],al
   14000e111:	je     0x14000e17c
   14000e113:	jbe    0x14000e17e
   14000e115:	je     0x14000e190
   14000e117:	rex.RB jb 0x14000e18c
   14000e11a:	outs   dx,DWORD PTR ds:[rsi]
   14000e11b:	jb     0x14000e11d
   14000e11d:	ja     0x14000e188
   14000e11f:	ins    BYTE PTR es:[rdi],dx
   14000e120:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000e125:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72681198
   14000e12d:	gs jae 0x14000e1a5
   14000e130:	ins    BYTE PTR es:[rdi],dx
   14000e131:	je     0x14000e133
   14000e133:	or     BYTE PTR [rsi+0x69],ah
   14000e136:	ins    BYTE PTR es:[rdi],dx
   14000e137:	gs rex.WRX (bad) 
   14000e13a:	ins    DWORD PTR es:[rdi],dx
   14000e13b:	add    BYTE PTR gs:[rdx],al
   14000e13e:	ins    BYTE PTR es:[rdi],dx
   14000e13f:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   14000e146:	gs jb  0x14000e149
   14000e149:	or     BYTE PTR [rbp+0x6f],ch
   14000e14c:	fs jne 0x14000e1bb
   14000e14f:	add    BYTE PTR gs:[rdx],al
   14000e152:	data16 (bad) 
   14000e154:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14000e15c:	add    BYTE PTR gs:[rax],cl
   14000e15f:	ins    DWORD PTR es:[rdi],dx
   14000e160:	gs jae 0x14000e1d6
   14000e163:	(bad)  
   14000e164:	add    BYTE PTR gs:[ecx],al
   14000e168:	je     0x14000e1d2
   14000e16a:	jb     0x14000e1d1
   14000e16c:	(bad)  
   14000e16d:	fs rex.WB
   14000e16f:	add    BYTE PTR fs:[rax],cl
   14000e172:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e175:	ins    BYTE PTR es:[rdi],dx
   14000e176:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e178:	outs   dx,BYTE PTR ds:[rsi]
   14000e179:	je     0x14000e1e0
   14000e17b:	js     0x14000e1f1
   14000e17d:	add    BYTE PTR [rdx],al
   14000e17f:	outs   dx,DWORD PTR ds:[rsi]
   14000e180:	jb     0x14000e1eb
   14000e182:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000e18a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e18c:	outs   dx,BYTE PTR ds:[rsi]
   14000e18d:	je     0x14000e1f4
   14000e18f:	js     0x14000e205
   14000e191:	rex.WB
   14000e192:	add    BYTE PTR fs:[rax],cl
   14000e195:	outs   dx,DWORD PTR ds:[rsi]
   14000e196:	jb     0x14000e201
   14000e198:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000e1a0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e1a2:	outs   dx,BYTE PTR ds:[rsi]
   14000e1a3:	je     0x14000e20a
   14000e1a5:	js     0x14000e21b
   14000e1a7:	rex.WRX (bad) 
   14000e1a9:	ins    DWORD PTR es:[rdi],dx
   14000e1aa:	add    BYTE PTR gs:[rdx],al
   14000e1ad:	outs   dx,DWORD PTR ds:[rsi]
   14000e1ae:	jb     0x14000e219
   14000e1b0:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000e1b8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e1ba:	outs   dx,BYTE PTR ds:[rsi]
   14000e1bb:	je     0x14000e222
   14000e1bd:	js     0x14000e233
   14000e1bf:	rex.WRB
   14000e1c0:	gs jae 0x14000e236
   14000e1c3:	(bad)  
   14000e1c4:	add    BYTE PTR gs:[ecx],al
   14000e1c8:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e1cb:	jb     0x14000e232
   14000e1cd:	outs   dx,BYTE PTR ds:[rsi]
   14000e1ce:	je     0x14000e213
   14000e1d0:	outs   dx,DWORD PTR ds:[rsi]
   14000e1d1:	outs   dx,BYTE PTR ds:[rsi]
   14000e1d2:	je     0x14000e239
   14000e1d4:	js     0x14000e24a
   14000e1d6:	rex.WB
   14000e1d7:	add    BYTE PTR fs:[rax],cl
   14000e1da:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e1dd:	jb     0x14000e244
   14000e1df:	outs   dx,BYTE PTR ds:[rsi]
   14000e1e0:	je     0x14000e225
   14000e1e2:	outs   dx,DWORD PTR ds:[rsi]
   14000e1e3:	outs   dx,BYTE PTR ds:[rsi]
   14000e1e4:	je     0x14000e24b
   14000e1e6:	js     0x14000e25c
   14000e1e8:	rex.WRX (bad) 
   14000e1ea:	ins    DWORD PTR es:[rdi],dx
   14000e1eb:	add    BYTE PTR gs:[rdx],al
   14000e1ee:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e1f1:	jb     0x14000e258
   14000e1f3:	outs   dx,BYTE PTR ds:[rsi]
   14000e1f4:	je     0x14000e239
   14000e1f6:	outs   dx,DWORD PTR ds:[rsi]
   14000e1f7:	outs   dx,BYTE PTR ds:[rsi]
   14000e1f8:	je     0x14000e25f
   14000e1fa:	js     0x14000e270
   14000e1fc:	rex.WRB
   14000e1fd:	gs jae 0x14000e273
   14000e200:	(bad)  
   14000e201:	add    BYTE PTR gs:[ecx],al
   14000e205:	data16 (bad) 
   14000e207:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x644965
   14000e20f:	or     BYTE PTR [rsi+0x61],ah
   14000e212:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x756f4365
   14000e21a:	outs   dx,BYTE PTR ds:[rsi]
   14000e21b:	je     0x14000e21d
   14000e21d:	or     BYTE PTR [rsi+0x75],ah
   14000e220:	outs   dx,BYTE PTR ds:[rsi]
   14000e221:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000e225:	outs   dx,BYTE PTR ds:[rsi]
   14000e226:	add    BYTE PTR [rdx],al
   14000e228:	add    ecx,DWORD PTR [rbx]
   14000e22a:	add    eax,0x2
   14000e22f:	add    BYTE PTR [rax],al
   14000e231:	add    BYTE PTR [rax],al
   14000e234:	stc    
   14000e235:	add    BYTE PTR [rax],al
   14000e237:	push   rax
   14000e238:	jb     0x14000e29f
   14000e23a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e23c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000e244:	add    BYTE PTR [rdi+0x69],dh
   14000e247:	ins    BYTE PTR es:[rdi],dx
   14000e248:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000e24d:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680e98
   14000e255:	gs jae 0x14000e2cd
   14000e258:	ins    BYTE PTR es:[rdi],dx
   14000e259:	je     0x14000e25b
   14000e25b:	or     BYTE PTR [rsi+0x69],ah
   14000e25e:	ins    BYTE PTR es:[rdi],dx
   14000e25f:	gs rex.WRX (bad) 
   14000e262:	ins    DWORD PTR es:[rdi],dx
   14000e263:	add    BYTE PTR gs:[rdx],al
   14000e266:	ins    BYTE PTR es:[rdi],dx
   14000e267:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   14000e26e:	gs jb  0x14000e271
   14000e271:	or     BYTE PTR [rbp+0x6f],ch
   14000e274:	fs jne 0x14000e2e3
   14000e277:	add    BYTE PTR gs:[rdx],al
   14000e27a:	data16 (bad) 
   14000e27c:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14000e284:	add    BYTE PTR gs:[rax],cl
   14000e287:	ins    DWORD PTR es:[rdi],dx
   14000e288:	gs jae 0x14000e2fe
   14000e28b:	(bad)  
   14000e28c:	add    BYTE PTR gs:[ecx],al
   14000e290:	je     0x14000e2fa
   14000e292:	jb     0x14000e2f9
   14000e294:	(bad)  
   14000e295:	fs rex.WB
   14000e297:	add    BYTE PTR fs:[rax],cl
   14000e29a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e29d:	ins    BYTE PTR es:[rdi],dx
   14000e29e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e2a0:	outs   dx,BYTE PTR ds:[rsi]
   14000e2a1:	je     0x14000e308
   14000e2a3:	js     0x14000e319
   14000e2a5:	add    BYTE PTR [rdx],al
   14000e2a7:	outs   dx,DWORD PTR ds:[rsi]
   14000e2a8:	jb     0x14000e313
   14000e2aa:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000e2b2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e2b4:	outs   dx,BYTE PTR ds:[rsi]
   14000e2b5:	je     0x14000e31c
   14000e2b7:	js     0x14000e32d
   14000e2b9:	rex.WB
   14000e2ba:	add    BYTE PTR fs:[rax],cl
   14000e2bd:	outs   dx,DWORD PTR ds:[rsi]
   14000e2be:	jb     0x14000e329
   14000e2c0:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000e2c8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e2ca:	outs   dx,BYTE PTR ds:[rsi]
   14000e2cb:	je     0x14000e332
   14000e2cd:	js     0x14000e343
   14000e2cf:	rex.WRX (bad) 
   14000e2d1:	ins    DWORD PTR es:[rdi],dx
   14000e2d2:	add    BYTE PTR gs:[rdx],al
   14000e2d5:	outs   dx,DWORD PTR ds:[rsi]
   14000e2d6:	jb     0x14000e341
   14000e2d8:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000e2e0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e2e2:	outs   dx,BYTE PTR ds:[rsi]
   14000e2e3:	je     0x14000e34a
   14000e2e5:	js     0x14000e35b
   14000e2e7:	rex.WRB
   14000e2e8:	gs jae 0x14000e35e
   14000e2eb:	(bad)  
   14000e2ec:	add    BYTE PTR gs:[ecx],al
   14000e2f0:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e2f3:	jb     0x14000e35a
   14000e2f5:	outs   dx,BYTE PTR ds:[rsi]
   14000e2f6:	je     0x14000e33b
   14000e2f8:	outs   dx,DWORD PTR ds:[rsi]
   14000e2f9:	outs   dx,BYTE PTR ds:[rsi]
   14000e2fa:	je     0x14000e361
   14000e2fc:	js     0x14000e372
   14000e2fe:	rex.WB
   14000e2ff:	add    BYTE PTR fs:[rax],cl
   14000e302:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e305:	jb     0x14000e36c
   14000e307:	outs   dx,BYTE PTR ds:[rsi]
   14000e308:	je     0x14000e34d
   14000e30a:	outs   dx,DWORD PTR ds:[rsi]
   14000e30b:	outs   dx,BYTE PTR ds:[rsi]
   14000e30c:	je     0x14000e373
   14000e30e:	js     0x14000e384
   14000e310:	rex.WRX (bad) 
   14000e312:	ins    DWORD PTR es:[rdi],dx
   14000e313:	add    BYTE PTR gs:[rdx],al
   14000e316:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e319:	jb     0x14000e380
   14000e31b:	outs   dx,BYTE PTR ds:[rsi]
   14000e31c:	je     0x14000e361
   14000e31e:	outs   dx,DWORD PTR ds:[rsi]
   14000e31f:	outs   dx,BYTE PTR ds:[rsi]
   14000e320:	je     0x14000e387
   14000e322:	js     0x14000e398
   14000e324:	rex.WRB
   14000e325:	gs jae 0x14000e39b
   14000e328:	(bad)  
   14000e329:	add    BYTE PTR gs:[ecx],al
   14000e32d:	add    ecx,DWORD PTR [rbx]
   14000e32f:	add    eax,0x2
   14000e334:	add    BYTE PTR [rax],al
   14000e336:	add    BYTE PTR [rax],al
   14000e339:	xor    al,BYTE PTR [rax]
   14000e33b:	add    BYTE PTR [rax+0x72],dl
   14000e33e:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14000e341:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000e349:	add    BYTE PTR [rdi+0x69],dh
   14000e34c:	ins    BYTE PTR es:[rdi],dx
   14000e34d:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000e352:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680298
   14000e35a:	gs jae 0x14000e3d2
   14000e35d:	ins    BYTE PTR es:[rdi],dx
   14000e35e:	je     0x14000e360
   14000e360:	or     BYTE PTR [rax+rbp*2+0x72],dh
   14000e364:	gs (bad) 
   14000e366:	fs rex.WB
   14000e368:	add    BYTE PTR fs:[rax],cl
   14000e36b:	add    ecx,DWORD PTR [rbx]
   14000e36d:	add    eax,0x2
   14000e372:	add    BYTE PTR [rax],al
   14000e374:	add    BYTE PTR [rax],al
   14000e377:	and    BYTE PTR [rax],al
   14000e379:	add    BYTE PTR [rcx+0x63],al
   14000e37c:	je     0x14000e3e7
   14000e37e:	jbe    0x14000e3e9
   14000e380:	je     0x14000e3fb
   14000e382:	push   rbx
   14000e383:	je     0x14000e3f4
   14000e385:	jo     0x14000e3f7
   14000e387:	gs fs rex.B jne 0x14000e400
   14000e38c:	outs   dx,DWORD PTR ds:[rsi]
   14000e38d:	ins    DWORD PTR es:[rdi],dx
   14000e38e:	(bad)  
   14000e38f:	je     0x14000e3fa
   14000e391:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e394:	ins    BYTE PTR es:[rdi],dx
   14000e395:	jns    0x14000e397
   14000e397:	add    al,0xa1
   14000e399:	ja     0x14000e3d3
   14000e39b:	cmp    edi,DWORD PTR [rbx]
   14000e39d:	scas   al,BYTE PTR es:[rdi]
   14000e39e:	icebp  
   14000e39f:	push   rsp
   14000e3a0:	add    DWORD PTR [rcx],eax
   14000e3a2:	(bad)  
   14000e3a3:	and    al,0x24
   14000e3a5:	idiv   ah
   14000e3a7:	mov    ebx,0x4953001c
   14000e3ac:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000e3ae:	jae    0x14000e424
   14000e3b0:	add    BYTE PTR [rbx],dl
   14000e3b2:	add    BYTE PTR [rcx],al
   14000e3b4:	sbb    dh,BYTE PTR [rbx+0x50]
   14000e3b7:	rex.WRXB iretq 
   14000e3b9:	mov    DWORD PTR [rdx-0x231f4cb9],eax
   14000e3bf:	call   0xfa76e88d
   14000e3c4:	add    DWORD PTR [rax],eax
	...
   14000e3d6:	add    BYTE PTR [rax],al
   14000e3d8:	outs   dx,BYTE PTR ds:[rsi]
   14000e3d9:	add    BYTE PTR [rax+rax*1+0x64],dh
   14000e3dd:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000e3e1:	add    BYTE PTR [rsi],ch
   14000e3e3:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000e3e7:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000e3eb:	add    BYTE PTR [rax],al
   14000e3ed:	add    BYTE PTR [rax],al
   14000e3ef:	add    BYTE PTR [rsp+riz*2+0x72],cl
   14000e3f3:	rex.RX (bad) 
   14000e3f5:	jae    0x14000e46b
   14000e3f7:	rex.RX (bad) 
   14000e3f9:	imul   ebp,DWORD PTR [rcx+rcx*2+0x6e],0x64616f4c
   14000e401:	gs jb  0x14000e447
   14000e404:	(bad)  
   14000e405:	ins    BYTE PTR es:[rdi],dx
   14000e406:	ins    BYTE PTR es:[rdi],dx
   14000e407:	outs   dx,DWORD PTR ds:[rsi]
   14000e408:	jne    0x14000e47e
   14000e40a:	add    BYTE PTR [rax],al
   14000e40c:	add    BYTE PTR [rax],al
   14000e40e:	add    BYTE PTR [rax],al
   14000e410:	push   rdx
   14000e411:	je     0x14000e47f
   14000e413:	rex.WRX je 0x14000e469
   14000e416:	je     0x14000e479
   14000e418:	je     0x14000e48f
   14000e41a:	jae    0x14000e470
   14000e41c:	outs   dx,DWORD PTR ds:[rsi]
   14000e41d:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000e41f:	jae    0x14000e466
   14000e421:	jb     0x14000e495
   14000e423:	outs   dx,DWORD PTR ds:[rsi]
   14000e424:	jb     0x14000e474
   14000e426:	outs   dx,DWORD PTR ds:[rsi]
   14000e427:	push   rsp
   14000e428:	gs (bad) 
   14000e42a:	add    BYTE PTR [rax],al
   14000e42c:	add    BYTE PTR [rax],al
   14000e42e:	add    BYTE PTR [rax],al
   14000e430:	nop
   14000e431:	sahf   
   14000e432:	add    BYTE PTR [rax+0x1],al
   14000e435:	add    BYTE PTR [rax],al
   14000e437:	add    BYTE PTR [rax+0x14000a3],dh
   14000e43d:	add    BYTE PTR [rax],al
   14000e43f:	add    BYTE PTR [rax],ah
   14000e441:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e442:	add    BYTE PTR [rax+0x1],al
   14000e445:	add    BYTE PTR [rax],al
   14000e447:	add    BYTE PTR [rbx+0x68],dh
   14000e44a:	gs ins BYTE PTR es:[rdi],dx
   14000e44c:	ins    BYTE PTR es:[rdi],dx
   14000e44d:	pop    rsp
   14000e44e:	outs   dx,DWORD PTR ds:[rsi]
   14000e44f:	outs   dx,BYTE PTR ds:[rsi]
   14000e450:	movsxd ebp,DWORD PTR gs:[rdi+0x72]
   14000e454:	gs pop rsp
   14000e456:	jae    0x14000e4c0
   14000e458:	gs ins BYTE PTR es:[rdi],dx
   14000e45a:	ins    BYTE PTR es:[rdi],dx
   14000e45b:	push   0x5c74736f
   14000e460:	gs js  0x14000e4c8
   14000e463:	pop    rsp
   14000e464:	outs   dx,BYTE PTR ds:[rsi]
   14000e465:	(bad)  
   14000e466:	jbe    0x14000e4d1
   14000e468:	addr32 (bad) 
   14000e46a:	je     0x14000e4d5
   14000e46c:	outs   dx,DWORD PTR ds:[rsi]
   14000e46d:	outs   dx,BYTE PTR ds:[rsi]
   14000e46e:	jae    0x14000e4d5
   14000e470:	jb     0x14000e4e8
   14000e472:	gs jb  0x14000e4d8
   14000e475:	outs   dx,DWORD PTR ds:[rsi]
   14000e476:	ins    DWORD PTR es:[rdi],dx
   14000e477:	jo     0x14000e4e8
   14000e479:	outs   dx,BYTE PTR ds:[rsi]
   14000e47a:	outs   dx,BYTE PTR gs:[rsi]
   14000e47c:	je     0x14000e4ac
   14000e47e:	movsxd esi,DWORD PTR [rax+0x70]
   14000e481:	add    BYTE PTR [rax],al
   14000e483:	add    BYTE PTR [rax],al
   14000e485:	add    BYTE PTR [rax],al
   14000e487:	add    BYTE PTR [rsi+0x1],al
   14000e48a:	add    BYTE PTR [rax],al
   14000e48c:	add    BYTE PTR [rax],al
   14000e48e:	add    BYTE PTR [rax],al
   14000e490:	rol    BYTE PTR [rax],0x0
   14000e493:	add    BYTE PTR [rax],al
   14000e495:	add    BYTE PTR [rax],al
   14000e497:	rex.RX jae 0x14000e502
   14000e49a:	gs ins BYTE PTR es:[rdi],dx
   14000e49c:	ins    BYTE PTR es:[rdi],dx
   14000e49d:	pop    rsp
   14000e49e:	outs   dx,DWORD PTR ds:[rsi]
   14000e49f:	outs   dx,BYTE PTR ds:[rsi]
   14000e4a0:	movsxd ebp,DWORD PTR gs:[rdi+0x72]
   14000e4a4:	gs pop rsp
   14000e4a6:	jae    0x14000e510
   14000e4a8:	gs ins BYTE PTR es:[rdi],dx
   14000e4aa:	ins    BYTE PTR es:[rdi],dx
   14000e4ab:	push   0x5c74736f
   14000e4b0:	gs js  0x14000e518
   14000e4b3:	pop    rsp
   14000e4b4:	jae    0x14000e51e
   14000e4b6:	gs ins BYTE PTR es:[rdi],dx
   14000e4b8:	ins    BYTE PTR es:[rdi],dx
   14000e4b9:	movsxd esi,DWORD PTR [rdx+0x65]
   14000e4bc:	(bad)  
   14000e4bd:	je     0x14000e528
   14000e4bf:	outs   dx,DWORD PTR ds:[rsi]
   14000e4c0:	outs   dx,BYTE PTR ds:[rsi]
   14000e4c1:	(bad)  
   14000e4c2:	gs push 0x6f697661
   14000e4c8:	jb     0x14000e4f8
   14000e4ca:	movsxd esi,DWORD PTR [rax+0x70]
   14000e4cd:	add    BYTE PTR [rax],al
   14000e4cf:	add    BYTE PTR [rsi+0x65],dh
   14000e4d2:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000e4d6:	cmp    al,0x54
   14000e4d8:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14000e4dd:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000e4e1:	add    BYTE PTR [eax],al
   14000e4e4:	add    BYTE PTR [rax],al
   14000e4e6:	add    BYTE PTR [rax],al
   14000e4e8:	rex.XB ins BYTE PTR es:[rdi],dx
   14000e4ea:	gs (bad) 
   14000e4ec:	outs   dx,BYTE PTR ds:[rsi]
   14000e4ed:	jne    0x14000e55f
   14000e4ef:	add    BYTE PTR [rbx],ah
   14000e4f1:	add    eax,DWORD PTR [rax]
   14000e4f3:	add    BYTE PTR [rax],al
   14000e4f5:	add    BYTE PTR [rax],al
   14000e4f7:	add    al,al
   14000e4f9:	add    BYTE PTR [rax],al
   14000e4fb:	add    BYTE PTR [rax],al
   14000e4fd:	add    BYTE PTR [rax],al
   14000e4ff:	rex.RX push rdx
   14000e501:	push   rbx
   14000e502:	rex.R push rbx
   14000e504:	rex.WRB lahf 
   14000e506:	mov    cl,BYTE PTR [rdi+0x7d]
   14000e509:	pop    rdi
   14000e50a:	jb     0x14000e551
   14000e50c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e50d:	nop
   14000e50e:	fs xor edx,DWORD PTR es:[rbx]
   14000e512:	jnp    0x14000e57c
   14000e514:	add    DWORD PTR [rax],eax
   14000e516:	add    BYTE PTR [rax],al
   14000e518:	jae    0x14000e583
   14000e51a:	push   0x2e74736f
   14000e51f:	jo     0x14000e585
   14000e521:	(bad)  
	...
   14000e536:	add    BYTE PTR [rax],al
   14000e538:	add    BYTE PTR [rbp+0x47],dl
   14000e53b:	push   rax
   14000e53c:	add    BYTE PTR [rax],dl
   14000e53e:	add    BYTE PTR [rax],al
   14000e540:	test   al,0x0
   14000e542:	add    BYTE PTR [rax],al
   14000e544:	cs je  0x14000e5ac
   14000e547:	js     0x14000e5bd
   14000e549:	and    al,0x64
   14000e54b:	imul   eax,DWORD PTR [rax],0xb0000000
   14000e551:	adc    BYTE PTR [rax],al
   14000e553:	add    BYTE PTR [rbx+0x2e00002e],cl
   14000e559:	je     0x14000e5c0
   14000e55b:	js     0x14000e5d1
   14000e55d:	and    al,0x6c
   14000e55f:	jo     0x14000e591
   14000e561:	xor    DWORD PTR [rbx+0x69],esi
   14000e564:	push   0x2e74736f
   14000e569:	gs js  0x14000e5d1
   14000e56c:	and    DWORD PTR [rbx],esi
   14000e56e:	xor    eax,0x6279685f
   14000e573:	jb     0x14000e5de
   14000e575:	fs (bad) 
   14000e577:	outs   dx,DWORD PTR ds:[rsi]
   14000e578:	outs   dx,DWORD PTR ds:[rsi]
   14000e579:	je     0x14000e57b
   14000e57b:	add    BYTE PTR [rax+0x3f],al
   14000e57e:	add    BYTE PTR [rax],al
   14000e580:	pushf  
   14000e581:	(bad)  
   14000e582:	add    BYTE PTR [rax],al
   14000e584:	cs je  0x14000e5ec
   14000e587:	js     0x14000e5fd
   14000e589:	and    al,0x6d
   14000e58b:	outs   dx,BYTE PTR ds:[rsi]
   14000e58c:	add    BYTE PTR [rax],al
   14000e58e:	add    BYTE PTR [rax],al
   14000e590:	loopne 0x14000e5e7
   14000e592:	add    BYTE PTR [rax],al
   14000e594:	jge    0x14000e596
   14000e596:	add    BYTE PTR [rax],al
   14000e598:	cs je  0x14000e600
   14000e59b:	js     0x14000e611
   14000e59d:	and    al,0x6d
   14000e59f:	outs   dx,BYTE PTR ds:[rsi]
   14000e5a0:	and    al,0x30
   14000e5a2:	xor    BYTE PTR [rax],al
   14000e5a4:	(bad)  
   14000e5a5:	push   rsi
   14000e5a6:	add    BYTE PTR [rax],al
   14000e5a8:	fld    DWORD PTR [rcx]
   14000e5aa:	add    BYTE PTR [rax],al
   14000e5ac:	cs je  0x14000e614
   14000e5af:	js     0x14000e625
   14000e5b1:	and    al,0x6e
   14000e5b3:	jo     0x14000e5b5
   14000e5b5:	add    BYTE PTR [rax],al
   14000e5b7:	add    BYTE PTR [rax+0x58],al
   14000e5ba:	add    BYTE PTR [rax],al
   14000e5bc:	loopne 0x14000e5c0
   14000e5be:	add    BYTE PTR [rax],al
   14000e5c0:	cs je  0x14000e628
   14000e5c3:	js     0x14000e639
   14000e5c5:	and    al,0x78
   14000e5c7:	add    BYTE PTR [rax],ah
   14000e5c9:	pop    rbx
   14000e5ca:	add    BYTE PTR [rax],al
   14000e5cc:	test   DWORD PTR [rax],eax
   14000e5ce:	add    BYTE PTR [rax],al
   14000e5d0:	cs je  0x14000e638
   14000e5d3:	js     0x14000e649
   14000e5d5:	and    al,0x79
   14000e5d7:	add    BYTE PTR fs:[rax],al
   14000e5da:	add    BYTE PTR [rax],al
   14000e5dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e5dd:	pop    rbx
   14000e5de:	add    BYTE PTR [rax],al
   14000e5e0:	sub    edx,DWORD PTR [rip+0x742e0000]        # 0x1b42ee5e6
   14000e5e6:	gs js  0x14000e65d
   14000e5e9:	and    al,0x7a
   14000e5eb:	jns    0x14000e5ed
   14000e5ed:	add    BYTE PTR [rax],al
   14000e5ef:	add    ah,dl
   14000e5f1:	jo     0x14000e5f3
   14000e5f3:	add    dl,dl
   14000e5f5:	xor    eax,0x742e0000
   14000e5fa:	gs js  0x14000e671
   14000e5fd:	and    al,0x7a
   14000e5ff:	jp     0x14000e601
   14000e601:	add    BYTE PTR [rax],al
   14000e603:	add    BYTE PTR [rax],al
   14000e605:	mov    al,0x0
   14000e607:	add    al,dl
   14000e609:	add    eax,DWORD PTR [rax]
   14000e60b:	add    BYTE PTR [rsi],ch
   14000e60d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   14000e615:	add    BYTE PTR [rax],al
   14000e617:	add    al,dl
   14000e619:	mov    bl,0x0
   14000e61b:	add    BYTE PTR [rax],dl
   14000e61d:	add    BYTE PTR [rax],al
   14000e61f:	add    BYTE PTR [rsi],ch
   14000e621:	xor    BYTE PTR [rax],dh
   14000e623:	movsxd esp,DWORD PTR [rsi+0x67]
   14000e626:	add    BYTE PTR [rax],al
   14000e628:	loopne 0x14000e5dd
   14000e62a:	add    BYTE PTR [rax],al
   14000e62c:	or     BYTE PTR [rax],al
   14000e62e:	add    BYTE PTR [rax],al
   14000e630:	cs rex.XB push r10
   14000e633:	push   rsp
   14000e634:	and    al,0x58
   14000e636:	rex.XB
   14000e637:	add    BYTE PTR [r8],al
   14000e63a:	add    BYTE PTR [rax],al
   14000e63c:	call   0x14800e6f4
   14000e641:	add    BYTE PTR [rax],al
   14000e643:	add    BYTE PTR [rsi],ch
   14000e645:	rex.XB push r10
   14000e647:	push   rsp
   14000e648:	and    al,0x58
   14000e64a:	rex.XB
   14000e64b:	rex.B
   14000e64c:	add    BYTE PTR [r8],al
   14000e64f:	add    al,dh
   14000e651:	mov    bl,0x0
   14000e653:	add    BYTE PTR [rax],dh
   14000e655:	add    BYTE PTR [rax],al
   14000e657:	add    BYTE PTR [rsi],ch
   14000e659:	rex.XB push r10
   14000e65b:	push   rsp
   14000e65c:	and    al,0x58
   14000e65e:	rex.XB push r13
   14000e660:	add    BYTE PTR [rax],al
   14000e662:	add    BYTE PTR [rax],al
   14000e664:	and    BYTE PTR [rax+rax*1+0x800],dh
   14000e66b:	add    BYTE PTR [rsi],ch
   14000e66d:	rex.XB push r10
   14000e66f:	push   rsp
   14000e670:	and    al,0x58
   14000e672:	rex.XB pop r10
   14000e674:	add    BYTE PTR [rax],al
   14000e676:	add    BYTE PTR [rax],al
   14000e678:	sub    BYTE PTR [rax+rax*1+0x800],dh
   14000e67f:	add    BYTE PTR [rsi],ch
   14000e681:	rex.XB push r10
   14000e683:	push   rsp
   14000e684:	and    al,0x58
   14000e686:	rex.WB
   14000e687:	add    BYTE PTR [r8],al
   14000e68a:	add    BYTE PTR [rax],al
   14000e68c:	xor    BYTE PTR [rax+rax*1+0x800],dh
   14000e693:	add    BYTE PTR [rsi],ch
   14000e695:	rex.XB push r10
   14000e697:	push   rsp
   14000e698:	and    al,0x58
   14000e69a:	rex.WB
   14000e69b:	rex.B
   14000e69c:	add    BYTE PTR [r8],al
   14000e69f:	add    BYTE PTR [rax],bh
   14000e6a1:	mov    ah,0x0
   14000e6a3:	add    BYTE PTR [rax],cl
   14000e6a5:	add    BYTE PTR [rax],al
   14000e6a7:	add    BYTE PTR [rsi],ch
   14000e6a9:	rex.XB push r10
   14000e6ab:	push   rsp
   14000e6ac:	and    al,0x58
   14000e6ae:	rex.WB pop r9
   14000e6b0:	add    BYTE PTR [rax],al
   14000e6b2:	add    BYTE PTR [rax],al
   14000e6b4:	mov    spl,0x0
   14000e6b7:	add    BYTE PTR [rax],cl
   14000e6b9:	add    BYTE PTR [rax],al
   14000e6bb:	add    BYTE PTR [rsi],ch
   14000e6bd:	rex.XB push r10
   14000e6bf:	push   rsp
   14000e6c0:	and    al,0x58
   14000e6c2:	rex.WB pop r10
   14000e6c4:	add    BYTE PTR [rax],al
   14000e6c6:	add    BYTE PTR [rax],al
   14000e6c8:	rex.W mov spl,0x0
   14000e6cb:	add    BYTE PTR [rax+0x2e000001],ch
   14000e6d1:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14000e6d9:	add    BYTE PTR [rax],al
   14000e6db:	add    al,dh
   14000e6dd:	mov    ch,0x0
   14000e6df:	add    BYTE PTR [rax+0x2e000022],al
   14000e6e5:	jb     0x14000e74b
   14000e6e7:	(bad)  
   14000e6e8:	je     0x14000e74b
   14000e6ea:	add    BYTE PTR [rax],al
   14000e6ec:	jo     0x14000e6c6
   14000e6ee:	add    BYTE PTR [rax],al
   14000e6f0:	adc    BYTE PTR [rax],al
   14000e6f2:	add    BYTE PTR [rax],al
   14000e6f4:	cs jb  0x14000e75b
   14000e6f7:	(bad)  
   14000e6f8:	je     0x14000e75b
   14000e6fa:	and    al,0x7a
   14000e6fc:	rex.RB push r12
   14000e6fe:	push   rdi
   14000e6ff:	xor    BYTE PTR [rax],al
   14000e701:	add    BYTE PTR [rax],al
   14000e703:	add    BYTE PTR [rax+0x170000d8],al
   14000e709:	or     eax,DWORD PTR [rax]
   14000e70b:	add    BYTE PTR [rsi],ch
   14000e70d:	jb     0x14000e773
   14000e70f:	(bad)  
   14000e710:	je     0x14000e773
   14000e712:	and    al,0x7a
   14000e714:	rex.RB push r12
   14000e716:	push   rdi
   14000e717:	xor    DWORD PTR [rax],eax
   14000e719:	add    BYTE PTR [rax],al
   14000e71b:	add    BYTE PTR [rdi+0x2d0000e3],dl
   14000e721:	add    BYTE PTR [rax],al
   14000e723:	add    BYTE PTR [rsi],ch
   14000e725:	jb     0x14000e78b
   14000e727:	(bad)  
   14000e728:	je     0x14000e78b
   14000e72a:	and    al,0x7a
   14000e72c:	rex.RB push r12
   14000e72e:	push   rdi
   14000e72f:	xor    al,BYTE PTR [rax]
   14000e731:	add    BYTE PTR [rax],al
   14000e733:	add    ah,al
   14000e735:	jrcxz  0x14000e737
   14000e737:	add    BYTE PTR [rcx],al
   14000e739:	add    BYTE PTR [rax],al
   14000e73b:	add    BYTE PTR [rsi],ch
   14000e73d:	jb     0x14000e7a3
   14000e73f:	(bad)  
   14000e740:	je     0x14000e7a3
   14000e742:	and    al,0x7a
   14000e744:	rex.RB push r12
   14000e746:	push   rdi
   14000e747:	cmp    DWORD PTR [rax],eax
   14000e749:	add    BYTE PTR [rax],al
   14000e74b:	add    al,dl
   14000e74d:	jrcxz  0x14000e74f
   14000e74f:	add    BYTE PTR [rax],dh
   14000e751:	add    DWORD PTR [rax],eax
   14000e753:	add    BYTE PTR [rsi],ch
   14000e755:	jb     0x14000e7bb
   14000e757:	(bad)  
   14000e758:	je     0x14000e7bb
   14000e75a:	and    al,0x7a
   14000e75c:	jp     0x14000e75e
   14000e75e:	add    BYTE PTR [rax],al
   14000e760:	add    ch,ah
   14000e762:	add    BYTE PTR [rax],al
   14000e764:	call   0x16e00e76c
   14000e769:	jb     0x14000e7cf
   14000e76b:	(bad)  
   14000e76c:	je     0x14000e7cf
   14000e76e:	and    al,0x7a
   14000e770:	jp     0x14000e7ec
   14000e772:	fs (bad) 
   14000e774:	add    BYTE PTR [eax],al
   14000e777:	add    al,dh
   14000e779:	call   0x15550e77e
   14000e77e:	add    BYTE PTR [rax],al
   14000e780:	cs js  0x14000e7e7
   14000e783:	(bad)  
   14000e784:	je     0x14000e7e7
   14000e786:	add    BYTE PTR [rax],al
   14000e788:	rex inc BYTE PTR [rax]
   14000e78b:	add    ah,dl
   14000e78d:	add    DWORD PTR [rax],eax
   14000e78f:	add    BYTE PTR [rsi],ch
   14000e791:	js     0x14000e7f7
   14000e793:	(bad)  
   14000e794:	je     0x14000e7f7
   14000e796:	and    al,0x78
   14000e798:	add    BYTE PTR [rax],al
   14000e79a:	add    BYTE PTR [rax],al
   14000e79c:	sbb    BYTE PTR [rax],al
   14000e79e:	add    DWORD PTR [rax],eax
   14000e7a0:	mov    eax,0x2e000001
   14000e7a5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000e7ad:	add    BYTE PTR [rax],al
   14000e7af:	add    al,dl
   14000e7b1:	add    DWORD PTR [rcx],eax
   14000e7b3:	add    BYTE PTR [rax+rax*1],dl
   14000e7b6:	add    BYTE PTR [rax],al
   14000e7b8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000e7c1:	add    BYTE PTR [rax],al
   14000e7c3:	add    al,ch
   14000e7c5:	add    DWORD PTR [rcx],eax
   14000e7c7:	add    al,dl
   14000e7c9:	add    eax,DWORD PTR [rax]
   14000e7cb:	add    BYTE PTR [rsi],ch
   14000e7cd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000e7d5:	add    BYTE PTR [rax],al
   14000e7d7:	add    BYTE PTR [rax-0x69fffefb],bh
   14000e7dd:	or     al,BYTE PTR [rax]
   14000e7df:	add    BYTE PTR [rsi],ch
   14000e7e1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000e7e9:	add    BYTE PTR [rax],al
   14000e7eb:	add    BYTE PTR [rax],al
   14000e7ed:	and    BYTE PTR [rcx],al
   14000e7ef:	add    BYTE PTR [rax+0x0],al
   14000e7f2:	add    BYTE PTR [rax],al
   14000e7f4:	cs fs (bad) 
   14000e7f7:	je     0x14000e85a
   14000e7f9:	add    BYTE PTR [rax],al
   14000e7fb:	add    BYTE PTR [rax+0x20],al
   14000e7fe:	add    DWORD PTR [rax],eax
   14000e800:	rol    BYTE PTR [rax],1
   14000e802:	add    BYTE PTR [rax],al
   14000e804:	cs fs (bad) 
   14000e807:	je     0x14000e86a
   14000e809:	and    al,0x30
   14000e80b:	xor    BYTE PTR [rax],al
   14000e80d:	add    BYTE PTR [rax],al
   14000e80f:	add    BYTE PTR [rax],dl
   14000e811:	and    DWORD PTR [rcx],eax
   14000e813:	add    BYTE PTR [rax+0x0],al
   14000e816:	add    BYTE PTR [rax],al
   14000e818:	cs fs (bad) 
   14000e81b:	je     0x14000e87e
   14000e81d:	and    al,0x30
   14000e81f:	xor    DWORD PTR [rax],eax
   14000e821:	add    BYTE PTR [rax],al
   14000e823:	add    BYTE PTR [rax+0x21],dl
   14000e826:	add    DWORD PTR [rax],eax
   14000e828:	add    al,0x0
   14000e82a:	add    BYTE PTR [rax],al
   14000e82c:	cs fs (bad) 
   14000e82f:	je     0x14000e892
   14000e831:	and    al,0x64
   14000e833:	imul   esi,DWORD PTR [rax],0x30
   14000e836:	add    BYTE PTR [rax],al
   14000e838:	pop    rax
   14000e839:	and    DWORD PTR [rcx],eax
   14000e83b:	add    ah,ch
   14000e83d:	add    BYTE PTR [rax],al
   14000e83f:	add    BYTE PTR [rsi],ch
   14000e841:	fs (bad) 
   14000e843:	je     0x14000e8a6
   14000e845:	and    al,0x72
   14000e847:	add    BYTE PTR [rdx+riz*1+0x1],al
   14000e84b:	add    BYTE PTR [rax],cl
   14000e84d:	add    BYTE PTR [rax],al
   14000e84f:	add    BYTE PTR [rsi],ch
   14000e851:	fs (bad) 
   14000e853:	je     0x14000e8b6
   14000e855:	and    al,0x7a
   14000e857:	jp     0x14000e859
   14000e859:	add    BYTE PTR [rax],al
   14000e85b:	add    BYTE PTR [rax+0x22],dl
   14000e85e:	add    DWORD PTR [rax],eax
   14000e860:	or     BYTE PTR [rsi],al
   14000e862:	add    BYTE PTR [rax],al
   14000e864:	cs (bad) 
   14000e867:	jae    0x14000e869
   14000e869:	add    BYTE PTR [rax],al
   14000e86b:	add    BYTE PTR [rax+0x28],bl
   14000e86e:	add    DWORD PTR [rax],eax
   14000e870:	adc    al,0x0
   14000e872:	add    BYTE PTR [rax],al
   14000e874:	cs (bad) 
   14000e877:	jae    0x14000e89d
   14000e879:	xor    BYTE PTR [rax],dh
   14000e87b:	add    BYTE PTR [rax+0x28],dh
   14000e87e:	add    DWORD PTR [rax],eax
   14000e880:	xor    al,0x1
   14000e882:	add    BYTE PTR [rax],al
   14000e884:	cs (bad) 
   14000e887:	jae    0x14000e8ad
   14000e889:	xor    BYTE PTR [rcx],dh
   14000e88b:	add    BYTE PTR [rcx+rbp*1+0x140001],ah
   14000e892:	add    BYTE PTR [rax],al
   14000e894:	cs (bad) 
   14000e897:	jae    0x14000e8bd
   14000e899:	imul   esi,DWORD PTR fs:[rax],0x30
   14000e89d:	add    BYTE PTR [rax],al
   14000e89f:	add    al,al
   14000e8a1:	sub    DWORD PTR [rcx],eax
   14000e8a3:	add    BYTE PTR [rax+rax*1+0x622e0000],dh
   14000e8aa:	jae    0x14000e91f
   14000e8ac:	and    al,0x7a
   14000e8ae:	jp     0x14000e8b0
   14000e8b0:	add    BYTE PTR [rax],dh
   14000e8b2:	add    DWORD PTR [rax],eax
   14000e8b4:	enter  0xd,0x0
   14000e8b8:	cs jo  0x14000e91f
   14000e8bb:	(bad)  
   14000e8bc:	je     0x14000e91f
   14000e8be:	add    BYTE PTR [rax],al
   14000e8c0:	add    BYTE PTR [rax+0x1],al
   14000e8c3:	add    BYTE PTR [rax+0x0],bl
   14000e8c6:	add    BYTE PTR [rax],al
   14000e8c8:	cs jb  0x14000e93e
   14000e8cb:	jb     0x14000e930
   14000e8cd:	and    al,0x30
   14000e8cf:	xor    DWORD PTR [rax],eax
   14000e8d1:	add    BYTE PTR [rax],al
   14000e8d3:	add    BYTE PTR [rax+0x40],ah
   14000e8d6:	add    DWORD PTR [rax],eax
   14000e8d8:	cwde   
   14000e8d9:	add    eax,DWORD PTR [rax]
   14000e8db:	add    BYTE PTR [rsi],ch
   14000e8dd:	jb     0x14000e952
   14000e8df:	jb     0x14000e944
   14000e8e1:	and    al,0x30
   14000e8e3:	xor    al,BYTE PTR [rax]
	...
   14000e8ed:	add    BYTE PTR [rax],al
   14000e8ef:	add    BYTE PTR [rcx],al
   14000e8f1:	add    al,0x1
   14000e8f3:	add    BYTE PTR [rdx+rax*2],al
   14000e8f6:	add    BYTE PTR [rax],al
   14000e8f8:	add    DWORD PTR [rdx],ecx
   14000e8fa:	add    al,0x0
   14000e8fc:	or     dh,BYTE PTR [rsi+rax*1]
   14000e8ff:	add    BYTE PTR [rdx],cl
   14000e901:	xor    al,BYTE PTR [rsi]
   14000e903:	jo     0x14000e906
   14000e905:	or     DWORD PTR [rcx],eax
   14000e907:	add    BYTE PTR [rcx],cl
   14000e909:	rex.X add BYTE PTR [rax],al
   14000e90c:	sbb    DWORD PTR [rip+0x74170007],esp        # 0x1b417e919
   14000e912:	sbb    eax,DWORD PTR [rax]
   14000e914:	(bad)  
   14000e915:	xor    al,0x1a
   14000e917:	add    BYTE PTR [rdi],dl
   14000e919:	add    DWORD PTR [rax],ebx
   14000e91b:	add    BYTE PTR [rbx],cl
   14000e91d:	push   rax
   14000e91e:	add    BYTE PTR [rax],al
   14000e920:	test   al,0x54
   14000e922:	add    BYTE PTR [rax],al
   14000e924:	mov    al,0x0
   14000e926:	add    BYTE PTR [rax],al
   14000e928:	and    DWORD PTR [rax],eax
   14000e92a:	add    BYTE PTR [rax],al
   14000e92c:	rcl    BYTE PTR [rax],0x0
   14000e92f:	add    BYTE PTR [rbp+0x12],al
   14000e932:	add    BYTE PTR [rax],al
   14000e934:	or     al,0xe9
   14000e936:	add    BYTE PTR [rax],al
   14000e938:	sbb    DWORD PTR [rdi],edi
   14000e93a:	or     eax,0xc9c42e00
   14000e93f:	add    BYTE PTR [rdx],ch
   14000e941:	je     0x14000e90b
   14000e943:	add    BYTE PTR [rsi],ah
   14000e945:	mov    DWORD PTR fs:[rax],0xc63422
   14000e94c:	(bad)  
   14000e94d:	add    edx,eax
   14000e94f:	add    BYTE PTR [rax],cl
   14000e951:	lock (bad) 
   14000e953:	loopne 0x14000e959
   14000e955:	push   rax
   14000e956:	add    BYTE PTR [rax],al
   14000e958:	cmp    BYTE PTR [rbp+0x0],dl
   14000e95b:	add    BYTE PTR [rax-0x29],al
   14000e95e:	add    BYTE PTR [rax],al
   14000e960:	add    al,BYTE PTR [rsi]
   14000e962:	add    BYTE PTR [rax],al
   14000e964:	and    DWORD PTR [rax],eax
   14000e966:	add    BYTE PTR [rax],al
   14000e968:	push   rax
   14000e969:	adc    al,BYTE PTR [rax]
   14000e96b:	add    BYTE PTR [rax+rbx*1+0x0],al
   14000e96f:	add    BYTE PTR [rax],bh
   14000e971:	jmp    0x13fffe976
   14000e976:	(bad)  
   14000e977:	call   QWORD PTR [rax+0x58]
   14000e97a:	add    BYTE PTR [rax],al
   14000e97c:	add    BYTE PTR [rax],al
   14000e97e:	add    BYTE PTR [rax],al
   14000e980:	pop    rsp
   14000e981:	pop    rax
   14000e982:	add    BYTE PTR [rax],al
   14000e984:	add    DWORD PTR [rax],eax
   14000e986:	add    BYTE PTR [rax],al
   14000e988:	push   0x2000058
   14000e98d:	add    BYTE PTR [rax],al
   14000e98f:	add    BYTE PTR [rax+rbx*2+0x0],dh
   14000e993:	add    BYTE PTR [rbx],al
   14000e995:	add    BYTE PTR [rax],al
   14000e997:	add    BYTE PTR [rax+0x4000058],al
   14000e99d:	add    BYTE PTR [rax],al
   14000e99f:	add    BYTE PTR [rax+rbx*2+0x20000],cl
   14000e9a6:	add    BYTE PTR [rax],al
   14000e9a8:	scas   al,BYTE PTR es:[rdi]
   14000e9a9:	pop    rax
   14000e9aa:	add    BYTE PTR [rax],al
   14000e9ac:	(bad)  
   14000e9ad:	add    BYTE PTR [rax],al
   14000e9af:	add    BYTE PTR [rdx+0x7000058],bh
   14000e9b5:	add    BYTE PTR [rax],al
   14000e9b7:	add    dh,al
   14000e9b9:	pop    rax
   14000e9ba:	add    BYTE PTR [rax],al
   14000e9bc:	or     BYTE PTR [rax],al
   14000e9be:	add    BYTE PTR [rax],al
   14000e9c0:	rcr    BYTE PTR [rax+0x0],cl
   14000e9c3:	add    BYTE PTR [rax],cl
   14000e9c5:	add    BYTE PTR [rax],al
   14000e9c7:	add    dh,bl
   14000e9c9:	pop    rax
   14000e9ca:	add    BYTE PTR [rax],al
   14000e9cc:	or     al,BYTE PTR [rax]
   14000e9ce:	add    BYTE PTR [rax],al
   14000e9d0:	(bad)  
   14000e9d1:	pop    rax
   14000e9d2:	add    BYTE PTR [rax],al
   14000e9d4:	or     eax,DWORD PTR [rax]
   14000e9d6:	add    BYTE PTR [rax],al
   14000e9d8:	neg    BYTE PTR [rax+0x0]
   14000e9db:	add    BYTE PTR [rax+0x12],dl
   14000e9de:	add    BYTE PTR [rax],al
   14000e9e0:	(bad)  
   14000e9e1:	(bad)  
   14000e9e2:	(bad)  
   14000e9e3:	call   FWORD PTR [rcx+0x12]
   14000e9e9:	add    BYTE PTR [rax],al
   14000e9eb:	add    BYTE PTR [rcx+0x1000012],bh
   14000e9f1:	add    BYTE PTR [rax],al
   14000e9f3:	add    BYTE PTR [rbp+0x2000013],bl
   14000e9f9:	add    BYTE PTR [rax],al
   14000e9fb:	add    BYTE PTR [rcx+0x4000013],ch
   14000ea01:	add    BYTE PTR [rax],al
   14000ea03:	add    bl,dl
   14000ea05:	adc    eax,DWORD PTR [rax]
   14000ea07:	add    BYTE PTR [rip+0xffffffffac000000],al        # 0xec00ea0d
   14000ea0d:	adc    al,0x0
   14000ea0f:	add    BYTE PTR [rax+rax*1],al
   14000ea12:	add    BYTE PTR [rax],al
   14000ea14:	lock adc al,0x0
   14000ea17:	add    BYTE PTR [rdx],al
   14000ea19:	add    BYTE PTR [rax],al
   14000ea1b:	add    BYTE PTR [rcx],bl
   14000ea1d:	adc    eax,0x60000
   14000ea22:	add    BYTE PTR [rax],al
   14000ea24:	nop
   14000ea25:	adc    eax,0x70000
   14000ea2a:	add    BYTE PTR [rax],al
   14000ea2c:	xchg   ebp,eax
   14000ea2d:	adc    eax,0x80000
   14000ea32:	add    BYTE PTR [rax],al
   14000ea34:	mov    eax,0x9000015
   14000ea39:	add    BYTE PTR [rax],al
   14000ea3b:	add    BYTE PTR [rip+0x8000016],dh        # 0x14800ea57
   14000ea41:	add    BYTE PTR [rax],al
   14000ea43:	add    BYTE PTR [rdx+0xa000016],bl
   14000ea49:	add    BYTE PTR [rax],al
   14000ea4b:	add    bl,bl
   14000ea4d:	(bad)  
   14000ea4e:	add    BYTE PTR [rax],al
   14000ea50:	or     eax,DWORD PTR [rax]
   14000ea52:	add    BYTE PTR [rax],al
   14000ea54:	adc    eax,0xc000018
   14000ea59:	add    BYTE PTR [rax],al
   14000ea5b:	add    BYTE PTR [rsi],dl
   14000ea5d:	pop    rsp
   14000ea5e:	add    BYTE PTR [rax],al
   14000ea60:	add    BYTE PTR [rax],al
   14000ea62:	add    BYTE PTR [rax],al
   14000ea64:	ss pop rsp
   14000ea66:	add    BYTE PTR [rax],al
   14000ea68:	add    DWORD PTR [rax],eax
   14000ea6a:	add    BYTE PTR [rax],al
   14000ea6c:	jl     0x14000eaca
   14000ea6e:	add    BYTE PTR [rax],al
   14000ea70:	add    eax,DWORD PTR [rax]
   14000ea72:	add    BYTE PTR [rax],al
   14000ea74:	xchg   DWORD PTR [rax+rax*1+0x0],ebx
   14000ea78:	add    al,BYTE PTR [rax]
   14000ea7a:	add    BYTE PTR [rax],al
   14000ea7c:	cdq    
   14000ea7d:	pop    rsp
   14000ea7e:	add    BYTE PTR [rax],al
   14000ea80:	add    eax,0xd3000000
   14000ea85:	pop    rsp
   14000ea86:	add    BYTE PTR [rax],al
   14000ea88:	add    eax,DWORD PTR [rax]
   14000ea8a:	add    BYTE PTR [rax],al
   14000ea8c:	ficomp WORD PTR [rax+rax*1+0x0]
   14000ea90:	add    al,BYTE PTR [rax]
   14000ea92:	add    BYTE PTR [rax],al
   14000ea94:	or     ebx,DWORD PTR [rbp+0x0]
   14000ea97:	add    BYTE PTR [rax+rax*1],al
   14000ea9a:	add    BYTE PTR [rax],al
   14000ea9c:	(bad)  
   14000ea9d:	pop    rbp
   14000ea9e:	add    BYTE PTR [rax],al
   14000eaa0:	add    al,BYTE PTR [rax]
   14000eaa2:	add    BYTE PTR [rax],al
   14000eaa4:	xor    ebx,DWORD PTR [rbp+0x0]
   14000eaa7:	add    BYTE PTR [rsi],al
   14000eaa9:	add    BYTE PTR [rax],al
   14000eaab:	add    BYTE PTR [rcx+0x900005d],al
   14000eab1:	add    BYTE PTR [rax],al
   14000eab3:	add    BYTE PTR [rbp+rbx*2+0x80000],ah
   14000eaba:	add    BYTE PTR [rax],al
   14000eabc:	enter  0x5d,0x0
   14000eac0:	or     al,BYTE PTR [rax]
   14000eac2:	add    BYTE PTR [rax],al
   14000eac4:	jmp    0x14000eb23
   14000eac6:	add    BYTE PTR [rax],al
   14000eac8:	or     eax,DWORD PTR [rax]
   14000eaca:	add    BYTE PTR [rax],al
   14000eacc:	mov    ds,WORD PTR [rsi+0x0]
   14000eacf:	add    BYTE PTR [rax+rax*1],cl
   14000ead2:	add    BYTE PTR [rax],al
   14000ead4:	pop    rax
   14000ead5:	pop    rdi
   14000ead6:	add    BYTE PTR [rax],al
   14000ead8:	or     eax,DWORD PTR [rax]
   14000eada:	add    BYTE PTR [rax],al
   14000eadc:	gs pop rdi
   14000eade:	add    BYTE PTR [rax],al
   14000eae0:	or     al,BYTE PTR [rax]
   14000eae2:	add    BYTE PTR [rax],al
   14000eae4:	jo     0x14000eb45
   14000eae6:	add    BYTE PTR [rax],al
   14000eae8:	or     BYTE PTR [rax],al
   14000eaea:	add    BYTE PTR [rax],al
   14000eaec:	mov    esp,0x700005f
   14000eaf1:	add    BYTE PTR [rax],al
   14000eaf3:	add    bh,al
   14000eaf5:	pop    rdi
   14000eaf6:	add    BYTE PTR [rax],al
   14000eaf8:	(bad)  
   14000eaf9:	add    BYTE PTR [rax],al
   14000eafb:	add    ah,dl
   14000eafd:	pop    rdi
   14000eafe:	add    BYTE PTR [rax],al
   14000eb00:	add    al,BYTE PTR [rax]
   14000eb02:	add    BYTE PTR [rax],al
   14000eb04:	fistp  WORD PTR [rdi+0x0]
   14000eb07:	add    BYTE PTR [rcx],al
   14000eb09:	add    BYTE PTR [rax],al
   14000eb0b:	add    cl,ch
   14000eb0d:	pop    rdi
   14000eb0e:	add    BYTE PTR [rax],al
   14000eb10:	add    BYTE PTR [rax],al
   14000eb12:	add    BYTE PTR [rax],al
   14000eb14:	neg    DWORD PTR [rdi+0x0]
   14000eb17:	add    bh,bh
   14000eb19:	(bad)  
   14000eb1a:	(bad)  
   14000eb1b:	inc    DWORD PTR [rcx]
   14000eb1d:	(bad)  
   14000eb1e:	add    al,BYTE PTR [rax]
   14000eb20:	(bad)  
   14000eb21:	xor    al,BYTE PTR [rdx]
   14000eb23:	push   rax
   14000eb24:	add    DWORD PTR [rdx],ecx
   14000eb26:	add    al,0x0
   14000eb28:	or     dl,BYTE PTR [rax+rcx*1+0x0]
   14000eb2c:	or     dh,BYTE PTR [rdx]
   14000eb2e:	(bad)  
   14000eb2f:	jo     0x14000eb52
   14000eb31:	(bad)  
   14000eb33:	add    BYTE PTR [rdi],cl
   14000eb35:	fs (bad) 
   14000eb37:	add    BYTE PTR [rip+0x50000634],al        # 0x19000f171
   14000eb3d:	sbb    BYTE PTR [rax],al
   14000eb3f:	add    BYTE PTR [rcx+0x18],bh
   14000eb42:	add    BYTE PTR [rax],al
   14000eb44:	and    al,0xeb
   14000eb46:	add    BYTE PTR [rax],al
   14000eb48:	and    DWORD PTR [rax],eax
   14000eb4a:	add    BYTE PTR [rax],al
   14000eb4c:	push   rax
   14000eb4d:	sbb    BYTE PTR [rax],al
   14000eb4f:	add    BYTE PTR [rcx+0x18],bh
   14000eb52:	add    BYTE PTR [rax],al
   14000eb54:	and    al,0xeb
   14000eb56:	add    BYTE PTR [rax],al
   14000eb58:	and    DWORD PTR [rax],eax
   14000eb5a:	add    BYTE PTR [rax],al
   14000eb5c:	push   rax
   14000eb5d:	sbb    BYTE PTR [rax],al
   14000eb5f:	add    BYTE PTR [rcx+0x18],bh
   14000eb62:	add    BYTE PTR [rax],al
   14000eb64:	and    al,0xeb
   14000eb66:	add    BYTE PTR [rax],al
   14000eb68:	and    DWORD PTR [rax],eax
   14000eb6a:	add    al,0x0
   14000eb6c:	add    BYTE PTR [rdi+rax*1+0x0],ah
   14000eb70:	add    BYTE PTR [rsi+rax*1],dh
   14000eb73:	add    BYTE PTR [rax+riz*2],dh
   14000eb76:	add    BYTE PTR [rax],al
   14000eb78:	fs (bad) 
   14000eb7a:	add    BYTE PTR [rax],al
   14000eb7c:	pop    rax
   14000eb7d:	jmp    0x14000eb7f
   14000eb7f:	add    BYTE PTR [rcx],al
   14000eb81:	or     DWORD PTR [rax+rax*1],eax
   14000eb84:	or     DWORD PTR [rdx+0x5],edx
   14000eb87:	rol    BYTE PTR [rbx],0x70
   14000eb8a:	add    ah,BYTE PTR [rax+0x21]
   14000eb8d:	sbb    BYTE PTR [rax+rax*1],al
   14000eb90:	sbb    ah,ah
   14000eb92:	add    eax,0xb340500
   14000eb97:	add    BYTE PTR [rax],dl
   14000eb99:	sbb    DWORD PTR [rax],eax
   14000eb9b:	add    BYTE PTR [rsi+0x19],al
   14000eb9e:	add    BYTE PTR [rax],al
   14000eba0:	sub    bl,0x0
   14000eba3:	add    BYTE PTR [rcx],ah
   14000eba5:	or     al,BYTE PTR [rax+rax*1]
   14000eba8:	or     dh,ah
   14000ebaa:	add    al,0x0
   14000ebac:	add    eax,0x46000c54
   14000ebb1:	sbb    DWORD PTR [rax],eax
   14000ebb3:	add    BYTE PTR [rbp+0x19],ch
   14000ebb6:	add    BYTE PTR [rax],al
   14000ebb8:	mov    ebx,gs
   14000ebba:	add    BYTE PTR [rax],al
   14000ebbc:	and    DWORD PTR [rax],eax
   14000ebbe:	add    BYTE PTR [rax],al
   14000ebc0:	rex.RX sbb DWORD PTR [rax],r8d
   14000ebc3:	add    BYTE PTR [rbp+0x19],ch
   14000ebc6:	add    BYTE PTR [rax],al
   14000ebc8:	mov    ebx,gs
   14000ebca:	add    BYTE PTR [rax],al
   14000ebcc:	and    DWORD PTR [rax],eax
   14000ebce:	add    BYTE PTR [rax],al
   14000ebd0:	adc    BYTE PTR [rcx],bl
   14000ebd2:	add    BYTE PTR [rax],al
   14000ebd4:	rex.RX sbb DWORD PTR [rax],r8d
   14000ebd7:	add    BYTE PTR [rax+0x210000eb],al
   14000ebdd:	add    BYTE PTR [rax],cl
   14000ebdf:	add    BYTE PTR [rax],al
   14000ebe1:	hlt    
   14000ebe2:	add    al,0x0
   14000ebe4:	add    ah,ah
   14000ebe6:	add    eax,0xc540000
   14000ebeb:	add    BYTE PTR [rax],al
   14000ebed:	xor    al,0xb
   14000ebef:	add    BYTE PTR [rax],dl
   14000ebf1:	sbb    DWORD PTR [rax],eax
   14000ebf3:	add    BYTE PTR [rsi+0x19],al
   14000ebf6:	add    BYTE PTR [rax],al
   14000ebf8:	sub    bl,0x0
   14000ebfb:	add    BYTE PTR [rcx],ah
   14000ebfd:	add    BYTE PTR [rax+rax*1],al
   14000ec00:	add    ah,ah
   14000ec02:	add    eax,0xb340000
   14000ec07:	add    BYTE PTR [rax],dl
   14000ec09:	sbb    DWORD PTR [rax],eax
   14000ec0b:	add    BYTE PTR [rsi+0x19],al
   14000ec0e:	add    BYTE PTR [rax],al
   14000ec10:	sub    bl,0x0
   14000ec13:	add    BYTE PTR [rcx],dl
   14000ec15:	and    cl,BYTE PTR [rdx]
   14000ec17:	add    BYTE PTR [rdx],ah
   14000ec19:	fs or  eax,0xc541d00
   14000ec1f:	add    BYTE PTR [rax],bl
   14000ec21:	xor    al,0xa
   14000ec23:	add    BYTE PTR [rdx],cl
   14000ec25:	push   rdx
   14000ec26:	(bad)  
   14000ec27:	lock add al,0xe0
   14000ec2a:	add    dh,BYTE PTR [rax+0x58]
   14000ec2d:	push   rcx
   14000ec2e:	add    BYTE PTR [rax],al
   14000ec30:	(bad)  
   14000ec31:	(bad)  
   14000ec32:	add    BYTE PTR [rax],al
   14000ec34:	and    DWORD PTR [rax],eax
   14000ec36:	add    BYTE PTR [rax],al
   14000ec38:	loopne 0x14000ec54
   14000ec3a:	add    BYTE PTR [rax],al
   14000ec3c:	(bad)  
   14000ec3d:	sbb    al,0x0
   14000ec3f:	add    BYTE PTR [rsp+rbp*8],dl
   14000ec42:	add    BYTE PTR [rax],al
   14000ec44:	(bad)  
   14000ec45:	(bad)  
   14000ec46:	(bad)  
   14000ec47:	call   QWORD PTR [rax]
   14000ec49:	pop    rcx
   14000ec4a:	add    BYTE PTR [rax],al
   14000ec4c:	(bad)  
   14000ec4d:	(bad)  
   14000ec4e:	(bad)  
   14000ec4f:	call   FWORD PTR [rcx+rbx*2]
   14000ec52:	add    BYTE PTR [rax],al
   14000ec54:	(bad)  
   14000ec55:	(bad)  
   14000ec56:	(bad)  
   14000ec57:	jmp    FWORD PTR [rax]
   14000ec59:	pop    rcx
   14000ec5a:	add    BYTE PTR [rax],al
   14000ec5c:	loopne 0x14000ec78
   14000ec5e:	add    BYTE PTR [rax],al
   14000ec60:	(bad)  
   14000ec61:	(bad)  
   14000ec62:	(bad)  
   14000ec63:	call   FWORD PTR [rdx]
   14000ec65:	sbb    eax,DWORD PTR [rax]
   14000ec67:	add    BYTE PTR [rcx],al
   14000ec69:	add    BYTE PTR [rax],al
   14000ec6b:	add    BYTE PTR [rdi+0x1b],cl
   14000ec6e:	add    BYTE PTR [rax],al
   14000ec70:	(bad)  
   14000ec71:	(bad)  
   14000ec72:	(bad)  
   14000ec73:	inc    DWORD PTR [rdx+0x200001b]
   14000ec79:	add    BYTE PTR [rax],al
   14000ec7b:	add    BYTE PTR [rbp-0xffffe5],ch
   14000ec81:	(bad)  
   14000ec82:	(bad)  
   14000ec83:	jmp    FWORD PTR [rcx+riz*2]
   14000ec86:	add    BYTE PTR [rax],al
   14000ec88:	(bad)  
   14000ec89:	(bad)  
   14000ec8a:	(bad)  
   14000ec8b:	push   QWORD PTR [rdi]
   14000ec8d:	(bad)  
   14000ec8e:	add    BYTE PTR [rax],al
   14000ec90:	add    BYTE PTR [rax],al
   14000ec92:	add    BYTE PTR [rax],al
   14000ec94:	outs   dx,BYTE PTR ds:[rsi]
   14000ec95:	(bad)  
   14000ec96:	add    BYTE PTR [rax],al
   14000ec98:	(bad)  
   14000ec99:	(bad)  
   14000ec9a:	(bad)  
   14000ec9b:	(bad)  
   14000ec9c:	jle    0x14000ecff
   14000ec9e:	add    BYTE PTR [rax],al
   14000eca0:	add    DWORD PTR [rax],eax
   14000eca2:	add    BYTE PTR [rax],al
   14000eca4:	xchg   BYTE PTR [rcx+0x0],ah
   14000eca7:	add    bh,bh
   14000eca9:	(bad)  
   14000ecaa:	(bad)  
   14000ecab:	call   FWORD PTR [rbx+0x2000061]
   14000ecb1:	add    BYTE PTR [rax],al
   14000ecb3:	add    BYTE PTR [rbx-0xffff9f],ah
   14000ecb9:	(bad)  
   14000ecba:	(bad)  
   14000ecbb:	inc    DWORD PTR [rcx]
   14000ecbd:	(bad)  
   14000ecbe:	add    al,BYTE PTR [rax]
   14000ecc0:	(bad)  
   14000ecc1:	xor    al,BYTE PTR [rdx]
   14000ecc3:	xor    BYTE PTR [rcx],ah
   14000ecc5:	add    eax,0x64050002
   14000ecca:	(bad)  
   14000eccb:	add    BYTE PTR [rax+0x1c],al
   14000ecce:	add    BYTE PTR [rax],al
   14000ecd0:	pop    rdi
   14000ecd1:	sbb    al,0x0
   14000ecd3:	add    BYTE PTR [rsp+rbp*8+0x5210000],bh
   14000ecda:	add    al,BYTE PTR [rax]
   14000ecdc:	add    eax,0xa000774
   14000ece1:	(bad)  
   14000ece2:	add    BYTE PTR [rax],al
   14000ece4:	punpckldq mm0,DWORD PTR [rax]
   14000ece7:	add    ah,al
   14000ece9:	in     al,dx
   14000ecea:	add    BYTE PTR [rax],al
   14000ecec:	add    DWORD PTR [rdi],ecx
   14000ecee:	(bad)  
   14000ecef:	add    BYTE PTR [rdi],cl
   14000ecf1:	fs (bad) 
   14000ecf3:	add    BYTE PTR [rdi],cl
   14000ecf5:	xor    al,0x6
   14000ecf7:	add    BYTE PTR [rdi],cl
   14000ecf9:	xor    cl,BYTE PTR [rbx]
   14000ecfb:	jo     0x14000ed1e
   14000ecfd:	add    BYTE PTR [rax],al
   14000ecff:	add    BYTE PTR [rax-0x3effffe4],dl
   14000ed05:	sbb    eax,0xecec0000
   14000ed0a:	add    BYTE PTR [rax],al
   14000ed0c:	add    DWORD PTR [rdx],ecx
   14000ed0e:	add    al,0x0
   14000ed10:	or     dh,BYTE PTR [rdi+rax*1]
   14000ed13:	add    BYTE PTR [rdx],cl
   14000ed15:	xor    al,BYTE PTR [rsi]
   14000ed17:	(bad)  
   14000ed18:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405ed20
   14000ed1e:	(bad)  
   14000ed1f:	add    al,dh
   14000ed21:	sbb    eax,0x1e1b0000
   14000ed26:	add    BYTE PTR [rax],al
   14000ed28:	or     al,0xed
   14000ed2a:	add    BYTE PTR [rax],al
   14000ed2c:	add    DWORD PTR [rdi],ecx
   14000ed2e:	(bad)  
   14000ed2f:	add    BYTE PTR [rdi],cl
   14000ed31:	fs (bad) 
   14000ed33:	add    BYTE PTR [rdi],cl
   14000ed35:	xor    al,0x6
   14000ed37:	add    BYTE PTR [rdi],cl
   14000ed39:	xor    cl,BYTE PTR [rbx]
   14000ed3b:	jo     0x14000ed5e
   14000ed3d:	add    BYTE PTR [rax],al
   14000ed3f:	add    BYTE PTR [rax],dh
   14000ed41:	(bad)  
   14000ed42:	add    BYTE PTR [rax],al
   14000ed44:	pop    rax
   14000ed45:	(bad)  
   14000ed46:	add    BYTE PTR [rax],al
   14000ed48:	sub    al,0xed
   14000ed4a:	add    BYTE PTR [rax],al
   14000ed4c:	sbb    DWORD PTR [rdx],esp
   14000ed4e:	or     al,BYTE PTR [rax]
   14000ed50:	and    dh,BYTE PTR [rbp+rcx*1+0x0]
   14000ed54:	sbb    eax,0x18000c64
   14000ed59:	xor    al,0xa
   14000ed5b:	add    BYTE PTR [rdx],cl
   14000ed5d:	push   rdx
   14000ed5e:	(bad)  
   14000ed5f:	lock add al,0xe0
   14000ed62:	add    al,al
   14000ed64:	pop    rax
   14000ed65:	push   rcx
   14000ed66:	add    BYTE PTR [rax],al
   14000ed68:	sbb    bh,dl
   14000ed6a:	add    BYTE PTR [rax],al
   14000ed6c:	and    DWORD PTR [rax],eax
   14000ed6e:	add    BYTE PTR [rax],al
   14000ed70:	nop
   14000ed71:	(bad)  
   14000ed72:	add    BYTE PTR [rax],al
   14000ed74:	mov    WORD PTR [rax],fs
   14000ed76:	add    BYTE PTR [rax],al
   14000ed78:	rex.WR in eax,dx
   14000ed7a:	add    BYTE PTR [rax],al
   14000ed7c:	(bad)  
   14000ed7d:	(bad)  
   14000ed7e:	(bad)  
   14000ed7f:	inc    DWORD PTR [rax]
   14000ed81:	add    BYTE PTR [rax],al
   14000ed83:	add    bh,bh
   14000ed85:	(bad)  
   14000ed86:	(bad)  
   14000ed87:	inc    DWORD PTR [rax]
	...
   14000ed91:	add    BYTE PTR [rax],al
   14000ed93:	add    BYTE PTR [rcx],al
   14000ed95:	add    BYTE PTR [rax],al
   14000ed97:	add    BYTE PTR [rcx],al
   14000ed99:	add    BYTE PTR [rax],al
   14000ed9b:	add    BYTE PTR [rax+0x400000ed],ah
	...
   14000eda9:	add    BYTE PTR [rax],al
   14000edab:	add    BYTE PTR [rax+0x59],al
   14000edae:	add    BYTE PTR [rax],al
   14000edb0:	cmp    BYTE PTR [rax],al
   14000edb2:	add    BYTE PTR [rax],al
   14000edb4:	nop
   14000edb5:	(bad)  
   14000edb6:	add    BYTE PTR [rax],al
   14000edb8:	(bad)  
   14000edb9:	(bad)  
   14000edba:	(bad)  
   14000edbb:	push   QWORD PTR [rbp+0x1f]
   14000edc1:	add    BYTE PTR [rax],al
   14000edc3:	add    BYTE PTR [rdx+0x20],ch
   14000edc6:	add    BYTE PTR [rax],al
   14000edc8:	(bad)  
   14000edc9:	(bad)  
   14000edca:	(bad)  
   14000edcb:	inc    DWORD PTR [rax+0x59]
   14000edce:	add    BYTE PTR [rax],al
   14000edd0:	add    BYTE PTR [rax],al
   14000edd2:	add    BYTE PTR [rax],al
   14000edd4:	rex.WRB pop r9
   14000edd6:	add    BYTE PTR [rax],al
   14000edd8:	add    DWORD PTR [rax],eax
   14000edda:	add    BYTE PTR [rax],al
   14000eddc:	addr32 pop rcx
   14000edde:	add    BYTE PTR [rax],al
   14000ede0:	add    BYTE PTR [rax],al
   14000ede2:	add    BYTE PTR [rax],al
   14000ede4:	jl     0x14000ee49
   14000ede6:	add    BYTE PTR [rax],al
   14000ede8:	(bad)  
   14000ede9:	(bad)  
   14000edea:	(bad)  
   14000edeb:	call   FWORD PTR [rcx]
   14000eded:	or     al,BYTE PTR [rdx]
   14000edef:	add    BYTE PTR [rdx],cl
   14000edf1:	xor    al,BYTE PTR [rsi]
   14000edf3:	push   rax
   14000edf4:	pop    rax
   14000edf5:	push   rcx
   14000edf6:	add    BYTE PTR [rax],al
   14000edf8:	sbb    bh,dl
   14000edfa:	add    BYTE PTR [rax],al
   14000edfc:	add    DWORD PTR [rcx+rax*1],eax
   14000edff:	add    BYTE PTR [rdx+rax*2],al
   14000ee02:	add    BYTE PTR [rax],al
   14000ee04:	and    DWORD PTR [rax],eax
   14000ee06:	add    BYTE PTR [rax],al
   14000ee08:	movabs al,ds:0xfc000020d0000020
   14000ee11:	in     eax,dx
   14000ee12:	add    BYTE PTR [rax],al
   14000ee14:	add    DWORD PTR [rcx+rax*1],eax
   14000ee17:	add    BYTE PTR [rdx+riz*2],al
   14000ee1a:	add    BYTE PTR [rax],al
   14000ee1c:	and    DWORD PTR [rax],eax
   14000ee1e:	add    BYTE PTR [rax],al
   14000ee20:	loopne 0x14000ee42
   14000ee22:	add    BYTE PTR [rax],al
   14000ee24:	and    DWORD PTR [rcx],esp
   14000ee26:	add    BYTE PTR [rax],al
   14000ee28:	adc    al,0xee
   14000ee2a:	add    BYTE PTR [rax],al
   14000ee2c:	sbb    DWORD PTR [rsi],ebx
   14000ee2e:	or     BYTE PTR [rax],al
   14000ee30:	(bad)  
   14000ee31:	je     0x14000ee40
   14000ee33:	add    BYTE PTR [rcx],bl
   14000ee35:	fs or  al,0x0
   14000ee38:	adc    al,0x34
   14000ee3a:	or     al,BYTE PTR [rax]
   14000ee3c:	(bad)  
   14000ee3d:	jb     0x14000ee41
   14000ee3f:	loopne 0x14000ee99
   14000ee41:	push   rcx
   14000ee42:	add    BYTE PTR [rax],al
   14000ee44:	movabs al,ds:0xffffffff0000d6
   14000ee4d:	add    BYTE PTR [rax],al
   14000ee4f:	add    bh,bh
   14000ee51:	(bad)  
   14000ee52:	(bad)  
   14000ee53:	inc    DWORD PTR [rax]
	...
   14000ee5d:	add    BYTE PTR [rax],al
   14000ee5f:	add    BYTE PTR [rcx],al
   14000ee61:	add    BYTE PTR [rax],al
   14000ee63:	add    BYTE PTR [rcx],al
   14000ee65:	add    BYTE PTR [rax],al
   14000ee67:	add    BYTE PTR [rsi+rbp*8+0x0],ch
   14000ee6b:	add    BYTE PTR [rax+0x0],al
	...
   14000ee76:	add    BYTE PTR [rax],al
   14000ee78:	sbb    BYTE PTR [rcx+0x0],0x0
   14000ee7c:	rex.W add BYTE PTR [rax],al
   14000ee7f:	add    BYTE PTR [rax],dh
   14000ee81:	and    DWORD PTR [rax],eax
   14000ee83:	add    bh,bh
   14000ee85:	(bad)  
   14000ee86:	(bad)  
   14000ee87:	dec    DWORD PTR [rax+0x21]
   14000ee8d:	add    BYTE PTR [rax],al
   14000ee8f:	add    BYTE PTR [rax-0xffffdf],bl
   14000ee95:	(bad)  
   14000ee96:	(bad)  
   14000ee97:	inc    DWORD PTR [rax+0x59]
   14000ee9d:	add    BYTE PTR [rax],al
   14000ee9f:	add    BYTE PTR [rbp+0x1000059],cl
   14000eea5:	add    BYTE PTR [rax],al
   14000eea7:	add    BYTE PTR [rcx],bl
   14000eea9:	or     al,BYTE PTR [rdx]
   14000eeab:	add    BYTE PTR [rdx],cl
   14000eead:	push   rdx
   14000eeae:	(bad)  
   14000eeaf:	push   rax
   14000eeb0:	pop    rax
   14000eeb1:	push   rcx
   14000eeb2:	add    BYTE PTR [rax],al
   14000eeb4:	movabs al,ds:0x400010d190000d6
   14000eebd:	(bad)  
   14000eebe:	add    BYTE PTR [rax],al
   14000eec0:	pop    rax
   14000eec1:	push   rcx
   14000eec2:	add    BYTE PTR [rax],al
   14000eec4:	js     0x14000ee9c
   14000eec6:	add    BYTE PTR [rax],al
   14000eec8:	(bad)  
   14000eec9:	(bad)  
   14000eeca:	(bad)  
   14000eecb:	inc    DWORD PTR [rax]
   14000eecd:	add    BYTE PTR [rax],al
   14000eecf:	add    bh,bh
   14000eed1:	(bad)  
   14000eed2:	(bad)  
   14000eed3:	inc    DWORD PTR [rax]
	...
   14000eedd:	add    BYTE PTR [rax],al
   14000eedf:	add    BYTE PTR [rcx],al
   14000eee1:	add    BYTE PTR [rax],al
   14000eee3:	add    BYTE PTR [rcx],al
   14000eee5:	add    BYTE PTR [rax],al
   14000eee7:	add    ah,ch
   14000eee9:	out    dx,al
   14000eeea:	add    BYTE PTR [rax],al
   14000eeec:	add    BYTE PTR [rax],al
	...
   14000eef7:	add    BYTE PTR [rax+0x38000059],dh
   14000eefd:	add    BYTE PTR [rax],al
   14000eeff:	add    al,dh
   14000ef01:	and    DWORD PTR [rax],eax
   14000ef03:	add    bh,bh
   14000ef05:	(bad)  
   14000ef06:	(bad)  
   14000ef07:	(bad)  
   14000ef08:	std    
   14000ef09:	and    DWORD PTR [rax],eax
   14000ef0b:	add    BYTE PTR [rax],al
   14000ef0d:	add    BYTE PTR [rax],al
   14000ef0f:	add    BYTE PTR [rbx],bl
   14000ef11:	and    al,BYTE PTR [rax]
   14000ef13:	add    bh,bh
   14000ef15:	(bad)  
   14000ef16:	(bad)  
   14000ef17:	push   QWORD PTR [rax+0x59]
   14000ef1d:	add    BYTE PTR [rax],al
   14000ef1f:	add    BYTE PTR [rbp+0x1000059],bh
   14000ef25:	add    BYTE PTR [rax],al
   14000ef27:	add    BYTE PTR [rcx],bl
   14000ef29:	or     al,BYTE PTR [rdx]
   14000ef2b:	add    BYTE PTR [rdx],cl
   14000ef2d:	xor    al,BYTE PTR [rsi]
   14000ef2f:	push   rax
   14000ef30:	pop    rax
   14000ef31:	push   rcx
   14000ef32:	add    BYTE PTR [rax],al
   14000ef34:	js     0x14000ef0c
   14000ef36:	add    BYTE PTR [rax],al
   14000ef38:	sbb    DWORD PTR [rbx],esp
   14000ef3a:	or     BYTE PTR [rax],al
   14000ef3c:	adc    al,0x64
   14000ef3e:	adc    eax,DWORD PTR [rax]
   14000ef40:	adc    al,0x54
   14000ef42:	adc    al,BYTE PTR [rax]
   14000ef44:	adc    al,0x34
   14000ef46:	adc    DWORD PTR [rax],eax
   14000ef48:	adc    al,0xd2
   14000ef4a:	adc    BYTE PTR [rax-0x58],dh
   14000ef4d:	push   rsp
   14000ef4e:	add    BYTE PTR [rax],al
   14000ef50:	push   0x21000000
   14000ef55:	add    BYTE PTR [rax],al
   14000ef57:	add    BYTE PTR [rax],dh
   14000ef59:	and    al,BYTE PTR [rax]
   14000ef5b:	add    ch,ch
   14000ef5d:	and    eax,DWORD PTR [rax]
   14000ef5f:	add    BYTE PTR [rax],bh
   14000ef61:	out    dx,eax
   14000ef62:	add    BYTE PTR [rax],al
   14000ef64:	sbb    DWORD PTR [rbx],esp
   14000ef66:	or     BYTE PTR [rax],al
   14000ef68:	adc    al,0x64
   14000ef6a:	adc    eax,DWORD PTR [rax]
   14000ef6c:	adc    al,0x54
   14000ef6e:	adc    al,BYTE PTR [rax]
   14000ef70:	adc    al,0x34
   14000ef72:	adc    DWORD PTR [rax],eax
   14000ef74:	adc    al,0xd2
   14000ef76:	adc    BYTE PTR [rax-0x58],dh
   14000ef79:	push   rsp
   14000ef7a:	add    BYTE PTR [rax],al
   14000ef7c:	push   0x21000000
   14000ef81:	add    BYTE PTR [rax],al
   14000ef83:	add    BYTE PTR [rax],al
   14000ef85:	and    al,0x0
   14000ef87:	add    BYTE PTR [rbp+0x64000025],bh
   14000ef8d:	out    dx,eax
   14000ef8e:	add    BYTE PTR [rax],al
   14000ef90:	sbb    DWORD PTR [rbx],esp
   14000ef92:	or     BYTE PTR [rax],al
   14000ef94:	adc    al,0x64
   14000ef96:	adc    eax,DWORD PTR [rax]
   14000ef98:	adc    al,0x54
   14000ef9a:	adc    al,BYTE PTR [rax]
   14000ef9c:	adc    al,0x34
   14000ef9e:	adc    DWORD PTR [rax],eax
   14000efa0:	adc    al,0xd2
   14000efa2:	adc    BYTE PTR [rax-0x58],dh
   14000efa5:	push   rsp
   14000efa6:	add    BYTE PTR [rax],al
   14000efa8:	push   0x21000000
   14000efad:	add    BYTE PTR [rax],al
   14000efaf:	add    al,dl
   14000efb1:	and    eax,0x278d0000
   14000efb6:	add    BYTE PTR [rax],al
   14000efb8:	nop
   14000efb9:	out    dx,eax
   14000efba:	add    BYTE PTR [rax],al
   14000efbc:	add    DWORD PTR [rdx],ecx
   14000efbe:	add    al,0x0
   14000efc0:	or     dh,BYTE PTR [rdi+rax*1]
   14000efc3:	add    BYTE PTR [rdx],cl
   14000efc5:	xor    al,BYTE PTR [rsi]
   14000efc7:	jo     0x14000efea
   14000efc9:	add    BYTE PTR [rax],al
   14000efcb:	add    BYTE PTR [rax+0xa000027],ah
   14000efd1:	sub    BYTE PTR [rax],al
   14000efd3:	add    BYTE PTR [rdi+rbp*8+0xf010000],bh
   14000efda:	(bad)  
   14000efdb:	add    BYTE PTR [rdi],cl
   14000efdd:	or     DWORD PTR fs:[rax],eax
   14000efe0:	sysenter 
   14000efe2:	or     BYTE PTR [rax],al
   14000efe4:	rdmsr  
   14000efe6:	or     esi,DWORD PTR [rax+0x21]
   14000efe9:	add    BYTE PTR [rax],al
   14000efeb:	add    BYTE PTR [rax],dl
   14000efed:	sub    BYTE PTR [rax],al
   14000efef:	add    BYTE PTR [rcx-0x27ffffd8],al
   14000eff5:	out    dx,eax
   14000eff6:	add    BYTE PTR [rax],al
   14000eff8:	sbb    DWORD PTR [rdi+rax*1],esp
   14000effb:	add    BYTE PTR [rdx],dl
   14000effd:	fs (bad) 
   14000efff:	add    BYTE PTR [rdx],dl
   14000f001:	xor    al,0x15
   14000f003:	add    BYTE PTR [rdx],dl
   14000f005:	add    DWORD PTR [rdx],edx
   14000f007:	add    BYTE PTR [rbx],cl
   14000f009:	jo     0x14000f00b
   14000f00b:	add    BYTE PTR [rax-0x7fffffac],ch
   14000f011:	add    BYTE PTR [rax],al
   14000f013:	add    BYTE PTR [rcx],ah
   14000f015:	add    BYTE PTR [rax],al
   14000f017:	add    BYTE PTR [rax+0x3c000028],dl
   14000f01d:	sub    DWORD PTR [rax],eax
   14000f01f:	add    al,bh
   14000f021:	out    dx,eax
   14000f022:	add    BYTE PTR [rax],al
   14000f024:	sbb    DWORD PTR [rbx],ebp
   14000f026:	(bad)  
   14000f027:	add    BYTE PTR [rdx],bl
   14000f029:	fs cmp eax,0x3c341a00
   14000f02f:	add    BYTE PTR [rdx],bl
   14000f031:	add    DWORD PTR [rax],edi
   14000f033:	add    BYTE PTR [rax+rdx*2],cl
   14000f036:	add    BYTE PTR [rax],al
   14000f038:	test   al,0x54
   14000f03a:	add    BYTE PTR [rax],al
   14000f03c:	mov    al,0x1
   14000f03e:	add    BYTE PTR [rax],al
   14000f040:	and    DWORD PTR [rdx+rax*1],eax
   14000f043:	add    BYTE PTR [rsp+rsi*2],al
   14000f046:	cmp    eax,DWORD PTR [rax]
   14000f048:	push   rax
   14000f049:	sub    DWORD PTR [rax],eax
   14000f04b:	add    BYTE PTR [rcx+rbp*1-0xfdc0000],al
   14000f052:	add    BYTE PTR [rax],al
   14000f054:	and    DWORD PTR [rax],eax
   14000f056:	add    BYTE PTR [rax],al
   14000f058:	push   rax
   14000f059:	sub    DWORD PTR [rax],eax
   14000f05b:	add    BYTE PTR [rcx+rbp*1-0xfdc0000],al
   14000f062:	add    BYTE PTR [rax],al
   14000f064:	and    DWORD PTR [rax],eax
   14000f066:	add    al,BYTE PTR [rax]
   14000f068:	add    BYTE PTR [rbx+rdi*1+0x0],dh
   14000f06c:	push   rax
   14000f06d:	sub    DWORD PTR [rax],eax
   14000f06f:	add    BYTE PTR [rcx+rbp*1-0xfdc0000],al
   14000f076:	add    BYTE PTR [rax],al
   14000f078:	and    DWORD PTR [rax],eax
   14000f07a:	add    BYTE PTR [rax],al
   14000f07c:	push   rax
   14000f07d:	sub    DWORD PTR [rax],eax
   14000f07f:	add    BYTE PTR [rcx+rbp*1-0xfdc0000],al
   14000f086:	add    BYTE PTR [rax],al
   14000f088:	sbb    DWORD PTR [rbx],ebp
   14000f08a:	(bad)  
   14000f08b:	add    BYTE PTR [rdx],bl
   14000f08d:	fs cmp eax,0x3c341a00
   14000f093:	add    BYTE PTR [rdx],bl
   14000f095:	add    DWORD PTR [rax],edi
   14000f097:	add    BYTE PTR [rax+rdx*2],cl
   14000f09a:	add    BYTE PTR [rax],al
   14000f09c:	test   al,0x54
   14000f09e:	add    BYTE PTR [rax],al
   14000f0a0:	mov    al,0x1
   14000f0a2:	add    BYTE PTR [rax],al
   14000f0a4:	and    DWORD PTR [rdx+rax*1],eax
   14000f0a7:	add    BYTE PTR [rsp+rsi*2],al
   14000f0aa:	cmp    eax,DWORD PTR [rax]
   14000f0ac:	xor    BYTE PTR [rbx],ch
   14000f0ae:	add    BYTE PTR [rax],al
   14000f0b0:	sub    eax,DWORD PTR fs:[rax]
   14000f0b3:	add    BYTE PTR [rax+0x210000f0],cl
   14000f0b9:	add    BYTE PTR [rax],al
   14000f0bb:	add    BYTE PTR [rax],dh
   14000f0bd:	sub    eax,DWORD PTR [rax]
   14000f0bf:	add    BYTE PTR [rbx+rbp*1+0x0],ah
   14000f0c3:	add    BYTE PTR [rax+0x210000f0],cl
   14000f0c9:	add    BYTE PTR [rdx],al
   14000f0cb:	add    BYTE PTR [rax],al
   14000f0cd:	je     0x14000f10a
   14000f0cf:	add    BYTE PTR [rax],dh
   14000f0d1:	sub    eax,DWORD PTR [rax]
   14000f0d3:	add    BYTE PTR [rbx+rbp*1+0x0],ah
   14000f0d7:	add    BYTE PTR [rax+0x210000f0],cl
   14000f0dd:	add    BYTE PTR [rax],al
   14000f0df:	add    BYTE PTR [rax],dh
   14000f0e1:	sub    eax,DWORD PTR [rax]
   14000f0e3:	add    BYTE PTR [rbx+rbp*1+0x0],ah
   14000f0e7:	add    BYTE PTR [rax+0x190000f0],cl
   14000f0ed:	sub    eax,DWORD PTR [rdi]
   14000f0ef:	add    BYTE PTR [rdx],bl
   14000f0f1:	fs cmp eax,0x3c341a00
   14000f0f7:	add    BYTE PTR [rdx],bl
   14000f0f9:	add    DWORD PTR [rax],edi
   14000f0fb:	add    BYTE PTR [rax+rdx*2],cl
   14000f0fe:	add    BYTE PTR [rax],al
   14000f100:	test   al,0x54
   14000f102:	add    BYTE PTR [rax],al
   14000f104:	mov    al,0x1
   14000f106:	add    BYTE PTR [rax],al
   14000f108:	and    DWORD PTR [rdx+rax*1],eax
   14000f10b:	add    BYTE PTR [rsp+rsi*2],al
   14000f10e:	cmp    eax,DWORD PTR [rax]
   14000f110:	adc    BYTE PTR [rip+0x2d440000],ch        # 0x16d44f116
   14000f116:	add    BYTE PTR [rax],al
   14000f118:	in     al,dx
   14000f119:	lock add BYTE PTR [rax],al
   14000f11c:	and    DWORD PTR [rax],eax
   14000f11e:	add    BYTE PTR [rax],al
   14000f120:	adc    BYTE PTR [rip+0x2d440000],ch        # 0x16d44f126
   14000f126:	add    BYTE PTR [rax],al
   14000f128:	in     al,dx
   14000f129:	lock add BYTE PTR [rax],al
   14000f12c:	and    DWORD PTR [rax],eax
   14000f12e:	add    al,BYTE PTR [rax]
   14000f130:	add    BYTE PTR [rbx+rdi*1+0x0],dh
   14000f134:	adc    BYTE PTR [rip+0x2d440000],ch        # 0x16d44f13a
   14000f13a:	add    BYTE PTR [rax],al
   14000f13c:	in     al,dx
   14000f13d:	lock add BYTE PTR [rax],al
   14000f140:	and    DWORD PTR [rax],eax
   14000f142:	add    BYTE PTR [rax],al
   14000f144:	adc    BYTE PTR [rip+0x2d440000],ch        # 0x16d44f14a
   14000f14a:	add    BYTE PTR [rax],al
   14000f14c:	in     al,dx
   14000f14d:	lock add BYTE PTR [rax],al
   14000f150:	add    DWORD PTR [rsi],eax
   14000f152:	add    al,BYTE PTR [rax]
   14000f154:	(bad)  
   14000f155:	xor    al,BYTE PTR [rdx]
   14000f157:	xor    BYTE PTR [rcx],ah
   14000f159:	or     al,BYTE PTR [rax+rax*1]
   14000f15c:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   14000f160:	add    eax,0xf0000664
   14000f165:	add    BYTE PTR cs:[rax],al
   14000f168:	add    ebp,DWORD PTR [rdi]
   14000f16a:	add    BYTE PTR [rax],al
   14000f16c:	push   rax
   14000f16d:	icebp  
   14000f16e:	add    BYTE PTR [rax],al
   14000f170:	and    DWORD PTR [rax],eax
   14000f172:	add    BYTE PTR [rax],al
   14000f174:	lock add BYTE PTR cs:[rax],al
   14000f178:	add    ebp,DWORD PTR [rdi]
   14000f17a:	add    BYTE PTR [rax],al
   14000f17c:	push   rax
   14000f17d:	icebp  
   14000f17e:	add    BYTE PTR [rax],al
   14000f180:	and    DWORD PTR [rax],eax
   14000f182:	add    al,0x0
   14000f184:	add    BYTE PTR [rdi+rax*1+0x0],dh
   14000f188:	add    BYTE PTR [rsi+rax*1+0x0],ah
   14000f18c:	lock add BYTE PTR cs:[rax],al
   14000f190:	add    ebp,DWORD PTR [rdi]
   14000f192:	add    BYTE PTR [rax],al
   14000f194:	push   rax
   14000f195:	icebp  
   14000f196:	add    BYTE PTR [rax],al
   14000f198:	and    DWORD PTR [rax],eax
   14000f19a:	add    BYTE PTR [rax],al
   14000f19c:	lock add BYTE PTR cs:[rax],al
   14000f1a0:	add    ebp,DWORD PTR [rdi]
   14000f1a2:	add    BYTE PTR [rax],al
   14000f1a4:	push   rax
   14000f1a5:	icebp  
   14000f1a6:	add    BYTE PTR [rax],al
   14000f1a8:	and    DWORD PTR [rax],eax
   14000f1aa:	add    al,0x0
   14000f1ac:	add    BYTE PTR [rdi+rax*1+0x0],dh
   14000f1b0:	add    BYTE PTR [rsi+rax*1+0x0],ah
   14000f1b4:	or     al,0x6a
   14000f1b6:	add    BYTE PTR [rax],al
   14000f1b8:	sbb    al,0x6a
   14000f1ba:	add    BYTE PTR [rax],al
   14000f1bc:	cwde   
   14000f1bd:	icebp  
   14000f1be:	add    BYTE PTR [rax],al
   14000f1c0:	add    DWORD PTR [rsi],eax
   14000f1c2:	add    al,BYTE PTR [rax]
   14000f1c4:	(bad)  
   14000f1c5:	jb     0x14000f1c9
   14000f1c7:	xor    BYTE PTR [rcx],al
   14000f1c9:	add    al,0x1
   14000f1cb:	add    BYTE PTR [rdx+rax*4],al
   14000f1ce:	add    BYTE PTR [rax],al
   14000f1d0:	and    DWORD PTR [rdi],edx
   14000f1d2:	add    al,0x0
   14000f1d4:	(bad)  
   14000f1d5:	je     0x14000f1de
   14000f1d7:	add    BYTE PTR [rip+0xffffffffa0000834],al        # 0xe000fa11
   14000f1dd:	xor    BYTE PTR [rax],al
   14000f1df:	add    dh,dh
   14000f1e1:	xor    BYTE PTR [rax],al
   14000f1e3:	add    al,cl
   14000f1e5:	icebp  
   14000f1e6:	add    BYTE PTR [rax],al
   14000f1e8:	and    DWORD PTR [rax],eax
   14000f1ea:	add    al,0x0
   14000f1ec:	add    BYTE PTR [rdi+rax*1+0x0],dh
   14000f1f0:	add    BYTE PTR [rax+rcx*1],dh
   14000f1f3:	add    BYTE PTR [rax-0x9ffffd0],ah
   14000f1f9:	xor    BYTE PTR [rax],al
   14000f1fb:	add    al,cl
   14000f1fd:	icebp  
   14000f1fe:	add    BYTE PTR [rax],al
   14000f200:	sbb    DWORD PTR [rip+0x72060002],edx        # 0x1b206f208
   14000f206:	add    dh,BYTE PTR [rax]
   14000f208:	test   al,0x54
   14000f20a:	add    BYTE PTR [rax],al
   14000f20c:	xor    BYTE PTR [rax],al
   14000f20e:	add    BYTE PTR [rax],al
   14000f210:	and    DWORD PTR [rcx],edx
   14000f212:	add    al,0x0
   14000f214:	adc    DWORD PTR [rsp+rcx*1+0x0],esi
   14000f218:	add    eax,0xb0000b64
   14000f21d:	xor    DWORD PTR [rax],eax
   14000f21f:	add    dl,dl
   14000f221:	xor    DWORD PTR [rax],eax
   14000f223:	add    BYTE PTR [rax],al
   14000f225:	repnz add BYTE PTR [rax],al
   14000f228:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x12405f230
   14000f22e:	or     eax,0x31d200
   14000f233:	add    bl,ch
   14000f235:	xor    DWORD PTR [rax],eax
   14000f237:	add    BYTE PTR [rax],dl
   14000f239:	repnz add BYTE PTR [rax],al
   14000f23c:	and    DWORD PTR [rax],eax
   14000f23e:	add    BYTE PTR [rax],al
   14000f240:	shl    BYTE PTR [rcx],cl
   14000f242:	add    BYTE PTR [rax],al
   14000f244:	jmp    0x14000f277
   14000f246:	add    BYTE PTR [rax],al
   14000f248:	adc    dl,dh
   14000f24a:	add    BYTE PTR [rax],al
   14000f24c:	and    DWORD PTR [rax],eax
   14000f24e:	add    BYTE PTR [rax],al
   14000f250:	mov    al,0x31
   14000f252:	add    BYTE PTR [rax],al
   14000f254:	shl    BYTE PTR [rcx],cl
   14000f256:	add    BYTE PTR [rax],al
   14000f258:	add    dl,dh
   14000f25a:	add    BYTE PTR [rax],al
   14000f25c:	and    DWORD PTR [rax],eax
   14000f25e:	add    al,0x0
   14000f260:	add    BYTE PTR [rsp+rcx*1+0x0],dh
   14000f264:	add    BYTE PTR [rbx+rcx*1+0x0],ah
   14000f268:	mov    al,0x31
   14000f26a:	add    BYTE PTR [rax],al
   14000f26c:	shl    BYTE PTR [rcx],cl
   14000f26e:	add    BYTE PTR [rax],al
   14000f270:	add    dl,dh
   14000f272:	add    BYTE PTR [rax],al
   14000f274:	add    DWORD PTR [rdx],ecx
   14000f276:	add    al,0x0
   14000f278:	or     dh,BYTE PTR [rbx+rcx*1]
   14000f27b:	add    BYTE PTR [rdx],cl
   14000f27d:	push   rdx
   14000f27e:	(bad)  
   14000f27f:	(bad)  
   14000f280:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405f288
   14000f286:	or     al,BYTE PTR [rax]
   14000f288:	movabs al,ds:0x74000032cf000032
   14000f291:	repnz add BYTE PTR [rax],al
   14000f294:	and    DWORD PTR [rax],eax
   14000f296:	add    al,BYTE PTR [rax]
   14000f298:	add    BYTE PTR [rdx+rcx*1+0x0],dh
   14000f29c:	movabs al,ds:0x74000032cf000032
   14000f2a5:	repnz add BYTE PTR [rax],al
   14000f2a8:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415f2b6
   14000f2ae:	or     BYTE PTR [rax],al
   14000f2b0:	adc    eax,0x15000764
   14000f2b5:	xor    al,0x6
   14000f2b7:	add    BYTE PTR [rip+0x21e01132],dl        # 0x161e103ef
   14000f2bd:	add    BYTE PTR [rax],al
   14000f2bf:	add    BYTE PTR [rax+0x33],ah
   14000f2c2:	add    BYTE PTR [rax],al
   14000f2c4:	stos   DWORD PTR es:[rdi],eax
   14000f2c5:	xor    eax,DWORD PTR [rax]
   14000f2c7:	add    BYTE PTR [rax+0x10000f2],ch
   14000f2cd:	clts   
   14000f2cf:	add    BYTE PTR [rdi],cl
   14000f2d1:	fs (bad) 
   14000f2d3:	add    BYTE PTR [rdi],cl
   14000f2d5:	xor    al,0x6
   14000f2d7:	add    BYTE PTR [rdi],cl
   14000f2d9:	xor    cl,BYTE PTR [rbx]
   14000f2db:	jo     0x14000f2fe
   14000f2dd:	add    BYTE PTR [rax],al
   14000f2df:	add    al,al
   14000f2e1:	xor    eax,DWORD PTR [rax]
   14000f2e3:	add    BYTE PTR [rbp+0x34],al
   14000f2e6:	add    BYTE PTR [rax],al
   14000f2e8:	int3   
   14000f2e9:	repnz add BYTE PTR [rax],al
   14000f2ec:	add    DWORD PTR [rsi],eax
   14000f2ee:	add    al,BYTE PTR [rax]
   14000f2f0:	(bad)  
   14000f2f1:	xor    al,BYTE PTR [rdx]
   14000f2f3:	xor    BYTE PTR [rcx],ah
   14000f2f5:	add    BYTE PTR [rax],al
   14000f2f7:	add    BYTE PTR [rax+0x34],dl
   14000f2fa:	add    BYTE PTR [rax],al
   14000f2fc:	je     0x14000f332
   14000f2fe:	add    BYTE PTR [rax],al
   14000f300:	in     al,dx
   14000f301:	repnz add BYTE PTR [rax],al
   14000f304:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a405f30c
   14000f30a:	(bad)  
   14000f30b:	add    ah,bl
   14000f30d:	imul   eax,DWORD PTR [rax],0x0
   14000f310:	in     eax,0x6b
   14000f312:	add    BYTE PTR [rax],al
   14000f314:	hlt    
   14000f315:	repnz add BYTE PTR [rax],al
   14000f318:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405f320
   14000f31e:	(bad)  
   14000f31f:	add    ch,ah
   14000f321:	imul   eax,DWORD PTR [rax],0x0
   14000f324:	icebp  
   14000f325:	imul   eax,DWORD PTR [rax],0x0
   14000f328:	add    al,0xf3
   14000f32a:	add    BYTE PTR [rax],al
   14000f32c:	add    DWORD PTR [rdx],ecx
   14000f32e:	add    al,0x0
   14000f330:	or     dh,BYTE PTR [rax+rcx*1]
   14000f333:	add    BYTE PTR [rdx],cl
   14000f335:	xor    al,BYTE PTR [rsi]
   14000f337:	jo     0x14000f35a
   14000f339:	add    eax,0xe4050002
   14000f33e:	(bad)  
   14000f33f:	add    BYTE PTR [rax-0x3affffcc],al
   14000f345:	xor    al,0x0
   14000f347:	add    BYTE PTR [rbx+rsi*8],ch
   14000f34a:	add    BYTE PTR [rax],al
   14000f34c:	and    DWORD PTR [rax],eax
   14000f34e:	add    BYTE PTR [rax],al
   14000f350:	xor    BYTE PTR [rax+rax*1],0x0
   14000f354:	(bad)
   14000f357:	add    BYTE PTR [rbx+rsi*8],ch
   14000f35a:	add    BYTE PTR [rax],al
   14000f35c:	and    DWORD PTR [rax],eax
   14000f35e:	add    al,BYTE PTR [rax]
   14000f360:	add    ah,ah
   14000f362:	(bad)  
   14000f363:	add    BYTE PTR [rax-0x3affffcc],al
   14000f369:	xor    al,0x0
   14000f36b:	add    BYTE PTR [rbx+rsi*8],ch
   14000f36e:	add    BYTE PTR [rax],al
   14000f370:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a405f378
   14000f376:	(bad)  
   14000f377:	add    BYTE PTR [rdx],bl
   14000f379:	ins    BYTE PTR es:[rdi],dx
   14000f37a:	add    BYTE PTR [rax],al
   14000f37c:	sbb    eax,0x5c00006c
   14000f381:	repz add BYTE PTR [rax],al
   14000f384:	add    DWORD PTR [rdi],ecx
   14000f386:	add    al,0x0
   14000f388:	lidt   [rip+0x2700300]        # 0x14270f68f
   14000f38f:	push   rax
   14000f390:	and    DWORD PTR [rax],ecx
   14000f392:	add    al,BYTE PTR [rax]
   14000f394:	or     BYTE PTR [rsp+rbx*1],dh
   14000f397:	add    BYTE PTR [rax],al
   14000f399:	xor    eax,0x353c0000
   14000f39e:	add    BYTE PTR [rax],al
   14000f3a0:	test   bl,dh
   14000f3a2:	add    BYTE PTR [rax],al
   14000f3a4:	and    DWORD PTR [rax],eax
   14000f3a6:	add    BYTE PTR [rax],al
   14000f3a8:	add    BYTE PTR [rip+0x353c0000],dh        # 0x1753cf3ae
   14000f3ae:	add    BYTE PTR [rax],al
   14000f3b0:	test   bl,dh
   14000f3b2:	add    BYTE PTR [rax],al
   14000f3b4:	and    DWORD PTR [rax],eax
   14000f3b6:	add    BYTE PTR [rax],al
   14000f3b8:	add    BYTE PTR [rip+0x353c0000],dh        # 0x1753cf3be
   14000f3be:	add    BYTE PTR [rax],al
   14000f3c0:	test   bl,dh
   14000f3c2:	add    BYTE PTR [rax],al
   14000f3c4:	and    DWORD PTR [rax],eax
   14000f3c6:	add    al,BYTE PTR [rax]
   14000f3c8:	add    BYTE PTR [rsp+rbx*1],dh
   14000f3cb:	add    BYTE PTR [rsi],bh
   14000f3cd:	ins    BYTE PTR es:[rdi],dx
   14000f3ce:	add    BYTE PTR [rax],al
   14000f3d0:	pop    rcx
   14000f3d1:	ins    BYTE PTR es:[rdi],dx
   14000f3d2:	add    BYTE PTR [rax],al
   14000f3d4:	mov    ah,0xf3
   14000f3d6:	add    BYTE PTR [rax],al
   14000f3d8:	add    DWORD PTR [rdx],ecx
   14000f3da:	add    eax,DWORD PTR [rax]
   14000f3dc:	or     ah,BYTE PTR [rdx+0x50023003]
   14000f3e2:	add    BYTE PTR [rax],al
   14000f3e4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405f3ec
   14000f3ea:	or     al,BYTE PTR [rax]
   14000f3ec:	adc    BYTE PTR [rdi],dh
   14000f3ee:	add    BYTE PTR [rax],al
   14000f3f0:	sub    dh,BYTE PTR [rdi]
   14000f3f2:	add    BYTE PTR [rax],al
   14000f3f4:	fdiv   st,st(3)
   14000f3f6:	add    BYTE PTR [rax],al
   14000f3f8:	and    DWORD PTR [rax],eax
   14000f3fa:	add    BYTE PTR [rax],al
   14000f3fc:	adc    BYTE PTR [rdi],dh
   14000f3fe:	add    BYTE PTR [rax],al
   14000f400:	sub    dh,BYTE PTR [rdi]
   14000f402:	add    BYTE PTR [rax],al
   14000f404:	fdiv   st,st(3)
   14000f406:	add    BYTE PTR [rax],al
   14000f408:	and    DWORD PTR [rax],eax
   14000f40a:	add    BYTE PTR [rax],al
   14000f40c:	adc    BYTE PTR [rdi],dh
   14000f40e:	add    BYTE PTR [rax],al
   14000f410:	sub    dh,BYTE PTR [rdi]
   14000f412:	add    BYTE PTR [rax],al
   14000f414:	fdiv   st,st(3)
   14000f416:	add    BYTE PTR [rax],al
   14000f418:	and    DWORD PTR [rax],eax
   14000f41a:	add    al,BYTE PTR [rax]
   14000f41c:	add    BYTE PTR [rdx+rcx*1+0x0],dh
   14000f420:	add    al,0x6d
   14000f422:	add    BYTE PTR [rax],al
   14000f424:	sub    DWORD PTR [rbp+0x0],ebp
   14000f427:	add    BYTE PTR [rax],cl
   14000f429:	hlt    
   14000f42a:	add    BYTE PTR [rax],al
   14000f42c:	add    DWORD PTR [rcx],edx
   14000f42e:	add    eax,0x12011100
   14000f433:	add    BYTE PTR [rsi],al
   14000f435:	jo     0x14000f43c
   14000f437:	(bad)  
   14000f438:	add    al,0x50
   14000f43a:	add    BYTE PTR [rax],al
   14000f43c:	and    DWORD PTR [rdx+rax*1],eax
   14000f43f:	add    BYTE PTR [rsp+rsi*1],al
   14000f442:	(bad)  
   14000f443:	add    BYTE PTR [rax+0x38],ah
   14000f446:	add    BYTE PTR [rax],al
   14000f448:	test   BYTE PTR [rax],bh
   14000f44a:	add    BYTE PTR [rax],al
   14000f44c:	sub    al,0xf4
   14000f44e:	add    BYTE PTR [rax],al
   14000f450:	and    DWORD PTR [rax],eax
   14000f452:	add    BYTE PTR [rax],al
   14000f454:	(bad)  
   14000f455:	cmp    BYTE PTR [rax],al
   14000f457:	add    BYTE PTR [rax+rdi*1-0xbd40000],al
   14000f45e:	add    BYTE PTR [rax],al
   14000f460:	and    DWORD PTR [rax],eax
   14000f462:	add    BYTE PTR [rax],al
   14000f464:	(bad)  
   14000f465:	cmp    BYTE PTR [rax],al
   14000f467:	add    BYTE PTR [rax+rdi*1-0xbd40000],al
   14000f46e:	add    BYTE PTR [rax],al
   14000f470:	and    DWORD PTR [rax],eax
   14000f472:	add    al,BYTE PTR [rax]
   14000f474:	add    BYTE PTR [rsi+rdx*1],dh
   14000f477:	add    ah,ah
   14000f479:	ins    DWORD PTR es:[rdi],dx
   14000f47a:	add    BYTE PTR [rax],al
   14000f47c:	or     DWORD PTR [rsi+0x0],ebp
   14000f47f:	add    BYTE PTR [rax-0xc],ah
   14000f482:	add    BYTE PTR [rax],al
   14000f484:	add    DWORD PTR [rsi],eax
   14000f486:	add    al,BYTE PTR [rax]
   14000f488:	(bad)  
   14000f489:	xor    al,BYTE PTR [rdx]
   14000f48b:	xor    BYTE PTR [rcx],dl
   14000f48d:	es or  al,0x0
   14000f490:	es verr WORD PTR fs:[rcx]
   14000f495:	push   rsp
   14000f496:	(bad)  
   14000f497:	add    BYTE PTR [rsp+rsi*1],bl
   14000f49a:	or     eax,0xa520e00
   14000f49f:	lock or al,ah
   14000f4a2:	(bad)  
   14000f4a3:	rol    BYTE PTR [rax+rax*8],1
   14000f4a6:	add    dh,BYTE PTR [rax+0x58]
   14000f4a9:	push   rcx
   14000f4aa:	add    BYTE PTR [rax],al
   14000f4ac:	sub    dh,dl
   14000f4ae:	add    BYTE PTR [rax],al
   14000f4b0:	and    DWORD PTR [rax],eax
   14000f4b2:	add    BYTE PTR [rax],al
   14000f4b4:	loopne 0x14000f4ef
   14000f4b6:	add    BYTE PTR [rax],al
   14000f4b8:	(bad)  
   14000f4b9:	cmp    al,BYTE PTR [rax]
   14000f4bb:	add    BYTE PTR [rsp+rsi*8-0x10000],cl
   14000f4c2:	(bad)  
   14000f4c3:	call   rax
   14000f4c5:	pop    rcx
   14000f4c6:	add    BYTE PTR [rax],al
   14000f4c8:	loopne 0x14000f503
   14000f4ca:	add    BYTE PTR [rax],al
   14000f4cc:	(bad)  
   14000f4cd:	(bad)  
   14000f4ce:	(bad)  
   14000f4cf:	jmp    QWORD PTR [rdx+0x6e]
   14000f4d2:	add    BYTE PTR [rax],al
   14000f4d4:	(bad)  
   14000f4d5:	(bad)  
   14000f4d6:	(bad)  
   14000f4d7:	inc    DWORD PTR [rbp+0x6e]
   14000f4dd:	add    BYTE PTR [rax],al
   14000f4df:	add    al,bh
   14000f4e1:	outs   dx,BYTE PTR ds:[rsi]
   14000f4e2:	add    BYTE PTR [rax],al
   14000f4e4:	(bad)  
   14000f4e5:	(bad)  
   14000f4e6:	(bad)  
   14000f4e7:	inc    DWORD PTR [rcx]
   14000f4e9:	or     al,0x4
   14000f4eb:	add    BYTE PTR [rsp+rsi*1],cl
   14000f4ee:	adc    DWORD PTR [rax],eax
   14000f4f0:	or     al,0xd2
   14000f4f2:	or     BYTE PTR [rax+0x21],dh
   14000f4f5:	or     BYTE PTR [rdx],al
   14000f4f7:	add    BYTE PTR [rax],cl
   14000f4f9:	adc    BYTE PTR fs:[rax],al
   14000f4fc:	jo     0x14000f538
   14000f4fe:	add    BYTE PTR [rax],al
   14000f500:	lods   al,BYTE PTR ds:[rsi]
   14000f501:	cmp    al,BYTE PTR [rax]
   14000f503:	add    al,ch
   14000f505:	hlt    
   14000f506:	add    BYTE PTR [rax],al
   14000f508:	and    DWORD PTR [rax],eax
   14000f50a:	add    BYTE PTR [rax],al
   14000f50c:	jo     0x14000f548
   14000f50e:	add    BYTE PTR [rax],al
   14000f510:	lods   al,BYTE PTR ds:[rsi]
   14000f511:	cmp    al,BYTE PTR [rax]
   14000f513:	add    al,ch
   14000f515:	hlt    
   14000f516:	add    BYTE PTR [rax],al
   14000f518:	and    DWORD PTR [rax],eax
   14000f51a:	add    al,BYTE PTR [rax]
   14000f51c:	add    BYTE PTR [rax+rdx*1+0x0],ah
   14000f520:	jo     0x14000f55c
   14000f522:	add    BYTE PTR [rax],al
   14000f524:	lods   al,BYTE PTR ds:[rsi]
   14000f525:	cmp    al,BYTE PTR [rax]
   14000f527:	add    al,ch
   14000f529:	hlt    
   14000f52a:	add    BYTE PTR [rax],al
   14000f52c:	and    DWORD PTR [rax],eax
   14000f52e:	add    BYTE PTR [rax],al
   14000f530:	jo     0x14000f56c
   14000f532:	add    BYTE PTR [rax],al
   14000f534:	lods   al,BYTE PTR ds:[rsi]
   14000f535:	cmp    al,BYTE PTR [rax]
   14000f537:	add    al,ch
   14000f539:	hlt    
   14000f53a:	add    BYTE PTR [rax],al
   14000f53c:	and    DWORD PTR [rax],eax
   14000f53e:	add    al,BYTE PTR [rax]
   14000f540:	add    BYTE PTR [rax+rdx*1+0x0],ah
   14000f544:	xor    al,0x6f
   14000f546:	add    BYTE PTR [rax],al
   14000f548:	push   rax
   14000f549:	outs   dx,DWORD PTR ds:[rsi]
   14000f54a:	add    BYTE PTR [rax],al
   14000f54c:	sub    al,0xf5
   14000f54e:	add    BYTE PTR [rax],al
   14000f550:	adc    DWORD PTR [rip+0x520c0004],edx        # 0x1920cf55a
   14000f556:	or     BYTE PTR [rax+0x7],dh
   14000f559:	(bad)  
   14000f55a:	(bad)  
   14000f55b:	xor    BYTE PTR [rax+0x51],bl
   14000f55e:	add    BYTE PTR [rax],al
   14000f560:	mov    al,0xd5
   14000f562:	add    BYTE PTR [rax],al
   14000f564:	and    DWORD PTR [rax],eax
   14000f566:	add    BYTE PTR [rax],al
   14000f568:	adc    BYTE PTR [rax+rax*1],bh
   14000f56b:	add    dl,cl
   14000f56d:	cmp    al,0x0
   14000f56f:	add    BYTE PTR [rax-0xb],dl
   14000f572:	add    BYTE PTR [rax],al
   14000f574:	(bad)  
   14000f575:	(bad)  
   14000f576:	(bad)  
   14000f577:	push   rax
   14000f579:	pop    rcx
   14000f57a:	add    BYTE PTR [rax],al
   14000f57c:	add    BYTE PTR [rax],al
   14000f57e:	add    BYTE PTR [rax],al
   14000f580:	cld    
   14000f581:	pop    rcx
   14000f582:	add    BYTE PTR [rax],al
   14000f584:	add    DWORD PTR [rax],eax
   14000f586:	add    BYTE PTR [rax],al
   14000f588:	or     BYTE PTR [rdx+0x0],bl
   14000f58b:	add    BYTE PTR [rax],dl
   14000f58d:	cmp    al,0x0
   14000f58f:	add    bh,bh
   14000f591:	(bad)  
   14000f592:	(bad)  
   14000f593:	jmp    FWORD PTR [rsp+rdi*1]
   14000f596:	add    BYTE PTR [rax],al
   14000f598:	add    BYTE PTR [rax],al
   14000f59a:	add    BYTE PTR [rax],al
   14000f59c:	xor    DWORD PTR [rax+rax*1],edi
   14000f59f:	add    BYTE PTR [rcx],al
   14000f5a1:	add    BYTE PTR [rax],al
   14000f5a3:	add    BYTE PTR [rsi],dh
   14000f5a5:	cmp    al,0x0
   14000f5a7:	add    BYTE PTR [rdx],al
   14000f5a9:	add    BYTE PTR [rax],al
   14000f5ab:	add    al,al
   14000f5ad:	outs   dx,DWORD PTR ds:[rsi]
   14000f5ae:	add    BYTE PTR [rax],al
   14000f5b0:	add    al,BYTE PTR [rax]
   14000f5b2:	add    BYTE PTR [rax],al
   14000f5b4:	outs   dx,BYTE PTR ds:[rsi]
   14000f5b5:	jo     0x14000f5b7
   14000f5b7:	add    BYTE PTR [rcx],al
   14000f5b9:	add    BYTE PTR [rax],al
   14000f5bb:	add    BYTE PTR [rcx+0x70],bh
   14000f5be:	add    BYTE PTR [rax],al
   14000f5c0:	add    BYTE PTR [rax],al
   14000f5c2:	add    BYTE PTR [rax],al
   14000f5c4:	test   BYTE PTR [rax+0x0],dh
   14000f5c7:	add    bh,bh
   14000f5c9:	(bad)  
   14000f5ca:	(bad)  
   14000f5cb:	inc    DWORD PTR [rcx]
   14000f5cd:	adc    eax,0x64150008
   14000f5d2:	or     eax,0xc541500
   14000f5d7:	add    BYTE PTR [rip+0x15000b34],dl        # 0x155010111
   14000f5dd:	jb     0x14000f5f0
   14000f5df:	loopne 0x14000f602
   14000f5e1:	add    eax,0x74050002
   14000f5e6:	or     al,BYTE PTR [rax]
   14000f5e8:	sar    BYTE PTR [rax+rax*1],1
   14000f5eb:	add    dl,bh
   14000f5ed:	cmp    al,0x0
   14000f5ef:	add    ah,cl
   14000f5f1:	cmc    
   14000f5f2:	add    BYTE PTR [rax],al
   14000f5f4:	and    DWORD PTR [rax],eax
   14000f5f6:	add    BYTE PTR [rax],al
   14000f5f8:	sar    BYTE PTR [rax+rax*1],1
   14000f5fb:	add    dl,bh
   14000f5fd:	cmp    al,0x0
   14000f5ff:	add    ah,cl
   14000f601:	cmc    
   14000f602:	add    BYTE PTR [rax],al
   14000f604:	add    DWORD PTR [rip+0x64150008],edx        # 0x1a415f612
   14000f60a:	or     eax,0xc541500
   14000f60f:	add    BYTE PTR [rip+0x15000b34],dl        # 0x155010149
   14000f615:	jb     0x14000f628
   14000f617:	loopne 0x14000f63a
   14000f619:	add    eax,0x74050002
   14000f61e:	or     al,BYTE PTR [rax]
   14000f620:	(bad)  
   14000f621:	cmp    eax,0x3d8a0000
   14000f626:	add    BYTE PTR [rax],al
   14000f628:	add    al,0xf6
   14000f62a:	add    BYTE PTR [rax],al
   14000f62c:	and    DWORD PTR [rax],eax
   14000f62e:	add    BYTE PTR [rax],al
   14000f630:	(bad)  
   14000f631:	cmp    eax,0x3d8a0000
   14000f636:	add    BYTE PTR [rax],al
   14000f638:	add    al,0xf6
   14000f63a:	add    BYTE PTR [rax],al
   14000f63c:	add    DWORD PTR [rip+0x64150008],edx        # 0x1a415f64a
   14000f642:	or     eax,0xc541500
   14000f647:	add    BYTE PTR [rip+0x15000b34],dl        # 0x155010181
   14000f64d:	jb     0x14000f660
   14000f64f:	loopne 0x14000f672
   14000f651:	add    eax,0x74050002
   14000f656:	or     al,BYTE PTR [rax]
   14000f658:	add    BYTE PTR [rsi],bh
   14000f65a:	add    BYTE PTR [rax],al
   14000f65c:	sub    bh,BYTE PTR [rsi]
   14000f65e:	add    BYTE PTR [rax],al
   14000f660:	cmp    al,0xf6
   14000f662:	add    BYTE PTR [rax],al
   14000f664:	and    DWORD PTR [rax],eax
   14000f666:	add    BYTE PTR [rax],al
   14000f668:	add    BYTE PTR [rsi],bh
   14000f66a:	add    BYTE PTR [rax],al
   14000f66c:	sub    bh,BYTE PTR [rsi]
   14000f66e:	add    BYTE PTR [rax],al
   14000f670:	cmp    al,0xf6
   14000f672:	add    BYTE PTR [rax],al
   14000f674:	add    DWORD PTR [rax+rcx*1],edx
   14000f677:	add    BYTE PTR [rsp+rsi*2],dl
   14000f67a:	lldt   WORD PTR [rsp+rsi*1]
   14000f67e:	(bad)  
   14000f67f:	add    BYTE PTR [rdx+rsi*2],dl
   14000f682:	adc    al,dh
   14000f684:	(bad)  
   14000f685:	loopne 0x14000f693
   14000f687:	shl    BYTE PTR [rcx],0x14
   14000f68a:	add    al,0x0
   14000f68c:	adc    al,0x64
   14000f68e:	or     eax,0xc540500
   14000f693:	add    BYTE PTR [rax-0x31ffffc2],ah
   14000f699:	add    BYTE PTR ds:[rax],al
   14000f69c:	je     0x14000f694
   14000f69e:	add    BYTE PTR [rax],al
   14000f6a0:	and    DWORD PTR [rax],eax
   14000f6a2:	add    BYTE PTR [rax],al
   14000f6a4:	movabs al,ds:0x7400003ece00003e
   14000f6ad:	test   BYTE PTR [rax],0x0
   14000f6b0:	and    DWORD PTR [rax],eax
   14000f6b2:	add    al,0x0
   14000f6b4:	add    BYTE PTR [rbp+rcx*1+0x0],ah
   14000f6b8:	add    BYTE PTR [rsp+rcx*1+0x0],dl
   14000f6bc:	movabs al,ds:0x7400003ece00003e
   14000f6c5:	test   BYTE PTR [rax],0x0
   14000f6c8:	and    DWORD PTR [rax],eax
   14000f6ca:	add    al,0x0
   14000f6cc:	add    BYTE PTR [rbp+rcx*1+0x0],ah
   14000f6d0:	add    BYTE PTR [rsp+rcx*1+0x0],dl
   14000f6d4:	movabs al,ds:0x7400003ece00003e
   14000f6dd:	test   BYTE PTR [rax],0x0
   14000f6e0:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415f6ee
   14000f6e6:	or     BYTE PTR [rax],al
   14000f6e8:	adc    eax,0x15000764
   14000f6ed:	xor    al,0x6
   14000f6ef:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e10827
   14000f6f5:	clts   
   14000f6f7:	add    BYTE PTR [rdi],cl
   14000f6f9:	fs (bad) 
   14000f6fb:	add    BYTE PTR [rdi],cl
   14000f6fd:	xor    al,0x6
   14000f6ff:	add    BYTE PTR [rdi],cl
   14000f701:	xor    cl,BYTE PTR [rbx]
   14000f703:	jo     0x14000f706
   14000f705:	clts   
   14000f707:	add    BYTE PTR [rdi],cl
   14000f709:	or     BYTE PTR fs:[rax],al
   14000f70c:	sysenter 
   14000f70e:	(bad)  
   14000f70f:	add    BYTE PTR [rdi],cl
   14000f711:	xor    cl,BYTE PTR [rbx]
   14000f713:	jo     0x14000f72e
   14000f715:	and    BYTE PTR [rip+0x14621800],al        # 0x154630f1b
   14000f71b:	loopne 0x14000f72f
   14000f71d:	jo     0x14000f730
   14000f71f:	(bad)  
   14000f720:	adc    BYTE PTR [rax],dh
   14000f722:	add    BYTE PTR [rax],al
   14000f724:	pop    rax
   14000f725:	push   rcx
   14000f726:	add    BYTE PTR [rax],al
   14000f728:	cmp    BYTE PTR [rsi-0x10000],0xff
   14000f72f:	inc    DWORD PTR [rax]
   14000f731:	add    BYTE PTR [rax],al
   14000f733:	add    bh,bh
   14000f735:	(bad)  
   14000f736:	(bad)  
   14000f737:	inc    DWORD PTR [rax]
   14000f739:	add    BYTE PTR [rax],al
   14000f73b:	add    BYTE PTR [rcx],al
   14000f73d:	add    BYTE PTR [rax],al
   14000f73f:	add    BYTE PTR [rax],al
   14000f741:	add    BYTE PTR [rax],al
   14000f743:	add    BYTE PTR [rcx],al
	...
   14000f751:	add    BYTE PTR [rax],al
   14000f753:	add    BYTE PTR [rbx],al
   14000f755:	add    BYTE PTR [rax],al
   14000f757:	add    BYTE PTR [rcx],al
   14000f759:	add    BYTE PTR [rax],al
   14000f75b:	add    BYTE PTR [rdi+rsi*8+0x0],dh
   14000f75f:	add    BYTE PTR [rdx],al
   14000f761:	add    BYTE PTR [rax],al
   14000f763:	add    BYTE PTR [rdx],al
   14000f765:	add    BYTE PTR [rax],al
   14000f767:	add    BYTE PTR [rbx],al
   14000f769:	add    BYTE PTR [rax],al
   14000f76b:	add    BYTE PTR [rcx],al
   14000f76d:	add    BYTE PTR [rax],al
   14000f76f:	add    BYTE PTR [rax+0x400000f7],cl
	...
   14000f77d:	add    BYTE PTR [rax],al
   14000f77f:	add    BYTE PTR [rdx],bl
   14000f781:	pop    rdx
   14000f782:	add    BYTE PTR [rax],al
   14000f784:	cmp    BYTE PTR [rax],al
   14000f786:	add    BYTE PTR [rax],al
   14000f788:	add    BYTE PTR [rax],al
	...
   14000f793:	add    BYTE PTR [rsi+0x5a],bl
   14000f796:	add    BYTE PTR [rax],al
   14000f798:	cmp    BYTE PTR [rax],al
   14000f79a:	add    BYTE PTR [rax],al
   14000f79c:	add    BYTE PTR [rax],al
   14000f79e:	add    BYTE PTR [rax],al
   14000f7a0:	sbb    BYTE PTR [rdx+0x0],al
   14000f7a3:	add    bh,bh
   14000f7a5:	(bad)  
   14000f7a6:	(bad)  
   14000f7a7:	inc    DWORD PTR [rdi+0x42]
   14000f7ad:	add    BYTE PTR [rax],al
   14000f7af:	add    BYTE PTR [rdx+rax*2-0x10000],ch
   14000f7b6:	(bad)  
   14000f7b7:	call   FWORD PTR [rdx]
   14000f7b9:	pop    rdx
   14000f7ba:	add    BYTE PTR [rax],al
   14000f7bc:	add    BYTE PTR [rax],al
   14000f7be:	add    BYTE PTR [rax],al
   14000f7c0:	(bad)  
   14000f7c1:	pop    rdx
   14000f7c2:	add    BYTE PTR [rax],al
   14000f7c4:	add    DWORD PTR [rax],eax
   14000f7c6:	add    BYTE PTR [rax],al
   14000f7c8:	(bad)  
   14000f7c9:	pop    rdx
   14000f7ca:	add    BYTE PTR [rax],al
   14000f7cc:	add    al,BYTE PTR [rax]
   14000f7ce:	add    BYTE PTR [rax],al
   14000f7d0:	push   rax
   14000f7d1:	pop    rdx
   14000f7d2:	add    BYTE PTR [rax],al
   14000f7d4:	add    BYTE PTR [rax],al
   14000f7d6:	add    BYTE PTR [rax],al
   14000f7d8:	imul   ebx,DWORD PTR [rdx+0x0],0x0
   14000f7dc:	add    eax,DWORD PTR [rax]
   14000f7de:	add    BYTE PTR [rax],al
   14000f7e0:	sbb    DWORD PTR [rdx],ecx
   14000f7e2:	add    al,BYTE PTR [rax]
   14000f7e4:	or     dh,BYTE PTR [rdx]
   14000f7e6:	(bad)  
   14000f7e7:	push   rax
   14000f7e8:	pop    rax
   14000f7e9:	push   rcx
   14000f7ea:	add    BYTE PTR [rax],al
   14000f7ec:	cmp    BYTE PTR [rsi+0xa010000],0x2
   14000f7f3:	add    BYTE PTR [rdx],cl
   14000f7f5:	xor    al,BYTE PTR [rsi]
   14000f7f7:	xor    BYTE PTR [rcx],al
   14000f7f9:	adc    eax,0x74150008
   14000f7fe:	or     al,BYTE PTR [rax]
   14000f800:	adc    eax,0x15000964
   14000f805:	xor    al,0x8
   14000f807:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e1095f
   14000f80d:	or     al,BYTE PTR [rax+rax*1]
   14000f810:	or     dh,BYTE PTR [rax+rcx*1]
   14000f813:	add    BYTE PTR [rdx],cl
   14000f815:	push   rdx
   14000f816:	(bad)  
   14000f817:	jo     0x14000f81a
   14000f819:	add    al,0x1
   14000f81b:	add    BYTE PTR [rdx+riz*2],al
   14000f81e:	add    BYTE PTR [rax],al
   14000f820:	or     DWORD PTR [rbx+rcx*1],ebx
   14000f823:	add    BYTE PTR [rsp+rsi*2],bl
   14000f826:	sbb    al,0x0
   14000f828:	sbb    al,0x64
   14000f82a:	sbb    eax,DWORD PTR [rax]
   14000f82c:	sbb    al,0x34
   14000f82e:	sbb    al,BYTE PTR [rax]
   14000f830:	sbb    al,0x1
   14000f832:	(bad)  
   14000f833:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e10c29
   14000f839:	rol    BYTE PTR [rax],0x0
   14000f83c:	jbe    0x14000f892
   14000f83e:	add    BYTE PTR [rax],al
   14000f840:	add    DWORD PTR [rax],eax
   14000f842:	add    BYTE PTR [rax],al
   14000f844:	push   rax
   14000f845:	rex.WXB add BYTE PTR [r8],al
   14000f848:	rex.RX
   14000f849:	rex.WRB add BYTE PTR [r8],r8b
   14000f84c:	mov    DWORD PTR [rdx+0x0],ebx
   14000f84f:	add    BYTE PTR [rsi+0x4d],al
   14000f852:	add    BYTE PTR [rax],al
   14000f854:	add    DWORD PTR [rsi],eax
   14000f856:	add    al,BYTE PTR [rax]
   14000f858:	(bad)  
   14000f859:	xor    al,BYTE PTR [rdx]
   14000f85b:	push   rax
   14000f85c:	add    BYTE PTR [rax],al
   14000f85e:	add    BYTE PTR [rax],al
   14000f860:	add    DWORD PTR [rax],eax
   14000f862:	add    BYTE PTR [rax],al
   14000f864:	adc    DWORD PTR [rdx],ecx
   14000f866:	add    al,0x0
   14000f868:	or     dh,BYTE PTR [rsi+rax*1]
   14000f86b:	add    BYTE PTR [rdx],cl
   14000f86d:	xor    al,BYTE PTR [rsi]
   14000f86f:	jo     0x14000f8e7
   14000f871:	push   rsp
   14000f872:	add    BYTE PTR [rax],al
   14000f874:	add    DWORD PTR [rax],eax
   14000f876:	add    BYTE PTR [rax],al
   14000f878:	xor    eax,0x7a00004e
   14000f87d:	rex.WRX add BYTE PTR [rax],r8b
   14000f880:	lods   eax,DWORD PTR ds:[rsi]
   14000f881:	pop    rdx
   14000f882:	add    BYTE PTR [rax],al
   14000f884:	add    BYTE PTR [rax],al
   14000f886:	add    BYTE PTR [rax],al
   14000f888:	add    DWORD PTR [rdx+rax*1],ecx
   14000f88b:	add    BYTE PTR [rcx+rax*1],cl
   14000f88e:	adc    DWORD PTR [rax],eax
   14000f890:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a204f897
   14000f896:	add    BYTE PTR [rax],al
   14000f898:	pop    rax
   14000f899:	push   rcx
   14000f89a:	add    BYTE PTR [rax],al
   14000f89c:	sbb    bl,dl
   14000f89e:	add    BYTE PTR [rax],al
   14000f8a0:	(bad)  
   14000f8a1:	(bad)  
   14000f8a2:	(bad)  
   14000f8a3:	inc    DWORD PTR [rax]
   14000f8a5:	add    BYTE PTR [rax],al
   14000f8a7:	add    bh,bh
   14000f8a9:	(bad)  
   14000f8aa:	(bad)  
   14000f8ab:	inc    DWORD PTR [rax]
	...
   14000f8b5:	add    BYTE PTR [rax],al
   14000f8b7:	add    BYTE PTR [rcx],al
   14000f8b9:	add    BYTE PTR [rax],al
   14000f8bb:	add    BYTE PTR [rcx],al
   14000f8bd:	add    BYTE PTR [rax],al
   14000f8bf:	add    ah,al
   14000f8c1:	clc    
   14000f8c2:	add    BYTE PTR [rax],al
   14000f8c4:	add    BYTE PTR [rax],al
	...
   14000f8cf:	add    dh,cl
   14000f8d1:	pop    rdx
   14000f8d2:	add    BYTE PTR [rax],al
   14000f8d4:	cmp    BYTE PTR [rax],al
   14000f8d6:	add    BYTE PTR [rax],al
   14000f8d8:	in     al,0x50
   14000f8da:	add    BYTE PTR [rax],al
   14000f8dc:	(bad)  
   14000f8dd:	(bad)  
   14000f8de:	(bad)  
   14000f8df:	push   rcx
   14000f8e1:	push   rax
   14000f8e2:	add    BYTE PTR [rax],al
   14000f8e4:	add    BYTE PTR [rax],al
   14000f8e6:	add    BYTE PTR [rax],al
   14000f8e8:	not    DWORD PTR [rax+0x0]
   14000f8eb:	add    bh,bh
   14000f8ed:	(bad)  
   14000f8ee:	(bad)  
   14000f8ef:	dec    esi
   14000f8f1:	pop    rdx
   14000f8f2:	add    BYTE PTR [rax],al
   14000f8f4:	add    BYTE PTR [rax],al
   14000f8f6:	add    BYTE PTR [rax],al
   14000f8f8:	fistp  DWORD PTR [rdx+0x0]
   14000f8fb:	add    BYTE PTR [rcx],al
   14000f8fd:	add    BYTE PTR [rax],al
   14000f8ff:	add    al,ah
   14000f901:	pop    rdx
   14000f902:	add    BYTE PTR [rax],al
   14000f904:	add    BYTE PTR [rax],al
   14000f906:	add    BYTE PTR [rax],al
   14000f908:	sbb    DWORD PTR [rdx],ecx
   14000f90a:	add    al,BYTE PTR [rax]
   14000f90c:	or     dh,BYTE PTR [rdx]
   14000f90e:	(bad)  
   14000f90f:	push   rax
   14000f910:	pop    rax
   14000f911:	push   rcx
   14000f912:	add    BYTE PTR [rax],al
   14000f914:	sbb    bl,dl
   14000f916:	add    BYTE PTR [rax],al
   14000f918:	or     DWORD PTR [rcx+rax*1],eax
   14000f91b:	add    BYTE PTR [rdx+riz*1],al
   14000f91e:	add    BYTE PTR [rax],al
   14000f920:	jbe    0x14000f976
   14000f922:	add    BYTE PTR [rax],al
   14000f924:	add    DWORD PTR [rax],eax
   14000f926:	add    BYTE PTR [rax],al
   14000f928:	cld    
   14000f929:	push   rcx
   14000f92a:	add    BYTE PTR [rax],al
   14000f92c:	xor    dl,BYTE PTR [rdx+0x0]
   14000f92f:	add    BYTE PTR [rcx],al
   14000f931:	add    BYTE PTR [rax],al
   14000f933:	add    BYTE PTR [rdx],dh
   14000f935:	push   rdx
   14000f936:	add    BYTE PTR [rax],al
   14000f938:	or     DWORD PTR [rdx],ecx
   14000f93a:	add    al,0x0
   14000f93c:	or     dh,BYTE PTR [rsi+rax*1]
   14000f93f:	add    BYTE PTR [rdx],cl
   14000f941:	xor    al,BYTE PTR [rsi]
   14000f943:	jo     0x14000f9bb
   14000f945:	push   rsp
   14000f946:	add    BYTE PTR [rax],al
   14000f948:	add    DWORD PTR [rax],eax
   14000f94a:	add    BYTE PTR [rax],al
   14000f94c:	or     eax,0x40000053
   14000f951:	push   rbx
   14000f952:	add    BYTE PTR [rax],al
   14000f954:	add    BYTE PTR [rbx+0x0],bl
   14000f957:	add    BYTE PTR [rax+0x53],al
   14000f95a:	add    BYTE PTR [rax],al
   14000f95c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740df966
   14000f962:	or     DWORD PTR [rax],eax
   14000f964:	or     eax,0x1500632
   14000f969:	add    BYTE PTR [rax],al
   14000f96b:	add    BYTE PTR [rcx],al
   14000f96d:	adc    eax,0x74150008
   14000f972:	or     DWORD PTR [rax],eax
   14000f974:	adc    eax,0x15000864
   14000f979:	xor    al,0x7
   14000f97b:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e10ab3
   14000f981:	(bad)  
   14000f982:	add    al,BYTE PTR [rax]
   14000f984:	(bad)  
   14000f985:	push   rdx
   14000f986:	add    dh,BYTE PTR [rax]
   14000f988:	sbb    DWORD PTR [rsi],esp
   14000f98a:	add    eax,0x36741500
   14000f98f:	add    BYTE PTR [rip+0x6003201],dl        # 0x146012b96
   14000f995:	push   rax
   14000f996:	add    BYTE PTR [rax],al
   14000f998:	test   al,0x54
   14000f99a:	add    BYTE PTR [rax],al
   14000f99c:	add    BYTE PTR [rcx],0x0
   14000f99f:	add    BYTE PTR [rcx],bl
   14000f9a1:	and    BYTE PTR [rip+0x30341200],al        # 0x170350ba7
   14000f9a7:	add    BYTE PTR [rdx],dl
   14000f9a9:	add    DWORD PTR [rax+rax*1],ebp
   14000f9ac:	(bad)  
   14000f9ad:	push   rax
   14000f9ae:	add    BYTE PTR [rax],al
   14000f9b0:	test   al,0x54
   14000f9b2:	add    BYTE PTR [rax],al
   14000f9b4:	push   rax
   14000f9b5:	add    DWORD PTR [rax],eax
   14000f9b7:	add    BYTE PTR [rcx],al
   14000f9b9:	add    al,0x1
   14000f9bb:	add    BYTE PTR [rdx+riz*4],al
   14000f9be:	add    BYTE PTR [rax],al
   14000f9c0:	sbb    DWORD PTR [rdx],esp
   14000f9c2:	add    al,0x0
   14000f9c4:	adc    BYTE PTR [rcx],al
   14000f9c6:	mov    ecx,0x2700302
   14000f9cb:	xor    BYTE PTR [rax-0x4fffffac],ch
   14000f9d1:	adc    eax,0x1d010000
   14000f9d6:	or     al,BYTE PTR [rax]
   14000f9d8:	sbb    eax,0x1d001234
   14000f9dd:	jb     0x14000f9f8
   14000f9df:	lock (bad) 
   14000f9e1:	loopne 0x14000f9f8
   14000f9e3:	rcl    BYTE PTR [rbx],1
   14000f9e5:	rcl    BYTE PTR [rcx],0x70
   14000f9e8:	adc    BYTE PTR [rax+0xf],ah
   14000f9eb:	push   rax
   14000f9ec:	add    DWORD PTR [rcx],ebx
   14000f9ee:	or     al,BYTE PTR [rax]
   14000f9f0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14000f9f4:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14000f9f8:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000f9fc:	sbb    DWORD PTR [rsi+rax*1],esi
   14000f9ff:	add    BYTE PTR [rcx],bl
   14000fa01:	xor    dl,BYTE PTR [rip+0x81401e0]        # 0x14814fbe7
   14000fa07:	add    BYTE PTR [rsp+riz*2],dl
   14000fa0a:	or     BYTE PTR [rax],al
   14000fa0c:	adc    al,0x54
   14000fa0e:	(bad)  
   14000fa0f:	add    BYTE PTR [rsp+rsi*1],dl
   14000fa12:	(bad)  
   14000fa13:	add    BYTE PTR [rdx+rsi*1],dl
   14000fa16:	adc    BYTE PTR [rax+0x19],dh
   14000fa19:	(bad)  
   14000fa1a:	add    eax,0x2c340d00
   14000fa1f:	add    BYTE PTR [rip+0x6002a01],cl        # 0x146012426
   14000fa25:	(bad)  
   14000fa26:	add    BYTE PTR [rax],al
   14000fa28:	test   al,0x54
   14000fa2a:	add    BYTE PTR [rax],al
   14000fa2c:	rex add DWORD PTR [rax],eax
   14000fa2f:	add    BYTE PTR [rcx],bl
   14000fa31:	and    eax,0x34130009
   14000fa36:	push   rbx
   14000fa37:	add    BYTE PTR [rbx],dl
   14000fa39:	add    DWORD PTR [rdx+0x0],ecx
   14000fa3c:	or     al,0xf0
   14000fa3e:	or     ah,al
   14000fa40:	or     BYTE PTR [rax+0x7],dh
   14000fa43:	(bad)  
   14000fa44:	(bad)  
   14000fa45:	push   rax
   14000fa46:	add    BYTE PTR [rax],al
   14000fa48:	test   al,0x54
   14000fa4a:	add    BYTE PTR [rax],al
   14000fa4c:	add    al,BYTE PTR [rax]
   14000fa4f:	add    BYTE PTR [rcx],al
   14000fa51:	adc    DWORD PTR [rax+rax*1],eax
   14000fa54:	adc    DWORD PTR [rdx],esi
   14000fa56:	or     eax,0xb600c70
   14000fa5b:	xor    BYTE PTR [rcx],dl
   14000fa5d:	sbb    al,0x6
   14000fa5f:	add    BYTE PTR [rsp+riz*2],bl
   14000fa62:	or     al,BYTE PTR [rax]
   14000fa64:	sbb    BYTE PTR [rax+rcx*1],dh
   14000fa67:	add    BYTE PTR [rdx+rdx*2],cl
   14000fa6a:	or     BYTE PTR [rax+0x58],dh
   14000fa6d:	push   rcx
   14000fa6e:	add    BYTE PTR [rax],al
   14000fa70:	cmp    ch,dl
   14000fa72:	add    BYTE PTR [rax],al
   14000fa74:	(bad)  
   14000fa75:	(bad)  
   14000fa76:	(bad)  
   14000fa77:	inc    DWORD PTR [rax]
   14000fa79:	xchg   ebp,eax
   14000fa7a:	add    BYTE PTR [rax],al
   14000fa7c:	xchg   esp,eax
   14000fa7d:	xchg   esp,eax
   14000fa7e:	add    BYTE PTR [rax],al
   14000fa80:	(bad)  
   14000fa81:	(bad)  
   14000fa82:	(bad)  
   14000fa83:	push   QWORD PTR [rsi+0x94]
   14000fa89:	add    BYTE PTR [rax],al
   14000fa8b:	add    BYTE PTR [rcx],al
   14000fa8d:	(bad)  
   14000fa8e:	add    al,BYTE PTR [rax]
   14000fa90:	(bad)  
   14000fa91:	xor    al,BYTE PTR [rdx]
   14000fa93:	push   rax
   14000fa94:	add    DWORD PTR [rax],ebx
   14000fa96:	or     al,BYTE PTR [rax]
   14000fa98:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   14000fa9c:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000faa0:	sbb    BYTE PTR [rax+rcx*1],dh
   14000faa3:	add    BYTE PTR [rax],bl
   14000faa5:	xor    dl,BYTE PTR [rax+rsi*8]
   14000faa8:	adc    ah,al
   14000faaa:	adc    BYTE PTR [rax+0x1],dh
   14000faad:	or     al,BYTE PTR [rax+rax*1]
   14000fab0:	or     dh,BYTE PTR [rcx+rcx*1]
   14000fab3:	add    BYTE PTR [rdx],cl
   14000fab5:	push   rdx
   14000fab6:	(bad)  
   14000fab7:	jo     0x14000faba
   14000fab9:	add    al,0x1
   14000fabb:	add    BYTE PTR [rdx+rax*4],al
   14000fabe:	add    BYTE PTR [rax],al
   14000fac0:	add    DWORD PTR [rcx],ebx
   14000fac2:	or     al,BYTE PTR [rax]
   14000fac4:	sbb    DWORD PTR [rdi+rcx*1+0x0],esi
   14000fac8:	sbb    DWORD PTR [rsi+rcx*1+0x0],esp
   14000facc:	sbb    DWORD PTR [rbp+rcx*1+0x0],edx
   14000fad0:	sbb    DWORD PTR [rsp+rcx*1],esi
   14000fad3:	add    BYTE PTR [rcx],bl
   14000fad5:	xchg   edx,eax
   14000fad6:	adc    eax,0x61301e0
   14000fadb:	add    BYTE PTR [rbx],dl
   14000fadd:	fs (bad) 
   14000fadf:	add    BYTE PTR [rbx],dl
   14000fae1:	xor    al,0x6
   14000fae3:	add    BYTE PTR [rbx],dl
   14000fae5:	xor    cl,BYTE PTR [rdi]
   14000fae7:	jo     0x14000fafa
   14000fae9:	sbb    BYTE PTR [rax+rax*1],al
   14000faec:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000faef:	add    BYTE PTR [rdx],cl
   14000faf1:	push   rdx
   14000faf2:	(bad)  
   14000faf3:	jo     0x14000fb4d
   14000faf5:	push   rcx
   14000faf6:	add    BYTE PTR [rax],al
   14000faf8:	mov    ch,dl
   14000fafa:	add    BYTE PTR [rax],al
   14000fafc:	(bad)  
   14000fafd:	(bad)  
   14000fafe:	(bad)  
   14000faff:	(bad)  
   14000fb00:	fimul  WORD PTR [rbp-0x72880000]
   14000fb06:	add    BYTE PTR [rax],al
   14000fb08:	(bad)  
   14000fb09:	(bad)  
   14000fb0a:	(bad)  
   14000fb0b:	jmp    FWORD PTR [rax+0x8d]
   14000fb11:	add    BYTE PTR [rax],al
   14000fb13:	add    BYTE PTR [rax-0xffff73],bh
   14000fb19:	(bad)  
   14000fb1a:	(bad)  
   14000fb1b:	call   QWORD PTR [rcx]
   14000fb1d:	sbb    BYTE PTR [rsi],al
   14000fb1f:	add    BYTE PTR [rax],bl
   14000fb21:	or     al,BYTE PTR fs:[rax]
   14000fb24:	adc    al,0x34
   14000fb26:	or     DWORD PTR [rax],eax
   14000fb28:	or     BYTE PTR [rdx+0x4],dl
   14000fb2b:	jo     0x14000fb85
   14000fb2d:	push   rcx
   14000fb2e:	add    BYTE PTR [rax],al
   14000fb30:	fcom   st(5)
   14000fb32:	add    BYTE PTR [rax],al
   14000fb34:	(bad)  
   14000fb35:	(bad)  
   14000fb36:	(bad)  
   14000fb37:	(bad)  
   14000fb38:	ficom  WORD PTR [rsi-0x69800000]
   14000fb3e:	add    BYTE PTR [rax],al
   14000fb40:	(bad)  
   14000fb41:	(bad)  
   14000fb42:	(bad)  
   14000fb43:	jmp    FWORD PTR [rdi+0x96]
   14000fb49:	add    BYTE PTR [rax],al
   14000fb4b:	add    dl,al
   14000fb4d:	xchg   esi,eax
   14000fb4e:	add    BYTE PTR [rax],al
   14000fb50:	(bad)  
   14000fb51:	(bad)  
   14000fb52:	(bad)  
   14000fb53:	inc    DWORD PTR [rcx]
   14000fb55:	sbb    BYTE PTR [rdx],cl
   14000fb57:	add    BYTE PTR [rax],bl
   14000fb59:	or     eax,DWORD PTR fs:[rax]
   14000fb5c:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000fb60:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000fb63:	add    BYTE PTR [rax],bl
   14000fb65:	xor    dl,BYTE PTR [rax+rsi*8]
   14000fb68:	adc    ah,al
   14000fb6a:	adc    BYTE PTR [rax+0x11],dh
   14000fb6d:	and    BYTE PTR [rdx],cl
   14000fb6f:	add    BYTE PTR [rax],ah
   14000fb71:	fs or  eax,0xc541c00
   14000fb77:	add    BYTE PTR [rax],bl
   14000fb79:	xor    al,0xb
   14000fb7b:	add    BYTE PTR [rdx+rdx*2],cl
   14000fb7e:	or     al,dh
   14000fb80:	(bad)  
   14000fb81:	loopne 0x14000fb87
   14000fb83:	jo     0x14000fbdd
   14000fb85:	push   rcx
   14000fb86:	add    BYTE PTR [rax],al
   14000fb88:	add    dh,dl
   14000fb8a:	add    BYTE PTR [rax],al
   14000fb8c:	(bad)  
   14000fb8d:	(bad)  
   14000fb8e:	(bad)  
   14000fb8f:	call   QWORD PTR [rdx+0x60000090]
   14000fb95:	pop    QWORD PTR [rax]
   14000fb97:	add    bh,bh
   14000fb99:	(bad)  
   14000fb9a:	(bad)  
   14000fb9b:	call   FWORD PTR [rax]
   14000fb9d:	nop
   14000fb9e:	add    BYTE PTR [rax],al
   14000fba0:	add    BYTE PTR [rax],al
   14000fba2:	add    BYTE PTR [rax],al
   14000fba4:	rex.WXB xchg r8,rax
   14000fba6:	add    BYTE PTR [rax],al
   14000fba8:	(bad)  
   14000fba9:	(bad)  
   14000fbaa:	(bad)  
   14000fbab:	inc    DWORD PTR [rcx]
   14000fbad:	sbb    eax,0x741d000c
   14000fbb2:	or     eax,DWORD PTR [rax]
   14000fbb4:	sbb    eax,0x1d000a64
   14000fbb9:	push   rsp
   14000fbba:	or     DWORD PTR [rax],eax
   14000fbbc:	sbb    eax,0x1d000834
   14000fbc1:	xor    bl,BYTE PTR [rcx]
   14000fbc3:	lock (bad) 
   14000fbc5:	loopne 0x14000fbdc
   14000fbc7:	rcr    BYTE PTR [rcx],0xf
   14000fbca:	add    al,BYTE PTR [rax]
   14000fbcc:	(bad)  
   14000fbcd:	push   rdx
   14000fbce:	add    dh,BYTE PTR [rax]
   14000fbd0:	pop    rax
   14000fbd1:	push   rcx
   14000fbd2:	add    BYTE PTR [rax],al
   14000fbd4:	push   rax
   14000fbd5:	(bad)  
   14000fbd6:	add    BYTE PTR [rax],al
   14000fbd8:	(bad)  
   14000fbd9:	(bad)  
   14000fbda:	(bad)  
   14000fbdb:	inc    DWORD PTR [rax]
   14000fbdd:	add    BYTE PTR [rax],al
   14000fbdf:	add    bh,bh
   14000fbe1:	(bad)  
   14000fbe2:	(bad)  
   14000fbe3:	inc    DWORD PTR [rax]
	...
   14000fbed:	add    BYTE PTR [rax],al
   14000fbef:	add    BYTE PTR [rcx],al
   14000fbf1:	add    BYTE PTR [rax],al
   14000fbf3:	add    BYTE PTR [rbx],al
   14000fbf5:	add    BYTE PTR [rax],al
   14000fbf7:	add    ah,bh
   14000fbf9:	sti    
   14000fbfa:	add    BYTE PTR [rax],al
   14000fbfc:	or     DWORD PTR [rax],eax
   14000fbfe:	add    BYTE PTR [rax],al
   14000fc00:	lock and DWORD PTR [rcx],eax
   14000fc03:	add    BYTE PTR [rax],ch
   14000fc05:	add    BYTE PTR [rax],al
   14000fc07:	add    BYTE PTR [rcx-0x67],ch
   14000fc0a:	add    BYTE PTR [rax],al
   14000fc0c:	cmp    BYTE PTR [rax],al
   14000fc0e:	add    BYTE PTR [rax],al
   14000fc10:	or     DWORD PTR [rax],eax
   14000fc12:	add    BYTE PTR [rax],al
   14000fc14:	and    BYTE PTR [rdx],ah
   14000fc16:	add    DWORD PTR [rax],eax
   14000fc18:	add    BYTE PTR [rax],al
   14000fc1a:	add    BYTE PTR [rax],al
   14000fc1c:	mov    ds,WORD PTR [rcx+0x380000]
   14000fc22:	add    BYTE PTR [rax],al
   14000fc24:	add    BYTE PTR [rax],al
	...
   14000fc2f:	add    BYTE PTR [rcx+0x48000099],ch
   14000fc35:	add    BYTE PTR [rax],al
   14000fc37:	add    BYTE PTR [rax],ah
   14000fc39:	cdq    
   14000fc3a:	add    BYTE PTR [rax],al
   14000fc3c:	(bad)  
   14000fc3d:	(bad)  
   14000fc3e:	(bad)  
   14000fc3f:	dec    DWORD PTR [rax-0x67]
   14000fc42:	add    BYTE PTR [rax],al
   14000fc44:	add    BYTE PTR [rax],al
   14000fc46:	add    BYTE PTR [rax],al
   14000fc48:	push   rdx
   14000fc49:	cdq    
   14000fc4a:	add    BYTE PTR [rax],al
   14000fc4c:	(bad)  
   14000fc4d:	(bad)  
   14000fc4e:	(bad)  
   14000fc4f:	jmp    FWORD PTR [rcx-0x67]
   14000fc52:	add    BYTE PTR [rax],al
   14000fc54:	add    BYTE PTR [rax],al
   14000fc56:	add    BYTE PTR [rax],al
   14000fc58:	jbe    0x14000fbf3
   14000fc5a:	add    BYTE PTR [rax],al
   14000fc5c:	add    DWORD PTR [rax],eax
   14000fc5e:	add    BYTE PTR [rax],al
   14000fc60:	sbb    BYTE PTR [rcx+0x0],0x0
   14000fc67:	add    BYTE PTR [rdi+0x1000099],dh
   14000fc6d:	add    BYTE PTR [rax],al
   14000fc6f:	add    bh,dh
   14000fc71:	cdq    
   14000fc72:	add    BYTE PTR [rax],al
   14000fc74:	add    BYTE PTR [rax],al
   14000fc76:	add    BYTE PTR [rax],al
   14000fc78:	sbb    DWORD PTR [rdx],ecx
   14000fc7a:	add    al,BYTE PTR [rax]
   14000fc7c:	or     dh,BYTE PTR [rdx]
   14000fc7e:	(bad)  
   14000fc7f:	push   rax
   14000fc80:	pop    rax
   14000fc81:	push   rcx
   14000fc82:	add    BYTE PTR [rax],al
   14000fc84:	push   rax
   14000fc85:	(bad)  
   14000fc86:	add    BYTE PTR [rax],al
   14000fc88:	sbb    DWORD PTR [rdx],ecx
   14000fc8a:	add    al,BYTE PTR [rax]
   14000fc8c:	or     dh,BYTE PTR [rdx]
   14000fc8e:	(bad)  
   14000fc8f:	push   rax
   14000fc90:	pop    rax
   14000fc91:	push   rcx
   14000fc92:	add    BYTE PTR [rax],al
   14000fc94:	push   rax
   14000fc95:	(bad)  
   14000fc96:	add    BYTE PTR [rax],al
   14000fc98:	sbb    DWORD PTR [rbx],ecx
   14000fc9a:	add    eax,DWORD PTR [rax]
   14000fc9c:	or     eax,DWORD PTR [rdx+0x7]
   14000fc9f:	push   rax
   14000fca0:	(bad)  
   14000fca1:	xor    BYTE PTR [rax],al
   14000fca3:	add    BYTE PTR [rax+0x51],bl
   14000fca6:	add    BYTE PTR [rax],al
   14000fca8:	push   rax
   14000fca9:	(bad)  
   14000fcaa:	add    BYTE PTR [rax],al
   14000fcac:	sbb    DWORD PTR [rsp+rax*1],edx
   14000fcaf:	add    BYTE PTR [rax+rbp*2],dl
   14000fcb2:	add    al,0x0
   14000fcb4:	or     BYTE PTR [rdx+0x51583004],dl
   14000fcba:	add    BYTE PTR [rax],al
   14000fcbc:	enter  0xd6,0x0
   14000fcc0:	(bad)  
   14000fcc1:	(bad)  
   14000fcc2:	(bad)  
   14000fcc3:	inc    DWORD PTR [rax]
   14000fcc5:	add    BYTE PTR [rax],al
   14000fcc7:	add    bh,bh
   14000fcc9:	(bad)  
   14000fcca:	(bad)  
   14000fccb:	inc    DWORD PTR [rax]
	...
   14000fcd5:	add    BYTE PTR [rax],al
   14000fcd7:	add    BYTE PTR [rcx],al
   14000fcd9:	add    BYTE PTR [rax],al
   14000fcdb:	add    BYTE PTR [rcx],al
   14000fcdd:	add    BYTE PTR [rax],al
   14000fcdf:	add    ah,ah
   14000fce1:	cld    
   14000fce2:	add    BYTE PTR [rax],al
   14000fce4:	add    BYTE PTR [rax],al
	...
   14000fcef:	add    bl,ah
   14000fcf1:	cwde   
   14000fcf2:	add    BYTE PTR [rax],al
   14000fcf4:	cmp    BYTE PTR [rax],al
   14000fcf6:	add    BYTE PTR [rax],al
   14000fcf8:	adc    BYTE PTR [rax-0x10000],bl
   14000fcfe:	(bad)  
   14000fcff:	jmp    QWORD PTR [rdi]
   14000fd01:	cwde   
   14000fd02:	add    BYTE PTR [rax],al
   14000fd04:	add    BYTE PTR [rax],al
   14000fd06:	add    BYTE PTR [rax],al
   14000fd08:	rcr    BYTE PTR [rax-0x10000],1
   14000fd0e:	(bad)  
   14000fd0f:	jmp    rbx
   14000fd11:	cwde   
   14000fd12:	add    BYTE PTR [rax],al
   14000fd14:	add    BYTE PTR [rax],al
   14000fd16:	add    BYTE PTR [rax],al
   14000fd18:	lock cwde 
   14000fd1a:	add    BYTE PTR [rax],al
   14000fd1c:	add    DWORD PTR [rax],eax
   14000fd1e:	add    BYTE PTR [rax],al
   14000fd20:	or     bl,BYTE PTR [rcx+0x0]
   14000fd26:	add    BYTE PTR [rax],al
   14000fd28:	sbb    DWORD PTR [rdx],ecx
   14000fd2a:	add    al,BYTE PTR [rax]
   14000fd2c:	or     dh,BYTE PTR [rdx]
   14000fd2e:	(bad)  
   14000fd2f:	push   rax
   14000fd30:	pop    rax
   14000fd31:	push   rcx
   14000fd32:	add    BYTE PTR [rax],al
   14000fd34:	enter  0xd6,0x0
   14000fd38:	sbb    DWORD PTR [rip+0x741d0008],ebx        # 0x1b41dfd46
   14000fd3e:	or     eax,DWORD PTR [rax]
   14000fd40:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   14000fd44:	adc    eax,0x9000834
   14000fd49:	push   rdx
   14000fd4a:	add    eax,0x5158e0
   14000fd4f:	add    al,dh
   14000fd51:	(bad)  
   14000fd52:	add    BYTE PTR [rax],al
   14000fd54:	(bad)  
   14000fd55:	(bad)  
   14000fd56:	(bad)  
   14000fd57:	inc    DWORD PTR [rax]
   14000fd59:	add    BYTE PTR [rax],al
   14000fd5b:	add    bh,bh
   14000fd5d:	(bad)  
   14000fd5e:	(bad)  
   14000fd5f:	inc    DWORD PTR [rax]
	...
   14000fd69:	add    BYTE PTR [rax],al
   14000fd6b:	add    BYTE PTR [rcx],al
   14000fd6d:	add    BYTE PTR [rax],al
   14000fd6f:	add    BYTE PTR [rcx],al
   14000fd71:	add    BYTE PTR [rax],al
   14000fd73:	add    BYTE PTR [rax-0x3],bh
   14000fd76:	add    BYTE PTR [rax],al
   14000fd78:	add    BYTE PTR [rax],al
	...
   14000fd83:	add    bh,cl
   14000fd85:	xchg   edi,eax
   14000fd86:	add    BYTE PTR [rax],al
   14000fd88:	cmp    BYTE PTR [rax],al
   14000fd8a:	add    BYTE PTR [rax],al
   14000fd8c:	jo     0x14000fd25
   14000fd8e:	add    BYTE PTR [rax],al
   14000fd90:	(bad)  
   14000fd91:	(bad)  
   14000fd92:	(bad)  
   14000fd93:	call   QWORD PTR [rbp+0x97]
   14000fd99:	add    BYTE PTR [rax],al
   14000fd9b:	add    BYTE PTR [rcx-0xffff69],dh
   14000fda1:	(bad)  
   14000fda2:	(bad)  
   14000fda3:	dec    edi
   14000fda5:	xchg   edi,eax
   14000fda6:	add    BYTE PTR [rax],al
   14000fda8:	add    BYTE PTR [rax],al
   14000fdaa:	add    BYTE PTR [rax],al
   14000fdac:	fcom   QWORD PTR [rdi+0x10000]
   14000fdb2:	add    BYTE PTR [rax],al
   14000fdb4:	not    BYTE PTR [rdi+0x0]
   14000fdba:	add    BYTE PTR [rax],al
   14000fdbc:	sbb    DWORD PTR [rdx],ecx
   14000fdbe:	add    al,BYTE PTR [rax]
   14000fdc0:	or     dh,BYTE PTR [rdx]
   14000fdc2:	(bad)  
   14000fdc3:	push   rax
   14000fdc4:	pop    rax
   14000fdc5:	push   rcx
   14000fdc6:	add    BYTE PTR [rax],al
   14000fdc8:	lock (bad) 
   14000fdca:	add    BYTE PTR [rax],al
   14000fdcc:	add    DWORD PTR [rsi],eax
   14000fdce:	add    al,BYTE PTR [rax]
   14000fdd0:	(bad)  
   14000fdd1:	xchg   edx,eax
   14000fdd2:	add    dh,BYTE PTR [rax]
   14000fdd4:	sbb    DWORD PTR [rbx],edx
   14000fdd6:	add    DWORD PTR [rax],eax
   14000fdd8:	add    al,0xc2
   14000fdda:	add    BYTE PTR [rax],al
   14000fddc:	test   al,0x54
   14000fdde:	add    BYTE PTR [rax],al
   14000fde0:	push   rax
   14000fde1:	add    BYTE PTR [rax],al
   14000fde3:	add    BYTE PTR [rcx],bl
   14000fde5:	sub    BYTE PTR [rdi],al
   14000fde7:	add    BYTE PTR [rdi],dl
   14000fde9:	xor    al,0x38
   14000fdeb:	add    BYTE PTR [rdi],dl
   14000fded:	add    DWORD PTR [rdx],esi
   14000fdef:	add    BYTE PTR [rax],cl
   14000fdf1:	jo     0x14000fdfa
   14000fdf3:	(bad)  
   14000fdf4:	(bad)  
   14000fdf5:	push   rax
   14000fdf6:	add    BYTE PTR [rax],al
   14000fdf8:	test   al,0x54
   14000fdfa:	add    BYTE PTR [rax],al
   14000fdfc:	add    BYTE PTR [rcx],0x0
   14000fdff:	add    BYTE PTR [rcx],bl
   14000fe01:	(bad)  
   14000fe02:	or     DWORD PTR [rax],eax
   14000fe04:	(bad)  
   14000fe05:	je     0x14000fe40
   14000fe07:	add    BYTE PTR [rsi],bl
   14000fe09:	cmp    BYTE PTR fs:[rax],al
   14000fe0c:	(bad)  
   14000fe0d:	xor    al,0x37
   14000fe0f:	add    BYTE PTR [rsi],bl
   14000fe11:	add    DWORD PTR [rax+rax*1],esi
   14000fe14:	adc    BYTE PTR [rax+0x0],dl
   14000fe17:	add    BYTE PTR [rax-0x6fffffac],ch
   14000fe1d:	add    DWORD PTR [rax],eax
   14000fe1f:	add    BYTE PTR [rcx],bl
   14000fe21:	sbb    DWORD PTR [rax+rax*1],eax
   14000fe24:	or     dh,BYTE PTR [rcx+rdx*1]
   14000fe27:	add    BYTE PTR [rdx],cl
   14000fe29:	rol    BYTE PTR [rsi],cl
   14000fe2b:	jo     0x14000fdd5
   14000fe2d:	push   rsp
   14000fe2e:	add    BYTE PTR [rax],al
   14000fe30:	push   0x0
   14000fe35:	add    BYTE PTR [rax],al
   14000fe37:	add    BYTE PTR [rcx],al
   14000fe39:	add    al,0x1
   14000fe3b:	add    BYTE PTR [rdx+rdx*1],al
   14000fe3e:	add    BYTE PTR [rax],al
   14000fe40:	add    BYTE PTR [rax],al
   14000fe42:	add    BYTE PTR [rax],al
   14000fe44:	rex.WR
   14000fe45:	add    BYTE PTR [r8],al
   14000fe48:	add    BYTE PTR [rax],al
   14000fe4a:	add    BYTE PTR [rax],al
   14000fe4c:	(bad)  
   14000fe4d:	inc    BYTE PTR [rax]
	...
   14000fe5f:	add    BYTE PTR [rdx],al
   14000fe61:	add    BYTE PTR [rax],al
   14000fe63:	add    BYTE PTR [rax-0x2],bh
   14000fe66:	add    BYTE PTR [rax],al
   14000fe68:	movabs al,ds:0xfe
   14000fe71:	add    BYTE PTR [rax],al
   14000fe73:	add    BYTE PTR [rax],al
   14000fe75:	add    BYTE PTR [rax],al
   14000fe77:	add    BYTE PTR [rax],dl
   14000fe79:	add    BYTE PTR [rax],al
   14000fe7b:	add    BYTE PTR [rax],ah
   14000fe7d:	and    al,BYTE PTR [rcx]
   14000fe7f:	add    BYTE PTR [rax],al
   14000fe81:	add    BYTE PTR [rax],al
   14000fe83:	add    bh,bh
   14000fe85:	(bad)  
   14000fe86:	(bad)  
   14000fe87:	inc    DWORD PTR [rax]
   14000fe89:	add    BYTE PTR [rax],al
   14000fe8b:	add    BYTE PTR [rax],bl
   14000fe8d:	add    BYTE PTR [rax],al
   14000fe8f:	add    BYTE PTR [rax+rax*2+0x0],al
	...
   14000fea2:	add    BYTE PTR [rax],al
   14000fea4:	pop    rax
   14000fea5:	and    DWORD PTR [rcx],eax
   14000fea7:	add    BYTE PTR [rax],al
   14000fea9:	add    BYTE PTR [rax],al
   14000feab:	add    bh,bh
   14000fead:	(bad)  
   14000feae:	(bad)  
   14000feaf:	inc    DWORD PTR [rax]
   14000feb1:	add    BYTE PTR [rax],al
   14000feb3:	add    BYTE PTR [rax],bl
   14000feb5:	add    BYTE PTR [rax],al
   14000feb7:	add    BYTE PTR [rdx],ah
   14000feb9:	push   rcx
	...
   14000feca:	add    BYTE PTR [rax],al
   14000fecc:	js     0x14000feef
   14000fece:	add    DWORD PTR [rax],eax
   14000fed0:	add    BYTE PTR [rax],al
   14000fed2:	add    BYTE PTR [rax],al
   14000fed4:	(bad)  
   14000fed5:	(bad)  
   14000fed6:	(bad)  
   14000fed7:	inc    DWORD PTR [rax]
   14000fed9:	add    BYTE PTR [rax],al
   14000fedb:	add    BYTE PTR [rax],bl
   14000fedd:	add    BYTE PTR [rax],al
   14000fedf:	add    BYTE PTR [rcx+rax*2],ah
	...
   14000fef2:	add    BYTE PTR [rax],al
   14000fef4:	add    BYTE PTR fs:[r8],al
   14000fef8:	add    BYTE PTR [rax],al
   14000fefa:	add    BYTE PTR [rax],al
   14000fefc:	adc    bh,bh
	...
   14000ff0e:	add    BYTE PTR [rax],al
   14000ff10:	add    eax,DWORD PTR [rax]
   14000ff12:	add    BYTE PTR [rax],al
   14000ff14:	xor    bh,bh
   14000ff16:	add    BYTE PTR [rax],al
   14000ff18:	enter  0xfe,0x0
   14000ff1c:	movabs al,ds:0xfe
	...
   14000ff31:	add    BYTE PTR [rax],al
   14000ff33:	add    BYTE PTR [rax+0x121],ah
   14000ff39:	add    BYTE PTR [rax],al
   14000ff3b:	add    bh,bh
   14000ff3d:	(bad)  
   14000ff3e:	(bad)  
   14000ff3f:	inc    DWORD PTR [rax]
   14000ff41:	add    BYTE PTR [rax],al
   14000ff43:	add    BYTE PTR [rax],bl
   14000ff45:	add    BYTE PTR [rax],al
   14000ff47:	add    BYTE PTR [rcx+rax*2],ah
	...
   14000ff5a:	add    BYTE PTR [rax],al
   14000ff5c:	add    BYTE PTR fs:[r8],al
   14000ff60:	add    BYTE PTR [rax],al
   14000ff62:	add    BYTE PTR [rax],al
   14000ff64:	js     0x14000ff65
	...
   14000ff76:	add    BYTE PTR [rax],al
   14000ff78:	add    eax,DWORD PTR [rax]
   14000ff7a:	add    BYTE PTR [rax],al
   14000ff7c:	cwde   
   14000ff7d:	inc    DWORD PTR [rax]
   14000ff7f:	add    al,cl
   14000ff81:	inc    BYTE PTR [rax]
   14000ff83:	add    BYTE PTR [rax+0xfe],ah
	...
   14000ff99:	add    BYTE PTR [rax],al
   14000ff9b:	add    al,cl
   14000ff9d:	and    DWORD PTR [rcx],eax
   14000ff9f:	add    BYTE PTR [rax],al
   14000ffa1:	add    BYTE PTR [rax],al
   14000ffa3:	add    bh,bh
   14000ffa5:	(bad)  
   14000ffa6:	(bad)  
   14000ffa7:	inc    DWORD PTR [rax]
   14000ffa9:	add    BYTE PTR [rax],al
   14000ffab:	add    BYTE PTR [rax],bl
   14000ffad:	add    BYTE PTR [rax],al
   14000ffaf:	add    BYTE PTR [rcx+rax*2],ah
	...
   14000ffbe:	add    BYTE PTR [rax],al
   14000ffc0:	add    DWORD PTR [rax],eax
   14000ffc2:	add    BYTE PTR [rax],al
   14000ffc4:	sar    bh,1
	...
   14000ffd2:	add    BYTE PTR [rax],al
   14000ffd4:	lock and DWORD PTR [rcx],eax
   14000ffd7:	add    BYTE PTR [rax],al
   14000ffd9:	add    BYTE PTR [rax],al
   14000ffdb:	add    bh,bh
   14000ffdd:	(bad)  
   14000ffde:	(bad)  
   14000ffdf:	inc    DWORD PTR [rax]
   14000ffe1:	add    BYTE PTR [rax],al
   14000ffe3:	add    BYTE PTR [rax-0x20000000],ah
   14000ffe9:	jbe    0x14000ffeb
	...
   14000fffb:	add    BYTE PTR [rax+0x77],ch
   14000fffe:	add    BYTE PTR [rax],al
   140010000:	add    BYTE PTR [rax],al
   140010002:	add    BYTE PTR [rax],al
   140010004:	sar    bh,0x0
	...
   140010017:	add    BYTE PTR [rax+0x104],bl
   14001001d:	add    BYTE PTR [rax],al
   14001001f:	add    BYTE PTR [rax],al
   140010021:	add    BYTE PTR [rax],al
   140010023:	add    BYTE PTR [rsi-0x4ffffef9],al
   140010029:	mov    dl,0x0
   14001002b:	add    BYTE PTR [rax+0x3],ah
   14001002e:	add    DWORD PTR [rax],eax
	...
   140010038:	repnz or al,0x1
   14001003b:	add    BYTE PTR [rax-0x4f],bh
   14001003e:	add    BYTE PTR [rax],al
   140010040:	add    BYTE PTR [rcx+rax*1],al
	...
   14001004b:	add    BYTE PTR [rcx*1-0x4de7ffff],dl
   140010052:	add    BYTE PTR [rax],al
   140010054:	mov    al,0x2
   140010056:	add    DWORD PTR [rax],eax
	...
   140010060:	cmp    al,0xd
   140010062:	add    DWORD PTR [rax],eax
   140010064:	enter  0xb0,0x0
   140010068:	pop    rax
   140010069:	add    al,BYTE PTR [rcx]
	...
   140010073:	add    BYTE PTR [rsi+0xd],ah
   140010076:	add    DWORD PTR [rax],eax
   140010078:	jo     0x14001002a
   14001007a:	add    BYTE PTR [rax],al
   14001007c:	loopne 0x140010080
   14001007e:	add    DWORD PTR [rax],eax
	...
   140010088:	mov    BYTE PTR [rip+0xffffffffb0f80001],cl        # 0xf0f9008f
   14001008e:	add    BYTE PTR [rax],al
   140010090:	lock add al,BYTE PTR [rcx]
	...
   14001009b:	add    BYTE PTR [rax+0x800010d],dh
   1400100a1:	mov    cl,0x0
   1400100a3:	add    BYTE PTR [rax],dl
   1400100a5:	add    al,BYTE PTR [rcx]
	...
   1400100af:	add    dl,bl
   1400100b1:	or     eax,0xb0280001
   1400100b6:	add    BYTE PTR [rax],al
   1400100b8:	js     0x1400100be
   1400100ba:	add    DWORD PTR [rax],eax
	...
   1400100c4:	cli    
   1400100c5:	or     eax,0xb2900001
   1400100ca:	add    BYTE PTR [rax],al
   1400100cc:	push   0x102
   1400100d1:	add    BYTE PTR [rax],al
   1400100d3:	add    BYTE PTR [rax],al
   1400100d5:	add    BYTE PTR [rax],al
   1400100d7:	add    BYTE PTR [rsi],bl
   1400100d9:	(bad)  
   1400100da:	add    DWORD PTR [rax],eax
   1400100dc:	xor    BYTE PTR [rax+0x3c00000],0x1
	...
   1400100eb:	add    BYTE PTR [rax+0xe],cl
   1400100ee:	add    DWORD PTR [rax],eax
   1400100f0:	fdiv   DWORD PTR [rcx+0x2980000]
   1400100f6:	add    DWORD PTR [rax],eax
	...
   140010100:	push   0xe
   140010102:	add    DWORD PTR [rax],eax
   140010104:	mov    al,0xb0
   140010106:	add    BYTE PTR [rax],al
   140010108:	mov    BYTE PTR [rdx],al
   14001010a:	add    DWORD PTR [rax],eax
	...
   140010114:	mov    cl,BYTE PTR [rsi]
   140010116:	add    DWORD PTR [rax],eax
   140010118:	movabs al,ds:0x104300000b0
   140010121:	add    BYTE PTR [rax],al
   140010123:	add    BYTE PTR [rax],al
   140010125:	add    BYTE PTR [rax],al
   140010127:	add    BYTE PTR [rsi+rcx*1-0x4db7ffff],ch
   14001012e:	add    BYTE PTR [rax],al
   140010130:	call   0x140010238
   140010135:	add    BYTE PTR [rax],al
   140010137:	add    BYTE PTR [rax],al
   140010139:	add    BYTE PTR [rax],al
   14001013b:	add    al,dl
   14001013d:	(bad)  
   14001013e:	add    DWORD PTR [rax],eax
   140010140:	add    BYTE PTR [rdx+0x3400000],dh
   140010146:	add    DWORD PTR [rax],eax
	...
   140010150:	test   BYTE PTR [rsi],0x1
   140010153:	add    BYTE PTR [rax-0x4f],bl
   140010156:	add    BYTE PTR [rax],al
   140010158:	xor    BYTE PTR [rbx],al
   14001015a:	add    DWORD PTR [rax],eax
	...
   140010164:	sbb    al,0xf
   140010166:	add    DWORD PTR [rax],eax
   140010168:	rex.W mov cl,0x0
   14001016b:	add    al,dl
   14001016d:	add    eax,DWORD PTR [rcx]
	...
   140010177:	add    BYTE PTR [rax+0xf],al
   14001017a:	add    DWORD PTR [rax],eax
   14001017c:	call   0x1a8010232
   140010181:	add    al,0x1
	...
   14001018b:	add    BYTE PTR [rax+0xf],bh
   14001018e:	add    DWORD PTR [rax],eax
   140010190:	xor    BYTE PTR [rdx+0x4880000],0x1
	...
   14001019f:	add    BYTE PTR [rax-0x5ffffef1],bh
   1400101a5:	mov    dl,0x0
   1400101a7:	add    al,ch
   1400101a9:	add    DWORD PTR [rcx],eax
	...
   1400101b3:	add    al,dh
   1400101b5:	sgdt   [rax]
   1400101b8:	add    BYTE PTR [rax+0x1f80000],dh
   1400101be:	add    DWORD PTR [rax],eax
	...
   1400101c8:	adc    BYTE PTR cs:[rcx],al
   1400101cb:	add    BYTE PTR [rax],dl
   1400101cd:	mov    al,0x0
	...
   1400101e7:	add    al,ah
   1400101e9:	sgdt   [rax]
	...
   1400101f8:	add    dl,BYTE PTR [rax]
   1400101fa:	add    DWORD PTR [rax],eax
   1400101fc:	add    BYTE PTR [rax],al
   1400101fe:	add    BYTE PTR [rax],al
   140010200:	sbb    BYTE PTR [rax],dl
   140010202:	add    DWORD PTR [rax],eax
	...
   140010210:	mov    cs,WORD PTR [rbx]
   140010212:	add    DWORD PTR [rax],eax
   140010214:	add    BYTE PTR [rax],al
   140010216:	add    BYTE PTR [rax],al
   140010218:	jl     0x140010225
   14001021a:	add    DWORD PTR [rax],eax
   14001021c:	add    BYTE PTR [rax],al
   14001021e:	add    BYTE PTR [rax],al
   140010220:	or     eax,DWORD PTR ss:[rcx]
   140010223:	add    BYTE PTR [rax],al
   140010225:	add    BYTE PTR [rax],al
   140010227:	add    BYTE PTR [rdx+rcx*1+0x1],ch
   14001022b:	add    BYTE PTR [rax],al
   14001022d:	add    BYTE PTR [rax],al
   14001022f:	add    BYTE PTR [rdx+rcx*1+0x1],bl
   140010233:	add    BYTE PTR [rax],al
   140010235:	add    BYTE PTR [rax],al
   140010237:	add    dl,bh
   140010239:	or     DWORD PTR [rcx],eax
   14001023b:	add    BYTE PTR [rax],al
   14001023d:	add    BYTE PTR [rax],al
   14001023f:	add    BYTE PTR [rsi],al
   140010241:	or     DWORD PTR [rcx],eax
   140010243:	add    BYTE PTR [rax],al
   140010245:	add    BYTE PTR [rax],al
   140010247:	add    BYTE PTR [rdx],dl
   140010249:	or     al,BYTE PTR [rcx]
	...
   140010257:	add    BYTE PTR [rax+rcx*1+0x1],dl
	...
   140010267:	add    BYTE PTR [rdx+0xc],dl
   14001026a:	add    DWORD PTR [rax],eax
   14001026c:	add    BYTE PTR [rax],al
   14001026e:	add    BYTE PTR [rax],al
   140010270:	ss or  al,0x1
   140010273:	add    BYTE PTR [rax],al
   140010275:	add    BYTE PTR [rax],al
   140010277:	add    BYTE PTR [rdx+0x109],al
	...
   140010285:	add    BYTE PTR [rax],al
   140010287:	add    BYTE PTR [rax+0x10a],ah
	...
   140010295:	add    BYTE PTR [rax],al
   140010297:	add    ah,al
   140010299:	or     al,BYTE PTR [rcx]
   14001029b:	add    BYTE PTR [rax],al
   14001029d:	add    BYTE PTR [rax],al
   14001029f:	add    ah,cl
   1400102a1:	or     DWORD PTR [rcx],eax
	...
   1400102af:	add    BYTE PTR [rax+0x108],bh
   1400102b5:	add    BYTE PTR [rax],al
   1400102b7:	add    BYTE PTR [rdx],dl
   1400102b9:	or     BYTE PTR [rcx],al
   1400102bb:	add    BYTE PTR [rax],al
   1400102bd:	add    BYTE PTR [rax],al
   1400102bf:	add    BYTE PTR [rdx+0x8],ch
   1400102c2:	add    DWORD PTR [rax],eax
   1400102c4:	add    BYTE PTR [rax],al
   1400102c6:	add    BYTE PTR [rax],al
   1400102c8:	or     BYTE PTR ds:[rcx],al
   1400102cb:	add    BYTE PTR [rax],al
   1400102cd:	add    BYTE PTR [rax],al
   1400102cf:	add    dl,cl
   1400102d1:	or     BYTE PTR [rcx],al
	...
   1400102df:	add    BYTE PTR [rsi+0x8],bh
   1400102e2:	add    DWORD PTR [rax],eax
	...
   1400102f0:	mov    dl,0xc
   1400102f2:	add    DWORD PTR [rax],eax
   1400102f4:	add    BYTE PTR [rax],al
   1400102f6:	add    BYTE PTR [rax],al
   1400102f8:	jo     0x140010306
   1400102fa:	add    DWORD PTR [rax],eax
   1400102fc:	add    BYTE PTR [rax],al
   1400102fe:	add    BYTE PTR [rax],al
   140010300:	loop   0x14001030d
   140010302:	add    DWORD PTR [rax],eax
   140010304:	add    BYTE PTR [rax],al
   140010306:	add    BYTE PTR [rax],al
   140010308:	lock or BYTE PTR [rcx],al
   14001030b:	add    BYTE PTR [rax],al
   14001030d:	add    BYTE PTR [rax],al
   14001030f:	add    BYTE PTR [rsp+rcx*1+0x1],al
   140010316:	add    BYTE PTR [rax],al
   140010318:	movabs ds:0xa000000000000109,al
   140010321:	or     eax,DWORD PTR [rcx]
	...
   14001032f:	add    BYTE PTR [rax+0x10c],bl
	...
   14001033d:	add    BYTE PTR [rax],al
   14001033f:	add    BYTE PTR [rdx],ah
   140010341:	or     al,0x1
   140010343:	add    BYTE PTR [rax],al
   140010345:	add    BYTE PTR [rax],al
   140010347:	add    ah,dh
   140010349:	or     eax,DWORD PTR [rcx]
   14001034b:	add    BYTE PTR [rax],al
   14001034d:	add    BYTE PTR [rax],al
   14001034f:	add    BYTE PTR [rax],cl
   140010351:	or     al,0x1
	...
   14001035f:	add    ah,ah
   140010361:	or     DWORD PTR [rcx],eax
   140010363:	add    BYTE PTR [rax],al
   140010365:	add    BYTE PTR [rax],al
   140010367:	add    al,bl
   140010369:	or     DWORD PTR [rcx],eax
   14001036b:	add    BYTE PTR [rax],al
   14001036d:	add    BYTE PTR [rax],al
   14001036f:	add    BYTE PTR [rdx+rcx*1+0x1],cl
   140010376:	add    BYTE PTR [rax],al
   140010378:	rex.X or al,BYTE PTR [rcx]
   14001037b:	add    BYTE PTR [rax],al
   14001037d:	add    BYTE PTR [rax],al
   14001037f:	add    BYTE PTR [rdx],bl
   140010381:	or     DWORD PTR [rcx],eax
   140010383:	add    BYTE PTR [rax],al
   140010385:	add    BYTE PTR [rax],al
   140010387:	add    BYTE PTR [rdx],dh
   140010389:	or     DWORD PTR [rcx],eax
   14001038b:	add    BYTE PTR [rax],al
   14001038d:	add    BYTE PTR [rax],al
   14001038f:	add    al,ch
   140010391:	(bad)  
   140010392:	add    DWORD PTR [rax],eax
   140010394:	add    BYTE PTR [rax],al
   140010396:	add    BYTE PTR [rax],al
   140010398:	sub    BYTE PTR [rdx],cl
   14001039a:	add    DWORD PTR [rax],eax
   14001039c:	add    BYTE PTR [rax],al
   14001039e:	add    BYTE PTR [rax],al
   1400103a0:	xchg   edx,eax
   1400103a1:	or     DWORD PTR [rcx],eax
   1400103a3:	add    BYTE PTR [rax],al
   1400103a5:	add    BYTE PTR [rax],al
   1400103a7:	add    dl,bl
   1400103a9:	or     eax,DWORD PTR [rcx]
   1400103ab:	add    BYTE PTR [rax],al
   1400103ad:	add    BYTE PTR [rax],al
   1400103af:	add    BYTE PTR [rax+rcx*1],ah
   1400103b2:	add    DWORD PTR [rax],eax
	...
   1400103c0:	mov    dl,0x9
   1400103c2:	add    DWORD PTR [rax],eax
	...
   1400103d0:	loop   0x1400103de
   1400103d2:	add    DWORD PTR [rax],eax
   1400103d4:	add    BYTE PTR [rax],al
   1400103d6:	add    BYTE PTR [rax],al
   1400103d8:	enter  0x10c,0x0
	...
   1400103e8:	or     ax,WORD PTR [rcx]
   1400103eb:	add    BYTE PTR [rax],al
   1400103ed:	add    BYTE PTR [rax],al
   1400103ef:	add    BYTE PTR [rsi+0xb],cl
   1400103f2:	add    DWORD PTR [rax],eax
	...
   140010400:	loopne 0x14001040a
   140010402:	add    DWORD PTR [rax],eax
   140010404:	add    BYTE PTR [rax],al
   140010406:	add    BYTE PTR [rax],al
   140010408:	ror    BYTE PTR [rbx],0x1
   14001040b:	add    BYTE PTR [rax],al
   14001040d:	add    BYTE PTR [rax],al
   14001040f:	add    ah,bh
   140010411:	(bad)  
   140010412:	add    DWORD PTR [rax],eax
   140010414:	add    BYTE PTR [rax],al
   140010416:	add    BYTE PTR [rax],al
   140010418:	nop
   140010419:	or     BYTE PTR [rcx],al
   14001041b:	add    BYTE PTR [rax],al
   14001041d:	add    BYTE PTR [rax],al
   14001041f:	add    BYTE PTR [rdx+0x108],ah
	...
   14001042d:	add    BYTE PTR [rax],al
   14001042f:	add    dh,bh
   140010431:	or     al,BYTE PTR [rcx]
   140010433:	add    BYTE PTR [rax],al
   140010435:	add    BYTE PTR [rax],al
   140010437:	add    BYTE PTR [rdx],bl
   140010439:	or     eax,DWORD PTR [rcx]
   14001043b:	add    BYTE PTR [rax],al
   14001043d:	add    BYTE PTR [rax],al
   14001043f:	add    BYTE PTR [rsi+0x10a],ch
   140010445:	add    BYTE PTR [rax],al
   140010447:	add    dl,ah
   140010449:	or     al,BYTE PTR [rcx]
   14001044b:	add    BYTE PTR [rax],al
   14001044d:	add    BYTE PTR [rax],al
   14001044f:	add    ah,ch
   140010451:	or     al,BYTE PTR [rcx]
   140010453:	add    BYTE PTR [rax],al
   140010455:	add    BYTE PTR [rax],al
   140010457:	add    dl,dl
   140010459:	or     al,BYTE PTR [rcx]
	...
   140010467:	add    BYTE PTR [rdi+rcx*1+0x1],ah
	...
   140010477:	add    BYTE PTR [rdx+0x9],cl
   14001047a:	add    DWORD PTR [rax],eax
	...
   140010488:	movabs al,ds:0x10f
   140010491:	add    BYTE PTR [rax],al
   140010493:	add    BYTE PTR [rax],al
   140010495:	add    BYTE PTR [rax],al
   140010497:	add    BYTE PTR [rsi],bh
   140010499:	(bad)  
   14001049a:	add    DWORD PTR [rax],eax
   14001049c:	add    BYTE PTR [rax],al
   14001049e:	add    BYTE PTR [rax],al
   1400104a0:	mov    eax,0x105
   1400104a5:	add    BYTE PTR [rax],al
   1400104a7:	add    dl,ah
   1400104a9:	(bad)  
   1400104aa:	add    DWORD PTR [rax],eax
   1400104ac:	add    BYTE PTR [rax],al
   1400104ae:	add    BYTE PTR [rax],al
   1400104b0:	(bad)  
   1400104b1:	(bad)  
   1400104b2:	add    DWORD PTR [rax],eax
   1400104b4:	add    BYTE PTR [rax],al
   1400104b6:	add    BYTE PTR [rax],al
   1400104b8:	pop    rsp
   1400104b9:	(bad)  
   1400104ba:	add    DWORD PTR [rax],eax
   1400104bc:	add    BYTE PTR [rax],al
   1400104be:	add    BYTE PTR [rax],al
   1400104c0:	add    al,BYTE PTR [rdi]
   1400104c2:	add    DWORD PTR [rax],eax
   1400104c4:	add    BYTE PTR [rax],al
   1400104c6:	add    BYTE PTR [rax],al
   1400104c8:	(bad)  
   1400104c9:	(bad)  
   1400104ca:	add    DWORD PTR [rax],eax
   1400104cc:	add    BYTE PTR [rax],al
   1400104ce:	add    BYTE PTR [rax],al
   1400104d0:	je     0x1400104d8
   1400104d2:	add    DWORD PTR [rax],eax
   1400104d4:	add    BYTE PTR [rax],al
   1400104d6:	add    BYTE PTR [rax],al
   1400104d8:	adc    al,0x7
   1400104da:	add    DWORD PTR [rax],eax
   1400104dc:	add    BYTE PTR [rax],al
   1400104de:	add    BYTE PTR [rax],al
   1400104e0:	rol    BYTE PTR [rdi],1
   1400104e2:	add    DWORD PTR [rax],eax
   1400104e4:	add    BYTE PTR [rax],al
   1400104e6:	add    BYTE PTR [rax],al
   1400104e8:	mov    BYTE PTR [rdi],0x1
   1400104eb:	add    BYTE PTR [rax],al
   1400104ed:	add    BYTE PTR [rax],al
   1400104ef:	add    al,dh
   1400104f1:	(bad)  
   1400104f2:	add    DWORD PTR [rax],eax
   1400104f4:	add    BYTE PTR [rax],al
   1400104f6:	add    BYTE PTR [rax],al
   1400104f8:	enter  0x106,0x0
   1400104fc:	add    BYTE PTR [rax],al
   1400104fe:	add    BYTE PTR [rax],al
   140010500:	scas   al,BYTE PTR es:[rdi]
   140010501:	(bad)  
   140010502:	add    DWORD PTR [rax],eax
   140010504:	add    BYTE PTR [rax],al
   140010506:	add    BYTE PTR [rax],al
   140010508:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010509:	(bad)  
   14001050a:	add    DWORD PTR [rax],eax
   14001050c:	add    BYTE PTR [rax],al
   14001050e:	add    BYTE PTR [rax],al
   140010510:	in     al,0x5
   140010512:	add    DWORD PTR [rax],eax
   140010514:	add    BYTE PTR [rax],al
   140010516:	add    BYTE PTR [rax],al
   140010518:	sbb    al,0x7
   14001051a:	add    DWORD PTR [rax],eax
   14001051c:	add    BYTE PTR [rax],al
   14001051e:	add    BYTE PTR [rax],al
   140010520:	mov    esi,0x106
   140010525:	add    BYTE PTR [rax],al
   140010527:	add    BYTE PTR [rdx+0x107],dl
   14001052d:	add    BYTE PTR [rax],al
   14001052f:	add    BYTE PTR [rdx+0x7],bh
   140010532:	add    DWORD PTR [rax],eax
   140010534:	add    BYTE PTR [rax],al
   140010536:	add    BYTE PTR [rax],al
   140010538:	test   al,0x6
   14001053a:	add    DWORD PTR [rax],eax
   14001053c:	add    BYTE PTR [rax],al
   14001053e:	add    BYTE PTR [rax],al
   140010540:	jo     0x140010549
   140010542:	add    DWORD PTR [rax],eax
   140010544:	add    BYTE PTR [rax],al
   140010546:	add    BYTE PTR [rax],al
   140010548:	data16 (bad) 
   14001054a:	add    DWORD PTR [rax],eax
   14001054c:	add    BYTE PTR [rax],al
   14001054e:	add    BYTE PTR [rax],al
   140010550:	rex.WRX (bad) 
   140010552:	add    DWORD PTR [rax],eax
   140010554:	add    BYTE PTR [rax],al
   140010556:	add    BYTE PTR [rax],al
   140010558:	rex.X (bad) 
   14001055a:	add    DWORD PTR [rax],eax
   14001055c:	add    BYTE PTR [rax],al
   14001055e:	add    BYTE PTR [rax],al
   140010560:	cs (bad) 
   140010562:	add    DWORD PTR [rax],eax
   140010564:	add    BYTE PTR [rax],al
   140010566:	add    BYTE PTR [rax],al
   140010568:	and    al,0x7
   14001056a:	add    DWORD PTR [rax],eax
   14001056c:	add    BYTE PTR [rax],al
   14001056e:	add    BYTE PTR [rax],al
   140010570:	inc    BYTE PTR [rip+0x1]        # 0x140010577
   140010576:	add    BYTE PTR [rax],al
   140010578:	mov    eax,0x107
   14001057d:	add    BYTE PTR [rax],al
   14001057f:	add    ah,dh
   140010581:	add    eax,0x1
   140010586:	add    BYTE PTR [rax],al
   140010588:	fadd   DWORD PTR [rip+0x1]        # 0x14001058f
   14001058e:	add    BYTE PTR [rax],al
   140010590:	retf   0x105
   140010593:	add    BYTE PTR [rax],al
   140010595:	add    BYTE PTR [rax],al
   140010597:	add    al,al
   140010599:	add    eax,0x1
   14001059e:	add    BYTE PTR [rax],al
   1400105a0:	xchg   edx,eax
   1400105a1:	(bad)  
   1400105a2:	add    DWORD PTR [rax],eax
   1400105a4:	add    BYTE PTR [rax],al
   1400105a6:	add    BYTE PTR [rax],al
   1400105a8:	adc    BYTE PTR [rcx],r8b
	...
   1400105b7:	add    BYTE PTR [rsp+rax*1+0x66],cl
   1400105bb:	jb     0x140010622
   1400105bd:	add    BYTE PTR gs:[rax],al
   1400105c0:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   1400105c7:	movsxd eax,DWORD PTR [rax]
   1400105c9:	add    BYTE PTR [rcx+0x3],ch
   1400105cc:	pop    rdi
   1400105cd:	jbe    0x140010642
   1400105cf:	outs   dx,BYTE PTR ds:[rsi]
   1400105d0:	ja     0x140010642
   1400105d2:	jb     0x14001063d
   1400105d4:	outs   dx,BYTE PTR ds:[rsi]
   1400105d5:	je     0x14001063d
   1400105d7:	add    BYTE PTR [rsi+0x75705f02],bl
   1400105dd:	jb     0x140010644
   1400105df:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400105e2:	ins    BYTE PTR es:[rdi],dx
   1400105e3:	add    BYTE PTR [rax+rax*1],dl
   1400105e6:	(bad)  
   1400105e7:	(bad)  
   1400105e8:	xor    eax,DWORD PTR [rax+0x59]
   1400105eb:	pop    r8
   1400105ed:	push   rax
   1400105ee:	rex.RB
   1400105ef:	pop    r8
   1400105f1:	rex pop rdx
   1400105f3:	add    BYTE PTR [rsp+rax*1+0x6d6d656d],dl
   1400105fa:	outs   dx,DWORD PTR ds:[rsi]
   1400105fb:	jbe    0x140010662
   1400105fd:	add    BYTE PTR [rdx],cl
   1400105ff:	add    BYTE PTR [rdi],bh
   140010601:	(bad)  
   140010602:	xor    BYTE PTR [rbp+0x78],ah
   140010605:	movsxd esp,DWORD PTR [rbp+0x70]
   140010608:	je     0x140010673
   14001060a:	outs   dx,DWORD PTR ds:[rsi]
   14001060b:	outs   dx,BYTE PTR ds:[rsi]
   14001060c:	rex
   14001060d:	rex push rcx
   14001060f:	rex.RB
   140010610:	rex.B
   140010611:	rex.B
   140010612:	rex
   140010613:	rex.B
   140010614:	rex.RB
   140010615:	rex.X push rcx
   140010617:	rex.RB
   140010618:	rex.X
   140010619:	rex.R
   14001061a:	rex pop rdx
   14001061c:	add    BYTE PTR [rax],al
   14001061e:	or     eax,DWORD PTR [rax]
   140010620:	(bad)  
   140010621:	(bad)  
   140010622:	xor    BYTE PTR [rbp+0x78],ah
   140010625:	movsxd esp,DWORD PTR [rbp+0x70]
   140010628:	je     0x140010693
   14001062a:	outs   dx,DWORD PTR ds:[rsi]
   14001062b:	outs   dx,BYTE PTR ds:[rsi]
   14001062c:	rex
   14001062d:	rex push rcx
   14001062f:	rex.RB
   140010630:	rex.B
   140010631:	rex.B
   140010632:	rex
   140010633:	rex.B
   140010634:	rex.RB
   140010635:	rex.X push rcx
   140010637:	rex.RB
   140010638:	rex.X
   140010639:	rex.R
   14001063a:	rex.W
   14001063b:	rex pop rdx
   14001063d:	add    BYTE PTR [rax+rax*1],cl
   140010640:	(bad)  
   140010641:	(bad)  
   140010642:	xor    BYTE PTR [rbp+0x78],ah
   140010645:	movsxd esp,DWORD PTR [rbp+0x70]
   140010648:	je     0x1400106b3
   14001064a:	outs   dx,DWORD PTR ds:[rsi]
   14001064b:	outs   dx,BYTE PTR ds:[rsi]
   14001064c:	rex
   14001064d:	rex push rcx
   14001064f:	rex.RB
   140010650:	rex.B
   140010651:	rex.B
   140010652:	rex
   140010653:	rex.B
   140010654:	rex.RB
   140010655:	rex.X push rsi
   140010657:	xor    BYTE PTR [rax+0x40],al
   14001065a:	pop    rdx
   14001065b:	add    BYTE PTR [rcx],dl
   14001065d:	add    BYTE PTR [rdi],bh
   14001065f:	(bad)  
   140010660:	xor    DWORD PTR [rbp+0x78],esp
   140010663:	movsxd esp,DWORD PTR [rbp+0x70]
   140010666:	je     0x1400106d1
   140010668:	outs   dx,DWORD PTR ds:[rsi]
   140010669:	outs   dx,BYTE PTR ds:[rsi]
   14001066a:	rex
   14001066b:	rex push rbp
   14001066d:	rex.RB
   14001066e:	rex.B
   14001066f:	rex.B
   140010670:	rex pop rax
   140010672:	pop    rdx
   140010673:	add    BYTE PTR [rcx],dh
   140010675:	add    BYTE PTR [rdi],bh
   140010677:	ja     0x1400106e1
   140010679:	(bad)  
   14001067a:	je     0x1400106bc
   14001067c:	gs js  0x1400106e2
   14001067f:	gs jo  0x1400106f6
   140010682:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   140010689:	rex.X
   14001068a:	push   r8
   14001068c:	rex.RB
   14001068d:	rex.X
   14001068e:	rex.R pop rax
   140010690:	pop    rdx
   140010691:	add    BYTE PTR [rbx+0x0],cl
   140010694:	pop    rdi
   140010695:	rex.XB js 0x140010710
   140010698:	push   rsp
   140010699:	push   0x45776f72
   14001069e:	js     0x140010703
   1400106a0:	gs jo  0x140010717
   1400106a3:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   1400106aa:	pop    rdi
   1400106ab:	pop    rdi
   1400106ac:	rex.XB js 0x140010727
   1400106af:	rex.RX jb 0x140010713
   1400106b2:	ins    DWORD PTR es:[rdi],dx
   1400106b3:	gs rex.W (bad) 
   1400106b6:	outs   dx,BYTE PTR ds:[rsi]
   1400106b7:	fs ins BYTE PTR es:[rdi],dx
   1400106b9:	gs jb  0x1400106ef
   1400106bc:	add    BYTE PTR [rax],al
   1400106be:	xchg   edx,eax
   1400106bf:	add    al,0x6d
   1400106c1:	gs ins DWORD PTR es:[rdi],dx
   1400106c3:	movsxd esi,DWORD PTR [rax+0x79]
   1400106c6:	add    BYTE PTR [rax],al
   1400106c8:	mov    edi,0x61635f00
   1400106cd:	ins    BYTE PTR es:[rdi],dx
   1400106ce:	ins    BYTE PTR es:[rdi],dx
   1400106cf:	outs   dx,BYTE PTR ds:[rsi]
   1400106d0:	gs ja  0x14001073b
   1400106d3:	add    BYTE PTR [rbp+0x0],dl
   1400106d6:	pop    rdi
   1400106d7:	pop    rax
   1400106d8:	movsxd esi,DWORD PTR [rax+0x74]
   1400106db:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400106e4:	pop    rdi
   1400106e5:	(bad)  
   1400106e6:	ins    DWORD PTR es:[rdi],dx
   1400106e7:	jae    0x140010750
   1400106e9:	pop    rdi
   1400106ea:	gs js  0x140010756
   1400106ed:	je     0x1400106ef
   1400106ef:	add    BYTE PTR [rbp+0x775f5f00],bl
   1400106f5:	addr32 gs je 0x140010766
   1400106f9:	(bad)  
   1400106fa:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140010701:	add    BYTE PTR [rsi+0x735f5f00],cl
   140010707:	gs je  0x140010769
   14001070a:	(bad)  
   14001070b:	jo     0x14001077d
   14001070d:	pop    rdi
   14001070e:	je     0x140010789
   140010710:	jo     0x140010777
   140010712:	add    BYTE PTR [rax],al
   140010714:	xor    al,BYTE PTR [riz*2+0x746978]
   14001071b:	add    BYTE PTR [rsi],cl
   14001071d:	add    DWORD PTR [rdi+0x65],ebx
   140010720:	js     0x14001078b
   140010722:	je     0x140010724
   140010724:	rol    DWORD PTR [rax],0x5f
   140010727:	movsxd esp,DWORD PTR [rbp+0x78]
   14001072a:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140010732:	jae    0x140010799
   140010734:	je     0x1400107ab
   140010736:	jae    0x14001079d
   140010738:	jb     0x1400107a7
   14001073a:	(bad)  
   14001073b:	je     0x1400107a5
   14001073d:	gs jb  0x1400107b2
   140010740:	add    BYTE PTR [rax],al
   140010742:	jge    0x140010745
   140010744:	pop    rdi
   140010745:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14001074c:	ins    DWORD PTR es:[rdi],dx
   14001074d:	add    BYTE PTR [rdi+0x0],dl
   140010750:	pop    rdi
   140010751:	pop    rdi
   140010752:	rex.XB pop r15
   140010754:	jae    0x1400107c6
   140010756:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001075a:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140010761:	ins    BYTE PTR es:[rdi],dx
   140010762:	gs jb  0x140010765
   140010765:	add    BYTE PTR [rdx+0x63775f03],al
   14001076b:	ins    DWORD PTR es:[rdi],dx
   14001076c:	fs ins BYTE PTR es:[rdi],dx
   14001076e:	outs   dx,BYTE PTR ds:[rsi]
   14001076f:	add    BYTE PTR [rdi],ah
   140010771:	add    DWORD PTR [rdi+0x66],ebx
   140010774:	ins    DWORD PTR es:[rdi],dx
   140010775:	outs   dx,DWORD PTR ds:[rsi]
   140010776:	fs add BYTE PTR gs:[rax],al
   14001077a:	rol    BYTE PTR [rax],cl
   14001077c:	pop    rdi
   14001077d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140010780:	ins    DWORD PTR es:[rdi],dx
   140010781:	outs   dx,DWORD PTR ds:[rsi]
   140010782:	fs add BYTE PTR gs:[rax],al
   140010786:	ins    DWORD PTR es:[rdi],dx
   140010787:	jae    0x1400107ff
   140010789:	movsxd esi,DWORD PTR [rdx+0x74]
   14001078c:	cs fs ins BYTE PTR es:[rdi],dx
   14001078f:	ins    BYTE PTR es:[rdi],dx
   140010790:	add    BYTE PTR [rax],al
   140010792:	(bad)  
   140010793:	add    BYTE PTR [rdi],bh
   140010795:	je     0x1400107fc
   140010797:	jb     0x140010806
   140010799:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   1400107a0:	pop    rcx
   1400107a1:	pop    r8
   1400107a3:	pop    rax
   1400107a4:	pop    rdx
   1400107a5:	add    dh,ah
   1400107a7:	add    DWORD PTR [rdi+0x6c],ebx
   1400107aa:	outs   dx,DWORD PTR ds:[rsi]
   1400107ab:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400107ae:	add    ebx,DWORD PTR [r15+0x75]
   1400107b2:	outs   dx,BYTE PTR ds:[rsi]
   1400107b3:	ins    BYTE PTR es:[rdi],dx
   1400107b4:	outs   dx,DWORD PTR ds:[rsi]
   1400107b5:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400107b8:	jnp    0x1400107ba
   1400107ba:	pop    rdi
   1400107bb:	pop    rdi
   1400107bc:	fs ins BYTE PTR es:[rdi],dx
   1400107be:	ins    BYTE PTR es:[rdi],dx
   1400107bf:	outs   dx,DWORD PTR ds:[rsi]
   1400107c0:	outs   dx,BYTE PTR ds:[rsi]
   1400107c1:	gs js  0x14001082d
   1400107c4:	je     0x1400107c6
   1400107c6:	nop
   1400107c7:	add    bl,BYTE PTR [rdi+0x6f]
   1400107ca:	outs   dx,BYTE PTR ds:[rsi]
   1400107cb:	gs js  0x140010837
   1400107ce:	je     0x1400107d0
   1400107d0:	adc    al,BYTE PTR [rax]
   1400107d2:	(bad)  
   1400107d3:	(bad)  
   1400107d4:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   1400107d8:	gs pop rdi
   1400107da:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   1400107e1:	rex.RB
   1400107e2:	rex.B
   1400107e3:	rex.B
   1400107e4:	rex pop rax
   1400107e6:	pop    rdx
   1400107e7:	add    BYTE PTR [rax+rax*1],dl
   1400107ea:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400107ec:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x6f436563
   1400107f4:	ins    DWORD PTR es:[rdi],dx
   1400107f5:	jo     0x140010863
   1400107f7:	gs je  0x14001085f
   1400107fa:	add    BYTE PTR [rax],al
   1400107fc:	or     DWORD PTR [rax],eax
   1400107fe:	rex.RB jbe 0x140010866
   140010801:	outs   dx,BYTE PTR ds:[rsi]
   140010802:	je     0x14001085b
   140010804:	jb     0x14001086f
   140010806:	je     0x14001086d
   140010808:	push   rsp
   140010809:	jb     0x14001086c
   14001080b:	outs   dx,BYTE PTR ds:[rsi]
   14001080c:	jae    0x140010874
   14001080e:	gs jb  0x140010811
   140010811:	add    BYTE PTR [rdi],dl
   140010813:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   140010817:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140010820:	js     0x140010879
   140010822:	add    BYTE PTR [rax],al
   140010824:	adc    eax,DWORD PTR [rax]
   140010826:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010828:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x65426563
   140010830:	imul   ebp,DWORD PTR [esi+0x49],0x6974696e
   140010838:	(bad)  
   140010839:	ins    BYTE PTR es:[rdi],dx
   14001083a:	imul   edi,DWORD PTR [rdx+0x65],0x47001200
   140010841:	gs je  0x140010891
   140010844:	outs   dx,DWORD PTR ds:[rsi]
   140010845:	fs jne 0x1400108b4
   140010848:	gs rex.W (bad) 
   14001084b:	outs   dx,BYTE PTR ds:[rsi]
   14001084c:	fs ins BYTE PTR es:[rdi],dx
   14001084e:	gs rex.RB js 0x1400108a9
   140010852:	add    BYTE PTR [rax],al
   140010854:	(bad)  
   140010855:	add    BYTE PTR [rdi+0x75],cl
   140010858:	je     0x1400108ca
   14001085a:	jne    0x1400108d0
   14001085c:	rex.R
   14001085d:	gs (bad) 
   14001085f:	jne    0x1400108c8
   140010861:	push   rbx
   140010862:	je     0x1400108d6
   140010864:	imul   ebp,DWORD PTR [rsi+0x67],0x13000057
   14001086b:	add    BYTE PTR [rdi+0x65],al
   14001086e:	je     0x1400108bd
   140010870:	outs   dx,DWORD PTR ds:[rsi]
   140010871:	fs jne 0x1400108e0
   140010874:	gs rex.W (bad) 
   140010877:	outs   dx,BYTE PTR ds:[rsi]
   140010878:	fs ins BYTE PTR es:[rdi],dx
   14001087a:	gs push rdi
   14001087c:	add    BYTE PTR [rax],al
   14001087e:	or     BYTE PTR [rax],al
   140010880:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140010882:	jb     0x1400108f1
   140010884:	(bad)  
   140010885:	je     0x1400108d4
   140010887:	gs jae 0x1400108fd
   14001088a:	(bad)  
   14001088b:	addr32 gs push rdi
   14001088e:	add    BYTE PTR [rax],al
   140010890:	add    eax,0x65764500
   140010895:	outs   dx,BYTE PTR ds:[rsi]
   140010896:	je     0x1400108ed
   140010898:	outs   dx,BYTE PTR ds:[rsi]
   140010899:	jb     0x140010900
   14001089b:	imul   esi,DWORD PTR [ebx+0x74],0x4007265
   1400108a3:	add    BYTE PTR [rbp+0x76],al
   1400108a6:	outs   dx,BYTE PTR gs:[rsi]
   1400108a8:	je     0x1400108fd
   1400108aa:	gs je  0x1400108f6
   1400108ad:	outs   dx,BYTE PTR ds:[rsi]
   1400108ae:	outs   dx,WORD PTR ds:[rsi]
   1400108b0:	jb     0x14001091f
   1400108b2:	(bad)  
   1400108b3:	je     0x14001091e
   1400108b5:	outs   dx,DWORD PTR ds:[rsi]
   1400108b6:	outs   dx,BYTE PTR ds:[rsi]
   1400108b7:	add    BYTE PTR [rax+rax*1],dl
   1400108ba:	rex.RXB
   1400108bb:	gs je  0x14001090e
   1400108be:	jb     0x14001092f
   1400108c0:	movsxd eax,DWORD PTR [rcx+0x64]
   1400108c3:	fs jb  0x14001092b
   1400108c6:	jae    0x14001093b
   1400108c8:	add    BYTE PTR [rax],al
   1400108ca:	(bad)  
   1400108cb:	add    BYTE PTR [rdi+0x65],al
   1400108ce:	je     0x14001091d
   1400108d0:	outs   dx,DWORD PTR ds:[rsi]
   1400108d1:	fs jne 0x140010940
   1400108d4:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   1400108de:	add    BYTE PTR [rax],al
   1400108e0:	add    eax,DWORD PTR [rax]
   1400108e2:	rex.RB jbe 0x14001094a
   1400108e5:	outs   dx,BYTE PTR ds:[rsi]
   1400108e6:	je     0x14001093a
   1400108e8:	imul   esi,DWORD PTR gs:[ebx+0x74],0x11007265
   1400108f1:	add    BYTE PTR [rdi+0x65],al
   1400108f4:	je     0x140010939
   1400108f6:	jne    0x14001096a
   1400108f8:	jb     0x14001095f
   1400108fa:	outs   dx,BYTE PTR ds:[rsi]
   1400108fb:	je     0x140010951
   1400108fd:	push   0x64616572
   140010902:	rex.WB
   140010903:	add    BYTE PTR fs:[rax],al
   140010906:	or     BYTE PTR [rax],al
   140010908:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001090a:	rex.XB jb 0x140010972
   14001090d:	(bad)  
   14001090e:	je     0x140010975
   140010910:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010912:	jae    0x140010988
   140010914:	(bad)  
   140010915:	outs   dx,BYTE PTR ds:[rsi]
   140010916:	movsxd esp,DWORD PTR [rbp+0x0]
   140010919:	add    BYTE PTR [rip+0x6c655200],ah        # 0x1ac665b1f
   14001091f:	gs (bad) 
   140010921:	jae    0x140010988
   140010923:	push   rbx
   140010924:	push   rdx
   140010925:	push   rdi
   140010926:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140010928:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001092b:	push   0x64657261
   140010930:	add    BYTE PTR [rax],al
   140010932:	add    DWORD PTR [rax],eax
   140010934:	movsxd esi,DWORD PTR [r9+0x75]
   140010938:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   14001093f:	outs   dx,DWORD PTR ds:[rsi]
   140010940:	movsxd ebp,DWORD PTR [rbx+0x53]
   140010943:	push   0x64657261
   140010948:	add    BYTE PTR [rax],al
   14001094a:	add    al,BYTE PTR [rax]
   14001094c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001094e:	outs   dx,BYTE PTR ds:[rsi]
   14001094f:	jbe    0x1400109b6
   140010951:	jb     0x1400109c7
   140010953:	push   rbx
   140010954:	je     0x1400109c8
   140010956:	imul   ebp,DWORD PTR [rsi+0x67],0x75636553
   14001095d:	jb     0x1400109c8
   14001095f:	je     0x1400109da
   140010961:	rex.R
   140010962:	gs jae 0x1400109c8
   140010965:	jb     0x1400109d0
   140010967:	jo     0x1400109dd
   140010969:	outs   dx,DWORD PTR ds:[rsi]
   14001096a:	jb     0x1400109c0
   14001096c:	outs   dx,DWORD PTR ds:[rsi]
   14001096d:	push   rbx
   14001096e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140010972:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14001097a:	imul   esi,DWORD PTR [rax+0x74],0x57726f
   140010981:	add    BYTE PTR [rip+0x74654700],al        # 0x1b4665087
   140010987:	rex.WR (bad) 
   140010989:	jae    0x1400109ff
   14001098b:	rex.RB jb 0x140010a00
   14001098e:	outs   dx,DWORD PTR ds:[rsi]
   14001098f:	jb     0x140010991
   140010991:	add    BYTE PTR [rsi],al
   140010993:	add    BYTE PTR [rbx+0x72],al
   140010996:	gs (bad) 
   140010998:	je     0x1400109ff
   14001099a:	rex.RB jbe 0x140010a02
   14001099d:	outs   dx,BYTE PTR ds:[rsi]
   14001099e:	je     0x1400109f7
   1400109a0:	add    BYTE PTR [rax],al
   1400109a2:	(bad)  
   1400109a3:	add    BYTE PTR [rbx+0x72],al
   1400109a6:	gs (bad) 
   1400109a8:	je     0x140010a0f
   1400109aa:	push   rsp
   1400109ab:	push   0x64616572
   1400109b0:	add    BYTE PTR [rax],al
   1400109b2:	xor    al,0x0
   1400109b4:	push   rdi
   1400109b5:	(bad)  
   1400109b6:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6c754d72
   1400109be:	je     0x140010a29
   1400109c0:	jo     0x140010a2e
   1400109c2:	gs rex.WRXB (bad) 
   1400109c5:	push   0x65
   1400109c7:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   1400109cb:	add    BYTE PTR [rbx],al
   1400109cd:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   1400109d1:	(bad)  
   1400109d2:	ins    BYTE PTR es:[rdi],dx
   1400109d3:	rex.RX jb 0x140010a3b
   1400109d6:	add    BYTE PTR gs:[rcx],ch
   1400109d9:	add    BYTE PTR [rbx+0x65],dl
   1400109dc:	je     0x140010a23
   1400109de:	jbe    0x140010a45
   1400109e0:	outs   dx,BYTE PTR ds:[rsi]
   1400109e1:	je     0x1400109e3
   1400109e3:	add    BYTE PTR [rsi],dh
   1400109e5:	add    BYTE PTR [rdi+0x61],dl
   1400109e8:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   1400109f0:	ins    BYTE PTR es:[edi],dx
   1400109f2:	gs rex.WRXB (bad) 
   1400109f5:	push   0x65
   1400109f7:	movsxd esi,DWORD PTR [rax+rax*1+0x32]
   1400109fb:	add    BYTE PTR [rbx+0x6f],al
   1400109fe:	push   rdx
   1400109ff:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   140010a08:	(bad)  
   140010a09:	jae    0x140010a7e
   140010a0b:	rex.WRXB (bad) 
   140010a0d:	push   0x65
   140010a0f:	movsxd esi,DWORD PTR [rax+rax*1+0x39]
   140010a13:	add    BYTE PTR [rbx+0x6f],al
   140010a16:	push   rdx
   140010a17:	gs jbe 0x140010a89
   140010a1a:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   140010a1e:	(bad)  
   140010a1f:	jae    0x140010a94
   140010a21:	rex.WRXB (bad) 
   140010a23:	push   0x65
   140010a25:	movsxd esi,DWORD PTR [rax+rax*1+0x24]
   140010a29:	add    BYTE PTR [rdx+0x65],dl
   140010a2c:	ins    BYTE PTR es:[rdi],dx
   140010a2d:	gs (bad) 
   140010a2f:	jae    0x140010a96
   140010a31:	push   rbx
   140010a32:	push   rdx
   140010a33:	push   rdi
   140010a34:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140010a36:	movsxd ebp,DWORD PTR [rbx+0x45]
   140010a39:	js     0x140010a9e
   140010a3b:	ins    BYTE PTR es:[rdi],dx
   140010a3c:	jne    0x140010ab1
   140010a3e:	imul   esi,DWORD PTR [rsi+0x65],0x41000000
   140010a45:	movsxd esi,DWORD PTR [rcx+0x75]
   140010a48:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   140010a4f:	outs   dx,DWORD PTR ds:[rsi]
   140010a50:	movsxd ebp,DWORD PTR [rbx+0x45]
   140010a53:	js     0x140010ab8
   140010a55:	ins    BYTE PTR es:[rdi],dx
   140010a56:	jne    0x140010acb
   140010a58:	imul   esi,DWORD PTR [rsi+0x65],0x43003f00
   140010a5f:	outs   dx,DWORD PTR ds:[rsi]
   140010a60:	push   rsp
   140010a61:	(bad)  
   140010a62:	jae    0x140010acf
   140010a64:	rex.WRB
   140010a65:	gs ins DWORD PTR es:[rdi],dx
   140010a67:	rex.RX jb 0x140010acf
   140010a6a:	add    BYTE PTR gs:[rsi],al
   140010a6d:	add    BYTE PTR [rbx+0x6f],al
   140010a70:	rex.XB jb 0x140010ad8
   140010a73:	(bad)  
   140010a74:	je     0x140010adb
   140010a76:	rex.RX jb 0x140010ade
   140010a79:	gs push rsp
   140010a7b:	push   0x64616572
   140010a80:	gs fs rex.WRB (bad) 
   140010a84:	jb     0x140010af9
   140010a86:	push   0x72656c61
   140010a8b:	add    BYTE PTR [rbx],bl
   140010a8d:	add    BYTE PTR [rcx+0x6e],cl
   140010a90:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140010a98:	push   rbx
   140010a99:	push   rdx
   140010a9a:	push   rdi
   140010a9b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140010a9d:	movsxd ebp,DWORD PTR [rbx+0x0]
   140010aa0:	add    BYTE PTR [rax],al
   140010aa2:	rex.XB ins BYTE PTR es:[rdi],dx
   140010aa4:	outs   dx,DWORD PTR ds:[rsi]
   140010aa5:	jae    0x140010b0c
   140010aa7:	rex.W (bad) 
   140010aa9:	outs   dx,BYTE PTR ds:[rsi]
   140010aaa:	fs ins BYTE PTR es:[rdi],dx
   140010aac:	add    BYTE PTR gs:[rax+0x0],al
   140010ab0:	rex.RXB
   140010ab1:	gs je  0x140010b08
   140010ab4:	outs   dx,DWORD PTR ds:[rsi]
   140010ab5:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   140010ab9:	outs   dx,BYTE PTR ds:[rsi]
   140010aba:	outs   dx,WORD PTR ds:[rsi]
   140010abc:	jb     0x140010b2b
   140010abe:	(bad)  
   140010abf:	je     0x140010b2a
   140010ac1:	outs   dx,DWORD PTR ds:[rsi]
   140010ac2:	outs   dx,BYTE PTR ds:[rsi]
   140010ac3:	add    BYTE PTR [rdx],al
   140010ac5:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   140010ac9:	(bad)  
   140010aca:	ins    BYTE PTR es:[rdi],dx
   140010acb:	rex.B ins BYTE PTR es:[rdi],dx
   140010acd:	ins    BYTE PTR es:[rdi],dx
   140010ace:	outs   dx,DWORD PTR ds:[rsi]
   140010acf:	movsxd eax,DWORD PTR [rax]
   140010ad1:	add    BYTE PTR [rbx],dh
   140010ad3:	add    BYTE PTR [rdi+0x65],al
   140010ad6:	je     0x140010b24
   140010ad8:	outs   dx,BYTE PTR gs:[rsi]
   140010ada:	addr32 je 0x140010b45
   140010add:	push   rbx
   140010ade:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6f43001e
   140010ae6:	jo     0x140010b61
   140010ae8:	push   rbx
   140010ae9:	imul   esp,DWORD PTR [rax+rax*1+0x4d],0x6b614d00
   140010af1:	(bad)
   140010af8:	je     0x140010b5f
   140010afa:	push   rbx
   140010afb:	add    BYTE PTR [rax],r8b
   140010afe:	add    BYTE PTR ss:[rdi+0x65],al
   140010b02:	je     0x140010b57
   140010b04:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140010b08:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140010b10:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   140010b17:	movsxd ebp,DWORD PTR [rax+rax*1+0x60]
   140010b1b:	add    BYTE PTR [rbx+0x65],dl
   140010b1e:	je     0x140010b73
   140010b20:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140010b24:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140010b2c:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   140010b33:	movsxd ebp,DWORD PTR [rax+rax*1+0x27]
   140010b37:	add    BYTE PTR [rbx+0x6f],al
   140010b3a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010b3c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140010b44:	push   rbx
   140010b45:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140010b49:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43000c00
   140010b51:	jb     0x140010bb8
   140010b53:	(bad)  
   140010b54:	je     0x140010bbb
   140010b56:	push   rsp
   140010b57:	push   0x64616572
   140010b5c:	jo     0x140010bcd
   140010b5e:	outs   dx,DWORD PTR ds:[rsi]
   140010b5f:	ins    BYTE PTR es:[rdi],dx
   140010b60:	push   rsp
   140010b61:	imul   ebp,DWORD PTR [rbp+0x65],0x1a0072
   140010b68:	push   rbx
   140010b69:	gs je  0x140010bc0
   140010b6c:	push   0x64616572
   140010b71:	jo     0x140010be2
   140010b73:	outs   dx,DWORD PTR ds:[rsi]
   140010b74:	ins    BYTE PTR es:[rdi],dx
   140010b75:	push   rsp
   140010b76:	imul   ebp,DWORD PTR [rbp+0x65],0x26000072
   140010b7d:	add    BYTE PTR [rbx+0x6f],al
   140010b80:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010b82:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140010b8a:	rex.RB js 0x140010b8d
   140010b8d:	add    BYTE PTR [rdx+0x0],al
   140010b90:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140010b92:	push   rbp
   140010b93:	outs   dx,BYTE PTR ds:[rsi]
   140010b94:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140010b9b:	imul   edi,DWORD PTR [rdx+0x65],0x3e0000
   140010ba2:	push   rbx
   140010ba3:	gs je  0x140010bf6
   140010ba6:	jb     0x140010c17
   140010ba8:	movsxd esp,DWORD PTR [rbp+0x73]
   140010bab:	jae    0x140010c00
   140010bad:	push   0x6f647475
   140010bb2:	ja     0x140010c22
   140010bb4:	push   rax
   140010bb5:	(bad)  
   140010bb6:	jb     0x140010c19
   140010bb8:	ins    DWORD PTR es:[rdi],dx
   140010bb9:	gs je  0x140010c21
   140010bbc:	jb     0x140010c31
   140010bbe:	add    BYTE PTR [rax],al
   140010bc0:	add    BYTE PTR [rax],al
   140010bc2:	rex.RB jbe 0x140010c2a
   140010bc5:	outs   dx,BYTE PTR ds:[rsi]
   140010bc6:	je     0x140010c09
   140010bc8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140010bcc:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6e6f4364
   140010bd4:	je     0x140010c48
   140010bd6:	outs   dx,DWORD PTR ds:[rsi]
   140010bd7:	ins    BYTE PTR es:[rdi],dx
   140010bd8:	add    BYTE PTR [rax],al
   140010bda:	sub    eax,0x656c5300
   140010bdf:	gs jo  0x140010be2
   140010be2:	and    BYTE PTR [rax],al
   140010be4:	rex.RXB
   140010be5:	gs je  0x140010c3b
   140010be8:	je     0x140010c4b
   140010bea:	jb     0x140010c60
   140010bec:	jne    0x140010c5e
   140010bee:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010bf0:	outs   dx,WORD PTR ds:[rsi]
   140010bf2:	push   rdi
   140010bf3:	add    BYTE PTR [rdx],al
   140010bf5:	add    BYTE PTR [rdx+0x74],dl
   140010bf8:	ins    BYTE PTR es:[rdi],dx
   140010bf9:	rex.XB (bad) 
   140010bfb:	jo     0x140010c71
   140010bfd:	jne    0x140010c71
   140010bff:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140010c02:	outs   dx,BYTE PTR ds:[rsi]
   140010c03:	je     0x140010c6a
   140010c05:	js     0x140010c7b
   140010c07:	add    BYTE PTR [rcx],cl
   140010c09:	add    BYTE PTR [rdx+0x74],dl
   140010c0c:	ins    BYTE PTR es:[rdi],dx
   140010c0d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140010c0f:	outs   dx,DWORD PTR ds:[rsi]
   140010c10:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140010c14:	jne    0x140010c84
   140010c16:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140010c1a:	outs   dx,BYTE PTR ds:[rsi]
   140010c1b:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140010c1d:	je     0x140010c91
   140010c1f:	jns    0x140010c21
   140010c21:	add    BYTE PTR [rdi],cl
   140010c23:	add    BYTE PTR [rdx+0x74],dl
   140010c26:	ins    BYTE PTR es:[rdi],dx
   140010c27:	push   rsi
   140010c28:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140010c2f:	outs   dx,BYTE PTR ds:[rsi]
   140010c30:	ja     0x140010c9b
   140010c32:	outs   dx,BYTE PTR ds:[rsi]
   140010c33:	add    BYTE PTR fs:[rax],al
   140010c36:	adc    DWORD PTR [rax],eax
   140010c38:	push   rbp
   140010c39:	outs   dx,BYTE PTR ds:[rsi]
   140010c3a:	push   0x6c646e61
   140010c3f:	gs fs rex.RB js 0x140010ca7
   140010c44:	gs jo  0x140010cbb
   140010c47:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140010c4e:	gs jb  0x140010c51
   140010c51:	add    BYTE PTR [rdi],cl
   140010c53:	add    BYTE PTR [rbx+0x65],dl
   140010c56:	je     0x140010cad
   140010c58:	outs   dx,BYTE PTR ds:[rsi]
   140010c59:	push   0x6c646e61
   140010c5e:	gs fs rex.RB js 0x140010cc6
   140010c63:	gs jo  0x140010cda
   140010c66:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140010c6d:	gs jb  0x140010c70
   140010c70:	or     al,0x0
   140010c72:	rex.RXB
   140010c73:	gs je  0x140010cb9
   140010c76:	jne    0x140010cea
   140010c78:	jb     0x140010cdf
   140010c7a:	outs   dx,BYTE PTR ds:[rsi]
   140010c7b:	je     0x140010ccd
   140010c7d:	jb     0x140010cee
   140010c7f:	movsxd esp,DWORD PTR [rbp+0x73]
   140010c82:	jae    0x140010c84
   140010c84:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   140010c89:	ins    DWORD PTR es:[rdi],dx
   140010c8a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140010c91:	outs   dx,DWORD PTR ds:[rsi]
   140010c92:	movsxd esp,DWORD PTR [rbp+0x73]
   140010c95:	jae    0x140010c97
   140010c97:	add    BYTE PTR [rax],al
   140010c99:	add    BYTE PTR [rcx+0x75],dl
   140010c9c:	gs jb  0x140010d18
   140010c9f:	push   rax
   140010ca0:	gs jb  0x140010d09
   140010ca3:	outs   dx,DWORD PTR ds:[rsi]
   140010ca4:	jb     0x140010d13
   140010ca6:	(bad)  
   140010ca7:	outs   dx,BYTE PTR ds:[rsi]
   140010ca8:	movsxd esp,DWORD PTR [rbp+0x43]
   140010cab:	outs   dx,DWORD PTR ds:[rsi]
   140010cac:	jne    0x140010d1c
   140010cae:	je     0x140010d15
   140010cb0:	jb     0x140010cb2
   140010cb2:	or     eax,0x74654700
   140010cb7:	rex.XB jne 0x140010d2c
   140010cba:	jb     0x140010d21
   140010cbc:	outs   dx,BYTE PTR ds:[rsi]
   140010cbd:	je     0x140010d0f
   140010cbf:	jb     0x140010d30
   140010cc1:	movsxd esp,DWORD PTR [rbp+0x73]
   140010cc4:	jae    0x140010d0f
   140010cc6:	add    BYTE PTR fs:[rax+rax*1],dl
   140010cca:	rex.RXB
   140010ccb:	gs je  0x140010d21
   140010cce:	jns    0x140010d43
   140010cd0:	je     0x140010d37
   140010cd2:	ins    DWORD PTR es:[rdi],dx
   140010cd3:	push   rsp
   140010cd4:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140010cdb:	ins    BYTE PTR es:[rdi],dx
   140010cdc:	gs push rsp
   140010cde:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140010ce5:	gs je  0x140010d3c
   140010ce8:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140010cef:	je     0x140010cf1
   140010cf1:	add    BYTE PTR [rcx+0x70],ah
   140010cf4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e806b
   140010cfe:	outs   dx,DWORD PTR ds:[rsi]
   140010cff:	jb     0x140010d66
   140010d01:	sub    eax,0x636e7973
   140010d06:	push   0x2d316c2d
   140010d0b:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac653b41
   140010d11:	ins    BYTE PTR es:[rdi],dx
   140010d12:	add    BYTE PTR [rax],al
   140010d14:	(bad)  
   140010d15:	jo     0x140010d80
   140010d17:	sub    eax,0x772d736d
   140010d1c:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   140010d23:	je     0x140010d8e
   140010d25:	outs   dx,BYTE PTR ds:[rsi]
   140010d26:	addr32 sub eax,0x766f7270
   140010d2c:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   140010d34:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac653b6a
   140010d3a:	ins    BYTE PTR es:[rdi],dx
   140010d3b:	add    BYTE PTR [rcx+0x70],ah
   140010d3e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e80b5
   140010d48:	outs   dx,DWORD PTR ds:[rsi]
   140010d49:	jb     0x140010db0
   140010d4b:	sub    eax,0x7262696c
   140010d50:	(bad)  
   140010d51:	jb     0x140010dcc
   140010d53:	ins    BYTE PTR es:[rdi],dx
   140010d54:	outs   dx,DWORD PTR ds:[rsi]
   140010d55:	(bad)  
   140010d56:	fs gs jb 0x140010d87
   140010d5a:	ins    BYTE PTR es:[rdi],dx
   140010d5b:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e313a93
   140010d61:	fs ins BYTE PTR es:[rdi],dx
   140010d63:	ins    BYTE PTR es:[rdi],dx
   140010d64:	add    BYTE PTR [rax],al
   140010d66:	(bad)  
   140010d67:	jo     0x140010dd2
   140010d69:	sub    eax,0x772d736d
   140010d6e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010d75:	sub    eax,0x75626564
   140010d7a:	addr32 sub eax,0x312d316c
   140010d80:	sub    eax,0x6c642e31
   140010d85:	ins    BYTE PTR es:[rdi],dx
   140010d86:	add    BYTE PTR [rax],al
   140010d88:	(bad)  
   140010d89:	jo     0x140010df4
   140010d8b:	sub    eax,0x772d736d
   140010d90:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010d97:	sub    eax,0x61636f6c
   140010d9c:	ins    BYTE PTR es:[rdi],dx
   140010d9d:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   140010da4:	sub    eax,0x322d316c
   140010da9:	sub    eax,0x6c642e31
   140010dae:	ins    BYTE PTR es:[rdi],dx
   140010daf:	add    BYTE PTR [rcx+0x70],ah
   140010db2:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8129
   140010dbc:	outs   dx,DWORD PTR ds:[rsi]
   140010dbd:	jb     0x140010e24
   140010dbf:	sub    eax,0x636f7270
   140010dc4:	gs jae 0x140010e3a
   140010dc7:	je     0x140010e31
   140010dc9:	jb     0x140010e30
   140010dcb:	(bad)  
   140010dcc:	fs jae 0x140010dfc
   140010dcf:	ins    BYTE PTR es:[rdi],dx
   140010dd0:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e333b07
   140010dd6:	fs ins BYTE PTR es:[rdi],dx
   140010dd8:	ins    BYTE PTR es:[rdi],dx
   140010dd9:	add    BYTE PTR [rcx+0x70],ah
   140010ddc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8153
   140010de6:	outs   dx,DWORD PTR ds:[rsi]
   140010de7:	jb     0x140010e4e
   140010de9:	sub    eax,0x2d6d6f63
   140010dee:	ins    BYTE PTR es:[rdi],dx
   140010def:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e323b26
   140010df5:	fs ins BYTE PTR es:[rdi],dx
   140010df7:	ins    BYTE PTR es:[rdi],dx
   140010df8:	add    BYTE PTR [rax],al
   140010dfa:	(bad)  
   140010dfb:	jo     0x140010e66
   140010dfd:	sub    eax,0x772d736d
   140010e02:	imul   ebp,DWORD PTR [rsi+0x2d],0x75636573
   140010e09:	jb     0x140010e74
   140010e0b:	je     0x140010e86
   140010e0d:	sub    eax,0x6c646473
   140010e12:	sub    eax,0x312d316c
   140010e17:	sub    eax,0x6c642e30
   140010e1c:	ins    BYTE PTR es:[rdi],dx
   140010e1d:	add    BYTE PTR [rcx+0x70],ah
   140010e20:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8197
   140010e2a:	outs   dx,DWORD PTR ds:[rsi]
   140010e2b:	jb     0x140010e92
   140010e2d:	sub    eax,0x6f727265
   140010e32:	jb     0x140010e9c
   140010e34:	(bad)  
   140010e35:	outs   dx,BYTE PTR ds:[rsi]
   140010e36:	fs ins BYTE PTR es:[rdi],dx
   140010e38:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140010e3f:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac653c76
   140010e45:	ins    BYTE PTR es:[rdi],dx
   140010e46:	add    BYTE PTR [rax],al
   140010e48:	(bad)  
   140010e49:	jo     0x140010eb4
   140010e4b:	sub    eax,0x772d736d
   140010e50:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010e57:	sub    eax,0x636e7973
   140010e5c:	push   0x2d316c2d
   140010e61:	xor    ch,BYTE PTR [rip+0x6c642e31]        # 0x1ac653c98
   140010e67:	ins    BYTE PTR es:[rdi],dx
   140010e68:	add    BYTE PTR [rax],al
   140010e6a:	(bad)  
   140010e6b:	jo     0x140010ed6
   140010e6d:	sub    eax,0x772d736d
   140010e72:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010e79:	sub    eax,0x70616568
   140010e7e:	sub    eax,0x312d326c
   140010e83:	sub    eax,0x6c642e30
   140010e88:	ins    BYTE PTR es:[rdi],dx
   140010e89:	add    BYTE PTR [rcx+0x70],ah
   140010e8c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8203
   140010e96:	outs   dx,DWORD PTR ds:[rsi]
   140010e97:	jb     0x140010efe
   140010e99:	sub    eax,0x646e6168
   140010e9e:	ins    BYTE PTR es:[rdi],dx
   140010e9f:	gs sub eax,0x312d316c
   140010ea5:	sub    eax,0x6c642e30
   140010eaa:	ins    BYTE PTR es:[rdi],dx
   140010eab:	add    BYTE PTR [rcx+0x70],ah
   140010eae:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e8225
   140010eb8:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140010ebc:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x65736162
   140010ec4:	sub    eax,0x322d316c
   140010ec9:	sub    eax,0x6c642e30
   140010ece:	ins    BYTE PTR es:[rdi],dx
   140010ecf:	add    BYTE PTR [rcx+0x70],ah
   140010ed2:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8249
   140010edc:	outs   dx,DWORD PTR ds:[rsi]
   140010edd:	jb     0x140010f44
   140010edf:	sub    eax,0x65726874
   140010ee4:	(bad)  
   140010ee5:	fs jo  0x140010f57
   140010ee8:	outs   dx,DWORD PTR ds:[rsi]
   140010ee9:	ins    BYTE PTR es:[rdi],dx
   140010eea:	sub    eax,0x322d316c
   140010eef:	sub    eax,0x6c642e30
   140010ef4:	ins    BYTE PTR es:[rdi],dx
   140010ef5:	add    BYTE PTR [rcx+0x70],ah
   140010ef8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e826f
   140010f02:	outs   dx,DWORD PTR ds:[rsi]
   140010f03:	jb     0x140010f6a
   140010f05:	sub    eax,0x736c7472
   140010f0a:	jne    0x140010f7c
   140010f0c:	jo     0x140010f7d
   140010f0e:	jb     0x140010f84
   140010f10:	sub    eax,0x322d316c
   140010f15:	sub    eax,0x6c642e30
   140010f1a:	ins    BYTE PTR es:[rdi],dx
   140010f1b:	add    BYTE PTR [rcx+0x70],ah
   140010f1e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8295
   140010f28:	outs   dx,DWORD PTR ds:[rsi]
   140010f29:	jb     0x140010f90
   140010f2b:	sub    eax,0x666f7270
   140010f30:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140010f38:	sub    eax,0x6c642e30
   140010f3d:	ins    BYTE PTR es:[rdi],dx
   140010f3e:	add    BYTE PTR [rax],al
   140010f40:	(bad)  
   140010f41:	jo     0x140010fac
   140010f43:	sub    eax,0x772d736d
   140010f48:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140010f4f:	sub    eax,0x69737973
   140010f54:	outs   dx,BYTE PTR ds:[rsi]
   140010f55:	outs   dx,WORD PTR ds:[rsi]
   140010f57:	sub    eax,0x322d316c
   140010f5c:	sub    eax,0x6c642e31
   140010f61:	ins    BYTE PTR es:[rdi],dx
   140010f62:	add    BYTE PTR [rax],al
   140010f64:	add    eax,DWORD PTR [rax]
   140010f66:	push   rbx
   140010f67:	gs je  0x140010faf
   140010f6a:	outs   dx,BYTE PTR ds:[rsi]
   140010f6b:	je     0x140010fdf
   140010f6d:	imul   esp,DWORD PTR [rbp+0x73],0x63416e49
   140010f74:	ins    BYTE PTR es:[rdi],dx
   140010f75:	push   rdi
   140010f76:	add    BYTE PTR [rax],al
   140010f78:	(bad)  
   140010f79:	jo     0x140010fe4
   140010f7b:	sub    eax,0x772d736d
   140010f80:	imul   ebp,DWORD PTR [rsi+0x2d],0x75636573
   140010f87:	jb     0x140010ff2
   140010f89:	je     0x140011004
   140010f8b:	sub    eax,0x766f7270
   140010f90:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   140010f98:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac653dce
   140010f9e:	ins    BYTE PTR es:[rdi],dx
   140010f9f:	add    BYTE PTR [rip+0x69754200],al        # 0x1a97651a5
   140010fa5:	ins    BYTE PTR es:[rdi],dx
   140010fa6:	fs push rsp
   140010fa8:	jb     0x14001101f
   140010faa:	jae    0x140011020
   140010fac:	gs gs push rdi
   140010faf:	imul   esi,DWORD PTR [rax+rbp*2+0x53],0x576469
   140010fb7:	add    BYTE PTR [rcx+0x70],ah
   140010fba:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e8331
   140010fc4:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140010fc8:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x73757274
   140010fd0:	je     0x140011037
   140010fd2:	gs sub eax,0x312d316c
   140010fd8:	sub    eax,0x6c642e31
   140010fdd:	ins    BYTE PTR es:[rdi],dx
   140010fde:	add    BYTE PTR [rax],al
   140010fe0:	(bad)  
   140010fe1:	add    BYTE PTR [rbx+0x6f],al
   140010fe4:	jb     0x14001104b
   140010fe6:	push   rbp
   140010fe7:	rex.WB
   140010fe8:	rex.XB jb 0x140011050
   140010feb:	(bad)  
   140010fec:	je     0x140011053
   140010fee:	add    BYTE PTR [rax],al
   140010ff0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140010ff2:	jb     0x140011059
   140010ff4:	rex.WRB
   140010ff5:	gs jae 0x14001106b
   140010ff8:	(bad)  
   140010ff9:	imul   ebp,DWORD PTR [esi+0x67],0x6c6c642e
   140011001:	add    BYTE PTR [rip+0x726f4300],al        # 0x1b2705307
   140011007:	gs push rbp
   140011009:	rex.WB
   14001100a:	rex.RX (bad) 
   14001100c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140011010:	jns    0x140011055
   140011012:	jb     0x140011079
   140011014:	(bad)  
   140011015:	je     0x14001107c
   140011017:	add    BYTE PTR [rsi],al
   140011019:	add    BYTE PTR [rbx+0x6f],al
   14001101c:	jb     0x140011083
   14001101e:	push   rbp
   14001101f:	rex.WB push r11
   140011021:	gs jb  0x14001109a
   140011024:	gs jb  0x14001106a
   140011027:	jb     0x14001108e
   140011029:	(bad)  
   14001102a:	je     0x140011091
   14001102c:	add    BYTE PTR [rax],al
   14001102e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140011030:	jb     0x140011097
   140011032:	push   rbp
   140011033:	rex.WB
   140011034:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140011036:	ins    DWORD PTR es:[rdi],dx
   140011037:	jo     0x1400110a8
   140011039:	outs   dx,BYTE PTR ds:[rsi]
   14001103a:	outs   dx,BYTE PTR gs:[rsi]
   14001103c:	je     0x1400110b1
   14001103e:	cs fs ins BYTE PTR es:[rdi],dx
   140011041:	ins    BYTE PTR es:[rdi],dx
   140011042:	add    BYTE PTR [rax],al
   140011044:	xchg   esi,eax
   140011045:	add    al,0x6d
   140011047:	gs ins DWORD PTR es:[rdi],dx
   140011049:	jae    0x1400110b0
   14001104b:	je     0x14001104d
	...

Disassembly of section .data:

0000000140012000 <.data>:
   140012000:	or     BYTE PTR [rdi+0x14000],bh
   140012006:	add    BYTE PTR [rax],al
   140012008:	push   rax
   140012009:	mov    edi,0x14000
   14001200e:	add    BYTE PTR [rax],al
   140012010:	test   al,0xbf
   140012012:	add    BYTE PTR [rax+0x1],al
	...
   14001201d:	add    BYTE PTR [rax],al
   14001201f:	add    BYTE PTR [rcx],al
   140012021:	add    BYTE PTR [rax],al
   140012023:	add    BYTE PTR [rax],al
   140012025:	add    BYTE PTR [rax],al
   140012027:	add    BYTE PTR [rdx],dh
   140012029:	movabs ds:0x5dcd00002b992ddf,al
   140012032:	and    dl,dl
   140012034:	data16 (bad) 
   140012036:	(bad)  
   140012037:	inc    DWORD PTR [rax]
   140012039:	add    BYTE PTR [rax],al
   14001203b:	add    BYTE PTR [rax],al
   14001203d:	add    BYTE PTR [rax],al
   14001203f:	add    BYTE PTR [rcx],al
	...
   14001204d:	add    BYTE PTR [rax],al
   14001204f:	add    BYTE PTR [rdx+0x76aed5b1],ch
   140012055:	retf   
   140012056:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012057:	mov    r13b,0x34
   14001205a:	stc    
   14001205b:	popf   
   14001205c:	imul   r14,QWORD PTR [r14-0xe],0xffffffffb3fe7f3f
   140012064:	jne    0x140012017
   140012066:	pop    rcx
   140012067:	rex.B movabs ds:0x9c78a806667f0fdc,al
   140012071:	std    
   140012072:	(bad)  
   140012073:	cmp    ecx,edi
   140012075:	div    DWORD PTR [rsi]
   140012077:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140012079:	imul   esp,DWORD PTR [rcx+0x6c],0x2d
   14001207d:	(bad)  
   14001207e:	fcom   DWORD PTR [rdi+rsi*4-0x48]
   140012082:	or     eax,0xbe74843d
   140012087:	rex.X mov edi,0xa2273461
   14001208d:	rex.RB (bad) 
   14001208f:	sub    esp,DWORD PTR [rbp+0x1bef7f04]
   140012095:	rex.RX xor r9b,BYTE PTR [rsi-0x7c]
   140012099:	or     eax,0xab4158
   14001209e:	jno    0x1400120dc
   1400120a0:	fnsave [rdx]
   1400120a2:	imul   eax,DWORD PTR [rbx+0x4155fd20],0x34dc81b7
   1400120ac:	xchg   esp,eax
   1400120ad:	shr    BYTE PTR [rdx+rbx*2-0x16],1
   1400120b1:	leave  
   1400120b2:	rex.WB
   1400120b3:	repnz mov ah,0x8d
   1400120b6:	fadd   QWORD PTR [rbx-0x4e]
   1400120b9:	mov    esp,0xd2616a14
   1400120be:	cmp    eax,0x1530ba99
   1400120c3:	loop   0x14001209c
   1400120c5:	hlt    
   1400120c6:	jo     0x14001210c
   1400120c8:	popf   
   1400120c9:	js     0x14001210f
   1400120cb:	xchg   esp,eax
   1400120cc:	mov    edx,ebx
   1400120ce:	cmp    dl,BYTE PTR [rsi+0x368d4a96]
   1400120d4:	pop    rbp
   1400120d5:	xchg   esp,eax
   1400120d6:	jbe    0x140012125
   1400120d8:	movabs ds:0x7b5897eb3696b2f8,eax
   1400120e1:	xchg   esp,eax
   1400120e2:	sub    DWORD PTR [rbx-0x68],esp
   1400120e5:	or     ecx,esi
   1400120e7:	rex.WXB xchg r9,rax
   1400120e9:	loope  0x1400120e4
   1400120eb:	(bad)  
   1400120ec:	jp     0x140012072
   1400120ee:	int    0x16
   1400120f0:	sar    BYTE PTR [rdx-0xa9551b5],cl
   1400120f6:	std    
   1400120f7:	rex.WRB scas rax,QWORD PTR es:[rdi]
   1400120f9:	(bad)  
   1400120fa:	jns    0x1400120bc
   1400120fc:	cmp    dh,ah
   1400120fe:	push   rcx
   1400120ff:	rcr    BYTE PTR [rbx],1
   140012101:	iret   
   140012102:	(bad)  
   140012103:	sub    dh,dh
   140012105:	mov    eax,0x14bc41b6
   14001210a:	(bad)  
   14001210b:	pop    rax
   14001210c:	add    ebx,DWORD PTR [rbp+rcx*2-0x34]
	...
   140012118:	test   al,0xe3
   14001211a:	add    BYTE PTR [rax+0x1],al
	...
   14001214d:	add    BYTE PTR [rax],al
   14001214f:	add    BYTE PTR [rcx],al
   140012151:	add    BYTE PTR [rax],al
   140012153:	add    BYTE PTR [rax],al
   140012155:	add    BYTE PTR [rax],al
   140012157:	add    BYTE PTR [rax],dl
   140012159:	rol    DWORD PTR [rax],cl
   14001215b:	rex add DWORD PTR [rax],eax
	...
   140012166:	add    BYTE PTR [rax],al
   140012168:	cs (bad) 
   14001216a:	push   r14
   14001216c:	gs js  0x1400121d2
   14001216f:	gs jo  0x1400121e6
   140012172:	imul   ebp,DWORD PTR [rdi+0x6e],0x10004040
   140012179:	rol    DWORD PTR [rax],cl
   14001217b:	rex add DWORD PTR [rax],eax
	...
   140012186:	add    BYTE PTR [rax],al
   140012188:	cs (bad) 
   14001218a:	push   r14
   14001218c:	ins    BYTE PTR es:[rdi],dx
   14001218d:	outs   dx,DWORD PTR ds:[rsi]
   14001218e:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   140012196:	jb     0x1400121d8
   140012198:	jae    0x14001220e
   14001219a:	fs rex
   14001219c:	add    BYTE PTR [rax],al
   14001219f:	add    BYTE PTR [rax],dl
   1400121a1:	rol    DWORD PTR [rax],cl
   1400121a3:	rex add DWORD PTR [rax],eax
	...
   1400121ae:	add    BYTE PTR [rax],al
   1400121b0:	cs (bad) 
   1400121b2:	push   r14
   1400121b4:	ins    BYTE PTR es:[rdi],dx
   1400121b5:	outs   dx,BYTE PTR gs:[rsi]
   1400121b7:	addr32 je 0x140012222
   1400121ba:	pop    rdi
   1400121bb:	gs jb  0x140012230
   1400121be:	outs   dx,DWORD PTR ds:[rsi]
   1400121bf:	jb     0x140012201
   1400121c1:	jae    0x140012237
   1400121c3:	fs rex
   1400121c5:	add    BYTE PTR [rax],al
   1400121c8:	adc    bl,dl
   1400121ca:	add    BYTE PTR [rax+0x1],al
	...
   1400121d5:	add    BYTE PTR [rax],al
   1400121d7:	add    BYTE PTR [rsi],ch
   1400121d9:	(bad)  
   1400121da:	push   r14
   1400121dc:	outs   dx,DWORD PTR ds:[rsi]
   1400121dd:	jne    0x140012253
   1400121df:	pop    rdi
   1400121e0:	outs   dx,DWORD PTR ds:[rsi]
   1400121e1:	pop    di
   1400121e3:	jb     0x140012246
   1400121e5:	outs   dx,BYTE PTR ds:[rsi]
   1400121e6:	addr32 gs rex jae 0x14001225f
   1400121eb:	fs rex
   1400121ed:	add    BYTE PTR [rax],al
   1400121f0:	adc    bl,dl
   1400121f2:	add    BYTE PTR [rax+0x1],al
	...
   1400121fd:	add    BYTE PTR [rax],al
   1400121ff:	add    BYTE PTR [rsi],ch
   140012201:	(bad)  
   140012202:	push   r14
   140012204:	push   rdx
   140012205:	gs jae 0x14001227d
   140012208:	ins    BYTE PTR es:[rdi],dx
   140012209:	je     0x140012250
   14001220b:	js     0x140012270
   14001220d:	gs jo  0x140012284
   140012210:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c697740
   140012217:	rex
   140012218:	add    BYTE PTR [rax],al
   14001221b:	add    BYTE PTR [rax],al
   14001221d:	add    BYTE PTR [rax],al
   14001221f:	add    BYTE PTR [rax],dl
   140012221:	rol    DWORD PTR [rax],cl
   140012223:	rex add DWORD PTR [rax],eax
	...
   14001222e:	add    BYTE PTR [rax],al
   140012230:	cs (bad) 
   140012232:	push   r14
   140012234:	(bad)
   140012239:	ins    BYTE PTR es:[rdi],dx
   14001223a:	ins    BYTE PTR es:[rdi],dx
   14001223b:	outs   dx,DWORD PTR ds:[rsi]
   14001223c:	movsxd eax,DWORD PTR [rax+0x73]
   14001223f:	je     0x1400122a5
   140012241:	rex
   140012242:	add    BYTE PTR [rcx],al
   140012245:	add    BYTE PTR [rax],al
   140012247:	add    bh,bh
   140012249:	(bad)  
   14001224a:	(bad)  
   14001224b:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140013000 <.pdata>:
   140013000:	(bad)  
   140013001:	adc    BYTE PTR [rax],al
   140013003:	add    BYTE PTR [rcx+0x10],bh
   140013006:	add    BYTE PTR [rax],al
   140013008:	lock call 0x15081300e
   14001300e:	add    BYTE PTR [rax],al
   140013010:	test   al,0x10
   140013012:	add    BYTE PTR [rax],al
   140013014:	lock call 0x150c1301a
   14001301a:	add    BYTE PTR [rax],al
   14001301c:	adc    r8b,BYTE PTR [r8]
   14001301f:	add    BYTE PTR [rcx+rbp*8],cl
   140013022:	add    BYTE PTR [rax],al
   140013024:	push   rax
   140013025:	adc    al,BYTE PTR [rax]
   140013027:	add    BYTE PTR [rax+rbx*1+0x0],al
   14001302b:	add    BYTE PTR [rax],bh
   14001302d:	jmp    0x158513032
   140013032:	add    BYTE PTR [rax],al
   140013034:	jns    0x14001304e
   140013036:	add    BYTE PTR [rax],al
   140013038:	and    al,0xeb
   14001303a:	add    BYTE PTR [rax],al
   14001303c:	jns    0x140013056
   14001303e:	add    BYTE PTR [rax],al
   140013040:	sti    
   140013041:	sbb    BYTE PTR [rax],al
   140013043:	add    BYTE PTR [rax],dh
   140013045:	jmp    0x140013047
   140013047:	add    bl,bh
   140013049:	sbb    BYTE PTR [rax],al
   14001304b:	add    BYTE PTR [rsi],al
   14001304d:	sbb    DWORD PTR [rax],eax
   14001304f:	add    BYTE PTR [rax-0x15],cl
   140013052:	add    BYTE PTR [rax],al
   140013054:	adc    BYTE PTR [rcx],bl
   140013056:	add    BYTE PTR [rax],al
   140013058:	rex.RX sbb DWORD PTR [rax],r8d
   14001305b:	add    BYTE PTR [rax+0x460000eb],al
   140013061:	sbb    DWORD PTR [rax],eax
   140013063:	add    BYTE PTR [rbp+0x19],ch
   140013066:	add    BYTE PTR [rax],al
   140013068:	mov    ebx,gs
   14001306a:	add    BYTE PTR [rax],al
   14001306c:	ins    DWORD PTR es:[rdi],dx
   14001306d:	sbb    DWORD PTR [rax],eax
   14001306f:	add    BYTE PTR [rdx-0x5bffffe7],dh
   140013075:	jmp    0x140013077
   140013077:	add    BYTE PTR [rdx-0x3fffffe7],dh
   14001307d:	sbb    al,BYTE PTR [rax]
   14001307f:	add    BYTE PTR [rbx+rbp*8+0x1ac00000],bh
   140013086:	add    BYTE PTR [rax],al
   140013088:	int3   
   140013089:	sbb    al,BYTE PTR [rax]
   14001308b:	add    ah,cl
   14001308d:	jmp    0x14001308f
   14001308f:	add    al,ah
   140013091:	sbb    al,BYTE PTR [rax]
   140013093:	add    BYTE PTR [rdi],dh
   140013095:	sbb    al,0x0
   140013097:	add    BYTE PTR [rsp+rbp*8],dl
   14001309a:	add    BYTE PTR [rax],al
   14001309c:	sbb    al,0x0
   14001309f:	add    BYTE PTR [rdi+0x1c],bl
   1400130a2:	add    BYTE PTR [rax],al
   1400130a4:	mov    esp,0x900000ec
   1400130a9:	sbb    al,0x0
   1400130ab:	add    cl,al
   1400130ad:	sbb    eax,0xecec0000
   1400130b2:	add    BYTE PTR [rax],al
   1400130b4:	lock sbb eax,0x1e1b0000
   1400130ba:	add    BYTE PTR [rax],al
   1400130bc:	or     al,0xed
   1400130be:	add    BYTE PTR [rax],al
   1400130c0:	xor    BYTE PTR [rsi],bl
   1400130c2:	add    BYTE PTR [rax],al
   1400130c4:	pop    rax
   1400130c5:	(bad)  
   1400130c6:	add    BYTE PTR [rax],al
   1400130c8:	sub    al,0xed
   1400130ca:	add    BYTE PTR [rax],al
   1400130cc:	nop
   1400130cd:	(bad)  
   1400130ce:	add    BYTE PTR [rax],al
   1400130d0:	mov    WORD PTR [rax],fs
   1400130d2:	add    BYTE PTR [rax],al
   1400130d4:	rex.WR in eax,dx
   1400130d6:	add    BYTE PTR [rax],al
   1400130d8:	movabs al,ds:0xfc000020d0000020
   1400130e1:	in     eax,dx
   1400130e2:	add    BYTE PTR [rax],al
   1400130e4:	loopne 0x140013106
   1400130e6:	add    BYTE PTR [rax],al
   1400130e8:	and    DWORD PTR [rcx],esp
   1400130ea:	add    BYTE PTR [rax],al
   1400130ec:	adc    al,0xee
   1400130ee:	add    BYTE PTR [rax],al
   1400130f0:	xor    BYTE PTR [rcx],ah
   1400130f2:	add    BYTE PTR [rax],al
   1400130f4:	loop   0x140013117
   1400130f6:	add    BYTE PTR [rax],al
   1400130f8:	sub    al,0xee
   1400130fa:	add    BYTE PTR [rax],al
   1400130fc:	lock and DWORD PTR [rax],eax
   1400130ff:	add    BYTE PTR [rbx],ah
   140013101:	and    al,BYTE PTR [rax]
   140013103:	add    BYTE PTR [rax+0x300000ee],bh
   140013109:	and    al,BYTE PTR [rax]
   14001310b:	add    ch,ch
   14001310d:	and    eax,DWORD PTR [rax]
   14001310f:	add    BYTE PTR [rax],bh
   140013111:	out    dx,eax
   140013112:	add    BYTE PTR [rax],al
   140013114:	add    BYTE PTR [rax+rax*1],ah
   140013117:	add    BYTE PTR [rbp+0x64000025],bh
   14001311d:	out    dx,eax
   14001311e:	add    BYTE PTR [rax],al
   140013120:	shl    BYTE PTR [rip+0x278d0000],1        # 0x1678e3126
   140013126:	add    BYTE PTR [rax],al
   140013128:	nop
   140013129:	out    dx,eax
   14001312a:	add    BYTE PTR [rax],al
   14001312c:	movabs al,ds:0xbc0000280a000027
   140013135:	out    dx,eax
   140013136:	add    BYTE PTR [rax],al
   140013138:	adc    BYTE PTR [rax],ch
   14001313a:	add    BYTE PTR [rax],al
   14001313c:	sub    DWORD PTR [rax],0xefd80000
   140013142:	add    BYTE PTR [rax],al
   140013144:	nop
   140013145:	sub    BYTE PTR [rax],al
   140013147:	add    BYTE PTR [rcx+rbp*1],bh
   14001314a:	add    BYTE PTR [rax],al
   14001314c:	clc    
   14001314d:	out    dx,eax
   14001314e:	add    BYTE PTR [rax],al
   140013150:	push   rax
   140013151:	sub    DWORD PTR [rax],eax
   140013153:	add    BYTE PTR [rcx+rbp*1-0xfdc0000],al
   14001315a:	add    BYTE PTR [rax],al
   14001315c:	test   BYTE PTR [rcx],ch
   14001315e:	add    BYTE PTR [rax],al
   140013160:	ret    
   140013161:	sub    al,BYTE PTR [rax]
   140013163:	add    BYTE PTR [rax-0x10],al
   140013166:	add    BYTE PTR [rax],al
   140013168:	ret    
   140013169:	sub    al,BYTE PTR [rax]
   14001316b:	add    BYTE PTR [rcx],ah
   14001316d:	sub    eax,DWORD PTR [rax]
   14001316f:	add    BYTE PTR [rax+rsi*8+0x0],dl
   140013173:	add    BYTE PTR [rax],dh
   140013175:	sub    eax,DWORD PTR [rax]
   140013177:	add    BYTE PTR [rbx+rbp*1+0x0],ah
   14001317b:	add    BYTE PTR [rax+0x640000f0],cl
   140013181:	sub    eax,DWORD PTR [rax]
   140013183:	add    BYTE PTR [rbx-0x5bffffd4],ah
   140013189:	lock add BYTE PTR [rax],al
   14001318c:	movabs ds:0xb800002d0100002c,eax
   140013195:	lock add BYTE PTR [rax],al
   140013198:	adc    BYTE PTR [rip+0x2d440000],ch        # 0x16d45319e
   14001319e:	add    BYTE PTR [rax],al
   1400131a0:	in     al,dx
   1400131a1:	lock add BYTE PTR [rax],al
   1400131a4:	rex.R sub eax,0x2e830000
   1400131aa:	add    BYTE PTR [rax],al
   1400131ac:	or     cl,dh
   1400131ae:	add    BYTE PTR [rax],al
   1400131b0:	sub    DWORD PTR [rsi],0x0
   1400131b3:	add    cl,ah
   1400131b5:	add    BYTE PTR cs:[rax],al
   1400131b8:	sbb    al,0xf1
   1400131ba:	add    BYTE PTR [rax],al
   1400131bc:	lock add BYTE PTR cs:[rax],al
   1400131c0:	add    ebp,DWORD PTR [rdi]
   1400131c2:	add    BYTE PTR [rax],al
   1400131c4:	push   rax
   1400131c5:	icebp  
   1400131c6:	add    BYTE PTR [rax],al
   1400131c8:	add    ebp,DWORD PTR [rdi]
   1400131ca:	add    BYTE PTR [rax],al
   1400131cc:	movsxd ebp,DWORD PTR [rdi]
   1400131ce:	add    BYTE PTR [rax],al
   1400131d0:	pop    rax
   1400131d1:	icebp  
   1400131d2:	add    BYTE PTR [rax],al
   1400131d4:	movsxd ebp,DWORD PTR [rdi]
   1400131d6:	add    BYTE PTR [rax],al
   1400131d8:	jl     0x140013209
   1400131da:	add    BYTE PTR [rax],al
   1400131dc:	jo     0x1400131cf
   1400131de:	add    BYTE PTR [rax],al
   1400131e0:	jl     0x140013211
   1400131e2:	add    BYTE PTR [rax],al
   1400131e4:	mov    dl,0x2f
   1400131e6:	add    BYTE PTR [rax],al
   1400131e8:	xor    cl,0x0
   1400131eb:	add    al,al
   1400131ed:	(bad)  
   1400131ee:	add    BYTE PTR [rax],al
   1400131f0:	(bad)  
   1400131f1:	xor    BYTE PTR [rax],al
   1400131f3:	add    al,al
   1400131f5:	icebp  
   1400131f6:	add    BYTE PTR [rax],al
   1400131f8:	movabs al,ds:0xc8000030f6000030
   140013201:	icebp  
   140013202:	add    BYTE PTR [rax],al
   140013204:	div    BYTE PTR [rax]
   140013206:	add    BYTE PTR [rax],al
   140013208:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013209:	xor    DWORD PTR [rax],eax
   14001320b:	add    al,dl
   14001320d:	icebp  
   14001320e:	add    BYTE PTR [rax],al
   140013210:	mov    al,0x31
   140013212:	add    BYTE PTR [rax],al
   140013214:	shl    BYTE PTR [rcx],cl
   140013216:	add    BYTE PTR [rax],al
   140013218:	add    dl,dh
   14001321a:	add    BYTE PTR [rax],al
   14001321c:	shl    BYTE PTR [rcx],cl
   14001321e:	add    BYTE PTR [rax],al
   140013220:	jmp    0x140013253
   140013222:	add    BYTE PTR [rax],al
   140013224:	adc    dl,dh
   140013226:	add    BYTE PTR [rax],al
   140013228:	jmp    0x14001325b
   14001322a:	add    BYTE PTR [rax],al
   14001322c:	pop    rbp
   14001322d:	xor    al,BYTE PTR [rax]
   14001322f:	add    BYTE PTR [rax],ch
   140013231:	repnz add BYTE PTR [rax],al
   140013234:	pop    rbp
   140013235:	xor    al,BYTE PTR [rax]
   140013237:	add    BYTE PTR [rdi+0x32],ah
   14001323a:	add    BYTE PTR [rax],al
   14001323c:	cmp    al,0xf2
   14001323e:	add    BYTE PTR [rax],al
   140013240:	xor    al,BYTE PTR [eax]
   140013243:	add    BYTE PTR [rdx+0x4c000032],cl
   140013249:	repnz add BYTE PTR [rax],al
   14001324c:	movabs al,ds:0x74000032cf000032
   140013255:	repnz add BYTE PTR [rax],al
   140013258:	iret   
   140013259:	xor    al,BYTE PTR [rax]
   14001325b:	add    BYTE PTR [rbp+0x33],cl
   14001325e:	add    BYTE PTR [rax],al
   140013260:	xor    dl,0x0
   140013263:	add    BYTE PTR [rax+0x33],ah
   140013266:	add    BYTE PTR [rax],al
   140013268:	stos   DWORD PTR es:[rdi],eax
   140013269:	xor    eax,DWORD PTR [rax]
   14001326b:	add    BYTE PTR [rax-0x3fffff0e],ch
   140013271:	xor    eax,DWORD PTR [rax]
   140013273:	add    BYTE PTR [rbp+0x34],al
   140013276:	add    BYTE PTR [rax],al
   140013278:	int3   
   140013279:	repnz add BYTE PTR [rax],al
   14001327c:	push   rax
   14001327d:	xor    al,0x0
   14001327f:	add    BYTE PTR [rsp+rsi*1+0x0],dh
   140013283:	add    ah,ch
   140013285:	repnz add BYTE PTR [rax],al
   140013288:	xor    BYTE PTR [rax+rax*1],0x0
   14001328c:	(bad)
   14001328f:	add    BYTE PTR [rbx+rsi*8],ch
   140013292:	add    BYTE PTR [rax],al
   140013294:	(bad)
   140013297:	add    dh,bl
   140013299:	xor    al,0x0
   14001329b:	add    BYTE PTR [rax],bh
   14001329d:	repz add BYTE PTR [rax],al
   1400132a0:	fidiv  WORD PTR [rax+rax*1]
   1400132a3:	add    ah,ch
   1400132a5:	xor    al,0x0
   1400132a7:	add    BYTE PTR [rbx+rsi*8+0x0],cl
   1400132ab:	add    BYTE PTR [rax],al
   1400132ad:	xor    eax,0x353c0000
   1400132b2:	add    BYTE PTR [rax],al
   1400132b4:	test   bl,dh
   1400132b6:	add    BYTE PTR [rax],al
   1400132b8:	cmp    al,0x35
   1400132ba:	add    BYTE PTR [rax],al
   1400132bc:	fidiv  WORD PTR [rsi]
   1400132be:	add    BYTE PTR [rax],al
   1400132c0:	nop
   1400132c1:	repz add BYTE PTR [rax],al
   1400132c4:	fidiv  WORD PTR [rsi]
   1400132c6:	add    BYTE PTR [rax],al
   1400132c8:	call   0xe4013303
   1400132cd:	repz add BYTE PTR [rax],al
   1400132d0:	adc    BYTE PTR [rdi],dh
   1400132d2:	add    BYTE PTR [rax],al
   1400132d4:	sub    dh,BYTE PTR [rdi]
   1400132d6:	add    BYTE PTR [rax],al
   1400132d8:	fdiv   st,st(3)
   1400132da:	add    BYTE PTR [rax],al
   1400132dc:	sub    dh,BYTE PTR [rdi]
   1400132de:	add    BYTE PTR [rax],al
   1400132e0:	xor    BYTE PTR [rax],bh
   1400132e2:	add    BYTE PTR [rax],al
   1400132e4:	in     al,0xf3
   1400132e6:	add    BYTE PTR [rax],al
   1400132e8:	xor    BYTE PTR [rax],bh
   1400132ea:	add    BYTE PTR [rax],al
   1400132ec:	(bad)  
   1400132ed:	cmp    BYTE PTR [rax],al
   1400132ef:	add    al,bh
   1400132f1:	repz add BYTE PTR [rax],al
   1400132f4:	(bad)  
   1400132f5:	cmp    BYTE PTR [rax],al
   1400132f7:	add    BYTE PTR [rax+rdi*1-0xbd40000],al
   1400132fe:	add    BYTE PTR [rax],al
   140013300:	test   BYTE PTR [rax],bh
   140013302:	add    BYTE PTR [rax],al
   140013304:	mov    bh,BYTE PTR [rcx]
   140013306:	add    BYTE PTR [rax],al
   140013308:	cmp    al,0xf4
   14001330a:	add    BYTE PTR [rax],al
   14001330c:	mov    bh,BYTE PTR [rcx]
   14001330e:	add    BYTE PTR [rax],al
   140013310:	xchg   ebp,eax
   140013311:	cmp    DWORD PTR [rax],eax
   140013313:	add    BYTE PTR [rax-0xc],dl
   140013316:	add    BYTE PTR [rax],al
   140013318:	mov    al,0x39
   14001331a:	add    BYTE PTR [rax],al
   14001331c:	int3   
   14001331d:	cmp    DWORD PTR [rax],eax
   14001331f:	add    BYTE PTR [rsp+rsi*8+0x39e00000],al
   140013326:	add    BYTE PTR [rax],al
   140013328:	(bad)  
   140013329:	cmp    al,BYTE PTR [rax]
   14001332b:	add    BYTE PTR [rsp+rsi*8+0x3a700000],cl
   140013332:	add    BYTE PTR [rax],al
   140013334:	lods   al,BYTE PTR ds:[rsi]
   140013335:	cmp    al,BYTE PTR [rax]
   140013337:	add    al,ch
   140013339:	hlt    
   14001333a:	add    BYTE PTR [rax],al
   14001333c:	lods   al,BYTE PTR ds:[rsi]
   14001333d:	cmp    al,BYTE PTR [rax]
   14001333f:	add    al,bl
   140013341:	cmp    eax,DWORD PTR [rax]
   140013343:	add    ah,dh
   140013345:	hlt    
   140013346:	add    BYTE PTR [rax],al
   140013348:	fdivr  DWORD PTR [rbx]
   14001334a:	add    BYTE PTR [rax],al
   14001334c:	idiv   BYTE PTR [rbx]
   14001334e:	add    BYTE PTR [rax],al
   140013350:	or     ch,dh
   140013352:	add    BYTE PTR [rax],al
   140013354:	idiv   BYTE PTR [rbx]
   140013356:	add    BYTE PTR [rax],al
   140013358:	add    edi,DWORD PTR [rax+rax*1]
   14001335b:	add    BYTE PTR [rax],bl
   14001335d:	cmc    
   14001335e:	add    BYTE PTR [rax],al
   140013360:	adc    BYTE PTR [rax+rax*1],bh
   140013363:	add    dl,cl
   140013365:	cmp    al,0x0
   140013367:	add    BYTE PTR [rax-0xb],dl
   14001336a:	add    BYTE PTR [rax],al
   14001336c:	sar    BYTE PTR [rax+rax*1],1
   14001336f:	add    dl,bh
   140013371:	cmp    al,0x0
   140013373:	add    ah,cl
   140013375:	cmc    
   140013376:	add    BYTE PTR [rax],al
   140013378:	cli    
   140013379:	cmp    al,0x0
   14001337b:	add    BYTE PTR [rdi*1-0xa200000],bh
   140013382:	add    BYTE PTR [rax],al
   140013384:	cmp    al,0x3d
   140013386:	add    BYTE PTR [rax],al
   140013388:	pop    rcx
   140013389:	cmp    eax,0xf5f40000
   14001338e:	add    BYTE PTR [rax],al
   140013390:	(bad)  
   140013391:	cmp    eax,0x3d8a0000
   140013396:	add    BYTE PTR [rax],al
   140013398:	add    al,0xf6
   14001339a:	add    BYTE PTR [rax],al
   14001339c:	mov    bh,BYTE PTR [rip+0x3dce0000]        # 0x17dcf33a2
   1400133a2:	add    BYTE PTR [rax],al
   1400133a4:	sbb    dh,dh
   1400133a6:	add    BYTE PTR [rax],al
   1400133a8:	(bad)  
   1400133a9:	cmp    eax,0x3deb0000
   1400133ae:	add    BYTE PTR [rax],al
   1400133b0:	sub    al,0xf6
   1400133b2:	add    BYTE PTR [rax],al
   1400133b4:	add    BYTE PTR [rsi],bh
   1400133b6:	add    BYTE PTR [rax],al
   1400133b8:	sub    bh,BYTE PTR [rsi]
   1400133ba:	add    BYTE PTR [rax],al
   1400133bc:	cmp    al,0xf6
   1400133be:	add    BYTE PTR [rax],al
   1400133c0:	sub    bh,BYTE PTR [rsi]
   1400133c2:	add    BYTE PTR [rax],al
   1400133c4:	outs   dx,BYTE PTR ds:[rsi]
   1400133c5:	add    BYTE PTR ds:[rax],al
   1400133c8:	push   rax
   1400133c9:	test   BYTE PTR [rax],0x0
   1400133cc:	outs   dx,BYTE PTR ds:[rsi]
   1400133cd:	add    BYTE PTR ds:[rax],al
   1400133d0:	mov    edi,DWORD PTR [rsi]
   1400133d2:	add    BYTE PTR [rax],al
   1400133d4:	test   BYTE PTR fs:[rax],0x0
   1400133d8:	movabs al,ds:0x7400003ece00003e
   1400133e1:	test   BYTE PTR [rax],0x0
   1400133e4:	(bad)  
   1400133e5:	add    BYTE PTR ds:[rax],al
   1400133e8:	(bad)  
   1400133e9:	(bad)  
   1400133ea:	add    BYTE PTR [rax],al
   1400133ec:	mov    dh,dh
   1400133ee:	add    BYTE PTR [rax],al
   1400133f0:	(bad)  
   1400133f1:	(bad)  
   1400133f2:	add    BYTE PTR [rax],al
   1400133f4:	sub    al,0x3f
   1400133f6:	add    BYTE PTR [rax],al
   1400133f8:	movabs al,ds:0x3b00003f2c0000f6
   140013401:	(bad)  
   140013402:	add    BYTE PTR [rax],al
   140013404:	mov    al,0xf6
   140013406:	add    BYTE PTR [rax],al
   140013408:	rex.W (bad) 
   14001340a:	add    BYTE PTR [rax],al
   14001340c:	jle    0x14001344d
   14001340e:	add    BYTE PTR [rax],al
   140013410:	lock call 0x17f853416
   140013416:	add    BYTE PTR [rax],al
   140013418:	retf   0x3f
   14001341b:	add    al,bh
   14001341d:	call   0x17fd13422
   140013422:	add    BYTE PTR [rax],al
   140013424:	(bad)  
   140013425:	add    BYTE PTR [rax],al
   140013428:	add    al,0xe9
   14001342a:	add    BYTE PTR [rax],al
   14001342c:	adc    al,0x40
   14001342e:	add    BYTE PTR [rax],al
   140013430:	push   rdx
   140013431:	add    BYTE PTR [rax],al
   140013434:	add    al,0xe9
   140013436:	add    BYTE PTR [rax],al
   140013438:	test   BYTE PTR [rax+0x0],al
   14001343b:	add    BYTE PTR [rbp-0x7bffffc0],ah
   140013441:	hlt    
   140013442:	add    BYTE PTR [rax],al
   140013444:	lods   al,BYTE PTR ds:[rsi]
   140013445:	add    BYTE PTR [rax],al
   140013448:	in     al,0x40
   14001344a:	add    BYTE PTR [rax],al
   14001344c:	test   ah,dh
   14001344e:	add    BYTE PTR [rax],al
   140013450:	in     al,dx
   140013451:	add    BYTE PTR [rax],al
   140013454:	sbb    eax,DWORD PTR [rcx+0x0]
   140013457:	add    al,dh
   140013459:	test   DWORD PTR [rax],0x412400
   14001345f:	add    BYTE PTR [rbp+0x41],al
   140013462:	add    BYTE PTR [rax],al
   140013464:	test   ah,dh
   140013466:	add    BYTE PTR [rax],al
   140013468:	jo     0x1400134ab
   14001346a:	add    BYTE PTR [rax],al
   14001346c:	xchg   esi,eax
   14001346d:	add    BYTE PTR [r8],al
   140013470:	test   ah,dh
   140013472:	add    BYTE PTR [rax],al
   140013474:	movabs al,ds:0xf8000041d9000041
   14001347d:	call   0x181e13482
   140013482:	add    BYTE PTR [rax],al
   140013484:	cmovb  eax,DWORD PTR [rax]
   140013487:	add    al,bh
   140013489:	call   0x18219348e
   14001348e:	add    BYTE PTR [rax],al
   140013490:	sbb    al,BYTE PTR [rbx+0x0]
   140013493:	add    BYTE PTR [rdi+rsi*8],dl
   140013496:	add    BYTE PTR [rax],al
   140013498:	and    BYTE PTR [rbx+0x0],al
   14001349b:	add    BYTE PTR [rax+0x43],bh
   14001349e:	add    BYTE PTR [rax],al
   1400134a0:	hlt    
   1400134a1:	test   BYTE PTR [rax],0x0
   1400134a4:	add    BYTE PTR [rbx+0x0],0x0
   1400134a8:	movabs al,ds:0xa80000fab8000043
   1400134b1:	rex.XB add BYTE PTR [r8],al
   1400134b4:	mov    ecx,0xf0000043
   1400134b9:	call   0x183c134be
   1400134be:	add    BYTE PTR [rax],al
   1400134c0:	jrcxz  0x140013505
   1400134c2:	add    BYTE PTR [rax],al
   1400134c4:	mov    eax,0xec0000fa
   1400134c9:	rex.XB add BYTE PTR [r8],al
   1400134cc:	cmove  eax,DWORD PTR [rax]
   1400134cf:	add    BYTE PTR [rax+0x180000fa],bh
   1400134d5:	add    BYTE PTR [rax],r8b
   1400134d8:	sub    DWORD PTR [rax+rax*1+0x0],eax
   1400134dc:	lock call 0x1843134e2
   1400134e2:	add    BYTE PTR [rax],al
   1400134e4:	add    BYTE PTR ds:[r8],r8b
   1400134e8:	add    al,0xfa
   1400134ea:	add    BYTE PTR [rax],al
   1400134ec:	rex.R
   1400134ed:	add    BYTE PTR [r8],r8b
   1400134f0:	rex
   1400134f1:	rex.RX add BYTE PTR [rax],r8b
   1400134f4:	hlt    
   1400134f5:	test   BYTE PTR [rax],0x0
   1400134f8:	push   rax
   1400134f9:	rex.RX add BYTE PTR [rax],r8b
   1400134fc:	pop    QWORD PTR [rsi+0x0]
   1400134ff:	add    al,bh
   140013501:	call   0x186e13506
   140013506:	add    BYTE PTR [rax],al
   140013508:	rex.WX
   140013509:	rex.RXB add BYTE PTR [r8],r8b
   14001350c:	clc    
   14001350d:	test   DWORD PTR [rax],0x475000
   140013513:	add    ah,ah
   140013515:	rex.RXB add BYTE PTR [r8],r8b
   140013518:	clc    
   140013519:	call   0x187f1351e
   14001351e:	add    BYTE PTR [rax],al
   140013520:	push   rbx
   140013521:	rex.W add BYTE PTR [rax],al
   140013524:	or     al,0xf8
   140013526:	add    BYTE PTR [rax],al
   140013528:	(bad)  
   140013529:	rex.W add BYTE PTR [rax],al
   14001352c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001352d:	rex.W add BYTE PTR [rax],al
   140013530:	cmp    cl,0x0
   140013533:	add    BYTE PTR [rax+0x13000048],dh
   140013539:	rex.WB add BYTE PTR [r8],al
   14001353c:	or     al,0xf8
   14001353e:	add    BYTE PTR [rax],al
   140013540:	push   rax
   140013541:	rex.WB add BYTE PTR [r8],al
   140013544:	or     DWORD PTR [rcx+0x0],0xf48400
   14001354b:	add    al,dh
   14001354d:	rex.WB add BYTE PTR [r8],al
   140013550:	mov    edi,0xf000004a
   140013555:	call   0x18ad1355a
   14001355a:	add    BYTE PTR [rax],al
   14001355c:	sbb    DWORD PTR [rbx+0x0],ecx
   14001355f:	add    BYTE PTR [rax],bl
   140013561:	clc    
   140013562:	add    BYTE PTR [rax],al
   140013564:	and    BYTE PTR [rbx+0x0],cl
   140013567:	add    BYTE PTR [rcx+0x2000004d],dl
   14001356d:	clc    
   14001356e:	add    BYTE PTR [rax],al
   140013570:	movabs al,ds:0xf000004db200004d
   140013579:	call   0x18dd1357e
   14001357e:	add    BYTE PTR [rax],al
   140013580:	out    dx,al
   140013581:	rex.WRB add BYTE PTR [r8],r8b
   140013584:	(bad)  
   140013585:	clc    
   140013586:	add    BYTE PTR [rax],al
   140013588:	hlt    
   140013589:	rex.WRB add BYTE PTR [r8],r8b
   14001358c:	xchg   edx,eax
   14001358d:	rex.WRX add BYTE PTR [rax],r8b
   140013590:	fs clc 
   140013592:	add    BYTE PTR [rax],al
   140013594:	cwde   
   140013595:	rex.WRX add BYTE PTR [rax],r8b
   140013598:	scas   eax,DWORD PTR es:[rdi]
   140013599:	rex.WRX add BYTE PTR [rax],r8b
   14001359c:	lock call 0x18ed935a2
   1400135a2:	add    BYTE PTR [rax],al
   1400135a4:	or     al,0x4f
   1400135a6:	add    BYTE PTR [rax],al
   1400135a8:	test   ah,dh
   1400135aa:	add    BYTE PTR [rax],al
   1400135ac:	and    BYTE PTR [rdi+0x0],cl
   1400135af:	add    BYTE PTR [rcx-0x77ffffb0],dl
   1400135b5:	clc    
   1400135b6:	add    BYTE PTR [rax],al
   1400135b8:	movabs al,ds:0xf8000050d0000050
   1400135c1:	call   0x190e535c6
   1400135c6:	add    BYTE PTR [rax],al
   1400135c8:	add    edx,DWORD PTR [rcx+0x0]
   1400135cb:	add    BYTE PTR [rax-0x7fffff08],dl
   1400135d1:	push   rcx
   1400135d2:	add    BYTE PTR [rax],al
   1400135d4:	mov    ecx,0xf0000051
   1400135d9:	call   0x191c135de
   1400135de:	add    BYTE PTR [rax],al
   1400135e0:	fcom   DWORD PTR [rcx+0x0]
   1400135e3:	add    al,dh
   1400135e5:	call   0x191ed35ea
   1400135ea:	add    BYTE PTR [rax],al
   1400135ec:	rex push rdx
   1400135ee:	add    BYTE PTR [rax],al
   1400135f0:	sbb    cl,bh
   1400135f2:	add    BYTE PTR [rax],al
   1400135f4:	rex.W push rdx
   1400135f6:	add    BYTE PTR [rax],al
   1400135f8:	lea    edx,[rdx+0x0]
   1400135fb:	add    BYTE PTR [rsp+rsi*8+0x53000000],al
   140013602:	add    BYTE PTR [rax],al
   140013604:	rex.WRB push r11
   140013606:	add    BYTE PTR [rax],al
   140013608:	cmp    cl,bh
   14001360a:	add    BYTE PTR [rax],al
   14001360c:	xchg   esp,eax
   14001360d:	push   rbx
   14001360e:	add    BYTE PTR [rax],al
   140013610:	fs push rsp
   140013612:	add    BYTE PTR [rax],al
   140013614:	pop    rsp
   140013615:	stc    
   140013616:	add    BYTE PTR [rax],al
   140013618:	test   al,0x54
   14001361a:	add    BYTE PTR [rax],al
   14001361c:	(bad)
   14001361f:	add    al,dh
   140013621:	call   0x194cd3626
   140013626:	add    BYTE PTR [rax],al
   140013628:	(bad)  
   140013629:	push   rbp
   14001362a:	add    BYTE PTR [rax],al
   14001362c:	test   ah,dh
   14001362e:	add    BYTE PTR [rax],al
   140013630:	cmp    BYTE PTR [rbp+0x0],dl
   140013633:	add    bh,al
   140013635:	push   rbp
   140013636:	add    BYTE PTR [rax],al
   140013638:	in     al,dx
   140013639:	stc    
   14001363a:	add    BYTE PTR [rax],al
   14001363c:	lock push rbp
   14001363e:	add    BYTE PTR [rax],al
   140013640:	repnz push rbp
   140013642:	add    BYTE PTR [rax],al
   140013644:	push   0x100000f9
   140013649:	push   rsi
   14001364a:	add    BYTE PTR [rax],al
   14001364c:	pop    rbp
   14001364d:	push   rsi
   14001364e:	add    BYTE PTR [rax],al
   140013650:	cmp    dh,bh
   140013652:	add    BYTE PTR [rax],al
   140013654:	mov    WORD PTR [rax+0x0],ds
   140013657:	add    BYTE PTR [rsi+0x1c000058],ch
   14001365d:	jmp    0x14001365f
   14001365f:	add    BYTE PTR [rax+0x59],al
   140013662:	add    BYTE PTR [rax],al
   140013664:	jne    0x1400136bf
   140013666:	add    BYTE PTR [rax],al
   140013668:	in     al,dx
   140013669:	in     eax,dx
   14001366a:	add    BYTE PTR [rax],al
   14001366c:	sbb    BYTE PTR [rcx+0x0],0x0
   140013670:	movabs eax,ds:0xb00000eea8000059
   140013679:	pop    rcx
   14001367a:	add    BYTE PTR [rax],al
   14001367c:	(bad)  
   14001367d:	pop    rcx
   14001367e:	add    BYTE PTR [rax],al
   140013680:	sub    bh,ch
   140013682:	add    BYTE PTR [rax],al
   140013684:	sbb    bl,BYTE PTR [rdx+0x0]
   140013687:	add    BYTE PTR [rsi+0x5a],bl
   14001368a:	add    BYTE PTR [rax],al
   14001368c:	loopne 0x140013685
   14001368e:	add    BYTE PTR [rax],al
   140013690:	pop    rsi
   140013691:	pop    rdx
   140013692:	add    BYTE PTR [rax],al
   140013694:	sbb    DWORD PTR [rdx+0x0],0x0
   140013698:	loopne 0x140013691
   14001369a:	add    BYTE PTR [rax],al
   14001369c:	mov    DWORD PTR [rdx+0x0],ebx
   14001369f:	add    BYTE PTR [rdi+0x5400005a],ah
   1400136a5:	clc    
   1400136a6:	add    BYTE PTR [rax],al
   1400136a8:	lods   eax,DWORD PTR ds:[rsi]
   1400136a9:	pop    rdx
   1400136aa:	add    BYTE PTR [rax],al
   1400136ac:	enter  0x5a,0x0
   1400136b0:	push   rsp
   1400136b1:	clc    
   1400136b2:	add    BYTE PTR [rax],al
   1400136b4:	(bad)  
   1400136b5:	pop    rdx
   1400136b6:	add    BYTE PTR [rax],al
   1400136b8:	out    dx,al
   1400136b9:	pop    rdx
   1400136ba:	add    BYTE PTR [rax],al
   1400136bc:	or     cl,bh
   1400136be:	add    BYTE PTR [rax],al
   1400136c0:	add    BYTE PTR [rbx+0x0],bl
   1400136c3:	add    BYTE PTR [rax],ah
   1400136c5:	pop    rbx
   1400136c6:	add    BYTE PTR [rax],al
   1400136c8:	push   rsp
   1400136c9:	clc    
   1400136ca:	add    BYTE PTR [rax],al
   1400136cc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400136cd:	pop    rbx
   1400136ce:	add    BYTE PTR [rax],al
   1400136d0:	adc    eax,0x2800005c
   1400136d5:	jmp    0x19c1736da
   1400136da:	add    BYTE PTR [rax],al
   1400136dc:	xor    esp,DWORD PTR [rax+0x0]
   1400136df:	add    BYTE PTR [rcx+rbp*8+0x0],ah
   1400136e3:	add    BYTE PTR [rax+riz*2],dh
   1400136e6:	add    BYTE PTR [rax],al
   1400136e8:	fs (bad) 
   1400136ea:	add    BYTE PTR [rax],al
   1400136ec:	pop    rax
   1400136ed:	jmp    0x1400136ef
   1400136ef:	add    BYTE PTR [rax+riz*2+0x0],ah
   1400136f3:	add    ch,dl
   1400136f5:	(bad)  
   1400136f6:	add    BYTE PTR [rax],al
   1400136f8:	push   0xffffffffd60000eb
   1400136fd:	(bad)  
   1400136fe:	add    BYTE PTR [rax],al
   140013700:	cmc    
   140013701:	(bad)  
   140013702:	add    BYTE PTR [rax],al
   140013704:	fsub   st(3),st
   140013706:	add    BYTE PTR [rax],al
   140013708:	cmc    
   140013709:	(bad)  
   14001370a:	add    BYTE PTR [rax],al
   14001370c:	sub    esp,DWORD PTR [rcx+0x0]
   14001370f:	add    ah,bh
   140013711:	jmp    0x140013713
   140013713:	add    BYTE PTR [rcx+riz*2],ch
   140013716:	add    BYTE PTR [rax],al
   140013718:	or     DWORD PTR [rdx+0x0],esp
   14001371b:	add    BYTE PTR [rsp+rbp*8],dh
   14001371e:	add    BYTE PTR [rax],al
   140013720:	or     ah,BYTE PTR [rdx+0x0]
   140013723:	add    BYTE PTR [rdi],cl
   140013725:	(bad)  
   140013726:	add    BYTE PTR [rax],al
   140013728:	(bad)  
   140013729:	in     al,dx
   14001372a:	add    BYTE PTR [rax],al
   14001372c:	punpckldq mm0,DWORD PTR [rax]
   14001372f:	add    BYTE PTR [rdx+0x62],ch
   140013732:	add    BYTE PTR [rax],al
   140013734:	fsubr  st,st(4)
   140013736:	add    BYTE PTR [rax],al
   140013738:	push   0x62
   14001373a:	add    BYTE PTR [rax],al
   14001373c:	lods   al,BYTE PTR ds:[rsi]
   14001373d:	(bad)  
   14001373e:	add    BYTE PTR [rax],al
   140013740:	cld    
   140013741:	in     al,dx
   140013742:	add    BYTE PTR [rax],al
   140013744:	lods   al,BYTE PTR ds:[rsi]
   140013745:	(bad)  
   140013746:	add    BYTE PTR [rax],al
   140013748:	std    
   140013749:	(bad)  
   14001374a:	add    BYTE PTR [rax],al
   14001374c:	sbb    ch,ch
   14001374e:	add    BYTE PTR [rax],al
   140013750:	(bad)  
   140013751:	(bad)  
   140013752:	add    BYTE PTR [rax],al
   140013754:	sub    BYTE PTR [rbx+0x0],ah
   140013757:	add    BYTE PTR [rbp*8+0x63280000],bh
   14001375e:	add    BYTE PTR [rax],al
   140013760:	jge    0x1400137c5
   140013762:	add    BYTE PTR [rax],al
   140013764:	ins    BYTE PTR es:[rdi],dx
   140013765:	in     eax,dx
   140013766:	add    BYTE PTR [rax],al
   140013768:	jle    0x1400137cd
   14001376a:	add    BYTE PTR [rax],al
   14001376c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001376d:	movsxd eax,DWORD PTR [rax]
   14001376f:	add    BYTE PTR [rsi+rbp*8],al
   140013772:	add    BYTE PTR [rax],al
   140013774:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013775:	movsxd eax,DWORD PTR [rax]
   140013777:	add    dl,cl
   140013779:	movsxd eax,DWORD PTR [rax]
   14001377b:	add    BYTE PTR [rsi+rbp*8],bl
   14001377e:	add    BYTE PTR [rax],al
   140013780:	retf   0x63
   140013783:	add    cl,ah
   140013785:	movsxd eax,DWORD PTR [rax]
   140013787:	add    BYTE PTR [rdi+rbp*8+0x0],dl
   14001378b:	add    dl,ah
   14001378d:	movsxd eax,DWORD PTR [rax]
   14001378f:	add    cl,bh
   140013791:	movsxd eax,DWORD PTR [rax]
   140013793:	add    BYTE PTR [rax-0x5ffff11],al
   140013799:	movsxd eax,DWORD PTR [rax]
   14001379b:	add    BYTE PTR [rcx],dl
   14001379d:	add    BYTE PTR fs:[rax],al
   1400137a0:	lods   al,BYTE PTR ds:[rsi]
   1400137a1:	out    dx,eax
   1400137a2:	add    BYTE PTR [rax],al
   1400137a4:	adc    ah,BYTE PTR [rax+rax*1+0x0]
   1400137a8:	es add BYTE PTR fs:[rax],al
   1400137ac:	enter  0xef,0x0
   1400137b0:	es add BYTE PTR fs:[rax],al
   1400137b4:	push   0x64
   1400137b6:	add    BYTE PTR [rax],al
   1400137b8:	call   0x1aa0138ac
   1400137bd:	add    BYTE PTR fs:[rax],al
   1400137c0:	cld    
   1400137c1:	add    BYTE PTR fs:[rax],al
   1400137c4:	adc    al,0xf0
   1400137c6:	add    BYTE PTR [rax],al
   1400137c8:	cld    
   1400137c9:	add    BYTE PTR fs:[rax],al
   1400137cc:	jle    0x140013834
   1400137ce:	add    BYTE PTR [rax],al
   1400137d0:	lock add BYTE PTR fs:[rax],al
   1400137d4:	jle    0x14001383c
   1400137d6:	add    BYTE PTR [rax],al
   1400137d8:	stos   DWORD PTR es:[rdi],eax
   1400137d9:	data16 add BYTE PTR [rax],al
   1400137dc:	js     0x1400137ce
   1400137de:	add    BYTE PTR [rax],al
   1400137e0:	lods   al,BYTE PTR ds:[rsi]
   1400137e1:	data16 add BYTE PTR [rax],al
   1400137e4:	cs push 0xfffffffff0c80000
   1400137ea:	add    BYTE PTR [rax],al
   1400137ec:	cs push 0x685b0000
   1400137f2:	add    BYTE PTR [rax],al
   1400137f4:	fdivr  st(0),st
   1400137f6:	add    BYTE PTR [rax],al
   1400137f8:	pop    rsp
   1400137f9:	push   0x69de0000
   1400137fe:	add    BYTE PTR [rax],al
   140013800:	sub    al,0xf1
   140013802:	add    BYTE PTR [rax],al
   140013804:	fisubr WORD PTR [rcx+0x0]
   140013807:	add    BYTE PTR [rbx],cl
   140013809:	push   0x0
   14001380b:	add    BYTE PTR [rax-0xf],al
   14001380e:	add    BYTE PTR [rax],al
   140013810:	or     al,0x6a
   140013812:	add    BYTE PTR [rax],al
   140013814:	sbb    al,0x6a
   140013816:	add    BYTE PTR [rax],al
   140013818:	cwde   
   140013819:	icebp  
   14001381a:	add    BYTE PTR [rax],al
   14001381c:	sbb    al,0x6a
   14001381e:	add    BYTE PTR [rax],al
   140013820:	cs push 0x0
   140013823:	add    BYTE PTR [rax+0x2e0000f1],ch
   140013829:	push   0x0
   14001382b:	add    BYTE PTR [rdx-0x17ffff96],ah
   140013831:	icebp  
   140013832:	add    BYTE PTR [rax],al
   140013834:	movabs ds:0x5c00006ab700006a,al
   14001383d:	repnz add BYTE PTR [rax],al
   140013840:	mov    eax,0x3300006a
   140013845:	imul   eax,DWORD PTR [rax],0x0
   140013848:	xchg   esp,eax
   140013849:	repnz add BYTE PTR [rax],al
   14001384c:	xor    al,0x6b
   14001384e:	add    BYTE PTR [rax],al
   140013850:	nop
   140013851:	imul   eax,DWORD PTR [rax],0x0
   140013854:	mov    esp,0x900000f2
   140013859:	imul   eax,DWORD PTR [rax],0x0
   14001385c:	fld    TBYTE PTR [rbx+0x0]
   14001385f:	add    ah,bl
   140013861:	repnz add BYTE PTR [rax],al
   140013864:	fsubr  QWORD PTR [rbx+0x0]
   140013867:	add    ch,ah
   140013869:	imul   eax,DWORD PTR [rax],0x0
   14001386c:	hlt    
   14001386d:	repnz add BYTE PTR [rax],al
   140013870:	in     eax,0x6b
   140013872:	add    BYTE PTR [rax],al
   140013874:	icebp  
   140013875:	imul   eax,DWORD PTR [rax],0x0
   140013878:	add    al,0xf3
   14001387a:	add    BYTE PTR [rax],al
   14001387c:	icebp  
   14001387d:	imul   eax,DWORD PTR [rax],0x0
   140013880:	sbb    ch,BYTE PTR [rax+rax*1+0x0]
   140013884:	sbb    bl,dh
   140013886:	add    BYTE PTR [rax],al
   140013888:	sbb    ch,BYTE PTR [rax+rax*1+0x0]
   14001388c:	sbb    eax,0x5c00006c
   140013891:	repz add BYTE PTR [rax],al
   140013894:	sbb    eax,0x3e00006c
   140013899:	ins    BYTE PTR es:[rdi],dx
   14001389a:	add    BYTE PTR [rax],al
   14001389c:	jo     0x140013891
   14001389e:	add    BYTE PTR [rax],al
   1400138a0:	ds ins BYTE PTR es:[rdi],dx
   1400138a2:	add    BYTE PTR [rax],al
   1400138a4:	pop    rcx
   1400138a5:	ins    BYTE PTR es:[rdi],dx
   1400138a6:	add    BYTE PTR [rax],al
   1400138a8:	mov    ah,0xf3
   1400138aa:	add    BYTE PTR [rax],al
   1400138ac:	pop    rcx
   1400138ad:	ins    BYTE PTR es:[rdi],dx
   1400138ae:	add    BYTE PTR [rax],al
   1400138b0:	add    al,0x6d
   1400138b2:	add    BYTE PTR [rax],al
   1400138b4:	(bad)  
   1400138b5:	repz add BYTE PTR [rax],al
   1400138b8:	add    al,0x6d
   1400138ba:	add    BYTE PTR [rax],al
   1400138bc:	sub    DWORD PTR [rbp+0x0],ebp
   1400138bf:	add    BYTE PTR [rax],cl
   1400138c1:	hlt    
   1400138c2:	add    BYTE PTR [rax],al
   1400138c4:	sub    DWORD PTR [rbp+0x0],ebp
   1400138c7:	add    ah,ah
   1400138c9:	ins    DWORD PTR es:[rdi],dx
   1400138ca:	add    BYTE PTR [rax],al
   1400138cc:	sbb    ah,dh
   1400138ce:	add    BYTE PTR [rax],al
   1400138d0:	in     al,0x6d
   1400138d2:	add    BYTE PTR [rax],al
   1400138d4:	or     DWORD PTR [rsi+0x0],ebp
   1400138d7:	add    BYTE PTR [rax-0xc],ah
   1400138da:	add    BYTE PTR [rax],al
   1400138dc:	or     DWORD PTR [rsi+0x0],ebp
   1400138df:	add    BYTE PTR [rdx+0x6e],ah
   1400138e2:	add    BYTE PTR [rax],al
   1400138e4:	jo     0x1400138da
   1400138e6:	add    BYTE PTR [rax],al
   1400138e8:	(bad)  
   1400138e9:	outs   dx,BYTE PTR ds:[rsi]
   1400138ea:	add    BYTE PTR [rax],al
   1400138ec:	xor    al,0x6f
   1400138ee:	add    BYTE PTR [rax],al
   1400138f0:	mov    al,0xf4
   1400138f2:	add    BYTE PTR [rax],al
   1400138f4:	xor    al,0x6f
   1400138f6:	add    BYTE PTR [rax],al
   1400138f8:	push   rax
   1400138f9:	outs   dx,DWORD PTR ds:[rsi]
   1400138fa:	add    BYTE PTR [rax],al
   1400138fc:	sub    al,0xf5
   1400138fe:	add    BYTE PTR [rax],al
   140013900:	push   rax
   140013901:	outs   dx,DWORD PTR ds:[rsi]
   140013902:	add    BYTE PTR [rax],al
   140013904:	mov    edi,0x3c00006f
   140013909:	cmc    
   14001390a:	add    BYTE PTR [rax],al
   14001390c:	shr    BYTE PTR [rdi+0x0],0x0
   140013910:	cwde   
   140013911:	jo     0x140013913
   140013913:	add    BYTE PTR [rbp+rsi*8+0x0],ah
   140013917:	add    BYTE PTR [rax-0x2effff90],bl
   14001391d:	jo     0x14001391f
   14001391f:	add    al,cl
   140013921:	test   BYTE PTR [rax],0x0
   140013924:	fdiv   QWORD PTR [rax+0x0]
   140013927:	add    BYTE PTR [rcx-0x1fffff8f],cl
   14001392d:	test   BYTE PTR [rax],0x0
   140013930:	nop
   140013931:	jno    0x140013933
   140013933:	add    dl,ch
   140013935:	jno    0x140013937
   140013937:	add    BYTE PTR [rsp+rsi*8+0x71f00000],al
   14001393e:	add    BYTE PTR [rax],al
   140013940:	or     BYTE PTR [rdx+0x0],dh
   140013943:	add    al,dh
   140013945:	call   0x1b211394a
   14001394a:	add    BYTE PTR [rax],al
   14001394c:	rex.XB jb 0x14001394f
   14001394f:	add    BYTE PTR [rsp+rsi*8+0x724c0000],al
   140013956:	add    BYTE PTR [rax],al
   140013958:	(bad)  
   140013959:	jb     0x14001395b
   14001395b:	add    ah,dh
   14001395d:	test   BYTE PTR [rax],0x0
   140013960:	lock jb 0x140013963
   140013963:	add    BYTE PTR [rax],cl
   140013965:	jae    0x140013967
   140013967:	add    al,dh
   140013969:	call   0x1b311396e
   14001396e:	add    BYTE PTR [rax],al
   140013970:	xor    BYTE PTR [rbx+0x0],0x0
   140013974:	test   ah,dh
   140013976:	add    BYTE PTR [rax],al
   140013978:	xchg   esp,eax
   140013979:	jae    0x14001397b
   14001397b:	add    al,dh
   14001397d:	jae    0x14001397f
   14001397f:	add    BYTE PTR [rdi+rsi*8],al
   140013982:	add    BYTE PTR [rax],al
   140013984:	clc    
   140013985:	jae    0x140013987
   140013987:	add    BYTE PTR [rdi],ch
   140013989:	je     0x14001398b
   14001398b:	add    al,bh
   14001398d:	call   0x1b4793992
   140013992:	add    BYTE PTR [rax],al
   140013994:	fwait
   140013995:	je     0x140013997
   140013997:	add    al,dh
   140013999:	call   0x1b4a5399e
   14001399e:	add    BYTE PTR [rax],al
   1400139a0:	sbb    dh,BYTE PTR [rbp+0x0]
   1400139a3:	add    al,dh
   1400139a5:	call   0x1b52139aa
   1400139aa:	add    BYTE PTR [rax],al
   1400139ac:	xor    BYTE PTR [rbp+0x0],0x0
   1400139b0:	clc    
   1400139b1:	call   0x1b58939b6
   1400139b6:	add    BYTE PTR [rax],al
   1400139b8:	lahf   
   1400139b9:	jne    0x1400139bb
   1400139bb:	add    al,dh
   1400139bd:	call   0x1b5a939c2
   1400139c2:	add    BYTE PTR [rax],al
   1400139c4:	xor    DWORD PTR [rsi+0x0],esi
   1400139c7:	add    BYTE PTR [rcx+rdi*8+0x0],ch
   1400139cb:	add    BYTE PTR [rax],bh
   1400139cd:	jbe    0x1400139cf
   1400139cf:	add    bh,dl
   1400139d1:	jbe    0x1400139d3
   1400139d3:	add    BYTE PTR [rbx+rdi*8+0x0],dl
   1400139d7:	add    al,ah
   1400139d9:	jbe    0x1400139db
   1400139db:	add    BYTE PTR [rcx+0x77],ah
   1400139de:	add    BYTE PTR [rax],al
   1400139e0:	test   ah,dh
   1400139e2:	add    BYTE PTR [rax],al
   1400139e4:	jl     0x140013a5d
   1400139e6:	add    BYTE PTR [rax],al
   1400139e8:	scas   al,BYTE PTR es:[rdi]
   1400139e9:	ja     0x1400139eb
   1400139eb:	add    BYTE PTR [rsp+rsi*8+0x77c00000],al
   1400139f2:	add    BYTE PTR [rax],al
   1400139f4:	lock ja 0x1400139f7
   1400139f7:	add    al,bh
   1400139f9:	call   0x1b80139fe
   1400139fe:	add    BYTE PTR [rax],al
   140013a00:	rex.B js 0x140013a03
   140013a03:	add    BYTE PTR [rsp+rsi*8+0x78480000],al
   140013a0a:	add    BYTE PTR [rax],al
   140013a0c:	cmp    BYTE PTR [rax+0x0],0x0
   140013a10:	mov    eax,0x900000fa
   140013a15:	js     0x140013a17
   140013a17:	add    BYTE PTR [rbp-0x7ffff88],bh
   140013a1d:	call   0x1b8c53a22
   140013a22:	add    BYTE PTR [rax],al
   140013a24:	jg     0x140013a9f
   140013a26:	add    BYTE PTR [rax],al
   140013a28:	in     al,dx
   140013a29:	stc    
   140013a2a:	add    BYTE PTR [rax],al
   140013a2c:	nop
   140013a2d:	jns    0x140013a2f
   140013a2f:	add    BYTE PTR [rax+0x1800007a],bl
   140013a35:	cli    
   140013a36:	add    BYTE PTR [rax],al
   140013a38:	movabs al,ds:0x3000007cce00007a
   140013a41:	cli    
   140013a42:	add    BYTE PTR [rax],al
   140013a44:	(bad)  
   140013a45:	jl     0x140013a47
   140013a47:	add    BYTE PTR [rdi+0x400007d],bh
   140013a4d:	cli    
   140013a4e:	add    BYTE PTR [rax],al
   140013a50:	enter  0x7d,0x0
   140013a54:	push   rdi
   140013a55:	jle    0x140013a57
   140013a57:	add    BYTE PTR [rax+0x600000f9],al
   140013a5d:	jle    0x140013a5f
   140013a5f:	add    dl,dh
   140013a61:	add    BYTE PTR [rax],0x0
   140013a64:	(bad)  
   140013a65:	stc    
   140013a66:	add    BYTE PTR [rax],al
   140013a68:	clc    
   140013a69:	add    BYTE PTR [rax],0x0
   140013a6c:	jbe    0x1400139ef
   140013a6e:	add    BYTE PTR [rax],al
   140013a70:	push   rax
   140013a71:	cli    
   140013a72:	add    BYTE PTR [rax],al
   140013a74:	add    BYTE PTR [rcx-0x7e290000],0x0
   140013a7b:	add    ah,dh
   140013a7d:	test   BYTE PTR [rax],0x0
   140013a80:	loopne 0x140013a03
   140013a82:	add    BYTE PTR [rax],al
   140013a84:	or     eax,0xf0000082
   140013a89:	call   0xc2153a8e
   140013a8e:	add    BYTE PTR [rax],al
   140013a90:	cmp    al,BYTE PTR [rbx-0x6400000]
   140013a96:	add    BYTE PTR [rax],al
   140013a98:	rex add DWORD PTR [rax],0x0
   140013a9c:	jle    0x140013a21
   140013a9e:	add    BYTE PTR [rax],al
   140013aa0:	mov    eax,0x840000f9
   140013aa5:	add    DWORD PTR [rax],0x0
   140013aa8:	or     DWORD PTR [rbp-0x6600000],eax
   140013aae:	add    BYTE PTR [rax],al
   140013ab0:	adc    BYTE PTR [rbp-0x79400000],al
   140013ab6:	add    BYTE PTR [rax],al
   140013ab8:	mov    cl,bh
   140013aba:	add    BYTE PTR [rax],al
   140013abc:	and    BYTE PTR [rdi-0x78590000],al
   140013ac2:	add    BYTE PTR [rax],al
   140013ac4:	hlt    
   140013ac5:	test   BYTE PTR [rax],0x0
   140013ac8:	mov    al,0x87
   140013aca:	add    BYTE PTR [rax],al
   140013acc:	(bad)  [rcx-0x6140000]
   140013ad2:	add    BYTE PTR [rax],al
   140013ad4:	loopne 0x140013a5f
   140013ad6:	add    BYTE PTR [rax],al
   140013ad8:	adc    DWORD PTR [rdx-0x5480000],ecx
   140013ade:	add    BYTE PTR [rax],al
   140013ae0:	sbb    BYTE PTR [rdx-0x75ac0000],cl
   140013ae6:	add    BYTE PTR [rax],al
   140013ae8:	hlt    
   140013ae9:	test   BYTE PTR [rax],0x0
   140013aec:	pop    rsp
   140013aed:	mov    al,BYTE PTR [rax]
   140013aef:	add    BYTE PTR [rcx-0x7bffff76],dl
   140013af5:	hlt    
   140013af6:	add    BYTE PTR [rax],al
   140013af8:	or     BYTE PTR [rbx-0x748c0000],cl
   140013afe:	add    BYTE PTR [rax],al
   140013b00:	hlt    
   140013b01:	test   BYTE PTR [rax],0x0
   140013b04:	mov    BYTE PTR [rbx-0x74420000],cl
   140013b0a:	add    BYTE PTR [rax],al
   140013b0c:	clc    
   140013b0d:	call   0xcbc53b12
   140013b12:	add    BYTE PTR [rax],al
   140013b14:	clc    
   140013b15:	mov    eax,DWORD PTR [rax]
   140013b17:	add    BYTE PTR [rsp+rsi*8-0x74000000],al
   140013b1e:	add    BYTE PTR [rax],al
   140013b20:	imul   ecx,DWORD PTR [rax+rax*1+0xe8f800],0x8c7000
   140013b2b:	add    ah,dh
   140013b2d:	mov    WORD PTR [rax],es
   140013b2f:	add    al,bh
   140013b31:	call   0xcd013b36
   140013b36:	add    BYTE PTR [rax],al
   140013b38:	lea    eax,cs:[rax]
   140013b3b:	add    BYTE PTR [rsp+rsi*8-0x72c00000],al
   140013b42:	add    BYTE PTR [rax],al
   140013b44:	jo     0x140013ad3
   140013b46:	add    BYTE PTR [rax],al
   140013b48:	clc    
   140013b49:	call   0xcd793b4e
   140013b4e:	add    BYTE PTR [rax],al
   140013b50:	fimul  WORD PTR [rbp-0x5180000]
   140013b56:	add    BYTE PTR [rax],al
   140013b58:	add    BYTE PTR [rsi-0x71b80000],cl
   140013b5e:	add    BYTE PTR [rax],al
   140013b60:	hlt    
   140013b61:	test   BYTE PTR [rax],0x0
   140013b64:	push   rax
   140013b65:	mov    es,WORD PTR [rax]
   140013b67:	add    bl,ch
   140013b69:	mov    es,WORD PTR [rax]
   140013b6b:	add    BYTE PTR [rdx+rdi*8-0x710c0000],dl
   140013b72:	add    BYTE PTR [rax],al
   140013b74:	pop    rcx
   140013b75:	pop    QWORD PTR [rax]
   140013b77:	add    BYTE PTR [rdx+rdi*8],al
   140013b7a:	add    BYTE PTR [rax],al
   140013b7c:	(bad)  
   140013b7d:	pop    QWORD PTR [rax]
   140013b7f:	add    BYTE PTR [rdx+0x6c000090],dl
   140013b85:	sti    
   140013b86:	add    BYTE PTR [rax],al
   140013b88:	mov    al,0x90
   140013b8a:	add    BYTE PTR [rax],al
   140013b8c:	cli    
   140013b8d:	nop
   140013b8e:	add    BYTE PTR [rax],al
   140013b90:	hlt    
   140013b91:	test   BYTE PTR [rax],0x0
   140013b94:	add    BYTE PTR [rcx-0x6ed50000],dl
   140013b9a:	add    BYTE PTR [rax],al
   140013b9c:	test   ah,dh
   140013b9e:	add    BYTE PTR [rax],al
   140013ba0:	xor    al,0x91
   140013ba2:	add    BYTE PTR [rax],al
   140013ba4:	(bad)  
   140013ba5:	xchg   ecx,eax
   140013ba6:	add    BYTE PTR [rax],al
   140013ba8:	sar    dl,0x0
   140013bab:	add    al,dh
   140013bad:	xchg   ecx,eax
   140013bae:	add    BYTE PTR [rax],al
   140013bb0:	or     BYTE PTR [rdx-0x5480000],dl
   140013bb6:	add    BYTE PTR [rax],al
   140013bb8:	adc    BYTE PTR [rdx-0x6dc20000],dl
   140013bbe:	add    BYTE PTR [rax],al
   140013bc0:	mov    eax,0x440000fa
   140013bc5:	xchg   edx,eax
   140013bc6:	add    BYTE PTR [rax],al
   140013bc8:	nop
   140013bc9:	xchg   edx,eax
   140013bca:	add    BYTE PTR [rax],al
   140013bcc:	fdivr  st,st(2)
   140013bce:	add    BYTE PTR [rax],al
   140013bd0:	movabs al,ds:0xac0000939e000092
   140013bd9:	sti    
   140013bda:	add    BYTE PTR [rax],al
   140013bdc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013bdd:	xchg   ebx,eax
   140013bde:	add    BYTE PTR [rax],al
   140013be0:	adc    edx,DWORD PTR [rax+rax*1+0xf9ec00]
   140013be7:	add    BYTE PTR [rax],ah
   140013be9:	xchg   esp,eax
   140013bea:	add    BYTE PTR [rax],al
   140013bec:	mov    edx,DWORD PTR [rax+rax*1+0xf9ec00]
   140013bf3:	add    BYTE PTR [rsp+rdx*4-0x6b000000],dl
   140013bfa:	add    BYTE PTR [rax],al
   140013bfc:	pop    rsp
   140013bfd:	cli    
   140013bfe:	add    BYTE PTR [rax],al
   140013c00:	add    BYTE PTR [rbp-0x6ada0000],dl
   140013c06:	add    BYTE PTR [rax],al
   140013c08:	mov    edx,?
   140013c0a:	add    BYTE PTR [rax],al
   140013c0c:	sub    al,0x95
   140013c0e:	add    BYTE PTR [rax],al
   140013c10:	fcom   QWORD PTR [rbp-0x4ac0000]
   140013c16:	add    BYTE PTR [rax],al
   140013c18:	in     al,0x95
   140013c1a:	add    BYTE PTR [rax],al
   140013c1c:	ins    BYTE PTR es:[rdi],dx
   140013c1d:	xchg   esi,eax
   140013c1e:	add    BYTE PTR [rax],al
   140013c20:	lods   al,BYTE PTR ds:[rsi]
   140013c21:	cli    
   140013c22:	add    BYTE PTR [rax],al
   140013c24:	adc    BYTE PTR [rsi-0x69220000],0x0
   140013c2b:	add    BYTE PTR [rbx+rdi*8],bl
   140013c2e:	add    BYTE PTR [rax],al
   140013c30:	lock xchg esi,eax
   140013c32:	add    BYTE PTR [rax],al
   140013c34:	sub    al,0x97
   140013c36:	add    BYTE PTR [rax],al
   140013c38:	test   ah,dh
   140013c3a:	add    BYTE PTR [rax],al
   140013c3c:	jo     0x140013bd5
   140013c3e:	add    BYTE PTR [rax],al
   140013c40:	iret   
   140013c41:	xchg   edi,eax
   140013c42:	add    BYTE PTR [rax],al
   140013c44:	cmp    ch,bh
   140013c46:	add    BYTE PTR [rax],al
   140013c48:	iret   
   140013c49:	xchg   edi,eax
   140013c4a:	add    BYTE PTR [rax],al
   140013c4c:	add    al,0x98
   140013c4e:	add    BYTE PTR [rax],al
   140013c50:	mov    esp,0x100000fd
   140013c55:	cwde   
   140013c56:	add    BYTE PTR [rax],al
   140013c58:	jrcxz  0x140013bf2
   140013c5a:	add    BYTE PTR [rax],al
   140013c5c:	lods   al,BYTE PTR ds:[rsi]
   140013c5d:	cld    
   140013c5e:	add    BYTE PTR [rax],al
   140013c60:	jrcxz  0x140013bfa
   140013c62:	add    BYTE PTR [rax],al
   140013c64:	sbb    BYTE PTR [rcx-0x2d80000],bl
   140013c6a:	add    BYTE PTR [rax],al
   140013c6c:	and    BYTE PTR [rcx-0x66970000],bl
   140013c72:	add    BYTE PTR [rax],al
   140013c74:	enter  0xfb,0x0
   140013c78:	imul   ebx,DWORD PTR [rcx-0x66720000],0xfc780000
   140013c82:	add    BYTE PTR [rax],al
   140013c84:	mov    ds,WORD PTR [rcx-0x66570000]
   140013c8a:	add    BYTE PTR [rax],al
   140013c8c:	mov    ah,bh
   140013c8e:	add    BYTE PTR [rax],al
   140013c90:	test   eax,0x6000099
   140013c95:	(bad)  
   140013c96:	add    BYTE PTR [rax],al
   140013c98:	cwde   
   140013c99:	cld    
   140013c9a:	add    BYTE PTR [rax],al
   140013c9c:	or     al,0x9a
   140013c9e:	add    BYTE PTR [rax],al
   140013ca0:	rex.B (bad) 
   140013ca2:	add    BYTE PTR [rax],al
   140013ca4:	mov    eax,0x480000fa
   140013ca9:	(bad)  
   140013caa:	add    BYTE PTR [rax],al
   140013cac:	(bad)  
   140013cad:	(bad)  
   140013cae:	add    BYTE PTR [rax],al
   140013cb0:	mov    eax,0x880000fa
   140013cb5:	(bad)  
   140013cb6:	add    BYTE PTR [rax],al
   140013cb8:	(bad)  
   140013cb9:	(bad)  
   140013cba:	add    BYTE PTR [rax],al
   140013cbc:	test   ah,dh
   140013cbe:	add    BYTE PTR [rax],al
   140013cc0:	int3   
   140013cc1:	(bad)  
   140013cc2:	add    BYTE PTR [rax],al
   140013cc4:	xor    ebx,DWORD PTR [rbx-0x22c0000]
   140013cca:	add    BYTE PTR [rax],al
   140013ccc:	cmp    al,0x9b
   140013cce:	add    BYTE PTR [rax],al
   140013cd0:	outs   dx,DWORD PTR ds:[rsi]
   140013cd1:	fwait
   140013cd2:	add    BYTE PTR [rax],al
   140013cd4:	test   ah,dh
   140013cd6:	add    BYTE PTR [rax],al
   140013cd8:	js     0x140013c75
   140013cda:	add    BYTE PTR [rax],al
   140013cdc:	xchg   ecx,eax
   140013cdd:	fwait
   140013cde:	add    BYTE PTR [rax],al
   140013ce0:	lock call 0xdb993ce6
   140013ce6:	add    BYTE PTR [rax],al
   140013ce8:	(bad)  
   140013ce9:	fwait
   140013cea:	add    BYTE PTR [rax],al
   140013cec:	test   ah,dh
   140013cee:	add    BYTE PTR [rax],al
   140013cf0:	lock fwait
   140013cf2:	add    BYTE PTR [rax],al
   140013cf4:	adc    eax,0x8400009c
   140013cf9:	hlt    
   140013cfa:	add    BYTE PTR [rax],al
   140013cfc:	sbb    al,0x9c
   140013cfe:	add    BYTE PTR [rax],al
   140013d00:	rex.B pushf 
   140013d02:	add    BYTE PTR [rax],al
   140013d04:	test   ah,dh
   140013d06:	add    BYTE PTR [rax],al
   140013d08:	rex.W pushf 
   140013d0a:	add    BYTE PTR [rax],al
   140013d0c:	ins    DWORD PTR es:[rdi],dx
   140013d0d:	pushf  
   140013d0e:	add    BYTE PTR [rax],al
   140013d10:	test   ah,dh
   140013d12:	add    BYTE PTR [rax],al
   140013d14:	je     0x140013cb2
   140013d16:	add    BYTE PTR [rax],al
   140013d18:	cdq    
   140013d19:	pushf  
   140013d1a:	add    BYTE PTR [rax],al
   140013d1c:	test   ah,dh
   140013d1e:	add    BYTE PTR [rax],al
   140013d20:	movabs al,ds:0xf800009cdb00009c
   140013d29:	call   0xdcf13d2e
   140013d2e:	add    BYTE PTR [rax],al
   140013d30:	rex.WX popf 
   140013d32:	add    BYTE PTR [rax],al
   140013d34:	clc    
   140013d35:	call   0xdd513d3a
   140013d3a:	add    BYTE PTR [rax],al
   140013d3c:	jp     0x140013cdb
   140013d3e:	add    BYTE PTR [rax],al
   140013d40:	clc    
   140013d41:	call   0xdd813d46
   140013d46:	add    BYTE PTR [rax],al
   140013d48:	adc    DWORD PTR [rsi-0x8fc0000],ebx
   140013d4e:	add    BYTE PTR [rax],al
   140013d50:	sbb    BYTE PTR [rsi-0x61ca0000],bl
   140013d56:	add    BYTE PTR [rax],al
   140013d58:	test   ah,dh
   140013d5a:	add    BYTE PTR [rax],al
   140013d5c:	cmp    al,0x9e
   140013d5e:	add    BYTE PTR [rax],al
   140013d60:	jge    0x140013d00
   140013d62:	add    BYTE PTR [rax],al
   140013d64:	shl    cl,0x0
   140013d67:	add    BYTE PTR [rax-0x3ffff62],dl
   140013d6d:	movabs eax,ds:0xa2040000fde40000
   140013d76:	add    BYTE PTR [rax],al
   140013d78:	pop    rdi
   140013d79:	movabs ds:0xa2680000fdcc0000,al
   140013d82:	add    BYTE PTR [rax],al
   140013d84:	test   DWORD PTR [rdx-0x5480000],esp
   140013d8a:	add    BYTE PTR [rax],al
   140013d8c:	mov    WORD PTR [rdx-0x5cb80000],fs
   140013d92:	add    BYTE PTR [rax],al
   140013d94:	and    dh,bh
   140013d96:	add    BYTE PTR [rax],al
   140013d98:	push   rax
   140013d99:	movabs ds:0xe8f00000a3a00000,eax
   140013da2:	add    BYTE PTR [rax],al
   140013da4:	mov    al,0xa3
   140013da6:	add    BYTE PTR [rax],al
   140013da8:	mul    DWORD PTR [rbp-0x2000000]
   140013dae:	add    BYTE PTR [rax],al
   140013db0:	cmp    BYTE PTR [rsi-0x59ab0000],ah
   140013db6:	add    BYTE PTR [rax],al
   140013db8:	test   ah,dh
   140013dba:	add    BYTE PTR [rax],al
   140013dbc:	pop    rsp
   140013dbd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013dbe:	add    BYTE PTR [rax],al
   140013dc0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013dc1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013dc2:	add    BYTE PTR [rax],al
   140013dc4:	clc    
   140013dc5:	.byte 0xe8
	...

Disassembly of section .rsrc:

0000000140014000 <.rsrc>:
	...
   14001400c:	add    BYTE PTR [rax],al
   14001400e:	add    DWORD PTR [rax],eax
   140014010:	adc    BYTE PTR [rax],al
   140014012:	add    BYTE PTR [rax],al
   140014014:	sbb    BYTE PTR [rax],al
   140014016:	add    BYTE PTR [rax+0x0],al
	...
   140014024:	add    BYTE PTR [rax],al
   140014026:	add    DWORD PTR [rax],eax
   140014028:	add    DWORD PTR [rax],eax
   14001402a:	add    BYTE PTR [rax],al
   14001402c:	xor    BYTE PTR [rax],al
   14001402e:	add    BYTE PTR [rax+0x0],al
	...
   14001403c:	add    BYTE PTR [rax],al
   14001403e:	add    DWORD PTR [rax],eax
   140014040:	or     DWORD PTR [rax+rax*1],eax
   140014043:	add    BYTE PTR [rax+0x0],cl
   140014046:	add    BYTE PTR [rax],al
   140014048:	(bad)  
   140014049:	rex add DWORD PTR [rax],eax
   14001404c:	cwde   
   14001404d:	add    eax,DWORD PTR [rax]
	...
   14001405f:	add    BYTE PTR [rax+0x3403],bl
   140014065:	add    BYTE PTR [rsi+0x0],dl
   140014068:	push   rbx
   140014069:	add    BYTE PTR [rdi+0x0],bl
   14001406c:	push   rsi
   14001406d:	add    BYTE PTR [rbp+0x0],al
   140014070:	push   rdx
   140014071:	add    BYTE PTR [rbx+0x0],dl
   140014074:	rex.WB add BYTE PTR [r15+0x0],cl
   140014078:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14001407c:	rex.WB add BYTE PTR [r14+0x0],cl
   140014080:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140014084:	add    BYTE PTR [rax],al
   140014086:	add    BYTE PTR [rax],al
   140014088:	mov    ebp,0xfeef04
   14001408d:	add    BYTE PTR [rcx],al
   14001408f:	add    BYTE PTR [rax],al
   140014091:	add    BYTE PTR [rdx],cl
   140014093:	add    BYTE PTR [rax],al
   140014095:	add    BYTE PTR [rax],bpl
   140014098:	add    BYTE PTR [rax],al
   14001409a:	or     al,BYTE PTR [rax]
   14001409c:	add    BYTE PTR [rax+0x0],al
   14001409f:	sub    BYTE PTR [rdi],bh
   1400140a1:	add    BYTE PTR [rax],al
   1400140a3:	add    BYTE PTR [rax],al
   1400140a5:	add    BYTE PTR [rax],al
   1400140a7:	add    BYTE PTR [rax+rax*1],al
   1400140aa:	add    al,0x0
   1400140ac:	add    DWORD PTR [rax],eax
	...
   1400140ba:	add    BYTE PTR [rax],al
   1400140bc:	test   BYTE PTR [rdx],0x0
   1400140bf:	add    BYTE PTR [rcx],al
   1400140c1:	add    BYTE PTR [rbx+0x0],dl
   1400140c4:	je     0x1400140c6
   1400140c6:	jb     0x1400140c8
   1400140c8:	imul   eax,DWORD PTR [rax],0x67006e
   1400140ce:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400140d2:	ins    BYTE PTR es:[rdi],dx
   1400140d3:	add    BYTE PTR [rbp+0x0],ah
   1400140d6:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400140da:	data16 add BYTE PTR [rdi+0x0],ch
   1400140de:	add    BYTE PTR [rax],al
   1400140e0:	rol    BYTE PTR [rdx],cl
   1400140e2:	add    BYTE PTR [rax],al
   1400140e4:	add    DWORD PTR [rax],eax
   1400140e6:	xor    BYTE PTR [rax],al
   1400140e8:	xor    al,0x0
   1400140ea:	xor    BYTE PTR [rax],al
   1400140ec:	cmp    DWORD PTR [rax],eax
   1400140ee:	xor    BYTE PTR [rax],al
   1400140f0:	xor    al,0x0
   1400140f2:	rex.X add BYTE PTR [rax],sil
   1400140f5:	add    BYTE PTR [rax],al
   1400140f7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400140fb:	add    BYTE PTR [rcx],al
   1400140fd:	add    BYTE PTR [rbx+0x0],al
   140014100:	outs   dx,DWORD PTR ds:[rsi]
   140014101:	add    BYTE PTR [rbp+0x0],ch
   140014104:	jo     0x140014106
   140014106:	(bad)  
   140014107:	add    BYTE PTR [rsi+0x0],ch
   14001410a:	jns    0x14001410c
   14001410c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014110:	ins    DWORD PTR es:[rdi],dx
   140014111:	add    BYTE PTR [rbp+0x0],ah
   140014114:	add    BYTE PTR [rax],al
   140014116:	add    BYTE PTR [rax],al
   140014118:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001411c:	movsxd eax,DWORD PTR [rax]
   14001411e:	jb     0x140014120
   140014120:	outs   dx,DWORD PTR ds:[rsi]
   140014121:	add    BYTE PTR [rbx+0x0],dh
   140014124:	outs   dx,DWORD PTR ds:[rsi]
   140014125:	add    BYTE PTR [rsi+0x0],ah
   140014128:	je     0x14001412a
   14001412a:	and    BYTE PTR [rax],al
   14001412c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140014130:	jb     0x140014132
   140014132:	jo     0x140014134
   140014134:	outs   dx,DWORD PTR ds:[rsi]
   140014135:	add    BYTE PTR [rdx+0x0],dh
   140014138:	(bad)  
   140014139:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001413d:	add    BYTE PTR [rdi+0x0],ch
   140014140:	outs   dx,BYTE PTR ds:[rsi]
   140014141:	add    BYTE PTR [rax],al
   140014143:	add    BYTE PTR [rax+rax*1+0x1a],bl
   140014147:	add    BYTE PTR [rcx],al
   140014149:	add    BYTE PTR [rsi+0x0],al
   14001414c:	imul   eax,DWORD PTR [rax],0x65006c
   140014152:	add    BYTE PTR [rbp+0x0],r12b
   140014156:	jae    0x140014158
   140014158:	movsxd eax,DWORD PTR [rax]
   14001415a:	jb     0x14001415c
   14001415c:	imul   eax,DWORD PTR [rax],0x740070
   140014162:	imul   eax,DWORD PTR [rax],0x6e006f
   140014168:	add    BYTE PTR [rax],al
   14001416a:	add    BYTE PTR [rax],al
   14001416c:	push   rbx
   14001416d:	add    BYTE PTR [rax+0x0],ch
   140014170:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140014175:	add    BYTE PTR [rax],ah
   140014177:	add    BYTE PTR [rcx+0x0],cl
   14001417a:	outs   dx,BYTE PTR ds:[rsi]
   14001417b:	add    BYTE PTR [rsi+0x0],ah
   14001417e:	jb     0x140014180
   140014180:	(bad)  
   140014181:	add    BYTE PTR [rbx+0x0],dh
   140014184:	je     0x140014186
   140014186:	jb     0x140014188
   140014188:	jne    0x14001418a
   14001418a:	movsxd eax,DWORD PTR [rax]
   14001418c:	je     0x14001418e
   14001418e:	jne    0x140014190
   140014190:	jb     0x140014192
   140014192:	add    BYTE PTR gs:[rax],ah
   140014195:	add    BYTE PTR [rax+0x0],cl
   140014198:	outs   dx,DWORD PTR ds:[rsi]
   140014199:	add    BYTE PTR [rbx+0x0],dh
   14001419c:	je     0x14001419e
   14001419e:	add    BYTE PTR [rax],al
   1400141a0:	data16 add BYTE PTR [rbx],ah
   1400141a3:	add    BYTE PTR [rcx],al
   1400141a5:	add    BYTE PTR [rsi+0x0],al
   1400141a8:	imul   eax,DWORD PTR [rax],0x65006c
   1400141ae:	push   rsi
   1400141af:	add    BYTE PTR [rbp+0x0],ah
   1400141b2:	jb     0x1400141b4
   1400141b4:	jae    0x1400141b6
   1400141b6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400141bc:	add    BYTE PTR [rax],al
   1400141be:	add    BYTE PTR [rax],al
   1400141c0:	xor    DWORD PTR [rax],eax
   1400141c2:	xor    BYTE PTR [rax],al
   1400141c4:	add    BYTE PTR cs:[rax],dh
   1400141c7:	add    BYTE PTR [rsi],ch
   1400141c9:	add    BYTE PTR [rcx],dh
   1400141cb:	add    BYTE PTR [rax],dh
   1400141cd:	add    BYTE PTR [rdx],dh
   1400141cf:	add    BYTE PTR [rax+rax*1],dh
   1400141d2:	xor    BYTE PTR [rax],al
   1400141d4:	add    BYTE PTR cs:[rcx],dh
   1400141d7:	add    BYTE PTR [rsi],dh
   1400141d9:	add    BYTE PTR [rbx],dh
   1400141db:	add    BYTE PTR [rax],bh
   1400141dd:	add    BYTE PTR [rax+rax*1],dh
   1400141e0:	and    BYTE PTR [rax],al
   1400141e2:	sub    BYTE PTR [rax],al
   1400141e4:	je     0x1400141e6
   1400141e6:	push   0x2e003100
   1400141eb:	add    BYTE PTR [rcx],dh
   1400141ed:	add    BYTE PTR [rip+0x37003000],dh        # 0x1770171f3
   1400141f3:	add    BYTE PTR [rax],dh
   1400141f5:	add    BYTE PTR [rcx],bh
   1400141f7:	add    BYTE PTR [rip+0x37003100],ch        # 0x1770172fd
   1400141fd:	add    BYTE PTR [rax],dh
   1400141ff:	add    BYTE PTR [rax],dh
   140014201:	add    BYTE PTR [rcx],ch
   140014203:	add    BYTE PTR [rax],al
   140014205:	add    BYTE PTR [rax],al
   140014207:	add    BYTE PTR [rsi],dh
   140014209:	add    BYTE PTR [rbx],cl
   14001420b:	add    BYTE PTR [rcx],al
   14001420d:	add    BYTE PTR [rcx+0x0],cl
   140014210:	outs   dx,BYTE PTR ds:[rsi]
   140014211:	add    BYTE PTR [rax+rax*1+0x65],dh
   140014215:	add    BYTE PTR [rdx+0x0],dh
   140014218:	outs   dx,BYTE PTR ds:[rsi]
   140014219:	add    BYTE PTR [rcx+0x0],ah
   14001421c:	ins    BYTE PTR es:[rdi],dx
   14001421d:	add    BYTE PTR [rsi+0x0],cl
   140014220:	(bad)  
   140014221:	add    BYTE PTR [rbp+0x0],ch
   140014224:	add    BYTE PTR gs:[rax],al
   140014227:	add    BYTE PTR [rbx+0x0],dh
   14001422a:	imul   eax,DWORD PTR [rax],0x6f0068
   140014230:	jae    0x140014232
   140014232:	je     0x140014234
   140014234:	add    BYTE PTR cs:[rbp+0x0],ah
   140014238:	js     0x14001423a
   14001423a:	add    BYTE PTR gs:[rax],al
   14001423d:	add    BYTE PTR [rax],al
   14001423f:	add    BYTE PTR [rax+0x1002e00],al
   140014245:	add    BYTE PTR [rax+rax*1+0x65],cl
   140014249:	add    BYTE PTR [rdi+0x0],ah
   14001424c:	(bad)  
   14001424d:	add    BYTE PTR [rax+rax*1+0x43],ch
   140014251:	add    BYTE PTR [rdi+0x0],ch
   140014254:	jo     0x140014256
   140014256:	jns    0x140014258
   140014258:	jb     0x14001425a
   14001425a:	imul   eax,DWORD PTR [rax],0x680067
   140014260:	je     0x140014262
   140014262:	add    BYTE PTR [rax],al
   140014264:	test   eax,0x4d002000
   140014269:	add    BYTE PTR [rcx+0x0],ch
   14001426c:	movsxd eax,DWORD PTR [rax]
   14001426e:	jb     0x140014270
   140014270:	outs   dx,DWORD PTR ds:[rsi]
   140014271:	add    BYTE PTR [rbx+0x0],dh
   140014274:	outs   dx,DWORD PTR ds:[rsi]
   140014275:	add    BYTE PTR [rsi+0x0],ah
   140014278:	je     0x14001427a
   14001427a:	and    BYTE PTR [rax],al
   14001427c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140014280:	jb     0x140014282
   140014282:	jo     0x140014284
   140014284:	outs   dx,DWORD PTR ds:[rsi]
   140014285:	add    BYTE PTR [rdx+0x0],dh
   140014288:	(bad)  
   140014289:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001428d:	add    BYTE PTR [rdi+0x0],ch
   140014290:	outs   dx,BYTE PTR ds:[rsi]
   140014291:	add    BYTE PTR [rsi],ch
   140014293:	add    BYTE PTR [rax],ah
   140014295:	add    BYTE PTR [rcx+0x0],al
   140014298:	ins    BYTE PTR es:[rdi],dx
   140014299:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001429d:	add    BYTE PTR [rdx+0x0],dh
   1400142a0:	imul   eax,DWORD PTR [rax],0x680067
   1400142a6:	je     0x1400142a8
   1400142a8:	jae    0x1400142aa
   1400142aa:	and    BYTE PTR [rax],al
   1400142ac:	jb     0x1400142ae
   1400142ae:	add    BYTE PTR gs:[rbx+0x0],dh
   1400142b2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400142b6:	jbe    0x1400142b8
   1400142b8:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400142bd:	add    BYTE PTR [rax],al
   1400142bf:	add    BYTE PTR [rsi],bh
   1400142c1:	add    BYTE PTR [rbx],cl
   1400142c3:	add    BYTE PTR [rcx],al
   1400142c5:	add    BYTE PTR [rdi+0x0],cl
   1400142c8:	jb     0x1400142ca
   1400142ca:	imul   eax,DWORD PTR [rax],0x690067
   1400142d0:	outs   dx,BYTE PTR ds:[rsi]
   1400142d1:	add    BYTE PTR [rcx+0x0],ah
   1400142d4:	ins    BYTE PTR es:[rdi],dx
   1400142d5:	add    BYTE PTR [rsi+0x0],al
   1400142d8:	imul   eax,DWORD PTR [rax],0x65006c
   1400142de:	outs   dx,BYTE PTR ds:[rsi]
   1400142df:	add    BYTE PTR [rcx+0x0],ah
   1400142e2:	ins    DWORD PTR es:[rdi],dx
   1400142e3:	add    BYTE PTR [rbp+0x0],ah
   1400142e6:	add    BYTE PTR [rax],al
   1400142e8:	jae    0x1400142ea
   1400142ea:	imul   eax,DWORD PTR [rax],0x6f0068
   1400142f0:	jae    0x1400142f2
   1400142f2:	je     0x1400142f4
   1400142f4:	add    BYTE PTR cs:[rbp+0x0],ah
   1400142f8:	js     0x1400142fa
   1400142fa:	add    BYTE PTR gs:[rax],al
   1400142fd:	add    BYTE PTR [rax],al
   1400142ff:	add    BYTE PTR [rdx+0x0],ch
   140014302:	and    eax,0x50000100
   140014307:	add    BYTE PTR [rdx+0x0],dh
   14001430a:	outs   dx,DWORD PTR ds:[rsi]
   14001430b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001430f:	add    BYTE PTR [rbx+0x0],ah
   140014312:	je     0x140014314
   140014314:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014318:	ins    DWORD PTR es:[rdi],dx
   140014319:	add    BYTE PTR [rbp+0x0],ah
   14001431c:	add    BYTE PTR [rax],al
   14001431e:	add    BYTE PTR [rax],al
   140014320:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140014324:	movsxd eax,DWORD PTR [rax]
   140014326:	jb     0x140014328
   140014328:	outs   dx,DWORD PTR ds:[rsi]
   140014329:	add    BYTE PTR [rbx+0x0],dh
   14001432c:	outs   dx,DWORD PTR ds:[rsi]
   14001432d:	add    BYTE PTR [rsi+0x0],ah
   140014330:	je     0x140014332
   140014332:	scas   al,BYTE PTR es:[rdi]
   140014333:	add    BYTE PTR [rax],ah
   140014335:	add    BYTE PTR [rdi+0x0],dl
   140014338:	imul   eax,DWORD PTR [rax],0x64006e
   14001433e:	outs   dx,DWORD PTR ds:[rsi]
   14001433f:	add    BYTE PTR [rdi+0x0],dh
   140014342:	jae    0x140014344
   140014344:	scas   al,BYTE PTR es:[rdi]
   140014345:	add    BYTE PTR [rax],ah
   140014347:	add    BYTE PTR [rdi+0x0],cl
   14001434a:	jo     0x14001434c
   14001434c:	add    BYTE PTR gs:[rdx+0x0],dh
   140014350:	(bad)  
   140014351:	add    BYTE PTR [rax+rax*1+0x69],dh
   140014355:	add    BYTE PTR [rsi+0x0],ch
   140014358:	add    BYTE PTR [eax],ah
   14001435b:	add    BYTE PTR [rbx+0x0],dl
   14001435e:	jns    0x140014360
   140014360:	jae    0x140014362
   140014362:	je     0x140014364
   140014364:	add    BYTE PTR gs:[rbp+0x0],ch
   140014368:	add    BYTE PTR [rax],al
   14001436a:	add    BYTE PTR [rax],al
   14001436c:	rex.RX add BYTE PTR [rcx],r10b
   14001436f:	add    BYTE PTR [rcx],al
   140014371:	add    BYTE PTR [rax+0x0],dl
   140014374:	jb     0x140014376
   140014376:	outs   dx,DWORD PTR ds:[rsi]
   140014377:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001437b:	add    BYTE PTR [rbx+0x0],ah
   14001437e:	je     0x140014380
   140014380:	push   rsi
   140014381:	add    BYTE PTR [rbp+0x0],ah
   140014384:	jb     0x140014386
   140014386:	jae    0x140014388
   140014388:	imul   eax,DWORD PTR [rax],0x6e006f
   14001438e:	add    BYTE PTR [rax],al
   140014390:	xor    DWORD PTR [rax],eax
   140014392:	xor    BYTE PTR [rax],al
   140014394:	add    BYTE PTR cs:[rax],dh
   140014397:	add    BYTE PTR [rsi],ch
   140014399:	add    BYTE PTR [rcx],dh
   14001439b:	add    BYTE PTR [rax],dh
   14001439d:	add    BYTE PTR [rdx],dh
   14001439f:	add    BYTE PTR [rax+rax*1],dh
   1400143a2:	xor    BYTE PTR [rax],al
   1400143a4:	add    BYTE PTR cs:[rcx],dh
   1400143a7:	add    BYTE PTR [rsi],dh
   1400143a9:	add    BYTE PTR [rbx],dh
   1400143ab:	add    BYTE PTR [rax],bh
   1400143ad:	add    BYTE PTR [rax+rax*1],dh
   1400143b0:	add    BYTE PTR [rax],al
   1400143b2:	add    BYTE PTR [rax],al
   1400143b4:	add    BYTE PTR [rax],r8b
   1400143b7:	add    BYTE PTR [rcx],al
   1400143b9:	add    BYTE PTR [rsi+0x0],dl
   1400143bc:	(bad)  
   1400143bd:	add    BYTE PTR [rdx+0x0],dh
   1400143c0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400143c4:	ins    BYTE PTR es:[rdi],dx
   1400143c5:	add    BYTE PTR [rbp+0x0],ah
   1400143c8:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400143cc:	data16 add BYTE PTR [rdi+0x0],ch
   1400143d0:	add    BYTE PTR [rax],al
   1400143d2:	add    BYTE PTR [rax],al
   1400143d4:	and    al,0x0
   1400143d6:	add    al,0x0
   1400143d8:	add    BYTE PTR [rax],al
   1400143da:	push   rsp
   1400143db:	add    BYTE PTR [rdx+0x0],dh
   1400143de:	(bad)  
   1400143df:	add    BYTE PTR [rsi+0x0],ch
   1400143e2:	jae    0x1400143e4
   1400143e4:	ins    BYTE PTR es:[rdi],dx
   1400143e5:	add    BYTE PTR [rcx+0x0],ah
   1400143e8:	je     0x1400143ea
   1400143ea:	imul   eax,DWORD PTR [rax],0x6e006f
   1400143f0:	add    BYTE PTR [rax],al
   1400143f2:	add    BYTE PTR [rax],al
   1400143f4:	or     DWORD PTR [rax+rsi*4],eax
   1400143f7:	.byte 0x4

Disassembly of section .reloc:

0000000140015000 <.reloc>:
   140015000:	add    BYTE PTR [rax+0x1800000],dh
   140015006:	add    BYTE PTR [rax],al
   140015008:	shl    BYTE PTR [rbx-0x5c175c28],1
   14001500e:	lock movabs ds:0xa410a408a400a3f8,eax
   140015018:	sbb    BYTE PTR [rax+rsi*1-0xf5bc75c],ah
   14001501f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015020:	clc    
   140015021:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015022:	add    BYTE PTR [rsi-0x596759f8],ah
   140015028:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   140015031:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015032:	enter  0xd0a6,0xa6
   140015036:	fsub   DWORD PTR [rsi-0x59175920]
   14001503c:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001503e:	clc    
   14001503f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015040:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140015046:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14001504c:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   140015052:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140015054:	push   rax
   140015055:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015056:	pop    rax
   140015057:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015058:	(bad)  
   140015059:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001505a:	push   0x78a770a7
   14001505f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015060:	and    BYTE PTR [rdi-0x586f5878],0x98
   140015067:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015068:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140015071:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015072:	enter  0xd0a7,0xa7
   140015076:	fsub   DWORD PTR [rdi-0x58175820]
   14001507c:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001507e:	clc    
   14001507f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015080:	add    BYTE PTR [rax-0x57ef57f8],ch
   140015086:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14001508c:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140015092:	rex.W test al,0x50
   140015095:	test   al,0x58
   140015097:	test   al,0x60
   140015099:	test   al,0x68
   14001509b:	test   al,0x70
   14001509d:	test   al,0x78
   14001509f:	test   al,0x80
   1400150a1:	test   al,0x88
   1400150a3:	test   al,0x90
   1400150a5:	test   al,0x98
   1400150a7:	test   al,0xa0
   1400150a9:	test   al,0xa8
   1400150ab:	test   al,0xb0
   1400150ad:	test   al,0xb8
   1400150af:	test   al,0xc0
   1400150b1:	test   al,0xc8
   1400150b3:	test   al,0xd0
   1400150b5:	test   al,0xd8
   1400150b7:	test   al,0xe0
   1400150b9:	test   al,0xe8
   1400150bb:	test   al,0xf0
   1400150bd:	test   al,0xf8
   1400150bf:	test   al,0x0
   1400150c1:	test   eax,0xa910a908
   1400150c6:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   1400150cc:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   1400150d2:	test   rax,0xffffffffa958a950
   1400150d8:	(bad)  
   1400150d9:	test   eax,0xa970a968
   1400150de:	js     0x140015089
   1400150e0:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400150e7:	test   eax,0xa9a8a9a0
   1400150ec:	mov    al,0xa9
   1400150ee:	mov    eax,0xc8a9c0a9
   1400150f3:	test   eax,0xa9d8a9d0
   1400150f8:	loopne 0x1400150a3
   1400150fa:	call   0x138ab41a8
   1400150ff:	test   eax,0xaa08aa00
   140015104:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14001510a:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140015110:	stos   BYTE PTR es:[rdi],al
   140015112:	rex.W stos BYTE PTR es:[rdi],al
   140015114:	push   rax
   140015115:	stos   BYTE PTR es:[rdi],al
   140015116:	pop    rax
   140015117:	stos   BYTE PTR es:[rdi],al
   140015118:	shr    BYTE PTR [rdx-0x551f5528],1
   14001511e:	call   0x138ac41cd
   140015123:	stos   BYTE PTR es:[rdi],al
   140015124:	add    BYTE PTR [rbx-0x54ef54f8],ch
   14001512a:	cmp    BYTE PTR [rbx-0x54b754c0],ch
   140015130:	(bad)  
   140015131:	stos   DWORD PTR es:[rdi],eax
   140015132:	push   0xffffffff98ab70ab
   140015137:	stos   DWORD PTR es:[rdi],eax
   140015138:	movabs al,ds:0xe0abd8abd0aba8ab
   140015141:	stos   DWORD PTR es:[rdi],eax
   140015142:	call   0x138ad41f2
   140015147:	stos   DWORD PTR es:[rdi],eax
   140015148:	test   al,0xae
   14001514a:	mov    al,0xae
   14001514c:	enter  0xd0ae,0xae
   140015150:	fsubr  DWORD PTR [rsi-0x51175120]
   140015156:	lock scas al,BYTE PTR es:[rdi]
   140015158:	clc    
   140015159:	scas   al,BYTE PTR es:[rdi]
   14001515a:	add    BYTE PTR [rdi-0x50ef50f8],ch
   140015160:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   140015166:	xor    BYTE PTR [rdi-0x50a750b0],ch
   14001516c:	(bad)  
   14001516d:	scas   eax,DWORD PTR es:[rdi]
   14001516e:	push   0x78af70af
   140015173:	scas   eax,DWORD PTR es:[rdi]
   140015174:	test   al,0xaf
   140015176:	mov    al,0xaf
   140015178:	mov    eax,0xc8afc0af
   14001517d:	scas   eax,DWORD PTR es:[rdi]
   14001517e:	shr    BYTE PTR [rdi+0xc000],1
   140015184:	cmp    BYTE PTR [rcx],al
   140015186:	add    BYTE PTR [rax],al
   140015188:	sbb    BYTE PTR [rax-0x5fc75fd8],ah
   14001518e:	rex.W movabs al,ds:0xa088a078a068a058
   140015198:	cwde   
   140015199:	movabs al,ds:0xa0d8a0c8a0b8a0a8
   1400151a2:	call   0x148a24a47
   1400151a7:	movabs eax,ds:0xa148a138a128a118
   1400151b0:	pop    rax
   1400151b1:	movabs eax,ds:0xa198a188a178a168
   1400151ba:	test   al,0xa1
   1400151bc:	mov    eax,0xd8a1c8a1
   1400151c1:	movabs eax,ds:0xa218a208a1f8a1e8
   1400151ca:	sub    BYTE PTR [rdx-0x5db75dc8],ah
   1400151d0:	pop    rax
   1400151d1:	movabs ds:0xa298a288a278a268,al
   1400151da:	test   al,0xa2
   1400151dc:	mov    eax,0xd8a2c8a2
   1400151e1:	movabs ds:0xa318a308a2f8a2e8,al
   1400151ea:	sub    BYTE PTR [rbx-0x5cb75cc8],ah
   1400151f0:	pop    rax
   1400151f1:	movabs ds:0xa398a388a378a368,eax
   1400151fa:	test   al,0xa3
   1400151fc:	mov    eax,0xd8a3c8a3
   140015201:	movabs ds:0xa418a408a3f8a3e8,eax
   14001520a:	sub    BYTE PTR [rax+rdi*1+0x58a448a4],ah
   140015211:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015212:	push   0xffffffff88a478a4
   140015217:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015218:	cwde   
   140015219:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001521a:	test   al,0xa4
   14001521c:	or     BYTE PTR [rcx-0x56d756e8],ch
   140015222:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   140015228:	push   0xffffffff88a978a9
   14001522d:	test   eax,0xa9a8a998
   140015232:	mov    eax,0xd8a9c8a9
   140015237:	test   eax,0xa9f8a9e8
   14001523c:	or     BYTE PTR [rdx-0x55d755e8],ch
   140015242:	cmp    BYTE PTR [rdx-0x55a755b8],ch
   140015248:	push   0xffffffff88aa78aa
   14001524d:	stos   BYTE PTR es:[rdi],al
   14001524e:	cwde   
   14001524f:	stos   BYTE PTR es:[rdi],al
   140015250:	test   al,0xaa
   140015252:	mov    eax,0xd8aac8aa
   140015257:	stos   BYTE PTR es:[rdi],al
   140015258:	call   0x148ac4b07
   14001525d:	stos   DWORD PTR es:[rdi],eax
   14001525e:	sbb    BYTE PTR [rbx-0x54c754d8],ch
   140015264:	stos   QWORD PTR es:[rdi],rax
   140015266:	pop    rax
   140015267:	stos   DWORD PTR es:[rdi],eax
   140015268:	push   0xffffffff88ab78ab
   14001526d:	stos   DWORD PTR es:[rdi],eax
   14001526e:	cwde   
   14001526f:	stos   DWORD PTR es:[rdi],eax
   140015270:	test   al,0xab
   140015272:	mov    eax,0xd8abc8ab
   140015277:	stos   DWORD PTR es:[rdi],eax
   140015278:	call   0x148ad4b28
   14001527d:	lods   al,BYTE PTR ds:[rsi]
   14001527e:	sbb    BYTE PTR [rax+rbp*1+0x48ac38ac],ch
   140015285:	lods   al,BYTE PTR ds:[rsi]
   140015286:	pop    rax
   140015287:	lods   al,BYTE PTR ds:[rsi]
   140015288:	push   0xffffffff88ac78ac
   14001528d:	lods   al,BYTE PTR ds:[rsi]
   14001528e:	cwde   
   14001528f:	lods   al,BYTE PTR ds:[rsi]
   140015290:	test   al,0xac
   140015292:	mov    eax,0xd8acc8ac
   140015297:	lods   al,BYTE PTR ds:[rsi]
   140015298:	call   0x148ae4b49
   14001529d:	lods   eax,DWORD PTR ds:[rsi]
   14001529e:	sbb    BYTE PTR [rbp-0x52c752d8],ch
   1400152a4:	lods   rax,QWORD PTR ds:[rsi]
   1400152a6:	pop    rax
   1400152a7:	lods   eax,DWORD PTR ds:[rsi]
   1400152a8:	push   0xffffffff88ad78ad
   1400152ad:	lods   eax,DWORD PTR ds:[rsi]
   1400152ae:	cwde   
   1400152af:	lods   eax,DWORD PTR ds:[rsi]
   1400152b0:	test   al,0xad
   1400152b2:	mov    eax,0xd8adc8ad
   1400152b7:	lods   eax,DWORD PTR ds:[rsi]
   1400152b8:	add    al,dl
   1400152ba:	add    BYTE PTR [rax],al
   1400152bc:	sbb    al,0x0
   1400152be:	add    BYTE PTR [rax],al
   1400152c0:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   1400152c6:	shl    BYTE PTR [rax+rbx*8+0x28a4e0a4],1
   1400152cd:	test   al,0x40
   1400152cf:	test   al,0x48
   1400152d1:	test   al,0x50
   1400152d3:	test   al,0x0
   1400152d5:	loopne 0x1400152d7
   1400152d7:	add    BYTE PTR [rax],dl
   1400152d9:	add    BYTE PTR [rax],al
   1400152db:	add    BYTE PTR [rax],dh
   1400152dd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400152de:	cmp    BYTE PTR [rax+rax*2+0xa4],ah
   1400152e5:	and    BYTE PTR [rcx],al
   1400152e7:	add    BYTE PTR [rax+rax*1],bl
   1400152ea:	add    BYTE PTR [rax],al
   1400152ec:	add    BYTE PTR [rax-0x5fef5ff8],ah
   1400152f2:	sbb    BYTE PTR [rcx-0x5e875ea8],ah
   1400152f8:	.byte 0xa0
   1400152f9:	.byte 0xa1
   1400152fa:	enter  0xf0a1,0xa1
   1400152fe:	.byte 0x20
   1400152ff:	.byte 0xa2
