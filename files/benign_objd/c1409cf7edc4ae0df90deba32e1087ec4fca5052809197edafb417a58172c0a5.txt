
c1409cf7edc4ae0df90deba32e1087ec4fca5052809197edafb417a58172c0a5.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	rex push rdi
   140001002:	sub    rsp,0x20
   140001006:	xor    edx,edx
   140001008:	lea    rcx,[rip+0x1db59]        # 0x14001eb68
   14000100f:	lea    r8d,[rdx+0x28]
   140001013:	call   0x140014b26
   140001018:	and    DWORD PTR [rip+0x1db39],0x0        # 0x14001eb58
   14000101f:	lea    rdi,[rip+0x1db2a]        # 0x14001eb50
   140001026:	and    QWORD PTR [rip+0x1db32],0x0        # 0x14001eb60
   14000102e:	lea    rcx,[rip+0x1db33]        # 0x14001eb68
   140001035:	and    DWORD PTR [rip+0x1db20],0x0        # 0x14001eb5c
   14000103c:	and    QWORD PTR [rip+0x1db4c],0x0        # 0x14001eb90
   140001044:	mov    QWORD PTR [rip+0x1da4d],rdi        # 0x14001ea98
   14000104b:	call   0x140008ecc
   140001050:	test   eax,eax
   140001052:	jns    0x14000105d
   140001054:	mov    BYTE PTR [rip+0x1da29],0x1        # 0x14001ea84
   14000105b:	jmp    0x140001067
   14000105d:	mov    DWORD PTR [rip+0x1daf1],0x38        # 0x14001eb58
   140001067:	lea    rax,[rip+0x15c72]        # 0x140016ce0
   14000106e:	mov    QWORD PTR [rip+0x1da2b],rdi        # 0x14001eaa0
   140001075:	lea    rcx,[rip+0x14644]        # 0x1400156c0
   14000107c:	mov    QWORD PTR [rip+0x1dacd],rax        # 0x14001eb50
   140001083:	add    rsp,0x20
   140001087:	pop    rdi
   140001088:	jmp    0x140014afc
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	rex push rbx
   140001092:	sub    rsp,0x20
   140001096:	xor    edx,edx
   140001098:	lea    rcx,[rip+0x1db29]        # 0x14001ebc8
   14000109f:	lea    r8d,[rdx+0x28]
   1400010a3:	call   0x140014b26
   1400010a8:	and    QWORD PTR [rip+0x1db40],0x0        # 0x14001ebf0
   1400010b0:	lea    rax,[rip+0xffffffffffffef49]        # 0x140000000
   1400010b7:	and    DWORD PTR [rip+0x1db3a],0x0        # 0x14001ebf8
   1400010be:	lea    rcx,[rip+0x1db03]        # 0x14001ebc8
   1400010c5:	and    DWORD PTR [rip+0x1db30],0x0        # 0x14001ebfc
   1400010cc:	mov    ebx,0x1
   1400010d1:	mov    QWORD PTR [rip+0x1dad8],rax        # 0x14001ebb0
   1400010d8:	mov    QWORD PTR [rip+0x1dac9],rax        # 0x14001eba8
   1400010df:	lea    rax,[rip+0x16ed2]        # 0x140017fb8
   1400010e6:	mov    QWORD PTR [rip+0x1dad3],rax        # 0x14001ebc0
   1400010ed:	mov    DWORD PTR [rip+0x1daa9],0x60        # 0x14001eba0
   1400010f7:	mov    BYTE PTR [rip+0x1dabb],bl        # 0x14001ebb8
   1400010fd:	mov    DWORD PTR [rip+0x1dab5],0x800        # 0x14001ebbc
   140001107:	call   0x140008ecc
   14000110c:	movzx  ecx,BYTE PTR [rip+0x1d971]        # 0x14001ea84
   140001113:	test   eax,eax
   140001115:	cmovs  ecx,ebx
   140001118:	mov    BYTE PTR [rip+0x1d966],cl        # 0x14001ea84
   14000111e:	lea    rcx,[rip+0x145bb]        # 0x1400156e0
   140001125:	add    rsp,0x20
   140001129:	pop    rbx
   14000112a:	jmp    0x140014afc
   14000112f:	int3   
   140001130:	sub    rsp,0x28
   140001134:	xor    edx,edx
   140001136:	lea    rcx,[rip+0x1dacb]        # 0x14001ec08
   14000113d:	lea    r8d,[rdx+0x28]
   140001141:	call   0x140014b26
   140001146:	and    QWORD PTR [rip+0x1daea],0x0        # 0x14001ec38
   14000114e:	lea    rcx,[rip+0x1dab3]        # 0x14001ec08
   140001155:	and    DWORD PTR [rip+0x1dae4],0x0        # 0x14001ec40
   14000115c:	and    DWORD PTR [rip+0x1dae1],0x0        # 0x14001ec44
   140001163:	and    QWORD PTR [rip+0x1dac5],0x0        # 0x14001ec30
   14000116b:	mov    DWORD PTR [rip+0x1da8b],0x48        # 0x14001ec00
   140001175:	call   0x140008ecc
   14000117a:	test   eax,eax
   14000117c:	jns    0x14000118c
   14000117e:	and    DWORD PTR [rip+0x1da7b],0x0        # 0x14001ec00
   140001185:	mov    BYTE PTR [rip+0x1d8f8],0x1        # 0x14001ea84
   14000118c:	lea    rcx,[rip+0x1459d]        # 0x140015730
   140001193:	add    rsp,0x28
   140001197:	jmp    0x140014afc
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	sub    rsp,0x28
   1400011a4:	xor    edx,edx
   1400011a6:	lea    rcx,[rip+0x1dac3]        # 0x14001ec70
   1400011ad:	lea    r8d,[rdx+0x28]
   1400011b1:	call   0x140014b26
   1400011b6:	and    DWORD PTR [rip+0x1da93],0x0        # 0x14001ec50
   1400011bd:	lea    rax,[rip+0xffffffffffffee3c]        # 0x140000000
   1400011c4:	mov    QWORD PTR [rip+0x1da8d],rax        # 0x14001ec58
   1400011cb:	lea    rcx,[rip+0x1da9e]        # 0x14001ec70
   1400011d2:	lea    rax,[rip+0x1a7df]        # 0x14001b9b8
   1400011d9:	mov    QWORD PTR [rip+0x1da80],rax        # 0x14001ec60
   1400011e0:	lea    rax,[rip+0x1a7d1]        # 0x14001b9b8
   1400011e7:	mov    QWORD PTR [rip+0x1da7a],rax        # 0x14001ec68
   1400011ee:	call   0x140008ecc
   1400011f3:	test   eax,eax
   1400011f5:	jns    0x140001200
   1400011f7:	mov    BYTE PTR [rip+0x1d886],0x1        # 0x14001ea84
   1400011fe:	jmp    0x14000120a
   140001200:	mov    DWORD PTR [rip+0x1da46],0x48        # 0x14001ec50
   14000120a:	lea    rcx,[rip+0x1460f]        # 0x140015820
   140001211:	add    rsp,0x28
   140001215:	jmp    0x140014afc
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	int3   
   140001221:	int3   
   140001222:	int3   
   140001223:	int3   
   140001224:	int3   
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	mov    r11,rsp
   14000122b:	mov    DWORD PTR [r11+0x20],r9d
   14000122f:	sub    rsp,0x48
   140001233:	and    QWORD PTR [r11-0x18],0x0
   140001238:	lea    rax,[r11+0x20]
   14000123c:	movzx  r9d,dx
   140001240:	mov    edx,0x2b
   140001245:	mov    QWORD PTR [r11-0x20],0x4
   14000124d:	mov    QWORD PTR [r11-0x28],rax
   140001251:	call   QWORD PTR [rip+0x14da9]        # 0x140016000
   140001257:	add    rsp,0x48
   14000125b:	ret    
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	int3   
   140001261:	int3   
   140001262:	int3   
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	mov    QWORD PTR [rsp+0x8],rbx
   140001275:	mov    QWORD PTR [rsp+0x10],rsi
   14000127a:	push   rdi
   14000127b:	sub    rsp,0x20
   14000127f:	and    DWORD PTR [r8],0x0
   140001283:	mov    rbx,rdx
   140001286:	sub    ecx,0x4
   140001289:	je     0x1400012a0
   14000128b:	cmp    ecx,0x1
   14000128e:	je     0x140001297
   140001290:	mov    eax,0x57
   140001295:	jmp    0x1400012df
   140001297:	xor    edi,edi
   140001299:	xor    eax,eax
   14000129b:	xor    sil,sil
   14000129e:	jmp    0x1400012c1
   1400012a0:	mov    rcx,r9
   1400012a3:	call   QWORD PTR [rip+0x14d5f]        # 0x140016008
   1400012a9:	mov    rcx,rax
   1400012ac:	mov    rdi,rax
   1400012af:	call   QWORD PTR [rip+0x14d5b]        # 0x140016010
   1400012b5:	mov    rcx,rdi
   1400012b8:	mov    sil,al
   1400012bb:	call   QWORD PTR [rip+0x14d57]        # 0x140016018
   1400012c1:	test   BYTE PTR [rbx+0x1a],0x2
   1400012c5:	je     0x1400012d2
   1400012c7:	mov    rcx,QWORD PTR [rbx+0x10]
   1400012cb:	test   rcx,rcx
   1400012ce:	cmovne rbx,rcx
   1400012d2:	mov    QWORD PTR [rbx+0x10],rdi
   1400012d6:	mov    BYTE PTR [rbx+0x19],sil
   1400012da:	mov    DWORD PTR [rbx+0x1c],eax
   1400012dd:	xor    eax,eax
   1400012df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012e4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400012e9:	add    rsp,0x20
   1400012ed:	pop    rdi
   1400012ee:	ret    
   1400012ef:	int3   
   1400012f0:	int3   
   1400012f1:	int3   
   1400012f2:	int3   
   1400012f3:	int3   
   1400012f4:	int3   
   1400012f5:	int3   
   1400012f6:	int3   
   1400012f7:	int3   
   1400012f8:	mov    rax,rsp
   1400012fb:	push   rbp
   1400012fc:	push   rdi
   1400012fd:	push   r14
   1400012ff:	lea    rbp,[rax-0x5f]
   140001303:	sub    rsp,0xa0
   14000130a:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   140001312:	mov    QWORD PTR [rax+0x10],rbx
   140001316:	mov    QWORD PTR [rax+0x18],rsi
   14000131a:	mov    rbx,rcx
   14000131d:	and    DWORD PTR [rbp+0x67],0x0
   140001321:	lea    r8,[rbp+0x67]
   140001325:	lea    rdx,[rip+0x15a7c]        # 0x140016da8
   14000132c:	lea    rcx,[rbp-0x31]
   140001330:	call   0x14000bf4c
   140001335:	nop
   140001336:	lea    rcx,[rbp-0x19]
   14000133a:	call   0x14000e1c4
   14000133f:	nop
   140001340:	lea    rcx,[rbp-0x19]
   140001344:	call   0x14000e99c
   140001349:	mov    DWORD PTR [rbp+0x67],eax
   14000134c:	test   eax,eax
   14000134e:	jns    0x140001354
   140001350:	xor    edx,edx
   140001352:	jmp    0x1400013b2
   140001354:	mov    ecx,DWORD PTR [rbp-0x11]
   140001357:	test   ecx,ecx
   140001359:	je     0x1400013ad
   14000135b:	sub    ecx,0x1
   14000135e:	je     0x140001367
   140001360:	cmp    ecx,0x1
   140001363:	jne    0x1400013ba
   140001365:	jmp    0x140001350
   140001367:	lea    rcx,[rbp-0x19]
   14000136b:	call   0x14000e370
   140001370:	mov    r14d,eax
   140001373:	mov    edi,0x1
   140001378:	lea    rcx,[rbp-0x19]
   14000137c:	call   0x14000e49c
   140001381:	mov    esi,eax
   140001383:	test   eax,eax
   140001385:	jne    0x140001392
   140001387:	lea    rcx,[rbp-0x19]
   14000138b:	call   0x14000e5c8
   140001390:	mov    edi,eax
   140001392:	test   r14d,r14d
   140001395:	je     0x1400013a6
   140001397:	test   esi,esi
   140001399:	je     0x1400013a2
   14000139b:	mov    edx,0x1
   1400013a0:	jmp    0x1400013b2
   1400013a2:	test   edi,edi
   1400013a4:	je     0x140001350
   1400013a6:	mov    edx,0x2
   1400013ab:	jmp    0x1400013b2
   1400013ad:	mov    edx,0x3
   1400013b2:	mov    rcx,rbx
   1400013b5:	call   0x140001ab0
   1400013ba:	mov    eax,DWORD PTR [rbx]
   1400013bc:	mov    DWORD PTR [rbx+0x4],eax
   1400013bf:	mov    ebx,DWORD PTR [rbp+0x67]
   1400013c2:	lea    rcx,[rbp-0x19]
   1400013c6:	call   0x14000e288
   1400013cb:	nop
   1400013cc:	lea    rcx,[rbp-0x31]
   1400013d0:	call   0x14000bf98
   1400013d5:	mov    eax,ebx
   1400013d7:	lea    r11,[rsp+0xa0]
   1400013df:	mov    rbx,QWORD PTR [r11+0x28]
   1400013e3:	mov    rsi,QWORD PTR [r11+0x30]
   1400013e7:	mov    rsp,r11
   1400013ea:	pop    r14
   1400013ec:	pop    rdi
   1400013ed:	pop    rbp
   1400013ee:	ret    
   1400013ef:	int3   
   1400013f0:	int3   
   1400013f1:	int3   
   1400013f2:	int3   
   1400013f3:	int3   
   1400013f4:	int3   
   1400013f5:	int3   
   1400013f6:	int3   
   1400013f7:	int3   
   1400013f8:	rex push rbx
   1400013fa:	sub    rsp,0x30
   1400013fe:	mov    rbx,rcx
   140001401:	lea    rdx,[rip+0x159c0]        # 0x140016dc8
   140001408:	lea    rcx,[rsp+0x20]
   14000140d:	xor    r8d,r8d
   140001410:	call   0x14000bf4c
   140001415:	lea    rcx,[rsp+0x20]
   14000141a:	call   0x14000bf98
   14000141f:	lea    rcx,[rbx+0x88]
   140001426:	add    rsp,0x30
   14000142a:	pop    rbx
   14000142b:	jmp    0x14000e288
   140001430:	int3   
   140001431:	int3   
   140001432:	int3   
   140001433:	int3   
   140001434:	int3   
   140001435:	int3   
   140001436:	int3   
   140001437:	int3   
   140001438:	mov    rax,rsp
   14000143b:	push   rbp
   14000143c:	push   r12
   14000143e:	push   r14
   140001440:	lea    rbp,[rax-0x438]
   140001447:	sub    rsp,0x520
   14000144e:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140001457:	mov    QWORD PTR [rax+0x10],rbx
   14000145b:	mov    QWORD PTR [rax+0x18],rsi
   14000145f:	mov    QWORD PTR [rax+0x20],rdi
   140001463:	mov    rax,QWORD PTR [rip+0x1cba6]        # 0x14001e010
   14000146a:	xor    rax,rsp
   14000146d:	mov    QWORD PTR [rbp+0x418],rax
   140001474:	mov    rbx,rcx
   140001477:	xor    r14d,r14d
   14000147a:	mov    QWORD PTR [rip+0x1d63f],r14        # 0x14001eac0
   140001481:	mov    QWORD PTR [rip+0x1d628],r14        # 0x14001eab0
   140001488:	mov    QWORD PTR [rip+0x1d635],0x1        # 0x14001eac8
   140001493:	lea    rax,[rip+0x15a1e]        # 0x140016eb8
   14000149a:	mov    QWORD PTR [rip+0x1d637],rax        # 0x14001ead8
   1400014a1:	lea    rdi,[rip+0x1d608]        # 0x14001eab0
   1400014a8:	mov    QWORD PTR [rip+0x1cb71],rdi        # 0x14001e020
   1400014af:	lea    rsi,[rip+0x1d622]        # 0x14001ead8
   1400014b6:	mov    r8,QWORD PTR [rsi]
   1400014b9:	add    rsi,0x8
   1400014bd:	mov    QWORD PTR [rsp+0x48],r8
   1400014c2:	mov    QWORD PTR [rsp+0x50],r14
   1400014c7:	mov    QWORD PTR [rdi+0x20],r8
   1400014cb:	lea    rax,[rdi+0x8]
   1400014cf:	mov    QWORD PTR [rsp+0x38],rax
   1400014d4:	mov    QWORD PTR [rsp+0x30],r14
   1400014d9:	mov    QWORD PTR [rsp+0x28],r14
   1400014de:	lea    rax,[rsp+0x48]
   1400014e3:	mov    QWORD PTR [rsp+0x20],rax
   1400014e8:	mov    r9d,0x1
   1400014ee:	mov    rdx,rdi
   1400014f1:	lea    rcx,[rip+0xfffffffffffffd78]        # 0x140001270
   1400014f8:	call   QWORD PTR [rip+0x14b22]        # 0x140016020
   1400014fe:	mov    rdi,QWORD PTR [rdi]
   140001501:	test   rdi,rdi
   140001504:	jne    0x1400014b6
   140001506:	mov    DWORD PTR [rsp+0x58],r14d
   14000150b:	lea    r8,[rsp+0x58]
   140001510:	lea    rdx,[rip+0x158c9]        # 0x140016de0
   140001517:	lea    rcx,[rsp+0x60]
   14000151c:	call   0x14000bf4c
   140001521:	nop
   140001522:	mov    edi,r14d
   140001525:	lea    rcx,[rbx+0x88]
   14000152c:	call   0x14000e99c
   140001531:	lea    rcx,[rbp-0x80]
   140001535:	call   0x140001b84
   14000153a:	lea    rax,[rip+0x15637]        # 0x140016b78
   140001541:	mov    QWORD PTR [rbp-0x80],rax
   140001545:	mov    DWORD PTR [rsp+0x40],r14d
   14000154a:	lea    r8,[rsp+0x40]
   14000154f:	lea    rdx,[rip+0x15cfa]        # 0x140017250
   140001556:	lea    rcx,[rsp+0x48]
   14000155b:	call   0x14000bf4c
   140001560:	mov    sil,0x4
   140001563:	lea    r12,[rip+0x1cab6]        # 0x14001e020
   14000156a:	test   rbx,rbx
   14000156d:	jne    0x1400015a2
   14000156f:	mov    DWORD PTR [rsp+0x40],0x80004003
   140001577:	mov    rcx,QWORD PTR [rip+0x1caa2]        # 0x14001e020
   14000157e:	cmp    rcx,r12
   140001581:	je     0x1400015a2
   140001583:	test   BYTE PTR [rcx+0x1c],sil
   140001587:	je     0x1400015a2
   140001589:	lea    edx,[rbx+0xa]
   14000158c:	mov    r9d,0x80004003
   140001592:	lea    r8,[rip+0x15f2f]        # 0x1400174c8
   140001599:	mov    rcx,QWORD PTR [rcx+0x10]
   14000159d:	call   0x140001228
   1400015a2:	mov    QWORD PTR [rbp-0x30],rbx
   1400015a6:	mov    QWORD PTR [rbp-0x18],r14
   1400015aa:	lea    rcx,[rsp+0x48]
   1400015af:	call   0x14000bf98
   1400015b4:	nop
   1400015b5:	lea    rcx,[rbp+0xe0]
   1400015bc:	call   0x140001b84
   1400015c1:	lea    rax,[rip+0x15618]        # 0x140016be0
   1400015c8:	mov    QWORD PTR [rbp+0xe0],rax
   1400015cf:	lea    rcx,[rbp+0x168]
   1400015d6:	call   0x14000e1c4
   1400015db:	mov    DWORD PTR [rsp+0x40],r14d
   1400015e0:	lea    r8,[rsp+0x40]
   1400015e5:	lea    rdx,[rip+0x15eec]        # 0x1400174d8
   1400015ec:	lea    rcx,[rsp+0x48]
   1400015f1:	call   0x14000bf4c
   1400015f6:	mov    QWORD PTR [rbp+0x1d0],r14
   1400015fd:	mov    QWORD PTR [rbp+0x1d8],r14
   140001604:	mov    DWORD PTR [rbp+0x1e0],r14d
   14000160b:	test   rbx,rbx
   14000160e:	jne    0x140001643
   140001610:	mov    DWORD PTR [rsp+0x40],0x80004003
   140001618:	mov    rcx,QWORD PTR [rip+0x1ca01]        # 0x14001e020
   14000161f:	cmp    rcx,r12
   140001622:	je     0x140001643
   140001624:	test   BYTE PTR [rcx+0x1c],sil
   140001628:	je     0x140001643
   14000162a:	lea    edx,[rbx+0xa]
   14000162d:	mov    r9d,0x80004003
   140001633:	lea    r8,[rip+0x161fe]        # 0x140017838
   14000163a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000163e:	call   0x140001228
   140001643:	mov    QWORD PTR [rbp+0x130],rbx
   14000164a:	mov    QWORD PTR [rbp+0x160],r14
   140001651:	mov    QWORD PTR [rbp+0x1e8],r14
   140001658:	mov    DWORD PTR [rbp+0x158],r14d
   14000165f:	mov    ecx,0x34
   140001664:	call   QWORD PTR [rip+0x14f06]        # 0x140016570
   14000166a:	mov    QWORD PTR [rbp+0x148],rax
   140001671:	or     DWORD PTR [rbp+0x1c8],0xffffffff
   140001678:	mov    QWORD PTR [rbp+0x3f0],r14
   14000167f:	mov    QWORD PTR [rbp+0x150],r14
   140001686:	mov    DWORD PTR [rsp+0x44],r14d
   14000168b:	mov    r9d,0x2
   140001691:	lea    r8,[rsp+0x44]
   140001696:	mov    edx,0x2000000d
   14000169b:	xor    ecx,ecx
   14000169d:	call   QWORD PTR [rip+0x14bdd]        # 0x140016280
   1400016a3:	mov    eax,r14d
   1400016a6:	cmp    DWORD PTR [rsp+0x44],r14d
   1400016ab:	sete   al
   1400016ae:	mov    DWORD PTR [rbp+0x3f8],eax
   1400016b4:	lea    rcx,[rsp+0x48]
   1400016b9:	call   0x14000bf98
   1400016be:	nop
   1400016bf:	lea    rcx,[rbp-0x10]
   1400016c3:	call   0x140001b84
   1400016c8:	lea    rax,[rip+0x15579]        # 0x140016c48
   1400016cf:	mov    QWORD PTR [rbp-0x10],rax
   1400016d3:	lea    rcx,[rbp+0x60]
   1400016d7:	call   0x14000e1c4
   1400016dc:	mov    QWORD PTR [rbp+0x58],r14
   1400016e0:	mov    DWORD PTR [rsp+0x44],r14d
   1400016e5:	lea    r8,[rsp+0x44]
   1400016ea:	lea    rdx,[rip+0x16157]        # 0x140017848
   1400016f1:	lea    rcx,[rsp+0x48]
   1400016f6:	call   0x14000bf4c
   1400016fb:	test   rbx,rbx
   1400016fe:	jne    0x140001735
   140001700:	mov    DWORD PTR [rsp+0x44],0x80004003
   140001708:	mov    rcx,QWORD PTR [rip+0x1c911]        # 0x14001e020
   14000170f:	cmp    rcx,r12
   140001712:	je     0x140001744
   140001714:	test   BYTE PTR [rcx+0x1c],sil
   140001718:	je     0x140001744
   14000171a:	lea    edx,[rbx+0xa]
   14000171d:	mov    r9d,0x80004003
   140001723:	lea    r8,[rip+0x1642e]        # 0x140017b58
   14000172a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000172e:	call   0x140001228
   140001733:	jmp    0x140001744
   140001735:	mov    QWORD PTR [rbp+0xd0],r14
   14000173c:	mov    QWORD PTR [rbp+0x58],r14
   140001740:	mov    QWORD PTR [rbp+0x40],rbx
   140001744:	lea    rcx,[rsp+0x48]
   140001749:	call   0x14000bf98
   14000174e:	nop
   14000174f:	lea    rax,[rbp-0x80]
   140001753:	mov    QWORD PTR [rbx+0x70],rax
   140001757:	lea    rax,[rbp+0xe0]
   14000175e:	mov    QWORD PTR [rbx+0x78],rax
   140001762:	lea    rax,[rbp-0x10]
   140001766:	mov    QWORD PTR [rbx+0x80],rax
   14000176d:	lea    rcx,[rbp-0x80]
   140001771:	call   0x140001c30
   140001776:	mov    QWORD PTR [rbp+0x400],rax
   14000177d:	lea    rcx,[rbp+0xe0]
   140001784:	call   0x140001c30
   140001789:	mov    QWORD PTR [rbp+0x408],rax
   140001790:	lea    rcx,[rbp-0x10]
   140001794:	call   0x140001c30
   140001799:	mov    rdx,rax
   14000179c:	mov    QWORD PTR [rbp+0x410],rax
   1400017a3:	lea    rcx,[rbx+0x10]
   1400017a7:	mov    DWORD PTR [rcx],0x60
   1400017ad:	mov    rax,QWORD PTR [rbx+0x8]
   1400017b1:	mov    QWORD PTR [rbx+0x20],rax
   1400017b5:	mov    QWORD PTR [rbx+0x18],r14
   1400017b9:	lea    rax,[rbp+0x400]
   1400017c0:	mov    QWORD PTR [rbx+0x48],rax
   1400017c4:	mov    DWORD PTR [rbx+0x14],0x4024
   1400017cb:	mov    QWORD PTR [rbx+0x30],0x67
   1400017d3:	mov    QWORD PTR [rbx+0x28],0x6b
   1400017db:	mov    DWORD PTR [rbx+0x40],r14d
   1400017df:	mov    DWORD PTR [rbx+0x38],0x3
   1400017e6:	cmp    QWORD PTR [rbp+0x400],r14
   1400017ed:	je     0x14000180d
   1400017ef:	cmp    QWORD PTR [rbp+0x408],r14
   1400017f6:	je     0x14000180d
   1400017f8:	test   rdx,rdx
   1400017fb:	je     0x14000180d
   1400017fd:	call   QWORD PTR [rip+0x1487d]        # 0x140016080
   140001803:	mov    edi,r14d
   140001806:	test   rax,rax
   140001809:	setg   dil
   14000180d:	mov    QWORD PTR [rbx+0x70],r14
   140001811:	mov    QWORD PTR [rbx+0x78],r14
   140001815:	mov    QWORD PTR [rbx+0x80],r14
   14000181c:	lea    rax,[rip+0x15425]        # 0x140016c48
   140001823:	mov    QWORD PTR [rbp-0x10],rax
   140001827:	mov    rbx,QWORD PTR [rbp+0x58]
   14000182b:	test   rbx,rbx
   14000182e:	je     0x140001844
   140001830:	mov    rcx,rbx
   140001833:	call   0x14000f8d8
   140001838:	mov    rcx,rbx
   14000183b:	call   0x140014254
   140001840:	mov    QWORD PTR [rbp+0x58],r14
   140001844:	lea    rcx,[rbp+0x60]
   140001848:	call   0x14000e288
   14000184d:	nop
   14000184e:	lea    rcx,[rbp-0x10]
   140001852:	call   0x140001be8
   140001857:	nop
   140001858:	lea    rcx,[rbp+0x168]
   14000185f:	call   0x14000e288
   140001864:	nop
   140001865:	lea    rcx,[rbp+0xe0]
   14000186c:	call   0x140001be8
   140001871:	nop
   140001872:	lea    rax,[rip+0x152ff]        # 0x140016b78
   140001879:	mov    QWORD PTR [rbp-0x80],rax
   14000187d:	xor    r8d,r8d
   140001880:	lea    rdx,[rip+0x159f9]        # 0x140017280
   140001887:	lea    rcx,[rsp+0x48]
   14000188c:	call   0x14000bf4c
   140001891:	lea    rcx,[rbp-0x80]
   140001895:	call   0x140003760
   14000189a:	lea    rcx,[rsp+0x48]
   14000189f:	call   0x14000bf98
   1400018a4:	lea    rcx,[rbp-0x80]
   1400018a8:	call   0x140001be8
   1400018ad:	nop
   1400018ae:	lea    rcx,[rsp+0x60]
   1400018b3:	call   0x14000bf98
   1400018b8:	mov    eax,edi
   1400018ba:	mov    rcx,QWORD PTR [rbp+0x418]
   1400018c1:	xor    rcx,rsp
   1400018c4:	call   0x1400146a0
   1400018c9:	lea    r11,[rsp+0x520]
   1400018d1:	mov    rbx,QWORD PTR [r11+0x28]
   1400018d5:	mov    rsi,QWORD PTR [r11+0x30]
   1400018d9:	mov    rdi,QWORD PTR [r11+0x38]
   1400018dd:	mov    rsp,r11
   1400018e0:	pop    r14
   1400018e2:	pop    r12
   1400018e4:	pop    rbp
   1400018e5:	ret    
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	mov    QWORD PTR [rsp+0x8],rcx
   1400018f1:	push   rbx
   1400018f2:	sub    rsp,0x30
   1400018f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400018ff:	mov    rbx,rcx
   140001902:	add    rcx,0x88
   140001909:	call   0x14000e288
   14000190e:	nop
   14000190f:	mov    rcx,rbx
   140001912:	add    rsp,0x30
   140001916:	pop    rbx
   140001917:	jmp    0x140001be8
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	int3   
   140001921:	int3   
   140001922:	int3   
   140001923:	int3   
   140001924:	mov    rax,rsp
   140001927:	push   rbp
   140001928:	lea    rbp,[rax-0x5f]
   14000192c:	sub    rsp,0xa0
   140001933:	mov    QWORD PTR [rbp-0x29],0xfffffffffffffffe
   14000193b:	mov    QWORD PTR [rax+0x10],rbx
   14000193f:	mov    QWORD PTR [rax+0x18],rdi
   140001943:	mov    rbx,rcx
   140001946:	and    DWORD PTR [rbp+0x67],0x0
   14000194a:	lea    r8,[rbp+0x67]
   14000194e:	lea    rdx,[rip+0x154c3]        # 0x140016e18
   140001955:	lea    rcx,[rbp-0x21]
   140001959:	call   0x14000bf4c
   14000195e:	nop
   14000195f:	mov    rcx,rbx
   140001962:	call   0x140001a78
   140001967:	mov    edi,eax
   140001969:	cmp    eax,DWORD PTR [rbx+0x4]
   14000196c:	jne    0x140001978
   14000196e:	cmp    DWORD PTR [rbx+0x4],0x0
   140001972:	jne    0x140001a12
   140001978:	lea    rcx,[rbp-0x9]
   14000197c:	call   0x14000e1c4
   140001981:	nop
   140001982:	lea    rcx,[rbp-0x9]
   140001986:	call   0x14000e99c
   14000198b:	mov    DWORD PTR [rbp+0x67],eax
   14000198e:	test   eax,eax
   140001990:	js     0x140001a09
   140001992:	xor    edx,edx
   140001994:	cmp    edi,0x3
   140001997:	setne  dl
   14000199a:	lea    rcx,[rbp-0x9]
   14000199e:	call   0x14000ed6c
   1400019a3:	mov    ecx,DWORD PTR [rbp+0x67]
   1400019a6:	test   ecx,ecx
   1400019a8:	js     0x140001a09
   1400019aa:	test   edi,edi
   1400019ac:	je     0x1400019d3
   1400019ae:	cmp    edi,0x1
   1400019b1:	jne    0x1400019f9
   1400019b3:	mov    edx,edi
   1400019b5:	mov    r8d,edx
   1400019b8:	lea    rcx,[rbp-0x9]
   1400019bc:	call   0x14000f448
   1400019c1:	mov    DWORD PTR [rbp+0x67],eax
   1400019c4:	test   eax,eax
   1400019c6:	js     0x140001a09
   1400019c8:	lea    rcx,[rbp-0x9]
   1400019cc:	call   0x14000f304
   1400019d1:	jmp    0x1400019e4
   1400019d3:	mov    edx,0x1
   1400019d8:	mov    r8d,edx
   1400019db:	lea    rcx,[rbp-0x9]
   1400019df:	call   0x14000f448
   1400019e4:	test   eax,eax
   1400019e6:	mov    DWORD PTR [rbp+0x67],eax
   1400019e9:	js     0x140001a09
   1400019eb:	lea    rcx,[rbp-0x9]
   1400019ef:	call   0x14000f1c4
   1400019f4:	mov    DWORD PTR [rbp+0x67],eax
   1400019f7:	mov    ecx,eax
   1400019f9:	test   ecx,ecx
   1400019fb:	js     0x140001a09
   1400019fd:	lea    rcx,[rbp-0x9]
   140001a01:	call   0x14000ea8c
   140001a06:	mov    DWORD PTR [rbp+0x67],eax
   140001a09:	lea    rcx,[rbp-0x9]
   140001a0d:	call   0x14000e288
   140001a12:	mov    ebx,DWORD PTR [rbp+0x67]
   140001a15:	lea    rcx,[rbp-0x21]
   140001a19:	call   0x14000bf98
   140001a1e:	mov    eax,ebx
   140001a20:	lea    r11,[rsp+0xa0]
   140001a28:	mov    rbx,QWORD PTR [r11+0x18]
   140001a2c:	mov    rdi,QWORD PTR [r11+0x20]
   140001a30:	mov    rsp,r11
   140001a33:	pop    rbp
   140001a34:	ret    
   140001a35:	int3   
   140001a36:	int3   
   140001a37:	int3   
   140001a38:	int3   
   140001a39:	int3   
   140001a3a:	int3   
   140001a3b:	int3   
   140001a3c:	rex push rbx
   140001a3e:	sub    rsp,0x30
   140001a42:	mov    rbx,rcx
   140001a45:	lea    rdx,[rip+0x153e4]        # 0x140016e30
   140001a4c:	lea    rcx,[rsp+0x20]
   140001a51:	xor    r8d,r8d
   140001a54:	call   0x14000bf4c
   140001a59:	mov    rbx,QWORD PTR [rbx+0x8]
   140001a5d:	lea    rcx,[rsp+0x20]
   140001a62:	call   0x14000bf98
   140001a67:	mov    rax,rbx
   140001a6a:	add    rsp,0x30
   140001a6e:	pop    rbx
   140001a6f:	ret    
   140001a70:	int3   
   140001a71:	int3   
   140001a72:	int3   
   140001a73:	int3   
   140001a74:	int3   
   140001a75:	int3   
   140001a76:	int3   
   140001a77:	int3   
   140001a78:	rex push rbx
   140001a7a:	sub    rsp,0x30
   140001a7e:	mov    rbx,rcx
   140001a81:	lea    rdx,[rip+0x153c0]        # 0x140016e48
   140001a88:	lea    rcx,[rsp+0x20]
   140001a8d:	xor    r8d,r8d
   140001a90:	call   0x14000bf4c
   140001a95:	mov    ebx,DWORD PTR [rbx]
   140001a97:	lea    rcx,[rsp+0x20]
   140001a9c:	call   0x14000bf98
   140001aa1:	mov    eax,ebx
   140001aa3:	add    rsp,0x30
   140001aa7:	pop    rbx
   140001aa8:	ret    
   140001aa9:	int3   
   140001aaa:	int3   
   140001aab:	int3   
   140001aac:	int3   
   140001aad:	int3   
   140001aae:	int3   
   140001aaf:	int3   
   140001ab0:	mov    rax,rsp
   140001ab3:	push   rdi
   140001ab4:	push   r14
   140001ab6:	push   r15
   140001ab8:	sub    rsp,0x40
   140001abc:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140001ac4:	mov    QWORD PTR [rax+0x8],rbx
   140001ac8:	mov    QWORD PTR [rax+0x18],rsi
   140001acc:	mov    ebx,edx
   140001ace:	mov    r15,rcx
   140001ad1:	and    DWORD PTR [rax+0x10],0x0
   140001ad5:	lea    r8,[rax+0x10]
   140001ad9:	lea    rdx,[rip+0x15388]        # 0x140016e68
   140001ae0:	lea    rcx,[rax-0x30]
   140001ae4:	call   0x14000bf4c
   140001ae9:	nop
   140001aea:	mov    esi,0x3
   140001aef:	cmp    ebx,esi
   140001af1:	jbe    0x140001b2d
   140001af3:	mov    DWORD PTR [rsp+0x68],0x80070057
   140001afb:	lea    rax,[rip+0x1c51e]        # 0x14001e020
   140001b02:	mov    rcx,QWORD PTR [rip+0x1c517]        # 0x14001e020
   140001b09:	cmp    rcx,rax
   140001b0c:	je     0x140001b2d
   140001b0e:	test   BYTE PTR [rcx+0x1c],0x4
   140001b12:	je     0x140001b2d
   140001b14:	lea    edx,[rsi+0x7]
   140001b17:	mov    r9d,0x80070057
   140001b1d:	lea    r8,[rip+0x15384]        # 0x140016ea8
   140001b24:	mov    rcx,QWORD PTR [rcx+0x10]
   140001b28:	call   0x140001228
   140001b2d:	mov    DWORD PTR [r15],ebx
   140001b30:	lea    rdi,[r15+0x70]
   140001b34:	mov    r14,QWORD PTR [rdi]
   140001b37:	test   r14,r14
   140001b3a:	je     0x140001b54
   140001b3c:	mov    rax,QWORD PTR [r14]
   140001b3f:	mov    rbx,QWORD PTR [rax+0x60]
   140001b43:	mov    rcx,rbx
   140001b46:	call   QWORD PTR [rip+0x14bac]        # 0x1400166f8
   140001b4c:	mov    edx,DWORD PTR [r15]
   140001b4f:	mov    rcx,r14
   140001b52:	call   rbx
   140001b54:	add    rdi,0x8
   140001b58:	sub    rsi,0x1
   140001b5c:	jne    0x140001b34
   140001b5e:	lea    rcx,[rsp+0x28]
   140001b63:	call   0x14000bf98
   140001b68:	mov    rbx,QWORD PTR [rsp+0x60]
   140001b6d:	mov    rsi,QWORD PTR [rsp+0x70]
   140001b72:	add    rsp,0x40
   140001b76:	pop    r15
   140001b78:	pop    r14
   140001b7a:	pop    rdi
   140001b7b:	ret    
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	int3   
   140001b81:	int3   
   140001b82:	int3   
   140001b83:	int3   
   140001b84:	rex push rbx
   140001b86:	sub    rsp,0x30
   140001b8a:	and    DWORD PTR [rsp+0x40],0x0
   140001b8f:	lea    rax,[rip+0x14f7a]        # 0x140016b10
   140001b96:	mov    QWORD PTR [rcx],rax
   140001b99:	lea    r8,[rsp+0x40]
   140001b9e:	mov    rbx,rcx
   140001ba1:	lea    rdx,[rip+0x15330]        # 0x140016ed8
   140001ba8:	lea    rcx,[rsp+0x20]
   140001bad:	call   0x14000bf4c
   140001bb2:	and    DWORD PTR [rbx+0x60],0x0
   140001bb6:	lea    rcx,[rbx+0x8]
   140001bba:	xor    edx,edx
   140001bbc:	lea    r8d,[rdx+0x20]
   140001bc0:	call   0x140014b26
   140001bc5:	mov    rcx,rbx
   140001bc8:	call   0x140002b70
   140001bcd:	lea    rcx,[rsp+0x20]
   140001bd2:	call   0x14000bf98
   140001bd7:	mov    rax,rbx
   140001bda:	add    rsp,0x30
   140001bde:	pop    rbx
   140001bdf:	ret    
   140001be0:	int3   
   140001be1:	int3   
   140001be2:	int3   
   140001be3:	int3   
   140001be4:	int3   
   140001be5:	int3   
   140001be6:	int3   
   140001be7:	int3   
   140001be8:	rex push rbx
   140001bea:	sub    rsp,0x30
   140001bee:	lea    rax,[rip+0x14f1b]        # 0x140016b10
   140001bf5:	mov    rbx,rcx
   140001bf8:	mov    QWORD PTR [rcx],rax
   140001bfb:	lea    rdx,[rip+0x152f6]        # 0x140016ef8
   140001c02:	lea    rcx,[rsp+0x20]
   140001c07:	xor    r8d,r8d
   140001c0a:	call   0x14000bf4c
   140001c0f:	mov    rcx,rbx
   140001c12:	call   0x140002df8
   140001c17:	lea    rcx,[rsp+0x20]
   140001c1c:	call   0x14000bf98
   140001c21:	add    rsp,0x30
   140001c25:	pop    rbx
   140001c26:	ret    
   140001c27:	int3   
   140001c28:	int3   
   140001c29:	int3   
   140001c2a:	int3   
   140001c2b:	int3   
   140001c2c:	int3   
   140001c2d:	int3   
   140001c2e:	int3   
   140001c2f:	int3   
   140001c30:	mov    rax,rsp
   140001c33:	push   rbp
   140001c34:	lea    rbp,[rax-0x5f]
   140001c38:	sub    rsp,0xb0
   140001c3f:	mov    QWORD PTR [rbp-0x29],0xfffffffffffffffe
   140001c47:	mov    QWORD PTR [rax+0x10],rbx
   140001c4b:	mov    QWORD PTR [rax+0x18],rdi
   140001c4f:	mov    rdi,rcx
   140001c52:	and    DWORD PTR [rbp+0x67],0x0
   140001c56:	lea    r8,[rbp+0x67]
   140001c5a:	lea    rdx,[rip+0x152b7]        # 0x140016f18
   140001c61:	lea    rcx,[rbp-0x39]
   140001c65:	call   0x14000bf4c
   140001c6a:	nop
   140001c6b:	mov    DWORD PTR [rbp-0x19],0x68
   140001c72:	mov    rcx,QWORD PTR [rdi+0x50]
   140001c76:	call   0x140001a3c
   140001c7b:	mov    QWORD PTR [rbp-0x11],rax
   140001c7f:	mov    DWORD PTR [rbp-0x15],0x1000
   140001c86:	mov    QWORD PTR [rbp+0x17],rdi
   140001c8a:	lea    rax,[rip+0x60f]        # 0x1400022a0
   140001c91:	mov    QWORD PTR [rbp+0xf],rax
   140001c95:	mov    rax,QWORD PTR [rdi]
   140001c98:	mov    rbx,QWORD PTR [rax]
   140001c9b:	mov    rcx,rbx
   140001c9e:	call   QWORD PTR [rip+0x14a54]        # 0x1400166f8
   140001ca4:	lea    rdx,[rbp-0x19]
   140001ca8:	mov    rcx,rdi
   140001cab:	call   rbx
   140001cad:	lea    rcx,[rbp-0x19]
   140001cb1:	call   QWORD PTR [rip+0x143c1]        # 0x140016078
   140001cb7:	mov    QWORD PTR [rdi+0x58],rax
   140001cbb:	test   rax,rax
   140001cbe:	jne    0x140001cfb
   140001cc0:	mov    DWORD PTR [rbp+0x67],0x80004005
   140001cc7:	lea    rax,[rip+0x1c352]        # 0x14001e020
   140001cce:	mov    rcx,QWORD PTR [rip+0x1c34b]        # 0x14001e020
   140001cd5:	cmp    rcx,rax
   140001cd8:	je     0x140001cfb
   140001cda:	test   BYTE PTR [rcx+0x1c],0x4
   140001cde:	je     0x140001cfb
   140001ce0:	mov    edx,0xa
   140001ce5:	mov    r9d,0x80004005
   140001ceb:	lea    r8,[rip+0x1554e]        # 0x140017240
   140001cf2:	mov    rcx,QWORD PTR [rcx+0x10]
   140001cf6:	call   0x140001228
   140001cfb:	mov    rbx,QWORD PTR [rdi+0x58]
   140001cff:	lea    rcx,[rbp-0x39]
   140001d03:	call   0x14000bf98
   140001d08:	mov    rax,rbx
   140001d0b:	lea    r11,[rsp+0xb0]
   140001d13:	mov    rbx,QWORD PTR [r11+0x18]
   140001d17:	mov    rdi,QWORD PTR [r11+0x20]
   140001d1b:	mov    rsp,r11
   140001d1e:	pop    rbp
   140001d1f:	ret    
   140001d20:	int3   
   140001d21:	int3   
   140001d22:	int3   
   140001d23:	int3   
   140001d24:	int3   
   140001d25:	int3   
   140001d26:	int3   
   140001d27:	int3   
   140001d28:	rex push rbx
   140001d2a:	push   rsi
   140001d2b:	push   rdi
   140001d2c:	sub    rsp,0x260
   140001d33:	mov    rax,QWORD PTR [rip+0x1c2d6]        # 0x14001e010
   140001d3a:	xor    rax,rsp
   140001d3d:	mov    QWORD PTR [rsp+0x250],rax
   140001d45:	and    DWORD PTR [rsp+0x30],0x0
   140001d4a:	mov    ebx,r8d
   140001d4d:	mov    esi,edx
   140001d4f:	lea    r8,[rsp+0x30]
   140001d54:	mov    rdi,rcx
   140001d57:	lea    rdx,[rip+0x151da]        # 0x140016f38
   140001d5e:	lea    rcx,[rsp+0x38]
   140001d63:	call   0x14000bf4c
   140001d68:	mov    rcx,QWORD PTR [rdi+0x50]
   140001d6c:	call   0x140001a3c
   140001d71:	mov    rcx,rax
   140001d74:	lea    r8,[rsp+0x50]
   140001d79:	lea    rax,[rsp+0x30]
   140001d7e:	mov    r9d,0xfa
   140001d84:	mov    edx,ebx
   140001d86:	mov    QWORD PTR [rsp+0x20],rax
   140001d8b:	call   0x14000ce44
   140001d90:	cmp    DWORD PTR [rsp+0x30],0x0
   140001d95:	jl     0x140001df5
   140001d97:	mov    rcx,QWORD PTR [rdi+0x48]
   140001d9b:	lea    rax,[rsp+0x50]
   140001da0:	xor    r9d,r9d
   140001da3:	mov    QWORD PTR [rsp+0x20],rax
   140001da8:	mov    edx,esi
   140001daa:	lea    r8d,[r9+0xc]
   140001dae:	call   QWORD PTR [rip+0x145c4]        # 0x140016378
   140001db4:	test   rax,rax
   140001db7:	jne    0x140001df5
   140001db9:	mov    DWORD PTR [rsp+0x30],0x80004005
   140001dc1:	mov    rcx,QWORD PTR [rip+0x1c258]        # 0x14001e020
   140001dc8:	lea    rax,[rip+0x1c251]        # 0x14001e020
   140001dcf:	cmp    rcx,rax
   140001dd2:	je     0x140001df5
   140001dd4:	test   BYTE PTR [rcx+0x1c],0x4
   140001dd8:	je     0x140001df5
   140001dda:	mov    rcx,QWORD PTR [rcx+0x10]
   140001dde:	lea    r8,[rip+0x1545b]        # 0x140017240
   140001de5:	mov    edx,0xd
   140001dea:	mov    r9d,0x80004005
   140001df0:	call   0x140001228
   140001df5:	mov    ebx,DWORD PTR [rsp+0x30]
   140001df9:	lea    rcx,[rsp+0x38]
   140001dfe:	call   0x14000bf98
   140001e03:	mov    eax,ebx
   140001e05:	mov    rcx,QWORD PTR [rsp+0x250]
   140001e0d:	xor    rcx,rsp
   140001e10:	call   0x1400146a0
   140001e15:	add    rsp,0x260
   140001e1c:	pop    rdi
   140001e1d:	pop    rsi
   140001e1e:	pop    rbx
   140001e1f:	ret    
   140001e20:	int3   
   140001e21:	int3   
   140001e22:	int3   
   140001e23:	int3   
   140001e24:	int3   
   140001e25:	int3   
   140001e26:	int3   
   140001e27:	int3   
   140001e28:	mov    rax,rsp
   140001e2b:	mov    QWORD PTR [rax+0x10],rbx
   140001e2f:	mov    QWORD PTR [rax+0x18],rsi
   140001e33:	push   rdi
   140001e34:	sub    rsp,0x40
   140001e38:	and    DWORD PTR [rax+0x8],0x0
   140001e3c:	mov    rsi,r8
   140001e3f:	mov    ebx,edx
   140001e41:	lea    r8,[rax+0x8]
   140001e45:	mov    rdi,rcx
   140001e48:	lea    rdx,[rip+0x15109]        # 0x140016f58
   140001e4f:	lea    rcx,[rax-0x18]
   140001e53:	call   0x14000bf4c
   140001e58:	mov    rcx,QWORD PTR [rdi+0x48]
   140001e5c:	mov    r9,rsi
   140001e5f:	mov    r8d,0x30
   140001e65:	mov    QWORD PTR [rsp+0x20],0x1
   140001e6e:	mov    edx,ebx
   140001e70:	call   QWORD PTR [rip+0x14502]        # 0x140016378
   140001e76:	mov    rcx,QWORD PTR [rdi+0x48]
   140001e7a:	xor    r9d,r9d
   140001e7d:	and    QWORD PTR [rsp+0x20],0x0
   140001e83:	mov    edx,ebx
   140001e85:	lea    r8d,[r9+0x31]
   140001e89:	call   QWORD PTR [rip+0x144e9]        # 0x140016378
   140001e8f:	cmp    rax,rsi
   140001e92:	je     0x140001ed0
   140001e94:	mov    DWORD PTR [rsp+0x50],0x80004005
   140001e9c:	mov    rcx,QWORD PTR [rip+0x1c17d]        # 0x14001e020
   140001ea3:	lea    rax,[rip+0x1c176]        # 0x14001e020
   140001eaa:	cmp    rcx,rax
   140001ead:	je     0x140001ed0
   140001eaf:	test   BYTE PTR [rcx+0x1c],0x4
   140001eb3:	je     0x140001ed0
   140001eb5:	mov    rcx,QWORD PTR [rcx+0x10]
   140001eb9:	lea    r8,[rip+0x15380]        # 0x140017240
   140001ec0:	mov    edx,0xe
   140001ec5:	mov    r9d,0x80004005
   140001ecb:	call   0x140001228
   140001ed0:	mov    ebx,DWORD PTR [rsp+0x50]
   140001ed4:	lea    rcx,[rsp+0x30]
   140001ed9:	call   0x14000bf98
   140001ede:	mov    rsi,QWORD PTR [rsp+0x60]
   140001ee3:	mov    eax,ebx
   140001ee5:	mov    rbx,QWORD PTR [rsp+0x58]
   140001eea:	add    rsp,0x40
   140001eee:	pop    rdi
   140001eef:	ret    
   140001ef0:	int3   
   140001ef1:	int3   
   140001ef2:	int3   
   140001ef3:	int3   
   140001ef4:	int3   
   140001ef5:	int3   
   140001ef6:	int3   
   140001ef7:	int3   
   140001ef8:	mov    rax,rsp
   140001efb:	mov    QWORD PTR [rax+0x18],rbx
   140001eff:	mov    DWORD PTR [rax+0x10],edx
   140001f02:	push   rbp
   140001f03:	push   rsi
   140001f04:	push   rdi
   140001f05:	push   r12
   140001f07:	push   r13
   140001f09:	push   r14
   140001f0b:	push   r15
   140001f0d:	lea    rbp,[rax-0x5f]
   140001f11:	sub    rsp,0xb0
   140001f18:	and    DWORD PTR [rbp+0x6f],0x0
   140001f1c:	lea    rdx,[rip+0x15055]        # 0x140016f78
   140001f23:	mov    ebx,r8d
   140001f26:	mov    rsi,rcx
   140001f29:	movaps XMMWORD PTR [rax-0x48],xmm7
   140001f2d:	lea    r8,[rbp+0x6f]
   140001f31:	lea    rcx,[rbp-0x29]
   140001f35:	movaps XMMWORD PTR [rax-0x58],xmm8
   140001f3a:	call   0x14000bf4c
   140001f3f:	mov    rcx,QWORD PTR [rsi+0x48]
   140001f43:	mov    edx,0x401
   140001f48:	call   QWORD PTR [rip+0x143a2]        # 0x1400162f0
   140001f4e:	mov    rdi,rax
   140001f51:	test   rax,rax
   140001f54:	jne    0x140001f9c
   140001f56:	mov    DWORD PTR [rbp+0x6f],0x80004005
   140001f5d:	mov    rcx,QWORD PTR [rip+0x1c0bc]        # 0x14001e020
   140001f64:	lea    rax,[rip+0x1c0b5]        # 0x14001e020
   140001f6b:	cmp    rcx,rax
   140001f6e:	je     0x14000215a
   140001f74:	test   BYTE PTR [rcx+0x1c],0x4
   140001f78:	je     0x14000215a
   140001f7e:	mov    rcx,QWORD PTR [rcx+0x10]
   140001f82:	lea    edx,[rdi+0xf]
   140001f85:	mov    r9d,0x80004005
   140001f8b:	lea    r8,[rip+0x152ae]        # 0x140017240
   140001f92:	call   0x140001228
   140001f97:	jmp    0x14000215a
   140001f9c:	mov    rcx,QWORD PTR [rsi+0x50]
   140001fa0:	movzx  ebx,bx
   140001fa3:	call   0x140001a3c
   140001fa8:	mov    rcx,rax
   140001fab:	mov    edx,ebx
   140001fad:	lea    rax,[rbp+0x6f]
   140001fb1:	mov    QWORD PTR [rsp+0x30],rax
   140001fb6:	call   0x14000cd70
   140001fbb:	cmp    DWORD PTR [rbp+0x6f],0x0
   140001fbf:	mov    r15,rax
   140001fc2:	jl     0x14000215a
   140001fc8:	mov    rcx,rdi
   140001fcb:	call   QWORD PTR [rip+0x14327]        # 0x1400162f8
   140001fd1:	mov    rbx,rax
   140001fd4:	test   rax,rax
   140001fd7:	je     0x140002138
   140001fdd:	mov    edx,0x58
   140001fe2:	mov    rcx,rax
   140001fe5:	call   QWORD PTR [rip+0x140d5]        # 0x1400160c0
   140001feb:	mov    edx,0x5a
   140001ff0:	mov    rcx,rbx
   140001ff3:	movd   xmm8,eax
   140001ff8:	cvtdq2pd xmm8,xmm8
   140001ffd:	divsd  xmm8,QWORD PTR [rip+0x16f7a]        # 0x140018f80
   140002006:	call   QWORD PTR [rip+0x140b4]        # 0x1400160c0
   14000200c:	lea    r8,[rbp-0x19]
   140002010:	mov    edx,0x20
   140002015:	mov    rcx,r15
   140002018:	movd   xmm7,eax
   14000201c:	cvtdq2pd xmm7,xmm7
   140002020:	divsd  xmm7,QWORD PTR [rip+0x16f58]        # 0x140018f80
   140002028:	call   QWORD PTR [rip+0x1409a]        # 0x1400160c8
   14000202e:	movsd  xmm0,QWORD PTR [rip+0x16f0a]        # 0x140018f40
   140002036:	ucomisd xmm8,xmm0
   14000203b:	jp     0x140002043
   14000203d:	je     0x14000212c
   140002043:	ucomisd xmm7,xmm0
   140002047:	jp     0x14000204f
   140002049:	je     0x14000212c
   14000204f:	movd   xmm1,DWORD PTR [rbp-0x11]
   140002054:	mov    rcx,rbx
   140002057:	movd   xmm0,DWORD PTR [rbp-0x15]
   14000205c:	cvtdq2pd xmm1,xmm1
   140002060:	cvtdq2pd xmm0,xmm0
   140002064:	mulsd  xmm1,xmm7
   140002068:	mulsd  xmm0,xmm8
   14000206d:	cvttsd2si r12d,xmm1
   140002072:	cvttsd2si r13d,xmm0
   140002077:	mov    DWORD PTR [rbp+0x67],r12d
   14000207b:	call   QWORD PTR [rip+0x1404f]        # 0x1400160d0
   140002081:	mov    r14,rax
   140002084:	test   rax,rax
   140002087:	je     0x14000212c
   14000208d:	mov    rcx,rbx
   140002090:	call   QWORD PTR [rip+0x1403a]        # 0x1400160d0
   140002096:	mov    rsi,rax
   140002099:	test   rax,rax
   14000209c:	je     0x140002123
   1400020a2:	mov    r8d,r12d
   1400020a5:	mov    edx,r13d
   1400020a8:	mov    rcx,rbx
   1400020ab:	call   QWORD PTR [rip+0x14027]        # 0x1400160d8
   1400020b1:	mov    r12,rax
   1400020b4:	test   rax,rax
   1400020b7:	je     0x14000211a
   1400020b9:	mov    rdx,rax
   1400020bc:	mov    rcx,rsi
   1400020bf:	call   QWORD PTR [rip+0x1401b]        # 0x1400160e0
   1400020c5:	mov    rdx,r15
   1400020c8:	mov    rcx,r14
   1400020cb:	call   QWORD PTR [rip+0x1400f]        # 0x1400160e0
   1400020d1:	mov    ecx,DWORD PTR [rbp-0x11]
   1400020d4:	mov    r9d,r13d
   1400020d7:	mov    eax,DWORD PTR [rbp+0x67]
   1400020da:	xor    r8d,r8d
   1400020dd:	mov    DWORD PTR [rsp+0x50],0xcc0020
   1400020e5:	xor    edx,edx
   1400020e7:	mov    DWORD PTR [rsp+0x48],ecx
   1400020eb:	mov    ecx,DWORD PTR [rbp-0x15]
   1400020ee:	mov    DWORD PTR [rsp+0x40],ecx
   1400020f2:	mov    rcx,rsi
   1400020f5:	and    DWORD PTR [rsp+0x38],0x0
   1400020fa:	and    DWORD PTR [rsp+0x30],0x0
   1400020ff:	mov    QWORD PTR [rsp+0x28],r14
   140002104:	mov    DWORD PTR [rsp+0x20],eax
   140002108:	call   QWORD PTR [rip+0x13fda]        # 0x1400160e8
   14000210e:	mov    rcx,r15
   140002111:	call   QWORD PTR [rip+0x13fd9]        # 0x1400160f0
   140002117:	mov    r15,r12
   14000211a:	mov    rcx,rsi
   14000211d:	call   QWORD PTR [rip+0x13fd5]        # 0x1400160f8
   140002123:	mov    rcx,r14
   140002126:	call   QWORD PTR [rip+0x13fcc]        # 0x1400160f8
   14000212c:	mov    rdx,rbx
   14000212f:	mov    rcx,rdi
   140002132:	call   QWORD PTR [rip+0x141c8]        # 0x140016300
   140002138:	mov    r9,r15
   14000213b:	xor    r8d,r8d
   14000213e:	mov    edx,0x172
   140002143:	mov    rcx,rdi
   140002146:	call   QWORD PTR [rip+0x141bc]        # 0x140016308
   14000214c:	test   rax,rax
   14000214f:	je     0x14000215a
   140002151:	mov    rcx,rax
   140002154:	call   QWORD PTR [rip+0x13f96]        # 0x1400160f0
   14000215a:	mov    ebx,DWORD PTR [rbp+0x6f]
   14000215d:	lea    rcx,[rbp-0x29]
   140002161:	call   0x14000bf98
   140002166:	lea    r11,[rsp+0xb0]
   14000216e:	mov    eax,ebx
   140002170:	mov    rbx,QWORD PTR [r11+0x50]
   140002174:	movaps xmm7,XMMWORD PTR [r11-0x10]
   140002179:	movaps xmm8,XMMWORD PTR [r11-0x20]
   14000217e:	mov    rsp,r11
   140002181:	pop    r15
   140002183:	pop    r14
   140002185:	pop    r13
   140002187:	pop    r12
   140002189:	pop    rdi
   14000218a:	pop    rsi
   14000218b:	pop    rbp
   14000218c:	ret    
   14000218d:	int3   
   14000218e:	int3   
   14000218f:	int3   
   140002190:	int3   
   140002191:	int3   
   140002192:	int3   
   140002193:	int3   
   140002194:	rex push rbx
   140002196:	push   rsi
   140002197:	push   rdi
   140002198:	sub    rsp,0x40
   14000219c:	and    DWORD PTR [rsp+0x20],0x0
   1400021a1:	mov    ebx,edx
   1400021a3:	mov    esi,r8d
   1400021a6:	lea    rdx,[rip+0x14de3]        # 0x140016f90
   1400021ad:	mov    rdi,rcx
   1400021b0:	lea    r8,[rsp+0x20]
   1400021b5:	lea    rcx,[rsp+0x30]
   1400021ba:	call   0x14000bf4c
   1400021bf:	mov    rcx,QWORD PTR [rdi+0x48]
   1400021c3:	mov    edx,ebx
   1400021c5:	call   QWORD PTR [rip+0x14125]        # 0x1400162f0
   1400021cb:	mov    rbx,rax
   1400021ce:	test   rax,rax
   1400021d1:	jne    0x140002207
   1400021d3:	mov    DWORD PTR [rsp+0x20],0x80004005
   1400021db:	mov    rcx,QWORD PTR [rip+0x1be3e]        # 0x14001e020
   1400021e2:	lea    rax,[rip+0x1be37]        # 0x14001e020
   1400021e9:	cmp    rcx,rax
   1400021ec:	je     0x14000227f
   1400021f2:	test   BYTE PTR [rcx+0x1c],0x4
   1400021f6:	je     0x14000227f
   1400021fc:	lea    edx,[rbx+0x10]
   1400021ff:	mov    r9d,0x80004005
   140002205:	jmp    0x14000226f
   140002207:	mov    rcx,QWORD PTR [rdi+0x50]
   14000220b:	call   0x140001a3c
   140002210:	movzx  edx,si
   140002213:	lea    r8,[rsp+0x28]
   140002218:	mov    rcx,rax
   14000221b:	call   0x14000b100
   140002220:	mov    DWORD PTR [rsp+0x20],eax
   140002224:	mov    r9d,eax
   140002227:	test   eax,eax
   140002229:	js     0x140002251
   14000222b:	mov    r9,QWORD PTR [rsp+0x28]
   140002230:	xor    r8d,r8d
   140002233:	mov    edx,0x172
   140002238:	mov    rcx,rbx
   14000223b:	call   QWORD PTR [rip+0x140c7]        # 0x140016308
   140002241:	test   rax,rax
   140002244:	je     0x14000227f
   140002246:	mov    rcx,rax
   140002249:	call   QWORD PTR [rip+0x13ea1]        # 0x1400160f0
   14000224f:	jmp    0x14000227f
   140002251:	mov    rcx,QWORD PTR [rip+0x1bdc8]        # 0x14001e020
   140002258:	lea    rax,[rip+0x1bdc1]        # 0x14001e020
   14000225f:	cmp    rcx,rax
   140002262:	je     0x14000227f
   140002264:	test   BYTE PTR [rcx+0x1c],0x4
   140002268:	je     0x14000227f
   14000226a:	mov    edx,0x11
   14000226f:	mov    rcx,QWORD PTR [rcx+0x10]
   140002273:	lea    r8,[rip+0x14fc6]        # 0x140017240
   14000227a:	call   0x140001228
   14000227f:	mov    ebx,DWORD PTR [rsp+0x20]
   140002283:	lea    rcx,[rsp+0x30]
   140002288:	call   0x14000bf98
   14000228d:	mov    eax,ebx
   14000228f:	add    rsp,0x40
   140002293:	pop    rdi
   140002294:	pop    rsi
   140002295:	pop    rbx
   140002296:	ret    
   140002297:	int3   
   140002298:	int3   
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	mov    rax,rsp
   1400022a3:	push   rdi
   1400022a4:	push   r12
   1400022a6:	push   r13
   1400022a8:	push   r14
   1400022aa:	push   r15
   1400022ac:	sub    rsp,0x50
   1400022b0:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   1400022b8:	mov    QWORD PTR [rax+0x8],rbx
   1400022bc:	mov    QWORD PTR [rax+0x18],rbp
   1400022c0:	mov    QWORD PTR [rax+0x20],rsi
   1400022c4:	mov    rbp,r9
   1400022c7:	mov    r14,r8
   1400022ca:	mov    ebx,edx
   1400022cc:	mov    r15,rcx
   1400022cf:	xor    edi,edi
   1400022d1:	mov    DWORD PTR [rax+0x10],edi
   1400022d4:	lea    r8,[rax+0x10]
   1400022d8:	lea    rdx,[rip+0x14cd1]        # 0x140016fb0
   1400022df:	lea    rcx,[rax-0x40]
   1400022e3:	call   0x14000bf4c
   1400022e8:	nop
   1400022e9:	lea    r13d,[rdi+0x1]
   1400022ed:	cmp    ebx,0x110
   1400022f3:	je     0x14000230d
   1400022f5:	lea    r8,[rsp+0x88]
   1400022fd:	mov    rcx,r15
   140002300:	call   0x14000c82c
   140002305:	mov    rsi,rax
   140002308:	jmp    0x140002394
   14000230d:	mov    rsi,QWORD PTR [rbp+0x30]
   140002311:	test   rsi,rsi
   140002314:	jne    0x140002360
   140002316:	mov    DWORD PTR [rsp+0x88],0x80004005
   140002321:	lea    rax,[rip+0x1bcf8]        # 0x14001e020
   140002328:	mov    rcx,QWORD PTR [rip+0x1bcf1]        # 0x14001e020
   14000232f:	cmp    rcx,rax
   140002332:	je     0x1400024dd
   140002338:	test   BYTE PTR [rcx+0x1c],0x4
   14000233c:	je     0x1400024dd
   140002342:	lea    edx,[rsi+0x12]
   140002345:	mov    r9d,0x80004005
   14000234b:	lea    r8,[rip+0x14eee]        # 0x140017240
   140002352:	mov    rcx,QWORD PTR [rcx+0x10]
   140002356:	call   0x140001228
   14000235b:	jmp    0x1400024dd
   140002360:	mov    edx,0xffffffec
   140002365:	mov    rcx,r15
   140002368:	call   QWORD PTR [rip+0x1406a]        # 0x1400163d8
   14000236e:	and    eax,0x400000
   140002373:	mov    ecx,edi
   140002375:	test   rax,rax
   140002378:	cmovne ecx,r13d
   14000237c:	mov    DWORD PTR [rsi+0x60],ecx
   14000237f:	mov    r8,rsi
   140002382:	mov    edx,0xffffffeb
   140002387:	mov    rcx,r15
   14000238a:	call   QWORD PTR [rip+0x13f80]        # 0x140016310
   140002390:	mov    QWORD PTR [rsi+0x48],r15
   140002394:	test   rsi,rsi
   140002397:	je     0x1400024dd
   14000239d:	cmp    ebx,0x2b
   1400023a0:	ja     0x14000247f
   1400023a6:	je     0x140002476
   1400023ac:	cmp    ebx,0x2
   1400023af:	je     0x14000246d
   1400023b5:	cmp    ebx,0x5
   1400023b8:	je     0x140002444
   1400023be:	cmp    ebx,0xf
   1400023c1:	je     0x140002438
   1400023c3:	cmp    ebx,0x15
   1400023c6:	je     0x1400023d1
   1400023c8:	cmp    ebx,0x1a
   1400023cb:	jne    0x1400024dd
   1400023d1:	mov    rsi,QWORD PTR [rsi+0x50]
   1400023d5:	test   rsi,rsi
   1400023d8:	je     0x1400024dd
   1400023de:	xor    r8d,r8d
   1400023e1:	lea    rdx,[rip+0x14aa0]        # 0x140016e88
   1400023e8:	lea    rcx,[rsp+0x28]
   1400023ed:	call   0x14000bf4c
   1400023f2:	nop
   1400023f3:	add    rsi,0x70
   1400023f7:	mov    r12d,0x3
   1400023fd:	mov    r15,QWORD PTR [rsi]
   140002400:	test   r15,r15
   140002403:	je     0x140002420
   140002405:	mov    rax,QWORD PTR [r15]
   140002408:	mov    rbx,QWORD PTR [rax+0x58]
   14000240c:	mov    rcx,rbx
   14000240f:	call   QWORD PTR [rip+0x142e3]        # 0x1400166f8
   140002415:	mov    r8,rbp
   140002418:	mov    rdx,r14
   14000241b:	mov    rcx,r15
   14000241e:	call   rbx
   140002420:	add    rsi,0x8
   140002424:	sub    r12,r13
   140002427:	jne    0x1400023fd
   140002429:	lea    rcx,[rsp+0x28]
   14000242e:	call   0x14000bf98
   140002433:	jmp    0x1400024dd
   140002438:	mov    rax,QWORD PTR [rsi]
   14000243b:	mov    rbx,QWORD PTR [rax+0x28]
   14000243f:	jmp    0x1400024c6
   140002444:	mov    rax,QWORD PTR [rsi]
   140002447:	mov    rbx,rbp
   14000244a:	shr    rbx,0x10
   14000244e:	mov    rdi,QWORD PTR [rax+0x50]
   140002452:	mov    rcx,rdi
   140002455:	call   QWORD PTR [rip+0x1429d]        # 0x1400166f8
   14000245b:	movzx  r9d,bx
   14000245f:	movzx  r8d,bp
   140002463:	mov    rdx,r14
   140002466:	mov    rcx,rsi
   140002469:	call   rdi
   14000246b:	jmp    0x1400024da
   14000246d:	mov    rax,QWORD PTR [rsi]
   140002470:	mov    rbx,QWORD PTR [rax+0x38]
   140002474:	jmp    0x1400024c6
   140002476:	mov    rax,QWORD PTR [rsi]
   140002479:	mov    rbx,QWORD PTR [rax+0x30]
   14000247d:	jmp    0x1400024c6
   14000247f:	sub    ebx,0x4e
   140002482:	je     0x1400024bf
   140002484:	sub    ebx,0xc2
   14000248a:	je     0x1400024b6
   14000248c:	sub    ebx,r13d
   14000248f:	je     0x1400024ad
   140002491:	sub    ebx,0x2
   140002494:	je     0x1400024a4
   140002496:	cmp    ebx,0x25
   140002499:	jne    0x1400024dd
   14000249b:	mov    rax,QWORD PTR [rsi]
   14000249e:	mov    rbx,QWORD PTR [rax+0x20]
   1400024a2:	jmp    0x1400024c6
   1400024a4:	mov    rax,QWORD PTR [rsi]
   1400024a7:	mov    rbx,QWORD PTR [rax+0x48]
   1400024ab:	jmp    0x1400024c6
   1400024ad:	mov    rax,QWORD PTR [rsi]
   1400024b0:	mov    rbx,QWORD PTR [rax+0x10]
   1400024b4:	jmp    0x1400024c6
   1400024b6:	mov    rax,QWORD PTR [rsi]
   1400024b9:	mov    rbx,QWORD PTR [rax+0x8]
   1400024bd:	jmp    0x1400024c6
   1400024bf:	mov    rax,QWORD PTR [rsi]
   1400024c2:	mov    rbx,QWORD PTR [rax+0x18]
   1400024c6:	mov    rcx,rbx
   1400024c9:	call   QWORD PTR [rip+0x14229]        # 0x1400166f8
   1400024cf:	mov    r8,rbp
   1400024d2:	mov    rdx,r14
   1400024d5:	mov    rcx,rsi
   1400024d8:	call   rbx
   1400024da:	mov    rdi,rax
   1400024dd:	lea    rcx,[rsp+0x38]
   1400024e2:	call   0x14000bf98
   1400024e7:	mov    rax,rdi
   1400024ea:	lea    r11,[rsp+0x50]
   1400024ef:	mov    rbx,QWORD PTR [r11+0x30]
   1400024f3:	mov    rbp,QWORD PTR [r11+0x40]
   1400024f7:	mov    rsi,QWORD PTR [r11+0x48]
   1400024fb:	mov    rsp,r11
   1400024fe:	pop    r15
   140002500:	pop    r14
   140002502:	pop    r13
   140002504:	pop    r12
   140002506:	pop    rdi
   140002507:	ret    
   140002508:	int3   
   140002509:	int3   
   14000250a:	int3   
   14000250b:	int3   
   14000250c:	int3   
   14000250d:	int3   
   14000250e:	int3   
   14000250f:	int3   
   140002510:	rex push rbx
   140002512:	sub    rsp,0x50
   140002516:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000251f:	mov    rbx,rcx
   140002522:	xor    r8d,r8d
   140002525:	lea    rdx,[rip+0x14a9c]        # 0x140016fc8
   14000252c:	lea    rcx,[rsp+0x40]
   140002531:	call   0x14000bf4c
   140002536:	nop
   140002537:	xor    r8d,r8d
   14000253a:	xor    edx,edx
   14000253c:	mov    rcx,QWORD PTR [rbx+0x48]
   140002540:	call   QWORD PTR [rip+0x13dd2]        # 0x140016318
   140002546:	and    DWORD PTR [rsp+0x20],0x0
   14000254b:	lea    r8,[rsp+0x20]
   140002550:	lea    rdx,[rip+0x148a1]        # 0x140016df8
   140002557:	lea    rcx,[rsp+0x30]
   14000255c:	call   0x14000bf4c
   140002561:	nop
   140002562:	xor    ecx,ecx
   140002564:	call   QWORD PTR [rip+0x13df6]        # 0x140016360
   14000256a:	nop
   14000256b:	lea    rcx,[rsp+0x30]
   140002570:	call   0x14000bf98
   140002575:	mov    rcx,rbx
   140002578:	call   0x14000259c
   14000257d:	nop
   14000257e:	lea    rcx,[rsp+0x40]
   140002583:	call   0x14000bf98
   140002588:	mov    eax,0x1
   14000258d:	add    rsp,0x50
   140002591:	pop    rbx
   140002592:	ret    
   140002593:	int3   
   140002594:	int3   
   140002595:	int3   
   140002596:	int3   
   140002597:	int3   
   140002598:	int3   
   140002599:	int3   
   14000259a:	int3   
   14000259b:	int3   
   14000259c:	rex push rbx
   14000259e:	sub    rsp,0x30
   1400025a2:	mov    rbx,rcx
   1400025a5:	lea    rdx,[rip+0x14a34]        # 0x140016fe0
   1400025ac:	lea    rcx,[rsp+0x20]
   1400025b1:	xor    r8d,r8d
   1400025b4:	call   0x14000bf4c
   1400025b9:	mov    rcx,QWORD PTR [rbx+0x48]
   1400025bd:	call   QWORD PTR [rip+0x13d5d]        # 0x140016320
   1400025c3:	test   rax,rax
   1400025c6:	je     0x1400025d3
   1400025c8:	xor    edx,edx
   1400025ca:	mov    rcx,rax
   1400025cd:	call   QWORD PTR [rip+0x13d55]        # 0x140016328
   1400025d3:	lea    rcx,[rsp+0x20]
   1400025d8:	call   0x14000bf98
   1400025dd:	add    rsp,0x30
   1400025e1:	pop    rbx
   1400025e2:	ret    
   1400025e3:	int3   
   1400025e4:	int3   
   1400025e5:	int3   
   1400025e6:	int3   
   1400025e7:	int3   
   1400025e8:	int3   
   1400025e9:	int3   
   1400025ea:	int3   
   1400025eb:	int3   
   1400025ec:	int3   
   1400025ed:	int3   
   1400025ee:	int3   
   1400025ef:	int3   
   1400025f0:	sub    rsp,0x38
   1400025f4:	xor    r8d,r8d
   1400025f7:	lea    rdx,[rip+0x14a02]        # 0x140017000
   1400025fe:	lea    rcx,[rsp+0x20]
   140002603:	call   0x14000bf4c
   140002608:	lea    rcx,[rsp+0x20]
   14000260d:	call   0x14000bf98
   140002612:	mov    eax,0x1
   140002617:	add    rsp,0x38
   14000261b:	ret    
   14000261c:	int3   
   14000261d:	int3   
   14000261e:	int3   
   14000261f:	int3   
   140002620:	int3   
   140002621:	int3   
   140002622:	int3   
   140002623:	int3   
   140002624:	int3   
   140002625:	int3   
   140002626:	int3   
   140002627:	int3   
   140002628:	int3   
   140002629:	int3   
   14000262a:	int3   
   14000262b:	int3   
   14000262c:	int3   
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	sub    rsp,0x38
   140002634:	xor    r8d,r8d
   140002637:	lea    rdx,[rip+0x149e2]        # 0x140017020
   14000263e:	lea    rcx,[rsp+0x20]
   140002643:	call   0x14000bf4c
   140002648:	lea    rcx,[rsp+0x20]
   14000264d:	call   0x14000bf98
   140002652:	xor    eax,eax
   140002654:	add    rsp,0x38
   140002658:	ret    
   140002659:	int3   
   14000265a:	int3   
   14000265b:	int3   
   14000265c:	int3   
   14000265d:	int3   
   14000265e:	int3   
   14000265f:	int3   
   140002660:	sub    rsp,0x38
   140002664:	xor    r8d,r8d
   140002667:	lea    rdx,[rip+0x149ca]        # 0x140017038
   14000266e:	lea    rcx,[rsp+0x20]
   140002673:	call   0x14000bf4c
   140002678:	lea    rcx,[rsp+0x20]
   14000267d:	call   0x14000bf98
   140002682:	xor    eax,eax
   140002684:	add    rsp,0x38
   140002688:	ret    
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	sub    rsp,0x38
   140002694:	xor    r8d,r8d
   140002697:	lea    rdx,[rip+0x149b2]        # 0x140017050
   14000269e:	lea    rcx,[rsp+0x20]
   1400026a3:	call   0x14000bf4c
   1400026a8:	lea    rcx,[rsp+0x20]
   1400026ad:	call   0x14000bf98
   1400026b2:	xor    eax,eax
   1400026b4:	add    rsp,0x38
   1400026b8:	ret    
   1400026b9:	int3   
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	int3   
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	sub    rsp,0x38
   1400026c4:	xor    r8d,r8d
   1400026c7:	lea    rdx,[rip+0x149a2]        # 0x140017070
   1400026ce:	lea    rcx,[rsp+0x20]
   1400026d3:	call   0x14000bf4c
   1400026d8:	lea    rcx,[rsp+0x20]
   1400026dd:	call   0x14000bf98
   1400026e2:	xor    eax,eax
   1400026e4:	add    rsp,0x38
   1400026e8:	ret    
   1400026e9:	int3   
   1400026ea:	int3   
   1400026eb:	int3   
   1400026ec:	int3   
   1400026ed:	int3   
   1400026ee:	int3   
   1400026ef:	int3   
   1400026f0:	sub    rsp,0x38
   1400026f4:	xor    r8d,r8d
   1400026f7:	lea    rdx,[rip+0x1498a]        # 0x140017088
   1400026fe:	lea    rcx,[rsp+0x20]
   140002703:	call   0x14000bf4c
   140002708:	lea    rcx,[rsp+0x20]
   14000270d:	call   0x14000bf98
   140002712:	mov    eax,0x1
   140002717:	add    rsp,0x38
   14000271b:	ret    
   14000271c:	int3   
   14000271d:	int3   
   14000271e:	int3   
   14000271f:	int3   
   140002720:	int3   
   140002721:	int3   
   140002722:	int3   
   140002723:	int3   
   140002724:	int3   
   140002725:	int3   
   140002726:	int3   
   140002727:	int3   
   140002728:	int3   
   140002729:	int3   
   14000272a:	int3   
   14000272b:	int3   
   14000272c:	int3   
   14000272d:	int3   
   14000272e:	int3   
   14000272f:	int3   
   140002730:	sub    rsp,0x38
   140002734:	xor    r8d,r8d
   140002737:	lea    rdx,[rip+0x14962]        # 0x1400170a0
   14000273e:	lea    rcx,[rsp+0x20]
   140002743:	call   0x14000bf4c
   140002748:	lea    rcx,[rsp+0x20]
   14000274d:	call   0x14000bf98
   140002752:	xor    eax,eax
   140002754:	add    rsp,0x38
   140002758:	ret    
   140002759:	int3   
   14000275a:	int3   
   14000275b:	int3   
   14000275c:	int3   
   14000275d:	int3   
   14000275e:	int3   
   14000275f:	int3   
   140002760:	sub    rsp,0x38
   140002764:	xor    r8d,r8d
   140002767:	lea    rdx,[rip+0x1494a]        # 0x1400170b8
   14000276e:	lea    rcx,[rsp+0x20]
   140002773:	call   0x14000bf4c
   140002778:	lea    rcx,[rsp+0x20]
   14000277d:	call   0x14000bf98
   140002782:	mov    eax,0x1
   140002787:	add    rsp,0x38
   14000278b:	ret    
   14000278c:	int3   
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	int3   
   140002791:	int3   
   140002792:	int3   
   140002793:	int3   
   140002794:	int3   
   140002795:	int3   
   140002796:	int3   
   140002797:	int3   
   140002798:	int3   
   140002799:	int3   
   14000279a:	int3   
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	sub    rsp,0x38
   1400027a4:	xor    r8d,r8d
   1400027a7:	lea    rdx,[rip+0x14922]        # 0x1400170d0
   1400027ae:	lea    rcx,[rsp+0x20]
   1400027b3:	call   0x14000bf4c
   1400027b8:	lea    rcx,[rsp+0x20]
   1400027bd:	call   0x14000bf98
   1400027c2:	mov    eax,0x1
   1400027c7:	add    rsp,0x38
   1400027cb:	ret    
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	int3   
   1400027d1:	int3   
   1400027d2:	int3   
   1400027d3:	int3   
   1400027d4:	int3   
   1400027d5:	int3   
   1400027d6:	int3   
   1400027d7:	int3   
   1400027d8:	int3   
   1400027d9:	int3   
   1400027da:	int3   
   1400027db:	int3   
   1400027dc:	int3   
   1400027dd:	int3   
   1400027de:	int3   
   1400027df:	int3   
   1400027e0:	sub    rsp,0x38
   1400027e4:	xor    r8d,r8d
   1400027e7:	lea    rdx,[rip+0x148fa]        # 0x1400170e8
   1400027ee:	lea    rcx,[rsp+0x20]
   1400027f3:	call   0x14000bf4c
   1400027f8:	lea    rcx,[rsp+0x20]
   1400027fd:	call   0x14000bf98
   140002802:	xor    eax,eax
   140002804:	add    rsp,0x38
   140002808:	ret    
   140002809:	int3   
   14000280a:	int3   
   14000280b:	int3   
   14000280c:	int3   
   14000280d:	int3   
   14000280e:	int3   
   14000280f:	int3   
   140002810:	mov    rax,rsp
   140002813:	mov    QWORD PTR [rax+0x10],rbx
   140002817:	mov    QWORD PTR [rax+0x18],rsi
   14000281b:	push   rdi
   14000281c:	sub    rsp,0x30
   140002820:	and    DWORD PTR [rax+0x8],0x0
   140002824:	mov    esi,r8d
   140002827:	mov    ebx,edx
   140002829:	lea    r8,[rax+0x8]
   14000282d:	mov    rdi,rcx
   140002830:	lea    rdx,[rip+0x148d1]        # 0x140017108
   140002837:	lea    rcx,[rax-0x18]
   14000283b:	call   0x14000bf4c
   140002840:	mov    rcx,QWORD PTR [rdi+0x48]
   140002844:	lea    r8,[rsp+0x40]
   140002849:	mov    edx,ebx
   14000284b:	call   0x14000d6ec
   140002850:	mov    ebx,DWORD PTR [rsp+0x40]
   140002854:	test   ebx,ebx
   140002856:	js     0x14000286c
   140002858:	test   rax,rax
   14000285b:	je     0x14000286c
   14000285d:	mov    edx,esi
   14000285f:	mov    rcx,rax
   140002862:	call   QWORD PTR [rip+0x13ac0]        # 0x140016328
   140002868:	mov    ebx,DWORD PTR [rsp+0x40]
   14000286c:	lea    rcx,[rsp+0x20]
   140002871:	call   0x14000bf98
   140002876:	mov    rsi,QWORD PTR [rsp+0x50]
   14000287b:	mov    eax,ebx
   14000287d:	mov    rbx,QWORD PTR [rsp+0x48]
   140002882:	add    rsp,0x30
   140002886:	pop    rdi
   140002887:	ret    
   140002888:	int3   
   140002889:	int3   
   14000288a:	int3   
   14000288b:	int3   
   14000288c:	int3   
   14000288d:	int3   
   14000288e:	int3   
   14000288f:	int3   
   140002890:	mov    rax,rsp
   140002893:	mov    QWORD PTR [rax+0x8],rbx
   140002897:	mov    QWORD PTR [rax+0x18],rsi
   14000289b:	push   rdi
   14000289c:	sub    rsp,0x40
   1400028a0:	mov    rbx,rdx
   1400028a3:	lea    r8,[rax+0x10]
   1400028a7:	mov    rsi,rcx
   1400028aa:	lea    rdx,[rip+0x1486f]        # 0x140017120
   1400028b1:	xor    edi,edi
   1400028b3:	lea    rcx,[rax-0x18]
   1400028b7:	mov    DWORD PTR [rax+0x10],edi
   1400028ba:	call   0x14000bf4c
   1400028bf:	test   rbx,rbx
   1400028c2:	jne    0x14000290b
   1400028c4:	mov    DWORD PTR [rsp+0x58],0x80004003
   1400028cc:	mov    rcx,QWORD PTR [rip+0x1b74d]        # 0x14001e020
   1400028d3:	lea    rax,[rip+0x1b746]        # 0x14001e020
   1400028da:	cmp    rcx,rax
   1400028dd:	je     0x1400029d0
   1400028e3:	test   BYTE PTR [rcx+0x1c],0x4
   1400028e7:	je     0x1400029d0
   1400028ed:	mov    rcx,QWORD PTR [rcx+0x10]
   1400028f1:	lea    edx,[rdi+0x13]
   1400028f4:	mov    r9d,0x80004003
   1400028fa:	lea    r8,[rip+0x1493f]        # 0x140017240
   140002901:	call   0x140001228
   140002906:	jmp    0x1400029d0
   14000290b:	or     DWORD PTR [rbx],0xffffffff
   14000290e:	lea    rdx,[rip+0x161d3]        # 0x140018ae8
   140002915:	xor    r8d,r8d
   140002918:	mov    DWORD PTR [rbx+0x4],edi
   14000291b:	lea    rcx,[rsp+0x20]
   140002920:	mov    QWORD PTR [rbx+0x8],0x28
   140002928:	mov    DWORD PTR [rbx+0x10],0x23
   14000292f:	mov    DWORD PTR [rbx+0x14],0x59
   140002936:	mov    DWORD PTR [rbx+0x18],0x78
   14000293d:	mov    DWORD PTR [rbx+0x1c],0x4e9
   140002944:	call   0x14000bf4c
   140002949:	call   0x14000dc24
   14000294e:	test   eax,eax
   140002950:	je     0x140002961
   140002952:	mov    ecx,0x8
   140002957:	call   QWORD PTR [rip+0x139d3]        # 0x140016330
   14000295d:	mov    edi,eax
   14000295f:	jmp    0x140002966
   140002961:	mov    edi,0xadadad
   140002966:	lea    rcx,[rsp+0x20]
   14000296b:	call   0x14000bf98
   140002970:	mov    edx,0x8
   140002975:	mov    DWORD PTR [rbx+0x20],edi
   140002978:	mov    rcx,rsi
   14000297b:	call   0x140002ea4
   140002980:	mov    edx,0x6
   140002985:	mov    DWORD PTR [rbx+0x54],eax
   140002988:	mov    rcx,rsi
   14000298b:	call   0x140002ea4
   140002990:	mov    edx,0x4
   140002995:	mov    DWORD PTR [rbx+0x60],eax
   140002998:	mov    rcx,rsi
   14000299b:	call   0x140002ea4
   1400029a0:	xor    edx,edx
   1400029a2:	mov    DWORD PTR [rbx+0x64],eax
   1400029a5:	mov    rcx,rsi
   1400029a8:	call   0x140002e5c
   1400029ad:	mov    edx,0x2
   1400029b2:	mov    QWORD PTR [rbx+0x38],rax
   1400029b6:	mov    rcx,rsi
   1400029b9:	mov    DWORD PTR [rbx+0x44],0x5a
   1400029c0:	mov    DWORD PTR [rbx+0x48],0x17
   1400029c7:	call   0x140002e5c
   1400029cc:	mov    QWORD PTR [rbx+0x58],rax
   1400029d0:	mov    ebx,DWORD PTR [rsp+0x58]
   1400029d4:	lea    rcx,[rsp+0x30]
   1400029d9:	call   0x14000bf98
   1400029de:	mov    rsi,QWORD PTR [rsp+0x60]
   1400029e3:	mov    eax,ebx
   1400029e5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400029ea:	add    rsp,0x40
   1400029ee:	pop    rdi
   1400029ef:	ret    
   1400029f0:	int3   
   1400029f1:	int3   
   1400029f2:	int3   
   1400029f3:	int3   
   1400029f4:	int3   
   1400029f5:	int3   
   1400029f6:	int3   
   1400029f7:	int3   
   1400029f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400029fd:	mov    QWORD PTR [rsp+0x18],rsi
   140002a02:	mov    QWORD PTR [rsp+0x8],rcx
   140002a07:	push   rbp
   140002a08:	push   rdi
   140002a09:	push   r14
   140002a0b:	mov    rbp,rsp
   140002a0e:	sub    rsp,0x30
   140002a12:	and    DWORD PTR [rbp+0x20],0x0
   140002a16:	lea    rcx,[rbp-0x10]
   140002a1a:	mov    ebx,r8d
   140002a1d:	mov    rdi,rdx
   140002a20:	lea    r8,[rbp+0x20]
   140002a24:	mov    r14,r9
   140002a27:	lea    rdx,[rip+0x14712]        # 0x140017140
   140002a2e:	call   0x14000bf4c
   140002a33:	test   rdi,rdi
   140002a36:	je     0x140002adc
   140002a3c:	test   r14,r14
   140002a3f:	je     0x140002adc
   140002a45:	lea    r8,[rbp+0x20]
   140002a49:	mov    edx,ebx
   140002a4b:	mov    rcx,rdi
   140002a4e:	call   0x14000d6ec
   140002a53:	cmp    DWORD PTR [rbp+0x20],0x0
   140002a57:	jl     0x140002b18
   140002a5d:	xor    r9d,r9d
   140002a60:	xor    r8d,r8d
   140002a63:	mov    rcx,rax
   140002a66:	lea    edx,[r9+0x31]
   140002a6a:	call   QWORD PTR [rip+0x13898]        # 0x140016308
   140002a70:	mov    rsi,rax
   140002a73:	test   rax,rax
   140002a76:	je     0x140002b18
   140002a7c:	xor    edx,edx
   140002a7e:	mov    rcx,rdi
   140002a81:	call   0x14000c188
   140002a86:	mov    rbx,rax
   140002a89:	test   rax,rax
   140002a8c:	je     0x140002b18
   140002a92:	lea    r8,[rbp+0x20]
   140002a96:	mov    rdx,rsi
   140002a99:	mov    rcx,rax
   140002a9c:	call   0x14000c018
   140002aa1:	cmp    DWORD PTR [rbp+0x20],0x0
   140002aa5:	mov    rsi,rax
   140002aa8:	jl     0x140002acc
   140002aaa:	lea    r8,[rbp+0x20]
   140002aae:	mov    rdx,r14
   140002ab1:	mov    rcx,rbx
   140002ab4:	call   0x14000cfd8
   140002ab9:	test   rsi,rsi
   140002abc:	je     0x140002acc
   140002abe:	xor    r8d,r8d
   140002ac1:	mov    rdx,rsi
   140002ac4:	mov    rcx,rbx
   140002ac7:	call   0x14000c018
   140002acc:	xor    r8d,r8d
   140002acf:	mov    rdx,rbx
   140002ad2:	mov    rcx,rdi
   140002ad5:	call   0x14000c314
   140002ada:	jmp    0x140002b18
   140002adc:	mov    ebx,0x80070057
   140002ae1:	mov    DWORD PTR [rbp+0x20],ebx
   140002ae4:	mov    rcx,QWORD PTR [rip+0x1b535]        # 0x14001e020
   140002aeb:	lea    rax,[rip+0x1b52e]        # 0x14001e020
   140002af2:	cmp    rcx,rax
   140002af5:	je     0x140002b1b
   140002af7:	test   BYTE PTR [rcx+0x1c],0x4
   140002afb:	je     0x140002b1b
   140002afd:	mov    rcx,QWORD PTR [rcx+0x10]
   140002b01:	lea    r8,[rip+0x14738]        # 0x140017240
   140002b08:	mov    edx,0x14
   140002b0d:	mov    r9d,0x80070057
   140002b13:	call   0x140001228
   140002b18:	mov    ebx,DWORD PTR [rbp+0x20]
   140002b1b:	lea    rcx,[rbp-0x10]
   140002b1f:	call   0x14000bf98
   140002b24:	mov    rsi,QWORD PTR [rsp+0x60]
   140002b29:	mov    eax,ebx
   140002b2b:	mov    rbx,QWORD PTR [rsp+0x58]
   140002b30:	add    rsp,0x30
   140002b34:	pop    r14
   140002b36:	pop    rdi
   140002b37:	pop    rbp
   140002b38:	ret    
   140002b39:	int3   
   140002b3a:	int3   
   140002b3b:	int3   
   140002b3c:	int3   
   140002b3d:	int3   
   140002b3e:	int3   
   140002b3f:	int3   
   140002b40:	sub    rsp,0x38
   140002b44:	xor    r8d,r8d
   140002b47:	lea    rdx,[rip+0x1461a]        # 0x140017168
   140002b4e:	lea    rcx,[rsp+0x20]
   140002b53:	call   0x14000bf4c
   140002b58:	lea    rcx,[rsp+0x20]
   140002b5d:	call   0x14000bf98
   140002b62:	add    rsp,0x38
   140002b66:	ret    
   140002b67:	int3   
   140002b68:	int3   
   140002b69:	int3   
   140002b6a:	int3   
   140002b6b:	int3   
   140002b6c:	int3   
   140002b6d:	int3   
   140002b6e:	int3   
   140002b6f:	int3   
   140002b70:	mov    QWORD PTR [rsp+0x10],rbx
   140002b75:	mov    QWORD PTR [rsp+0x18],rdi
   140002b7a:	push   rbp
   140002b7b:	lea    rbp,[rsp-0x57]
   140002b80:	sub    rsp,0xc0
   140002b87:	mov    rax,QWORD PTR [rip+0x1b482]        # 0x14001e010
   140002b8e:	xor    rax,rsp
   140002b91:	mov    QWORD PTR [rbp+0x47],rax
   140002b95:	and    DWORD PTR [rbp-0x39],0x0
   140002b99:	lea    r8,[rbp-0x39]
   140002b9d:	mov    rbx,rcx
   140002ba0:	lea    rdx,[rip+0x145e9]        # 0x140017190
   140002ba7:	lea    rcx,[rbp-0x31]
   140002bab:	call   0x14000bf4c
   140002bb0:	xor    edi,edi
   140002bb2:	lea    rcx,[rbp-0x19]
   140002bb6:	xor    edx,edx
   140002bb8:	lea    r8d,[rdi+0x5c]
   140002bbc:	call   0x140014b26
   140002bc1:	mov    eax,0x2c8633
   140002bc6:	mov    DWORD PTR [rbx+0x28],0x646464
   140002bcd:	lea    ecx,[rdi+0x8]
   140002bd0:	mov    DWORD PTR [rbx+0x2c],eax
   140002bd3:	mov    DWORD PTR [rbx+0x34],eax
   140002bd6:	mov    DWORD PTR [rbx+0x30],0x191868
   140002bdd:	mov    DWORD PTR [rbx+0x38],0xff0000
   140002be4:	mov    DWORD PTR [rbx+0x3c],0xff
   140002beb:	call   QWORD PTR [rip+0x1373f]        # 0x140016330
   140002bf1:	mov    rcx,rbx
   140002bf4:	mov    DWORD PTR [rbx+0x40],eax
   140002bf7:	call   0x140002df8
   140002bfc:	call   QWORD PTR [rip+0x138de]        # 0x1400164e0
   140002c02:	test   eax,eax
   140002c04:	je     0x140002d29
   140002c0a:	lea    edx,[rdi+0x5]
   140002c0d:	xor    ecx,ecx
   140002c0f:	call   QWORD PTR [rip+0x138c3]        # 0x1400164d8
   140002c15:	and    DWORD PTR [rbp-0x35],edi
   140002c18:	lea    rdx,[rip+0x14599]        # 0x1400171b8
   140002c1f:	xor    ecx,ecx
   140002c21:	mov    DWORD PTR [rbx+0x44],eax
   140002c24:	call   QWORD PTR [rip+0x138a6]        # 0x1400164d0
   140002c2a:	xor    r8d,r8d
   140002c2d:	mov    r9d,0xedb
   140002c33:	mov    rdi,rax
   140002c36:	lea    rax,[rbp-0x35]
   140002c3a:	mov    rcx,rdi
   140002c3d:	mov    QWORD PTR [rsp+0x20],rax
   140002c42:	lea    edx,[r8+0x2]
   140002c46:	call   QWORD PTR [rip+0x1387c]        # 0x1400164c8
   140002c4c:	test   eax,eax
   140002c4e:	js     0x140002c56
   140002c50:	mov    ecx,DWORD PTR [rbp-0x35]
   140002c53:	mov    DWORD PTR [rbx+0x38],ecx
   140002c56:	test   rdi,rdi
   140002c59:	je     0x140002c64
   140002c5b:	mov    rcx,rdi
   140002c5e:	call   QWORD PTR [rip+0x1385c]        # 0x1400164c0
   140002c64:	lea    rdx,[rip+0x14565]        # 0x1400171d0
   140002c6b:	xor    ecx,ecx
   140002c6d:	call   QWORD PTR [rip+0x1385d]        # 0x1400164d0
   140002c73:	xor    r8d,r8d
   140002c76:	mov    r9d,0xedb
   140002c7c:	mov    rdi,rax
   140002c7f:	lea    rax,[rbp-0x35]
   140002c83:	mov    rcx,rdi
   140002c86:	mov    QWORD PTR [rsp+0x20],rax
   140002c8b:	lea    edx,[r8+0x4]
   140002c8f:	call   QWORD PTR [rip+0x13833]        # 0x1400164c8
   140002c95:	test   eax,eax
   140002c97:	js     0x140002c9f
   140002c99:	mov    ecx,DWORD PTR [rbp-0x35]
   140002c9c:	mov    DWORD PTR [rbx+0x40],ecx
   140002c9f:	xor    r9d,r9d
   140002ca2:	lea    rax,[rbp-0x19]
   140002ca6:	mov    QWORD PTR [rsp+0x28],rax
   140002cab:	xor    edx,edx
   140002cad:	mov    rcx,rdi
   140002cb0:	mov    DWORD PTR [rsp+0x20],0xd2
   140002cb8:	lea    r8d,[r9+0x2]
   140002cbc:	call   QWORD PTR [rip+0x137f6]        # 0x1400164b8
   140002cc2:	mov    DWORD PTR [rbp-0x39],eax
   140002cc5:	test   eax,eax
   140002cc7:	js     0x140002cd8
   140002cc9:	xor    edx,edx
   140002ccb:	lea    rcx,[rbp-0x19]
   140002ccf:	call   0x14000d4b0
   140002cd4:	mov    QWORD PTR [rbx+0x8],rax
   140002cd8:	xor    r9d,r9d
   140002cdb:	lea    rax,[rbp-0x19]
   140002cdf:	mov    QWORD PTR [rsp+0x28],rax
   140002ce4:	xor    edx,edx
   140002ce6:	mov    rcx,rdi
   140002ce9:	mov    DWORD PTR [rsp+0x20],0xd2
   140002cf1:	lea    r8d,[r9+0x4]
   140002cf5:	call   QWORD PTR [rip+0x137bd]        # 0x1400164b8
   140002cfb:	mov    DWORD PTR [rbp-0x39],eax
   140002cfe:	test   eax,eax
   140002d00:	js     0x140002db2
   140002d06:	xor    edx,edx
   140002d08:	lea    rcx,[rbp-0x19]
   140002d0c:	call   0x14000d4b0
   140002d11:	xor    edx,edx
   140002d13:	mov    QWORD PTR [rbx+0x18],rax
   140002d17:	lea    rcx,[rbp-0x19]
   140002d1b:	call   0x14000d4b0
   140002d20:	mov    QWORD PTR [rbx+0x10],rax
   140002d24:	jmp    0x140002db2
   140002d29:	mov    ecx,0x8
   140002d2e:	call   QWORD PTR [rip+0x135fc]        # 0x140016330
   140002d34:	mov    DWORD PTR [rbx+0x40],eax
   140002d37:	mov    DWORD PTR [rbx+0x3c],eax
   140002d3a:	mov    DWORD PTR [rbx+0x38],eax
   140002d3d:	call   0x14000dc24
   140002d42:	neg    eax
   140002d44:	sbb    ecx,ecx
   140002d46:	and    ecx,0xfffffff6
   140002d49:	add    ecx,0xf
   140002d4c:	call   QWORD PTR [rip+0x135de]        # 0x140016330
   140002d52:	lea    rdx,[rbp-0x39]
   140002d56:	mov    ecx,0x11
   140002d5b:	mov    DWORD PTR [rbx+0x44],eax
   140002d5e:	call   0x14000d63c
   140002d63:	mov    QWORD PTR [rbx+0x18],rax
   140002d67:	cmp    DWORD PTR [rbp-0x39],edi
   140002d6a:	jl     0x140002dc0
   140002d6c:	lea    r9,[rbp-0x39]
   140002d70:	mov    QWORD PTR [rbx+0x10],rax
   140002d74:	lea    r8,[rbp-0x19]
   140002d78:	mov    edx,0x5c
   140002d7d:	mov    rcx,rax
   140002d80:	call   0x14000c23c
   140002d85:	cmp    DWORD PTR [rbp-0x39],edi
   140002d88:	jl     0x140002dc0
   140002d8a:	mov    ecx,DWORD PTR [rbp-0x19]
   140002d8d:	mov    eax,0x55555556
   140002d92:	shl    ecx,0x2
   140002d95:	imul   ecx
   140002d97:	lea    rcx,[rbp-0x19]
   140002d9b:	mov    eax,edx
   140002d9d:	shr    eax,0x1f
   140002da0:	add    edx,eax
   140002da2:	mov    DWORD PTR [rbp-0x19],edx
   140002da5:	lea    rdx,[rbp-0x35]
   140002da9:	call   0x14000d4b0
   140002dae:	mov    QWORD PTR [rbx+0x8],rax
   140002db2:	test   rdi,rdi
   140002db5:	je     0x140002dc0
   140002db7:	mov    rcx,rdi
   140002dba:	call   QWORD PTR [rip+0x13700]        # 0x1400164c0
   140002dc0:	mov    ebx,DWORD PTR [rbp-0x39]
   140002dc3:	lea    rcx,[rbp-0x31]
   140002dc7:	call   0x14000bf98
   140002dcc:	mov    eax,ebx
   140002dce:	mov    rcx,QWORD PTR [rbp+0x47]
   140002dd2:	xor    rcx,rsp
   140002dd5:	call   0x1400146a0
   140002dda:	lea    r11,[rsp+0xc0]
   140002de2:	mov    rbx,QWORD PTR [r11+0x18]
   140002de6:	mov    rdi,QWORD PTR [r11+0x20]
   140002dea:	mov    rsp,r11
   140002ded:	pop    rbp
   140002dee:	ret    
   140002def:	int3   
   140002df0:	int3   
   140002df1:	int3   
   140002df2:	int3   
   140002df3:	int3   
   140002df4:	int3   
   140002df5:	int3   
   140002df6:	int3   
   140002df7:	int3   
   140002df8:	mov    QWORD PTR [rsp+0x8],rbx
   140002dfd:	push   rdi
   140002dfe:	sub    rsp,0x30
   140002e02:	mov    rbx,rcx
   140002e05:	lea    rdx,[rip+0x143dc]        # 0x1400171e8
   140002e0c:	lea    rcx,[rsp+0x20]
   140002e11:	xor    r8d,r8d
   140002e14:	call   0x14000bf4c
   140002e19:	add    rbx,0x8
   140002e1d:	mov    edi,0x4
   140002e22:	mov    rcx,QWORD PTR [rbx]
   140002e25:	test   rcx,rcx
   140002e28:	je     0x140002e35
   140002e2a:	xor    edx,edx
   140002e2c:	call   0x14000c0d8
   140002e31:	and    QWORD PTR [rbx],0x0
   140002e35:	add    rbx,0x8
   140002e39:	sub    rdi,0x1
   140002e3d:	jne    0x140002e22
   140002e3f:	lea    rcx,[rsp+0x20]
   140002e44:	call   0x14000bf98
   140002e49:	mov    rbx,QWORD PTR [rsp+0x40]
   140002e4e:	add    rsp,0x30
   140002e52:	pop    rdi
   140002e53:	ret    
   140002e54:	int3   
   140002e55:	int3   
   140002e56:	int3   
   140002e57:	int3   
   140002e58:	int3   
   140002e59:	int3   
   140002e5a:	int3   
   140002e5b:	int3   
   140002e5c:	mov    QWORD PTR [rsp+0x8],rbx
   140002e61:	push   rdi
   140002e62:	sub    rsp,0x30
   140002e66:	movsxd rbx,edx
   140002e69:	mov    rdi,rcx
   140002e6c:	lea    rdx,[rip+0x14395]        # 0x140017208
   140002e73:	xor    r8d,r8d
   140002e76:	lea    rcx,[rsp+0x20]
   140002e7b:	call   0x14000bf4c
   140002e80:	mov    rbx,QWORD PTR [rdi+rbx*8+0x8]
   140002e85:	lea    rcx,[rsp+0x20]
   140002e8a:	call   0x14000bf98
   140002e8f:	mov    rax,rbx
   140002e92:	mov    rbx,QWORD PTR [rsp+0x40]
   140002e97:	add    rsp,0x30
   140002e9b:	pop    rdi
   140002e9c:	ret    
   140002e9d:	int3   
   140002e9e:	int3   
   140002e9f:	int3   
   140002ea0:	int3   
   140002ea1:	int3   
   140002ea2:	int3   
   140002ea3:	int3   
   140002ea4:	mov    QWORD PTR [rsp+0x8],rbx
   140002ea9:	mov    QWORD PTR [rsp+0x10],rsi
   140002eae:	push   rdi
   140002eaf:	sub    rsp,0x30
   140002eb3:	mov    ebx,edx
   140002eb5:	mov    rsi,rcx
   140002eb8:	lea    rdx,[rip+0x14361]        # 0x140017220
   140002ebf:	xor    r8d,r8d
   140002ec2:	lea    rcx,[rsp+0x20]
   140002ec7:	call   0x14000bf4c
   140002ecc:	xor    edi,edi
   140002ece:	test   ebx,ebx
   140002ed0:	je     0x140002f27
   140002ed2:	sub    ebx,0x1
   140002ed5:	je     0x140002f22
   140002ed7:	sub    ebx,0x1
   140002eda:	je     0x140002f1d
   140002edc:	sub    ebx,0x1
   140002edf:	je     0x140002f18
   140002ee1:	sub    ebx,0x1
   140002ee4:	je     0x140002f13
   140002ee6:	sub    ebx,0x1
   140002ee9:	je     0x140002f0e
   140002eeb:	sub    ebx,0x1
   140002eee:	je     0x140002eff
   140002ef0:	sub    ebx,0x1
   140002ef3:	je     0x140002f2a
   140002ef5:	cmp    ebx,0x1
   140002ef8:	jne    0x140002f2a
   140002efa:	mov    edi,DWORD PTR [rsi+0x44]
   140002efd:	jmp    0x140002f2a
   140002eff:	mov    ecx,0x8
   140002f04:	call   QWORD PTR [rip+0x13426]        # 0x140016330
   140002f0a:	mov    edi,eax
   140002f0c:	jmp    0x140002f2a
   140002f0e:	mov    edi,DWORD PTR [rsi+0x3c]
   140002f11:	jmp    0x140002f2a
   140002f13:	mov    edi,DWORD PTR [rsi+0x38]
   140002f16:	jmp    0x140002f2a
   140002f18:	mov    edi,DWORD PTR [rsi+0x34]
   140002f1b:	jmp    0x140002f2a
   140002f1d:	mov    edi,DWORD PTR [rsi+0x30]
   140002f20:	jmp    0x140002f2a
   140002f22:	mov    edi,DWORD PTR [rsi+0x2c]
   140002f25:	jmp    0x140002f2a
   140002f27:	mov    edi,DWORD PTR [rsi+0x28]
   140002f2a:	lea    rcx,[rsp+0x20]
   140002f2f:	call   0x14000bf98
   140002f34:	mov    rbx,QWORD PTR [rsp+0x40]
   140002f39:	mov    eax,edi
   140002f3b:	mov    rsi,QWORD PTR [rsp+0x48]
   140002f40:	add    rsp,0x30
   140002f44:	pop    rdi
   140002f45:	ret    
   140002f46:	int3   
   140002f47:	int3   
   140002f48:	int3   
   140002f49:	int3   
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	mov    QWORD PTR [rsp+0x8],rbx
   140002f51:	mov    QWORD PTR [rsp+0x10],rsi
   140002f56:	push   rdi
   140002f57:	sub    rsp,0x60
   140002f5b:	mov    edi,edx
   140002f5d:	lea    rcx,[rsp+0x22]
   140002f62:	xor    edx,edx
   140002f64:	mov    rsi,r8
   140002f67:	mov    bl,r9b
   140002f6a:	lea    r8d,[rdx+0x36]
   140002f6e:	call   0x140014b26
   140002f73:	movups xmm0,XMMWORD PTR [rip+0x13f4e]        # 0x140016ec8
   140002f7a:	mov    eax,0x38
   140002f7f:	mov    DWORD PTR [rsp+0x4c],0x20000
   140002f87:	lea    rdx,[rsp+0x20]
   140002f8c:	mov    WORD PTR [rsp+0x20],ax
   140002f91:	mov    rcx,rsi
   140002f94:	mov    BYTE PTR [rsp+0x24],bl
   140002f98:	movdqu XMMWORD PTR [rsp+0x38],xmm0
   140002f9e:	mov    WORD PTR [rsp+0x26],di
   140002fa3:	mov    DWORD PTR [rsp+0x50],edi
   140002fa7:	call   QWORD PTR [rip+0x1307b]        # 0x140016028
   140002fad:	mov    rbx,QWORD PTR [rsp+0x70]
   140002fb2:	mov    rsi,QWORD PTR [rsp+0x78]
   140002fb7:	add    rsp,0x60
   140002fbb:	pop    rdi
   140002fbc:	ret    
   140002fbd:	int3   
   140002fbe:	int3   
   140002fbf:	int3   
   140002fc0:	int3   
   140002fc1:	int3   
   140002fc2:	int3   
   140002fc3:	int3   
   140002fc4:	sub    rsp,0x38
   140002fc8:	and    QWORD PTR [rsp+0x20],0x0
   140002fce:	lea    r8,[rip+0x144f3]        # 0x1400174c8
   140002fd5:	movzx  r9d,dx
   140002fd9:	mov    edx,0x2b
   140002fde:	call   QWORD PTR [rip+0x1301c]        # 0x140016000
   140002fe4:	add    rsp,0x38
   140002fe8:	ret    
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	mov    r11,rsp
   140002ff3:	sub    rsp,0xa8
   140002ffa:	xor    eax,eax
   140002ffc:	mov    DWORD PTR [r11-0x10],0x6
   140003004:	mov    QWORD PTR [r11-0x38],rax
   140003008:	mov    DWORD PTR [r11-0x28],eax
   14000300c:	mov    DWORD PTR [r11-0x20],eax
   140003010:	lea    r9d,[rax+0x4]
   140003014:	mov    DWORD PTR [r11-0x18],eax
   140003018:	mov    QWORD PTR [r11-0x40],r9
   14000301c:	lea    rax,[r11+0x40]
   140003020:	mov    QWORD PTR [r11-0x48],rax
   140003024:	lea    rax,[r11-0x28]
   140003028:	mov    QWORD PTR [r11-0x50],r9
   14000302c:	mov    QWORD PTR [r11-0x58],rax
   140003030:	lea    rax,[r11-0x20]
   140003034:	mov    QWORD PTR [r11-0x60],r9
   140003038:	mov    QWORD PTR [r11-0x68],rax
   14000303c:	lea    rax,[r11-0x18]
   140003040:	mov    QWORD PTR [r11-0x70],r9
   140003044:	mov    QWORD PTR [r11-0x78],rax
   140003048:	lea    rax,[r11-0x10]
   14000304c:	mov    QWORD PTR [r11-0x80],r9
   140003050:	movzx  r9d,dx
   140003054:	mov    edx,0x2b
   140003059:	mov    QWORD PTR [rsp+0x20],rax
   14000305e:	call   QWORD PTR [rip+0x12f9c]        # 0x140016000
   140003064:	add    rsp,0xa8
   14000306b:	ret    
   14000306c:	int3   
   14000306d:	int3   
   14000306e:	int3   
   14000306f:	int3   
   140003070:	int3   
   140003071:	int3   
   140003072:	int3   
   140003073:	int3   
   140003074:	rex push rbx
   140003076:	sub    rsp,0x30
   14000307a:	lea    rax,[rip+0x13af7]        # 0x140016b78
   140003081:	mov    rbx,rcx
   140003084:	mov    QWORD PTR [rcx],rax
   140003087:	lea    rdx,[rip+0x141f2]        # 0x140017280
   14000308e:	lea    rcx,[rsp+0x20]
   140003093:	xor    r8d,r8d
   140003096:	call   0x14000bf4c
   14000309b:	mov    rcx,rbx
   14000309e:	call   0x140003760
   1400030a3:	lea    rcx,[rsp+0x20]
   1400030a8:	call   0x14000bf98
   1400030ad:	mov    rcx,rbx
   1400030b0:	add    rsp,0x30
   1400030b4:	pop    rbx
   1400030b5:	jmp    0x140001be8
   1400030ba:	int3   
   1400030bb:	int3   
   1400030bc:	int3   
   1400030bd:	int3   
   1400030be:	int3   
   1400030bf:	int3   
   1400030c0:	rex push rbx
   1400030c2:	sub    rsp,0x30
   1400030c6:	and    DWORD PTR [rsp+0x48],0x0
   1400030cb:	lea    r8,[rsp+0x48]
   1400030d0:	mov    rbx,rdx
   1400030d3:	lea    rcx,[rsp+0x20]
   1400030d8:	lea    rdx,[rip+0x141d1]        # 0x1400172b0
   1400030df:	call   0x14000bf4c
   1400030e4:	test   rbx,rbx
   1400030e7:	jne    0x140003125
   1400030e9:	mov    DWORD PTR [rsp+0x48],0x80004003
   1400030f1:	mov    rcx,QWORD PTR [rip+0x1af28]        # 0x14001e020
   1400030f8:	lea    rax,[rip+0x1af21]        # 0x14001e020
   1400030ff:	cmp    rcx,rax
   140003102:	je     0x140003135
   140003104:	test   BYTE PTR [rcx+0x1c],0x4
   140003108:	je     0x140003135
   14000310a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000310e:	lea    edx,[rbx+0xb]
   140003111:	mov    r9d,0x80004003
   140003117:	lea    r8,[rip+0x143aa]        # 0x1400174c8
   14000311e:	call   0x140001228
   140003123:	jmp    0x140003135
   140003125:	mov    QWORD PTR [rbx+0x48],0x68
   14000312d:	mov    QWORD PTR [rbx+0x10],0x66
   140003135:	lea    rcx,[rsp+0x20]
   14000313a:	call   0x14000bf98
   14000313f:	add    rsp,0x30
   140003143:	pop    rbx
   140003144:	ret    
   140003145:	int3   
   140003146:	int3   
   140003147:	int3   
   140003148:	int3   
   140003149:	int3   
   14000314a:	int3   
   14000314b:	int3   
   14000314c:	int3   
   14000314d:	int3   
   14000314e:	int3   
   14000314f:	int3   
   140003150:	mov    QWORD PTR [rsp+0x10],rbx
   140003155:	mov    QWORD PTR [rsp+0x18],rsi
   14000315a:	push   rbp
   14000315b:	push   rdi
   14000315c:	push   r12
   14000315e:	lea    rbp,[rsp-0x1b0]
   140003166:	sub    rsp,0x2b0
   14000316d:	mov    rax,QWORD PTR [rip+0x1ae9c]        # 0x14001e010
   140003174:	xor    rax,rsp
   140003177:	mov    QWORD PTR [rbp+0x1a0],rax
   14000317e:	and    DWORD PTR [rsp+0x60],0x0
   140003183:	lea    r8,[rsp+0x60]
   140003188:	mov    rdi,rcx
   14000318b:	lea    rdx,[rip+0x14146]        # 0x1400172d8
   140003192:	lea    rcx,[rsp+0x78]
   140003197:	call   0x14000bf4c
   14000319c:	mov    rcx,QWORD PTR [rdi+0x50]
   1400031a0:	call   0x140001a3c
   1400031a5:	and    DWORD PTR [rsp+0x64],0x0
   1400031aa:	lea    r8,[rsp+0x64]
   1400031af:	lea    rdx,[rip+0x15012]        # 0x1400181c8
   1400031b6:	mov    rbx,rax
   1400031b9:	lea    rcx,[rsp+0x68]
   1400031be:	call   0x14000bf4c
   1400031c3:	mov    edx,0x6b
   1400031c8:	mov    rcx,rbx
   1400031cb:	call   QWORD PTR [rip+0x1325f]        # 0x140016430
   1400031d1:	lea    r12,[rip+0x1ae48]        # 0x14001e020
   1400031d8:	mov    rbx,rax
   1400031db:	test   rax,rax
   1400031de:	jne    0x140003220
   1400031e0:	call   QWORD PTR [rip+0x130a2]        # 0x140016288
   1400031e6:	movzx  ecx,ax
   1400031e9:	or     ecx,0x80070000
   1400031ef:	test   eax,eax
   1400031f1:	cmovle ecx,eax
   1400031f4:	mov    DWORD PTR [rsp+0x64],ecx
   1400031f8:	mov    rax,QWORD PTR [rip+0x1ae21]        # 0x14001e020
   1400031ff:	cmp    rax,r12
   140003202:	je     0x140003224
   140003204:	test   BYTE PTR [rax+0x1c],0x4
   140003208:	je     0x140003224
   14000320a:	mov    r9d,ecx
   14000320d:	lea    edx,[rbx+0x31]
   140003210:	mov    rcx,QWORD PTR [rax+0x10]
   140003214:	lea    r8,[rip+0x1519d]        # 0x1400183b8
   14000321b:	call   0x140001228
   140003220:	mov    ecx,DWORD PTR [rsp+0x64]
   140003224:	mov    DWORD PTR [rsp+0x60],ecx
   140003228:	lea    rcx,[rsp+0x68]
   14000322d:	call   0x14000bf98
   140003232:	cmp    DWORD PTR [rsp+0x60],0x0
   140003237:	jl     0x14000324a
   140003239:	mov    rcx,QWORD PTR [rdi+0x48]
   14000323d:	lea    r9,[rsp+0x60]
   140003242:	mov    r8,rbx
   140003245:	call   0x14000c764
   14000324a:	mov    rcx,rdi
   14000324d:	call   0x140003484
   140003252:	mov    r8d,0x88
   140003258:	mov    rcx,rdi
   14000325b:	call   0x140001ef8
   140003260:	mov    DWORD PTR [rsp+0x60],eax
   140003264:	test   eax,eax
   140003266:	jns    0x14000327a
   140003268:	mov    r8d,0x403
   14000326e:	mov    rcx,rdi
   140003271:	call   0x140001ef8
   140003276:	mov    DWORD PTR [rsp+0x60],eax
   14000327a:	mov    r8d,0x104
   140003280:	lea    rdx,[rbp-0x70]
   140003284:	lea    rcx,[rip+0x14075]        # 0x140017300
   14000328b:	xor    esi,esi
   14000328d:	xor    ebx,ebx
   14000328f:	call   QWORD PTR [rip+0x12f33]        # 0x1400161c8
   140003295:	test   eax,eax
   140003297:	je     0x14000342e
   14000329d:	lea    rcx,[rbp-0x70]
   1400032a1:	call   QWORD PTR [rip+0x13021]        # 0x1400162c8
   1400032a7:	mov    esi,eax
   1400032a9:	test   eax,eax
   1400032ab:	je     0x140003404
   1400032b1:	and    QWORD PTR [rsp+0x58],rbx
   1400032b6:	lea    rdx,[rip+0x140c3]        # 0x140017380
   1400032bd:	and    QWORD PTR [rsp+0x50],rbx
   1400032c2:	mov    r9d,0x40800000
   1400032c8:	mov    rcx,QWORD PTR [rdi+0x48]
   1400032cc:	xor    r8d,r8d
   1400032cf:	mov    QWORD PTR [rsp+0x48],0x3ee
   1400032d8:	mov    QWORD PTR [rsp+0x40],rcx
   1400032dd:	xor    ecx,ecx
   1400032df:	and    DWORD PTR [rsp+0x38],ebx
   1400032e3:	and    DWORD PTR [rsp+0x30],ebx
   1400032e7:	and    DWORD PTR [rsp+0x28],ebx
   1400032eb:	and    DWORD PTR [rsp+0x20],ebx
   1400032ef:	call   QWORD PTR [rip+0x13043]        # 0x140016338
   1400032f5:	mov    rbx,rax
   1400032f8:	test   rax,rax
   1400032fb:	je     0x1400033eb
   140003301:	lea    r9,[rbp-0x70]
   140003305:	xor    r8d,r8d
   140003308:	mov    edx,0x467
   14000330d:	mov    rcx,rax
   140003310:	call   QWORD PTR [rip+0x12ff2]        # 0x140016308
   140003316:	test   eax,eax
   140003318:	je     0x140003352
   14000331a:	mov    r9,0xffffffffffff0000
   140003321:	or     r8,0xffffffffffffffff
   140003325:	mov    edx,0x465
   14000332a:	mov    rcx,rbx
   14000332d:	call   QWORD PTR [rip+0x12fd5]        # 0x140016308
   140003333:	test   eax,eax
   140003335:	jne    0x14000346a
   14000333b:	mov    rcx,QWORD PTR [rip+0x1acde]        # 0x14001e020
   140003342:	cmp    rcx,r12
   140003345:	je     0x140003372
   140003347:	test   BYTE PTR [rcx+0x1c],0x4
   14000334b:	je     0x140003372
   14000334d:	lea    edx,[rax+0xc]
   140003350:	jmp    0x140003369
   140003352:	mov    rcx,QWORD PTR [rip+0x1acc7]        # 0x14001e020
   140003359:	cmp    rcx,r12
   14000335c:	je     0x140003372
   14000335e:	test   BYTE PTR [rcx+0x1c],0x4
   140003362:	je     0x140003372
   140003364:	mov    edx,0xd
   140003369:	mov    rcx,QWORD PTR [rcx+0x10]
   14000336d:	call   0x140002fc4
   140003372:	mov    rcx,rbx
   140003375:	call   QWORD PTR [rip+0x12fc5]        # 0x140016340
   14000337b:	xor    edx,edx
   14000337d:	xor    ecx,ecx
   14000337f:	call   QWORD PTR [rip+0x12fa3]        # 0x140016328
   140003385:	mov    edx,0x401
   14000338a:	mov    r8d,0x5
   140003390:	mov    rcx,rdi
   140003393:	call   0x140002810
   140003398:	call   QWORD PTR [rip+0x1330a]        # 0x1400166a8
   14000339e:	mov    ebx,0x1
   1400033a3:	test   eax,eax
   1400033a5:	je     0x1400033b7
   1400033a7:	mov    r8d,ebx
   1400033aa:	mov    edx,0x59b
   1400033af:	xor    ecx,ecx
   1400033b1:	call   QWORD PTR [rip+0x132c9]        # 0x140016680
   1400033b7:	lea    rcx,[rsp+0x78]
   1400033bc:	call   0x14000bf98
   1400033c1:	mov    rax,rbx
   1400033c4:	mov    rcx,QWORD PTR [rbp+0x1a0]
   1400033cb:	xor    rcx,rsp
   1400033ce:	call   0x1400146a0
   1400033d3:	lea    r11,[rsp+0x2b0]
   1400033db:	mov    rbx,QWORD PTR [r11+0x28]
   1400033df:	mov    rsi,QWORD PTR [r11+0x30]
   1400033e3:	mov    rsp,r11
   1400033e6:	pop    r12
   1400033e8:	pop    rdi
   1400033e9:	pop    rbp
   1400033ea:	ret    
   1400033eb:	mov    rcx,QWORD PTR [rip+0x1ac2e]        # 0x14001e020
   1400033f2:	cmp    rcx,r12
   1400033f5:	je     0x140003462
   1400033f7:	test   BYTE PTR [rcx+0x1c],0x4
   1400033fb:	je     0x140003462
   1400033fd:	mov    edx,0xe
   140003402:	jmp    0x140003423
   140003404:	mov    rcx,QWORD PTR [rip+0x1ac15]        # 0x14001e020
   14000340b:	cmp    rcx,r12
   14000340e:	je     0x14000337b
   140003414:	test   BYTE PTR [rcx+0x1c],0x4
   140003418:	je     0x14000337b
   14000341e:	mov    edx,0xf
   140003423:	mov    rcx,QWORD PTR [rcx+0x10]
   140003427:	call   0x140002fc4
   14000342c:	jmp    0x140003462
   14000342e:	mov    rcx,QWORD PTR [rip+0x1abeb]        # 0x14001e020
   140003435:	cmp    rcx,r12
   140003438:	je     0x14000337b
   14000343e:	test   BYTE PTR [rcx+0x1c],0x4
   140003442:	je     0x14000337b
   140003448:	mov    r9d,DWORD PTR [rsp+0x60]
   14000344d:	lea    r8,[rip+0x14074]        # 0x1400174c8
   140003454:	mov    rcx,QWORD PTR [rcx+0x10]
   140003458:	mov    edx,0x10
   14000345d:	call   0x140001228
   140003462:	test   esi,esi
   140003464:	je     0x14000337b
   14000346a:	mov    edx,0x5
   14000346f:	mov    rcx,rbx
   140003472:	call   QWORD PTR [rip+0x12eb0]        # 0x140016328
   140003478:	jmp    0x140003398
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	int3   
   140003481:	int3   
   140003482:	int3   
   140003483:	int3   
   140003484:	mov    rax,rsp
   140003487:	mov    QWORD PTR [rax+0x10],rbx
   14000348b:	push   rdi
   14000348c:	sub    rsp,0x30
   140003490:	and    DWORD PTR [rax+0x8],0x0
   140003494:	lea    r8,[rax+0x8]
   140003498:	mov    rdi,rcx
   14000349b:	lea    rdx,[rip+0x13efe]        # 0x1400173a0
   1400034a2:	lea    rcx,[rax-0x18]
   1400034a6:	call   0x14000bf4c
   1400034ab:	mov    edx,0x2
   1400034b0:	mov    rcx,rdi
   1400034b3:	call   0x140002e5c
   1400034b8:	mov    r8,rax
   1400034bb:	mov    edx,0x3f5
   1400034c0:	mov    rcx,rdi
   1400034c3:	mov    rbx,rax
   1400034c6:	call   0x140001e28
   1400034cb:	mov    r8,rbx
   1400034ce:	mov    DWORD PTR [rsp+0x40],eax
   1400034d2:	mov    edx,0x3f6
   1400034d7:	mov    rcx,rdi
   1400034da:	call   0x140001e28
   1400034df:	cmp    QWORD PTR [rdi+0x68],0x0
   1400034e4:	mov    DWORD PTR [rsp+0x40],eax
   1400034e8:	jne    0x140003503
   1400034ea:	xor    edx,edx
   1400034ec:	lea    r9,[rsp+0x40]
   1400034f1:	mov    r8d,0x7c7c7c
   1400034f7:	lea    ecx,[rdx+0x6]
   1400034fa:	call   0x14000cb20
   1400034ff:	mov    QWORD PTR [rdi+0x68],rax
   140003503:	lea    rcx,[rsp+0x20]
   140003508:	call   0x14000bf98
   14000350d:	mov    rbx,QWORD PTR [rsp+0x48]
   140003512:	add    rsp,0x30
   140003516:	pop    rdi
   140003517:	ret    
   140003518:	int3   
   140003519:	int3   
   14000351a:	int3   
   14000351b:	int3   
   14000351c:	int3   
   14000351d:	int3   
   14000351e:	int3   
   14000351f:	int3   
   140003520:	mov    rax,rsp
   140003523:	push   rdi
   140003524:	sub    rsp,0x60
   140003528:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140003530:	mov    QWORD PTR [rax+0x8],rbx
   140003534:	mov    QWORD PTR [rax+0x10],rbp
   140003538:	mov    QWORD PTR [rax+0x20],rsi
   14000353c:	mov    rbx,r8
   14000353f:	mov    rsi,rdx
   140003542:	mov    rbp,rcx
   140003545:	xor    edi,edi
   140003547:	mov    DWORD PTR [rax+0x18],edi
   14000354a:	lea    r8,[rax+0x18]
   14000354e:	lea    rdx,[rip+0x13e83]        # 0x1400173d8
   140003555:	lea    rcx,[rax-0x20]
   140003559:	call   0x14000bf4c
   14000355e:	nop
   14000355f:	test   rbx,rbx
   140003562:	jne    0x1400035ab
   140003564:	mov    DWORD PTR [rsp+0x80],0x80070057
   14000356f:	lea    rax,[rip+0x1aaaa]        # 0x14001e020
   140003576:	mov    rcx,QWORD PTR [rip+0x1aaa3]        # 0x14001e020
   14000357d:	cmp    rcx,rax
   140003580:	je     0x1400035a1
   140003582:	test   BYTE PTR [rcx+0x1c],0x4
   140003586:	je     0x1400035a1
   140003588:	lea    edx,[rdi+0x11]
   14000358b:	mov    r9d,0x80070057
   140003591:	lea    r8,[rip+0x13f30]        # 0x1400174c8
   140003598:	mov    rcx,QWORD PTR [rcx+0x10]
   14000359c:	call   0x140001228
   1400035a1:	mov    ebx,0x1
   1400035a6:	jmp    0x1400036e8
   1400035ab:	cmp    DWORD PTR [rbx+0x10],0xffffff2f
   1400035b2:	je     0x14000369b
   1400035b8:	cmp    DWORD PTR [rbx+0x10],0xffffff31
   1400035bf:	je     0x140003640
   1400035c1:	cmp    DWORD PTR [rbx+0x10],0xffffff38
   1400035c8:	jne    0x1400036e5
   1400035ce:	mov    rcx,QWORD PTR [rip+0x1aa4b]        # 0x14001e020
   1400035d5:	mov    r8,QWORD PTR [rcx+0x10]
   1400035d9:	test   r8,r8
   1400035dc:	je     0x1400035f2
   1400035de:	mov    r9b,0x2
   1400035e1:	mov    edx,0x40c
   1400035e6:	call   0x140002f4c
   1400035eb:	mov    rcx,QWORD PTR [rip+0x1aa2e]        # 0x14001e020
   1400035f2:	lea    rax,[rip+0x1aa27]        # 0x14001e020
   1400035f9:	cmp    rcx,rax
   1400035fc:	je     0x140003624
   1400035fe:	test   DWORD PTR [rcx+0x1c],0x2000
   140003605:	je     0x140003624
   140003607:	mov    edx,0x12
   14000360c:	mov    DWORD PTR [rsp+0x38],0xfa2
   140003614:	lea    r8,[rip+0x13ead]        # 0x1400174c8
   14000361b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000361f:	call   0x140002ff0
   140003624:	mov    r9d,0x2
   14000362a:	xor    r8d,r8d
   14000362d:	mov    edx,0x470
   140003632:	mov    rcx,QWORD PTR [rbx]
   140003635:	call   QWORD PTR [rip+0x12d2d]        # 0x140016368
   14000363b:	jmp    0x1400036e5
   140003640:	mov    rcx,QWORD PTR [rip+0x1a9d9]        # 0x14001e020
   140003647:	mov    r8,QWORD PTR [rcx+0x10]
   14000364b:	test   r8,r8
   14000364e:	je     0x140003667
   140003650:	mov    edx,0x40d
   140003655:	mov    r9d,0x1
   14000365b:	call   0x140002f4c
   140003660:	mov    rcx,QWORD PTR [rip+0x1a9b9]        # 0x14001e020
   140003667:	lea    rax,[rip+0x1a9b2]        # 0x14001e020
   14000366e:	cmp    rcx,rax
   140003671:	je     0x1400036e5
   140003673:	test   DWORD PTR [rcx+0x1c],0x2000
   14000367a:	je     0x1400036e5
   14000367c:	mov    edx,0x13
   140003681:	mov    DWORD PTR [rsp+0x38],0xfa3
   140003689:	lea    r8,[rip+0x13e38]        # 0x1400174c8
   140003690:	mov    rcx,QWORD PTR [rcx+0x10]
   140003694:	call   0x140002ff0
   140003699:	jmp    0x1400036e5
   14000369b:	lea    rax,[rip+0x1a97e]        # 0x14001e020
   1400036a2:	mov    rcx,QWORD PTR [rip+0x1a977]        # 0x14001e020
   1400036a9:	cmp    rcx,rax
   1400036ac:	je     0x1400036d4
   1400036ae:	test   DWORD PTR [rcx+0x1c],0x2000
   1400036b5:	je     0x1400036d4
   1400036b7:	mov    edx,0x14
   1400036bc:	mov    DWORD PTR [rsp+0x38],0xfa4
   1400036c4:	lea    r8,[rip+0x13dfd]        # 0x1400174c8
   1400036cb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400036cf:	call   0x140002ff0
   1400036d4:	mov    r8,rbx
   1400036d7:	mov    rdx,rsi
   1400036da:	mov    rcx,rbp
   1400036dd:	call   0x140002510
   1400036e2:	mov    rdi,rax
   1400036e5:	mov    rbx,rdi
   1400036e8:	lea    rcx,[rsp+0x48]
   1400036ed:	call   0x14000bf98
   1400036f2:	mov    rax,rbx
   1400036f5:	lea    r11,[rsp+0x60]
   1400036fa:	mov    rbx,QWORD PTR [r11+0x10]
   1400036fe:	mov    rbp,QWORD PTR [r11+0x18]
   140003702:	mov    rsi,QWORD PTR [r11+0x28]
   140003706:	mov    rsp,r11
   140003709:	pop    rdi
   14000370a:	ret    
   14000370b:	int3   
   14000370c:	int3   
   14000370d:	int3   
   14000370e:	int3   
   14000370f:	int3   
   140003710:	int3   
   140003711:	int3   
   140003712:	int3   
   140003713:	int3   
   140003714:	int3   
   140003715:	int3   
   140003716:	int3   
   140003717:	int3   
   140003718:	int3   
   140003719:	int3   
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	rex push rbx
   140003722:	sub    rsp,0x30
   140003726:	mov    rbx,rcx
   140003729:	lea    rdx,[rip+0x13cc8]        # 0x1400173f8
   140003730:	lea    rcx,[rsp+0x20]
   140003735:	xor    r8d,r8d
   140003738:	call   0x14000bf4c
   14000373d:	mov    rcx,rbx
   140003740:	call   0x140003760
   140003745:	lea    rcx,[rsp+0x20]
   14000374a:	call   0x14000bf98
   14000374f:	xor    eax,eax
   140003751:	add    rsp,0x30
   140003755:	pop    rbx
   140003756:	ret    
   140003757:	int3   
   140003758:	int3   
   140003759:	int3   
   14000375a:	int3   
   14000375b:	int3   
   14000375c:	int3   
   14000375d:	int3   
   14000375e:	int3   
   14000375f:	int3   
   140003760:	rex push rbx
   140003762:	sub    rsp,0x30
   140003766:	and    DWORD PTR [rsp+0x40],0x0
   14000376b:	lea    r8,[rsp+0x40]
   140003770:	mov    rbx,rcx
   140003773:	lea    rdx,[rip+0x13c9e]        # 0x140017418
   14000377a:	lea    rcx,[rsp+0x20]
   14000377f:	call   0x14000bf4c
   140003784:	mov    rcx,QWORD PTR [rbx+0x68]
   140003788:	test   rcx,rcx
   14000378b:	je     0x140003799
   14000378d:	xor    edx,edx
   14000378f:	call   0x14000c0d8
   140003794:	and    QWORD PTR [rbx+0x68],0x0
   140003799:	lea    rcx,[rsp+0x20]
   14000379e:	call   0x14000bf98
   1400037a3:	add    rsp,0x30
   1400037a7:	pop    rbx
   1400037a8:	ret    
   1400037a9:	int3   
   1400037aa:	int3   
   1400037ab:	int3   
   1400037ac:	int3   
   1400037ad:	int3   
   1400037ae:	int3   
   1400037af:	int3   
   1400037b0:	mov    rax,rsp
   1400037b3:	mov    QWORD PTR [rax+0x10],rbx
   1400037b7:	mov    QWORD PTR [rax+0x18],rsi
   1400037bb:	mov    QWORD PTR [rax+0x20],rdi
   1400037bf:	push   rbp
   1400037c0:	lea    rbp,[rax-0x5f]
   1400037c4:	sub    rsp,0xd0
   1400037cb:	mov    rax,QWORD PTR [rip+0x1a83e]        # 0x14001e010
   1400037d2:	xor    rax,rsp
   1400037d5:	mov    QWORD PTR [rbp+0x47],rax
   1400037d9:	and    DWORD PTR [rbp-0x49],0x0
   1400037dd:	lea    r8,[rbp-0x49]
   1400037e1:	mov    rbx,rcx
   1400037e4:	lea    rdx,[rip+0x13c4d]        # 0x140017438
   1400037eb:	lea    rcx,[rbp-0x31]
   1400037ef:	call   0x14000bf4c
   1400037f4:	cmp    QWORD PTR [rbx+0x68],0x0
   1400037f9:	je     0x140003966
   1400037ff:	mov    rcx,QWORD PTR [rbx+0x48]
   140003803:	lea    rdx,[rbp-0x9]
   140003807:	call   QWORD PTR [rip+0x12b63]        # 0x140016370
   14000380d:	mov    rdi,rax
   140003810:	test   rax,rax
   140003813:	jne    0x140003869
   140003815:	call   QWORD PTR [rip+0x12a6d]        # 0x140016288
   14000381b:	movzx  r9d,ax
   14000381f:	or     r9d,0x80070000
   140003826:	test   eax,eax
   140003828:	cmovle r9d,eax
   14000382c:	mov    DWORD PTR [rbp-0x49],r9d
   140003830:	mov    rcx,QWORD PTR [rip+0x1a7e9]        # 0x14001e020
   140003837:	lea    rax,[rip+0x1a7e2]        # 0x14001e020
   14000383e:	cmp    rcx,rax
   140003841:	je     0x140003966
   140003847:	test   BYTE PTR [rcx+0x1c],0x4
   14000384b:	je     0x140003966
   140003851:	mov    rcx,QWORD PTR [rcx+0x10]
   140003855:	lea    edx,[rdi+0x15]
   140003858:	lea    r8,[rip+0x13c69]        # 0x1400174c8
   14000385f:	call   0x140001228
   140003864:	jmp    0x140003966
   140003869:	mov    rcx,QWORD PTR [rbx+0x48]
   14000386d:	lea    r8,[rbp-0x49]
   140003871:	mov    edx,0x401
   140003876:	call   0x14000d6ec
   14000387b:	mov    rsi,rax
   14000387e:	test   rax,rax
   140003881:	je     0x140003958
   140003887:	mov    rcx,rax
   14000388a:	call   QWORD PTR [rip+0x12b10]        # 0x1400163a0
   140003890:	test   eax,eax
   140003892:	je     0x140003958
   140003898:	lea    r8,[rbp-0x49]
   14000389c:	mov    rcx,rsi
   14000389f:	lea    rdx,[rbp-0x21]
   1400038a3:	call   0x14000c8e8
   1400038a8:	cmp    DWORD PTR [rbp-0x49],0x0
   1400038ac:	jl     0x140003958
   1400038b2:	mov    eax,DWORD PTR [rbp-0x21]
   1400038b5:	lea    r8,[rbp-0x49]
   1400038b9:	mov    rcx,QWORD PTR [rbx+0x48]
   1400038bd:	lea    rdx,[rbp-0x41]
   1400038c1:	dec    eax
   1400038c3:	mov    DWORD PTR [rbp-0x41],eax
   1400038c6:	mov    eax,DWORD PTR [rbp-0x1d]
   1400038c9:	dec    eax
   1400038cb:	mov    DWORD PTR [rbp-0x3d],eax
   1400038ce:	mov    eax,DWORD PTR [rbp-0x19]
   1400038d1:	inc    eax
   1400038d3:	mov    DWORD PTR [rbp-0x39],eax
   1400038d6:	mov    eax,DWORD PTR [rbp-0x15]
   1400038d9:	inc    eax
   1400038db:	mov    DWORD PTR [rbp-0x35],eax
   1400038de:	call   0x14000c3c0
   1400038e3:	cmp    DWORD PTR [rbp-0x49],0x0
   1400038e7:	jl     0x140003958
   1400038e9:	mov    rcx,QWORD PTR [rbx+0x48]
   1400038ed:	lea    r8,[rbp-0x49]
   1400038f1:	lea    rdx,[rbp-0x39]
   1400038f5:	call   0x14000c3c0
   1400038fa:	cmp    DWORD PTR [rbp-0x49],0x0
   1400038fe:	jl     0x140003958
   140003900:	mov    rdx,QWORD PTR [rbx+0x68]
   140003904:	lea    r8,[rbp-0x49]
   140003908:	mov    rcx,rdi
   14000390b:	call   0x14000c018
   140003910:	cmp    DWORD PTR [rbp-0x49],0x0
   140003914:	mov    rsi,rax
   140003917:	jl     0x140003958
   140003919:	cmp    DWORD PTR [rbx+0x60],0x0
   14000391d:	mov    r8d,DWORD PTR [rbp-0x3d]
   140003921:	je     0x140003933
   140003923:	mov    ecx,DWORD PTR [rbp-0x35]
   140003926:	mov    r9d,DWORD PTR [rbp-0x41]
   14000392a:	mov    edx,DWORD PTR [rbp-0x39]
   14000392d:	mov    DWORD PTR [rsp+0x20],ecx
   140003931:	jmp    0x140003941
   140003933:	mov    eax,DWORD PTR [rbp-0x35]
   140003936:	mov    r9d,DWORD PTR [rbp-0x39]
   14000393a:	mov    edx,DWORD PTR [rbp-0x41]
   14000393d:	mov    DWORD PTR [rsp+0x20],eax
   140003941:	mov    rcx,rdi
   140003944:	call   QWORD PTR [rip+0x127b6]        # 0x140016100
   14000394a:	xor    r8d,r8d
   14000394d:	mov    rdx,rsi
   140003950:	mov    rcx,rdi
   140003953:	call   0x14000c018
   140003958:	mov    rcx,QWORD PTR [rbx+0x48]
   14000395c:	lea    rdx,[rbp-0x9]
   140003960:	call   QWORD PTR [rip+0x12a42]        # 0x1400163a8
   140003966:	lea    rcx,[rbp-0x31]
   14000396a:	call   0x14000bf98
   14000396f:	mov    eax,0x1
   140003974:	mov    rcx,QWORD PTR [rbp+0x47]
   140003978:	xor    rcx,rsp
   14000397b:	call   0x1400146a0
   140003980:	lea    r11,[rsp+0xd0]
   140003988:	mov    rbx,QWORD PTR [r11+0x18]
   14000398c:	mov    rsi,QWORD PTR [r11+0x20]
   140003990:	mov    rdi,QWORD PTR [r11+0x28]
   140003994:	mov    rsp,r11
   140003997:	pop    rbp
   140003998:	ret    
   140003999:	int3   
   14000399a:	int3   
   14000399b:	int3   
   14000399c:	int3   
   14000399d:	int3   
   14000399e:	int3   
   14000399f:	int3   
   1400039a0:	mov    rax,rsp
   1400039a3:	mov    QWORD PTR [rax+0x10],rbx
   1400039a7:	mov    QWORD PTR [rax+0x18],rsi
   1400039ab:	mov    QWORD PTR [rax+0x20],rdi
   1400039af:	push   rbp
   1400039b0:	push   r12
   1400039b2:	push   r13
   1400039b4:	push   r14
   1400039b6:	push   r15
   1400039b8:	lea    rbp,[rax-0x5f]
   1400039bc:	sub    rsp,0xb0
   1400039c3:	mov    rax,QWORD PTR [rip+0x1a646]        # 0x14001e010
   1400039ca:	xor    rax,rsp
   1400039cd:	mov    QWORD PTR [rbp+0x27],rax
   1400039d1:	mov    rdi,rcx
   1400039d4:	lea    r8,[rbp-0x39]
   1400039d8:	xor    r13d,r13d
   1400039db:	lea    rcx,[rbp-0x29]
   1400039df:	lea    rdx,[rip+0x13a72]        # 0x140017458
   1400039e6:	mov    DWORD PTR [rbp-0x39],r13d
   1400039ea:	call   0x14000bf4c
   1400039ef:	mov    rcx,QWORD PTR [rdi+0x48]
   1400039f3:	lea    r8,[rbp-0x39]
   1400039f7:	lea    rdx,[rbp+0x17]
   1400039fb:	call   0x14000c6a4
   140003a00:	cmp    DWORD PTR [rbp-0x39],r13d
   140003a04:	jl     0x140003c62
   140003a0a:	mov    r15d,DWORD PTR [rbp+0x1f]
   140003a0e:	lea    r8,[rbp-0x39]
   140003a12:	mov    rcx,QWORD PTR [rdi+0x48]
   140003a16:	mov    edx,0x3ee
   140003a1b:	sub    r15d,DWORD PTR [rbp+0x17]
   140003a1f:	mov    ebx,r13d
   140003a22:	mov    esi,r13d
   140003a25:	call   0x14000d6ec
   140003a2a:	mov    r14,rax
   140003a2d:	mov    r12d,0x401
   140003a33:	test   rax,rax
   140003a36:	jne    0x140003aa1
   140003a38:	mov    rcx,QWORD PTR [rdi+0x48]
   140003a3c:	lea    r8,[rbp-0x39]
   140003a40:	mov    edx,r12d
   140003a43:	call   0x14000d6ec
   140003a48:	mov    r14,rax
   140003a4b:	test   rax,rax
   140003a4e:	je     0x140003c62
   140003a54:	xor    r9d,r9d
   140003a57:	xor    r8d,r8d
   140003a5a:	mov    edx,0x173
   140003a5f:	mov    rcx,rax
   140003a62:	call   QWORD PTR [rip+0x128a0]        # 0x140016308
   140003a68:	test   rax,rax
   140003a6b:	je     0x140003aa1
   140003a6d:	xor    ecx,ecx
   140003a6f:	mov    DWORD PTR [rbp-0x9],r13d
   140003a73:	mov    QWORD PTR [rbp-0x5],rcx
   140003a77:	lea    r9,[rbp-0x39]
   140003a7b:	mov    QWORD PTR [rbp+0x3],rcx
   140003a7f:	lea    r8,[rbp-0x9]
   140003a83:	mov    QWORD PTR [rbp+0xb],rcx
   140003a87:	lea    edx,[rcx+0x20]
   140003a8a:	mov    DWORD PTR [rbp+0x13],ecx
   140003a8d:	mov    rcx,rax
   140003a90:	call   0x14000c23c
   140003a95:	cmp    DWORD PTR [rbp-0x39],r13d
   140003a99:	jl     0x140003aa1
   140003a9b:	mov    ebx,DWORD PTR [rbp-0x5]
   140003a9e:	mov    esi,DWORD PTR [rbp-0x1]
   140003aa1:	lea    r8,[rbp-0x39]
   140003aa5:	mov    rcx,r14
   140003aa8:	lea    rdx,[rbp-0x19]
   140003aac:	call   0x14000c8e8
   140003ab1:	cmp    DWORD PTR [rbp-0x39],r13d
   140003ab5:	jl     0x140003c62
   140003abb:	mov    eax,DWORD PTR [rbp-0x19]
   140003abe:	mov    edx,0x3f6
   140003ac3:	mov    rcx,QWORD PTR [rdi+0x48]
   140003ac7:	mov    DWORD PTR [rbp-0x31],eax
   140003aca:	call   QWORD PTR [rip+0x12820]        # 0x1400162f0
   140003ad0:	xorps  xmm0,xmm0
   140003ad3:	mov    r14,rax
   140003ad6:	movdqu XMMWORD PTR [rbp-0x9],xmm0
   140003adb:	test   rax,rax
   140003ade:	je     0x140003afe
   140003ae0:	lea    r8,[rbp-0x39]
   140003ae4:	mov    rcx,rax
   140003ae7:	lea    rdx,[rbp-0x9]
   140003aeb:	call   0x14000c8e8
   140003af0:	cmp    DWORD PTR [rbp-0x39],r13d
   140003af4:	jl     0x140003b04
   140003af6:	mov    ecx,DWORD PTR [rbp-0x5]
   140003af9:	mov    DWORD PTR [rbp-0x2d],ecx
   140003afc:	jmp    0x140003b04
   140003afe:	mov    eax,DWORD PTR [rbp-0x15]
   140003b01:	mov    DWORD PTR [rbp-0x2d],eax
   140003b04:	test   ebx,ebx
   140003b06:	jne    0x140003b0e
   140003b08:	mov    ebx,DWORD PTR [rbp-0x11]
   140003b0b:	sub    ebx,DWORD PTR [rbp-0x19]
   140003b0e:	test   esi,esi
   140003b10:	jne    0x140003b18
   140003b12:	mov    esi,DWORD PTR [rbp-0xd]
   140003b15:	sub    esi,DWORD PTR [rbp-0x15]
   140003b18:	mov    rcx,QWORD PTR [rdi+0x48]
   140003b1c:	lea    r8,[rbp-0x39]
   140003b20:	lea    rdx,[rbp-0x31]
   140003b24:	call   0x14000c3c0
   140003b29:	cmp    DWORD PTR [rbp-0x39],r13d
   140003b2d:	jl     0x140003c62
   140003b33:	mov    rcx,QWORD PTR [rdi+0x48]
   140003b37:	xor    r8d,r8d
   140003b3a:	mov    edx,r12d
   140003b3d:	call   0x14000d6ec
   140003b42:	mov    r8d,DWORD PTR [rbp-0x2d]
   140003b46:	lea    rcx,[rbp-0x39]
   140003b4a:	mov    QWORD PTR [rsp+0x30],rcx
   140003b4f:	mov    r12d,r15d
   140003b52:	sub    r12d,ebx
   140003b55:	mov    DWORD PTR [rsp+0x28],r13d
   140003b5a:	dec    r12d
   140003b5d:	mov    DWORD PTR [rsp+0x20],esi
   140003b61:	mov    edx,r12d
   140003b64:	mov    r9d,ebx
   140003b67:	mov    rcx,rax
   140003b6a:	call   0x14000d860
   140003b6f:	cmp    DWORD PTR [rbp-0x39],r13d
   140003b73:	jl     0x140003c62
   140003b79:	mov    rcx,QWORD PTR [rdi+0x48]
   140003b7d:	xor    r8d,r8d
   140003b80:	mov    edx,0x3ed
   140003b85:	call   0x14000d6ec
   140003b8a:	test   rax,rax
   140003b8d:	je     0x140003baf
   140003b8f:	mov    r8d,DWORD PTR [rbp-0x2d]
   140003b93:	mov    r9d,ebx
   140003b96:	mov    QWORD PTR [rsp+0x30],r13
   140003b9b:	mov    edx,r12d
   140003b9e:	mov    DWORD PTR [rsp+0x28],r13d
   140003ba3:	mov    rcx,rax
   140003ba6:	mov    DWORD PTR [rsp+0x20],esi
   140003baa:	call   0x14000d860
   140003baf:	mov    rcx,QWORD PTR [rdi+0x48]
   140003bb3:	lea    r8,[rbp-0x39]
   140003bb7:	mov    edx,0x3ee
   140003bbc:	call   0x14000d6ec
   140003bc1:	test   rax,rax
   140003bc4:	je     0x140003bea
   140003bc6:	mov    r8d,DWORD PTR [rbp-0x2d]
   140003bca:	lea    rcx,[rbp-0x39]
   140003bce:	mov    QWORD PTR [rsp+0x30],rcx
   140003bd3:	mov    r9d,ebx
   140003bd6:	mov    DWORD PTR [rsp+0x28],r13d
   140003bdb:	mov    rcx,rax
   140003bde:	mov    edx,r12d
   140003be1:	mov    DWORD PTR [rsp+0x20],esi
   140003be5:	call   0x14000d860
   140003bea:	test   r14,r14
   140003bed:	je     0x140003c62
   140003bef:	mov    rcx,QWORD PTR [rdi+0x48]
   140003bf3:	lea    rdx,[rbp-0x39]
   140003bf7:	call   0x14000c188
   140003bfc:	mov    r12,rax
   140003bff:	cmp    DWORD PTR [rbp-0x39],r13d
   140003c03:	jl     0x140003c62
   140003c05:	mov    edx,0x58
   140003c0a:	mov    rcx,rax
   140003c0d:	call   QWORD PTR [rip+0x124ad]        # 0x1400160c0
   140003c13:	mov    r8d,DWORD PTR [rbp-0x2d]
   140003c17:	lea    ecx,[rax+rax*4]
   140003c1a:	mov    eax,0x2aaaaaab
   140003c1f:	shl    ecx,0x2
   140003c22:	imul   ecx
   140003c24:	mov    rcx,r14
   140003c27:	sar    edx,0x4
   140003c2a:	mov    eax,edx
   140003c2c:	shr    eax,0x1f
   140003c2f:	add    edx,eax
   140003c31:	lea    rax,[rbp-0x39]
   140003c35:	sub    r15d,edx
   140003c38:	mov    QWORD PTR [rsp+0x30],rax
   140003c3d:	sub    r15d,ebx
   140003c40:	mov    DWORD PTR [rsp+0x28],r13d
   140003c45:	mov    r9d,r15d
   140003c48:	mov    DWORD PTR [rsp+0x20],esi
   140003c4c:	xor    edx,edx
   140003c4e:	call   0x14000d860
   140003c53:	mov    rcx,QWORD PTR [rdi+0x48]
   140003c57:	xor    r8d,r8d
   140003c5a:	mov    rdx,r12
   140003c5d:	call   0x14000c314
   140003c62:	lea    rcx,[rbp-0x29]
   140003c66:	call   0x14000bf98
   140003c6b:	mov    rcx,QWORD PTR [rbp+0x27]
   140003c6f:	xor    rcx,rsp
   140003c72:	call   0x1400146a0
   140003c77:	lea    r11,[rsp+0xb0]
   140003c7f:	mov    rbx,QWORD PTR [r11+0x38]
   140003c83:	mov    rsi,QWORD PTR [r11+0x40]
   140003c87:	mov    rdi,QWORD PTR [r11+0x48]
   140003c8b:	mov    rsp,r11
   140003c8e:	pop    r15
   140003c90:	pop    r14
   140003c92:	pop    r13
   140003c94:	pop    r12
   140003c96:	pop    rbp
   140003c97:	ret    
   140003c98:	int3   
   140003c99:	int3   
   140003c9a:	int3   
   140003c9b:	int3   
   140003c9c:	int3   
   140003c9d:	int3   
   140003c9e:	int3   
   140003c9f:	int3   
   140003ca0:	rex push rbx
   140003ca2:	sub    rsp,0x30
   140003ca6:	mov    rbx,rcx
   140003ca9:	lea    rdx,[rip+0x137d0]        # 0x140017480
   140003cb0:	lea    rcx,[rsp+0x20]
   140003cb5:	xor    r8d,r8d
   140003cb8:	call   0x14000bf4c
   140003cbd:	mov    rcx,rbx
   140003cc0:	call   0x1400039a0
   140003cc5:	lea    rcx,[rsp+0x20]
   140003cca:	call   0x14000bf98
   140003ccf:	xor    eax,eax
   140003cd1:	add    rsp,0x30
   140003cd5:	pop    rbx
   140003cd6:	ret    
   140003cd7:	int3   
   140003cd8:	int3   
   140003cd9:	int3   
   140003cda:	int3   
   140003cdb:	int3   
   140003cdc:	int3   
   140003cdd:	int3   
   140003cde:	int3   
   140003cdf:	int3   
   140003ce0:	rex push rbx
   140003ce2:	sub    rsp,0x30
   140003ce6:	and    DWORD PTR [rsp+0x58],0x0
   140003ceb:	lea    r8,[rsp+0x58]
   140003cf0:	mov    rbx,rcx
   140003cf3:	lea    rdx,[rip+0x137a6]        # 0x1400174a0
   140003cfa:	lea    rcx,[rsp+0x20]
   140003cff:	call   0x14000bf4c
   140003d04:	mov    rcx,rbx
   140003d07:	call   0x140002b70
   140003d0c:	mov    rcx,rbx
   140003d0f:	call   0x140003484
   140003d14:	mov    rcx,rbx
   140003d17:	call   0x1400039a0
   140003d1c:	movsxd rbx,DWORD PTR [rsp+0x58]
   140003d21:	lea    rcx,[rsp+0x20]
   140003d26:	call   0x14000bf98
   140003d2b:	mov    rax,rbx
   140003d2e:	add    rsp,0x30
   140003d32:	pop    rbx
   140003d33:	ret    
   140003d34:	int3   
   140003d35:	int3   
   140003d36:	int3   
   140003d37:	int3   
   140003d38:	int3   
   140003d39:	int3   
   140003d3a:	int3   
   140003d3b:	int3   
   140003d3c:	int3   
   140003d3d:	int3   
   140003d3e:	int3   
   140003d3f:	int3   
   140003d40:	mov    rax,rsp
   140003d43:	mov    QWORD PTR [rax+0x8],rbx
   140003d47:	mov    QWORD PTR [rax+0x18],rsi
   140003d4b:	push   rdi
   140003d4c:	sub    rsp,0x40
   140003d50:	mov    rbx,rdx
   140003d53:	lea    r8,[rax+0x10]
   140003d57:	mov    rdi,rcx
   140003d5a:	lea    rdx,[rip+0x137af]        # 0x140017510
   140003d61:	xor    esi,esi
   140003d63:	lea    rcx,[rax-0x18]
   140003d67:	mov    DWORD PTR [rax+0x10],esi
   140003d6a:	call   0x14000bf4c
   140003d6f:	test   rbx,rbx
   140003d72:	jne    0x140003db4
   140003d74:	mov    DWORD PTR [rsp+0x58],0x80004003
   140003d7c:	mov    rcx,QWORD PTR [rip+0x1a29d]        # 0x14001e020
   140003d83:	lea    rax,[rip+0x1a296]        # 0x14001e020
   140003d8a:	cmp    rcx,rax
   140003d8d:	je     0x140003e15
   140003d93:	test   BYTE PTR [rcx+0x1c],0x4
   140003d97:	je     0x140003e15
   140003d99:	mov    rcx,QWORD PTR [rcx+0x10]
   140003d9d:	lea    edx,[rsi+0xb]
   140003da0:	mov    r9d,0x80004003
   140003da6:	lea    r8,[rip+0x13a8b]        # 0x140017838
   140003dad:	call   0x140001228
   140003db2:	jmp    0x140003e15
   140003db4:	mov    QWORD PTR [rbx+0x48],0x69
   140003dbc:	mov    QWORD PTR [rbx+0x10],0x68
   140003dc4:	lea    rbx,[rdi+0x110]
   140003dcb:	mov    rcx,QWORD PTR [rdi+0x50]
   140003dcf:	mov    WORD PTR [rbx],si
   140003dd2:	call   0x140001a3c
   140003dd7:	mov    r9d,0x100
   140003ddd:	mov    rcx,rax
   140003de0:	lea    rax,[rsp+0x58]
   140003de5:	mov    r8,rbx
   140003de8:	mov    QWORD PTR [rsp+0x20],rax
   140003ded:	lea    edx,[r9-0x72]
   140003df1:	call   0x14000ce44
   140003df6:	cmp    QWORD PTR [rdi+0x310],rsi
   140003dfd:	jne    0x140003e15
   140003dff:	lea    rdx,[rip+0x133b2]        # 0x1400171b8
   140003e06:	xor    ecx,ecx
   140003e08:	call   QWORD PTR [rip+0x126c2]        # 0x1400164d0
   140003e0e:	mov    QWORD PTR [rdi+0x310],rax
   140003e15:	lea    rcx,[rsp+0x30]
   140003e1a:	call   0x14000bf98
   140003e1f:	mov    rbx,QWORD PTR [rsp+0x50]
   140003e24:	mov    rsi,QWORD PTR [rsp+0x60]
   140003e29:	add    rsp,0x40
   140003e2d:	pop    rdi
   140003e2e:	ret    
   140003e2f:	int3   
   140003e30:	int3   
   140003e31:	int3   
   140003e32:	int3   
   140003e33:	int3   
   140003e34:	int3   
   140003e35:	int3   
   140003e36:	int3   
   140003e37:	int3   
   140003e38:	int3   
   140003e39:	int3   
   140003e3a:	int3   
   140003e3b:	int3   
   140003e3c:	int3   
   140003e3d:	int3   
   140003e3e:	int3   
   140003e3f:	int3   
   140003e40:	mov    rax,rsp
   140003e43:	push   rdi
   140003e44:	sub    rsp,0x40
   140003e48:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140003e50:	mov    QWORD PTR [rax+0x10],rbx
   140003e54:	mov    rbx,rcx
   140003e57:	and    DWORD PTR [rax+0x8],0x0
   140003e5b:	xor    edi,edi
   140003e5d:	lea    r8,[rax+0x8]
   140003e61:	lea    rdx,[rip+0x136d0]        # 0x140017538
   140003e68:	lea    rcx,[rax-0x20]
   140003e6c:	call   0x14000bf4c
   140003e71:	nop
   140003e72:	mov    rcx,rbx
   140003e75:	call   0x140003fc0
   140003e7a:	mov    rcx,rbx
   140003e7d:	call   0x140005c64
   140003e82:	mov    DWORD PTR [rsp+0x50],eax
   140003e86:	mov    edx,0x3e8
   140003e8b:	mov    rcx,QWORD PTR [rbx+0x48]
   140003e8f:	call   QWORD PTR [rip+0x1245b]        # 0x1400162f0
   140003e95:	mov    QWORD PTR [rbx+0xe0],rax
   140003e9c:	test   rax,rax
   140003e9f:	je     0x140003f2c
   140003ea5:	mov    ecx,0x188
   140003eaa:	call   0x14001426c
   140003eaf:	mov    QWORD PTR [rsp+0x68],rax
   140003eb4:	test   rax,rax
   140003eb7:	je     0x140003ec1
   140003eb9:	mov    rcx,rax
   140003ebc:	call   0x140007bd4
   140003ec1:	mov    QWORD PTR [rbx+0x70],rax
   140003ec5:	test   rax,rax
   140003ec8:	jne    0x140003ed1
   140003eca:	mov    ecx,0x8007000e
   140003ecf:	jmp    0x140003f1f
   140003ed1:	mov    r8,QWORD PTR [rbx+0xe0]
   140003ed8:	mov    rdx,QWORD PTR [rbx+0x48]
   140003edc:	mov    rcx,rax
   140003edf:	call   0x140007ca0
   140003ee4:	mov    edi,eax
   140003ee6:	test   eax,eax
   140003ee8:	jns    0x140003f1b
   140003eea:	lea    rax,[rip+0x1a12f]        # 0x14001e020
   140003ef1:	mov    rcx,QWORD PTR [rip+0x1a128]        # 0x14001e020
   140003ef8:	cmp    rcx,rax
   140003efb:	je     0x140003f1b
   140003efd:	test   BYTE PTR [rcx+0x1c],0x4
   140003f01:	je     0x140003f1b
   140003f03:	mov    edx,0xc
   140003f08:	mov    r9d,edi
   140003f0b:	lea    r8,[rip+0x13926]        # 0x140017838
   140003f12:	mov    rcx,QWORD PTR [rcx+0x10]
   140003f16:	call   0x140001228
   140003f1b:	mov    ecx,DWORD PTR [rsp+0x50]
   140003f1f:	mov    eax,edi
   140003f21:	test   ecx,ecx
   140003f23:	cmovne eax,ecx
   140003f26:	mov    DWORD PTR [rsp+0x50],eax
   140003f2a:	jmp    0x140003f65
   140003f2c:	mov    edi,0x80004005
   140003f31:	lea    rax,[rip+0x1a0e8]        # 0x14001e020
   140003f38:	mov    rcx,QWORD PTR [rip+0x1a0e1]        # 0x14001e020
   140003f3f:	cmp    rcx,rax
   140003f42:	je     0x140003f69
   140003f44:	test   BYTE PTR [rcx+0x1c],0x4
   140003f48:	je     0x140003f69
   140003f4a:	mov    edx,0xd
   140003f4f:	mov    r9d,0x80004005
   140003f55:	lea    r8,[rip+0x138dc]        # 0x140017838
   140003f5c:	mov    rcx,QWORD PTR [rcx+0x10]
   140003f60:	call   0x140001228
   140003f65:	test   edi,edi
   140003f67:	jns    0x140003fa0
   140003f69:	mov    rcx,QWORD PTR [rbx+0xe0]
   140003f70:	test   rcx,rcx
   140003f73:	je     0x140003f7d
   140003f75:	xor    edx,edx
   140003f77:	call   QWORD PTR [rip+0x123ab]        # 0x140016328
   140003f7d:	mov    edx,0x402
   140003f82:	mov    rcx,QWORD PTR [rbx+0x48]
   140003f86:	call   QWORD PTR [rip+0x12364]        # 0x1400162f0
   140003f8c:	test   rax,rax
   140003f8f:	je     0x140003fa0
   140003f91:	mov    edx,0x1
   140003f96:	mov    rcx,rax
   140003f99:	call   QWORD PTR [rip+0x12389]        # 0x140016328
   140003f9f:	nop
   140003fa0:	lea    rcx,[rsp+0x28]
   140003fa5:	call   0x14000bf98
   140003faa:	mov    eax,0x1
   140003faf:	mov    rbx,QWORD PTR [rsp+0x58]
   140003fb4:	add    rsp,0x40
   140003fb8:	pop    rdi
   140003fb9:	ret    
   140003fba:	int3   
   140003fbb:	int3   
   140003fbc:	int3   
   140003fbd:	int3   
   140003fbe:	int3   
   140003fbf:	int3   
   140003fc0:	rex push rbx
   140003fc2:	sub    rsp,0x20
   140003fc6:	mov    eax,DWORD PTR [rcx+0x318]
   140003fcc:	mov    edx,0x3f3
   140003fd1:	neg    eax
   140003fd3:	mov    rbx,rcx
   140003fd6:	sbb    r8d,r8d
   140003fd9:	add    r8d,0x74
   140003fdd:	call   0x140001d28
   140003fe2:	mov    edx,0x3f4
   140003fe7:	mov    r8d,0x75
   140003fed:	mov    rcx,rbx
   140003ff0:	call   0x140001d28
   140003ff5:	mov    edx,0x3f5
   140003ffa:	mov    r8d,0x76
   140004000:	mov    rcx,rbx
   140004003:	call   0x140001d28
   140004008:	mov    edx,0x3f7
   14000400d:	mov    r8d,0x78
   140004013:	mov    rcx,rbx
   140004016:	call   0x140001d28
   14000401b:	mov    edx,0x402
   140004020:	mov    r8d,0x86
   140004026:	mov    rcx,rbx
   140004029:	add    rsp,0x20
   14000402d:	pop    rbx
   14000402e:	jmp    0x140001d28
   140004033:	int3   
   140004034:	int3   
   140004035:	int3   
   140004036:	int3   
   140004037:	int3   
   140004038:	int3   
   140004039:	int3   
   14000403a:	int3   
   14000403b:	int3   
   14000403c:	int3   
   14000403d:	int3   
   14000403e:	int3   
   14000403f:	int3   
   140004040:	mov    rax,rsp
   140004043:	push   rbp
   140004044:	lea    rbp,[rax-0x5f]
   140004048:	sub    rsp,0xb0
   14000404f:	mov    QWORD PTR [rbp+0x47],0xfffffffffffffffe
   140004057:	mov    QWORD PTR [rax+0x8],rbx
   14000405b:	mov    QWORD PTR [rax+0x10],rdi
   14000405f:	mov    QWORD PTR [rax+0x20],r14
   140004063:	mov    rdi,r8
   140004066:	mov    rbx,rcx
   140004069:	xor    r14d,r14d
   14000406c:	mov    DWORD PTR [rbp+0x77],r14d
   140004070:	lea    r8,[rbp+0x77]
   140004074:	lea    rdx,[rip+0x134e5]        # 0x140017560
   14000407b:	lea    rcx,[rbp+0x37]
   14000407f:	call   0x14000bf4c
   140004084:	nop
   140004085:	test   rdi,rdi
   140004088:	jne    0x1400040c0
   14000408a:	mov    DWORD PTR [rbp+0x77],0x80070057
   140004091:	lea    rax,[rip+0x19f88]        # 0x14001e020
   140004098:	mov    rcx,QWORD PTR [rip+0x19f81]        # 0x14001e020
   14000409f:	cmp    rcx,rax
   1400040a2:	je     0x1400041dc
   1400040a8:	test   BYTE PTR [rcx+0x1c],0x4
   1400040ac:	je     0x1400041dc
   1400040b2:	lea    edx,[rdi+0xe]
   1400040b5:	mov    r9d,0x80070057
   1400040bb:	jmp    0x140004188
   1400040c0:	cmp    DWORD PTR [rbx+0x78],r14d
   1400040c4:	jne    0x140004154
   1400040ca:	mov    DWORD PTR [rbx+0x78],0x1
   1400040d1:	mov    QWORD PTR [rbp-0x35],r14
   1400040d5:	mov    QWORD PTR [rbp-0x2d],r14
   1400040d9:	mov    DWORD PTR [rbp-0x25],r14d
   1400040dd:	mov    QWORD PTR [rbp-0x1d],0x4e1
   1400040e5:	xorps  xmm0,xmm0
   1400040e8:	movdqa XMMWORD PTR [rbp-0x9],xmm0
   1400040ed:	mov    QWORD PTR [rbp+0x7],r14
   1400040f1:	mov    QWORD PTR [rbp+0x13],r14
   1400040f5:	mov    DWORD PTR [rbp+0x1b],r14d
   1400040f9:	mov    QWORD PTR [rbp+0x1f],r14
   1400040fd:	mov    QWORD PTR [rbp+0x27],r14
   140004101:	mov    DWORD PTR [rbp+0x2f],r14d
   140004105:	mov    DWORD PTR [rbp+0xf],r14d
   140004109:	mov    DWORD PTR [rbp-0x39],0x2
   140004110:	mov    QWORD PTR [rbp-0x11],r14
   140004114:	lea    rdx,[rbp-0x39]
   140004118:	mov    rcx,QWORD PTR [rbx+0x80]
   14000411f:	call   0x14000faa8
   140004124:	mov    ecx,DWORD PTR [rbp+0x77]
   140004127:	test   ecx,ecx
   140004129:	cmovne eax,ecx
   14000412c:	mov    DWORD PTR [rbp+0x77],eax
   14000412f:	mov    rcx,rbx
   140004132:	call   0x140005460
   140004137:	xor    edx,edx
   140004139:	lea    r8d,[rdx+0x1]
   14000413d:	mov    rcx,QWORD PTR [rbx+0xe0]
   140004144:	call   QWORD PTR [rip+0x12266]        # 0x1400163b0
   14000414a:	nop
   14000414b:	lea    rcx,[rbp-0x39]
   14000414f:	call   0x1400122dc
   140004154:	mov    rcx,QWORD PTR [rbx+0x68]
   140004158:	test   rcx,rcx
   14000415b:	jne    0x14000419a
   14000415d:	mov    DWORD PTR [rbp+0x77],0x8007000e
   140004164:	lea    rax,[rip+0x19eb5]        # 0x14001e020
   14000416b:	mov    rcx,QWORD PTR [rip+0x19eae]        # 0x14001e020
   140004172:	cmp    rcx,rax
   140004175:	je     0x1400041dc
   140004177:	test   BYTE PTR [rcx+0x1c],0x4
   14000417b:	je     0x1400041dc
   14000417d:	mov    edx,0xf
   140004182:	mov    r9d,0x8007000e
   140004188:	lea    r8,[rip+0x136a9]        # 0x140017838
   14000418f:	mov    rcx,QWORD PTR [rcx+0x10]
   140004193:	call   0x140001228
   140004198:	jmp    0x1400041dc
   14000419a:	movups xmm0,XMMWORD PTR [rdi]
   14000419d:	movups XMMWORD PTR [rcx],xmm0
   1400041a0:	movups xmm1,XMMWORD PTR [rdi+0x10]
   1400041a4:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400041a8:	movups xmm0,XMMWORD PTR [rdi+0x20]
   1400041ac:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400041b0:	mov    eax,DWORD PTR [rdi+0x30]
   1400041b3:	mov    DWORD PTR [rcx+0x30],eax
   1400041b6:	mov    rcx,rbx
   1400041b9:	call   0x140004208
   1400041be:	mov    rax,QWORD PTR [rip+0x19e5b]        # 0x14001e020
   1400041c5:	mov    r8,QWORD PTR [rax+0x10]
   1400041c9:	test   r8,r8
   1400041cc:	je     0x1400041dc
   1400041ce:	mov    r9b,0x2
   1400041d1:	mov    edx,0x40f
   1400041d6:	call   0x140002f4c
   1400041db:	nop
   1400041dc:	lea    rcx,[rbp+0x37]
   1400041e0:	call   0x14000bf98
   1400041e5:	xor    eax,eax
   1400041e7:	lea    r11,[rsp+0xb0]
   1400041ef:	mov    rbx,QWORD PTR [r11+0x10]
   1400041f3:	mov    rdi,QWORD PTR [r11+0x18]
   1400041f7:	mov    r14,QWORD PTR [r11+0x28]
   1400041fb:	mov    rsp,r11
   1400041fe:	pop    rbp
   1400041ff:	ret    
   140004200:	int3   
   140004201:	int3   
   140004202:	int3   
   140004203:	int3   
   140004204:	int3   
   140004205:	int3   
   140004206:	int3   
   140004207:	int3   
   140004208:	mov    rax,rsp
   14000420b:	push   rdi
   14000420c:	sub    rsp,0x50
   140004210:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140004218:	mov    QWORD PTR [rax+0x10],rbx
   14000421c:	mov    rdi,rcx
   14000421f:	and    DWORD PTR [rax+0x8],0x0
   140004223:	lea    r8,[rax+0x8]
   140004227:	lea    rdx,[rip+0x1335a]        # 0x140017588
   14000422e:	lea    rcx,[rax-0x20]
   140004232:	call   0x14000bf4c
   140004237:	nop
   140004238:	mov    edx,0x3ef
   14000423d:	mov    rcx,QWORD PTR [rdi+0x48]
   140004241:	call   QWORD PTR [rip+0x120a9]        # 0x1400162f0
   140004247:	mov    rcx,rax
   14000424a:	xor    edx,edx
   14000424c:	call   QWORD PTR [rip+0x120d6]        # 0x140016328
   140004252:	mov    edx,0x3f3
   140004257:	mov    rcx,QWORD PTR [rdi+0x48]
   14000425b:	call   QWORD PTR [rip+0x1208f]        # 0x1400162f0
   140004261:	mov    rcx,rax
   140004264:	xor    edx,edx
   140004266:	call   QWORD PTR [rip+0x120bc]        # 0x140016328
   14000426c:	mov    edx,0x3f0
   140004271:	mov    rcx,QWORD PTR [rdi+0x48]
   140004275:	call   QWORD PTR [rip+0x12075]        # 0x1400162f0
   14000427b:	mov    rcx,rax
   14000427e:	xor    edx,edx
   140004280:	call   QWORD PTR [rip+0x120a2]        # 0x140016328
   140004286:	mov    edx,0x3f4
   14000428b:	mov    rcx,QWORD PTR [rdi+0x48]
   14000428f:	call   QWORD PTR [rip+0x1205b]        # 0x1400162f0
   140004295:	mov    rcx,rax
   140004298:	xor    edx,edx
   14000429a:	call   QWORD PTR [rip+0x12088]        # 0x140016328
   1400042a0:	mov    edx,0x3f1
   1400042a5:	mov    rcx,QWORD PTR [rdi+0x48]
   1400042a9:	call   QWORD PTR [rip+0x12041]        # 0x1400162f0
   1400042af:	mov    rcx,rax
   1400042b2:	xor    edx,edx
   1400042b4:	call   QWORD PTR [rip+0x1206e]        # 0x140016328
   1400042ba:	mov    edx,0x3f5
   1400042bf:	mov    rcx,QWORD PTR [rdi+0x48]
   1400042c3:	call   QWORD PTR [rip+0x12027]        # 0x1400162f0
   1400042c9:	mov    rcx,rax
   1400042cc:	xor    edx,edx
   1400042ce:	call   QWORD PTR [rip+0x12054]        # 0x140016328
   1400042d4:	lea    rax,[rsp+0x60]
   1400042d9:	mov    QWORD PTR [rsp+0x20],rax
   1400042de:	mov    edx,0x3ea
   1400042e3:	mov    r8d,0x64
   1400042e9:	mov    rcx,QWORD PTR [rdi+0x48]
   1400042ed:	call   0x14000ca50
   1400042f2:	mov    QWORD PTR [rdi+0xf8],rax
   1400042f9:	mov    ebx,DWORD PTR [rsp+0x60]
   1400042fd:	test   ebx,ebx
   1400042ff:	jns    0x140004318
   140004301:	mov    ecx,0x64
   140004306:	call   QWORD PTR [rip+0x11f6c]        # 0x140016278
   14000430c:	mov    rcx,rdi
   14000430f:	call   0x140004338
   140004314:	mov    ebx,DWORD PTR [rsp+0x60]
   140004318:	lea    rcx,[rsp+0x38]
   14000431d:	call   0x14000bf98
   140004322:	mov    eax,ebx
   140004324:	mov    rbx,QWORD PTR [rsp+0x68]
   140004329:	add    rsp,0x50
   14000432d:	pop    rdi
   14000432e:	ret    
   14000432f:	int3   
   140004330:	int3   
   140004331:	int3   
   140004332:	int3   
   140004333:	int3   
   140004334:	int3   
   140004335:	int3   
   140004336:	int3   
   140004337:	int3   
   140004338:	mov    rax,rsp
   14000433b:	push   rbp
   14000433c:	push   rdi
   14000433d:	push   r12
   14000433f:	push   r14
   140004341:	push   r15
   140004343:	lea    rbp,[rax-0x38]
   140004347:	sub    rsp,0x110
   14000434e:	mov    QWORD PTR [rbp+0x0],0xfffffffffffffffe
   140004356:	mov    QWORD PTR [rax+0x18],rbx
   14000435a:	mov    QWORD PTR [rax+0x20],rsi
   14000435e:	mov    rbx,rcx
   140004361:	and    DWORD PTR [rbp+0x40],0x0
   140004365:	lea    r8,[rbp+0x40]
   140004369:	lea    rdx,[rip+0x13250]        # 0x1400175c0
   140004370:	lea    rcx,[rbp-0x10]
   140004374:	call   0x14000bf4c
   140004379:	nop
   14000437a:	mov    rax,QWORD PTR [rbx+0x68]
   14000437e:	cmp    DWORD PTR [rax+0x30],0x0
   140004382:	je     0x140004696
   140004388:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000438c:	movups XMMWORD PTR [rbp-0x70],xmm1
   140004390:	movups xmm0,XMMWORD PTR [rax+0x20]
   140004394:	movups XMMWORD PTR [rbp-0x60],xmm0
   140004398:	movd   esi,xmm0
   14000439c:	test   esi,esi
   14000439e:	je     0x1400043a8
   1400043a0:	mov    r8d,0x6a
   1400043a6:	jmp    0x1400043b7
   1400043a8:	mov    eax,DWORD PTR [rbx+0x318]
   1400043ae:	neg    eax
   1400043b0:	sbb    r8d,r8d
   1400043b3:	add    r8d,0x70
   1400043b7:	mov    edx,0x3f3
   1400043bc:	mov    rcx,rbx
   1400043bf:	call   0x140001d28
   1400043c4:	mov    DWORD PTR [rbp+0x40],eax
   1400043c7:	mov    edi,DWORD PTR [rbp-0x54]
   1400043ca:	mov    r14d,DWORD PTR [rbp-0x5c]
   1400043ce:	test   r14d,r14d
   1400043d1:	je     0x1400043dd
   1400043d3:	test   edi,edi
   1400043d5:	mov    r8d,0x6c
   1400043db:	jne    0x1400043e3
   1400043dd:	mov    r8d,0x71
   1400043e3:	mov    edx,0x3f4
   1400043e8:	mov    rcx,rbx
   1400043eb:	call   0x140001d28
   1400043f0:	mov    DWORD PTR [rbp+0x40],eax
   1400043f3:	mov    r15d,DWORD PTR [rbp-0x58]
   1400043f7:	mov    eax,r15d
   1400043fa:	neg    eax
   1400043fc:	sbb    r8d,r8d
   1400043ff:	and    r8d,0xfffffffc
   140004403:	add    r8d,0x72
   140004407:	mov    edx,0x3f5
   14000440c:	mov    rcx,rbx
   14000440f:	call   0x140001d28
   140004414:	mov    DWORD PTR [rbp+0x40],eax
   140004417:	neg    esi
   140004419:	sbb    r8d,r8d
   14000441c:	mov    esi,0x96
   140004421:	add    r8d,esi
   140004424:	mov    edx,0x3ef
   140004429:	mov    rcx,rbx
   14000442c:	call   0x140002194
   140004431:	mov    DWORD PTR [rbp+0x40],eax
   140004434:	test   r14d,r14d
   140004437:	je     0x140004441
   140004439:	test   edi,edi
   14000443b:	lea    r8d,[rsi-0x1]
   14000443f:	jne    0x140004444
   140004441:	mov    r8d,esi
   140004444:	mov    edx,0x3f0
   140004449:	mov    rcx,rbx
   14000444c:	call   0x140002194
   140004451:	mov    DWORD PTR [rbp+0x40],eax
   140004454:	neg    r15d
   140004457:	sbb    r8d,r8d
   14000445a:	add    r8d,esi
   14000445d:	mov    edx,0x3f1
   140004462:	mov    rcx,rbx
   140004465:	call   0x140002194
   14000446a:	mov    DWORD PTR [rbp+0x40],eax
   14000446d:	mov    r14d,0x1
   140004473:	mov    r15d,r14d
   140004476:	xor    r12d,r12d
   140004479:	mov    edx,DWORD PTR [rbx+0xe8]
   14000447f:	cmp    edx,0xffffffff
   140004482:	je     0x1400044d4
   140004484:	mov    DWORD PTR [rsp+0x40],r14d
   140004489:	and    DWORD PTR [rsp+0x44],0xfffffffe
   14000448e:	mov    rcx,QWORD PTR [rbx+0x80]
   140004495:	test   rcx,rcx
   140004498:	je     0x1400044d4
   14000449a:	and    DWORD PTR [rbx+0x100],r12d
   1400044a1:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400044a6:	movaps XMMWORD PTR [rbp-0x50],xmm0
   1400044aa:	movaps xmm1,XMMWORD PTR [rsp+0x50]
   1400044af:	movaps XMMWORD PTR [rbp-0x40],xmm1
   1400044b3:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   1400044b8:	movaps XMMWORD PTR [rbp-0x30],xmm0
   1400044bc:	movaps xmm1,XMMWORD PTR [rsp+0x70]
   1400044c1:	movaps XMMWORD PTR [rbp-0x20],xmm1
   1400044c5:	lea    r8,[rbp-0x50]
   1400044c9:	call   0x14000fe20
   1400044ce:	mov    DWORD PTR [rbp+0x40],eax
   1400044d1:	mov    r12d,r14d
   1400044d4:	mov    esi,0x7a
   1400044d9:	cmp    DWORD PTR [rbp-0x64],0x0
   1400044dd:	je     0x14000466a
   1400044e3:	mov    eax,0x168
   1400044e8:	sub    eax,DWORD PTR [rbp-0x68]
   1400044eb:	movd   xmm0,eax
   1400044ef:	cvtdq2pd xmm0,xmm0
   1400044f3:	addsd  xmm0,QWORD PTR [rip+0x14a75]        # 0x140018f70
   1400044fb:	divsd  xmm0,QWORD PTR [rip+0x14a75]        # 0x140018f78
   140004503:	cvttsd2si edi,xmm0
   140004507:	and    edi,0x80000007
   14000450d:	jge    0x140004518
   14000450f:	sub    edi,r14d
   140004512:	or     edi,0xfffffff8
   140004515:	add    edi,r14d
   140004518:	mov    DWORD PTR [rsp+0x40],r14d
   14000451d:	mov    esi,0x79
   140004522:	cmp    QWORD PTR [rbx+0x80],0x0
   14000452a:	je     0x14000466a
   140004530:	mov    DWORD PTR [rsp+0x30],0xcefa51bc
   140004538:	mov    DWORD PTR [rsp+0x34],0x47f38e42
   140004540:	mov    DWORD PTR [rsp+0x38],0x6a8cb1ac
   140004548:	mov    DWORD PTR [rsp+0x3c],0xebdfeca5
   140004550:	lea    r14,[rbx+0x88]
   140004557:	mov    edx,edi
   140004559:	mov    rcx,r14
   14000455c:	call   0x14000f06c
   140004561:	test   rax,rax
   140004564:	je     0x140004634
   14000456a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000456f:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140004574:	movq   rcx,xmm0
   140004579:	cmp    QWORD PTR [rax+0x8],rcx
   14000457d:	jne    0x14000458e
   14000457f:	mov    rax,QWORD PTR [rax+0x10]
   140004583:	cmp    rax,QWORD PTR [rsp+0x38]
   140004588:	je     0x140004634
   14000458e:	mov    DWORD PTR [rbx+0xe8],edi
   140004594:	mov    r14d,r15d
   140004597:	mov    DWORD PTR [rbx+0x100],r15d
   14000459e:	or     DWORD PTR [rsp+0x44],r15d
   1400045a3:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400045a8:	movaps XMMWORD PTR [rbp-0x50],xmm0
   1400045ac:	movaps xmm1,XMMWORD PTR [rsp+0x50]
   1400045b1:	movaps XMMWORD PTR [rbp-0x40],xmm1
   1400045b5:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   1400045ba:	movaps XMMWORD PTR [rbp-0x30],xmm0
   1400045be:	movaps xmm1,XMMWORD PTR [rsp+0x70]
   1400045c3:	movaps XMMWORD PTR [rbp-0x20],xmm1
   1400045c7:	lea    r8,[rbp-0x50]
   1400045cb:	mov    edx,edi
   1400045cd:	mov    rcx,QWORD PTR [rbx+0x80]
   1400045d4:	call   0x14000fe20
   1400045d9:	mov    ecx,DWORD PTR [rbp+0x40]
   1400045dc:	test   ecx,ecx
   1400045de:	js     0x1400045e8
   1400045e0:	test   eax,eax
   1400045e2:	cmovs  ecx,eax
   1400045e5:	mov    DWORD PTR [rbp+0x40],ecx
   1400045e8:	mov    r12d,r14d
   1400045eb:	and    DWORD PTR [rbp+0x48],0x0
   1400045ef:	lea    r8,[rbp+0x48]
   1400045f3:	lea    rdx,[rip+0x130ee]        # 0x1400176e8
   1400045fa:	lea    rcx,[rsp+0x30]
   1400045ff:	call   0x14000bf4c
   140004604:	lea    rax,[rbp+0x48]
   140004608:	mov    QWORD PTR [rsp+0x20],rax
   14000460d:	mov    edx,0x3e9
   140004612:	mov    r8d,0xbb8
   140004618:	mov    rcx,QWORD PTR [rbx+0x48]
   14000461c:	call   0x14000ca50
   140004621:	mov    QWORD PTR [rbx+0xf0],rax
   140004628:	lea    rcx,[rsp+0x30]
   14000462d:	call   0x14000bf98
   140004632:	jmp    0x14000466a
   140004634:	mov    rcx,r14
   140004637:	call   0x14000e370
   14000463c:	mov    esi,eax
   14000463e:	mov    rcx,r14
   140004641:	call   0x14000e5c8
   140004646:	mov    r14d,r15d
   140004649:	test   r14b,dil
   14000464c:	je     0x14000465b
   14000464e:	test   esi,esi
   140004650:	je     0x14000465b
   140004652:	test   eax,eax
   140004654:	mov    esi,0x90
   140004659:	je     0x140004660
   14000465b:	mov    esi,0x8f
   140004660:	or     DWORD PTR [rbx+0xe8],0xffffffff
   140004667:	xor    r15d,r15d
   14000466a:	mov    r8d,esi
   14000466d:	mov    edx,0x3f7
   140004672:	mov    rcx,rbx
   140004675:	call   0x140001d28
   14000467a:	mov    DWORD PTR [rbp+0x40],eax
   14000467d:	test   r12d,r12d
   140004680:	je     0x1400046af
   140004682:	mov    r8d,r14d
   140004685:	xor    edx,edx
   140004687:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000468e:	call   QWORD PTR [rip+0x11d1c]        # 0x1400163b0
   140004694:	jmp    0x1400046af
   140004696:	mov    edx,0x3f7
   14000469b:	mov    r8d,0x7d
   1400046a1:	mov    rcx,rbx
   1400046a4:	call   0x140001d28
   1400046a9:	mov    DWORD PTR [rbp+0x40],eax
   1400046ac:	xor    r15d,r15d
   1400046af:	mov    edx,0x3ef
   1400046b4:	mov    rcx,QWORD PTR [rbx+0x48]
   1400046b8:	call   QWORD PTR [rip+0x11c32]        # 0x1400162f0
   1400046be:	mov    rcx,rax
   1400046c1:	mov    edx,r15d
   1400046c4:	call   QWORD PTR [rip+0x11c5e]        # 0x140016328
   1400046ca:	mov    edx,0x3f3
   1400046cf:	mov    rcx,QWORD PTR [rbx+0x48]
   1400046d3:	call   QWORD PTR [rip+0x11c17]        # 0x1400162f0
   1400046d9:	mov    rcx,rax
   1400046dc:	mov    edx,r15d
   1400046df:	call   QWORD PTR [rip+0x11c43]        # 0x140016328
   1400046e5:	mov    edx,0x3f0
   1400046ea:	mov    rcx,QWORD PTR [rbx+0x48]
   1400046ee:	call   QWORD PTR [rip+0x11bfc]        # 0x1400162f0
   1400046f4:	mov    rcx,rax
   1400046f7:	mov    edx,r15d
   1400046fa:	call   QWORD PTR [rip+0x11c28]        # 0x140016328
   140004700:	mov    edx,0x3f4
   140004705:	mov    rcx,QWORD PTR [rbx+0x48]
   140004709:	call   QWORD PTR [rip+0x11be1]        # 0x1400162f0
   14000470f:	mov    rcx,rax
   140004712:	mov    edx,r15d
   140004715:	call   QWORD PTR [rip+0x11c0d]        # 0x140016328
   14000471b:	mov    edx,0x3f1
   140004720:	mov    rcx,QWORD PTR [rbx+0x48]
   140004724:	call   QWORD PTR [rip+0x11bc6]        # 0x1400162f0
   14000472a:	mov    rcx,rax
   14000472d:	mov    edx,r15d
   140004730:	call   QWORD PTR [rip+0x11bf2]        # 0x140016328
   140004736:	mov    edx,0x3f5
   14000473b:	mov    rcx,QWORD PTR [rbx+0x48]
   14000473f:	call   QWORD PTR [rip+0x11bab]        # 0x1400162f0
   140004745:	mov    rcx,rax
   140004748:	mov    edx,r15d
   14000474b:	call   QWORD PTR [rip+0x11bd7]        # 0x140016328
   140004751:	nop
   140004752:	lea    rcx,[rbp-0x10]
   140004756:	call   0x14000bf98
   14000475b:	xor    eax,eax
   14000475d:	lea    r11,[rsp+0x110]
   140004765:	mov    rbx,QWORD PTR [r11+0x40]
   140004769:	mov    rsi,QWORD PTR [r11+0x48]
   14000476d:	mov    rsp,r11
   140004770:	pop    r15
   140004772:	pop    r14
   140004774:	pop    r12
   140004776:	pop    rdi
   140004777:	pop    rbp
   140004778:	ret    
   140004779:	int3   
   14000477a:	int3   
   14000477b:	int3   
   14000477c:	int3   
   14000477d:	int3   
   14000477e:	int3   
   14000477f:	int3   
   140004780:	mov    rax,rsp
   140004783:	push   rdi
   140004784:	sub    rsp,0x60
   140004788:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140004790:	mov    QWORD PTR [rax+0x8],rbx
   140004794:	mov    QWORD PTR [rax+0x10],rbp
   140004798:	mov    QWORD PTR [rax+0x20],rsi
   14000479c:	mov    rdi,r8
   14000479f:	mov    rsi,rdx
   1400047a2:	mov    rbp,rcx
   1400047a5:	xor    ebx,ebx
   1400047a7:	mov    DWORD PTR [rax+0x18],ebx
   1400047aa:	lea    r8,[rax+0x18]
   1400047ae:	lea    rdx,[rip+0x12e3b]        # 0x1400175f0
   1400047b5:	lea    rcx,[rax-0x20]
   1400047b9:	call   0x14000bf4c
   1400047be:	nop
   1400047bf:	test   rdi,rdi
   1400047c2:	jne    0x14000480e
   1400047c4:	mov    DWORD PTR [rsp+0x80],0x80070057
   1400047cf:	lea    rax,[rip+0x1984a]        # 0x14001e020
   1400047d6:	mov    rcx,QWORD PTR [rip+0x19843]        # 0x14001e020
   1400047dd:	cmp    rcx,rax
   1400047e0:	je     0x14000497f
   1400047e6:	test   BYTE PTR [rcx+0x1c],0x4
   1400047ea:	je     0x14000497f
   1400047f0:	lea    edx,[rbx+0x10]
   1400047f3:	mov    r9d,0x80070057
   1400047f9:	lea    r8,[rip+0x13038]        # 0x140017838
   140004800:	mov    rcx,QWORD PTR [rcx+0x10]
   140004804:	call   0x140001228
   140004809:	jmp    0x14000497f
   14000480e:	mov    eax,DWORD PTR [rdi+0x10]
   140004811:	cmp    eax,0xffffff2f
   140004816:	je     0x140004935
   14000481c:	cmp    eax,0xffffff31
   140004821:	je     0x1400048fa
   140004827:	cmp    eax,0xffffff32
   14000482c:	je     0x1400048c7
   140004832:	cmp    eax,0xffffff38
   140004837:	jne    0x14000497f
   14000483d:	mov    esi,0x13
   140004842:	mov    r9d,esi
   140004845:	xor    r8d,r8d
   140004848:	mov    edx,0x470
   14000484d:	mov    rcx,QWORD PTR [rdi]
   140004850:	call   QWORD PTR [rip+0x11b12]        # 0x140016368
   140004856:	mov    r9d,esi
   140004859:	mov    r8d,esi
   14000485c:	mov    edx,0x48a
   140004861:	mov    rcx,QWORD PTR [rdi]
   140004864:	call   QWORD PTR [rip+0x11afe]        # 0x140016368
   14000486a:	lea    rax,[rip+0x197af]        # 0x14001e020
   140004871:	mov    rcx,QWORD PTR [rip+0x197a8]        # 0x14001e020
   140004878:	cmp    rcx,rax
   14000487b:	je     0x1400048a8
   14000487d:	test   DWORD PTR [rcx+0x1c],0x2000
   140004884:	je     0x1400048a8
   140004886:	lea    edx,[rsi-0x2]
   140004889:	mov    DWORD PTR [rsp+0x38],0xfa9
   140004891:	lea    r8,[rip+0x12fa0]        # 0x140017838
   140004898:	mov    rcx,QWORD PTR [rcx+0x10]
   14000489c:	call   0x140002ff0
   1400048a1:	mov    rcx,QWORD PTR [rip+0x19778]        # 0x14001e020
   1400048a8:	mov    r8,QWORD PTR [rcx+0x10]
   1400048ac:	test   r8,r8
   1400048af:	je     0x14000497f
   1400048b5:	mov    r9b,0x2
   1400048b8:	mov    edx,0x40d
   1400048bd:	call   0x140002f4c
   1400048c2:	jmp    0x14000497f
   1400048c7:	lea    rax,[rip+0x19752]        # 0x14001e020
   1400048ce:	mov    rcx,QWORD PTR [rip+0x1974b]        # 0x14001e020
   1400048d5:	cmp    rcx,rax
   1400048d8:	je     0x14000497f
   1400048de:	test   DWORD PTR [rcx+0x1c],0x2000
   1400048e5:	je     0x14000497f
   1400048eb:	mov    edx,0x13
   1400048f0:	mov    DWORD PTR [rsp+0x38],0xfab
   1400048f8:	jmp    0x140004923
   1400048fa:	lea    rax,[rip+0x1971f]        # 0x14001e020
   140004901:	mov    rcx,QWORD PTR [rip+0x19718]        # 0x14001e020
   140004908:	cmp    rcx,rax
   14000490b:	je     0x14000497f
   14000490d:	test   DWORD PTR [rcx+0x1c],0x2000
   140004914:	je     0x14000497f
   140004916:	mov    edx,0x12
   14000491b:	mov    DWORD PTR [rsp+0x38],0xfaa
   140004923:	lea    r8,[rip+0x12f0e]        # 0x140017838
   14000492a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000492e:	call   0x140002ff0
   140004933:	jmp    0x14000497f
   140004935:	lea    rax,[rip+0x196e4]        # 0x14001e020
   14000493c:	mov    rcx,QWORD PTR [rip+0x196dd]        # 0x14001e020
   140004943:	cmp    rcx,rax
   140004946:	je     0x14000496e
   140004948:	test   DWORD PTR [rcx+0x1c],0x2000
   14000494f:	je     0x14000496e
   140004951:	mov    edx,0x14
   140004956:	mov    DWORD PTR [rsp+0x38],0xfac
   14000495e:	lea    r8,[rip+0x12ed3]        # 0x140017838
   140004965:	mov    rcx,QWORD PTR [rcx+0x10]
   140004969:	call   0x140002ff0
   14000496e:	mov    r8,rdi
   140004971:	mov    rdx,rsi
   140004974:	mov    rcx,rbp
   140004977:	call   0x140002510
   14000497c:	mov    rbx,rax
   14000497f:	lea    rcx,[rsp+0x48]
   140004984:	call   0x14000bf98
   140004989:	mov    rax,rbx
   14000498c:	lea    r11,[rsp+0x60]
   140004991:	mov    rbx,QWORD PTR [r11+0x10]
   140004995:	mov    rbp,QWORD PTR [r11+0x18]
   140004999:	mov    rsi,QWORD PTR [r11+0x28]
   14000499d:	mov    rsp,r11
   1400049a0:	pop    rdi
   1400049a1:	ret    
   1400049a2:	int3   
   1400049a3:	int3   
   1400049a4:	int3   
   1400049a5:	int3   
   1400049a6:	int3   
   1400049a7:	int3   
   1400049a8:	int3   
   1400049a9:	int3   
   1400049aa:	int3   
   1400049ab:	int3   
   1400049ac:	int3   
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400049ba:	mov    QWORD PTR [rsp+0x20],rdi
   1400049bf:	push   rbp
   1400049c0:	mov    rbp,rsp
   1400049c3:	sub    rsp,0x60
   1400049c7:	and    DWORD PTR [rbp+0x20],0x0
   1400049cb:	mov    rdi,r8
   1400049ce:	mov    rsi,rdx
   1400049d1:	lea    r8,[rbp+0x20]
   1400049d5:	mov    rbx,rcx
   1400049d8:	lea    rdx,[rip+0x12c39]        # 0x140017618
   1400049df:	lea    rcx,[rbp-0x40]
   1400049e3:	call   0x14000bf4c
   1400049e8:	test   rdi,rdi
   1400049eb:	je     0x140004aec
   1400049f1:	test   rsi,rsi
   1400049f4:	je     0x140004aec
   1400049fa:	mov    edx,0xfffffff4
   1400049ff:	mov    rcx,rdi
   140004a02:	call   QWORD PTR [rip+0x119b0]        # 0x1400163b8
   140004a08:	mov    r9d,0x3f3
   140004a0e:	mov    ecx,eax
   140004a10:	cmp    eax,r9d
   140004a13:	jl     0x140004b27
   140004a19:	lea    r8d,[r9+0x2]
   140004a1d:	cmp    eax,r8d
   140004a20:	jle    0x140004a5a
   140004a22:	cmp    eax,0x3f7
   140004a27:	je     0x140004a3e
   140004a29:	cmp    eax,0x402
   140004a2e:	jne    0x140004b27
   140004a34:	mov    edx,0x5
   140004a39:	jmp    0x140004ad0
   140004a3e:	cmp    DWORD PTR [rbx+0x78],0x0
   140004a42:	je     0x140004a53
   140004a44:	mov    rax,QWORD PTR [rbx+0x68]
   140004a48:	test   rax,rax
   140004a4b:	je     0x140004a53
   140004a4d:	cmp    DWORD PTR [rax+0x30],0x0
   140004a51:	je     0x140004a34
   140004a53:	mov    edx,0x4
   140004a58:	jmp    0x140004ad0
   140004a5a:	mov    rax,QWORD PTR [rbx+0x68]
   140004a5e:	test   rax,rax
   140004a61:	je     0x140004b27
   140004a67:	cmp    DWORD PTR [rbx+0x78],0x0
   140004a6b:	je     0x140004ace
   140004a6d:	movups xmm2,XMMWORD PTR [rax+0x10]
   140004a71:	movups xmm0,XMMWORD PTR [rax+0x20]
   140004a75:	psrldq xmm2,0x8
   140004a7a:	movq   rax,xmm2
   140004a7f:	shr    rax,0x20
   140004a83:	movups XMMWORD PTR [rbp-0x10],xmm0
   140004a87:	test   eax,eax
   140004a89:	je     0x140004a92
   140004a8b:	mov    edx,0x3
   140004a90:	jmp    0x140004ad0
   140004a92:	cmp    ecx,r9d
   140004a95:	jne    0x140004a9d
   140004a97:	cmp    DWORD PTR [rbp-0x10],0x0
   140004a9b:	jne    0x140004abc
   140004a9d:	cmp    ecx,0x3f4
   140004aa3:	jne    0x140004ab1
   140004aa5:	cmp    DWORD PTR [rbp-0xc],0x0
   140004aa9:	je     0x140004ac3
   140004aab:	cmp    DWORD PTR [rbp-0x4],0x0
   140004aaf:	jne    0x140004abc
   140004ab1:	cmp    ecx,r8d
   140004ab4:	jne    0x140004ac3
   140004ab6:	cmp    DWORD PTR [rbp-0x8],0x0
   140004aba:	je     0x140004ac3
   140004abc:	mov    eax,0x1
   140004ac1:	jmp    0x140004ac5
   140004ac3:	xor    eax,eax
   140004ac5:	neg    eax
   140004ac7:	sbb    edx,edx
   140004ac9:	add    edx,0x2
   140004acc:	jmp    0x140004ad0
   140004ace:	xor    edx,edx
   140004ad0:	mov    rcx,rbx
   140004ad3:	call   0x140002ea4
   140004ad8:	test   eax,eax
   140004ada:	je     0x140004b27
   140004adc:	lea    r8,[rbp+0x20]
   140004ae0:	mov    edx,eax
   140004ae2:	mov    rcx,rsi
   140004ae5:	call   0x14000c480
   140004aea:	jmp    0x140004b27
   140004aec:	mov    DWORD PTR [rbp+0x20],0x80070057
   140004af3:	mov    rcx,QWORD PTR [rip+0x19526]        # 0x14001e020
   140004afa:	lea    rax,[rip+0x1951f]        # 0x14001e020
   140004b01:	cmp    rcx,rax
   140004b04:	je     0x140004b27
   140004b06:	test   BYTE PTR [rcx+0x1c],0x4
   140004b0a:	je     0x140004b27
   140004b0c:	mov    rcx,QWORD PTR [rcx+0x10]
   140004b10:	lea    r8,[rip+0x12d21]        # 0x140017838
   140004b17:	mov    edx,0x15
   140004b1c:	mov    r9d,0x80070057
   140004b22:	call   0x140001228
   140004b27:	lea    rcx,[rbp-0x40]
   140004b2b:	call   0x14000bf98
   140004b30:	lea    r11,[rsp+0x60]
   140004b35:	xor    eax,eax
   140004b37:	mov    rbx,QWORD PTR [r11+0x10]
   140004b3b:	mov    rsi,QWORD PTR [r11+0x18]
   140004b3f:	mov    rdi,QWORD PTR [r11+0x28]
   140004b43:	mov    rsp,r11
   140004b46:	pop    rbp
   140004b47:	ret    
   140004b48:	int3   
   140004b49:	int3   
   140004b4a:	int3   
   140004b4b:	int3   
   140004b4c:	int3   
   140004b4d:	int3   
   140004b4e:	int3   
   140004b4f:	int3   
   140004b50:	mov    QWORD PTR [rsp+0x10],rbx
   140004b55:	push   rbp
   140004b56:	lea    rbp,[rsp-0x57]
   140004b5b:	sub    rsp,0xc0
   140004b62:	mov    rax,QWORD PTR [rip+0x194a7]        # 0x14001e010
   140004b69:	xor    rax,rsp
   140004b6c:	mov    QWORD PTR [rbp+0x47],rax
   140004b70:	and    DWORD PTR [rbp-0x49],0x0
   140004b74:	lea    r8,[rbp-0x49]
   140004b78:	mov    rbx,rcx
   140004b7b:	lea    rdx,[rip+0x12ac6]        # 0x140017648
   140004b82:	lea    rcx,[rbp-0x41]
   140004b86:	call   0x14000bf4c
   140004b8b:	mov    rcx,QWORD PTR [rbx+0x48]
   140004b8f:	lea    rdx,[rbp-0x9]
   140004b93:	call   QWORD PTR [rip+0x117d7]        # 0x140016370
   140004b99:	test   rax,rax
   140004b9c:	jne    0x140004be9
   140004b9e:	call   QWORD PTR [rip+0x116e4]        # 0x140016288
   140004ba4:	movzx  r9d,ax
   140004ba8:	or     r9d,0x80070000
   140004baf:	test   eax,eax
   140004bb1:	cmovle r9d,eax
   140004bb5:	mov    DWORD PTR [rbp-0x49],r9d
   140004bb9:	mov    rcx,QWORD PTR [rip+0x19460]        # 0x14001e020
   140004bc0:	lea    rax,[rip+0x19459]        # 0x14001e020
   140004bc7:	cmp    rcx,rax
   140004bca:	je     0x140004c49
   140004bcc:	test   BYTE PTR [rcx+0x1c],0x4
   140004bd0:	je     0x140004c49
   140004bd2:	mov    rcx,QWORD PTR [rcx+0x10]
   140004bd6:	lea    r8,[rip+0x12c5b]        # 0x140017838
   140004bdd:	mov    edx,0x16
   140004be2:	call   0x140001228
   140004be7:	jmp    0x140004c49
   140004be9:	mov    rcx,QWORD PTR [rbx+0x48]
   140004bed:	lea    r8,[rbp-0x49]
   140004bf1:	mov    edx,0x404
   140004bf6:	call   0x14000d6ec
   140004bfb:	test   rax,rax
   140004bfe:	je     0x140004c3b
   140004c00:	lea    r8,[rbp-0x49]
   140004c04:	mov    rcx,rax
   140004c07:	lea    rdx,[rbp-0x31]
   140004c0b:	call   0x14000c8e8
   140004c10:	cmp    DWORD PTR [rbp-0x49],0x0
   140004c14:	jl     0x140004c3b
   140004c16:	mov    rcx,QWORD PTR [rbx+0x48]
   140004c1a:	xor    r8d,r8d
   140004c1d:	mov    edx,0x3e8
   140004c22:	call   0x14000d6ec
   140004c27:	test   rax,rax
   140004c2a:	je     0x140004c3b
   140004c2c:	xor    r8d,r8d
   140004c2f:	lea    rdx,[rbp-0x21]
   140004c33:	mov    rcx,rax
   140004c36:	call   0x14000c8e8
   140004c3b:	mov    rcx,QWORD PTR [rbx+0x48]
   140004c3f:	lea    rdx,[rbp-0x9]
   140004c43:	call   QWORD PTR [rip+0x1175f]        # 0x1400163a8
   140004c49:	lea    rcx,[rbp-0x41]
   140004c4d:	call   0x14000bf98
   140004c52:	mov    eax,0x1
   140004c57:	mov    rcx,QWORD PTR [rbp+0x47]
   140004c5b:	xor    rcx,rsp
   140004c5e:	call   0x1400146a0
   140004c63:	mov    rbx,QWORD PTR [rsp+0xd8]
   140004c6b:	add    rsp,0xc0
   140004c72:	pop    rbp
   140004c73:	ret    
   140004c74:	int3   
   140004c75:	int3   
   140004c76:	int3   
   140004c77:	int3   
   140004c78:	int3   
   140004c79:	int3   
   140004c7a:	int3   
   140004c7b:	int3   
   140004c7c:	int3   
   140004c7d:	int3   
   140004c7e:	int3   
   140004c7f:	int3   
   140004c80:	mov    QWORD PTR [rsp+0x20],rbx
   140004c85:	push   rbp
   140004c86:	push   rsi
   140004c87:	push   rdi
   140004c88:	push   r12
   140004c8a:	push   r13
   140004c8c:	push   r14
   140004c8e:	push   r15
   140004c90:	lea    rbp,[rsp-0x190]
   140004c98:	sub    rsp,0x290
   140004c9f:	mov    rax,QWORD PTR [rip+0x1936a]        # 0x14001e010
   140004ca6:	xor    rax,rsp
   140004ca9:	mov    QWORD PTR [rbp+0x180],rax
   140004cb0:	mov    rdi,r8
   140004cb3:	mov    rbx,rdx
   140004cb6:	mov    rsi,rcx
   140004cb9:	lea    r8,[rsp+0x50]
   140004cbe:	xor    r13d,r13d
   140004cc1:	lea    rdx,[rip+0x129a8]        # 0x140017670
   140004cc8:	lea    rcx,[rsp+0x58]
   140004ccd:	mov    DWORD PTR [rsp+0x50],r13d
   140004cd2:	mov    DWORD PTR [rsp+0x54],r13d
   140004cd7:	call   0x14000bf4c
   140004cdc:	cmp    ebx,0x3e8
   140004ce2:	je     0x140004dad
   140004ce8:	lea    eax,[rbx-0x3f3]
   140004cee:	cmp    eax,0x2
   140004cf1:	ja     0x140005132
   140004cf7:	mov    rcx,QWORD PTR [rsi+0x48]
   140004cfb:	lea    r8,[rbp-0x80]
   140004cff:	mov    r9d,0xfa
   140004d05:	mov    WORD PTR [rbp-0x80],r13w
   140004d0a:	mov    edx,ebx
   140004d0c:	call   QWORD PTR [rip+0x116be]        # 0x1400163d0
   140004d12:	lea    rdx,[rdi+0x28]
   140004d16:	lea    rcx,[rsp+0x68]
   140004d1b:	call   QWORD PTR [rip+0x116a7]        # 0x1400163c8
   140004d21:	mov    rcx,QWORD PTR [rdi+0x20]
   140004d25:	lea    rax,[rsp+0x54]
   140004d2a:	mov    QWORD PTR [rsp+0x28],rax
   140004d2f:	lea    r9,[rsp+0x68]
   140004d34:	lea    rdx,[rbp-0x80]
   140004d38:	mov    DWORD PTR [rsp+0x20],0x410
   140004d40:	call   0x14000d564
   140004d45:	mov    ecx,DWORD PTR [rsp+0x54]
   140004d49:	test   ecx,ecx
   140004d4b:	js     0x140004d9b
   140004d4d:	mov    r8d,DWORD PTR [rdi+0x34]
   140004d51:	lea    r9,[rsp+0x68]
   140004d56:	mov    rcx,QWORD PTR [rdi+0x20]
   140004d5a:	mov    eax,r8d
   140004d5d:	sub    eax,DWORD PTR [rsp+0x74]
   140004d61:	cdq    
   140004d62:	mov    DWORD PTR [rsp+0x74],r8d
   140004d67:	sub    eax,edx
   140004d69:	mov    edx,DWORD PTR [rsp+0x6c]
   140004d6d:	sar    eax,1
   140004d6f:	add    edx,eax
   140004d71:	lea    rax,[rsp+0x54]
   140004d76:	cmp    DWORD PTR [rdi+0x2c],edx
   140004d79:	mov    QWORD PTR [rsp+0x28],rax
   140004d7e:	cmovg  edx,DWORD PTR [rdi+0x2c]
   140004d82:	mov    DWORD PTR [rsp+0x6c],edx
   140004d86:	lea    rdx,[rbp-0x80]
   140004d8a:	mov    DWORD PTR [rsp+0x20],0x10
   140004d92:	call   0x14000d564
   140004d97:	mov    ecx,DWORD PTR [rsp+0x54]
   140004d9b:	mov    eax,DWORD PTR [rsp+0x50]
   140004d9f:	test   eax,eax
   140004da1:	cmovne ecx,eax
   140004da4:	mov    DWORD PTR [rsp+0x50],ecx
   140004da8:	jmp    0x140005132
   140004dad:	cmp    QWORD PTR [rsi+0x80],r13
   140004db4:	je     0x140005132
   140004dba:	cmp    QWORD PTR [rdi+0x20],r13
   140004dbe:	je     0x140005132
   140004dc4:	call   0x14000dc24
   140004dc9:	mov    ebx,eax
   140004dcb:	call   QWORD PTR [rip+0x1170f]        # 0x1400164e0
   140004dd1:	test   ebx,ebx
   140004dd3:	jne    0x140004ddc
   140004dd5:	lea    edx,[rbx+0x5]
   140004dd8:	test   eax,eax
   140004dda:	jne    0x140004de1
   140004ddc:	mov    edx,0xf
   140004de1:	xor    ecx,ecx
   140004de3:	call   QWORD PTR [rip+0x116c7]        # 0x1400164b0
   140004de9:	mov    rcx,QWORD PTR [rdi+0x20]
   140004ded:	lea    r8,[rsp+0x50]
   140004df2:	mov    rdx,rax
   140004df5:	call   0x14000c018
   140004dfa:	mov    r14,rax
   140004dfd:	cmp    DWORD PTR [rsp+0x50],r13d
   140004e02:	jl     0x140005132
   140004e08:	mov    ecx,0x13
   140004e0d:	call   QWORD PTR [rip+0x112f5]        # 0x140016108
   140004e13:	mov    rcx,QWORD PTR [rdi+0x20]
   140004e17:	lea    r8,[rsp+0x50]
   140004e1c:	mov    rdx,rax
   140004e1f:	call   0x14000c018
   140004e24:	mov    rbx,rax
   140004e27:	cmp    DWORD PTR [rsp+0x50],r13d
   140004e2c:	jl     0x140004e89
   140004e2e:	mov    ecx,0x8
   140004e33:	call   QWORD PTR [rip+0x114f7]        # 0x140016330
   140004e39:	mov    rcx,QWORD PTR [rdi+0x20]
   140004e3d:	mov    edx,eax
   140004e3f:	call   QWORD PTR [rip+0x112cb]        # 0x140016110
   140004e45:	mov    ecx,DWORD PTR [rdi+0x34]
   140004e48:	mov    r8d,DWORD PTR [rdi+0x2c]
   140004e4c:	sub    ecx,r8d
   140004e4f:	mov    r9d,DWORD PTR [rdi+0x30]
   140004e53:	mov    edx,DWORD PTR [rdi+0x28]
   140004e56:	sub    r9d,edx
   140004e59:	mov    DWORD PTR [rsp+0x20],ecx
   140004e5d:	mov    rcx,QWORD PTR [rdi+0x20]
   140004e61:	call   QWORD PTR [rip+0x11299]        # 0x140016100
   140004e67:	mov    rcx,QWORD PTR [rdi+0x20]
   140004e6b:	lea    r8,[rsp+0x54]
   140004e70:	mov    rdx,rbx
   140004e73:	call   0x14000c018
   140004e78:	mov    eax,DWORD PTR [rsp+0x50]
   140004e7c:	test   eax,eax
   140004e7e:	mov    ecx,DWORD PTR [rsp+0x54]
   140004e82:	cmovne ecx,eax
   140004e85:	mov    DWORD PTR [rsp+0x50],ecx
   140004e89:	mov    eax,DWORD PTR [rdi+0x30]
   140004e8c:	lea    r15,[rdi+0x28]
   140004e90:	add    eax,DWORD PTR [r15]
   140004e93:	mov    r9d,DWORD PTR [rsi+0x60]
   140004e97:	cdq    
   140004e98:	mov    rcx,QWORD PTR [rsi+0x80]
   140004e9f:	sub    eax,edx
   140004ea1:	sar    eax,1
   140004ea3:	mov    DWORD PTR [rsp+0x68],eax
   140004ea7:	mov    eax,DWORD PTR [rdi+0x34]
   140004eaa:	add    eax,DWORD PTR [rdi+0x2c]
   140004ead:	cdq    
   140004eae:	sub    eax,edx
   140004eb0:	mov    rdx,QWORD PTR [rdi+0x20]
   140004eb4:	sar    eax,1
   140004eb6:	mov    DWORD PTR [rsp+0x6c],eax
   140004eba:	mov    r8,QWORD PTR [rsp+0x68]
   140004ebf:	call   0x1400105ac
   140004ec4:	mov    rcx,QWORD PTR [rdi+0x20]
   140004ec8:	lea    r8,[rsp+0x54]
   140004ecd:	mov    rdx,r14
   140004ed0:	mov    DWORD PTR [rsp+0x50],eax
   140004ed4:	call   0x14000c018
   140004ed9:	mov    eax,DWORD PTR [rsp+0x50]
   140004edd:	test   eax,eax
   140004edf:	mov    edx,DWORD PTR [rsp+0x54]
   140004ee3:	mov    ecx,edx
   140004ee5:	cmovne ecx,eax
   140004ee8:	mov    DWORD PTR [rsp+0x50],ecx
   140004eec:	cmp    DWORD PTR [rsi+0x78],r13d
   140004ef0:	jne    0x1400050ea
   140004ef6:	lea    r14,[rsi+0x110]
   140004efd:	cmp    WORD PTR [r14],r13w
   140004f01:	je     0x1400050ea
   140004f07:	mov    rcx,QWORD PTR [rsi+0x310]
   140004f0e:	xorps  xmm0,xmm0
   140004f11:	mov    ebx,0x11
   140004f16:	movdqu XMMWORD PTR [rsp+0x68],xmm0
   140004f1c:	test   rcx,rcx
   140004f1f:	je     0x140004fd9
   140004f25:	mov    rdx,QWORD PTR [rdi+0x20]
   140004f29:	lea    rax,[rsp+0x68]
   140004f2e:	mov    QWORD PTR [rsp+0x40],rax
   140004f33:	lea    r8d,[rbx-0xf]
   140004f37:	mov    QWORD PTR [rsp+0x38],r15
   140004f3c:	or     r12d,0xffffffff
   140004f40:	mov    DWORD PTR [rsp+0x30],ebx
   140004f44:	xor    r9d,r9d
   140004f47:	mov    DWORD PTR [rsp+0x28],r12d
   140004f4c:	mov    QWORD PTR [rsp+0x20],r14
   140004f51:	call   QWORD PTR [rip+0x11551]        # 0x1400164a8
   140004f57:	mov    DWORD PTR [rsp+0x54],eax
   140004f5b:	mov    edx,eax
   140004f5d:	test   eax,eax
   140004f5f:	js     0x140004fd9
   140004f61:	mov    eax,DWORD PTR [rdi+0x34]
   140004f64:	lea    rcx,[rsp+0x68]
   140004f69:	sub    eax,DWORD PTR [rdi+0x2c]
   140004f6c:	sub    eax,DWORD PTR [rsp+0x74]
   140004f70:	add    eax,DWORD PTR [rsp+0x6c]
   140004f74:	cdq    
   140004f75:	sub    eax,edx
   140004f77:	sar    eax,1
   140004f79:	mov    r8d,eax
   140004f7c:	mov    eax,DWORD PTR [rdi+0x30]
   140004f7f:	sub    eax,DWORD PTR [r15]
   140004f82:	sub    eax,DWORD PTR [rsp+0x70]
   140004f86:	add    eax,DWORD PTR [rsp+0x68]
   140004f8a:	add    r8d,DWORD PTR [rdi+0x2c]
   140004f8e:	cdq    
   140004f8f:	sub    eax,edx
   140004f91:	sar    eax,1
   140004f93:	add    eax,DWORD PTR [r15]
   140004f96:	mov    edx,eax
   140004f98:	call   QWORD PTR [rip+0x11422]        # 0x1400163c0
   140004f9e:	mov    rdx,QWORD PTR [rdi+0x20]
   140004fa2:	lea    rax,[rsp+0x68]
   140004fa7:	mov    rcx,QWORD PTR [rsi+0x310]
   140004fae:	lea    r8d,[rbx-0xf]
   140004fb2:	mov    QWORD PTR [rsp+0x40],rax
   140004fb7:	xor    r9d,r9d
   140004fba:	mov    DWORD PTR [rsp+0x38],r13d
   140004fbf:	mov    DWORD PTR [rsp+0x30],ebx
   140004fc3:	mov    DWORD PTR [rsp+0x28],r12d
   140004fc8:	mov    QWORD PTR [rsp+0x20],r14
   140004fcd:	call   QWORD PTR [rip+0x114cd]        # 0x1400164a0
   140004fd3:	mov    edx,eax
   140004fd5:	mov    DWORD PTR [rsp+0x54],eax
   140004fd9:	cmp    QWORD PTR [rsi+0x310],r13
   140004fe0:	je     0x140004fea
   140004fe2:	test   edx,edx
   140004fe4:	jns    0x1400050dd
   140004fea:	mov    rdx,r15
   140004fed:	lea    rcx,[rsp+0x68]
   140004ff2:	call   QWORD PTR [rip+0x113d0]        # 0x1400163c8
   140004ff8:	mov    rcx,QWORD PTR [rdi+0x20]
   140004ffc:	lea    rax,[rsp+0x54]
   140005001:	mov    QWORD PTR [rsp+0x28],rax
   140005006:	lea    r9,[rsp+0x68]
   14000500b:	mov    rdx,r14
   14000500e:	mov    DWORD PTR [rsp+0x20],0x411
   140005016:	call   0x14000d564
   14000501b:	mov    edx,DWORD PTR [rsp+0x54]
   14000501f:	test   edx,edx
   140005021:	js     0x1400050dd
   140005027:	mov    rcx,QWORD PTR [rdi+0x20]
   14000502b:	mov    edx,0x1
   140005030:	call   0x14000c600
   140005035:	mov    r12d,eax
   140005038:	call   0x14000dc24
   14000503d:	test   eax,eax
   14000503f:	je     0x140005046
   140005041:	mov    eax,r13d
   140005044:	jmp    0x140005053
   140005046:	mov    edx,0x4
   14000504b:	mov    rcx,rsi
   14000504e:	call   0x140002ea4
   140005053:	mov    rcx,QWORD PTR [rdi+0x20]
   140005057:	mov    edx,eax
   140005059:	call   QWORD PTR [rip+0x110b9]        # 0x140016118
   14000505f:	mov    ebx,eax
   140005061:	lea    rcx,[rsp+0x68]
   140005066:	mov    eax,DWORD PTR [rdi+0x34]
   140005069:	sub    eax,DWORD PTR [rdi+0x2c]
   14000506c:	sub    eax,DWORD PTR [rsp+0x74]
   140005070:	add    eax,DWORD PTR [rsp+0x6c]
   140005074:	cdq    
   140005075:	sub    eax,edx
   140005077:	sar    eax,1
   140005079:	mov    r8d,eax
   14000507c:	mov    eax,DWORD PTR [rdi+0x30]
   14000507f:	sub    eax,DWORD PTR [r15]
   140005082:	sub    eax,DWORD PTR [rsp+0x70]
   140005086:	add    eax,DWORD PTR [rsp+0x68]
   14000508a:	add    r8d,DWORD PTR [rdi+0x2c]
   14000508e:	cdq    
   14000508f:	sub    eax,edx
   140005091:	sar    eax,1
   140005093:	add    eax,DWORD PTR [r15]
   140005096:	mov    edx,eax
   140005098:	call   QWORD PTR [rip+0x11322]        # 0x1400163c0
   14000509e:	mov    rcx,QWORD PTR [rdi+0x20]
   1400050a2:	lea    rax,[rsp+0x54]
   1400050a7:	mov    QWORD PTR [rsp+0x28],rax
   1400050ac:	lea    r9,[rsp+0x68]
   1400050b1:	mov    rdx,r14
   1400050b4:	mov    DWORD PTR [rsp+0x20],0x11
   1400050bc:	call   0x14000d564
   1400050c1:	mov    rcx,QWORD PTR [rdi+0x20]
   1400050c5:	mov    edx,ebx
   1400050c7:	call   QWORD PTR [rip+0x1104b]        # 0x140016118
   1400050cd:	mov    rcx,QWORD PTR [rdi+0x20]
   1400050d1:	mov    edx,r12d
   1400050d4:	call   0x14000c600
   1400050d9:	mov    edx,DWORD PTR [rsp+0x54]
   1400050dd:	mov    eax,DWORD PTR [rsp+0x50]
   1400050e1:	test   eax,eax
   1400050e3:	cmovne edx,eax
   1400050e6:	mov    DWORD PTR [rsp+0x50],edx
   1400050ea:	mov    rcx,QWORD PTR [rip+0x18f2f]        # 0x14001e020
   1400050f1:	lea    rax,[rip+0x18f28]        # 0x14001e020
   1400050f8:	cmp    rcx,rax
   1400050fb:	je     0x140005132
   1400050fd:	test   DWORD PTR [rcx+0x1c],0x2000
   140005104:	je     0x140005132
   140005106:	mov    eax,DWORD PTR [rsi+0x100]
   14000510c:	mov    edx,0x17
   140005111:	mov    rcx,QWORD PTR [rcx+0x10]
   140005115:	neg    eax
   140005117:	sbb    r8d,r8d
   14000511a:	add    r8d,0xfae
   140005121:	mov    DWORD PTR [rsp+0x38],r8d
   140005126:	lea    r8,[rip+0x1270b]        # 0x140017838
   14000512d:	call   0x140002ff0
   140005132:	lea    rcx,[rsp+0x58]
   140005137:	call   0x14000bf98
   14000513c:	xor    eax,eax
   14000513e:	mov    rcx,QWORD PTR [rbp+0x180]
   140005145:	xor    rcx,rsp
   140005148:	call   0x1400146a0
   14000514d:	mov    rbx,QWORD PTR [rsp+0x2e8]
   140005155:	add    rsp,0x290
   14000515c:	pop    r15
   14000515e:	pop    r14
   140005160:	pop    r13
   140005162:	pop    r12
   140005164:	pop    rdi
   140005165:	pop    rsi
   140005166:	pop    rbp
   140005167:	ret    
   140005168:	int3   
   140005169:	int3   
   14000516a:	int3   
   14000516b:	int3   
   14000516c:	int3   
   14000516d:	int3   
   14000516e:	int3   
   14000516f:	int3   
   140005170:	mov    rax,rsp
   140005173:	push   rdi
   140005174:	sub    rsp,0x40
   140005178:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140005180:	mov    QWORD PTR [rax+0x10],rbx
   140005184:	mov    QWORD PTR [rax+0x18],rbp
   140005188:	mov    rbx,rcx
   14000518b:	and    DWORD PTR [rax+0x8],0x0
   14000518f:	lea    r8,[rax+0x8]
   140005193:	lea    rdx,[rip+0x124fe]        # 0x140017698
   14000519a:	lea    rcx,[rax-0x20]
   14000519e:	call   0x14000bf4c
   1400051a3:	nop
   1400051a4:	lea    rbp,[rip+0x18e75]        # 0x14001e020
   1400051ab:	cmp    QWORD PTR [rbx+0x70],0x0
   1400051b0:	je     0x14000522e
   1400051b2:	cmp    QWORD PTR [rbx+0xe0],0x0
   1400051ba:	je     0x14000522e
   1400051bc:	xor    ecx,ecx
   1400051be:	call   QWORD PTR [rip+0x110ac]        # 0x140016270
   1400051c4:	mov    rax,QWORD PTR [rbx+0x70]
   1400051c8:	mov    r8,QWORD PTR [rax+0x180]
   1400051cf:	mov    edx,0xfffffffc
   1400051d4:	mov    rcx,QWORD PTR [rbx+0xe0]
   1400051db:	call   QWORD PTR [rip+0x1112f]        # 0x140016310
   1400051e1:	test   rax,rax
   1400051e4:	jne    0x14000522e
   1400051e6:	call   QWORD PTR [rip+0x1109c]        # 0x140016288
   1400051ec:	movzx  r9d,ax
   1400051f0:	or     r9d,0x80070000
   1400051f7:	test   eax,eax
   1400051f9:	cmovle r9d,eax
   1400051fd:	mov    DWORD PTR [rsp+0x50],r9d
   140005202:	test   r9d,r9d
   140005205:	jns    0x14000522e
   140005207:	mov    rcx,QWORD PTR [rip+0x18e12]        # 0x14001e020
   14000520e:	cmp    rcx,rbp
   140005211:	je     0x14000522e
   140005213:	test   BYTE PTR [rcx+0x1c],0x4
   140005217:	je     0x14000522e
   140005219:	mov    edx,0x18
   14000521e:	lea    r8,[rip+0x12613]        # 0x140017838
   140005225:	mov    rcx,QWORD PTR [rcx+0x10]
   140005229:	call   0x140001228
   14000522e:	mov    rcx,QWORD PTR [rbx+0x68]
   140005232:	test   rcx,rcx
   140005235:	je     0x140005242
   140005237:	call   QWORD PTR [rip+0x1133b]        # 0x140016578
   14000523d:	and    QWORD PTR [rbx+0x68],0x0
   140005242:	mov    rdi,QWORD PTR [rbx+0x70]
   140005246:	test   rdi,rdi
   140005249:	je     0x14000526b
   14000524b:	lea    rcx,[rdi+0x10]
   14000524f:	lea    rax,[rip+0x11aea]        # 0x140016d40
   140005256:	mov    QWORD PTR [rcx],rax
   140005259:	call   0x14000b4d4
   14000525e:	mov    rcx,rdi
   140005261:	call   0x140014254
   140005266:	and    QWORD PTR [rbx+0x70],0x0
   14000526b:	mov    rdx,QWORD PTR [rbx+0xf0]
   140005272:	test   rdx,rdx
   140005275:	je     0x140005288
   140005277:	mov    rcx,QWORD PTR [rbx+0x48]
   14000527b:	call   0x14000c9a8
   140005280:	and    QWORD PTR [rbx+0xf0],0x0
   140005288:	mov    rcx,QWORD PTR [rbx+0x108]
   14000528f:	test   rcx,rcx
   140005292:	je     0x1400052a3
   140005294:	xor    edx,edx
   140005296:	call   0x14000c0d8
   14000529b:	and    QWORD PTR [rbx+0x108],0x0
   1400052a3:	mov    rdi,QWORD PTR [rbx+0x80]
   1400052aa:	test   rdi,rdi
   1400052ad:	je     0x1400052c7
   1400052af:	mov    rcx,rdi
   1400052b2:	call   0x14000f8d8
   1400052b7:	mov    rcx,rdi
   1400052ba:	call   0x140014254
   1400052bf:	and    QWORD PTR [rbx+0x80],0x0
   1400052c7:	mov    rcx,QWORD PTR [rbx+0x310]
   1400052ce:	test   rcx,rcx
   1400052d1:	je     0x14000530c
   1400052d3:	call   QWORD PTR [rip+0x111e7]        # 0x1400164c0
   1400052d9:	mov    DWORD PTR [rsp+0x50],eax
   1400052dd:	test   eax,eax
   1400052df:	jns    0x14000530c
   1400052e1:	mov    rcx,QWORD PTR [rip+0x18d38]        # 0x14001e020
   1400052e8:	cmp    rcx,rbp
   1400052eb:	je     0x14000530c
   1400052ed:	test   BYTE PTR [rcx+0x1c],0x4
   1400052f1:	je     0x14000530c
   1400052f3:	mov    edx,0x19
   1400052f8:	mov    r9d,eax
   1400052fb:	lea    r8,[rip+0x12536]        # 0x140017838
   140005302:	mov    rcx,QWORD PTR [rcx+0x10]
   140005306:	call   0x140001228
   14000530b:	nop
   14000530c:	lea    rcx,[rsp+0x28]
   140005311:	call   0x14000bf98
   140005316:	xor    eax,eax
   140005318:	mov    rbx,QWORD PTR [rsp+0x58]
   14000531d:	mov    rbp,QWORD PTR [rsp+0x60]
   140005322:	add    rsp,0x40
   140005326:	pop    rdi
   140005327:	ret    
   140005328:	int3   
   140005329:	int3   
   14000532a:	int3   
   14000532b:	int3   
   14000532c:	int3   
   14000532d:	int3   
   14000532e:	int3   
   14000532f:	int3   
   140005330:	mov    rax,rsp
   140005333:	push   rbp
   140005334:	lea    rbp,[rax-0x5f]
   140005338:	sub    rsp,0xc0
   14000533f:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   140005347:	mov    QWORD PTR [rax+0x8],rbx
   14000534b:	mov    QWORD PTR [rax+0x18],rsi
   14000534f:	mov    QWORD PTR [rax+0x20],rdi
   140005353:	mov    rsi,rdx
   140005356:	mov    rbx,rcx
   140005359:	and    DWORD PTR [rbp+0x6f],0x0
   14000535d:	lea    r8,[rbp+0x6f]
   140005361:	lea    rdx,[rip+0x12358]        # 0x1400176c0
   140005368:	lea    rcx,[rbp-0x49]
   14000536c:	call   0x14000bf4c
   140005371:	nop
   140005372:	mov    edi,0x1
   140005377:	cmp    rsi,0x3e9
   14000537e:	jne    0x14000540b
   140005384:	mov    rdx,QWORD PTR [rbx+0xf0]
   14000538b:	mov    rcx,QWORD PTR [rbx+0x48]
   14000538f:	call   0x14000c9a8
   140005394:	and    QWORD PTR [rbx+0xf0],0x0
   14000539c:	cmp    QWORD PTR [rbx+0x80],0x0
   1400053a4:	je     0x140005407
   1400053a6:	mov    DWORD PTR [rbp-0x29],edi
   1400053a9:	and    DWORD PTR [rbp-0x25],0xfffffffe
   1400053ad:	xor    esi,esi
   1400053af:	movaps xmm0,XMMWORD PTR [rbp-0x29]
   1400053b3:	movaps XMMWORD PTR [rbp+0x17],xmm0
   1400053b7:	movaps xmm0,XMMWORD PTR [rbp-0x19]
   1400053bb:	movaps XMMWORD PTR [rbp+0x27],xmm0
   1400053bf:	movaps xmm0,XMMWORD PTR [rbp-0x9]
   1400053c3:	movaps XMMWORD PTR [rbp+0x37],xmm0
   1400053c7:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   1400053cb:	movaps XMMWORD PTR [rbp+0x47],xmm0
   1400053cf:	lea    r8,[rbp+0x17]
   1400053d3:	mov    edx,esi
   1400053d5:	mov    rcx,QWORD PTR [rbx+0x80]
   1400053dc:	call   0x14000fe20
   1400053e1:	mov    ecx,eax
   1400053e3:	mov    eax,DWORD PTR [rbp+0x6f]
   1400053e6:	test   eax,eax
   1400053e8:	cmovne ecx,eax
   1400053eb:	mov    DWORD PTR [rbp+0x6f],ecx
   1400053ee:	add    esi,edi
   1400053f0:	cmp    esi,0x8
   1400053f3:	jl     0x1400053af
   1400053f5:	mov    r8d,edi
   1400053f8:	xor    edx,edx
   1400053fa:	mov    rcx,QWORD PTR [rbx+0xe0]
   140005401:	call   QWORD PTR [rip+0x10fa9]        # 0x1400163b0
   140005407:	xor    edi,edi
   140005409:	jmp    0x140005435
   14000540b:	cmp    rsi,0x3ea
   140005412:	jne    0x140005435
   140005414:	mov    rdx,QWORD PTR [rbx+0xf8]
   14000541b:	mov    rcx,QWORD PTR [rbx+0x48]
   14000541f:	call   0x14000c9a8
   140005424:	and    QWORD PTR [rbx+0xf8],0x0
   14000542c:	mov    rcx,rbx
   14000542f:	call   0x140004338
   140005434:	nop
   140005435:	lea    rcx,[rbp-0x49]
   140005439:	call   0x14000bf98
   14000543e:	mov    rax,rdi
   140005441:	lea    r11,[rsp+0xc0]
   140005449:	mov    rbx,QWORD PTR [r11+0x10]
   14000544d:	mov    rsi,QWORD PTR [r11+0x20]
   140005451:	mov    rdi,QWORD PTR [r11+0x28]
   140005455:	mov    rsp,r11
   140005458:	pop    rbp
   140005459:	ret    
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	int3   
   14000545d:	int3   
   14000545e:	int3   
   14000545f:	int3   
   140005460:	mov    rax,rsp
   140005463:	mov    QWORD PTR [rax+0x10],rbx
   140005467:	mov    QWORD PTR [rax+0x18],rsi
   14000546b:	mov    QWORD PTR [rax+0x20],rdi
   14000546f:	push   rbp
   140005470:	push   r12
   140005472:	push   r13
   140005474:	push   r14
   140005476:	push   r15
   140005478:	lea    rbp,[rax-0x68]
   14000547c:	sub    rsp,0x140
   140005483:	mov    rax,QWORD PTR [rip+0x18b86]        # 0x14001e010
   14000548a:	xor    rax,rsp
   14000548d:	mov    QWORD PTR [rbp+0x38],rax
   140005491:	mov    rdi,rcx
   140005494:	lea    r8,[rsp+0x44]
   140005499:	xor    esi,esi
   14000549b:	lea    rcx,[rsp+0x68]
   1400054a0:	lea    rdx,[rip+0x12279]        # 0x140017720
   1400054a7:	mov    DWORD PTR [rsp+0x44],esi
   1400054ab:	mov    DWORD PTR [rsp+0x40],esi
   1400054af:	call   0x14000bf4c
   1400054b4:	xor    edx,edx
   1400054b6:	mov    DWORD PTR [rbp-0x48],esi
   1400054b9:	lea    r8d,[rsi+0x38]
   1400054bd:	mov    r12d,esi
   1400054c0:	lea    rcx,[rbp-0x44]
   1400054c4:	call   0x140014b26
   1400054c9:	lea    r8,[rsp+0x4c]
   1400054ce:	mov    DWORD PTR [rsp+0x4c],esi
   1400054d2:	lea    rdx,[rip+0x12f87]        # 0x140018460
   1400054d9:	lea    rcx,[rbp-0x78]
   1400054dd:	call   0x14000bf4c
   1400054e2:	xor    r9d,r9d
   1400054e5:	mov    DWORD PTR [rsp+0x48],0x1
   1400054ed:	lea    r8,[rsp+0x48]
   1400054f2:	xor    edx,edx
   1400054f4:	lea    ecx,[rsi+0x1b]
   1400054f7:	call   QWORD PTR [rip+0x10f43]        # 0x140016440
   1400054fd:	test   eax,eax
   1400054ff:	jne    0x140005551
   140005501:	call   QWORD PTR [rip+0x10d81]        # 0x140016288
   140005507:	movzx  r9d,ax
   14000550b:	or     r9d,0x80070000
   140005512:	test   eax,eax
   140005514:	cmovle r9d,eax
   140005518:	mov    DWORD PTR [rsp+0x4c],r9d
   14000551d:	mov    rcx,QWORD PTR [rip+0x18afc]        # 0x14001e020
   140005524:	lea    rax,[rip+0x18af5]        # 0x14001e020
   14000552b:	cmp    rcx,rax
   14000552e:	je     0x140005549
   140005530:	test   BYTE PTR [rcx+0x1c],0x4
   140005534:	je     0x140005549
   140005536:	mov    rcx,QWORD PTR [rcx+0x10]
   14000553a:	lea    edx,[rsi+0x19]
   14000553d:	lea    r8,[rip+0x12f5c]        # 0x1400184a0
   140005544:	call   0x140001228
   140005549:	mov    eax,esi
   14000554b:	mov    DWORD PTR [rsp+0x48],eax
   14000554f:	jmp    0x140005555
   140005551:	mov    eax,DWORD PTR [rsp+0x48]
   140005555:	mov    ecx,esi
   140005557:	test   eax,eax
   140005559:	sete   cl
   14000555c:	mov    DWORD PTR [rsp+0x50],ecx
   140005560:	lea    rcx,[rbp-0x78]
   140005564:	call   0x14000bf98
   140005569:	mov    rcx,QWORD PTR [rdi+0x48]
   14000556d:	lea    r8,[rsp+0x44]
   140005572:	lea    rdx,[rbp-0x58]
   140005576:	call   0x14000c6a4
   14000557b:	cmp    DWORD PTR [rsp+0x44],esi
   14000557f:	jl     0x1400059c6
   140005585:	mov    r13d,DWORD PTR [rbp-0x50]
   140005589:	lea    rcx,[rbp-0x8]
   14000558d:	sub    r13d,DWORD PTR [rbp-0x58]
   140005591:	xor    edx,edx
   140005593:	mov    DWORD PTR [rsp+0x4c],r13d
   140005598:	lea    r8d,[rdx+0x3c]
   14000559c:	call   0x140014b26
   1400055a1:	mov    rdx,QWORD PTR [rdi+0x48]
   1400055a5:	lea    r9,[rbp-0x8]
   1400055a9:	mov    r14d,0x3f9
   1400055af:	mov    r8d,r14d
   1400055b2:	call   0x1400029f8
   1400055b7:	mov    DWORD PTR [rsp+0x44],eax
   1400055bb:	test   eax,eax
   1400055bd:	js     0x1400059c6
   1400055c3:	mov    ebx,DWORD PTR [rbp-0x8]
   1400055c6:	lea    r8,[rsp+0x40]
   1400055cb:	mov    rcx,QWORD PTR [rdi+0x48]
   1400055cf:	mov    edx,r14d
   1400055d2:	mov    DWORD PTR [rsp+0x60],ebx
   1400055d6:	call   0x14000d6ec
   1400055db:	mov    rcx,rax
   1400055de:	test   rax,rax
   1400055e1:	je     0x14000560a
   1400055e3:	imul   eax,ebx,0x7
   1400055e6:	mov    r9d,r13d
   1400055e9:	xor    r8d,r8d
   1400055ec:	cdq    
   1400055ed:	sub    eax,edx
   1400055ef:	lea    rdx,[rsp+0x40]
   1400055f4:	mov    QWORD PTR [rsp+0x30],rdx
   1400055f9:	xor    edx,edx
   1400055fb:	sar    eax,1
   1400055fd:	mov    DWORD PTR [rsp+0x28],esi
   140005601:	mov    DWORD PTR [rsp+0x20],eax
   140005605:	call   0x14000d860
   14000560a:	mov    eax,DWORD PTR [rsp+0x44]
   14000560e:	test   eax,eax
   140005610:	mov    r14d,DWORD PTR [rsp+0x40]
   140005615:	mov    ecx,r14d
   140005618:	cmovne ecx,eax
   14000561b:	imul   eax,ebx,0x7
   14000561e:	mov    DWORD PTR [rsp+0x44],ecx
   140005622:	xor    r8d,r8d
   140005625:	mov    rcx,QWORD PTR [rdi+0x48]
   140005629:	mov    ebx,esi
   14000562b:	cdq    
   14000562c:	sub    eax,edx
   14000562e:	mov    edx,0x3e8
   140005633:	sar    eax,1
   140005635:	mov    r15d,eax
   140005638:	call   0x14000d6ec
   14000563d:	mov    QWORD PTR [rsp+0x58],rax
   140005642:	test   rax,rax
   140005645:	je     0x14000570d
   14000564b:	lea    r8,[rsp+0x40]
   140005650:	mov    rcx,rax
   140005653:	lea    rdx,[rbp-0x78]
   140005657:	call   0x14000c8e8
   14000565c:	mov    r14d,DWORD PTR [rsp+0x40]
   140005661:	xor    eax,eax
   140005663:	test   r14d,r14d
   140005666:	js     0x1400056fd
   14000566c:	mov    ebx,DWORD PTR [rbp-0x70]
   14000566f:	mov    esi,DWORD PTR [rbp-0x6c]
   140005672:	sub    ebx,DWORD PTR [rbp-0x78]
   140005675:	sub    esi,DWORD PTR [rbp-0x74]
   140005678:	cmp    ebx,esi
   14000567a:	je     0x1400056b7
   14000567c:	mov    rcx,QWORD PTR [rdi+0x80]
   140005683:	test   rcx,rcx
   140005686:	je     0x1400056b7
   140005688:	xorps  xmm0,xmm0
   14000568b:	lea    rdx,[rsp+0x78]
   140005690:	movdqu XMMWORD PTR [rsp+0x78],xmm0
   140005696:	call   0x1400111e0
   14000569b:	mov    eax,DWORD PTR [rbp-0x7c]
   14000569e:	sub    eax,DWORD PTR [rsp+0x7c]
   1400056a2:	mov    ebx,DWORD PTR [rbp-0x80]
   1400056a5:	cmp    esi,eax
   1400056a7:	cmovg  eax,esi
   1400056aa:	sub    ebx,DWORD PTR [rsp+0x78]
   1400056ae:	cmp    eax,ebx
   1400056b0:	mov    esi,eax
   1400056b2:	cmovg  ebx,eax
   1400056b5:	xor    eax,eax
   1400056b7:	mov    rcx,QWORD PTR [rsp+0x58]
   1400056bc:	sub    r13d,ebx
   1400056bf:	cmp    DWORD PTR [rsp+0x50],eax
   1400056c3:	mov    edx,r13d
   1400056c6:	mov    r9d,ebx
   1400056c9:	mov    r8d,r15d
   1400056cc:	cmovne edx,eax
   1400056cf:	lea    rax,[rsp+0x40]
   1400056d4:	mov    QWORD PTR [rsp+0x30],rax
   1400056d9:	mov    DWORD PTR [rsp+0x28],0x1
   1400056e1:	mov    DWORD PTR [rsp+0x20],esi
   1400056e5:	call   0x14000d860
   1400056ea:	mov    r14d,DWORD PTR [rsp+0x40]
   1400056ef:	test   r14d,r14d
   1400056f2:	js     0x1400056f8
   1400056f4:	lea    r12d,[r13-0xa]
   1400056f8:	mov    r13d,DWORD PTR [rsp+0x4c]
   1400056fd:	mov    eax,DWORD PTR [rsp+0x44]
   140005701:	mov    ecx,r14d
   140005704:	test   eax,eax
   140005706:	cmovne ecx,eax
   140005709:	mov    DWORD PTR [rsp+0x44],ecx
   14000570d:	mov    rcx,QWORD PTR [rdi+0x48]
   140005711:	mov    edx,0x402
   140005716:	call   QWORD PTR [rip+0x10bd4]        # 0x1400162f0
   14000571c:	xor    ecx,ecx
   14000571e:	test   rax,rax
   140005721:	je     0x140005758
   140005723:	mov    edx,r13d
   140005726:	mov    r9d,ebx
   140005729:	sub    edx,ebx
   14000572b:	mov    r8d,r15d
   14000572e:	cmp    DWORD PTR [rsp+0x50],ecx
   140005732:	cmovne edx,ecx
   140005735:	lea    rcx,[rsp+0x40]
   14000573a:	mov    QWORD PTR [rsp+0x30],rcx
   14000573f:	mov    rcx,rax
   140005742:	mov    DWORD PTR [rsp+0x28],0x1
   14000574a:	mov    DWORD PTR [rsp+0x20],esi
   14000574e:	call   0x14000d860
   140005753:	mov    r14d,DWORD PTR [rsp+0x40]
   140005758:	test   r14d,r14d
   14000575b:	jns    0x140005769
   14000575d:	mov    eax,r13d
   140005760:	cdq    
   140005761:	sub    eax,edx
   140005763:	sar    eax,1
   140005765:	lea    r12d,[rax-0xa]
   140005769:	mov    rcx,QWORD PTR [rdi+0x48]
   14000576d:	lea    r8,[rsp+0x40]
   140005772:	mov    r14d,0x3f7
   140005778:	mov    edx,r14d
   14000577b:	call   0x14000d6ec
   140005780:	mov    edx,DWORD PTR [rsp+0x40]
   140005784:	xor    r13d,r13d
   140005787:	mov    rsi,rax
   14000578a:	test   edx,edx
   14000578c:	js     0x1400057eb
   14000578e:	mov    rdx,QWORD PTR [rdi+0x48]
   140005792:	lea    r9,[rbp-0x48]
   140005796:	mov    r8d,r14d
   140005799:	call   0x1400029f8
   14000579e:	mov    DWORD PTR [rsp+0x40],eax
   1400057a2:	mov    edx,eax
   1400057a4:	test   eax,eax
   1400057a6:	js     0x1400057eb
   1400057a8:	mov    ecx,DWORD PTR [rbp-0x48]
   1400057ab:	mov    eax,DWORD PTR [rsp+0x50]
   1400057af:	neg    eax
   1400057b1:	lea    rax,[rsp+0x40]
   1400057b6:	lea    r9d,[rcx+rcx*1]
   1400057ba:	mov    QWORD PTR [rsp+0x30],rax
   1400057bf:	lea    r8d,[rbx+rcx*1]
   1400057c3:	mov    DWORD PTR [rsp+0x28],r13d
   1400057c8:	sbb    edx,edx
   1400057ca:	mov    DWORD PTR [rsp+0x20],r9d
   1400057cf:	and    edx,r8d
   1400057d2:	mov    r9d,r12d
   1400057d5:	mov    r8d,r15d
   1400057d8:	mov    rcx,rsi
   1400057db:	call   0x14000d860
   1400057e0:	mov    eax,DWORD PTR [rbp-0x48]
   1400057e3:	mov    edx,DWORD PTR [rsp+0x40]
   1400057e7:	lea    r15d,[r15+rax*2]
   1400057eb:	mov    eax,DWORD PTR [rsp+0x44]
   1400057ef:	mov    ecx,edx
   1400057f1:	test   eax,eax
   1400057f3:	cmovne ecx,eax
   1400057f6:	mov    DWORD PTR [rsp+0x44],ecx
   1400057fa:	test   edx,edx
   1400057fc:	js     0x1400059c6
   140005802:	mov    esi,0x14
   140005807:	mov    r8d,r13d
   14000580a:	mov    DWORD PTR [rsp+0x48],r13d
   14000580f:	cmp    DWORD PTR [rdi+0x78],r13d
   140005813:	jne    0x14000581a
   140005815:	mov    esi,r13d
   140005818:	jmp    0x14000588f
   14000581a:	mov    rcx,QWORD PTR [rdi+0x50]
   14000581e:	mov    QWORD PTR [rsp+0x58],r13
   140005823:	call   0x140001a3c
   140005828:	lea    r8,[rsp+0x58]
   14000582d:	mov    edx,0x95
   140005832:	mov    rcx,rax
   140005835:	call   0x14000b100
   14000583a:	mov    DWORD PTR [rsp+0x40],eax
   14000583e:	test   eax,eax
   140005840:	js     0x14000588c
   140005842:	mov    rcx,QWORD PTR [rsp+0x58]
   140005847:	lea    r9,[rsp+0x40]
   14000584c:	lea    r8,[rbp-0x78]
   140005850:	mov    edx,0x20
   140005855:	call   0x14000c23c
   14000585a:	cmp    DWORD PTR [rsp+0x40],r13d
   14000585f:	jl     0x140005879
   140005861:	cmp    DWORD PTR [rbp-0x74],esi
   140005864:	mov    r14d,r13d
   140005867:	mov    eax,DWORD PTR [rbp-0x70]
   14000586a:	cmovg  esi,DWORD PTR [rbp-0x74]
   14000586e:	test   eax,eax
   140005870:	cmovg  r14d,eax
   140005874:	mov    DWORD PTR [rsp+0x48],r14d
   140005879:	mov    rcx,QWORD PTR [rsp+0x58]
   14000587e:	xor    edx,edx
   140005880:	call   0x14000c0d8
   140005885:	mov    r8d,DWORD PTR [rsp+0x48]
   14000588a:	jmp    0x14000588f
   14000588c:	mov    r8d,r13d
   14000588f:	mov    r10d,DWORD PTR [rsp+0x60]
   140005894:	mov    eax,r10d
   140005897:	mov    r9d,DWORD PTR [rsp+0x50]
   14000589c:	cdq    
   14000589d:	sub    eax,edx
   14000589f:	sar    eax,1
   1400058a1:	mov    r14d,eax
   1400058a4:	test   r9d,r9d
   1400058a7:	je     0x1400058b1
   1400058a9:	mov    edx,DWORD PTR [rbp-0x48]
   1400058ac:	add    edx,ebx
   1400058ae:	add    r14d,edx
   1400058b1:	lea    eax,[r10+r10*4]
   1400058b5:	cdq    
   1400058b6:	sub    eax,edx
   1400058b8:	sar    eax,1
   1400058ba:	cmp    r8d,eax
   1400058bd:	mov    r13d,eax
   1400058c0:	lea    rax,[rip+0xffffffffffffa739]        # 0x140000000
   1400058c7:	cmovg  r13d,r8d
   1400058cb:	xor    edx,edx
   1400058cd:	test   r9d,r9d
   1400058d0:	mov    ebx,edx
   1400058d2:	cmovne r12d,DWORD PTR [rsp+0x4c]
   1400058d8:	sub    r12d,r14d
   1400058db:	sub    r12d,esi
   1400058de:	mov    edx,DWORD PTR [rbx+rax*1+0x17828]
   1400058e5:	lea    r8,[rsp+0x40]
   1400058ea:	mov    rcx,QWORD PTR [rdi+0x48]
   1400058ee:	call   0x14000d6ec
   1400058f3:	mov    ecx,DWORD PTR [rsp+0x44]
   1400058f7:	xor    r8d,r8d
   1400058fa:	mov    edx,DWORD PTR [rsp+0x40]
   1400058fe:	test   ecx,ecx
   140005900:	cmovne edx,ecx
   140005903:	mov    DWORD PTR [rsp+0x44],edx
   140005907:	test   rax,rax
   14000590a:	je     0x140005942
   14000590c:	lea    rcx,[rsp+0x40]
   140005911:	mov    r9d,esi
   140005914:	mov    QWORD PTR [rsp+0x30],rcx
   140005919:	mov    edx,r14d
   14000591c:	mov    DWORD PTR [rsp+0x28],r8d
   140005921:	mov    rcx,rax
   140005924:	mov    r8d,r15d
   140005927:	mov    DWORD PTR [rsp+0x20],r13d
   14000592c:	call   0x14000d860
   140005931:	mov    eax,DWORD PTR [rsp+0x44]
   140005935:	test   eax,eax
   140005937:	mov    ecx,DWORD PTR [rsp+0x40]
   14000593b:	cmovne ecx,eax
   14000593e:	mov    DWORD PTR [rsp+0x44],ecx
   140005942:	mov    rcx,QWORD PTR [rdi+0x48]
   140005946:	lea    rax,[rip+0xffffffffffffa6b3]        # 0x140000000
   14000594d:	mov    edx,DWORD PTR [rbx+rax*1+0x17818]
   140005954:	lea    r8,[rsp+0x40]
   140005959:	call   0x14000d6ec
   14000595e:	mov    ecx,DWORD PTR [rsp+0x44]
   140005962:	xor    r8d,r8d
   140005965:	mov    edx,DWORD PTR [rsp+0x40]
   140005969:	test   ecx,ecx
   14000596b:	cmovne edx,ecx
   14000596e:	mov    DWORD PTR [rsp+0x44],edx
   140005972:	test   rax,rax
   140005975:	je     0x1400059ae
   140005977:	lea    rcx,[rsp+0x40]
   14000597c:	mov    r9d,r12d
   14000597f:	mov    QWORD PTR [rsp+0x30],rcx
   140005984:	lea    edx,[r14+rsi*1]
   140005988:	mov    DWORD PTR [rsp+0x28],r8d
   14000598d:	mov    rcx,rax
   140005990:	mov    r8d,r15d
   140005993:	mov    DWORD PTR [rsp+0x20],r13d
   140005998:	call   0x14000d860
   14000599d:	mov    eax,DWORD PTR [rsp+0x44]
   1400059a1:	test   eax,eax
   1400059a3:	mov    ecx,DWORD PTR [rsp+0x40]
   1400059a7:	cmovne ecx,eax
   1400059aa:	mov    DWORD PTR [rsp+0x44],ecx
   1400059ae:	add    r15d,r13d
   1400059b1:	lea    rax,[rip+0xffffffffffffa648]        # 0x140000000
   1400059b8:	add    rbx,0x4
   1400059bc:	cmp    rbx,0xc
   1400059c0:	jl     0x1400058de
   1400059c6:	lea    rcx,[rsp+0x68]
   1400059cb:	call   0x14000bf98
   1400059d0:	mov    rcx,QWORD PTR [rbp+0x38]
   1400059d4:	xor    rcx,rsp
   1400059d7:	call   0x1400146a0
   1400059dc:	lea    r11,[rsp+0x140]
   1400059e4:	mov    rbx,QWORD PTR [r11+0x38]
   1400059e8:	mov    rsi,QWORD PTR [r11+0x40]
   1400059ec:	mov    rdi,QWORD PTR [r11+0x48]
   1400059f0:	mov    rsp,r11
   1400059f3:	pop    r15
   1400059f5:	pop    r14
   1400059f7:	pop    r13
   1400059f9:	pop    r12
   1400059fb:	pop    rbp
   1400059fc:	ret    
   1400059fd:	int3   
   1400059fe:	int3   
   1400059ff:	int3   
   140005a00:	int3   
   140005a01:	int3   
   140005a02:	int3   
   140005a03:	int3   
   140005a04:	int3   
   140005a05:	int3   
   140005a06:	int3   
   140005a07:	int3   
   140005a08:	int3   
   140005a09:	int3   
   140005a0a:	int3   
   140005a0b:	int3   
   140005a0c:	int3   
   140005a0d:	int3   
   140005a0e:	int3   
   140005a0f:	int3   
   140005a10:	rex push rbx
   140005a12:	sub    rsp,0x30
   140005a16:	mov    rbx,rcx
   140005a19:	lea    rdx,[rip+0x11d28]        # 0x140017748
   140005a20:	lea    rcx,[rsp+0x20]
   140005a25:	xor    r8d,r8d
   140005a28:	call   0x14000bf4c
   140005a2d:	mov    rcx,rbx
   140005a30:	call   0x140005460
   140005a35:	lea    rcx,[rsp+0x20]
   140005a3a:	call   0x14000bf98
   140005a3f:	xor    eax,eax
   140005a41:	add    rsp,0x30
   140005a45:	pop    rbx
   140005a46:	ret    
   140005a47:	int3   
   140005a48:	int3   
   140005a49:	int3   
   140005a4a:	int3   
   140005a4b:	int3   
   140005a4c:	int3   
   140005a4d:	int3   
   140005a4e:	int3   
   140005a4f:	int3   
   140005a50:	mov    rax,rsp
   140005a53:	push   rdi
   140005a54:	sub    rsp,0x40
   140005a58:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140005a60:	mov    QWORD PTR [rax+0x10],rbx
   140005a64:	mov    ebx,edx
   140005a66:	mov    rdi,rcx
   140005a69:	and    DWORD PTR [rax+0x8],0x0
   140005a6d:	lea    r8,[rax+0x8]
   140005a71:	lea    rdx,[rip+0x11cf0]        # 0x140017768
   140005a78:	lea    rcx,[rax-0x20]
   140005a7c:	call   0x14000bf4c
   140005a81:	nop
   140005a82:	mov    edx,ebx
   140005a84:	mov    rcx,rdi
   140005a87:	call   0x140005acc
   140005a8c:	mov    DWORD PTR [rsp+0x50],eax
   140005a90:	call   0x140011f4c
   140005a95:	lea    rdx,[rdi+0x88]
   140005a9c:	mov    r8d,eax
   140005a9f:	mov    rcx,QWORD PTR [rdi+0x80]
   140005aa6:	call   0x1400101d0
   140005aab:	mov    DWORD PTR [rsp+0x50],eax
   140005aaf:	lea    rcx,[rsp+0x28]
   140005ab4:	call   0x14000bf98
   140005ab9:	mov    rbx,QWORD PTR [rsp+0x58]
   140005abe:	add    rsp,0x40
   140005ac2:	pop    rdi
   140005ac3:	ret    
   140005ac4:	int3   
   140005ac5:	int3   
   140005ac6:	int3   
   140005ac7:	int3   
   140005ac8:	int3   
   140005ac9:	int3   
   140005aca:	int3   
   140005acb:	int3   
   140005acc:	mov    rax,rsp
   140005acf:	push   rdi
   140005ad0:	sub    rsp,0x40
   140005ad4:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140005adc:	mov    QWORD PTR [rax+0x8],rbx
   140005ae0:	mov    ebx,edx
   140005ae2:	mov    rdi,rcx
   140005ae5:	and    DWORD PTR [rax+0x10],0x0
   140005ae9:	lea    r8,[rax+0x10]
   140005aed:	lea    rdx,[rip+0x11ca4]        # 0x140017798
   140005af4:	lea    rcx,[rax-0x20]
   140005af8:	call   0x14000bf4c
   140005afd:	nop
   140005afe:	test   ebx,ebx
   140005b00:	je     0x140005b4e
   140005b02:	sub    ebx,0x1
   140005b05:	je     0x140005b2a
   140005b07:	sub    ebx,0x1
   140005b0a:	je     0x140005b1c
   140005b0c:	cmp    ebx,0x1
   140005b0f:	je     0x140005b4e
   140005b11:	mov    ebx,0x80004001
   140005b16:	mov    DWORD PTR [rsp+0x58],ebx
   140005b1a:	jmp    0x140005b7c
   140005b1c:	lea    rcx,[rdi+0x88]
   140005b23:	call   0x14000e99c
   140005b28:	jmp    0x140005b76
   140005b2a:	lea    rcx,[rdi+0x88]
   140005b31:	call   0x14000f1c4
   140005b36:	mov    ebx,eax
   140005b38:	mov    DWORD PTR [rsp+0x58],eax
   140005b3c:	test   eax,eax
   140005b3e:	js     0x140005b7c
   140005b40:	lea    rcx,[rdi+0x88]
   140005b47:	call   0x14000f304
   140005b4c:	jmp    0x140005b76
   140005b4e:	xor    edx,edx
   140005b50:	lea    r8d,[rdx+0x1]
   140005b54:	lea    rcx,[rdi+0x88]
   140005b5b:	call   0x14000f448
   140005b60:	mov    ebx,eax
   140005b62:	mov    DWORD PTR [rsp+0x58],eax
   140005b66:	test   eax,eax
   140005b68:	js     0x140005b7c
   140005b6a:	lea    rcx,[rdi+0x88]
   140005b71:	call   0x14000f1c4
   140005b76:	mov    ebx,eax
   140005b78:	mov    DWORD PTR [rsp+0x58],eax
   140005b7c:	lea    rcx,[rsp+0x28]
   140005b81:	call   0x14000bf98
   140005b86:	mov    eax,ebx
   140005b88:	mov    rbx,QWORD PTR [rsp+0x50]
   140005b8d:	add    rsp,0x40
   140005b91:	pop    rdi
   140005b92:	ret    
   140005b93:	int3   
   140005b94:	int3   
   140005b95:	int3   
   140005b96:	int3   
   140005b97:	int3   
   140005b98:	int3   
   140005b99:	int3   
   140005b9a:	int3   
   140005b9b:	int3   
   140005b9c:	int3   
   140005b9d:	int3   
   140005b9e:	int3   
   140005b9f:	int3   
   140005ba0:	mov    rax,rsp
   140005ba3:	push   rdi
   140005ba4:	sub    rsp,0x40
   140005ba8:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140005bb0:	mov    QWORD PTR [rax+0x10],rbx
   140005bb4:	mov    rdi,rcx
   140005bb7:	and    DWORD PTR [rax+0x8],0x0
   140005bbb:	lea    r8,[rax+0x8]
   140005bbf:	lea    rdx,[rip+0x11bfa]        # 0x1400177c0
   140005bc6:	lea    rcx,[rax-0x20]
   140005bca:	call   0x14000bf4c
   140005bcf:	nop
   140005bd0:	and    DWORD PTR [rsp+0x68],0x0
   140005bd5:	mov    ebx,DWORD PTR [rdi+0x318]
   140005bdb:	mov    r9d,0x2
   140005be1:	lea    r8,[rsp+0x68]
   140005be6:	mov    edx,0x2000000d
   140005beb:	xor    ecx,ecx
   140005bed:	call   QWORD PTR [rip+0x1068d]        # 0x140016280
   140005bf3:	xor    eax,eax
   140005bf5:	cmp    DWORD PTR [rsp+0x68],eax
   140005bf9:	sete   al
   140005bfc:	mov    DWORD PTR [rdi+0x318],eax
   140005c02:	cmp    eax,ebx
   140005c04:	je     0x140005c1b
   140005c06:	mov    rcx,rdi
   140005c09:	cmp    DWORD PTR [rdi+0x78],0x0
   140005c0d:	jne    0x140005c16
   140005c0f:	call   0x140003fc0
   140005c14:	jmp    0x140005c1b
   140005c16:	call   0x140004338
   140005c1b:	mov    rcx,rdi
   140005c1e:	call   0x140002b70
   140005c23:	mov    rcx,rdi
   140005c26:	call   0x140005c64
   140005c2b:	mov    DWORD PTR [rsp+0x50],eax
   140005c2f:	xor    edx,edx
   140005c31:	lea    r8d,[rdx+0x1]
   140005c35:	mov    rcx,QWORD PTR [rdi+0x48]
   140005c39:	call   QWORD PTR [rip+0x10771]        # 0x1400163b0
   140005c3f:	movsxd rbx,DWORD PTR [rsp+0x50]
   140005c44:	lea    rcx,[rsp+0x28]
   140005c49:	call   0x14000bf98
   140005c4e:	mov    rax,rbx
   140005c51:	mov    rbx,QWORD PTR [rsp+0x58]
   140005c56:	add    rsp,0x40
   140005c5a:	pop    rdi
   140005c5b:	ret    
   140005c5c:	int3   
   140005c5d:	int3   
   140005c5e:	int3   
   140005c5f:	int3   
   140005c60:	int3   
   140005c61:	int3   
   140005c62:	int3   
   140005c63:	int3   
   140005c64:	rex push rbp
   140005c66:	push   rdi
   140005c67:	push   r13
   140005c69:	push   r14
   140005c6b:	push   r15
   140005c6d:	lea    rbp,[rsp-0x10f0]
   140005c75:	mov    eax,0x11f0
   140005c7a:	call   0x140015130
   140005c7f:	sub    rsp,rax
   140005c82:	mov    QWORD PTR [rbp+0x0],0xfffffffffffffffe
   140005c8a:	mov    QWORD PTR [rsp+0x1228],rbx
   140005c92:	mov    QWORD PTR [rsp+0x1230],rsi
   140005c9a:	movaps XMMWORD PTR [rsp+0x11e0],xmm6
   140005ca2:	movaps XMMWORD PTR [rsp+0x11d0],xmm7
   140005caa:	mov    rax,QWORD PTR [rip+0x1835f]        # 0x14001e010
   140005cb1:	xor    rax,rsp
   140005cb4:	mov    QWORD PTR [rbp+0x10c0],rax
   140005cbb:	mov    rdi,rcx
   140005cbe:	xor    r15d,r15d
   140005cc1:	mov    DWORD PTR [rsp+0x40],r15d
   140005cc6:	lea    r8,[rsp+0x40]
   140005ccb:	lea    rdx,[rip+0x11b1e]        # 0x1400177f0
   140005cd2:	lea    rcx,[rbp+0x10]
   140005cd6:	call   0x14000bf4c
   140005cdb:	nop
   140005cdc:	mov    rcx,QWORD PTR [rdi+0x108]
   140005ce3:	test   rcx,rcx
   140005ce6:	je     0x140005cf6
   140005ce8:	xor    edx,edx
   140005cea:	call   0x14000c0d8
   140005cef:	mov    QWORD PTR [rdi+0x108],r15
   140005cf6:	mov    r14d,0x2
   140005cfc:	mov    edx,r14d
   140005cff:	mov    rcx,rdi
   140005d02:	call   0x140002e5c
   140005d07:	mov    rbx,rax
   140005d0a:	lea    esi,[r14+0x5a]
   140005d0e:	mov    r8d,esi
   140005d11:	xor    edx,edx
   140005d13:	lea    rcx,[rbp+0x60]
   140005d17:	call   0x140014b26
   140005d1c:	lea    r9,[rsp+0x40]
   140005d21:	lea    r8,[rbp+0x60]
   140005d25:	mov    edx,esi
   140005d27:	mov    rcx,rbx
   140005d2a:	call   0x14000c23c
   140005d2f:	mov    ebx,DWORD PTR [rsp+0x40]
   140005d33:	test   ebx,ebx
   140005d35:	js     0x140006192
   140005d3b:	lea    rdx,[rsp+0x40]
   140005d40:	lea    rcx,[rbp+0x60]
   140005d44:	call   0x14000d4b0
   140005d49:	mov    QWORD PTR [rdi+0x108],rax
   140005d50:	mov    ebx,DWORD PTR [rsp+0x40]
   140005d54:	test   ebx,ebx
   140005d56:	js     0x140006192
   140005d5c:	mov    r8,rax
   140005d5f:	mov    edx,0x3f9
   140005d64:	mov    rcx,rdi
   140005d67:	call   0x140001e28
   140005d6c:	mov    r8,QWORD PTR [rdi+0x108]
   140005d73:	mov    edx,0x3f3
   140005d78:	mov    rcx,rdi
   140005d7b:	call   0x140001e28
   140005d80:	mov    r8,QWORD PTR [rdi+0x108]
   140005d87:	mov    edx,0x3f4
   140005d8c:	mov    rcx,rdi
   140005d8f:	call   0x140001e28
   140005d94:	mov    r8,QWORD PTR [rdi+0x108]
   140005d9b:	mov    edx,0x3f5
   140005da0:	mov    rcx,rdi
   140005da3:	call   0x140001e28
   140005da8:	mov    r8,QWORD PTR [rdi+0x108]
   140005daf:	mov    edx,0x3f7
   140005db4:	mov    rcx,rdi
   140005db7:	call   0x140001e28
   140005dbc:	mov    r8,QWORD PTR [rdi+0x108]
   140005dc3:	mov    edx,0x402
   140005dc8:	mov    rcx,rdi
   140005dcb:	call   0x140001e28
   140005dd0:	mov    QWORD PTR [rsp+0x50],r15
   140005dd5:	mov    QWORD PTR [rsp+0x58],r15
   140005dda:	mov    QWORD PTR [rsp+0x60],r15
   140005ddf:	mov    QWORD PTR [rsp+0x6c],0x4e1
   140005de8:	mov    QWORD PTR [rsp+0x78],r15
   140005ded:	xorps  xmm0,xmm0
   140005df0:	movdqa XMMWORD PTR [rbp-0x80],xmm0
   140005df5:	mov    QWORD PTR [rbp-0x70],r15
   140005df9:	mov    QWORD PTR [rbp-0x64],r15
   140005dfd:	mov    DWORD PTR [rbp-0x5c],r15d
   140005e01:	mov    QWORD PTR [rbp-0x58],r15
   140005e05:	mov    QWORD PTR [rbp-0x50],r15
   140005e09:	mov    DWORD PTR [rbp-0x48],r15d
   140005e0d:	mov    DWORD PTR [rbp-0x68],r15d
   140005e11:	lea    rdx,[rsp+0x50]
   140005e16:	mov    rcx,rdi
   140005e19:	call   0x140002890
   140005e1e:	mov    DWORD PTR [rsp+0x40],eax
   140005e22:	lea    r13,[rip+0x181f7]        # 0x14001e020
   140005e29:	test   eax,eax
   140005e2b:	js     0x140006089
   140005e31:	cmp    DWORD PTR [rdi+0x78],r15d
   140005e35:	jne    0x140005edd
   140005e3b:	mov    rcx,QWORD PTR [rdi+0x50]
   140005e3f:	call   0x140001a3c
   140005e44:	mov    rcx,rax
   140005e47:	lea    rax,[rsp+0x40]
   140005e4c:	mov    QWORD PTR [rsp+0x30],rax
   140005e51:	lea    edx,[rsi+0x4b]
   140005e54:	call   0x14000cd70
   140005e59:	mov    rsi,rax
   140005e5c:	mov    r9d,DWORD PTR [rsp+0x40]
   140005e61:	test   r9d,r9d
   140005e64:	js     0x140005eb4
   140005e66:	lea    rdx,[rsp+0x40]
   140005e6b:	xor    ecx,ecx
   140005e6d:	call   0x14000c188
   140005e72:	mov    rbx,rax
   140005e75:	cmp    DWORD PTR [rsp+0x40],r15d
   140005e7a:	jl     0x140005ee2
   140005e7c:	mov    r9d,DWORD PTR [rbp-0x5c]
   140005e80:	mov    r8d,0xffffff
   140005e86:	mov    rdx,rsi
   140005e89:	mov    rcx,rax
   140005e8c:	call   0x14000dce4
   140005e91:	mov    DWORD PTR [rsp+0x40],eax
   140005e95:	mov    rcx,QWORD PTR [rsp+0x78]
   140005e9a:	test   eax,eax
   140005e9c:	cmovns rcx,rsi
   140005ea0:	mov    QWORD PTR [rsp+0x78],rcx
   140005ea5:	xor    r8d,r8d
   140005ea8:	mov    rdx,rbx
   140005eab:	xor    ecx,ecx
   140005ead:	call   0x14000c314
   140005eb2:	jmp    0x140005ee2
   140005eb4:	mov    rcx,QWORD PTR [rip+0x18165]        # 0x14001e020
   140005ebb:	cmp    rcx,r13
   140005ebe:	je     0x140005ee2
   140005ec0:	test   BYTE PTR [rcx+0x1c],0x4
   140005ec4:	je     0x140005ee2
   140005ec6:	mov    edx,0x1a
   140005ecb:	lea    r8,[rip+0x11966]        # 0x140017838
   140005ed2:	mov    rcx,QWORD PTR [rcx+0x10]
   140005ed6:	call   0x140001228
   140005edb:	jmp    0x140005ee2
   140005edd:	mov    QWORD PTR [rsp+0x78],r15
   140005ee2:	mov    rbx,QWORD PTR [rdi+0x80]
   140005ee9:	test   rbx,rbx
   140005eec:	je     0x140005f05
   140005eee:	mov    rcx,rbx
   140005ef1:	call   0x14000f8d8
   140005ef6:	mov    rcx,rbx
   140005ef9:	call   0x140014254
   140005efe:	mov    QWORD PTR [rdi+0x80],r15
   140005f05:	mov    ecx,0x5c8
   140005f0a:	call   0x14001426c
   140005f0f:	mov    QWORD PTR [rbp+0x8],rax
   140005f13:	test   rax,rax
   140005f16:	je     0x140005f27
   140005f18:	lea    rdx,[rsp+0x50]
   140005f1d:	mov    rcx,rax
   140005f20:	call   0x14000f61c
   140005f25:	jmp    0x140005f2a
   140005f27:	mov    rax,r15
   140005f2a:	mov    QWORD PTR [rdi+0x80],rax
   140005f31:	test   rax,rax
   140005f34:	jne    0x140005f76
   140005f36:	mov    DWORD PTR [rsp+0x40],0x8007000e
   140005f3e:	mov    rcx,QWORD PTR [rip+0x180db]        # 0x14001e020
   140005f45:	cmp    rcx,r13
   140005f48:	je     0x140006089
   140005f4e:	test   BYTE PTR [rcx+0x1c],0x4
   140005f52:	je     0x140006089
   140005f58:	lea    edx,[rax+0x1b]
   140005f5b:	mov    r9d,0x8007000e
   140005f61:	lea    r8,[rip+0x118d0]        # 0x140017838
   140005f68:	mov    rcx,QWORD PTR [rcx+0x10]
   140005f6c:	call   0x140001228
   140005f71:	jmp    0x140006089
   140005f76:	mov    rcx,QWORD PTR [rdi+0x50]
   140005f7a:	call   0x140001a78
   140005f7f:	mov    edx,eax
   140005f81:	mov    rcx,rdi
   140005f84:	call   0x140005acc
   140005f89:	mov    DWORD PTR [rsp+0x40],eax
   140005f8d:	test   eax,eax
   140005f8f:	js     0x140006089
   140005f95:	call   0x140011f4c
   140005f9a:	lea    rdx,[rdi+0x88]
   140005fa1:	mov    r8d,eax
   140005fa4:	mov    rcx,QWORD PTR [rdi+0x80]
   140005fab:	call   0x1400101d0
   140005fb0:	mov    DWORD PTR [rsp+0x40],eax
   140005fb4:	test   eax,eax
   140005fb6:	js     0x140006043
   140005fbc:	mov    DWORD PTR [rdi+0x100],r15d
   140005fc3:	mov    DWORD PTR [rbp-0x40],0x2a3
   140005fca:	mov    eax,DWORD PTR [rbp-0x3c]
   140005fcd:	and    eax,0xfffffffe
   140005fd0:	or     eax,0xa
   140005fd3:	mov    DWORD PTR [rbp-0x3c],eax
   140005fd6:	mov    DWORD PTR [rbp-0x8],r14d
   140005fda:	mov    ebx,r15d
   140005fdd:	mov    esi,0x1
   140005fe2:	movaps xmm6,XMMWORD PTR [rbp-0x10]
   140005fe6:	movaps xmm7,XMMWORD PTR [rbp-0x40]
   140005fea:	test   ebx,ebx
   140005fec:	je     0x140006008
   140005fee:	jle    0x140006012
   140005ff0:	cmp    ebx,0x3
   140005ff3:	jle    0x140005ffc
   140005ff5:	cmp    ebx,0x7
   140005ff8:	jle    0x140006008
   140005ffa:	jmp    0x140006012
   140005ffc:	mov    DWORD PTR [rbp-0x28],esi
   140005fff:	mov    DWORD PTR [rbp-0x20],0x9
   140006006:	jmp    0x140006012
   140006008:	mov    DWORD PTR [rbp-0x28],0x3
   14000600f:	mov    DWORD PTR [rbp-0x20],esi
   140006012:	movaps XMMWORD PTR [rbp+0x20],xmm7
   140006016:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14000601a:	movaps XMMWORD PTR [rbp+0x30],xmm0
   14000601e:	movaps xmm1,XMMWORD PTR [rbp-0x20]
   140006022:	movaps XMMWORD PTR [rbp+0x40],xmm1
   140006026:	movaps XMMWORD PTR [rbp+0x50],xmm6
   14000602a:	lea    r8,[rbp+0x20]
   14000602e:	mov    edx,ebx
   140006030:	mov    rcx,QWORD PTR [rdi+0x80]
   140006037:	call   0x14000fe20
   14000603c:	add    ebx,esi
   14000603e:	cmp    ebx,0x8
   140006041:	jl     0x140005fea
   140006043:	xor    r8d,r8d
   140006046:	mov    edx,0x3e8
   14000604b:	mov    rcx,QWORD PTR [rdi+0x48]
   14000604f:	call   0x14000d6ec
   140006054:	mov    rsi,rax
   140006057:	lea    rdx,[rsp+0x40]
   14000605c:	mov    rcx,rax
   14000605f:	call   0x14000c188
   140006064:	mov    rbx,rax
   140006067:	mov    rdx,rax
   14000606a:	mov    rcx,QWORD PTR [rdi+0x80]
   140006071:	call   0x140011348
   140006076:	test   rbx,rbx
   140006079:	je     0x140006089
   14000607b:	xor    r8d,r8d
   14000607e:	mov    rdx,rbx
   140006081:	mov    rcx,rsi
   140006084:	call   0x14000c314
   140006089:	mov    rcx,rdi
   14000608c:	call   0x140005460
   140006091:	nop
   140006092:	lea    rcx,[rsp+0x50]
   140006097:	call   0x1400122dc
   14000609c:	mov    ebx,DWORD PTR [rsp+0x40]
   1400060a0:	test   ebx,ebx
   1400060a2:	js     0x140006192
   1400060a8:	mov    WORD PTR [rbp+0xc0],r15w
   1400060b0:	xor    edx,edx
   1400060b2:	mov    r8d,0xffe
   1400060b8:	lea    rcx,[rbp+0xc2]
   1400060bf:	call   0x140014b26
   1400060c4:	mov    rcx,QWORD PTR [rdi+0x50]
   1400060c8:	call   0x140001a3c
   1400060cd:	mov    rcx,rax
   1400060d0:	lea    rax,[rsp+0x40]
   1400060d5:	mov    QWORD PTR [rsp+0x20],rax
   1400060da:	mov    r14d,0x800
   1400060e0:	mov    r9d,r14d
   1400060e3:	lea    r8,[rbp+0xc0]
   1400060ea:	mov    edx,0x92
   1400060ef:	call   0x14000ce44
   1400060f4:	movsxd rsi,eax
   1400060f7:	mov    ebx,DWORD PTR [rsp+0x40]
   1400060fb:	test   ebx,ebx
   1400060fd:	js     0x140006192
   140006103:	sub    r14,rsi
   140006106:	lea    rcx,[rbp+0xc0]
   14000610d:	lea    rcx,[rcx+rsi*2]
   140006111:	lea    r8,[rip+0x116fc]        # 0x140017814
   140006118:	mov    rdx,r14
   14000611b:	call   0x1400061d8
   140006120:	mov    ebx,eax
   140006122:	mov    DWORD PTR [rsp+0x40],eax
   140006126:	test   eax,eax
   140006128:	js     0x140006164
   14000612a:	mov    r8d,0x7ff
   140006130:	sub    r8d,esi
   140006133:	lea    rdx,[rbp+0xc2]
   14000613a:	lea    rdx,[rdx+rsi*2]
   14000613e:	xor    r9d,r9d
   140006141:	mov    rcx,QWORD PTR [rdi+0x80]
   140006148:	call   0x1400120a0
   14000614d:	lea    r8,[rbp+0xc0]
   140006154:	mov    edx,0x3e8
   140006159:	mov    rcx,QWORD PTR [rdi+0x48]
   14000615d:	call   0x14000d7ac
   140006162:	jmp    0x14000618e
   140006164:	mov    rcx,QWORD PTR [rip+0x17eb5]        # 0x14001e020
   14000616b:	cmp    rcx,r13
   14000616e:	je     0x140006192
   140006170:	test   BYTE PTR [rcx+0x1c],0x4
   140006174:	je     0x140006192
   140006176:	mov    edx,0x1c
   14000617b:	mov    r9d,eax
   14000617e:	lea    r8,[rip+0x116b3]        # 0x140017838
   140006185:	mov    rcx,QWORD PTR [rcx+0x10]
   140006189:	call   0x140001228
   14000618e:	mov    ebx,DWORD PTR [rsp+0x40]
   140006192:	lea    rcx,[rbp+0x10]
   140006196:	call   0x14000bf98
   14000619b:	mov    eax,ebx
   14000619d:	mov    rcx,QWORD PTR [rbp+0x10c0]
   1400061a4:	xor    rcx,rsp
   1400061a7:	call   0x1400146a0
   1400061ac:	lea    r11,[rsp+0x11f0]
   1400061b4:	mov    rbx,QWORD PTR [r11+0x38]
   1400061b8:	mov    rsi,QWORD PTR [r11+0x40]
   1400061bc:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400061c1:	movaps xmm7,XMMWORD PTR [r11-0x20]
   1400061c6:	mov    rsp,r11
   1400061c9:	pop    r15
   1400061cb:	pop    r14
   1400061cd:	pop    r13
   1400061cf:	pop    rdi
   1400061d0:	pop    rbp
   1400061d1:	ret    
   1400061d2:	int3   
   1400061d3:	int3   
   1400061d4:	int3   
   1400061d5:	int3   
   1400061d6:	int3   
   1400061d7:	int3   
   1400061d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400061dd:	mov    QWORD PTR [rsp+0x10],rdi
   1400061e2:	xor    edi,edi
   1400061e4:	lea    rax,[rdx-0x1]
   1400061e8:	cmp    rax,0x7ffffffe
   1400061ee:	mov    r10,rdx
   1400061f1:	mov    r9d,edi
   1400061f4:	mov    edx,0x80070057
   1400061f9:	cmova  r9d,edx
   1400061fd:	mov    rbx,r8
   140006200:	mov    r11,rcx
   140006203:	test   r9d,r9d
   140006206:	js     0x140006232
   140006208:	mov    rax,r10
   14000620b:	mov    r9d,edi
   14000620e:	test   r10,r10
   140006211:	je     0x14000622f
   140006213:	cmp    WORD PTR [rcx],di
   140006216:	je     0x140006222
   140006218:	add    rcx,0x2
   14000621c:	sub    rax,0x1
   140006220:	jne    0x140006213
   140006222:	test   rax,rax
   140006225:	je     0x14000622f
   140006227:	mov    r8,r10
   14000622a:	sub    r8,rax
   14000622d:	jmp    0x140006235
   14000622f:	mov    r9d,edx
   140006232:	mov    r8,rdi
   140006235:	test   r9d,r9d
   140006238:	js     0x14000628c
   14000623a:	mov    rdx,r10
   14000623d:	lea    rcx,[r11+r8*2]
   140006241:	mov    r9d,edi
   140006244:	sub    rdx,r8
   140006247:	je     0x14000627f
   140006249:	mov    rax,rdx
   14000624c:	sub    rax,r10
   14000624f:	lea    r10,[r8+0x7ffffffe]
   140006256:	add    r10,rax
   140006259:	sub    rbx,rcx
   14000625c:	test   r10,r10
   14000625f:	je     0x14000627a
   140006261:	movzx  eax,WORD PTR [rbx+rcx*1]
   140006265:	test   ax,ax
   140006268:	je     0x14000627a
   14000626a:	mov    WORD PTR [rcx],ax
   14000626d:	dec    r10
   140006270:	add    rcx,0x2
   140006274:	sub    rdx,0x1
   140006278:	jne    0x14000625c
   14000627a:	test   rdx,rdx
   14000627d:	jne    0x140006289
   14000627f:	sub    rcx,0x2
   140006283:	mov    r9d,0x8007007a
   140006289:	mov    WORD PTR [rcx],di
   14000628c:	mov    rbx,QWORD PTR [rsp+0x8]
   140006291:	mov    eax,r9d
   140006294:	mov    rdi,QWORD PTR [rsp+0x10]
   140006299:	ret    
   14000629a:	int3   
   14000629b:	int3   
   14000629c:	int3   
   14000629d:	int3   
   14000629e:	int3   
   14000629f:	int3   
   1400062a0:	mov    r11,rsp
   1400062a3:	sub    rsp,0xc8
   1400062aa:	xor    eax,eax
   1400062ac:	mov    DWORD PTR [r11-0x38],0xfb5
   1400062b4:	mov    QWORD PTR [r11-0x48],rax
   1400062b8:	mov    DWORD PTR [r11-0x30],eax
   1400062bc:	mov    DWORD PTR [r11-0x28],eax
   1400062c0:	lea    edx,[rax+0x4]
   1400062c3:	mov    DWORD PTR [r11-0x20],eax
   1400062c7:	mov    QWORD PTR [r11-0x50],rdx
   1400062cb:	lea    r8d,[rax+0xd]
   1400062cf:	lea    rax,[r11+0x48]
   1400062d3:	movzx  r9d,r8w
   1400062d7:	mov    QWORD PTR [r11-0x58],rax
   1400062db:	lea    r8,[rip+0x11876]        # 0x140017b58
   1400062e2:	mov    QWORD PTR [r11-0x60],rdx
   1400062e6:	lea    rax,[r11-0x38]
   1400062ea:	mov    QWORD PTR [r11-0x68],rax
   1400062ee:	lea    rax,[r11-0x30]
   1400062f2:	mov    QWORD PTR [r11-0x70],rdx
   1400062f6:	mov    QWORD PTR [r11-0x78],rax
   1400062fa:	lea    rax,[r11-0x28]
   1400062fe:	mov    QWORD PTR [r11-0x80],rdx
   140006302:	mov    QWORD PTR [rsp+0x40],rax
   140006307:	lea    rax,[r11-0x20]
   14000630b:	mov    QWORD PTR [rsp+0x38],rdx
   140006310:	mov    QWORD PTR [rsp+0x30],rax
   140006315:	lea    rax,[r11-0x18]
   140006319:	mov    QWORD PTR [rsp+0x28],rdx
   14000631e:	mov    edx,0x2b
   140006323:	mov    QWORD PTR [rsp+0x20],rax
   140006328:	mov    DWORD PTR [r11-0x18],0x6
   140006330:	call   QWORD PTR [rip+0xfcca]        # 0x140016000
   140006336:	add    rsp,0xc8
   14000633d:	ret    
   14000633e:	int3   
   14000633f:	int3   
   140006340:	int3   
   140006341:	int3   
   140006342:	int3   
   140006343:	int3   
   140006344:	mov    QWORD PTR [rsp+0x8],rcx
   140006349:	push   rdi
   14000634a:	sub    rsp,0x30
   14000634e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006357:	mov    QWORD PTR [rsp+0x48],rbx
   14000635c:	mov    rbx,rcx
   14000635f:	lea    rax,[rip+0x108e2]        # 0x140016c48
   140006366:	mov    QWORD PTR [rcx],rax
   140006369:	mov    rdi,QWORD PTR [rcx+0x68]
   14000636d:	test   rdi,rdi
   140006370:	je     0x140006387
   140006372:	mov    rcx,rdi
   140006375:	call   0x14000f8d8
   14000637a:	mov    rcx,rdi
   14000637d:	call   0x140014254
   140006382:	and    QWORD PTR [rbx+0x68],0x0
   140006387:	lea    rcx,[rbx+0x70]
   14000638b:	call   0x14000e288
   140006390:	nop
   140006391:	mov    rcx,rbx
   140006394:	mov    rbx,QWORD PTR [rsp+0x48]
   140006399:	add    rsp,0x30
   14000639d:	pop    rdi
   14000639e:	jmp    0x140001be8
   1400063a3:	int3   
   1400063a4:	int3   
   1400063a5:	int3   
   1400063a6:	int3   
   1400063a7:	int3   
   1400063a8:	int3   
   1400063a9:	int3   
   1400063aa:	int3   
   1400063ab:	int3   
   1400063ac:	int3   
   1400063ad:	int3   
   1400063ae:	int3   
   1400063af:	int3   
   1400063b0:	rex push rbx
   1400063b2:	sub    rsp,0x30
   1400063b6:	and    DWORD PTR [rsp+0x48],0x0
   1400063bb:	lea    r8,[rsp+0x48]
   1400063c0:	mov    rbx,rdx
   1400063c3:	lea    rcx,[rsp+0x20]
   1400063c8:	lea    rdx,[rip+0x114a9]        # 0x140017878
   1400063cf:	call   0x14000bf4c
   1400063d4:	test   rbx,rbx
   1400063d7:	jne    0x140006415
   1400063d9:	mov    DWORD PTR [rsp+0x48],0x80004003
   1400063e1:	mov    rcx,QWORD PTR [rip+0x17c38]        # 0x14001e020
   1400063e8:	lea    rax,[rip+0x17c31]        # 0x14001e020
   1400063ef:	cmp    rcx,rax
   1400063f2:	je     0x140006425
   1400063f4:	test   BYTE PTR [rcx+0x1c],0x4
   1400063f8:	je     0x140006425
   1400063fa:	mov    rcx,QWORD PTR [rcx+0x10]
   1400063fe:	lea    edx,[rbx+0xb]
   140006401:	mov    r9d,0x80004003
   140006407:	lea    r8,[rip+0x1174a]        # 0x140017b58
   14000640e:	call   0x140001228
   140006413:	jmp    0x140006425
   140006415:	mov    QWORD PTR [rbx+0x48],0x6d
   14000641d:	mov    QWORD PTR [rbx+0x10],0x69
   140006425:	lea    rcx,[rsp+0x20]
   14000642a:	call   0x14000bf98
   14000642f:	add    rsp,0x30
   140006433:	pop    rbx
   140006434:	ret    
   140006435:	int3   
   140006436:	int3   
   140006437:	int3   
   140006438:	int3   
   140006439:	int3   
   14000643a:	int3   
   14000643b:	int3   
   14000643c:	int3   
   14000643d:	int3   
   14000643e:	int3   
   14000643f:	int3   
   140006440:	rex push rbx
   140006442:	sub    rsp,0x40
   140006446:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000644f:	mov    rbx,rcx
   140006452:	lea    r8,[rsp+0x68]
   140006457:	lea    rdx,[rip+0x11442]        # 0x1400178a0
   14000645e:	lea    rcx,[rsp+0x28]
   140006463:	call   0x14000bf4c
   140006468:	nop
   140006469:	mov    rcx,rbx
   14000646c:	call   0x1400064b8
   140006471:	mov    DWORD PTR [rsp+0x68],eax
   140006475:	test   eax,eax
   140006477:	js     0x14000649a
   140006479:	mov    rcx,rbx
   14000647c:	call   0x14000671c
   140006481:	mov    DWORD PTR [rsp+0x68],eax
   140006485:	test   eax,eax
   140006487:	js     0x14000649a
   140006489:	mov    rcx,rbx
   14000648c:	call   0x1400071d4
   140006491:	mov    rcx,rbx
   140006494:	call   0x1400072b8
   140006499:	nop
   14000649a:	lea    rcx,[rsp+0x28]
   14000649f:	call   0x14000bf98
   1400064a4:	mov    eax,0x1
   1400064a9:	add    rsp,0x40
   1400064ad:	pop    rbx
   1400064ae:	ret    
   1400064af:	int3   
   1400064b0:	int3   
   1400064b1:	int3   
   1400064b2:	int3   
   1400064b3:	int3   
   1400064b4:	int3   
   1400064b5:	int3   
   1400064b6:	int3   
   1400064b7:	int3   
   1400064b8:	mov    rax,rsp
   1400064bb:	push   rbp
   1400064bc:	push   rsi
   1400064bd:	push   rdi
   1400064be:	push   r14
   1400064c0:	push   r15
   1400064c2:	lea    rbp,[rax-0x5f]
   1400064c6:	sub    rsp,0xc0
   1400064cd:	mov    QWORD PTR [rbp+0x27],0xfffffffffffffffe
   1400064d5:	mov    QWORD PTR [rax+0x8],rbx
   1400064d9:	mov    rdi,rcx
   1400064dc:	xor    r15d,r15d
   1400064df:	mov    DWORD PTR [rbp+0x6f],r15d
   1400064e3:	lea    r8,[rbp+0x6f]
   1400064e7:	lea    rdx,[rip+0x113da]        # 0x1400178c8
   1400064ee:	lea    rcx,[rbp+0x17]
   1400064f2:	call   0x14000bf4c
   1400064f7:	nop
   1400064f8:	mov    QWORD PTR [rbp-0x59],r15
   1400064fc:	mov    QWORD PTR [rbp-0x51],r15
   140006500:	mov    QWORD PTR [rbp-0x49],r15
   140006504:	mov    QWORD PTR [rbp-0x3d],0x4e1
   14000650c:	mov    QWORD PTR [rbp-0x31],r15
   140006510:	xorps  xmm0,xmm0
   140006513:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140006518:	mov    QWORD PTR [rbp-0x19],r15
   14000651c:	mov    QWORD PTR [rbp-0xd],r15
   140006520:	mov    DWORD PTR [rbp-0x5],r15d
   140006524:	mov    QWORD PTR [rbp-0x1],r15
   140006528:	mov    QWORD PTR [rbp+0x7],r15
   14000652c:	mov    DWORD PTR [rbp+0xf],r15d
   140006530:	mov    DWORD PTR [rbp-0x11],r15d
   140006534:	lea    rdx,[rbp-0x59]
   140006538:	mov    rcx,rdi
   14000653b:	call   0x140002890
   140006540:	mov    ebx,eax
   140006542:	mov    DWORD PTR [rbp+0x6f],eax
   140006545:	test   eax,eax
   140006547:	js     0x1400066e7
   14000654d:	mov    rcx,QWORD PTR [rdi+0x68]
   140006551:	test   rcx,rcx
   140006554:	jne    0x1400065cc
   140006556:	mov    ecx,0x5c8
   14000655b:	call   0x14001426c
   140006560:	mov    QWORD PTR [rbp+0x77],rax
   140006564:	test   rax,rax
   140006567:	je     0x140006577
   140006569:	lea    rdx,[rbp-0x59]
   14000656d:	mov    rcx,rax
   140006570:	call   0x14000f61c
   140006575:	jmp    0x14000657a
   140006577:	mov    rax,r15
   14000657a:	mov    QWORD PTR [rdi+0x68],rax
   14000657e:	test   rax,rax
   140006581:	jne    0x1400065c7
   140006583:	mov    ebx,0x8007000e
   140006588:	mov    DWORD PTR [rbp+0x6f],ebx
   14000658b:	lea    rax,[rip+0x17a8e]        # 0x14001e020
   140006592:	mov    rcx,QWORD PTR [rip+0x17a87]        # 0x14001e020
   140006599:	cmp    rcx,rax
   14000659c:	je     0x1400066e7
   1400065a2:	test   BYTE PTR [rcx+0x1c],0x4
   1400065a6:	je     0x1400066e7
   1400065ac:	mov    edx,0xc
   1400065b1:	mov    r9d,0x8007000e
   1400065b7:	lea    r8,[rip+0x1159a]        # 0x140017b58
   1400065be:	mov    rcx,QWORD PTR [rcx+0x10]
   1400065c2:	call   0x140001228
   1400065c7:	mov    ebx,DWORD PTR [rbp+0x6f]
   1400065ca:	jmp    0x1400065da
   1400065cc:	lea    rdx,[rbp-0x59]
   1400065d0:	call   0x14000faa8
   1400065d5:	mov    ebx,eax
   1400065d7:	mov    DWORD PTR [rbp+0x6f],eax
   1400065da:	test   ebx,ebx
   1400065dc:	js     0x1400066e7
   1400065e2:	cmp    QWORD PTR [rdi+0x68],r15
   1400065e6:	je     0x1400066e7
   1400065ec:	mov    rcx,QWORD PTR [rdi+0x50]
   1400065f0:	call   0x140001a78
   1400065f5:	mov    r14d,0x1
   1400065fb:	sub    eax,r14d
   1400065fe:	je     0x140006679
   140006600:	sub    eax,r14d
   140006603:	je     0x14000666e
   140006605:	cmp    eax,r14d
   140006608:	je     0x140006630
   14000660a:	mov    r8d,r14d
   14000660d:	xor    edx,edx
   14000660f:	lea    rcx,[rdi+0x70]
   140006613:	call   0x14000f448
   140006618:	mov    ebx,eax
   14000661a:	mov    DWORD PTR [rbp+0x6f],eax
   14000661d:	test   eax,eax
   14000661f:	js     0x1400066e7
   140006625:	lea    rcx,[rdi+0x70]
   140006629:	call   0x14000f1c4
   14000662e:	jmp    0x1400066ad
   140006630:	mov    r14d,r15d
   140006633:	lea    rsi,[rdi+0x70]
   140006637:	mov    rcx,rsi
   14000663a:	call   0x14000e99c
   14000663f:	mov    ebx,eax
   140006641:	mov    DWORD PTR [rbp+0x6f],eax
   140006644:	test   eax,eax
   140006646:	js     0x1400066e7
   14000664c:	mov    rcx,rsi
   14000664f:	call   0x14000e710
   140006654:	mov    edx,r15d
   140006657:	test   eax,eax
   140006659:	sete   dl
   14000665c:	mov    DWORD PTR [rdi+0xe4],edx
   140006662:	xor    edx,edx
   140006664:	mov    rcx,rsi
   140006667:	call   0x14000ed6c
   14000666c:	jmp    0x1400066ad
   14000666e:	lea    rcx,[rdi+0x70]
   140006672:	call   0x14000e99c
   140006677:	jmp    0x1400066ad
   140006679:	lea    rsi,[rdi+0x70]
   14000667d:	xor    r8d,r8d
   140006680:	mov    edx,r14d
   140006683:	mov    rcx,rsi
   140006686:	call   0x14000f448
   14000668b:	mov    ebx,eax
   14000668d:	mov    DWORD PTR [rbp+0x6f],eax
   140006690:	test   eax,eax
   140006692:	js     0x1400066e7
   140006694:	mov    rcx,rsi
   140006697:	call   0x14000f1c4
   14000669c:	mov    ebx,eax
   14000669e:	mov    DWORD PTR [rbp+0x6f],eax
   1400066a1:	test   eax,eax
   1400066a3:	js     0x1400066e7
   1400066a5:	mov    rcx,rsi
   1400066a8:	call   0x14000f304
   1400066ad:	mov    DWORD PTR [rbp+0x6f],eax
   1400066b0:	mov    ebx,eax
   1400066b2:	test   eax,eax
   1400066b4:	js     0x1400066e7
   1400066b6:	mov    r9,r15
   1400066b9:	test   r14d,r14d
   1400066bc:	setne  r9b
   1400066c0:	mov    QWORD PTR [rsp+0x20],r15
   1400066c5:	mov    edx,0x408
   1400066ca:	mov    r8d,0xf1
   1400066d0:	mov    rcx,QWORD PTR [rdi+0x48]
   1400066d4:	call   QWORD PTR [rip+0xfc9e]        # 0x140016378
   1400066da:	mov    rcx,rdi
   1400066dd:	call   0x140007958
   1400066e2:	mov    ebx,eax
   1400066e4:	mov    DWORD PTR [rbp+0x6f],eax
   1400066e7:	lea    rcx,[rbp-0x59]
   1400066eb:	call   0x1400122dc
   1400066f0:	nop
   1400066f1:	lea    rcx,[rbp+0x17]
   1400066f5:	call   0x14000bf98
   1400066fa:	mov    eax,ebx
   1400066fc:	mov    rbx,QWORD PTR [rsp+0xf0]
   140006704:	add    rsp,0xc0
   14000670b:	pop    r15
   14000670d:	pop    r14
   14000670f:	pop    rdi
   140006710:	pop    rsi
   140006711:	pop    rbp
   140006712:	ret    
   140006713:	int3   
   140006714:	int3   
   140006715:	int3   
   140006716:	int3   
   140006717:	int3   
   140006718:	int3   
   140006719:	int3   
   14000671a:	int3   
   14000671b:	int3   
   14000671c:	mov    rax,rsp
   14000671f:	mov    QWORD PTR [rax+0x10],rbx
   140006723:	mov    QWORD PTR [rax+0x18],rbp
   140006727:	mov    QWORD PTR [rax+0x20],rsi
   14000672b:	push   rdi
   14000672c:	push   r14
   14000672e:	push   r15
   140006730:	sub    rsp,0x40
   140006734:	mov    rsi,rcx
   140006737:	lea    r8,[rax+0x8]
   14000673b:	xor    ebx,ebx
   14000673d:	lea    rcx,[rax-0x28]
   140006741:	lea    rdx,[rip+0x111a8]        # 0x1400178f0
   140006748:	mov    DWORD PTR [rax+0x8],ebx
   14000674b:	call   0x14000bf4c
   140006750:	mov    rcx,QWORD PTR [rsi+0x50]
   140006754:	call   0x140001a78
   140006759:	mov    rcx,QWORD PTR [rsi+0x48]
   14000675d:	lea    r8,[rsp+0x60]
   140006762:	mov    edx,0x3e9
   140006767:	mov    r15d,eax
   14000676a:	call   0x14000d6ec
   14000676f:	mov    rcx,QWORD PTR [rsi+0x48]
   140006773:	lea    r8,[rsp+0x60]
   140006778:	mov    edx,0x3ea
   14000677d:	mov    QWORD PTR [rsi+0xc8],rax
   140006784:	call   0x14000d6ec
   140006789:	mov    rcx,QWORD PTR [rsi+0x48]
   14000678d:	lea    r8,[rsp+0x60]
   140006792:	mov    edx,0x3eb
   140006797:	mov    QWORD PTR [rsi+0xd0],rax
   14000679e:	call   0x14000d6ec
   1400067a3:	lea    edx,[rbx+0x2]
   1400067a6:	mov    QWORD PTR [rsi+0xd8],rax
   1400067ad:	mov    rcx,rsi
   1400067b0:	call   0x140002e5c
   1400067b5:	test   rax,rax
   1400067b8:	je     0x1400067cd
   1400067ba:	mov    rcx,QWORD PTR [rsi+0x48]
   1400067be:	lea    edx,[rbx+0x30]
   1400067c1:	xor    r9d,r9d
   1400067c4:	mov    r8,rax
   1400067c7:	call   QWORD PTR [rip+0xfb3b]        # 0x140016308
   1400067cd:	mov    r14d,ebx
   1400067d0:	lea    rdi,[rip+0x11359]        # 0x140017b30
   1400067d7:	mov    ebp,0x1
   1400067dc:	mov    r9,rbx
   1400067df:	mov    edx,DWORD PTR [rdi-0x8]
   1400067e2:	mov    r8d,0xf1
   1400067e8:	mov    rcx,QWORD PTR [rsi+0x48]
   1400067ec:	mov    QWORD PTR [rsp+0x20],rbx
   1400067f1:	cmp    r15d,DWORD PTR [rdi-0x4]
   1400067f5:	jne    0x1400067ff
   1400067f7:	cmp    DWORD PTR [rdi],ebx
   1400067f9:	setne  r9b
   1400067fd:	jmp    0x140006805
   1400067ff:	cmp    DWORD PTR [rdi],ebx
   140006801:	sete   r9b
   140006805:	call   QWORD PTR [rip+0xfb6d]        # 0x140016378
   14000680b:	add    r14d,ebp
   14000680e:	add    rdi,0xc
   140006812:	movsxd rax,r14d
   140006815:	cmp    rax,0x4
   140006819:	jb     0x1400067dc
   14000681b:	cmp    r15d,0x2
   14000681f:	je     0x14000682b
   140006821:	cmp    DWORD PTR [rsi+0xe4],ebx
   140006827:	jne    0x14000682b
   140006829:	mov    ebp,ebx
   14000682b:	neg    ebp
   14000682d:	mov    edx,0x3eb
   140006832:	mov    rcx,rsi
   140006835:	sbb    r8d,r8d
   140006838:	and    r8d,0x5
   14000683c:	call   0x140002810
   140006841:	cmp    r15d,0x3
   140006845:	mov    rcx,rsi
   140006848:	setne  bl
   14000684b:	mov    edx,ebx
   14000684d:	call   0x140007130
   140006852:	mov    ebx,DWORD PTR [rsp+0x60]
   140006856:	lea    rcx,[rsp+0x30]
   14000685b:	call   0x14000bf98
   140006860:	mov    rbp,QWORD PTR [rsp+0x70]
   140006865:	mov    eax,ebx
   140006867:	mov    rbx,QWORD PTR [rsp+0x68]
   14000686c:	mov    rsi,QWORD PTR [rsp+0x78]
   140006871:	add    rsp,0x40
   140006875:	pop    r15
   140006877:	pop    r14
   140006879:	pop    rdi
   14000687a:	ret    
   14000687b:	int3   
   14000687c:	int3   
   14000687d:	int3   
   14000687e:	int3   
   14000687f:	int3   
   140006880:	int3   
   140006881:	int3   
   140006882:	int3   
   140006883:	int3   
   140006884:	int3   
   140006885:	int3   
   140006886:	int3   
   140006887:	int3   
   140006888:	int3   
   140006889:	int3   
   14000688a:	int3   
   14000688b:	int3   
   14000688c:	int3   
   14000688d:	int3   
   14000688e:	int3   
   14000688f:	int3   
   140006890:	mov    rax,rsp
   140006893:	push   rsi
   140006894:	push   rdi
   140006895:	push   r12
   140006897:	push   r14
   140006899:	push   r15
   14000689b:	sub    rsp,0x70
   14000689f:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   1400068a7:	mov    QWORD PTR [rax+0x8],rbx
   1400068ab:	mov    QWORD PTR [rax+0x18],rbp
   1400068af:	mov    rbx,rdx
   1400068b2:	mov    rdi,rcx
   1400068b5:	xor    r15d,r15d
   1400068b8:	mov    DWORD PTR [rax+0x10],r15d
   1400068bc:	lea    r8,[rax+0x10]
   1400068c0:	lea    rdx,[rip+0x11051]        # 0x140017918
   1400068c7:	lea    rcx,[rax-0x40]
   1400068cb:	call   0x14000bf4c
   1400068d0:	nop
   1400068d1:	mov    rax,rbx
   1400068d4:	shr    rax,0x10
   1400068d8:	lea    r14d,[r15+0x1]
   1400068dc:	test   ax,ax
   1400068df:	jne    0x140006b61
   1400068e5:	mov    DWORD PTR [rdi+0xe0],r14d
   1400068ec:	movzx  ebp,bx
   1400068ef:	mov    ecx,ebp
   1400068f1:	sub    ecx,0x3e9
   1400068f7:	je     0x140006af0
   1400068fd:	sub    ecx,r14d
   140006900:	je     0x140006abc
   140006906:	sub    ecx,r14d
   140006909:	je     0x140006a83
   14000690f:	cmp    ecx,0x1d
   140006912:	je     0x140006920
   140006914:	mov    DWORD PTR [rdi+0xe0],r15d
   14000691b:	jmp    0x140006b61
   140006920:	mov    rax,QWORD PTR [rip+0x176f9]        # 0x14001e020
   140006927:	mov    r8,QWORD PTR [rax+0x10]
   14000692b:	test   r8,r8
   14000692e:	je     0x14000693d
   140006930:	mov    r9b,r14b
   140006933:	mov    edx,0x40e
   140006938:	call   0x140002f4c
   14000693d:	mov    QWORD PTR [rsp+0x20],r15
   140006942:	xor    r9d,r9d
   140006945:	mov    edx,0x408
   14000694a:	mov    r8d,0xf0
   140006950:	mov    rcx,QWORD PTR [rdi+0x48]
   140006954:	call   QWORD PTR [rip+0xfa1e]        # 0x140016378
   14000695a:	mov    rcx,rdi
   14000695d:	cmp    rax,r14
   140006960:	je     0x140006987
   140006962:	xor    edx,edx
   140006964:	call   0x140007130
   140006969:	mov    edx,0x3
   14000696e:	mov    rcx,QWORD PTR [rdi+0x50]
   140006972:	call   0x140001ab0
   140006977:	xor    edx,edx
   140006979:	lea    rcx,[rdi+0x70]
   14000697d:	call   0x14000ed6c
   140006982:	jmp    0x140006b2f
   140006987:	mov    edx,r14d
   14000698a:	call   0x140007130
   14000698f:	mov    esi,r15d
   140006992:	lea    r12,[rip+0x11177]        # 0x140017b10
   140006999:	mov    rbx,r12
   14000699c:	mov    QWORD PTR [rsp+0x20],r15
   1400069a1:	xor    r9d,r9d
   1400069a4:	mov    r8d,0xf0
   1400069aa:	mov    edx,DWORD PTR [rbx]
   1400069ac:	mov    rcx,QWORD PTR [rdi+0x48]
   1400069b0:	call   QWORD PTR [rip+0xf9c2]        # 0x140016378
   1400069b6:	cmp    rax,r14
   1400069b9:	je     0x140006a6a
   1400069bf:	add    esi,r14d
   1400069c2:	add    rbx,0x8
   1400069c6:	lea    rax,[rip+0x1115b]        # 0x140017b28
   1400069cd:	cmp    rbx,rax
   1400069d0:	jl     0x14000699c
   1400069d2:	lea    rbx,[rdi+0x70]
   1400069d6:	mov    rcx,rbx
   1400069d9:	call   0x14000e99c
   1400069de:	mov    DWORD PTR [rsp+0xa8],eax
   1400069e5:	test   eax,eax
   1400069e7:	js     0x140006a7b
   1400069ed:	mov    rcx,rbx
   1400069f0:	call   0x14000e710
   1400069f5:	test   eax,eax
   1400069f7:	jne    0x140006a2d
   1400069f9:	mov    ebx,0x3eb
   1400069fe:	lea    r8d,[rax+0x5]
   140006a02:	mov    edx,ebx
   140006a04:	mov    rcx,rdi
   140006a07:	call   0x140002810
   140006a0c:	mov    QWORD PTR [rsp+0x20],r15
   140006a11:	mov    r9,r14
   140006a14:	mov    r8d,0xf1
   140006a1a:	mov    edx,ebx
   140006a1c:	mov    rcx,QWORD PTR [rdi+0x48]
   140006a20:	call   QWORD PTR [rip+0xf952]        # 0x140016378
   140006a26:	mov    edx,0x2
   140006a2b:	jmp    0x140006a72
   140006a2d:	mov    rcx,rbx
   140006a30:	call   0x14000e5c8
   140006a35:	mov    QWORD PTR [rsp+0x20],r15
   140006a3a:	mov    r9,r14
   140006a3d:	mov    r8d,0xf1
   140006a43:	mov    rcx,QWORD PTR [rdi+0x48]
   140006a47:	test   eax,eax
   140006a49:	je     0x140006a5b
   140006a4b:	mov    edx,0x3ea
   140006a50:	call   QWORD PTR [rip+0xf922]        # 0x140016378
   140006a56:	mov    edx,r14d
   140006a59:	jmp    0x140006a72
   140006a5b:	mov    edx,0x3e9
   140006a60:	call   QWORD PTR [rip+0xf912]        # 0x140016378
   140006a66:	xor    edx,edx
   140006a68:	jmp    0x140006a72
   140006a6a:	movsxd rax,esi
   140006a6d:	mov    edx,DWORD PTR [r12+rax*8+0x4]
   140006a72:	mov    rcx,QWORD PTR [rdi+0x50]
   140006a76:	call   0x140001ab0
   140006a7b:	mov    edx,r14d
   140006a7e:	jmp    0x140006979
   140006a83:	mov    rax,QWORD PTR [rip+0x17596]        # 0x14001e020
   140006a8a:	mov    r8,QWORD PTR [rax+0x10]
   140006a8e:	test   r8,r8
   140006a91:	je     0x140006aa0
   140006a93:	mov    r9b,r14b
   140006a96:	mov    edx,0x40e
   140006a9b:	call   0x140002f4c
   140006aa0:	lea    rcx,[rdi+0x70]
   140006aa4:	call   0x14000e99c
   140006aa9:	mov    edx,r14d
   140006aac:	lea    rcx,[rdi+0x70]
   140006ab0:	call   0x14000ed6c
   140006ab5:	mov    edx,0x2
   140006aba:	jmp    0x140006b26
   140006abc:	mov    rax,QWORD PTR [rip+0x1755d]        # 0x14001e020
   140006ac3:	mov    r8,QWORD PTR [rax+0x10]
   140006ac7:	test   r8,r8
   140006aca:	je     0x140006ad9
   140006acc:	mov    r9b,r14b
   140006acf:	mov    edx,0x40e
   140006ad4:	call   0x140002f4c
   140006ad9:	lea    rcx,[rdi+0x70]
   140006add:	call   0x14000f1c4
   140006ae2:	lea    rcx,[rdi+0x70]
   140006ae6:	call   0x14000f304
   140006aeb:	mov    edx,r14d
   140006aee:	jmp    0x140006b26
   140006af0:	mov    rax,QWORD PTR [rip+0x17529]        # 0x14001e020
   140006af7:	mov    r8,QWORD PTR [rax+0x10]
   140006afb:	test   r8,r8
   140006afe:	je     0x140006b0d
   140006b00:	mov    r9b,r14b
   140006b03:	mov    edx,0x40e
   140006b08:	call   0x140002f4c
   140006b0d:	mov    r8d,r14d
   140006b10:	xor    edx,edx
   140006b12:	lea    rcx,[rdi+0x70]
   140006b16:	call   0x14000f448
   140006b1b:	lea    rcx,[rdi+0x70]
   140006b1f:	call   0x14000f1c4
   140006b24:	xor    edx,edx
   140006b26:	mov    rcx,QWORD PTR [rdi+0x50]
   140006b2a:	call   0x140001ab0
   140006b2f:	lea    rax,[rip+0x174ea]        # 0x14001e020
   140006b36:	mov    rcx,QWORD PTR [rip+0x174e3]        # 0x14001e020
   140006b3d:	cmp    rcx,rax
   140006b40:	je     0x140006b58
   140006b42:	test   DWORD PTR [rcx+0x1c],0x2000
   140006b49:	je     0x140006b58
   140006b4b:	mov    DWORD PTR [rsp+0x40],ebp
   140006b4f:	mov    rcx,QWORD PTR [rcx+0x10]
   140006b53:	call   0x1400062a0
   140006b58:	mov    rcx,rdi
   140006b5b:	call   0x140007958
   140006b60:	nop
   140006b61:	lea    rcx,[rsp+0x58]
   140006b66:	call   0x14000bf98
   140006b6b:	mov    rax,r14
   140006b6e:	lea    r11,[rsp+0x70]
   140006b73:	mov    rbx,QWORD PTR [r11+0x30]
   140006b77:	mov    rbp,QWORD PTR [r11+0x40]
   140006b7b:	mov    rsp,r11
   140006b7e:	pop    r15
   140006b80:	pop    r14
   140006b82:	pop    r12
   140006b84:	pop    rdi
   140006b85:	pop    rsi
   140006b86:	ret    
   140006b87:	int3   
   140006b88:	int3   
   140006b89:	int3   
   140006b8a:	int3   
   140006b8b:	int3   
   140006b8c:	int3   
   140006b8d:	int3   
   140006b8e:	int3   
   140006b8f:	int3   
   140006b90:	mov    rax,rsp
   140006b93:	push   r14
   140006b95:	sub    rsp,0x60
   140006b99:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140006ba1:	mov    QWORD PTR [rax+0x8],rbx
   140006ba5:	mov    QWORD PTR [rax+0x10],rsi
   140006ba9:	mov    QWORD PTR [rax+0x20],rdi
   140006bad:	mov    r14,r8
   140006bb0:	mov    rsi,rcx
   140006bb3:	mov    edi,0x1
   140006bb8:	xor    ebx,ebx
   140006bba:	mov    DWORD PTR [rax+0x18],ebx
   140006bbd:	lea    r8,[rax+0x18]
   140006bc1:	lea    rdx,[rip+0x10d70]        # 0x140017938
   140006bc8:	lea    rcx,[rax-0x20]
   140006bcc:	call   0x14000bf4c
   140006bd1:	nop
   140006bd2:	test   r14,r14
   140006bd5:	jne    0x140006c21
   140006bd7:	mov    DWORD PTR [rsp+0x80],0x80004005
   140006be2:	lea    rax,[rip+0x17437]        # 0x14001e020
   140006be9:	mov    rcx,QWORD PTR [rip+0x17430]        # 0x14001e020
   140006bf0:	cmp    rcx,rax
   140006bf3:	je     0x140006e15
   140006bf9:	test   BYTE PTR [rcx+0x1c],0x4
   140006bfd:	je     0x140006e15
   140006c03:	lea    edx,[rdi+0xd]
   140006c06:	mov    r9d,0x80004005
   140006c0c:	lea    r8,[rip+0x10f45]        # 0x140017b58
   140006c13:	mov    rcx,QWORD PTR [rcx+0x10]
   140006c17:	call   0x140001228
   140006c1c:	jmp    0x140006e15
   140006c21:	mov    eax,DWORD PTR [r14+0x10]
   140006c25:	cmp    eax,0xffffff2f
   140006c2a:	je     0x140006db4
   140006c30:	cmp    eax,0xffffff30
   140006c35:	je     0x140006d04
   140006c3b:	cmp    eax,0xffffff32
   140006c40:	je     0x140006cbe
   140006c42:	cmp    eax,0xffffff38
   140006c47:	jne    0x140006e12
   140006c4d:	mov    ebx,0x15
   140006c52:	mov    r9d,ebx
   140006c55:	xor    r8d,r8d
   140006c58:	mov    edx,0x470
   140006c5d:	mov    rcx,QWORD PTR [r14]
   140006c60:	call   QWORD PTR [rip+0xf702]        # 0x140016368
   140006c66:	mov    r9d,ebx
   140006c69:	mov    r8d,ebx
   140006c6c:	mov    edx,0x48a
   140006c71:	mov    rcx,QWORD PTR [r14]
   140006c74:	call   QWORD PTR [rip+0xf6ee]        # 0x140016368
   140006c7a:	lea    rax,[rip+0x1739f]        # 0x14001e020
   140006c81:	mov    rcx,QWORD PTR [rip+0x17398]        # 0x14001e020
   140006c88:	cmp    rcx,rax
   140006c8b:	je     0x140006e12
   140006c91:	test   DWORD PTR [rcx+0x1c],0x2000
   140006c98:	je     0x140006e12
   140006c9e:	lea    edx,[rbx-0x6]
   140006ca1:	mov    DWORD PTR [rsp+0x38],0xfaf
   140006ca9:	lea    r8,[rip+0x10ea8]        # 0x140017b58
   140006cb0:	mov    rcx,QWORD PTR [rcx+0x10]
   140006cb4:	call   0x140002ff0
   140006cb9:	jmp    0x140006e12
   140006cbe:	lea    rax,[rip+0x1735b]        # 0x14001e020
   140006cc5:	mov    rcx,QWORD PTR [rip+0x17354]        # 0x14001e020
   140006ccc:	cmp    rcx,rax
   140006ccf:	je     0x140006e0f
   140006cd5:	test   DWORD PTR [rcx+0x1c],0x2000
   140006cdc:	je     0x140006e0f
   140006ce2:	mov    edx,0x11
   140006ce7:	mov    DWORD PTR [rsp+0x38],0xfb1
   140006cef:	lea    r8,[rip+0x10e62]        # 0x140017b58
   140006cf6:	mov    rcx,QWORD PTR [rcx+0x10]
   140006cfa:	call   0x140002ff0
   140006cff:	jmp    0x140006e0f
   140006d04:	lea    rax,[rip+0x17315]        # 0x14001e020
   140006d0b:	mov    rcx,QWORD PTR [rip+0x1730e]        # 0x14001e020
   140006d12:	cmp    rcx,rax
   140006d15:	je     0x140006d3d
   140006d17:	test   DWORD PTR [rcx+0x1c],0x2000
   140006d1e:	je     0x140006d3d
   140006d20:	mov    edx,0x10
   140006d25:	mov    DWORD PTR [rsp+0x38],0xfb0
   140006d2d:	lea    r8,[rip+0x10e24]        # 0x140017b58
   140006d34:	mov    rcx,QWORD PTR [rcx+0x10]
   140006d38:	call   0x140002ff0
   140006d3d:	mov    rcx,QWORD PTR [rsi+0x50]
   140006d41:	call   0x140001924
   140006d46:	mov    QWORD PTR [rsp+0x20],rbx
   140006d4b:	xor    r9d,r9d
   140006d4e:	mov    edx,0x407
   140006d53:	mov    r8d,0xf0
   140006d59:	mov    rcx,QWORD PTR [rsi+0x48]
   140006d5d:	call   QWORD PTR [rip+0xf615]        # 0x140016378
   140006d63:	cmp    rax,rdi
   140006d66:	jne    0x140006da3
   140006d68:	mov    rax,QWORD PTR [rip+0x172b1]        # 0x14001e020
   140006d6f:	mov    r8,QWORD PTR [rax+0x10]
   140006d73:	test   r8,r8
   140006d76:	je     0x140006d85
   140006d78:	mov    r9b,dil
   140006d7b:	mov    edx,0x410
   140006d80:	call   0x140002f4c
   140006d85:	mov    rcx,rsi
   140006d88:	call   0x1400076a8
   140006d8d:	cmp    DWORD PTR [rsp+0x80],ebx
   140006d94:	cmovne eax,DWORD PTR [rsp+0x80]
   140006d9c:	mov    DWORD PTR [rsp+0x80],eax
   140006da3:	xor    r8d,r8d
   140006da6:	xor    edx,edx
   140006da8:	mov    rcx,QWORD PTR [rsi+0x48]
   140006dac:	call   QWORD PTR [rip+0xf55e]        # 0x140016310
   140006db2:	jmp    0x140006ded
   140006db4:	lea    rax,[rip+0x17265]        # 0x14001e020
   140006dbb:	mov    rcx,QWORD PTR [rip+0x1725e]        # 0x14001e020
   140006dc2:	cmp    rcx,rax
   140006dc5:	je     0x140006ded
   140006dc7:	test   DWORD PTR [rcx+0x1c],0x2000
   140006dce:	je     0x140006ded
   140006dd0:	mov    edx,0x12
   140006dd5:	mov    DWORD PTR [rsp+0x38],0xfb2
   140006ddd:	lea    r8,[rip+0x10d74]        # 0x140017b58
   140006de4:	mov    rcx,QWORD PTR [rcx+0x10]
   140006de8:	call   0x140002ff0
   140006ded:	mov    rcx,rsi
   140006df0:	call   0x14000259c
   140006df5:	call   QWORD PTR [rip+0xf8ad]        # 0x1400166a8
   140006dfb:	test   eax,eax
   140006dfd:	je     0x140006e0f
   140006dff:	mov    r8d,edi
   140006e02:	mov    edx,0x59c
   140006e07:	xor    ecx,ecx
   140006e09:	call   QWORD PTR [rip+0xf871]        # 0x140016680
   140006e0f:	mov    rdi,rbx
   140006e12:	mov    rbx,rdi
   140006e15:	lea    rcx,[rsp+0x48]
   140006e1a:	call   0x14000bf98
   140006e1f:	mov    rax,rbx
   140006e22:	lea    r11,[rsp+0x60]
   140006e27:	mov    rbx,QWORD PTR [r11+0x10]
   140006e2b:	mov    rsi,QWORD PTR [r11+0x18]
   140006e2f:	mov    rdi,QWORD PTR [r11+0x28]
   140006e33:	mov    rsp,r11
   140006e36:	pop    r14
   140006e38:	ret    
   140006e39:	int3   
   140006e3a:	int3   
   140006e3b:	int3   
   140006e3c:	int3   
   140006e3d:	int3   
   140006e3e:	int3   
   140006e3f:	int3   
   140006e40:	mov    rax,rsp
   140006e43:	mov    QWORD PTR [rax+0x8],rbx
   140006e47:	mov    QWORD PTR [rax+0x10],rsi
   140006e4b:	push   rdi
   140006e4c:	sub    rsp,0x30
   140006e50:	and    DWORD PTR [rax+0x18],0x0
   140006e54:	mov    rdi,r8
   140006e57:	mov    rbx,rdx
   140006e5a:	lea    r8,[rax+0x18]
   140006e5e:	mov    rsi,rcx
   140006e61:	lea    rdx,[rip+0x10af0]        # 0x140017958
   140006e68:	lea    rcx,[rax-0x18]
   140006e6c:	call   0x14000bf4c
   140006e71:	test   rdi,rdi
   140006e74:	je     0x140006eaa
   140006e76:	test   rbx,rbx
   140006e79:	je     0x140006eaa
   140006e7b:	mov    edx,0xfffffff4
   140006e80:	mov    rcx,rdi
   140006e83:	call   QWORD PTR [rip+0xf52f]        # 0x1400163b8
   140006e89:	cmp    eax,0x3f9
   140006e8e:	jne    0x140006ee6
   140006e90:	mov    edx,0x4
   140006e95:	mov    rcx,rsi
   140006e98:	call   0x140002ea4
   140006e9d:	mov    edx,eax
   140006e9f:	mov    rcx,rbx
   140006ea2:	call   QWORD PTR [rip+0xf270]        # 0x140016118
   140006ea8:	jmp    0x140006ee6
   140006eaa:	mov    DWORD PTR [rsp+0x50],0x80070057
   140006eb2:	mov    rcx,QWORD PTR [rip+0x17167]        # 0x14001e020
   140006eb9:	lea    rax,[rip+0x17160]        # 0x14001e020
   140006ec0:	cmp    rcx,rax
   140006ec3:	je     0x140006ee6
   140006ec5:	test   BYTE PTR [rcx+0x1c],0x4
   140006ec9:	je     0x140006ee6
   140006ecb:	mov    rcx,QWORD PTR [rcx+0x10]
   140006ecf:	lea    r8,[rip+0x10c82]        # 0x140017b58
   140006ed6:	mov    edx,0x13
   140006edb:	mov    r9d,0x80070057
   140006ee1:	call   0x140001228
   140006ee6:	lea    rcx,[rsp+0x20]
   140006eeb:	call   0x14000bf98
   140006ef0:	mov    rbx,QWORD PTR [rsp+0x40]
   140006ef5:	xor    eax,eax
   140006ef7:	mov    rsi,QWORD PTR [rsp+0x48]
   140006efc:	add    rsp,0x30
   140006f00:	pop    rdi
   140006f01:	ret    
   140006f02:	int3   
   140006f03:	int3   
   140006f04:	int3   
   140006f05:	int3   
   140006f06:	int3   
   140006f07:	int3   
   140006f08:	int3   
   140006f09:	int3   
   140006f0a:	int3   
   140006f0b:	int3   
   140006f0c:	int3   
   140006f0d:	int3   
   140006f0e:	int3   
   140006f0f:	int3   
   140006f10:	mov    QWORD PTR [rsp+0x8],rbx
   140006f15:	push   rbp
   140006f16:	push   rsi
   140006f17:	push   rdi
   140006f18:	push   r14
   140006f1a:	push   r15
   140006f1c:	mov    rbp,rsp
   140006f1f:	sub    rsp,0x40
   140006f23:	and    DWORD PTR [rbp+0x38],0x0
   140006f27:	mov    rdi,r8
   140006f2a:	and    DWORD PTR [rbp+0x40],0x0
   140006f2e:	lea    r8,[rbp+0x38]
   140006f32:	mov    rbx,rdx
   140006f35:	mov    rsi,rcx
   140006f38:	lea    rdx,[rip+0x10a41]        # 0x140017980
   140006f3f:	lea    rcx,[rbp-0x10]
   140006f43:	call   0x14000bf4c
   140006f48:	cmp    ebx,0x3ec
   140006f4e:	jne    0x140007108
   140006f54:	cmp    QWORD PTR [rsi+0x68],0x0
   140006f59:	je     0x140007108
   140006f5f:	cmp    QWORD PTR [rdi+0x20],0x0
   140006f64:	je     0x140007108
   140006f6a:	mov    edx,0x8
   140006f6f:	mov    rcx,rsi
   140006f72:	call   0x140002ea4
   140006f77:	mov    ecx,eax
   140006f79:	xor    edx,edx
   140006f7b:	call   0x14000cbf0
   140006f80:	mov    rbx,rax
   140006f83:	test   rax,rax
   140006f86:	je     0x14000705d
   140006f8c:	mov    rcx,QWORD PTR [rdi+0x20]
   140006f90:	xor    r8d,r8d
   140006f93:	mov    rdx,rax
   140006f96:	call   0x14000c018
   140006f9b:	cmp    DWORD PTR [rbp+0x38],0x0
   140006f9f:	mov    r14,rax
   140006fa2:	jl     0x140007041
   140006fa8:	mov    ecx,0x13
   140006fad:	call   QWORD PTR [rip+0xf155]        # 0x140016108
   140006fb3:	mov    rcx,QWORD PTR [rdi+0x20]
   140006fb7:	lea    r8,[rbp+0x38]
   140006fbb:	mov    rdx,rax
   140006fbe:	call   0x14000c018
   140006fc3:	cmp    DWORD PTR [rbp+0x38],0x0
   140006fc7:	mov    r15,rax
   140006fca:	jl     0x140007023
   140006fcc:	mov    ecx,0x8
   140006fd1:	call   QWORD PTR [rip+0xf359]        # 0x140016330
   140006fd7:	mov    rcx,QWORD PTR [rdi+0x20]
   140006fdb:	mov    edx,eax
   140006fdd:	call   QWORD PTR [rip+0xf12d]        # 0x140016110
   140006fe3:	mov    ecx,DWORD PTR [rdi+0x34]
   140006fe6:	mov    r8d,DWORD PTR [rdi+0x2c]
   140006fea:	sub    ecx,r8d
   140006fed:	mov    r9d,DWORD PTR [rdi+0x30]
   140006ff1:	mov    edx,DWORD PTR [rdi+0x28]
   140006ff4:	sub    r9d,edx
   140006ff7:	mov    DWORD PTR [rsp+0x20],ecx
   140006ffb:	mov    rcx,QWORD PTR [rdi+0x20]
   140006fff:	call   QWORD PTR [rip+0xf0fb]        # 0x140016100
   140007005:	mov    rcx,QWORD PTR [rdi+0x20]
   140007009:	lea    r8,[rbp+0x40]
   14000700d:	mov    rdx,r15
   140007010:	call   0x14000c018
   140007015:	mov    eax,DWORD PTR [rbp+0x38]
   140007018:	test   eax,eax
   14000701a:	mov    ecx,DWORD PTR [rbp+0x40]
   14000701d:	cmovne ecx,eax
   140007020:	mov    DWORD PTR [rbp+0x38],ecx
   140007023:	mov    rcx,QWORD PTR [rdi+0x20]
   140007027:	lea    r8,[rbp+0x40]
   14000702b:	mov    rdx,r14
   14000702e:	call   0x14000c018
   140007033:	mov    eax,DWORD PTR [rbp+0x38]
   140007036:	test   eax,eax
   140007038:	mov    ecx,DWORD PTR [rbp+0x40]
   14000703b:	cmovne ecx,eax
   14000703e:	mov    DWORD PTR [rbp+0x38],ecx
   140007041:	lea    rdx,[rbp+0x40]
   140007045:	mov    rcx,rbx
   140007048:	call   0x14000c0d8
   14000704d:	mov    eax,DWORD PTR [rbp+0x38]
   140007050:	test   eax,eax
   140007052:	mov    ecx,DWORD PTR [rbp+0x40]
   140007055:	cmovne ecx,eax
   140007058:	mov    DWORD PTR [rbp+0x38],ecx
   14000705b:	jmp    0x1400070a3
   14000705d:	mov    DWORD PTR [rbp+0x38],0x80004005
   140007064:	mov    rcx,QWORD PTR [rip+0x16fb5]        # 0x14001e020
   14000706b:	lea    rax,[rip+0x16fae]        # 0x14001e020
   140007072:	cmp    rcx,rax
   140007075:	je     0x140007108
   14000707b:	test   BYTE PTR [rcx+0x1c],0x4
   14000707f:	je     0x140007108
   140007085:	mov    rcx,QWORD PTR [rcx+0x10]
   140007089:	lea    r8,[rip+0x10ac8]        # 0x140017b58
   140007090:	mov    edx,0x14
   140007095:	mov    r9d,0x80004005
   14000709b:	call   0x140001228
   1400070a0:	mov    ecx,DWORD PTR [rbp+0x38]
   1400070a3:	test   ecx,ecx
   1400070a5:	js     0x140007108
   1400070a7:	mov    eax,DWORD PTR [rdi+0x30]
   1400070aa:	add    eax,DWORD PTR [rdi+0x28]
   1400070ad:	mov    r9d,DWORD PTR [rsi+0x60]
   1400070b1:	cdq    
   1400070b2:	mov    rcx,QWORD PTR [rsi+0x68]
   1400070b6:	sub    eax,edx
   1400070b8:	sar    eax,1
   1400070ba:	mov    DWORD PTR [rbp+0x40],eax
   1400070bd:	mov    eax,DWORD PTR [rdi+0x34]
   1400070c0:	add    eax,DWORD PTR [rdi+0x2c]
   1400070c3:	cdq    
   1400070c4:	sub    eax,edx
   1400070c6:	mov    rdx,QWORD PTR [rdi+0x20]
   1400070ca:	sar    eax,1
   1400070cc:	mov    DWORD PTR [rbp+0x44],eax
   1400070cf:	mov    r8,QWORD PTR [rbp+0x40]
   1400070d3:	call   0x1400105ac
   1400070d8:	cmp    DWORD PTR [rsi+0xe0],0x0
   1400070df:	mov    DWORD PTR [rbp+0x38],eax
   1400070e2:	je     0x140007108
   1400070e4:	mov    rax,QWORD PTR [rip+0x16f35]        # 0x14001e020
   1400070eb:	mov    r8,QWORD PTR [rax+0x10]
   1400070ef:	test   r8,r8
   1400070f2:	je     0x140007108
   1400070f4:	mov    r9b,0x2
   1400070f7:	mov    edx,0x40e
   1400070fc:	call   0x140002f4c
   140007101:	and    DWORD PTR [rsi+0xe0],0x0
   140007108:	lea    rcx,[rbp-0x10]
   14000710c:	call   0x14000bf98
   140007111:	mov    rbx,QWORD PTR [rsp+0x70]
   140007116:	mov    eax,0x1
   14000711b:	add    rsp,0x40
   14000711f:	pop    r15
   140007121:	pop    r14
   140007123:	pop    rdi
   140007124:	pop    rsi
   140007125:	pop    rbp
   140007126:	ret    
   140007127:	int3   
   140007128:	int3   
   140007129:	int3   
   14000712a:	int3   
   14000712b:	int3   
   14000712c:	int3   
   14000712d:	int3   
   14000712e:	int3   
   14000712f:	int3   
   140007130:	mov    QWORD PTR [rsp+0x10],rbx
   140007135:	mov    QWORD PTR [rsp+0x20],rdi
   14000713a:	push   rbp
   14000713b:	mov    rbp,rsp
   14000713e:	sub    rsp,0x30
   140007142:	and    DWORD PTR [rbp+0x10],0x0
   140007146:	lea    r8,[rbp+0x10]
   14000714a:	and    DWORD PTR [rbp+0x20],0x0
   14000714e:	mov    ebx,edx
   140007150:	mov    rdi,rcx
   140007153:	lea    rdx,[rip+0x10846]        # 0x1400179a0
   14000715a:	lea    rcx,[rbp-0x10]
   14000715e:	call   0x14000bf4c
   140007163:	mov    rcx,QWORD PTR [rdi+0xc8]
   14000716a:	lea    r8,[rbp+0x10]
   14000716e:	mov    edx,ebx
   140007170:	call   0x14000d94c
   140007175:	mov    rcx,QWORD PTR [rdi+0xd0]
   14000717c:	lea    r8,[rbp+0x20]
   140007180:	mov    edx,ebx
   140007182:	call   0x14000d94c
   140007187:	mov    eax,DWORD PTR [rbp+0x10]
   14000718a:	lea    r8,[rbp+0x20]
   14000718e:	mov    ecx,DWORD PTR [rbp+0x20]
   140007191:	test   eax,eax
   140007193:	mov    edx,ebx
   140007195:	cmovne ecx,eax
   140007198:	mov    DWORD PTR [rbp+0x10],ecx
   14000719b:	mov    rcx,QWORD PTR [rdi+0xd8]
   1400071a2:	call   0x14000d94c
   1400071a7:	mov    eax,DWORD PTR [rbp+0x10]
   1400071aa:	test   eax,eax
   1400071ac:	mov    ecx,DWORD PTR [rbp+0x20]
   1400071af:	cmovne ecx,eax
   1400071b2:	mov    DWORD PTR [rbp+0x10],ecx
   1400071b5:	lea    rcx,[rbp-0x10]
   1400071b9:	call   0x14000bf98
   1400071be:	mov    rbx,QWORD PTR [rsp+0x48]
   1400071c3:	mov    rdi,QWORD PTR [rsp+0x58]
   1400071c8:	add    rsp,0x30
   1400071cc:	pop    rbp
   1400071cd:	ret    
   1400071ce:	int3   
   1400071cf:	int3   
   1400071d0:	int3   
   1400071d1:	int3   
   1400071d2:	int3   
   1400071d3:	int3   
   1400071d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400071d9:	mov    QWORD PTR [rsp+0x18],rdi
   1400071de:	push   rbp
   1400071df:	mov    rbp,rsp
   1400071e2:	sub    rsp,0x30
   1400071e6:	and    DWORD PTR [rbp+0x18],0x0
   1400071ea:	lea    r8,[rbp+0x18]
   1400071ee:	mov    rdi,rcx
   1400071f1:	lea    rdx,[rip+0x107e0]        # 0x1400179d8
   1400071f8:	lea    rcx,[rbp-0x10]
   1400071fc:	call   0x14000bf4c
   140007201:	mov    edx,0x2
   140007206:	mov    rcx,rdi
   140007209:	call   0x140002e5c
   14000720e:	mov    r8,rax
   140007211:	mov    edx,0x3e9
   140007216:	mov    rcx,rdi
   140007219:	mov    rbx,rax
   14000721c:	call   0x140001e28
   140007221:	mov    ecx,DWORD PTR [rbp+0x18]
   140007224:	mov    r8,rbx
   140007227:	test   ecx,ecx
   140007229:	mov    edx,0x3ea
   14000722e:	cmovne eax,ecx
   140007231:	mov    rcx,rdi
   140007234:	mov    DWORD PTR [rbp+0x18],eax
   140007237:	call   0x140001e28
   14000723c:	mov    ecx,DWORD PTR [rbp+0x18]
   14000723f:	mov    r8,rbx
   140007242:	test   ecx,ecx
   140007244:	mov    edx,0x3eb
   140007249:	cmovne eax,ecx
   14000724c:	mov    rcx,rdi
   14000724f:	mov    DWORD PTR [rbp+0x18],eax
   140007252:	call   0x140001e28
   140007257:	mov    ecx,DWORD PTR [rbp+0x18]
   14000725a:	mov    r8,rbx
   14000725d:	test   ecx,ecx
   14000725f:	mov    edx,0x408
   140007264:	cmovne eax,ecx
   140007267:	mov    rcx,rdi
   14000726a:	mov    DWORD PTR [rbp+0x18],eax
   14000726d:	call   0x140001e28
   140007272:	mov    ecx,DWORD PTR [rbp+0x18]
   140007275:	mov    r8,rbx
   140007278:	test   ecx,ecx
   14000727a:	mov    edx,0x407
   14000727f:	cmovne eax,ecx
   140007282:	mov    rcx,rdi
   140007285:	mov    DWORD PTR [rbp+0x18],eax
   140007288:	call   0x140001e28
   14000728d:	mov    ecx,DWORD PTR [rbp+0x18]
   140007290:	test   ecx,ecx
   140007292:	cmovne eax,ecx
   140007295:	lea    rcx,[rbp-0x10]
   140007299:	mov    DWORD PTR [rbp+0x18],eax
   14000729c:	call   0x14000bf98
   1400072a1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400072a6:	mov    rdi,QWORD PTR [rsp+0x50]
   1400072ab:	add    rsp,0x30
   1400072af:	pop    rbp
   1400072b0:	ret    
   1400072b1:	int3   
   1400072b2:	int3   
   1400072b3:	int3   
   1400072b4:	int3   
   1400072b5:	int3   
   1400072b6:	int3   
   1400072b7:	int3   
   1400072b8:	mov    rax,rsp
   1400072bb:	mov    QWORD PTR [rax+0x10],rbx
   1400072bf:	mov    QWORD PTR [rax+0x18],rsi
   1400072c3:	mov    QWORD PTR [rax+0x20],rdi
   1400072c7:	push   rbp
   1400072c8:	push   r12
   1400072ca:	push   r13
   1400072cc:	push   r14
   1400072ce:	push   r15
   1400072d0:	lea    rbp,[rax-0x5f]
   1400072d4:	sub    rsp,0xd0
   1400072db:	mov    rax,QWORD PTR [rip+0x16d2e]        # 0x14001e010
   1400072e2:	xor    rax,rsp
   1400072e5:	mov    QWORD PTR [rbp+0x2f],rax
   1400072e9:	mov    rbx,rcx
   1400072ec:	lea    r8,[rbp-0x55]
   1400072f0:	xor    edi,edi
   1400072f2:	lea    rcx,[rbp-0x51]
   1400072f6:	lea    rdx,[rip+0x10703]        # 0x140017a00
   1400072fd:	mov    DWORD PTR [rbp-0x55],edi
   140007300:	mov    DWORD PTR [rbp-0x59],edi
   140007303:	call   0x14000bf4c
   140007308:	xor    edx,edx
   14000730a:	lea    r8d,[rdi+0x3c]
   14000730e:	lea    rcx,[rbp-0x11]
   140007312:	mov    esi,edi
   140007314:	lea    r15d,[rdi+0xa]
   140007318:	call   0x140014b26
   14000731d:	mov    rcx,QWORD PTR [rbx+0x48]
   140007321:	lea    r8,[rbp-0x55]
   140007325:	lea    rdx,[rbp-0x41]
   140007329:	call   0x14000c6a4
   14000732e:	cmp    DWORD PTR [rbp-0x55],edi
   140007331:	jl     0x1400075c0
   140007337:	mov    r12d,DWORD PTR [rbp-0x39]
   14000733b:	xor    r8d,r8d
   14000733e:	mov    rcx,QWORD PTR [rbx+0x48]
   140007342:	mov    edx,0x3ec
   140007347:	sub    r12d,DWORD PTR [rbp-0x41]
   14000734b:	mov    r14d,edi
   14000734e:	call   0x14000d6ec
   140007353:	mov    r13,rax
   140007356:	test   rax,rax
   140007359:	je     0x140007422
   14000735f:	lea    r8,[rbp-0x59]
   140007363:	mov    rcx,rax
   140007366:	lea    rdx,[rbp-0x21]
   14000736a:	call   0x14000c8e8
   14000736f:	mov    edx,DWORD PTR [rbp-0x59]
   140007372:	test   edx,edx
   140007374:	js     0x140007404
   14000737a:	mov    r9d,DWORD PTR [rbp-0x19]
   14000737e:	mov    edi,DWORD PTR [rbp-0x15]
   140007381:	sub    r9d,DWORD PTR [rbp-0x21]
   140007385:	sub    edi,DWORD PTR [rbp-0x1d]
   140007388:	cmp    r9d,edi
   14000738b:	je     0x1400073ca
   14000738d:	mov    rcx,QWORD PTR [rbx+0x68]
   140007391:	test   rcx,rcx
   140007394:	je     0x1400073ca
   140007396:	xorps  xmm0,xmm0
   140007399:	lea    rdx,[rbp-0x31]
   14000739d:	movdqu XMMWORD PTR [rbp-0x31],xmm0
   1400073a2:	call   0x1400111e0
   1400073a7:	mov    eax,DWORD PTR [rbp-0x25]
   1400073aa:	sub    eax,DWORD PTR [rbp-0x2d]
   1400073ad:	mov    r9d,DWORD PTR [rbp-0x29]
   1400073b1:	add    eax,0x6
   1400073b4:	cmp    edi,eax
   1400073b6:	cmovg  eax,edi
   1400073b9:	sub    r9d,DWORD PTR [rbp-0x31]
   1400073bd:	add    r9d,0x6
   1400073c1:	mov    edi,eax
   1400073c3:	cmp    eax,r9d
   1400073c6:	cmovg  r9d,eax
   1400073ca:	lea    rax,[rbp-0x59]
   1400073ce:	mov    r15d,r12d
   1400073d1:	mov    QWORD PTR [rsp+0x30],rax
   1400073d6:	sub    r15d,r9d
   1400073d9:	mov    edx,r15d
   1400073dc:	mov    DWORD PTR [rsp+0x28],0x1
   1400073e4:	xor    r8d,r8d
   1400073e7:	mov    DWORD PTR [rsp+0x20],edi
   1400073eb:	mov    rcx,r13
   1400073ee:	call   0x14000d860
   1400073f3:	mov    edx,DWORD PTR [rbp-0x59]
   1400073f6:	test   edx,edx
   1400073f8:	js     0x1400073fe
   1400073fa:	lea    esi,[r15-0xa]
   1400073fe:	mov    r15d,0xa
   140007404:	mov    eax,DWORD PTR [rbp-0x55]
   140007407:	mov    ecx,edx
   140007409:	test   eax,eax
   14000740b:	cmovne ecx,eax
   14000740e:	mov    DWORD PTR [rbp-0x55],ecx
   140007411:	test   edx,edx
   140007413:	jns    0x140007422
   140007415:	mov    eax,r12d
   140007418:	cdq    
   140007419:	sub    eax,edx
   14000741b:	sar    eax,1
   14000741d:	mov    esi,eax
   14000741f:	sub    esi,r15d
   140007422:	mov    rcx,QWORD PTR [rbx+0x48]
   140007426:	lea    r8,[rbp-0x59]
   14000742a:	mov    r12d,0x408
   140007430:	mov    edx,r12d
   140007433:	call   0x14000d6ec
   140007438:	mov    rdi,rax
   14000743b:	test   rax,rax
   14000743e:	je     0x14000748d
   140007440:	mov    rdx,QWORD PTR [rbx+0x48]
   140007444:	lea    r9,[rbp-0x11]
   140007448:	mov    r8d,r12d
   14000744b:	call   0x1400029f8
   140007450:	mov    DWORD PTR [rbp-0x59],eax
   140007453:	mov    ecx,eax
   140007455:	test   eax,eax
   140007457:	js     0x140007490
   140007459:	mov    ecx,DWORD PTR [rbp-0x11]
   14000745c:	mov    r9d,esi
   14000745f:	xor    r8d,r8d
   140007462:	lea    eax,[rcx+rcx*4]
   140007465:	mov    rcx,rdi
   140007468:	cdq    
   140007469:	sub    eax,edx
   14000746b:	xor    edx,edx
   14000746d:	sar    eax,1
   14000746f:	mov    r14d,eax
   140007472:	lea    rax,[rbp-0x59]
   140007476:	mov    QWORD PTR [rsp+0x30],rax
   14000747b:	mov    DWORD PTR [rsp+0x28],0x1
   140007483:	mov    DWORD PTR [rsp+0x20],r14d
   140007488:	call   0x14000d860
   14000748d:	mov    ecx,DWORD PTR [rbp-0x59]
   140007490:	mov    eax,DWORD PTR [rbp-0x55]
   140007493:	test   eax,eax
   140007495:	cmovne ecx,eax
   140007498:	mov    DWORD PTR [rbp-0x55],ecx
   14000749b:	test   ecx,ecx
   14000749d:	js     0x14000754b
   1400074a3:	mov    rdx,QWORD PTR [rbx+0x48]
   1400074a7:	lea    r9,[rbp-0x11]
   1400074ab:	mov    r8d,0x3e9
   1400074b1:	call   0x1400029f8
   1400074b6:	test   eax,eax
   1400074b8:	mov    DWORD PTR [rbp-0x59],eax
   1400074bb:	lea    rdi,[rip+0x1063e]        # 0x140017b00
   1400074c2:	cmovns r15d,DWORD PTR [rbp-0x11]
   1400074c7:	mov    eax,r15d
   1400074ca:	cdq    
   1400074cb:	sub    eax,edx
   1400074cd:	sar    eax,1
   1400074cf:	mov    r12d,eax
   1400074d2:	imul   eax,r15d,0x7
   1400074d6:	cdq    
   1400074d7:	sub    eax,edx
   1400074d9:	sar    eax,1
   1400074db:	mov    r15d,eax
   1400074de:	mov    edx,DWORD PTR [rdi]
   1400074e0:	lea    r8,[rbp-0x59]
   1400074e4:	mov    rcx,QWORD PTR [rbx+0x48]
   1400074e8:	call   0x14000d6ec
   1400074ed:	mov    ecx,DWORD PTR [rbp-0x55]
   1400074f0:	test   ecx,ecx
   1400074f2:	mov    edx,DWORD PTR [rbp-0x59]
   1400074f5:	cmovne edx,ecx
   1400074f8:	mov    DWORD PTR [rbp-0x55],edx
   1400074fb:	test   rax,rax
   1400074fe:	je     0x140007538
   140007500:	lea    rcx,[rbp-0x59]
   140007504:	mov    r9d,esi
   140007507:	mov    QWORD PTR [rsp+0x30],rcx
   14000750c:	sub    r9d,r12d
   14000750f:	mov    DWORD PTR [rsp+0x28],0x1
   140007517:	mov    rcx,rax
   14000751a:	mov    r8d,r14d
   14000751d:	mov    DWORD PTR [rsp+0x20],r15d
   140007522:	mov    edx,r12d
   140007525:	call   0x14000d860
   14000752a:	mov    eax,DWORD PTR [rbp-0x55]
   14000752d:	test   eax,eax
   14000752f:	mov    ecx,DWORD PTR [rbp-0x59]
   140007532:	cmovne ecx,eax
   140007535:	mov    DWORD PTR [rbp-0x55],ecx
   140007538:	add    r14d,r15d
   14000753b:	lea    rax,[rip+0x105ca]        # 0x140017b0c
   140007542:	add    rdi,0x4
   140007546:	cmp    rdi,rax
   140007549:	jl     0x1400074de
   14000754b:	mov    rcx,QWORD PTR [rbx+0x48]
   14000754f:	mov    esi,0x407
   140007554:	mov    edx,esi
   140007556:	xor    r8d,r8d
   140007559:	call   0x14000d6ec
   14000755e:	mov    rdi,rax
   140007561:	test   rax,rax
   140007564:	je     0x1400075c0
   140007566:	mov    rdx,QWORD PTR [rbx+0x48]
   14000756a:	lea    r9,[rbp-0x11]
   14000756e:	mov    r8d,esi
   140007571:	call   0x1400029f8
   140007576:	mov    r8d,DWORD PTR [rbp-0x35]
   14000757a:	test   eax,eax
   14000757c:	mov    r9d,DWORD PTR [rbp-0x39]
   140007580:	mov    ecx,0x1e
   140007585:	cmovns ecx,DWORD PTR [rbp-0x11]
   140007589:	xor    edx,edx
   14000758b:	sub    r9d,DWORD PTR [rbp-0x41]
   14000758f:	sub    r8d,ecx
   140007592:	mov    DWORD PTR [rbp-0x59],eax
   140007595:	lea    rax,[rbp-0x59]
   140007599:	mov    QWORD PTR [rsp+0x30],rax
   14000759e:	mov    DWORD PTR [rsp+0x28],0x1
   1400075a6:	mov    DWORD PTR [rsp+0x20],ecx
   1400075aa:	mov    rcx,rdi
   1400075ad:	call   0x14000d860
   1400075b2:	mov    eax,DWORD PTR [rbp-0x55]
   1400075b5:	test   eax,eax
   1400075b7:	mov    ecx,DWORD PTR [rbp-0x59]
   1400075ba:	cmovne ecx,eax
   1400075bd:	mov    DWORD PTR [rbp-0x55],ecx
   1400075c0:	lea    rcx,[rbp-0x51]
   1400075c4:	call   0x14000bf98
   1400075c9:	mov    rcx,QWORD PTR [rbp+0x2f]
   1400075cd:	xor    rcx,rsp
   1400075d0:	call   0x1400146a0
   1400075d5:	lea    r11,[rsp+0xd0]
   1400075dd:	mov    rbx,QWORD PTR [r11+0x38]
   1400075e1:	mov    rsi,QWORD PTR [r11+0x40]
   1400075e5:	mov    rdi,QWORD PTR [r11+0x48]
   1400075e9:	mov    rsp,r11
   1400075ec:	pop    r15
   1400075ee:	pop    r14
   1400075f0:	pop    r13
   1400075f2:	pop    r12
   1400075f4:	pop    rbp
   1400075f5:	ret    
   1400075f6:	int3   
   1400075f7:	int3   
   1400075f8:	int3   
   1400075f9:	int3   
   1400075fa:	int3   
   1400075fb:	int3   
   1400075fc:	int3   
   1400075fd:	int3   
   1400075fe:	int3   
   1400075ff:	int3   
   140007600:	rex push rbx
   140007602:	sub    rsp,0x30
   140007606:	mov    rbx,rcx
   140007609:	lea    rdx,[rip+0x10418]        # 0x140017a28
   140007610:	lea    rcx,[rsp+0x20]
   140007615:	xor    r8d,r8d
   140007618:	call   0x14000bf4c
   14000761d:	mov    rcx,rbx
   140007620:	call   0x1400072b8
   140007625:	lea    rcx,[rsp+0x20]
   14000762a:	call   0x14000bf98
   14000762f:	xor    eax,eax
   140007631:	add    rsp,0x30
   140007635:	pop    rbx
   140007636:	ret    
   140007637:	int3   
   140007638:	int3   
   140007639:	int3   
   14000763a:	int3   
   14000763b:	int3   
   14000763c:	int3   
   14000763d:	int3   
   14000763e:	int3   
   14000763f:	int3   
   140007640:	mov    rax,rsp
   140007643:	push   rbx
   140007644:	sub    rsp,0x40
   140007648:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140007650:	mov    rbx,rcx
   140007653:	and    DWORD PTR [rax+0x8],0x0
   140007657:	lea    r8,[rax+0x8]
   14000765b:	lea    rdx,[rip+0x103e6]        # 0x140017a48
   140007662:	lea    rcx,[rax-0x20]
   140007666:	call   0x14000bf4c
   14000766b:	nop
   14000766c:	mov    rcx,QWORD PTR [rbx+0x50]
   140007670:	call   0x1400012f8
   140007675:	mov    DWORD PTR [rsp+0x50],eax
   140007679:	mov    rcx,rbx
   14000767c:	call   0x140002b70
   140007681:	xor    r8d,r8d
   140007684:	xor    edx,edx
   140007686:	mov    rcx,rbx
   140007689:	call   0x140006440
   14000768e:	nop
   14000768f:	lea    rcx,[rsp+0x28]
   140007694:	call   0x14000bf98
   140007699:	xor    eax,eax
   14000769b:	add    rsp,0x40
   14000769f:	pop    rbx
   1400076a0:	ret    
   1400076a1:	int3   
   1400076a2:	int3   
   1400076a3:	int3   
   1400076a4:	int3   
   1400076a5:	int3   
   1400076a6:	int3   
   1400076a7:	int3   
   1400076a8:	mov    rax,rsp
   1400076ab:	mov    QWORD PTR [rax+0x10],rbx
   1400076af:	mov    QWORD PTR [rax+0x18],rdi
   1400076b3:	mov    QWORD PTR [rax+0x20],r14
   1400076b7:	push   rbp
   1400076b8:	lea    rbp,[rax-0x5b8]
   1400076bf:	sub    rsp,0x6b0
   1400076c6:	mov    rax,QWORD PTR [rip+0x16943]        # 0x14001e010
   1400076cd:	xor    rax,rsp
   1400076d0:	mov    QWORD PTR [rbp+0x5a0],rax
   1400076d7:	mov    rdi,rcx
   1400076da:	mov    DWORD PTR [rsp+0x44],0x80004005
   1400076e2:	lea    rcx,[rsp+0x48]
   1400076e7:	lea    r8,[rsp+0x44]
   1400076ec:	lea    rdx,[rip+0x1037d]        # 0x140017a70
   1400076f3:	call   0x14000bf4c
   1400076f8:	mov    rcx,QWORD PTR [rdi+0x48]
   1400076fc:	lea    rdx,[rsp+0x70]
   140007701:	xor    r9d,r9d
   140007704:	lea    r8d,[r9+0x25]
   140007708:	call   QWORD PTR [rip+0xebaa]        # 0x1400162b8
   14000770e:	test   eax,eax
   140007710:	je     0x140007886
   140007716:	and    DWORD PTR [rsp+0x40],0x0
   14000771b:	lea    r8,[rsp+0x40]
   140007720:	lea    rdx,[rip+0x10b91]        # 0x1400182b8
   140007727:	lea    rcx,[rsp+0x58]
   14000772c:	call   0x14000bf4c
   140007731:	lea    r8,[rip+0x10368]        # 0x140017aa0
   140007738:	mov    edx,0x104
   14000773d:	lea    rcx,[rsp+0x70]
   140007742:	call   0x1400061d8
   140007747:	mov    DWORD PTR [rsp+0x40],eax
   14000774b:	mov    ebx,eax
   14000774d:	lea    r14,[rip+0x168cc]        # 0x14001e020
   140007754:	test   eax,eax
   140007756:	jns    0x140007786
   140007758:	mov    rcx,QWORD PTR [rip+0x168c1]        # 0x14001e020
   14000775f:	cmp    rcx,r14
   140007762:	je     0x140007786
   140007764:	test   BYTE PTR [rcx+0x1c],0x4
   140007768:	je     0x140007786
   14000776a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000776e:	lea    r8,[rip+0x10c43]        # 0x1400183b8
   140007775:	mov    edx,0x45
   14000777a:	mov    r9d,eax
   14000777d:	call   0x140001228
   140007782:	mov    ebx,DWORD PTR [rsp+0x40]
   140007786:	lea    rcx,[rsp+0x58]
   14000778b:	call   0x14000bf98
   140007790:	mov    DWORD PTR [rsp+0x44],ebx
   140007794:	test   ebx,ebx
   140007796:	js     0x140007891
   14000779c:	mov    rcx,QWORD PTR [rip+0x1687d]        # 0x14001e020
   1400077a3:	lea    rbx,[rip+0x103ae]        # 0x140017b58
   1400077aa:	cmp    rcx,r14
   1400077ad:	je     0x1400077d1
   1400077af:	test   DWORD PTR [rcx+0x1c],0x2000
   1400077b6:	je     0x1400077d1
   1400077b8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400077bc:	mov    edx,0x15
   1400077c1:	mov    r8,rbx
   1400077c4:	mov    DWORD PTR [rsp+0x38],0xfb6
   1400077cc:	call   0x140002ff0
   1400077d1:	mov    DWORD PTR [rsp+0x28],0x5
   1400077d9:	lea    r9,[rip+0x102e0]        # 0x140017ac0
   1400077e0:	and    QWORD PTR [rsp+0x20],0x0
   1400077e6:	lea    r8,[rsp+0x70]
   1400077eb:	xor    edx,edx
   1400077ed:	xor    ecx,ecx
   1400077ef:	call   QWORD PTR [rip+0xeabb]        # 0x1400162b0
   1400077f5:	cmp    rax,0x20
   1400077f9:	jg     0x140007836
   1400077fb:	movzx  r9d,ax
   1400077ff:	or     r9d,0x80070000
   140007806:	test   eax,eax
   140007808:	cmovle r9d,eax
   14000780c:	mov    DWORD PTR [rsp+0x44],r9d
   140007811:	mov    rcx,QWORD PTR [rip+0x16808]        # 0x14001e020
   140007818:	cmp    rcx,r14
   14000781b:	je     0x140007886
   14000781d:	test   BYTE PTR [rcx+0x1c],0x4
   140007821:	je     0x140007886
   140007823:	mov    rcx,QWORD PTR [rcx+0x10]
   140007827:	mov    edx,0x16
   14000782c:	mov    r8,rbx
   14000782f:	call   0x140001228
   140007834:	jmp    0x140007886
   140007836:	mov    rcx,QWORD PTR [rip+0x167e3]        # 0x14001e020
   14000783d:	mov    r8,QWORD PTR [rcx+0x10]
   140007841:	test   r8,r8
   140007844:	je     0x14000785a
   140007846:	mov    r9b,0x2
   140007849:	mov    edx,0x410
   14000784e:	call   0x140002f4c
   140007853:	mov    rcx,QWORD PTR [rip+0x167c6]        # 0x14001e020
   14000785a:	cmp    rcx,r14
   14000785d:	je     0x140007881
   14000785f:	test   DWORD PTR [rcx+0x1c],0x2000
   140007866:	je     0x140007881
   140007868:	mov    rcx,QWORD PTR [rcx+0x10]
   14000786c:	mov    edx,0x17
   140007871:	mov    r8,rbx
   140007874:	mov    DWORD PTR [rsp+0x38],0xfb7
   14000787c:	call   0x140002ff0
   140007881:	and    DWORD PTR [rsp+0x44],0x0
   140007886:	cmp    DWORD PTR [rsp+0x44],0x0
   14000788b:	jge    0x140007918
   140007891:	mov    rcx,QWORD PTR [rdi+0x50]
   140007895:	and    DWORD PTR [rsp+0x40],0x0
   14000789a:	call   0x140001a3c
   14000789f:	mov    r9d,0x104
   1400078a5:	lea    r8,[rbp+0x180]
   1400078ac:	mov    rcx,rax
   1400078af:	lea    rax,[rsp+0x40]
   1400078b4:	mov    QWORD PTR [rsp+0x20],rax
   1400078b9:	lea    edx,[r9-0x7a]
   1400078bd:	call   0x14000ce44
   1400078c2:	cmp    DWORD PTR [rsp+0x40],0x0
   1400078c7:	jl     0x140007918
   1400078c9:	mov    rcx,QWORD PTR [rdi+0x50]
   1400078cd:	call   0x140001a3c
   1400078d2:	mov    r9d,0x104
   1400078d8:	lea    r8,[rbp+0x390]
   1400078df:	mov    rcx,rax
   1400078e2:	lea    rax,[rsp+0x40]
   1400078e7:	mov    QWORD PTR [rsp+0x20],rax
   1400078ec:	lea    edx,[r9-0x79]
   1400078f0:	call   0x14000ce44
   1400078f5:	cmp    DWORD PTR [rsp+0x40],0x0
   1400078fa:	jl     0x140007918
   1400078fc:	mov    r9d,0x10
   140007902:	lea    r8,[rbp+0x180]
   140007909:	lea    rdx,[rbp+0x390]
   140007910:	xor    ecx,ecx
   140007912:	call   QWORD PTR [rip+0xea40]        # 0x140016358
   140007918:	mov    ebx,DWORD PTR [rsp+0x44]
   14000791c:	lea    rcx,[rsp+0x48]
   140007921:	call   0x14000bf98
   140007926:	mov    eax,ebx
   140007928:	mov    rcx,QWORD PTR [rbp+0x5a0]
   14000792f:	xor    rcx,rsp
   140007932:	call   0x1400146a0
   140007937:	lea    r11,[rsp+0x6b0]
   14000793f:	mov    rbx,QWORD PTR [r11+0x18]
   140007943:	mov    rdi,QWORD PTR [r11+0x20]
   140007947:	mov    r14,QWORD PTR [r11+0x28]
   14000794b:	mov    rsp,r11
   14000794e:	pop    rbp
   14000794f:	ret    
   140007950:	int3   
   140007951:	int3   
   140007952:	int3   
   140007953:	int3   
   140007954:	int3   
   140007955:	int3   
   140007956:	int3   
   140007957:	int3   
   140007958:	rex push rbp
   14000795a:	push   r14
   14000795c:	push   r15
   14000795e:	lea    rbp,[rsp-0x1000]
   140007966:	mov    eax,0x1100
   14000796b:	call   0x140015130
   140007970:	sub    rsp,rax
   140007973:	mov    QWORD PTR [rbp-0x80],0xfffffffffffffffe
   14000797b:	mov    QWORD PTR [rsp+0x1128],rbx
   140007983:	mov    QWORD PTR [rsp+0x1130],rsi
   14000798b:	mov    QWORD PTR [rsp+0x1138],rdi
   140007993:	mov    rax,QWORD PTR [rip+0x16676]        # 0x14001e010
   14000799a:	xor    rax,rsp
   14000799d:	mov    QWORD PTR [rbp+0xff0],rax
   1400079a4:	mov    rbx,rcx
   1400079a7:	xor    r14d,r14d
   1400079aa:	mov    DWORD PTR [rsp+0x20],r14d
   1400079af:	lea    r8,[rsp+0x20]
   1400079b4:	lea    rdx,[rip+0x1011d]        # 0x140017ad8
   1400079bb:	lea    rcx,[rsp+0x70]
   1400079c0:	call   0x14000bf4c
   1400079c5:	nop
   1400079c6:	mov    WORD PTR [rbp-0x10],r14w
   1400079cb:	xor    edx,edx
   1400079cd:	mov    r8d,0xffe
   1400079d3:	lea    rcx,[rbp-0xe]
   1400079d7:	call   0x140014b26
   1400079dc:	call   0x140011f4c
   1400079e1:	mov    edi,eax
   1400079e3:	mov    esi,r14d
   1400079e6:	cmp    DWORD PTR [rbx+0x78],r14d
   1400079ea:	setne  sil
   1400079ee:	lea    r15d,[r14+0x1]
   1400079f2:	test   esi,esi
   1400079f4:	jne    0x140007a58
   1400079f6:	lea    rcx,[rbp-0x70]
   1400079fa:	call   0x14000e1c4
   1400079ff:	nop
   140007a00:	lea    rcx,[rbp-0x70]
   140007a04:	call   0x14000f1c4
   140007a09:	lea    rcx,[rbp-0x70]
   140007a0d:	call   0x14000f304
   140007a12:	mov    r8d,edi
   140007a15:	lea    rdx,[rbp-0x70]
   140007a19:	mov    rcx,QWORD PTR [rbx+0x68]
   140007a1d:	call   0x1400101d0
   140007a22:	mov    DWORD PTR [rsp+0x20],eax
   140007a26:	test   eax,eax
   140007a28:	js     0x140007a36
   140007a2a:	mov    edx,r15d
   140007a2d:	mov    rcx,QWORD PTR [rbx+0x68]
   140007a31:	call   0x140011fe0
   140007a36:	mov    r9d,r15d
   140007a39:	mov    r8d,0x800
   140007a3f:	lea    rdx,[rbp-0x10]
   140007a43:	mov    rcx,QWORD PTR [rbx+0x68]
   140007a47:	call   0x1400120a0
   140007a4c:	nop
   140007a4d:	lea    rcx,[rbp-0x70]
   140007a51:	call   0x14000e288
   140007a56:	jmp    0x140007a91
   140007a58:	lea    rdx,[rbx+0x70]
   140007a5c:	mov    r8d,eax
   140007a5f:	mov    rcx,QWORD PTR [rbx+0x68]
   140007a63:	call   0x1400101d0
   140007a68:	mov    DWORD PTR [rsp+0x20],eax
   140007a6c:	test   eax,eax
   140007a6e:	js     0x140007a91
   140007a70:	xor    edx,edx
   140007a72:	mov    rcx,QWORD PTR [rbx+0x68]
   140007a76:	call   0x140011fe0
   140007a7b:	xor    r9d,r9d
   140007a7e:	mov    r8d,0x800
   140007a84:	lea    rdx,[rbp-0x10]
   140007a88:	mov    rcx,QWORD PTR [rbx+0x68]
   140007a8c:	call   0x1400120a0
   140007a91:	lea    r8,[rbp-0x10]
   140007a95:	mov    edx,0x3ec
   140007a9a:	mov    rcx,QWORD PTR [rbx+0x48]
   140007a9e:	call   0x14000d7ac
   140007aa3:	mov    edi,DWORD PTR [rsp+0x20]
   140007aa7:	test   edi,edi
   140007aa9:	js     0x140007b93
   140007aaf:	mov    DWORD PTR [rsp+0x30],0x2a3
   140007ab7:	mov    eax,DWORD PTR [rsp+0x34]
   140007abb:	and    eax,0xfffffffe
   140007abe:	and    esi,r15d
   140007ac1:	or     eax,esi
   140007ac3:	or     eax,0xa
   140007ac6:	mov    DWORD PTR [rsp+0x34],eax
   140007aca:	mov    DWORD PTR [rsp+0x68],0x2
   140007ad2:	mov    edi,r14d
   140007ad5:	test   edi,edi
   140007ad7:	je     0x140007af6
   140007ad9:	jle    0x140007b03
   140007adb:	cmp    edi,0x3
   140007ade:	jle    0x140007ae7
   140007ae0:	cmp    edi,0x7
   140007ae3:	jle    0x140007af6
   140007ae5:	jmp    0x140007b03
   140007ae7:	mov    DWORD PTR [rsp+0x48],r15d
   140007aec:	mov    DWORD PTR [rsp+0x50],0x9
   140007af4:	jmp    0x140007b03
   140007af6:	mov    DWORD PTR [rsp+0x48],0x3
   140007afe:	mov    DWORD PTR [rsp+0x50],r15d
   140007b03:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140007b08:	movaps XMMWORD PTR [rbp-0x70],xmm0
   140007b0c:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140007b11:	movaps XMMWORD PTR [rbp-0x60],xmm0
   140007b15:	movaps xmm1,XMMWORD PTR [rsp+0x50]
   140007b1a:	movaps XMMWORD PTR [rbp-0x50],xmm1
   140007b1e:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140007b23:	movaps XMMWORD PTR [rbp-0x40],xmm0
   140007b27:	lea    r8,[rbp-0x70]
   140007b2b:	mov    edx,edi
   140007b2d:	mov    rcx,QWORD PTR [rbx+0x68]
   140007b31:	call   0x14000fe20
   140007b36:	add    edi,r15d
   140007b39:	cmp    edi,0x8
   140007b3c:	jl     0x140007ad5
   140007b3e:	xor    r8d,r8d
   140007b41:	mov    edx,0x3ec
   140007b46:	mov    rcx,QWORD PTR [rbx+0x48]
   140007b4a:	call   0x14000d6ec
   140007b4f:	mov    rdi,rax
   140007b52:	lea    rdx,[rsp+0x20]
   140007b57:	mov    rcx,rax
   140007b5a:	call   0x14000c188
   140007b5f:	mov    rsi,rax
   140007b62:	mov    rdx,rax
   140007b65:	mov    rcx,QWORD PTR [rbx+0x68]
   140007b69:	call   0x140011348
   140007b6e:	test   rsi,rsi
   140007b71:	je     0x140007b81
   140007b73:	xor    r8d,r8d
   140007b76:	mov    rdx,rsi
   140007b79:	mov    rcx,rdi
   140007b7c:	call   0x14000c314
   140007b81:	mov    r8d,r15d
   140007b84:	xor    edx,edx
   140007b86:	mov    rcx,rdi
   140007b89:	call   QWORD PTR [rip+0xe821]        # 0x1400163b0
   140007b8f:	mov    edi,DWORD PTR [rsp+0x20]
   140007b93:	lea    rcx,[rsp+0x70]
   140007b98:	call   0x14000bf98
   140007b9d:	mov    eax,edi
   140007b9f:	mov    rcx,QWORD PTR [rbp+0xff0]
   140007ba6:	xor    rcx,rsp
   140007ba9:	call   0x1400146a0
   140007bae:	lea    r11,[rsp+0x1100]
   140007bb6:	mov    rbx,QWORD PTR [r11+0x28]
   140007bba:	mov    rsi,QWORD PTR [r11+0x30]
   140007bbe:	mov    rdi,QWORD PTR [r11+0x38]
   140007bc2:	mov    rsp,r11
   140007bc5:	pop    r15
   140007bc7:	pop    r14
   140007bc9:	pop    rbp
   140007bca:	ret    
   140007bcb:	int3   
   140007bcc:	int3   
   140007bcd:	int3   
   140007bce:	int3   
   140007bcf:	int3   
   140007bd0:	int3   
   140007bd1:	int3   
   140007bd2:	int3   
   140007bd3:	int3   
   140007bd4:	mov    QWORD PTR [rsp+0x10],rbx
   140007bd9:	mov    QWORD PTR [rsp+0x8],rcx
   140007bde:	push   rdi
   140007bdf:	sub    rsp,0x30
   140007be3:	lea    rbx,[rcx+0x10]
   140007be7:	mov    rdi,rcx
   140007bea:	and    DWORD PTR [rbx+0x18],0x0
   140007bee:	lea    rax,[rip+0xf14b]        # 0x140016d40
   140007bf5:	and    DWORD PTR [rbx+0x1c],0x0
   140007bf9:	mov    rcx,rbx
   140007bfc:	and    DWORD PTR [rbx+0x20],0x0
   140007c00:	and    DWORD PTR [rbx+0x100],0xfffffffe
   140007c07:	and    DWORD PTR [rbx+0x168],0x0
   140007c0e:	and    DWORD PTR [rbx+0x16c],0x0
   140007c15:	mov    QWORD PTR [rbx],rax
   140007c18:	movabs rax,0x4020000000000000
   140007c22:	mov    QWORD PTR [rbx+0x8],rax
   140007c26:	movabs rax,0x3f50624dd2f1a9fc
   140007c30:	mov    QWORD PTR [rbx+0x10],rax
   140007c34:	mov    DWORD PTR [rbx+0xb0],0x1
   140007c3e:	call   0x14000b4d4
   140007c43:	movsd  xmm1,QWORD PTR [rip+0x112e5]        # 0x140018f30
   140007c4b:	mov    rcx,rbx
   140007c4e:	call   0x14000bc80
   140007c53:	and    DWORD PTR [rsp+0x40],0x0
   140007c58:	lea    r8,[rsp+0x40]
   140007c5d:	lea    rdx,[rip+0xff04]        # 0x140017b68
   140007c64:	lea    rcx,[rsp+0x20]
   140007c69:	call   0x14000bf4c
   140007c6e:	and    QWORD PTR [rdi],0x0
   140007c72:	lea    rcx,[rsp+0x20]
   140007c77:	and    QWORD PTR [rdi+0x8],0x0
   140007c7c:	and    QWORD PTR [rdi+0x180],0x0
   140007c84:	call   0x14000bf98
   140007c89:	mov    rbx,QWORD PTR [rsp+0x48]
   140007c8e:	mov    rax,rdi
   140007c91:	add    rsp,0x30
   140007c95:	pop    rdi
   140007c96:	ret    
   140007c97:	int3   
   140007c98:	int3   
   140007c99:	int3   
   140007c9a:	int3   
   140007c9b:	int3   
   140007c9c:	int3   
   140007c9d:	int3   
   140007c9e:	int3   
   140007c9f:	int3   
   140007ca0:	mov    rax,rsp
   140007ca3:	mov    QWORD PTR [rax+0x8],rbx
   140007ca7:	mov    QWORD PTR [rax+0x18],rbp
   140007cab:	mov    QWORD PTR [rax+0x20],rsi
   140007caf:	push   rdi
   140007cb0:	sub    rsp,0x30
   140007cb4:	and    DWORD PTR [rax+0x10],0x0
   140007cb8:	mov    rsi,r8
   140007cbb:	mov    rbp,rdx
   140007cbe:	lea    r8,[rax+0x10]
   140007cc2:	mov    rdi,rcx
   140007cc5:	lea    rdx,[rip+0xfecc]        # 0x140017b98
   140007ccc:	lea    rcx,[rax-0x18]
   140007cd0:	call   0x14000bf4c
   140007cd5:	test   rbp,rbp
   140007cd8:	je     0x140007cdf
   140007cda:	test   rsi,rsi
   140007cdd:	jne    0x140007d24
   140007cdf:	mov    ebx,0x80070057
   140007ce4:	mov    DWORD PTR [rsp+0x48],ebx
   140007ce8:	mov    rcx,QWORD PTR [rip+0x16331]        # 0x14001e020
   140007cef:	lea    rax,[rip+0x1632a]        # 0x14001e020
   140007cf6:	cmp    rcx,rax
   140007cf9:	je     0x140007dd6
   140007cff:	test   BYTE PTR [rcx+0x1c],0x4
   140007d03:	je     0x140007dd6
   140007d09:	mov    rcx,QWORD PTR [rcx+0x10]
   140007d0d:	lea    r8,[rip+0xfed4]        # 0x140017be8
   140007d14:	mov    edx,0xa
   140007d19:	mov    r9d,0x80070057
   140007d1f:	call   0x140001228
   140007d24:	mov    ebx,DWORD PTR [rsp+0x48]
   140007d28:	test   ebx,ebx
   140007d2a:	js     0x140007dd6
   140007d30:	mov    rcx,rdi
   140007d33:	mov    QWORD PTR [rdi],rbp
   140007d36:	mov    QWORD PTR [rdi+0x8],rsi
   140007d3a:	call   0x140007e00
   140007d3f:	mov    DWORD PTR [rsp+0x48],eax
   140007d43:	mov    ebx,eax
   140007d45:	test   eax,eax
   140007d47:	js     0x140007dd6
   140007d4d:	xor    ecx,ecx
   140007d4f:	call   QWORD PTR [rip+0xe51b]        # 0x140016270
   140007d55:	mov    rcx,QWORD PTR [rdi+0x8]
   140007d59:	lea    r8,[rip+0x1b0]        # 0x140007f10
   140007d60:	mov    edx,0xfffffffc
   140007d65:	call   QWORD PTR [rip+0xe5a5]        # 0x140016310
   140007d6b:	mov    rsi,rax
   140007d6e:	mov    ebp,0x80070000
   140007d73:	test   rax,rax
   140007d76:	jne    0x140007d8e
   140007d78:	call   QWORD PTR [rip+0xe50a]        # 0x140016288
   140007d7e:	movzx  ebx,ax
   140007d81:	or     ebx,ebp
   140007d83:	test   eax,eax
   140007d85:	cmovle ebx,eax
   140007d88:	mov    DWORD PTR [rsp+0x48],ebx
   140007d8c:	jmp    0x140007d92
   140007d8e:	mov    ebx,DWORD PTR [rsp+0x48]
   140007d92:	test   ebx,ebx
   140007d94:	js     0x140007dd6
   140007d96:	xor    ecx,ecx
   140007d98:	mov    QWORD PTR [rdi+0x180],rsi
   140007d9f:	call   QWORD PTR [rip+0xe4cb]        # 0x140016270
   140007da5:	mov    rcx,QWORD PTR [rdi+0x8]
   140007da9:	mov    r8,rdi
   140007dac:	mov    edx,0xffffffeb
   140007db1:	call   QWORD PTR [rip+0xe559]        # 0x140016310
   140007db7:	test   rax,rax
   140007dba:	jne    0x140007dd2
   140007dbc:	call   QWORD PTR [rip+0xe4c6]        # 0x140016288
   140007dc2:	movzx  ebx,ax
   140007dc5:	or     ebx,ebp
   140007dc7:	test   eax,eax
   140007dc9:	cmovle ebx,eax
   140007dcc:	mov    DWORD PTR [rsp+0x48],ebx
   140007dd0:	jmp    0x140007dd6
   140007dd2:	mov    ebx,DWORD PTR [rsp+0x48]
   140007dd6:	lea    rcx,[rsp+0x20]
   140007ddb:	call   0x14000bf98
   140007de0:	mov    rbp,QWORD PTR [rsp+0x50]
   140007de5:	mov    eax,ebx
   140007de7:	mov    rbx,QWORD PTR [rsp+0x40]
   140007dec:	mov    rsi,QWORD PTR [rsp+0x58]
   140007df1:	add    rsp,0x30
   140007df5:	pop    rdi
   140007df6:	ret    
   140007df7:	int3   
   140007df8:	int3   
   140007df9:	int3   
   140007dfa:	int3   
   140007dfb:	int3   
   140007dfc:	int3   
   140007dfd:	int3   
   140007dfe:	int3   
   140007dff:	int3   
   140007e00:	mov    QWORD PTR [rsp+0x10],rbx
   140007e05:	mov    QWORD PTR [rsp+0x18],rdi
   140007e0a:	push   rbp
   140007e0b:	mov    rbp,rsp
   140007e0e:	sub    rsp,0x40
   140007e12:	and    DWORD PTR [rbp+0x10],0x0
   140007e16:	lea    r8,[rbp+0x10]
   140007e1a:	mov    rdi,rcx
   140007e1d:	lea    rdx,[rip+0xfd94]        # 0x140017bb8
   140007e24:	lea    rcx,[rbp-0x10]
   140007e28:	call   0x14000bf4c
   140007e2d:	and    DWORD PTR [rbp-0x20],0x0
   140007e31:	and    DWORD PTR [rbp-0x1c],0x0
   140007e35:	mov    rcx,QWORD PTR [rbp-0x20]
   140007e39:	shr    rcx,0x20
   140007e3d:	mov    DWORD PTR [rbp-0x14],0x1
   140007e44:	mov    DWORD PTR [rbp-0x18],0x1
   140007e4b:	mov    rax,QWORD PTR [rbp-0x18]
   140007e4f:	shr    rax,0x20
   140007e53:	sub    eax,ecx
   140007e55:	test   eax,eax
   140007e57:	jg     0x140007e9e
   140007e59:	mov    ebx,0x80004005
   140007e5e:	mov    DWORD PTR [rbp+0x10],ebx
   140007e61:	mov    rcx,QWORD PTR [rip+0x161b8]        # 0x14001e020
   140007e68:	lea    rax,[rip+0x161b1]        # 0x14001e020
   140007e6f:	cmp    rcx,rax
   140007e72:	je     0x140007e98
   140007e74:	test   BYTE PTR [rcx+0x1c],0x4
   140007e78:	je     0x140007e98
   140007e7a:	mov    rcx,QWORD PTR [rcx+0x10]
   140007e7e:	lea    r8,[rip+0xfd63]        # 0x140017be8
   140007e85:	mov    edx,0xb
   140007e8a:	mov    r9d,0x80004005
   140007e90:	call   0x140001228
   140007e95:	mov    ebx,DWORD PTR [rbp+0x10]
   140007e98:	test   ebx,ebx
   140007e9a:	js     0x140007ee6
   140007e9c:	jmp    0x140007edc
   140007e9e:	movups xmm0,XMMWORD PTR [rbp-0x20]
   140007ea2:	movabs rax,0x3ff0000000000000
   140007eac:	mov    DWORD PTR [rdi+0x28],0x1
   140007eb3:	mov    QWORD PTR [rdi+0xf0],rax
   140007eba:	xor    ebx,ebx
   140007ebc:	mov    QWORD PTR [rdi+0xf8],rax
   140007ec3:	movabs rax,0x4020000000000000
   140007ecd:	mov    QWORD PTR [rdi+0x18],rax
   140007ed1:	movdqu XMMWORD PTR [rdi+0x100],xmm0
   140007ed9:	mov    DWORD PTR [rbp+0x10],ebx
   140007edc:	mov    DWORD PTR [rdi+0x178],0x1
   140007ee6:	lea    rcx,[rbp-0x10]
   140007eea:	call   0x14000bf98
   140007eef:	mov    rdi,QWORD PTR [rsp+0x60]
   140007ef4:	mov    eax,ebx
   140007ef6:	mov    rbx,QWORD PTR [rsp+0x58]
   140007efb:	add    rsp,0x40
   140007eff:	pop    rbp
   140007f00:	ret    
   140007f01:	int3   
   140007f02:	int3   
   140007f03:	int3   
   140007f04:	int3   
   140007f05:	int3   
   140007f06:	int3   
   140007f07:	int3   
   140007f08:	int3   
   140007f09:	int3   
   140007f0a:	int3   
   140007f0b:	int3   
   140007f0c:	int3   
   140007f0d:	int3   
   140007f0e:	int3   
   140007f0f:	int3   
   140007f10:	rex push rbp
   140007f12:	push   rbx
   140007f13:	push   rsi
   140007f14:	push   rdi
   140007f15:	push   r12
   140007f17:	push   r14
   140007f19:	push   r15
   140007f1b:	lea    rbp,[rsp-0x27]
   140007f20:	sub    rsp,0x100
   140007f27:	mov    rax,QWORD PTR [rip+0x160e2]        # 0x14001e010
   140007f2e:	xor    rax,rsp
   140007f31:	mov    QWORD PTR [rbp+0x17],rax
   140007f35:	mov    edi,edx
   140007f37:	xor    ebx,ebx
   140007f39:	mov    r12,r9
   140007f3c:	mov    r14,r8
   140007f3f:	mov    r15,rcx
   140007f42:	lea    edx,[rbx-0x15]
   140007f45:	call   QWORD PTR [rip+0xe48d]        # 0x1400163d8
   140007f4b:	mov    rsi,rax
   140007f4e:	test   rax,rax
   140007f51:	je     0x140008011
   140007f57:	cmp    edi,0x84
   140007f5d:	je     0x14000800c
   140007f63:	lea    eax,[rdi-0x202]
   140007f69:	cmp    eax,0x6
   140007f6c:	ja     0x140007ff4
   140007f72:	lea    ecx,[rbx+0x49]
   140007f75:	bt     ecx,eax
   140007f78:	jae    0x140007ff4
   140007f7a:	mov    eax,edi
   140007f7c:	sub    eax,0x202
   140007f81:	je     0x140007f8d
   140007f83:	sub    eax,0x3
   140007f86:	je     0x140007f8d
   140007f88:	cmp    eax,0x3
   140007f8b:	jne    0x140007fd4
   140007f8d:	xor    edx,edx
   140007f8f:	lea    rcx,[rbp-0x49]
   140007f93:	lea    r8d,[rdx+0x34]
   140007f97:	call   0x140014b26
   140007f9c:	mov    rax,QWORD PTR [rip+0x1607d]        # 0x14001e020
   140007fa3:	mov    DWORD PTR [rbp-0x19],ebx
   140007fa6:	mov    r8,QWORD PTR [rax+0x10]
   140007faa:	test   r8,r8
   140007fad:	je     0x140007fbf
   140007faf:	mov    edx,0x40f
   140007fb4:	mov    r9d,0x1
   140007fba:	call   0x140002f4c
   140007fbf:	mov    rcx,QWORD PTR [rsi]
   140007fc2:	lea    r9,[rbp-0x49]
   140007fc6:	xor    r8d,r8d
   140007fc9:	mov    edx,0x111
   140007fce:	call   QWORD PTR [rip+0xe334]        # 0x140016308
   140007fd4:	mov    rcx,QWORD PTR [rsi+0x180]
   140007fdb:	mov    r9,r14
   140007fde:	mov    r8d,edi
   140007fe1:	mov    QWORD PTR [rsp+0x20],r12
   140007fe6:	mov    rdx,r15
   140007fe9:	call   QWORD PTR [rip+0xe3f1]        # 0x1400163e0
   140007fef:	mov    rbx,rax
   140007ff2:	jmp    0x140008011
   140007ff4:	cmp    edi,0x244
   140007ffa:	jbe    0x140007fd4
   140007ffc:	cmp    edi,0x247
   140008002:	jbe    0x140008032
   140008004:	cmp    edi,0x24b
   14000800a:	jne    0x140007fd4
   14000800c:	mov    ebx,0x1
   140008011:	mov    rax,rbx
   140008014:	mov    rcx,QWORD PTR [rbp+0x17]
   140008018:	xor    rcx,rsp
   14000801b:	call   0x1400146a0
   140008020:	add    rsp,0x100
   140008027:	pop    r15
   140008029:	pop    r14
   14000802b:	pop    r12
   14000802d:	pop    rdi
   14000802e:	pop    rsi
   14000802f:	pop    rbx
   140008030:	pop    rbp
   140008031:	ret    
   140008032:	movzx  ecx,r14w
   140008036:	lea    rdx,[rsp+0x30]
   14000803b:	call   QWORD PTR [rip+0xe3a7]        # 0x1400163e8
   140008041:	test   eax,eax
   140008043:	je     0x140008011
   140008045:	cmp    DWORD PTR [rsp+0x30],0x3
   14000804a:	jne    0x140007fd4
   14000804c:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140008051:	lea    r8,[rbp-0x49]
   140008055:	movaps xmm1,XMMWORD PTR [rsp+0x40]
   14000805a:	mov    edx,edi
   14000805c:	movaps XMMWORD PTR [rbp-0x49],xmm0
   140008060:	mov    rcx,rsi
   140008063:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140008068:	movaps XMMWORD PTR [rbp-0x39],xmm1
   14000806c:	movaps xmm1,XMMWORD PTR [rbp-0x79]
   140008070:	movaps XMMWORD PTR [rbp-0x29],xmm0
   140008074:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140008078:	movaps XMMWORD PTR [rbp-0x19],xmm1
   14000807c:	movaps xmm1,XMMWORD PTR [rbp-0x59]
   140008080:	movaps XMMWORD PTR [rbp-0x9],xmm0
   140008084:	movaps XMMWORD PTR [rbp+0x7],xmm1
   140008088:	call   0x140008098
   14000808d:	jmp    0x140007fef
   140008092:	int3   
   140008093:	int3   
   140008094:	int3   
   140008095:	int3   
   140008096:	int3   
   140008097:	int3   
   140008098:	mov    rax,rsp
   14000809b:	mov    QWORD PTR [rax+0x10],rbx
   14000809f:	mov    QWORD PTR [rax+0x20],rsi
   1400080a3:	push   rbp
   1400080a4:	push   rdi
   1400080a5:	push   r12
   1400080a7:	push   r14
   1400080a9:	push   r15
   1400080ab:	lea    rbp,[rax-0x5f]
   1400080af:	sub    rsp,0xf0
   1400080b6:	movaps XMMWORD PTR [rax-0x38],xmm6
   1400080ba:	mov    rax,QWORD PTR [rip+0x15f4f]        # 0x14001e010
   1400080c1:	xor    rax,rsp
   1400080c4:	mov    QWORD PTR [rbp+0x1f],rax
   1400080c8:	movsd  xmm6,QWORD PTR [rip+0x10e70]        # 0x140018f40
   1400080d0:	lea    r9,[rsp+0x34]
   1400080d5:	mov    rdi,r8
   1400080d8:	mov    ebx,edx
   1400080da:	mov    rsi,rcx
   1400080dd:	lea    r8,[rsp+0x30]
   1400080e2:	mov    r12d,0x1
   1400080e8:	mov    DWORD PTR [rsp+0x30],r12d
   1400080ed:	mov    rdx,QWORD PTR [rdi+0x30]
   1400080f1:	mov    rcx,QWORD PTR [rdi+0x10]
   1400080f5:	mov    DWORD PTR [rsp+0x34],r12d
   1400080fa:	call   QWORD PTR [rip+0xe250]        # 0x140016350
   140008100:	xor    r15d,r15d
   140008103:	test   eax,eax
   140008105:	je     0x140008125
   140008107:	mov    eax,DWORD PTR [rsp+0x34]
   14000810b:	test   eax,eax
   14000810d:	je     0x140008125
   14000810f:	movd   xmm6,DWORD PTR [rsp+0x30]
   140008115:	movd   xmm0,eax
   140008119:	cvtdq2pd xmm6,xmm6
   14000811d:	cvtdq2pd xmm0,xmm0
   140008121:	divsd  xmm6,xmm0
   140008125:	sub    ebx,0x245
   14000812b:	je     0x140008244
   140008131:	sub    ebx,r12d
   140008134:	je     0x1400081e8
   14000813a:	cmp    ebx,r12d
   14000813d:	jne    0x140008325
   140008143:	mov    r8,QWORD PTR [rdi+0x38]
   140008147:	cmp    DWORD PTR [rsi+0xbc],r15d
   14000814e:	je     0x140008188
   140008150:	mov    edx,DWORD PTR [rdi+0x40]
   140008153:	lea    rcx,[rsi+0x10]
   140008157:	mov    DWORD PTR [rsp+0x28],r15d
   14000815c:	mov    r9,r8
   14000815f:	movsd  QWORD PTR [rsp+0x20],xmm6
   140008165:	call   0x14000b594
   14000816a:	cmp    DWORD PTR [rsi+0x30],r15d
   14000816e:	je     0x140008181
   140008170:	mov    r8d,r12d
   140008173:	lea    rcx,[rsi+0x10]
   140008177:	movaps xmm1,xmm6
   14000817a:	call   0x14000ba70
   14000817f:	jmp    0x140008188
   140008181:	mov    DWORD PTR [rsi+0x164],r15d
   140008188:	mov    QWORD PTR [rsi+0x2c],r15
   14000818c:	movups xmm0,XMMWORD PTR [rsi+0x148]
   140008193:	mov    rax,QWORD PTR [rip+0x15e86]        # 0x14001e020
   14000819a:	movups xmm1,XMMWORD PTR [rsi+0x158]
   1400081a1:	mov    DWORD PTR [rbp+0x17],r12d
   1400081a5:	movups XMMWORD PTR [rbp-0x19],xmm0
   1400081a9:	movups xmm0,XMMWORD PTR [rsi+0x168]
   1400081b0:	movups XMMWORD PTR [rbp-0x9],xmm1
   1400081b4:	movups XMMWORD PTR [rbp+0x7],xmm0
   1400081b8:	mov    r8,QWORD PTR [rax+0x10]
   1400081bc:	test   r8,r8
   1400081bf:	je     0x1400081ce
   1400081c1:	mov    r9b,r12b
   1400081c4:	mov    edx,0x40f
   1400081c9:	call   0x140002f4c
   1400081ce:	mov    rcx,QWORD PTR [rsi]
   1400081d1:	lea    r9,[rbp-0x19]
   1400081d5:	xor    r8d,r8d
   1400081d8:	mov    edx,0x111
   1400081dd:	call   QWORD PTR [rip+0xe125]        # 0x140016308
   1400081e3:	jmp    0x140008325
   1400081e8:	mov    rbx,QWORD PTR [rdi+0x38]
   1400081ec:	add    rsi,0x10
   1400081f0:	mov    edi,DWORD PTR [rdi+0x40]
   1400081f3:	mov    rcx,rsi
   1400081f6:	call   0x14000b4d4
   1400081fb:	mov    r9,rbx
   1400081fe:	mov    DWORD PTR [rsp+0x28],r12d
   140008203:	mov    r8,rbx
   140008206:	movsd  QWORD PTR [rsp+0x20],xmm6
   14000820c:	mov    edx,edi
   14000820e:	mov    DWORD PTR [rsi+0x1c],r12d
   140008212:	mov    rcx,rsi
   140008215:	call   0x14000b594
   14000821a:	cmp    DWORD PTR [rsi+0x20],r15d
   14000821e:	je     0x140008325
   140008224:	cmp    DWORD PTR [rsi+0x168],r15d
   14000822b:	jne    0x140008325
   140008231:	xor    r8d,r8d
   140008234:	movaps xmm1,xmm6
   140008237:	mov    rcx,rsi
   14000823a:	call   0x14000ba70
   14000823f:	jmp    0x140008325
   140008244:	lea    r14,[rdi+0x44]
   140008248:	mov    eax,0x60
   14000824d:	mov    ecx,DWORD PTR [r14]
   140008250:	mul    rcx
   140008253:	mov    rcx,0xffffffffffffffff
   14000825a:	cmovo  rax,rcx
   14000825e:	mov    rcx,rax
   140008261:	call   0x1400142ac
   140008266:	mov    rbx,rax
   140008269:	test   rax,rax
   14000826c:	je     0x140008325
   140008272:	mov    ecx,DWORD PTR [rdi+0x4]
   140008275:	mov    r8,rax
   140008278:	mov    rdx,r14
   14000827b:	call   QWORD PTR [rip+0xe057]        # 0x1400162d8
   140008281:	test   eax,eax
   140008283:	jne    0x1400082a7
   140008285:	call   QWORD PTR [rip+0xdffd]        # 0x140016288
   14000828b:	movzx  ecx,ax
   14000828e:	or     ecx,0x80070000
   140008294:	test   eax,eax
   140008296:	cmovle ecx,eax
   140008299:	mov    eax,0x80004005
   14000829e:	test   ecx,ecx
   1400082a0:	cmovs  eax,ecx
   1400082a3:	test   eax,eax
   1400082a5:	js     0x14000831d
   1400082a7:	mov    eax,DWORD PTR [r14]
   1400082aa:	mov    edi,r12d
   1400082ad:	cmp    eax,r12d
   1400082b0:	jb     0x14000831d
   1400082b2:	sub    eax,edi
   1400082b4:	lea    rcx,[rax+rax*2]
   1400082b8:	shl    rcx,0x5
   1400082bc:	movups xmm1,XMMWORD PTR [rcx+rbx*1+0x30]
   1400082c1:	movups xmm0,XMMWORD PTR [rcx+rbx*1+0x40]
   1400082c6:	movaps XMMWORD PTR [rbp-0x49],xmm1
   1400082ca:	movaps XMMWORD PTR [rbp-0x39],xmm0
   1400082ce:	cmp    DWORD PTR [rsi+0xbc],r15d
   1400082d5:	je     0x140008313
   1400082d7:	mov    r8,QWORD PTR [rbp-0x41]
   1400082db:	lea    rcx,[rsi+0x10]
   1400082df:	mov    edx,DWORD PTR [rbp-0x39]
   1400082e2:	mov    r9,r8
   1400082e5:	mov    DWORD PTR [rsp+0x28],r15d
   1400082ea:	movsd  QWORD PTR [rsp+0x20],xmm6
   1400082f0:	call   0x14000b594
   1400082f5:	cmp    DWORD PTR [rsi+0x30],r15d
   1400082f9:	je     0x140008313
   1400082fb:	cmp    DWORD PTR [rsi+0x178],r15d
   140008302:	jne    0x140008313
   140008304:	xor    r8d,r8d
   140008307:	lea    rcx,[rsi+0x10]
   14000830b:	movaps xmm1,xmm6
   14000830e:	call   0x14000ba70
   140008313:	mov    eax,DWORD PTR [r14]
   140008316:	add    edi,r12d
   140008319:	cmp    edi,eax
   14000831b:	jbe    0x1400082b2
   14000831d:	mov    rcx,rbx
   140008320:	call   0x140014260
   140008325:	xor    eax,eax
   140008327:	mov    rcx,QWORD PTR [rbp+0x1f]
   14000832b:	xor    rcx,rsp
   14000832e:	call   0x1400146a0
   140008333:	lea    r11,[rsp+0xf0]
   14000833b:	mov    rbx,QWORD PTR [r11+0x38]
   14000833f:	mov    rsi,QWORD PTR [r11+0x48]
   140008343:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140008348:	mov    rsp,r11
   14000834b:	pop    r15
   14000834d:	pop    r14
   14000834f:	pop    r12
   140008351:	pop    rdi
   140008352:	pop    rbp
   140008353:	ret    
   140008354:	int3   
   140008355:	int3   
   140008356:	int3   
   140008357:	int3   
   140008358:	int3   
   140008359:	int3   
   14000835a:	int3   
   14000835b:	int3   
   14000835c:	mov    rax,rsp
   14000835f:	mov    QWORD PTR [rax+0x10],rbx
   140008363:	mov    QWORD PTR [rax+0x18],rsi
   140008367:	mov    QWORD PTR [rax+0x20],rdi
   14000836b:	push   rbp
   14000836c:	push   r14
   14000836e:	push   r15
   140008370:	lea    rbp,[rax-0x198]
   140008377:	sub    rsp,0x280
   14000837e:	mov    rax,QWORD PTR [rip+0x15c8b]        # 0x14001e010
   140008385:	xor    rax,rsp
   140008388:	mov    QWORD PTR [rbp+0x170],rax
   14000838f:	mov    r14,rcx
   140008392:	lea    r8,[rsp+0x20]
   140008397:	xor    r15d,r15d
   14000839a:	lea    rcx,[rsp+0x48]
   14000839f:	lea    rdx,[rip+0xf852]        # 0x140017bf8
   1400083a6:	mov    DWORD PTR [rsp+0x20],r15d
   1400083ab:	call   0x14000bf4c
   1400083b0:	xor    r9d,r9d
   1400083b3:	lea    edx,[r15+0x1]
   1400083b7:	xor    r8d,r8d
   1400083ba:	xor    ecx,ecx
   1400083bc:	call   QWORD PTR [rip+0xddc6]        # 0x140016188
   1400083c2:	lea    r8,[rsp+0x24]
   1400083c7:	mov    WORD PTR [rsp+0x60],r15w
   1400083cd:	lea    rcx,[rip+0xf834]        # 0x140017c08
   1400083d4:	mov    DWORD PTR [rsp+0x24],r15d
   1400083d9:	mov    esi,r15d
   1400083dc:	call   0x14000da0c
   1400083e1:	cmp    DWORD PTR [rsp+0x24],r15d
   1400083e6:	jne    0x140008608
   1400083ec:	xor    r8d,r8d
   1400083ef:	lea    rdx,[rip+0x100ba]        # 0x1400184b0
   1400083f6:	lea    rcx,[rsp+0x28]
   1400083fb:	call   0x14000bf4c
   140008400:	lea    rcx,[rsp+0x28]
   140008405:	call   0x14000bf98
   14000840a:	mov    r9d,0x104
   140008410:	lea    r8,[rsp+0x60]
   140008415:	lea    edx,[r15+0x67]
   140008419:	mov    rcx,r14
   14000841c:	call   QWORD PTR [rip+0xe05e]        # 0x140016480
   140008422:	test   eax,eax
   140008424:	je     0x140008608
   14000842a:	lea    rdx,[rsp+0x60]
   14000842f:	xor    ecx,ecx
   140008431:	call   QWORD PTR [rip+0xe041]        # 0x140016478
   140008437:	mov    rbx,rax
   14000843a:	test   rax,rax
   14000843d:	je     0x14000847b
   14000843f:	mov    rcx,rax
   140008442:	call   QWORD PTR [rip+0xe028]        # 0x140016470
   140008448:	lea    eax,[r15+0x3]
   14000844c:	mov    DWORD PTR [rsp+0x28],0x20
   140008454:	mov    DWORD PTR [rsp+0x38],eax
   140008458:	mov    DWORD PTR [rsp+0x3c],eax
   14000845c:	mov    QWORD PTR [rsp+0x30],rbx
   140008461:	call   QWORD PTR [rip+0xe001]        # 0x140016468
   140008467:	lea    rcx,[rsp+0x28]
   14000846c:	mov    DWORD PTR [rsp+0x40],eax
   140008470:	call   QWORD PTR [rip+0xdfea]        # 0x140016460
   140008476:	jmp    0x140008608
   14000847b:	xor    edx,edx
   14000847d:	lea    rcx,[rip+0xf390]        # 0x140017814
   140008484:	call   QWORD PTR [rip+0xdcf6]        # 0x140016180
   14000848a:	mov    DWORD PTR [rsp+0x20],eax
   14000848e:	test   eax,eax
   140008490:	jns    0x1400084c3
   140008492:	mov    rcx,QWORD PTR [rip+0x15b87]        # 0x14001e020
   140008499:	lea    rdx,[rip+0x15b80]        # 0x14001e020
   1400084a0:	cmp    rcx,rdx
   1400084a3:	je     0x1400084c3
   1400084a5:	test   BYTE PTR [rcx+0x1c],0x4
   1400084a9:	je     0x1400084c3
   1400084ab:	mov    rcx,QWORD PTR [rcx+0x10]
   1400084af:	lea    r8,[rip+0xfac2]        # 0x140017f78
   1400084b6:	mov    edx,0xa
   1400084bb:	mov    r9d,eax
   1400084be:	call   0x140001228
   1400084c3:	xor    ecx,ecx
   1400084c5:	mov    esi,0x1
   1400084ca:	call   QWORD PTR [rip+0xe200]        # 0x1400166d0
   1400084d0:	mov    DWORD PTR [rsp+0x20],eax
   1400084d4:	test   eax,eax
   1400084d6:	js     0x140008608
   1400084dc:	movups xmm0,XMMWORD PTR [rip+0xe5ad]        # 0x140016a90
   1400084e3:	lea    rdi,[rip+0x167b6]        # 0x14001eca0
   1400084ea:	movdqu XMMWORD PTR [rip+0x16596],xmm0        # 0x14001ea88
   1400084f2:	cmp    rdi,0xffffffffffffffff
   1400084f6:	je     0x140008523
   1400084f8:	cmp    QWORD PTR [rip+0x167a1],r15        # 0x14001eca0
   1400084ff:	mov    QWORD PTR [rip+0x16692],rdi        # 0x14001eb98
   140008506:	je     0x140008523
   140008508:	mov    rbx,QWORD PTR [rdi+0x40]
   14000850c:	mov    rcx,rbx
   14000850f:	call   QWORD PTR [rip+0xe1e3]        # 0x1400166f8
   140008515:	mov    cl,sil
   140008518:	call   rbx
   14000851a:	lea    rdi,[rdi+0x48]
   14000851e:	cmp    QWORD PTR [rdi],r15
   140008521:	jne    0x140008508
   140008523:	mov    rdi,QWORD PTR [rip+0x16736]        # 0x14001ec60
   14000852a:	mov    rax,QWORD PTR [rip+0x16737]        # 0x14001ec68
   140008531:	jmp    0x140008558
   140008533:	mov    rbx,QWORD PTR [rdi]
   140008536:	test   rbx,rbx
   140008539:	je     0x140008554
   14000853b:	mov    rbx,QWORD PTR [rbx+0x40]
   14000853f:	mov    rcx,rbx
   140008542:	call   QWORD PTR [rip+0xe1b0]        # 0x1400166f8
   140008548:	mov    cl,sil
   14000854b:	call   rbx
   14000854d:	mov    rax,QWORD PTR [rip+0x16714]        # 0x14001ec68
   140008554:	add    rdi,0x8
   140008558:	cmp    rdi,rax
   14000855b:	jb     0x140008533
   14000855d:	mov    rcx,r14
   140008560:	mov    DWORD PTR [rsp+0x20],r15d
   140008565:	call   0x140008648
   14000856a:	mov    rdi,QWORD PTR [rip+0x16627]        # 0x14001eb98
   140008571:	test   eax,eax
   140008573:	mov    esi,r15d
   140008576:	sete   sil
   14000857a:	test   rdi,rdi
   14000857d:	je     0x1400085bd
   14000857f:	jmp    0x1400085b8
   140008581:	mov    r14,QWORD PTR [rdi+0x20]
   140008585:	test   r14,r14
   140008588:	je     0x14000859f
   14000858a:	mov    rax,QWORD PTR [r14]
   14000858d:	mov    rbx,QWORD PTR [rax+0x10]
   140008591:	mov    rcx,rbx
   140008594:	call   QWORD PTR [rip+0xe15e]        # 0x1400166f8
   14000859a:	mov    rcx,r14
   14000859d:	call   rbx
   14000859f:	mov    rbx,QWORD PTR [rdi+0x40]
   1400085a3:	mov    rcx,rbx
   1400085a6:	mov    QWORD PTR [rdi+0x20],r15
   1400085aa:	call   QWORD PTR [rip+0xe148]        # 0x1400166f8
   1400085b0:	xor    ecx,ecx
   1400085b2:	call   rbx
   1400085b4:	add    rdi,0x48
   1400085b8:	cmp    QWORD PTR [rdi],r15
   1400085bb:	jne    0x140008581
   1400085bd:	mov    rdi,QWORD PTR [rip+0x1669c]        # 0x14001ec60
   1400085c4:	mov    rax,QWORD PTR [rip+0x1669d]        # 0x14001ec68
   1400085cb:	jmp    0x1400085f1
   1400085cd:	mov    rbx,QWORD PTR [rdi]
   1400085d0:	test   rbx,rbx
   1400085d3:	je     0x1400085ed
   1400085d5:	mov    rbx,QWORD PTR [rbx+0x40]
   1400085d9:	mov    rcx,rbx
   1400085dc:	call   QWORD PTR [rip+0xe116]        # 0x1400166f8
   1400085e2:	xor    ecx,ecx
   1400085e4:	call   rbx
   1400085e6:	mov    rax,QWORD PTR [rip+0x1667b]        # 0x14001ec68
   1400085ed:	add    rdi,0x8
   1400085f1:	cmp    rdi,rax
   1400085f4:	jb     0x1400085cd
   1400085f6:	lea    rcx,[rip+0x16553]        # 0x14001eb50
   1400085fd:	call   0x140008704
   140008602:	call   QWORD PTR [rip+0xe0d0]        # 0x1400166d8
   140008608:	lea    rcx,[rsp+0x48]
   14000860d:	call   0x14000bf98
   140008612:	mov    eax,esi
   140008614:	mov    rcx,QWORD PTR [rbp+0x170]
   14000861b:	xor    rcx,rsp
   14000861e:	call   0x1400146a0
   140008623:	lea    r11,[rsp+0x280]
   14000862b:	mov    rbx,QWORD PTR [r11+0x28]
   14000862f:	mov    rsi,QWORD PTR [r11+0x30]
   140008633:	mov    rdi,QWORD PTR [r11+0x38]
   140008637:	mov    rsp,r11
   14000863a:	pop    r15
   14000863c:	pop    r14
   14000863e:	pop    rbp
   14000863f:	ret    
   140008640:	int3   
   140008641:	int3   
   140008642:	int3   
   140008643:	int3   
   140008644:	int3   
   140008645:	int3   
   140008646:	int3   
   140008647:	int3   
   140008648:	mov    rax,rsp
   14000864b:	mov    DWORD PTR [rax+0x10],edx
   14000864e:	push   rbp
   14000864f:	lea    rbp,[rax-0x28]
   140008653:	sub    rsp,0x120
   14000865a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140008663:	mov    QWORD PTR [rax+0x8],rbx
   140008667:	mov    rbx,rcx
   14000866a:	lea    rcx,[rbp-0x38]
   14000866e:	call   0x14000e1c4
   140008673:	nop
   140008674:	and    DWORD PTR [rbp+0x38],0x0
   140008678:	lea    r8,[rbp+0x38]
   14000867c:	lea    rdx,[rip+0xe70d]        # 0x140016d90
   140008683:	lea    rcx,[rsp+0x20]
   140008688:	call   0x14000bf4c
   14000868d:	nop
   14000868e:	and    QWORD PTR [rbp-0x50],0x0
   140008693:	and    QWORD PTR [rbp-0x48],0x0
   140008698:	and    QWORD PTR [rbp-0x40],0x0
   14000869d:	mov    QWORD PTR [rsp+0x48],rbx
   1400086a2:	lea    rcx,[rsp+0x40]
   1400086a7:	call   0x1400012f8
   1400086ac:	nop
   1400086ad:	lea    rcx,[rsp+0x20]
   1400086b2:	call   0x14000bf98
   1400086b7:	nop
   1400086b8:	lea    rcx,[rsp+0x40]
   1400086bd:	call   0x140001438
   1400086c2:	mov    ebx,eax
   1400086c4:	xor    r8d,r8d
   1400086c7:	lea    rdx,[rip+0xe6fa]        # 0x140016dc8
   1400086ce:	lea    rcx,[rsp+0x20]
   1400086d3:	call   0x14000bf4c
   1400086d8:	lea    rcx,[rsp+0x20]
   1400086dd:	call   0x14000bf98
   1400086e2:	lea    rcx,[rbp-0x38]
   1400086e6:	call   0x14000e288
   1400086eb:	mov    eax,ebx
   1400086ed:	mov    rbx,QWORD PTR [rsp+0x130]
   1400086f5:	add    rsp,0x120
   1400086fc:	pop    rbp
   1400086fd:	ret    
   1400086fe:	int3   
   1400086ff:	int3   
   140008700:	int3   
   140008701:	int3   
   140008702:	int3   
   140008703:	int3   
   140008704:	mov    QWORD PTR [rsp+0x8],rbx
   140008709:	mov    QWORD PTR [rsp+0x10],rsi
   14000870e:	mov    QWORD PTR [rsp+0x18],rdi
   140008713:	push   r14
   140008715:	sub    rsp,0x20
   140008719:	lea    rsi,[rcx+0x8]
   14000871d:	mov    rdi,rcx
   140008720:	cmp    DWORD PTR [rsi],0x0
   140008723:	je     0x140008795
   140008725:	cmp    QWORD PTR [rcx+0x10],0x0
   14000872a:	je     0x14000876a
   14000872c:	test   rsi,rsi
   14000872f:	je     0x1400087ab
   140008731:	mov    r14,QWORD PTR [rsi+0x8]
   140008735:	test   r14,r14
   140008738:	je     0x140008760
   14000873a:	mov    rbx,QWORD PTR [r14]
   14000873d:	mov    rcx,rbx
   140008740:	call   QWORD PTR [rip+0xdfb2]        # 0x1400166f8
   140008746:	mov    rcx,QWORD PTR [r14+0x8]
   14000874a:	call   rbx
   14000874c:	mov    rbx,QWORD PTR [r14+0x10]
   140008750:	mov    rcx,r14
   140008753:	call   0x140014254
   140008758:	mov    r14,rbx
   14000875b:	test   rbx,rbx
   14000875e:	jne    0x14000873a
   140008760:	and    QWORD PTR [rsi+0x8],0x0
   140008765:	and    QWORD PTR [rdi+0x10],0x0
   14000876a:	mov    r14,QWORD PTR [rdi+0x40]
   14000876e:	test   r14,r14
   140008771:	je     0x140008788
   140008773:	mov    rax,QWORD PTR [r14]
   140008776:	mov    rbx,QWORD PTR [rax+0x10]
   14000877a:	mov    rcx,rbx
   14000877d:	call   QWORD PTR [rip+0xdf75]        # 0x1400166f8
   140008783:	mov    rcx,r14
   140008786:	call   rbx
   140008788:	lea    rcx,[rdi+0x18]
   14000878c:	call   QWORD PTR [rip+0xd9fe]        # 0x140016190
   140008792:	and    DWORD PTR [rsi],0x0
   140008795:	mov    rbx,QWORD PTR [rsp+0x30]
   14000879a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000879f:	mov    rdi,QWORD PTR [rsp+0x40]
   1400087a4:	add    rsp,0x20
   1400087a8:	pop    r14
   1400087aa:	ret    
   1400087ab:	mov    ecx,0xc0000005
   1400087b0:	call   0x1400092d4
   1400087b5:	int3   
   1400087b6:	int3   
   1400087b7:	int3   
   1400087b8:	int3   
   1400087b9:	int3   
   1400087ba:	int3   
   1400087bb:	int3   
   1400087bc:	int3   
   1400087bd:	int3   
   1400087be:	int3   
   1400087bf:	int3   
   1400087c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400087c5:	push   rdi
   1400087c6:	sub    rsp,0x20
   1400087ca:	lea    rax,[rip+0xe50f]        # 0x140016ce0
   1400087d1:	mov    ebx,edx
   1400087d3:	mov    QWORD PTR [rcx],rax
   1400087d6:	mov    rdi,rcx
   1400087d9:	call   0x140008704
   1400087de:	test   bl,0x1
   1400087e1:	je     0x1400087eb
   1400087e3:	mov    rcx,rdi
   1400087e6:	call   0x140014254
   1400087eb:	mov    rax,rdi
   1400087ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400087f3:	add    rsp,0x20
   1400087f7:	pop    rdi
   1400087f8:	ret    
   1400087f9:	int3   
   1400087fa:	int3   
   1400087fb:	int3   
   1400087fc:	int3   
   1400087fd:	int3   
   1400087fe:	int3   
   1400087ff:	int3   
   140008800:	mov    eax,0x1
   140008805:	lock xadd DWORD PTR [rcx+0xc],eax
   14000880a:	inc    eax
   14000880c:	ret    
   14000880d:	int3   
   14000880e:	int3   
   14000880f:	int3   
   140008810:	int3   
   140008811:	int3   
   140008812:	int3   
   140008813:	int3   
   140008814:	int3   
   140008815:	int3   
   140008816:	int3   
   140008817:	int3   
   140008818:	int3   
   140008819:	int3   
   14000881a:	int3   
   14000881b:	int3   
   14000881c:	int3   
   14000881d:	int3   
   14000881e:	int3   
   14000881f:	int3   
   140008820:	or     eax,0xffffffff
   140008823:	lock xadd DWORD PTR [rcx+0xc],eax
   140008828:	dec    eax
   14000882a:	ret    
   14000882b:	int3   
   14000882c:	int3   
   14000882d:	int3   
   14000882e:	int3   
   14000882f:	int3   
   140008830:	int3   
   140008831:	int3   
   140008832:	int3   
   140008833:	int3   
   140008834:	int3   
   140008835:	int3   
   140008836:	int3   
   140008837:	int3   
   140008838:	int3   
   140008839:	int3   
   14000883a:	int3   
   14000883b:	int3   
   14000883c:	int3   
   14000883d:	int3   
   14000883e:	int3   
   14000883f:	int3   
   140008840:	mov    eax,DWORD PTR [rcx+0xc]
   140008843:	ret    
   140008844:	int3   
   140008845:	int3   
   140008846:	int3   
   140008847:	int3   
   140008848:	int3   
   140008849:	int3   
   14000884a:	int3   
   14000884b:	int3   
   14000884c:	int3   
   14000884d:	int3   
   14000884e:	int3   
   14000884f:	int3   
   140008850:	mov    QWORD PTR [rsp+0x8],rbx
   140008855:	mov    QWORD PTR [rsp+0x10],rsi
   14000885a:	push   rdi
   14000885b:	sub    rsp,0x30
   14000885f:	mov    rbx,rdx
   140008862:	test   rdx,rdx
   140008865:	jne    0x14000886e
   140008867:	mov    eax,0x80004003
   14000886c:	jmp    0x1400088be
   14000886e:	xor    esi,esi
   140008870:	lea    rdi,[rcx+0x40]
   140008874:	cmp    QWORD PTR [rdi],rsi
   140008877:	jne    0x14000889e
   140008879:	lea    r9,[rip+0xf3a8]        # 0x140017c28
   140008880:	mov    QWORD PTR [rsp+0x20],rdi
   140008885:	xor    edx,edx
   140008887:	lea    r8d,[rsi+0x1]
   14000888b:	lea    rcx,[rip+0xe20e]        # 0x140016aa0
   140008892:	call   QWORD PTR [rip+0xde48]        # 0x1400166e0
   140008898:	mov    esi,eax
   14000889a:	test   eax,eax
   14000889c:	js     0x1400088bc
   14000889e:	mov    rcx,QWORD PTR [rdi]
   1400088a1:	mov    QWORD PTR [rbx],rcx
   1400088a4:	mov    rdi,QWORD PTR [rdi]
   1400088a7:	mov    rdx,QWORD PTR [rdi]
   1400088aa:	mov    rbx,QWORD PTR [rdx+0x8]
   1400088ae:	mov    rcx,rbx
   1400088b1:	call   QWORD PTR [rip+0xde41]        # 0x1400166f8
   1400088b7:	mov    rcx,rdi
   1400088ba:	call   rbx
   1400088bc:	mov    eax,esi
   1400088be:	mov    rbx,QWORD PTR [rsp+0x40]
   1400088c3:	mov    rsi,QWORD PTR [rsp+0x48]
   1400088c8:	add    rsp,0x30
   1400088cc:	pop    rdi
   1400088cd:	ret    
   1400088ce:	int3   
   1400088cf:	int3   
   1400088d0:	int3   
   1400088d1:	int3   
   1400088d2:	int3   
   1400088d3:	int3   
   1400088d4:	int3   
   1400088d5:	int3   
   1400088d6:	int3   
   1400088d7:	int3   
   1400088d8:	int3   
   1400088d9:	int3   
   1400088da:	int3   
   1400088db:	int3   
   1400088dc:	int3   
   1400088dd:	int3   
   1400088de:	int3   
   1400088df:	int3   
   1400088e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400088e5:	push   rdi
   1400088e6:	sub    rsp,0x20
   1400088ea:	mov    rax,QWORD PTR [rdx]
   1400088ed:	mov    rdi,rdx
   1400088f0:	mov    rbx,QWORD PTR [rax+0x18]
   1400088f4:	mov    rcx,rbx
   1400088f7:	call   QWORD PTR [rip+0xddfb]        # 0x1400166f8
   1400088fd:	lea    r8,[rip+0xf334]        # 0x140017c38
   140008904:	mov    rcx,rdi
   140008907:	lea    rdx,[rip+0xf332]        # 0x140017c40
   14000890e:	mov    rax,rbx
   140008911:	mov    rbx,QWORD PTR [rsp+0x30]
   140008916:	add    rsp,0x20
   14000891a:	pop    rdi
   14000891b:	rex.W jmp rax
   14000891e:	int3   
   14000891f:	int3   
   140008920:	int3   
   140008921:	int3   
   140008922:	int3   
   140008923:	int3   
   140008924:	int3   
   140008925:	int3   
   140008926:	int3   
   140008927:	int3   
   140008928:	int3   
   140008929:	int3   
   14000892a:	int3   
   14000892b:	int3   
   14000892c:	int3   
   14000892d:	int3   
   14000892e:	int3   
   14000892f:	int3   
   140008930:	mov    eax,0x80004005
   140008935:	ret    
   140008936:	int3   
   140008937:	int3   
   140008938:	int3   
   140008939:	int3   
   14000893a:	int3   
   14000893b:	int3   
   14000893c:	mov    QWORD PTR [rsp+0x8],rbx
   140008941:	push   rbp
   140008942:	push   rsi
   140008943:	push   rdi
   140008944:	push   r14
   140008946:	push   r15
   140008948:	lea    rbp,[rsp-0x9d0]
   140008950:	sub    rsp,0xad0
   140008957:	mov    rax,QWORD PTR [rip+0x156b2]        # 0x14001e010
   14000895e:	xor    rax,rsp
   140008961:	mov    QWORD PTR [rbp+0x9c0],rax
   140008968:	xor    r14d,r14d
   14000896b:	mov    edi,edx
   14000896d:	mov    esi,r8d
   140008970:	mov    QWORD PTR [rsp+0x38],r14
   140008975:	lea    rax,[rip+0xe334]        # 0x140016cb0
   14000897c:	mov    QWORD PTR [rsp+0x40],r14
   140008981:	xor    edx,edx
   140008983:	mov    QWORD PTR [rsp+0x30],rax
   140008988:	lea    r8d,[r14+0x28]
   14000898c:	mov    DWORD PTR [rsp+0x48],r14d
   140008991:	lea    rcx,[rsp+0x50]
   140008996:	mov    rbx,r9
   140008999:	call   0x140014b26
   14000899e:	lea    rcx,[rsp+0x50]
   1400089a3:	mov    BYTE PTR [rsp+0x78],r14b
   1400089a8:	call   0x140008ecc
   1400089ad:	test   eax,eax
   1400089af:	js     0x140008a2d
   1400089b1:	mov    BYTE PTR [rsp+0x78],0x1
   1400089b6:	test   rbx,rbx
   1400089b9:	je     0x1400089da
   1400089bb:	jmp    0x1400089d2
   1400089bd:	mov    r8,QWORD PTR [rbx+0x8]
   1400089c1:	lea    rcx,[rsp+0x30]
   1400089c6:	mov    rdx,rax
   1400089c9:	call   0x1400091b0
   1400089ce:	lea    rbx,[rbx+0x10]
   1400089d2:	mov    rax,QWORD PTR [rbx]
   1400089d5:	test   rax,rax
   1400089d8:	jne    0x1400089bd
   1400089da:	mov    rax,QWORD PTR [rsp+0x30]
   1400089df:	mov    rbx,QWORD PTR [rax+0x18]
   1400089e3:	mov    rcx,rbx
   1400089e6:	call   QWORD PTR [rip+0xdd0c]        # 0x1400166f8
   1400089ec:	lea    r8,[rip+0xf245]        # 0x140017c38
   1400089f3:	lea    rdx,[rip+0xf246]        # 0x140017c40
   1400089fa:	lea    rcx,[rsp+0x30]
   1400089ff:	call   rbx
   140008a01:	mov    ebx,eax
   140008a03:	test   eax,eax
   140008a05:	js     0x140008a2f
   140008a07:	mov    rbx,QWORD PTR [rip+0x1619a]        # 0x14001eba8
   140008a0e:	lea    rdx,[rbp-0x80]
   140008a12:	mov    r15d,0x104
   140008a18:	mov    rcx,rbx
   140008a1b:	mov    r8d,r15d
   140008a1e:	call   QWORD PTR [rip+0xd77c]        # 0x1400161a0
   140008a24:	test   eax,eax
   140008a26:	jne    0x140008a61
   140008a28:	call   0x14000929c
   140008a2d:	mov    ebx,eax
   140008a2f:	lea    rcx,[rsp+0x30]
   140008a34:	call   0x140008e24
   140008a39:	mov    eax,ebx
   140008a3b:	mov    rcx,QWORD PTR [rbp+0x9c0]
   140008a42:	xor    rcx,rsp
   140008a45:	call   0x1400146a0
   140008a4a:	mov    rbx,QWORD PTR [rsp+0xb00]
   140008a52:	add    rsp,0xad0
   140008a59:	pop    r15
   140008a5b:	pop    r14
   140008a5d:	pop    rdi
   140008a5e:	pop    rsi
   140008a5f:	pop    rbp
   140008a60:	ret    
   140008a61:	cmp    eax,r15d
   140008a64:	jne    0x140008a6d
   140008a66:	mov    ebx,0x8007007a
   140008a6b:	jmp    0x140008a2f
   140008a6d:	lea    rdx,[rbp-0x80]
   140008a71:	mov    ecx,r14d
   140008a74:	mov    r9d,0x27
   140008a7a:	movzx  r8d,WORD PTR [rdx]
   140008a7e:	test   r8w,r8w
   140008a82:	je     0x140008ab6
   140008a84:	mov    eax,ecx
   140008a86:	mov    WORD PTR [rbp+rax*2+0x190],r8w
   140008a8f:	cmp    r8w,r9w
   140008a93:	jne    0x140008aa8
   140008a95:	cmp    ecx,0x206
   140008a9b:	jae    0x140008aa8
   140008a9d:	inc    ecx
   140008a9f:	mov    WORD PTR [rbp+rcx*2+0x190],r9w
   140008aa8:	add    rdx,0x2
   140008aac:	inc    ecx
   140008aae:	cmp    ecx,0x207
   140008ab4:	jb     0x140008a7a
   140008ab6:	mov    eax,ecx
   140008ab8:	mov    WORD PTR [rbp+rax*2+0x190],r14w
   140008ac1:	test   rbx,rbx
   140008ac4:	je     0x140008adf
   140008ac6:	xor    ecx,ecx
   140008ac8:	call   QWORD PTR [rip+0xd782]        # 0x140016250
   140008ace:	cmp    rbx,rax
   140008ad1:	je     0x140008adf
   140008ad3:	lea    r8,[rbp+0x190]
   140008ada:	jmp    0x140008b71
   140008adf:	mov    r15d,0x22
   140008ae5:	lea    rcx,[rbp+0x190]
   140008aec:	or     rbx,0xffffffffffffffff
   140008af0:	mov    WORD PTR [rbp+0x5a0],r15w
   140008af8:	mov    rax,rbx
   140008afb:	inc    rax
   140008afe:	cmp    WORD PTR [rcx+rax*2],r14w
   140008b03:	jne    0x140008afb
   140008b05:	inc    eax
   140008b07:	lea    r8,[rbp+0x190]
   140008b0e:	movsxd r9,eax
   140008b11:	lea    rcx,[rbp+0x5a2]
   140008b18:	add    r9,r9
   140008b1b:	mov    edx,0x416
   140008b20:	call   QWORD PTR [rip+0xda62]        # 0x140016588
   140008b26:	test   eax,eax
   140008b28:	je     0x140008b34
   140008b2a:	mov    ebx,0x80004005
   140008b2f:	jmp    0x140008a2f
   140008b34:	lea    rax,[rbp+0x5a0]
   140008b3b:	inc    rbx
   140008b3e:	cmp    WORD PTR [rax+rbx*2],r14w
   140008b43:	jne    0x140008b3b
   140008b45:	movsxd rax,ebx
   140008b48:	mov    WORD PTR [rbp+rax*2+0x5a0],r15w
   140008b51:	lea    rax,[rax*2+0x2]
   140008b59:	cmp    rax,0x418
   140008b5f:	jae    0x140008bdb
   140008b61:	mov    WORD PTR [rbp+rax*1+0x5a0],r14w
   140008b6a:	lea    r8,[rbp+0x5a0]
   140008b71:	lea    rdx,[rip+0xf0d8]        # 0x140017c50
   140008b78:	lea    rcx,[rsp+0x30]
   140008b7d:	call   0x1400091b0
   140008b82:	test   eax,eax
   140008b84:	js     0x140008a2d
   140008b8a:	lea    r8,[rbp+0x190]
   140008b91:	lea    rdx,[rip+0xf0c8]        # 0x140017c60
   140008b98:	lea    rcx,[rsp+0x30]
   140008b9d:	call   0x1400091b0
   140008ba2:	test   eax,eax
   140008ba4:	js     0x140008a2d
   140008baa:	movzx  r8d,di
   140008bae:	lea    r9,[rip+0xf0c3]        # 0x140017c78
   140008bb5:	lea    rdx,[rbp-0x80]
   140008bb9:	lea    rcx,[rsp+0x30]
   140008bbe:	test   esi,esi
   140008bc0:	je     0x140008bcc
   140008bc2:	mov    DWORD PTR [rsp+0x20],0x1
   140008bca:	jmp    0x140008bd1
   140008bcc:	mov    DWORD PTR [rsp+0x20],r14d
   140008bd1:	call   0x14000ab88
   140008bd6:	jmp    0x140008a2d
   140008bdb:	call   0x1400148a8
   140008be0:	int3   
   140008be1:	int3   
   140008be2:	int3   
   140008be3:	int3   
   140008be4:	int3   
   140008be5:	int3   
   140008be6:	int3   
   140008be7:	int3   
   140008be8:	int3   
   140008be9:	int3   
   140008bea:	int3   
   140008beb:	int3   
   140008bec:	int3   
   140008bed:	int3   
   140008bee:	int3   
   140008bef:	int3   
   140008bf0:	jmp    0x14000893c
   140008bf5:	int3   
   140008bf6:	int3   
   140008bf7:	int3   
   140008bf8:	int3   
   140008bf9:	int3   
   140008bfa:	int3   
   140008bfb:	int3   
   140008bfc:	int3   
   140008bfd:	int3   
   140008bfe:	int3   
   140008bff:	int3   
   140008c00:	test   r8,r8
   140008c03:	je     0x140008c09
   140008c05:	and    QWORD PTR [r8],0x0
   140008c09:	mov    eax,0x80004001
   140008c0e:	ret    
   140008c0f:	int3   
   140008c10:	int3   
   140008c11:	int3   
   140008c12:	int3   
   140008c13:	int3   
   140008c14:	int3   
   140008c15:	int3   
   140008c16:	int3   
   140008c17:	int3   
   140008c18:	int3   
   140008c19:	int3   
   140008c1a:	int3   
   140008c1b:	int3   
   140008c1c:	int3   
   140008c1d:	int3   
   140008c1e:	int3   
   140008c1f:	int3   
   140008c20:	mov    eax,0x1
   140008c25:	ret    
   140008c26:	int3   
   140008c27:	int3   
   140008c28:	int3   
   140008c29:	int3   
   140008c2a:	int3   
   140008c2b:	int3   
   140008c2c:	int3   
   140008c2d:	int3   
   140008c2e:	int3   
   140008c2f:	int3   
   140008c30:	xor    eax,eax
   140008c32:	ret    
   140008c33:	int3   
   140008c34:	int3   
   140008c35:	int3   
   140008c36:	int3   
   140008c37:	int3   
   140008c38:	int3   
   140008c39:	int3   
   140008c3a:	int3   
   140008c3b:	int3   
   140008c3c:	int3   
   140008c3d:	int3   
   140008c3e:	int3   
   140008c3f:	int3   
   140008c40:	mov    QWORD PTR [rsp+0x8],rbx
   140008c45:	push   rdi
   140008c46:	sub    rsp,0x20
   140008c4a:	mov    ebx,edx
   140008c4c:	mov    rdi,rcx
   140008c4f:	call   0x140008e24
   140008c54:	test   bl,0x1
   140008c57:	je     0x140008c61
   140008c59:	mov    rcx,rdi
   140008c5c:	call   0x140014254
   140008c61:	mov    rax,rdi
   140008c64:	mov    rbx,QWORD PTR [rsp+0x30]
   140008c69:	add    rsp,0x20
   140008c6d:	pop    rdi
   140008c6e:	ret    
   140008c6f:	int3   
   140008c70:	int3   
   140008c71:	int3   
   140008c72:	int3   
   140008c73:	int3   
   140008c74:	int3   
   140008c75:	int3   
   140008c76:	int3   
   140008c77:	int3   
   140008c78:	rex push rbx
   140008c7a:	sub    rsp,0x20
   140008c7e:	mov    rbx,rcx
   140008c81:	mov    rcx,QWORD PTR [rcx]
   140008c84:	test   rcx,rcx
   140008c87:	je     0x140008c93
   140008c89:	call   QWORD PTR [rip+0xd8e9]        # 0x140016578
   140008c8f:	and    QWORD PTR [rbx],0x0
   140008c93:	mov    rcx,QWORD PTR [rbx+0x8]
   140008c97:	test   rcx,rcx
   140008c9a:	je     0x140008ca7
   140008c9c:	call   QWORD PTR [rip+0xd8d6]        # 0x140016578
   140008ca2:	and    QWORD PTR [rbx+0x8],0x0
   140008ca7:	and    DWORD PTR [rbx+0x10],0x0
   140008cab:	add    rsp,0x20
   140008caf:	pop    rbx
   140008cb0:	ret    
   140008cb1:	int3   
   140008cb2:	int3   
   140008cb3:	int3   
   140008cb4:	int3   
   140008cb5:	int3   
   140008cb6:	int3   
   140008cb7:	int3   
   140008cb8:	mov    QWORD PTR [rsp+0x8],rcx
   140008cbd:	push   rbx
   140008cbe:	sub    rsp,0x30
   140008cc2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008ccb:	mov    rbx,rcx
   140008cce:	call   0x140008d2c
   140008cd3:	nop
   140008cd4:	mov    rcx,QWORD PTR [rbx]
   140008cd7:	test   rcx,rcx
   140008cda:	je     0x140008ce6
   140008cdc:	call   QWORD PTR [rip+0xd896]        # 0x140016578
   140008ce2:	and    QWORD PTR [rbx],0x0
   140008ce6:	mov    rcx,QWORD PTR [rbx+0x8]
   140008cea:	test   rcx,rcx
   140008ced:	je     0x140008cfa
   140008cef:	call   QWORD PTR [rip+0xd883]        # 0x140016578
   140008cf5:	and    QWORD PTR [rbx+0x8],0x0
   140008cfa:	and    DWORD PTR [rbx+0x10],0x0
   140008cfe:	add    rsp,0x30
   140008d02:	pop    rbx
   140008d03:	ret    
   140008d04:	int3   
   140008d05:	int3   
   140008d06:	int3   
   140008d07:	int3   
   140008d08:	int3   
   140008d09:	int3   
   140008d0a:	int3   
   140008d0b:	int3   
   140008d0c:	sub    rsp,0x28
   140008d10:	cmp    BYTE PTR [rcx+0x28],0x0
   140008d14:	je     0x140008d20
   140008d16:	mov    BYTE PTR [rcx+0x28],0x0
   140008d1a:	call   QWORD PTR [rip+0xd470]        # 0x140016190
   140008d20:	add    rsp,0x28
   140008d24:	ret    
   140008d25:	int3   
   140008d26:	int3   
   140008d27:	int3   
   140008d28:	int3   
   140008d29:	int3   
   140008d2a:	int3   
   140008d2b:	int3   
   140008d2c:	mov    QWORD PTR [rsp+0x8],rbx
   140008d31:	mov    QWORD PTR [rsp+0x10],rsi
   140008d36:	push   rdi
   140008d37:	sub    rsp,0x20
   140008d3b:	xor    esi,esi
   140008d3d:	mov    rbx,rcx
   140008d40:	cmp    DWORD PTR [rcx+0x10],esi
   140008d43:	jle    0x140008d7a
   140008d45:	xor    edi,edi
   140008d47:	test   rdi,rdi
   140008d4a:	js     0x140008dc1
   140008d4c:	cmp    esi,DWORD PTR [rbx+0x10]
   140008d4f:	jge    0x140008dc1
   140008d51:	mov    rcx,QWORD PTR [rbx]
   140008d54:	mov    rcx,QWORD PTR [rdi+rcx*1]
   140008d58:	call   0x140014260
   140008d5d:	cmp    esi,DWORD PTR [rbx+0x10]
   140008d60:	jge    0x140008db6
   140008d62:	mov    rcx,QWORD PTR [rbx+0x8]
   140008d66:	mov    rcx,QWORD PTR [rcx+rdi*1]
   140008d6a:	call   0x140014260
   140008d6f:	inc    esi
   140008d71:	add    rdi,0x8
   140008d75:	cmp    esi,DWORD PTR [rbx+0x10]
   140008d78:	jl     0x140008d47
   140008d7a:	mov    rcx,QWORD PTR [rbx]
   140008d7d:	test   rcx,rcx
   140008d80:	je     0x140008d8c
   140008d82:	call   QWORD PTR [rip+0xd7f0]        # 0x140016578
   140008d88:	and    QWORD PTR [rbx],0x0
   140008d8c:	mov    rcx,QWORD PTR [rbx+0x8]
   140008d90:	test   rcx,rcx
   140008d93:	je     0x140008da0
   140008d95:	call   QWORD PTR [rip+0xd7dd]        # 0x140016578
   140008d9b:	and    QWORD PTR [rbx+0x8],0x0
   140008da0:	and    DWORD PTR [rbx+0x10],0x0
   140008da4:	mov    rbx,QWORD PTR [rsp+0x30]
   140008da9:	xor    eax,eax
   140008dab:	mov    rsi,QWORD PTR [rsp+0x38]
   140008db0:	add    rsp,0x20
   140008db4:	pop    rdi
   140008db5:	ret    
   140008db6:	mov    ecx,0xc000008c
   140008dbb:	call   0x1400092d4
   140008dc0:	int3   
   140008dc1:	mov    ecx,0xc000008c
   140008dc6:	call   0x1400092d4
   140008dcb:	int3   
   140008dcc:	int3   
   140008dcd:	int3   
   140008dce:	int3   
   140008dcf:	int3   
   140008dd0:	int3   
   140008dd1:	int3   
   140008dd2:	int3   
   140008dd3:	int3   
   140008dd4:	int3   
   140008dd5:	int3   
   140008dd6:	int3   
   140008dd7:	int3   
   140008dd8:	int3   
   140008dd9:	int3   
   140008dda:	int3   
   140008ddb:	int3   
   140008ddc:	int3   
   140008ddd:	int3   
   140008dde:	int3   
   140008ddf:	int3   
   140008de0:	mov    QWORD PTR [rsp+0x8],rbx
   140008de5:	push   rdi
   140008de6:	sub    rsp,0x20
   140008dea:	lea    rdi,[rcx+0x20]
   140008dee:	mov    rbx,rcx
   140008df1:	mov    rcx,rdi
   140008df4:	call   QWORD PTR [rip+0xd496]        # 0x140016290
   140008dfa:	lea    rcx,[rbx+0x8]
   140008dfe:	call   0x140008d2c
   140008e03:	mov    rcx,rdi
   140008e06:	mov    ebx,eax
   140008e08:	call   QWORD PTR [rip+0xd432]        # 0x140016240
   140008e0e:	mov    eax,ebx
   140008e10:	mov    rbx,QWORD PTR [rsp+0x30]
   140008e15:	add    rsp,0x20
   140008e19:	pop    rdi
   140008e1a:	ret    
   140008e1b:	int3   
   140008e1c:	int3   
   140008e1d:	int3   
   140008e1e:	int3   
   140008e1f:	int3   
   140008e20:	int3   
   140008e21:	int3   
   140008e22:	int3   
   140008e23:	int3   
   140008e24:	mov    QWORD PTR [rsp+0x8],rcx
   140008e29:	push   rdi
   140008e2a:	sub    rsp,0x30
   140008e2e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008e37:	mov    QWORD PTR [rsp+0x48],rbx
   140008e3c:	mov    rbx,rcx
   140008e3f:	lea    rax,[rip+0xde6a]        # 0x140016cb0
   140008e46:	mov    QWORD PTR [rcx],rax
   140008e49:	lea    rdi,[rcx+0x20]
   140008e4d:	mov    rcx,rdi
   140008e50:	call   QWORD PTR [rip+0xd43a]        # 0x140016290
   140008e56:	add    rbx,0x8
   140008e5a:	mov    rcx,rbx
   140008e5d:	call   0x140008d2c
   140008e62:	mov    rcx,rdi
   140008e65:	call   QWORD PTR [rip+0xd3d5]        # 0x140016240
   140008e6b:	nop
   140008e6c:	cmp    BYTE PTR [rdi+0x28],0x0
   140008e70:	je     0x140008e80
   140008e72:	mov    BYTE PTR [rdi+0x28],0x0
   140008e76:	mov    rcx,rdi
   140008e79:	call   QWORD PTR [rip+0xd311]        # 0x140016190
   140008e7f:	nop
   140008e80:	mov    QWORD PTR [rsp+0x40],rbx
   140008e85:	mov    rcx,rbx
   140008e88:	call   0x140008d2c
   140008e8d:	nop
   140008e8e:	mov    rcx,QWORD PTR [rbx]
   140008e91:	test   rcx,rcx
   140008e94:	je     0x140008ea0
   140008e96:	call   QWORD PTR [rip+0xd6dc]        # 0x140016578
   140008e9c:	and    QWORD PTR [rbx],0x0
   140008ea0:	mov    rcx,QWORD PTR [rbx+0x8]
   140008ea4:	test   rcx,rcx
   140008ea7:	je     0x140008eb4
   140008ea9:	call   QWORD PTR [rip+0xd6c9]        # 0x140016578
   140008eaf:	and    QWORD PTR [rbx+0x8],0x0
   140008eb4:	and    DWORD PTR [rbx+0x10],0x0
   140008eb8:	mov    rbx,QWORD PTR [rsp+0x48]
   140008ebd:	add    rsp,0x30
   140008ec1:	pop    rdi
   140008ec2:	ret    
   140008ec3:	int3   
   140008ec4:	int3   
   140008ec5:	int3   
   140008ec6:	int3   
   140008ec7:	int3   
   140008ec8:	int3   
   140008ec9:	int3   
   140008eca:	int3   
   140008ecb:	int3   
   140008ecc:	sub    rsp,0x38
   140008ed0:	call   QWORD PTR [rip+0xd2c2]        # 0x140016198
   140008ed6:	xor    eax,eax
   140008ed8:	mov    DWORD PTR [rsp+0x20],eax
   140008edc:	jmp    0x140008ee7
   140008ede:	mov    eax,0x8007000e
   140008ee3:	mov    DWORD PTR [rsp+0x20],eax
   140008ee7:	add    rsp,0x38
   140008eeb:	ret    
   140008eec:	int3   
   140008eed:	int3   
   140008eee:	int3   
   140008eef:	int3   
   140008ef0:	int3   
   140008ef1:	int3   
   140008ef2:	int3   
   140008ef3:	int3   
   140008ef4:	rex push rbx
   140008ef6:	sub    rsp,0x20
   140008efa:	mov    rbx,rcx
   140008efd:	mov    rcx,QWORD PTR [rcx]
   140008f00:	call   0x140014260
   140008f05:	and    QWORD PTR [rbx],0x0
   140008f09:	add    rsp,0x20
   140008f0d:	pop    rbx
   140008f0e:	ret    
   140008f0f:	int3   
   140008f10:	int3   
   140008f11:	int3   
   140008f12:	int3   
   140008f13:	int3   
   140008f14:	int3   
   140008f15:	int3   
   140008f16:	int3   
   140008f17:	int3   
   140008f18:	mov    rax,rsp
   140008f1b:	mov    QWORD PTR [rax+0x18],r8
   140008f1f:	mov    QWORD PTR [rax+0x10],rdx
   140008f23:	mov    QWORD PTR [rax+0x8],rcx
   140008f27:	push   rbx
   140008f28:	push   rsi
   140008f29:	push   rdi
   140008f2a:	push   r12
   140008f2c:	push   r13
   140008f2e:	push   r14
   140008f30:	push   r15
   140008f32:	sub    rsp,0x60
   140008f36:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140008f3e:	mov    r13,r8
   140008f41:	mov    r12,rdx
   140008f44:	mov    r15,rcx
   140008f47:	xor    esi,esi
   140008f49:	test   rdx,rdx
   140008f4c:	je     0x140009198
   140008f52:	test   r8,r8
   140008f55:	je     0x140009198
   140008f5b:	mov    r14d,esi
   140008f5e:	or     rbx,0xffffffffffffffff
   140008f62:	mov    rax,rbx
   140008f65:	inc    rax
   140008f68:	cmp    WORD PTR [rdx+rax*2],si
   140008f6c:	jne    0x140008f65
   140008f6e:	lea    rcx,[rax*2+0x2]
   140008f76:	mov    QWORD PTR [rsp+0x48],rcx
   140008f7b:	mov    QWORD PTR [rsp+0x28],rsi
   140008f80:	mov    eax,0x2
   140008f85:	mul    rcx
   140008f88:	cmovo  rax,rbx
   140008f8c:	mov    rcx,rax
   140008f8f:	call   0x1400142ac
   140008f94:	mov    QWORD PTR [rsp+0x20],rax
   140008f99:	mov    QWORD PTR [rsp+0x28],rax
   140008f9e:	jmp    0x140008fcb
   140008fa0:	xor    esi,esi
   140008fa2:	or     rbx,0xffffffffffffffff
   140008fa6:	mov    r15,QWORD PTR [rsp+0xa0]
   140008fae:	mov    r13,QWORD PTR [rsp+0xb0]
   140008fb6:	mov    r12,QWORD PTR [rsp+0xa8]
   140008fbe:	mov    r14d,esi
   140008fc1:	mov    rax,QWORD PTR [rsp+0x28]
   140008fc6:	mov    QWORD PTR [rsp+0x20],rax
   140008fcb:	mov    rdi,rax
   140008fce:	mov    QWORD PTR [rsp+0x40],rax
   140008fd3:	mov    rax,rbx
   140008fd6:	inc    rax
   140008fd9:	cmp    WORD PTR [r13+rax*2+0x0],si
   140008fdf:	jne    0x140008fd6
   140008fe1:	inc    eax
   140008fe3:	movsxd rcx,eax
   140008fe6:	add    rcx,rcx
   140008fe9:	mov    QWORD PTR [rsp+0x38],rcx
   140008fee:	mov    QWORD PTR [rsp+0x30],rsi
   140008ff3:	mov    eax,0x2
   140008ff8:	mul    rcx
   140008ffb:	cmovo  rax,rbx
   140008fff:	mov    rcx,rax
   140009002:	call   0x1400142ac
   140009007:	mov    rbx,rax
   14000900a:	mov    QWORD PTR [rsp+0x30],rax
   14000900f:	mov    rax,QWORD PTR [rsp+0x20]
   140009014:	jmp    0x140009047
   140009016:	xor    esi,esi
   140009018:	mov    r15,QWORD PTR [rsp+0xa0]
   140009020:	mov    r13,QWORD PTR [rsp+0xb0]
   140009028:	mov    r12,QWORD PTR [rsp+0xa8]
   140009030:	mov    r14d,esi
   140009033:	mov    rax,QWORD PTR [rsp+0x28]
   140009038:	mov    QWORD PTR [rsp+0x20],rax
   14000903d:	mov    rdi,QWORD PTR [rsp+0x40]
   140009042:	mov    rbx,QWORD PTR [rsp+0x30]
   140009047:	mov    QWORD PTR [rsp+0xa8],rbx
   14000904f:	test   rax,rax
   140009052:	je     0x140009176
   140009058:	test   rbx,rbx
   14000905b:	je     0x140009176
   140009061:	mov    rdx,QWORD PTR [rsp+0x48]
   140009066:	mov    r9,rdx
   140009069:	mov    r8,r12
   14000906c:	mov    rcx,rax
   14000906f:	call   QWORD PTR [rip+0xd513]        # 0x140016588
   140009075:	test   eax,eax
   140009077:	je     0x1400090ae
   140009079:	cmp    eax,0xc
   14000907c:	je     0x1400090a3
   14000907e:	cmp    eax,0x16
   140009081:	je     0x140009098
   140009083:	cmp    eax,0x22
   140009086:	je     0x140009098
   140009088:	cmp    eax,0x50
   14000908b:	je     0x1400090ae
   14000908d:	mov    ecx,0x80004005
   140009092:	call   0x140009d30
   140009097:	int3   
   140009098:	mov    ecx,0x80070057
   14000909d:	call   0x140009d30
   1400090a2:	int3   
   1400090a3:	mov    ecx,0x8007000e
   1400090a8:	call   0x140009d30
   1400090ad:	int3   
   1400090ae:	mov    r9,QWORD PTR [rsp+0x38]
   1400090b3:	mov    r8,r13
   1400090b6:	mov    rdx,r9
   1400090b9:	mov    rcx,rbx
   1400090bc:	call   QWORD PTR [rip+0xd4c6]        # 0x140016588
   1400090c2:	test   eax,eax
   1400090c4:	je     0x1400090fb
   1400090c6:	cmp    eax,0xc
   1400090c9:	je     0x1400090f0
   1400090cb:	cmp    eax,0x16
   1400090ce:	je     0x1400090e5
   1400090d0:	cmp    eax,0x22
   1400090d3:	je     0x1400090e5
   1400090d5:	cmp    eax,0x50
   1400090d8:	je     0x1400090fb
   1400090da:	mov    ecx,0x80004005
   1400090df:	call   0x140009d30
   1400090e4:	int3   
   1400090e5:	mov    ecx,0x80070057
   1400090ea:	call   0x140009d30
   1400090ef:	int3   
   1400090f0:	mov    ecx,0x8007000e
   1400090f5:	call   0x140009d30
   1400090fa:	int3   
   1400090fb:	mov    eax,DWORD PTR [r15+0x10]
   1400090ff:	inc    eax
   140009101:	movsxd rdx,eax
   140009104:	mov    r12d,0x8
   14000910a:	mov    r8d,r12d
   14000910d:	mov    rcx,QWORD PTR [r15]
   140009110:	call   QWORD PTR [rip+0x14eea]        # 0x14001e000
   140009116:	test   rax,rax
   140009119:	je     0x140009176
   14000911b:	mov    QWORD PTR [r15],rax
   14000911e:	mov    eax,DWORD PTR [r15+0x10]
   140009122:	inc    eax
   140009124:	movsxd rdx,eax
   140009127:	mov    r8d,r12d
   14000912a:	mov    rcx,QWORD PTR [r15+0x8]
   14000912e:	call   QWORD PTR [rip+0x14ecc]        # 0x14001e000
   140009134:	test   rax,rax
   140009137:	je     0x140009176
   140009139:	mov    QWORD PTR [r15+0x8],rax
   14000913d:	movsxd rdx,DWORD PTR [r15+0x10]
   140009141:	mov    rax,QWORD PTR [r15]
   140009144:	lea    rcx,[rax+rdx*8]
   140009148:	test   rcx,rcx
   14000914b:	je     0x140009155
   14000914d:	mov    rax,QWORD PTR [rsp+0x20]
   140009152:	mov    QWORD PTR [rcx],rax
   140009155:	mov    rax,QWORD PTR [r15+0x8]
   140009159:	lea    rcx,[rax+rdx*8]
   14000915d:	test   rcx,rcx
   140009160:	je     0x140009165
   140009162:	mov    QWORD PTR [rcx],rbx
   140009165:	inc    DWORD PTR [r15+0x10]
   140009169:	mov    rdi,rsi
   14000916c:	mov    QWORD PTR [rsp+0x40],rsi
   140009171:	mov    rbx,rsi
   140009174:	jmp    0x14000917c
   140009176:	mov    r14d,0x8007000e
   14000917c:	test   r14d,r14d
   14000917f:	setns  sil
   140009183:	mov    rcx,rbx
   140009186:	call   0x140014260
   14000918b:	nop
   14000918c:	mov    rcx,rdi
   14000918f:	call   0x140014260
   140009194:	mov    eax,esi
   140009196:	jmp    0x14000919a
   140009198:	xor    eax,eax
   14000919a:	add    rsp,0x60
   14000919e:	pop    r15
   1400091a0:	pop    r14
   1400091a2:	pop    r13
   1400091a4:	pop    r12
   1400091a6:	pop    rdi
   1400091a7:	pop    rsi
   1400091a8:	pop    rbx
   1400091a9:	ret    
   1400091aa:	int3   
   1400091ab:	int3   
   1400091ac:	int3   
   1400091ad:	int3   
   1400091ae:	int3   
   1400091af:	int3   
   1400091b0:	mov    rax,rsp
   1400091b3:	push   rdi
   1400091b4:	sub    rsp,0x30
   1400091b8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400091c0:	mov    QWORD PTR [rax+0x8],rbx
   1400091c4:	mov    QWORD PTR [rax+0x18],rbp
   1400091c8:	mov    QWORD PTR [rax+0x20],rsi
   1400091cc:	mov    rbx,r8
   1400091cf:	mov    rsi,rdx
   1400091d2:	mov    rbp,rcx
   1400091d5:	test   rdx,rdx
   1400091d8:	je     0x140009217
   1400091da:	test   rbx,rbx
   1400091dd:	je     0x140009217
   1400091df:	add    rcx,0x20
   1400091e3:	call   QWORD PTR [rip+0xd0a7]        # 0x140016290
   1400091e9:	and    QWORD PTR [rsp+0x48],0x0
   1400091ef:	lea    rcx,[rbp+0x8]
   1400091f3:	mov    r8,rbx
   1400091f6:	mov    rdx,rsi
   1400091f9:	call   0x140008f18
   1400091fe:	mov    ebx,eax
   140009200:	lea    rcx,[rbp+0x20]
   140009204:	call   QWORD PTR [rip+0xd036]        # 0x140016240
   14000920a:	neg    ebx
   14000920c:	sbb    eax,eax
   14000920e:	not    eax
   140009210:	and    eax,0x8007000e
   140009215:	jmp    0x14000921c
   140009217:	mov    eax,0x80070057
   14000921c:	mov    rbx,QWORD PTR [rsp+0x40]
   140009221:	mov    rbp,QWORD PTR [rsp+0x50]
   140009226:	mov    rsi,QWORD PTR [rsp+0x58]
   14000922b:	add    rsp,0x30
   14000922f:	pop    rdi
   140009230:	ret    
   140009231:	int3   
   140009232:	int3   
   140009233:	int3   
   140009234:	int3   
   140009235:	int3   
   140009236:	int3   
   140009237:	int3   
   140009238:	mov    rcx,QWORD PTR [rcx]
   14000923b:	rex.W jmp QWORD PTR [rip+0xd336]        # 0x140016578
   140009242:	int3   
   140009243:	int3   
   140009244:	int3   
   140009245:	int3   
   140009246:	int3   
   140009247:	int3   
   140009248:	sub    rsp,0x28
   14000924c:	lea    rax,[rcx+0x8]
   140009250:	cmp    QWORD PTR [rcx],rax
   140009253:	je     0x14000925a
   140009255:	call   0x140009238
   14000925a:	add    rsp,0x28
   14000925e:	ret    
   14000925f:	int3   
   140009260:	int3   
   140009261:	int3   
   140009262:	int3   
   140009263:	int3   
   140009264:	int3   
   140009265:	int3   
   140009266:	int3   
   140009267:	int3   
   140009268:	rex push rbx
   14000926a:	sub    rsp,0x20
   14000926e:	mov    rbx,rcx
   140009271:	mov    rcx,rdx
   140009274:	call   QWORD PTR [rip+0xd2f6]        # 0x140016570
   14000927a:	test   rax,rax
   14000927d:	je     0x140009288
   14000927f:	mov    QWORD PTR [rbx],rax
   140009282:	add    rsp,0x20
   140009286:	pop    rbx
   140009287:	ret    
   140009288:	mov    ecx,0x8007000e
   14000928d:	call   0x140009d30
   140009292:	int3   
   140009293:	int3   
   140009294:	int3   
   140009295:	int3   
   140009296:	int3   
   140009297:	int3   
   140009298:	int3   
   140009299:	int3   
   14000929a:	int3   
   14000929b:	int3   
   14000929c:	sub    rsp,0x28
   1400092a0:	call   QWORD PTR [rip+0xcfe2]        # 0x140016288
   1400092a6:	mov    ecx,eax
   1400092a8:	movzx  eax,ax
   1400092ab:	or     eax,0x80070000
   1400092b0:	test   ecx,ecx
   1400092b2:	cmovle eax,ecx
   1400092b5:	add    rsp,0x28
   1400092b9:	ret    
   1400092ba:	int3   
   1400092bb:	int3   
   1400092bc:	int3   
   1400092bd:	int3   
   1400092be:	int3   
   1400092bf:	int3   
   1400092c0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400092c4:	rex.W jmp QWORD PTR [rip+0xd3fd]        # 0x1400166c8
   1400092cb:	int3   
   1400092cc:	int3   
   1400092cd:	int3   
   1400092ce:	int3   
   1400092cf:	int3   
   1400092d0:	int3   
   1400092d1:	int3   
   1400092d2:	int3   
   1400092d3:	int3   
   1400092d4:	xor    r9d,r9d
   1400092d7:	xor    r8d,r8d
   1400092da:	lea    edx,[r9+0x1]
   1400092de:	rex.W jmp QWORD PTR [rip+0xce7b]        # 0x140016160
   1400092e5:	int3   
   1400092e6:	int3   
   1400092e7:	int3   
   1400092e8:	int3   
   1400092e9:	int3   
   1400092ea:	int3   
   1400092eb:	int3   
   1400092ec:	mov    rax,rsp
   1400092ef:	mov    QWORD PTR [rax+0x8],rbx
   1400092f3:	mov    QWORD PTR [rax+0x10],rbp
   1400092f7:	mov    QWORD PTR [rax+0x18],rsi
   1400092fb:	mov    QWORD PTR [rax+0x20],rdi
   1400092ff:	push   r14
   140009301:	sub    rsp,0x20
   140009305:	mov    rbx,rcx
   140009308:	mov    esi,r8d
   14000930b:	lea    ecx,[r8+0x1]
   14000930f:	mov    rbp,rdx
   140009312:	add    ecx,DWORD PTR [rbx]
   140009314:	cmp    ecx,DWORD PTR [rbx]
   140009316:	jle    0x1400093c9
   14000931c:	cmp    ecx,r8d
   14000931f:	jle    0x1400093c9
   140009325:	mov    edi,DWORD PTR [rbx+0x4]
   140009328:	xor    r14d,r14d
   14000932b:	cmp    ecx,edi
   14000932d:	jl     0x140009368
   14000932f:	cmp    edi,0x3fffffff
   140009335:	jg     0x1400093c9
   14000933b:	add    edi,edi
   14000933d:	cmp    ecx,edi
   14000933f:	jge    0x14000932f
   140009341:	mov    eax,edi
   140009343:	mov    ecx,0xffffffff
   140009348:	add    rax,rax
   14000934b:	cmp    rax,rcx
   14000934e:	ja     0x1400093c9
   140009350:	mov    rcx,QWORD PTR [rbx+0x8]
   140009354:	mov    edx,eax
   140009356:	call   QWORD PTR [rip+0xd364]        # 0x1400166c0
   14000935c:	test   rax,rax
   14000935f:	je     0x1400093c9
   140009361:	mov    QWORD PTR [rbx+0x8],rax
   140009365:	mov    DWORD PTR [rbx+0x4],edi
   140009368:	cmp    DWORD PTR [rbx],r14d
   14000936b:	jl     0x1400093c9
   14000936d:	mov    ecx,DWORD PTR [rbx+0x4]
   140009370:	cmp    DWORD PTR [rbx],ecx
   140009372:	jge    0x1400093c9
   140009374:	mov    eax,ecx
   140009376:	sub    eax,DWORD PTR [rbx]
   140009378:	cmp    eax,ecx
   14000937a:	jg     0x1400093c9
   14000937c:	movsxd rcx,DWORD PTR [rbx]
   14000937f:	mov    r8,rbp
   140009382:	movsxd rdx,eax
   140009385:	mov    rax,QWORD PTR [rbx+0x8]
   140009389:	add    rdx,rdx
   14000938c:	lea    rcx,[rax+rcx*2]
   140009390:	lea    eax,[rsi+rsi*1]
   140009393:	movsxd r9,eax
   140009396:	call   QWORD PTR [rip+0xd1ec]        # 0x140016588
   14000939c:	test   eax,eax
   14000939e:	je     0x1400093b4
   1400093a0:	cmp    eax,0xc
   1400093a3:	je     0x1400093fc
   1400093a5:	cmp    eax,0x16
   1400093a8:	je     0x1400093f1
   1400093aa:	cmp    eax,0x22
   1400093ad:	je     0x1400093f1
   1400093af:	cmp    eax,0x50
   1400093b2:	jne    0x1400093e6
   1400093b4:	add    DWORD PTR [rbx],esi
   1400093b6:	mov    rax,QWORD PTR [rbx+0x8]
   1400093ba:	movsxd rcx,DWORD PTR [rbx]
   1400093bd:	mov    WORD PTR [rax+rcx*2],r14w
   1400093c2:	mov    eax,0x1
   1400093c7:	jmp    0x1400093cb
   1400093c9:	xor    eax,eax
   1400093cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400093d0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400093d5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400093da:	mov    rdi,QWORD PTR [rsp+0x48]
   1400093df:	add    rsp,0x20
   1400093e3:	pop    r14
   1400093e5:	ret    
   1400093e6:	mov    ecx,0x80004005
   1400093eb:	call   0x140009d30
   1400093f0:	int3   
   1400093f1:	mov    ecx,0x80070057
   1400093f6:	call   0x140009d30
   1400093fb:	int3   
   1400093fc:	mov    ecx,0x8007000e
   140009401:	call   0x140009d30
   140009406:	int3   
   140009407:	int3   
   140009408:	int3   
   140009409:	int3   
   14000940a:	int3   
   14000940b:	int3   
   14000940c:	int3   
   14000940d:	int3   
   14000940e:	int3   
   14000940f:	int3   
   140009410:	mov    rax,rsp
   140009413:	push   rbp
   140009414:	push   rsi
   140009415:	push   rdi
   140009416:	push   r12
   140009418:	push   r13
   14000941a:	push   r14
   14000941c:	push   r15
   14000941e:	lea    rbp,[rax-0x5f]
   140009422:	sub    rsp,0xa0
   140009429:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   140009431:	mov    QWORD PTR [rax+0x10],rbx
   140009435:	mov    rax,QWORD PTR [rip+0x14bd4]        # 0x14001e010
   14000943c:	xor    rax,rsp
   14000943f:	mov    QWORD PTR [rbp+0x17],rax
   140009443:	mov    QWORD PTR [rbp-0x49],r8
   140009447:	mov    rdi,rdx
   14000944a:	mov    rsi,rcx
   14000944d:	xor    ebx,ebx
   14000944f:	test   r8,r8
   140009452:	jne    0x14000945e
   140009454:	mov    eax,0x80004003
   140009459:	jmp    0x1400096b0
   14000945e:	mov    QWORD PTR [r8],rbx
   140009461:	or     rax,0xffffffffffffffff
   140009465:	inc    rax
   140009468:	cmp    WORD PTR [rdx+rax*2],bx
   14000946c:	jne    0x140009465
   14000946e:	add    eax,eax
   140009470:	mov    ecx,0x3e8
   140009475:	cmp    eax,0x64
   140009478:	cmovl  eax,ecx
   14000947b:	mov    DWORD PTR [rbp-0x59],ebx
   14000947e:	mov    DWORD PTR [rbp-0x55],eax
   140009481:	mov    ecx,eax
   140009483:	add    rcx,rcx
   140009486:	mov    eax,0xffffffff
   14000948b:	cmp    rcx,rax
   14000948e:	jbe    0x140009499
   140009490:	mov    rax,rbx
   140009493:	mov    QWORD PTR [rbp-0x51],rbx
   140009497:	jmp    0x1400094ad
   140009499:	mov    ecx,ecx
   14000949b:	call   QWORD PTR [rip+0xd217]        # 0x1400166b8
   1400094a1:	mov    QWORD PTR [rbp-0x51],rax
   1400094a5:	test   rax,rax
   1400094a8:	je     0x1400094ad
   1400094aa:	mov    WORD PTR [rax],bx
   1400094ad:	test   rax,rax
   1400094b0:	jne    0x1400094bc
   1400094b2:	mov    ebx,0x8007000e
   1400094b7:	jmp    0x1400096a4
   1400094bc:	mov    QWORD PTR [rsi],rdi
   1400094bf:	cmp    WORD PTR [rdi],bx
   1400094c2:	je     0x140009695
   1400094c8:	mov    rdx,QWORD PTR [rsi]
   1400094cb:	cmp    WORD PTR [rdx],0x25
   1400094cf:	jne    0x140009630
   1400094d5:	mov    rcx,rdx
   1400094d8:	call   QWORD PTR [rip+0xcfaa]        # 0x140016488
   1400094de:	mov    rdi,rax
   1400094e1:	mov    QWORD PTR [rsi],rax
   1400094e4:	cmp    WORD PTR [rax],0x25
   1400094e8:	jne    0x1400094f2
   1400094ea:	mov    rdx,rax
   1400094ed:	jmp    0x140009630
   1400094f2:	test   rax,rax
   1400094f5:	je     0x14000968e
   1400094fb:	movzx  eax,WORD PTR [rax]
   1400094fe:	test   ax,ax
   140009501:	je     0x14000968e
   140009507:	cmp    ax,0x25
   14000950b:	je     0x14000951b
   14000950d:	mov    rcx,rdi
   140009510:	call   QWORD PTR [rip+0xcf72]        # 0x140016488
   140009516:	mov    rdi,rax
   140009519:	jmp    0x1400094fb
   14000951b:	test   rdi,rdi
   14000951e:	je     0x14000968e
   140009524:	mov    rax,rdi
   140009527:	sub    rax,QWORD PTR [rsi]
   14000952a:	sar    rax,1
   14000952d:	cmp    rax,0x1f
   140009531:	jg     0x140009687
   140009537:	movsxd r9,eax
   14000953a:	mov    r8,QWORD PTR [rsi]
   14000953d:	mov    edx,0x20
   140009542:	lea    rcx,[rbp-0x29]
   140009546:	call   QWORD PTR [rip+0xd034]        # 0x140016580
   14000954c:	test   eax,eax
   14000954e:	je     0x140009574
   140009550:	cmp    eax,0xc
   140009553:	je     0x140009671
   140009559:	cmp    eax,0x16
   14000955c:	je     0x140009666
   140009562:	cmp    eax,0x22
   140009565:	je     0x140009666
   14000956b:	cmp    eax,0x50
   14000956e:	jne    0x14000965b
   140009574:	mov    r13,QWORD PTR [rsi+0x8]
   140009578:	lea    rcx,[r13+0x20]
   14000957c:	call   QWORD PTR [rip+0xcd0e]        # 0x140016290
   140009582:	mov    r15d,ebx
   140009585:	mov    r14,rbx
   140009588:	cmp    DWORD PTR [r13+0x18],ebx
   14000958c:	jle    0x1400095b0
   14000958e:	mov    rax,QWORD PTR [r13+0x8]
   140009592:	lea    rdx,[rbp-0x29]
   140009596:	mov    rcx,QWORD PTR [rax+r14*8]
   14000959a:	call   QWORD PTR [rip+0xcca8]        # 0x140016248
   1400095a0:	test   eax,eax
   1400095a2:	je     0x1400095b8
   1400095a4:	inc    r15d
   1400095a7:	inc    r14
   1400095aa:	cmp    r15d,DWORD PTR [r13+0x18]
   1400095ae:	jl     0x14000958e
   1400095b0:	or     r15d,0xffffffff
   1400095b4:	or     r14,0xffffffffffffffff
   1400095b8:	cmp    r14,0xffffffffffffffff
   1400095bc:	jne    0x1400095c3
   1400095be:	mov    r14,rbx
   1400095c1:	jmp    0x1400095de
   1400095c3:	test   r14,r14
   1400095c6:	js     0x14000967c
   1400095cc:	cmp    r15d,DWORD PTR [r13+0x18]
   1400095d0:	jge    0x14000967c
   1400095d6:	mov    rax,QWORD PTR [r13+0x10]
   1400095da:	mov    r14,QWORD PTR [rax+r14*8]
   1400095de:	lea    rcx,[r13+0x20]
   1400095e2:	call   QWORD PTR [rip+0xcc58]        # 0x140016240
   1400095e8:	test   r14,r14
   1400095eb:	je     0x14000968e
   1400095f1:	mov    QWORD PTR [rbp-0x41],rbx
   1400095f5:	or     r8,0xffffffffffffffff
   1400095f9:	inc    r8
   1400095fc:	cmp    WORD PTR [r14+r8*2],bx
   140009601:	jne    0x1400095f9
   140009603:	mov    rdx,r14
   140009606:	lea    rcx,[rbp-0x59]
   14000960a:	call   0x1400092ec
   14000960f:	nop
   140009610:	test   eax,eax
   140009612:	je     0x1400094b2
   140009618:	cmp    QWORD PTR [rsi],rdi
   14000961b:	je     0x140009647
   14000961d:	mov    rcx,QWORD PTR [rsi]
   140009620:	call   QWORD PTR [rip+0xce62]        # 0x140016488
   140009626:	mov    QWORD PTR [rsi],rax
   140009629:	cmp    rax,rdi
   14000962c:	jne    0x14000961d
   14000962e:	jmp    0x140009647
   140009630:	mov    r8d,0x1
   140009636:	lea    rcx,[rbp-0x59]
   14000963a:	call   0x1400092ec
   14000963f:	test   eax,eax
   140009641:	je     0x1400094b2
   140009647:	mov    rcx,QWORD PTR [rsi]
   14000964a:	call   QWORD PTR [rip+0xce38]        # 0x140016488
   140009650:	mov    QWORD PTR [rsi],rax
   140009653:	cmp    WORD PTR [rax],bx
   140009656:	jmp    0x1400094c2
   14000965b:	mov    ecx,0x80004005
   140009660:	call   0x140009d30
   140009665:	int3   
   140009666:	mov    ecx,0x80070057
   14000966b:	call   0x140009d30
   140009670:	int3   
   140009671:	mov    ecx,0x8007000e
   140009676:	call   0x140009d30
   14000967b:	int3   
   14000967c:	mov    ecx,0xc000008c
   140009681:	call   0x1400092d4
   140009686:	int3   
   140009687:	mov    ebx,0x80004005
   14000968c:	jmp    0x1400096a4
   14000968e:	mov    ebx,0x80020009
   140009693:	jmp    0x1400096a4
   140009695:	mov    rcx,QWORD PTR [rbp-0x51]
   140009699:	mov    QWORD PTR [rbp-0x51],rbx
   14000969d:	mov    rax,QWORD PTR [rbp-0x49]
   1400096a1:	mov    QWORD PTR [rax],rcx
   1400096a4:	mov    rcx,QWORD PTR [rbp-0x51]
   1400096a8:	call   QWORD PTR [rip+0xd01a]        # 0x1400166c8
   1400096ae:	mov    eax,ebx
   1400096b0:	mov    rcx,QWORD PTR [rbp+0x17]
   1400096b4:	xor    rcx,rsp
   1400096b7:	call   0x1400146a0
   1400096bc:	mov    rbx,QWORD PTR [rsp+0xe8]
   1400096c4:	add    rsp,0xa0
   1400096cb:	pop    r15
   1400096cd:	pop    r14
   1400096cf:	pop    r13
   1400096d1:	pop    r12
   1400096d3:	pop    rdi
   1400096d4:	pop    rsi
   1400096d5:	pop    rbp
   1400096d6:	ret    
   1400096d7:	int3   
   1400096d8:	int3   
   1400096d9:	int3   
   1400096da:	int3   
   1400096db:	int3   
   1400096dc:	int3   
   1400096dd:	int3   
   1400096de:	int3   
   1400096df:	int3   
   1400096e0:	mov    rax,rsp
   1400096e3:	mov    QWORD PTR [rax+0x8],rbx
   1400096e7:	mov    QWORD PTR [rax+0x10],rbp
   1400096eb:	mov    QWORD PTR [rax+0x18],rsi
   1400096ef:	mov    QWORD PTR [rax+0x20],rdi
   1400096f3:	push   r15
   1400096f5:	sub    rsp,0x20
   1400096f9:	mov    eax,DWORD PTR [rip+0x15645]        # 0x14001ed44
   1400096ff:	mov    rsi,rdx
   140009702:	mov    rbp,rcx
   140009705:	test   al,0x1
   140009707:	jne    0x14000977a
   140009709:	or     eax,0x1
   14000970c:	mov    DWORD PTR [rip+0x15632],eax        # 0x14001ed44
   140009712:	lea    rax,[rip+0xd23b]        # 0x140016954
   140009719:	mov    QWORD PTR [rip+0x155d0],rax        # 0x14001ecf0
   140009720:	mov    eax,0x8
   140009725:	mov    WORD PTR [rip+0x155cc],ax        # 0x14001ecf8
   14000972c:	lea    rax,[rip+0xd225]        # 0x140016958
   140009733:	mov    QWORD PTR [rip+0x155c6],rax        # 0x14001ed00
   14000973a:	mov    eax,0x4008
   14000973f:	mov    WORD PTR [rip+0x155c2],ax        # 0x14001ed08
   140009746:	lea    rax,[rip+0xd20f]        # 0x14001695c
   14000974d:	mov    QWORD PTR [rip+0x155bc],rax        # 0x14001ed10
   140009754:	mov    eax,0x13
   140009759:	mov    WORD PTR [rip+0x155b8],ax        # 0x14001ed18
   140009760:	lea    rax,[rip+0xd1f9]        # 0x140016960
   140009767:	mov    QWORD PTR [rip+0x155b2],rax        # 0x14001ed20
   14000976e:	mov    eax,0x11
   140009773:	mov    WORD PTR [rip+0x155ae],ax        # 0x14001ed28
   14000977a:	lea    r15,[rip+0x1556f]        # 0x14001ecf0
   140009781:	xor    ebx,ebx
   140009783:	mov    rdi,r15
   140009786:	mov    rdx,QWORD PTR [rdi]
   140009789:	mov    rcx,rbp
   14000978c:	call   QWORD PTR [rip+0xcab6]        # 0x140016248
   140009792:	test   eax,eax
   140009794:	je     0x1400097a9
   140009796:	inc    ebx
   140009798:	add    rdi,0x10
   14000979c:	movsxd rax,ebx
   14000979f:	cmp    rax,0x4
   1400097a3:	jb     0x140009786
   1400097a5:	xor    eax,eax
   1400097a7:	jmp    0x1400097bd
   1400097a9:	movsxd rcx,ebx
   1400097ac:	mov    eax,0x1
   1400097b1:	add    rcx,rcx
   1400097b4:	movzx  ecx,WORD PTR [r15+rcx*8+0x8]
   1400097ba:	mov    WORD PTR [rsi],cx
   1400097bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400097c2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400097c7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400097cc:	mov    rdi,QWORD PTR [rsp+0x48]
   1400097d1:	add    rsp,0x20
   1400097d5:	pop    r15
   1400097d7:	ret    
   1400097d8:	int3   
   1400097d9:	int3   
   1400097da:	int3   
   1400097db:	int3   
   1400097dc:	int3   
   1400097dd:	int3   
   1400097de:	int3   
   1400097df:	int3   
   1400097e0:	rex push rbx
   1400097e2:	sub    rsp,0x20
   1400097e6:	cmp    QWORD PTR [rcx],0x0
   1400097ea:	mov    rbx,rcx
   1400097ed:	je     0x140009804
   1400097ef:	mov    rcx,QWORD PTR [rbx]
   1400097f2:	mov    rax,QWORD PTR [rcx]
   1400097f5:	mov    QWORD PTR [rbx],rax
   1400097f8:	call   QWORD PTR [rip+0xcd7a]        # 0x140016578
   1400097fe:	cmp    QWORD PTR [rbx],0x0
   140009802:	jne    0x1400097ef
   140009804:	add    rsp,0x20
   140009808:	pop    rbx
   140009809:	ret    
   14000980a:	int3   
   14000980b:	int3   
   14000980c:	int3   
   14000980d:	int3   
   14000980e:	int3   
   14000980f:	int3   
   140009810:	rex push rbx
   140009812:	push   rsi
   140009813:	push   rdi
   140009814:	push   r12
   140009816:	push   r13
   140009818:	push   r14
   14000981a:	push   r15
   14000981c:	mov    eax,0x21a0
   140009821:	call   0x140015130
   140009826:	sub    rsp,rax
   140009829:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   140009832:	mov    rax,QWORD PTR [rip+0x147d7]        # 0x14001e010
   140009839:	xor    rax,rsp
   14000983c:	mov    QWORD PTR [rsp+0x2190],rax
   140009844:	mov    r15,r8
   140009847:	mov    QWORD PTR [rsp+0x40],r8
   14000984c:	mov    r13,rdx
   14000984f:	mov    r12,rcx
   140009852:	mov    QWORD PTR [rsp+0x50],rcx
   140009857:	mov    QWORD PTR [rsp+0x48],rdx
   14000985c:	mov    QWORD PTR [rsp+0x60],r8
   140009861:	mov    QWORD PTR [rsp+0x70],r9
   140009866:	xor    ebx,ebx
   140009868:	mov    WORD PTR [rsp+0x30],bx
   14000986d:	lea    rdx,[rsp+0x190]
   140009875:	call   0x14000a058
   14000987a:	test   eax,eax
   14000987c:	js     0x140009cfb
   140009882:	lea    rdx,[rsp+0x30]
   140009887:	lea    rcx,[rsp+0x190]
   14000988f:	call   0x1400096e0
   140009894:	test   eax,eax
   140009896:	jne    0x1400098a2
   140009898:	mov    eax,0x80020009
   14000989d:	jmp    0x140009cfb
   1400098a2:	mov    rcx,QWORD PTR [r12]
   1400098a6:	movzx  eax,WORD PTR [rcx]
   1400098a9:	cmp    eax,0x20
   1400098ac:	ja     0x1400098ca
   1400098ae:	movabs rdx,0x100002600
   1400098b8:	bt     rdx,rax
   1400098bc:	jae    0x1400098ca
   1400098be:	call   QWORD PTR [rip+0xcbc4]        # 0x140016488
   1400098c4:	mov    QWORD PTR [r12],rax
   1400098c8:	jmp    0x1400098a2
   1400098ca:	lea    rdx,[rsp+0x190]
   1400098d2:	mov    rcx,r12
   1400098d5:	call   0x14000a058
   1400098da:	test   eax,eax
   1400098dc:	js     0x140009cfb
   1400098e2:	movzx  eax,WORD PTR [rsp+0x30]
   1400098e7:	cmp    eax,0x8
   1400098ea:	je     0x140009c95
   1400098f0:	cmp    eax,0x11
   1400098f3:	je     0x140009ada
   1400098f9:	cmp    eax,0x13
   1400098fc:	je     0x140009aa2
   140009902:	cmp    eax,0x4008
   140009907:	jne    0x140009ce7
   14000990d:	lea    rcx,[rsp+0x190]
   140009915:	or     rsi,0xffffffffffffffff
   140009919:	mov    rax,rsi
   14000991c:	inc    rax
   14000991f:	cmp    WORD PTR [rcx+rax*2],bx
   140009923:	jne    0x14000991c
   140009925:	add    eax,0x2
   140009928:	mov    QWORD PTR [rsp+0x80],rbx
   140009930:	movsxd rcx,eax
   140009933:	test   eax,eax
   140009935:	je     0x140009973
   140009937:	xor    edx,edx
   140009939:	mov    rax,rsi
   14000993c:	div    rcx
   14000993f:	cmp    rax,0x2
   140009943:	jb     0x140009969
   140009945:	lea    rdx,[rcx+rcx*1]
   140009949:	cmp    rdx,0x100
   140009950:	jbe    0x140009973
   140009952:	lea    rcx,[rsp+0x80]
   14000995a:	call   0x140009268
   14000995f:	mov    rdi,QWORD PTR [rsp+0x80]
   140009967:	jmp    0x140009983
   140009969:	mov    ecx,0x80070057
   14000996e:	call   0x140009d30
   140009973:	lea    rdi,[rsp+0x88]
   14000997b:	mov    QWORD PTR [rsp+0x80],rdi
   140009983:	jmp    0x1400099a7
   140009985:	xor    ebx,ebx
   140009987:	or     rsi,0xffffffffffffffff
   14000998b:	mov    rdi,QWORD PTR [rsp+0x80]
   140009993:	mov    r12,QWORD PTR [rsp+0x50]
   140009998:	mov    r13,QWORD PTR [rsp+0x48]
   14000999d:	mov    rax,QWORD PTR [rsp+0x60]
   1400099a2:	mov    QWORD PTR [rsp+0x40],rax
   1400099a7:	test   rdi,rdi
   1400099aa:	je     0x140009a7a
   1400099b0:	lea    r14,[rsp+0x190]
   1400099b8:	cmp    WORD PTR [rsp+0x190],bx
   1400099c0:	je     0x140009a07
   1400099c2:	mov    r15d,0x30
   1400099c8:	mov    rcx,r14
   1400099cb:	call   QWORD PTR [rip+0xcab7]        # 0x140016488
   1400099d1:	movzx  ecx,WORD PTR [r14]
   1400099d5:	cmp    cx,0x5c
   1400099d9:	jne    0x1400099f6
   1400099db:	cmp    WORD PTR [rax],r15w
   1400099df:	jne    0x1400099f6
   1400099e1:	mov    WORD PTR [rdi],bx
   1400099e4:	add    rdi,0x2
   1400099e8:	mov    rcx,rax
   1400099eb:	call   QWORD PTR [rip+0xca97]        # 0x140016488
   1400099f1:	mov    r14,rax
   1400099f4:	jmp    0x140009a01
   1400099f6:	mov    WORD PTR [rdi],cx
   1400099f9:	add    rdi,0x2
   1400099fd:	add    r14,0x2
   140009a01:	cmp    WORD PTR [r14],bx
   140009a05:	jne    0x1400099c8
   140009a07:	mov    DWORD PTR [rdi],0x0
   140009a0d:	mov    eax,ebx
   140009a0f:	mov    rdx,QWORD PTR [rsp+0x80]
   140009a17:	test   rdx,rdx
   140009a1a:	setne  al
   140009a1d:	test   eax,eax
   140009a1f:	jne    0x140009a2c
   140009a21:	mov    ecx,0x80004005
   140009a26:	call   0x140009d30
   140009a2b:	int3   
   140009a2c:	mov    r9d,ebx
   140009a2f:	mov    r8,rdx
   140009a32:	mov    rcx,rsi
   140009a35:	inc    rcx
   140009a38:	cmp    WORD PTR [r8+rcx*2],bx
   140009a3d:	jne    0x140009a35
   140009a3f:	inc    ecx
   140009a41:	lea    r8,[r8+rcx*2]
   140009a45:	lea    r9d,[r9+rcx*2]
   140009a49:	cmp    ecx,0x1
   140009a4c:	jne    0x140009a32
   140009a4e:	mov    DWORD PTR [rsp+0x28],r9d
   140009a53:	mov    QWORD PTR [rsp+0x20],rdx
   140009a58:	lea    r9d,[rcx+0x6]
   140009a5c:	xor    r8d,r8d
   140009a5f:	mov    rdx,QWORD PTR [rsp+0x40]
   140009a64:	mov    rcx,QWORD PTR [r13+0x0]
   140009a68:	call   QWORD PTR [rip+0xc5e2]        # 0x140016050
   140009a6e:	mov    esi,eax
   140009a70:	mov    rdi,QWORD PTR [rsp+0x80]
   140009a78:	jmp    0x140009a7f
   140009a7a:	mov    esi,0xe
   140009a7f:	lea    rax,[rsp+0x88]
   140009a87:	cmp    rdi,rax
   140009a8a:	je     0x140009cda
   140009a90:	lea    rcx,[rsp+0x80]
   140009a98:	call   0x140009238
   140009a9d:	jmp    0x140009cda
   140009aa2:	lea    r9,[rsp+0x30]
   140009aa7:	xor    r8d,r8d
   140009aaa:	xor    edx,edx
   140009aac:	lea    rcx,[rsp+0x190]
   140009ab4:	call   QWORD PTR [rip+0xc7e6]        # 0x1400162a0
   140009aba:	mov    eax,DWORD PTR [rsp+0x30]
   140009abe:	mov    DWORD PTR [rsp+0x38],eax
   140009ac2:	mov    DWORD PTR [rsp+0x28],0x4
   140009aca:	lea    rax,[rsp+0x38]
   140009acf:	mov    r9d,0x4
   140009ad5:	jmp    0x140009cc3
   140009ada:	lea    rax,[rsp+0x190]
   140009ae2:	or     rsi,0xffffffffffffffff
   140009ae6:	mov    rdi,rsi
   140009ae9:	inc    rdi
   140009aec:	cmp    WORD PTR [rax+rdi*2],bx
   140009af0:	jne    0x140009ae9
   140009af2:	mov    DWORD PTR [rsp+0x38],edi
   140009af6:	test   dil,0x1
   140009afa:	je     0x140009b06
   140009afc:	mov    eax,0x80004005
   140009b01:	jmp    0x140009cfb
   140009b06:	mov    eax,edi
   140009b08:	cdq    
   140009b09:	sub    eax,edx
   140009b0b:	sar    eax,1
   140009b0d:	movsxd r14,eax
   140009b10:	mov    DWORD PTR [rsp+0x30],r14d
   140009b15:	mov    QWORD PTR [rsp+0x80],rbx
   140009b1d:	mov    rcx,r14
   140009b20:	test   eax,eax
   140009b22:	je     0x140009b5f
   140009b24:	xor    edx,edx
   140009b26:	mov    rax,rsi
   140009b29:	div    rcx
   140009b2c:	cmp    rax,0x1
   140009b30:	jae    0x140009b3c
   140009b32:	mov    ecx,0x80070057
   140009b37:	call   0x140009d30
   140009b3c:	cmp    rcx,0x100
   140009b43:	jbe    0x140009b5f
   140009b45:	mov    rdx,rcx
   140009b48:	lea    rcx,[rsp+0x80]
   140009b50:	call   0x140009268
   140009b55:	mov    rcx,QWORD PTR [rsp+0x80]
   140009b5d:	jmp    0x140009b6f
   140009b5f:	lea    rcx,[rsp+0x88]
   140009b67:	mov    QWORD PTR [rsp+0x80],rcx
   140009b6f:	mov    rsi,QWORD PTR [rsp+0x40]
   140009b74:	jmp    0x140009b98
   140009b76:	xor    ebx,ebx
   140009b78:	mov    edi,DWORD PTR [rsp+0x38]
   140009b7c:	mov    r14d,DWORD PTR [rsp+0x30]
   140009b81:	mov    rcx,QWORD PTR [rsp+0x80]
   140009b89:	mov    r12,QWORD PTR [rsp+0x50]
   140009b8e:	mov    r13,QWORD PTR [rsp+0x48]
   140009b93:	mov    rsi,QWORD PTR [rsp+0x60]
   140009b98:	test   rcx,rcx
   140009b9b:	jne    0x140009bc0
   140009b9d:	lea    rax,[rsp+0x88]
   140009ba5:	test   rax,rax
   140009ba8:	je     0x140009afc
   140009bae:	lea    rcx,[rsp+0x80]
   140009bb6:	call   0x140009238
   140009bbb:	jmp    0x140009afc
   140009bc0:	movsxd r8,r14d
   140009bc3:	xor    edx,edx
   140009bc5:	call   0x140014b26
   140009bca:	mov    r8d,ebx
   140009bcd:	mov    r9,rbx
   140009bd0:	movsxd r11,edi
   140009bd3:	test   edi,edi
   140009bd5:	jle    0x140009c4a
   140009bd7:	mov    r15d,0x30
   140009bdd:	mov    eax,r8d
   140009be0:	cdq    
   140009be1:	sub    eax,edx
   140009be3:	sar    eax,1
   140009be5:	movsxd r10,eax
   140009be8:	add    r10,QWORD PTR [rsp+0x80]
   140009bf0:	movzx  edx,WORD PTR [rsp+r9*2+0x190]
   140009bf9:	mov    eax,edx
   140009bfb:	cmp    edx,r15d
   140009bfe:	jl     0x140009c26
   140009c00:	cmp    eax,0x39
   140009c03:	jle    0x140009c21
   140009c05:	cmp    eax,0x40
   140009c08:	jle    0x140009c26
   140009c0a:	cmp    eax,0x46
   140009c0d:	jle    0x140009c1c
   140009c0f:	add    eax,0xffffff9f
   140009c12:	cmp    eax,0x5
   140009c15:	ja     0x140009c26
   140009c17:	sub    dl,0x57
   140009c1a:	jmp    0x140009c28
   140009c1c:	sub    dl,0x37
   140009c1f:	jmp    0x140009c28
   140009c21:	sub    dl,r15b
   140009c24:	jmp    0x140009c28
   140009c26:	mov    dl,bl
   140009c28:	mov    ecx,r8d
   140009c2b:	and    ecx,0x1
   140009c2e:	shl    ecx,0x2
   140009c31:	mov    eax,0x4
   140009c36:	sub    eax,ecx
   140009c38:	mov    cl,al
   140009c3a:	shl    dl,cl
   140009c3c:	or     BYTE PTR [r10],dl
   140009c3f:	inc    r8d
   140009c42:	inc    r9
   140009c45:	cmp    r9,r11
   140009c48:	jl     0x140009bdd
   140009c4a:	mov    DWORD PTR [rsp+0x28],r14d
   140009c4f:	mov    rax,QWORD PTR [rsp+0x80]
   140009c57:	mov    QWORD PTR [rsp+0x20],rax
   140009c5c:	mov    r9d,0x3
   140009c62:	xor    r8d,r8d
   140009c65:	mov    rdx,rsi
   140009c68:	mov    rcx,QWORD PTR [r13+0x0]
   140009c6c:	call   QWORD PTR [rip+0xc3de]        # 0x140016050
   140009c72:	mov    esi,eax
   140009c74:	lea    rax,[rsp+0x88]
   140009c7c:	cmp    QWORD PTR [rsp+0x80],rax
   140009c84:	je     0x140009cda
   140009c86:	lea    rcx,[rsp+0x80]
   140009c8e:	call   0x140009238
   140009c93:	jmp    0x140009cda
   140009c95:	lea    rax,[rsp+0x190]
   140009c9d:	or     rsi,0xffffffffffffffff
   140009ca1:	inc    rsi
   140009ca4:	cmp    WORD PTR [rax+rsi*2],bx
   140009ca8:	jne    0x140009ca1
   140009caa:	lea    eax,[rsi*2+0x2]
   140009cb1:	mov    DWORD PTR [rsp+0x28],eax
   140009cb5:	lea    rax,[rsp+0x190]
   140009cbd:	mov    r9d,0x1
   140009cc3:	mov    QWORD PTR [rsp+0x20],rax
   140009cc8:	xor    r8d,r8d
   140009ccb:	mov    rdx,r15
   140009cce:	mov    rcx,QWORD PTR [r13+0x0]
   140009cd2:	call   QWORD PTR [rip+0xc378]        # 0x140016050
   140009cd8:	mov    esi,eax
   140009cda:	test   esi,esi
   140009cdc:	je     0x140009ce7
   140009cde:	mov    ecx,esi
   140009ce0:	call   0x14000a044
   140009ce5:	jmp    0x140009cfb
   140009ce7:	mov    rdx,QWORD PTR [rsp+0x70]
   140009cec:	mov    rcx,r12
   140009cef:	call   0x14000a058
   140009cf4:	test   eax,eax
   140009cf6:	cmovs  ebx,eax
   140009cf9:	mov    eax,ebx
   140009cfb:	mov    rcx,QWORD PTR [rsp+0x2190]
   140009d03:	xor    rcx,rsp
   140009d06:	call   0x1400146a0
   140009d0b:	add    rsp,0x21a0
   140009d12:	pop    r15
   140009d14:	pop    r14
   140009d16:	pop    r13
   140009d18:	pop    r12
   140009d1a:	pop    rdi
   140009d1b:	pop    rsi
   140009d1c:	pop    rbx
   140009d1d:	ret    
   140009d1e:	int3   
   140009d1f:	int3   
   140009d20:	int3   
   140009d21:	int3   
   140009d22:	int3   
   140009d23:	int3   
   140009d24:	mov    DWORD PTR [rcx],edx
   140009d26:	mov    rax,rcx
   140009d29:	ret    
   140009d2a:	int3   
   140009d2b:	int3   
   140009d2c:	int3   
   140009d2d:	int3   
   140009d2e:	int3   
   140009d2f:	int3   
   140009d30:	sub    rsp,0x28
   140009d34:	mov    edx,ecx
   140009d36:	lea    rcx,[rsp+0x40]
   140009d3b:	call   0x140009d24
   140009d40:	lea    rdx,[rip+0x11c49]        # 0x14001b990
   140009d47:	mov    ecx,DWORD PTR [rax]
   140009d49:	mov    DWORD PTR [rsp+0x38],ecx
   140009d4d:	lea    rcx,[rsp+0x38]
   140009d52:	call   0x14001502a
   140009d57:	int3   
   140009d58:	int3   
   140009d59:	int3   
   140009d5a:	int3   
   140009d5b:	int3   
   140009d5c:	int3   
   140009d5d:	int3   
   140009d5e:	int3   
   140009d5f:	int3   
   140009d60:	mov    QWORD PTR [rsp+0x18],rbx
   140009d65:	push   rdi
   140009d66:	mov    eax,0x2030
   140009d6b:	call   0x140015130
   140009d70:	sub    rsp,rax
   140009d73:	mov    rax,QWORD PTR [rip+0x14296]        # 0x14001e010
   140009d7a:	xor    rax,rsp
   140009d7d:	mov    QWORD PTR [rsp+0x2020],rax
   140009d85:	cmp    WORD PTR [rdx],0x3d
   140009d89:	mov    rdi,rdx
   140009d8c:	mov    rbx,rcx
   140009d8f:	jne    0x140009de0
   140009d91:	call   0x14000a058
   140009d96:	test   eax,eax
   140009d98:	js     0x140009de2
   140009d9a:	mov    rcx,QWORD PTR [rbx]
   140009d9d:	movzx  eax,WORD PTR [rcx]
   140009da0:	cmp    eax,0x20
   140009da3:	ja     0x140009dc0
   140009da5:	movabs rdx,0x100002600
   140009daf:	bt     rdx,rax
   140009db3:	jae    0x140009dc0
   140009db5:	call   QWORD PTR [rip+0xc6cd]        # 0x140016488
   140009dbb:	mov    QWORD PTR [rbx],rax
   140009dbe:	jmp    0x140009d9a
   140009dc0:	lea    rdx,[rsp+0x20]
   140009dc5:	mov    rcx,rbx
   140009dc8:	call   0x14000a058
   140009dcd:	test   eax,eax
   140009dcf:	js     0x140009de2
   140009dd1:	mov    rdx,rdi
   140009dd4:	mov    rcx,rbx
   140009dd7:	call   0x14000a058
   140009ddc:	test   eax,eax
   140009dde:	js     0x140009de2
   140009de0:	xor    eax,eax
   140009de2:	mov    rcx,QWORD PTR [rsp+0x2020]
   140009dea:	xor    rcx,rsp
   140009ded:	call   0x1400146a0
   140009df2:	mov    rbx,QWORD PTR [rsp+0x2050]
   140009dfa:	add    rsp,0x2030
   140009e01:	pop    rdi
   140009e02:	ret    
   140009e03:	int3   
   140009e04:	int3   
   140009e05:	int3   
   140009e06:	int3   
   140009e07:	int3   
   140009e08:	int3   
   140009e09:	int3   
   140009e0a:	int3   
   140009e0b:	int3   
   140009e0c:	mov    QWORD PTR [rsp+0x18],rbx
   140009e11:	push   rbp
   140009e12:	push   rsi
   140009e13:	push   rdi
   140009e14:	lea    rbp,[rsp-0x180]
   140009e1c:	sub    rsp,0x280
   140009e23:	mov    rax,QWORD PTR [rip+0x141e6]        # 0x14001e010
   140009e2a:	xor    rax,rsp
   140009e2d:	mov    QWORD PTR [rbp+0x170],rax
   140009e34:	xor    eax,eax
   140009e36:	mov    rdi,rcx
   140009e39:	mov    rcx,QWORD PTR [rcx]
   140009e3c:	mov    r9d,0x2001f
   140009e42:	mov    QWORD PTR [rsp+0x48],rax
   140009e47:	xor    r8d,r8d
   140009e4a:	mov    QWORD PTR [rsp+0x50],rax
   140009e4f:	mov    rsi,rdx
   140009e52:	mov    QWORD PTR [rsp+0x58],rax
   140009e57:	mov    QWORD PTR [rsp+0x60],rax
   140009e5c:	lea    rax,[rsp+0x60]
   140009e61:	mov    QWORD PTR [rsp+0x20],rax
   140009e66:	call   QWORD PTR [rip+0xc1dc]        # 0x140016048
   140009e6c:	mov    ebx,eax
   140009e6e:	test   eax,eax
   140009e70:	jne    0x140009f0f
   140009e76:	mov    rcx,QWORD PTR [rsp+0x48]
   140009e7b:	test   rcx,rcx
   140009e7e:	je     0x140009e88
   140009e80:	call   QWORD PTR [rip+0xc1aa]        # 0x140016030
   140009e86:	mov    ebx,eax
   140009e88:	mov    rcx,QWORD PTR [rsp+0x60]
   140009e8d:	mov    QWORD PTR [rsp+0x48],rcx
   140009e92:	test   ebx,ebx
   140009e94:	jne    0x140009f0f
   140009e96:	jmp    0x140009eb2
   140009e98:	lea    rdx,[rsp+0x70]
   140009e9d:	lea    rcx,[rsp+0x48]
   140009ea2:	call   0x140009e0c
   140009ea7:	mov    ebx,eax
   140009ea9:	test   eax,eax
   140009eab:	jne    0x140009f0f
   140009ead:	mov    rcx,QWORD PTR [rsp+0x48]
   140009eb2:	lea    rax,[rsp+0x68]
   140009eb7:	mov    DWORD PTR [rsp+0x40],0x100
   140009ebf:	mov    QWORD PTR [rsp+0x38],rax
   140009ec4:	lea    r9,[rsp+0x40]
   140009ec9:	and    QWORD PTR [rsp+0x30],0x0
   140009ecf:	lea    r8,[rsp+0x70]
   140009ed4:	and    QWORD PTR [rsp+0x28],0x0
   140009eda:	xor    edx,edx
   140009edc:	and    QWORD PTR [rsp+0x20],0x0
   140009ee2:	call   QWORD PTR [rip+0xc158]        # 0x140016040
   140009ee8:	test   eax,eax
   140009eea:	je     0x140009e98
   140009eec:	mov    rcx,QWORD PTR [rsp+0x48]
   140009ef1:	test   rcx,rcx
   140009ef4:	je     0x140009f02
   140009ef6:	call   QWORD PTR [rip+0xc134]        # 0x140016030
   140009efc:	and    QWORD PTR [rsp+0x48],0x0
   140009f02:	mov    rdx,rsi
   140009f05:	mov    rcx,rdi
   140009f08:	call   0x140009f74
   140009f0d:	mov    ebx,eax
   140009f0f:	mov    rcx,QWORD PTR [rsp+0x48]
   140009f14:	test   rcx,rcx
   140009f17:	je     0x140009f1f
   140009f19:	call   QWORD PTR [rip+0xc111]        # 0x140016030
   140009f1f:	mov    eax,ebx
   140009f21:	mov    rcx,QWORD PTR [rbp+0x170]
   140009f28:	xor    rcx,rsp
   140009f2b:	call   0x1400146a0
   140009f30:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140009f38:	add    rsp,0x280
   140009f3f:	pop    rdi
   140009f40:	pop    rsi
   140009f41:	pop    rbp
   140009f42:	ret    
   140009f43:	int3   
   140009f44:	int3   
   140009f45:	int3   
   140009f46:	int3   
   140009f47:	int3   
   140009f48:	int3   
   140009f49:	int3   
   140009f4a:	int3   
   140009f4b:	int3   
   140009f4c:	rex push rbx
   140009f4e:	sub    rsp,0x20
   140009f52:	mov    rbx,rcx
   140009f55:	mov    rcx,QWORD PTR [rcx]
   140009f58:	test   rcx,rcx
   140009f5b:	je     0x140009f67
   140009f5d:	call   QWORD PTR [rip+0xc0cd]        # 0x140016030
   140009f63:	and    QWORD PTR [rbx],0x0
   140009f67:	add    rsp,0x20
   140009f6b:	pop    rbx
   140009f6c:	ret    
   140009f6d:	int3   
   140009f6e:	int3   
   140009f6f:	int3   
   140009f70:	int3   
   140009f71:	int3   
   140009f72:	int3   
   140009f73:	int3   
   140009f74:	mov    QWORD PTR [rsp+0x8],rbx
   140009f79:	mov    QWORD PTR [rsp+0x10],rsi
   140009f7e:	push   rdi
   140009f7f:	sub    rsp,0x20
   140009f83:	cmp    QWORD PTR [rcx+0x8],0x0
   140009f88:	mov    rsi,rdx
   140009f8b:	mov    rbx,rcx
   140009f8e:	jne    0x140009fea
   140009f90:	cmp    QWORD PTR [rcx+0x10],0x0
   140009f95:	jne    0x140009fea
   140009f97:	lea    rcx,[rip+0xdf42]        # 0x140017ee0
   140009f9e:	call   QWORD PTR [rip+0xc2ac]        # 0x140016250
   140009fa4:	test   rax,rax
   140009fa7:	je     0x140009fbf
   140009fa9:	lea    rdx,[rip+0xdf88]        # 0x140017f38
   140009fb0:	mov    rcx,rax
   140009fb3:	call   QWORD PTR [rip+0xc2a7]        # 0x140016260
   140009fb9:	mov    QWORD PTR [rbx+0x8],rax
   140009fbd:	jmp    0x140009fea
   140009fbf:	xor    r8d,r8d
   140009fc2:	lea    rcx,[rip+0xdf7f]        # 0x140017f48
   140009fc9:	xor    edx,edx
   140009fcb:	call   QWORD PTR [rip+0xc287]        # 0x140016258
   140009fd1:	test   rax,rax
   140009fd4:	je     0x140009fea
   140009fd6:	lea    rdx,[rip+0xdf8b]        # 0x140017f68
   140009fdd:	mov    rcx,rax
   140009fe0:	call   QWORD PTR [rip+0xc27a]        # 0x140016260
   140009fe6:	mov    QWORD PTR [rbx+0x10],rax
   140009fea:	mov    rdi,QWORD PTR [rbx+0x8]
   140009fee:	test   rdi,rdi
   140009ff1:	je     0x14000a00c
   140009ff3:	mov    rcx,rdi
   140009ff6:	call   QWORD PTR [rip+0xc6fc]        # 0x1400166f8
   140009ffc:	mov    rcx,QWORD PTR [rbx]
   140009fff:	xor    r9d,r9d
   14000a002:	xor    r8d,r8d
   14000a005:	mov    rdx,rsi
   14000a008:	call   rdi
   14000a00a:	jmp    0x14000a02e
   14000a00c:	mov    rdi,QWORD PTR [rbx+0x10]
   14000a010:	test   rdi,rdi
   14000a013:	je     0x14000a028
   14000a015:	mov    rcx,rdi
   14000a018:	call   QWORD PTR [rip+0xc6da]        # 0x1400166f8
   14000a01e:	mov    rcx,QWORD PTR [rbx]
   14000a021:	mov    rdx,rsi
   14000a024:	call   rdi
   14000a026:	jmp    0x14000a02e
   14000a028:	call   QWORD PTR [rip+0xc25a]        # 0x140016288
   14000a02e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a033:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a038:	add    rsp,0x20
   14000a03c:	pop    rdi
   14000a03d:	ret    
   14000a03e:	int3   
   14000a03f:	int3   
   14000a040:	int3   
   14000a041:	int3   
   14000a042:	int3   
   14000a043:	int3   
   14000a044:	movzx  eax,cx
   14000a047:	or     eax,0x80070000
   14000a04c:	test   ecx,ecx
   14000a04e:	cmovle eax,ecx
   14000a051:	ret    
   14000a052:	int3   
   14000a053:	int3   
   14000a054:	int3   
   14000a055:	int3   
   14000a056:	int3   
   14000a057:	int3   
   14000a058:	mov    rax,rsp
   14000a05b:	mov    QWORD PTR [rax+0x8],rbx
   14000a05f:	mov    QWORD PTR [rax+0x10],rbp
   14000a063:	mov    QWORD PTR [rax+0x18],rsi
   14000a067:	mov    QWORD PTR [rax+0x20],rdi
   14000a06b:	push   r12
   14000a06d:	push   r14
   14000a06f:	push   r15
   14000a071:	sub    rsp,0x20
   14000a075:	mov    rbx,rdx
   14000a078:	mov    rdi,rcx
   14000a07b:	movabs r12,0x100002600
   14000a085:	mov    rcx,QWORD PTR [rdi]
   14000a088:	movzx  eax,WORD PTR [rcx]
   14000a08b:	cmp    eax,0x20
   14000a08e:	ja     0x14000a0a1
   14000a090:	bt     r12,rax
   14000a094:	jae    0x14000a0a1
   14000a096:	call   QWORD PTR [rip+0xc3ec]        # 0x140016488
   14000a09c:	mov    QWORD PTR [rdi],rax
   14000a09f:	jmp    0x14000a085
   14000a0a1:	xor    r14d,r14d
   14000a0a4:	cmp    r14w,WORD PTR [rcx]
   14000a0a8:	je     0x14000a1be
   14000a0ae:	lea    r15d,[r14+0x27]
   14000a0b2:	lea    rbp,[rbx+0x2000]
   14000a0b9:	cmp    r15w,WORD PTR [rcx]
   14000a0bd:	jne    0x14000a15e
   14000a0c3:	call   QWORD PTR [rip+0xc3bf]        # 0x140016488
   14000a0c9:	mov    QWORD PTR [rdi],rax
   14000a0cc:	cmp    r14w,WORD PTR [rax]
   14000a0d0:	je     0x14000a13e
   14000a0d2:	mov    rcx,QWORD PTR [rdi]
   14000a0d5:	cmp    r15w,WORD PTR [rcx]
   14000a0d9:	jne    0x14000a0e7
   14000a0db:	call   QWORD PTR [rip+0xc3a7]        # 0x140016488
   14000a0e1:	cmp    r15w,WORD PTR [rax]
   14000a0e5:	jne    0x14000a13e
   14000a0e7:	mov    rcx,QWORD PTR [rdi]
   14000a0ea:	cmp    r15w,WORD PTR [rcx]
   14000a0ee:	jne    0x14000a0f9
   14000a0f0:	call   QWORD PTR [rip+0xc392]        # 0x140016488
   14000a0f6:	mov    QWORD PTR [rdi],rax
   14000a0f9:	mov    rsi,QWORD PTR [rdi]
   14000a0fc:	mov    rcx,rsi
   14000a0ff:	call   QWORD PTR [rip+0xc383]        # 0x140016488
   14000a105:	mov    QWORD PTR [rdi],rax
   14000a108:	sub    rax,rsi
   14000a10b:	sar    rax,1
   14000a10e:	lea    rcx,[rax+0x1]
   14000a112:	lea    rcx,[rbx+rcx*2]
   14000a116:	cmp    rcx,rbp
   14000a119:	jae    0x14000a1be
   14000a11f:	test   eax,eax
   14000a121:	jle    0x14000a139
   14000a123:	sub    rsi,rbx
   14000a126:	mov    ecx,eax
   14000a128:	movzx  eax,WORD PTR [rsi+rbx*1]
   14000a12c:	mov    WORD PTR [rbx],ax
   14000a12f:	add    rbx,0x2
   14000a133:	sub    rcx,0x1
   14000a137:	jne    0x14000a128
   14000a139:	mov    rax,QWORD PTR [rdi]
   14000a13c:	jmp    0x14000a0cc
   14000a13e:	mov    rax,QWORD PTR [rdi]
   14000a141:	cmp    r14w,WORD PTR [rax]
   14000a145:	je     0x14000a1be
   14000a147:	cmp    rbx,rbp
   14000a14a:	jae    0x14000a1be
   14000a14c:	mov    WORD PTR [rbx],r14w
   14000a150:	mov    rcx,QWORD PTR [rdi]
   14000a153:	call   QWORD PTR [rip+0xc32f]        # 0x140016488
   14000a159:	mov    QWORD PTR [rdi],rax
   14000a15c:	jmp    0x14000a1ba
   14000a15e:	mov    rsi,QWORD PTR [rdi]
   14000a161:	movzx  eax,WORD PTR [rsi]
   14000a164:	cmp    eax,0x20
   14000a167:	ja     0x14000a16f
   14000a169:	bt     r12,rax
   14000a16d:	jb     0x14000a1b1
   14000a16f:	mov    rcx,rsi
   14000a172:	call   QWORD PTR [rip+0xc310]        # 0x140016488
   14000a178:	mov    QWORD PTR [rdi],rax
   14000a17b:	sub    rax,rsi
   14000a17e:	sar    rax,1
   14000a181:	lea    rcx,[rax+0x1]
   14000a185:	lea    rcx,[rbx+rcx*2]
   14000a189:	cmp    rcx,rbp
   14000a18c:	jae    0x14000a1be
   14000a18e:	test   eax,eax
   14000a190:	jle    0x14000a1a8
   14000a192:	sub    rsi,rbx
   14000a195:	mov    ecx,eax
   14000a197:	movzx  eax,WORD PTR [rsi+rbx*1]
   14000a19b:	mov    WORD PTR [rbx],ax
   14000a19e:	add    rbx,0x2
   14000a1a2:	sub    rcx,0x1
   14000a1a6:	jne    0x14000a197
   14000a1a8:	mov    rax,QWORD PTR [rdi]
   14000a1ab:	cmp    r14w,WORD PTR [rax]
   14000a1af:	jne    0x14000a15e
   14000a1b1:	cmp    rbx,rbp
   14000a1b4:	jae    0x14000a1be
   14000a1b6:	mov    WORD PTR [rbx],r14w
   14000a1ba:	xor    eax,eax
   14000a1bc:	jmp    0x14000a1c3
   14000a1be:	mov    eax,0x80020009
   14000a1c3:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a1c8:	mov    rbp,QWORD PTR [rsp+0x48]
   14000a1cd:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a1d2:	mov    rdi,QWORD PTR [rsp+0x58]
   14000a1d7:	add    rsp,0x20
   14000a1db:	pop    r15
   14000a1dd:	pop    r14
   14000a1df:	pop    r12
   14000a1e1:	ret    
   14000a1e2:	int3   
   14000a1e3:	int3   
   14000a1e4:	int3   
   14000a1e5:	int3   
   14000a1e6:	int3   
   14000a1e7:	int3   
   14000a1e8:	rex push rbp
   14000a1ea:	push   rbx
   14000a1eb:	push   rsi
   14000a1ec:	push   rdi
   14000a1ed:	lea    rbp,[rsp-0x21f8]
   14000a1f5:	mov    eax,0x22f8
   14000a1fa:	call   0x140015130
   14000a1ff:	sub    rsp,rax
   14000a202:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   14000a20a:	mov    rax,QWORD PTR [rip+0x13dff]        # 0x14001e010
   14000a211:	xor    rax,rsp
   14000a214:	mov    QWORD PTR [rbp+0x21e0],rax
   14000a21b:	mov    DWORD PTR [rsp+0x78],r9d
   14000a220:	mov    QWORD PTR [rbp-0x78],r8
   14000a224:	mov    rdi,rdx
   14000a227:	mov    rax,rcx
   14000a22a:	mov    QWORD PTR [rsp+0x70],rcx
   14000a22f:	xor    ecx,ecx
   14000a231:	mov    esi,ecx
   14000a233:	mov    QWORD PTR [rbp-0x70],rcx
   14000a237:	mov    QWORD PTR [rbp-0x68],rcx
   14000a23b:	mov    QWORD PTR [rbp-0x60],rcx
   14000a23f:	mov    ecx,DWORD PTR [rbp+0x2240]
   14000a245:	mov    DWORD PTR [rbp-0x40],ecx
   14000a248:	mov    rcx,rax
   14000a24b:	call   0x14000a058
   14000a250:	test   eax,eax
   14000a252:	mov    ebx,eax
   14000a254:	js     0x14000a994
   14000a25a:	cmp    WORD PTR [rdi],0x7d
   14000a25e:	je     0x14000a994
   14000a264:	mov    eax,0x1
   14000a269:	mov    DWORD PTR [rsp+0x68],eax
   14000a26d:	lea    rdx,[rip+0xc72c]        # 0x1400169a0
   14000a274:	mov    rcx,rdi
   14000a277:	call   QWORD PTR [rip+0xbfcb]        # 0x140016248
   14000a27d:	xor    ecx,ecx
   14000a27f:	mov    ebx,ecx
   14000a281:	test   eax,eax
   14000a283:	sete   bl
   14000a286:	mov    DWORD PTR [rsp+0x60],ebx
   14000a28a:	lea    rdx,[rip+0xc6df]        # 0x140016970
   14000a291:	mov    rcx,rdi
   14000a294:	call   QWORD PTR [rip+0xbfae]        # 0x140016248
   14000a29a:	test   eax,eax
   14000a29c:	je     0x14000a2a6
   14000a29e:	test   ebx,ebx
   14000a2a0:	je     0x14000a36b
   14000a2a6:	mov    rdx,rdi
   14000a2a9:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a2ae:	call   0x14000a058
   14000a2b3:	mov    ebx,eax
   14000a2b5:	xor    edx,edx
   14000a2b7:	test   eax,eax
   14000a2b9:	js     0x14000a994
   14000a2bf:	cmp    DWORD PTR [rsp+0x78],edx
   14000a2c3:	je     0x14000a36b
   14000a2c9:	mov    QWORD PTR [rbp-0x58],rdx
   14000a2cd:	mov    QWORD PTR [rbp-0x50],rdx
   14000a2d1:	mov    QWORD PTR [rbp-0x48],rdx
   14000a2d5:	mov    rcx,rdi
   14000a2d8:	movzx  eax,WORD PTR [rdi]
   14000a2db:	jmp    0x14000a2ef
   14000a2dd:	cmp    ax,0x5c
   14000a2e1:	je     0x14000a2f6
   14000a2e3:	call   QWORD PTR [rip+0xc19f]        # 0x140016488
   14000a2e9:	mov    rcx,rax
   14000a2ec:	movzx  eax,WORD PTR [rax]
   14000a2ef:	test   ax,ax
   14000a2f2:	jne    0x14000a2dd
   14000a2f4:	jmp    0x14000a2ff
   14000a2f6:	test   rcx,rcx
   14000a2f9:	jne    0x14000a963
   14000a2ff:	lea    rbx,[rip+0xc7aa]        # 0x140016ab0
   14000a306:	mov    rdx,QWORD PTR [rbx]
   14000a309:	mov    rcx,rdi
   14000a30c:	call   QWORD PTR [rip+0xbf36]        # 0x140016248
   14000a312:	test   eax,eax
   14000a314:	je     0x14000a33a
   14000a316:	add    rbx,0x8
   14000a31a:	lea    rax,[rip+0xc7ef]        # 0x140016b10
   14000a321:	cmp    rbx,rax
   14000a324:	jl     0x14000a306
   14000a326:	mov    rax,QWORD PTR [rbp-0x78]
   14000a32a:	mov    QWORD PTR [rbp-0x58],rax
   14000a32e:	mov    rdx,rdi
   14000a331:	lea    rcx,[rbp-0x58]
   14000a335:	call   0x140009e0c
   14000a33a:	xor    eax,eax
   14000a33c:	cmp    DWORD PTR [rsp+0x60],eax
   14000a340:	je     0x14000a36b
   14000a342:	mov    rdx,rdi
   14000a345:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a34a:	call   0x14000a058
   14000a34f:	mov    ebx,eax
   14000a351:	test   eax,eax
   14000a353:	js     0x14000a994
   14000a359:	mov    rdx,rdi
   14000a35c:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a361:	call   0x140009d60
   14000a366:	jmp    0x14000a614
   14000a36b:	lea    rdx,[rip+0xc616]        # 0x140016988
   14000a372:	mov    rcx,rdi
   14000a375:	call   QWORD PTR [rip+0xbecd]        # 0x140016248
   14000a37b:	xor    ecx,ecx
   14000a37d:	test   eax,eax
   14000a37f:	jne    0x14000a39c
   14000a381:	mov    DWORD PTR [rsp+0x68],ecx
   14000a385:	mov    rdx,rdi
   14000a388:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a38d:	call   0x14000a058
   14000a392:	mov    ebx,eax
   14000a394:	test   eax,eax
   14000a396:	js     0x14000a994
   14000a39c:	lea    rdx,[rip+0xc5c5]        # 0x140016968
   14000a3a3:	mov    rcx,rdi
   14000a3a6:	call   QWORD PTR [rip+0xbe9c]        # 0x140016248
   14000a3ac:	xor    edx,edx
   14000a3ae:	test   eax,eax
   14000a3b0:	jne    0x14000a4a7
   14000a3b6:	lea    rdx,[rbp+0x1e0]
   14000a3bd:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a3c2:	call   0x14000a058
   14000a3c7:	mov    ebx,eax
   14000a3c9:	test   eax,eax
   14000a3cb:	js     0x14000a994
   14000a3d1:	mov    rdx,rdi
   14000a3d4:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a3d9:	call   0x14000a058
   14000a3de:	mov    ebx,eax
   14000a3e0:	xor    edx,edx
   14000a3e2:	test   eax,eax
   14000a3e4:	js     0x14000a994
   14000a3ea:	cmp    WORD PTR [rdi],0x3d
   14000a3ee:	jne    0x14000a963
   14000a3f4:	cmp    DWORD PTR [rsp+0x78],edx
   14000a3f8:	je     0x14000a42b
   14000a3fa:	mov    QWORD PTR [rbp-0x50],rdx
   14000a3fe:	mov    QWORD PTR [rbp-0x48],rdx
   14000a402:	mov    rax,QWORD PTR [rbp-0x78]
   14000a406:	mov    QWORD PTR [rbp-0x58],rax
   14000a40a:	mov    r9,rdi
   14000a40d:	lea    r8,[rbp+0x1e0]
   14000a414:	lea    rdx,[rbp-0x58]
   14000a418:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a41d:	call   0x140009810
   14000a422:	mov    ebx,eax
   14000a424:	xor    edx,edx
   14000a426:	jmp    0x14000a618
   14000a42b:	cmp    DWORD PTR [rbp+0x2240],edx
   14000a431:	jne    0x14000a495
   14000a433:	cmp    DWORD PTR [rsp+0x68],edx
   14000a437:	je     0x14000a495
   14000a439:	mov    QWORD PTR [rsp+0x68],rdx
   14000a43e:	lea    rax,[rsp+0x68]
   14000a443:	mov    QWORD PTR [rsp+0x20],rax
   14000a448:	mov    r9d,0x20006
   14000a44e:	xor    r8d,r8d
   14000a451:	mov    rcx,QWORD PTR [rbp-0x78]
   14000a455:	call   QWORD PTR [rip+0xbbed]        # 0x140016048
   14000a45b:	test   eax,eax
   14000a45d:	jne    0x14000a98b
   14000a463:	mov    rbx,QWORD PTR [rsp+0x68]
   14000a468:	mov    QWORD PTR [rbp-0x80],rbx
   14000a46c:	lea    rdx,[rbp+0x1e0]
   14000a473:	mov    rcx,rbx
   14000a476:	call   QWORD PTR [rip+0xbbe4]        # 0x140016060
   14000a47c:	test   eax,0xfffffffd
   14000a481:	jne    0x14000a949
   14000a487:	test   rbx,rbx
   14000a48a:	je     0x14000a495
   14000a48c:	mov    rcx,rbx
   14000a48f:	call   QWORD PTR [rip+0xbb9b]        # 0x140016030
   14000a495:	mov    rdx,rdi
   14000a498:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a49d:	call   0x140009d60
   14000a4a2:	jmp    0x14000a250
   14000a4a7:	mov    rcx,rdi
   14000a4aa:	movzx  eax,WORD PTR [rdi]
   14000a4ad:	jmp    0x14000a4c3
   14000a4af:	cmp    ax,0x5c
   14000a4b3:	je     0x14000a4ca
   14000a4b5:	call   QWORD PTR [rip+0xbfcd]        # 0x140016488
   14000a4bb:	mov    rcx,rax
   14000a4be:	movzx  eax,WORD PTR [rax]
   14000a4c1:	xor    edx,edx
   14000a4c3:	test   ax,ax
   14000a4c6:	jne    0x14000a4af
   14000a4c8:	jmp    0x14000a4d3
   14000a4ca:	test   rcx,rcx
   14000a4cd:	jne    0x14000a963
   14000a4d3:	cmp    DWORD PTR [rsp+0x78],edx
   14000a4d7:	je     0x14000a675
   14000a4dd:	mov    QWORD PTR [rsp+0x68],rdx
   14000a4e2:	lea    rax,[rsp+0x68]
   14000a4e7:	mov    QWORD PTR [rsp+0x20],rax
   14000a4ec:	mov    r9d,0x2001f
   14000a4f2:	xor    r8d,r8d
   14000a4f5:	mov    rdx,rdi
   14000a4f8:	mov    rbx,QWORD PTR [rbp-0x78]
   14000a4fc:	mov    rcx,rbx
   14000a4ff:	call   QWORD PTR [rip+0xbb43]        # 0x140016048
   14000a505:	xor    ecx,ecx
   14000a507:	test   eax,eax
   14000a509:	jne    0x14000a52e
   14000a50b:	mov    eax,ecx
   14000a50d:	test   rsi,rsi
   14000a510:	je     0x14000a51d
   14000a512:	mov    rcx,rsi
   14000a515:	call   QWORD PTR [rip+0xbb15]        # 0x140016030
   14000a51b:	xor    ecx,ecx
   14000a51d:	mov    rsi,QWORD PTR [rsp+0x68]
   14000a522:	mov    QWORD PTR [rbp-0x70],rsi
   14000a526:	test   eax,eax
   14000a528:	je     0x14000a5dd
   14000a52e:	mov    QWORD PTR [rsp+0x68],rcx
   14000a533:	lea    rax,[rsp+0x68]
   14000a538:	mov    QWORD PTR [rsp+0x20],rax
   14000a53d:	mov    r9d,0x20019
   14000a543:	xor    r8d,r8d
   14000a546:	mov    rdx,rdi
   14000a549:	mov    rcx,rbx
   14000a54c:	call   QWORD PTR [rip+0xbaf6]        # 0x140016048
   14000a552:	xor    ecx,ecx
   14000a554:	test   eax,eax
   14000a556:	jne    0x14000a577
   14000a558:	mov    eax,ecx
   14000a55a:	test   rsi,rsi
   14000a55d:	je     0x14000a56a
   14000a55f:	mov    rcx,rsi
   14000a562:	call   QWORD PTR [rip+0xbac8]        # 0x140016030
   14000a568:	xor    ecx,ecx
   14000a56a:	mov    rsi,QWORD PTR [rsp+0x68]
   14000a56f:	mov    QWORD PTR [rbp-0x70],rsi
   14000a573:	test   eax,eax
   14000a575:	je     0x14000a5dd
   14000a577:	mov    QWORD PTR [rsp+0x68],rcx
   14000a57c:	lea    rax,[rbp-0x3c]
   14000a580:	mov    QWORD PTR [rsp+0x40],rax
   14000a585:	lea    rax,[rsp+0x68]
   14000a58a:	mov    QWORD PTR [rsp+0x38],rax
   14000a58f:	mov    QWORD PTR [rsp+0x30],rcx
   14000a594:	mov    DWORD PTR [rsp+0x28],0x2001f
   14000a59c:	mov    DWORD PTR [rsp+0x20],ecx
   14000a5a0:	xor    r9d,r9d
   14000a5a3:	xor    r8d,r8d
   14000a5a6:	mov    rdx,rdi
   14000a5a9:	mov    rcx,rbx
   14000a5ac:	call   QWORD PTR [rip+0xbaa6]        # 0x140016058
   14000a5b2:	xor    edx,edx
   14000a5b4:	test   eax,eax
   14000a5b6:	jne    0x14000a98b
   14000a5bc:	mov    eax,edx
   14000a5be:	test   rsi,rsi
   14000a5c1:	je     0x14000a5cc
   14000a5c3:	mov    rcx,rsi
   14000a5c6:	call   QWORD PTR [rip+0xba64]        # 0x140016030
   14000a5cc:	mov    rsi,QWORD PTR [rsp+0x68]
   14000a5d1:	mov    QWORD PTR [rbp-0x70],rsi
   14000a5d5:	test   eax,eax
   14000a5d7:	jne    0x14000a98b
   14000a5dd:	mov    rdx,rdi
   14000a5e0:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a5e5:	call   0x14000a058
   14000a5ea:	mov    ebx,eax
   14000a5ec:	xor    edx,edx
   14000a5ee:	test   eax,eax
   14000a5f0:	js     0x14000a994
   14000a5f6:	cmp    WORD PTR [rdi],0x3d
   14000a5fa:	jne    0x14000a620
   14000a5fc:	mov    r9,rdi
   14000a5ff:	xor    r8d,r8d
   14000a602:	lea    rdx,[rbp-0x70]
   14000a606:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a60b:	call   0x140009810
   14000a610:	mov    rsi,QWORD PTR [rbp-0x70]
   14000a614:	xor    edx,edx
   14000a616:	mov    ebx,eax
   14000a618:	test   eax,eax
   14000a61a:	js     0x14000a994
   14000a620:	cmp    WORD PTR [rdi],0x7b
   14000a624:	jne    0x14000a25a
   14000a62a:	or     rax,0xffffffffffffffff
   14000a62e:	inc    rax
   14000a631:	cmp    WORD PTR [rdi+rax*2],dx
   14000a635:	jne    0x14000a62e
   14000a637:	mov    ecx,0x1
   14000a63c:	cmp    rax,rcx
   14000a63f:	jne    0x14000a25a
   14000a645:	mov    DWORD PTR [rsp+0x20],edx
   14000a649:	mov    r9d,DWORD PTR [rsp+0x78]
   14000a64e:	mov    r8,rsi
   14000a651:	mov    rdx,rdi
   14000a654:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a659:	call   0x14000a1e8
   14000a65e:	mov    ebx,eax
   14000a660:	test   eax,eax
   14000a662:	js     0x14000a994
   14000a668:	mov    rdx,rdi
   14000a66b:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a670:	jmp    0x14000a24b
   14000a675:	mov    ebx,DWORD PTR [rbp+0x2240]
   14000a67b:	test   ebx,ebx
   14000a67d:	jne    0x14000a6ce
   14000a67f:	mov    QWORD PTR [rbp-0x80],rdx
   14000a683:	lea    rax,[rbp-0x80]
   14000a687:	mov    QWORD PTR [rsp+0x20],rax
   14000a68c:	mov    r9d,0x20019
   14000a692:	xor    r8d,r8d
   14000a695:	mov    rdx,rdi
   14000a698:	mov    rcx,QWORD PTR [rbp-0x78]
   14000a69c:	call   QWORD PTR [rip+0xb9a6]        # 0x140016048
   14000a6a2:	mov    DWORD PTR [rsp+0x60],eax
   14000a6a6:	xor    edx,edx
   14000a6a8:	test   eax,eax
   14000a6aa:	jne    0x14000a6d9
   14000a6ac:	mov    eax,edx
   14000a6ae:	mov    DWORD PTR [rsp+0x60],edx
   14000a6b2:	test   rsi,rsi
   14000a6b5:	je     0x14000a6c4
   14000a6b7:	mov    rcx,rsi
   14000a6ba:	call   QWORD PTR [rip+0xb970]        # 0x140016030
   14000a6c0:	mov    DWORD PTR [rsp+0x60],eax
   14000a6c4:	mov    rsi,QWORD PTR [rbp-0x80]
   14000a6c8:	mov    QWORD PTR [rbp-0x70],rsi
   14000a6cc:	jmp    0x14000a6d7
   14000a6ce:	mov    eax,0x2
   14000a6d3:	mov    DWORD PTR [rsp+0x60],eax
   14000a6d7:	test   eax,eax
   14000a6d9:	mov    eax,0x1
   14000a6de:	cmovne ebx,eax
   14000a6e1:	mov    DWORD PTR [rbp+0x2240],ebx
   14000a6e7:	or     r9,0xffffffffffffffff
   14000a6eb:	mov    r8,rdi
   14000a6ee:	mov    edx,0x104
   14000a6f3:	lea    rcx,[rbp-0x30]
   14000a6f7:	call   QWORD PTR [rip+0xbe83]        # 0x140016580
   14000a6fd:	test   eax,eax
   14000a6ff:	je     0x14000a725
   14000a701:	cmp    eax,0xc
   14000a704:	je     0x14000a980
   14000a70a:	cmp    eax,0x16
   14000a70d:	je     0x14000a975
   14000a713:	cmp    eax,0x22
   14000a716:	je     0x14000a975
   14000a71c:	cmp    eax,0x50
   14000a71f:	jne    0x14000a96a
   14000a725:	mov    rdx,rdi
   14000a728:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a72d:	call   0x14000a058
   14000a732:	mov    ebx,eax
   14000a734:	test   eax,eax
   14000a736:	js     0x14000a994
   14000a73c:	mov    rdx,rdi
   14000a73f:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a744:	call   0x140009d60
   14000a749:	mov    ebx,eax
   14000a74b:	xor    edx,edx
   14000a74d:	test   eax,eax
   14000a74f:	js     0x14000a994
   14000a755:	cmp    WORD PTR [rdi],0x7b
   14000a759:	jne    0x14000a7bc
   14000a75b:	or     rax,0xffffffffffffffff
   14000a75f:	inc    rax
   14000a762:	cmp    WORD PTR [rdi+rax*2],dx
   14000a766:	jne    0x14000a75f
   14000a768:	mov    ecx,0x1
   14000a76d:	cmp    rax,rcx
   14000a770:	jne    0x14000a7bc
   14000a772:	mov    eax,DWORD PTR [rbp+0x2240]
   14000a778:	mov    DWORD PTR [rsp+0x20],eax
   14000a77c:	xor    r9d,r9d
   14000a77f:	mov    r8,rsi
   14000a782:	mov    rdx,rdi
   14000a785:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a78a:	call   0x14000a1e8
   14000a78f:	mov    ebx,eax
   14000a791:	xor    edx,edx
   14000a793:	test   eax,eax
   14000a795:	jns    0x14000a7a3
   14000a797:	cmp    DWORD PTR [rbp+0x2240],edx
   14000a79d:	je     0x14000a994
   14000a7a3:	mov    rdx,rdi
   14000a7a6:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a7ab:	call   0x14000a058
   14000a7b0:	mov    ebx,eax
   14000a7b2:	xor    edx,edx
   14000a7b4:	test   eax,eax
   14000a7b6:	js     0x14000a994
   14000a7bc:	mov    eax,DWORD PTR [rbp-0x40]
   14000a7bf:	mov    DWORD PTR [rbp+0x2240],eax
   14000a7c5:	mov    ecx,DWORD PTR [rsp+0x60]
   14000a7c9:	cmp    ecx,0x2
   14000a7cc:	je     0x14000a25a
   14000a7d2:	test   ecx,ecx
   14000a7d4:	je     0x14000a7e3
   14000a7d6:	test   eax,eax
   14000a7d8:	je     0x14000a98d
   14000a7de:	jmp    0x14000a25a
   14000a7e3:	test   eax,eax
   14000a7e5:	je     0x14000a89a
   14000a7eb:	mov    DWORD PTR [rsp+0x60],edx
   14000a7ef:	mov    QWORD PTR [rsp+0x58],rdx
   14000a7f4:	mov    QWORD PTR [rsp+0x50],rdx
   14000a7f9:	mov    QWORD PTR [rsp+0x48],rdx
   14000a7fe:	mov    QWORD PTR [rsp+0x40],rdx
   14000a803:	mov    QWORD PTR [rsp+0x38],rdx
   14000a808:	mov    QWORD PTR [rsp+0x30],rdx
   14000a80d:	mov    QWORD PTR [rsp+0x28],rdx
   14000a812:	lea    rax,[rsp+0x60]
   14000a817:	mov    QWORD PTR [rsp+0x20],rax
   14000a81c:	xor    r9d,r9d
   14000a81f:	xor    r8d,r8d
   14000a822:	xor    edx,edx
   14000a824:	mov    rcx,rsi
   14000a827:	call   QWORD PTR [rip+0xb80b]        # 0x140016038
   14000a82d:	xor    edx,edx
   14000a82f:	test   eax,eax
   14000a831:	jne    0x14000a89a
   14000a833:	mov    eax,edx
   14000a835:	cmp    DWORD PTR [rsp+0x60],edx
   14000a839:	seta   al
   14000a83c:	test   eax,eax
   14000a83e:	je     0x14000a89a
   14000a840:	lea    rax,[rip+0xc269]        # 0x140016ab0
   14000a847:	mov    QWORD PTR [rbp-0x80],rax
   14000a84b:	mov    rdx,QWORD PTR [rax]
   14000a84e:	lea    rcx,[rbp-0x30]
   14000a852:	call   QWORD PTR [rip+0xb9f0]        # 0x140016248
   14000a858:	xor    edx,edx
   14000a85a:	test   eax,eax
   14000a85c:	je     0x14000a25a
   14000a862:	mov    rax,QWORD PTR [rbp-0x80]
   14000a866:	add    rax,0x8
   14000a86a:	mov    QWORD PTR [rbp-0x80],rax
   14000a86e:	lea    rcx,[rip+0xc29b]        # 0x140016b10
   14000a875:	cmp    rax,rcx
   14000a878:	jl     0x14000a84b
   14000a87a:	cmp    DWORD PTR [rsp+0x68],edx
   14000a87e:	je     0x14000a25a
   14000a884:	lea    rdx,[rbp-0x30]
   14000a888:	lea    rcx,[rbp-0x70]
   14000a88c:	call   0x140009e0c
   14000a891:	mov    rsi,QWORD PTR [rbp-0x70]
   14000a895:	jmp    0x14000a25a
   14000a89a:	mov    DWORD PTR [rsp+0x60],edx
   14000a89e:	mov    QWORD PTR [rsp+0x58],rdx
   14000a8a3:	mov    QWORD PTR [rsp+0x50],rdx
   14000a8a8:	mov    QWORD PTR [rsp+0x48],rdx
   14000a8ad:	mov    QWORD PTR [rsp+0x40],rdx
   14000a8b2:	mov    QWORD PTR [rsp+0x38],rdx
   14000a8b7:	mov    QWORD PTR [rsp+0x30],rdx
   14000a8bc:	mov    QWORD PTR [rsp+0x28],rdx
   14000a8c1:	lea    rax,[rsp+0x60]
   14000a8c6:	mov    QWORD PTR [rsp+0x20],rax
   14000a8cb:	xor    r9d,r9d
   14000a8ce:	xor    r8d,r8d
   14000a8d1:	xor    edx,edx
   14000a8d3:	mov    rcx,rsi
   14000a8d6:	call   QWORD PTR [rip+0xb75c]        # 0x140016038
   14000a8dc:	xor    edx,edx
   14000a8de:	test   eax,eax
   14000a8e0:	je     0x14000a8e8
   14000a8e2:	mov    DWORD PTR [rsp+0x60],edx
   14000a8e6:	jmp    0x14000a8f5
   14000a8e8:	mov    eax,edx
   14000a8ea:	cmp    DWORD PTR [rsp+0x60],edx
   14000a8ee:	seta   al
   14000a8f1:	mov    DWORD PTR [rsp+0x60],eax
   14000a8f5:	test   rsi,rsi
   14000a8f8:	je     0x14000a90f
   14000a8fa:	mov    rcx,rsi
   14000a8fd:	call   QWORD PTR [rip+0xb72d]        # 0x140016030
   14000a903:	xor    edx,edx
   14000a905:	mov    esi,edx
   14000a907:	mov    QWORD PTR [rbp-0x70],rdx
   14000a90b:	test   eax,eax
   14000a90d:	jne    0x14000a98b
   14000a90f:	cmp    DWORD PTR [rsp+0x68],edx
   14000a913:	je     0x14000a25a
   14000a919:	cmp    DWORD PTR [rsp+0x60],edx
   14000a91d:	jne    0x14000a25a
   14000a923:	mov    QWORD PTR [rbp-0x50],rdx
   14000a927:	mov    QWORD PTR [rbp-0x48],rdx
   14000a92b:	mov    rax,QWORD PTR [rbp-0x78]
   14000a92f:	mov    QWORD PTR [rbp-0x58],rax
   14000a933:	lea    rdx,[rbp-0x30]
   14000a937:	lea    rcx,[rbp-0x58]
   14000a93b:	call   0x140009f74
   14000a940:	test   eax,eax
   14000a942:	jne    0x14000a98b
   14000a944:	jmp    0x14000a25a
   14000a949:	mov    ecx,eax
   14000a94b:	call   0x14000a044
   14000a950:	mov    ebx,eax
   14000a952:	mov    rcx,QWORD PTR [rbp-0x80]
   14000a956:	test   rcx,rcx
   14000a959:	je     0x14000a994
   14000a95b:	call   QWORD PTR [rip+0xb6cf]        # 0x140016030
   14000a961:	jmp    0x14000a994
   14000a963:	mov    ebx,0x80020009
   14000a968:	jmp    0x14000a994
   14000a96a:	mov    ecx,0x80004005
   14000a96f:	call   0x140009d30
   14000a974:	int3   
   14000a975:	mov    ecx,0x80070057
   14000a97a:	call   0x140009d30
   14000a97f:	int3   
   14000a980:	mov    ecx,0x8007000e
   14000a985:	call   0x140009d30
   14000a98a:	int3   
   14000a98b:	mov    ecx,eax
   14000a98d:	call   0x14000a044
   14000a992:	mov    ebx,eax
   14000a994:	test   rsi,rsi
   14000a997:	je     0x14000a9a2
   14000a999:	mov    rcx,rsi
   14000a99c:	call   QWORD PTR [rip+0xb68e]        # 0x140016030
   14000a9a2:	mov    eax,ebx
   14000a9a4:	mov    rcx,QWORD PTR [rbp+0x21e0]
   14000a9ab:	xor    rcx,rsp
   14000a9ae:	call   0x1400146a0
   14000a9b3:	add    rsp,0x22f8
   14000a9ba:	pop    rdi
   14000a9bb:	pop    rsi
   14000a9bc:	pop    rbx
   14000a9bd:	pop    rbp
   14000a9be:	ret    
   14000a9bf:	int3   
   14000a9c0:	int3   
   14000a9c1:	int3   
   14000a9c2:	int3   
   14000a9c3:	int3   
   14000a9c4:	int3   
   14000a9c5:	int3   
   14000a9c6:	int3   
   14000a9c7:	int3   
   14000a9c8:	mov    QWORD PTR [rsp+0x20],rbx
   14000a9cd:	push   rbp
   14000a9ce:	push   rsi
   14000a9cf:	push   rdi
   14000a9d0:	push   r12
   14000a9d2:	push   r13
   14000a9d4:	push   r14
   14000a9d6:	push   r15
   14000a9d8:	mov    eax,0x2050
   14000a9dd:	call   0x140015130
   14000a9e2:	sub    rsp,rax
   14000a9e5:	mov    rax,QWORD PTR [rip+0x13624]        # 0x14001e010
   14000a9ec:	xor    rax,rsp
   14000a9ef:	mov    QWORD PTR [rsp+0x2040],rax
   14000a9f7:	xor    r12d,r12d
   14000a9fa:	mov    r15d,r8d
   14000a9fd:	mov    QWORD PTR [rsp+0x30],r12
   14000aa02:	mov    rdi,rcx
   14000aa05:	mov    ebp,r12d
   14000aa08:	test   rdx,rdx
   14000aa0b:	je     0x14000aa20
   14000aa0d:	lea    r8,[rsp+0x30]
   14000aa12:	call   0x140009410
   14000aa17:	mov    rbp,QWORD PTR [rsp+0x30]
   14000aa1c:	mov    ebx,eax
   14000aa1e:	jmp    0x14000aa25
   14000aa20:	mov    ebx,0x80004003
   14000aa25:	test   ebx,ebx
   14000aa27:	js     0x14000ab53
   14000aa2d:	mov    QWORD PTR [rdi],rbp
   14000aa30:	cmp    r12w,WORD PTR [rbp+0x0]
   14000aa35:	je     0x14000ab4a
   14000aa3b:	lea    r13,[rip+0xd3be]        # 0x140017e00
   14000aa42:	lea    rdx,[rsp+0x40]
   14000aa47:	mov    rcx,rdi
   14000aa4a:	call   0x14000a058
   14000aa4f:	mov    ebx,eax
   14000aa51:	test   eax,eax
   14000aa53:	js     0x14000ab4a
   14000aa59:	mov    esi,r12d
   14000aa5c:	mov    rbx,r12
   14000aa5f:	mov    r14,r13
   14000aa62:	mov    rdx,QWORD PTR [r14]
   14000aa65:	lea    rcx,[rsp+0x40]
   14000aa6a:	call   QWORD PTR [rip+0xb7d8]        # 0x140016248
   14000aa70:	test   eax,eax
   14000aa72:	je     0x14000aa8b
   14000aa74:	inc    esi
   14000aa76:	inc    rbx
   14000aa79:	movsxd rax,esi
   14000aa7c:	add    r14,0x10
   14000aa80:	cmp    rax,0xe
   14000aa84:	jb     0x14000aa62
   14000aa86:	mov    rsi,r12
   14000aa89:	jmp    0x14000aa93
   14000aa8b:	add    rbx,rbx
   14000aa8e:	mov    rsi,QWORD PTR [r13+rbx*8+0x8]
   14000aa93:	test   rsi,rsi
   14000aa96:	je     0x14000ab45
   14000aa9c:	lea    rdx,[rsp+0x40]
   14000aaa1:	mov    rcx,rdi
   14000aaa4:	call   0x14000a058
   14000aaa9:	mov    ebx,eax
   14000aaab:	test   eax,eax
   14000aaad:	js     0x14000ab4a
   14000aab3:	mov    eax,0x7b
   14000aab8:	cmp    ax,WORD PTR [rsp+0x40]
   14000aabd:	jne    0x14000ab45
   14000aac3:	mov    DWORD PTR [rsp+0x20],r12d
   14000aac8:	mov    r8,rsi
   14000aacb:	lea    rdx,[rsp+0x40]
   14000aad0:	mov    rcx,rdi
   14000aad3:	test   r15d,r15d
   14000aad6:	je     0x14000ab06
   14000aad8:	mov    r14,QWORD PTR [rdi]
   14000aadb:	mov    r9d,r15d
   14000aade:	call   0x14000a1e8
   14000aae3:	mov    ebx,eax
   14000aae5:	test   eax,eax
   14000aae7:	jns    0x14000ab14
   14000aae9:	xor    r9d,r9d
   14000aaec:	mov    QWORD PTR [rdi],r14
   14000aaef:	mov    r8,rsi
   14000aaf2:	mov    DWORD PTR [rsp+0x20],r12d
   14000aaf7:	lea    rdx,[rsp+0x40]
   14000aafc:	mov    rcx,rdi
   14000aaff:	call   0x14000a1e8
   14000ab04:	jmp    0x14000ab4a
   14000ab06:	xor    r9d,r9d
   14000ab09:	call   0x14000a1e8
   14000ab0e:	mov    ebx,eax
   14000ab10:	test   eax,eax
   14000ab12:	js     0x14000ab4a
   14000ab14:	mov    rcx,QWORD PTR [rdi]
   14000ab17:	movzx  eax,WORD PTR [rcx]
   14000ab1a:	cmp    eax,0x20
   14000ab1d:	ja     0x14000ab3a
   14000ab1f:	movabs rdx,0x100002600
   14000ab29:	bt     rdx,rax
   14000ab2d:	jae    0x14000ab3a
   14000ab2f:	call   QWORD PTR [rip+0xb953]        # 0x140016488
   14000ab35:	mov    QWORD PTR [rdi],rax
   14000ab38:	jmp    0x14000ab14
   14000ab3a:	cmp    r12w,WORD PTR [rcx]
   14000ab3e:	je     0x14000ab4a
   14000ab40:	jmp    0x14000aa42
   14000ab45:	mov    ebx,0x80020009
   14000ab4a:	mov    rcx,rbp
   14000ab4d:	call   QWORD PTR [rip+0xbb75]        # 0x1400166c8
   14000ab53:	mov    eax,ebx
   14000ab55:	mov    rcx,QWORD PTR [rsp+0x2040]
   14000ab5d:	xor    rcx,rsp
   14000ab60:	call   0x1400146a0
   14000ab65:	mov    rbx,QWORD PTR [rsp+0x20a8]
   14000ab6d:	add    rsp,0x2050
   14000ab74:	pop    r15
   14000ab76:	pop    r14
   14000ab78:	pop    r13
   14000ab7a:	pop    r12
   14000ab7c:	pop    rdi
   14000ab7d:	pop    rsi
   14000ab7e:	pop    rbp
   14000ab7f:	ret    
   14000ab80:	int3   
   14000ab81:	int3   
   14000ab82:	int3   
   14000ab83:	int3   
   14000ab84:	int3   
   14000ab85:	int3   
   14000ab86:	int3   
   14000ab87:	int3   
   14000ab88:	mov    rax,rsp
   14000ab8b:	push   rsi
   14000ab8c:	push   rdi
   14000ab8d:	push   r14
   14000ab8f:	sub    rsp,0x490
   14000ab96:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14000ab9f:	mov    QWORD PTR [rax+0x8],rbx
   14000aba3:	mov    rax,QWORD PTR [rip+0x13466]        # 0x14001e010
   14000abaa:	xor    rax,rsp
   14000abad:	mov    QWORD PTR [rsp+0x480],rax
   14000abb5:	mov    r14,r9
   14000abb8:	mov    rdi,r8
   14000abbb:	mov    rax,rdx
   14000abbe:	xor    ebx,ebx
   14000abc0:	mov    QWORD PTR [rsp+0x60],rbx
   14000abc5:	mov    QWORD PTR [rsp+0x50],rcx
   14000abca:	mov    QWORD PTR [rsp+0x48],rbx
   14000abcf:	mov    QWORD PTR [rsp+0x70],rbx
   14000abd4:	xor    edx,edx
   14000abd6:	lea    r8d,[rbx+0x2]
   14000abda:	mov    rcx,rax
   14000abdd:	call   QWORD PTR [rip+0xb675]        # 0x140016258
   14000abe3:	mov    rsi,rax
   14000abe6:	mov    QWORD PTR [rsp+0x38],rax
   14000abeb:	test   rax,rax
   14000abee:	jne    0x14000abfc
   14000abf0:	call   0x14000929c
   14000abf5:	mov    ebx,eax
   14000abf7:	jmp    0x14000ad2c
   14000abfc:	xor    r9d,r9d
   14000abff:	mov    r8,rdi
   14000ac02:	mov    rdx,r14
   14000ac05:	mov    rcx,rax
   14000ac08:	call   QWORD PTR [rip+0xb59a]        # 0x1400161a8
   14000ac0e:	mov    rdi,rax
   14000ac11:	test   rax,rax
   14000ac14:	jne    0x14000ac20
   14000ac16:	call   0x14000929c
   14000ac1b:	jmp    0x14000ad20
   14000ac20:	mov    rdx,rax
   14000ac23:	mov    rcx,rsi
   14000ac26:	call   QWORD PTR [rip+0xb584]        # 0x1400161b0
   14000ac2c:	mov    r14,rax
   14000ac2f:	mov    QWORD PTR [rsp+0x40],rax
   14000ac34:	test   rax,rax
   14000ac37:	je     0x14000ac16
   14000ac39:	mov    rdx,rdi
   14000ac3c:	mov    rcx,rsi
   14000ac3f:	call   QWORD PTR [rip+0xb573]        # 0x1400161b8
   14000ac45:	mov    edi,eax
   14000ac47:	mov    DWORD PTR [rsp+0x30],eax
   14000ac4b:	inc    eax
   14000ac4d:	cmp    eax,edi
   14000ac4f:	jae    0x14000ac72
   14000ac51:	lea    rax,[rsp+0x78]
   14000ac56:	cmp    QWORD PTR [rsp+0x70],rax
   14000ac5b:	je     0x14000ac68
   14000ac5d:	lea    rcx,[rsp+0x70]
   14000ac62:	call   0x140009238
   14000ac67:	nop
   14000ac68:	mov    eax,0x8007000e
   14000ac6d:	jmp    0x14000ad45
   14000ac72:	mov    ecx,eax
   14000ac74:	test   eax,eax
   14000ac76:	je     0x14000acaf
   14000ac78:	xor    edx,edx
   14000ac7a:	or     rax,0xffffffffffffffff
   14000ac7e:	div    rcx
   14000ac81:	cmp    rax,0x2
   14000ac85:	jb     0x14000aca5
   14000ac87:	lea    rdx,[rcx+rcx*1]
   14000ac8b:	cmp    rdx,0x400
   14000ac92:	jbe    0x14000acaf
   14000ac94:	lea    rcx,[rsp+0x70]
   14000ac99:	call   0x140009268
   14000ac9e:	mov    rax,QWORD PTR [rsp+0x70]
   14000aca3:	jmp    0x14000acb9
   14000aca5:	mov    ecx,0x80070057
   14000acaa:	call   0x140009d30
   14000acaf:	lea    rax,[rsp+0x78]
   14000acb4:	mov    QWORD PTR [rsp+0x70],rax
   14000acb9:	jmp    0x14000acd0
   14000acbb:	xor    ebx,ebx
   14000acbd:	mov    rax,QWORD PTR [rsp+0x70]
   14000acc2:	mov    rsi,QWORD PTR [rsp+0x38]
   14000acc7:	mov    r14,QWORD PTR [rsp+0x40]
   14000accc:	mov    edi,DWORD PTR [rsp+0x30]
   14000acd0:	test   rax,rax
   14000acd3:	jne    0x14000acdc
   14000acd5:	mov    ebx,0x8007000e
   14000acda:	jmp    0x14000ad22
   14000acdc:	mov    DWORD PTR [rsp+0x28],edi
   14000ace0:	mov    QWORD PTR [rsp+0x20],rax
   14000ace5:	mov    r9d,edi
   14000ace8:	mov    r8,r14
   14000aceb:	xor    edx,edx
   14000aced:	lea    ecx,[rdx+0x3]
   14000acf0:	call   QWORD PTR [rip+0xb4ca]        # 0x1400161c0
   14000acf6:	test   eax,eax
   14000acf8:	je     0x14000ac16
   14000acfe:	mov    ecx,eax
   14000ad00:	mov    rax,QWORD PTR [rsp+0x70]
   14000ad05:	mov    WORD PTR [rax+rcx*2],bx
   14000ad09:	mov    r8d,DWORD PTR [rsp+0x4d0]
   14000ad11:	mov    rdx,QWORD PTR [rsp+0x70]
   14000ad16:	lea    rcx,[rsp+0x48]
   14000ad1b:	call   0x14000a9c8
   14000ad20:	mov    ebx,eax
   14000ad22:	mov    rcx,rsi
   14000ad25:	call   QWORD PTR [rip+0xb53d]        # 0x140016268
   14000ad2b:	nop
   14000ad2c:	lea    rax,[rsp+0x78]
   14000ad31:	cmp    QWORD PTR [rsp+0x70],rax
   14000ad36:	je     0x14000ad43
   14000ad38:	lea    rcx,[rsp+0x70]
   14000ad3d:	call   0x140009238
   14000ad42:	nop
   14000ad43:	mov    eax,ebx
   14000ad45:	mov    rcx,QWORD PTR [rsp+0x480]
   14000ad4d:	xor    rcx,rsp
   14000ad50:	call   0x1400146a0
   14000ad55:	mov    rbx,QWORD PTR [rsp+0x4b0]
   14000ad5d:	add    rsp,0x490
   14000ad64:	pop    r14
   14000ad66:	pop    rdi
   14000ad67:	pop    rsi
   14000ad68:	ret    
   14000ad69:	int3   
   14000ad6a:	int3   
   14000ad6b:	int3   
   14000ad6c:	int3   
   14000ad6d:	int3   
   14000ad6e:	int3   
   14000ad6f:	int3   
   14000ad70:	mov    QWORD PTR [rsp+0x8],rbx
   14000ad75:	push   rbp
   14000ad76:	push   rsi
   14000ad77:	push   rdi
   14000ad78:	push   r14
   14000ad7a:	push   r15
   14000ad7c:	lea    rbp,[rsp-0x9d0]
   14000ad84:	sub    rsp,0xad0
   14000ad8b:	mov    rax,QWORD PTR [rip+0x1327e]        # 0x14001e010
   14000ad92:	xor    rax,rsp
   14000ad95:	mov    QWORD PTR [rbp+0x9c0],rax
   14000ad9c:	xor    r14d,r14d
   14000ad9f:	lea    rax,[rip+0xbf0a]        # 0x140016cb0
   14000ada6:	mov    esi,r8d
   14000ada9:	mov    QWORD PTR [rsp+0x30],rax
   14000adae:	mov    rdi,rdx
   14000adb1:	mov    QWORD PTR [rsp+0x38],r14
   14000adb6:	xor    edx,edx
   14000adb8:	mov    QWORD PTR [rsp+0x40],r14
   14000adbd:	lea    r8d,[r14+0x28]
   14000adc1:	mov    DWORD PTR [rsp+0x48],r14d
   14000adc6:	lea    rcx,[rsp+0x50]
   14000adcb:	mov    rbx,r9
   14000adce:	call   0x140014b26
   14000add3:	lea    rcx,[rsp+0x50]
   14000add8:	mov    BYTE PTR [rsp+0x78],r14b
   14000addd:	call   0x140008ecc
   14000ade2:	test   eax,eax
   14000ade4:	js     0x14000ae62
   14000ade6:	mov    BYTE PTR [rsp+0x78],0x1
   14000adeb:	test   rbx,rbx
   14000adee:	je     0x14000ae0f
   14000adf0:	jmp    0x14000ae07
   14000adf2:	mov    r8,QWORD PTR [rbx+0x8]
   14000adf6:	lea    rcx,[rsp+0x30]
   14000adfb:	mov    rdx,rax
   14000adfe:	call   0x1400091b0
   14000ae03:	lea    rbx,[rbx+0x10]
   14000ae07:	mov    rax,QWORD PTR [rbx]
   14000ae0a:	test   rax,rax
   14000ae0d:	jne    0x14000adf2
   14000ae0f:	mov    rax,QWORD PTR [rsp+0x30]
   14000ae14:	mov    rbx,QWORD PTR [rax+0x18]
   14000ae18:	mov    rcx,rbx
   14000ae1b:	call   QWORD PTR [rip+0xb8d7]        # 0x1400166f8
   14000ae21:	lea    r8,[rip+0xce10]        # 0x140017c38
   14000ae28:	lea    rdx,[rip+0xce11]        # 0x140017c40
   14000ae2f:	lea    rcx,[rsp+0x30]
   14000ae34:	call   rbx
   14000ae36:	mov    ebx,eax
   14000ae38:	test   eax,eax
   14000ae3a:	js     0x14000ae64
   14000ae3c:	mov    rbx,QWORD PTR [rip+0x13d65]        # 0x14001eba8
   14000ae43:	lea    rdx,[rbp-0x80]
   14000ae47:	mov    r15d,0x104
   14000ae4d:	mov    rcx,rbx
   14000ae50:	mov    r8d,r15d
   14000ae53:	call   QWORD PTR [rip+0xb347]        # 0x1400161a0
   14000ae59:	test   eax,eax
   14000ae5b:	jne    0x14000ae96
   14000ae5d:	call   0x14000929c
   14000ae62:	mov    ebx,eax
   14000ae64:	lea    rcx,[rsp+0x30]
   14000ae69:	call   0x140008e24
   14000ae6e:	mov    eax,ebx
   14000ae70:	mov    rcx,QWORD PTR [rbp+0x9c0]
   14000ae77:	xor    rcx,rsp
   14000ae7a:	call   0x1400146a0
   14000ae7f:	mov    rbx,QWORD PTR [rsp+0xb00]
   14000ae87:	add    rsp,0xad0
   14000ae8e:	pop    r15
   14000ae90:	pop    r14
   14000ae92:	pop    rdi
   14000ae93:	pop    rsi
   14000ae94:	pop    rbp
   14000ae95:	ret    
   14000ae96:	cmp    eax,r15d
   14000ae99:	jne    0x14000aea2
   14000ae9b:	mov    ebx,0x8007007a
   14000aea0:	jmp    0x14000ae64
   14000aea2:	lea    rdx,[rbp-0x80]
   14000aea6:	mov    ecx,r14d
   14000aea9:	mov    r9d,0x27
   14000aeaf:	movzx  r8d,WORD PTR [rdx]
   14000aeb3:	test   r8w,r8w
   14000aeb7:	je     0x14000aeeb
   14000aeb9:	mov    eax,ecx
   14000aebb:	mov    WORD PTR [rbp+rax*2+0x190],r8w
   14000aec4:	cmp    r8w,r9w
   14000aec8:	jne    0x14000aedd
   14000aeca:	cmp    ecx,0x206
   14000aed0:	jae    0x14000aedd
   14000aed2:	inc    ecx
   14000aed4:	mov    WORD PTR [rbp+rcx*2+0x190],r9w
   14000aedd:	add    rdx,0x2
   14000aee1:	inc    ecx
   14000aee3:	cmp    ecx,0x207
   14000aee9:	jb     0x14000aeaf
   14000aeeb:	mov    eax,ecx
   14000aeed:	mov    WORD PTR [rbp+rax*2+0x190],r14w
   14000aef6:	test   rbx,rbx
   14000aef9:	je     0x14000af14
   14000aefb:	xor    ecx,ecx
   14000aefd:	call   QWORD PTR [rip+0xb34d]        # 0x140016250
   14000af03:	cmp    rbx,rax
   14000af06:	je     0x14000af14
   14000af08:	lea    r8,[rbp+0x190]
   14000af0f:	jmp    0x14000afaa
   14000af14:	mov    r15d,0x22
   14000af1a:	lea    rcx,[rbp+0x190]
   14000af21:	or     rbx,0xffffffffffffffff
   14000af25:	mov    WORD PTR [rbp+0x5a0],r15w
   14000af2d:	mov    rax,rbx
   14000af30:	inc    rax
   14000af33:	cmp    WORD PTR [rcx+rax*2],r14w
   14000af38:	jne    0x14000af30
   14000af3a:	inc    eax
   14000af3c:	lea    r8,[rbp+0x190]
   14000af43:	movsxd r9,eax
   14000af46:	lea    rcx,[rbp+0x5a2]
   14000af4d:	add    r9,r9
   14000af50:	mov    edx,0x414
   14000af55:	call   QWORD PTR [rip+0xb62d]        # 0x140016588
   14000af5b:	test   eax,eax
   14000af5d:	je     0x14000af69
   14000af5f:	mov    ebx,0x80004005
   14000af64:	jmp    0x14000ae64
   14000af69:	lea    rax,[rbp+0x5a0]
   14000af70:	inc    rbx
   14000af73:	cmp    WORD PTR [rax+rbx*2],r14w
   14000af78:	jne    0x14000af70
   14000af7a:	movsxd rax,ebx
   14000af7d:	mov    WORD PTR [rbp+rax*2+0x5a0],r15w
   14000af86:	lea    rax,[rax*2+0x2]
   14000af8e:	cmp    rax,0x418
   14000af94:	jae    0x14000b027
   14000af9a:	mov    WORD PTR [rbp+rax*1+0x5a0],r14w
   14000afa3:	lea    r8,[rbp+0x5a0]
   14000afaa:	lea    rdx,[rip+0xcc9f]        # 0x140017c50
   14000afb1:	lea    rcx,[rsp+0x30]
   14000afb6:	call   0x1400091b0
   14000afbb:	test   eax,eax
   14000afbd:	js     0x14000ae62
   14000afc3:	lea    r8,[rbp+0x190]
   14000afca:	lea    rdx,[rip+0xcc8f]        # 0x140017c60
   14000afd1:	lea    rcx,[rsp+0x30]
   14000afd6:	call   0x1400091b0
   14000afdb:	test   eax,eax
   14000afdd:	js     0x14000ae62
   14000afe3:	test   esi,esi
   14000afe5:	je     0x14000aff6
   14000afe7:	test   rdi,rdi
   14000afea:	je     0x14000b01d
   14000afec:	mov    DWORD PTR [rsp+0x20],0x1
   14000aff4:	jmp    0x14000b000
   14000aff6:	test   rdi,rdi
   14000aff9:	je     0x14000b01d
   14000affb:	mov    DWORD PTR [rsp+0x20],r14d
   14000b000:	lea    r9,[rip+0xcc71]        # 0x140017c78
   14000b007:	mov    r8,rdi
   14000b00a:	lea    rdx,[rbp-0x80]
   14000b00e:	lea    rcx,[rsp+0x30]
   14000b013:	call   0x14000ab88
   14000b018:	jmp    0x14000ae62
   14000b01d:	mov    ebx,0x80070057
   14000b022:	jmp    0x14000ae64
   14000b027:	call   0x1400148a8
   14000b02c:	int3   
   14000b02d:	int3   
   14000b02e:	int3   
   14000b02f:	int3   
   14000b030:	int3   
   14000b031:	int3   
   14000b032:	int3   
   14000b033:	int3   
   14000b034:	int3   
   14000b035:	int3   
   14000b036:	int3   
   14000b037:	int3   
   14000b038:	int3   
   14000b039:	int3   
   14000b03a:	int3   
   14000b03b:	int3   
   14000b03c:	int3   
   14000b03d:	int3   
   14000b03e:	int3   
   14000b03f:	int3   
   14000b040:	jmp    0x14000ad70
   14000b045:	int3   
   14000b046:	int3   
   14000b047:	int3   
   14000b048:	int3   
   14000b049:	int3   
   14000b04a:	int3   
   14000b04b:	int3   
   14000b04c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b051:	mov    QWORD PTR [rsp+0x10],rbp
   14000b056:	mov    QWORD PTR [rsp+0x18],rsi
   14000b05b:	push   rdi
   14000b05c:	sub    rsp,0x20
   14000b060:	mov    rdi,rcx
   14000b063:	xor    ebx,ebx
   14000b065:	call   QWORD PTR [rip+0xb10d]        # 0x140016178
   14000b06b:	mov    rsi,rax
   14000b06e:	test   rax,rax
   14000b071:	je     0x14000b0df
   14000b073:	mov    rdx,rax
   14000b076:	mov    rcx,rdi
   14000b079:	call   QWORD PTR [rip+0xb131]        # 0x1400161b0
   14000b07f:	test   rax,rax
   14000b082:	je     0x14000b0df
   14000b084:	mov    rcx,rax
   14000b087:	call   QWORD PTR [rip+0xb0e3]        # 0x140016170
   14000b08d:	mov    rdx,rsi
   14000b090:	mov    rcx,rdi
   14000b093:	mov    rbp,rax
   14000b096:	call   QWORD PTR [rip+0xb11c]        # 0x1400161b8
   14000b09c:	test   rbp,rbp
   14000b09f:	je     0x14000b0df
   14000b0a1:	test   eax,eax
   14000b0a3:	je     0x14000b0df
   14000b0a5:	mov    edx,eax
   14000b0a7:	lea    ecx,[rbx+0x2]
   14000b0aa:	mov    edi,eax
   14000b0ac:	call   QWORD PTR [rip+0xb0b6]        # 0x140016168
   14000b0b2:	mov    rbx,rax
   14000b0b5:	test   rax,rax
   14000b0b8:	je     0x14000b0df
   14000b0ba:	mov    rcx,rax
   14000b0bd:	call   QWORD PTR [rip+0xb095]        # 0x140016158
   14000b0c3:	test   rax,rax
   14000b0c6:	je     0x14000b0df
   14000b0c8:	mov    r8d,edi
   14000b0cb:	mov    rdx,rbp
   14000b0ce:	mov    rcx,rax
   14000b0d1:	call   0x1400150e2
   14000b0d6:	mov    rcx,rbx
   14000b0d9:	call   QWORD PTR [rip+0xb071]        # 0x140016150
   14000b0df:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b0e4:	mov    rax,rbx
   14000b0e7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b0ec:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b0f1:	add    rsp,0x20
   14000b0f5:	pop    rdi
   14000b0f6:	ret    
   14000b0f7:	int3   
   14000b0f8:	int3   
   14000b0f9:	int3   
   14000b0fa:	int3   
   14000b0fb:	int3   
   14000b0fc:	int3   
   14000b0fd:	int3   
   14000b0fe:	int3   
   14000b0ff:	int3   
   14000b100:	mov    QWORD PTR [rsp+0x20],rbx
   14000b105:	push   rbp
   14000b106:	push   rsi
   14000b107:	push   rdi
   14000b108:	push   r12
   14000b10a:	push   r13
   14000b10c:	push   r14
   14000b10e:	push   r15
   14000b110:	lea    rbp,[rsp-0x27]
   14000b115:	sub    rsp,0xd0
   14000b11c:	mov    rax,QWORD PTR [rip+0x12eed]        # 0x14001e010
   14000b123:	xor    rax,rsp
   14000b126:	mov    QWORD PTR [rbp+0x17],rax
   14000b12a:	mov    rbx,rcx
   14000b12d:	xor    r12d,r12d
   14000b130:	or     esi,0xffffffff
   14000b133:	mov    QWORD PTR [r8],r12
   14000b136:	mov    ecx,esi
   14000b138:	mov    QWORD PTR [rbp-0x69],r12
   14000b13c:	mov    r15,r8
   14000b13f:	mov    rdi,rdx
   14000b142:	call   QWORD PTR [rip+0xb128]        # 0x140016270
   14000b148:	lea    r8,[rip+0xce39]        # 0x140017f88
   14000b14f:	mov    rdx,rdi
   14000b152:	mov    rcx,rbx
   14000b155:	call   0x14000b04c
   14000b15a:	lea    r13d,[r12+0x1]
   14000b15f:	test   rax,rax
   14000b162:	jne    0x14000b1d7
   14000b164:	mov    ecx,esi
   14000b166:	call   QWORD PTR [rip+0xb104]        # 0x140016270
   14000b16c:	lea    r8,[rip+0xce1d]        # 0x140017f90
   14000b173:	mov    rdx,rdi
   14000b176:	mov    rcx,rbx
   14000b179:	call   0x14000b04c
   14000b17e:	test   rax,rax
   14000b181:	jne    0x14000b1d7
   14000b183:	mov    ecx,esi
   14000b185:	call   QWORD PTR [rip+0xb0e5]        # 0x140016270
   14000b18b:	lea    r8,[rip+0xce0e]        # 0x140017fa0
   14000b192:	mov    rdx,rdi
   14000b195:	mov    rcx,rbx
   14000b198:	call   0x14000b04c
   14000b19d:	test   rax,rax
   14000b1a0:	jne    0x14000b1d7
   14000b1a2:	mov    ecx,esi
   14000b1a4:	call   QWORD PTR [rip+0xb0c6]        # 0x140016270
   14000b1aa:	lea    r8,[rip+0xcdf7]        # 0x140017fa8
   14000b1b1:	mov    rdx,rdi
   14000b1b4:	mov    rcx,rbx
   14000b1b7:	call   0x14000b04c
   14000b1bc:	test   rax,rax
   14000b1bf:	jne    0x14000b1d7
   14000b1c1:	call   QWORD PTR [rip+0xb0c1]        # 0x140016288
   14000b1c7:	movzx  edi,ax
   14000b1ca:	or     edi,0x80070000
   14000b1d0:	test   eax,eax
   14000b1d2:	cmovle edi,eax
   14000b1d5:	jmp    0x14000b1e9
   14000b1d7:	lea    r8,[rbp-0x69]
   14000b1db:	mov    edx,r13d
   14000b1de:	mov    rcx,rax
   14000b1e1:	call   QWORD PTR [rip+0xb501]        # 0x1400166e8
   14000b1e7:	mov    edi,eax
   14000b1e9:	test   edi,edi
   14000b1eb:	js     0x14000b3eb
   14000b1f1:	xor    r8d,r8d
   14000b1f4:	mov    DWORD PTR [rbp-0x51],r13d
   14000b1f8:	lea    rdx,[rbp-0x51]
   14000b1fc:	mov    QWORD PTR [rbp-0x49],r12
   14000b200:	lea    rcx,[rbp-0x59]
   14000b204:	mov    QWORD PTR [rbp-0x41],r12
   14000b208:	call   QWORD PTR [rip+0xb2f2]        # 0x140016500
   14000b20e:	mov    rbx,QWORD PTR [rbp-0x69]
   14000b212:	mov    ecx,0x18
   14000b217:	call   QWORD PTR [rip+0xb32b]        # 0x140016548
   14000b21d:	mov    rsi,rax
   14000b220:	test   rax,rax
   14000b223:	je     0x14000b24d
   14000b225:	lea    rax,[rip+0xbb04]        # 0x140016d30
   14000b22c:	mov    QWORD PTR [rbp-0x79],r12
   14000b230:	lea    rdx,[rbp-0x79]
   14000b234:	mov    QWORD PTR [rsi],rax
   14000b237:	mov    rcx,rbx
   14000b23a:	call   QWORD PTR [rip+0xb318]        # 0x140016558
   14000b240:	mov    DWORD PTR [rsi+0x10],eax
   14000b243:	mov    rax,QWORD PTR [rbp-0x79]
   14000b247:	mov    QWORD PTR [rsi+0x8],rax
   14000b24b:	jmp    0x14000b250
   14000b24d:	mov    rsi,r12
   14000b250:	test   rsi,rsi
   14000b253:	je     0x14000b3be
   14000b259:	xor    ecx,ecx
   14000b25b:	call   QWORD PTR [rip+0xb097]        # 0x1400162f8
   14000b261:	mov    rcx,QWORD PTR [rsi+0x8]
   14000b265:	mov    edx,0x6
   14000b26a:	mov    r14,rax
   14000b26d:	mov    QWORD PTR [rbp-0x61],r12
   14000b271:	call   QWORD PTR [rip+0xb2b9]        # 0x140016530
   14000b277:	test   eax,eax
   14000b279:	je     0x14000b27e
   14000b27b:	mov    DWORD PTR [rsi+0x10],eax
   14000b27e:	mov    ebx,0x28
   14000b283:	lea    rcx,[rbp-0x15]
   14000b287:	mov    r8d,ebx
   14000b28a:	xor    edx,edx
   14000b28c:	call   0x140014b26
   14000b291:	mov    rcx,QWORD PTR [rsi+0x8]
   14000b295:	lea    rdx,[rbp-0x79]
   14000b299:	mov    DWORD PTR [rbp-0x19],ebx
   14000b29c:	mov    QWORD PTR [rbp-0xd],0x200001
   14000b2a4:	mov    DWORD PTR [rbp-0x79],r12d
   14000b2a8:	call   QWORD PTR [rip+0xb27a]        # 0x140016528
   14000b2ae:	test   eax,eax
   14000b2b0:	je     0x14000b2b5
   14000b2b2:	mov    DWORD PTR [rsi+0x10],eax
   14000b2b5:	mov    eax,DWORD PTR [rbp-0x79]
   14000b2b8:	lea    rdx,[rbp-0x79]
   14000b2bc:	mov    rcx,QWORD PTR [rsi+0x8]
   14000b2c0:	mov    DWORD PTR [rbp-0x15],eax
   14000b2c3:	mov    DWORD PTR [rbp-0x79],r12d
   14000b2c7:	call   QWORD PTR [rip+0xb253]        # 0x140016520
   14000b2cd:	test   eax,eax
   14000b2cf:	je     0x14000b2d4
   14000b2d1:	mov    DWORD PTR [rsi+0x10],eax
   14000b2d4:	mov    eax,DWORD PTR [rbp-0x79]
   14000b2d7:	lea    r9,[rbp-0x61]
   14000b2db:	mov    DWORD PTR [rsp+0x28],r12d
   14000b2e0:	lea    rdx,[rbp-0x19]
   14000b2e4:	xor    r8d,r8d
   14000b2e7:	mov    DWORD PTR [rbp-0x11],eax
   14000b2ea:	mov    rcx,r14
   14000b2ed:	mov    QWORD PTR [rsp+0x20],r12
   14000b2f2:	call   QWORD PTR [rip+0xae28]        # 0x140016120
   14000b2f8:	mov    rbx,rax
   14000b2fb:	test   rax,rax
   14000b2fe:	je     0x14000b38e
   14000b304:	mov    ecx,DWORD PTR [rbp-0x15]
   14000b307:	lea    rax,[rbp-0x39]
   14000b30b:	mov    DWORD PTR [rbp-0x71],ecx
   14000b30e:	lea    rdx,[rbp-0x79]
   14000b312:	mov    ecx,DWORD PTR [rbp-0x11]
   14000b315:	mov    r9d,0x26200a
   14000b31b:	mov    DWORD PTR [rbp-0x6d],ecx
   14000b31e:	mov    r8d,r13d
   14000b321:	mov    rcx,QWORD PTR [rsi+0x8]
   14000b325:	mov    QWORD PTR [rbp-0x79],r12
   14000b329:	mov    QWORD PTR [rsp+0x20],rax
   14000b32e:	call   QWORD PTR [rip+0xb1e4]        # 0x140016518
   14000b334:	test   eax,eax
   14000b336:	je     0x14000b33d
   14000b338:	mov    DWORD PTR [rsi+0x10],eax
   14000b33b:	jmp    0x14000b340
   14000b33d:	mov    eax,r12d
   14000b340:	mov    rdx,QWORD PTR [rbp-0x29]
   14000b344:	test   rdx,rdx
   14000b347:	je     0x14000b37a
   14000b349:	test   eax,eax
   14000b34b:	jne    0x14000b37e
   14000b34d:	mov    eax,DWORD PTR [rbp-0x31]
   14000b350:	imul   eax,DWORD PTR [rbp-0x11]
   14000b354:	mov    rcx,QWORD PTR [rbp-0x61]
   14000b358:	movsxd r8,eax
   14000b35b:	call   0x1400150e2
   14000b360:	mov    rcx,QWORD PTR [rsi+0x8]
   14000b364:	lea    rdx,[rbp-0x39]
   14000b368:	call   QWORD PTR [rip+0xb1a2]        # 0x140016510
   14000b36e:	test   eax,eax
   14000b370:	je     0x14000b377
   14000b372:	mov    DWORD PTR [rsi+0x10],eax
   14000b375:	jmp    0x14000b37a
   14000b377:	mov    eax,r12d
   14000b37a:	test   eax,eax
   14000b37c:	je     0x14000b393
   14000b37e:	mov    rcx,rbx
   14000b381:	mov    edi,0x80004005
   14000b386:	call   QWORD PTR [rip+0xad64]        # 0x1400160f0
   14000b38c:	jmp    0x14000b393
   14000b38e:	mov    edi,0x80004005
   14000b393:	test   edi,edi
   14000b395:	js     0x14000b39a
   14000b397:	mov    QWORD PTR [r15],rbx
   14000b39a:	mov    rax,QWORD PTR [rsi]
   14000b39d:	mov    rbx,QWORD PTR [rax]
   14000b3a0:	mov    rcx,rbx
   14000b3a3:	call   QWORD PTR [rip+0xb34f]        # 0x1400166f8
   14000b3a9:	mov    edx,r13d
   14000b3ac:	mov    rcx,rsi
   14000b3af:	call   rbx
   14000b3b1:	mov    rdx,r14
   14000b3b4:	xor    ecx,ecx
   14000b3b6:	call   QWORD PTR [rip+0xaf44]        # 0x140016300
   14000b3bc:	jmp    0x14000b3c3
   14000b3be:	mov    edi,0x80004005
   14000b3c3:	mov    rsi,QWORD PTR [rbp-0x69]
   14000b3c7:	test   rsi,rsi
   14000b3ca:	je     0x14000b3e1
   14000b3cc:	mov    rax,QWORD PTR [rsi]
   14000b3cf:	mov    rbx,QWORD PTR [rax+0x10]
   14000b3d3:	mov    rcx,rbx
   14000b3d6:	call   QWORD PTR [rip+0xb31c]        # 0x1400166f8
   14000b3dc:	mov    rcx,rsi
   14000b3df:	call   rbx
   14000b3e1:	mov    rcx,QWORD PTR [rbp-0x59]
   14000b3e5:	call   QWORD PTR [rip+0xb11d]        # 0x140016508
   14000b3eb:	mov    eax,edi
   14000b3ed:	mov    rcx,QWORD PTR [rbp+0x17]
   14000b3f1:	xor    rcx,rsp
   14000b3f4:	call   0x1400146a0
   14000b3f9:	mov    rbx,QWORD PTR [rsp+0x128]
   14000b401:	add    rsp,0xd0
   14000b408:	pop    r15
   14000b40a:	pop    r14
   14000b40c:	pop    r13
   14000b40e:	pop    r12
   14000b410:	pop    rdi
   14000b411:	pop    rsi
   14000b412:	pop    rbp
   14000b413:	ret    
   14000b414:	int3   
   14000b415:	int3   
   14000b416:	int3   
   14000b417:	int3   
   14000b418:	int3   
   14000b419:	int3   
   14000b41a:	int3   
   14000b41b:	int3   
   14000b41c:	int3   
   14000b41d:	int3   
   14000b41e:	int3   
   14000b41f:	int3   
   14000b420:	mov    QWORD PTR [rsp+0x8],rbx
   14000b425:	push   rdi
   14000b426:	sub    rsp,0x20
   14000b42a:	lea    rax,[rip+0xb8ff]        # 0x140016d30
   14000b431:	mov    rdi,rcx
   14000b434:	mov    QWORD PTR [rcx],rax
   14000b437:	mov    ebx,edx
   14000b439:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b43d:	call   QWORD PTR [rip+0xb0f5]        # 0x140016538
   14000b443:	test   bl,0x1
   14000b446:	je     0x14000b451
   14000b448:	mov    rcx,rdi
   14000b44b:	call   QWORD PTR [rip+0xb0ff]        # 0x140016550
   14000b451:	mov    rax,rdi
   14000b454:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b459:	add    rsp,0x20
   14000b45d:	pop    rdi
   14000b45e:	ret    
   14000b45f:	int3   
   14000b460:	int3   
   14000b461:	int3   
   14000b462:	int3   
   14000b463:	int3   
   14000b464:	int3   
   14000b465:	int3   
   14000b466:	int3   
   14000b467:	int3   
   14000b468:	int3   
   14000b469:	int3   
   14000b46a:	int3   
   14000b46b:	int3   
   14000b46c:	int3   
   14000b46d:	int3   
   14000b46e:	int3   
   14000b46f:	int3   
   14000b470:	rex push rbx
   14000b472:	sub    rsp,0x20
   14000b476:	and    QWORD PTR [rsp+0x30],0x0
   14000b47c:	lea    rdx,[rsp+0x30]
   14000b481:	mov    rbx,rcx
   14000b484:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b488:	call   QWORD PTR [rip+0xb0b2]        # 0x140016540
   14000b48e:	test   eax,eax
   14000b490:	je     0x14000b495
   14000b492:	mov    DWORD PTR [rbx+0x10],eax
   14000b495:	mov    ecx,0x18
   14000b49a:	call   QWORD PTR [rip+0xb0a8]        # 0x140016548
   14000b4a0:	mov    rdx,rax
   14000b4a3:	test   rax,rax
   14000b4a6:	je     0x14000b4c3
   14000b4a8:	mov    rax,QWORD PTR [rsp+0x30]
   14000b4ad:	lea    r8,[rip+0xb87c]        # 0x140016d30
   14000b4b4:	mov    ecx,DWORD PTR [rbx+0x10]
   14000b4b7:	mov    QWORD PTR [rdx],r8
   14000b4ba:	mov    QWORD PTR [rdx+0x8],rax
   14000b4be:	mov    DWORD PTR [rdx+0x10],ecx
   14000b4c1:	jmp    0x14000b4c5
   14000b4c3:	xor    edx,edx
   14000b4c5:	mov    rax,rdx
   14000b4c8:	add    rsp,0x20
   14000b4cc:	pop    rbx
   14000b4cd:	ret    
   14000b4ce:	int3   
   14000b4cf:	int3   
   14000b4d0:	int3   
   14000b4d1:	int3   
   14000b4d2:	int3   
   14000b4d3:	int3   
   14000b4d4:	mov    QWORD PTR [rsp+0x8],rbx
   14000b4d9:	push   rdi
   14000b4da:	sub    rsp,0x20
   14000b4de:	mov    rbx,rcx
   14000b4e1:	xor    edi,edi
   14000b4e3:	mov    ecx,0x1
   14000b4e8:	mov    eax,edi
   14000b4ea:	cmp    DWORD PTR [rbx+0xb0],edi
   14000b4f0:	mov    QWORD PTR [rbx+0x154],rcx
   14000b4f7:	sete   al
   14000b4fa:	mov    DWORD PTR [rbx+0xac],ecx
   14000b500:	lea    rcx,[rbx+0x98]
   14000b507:	mov    DWORD PTR [rbx+0xa8],eax
   14000b50d:	mov    QWORD PTR [rbx+0x15c],rdi
   14000b514:	mov    DWORD PTR [rbx+0x164],edi
   14000b51a:	mov    QWORD PTR [rbx+0x14c],rdi
   14000b521:	mov    QWORD PTR [rbx+0x144],rdi
   14000b528:	mov    QWORD PTR [rbx+0x138],rdi
   14000b52f:	mov    DWORD PTR [rbx+0x140],edi
   14000b535:	mov    QWORD PTR [rbx+0x1c],rdi
   14000b539:	mov    DWORD PTR [rbx+0x84],edi
   14000b53f:	mov    QWORD PTR [rbx+0x90],rdi
   14000b546:	call   QWORD PTR [rip+0xaf44]        # 0x140016490
   14000b54c:	and    DWORD PTR [rbx+0x100],0xfffffffe
   14000b553:	mov    QWORD PTR [rbx+0x68],rdi
   14000b557:	mov    QWORD PTR [rbx+0x70],rdi
   14000b55b:	mov    QWORD PTR [rbx+0x78],rdi
   14000b55f:	mov    QWORD PTR [rbx+0xb8],rdi
   14000b566:	mov    QWORD PTR [rbx+0xc0],rdi
   14000b56d:	mov    QWORD PTR [rbx+0xc8],rdi
   14000b574:	mov    QWORD PTR [rbx+0xd0],rdi
   14000b57b:	mov    QWORD PTR [rbx+0xd8],rdi
   14000b582:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b587:	add    rsp,0x20
   14000b58b:	pop    rdi
   14000b58c:	ret    
   14000b58d:	int3   
   14000b58e:	int3   
   14000b58f:	int3   
   14000b590:	int3   
   14000b591:	int3   
   14000b592:	int3   
   14000b593:	int3   
   14000b594:	mov    QWORD PTR [rsp+0x10],rbx
   14000b599:	mov    QWORD PTR [rsp+0x20],rsi
   14000b59e:	mov    QWORD PTR [rsp+0x18],r8
   14000b5a3:	push   rdi
   14000b5a4:	push   r14
   14000b5a6:	push   r15
   14000b5a8:	sub    rsp,0x30
   14000b5ac:	cmp    DWORD PTR [rcx+0x18],0x0
   14000b5b0:	mov    rdi,r9
   14000b5b3:	mov    rbx,r8
   14000b5b6:	mov    rsi,rcx
   14000b5b9:	je     0x14000b7cf
   14000b5bf:	mov    r8d,DWORD PTR [rsp+0x78]
   14000b5c4:	call   0x14000bd90
   14000b5c9:	cmp    DWORD PTR [rsi+0x1c],0x0
   14000b5cd:	je     0x14000b7cf
   14000b5d3:	mov    ecx,DWORD PTR [rsi+0xf0]
   14000b5d9:	mov    rax,rbx
   14000b5dc:	cmp    DWORD PTR [rsi+0x16c],0x0
   14000b5e3:	cmovne rax,rdi
   14000b5e7:	mov    QWORD PTR [rsp+0x20],rax
   14000b5ec:	sub    eax,ecx
   14000b5ee:	movd   xmm1,eax
   14000b5f2:	mov    eax,DWORD PTR [rsi+0xf8]
   14000b5f8:	sub    eax,ecx
   14000b5fa:	mov    ecx,DWORD PTR [rsi+0xf4]
   14000b600:	cvtdq2pd xmm1,xmm1
   14000b604:	movd   xmm0,eax
   14000b608:	mulsd  xmm1,QWORD PTR [rsi+0xe0]
   14000b610:	mov    eax,DWORD PTR [rsp+0x24]
   14000b614:	cvtdq2pd xmm0,xmm0
   14000b618:	sub    eax,ecx
   14000b61a:	divsd  xmm1,xmm0
   14000b61e:	cvttsd2si r14d,xmm1
   14000b623:	movd   xmm1,eax
   14000b627:	mov    eax,DWORD PTR [rsi+0xfc]
   14000b62d:	sub    eax,ecx
   14000b62f:	mov    DWORD PTR [rsp+0x50],r14d
   14000b634:	cmp    DWORD PTR [rsp+0x78],0x0
   14000b639:	cvtdq2pd xmm1,xmm1
   14000b63d:	movd   xmm0,eax
   14000b641:	mulsd  xmm1,QWORD PTR [rsi+0xe8]
   14000b649:	cvtdq2pd xmm0,xmm0
   14000b64d:	divsd  xmm1,xmm0
   14000b651:	cvttsd2si r15d,xmm1
   14000b656:	mov    DWORD PTR [rsp+0x54],r15d
   14000b65b:	mov    rdi,QWORD PTR [rsp+0x50]
   14000b660:	je     0x14000b6bb
   14000b662:	movsd  xmm0,QWORD PTR [rsp+0x70]
   14000b668:	lea    rcx,[rsi+0x98]
   14000b66f:	movsd  xmm1,QWORD PTR [rsp+0x70]
   14000b675:	mov    edx,edi
   14000b677:	mulsd  xmm0,QWORD PTR [rsi+0x60]
   14000b67c:	and    QWORD PTR [rsi+0x78],0x0
   14000b681:	mulsd  xmm1,QWORD PTR [rsi+0x58]
   14000b686:	mov    DWORD PTR [rcx],edx
   14000b688:	mov    DWORD PTR [rsi+0xa0],edx
   14000b68e:	mov    QWORD PTR [rsi+0x68],rdi
   14000b692:	mov    eax,DWORD PTR [rsi+0x6c]
   14000b695:	cvttsd2si r8d,xmm0
   14000b69a:	mov    QWORD PTR [rsi+0x70],rbx
   14000b69e:	mov    DWORD PTR [rsi+0x9c],eax
   14000b6a4:	mov    DWORD PTR [rsi+0xa4],eax
   14000b6aa:	cvttsd2si edx,xmm1
   14000b6ae:	call   QWORD PTR [rip+0xac34]        # 0x1400162e8
   14000b6b4:	mov    rbx,QWORD PTR [rsp+0x60]
   14000b6b9:	jmp    0x14000b6ca
   14000b6bb:	movsd  xmm0,QWORD PTR [rsi+0x8]
   14000b6c0:	addsd  xmm0,QWORD PTR [rsi+0x78]
   14000b6c5:	movsd  QWORD PTR [rsi+0x78],xmm0
   14000b6ca:	cmp    DWORD PTR [rsi+0xa8],0x0
   14000b6d1:	jne    0x14000b79e
   14000b6d7:	cmp    DWORD PTR [rsi+0x84],0x0
   14000b6de:	je     0x14000b749
   14000b6e0:	mov    ecx,DWORD PTR [rsi+0x8c]
   14000b6e6:	mov    eax,DWORD PTR [rsi+0x88]
   14000b6ec:	sub    ecx,r15d
   14000b6ef:	sub    eax,r14d
   14000b6f2:	imul   ecx,ecx
   14000b6f5:	imul   eax,eax
   14000b6f8:	add    eax,ecx
   14000b6fa:	movd   xmm0,eax
   14000b6fe:	cvtdq2pd xmm0,xmm0
   14000b702:	call   0x1400150ee
   14000b707:	movsd  xmm1,QWORD PTR [rsp+0x70]
   14000b70d:	movaps xmm2,xmm0
   14000b710:	mulsd  xmm1,QWORD PTR [rip+0xd850]        # 0x140018f68
   14000b718:	addsd  xmm2,QWORD PTR [rsi+0x90]
   14000b720:	comisd xmm0,xmm1
   14000b724:	movsd  QWORD PTR [rsi+0x90],xmm2
   14000b72c:	ja     0x14000b73f
   14000b72e:	movsd  xmm0,QWORD PTR [rsp+0x70]
   14000b734:	mulsd  xmm0,QWORD PTR [rsi+0x58]
   14000b739:	comisd xmm2,xmm0
   14000b73d:	jb     0x14000b749
   14000b73f:	mov    DWORD PTR [rsi+0xa8],0x1
   14000b749:	cmp    DWORD PTR [rsi+0xa8],0x0
   14000b750:	jne    0x14000b784
   14000b752:	lea    rcx,[rsi+0x98]
   14000b759:	mov    rdx,rdi
   14000b75c:	call   QWORD PTR [rip+0xab7e]        # 0x1400162e0
   14000b762:	test   eax,eax
   14000b764:	je     0x14000b775
   14000b766:	movsd  xmm0,QWORD PTR [rsi+0x78]
   14000b76b:	comisd xmm0,QWORD PTR [rip+0xd865]        # 0x140018fd8
   14000b773:	jbe    0x14000b77f
   14000b775:	mov    DWORD PTR [rsi+0xa8],0x1
   14000b77f:	mov    rbx,QWORD PTR [rsp+0x60]
   14000b784:	cmp    DWORD PTR [rsi+0xa8],0x0
   14000b78b:	mov    QWORD PTR [rsi+0x88],rdi
   14000b792:	mov    DWORD PTR [rsi+0x84],0x1
   14000b79c:	je     0x14000b7b5
   14000b79e:	cmp    DWORD PTR [rsi+0x20],0x0
   14000b7a2:	jne    0x14000b7bb
   14000b7a4:	movsd  xmm2,QWORD PTR [rsp+0x70]
   14000b7aa:	mov    rdx,rdi
   14000b7ad:	mov    rcx,rsi
   14000b7b0:	call   0x14000b7f0
   14000b7b5:	cmp    DWORD PTR [rsi+0x20],0x0
   14000b7b9:	je     0x14000b7cf
   14000b7bb:	movsd  xmm3,QWORD PTR [rsp+0x70]
   14000b7c1:	mov    r8,rbx
   14000b7c4:	mov    rdx,rdi
   14000b7c7:	mov    rcx,rsi
   14000b7ca:	call   0x14000b858
   14000b7cf:	mov    rbx,QWORD PTR [rsp+0x58]
   14000b7d4:	mov    rsi,QWORD PTR [rsp+0x68]
   14000b7d9:	add    rsp,0x30
   14000b7dd:	pop    r15
   14000b7df:	pop    r14
   14000b7e1:	pop    rdi
   14000b7e2:	ret    
   14000b7e3:	int3   
   14000b7e4:	int3   
   14000b7e5:	int3   
   14000b7e6:	int3   
   14000b7e7:	int3   
   14000b7e8:	int3   
   14000b7e9:	int3   
   14000b7ea:	int3   
   14000b7eb:	int3   
   14000b7ec:	int3   
   14000b7ed:	int3   
   14000b7ee:	int3   
   14000b7ef:	int3   
   14000b7f0:	rex push rbx
   14000b7f2:	sub    rsp,0x30
   14000b7f6:	mov    rax,rdx
   14000b7f9:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14000b7fe:	sub    edx,DWORD PTR [rcx+0x68]
   14000b801:	movaps xmm6,xmm2
   14000b804:	shr    rax,0x20
   14000b808:	mov    rbx,rcx
   14000b80b:	sub    eax,DWORD PTR [rcx+0x6c]
   14000b80e:	imul   eax,eax
   14000b811:	imul   edx,edx
   14000b814:	add    edx,eax
   14000b816:	movd   xmm0,edx
   14000b81a:	cvtdq2pd xmm0,xmm0
   14000b81e:	call   0x1400150ee
   14000b823:	mulsd  xmm6,QWORD PTR [rip+0xd75d]        # 0x140018f88
   14000b82b:	comisd xmm0,xmm6
   14000b82f:	ja     0x14000b840
   14000b831:	movsd  xmm0,QWORD PTR [rbx+0x78]
   14000b836:	comisd xmm0,QWORD PTR [rip+0xd752]        # 0x140018f90
   14000b83e:	jbe    0x14000b847
   14000b840:	mov    DWORD PTR [rbx+0x20],0x1
   14000b847:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000b84c:	add    rsp,0x30
   14000b850:	pop    rbx
   14000b851:	ret    
   14000b852:	int3   
   14000b853:	int3   
   14000b854:	int3   
   14000b855:	int3   
   14000b856:	int3   
   14000b857:	int3   
   14000b858:	mov    rax,rsp
   14000b85b:	mov    QWORD PTR [rax+0x8],rbx
   14000b85f:	mov    QWORD PTR [rax+0x10],rsi
   14000b863:	mov    QWORD PTR [rax+0x18],rdi
   14000b867:	mov    QWORD PTR [rax+0x20],r14
   14000b86b:	push   rbp
   14000b86c:	lea    rbp,[rax-0x5f]
   14000b870:	sub    rsp,0xb0
   14000b877:	mov    r14d,DWORD PTR [rcx+0x100]
   14000b87e:	mov    rsi,rdx
   14000b881:	movaps XMMWORD PTR [rax-0x18],xmm6
   14000b885:	mov    rbx,rdx
   14000b888:	movaps XMMWORD PTR [rax-0x28],xmm7
   14000b88c:	mov    rdi,rcx
   14000b88f:	movaps XMMWORD PTR [rax-0x38],xmm8
   14000b894:	movaps XMMWORD PTR [rax-0x48],xmm9
   14000b899:	shr    rsi,0x20
   14000b89d:	movd   xmm8,ebx
   14000b8a2:	movaps XMMWORD PTR [rax-0x58],xmm10
   14000b8a7:	movaps XMMWORD PTR [rax-0x68],xmm11
   14000b8ac:	movaps xmm11,xmm3
   14000b8b0:	movd   xmm9,esi
   14000b8b5:	mov    QWORD PTR [rbp-0x11],r8
   14000b8b9:	cvtdq2pd xmm9,xmm9
   14000b8be:	cvtdq2pd xmm8,xmm8
   14000b8c3:	movsd  QWORD PTR [rbp-0x31],xmm9
   14000b8c9:	movsd  QWORD PTR [rbp-0x39],xmm8
   14000b8cf:	test   r14b,0x1
   14000b8d3:	je     0x14000b92c
   14000b8d5:	movsd  xmm0,QWORD PTR [rcx+0x8]
   14000b8da:	movaps xmm1,xmm9
   14000b8de:	addsd  xmm0,QWORD PTR [rcx+0x118]
   14000b8e6:	subsd  xmm1,QWORD PTR [rcx+0x110]
   14000b8ee:	movsd  QWORD PTR [rbp-0x29],xmm0
   14000b8f3:	movaps xmm0,xmm8
   14000b8f7:	subsd  xmm0,QWORD PTR [rcx+0x108]
   14000b8ff:	mulsd  xmm1,xmm1
   14000b903:	mulsd  xmm0,xmm0
   14000b907:	addsd  xmm0,xmm1
   14000b90b:	call   0x1400150ee
   14000b910:	movaps xmm6,xmm0
   14000b913:	movsd  QWORD PTR [rbp-0x21],xmm0
   14000b918:	divsd  xmm6,QWORD PTR [rdi+0x8]
   14000b91d:	movups xmm10,XMMWORD PTR [rbp-0x29]
   14000b922:	movsd  QWORD PTR [rbp-0x19],xmm6
   14000b927:	movaps xmm7,xmm0
   14000b92a:	jmp    0x14000b969
   14000b92c:	mov    ecx,esi
   14000b92e:	mov    eax,edx
   14000b930:	sub    eax,DWORD PTR [rdi+0x68]
   14000b933:	xorps  xmm10,xmm10
   14000b937:	sub    ecx,DWORD PTR [rdi+0x6c]
   14000b93a:	xorps  xmm6,xmm6
   14000b93d:	imul   eax,eax
   14000b940:	imul   ecx,ecx
   14000b943:	movsd  QWORD PTR [rbp-0x19],xmm6
   14000b948:	movups XMMWORD PTR [rbp-0x29],xmm10
   14000b94d:	add    eax,ecx
   14000b94f:	movd   xmm0,eax
   14000b953:	cvtdq2pd xmm0,xmm0
   14000b957:	call   0x1400150ee
   14000b95c:	movsd  xmm7,QWORD PTR [rbp-0x21]
   14000b961:	movsd  QWORD PTR [rdi+0xc8],xmm0
   14000b969:	sub    ebx,DWORD PTR [rdi+0x68]
   14000b96c:	sub    esi,DWORD PTR [rdi+0x6c]
   14000b96f:	imul   ebx,ebx
   14000b972:	imul   esi,esi
   14000b975:	add    ebx,esi
   14000b977:	movd   xmm0,ebx
   14000b97b:	cvtdq2pd xmm0,xmm0
   14000b97f:	call   0x1400150ee
   14000b984:	movd   xmm2,DWORD PTR [rdi+0x6c]
   14000b989:	movd   xmm3,DWORD PTR [rdi+0x68]
   14000b98e:	cvtdq2pd xmm2,xmm2
   14000b992:	cvtdq2pd xmm3,xmm3
   14000b996:	subsd  xmm9,xmm2
   14000b99b:	movsd  QWORD PTR [rdi+0xb8],xmm0
   14000b9a3:	subsd  xmm8,xmm3
   14000b9a8:	movaps xmm0,xmm9
   14000b9ac:	movaps xmm1,xmm8
   14000b9b0:	call   0x1400150d6
   14000b9b5:	movsd  xmm1,QWORD PTR [rdi+0x8]
   14000b9ba:	mulsd  xmm11,QWORD PTR [rdi+0x40]
   14000b9c0:	addsd  xmm7,QWORD PTR [rdi+0xc8]
   14000b9c8:	movsd  QWORD PTR [rdi+0xc0],xmm0
   14000b9d0:	movaps xmm0,xmm1
   14000b9d3:	addsd  xmm0,QWORD PTR [rdi+0xd0]
   14000b9db:	comisd xmm11,xmm6
   14000b9e0:	movsd  QWORD PTR [rdi+0xd0],xmm0
   14000b9e8:	movsd  QWORD PTR [rdi+0xc8],xmm7
   14000b9f0:	ja     0x14000b9f5
   14000b9f2:	xorps  xmm1,xmm1
   14000b9f5:	movups xmm0,XMMWORD PTR [rbp-0x39]
   14000b9f9:	lea    r11,[rsp+0xb0]
   14000ba01:	or     r14d,0x1
   14000ba05:	addsd  xmm1,QWORD PTR [rdi+0xd8]
   14000ba0d:	mov    rbx,QWORD PTR [r11+0x10]
   14000ba11:	mov    rsi,QWORD PTR [r11+0x18]
   14000ba15:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14000ba1a:	movaps xmm7,XMMWORD PTR [r11-0x20]
   14000ba1f:	movaps xmm8,XMMWORD PTR [r11-0x30]
   14000ba24:	movaps xmm9,XMMWORD PTR [r11-0x40]
   14000ba29:	movaps xmm11,XMMWORD PTR [r11-0x60]
   14000ba2e:	movups XMMWORD PTR [rdi+0x108],xmm0
   14000ba35:	mov    DWORD PTR [rdi+0x100],r14d
   14000ba3c:	movups xmm0,XMMWORD PTR [rbp-0x19]
   14000ba40:	mov    r14,QWORD PTR [r11+0x28]
   14000ba44:	movups XMMWORD PTR [rdi+0x118],xmm10
   14000ba4c:	movaps xmm10,XMMWORD PTR [r11-0x50]
   14000ba51:	movups XMMWORD PTR [rdi+0x128],xmm0
   14000ba58:	movsd  QWORD PTR [rdi+0xd8],xmm1
   14000ba60:	mov    rdi,QWORD PTR [r11+0x20]
   14000ba64:	mov    rsp,r11
   14000ba67:	pop    rbp
   14000ba68:	ret    
   14000ba69:	int3   
   14000ba6a:	int3   
   14000ba6b:	int3   
   14000ba6c:	int3   
   14000ba6d:	int3   
   14000ba6e:	int3   
   14000ba6f:	int3   
   14000ba70:	mov    QWORD PTR [rsp+0x8],rbx
   14000ba75:	push   rdi
   14000ba76:	sub    rsp,0x30
   14000ba7a:	movsd  xmm0,QWORD PTR [rcx+0xc0]
   14000ba82:	mov    rbx,rcx
   14000ba85:	mulsd  xmm0,QWORD PTR [rip+0xd50b]        # 0x140018f98
   14000ba8d:	mov    eax,0x1
   14000ba92:	mov    DWORD PTR [rcx+0x154],eax
   14000ba98:	mov    edi,r8d
   14000ba9b:	mov    DWORD PTR [rcx+0x158],eax
   14000baa1:	mov    DWORD PTR [rcx+0x15c],eax
   14000baa7:	mov    DWORD PTR [rcx+0x160],eax
   14000baad:	divsd  xmm0,QWORD PTR [rip+0xd4a3]        # 0x140018f58
   14000bab5:	mov    DWORD PTR [rcx+0x164],eax
   14000babb:	mov    eax,0xb60b60b7
   14000bac0:	movaps XMMWORD PTR [rsp+0x20],xmm7
   14000bac5:	movaps xmm7,xmm1
   14000bac8:	addsd  xmm0,QWORD PTR [rip+0xd4e0]        # 0x140018fb0
   14000bad0:	cvttsd2si ecx,xmm0
   14000bad4:	imul   ecx
   14000bad6:	add    edx,ecx
   14000bad8:	sar    edx,0x8
   14000badb:	mov    eax,edx
   14000badd:	shr    eax,0x1f
   14000bae0:	add    edx,eax
   14000bae2:	imul   eax,edx,0x168
   14000bae8:	sub    ecx,eax
   14000baea:	mov    rax,QWORD PTR [rbx+0x68]
   14000baee:	mov    QWORD PTR [rbx+0x138],rax
   14000baf5:	mov    rax,QWORD PTR [rbx+0x70]
   14000baf9:	mov    QWORD PTR [rbx+0x140],rax
   14000bb00:	cvttsd2si eax,QWORD PTR [rbx+0x110]
   14000bb08:	mov    DWORD PTR [rbx+0x150],ecx
   14000bb0e:	mov    edx,DWORD PTR [rbx+0x13c]
   14000bb14:	cvttsd2si ecx,QWORD PTR [rbx+0x108]
   14000bb1c:	sub    edx,eax
   14000bb1e:	mov    eax,DWORD PTR [rbx+0x138]
   14000bb24:	imul   edx,edx
   14000bb27:	sub    eax,ecx
   14000bb29:	imul   eax,eax
   14000bb2c:	add    eax,edx
   14000bb2e:	movd   xmm0,eax
   14000bb32:	cvtdq2pd xmm0,xmm0
   14000bb36:	call   0x1400150ee
   14000bb3b:	addsd  xmm0,QWORD PTR [rip+0xd3ed]        # 0x140018f30
   14000bb43:	cvttsd2si eax,xmm0
   14000bb47:	mov    DWORD PTR [rbx+0x148],eax
   14000bb4d:	mov    ecx,DWORD PTR [rbx+0x144]
   14000bb53:	mov    eax,DWORD PTR [rbx+0x140]
   14000bb59:	sub    eax,DWORD PTR [rbx+0x130]
   14000bb5f:	sub    ecx,DWORD PTR [rbx+0x134]
   14000bb65:	imul   eax,eax
   14000bb68:	imul   ecx,ecx
   14000bb6b:	add    eax,ecx
   14000bb6d:	movd   xmm0,eax
   14000bb71:	cvtdq2pd xmm0,xmm0
   14000bb75:	call   0x1400150ee
   14000bb7a:	movsd  xmm2,QWORD PTR [rbx+0xb8]
   14000bb82:	comisd xmm2,QWORD PTR [rip+0xd396]        # 0x140018f20
   14000bb8a:	addsd  xmm0,QWORD PTR [rip+0xd39e]        # 0x140018f30
   14000bb92:	movsd  xmm4,QWORD PTR [rbx+0xc8]
   14000bb9a:	movsd  xmm1,QWORD PTR [rip+0xd39e]        # 0x140018f40
   14000bba2:	movaps xmm3,xmm4
   14000bba5:	subsd  xmm3,xmm2
   14000bba9:	cvttsd2si eax,xmm0
   14000bbad:	mov    DWORD PTR [rbx+0x14c],eax
   14000bbb3:	jbe    0x14000bbbc
   14000bbb5:	movaps xmm1,xmm4
   14000bbb8:	divsd  xmm1,xmm2
   14000bbbc:	movsd  xmm0,QWORD PTR [rbx+0xd8]
   14000bbc4:	xor    eax,eax
   14000bbc6:	comisd xmm0,QWORD PTR [rbx+0x50]
   14000bbcb:	jbe    0x14000bbd9
   14000bbcd:	mov    DWORD PTR [rbx+0x154],eax
   14000bbd3:	mov    DWORD PTR [rbx+0x164],eax
   14000bbd9:	movsd  xmm0,QWORD PTR [rbx+0xd0]
   14000bbe1:	comisd xmm0,QWORD PTR [rbx+0x48]
   14000bbe6:	jbe    0x14000bbf4
   14000bbe8:	mov    DWORD PTR [rbx+0x154],eax
   14000bbee:	mov    DWORD PTR [rbx+0x15c],eax
   14000bbf4:	comisd xmm1,QWORD PTR [rbx+0x38]
   14000bbf9:	jbe    0x14000bc1d
   14000bbfb:	movaps xmm0,xmm7
   14000bbfe:	mulsd  xmm0,QWORD PTR [rip+0xd3ba]        # 0x140018fc0
   14000bc06:	comisd xmm2,xmm0
   14000bc0a:	jbe    0x14000bc1d
   14000bc0c:	movaps xmm0,xmm7
   14000bc0f:	mulsd  xmm0,QWORD PTR [rip+0xd389]        # 0x140018fa0
   14000bc17:	comisd xmm3,xmm0
   14000bc1b:	ja     0x14000bc2e
   14000bc1d:	movaps xmm0,xmm7
   14000bc20:	mulsd  xmm0,QWORD PTR [rip+0xd380]        # 0x140018fa8
   14000bc28:	comisd xmm3,xmm0
   14000bc2c:	jbe    0x14000bc3a
   14000bc2e:	mov    DWORD PTR [rbx+0x154],eax
   14000bc34:	mov    DWORD PTR [rbx+0x160],eax
   14000bc3a:	mulsd  xmm7,QWORD PTR [rbx+0x30]
   14000bc3f:	comisd xmm7,xmm2
   14000bc43:	jbe    0x14000bc50
   14000bc45:	test   edi,edi
   14000bc47:	je     0x14000bc50
   14000bc49:	mov    QWORD PTR [rbx+0x154],rax
   14000bc50:	cmp    DWORD PTR [rbx+0x154],eax
   14000bc56:	je     0x14000bc5c
   14000bc58:	test   edi,edi
   14000bc5a:	je     0x14000bc60
   14000bc5c:	mov    QWORD PTR [rbx+0x1c],rax
   14000bc60:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bc65:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   14000bc6a:	add    rsp,0x30
   14000bc6e:	pop    rdi
   14000bc6f:	ret    
   14000bc70:	int3   
   14000bc71:	int3   
   14000bc72:	int3   
   14000bc73:	int3   
   14000bc74:	int3   
   14000bc75:	int3   
   14000bc76:	int3   
   14000bc77:	int3   
   14000bc78:	int3   
   14000bc79:	int3   
   14000bc7a:	int3   
   14000bc7b:	int3   
   14000bc7c:	int3   
   14000bc7d:	int3   
   14000bc7e:	int3   
   14000bc7f:	int3   
   14000bc80:	sub    rsp,0x18
   14000bc84:	movaps XMMWORD PTR [rsp],xmm6
   14000bc88:	xor    eax,eax
   14000bc8a:	xorps  xmm6,xmm6
   14000bc8d:	movaps xmm4,xmm1
   14000bc90:	comisd xmm6,xmm1
   14000bc94:	ja     0x14000bd6d
   14000bc9a:	movsd  xmm5,QWORD PTR [rip+0xd29e]        # 0x140018f40
   14000bca2:	comisd xmm1,xmm5
   14000bca6:	ja     0x14000bd6d
   14000bcac:	subsd  xmm5,xmm1
   14000bcb0:	movsd  QWORD PTR [rcx+0x28],xmm4
   14000bcb5:	movaps xmm0,xmm4
   14000bcb8:	movaps xmm2,xmm4
   14000bcbb:	mulsd  xmm0,QWORD PTR [rip+0xd305]        # 0x140018fc8
   14000bcc3:	mulsd  xmm2,QWORD PTR [rip+0xd27d]        # 0x140018f48
   14000bccb:	movaps xmm1,xmm5
   14000bcce:	movaps xmm3,xmm5
   14000bcd1:	mulsd  xmm1,QWORD PTR [rip+0xd2df]        # 0x140018fb8
   14000bcd9:	mulsd  xmm3,QWORD PTR [rip+0xd297]        # 0x140018f78
   14000bce1:	addsd  xmm1,xmm0
   14000bce5:	movaps xmm0,xmm5
   14000bce8:	mulsd  xmm0,QWORD PTR [rip+0xd260]        # 0x140018f50
   14000bcf0:	movsd  QWORD PTR [rcx+0x30],xmm1
   14000bcf5:	movaps xmm1,xmm5
   14000bcf8:	mulsd  xmm1,QWORD PTR [rip+0xd260]        # 0x140018f60
   14000bd00:	addsd  xmm2,xmm0
   14000bd04:	movaps xmm0,xmm4
   14000bd07:	mulsd  xmm0,QWORD PTR [rip+0xd259]        # 0x140018f68
   14000bd0f:	movsd  QWORD PTR [rcx+0x38],xmm2
   14000bd14:	movaps xmm2,xmm5
   14000bd17:	mulsd  xmm5,QWORD PTR [rip+0xd271]        # 0x140018f90
   14000bd1f:	mulsd  xmm2,QWORD PTR [rip+0xd281]        # 0x140018fa8
   14000bd27:	addsd  xmm1,xmm0
   14000bd2b:	movaps xmm0,xmm4
   14000bd2e:	mulsd  xmm0,QWORD PTR [rip+0xd26a]        # 0x140018fa0
   14000bd36:	movsd  QWORD PTR [rcx+0x40],xmm1
   14000bd3b:	movaps xmm1,xmm4
   14000bd3e:	mulsd  xmm1,QWORD PTR [rip+0xd232]        # 0x140018f78
   14000bd46:	addsd  xmm2,xmm0
   14000bd4a:	movaps xmm0,xmm4
   14000bd4d:	mulsd  xmm0,xmm6
   14000bd51:	addsd  xmm3,xmm1
   14000bd55:	movsd  QWORD PTR [rcx+0x48],xmm2
   14000bd5a:	addsd  xmm5,xmm0
   14000bd5e:	movsd  QWORD PTR [rcx+0x50],xmm3
   14000bd63:	unpcklpd xmm5,xmm5
   14000bd67:	movups XMMWORD PTR [rcx+0x58],xmm5
   14000bd6b:	jmp    0x14000bd72
   14000bd6d:	mov    eax,0x80070057
   14000bd72:	movaps xmm6,XMMWORD PTR [rsp]
   14000bd76:	add    rsp,0x18
   14000bd7a:	ret    
   14000bd7b:	int3   
   14000bd7c:	int3   
   14000bd7d:	int3   
   14000bd7e:	int3   
   14000bd7f:	int3   
   14000bd80:	int3   
   14000bd81:	int3   
   14000bd82:	int3   
   14000bd83:	int3   
   14000bd84:	int3   
   14000bd85:	int3   
   14000bd86:	int3   
   14000bd87:	int3   
   14000bd88:	int3   
   14000bd89:	int3   
   14000bd8a:	int3   
   14000bd8b:	int3   
   14000bd8c:	int3   
   14000bd8d:	int3   
   14000bd8e:	int3   
   14000bd8f:	int3   
   14000bd90:	cmp    DWORD PTR [rcx+0x1c],0x0
   14000bd94:	je     0x14000bdec
   14000bd96:	test   r8d,r8d
   14000bd99:	jne    0x14000bde6
   14000bd9b:	mov    eax,edx
   14000bd9d:	xorps  xmm2,xmm2
   14000bda0:	sub    eax,DWORD PTR [rcx+0x80]
   14000bda6:	cvtsi2sd xmm2,rax
   14000bdab:	comisd xmm2,QWORD PTR [rip+0xd16d]        # 0x140018f20
   14000bdb3:	jb     0x14000bde6
   14000bdb5:	movsd  xmm0,QWORD PTR [rip+0xd213]        # 0x140018fd0
   14000bdbd:	comisd xmm0,xmm2
   14000bdc1:	jb     0x14000bde6
   14000bdc3:	movsd  xmm1,QWORD PTR [rcx+0x10]
   14000bdc8:	movsd  xmm0,QWORD PTR [rip+0xd170]        # 0x140018f40
   14000bdd0:	subsd  xmm0,xmm1
   14000bdd4:	mulsd  xmm1,xmm2
   14000bdd8:	mulsd  xmm0,QWORD PTR [rcx+0x8]
   14000bddd:	addsd  xmm0,xmm1
   14000bde1:	movsd  QWORD PTR [rcx+0x8],xmm0
   14000bde6:	mov    DWORD PTR [rcx+0x80],edx
   14000bdec:	ret    
   14000bded:	int3   
   14000bdee:	int3   
   14000bdef:	int3   
   14000bdf0:	int3   
   14000bdf1:	int3   
   14000bdf2:	int3   
   14000bdf3:	int3   
   14000bdf4:	mov    QWORD PTR [rsp+0x8],rbx
   14000bdf9:	xor    ebx,ebx
   14000bdfb:	lea    rax,[rdx-0x1]
   14000bdff:	mov    r10d,0x7ffffffe
   14000be05:	mov    r9d,ebx
   14000be08:	cmp    rax,r10
   14000be0b:	mov    r11d,0x80070057
   14000be11:	cmova  r9d,r11d
   14000be15:	test   r9d,r9d
   14000be18:	js     0x14000be59
   14000be1a:	mov    r9d,ebx
   14000be1d:	test   rdx,rdx
   14000be20:	je     0x14000be4d
   14000be22:	sub    r10,rdx
   14000be25:	sub    r8,rcx
   14000be28:	lea    rax,[r10+rdx*1]
   14000be2c:	test   rax,rax
   14000be2f:	je     0x14000be48
   14000be31:	movzx  eax,WORD PTR [r8+rcx*1]
   14000be36:	test   ax,ax
   14000be39:	je     0x14000be48
   14000be3b:	mov    WORD PTR [rcx],ax
   14000be3e:	add    rcx,0x2
   14000be42:	sub    rdx,0x1
   14000be46:	jne    0x14000be28
   14000be48:	test   rdx,rdx
   14000be4b:	jne    0x14000be5e
   14000be4d:	sub    rcx,0x2
   14000be51:	mov    r9d,0x8007007a
   14000be57:	jmp    0x14000be5e
   14000be59:	test   rdx,rdx
   14000be5c:	je     0x14000be61
   14000be5e:	mov    WORD PTR [rcx],bx
   14000be61:	mov    rbx,QWORD PTR [rsp+0x8]
   14000be66:	mov    eax,r9d
   14000be69:	ret    
   14000be6a:	int3   
   14000be6b:	int3   
   14000be6c:	int3   
   14000be6d:	int3   
   14000be6e:	int3   
   14000be6f:	int3   
   14000be70:	sub    rsp,0x48
   14000be74:	test   r9,r9
   14000be77:	je     0x14000be8c
   14000be79:	or     r8,0xffffffffffffffff
   14000be7d:	inc    r8
   14000be80:	cmp    BYTE PTR [r9+r8*1],0x0
   14000be85:	jne    0x14000be7d
   14000be87:	inc    r8
   14000be8a:	jmp    0x14000be92
   14000be8c:	mov    r8d,0x5
   14000be92:	test   r9,r9
   14000be95:	lea    rax,[rip+0xc12c]        # 0x140017fc8
   14000be9c:	cmovne rax,r9
   14000bea0:	and    QWORD PTR [rsp+0x30],0x0
   14000bea6:	mov    QWORD PTR [rsp+0x28],r8
   14000beab:	lea    r8,[rip+0xc506]        # 0x1400183b8
   14000beb2:	movzx  r9d,dx
   14000beb6:	mov    edx,0x2b
   14000bebb:	mov    QWORD PTR [rsp+0x20],rax
   14000bec0:	call   QWORD PTR [rip+0xa7da]        # 0x1400166a0
   14000bec6:	add    rsp,0x48
   14000beca:	ret    
   14000becb:	int3   
   14000becc:	int3   
   14000becd:	int3   
   14000bece:	int3   
   14000becf:	int3   
   14000bed0:	int3   
   14000bed1:	int3   
   14000bed2:	int3   
   14000bed3:	int3   
   14000bed4:	sub    rsp,0x58
   14000bed8:	test   r9,r9
   14000bedb:	je     0x14000bef0
   14000bedd:	or     rdx,0xffffffffffffffff
   14000bee1:	inc    rdx
   14000bee4:	cmp    BYTE PTR [r9+rdx*1],0x0
   14000bee9:	jne    0x14000bee1
   14000beeb:	inc    rdx
   14000beee:	jmp    0x14000bef5
   14000bef0:	mov    edx,0x5
   14000bef5:	test   r9,r9
   14000bef8:	lea    r8,[rsp+0x80]
   14000bf00:	lea    rax,[rip+0xc0c1]        # 0x140017fc8
   14000bf07:	cmovne rax,r9
   14000bf0b:	and    QWORD PTR [rsp+0x40],0x0
   14000bf11:	mov    QWORD PTR [rsp+0x38],0x4
   14000bf1a:	mov    r9d,0xb
   14000bf20:	mov    QWORD PTR [rsp+0x30],r8
   14000bf25:	lea    r8,[rip+0xc48c]        # 0x1400183b8
   14000bf2c:	mov    QWORD PTR [rsp+0x28],rdx
   14000bf31:	mov    QWORD PTR [rsp+0x20],rax
   14000bf36:	lea    edx,[r9+0x20]
   14000bf3a:	call   QWORD PTR [rip+0xa760]        # 0x1400166a0
   14000bf40:	add    rsp,0x58
   14000bf44:	ret    
   14000bf45:	int3   
   14000bf46:	int3   
   14000bf47:	int3   
   14000bf48:	int3   
   14000bf49:	int3   
   14000bf4a:	int3   
   14000bf4b:	int3   
   14000bf4c:	rex push rbx
   14000bf4e:	sub    rsp,0x20
   14000bf52:	mov    r9,rdx
   14000bf55:	mov    QWORD PTR [rcx],r8
   14000bf58:	mov    rbx,rcx
   14000bf5b:	mov    QWORD PTR [rcx+0x8],rdx
   14000bf5f:	mov    rcx,QWORD PTR [rip+0x120ba]        # 0x14001e020
   14000bf66:	lea    rax,[rip+0x120b3]        # 0x14001e020
   14000bf6d:	cmp    rcx,rax
   14000bf70:	je     0x14000bf89
   14000bf72:	test   DWORD PTR [rcx+0x1c],0x400
   14000bf79:	je     0x14000bf89
   14000bf7b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000bf7f:	mov    edx,0xa
   14000bf84:	call   0x14000be70
   14000bf89:	mov    rax,rbx
   14000bf8c:	add    rsp,0x20
   14000bf90:	pop    rbx
   14000bf91:	ret    
   14000bf92:	int3   
   14000bf93:	int3   
   14000bf94:	int3   
   14000bf95:	int3   
   14000bf96:	int3   
   14000bf97:	int3   
   14000bf98:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf9d:	push   rdi
   14000bf9e:	sub    rsp,0x30
   14000bfa2:	mov    rax,QWORD PTR [rcx]
   14000bfa5:	lea    rdi,[rip+0x12074]        # 0x14001e020
   14000bfac:	mov    rbx,rcx
   14000bfaf:	test   rax,rax
   14000bfb2:	je     0x14000bfdd
   14000bfb4:	mov    edx,DWORD PTR [rax]
   14000bfb6:	test   edx,edx
   14000bfb8:	jns    0x14000bfdd
   14000bfba:	mov    rcx,QWORD PTR [rip+0x1205f]        # 0x14001e020
   14000bfc1:	cmp    rcx,rdi
   14000bfc4:	je     0x14000c004
   14000bfc6:	test   BYTE PTR [rcx+0x1c],0x4
   14000bfca:	je     0x14000bfe4
   14000bfcc:	mov    r9,QWORD PTR [rbx+0x8]
   14000bfd0:	mov    rcx,QWORD PTR [rcx+0x10]
   14000bfd4:	mov    DWORD PTR [rsp+0x20],edx
   14000bfd8:	call   0x14000bed4
   14000bfdd:	mov    rcx,QWORD PTR [rip+0x1203c]        # 0x14001e020
   14000bfe4:	cmp    rcx,rdi
   14000bfe7:	je     0x14000c004
   14000bfe9:	test   DWORD PTR [rcx+0x1c],0x400
   14000bff0:	je     0x14000c004
   14000bff2:	mov    r9,QWORD PTR [rbx+0x8]
   14000bff6:	mov    edx,0xc
   14000bffb:	mov    rcx,QWORD PTR [rcx+0x10]
   14000bfff:	call   0x14000be70
   14000c004:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c009:	add    rsp,0x30
   14000c00d:	pop    rdi
   14000c00e:	ret    
   14000c00f:	int3   
   14000c010:	int3   
   14000c011:	int3   
   14000c012:	int3   
   14000c013:	int3   
   14000c014:	int3   
   14000c015:	int3   
   14000c016:	int3   
   14000c017:	int3   
   14000c018:	mov    rax,rsp
   14000c01b:	mov    QWORD PTR [rax+0x8],rbx
   14000c01f:	mov    QWORD PTR [rax+0x10],rsi
   14000c023:	push   rdi
   14000c024:	sub    rsp,0x30
   14000c028:	and    DWORD PTR [rax+0x18],0x0
   14000c02c:	mov    rsi,r8
   14000c02f:	mov    rbx,rdx
   14000c032:	lea    r8,[rax+0x18]
   14000c036:	mov    rdi,rcx
   14000c039:	lea    rdx,[rip+0xbf90]        # 0x140017fd0
   14000c040:	lea    rcx,[rax-0x18]
   14000c044:	call   0x14000bf4c
   14000c049:	mov    rdx,rbx
   14000c04c:	mov    rcx,rdi
   14000c04f:	call   QWORD PTR [rip+0xa08b]        # 0x1400160e0
   14000c055:	mov    rbx,rax
   14000c058:	test   rax,rax
   14000c05b:	jne    0x14000c0a8
   14000c05d:	call   QWORD PTR [rip+0xa225]        # 0x140016288
   14000c063:	movzx  r8d,ax
   14000c067:	or     r8d,0x80070000
   14000c06e:	test   eax,eax
   14000c070:	cmovle r8d,eax
   14000c074:	mov    DWORD PTR [rsp+0x50],r8d
   14000c079:	mov    rcx,QWORD PTR [rip+0x11fa0]        # 0x14001e020
   14000c080:	lea    rax,[rip+0x11f99]        # 0x14001e020
   14000c087:	cmp    rcx,rax
   14000c08a:	je     0x14000c0ad
   14000c08c:	test   BYTE PTR [rcx+0x1c],0x4
   14000c090:	je     0x14000c0ad
   14000c092:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c096:	lea    edx,[rbx+0x10]
   14000c099:	mov    r9d,r8d
   14000c09c:	lea    r8,[rip+0xc315]        # 0x1400183b8
   14000c0a3:	call   0x140001228
   14000c0a8:	mov    r8d,DWORD PTR [rsp+0x50]
   14000c0ad:	test   rsi,rsi
   14000c0b0:	je     0x14000c0b5
   14000c0b2:	mov    DWORD PTR [rsi],r8d
   14000c0b5:	lea    rcx,[rsp+0x20]
   14000c0ba:	call   0x14000bf98
   14000c0bf:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c0c4:	mov    rax,rbx
   14000c0c7:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c0cc:	add    rsp,0x30
   14000c0d0:	pop    rdi
   14000c0d1:	ret    
   14000c0d2:	int3   
   14000c0d3:	int3   
   14000c0d4:	int3   
   14000c0d5:	int3   
   14000c0d6:	int3   
   14000c0d7:	int3   
   14000c0d8:	mov    rax,rsp
   14000c0db:	mov    QWORD PTR [rax+0x8],rbx
   14000c0df:	push   rdi
   14000c0e0:	sub    rsp,0x30
   14000c0e4:	and    DWORD PTR [rax+0x10],0x0
   14000c0e8:	lea    r8,[rax+0x10]
   14000c0ec:	mov    rdi,rdx
   14000c0ef:	mov    rbx,rcx
   14000c0f2:	lea    rdx,[rip+0xbeef]        # 0x140017fe8
   14000c0f9:	lea    rcx,[rax-0x18]
   14000c0fd:	call   0x14000bf4c
   14000c102:	mov    rcx,rbx
   14000c105:	call   QWORD PTR [rip+0x9fe5]        # 0x1400160f0
   14000c10b:	mov    ebx,eax
   14000c10d:	test   eax,eax
   14000c10f:	jne    0x14000c15c
   14000c111:	call   QWORD PTR [rip+0xa171]        # 0x140016288
   14000c117:	movzx  r8d,ax
   14000c11b:	or     r8d,0x80070000
   14000c122:	test   eax,eax
   14000c124:	cmovle r8d,eax
   14000c128:	mov    DWORD PTR [rsp+0x48],r8d
   14000c12d:	mov    rcx,QWORD PTR [rip+0x11eec]        # 0x14001e020
   14000c134:	lea    rax,[rip+0x11ee5]        # 0x14001e020
   14000c13b:	cmp    rcx,rax
   14000c13e:	je     0x14000c161
   14000c140:	test   BYTE PTR [rcx+0x1c],0x4
   14000c144:	je     0x14000c161
   14000c146:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c14a:	lea    edx,[rbx+0x11]
   14000c14d:	mov    r9d,r8d
   14000c150:	lea    r8,[rip+0xc261]        # 0x1400183b8
   14000c157:	call   0x140001228
   14000c15c:	mov    r8d,DWORD PTR [rsp+0x48]
   14000c161:	test   rdi,rdi
   14000c164:	je     0x14000c169
   14000c166:	mov    DWORD PTR [rdi],r8d
   14000c169:	lea    rcx,[rsp+0x20]
   14000c16e:	call   0x14000bf98
   14000c173:	mov    eax,ebx
   14000c175:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c17a:	add    rsp,0x30
   14000c17e:	pop    rdi
   14000c17f:	ret    
   14000c180:	int3   
   14000c181:	int3   
   14000c182:	int3   
   14000c183:	int3   
   14000c184:	int3   
   14000c185:	int3   
   14000c186:	int3   
   14000c187:	int3   
   14000c188:	mov    rax,rsp
   14000c18b:	mov    QWORD PTR [rax+0x8],rbx
   14000c18f:	push   rdi
   14000c190:	sub    rsp,0x30
   14000c194:	and    DWORD PTR [rax+0x10],0x0
   14000c198:	lea    r8,[rax+0x10]
   14000c19c:	mov    rdi,rdx
   14000c19f:	mov    rbx,rcx
   14000c1a2:	lea    rdx,[rip+0xbe6f]        # 0x140018018
   14000c1a9:	lea    rcx,[rax-0x18]
   14000c1ad:	call   0x14000bf4c
   14000c1b2:	mov    rcx,rbx
   14000c1b5:	call   QWORD PTR [rip+0xa13d]        # 0x1400162f8
   14000c1bb:	mov    rbx,rax
   14000c1be:	test   rax,rax
   14000c1c1:	jne    0x14000c20e
   14000c1c3:	call   QWORD PTR [rip+0xa0bf]        # 0x140016288
   14000c1c9:	movzx  r8d,ax
   14000c1cd:	or     r8d,0x80070000
   14000c1d4:	test   eax,eax
   14000c1d6:	cmovle r8d,eax
   14000c1da:	mov    DWORD PTR [rsp+0x48],r8d
   14000c1df:	mov    rcx,QWORD PTR [rip+0x11e3a]        # 0x14001e020
   14000c1e6:	lea    rax,[rip+0x11e33]        # 0x14001e020
   14000c1ed:	cmp    rcx,rax
   14000c1f0:	je     0x14000c213
   14000c1f2:	test   BYTE PTR [rcx+0x1c],0x4
   14000c1f6:	je     0x14000c213
   14000c1f8:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c1fc:	lea    edx,[rbx+0x14]
   14000c1ff:	mov    r9d,r8d
   14000c202:	lea    r8,[rip+0xc1af]        # 0x1400183b8
   14000c209:	call   0x140001228
   14000c20e:	mov    r8d,DWORD PTR [rsp+0x48]
   14000c213:	test   rdi,rdi
   14000c216:	je     0x14000c21b
   14000c218:	mov    DWORD PTR [rdi],r8d
   14000c21b:	lea    rcx,[rsp+0x20]
   14000c220:	call   0x14000bf98
   14000c225:	mov    rax,rbx
   14000c228:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c22d:	add    rsp,0x30
   14000c231:	pop    rdi
   14000c232:	ret    
   14000c233:	int3   
   14000c234:	int3   
   14000c235:	int3   
   14000c236:	int3   
   14000c237:	int3   
   14000c238:	int3   
   14000c239:	int3   
   14000c23a:	int3   
   14000c23b:	int3   
   14000c23c:	mov    rax,rsp
   14000c23f:	mov    QWORD PTR [rax+0x8],rbx
   14000c243:	mov    QWORD PTR [rax+0x10],rsi
   14000c247:	mov    QWORD PTR [rax+0x18],rdi
   14000c24b:	push   r14
   14000c24d:	sub    rsp,0x30
   14000c251:	and    DWORD PTR [rax+0x20],0x0
   14000c255:	mov    rbx,r8
   14000c258:	mov    edi,edx
   14000c25a:	lea    r8,[rax+0x20]
   14000c25e:	mov    rsi,rcx
   14000c261:	lea    rdx,[rip+0xbdc0]        # 0x140018028
   14000c268:	lea    rcx,[rax-0x18]
   14000c26c:	mov    r14,r9
   14000c26f:	call   0x14000bf4c
   14000c274:	xor    ecx,ecx
   14000c276:	call   QWORD PTR [rip+0x9ff4]        # 0x140016270
   14000c27c:	mov    r8,rbx
   14000c27f:	mov    edx,edi
   14000c281:	mov    rcx,rsi
   14000c284:	call   QWORD PTR [rip+0x9e3e]        # 0x1400160c8
   14000c28a:	mov    ebx,eax
   14000c28c:	call   QWORD PTR [rip+0x9ff6]        # 0x140016288
   14000c292:	movzx  r8d,ax
   14000c296:	or     r8d,0x80070000
   14000c29d:	test   eax,eax
   14000c29f:	cmovle r8d,eax
   14000c2a3:	mov    DWORD PTR [rsp+0x58],r8d
   14000c2a8:	test   r8d,r8d
   14000c2ab:	jns    0x14000c2e3
   14000c2ad:	mov    rcx,QWORD PTR [rip+0x11d6c]        # 0x14001e020
   14000c2b4:	lea    rax,[rip+0x11d65]        # 0x14001e020
   14000c2bb:	cmp    rcx,rax
   14000c2be:	je     0x14000c2e3
   14000c2c0:	test   BYTE PTR [rcx+0x1c],0x4
   14000c2c4:	je     0x14000c2e3
   14000c2c6:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c2ca:	mov    r9d,r8d
   14000c2cd:	lea    r8,[rip+0xc0e4]        # 0x1400183b8
   14000c2d4:	mov    edx,0x15
   14000c2d9:	call   0x140001228
   14000c2de:	mov    r8d,DWORD PTR [rsp+0x58]
   14000c2e3:	test   r14,r14
   14000c2e6:	je     0x14000c2eb
   14000c2e8:	mov    DWORD PTR [r14],r8d
   14000c2eb:	lea    rcx,[rsp+0x20]
   14000c2f0:	call   0x14000bf98
   14000c2f5:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c2fa:	mov    eax,ebx
   14000c2fc:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c301:	mov    rdi,QWORD PTR [rsp+0x50]
   14000c306:	add    rsp,0x30
   14000c30a:	pop    r14
   14000c30c:	ret    
   14000c30d:	int3   
   14000c30e:	int3   
   14000c30f:	int3   
   14000c310:	int3   
   14000c311:	int3   
   14000c312:	int3   
   14000c313:	int3   
   14000c314:	mov    rax,rsp
   14000c317:	mov    QWORD PTR [rax+0x8],rbx
   14000c31b:	mov    QWORD PTR [rax+0x10],rsi
   14000c31f:	push   rdi
   14000c320:	sub    rsp,0x30
   14000c324:	and    DWORD PTR [rax+0x18],0x0
   14000c328:	mov    rsi,r8
   14000c32b:	mov    rbx,rdx
   14000c32e:	lea    r8,[rax+0x18]
   14000c332:	mov    rdi,rcx
   14000c335:	lea    rdx,[rip+0xbd04]        # 0x140018040
   14000c33c:	lea    rcx,[rax-0x18]
   14000c340:	call   0x14000bf4c
   14000c345:	mov    rdx,rbx
   14000c348:	mov    rcx,rdi
   14000c34b:	call   QWORD PTR [rip+0x9faf]        # 0x140016300
   14000c351:	mov    ebx,eax
   14000c353:	test   eax,eax
   14000c355:	jne    0x14000c391
   14000c357:	mov    DWORD PTR [rsp+0x50],0x80004005
   14000c35f:	mov    rcx,QWORD PTR [rip+0x11cba]        # 0x14001e020
   14000c366:	lea    rax,[rip+0x11cb3]        # 0x14001e020
   14000c36d:	cmp    rcx,rax
   14000c370:	je     0x14000c391
   14000c372:	test   BYTE PTR [rcx+0x1c],0x4
   14000c376:	je     0x14000c391
   14000c378:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c37c:	lea    edx,[rbx+0x16]
   14000c37f:	mov    r9d,0x80004005
   14000c385:	lea    r8,[rip+0xc02c]        # 0x1400183b8
   14000c38c:	call   0x140001228
   14000c391:	test   rsi,rsi
   14000c394:	je     0x14000c39c
   14000c396:	mov    eax,DWORD PTR [rsp+0x50]
   14000c39a:	mov    DWORD PTR [rsi],eax
   14000c39c:	lea    rcx,[rsp+0x20]
   14000c3a1:	call   0x14000bf98
   14000c3a6:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c3ab:	mov    eax,ebx
   14000c3ad:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c3b2:	add    rsp,0x30
   14000c3b6:	pop    rdi
   14000c3b7:	ret    
   14000c3b8:	int3   
   14000c3b9:	int3   
   14000c3ba:	int3   
   14000c3bb:	int3   
   14000c3bc:	int3   
   14000c3bd:	int3   
   14000c3be:	int3   
   14000c3bf:	int3   
   14000c3c0:	mov    rax,rsp
   14000c3c3:	mov    QWORD PTR [rax+0x8],rbx
   14000c3c7:	mov    QWORD PTR [rax+0x10],rsi
   14000c3cb:	push   rdi
   14000c3cc:	sub    rsp,0x30
   14000c3d0:	and    DWORD PTR [rax+0x18],0x0
   14000c3d4:	mov    rsi,r8
   14000c3d7:	mov    rbx,rdx
   14000c3da:	lea    r8,[rax+0x18]
   14000c3de:	mov    rdi,rcx
   14000c3e1:	lea    rdx,[rip+0xbc90]        # 0x140018078
   14000c3e8:	lea    rcx,[rax-0x18]
   14000c3ec:	call   0x14000bf4c
   14000c3f1:	mov    rdx,rbx
   14000c3f4:	mov    rcx,rdi
   14000c3f7:	call   QWORD PTR [rip+0x9ffb]        # 0x1400163f8
   14000c3fd:	mov    ebx,eax
   14000c3ff:	test   eax,eax
   14000c401:	jne    0x14000c44e
   14000c403:	call   QWORD PTR [rip+0x9e7f]        # 0x140016288
   14000c409:	movzx  r8d,ax
   14000c40d:	or     r8d,0x80070000
   14000c414:	test   eax,eax
   14000c416:	cmovle r8d,eax
   14000c41a:	mov    DWORD PTR [rsp+0x50],r8d
   14000c41f:	mov    rcx,QWORD PTR [rip+0x11bfa]        # 0x14001e020
   14000c426:	lea    rax,[rip+0x11bf3]        # 0x14001e020
   14000c42d:	cmp    rcx,rax
   14000c430:	je     0x14000c453
   14000c432:	test   BYTE PTR [rcx+0x1c],0x4
   14000c436:	je     0x14000c453
   14000c438:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c43c:	lea    edx,[rbx+0x1b]
   14000c43f:	mov    r9d,r8d
   14000c442:	lea    r8,[rip+0xbf6f]        # 0x1400183b8
   14000c449:	call   0x140001228
   14000c44e:	mov    r8d,DWORD PTR [rsp+0x50]
   14000c453:	test   rsi,rsi
   14000c456:	je     0x14000c45b
   14000c458:	mov    DWORD PTR [rsi],r8d
   14000c45b:	lea    rcx,[rsp+0x20]
   14000c460:	call   0x14000bf98
   14000c465:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c46a:	mov    eax,ebx
   14000c46c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c471:	add    rsp,0x30
   14000c475:	pop    rdi
   14000c476:	ret    
   14000c477:	int3   
   14000c478:	int3   
   14000c479:	int3   
   14000c47a:	int3   
   14000c47b:	int3   
   14000c47c:	int3   
   14000c47d:	int3   
   14000c47e:	int3   
   14000c47f:	int3   
   14000c480:	mov    rax,rsp
   14000c483:	mov    QWORD PTR [rax+0x8],rbx
   14000c487:	mov    QWORD PTR [rax+0x10],rsi
   14000c48b:	push   rdi
   14000c48c:	sub    rsp,0x30
   14000c490:	and    DWORD PTR [rax+0x18],0x0
   14000c494:	mov    rsi,r8
   14000c497:	mov    ebx,edx
   14000c499:	lea    r8,[rax+0x18]
   14000c49d:	mov    rdi,rcx
   14000c4a0:	lea    rdx,[rip+0xbbe9]        # 0x140018090
   14000c4a7:	lea    rcx,[rax-0x18]
   14000c4ab:	call   0x14000bf4c
   14000c4b0:	mov    edx,ebx
   14000c4b2:	mov    rcx,rdi
   14000c4b5:	call   QWORD PTR [rip+0x9c5d]        # 0x140016118
   14000c4bb:	mov    ebx,eax
   14000c4bd:	cmp    eax,0xffffffff
   14000c4c0:	jne    0x14000c50f
   14000c4c2:	call   QWORD PTR [rip+0x9dc0]        # 0x140016288
   14000c4c8:	movzx  r8d,ax
   14000c4cc:	or     r8d,0x80070000
   14000c4d3:	test   eax,eax
   14000c4d5:	cmovle r8d,eax
   14000c4d9:	mov    DWORD PTR [rsp+0x50],r8d
   14000c4de:	mov    rcx,QWORD PTR [rip+0x11b3b]        # 0x14001e020
   14000c4e5:	lea    rax,[rip+0x11b34]        # 0x14001e020
   14000c4ec:	cmp    rcx,rax
   14000c4ef:	je     0x14000c514
   14000c4f1:	test   BYTE PTR [rcx+0x1c],0x4
   14000c4f5:	je     0x14000c514
   14000c4f7:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c4fb:	mov    r9d,r8d
   14000c4fe:	lea    r8,[rip+0xbeb3]        # 0x1400183b8
   14000c505:	mov    edx,0x1f
   14000c50a:	call   0x140001228
   14000c50f:	mov    r8d,DWORD PTR [rsp+0x50]
   14000c514:	test   rsi,rsi
   14000c517:	je     0x14000c51c
   14000c519:	mov    DWORD PTR [rsi],r8d
   14000c51c:	lea    rcx,[rsp+0x20]
   14000c521:	call   0x14000bf98
   14000c526:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c52b:	mov    eax,ebx
   14000c52d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c532:	add    rsp,0x30
   14000c536:	pop    rdi
   14000c537:	ret    
   14000c538:	int3   
   14000c539:	int3   
   14000c53a:	int3   
   14000c53b:	int3   
   14000c53c:	int3   
   14000c53d:	int3   
   14000c53e:	int3   
   14000c53f:	int3   
   14000c540:	mov    rax,rsp
   14000c543:	mov    QWORD PTR [rax+0x8],rbx
   14000c547:	mov    QWORD PTR [rax+0x10],rsi
   14000c54b:	push   rdi
   14000c54c:	sub    rsp,0x30
   14000c550:	and    DWORD PTR [rax+0x18],0x0
   14000c554:	mov    rsi,r8
   14000c557:	mov    ebx,edx
   14000c559:	lea    r8,[rax+0x18]
   14000c55d:	mov    rdi,rcx
   14000c560:	lea    rdx,[rip+0xbb41]        # 0x1400180a8
   14000c567:	lea    rcx,[rax-0x18]
   14000c56b:	call   0x14000bf4c
   14000c570:	mov    edx,ebx
   14000c572:	mov    rcx,rdi
   14000c575:	call   QWORD PTR [rip+0x9b25]        # 0x1400160a0
   14000c57b:	mov    ebx,eax
   14000c57d:	cmp    eax,0xffffffff
   14000c580:	jne    0x14000c5cf
   14000c582:	call   QWORD PTR [rip+0x9d00]        # 0x140016288
   14000c588:	movzx  r8d,ax
   14000c58c:	or     r8d,0x80070000
   14000c593:	test   eax,eax
   14000c595:	cmovle r8d,eax
   14000c599:	mov    DWORD PTR [rsp+0x50],r8d
   14000c59e:	mov    rcx,QWORD PTR [rip+0x11a7b]        # 0x14001e020
   14000c5a5:	lea    rax,[rip+0x11a74]        # 0x14001e020
   14000c5ac:	cmp    rcx,rax
   14000c5af:	je     0x14000c5d4
   14000c5b1:	test   BYTE PTR [rcx+0x1c],0x4
   14000c5b5:	je     0x14000c5d4
   14000c5b7:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c5bb:	mov    r9d,r8d
   14000c5be:	lea    r8,[rip+0xbdf3]        # 0x1400183b8
   14000c5c5:	mov    edx,0x20
   14000c5ca:	call   0x140001228
   14000c5cf:	mov    r8d,DWORD PTR [rsp+0x50]
   14000c5d4:	test   rsi,rsi
   14000c5d7:	je     0x14000c5dc
   14000c5d9:	mov    DWORD PTR [rsi],r8d
   14000c5dc:	lea    rcx,[rsp+0x20]
   14000c5e1:	call   0x14000bf98
   14000c5e6:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c5eb:	mov    eax,ebx
   14000c5ed:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c5f2:	add    rsp,0x30
   14000c5f6:	pop    rdi
   14000c5f7:	ret    
   14000c5f8:	int3   
   14000c5f9:	int3   
   14000c5fa:	int3   
   14000c5fb:	int3   
   14000c5fc:	int3   
   14000c5fd:	int3   
   14000c5fe:	int3   
   14000c5ff:	int3   
   14000c600:	mov    rax,rsp
   14000c603:	mov    QWORD PTR [rax+0x8],rbx
   14000c607:	mov    QWORD PTR [rax+0x18],r8
   14000c60b:	push   rdi
   14000c60c:	sub    rsp,0x30
   14000c610:	and    DWORD PTR [rax+0x18],0x0
   14000c614:	lea    r8,[rax+0x18]
   14000c618:	mov    ebx,edx
   14000c61a:	mov    rdi,rcx
   14000c61d:	lea    rdx,[rip+0xba9c]        # 0x1400180c0
   14000c624:	lea    rcx,[rax-0x18]
   14000c628:	call   0x14000bf4c
   14000c62d:	mov    edx,ebx
   14000c62f:	mov    rcx,rdi
   14000c632:	call   QWORD PTR [rip+0x9a60]        # 0x140016098
   14000c638:	mov    ebx,eax
   14000c63a:	test   eax,eax
   14000c63c:	jne    0x14000c686
   14000c63e:	call   QWORD PTR [rip+0x9c44]        # 0x140016288
   14000c644:	movzx  r9d,ax
   14000c648:	or     r9d,0x80070000
   14000c64f:	test   eax,eax
   14000c651:	cmovle r9d,eax
   14000c655:	mov    DWORD PTR [rsp+0x50],r9d
   14000c65a:	mov    rcx,QWORD PTR [rip+0x119bf]        # 0x14001e020
   14000c661:	lea    rax,[rip+0x119b8]        # 0x14001e020
   14000c668:	cmp    rcx,rax
   14000c66b:	je     0x14000c686
   14000c66d:	test   BYTE PTR [rcx+0x1c],0x4
   14000c671:	je     0x14000c686
   14000c673:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c677:	lea    edx,[rbx+0x21]
   14000c67a:	lea    r8,[rip+0xbd37]        # 0x1400183b8
   14000c681:	call   0x140001228
   14000c686:	lea    rcx,[rsp+0x20]
   14000c68b:	call   0x14000bf98
   14000c690:	mov    eax,ebx
   14000c692:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c697:	add    rsp,0x30
   14000c69b:	pop    rdi
   14000c69c:	ret    
   14000c69d:	int3   
   14000c69e:	int3   
   14000c69f:	int3   
   14000c6a0:	int3   
   14000c6a1:	int3   
   14000c6a2:	int3   
   14000c6a3:	int3   
   14000c6a4:	mov    rax,rsp
   14000c6a7:	mov    QWORD PTR [rax+0x8],rbx
   14000c6ab:	mov    QWORD PTR [rax+0x10],rsi
   14000c6af:	push   rdi
   14000c6b0:	sub    rsp,0x30
   14000c6b4:	and    DWORD PTR [rax+0x18],0x0
   14000c6b8:	mov    rsi,r8
   14000c6bb:	mov    rbx,rdx
   14000c6be:	lea    r8,[rax+0x18]
   14000c6c2:	mov    rdi,rcx
   14000c6c5:	lea    rdx,[rip+0xba0c]        # 0x1400180d8
   14000c6cc:	lea    rcx,[rax-0x18]
   14000c6d0:	call   0x14000bf4c
   14000c6d5:	mov    rdx,rbx
   14000c6d8:	mov    rcx,rdi
   14000c6db:	call   QWORD PTR [rip+0x9d47]        # 0x140016428
   14000c6e1:	mov    ebx,eax
   14000c6e3:	test   eax,eax
   14000c6e5:	jne    0x14000c732
   14000c6e7:	call   QWORD PTR [rip+0x9b9b]        # 0x140016288
   14000c6ed:	movzx  r8d,ax
   14000c6f1:	or     r8d,0x80070000
   14000c6f8:	test   eax,eax
   14000c6fa:	cmovle r8d,eax
   14000c6fe:	mov    DWORD PTR [rsp+0x50],r8d
   14000c703:	mov    rcx,QWORD PTR [rip+0x11916]        # 0x14001e020
   14000c70a:	lea    rax,[rip+0x1190f]        # 0x14001e020
   14000c711:	cmp    rcx,rax
   14000c714:	je     0x14000c737
   14000c716:	test   BYTE PTR [rcx+0x1c],0x4
   14000c71a:	je     0x14000c737
   14000c71c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c720:	lea    edx,[rbx+0x22]
   14000c723:	mov    r9d,r8d
   14000c726:	lea    r8,[rip+0xbc8b]        # 0x1400183b8
   14000c72d:	call   0x140001228
   14000c732:	mov    r8d,DWORD PTR [rsp+0x50]
   14000c737:	test   rsi,rsi
   14000c73a:	je     0x14000c73f
   14000c73c:	mov    DWORD PTR [rsi],r8d
   14000c73f:	lea    rcx,[rsp+0x20]
   14000c744:	call   0x14000bf98
   14000c749:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c74e:	mov    eax,ebx
   14000c750:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c755:	add    rsp,0x30
   14000c759:	pop    rdi
   14000c75a:	ret    
   14000c75b:	int3   
   14000c75c:	int3   
   14000c75d:	int3   
   14000c75e:	int3   
   14000c75f:	int3   
   14000c760:	int3   
   14000c761:	int3   
   14000c762:	int3   
   14000c763:	int3   
   14000c764:	mov    rax,rsp
   14000c767:	mov    QWORD PTR [rax+0x8],rbx
   14000c76b:	mov    QWORD PTR [rax+0x18],rsi
   14000c76f:	mov    DWORD PTR [rax+0x10],edx
   14000c772:	push   rdi
   14000c773:	sub    rsp,0x30
   14000c777:	and    DWORD PTR [rax+0x10],0x0
   14000c77b:	lea    rdx,[rip+0xb96e]        # 0x1400180f0
   14000c782:	mov    rbx,r8
   14000c785:	mov    rdi,rcx
   14000c788:	lea    r8,[rax+0x10]
   14000c78c:	mov    rsi,r9
   14000c78f:	lea    rcx,[rax-0x18]
   14000c793:	call   0x14000bf4c
   14000c798:	mov    r8,rbx
   14000c79b:	mov    edx,0xfffffff2
   14000c7a0:	mov    rcx,rdi
   14000c7a3:	call   QWORD PTR [rip+0x9c8f]        # 0x140016438
   14000c7a9:	mov    rbx,rax
   14000c7ac:	test   rax,rax
   14000c7af:	jne    0x14000c7fc
   14000c7b1:	call   QWORD PTR [rip+0x9ad1]        # 0x140016288
   14000c7b7:	movzx  r8d,ax
   14000c7bb:	or     r8d,0x80070000
   14000c7c2:	test   eax,eax
   14000c7c4:	cmovle r8d,eax
   14000c7c8:	mov    DWORD PTR [rsp+0x48],r8d
   14000c7cd:	mov    rcx,QWORD PTR [rip+0x1184c]        # 0x14001e020
   14000c7d4:	lea    rax,[rip+0x11845]        # 0x14001e020
   14000c7db:	cmp    rcx,rax
   14000c7de:	je     0x14000c801
   14000c7e0:	test   BYTE PTR [rcx+0x1c],0x4
   14000c7e4:	je     0x14000c801
   14000c7e6:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c7ea:	lea    edx,[rbx+0x23]
   14000c7ed:	mov    r9d,r8d
   14000c7f0:	lea    r8,[rip+0xbbc1]        # 0x1400183b8
   14000c7f7:	call   0x140001228
   14000c7fc:	mov    r8d,DWORD PTR [rsp+0x48]
   14000c801:	test   rsi,rsi
   14000c804:	je     0x14000c809
   14000c806:	mov    DWORD PTR [rsi],r8d
   14000c809:	lea    rcx,[rsp+0x20]
   14000c80e:	call   0x14000bf98
   14000c813:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c818:	mov    rax,rbx
   14000c81b:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c820:	add    rsp,0x30
   14000c824:	pop    rdi
   14000c825:	ret    
   14000c826:	int3   
   14000c827:	int3   
   14000c828:	int3   
   14000c829:	int3   
   14000c82a:	int3   
   14000c82b:	int3   
   14000c82c:	mov    rax,rsp
   14000c82f:	mov    QWORD PTR [rax+0x8],rbx
   14000c833:	mov    DWORD PTR [rax+0x10],edx
   14000c836:	push   rdi
   14000c837:	sub    rsp,0x30
   14000c83b:	and    DWORD PTR [rax+0x10],0x0
   14000c83f:	lea    rdx,[rip+0xb8ca]        # 0x140018110
   14000c846:	mov    rdi,r8
   14000c849:	mov    rbx,rcx
   14000c84c:	lea    r8,[rax+0x10]
   14000c850:	lea    rcx,[rax-0x18]
   14000c854:	call   0x14000bf4c
   14000c859:	mov    edx,0xffffffeb
   14000c85e:	mov    rcx,rbx
   14000c861:	call   QWORD PTR [rip+0x9b71]        # 0x1400163d8
   14000c867:	mov    rbx,rax
   14000c86a:	test   rax,rax
   14000c86d:	jne    0x14000c8ba
   14000c86f:	call   QWORD PTR [rip+0x9a13]        # 0x140016288
   14000c875:	movzx  r8d,ax
   14000c879:	or     r8d,0x80070000
   14000c880:	test   eax,eax
   14000c882:	cmovle r8d,eax
   14000c886:	mov    DWORD PTR [rsp+0x48],r8d
   14000c88b:	mov    rcx,QWORD PTR [rip+0x1178e]        # 0x14001e020
   14000c892:	lea    rax,[rip+0x11787]        # 0x14001e020
   14000c899:	cmp    rcx,rax
   14000c89c:	je     0x14000c8bf
   14000c89e:	test   BYTE PTR [rcx+0x1c],0x4
   14000c8a2:	je     0x14000c8bf
   14000c8a4:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c8a8:	lea    edx,[rbx+0x25]
   14000c8ab:	mov    r9d,r8d
   14000c8ae:	lea    r8,[rip+0xbb03]        # 0x1400183b8
   14000c8b5:	call   0x140001228
   14000c8ba:	mov    r8d,DWORD PTR [rsp+0x48]
   14000c8bf:	test   rdi,rdi
   14000c8c2:	je     0x14000c8c7
   14000c8c4:	mov    DWORD PTR [rdi],r8d
   14000c8c7:	lea    rcx,[rsp+0x20]
   14000c8cc:	call   0x14000bf98
   14000c8d1:	mov    rax,rbx
   14000c8d4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c8d9:	add    rsp,0x30
   14000c8dd:	pop    rdi
   14000c8de:	ret    
   14000c8df:	int3   
   14000c8e0:	int3   
   14000c8e1:	int3   
   14000c8e2:	int3   
   14000c8e3:	int3   
   14000c8e4:	int3   
   14000c8e5:	int3   
   14000c8e6:	int3   
   14000c8e7:	int3   
   14000c8e8:	mov    rax,rsp
   14000c8eb:	mov    QWORD PTR [rax+0x8],rbx
   14000c8ef:	mov    QWORD PTR [rax+0x10],rsi
   14000c8f3:	push   rdi
   14000c8f4:	sub    rsp,0x30
   14000c8f8:	and    DWORD PTR [rax+0x18],0x0
   14000c8fc:	mov    rsi,r8
   14000c8ff:	mov    rbx,rdx
   14000c902:	lea    r8,[rax+0x18]
   14000c906:	mov    rdi,rcx
   14000c909:	lea    rdx,[rip+0xb820]        # 0x140018130
   14000c910:	lea    rcx,[rax-0x18]
   14000c914:	call   0x14000bf4c
   14000c919:	mov    rdx,rbx
   14000c91c:	mov    rcx,rdi
   14000c91f:	call   QWORD PTR [rip+0x9adb]        # 0x140016400
   14000c925:	mov    ebx,eax
   14000c927:	test   eax,eax
   14000c929:	jne    0x14000c976
   14000c92b:	call   QWORD PTR [rip+0x9957]        # 0x140016288
   14000c931:	movzx  r8d,ax
   14000c935:	or     r8d,0x80070000
   14000c93c:	test   eax,eax
   14000c93e:	cmovle r8d,eax
   14000c942:	mov    DWORD PTR [rsp+0x50],r8d
   14000c947:	mov    rcx,QWORD PTR [rip+0x116d2]        # 0x14001e020
   14000c94e:	lea    rax,[rip+0x116cb]        # 0x14001e020
   14000c955:	cmp    rcx,rax
   14000c958:	je     0x14000c97b
   14000c95a:	test   BYTE PTR [rcx+0x1c],0x4
   14000c95e:	je     0x14000c97b
   14000c960:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c964:	lea    edx,[rbx+0x26]
   14000c967:	mov    r9d,r8d
   14000c96a:	lea    r8,[rip+0xba47]        # 0x1400183b8
   14000c971:	call   0x140001228
   14000c976:	mov    r8d,DWORD PTR [rsp+0x50]
   14000c97b:	test   rsi,rsi
   14000c97e:	je     0x14000c983
   14000c980:	mov    DWORD PTR [rsi],r8d
   14000c983:	lea    rcx,[rsp+0x20]
   14000c988:	call   0x14000bf98
   14000c98d:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c992:	mov    eax,ebx
   14000c994:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c999:	add    rsp,0x30
   14000c99d:	pop    rdi
   14000c99e:	ret    
   14000c99f:	int3   
   14000c9a0:	int3   
   14000c9a1:	int3   
   14000c9a2:	int3   
   14000c9a3:	int3   
   14000c9a4:	int3   
   14000c9a5:	int3   
   14000c9a6:	int3   
   14000c9a7:	int3   
   14000c9a8:	mov    rax,rsp
   14000c9ab:	mov    QWORD PTR [rax+0x8],rbx
   14000c9af:	mov    QWORD PTR [rax+0x18],r8
   14000c9b3:	push   rdi
   14000c9b4:	sub    rsp,0x30
   14000c9b8:	and    DWORD PTR [rax+0x18],0x0
   14000c9bc:	lea    r8,[rax+0x18]
   14000c9c0:	mov    rbx,rdx
   14000c9c3:	mov    rdi,rcx
   14000c9c6:	lea    rdx,[rip+0xb77b]        # 0x140018148
   14000c9cd:	lea    rcx,[rax-0x18]
   14000c9d1:	call   0x14000bf4c
   14000c9d6:	mov    rdx,rbx
   14000c9d9:	mov    rcx,rdi
   14000c9dc:	call   QWORD PTR [rip+0x9a3e]        # 0x140016420
   14000c9e2:	mov    ebx,eax
   14000c9e4:	test   eax,eax
   14000c9e6:	jne    0x14000ca30
   14000c9e8:	call   QWORD PTR [rip+0x989a]        # 0x140016288
   14000c9ee:	movzx  r9d,ax
   14000c9f2:	or     r9d,0x80070000
   14000c9f9:	test   eax,eax
   14000c9fb:	cmovle r9d,eax
   14000c9ff:	mov    DWORD PTR [rsp+0x50],r9d
   14000ca04:	mov    rcx,QWORD PTR [rip+0x11615]        # 0x14001e020
   14000ca0b:	lea    rax,[rip+0x1160e]        # 0x14001e020
   14000ca12:	cmp    rcx,rax
   14000ca15:	je     0x14000ca30
   14000ca17:	test   BYTE PTR [rcx+0x1c],0x4
   14000ca1b:	je     0x14000ca30
   14000ca1d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ca21:	lea    edx,[rbx+0x2b]
   14000ca24:	lea    r8,[rip+0xb98d]        # 0x1400183b8
   14000ca2b:	call   0x140001228
   14000ca30:	lea    rcx,[rsp+0x20]
   14000ca35:	call   0x14000bf98
   14000ca3a:	mov    eax,ebx
   14000ca3c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ca41:	add    rsp,0x30
   14000ca45:	pop    rdi
   14000ca46:	ret    
   14000ca47:	int3   
   14000ca48:	int3   
   14000ca49:	int3   
   14000ca4a:	int3   
   14000ca4b:	int3   
   14000ca4c:	int3   
   14000ca4d:	int3   
   14000ca4e:	int3   
   14000ca4f:	int3   
   14000ca50:	mov    rax,rsp
   14000ca53:	mov    QWORD PTR [rax+0x8],rbx
   14000ca57:	mov    QWORD PTR [rax+0x10],rsi
   14000ca5b:	mov    QWORD PTR [rax+0x20],r9
   14000ca5f:	push   rdi
   14000ca60:	sub    rsp,0x30
   14000ca64:	and    DWORD PTR [rax+0x20],0x0
   14000ca68:	mov    ebx,r8d
   14000ca6b:	mov    rdi,rdx
   14000ca6e:	lea    r8,[rax+0x20]
   14000ca72:	mov    rsi,rcx
   14000ca75:	lea    rdx,[rip+0xb6e4]        # 0x140018160
   14000ca7c:	lea    rcx,[rax-0x18]
   14000ca80:	call   0x14000bf4c
   14000ca85:	xor    r9d,r9d
   14000ca88:	mov    r8d,ebx
   14000ca8b:	mov    rdx,rdi
   14000ca8e:	mov    rcx,rsi
   14000ca91:	call   QWORD PTR [rip+0x9959]        # 0x1400163f0
   14000ca97:	mov    rbx,rax
   14000ca9a:	test   rax,rax
   14000ca9d:	jne    0x14000caea
   14000ca9f:	call   QWORD PTR [rip+0x97e3]        # 0x140016288
   14000caa5:	movzx  r8d,ax
   14000caa9:	or     r8d,0x80070000
   14000cab0:	test   eax,eax
   14000cab2:	cmovle r8d,eax
   14000cab6:	mov    DWORD PTR [rsp+0x58],r8d
   14000cabb:	mov    rcx,QWORD PTR [rip+0x1155e]        # 0x14001e020
   14000cac2:	lea    rax,[rip+0x11557]        # 0x14001e020
   14000cac9:	cmp    rcx,rax
   14000cacc:	je     0x14000caef
   14000cace:	test   BYTE PTR [rcx+0x1c],0x4
   14000cad2:	je     0x14000caef
   14000cad4:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cad8:	lea    edx,[rbx+0x2c]
   14000cadb:	mov    r9d,r8d
   14000cade:	lea    r8,[rip+0xb8d3]        # 0x1400183b8
   14000cae5:	call   0x140001228
   14000caea:	mov    r8d,DWORD PTR [rsp+0x58]
   14000caef:	mov    rax,QWORD PTR [rsp+0x60]
   14000caf4:	test   rax,rax
   14000caf7:	je     0x14000cafc
   14000caf9:	mov    DWORD PTR [rax],r8d
   14000cafc:	lea    rcx,[rsp+0x20]
   14000cb01:	call   0x14000bf98
   14000cb06:	mov    rsi,QWORD PTR [rsp+0x48]
   14000cb0b:	mov    rax,rbx
   14000cb0e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cb13:	add    rsp,0x30
   14000cb17:	pop    rdi
   14000cb18:	ret    
   14000cb19:	int3   
   14000cb1a:	int3   
   14000cb1b:	int3   
   14000cb1c:	int3   
   14000cb1d:	int3   
   14000cb1e:	int3   
   14000cb1f:	int3   
   14000cb20:	mov    rax,rsp
   14000cb23:	mov    QWORD PTR [rax+0x8],rbx
   14000cb27:	mov    QWORD PTR [rax+0x10],rsi
   14000cb2b:	mov    QWORD PTR [rax+0x18],rdi
   14000cb2f:	push   r14
   14000cb31:	sub    rsp,0x30
   14000cb35:	and    DWORD PTR [rax+0x20],0x0
   14000cb39:	mov    ebx,r8d
   14000cb3c:	mov    edi,edx
   14000cb3e:	lea    r8,[rax+0x20]
   14000cb42:	mov    esi,ecx
   14000cb44:	lea    rdx,[rip+0xb62d]        # 0x140018178
   14000cb4b:	lea    rcx,[rax-0x18]
   14000cb4f:	mov    r14,r9
   14000cb52:	call   0x14000bf4c
   14000cb57:	mov    r8d,ebx
   14000cb5a:	mov    edx,edi
   14000cb5c:	mov    ecx,esi
   14000cb5e:	call   QWORD PTR [rip+0x952c]        # 0x140016090
   14000cb64:	mov    rbx,rax
   14000cb67:	test   rax,rax
   14000cb6a:	jne    0x14000cbb7
   14000cb6c:	call   QWORD PTR [rip+0x9716]        # 0x140016288
   14000cb72:	movzx  r8d,ax
   14000cb76:	or     r8d,0x80070000
   14000cb7d:	test   eax,eax
   14000cb7f:	cmovle r8d,eax
   14000cb83:	mov    DWORD PTR [rsp+0x58],r8d
   14000cb88:	mov    rcx,QWORD PTR [rip+0x11491]        # 0x14001e020
   14000cb8f:	lea    rax,[rip+0x1148a]        # 0x14001e020
   14000cb96:	cmp    rcx,rax
   14000cb99:	je     0x14000cbbc
   14000cb9b:	test   BYTE PTR [rcx+0x1c],0x4
   14000cb9f:	je     0x14000cbbc
   14000cba1:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cba5:	lea    edx,[rbx+0x2d]
   14000cba8:	mov    r9d,r8d
   14000cbab:	lea    r8,[rip+0xb806]        # 0x1400183b8
   14000cbb2:	call   0x140001228
   14000cbb7:	mov    r8d,DWORD PTR [rsp+0x58]
   14000cbbc:	test   r14,r14
   14000cbbf:	je     0x14000cbc4
   14000cbc1:	mov    DWORD PTR [r14],r8d
   14000cbc4:	lea    rcx,[rsp+0x20]
   14000cbc9:	call   0x14000bf98
   14000cbce:	mov    rsi,QWORD PTR [rsp+0x48]
   14000cbd3:	mov    rax,rbx
   14000cbd6:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cbdb:	mov    rdi,QWORD PTR [rsp+0x50]
   14000cbe0:	add    rsp,0x30
   14000cbe4:	pop    r14
   14000cbe6:	ret    
   14000cbe7:	int3   
   14000cbe8:	int3   
   14000cbe9:	int3   
   14000cbea:	int3   
   14000cbeb:	int3   
   14000cbec:	int3   
   14000cbed:	int3   
   14000cbee:	int3   
   14000cbef:	int3   
   14000cbf0:	mov    rax,rsp
   14000cbf3:	mov    QWORD PTR [rax+0x8],rbx
   14000cbf7:	push   rdi
   14000cbf8:	sub    rsp,0x30
   14000cbfc:	and    DWORD PTR [rax+0x10],0x0
   14000cc00:	lea    r8,[rax+0x10]
   14000cc04:	mov    rdi,rdx
   14000cc07:	mov    ebx,ecx
   14000cc09:	lea    rdx,[rip+0xb580]        # 0x140018190
   14000cc10:	lea    rcx,[rax-0x18]
   14000cc14:	call   0x14000bf4c
   14000cc19:	mov    ecx,ebx
   14000cc1b:	call   QWORD PTR [rip+0x951f]        # 0x140016140
   14000cc21:	mov    rbx,rax
   14000cc24:	test   rax,rax
   14000cc27:	jne    0x14000cc74
   14000cc29:	call   QWORD PTR [rip+0x9659]        # 0x140016288
   14000cc2f:	movzx  r8d,ax
   14000cc33:	or     r8d,0x80070000
   14000cc3a:	test   eax,eax
   14000cc3c:	cmovle r8d,eax
   14000cc40:	mov    DWORD PTR [rsp+0x48],r8d
   14000cc45:	mov    rcx,QWORD PTR [rip+0x113d4]        # 0x14001e020
   14000cc4c:	lea    rax,[rip+0x113cd]        # 0x14001e020
   14000cc53:	cmp    rcx,rax
   14000cc56:	je     0x14000cc79
   14000cc58:	test   BYTE PTR [rcx+0x1c],0x4
   14000cc5c:	je     0x14000cc79
   14000cc5e:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cc62:	lea    edx,[rbx+0x2e]
   14000cc65:	mov    r9d,r8d
   14000cc68:	lea    r8,[rip+0xb749]        # 0x1400183b8
   14000cc6f:	call   0x140001228
   14000cc74:	mov    r8d,DWORD PTR [rsp+0x48]
   14000cc79:	test   rdi,rdi
   14000cc7c:	je     0x14000cc81
   14000cc7e:	mov    DWORD PTR [rdi],r8d
   14000cc81:	lea    rcx,[rsp+0x20]
   14000cc86:	call   0x14000bf98
   14000cc8b:	mov    rax,rbx
   14000cc8e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cc93:	add    rsp,0x30
   14000cc97:	pop    rdi
   14000cc98:	ret    
   14000cc99:	int3   
   14000cc9a:	int3   
   14000cc9b:	int3   
   14000cc9c:	int3   
   14000cc9d:	int3   
   14000cc9e:	int3   
   14000cc9f:	int3   
   14000cca0:	mov    rax,rsp
   14000cca3:	mov    QWORD PTR [rax+0x8],rbx
   14000cca7:	mov    QWORD PTR [rax+0x10],rsi
   14000ccab:	mov    QWORD PTR [rax+0x18],rdi
   14000ccaf:	push   r14
   14000ccb1:	sub    rsp,0x30
   14000ccb5:	and    DWORD PTR [rax+0x20],0x0
   14000ccb9:	mov    rbx,r8
   14000ccbc:	mov    rdi,rdx
   14000ccbf:	lea    r8,[rax+0x20]
   14000ccc3:	mov    rsi,rcx
   14000ccc6:	lea    rdx,[rip+0xb4e3]        # 0x1400181b0
   14000cccd:	lea    rcx,[rax-0x18]
   14000ccd1:	mov    r14,r9
   14000ccd4:	call   0x14000bf4c
   14000ccd9:	mov    r8,rbx
   14000ccdc:	mov    rdx,rdi
   14000ccdf:	mov    rcx,rsi
   14000cce2:	call   QWORD PTR [rip+0x9720]        # 0x140016408
   14000cce8:	mov    ebx,eax
   14000ccea:	test   eax,eax
   14000ccec:	jne    0x14000cd39
   14000ccee:	call   QWORD PTR [rip+0x9594]        # 0x140016288
   14000ccf4:	movzx  r8d,ax
   14000ccf8:	or     r8d,0x80070000
   14000ccff:	test   eax,eax
   14000cd01:	cmovle r8d,eax
   14000cd05:	mov    DWORD PTR [rsp+0x58],r8d
   14000cd0a:	mov    rcx,QWORD PTR [rip+0x1130f]        # 0x14001e020
   14000cd11:	lea    rax,[rip+0x11308]        # 0x14001e020
   14000cd18:	cmp    rcx,rax
   14000cd1b:	je     0x14000cd3e
   14000cd1d:	test   BYTE PTR [rcx+0x1c],0x4
   14000cd21:	je     0x14000cd3e
   14000cd23:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cd27:	lea    edx,[rbx+0x2f]
   14000cd2a:	mov    r9d,r8d
   14000cd2d:	lea    r8,[rip+0xb684]        # 0x1400183b8
   14000cd34:	call   0x140001228
   14000cd39:	mov    r8d,DWORD PTR [rsp+0x58]
   14000cd3e:	test   r14,r14
   14000cd41:	je     0x14000cd46
   14000cd43:	mov    DWORD PTR [r14],r8d
   14000cd46:	lea    rcx,[rsp+0x20]
   14000cd4b:	call   0x14000bf98
   14000cd50:	mov    rsi,QWORD PTR [rsp+0x48]
   14000cd55:	mov    eax,ebx
   14000cd57:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cd5c:	mov    rdi,QWORD PTR [rsp+0x50]
   14000cd61:	add    rsp,0x30
   14000cd65:	pop    r14
   14000cd67:	ret    
   14000cd68:	int3   
   14000cd69:	int3   
   14000cd6a:	int3   
   14000cd6b:	int3   
   14000cd6c:	int3   
   14000cd6d:	int3   
   14000cd6e:	int3   
   14000cd6f:	int3   
   14000cd70:	mov    rax,rsp
   14000cd73:	mov    QWORD PTR [rax+0x8],rbx
   14000cd77:	mov    DWORD PTR [rax+0x20],r9d
   14000cd7b:	push   rdi
   14000cd7c:	sub    rsp,0x40
   14000cd80:	and    DWORD PTR [rax+0x20],0x0
   14000cd84:	lea    r8,[rax+0x20]
   14000cd88:	mov    rbx,rdx
   14000cd8b:	mov    rdi,rcx
   14000cd8e:	lea    rdx,[rip+0xb44b]        # 0x1400181e0
   14000cd95:	lea    rcx,[rax-0x18]
   14000cd99:	call   0x14000bf4c
   14000cd9e:	xor    r9d,r9d
   14000cda1:	mov    DWORD PTR [rsp+0x28],0x2000
   14000cda9:	and    DWORD PTR [rsp+0x20],0x0
   14000cdae:	xor    r8d,r8d
   14000cdb1:	mov    rdx,rbx
   14000cdb4:	mov    rcx,rdi
   14000cdb7:	call   QWORD PTR [rip+0x9653]        # 0x140016410
   14000cdbd:	mov    rbx,rax
   14000cdc0:	test   rax,rax
   14000cdc3:	jne    0x14000ce10
   14000cdc5:	call   QWORD PTR [rip+0x94bd]        # 0x140016288
   14000cdcb:	movzx  r8d,ax
   14000cdcf:	or     r8d,0x80070000
   14000cdd6:	test   eax,eax
   14000cdd8:	cmovle r8d,eax
   14000cddc:	mov    DWORD PTR [rsp+0x68],r8d
   14000cde1:	mov    rcx,QWORD PTR [rip+0x11238]        # 0x14001e020
   14000cde8:	lea    rax,[rip+0x11231]        # 0x14001e020
   14000cdef:	cmp    rcx,rax
   14000cdf2:	je     0x14000ce15
   14000cdf4:	test   BYTE PTR [rcx+0x1c],0x4
   14000cdf8:	je     0x14000ce15
   14000cdfa:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cdfe:	lea    edx,[rbx+0x32]
   14000ce01:	mov    r9d,r8d
   14000ce04:	lea    r8,[rip+0xb5ad]        # 0x1400183b8
   14000ce0b:	call   0x140001228
   14000ce10:	mov    r8d,DWORD PTR [rsp+0x68]
   14000ce15:	mov    rax,QWORD PTR [rsp+0x80]
   14000ce1d:	test   rax,rax
   14000ce20:	je     0x14000ce25
   14000ce22:	mov    DWORD PTR [rax],r8d
   14000ce25:	lea    rcx,[rsp+0x30]
   14000ce2a:	call   0x14000bf98
   14000ce2f:	mov    rax,rbx
   14000ce32:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ce37:	add    rsp,0x40
   14000ce3b:	pop    rdi
   14000ce3c:	ret    
   14000ce3d:	int3   
   14000ce3e:	int3   
   14000ce3f:	int3   
   14000ce40:	int3   
   14000ce41:	int3   
   14000ce42:	int3   
   14000ce43:	int3   
   14000ce44:	mov    rax,rsp
   14000ce47:	mov    QWORD PTR [rax+0x8],rbx
   14000ce4b:	mov    QWORD PTR [rax+0x10],rbp
   14000ce4f:	mov    QWORD PTR [rax+0x18],rsi
   14000ce53:	push   rdi
   14000ce54:	sub    rsp,0x40
   14000ce58:	and    DWORD PTR [rax-0x28],0x0
   14000ce5c:	mov    rdi,r8
   14000ce5f:	mov    esi,edx
   14000ce61:	lea    r8,[rax-0x28]
   14000ce65:	mov    rbp,rcx
   14000ce68:	lea    rdx,[rip+0xb389]        # 0x1400181f8
   14000ce6f:	lea    rcx,[rax-0x20]
   14000ce73:	mov    ebx,r9d
   14000ce76:	call   0x14000bf4c
   14000ce7b:	mov    r9d,ebx
   14000ce7e:	mov    r8,rdi
   14000ce81:	mov    edx,esi
   14000ce83:	mov    rcx,rbp
   14000ce86:	call   QWORD PTR [rip+0x95f4]        # 0x140016480
   14000ce8c:	mov    ebx,eax
   14000ce8e:	test   eax,eax
   14000ce90:	jne    0x14000cedd
   14000ce92:	call   QWORD PTR [rip+0x93f0]        # 0x140016288
   14000ce98:	movzx  r8d,ax
   14000ce9c:	or     r8d,0x80070000
   14000cea3:	test   eax,eax
   14000cea5:	cmovle r8d,eax
   14000cea9:	mov    DWORD PTR [rsp+0x20],r8d
   14000ceae:	mov    rcx,QWORD PTR [rip+0x1116b]        # 0x14001e020
   14000ceb5:	lea    rax,[rip+0x11164]        # 0x14001e020
   14000cebc:	cmp    rcx,rax
   14000cebf:	je     0x14000cee2
   14000cec1:	test   BYTE PTR [rcx+0x1c],0x4
   14000cec5:	je     0x14000cee2
   14000cec7:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cecb:	lea    edx,[rbx+0x33]
   14000cece:	mov    r9d,r8d
   14000ced1:	lea    r8,[rip+0xb4e0]        # 0x1400183b8
   14000ced8:	call   0x140001228
   14000cedd:	mov    r8d,DWORD PTR [rsp+0x20]
   14000cee2:	mov    rax,QWORD PTR [rsp+0x70]
   14000cee7:	test   rax,rax
   14000ceea:	je     0x14000ceef
   14000ceec:	mov    DWORD PTR [rax],r8d
   14000ceef:	lea    rcx,[rsp+0x28]
   14000cef4:	call   0x14000bf98
   14000cef9:	mov    rbp,QWORD PTR [rsp+0x58]
   14000cefe:	mov    eax,ebx
   14000cf00:	mov    rbx,QWORD PTR [rsp+0x50]
   14000cf05:	mov    rsi,QWORD PTR [rsp+0x60]
   14000cf0a:	add    rsp,0x40
   14000cf0e:	pop    rdi
   14000cf0f:	ret    
   14000cf10:	int3   
   14000cf11:	int3   
   14000cf12:	int3   
   14000cf13:	int3   
   14000cf14:	int3   
   14000cf15:	int3   
   14000cf16:	int3   
   14000cf17:	int3   
   14000cf18:	mov    rax,rsp
   14000cf1b:	mov    QWORD PTR [rax+0x8],rbx
   14000cf1f:	mov    QWORD PTR [rax+0x10],rbp
   14000cf23:	mov    QWORD PTR [rax+0x18],rsi
   14000cf27:	push   rdi
   14000cf28:	sub    rsp,0x30
   14000cf2c:	and    DWORD PTR [rax+0x28],0x0
   14000cf30:	mov    edi,r8d
   14000cf33:	mov    rsi,rdx
   14000cf36:	lea    r8,[rax+0x28]
   14000cf3a:	mov    rbp,rcx
   14000cf3d:	lea    rdx,[rip+0xb2cc]        # 0x140018210
   14000cf44:	lea    rcx,[rax-0x18]
   14000cf48:	mov    rbx,r9
   14000cf4b:	call   0x14000bf4c
   14000cf50:	mov    r9,rbx
   14000cf53:	mov    r8d,edi
   14000cf56:	mov    rdx,rsi
   14000cf59:	mov    rcx,rbp
   14000cf5c:	call   QWORD PTR [rip+0x9156]        # 0x1400160b8
   14000cf62:	mov    ebx,eax
   14000cf64:	test   eax,eax
   14000cf66:	jne    0x14000cfb0
   14000cf68:	call   QWORD PTR [rip+0x931a]        # 0x140016288
   14000cf6e:	movzx  r9d,ax
   14000cf72:	or     r9d,0x80070000
   14000cf79:	test   eax,eax
   14000cf7b:	cmovle r9d,eax
   14000cf7f:	mov    DWORD PTR [rsp+0x60],r9d
   14000cf84:	mov    rcx,QWORD PTR [rip+0x11095]        # 0x14001e020
   14000cf8b:	lea    rax,[rip+0x1108e]        # 0x14001e020
   14000cf92:	cmp    rcx,rax
   14000cf95:	je     0x14000cfb0
   14000cf97:	test   BYTE PTR [rcx+0x1c],0x4
   14000cf9b:	je     0x14000cfb0
   14000cf9d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cfa1:	lea    edx,[rbx+0x39]
   14000cfa4:	lea    r8,[rip+0xb40d]        # 0x1400183b8
   14000cfab:	call   0x140001228
   14000cfb0:	lea    rcx,[rsp+0x20]
   14000cfb5:	call   0x14000bf98
   14000cfba:	mov    rbp,QWORD PTR [rsp+0x48]
   14000cfbf:	mov    eax,ebx
   14000cfc1:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cfc6:	mov    rsi,QWORD PTR [rsp+0x50]
   14000cfcb:	add    rsp,0x30
   14000cfcf:	pop    rdi
   14000cfd0:	ret    
   14000cfd1:	int3   
   14000cfd2:	int3   
   14000cfd3:	int3   
   14000cfd4:	int3   
   14000cfd5:	int3   
   14000cfd6:	int3   
   14000cfd7:	int3   
   14000cfd8:	mov    rax,rsp
   14000cfdb:	mov    QWORD PTR [rax+0x8],rbx
   14000cfdf:	mov    QWORD PTR [rax+0x10],rsi
   14000cfe3:	push   rdi
   14000cfe4:	sub    rsp,0x30
   14000cfe8:	and    DWORD PTR [rax+0x18],0x0
   14000cfec:	mov    rsi,r8
   14000cfef:	mov    rbx,rdx
   14000cff2:	lea    r8,[rax+0x18]
   14000cff6:	mov    rdi,rcx
   14000cff9:	lea    rdx,[rip+0xb230]        # 0x140018230
   14000d000:	lea    rcx,[rax-0x18]
   14000d004:	call   0x14000bf4c
   14000d009:	mov    rdx,rbx
   14000d00c:	mov    rcx,rdi
   14000d00f:	call   QWORD PTR [rip+0x909b]        # 0x1400160b0
   14000d015:	mov    ebx,eax
   14000d017:	test   eax,eax
   14000d019:	jne    0x14000d066
   14000d01b:	call   QWORD PTR [rip+0x9267]        # 0x140016288
   14000d021:	movzx  r8d,ax
   14000d025:	or     r8d,0x80070000
   14000d02c:	test   eax,eax
   14000d02e:	cmovle r8d,eax
   14000d032:	mov    DWORD PTR [rsp+0x50],r8d
   14000d037:	mov    rcx,QWORD PTR [rip+0x10fe2]        # 0x14001e020
   14000d03e:	lea    rax,[rip+0x10fdb]        # 0x14001e020
   14000d045:	cmp    rcx,rax
   14000d048:	je     0x14000d06b
   14000d04a:	test   BYTE PTR [rcx+0x1c],0x4
   14000d04e:	je     0x14000d06b
   14000d050:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d054:	lea    edx,[rbx+0x3a]
   14000d057:	mov    r9d,r8d
   14000d05a:	lea    r8,[rip+0xb357]        # 0x1400183b8
   14000d061:	call   0x140001228
   14000d066:	mov    r8d,DWORD PTR [rsp+0x50]
   14000d06b:	test   rsi,rsi
   14000d06e:	je     0x14000d073
   14000d070:	mov    DWORD PTR [rsi],r8d
   14000d073:	lea    rcx,[rsp+0x20]
   14000d078:	call   0x14000bf98
   14000d07d:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d082:	mov    eax,ebx
   14000d084:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d089:	add    rsp,0x30
   14000d08d:	pop    rdi
   14000d08e:	ret    
   14000d08f:	int3   
   14000d090:	int3   
   14000d091:	int3   
   14000d092:	int3   
   14000d093:	int3   
   14000d094:	int3   
   14000d095:	int3   
   14000d096:	int3   
   14000d097:	int3   
   14000d098:	mov    rax,rsp
   14000d09b:	mov    DWORD PTR [rax+0x20],r9d
   14000d09f:	push   rbx
   14000d0a0:	sub    rsp,0x40
   14000d0a4:	and    DWORD PTR [rax+0x20],0x0
   14000d0a8:	lea    r8,[rax+0x20]
   14000d0ac:	mov    rbx,rcx
   14000d0af:	lea    rdx,[rip+0xb19a]        # 0x140018250
   14000d0b6:	lea    rcx,[rax-0x18]
   14000d0ba:	call   0x14000bf4c
   14000d0bf:	mov    rax,QWORD PTR [rsp+0x70]
   14000d0c4:	lea    rdx,[rip+0xb325]        # 0x1400183f0
   14000d0cb:	mov    r9d,0x20019
   14000d0d1:	mov    QWORD PTR [rsp+0x20],rax
   14000d0d6:	xor    r8d,r8d
   14000d0d9:	mov    rcx,rbx
   14000d0dc:	call   QWORD PTR [rip+0x8f66]        # 0x140016048
   14000d0e2:	mov    ebx,eax
   14000d0e4:	test   eax,eax
   14000d0e6:	je     0x14000d12c
   14000d0e8:	movzx  r9d,ax
   14000d0ec:	or     r9d,0x80070000
   14000d0f3:	test   eax,eax
   14000d0f5:	cmovle r9d,eax
   14000d0f9:	mov    DWORD PTR [rsp+0x68],r9d
   14000d0fe:	mov    rcx,QWORD PTR [rip+0x10f1b]        # 0x14001e020
   14000d105:	lea    rax,[rip+0x10f14]        # 0x14001e020
   14000d10c:	cmp    rcx,rax
   14000d10f:	je     0x14000d12c
   14000d111:	test   BYTE PTR [rcx+0x1c],0x4
   14000d115:	je     0x14000d12c
   14000d117:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d11b:	lea    r8,[rip+0xb296]        # 0x1400183b8
   14000d122:	mov    edx,0x3e
   14000d127:	call   0x140001228
   14000d12c:	lea    rcx,[rsp+0x30]
   14000d131:	call   0x14000bf98
   14000d136:	mov    eax,ebx
   14000d138:	add    rsp,0x40
   14000d13c:	pop    rbx
   14000d13d:	ret    
   14000d13e:	int3   
   14000d13f:	int3   
   14000d140:	int3   
   14000d141:	int3   
   14000d142:	int3   
   14000d143:	int3   
   14000d144:	mov    rax,rsp
   14000d147:	mov    QWORD PTR [rax+0x10],rdx
   14000d14b:	push   rbx
   14000d14c:	sub    rsp,0x30
   14000d150:	and    DWORD PTR [rax+0x10],0x0
   14000d154:	lea    r8,[rax+0x10]
   14000d158:	mov    rbx,rcx
   14000d15b:	lea    rdx,[rip+0xb106]        # 0x140018268
   14000d162:	lea    rcx,[rax-0x18]
   14000d166:	call   0x14000bf4c
   14000d16b:	mov    rcx,rbx
   14000d16e:	call   QWORD PTR [rip+0x8ebc]        # 0x140016030
   14000d174:	mov    ebx,eax
   14000d176:	test   eax,eax
   14000d178:	je     0x14000d1be
   14000d17a:	movzx  r9d,ax
   14000d17e:	or     r9d,0x80070000
   14000d185:	test   eax,eax
   14000d187:	cmovle r9d,eax
   14000d18b:	mov    DWORD PTR [rsp+0x48],r9d
   14000d190:	mov    rcx,QWORD PTR [rip+0x10e89]        # 0x14001e020
   14000d197:	lea    rax,[rip+0x10e82]        # 0x14001e020
   14000d19e:	cmp    rcx,rax
   14000d1a1:	je     0x14000d1be
   14000d1a3:	test   BYTE PTR [rcx+0x1c],0x4
   14000d1a7:	je     0x14000d1be
   14000d1a9:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d1ad:	lea    r8,[rip+0xb204]        # 0x1400183b8
   14000d1b4:	mov    edx,0x3f
   14000d1b9:	call   0x140001228
   14000d1be:	lea    rcx,[rsp+0x20]
   14000d1c3:	call   0x14000bf98
   14000d1c8:	mov    eax,ebx
   14000d1ca:	add    rsp,0x30
   14000d1ce:	pop    rbx
   14000d1cf:	ret    
   14000d1d0:	int3   
   14000d1d1:	int3   
   14000d1d2:	int3   
   14000d1d3:	int3   
   14000d1d4:	int3   
   14000d1d5:	int3   
   14000d1d6:	int3   
   14000d1d7:	int3   
   14000d1d8:	mov    rax,rsp
   14000d1db:	mov    QWORD PTR [rax+0x8],rbx
   14000d1df:	mov    QWORD PTR [rax+0x10],rsi
   14000d1e3:	mov    QWORD PTR [rax+0x18],r8
   14000d1e7:	push   rdi
   14000d1e8:	sub    rsp,0x40
   14000d1ec:	and    DWORD PTR [rax+0x18],0x0
   14000d1f0:	lea    r8,[rax+0x18]
   14000d1f4:	mov    rdi,rdx
   14000d1f7:	mov    rsi,rcx
   14000d1fa:	lea    rdx,[rip+0xb07f]        # 0x140018280
   14000d201:	mov    rbx,r9
   14000d204:	lea    rcx,[rax-0x18]
   14000d208:	call   0x14000bf4c
   14000d20d:	mov    rax,QWORD PTR [rsp+0x78]
   14000d212:	mov    r9,rbx
   14000d215:	mov    QWORD PTR [rsp+0x28],rax
   14000d21a:	xor    r8d,r8d
   14000d21d:	mov    rax,QWORD PTR [rsp+0x70]
   14000d222:	mov    rdx,rdi
   14000d225:	mov    rcx,rsi
   14000d228:	mov    QWORD PTR [rsp+0x20],rax
   14000d22d:	call   QWORD PTR [rip+0x8e35]        # 0x140016068
   14000d233:	mov    ebx,eax
   14000d235:	test   eax,eax
   14000d237:	je     0x14000d27d
   14000d239:	movzx  r9d,ax
   14000d23d:	or     r9d,0x80070000
   14000d244:	test   eax,eax
   14000d246:	cmovle r9d,eax
   14000d24a:	mov    DWORD PTR [rsp+0x60],r9d
   14000d24f:	mov    rcx,QWORD PTR [rip+0x10dca]        # 0x14001e020
   14000d256:	lea    rax,[rip+0x10dc3]        # 0x14001e020
   14000d25d:	cmp    rcx,rax
   14000d260:	je     0x14000d27d
   14000d262:	test   BYTE PTR [rcx+0x1c],0x4
   14000d266:	je     0x14000d27d
   14000d268:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d26c:	lea    r8,[rip+0xb145]        # 0x1400183b8
   14000d273:	mov    edx,0x41
   14000d278:	call   0x140001228
   14000d27d:	lea    rcx,[rsp+0x30]
   14000d282:	call   0x14000bf98
   14000d287:	mov    rsi,QWORD PTR [rsp+0x58]
   14000d28c:	mov    eax,ebx
   14000d28e:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d293:	add    rsp,0x40
   14000d297:	pop    rdi
   14000d298:	ret    
   14000d299:	int3   
   14000d29a:	int3   
   14000d29b:	int3   
   14000d29c:	int3   
   14000d29d:	int3   
   14000d29e:	int3   
   14000d29f:	int3   
   14000d2a0:	mov    rax,rsp
   14000d2a3:	mov    QWORD PTR [rax+0x8],rbx
   14000d2a7:	mov    QWORD PTR [rax+0x10],rsi
   14000d2ab:	mov    QWORD PTR [rax+0x20],r9
   14000d2af:	push   rdi
   14000d2b0:	sub    rsp,0x30
   14000d2b4:	and    DWORD PTR [rax+0x20],0x0
   14000d2b8:	mov    rbx,r8
   14000d2bb:	mov    rdi,rdx
   14000d2be:	lea    r8,[rax+0x20]
   14000d2c2:	mov    rsi,rcx
   14000d2c5:	lea    rdx,[rip+0xafd4]        # 0x1400182a0
   14000d2cc:	lea    rcx,[rax-0x18]
   14000d2d0:	call   0x14000bf4c
   14000d2d5:	mov    r8,rbx
   14000d2d8:	mov    rdx,rdi
   14000d2db:	mov    rcx,rsi
   14000d2de:	call   0x14000bdf4
   14000d2e3:	mov    DWORD PTR [rsp+0x58],eax
   14000d2e7:	mov    ebx,eax
   14000d2e9:	test   eax,eax
   14000d2eb:	jns    0x14000d322
   14000d2ed:	mov    rcx,QWORD PTR [rip+0x10d2c]        # 0x14001e020
   14000d2f4:	lea    rax,[rip+0x10d25]        # 0x14001e020
   14000d2fb:	cmp    rcx,rax
   14000d2fe:	je     0x14000d322
   14000d300:	test   BYTE PTR [rcx+0x1c],0x4
   14000d304:	je     0x14000d322
   14000d306:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d30a:	lea    r8,[rip+0xb0a7]        # 0x1400183b8
   14000d311:	mov    edx,0x44
   14000d316:	mov    r9d,ebx
   14000d319:	call   0x140001228
   14000d31e:	mov    ebx,DWORD PTR [rsp+0x58]
   14000d322:	lea    rcx,[rsp+0x20]
   14000d327:	call   0x14000bf98
   14000d32c:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d331:	mov    eax,ebx
   14000d333:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d338:	add    rsp,0x30
   14000d33c:	pop    rdi
   14000d33d:	ret    
   14000d33e:	int3   
   14000d33f:	int3   
   14000d340:	int3   
   14000d341:	int3   
   14000d342:	int3   
   14000d343:	int3   
   14000d344:	mov    rax,rsp
   14000d347:	mov    QWORD PTR [rax+0x8],rbx
   14000d34b:	mov    DWORD PTR [rax+0x18],r8d
   14000d34f:	push   rdi
   14000d350:	sub    rsp,0x30
   14000d354:	and    DWORD PTR [rax+0x18],0x0
   14000d358:	lea    r8,[rax+0x18]
   14000d35c:	mov    rbx,rcx
   14000d35f:	lea    rdx,[rip+0xaf6a]        # 0x1400182d0
   14000d366:	lea    rcx,[rax-0x18]
   14000d36a:	mov    rdi,r9
   14000d36d:	call   0x14000bf4c
   14000d372:	xor    edx,edx
   14000d374:	mov    rcx,rbx
   14000d377:	lea    r8d,[rdx+0x2]
   14000d37b:	call   QWORD PTR [rip+0x8ed7]        # 0x140016258
   14000d381:	mov    rbx,rax
   14000d384:	test   rax,rax
   14000d387:	jne    0x14000d3d4
   14000d389:	call   QWORD PTR [rip+0x8ef9]        # 0x140016288
   14000d38f:	movzx  r8d,ax
   14000d393:	or     r8d,0x80070000
   14000d39a:	test   eax,eax
   14000d39c:	cmovle r8d,eax
   14000d3a0:	mov    DWORD PTR [rsp+0x50],r8d
   14000d3a5:	mov    rcx,QWORD PTR [rip+0x10c74]        # 0x14001e020
   14000d3ac:	lea    rax,[rip+0x10c6d]        # 0x14001e020
   14000d3b3:	cmp    rcx,rax
   14000d3b6:	je     0x14000d3d9
   14000d3b8:	test   BYTE PTR [rcx+0x1c],0x4
   14000d3bc:	je     0x14000d3d9
   14000d3be:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d3c2:	lea    edx,[rbx+0x47]
   14000d3c5:	mov    r9d,r8d
   14000d3c8:	lea    r8,[rip+0xafe9]        # 0x1400183b8
   14000d3cf:	call   0x140001228
   14000d3d4:	mov    r8d,DWORD PTR [rsp+0x50]
   14000d3d9:	test   rdi,rdi
   14000d3dc:	je     0x14000d3e1
   14000d3de:	mov    DWORD PTR [rdi],r8d
   14000d3e1:	lea    rcx,[rsp+0x20]
   14000d3e6:	call   0x14000bf98
   14000d3eb:	mov    rax,rbx
   14000d3ee:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d3f3:	add    rsp,0x30
   14000d3f7:	pop    rdi
   14000d3f8:	ret    
   14000d3f9:	int3   
   14000d3fa:	int3   
   14000d3fb:	int3   
   14000d3fc:	int3   
   14000d3fd:	int3   
   14000d3fe:	int3   
   14000d3ff:	int3   
   14000d400:	mov    rax,rsp
   14000d403:	mov    QWORD PTR [rax+0x8],rbx
   14000d407:	push   rdi
   14000d408:	sub    rsp,0x30
   14000d40c:	and    DWORD PTR [rax+0x10],0x0
   14000d410:	lea    r8,[rax+0x10]
   14000d414:	mov    rdi,rdx
   14000d417:	mov    rbx,rcx
   14000d41a:	lea    rdx,[rip+0xaec7]        # 0x1400182e8
   14000d421:	lea    rcx,[rax-0x18]
   14000d425:	call   0x14000bf4c
   14000d42a:	mov    rcx,rbx
   14000d42d:	call   QWORD PTR [rip+0x8e35]        # 0x140016268
   14000d433:	mov    ebx,eax
   14000d435:	test   eax,eax
   14000d437:	jne    0x14000d484
   14000d439:	call   QWORD PTR [rip+0x8e49]        # 0x140016288
   14000d43f:	movzx  r8d,ax
   14000d443:	or     r8d,0x80070000
   14000d44a:	test   eax,eax
   14000d44c:	cmovle r8d,eax
   14000d450:	mov    DWORD PTR [rsp+0x48],r8d
   14000d455:	mov    rcx,QWORD PTR [rip+0x10bc4]        # 0x14001e020
   14000d45c:	lea    rax,[rip+0x10bbd]        # 0x14001e020
   14000d463:	cmp    rcx,rax
   14000d466:	je     0x14000d489
   14000d468:	test   BYTE PTR [rcx+0x1c],0x4
   14000d46c:	je     0x14000d489
   14000d46e:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d472:	lea    edx,[rbx+0x48]
   14000d475:	mov    r9d,r8d
   14000d478:	lea    r8,[rip+0xaf39]        # 0x1400183b8
   14000d47f:	call   0x140001228
   14000d484:	mov    r8d,DWORD PTR [rsp+0x48]
   14000d489:	test   rdi,rdi
   14000d48c:	je     0x14000d491
   14000d48e:	mov    DWORD PTR [rdi],r8d
   14000d491:	lea    rcx,[rsp+0x20]
   14000d496:	call   0x14000bf98
   14000d49b:	mov    eax,ebx
   14000d49d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d4a2:	add    rsp,0x30
   14000d4a6:	pop    rdi
   14000d4a7:	ret    
   14000d4a8:	int3   
   14000d4a9:	int3   
   14000d4aa:	int3   
   14000d4ab:	int3   
   14000d4ac:	int3   
   14000d4ad:	int3   
   14000d4ae:	int3   
   14000d4af:	int3   
   14000d4b0:	mov    rax,rsp
   14000d4b3:	mov    QWORD PTR [rax+0x8],rbx
   14000d4b7:	push   rdi
   14000d4b8:	sub    rsp,0x30
   14000d4bc:	and    DWORD PTR [rax+0x10],0x0
   14000d4c0:	lea    r8,[rax+0x10]
   14000d4c4:	mov    rdi,rdx
   14000d4c7:	mov    rbx,rcx
   14000d4ca:	lea    rdx,[rip+0xae2f]        # 0x140018300
   14000d4d1:	lea    rcx,[rax-0x18]
   14000d4d5:	call   0x14000bf4c
   14000d4da:	mov    rcx,rbx
   14000d4dd:	call   QWORD PTR [rip+0x8bc5]        # 0x1400160a8
   14000d4e3:	mov    rbx,rax
   14000d4e6:	test   rax,rax
   14000d4e9:	jne    0x14000d536
   14000d4eb:	call   QWORD PTR [rip+0x8d97]        # 0x140016288
   14000d4f1:	movzx  r8d,ax
   14000d4f5:	or     r8d,0x80070000
   14000d4fc:	test   eax,eax
   14000d4fe:	cmovle r8d,eax
   14000d502:	mov    DWORD PTR [rsp+0x48],r8d
   14000d507:	mov    rcx,QWORD PTR [rip+0x10b12]        # 0x14001e020
   14000d50e:	lea    rax,[rip+0x10b0b]        # 0x14001e020
   14000d515:	cmp    rcx,rax
   14000d518:	je     0x14000d53b
   14000d51a:	test   BYTE PTR [rcx+0x1c],0x4
   14000d51e:	je     0x14000d53b
   14000d520:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d524:	lea    edx,[rbx+0x49]
   14000d527:	mov    r9d,r8d
   14000d52a:	lea    r8,[rip+0xae87]        # 0x1400183b8
   14000d531:	call   0x140001228
   14000d536:	mov    r8d,DWORD PTR [rsp+0x48]
   14000d53b:	test   rdi,rdi
   14000d53e:	je     0x14000d543
   14000d540:	mov    DWORD PTR [rdi],r8d
   14000d543:	lea    rcx,[rsp+0x20]
   14000d548:	call   0x14000bf98
   14000d54d:	mov    rax,rbx
   14000d550:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d555:	add    rsp,0x30
   14000d559:	pop    rdi
   14000d55a:	ret    
   14000d55b:	int3   
   14000d55c:	int3   
   14000d55d:	int3   
   14000d55e:	int3   
   14000d55f:	int3   
   14000d560:	int3   
   14000d561:	int3   
   14000d562:	int3   
   14000d563:	int3   
   14000d564:	mov    rax,rsp
   14000d567:	mov    QWORD PTR [rax+0x8],rbx
   14000d56b:	mov    QWORD PTR [rax+0x10],rsi
   14000d56f:	mov    DWORD PTR [rax+0x18],r8d
   14000d573:	push   rdi
   14000d574:	sub    rsp,0x40
   14000d578:	and    DWORD PTR [rax+0x18],0x0
   14000d57c:	lea    r8,[rax+0x18]
   14000d580:	mov    rdi,rdx
   14000d583:	mov    rsi,rcx
   14000d586:	lea    rdx,[rip+0xad93]        # 0x140018320
   14000d58d:	mov    rbx,r9
   14000d590:	lea    rcx,[rax-0x18]
   14000d594:	call   0x14000bf4c
   14000d599:	mov    eax,DWORD PTR [rsp+0x70]
   14000d59d:	mov    r9,rbx
   14000d5a0:	or     r8d,0xffffffff
   14000d5a4:	mov    DWORD PTR [rsp+0x20],eax
   14000d5a8:	mov    rdx,rdi
   14000d5ab:	mov    rcx,rsi
   14000d5ae:	call   QWORD PTR [rip+0x8e64]        # 0x140016418
   14000d5b4:	mov    ebx,eax
   14000d5b6:	test   eax,eax
   14000d5b8:	jne    0x14000d605
   14000d5ba:	call   QWORD PTR [rip+0x8cc8]        # 0x140016288
   14000d5c0:	movzx  r8d,ax
   14000d5c4:	or     r8d,0x80070000
   14000d5cb:	test   eax,eax
   14000d5cd:	cmovle r8d,eax
   14000d5d1:	mov    DWORD PTR [rsp+0x60],r8d
   14000d5d6:	mov    rcx,QWORD PTR [rip+0x10a43]        # 0x14001e020
   14000d5dd:	lea    rax,[rip+0x10a3c]        # 0x14001e020
   14000d5e4:	cmp    rcx,rax
   14000d5e7:	je     0x14000d60a
   14000d5e9:	test   BYTE PTR [rcx+0x1c],0x4
   14000d5ed:	je     0x14000d60a
   14000d5ef:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d5f3:	lea    edx,[rbx+0x4a]
   14000d5f6:	mov    r9d,r8d
   14000d5f9:	lea    r8,[rip+0xadb8]        # 0x1400183b8
   14000d600:	call   0x140001228
   14000d605:	mov    r8d,DWORD PTR [rsp+0x60]
   14000d60a:	mov    rax,QWORD PTR [rsp+0x78]
   14000d60f:	test   rax,rax
   14000d612:	je     0x14000d617
   14000d614:	mov    DWORD PTR [rax],r8d
   14000d617:	lea    rcx,[rsp+0x30]
   14000d61c:	call   0x14000bf98
   14000d621:	mov    rsi,QWORD PTR [rsp+0x58]
   14000d626:	mov    eax,ebx
   14000d628:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d62d:	add    rsp,0x40
   14000d631:	pop    rdi
   14000d632:	ret    
   14000d633:	int3   
   14000d634:	int3   
   14000d635:	int3   
   14000d636:	int3   
   14000d637:	int3   
   14000d638:	int3   
   14000d639:	int3   
   14000d63a:	int3   
   14000d63b:	int3   
   14000d63c:	mov    rax,rsp
   14000d63f:	mov    QWORD PTR [rax+0x8],rbx
   14000d643:	push   rdi
   14000d644:	sub    rsp,0x30
   14000d648:	and    DWORD PTR [rax+0x10],0x0
   14000d64c:	lea    r8,[rax+0x10]
   14000d650:	mov    rdi,rdx
   14000d653:	mov    ebx,ecx
   14000d655:	lea    rdx,[rip+0xacdc]        # 0x140018338
   14000d65c:	lea    rcx,[rax-0x18]
   14000d660:	call   0x14000bf4c
   14000d665:	mov    ecx,ebx
   14000d667:	call   QWORD PTR [rip+0x8a9b]        # 0x140016108
   14000d66d:	mov    rbx,rax
   14000d670:	test   rax,rax
   14000d673:	jne    0x14000d6c0
   14000d675:	call   QWORD PTR [rip+0x8c0d]        # 0x140016288
   14000d67b:	movzx  r8d,ax
   14000d67f:	or     r8d,0x80070000
   14000d686:	test   eax,eax
   14000d688:	cmovle r8d,eax
   14000d68c:	mov    DWORD PTR [rsp+0x48],r8d
   14000d691:	mov    rcx,QWORD PTR [rip+0x10988]        # 0x14001e020
   14000d698:	lea    rax,[rip+0x10981]        # 0x14001e020
   14000d69f:	cmp    rcx,rax
   14000d6a2:	je     0x14000d6c5
   14000d6a4:	test   BYTE PTR [rcx+0x1c],0x4
   14000d6a8:	je     0x14000d6c5
   14000d6aa:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d6ae:	lea    edx,[rbx+0x54]
   14000d6b1:	mov    r9d,r8d
   14000d6b4:	lea    r8,[rip+0xacfd]        # 0x1400183b8
   14000d6bb:	call   0x140001228
   14000d6c0:	mov    r8d,DWORD PTR [rsp+0x48]
   14000d6c5:	test   rdi,rdi
   14000d6c8:	je     0x14000d6cd
   14000d6ca:	mov    DWORD PTR [rdi],r8d
   14000d6cd:	lea    rcx,[rsp+0x20]
   14000d6d2:	call   0x14000bf98
   14000d6d7:	mov    rax,rbx
   14000d6da:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d6df:	add    rsp,0x30
   14000d6e3:	pop    rdi
   14000d6e4:	ret    
   14000d6e5:	int3   
   14000d6e6:	int3   
   14000d6e7:	int3   
   14000d6e8:	int3   
   14000d6e9:	int3   
   14000d6ea:	int3   
   14000d6eb:	int3   
   14000d6ec:	mov    rax,rsp
   14000d6ef:	mov    QWORD PTR [rax+0x8],rbx
   14000d6f3:	mov    QWORD PTR [rax+0x10],rsi
   14000d6f7:	push   rdi
   14000d6f8:	sub    rsp,0x30
   14000d6fc:	and    DWORD PTR [rax+0x18],0x0
   14000d700:	mov    rsi,r8
   14000d703:	mov    ebx,edx
   14000d705:	lea    r8,[rax+0x18]
   14000d709:	mov    rdi,rcx
   14000d70c:	lea    rdx,[rip+0xac3d]        # 0x140018350
   14000d713:	lea    rcx,[rax-0x18]
   14000d717:	call   0x14000bf4c
   14000d71c:	mov    edx,ebx
   14000d71e:	mov    rcx,rdi
   14000d721:	call   QWORD PTR [rip+0x8bc9]        # 0x1400162f0
   14000d727:	mov    rbx,rax
   14000d72a:	test   rax,rax
   14000d72d:	jne    0x14000d77a
   14000d72f:	call   QWORD PTR [rip+0x8b53]        # 0x140016288
   14000d735:	movzx  r8d,ax
   14000d739:	or     r8d,0x80070000
   14000d740:	test   eax,eax
   14000d742:	cmovle r8d,eax
   14000d746:	mov    DWORD PTR [rsp+0x50],r8d
   14000d74b:	mov    rcx,QWORD PTR [rip+0x108ce]        # 0x14001e020
   14000d752:	lea    rax,[rip+0x108c7]        # 0x14001e020
   14000d759:	cmp    rcx,rax
   14000d75c:	je     0x14000d77f
   14000d75e:	test   BYTE PTR [rcx+0x1c],0x4
   14000d762:	je     0x14000d77f
   14000d764:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d768:	lea    edx,[rbx+0x56]
   14000d76b:	mov    r9d,r8d
   14000d76e:	lea    r8,[rip+0xac43]        # 0x1400183b8
   14000d775:	call   0x140001228
   14000d77a:	mov    r8d,DWORD PTR [rsp+0x50]
   14000d77f:	test   rsi,rsi
   14000d782:	je     0x14000d787
   14000d784:	mov    DWORD PTR [rsi],r8d
   14000d787:	lea    rcx,[rsp+0x20]
   14000d78c:	call   0x14000bf98
   14000d791:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d796:	mov    rax,rbx
   14000d799:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d79e:	add    rsp,0x30
   14000d7a2:	pop    rdi
   14000d7a3:	ret    
   14000d7a4:	int3   
   14000d7a5:	int3   
   14000d7a6:	int3   
   14000d7a7:	int3   
   14000d7a8:	int3   
   14000d7a9:	int3   
   14000d7aa:	int3   
   14000d7ab:	int3   
   14000d7ac:	mov    rax,rsp
   14000d7af:	mov    QWORD PTR [rax+0x8],rbx
   14000d7b3:	mov    QWORD PTR [rax+0x10],rsi
   14000d7b7:	mov    QWORD PTR [rax+0x20],r9
   14000d7bb:	push   rdi
   14000d7bc:	sub    rsp,0x30
   14000d7c0:	and    DWORD PTR [rax+0x20],0x0
   14000d7c4:	mov    rbx,r8
   14000d7c7:	mov    edi,edx
   14000d7c9:	lea    r8,[rax+0x20]
   14000d7cd:	mov    rsi,rcx
   14000d7d0:	lea    rdx,[rip+0xab91]        # 0x140018368
   14000d7d7:	lea    rcx,[rax-0x18]
   14000d7db:	call   0x14000bf4c
   14000d7e0:	mov    r8,rbx
   14000d7e3:	mov    edx,edi
   14000d7e5:	mov    rcx,rsi
   14000d7e8:	call   QWORD PTR [rip+0x8c5a]        # 0x140016448
   14000d7ee:	mov    ebx,eax
   14000d7f0:	test   eax,eax
   14000d7f2:	jne    0x14000d83c
   14000d7f4:	call   QWORD PTR [rip+0x8a8e]        # 0x140016288
   14000d7fa:	movzx  r9d,ax
   14000d7fe:	or     r9d,0x80070000
   14000d805:	test   eax,eax
   14000d807:	cmovle r9d,eax
   14000d80b:	mov    DWORD PTR [rsp+0x58],r9d
   14000d810:	mov    rcx,QWORD PTR [rip+0x10809]        # 0x14001e020
   14000d817:	lea    rax,[rip+0x10802]        # 0x14001e020
   14000d81e:	cmp    rcx,rax
   14000d821:	je     0x14000d83c
   14000d823:	test   BYTE PTR [rcx+0x1c],0x4
   14000d827:	je     0x14000d83c
   14000d829:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d82d:	lea    edx,[rbx+0x57]
   14000d830:	lea    r8,[rip+0xab81]        # 0x1400183b8
   14000d837:	call   0x140001228
   14000d83c:	lea    rcx,[rsp+0x20]
   14000d841:	call   0x14000bf98
   14000d846:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d84b:	mov    eax,ebx
   14000d84d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d852:	add    rsp,0x30
   14000d856:	pop    rdi
   14000d857:	ret    
   14000d858:	int3   
   14000d859:	int3   
   14000d85a:	int3   
   14000d85b:	int3   
   14000d85c:	int3   
   14000d85d:	int3   
   14000d85e:	int3   
   14000d85f:	int3   
   14000d860:	mov    rax,rsp
   14000d863:	mov    QWORD PTR [rax+0x8],rbx
   14000d867:	mov    QWORD PTR [rax+0x10],rbp
   14000d86b:	mov    QWORD PTR [rax+0x18],rsi
   14000d86f:	push   rdi
   14000d870:	sub    rsp,0x50
   14000d874:	and    DWORD PTR [rax-0x28],0x0
   14000d878:	mov    edi,r8d
   14000d87b:	mov    esi,edx
   14000d87d:	lea    r8,[rax-0x28]
   14000d881:	mov    rbp,rcx
   14000d884:	lea    rdx,[rip+0xaafd]        # 0x140018388
   14000d88b:	lea    rcx,[rax-0x20]
   14000d88f:	mov    ebx,r9d
   14000d892:	call   0x14000bf4c
   14000d897:	mov    eax,DWORD PTR [rsp+0x88]
   14000d89e:	mov    r9d,ebx
   14000d8a1:	mov    DWORD PTR [rsp+0x28],eax
   14000d8a5:	mov    r8d,edi
   14000d8a8:	mov    eax,DWORD PTR [rsp+0x80]
   14000d8af:	mov    edx,esi
   14000d8b1:	mov    rcx,rbp
   14000d8b4:	mov    DWORD PTR [rsp+0x20],eax
   14000d8b8:	call   QWORD PTR [rip+0x8b9a]        # 0x140016458
   14000d8be:	mov    ebx,eax
   14000d8c0:	test   eax,eax
   14000d8c2:	jne    0x14000d90f
   14000d8c4:	call   QWORD PTR [rip+0x89be]        # 0x140016288
   14000d8ca:	movzx  r8d,ax
   14000d8ce:	or     r8d,0x80070000
   14000d8d5:	test   eax,eax
   14000d8d7:	cmovle r8d,eax
   14000d8db:	mov    DWORD PTR [rsp+0x30],r8d
   14000d8e0:	mov    rcx,QWORD PTR [rip+0x10739]        # 0x14001e020
   14000d8e7:	lea    rax,[rip+0x10732]        # 0x14001e020
   14000d8ee:	cmp    rcx,rax
   14000d8f1:	je     0x14000d914
   14000d8f3:	test   BYTE PTR [rcx+0x1c],0x4
   14000d8f7:	je     0x14000d914
   14000d8f9:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d8fd:	lea    edx,[rbx+0x59]
   14000d900:	mov    r9d,r8d
   14000d903:	lea    r8,[rip+0xaaae]        # 0x1400183b8
   14000d90a:	call   0x140001228
   14000d90f:	mov    r8d,DWORD PTR [rsp+0x30]
   14000d914:	mov    rax,QWORD PTR [rsp+0x90]
   14000d91c:	test   rax,rax
   14000d91f:	je     0x14000d924
   14000d921:	mov    DWORD PTR [rax],r8d
   14000d924:	lea    rcx,[rsp+0x38]
   14000d929:	call   0x14000bf98
   14000d92e:	mov    rbp,QWORD PTR [rsp+0x68]
   14000d933:	mov    eax,ebx
   14000d935:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d93a:	mov    rsi,QWORD PTR [rsp+0x70]
   14000d93f:	add    rsp,0x50
   14000d943:	pop    rdi
   14000d944:	ret    
   14000d945:	int3   
   14000d946:	int3   
   14000d947:	int3   
   14000d948:	int3   
   14000d949:	int3   
   14000d94a:	int3   
   14000d94b:	int3   
   14000d94c:	mov    rax,rsp
   14000d94f:	mov    QWORD PTR [rax+0x8],rbx
   14000d953:	mov    QWORD PTR [rax+0x10],rsi
   14000d957:	push   rdi
   14000d958:	sub    rsp,0x30
   14000d95c:	and    DWORD PTR [rax+0x18],0x0
   14000d960:	mov    rsi,r8
   14000d963:	mov    ebx,edx
   14000d965:	lea    r8,[rax+0x18]
   14000d969:	mov    rdi,rcx
   14000d96c:	lea    rdx,[rip+0xaa2d]        # 0x1400183a0
   14000d973:	lea    rcx,[rax-0x18]
   14000d977:	call   0x14000bf4c
   14000d97c:	mov    edx,ebx
   14000d97e:	mov    rcx,rdi
   14000d981:	call   QWORD PTR [rip+0x8ac9]        # 0x140016450
   14000d987:	mov    ebx,eax
   14000d989:	call   QWORD PTR [rip+0x88f9]        # 0x140016288
   14000d98f:	movzx  r8d,ax
   14000d993:	or     r8d,0x80070000
   14000d99a:	test   eax,eax
   14000d99c:	cmovle r8d,eax
   14000d9a0:	mov    DWORD PTR [rsp+0x50],r8d
   14000d9a5:	test   r8d,r8d
   14000d9a8:	jns    0x14000d9e0
   14000d9aa:	mov    rcx,QWORD PTR [rip+0x1066f]        # 0x14001e020
   14000d9b1:	lea    rax,[rip+0x10668]        # 0x14001e020
   14000d9b8:	cmp    rcx,rax
   14000d9bb:	je     0x14000d9e0
   14000d9bd:	test   BYTE PTR [rcx+0x1c],0x4
   14000d9c1:	je     0x14000d9e0
   14000d9c3:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d9c7:	mov    r9d,r8d
   14000d9ca:	lea    r8,[rip+0xa9e7]        # 0x1400183b8
   14000d9d1:	mov    edx,0x5c
   14000d9d6:	call   0x140001228
   14000d9db:	mov    r8d,DWORD PTR [rsp+0x50]
   14000d9e0:	test   rsi,rsi
   14000d9e3:	je     0x14000d9e8
   14000d9e5:	mov    DWORD PTR [rsi],r8d
   14000d9e8:	lea    rcx,[rsp+0x20]
   14000d9ed:	call   0x14000bf98
   14000d9f2:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d9f7:	mov    eax,ebx
   14000d9f9:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d9fe:	add    rsp,0x30
   14000da02:	pop    rdi
   14000da03:	ret    
   14000da04:	int3   
   14000da05:	int3   
   14000da06:	int3   
   14000da07:	int3   
   14000da08:	int3   
   14000da09:	int3   
   14000da0a:	int3   
   14000da0b:	int3   
   14000da0c:	mov    QWORD PTR [rsp+0x20],r9
   14000da11:	mov    DWORD PTR [rsp+0x10],edx
   14000da15:	push   rbp
   14000da16:	push   rbx
   14000da17:	push   rsi
   14000da18:	push   r14
   14000da1a:	push   r15
   14000da1c:	mov    rbp,rsp
   14000da1f:	sub    rsp,0x70
   14000da23:	mov    r14,r8
   14000da26:	lea    rdx,[rip+0xa99b]        # 0x1400183c8
   14000da2d:	mov    r15,rcx
   14000da30:	lea    r8,[rbp+0x48]
   14000da34:	xor    ebx,ebx
   14000da36:	lea    rcx,[rbp-0x18]
   14000da3a:	mov    DWORD PTR [rbp+0x48],ebx
   14000da3d:	call   0x14000bf4c
   14000da42:	test   r15,r15
   14000da45:	je     0x14000dbc9
   14000da4b:	test   r14,r14
   14000da4e:	je     0x14000dbc9
   14000da54:	lea    rax,[rbp-0x28]
   14000da58:	mov    DWORD PTR [r14],ebx
   14000da5b:	mov    rcx,0xffffffff80000002
   14000da62:	mov    QWORD PTR [rsp+0x20],rax
   14000da67:	mov    DWORD PTR [rbp+0x38],ebx
   14000da6a:	mov    QWORD PTR [rbp-0x28],rbx
   14000da6e:	call   0x14000d098
   14000da73:	mov    rcx,QWORD PTR [rbp-0x28]
   14000da77:	mov    esi,eax
   14000da79:	test   rcx,rcx
   14000da7c:	je     0x14000dac5
   14000da7e:	lea    rax,[rbp-0x30]
   14000da82:	mov    DWORD PTR [rbp+0x30],ebx
   14000da85:	mov    QWORD PTR [rsp+0x28],rax
   14000da8a:	lea    r9,[rbp+0x30]
   14000da8e:	lea    rax,[rbp+0x38]
   14000da92:	mov    DWORD PTR [rbp-0x30],0x4
   14000da99:	mov    rdx,r15
   14000da9c:	mov    QWORD PTR [rsp+0x20],rax
   14000daa1:	call   0x14000d1d8
   14000daa6:	cmp    DWORD PTR [rbp+0x30],0x4
   14000daaa:	mov    esi,eax
   14000daac:	jne    0x14000dab4
   14000daae:	cmp    DWORD PTR [rbp-0x30],0x4
   14000dab2:	je     0x14000dabc
   14000dab4:	mov    esi,0x2
   14000dab9:	mov    DWORD PTR [rbp+0x38],ebx
   14000dabc:	mov    rcx,QWORD PTR [rbp-0x28]
   14000dac0:	call   0x14000d144
   14000dac5:	test   esi,esi
   14000dac7:	je     0x14000dbbe
   14000dacd:	cmp    esi,0x2
   14000dad0:	je     0x14000db12
   14000dad2:	movzx  r9d,si
   14000dad6:	or     r9d,0x80070000
   14000dadd:	test   esi,esi
   14000dadf:	cmovle r9d,esi
   14000dae3:	mov    DWORD PTR [rbp+0x48],r9d
   14000dae7:	mov    rcx,QWORD PTR [rip+0x10532]        # 0x14001e020
   14000daee:	lea    rax,[rip+0x1052b]        # 0x14001e020
   14000daf5:	cmp    rcx,rax
   14000daf8:	je     0x14000dc04
   14000dafe:	test   BYTE PTR [rcx+0x1c],0x4
   14000db02:	je     0x14000dc04
   14000db08:	mov    edx,0xb
   14000db0d:	jmp    0x14000dbf4
   14000db12:	lea    rax,[rbp-0x20]
   14000db16:	mov    DWORD PTR [rbp+0x38],ebx
   14000db19:	mov    rcx,0xffffffff80000001
   14000db20:	mov    QWORD PTR [rsp+0x20],rax
   14000db25:	mov    QWORD PTR [rbp-0x20],rbx
   14000db29:	call   0x14000d098
   14000db2e:	mov    rcx,QWORD PTR [rbp-0x20]
   14000db32:	mov    esi,eax
   14000db34:	test   rcx,rcx
   14000db37:	je     0x14000db80
   14000db39:	lea    rax,[rbp-0x30]
   14000db3d:	mov    DWORD PTR [rbp+0x30],ebx
   14000db40:	mov    QWORD PTR [rsp+0x28],rax
   14000db45:	lea    r9,[rbp+0x30]
   14000db49:	lea    rax,[rbp+0x38]
   14000db4d:	mov    DWORD PTR [rbp-0x30],0x4
   14000db54:	mov    rdx,r15
   14000db57:	mov    QWORD PTR [rsp+0x20],rax
   14000db5c:	call   0x14000d1d8
   14000db61:	cmp    DWORD PTR [rbp+0x30],0x4
   14000db65:	mov    esi,eax
   14000db67:	jne    0x14000db6f
   14000db69:	cmp    DWORD PTR [rbp-0x30],0x4
   14000db6d:	je     0x14000db77
   14000db6f:	mov    esi,0x2
   14000db74:	mov    DWORD PTR [rbp+0x38],ebx
   14000db77:	mov    rcx,QWORD PTR [rbp-0x20]
   14000db7b:	call   0x14000d144
   14000db80:	test   esi,esi
   14000db82:	je     0x14000dbbe
   14000db84:	cmp    esi,0x2
   14000db87:	je     0x14000dc04
   14000db89:	movzx  r9d,si
   14000db8d:	or     r9d,0x80070000
   14000db94:	test   esi,esi
   14000db96:	cmovle r9d,esi
   14000db9a:	mov    DWORD PTR [rbp+0x48],r9d
   14000db9e:	mov    rcx,QWORD PTR [rip+0x1047b]        # 0x14001e020
   14000dba5:	lea    rax,[rip+0x10474]        # 0x14001e020
   14000dbac:	cmp    rcx,rax
   14000dbaf:	je     0x14000dc04
   14000dbb1:	test   BYTE PTR [rcx+0x1c],0x4
   14000dbb5:	je     0x14000dc04
   14000dbb7:	mov    edx,0xc
   14000dbbc:	jmp    0x14000dbf4
   14000dbbe:	cmp    DWORD PTR [rbp+0x38],ebx
   14000dbc1:	setne  bl
   14000dbc4:	mov    DWORD PTR [r14],ebx
   14000dbc7:	jmp    0x14000dc04
   14000dbc9:	mov    DWORD PTR [rbp+0x48],0x80004003
   14000dbd0:	mov    rcx,QWORD PTR [rip+0x10449]        # 0x14001e020
   14000dbd7:	lea    rax,[rip+0x10442]        # 0x14001e020
   14000dbde:	cmp    rcx,rax
   14000dbe1:	je     0x14000dc04
   14000dbe3:	test   BYTE PTR [rcx+0x1c],0x4
   14000dbe7:	je     0x14000dc04
   14000dbe9:	mov    edx,0xa
   14000dbee:	mov    r9d,0x80004003
   14000dbf4:	mov    rcx,QWORD PTR [rcx+0x10]
   14000dbf8:	lea    r8,[rip+0xa8a1]        # 0x1400184a0
   14000dbff:	call   0x140001228
   14000dc04:	mov    ebx,DWORD PTR [rbp+0x48]
   14000dc07:	lea    rcx,[rbp-0x18]
   14000dc0b:	call   0x14000bf98
   14000dc10:	mov    eax,ebx
   14000dc12:	add    rsp,0x70
   14000dc16:	pop    r15
   14000dc18:	pop    r14
   14000dc1a:	pop    rsi
   14000dc1b:	pop    rbx
   14000dc1c:	pop    rbp
   14000dc1d:	ret    
   14000dc1e:	int3   
   14000dc1f:	int3   
   14000dc20:	int3   
   14000dc21:	int3   
   14000dc22:	int3   
   14000dc23:	int3   
   14000dc24:	mov    rax,rsp
   14000dc27:	mov    DWORD PTR [rax+0x8],ecx
   14000dc2a:	push   rbx
   14000dc2b:	sub    rsp,0x40
   14000dc2f:	xor    ebx,ebx
   14000dc31:	lea    r8,[rax+0x8]
   14000dc35:	lea    rdx,[rip+0xa804]        # 0x140018440
   14000dc3c:	mov    DWORD PTR [rax+0x8],ebx
   14000dc3f:	lea    rcx,[rax-0x18]
   14000dc43:	call   0x14000bf4c
   14000dc48:	xor    eax,eax
   14000dc4a:	lea    r8,[rsp+0x20]
   14000dc4f:	mov    QWORD PTR [rsp+0x20],rax
   14000dc54:	lea    edx,[rbx+0x10]
   14000dc57:	xor    r9d,r9d
   14000dc5a:	mov    DWORD PTR [rsp+0x20],0x10
   14000dc62:	lea    ecx,[rbx+0x42]
   14000dc65:	mov    QWORD PTR [rsp+0x28],rax
   14000dc6a:	call   QWORD PTR [rip+0x87d0]        # 0x140016440
   14000dc70:	test   eax,eax
   14000dc72:	jne    0x14000dcbe
   14000dc74:	call   QWORD PTR [rip+0x860e]        # 0x140016288
   14000dc7a:	movzx  r9d,ax
   14000dc7e:	or     r9d,0x80070000
   14000dc85:	test   eax,eax
   14000dc87:	cmovle r9d,eax
   14000dc8b:	mov    DWORD PTR [rsp+0x50],r9d
   14000dc90:	mov    rcx,QWORD PTR [rip+0x10389]        # 0x14001e020
   14000dc97:	lea    rax,[rip+0x10382]        # 0x14001e020
   14000dc9e:	cmp    rcx,rax
   14000dca1:	je     0x14000dccc
   14000dca3:	test   BYTE PTR [rcx+0x1c],0x4
   14000dca7:	je     0x14000dccc
   14000dca9:	mov    rcx,QWORD PTR [rcx+0x10]
   14000dcad:	lea    edx,[rbx+0x10]
   14000dcb0:	lea    r8,[rip+0xa7e9]        # 0x1400184a0
   14000dcb7:	call   0x140001228
   14000dcbc:	jmp    0x14000dccc
   14000dcbe:	mov    cl,BYTE PTR [rsp+0x24]
   14000dcc2:	mov    eax,0x1
   14000dcc7:	and    cl,al
   14000dcc9:	cmovne ebx,eax
   14000dccc:	lea    rcx,[rsp+0x30]
   14000dcd1:	call   0x14000bf98
   14000dcd6:	mov    eax,ebx
   14000dcd8:	add    rsp,0x40
   14000dcdc:	pop    rbx
   14000dcdd:	ret    
   14000dcde:	int3   
   14000dcdf:	int3   
   14000dce0:	int3   
   14000dce1:	int3   
   14000dce2:	int3   
   14000dce3:	int3   
   14000dce4:	mov    rax,rsp
   14000dce7:	push   rbp
   14000dce8:	push   rsi
   14000dce9:	push   rdi
   14000dcea:	push   r12
   14000dcec:	push   r13
   14000dcee:	push   r14
   14000dcf0:	push   r15
   14000dcf2:	lea    rbp,[rax-0x5f]
   14000dcf6:	sub    rsp,0xd0
   14000dcfd:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   14000dd05:	mov    QWORD PTR [rax+0x18],rbx
   14000dd09:	mov    rax,QWORD PTR [rip+0x10300]        # 0x14001e010
   14000dd10:	xor    rax,rsp
   14000dd13:	mov    QWORD PTR [rbp+0x1f],rax
   14000dd17:	mov    r12d,r9d
   14000dd1a:	mov    r14d,r8d
   14000dd1d:	mov    r15,rdx
   14000dd20:	mov    QWORD PTR [rbp-0x51],rdx
   14000dd24:	mov    QWORD PTR [rbp-0x59],rcx
   14000dd28:	xor    ebx,ebx
   14000dd2a:	mov    DWORD PTR [rbp-0x69],ebx
   14000dd2d:	lea    r8,[rbp-0x69]
   14000dd31:	lea    rdx,[rip+0xa748]        # 0x140018480
   14000dd38:	lea    rcx,[rbp-0x29]
   14000dd3c:	call   0x14000bf4c
   14000dd41:	nop
   14000dd42:	test   r15,r15
   14000dd45:	jne    0x14000dd8d
   14000dd47:	mov    DWORD PTR [rbp-0x69],0x80070057
   14000dd4e:	lea    rax,[rip+0x102cb]        # 0x14001e020
   14000dd55:	mov    rcx,QWORD PTR [rip+0x102c4]        # 0x14001e020
   14000dd5c:	cmp    rcx,rax
   14000dd5f:	je     0x14000e0fd
   14000dd65:	test   BYTE PTR [rcx+0x1c],0x4
   14000dd69:	je     0x14000e0fd
   14000dd6f:	lea    edx,[rbx+0x1a]
   14000dd72:	mov    r9d,0x80070057
   14000dd78:	lea    r8,[rip+0xa721]        # 0x1400184a0
   14000dd7f:	mov    rcx,QWORD PTR [rcx+0x10]
   14000dd83:	call   0x140001228
   14000dd88:	jmp    0x14000e0fd
   14000dd8d:	mov    r13d,ebx
   14000dd90:	cmp    r14d,r12d
   14000dd93:	setne  r13b
   14000dd97:	lea    r9,[rbp-0x69]
   14000dd9b:	lea    r8,[rbp-0x49]
   14000dd9f:	mov    edi,0x20
   14000dda4:	mov    edx,edi
   14000dda6:	mov    rcx,r15
   14000dda9:	call   0x14000c23c
   14000ddae:	cmp    DWORD PTR [rbp-0x69],ebx
   14000ddb1:	jl     0x14000e0fa
   14000ddb7:	cmp    WORD PTR [rbp-0x37],di
   14000ddbb:	jne    0x14000e0f3
   14000ddc1:	mov    edx,DWORD PTR [rbp-0x41]
   14000ddc4:	test   edx,edx
   14000ddc6:	jle    0x14000e0f3
   14000ddcc:	mov    r8d,DWORD PTR [rbp-0x45]
   14000ddd0:	test   r8d,r8d
   14000ddd3:	jle    0x14000e0f3
   14000ddd9:	mov    ecx,r8d
   14000dddc:	imul   rcx,rdx
   14000dde0:	mov    r9d,0xffffffff
   14000dde6:	cmp    rcx,r9
   14000dde9:	ja     0x14000e0ec
   14000ddef:	mov    eax,ecx
   14000ddf1:	shl    rax,0x2
   14000ddf5:	cmp    rax,r9
   14000ddf8:	ja     0x14000e0ec
   14000ddfe:	cmp    eax,0x7fffffff
   14000de03:	ja     0x14000e0ec
   14000de09:	mov    DWORD PTR [rbp-0x11],0x28
   14000de10:	mov    DWORD PTR [rbp-0x9],edx
   14000de13:	mov    DWORD PTR [rbp-0xd],r8d
   14000de17:	mov    QWORD PTR [rbp-0x5],0x200001
   14000de1f:	mov    DWORD PTR [rbp+0x3],eax
   14000de22:	mov    QWORD PTR [rbp+0x7],rbx
   14000de26:	mov    QWORD PTR [rbp+0xf],rbx
   14000de2a:	movsxd rsi,eax
   14000de2d:	mov    rcx,rsi
   14000de30:	call   0x1400142ac
   14000de35:	mov    rdi,rax
   14000de38:	test   rax,rax
   14000de3b:	jne    0x14000de83
   14000de3d:	mov    DWORD PTR [rbp-0x69],0x8007000e
   14000de44:	lea    rax,[rip+0x101d5]        # 0x14001e020
   14000de4b:	mov    rcx,QWORD PTR [rip+0x101ce]        # 0x14001e020
   14000de52:	cmp    rcx,rax
   14000de55:	je     0x14000e0fa
   14000de5b:	test   BYTE PTR [rcx+0x1c],0x4
   14000de5f:	je     0x14000e0fa
   14000de65:	lea    edx,[rdi+0x1b]
   14000de68:	mov    r9d,0x8007000e
   14000de6e:	lea    r8,[rip+0xa62b]        # 0x1400184a0
   14000de75:	mov    rcx,QWORD PTR [rcx+0x10]
   14000de79:	call   0x140001228
   14000de7e:	jmp    0x14000e0fa
   14000de83:	mov    DWORD PTR [rsp+0x30],ebx
   14000de87:	lea    rax,[rbp-0x11]
   14000de8b:	mov    QWORD PTR [rsp+0x28],rax
   14000de90:	mov    QWORD PTR [rsp+0x20],rdi
   14000de95:	mov    r9d,DWORD PTR [rbp-0x41]
   14000de99:	xor    r8d,r8d
   14000de9c:	mov    rdx,r15
   14000de9f:	mov    rcx,QWORD PTR [rbp-0x59]
   14000dea3:	call   QWORD PTR [rip+0x8287]        # 0x140016130
   14000dea9:	cmp    eax,DWORD PTR [rbp-0x41]
   14000deac:	je     0x14000df04
   14000deae:	call   QWORD PTR [rip+0x83d4]        # 0x140016288
   14000deb4:	movzx  r9d,ax
   14000deb8:	or     r9d,0x80070000
   14000debf:	test   eax,eax
   14000dec1:	cmovle r9d,eax
   14000dec5:	mov    DWORD PTR [rbp-0x69],r9d
   14000dec9:	lea    rax,[rip+0x10150]        # 0x14001e020
   14000ded0:	mov    rcx,QWORD PTR [rip+0x10149]        # 0x14001e020
   14000ded7:	cmp    rcx,rax
   14000deda:	je     0x14000e0e2
   14000dee0:	test   BYTE PTR [rcx+0x1c],0x4
   14000dee4:	je     0x14000e0e2
   14000deea:	mov    edx,0x1c
   14000deef:	lea    r8,[rip+0xa5aa]        # 0x1400184a0
   14000def6:	mov    rcx,QWORD PTR [rcx+0x10]
   14000defa:	call   0x140001228
   14000deff:	jmp    0x14000e0e2
   14000df04:	test   r13d,r13d
   14000df07:	je     0x14000e02a
   14000df0d:	movzx  r11d,r14w
   14000df11:	shr    r11w,0x8
   14000df16:	mov    r10d,r14d
   14000df19:	shr    r10d,0x10
   14000df1d:	movzx  eax,r12w
   14000df21:	shr    ax,0x8
   14000df25:	mov    WORD PTR [rbp-0x65],ax
   14000df29:	mov    eax,r12d
   14000df2c:	shr    eax,0x10
   14000df2f:	mov    DWORD PTR [rbp-0x61],eax
   14000df32:	test   rsi,rsi
   14000df35:	jle    0x14000e0bc
   14000df3b:	mov    r9,rdi
   14000df3e:	dec    rsi
   14000df41:	shr    rsi,0x2
   14000df45:	inc    rsi
   14000df48:	mov    r13d,0x80
   14000df4e:	movzx  r15d,WORD PTR [rbp-0x65]
   14000df53:	mov    ebx,eax
   14000df55:	cmp    BYTE PTR [r9],r10b
   14000df58:	jne    0x14000dfa5
   14000df5a:	cmp    BYTE PTR [r9+0x1],r11b
   14000df5e:	jne    0x14000dfa5
   14000df60:	cmp    BYTE PTR [r9+0x2],r14b
   14000df64:	jne    0x14000dfa5
   14000df66:	movzx  r8d,BYTE PTR [r9+0x3]
   14000df6b:	movzx  ecx,bl
   14000df6e:	imul   ecx,r8d
   14000df72:	add    ecx,r13d
   14000df75:	mov    eax,0x80808081
   14000df7a:	imul   ecx
   14000df7c:	add    edx,ecx
   14000df7e:	sar    edx,0x7
   14000df81:	mov    eax,edx
   14000df83:	shr    eax,0x1f
   14000df86:	add    edx,eax
   14000df88:	mov    BYTE PTR [r9],dl
   14000df8b:	movzx  ecx,r15b
   14000df8f:	imul   ecx,r8d
   14000df93:	add    ecx,r13d
   14000df96:	mov    eax,0x80808081
   14000df9b:	imul   ecx
   14000df9d:	add    edx,ecx
   14000df9f:	movzx  ecx,r12b
   14000dfa3:	jmp    0x14000dfe5
   14000dfa5:	movzx  r8d,BYTE PTR [r9+0x3]
   14000dfaa:	movzx  ecx,BYTE PTR [r9]
   14000dfae:	imul   ecx,r8d
   14000dfb2:	add    ecx,r13d
   14000dfb5:	mov    eax,0x80808081
   14000dfba:	imul   ecx
   14000dfbc:	add    edx,ecx
   14000dfbe:	sar    edx,0x7
   14000dfc1:	mov    eax,edx
   14000dfc3:	shr    eax,0x1f
   14000dfc6:	add    edx,eax
   14000dfc8:	mov    BYTE PTR [r9],dl
   14000dfcb:	movzx  ecx,BYTE PTR [r9+0x1]
   14000dfd0:	imul   ecx,r8d
   14000dfd4:	add    ecx,r13d
   14000dfd7:	mov    eax,0x80808081
   14000dfdc:	imul   ecx
   14000dfde:	add    edx,ecx
   14000dfe0:	movzx  ecx,BYTE PTR [r9+0x2]
   14000dfe5:	sar    edx,0x7
   14000dfe8:	mov    eax,edx
   14000dfea:	shr    eax,0x1f
   14000dfed:	add    edx,eax
   14000dfef:	imul   ecx,r8d
   14000dff3:	mov    BYTE PTR [r9+0x1],dl
   14000dff7:	mov    eax,0x80808081
   14000dffc:	add    ecx,r13d
   14000dfff:	imul   ecx
   14000e001:	add    edx,ecx
   14000e003:	sar    edx,0x7
   14000e006:	mov    eax,edx
   14000e008:	shr    eax,0x1f
   14000e00b:	add    edx,eax
   14000e00d:	mov    BYTE PTR [r9+0x2],dl
   14000e011:	add    r9,0x4
   14000e015:	sub    rsi,0x1
   14000e019:	jne    0x14000df55
   14000e01f:	xor    ebx,ebx
   14000e021:	mov    r15,QWORD PTR [rbp-0x51]
   14000e025:	jmp    0x14000e0bc
   14000e02a:	test   rsi,rsi
   14000e02d:	jle    0x14000e0bc
   14000e033:	mov    r9,rdi
   14000e036:	dec    rsi
   14000e039:	shr    rsi,0x2
   14000e03d:	inc    rsi
   14000e040:	mov    r13d,0x80
   14000e046:	mov    r10d,0x80808081
   14000e04c:	movzx  r8d,BYTE PTR [r9+0x3]
   14000e051:	movzx  ecx,BYTE PTR [r9]
   14000e055:	imul   ecx,r8d
   14000e059:	add    ecx,r13d
   14000e05c:	mov    eax,r10d
   14000e05f:	imul   ecx
   14000e061:	add    edx,ecx
   14000e063:	sar    edx,0x7
   14000e066:	mov    eax,edx
   14000e068:	shr    eax,0x1f
   14000e06b:	add    edx,eax
   14000e06d:	mov    BYTE PTR [r9],dl
   14000e070:	movzx  ecx,BYTE PTR [r9+0x1]
   14000e075:	imul   ecx,r8d
   14000e079:	add    ecx,r13d
   14000e07c:	mov    eax,r10d
   14000e07f:	imul   ecx
   14000e081:	add    edx,ecx
   14000e083:	sar    edx,0x7
   14000e086:	mov    eax,edx
   14000e088:	shr    eax,0x1f
   14000e08b:	add    edx,eax
   14000e08d:	mov    BYTE PTR [r9+0x1],dl
   14000e091:	movzx  ecx,BYTE PTR [r9+0x2]
   14000e096:	imul   ecx,r8d
   14000e09a:	add    ecx,r13d
   14000e09d:	mov    eax,r10d
   14000e0a0:	imul   ecx
   14000e0a2:	add    edx,ecx
   14000e0a4:	sar    edx,0x7
   14000e0a7:	mov    eax,edx
   14000e0a9:	shr    eax,0x1f
   14000e0ac:	add    edx,eax
   14000e0ae:	mov    BYTE PTR [r9+0x2],dl
   14000e0b2:	lea    r9,[r9+0x4]
   14000e0b6:	sub    rsi,0x1
   14000e0ba:	jne    0x14000e04c
   14000e0bc:	mov    DWORD PTR [rsp+0x30],ebx
   14000e0c0:	lea    rax,[rbp-0x11]
   14000e0c4:	mov    QWORD PTR [rsp+0x28],rax
   14000e0c9:	mov    QWORD PTR [rsp+0x20],rdi
   14000e0ce:	mov    r9d,DWORD PTR [rbp-0x41]
   14000e0d2:	xor    r8d,r8d
   14000e0d5:	mov    rdx,r15
   14000e0d8:	mov    rcx,QWORD PTR [rbp-0x59]
   14000e0dc:	call   QWORD PTR [rip+0x8056]        # 0x140016138
   14000e0e2:	mov    rcx,rdi
   14000e0e5:	call   0x140014260
   14000e0ea:	jmp    0x14000e0fa
   14000e0ec:	mov    ebx,0x80070216
   14000e0f1:	jmp    0x14000e0fd
   14000e0f3:	mov    DWORD PTR [rbp-0x69],0x80004001
   14000e0fa:	mov    ebx,DWORD PTR [rbp-0x69]
   14000e0fd:	lea    rcx,[rbp-0x29]
   14000e101:	call   0x14000bf98
   14000e106:	mov    eax,ebx
   14000e108:	mov    rcx,QWORD PTR [rbp+0x1f]
   14000e10c:	xor    rcx,rsp
   14000e10f:	call   0x1400146a0
   14000e114:	mov    rbx,QWORD PTR [rsp+0x120]
   14000e11c:	add    rsp,0xd0
   14000e123:	pop    r15
   14000e125:	pop    r14
   14000e127:	pop    r13
   14000e129:	pop    r12
   14000e12b:	pop    rdi
   14000e12c:	pop    rsi
   14000e12d:	pop    rbp
   14000e12e:	ret    
   14000e12f:	int3   
   14000e130:	int3   
   14000e131:	int3   
   14000e132:	int3   
   14000e133:	int3   
   14000e134:	int3   
   14000e135:	int3   
   14000e136:	int3   
   14000e137:	int3   
   14000e138:	mov    r11,rsp
   14000e13b:	mov    DWORD PTR [r11+0x20],r9d
   14000e13f:	sub    rsp,0x48
   14000e143:	and    QWORD PTR [r11-0x18],0x0
   14000e148:	lea    rax,[r11+0x20]
   14000e14c:	movzx  r9d,dx
   14000e150:	lea    r8,[rip+0xabc9]        # 0x140018d20
   14000e157:	mov    QWORD PTR [r11-0x20],0x4
   14000e15f:	mov    edx,0x2b
   14000e164:	mov    QWORD PTR [r11-0x28],rax
   14000e168:	call   QWORD PTR [rip+0x8532]        # 0x1400166a0
   14000e16e:	add    rsp,0x48
   14000e172:	ret    
   14000e173:	int3   
   14000e174:	int3   
   14000e175:	int3   
   14000e176:	int3   
   14000e177:	int3   
   14000e178:	int3   
   14000e179:	int3   
   14000e17a:	int3   
   14000e17b:	int3   
   14000e17c:	mov    r11,rsp
   14000e17f:	mov    DWORD PTR [r11+0x20],r9d
   14000e183:	sub    rsp,0x58
   14000e187:	and    QWORD PTR [r11-0x18],0x0
   14000e18c:	lea    rax,[r11+0x28]
   14000e190:	mov    r9d,0x4
   14000e196:	mov    QWORD PTR [r11-0x20],r9
   14000e19a:	mov    QWORD PTR [r11-0x28],rax
   14000e19e:	lea    rax,[r11+0x20]
   14000e1a2:	mov    QWORD PTR [r11-0x30],r9
   14000e1a6:	movzx  r9d,dx
   14000e1aa:	mov    edx,0x2b
   14000e1af:	mov    QWORD PTR [r11-0x38],rax
   14000e1b3:	call   QWORD PTR [rip+0x84e7]        # 0x1400166a0
   14000e1b9:	add    rsp,0x58
   14000e1bd:	ret    
   14000e1be:	int3   
   14000e1bf:	int3   
   14000e1c0:	int3   
   14000e1c1:	int3   
   14000e1c2:	int3   
   14000e1c3:	int3   
   14000e1c4:	rex push rbx
   14000e1c6:	sub    rsp,0x30
   14000e1ca:	and    DWORD PTR [rsp+0x40],0x0
   14000e1cf:	lea    rax,[rip+0x8b82]        # 0x140016d58
   14000e1d6:	mov    QWORD PTR [rcx],rax
   14000e1d9:	lea    r8,[rsp+0x40]
   14000e1de:	mov    rbx,rcx
   14000e1e1:	lea    rdx,[rip+0xa2e8]        # 0x1400184d0
   14000e1e8:	lea    rcx,[rsp+0x20]
   14000e1ed:	call   0x14000bf4c
   14000e1f2:	and    QWORD PTR [rbx+0x50],0x0
   14000e1f7:	mov    DWORD PTR [rbx+0x8],0x1
   14000e1fe:	call   0x140012e8c
   14000e203:	lea    rdx,[rip+0x10176]        # 0x14001e380
   14000e20a:	test   eax,eax
   14000e20c:	lea    rcx,[rip+0x101fd]        # 0x14001e410
   14000e213:	cmove  rcx,rdx
   14000e217:	xor    edx,edx
   14000e219:	mov    QWORD PTR [rbx+0x50],rcx
   14000e21d:	lea    rcx,[rbx+0x10]
   14000e221:	lea    r8d,[rdx+0x40]
   14000e225:	call   0x140014b26
   14000e22a:	lea    rcx,[rsp+0x20]
   14000e22f:	call   0x14000bf98
   14000e234:	mov    rax,rbx
   14000e237:	add    rsp,0x30
   14000e23b:	pop    rbx
   14000e23c:	ret    
   14000e23d:	int3   
   14000e23e:	int3   
   14000e23f:	int3   
   14000e240:	int3   
   14000e241:	int3   
   14000e242:	int3   
   14000e243:	int3   
   14000e244:	int3   
   14000e245:	int3   
   14000e246:	int3   
   14000e247:	int3   
   14000e248:	int3   
   14000e249:	int3   
   14000e24a:	int3   
   14000e24b:	int3   
   14000e24c:	int3   
   14000e24d:	int3   
   14000e24e:	int3   
   14000e24f:	int3   
   14000e250:	mov    QWORD PTR [rsp+0x8],rbx
   14000e255:	push   rdi
   14000e256:	sub    rsp,0x20
   14000e25a:	mov    ebx,edx
   14000e25c:	mov    rdi,rcx
   14000e25f:	call   0x14000e288
   14000e264:	test   bl,0x1
   14000e267:	je     0x14000e271
   14000e269:	mov    rcx,rdi
   14000e26c:	call   0x140014254
   14000e271:	mov    rax,rdi
   14000e274:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e279:	add    rsp,0x20
   14000e27d:	pop    rdi
   14000e27e:	ret    
   14000e27f:	int3   
   14000e280:	int3   
   14000e281:	int3   
   14000e282:	int3   
   14000e283:	int3   
   14000e284:	int3   
   14000e285:	int3   
   14000e286:	int3   
   14000e287:	int3   
   14000e288:	rex push rbx
   14000e28a:	sub    rsp,0x40
   14000e28e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e297:	mov    rbx,rcx
   14000e29a:	lea    rax,[rip+0x8ab7]        # 0x140016d58
   14000e2a1:	mov    QWORD PTR [rcx],rax
   14000e2a4:	and    DWORD PTR [rsp+0x50],0x0
   14000e2a9:	lea    r8,[rsp+0x50]
   14000e2ae:	lea    rdx,[rip+0xa243]        # 0x1400184f8
   14000e2b5:	lea    rcx,[rsp+0x28]
   14000e2ba:	call   0x14000bf4c
   14000e2bf:	nop
   14000e2c0:	mov    rcx,rbx
   14000e2c3:	call   0x14000e2e0
   14000e2c8:	nop
   14000e2c9:	lea    rcx,[rsp+0x28]
   14000e2ce:	call   0x14000bf98
   14000e2d3:	add    rsp,0x40
   14000e2d7:	pop    rbx
   14000e2d8:	ret    
   14000e2d9:	int3   
   14000e2da:	int3   
   14000e2db:	int3   
   14000e2dc:	int3   
   14000e2dd:	int3   
   14000e2de:	int3   
   14000e2df:	int3   
   14000e2e0:	mov    rax,rsp
   14000e2e3:	push   rdi
   14000e2e4:	sub    rsp,0x40
   14000e2e8:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14000e2f0:	mov    QWORD PTR [rax+0x8],rbx
   14000e2f4:	mov    QWORD PTR [rax+0x10],rbp
   14000e2f8:	mov    QWORD PTR [rax+0x18],rsi
   14000e2fc:	mov    rdi,rcx
   14000e2ff:	xor    r8d,r8d
   14000e302:	lea    rdx,[rip+0xa217]        # 0x140018520
   14000e309:	lea    rcx,[rax-0x20]
   14000e30d:	call   0x14000bf4c
   14000e312:	nop
   14000e313:	add    rdi,0x10
   14000e317:	mov    ebp,0x8
   14000e31c:	mov    rsi,QWORD PTR [rdi]
   14000e31f:	test   rsi,rsi
   14000e322:	je     0x14000e341
   14000e324:	mov    rax,QWORD PTR [rsi]
   14000e327:	mov    rbx,QWORD PTR [rax]
   14000e32a:	mov    rcx,rbx
   14000e32d:	call   QWORD PTR [rip+0x83c5]        # 0x1400166f8
   14000e333:	mov    edx,0x1
   14000e338:	mov    rcx,rsi
   14000e33b:	call   rbx
   14000e33d:	and    QWORD PTR [rdi],0x0
   14000e341:	add    rdi,0x8
   14000e345:	sub    rbp,0x1
   14000e349:	jne    0x14000e31c
   14000e34b:	lea    rcx,[rsp+0x28]
   14000e350:	call   0x14000bf98
   14000e355:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e35a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000e35f:	mov    rsi,QWORD PTR [rsp+0x60]
   14000e364:	add    rsp,0x40
   14000e368:	pop    rdi
   14000e369:	ret    
   14000e36a:	int3   
   14000e36b:	int3   
   14000e36c:	int3   
   14000e36d:	int3   
   14000e36e:	int3   
   14000e36f:	int3   
   14000e370:	mov    QWORD PTR [rsp+0x8],rbx
   14000e375:	push   rdi
   14000e376:	sub    rsp,0x40
   14000e37a:	mov    rdi,rcx
   14000e37d:	lea    rdx,[rip+0xa1b4]        # 0x140018538
   14000e384:	lea    rcx,[rsp+0x30]
   14000e389:	xor    r8d,r8d
   14000e38c:	call   0x14000bf4c
   14000e391:	mov    r10,QWORD PTR [rdi+0x10]
   14000e395:	xor    ebx,ebx
   14000e397:	mov    r11,QWORD PTR [rdi+0x50]
   14000e39b:	test   r10,r10
   14000e39e:	je     0x14000e47c
   14000e3a4:	mov    rdx,QWORD PTR [rdi+0x20]
   14000e3a8:	test   rdx,rdx
   14000e3ab:	je     0x14000e47c
   14000e3b1:	mov    r8,QWORD PTR [rdi+0x30]
   14000e3b5:	test   r8,r8
   14000e3b8:	je     0x14000e47c
   14000e3be:	mov    r9,QWORD PTR [rdi+0x40]
   14000e3c2:	test   r9,r9
   14000e3c5:	je     0x14000e47c
   14000e3cb:	movups xmm0,XMMWORD PTR [r11]
   14000e3cf:	mov    rcx,QWORD PTR [r10+0x8]
   14000e3d3:	movq   rax,xmm0
   14000e3d8:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14000e3dd:	sub    rcx,rax
   14000e3e0:	jne    0x14000e3eb
   14000e3e2:	mov    rcx,QWORD PTR [r10+0x10]
   14000e3e6:	sub    rcx,QWORD PTR [rsp+0x28]
   14000e3eb:	test   rcx,rcx
   14000e3ee:	sete   bl
   14000e3f1:	test   ebx,ebx
   14000e3f3:	je     0x14000e47c
   14000e3f9:	movups xmm0,XMMWORD PTR [r11+0x20]
   14000e3fe:	mov    rcx,QWORD PTR [rdx+0x8]
   14000e402:	movq   rax,xmm0
   14000e407:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14000e40c:	sub    rcx,rax
   14000e40f:	jne    0x14000e41a
   14000e411:	mov    rcx,QWORD PTR [rdx+0x10]
   14000e415:	sub    rcx,QWORD PTR [rsp+0x28]
   14000e41a:	xor    ebx,ebx
   14000e41c:	test   rcx,rcx
   14000e41f:	sete   bl
   14000e422:	test   ebx,ebx
   14000e424:	je     0x14000e47c
   14000e426:	movups xmm0,XMMWORD PTR [r11+0x40]
   14000e42b:	mov    rcx,QWORD PTR [r8+0x8]
   14000e42f:	movq   rax,xmm0
   14000e434:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14000e439:	sub    rcx,rax
   14000e43c:	jne    0x14000e447
   14000e43e:	mov    rcx,QWORD PTR [r8+0x10]
   14000e442:	sub    rcx,QWORD PTR [rsp+0x28]
   14000e447:	xor    ebx,ebx
   14000e449:	test   rcx,rcx
   14000e44c:	sete   bl
   14000e44f:	test   ebx,ebx
   14000e451:	je     0x14000e47c
   14000e453:	movups xmm0,XMMWORD PTR [r11+0x60]
   14000e458:	mov    rcx,QWORD PTR [r9+0x8]
   14000e45c:	movq   rax,xmm0
   14000e461:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14000e466:	sub    rcx,rax
   14000e469:	jne    0x14000e474
   14000e46b:	mov    rcx,QWORD PTR [r9+0x10]
   14000e46f:	sub    rcx,QWORD PTR [rsp+0x28]
   14000e474:	xor    ebx,ebx
   14000e476:	test   rcx,rcx
   14000e479:	sete   bl
   14000e47c:	lea    rcx,[rsp+0x30]
   14000e481:	call   0x14000bf98
   14000e486:	mov    eax,ebx
   14000e488:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e48d:	add    rsp,0x40
   14000e491:	pop    rdi
   14000e492:	ret    
   14000e493:	int3   
   14000e494:	int3   
   14000e495:	int3   
   14000e496:	int3   
   14000e497:	int3   
   14000e498:	int3   
   14000e499:	int3   
   14000e49a:	int3   
   14000e49b:	int3   
   14000e49c:	mov    QWORD PTR [rsp+0x8],rbx
   14000e4a1:	push   rdi
   14000e4a2:	sub    rsp,0x40
   14000e4a6:	mov    rdi,rcx
   14000e4a9:	lea    rdx,[rip+0xa0b8]        # 0x140018568
   14000e4b0:	lea    rcx,[rsp+0x30]
   14000e4b5:	xor    r8d,r8d
   14000e4b8:	call   0x14000bf4c
   14000e4bd:	mov    r10,QWORD PTR [rdi+0x18]
   14000e4c1:	xor    ebx,ebx
   14000e4c3:	mov    r11,QWORD PTR [rdi+0x50]
   14000e4c7:	test   r10,r10
   14000e4ca:	je     0x14000e5a9
   14000e4d0:	mov    rdx,QWORD PTR [rdi+0x28]
   14000e4d4:	test   rdx,rdx
   14000e4d7:	je     0x14000e5a9
   14000e4dd:	mov    r8,QWORD PTR [rdi+0x38]
   14000e4e1:	test   r8,r8
   14000e4e4:	je     0x14000e5a9
   14000e4ea:	mov    r9,QWORD PTR [rdi+0x48]
   14000e4ee:	test   r9,r9
   14000e4f1:	je     0x14000e5a9
   14000e4f7:	movups xmm0,XMMWORD PTR [r11+0x10]
   14000e4fc:	mov    rcx,QWORD PTR [r10+0x8]
   14000e500:	movq   rax,xmm0
   14000e505:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14000e50a:	sub    rcx,rax
   14000e50d:	jne    0x14000e518
   14000e50f:	mov    rcx,QWORD PTR [r10+0x10]
   14000e513:	sub    rcx,QWORD PTR [rsp+0x28]
   14000e518:	test   rcx,rcx
   14000e51b:	sete   bl
   14000e51e:	test   ebx,ebx
   14000e520:	je     0x14000e5a9
   14000e526:	movups xmm0,XMMWORD PTR [r11+0x30]
   14000e52b:	mov    rcx,QWORD PTR [rdx+0x8]
   14000e52f:	movq   rax,xmm0
   14000e534:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14000e539:	sub    rcx,rax
   14000e53c:	jne    0x14000e547
   14000e53e:	mov    rcx,QWORD PTR [rdx+0x10]
   14000e542:	sub    rcx,QWORD PTR [rsp+0x28]
   14000e547:	xor    ebx,ebx
   14000e549:	test   rcx,rcx
   14000e54c:	sete   bl
   14000e54f:	test   ebx,ebx
   14000e551:	je     0x14000e5a9
   14000e553:	movups xmm0,XMMWORD PTR [r11+0x50]
   14000e558:	mov    rcx,QWORD PTR [r8+0x8]
   14000e55c:	movq   rax,xmm0
   14000e561:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14000e566:	sub    rcx,rax
   14000e569:	jne    0x14000e574
   14000e56b:	mov    rcx,QWORD PTR [r8+0x10]
   14000e56f:	sub    rcx,QWORD PTR [rsp+0x28]
   14000e574:	xor    ebx,ebx
   14000e576:	test   rcx,rcx
   14000e579:	sete   bl
   14000e57c:	test   ebx,ebx
   14000e57e:	je     0x14000e5a9
   14000e580:	movups xmm0,XMMWORD PTR [r11+0x70]
   14000e585:	mov    rcx,QWORD PTR [r9+0x8]
   14000e589:	movq   rax,xmm0
   14000e58e:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14000e593:	sub    rcx,rax
   14000e596:	jne    0x14000e5a1
   14000e598:	mov    rcx,QWORD PTR [r9+0x10]
   14000e59c:	sub    rcx,QWORD PTR [rsp+0x28]
   14000e5a1:	xor    ebx,ebx
   14000e5a3:	test   rcx,rcx
   14000e5a6:	sete   bl
   14000e5a9:	lea    rcx,[rsp+0x30]
   14000e5ae:	call   0x14000bf98
   14000e5b3:	mov    eax,ebx
   14000e5b5:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e5ba:	add    rsp,0x40
   14000e5be:	pop    rdi
   14000e5bf:	ret    
   14000e5c0:	int3   
   14000e5c1:	int3   
   14000e5c2:	int3   
   14000e5c3:	int3   
   14000e5c4:	int3   
   14000e5c5:	int3   
   14000e5c6:	int3   
   14000e5c7:	int3   
   14000e5c8:	mov    QWORD PTR [rsp+0x8],rbx
   14000e5cd:	mov    QWORD PTR [rsp+0x10],rsi
   14000e5d2:	mov    QWORD PTR [rsp+0x18],rdi
   14000e5d7:	push   rbp
   14000e5d8:	mov    rbp,rsp
   14000e5db:	sub    rsp,0x40
   14000e5df:	mov    rsi,rcx
   14000e5e2:	lea    rdx,[rip+0x9faf]        # 0x140018598
   14000e5e9:	lea    rcx,[rbp-0x10]
   14000e5ed:	xor    r8d,r8d
   14000e5f0:	call   0x14000bf4c
   14000e5f5:	mov    r10,QWORD PTR [rsi+0x18]
   14000e5f9:	xor    ebx,ebx
   14000e5fb:	mov    DWORD PTR [rbp-0x20],0xcefa51bc
   14000e602:	mov    edi,ebx
   14000e604:	mov    DWORD PTR [rbp-0x1c],0x47f38e42
   14000e60b:	mov    DWORD PTR [rbp-0x18],0x6a8cb1ac
   14000e612:	mov    DWORD PTR [rbp-0x14],0xebdfeca5
   14000e619:	test   r10,r10
   14000e61c:	je     0x14000e6e3
   14000e622:	mov    rdx,QWORD PTR [rsi+0x28]
   14000e626:	test   rdx,rdx
   14000e629:	je     0x14000e6e3
   14000e62f:	mov    r8,QWORD PTR [rsi+0x38]
   14000e633:	test   r8,r8
   14000e636:	je     0x14000e6e3
   14000e63c:	mov    r9,QWORD PTR [rsi+0x48]
   14000e640:	test   r9,r9
   14000e643:	je     0x14000e6e3
   14000e649:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   14000e64d:	mov    rcx,QWORD PTR [r10+0x8]
   14000e651:	movq   rax,xmm0
   14000e656:	movaps XMMWORD PTR [rbp-0x20],xmm0
   14000e65a:	sub    rcx,rax
   14000e65d:	jne    0x14000e667
   14000e65f:	mov    rcx,QWORD PTR [r10+0x10]
   14000e663:	sub    rcx,QWORD PTR [rbp-0x18]
   14000e667:	test   rcx,rcx
   14000e66a:	sete   dil
   14000e66e:	test   edi,edi
   14000e670:	je     0x14000e6e3
   14000e672:	mov    rcx,QWORD PTR [rdx+0x8]
   14000e676:	movq   rax,xmm0
   14000e67b:	movaps XMMWORD PTR [rbp-0x20],xmm0
   14000e67f:	sub    rcx,rax
   14000e682:	jne    0x14000e68c
   14000e684:	mov    rcx,QWORD PTR [rdx+0x10]
   14000e688:	sub    rcx,QWORD PTR [rbp-0x18]
   14000e68c:	test   rcx,rcx
   14000e68f:	mov    edi,ebx
   14000e691:	sete   dil
   14000e695:	test   edi,edi
   14000e697:	je     0x14000e6e3
   14000e699:	mov    rcx,QWORD PTR [r8+0x8]
   14000e69d:	movq   rax,xmm0
   14000e6a2:	movaps XMMWORD PTR [rbp-0x20],xmm0
   14000e6a6:	sub    rcx,rax
   14000e6a9:	jne    0x14000e6b3
   14000e6ab:	mov    rcx,QWORD PTR [r8+0x10]
   14000e6af:	sub    rcx,QWORD PTR [rbp-0x18]
   14000e6b3:	test   rcx,rcx
   14000e6b6:	mov    edi,ebx
   14000e6b8:	sete   dil
   14000e6bc:	test   edi,edi
   14000e6be:	je     0x14000e6e3
   14000e6c0:	mov    rcx,QWORD PTR [r9+0x8]
   14000e6c4:	movq   rax,xmm0
   14000e6c9:	movaps XMMWORD PTR [rbp-0x20],xmm0
   14000e6cd:	sub    rcx,rax
   14000e6d0:	jne    0x14000e6da
   14000e6d2:	mov    rcx,QWORD PTR [r9+0x10]
   14000e6d6:	sub    rcx,QWORD PTR [rbp-0x18]
   14000e6da:	test   rcx,rcx
   14000e6dd:	mov    edi,ebx
   14000e6df:	sete   dil
   14000e6e3:	lea    rcx,[rbp-0x10]
   14000e6e7:	call   0x14000bf98
   14000e6ec:	mov    rsi,QWORD PTR [rsp+0x58]
   14000e6f1:	test   edi,edi
   14000e6f3:	mov    rdi,QWORD PTR [rsp+0x60]
   14000e6f8:	sete   bl
   14000e6fb:	mov    eax,ebx
   14000e6fd:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e702:	add    rsp,0x40
   14000e706:	pop    rbp
   14000e707:	ret    
   14000e708:	int3   
   14000e709:	int3   
   14000e70a:	int3   
   14000e70b:	int3   
   14000e70c:	int3   
   14000e70d:	int3   
   14000e70e:	int3   
   14000e70f:	int3   
   14000e710:	mov    QWORD PTR [rsp+0x8],rbx
   14000e715:	push   rdi
   14000e716:	sub    rsp,0x30
   14000e71a:	mov    rdi,rcx
   14000e71d:	lea    rdx,[rip+0x9e9c]        # 0x1400185c0
   14000e724:	lea    rcx,[rsp+0x20]
   14000e729:	xor    r8d,r8d
   14000e72c:	call   0x14000bf4c
   14000e731:	mov    rcx,rdi
   14000e734:	call   0x14000e370
   14000e739:	xor    ebx,ebx
   14000e73b:	test   eax,eax
   14000e73d:	je     0x14000e75c
   14000e73f:	mov    rcx,rdi
   14000e742:	call   0x14000e49c
   14000e747:	test   eax,eax
   14000e749:	jne    0x14000e757
   14000e74b:	mov    rcx,rdi
   14000e74e:	call   0x14000e5c8
   14000e753:	test   eax,eax
   14000e755:	jne    0x14000e75c
   14000e757:	mov    ebx,0x1
   14000e75c:	lea    rcx,[rsp+0x20]
   14000e761:	call   0x14000bf98
   14000e766:	mov    eax,ebx
   14000e768:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e76d:	add    rsp,0x30
   14000e771:	pop    rdi
   14000e772:	ret    
   14000e773:	int3   
   14000e774:	int3   
   14000e775:	int3   
   14000e776:	int3   
   14000e777:	int3   
   14000e778:	int3   
   14000e779:	int3   
   14000e77a:	int3   
   14000e77b:	int3   
   14000e77c:	mov    rax,rsp
   14000e77f:	push   rbp
   14000e780:	push   rdi
   14000e781:	push   r12
   14000e783:	push   r14
   14000e785:	push   r15
   14000e787:	lea    rbp,[rax-0x5f]
   14000e78b:	sub    rsp,0x100
   14000e792:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000e79b:	mov    QWORD PTR [rax+0x18],rbx
   14000e79f:	mov    QWORD PTR [rax+0x20],rsi
   14000e7a3:	mov    rax,QWORD PTR [rip+0xf866]        # 0x14001e010
   14000e7aa:	xor    rax,rsp
   14000e7ad:	mov    QWORD PTR [rbp+0x27],rax
   14000e7b1:	mov    r15,rdx
   14000e7b4:	mov    r14,rcx
   14000e7b7:	and    DWORD PTR [rsp+0x20],0x0
   14000e7bc:	lea    r8,[rsp+0x20]
   14000e7c1:	lea    rdx,[rip+0x9e20]        # 0x1400185e8
   14000e7c8:	lea    rcx,[rsp+0x48]
   14000e7cd:	call   0x14000bf4c
   14000e7d2:	nop
   14000e7d3:	test   r15,r15
   14000e7d6:	jne    0x14000e825
   14000e7d8:	mov    ebx,0x80070057
   14000e7dd:	mov    DWORD PTR [rsp+0x20],ebx
   14000e7e1:	lea    rax,[rip+0xf838]        # 0x14001e020
   14000e7e8:	mov    rcx,QWORD PTR [rip+0xf831]        # 0x14001e020
   14000e7ef:	cmp    rcx,rax
   14000e7f2:	je     0x14000e962
   14000e7f8:	test   BYTE PTR [rcx+0x1c],0x4
   14000e7fc:	je     0x14000e962
   14000e802:	lea    edx,[r15+0x11]
   14000e806:	mov    r9d,0x80070057
   14000e80c:	lea    r8,[rip+0x9f95]        # 0x1400187a8
   14000e813:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e817:	call   0x140001228
   14000e81c:	mov    ebx,DWORD PTR [rsp+0x20]
   14000e820:	jmp    0x14000e962
   14000e825:	mov    ebx,0x80
   14000e82a:	mov    r8d,ebx
   14000e82d:	xor    edx,edx
   14000e82f:	lea    rcx,[rbp-0x59]
   14000e833:	call   0x140014b26
   14000e838:	xor    r9d,r9d
   14000e83b:	lea    r8,[rbp-0x59]
   14000e83f:	mov    edx,ebx
   14000e841:	lea    ecx,[rbx+0x18]
   14000e844:	call   QWORD PTR [rip+0x7bf6]        # 0x140016440
   14000e84a:	test   eax,eax
   14000e84c:	jne    0x14000e854
   14000e84e:	call   QWORD PTR [rip+0x7a34]        # 0x140016288
   14000e854:	xor    edi,edi
   14000e856:	xor    esi,esi
   14000e858:	xor    edx,edx
   14000e85a:	mov    ecx,edi
   14000e85c:	test   edi,edi
   14000e85e:	je     0x14000e8b1
   14000e860:	sub    ecx,0x1
   14000e863:	je     0x14000e8ab
   14000e865:	sub    ecx,0x1
   14000e868:	je     0x14000e8a5
   14000e86a:	sub    ecx,0x1
   14000e86d:	je     0x14000e89f
   14000e86f:	sub    ecx,0x1
   14000e872:	je     0x14000e899
   14000e874:	sub    ecx,0x1
   14000e877:	je     0x14000e893
   14000e879:	sub    ecx,0x1
   14000e87c:	je     0x14000e88d
   14000e87e:	cmp    ecx,0x1
   14000e881:	je     0x14000e887
   14000e883:	xor    eax,eax
   14000e885:	jmp    0x14000e8b5
   14000e887:	lea    rax,[rbp-0x9]
   14000e88b:	jmp    0x14000e8b5
   14000e88d:	lea    rax,[rbp+0x7]
   14000e891:	jmp    0x14000e8b5
   14000e893:	lea    rax,[rbp+0x17]
   14000e897:	jmp    0x14000e8b5
   14000e899:	lea    rax,[rbp-0x59]
   14000e89d:	jmp    0x14000e8b5
   14000e89f:	lea    rax,[rbp-0x49]
   14000e8a3:	jmp    0x14000e8b5
   14000e8a5:	lea    rax,[rbp-0x39]
   14000e8a9:	jmp    0x14000e8b5
   14000e8ab:	lea    rax,[rbp-0x29]
   14000e8af:	jmp    0x14000e8b5
   14000e8b1:	lea    rax,[rbp-0x19]
   14000e8b5:	movups xmm0,XMMWORD PTR [rax]
   14000e8b8:	movups XMMWORD PTR [rbp-0x71],xmm0
   14000e8bc:	xor    r12d,r12d
   14000e8bf:	movq   rbx,xmm0
   14000e8c4:	test   rbx,rbx
   14000e8c7:	jne    0x14000e8cf
   14000e8c9:	cmp    QWORD PTR [rbp-0x69],r12
   14000e8cd:	je     0x14000e8eb
   14000e8cf:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14000e8d5:	movsxd rax,edi
   14000e8d8:	lea    r8,[r15+rax*8]
   14000e8dc:	lea    rdx,[rsp+0x30]
   14000e8e1:	mov    rcx,r14
   14000e8e4:	call   0x14000ee00
   14000e8e9:	mov    edx,eax
   14000e8eb:	cmp    r12,rbx
   14000e8ee:	jne    0x14000e8f6
   14000e8f0:	cmp    r12,QWORD PTR [rbp-0x69]
   14000e8f4:	je     0x14000e8fa
   14000e8f6:	test   edx,edx
   14000e8f8:	jns    0x14000e944
   14000e8fa:	mov    rax,QWORD PTR [r14+0x50]
   14000e8fe:	movups xmm0,XMMWORD PTR [rax+rsi*1]
   14000e902:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14000e908:	movsxd rax,edi
   14000e90b:	lea    rbx,[r15+rax*8]
   14000e90f:	mov    r8,rbx
   14000e912:	lea    rdx,[rsp+0x30]
   14000e917:	mov    rcx,r14
   14000e91a:	call   0x14000ee00
   14000e91f:	mov    edx,eax
   14000e921:	test   eax,eax
   14000e923:	jns    0x14000e944
   14000e925:	movaps xmm0,XMMWORD PTR [rip+0xf704]        # 0x14001e030
   14000e92c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14000e932:	mov    r8,rbx
   14000e935:	lea    rdx,[rsp+0x30]
   14000e93a:	mov    rcx,r14
   14000e93d:	call   0x14000ee00
   14000e942:	mov    edx,eax
   14000e944:	mov    ebx,DWORD PTR [rsp+0x20]
   14000e948:	test   ebx,ebx
   14000e94a:	cmovne edx,ebx
   14000e94d:	mov    ebx,edx
   14000e94f:	mov    DWORD PTR [rsp+0x20],edx
   14000e953:	inc    edi
   14000e955:	add    rsi,0x10
   14000e959:	cmp    edi,0x8
   14000e95c:	jl     0x14000e858
   14000e962:	lea    rcx,[rsp+0x48]
   14000e967:	call   0x14000bf98
   14000e96c:	mov    eax,ebx
   14000e96e:	mov    rcx,QWORD PTR [rbp+0x27]
   14000e972:	xor    rcx,rsp
   14000e975:	call   0x1400146a0
   14000e97a:	lea    r11,[rsp+0x100]
   14000e982:	mov    rbx,QWORD PTR [r11+0x40]
   14000e986:	mov    rsi,QWORD PTR [r11+0x48]
   14000e98a:	mov    rsp,r11
   14000e98d:	pop    r15
   14000e98f:	pop    r14
   14000e991:	pop    r12
   14000e993:	pop    rdi
   14000e994:	pop    rbp
   14000e995:	ret    
   14000e996:	int3   
   14000e997:	int3   
   14000e998:	int3   
   14000e999:	int3   
   14000e99a:	int3   
   14000e99b:	int3   
   14000e99c:	rex push rbx
   14000e99e:	sub    rsp,0x70
   14000e9a2:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000e9ab:	mov    rax,QWORD PTR [rip+0xf65e]        # 0x14001e010
   14000e9b2:	xor    rax,rsp
   14000e9b5:	mov    QWORD PTR [rsp+0x60],rax
   14000e9ba:	mov    rbx,rcx
   14000e9bd:	and    DWORD PTR [rsp+0x20],0x0
   14000e9c2:	lea    r8,[rsp+0x20]
   14000e9c7:	lea    rdx,[rip+0x9c4a]        # 0x140018618
   14000e9ce:	lea    rcx,[rsp+0x30]
   14000e9d3:	call   0x14000bf4c
   14000e9d8:	nop
   14000e9d9:	mov    DWORD PTR [rbx+0x8],0x1
   14000e9e0:	mov    DWORD PTR [rbx+0xc],0x32
   14000e9e7:	xor    r9d,r9d
   14000e9ea:	lea    r8,[rsp+0x40]
   14000e9ef:	lea    edx,[r9+0x20]
   14000e9f3:	lea    ecx,[rdx+0x74]
   14000e9f6:	call   QWORD PTR [rip+0x7a44]        # 0x140016440
   14000e9fc:	xor    edx,edx
   14000e9fe:	test   eax,eax
   14000ea00:	jne    0x14000ea12
   14000ea02:	call   QWORD PTR [rip+0x7880]        # 0x140016288
   14000ea08:	mov    edx,eax
   14000ea0a:	or     eax,0xffffffff
   14000ea0d:	test   edx,edx
   14000ea0f:	cmove  edx,eax
   14000ea12:	movzx  ecx,dx
   14000ea15:	or     ecx,0x80070000
   14000ea1b:	test   edx,edx
   14000ea1d:	cmovle ecx,edx
   14000ea20:	mov    DWORD PTR [rsp+0x20],ecx
   14000ea24:	test   ecx,ecx
   14000ea26:	js     0x14000ea45
   14000ea28:	mov    ecx,DWORD PTR [rsp+0x58]
   14000ea2c:	call   0x14000f104
   14000ea31:	mov    DWORD PTR [rbx+0x8],eax
   14000ea34:	mov    eax,0x64
   14000ea39:	cmp    DWORD PTR [rsp+0x5c],eax
   14000ea3d:	cmovb  eax,DWORD PTR [rsp+0x5c]
   14000ea42:	mov    DWORD PTR [rbx+0xc],eax
   14000ea45:	mov    rcx,rbx
   14000ea48:	call   0x14000e2e0
   14000ea4d:	lea    rdx,[rbx+0x10]
   14000ea51:	mov    rcx,rbx
   14000ea54:	call   0x14000e77c
   14000ea59:	mov    ebx,DWORD PTR [rsp+0x20]
   14000ea5d:	test   ebx,ebx
   14000ea5f:	cmovns ebx,eax
   14000ea62:	mov    DWORD PTR [rsp+0x20],ebx
   14000ea66:	lea    rcx,[rsp+0x30]
   14000ea6b:	call   0x14000bf98
   14000ea70:	mov    eax,ebx
   14000ea72:	mov    rcx,QWORD PTR [rsp+0x60]
   14000ea77:	xor    rcx,rsp
   14000ea7a:	call   0x1400146a0
   14000ea7f:	add    rsp,0x70
   14000ea83:	pop    rbx
   14000ea84:	ret    
   14000ea85:	int3   
   14000ea86:	int3   
   14000ea87:	int3   
   14000ea88:	int3   
   14000ea89:	int3   
   14000ea8a:	int3   
   14000ea8b:	int3   
   14000ea8c:	mov    rax,rsp
   14000ea8f:	mov    QWORD PTR [rax+0x10],rbx
   14000ea93:	mov    QWORD PTR [rax+0x18],rsi
   14000ea97:	mov    QWORD PTR [rax+0x20],rdi
   14000ea9b:	push   rbp
   14000ea9c:	push   r14
   14000ea9e:	push   r15
   14000eaa0:	lea    rbp,[rax-0x48]
   14000eaa4:	sub    rsp,0x130
   14000eaab:	movaps XMMWORD PTR [rax-0x28],xmm6
   14000eaaf:	mov    rax,QWORD PTR [rip+0xf55a]        # 0x14001e010
   14000eab6:	xor    rax,rsp
   14000eab9:	mov    QWORD PTR [rbp+0x10],rax
   14000eabd:	and    DWORD PTR [rsp+0x20],0x0
   14000eac2:	lea    r8,[rsp+0x20]
   14000eac7:	mov    rsi,rcx
   14000eaca:	lea    rdx,[rip+0x9b6f]        # 0x140018640
   14000ead1:	lea    rcx,[rsp+0x40]
   14000ead6:	call   0x14000bf4c
   14000eadb:	mov    edx,0x80
   14000eae0:	lea    r8,[rbp-0x70]
   14000eae4:	xor    r9d,r9d
   14000eae7:	lea    ecx,[rdx+0x18]
   14000eaea:	call   QWORD PTR [rip+0x7950]        # 0x140016440
   14000eaf0:	test   eax,eax
   14000eaf2:	jne    0x14000eafa
   14000eaf4:	call   QWORD PTR [rip+0x778e]        # 0x140016288
   14000eafa:	xor    edi,edi
   14000eafc:	lea    r8,[rsp+0x70]
   14000eb01:	xor    r9d,r9d
   14000eb04:	lea    r14d,[rdi+0x20]
   14000eb08:	mov    edx,r14d
   14000eb0b:	lea    ecx,[r14+0x74]
   14000eb0f:	call   QWORD PTR [rip+0x792b]        # 0x140016440
   14000eb15:	or     r15d,0xffffffff
   14000eb19:	test   eax,eax
   14000eb1b:	jne    0x14000eb2b
   14000eb1d:	call   QWORD PTR [rip+0x7765]        # 0x140016288
   14000eb23:	test   eax,eax
   14000eb25:	mov    edi,eax
   14000eb27:	cmove  edi,r15d
   14000eb2b:	movzx  ebx,di
   14000eb2e:	or     ebx,0x80070000
   14000eb34:	test   edi,edi
   14000eb36:	cmovle ebx,edi
   14000eb39:	mov    DWORD PTR [rsp+0x20],ebx
   14000eb3d:	test   ebx,ebx
   14000eb3f:	js     0x14000ebae
   14000eb41:	movups xmm1,XMMWORD PTR [rbp-0x80]
   14000eb45:	mov    eax,DWORD PTR [rsi+0x8]
   14000eb48:	movups xmm0,XMMWORD PTR [rsp+0x70]
   14000eb4d:	mov    edx,DWORD PTR [rsi+0xc]
   14000eb50:	psrldq xmm1,0x8
   14000eb55:	movq   rcx,xmm1
   14000eb5a:	mov    DWORD PTR [rbp-0x78],eax
   14000eb5d:	mov    DWORD PTR [rbp-0x74],edx
   14000eb60:	movups XMMWORD PTR [rsp+0x50],xmm0
   14000eb65:	cmp    ecx,eax
   14000eb67:	jne    0x14000eb71
   14000eb69:	shr    rcx,0x20
   14000eb6d:	cmp    ecx,edx
   14000eb6f:	je     0x14000ebae
   14000eb71:	xor    edi,edi
   14000eb73:	lea    r8,[rsp+0x70]
   14000eb78:	mov    edx,r14d
   14000eb7b:	mov    ecx,0x95
   14000eb80:	lea    r9d,[rdi+0x1]
   14000eb84:	call   QWORD PTR [rip+0x78b6]        # 0x140016440
   14000eb8a:	test   eax,eax
   14000eb8c:	jne    0x14000eb9c
   14000eb8e:	call   QWORD PTR [rip+0x76f4]        # 0x140016288
   14000eb94:	test   eax,eax
   14000eb96:	mov    edi,eax
   14000eb98:	cmove  edi,r15d
   14000eb9c:	movzx  ebx,di
   14000eb9f:	or     ebx,0x80070000
   14000eba5:	test   edi,edi
   14000eba7:	cmovle ebx,edi
   14000ebaa:	mov    DWORD PTR [rsp+0x20],ebx
   14000ebae:	xor    edi,edi
   14000ebb0:	lea    r14,[rsi+0x10]
   14000ebb4:	test   ebx,ebx
   14000ebb6:	js     0x14000ed2c
   14000ebbc:	mov    rsi,QWORD PTR [r14]
   14000ebbf:	test   rsi,rsi
   14000ebc2:	je     0x14000ec3c
   14000ebc4:	and    DWORD PTR [rsp+0x24],0x0
   14000ebc9:	lea    r8,[rsp+0x24]
   14000ebce:	lea    rdx,[rip+0xa013]        # 0x140018be8
   14000ebd5:	lea    rcx,[rsp+0x50]
   14000ebda:	call   0x14000bf4c
   14000ebdf:	movups xmm6,XMMWORD PTR [rsi+0x8]
   14000ebe3:	lea    rcx,[rsp+0x50]
   14000ebe8:	call   0x14000bf98
   14000ebed:	movdqa XMMWORD PTR [rsp+0x30],xmm6
   14000ebf3:	xor    ecx,ecx
   14000ebf5:	mov    r8,QWORD PTR [rsp+0x38]
   14000ebfa:	mov    r9,QWORD PTR [rsp+0x30]
   14000ebff:	movsxd rax,ecx
   14000ec02:	lea    rdx,[rax+rax*4]
   14000ec06:	lea    rax,[rip+0xf423]        # 0x14001e030
   14000ec0d:	cmp    r9,QWORD PTR [rax+rdx*8]
   14000ec11:	jne    0x14000ec1a
   14000ec13:	cmp    r8,QWORD PTR [rax+rdx*8+0x8]
   14000ec18:	je     0x14000ec31
   14000ec1a:	inc    ecx
   14000ec1c:	cmp    ecx,0x14
   14000ec1f:	jle    0x14000ebff
   14000ec21:	mov    rcx,QWORD PTR [r14]
   14000ec24:	call   0x140012cd0
   14000ec29:	mov    ebx,eax
   14000ec2b:	mov    DWORD PTR [rsp+0x20],eax
   14000ec2f:	jmp    0x14000ec7b
   14000ec31:	cmp    ecx,0xffffffff
   14000ec34:	je     0x14000ec21
   14000ec36:	mov    ebx,DWORD PTR [rsp+0x20]
   14000ec3a:	jmp    0x14000ec7b
   14000ec3c:	mov    rcx,QWORD PTR [rip+0xf3dd]        # 0x14001e020
   14000ec43:	lea    rax,[rip+0xf3d6]        # 0x14001e020
   14000ec4a:	cmp    rcx,rax
   14000ec4d:	je     0x14000ec74
   14000ec4f:	test   BYTE PTR [rcx+0x1c],0x4
   14000ec53:	je     0x14000ec74
   14000ec55:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ec59:	lea    r8,[rip+0x9b48]        # 0x1400187a8
   14000ec60:	mov    edx,0x12
   14000ec65:	mov    r9d,0x80004003
   14000ec6b:	call   0x140001228
   14000ec70:	mov    ebx,DWORD PTR [rsp+0x20]
   14000ec74:	movaps xmm6,XMMWORD PTR [rip+0xf3b5]        # 0x14001e030
   14000ec7b:	test   ebx,ebx
   14000ec7d:	js     0x14000ecde
   14000ec7f:	mov    ecx,edi
   14000ec81:	test   edi,edi
   14000ec83:	je     0x14000ecd6
   14000ec85:	sub    ecx,0x1
   14000ec88:	je     0x14000ecd0
   14000ec8a:	sub    ecx,0x1
   14000ec8d:	je     0x14000ecca
   14000ec8f:	sub    ecx,0x1
   14000ec92:	je     0x14000ecc4
   14000ec94:	sub    ecx,0x1
   14000ec97:	je     0x14000ecbe
   14000ec99:	sub    ecx,0x1
   14000ec9c:	je     0x14000ecb8
   14000ec9e:	sub    ecx,0x1
   14000eca1:	je     0x14000ecb2
   14000eca3:	cmp    ecx,0x1
   14000eca6:	je     0x14000ecac
   14000eca8:	xor    eax,eax
   14000ecaa:	jmp    0x14000ecda
   14000ecac:	lea    rax,[rbp-0x20]
   14000ecb0:	jmp    0x14000ecda
   14000ecb2:	lea    rax,[rbp-0x10]
   14000ecb6:	jmp    0x14000ecda
   14000ecb8:	lea    rax,[rbp+0x0]
   14000ecbc:	jmp    0x14000ecda
   14000ecbe:	lea    rax,[rbp-0x70]
   14000ecc2:	jmp    0x14000ecda
   14000ecc4:	lea    rax,[rbp-0x60]
   14000ecc8:	jmp    0x14000ecda
   14000ecca:	lea    rax,[rbp-0x50]
   14000ecce:	jmp    0x14000ecda
   14000ecd0:	lea    rax,[rbp-0x40]
   14000ecd4:	jmp    0x14000ecda
   14000ecd6:	lea    rax,[rbp-0x30]
   14000ecda:	movdqu XMMWORD PTR [rax],xmm6
   14000ecde:	inc    edi
   14000ece0:	add    r14,0x8
   14000ece4:	cmp    edi,0x8
   14000ece7:	jl     0x14000ebb4
   14000eced:	test   ebx,ebx
   14000ecef:	js     0x14000ed2c
   14000ecf1:	xor    edi,edi
   14000ecf3:	lea    r8,[rbp-0x70]
   14000ecf7:	lea    r9d,[rdi+0x3]
   14000ecfb:	lea    edx,[r9+0x7d]
   14000ecff:	lea    ecx,[rdx+0x19]
   14000ed02:	call   QWORD PTR [rip+0x7738]        # 0x140016440
   14000ed08:	test   eax,eax
   14000ed0a:	jne    0x14000ed1a
   14000ed0c:	call   QWORD PTR [rip+0x7576]        # 0x140016288
   14000ed12:	test   eax,eax
   14000ed14:	mov    edi,eax
   14000ed16:	cmove  edi,r15d
   14000ed1a:	movzx  ebx,di
   14000ed1d:	or     ebx,0x80070000
   14000ed23:	test   edi,edi
   14000ed25:	cmovle ebx,edi
   14000ed28:	mov    DWORD PTR [rsp+0x20],ebx
   14000ed2c:	lea    rcx,[rsp+0x40]
   14000ed31:	call   0x14000bf98
   14000ed36:	mov    eax,ebx
   14000ed38:	mov    rcx,QWORD PTR [rbp+0x10]
   14000ed3c:	xor    rcx,rsp
   14000ed3f:	call   0x1400146a0
   14000ed44:	lea    r11,[rsp+0x130]
   14000ed4c:	mov    rbx,QWORD PTR [r11+0x28]
   14000ed50:	mov    rsi,QWORD PTR [r11+0x30]
   14000ed54:	mov    rdi,QWORD PTR [r11+0x38]
   14000ed58:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14000ed5d:	mov    rsp,r11
   14000ed60:	pop    r15
   14000ed62:	pop    r14
   14000ed64:	pop    rbp
   14000ed65:	ret    
   14000ed66:	int3   
   14000ed67:	int3   
   14000ed68:	int3   
   14000ed69:	int3   
   14000ed6a:	int3   
   14000ed6b:	int3   
   14000ed6c:	mov    rax,rsp
   14000ed6f:	mov    QWORD PTR [rax+0x8],rbx
   14000ed73:	push   rdi
   14000ed74:	sub    rsp,0x30
   14000ed78:	and    DWORD PTR [rax+0x10],0x0
   14000ed7c:	lea    r8,[rax+0x10]
   14000ed80:	mov    ebx,edx
   14000ed82:	mov    rdi,rcx
   14000ed85:	lea    rdx,[rip+0x98dc]        # 0x140018668
   14000ed8c:	lea    rcx,[rax-0x18]
   14000ed90:	call   0x14000bf4c
   14000ed95:	cmp    ebx,0x2
   14000ed98:	jbe    0x14000edd9
   14000ed9a:	mov    ebx,0x80070057
   14000ed9f:	mov    DWORD PTR [rsp+0x48],ebx
   14000eda3:	mov    rcx,QWORD PTR [rip+0xf276]        # 0x14001e020
   14000edaa:	lea    rax,[rip+0xf26f]        # 0x14001e020
   14000edb1:	cmp    rcx,rax
   14000edb4:	je     0x14000ede0
   14000edb6:	test   BYTE PTR [rcx+0x1c],0x4
   14000edba:	je     0x14000ede0
   14000edbc:	mov    rcx,QWORD PTR [rcx+0x10]
   14000edc0:	lea    r8,[rip+0x99e1]        # 0x1400187a8
   14000edc7:	mov    edx,0x18
   14000edcc:	mov    r9d,0x80070057
   14000edd2:	call   0x140001228
   14000edd7:	jmp    0x14000eddc
   14000edd9:	mov    DWORD PTR [rdi+0x8],ebx
   14000eddc:	mov    ebx,DWORD PTR [rsp+0x48]
   14000ede0:	lea    rcx,[rsp+0x20]
   14000ede5:	call   0x14000bf98
   14000edea:	mov    eax,ebx
   14000edec:	mov    rbx,QWORD PTR [rsp+0x40]
   14000edf1:	add    rsp,0x30
   14000edf5:	pop    rdi
   14000edf6:	ret    
   14000edf7:	int3   
   14000edf8:	int3   
   14000edf9:	int3   
   14000edfa:	int3   
   14000edfb:	int3   
   14000edfc:	int3   
   14000edfd:	int3   
   14000edfe:	int3   
   14000edff:	int3   
   14000ee00:	mov    rax,rsp
   14000ee03:	push   rbp
   14000ee04:	push   rdi
   14000ee05:	push   r14
   14000ee07:	lea    rbp,[rax-0x1e8]
   14000ee0e:	sub    rsp,0x2d0
   14000ee15:	mov    QWORD PTR [rbp-0x80],0xfffffffffffffffe
   14000ee1d:	mov    QWORD PTR [rax+0x8],rbx
   14000ee21:	mov    QWORD PTR [rax+0x20],rsi
   14000ee25:	mov    rax,QWORD PTR [rip+0xf1e4]        # 0x14001e010
   14000ee2c:	xor    rax,rsp
   14000ee2f:	mov    QWORD PTR [rbp+0x1c0],rax
   14000ee36:	mov    rdi,r8
   14000ee39:	mov    rsi,rdx
   14000ee3c:	and    DWORD PTR [rsp+0x40],0x0
   14000ee41:	lea    r8,[rsp+0x40]
   14000ee46:	lea    rdx,[rip+0x983b]        # 0x140018688
   14000ee4d:	lea    rcx,[rsp+0x70]
   14000ee52:	call   0x14000bf4c
   14000ee57:	nop
   14000ee58:	test   rdi,rdi
   14000ee5b:	jne    0x14000ee95
   14000ee5d:	mov    ebx,0x80070057
   14000ee62:	mov    DWORD PTR [rsp+0x40],ebx
   14000ee66:	lea    rax,[rip+0xf1b3]        # 0x14001e020
   14000ee6d:	mov    rcx,QWORD PTR [rip+0xf1ac]        # 0x14001e020
   14000ee74:	cmp    rcx,rax
   14000ee77:	je     0x14000f030
   14000ee7d:	test   BYTE PTR [rcx+0x1c],0x4
   14000ee81:	je     0x14000f030
   14000ee87:	lea    edx,[rdi+0x1c]
   14000ee8a:	mov    r9d,0x80070057
   14000ee90:	jmp    0x14000f01c
   14000ee95:	and    QWORD PTR [rdi],0x0
   14000ee99:	movups xmm0,XMMWORD PTR [rsi]
   14000ee9c:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   14000eea2:	xor    ebx,ebx
   14000eea4:	lea    r14,[rip+0xf185]        # 0x14001e030
   14000eeab:	mov    rdx,QWORD PTR [rsp+0x58]
   14000eeb0:	mov    r8,QWORD PTR [rsp+0x50]
   14000eeb5:	movsxd rax,ebx
   14000eeb8:	lea    rcx,[rax+rax*4]
   14000eebc:	cmp    r8,QWORD PTR [r14+rcx*8]
   14000eec0:	jne    0x14000eec9
   14000eec2:	cmp    rdx,QWORD PTR [r14+rcx*8+0x8]
   14000eec7:	je     0x14000eed2
   14000eec9:	inc    ebx
   14000eecb:	cmp    ebx,0x14
   14000eece:	jg     0x14000ef41
   14000eed0:	jmp    0x14000eeb5
   14000eed2:	cmp    ebx,0xffffffff
   14000eed5:	je     0x14000ef41
   14000eed7:	mov    ecx,0x50
   14000eedc:	call   0x14001426c
   14000eee1:	mov    r8,rax
   14000eee4:	mov    QWORD PTR [rsp+0x50],rax
   14000eee9:	test   rax,rax
   14000eeec:	je     0x14000ef02
   14000eeee:	movsxd rax,ebx
   14000eef1:	lea    rcx,[rax+rax*4]
   14000eef5:	lea    rdx,[r14+rcx*8]
   14000eef9:	mov    rcx,r8
   14000eefc:	call   0x140012368
   14000ef01:	nop
   14000ef02:	mov    QWORD PTR [rdi],rax
   14000ef05:	test   rax,rax
   14000ef08:	jne    0x14000f02c
   14000ef0e:	mov    DWORD PTR [rsp+0x40],0x8007000e
   14000ef16:	lea    rax,[rip+0xf103]        # 0x14001e020
   14000ef1d:	mov    rcx,QWORD PTR [rip+0xf0fc]        # 0x14001e020
   14000ef24:	cmp    rcx,rax
   14000ef27:	je     0x14000f02c
   14000ef2d:	test   BYTE PTR [rcx+0x1c],0x4
   14000ef31:	je     0x14000f02c
   14000ef37:	mov    edx,0x1d
   14000ef3c:	jmp    0x14000f016
   14000ef41:	mov    ebx,0x224
   14000ef46:	mov    r8d,ebx
   14000ef49:	xor    edx,edx
   14000ef4b:	lea    rcx,[rbp-0x70]
   14000ef4f:	call   0x140014b26
   14000ef54:	movups xmm0,XMMWORD PTR [rsi]
   14000ef57:	movdqu XMMWORD PTR [rbp-0x70],xmm0
   14000ef5c:	mov    DWORD PTR [rbp-0x58],0x208
   14000ef63:	xor    r9d,r9d
   14000ef66:	lea    r8,[rbp-0x70]
   14000ef6a:	mov    edx,ebx
   14000ef6c:	mov    ecx,0x9a
   14000ef71:	call   QWORD PTR [rip+0x74c9]        # 0x140016440
   14000ef77:	xor    ecx,ecx
   14000ef79:	test   eax,eax
   14000ef7b:	jne    0x14000ef8d
   14000ef7d:	call   QWORD PTR [rip+0x7305]        # 0x140016288
   14000ef83:	mov    ecx,eax
   14000ef85:	or     eax,0xffffffff
   14000ef88:	test   ecx,ecx
   14000ef8a:	cmove  ecx,eax
   14000ef8d:	movzx  eax,cx
   14000ef90:	or     eax,0x80070000
   14000ef95:	test   ecx,ecx
   14000ef97:	cmovle eax,ecx
   14000ef9a:	mov    DWORD PTR [rsp+0x40],eax
   14000ef9e:	test   eax,eax
   14000efa0:	js     0x14000f02c
   14000efa6:	mov    ecx,0x50
   14000efab:	call   0x14001426c
   14000efb0:	mov    rcx,rax
   14000efb3:	mov    QWORD PTR [rsp+0x50],rax
   14000efb8:	test   rax,rax
   14000efbb:	je     0x14000efe8
   14000efbd:	movups xmm0,XMMWORD PTR [rsi]
   14000efc0:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   14000efc6:	mov    al,BYTE PTR [rbp-0x60]
   14000efc9:	mov    BYTE PTR [rsp+0x38],al
   14000efcd:	mov    eax,DWORD PTR [rbp-0x5c]
   14000efd0:	mov    DWORD PTR [rsp+0x30],eax
   14000efd4:	lea    rax,[rbp-0x54]
   14000efd8:	mov    QWORD PTR [rsp+0x28],rax
   14000efdd:	lea    rdx,[rsp+0x60]
   14000efe2:	call   0x140012440
   14000efe7:	nop
   14000efe8:	mov    QWORD PTR [rdi],rax
   14000efeb:	test   rax,rax
   14000efee:	jne    0x14000f02c
   14000eff0:	mov    DWORD PTR [rsp+0x40],0x8007000e
   14000eff8:	lea    rax,[rip+0xf021]        # 0x14001e020
   14000efff:	mov    rcx,QWORD PTR [rip+0xf01a]        # 0x14001e020
   14000f006:	cmp    rcx,rax
   14000f009:	je     0x14000f02c
   14000f00b:	test   BYTE PTR [rcx+0x1c],0x4
   14000f00f:	je     0x14000f02c
   14000f011:	mov    edx,0x1e
   14000f016:	mov    r9d,0x8007000e
   14000f01c:	lea    r8,[rip+0x9785]        # 0x1400187a8
   14000f023:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f027:	call   0x140001228
   14000f02c:	mov    ebx,DWORD PTR [rsp+0x40]
   14000f030:	lea    rcx,[rsp+0x70]
   14000f035:	call   0x14000bf98
   14000f03a:	mov    eax,ebx
   14000f03c:	mov    rcx,QWORD PTR [rbp+0x1c0]
   14000f043:	xor    rcx,rsp
   14000f046:	call   0x1400146a0
   14000f04b:	lea    r11,[rsp+0x2d0]
   14000f053:	mov    rbx,QWORD PTR [r11+0x20]
   14000f057:	mov    rsi,QWORD PTR [r11+0x38]
   14000f05b:	mov    rsp,r11
   14000f05e:	pop    r14
   14000f060:	pop    rdi
   14000f061:	pop    rbp
   14000f062:	ret    
   14000f063:	int3   
   14000f064:	int3   
   14000f065:	int3   
   14000f066:	int3   
   14000f067:	int3   
   14000f068:	int3   
   14000f069:	int3   
   14000f06a:	int3   
   14000f06b:	int3   
   14000f06c:	mov    rax,rsp
   14000f06f:	mov    QWORD PTR [rax+0x8],rbx
   14000f073:	mov    QWORD PTR [rax+0x18],rsi
   14000f077:	push   rdi
   14000f078:	sub    rsp,0x30
   14000f07c:	movsxd rdi,edx
   14000f07f:	lea    r8,[rax+0x10]
   14000f083:	mov    rsi,rcx
   14000f086:	lea    rdx,[rip+0x962b]        # 0x1400186b8
   14000f08d:	xor    ebx,ebx
   14000f08f:	lea    rcx,[rax-0x18]
   14000f093:	mov    DWORD PTR [rax+0x10],ebx
   14000f096:	call   0x14000bf4c
   14000f09b:	cmp    edi,0x8
   14000f09e:	jbe    0x14000f0dc
   14000f0a0:	mov    DWORD PTR [rsp+0x48],0x80070057
   14000f0a8:	mov    rcx,QWORD PTR [rip+0xef71]        # 0x14001e020
   14000f0af:	lea    rax,[rip+0xef6a]        # 0x14001e020
   14000f0b6:	cmp    rcx,rax
   14000f0b9:	je     0x14000f0e1
   14000f0bb:	test   BYTE PTR [rcx+0x1c],0x4
   14000f0bf:	je     0x14000f0e1
   14000f0c1:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f0c5:	lea    edx,[rbx+0x22]
   14000f0c8:	mov    r9d,0x80070057
   14000f0ce:	lea    r8,[rip+0x96d3]        # 0x1400187a8
   14000f0d5:	call   0x140001228
   14000f0da:	jmp    0x14000f0e1
   14000f0dc:	mov    rbx,QWORD PTR [rsi+rdi*8+0x10]
   14000f0e1:	lea    rcx,[rsp+0x20]
   14000f0e6:	call   0x14000bf98
   14000f0eb:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f0f0:	mov    rax,rbx
   14000f0f3:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f0f8:	add    rsp,0x30
   14000f0fc:	pop    rdi
   14000f0fd:	ret    
   14000f0fe:	int3   
   14000f0ff:	int3   
   14000f100:	int3   
   14000f101:	int3   
   14000f102:	int3   
   14000f103:	int3   
   14000f104:	mov    QWORD PTR [rsp+0x10],rbx
   14000f109:	push   rdi
   14000f10a:	sub    rsp,0x30
   14000f10e:	xor    edi,edi
   14000f110:	mov    ebx,ecx
   14000f112:	cmp    ecx,0x2
   14000f115:	jbe    0x14000f150
   14000f117:	mov    rcx,QWORD PTR [rip+0xef02]        # 0x14001e020
   14000f11e:	lea    rax,[rip+0xeefb]        # 0x14001e020
   14000f125:	cmp    rcx,rax
   14000f128:	je     0x14000f149
   14000f12a:	test   BYTE PTR [rcx+0x1c],0x4
   14000f12e:	je     0x14000f149
   14000f130:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f134:	lea    edx,[rdi+0x26]
   14000f137:	mov    r9d,0x80004005
   14000f13d:	lea    r8,[rip+0x9664]        # 0x1400187a8
   14000f144:	call   0x140001228
   14000f149:	mov    ebx,0x1
   14000f14e:	jmp    0x14000f154
   14000f150:	test   ecx,ecx
   14000f152:	je     0x14000f18e
   14000f154:	xor    r8d,r8d
   14000f157:	lea    rdx,[rip+0x9352]        # 0x1400184b0
   14000f15e:	lea    rcx,[rsp+0x20]
   14000f163:	call   0x14000bf4c
   14000f168:	lea    rcx,[rsp+0x20]
   14000f16d:	call   0x14000bf98
   14000f172:	lea    r8,[rsp+0x40]
   14000f177:	lea    rcx,[rip+0x8a8a]        # 0x140017c08
   14000f17e:	call   0x14000da0c
   14000f183:	test   eax,eax
   14000f185:	js     0x14000f18e
   14000f187:	cmp    DWORD PTR [rsp+0x40],edi
   14000f18b:	cmovne ebx,edi
   14000f18e:	cmp    ebx,0x2
   14000f191:	jne    0x14000f1af
   14000f193:	lea    r8,[rsp+0x40]
   14000f198:	lea    rcx,[rip+0x9541]        # 0x1400186e0
   14000f19f:	call   0x14000da0c
   14000f1a4:	test   eax,eax
   14000f1a6:	js     0x14000f1af
   14000f1a8:	cmp    DWORD PTR [rsp+0x40],edi
   14000f1ac:	cmovne ebx,edi
   14000f1af:	mov    eax,ebx
   14000f1b1:	mov    rbx,QWORD PTR [rsp+0x48]
   14000f1b6:	add    rsp,0x30
   14000f1ba:	pop    rdi
   14000f1bb:	ret    
   14000f1bc:	int3   
   14000f1bd:	int3   
   14000f1be:	int3   
   14000f1bf:	int3   
   14000f1c0:	int3   
   14000f1c1:	int3   
   14000f1c2:	int3   
   14000f1c3:	int3   
   14000f1c4:	mov    rax,rsp
   14000f1c7:	push   rsi
   14000f1c8:	push   rdi
   14000f1c9:	push   r13
   14000f1cb:	push   r14
   14000f1cd:	push   r15
   14000f1cf:	sub    rsp,0x60
   14000f1d3:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14000f1db:	mov    QWORD PTR [rax+0x8],rbx
   14000f1df:	mov    QWORD PTR [rax+0x18],rbp
   14000f1e3:	mov    r13,rcx
   14000f1e6:	and    DWORD PTR [rax+0x10],0x0
   14000f1ea:	lea    r8,[rax+0x10]
   14000f1ee:	lea    rdx,[rip+0x9523]        # 0x140018718
   14000f1f5:	lea    rcx,[rax-0x38]
   14000f1f9:	call   0x14000bf4c
   14000f1fe:	nop
   14000f1ff:	xor    esi,esi
   14000f201:	xor    r15d,r15d
   14000f204:	lea    rdi,[r13+0x10]
   14000f208:	mov    rbp,rdi
   14000f20b:	mov    r14,QWORD PTR [rdi]
   14000f20e:	test   r14,r14
   14000f211:	je     0x14000f230
   14000f213:	mov    rax,QWORD PTR [r14]
   14000f216:	mov    rbx,QWORD PTR [rax]
   14000f219:	mov    rcx,rbx
   14000f21c:	call   QWORD PTR [rip+0x74d6]        # 0x1400166f8
   14000f222:	mov    edx,0x1
   14000f227:	mov    rcx,r14
   14000f22a:	call   rbx
   14000f22c:	and    QWORD PTR [rdi],0x0
   14000f230:	mov    rax,QWORD PTR [r13+0x50]
   14000f234:	movups xmm0,XMMWORD PTR [rax+r15*1]
   14000f239:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000f23f:	mov    r8,rbp
   14000f242:	lea    rdx,[rsp+0x40]
   14000f247:	mov    rcx,r13
   14000f24a:	call   0x14000ee00
   14000f24f:	mov    ebx,DWORD PTR [rsp+0x98]
   14000f256:	test   ebx,ebx
   14000f258:	js     0x14000f2be
   14000f25a:	test   eax,eax
   14000f25c:	jns    0x14000f2be
   14000f25e:	mov    DWORD PTR [rsp+0x98],eax
   14000f265:	lea    rdx,[rip+0xedb4]        # 0x14001e020
   14000f26c:	mov    rcx,QWORD PTR [rip+0xedad]        # 0x14001e020
   14000f273:	cmp    rcx,rdx
   14000f276:	je     0x14000f29a
   14000f278:	test   BYTE PTR [rcx+0x1c],0x4
   14000f27c:	je     0x14000f29a
   14000f27e:	mov    edx,0x28
   14000f283:	mov    DWORD PTR [rsp+0x20],esi
   14000f287:	mov    r9d,eax
   14000f28a:	lea    r8,[rip+0x9517]        # 0x1400187a8
   14000f291:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f295:	call   0x14000e17c
   14000f29a:	movaps xmm0,XMMWORD PTR [rip+0xed8f]        # 0x14001e030
   14000f2a1:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000f2a7:	mov    r8,rbp
   14000f2aa:	lea    rdx,[rsp+0x40]
   14000f2af:	mov    rcx,r13
   14000f2b2:	call   0x14000ee00
   14000f2b7:	mov    ebx,DWORD PTR [rsp+0x98]
   14000f2be:	add    esi,0x2
   14000f2c1:	add    rbp,0x10
   14000f2c5:	add    rdi,0x10
   14000f2c9:	add    r15,0x20
   14000f2cd:	cmp    esi,0x8
   14000f2d0:	jl     0x14000f20b
   14000f2d6:	lea    rcx,[rsp+0x50]
   14000f2db:	call   0x14000bf98
   14000f2e0:	mov    eax,ebx
   14000f2e2:	lea    r11,[rsp+0x60]
   14000f2e7:	mov    rbx,QWORD PTR [r11+0x30]
   14000f2eb:	mov    rbp,QWORD PTR [r11+0x40]
   14000f2ef:	mov    rsp,r11
   14000f2f2:	pop    r15
   14000f2f4:	pop    r14
   14000f2f6:	pop    r13
   14000f2f8:	pop    rdi
   14000f2f9:	pop    rsi
   14000f2fa:	ret    
   14000f2fb:	int3   
   14000f2fc:	int3   
   14000f2fd:	int3   
   14000f2fe:	int3   
   14000f2ff:	int3   
   14000f300:	int3   
   14000f301:	int3   
   14000f302:	int3   
   14000f303:	int3   
   14000f304:	mov    rax,rsp
   14000f307:	push   rsi
   14000f308:	push   rdi
   14000f309:	push   r13
   14000f30b:	push   r14
   14000f30d:	push   r15
   14000f30f:	sub    rsp,0x60
   14000f313:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14000f31b:	mov    QWORD PTR [rax+0x8],rbx
   14000f31f:	mov    QWORD PTR [rax+0x18],rbp
   14000f323:	mov    r13,rcx
   14000f326:	and    DWORD PTR [rax+0x10],0x0
   14000f32a:	lea    r8,[rax+0x10]
   14000f32e:	lea    rdx,[rip+0x941b]        # 0x140018750
   14000f335:	lea    rcx,[rax-0x38]
   14000f339:	call   0x14000bf4c
   14000f33e:	nop
   14000f33f:	mov    esi,0x1
   14000f344:	lea    r15d,[rsi+0xf]
   14000f348:	lea    rdi,[r13+0x18]
   14000f34c:	mov    rbp,rdi
   14000f34f:	mov    r14,QWORD PTR [rdi]
   14000f352:	test   r14,r14
   14000f355:	je     0x14000f374
   14000f357:	mov    rax,QWORD PTR [r14]
   14000f35a:	mov    rbx,QWORD PTR [rax]
   14000f35d:	mov    rcx,rbx
   14000f360:	call   QWORD PTR [rip+0x7392]        # 0x1400166f8
   14000f366:	mov    edx,0x1
   14000f36b:	mov    rcx,r14
   14000f36e:	call   rbx
   14000f370:	and    QWORD PTR [rdi],0x0
   14000f374:	mov    rax,QWORD PTR [r13+0x50]
   14000f378:	movups xmm0,XMMWORD PTR [rax+r15*1]
   14000f37d:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000f383:	mov    r8,rbp
   14000f386:	lea    rdx,[rsp+0x40]
   14000f38b:	mov    rcx,r13
   14000f38e:	call   0x14000ee00
   14000f393:	mov    ebx,DWORD PTR [rsp+0x98]
   14000f39a:	test   ebx,ebx
   14000f39c:	js     0x14000f402
   14000f39e:	test   eax,eax
   14000f3a0:	jns    0x14000f402
   14000f3a2:	mov    DWORD PTR [rsp+0x98],eax
   14000f3a9:	lea    rdx,[rip+0xec70]        # 0x14001e020
   14000f3b0:	mov    rcx,QWORD PTR [rip+0xec69]        # 0x14001e020
   14000f3b7:	cmp    rcx,rdx
   14000f3ba:	je     0x14000f3de
   14000f3bc:	test   BYTE PTR [rcx+0x1c],0x4
   14000f3c0:	je     0x14000f3de
   14000f3c2:	mov    edx,0x29
   14000f3c7:	mov    DWORD PTR [rsp+0x20],esi
   14000f3cb:	mov    r9d,eax
   14000f3ce:	lea    r8,[rip+0x93d3]        # 0x1400187a8
   14000f3d5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f3d9:	call   0x14000e17c
   14000f3de:	movaps xmm0,XMMWORD PTR [rip+0xec4b]        # 0x14001e030
   14000f3e5:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000f3eb:	mov    r8,rbp
   14000f3ee:	lea    rdx,[rsp+0x40]
   14000f3f3:	mov    rcx,r13
   14000f3f6:	call   0x14000ee00
   14000f3fb:	mov    ebx,DWORD PTR [rsp+0x98]
   14000f402:	add    esi,0x2
   14000f405:	add    rbp,0x10
   14000f409:	add    rdi,0x10
   14000f40d:	add    r15,0x20
   14000f411:	cmp    esi,0x8
   14000f414:	jl     0x14000f34f
   14000f41a:	lea    rcx,[rsp+0x50]
   14000f41f:	call   0x14000bf98
   14000f424:	mov    eax,ebx
   14000f426:	lea    r11,[rsp+0x60]
   14000f42b:	mov    rbx,QWORD PTR [r11+0x30]
   14000f42f:	mov    rbp,QWORD PTR [r11+0x40]
   14000f433:	mov    rsp,r11
   14000f436:	pop    r15
   14000f438:	pop    r14
   14000f43a:	pop    r13
   14000f43c:	pop    rdi
   14000f43d:	pop    rsi
   14000f43e:	ret    
   14000f43f:	int3   
   14000f440:	int3   
   14000f441:	int3   
   14000f442:	int3   
   14000f443:	int3   
   14000f444:	int3   
   14000f445:	int3   
   14000f446:	int3   
   14000f447:	int3   
   14000f448:	mov    rax,rsp
   14000f44b:	push   rdi
   14000f44c:	push   r12
   14000f44e:	push   r13
   14000f450:	push   r14
   14000f452:	push   r15
   14000f454:	sub    rsp,0x60
   14000f458:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14000f460:	mov    QWORD PTR [rax+0x8],rbx
   14000f464:	mov    QWORD PTR [rax+0x10],rbp
   14000f468:	mov    QWORD PTR [rax+0x18],rsi
   14000f46c:	mov    r15d,r8d
   14000f46f:	mov    r12d,edx
   14000f472:	mov    r13,rcx
   14000f475:	and    DWORD PTR [rax+0x20],0x0
   14000f479:	lea    r8,[rax+0x20]
   14000f47d:	lea    rdx,[rip+0x92fc]        # 0x140018780
   14000f484:	lea    rcx,[rax-0x38]
   14000f488:	call   0x14000bf4c
   14000f48d:	nop
   14000f48e:	mov    edi,0x1
   14000f493:	lea    rsi,[r13+0x18]
   14000f497:	mov    rbp,rsi
   14000f49a:	mov    eax,edi
   14000f49c:	and    eax,0x80000001
   14000f4a1:	jge    0x14000f4aa
   14000f4a3:	dec    eax
   14000f4a5:	or     eax,0xfffffffe
   14000f4a8:	inc    eax
   14000f4aa:	test   eax,eax
   14000f4ac:	jne    0x14000f4b3
   14000f4ae:	test   r12d,r12d
   14000f4b1:	jne    0x14000f4c5
   14000f4b3:	cmp    eax,0x1
   14000f4b6:	jne    0x14000f551
   14000f4bc:	test   r15d,r15d
   14000f4bf:	je     0x14000f551
   14000f4c5:	mov    r14,QWORD PTR [rsi]
   14000f4c8:	test   r14,r14
   14000f4cb:	je     0x14000f4ea
   14000f4cd:	mov    rax,QWORD PTR [r14]
   14000f4d0:	mov    rbx,QWORD PTR [rax]
   14000f4d3:	mov    rcx,rbx
   14000f4d6:	call   QWORD PTR [rip+0x721c]        # 0x1400166f8
   14000f4dc:	mov    edx,0x1
   14000f4e1:	mov    rcx,r14
   14000f4e4:	call   rbx
   14000f4e6:	and    QWORD PTR [rsi],0x0
   14000f4ea:	movaps xmm0,XMMWORD PTR [rip+0xeb3f]        # 0x14001e030
   14000f4f1:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000f4f7:	mov    r8,rbp
   14000f4fa:	lea    rdx,[rsp+0x40]
   14000f4ff:	mov    rcx,r13
   14000f502:	call   0x14000ee00
   14000f507:	cmp    DWORD PTR [rsp+0xa8],0x0
   14000f50f:	jl     0x14000f551
   14000f511:	test   eax,eax
   14000f513:	jns    0x14000f551
   14000f515:	mov    DWORD PTR [rsp+0xa8],eax
   14000f51c:	lea    rdx,[rip+0xeafd]        # 0x14001e020
   14000f523:	mov    rcx,QWORD PTR [rip+0xeaf6]        # 0x14001e020
   14000f52a:	cmp    rcx,rdx
   14000f52d:	je     0x14000f551
   14000f52f:	test   BYTE PTR [rcx+0x1c],0x4
   14000f533:	je     0x14000f551
   14000f535:	mov    edx,0x2a
   14000f53a:	mov    DWORD PTR [rsp+0x20],edi
   14000f53e:	mov    r9d,eax
   14000f541:	lea    r8,[rip+0x9260]        # 0x1400187a8
   14000f548:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f54c:	call   0x14000e17c
   14000f551:	add    edi,0x2
   14000f554:	add    rbp,0x10
   14000f558:	add    rsi,0x10
   14000f55c:	cmp    edi,0x8
   14000f55f:	jl     0x14000f49a
   14000f565:	mov    ebx,DWORD PTR [rsp+0xa8]
   14000f56c:	lea    rcx,[rsp+0x50]
   14000f571:	call   0x14000bf98
   14000f576:	mov    eax,ebx
   14000f578:	lea    r11,[rsp+0x60]
   14000f57d:	mov    rbx,QWORD PTR [r11+0x30]
   14000f581:	mov    rbp,QWORD PTR [r11+0x38]
   14000f585:	mov    rsi,QWORD PTR [r11+0x40]
   14000f589:	mov    rsp,r11
   14000f58c:	pop    r15
   14000f58e:	pop    r14
   14000f590:	pop    r13
   14000f592:	pop    r12
   14000f594:	pop    rdi
   14000f595:	ret    
   14000f596:	int3   
   14000f597:	int3   
   14000f598:	int3   
   14000f599:	int3   
   14000f59a:	int3   
   14000f59b:	int3   
   14000f59c:	mov    QWORD PTR [rsp+0x18],r8
   14000f5a1:	mov    QWORD PTR [rsp+0x20],r9
   14000f5a6:	push   rbx
   14000f5a7:	push   rbp
   14000f5a8:	push   rsi
   14000f5a9:	push   rdi
   14000f5aa:	sub    rsp,0x28
   14000f5ae:	xor    ebp,ebp
   14000f5b0:	lea    rax,[rdx-0x1]
   14000f5b4:	cmp    rax,0x7ffffffe
   14000f5ba:	mov    rsi,rcx
   14000f5bd:	mov    edi,ebp
   14000f5bf:	mov    ecx,0x80070057
   14000f5c4:	cmova  edi,ecx
   14000f5c7:	test   edi,edi
   14000f5c9:	js     0x14000f600
   14000f5cb:	lea    rbx,[rdx-0x1]
   14000f5cf:	mov    rcx,rsi
   14000f5d2:	mov    rdx,rbx
   14000f5d5:	lea    r9,[rsp+0x68]
   14000f5da:	mov    edi,ebp
   14000f5dc:	call   QWORD PTR [rip+0x7086]        # 0x140016668
   14000f5e2:	test   eax,eax
   14000f5e4:	js     0x14000f5f5
   14000f5e6:	cdqe   
   14000f5e8:	cmp    rax,rbx
   14000f5eb:	ja     0x14000f5f5
   14000f5ed:	jne    0x14000f608
   14000f5ef:	mov    WORD PTR [rsi+rbx*2],bp
   14000f5f3:	jmp    0x14000f608
   14000f5f5:	mov    WORD PTR [rsi+rbx*2],bp
   14000f5f9:	mov    edi,0x8007007a
   14000f5fe:	jmp    0x14000f608
   14000f600:	test   rdx,rdx
   14000f603:	je     0x14000f608
   14000f605:	mov    WORD PTR [rsi],bp
   14000f608:	mov    eax,edi
   14000f60a:	add    rsp,0x28
   14000f60e:	pop    rdi
   14000f60f:	pop    rsi
   14000f610:	pop    rbp
   14000f611:	pop    rbx
   14000f612:	ret    
   14000f613:	int3   
   14000f614:	int3   
   14000f615:	int3   
   14000f616:	int3   
   14000f617:	int3   
   14000f618:	int3   
   14000f619:	int3   
   14000f61a:	int3   
   14000f61b:	int3   
   14000f61c:	mov    rax,rsp
   14000f61f:	mov    QWORD PTR [rax+0x8],rcx
   14000f623:	push   rbp
   14000f624:	push   rsi
   14000f625:	push   rdi
   14000f626:	push   r14
   14000f628:	push   r15
   14000f62a:	mov    rbp,rsp
   14000f62d:	sub    rsp,0x50
   14000f631:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   14000f639:	mov    QWORD PTR [rax+0x20],rbx
   14000f63d:	mov    rdi,rdx
   14000f640:	mov    rbx,rcx
   14000f643:	xor    r15d,r15d
   14000f646:	mov    QWORD PTR [rcx+0xf0],r15
   14000f64d:	mov    QWORD PTR [rcx+0xf8],r15
   14000f654:	mov    QWORD PTR [rcx+0x100],r15
   14000f65b:	mov    QWORD PTR [rcx+0x10c],0x4e1
   14000f666:	mov    QWORD PTR [rcx+0x118],r15
   14000f66d:	mov    QWORD PTR [rcx+0x120],r15
   14000f674:	mov    QWORD PTR [rcx+0x128],r15
   14000f67b:	mov    QWORD PTR [rcx+0x130],r15
   14000f682:	mov    QWORD PTR [rcx+0x13c],r15
   14000f689:	mov    DWORD PTR [rcx+0x144],r15d
   14000f690:	mov    QWORD PTR [rcx+0x148],r15
   14000f697:	mov    QWORD PTR [rcx+0x150],r15
   14000f69e:	mov    DWORD PTR [rcx+0x158],r15d
   14000f6a5:	mov    DWORD PTR [rcx+0x138],r15d
   14000f6ac:	mov    DWORD PTR [rbp+0x38],r15d
   14000f6b0:	mov    DWORD PTR [rbp+0x40],r15d
   14000f6b4:	lea    r8,[rbp+0x38]
   14000f6b8:	lea    rdx,[rip+0x90f9]        # 0x1400187b8
   14000f6bf:	lea    rcx,[rbp-0x18]
   14000f6c3:	call   0x14000bf4c
   14000f6c8:	nop
   14000f6c9:	mov    QWORD PTR [rbx+0x5a8],r15
   14000f6d0:	mov    DWORD PTR [rbx],r15d
   14000f6d3:	mov    DWORD PTR [rbx+0x5c0],r15d
   14000f6da:	mov    WORD PTR [rbx+0x28],r15w
   14000f6df:	lea    rcx,[rbx+0x4]
   14000f6e3:	mov    DWORD PTR [rsp+0x20],r15d
   14000f6e8:	xor    r9d,r9d
   14000f6eb:	xor    r8d,r8d
   14000f6ee:	xor    edx,edx
   14000f6f0:	call   QWORD PTR [rip+0x6c9a]        # 0x140016390
   14000f6f6:	lea    rcx,[rbx+0x368]
   14000f6fd:	lea    r14d,[r15+0x40]
   14000f701:	mov    r8d,r14d
   14000f704:	xor    edx,edx
   14000f706:	call   0x140014b26
   14000f70b:	lea    rcx,[rbx+0x3a8]
   14000f712:	mov    r8d,r14d
   14000f715:	xor    edx,edx
   14000f717:	call   0x140014b26
   14000f71c:	lea    rcx,[rbx+0x528]
   14000f723:	mov    r8d,r14d
   14000f726:	xor    edx,edx
   14000f728:	call   0x140014b26
   14000f72d:	lea    rcx,[rbx+0x568]
   14000f734:	mov    r8d,r14d
   14000f737:	xor    edx,edx
   14000f739:	call   0x140014b26
   14000f73e:	lea    rcx,[rbx+0x168]
   14000f745:	xor    edx,edx
   14000f747:	mov    r8d,0x200
   14000f74d:	call   0x140014b26
   14000f752:	lea    rax,[rbx+0x190]
   14000f759:	lea    ecx,[r15+0x8]
   14000f75d:	or     edx,0xffffffff
   14000f760:	mov    DWORD PTR [rax-0x4],edx
   14000f763:	mov    DWORD PTR [rax],edx
   14000f765:	add    rax,r14
   14000f768:	sub    rcx,0x1
   14000f76c:	jne    0x14000f760
   14000f76e:	lea    r9,[rbp+0x38]
   14000f772:	lea    edx,[rcx+0x3]
   14000f775:	mov    r8d,0xff
   14000f77b:	call   0x14000cb20
   14000f780:	mov    QWORD PTR [rbx+0x20],rax
   14000f784:	mov    DWORD PTR [rbx+0x140],0x1
   14000f78e:	mov    r14d,0xffffff
   14000f794:	mov    DWORD PTR [rbx+0x144],r14d
   14000f79b:	lea    rdx,[rbp+0x38]
   14000f79f:	mov    ecx,0xd
   14000f7a4:	call   0x14000d63c
   14000f7a9:	mov    QWORD PTR [rbx+0x18],rax
   14000f7ad:	mov    eax,0xff0000
   14000f7b2:	mov    DWORD PTR [rbx+0x150],eax
   14000f7b8:	mov    DWORD PTR [rbx+0x154],eax
   14000f7be:	mov    DWORD PTR [rbx+0x158],r14d
   14000f7c5:	mov    DWORD PTR [rbx+0x134],0x5a
   14000f7cf:	mov    DWORD PTR [rbx+0x138],0x17
   14000f7d9:	mov    QWORD PTR [rbx+0x10c],0x4e1
   14000f7e4:	mov    DWORD PTR [rbx+0x160],r15d
   14000f7eb:	mov    rcx,rbx
   14000f7ee:	call   0x140011ef0
   14000f7f3:	mov    DWORD PTR [rbp+0x38],eax
   14000f7f6:	test   eax,eax
   14000f7f8:	js     0x14000f830
   14000f7fa:	lea    rax,[rbp+0x40]
   14000f7fe:	mov    QWORD PTR [rsp+0x20],rax
   14000f803:	mov    r9d,0x64
   14000f809:	lea    r8,[rbx+0x28]
   14000f80d:	mov    edx,0x4b0
   14000f812:	mov    rcx,QWORD PTR [rbx+0x5a8]
   14000f819:	call   0x14000ce44
   14000f81e:	mov    ecx,DWORD PTR [rbp+0x40]
   14000f821:	mov    eax,DWORD PTR [rbp+0x38]
   14000f824:	test   ecx,ecx
   14000f826:	jns    0x14000f830
   14000f828:	test   eax,eax
   14000f82a:	cmovns eax,ecx
   14000f82d:	mov    DWORD PTR [rbp+0x38],eax
   14000f830:	test   rdi,rdi
   14000f833:	je     0x14000f851
   14000f835:	mov    rdx,rdi
   14000f838:	mov    rcx,rbx
   14000f83b:	call   0x14000faa8
   14000f840:	mov    ecx,eax
   14000f842:	test   eax,eax
   14000f844:	mov    eax,DWORD PTR [rbp+0x38]
   14000f847:	jns    0x14000f851
   14000f849:	test   eax,eax
   14000f84b:	cmovns eax,ecx
   14000f84e:	mov    DWORD PTR [rbp+0x38],eax
   14000f851:	cmp    DWORD PTR [rbx+0x160],r15d
   14000f858:	jne    0x14000f879
   14000f85a:	mov    edx,DWORD PTR [rbx+0x10c]
   14000f860:	mov    rcx,rbx
   14000f863:	call   0x140011808
   14000f868:	mov    ecx,eax
   14000f86a:	test   eax,eax
   14000f86c:	mov    eax,DWORD PTR [rbp+0x38]
   14000f86f:	jns    0x14000f879
   14000f871:	test   eax,eax
   14000f873:	cmovns eax,ecx
   14000f876:	mov    DWORD PTR [rbp+0x38],eax
   14000f879:	test   eax,eax
   14000f87b:	je     0x14000f8af
   14000f87d:	lea    rdx,[rip+0xe79c]        # 0x14001e020
   14000f884:	mov    rcx,QWORD PTR [rip+0xe795]        # 0x14001e020
   14000f88b:	cmp    rcx,rdx
   14000f88e:	je     0x14000f8af
   14000f890:	test   BYTE PTR [rcx+0x1c],0x10
   14000f894:	je     0x14000f8af
   14000f896:	mov    edx,0xa
   14000f89b:	mov    r9d,eax
   14000f89e:	lea    r8,[rip+0x92db]        # 0x140018b80
   14000f8a5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f8a9:	call   0x140001228
   14000f8ae:	nop
   14000f8af:	lea    rcx,[rbp-0x18]
   14000f8b3:	call   0x14000bf98
   14000f8b8:	nop
   14000f8b9:	mov    rax,rbx
   14000f8bc:	mov    rbx,QWORD PTR [rsp+0x98]
   14000f8c4:	add    rsp,0x50
   14000f8c8:	pop    r15
   14000f8ca:	pop    r14
   14000f8cc:	pop    rdi
   14000f8cd:	pop    rsi
   14000f8ce:	pop    rbp
   14000f8cf:	ret    
   14000f8d0:	int3   
   14000f8d1:	int3   
   14000f8d2:	int3   
   14000f8d3:	int3   
   14000f8d4:	int3   
   14000f8d5:	int3   
   14000f8d6:	int3   
   14000f8d7:	int3   
   14000f8d8:	mov    rax,rsp
   14000f8db:	mov    QWORD PTR [rax+0x8],rcx
   14000f8df:	push   rbp
   14000f8e0:	push   rsi
   14000f8e1:	push   rdi
   14000f8e2:	push   r14
   14000f8e4:	push   r15
   14000f8e6:	mov    rbp,rsp
   14000f8e9:	sub    rsp,0x50
   14000f8ed:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   14000f8f5:	mov    QWORD PTR [rax+0x20],rbx
   14000f8f9:	mov    rbx,rcx
   14000f8fc:	and    DWORD PTR [rbp+0x38],0x0
   14000f900:	lea    r8,[rbp+0x38]
   14000f904:	lea    rdx,[rip+0x8ee5]        # 0x1400187f0
   14000f90b:	lea    rcx,[rbp-0x18]
   14000f90f:	call   0x14000bf4c
   14000f914:	nop
   14000f915:	mov    rcx,QWORD PTR [rbx+0x5a8]
   14000f91c:	test   rcx,rcx
   14000f91f:	je     0x14000f932
   14000f921:	lea    rdx,[rbp+0x38]
   14000f925:	call   0x14000d400
   14000f92a:	and    QWORD PTR [rbx+0x5a8],0x0
   14000f932:	xor    r14d,r14d
   14000f935:	lea    rdi,[rbx+0x178]
   14000f93c:	lea    rsi,[rbx+0x568]
   14000f943:	lea    r15,[rbx+0x168]
   14000f94a:	mov    rcx,QWORD PTR [rsi-0x40]
   14000f94e:	test   rcx,rcx
   14000f951:	je     0x14000f95f
   14000f953:	xor    edx,edx
   14000f955:	call   0x14000c0d8
   14000f95a:	and    QWORD PTR [rsi-0x40],0x0
   14000f95f:	mov    rcx,QWORD PTR [rsi]
   14000f962:	test   rcx,rcx
   14000f965:	je     0x14000f972
   14000f967:	xor    edx,edx
   14000f969:	call   0x14000c0d8
   14000f96e:	and    QWORD PTR [rsi],0x0
   14000f972:	and    DWORD PTR [rbp+0x40],0x0
   14000f976:	lea    r8,[rbp+0x40]
   14000f97a:	lea    rdx,[rip+0x902f]        # 0x1400189b0
   14000f981:	lea    rcx,[rbp-0x28]
   14000f985:	call   0x14000bf4c
   14000f98a:	nop
   14000f98b:	cmp    r14d,0x8
   14000f98f:	jbe    0x14000f9ce
   14000f991:	mov    DWORD PTR [rbp+0x40],0x80070057
   14000f998:	lea    rax,[rip+0xe681]        # 0x14001e020
   14000f99f:	mov    rcx,QWORD PTR [rip+0xe67a]        # 0x14001e020
   14000f9a6:	cmp    rcx,rax
   14000f9a9:	je     0x14000fa13
   14000f9ab:	test   BYTE PTR [rcx+0x1c],0x4
   14000f9af:	je     0x14000fa13
   14000f9b1:	mov    edx,0x2a
   14000f9b6:	mov    r9d,0x80070057
   14000f9bc:	lea    r8,[rip+0x91bd]        # 0x140018b80
   14000f9c3:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f9c7:	call   0x140001228
   14000f9cc:	jmp    0x14000fa13
   14000f9ce:	mov    rcx,QWORD PTR [rdi-0x8]
   14000f9d2:	test   rcx,rcx
   14000f9d5:	je     0x14000f9e3
   14000f9d7:	xor    edx,edx
   14000f9d9:	call   0x14000c0d8
   14000f9de:	and    QWORD PTR [rdi-0x8],0x0
   14000f9e3:	mov    rcx,QWORD PTR [rdi]
   14000f9e6:	test   rcx,rcx
   14000f9e9:	je     0x14000f9f6
   14000f9eb:	xor    edx,edx
   14000f9ed:	call   0x14000c0d8
   14000f9f2:	and    QWORD PTR [rdi],0x0
   14000f9f6:	mov    rcx,QWORD PTR [rdi+0x20]
   14000f9fa:	test   rcx,rcx
   14000f9fd:	je     0x14000fa04
   14000f9ff:	call   0x140014260
   14000fa04:	xor    edx,edx
   14000fa06:	lea    r8d,[rdx+0x40]
   14000fa0a:	mov    rcx,r15
   14000fa0d:	call   0x140014b26
   14000fa12:	nop
   14000fa13:	lea    rcx,[rbp-0x28]
   14000fa17:	call   0x14000bf98
   14000fa1c:	inc    r14d
   14000fa1f:	add    r15,0x40
   14000fa23:	add    rsi,0x8
   14000fa27:	add    rdi,0x40
   14000fa2b:	cmp    r14d,0x8
   14000fa2f:	jl     0x14000f94a
   14000fa35:	mov    rcx,QWORD PTR [rbx+0x18]
   14000fa39:	test   rcx,rcx
   14000fa3c:	je     0x14000fa4a
   14000fa3e:	xor    edx,edx
   14000fa40:	call   0x14000c0d8
   14000fa45:	and    QWORD PTR [rbx+0x18],0x0
   14000fa4a:	mov    rcx,QWORD PTR [rbx+0x20]
   14000fa4e:	test   rcx,rcx
   14000fa51:	je     0x14000fa5f
   14000fa53:	xor    edx,edx
   14000fa55:	call   0x14000c0d8
   14000fa5a:	and    QWORD PTR [rbx+0x20],0x0
   14000fa5f:	mov    rcx,QWORD PTR [rbx+0x120]
   14000fa66:	test   rcx,rcx
   14000fa69:	je     0x14000fa78
   14000fa6b:	call   0x140014260
   14000fa70:	and    QWORD PTR [rbx+0x120],0x0
   14000fa78:	lea    rcx,[rbp-0x18]
   14000fa7c:	call   0x14000bf98
   14000fa81:	nop
   14000fa82:	lea    rcx,[rbx+0xf0]
   14000fa89:	mov    rbx,QWORD PTR [rsp+0x98]
   14000fa91:	add    rsp,0x50
   14000fa95:	pop    r15
   14000fa97:	pop    r14
   14000fa99:	pop    rdi
   14000fa9a:	pop    rsi
   14000fa9b:	pop    rbp
   14000fa9c:	jmp    0x1400122dc
   14000faa1:	int3   
   14000faa2:	int3   
   14000faa3:	int3   
   14000faa4:	int3   
   14000faa5:	int3   
   14000faa6:	int3   
   14000faa7:	int3   
   14000faa8:	mov    rax,rsp
   14000faab:	push   rbp
   14000faac:	push   rdi
   14000faad:	push   r13
   14000faaf:	push   r14
   14000fab1:	push   r15
   14000fab3:	mov    rbp,rsp
   14000fab6:	sub    rsp,0x40
   14000faba:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   14000fac2:	mov    QWORD PTR [rax+0x8],rbx
   14000fac6:	mov    QWORD PTR [rax+0x18],rsi
   14000faca:	mov    rbx,rdx
   14000facd:	mov    rdi,rcx
   14000fad0:	and    DWORD PTR [rbp+0x38],0x0
   14000fad4:	lea    r8,[rbp+0x38]
   14000fad8:	lea    rdx,[rip+0x8d49]        # 0x140018828
   14000fadf:	lea    rcx,[rbp-0x18]
   14000fae3:	call   0x14000bf4c
   14000fae8:	nop
   14000fae9:	test   rbx,rbx
   14000faec:	jne    0x14000fb38
   14000faee:	mov    esi,0x80070057
   14000faf3:	mov    DWORD PTR [rbp+0x38],esi
   14000faf6:	lea    r15,[rip+0xe523]        # 0x14001e020
   14000fafd:	mov    rcx,QWORD PTR [rip+0xe51c]        # 0x14001e020
   14000fb04:	cmp    rcx,r15
   14000fb07:	je     0x14000fdf3
   14000fb0d:	test   BYTE PTR [rcx+0x1c],0x4
   14000fb11:	je     0x14000fdf3
   14000fb17:	lea    edx,[rbx+0xb]
   14000fb1a:	mov    r9d,0x80070057
   14000fb20:	lea    r8,[rip+0x9059]        # 0x140018b80
   14000fb27:	mov    rcx,QWORD PTR [rcx+0x10]
   14000fb2b:	call   0x140001228
   14000fb30:	mov    esi,DWORD PTR [rbp+0x38]
   14000fb33:	jmp    0x14000fdf3
   14000fb38:	mov    r13d,0x1
   14000fb3e:	test   BYTE PTR [rbx],r13b
   14000fb41:	je     0x14000fbb5
   14000fb43:	xor    eax,eax
   14000fb45:	mov    ecx,DWORD PTR [rbx+0xc]
   14000fb48:	cmp    DWORD PTR [rdi+0xfc],ecx
   14000fb4e:	je     0x14000fb59
   14000fb50:	mov    eax,r13d
   14000fb53:	mov    DWORD PTR [rdi+0xfc],ecx
   14000fb59:	mov    ecx,DWORD PTR [rbx+0x4]
   14000fb5c:	cmp    DWORD PTR [rdi+0xf4],ecx
   14000fb62:	je     0x14000fb6d
   14000fb64:	mov    eax,r13d
   14000fb67:	mov    DWORD PTR [rdi+0xf4],ecx
   14000fb6d:	mov    ecx,DWORD PTR [rbx+0x8]
   14000fb70:	cmp    DWORD PTR [rdi+0xf8],ecx
   14000fb76:	je     0x14000fb81
   14000fb78:	mov    eax,r13d
   14000fb7b:	mov    DWORD PTR [rdi+0xf8],ecx
   14000fb81:	test   eax,eax
   14000fb83:	je     0x14000fbb5
   14000fb85:	mov    rcx,QWORD PTR [rdi+0x20]
   14000fb89:	test   rcx,rcx
   14000fb8c:	je     0x14000fb9a
   14000fb8e:	xor    edx,edx
   14000fb90:	call   0x14000c0d8
   14000fb95:	and    QWORD PTR [rdi+0x20],0x0
   14000fb9a:	xor    r9d,r9d
   14000fb9d:	mov    r8d,DWORD PTR [rdi+0xfc]
   14000fba4:	mov    edx,DWORD PTR [rdi+0xf8]
   14000fbaa:	xor    ecx,ecx
   14000fbac:	call   0x14000cb20
   14000fbb1:	mov    QWORD PTR [rdi+0x20],rax
   14000fbb5:	test   BYTE PTR [rbx],0x2
   14000fbb8:	je     0x14000fbe5
   14000fbba:	mov    rcx,QWORD PTR [rdi+0x118]
   14000fbc1:	test   rcx,rcx
   14000fbc4:	je     0x14000fbd5
   14000fbc6:	xor    edx,edx
   14000fbc8:	call   0x14000c0d8
   14000fbcd:	and    QWORD PTR [rdi+0x118],0x0
   14000fbd5:	mov    rax,QWORD PTR [rbx+0x28]
   14000fbd9:	mov    QWORD PTR [rdi+0x118],rax
   14000fbe0:	and    QWORD PTR [rbx+0x28],0x0
   14000fbe5:	lea    r15,[rip+0xe434]        # 0x14001e020
   14000fbec:	test   BYTE PTR [rbx],0x4
   14000fbef:	je     0x14000fc48
   14000fbf1:	lea    rsi,[rdi+0x120]
   14000fbf8:	mov    rcx,QWORD PTR [rsi]
   14000fbfb:	test   rcx,rcx
   14000fbfe:	je     0x14000fc09
   14000fc00:	call   0x140014260
   14000fc05:	and    QWORD PTR [rsi],0x0
   14000fc09:	mov    rdx,QWORD PTR [rbx+0x30]
   14000fc0d:	mov    rcx,rsi
   14000fc10:	call   0x1400129cc
   14000fc15:	mov    esi,eax
   14000fc17:	mov    DWORD PTR [rbp+0x38],eax
   14000fc1a:	test   eax,eax
   14000fc1c:	jns    0x14000fc4b
   14000fc1e:	mov    rcx,QWORD PTR [rip+0xe3fb]        # 0x14001e020
   14000fc25:	cmp    rcx,r15
   14000fc28:	je     0x14000fc4b
   14000fc2a:	test   BYTE PTR [rcx+0x1c],0x4
   14000fc2e:	je     0x14000fc4b
   14000fc30:	mov    edx,0xc
   14000fc35:	mov    r9d,eax
   14000fc38:	lea    r8,[rip+0x8f41]        # 0x140018b80
   14000fc3f:	mov    rcx,QWORD PTR [rcx+0x10]
   14000fc43:	call   0x140001228
   14000fc48:	mov    esi,DWORD PTR [rbp+0x38]
   14000fc4b:	test   DWORD PTR [rbx],0x8000
   14000fc51:	je     0x14000fc5e
   14000fc53:	mov    rax,QWORD PTR [rbx+0x38]
   14000fc57:	mov    QWORD PTR [rdi+0x128],rax
   14000fc5e:	test   DWORD PTR [rbx],0x10000
   14000fc64:	je     0x14000fc6f
   14000fc66:	mov    eax,DWORD PTR [rbx+0x40]
   14000fc69:	mov    DWORD PTR [rdi+0x130],eax
   14000fc6f:	test   BYTE PTR [rbx],0x10
   14000fc72:	je     0x14000fc7d
   14000fc74:	mov    eax,DWORD PTR [rbx+0x50]
   14000fc77:	mov    DWORD PTR [rdi+0x140],eax
   14000fc7d:	test   BYTE PTR [rbx],0x40
   14000fc80:	je     0x14000fc8b
   14000fc82:	mov    eax,DWORD PTR [rbx+0x54]
   14000fc85:	mov    DWORD PTR [rdi+0x144],eax
   14000fc8b:	test   BYTE PTR [rbx],0x80
   14000fc8e:	je     0x14000fca3
   14000fc90:	mov    rax,QWORD PTR [rbx+0x58]
   14000fc94:	mov    QWORD PTR [rdi+0x148],rax
   14000fc9b:	and    QWORD PTR [rbx+0x58],0x0
   14000fca0:	mov    DWORD PTR [rdi],r13d
   14000fca3:	test   DWORD PTR [rbx],0x100
   14000fca9:	je     0x14000fcb4
   14000fcab:	mov    eax,DWORD PTR [rbx+0x60]
   14000fcae:	mov    DWORD PTR [rdi+0x150],eax
   14000fcb4:	test   DWORD PTR [rbx],0x2000
   14000fcba:	je     0x14000fcc5
   14000fcbc:	mov    eax,DWORD PTR [rbx+0x64]
   14000fcbf:	mov    DWORD PTR [rdi+0x154],eax
   14000fcc5:	test   DWORD PTR [rbx],0x200
   14000fccb:	je     0x14000fcd6
   14000fccd:	mov    eax,DWORD PTR [rbx+0x68]
   14000fcd0:	mov    DWORD PTR [rdi+0x158],eax
   14000fcd6:	test   DWORD PTR [rbx],0x400
   14000fcdc:	je     0x14000fcfc
   14000fcde:	mov    DWORD PTR [rdi],r13d
   14000fce1:	mov    eax,DWORD PTR [rbx+0x10]
   14000fce4:	mov    DWORD PTR [rdi+0x100],eax
   14000fcea:	mov    eax,DWORD PTR [rbx+0x14]
   14000fced:	mov    DWORD PTR [rdi+0x104],eax
   14000fcf3:	mov    eax,DWORD PTR [rbx+0x18]
   14000fcf6:	mov    DWORD PTR [rdi+0x108],eax
   14000fcfc:	test   DWORD PTR [rbx],0x800
   14000fd02:	je     0x14000fd2f
   14000fd04:	mov    eax,DWORD PTR [rbx+0x44]
   14000fd07:	cmp    DWORD PTR [rdi+0x134],eax
   14000fd0d:	jne    0x14000fd1a
   14000fd0f:	mov    eax,DWORD PTR [rbx+0x48]
   14000fd12:	cmp    DWORD PTR [rdi+0x138],eax
   14000fd18:	je     0x14000fd2f
   14000fd1a:	mov    DWORD PTR [rdi],r13d
   14000fd1d:	mov    eax,DWORD PTR [rbx+0x44]
   14000fd20:	mov    DWORD PTR [rdi+0x134],eax
   14000fd26:	mov    eax,DWORD PTR [rbx+0x48]
   14000fd29:	mov    DWORD PTR [rdi+0x138],eax
   14000fd2f:	test   DWORD PTR [rbx],0x20000
   14000fd35:	je     0x14000fd50
   14000fd37:	xor    ecx,ecx
   14000fd39:	mov    eax,DWORD PTR [rbx+0x4c]
   14000fd3c:	cmp    DWORD PTR [rdi+0x13c],eax
   14000fd42:	setne  cl
   14000fd45:	or     DWORD PTR [rdi],ecx
   14000fd47:	mov    eax,DWORD PTR [rbx+0x4c]
   14000fd4a:	mov    DWORD PTR [rdi+0x13c],eax
   14000fd50:	xor    r14d,r14d
   14000fd53:	test   DWORD PTR [rbx],0x1000
   14000fd59:	je     0x14000fdbe
   14000fd5b:	mov    ecx,DWORD PTR [rbx+0x1c]
   14000fd5e:	lea    eax,[rcx-0x4d9]
   14000fd64:	test   eax,0xffffffe7
   14000fd69:	jne    0x14000fd86
   14000fd6b:	cmp    ecx,0x4f1
   14000fd71:	je     0x14000fd86
   14000fd73:	cmp    DWORD PTR [rdi+0x10c],ecx
   14000fd79:	je     0x14000fdbe
   14000fd7b:	mov    DWORD PTR [rdi+0x10c],ecx
   14000fd81:	mov    r14d,r13d
   14000fd84:	jmp    0x14000fdbe
   14000fd86:	mov    esi,0x80070057
   14000fd8b:	mov    DWORD PTR [rbp+0x38],esi
   14000fd8e:	mov    rcx,QWORD PTR [rip+0xe28b]        # 0x14001e020
   14000fd95:	cmp    rcx,r15
   14000fd98:	je     0x14000fdbe
   14000fd9a:	test   BYTE PTR [rcx+0x1c],0x4
   14000fd9e:	je     0x14000fdbe
   14000fda0:	mov    edx,0xd
   14000fda5:	mov    r9d,0x80070057
   14000fdab:	lea    r8,[rip+0x8dce]        # 0x140018b80
   14000fdb2:	mov    rcx,QWORD PTR [rcx+0x10]
   14000fdb6:	call   0x140001228
   14000fdbb:	mov    esi,DWORD PTR [rbp+0x38]
   14000fdbe:	test   DWORD PTR [rbx],0x4000
   14000fdc4:	je     0x14000fdda
   14000fdc6:	mov    eax,DWORD PTR [rbx+0x20]
   14000fdc9:	cmp    DWORD PTR [rdi+0x110],eax
   14000fdcf:	je     0x14000fdda
   14000fdd1:	mov    DWORD PTR [rdi+0x110],eax
   14000fdd7:	mov    r14d,r13d
   14000fdda:	test   esi,esi
   14000fddc:	js     0x14000fdf3
   14000fdde:	test   r14d,r14d
   14000fde1:	je     0x14000fdf3
   14000fde3:	mov    edx,DWORD PTR [rbx+0x1c]
   14000fde6:	mov    rcx,rdi
   14000fde9:	call   0x140011808
   14000fdee:	mov    esi,eax
   14000fdf0:	mov    DWORD PTR [rbp+0x38],eax
   14000fdf3:	lea    rcx,[rbp-0x18]
   14000fdf7:	call   0x14000bf98
   14000fdfc:	mov    eax,esi
   14000fdfe:	lea    r11,[rsp+0x40]
   14000fe03:	mov    rbx,QWORD PTR [r11+0x30]
   14000fe07:	mov    rsi,QWORD PTR [r11+0x40]
   14000fe0b:	mov    rsp,r11
   14000fe0e:	pop    r15
   14000fe10:	pop    r14
   14000fe12:	pop    r13
   14000fe14:	pop    rdi
   14000fe15:	pop    rbp
   14000fe16:	ret    
   14000fe17:	int3   
   14000fe18:	int3   
   14000fe19:	int3   
   14000fe1a:	int3   
   14000fe1b:	int3   
   14000fe1c:	int3   
   14000fe1d:	int3   
   14000fe1e:	int3   
   14000fe1f:	int3   
   14000fe20:	mov    rax,rsp
   14000fe23:	mov    DWORD PTR [rax+0x20],r9d
   14000fe27:	push   rbp
   14000fe28:	push   rsi
   14000fe29:	push   rdi
   14000fe2a:	push   r12
   14000fe2c:	push   r13
   14000fe2e:	push   r14
   14000fe30:	push   r15
   14000fe32:	mov    rbp,rsp
   14000fe35:	sub    rsp,0x50
   14000fe39:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   14000fe41:	mov    QWORD PTR [rax+0x8],rbx
   14000fe45:	mov    rsi,r8
   14000fe48:	movsxd rdi,edx
   14000fe4b:	mov    rbx,rcx
   14000fe4e:	xor    r14d,r14d
   14000fe51:	mov    DWORD PTR [rbp+0x58],r14d
   14000fe55:	mov    DWORD PTR [rbp+0x48],r14d
   14000fe59:	lea    r8,[rbp+0x58]
   14000fe5d:	lea    rdx,[rip+0x89f4]        # 0x140018858
   14000fe64:	lea    rcx,[rbp-0x18]
   14000fe68:	call   0x14000bf4c
   14000fe6d:	nop
   14000fe6e:	mov    r15d,r14d
   14000fe71:	cmp    edi,0x8
   14000fe74:	jbe    0x14000febe
   14000fe76:	mov    ebx,0x80070057
   14000fe7b:	mov    DWORD PTR [rbp+0x58],ebx
   14000fe7e:	lea    r13,[rip+0xe19b]        # 0x14001e020
   14000fe85:	mov    rcx,QWORD PTR [rip+0xe194]        # 0x14001e020
   14000fe8c:	cmp    rcx,r13
   14000fe8f:	je     0x1400101a5
   14000fe95:	test   BYTE PTR [rcx+0x1c],0x4
   14000fe99:	je     0x1400101a5
   14000fe9f:	lea    edx,[r14+0xe]
   14000fea3:	mov    r9d,0x80070057
   14000fea9:	lea    r8,[rip+0x8cd0]        # 0x140018b80
   14000feb0:	mov    rcx,QWORD PTR [rcx+0x10]
   14000feb4:	call   0x140001228
   14000feb9:	jmp    0x1400101a2
   14000febe:	shl    rdi,0x6
   14000fec2:	test   BYTE PTR [rsi],0x1
   14000fec5:	je     0x14000fedb
   14000fec7:	mov    eax,DWORD PTR [rsi+0x4]
   14000feca:	xor    eax,DWORD PTR [rdi+rbx*1+0x16c]
   14000fed1:	and    eax,0x1
   14000fed4:	xor    DWORD PTR [rdi+rbx*1+0x16c],eax
   14000fedb:	test   BYTE PTR [rsi],0x2
   14000fede:	je     0x14000ff05
   14000fee0:	mov    eax,DWORD PTR [rdi+rbx*1+0x16c]
   14000fee7:	mov    ecx,DWORD PTR [rsi+0x4]
   14000feea:	mov    r15d,ecx
   14000feed:	xor    r15d,eax
   14000fef0:	and    r15d,0x2
   14000fef4:	shr    r15d,1
   14000fef7:	xor    ecx,eax
   14000fef9:	and    ecx,0x2
   14000fefc:	xor    ecx,eax
   14000fefe:	mov    DWORD PTR [rdi+rbx*1+0x16c],ecx
   14000ff05:	test   BYTE PTR [rsi],0x8
   14000ff08:	je     0x14000ff1e
   14000ff0a:	mov    eax,DWORD PTR [rsi+0x4]
   14000ff0d:	xor    eax,DWORD PTR [rdi+rbx*1+0x16c]
   14000ff14:	and    eax,0x4
   14000ff17:	xor    DWORD PTR [rdi+rbx*1+0x16c],eax
   14000ff1e:	lea    r13,[rip+0xe0fb]        # 0x14001e020
   14000ff25:	test   BYTE PTR [rsi],0x10
   14000ff28:	je     0x140010066
   14000ff2e:	mov    r15d,0x1
   14000ff34:	mov    rcx,QWORD PTR [rdi+rbx*1+0x170]
   14000ff3c:	test   rcx,rcx
   14000ff3f:	je     0x14000ff48
   14000ff41:	xor    edx,edx
   14000ff43:	call   0x14000c0d8
   14000ff48:	mov    DWORD PTR [rsp+0x20],0x2000
   14000ff50:	xor    r9d,r9d
   14000ff53:	xor    r8d,r8d
   14000ff56:	xor    edx,edx
   14000ff58:	mov    rcx,QWORD PTR [rsi+0x8]
   14000ff5c:	call   QWORD PTR [rip+0x641e]        # 0x140016380
   14000ff62:	mov    QWORD PTR [rdi+rbx*1+0x170],rax
   14000ff6a:	test   rax,rax
   14000ff6d:	jne    0x14000ffc5
   14000ff6f:	call   QWORD PTR [rip+0x6313]        # 0x140016288
   14000ff75:	movzx  r12d,ax
   14000ff79:	or     r12d,0x80070000
   14000ff80:	test   eax,eax
   14000ff82:	cmovle r12d,eax
   14000ff86:	mov    DWORD PTR [rbp+0x48],r12d
   14000ff8a:	mov    rcx,QWORD PTR [rip+0xe08f]        # 0x14001e020
   14000ff91:	cmp    rcx,r13
   14000ff94:	je     0x14000ffb4
   14000ff96:	test   BYTE PTR [rcx+0x1c],0x4
   14000ff9a:	je     0x14000ffb4
   14000ff9c:	mov    edx,0xf
   14000ffa1:	mov    r9d,r12d
   14000ffa4:	lea    r8,[rip+0x8bd5]        # 0x140018b80
   14000ffab:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ffaf:	call   0x140001228
   14000ffb4:	test   r12d,r12d
   14000ffb7:	jns    0x14000ffc5
   14000ffb9:	mov    eax,DWORD PTR [rbp+0x58]
   14000ffbc:	test   eax,eax
   14000ffbe:	cmovns eax,r12d
   14000ffc2:	mov    DWORD PTR [rbp+0x58],eax
   14000ffc5:	mov    rcx,QWORD PTR [rdi+rbx*1+0x178]
   14000ffcd:	test   rcx,rcx
   14000ffd0:	je     0x14000ffed
   14000ffd2:	lea    rdx,[rbp+0x48]
   14000ffd6:	call   0x14000c0d8
   14000ffdb:	cmp    DWORD PTR [rbp+0x48],r14d
   14000ffdf:	jge    0x14000ffed
   14000ffe1:	mov    eax,DWORD PTR [rbp+0x58]
   14000ffe4:	test   eax,eax
   14000ffe6:	cmovns eax,DWORD PTR [rbp+0x48]
   14000ffea:	mov    DWORD PTR [rbp+0x58],eax
   14000ffed:	mov    DWORD PTR [rsp+0x20],0x2000
   14000fff5:	xor    r9d,r9d
   14000fff8:	xor    r8d,r8d
   14000fffb:	xor    edx,edx
   14000fffd:	mov    rcx,QWORD PTR [rsi+0x10]
   140010001:	call   QWORD PTR [rip+0x6379]        # 0x140016380
   140010007:	mov    QWORD PTR [rdi+rbx*1+0x178],rax
   14001000f:	test   rax,rax
   140010012:	jne    0x140010066
   140010014:	call   QWORD PTR [rip+0x626e]        # 0x140016288
   14001001a:	movzx  r12d,ax
   14001001e:	or     r12d,0x80070000
   140010025:	test   eax,eax
   140010027:	cmovle r12d,eax
   14001002b:	mov    rcx,QWORD PTR [rip+0xdfee]        # 0x14001e020
   140010032:	cmp    rcx,r13
   140010035:	je     0x140010055
   140010037:	test   BYTE PTR [rcx+0x1c],0x4
   14001003b:	je     0x140010055
   14001003d:	mov    edx,0x10
   140010042:	mov    r9d,r12d
   140010045:	lea    r8,[rip+0x8b34]        # 0x140018b80
   14001004c:	mov    rcx,QWORD PTR [rcx+0x10]
   140010050:	call   0x140001228
   140010055:	test   r12d,r12d
   140010058:	jns    0x140010066
   14001005a:	mov    eax,DWORD PTR [rbp+0x58]
   14001005d:	test   eax,eax
   14001005f:	cmovns eax,r12d
   140010063:	mov    DWORD PTR [rbp+0x58],eax
   140010066:	test   BYTE PTR [rsi],0x20
   140010069:	je     0x140010085
   14001006b:	mov    ecx,DWORD PTR [rsi+0x18]
   14001006e:	mov    eax,r14d
   140010071:	cmp    DWORD PTR [rdi+rbx*1+0x180],ecx
   140010078:	setne  al
   14001007b:	or     r15d,eax
   14001007e:	mov    DWORD PTR [rdi+rbx*1+0x180],ecx
   140010085:	test   BYTE PTR [rsi],0x40
   140010088:	je     0x1400100a4
   14001008a:	mov    ecx,DWORD PTR [rsi+0x1c]
   14001008d:	mov    eax,r14d
   140010090:	cmp    DWORD PTR [rdi+rbx*1+0x184],ecx
   140010097:	setne  al
   14001009a:	or     r15d,eax
   14001009d:	mov    DWORD PTR [rdi+rbx*1+0x184],ecx
   1400100a4:	test   BYTE PTR [rsi],0x80
   1400100a7:	je     0x1400100b3
   1400100a9:	mov    eax,DWORD PTR [rsi+0x20]
   1400100ac:	mov    DWORD PTR [rdi+rbx*1+0x188],eax
   1400100b3:	test   DWORD PTR [rsi],0x100
   1400100b9:	je     0x140010122
   1400100bb:	lea    r12,[rdi+rbx*1]
   1400100bf:	cmp    QWORD PTR [r12+0x198],r14
   1400100c7:	je     0x1400100de
   1400100c9:	mov    rcx,QWORD PTR [r12+0x198]
   1400100d1:	call   0x140014260
   1400100d6:	mov    QWORD PTR [r12+0x198],r14
   1400100de:	mov    rdx,QWORD PTR [rsi+0x30]
   1400100e2:	test   rdx,rdx
   1400100e5:	je     0x140010122
   1400100e7:	lea    rcx,[r12+0x198]
   1400100ef:	call   0x1400129cc
   1400100f4:	test   eax,eax
   1400100f6:	jns    0x140010122
   1400100f8:	mov    rcx,QWORD PTR [rip+0xdf21]        # 0x14001e020
   1400100ff:	cmp    rcx,r13
   140010102:	je     0x140010122
   140010104:	test   BYTE PTR [rcx+0x1c],0x4
   140010108:	je     0x140010122
   14001010a:	mov    edx,0x11
   14001010f:	mov    r9d,eax
   140010112:	lea    r8,[rip+0x8a67]        # 0x140018b80
   140010119:	mov    rcx,QWORD PTR [rcx+0x10]
   14001011d:	call   0x140001228
   140010122:	test   DWORD PTR [rsi],0x200
   140010128:	je     0x14001016a
   14001012a:	mov    ecx,DWORD PTR [rsi+0x38]
   14001012d:	cmp    DWORD PTR [rdi+rbx*1+0x1a0],ecx
   140010134:	jne    0x140010147
   140010136:	mov    eax,DWORD PTR [rdi+rbx*1+0x16c]
   14001013d:	xor    eax,DWORD PTR [rsi+0x4]
   140010140:	test   al,0x8
   140010142:	mov    eax,r14d
   140010145:	je     0x14001014c
   140010147:	mov    eax,0x1
   14001014c:	or     r15d,eax
   14001014f:	mov    DWORD PTR [rdi+rbx*1+0x1a0],ecx
   140010156:	mov    eax,DWORD PTR [rsi+0x4]
   140010159:	xor    eax,DWORD PTR [rdi+rbx*1+0x16c]
   140010160:	and    eax,0x8
   140010163:	xor    DWORD PTR [rdi+rbx*1+0x16c],eax
   14001016a:	test   DWORD PTR [rsi],0x400
   140010170:	je     0x14001019f
   140010172:	mov    eax,DWORD PTR [rsi+0x24]
   140010175:	cmp    DWORD PTR [rdi+rbx*1+0x18c],eax
   14001017c:	jne    0x14001018a
   14001017e:	mov    eax,DWORD PTR [rsi+0x28]
   140010181:	cmp    DWORD PTR [rdi+rbx*1+0x190],eax
   140010188:	je     0x140010190
   14001018a:	mov    r14d,0x1
   140010190:	or     r15d,r14d
   140010193:	mov    rax,QWORD PTR [rsi+0x24]
   140010197:	mov    QWORD PTR [rdi+rbx*1+0x18c],rax
   14001019f:	or     DWORD PTR [rbx],r15d
   1400101a2:	mov    ebx,DWORD PTR [rbp+0x58]
   1400101a5:	lea    rcx,[rbp-0x18]
   1400101a9:	call   0x14000bf98
   1400101ae:	mov    eax,ebx
   1400101b0:	mov    rbx,QWORD PTR [rsp+0x90]
   1400101b8:	add    rsp,0x50
   1400101bc:	pop    r15
   1400101be:	pop    r14
   1400101c0:	pop    r13
   1400101c2:	pop    r12
   1400101c4:	pop    rdi
   1400101c5:	pop    rsi
   1400101c6:	pop    rbp
   1400101c7:	ret    
   1400101c8:	int3   
   1400101c9:	int3   
   1400101ca:	int3   
   1400101cb:	int3   
   1400101cc:	int3   
   1400101cd:	int3   
   1400101ce:	int3   
   1400101cf:	int3   
   1400101d0:	mov    DWORD PTR [rsp+0x18],r8d
   1400101d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400101da:	mov    QWORD PTR [rsp+0x8],rcx
   1400101df:	push   rbp
   1400101e0:	push   rbx
   1400101e1:	push   rsi
   1400101e2:	push   rdi
   1400101e3:	push   r12
   1400101e5:	push   r13
   1400101e7:	push   r14
   1400101e9:	push   r15
   1400101eb:	mov    rbp,rsp
   1400101ee:	sub    rsp,0x78
   1400101f2:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   1400101fa:	mov    ebx,r8d
   1400101fd:	mov    r12,rdx
   140010200:	mov    r14,rcx
   140010203:	and    DWORD PTR [rbp+0x60],0x0
   140010207:	and    DWORD PTR [rbp-0x28],0x0
   14001020b:	lea    r8,[rbp+0x60]
   14001020f:	lea    rdx,[rip+0x8672]        # 0x140018888
   140010216:	lea    rcx,[rbp-0x18]
   14001021a:	call   0x14000bf4c
   14001021f:	nop
   140010220:	test   r12,r12
   140010223:	jne    0x140010254
   140010225:	mov    DWORD PTR [rbp+0x60],0x80070057
   14001022c:	lea    rsi,[rip+0xdded]        # 0x14001e020
   140010233:	mov    rcx,QWORD PTR [rip+0xdde6]        # 0x14001e020
   14001023a:	cmp    rcx,rsi
   14001023d:	je     0x140010436
   140010243:	test   BYTE PTR [rcx+0x1c],0x4
   140010247:	je     0x140010436
   14001024d:	lea    edx,[r12+0x12]
   140010252:	jmp    0x140010286
   140010254:	cmp    ebx,0x3
   140010257:	jbe    0x1400102a1
   140010259:	mov    DWORD PTR [rbp+0x60],0x80070057
   140010260:	lea    rsi,[rip+0xddb9]        # 0x14001e020
   140010267:	mov    rcx,QWORD PTR [rip+0xddb2]        # 0x14001e020
   14001026e:	cmp    rcx,rsi
   140010271:	je     0x140010436
   140010277:	test   BYTE PTR [rcx+0x1c],0x4
   14001027b:	je     0x140010436
   140010281:	mov    edx,0x13
   140010286:	mov    r9d,0x80070057
   14001028c:	lea    r8,[rip+0x88ed]        # 0x140018b80
   140010293:	mov    rcx,QWORD PTR [rcx+0x10]
   140010297:	call   0x140001228
   14001029c:	jmp    0x140010436
   1400102a1:	mov    DWORD PTR [r14],0x1
   1400102a8:	xor    r15d,r15d
   1400102ab:	lea    rdi,[r14+0x170]
   1400102b2:	lea    r13,[r14+0x198]
   1400102b9:	lea    rsi,[rip+0xdd60]        # 0x14001e020
   1400102c0:	mov    r14d,DWORD PTR [rbp+0x58]
   1400102c4:	mov    rcx,QWORD PTR [rdi+0x8]
   1400102c8:	test   rcx,rcx
   1400102cb:	je     0x1400102d9
   1400102cd:	xor    edx,edx
   1400102cf:	call   0x14000c0d8
   1400102d4:	and    QWORD PTR [rdi+0x8],0x0
   1400102d9:	mov    rcx,QWORD PTR [rdi]
   1400102dc:	test   rcx,rcx
   1400102df:	je     0x1400102ec
   1400102e1:	xor    edx,edx
   1400102e3:	call   0x14000c0d8
   1400102e8:	and    QWORD PTR [rdi],0x0
   1400102ec:	mov    rcx,QWORD PTR [rdi+0x28]
   1400102f0:	test   rcx,rcx
   1400102f3:	je     0x1400102ff
   1400102f5:	call   0x140014260
   1400102fa:	and    QWORD PTR [rdi+0x28],0x0
   1400102ff:	mov    edx,r15d
   140010302:	mov    rcx,r12
   140010305:	call   0x14000f06c
   14001030a:	mov    rbx,rax
   14001030d:	test   rax,rax
   140010310:	je     0x1400103e4
   140010316:	mov    rax,QWORD PTR [rax+0x8]
   14001031a:	cmp    rax,QWORD PTR [rip+0x886f]        # 0x140018b90
   140010321:	jne    0x140010334
   140010323:	mov    rax,QWORD PTR [rbx+0x10]
   140010327:	cmp    rax,QWORD PTR [rip+0x886a]        # 0x140018b98
   14001032e:	je     0x1400103e4
   140010334:	mov    edx,r14d
   140010337:	mov    rcx,rbx
   14001033a:	call   0x140012700
   14001033f:	mov    QWORD PTR [rdi+0x8],rax
   140010343:	lea    rdx,[rbp-0x28]
   140010347:	xor    ecx,ecx
   140010349:	call   0x14000c188
   14001034e:	mov    r12,rax
   140010351:	test   rax,rax
   140010354:	je     0x14001038e
   140010356:	and    DWORD PTR [rsp+0x38],0x0
   14001035b:	and    DWORD PTR [rsp+0x28],0x0
   140010360:	mov    r8,QWORD PTR [rdi+0x8]
   140010364:	mov    rdx,rax
   140010367:	call   0x140011b18
   14001036c:	mov    QWORD PTR [rdi],rax
   14001036f:	xor    r9d,r9d
   140010372:	xor    r8d,r8d
   140010375:	mov    rdx,QWORD PTR [rdi+0x8]
   140010379:	mov    rcx,r12
   14001037c:	call   0x14000dce4
   140010381:	mov    rdx,r12
   140010384:	xor    ecx,ecx
   140010386:	call   QWORD PTR [rip+0x5f74]        # 0x140016300
   14001038c:	jmp    0x1400103c5
   14001038e:	mov    rcx,QWORD PTR [rip+0xdc8b]        # 0x14001e020
   140010395:	cmp    rcx,rsi
   140010398:	je     0x1400103b9
   14001039a:	test   BYTE PTR [rcx+0x1c],0x4
   14001039e:	je     0x1400103b9
   1400103a0:	mov    edx,0x14
   1400103a5:	mov    r9d,DWORD PTR [rbp-0x28]
   1400103a9:	lea    r8,[rip+0x87d0]        # 0x140018b80
   1400103b0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400103b4:	call   0x140001228
   1400103b9:	mov    eax,DWORD PTR [rbp+0x60]
   1400103bc:	test   eax,eax
   1400103be:	cmovns eax,DWORD PTR [rbp-0x28]
   1400103c2:	mov    DWORD PTR [rbp+0x60],eax
   1400103c5:	mov    rdx,r13
   1400103c8:	mov    rcx,rbx
   1400103cb:	call   0x1400127cc
   1400103d0:	mov    DWORD PTR [rbp-0x28],eax
   1400103d3:	test   eax,eax
   1400103d5:	jns    0x1400103e4
   1400103d7:	mov    ebx,DWORD PTR [rbp+0x60]
   1400103da:	test   ebx,ebx
   1400103dc:	cmovns ebx,eax
   1400103df:	mov    DWORD PTR [rbp+0x60],ebx
   1400103e2:	jmp    0x1400103e7
   1400103e4:	mov    ebx,DWORD PTR [rbp+0x60]
   1400103e7:	inc    r15d
   1400103ea:	add    r13,0x40
   1400103ee:	add    rdi,0x40
   1400103f2:	cmp    r15d,0x8
   1400103f6:	mov    r12,QWORD PTR [rbp+0x50]
   1400103fa:	jl     0x1400102c4
   140010400:	test   ebx,ebx
   140010402:	mov    r14,QWORD PTR [rbp+0x48]
   140010406:	js     0x140010439
   140010408:	xor    edx,edx
   14001040a:	xor    ecx,ecx
   14001040c:	call   0x14000c188
   140010411:	mov    rdi,rax
   140010414:	mov    rdx,rax
   140010417:	mov    rcx,r14
   14001041a:	call   0x140011348
   14001041f:	mov    ebx,eax
   140010421:	mov    DWORD PTR [rbp+0x60],eax
   140010424:	test   rdi,rdi
   140010427:	je     0x140010439
   140010429:	xor    r8d,r8d
   14001042c:	mov    rdx,rdi
   14001042f:	xor    ecx,ecx
   140010431:	call   0x14000c314
   140010436:	mov    ebx,DWORD PTR [rbp+0x60]
   140010439:	lea    rcx,[rbp-0x18]
   14001043d:	call   0x14000bf98
   140010442:	mov    eax,ebx
   140010444:	add    rsp,0x78
   140010448:	pop    r15
   14001044a:	pop    r14
   14001044c:	pop    r13
   14001044e:	pop    r12
   140010450:	pop    rdi
   140010451:	pop    rsi
   140010452:	pop    rbx
   140010453:	pop    rbp
   140010454:	ret    
   140010455:	int3   
   140010456:	int3   
   140010457:	int3   
   140010458:	int3   
   140010459:	int3   
   14001045a:	int3   
   14001045b:	int3   
   14001045c:	mov    QWORD PTR [rsp+0x8],rbx
   140010461:	mov    QWORD PTR [rsp+0x18],rsi
   140010466:	push   rbp
   140010467:	push   rdi
   140010468:	push   r14
   14001046a:	mov    rbp,rsp
   14001046d:	sub    rsp,0x50
   140010471:	mov    rsi,r8
   140010474:	movsxd r14,edx
   140010477:	mov    rdi,rcx
   14001047a:	lea    r8,[rbp-0x2c]
   14001047e:	xor    ebx,ebx
   140010480:	lea    rdx,[rip+0x8431]        # 0x1400188b8
   140010487:	lea    rcx,[rbp-0x18]
   14001048b:	mov    DWORD PTR [rbp-0x2c],ebx
   14001048e:	call   0x14000bf4c
   140010493:	lea    r8,[rbp+0x28]
   140010497:	mov    DWORD PTR [rbp+0x28],ebx
   14001049a:	lea    rdx,[rip+0x8417]        # 0x1400188b8
   1400104a1:	lea    rcx,[rbp-0x28]
   1400104a5:	call   0x14000bf4c
   1400104aa:	cmp    r14d,0x8
   1400104ae:	ja     0x140010538
   1400104b4:	test   rsi,rsi
   1400104b7:	je     0x140010538
   1400104b9:	mov    rax,r14
   1400104bc:	mov    DWORD PTR [rbp+0x38],ebx
   1400104bf:	shl    rax,0x6
   1400104c3:	mov    r9d,ebx
   1400104c6:	mov    DWORD PTR [rbp-0x30],ebx
   1400104c9:	test   BYTE PTR [rax+rdi*1+0x16c],0x1
   1400104d1:	je     0x1400104dd
   1400104d3:	mov    rdx,QWORD PTR [rax+rdi*1+0x178]
   1400104db:	jmp    0x1400104e5
   1400104dd:	mov    rdx,QWORD PTR [rax+rdi*1+0x170]
   1400104e5:	test   rdx,rdx
   1400104e8:	je     0x1400104fe
   1400104ea:	lea    r9,[rbp-0x30]
   1400104ee:	lea    r8,[rbp+0x38]
   1400104f2:	call   0x140011a04
   1400104f7:	mov    r9d,DWORD PTR [rbp-0x30]
   1400104fb:	mov    ebx,DWORD PTR [rbp+0x38]
   1400104fe:	mov    r8d,DWORD PTR [rdi+r14*8+0x3a8]
   140010506:	mov    eax,ebx
   140010508:	cdq    
   140010509:	sub    eax,edx
   14001050b:	sar    eax,1
   14001050d:	sub    r8d,eax
   140010510:	mov    eax,r9d
   140010513:	cdq    
   140010514:	mov    DWORD PTR [rsi],r8d
   140010517:	mov    ecx,DWORD PTR [rdi+r14*8+0x3ac]
   14001051f:	sub    eax,edx
   140010521:	sar    eax,1
   140010523:	sub    ecx,eax
   140010525:	lea    eax,[rbx+r8*1]
   140010529:	mov    DWORD PTR [rsi+0x8],eax
   14001052c:	mov    DWORD PTR [rsi+0x4],ecx
   14001052f:	lea    eax,[r9+rcx*1]
   140010533:	mov    DWORD PTR [rsi+0xc],eax
   140010536:	jmp    0x140010574
   140010538:	mov    ebx,0x80070057
   14001053d:	mov    DWORD PTR [rbp+0x28],ebx
   140010540:	mov    rcx,QWORD PTR [rip+0xdad9]        # 0x14001e020
   140010547:	lea    rax,[rip+0xdad2]        # 0x14001e020
   14001054e:	cmp    rcx,rax
   140010551:	je     0x140010577
   140010553:	test   BYTE PTR [rcx+0x1c],0x4
   140010557:	je     0x140010577
   140010559:	mov    rcx,QWORD PTR [rcx+0x10]
   14001055d:	lea    r8,[rip+0x861c]        # 0x140018b80
   140010564:	mov    edx,0x17
   140010569:	mov    r9d,0x80070057
   14001056f:	call   0x140001228
   140010574:	mov    ebx,DWORD PTR [rbp+0x28]
   140010577:	lea    rcx,[rbp-0x28]
   14001057b:	call   0x14000bf98
   140010580:	lea    rcx,[rbp-0x18]
   140010584:	mov    DWORD PTR [rbp-0x2c],ebx
   140010587:	call   0x14000bf98
   14001058c:	lea    r11,[rsp+0x50]
   140010591:	mov    eax,ebx
   140010593:	mov    rbx,QWORD PTR [r11+0x20]
   140010597:	mov    rsi,QWORD PTR [r11+0x30]
   14001059b:	mov    rsp,r11
   14001059e:	pop    r14
   1400105a0:	pop    rdi
   1400105a1:	pop    rbp
   1400105a2:	ret    
   1400105a3:	int3   
   1400105a4:	int3   
   1400105a5:	int3   
   1400105a6:	int3   
   1400105a7:	int3   
   1400105a8:	int3   
   1400105a9:	int3   
   1400105aa:	int3   
   1400105ab:	int3   
   1400105ac:	mov    rax,rsp
   1400105af:	mov    QWORD PTR [rax+0x10],rbx
   1400105b3:	mov    QWORD PTR [rax+0x20],rbp
   1400105b7:	mov    QWORD PTR [rax+0x18],r8
   1400105bb:	push   rsi
   1400105bc:	push   rdi
   1400105bd:	push   r14
   1400105bf:	sub    rsp,0x50
   1400105c3:	and    DWORD PTR [rax+0x8],0x0
   1400105c7:	lea    r8,[rax+0x8]
   1400105cb:	mov    rdi,rdx
   1400105ce:	mov    rsi,rcx
   1400105d1:	lea    rdx,[rip+0x8308]        # 0x1400188e0
   1400105d8:	mov    ebx,r9d
   1400105db:	lea    rcx,[rax-0x28]
   1400105df:	call   0x14000bf4c
   1400105e4:	mov    r8,QWORD PTR [rsp+0x80]
   1400105ec:	lea    rax,[rsi+0x368]
   1400105f3:	mov    DWORD PTR [rsp+0x30],ebx
   1400105f7:	lea    rbp,[rsi+0x4a8]
   1400105fe:	lea    r14,[rsi+0x3a8]
   140010605:	mov    QWORD PTR [rsp+0x28],rbp
   14001060a:	mov    r9,r14
   14001060d:	mov    QWORD PTR [rsp+0x20],rax
   140010612:	mov    rdx,rdi
   140010615:	mov    rcx,rsi
   140010618:	call   0x140010714
   14001061d:	mov    DWORD PTR [rsp+0x70],eax
   140010621:	mov    ebx,eax
   140010623:	test   eax,eax
   140010625:	js     0x1400106be
   14001062b:	movups xmm0,XMMWORD PTR [r14]
   14001062f:	mov    DWORD PTR [rsi+0x5c0],0x1
   140010639:	movups xmm1,XMMWORD PTR [r14+0x10]
   14001063e:	movups XMMWORD PTR [rsi+0x3e8],xmm0
   140010645:	movups xmm0,XMMWORD PTR [r14+0x20]
   14001064a:	movups XMMWORD PTR [rsi+0x3f8],xmm1
   140010651:	movups xmm1,XMMWORD PTR [r14+0x30]
   140010656:	movups XMMWORD PTR [rsi+0x408],xmm0
   14001065d:	movups xmm0,XMMWORD PTR [rbp+0x0]
   140010661:	movups XMMWORD PTR [rsi+0x418],xmm1
   140010668:	movups xmm1,XMMWORD PTR [rbp+0x10]
   14001066c:	movups XMMWORD PTR [rsi+0x428],xmm0
   140010673:	movups xmm0,XMMWORD PTR [rbp+0x20]
   140010677:	movups XMMWORD PTR [rsi+0x438],xmm1
   14001067e:	movups xmm1,XMMWORD PTR [rbp+0x30]
   140010682:	movups XMMWORD PTR [rsi+0x448],xmm0
   140010689:	movups xmm0,XMMWORD PTR [rbp+0x40]
   14001068d:	movups XMMWORD PTR [rsi+0x458],xmm1
   140010694:	movups xmm1,XMMWORD PTR [rbp+0x50]
   140010698:	movups XMMWORD PTR [rsi+0x468],xmm0
   14001069f:	movups xmm0,XMMWORD PTR [rbp+0x60]
   1400106a3:	movups XMMWORD PTR [rsi+0x478],xmm1
   1400106aa:	movups xmm1,XMMWORD PTR [rbp+0x70]
   1400106ae:	movups XMMWORD PTR [rsi+0x488],xmm0
   1400106b5:	movups XMMWORD PTR [rsi+0x498],xmm1
   1400106bc:	jmp    0x1400106eb
   1400106be:	and    DWORD PTR [rsi+0x5c0],0x0
   1400106c5:	lea    rcx,[rsi+0x3e8]
   1400106cc:	xor    edx,edx
   1400106ce:	lea    r8d,[rdx+0x40]
   1400106d2:	call   0x140014b26
   1400106d7:	lea    rcx,[rsi+0x428]
   1400106de:	xor    edx,edx
   1400106e0:	mov    r8d,0x80
   1400106e6:	call   0x140014b26
   1400106eb:	lea    rcx,[rsp+0x40]
   1400106f0:	call   0x14000bf98
   1400106f5:	lea    r11,[rsp+0x50]
   1400106fa:	mov    eax,ebx
   1400106fc:	mov    rbx,QWORD PTR [r11+0x28]
   140010700:	mov    rbp,QWORD PTR [r11+0x38]
   140010704:	mov    rsp,r11
   140010707:	pop    r14
   140010709:	pop    rdi
   14001070a:	pop    rsi
   14001070b:	ret    
   14001070c:	int3   
   14001070d:	int3   
   14001070e:	int3   
   14001070f:	int3   
   140010710:	int3   
   140010711:	int3   
   140010712:	int3   
   140010713:	int3   
   140010714:	rex push rbp
   140010716:	push   rbx
   140010717:	push   rsi
   140010718:	push   rdi
   140010719:	push   r12
   14001071b:	push   r13
   14001071d:	push   r14
   14001071f:	push   r15
   140010721:	lea    rbp,[rsp-0x18]
   140010726:	sub    rsp,0x118
   14001072d:	mov    rax,QWORD PTR [rip+0xd8dc]        # 0x14001e010
   140010734:	xor    rax,rsp
   140010737:	mov    QWORD PTR [rbp+0x8],rax
   14001073b:	mov    rdi,QWORD PTR [rbp+0x80]
   140010742:	mov    rbx,r8
   140010745:	mov    r15,QWORD PTR [rbp+0x88]
   14001074c:	lea    r8,[rsp+0x68]
   140010751:	mov    rsi,rdx
   140010754:	mov    QWORD PTR [rbp-0x60],rbx
   140010758:	mov    r14,rcx
   14001075b:	mov    QWORD PTR [rbp-0x50],rdi
   14001075f:	xor    r13d,r13d
   140010762:	mov    QWORD PTR [rbp-0x30],r15
   140010766:	lea    rdx,[rip+0x8193]        # 0x140018900
   14001076d:	mov    DWORD PTR [rsp+0x68],r13d
   140010772:	lea    rcx,[rbp-0x28]
   140010776:	mov    QWORD PTR [rbp-0x48],r9
   14001077a:	mov    r12,r9
   14001077d:	call   0x14000bf4c
   140010782:	mov    DWORD PTR [rsp+0x60],r13d
   140010787:	test   rsi,rsi
   14001078a:	je     0x140011095
   140010790:	test   r12,r12
   140010793:	je     0x140011095
   140010799:	test   rdi,rdi
   14001079c:	je     0x140011095
   1400107a2:	test   r15,r15
   1400107a5:	je     0x140011095
   1400107ab:	lea    r8,[rbp-0x58]
   1400107af:	mov    DWORD PTR [rbp-0x58],r13d
   1400107b3:	lea    rdx,[rip+0x789e]        # 0x140018058
   1400107ba:	lea    rcx,[rbp-0x8]
   1400107be:	call   0x14000bf4c
   1400107c3:	mov    rcx,rsi
   1400107c6:	call   QWORD PTR [rip+0x5904]        # 0x1400160d0
   1400107cc:	mov    QWORD PTR [rbp-0x78],rax
   1400107d0:	mov    r15b,0x4
   1400107d3:	lea    r12,[rip+0xd846]        # 0x14001e020
   1400107da:	mov    rdi,rax
   1400107dd:	test   rax,rax
   1400107e0:	jne    0x140010822
   1400107e2:	call   QWORD PTR [rip+0x5aa0]        # 0x140016288
   1400107e8:	movzx  r9d,ax
   1400107ec:	or     r9d,0x80070000
   1400107f3:	test   eax,eax
   1400107f5:	cmovle r9d,eax
   1400107f9:	mov    DWORD PTR [rbp-0x58],r9d
   1400107fd:	mov    rcx,QWORD PTR [rip+0xd81c]        # 0x14001e020
   140010804:	cmp    rcx,r12
   140010807:	je     0x140010822
   140010809:	test   BYTE PTR [rcx+0x1c],r15b
   14001080d:	je     0x140010822
   14001080f:	mov    rcx,QWORD PTR [rcx+0x10]
   140010813:	lea    edx,[rdi+0x17]
   140010816:	lea    r8,[rip+0x7b9b]        # 0x1400183b8
   14001081d:	call   0x140001228
   140010822:	lea    rcx,[rbp-0x8]
   140010826:	call   0x14000bf98
   14001082b:	test   rdi,rdi
   14001082e:	je     0x1400110d5
   140010834:	lea    rdx,[rbp-0x8]
   140010838:	mov    DWORD PTR [rsp+0x64],0x1ff0000
   140010840:	mov    rcx,r14
   140010843:	call   0x1400111e0
   140010848:	mov    r8d,DWORD PTR [rbp-0x5c]
   14001084c:	lea    rcx,[rbp-0x8]
   140010850:	mov    edx,ebx
   140010852:	call   QWORD PTR [rip+0x5b68]        # 0x1400163c0
   140010858:	cmp    DWORD PTR [r14+0x140],0x0
   140010860:	lea    r13,[rip+0x8319]        # 0x140018b80
   140010867:	je     0x140010909
   14001086d:	mov    ecx,DWORD PTR [r14+0x144]
   140010874:	lea    rdx,[rsp+0x60]
   140010879:	call   0x14000cbf0
   14001087e:	mov    r9d,DWORD PTR [rsp+0x60]
   140010883:	mov    rdi,rax
   140010886:	test   r9d,r9d
   140010889:	js     0x1400108d8
   14001088b:	lea    r9,[rsp+0x60]
   140010890:	mov    r8,rax
   140010893:	lea    rdx,[rbp-0x8]
   140010897:	mov    rcx,rsi
   14001089a:	call   0x14000cca0
   14001089f:	mov    r9d,DWORD PTR [rsp+0x60]
   1400108a4:	test   r9d,r9d
   1400108a7:	jns    0x1400108cc
   1400108a9:	mov    rcx,QWORD PTR [rip+0xd770]        # 0x14001e020
   1400108b0:	cmp    rcx,r12
   1400108b3:	je     0x1400108cc
   1400108b5:	test   BYTE PTR [rcx+0x1c],r15b
   1400108b9:	je     0x1400108cc
   1400108bb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400108bf:	mov    edx,0x20
   1400108c4:	mov    r8,r13
   1400108c7:	call   0x140001228
   1400108cc:	xor    edx,edx
   1400108ce:	mov    rcx,rdi
   1400108d1:	call   0x14000c0d8
   1400108d6:	jmp    0x140010909
   1400108d8:	mov    eax,DWORD PTR [rsp+0x68]
   1400108dc:	test   eax,eax
   1400108de:	cmovns eax,r9d
   1400108e2:	mov    DWORD PTR [rsp+0x68],eax
   1400108e6:	mov    rcx,QWORD PTR [rip+0xd733]        # 0x14001e020
   1400108ed:	cmp    rcx,r12
   1400108f0:	je     0x140010909
   1400108f2:	test   BYTE PTR [rcx+0x1c],r15b
   1400108f6:	je     0x140010909
   1400108f8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400108fc:	mov    edx,0x21
   140010901:	mov    r8,r13
   140010904:	call   0x140001228
   140010909:	mov    rdx,QWORD PTR [rbp-0x48]
   14001090d:	lea    rax,[r14+0x16c]
   140010914:	and    DWORD PTR [rbp-0x68],0x0
   140010918:	lea    rcx,[r14+0x568]
   14001091f:	mov    edi,DWORD PTR [rsp+0x64]
   140010923:	sub    rdx,r14
   140010926:	sub    QWORD PTR [rbp-0x50],r14
   14001092a:	mov    QWORD PTR [rbp-0x38],rdx
   14001092e:	mov    QWORD PTR [rbp-0x40],rax
   140010932:	mov    QWORD PTR [rbp-0x80],rcx
   140010936:	test   BYTE PTR [rax],0x1
   140010939:	je     0x140010945
   14001093b:	mov    rax,QWORD PTR [rax+0xc]
   14001093f:	mov    rdx,QWORD PTR [rcx-0x40]
   140010943:	jmp    0x14001094c
   140010945:	mov    rax,QWORD PTR [rax+0x4]
   140010949:	mov    rdx,QWORD PTR [rcx]
   14001094c:	mov    QWORD PTR [rbp-0x70],rdx
   140010950:	mov    QWORD PTR [rsp+0x78],rax
   140010955:	test   rax,rax
   140010958:	je     0x140010bca
   14001095e:	lea    r9,[rsp+0x74]
   140010963:	mov    rdx,rax
   140010966:	lea    r8,[rsp+0x64]
   14001096b:	call   0x140011a04
   140010970:	mov    eax,DWORD PTR [rsp+0x64]
   140010974:	lea    r8,[rsp+0x60]
   140010979:	mov    rcx,QWORD PTR [rbp-0x78]
   14001097d:	cdq    
   14001097e:	sub    eax,edx
   140010980:	sar    eax,1
   140010982:	mov    DWORD PTR [rsp+0x70],eax
   140010986:	mov    eax,DWORD PTR [rsp+0x74]
   14001098a:	cdq    
   14001098b:	sub    eax,edx
   14001098d:	mov    rdx,QWORD PTR [rsp+0x78]
   140010992:	sar    eax,1
   140010994:	mov    DWORD PTR [rsp+0x6c],eax
   140010998:	call   0x14000c018
   14001099d:	mov    r9d,DWORD PTR [rsp+0x60]
   1400109a2:	mov    QWORD PTR [rsp+0x78],rax
   1400109a7:	test   r9d,r9d
   1400109aa:	jns    0x1400109e3
   1400109ac:	mov    rcx,QWORD PTR [rip+0xd66d]        # 0x14001e020
   1400109b3:	cmp    rcx,r12
   1400109b6:	je     0x140010bc6
   1400109bc:	test   BYTE PTR [rcx+0x1c],r15b
   1400109c0:	je     0x140010bc6
   1400109c6:	mov    eax,DWORD PTR [rbp-0x68]
   1400109c9:	mov    edx,0x22
   1400109ce:	mov    rcx,QWORD PTR [rcx+0x10]
   1400109d2:	mov    r8,r13
   1400109d5:	mov    DWORD PTR [rsp+0x20],eax
   1400109d9:	call   0x14000e17c
   1400109de:	jmp    0x140010bc6
   1400109e3:	mov    r10d,DWORD PTR [rbp+0x90]
   1400109ea:	mov    rcx,QWORD PTR [rbp-0x80]
   1400109ee:	mov    rax,QWORD PTR [rbp-0x38]
   1400109f2:	test   r10d,r10d
   1400109f5:	je     0x140010a02
   1400109f7:	mov    edx,ebx
   1400109f9:	sub    edx,DWORD PTR [rax+rcx*1-0x568]
   140010a00:	jmp    0x140010a0b
   140010a02:	mov    edx,DWORD PTR [rax+rcx*1-0x568]
   140010a09:	add    edx,ebx
   140010a0b:	mov    eax,DWORD PTR [rax+rcx*1-0x564]
   140010a12:	mov    ecx,DWORD PTR [rsp+0x64]
   140010a16:	mov    r9d,DWORD PTR [rsp+0x74]
   140010a1b:	mov    r8d,DWORD PTR [rbp-0x5c]
   140010a1f:	add    r8d,eax
   140010a22:	mov    DWORD PTR [rsp+0x50],edi
   140010a26:	sub    r8d,DWORD PTR [rsp+0x6c]
   140010a2b:	mov    eax,edx
   140010a2d:	sub    edx,DWORD PTR [rsp+0x70]
   140010a31:	sub    eax,ecx
   140010a33:	add    eax,DWORD PTR [rsp+0x70]
   140010a37:	mov    DWORD PTR [rsp+0x48],r9d
   140010a3c:	test   r10d,r10d
   140010a3f:	mov    DWORD PTR [rsp+0x40],ecx
   140010a43:	cmovne edx,eax
   140010a46:	and    DWORD PTR [rsp+0x38],0x0
   140010a4b:	mov    rax,QWORD PTR [rbp-0x78]
   140010a4f:	and    DWORD PTR [rsp+0x30],0x0
   140010a54:	mov    QWORD PTR [rsp+0x28],rax
   140010a59:	mov    DWORD PTR [rsp+0x20],r9d
   140010a5e:	mov    r9d,ecx
   140010a61:	mov    rcx,rsi
   140010a64:	call   QWORD PTR [rip+0x56be]        # 0x140016128
   140010a6a:	test   eax,eax
   140010a6c:	jne    0x140010aad
   140010a6e:	call   QWORD PTR [rip+0x5814]        # 0x140016288
   140010a74:	movzx  r9d,ax
   140010a78:	or     r9d,0x80070000
   140010a7f:	test   eax,eax
   140010a81:	cmovle r9d,eax
   140010a85:	mov    DWORD PTR [rsp+0x68],r9d
   140010a8a:	mov    rcx,QWORD PTR [rip+0xd58f]        # 0x14001e020
   140010a91:	cmp    rcx,r12
   140010a94:	je     0x140010aad
   140010a96:	test   BYTE PTR [rcx+0x1c],r15b
   140010a9a:	je     0x140010aad
   140010a9c:	mov    rcx,QWORD PTR [rcx+0x10]
   140010aa0:	mov    edx,0x23
   140010aa5:	mov    r8,r13
   140010aa8:	call   0x140001228
   140010aad:	mov    rax,QWORD PTR [rbp-0x70]
   140010ab1:	test   rax,rax
   140010ab4:	je     0x140010bb3
   140010aba:	lea    r9,[rsp+0x74]
   140010abf:	mov    rdx,rax
   140010ac2:	lea    r8,[rsp+0x64]
   140010ac7:	call   0x140011a04
   140010acc:	mov    eax,DWORD PTR [rsp+0x64]
   140010ad0:	lea    r8,[rsp+0x60]
   140010ad5:	mov    rcx,QWORD PTR [rbp-0x78]
   140010ad9:	cdq    
   140010ada:	sub    eax,edx
   140010adc:	sar    eax,1
   140010ade:	mov    DWORD PTR [rsp+0x6c],eax
   140010ae2:	mov    eax,DWORD PTR [rsp+0x74]
   140010ae6:	cdq    
   140010ae7:	sub    eax,edx
   140010ae9:	mov    rdx,QWORD PTR [rbp-0x70]
   140010aed:	sar    eax,1
   140010aef:	mov    DWORD PTR [rsp+0x70],eax
   140010af3:	call   0x14000c018
   140010af8:	mov    rax,QWORD PTR [rbp-0x80]
   140010afc:	xor    r9d,r9d
   140010aff:	mov    rcx,QWORD PTR [rbp-0x50]
   140010b03:	cmp    DWORD PTR [rbp+0x90],r9d
   140010b0a:	je     0x140010b1b
   140010b0c:	mov    edx,ebx
   140010b0e:	sub    edx,DWORD PTR [rcx+rax*1-0x568]
   140010b15:	sub    edx,DWORD PTR [rsp+0x6c]
   140010b19:	jmp    0x140010b28
   140010b1b:	mov    edx,DWORD PTR [rcx+rax*1-0x568]
   140010b22:	sub    edx,DWORD PTR [rsp+0x6c]
   140010b26:	add    edx,ebx
   140010b28:	mov    r8d,DWORD PTR [rcx+rax*1-0x564]
   140010b30:	mov    ecx,DWORD PTR [rsp+0x74]
   140010b34:	mov    eax,DWORD PTR [rsp+0x64]
   140010b38:	sub    r8d,DWORD PTR [rsp+0x70]
   140010b3d:	add    r8d,DWORD PTR [rbp-0x5c]
   140010b41:	mov    DWORD PTR [rsp+0x50],edi
   140010b45:	mov    DWORD PTR [rsp+0x48],ecx
   140010b49:	mov    DWORD PTR [rsp+0x40],eax
   140010b4d:	mov    DWORD PTR [rsp+0x38],r9d
   140010b52:	mov    DWORD PTR [rsp+0x30],r9d
   140010b57:	mov    r9,QWORD PTR [rbp-0x78]
   140010b5b:	mov    QWORD PTR [rsp+0x28],r9
   140010b60:	mov    r9d,eax
   140010b63:	mov    DWORD PTR [rsp+0x20],ecx
   140010b67:	mov    rcx,rsi
   140010b6a:	call   QWORD PTR [rip+0x55b8]        # 0x140016128
   140010b70:	test   eax,eax
   140010b72:	jne    0x140010bb3
   140010b74:	call   QWORD PTR [rip+0x570e]        # 0x140016288
   140010b7a:	movzx  r9d,ax
   140010b7e:	or     r9d,0x80070000
   140010b85:	test   eax,eax
   140010b87:	cmovle r9d,eax
   140010b8b:	mov    DWORD PTR [rsp+0x60],r9d
   140010b90:	mov    rcx,QWORD PTR [rip+0xd489]        # 0x14001e020
   140010b97:	cmp    rcx,r12
   140010b9a:	je     0x140010bb3
   140010b9c:	test   BYTE PTR [rcx+0x1c],r15b
   140010ba0:	je     0x140010bb3
   140010ba2:	mov    rcx,QWORD PTR [rcx+0x10]
   140010ba6:	mov    edx,0x24
   140010bab:	mov    r8,r13
   140010bae:	call   0x140001228
   140010bb3:	mov    rdx,QWORD PTR [rsp+0x78]
   140010bb8:	lea    r8,[rsp+0x60]
   140010bbd:	mov    rcx,QWORD PTR [rbp-0x78]
   140010bc1:	call   0x14000c018
   140010bc6:	mov    rcx,QWORD PTR [rbp-0x80]
   140010bca:	mov    rax,QWORD PTR [rbp-0x40]
   140010bce:	test   BYTE PTR [rax],0x2
   140010bd1:	je     0x140010d4c
   140010bd7:	mov    rax,QWORD PTR [r14+0x148]
   140010bde:	mov    QWORD PTR [rsp+0x78],rax
   140010be3:	test   rax,rax
   140010be6:	jne    0x140010bf1
   140010be8:	mov    rax,QWORD PTR [r14+0x18]
   140010bec:	mov    QWORD PTR [rsp+0x78],rax
   140010bf1:	mov    edx,DWORD PTR [r14+0x150]
   140010bf8:	lea    r8,[rsp+0x60]
   140010bfd:	mov    rcx,rsi
   140010c00:	call   0x14000c480
   140010c05:	mov    r9d,DWORD PTR [rsp+0x60]
   140010c0a:	mov    DWORD PTR [rbp-0x70],eax
   140010c0d:	test   r9d,r9d
   140010c10:	jns    0x140010c35
   140010c12:	mov    rcx,QWORD PTR [rip+0xd407]        # 0x14001e020
   140010c19:	cmp    rcx,r12
   140010c1c:	je     0x140010c35
   140010c1e:	test   BYTE PTR [rcx+0x1c],r15b
   140010c22:	je     0x140010c35
   140010c24:	mov    rcx,QWORD PTR [rcx+0x10]
   140010c28:	mov    edx,0x25
   140010c2d:	mov    r8,r13
   140010c30:	call   0x140001228
   140010c35:	mov    rdx,QWORD PTR [rsp+0x78]
   140010c3a:	lea    r8,[rsp+0x60]
   140010c3f:	mov    rcx,rsi
   140010c42:	call   0x14000c018
   140010c47:	mov    r9d,DWORD PTR [rsp+0x60]
   140010c4c:	mov    QWORD PTR [rsp+0x78],rax
   140010c51:	test   r9d,r9d
   140010c54:	jns    0x140010c79
   140010c56:	mov    rcx,QWORD PTR [rip+0xd3c3]        # 0x14001e020
   140010c5d:	cmp    rcx,r12
   140010c60:	je     0x140010c79
   140010c62:	test   BYTE PTR [rcx+0x1c],r15b
   140010c66:	je     0x140010c79
   140010c68:	mov    rcx,QWORD PTR [rcx+0x10]
   140010c6c:	mov    edx,0x26
   140010c71:	mov    r8,r13
   140010c74:	call   0x140001228
   140010c79:	mov    edx,0x1
   140010c7e:	mov    rcx,rsi
   140010c81:	call   QWORD PTR [rip+0x5411]        # 0x140016098
   140010c87:	mov    rdx,QWORD PTR [rbp-0x30]
   140010c8b:	lea    rcx,[rbp-0x18]
   140010c8f:	mov    DWORD PTR [rsp+0x6c],eax
   140010c93:	call   QWORD PTR [rip+0x572f]        # 0x1400163c8
   140010c99:	mov    eax,DWORD PTR [rbp-0x5c]
   140010c9c:	add    DWORD PTR [rbp-0x14],eax
   140010c9f:	add    DWORD PTR [rbp-0xc],eax
   140010ca2:	cmp    DWORD PTR [rbp+0x90],0x0
   140010ca9:	je     0x140010cc0
   140010cab:	mov    eax,DWORD PTR [rbp-0x10]
   140010cae:	mov    ecx,ebx
   140010cb0:	sub    ecx,DWORD PTR [rbp-0x10]
   140010cb3:	sub    eax,DWORD PTR [rbp-0x18]
   140010cb6:	add    eax,ecx
   140010cb8:	mov    DWORD PTR [rbp-0x18],ecx
   140010cbb:	mov    DWORD PTR [rbp-0x10],eax
   140010cbe:	jmp    0x140010cc6
   140010cc0:	add    DWORD PTR [rbp-0x18],ebx
   140010cc3:	add    DWORD PTR [rbp-0x10],ebx
   140010cc6:	mov    edx,DWORD PTR [r14+0x144]
   140010ccd:	lea    r8,[rsp+0x60]
   140010cd2:	mov    rcx,rsi
   140010cd5:	call   0x14000c540
   140010cda:	cmp    DWORD PTR [rsp+0x60],0x0
   140010cdf:	mov    DWORD PTR [rsp+0x70],eax
   140010ce3:	jl     0x140010d1d
   140010ce5:	mov    rdx,QWORD PTR [rbp-0x40]
   140010ce9:	lea    r9,[rbp-0x18]
   140010ced:	and    QWORD PTR [rsp+0x28],0x0
   140010cf3:	or     r8d,0xffffffff
   140010cf7:	mov    rcx,rsi
   140010cfa:	mov    DWORD PTR [rsp+0x20],0x40011
   140010d02:	mov    rdx,QWORD PTR [rdx+0x2c]
   140010d06:	call   QWORD PTR [rip+0x567c]        # 0x140016388
   140010d0c:	mov    edx,DWORD PTR [rsp+0x70]
   140010d10:	lea    r8,[rsp+0x60]
   140010d15:	mov    rcx,rsi
   140010d18:	call   0x14000c540
   140010d1d:	mov    edx,DWORD PTR [rsp+0x6c]
   140010d21:	mov    rcx,rsi
   140010d24:	call   QWORD PTR [rip+0x536e]        # 0x140016098
   140010d2a:	mov    edx,DWORD PTR [rbp-0x70]
   140010d2d:	mov    rcx,rsi
   140010d30:	call   QWORD PTR [rip+0x53e2]        # 0x140016118
   140010d36:	mov    rdx,QWORD PTR [rsp+0x78]
   140010d3b:	mov    rcx,rsi
   140010d3e:	call   QWORD PTR [rip+0x539c]        # 0x1400160e0
   140010d44:	mov    rcx,QWORD PTR [rbp-0x80]
   140010d48:	mov    rax,QWORD PTR [rbp-0x40]
   140010d4c:	mov    edx,DWORD PTR [rbp-0x68]
   140010d4f:	add    rcx,0x8
   140010d53:	add    QWORD PTR [rbp-0x30],0x10
   140010d58:	inc    edx
   140010d5a:	add    rax,0x40
   140010d5e:	mov    DWORD PTR [rbp-0x68],edx
   140010d61:	mov    QWORD PTR [rbp-0x80],rcx
   140010d65:	mov    QWORD PTR [rbp-0x40],rax
   140010d69:	cmp    edx,0x8
   140010d6c:	jl     0x140010936
   140010d72:	mov    rdx,QWORD PTR [r14+0x118]
   140010d79:	test   rdx,rdx
   140010d7c:	je     0x140010e5f
   140010d82:	mov    rcx,QWORD PTR [rbp-0x78]
   140010d86:	xor    r8d,r8d
   140010d89:	call   0x14000c018
   140010d8e:	mov    rdx,QWORD PTR [r14+0x118]
   140010d95:	lea    r9,[rsp+0x74]
   140010d9a:	lea    r8,[rsp+0x64]
   140010d9f:	mov    QWORD PTR [rsp+0x78],rax
   140010da4:	call   0x140011a04
   140010da9:	mov    rdx,QWORD PTR [r14+0x118]
   140010db0:	xor    r8d,r8d
   140010db3:	mov    rcx,QWORD PTR [rbp-0x78]
   140010db7:	call   0x14000c018
   140010dbc:	mov    ecx,DWORD PTR [rsp+0x74]
   140010dc0:	mov    eax,ecx
   140010dc2:	mov    r9d,DWORD PTR [rsp+0x64]
   140010dc7:	cdq    
   140010dc8:	mov    r8d,DWORD PTR [rbp-0x5c]
   140010dcc:	sub    eax,edx
   140010dce:	mov    DWORD PTR [rsp+0x50],edi
   140010dd2:	mov    rdi,QWORD PTR [rbp-0x78]
   140010dd6:	mov    DWORD PTR [rsp+0x48],ecx
   140010dda:	sar    eax,1
   140010ddc:	sub    r8d,eax
   140010ddf:	mov    DWORD PTR [rsp+0x40],r9d
   140010de4:	and    DWORD PTR [rsp+0x38],0x0
   140010de9:	mov    eax,r9d
   140010dec:	and    DWORD PTR [rsp+0x30],0x0
   140010df1:	cdq    
   140010df2:	sub    eax,edx
   140010df4:	mov    QWORD PTR [rsp+0x28],rdi
   140010df9:	sar    eax,1
   140010dfb:	mov    edx,ebx
   140010dfd:	mov    DWORD PTR [rsp+0x20],ecx
   140010e01:	sub    edx,eax
   140010e03:	mov    rcx,rsi
   140010e06:	call   QWORD PTR [rip+0x531c]        # 0x140016128
   140010e0c:	test   eax,eax
   140010e0e:	jne    0x140010e4f
   140010e10:	call   QWORD PTR [rip+0x5472]        # 0x140016288
   140010e16:	movzx  r9d,ax
   140010e1a:	or     r9d,0x80070000
   140010e21:	test   eax,eax
   140010e23:	cmovle r9d,eax
   140010e27:	mov    DWORD PTR [rsp+0x68],r9d
   140010e2c:	mov    rcx,QWORD PTR [rip+0xd1ed]        # 0x14001e020
   140010e33:	cmp    rcx,r12
   140010e36:	je     0x140010e4f
   140010e38:	test   BYTE PTR [rcx+0x1c],r15b
   140010e3c:	je     0x140010e4f
   140010e3e:	mov    rcx,QWORD PTR [rcx+0x10]
   140010e42:	mov    edx,0x27
   140010e47:	mov    r8,r13
   140010e4a:	call   0x140001228
   140010e4f:	mov    rdx,QWORD PTR [rsp+0x78]
   140010e54:	xor    r8d,r8d
   140010e57:	mov    rcx,rdi
   140010e5a:	call   0x14000c018
   140010e5f:	mov    rax,QWORD PTR [r14+0x120]
   140010e66:	test   rax,rax
   140010e69:	je     0x14001101f
   140010e6f:	cmp    WORD PTR [rax],0x30
   140010e73:	je     0x14001101f
   140010e79:	mov    edx,0x1
   140010e7e:	mov    rcx,rsi
   140010e81:	call   QWORD PTR [rip+0x5211]        # 0x140016098
   140010e87:	mov    edx,DWORD PTR [r14+0x154]
   140010e8e:	lea    r8,[rsp+0x60]
   140010e93:	mov    rcx,rsi
   140010e96:	mov    DWORD PTR [rsp+0x70],eax
   140010e9a:	call   0x14000c480
   140010e9f:	mov    edi,DWORD PTR [rsp+0x60]
   140010ea3:	mov    DWORD PTR [rbp-0x70],eax
   140010ea6:	test   edi,edi
   140010ea8:	js     0x140011001
   140010eae:	mov    rdx,QWORD PTR [r14+0x128]
   140010eb5:	xor    edi,edi
   140010eb7:	test   rdx,rdx
   140010eba:	je     0x140010eca
   140010ebc:	xor    r8d,r8d
   140010ebf:	mov    rcx,rsi
   140010ec2:	call   0x14000c018
   140010ec7:	mov    rdi,rax
   140010eca:	mov    rax,QWORD PTR [rbp-0x48]
   140010ece:	lea    r9,[rbp-0x18]
   140010ed2:	mov    rdx,QWORD PTR [r14+0x120]
   140010ed9:	or     r8d,0xffffffff
   140010edd:	mov    DWORD PTR [rsp+0x20],0x40415
   140010ee5:	mov    ecx,DWORD PTR [rax+0x20]
   140010ee8:	mov    DWORD PTR [rbp-0x18],ecx
   140010eeb:	mov    ecx,DWORD PTR [rax]
   140010eed:	mov    DWORD PTR [rbp-0x10],ecx
   140010ef0:	mov    ecx,DWORD PTR [rax+0x14]
   140010ef3:	mov    DWORD PTR [rbp-0x14],ecx
   140010ef6:	mov    ecx,DWORD PTR [rax+0x34]
   140010ef9:	mov    DWORD PTR [rbp-0xc],ecx
   140010efc:	mov    rcx,rsi
   140010eff:	call   QWORD PTR [rip+0x5513]        # 0x140016418
   140010f05:	mov    ecx,DWORD PTR [rbp-0x10]
   140010f08:	sub    ecx,DWORD PTR [rbp-0x18]
   140010f0b:	mov    r8d,DWORD PTR [rbp-0xc]
   140010f0f:	mov    eax,ecx
   140010f11:	sub    r8d,DWORD PTR [rbp-0x14]
   140010f15:	cdq    
   140010f16:	sub    eax,edx
   140010f18:	sar    eax,1
   140010f1a:	sub    ebx,eax
   140010f1c:	mov    DWORD PTR [rbp-0x18],ebx
   140010f1f:	lea    eax,[rbx+rcx*1]
   140010f22:	mov    ecx,DWORD PTR [rbp-0x5c]
   140010f25:	mov    DWORD PTR [rbp-0x10],eax
   140010f28:	mov    eax,r8d
   140010f2b:	cdq    
   140010f2c:	sub    eax,edx
   140010f2e:	lea    rdx,[rsp+0x60]
   140010f33:	sar    eax,1
   140010f35:	sub    ecx,eax
   140010f37:	mov    DWORD PTR [rbp-0x14],ecx
   140010f3a:	lea    eax,[rcx+r8*1]
   140010f3e:	mov    ecx,DWORD PTR [r14+0x144]
   140010f45:	mov    DWORD PTR [rbp-0xc],eax
   140010f48:	call   0x14000cbf0
   140010f4d:	mov    ebx,DWORD PTR [rsp+0x60]
   140010f51:	mov    r13,rax
   140010f54:	test   ebx,ebx
   140010f56:	js     0x140010fcd
   140010f58:	lea    r8,[rsp+0x60]
   140010f5d:	mov    rdx,rax
   140010f60:	mov    rcx,rsi
   140010f63:	call   0x14000c018
   140010f68:	mov    ebx,DWORD PTR [rsp+0x60]
   140010f6c:	mov    QWORD PTR [rbp-0x48],rax
   140010f70:	test   ebx,ebx
   140010f72:	js     0x140010fbf
   140010f74:	lea    r9,[rsp+0x60]
   140010f79:	mov    r8,r13
   140010f7c:	lea    rdx,[rbp-0x18]
   140010f80:	mov    rcx,rsi
   140010f83:	call   0x14000cca0
   140010f88:	mov    ebx,DWORD PTR [rsp+0x60]
   140010f8c:	test   ebx,ebx
   140010f8e:	js     0x140010fb0
   140010f90:	mov    rdx,QWORD PTR [r14+0x120]
   140010f97:	lea    r9,[rbp-0x18]
   140010f9b:	or     r8d,0xffffffff
   140010f9f:	mov    DWORD PTR [rsp+0x20],0x40015
   140010fa7:	mov    rcx,rsi
   140010faa:	call   QWORD PTR [rip+0x5468]        # 0x140016418
   140010fb0:	mov    rdx,QWORD PTR [rbp-0x48]
   140010fb4:	xor    r8d,r8d
   140010fb7:	mov    rcx,rsi
   140010fba:	call   0x14000c018
   140010fbf:	xor    edx,edx
   140010fc1:	mov    rcx,r13
   140010fc4:	call   0x14000c0d8
   140010fc9:	test   ebx,ebx
   140010fcb:	jns    0x140010fda
   140010fcd:	mov    eax,DWORD PTR [rsp+0x68]
   140010fd1:	test   eax,eax
   140010fd3:	cmovns eax,ebx
   140010fd6:	mov    DWORD PTR [rsp+0x68],eax
   140010fda:	test   rdi,rdi
   140010fdd:	je     0x140010fed
   140010fdf:	xor    r8d,r8d
   140010fe2:	mov    rdx,rdi
   140010fe5:	mov    rcx,rsi
   140010fe8:	call   0x14000c018
   140010fed:	mov    edx,DWORD PTR [rbp-0x70]
   140010ff0:	lea    r8,[rsp+0x60]
   140010ff5:	mov    rcx,rsi
   140010ff8:	call   0x14000c480
   140010ffd:	mov    edi,DWORD PTR [rsp+0x60]
   140011001:	mov    edx,DWORD PTR [rsp+0x70]
   140011005:	mov    rcx,rsi
   140011008:	call   QWORD PTR [rip+0x508a]        # 0x140016098
   14001100e:	test   edi,edi
   140011010:	jns    0x14001101f
   140011012:	mov    eax,DWORD PTR [rsp+0x68]
   140011016:	test   eax,eax
   140011018:	cmovns eax,edi
   14001101b:	mov    DWORD PTR [rsp+0x68],eax
   14001101f:	and    DWORD PTR [rsp+0x6c],0x0
   140011024:	lea    r8,[rsp+0x6c]
   140011029:	lea    rdx,[rip+0x6fd0]        # 0x140018000
   140011030:	lea    rcx,[rbp-0x18]
   140011034:	call   0x14000bf4c
   140011039:	mov    rcx,QWORD PTR [rbp-0x78]
   14001103d:	call   QWORD PTR [rip+0x50b5]        # 0x1400160f8
   140011043:	test   eax,eax
   140011045:	jne    0x14001108a
   140011047:	call   QWORD PTR [rip+0x523b]        # 0x140016288
   14001104d:	movzx  r9d,ax
   140011051:	or     r9d,0x80070000
   140011058:	test   eax,eax
   14001105a:	cmovle r9d,eax
   14001105e:	mov    DWORD PTR [rsp+0x6c],r9d
   140011063:	mov    rcx,QWORD PTR [rip+0xcfb6]        # 0x14001e020
   14001106a:	cmp    rcx,r12
   14001106d:	je     0x14001108a
   14001106f:	test   BYTE PTR [rcx+0x1c],r15b
   140011073:	je     0x14001108a
   140011075:	mov    rcx,QWORD PTR [rcx+0x10]
   140011079:	lea    r8,[rip+0x7338]        # 0x1400183b8
   140011080:	mov    edx,0x12
   140011085:	call   0x140001228
   14001108a:	lea    rcx,[rbp-0x18]
   14001108e:	call   0x14000bf98
   140011093:	jmp    0x1400110d5
   140011095:	mov    ebx,0x80004003
   14001109a:	mov    DWORD PTR [rsp+0x68],ebx
   14001109e:	mov    rcx,QWORD PTR [rip+0xcf7b]        # 0x14001e020
   1400110a5:	lea    r12,[rip+0xcf74]        # 0x14001e020
   1400110ac:	cmp    rcx,r12
   1400110af:	je     0x1400110d9
   1400110b1:	mov    r15b,0x4
   1400110b4:	test   BYTE PTR [rcx+0x1c],r15b
   1400110b8:	je     0x1400110d9
   1400110ba:	mov    rcx,QWORD PTR [rcx+0x10]
   1400110be:	lea    r8,[rip+0x7abb]        # 0x140018b80
   1400110c5:	mov    edx,0x1f
   1400110ca:	mov    r9d,0x80004003
   1400110d0:	call   0x140001228
   1400110d5:	mov    ebx,DWORD PTR [rsp+0x68]
   1400110d9:	lea    rcx,[rbp-0x28]
   1400110dd:	call   0x14000bf98
   1400110e2:	mov    eax,ebx
   1400110e4:	mov    rcx,QWORD PTR [rbp+0x8]
   1400110e8:	xor    rcx,rsp
   1400110eb:	call   0x1400146a0
   1400110f0:	add    rsp,0x118
   1400110f7:	pop    r15
   1400110f9:	pop    r14
   1400110fb:	pop    r13
   1400110fd:	pop    r12
   1400110ff:	pop    rdi
   140011100:	pop    rsi
   140011101:	pop    rbx
   140011102:	pop    rbp
   140011103:	ret    
   140011104:	int3   
   140011105:	int3   
   140011106:	int3   
   140011107:	int3   
   140011108:	int3   
   140011109:	int3   
   14001110a:	int3   
   14001110b:	int3   
   14001110c:	mov    rax,rsp
   14001110f:	mov    QWORD PTR [rax+0x8],rcx
   140011113:	push   rbx
   140011114:	sub    rsp,0x40
   140011118:	and    DWORD PTR [rax+0x8],0x0
   14001111c:	lea    rdx,[rip+0x7805]        # 0x140018928
   140011123:	mov    rbx,r8
   140011126:	movaps XMMWORD PTR [rax-0x18],xmm6
   14001112a:	lea    r8,[rax+0x8]
   14001112e:	movaps xmm6,xmm1
   140011131:	lea    rcx,[rax-0x28]
   140011135:	call   0x14000bf4c
   14001113a:	test   rbx,rbx
   14001113d:	jne    0x14001117b
   14001113f:	mov    DWORD PTR [rsp+0x50],0x80070057
   140011147:	mov    rcx,QWORD PTR [rip+0xced2]        # 0x14001e020
   14001114e:	lea    rax,[rip+0xcecb]        # 0x14001e020
   140011155:	cmp    rcx,rax
   140011158:	je     0x1400111c2
   14001115a:	test   BYTE PTR [rcx+0x1c],0x4
   14001115e:	je     0x1400111c2
   140011160:	mov    rcx,QWORD PTR [rcx+0x10]
   140011164:	lea    edx,[rbx+0x28]
   140011167:	mov    r9d,0x80070057
   14001116d:	lea    r8,[rip+0x7a0c]        # 0x140018b80
   140011174:	call   0x140001228
   140011179:	jmp    0x1400111c2
   14001117b:	and    DWORD PTR [rbx+0x4],0x0
   14001117f:	and    DWORD PTR [rbx+0x10],0x0
   140011183:	and    DWORD PTR [rbx+0x24],0x0
   140011187:	and    DWORD PTR [rbx+0x30],0x0
   14001118b:	cvttsd2si ecx,xmm6
   14001118f:	mulsd  xmm6,QWORD PTR [rip+0x7da1]        # 0x140018f38
   140011197:	mov    DWORD PTR [rbx],ecx
   140011199:	mov    DWORD PTR [rbx+0x34],ecx
   14001119c:	cvttsd2si eax,xmm6
   1400111a0:	mov    DWORD PTR [rbx+0x8],eax
   1400111a3:	mov    DWORD PTR [rbx+0x2c],eax
   1400111a6:	mov    DWORD PTR [rbx+0x38],eax
   1400111a9:	mov    DWORD PTR [rbx+0x3c],eax
   1400111ac:	neg    eax
   1400111ae:	neg    ecx
   1400111b0:	mov    DWORD PTR [rbx+0xc],eax
   1400111b3:	mov    DWORD PTR [rbx+0x14],ecx
   1400111b6:	mov    DWORD PTR [rbx+0x20],ecx
   1400111b9:	mov    DWORD PTR [rbx+0x1c],eax
   1400111bc:	mov    DWORD PTR [rbx+0x18],eax
   1400111bf:	mov    DWORD PTR [rbx+0x28],eax
   1400111c2:	lea    rcx,[rsp+0x20]
   1400111c7:	call   0x14000bf98
   1400111cc:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400111d1:	add    rsp,0x40
   1400111d5:	pop    rbx
   1400111d6:	ret    
   1400111d7:	int3   
   1400111d8:	int3   
   1400111d9:	int3   
   1400111da:	int3   
   1400111db:	int3   
   1400111dc:	int3   
   1400111dd:	int3   
   1400111de:	int3   
   1400111df:	int3   
   1400111e0:	mov    r11,rsp
   1400111e3:	mov    QWORD PTR [r11+0x18],rbx
   1400111e7:	mov    QWORD PTR [r11+0x20],rbp
   1400111eb:	push   rsi
   1400111ec:	push   rdi
   1400111ed:	push   r14
   1400111ef:	sub    rsp,0x50
   1400111f3:	mov    rax,QWORD PTR [rip+0xce16]        # 0x14001e010
   1400111fa:	xor    rax,rsp
   1400111fd:	mov    QWORD PTR [rsp+0x48],rax
   140011202:	mov    r14,rdx
   140011205:	lea    r8,[r11-0x48]
   140011209:	mov    rdi,rcx
   14001120c:	lea    rdx,[rip+0x774d]        # 0x140018960
   140011213:	xor    ebx,ebx
   140011215:	lea    rcx,[r11-0x40]
   140011219:	mov    DWORD PTR [rsp+0x20],ebx
   14001121d:	call   0x14000bf4c
   140011222:	test   r14,r14
   140011225:	jne    0x14001126e
   140011227:	mov    DWORD PTR [rsp+0x20],0x80070057
   14001122f:	mov    rcx,QWORD PTR [rip+0xcdea]        # 0x14001e020
   140011236:	lea    rax,[rip+0xcde3]        # 0x14001e020
   14001123d:	cmp    rcx,rax
   140011240:	je     0x140011314
   140011246:	test   BYTE PTR [rcx+0x1c],0x4
   14001124a:	je     0x140011314
   140011250:	mov    rcx,QWORD PTR [rcx+0x10]
   140011254:	lea    edx,[rbx+0x29]
   140011257:	mov    r9d,0x80070057
   14001125d:	lea    r8,[rip+0x791c]        # 0x140018b80
   140011264:	call   0x140001228
   140011269:	jmp    0x140011314
   14001126e:	lea    rsi,[rdi+0x4]
   140011272:	mov    rcx,rsi
   140011275:	call   QWORD PTR [rip+0x5215]        # 0x140016490
   14001127b:	xor    edx,edx
   14001127d:	xor    ecx,ecx
   14001127f:	call   0x14000c188
   140011284:	mov    rdx,rax
   140011287:	mov    rcx,rdi
   14001128a:	mov    rbp,rax
   14001128d:	call   0x140011348
   140011292:	mov    DWORD PTR [rsp+0x20],eax
   140011296:	test   rbp,rbp
   140011299:	je     0x1400112ac
   14001129b:	xor    r8d,r8d
   14001129e:	mov    rdx,rbp
   1400112a1:	xor    ecx,ecx
   1400112a3:	call   0x14000c314
   1400112a8:	mov    eax,DWORD PTR [rsp+0x20]
   1400112ac:	test   eax,eax
   1400112ae:	js     0x1400112f1
   1400112b0:	lea    rbp,[rdi+0x4a8]
   1400112b7:	lea    r8,[rsp+0x38]
   1400112bc:	mov    edx,ebx
   1400112be:	mov    rcx,rdi
   1400112c1:	call   0x14001045c
   1400112c6:	lea    r8,[rsp+0x38]
   1400112cb:	mov    rdx,rsi
   1400112ce:	mov    rcx,rsi
   1400112d1:	call   QWORD PTR [rip+0x50c1]        # 0x140016398
   1400112d7:	mov    r8,rbp
   1400112da:	mov    rdx,rsi
   1400112dd:	mov    rcx,rsi
   1400112e0:	call   QWORD PTR [rip+0x50b2]        # 0x140016398
   1400112e6:	inc    ebx
   1400112e8:	add    rbp,0x10
   1400112ec:	cmp    ebx,0x8
   1400112ef:	jl     0x1400112b7
   1400112f1:	mov    eax,DWORD PTR [rsi]
   1400112f3:	mov    rdx,rsi
   1400112f6:	neg    eax
   1400112f8:	mov    rcx,r14
   1400112fb:	cmp    DWORD PTR [rdi+0xc],eax
   1400112fe:	cmovg  eax,DWORD PTR [rdi+0xc]
   140011302:	mov    DWORD PTR [rdi+0xc],eax
   140011305:	neg    eax
   140011307:	cmp    DWORD PTR [rsi],eax
   140011309:	cmovl  eax,DWORD PTR [rsi]
   14001130c:	mov    DWORD PTR [rsi],eax
   14001130e:	call   QWORD PTR [rip+0x50b4]        # 0x1400163c8
   140011314:	lea    rcx,[rsp+0x28]
   140011319:	call   0x14000bf98
   14001131e:	mov    rcx,QWORD PTR [rsp+0x48]
   140011323:	xor    rcx,rsp
   140011326:	call   0x1400146a0
   14001132b:	lea    r11,[rsp+0x50]
   140011330:	mov    rbx,QWORD PTR [r11+0x30]
   140011334:	mov    rbp,QWORD PTR [r11+0x38]
   140011338:	mov    rsp,r11
   14001133b:	pop    r14
   14001133d:	pop    rdi
   14001133e:	pop    rsi
   14001133f:	ret    
   140011340:	int3   
   140011341:	int3   
   140011342:	int3   
   140011343:	int3   
   140011344:	int3   
   140011345:	int3   
   140011346:	int3   
   140011347:	int3   
   140011348:	mov    QWORD PTR [rsp+0x18],rbx
   14001134d:	push   rbp
   14001134e:	push   rsi
   14001134f:	push   rdi
   140011350:	push   r12
   140011352:	push   r13
   140011354:	push   r14
   140011356:	push   r15
   140011358:	lea    rbp,[rsp-0x27]
   14001135d:	sub    rsp,0xb0
   140011364:	mov    rax,QWORD PTR [rip+0xcca5]        # 0x14001e010
   14001136b:	xor    rax,rsp
   14001136e:	mov    QWORD PTR [rbp+0x17],rax
   140011372:	mov    r14,rdx
   140011375:	mov    QWORD PTR [rbp-0x11],rdx
   140011379:	mov    rbx,rcx
   14001137c:	lea    rdx,[rip+0x7605]        # 0x140018988
   140011383:	xor    edi,edi
   140011385:	lea    rcx,[rbp-0x9]
   140011389:	lea    r8,[rbp-0x51]
   14001138d:	mov    DWORD PTR [rbp-0x51],edi
   140011390:	call   0x14000bf4c
   140011395:	cmp    DWORD PTR [rbx],edi
   140011397:	je     0x1400117d0
   14001139d:	movd   xmm1,DWORD PTR [rbx+0x100]
   1400113a5:	lea    r8,[rbx+0x368]
   1400113ac:	cvtdq2pd xmm1,xmm1
   1400113b0:	call   0x14001110c
   1400113b5:	movd   xmm1,DWORD PTR [rbx+0x104]
   1400113bd:	lea    r8,[rbx+0x3a8]
   1400113c4:	cvtdq2pd xmm1,xmm1
   1400113c8:	call   0x14001110c
   1400113cd:	xor    r8d,r8d
   1400113d0:	lea    rdi,[rbx+0x178]
   1400113d7:	mov    QWORD PTR [rbx+0x5b0],r8
   1400113de:	lea    esi,[r8+0x8]
   1400113e2:	lea    r13d,[r8+0x1]
   1400113e6:	mov    rdx,QWORD PTR [rdi]
   1400113e9:	mov    DWORD PTR [rbp-0x55],r8d
   1400113ed:	mov    DWORD PTR [rbp-0x59],r8d
   1400113f1:	test   rdx,rdx
   1400113f4:	je     0x140011428
   1400113f6:	lea    r9,[rbp-0x59]
   1400113fa:	lea    r8,[rbp-0x55]
   1400113fe:	call   0x140011a04
   140011403:	mov    eax,DWORD PTR [rbp-0x55]
   140011406:	cmp    eax,DWORD PTR [rbx+0x5b0]
   14001140c:	jle    0x140011414
   14001140e:	mov    DWORD PTR [rbx+0x5b0],eax
   140011414:	mov    eax,DWORD PTR [rbp-0x59]
   140011417:	xor    r8d,r8d
   14001141a:	cmp    eax,DWORD PTR [rbx+0x5b4]
   140011420:	jle    0x140011428
   140011422:	mov    DWORD PTR [rbx+0x5b4],eax
   140011428:	add    rdi,0x40
   14001142c:	sub    rsi,r13
   14001142f:	jne    0x1400113e6
   140011431:	mov    QWORD PTR [rbx+0x5b8],rsi
   140011438:	mov    r15d,r8d
   14001143b:	mov    QWORD PTR [rbp-0x19],r8
   14001143f:	mov    DWORD PTR [rbp-0x39],r8d
   140011443:	test   r14,r14
   140011446:	je     0x140011477
   140011448:	mov    rdx,QWORD PTR [rbx+0x148]
   14001144f:	test   rdx,rdx
   140011452:	jne    0x140011458
   140011454:	mov    rdx,QWORD PTR [rbx+0x18]
   140011458:	lea    r8,[rbp-0x51]
   14001145c:	mov    rcx,r14
   14001145f:	call   0x14000c018
   140011464:	xor    r8d,r8d
   140011467:	mov    QWORD PTR [rbp-0x19],rax
   14001146b:	cmp    DWORD PTR [rbp-0x51],r8d
   14001146f:	cmovge r15d,r13d
   140011473:	mov    DWORD PTR [rbp-0x39],r15d
   140011477:	cmp    DWORD PTR [rbx+0x13c],r8d
   14001147e:	je     0x140011498
   140011480:	mov    ecx,DWORD PTR [rbx+0x134]
   140011486:	mov    DWORD PTR [rbx+0x5b8],ecx
   14001148c:	mov    ecx,DWORD PTR [rbx+0x138]
   140011492:	mov    DWORD PTR [rbx+0x5bc],ecx
   140011498:	movsxd r11,r15d
   14001149b:	lea    rdx,[rbx+0x4a8]
   1400114a2:	mov    ecx,r8d
   1400114a5:	mov    QWORD PTR [rbp-0x29],r11
   1400114a9:	lea    r9,[rbx+0x3ac]
   1400114b0:	mov    DWORD PTR [rbp-0x55],ecx
   1400114b3:	mov    QWORD PTR [rbp-0x21],rdx
   1400114b7:	lea    rsi,[rbx+0x16c]
   1400114be:	mov    QWORD PTR [rbp-0x49],r9
   1400114c2:	mov    r13,rdx
   1400114c5:	mov    r15,r14
   1400114c8:	test   BYTE PTR [rsi],0x2
   1400114cb:	jne    0x1400114dc
   1400114cd:	xor    eax,eax
   1400114cf:	mov    QWORD PTR [r13+0x0],rax
   1400114d3:	mov    QWORD PTR [r13+0x8],rax
   1400114d7:	jmp    0x14001178b
   1400114dc:	test   BYTE PTR [rsi],0x8
   1400114df:	je     0x1400114e6
   1400114e1:	mov    eax,DWORD PTR [rsi+0x34]
   1400114e4:	jmp    0x1400114ec
   1400114e6:	mov    eax,DWORD PTR [rbx+0x108]
   1400114ec:	xorps  xmm0,xmm0
   1400114ef:	mov    DWORD PTR [rbp-0x59],eax
   1400114f2:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   1400114f7:	cmp    QWORD PTR [rsi+0xc],r8
   1400114fb:	jne    0x140011539
   1400114fd:	mov    r8d,DWORD PTR [rbx+0x5b0]
   140011504:	mov    eax,r8d
   140011507:	mov    ecx,DWORD PTR [rbx+0x5b4]
   14001150d:	cdq    
   14001150e:	mov    r10d,DWORD PTR [r9-0x4]
   140011512:	sub    eax,edx
   140011514:	mov    r12d,DWORD PTR [r9]
   140011517:	sar    eax,1
   140011519:	sub    r10d,eax
   14001151c:	mov    eax,ecx
   14001151e:	cdq    
   14001151f:	mov    DWORD PTR [rbp-0x31],r10d
   140011523:	sub    eax,edx
   140011525:	sar    eax,1
   140011527:	sub    r12d,eax
   14001152a:	lea    edx,[r8+r10*1]
   14001152e:	add    ecx,r12d
   140011531:	mov    DWORD PTR [rbp-0x2d],edx
   140011534:	mov    DWORD PTR [rbp-0x35],ecx
   140011537:	jmp    0x140011561
   140011539:	mov    edx,ecx
   14001153b:	lea    r8,[rbp+0x7]
   14001153f:	mov    rcx,rbx
   140011542:	call   0x14001045c
   140011547:	mov    eax,DWORD PTR [rbp+0x13]
   14001154a:	mov    r12d,DWORD PTR [rbp+0xb]
   14001154e:	mov    r11,QWORD PTR [rbp-0x29]
   140011552:	mov    DWORD PTR [rbp-0x35],eax
   140011555:	mov    eax,DWORD PTR [rbp+0xf]
   140011558:	mov    DWORD PTR [rbp-0x2d],eax
   14001155b:	mov    eax,DWORD PTR [rbp+0x7]
   14001155e:	mov    DWORD PTR [rbp-0x31],eax
   140011561:	xor    r8d,r8d
   140011564:	cmp    DWORD PTR [rbx+0x13c],r8d
   14001156b:	je     0x14001157f
   14001156d:	mov    edi,DWORD PTR [rbx+0x134]
   140011573:	mov    r14d,DWORD PTR [rbx+0x138]
   14001157a:	jmp    0x140011694
   14001157f:	mov    edi,DWORD PTR [rsi+0x20]
   140011582:	cmp    edi,0xffffffff
   140011585:	jne    0x14001158d
   140011587:	mov    edi,DWORD PTR [rbx+0x134]
   14001158d:	mov    r14d,DWORD PTR [rsi+0x24]
   140011591:	cmp    r14d,0xffffffff
   140011595:	jne    0x14001159e
   140011597:	mov    r14d,DWORD PTR [rbx+0x138]
   14001159e:	mov    QWORD PTR [rbp-0x41],r8
   1400115a2:	test   r11,r11
   1400115a5:	je     0x140011694
   1400115ab:	mov    r10,QWORD PTR [rsi+0x2c]
   1400115af:	mov    rax,r8
   1400115b2:	test   r10,r10
   1400115b5:	je     0x1400115e2
   1400115b7:	mov    r9d,0x100
   1400115bd:	mov    rax,r10
   1400115c0:	mov    ecx,r9d
   1400115c3:	mov    edx,r8d
   1400115c6:	cmp    WORD PTR [rax],r8w
   1400115ca:	je     0x1400115d6
   1400115cc:	add    rax,0x2
   1400115d0:	sub    rcx,0x1
   1400115d4:	jne    0x1400115c6
   1400115d6:	test   rcx,rcx
   1400115d9:	jne    0x14001167b
   1400115df:	mov    rax,r8
   1400115e2:	mov    edx,0x80070057
   1400115e7:	test   edx,edx
   1400115e9:	mov    DWORD PTR [rbp-0x51],edx
   1400115ec:	cmovs  rax,r8
   1400115f0:	js     0x140011694
   1400115f6:	lea    r9,[rbp-0x41]
   1400115fa:	mov    r8d,eax
   1400115fd:	mov    rdx,r10
   140011600:	mov    rcx,r15
   140011603:	call   0x14000cf18
   140011608:	xor    r8d,r8d
   14001160b:	test   eax,eax
   14001160d:	je     0x140011694
   140011613:	cmp    DWORD PTR [rbp-0x41],edi
   140011616:	jle    0x140011686
   140011618:	mov    eax,DWORD PTR [rbp-0x3d]
   14001161b:	lea    rcx,[rbp+0x7]
   14001161f:	add    eax,eax
   140011621:	xorps  xmm0,xmm0
   140011624:	mov    r9d,edi
   140011627:	mov    DWORD PTR [rsp+0x20],eax
   14001162b:	xor    edx,edx
   14001162d:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   140011632:	call   QWORD PTR [rip+0x4d58]        # 0x140016390
   140011638:	mov    rdx,QWORD PTR [rsi+0x2c]
   14001163c:	lea    r9,[rbp+0x7]
   140011640:	xor    edi,edi
   140011642:	or     r8d,0xffffffff
   140011646:	mov    QWORD PTR [rsp+0x28],rdi
   14001164b:	mov    rcx,r15
   14001164e:	mov    DWORD PTR [rsp+0x20],0x40411
   140011656:	call   QWORD PTR [rip+0x4d2c]        # 0x140016388
   14001165c:	mov    eax,DWORD PTR [rbp-0x3d]
   14001165f:	mov    edi,DWORD PTR [rbp+0xf]
   140011662:	add    eax,eax
   140011664:	sub    edi,DWORD PTR [rbp+0x7]
   140011667:	mov    r14d,DWORD PTR [rbp+0x13]
   14001166b:	sub    r14d,DWORD PTR [rbp+0xb]
   14001166f:	cmp    eax,r14d
   140011672:	cmovl  r14d,eax
   140011676:	xor    r8d,r8d
   140011679:	jmp    0x140011694
   14001167b:	mov    rax,r9
   14001167e:	sub    rax,rcx
   140011681:	jmp    0x1400115e7
   140011686:	mov    rax,QWORD PTR [rbp-0x41]
   14001168a:	mov    QWORD PTR [rbp+0x7],rax
   14001168e:	mov    edi,eax
   140011690:	mov    r14d,DWORD PTR [rbp+0xb]
   140011694:	mov    ecx,DWORD PTR [rsi+0x14]
   140011697:	test   ecx,ecx
   140011699:	je     0x140011716
   14001169b:	sub    ecx,0x1
   14001169e:	je     0x1400116f4
   1400116a0:	sub    ecx,0x1
   1400116a3:	je     0x1400116cf
   1400116a5:	cmp    ecx,0x1
   1400116a8:	jne    0x140011746
   1400116ae:	mov    r8d,DWORD PTR [rbp-0x35]
   1400116b2:	mov    eax,edi
   1400116b4:	mov    rcx,QWORD PTR [rbp-0x49]
   1400116b8:	cdq    
   1400116b9:	sub    eax,edx
   1400116bb:	sar    eax,1
   1400116bd:	mov    edx,DWORD PTR [rcx-0x4]
   1400116c0:	sub    edx,eax
   1400116c2:	lea    eax,[r14+r8*1]
   1400116c6:	add    eax,DWORD PTR [rbp-0x59]
   1400116c9:	add    r8d,DWORD PTR [rbp-0x59]
   1400116cd:	jmp    0x140011732
   1400116cf:	mov    rcx,QWORD PTR [rbp-0x49]
   1400116d3:	mov    eax,r14d
   1400116d6:	mov    r9d,DWORD PTR [rbp-0x31]
   1400116da:	cdq    
   1400116db:	sub    r9d,DWORD PTR [rbp-0x59]
   1400116df:	sub    eax,edx
   1400116e1:	sar    eax,1
   1400116e3:	mov    edx,r9d
   1400116e6:	mov    r8d,DWORD PTR [rcx]
   1400116e9:	sub    r8d,eax
   1400116ec:	sub    edx,edi
   1400116ee:	lea    eax,[r8+r14*1]
   1400116f2:	jmp    0x140011736
   1400116f4:	mov    rcx,QWORD PTR [rbp-0x49]
   1400116f8:	mov    eax,edi
   1400116fa:	cdq    
   1400116fb:	sub    eax,edx
   1400116fd:	sar    eax,1
   1400116ff:	mov    edx,DWORD PTR [rcx-0x4]
   140011702:	sub    edx,eax
   140011704:	mov    eax,r12d
   140011707:	sub    eax,DWORD PTR [rbp-0x59]
   14001170a:	sub    r12d,r14d
   14001170d:	sub    r12d,DWORD PTR [rbp-0x59]
   140011711:	mov    r8d,r12d
   140011714:	jmp    0x140011732
   140011716:	mov    rcx,QWORD PTR [rbp-0x49]
   14001171a:	mov    eax,r14d
   14001171d:	cdq    
   14001171e:	sub    eax,edx
   140011720:	mov    edx,DWORD PTR [rbp-0x2d]
   140011723:	sar    eax,1
   140011725:	mov    r8d,DWORD PTR [rcx]
   140011728:	sub    r8d,eax
   14001172b:	add    edx,DWORD PTR [rbp-0x59]
   14001172e:	lea    eax,[r8+r14*1]
   140011732:	lea    r9d,[rdx+rdi*1]
   140011736:	mov    rcx,r13
   140011739:	mov    DWORD PTR [rsp+0x20],eax
   14001173d:	call   QWORD PTR [rip+0x4c4d]        # 0x140016390
   140011743:	xor    r8d,r8d
   140011746:	mov    rdx,QWORD PTR [rbp-0x21]
   14001174a:	mov    r9,QWORD PTR [rbp-0x49]
   14001174e:	mov    r11,QWORD PTR [rbp-0x29]
   140011752:	cmp    DWORD PTR [rbx+0x13c],r8d
   140011759:	jne    0x140011788
   14001175b:	mov    eax,DWORD PTR [rbx+0x5b8]
   140011761:	mov    ecx,DWORD PTR [rdx+0x8]
   140011764:	sub    ecx,DWORD PTR [rdx]
   140011766:	cmp    eax,ecx
   140011768:	cmovg  ecx,eax
   14001176b:	mov    eax,DWORD PTR [rbx+0x5bc]
   140011771:	mov    DWORD PTR [rbx+0x5b8],ecx
   140011777:	mov    ecx,DWORD PTR [rdx+0xc]
   14001177a:	sub    ecx,DWORD PTR [rdx+0x4]
   14001177d:	cmp    eax,ecx
   14001177f:	cmovg  ecx,eax
   140011782:	mov    DWORD PTR [rbx+0x5bc],ecx
   140011788:	mov    ecx,DWORD PTR [rbp-0x55]
   14001178b:	inc    ecx
   14001178d:	add    r9,0x8
   140011791:	add    rdx,0x10
   140011795:	mov    DWORD PTR [rbp-0x55],ecx
   140011798:	add    r13,0x10
   14001179c:	mov    QWORD PTR [rbp-0x49],r9
   1400117a0:	add    rsi,0x40
   1400117a4:	mov    QWORD PTR [rbp-0x21],rdx
   1400117a8:	cmp    ecx,0x8
   1400117ab:	jl     0x1400114c8
   1400117b1:	mov    r15d,DWORD PTR [rbp-0x39]
   1400117b5:	test   r15d,r15d
   1400117b8:	je     0x1400117cd
   1400117ba:	mov    rdx,QWORD PTR [rbp-0x19]
   1400117be:	xor    r8d,r8d
   1400117c1:	mov    rcx,QWORD PTR [rbp-0x11]
   1400117c5:	call   0x14000c018
   1400117ca:	xor    r8d,r8d
   1400117cd:	mov    DWORD PTR [rbx],r8d
   1400117d0:	lea    rcx,[rbp-0x9]
   1400117d4:	call   0x14000bf98
   1400117d9:	xor    eax,eax
   1400117db:	mov    rcx,QWORD PTR [rbp+0x17]
   1400117df:	xor    rcx,rsp
   1400117e2:	call   0x1400146a0
   1400117e7:	mov    rbx,QWORD PTR [rsp+0x100]
   1400117ef:	add    rsp,0xb0
   1400117f6:	pop    r15
   1400117f8:	pop    r14
   1400117fa:	pop    r13
   1400117fc:	pop    r12
   1400117fe:	pop    rdi
   1400117ff:	pop    rsi
   140011800:	pop    rbp
   140011801:	ret    
   140011802:	int3   
   140011803:	int3   
   140011804:	int3   
   140011805:	int3   
   140011806:	int3   
   140011807:	int3   
   140011808:	mov    rax,rsp
   14001180b:	push   rbp
   14001180c:	push   rsi
   14001180d:	push   rdi
   14001180e:	push   r12
   140011810:	push   r13
   140011812:	push   r14
   140011814:	push   r15
   140011816:	mov    rbp,rsp
   140011819:	sub    rsp,0x70
   14001181d:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   140011825:	mov    QWORD PTR [rax+0x8],rbx
   140011829:	mov    r15d,edx
   14001182c:	mov    rdi,rcx
   14001182f:	and    DWORD PTR [rbp+0x48],0x0
   140011833:	and    QWORD PTR [rbp+0x50],0x0
   140011838:	lea    r8,[rbp+0x48]
   14001183c:	lea    rdx,[rip+0x719d]        # 0x1400189e0
   140011843:	lea    rcx,[rbp-0x18]
   140011847:	call   0x14000bf4c
   14001184c:	nop
   14001184d:	lea    eax,[r15-0x4d9]
   140011854:	test   eax,0xffffffe7
   140011859:	jne    0x140011999
   14001185f:	cmp    r15d,0x4f1
   140011866:	je     0x140011999
   14001186c:	mov    rcx,rdi
   14001186f:	call   0x140011ef0
   140011874:	mov    ebx,eax
   140011876:	mov    DWORD PTR [rbp+0x48],eax
   140011879:	test   eax,eax
   14001187b:	js     0x1400119d8
   140011881:	xor    r14d,r14d
   140011884:	lea    rsi,[rdi+0x568]
   14001188b:	lea    r12,[rip+0xc78e]        # 0x14001e020
   140011892:	and    QWORD PTR [rsi],0x0
   140011896:	and    QWORD PTR [rsi-0x40],0x0
   14001189b:	lea    eax,[r14+r15*1]
   14001189f:	movzx  edx,ax
   1400118a2:	lea    r9,[rbp+0x50]
   1400118a6:	mov    rcx,QWORD PTR [rdi+0x5a8]
   1400118ad:	call   0x140012efc
   1400118b2:	mov    ebx,eax
   1400118b4:	mov    DWORD PTR [rbp+0x48],eax
   1400118b7:	test   eax,eax
   1400118b9:	js     0x140011986
   1400118bf:	mov    r13,QWORD PTR [rbp+0x50]
   1400118c3:	mov    QWORD PTR [rsi-0x40],r13
   1400118c7:	xor    ecx,ecx
   1400118c9:	call   QWORD PTR [rip+0x4a29]        # 0x1400162f8
   1400118cf:	mov    rbx,rax
   1400118d2:	test   rax,rax
   1400118d5:	je     0x140011983
   1400118db:	mov    ecx,DWORD PTR [rdi+0x110]
   1400118e1:	mov    DWORD PTR [rsp+0x38],ecx
   1400118e5:	mov    DWORD PTR [rsp+0x28],0x1
   1400118ed:	mov    r8,r13
   1400118f0:	mov    rdx,rax
   1400118f3:	call   0x140011b18
   1400118f8:	test   rax,rax
   1400118fb:	jne    0x140011944
   1400118fd:	call   QWORD PTR [rip+0x4985]        # 0x140016288
   140011903:	movzx  r8d,ax
   140011907:	or     r8d,0x80070000
   14001190e:	test   eax,eax
   140011910:	cmovle r8d,eax
   140011914:	mov    DWORD PTR [rbp+0x48],r8d
   140011918:	mov    rcx,QWORD PTR [rip+0xc701]        # 0x14001e020
   14001191f:	cmp    rcx,r12
   140011922:	je     0x14001194b
   140011924:	test   BYTE PTR [rcx+0x1c],0x4
   140011928:	je     0x14001194b
   14001192a:	mov    edx,0x2c
   14001192f:	mov    r9d,r8d
   140011932:	lea    r8,[rip+0x7247]        # 0x140018b80
   140011939:	mov    rcx,QWORD PTR [rcx+0x10]
   14001193d:	call   0x140001228
   140011942:	jmp    0x140011947
   140011944:	mov    QWORD PTR [rsi],rax
   140011947:	mov    r8d,DWORD PTR [rbp+0x48]
   14001194b:	test   r8d,r8d
   14001194e:	js     0x140011976
   140011950:	mov    r9d,DWORD PTR [rdi+0x110]
   140011957:	xor    r8d,r8d
   14001195a:	mov    rdx,r13
   14001195d:	mov    rcx,rbx
   140011960:	call   0x14000dce4
   140011965:	mov    DWORD PTR [rbp+0x48],eax
   140011968:	test   eax,eax
   14001196a:	js     0x140011976
   14001196c:	mov    DWORD PTR [rdi+0x160],0x1
   140011976:	xor    r8d,r8d
   140011979:	mov    rdx,rbx
   14001197c:	xor    ecx,ecx
   14001197e:	call   0x14000c314
   140011983:	mov    ebx,DWORD PTR [rbp+0x48]
   140011986:	inc    r14d
   140011989:	add    rsi,0x8
   14001198d:	cmp    r14d,0x8
   140011991:	jl     0x140011892
   140011997:	jmp    0x1400119d8
   140011999:	mov    ebx,0x80070057
   14001199e:	mov    DWORD PTR [rbp+0x48],ebx
   1400119a1:	lea    r12,[rip+0xc678]        # 0x14001e020
   1400119a8:	mov    rcx,QWORD PTR [rip+0xc671]        # 0x14001e020
   1400119af:	cmp    rcx,r12
   1400119b2:	je     0x1400119d8
   1400119b4:	test   BYTE PTR [rcx+0x1c],0x4
   1400119b8:	je     0x1400119d8
   1400119ba:	mov    edx,0x2b
   1400119bf:	mov    r9d,0x80070057
   1400119c5:	lea    r8,[rip+0x71b4]        # 0x140018b80
   1400119cc:	mov    rcx,QWORD PTR [rcx+0x10]
   1400119d0:	call   0x140001228
   1400119d5:	mov    ebx,DWORD PTR [rbp+0x48]
   1400119d8:	lea    rcx,[rbp-0x18]
   1400119dc:	call   0x14000bf98
   1400119e1:	mov    eax,ebx
   1400119e3:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400119eb:	add    rsp,0x70
   1400119ef:	pop    r15
   1400119f1:	pop    r14
   1400119f3:	pop    r13
   1400119f5:	pop    r12
   1400119f7:	pop    rdi
   1400119f8:	pop    rsi
   1400119f9:	pop    rbp
   1400119fa:	ret    
   1400119fb:	int3   
   1400119fc:	int3   
   1400119fd:	int3   
   1400119fe:	int3   
   1400119ff:	int3   
   140011a00:	int3   
   140011a01:	int3   
   140011a02:	int3   
   140011a03:	int3   
   140011a04:	mov    rax,rsp
   140011a07:	mov    QWORD PTR [rax+0x10],rbx
   140011a0b:	mov    QWORD PTR [rax+0x18],rsi
   140011a0f:	mov    QWORD PTR [rax+0x20],rdi
   140011a13:	mov    QWORD PTR [rax+0x8],rcx
   140011a17:	push   rbp
   140011a18:	mov    rbp,rsp
   140011a1b:	sub    rsp,0x50
   140011a1f:	and    DWORD PTR [rbp+0x10],0x0
   140011a23:	lea    rcx,[rbp-0x30]
   140011a27:	mov    rdi,r8
   140011a2a:	mov    rsi,rdx
   140011a2d:	lea    r8,[rbp+0x10]
   140011a31:	mov    rbx,r9
   140011a34:	lea    rdx,[rip+0x6fd5]        # 0x140018a10
   140011a3b:	call   0x14000bf4c
   140011a40:	test   rdi,rdi
   140011a43:	je     0x140011ab1
   140011a45:	test   rbx,rbx
   140011a48:	je     0x140011ab1
   140011a4a:	test   rsi,rsi
   140011a4d:	je     0x140011ab1
   140011a4f:	and    DWORD PTR [rbx],0x0
   140011a52:	lea    r8,[rbp-0x20]
   140011a56:	and    DWORD PTR [rdi],0x0
   140011a59:	mov    edx,0x20
   140011a5e:	mov    rcx,rsi
   140011a61:	call   QWORD PTR [rip+0x4661]        # 0x1400160c8
   140011a67:	test   eax,eax
   140011a69:	jne    0x140011aa5
   140011a6b:	call   QWORD PTR [rip+0x4817]        # 0x140016288
   140011a71:	movzx  ebx,ax
   140011a74:	or     ebx,0x80070000
   140011a7a:	test   eax,eax
   140011a7c:	cmovle ebx,eax
   140011a7f:	mov    DWORD PTR [rbp+0x10],ebx
   140011a82:	mov    rcx,QWORD PTR [rip+0xc597]        # 0x14001e020
   140011a89:	lea    rax,[rip+0xc590]        # 0x14001e020
   140011a90:	cmp    rcx,rax
   140011a93:	je     0x140011af0
   140011a95:	test   BYTE PTR [rcx+0x1c],0x4
   140011a99:	je     0x140011af0
   140011a9b:	mov    edx,0x2e
   140011aa0:	mov    r9d,ebx
   140011aa3:	jmp    0x140011add
   140011aa5:	mov    eax,DWORD PTR [rbp-0x1c]
   140011aa8:	mov    DWORD PTR [rdi],eax
   140011aaa:	mov    eax,DWORD PTR [rbp-0x18]
   140011aad:	mov    DWORD PTR [rbx],eax
   140011aaf:	jmp    0x140011aed
   140011ab1:	mov    ebx,0x80070057
   140011ab6:	mov    DWORD PTR [rbp+0x10],ebx
   140011ab9:	mov    rcx,QWORD PTR [rip+0xc560]        # 0x14001e020
   140011ac0:	lea    rax,[rip+0xc559]        # 0x14001e020
   140011ac7:	cmp    rcx,rax
   140011aca:	je     0x140011af0
   140011acc:	test   BYTE PTR [rcx+0x1c],0x4
   140011ad0:	je     0x140011af0
   140011ad2:	mov    edx,0x2d
   140011ad7:	mov    r9d,0x80070057
   140011add:	mov    rcx,QWORD PTR [rcx+0x10]
   140011ae1:	lea    r8,[rip+0x7098]        # 0x140018b80
   140011ae8:	call   0x140001228
   140011aed:	mov    ebx,DWORD PTR [rbp+0x10]
   140011af0:	lea    rcx,[rbp-0x30]
   140011af4:	call   0x14000bf98
   140011af9:	mov    rsi,QWORD PTR [rsp+0x70]
   140011afe:	mov    eax,ebx
   140011b00:	mov    rbx,QWORD PTR [rsp+0x68]
   140011b05:	mov    rdi,QWORD PTR [rsp+0x78]
   140011b0a:	add    rsp,0x50
   140011b0e:	pop    rbp
   140011b0f:	ret    
   140011b10:	int3   
   140011b11:	int3   
   140011b12:	int3   
   140011b13:	int3   
   140011b14:	int3   
   140011b15:	int3   
   140011b16:	int3   
   140011b17:	int3   
   140011b18:	mov    rax,rsp
   140011b1b:	push   rbp
   140011b1c:	push   rsi
   140011b1d:	push   rdi
   140011b1e:	push   r12
   140011b20:	push   r13
   140011b22:	push   r14
   140011b24:	push   r15
   140011b26:	lea    rbp,[rax-0x3f]
   140011b2a:	sub    rsp,0xc0
   140011b31:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   140011b39:	mov    QWORD PTR [rax+0x8],rbx
   140011b3d:	mov    rax,QWORD PTR [rip+0xc4cc]        # 0x14001e010
   140011b44:	xor    rax,rsp
   140011b47:	mov    QWORD PTR [rbp-0x9],rax
   140011b4b:	mov    rdi,r8
   140011b4e:	mov    r12,rdx
   140011b51:	xor    r13d,r13d
   140011b54:	mov    DWORD PTR [rbp-0x79],r13d
   140011b58:	lea    r8,[rbp-0x79]
   140011b5c:	lea    rdx,[rip+0x6ee5]        # 0x140018a48
   140011b63:	lea    rcx,[rbp-0x51]
   140011b67:	call   0x14000bf4c
   140011b6c:	nop
   140011b6d:	test   r12,r12
   140011b70:	je     0x140011e79
   140011b76:	test   rdi,rdi
   140011b79:	je     0x140011e79
   140011b7f:	mov    ebx,r13d
   140011b82:	lea    r8,[rbp-0x71]
   140011b86:	lea    esi,[r13+0x20]
   140011b8a:	mov    edx,esi
   140011b8c:	mov    rcx,rdi
   140011b8f:	call   QWORD PTR [rip+0x4533]        # 0x1400160c8
   140011b95:	cmp    WORD PTR [rbp-0x5f],si
   140011b99:	je     0x140011bce
   140011b9b:	mov    DWORD PTR [rbp-0x79],0x80004005
   140011ba2:	lea    rax,[rip+0xc477]        # 0x14001e020
   140011ba9:	mov    rcx,QWORD PTR [rip+0xc470]        # 0x14001e020
   140011bb0:	cmp    rcx,rax
   140011bb3:	je     0x140011eb7
   140011bb9:	test   BYTE PTR [rcx+0x1c],0x4
   140011bbd:	je     0x140011eb7
   140011bc3:	lea    edx,[rsi+0x10]
   140011bc6:	mov    r9d,0x80004005
   140011bcc:	jmp    0x140011c2e
   140011bce:	mov    DWORD PTR [rsp+0x20],0x2004
   140011bd6:	xor    r9d,r9d
   140011bd9:	xor    r8d,r8d
   140011bdc:	xor    edx,edx
   140011bde:	mov    rcx,rdi
   140011be1:	call   QWORD PTR [rip+0x4799]        # 0x140016380
   140011be7:	mov    rbx,rax
   140011bea:	test   rax,rax
   140011bed:	jne    0x140011c43
   140011bef:	call   QWORD PTR [rip+0x4693]        # 0x140016288
   140011bf5:	movzx  r9d,ax
   140011bf9:	or     r9d,0x80070000
   140011c00:	test   eax,eax
   140011c02:	cmovle r9d,eax
   140011c06:	mov    DWORD PTR [rbp-0x79],r9d
   140011c0a:	lea    rax,[rip+0xc40f]        # 0x14001e020
   140011c11:	mov    rcx,QWORD PTR [rip+0xc408]        # 0x14001e020
   140011c18:	cmp    rcx,rax
   140011c1b:	je     0x140011eb7
   140011c21:	test   BYTE PTR [rcx+0x1c],0x4
   140011c25:	je     0x140011eb7
   140011c2b:	lea    edx,[rbx+0x31]
   140011c2e:	lea    r8,[rip+0x6f4b]        # 0x140018b80
   140011c35:	mov    rcx,QWORD PTR [rcx+0x10]
   140011c39:	call   0x140001228
   140011c3e:	jmp    0x140011eb7
   140011c43:	mov    ecx,DWORD PTR [rbp-0x6d]
   140011c46:	mov    esi,ecx
   140011c48:	mov    r8d,DWORD PTR [rbp-0x69]
   140011c4c:	imul   esi,r8d
   140011c50:	mov    DWORD PTR [rbp-0x39],0x28
   140011c57:	mov    DWORD PTR [rbp-0x31],r8d
   140011c5b:	mov    DWORD PTR [rbp-0x35],ecx
   140011c5e:	mov    eax,0x1
   140011c63:	mov    WORD PTR [rbp-0x2d],ax
   140011c67:	movzx  eax,WORD PTR [rbp-0x5f]
   140011c6b:	mov    WORD PTR [rbp-0x2b],ax
   140011c6f:	mov    DWORD PTR [rbp-0x29],r13d
   140011c73:	imul   eax,ecx
   140011c76:	add    eax,0x1f
   140011c79:	and    eax,0xffffffe0
   140011c7c:	cdq    
   140011c7d:	and    edx,0x7
   140011c80:	add    eax,edx
   140011c82:	sar    eax,0x3
   140011c85:	imul   eax,r8d
   140011c89:	mov    DWORD PTR [rbp-0x25],eax
   140011c8c:	mov    QWORD PTR [rbp-0x21],r13
   140011c90:	mov    QWORD PTR [rbp-0x19],r13
   140011c94:	test   eax,eax
   140011c96:	je     0x140011eb7
   140011c9c:	mov    ecx,eax
   140011c9e:	call   0x1400142ac
   140011ca3:	mov    rdi,rax
   140011ca6:	test   rax,rax
   140011ca9:	jne    0x140011cf3
   140011cab:	mov    DWORD PTR [rbp-0x79],0x8007000e
   140011cb2:	lea    rax,[rip+0xc367]        # 0x14001e020
   140011cb9:	mov    rcx,QWORD PTR [rip+0xc360]        # 0x14001e020
   140011cc0:	cmp    rcx,rax
   140011cc3:	je     0x140011ce4
   140011cc5:	test   BYTE PTR [rcx+0x1c],0x4
   140011cc9:	je     0x140011ce4
   140011ccb:	lea    edx,[rdi+0x32]
   140011cce:	mov    r9d,0x8007000e
   140011cd4:	lea    r8,[rip+0x6ea5]        # 0x140018b80
   140011cdb:	mov    rcx,QWORD PTR [rcx+0x10]
   140011cdf:	call   0x140001228
   140011ce4:	xor    edx,edx
   140011ce6:	mov    rcx,rbx
   140011ce9:	call   0x14000c0d8
   140011cee:	jmp    0x140011eb4
   140011cf3:	mov    DWORD PTR [rsp+0x30],r13d
   140011cf8:	lea    rax,[rbp-0x39]
   140011cfc:	mov    QWORD PTR [rsp+0x28],rax
   140011d01:	mov    QWORD PTR [rsp+0x20],rdi
   140011d06:	mov    r9d,DWORD PTR [rbp-0x69]
   140011d0a:	xor    r8d,r8d
   140011d0d:	mov    rdx,rbx
   140011d10:	mov    rcx,r12
   140011d13:	call   QWORD PTR [rip+0x4417]        # 0x140016130
   140011d19:	mov    r9d,DWORD PTR [rbp-0x69]
   140011d1d:	cmp    eax,r9d
   140011d20:	je     0x140011d78
   140011d22:	call   QWORD PTR [rip+0x4560]        # 0x140016288
   140011d28:	movzx  r9d,ax
   140011d2c:	or     r9d,0x80070000
   140011d33:	test   eax,eax
   140011d35:	cmovle r9d,eax
   140011d39:	mov    DWORD PTR [rbp-0x79],r9d
   140011d3d:	lea    rax,[rip+0xc2dc]        # 0x14001e020
   140011d44:	mov    rcx,QWORD PTR [rip+0xc2d5]        # 0x14001e020
   140011d4b:	cmp    rcx,rax
   140011d4e:	je     0x140011e6f
   140011d54:	test   BYTE PTR [rcx+0x1c],0x4
   140011d58:	je     0x140011e6f
   140011d5e:	mov    edx,0x33
   140011d63:	lea    r8,[rip+0x6e16]        # 0x140018b80
   140011d6a:	mov    rcx,QWORD PTR [rcx+0x10]
   140011d6e:	call   0x140001228
   140011d73:	jmp    0x140011e6f
   140011d78:	mov    r15,rdi
   140011d7b:	mov    r10d,DWORD PTR [rbp+0x7f]
   140011d7f:	movzx  r11d,r10w
   140011d83:	shr    r11w,0x8
   140011d88:	mov    r14d,r10d
   140011d8b:	shr    r14d,0x10
   140011d8f:	test   esi,esi
   140011d91:	je     0x140011e4d
   140011d97:	dec    esi
   140011d99:	movzx  r9d,BYTE PTR [r15]
   140011d9d:	movzx  edx,BYTE PTR [r15+0x1]
   140011da2:	mov    r13d,DWORD PTR [r15]
   140011da5:	mov    r8d,r13d
   140011da8:	shr    r8d,0x10
   140011dac:	mov    ecx,edx
   140011dae:	shl    ecx,0x8
   140011db1:	movzx  eax,r8b
   140011db5:	shl    eax,0x10
   140011db8:	or     ecx,eax
   140011dba:	or     ecx,r9d
   140011dbd:	cmp    DWORD PTR [rbp+0x6f],0x0
   140011dc1:	je     0x140011dd0
   140011dc3:	test   ecx,ecx
   140011dc5:	jne    0x140011dd0
   140011dc7:	mov    r9b,r10b
   140011dca:	mov    dl,r11b
   140011dcd:	mov    r8b,r14b
   140011dd0:	movzx  eax,dl
   140011dd3:	imul   edx,eax,0x3b
   140011dd6:	movzx  eax,r8b
   140011dda:	imul   ecx,eax,0xb
   140011ddd:	add    edx,ecx
   140011ddf:	movzx  eax,r9b
   140011de3:	imul   ecx,eax,0x1e
   140011de6:	add    edx,ecx
   140011de8:	mov    eax,0x51eb851f
   140011ded:	imul   edx
   140011def:	sar    edx,0x5
   140011df2:	mov    eax,edx
   140011df4:	shr    eax,0x1f
   140011df7:	add    edx,eax
   140011df9:	movzx  ecx,BYTE PTR [r15+0x3]
   140011dfe:	movzx  eax,dl
   140011e01:	imul   ecx,eax
   140011e04:	sub    ecx,0xffffff80
   140011e07:	mov    eax,0x80808081
   140011e0c:	imul   ecx
   140011e0e:	add    edx,ecx
   140011e10:	sar    edx,0x7
   140011e13:	mov    eax,edx
   140011e15:	shr    eax,0x1f
   140011e18:	add    edx,eax
   140011e1a:	movzx  ecx,dl
   140011e1d:	shl    ecx,0x8
   140011e20:	movzx  eax,dl
   140011e23:	shl    eax,0x10
   140011e26:	or     ecx,eax
   140011e28:	and    r13d,0xff000000
   140011e2f:	or     ecx,r13d
   140011e32:	movzx  eax,dl
   140011e35:	or     ecx,eax
   140011e37:	mov    DWORD PTR [r15],ecx
   140011e3a:	add    r15,0x4
   140011e3e:	xor    r13d,r13d
   140011e41:	test   esi,esi
   140011e43:	jne    0x140011d97
   140011e49:	mov    r9d,DWORD PTR [rbp-0x69]
   140011e4d:	mov    DWORD PTR [rsp+0x30],r13d
   140011e52:	lea    rax,[rbp-0x39]
   140011e56:	mov    QWORD PTR [rsp+0x28],rax
   140011e5b:	mov    QWORD PTR [rsp+0x20],rdi
   140011e60:	xor    r8d,r8d
   140011e63:	mov    rdx,rbx
   140011e66:	mov    rcx,r12
   140011e69:	call   QWORD PTR [rip+0x42c9]        # 0x140016138
   140011e6f:	mov    rcx,rdi
   140011e72:	call   0x140014260
   140011e77:	jmp    0x140011eb7
   140011e79:	mov    DWORD PTR [rbp-0x79],0x80070057
   140011e80:	lea    rax,[rip+0xc199]        # 0x14001e020
   140011e87:	mov    rcx,QWORD PTR [rip+0xc192]        # 0x14001e020
   140011e8e:	cmp    rcx,rax
   140011e91:	je     0x140011eb4
   140011e93:	test   BYTE PTR [rcx+0x1c],0x4
   140011e97:	je     0x140011eb4
   140011e99:	mov    edx,0x2f
   140011e9e:	mov    r9d,0x80070057
   140011ea4:	lea    r8,[rip+0x6cd5]        # 0x140018b80
   140011eab:	mov    rcx,QWORD PTR [rcx+0x10]
   140011eaf:	call   0x140001228
   140011eb4:	mov    rbx,r13
   140011eb7:	lea    rcx,[rbp-0x51]
   140011ebb:	call   0x14000bf98
   140011ec0:	mov    rax,rbx
   140011ec3:	mov    rcx,QWORD PTR [rbp-0x9]
   140011ec7:	xor    rcx,rsp
   140011eca:	call   0x1400146a0
   140011ecf:	mov    rbx,QWORD PTR [rsp+0x100]
   140011ed7:	add    rsp,0xc0
   140011ede:	pop    r15
   140011ee0:	pop    r14
   140011ee2:	pop    r13
   140011ee4:	pop    r12
   140011ee6:	pop    rdi
   140011ee7:	pop    rsi
   140011ee8:	pop    rbp
   140011ee9:	ret    
   140011eea:	int3   
   140011eeb:	int3   
   140011eec:	int3   
   140011eed:	int3   
   140011eee:	int3   
   140011eef:	int3   
   140011ef0:	rex push rbx
   140011ef2:	sub    rsp,0x30
   140011ef6:	and    DWORD PTR [rsp+0x40],0x0
   140011efb:	lea    r8,[rsp+0x40]
   140011f00:	mov    rbx,rcx
   140011f03:	lea    rdx,[rip+0x6b6e]        # 0x140018a78
   140011f0a:	lea    rcx,[rsp+0x20]
   140011f0f:	call   0x14000bf4c
   140011f14:	lea    rcx,[rbx+0x5a8]
   140011f1b:	cmp    QWORD PTR [rcx],0x0
   140011f1f:	jne    0x140011f2e
   140011f21:	call   0x140012b94
   140011f26:	mov    ebx,eax
   140011f28:	mov    DWORD PTR [rsp+0x40],eax
   140011f2c:	jmp    0x140011f32
   140011f2e:	mov    ebx,DWORD PTR [rsp+0x40]
   140011f32:	lea    rcx,[rsp+0x20]
   140011f37:	call   0x14000bf98
   140011f3c:	mov    eax,ebx
   140011f3e:	add    rsp,0x30
   140011f42:	pop    rbx
   140011f43:	ret    
   140011f44:	int3   
   140011f45:	int3   
   140011f46:	int3   
   140011f47:	int3   
   140011f48:	int3   
   140011f49:	int3   
   140011f4a:	int3   
   140011f4b:	int3   
   140011f4c:	mov    rax,rsp
   140011f4f:	mov    QWORD PTR [rax+0x10],rbx
   140011f53:	mov    QWORD PTR [rax+0x18],rsi
   140011f57:	push   rdi
   140011f58:	sub    rsp,0x30
   140011f5c:	xor    ebx,ebx
   140011f5e:	lea    r8,[rax+0x8]
   140011f62:	lea    rdx,[rip+0x6b47]        # 0x140018ab0
   140011f69:	mov    DWORD PTR [rax+0x8],ebx
   140011f6c:	lea    rcx,[rax-0x18]
   140011f70:	call   0x14000bf4c
   140011f75:	lea    rdx,[rsp+0x40]
   140011f7a:	xor    ecx,ecx
   140011f7c:	lea    edi,[rbx+0x2]
   140011f7f:	call   0x14000c188
   140011f84:	mov    rsi,rax
   140011f87:	cmp    DWORD PTR [rsp+0x40],ebx
   140011f8b:	jl     0x140011fbc
   140011f8d:	lea    edx,[rbx+0x58]
   140011f90:	mov    rcx,rax
   140011f93:	call   QWORD PTR [rip+0x4127]        # 0x1400160c0
   140011f99:	cmp    eax,0x6c
   140011f9c:	jg     0x140011fa3
   140011f9e:	lea    edi,[rbx+0x1]
   140011fa1:	jmp    0x140011fad
   140011fa3:	cmp    eax,0x84
   140011fa8:	setg   bl
   140011fab:	add    edi,ebx
   140011fad:	lea    r8,[rsp+0x40]
   140011fb2:	mov    rdx,rsi
   140011fb5:	xor    ecx,ecx
   140011fb7:	call   0x14000c314
   140011fbc:	lea    rcx,[rsp+0x20]
   140011fc1:	call   0x14000bf98
   140011fc6:	mov    rbx,QWORD PTR [rsp+0x48]
   140011fcb:	mov    eax,edi
   140011fcd:	mov    rsi,QWORD PTR [rsp+0x50]
   140011fd2:	add    rsp,0x30
   140011fd6:	pop    rdi
   140011fd7:	ret    
   140011fd8:	int3   
   140011fd9:	int3   
   140011fda:	int3   
   140011fdb:	int3   
   140011fdc:	int3   
   140011fdd:	int3   
   140011fde:	int3   
   140011fdf:	int3   
   140011fe0:	mov    rax,rsp
   140011fe3:	push   rbp
   140011fe4:	lea    rbp,[rax-0x5f]
   140011fe8:	sub    rsp,0xb0
   140011fef:	mov    QWORD PTR [rbp+0x47],0xfffffffffffffffe
   140011ff7:	mov    QWORD PTR [rax+0x8],rbx
   140011ffb:	mov    QWORD PTR [rax+0x10],rdi
   140011fff:	mov    ebx,edx
   140012001:	mov    rdi,rcx
   140012004:	xor    r8d,r8d
   140012007:	lea    rdx,[rip+0x6b12]        # 0x140018b20
   14001200e:	lea    rcx,[rbp+0x37]
   140012012:	call   0x14000bf4c
   140012017:	nop
   140012018:	xor    eax,eax
   14001201a:	mov    QWORD PTR [rbp-0x35],rax
   14001201e:	mov    QWORD PTR [rbp-0x2d],rax
   140012022:	mov    DWORD PTR [rbp-0x25],eax
   140012025:	mov    QWORD PTR [rbp-0x1d],0x4e1
   14001202d:	mov    QWORD PTR [rbp-0x11],rax
   140012031:	mov    QWORD PTR [rbp-0x1],rax
   140012035:	mov    QWORD PTR [rbp+0x7],rax
   140012039:	mov    QWORD PTR [rbp+0x13],rax
   14001203d:	mov    DWORD PTR [rbp+0x1b],eax
   140012040:	mov    QWORD PTR [rbp+0x1f],rax
   140012044:	mov    QWORD PTR [rbp+0x27],rax
   140012048:	mov    DWORD PTR [rbp+0x2f],eax
   14001204b:	mov    DWORD PTR [rbp+0xf],eax
   14001204e:	mov    DWORD PTR [rbp-0x39],0x4
   140012055:	lea    rcx,[rdi+0x28]
   140012059:	neg    ebx
   14001205b:	sbb    rax,rax
   14001205e:	and    rax,rcx
   140012061:	mov    QWORD PTR [rbp-0x9],rax
   140012065:	lea    rdx,[rbp-0x39]
   140012069:	mov    rcx,rdi
   14001206c:	call   0x14000faa8
   140012071:	nop
   140012072:	lea    rcx,[rbp-0x39]
   140012076:	call   0x1400122dc
   14001207b:	nop
   14001207c:	lea    rcx,[rbp+0x37]
   140012080:	call   0x14000bf98
   140012085:	lea    r11,[rsp+0xb0]
   14001208d:	mov    rbx,QWORD PTR [r11+0x10]
   140012091:	mov    rdi,QWORD PTR [r11+0x18]
   140012095:	mov    rsp,r11
   140012098:	pop    rbp
   140012099:	ret    
   14001209a:	int3   
   14001209b:	int3   
   14001209c:	int3   
   14001209d:	int3   
   14001209e:	int3   
   14001209f:	int3   
   1400120a0:	mov    QWORD PTR [rsp+0x20],rbx
   1400120a5:	push   rbp
   1400120a6:	push   rsi
   1400120a7:	push   rdi
   1400120a8:	push   r12
   1400120aa:	push   r13
   1400120ac:	push   r14
   1400120ae:	push   r15
   1400120b0:	lea    rbp,[rsp-0x3a0]
   1400120b8:	sub    rsp,0x4a0
   1400120bf:	mov    rax,QWORD PTR [rip+0xbf4a]        # 0x14001e010
   1400120c6:	xor    rax,rsp
   1400120c9:	mov    QWORD PTR [rbp+0x390],rax
   1400120d0:	movsxd r12,r8d
   1400120d3:	mov    r15,rdx
   1400120d6:	mov    r14,rcx
   1400120d9:	lea    r8,[rsp+0x60]
   1400120de:	xor    r13d,r13d
   1400120e1:	lea    rdx,[rip+0x6a68]        # 0x140018b50
   1400120e8:	lea    rcx,[rsp+0x68]
   1400120ed:	mov    DWORD PTR [rsp+0x60],r13d
   1400120f2:	mov    edi,r9d
   1400120f5:	call   0x14000bf4c
   1400120fa:	test   r15,r15
   1400120fd:	jne    0x14001210d
   1400120ff:	mov    ebx,0x80004003
   140012104:	mov    DWORD PTR [rsp+0x60],ebx
   140012108:	jmp    0x1400122a0
   14001210d:	xor    edx,edx
   14001210f:	mov    WORD PTR [rbp+0x180],r13w
   140012117:	mov    r8d,0x206
   14001211d:	lea    rcx,[rbp+0x182]
   140012124:	call   0x140014b26
   140012129:	xor    edx,edx
   14001212b:	mov    WORD PTR [rbp-0x80],r13w
   140012130:	mov    r8d,0x1fe
   140012136:	lea    rcx,[rbp-0x7e]
   14001213a:	call   0x140014b26
   14001213f:	mov    rcx,r14
   140012142:	mov    WORD PTR [r15],r13w
   140012146:	call   0x140011ef0
   14001214b:	mov    DWORD PTR [rsp+0x60],eax
   14001214f:	mov    ebx,eax
   140012151:	test   eax,eax
   140012153:	js     0x1400122a0
   140012159:	mov    rcx,QWORD PTR [r14+0x5a8]
   140012160:	lea    rax,[rsp+0x60]
   140012165:	mov    QWORD PTR [rsp+0x20],rax
   14001216a:	test   edi,edi
   14001216c:	je     0x140012183
   14001216e:	mov    r9d,r12d
   140012171:	mov    r8,r15
   140012174:	mov    edx,0x4b3
   140012179:	call   0x14000ce44
   14001217e:	jmp    0x14001229c
   140012183:	mov    r9d,0x104
   140012189:	lea    r8,[rbp+0x180]
   140012190:	mov    edx,0x4b1
   140012195:	call   0x14000ce44
   14001219a:	mov    ebx,DWORD PTR [rsp+0x60]
   14001219e:	test   ebx,ebx
   1400121a0:	js     0x1400122a0
   1400121a6:	mov    rcx,QWORD PTR [r14+0x5a8]
   1400121ad:	lea    rax,[rsp+0x60]
   1400121b2:	mov    r9d,0x100
   1400121b8:	mov    QWORD PTR [rsp+0x20],rax
   1400121bd:	lea    r8,[rbp-0x80]
   1400121c1:	mov    edx,0x4b2
   1400121c6:	call   0x14000ce44
   1400121cb:	mov    ebx,DWORD PTR [rsp+0x60]
   1400121cf:	test   ebx,ebx
   1400121d1:	js     0x1400122a0
   1400121d7:	mov    rax,QWORD PTR [r14+0x258]
   1400121de:	lea    rsi,[rbp-0x80]
   1400121e2:	test   rax,rax
   1400121e5:	lea    rdi,[rbp-0x80]
   1400121e9:	lea    rbx,[rbp-0x80]
   1400121ed:	mov    rdx,r12
   1400121f0:	cmovne rsi,rax
   1400121f4:	lea    r11,[rbp-0x80]
   1400121f8:	mov    rax,QWORD PTR [r14+0x298]
   1400121ff:	lea    r10,[rbp-0x80]
   140012203:	test   rax,rax
   140012206:	mov    QWORD PTR [rsp+0x50],rsi
   14001220b:	lea    r8,[rbp-0x80]
   14001220f:	cmovne rdi,rax
   140012213:	lea    rcx,[rbp-0x80]
   140012217:	mov    rax,QWORD PTR [r14+0x2d8]
   14001221e:	lea    r9,[rbp-0x80]
   140012222:	test   rax,rax
   140012225:	mov    QWORD PTR [rsp+0x48],rdi
   14001222a:	cmovne rbx,rax
   14001222e:	mov    rax,QWORD PTR [r14+0x318]
   140012235:	test   rax,rax
   140012238:	mov    QWORD PTR [rsp+0x40],rbx
   14001223d:	cmovne r11,rax
   140012241:	mov    rax,QWORD PTR [r14+0x358]
   140012248:	test   rax,rax
   14001224b:	mov    QWORD PTR [rsp+0x38],r11
   140012250:	cmovne r10,rax
   140012254:	mov    rax,QWORD PTR [r14+0x198]
   14001225b:	test   rax,rax
   14001225e:	mov    QWORD PTR [rsp+0x30],r10
   140012263:	cmovne r8,rax
   140012267:	mov    rax,QWORD PTR [r14+0x1d8]
   14001226e:	test   rax,rax
   140012271:	mov    QWORD PTR [rsp+0x28],r8
   140012276:	lea    r8,[rbp+0x180]
   14001227d:	cmovne rcx,rax
   140012281:	mov    rax,QWORD PTR [r14+0x218]
   140012288:	test   rax,rax
   14001228b:	mov    QWORD PTR [rsp+0x20],rcx
   140012290:	mov    rcx,r15
   140012293:	cmovne r9,rax
   140012297:	call   0x14000f59c
   14001229c:	mov    ebx,DWORD PTR [rsp+0x60]
   1400122a0:	lea    rcx,[rsp+0x68]
   1400122a5:	call   0x14000bf98
   1400122aa:	mov    eax,ebx
   1400122ac:	mov    rcx,QWORD PTR [rbp+0x390]
   1400122b3:	xor    rcx,rsp
   1400122b6:	call   0x1400146a0
   1400122bb:	mov    rbx,QWORD PTR [rsp+0x4f8]
   1400122c3:	add    rsp,0x4a0
   1400122ca:	pop    r15
   1400122cc:	pop    r14
   1400122ce:	pop    r13
   1400122d0:	pop    r12
   1400122d2:	pop    rdi
   1400122d3:	pop    rsi
   1400122d4:	pop    rbp
   1400122d5:	ret    
   1400122d6:	int3   
   1400122d7:	int3   
   1400122d8:	int3   
   1400122d9:	int3   
   1400122da:	int3   
   1400122db:	int3   
   1400122dc:	rex push rbx
   1400122de:	sub    rsp,0x20
   1400122e2:	mov    rbx,rcx
   1400122e5:	mov    rcx,QWORD PTR [rcx+0x28]
   1400122e9:	test   rcx,rcx
   1400122ec:	je     0x1400122fa
   1400122ee:	xor    edx,edx
   1400122f0:	call   0x14000c0d8
   1400122f5:	and    QWORD PTR [rbx+0x28],0x0
   1400122fa:	mov    rcx,QWORD PTR [rbx+0x38]
   1400122fe:	test   rcx,rcx
   140012301:	je     0x14001230f
   140012303:	xor    edx,edx
   140012305:	call   0x14000c0d8
   14001230a:	and    QWORD PTR [rbx+0x38],0x0
   14001230f:	mov    rcx,QWORD PTR [rbx+0x58]
   140012313:	test   rcx,rcx
   140012316:	je     0x140012324
   140012318:	xor    edx,edx
   14001231a:	call   0x14000c0d8
   14001231f:	and    QWORD PTR [rbx+0x58],0x0
   140012324:	add    rsp,0x20
   140012328:	pop    rbx
   140012329:	ret    
   14001232a:	int3   
   14001232b:	int3   
   14001232c:	int3   
   14001232d:	int3   
   14001232e:	int3   
   14001232f:	int3   
   140012330:	mov    QWORD PTR [rsp+0x8],rbx
   140012335:	push   rdi
   140012336:	sub    rsp,0x20
   14001233a:	mov    ebx,edx
   14001233c:	mov    rdi,rcx
   14001233f:	call   0x1400126a4
   140012344:	test   bl,0x1
   140012347:	je     0x140012351
   140012349:	mov    rcx,rdi
   14001234c:	call   0x140014254
   140012351:	mov    rax,rdi
   140012354:	mov    rbx,QWORD PTR [rsp+0x30]
   140012359:	add    rsp,0x20
   14001235d:	pop    rdi
   14001235e:	ret    
   14001235f:	int3   
   140012360:	int3   
   140012361:	int3   
   140012362:	int3   
   140012363:	int3   
   140012364:	int3   
   140012365:	int3   
   140012366:	int3   
   140012367:	int3   
   140012368:	mov    r11,rsp
   14001236b:	push   rdi
   14001236c:	sub    rsp,0x40
   140012370:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   140012378:	mov    QWORD PTR [r11+0x10],rbx
   14001237c:	mov    QWORD PTR [r11+0x18],rsi
   140012380:	mov    rdi,rdx
   140012383:	mov    rsi,rcx
   140012386:	lea    rax,[rip+0x49e3]        # 0x140016d70
   14001238d:	mov    QWORD PTR [rcx],rax
   140012390:	and    DWORD PTR [rsp+0x50],0x0
   140012395:	lea    r8,[r11+0x8]
   140012399:	lea    rdx,[rip+0x6800]        # 0x140018ba0
   1400123a0:	lea    rcx,[r11-0x20]
   1400123a4:	call   0x14000bf4c
   1400123a9:	nop
   1400123aa:	lea    rbx,[rsi+0x8]
   1400123ae:	xor    edx,edx
   1400123b0:	lea    r8d,[rdx+0x28]
   1400123b4:	mov    rcx,rbx
   1400123b7:	call   0x140014b26
   1400123bc:	movups xmm0,XMMWORD PTR [rip+0x6b1d]        # 0x140018ee0
   1400123c3:	movdqu XMMWORD PTR [rbx],xmm0
   1400123c7:	or     rcx,0xffffffffffffffff
   1400123cb:	mov    QWORD PTR [rsi+0x20],rcx
   1400123cf:	mov    QWORD PTR [rsi+0x28],rcx
   1400123d3:	mov    DWORD PTR [rsi+0x18],ecx
   1400123d6:	and    QWORD PTR [rsi+0x40],0x0
   1400123db:	and    QWORD PTR [rsi+0x30],0x0
   1400123e0:	and    QWORD PTR [rsi+0x38],0x0
   1400123e5:	mov    BYTE PTR [rsi+0x48],0x0
   1400123e9:	and    DWORD PTR [rsi+0x4c],0x0
   1400123ed:	movups xmm0,XMMWORD PTR [rdi]
   1400123f0:	movdqu XMMWORD PTR [rbx],xmm0
   1400123f4:	movups xmm1,XMMWORD PTR [rdi+0x18]
   1400123f8:	movdqu XMMWORD PTR [rsi+0x20],xmm1
   1400123fd:	mov    eax,ecx
   1400123ff:	cmp    DWORD PTR [rdi+0x10],ecx
   140012402:	cmovne eax,DWORD PTR [rdi+0x10]
   140012406:	mov    DWORD PTR [rsi+0x18],eax
   140012409:	mov    eax,DWORD PTR [rdi+0x14]
   14001240c:	cmp    DWORD PTR [rsi+0x1c],eax
   14001240f:	je     0x140012414
   140012411:	mov    DWORD PTR [rsi+0x1c],eax
   140012414:	mov    rcx,rsi
   140012417:	call   0x140012550
   14001241c:	nop
   14001241d:	lea    rcx,[rsp+0x28]
   140012422:	call   0x14000bf98
   140012427:	mov    rax,rsi
   14001242a:	mov    rbx,QWORD PTR [rsp+0x58]
   14001242f:	mov    rsi,QWORD PTR [rsp+0x60]
   140012434:	add    rsp,0x40
   140012438:	pop    rdi
   140012439:	ret    
   14001243a:	int3   
   14001243b:	int3   
   14001243c:	int3   
   14001243d:	int3   
   14001243e:	int3   
   14001243f:	int3   
   140012440:	mov    r11,rsp
   140012443:	mov    DWORD PTR [r11+0x20],r9d
   140012447:	push   rdi
   140012448:	sub    rsp,0x40
   14001244c:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   140012454:	mov    QWORD PTR [r11+0x8],rbx
   140012458:	mov    QWORD PTR [r11+0x10],rsi
   14001245c:	mov    rdi,rdx
   14001245f:	mov    rsi,rcx
   140012462:	lea    rax,[rip+0x4907]        # 0x140016d70
   140012469:	mov    QWORD PTR [rcx],rax
   14001246c:	and    DWORD PTR [rsp+0x68],0x0
   140012471:	lea    r8,[r11+0x20]
   140012475:	lea    rdx,[rip+0x6724]        # 0x140018ba0
   14001247c:	lea    rcx,[r11-0x20]
   140012480:	call   0x14000bf4c
   140012485:	nop
   140012486:	lea    rbx,[rsi+0x8]
   14001248a:	xor    edx,edx
   14001248c:	lea    r8d,[rdx+0x28]
   140012490:	mov    rcx,rbx
   140012493:	call   0x140014b26
   140012498:	movups xmm0,XMMWORD PTR [rip+0x6a41]        # 0x140018ee0
   14001249f:	movdqu XMMWORD PTR [rbx],xmm0
   1400124a3:	or     rax,0xffffffffffffffff
   1400124a7:	mov    QWORD PTR [rsi+0x20],rax
   1400124ab:	mov    QWORD PTR [rsi+0x28],rax
   1400124af:	mov    DWORD PTR [rsi+0x18],eax
   1400124b2:	and    QWORD PTR [rsi+0x40],0x0
   1400124b7:	and    QWORD PTR [rsi+0x30],0x0
   1400124bc:	and    QWORD PTR [rsi+0x38],0x0
   1400124c1:	mov    BYTE PTR [rsi+0x48],0x0
   1400124c5:	and    DWORD PTR [rsi+0x4c],0x0
   1400124c9:	movaps xmm0,XMMWORD PTR [rdi]
   1400124cc:	movdqu XMMWORD PTR [rbx],xmm0
   1400124d0:	movups xmm1,XMMWORD PTR [rip+0xbf29]        # 0x14001e400
   1400124d7:	movdqu XMMWORD PTR [rsi+0x20],xmm1
   1400124dc:	mov    rbx,QWORD PTR [rsp+0x78]
   1400124e1:	test   rbx,rbx
   1400124e4:	je     0x140012507
   1400124e6:	xor    r8d,r8d
   1400124e9:	mov    rdx,rbx
   1400124ec:	mov    rcx,rsi
   1400124ef:	call   0x140012924
   1400124f4:	mov    r8d,0x1
   1400124fa:	mov    rdx,rbx
   1400124fd:	mov    rcx,rsi
   140012500:	call   0x140012924
   140012505:	jmp    0x14001250f
   140012507:	cmp    DWORD PTR [rsi+0x1c],eax
   14001250a:	je     0x14001250f
   14001250c:	mov    DWORD PTR [rsi+0x1c],eax
   14001250f:	mov    al,BYTE PTR [rsp+0x88]
   140012516:	mov    BYTE PTR [rsi+0x48],al
   140012519:	mov    eax,DWORD PTR [rsp+0x80]
   140012520:	mov    DWORD PTR [rsi+0x4c],eax
   140012523:	mov    rcx,rsi
   140012526:	call   0x140012550
   14001252b:	nop
   14001252c:	lea    rcx,[rsp+0x28]
   140012531:	call   0x14000bf98
   140012536:	mov    rax,rsi
   140012539:	mov    rbx,QWORD PTR [rsp+0x50]
   14001253e:	mov    rsi,QWORD PTR [rsp+0x58]
   140012543:	add    rsp,0x40
   140012547:	pop    rdi
   140012548:	ret    
   140012549:	int3   
   14001254a:	int3   
   14001254b:	int3   
   14001254c:	int3   
   14001254d:	int3   
   14001254e:	int3   
   14001254f:	int3   
   140012550:	mov    QWORD PTR [rsp+0x10],rbx
   140012555:	push   rbp
   140012556:	mov    rbp,rsp
   140012559:	sub    rsp,0x60
   14001255d:	mov    rax,QWORD PTR [rip+0xbaac]        # 0x14001e010
   140012564:	xor    rax,rsp
   140012567:	mov    QWORD PTR [rbp-0x8],rax
   14001256b:	and    DWORD PTR [rbp-0x40],0x0
   14001256f:	lea    r8,[rbp-0x40]
   140012573:	mov    rbx,rcx
   140012576:	lea    rdx,[rip+0x6643]        # 0x140018bc0
   14001257d:	lea    rcx,[rbp-0x38]
   140012581:	call   0x14000bf4c
   140012586:	call   0x140012e8c
   14001258b:	test   eax,eax
   14001258d:	je     0x14001267d
   140012593:	mov    rax,QWORD PTR [rbx+0x8]
   140012597:	mov    DWORD PTR [rbp-0x28],0xc267b8de
   14001259e:	mov    DWORD PTR [rbp-0x24],0x4fa8068e
   1400125a5:	mov    DWORD PTR [rbp-0x20],0x3b324fab
   1400125ac:	mov    DWORD PTR [rbp-0x1c],0x4e301ef9
   1400125b3:	mov    DWORD PTR [rbp-0x18],0x58c33841
   1400125ba:	mov    DWORD PTR [rbp-0x14],0x48464557
   1400125c1:	mov    DWORD PTR [rbp-0x10],0x88bb26b8
   1400125c8:	mov    DWORD PTR [rbp-0xc],0x9f7145b8
   1400125cf:	cmp    rax,QWORD PTR [rbp-0x28]
   1400125d3:	jne    0x1400125e8
   1400125d5:	mov    rax,QWORD PTR [rbx+0x10]
   1400125d9:	cmp    rax,QWORD PTR [rbp-0x20]
   1400125dd:	jne    0x1400125e8
   1400125df:	movaps xmm0,XMMWORD PTR [rip+0xbada]        # 0x14001e0c0
   1400125e6:	jmp    0x140012603
   1400125e8:	mov    rax,QWORD PTR [rbx+0x8]
   1400125ec:	cmp    rax,QWORD PTR [rbp-0x18]
   1400125f0:	jne    0x140012608
   1400125f2:	mov    rax,QWORD PTR [rbx+0x10]
   1400125f6:	cmp    rax,QWORD PTR [rbp-0x10]
   1400125fa:	jne    0x140012608
   1400125fc:	movups xmm0,XMMWORD PTR [rip+0xbae5]        # 0x14001e0e8
   140012603:	movdqu XMMWORD PTR [rbx+0x20],xmm0
   140012608:	mov    rax,QWORD PTR [rbx+0x8]
   14001260c:	mov    DWORD PTR [rbp-0x18],0xda0c6c48
   140012613:	mov    DWORD PTR [rbp-0x14],0x4aa4682c
   14001261a:	mov    DWORD PTR [rbp-0x10],0x1d0f97a5
   140012621:	mov    DWORD PTR [rbp-0xc],0xb0791ed3
   140012628:	mov    DWORD PTR [rbp-0x28],0x2a6926d1
   14001262f:	mov    DWORD PTR [rbp-0x24],0x47c6ec3e
   140012636:	mov    DWORD PTR [rbp-0x20],0x6fc7c994
   14001263d:	mov    DWORD PTR [rbp-0x1c],0x40a8d829
   140012644:	cmp    rax,QWORD PTR [rbp-0x18]
   140012648:	jne    0x14001265d
   14001264a:	mov    rax,QWORD PTR [rbx+0x10]
   14001264e:	cmp    rax,QWORD PTR [rbp-0x10]
   140012652:	jne    0x14001265d
   140012654:	movaps xmm0,XMMWORD PTR [rip+0xbb55]        # 0x14001e1b0
   14001265b:	jmp    0x140012678
   14001265d:	mov    rax,QWORD PTR [rbx+0x8]
   140012661:	cmp    rax,QWORD PTR [rbp-0x28]
   140012665:	jne    0x14001267d
   140012667:	mov    rax,QWORD PTR [rbx+0x10]
   14001266b:	cmp    rax,QWORD PTR [rbp-0x20]
   14001266f:	jne    0x14001267d
   140012671:	movups xmm0,XMMWORD PTR [rip+0xbb10]        # 0x14001e188
   140012678:	movdqu XMMWORD PTR [rbx+0x20],xmm0
   14001267d:	lea    rcx,[rbp-0x38]
   140012681:	call   0x14000bf98
   140012686:	mov    rcx,QWORD PTR [rbp-0x8]
   14001268a:	xor    rcx,rsp
   14001268d:	call   0x1400146a0
   140012692:	mov    rbx,QWORD PTR [rsp+0x78]
   140012697:	add    rsp,0x60
   14001269b:	pop    rbp
   14001269c:	ret    
   14001269d:	int3   
   14001269e:	int3   
   14001269f:	int3   
   1400126a0:	int3   
   1400126a1:	int3   
   1400126a2:	int3   
   1400126a3:	int3   
   1400126a4:	rex push rbx
   1400126a6:	sub    rsp,0x20
   1400126aa:	lea    rax,[rip+0x46bf]        # 0x140016d70
   1400126b1:	mov    rbx,rcx
   1400126b4:	mov    QWORD PTR [rcx],rax
   1400126b7:	mov    rcx,QWORD PTR [rcx+0x40]
   1400126bb:	test   rcx,rcx
   1400126be:	je     0x1400126cc
   1400126c0:	xor    edx,edx
   1400126c2:	call   0x14000d400
   1400126c7:	and    QWORD PTR [rbx+0x40],0x0
   1400126cc:	mov    rcx,QWORD PTR [rbx+0x30]
   1400126d0:	test   rcx,rcx
   1400126d3:	je     0x1400126df
   1400126d5:	call   0x140014260
   1400126da:	and    QWORD PTR [rbx+0x30],0x0
   1400126df:	mov    rcx,QWORD PTR [rbx+0x38]
   1400126e3:	test   rcx,rcx
   1400126e6:	je     0x1400126f2
   1400126e8:	call   0x140014260
   1400126ed:	and    QWORD PTR [rbx+0x38],0x0
   1400126f2:	add    rsp,0x20
   1400126f6:	pop    rbx
   1400126f7:	ret    
   1400126f8:	int3   
   1400126f9:	int3   
   1400126fa:	int3   
   1400126fb:	int3   
   1400126fc:	int3   
   1400126fd:	int3   
   1400126fe:	int3   
   1400126ff:	int3   
   140012700:	mov    rax,rsp
   140012703:	push   rdi
   140012704:	sub    rsp,0x40
   140012708:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140012710:	mov    QWORD PTR [rax+0x8],rbx
   140012714:	mov    QWORD PTR [rax+0x20],rsi
   140012718:	movsxd rsi,edx
   14001271b:	mov    rdi,rcx
   14001271e:	xor    ebx,ebx
   140012720:	mov    DWORD PTR [rax+0x10],ebx
   140012723:	mov    QWORD PTR [rax+0x18],rbx
   140012727:	lea    r8,[rax+0x10]
   14001272b:	lea    rdx,[rip+0x64ce]        # 0x140018c00
   140012732:	lea    rcx,[rax-0x20]
   140012736:	call   0x14000bf4c
   14001273b:	nop
   14001273c:	cmp    esi,0x3
   14001273f:	jbe    0x14001277d
   140012741:	mov    DWORD PTR [rsp+0x58],0x80070057
   140012749:	lea    rax,[rip+0xb8d0]        # 0x14001e020
   140012750:	mov    rcx,QWORD PTR [rip+0xb8c9]        # 0x14001e020
   140012757:	cmp    rcx,rax
   14001275a:	je     0x1400127a9
   14001275c:	test   BYTE PTR [rcx+0x1c],0x4
   140012760:	je     0x1400127a9
   140012762:	lea    edx,[rbx+0xd]
   140012765:	mov    r9d,0x80070057
   14001276b:	lea    r8,[rip+0x65ae]        # 0x140018d20
   140012772:	mov    rcx,QWORD PTR [rcx+0x10]
   140012776:	call   0x140001228
   14001277b:	jmp    0x1400127a9
   14001277d:	mov    rcx,rdi
   140012780:	call   0x140012b3c
   140012785:	mov    DWORD PTR [rsp+0x58],eax
   140012789:	test   eax,eax
   14001278b:	js     0x1400127a9
   14001278d:	movzx  edx,WORD PTR [rdi+rsi*4+0x20]
   140012792:	lea    r9,[rsp+0x60]
   140012797:	mov    rcx,QWORD PTR [rdi+0x40]
   14001279b:	call   0x140012efc
   1400127a0:	mov    DWORD PTR [rsp+0x58],eax
   1400127a4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400127a9:	lea    rcx,[rsp+0x28]
   1400127ae:	call   0x14000bf98
   1400127b3:	mov    rax,rbx
   1400127b6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400127bb:	mov    rsi,QWORD PTR [rsp+0x68]
   1400127c0:	add    rsp,0x40
   1400127c4:	pop    rdi
   1400127c5:	ret    
   1400127c6:	int3   
   1400127c7:	int3   
   1400127c8:	int3   
   1400127c9:	int3   
   1400127ca:	int3   
   1400127cb:	int3   
   1400127cc:	mov    rax,rsp
   1400127cf:	push   rbp
   1400127d0:	push   rsi
   1400127d1:	push   rdi
   1400127d2:	push   r14
   1400127d4:	push   r15
   1400127d6:	lea    rbp,[rax-0x198]
   1400127dd:	sub    rsp,0x270
   1400127e4:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400127ed:	mov    QWORD PTR [rax+0x18],rbx
   1400127f1:	mov    rax,QWORD PTR [rip+0xb818]        # 0x14001e010
   1400127f8:	xor    rax,rsp
   1400127fb:	mov    QWORD PTR [rbp+0x160],rax
   140012802:	mov    r15,rdx
   140012805:	mov    rdi,rcx
   140012808:	and    DWORD PTR [rsp+0x30],0x0
   14001280d:	lea    r8,[rsp+0x30]
   140012812:	lea    rdx,[rip+0x63ff]        # 0x140018c18
   140012819:	lea    rcx,[rsp+0x40]
   14001281e:	call   0x14000bf4c
   140012823:	nop
   140012824:	test   r15,r15
   140012827:	jne    0x140012873
   140012829:	mov    ebx,0x80070057
   14001282e:	mov    DWORD PTR [rsp+0x30],ebx
   140012832:	lea    rax,[rip+0xb7e7]        # 0x14001e020
   140012839:	mov    rcx,QWORD PTR [rip+0xb7e0]        # 0x14001e020
   140012840:	cmp    rcx,rax
   140012843:	je     0x1400128ec
   140012849:	test   BYTE PTR [rcx+0x1c],0x4
   14001284d:	je     0x1400128ec
   140012853:	lea    edx,[r15+0x10]
   140012857:	mov    r9d,0x80070057
   14001285d:	lea    r8,[rip+0x64bc]        # 0x140018d20
   140012864:	mov    rcx,QWORD PTR [rcx+0x10]
   140012868:	call   0x140001228
   14001286d:	mov    ebx,DWORD PTR [rsp+0x30]
   140012871:	jmp    0x1400128ec
   140012873:	mov    rdx,QWORD PTR [rdi+0x38]
   140012877:	test   rdx,rdx
   14001287a:	jne    0x1400128de
   14001287c:	mov    r14d,DWORD PTR [rdi+0x1c]
   140012880:	cmp    r14d,0xffffffff
   140012884:	je     0x14001286d
   140012886:	mov    rcx,rdi
   140012889:	call   0x140012b3c
   14001288e:	mov    ebx,eax
   140012890:	mov    DWORD PTR [rsp+0x30],eax
   140012894:	test   eax,eax
   140012896:	js     0x1400128ec
   140012898:	lea    rax,[rsp+0x30]
   14001289d:	mov    QWORD PTR [rsp+0x20],rax
   1400128a2:	mov    r9d,0x104
   1400128a8:	lea    r8,[rsp+0x50]
   1400128ad:	mov    edx,r14d
   1400128b0:	mov    rcx,QWORD PTR [rdi+0x40]
   1400128b4:	call   0x14000ce44
   1400128b9:	mov    ebx,DWORD PTR [rsp+0x30]
   1400128bd:	test   ebx,ebx
   1400128bf:	js     0x1400128ec
   1400128c1:	lea    rdx,[rsp+0x50]
   1400128c6:	lea    rcx,[rdi+0x38]
   1400128ca:	call   0x1400129cc
   1400128cf:	mov    ebx,eax
   1400128d1:	mov    DWORD PTR [rsp+0x30],eax
   1400128d5:	test   eax,eax
   1400128d7:	js     0x1400128ec
   1400128d9:	lea    rdx,[rsp+0x50]
   1400128de:	mov    rcx,r15
   1400128e1:	call   0x1400129cc
   1400128e6:	mov    DWORD PTR [rsp+0x30],eax
   1400128ea:	mov    ebx,eax
   1400128ec:	lea    rcx,[rsp+0x40]
   1400128f1:	call   0x14000bf98
   1400128f6:	mov    eax,ebx
   1400128f8:	mov    rcx,QWORD PTR [rbp+0x160]
   1400128ff:	xor    rcx,rsp
   140012902:	call   0x1400146a0
   140012907:	mov    rbx,QWORD PTR [rsp+0x2b0]
   14001290f:	add    rsp,0x270
   140012916:	pop    r15
   140012918:	pop    r14
   14001291a:	pop    rdi
   14001291b:	pop    rsi
   14001291c:	pop    rbp
   14001291d:	ret    
   14001291e:	int3   
   14001291f:	int3   
   140012920:	int3   
   140012921:	int3   
   140012922:	int3   
   140012923:	int3   
   140012924:	mov    rax,rsp
   140012927:	push   rdi
   140012928:	sub    rsp,0x40
   14001292c:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140012934:	mov    QWORD PTR [rax+0x8],rbx
   140012938:	mov    QWORD PTR [rax+0x10],rsi
   14001293c:	mov    ebx,r8d
   14001293f:	mov    rsi,rdx
   140012942:	mov    rdi,rcx
   140012945:	and    DWORD PTR [rax+0x18],0x0
   140012949:	lea    r8,[rax+0x18]
   14001294d:	lea    rdx,[rip+0x62e4]        # 0x140018c38
   140012954:	lea    rcx,[rax-0x20]
   140012958:	call   0x14000bf4c
   14001295d:	nop
   14001295e:	test   ebx,ebx
   140012960:	jne    0x14001297d
   140012962:	lea    rbx,[rdi+0x30]
   140012966:	mov    rcx,QWORD PTR [rbx]
   140012969:	test   rcx,rcx
   14001296c:	je     0x140012977
   14001296e:	call   0x140014260
   140012973:	and    QWORD PTR [rbx],0x0
   140012977:	or     DWORD PTR [rdi+0x18],0xffffffff
   14001297b:	jmp    0x140012996
   14001297d:	lea    rbx,[rdi+0x38]
   140012981:	mov    rcx,QWORD PTR [rbx]
   140012984:	test   rcx,rcx
   140012987:	je     0x140012992
   140012989:	call   0x140014260
   14001298e:	and    QWORD PTR [rbx],0x0
   140012992:	or     DWORD PTR [rdi+0x1c],0xffffffff
   140012996:	mov    rdx,rsi
   140012999:	mov    rcx,rbx
   14001299c:	call   0x1400129cc
   1400129a1:	mov    DWORD PTR [rsp+0x60],eax
   1400129a5:	mov    ebx,eax
   1400129a7:	lea    rcx,[rsp+0x28]
   1400129ac:	call   0x14000bf98
   1400129b1:	mov    eax,ebx
   1400129b3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400129b8:	mov    rsi,QWORD PTR [rsp+0x58]
   1400129bd:	add    rsp,0x40
   1400129c1:	pop    rdi
   1400129c2:	ret    
   1400129c3:	int3   
   1400129c4:	int3   
   1400129c5:	int3   
   1400129c6:	int3   
   1400129c7:	int3   
   1400129c8:	int3   
   1400129c9:	int3   
   1400129ca:	int3   
   1400129cb:	int3   
   1400129cc:	mov    rax,rsp
   1400129cf:	push   rdi
   1400129d0:	sub    rsp,0x40
   1400129d4:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400129dc:	mov    QWORD PTR [rax+0x10],rbx
   1400129e0:	mov    QWORD PTR [rax+0x18],rbp
   1400129e4:	mov    QWORD PTR [rax+0x20],rsi
   1400129e8:	mov    rbx,rdx
   1400129eb:	mov    rdi,rcx
   1400129ee:	xor    ebp,ebp
   1400129f0:	mov    DWORD PTR [rax+0x8],ebp
   1400129f3:	lea    r8,[rax+0x8]
   1400129f7:	lea    rdx,[rip+0x625a]        # 0x140018c58
   1400129fe:	lea    rcx,[rax-0x20]
   140012a02:	call   0x14000bf4c
   140012a07:	nop
   140012a08:	test   rdi,rdi
   140012a0b:	jne    0x140012a3f
   140012a0d:	mov    ebx,0x80070057
   140012a12:	mov    DWORD PTR [rsp+0x50],ebx
   140012a16:	lea    rax,[rip+0xb603]        # 0x14001e020
   140012a1d:	mov    rcx,QWORD PTR [rip+0xb5fc]        # 0x14001e020
   140012a24:	cmp    rcx,rax
   140012a27:	je     0x140012b13
   140012a2d:	test   BYTE PTR [rcx+0x1c],0x4
   140012a31:	je     0x140012b13
   140012a37:	lea    edx,[rbp+0x13]
   140012a3a:	jmp    0x140012b00
   140012a3f:	mov    QWORD PTR [rdi],rbp
   140012a42:	test   rbx,rbx
   140012a45:	je     0x140012b0f
   140012a4b:	mov    edx,0x104
   140012a50:	mov    eax,edx
   140012a52:	mov    rcx,rbx
   140012a55:	cmp    WORD PTR [rcx],bp
   140012a58:	je     0x140012a64
   140012a5a:	add    rcx,0x2
   140012a5e:	sub    rax,0x1
   140012a62:	jne    0x140012a55
   140012a64:	test   rax,rax
   140012a67:	je     0x140012ad9
   140012a69:	sub    rdx,rax
   140012a6c:	mov    DWORD PTR [rsp+0x50],ebp
   140012a70:	lea    rsi,[rdx+0x1]
   140012a74:	mov    eax,0x2
   140012a79:	mul    rsi
   140012a7c:	mov    rcx,0xffffffffffffffff
   140012a83:	cmovo  rax,rcx
   140012a87:	mov    rcx,rax
   140012a8a:	call   0x1400142ac
   140012a8f:	mov    QWORD PTR [rdi],rax
   140012a92:	test   rax,rax
   140012a95:	jne    0x140012ac5
   140012a97:	mov    DWORD PTR [rsp+0x50],0x8007000e
   140012a9f:	lea    rax,[rip+0xb57a]        # 0x14001e020
   140012aa6:	mov    rcx,QWORD PTR [rip+0xb573]        # 0x14001e020
   140012aad:	cmp    rcx,rax
   140012ab0:	je     0x140012b0f
   140012ab2:	test   BYTE PTR [rcx+0x1c],0x4
   140012ab6:	je     0x140012b0f
   140012ab8:	mov    edx,0x14
   140012abd:	mov    r9d,0x8007000e
   140012ac3:	jmp    0x140012b06
   140012ac5:	mov    r8,rbx
   140012ac8:	mov    rdx,rsi
   140012acb:	mov    rcx,rax
   140012ace:	call   0x14000d2a0
   140012ad3:	mov    DWORD PTR [rsp+0x50],eax
   140012ad7:	jmp    0x140012b0f
   140012ad9:	mov    ebx,0x80070057
   140012ade:	mov    DWORD PTR [rsp+0x50],ebx
   140012ae2:	lea    rax,[rip+0xb537]        # 0x14001e020
   140012ae9:	mov    rcx,QWORD PTR [rip+0xb530]        # 0x14001e020
   140012af0:	cmp    rcx,rax
   140012af3:	je     0x140012b0f
   140012af5:	test   BYTE PTR [rcx+0x1c],0x4
   140012af9:	je     0x140012b0f
   140012afb:	mov    edx,0x15
   140012b00:	mov    r9d,0x80070057
   140012b06:	mov    rcx,QWORD PTR [rcx+0x10]
   140012b0a:	call   0x14000e138
   140012b0f:	mov    ebx,DWORD PTR [rsp+0x50]
   140012b13:	lea    rcx,[rsp+0x28]
   140012b18:	call   0x14000bf98
   140012b1d:	mov    eax,ebx
   140012b1f:	mov    rbx,QWORD PTR [rsp+0x58]
   140012b24:	mov    rbp,QWORD PTR [rsp+0x60]
   140012b29:	mov    rsi,QWORD PTR [rsp+0x68]
   140012b2e:	add    rsp,0x40
   140012b32:	pop    rdi
   140012b33:	ret    
   140012b34:	int3   
   140012b35:	int3   
   140012b36:	int3   
   140012b37:	int3   
   140012b38:	int3   
   140012b39:	int3   
   140012b3a:	int3   
   140012b3b:	int3   
   140012b3c:	rex push rbx
   140012b3e:	sub    rsp,0x30
   140012b42:	and    DWORD PTR [rsp+0x40],0x0
   140012b47:	lea    r8,[rsp+0x40]
   140012b4c:	mov    rbx,rcx
   140012b4f:	lea    rdx,[rip+0x6122]        # 0x140018c78
   140012b56:	lea    rcx,[rsp+0x20]
   140012b5b:	call   0x14000bf4c
   140012b60:	lea    rcx,[rbx+0x40]
   140012b64:	cmp    QWORD PTR [rcx],0x0
   140012b68:	jne    0x140012b77
   140012b6a:	call   0x140012b94
   140012b6f:	mov    ebx,eax
   140012b71:	mov    DWORD PTR [rsp+0x40],eax
   140012b75:	jmp    0x140012b7b
   140012b77:	mov    ebx,DWORD PTR [rsp+0x40]
   140012b7b:	lea    rcx,[rsp+0x20]
   140012b80:	call   0x14000bf98
   140012b85:	mov    eax,ebx
   140012b87:	add    rsp,0x30
   140012b8b:	pop    rbx
   140012b8c:	ret    
   140012b8d:	int3   
   140012b8e:	int3   
   140012b8f:	int3   
   140012b90:	int3   
   140012b91:	int3   
   140012b92:	int3   
   140012b93:	int3   
   140012b94:	mov    QWORD PTR [rsp+0x10],rbx
   140012b99:	push   rbp
   140012b9a:	lea    rbp,[rsp-0x160]
   140012ba2:	sub    rsp,0x260
   140012ba9:	mov    rax,QWORD PTR [rip+0xb460]        # 0x14001e010
   140012bb0:	xor    rax,rsp
   140012bb3:	mov    QWORD PTR [rbp+0x150],rax
   140012bba:	and    DWORD PTR [rsp+0x20],0x0
   140012bbf:	lea    r8,[rsp+0x20]
   140012bc4:	mov    rbx,rcx
   140012bc7:	lea    rdx,[rip+0x60d2]        # 0x140018ca0
   140012bce:	lea    rcx,[rsp+0x28]
   140012bd3:	call   0x14000bf4c
   140012bd8:	test   rbx,rbx
   140012bdb:	jne    0x140012c1d
   140012bdd:	mov    ebx,0x80070057
   140012be2:	mov    DWORD PTR [rsp+0x20],ebx
   140012be6:	mov    rcx,QWORD PTR [rip+0xb433]        # 0x14001e020
   140012bed:	lea    rax,[rip+0xb42c]        # 0x14001e020
   140012bf4:	cmp    rcx,rax
   140012bf7:	je     0x140012c9e
   140012bfd:	test   BYTE PTR [rcx+0x1c],0x4
   140012c01:	je     0x140012c9e
   140012c07:	mov    rcx,QWORD PTR [rcx+0x10]
   140012c0b:	mov    edx,0x16
   140012c10:	mov    r9d,0x80070057
   140012c16:	call   0x14000e138
   140012c1b:	jmp    0x140012c9a
   140012c1d:	and    QWORD PTR [rbx],0x0
   140012c21:	lea    rdx,[rsp+0x40]
   140012c26:	mov    r8d,0x104
   140012c2c:	lea    rcx,[rip+0x608d]        # 0x140018cc0
   140012c33:	call   QWORD PTR [rip+0x358f]        # 0x1400161c8
   140012c39:	test   eax,eax
   140012c3b:	jne    0x140012c88
   140012c3d:	call   QWORD PTR [rip+0x3645]        # 0x140016288
   140012c43:	movzx  ebx,ax
   140012c46:	or     ebx,0x80070000
   140012c4c:	test   eax,eax
   140012c4e:	cmovle ebx,eax
   140012c51:	mov    DWORD PTR [rsp+0x20],ebx
   140012c55:	mov    rcx,QWORD PTR [rip+0xb3c4]        # 0x14001e020
   140012c5c:	lea    rax,[rip+0xb3bd]        # 0x14001e020
   140012c63:	cmp    rcx,rax
   140012c66:	je     0x140012c9e
   140012c68:	test   BYTE PTR [rcx+0x1c],0x4
   140012c6c:	je     0x140012c9e
   140012c6e:	mov    rcx,QWORD PTR [rcx+0x10]
   140012c72:	lea    r8,[rip+0x60a7]        # 0x140018d20
   140012c79:	mov    edx,0x17
   140012c7e:	mov    r9d,ebx
   140012c81:	call   0x140001228
   140012c86:	jmp    0x140012c9a
   140012c88:	lea    r9,[rsp+0x20]
   140012c8d:	lea    rcx,[rsp+0x40]
   140012c92:	call   0x14000d344
   140012c97:	mov    QWORD PTR [rbx],rax
   140012c9a:	mov    ebx,DWORD PTR [rsp+0x20]
   140012c9e:	lea    rcx,[rsp+0x28]
   140012ca3:	call   0x14000bf98
   140012ca8:	mov    eax,ebx
   140012caa:	mov    rcx,QWORD PTR [rbp+0x150]
   140012cb1:	xor    rcx,rsp
   140012cb4:	call   0x1400146a0
   140012cb9:	mov    rbx,QWORD PTR [rsp+0x278]
   140012cc1:	add    rsp,0x260
   140012cc8:	pop    rbp
   140012cc9:	ret    
   140012cca:	int3   
   140012ccb:	int3   
   140012ccc:	int3   
   140012ccd:	int3   
   140012cce:	int3   
   140012ccf:	int3   
   140012cd0:	mov    rax,rsp
   140012cd3:	mov    QWORD PTR [rax+0x10],rbx
   140012cd7:	mov    QWORD PTR [rax+0x18],rsi
   140012cdb:	mov    QWORD PTR [rax+0x20],rdi
   140012cdf:	push   rbp
   140012ce0:	lea    rbp,[rax-0x188]
   140012ce7:	sub    rsp,0x280
   140012cee:	mov    rax,QWORD PTR [rip+0xb31b]        # 0x14001e010
   140012cf5:	xor    rax,rsp
   140012cf8:	mov    QWORD PTR [rbp+0x170],rax
   140012cff:	mov    rbx,rcx
   140012d02:	lea    r8,[rsp+0x20]
   140012d07:	xor    esi,esi
   140012d09:	lea    rcx,[rsp+0x28]
   140012d0e:	lea    rdx,[rip+0x5feb]        # 0x140018d00
   140012d15:	mov    DWORD PTR [rsp+0x20],esi
   140012d19:	call   0x14000bf4c
   140012d1e:	mov    edi,DWORD PTR [rbx+0x4c]
   140012d21:	cmp    edi,0xfe
   140012d27:	ja     0x140012e11
   140012d2d:	xor    edx,edx
   140012d2f:	lea    rcx,[rsp+0x40]
   140012d34:	mov    r8d,0x224
   140012d3a:	call   0x140014b26
   140012d3f:	cmp    QWORD PTR [rbx+0x30],rsi
   140012d43:	lea    r8,[rip+0x4eee]        # 0x140017c38
   140012d4a:	movups xmm0,XMMWORD PTR [rbx+0x8]
   140012d4e:	cmovne r8,QWORD PTR [rbx+0x30]
   140012d53:	mov    edx,0x104
   140012d58:	movzx  eax,BYTE PTR [rbx+0x48]
   140012d5c:	mov    DWORD PTR [rsp+0x54],edi
   140012d60:	mov    edi,esi
   140012d62:	mov    DWORD PTR [rsp+0x50],eax
   140012d66:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140012d6c:	test   r8,r8
   140012d6f:	je     0x140012d94
   140012d71:	mov    eax,edx
   140012d73:	mov    rcx,r8
   140012d76:	mov    ebx,esi
   140012d78:	cmp    WORD PTR [rcx],si
   140012d7b:	je     0x140012d87
   140012d7d:	add    rcx,0x2
   140012d81:	sub    rax,0x1
   140012d85:	jne    0x140012d78
   140012d87:	test   rax,rax
   140012d8a:	je     0x140012d94
   140012d8c:	mov    rdi,rdx
   140012d8f:	sub    rdi,rax
   140012d92:	jmp    0x140012d99
   140012d94:	mov    ebx,0x80070057
   140012d99:	test   ebx,ebx
   140012d9b:	mov    DWORD PTR [rsp+0x20],ebx
   140012d9f:	cmovs  rdi,rsi
   140012da3:	js     0x140012e52
   140012da9:	lea    rcx,[rsp+0x5c]
   140012dae:	call   0x14000bdf4
   140012db3:	mov    ebx,eax
   140012db5:	mov    DWORD PTR [rsp+0x20],eax
   140012db9:	lea    eax,[rdi*2+0x2]
   140012dc0:	mov    DWORD PTR [rsp+0x58],eax
   140012dc4:	test   ebx,ebx
   140012dc6:	js     0x140012e52
   140012dcc:	mov    r9d,0x1
   140012dd2:	lea    r8,[rsp+0x40]
   140012dd7:	mov    edx,0x224
   140012ddc:	mov    ecx,0x9b
   140012de1:	mov    edi,esi
   140012de3:	call   QWORD PTR [rip+0x3657]        # 0x140016440
   140012de9:	test   eax,eax
   140012deb:	jne    0x140012dfd
   140012ded:	call   QWORD PTR [rip+0x3495]        # 0x140016288
   140012df3:	mov    edi,eax
   140012df5:	or     eax,0xffffffff
   140012df8:	test   edi,edi
   140012dfa:	cmove  edi,eax
   140012dfd:	movzx  ebx,di
   140012e00:	or     ebx,0x80070000
   140012e06:	test   edi,edi
   140012e08:	cmovle ebx,edi
   140012e0b:	mov    DWORD PTR [rsp+0x20],ebx
   140012e0f:	jmp    0x140012e52
   140012e11:	mov    ebx,0x8000000b
   140012e16:	mov    DWORD PTR [rsp+0x20],ebx
   140012e1a:	mov    rcx,QWORD PTR [rip+0xb1ff]        # 0x14001e020
   140012e21:	lea    rax,[rip+0xb1f8]        # 0x14001e020
   140012e28:	cmp    rcx,rax
   140012e2b:	je     0x140012e52
   140012e2d:	test   BYTE PTR [rcx+0x1c],0x4
   140012e31:	je     0x140012e52
   140012e33:	mov    rcx,QWORD PTR [rcx+0x10]
   140012e37:	lea    r8,[rip+0x5ee2]        # 0x140018d20
   140012e3e:	mov    edx,0x18
   140012e43:	mov    r9d,0x8000000b
   140012e49:	call   0x140001228
   140012e4e:	mov    ebx,DWORD PTR [rsp+0x20]
   140012e52:	lea    rcx,[rsp+0x28]
   140012e57:	call   0x14000bf98
   140012e5c:	mov    eax,ebx
   140012e5e:	mov    rcx,QWORD PTR [rbp+0x170]
   140012e65:	xor    rcx,rsp
   140012e68:	call   0x1400146a0
   140012e6d:	lea    r11,[rsp+0x280]
   140012e75:	mov    rbx,QWORD PTR [r11+0x18]
   140012e79:	mov    rsi,QWORD PTR [r11+0x20]
   140012e7d:	mov    rdi,QWORD PTR [r11+0x28]
   140012e81:	mov    rsp,r11
   140012e84:	pop    rbp
   140012e85:	ret    
   140012e86:	int3   
   140012e87:	int3   
   140012e88:	int3   
   140012e89:	int3   
   140012e8a:	int3   
   140012e8b:	int3   
   140012e8c:	rex push rbx
   140012e8e:	sub    rsp,0x50
   140012e92:	mov    rax,QWORD PTR [rip+0xb177]        # 0x14001e010
   140012e99:	xor    rax,rsp
   140012e9c:	mov    QWORD PTR [rsp+0x40],rax
   140012ea1:	xor    ebx,ebx
   140012ea3:	call   QWORD PTR [rip+0x332f]        # 0x1400161d8
   140012ea9:	test   ax,ax
   140012eac:	je     0x140012eda
   140012eae:	movzx  ecx,ax
   140012eb1:	lea    r9d,[rbx+0x10]
   140012eb5:	lea    r8,[rsp+0x20]
   140012eba:	lea    edx,[rbx+0x58]
   140012ebd:	call   QWORD PTR [rip+0x331d]        # 0x1400161e0
   140012ec3:	test   eax,eax
   140012ec5:	je     0x140012eda
   140012ec7:	mov    eax,0x800
   140012ecc:	test   WORD PTR [rsp+0x2e],ax
   140012ed1:	je     0x140012ee0
   140012ed3:	mov    ebx,0x1
   140012ed8:	jmp    0x140012ee0
   140012eda:	call   QWORD PTR [rip+0x33a8]        # 0x140016288
   140012ee0:	mov    eax,ebx
   140012ee2:	mov    rcx,QWORD PTR [rsp+0x40]
   140012ee7:	xor    rcx,rsp
   140012eea:	call   0x1400146a0
   140012eef:	add    rsp,0x50
   140012ef3:	pop    rbx
   140012ef4:	ret    
   140012ef5:	int3   
   140012ef6:	int3   
   140012ef7:	int3   
   140012ef8:	int3   
   140012ef9:	int3   
   140012efa:	int3   
   140012efb:	int3   
   140012efc:	mov    rax,rsp
   140012eff:	mov    QWORD PTR [rax+0x8],rbx
   140012f03:	mov    QWORD PTR [rax+0x10],rbp
   140012f07:	mov    QWORD PTR [rax+0x18],rsi
   140012f0b:	push   rdi
   140012f0c:	sub    rsp,0x20
   140012f10:	and    QWORD PTR [r9],0x0
   140012f14:	mov    rbx,rdx
   140012f17:	lea    rdx,[rax+0x20]
   140012f1b:	mov    rsi,r9
   140012f1e:	mov    rbp,rcx
   140012f21:	call   0x1400131d4
   140012f26:	mov    edi,eax
   140012f28:	test   eax,eax
   140012f2a:	js     0x140012f7e
   140012f2c:	mov    r8,rbx
   140012f2f:	mov    rdx,rbp
   140012f32:	mov    rbx,QWORD PTR [rsp+0x48]
   140012f37:	mov    rcx,rbx
   140012f3a:	call   0x140013344
   140012f3f:	mov    edi,eax
   140012f41:	test   eax,eax
   140012f43:	js     0x140012f76
   140012f45:	call   0x140013b3c
   140012f4a:	mov    eax,DWORD PTR [rip+0xb540]        # 0x14001e490
   140012f50:	xor    edx,edx
   140012f52:	cmp    eax,0x60
   140012f55:	mov    DWORD PTR [rbx+0x30],eax
   140012f58:	mov    BYTE PTR [rbx+0xc],0x0
   140012f5c:	mov    rcx,rbx
   140012f5f:	seta   dl
   140012f62:	mov    DWORD PTR [rbx+0x34],edx
   140012f65:	mov    rdx,rsi
   140012f68:	mov    DWORD PTR [rbx+0x38],0x1
   140012f6f:	call   0x140013ac4
   140012f74:	mov    edi,eax
   140012f76:	mov    rcx,rbx
   140012f79:	call   0x140013290
   140012f7e:	mov    rbx,QWORD PTR [rsp+0x30]
   140012f83:	mov    eax,edi
   140012f85:	mov    rbp,QWORD PTR [rsp+0x38]
   140012f8a:	mov    rsi,QWORD PTR [rsp+0x40]
   140012f8f:	add    rsp,0x20
   140012f93:	pop    rdi
   140012f94:	ret    
   140012f95:	int3   
   140012f96:	int3   
   140012f97:	int3   
   140012f98:	int3   
   140012f99:	int3   
   140012f9a:	int3   
   140012f9b:	int3   
   140012f9c:	mov    QWORD PTR [rsp+0x8],rbx
   140012fa1:	mov    QWORD PTR [rsp+0x10],rbp
   140012fa6:	mov    QWORD PTR [rsp+0x18],rsi
   140012fab:	push   rdi
   140012fac:	sub    rsp,0x20
   140012fb0:	mov    rdi,rdx
   140012fb3:	mov    rsi,r8
   140012fb6:	mov    rdx,r8
   140012fb9:	mov    rbp,rcx
   140012fbc:	xor    ebx,ebx
   140012fbe:	call   QWORD PTR [rip+0x31ec]        # 0x1400161b0
   140012fc4:	test   rax,rax
   140012fc7:	je     0x140012fe8
   140012fc9:	mov    rcx,rax
   140012fcc:	call   QWORD PTR [rip+0x319e]        # 0x140016170
   140012fd2:	mov    rbx,rax
   140012fd5:	test   rdi,rdi
   140012fd8:	je     0x140012fe8
   140012fda:	mov    rdx,rsi
   140012fdd:	mov    rcx,rbp
   140012fe0:	call   QWORD PTR [rip+0x31d2]        # 0x1400161b8
   140012fe6:	mov    DWORD PTR [rdi],eax
   140012fe8:	mov    rbp,QWORD PTR [rsp+0x38]
   140012fed:	mov    rax,rbx
   140012ff0:	mov    rbx,QWORD PTR [rsp+0x30]
   140012ff5:	mov    rsi,QWORD PTR [rsp+0x40]
   140012ffa:	add    rsp,0x20
   140012ffe:	pop    rdi
   140012fff:	ret    
   140013000:	int3   
   140013001:	int3   
   140013002:	int3   
   140013003:	int3   
   140013004:	int3   
   140013005:	int3   
   140013006:	int3   
   140013007:	int3   
   140013008:	mov    rax,rsp
   14001300b:	mov    QWORD PTR [rax+0x8],rbx
   14001300f:	mov    QWORD PTR [rax+0x10],rbp
   140013013:	mov    QWORD PTR [rax+0x18],rsi
   140013017:	push   rdi
   140013018:	push   r12
   14001301a:	push   r13
   14001301c:	push   r14
   14001301e:	push   r15
   140013020:	sub    rsp,0x30
   140013024:	mov    r13,QWORD PTR [rsp+0x80]
   14001302c:	xor    esi,esi
   14001302e:	and    DWORD PTR [rax+0x28],0x0
   140013032:	mov    r12d,r9d
   140013035:	mov    rdi,r8
   140013038:	mov    rbp,rdx
   14001303b:	mov    r15,rcx
   14001303e:	mov    r14d,0x80004005
   140013044:	and    QWORD PTR [r13+0x0],0x0
   140013049:	xor    ebx,ebx
   14001304b:	cmp    ebx,0x3
   14001304e:	jae    0x140013090
   140013050:	lea    rdx,[rip+0x5d31]        # 0x140018d88
   140013057:	xor    r9d,r9d
   14001305a:	mov    rdx,QWORD PTR [rdx+rbx*8]
   14001305e:	mov    r8,rbp
   140013061:	mov    rcx,rdi
   140013064:	call   QWORD PTR [rip+0x313e]        # 0x1400161a8
   14001306a:	test   rax,rax
   14001306d:	je     0x140013087
   14001306f:	mov    r8,rax
   140013072:	lea    rdx,[rsp+0x80]
   14001307a:	mov    rcx,rdi
   14001307d:	call   0x140012f9c
   140013082:	mov    rsi,rax
   140013085:	jmp    0x140013089
   140013087:	xor    esi,esi
   140013089:	inc    ebx
   14001308b:	test   rsi,rsi
   14001308e:	je     0x14001304b
   140013090:	test   rsi,rsi
   140013093:	jne    0x14001310c
   140013095:	test   r12d,r12d
   140013098:	je     0x1400131ac
   14001309e:	xor    r9d,r9d
   1400130a1:	lea    edx,[rsi+0x2]
   1400130a4:	mov    r8,rbp
   1400130a7:	mov    rcx,rdi
   1400130aa:	call   QWORD PTR [rip+0x30f8]        # 0x1400161a8
   1400130b0:	test   rax,rax
   1400130b3:	je     0x1400130cd
   1400130b5:	mov    r8,rax
   1400130b8:	lea    rdx,[rsp+0x80]
   1400130c0:	mov    rcx,rdi
   1400130c3:	call   0x140012f9c
   1400130c8:	mov    rsi,rax
   1400130cb:	jmp    0x1400130cf
   1400130cd:	xor    esi,esi
   1400130cf:	test   rsi,rsi
   1400130d2:	je     0x1400131ac
   1400130d8:	mov    edx,DWORD PTR [rsi+0x14]
   1400130db:	mov    ebp,DWORD PTR [rsp+0x80]
   1400130e2:	test   edx,edx
   1400130e4:	je     0x1400130ff
   1400130e6:	lea    rcx,[rdx+0x37]
   1400130ea:	and    rcx,0xfffffffffffffff0
   1400130ee:	cmp    rbp,rcx
   1400130f1:	jbe    0x1400130ff
   1400130f3:	lea    ecx,[rdx+0x28]
   1400130f6:	mov    eax,ecx
   1400130f8:	add    rsi,rax
   1400130fb:	sub    ebp,ecx
   1400130fd:	jmp    0x140013101
   1400130ff:	xor    esi,esi
   140013101:	test   rsi,rsi
   140013104:	je     0x1400131ac
   14001310a:	jmp    0x140013113
   14001310c:	mov    ebp,DWORD PTR [rsp+0x80]
   140013113:	mov    rax,QWORD PTR [r15]
   140013116:	mov    rbx,QWORD PTR [rax+0x70]
   14001311a:	mov    rcx,rbx
   14001311d:	call   QWORD PTR [rip+0x35d5]        # 0x1400166f8
   140013123:	lea    rdx,[rsp+0x80]
   14001312b:	mov    rcx,r15
   14001312e:	call   rbx
   140013130:	mov    r14d,eax
   140013133:	test   eax,eax
   140013135:	js     0x1400131ac
   140013137:	mov    rdi,QWORD PTR [rsp+0x80]
   14001313f:	mov    rax,QWORD PTR [rdi]
   140013142:	mov    rbx,QWORD PTR [rax+0x80]
   140013149:	mov    rcx,rbx
   14001314c:	call   QWORD PTR [rip+0x35a6]        # 0x1400166f8
   140013152:	mov    r8d,ebp
   140013155:	mov    rdx,rsi
   140013158:	mov    rcx,rdi
   14001315b:	call   rbx
   14001315d:	mov    r14d,eax
   140013160:	test   eax,eax
   140013162:	js     0x14001318f
   140013164:	mov    rax,QWORD PTR [r15]
   140013167:	mov    rbx,QWORD PTR [rax+0x20]
   14001316b:	mov    rcx,rbx
   14001316e:	call   QWORD PTR [rip+0x3584]        # 0x1400166f8
   140013174:	mov    rdx,QWORD PTR [rsp+0x80]
   14001317c:	xor    r9d,r9d
   14001317f:	xor    r8d,r8d
   140013182:	mov    QWORD PTR [rsp+0x20],r13
   140013187:	mov    rcx,r15
   14001318a:	call   rbx
   14001318c:	mov    r14d,eax
   14001318f:	mov    rdi,QWORD PTR [rsp+0x80]
   140013197:	mov    rax,QWORD PTR [rdi]
   14001319a:	mov    rbx,QWORD PTR [rax+0x10]
   14001319e:	mov    rcx,rbx
   1400131a1:	call   QWORD PTR [rip+0x3551]        # 0x1400166f8
   1400131a7:	mov    rcx,rdi
   1400131aa:	call   rbx
   1400131ac:	mov    rbx,QWORD PTR [rsp+0x60]
   1400131b1:	mov    eax,r14d
   1400131b4:	mov    rbp,QWORD PTR [rsp+0x68]
   1400131b9:	mov    rsi,QWORD PTR [rsp+0x70]
   1400131be:	add    rsp,0x30
   1400131c2:	pop    r15
   1400131c4:	pop    r14
   1400131c6:	pop    r13
   1400131c8:	pop    r12
   1400131ca:	pop    rdi
   1400131cb:	ret    
   1400131cc:	int3   
   1400131cd:	int3   
   1400131ce:	int3   
   1400131cf:	int3   
   1400131d0:	int3   
   1400131d1:	int3   
   1400131d2:	int3   
   1400131d3:	int3   
   1400131d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400131d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400131de:	push   rdi
   1400131df:	sub    rsp,0x20
   1400131e3:	mov    rsi,rdx
   1400131e6:	mov    ecx,0x40
   1400131eb:	lea    rdx,[rip+0x5b8e]        # 0x140018d80
   1400131f2:	mov    edi,0x8007000e
   1400131f7:	call   0x140014ff8
   1400131fc:	xor    edx,edx
   1400131fe:	mov    rbx,rax
   140013201:	test   rax,rax
   140013204:	je     0x140013235
   140013206:	lea    rax,[rip+0x3b6b]        # 0x140016d78
   14001320d:	mov    DWORD PTR [rbx+0x8],0x42c80000
   140013214:	mov    QWORD PTR [rbx],rax
   140013217:	lea    eax,[rdx+0x1]
   14001321a:	mov    DWORD PTR [rbx+0x10],eax
   14001321d:	mov    DWORD PTR [rbx+0x38],eax
   140013220:	mov    BYTE PTR [rbx+0xc],dl
   140013223:	mov    QWORD PTR [rbx+0x18],rdx
   140013227:	mov    QWORD PTR [rbx+0x20],rdx
   14001322b:	mov    QWORD PTR [rbx+0x28],rdx
   14001322f:	mov    QWORD PTR [rbx+0x30],rdx
   140013233:	jmp    0x140013238
   140013235:	mov    rbx,rdx
   140013238:	test   rbx,rbx
   14001323b:	je     0x14001324e
   14001323d:	mov    rax,QWORD PTR [rbx+0x18]
   140013241:	neg    rax
   140013244:	sbb    edi,edi
   140013246:	and    edi,0x80004021
   14001324c:	jge    0x14001325e
   14001324e:	mov    rcx,rbx
   140013251:	mov    rbx,rdx
   140013254:	test   rcx,rcx
   140013257:	je     0x14001325e
   140013259:	call   0x140013290
   14001325e:	mov    QWORD PTR [rsi],rbx
   140013261:	mov    eax,edi
   140013263:	mov    rbx,QWORD PTR [rsp+0x30]
   140013268:	mov    rsi,QWORD PTR [rsp+0x38]
   14001326d:	add    rsp,0x20
   140013271:	pop    rdi
   140013272:	ret    
   140013273:	int3   
   140013274:	int3   
   140013275:	int3   
   140013276:	int3   
   140013277:	int3   
   140013278:	int3   
   140013279:	int3   
   14001327a:	int3   
   14001327b:	int3   
   14001327c:	int3   
   14001327d:	int3   
   14001327e:	int3   
   14001327f:	int3   
   140013280:	mov    eax,DWORD PTR [rcx+0x10]
   140013283:	inc    eax
   140013285:	mov    DWORD PTR [rcx+0x10],eax
   140013288:	ret    
   140013289:	int3   
   14001328a:	int3   
   14001328b:	int3   
   14001328c:	int3   
   14001328d:	int3   
   14001328e:	int3   
   14001328f:	int3   
   140013290:	mov    QWORD PTR [rsp+0x8],rbx
   140013295:	mov    QWORD PTR [rsp+0x10],rsi
   14001329a:	mov    QWORD PTR [rsp+0x18],rdi
   14001329f:	push   r14
   1400132a1:	sub    rsp,0x20
   1400132a5:	sub    DWORD PTR [rcx+0x10],0x1
   1400132a9:	mov    rdi,rcx
   1400132ac:	mov    esi,DWORD PTR [rcx+0x10]
   1400132af:	jne    0x1400132e6
   1400132b1:	lea    rax,[rip+0x3ac0]        # 0x140016d78
   1400132b8:	mov    QWORD PTR [rcx],rax
   1400132bb:	mov    r14,QWORD PTR [rcx+0x18]
   1400132bf:	and    QWORD PTR [rcx+0x18],0x0
   1400132c4:	test   r14,r14
   1400132c7:	je     0x1400132de
   1400132c9:	mov    rdx,QWORD PTR [r14]
   1400132cc:	mov    rbx,QWORD PTR [rdx+0x10]
   1400132d0:	mov    rcx,rbx
   1400132d3:	call   QWORD PTR [rip+0x341f]        # 0x1400166f8
   1400132d9:	mov    rcx,r14
   1400132dc:	call   rbx
   1400132de:	mov    rcx,rdi
   1400132e1:	call   0x140014254
   1400132e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400132eb:	mov    eax,esi
   1400132ed:	mov    rsi,QWORD PTR [rsp+0x38]
   1400132f2:	mov    rdi,QWORD PTR [rsp+0x40]
   1400132f7:	add    rsp,0x20
   1400132fb:	pop    r14
   1400132fd:	ret    
   1400132fe:	int3   
   1400132ff:	int3   
   140013300:	int3   
   140013301:	int3   
   140013302:	int3   
   140013303:	int3   
   140013304:	int3   
   140013305:	int3   
   140013306:	int3   
   140013307:	int3   
   140013308:	int3   
   140013309:	int3   
   14001330a:	int3   
   14001330b:	int3   
   14001330c:	int3   
   14001330d:	int3   
   14001330e:	int3   
   14001330f:	int3   
   140013310:	mov    rax,QWORD PTR [rip+0x5bd9]        # 0x140018ef0
   140013317:	cmp    rax,QWORD PTR [rdx]
   14001331a:	jne    0x140013332
   14001331c:	mov    rax,QWORD PTR [rip+0x5bd5]        # 0x140018ef8
   140013323:	cmp    rax,QWORD PTR [rdx+0x8]
   140013327:	jne    0x140013332
   140013329:	inc    DWORD PTR [rcx+0x10]
   14001332c:	xor    eax,eax
   14001332e:	mov    QWORD PTR [r8],rcx
   140013331:	ret    
   140013332:	xor    eax,eax
   140013334:	mov    QWORD PTR [r8],rax
   140013337:	mov    eax,0x80004002
   14001333c:	ret    
   14001333d:	int3   
   14001333e:	int3   
   14001333f:	int3   
   140013340:	int3   
   140013341:	int3   
   140013342:	int3   
   140013343:	int3   
   140013344:	mov    QWORD PTR [rsp+0x8],rbx
   140013349:	mov    QWORD PTR [rsp+0x10],rsi
   14001334e:	push   rdi
   14001334f:	sub    rsp,0x20
   140013353:	mov    rdi,r8
   140013356:	mov    rax,rdx
   140013359:	mov    rsi,rcx
   14001335c:	mov    ebx,0x80070057
   140013361:	test   rdx,rdx
   140013364:	jne    0x140013378
   140013366:	lea    rcx,[rip+0x59e3]        # 0x140018d50
   14001336d:	call   QWORD PTR [rip+0x2edd]        # 0x140016250
   140013373:	test   rax,rax
   140013376:	je     0x140013387
   140013378:	test   rdi,rdi
   14001337b:	je     0x140013387
   14001337d:	mov    QWORD PTR [rsi+0x20],rax
   140013381:	xor    ebx,ebx
   140013383:	mov    QWORD PTR [rsi+0x28],rdi
   140013387:	mov    rsi,QWORD PTR [rsp+0x38]
   14001338c:	mov    eax,ebx
   14001338e:	mov    rbx,QWORD PTR [rsp+0x30]
   140013393:	add    rsp,0x20
   140013397:	pop    rdi
   140013398:	ret    
   140013399:	int3   
   14001339a:	int3   
   14001339b:	int3   
   14001339c:	int3   
   14001339d:	int3   
   14001339e:	int3   
   14001339f:	int3   
   1400133a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400133a5:	mov    QWORD PTR [rsp+0x18],r8
   1400133aa:	push   rbp
   1400133ab:	push   rsi
   1400133ac:	push   rdi
   1400133ad:	push   r12
   1400133af:	push   r13
   1400133b1:	push   r14
   1400133b3:	push   r15
   1400133b5:	mov    rbp,rsp
   1400133b8:	sub    rsp,0x30
   1400133bc:	mov    rax,QWORD PTR [rdx]
   1400133bf:	mov    r15,rcx
   1400133c2:	and    QWORD PTR [rbp+0x58],0x0
   1400133c7:	mov    r12,r9
   1400133ca:	mov    r13,rdx
   1400133cd:	xor    r14d,r14d
   1400133d0:	mov    rbx,QWORD PTR [rax+0x60]
   1400133d4:	mov    rcx,rbx
   1400133d7:	call   QWORD PTR [rip+0x331b]        # 0x1400166f8
   1400133dd:	lea    rdx,[rbp+0x48]
   1400133e1:	mov    rcx,r13
   1400133e4:	call   rbx
   1400133e6:	mov    edx,eax
   1400133e8:	test   eax,eax
   1400133ea:	js     0x1400134ae
   1400133f0:	xor    esi,esi
   1400133f2:	cmp    DWORD PTR [rbp+0x48],esi
   1400133f5:	jbe    0x1400134ae
   1400133fb:	mov    rdi,QWORD PTR [rbp+0x58]
   1400133ff:	and    QWORD PTR [rbp+0x58],0x0
   140013404:	test   rdi,rdi
   140013407:	je     0x14001341e
   140013409:	mov    rax,QWORD PTR [rdi]
   14001340c:	mov    rbx,QWORD PTR [rax+0x10]
   140013410:	mov    rcx,rbx
   140013413:	call   QWORD PTR [rip+0x32df]        # 0x1400166f8
   140013419:	mov    rcx,rdi
   14001341c:	call   rbx
   14001341e:	mov    rax,QWORD PTR [r13+0x0]
   140013422:	mov    rbx,QWORD PTR [rax+0x68]
   140013426:	mov    rcx,rbx
   140013429:	call   QWORD PTR [rip+0x32c9]        # 0x1400166f8
   14001342f:	lea    r8,[rbp+0x58]
   140013433:	mov    edx,esi
   140013435:	mov    rcx,r13
   140013438:	call   rbx
   14001343a:	mov    edx,eax
   14001343c:	test   eax,eax
   14001343e:	js     0x1400134a3
   140013440:	mov    rdi,QWORD PTR [rbp+0x58]
   140013444:	mov    rax,QWORD PTR [rdi]
   140013447:	mov    rbx,QWORD PTR [rax+0x28]
   14001344b:	mov    rcx,rbx
   14001344e:	call   QWORD PTR [rip+0x32a4]        # 0x1400166f8
   140013454:	lea    r8,[rbp-0x8]
   140013458:	mov    rcx,rdi
   14001345b:	lea    rdx,[rbp-0x10]
   14001345f:	call   rbx
   140013461:	mov    edx,eax
   140013463:	test   eax,eax
   140013465:	js     0x1400134a3
   140013467:	movsd  xmm0,QWORD PTR [rbp-0x10]
   14001346c:	addsd  xmm0,QWORD PTR [rip+0x5abc]        # 0x140018f30
   140013474:	mov    al,BYTE PTR [r15+0xc]
   140013478:	cvttsd2si r14,xmm0
   14001347d:	test   al,al
   14001347f:	jne    0x14001348b
   140013481:	cmp    r14d,DWORD PTR [r15+0x30]
   140013485:	jae    0x1400134ae
   140013487:	test   al,al
   140013489:	je     0x1400134a3
   14001348b:	movss  xmm0,DWORD PTR [r15+0x8]
   140013491:	mulss  xmm0,DWORD PTR [rip+0x5b47]        # 0x140018fe0
   140013499:	cvttss2si rax,xmm0
   14001349e:	cmp    r14d,eax
   1400134a1:	jae    0x1400134ae
   1400134a3:	inc    esi
   1400134a5:	cmp    esi,DWORD PTR [rbp+0x48]
   1400134a8:	jb     0x1400133fb
   1400134ae:	mov    rcx,QWORD PTR [rbp+0x50]
   1400134b2:	mov    rax,QWORD PTR [rbp+0x58]
   1400134b6:	mov    QWORD PTR [rcx],rax
   1400134b9:	test   r12,r12
   1400134bc:	je     0x1400134c2
   1400134be:	mov    DWORD PTR [r12],r14d
   1400134c2:	mov    eax,edx
   1400134c4:	mov    rbx,QWORD PTR [rsp+0x70]
   1400134c9:	add    rsp,0x30
   1400134cd:	pop    r15
   1400134cf:	pop    r14
   1400134d1:	pop    r13
   1400134d3:	pop    r12
   1400134d5:	pop    rdi
   1400134d6:	pop    rsi
   1400134d7:	pop    rbp
   1400134d8:	ret    
   1400134d9:	int3   
   1400134da:	int3   
   1400134db:	int3   
   1400134dc:	int3   
   1400134dd:	int3   
   1400134de:	int3   
   1400134df:	int3   
   1400134e0:	rex push rbp
   1400134e2:	push   rbx
   1400134e3:	push   rsi
   1400134e4:	push   rdi
   1400134e5:	push   r12
   1400134e7:	push   r13
   1400134e9:	push   r14
   1400134eb:	push   r15
   1400134ed:	lea    rbp,[rsp-0x17]
   1400134f2:	sub    rsp,0xa8
   1400134f9:	mov    rax,QWORD PTR [rip+0xab10]        # 0x14001e010
   140013500:	xor    rax,rsp
   140013503:	mov    QWORD PTR [rbp-0x1],rax
   140013507:	mov    rax,QWORD PTR [rbp+0x7f]
   14001350b:	mov    r13,rcx
   14001350e:	mov    QWORD PTR [rbp-0x19],rax
   140013512:	xor    edi,edi
   140013514:	mov    rax,QWORD PTR [rdx]
   140013517:	mov    r15,rdx
   14001351a:	mov    DWORD PTR [rbp-0x49],r9d
   14001351e:	mov    DWORD PTR [rbp-0x29],r8d
   140013522:	mov    QWORD PTR [rbp-0x21],rdi
   140013526:	mov    rbx,QWORD PTR [rax+0x18]
   14001352a:	mov    rcx,rbx
   14001352d:	mov    QWORD PTR [rbp-0x39],rdi
   140013531:	call   QWORD PTR [rip+0x31c1]        # 0x1400166f8
   140013537:	lea    r8,[rbp-0x4d]
   14001353b:	mov    rcx,r15
   14001353e:	lea    rdx,[rbp-0x51]
   140013542:	call   rbx
   140013544:	mov    esi,eax
   140013546:	test   eax,eax
   140013548:	js     0x1400137ba
   14001354e:	mov    rax,QWORD PTR [r15]
   140013551:	mov    r12d,edi
   140013554:	mov    DWORD PTR [rbp-0x31],edi
   140013557:	mov    QWORD PTR [rbp-0x41],rdi
   14001355b:	mov    DWORD PTR [rbp-0x2d],edi
   14001355e:	mov    rbx,QWORD PTR [rax+0x20]
   140013562:	mov    rcx,rbx
   140013565:	call   QWORD PTR [rip+0x318d]        # 0x1400166f8
   14001356b:	lea    rdx,[rbp-0x11]
   14001356f:	mov    rcx,r15
   140013572:	call   rbx
   140013574:	xor    ecx,ecx
   140013576:	mov    esi,eax
   140013578:	test   eax,eax
   14001357a:	js     0x1400135ab
   14001357c:	movzx  eax,BYTE PTR [rbp-0x2]
   140013580:	cmp    eax,0x43
   140013583:	jae    0x14001359b
   140013585:	lea    rcx,[rip+0x5844]        # 0x140018dd0
   14001358c:	mov    r14d,DWORD PTR [rcx+rax*4]
   140013590:	xor    ecx,ecx
   140013592:	lea    eax,[r14-0x1]
   140013596:	cmp    eax,0x1f
   140013599:	jbe    0x14001359e
   14001359b:	mov    r14d,ecx
   14001359e:	test   r14d,r14d
   1400135a1:	mov    esi,0x80070057
   1400135a6:	cmovg  esi,ecx
   1400135a9:	jmp    0x1400135af
   1400135ab:	mov    r14d,DWORD PTR [rbp-0x49]
   1400135af:	test   esi,esi
   1400135b1:	js     0x1400137ba
   1400135b7:	mov    ebx,DWORD PTR [rbp-0x29]
   1400135ba:	mov    esi,DWORD PTR [rbp-0x49]
   1400135bd:	mov    QWORD PTR [rbp-0x11],rcx
   1400135c1:	cmp    ebx,esi
   1400135c3:	je     0x140013703
   1400135c9:	mov    ecx,DWORD PTR [rbp-0x51]
   1400135cc:	mov    r8d,esi
   1400135cf:	mov    edx,ebx
   1400135d1:	call   QWORD PTR [rip+0x2bf9]        # 0x1400161d0
   1400135d7:	mov    ecx,DWORD PTR [rbp-0x4d]
   1400135da:	mov    r8d,esi
   1400135dd:	mov    edx,ebx
   1400135df:	mov    DWORD PTR [rbp-0x51],eax
   1400135e2:	call   QWORD PTR [rip+0x2be8]        # 0x1400161d0
   1400135e8:	mov    rdi,QWORD PTR [r13+0x18]
   1400135ec:	mov    DWORD PTR [rbp-0x4d],eax
   1400135ef:	mov    rax,QWORD PTR [rdi]
   1400135f2:	mov    rbx,QWORD PTR [rax+0x58]
   1400135f6:	mov    rcx,rbx
   1400135f9:	call   QWORD PTR [rip+0x30f9]        # 0x1400166f8
   1400135ff:	lea    rdx,[rbp-0x49]
   140013603:	mov    rcx,rdi
   140013606:	call   rbx
   140013608:	mov    esi,eax
   14001360a:	test   eax,eax
   14001360c:	js     0x140013797
   140013612:	mov    rdi,QWORD PTR [rbp-0x49]
   140013616:	mov    rax,QWORD PTR [rdi]
   140013619:	mov    rbx,QWORD PTR [rax+0x40]
   14001361d:	mov    rcx,rbx
   140013620:	call   QWORD PTR [rip+0x30d2]        # 0x1400166f8
   140013626:	mov    r9d,DWORD PTR [rbp-0x4d]
   14001362a:	mov    rdx,r15
   14001362d:	mov    r8d,DWORD PTR [rbp-0x51]
   140013631:	mov    rcx,rdi
   140013634:	mov    DWORD PTR [rsp+0x20],0x3
   14001363c:	call   rbx
   14001363e:	mov    esi,eax
   140013640:	test   eax,eax
   140013642:	js     0x1400136e8
   140013648:	mov    rdi,QWORD PTR [rbp-0x49]
   14001364c:	mov    rax,QWORD PTR [rdi]
   14001364f:	mov    rbx,QWORD PTR [rax]
   140013652:	mov    rcx,rbx
   140013655:	call   QWORD PTR [rip+0x309d]        # 0x1400166f8
   14001365b:	lea    r8,[rbp-0x11]
   14001365f:	mov    rcx,rdi
   140013662:	lea    rdx,[rip+0x5707]        # 0x140018d70
   140013669:	call   rbx
   14001366b:	mov    esi,eax
   14001366d:	test   eax,eax
   14001366f:	js     0x1400136e8
   140013671:	cmp    r14d,0x8
   140013675:	jg     0x1400136e8
   140013677:	mov    rcx,QWORD PTR [r13+0x18]
   14001367b:	lea    r9,[rbp-0x2d]
   14001367f:	and    QWORD PTR [rbp-0x41],r12
   140013683:	lea    r8,[rbp-0x31]
   140013687:	mov    rdx,r15
   14001368a:	call   0x140013c64
   14001368f:	mov    r12d,DWORD PTR [rbp-0x31]
   140013693:	mov    esi,eax
   140013695:	test   eax,eax
   140013697:	js     0x1400136c0
   140013699:	mov    rdx,QWORD PTR [rbp-0x11]
   14001369d:	lea    rax,[rbp-0x41]
   1400136a1:	mov    rcx,QWORD PTR [r13+0x18]
   1400136a5:	mov    r9d,r12d
   1400136a8:	mov    QWORD PTR [rsp+0x38],rax
   1400136ad:	mov    r8d,r14d
   1400136b0:	lea    rax,[rbp-0x39]
   1400136b4:	mov    QWORD PTR [rsp+0x30],rax
   1400136b9:	call   0x140013d9c
   1400136be:	mov    esi,eax
   1400136c0:	mov    rdi,QWORD PTR [rbp-0x11]
   1400136c4:	mov    rax,QWORD PTR [rdi]
   1400136c7:	mov    rbx,QWORD PTR [rax+0x10]
   1400136cb:	mov    rcx,rbx
   1400136ce:	call   QWORD PTR [rip+0x3024]        # 0x1400166f8
   1400136d4:	mov    rcx,rdi
   1400136d7:	call   rbx
   1400136d9:	mov    rax,QWORD PTR [rbp-0x41]
   1400136dd:	mov    QWORD PTR [rbp-0x11],rax
   1400136e1:	mov    eax,DWORD PTR [rbp-0x2d]
   1400136e4:	mov    QWORD PTR [rbp-0x41],rax
   1400136e8:	mov    rdi,QWORD PTR [rbp-0x49]
   1400136ec:	mov    rax,QWORD PTR [rdi]
   1400136ef:	mov    rbx,QWORD PTR [rax+0x10]
   1400136f3:	mov    rcx,rbx
   1400136f6:	call   QWORD PTR [rip+0x2ffc]        # 0x1400166f8
   1400136fc:	mov    rcx,rdi
   1400136ff:	call   rbx
   140013701:	jmp    0x14001376c
   140013703:	mov    rax,QWORD PTR [r15]
   140013706:	mov    rbx,QWORD PTR [rax]
   140013709:	mov    rcx,rbx
   14001370c:	call   QWORD PTR [rip+0x2fe6]        # 0x1400166f8
   140013712:	lea    r8,[rbp-0x11]
   140013716:	mov    rcx,r15
   140013719:	lea    rdx,[rip+0x5650]        # 0x140018d70
   140013720:	call   rbx
   140013722:	mov    esi,eax
   140013724:	test   eax,eax
   140013726:	js     0x140013797
   140013728:	cmp    r14d,0x8
   14001372c:	jg     0x140013770
   14001372e:	mov    rdi,QWORD PTR [r13+0x18]
   140013732:	mov    rax,QWORD PTR [rdi]
   140013735:	mov    rbx,QWORD PTR [rax+0x48]
   140013739:	mov    rcx,rbx
   14001373c:	call   QWORD PTR [rip+0x2fb6]        # 0x1400166f8
   140013742:	lea    rdx,[rbp-0x39]
   140013746:	mov    rcx,rdi
   140013749:	call   rbx
   14001374b:	mov    esi,eax
   14001374d:	test   eax,eax
   14001374f:	js     0x140013797
   140013751:	mov    rax,QWORD PTR [r15]
   140013754:	mov    rbx,QWORD PTR [rax+0x30]
   140013758:	mov    rcx,rbx
   14001375b:	call   QWORD PTR [rip+0x2f97]        # 0x1400166f8
   140013761:	mov    rdx,QWORD PTR [rbp-0x39]
   140013765:	mov    rcx,r15
   140013768:	call   rbx
   14001376a:	mov    esi,eax
   14001376c:	mov    rdi,QWORD PTR [rbp-0x41]
   140013770:	test   esi,esi
   140013772:	js     0x140013797
   140013774:	mov    r8,QWORD PTR [rbp-0x39]
   140013778:	lea    rax,[rbp-0x21]
   14001377c:	mov    rcx,QWORD PTR [rbp-0x11]
   140013780:	lea    rdx,[rbp-0x51]
   140013784:	mov    QWORD PTR [rsp+0x28],rax
   140013789:	mov    r9d,r12d
   14001378c:	mov    DWORD PTR [rsp+0x20],edi
   140013790:	call   0x14001410c
   140013795:	mov    esi,eax
   140013797:	mov    rdi,QWORD PTR [rbp-0x11]
   14001379b:	and    QWORD PTR [rbp-0x11],0x0
   1400137a0:	test   rdi,rdi
   1400137a3:	je     0x1400137ba
   1400137a5:	mov    rax,QWORD PTR [rdi]
   1400137a8:	mov    rbx,QWORD PTR [rax+0x10]
   1400137ac:	mov    rcx,rbx
   1400137af:	call   QWORD PTR [rip+0x2f43]        # 0x1400166f8
   1400137b5:	mov    rcx,rdi
   1400137b8:	call   rbx
   1400137ba:	mov    rdi,QWORD PTR [rbp-0x39]
   1400137be:	mov    rcx,QWORD PTR [rbp-0x19]
   1400137c2:	and    QWORD PTR [rbp-0x39],0x0
   1400137c7:	mov    rax,QWORD PTR [rbp-0x21]
   1400137cb:	mov    QWORD PTR [rcx],rax
   1400137ce:	test   rdi,rdi
   1400137d1:	je     0x1400137e8
   1400137d3:	mov    rax,QWORD PTR [rdi]
   1400137d6:	mov    rbx,QWORD PTR [rax+0x10]
   1400137da:	mov    rcx,rbx
   1400137dd:	call   QWORD PTR [rip+0x2f15]        # 0x1400166f8
   1400137e3:	mov    rcx,rdi
   1400137e6:	call   rbx
   1400137e8:	mov    eax,esi
   1400137ea:	mov    rcx,QWORD PTR [rbp-0x1]
   1400137ee:	xor    rcx,rsp
   1400137f1:	call   0x1400146a0
   1400137f6:	add    rsp,0xa8
   1400137fd:	pop    r15
   1400137ff:	pop    r14
   140013801:	pop    r13
   140013803:	pop    r12
   140013805:	pop    rdi
   140013806:	pop    rsi
   140013807:	pop    rbx
   140013808:	pop    rbp
   140013809:	ret    
   14001380a:	int3   
   14001380b:	int3   
   14001380c:	int3   
   14001380d:	int3   
   14001380e:	int3   
   14001380f:	int3   
   140013810:	mov    QWORD PTR [rsp+0x18],r8
   140013815:	push   rbx
   140013816:	push   rbp
   140013817:	push   rsi
   140013818:	push   rdi
   140013819:	push   r14
   14001381b:	sub    rsp,0x30
   14001381f:	mov    r8,QWORD PTR [rcx+0x20]
   140013823:	lea    rax,[rsp+0x60]
   140013828:	mov    rbp,r9
   14001382b:	mov    QWORD PTR [rsp+0x20],rax
   140013830:	mov    r9d,DWORD PTR [rcx+0x34]
   140013834:	mov    r14,rdx
   140013837:	mov    rdx,QWORD PTR [rcx+0x28]
   14001383b:	mov    rdi,rcx
   14001383e:	mov    rcx,QWORD PTR [rcx+0x18]
   140013842:	xor    ebx,ebx
   140013844:	mov    DWORD PTR [rsp+0x70],ebx
   140013848:	call   0x140013008
   14001384d:	mov    esi,eax
   14001384f:	test   eax,eax
   140013851:	js     0x1400138c8
   140013853:	mov    rdx,QWORD PTR [rsp+0x60]
   140013858:	lea    r9,[rsp+0x70]
   14001385d:	lea    r8,[rsp+0x68]
   140013862:	mov    rcx,rdi
   140013865:	call   0x1400133a0
   14001386a:	mov    esi,eax
   14001386c:	test   eax,eax
   14001386e:	js     0x1400138aa
   140013870:	mov    rdi,QWORD PTR [rsp+0x68]
   140013875:	mov    rax,QWORD PTR [rdi]
   140013878:	mov    rbx,QWORD PTR [rax]
   14001387b:	mov    rcx,rbx
   14001387e:	call   QWORD PTR [rip+0x2e74]        # 0x1400166f8
   140013884:	mov    r8,rbp
   140013887:	lea    rdx,[rip+0x54e2]        # 0x140018d70
   14001388e:	mov    rcx,rdi
   140013891:	call   rbx
   140013893:	mov    esi,eax
   140013895:	mov    rax,QWORD PTR [rdi]
   140013898:	mov    rbx,QWORD PTR [rax+0x10]
   14001389c:	mov    rcx,rbx
   14001389f:	call   QWORD PTR [rip+0x2e53]        # 0x1400166f8
   1400138a5:	mov    rcx,rdi
   1400138a8:	call   rbx
   1400138aa:	mov    rdi,QWORD PTR [rsp+0x60]
   1400138af:	mov    rax,QWORD PTR [rdi]
   1400138b2:	mov    rbx,QWORD PTR [rax+0x10]
   1400138b6:	mov    rcx,rbx
   1400138b9:	call   QWORD PTR [rip+0x2e39]        # 0x1400166f8
   1400138bf:	mov    rcx,rdi
   1400138c2:	call   rbx
   1400138c4:	mov    ebx,DWORD PTR [rsp+0x70]
   1400138c8:	mov    DWORD PTR [r14],ebx
   1400138cb:	mov    eax,esi
   1400138cd:	add    rsp,0x30
   1400138d1:	pop    r14
   1400138d3:	pop    rdi
   1400138d4:	pop    rsi
   1400138d5:	pop    rbp
   1400138d6:	pop    rbx
   1400138d7:	ret    
   1400138d8:	int3   
   1400138d9:	int3   
   1400138da:	int3   
   1400138db:	int3   
   1400138dc:	int3   
   1400138dd:	int3   
   1400138de:	int3   
   1400138df:	int3   
   1400138e0:	mov    rax,rsp
   1400138e3:	mov    QWORD PTR [rax+0x8],rbx
   1400138e7:	mov    QWORD PTR [rax+0x10],rbp
   1400138eb:	mov    QWORD PTR [rax+0x18],r8
   1400138ef:	push   rsi
   1400138f0:	push   rdi
   1400138f1:	push   r12
   1400138f3:	push   r14
   1400138f5:	push   r15
   1400138f7:	sub    rsp,0x30
   1400138fb:	mov    r15,rdx
   1400138fe:	mov    DWORD PTR [rax-0x30],0x2000
   140013905:	mov    rdx,QWORD PTR [rcx+0x28]
   140013909:	mov    r12,r9
   14001390c:	and    DWORD PTR [rax-0x38],0x0
   140013910:	mov    r14,rcx
   140013913:	mov    rcx,QWORD PTR [rcx+0x20]
   140013917:	xor    r9d,r9d
   14001391a:	xor    r8d,r8d
   14001391d:	mov    esi,0x80004005
   140013922:	call   QWORD PTR [rip+0x2ae8]        # 0x140016410
   140013928:	mov    rbp,rax
   14001392b:	test   rax,rax
   14001392e:	je     0x1400139ae
   140013930:	mov    rdi,QWORD PTR [r14+0x18]
   140013934:	mov    rax,QWORD PTR [rdi]
   140013937:	mov    rbx,QWORD PTR [rax+0xa8]
   14001393e:	mov    rcx,rbx
   140013941:	call   QWORD PTR [rip+0x2db1]        # 0x1400166f8
   140013947:	mov    r9d,DWORD PTR [r14+0x38]
   14001394b:	lea    rax,[rsp+0x70]
   140013950:	xor    r8d,r8d
   140013953:	mov    QWORD PTR [rsp+0x20],rax
   140013958:	mov    rdx,rbp
   14001395b:	mov    rcx,rdi
   14001395e:	call   rbx
   140013960:	mov    esi,eax
   140013962:	test   eax,eax
   140013964:	js     0x1400139a5
   140013966:	mov    rdi,QWORD PTR [rsp+0x70]
   14001396b:	mov    rax,QWORD PTR [rdi]
   14001396e:	mov    rbx,QWORD PTR [rax]
   140013971:	mov    rcx,rbx
   140013974:	call   QWORD PTR [rip+0x2d7e]        # 0x1400166f8
   14001397a:	mov    r8,r12
   14001397d:	lea    rdx,[rip+0x53ec]        # 0x140018d70
   140013984:	mov    rcx,rdi
   140013987:	call   rbx
   140013989:	mov    rdi,QWORD PTR [rsp+0x70]
   14001398e:	mov    esi,eax
   140013990:	mov    rax,QWORD PTR [rdi]
   140013993:	mov    rbx,QWORD PTR [rax+0x10]
   140013997:	mov    rcx,rbx
   14001399a:	call   QWORD PTR [rip+0x2d58]        # 0x1400166f8
   1400139a0:	mov    rcx,rdi
   1400139a3:	call   rbx
   1400139a5:	mov    rcx,rbp
   1400139a8:	call   QWORD PTR [rip+0x2742]        # 0x1400160f0
   1400139ae:	mov    rbx,QWORD PTR [rsp+0x60]
   1400139b3:	mov    eax,esi
   1400139b5:	mov    rbp,QWORD PTR [rsp+0x68]
   1400139ba:	mov    DWORD PTR [r15],0x60
   1400139c1:	add    rsp,0x30
   1400139c5:	pop    r15
   1400139c7:	pop    r14
   1400139c9:	pop    r12
   1400139cb:	pop    rdi
   1400139cc:	pop    rsi
   1400139cd:	ret    
   1400139ce:	int3   
   1400139cf:	int3   
   1400139d0:	int3   
   1400139d1:	int3   
   1400139d2:	int3   
   1400139d3:	int3   
   1400139d4:	rex push rbp
   1400139d6:	push   rbx
   1400139d7:	push   rsi
   1400139d8:	push   rdi
   1400139d9:	push   r14
   1400139db:	mov    rbp,rsp
   1400139de:	sub    rsp,0x30
   1400139e2:	xor    ebx,ebx
   1400139e4:	mov    r14,rdx
   1400139e7:	lea    rdx,[rcx+0x18]
   1400139eb:	mov    QWORD PTR [rbp+0x40],rbx
   1400139ef:	mov    rax,QWORD PTR [rdx]
   1400139f2:	mov    rdi,rcx
   1400139f5:	neg    rax
   1400139f8:	sbb    esi,esi
   1400139fa:	not    esi
   1400139fc:	and    esi,0x80004005
   140013a02:	jge    0x140013a11
   140013a04:	mov    ecx,0x237
   140013a09:	call   QWORD PTR [rip+0x2ae1]        # 0x1400164f0
   140013a0f:	mov    esi,eax
   140013a11:	test   esi,esi
   140013a13:	js     0x140013aad
   140013a19:	lea    r9,[rbp+0x38]
   140013a1d:	mov    rcx,rdi
   140013a20:	lea    rdx,[rbp+0x30]
   140013a24:	call   0x140013810
   140013a29:	test   eax,eax
   140013a2b:	jns    0x140013a43
   140013a2d:	lea    r9,[rbp+0x38]
   140013a31:	mov    rcx,rdi
   140013a34:	lea    rdx,[rbp+0x30]
   140013a38:	call   0x1400138e0
   140013a3d:	mov    esi,eax
   140013a3f:	test   eax,eax
   140013a41:	js     0x140013aad
   140013a43:	mov    rcx,rdi
   140013a46:	mov    rdx,QWORD PTR [rbp+0x38]
   140013a4a:	cmp    BYTE PTR [rdi+0xc],bl
   140013a4d:	je     0x140013a78
   140013a4f:	movss  xmm0,DWORD PTR [rdi+0x8]
   140013a54:	mulss  xmm0,DWORD PTR [rip+0x5588]        # 0x140018fe4
   140013a5c:	imul   r9d,DWORD PTR [rbp+0x30],0x64
   140013a61:	addss  xmm0,DWORD PTR [rip+0x54bf]        # 0x140018f28
   140013a69:	cvttss2si rax,xmm0
   140013a6e:	lea    r8d,[rax+rax*2]
   140013a72:	shl    r8d,0x5
   140013a76:	jmp    0x140013a80
   140013a78:	mov    r9d,DWORD PTR [rbp+0x30]
   140013a7c:	mov    r8d,DWORD PTR [rdi+0x30]
   140013a80:	lea    rax,[rbp+0x40]
   140013a84:	mov    QWORD PTR [rsp+0x20],rax
   140013a89:	call   0x1400134e0
   140013a8e:	mov    rdi,QWORD PTR [rbp+0x38]
   140013a92:	mov    esi,eax
   140013a94:	mov    rax,QWORD PTR [rdi]
   140013a97:	mov    rbx,QWORD PTR [rax+0x10]
   140013a9b:	mov    rcx,rbx
   140013a9e:	call   QWORD PTR [rip+0x2c54]        # 0x1400166f8
   140013aa4:	mov    rcx,rdi
   140013aa7:	call   rbx
   140013aa9:	mov    rbx,QWORD PTR [rbp+0x40]
   140013aad:	mov    QWORD PTR [r14],rbx
   140013ab0:	mov    eax,esi
   140013ab2:	add    rsp,0x30
   140013ab6:	pop    r14
   140013ab8:	pop    rdi
   140013ab9:	pop    rsi
   140013aba:	pop    rbx
   140013abb:	pop    rbp
   140013abc:	ret    
   140013abd:	int3   
   140013abe:	int3   
   140013abf:	int3   
   140013ac0:	int3   
   140013ac1:	int3   
   140013ac2:	int3   
   140013ac3:	int3   
   140013ac4:	mov    rax,rsp
   140013ac7:	mov    QWORD PTR [rax+0x10],rbx
   140013acb:	mov    QWORD PTR [rax+0x18],rsi
   140013acf:	push   rdi
   140013ad0:	sub    rsp,0x30
   140013ad4:	xor    ebx,ebx
   140013ad6:	mov    rsi,rdx
   140013ad9:	mov    rdi,rcx
   140013adc:	mov    QWORD PTR [rax+0x8],rbx
   140013ae0:	cmp    DWORD PTR [rcx+0x34],ebx
   140013ae3:	jne    0x140013b10
   140013ae5:	mov    rdx,QWORD PTR [rcx+0x28]
   140013ae9:	xor    r9d,r9d
   140013aec:	mov    rcx,QWORD PTR [rcx+0x20]
   140013af0:	xor    r8d,r8d
   140013af3:	mov    DWORD PTR [rax-0x10],0x2000
   140013afa:	mov    DWORD PTR [rax-0x18],ebx
   140013afd:	call   QWORD PTR [rip+0x290d]        # 0x140016410
   140013b03:	mov    QWORD PTR [rsp+0x40],rax
   140013b08:	test   rax,rax
   140013b0b:	jne    0x140013b21
   140013b0d:	mov    rcx,rdi
   140013b10:	lea    rdx,[rsp+0x40]
   140013b15:	call   0x1400139d4
   140013b1a:	mov    ebx,eax
   140013b1c:	mov    rax,QWORD PTR [rsp+0x40]
   140013b21:	mov    QWORD PTR [rsi],rax
   140013b24:	mov    eax,ebx
   140013b26:	mov    rbx,QWORD PTR [rsp+0x48]
   140013b2b:	mov    rsi,QWORD PTR [rsp+0x50]
   140013b30:	add    rsp,0x30
   140013b34:	pop    rdi
   140013b35:	ret    
   140013b36:	int3   
   140013b37:	int3   
   140013b38:	int3   
   140013b39:	int3   
   140013b3a:	int3   
   140013b3b:	int3   
   140013b3c:	mov    QWORD PTR [rsp+0x8],rbx
   140013b41:	mov    QWORD PTR [rsp+0x10],rsi
   140013b46:	push   rdi
   140013b47:	sub    rsp,0x20
   140013b4b:	mov    eax,DWORD PTR [rip+0xb1f7]        # 0x14001ed48
   140013b51:	mov    esi,0x1
   140013b56:	test   sil,al
   140013b59:	jne    0x140013b70
   140013b5b:	or     eax,esi
   140013b5d:	or     rbx,0xffffffffffffffff
   140013b61:	mov    DWORD PTR [rip+0xb1e1],eax        # 0x14001ed48
   140013b67:	mov    QWORD PTR [rip+0xb1e2],rbx        # 0x14001ed50
   140013b6e:	jmp    0x140013b77
   140013b70:	mov    rbx,QWORD PTR [rip+0xb1d9]        # 0x14001ed50
   140013b77:	xor    edi,edi
   140013b79:	cmp    rbx,0xffffffffffffffff
   140013b7d:	jne    0x140013bb4
   140013b7f:	lea    rcx,[rip+0x521a]        # 0x140018da0
   140013b86:	call   QWORD PTR [rip+0x26c4]        # 0x140016250
   140013b8c:	test   rax,rax
   140013b8f:	je     0x140013bad
   140013b91:	lea    rdx,[rip+0x5220]        # 0x140018db8
   140013b98:	mov    rcx,rax
   140013b9b:	call   QWORD PTR [rip+0x26bf]        # 0x140016260
   140013ba1:	mov    rbx,rax
   140013ba4:	mov    QWORD PTR [rip+0xb1a5],rax        # 0x14001ed50
   140013bab:	jmp    0x140013bb4
   140013bad:	mov    rbx,QWORD PTR [rip+0xb19c]        # 0x14001ed50
   140013bb4:	test   rbx,rbx
   140013bb7:	je     0x140013bc6
   140013bb9:	mov    rcx,rbx
   140013bbc:	call   QWORD PTR [rip+0x2b36]        # 0x1400166f8
   140013bc2:	call   rbx
   140013bc4:	mov    esi,eax
   140013bc6:	cmp    DWORD PTR [rip+0xa8c7],0xffffffff        # 0x14001e494
   140013bcd:	je     0x140013bd7
   140013bcf:	cmp    DWORD PTR [rip+0xb163],esi        # 0x14001ed38
   140013bd5:	je     0x140013c4d
   140013bd7:	xor    ecx,ecx
   140013bd9:	mov    DWORD PTR [rip+0xb159],esi        # 0x14001ed38
   140013bdf:	call   QWORD PTR [rip+0x2713]        # 0x1400162f8
   140013be5:	mov    rbx,rax
   140013be8:	test   rax,rax
   140013beb:	je     0x140013c33
   140013bed:	mov    edx,0x58
   140013bf2:	mov    rcx,rax
   140013bf5:	call   QWORD PTR [rip+0x24c5]        # 0x1400160c0
   140013bfb:	mov    edx,0x5a
   140013c00:	mov    rcx,rbx
   140013c03:	mov    DWORD PTR [rip+0xa88b],eax        # 0x14001e494
   140013c09:	call   QWORD PTR [rip+0x24b1]        # 0x1400160c0
   140013c0f:	cmp    DWORD PTR [rip+0xa87e],0x60        # 0x14001e494
   140013c16:	mov    rdx,rbx
   140013c19:	mov    DWORD PTR [rip+0xa871],eax        # 0x14001e490
   140013c1f:	setg   dil
   140013c23:	xor    ecx,ecx
   140013c25:	mov    DWORD PTR [rip+0xb111],edi        # 0x14001ed3c
   140013c2b:	call   QWORD PTR [rip+0x26cf]        # 0x140016300
   140013c31:	jmp    0x140013c4d
   140013c33:	mov    DWORD PTR [rip+0xa857],0x60        # 0x14001e494
   140013c3d:	mov    DWORD PTR [rip+0xa849],0x60        # 0x14001e490
   140013c47:	mov    DWORD PTR [rip+0xb0ef],edi        # 0x14001ed3c
   140013c4d:	mov    rbx,QWORD PTR [rsp+0x30]
   140013c52:	mov    rsi,QWORD PTR [rsp+0x38]
   140013c57:	add    rsp,0x20
   140013c5b:	pop    rdi
   140013c5c:	ret    
   140013c5d:	int3   
   140013c5e:	int3   
   140013c5f:	int3   
   140013c60:	int3   
   140013c61:	int3   
   140013c62:	int3   
   140013c63:	int3   
   140013c64:	rex push rbx
   140013c66:	push   rbp
   140013c67:	push   rsi
   140013c68:	push   rdi
   140013c69:	push   r12
   140013c6b:	push   r13
   140013c6d:	push   r14
   140013c6f:	push   r15
   140013c71:	sub    rsp,0x448
   140013c78:	mov    rax,QWORD PTR [rip+0xa391]        # 0x14001e010
   140013c7f:	xor    rax,rsp
   140013c82:	mov    QWORD PTR [rsp+0x430],rax
   140013c8a:	mov    rax,QWORD PTR [rcx]
   140013c8d:	mov    rdi,rcx
   140013c90:	mov    r13,r9
   140013c93:	mov    r12,r8
   140013c96:	mov    r15,rdx
   140013c99:	xor    esi,esi
   140013c9b:	xor    r14d,r14d
   140013c9e:	mov    rbx,QWORD PTR [rax+0x48]
   140013ca2:	mov    rcx,rbx
   140013ca5:	call   QWORD PTR [rip+0x2a4d]        # 0x1400166f8
   140013cab:	lea    rdx,[rsp+0x20]
   140013cb0:	mov    rcx,rdi
   140013cb3:	call   rbx
   140013cb5:	mov    ebp,eax
   140013cb7:	test   eax,eax
   140013cb9:	js     0x140013d66
   140013cbf:	mov    rax,QWORD PTR [r15]
   140013cc2:	mov    rbx,QWORD PTR [rax+0x30]
   140013cc6:	mov    rcx,rbx
   140013cc9:	call   QWORD PTR [rip+0x2a29]        # 0x1400166f8
   140013ccf:	mov    rdx,QWORD PTR [rsp+0x20]
   140013cd4:	mov    rcx,r15
   140013cd7:	call   rbx
   140013cd9:	mov    ebp,eax
   140013cdb:	test   eax,eax
   140013cdd:	js     0x140013d4c
   140013cdf:	mov    rdi,QWORD PTR [rsp+0x20]
   140013ce4:	mov    rax,QWORD PTR [rdi]
   140013ce7:	mov    rbx,QWORD PTR [rax+0x48]
   140013ceb:	mov    rcx,rbx
   140013cee:	call   QWORD PTR [rip+0x2a04]        # 0x1400166f8
   140013cf4:	lea    r9,[rsp+0x28]
   140013cf9:	mov    edx,0x100
   140013cfe:	lea    r8,[rsp+0x30]
   140013d03:	mov    rcx,rdi
   140013d06:	call   rbx
   140013d08:	mov    ebp,eax
   140013d0a:	test   eax,eax
   140013d0c:	js     0x140013d4c
   140013d0e:	mov    edx,DWORD PTR [rsp+0x28]
   140013d12:	test   edx,edx
   140013d14:	je     0x140013d4c
   140013d16:	dec    edx
   140013d18:	cmp    BYTE PTR [rsp+rdx*4+0x33],0xff
   140013d1d:	je     0x140013d26
   140013d1f:	mov    r14d,DWORD PTR [rsp+rdx*4+0x30]
   140013d24:	jmp    0x140013d47
   140013d26:	mov    eax,esi
   140013d28:	test   edx,edx
   140013d2a:	je     0x140013d4c
   140013d2c:	lea    rcx,[rsp+0x33]
   140013d31:	cmp    BYTE PTR [rcx],0xff
   140013d34:	jne    0x140013d42
   140013d36:	inc    eax
   140013d38:	add    rcx,0x4
   140013d3c:	cmp    eax,edx
   140013d3e:	jb     0x140013d31
   140013d40:	jmp    0x140013d4c
   140013d42:	mov    r14d,DWORD PTR [rsp+rax*4+0x30]
   140013d47:	mov    esi,0x1
   140013d4c:	mov    rdi,QWORD PTR [rsp+0x20]
   140013d51:	mov    rax,QWORD PTR [rdi]
   140013d54:	mov    rbx,QWORD PTR [rax+0x10]
   140013d58:	mov    rcx,rbx
   140013d5b:	call   QWORD PTR [rip+0x2997]        # 0x1400166f8
   140013d61:	mov    rcx,rdi
   140013d64:	call   rbx
   140013d66:	mov    DWORD PTR [r12],esi
   140013d6a:	mov    eax,ebp
   140013d6c:	mov    DWORD PTR [r13+0x0],r14d
   140013d70:	mov    rcx,QWORD PTR [rsp+0x430]
   140013d78:	xor    rcx,rsp
   140013d7b:	call   0x1400146a0
   140013d80:	add    rsp,0x448
   140013d87:	pop    r15
   140013d89:	pop    r14
   140013d8b:	pop    r13
   140013d8d:	pop    r12
   140013d8f:	pop    rdi
   140013d90:	pop    rsi
   140013d91:	pop    rbp
   140013d92:	pop    rbx
   140013d93:	ret    
   140013d94:	int3   
   140013d95:	int3   
   140013d96:	int3   
   140013d97:	int3   
   140013d98:	int3   
   140013d99:	int3   
   140013d9a:	int3   
   140013d9b:	int3   
   140013d9c:	mov    rax,rsp
   140013d9f:	mov    QWORD PTR [rax+0x8],rbx
   140013da3:	mov    QWORD PTR [rax+0x10],rbp
   140013da7:	mov    QWORD PTR [rax+0x20],rsi
   140013dab:	push   rdi
   140013dac:	push   r12
   140013dae:	push   r13
   140013db0:	push   r14
   140013db2:	push   r15
   140013db4:	sub    rsp,0x50
   140013db8:	mov    r12,QWORD PTR [rsp+0xb8]
   140013dc0:	mov    ebp,r9d
   140013dc3:	mov    r14,QWORD PTR [rsp+0xb0]
   140013dcb:	mov    r15d,r8d
   140013dce:	movaps XMMWORD PTR [rax-0x38],xmm6
   140013dd2:	mov    r13,rdx
   140013dd5:	lea    eax,[r8-0x4]
   140013dd9:	mov    rdi,rcx
   140013ddc:	and    QWORD PTR [r12],0x0
   140013de1:	mov    esi,0x80070057
   140013de6:	and    QWORD PTR [r14],0x0
   140013dea:	test   eax,0xfffffffb
   140013def:	jne    0x140013f6a
   140013df5:	mov    rax,QWORD PTR [rcx]
   140013df8:	mov    rbx,QWORD PTR [rax+0x50]
   140013dfc:	mov    rcx,rbx
   140013dff:	call   QWORD PTR [rip+0x28f3]        # 0x1400166f8
   140013e05:	lea    rdx,[rsp+0xb0]
   140013e0d:	mov    rcx,rdi
   140013e10:	call   rbx
   140013e12:	mov    esi,eax
   140013e14:	test   eax,eax
   140013e16:	js     0x140013f6a
   140013e1c:	mov    rax,QWORD PTR [rdi]
   140013e1f:	mov    rbx,QWORD PTR [rax+0x48]
   140013e23:	mov    rcx,rbx
   140013e26:	call   QWORD PTR [rip+0x28cc]        # 0x1400166f8
   140013e2c:	lea    rdx,[rsp+0xb8]
   140013e34:	mov    rcx,rdi
   140013e37:	call   rbx
   140013e39:	mov    esi,eax
   140013e3b:	test   eax,eax
   140013e3d:	js     0x140013f4d
   140013e43:	mov    rsi,QWORD PTR [rsp+0xb8]
   140013e4b:	mov    ecx,r15d
   140013e4e:	mov    ebx,0x1
   140013e53:	shl    ebx,cl
   140013e55:	mov    rax,QWORD PTR [rsi]
   140013e58:	mov    rdi,QWORD PTR [rax+0x28]
   140013e5c:	mov    rcx,rdi
   140013e5f:	call   QWORD PTR [rip+0x2893]        # 0x1400166f8
   140013e65:	mov    r9d,ebp
   140013e68:	mov    r8d,ebx
   140013e6b:	mov    rdx,r13
   140013e6e:	mov    rcx,rsi
   140013e71:	call   rdi
   140013e73:	mov    esi,eax
   140013e75:	test   eax,eax
   140013e77:	js     0x140013f42
   140013e7d:	mov    rdi,QWORD PTR [rsp+0xb8]
   140013e85:	mov    rax,QWORD PTR [rdi]
   140013e88:	mov    rbx,QWORD PTR [rax+0x38]
   140013e8c:	mov    rcx,rbx
   140013e8f:	call   QWORD PTR [rip+0x2863]        # 0x1400166f8
   140013e95:	lea    rdx,[rsp+0x90]
   140013e9d:	mov    rcx,rdi
   140013ea0:	call   rbx
   140013ea2:	mov    esi,eax
   140013ea4:	test   eax,eax
   140013ea6:	js     0x140013f42
   140013eac:	test   ebp,ebp
   140013eae:	je     0x140013eba
   140013eb0:	movsd  xmm6,QWORD PTR [rip+0x5088]        # 0x140018f40
   140013eb8:	jmp    0x140013ebd
   140013eba:	xorps  xmm6,xmm6
   140013ebd:	mov    rsi,QWORD PTR [rsp+0xb0]
   140013ec5:	lea    rcx,[rip+0x5044]        # 0x140018f10
   140013ecc:	cmp    r15d,0x8
   140013ed0:	lea    rdi,[rip+0x5029]        # 0x140018f00
   140013ed7:	cmove  rdi,rcx
   140013edb:	mov    rax,QWORD PTR [rsi]
   140013ede:	mov    rbx,QWORD PTR [rax+0x40]
   140013ee2:	mov    rcx,rbx
   140013ee5:	call   QWORD PTR [rip+0x280d]        # 0x1400166f8
   140013eeb:	mov    rax,QWORD PTR [rsp+0xb8]
   140013ef3:	mov    r9d,0x8
   140013ef9:	and    DWORD PTR [rsp+0x30],0x0
   140013efe:	mov    r8,rdi
   140013f01:	movsd  QWORD PTR [rsp+0x28],xmm6
   140013f07:	mov    rdx,r13
   140013f0a:	mov    rcx,rsi
   140013f0d:	mov    QWORD PTR [rsp+0x20],rax
   140013f12:	call   rbx
   140013f14:	mov    esi,eax
   140013f16:	test   eax,eax
   140013f18:	js     0x140013f42
   140013f1a:	mov    rdi,QWORD PTR [rsp+0xb0]
   140013f22:	mov    rax,QWORD PTR [rdi]
   140013f25:	mov    rbx,QWORD PTR [rax]
   140013f28:	mov    rcx,rbx
   140013f2b:	call   QWORD PTR [rip+0x27c7]        # 0x1400166f8
   140013f31:	mov    r8,r12
   140013f34:	lea    rdx,[rip+0x4e35]        # 0x140018d70
   140013f3b:	mov    rcx,rdi
   140013f3e:	call   rbx
   140013f40:	mov    esi,eax
   140013f42:	mov    rax,QWORD PTR [rsp+0xb8]
   140013f4a:	mov    QWORD PTR [r14],rax
   140013f4d:	mov    rdi,QWORD PTR [rsp+0xb0]
   140013f55:	mov    rax,QWORD PTR [rdi]
   140013f58:	mov    rbx,QWORD PTR [rax+0x10]
   140013f5c:	mov    rcx,rbx
   140013f5f:	call   QWORD PTR [rip+0x2793]        # 0x1400166f8
   140013f65:	mov    rcx,rdi
   140013f68:	call   rbx
   140013f6a:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140013f6f:	lea    r11,[rsp+0x50]
   140013f74:	mov    rbx,QWORD PTR [r11+0x30]
   140013f78:	mov    eax,esi
   140013f7a:	mov    rbp,QWORD PTR [r11+0x38]
   140013f7e:	mov    rsi,QWORD PTR [r11+0x48]
   140013f82:	mov    rsp,r11
   140013f85:	pop    r15
   140013f87:	pop    r14
   140013f89:	pop    r13
   140013f8b:	pop    r12
   140013f8d:	pop    rdi
   140013f8e:	ret    
   140013f8f:	int3   
   140013f90:	int3   
   140013f91:	int3   
   140013f92:	int3   
   140013f93:	int3   
   140013f94:	int3   
   140013f95:	int3   
   140013f96:	int3   
   140013f97:	int3   
   140013f98:	rex push rbp
   140013f9a:	push   rbx
   140013f9b:	push   rsi
   140013f9c:	push   rdi
   140013f9d:	push   r12
   140013f9f:	push   r14
   140013fa1:	push   r15
   140013fa3:	lea    rbp,[rsp-0x380]
   140013fab:	sub    rsp,0x480
   140013fb2:	mov    rax,QWORD PTR [rip+0xa057]        # 0x14001e010
   140013fb9:	xor    rax,rsp
   140013fbc:	mov    QWORD PTR [rbp+0x370],rax
   140013fc3:	mov    r14,QWORD PTR [rbp+0x3f8]
   140013fca:	lea    rcx,[rsp+0x40]
   140013fcf:	mov    r15,QWORD PTR [rbp+0x3f0]
   140013fd6:	mov    rbx,r8
   140013fd9:	movzx  edi,dx
   140013fdc:	xor    r12d,r12d
   140013fdf:	xor    edx,edx
   140013fe1:	mov    r8d,0x428
   140013fe7:	mov    QWORD PTR [r14],r12
   140013fea:	mov    rsi,r9
   140013fed:	call   0x140014b26
   140013ff2:	mov    eax,DWORD PTR [rbx]
   140013ff4:	mov    DWORD PTR [rsp+0x44],eax
   140013ff8:	mov    eax,DWORD PTR [rbx+0x4]
   140013ffb:	mov    DWORD PTR [rsp+0x48],eax
   140013fff:	lea    eax,[r12+0x1]
   140014004:	mov    WORD PTR [rsp+0x4c],ax
   140014009:	mov    DWORD PTR [rsp+0x40],0x28
   140014011:	mov    WORD PTR [rsp+0x4e],di
   140014016:	mov    DWORD PTR [rsp+0x50],r12d
   14001401b:	test   rsi,rsi
   14001401e:	je     0x14001409b
   140014020:	mov    rax,QWORD PTR [rsi]
   140014023:	mov    rbx,QWORD PTR [rax+0x40]
   140014027:	mov    rcx,rbx
   14001402a:	call   QWORD PTR [rip+0x26c8]        # 0x1400166f8
   140014030:	lea    rdx,[rsp+0x30]
   140014035:	mov    rcx,rsi
   140014038:	call   rbx
   14001403a:	test   eax,eax
   14001403c:	js     0x14001409b
   14001403e:	mov    rax,QWORD PTR [rsi]
   140014041:	mov    rbx,QWORD PTR [rax+0x48]
   140014045:	mov    rcx,rbx
   140014048:	call   QWORD PTR [rip+0x26aa]        # 0x1400166f8
   14001404e:	mov    edi,0x100
   140014053:	lea    r9,[rsp+0x30]
   140014058:	mov    edx,edi
   14001405a:	lea    r8,[rsp+0x68]
   14001405f:	mov    rcx,rsi
   140014062:	call   rbx
   140014064:	mov    ebx,eax
   140014066:	test   eax,eax
   140014068:	js     0x1400140e3
   14001406a:	mov    eax,DWORD PTR [rsp+0x30]
   14001406e:	cmp    eax,edi
   140014070:	ja     0x140014092
   140014072:	cmp    DWORD PTR [rbp+0x3e0],r12d
   140014079:	je     0x140014088
   14001407b:	mov    ecx,DWORD PTR [rbp+0x3e8]
   140014081:	lea    edx,[rax-0x1]
   140014084:	mov    DWORD PTR [rsp+rdx*4+0x68],ecx
   140014088:	mov    DWORD PTR [rsp+0x64],eax
   14001408c:	mov    DWORD PTR [rsp+0x60],eax
   140014090:	jmp    0x140014097
   140014092:	mov    ebx,0x80070057
   140014097:	test   ebx,ebx
   140014099:	js     0x1400140e3
   14001409b:	xor    ecx,ecx
   14001409d:	mov    ebx,0x8007000e
   1400140a2:	call   QWORD PTR [rip+0x2250]        # 0x1400162f8
   1400140a8:	mov    rdi,rax
   1400140ab:	test   rax,rax
   1400140ae:	je     0x1400140e3
   1400140b0:	mov    DWORD PTR [rsp+0x28],r12d
   1400140b5:	lea    rdx,[rsp+0x40]
   1400140ba:	mov    r9,r15
   1400140bd:	mov    QWORD PTR [rsp+0x20],r12
   1400140c2:	xor    r8d,r8d
   1400140c5:	mov    rcx,rax
   1400140c8:	call   QWORD PTR [rip+0x2052]        # 0x140016120
   1400140ce:	mov    rdx,rdi
   1400140d1:	xor    ecx,ecx
   1400140d3:	mov    QWORD PTR [r14],rax
   1400140d6:	call   QWORD PTR [rip+0x2224]        # 0x140016300
   1400140dc:	cmp    QWORD PTR [r14],r12
   1400140df:	cmovne ebx,r12d
   1400140e3:	mov    eax,ebx
   1400140e5:	mov    rcx,QWORD PTR [rbp+0x370]
   1400140ec:	xor    rcx,rsp
   1400140ef:	call   0x1400146a0
   1400140f4:	add    rsp,0x480
   1400140fb:	pop    r15
   1400140fd:	pop    r14
   1400140ff:	pop    r12
   140014101:	pop    rdi
   140014102:	pop    rsi
   140014103:	pop    rbx
   140014104:	pop    rbp
   140014105:	ret    
   140014106:	int3   
   140014107:	int3   
   140014108:	int3   
   140014109:	int3   
   14001410a:	int3   
   14001410b:	int3   
   14001410c:	mov    QWORD PTR [rsp+0x20],rbx
   140014111:	push   rbp
   140014112:	push   rsi
   140014113:	push   rdi
   140014114:	push   r12
   140014116:	push   r13
   140014118:	push   r14
   14001411a:	push   r15
   14001411c:	mov    rbp,rsp
   14001411f:	sub    rsp,0x70
   140014123:	mov    rax,QWORD PTR [rip+0x9ee6]        # 0x14001e010
   14001412a:	xor    rax,rsp
   14001412d:	mov    QWORD PTR [rbp-0x8],rax
   140014131:	mov    eax,DWORD PTR [rdx]
   140014133:	mov    r14,rcx
   140014136:	mov    r15,QWORD PTR [rbp+0x68]
   14001413a:	mov    r12d,r9d
   14001413d:	and    QWORD PTR [rbp-0x30],0x0
   140014142:	mov    r13,r8
   140014145:	mov    DWORD PTR [rbp-0x28],eax
   140014148:	mov    rdi,rdx
   14001414b:	mov    eax,DWORD PTR [rdx+0x4]
   14001414e:	neg    eax
   140014150:	mov    DWORD PTR [rbp-0x24],eax
   140014153:	mov    rax,QWORD PTR [rcx]
   140014156:	mov    rbx,QWORD PTR [rax+0x20]
   14001415a:	mov    rcx,rbx
   14001415d:	call   QWORD PTR [rip+0x2595]        # 0x1400166f8
   140014163:	lea    rdx,[rbp-0x18]
   140014167:	mov    rcx,r14
   14001416a:	call   rbx
   14001416c:	xor    ebx,ebx
   14001416e:	mov    ecx,eax
   140014170:	test   eax,eax
   140014172:	js     0x1400141ab
   140014174:	movzx  eax,BYTE PTR [rbp-0x9]
   140014178:	cmp    eax,0x43
   14001417b:	jae    0x14001418f
   14001417d:	lea    rcx,[rip+0x4c4c]        # 0x140018dd0
   140014184:	mov    edx,DWORD PTR [rcx+rax*4]
   140014187:	lea    eax,[rdx-0x1]
   14001418a:	cmp    eax,0x1f
   14001418d:	jbe    0x140014191
   14001418f:	mov    edx,ebx
   140014191:	mov    esi,DWORD PTR [rdi]
   140014193:	mov    ecx,0x80070057
   140014198:	imul   esi,edx
   14001419b:	add    esi,0x1f
   14001419e:	sar    esi,0x3
   1400141a1:	and    esi,0xfffffffc
   1400141a4:	test   edx,edx
   1400141a6:	cmovg  ecx,ebx
   1400141a9:	jmp    0x1400141b1
   1400141ab:	mov    esi,DWORD PTR [rbp-0x28]
   1400141ae:	mov    edx,DWORD PTR [rbp-0x28]
   1400141b1:	test   ecx,ecx
   1400141b3:	js     0x140014221
   1400141b5:	lea    rax,[rbp-0x30]
   1400141b9:	mov    r9,r13
   1400141bc:	mov    QWORD PTR [rsp+0x38],rax
   1400141c1:	lea    r8,[rbp-0x28]
   1400141c5:	lea    rax,[rbp-0x18]
   1400141c9:	mov    QWORD PTR [rsp+0x30],rax
   1400141ce:	mov    eax,DWORD PTR [rbp+0x60]
   1400141d1:	mov    DWORD PTR [rsp+0x28],eax
   1400141d5:	mov    DWORD PTR [rsp+0x20],r12d
   1400141da:	call   0x140013f98
   1400141df:	mov    ecx,eax
   1400141e1:	test   eax,eax
   1400141e3:	js     0x140014221
   1400141e5:	mov    eax,DWORD PTR [rdi]
   1400141e7:	mov    edi,DWORD PTR [rdi+0x4]
   1400141ea:	mov    DWORD PTR [rbp-0x20],eax
   1400141ed:	mov    rax,QWORD PTR [r14]
   1400141f0:	mov    QWORD PTR [rbp-0x28],rbx
   1400141f4:	mov    DWORD PTR [rbp-0x1c],edi
   1400141f7:	imul   edi,esi
   1400141fa:	mov    rbx,QWORD PTR [rax+0x38]
   1400141fe:	mov    rcx,rbx
   140014201:	call   QWORD PTR [rip+0x24f1]        # 0x1400166f8
   140014207:	mov    rax,QWORD PTR [rbp-0x18]
   14001420b:	lea    rdx,[rbp-0x28]
   14001420f:	mov    r9d,edi
   140014212:	mov    QWORD PTR [rsp+0x20],rax
   140014217:	mov    r8d,esi
   14001421a:	mov    rcx,r14
   14001421d:	call   rbx
   14001421f:	mov    ecx,eax
   140014221:	mov    rax,QWORD PTR [rbp-0x30]
   140014225:	mov    QWORD PTR [r15],rax
   140014228:	mov    eax,ecx
   14001422a:	mov    rcx,QWORD PTR [rbp-0x8]
   14001422e:	xor    rcx,rsp
   140014231:	call   0x1400146a0
   140014236:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001423e:	add    rsp,0x70
   140014242:	pop    r15
   140014244:	pop    r14
   140014246:	pop    r13
   140014248:	pop    r12
   14001424a:	pop    rdi
   14001424b:	pop    rsi
   14001424c:	pop    rbp
   14001424d:	ret    
   14001424e:	int3   
   14001424f:	int3   
   140014250:	int3   
   140014251:	int3   
   140014252:	int3   
   140014253:	int3   
   140014254:	jmp    0x1400149a6
   140014259:	int3   
   14001425a:	int3   
   14001425b:	int3   
   14001425c:	int3   
   14001425d:	int3   
   14001425e:	int3   
   14001425f:	int3   
   140014260:	jmp    0x140014254
   140014265:	int3   
   140014266:	int3   
   140014267:	int3   
   140014268:	int3   
   140014269:	int3   
   14001426a:	int3   
   14001426b:	int3   
   14001426c:	mov    QWORD PTR [rsp+0x8],rbx
   140014271:	push   rdi
   140014272:	sub    rsp,0x20
   140014276:	mov    rdi,rcx
   140014279:	jmp    0x14001428a
   14001427b:	mov    rcx,rdi
   14001427e:	call   0x140014b1a
   140014283:	test   eax,eax
   140014285:	je     0x140014297
   140014287:	mov    rcx,rdi
   14001428a:	call   0x1400146dc
   14001428f:	mov    rbx,rax
   140014292:	test   rax,rax
   140014295:	je     0x14001427b
   140014297:	mov    rax,rbx
   14001429a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001429f:	add    rsp,0x20
   1400142a3:	pop    rdi
   1400142a4:	ret    
   1400142a5:	int3   
   1400142a6:	int3   
   1400142a7:	int3   
   1400142a8:	int3   
   1400142a9:	int3   
   1400142aa:	int3   
   1400142ab:	int3   
   1400142ac:	jmp    0x14001426c
   1400142b1:	int3   
   1400142b2:	int3   
   1400142b3:	int3   
   1400142b4:	int3   
   1400142b5:	int3   
   1400142b6:	int3   
   1400142b7:	int3   
   1400142b8:	int3   
   1400142b9:	int3   
   1400142ba:	int3   
   1400142bb:	int3   
   1400142bc:	int3   
   1400142bd:	int3   
   1400142be:	int3   
   1400142bf:	int3   
   1400142c0:	sub    rsp,0x28
   1400142c4:	mov    eax,0x5a4d
   1400142c9:	cmp    WORD PTR [rip+0xfffffffffffebd30],ax        # 0x140000000
   1400142d0:	je     0x1400142d6
   1400142d2:	xor    eax,eax
   1400142d4:	jmp    0x140014325
   1400142d6:	movsxd rcx,DWORD PTR [rip+0xfffffffffffebd5f]        # 0x14000003c
   1400142dd:	lea    rax,[rip+0xfffffffffffebd1c]        # 0x140000000
   1400142e4:	add    rcx,rax
   1400142e7:	cmp    DWORD PTR [rcx],0x4550
   1400142ed:	jne    0x1400142d2
   1400142ef:	movzx  eax,WORD PTR [rcx+0x18]
   1400142f3:	cmp    eax,0x10b
   1400142f8:	je     0x140014314
   1400142fa:	cmp    eax,0x20b
   1400142ff:	jne    0x1400142d2
   140014301:	xor    eax,eax
   140014303:	cmp    DWORD PTR [rcx+0x84],0xe
   14001430a:	jbe    0x140014325
   14001430c:	cmp    DWORD PTR [rcx+0xf8],eax
   140014312:	jmp    0x140014322
   140014314:	xor    eax,eax
   140014316:	cmp    DWORD PTR [rcx+0x74],0xe
   14001431a:	jbe    0x140014325
   14001431c:	cmp    DWORD PTR [rcx+0xe8],eax
   140014322:	setne  al
   140014325:	mov    ecx,0x2
   14001432a:	mov    DWORD PTR [rip+0xa1c0],eax        # 0x14001e4f0
   140014330:	call   0x140014c08
   140014335:	mov    ecx,eax
   140014337:	call   QWORD PTR [rip+0x227b]        # 0x1400165b8
   14001433d:	mov    rcx,QWORD PTR [rip+0x22b4]        # 0x1400165f8
   140014344:	or     rax,0xffffffffffffffff
   140014348:	mov    QWORD PTR [rip+0xaa19],rax        # 0x14001ed68
   14001434f:	mov    QWORD PTR [rip+0xaa1a],rax        # 0x14001ed70
   140014356:	mov    eax,DWORD PTR [rip+0xa720]        # 0x14001ea7c
   14001435c:	mov    DWORD PTR [rcx],eax
   14001435e:	mov    rcx,QWORD PTR [rip+0x229b]        # 0x140016600
   140014365:	mov    eax,DWORD PTR [rip+0xa705]        # 0x14001ea70
   14001436b:	mov    DWORD PTR [rcx],eax
   14001436d:	call   0x140008c30
   140014372:	cmp    DWORD PTR [rip+0x9c8f],0x0        # 0x14001e008
   140014379:	jne    0x140014388
   14001437b:	lea    rcx,[rip+0xffffffffffff48ae]        # 0x140008c30
   140014382:	call   QWORD PTR [rip+0x2250]        # 0x1400165d8
   140014388:	xor    eax,eax
   14001438a:	add    rsp,0x28
   14001438e:	ret    
   14001438f:	int3   
   140014390:	int3   
   140014391:	int3   
   140014392:	int3   
   140014393:	int3   
   140014394:	int3   
   140014395:	int3   
   140014396:	int3   
   140014397:	int3   
   140014398:	int3   
   140014399:	int3   
   14001439a:	int3   
   14001439b:	int3   
   14001439c:	int3   
   14001439d:	int3   
   14001439e:	int3   
   14001439f:	int3   
   1400143a0:	sub    rsp,0x38
   1400143a4:	mov    eax,DWORD PTR [rip+0xa6ce]        # 0x14001ea78
   1400143aa:	lea    r8,[rip+0xa137]        # 0x14001e4e8
   1400143b1:	mov    r9d,DWORD PTR [rip+0xa6bc]        # 0x14001ea74
   1400143b8:	lea    rdx,[rip+0xa121]        # 0x14001e4e0
   1400143bf:	mov    DWORD PTR [rip+0xa12f],eax        # 0x14001e4f4
   1400143c5:	lea    rcx,[rip+0xa10c]        # 0x14001e4d8
   1400143cc:	lea    rax,[rip+0xa121]        # 0x14001e4f4
   1400143d3:	mov    QWORD PTR [rsp+0x20],rax
   1400143d8:	call   QWORD PTR [rip+0x21d2]        # 0x1400165b0
   1400143de:	mov    DWORD PTR [rip+0xa0f8],eax        # 0x14001e4dc
   1400143e4:	add    rsp,0x38
   1400143e8:	ret    
   1400143e9:	int3   
   1400143ea:	int3   
   1400143eb:	int3   
   1400143ec:	int3   
   1400143ed:	int3   
   1400143ee:	int3   
   1400143ef:	int3   
   1400143f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400143f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400143fa:	mov    QWORD PTR [rsp+0x18],rdi
   1400143ff:	push   r12
   140014401:	push   r14
   140014403:	push   r15
   140014405:	sub    rsp,0xb0
   14001440c:	xor    r15d,r15d
   14001440f:	mov    DWORD PTR [rsp+0x20],r15d
   140014414:	lea    rcx,[rsp+0x40]
   140014419:	call   QWORD PTR [rip+0x1e19]        # 0x140016238
   14001441f:	nop
   140014420:	mov    rax,QWORD PTR gs:0x30
   140014429:	mov    rbx,QWORD PTR [rax+0x8]
   14001442d:	mov    r14d,r15d
   140014430:	xor    eax,eax
   140014432:	lock cmpxchg QWORD PTR [rip+0xa91d],rbx        # 0x14001ed58
   14001443b:	je     0x140014459
   14001443d:	cmp    rax,rbx
   140014440:	jne    0x14001444c
   140014442:	mov    edi,0x1
   140014447:	mov    r14d,edi
   14001444a:	jmp    0x14001445e
   14001444c:	mov    ecx,0x3e8
   140014451:	call   QWORD PTR [rip+0x1e21]        # 0x140016278
   140014457:	jmp    0x140014430
   140014459:	mov    edi,0x1
   14001445e:	mov    eax,DWORD PTR [rip+0xa8fc]        # 0x14001ed60
   140014464:	cmp    eax,edi
   140014466:	jne    0x140014476
   140014468:	mov    esi,0x1f
   14001446d:	mov    ecx,esi
   14001446f:	call   0x140014c54
   140014474:	jmp    0x1400144e7
   140014476:	mov    eax,DWORD PTR [rip+0xa8e4]        # 0x14001ed60
   14001447c:	test   eax,eax
   14001447e:	jne    0x1400144dc
   140014480:	mov    DWORD PTR [rip+0xa8da],edi        # 0x14001ed60
   140014486:	lea    r12,[rip+0x22cb]        # 0x140016758
   14001448d:	lea    rbx,[rip+0x22ac]        # 0x140016740
   140014494:	mov    QWORD PTR [rsp+0x30],rbx
   140014499:	mov    eax,r15d
   14001449c:	mov    DWORD PTR [rsp+0x24],eax
   1400144a0:	cmp    rbx,r12
   1400144a3:	jae    0x1400144ce
   1400144a5:	test   eax,eax
   1400144a7:	jne    0x1400144d2
   1400144a9:	mov    rsi,QWORD PTR [rbx]
   1400144ac:	test   rsi,rsi
   1400144af:	je     0x1400144c3
   1400144b1:	mov    rcx,rsi
   1400144b4:	mov    rax,QWORD PTR [rip+0x223d]        # 0x1400166f8
   1400144bb:	call   rax
   1400144bd:	call   rsi
   1400144bf:	mov    DWORD PTR [rsp+0x24],eax
   1400144c3:	add    rbx,0x8
   1400144c7:	mov    QWORD PTR [rsp+0x30],rbx
   1400144cc:	jmp    0x1400144a0
   1400144ce:	test   eax,eax
   1400144d0:	je     0x1400144e2
   1400144d2:	mov    eax,0xff
   1400144d7:	jmp    0x140014643
   1400144dc:	mov    DWORD PTR [rip+0x9ff2],edi        # 0x14001e4d4
   1400144e2:	mov    esi,0x1f
   1400144e7:	mov    eax,DWORD PTR [rip+0xa873]        # 0x14001ed60
   1400144ed:	cmp    eax,edi
   1400144ef:	jne    0x14001450e
   1400144f1:	lea    rdx,[rip+0x2240]        # 0x140016738
   1400144f8:	lea    rcx,[rip+0x2209]        # 0x140016708
   1400144ff:	call   0x140014e1a
   140014504:	mov    DWORD PTR [rip+0xa852],0x2        # 0x14001ed60
   14001450e:	test   r14d,r14d
   140014511:	jne    0x14001451d
   140014513:	mov    rax,r15
   140014516:	xchg   QWORD PTR [rip+0xa83b],rax        # 0x14001ed58
   14001451d:	cmp    QWORD PTR [rip+0xa854],r15        # 0x14001ed78
   140014524:	je     0x140014554
   140014526:	lea    rcx,[rip+0xa84b]        # 0x14001ed78
   14001452d:	call   0x140014cb0
   140014532:	test   eax,eax
   140014534:	je     0x140014554
   140014536:	mov    rbx,QWORD PTR [rip+0xa83b]        # 0x14001ed78
   14001453d:	mov    rcx,rbx
   140014540:	mov    rax,QWORD PTR [rip+0x21b1]        # 0x1400166f8
   140014547:	call   rax
   140014549:	xor    r8d,r8d
   14001454c:	lea    edx,[r8+0x2]
   140014550:	xor    ecx,ecx
   140014552:	call   rbx
   140014554:	mov    rax,QWORD PTR [rip+0x2095]        # 0x1400165f0
   14001455b:	mov    rdx,QWORD PTR [rax]
   14001455e:	test   rdx,rdx
   140014561:	jne    0x14001456d
   140014563:	mov    eax,0xff
   140014568:	jmp    0x140014643
   14001456d:	mov    QWORD PTR [rsp+0x28],rdx
   140014572:	mov    ecx,DWORD PTR [rsp+0x20]
   140014576:	cmp    WORD PTR [rdx],0x20
   14001457a:	ja     0x1400145f4
   14001457c:	cmp    WORD PTR [rdx],r15w
   140014580:	je     0x140014586
   140014582:	test   ecx,ecx
   140014584:	jne    0x1400145f4
   140014586:	movzx  eax,WORD PTR [rdx]
   140014589:	sub    ax,di
   14001458c:	cmp    ax,si
   14001458f:	ja     0x14001459c
   140014591:	add    rdx,0x2
   140014595:	mov    QWORD PTR [rsp+0x28],rdx
   14001459a:	jmp    0x140014586
   14001459c:	mov    ecx,DWORD PTR [rsp+0x7c]
   1400145a0:	movzx  eax,WORD PTR [rsp+0x80]
   1400145a8:	mov    r9d,0xa
   1400145ae:	and    cl,dil
   1400145b1:	cmovne r9d,eax
   1400145b5:	mov    r8,rdx
   1400145b8:	xor    edx,edx
   1400145ba:	lea    rcx,[rip+0xfffffffffffeba3f]        # 0x140000000
   1400145c1:	call   0x14000835c
   1400145c6:	mov    DWORD PTR [rip+0x9f04],eax        # 0x14001e4d0
   1400145cc:	cmp    DWORD PTR [rip+0x9f1d],r15d        # 0x14001e4f0
   1400145d3:	jne    0x1400145dd
   1400145d5:	mov    ecx,eax
   1400145d7:	call   QWORD PTR [rip+0x1fe3]        # 0x1400165c0
   1400145dd:	cmp    DWORD PTR [rip+0x9ef0],r15d        # 0x14001e4d4
   1400145e4:	jne    0x1400145f2
   1400145e6:	call   QWORD PTR [rip+0x1fe4]        # 0x1400165d0
   1400145ec:	mov    eax,DWORD PTR [rip+0x9ede]        # 0x14001e4d0
   1400145f2:	jmp    0x140014643
   1400145f4:	cmp    WORD PTR [rdx],0x22
   1400145f8:	jne    0x140014608
   1400145fa:	mov    eax,r15d
   1400145fd:	test   ecx,ecx
   1400145ff:	sete   al
   140014602:	mov    ecx,eax
   140014604:	mov    DWORD PTR [rsp+0x20],eax
   140014608:	add    rdx,0x2
   14001460c:	mov    QWORD PTR [rsp+0x28],rdx
   140014611:	jmp    0x140014576
   140014616:	mov    DWORD PTR [rip+0x9eb4],eax        # 0x14001e4d0
   14001461c:	cmp    DWORD PTR [rip+0x9ecd],0x0        # 0x14001e4f0
   140014623:	jne    0x14001462e
   140014625:	mov    ecx,eax
   140014627:	call   QWORD PTR [rip+0x1f9b]        # 0x1400165c8
   14001462d:	int3   
   14001462e:	cmp    DWORD PTR [rip+0x9e9f],0x0        # 0x14001e4d4
   140014635:	jne    0x140014643
   140014637:	call   QWORD PTR [rip+0x1f93]        # 0x1400165d0
   14001463d:	mov    eax,DWORD PTR [rip+0x9e8d]        # 0x14001e4d0
   140014643:	lea    r11,[rsp+0xb0]
   14001464b:	mov    rbx,QWORD PTR [r11+0x20]
   14001464f:	mov    rsi,QWORD PTR [r11+0x28]
   140014653:	mov    rdi,QWORD PTR [r11+0x30]
   140014657:	mov    rsp,r11
   14001465a:	pop    r15
   14001465c:	pop    r14
   14001465e:	pop    r12
   140014660:	ret    
   140014661:	int3   
   140014662:	int3   
   140014663:	int3   
   140014664:	int3   
   140014665:	int3   
   140014666:	int3   
   140014667:	int3   
   140014668:	int3   
   140014669:	int3   
   14001466a:	int3   
   14001466b:	int3   
   14001466c:	int3   
   14001466d:	int3   
   14001466e:	int3   
   14001466f:	int3   
   140014670:	sub    rsp,0x28
   140014674:	call   0x140014d44
   140014679:	add    rsp,0x28
   14001467d:	jmp    0x1400143f0
   140014682:	int3   
   140014683:	int3   
   140014684:	int3   
   140014685:	int3   
   140014686:	int3   
   140014687:	int3   
   140014688:	int3   
   140014689:	int3   
   14001468a:	int3   
   14001468b:	int3   
   14001468c:	int3   
   14001468d:	int3   
   14001468e:	int3   
   14001468f:	int3   
   140014690:	int3   
   140014691:	int3   
   140014692:	int3   
   140014693:	int3   
   140014694:	int3   
   140014695:	int3   
   140014696:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400146a0:	cmp    rcx,QWORD PTR [rip+0x9969]        # 0x14001e010
   1400146a7:	jne    0x1400146b9
   1400146a9:	rol    rcx,0x10
   1400146ad:	test   cx,0xffff
   1400146b2:	jne    0x1400146b5
   1400146b4:	ret    
   1400146b5:	ror    rcx,0x10
   1400146b9:	jmp    0x140014730
   1400146be:	int3   
   1400146bf:	int3   
   1400146c0:	int3   
   1400146c1:	int3   
   1400146c2:	int3   
   1400146c3:	int3   
   1400146c4:	int3   
   1400146c5:	int3   
   1400146c6:	int3   
   1400146c7:	int3   
   1400146c8:	int3   
   1400146c9:	int3   
   1400146ca:	int3   
   1400146cb:	int3   
   1400146cc:	int3   
   1400146cd:	int3   
   1400146ce:	int3   
   1400146cf:	int3   
   1400146d0:	jmp    QWORD PTR [rip+0x1e92]        # 0x140016568
   1400146d6:	int3   
   1400146d7:	int3   
   1400146d8:	int3   
   1400146d9:	int3   
   1400146da:	int3   
   1400146db:	int3   
   1400146dc:	jmp    QWORD PTR [rip+0x1e8e]        # 0x140016570
   1400146e2:	int3   
   1400146e3:	int3   
   1400146e4:	int3   
   1400146e5:	int3   
   1400146e6:	int3   
   1400146e7:	int3   
   1400146e8:	rex push rbx
   1400146ea:	sub    rsp,0x20
   1400146ee:	mov    rbx,rcx
   1400146f1:	xor    ecx,ecx
   1400146f3:	call   QWORD PTR [rip+0x1b2f]        # 0x140016228
   1400146f9:	mov    rcx,rbx
   1400146fc:	call   QWORD PTR [rip+0x1b2e]        # 0x140016230
   140014702:	call   QWORD PTR [rip+0x1b18]        # 0x140016220
   140014708:	mov    rcx,rax
   14001470b:	mov    edx,0xc0000409
   140014710:	add    rsp,0x20
   140014714:	pop    rbx
   140014715:	rex.W jmp QWORD PTR [rip+0x1afc]        # 0x140016218
   14001471c:	int3   
   14001471d:	int3   
   14001471e:	int3   
   14001471f:	int3   
   140014720:	int3   
   140014721:	int3   
   140014722:	int3   
   140014723:	int3   
   140014724:	int3   
   140014725:	int3   
   140014726:	int3   
   140014727:	int3   
   140014728:	int3   
   140014729:	int3   
   14001472a:	int3   
   14001472b:	int3   
   14001472c:	int3   
   14001472d:	int3   
   14001472e:	int3   
   14001472f:	int3   
   140014730:	mov    QWORD PTR [rsp+0x8],rcx
   140014735:	sub    rsp,0x88
   14001473c:	lea    rcx,[rip+0x9e5d]        # 0x14001e5a0
   140014743:	call   QWORD PTR [rip+0x1f3f]        # 0x140016688
   140014749:	mov    rax,QWORD PTR [rip+0x9f48]        # 0x14001e698
   140014750:	mov    QWORD PTR [rsp+0x48],rax
   140014755:	xor    r8d,r8d
   140014758:	lea    rdx,[rsp+0x50]
   14001475d:	mov    rcx,QWORD PTR [rsp+0x48]
   140014762:	call   QWORD PTR [rip+0x1f28]        # 0x140016690
   140014768:	mov    QWORD PTR [rsp+0x40],rax
   14001476d:	cmp    QWORD PTR [rsp+0x40],0x0
   140014773:	je     0x1400147b7
   140014775:	mov    QWORD PTR [rsp+0x38],0x0
   14001477e:	lea    rax,[rsp+0x58]
   140014783:	mov    QWORD PTR [rsp+0x30],rax
   140014788:	lea    rax,[rsp+0x60]
   14001478d:	mov    QWORD PTR [rsp+0x28],rax
   140014792:	lea    rax,[rip+0x9e07]        # 0x14001e5a0
   140014799:	mov    QWORD PTR [rsp+0x20],rax
   14001479e:	mov    r9,QWORD PTR [rsp+0x40]
   1400147a3:	mov    r8,QWORD PTR [rsp+0x48]
   1400147a8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400147ad:	xor    ecx,ecx
   1400147af:	call   QWORD PTR [rip+0x1ee3]        # 0x140016698
   1400147b5:	jmp    0x1400147da
   1400147b7:	mov    rax,QWORD PTR [rip+0x9e7a]        # 0x14001e638
   1400147be:	mov    rax,QWORD PTR [rax]
   1400147c1:	mov    QWORD PTR [rip+0x9ed0],rax        # 0x14001e698
   1400147c8:	mov    rax,QWORD PTR [rip+0x9e69]        # 0x14001e638
   1400147cf:	add    rax,0x8
   1400147d3:	mov    QWORD PTR [rip+0x9e5e],rax        # 0x14001e638
   1400147da:	mov    rax,QWORD PTR [rip+0x9eb7]        # 0x14001e698
   1400147e1:	mov    QWORD PTR [rip+0x9d28],rax        # 0x14001e510
   1400147e8:	mov    rax,QWORD PTR [rsp+0x90]
   1400147f0:	mov    QWORD PTR [rip+0x9e29],rax        # 0x14001e620
   1400147f7:	mov    DWORD PTR [rip+0x9cff],0xc0000409        # 0x14001e500
   140014801:	mov    DWORD PTR [rip+0x9cf9],0x1        # 0x14001e504
   14001480b:	mov    DWORD PTR [rip+0x9d03],0x3        # 0x14001e518
   140014815:	mov    eax,0x8
   14001481a:	imul   rax,rax,0x0
   14001481e:	lea    rcx,[rip+0x9cfb]        # 0x14001e520
   140014825:	mov    QWORD PTR [rcx+rax*1],0x2
   14001482d:	mov    eax,0x8
   140014832:	imul   rax,rax,0x1
   140014836:	lea    rcx,[rip+0x9ce3]        # 0x14001e520
   14001483d:	mov    rdx,QWORD PTR [rip+0x97cc]        # 0x14001e010
   140014844:	mov    QWORD PTR [rcx+rax*1],rdx
   140014848:	mov    eax,0x8
   14001484d:	imul   rax,rax,0x2
   140014851:	lea    rcx,[rip+0x9cc8]        # 0x14001e520
   140014858:	mov    rdx,QWORD PTR [rip+0x97b9]        # 0x14001e018
   14001485f:	mov    QWORD PTR [rcx+rax*1],rdx
   140014863:	mov    eax,0x8
   140014868:	imul   rax,rax,0x0
   14001486c:	mov    rcx,QWORD PTR [rip+0x979d]        # 0x14001e010
   140014873:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140014878:	mov    eax,0x8
   14001487d:	imul   rax,rax,0x1
   140014881:	mov    rcx,QWORD PTR [rip+0x9790]        # 0x14001e018
   140014888:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14001488d:	lea    rcx,[rip+0x202c]        # 0x1400168c0
   140014894:	call   0x1400146e8
   140014899:	add    rsp,0x88
   1400148a0:	ret    
   1400148a1:	int3   
   1400148a2:	int3   
   1400148a3:	int3   
   1400148a4:	int3   
   1400148a5:	int3   
   1400148a6:	int3   
   1400148a7:	int3   
   1400148a8:	sub    rsp,0x78
   1400148ac:	lea    rcx,[rip+0x9ced]        # 0x14001e5a0
   1400148b3:	call   QWORD PTR [rip+0x1dcf]        # 0x140016688
   1400148b9:	mov    rax,QWORD PTR [rip+0x9dd8]        # 0x14001e698
   1400148c0:	mov    QWORD PTR [rsp+0x48],rax
   1400148c5:	xor    r8d,r8d
   1400148c8:	lea    rdx,[rsp+0x50]
   1400148cd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400148d2:	call   QWORD PTR [rip+0x1db8]        # 0x140016690
   1400148d8:	mov    QWORD PTR [rsp+0x40],rax
   1400148dd:	cmp    QWORD PTR [rsp+0x40],0x0
   1400148e3:	je     0x140014927
   1400148e5:	mov    QWORD PTR [rsp+0x38],0x0
   1400148ee:	lea    rax,[rsp+0x58]
   1400148f3:	mov    QWORD PTR [rsp+0x30],rax
   1400148f8:	lea    rax,[rsp+0x60]
   1400148fd:	mov    QWORD PTR [rsp+0x28],rax
   140014902:	lea    rax,[rip+0x9c97]        # 0x14001e5a0
   140014909:	mov    QWORD PTR [rsp+0x20],rax
   14001490e:	mov    r9,QWORD PTR [rsp+0x40]
   140014913:	mov    r8,QWORD PTR [rsp+0x48]
   140014918:	mov    rdx,QWORD PTR [rsp+0x50]
   14001491d:	xor    ecx,ecx
   14001491f:	call   QWORD PTR [rip+0x1d73]        # 0x140016698
   140014925:	jmp    0x14001494a
   140014927:	mov    rax,QWORD PTR [rip+0x9d0a]        # 0x14001e638
   14001492e:	mov    rax,QWORD PTR [rax]
   140014931:	mov    QWORD PTR [rip+0x9d60],rax        # 0x14001e698
   140014938:	mov    rax,QWORD PTR [rip+0x9cf9]        # 0x14001e638
   14001493f:	add    rax,0x8
   140014943:	mov    QWORD PTR [rip+0x9cee],rax        # 0x14001e638
   14001494a:	mov    rax,QWORD PTR [rip+0x9d47]        # 0x14001e698
   140014951:	mov    QWORD PTR [rip+0x9bb8],rax        # 0x14001e510
   140014958:	mov    DWORD PTR [rip+0x9b9e],0xc0000409        # 0x14001e500
   140014962:	mov    DWORD PTR [rip+0x9b98],0x1        # 0x14001e504
   14001496c:	mov    DWORD PTR [rip+0x9ba2],0x1        # 0x14001e518
   140014976:	mov    eax,0x8
   14001497b:	imul   rax,rax,0x0
   14001497f:	lea    rcx,[rip+0x9b9a]        # 0x14001e520
   140014986:	mov    QWORD PTR [rcx+rax*1],0x8
   14001498e:	lea    rcx,[rip+0x1f2b]        # 0x1400168c0
   140014995:	call   0x1400146e8
   14001499a:	add    rsp,0x78
   14001499e:	ret    
   14001499f:	int3   
   1400149a0:	int3   
   1400149a1:	int3   
   1400149a2:	int3   
   1400149a3:	int3   
   1400149a4:	int3   
   1400149a5:	int3   
   1400149a6:	jmp    QWORD PTR [rip+0x1bcc]        # 0x140016578
   1400149ac:	int3   
   1400149ad:	int3   
   1400149ae:	int3   
   1400149af:	int3   
   1400149b0:	int3   
   1400149b1:	int3   
   1400149b2:	int3   
   1400149b3:	int3   
   1400149b4:	int3   
   1400149b5:	int3   
   1400149b6:	int3   
   1400149b7:	int3   
   1400149b8:	int3   
   1400149b9:	int3   
   1400149ba:	int3   
   1400149bb:	int3   
   1400149bc:	int3   
   1400149bd:	int3   
   1400149be:	int3   
   1400149bf:	int3   
   1400149c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400149c5:	push   rdi
   1400149c6:	sub    rsp,0x20
   1400149ca:	mov    ebx,edx
   1400149cc:	mov    rdi,rcx
   1400149cf:	call   QWORD PTR [rip+0x1c3b]        # 0x140016610
   1400149d5:	test   bl,0x1
   1400149d8:	je     0x1400149e2
   1400149da:	mov    rcx,rdi
   1400149dd:	call   0x140014254
   1400149e2:	mov    rax,rdi
   1400149e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400149ea:	add    rsp,0x20
   1400149ee:	pop    rdi
   1400149ef:	ret    
   1400149f0:	int3   
   1400149f1:	int3   
   1400149f2:	int3   
   1400149f3:	int3   
   1400149f4:	int3   
   1400149f5:	int3   
   1400149f6:	int3   
   1400149f7:	int3   
   1400149f8:	int3   
   1400149f9:	int3   
   1400149fa:	int3   
   1400149fb:	int3   
   1400149fc:	int3   
   1400149fd:	int3   
   1400149fe:	int3   
   1400149ff:	int3   
   140014a00:	sub    rsp,0x38
   140014a04:	mov    r9,rdx
   140014a07:	test   rdx,rdx
   140014a0a:	je     0x140014a41
   140014a0c:	xor    edx,edx
   140014a0e:	lea    rax,[rdx-0x20]
   140014a12:	div    r9
   140014a15:	cmp    rax,r8
   140014a18:	jae    0x140014a41
   140014a1a:	call   0x140014e4a
   140014a1f:	and    QWORD PTR [rsp+0x20],0x0
   140014a25:	xor    r9d,r9d
   140014a28:	xor    r8d,r8d
   140014a2b:	xor    edx,edx
   140014a2d:	xor    ecx,ecx
   140014a2f:	mov    DWORD PTR [rax],0xc
   140014a35:	call   0x140014e58
   140014a3a:	xor    eax,eax
   140014a3c:	add    rsp,0x38
   140014a40:	ret    
   140014a41:	imul   r9,r8
   140014a45:	mov    rdx,r9
   140014a48:	add    rsp,0x38
   140014a4c:	jmp    0x140014f2e
   140014a51:	int3   
   140014a52:	int3   
   140014a53:	int3   
   140014a54:	int3   
   140014a55:	int3   
   140014a56:	int3   
   140014a57:	int3   
   140014a58:	mov    QWORD PTR [rsp+0x8],rbx
   140014a5d:	push   rdi
   140014a5e:	sub    rsp,0x20
   140014a62:	mov    rdi,rcx
   140014a65:	mov    rax,QWORD PTR [rip+0xa304]        # 0x14001ed70
   140014a6c:	mov    QWORD PTR [rsp+0x38],rax
   140014a71:	cmp    rax,0xffffffffffffffff
   140014a75:	jne    0x140014a8e
   140014a77:	mov    rbx,QWORD PTR [rip+0x1bc2]        # 0x140016640
   140014a7e:	mov    rcx,rbx
   140014a81:	call   QWORD PTR [rip+0x1c71]        # 0x1400166f8
   140014a87:	mov    rcx,rdi
   140014a8a:	call   rbx
   140014a8c:	jmp    0x140014aeb
   140014a8e:	mov    ecx,0x8
   140014a93:	call   0x140014f3a
   140014a98:	nop
   140014a99:	mov    rax,QWORD PTR [rip+0xa2d0]        # 0x14001ed70
   140014aa0:	mov    QWORD PTR [rsp+0x38],rax
   140014aa5:	mov    rax,QWORD PTR [rip+0xa2bc]        # 0x14001ed68
   140014aac:	mov    QWORD PTR [rsp+0x40],rax
   140014ab1:	lea    r8,[rsp+0x40]
   140014ab6:	lea    rdx,[rsp+0x38]
   140014abb:	mov    rcx,rdi
   140014abe:	call   0x140014f52
   140014ac3:	mov    rbx,rax
   140014ac6:	mov    rdx,QWORD PTR [rsp+0x38]
   140014acb:	mov    QWORD PTR [rip+0xa29e],rdx        # 0x14001ed70
   140014ad2:	mov    rdx,QWORD PTR [rsp+0x40]
   140014ad7:	mov    QWORD PTR [rip+0xa28a],rdx        # 0x14001ed68
   140014ade:	mov    ecx,0x8
   140014ae3:	call   0x140014f46
   140014ae8:	mov    rax,rbx
   140014aeb:	mov    rbx,QWORD PTR [rsp+0x30]
   140014af0:	add    rsp,0x20
   140014af4:	pop    rdi
   140014af5:	ret    
   140014af6:	int3   
   140014af7:	int3   
   140014af8:	int3   
   140014af9:	int3   
   140014afa:	int3   
   140014afb:	int3   
   140014afc:	sub    rsp,0x28
   140014b00:	call   0x140014a58
   140014b05:	neg    rax
   140014b08:	sbb    eax,eax
   140014b0a:	neg    eax
   140014b0c:	dec    eax
   140014b0e:	add    rsp,0x28
   140014b12:	ret    
   140014b13:	int3   
   140014b14:	int3   
   140014b15:	int3   
   140014b16:	int3   
   140014b17:	int3   
   140014b18:	int3   
   140014b19:	int3   
   140014b1a:	jmp    QWORD PTR [rip+0x1a70]        # 0x140016590
   140014b20:	int3   
   140014b21:	int3   
   140014b22:	int3   
   140014b23:	int3   
   140014b24:	int3   
   140014b25:	int3   
   140014b26:	jmp    QWORD PTR [rip+0x1a6c]        # 0x140016598
   140014b2c:	int3   
   140014b2d:	int3   
   140014b2e:	int3   
   140014b2f:	int3   
   140014b30:	int3   
   140014b31:	int3   
   140014b32:	int3   
   140014b33:	int3   
   140014b34:	int3   
   140014b35:	int3   
   140014b36:	int3   
   140014b37:	int3   
   140014b38:	int3   
   140014b39:	int3   
   140014b3a:	int3   
   140014b3b:	int3   
   140014b3c:	int3   
   140014b3d:	int3   
   140014b3e:	int3   
   140014b3f:	int3   
   140014b40:	sub    rsp,0x28
   140014b44:	mov    rax,QWORD PTR [rcx]
   140014b47:	cmp    DWORD PTR [rax],0xe06d7363
   140014b4d:	jne    0x140014b72
   140014b4f:	cmp    DWORD PTR [rax+0x18],0x4
   140014b53:	jne    0x140014b72
   140014b55:	mov    ecx,DWORD PTR [rax+0x20]
   140014b58:	lea    eax,[rcx-0x19930520]
   140014b5e:	cmp    eax,0x2
   140014b61:	jbe    0x140014b6b
   140014b63:	cmp    ecx,0x1994000
   140014b69:	jne    0x140014b72
   140014b6b:	call   QWORD PTR [rip+0x1a97]        # 0x140016608
   140014b71:	int3   
   140014b72:	xor    eax,eax
   140014b74:	add    rsp,0x28
   140014b78:	ret    
   140014b79:	int3   
   140014b7a:	int3   
   140014b7b:	int3   
   140014b7c:	int3   
   140014b7d:	int3   
   140014b7e:	int3   
   140014b7f:	int3   
   140014b80:	sub    rsp,0x28
   140014b84:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140014b40
   140014b8b:	call   QWORD PTR [rip+0x1697]        # 0x140016228
   140014b91:	xor    eax,eax
   140014b93:	add    rsp,0x28
   140014b97:	ret    
   140014b98:	int3   
   140014b99:	int3   
   140014b9a:	int3   
   140014b9b:	int3   
   140014b9c:	int3   
   140014b9d:	int3   
   140014b9e:	jmp    QWORD PTR [rip+0x19fc]        # 0x1400165a0
   140014ba4:	int3   
   140014ba5:	int3   
   140014ba6:	int3   
   140014ba7:	int3   
   140014ba8:	int3   
   140014ba9:	int3   
   140014baa:	int3   
   140014bab:	int3   
   140014bac:	sub    rsp,0x18
   140014bb0:	xor    edx,edx
   140014bb2:	lea    rax,[rcx-0x1]
   140014bb6:	cmp    rax,0xfffffffffffffffd
   140014bba:	ja     0x140014bf8
   140014bbc:	mov    eax,0x5a4d
   140014bc1:	cmp    WORD PTR [rcx],ax
   140014bc4:	jne    0x140014bf0
   140014bc6:	cmp    DWORD PTR [rcx+0x3c],edx
   140014bc9:	jl     0x140014bf0
   140014bcb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140014bd2:	jae    0x140014bf0
   140014bd4:	movsxd rax,DWORD PTR [rcx+0x3c]
   140014bd8:	add    rax,rcx
   140014bdb:	mov    QWORD PTR [rsp],rax
   140014bdf:	cmp    DWORD PTR [rax],0x4550
   140014be5:	cmovne rax,rdx
   140014be9:	mov    rdx,rax
   140014bec:	mov    QWORD PTR [rsp],rax
   140014bf0:	jmp    0x140014bf8
   140014bf2:	xor    edx,edx
   140014bf4:	mov    QWORD PTR [rsp],rdx
   140014bf8:	mov    rax,rdx
   140014bfb:	add    rsp,0x18
   140014bff:	ret    
   140014c00:	int3   
   140014c01:	int3   
   140014c02:	int3   
   140014c03:	int3   
   140014c04:	int3   
   140014c05:	int3   
   140014c06:	int3   
   140014c07:	int3   
   140014c08:	rex push rbx
   140014c0a:	sub    rsp,0x20
   140014c0e:	mov    ebx,ecx
   140014c10:	xor    ecx,ecx
   140014c12:	call   QWORD PTR [rip+0x1638]        # 0x140016250
   140014c18:	test   rax,rax
   140014c1b:	je     0x140014c45
   140014c1d:	mov    rcx,rax
   140014c20:	call   0x140014bac
   140014c25:	test   rax,rax
   140014c28:	je     0x140014c45
   140014c2a:	mov    ecx,0x2
   140014c2f:	cmp    WORD PTR [rax+0x5c],cx
   140014c33:	jne    0x140014c39
   140014c35:	mov    eax,ecx
   140014c37:	jmp    0x140014c47
   140014c39:	cmp    WORD PTR [rax+0x5c],0x3
   140014c3e:	mov    eax,0x1
   140014c43:	je     0x140014c47
   140014c45:	mov    eax,ebx
   140014c47:	add    rsp,0x20
   140014c4b:	pop    rbx
   140014c4c:	ret    
   140014c4d:	int3   
   140014c4e:	int3   
   140014c4f:	int3   
   140014c50:	int3   
   140014c51:	int3   
   140014c52:	int3   
   140014c53:	int3   
   140014c54:	jmp    QWORD PTR [rip+0x194e]        # 0x1400165a8
   140014c5a:	int3   
   140014c5b:	int3   
   140014c5c:	int3   
   140014c5d:	int3   
   140014c5e:	int3   
   140014c5f:	int3   
   140014c60:	movsxd r8,DWORD PTR [rcx+0x3c]
   140014c64:	xor    r9d,r9d
   140014c67:	add    r8,rcx
   140014c6a:	mov    r10,rdx
   140014c6d:	movzx  eax,WORD PTR [r8+0x14]
   140014c72:	movzx  r11d,WORD PTR [r8+0x6]
   140014c77:	add    rax,0x18
   140014c7b:	add    rax,r8
   140014c7e:	test   r11d,r11d
   140014c81:	je     0x140014ca1
   140014c83:	mov    edx,DWORD PTR [rax+0xc]
   140014c86:	cmp    r10,rdx
   140014c89:	jb     0x140014c95
   140014c8b:	mov    ecx,DWORD PTR [rax+0x8]
   140014c8e:	add    ecx,edx
   140014c90:	cmp    r10,rcx
   140014c93:	jb     0x140014ca3
   140014c95:	inc    r9d
   140014c98:	add    rax,0x28
   140014c9c:	cmp    r9d,r11d
   140014c9f:	jb     0x140014c83
   140014ca1:	xor    eax,eax
   140014ca3:	ret    
   140014ca4:	int3   
   140014ca5:	int3   
   140014ca6:	int3   
   140014ca7:	int3   
   140014ca8:	int3   
   140014ca9:	int3   
   140014caa:	int3   
   140014cab:	int3   
   140014cac:	int3   
   140014cad:	int3   
   140014cae:	int3   
   140014caf:	int3   
   140014cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140014cb5:	push   rdi
   140014cb6:	sub    rsp,0x20
   140014cba:	mov    rbx,rcx
   140014cbd:	lea    rdi,[rip+0xfffffffffffeb33c]        # 0x140000000
   140014cc4:	mov    rcx,rdi
   140014cc7:	call   0x140014d10
   140014ccc:	test   eax,eax
   140014cce:	je     0x140014cf2
   140014cd0:	sub    rbx,rdi
   140014cd3:	mov    rdx,rbx
   140014cd6:	mov    rcx,rdi
   140014cd9:	call   0x140014c60
   140014cde:	test   rax,rax
   140014ce1:	je     0x140014cf2
   140014ce3:	mov    eax,DWORD PTR [rax+0x24]
   140014ce6:	shr    eax,0x1f
   140014ce9:	not    eax
   140014ceb:	and    eax,0x1
   140014cee:	jmp    0x140014cf2
   140014cf0:	xor    eax,eax
   140014cf2:	mov    rbx,QWORD PTR [rsp+0x30]
   140014cf7:	add    rsp,0x20
   140014cfb:	pop    rdi
   140014cfc:	ret    
   140014cfd:	int3   
   140014cfe:	int3   
   140014cff:	int3   
   140014d00:	int3   
   140014d01:	int3   
   140014d02:	int3   
   140014d03:	int3   
   140014d04:	int3   
   140014d05:	int3   
   140014d06:	int3   
   140014d07:	int3   
   140014d08:	int3   
   140014d09:	int3   
   140014d0a:	int3   
   140014d0b:	int3   
   140014d0c:	int3   
   140014d0d:	int3   
   140014d0e:	int3   
   140014d0f:	int3   
   140014d10:	mov    rax,rcx
   140014d13:	mov    ecx,0x5a4d
   140014d18:	cmp    WORD PTR [rax],cx
   140014d1b:	je     0x140014d20
   140014d1d:	xor    eax,eax
   140014d1f:	ret    
   140014d20:	movsxd rcx,DWORD PTR [rax+0x3c]
   140014d24:	add    rcx,rax
   140014d27:	xor    eax,eax
   140014d29:	cmp    DWORD PTR [rcx],0x4550
   140014d2f:	jne    0x140014d3d
   140014d31:	mov    edx,0x20b
   140014d36:	cmp    WORD PTR [rcx+0x18],dx
   140014d3a:	sete   al
   140014d3d:	ret    
   140014d3e:	int3   
   140014d3f:	int3   
   140014d40:	int3   
   140014d41:	int3   
   140014d42:	int3   
   140014d43:	int3   
   140014d44:	mov    QWORD PTR [rsp+0x20],rbx
   140014d49:	push   rbp
   140014d4a:	mov    rbp,rsp
   140014d4d:	sub    rsp,0x20
   140014d51:	and    QWORD PTR [rbp+0x18],0x0
   140014d56:	movabs rbx,0x2b992ddfa232
   140014d60:	mov    rax,QWORD PTR [rip+0x92a9]        # 0x14001e010
   140014d67:	cmp    rax,rbx
   140014d6a:	jne    0x140014dff
   140014d70:	lea    rcx,[rbp+0x18]
   140014d74:	call   QWORD PTR [rip+0x147e]        # 0x1400161f8
   140014d7a:	mov    rax,QWORD PTR [rbp+0x18]
   140014d7e:	mov    QWORD PTR [rbp+0x10],rax
   140014d82:	call   QWORD PTR [rip+0x1480]        # 0x140016208
   140014d88:	mov    eax,eax
   140014d8a:	xor    QWORD PTR [rbp+0x10],rax
   140014d8e:	call   QWORD PTR [rip+0x146c]        # 0x140016200
   140014d94:	mov    eax,eax
   140014d96:	xor    QWORD PTR [rbp+0x10],rax
   140014d9a:	call   QWORD PTR [rip+0x1450]        # 0x1400161f0
   140014da0:	mov    eax,eax
   140014da2:	shl    rax,0x18
   140014da6:	xor    QWORD PTR [rbp+0x10],rax
   140014daa:	call   QWORD PTR [rip+0x1440]        # 0x1400161f0
   140014db0:	mov    eax,eax
   140014db2:	lea    rcx,[rbp+0x10]
   140014db6:	xor    rax,QWORD PTR [rbp+0x10]
   140014dba:	xor    rax,rcx
   140014dbd:	lea    rcx,[rbp+0x20]
   140014dc1:	mov    QWORD PTR [rbp+0x10],rax
   140014dc5:	call   QWORD PTR [rip+0x1445]        # 0x140016210
   140014dcb:	mov    eax,DWORD PTR [rbp+0x20]
   140014dce:	movabs rcx,0xffffffffffff
   140014dd8:	shl    rax,0x20
   140014ddc:	xor    rax,QWORD PTR [rbp+0x20]
   140014de0:	xor    rax,QWORD PTR [rbp+0x10]
   140014de4:	and    rax,rcx
   140014de7:	movabs rcx,0x2b992ddfa233
   140014df1:	cmp    rax,rbx
   140014df4:	cmove  rax,rcx
   140014df8:	mov    QWORD PTR [rip+0x9211],rax        # 0x14001e010
   140014dff:	mov    rbx,QWORD PTR [rsp+0x48]
   140014e04:	not    rax
   140014e07:	mov    QWORD PTR [rip+0x920a],rax        # 0x14001e018
   140014e0e:	add    rsp,0x20
   140014e12:	pop    rbp
   140014e13:	ret    
   140014e14:	int3   
   140014e15:	int3   
   140014e16:	int3   
   140014e17:	int3   
   140014e18:	int3   
   140014e19:	int3   
   140014e1a:	jmp    QWORD PTR [rip+0x17c0]        # 0x1400165e0
   140014e20:	int3   
   140014e21:	int3   
   140014e22:	int3   
   140014e23:	int3   
   140014e24:	int3   
   140014e25:	int3   
   140014e26:	jmp    QWORD PTR [rip+0x17bc]        # 0x1400165e8
   140014e2c:	int3   
   140014e2d:	int3   
   140014e2e:	int3   
   140014e2f:	int3   
   140014e30:	int3   
   140014e31:	int3   
   140014e32:	int3   
   140014e33:	int3   
   140014e34:	int3   
   140014e35:	int3   
   140014e36:	int3   
   140014e37:	int3   
   140014e38:	int3   
   140014e39:	int3   
   140014e3a:	int3   
   140014e3b:	int3   
   140014e3c:	int3   
   140014e3d:	int3   
   140014e3e:	int3   
   140014e3f:	int3   
   140014e40:	ret    0x0
   140014e43:	int3   
   140014e44:	int3   
   140014e45:	int3   
   140014e46:	int3   
   140014e47:	int3   
   140014e48:	int3   
   140014e49:	int3   
   140014e4a:	jmp    QWORD PTR [rip+0x17c8]        # 0x140016618
   140014e50:	int3   
   140014e51:	int3   
   140014e52:	int3   
   140014e53:	int3   
   140014e54:	int3   
   140014e55:	int3   
   140014e56:	int3   
   140014e57:	int3   
   140014e58:	jmp    0x140014e64
   140014e5d:	int3   
   140014e5e:	int3   
   140014e5f:	int3   
   140014e60:	int3   
   140014e61:	int3   
   140014e62:	int3   
   140014e63:	int3   
   140014e64:	rex push rbx
   140014e66:	sub    rsp,0x540
   140014e6d:	mov    rax,QWORD PTR [rip+0x919c]        # 0x14001e010
   140014e74:	xor    rax,rsp
   140014e77:	mov    QWORD PTR [rsp+0x530],rax
   140014e7f:	lea    rcx,[rsp+0x60]
   140014e84:	call   QWORD PTR [rip+0x17fe]        # 0x140016688
   140014e8a:	mov    rbx,QWORD PTR [rsp+0x158]
   140014e92:	lea    rdx,[rsp+0x40]
   140014e97:	mov    rcx,rbx
   140014e9a:	xor    r8d,r8d
   140014e9d:	call   QWORD PTR [rip+0x17ed]        # 0x140016690
   140014ea3:	test   rax,rax
   140014ea6:	je     0x140014ee1
   140014ea8:	and    QWORD PTR [rsp+0x38],0x0
   140014eae:	lea    rcx,[rsp+0x48]
   140014eb3:	mov    rdx,QWORD PTR [rsp+0x40]
   140014eb8:	mov    r9,rax
   140014ebb:	mov    QWORD PTR [rsp+0x30],rcx
   140014ec0:	mov    r8,rbx
   140014ec3:	lea    rcx,[rsp+0x50]
   140014ec8:	mov    QWORD PTR [rsp+0x28],rcx
   140014ecd:	lea    rcx,[rsp+0x60]
   140014ed2:	mov    QWORD PTR [rsp+0x20],rcx
   140014ed7:	xor    ecx,ecx
   140014ed9:	call   QWORD PTR [rip+0x17b9]        # 0x140016698
   140014edf:	jmp    0x140014f01
   140014ee1:	mov    rax,QWORD PTR [rsp+0x548]
   140014ee9:	mov    QWORD PTR [rsp+0x158],rax
   140014ef1:	lea    rax,[rsp+0x548]
   140014ef9:	mov    QWORD PTR [rsp+0xf8],rax
   140014f01:	lea    rcx,[rip+0x19d0]        # 0x1400168d8
   140014f08:	call   QWORD PTR [rip+0x12da]        # 0x1400161e8
   140014f0e:	mov    rcx,QWORD PTR [rsp+0x530]
   140014f16:	xor    rcx,rsp
   140014f19:	call   0x1400146a0
   140014f1e:	add    rsp,0x540
   140014f25:	pop    rbx
   140014f26:	ret    
   140014f27:	int3   
   140014f28:	int3   
   140014f29:	int3   
   140014f2a:	int3   
   140014f2b:	int3   
   140014f2c:	int3   
   140014f2d:	int3   
   140014f2e:	jmp    QWORD PTR [rip+0x16ec]        # 0x140016620
   140014f34:	int3   
   140014f35:	int3   
   140014f36:	int3   
   140014f37:	int3   
   140014f38:	int3   
   140014f39:	int3   
   140014f3a:	jmp    QWORD PTR [rip+0x16e8]        # 0x140016628
   140014f40:	int3   
   140014f41:	int3   
   140014f42:	int3   
   140014f43:	int3   
   140014f44:	int3   
   140014f45:	int3   
   140014f46:	jmp    QWORD PTR [rip+0x16e4]        # 0x140016630
   140014f4c:	int3   
   140014f4d:	int3   
   140014f4e:	int3   
   140014f4f:	int3   
   140014f50:	int3   
   140014f51:	int3   
   140014f52:	jmp    QWORD PTR [rip+0x16e0]        # 0x140016638
   140014f58:	int3   
   140014f59:	int3   
   140014f5a:	int3   
   140014f5b:	int3   
   140014f5c:	int3   
   140014f5d:	int3   
   140014f5e:	int3   
   140014f5f:	int3   
   140014f60:	int3   
   140014f61:	int3   
   140014f62:	int3   
   140014f63:	int3   
   140014f64:	int3   
   140014f65:	int3   
   140014f66:	int3   
   140014f67:	int3   
   140014f68:	sub    rsp,0x28
   140014f6c:	mov    r8,QWORD PTR [r9+0x38]
   140014f70:	mov    rcx,rdx
   140014f73:	mov    rdx,r9
   140014f76:	call   0x140014f8c
   140014f7b:	mov    eax,0x1
   140014f80:	add    rsp,0x28
   140014f84:	ret    
   140014f85:	int3   
   140014f86:	int3   
   140014f87:	int3   
   140014f88:	int3   
   140014f89:	int3   
   140014f8a:	int3   
   140014f8b:	int3   
   140014f8c:	rex push rbx
   140014f8e:	sub    rsp,0x20
   140014f92:	mov    r11d,DWORD PTR [r8]
   140014f95:	mov    rbx,rdx
   140014f98:	and    r11d,0xfffffff8
   140014f9c:	mov    r9,rcx
   140014f9f:	test   BYTE PTR [r8],0x4
   140014fa3:	mov    r10,rcx
   140014fa6:	je     0x140014fbb
   140014fa8:	mov    eax,DWORD PTR [r8+0x8]
   140014fac:	movsxd r10,DWORD PTR [r8+0x4]
   140014fb0:	neg    eax
   140014fb2:	add    r10,rcx
   140014fb5:	movsxd rcx,eax
   140014fb8:	and    r10,rcx
   140014fbb:	movsxd rax,r11d
   140014fbe:	mov    rdx,QWORD PTR [rax+r10*1]
   140014fc2:	mov    rax,QWORD PTR [rbx+0x10]
   140014fc6:	mov    ecx,DWORD PTR [rax+0x8]
   140014fc9:	add    rcx,QWORD PTR [rbx+0x8]
   140014fcd:	test   BYTE PTR [rcx+0x3],0xf
   140014fd1:	je     0x140014fdf
   140014fd3:	movzx  eax,BYTE PTR [rcx+0x3]
   140014fd7:	and    eax,0xfffffff0
   140014fda:	cdqe   
   140014fdc:	add    r9,rax
   140014fdf:	xor    r9,rdx
   140014fe2:	mov    rcx,r9
   140014fe5:	add    rsp,0x20
   140014fe9:	pop    rbx
   140014fea:	jmp    0x1400146a0
   140014fef:	int3   
   140014ff0:	int3   
   140014ff1:	int3   
   140014ff2:	int3   
   140014ff3:	int3   
   140014ff4:	int3   
   140014ff5:	int3   
   140014ff6:	int3   
   140014ff7:	int3   
   140014ff8:	sub    rsp,0x38
   140014ffc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015005:	call   0x14001426c
   14001500a:	nop
   14001500b:	jmp    0x140015012
   14001500d:	mov    rax,QWORD PTR [rsp+0x50]
   140015012:	add    rsp,0x38
   140015016:	ret    
   140015017:	int3   
   140015018:	int3   
   140015019:	int3   
   14001501a:	int3   
   14001501b:	int3   
   14001501c:	int3   
   14001501d:	int3   
   14001501e:	jmp    QWORD PTR [rip+0x163c]        # 0x140016660
   140015024:	int3   
   140015025:	int3   
   140015026:	int3   
   140015027:	int3   
   140015028:	int3   
   140015029:	int3   
   14001502a:	jmp    QWORD PTR [rip+0x1628]        # 0x140016658
   140015030:	int3   
   140015031:	int3   
   140015032:	int3   
   140015033:	int3   
   140015034:	int3   
   140015035:	int3   
   140015036:	int3   
   140015037:	int3   
   140015038:	mov    rax,rsp
   14001503b:	mov    QWORD PTR [rax+0x8],rbx
   14001503f:	mov    QWORD PTR [rax+0x10],rbp
   140015043:	mov    QWORD PTR [rax+0x18],rsi
   140015047:	mov    QWORD PTR [rax+0x20],rdi
   14001504b:	push   r14
   14001504d:	sub    rsp,0x20
   140015051:	mov    rbx,QWORD PTR [r9+0x38]
   140015055:	mov    rsi,rdx
   140015058:	mov    r14,r8
   14001505b:	mov    rbp,rcx
   14001505e:	mov    rdx,r9
   140015061:	mov    rcx,rsi
   140015064:	mov    rdi,r9
   140015067:	lea    r8,[rbx+0x4]
   14001506b:	call   0x140014f8c
   140015070:	mov    r11d,DWORD PTR [rbx+0x4]
   140015074:	mov    r8d,0x1
   14001507a:	mov    r10d,DWORD PTR [rbp+0x4]
   14001507e:	mov    eax,r11d
   140015081:	and    eax,r8d
   140015084:	and    r11d,0x2
   140015088:	and    r10b,0x66
   14001508c:	cmove  r11d,eax
   140015090:	test   r11d,r11d
   140015093:	je     0x1400150a9
   140015095:	mov    r9,rdi
   140015098:	mov    r8,r14
   14001509b:	mov    rdx,rsi
   14001509e:	mov    rcx,rbp
   1400150a1:	call   0x14001501e
   1400150a6:	mov    r8d,eax
   1400150a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400150ae:	mov    eax,r8d
   1400150b1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400150b6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400150bb:	mov    rdi,QWORD PTR [rsp+0x48]
   1400150c0:	add    rsp,0x20
   1400150c4:	pop    r14
   1400150c6:	ret    
   1400150c7:	int3   
   1400150c8:	int3   
   1400150c9:	int3   
   1400150ca:	int3   
   1400150cb:	int3   
   1400150cc:	int3   
   1400150cd:	int3   
   1400150ce:	int3   
   1400150cf:	int3   
   1400150d0:	int3   
   1400150d1:	int3   
   1400150d2:	int3   
   1400150d3:	int3   
   1400150d4:	int3   
   1400150d5:	int3   
   1400150d6:	jmp    QWORD PTR [rip+0x1574]        # 0x140016650
   1400150dc:	int3   
   1400150dd:	int3   
   1400150de:	int3   
   1400150df:	int3   
   1400150e0:	int3   
   1400150e1:	int3   
   1400150e2:	jmp    QWORD PTR [rip+0x1560]        # 0x140016648
   1400150e8:	int3   
   1400150e9:	int3   
   1400150ea:	int3   
   1400150eb:	int3   
   1400150ec:	int3   
   1400150ed:	int3   
   1400150ee:	jmp    QWORD PTR [rip+0x157c]        # 0x140016670
   1400150f4:	int3   
   1400150f5:	int3   
   1400150f6:	int3   
   1400150f7:	int3   
   1400150f8:	int3   
   1400150f9:	int3   
   1400150fa:	int3   
   1400150fb:	int3   
   1400150fc:	int3   
   1400150fd:	int3   
   1400150fe:	int3   
   1400150ff:	int3   
   140015100:	int3   
   140015101:	int3   
   140015102:	int3   
   140015103:	int3   
   140015104:	int3   
   140015105:	int3   
   140015106:	data16 nop WORD PTR [rax+rax*1+0x0]
   140015110:	jmp    rax
   140015112:	int3   
   140015113:	int3   
   140015114:	int3   
   140015115:	int3   
   140015116:	int3   
   140015117:	int3   
   140015118:	int3   
   140015119:	int3   
   14001511a:	int3   
   14001511b:	int3   
   14001511c:	int3   
   14001511d:	int3   
   14001511e:	int3   
   14001511f:	int3   
   140015120:	int3   
   140015121:	int3   
   140015122:	int3   
   140015123:	int3   
   140015124:	int3   
   140015125:	int3   
   140015126:	data16 nop WORD PTR [rax+rax*1+0x0]
   140015130:	sub    rsp,0x10
   140015134:	mov    QWORD PTR [rsp],r10
   140015138:	mov    QWORD PTR [rsp+0x8],r11
   14001513d:	xor    r11,r11
   140015140:	lea    r10,[rsp+0x18]
   140015145:	sub    r10,rax
   140015148:	cmovb  r10,r11
   14001514c:	mov    r11,QWORD PTR gs:0x10
   140015155:	cmp    r10,r11
   140015158:	jae    0x14001516f
   14001515a:	and    r10w,0xf000
   140015160:	lea    r11,[r11-0x1000]
   140015167:	test   BYTE PTR [r11],r11b
   14001516a:	cmp    r10,r11
   14001516d:	jne    0x140015160
   14001516f:	mov    r10,QWORD PTR [rsp]
   140015173:	mov    r11,QWORD PTR [rsp+0x8]
   140015178:	add    rsp,0x10
   14001517c:	ret    
   14001517d:	int3   
   14001517e:	int3   
   14001517f:	int3   
   140015180:	int3   
   140015181:	int3   
   140015182:	int3   
   140015183:	int3   
   140015184:	int3   
   140015185:	int3   
   140015186:	lea    rcx,[rdx+0x28]
   14001518d:	jmp    0x14000bf98
   140015192:	lea    rcx,[rdx+0x40]
   140015199:	jmp    0x14000e288
   14001519e:	int3   
   14001519f:	int3   
   1400151a0:	int3   
   1400151a1:	int3   
   1400151a2:	int3   
   1400151a3:	int3   
   1400151a4:	lea    rcx,[rdx+0x60]
   1400151ab:	jmp    0x14000bf98
   1400151b0:	lea    rcx,[rdx+0x80]
   1400151b7:	jmp    0x140003074
   1400151bc:	lea    rcx,[rdx+0x1e0]
   1400151c3:	jmp    0x1400018ec
   1400151c8:	lea    rcx,[rdx+0xf0]
   1400151cf:	jmp    0x140006344
   1400151d4:	lea    rcx,[rdx+0xf0]
   1400151db:	jmp    0x140001be8
   1400151e0:	lea    rcx,[rdx+0xf0]
   1400151e7:	add    rcx,0x70
   1400151eb:	jmp    0x14000e288
   1400151f0:	lea    rcx,[rdx+0x1e0]
   1400151f7:	jmp    0x140001be8
   1400151fc:	int3   
   1400151fd:	int3   
   1400151fe:	int3   
   1400151ff:	int3   
   140015200:	int3   
   140015201:	int3   
   140015202:	mov    rcx,QWORD PTR [rdx+0x40]
   140015209:	jmp    0x140001be8
   14001520e:	int3   
   14001520f:	int3   
   140015210:	int3   
   140015211:	int3   
   140015212:	int3   
   140015213:	int3   
   140015214:	lea    rcx,[rdx+0x28]
   14001521b:	jmp    0x14000bf98
   140015220:	int3   
   140015221:	int3   
   140015222:	int3   
   140015223:	int3   
   140015224:	int3   
   140015225:	int3   
   140015226:	lea    rcx,[rdx+0x20]
   14001522d:	jmp    0x14000bf98
   140015232:	int3   
   140015233:	int3   
   140015234:	int3   
   140015235:	int3   
   140015236:	int3   
   140015237:	int3   
   140015238:	lea    rcx,[rdx+0x38]
   14001523f:	jmp    0x14000bf98
   140015244:	lea    rcx,[rdx+0x28]
   14001524b:	jmp    0x14000bf98
   140015250:	int3   
   140015251:	int3   
   140015252:	int3   
   140015253:	int3   
   140015254:	int3   
   140015255:	int3   
   140015256:	lea    rcx,[rdx+0x40]
   14001525d:	jmp    0x14000bf98
   140015262:	lea    rcx,[rdx+0x30]
   140015269:	jmp    0x14000bf98
   14001526e:	int3   
   14001526f:	int3   
   140015270:	int3   
   140015271:	int3   
   140015272:	int3   
   140015273:	int3   
   140015274:	lea    rcx,[rdx+0x48]
   14001527b:	jmp    0x14000bf98
   140015280:	int3   
   140015281:	int3   
   140015282:	int3   
   140015283:	int3   
   140015284:	int3   
   140015285:	int3   
   140015286:	lea    rcx,[rdx+0x90]
   14001528d:	jmp    0x14000bf98
   140015292:	lea    rcx,[rdx+0x20]
   140015299:	jmp    0x1400122dc
   14001529e:	int3   
   14001529f:	int3   
   1400152a0:	int3   
   1400152a1:	int3   
   1400152a2:	int3   
   1400152a3:	int3   
   1400152a4:	lea    rcx,[rdx+0x38]
   1400152ab:	jmp    0x14000bf98
   1400152b0:	int3   
   1400152b1:	int3   
   1400152b2:	int3   
   1400152b3:	int3   
   1400152b4:	int3   
   1400152b5:	int3   
   1400152b6:	lea    rcx,[rdx+0xf0]
   1400152bd:	jmp    0x14000bf98
   1400152c2:	int3   
   1400152c3:	int3   
   1400152c4:	int3   
   1400152c5:	int3   
   1400152c6:	int3   
   1400152c7:	int3   
   1400152c8:	lea    rcx,[rdx+0x110]
   1400152cf:	jmp    0x14000bf98
   1400152d4:	lea    rcx,[rdx+0x50]
   1400152db:	jmp    0x1400122dc
   1400152e0:	mov    rcx,QWORD PTR [rdx+0x108]
   1400152e7:	jmp    0x140014254
   1400152ec:	int3   
   1400152ed:	int3   
   1400152ee:	int3   
   1400152ef:	int3   
   1400152f0:	int3   
   1400152f1:	int3   
   1400152f2:	mov    rcx,QWORD PTR [rdx+0x40]
   1400152f9:	jmp    0x140001be8
   1400152fe:	mov    rcx,QWORD PTR [rdx+0x40]
   140015305:	add    rcx,0x70
   140015309:	jmp    0x14000e288
   14001530e:	int3   
   14001530f:	int3   
   140015310:	int3   
   140015311:	int3   
   140015312:	int3   
   140015313:	int3   
   140015314:	lea    rcx,[rdx+0xa0]
   14001531b:	jmp    0x14000bf98
   140015320:	lea    rcx,[rdx+0x30]
   140015327:	jmp    0x1400122dc
   14001532c:	mov    rcx,QWORD PTR [rdx+0x100]
   140015333:	jmp    0x140014254
   140015338:	int3   
   140015339:	int3   
   14001533a:	int3   
   14001533b:	int3   
   14001533c:	int3   
   14001533d:	int3   
   14001533e:	lea    rcx,[rdx+0x58]
   140015345:	jmp    0x14000bf98
   14001534a:	int3   
   14001534b:	int3   
   14001534c:	int3   
   14001534d:	int3   
   14001534e:	int3   
   14001534f:	int3   
   140015350:	lea    rcx,[rdx+0x70]
   140015357:	jmp    0x14000bf98
   14001535c:	lea    rcx,[rdx+0x90]
   140015363:	jmp    0x14000e288
   140015368:	int3   
   140015369:	int3   
   14001536a:	int3   
   14001536b:	int3   
   14001536c:	int3   
   14001536d:	int3   
   14001536e:	lea    rcx,[rdx+0x40]
   140015375:	add    rcx,0x88
   14001537c:	jmp    0x14000e288
   140015381:	lea    rcx,[rdx+0x20]
   140015388:	jmp    0x14000bf98
   14001538d:	lea    rcx,[rdx+0x40]
   140015394:	jmp    0x1400013f8
   140015399:	int3   
   14001539a:	int3   
   14001539b:	int3   
   14001539c:	int3   
   14001539d:	int3   
   14001539e:	int3   
   14001539f:	mov    rcx,QWORD PTR [rdx+0x40]
   1400153a6:	jmp    0x140008c78
   1400153ab:	int3   
   1400153ac:	int3   
   1400153ad:	int3   
   1400153ae:	int3   
   1400153af:	int3   
   1400153b0:	int3   
   1400153b1:	mov    rcx,QWORD PTR [rdx+0x40]
   1400153b8:	add    rcx,0x8
   1400153bc:	jmp    0x140008cb8
   1400153c1:	mov    rcx,QWORD PTR [rdx+0x40]
   1400153c8:	add    rcx,0x20
   1400153cc:	jmp    0x140008d0c
   1400153d1:	mov    rcx,QWORD PTR [rdx+0x40]
   1400153d8:	jmp    0x140008c78
   1400153dd:	int3   
   1400153de:	int3   
   1400153df:	int3   
   1400153e0:	int3   
   1400153e1:	int3   
   1400153e2:	int3   
   1400153e3:	rex push rbp
   1400153e5:	sub    rsp,0x20
   1400153e9:	mov    rbp,rdx
   1400153ec:	mov    rax,QWORD PTR [rcx]
   1400153ef:	xor    ecx,ecx
   1400153f1:	cmp    DWORD PTR [rax],0xc0000017
   1400153f7:	sete   cl
   1400153fa:	mov    eax,ecx
   1400153fc:	add    rsp,0x20
   140015400:	pop    rbp
   140015401:	ret    
   140015402:	int3   
   140015403:	int3   
   140015404:	int3   
   140015405:	int3   
   140015406:	int3   
   140015407:	int3   
   140015408:	int3   
   140015409:	mov    QWORD PTR [rsp+0x10],rdx
   14001540e:	push   rbp
   14001540f:	sub    rsp,0x20
   140015413:	mov    rbp,rdx
   140015416:	lea    rax,[rip+0xffffffffffff3b83]        # 0x140008fa0
   14001541d:	add    rsp,0x20
   140015421:	pop    rbp
   140015422:	ret    
   140015423:	int3   
   140015424:	lea    rcx,[rdx+0x40]
   14001542b:	jmp    0x140008ef4
   140015430:	mov    QWORD PTR [rsp+0x10],rdx
   140015435:	push   rbp
   140015436:	sub    rsp,0x20
   14001543a:	mov    rbp,rdx
   14001543d:	lea    rax,[rip+0xffffffffffff3bd2]        # 0x140009016
   140015444:	add    rsp,0x20
   140015448:	pop    rbp
   140015449:	ret    
   14001544a:	int3   
   14001544b:	lea    rcx,[rdx+0xa8]
   140015452:	jmp    0x140008ef4
   140015457:	int3   
   140015458:	int3   
   140015459:	int3   
   14001545a:	int3   
   14001545b:	int3   
   14001545c:	int3   
   14001545d:	lea    rcx,[rdx+0x48]
   140015464:	jmp    0x1400097e0
   140015469:	int3   
   14001546a:	int3   
   14001546b:	int3   
   14001546c:	int3   
   14001546d:	int3   
   14001546e:	int3   
   14001546f:	lea    rcx,[rdx+0x20]
   140015476:	jmp    0x1400092c0
   14001547b:	lea    rcx,[rdx+0x38]
   140015482:	jmp    0x1400097e0
   140015487:	int3   
   140015488:	int3   
   140015489:	int3   
   14001548a:	int3   
   14001548b:	int3   
   14001548c:	int3   
   14001548d:	lea    rcx,[rdx+0x80]
   140015494:	jmp    0x140009248
   140015499:	mov    QWORD PTR [rsp+0x10],rdx
   14001549e:	push   rbp
   14001549f:	sub    rsp,0x30
   1400154a3:	mov    rbp,rdx
   1400154a6:	lea    rax,[rip+0xffffffffffff44d8]        # 0x140009985
   1400154ad:	add    rsp,0x30
   1400154b1:	pop    rbp
   1400154b2:	ret    
   1400154b3:	int3   
   1400154b4:	lea    rcx,[rdx+0x80]
   1400154bb:	jmp    0x140009248
   1400154c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400154c5:	push   rbp
   1400154c6:	sub    rsp,0x30
   1400154ca:	mov    rbp,rdx
   1400154cd:	lea    rax,[rip+0xffffffffffff46a2]        # 0x140009b76
   1400154d4:	add    rsp,0x30
   1400154d8:	pop    rbp
   1400154d9:	ret    
   1400154da:	int3   
   1400154db:	int3   
   1400154dc:	int3   
   1400154dd:	int3   
   1400154de:	int3   
   1400154df:	int3   
   1400154e0:	int3   
   1400154e1:	lea    rcx,[rdx+0x90]
   1400154e8:	jmp    0x140009f4c
   1400154ed:	lea    rcx,[rdx+0xa8]
   1400154f4:	jmp    0x140009f4c
   1400154f9:	int3   
   1400154fa:	int3   
   1400154fb:	int3   
   1400154fc:	int3   
   1400154fd:	int3   
   1400154fe:	int3   
   1400154ff:	lea    rcx,[rdx+0x60]
   140015506:	jmp    0x1400097e0
   14001550b:	lea    rcx,[rdx+0x70]
   140015512:	jmp    0x140009248
   140015517:	mov    QWORD PTR [rsp+0x10],rdx
   14001551c:	push   rbp
   14001551d:	sub    rsp,0x30
   140015521:	mov    rbp,rdx
   140015524:	lea    rax,[rip+0xffffffffffff5790]        # 0x14000acbb
   14001552b:	add    rsp,0x30
   14001552f:	pop    rbp
   140015530:	ret    
   140015531:	int3   
   140015532:	int3   
   140015533:	int3   
   140015534:	int3   
   140015535:	int3   
   140015536:	int3   
   140015537:	int3   
   140015538:	lea    rcx,[rdx+0x80]
   14001553f:	jmp    0x14000bf98
   140015544:	int3   
   140015545:	int3   
   140015546:	int3   
   140015547:	int3   
   140015548:	int3   
   140015549:	int3   
   14001554a:	lea    rcx,[rdx+0x30]
   140015551:	jmp    0x14000bf98
   140015556:	int3   
   140015557:	int3   
   140015558:	int3   
   140015559:	int3   
   14001555a:	int3   
   14001555b:	int3   
   14001555c:	lea    rcx,[rdx+0x70]
   140015563:	jmp    0x14000bf98
   140015568:	mov    rcx,QWORD PTR [rdx+0x50]
   14001556f:	jmp    0x140014254
   140015574:	mov    rcx,QWORD PTR [rdx+0x50]
   14001557b:	jmp    0x140014254
   140015580:	int3   
   140015581:	int3   
   140015582:	int3   
   140015583:	int3   
   140015584:	int3   
   140015585:	int3   
   140015586:	lea    rcx,[rdx+0x50]
   14001558d:	jmp    0x14000bf98
   140015592:	int3   
   140015593:	int3   
   140015594:	int3   
   140015595:	int3   
   140015596:	int3   
   140015597:	int3   
   140015598:	mov    rcx,QWORD PTR [rdx+0x80]
   14001559f:	add    rcx,0xf0
   1400155a6:	jmp    0x1400122dc
   1400155ab:	lea    rcx,[rdx+0x38]
   1400155b2:	jmp    0x14000bf98
   1400155b7:	int3   
   1400155b8:	int3   
   1400155b9:	int3   
   1400155ba:	int3   
   1400155bb:	int3   
   1400155bc:	int3   
   1400155bd:	mov    rcx,QWORD PTR [rdx+0x80]
   1400155c4:	add    rcx,0xf0
   1400155cb:	jmp    0x1400122dc
   1400155d0:	lea    rcx,[rdx+0x38]
   1400155d7:	jmp    0x14000bf98
   1400155dc:	lea    rcx,[rdx+0x28]
   1400155e3:	jmp    0x14000bf98
   1400155e8:	int3   
   1400155e9:	int3   
   1400155ea:	int3   
   1400155eb:	int3   
   1400155ec:	int3   
   1400155ed:	int3   
   1400155ee:	lea    rcx,[rdx+0x60]
   1400155f5:	jmp    0x14000bf98
   1400155fa:	int3   
   1400155fb:	int3   
   1400155fc:	int3   
   1400155fd:	int3   
   1400155fe:	int3   
   1400155ff:	int3   
   140015600:	lea    rcx,[rdx+0x68]
   140015607:	jmp    0x14000bf98
   14001560c:	int3   
   14001560d:	int3   
   14001560e:	int3   
   14001560f:	int3   
   140015610:	int3   
   140015611:	int3   
   140015612:	lea    rcx,[rdx+0x40]
   140015619:	jmp    0x14000bf98
   14001561e:	int3   
   14001561f:	int3   
   140015620:	int3   
   140015621:	int3   
   140015622:	int3   
   140015623:	int3   
   140015624:	rex push rbp
   140015626:	sub    rsp,0x20
   14001562a:	mov    rbp,rdx
   14001562d:	mov    rax,QWORD PTR [rcx]
   140015630:	mov    rdx,rcx
   140015633:	mov    ecx,DWORD PTR [rax]
   140015635:	call   0x140014b9e
   14001563a:	nop
   14001563b:	add    rsp,0x20
   14001563f:	pop    rbp
   140015640:	ret    
   140015641:	int3   
   140015642:	int3   
   140015643:	int3   
   140015644:	int3   
   140015645:	int3   
   140015646:	int3   
   140015647:	int3   
   140015648:	rex push rbp
   14001564a:	sub    rsp,0x20
   14001564e:	mov    rbp,rdx
   140015651:	mov    ecx,0x8
   140015656:	call   0x140014f46
   14001565b:	nop
   14001565c:	add    rsp,0x20
   140015660:	pop    rbp
   140015661:	ret    
   140015662:	int3   
   140015663:	int3   
   140015664:	int3   
   140015665:	int3   
   140015666:	int3   
   140015667:	int3   
   140015668:	int3   
   140015669:	int3   
   14001566a:	int3   
   14001566b:	int3   
   14001566c:	int3   
   14001566d:	int3   
   14001566e:	int3   
   14001566f:	int3   
   140015670:	rex push rbp
   140015672:	sub    rsp,0x20
   140015676:	mov    rbp,rdx
   140015679:	mov    rax,QWORD PTR [rcx]
   14001567c:	xor    ecx,ecx
   14001567e:	cmp    DWORD PTR [rax],0xc0000005
   140015684:	sete   cl
   140015687:	mov    eax,ecx
   140015689:	add    rsp,0x20
   14001568d:	pop    rbp
   14001568e:	ret    
   14001568f:	int3   
   140015690:	int3   
   140015691:	int3   
   140015692:	int3   
   140015693:	int3   
   140015694:	int3   
   140015695:	int3   
   140015696:	mov    QWORD PTR [rsp+0x10],rdx
   14001569b:	push   rbp
   14001569c:	sub    rsp,0x20
   1400156a0:	mov    rbp,rdx
   1400156a3:	and    QWORD PTR [rbp+0x50],0x0
   1400156a8:	lea    rax,[rip+0xfffffffffffff95e]        # 0x14001500d
   1400156af:	add    rsp,0x20
   1400156b3:	pop    rbp
   1400156b4:	ret    
   1400156b5:	int3   
   1400156b6:	int3   
   1400156b7:	int3   
   1400156b8:	int3   
   1400156b9:	int3   
   1400156ba:	int3   
   1400156bb:	int3   
   1400156bc:	int3   
   1400156bd:	int3   
   1400156be:	int3   
   1400156bf:	int3   
   1400156c0:	lea    rax,[rip+0x1619]        # 0x140016ce0
   1400156c7:	lea    rcx,[rip+0x9482]        # 0x14001eb50
   1400156ce:	mov    QWORD PTR [rip+0x947b],rax        # 0x14001eb50
   1400156d5:	jmp    0x140008704
   1400156da:	int3   
   1400156db:	int3   
   1400156dc:	int3   
   1400156dd:	int3   
   1400156de:	int3   
   1400156df:	int3   
   1400156e0:	sub    rsp,0x28
   1400156e4:	lea    rcx,[rip+0x94dd]        # 0x14001ebc8
   1400156eb:	call   QWORD PTR [rip+0xa9f]        # 0x140016190
   1400156f1:	mov    rcx,QWORD PTR [rip+0x94f8]        # 0x14001ebf0
   1400156f8:	test   rcx,rcx
   1400156fb:	je     0x14001570b
   1400156fd:	call   QWORD PTR [rip+0xe75]        # 0x140016578
   140015703:	and    QWORD PTR [rip+0x94e5],0x0        # 0x14001ebf0
   14001570b:	and    DWORD PTR [rip+0x94e6],0x0        # 0x14001ebf8
   140015712:	and    DWORD PTR [rip+0x94e3],0x0        # 0x14001ebfc
   140015719:	add    rsp,0x28
   14001571d:	ret    
   14001571e:	int3   
   14001571f:	int3   
   140015720:	int3   
   140015721:	int3   
   140015722:	int3   
   140015723:	int3   
   140015724:	int3   
   140015725:	int3   
   140015726:	int3   
   140015727:	int3   
   140015728:	int3   
   140015729:	int3   
   14001572a:	int3   
   14001572b:	int3   
   14001572c:	int3   
   14001572d:	int3   
   14001572e:	int3   
   14001572f:	int3   
   140015730:	mov    QWORD PTR [rsp+0x8],rbx
   140015735:	mov    QWORD PTR [rsp+0x10],rsi
   14001573a:	push   rdi
   14001573b:	sub    rsp,0x20
   14001573f:	cmp    DWORD PTR [rip+0x94ba],0x48        # 0x14001ec00
   140015746:	mov    rsi,QWORD PTR [rip+0x945b]        # 0x14001eba8
   14001574d:	jne    0x1400157ce
   14001574f:	mov    eax,DWORD PTR [rip+0x94eb]        # 0x14001ec40
   140015755:	xor    ebx,ebx
   140015757:	test   eax,eax
   140015759:	jle    0x140015792
   14001575b:	xor    edi,edi
   14001575d:	test   rdi,rdi
   140015760:	js     0x140015806
   140015766:	cmp    ebx,eax
   140015768:	jge    0x140015806
   14001576e:	mov    rax,QWORD PTR [rip+0x94c3]        # 0x14001ec38
   140015775:	mov    rdx,rsi
   140015778:	movzx  ecx,WORD PTR [rdi+rax*1]
   14001577c:	call   QWORD PTR [rip+0xbc6]        # 0x140016348
   140015782:	mov    eax,DWORD PTR [rip+0x94b8]        # 0x14001ec40
   140015788:	inc    ebx
   14001578a:	add    rdi,0x2
   14001578e:	cmp    ebx,eax
   140015790:	jl     0x14001575d
   140015792:	mov    rcx,QWORD PTR [rip+0x949f]        # 0x14001ec38
   140015799:	test   rcx,rcx
   14001579c:	je     0x1400157ac
   14001579e:	call   QWORD PTR [rip+0xdd4]        # 0x140016578
   1400157a4:	and    QWORD PTR [rip+0x948c],0x0        # 0x14001ec38
   1400157ac:	and    DWORD PTR [rip+0x948d],0x0        # 0x14001ec40
   1400157b3:	lea    rcx,[rip+0x944e]        # 0x14001ec08
   1400157ba:	and    DWORD PTR [rip+0x9483],0x0        # 0x14001ec44
   1400157c1:	call   QWORD PTR [rip+0x9c9]        # 0x140016190
   1400157c7:	and    DWORD PTR [rip+0x9432],0x0        # 0x14001ec00
   1400157ce:	mov    rcx,QWORD PTR [rip+0x9463]        # 0x14001ec38
   1400157d5:	test   rcx,rcx
   1400157d8:	je     0x1400157e8
   1400157da:	call   QWORD PTR [rip+0xd98]        # 0x140016578
   1400157e0:	and    QWORD PTR [rip+0x9450],0x0        # 0x14001ec38
   1400157e8:	and    DWORD PTR [rip+0x9451],0x0        # 0x14001ec40
   1400157ef:	and    DWORD PTR [rip+0x944e],0x0        # 0x14001ec44
   1400157f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400157fb:	mov    rsi,QWORD PTR [rsp+0x38]
   140015800:	add    rsp,0x20
   140015804:	pop    rdi
   140015805:	ret    
   140015806:	mov    ecx,0xc000008c
   14001580b:	call   0x1400092d4
   140015810:	int3   
   140015811:	int3   
   140015812:	int3   
   140015813:	int3   
   140015814:	int3   
   140015815:	int3   
   140015816:	int3   
   140015817:	int3   
   140015818:	int3   
   140015819:	int3   
   14001581a:	int3   
   14001581b:	int3   
   14001581c:	int3   
   14001581d:	int3   
   14001581e:	int3   
   14001581f:	int3   
   140015820:	mov    QWORD PTR [rsp+0x8],rbx
   140015825:	mov    QWORD PTR [rsp+0x10],rsi
   14001582a:	mov    QWORD PTR [rsp+0x18],rdi
   14001582f:	push   r14
   140015831:	sub    rsp,0x20
   140015835:	cmp    DWORD PTR [rip+0x9414],0x0        # 0x14001ec50
   14001583c:	je     0x14001589d
   14001583e:	mov    rdi,QWORD PTR [rip+0x941b]        # 0x14001ec60
   140015845:	mov    rax,QWORD PTR [rip+0x941c]        # 0x14001ec68
   14001584c:	jmp    0x140015884
   14001584e:	mov    rsi,QWORD PTR [rdi]
   140015851:	test   rsi,rsi
   140015854:	je     0x140015880
   140015856:	mov    r14,QWORD PTR [rsi+0x20]
   14001585a:	test   r14,r14
   14001585d:	je     0x140015874
   14001585f:	mov    rax,QWORD PTR [r14]
   140015862:	mov    rbx,QWORD PTR [rax+0x10]
   140015866:	mov    rcx,rbx
   140015869:	call   QWORD PTR [rip+0xe89]        # 0x1400166f8
   14001586f:	mov    rcx,r14
   140015872:	call   rbx
   140015874:	and    QWORD PTR [rsi+0x20],0x0
   140015879:	mov    rax,QWORD PTR [rip+0x93e8]        # 0x14001ec68
   140015880:	add    rdi,0x8
   140015884:	cmp    rdi,rax
   140015887:	jb     0x14001584e
   140015889:	lea    rcx,[rip+0x93e0]        # 0x14001ec70
   140015890:	call   QWORD PTR [rip+0x8fa]        # 0x140016190
   140015896:	and    DWORD PTR [rip+0x93b3],0x0        # 0x14001ec50
   14001589d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400158a2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400158a7:	mov    rdi,QWORD PTR [rsp+0x40]
   1400158ac:	add    rsp,0x20
   1400158b0:	pop    r14
   1400158b2:	ret    
