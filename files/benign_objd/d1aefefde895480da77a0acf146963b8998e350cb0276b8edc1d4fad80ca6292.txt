
d1aefefde895480da77a0acf146963b8998e350cb0276b8edc1d4fad80ca6292.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x38
   140001004:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000100d:	mov    edx,0x8
   140001012:	lea    r8d,[rdx+0x5c]
   140001016:	lea    rcx,[rip+0xb733]        # 0x14000c750
   14000101d:	call   QWORD PTR [rip+0x74bd]        # 0x1400084e0
   140001023:	nop
   140001024:	lea    rcx,[rip+0xb77d]        # 0x14000c7a8
   14000102b:	call   QWORD PTR [rip+0x747f]        # 0x1400084b0
   140001031:	nop
   140001032:	lea    rcx,[rip+0xb797]        # 0x14000c7d0
   140001039:	call   QWORD PTR [rip+0x7471]        # 0x1400084b0
   14000103f:	and    QWORD PTR [rip+0xb7b1],0x0        # 0x14000c7f8
   140001047:	xorps  xmm0,xmm0
   14000104a:	movdqa XMMWORD PTR [rip+0xb7ae],xmm0        # 0x14000c800
   140001052:	and    QWORD PTR [rip+0xb7b6],0x0        # 0x14000c810
   14000105a:	lea    rcx,[rip+0x6dff]        # 0x140007e60
   140001061:	add    rsp,0x38
   140001065:	jmp    0x1400072f8
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	lea    rax,[rip+0xafd1]        # 0x14000c048
   140001077:	mov    QWORD PTR [rip+0xb80a],rax        # 0x14000c888
   14000107e:	ret    
   14000107f:	int3   
   140001080:	sub    rsp,0x28
   140001084:	lea    rcx,[rip+0xb79d]        # 0x14000c828
   14000108b:	call   QWORD PTR [rip+0x741f]        # 0x1400084b0
   140001091:	lea    rcx,[rip+0x6dd8]        # 0x140007e70
   140001098:	add    rsp,0x28
   14000109c:	jmp    0x1400072f8
   1400010a1:	int3   
   1400010a2:	int3   
   1400010a3:	int3   
   1400010a4:	int3   
   1400010a5:	int3   
   1400010a6:	int3   
   1400010a7:	int3   
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	sub    rsp,0x28
   1400010b4:	xor    edx,edx
   1400010b6:	lea    rcx,[rip+0xafa3]        # 0x14000c060
   1400010bd:	call   QWORD PTR [rip+0x6f8d]        # 0x140008050
   1400010c3:	test   eax,eax
   1400010c5:	je     0x1400010d7
   1400010c7:	lea    rcx,[rip+0x6dc2]        # 0x140007e90
   1400010ce:	add    rsp,0x28
   1400010d2:	jmp    0x1400072f8
   1400010d7:	mov    al,BYTE PTR [rsp+0x30]
   1400010db:	lea    rdx,[rip+0x92be]        # 0x14000a3a0
   1400010e2:	lea    rcx,[rsp+0x30]
   1400010e7:	mov    BYTE PTR [rsp+0x30],al
   1400010eb:	call   0x14000792c
   1400010f0:	int3   
   1400010f1:	int3   
   1400010f2:	int3   
   1400010f3:	int3   
   1400010f4:	int3   
   1400010f5:	int3   
   1400010f6:	int3   
   1400010f7:	int3   
   1400010f8:	int3   
   1400010f9:	int3   
   1400010fa:	int3   
   1400010fb:	int3   
   1400010fc:	int3   
   1400010fd:	int3   
   1400010fe:	int3   
   1400010ff:	int3   
   140001100:	int3   
   140001101:	int3   
   140001102:	int3   
   140001103:	int3   
   140001104:	int3   
   140001105:	int3   
   140001106:	int3   
   140001107:	int3   
   140001108:	mov    QWORD PTR [rsp+0x8],rbx
   14000110d:	push   rdi
   14000110e:	sub    rsp,0x20
   140001112:	mov    rdi,QWORD PTR [rcx+0x10]
   140001116:	lea    rax,[rip+0x771b]        # 0x140008838
   14000111d:	mov    QWORD PTR [rcx],rax
   140001120:	test   rdi,rdi
   140001123:	je     0x14000113c
   140001125:	mov    rax,QWORD PTR [rdi]
   140001128:	mov    rbx,QWORD PTR [rax+0x8]
   14000112c:	mov    rcx,rbx
   14000112f:	call   QWORD PTR [rip+0x746b]        # 0x1400085a0
   140001135:	xor    edx,edx
   140001137:	mov    rcx,rdi
   14000113a:	call   rbx
   14000113c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001141:	add    rsp,0x20
   140001145:	pop    rdi
   140001146:	ret    
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	mov    QWORD PTR [rsp+0x8],rbx
   140001155:	mov    QWORD PTR [rsp+0x10],rbp
   14000115a:	mov    QWORD PTR [rsp+0x18],rsi
   14000115f:	push   rdi
   140001160:	sub    rsp,0x20
   140001164:	mov    rsi,QWORD PTR [rcx+0x10]
   140001168:	lea    rax,[rip+0x76c9]        # 0x140008838
   14000116f:	mov    QWORD PTR [rcx],rax
   140001172:	mov    ebp,edx
   140001174:	mov    rdi,rcx
   140001177:	test   rsi,rsi
   14000117a:	je     0x140001193
   14000117c:	mov    rax,QWORD PTR [rsi]
   14000117f:	mov    rbx,QWORD PTR [rax+0x8]
   140001183:	mov    rcx,rbx
   140001186:	call   QWORD PTR [rip+0x7414]        # 0x1400085a0
   14000118c:	xor    edx,edx
   14000118e:	mov    rcx,rsi
   140001191:	call   rbx
   140001193:	test   bpl,0x1
   140001197:	je     0x1400011a2
   140001199:	mov    rcx,rdi
   14000119c:	call   QWORD PTR [rip+0x7346]        # 0x1400084e8
   1400011a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011a7:	mov    rax,rdi
   1400011aa:	mov    rbp,QWORD PTR [rsp+0x38]
   1400011af:	mov    rsi,QWORD PTR [rsp+0x40]
   1400011b4:	add    rsp,0x20
   1400011b8:	pop    rdi
   1400011b9:	ret    
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	mov    rax,rsp
   1400011c3:	mov    QWORD PTR [rax+0x8],rcx
   1400011c7:	push   rdi
   1400011c8:	sub    rsp,0x30
   1400011cc:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400011d4:	mov    QWORD PTR [rax+0x10],rbx
   1400011d8:	mov    QWORD PTR [rax+0x18],rsi
   1400011dc:	mov    rsi,rcx
   1400011df:	lea    rax,[rip+0x7642]        # 0x140008828
   1400011e6:	mov    QWORD PTR [rcx],rax
   1400011e9:	mov    rdi,QWORD PTR [rcx+0x18]
   1400011ed:	mov    rax,QWORD PTR [rdi]
   1400011f0:	mov    rbx,QWORD PTR [rax+0x10]
   1400011f4:	mov    rcx,rbx
   1400011f7:	call   QWORD PTR [rip+0x73a3]        # 0x1400085a0
   1400011fd:	mov    rcx,rdi
   140001200:	call   rbx
   140001202:	nop
   140001203:	lea    rax,[rip+0x762e]        # 0x140008838
   14000120a:	mov    QWORD PTR [rsi],rax
   14000120d:	mov    rdi,QWORD PTR [rsi+0x10]
   140001211:	test   rdi,rdi
   140001214:	je     0x14000122d
   140001216:	mov    rax,QWORD PTR [rdi]
   140001219:	mov    rbx,QWORD PTR [rax+0x8]
   14000121d:	mov    rcx,rbx
   140001220:	call   QWORD PTR [rip+0x737a]        # 0x1400085a0
   140001226:	xor    edx,edx
   140001228:	mov    rcx,rdi
   14000122b:	call   rbx
   14000122d:	mov    rbx,QWORD PTR [rsp+0x48]
   140001232:	mov    rsi,QWORD PTR [rsp+0x50]
   140001237:	add    rsp,0x30
   14000123b:	pop    rdi
   14000123c:	ret    
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	int3   
   140001241:	int3   
   140001242:	int3   
   140001243:	int3   
   140001244:	int3   
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    QWORD PTR [rsp+0x8],rbx
   140001255:	push   rdi
   140001256:	sub    rsp,0x20
   14000125a:	mov    ebx,edx
   14000125c:	mov    rdi,rcx
   14000125f:	call   0x1400011c0
   140001264:	test   bl,0x1
   140001267:	je     0x140001272
   140001269:	mov    rcx,rdi
   14000126c:	call   QWORD PTR [rip+0x7276]        # 0x1400084e8
   140001272:	mov    rax,rdi
   140001275:	mov    rbx,QWORD PTR [rsp+0x30]
   14000127a:	add    rsp,0x20
   14000127e:	pop    rdi
   14000127f:	ret    
   140001280:	int3   
   140001281:	int3   
   140001282:	int3   
   140001283:	int3   
   140001284:	int3   
   140001285:	int3   
   140001286:	int3   
   140001287:	int3   
   140001288:	mov    rax,rsp
   14000128b:	mov    QWORD PTR [rax+0x18],r8
   14000128f:	mov    QWORD PTR [rax+0x8],rcx
   140001293:	push   rsi
   140001294:	push   rdi
   140001295:	push   r14
   140001297:	sub    rsp,0x30
   14000129b:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400012a3:	mov    QWORD PTR [rax+0x10],rbx
   1400012a7:	mov    QWORD PTR [rax+0x20],rbp
   1400012ab:	mov    ebp,r9d
   1400012ae:	mov    r14,rdx
   1400012b1:	mov    ecx,0x28
   1400012b6:	call   QWORD PTR [rip+0x7234]        # 0x1400084f0
   1400012bc:	mov    rdi,rax
   1400012bf:	mov    QWORD PTR [rsp+0x50],rax
   1400012c4:	test   rax,rax
   1400012c7:	je     0x14000132c
   1400012c9:	mov    rsi,QWORD PTR [rip+0xb538]        # 0x14000c808
   1400012d0:	lea    rax,[rip+0x7561]        # 0x140008838
   1400012d7:	mov    QWORD PTR [rdi],rax
   1400012da:	mov    rax,QWORD PTR [rsp+0x60]
   1400012df:	mov    QWORD PTR [rdi+0x8],rax
   1400012e3:	mov    QWORD PTR [rdi+0x10],rsi
   1400012e7:	test   rsi,rsi
   1400012ea:	je     0x140001303
   1400012ec:	mov    rax,QWORD PTR [rsi]
   1400012ef:	mov    rbx,QWORD PTR [rax]
   1400012f2:	mov    rcx,rbx
   1400012f5:	call   QWORD PTR [rip+0x72a5]        # 0x1400085a0
   1400012fb:	xor    edx,edx
   1400012fd:	mov    rcx,rsi
   140001300:	call   rbx
   140001302:	nop
   140001303:	lea    rax,[rip+0x751e]        # 0x140008828
   14000130a:	mov    QWORD PTR [rdi],rax
   14000130d:	mov    QWORD PTR [rdi+0x18],r14
   140001311:	mov    DWORD PTR [rdi+0x20],ebp
   140001314:	mov    rax,QWORD PTR [r14]
   140001317:	mov    rbx,QWORD PTR [rax+0x8]
   14000131b:	mov    rcx,rbx
   14000131e:	call   QWORD PTR [rip+0x727c]        # 0x1400085a0
   140001324:	mov    rcx,r14
   140001327:	call   rbx
   140001329:	nop
   14000132a:	jmp    0x14000132e
   14000132c:	xor    edi,edi
   14000132e:	test   rdi,rdi
   140001331:	je     0x14000133d
   140001333:	mov    rdx,rdi
   140001336:	call   0x140003f48
   14000133b:	jmp    0x140001342
   14000133d:	mov    eax,0x80041006
   140001342:	mov    rbx,QWORD PTR [rsp+0x58]
   140001347:	mov    rbp,QWORD PTR [rsp+0x68]
   14000134c:	add    rsp,0x30
   140001350:	pop    r14
   140001352:	pop    rdi
   140001353:	pop    rsi
   140001354:	ret    
   140001355:	int3   
   140001356:	int3   
   140001357:	int3   
   140001358:	int3   
   140001359:	int3   
   14000135a:	int3   
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	mov    QWORD PTR [rsp+0x8],rbx
   140001365:	mov    QWORD PTR [rsp+0x10],rsi
   14000136a:	push   rdi
   14000136b:	sub    rsp,0x60
   14000136f:	mov    rdi,QWORD PTR [rcx+0x18]
   140001373:	mov    rsi,rcx
   140001376:	test   rdi,rdi
   140001379:	je     0x1400013cb
   14000137b:	xor    edx,edx
   14000137d:	lea    rcx,[rsp+0x20]
   140001382:	lea    r8d,[rdx+0x40]
   140001386:	call   0x140007a76
   14000138b:	mov    rax,QWORD PTR [rdi]
   14000138e:	mov    rbx,QWORD PTR [rax+0x28]
   140001392:	mov    rcx,rbx
   140001395:	call   QWORD PTR [rip+0x7205]        # 0x1400085a0
   14000139b:	mov    edx,0x3
   1400013a0:	mov    rcx,rdi
   1400013a3:	call   rbx
   1400013a5:	mov    rdi,QWORD PTR [rsi+0x18]
   1400013a9:	mov    rax,QWORD PTR [rdi]
   1400013ac:	mov    rbx,QWORD PTR [rax+0x70]
   1400013b0:	mov    rcx,rbx
   1400013b3:	call   QWORD PTR [rip+0x71e7]        # 0x1400085a0
   1400013b9:	xor    r9d,r9d
   1400013bc:	lea    r8,[rsp+0x20]
   1400013c1:	mov    edx,0xfffffffd
   1400013c6:	mov    rcx,rdi
   1400013c9:	call   rbx
   1400013cb:	mov    rbx,QWORD PTR [rsp+0x70]
   1400013d0:	mov    rsi,QWORD PTR [rsp+0x78]
   1400013d5:	add    rsp,0x60
   1400013d9:	pop    rdi
   1400013da:	ret    
   1400013db:	int3   
   1400013dc:	int3   
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	int3   
   1400013e1:	int3   
   1400013e2:	int3   
   1400013e3:	int3   
   1400013e4:	int3   
   1400013e5:	int3   
   1400013e6:	int3   
   1400013e7:	int3   
   1400013e8:	int3   
   1400013e9:	int3   
   1400013ea:	int3   
   1400013eb:	int3   
   1400013ec:	int3   
   1400013ed:	int3   
   1400013ee:	int3   
   1400013ef:	int3   
   1400013f0:	mov    rax,rsp
   1400013f3:	mov    QWORD PTR [rax+0x8],rbx
   1400013f7:	mov    QWORD PTR [rax+0x10],rbp
   1400013fb:	mov    QWORD PTR [rax+0x18],rsi
   1400013ff:	mov    QWORD PTR [rax+0x20],rdi
   140001403:	push   r14
   140001405:	sub    rsp,0x20
   140001409:	mov    rdi,QWORD PTR [rcx+0x8]
   14000140d:	mov    rsi,r9
   140001410:	mov    rbp,r8
   140001413:	mov    r14,rdx
   140001416:	mov    rax,QWORD PTR [rdi]
   140001419:	mov    rbx,QWORD PTR [rax+0x28]
   14000141d:	mov    rcx,rbx
   140001420:	call   QWORD PTR [rip+0x717a]        # 0x1400085a0
   140001426:	mov    r9,rsi
   140001429:	mov    r8,rbp
   14000142c:	mov    rdx,r14
   14000142f:	mov    rcx,rdi
   140001432:	mov    rax,rbx
   140001435:	mov    rbx,QWORD PTR [rsp+0x30]
   14000143a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000143f:	mov    rsi,QWORD PTR [rsp+0x40]
   140001444:	mov    rdi,QWORD PTR [rsp+0x48]
   140001449:	add    rsp,0x20
   14000144d:	pop    r14
   14000144f:	rex.W jmp rax
   140001452:	int3   
   140001453:	int3   
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	int3   
   140001459:	int3   
   14000145a:	int3   
   14000145b:	int3   
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	mov    QWORD PTR [rsp+0x8],rbx
   140001465:	mov    QWORD PTR [rsp+0x10],rsi
   14000146a:	push   rdi
   14000146b:	sub    rsp,0x20
   14000146f:	mov    rdi,QWORD PTR [rcx+0x8]
   140001473:	mov    esi,edx
   140001475:	mov    rax,QWORD PTR [rdi]
   140001478:	mov    rbx,QWORD PTR [rax+0x30]
   14000147c:	mov    rcx,rbx
   14000147f:	call   QWORD PTR [rip+0x711b]        # 0x1400085a0
   140001485:	mov    edx,esi
   140001487:	mov    rcx,rdi
   14000148a:	mov    rax,rbx
   14000148d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001492:	mov    rsi,QWORD PTR [rsp+0x38]
   140001497:	add    rsp,0x20
   14000149b:	pop    rdi
   14000149c:	rex.W jmp rax
   14000149f:	int3   
   1400014a0:	int3   
   1400014a1:	int3   
   1400014a2:	int3   
   1400014a3:	int3   
   1400014a4:	int3   
   1400014a5:	int3   
   1400014a6:	int3   
   1400014a7:	int3   
   1400014a8:	int3   
   1400014a9:	int3   
   1400014aa:	int3   
   1400014ab:	int3   
   1400014ac:	int3   
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	mov    rax,QWORD PTR [rdx]
   1400014b3:	cmp    rax,QWORD PTR [rip+0x7a16]        # 0x140008ed0
   1400014ba:	jne    0x1400014ce
   1400014bc:	mov    rax,QWORD PTR [rdx+0x8]
   1400014c0:	cmp    rax,QWORD PTR [rip+0x7a11]        # 0x140008ed8
   1400014c7:	jne    0x1400014ce
   1400014c9:	lea    rax,[rcx+0x18]
   1400014cd:	ret    
   1400014ce:	xor    eax,eax
   1400014d0:	ret    
   1400014d1:	int3   
   1400014d2:	int3   
   1400014d3:	int3   
   1400014d4:	int3   
   1400014d5:	int3   
   1400014d6:	int3   
   1400014d7:	int3   
   1400014d8:	int3   
   1400014d9:	int3   
   1400014da:	int3   
   1400014db:	int3   
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	xor    eax,eax
   1400014e2:	ret    
   1400014e3:	int3   
   1400014e4:	int3   
   1400014e5:	int3   
   1400014e6:	int3   
   1400014e7:	int3   
   1400014e8:	int3   
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	mov    eax,0x1
   1400014f5:	ret    
   1400014f6:	int3   
   1400014f7:	int3   
   1400014f8:	int3   
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	mov    QWORD PTR [rsp+0x8],rbx
   140001505:	push   rdi
   140001506:	sub    rsp,0x20
   14000150a:	lea    rax,[rip+0x73cf]        # 0x1400088e0
   140001511:	mov    ebx,edx
   140001513:	mov    QWORD PTR [rcx],rax
   140001516:	mov    rdi,rcx
   140001519:	lea    rax,[rip+0x7440]        # 0x140008960
   140001520:	mov    QWORD PTR [rcx+0x20],rax
   140001524:	call   QWORD PTR [rip+0x702e]        # 0x140008558
   14000152a:	test   bl,0x1
   14000152d:	je     0x140001538
   14000152f:	mov    rcx,rdi
   140001532:	call   QWORD PTR [rip+0x6fb0]        # 0x1400084e8
   140001538:	mov    rax,rdi
   14000153b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001540:	add    rsp,0x20
   140001544:	pop    rdi
   140001545:	ret    
   140001546:	int3   
   140001547:	int3   
   140001548:	int3   
   140001549:	int3   
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	int3   
   14000154d:	int3   
   14000154e:	int3   
   14000154f:	int3   
   140001550:	rex push rbx
   140001552:	sub    rsp,0x20
   140001556:	lea    rax,[rip+0x72eb]        # 0x140008848
   14000155d:	mov    rbx,rcx
   140001560:	mov    QWORD PTR [rcx+0x18],rax
   140001564:	mov    rax,QWORD PTR [rip+0x6ffd]        # 0x140008568
   14000156b:	mov    QWORD PTR [rcx],rax
   14000156e:	test   dl,0x1
   140001571:	je     0x140001579
   140001573:	call   QWORD PTR [rip+0x6f6f]        # 0x1400084e8
   140001579:	mov    rax,rbx
   14000157c:	add    rsp,0x20
   140001580:	pop    rbx
   140001581:	ret    
   140001582:	int3   
   140001583:	int3   
   140001584:	int3   
   140001585:	int3   
   140001586:	int3   
   140001587:	int3   
   140001588:	int3   
   140001589:	int3   
   14000158a:	int3   
   14000158b:	int3   
   14000158c:	int3   
   14000158d:	int3   
   14000158e:	int3   
   14000158f:	int3   
   140001590:	rex push rdi
   140001592:	sub    rsp,0x50
   140001596:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000159f:	mov    QWORD PTR [rsp+0x60],rbx
   1400015a4:	mov    rcx,QWORD PTR [rip+0xb24d]        # 0x14000c7f8
   1400015ab:	test   rcx,rcx
   1400015ae:	je     0x1400015b6
   1400015b0:	call   QWORD PTR [rip+0x6bda]        # 0x140008190
   1400015b6:	xor    r9d,r9d
   1400015b9:	xor    r8d,r8d
   1400015bc:	xor    edx,edx
   1400015be:	xor    ecx,ecx
   1400015c0:	call   QWORD PTR [rip+0x6c92]        # 0x140008258
   1400015c6:	mov    QWORD PTR [rip+0xb22b],rax        # 0x14000c7f8
   1400015cd:	mov    rcx,QWORD PTR [rip+0xb22c]        # 0x14000c800
   1400015d4:	test   rcx,rcx
   1400015d7:	je     0x1400015df
   1400015d9:	call   QWORD PTR [rip+0x6bb1]        # 0x140008190
   1400015df:	xor    r9d,r9d
   1400015e2:	xor    r8d,r8d
   1400015e5:	xor    edx,edx
   1400015e7:	xor    ecx,ecx
   1400015e9:	call   QWORD PTR [rip+0x6c69]        # 0x140008258
   1400015ef:	mov    QWORD PTR [rip+0xb20a],rax        # 0x14000c800
   1400015f6:	lea    rdi,[rip+0xaa53]        # 0x14000c050
   1400015fd:	mov    QWORD PTR [rip+0xb204],rdi        # 0x14000c808
   140001604:	mov    ecx,0x28
   140001609:	call   QWORD PTR [rip+0x6ee1]        # 0x1400084f0
   14000160f:	mov    rbx,rax
   140001612:	mov    QWORD PTR [rsp+0x70],rax
   140001617:	test   rax,rax
   14000161a:	je     0x140001643
   14000161c:	mov    rdx,rdi
   14000161f:	mov    rcx,rax
   140001622:	call   QWORD PTR [rip+0x6ed8]        # 0x140008500
   140001628:	mov    QWORD PTR [rbx+0x20],rbx
   14000162c:	lea    rax,[rip+0x7305]        # 0x140008938
   140001633:	mov    QWORD PTR [rbx+0x18],rax
   140001637:	lea    rax,[rip+0x726a]        # 0x1400088a8
   14000163e:	mov    QWORD PTR [rbx],rax
   140001641:	jmp    0x140001645
   140001643:	xor    ebx,ebx
   140001645:	mov    QWORD PTR [rsp+0x68],rbx
   14000164a:	test   rbx,rbx
   14000164d:	jne    0x140001656
   14000164f:	mov    eax,0x80041006
   140001654:	jmp    0x140001696
   140001656:	lock inc DWORD PTR [rbx+0x8]
   14000165a:	lea    r8,[rsp+0x68]
   14000165f:	lea    rcx,[rsp+0x38]
   140001664:	call   0x140001abc
   140001669:	nop
   14000166a:	mov    r8,QWORD PTR [rsp+0x68]
   14000166f:	call   0x140005214
   140001674:	mov    ebx,eax
   140001676:	cmp    BYTE PTR [rsp+0x38],0x0
   14000167b:	jne    0x140001694
   14000167d:	mov    rcx,QWORD PTR [rsp+0x40]
   140001682:	call   QWORD PTR [rip+0x6f18]        # 0x1400085a0
   140001688:	mov    rcx,QWORD PTR [rsp+0x48]
   14000168d:	mov    rcx,QWORD PTR [rcx]
   140001690:	call   QWORD PTR [rsp+0x40]
   140001694:	mov    eax,ebx
   140001696:	mov    rbx,QWORD PTR [rsp+0x60]
   14000169b:	add    rsp,0x50
   14000169f:	pop    rdi
   1400016a0:	ret    
   1400016a1:	int3   
   1400016a2:	int3   
   1400016a3:	int3   
   1400016a4:	int3   
   1400016a5:	int3   
   1400016a6:	int3   
   1400016a7:	int3   
   1400016a8:	int3   
   1400016a9:	int3   
   1400016aa:	int3   
   1400016ab:	int3   
   1400016ac:	int3   
   1400016ad:	int3   
   1400016ae:	int3   
   1400016af:	int3   
   1400016b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400016b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400016ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400016bf:	push   rdi
   1400016c0:	sub    rsp,0x20
   1400016c4:	mov    rdi,QWORD PTR [rcx+0x8]
   1400016c8:	mov    rsi,r8
   1400016cb:	mov    rbp,rdx
   1400016ce:	mov    rax,QWORD PTR [rdi]
   1400016d1:	mov    rbx,QWORD PTR [rax]
   1400016d4:	mov    rcx,rbx
   1400016d7:	call   QWORD PTR [rip+0x6ec3]        # 0x1400085a0
   1400016dd:	mov    r8,rsi
   1400016e0:	mov    rdx,rbp
   1400016e3:	mov    rcx,rdi
   1400016e6:	mov    rax,rbx
   1400016e9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400016ee:	mov    rbp,QWORD PTR [rsp+0x38]
   1400016f3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400016f8:	add    rsp,0x20
   1400016fc:	pop    rdi
   1400016fd:	rex.W jmp rax
   140001700:	int3   
   140001701:	int3   
   140001702:	int3   
   140001703:	int3   
   140001704:	int3   
   140001705:	int3   
   140001706:	int3   
   140001707:	int3   
   140001708:	int3   
   140001709:	int3   
   14000170a:	int3   
   14000170b:	int3   
   14000170c:	int3   
   14000170d:	int3   
   14000170e:	int3   
   14000170f:	int3   
   140001710:	mov    QWORD PTR [rsp+0x8],rbx
   140001715:	push   rdi
   140001716:	sub    rsp,0x20
   14000171a:	mov    rdi,QWORD PTR [rcx+0x8]
   14000171e:	mov    rax,QWORD PTR [rdi]
   140001721:	mov    rbx,QWORD PTR [rax+0x8]
   140001725:	mov    rcx,rbx
   140001728:	call   QWORD PTR [rip+0x6e72]        # 0x1400085a0
   14000172e:	mov    rcx,rdi
   140001731:	mov    rax,rbx
   140001734:	mov    rbx,QWORD PTR [rsp+0x30]
   140001739:	add    rsp,0x20
   14000173d:	pop    rdi
   14000173e:	rex.W jmp rax
   140001741:	int3   
   140001742:	int3   
   140001743:	int3   
   140001744:	int3   
   140001745:	int3   
   140001746:	int3   
   140001747:	int3   
   140001748:	int3   
   140001749:	int3   
   14000174a:	int3   
   14000174b:	int3   
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	mov    QWORD PTR [rsp+0x8],rbx
   140001755:	push   rdi
   140001756:	sub    rsp,0x20
   14000175a:	mov    rdi,QWORD PTR [rcx+0x8]
   14000175e:	mov    rax,QWORD PTR [rdi]
   140001761:	mov    rbx,QWORD PTR [rax+0x10]
   140001765:	mov    rcx,rbx
   140001768:	call   QWORD PTR [rip+0x6e32]        # 0x1400085a0
   14000176e:	mov    rcx,rdi
   140001771:	mov    rax,rbx
   140001774:	mov    rbx,QWORD PTR [rsp+0x30]
   140001779:	add    rsp,0x20
   14000177d:	pop    rdi
   14000177e:	rex.W jmp rax
   140001781:	int3   
   140001782:	int3   
   140001783:	int3   
   140001784:	int3   
   140001785:	int3   
   140001786:	int3   
   140001787:	int3   
   140001788:	int3   
   140001789:	int3   
   14000178a:	int3   
   14000178b:	int3   
   14000178c:	int3   
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	mov    QWORD PTR [rsp+0x8],rbx
   140001795:	mov    QWORD PTR [rsp+0x10],rbp
   14000179a:	mov    QWORD PTR [rsp+0x18],rsi
   14000179f:	push   rdi
   1400017a0:	sub    rsp,0x20
   1400017a4:	mov    rdi,QWORD PTR [rcx+0x8]
   1400017a8:	mov    rsi,r8
   1400017ab:	mov    rbp,rdx
   1400017ae:	mov    rax,QWORD PTR [rdi+0x18]
   1400017b2:	test   rax,rax
   1400017b5:	cmovne rdi,rax
   1400017b9:	mov    rax,QWORD PTR [rdi]
   1400017bc:	mov    rbx,QWORD PTR [rax]
   1400017bf:	mov    rcx,rbx
   1400017c2:	call   QWORD PTR [rip+0x6dd8]        # 0x1400085a0
   1400017c8:	mov    r8,rsi
   1400017cb:	mov    rdx,rbp
   1400017ce:	mov    rcx,rdi
   1400017d1:	mov    rax,rbx
   1400017d4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400017d9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400017de:	mov    rsi,QWORD PTR [rsp+0x40]
   1400017e3:	add    rsp,0x20
   1400017e7:	pop    rdi
   1400017e8:	rex.W jmp rax
   1400017eb:	int3   
   1400017ec:	int3   
   1400017ed:	int3   
   1400017ee:	int3   
   1400017ef:	int3   
   1400017f0:	int3   
   1400017f1:	int3   
   1400017f2:	int3   
   1400017f3:	int3   
   1400017f4:	int3   
   1400017f5:	int3   
   1400017f6:	int3   
   1400017f7:	int3   
   1400017f8:	int3   
   1400017f9:	int3   
   1400017fa:	int3   
   1400017fb:	int3   
   1400017fc:	int3   
   1400017fd:	int3   
   1400017fe:	int3   
   1400017ff:	int3   
   140001800:	mov    QWORD PTR [rsp+0x8],rbx
   140001805:	push   rdi
   140001806:	sub    rsp,0x20
   14000180a:	mov    rdi,QWORD PTR [rcx+0x8]
   14000180e:	mov    rax,QWORD PTR [rdi+0x18]
   140001812:	test   rax,rax
   140001815:	cmovne rdi,rax
   140001819:	mov    rax,QWORD PTR [rdi]
   14000181c:	mov    rbx,QWORD PTR [rax+0x8]
   140001820:	mov    rcx,rbx
   140001823:	call   QWORD PTR [rip+0x6d77]        # 0x1400085a0
   140001829:	mov    rcx,rdi
   14000182c:	mov    rax,rbx
   14000182f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001834:	add    rsp,0x20
   140001838:	pop    rdi
   140001839:	rex.W jmp rax
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	int3   
   140001841:	int3   
   140001842:	int3   
   140001843:	int3   
   140001844:	int3   
   140001845:	int3   
   140001846:	int3   
   140001847:	int3   
   140001848:	int3   
   140001849:	int3   
   14000184a:	int3   
   14000184b:	int3   
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	mov    QWORD PTR [rsp+0x8],rbx
   140001855:	push   rdi
   140001856:	sub    rsp,0x20
   14000185a:	mov    rdi,QWORD PTR [rcx+0x8]
   14000185e:	mov    rax,QWORD PTR [rdi+0x18]
   140001862:	test   rax,rax
   140001865:	cmovne rdi,rax
   140001869:	mov    rax,QWORD PTR [rdi]
   14000186c:	mov    rbx,QWORD PTR [rax+0x10]
   140001870:	mov    rcx,rbx
   140001873:	call   QWORD PTR [rip+0x6d27]        # 0x1400085a0
   140001879:	mov    rcx,rdi
   14000187c:	mov    rax,rbx
   14000187f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001884:	add    rsp,0x20
   140001888:	pop    rdi
   140001889:	rex.W jmp rax
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	int3   
   140001891:	int3   
   140001892:	int3   
   140001893:	int3   
   140001894:	mov    QWORD PTR [rsp+0x8],rcx
   140001899:	push   rsi
   14000189a:	push   rdi
   14000189b:	push   r12
   14000189d:	push   r14
   14000189f:	push   r15
   1400018a1:	sub    rsp,0x30
   1400018a5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400018ae:	mov    QWORD PTR [rsp+0x68],rbx
   1400018b3:	mov    r15,r9
   1400018b6:	mov    rsi,r8
   1400018b9:	mov    r12,rdx
   1400018bc:	mov    r14,rcx
   1400018bf:	and    QWORD PTR [r9],0x0
   1400018c3:	mov    rdi,QWORD PTR [rcx+0x10]
   1400018c7:	test   rdi,rdi
   1400018ca:	je     0x1400018f0
   1400018cc:	mov    rax,QWORD PTR [rdi]
   1400018cf:	mov    rbx,QWORD PTR [rax]
   1400018d2:	mov    rcx,rbx
   1400018d5:	call   QWORD PTR [rip+0x6cc5]        # 0x1400085a0
   1400018db:	xor    edx,edx
   1400018dd:	mov    rcx,rdi
   1400018e0:	call   rbx
   1400018e2:	test   eax,eax
   1400018e4:	jne    0x1400018f0
   1400018e6:	mov    eax,0x80080008
   1400018eb:	jmp    0x140001a08
   1400018f0:	mov    ecx,0x30
   1400018f5:	call   QWORD PTR [rip+0x6bf5]        # 0x1400084f0
   1400018fb:	mov    rdi,rax
   1400018fe:	mov    QWORD PTR [rsp+0x78],rax
   140001903:	test   rax,rax
   140001906:	je     0x140001933
   140001908:	mov    r8,r12
   14000190b:	mov    rdx,QWORD PTR [r14+0x10]
   14000190f:	mov    rcx,rax
   140001912:	call   QWORD PTR [rip+0x6c48]        # 0x140008560
   140001918:	lea    rax,[rip+0x6fc1]        # 0x1400088e0
   14000191f:	mov    QWORD PTR [rdi],rax
   140001922:	mov    QWORD PTR [rdi+0x28],rdi
   140001926:	lea    rax,[rip+0x6feb]        # 0x140008918
   14000192d:	mov    QWORD PTR [rdi+0x20],rax
   140001931:	jmp    0x140001935
   140001933:	xor    edi,edi
   140001935:	mov    QWORD PTR [rsp+0x78],rdi
   14000193a:	test   rdi,rdi
   14000193d:	je     0x140001955
   14000193f:	mov    rax,QWORD PTR [rdi]
   140001942:	mov    rbx,QWORD PTR [rax+0x8]
   140001946:	mov    rcx,rbx
   140001949:	call   QWORD PTR [rip+0x6c51]        # 0x1400085a0
   14000194f:	mov    rcx,rdi
   140001952:	call   rbx
   140001954:	nop
   140001955:	test   rdi,rdi
   140001958:	je     0x1400019c7
   14000195a:	mov    rax,QWORD PTR [rdi]
   14000195d:	mov    rbx,QWORD PTR [rax+0x30]
   140001961:	mov    rcx,rbx
   140001964:	call   QWORD PTR [rip+0x6c36]        # 0x1400085a0
   14000196a:	mov    rcx,rdi
   14000196d:	call   rbx
   14000196f:	test   eax,eax
   140001971:	je     0x1400019c7
   140001973:	test   r12,r12
   140001976:	jne    0x14000198b
   140001978:	mov    r8,r15
   14000197b:	mov    rdx,rsi
   14000197e:	mov    rcx,rdi
   140001981:	call   QWORD PTR [rip+0x6ba9]        # 0x140008530
   140001987:	mov    esi,eax
   140001989:	jmp    0x1400019cc
   14000198b:	mov    rax,QWORD PTR [rsi]
   14000198e:	cmp    rax,QWORD PTR [rip+0x754b]        # 0x140008ee0
   140001995:	jne    0x1400019c0
   140001997:	mov    rax,QWORD PTR [rsi+0x8]
   14000199b:	cmp    rax,QWORD PTR [rip+0x7546]        # 0x140008ee8
   1400019a2:	jne    0x1400019c0
   1400019a4:	mov    QWORD PTR [r15],rdi
   1400019a7:	mov    rax,QWORD PTR [rdi]
   1400019aa:	mov    rbx,QWORD PTR [rax+0x8]
   1400019ae:	mov    rcx,rbx
   1400019b1:	call   QWORD PTR [rip+0x6be9]        # 0x1400085a0
   1400019b7:	mov    rcx,rdi
   1400019ba:	call   rbx
   1400019bc:	xor    esi,esi
   1400019be:	jmp    0x1400019cc
   1400019c0:	mov    esi,0x80040110
   1400019c5:	jmp    0x1400019cc
   1400019c7:	mov    esi,0x80004005
   1400019cc:	test   rdi,rdi
   1400019cf:	je     0x1400019db
   1400019d1:	mov    rcx,rdi
   1400019d4:	call   QWORD PTR [rip+0x6b46]        # 0x140008520
   1400019da:	nop
   1400019db:	jmp    0x1400019e6
   1400019dd:	mov    r14,QWORD PTR [rsp+0x60]
   1400019e2:	mov    esi,DWORD PTR [rsp+0x78]
   1400019e6:	mov    rdi,QWORD PTR [r14+0x10]
   1400019ea:	test   rdi,rdi
   1400019ed:	je     0x140001a06
   1400019ef:	mov    rax,QWORD PTR [rdi]
   1400019f2:	mov    rbx,QWORD PTR [rax+0x8]
   1400019f6:	mov    rcx,rbx
   1400019f9:	call   QWORD PTR [rip+0x6ba1]        # 0x1400085a0
   1400019ff:	xor    edx,edx
   140001a01:	mov    rcx,rdi
   140001a04:	call   rbx
   140001a06:	mov    eax,esi
   140001a08:	mov    rbx,QWORD PTR [rsp+0x68]
   140001a0d:	add    rsp,0x30
   140001a11:	pop    r15
   140001a13:	pop    r14
   140001a15:	pop    r12
   140001a17:	pop    rdi
   140001a18:	pop    rsi
   140001a19:	ret    
   140001a1a:	int3   
   140001a1b:	int3   
   140001a1c:	int3   
   140001a1d:	int3   
   140001a1e:	int3   
   140001a1f:	int3   
   140001a20:	mov    QWORD PTR [rsp+0x8],rbx
   140001a25:	push   rdi
   140001a26:	sub    rsp,0x20
   140001a2a:	mov    rdi,QWORD PTR [rcx+0x10]
   140001a2e:	mov    rax,QWORD PTR [rdi]
   140001a31:	test   edx,edx
   140001a33:	je     0x140001a3a
   140001a35:	mov    rbx,QWORD PTR [rax]
   140001a38:	jmp    0x140001a3e
   140001a3a:	mov    rbx,QWORD PTR [rax+0x8]
   140001a3e:	mov    rcx,rbx
   140001a41:	call   QWORD PTR [rip+0x6b59]        # 0x1400085a0
   140001a47:	xor    edx,edx
   140001a49:	mov    rcx,rdi
   140001a4c:	call   rbx
   140001a4e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a53:	xor    eax,eax
   140001a55:	add    rsp,0x20
   140001a59:	pop    rdi
   140001a5a:	ret    
   140001a5b:	int3   
   140001a5c:	int3   
   140001a5d:	int3   
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	int3   
   140001a61:	int3   
   140001a62:	int3   
   140001a63:	int3   
   140001a64:	mov    QWORD PTR [rsp+0x8],rbx
   140001a69:	push   rdi
   140001a6a:	sub    rsp,0x20
   140001a6e:	cmp    BYTE PTR [rcx],0x0
   140001a71:	jne    0x140001a89
   140001a73:	mov    rdi,QWORD PTR [rcx+0x8]
   140001a77:	mov    rbx,QWORD PTR [rcx+0x10]
   140001a7b:	mov    rcx,rdi
   140001a7e:	call   QWORD PTR [rip+0x6b1c]        # 0x1400085a0
   140001a84:	mov    rcx,QWORD PTR [rbx]
   140001a87:	call   rdi
   140001a89:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a8e:	add    rsp,0x20
   140001a92:	pop    rdi
   140001a93:	ret    
   140001a94:	int3   
   140001a95:	int3   
   140001a96:	int3   
   140001a97:	int3   
   140001a98:	int3   
   140001a99:	int3   
   140001a9a:	int3   
   140001a9b:	int3   
   140001a9c:	sub    rsp,0x28
   140001aa0:	mov    rcx,QWORD PTR [rcx]
   140001aa3:	test   rcx,rcx
   140001aa6:	je     0x140001aae
   140001aa8:	call   QWORD PTR [rip+0x6a72]        # 0x140008520
   140001aae:	add    rsp,0x28
   140001ab2:	ret    
   140001ab3:	int3   
   140001ab4:	int3   
   140001ab5:	int3   
   140001ab6:	int3   
   140001ab7:	int3   
   140001ab8:	int3   
   140001ab9:	int3   
   140001aba:	int3   
   140001abb:	int3   
   140001abc:	sub    rsp,0x28
   140001ac0:	mov    r9,r8
   140001ac3:	call   0x140001ad8
   140001ac8:	mov    rax,rcx
   140001acb:	add    rsp,0x28
   140001acf:	ret    
   140001ad0:	int3   
   140001ad1:	int3   
   140001ad2:	int3   
   140001ad3:	int3   
   140001ad4:	int3   
   140001ad5:	int3   
   140001ad6:	int3   
   140001ad7:	int3   
   140001ad8:	lea    rax,[rip+0x2c61]        # 0x140004740
   140001adf:	mov    BYTE PTR [rcx],0x0
   140001ae2:	mov    QWORD PTR [rcx+0x8],rax
   140001ae6:	mov    rax,rcx
   140001ae9:	mov    QWORD PTR [rcx+0x10],r9
   140001aed:	ret    
   140001aee:	int3   
   140001aef:	int3   
   140001af0:	int3   
   140001af1:	int3   
   140001af2:	int3   
   140001af3:	int3   
   140001af4:	mov    QWORD PTR [rsp+0x8],rbx
   140001af9:	mov    QWORD PTR [rsp+0x10],rsi
   140001afe:	push   rdi
   140001aff:	sub    rsp,0x20
   140001b03:	mov    rsi,QWORD PTR [rcx]
   140001b06:	mov    rdi,rcx
   140001b09:	test   rsi,rsi
   140001b0c:	je     0x140001b23
   140001b0e:	mov    rax,QWORD PTR [rsi]
   140001b11:	mov    rbx,QWORD PTR [rax+0x10]
   140001b15:	mov    rcx,rbx
   140001b18:	call   QWORD PTR [rip+0x6a82]        # 0x1400085a0
   140001b1e:	mov    rcx,rsi
   140001b21:	call   rbx
   140001b23:	and    QWORD PTR [rdi],0x0
   140001b27:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b2c:	mov    rsi,QWORD PTR [rsp+0x38]
   140001b31:	add    rsp,0x20
   140001b35:	pop    rdi
   140001b36:	ret    
   140001b37:	int3   
   140001b38:	int3   
   140001b39:	int3   
   140001b3a:	int3   
   140001b3b:	int3   
   140001b3c:	int3   
   140001b3d:	int3   
   140001b3e:	int3   
   140001b3f:	int3   
   140001b40:	sub    rsp,0x28
   140001b44:	mov    rcx,QWORD PTR [rcx]
   140001b47:	test   rcx,rcx
   140001b4a:	je     0x140001b52
   140001b4c:	call   QWORD PTR [rip+0x652e]        # 0x140008080
   140001b52:	add    rsp,0x28
   140001b56:	ret    
   140001b57:	int3   
   140001b58:	int3   
   140001b59:	int3   
   140001b5a:	int3   
   140001b5b:	int3   
   140001b5c:	int3   
   140001b5d:	int3   
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	mov    QWORD PTR [rsp+0x8],rbx
   140001b65:	mov    QWORD PTR [rsp+0x10],rbp
   140001b6a:	mov    QWORD PTR [rsp+0x18],rsi
   140001b6f:	push   rdi
   140001b70:	sub    rsp,0x20
   140001b74:	cmp    BYTE PTR [rip+0xab56],0x0        # 0x14000c6d1
   140001b7b:	mov    rbx,r9
   140001b7e:	mov    rdi,r8
   140001b81:	mov    rsi,rdx
   140001b84:	mov    rbp,rcx
   140001b87:	jne    0x140001b8e
   140001b89:	call   0x140001bf4
   140001b8e:	mov    r9,rbx
   140001b91:	mov    r8,rdi
   140001b94:	mov    rdx,rsi
   140001b97:	mov    rcx,rbp
   140001b9a:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b9f:	mov    rbp,QWORD PTR [rsp+0x38]
   140001ba4:	mov    rsi,QWORD PTR [rsp+0x40]
   140001ba9:	add    rsp,0x20
   140001bad:	pop    rdi
   140001bae:	jmp    0x140001894
   140001bb3:	int3   
   140001bb4:	int3   
   140001bb5:	int3   
   140001bb6:	int3   
   140001bb7:	int3   
   140001bb8:	int3   
   140001bb9:	int3   
   140001bba:	int3   
   140001bbb:	int3   
   140001bbc:	int3   
   140001bbd:	int3   
   140001bbe:	int3   
   140001bbf:	int3   
   140001bc0:	sub    rsp,0x28
   140001bc4:	call   QWORD PTR [rip+0x653e]        # 0x140008108
   140001bca:	mov    edx,DWORD PTR [rip+0xaafc]        # 0x14000c6cc
   140001bd0:	xor    ecx,ecx
   140001bd2:	call   QWORD PTR [rip+0x64f8]        # 0x1400080d0
   140001bd8:	and    DWORD PTR [rip+0xaaed],0x0        # 0x14000c6cc
   140001bdf:	mov    BYTE PTR [rip+0xaaea],0x1        # 0x14000c6d0
   140001be6:	add    rsp,0x28
   140001bea:	ret    
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	int3   
   140001bf1:	int3   
   140001bf2:	int3   
   140001bf3:	int3   
   140001bf4:	rex push rbp
   140001bf6:	push   rbx
   140001bf7:	push   rsi
   140001bf8:	push   rdi
   140001bf9:	push   r12
   140001bfb:	push   r13
   140001bfd:	push   r14
   140001bff:	push   r15
   140001c01:	lea    rbp,[rsp-0x1f]
   140001c06:	sub    rsp,0x98
   140001c0d:	mov    QWORD PTR [rbp-0x29],0xfffffffffffffffe
   140001c15:	mov    BYTE PTR [rip+0xaab5],0x1        # 0x14000c6d1
   140001c1c:	lea    rax,[rbp+0x6f]
   140001c20:	mov    QWORD PTR [rsp+0x20],rax
   140001c25:	lea    r9,[rip+0x74e4]        # 0x140009110
   140001c2c:	xor    edx,edx
   140001c2e:	lea    r8d,[rdx+0x1]
   140001c32:	lea    rcx,[rip+0x74c7]        # 0x140009100
   140001c39:	call   QWORD PTR [rip+0x64c1]        # 0x140008100
   140001c3f:	xor    r15d,r15d
   140001c42:	test   eax,eax
   140001c44:	js     0x140001e59
   140001c4a:	mov    rbx,QWORD PTR [rbp+0x6f]
   140001c4e:	mov    QWORD PTR [rbp+0x7f],rbx
   140001c52:	lea    rcx,[rip+0x6eef]        # 0x140008b48
   140001c59:	call   QWORD PTR [rip+0x6419]        # 0x140008078
   140001c5f:	mov    r12,rax
   140001c62:	test   rax,rax
   140001c65:	je     0x140001e3f
   140001c6b:	mov    QWORD PTR [rbp-0x21],rax
   140001c6f:	mov    rsi,QWORD PTR [rbp+0x6f]
   140001c73:	mov    rcx,QWORD PTR [rsi]
   140001c76:	mov    rdi,QWORD PTR [rcx+0x18]
   140001c7a:	mov    rcx,rdi
   140001c7d:	call   QWORD PTR [rip+0x691d]        # 0x1400085a0
   140001c83:	lea    rax,[rbp+0x77]
   140001c87:	mov    QWORD PTR [rsp+0x40],rax
   140001c8c:	mov    QWORD PTR [rsp+0x38],r15
   140001c91:	mov    QWORD PTR [rsp+0x30],r15
   140001c96:	mov    DWORD PTR [rsp+0x28],r15d
   140001c9b:	mov    QWORD PTR [rsp+0x20],r15
   140001ca0:	xor    r9d,r9d
   140001ca3:	xor    r8d,r8d
   140001ca6:	mov    rdx,r12
   140001ca9:	mov    rcx,rsi
   140001cac:	call   rdi
   140001cae:	test   eax,eax
   140001cb0:	js     0x140001e35
   140001cb6:	mov    rdi,QWORD PTR [rbp+0x77]
   140001cba:	mov    QWORD PTR [rbp-0x19],rdi
   140001cbe:	lea    rcx,[rip+0x6e9b]        # 0x140008b60
   140001cc5:	call   QWORD PTR [rip+0x63ad]        # 0x140008078
   140001ccb:	mov    r13,rax
   140001cce:	test   rax,rax
   140001cd1:	je     0x140001e1a
   140001cd7:	mov    QWORD PTR [rbp+0x67],r15
   140001cdb:	mov    QWORD PTR [rbp-0x11],rax
   140001cdf:	mov    r14,QWORD PTR [rbp+0x77]
   140001ce3:	mov    rcx,QWORD PTR [r14]
   140001ce6:	mov    rsi,QWORD PTR [rcx+0x30]
   140001cea:	mov    rcx,rsi
   140001ced:	call   QWORD PTR [rip+0x68ad]        # 0x1400085a0
   140001cf3:	mov    QWORD PTR [rsp+0x28],r15
   140001cf8:	lea    rax,[rbp+0x67]
   140001cfc:	mov    QWORD PTR [rsp+0x20],rax
   140001d01:	xor    r9d,r9d
   140001d04:	xor    r8d,r8d
   140001d07:	mov    rdx,r13
   140001d0a:	mov    rcx,r14
   140001d0d:	call   rsi
   140001d0f:	test   eax,eax
   140001d11:	js     0x140001e10
   140001d17:	mov    rsi,QWORD PTR [rbp+0x67]
   140001d1b:	mov    QWORD PTR [rbp-0x9],rsi
   140001d1f:	lea    rcx,[rbp-0x1]
   140001d23:	call   QWORD PTR [rip+0x633f]        # 0x140008068
   140001d29:	mov    r15,QWORD PTR [rbp+0x67]
   140001d2d:	mov    rax,QWORD PTR [r15]
   140001d30:	mov    r14,QWORD PTR [rax+0x20]
   140001d34:	mov    rcx,r14
   140001d37:	call   QWORD PTR [rip+0x6863]        # 0x1400085a0
   140001d3d:	and    QWORD PTR [rsp+0x28],0x0
   140001d43:	and    QWORD PTR [rsp+0x20],0x0
   140001d49:	lea    r9,[rbp-0x1]
   140001d4d:	xor    r8d,r8d
   140001d50:	lea    rdx,[rip+0x6e51]        # 0x140008ba8
   140001d57:	mov    rcx,r15
   140001d5a:	call   r14
   140001d5d:	test   eax,eax
   140001d5f:	js     0x140001d8a
   140001d61:	movzx  eax,WORD PTR [rbp-0x1]
   140001d65:	sub    ax,0x3
   140001d69:	mov    ecx,0xffef
   140001d6e:	test   cx,ax
   140001d71:	jne    0x140001d8a
   140001d73:	mov    eax,DWORD PTR [rbp+0x7]
   140001d76:	test   eax,eax
   140001d78:	je     0x140001d8a
   140001d7a:	mov    DWORD PTR [rip+0xa2a0],eax        # 0x14000c020
   140001d80:	lea    rcx,[rbp-0x1]
   140001d84:	call   QWORD PTR [rip+0x62e6]        # 0x140008070
   140001d8a:	mov    r15,QWORD PTR [rbp+0x67]
   140001d8e:	mov    rax,QWORD PTR [r15]
   140001d91:	mov    r14,QWORD PTR [rax+0x20]
   140001d95:	mov    rcx,r14
   140001d98:	call   QWORD PTR [rip+0x6802]        # 0x1400085a0
   140001d9e:	and    QWORD PTR [rsp+0x28],0x0
   140001da4:	and    QWORD PTR [rsp+0x20],0x0
   140001daa:	lea    r9,[rbp-0x1]
   140001dae:	xor    r8d,r8d
   140001db1:	lea    rdx,[rip+0x6e10]        # 0x140008bc8
   140001db8:	mov    rcx,r15
   140001dbb:	call   r14
   140001dbe:	test   eax,eax
   140001dc0:	js     0x140001df4
   140001dc2:	cmp    WORD PTR [rbp-0x1],0x3
   140001dc7:	jne    0x140001df4
   140001dc9:	mov    ecx,DWORD PTR [rbp+0x7]
   140001dcc:	lea    eax,[rcx-0x1]
   140001dcf:	cmp    eax,0x11557
   140001dd4:	ja     0x140001df4
   140001dd6:	imul   r8d,ecx,0xea60
   140001ddd:	lea    r9,[rip+0xfffffffffffffddc]        # 0x140001bc0
   140001de4:	xor    edx,edx
   140001de6:	xor    ecx,ecx
   140001de8:	call   QWORD PTR [rip+0x62da]        # 0x1400080c8
   140001dee:	mov    DWORD PTR [rip+0xa8d8],eax        # 0x14000c6cc
   140001df4:	test   rsi,rsi
   140001df7:	je     0x140001e10
   140001df9:	mov    rax,QWORD PTR [rsi]
   140001dfc:	mov    r14,QWORD PTR [rax+0x10]
   140001e00:	mov    rcx,r14
   140001e03:	call   QWORD PTR [rip+0x6797]        # 0x1400085a0
   140001e09:	mov    rcx,rsi
   140001e0c:	call   r14
   140001e0f:	nop
   140001e10:	mov    rcx,r13
   140001e13:	call   QWORD PTR [rip+0x6267]        # 0x140008080
   140001e19:	nop
   140001e1a:	test   rdi,rdi
   140001e1d:	je     0x140001e35
   140001e1f:	mov    rax,QWORD PTR [rdi]
   140001e22:	mov    rsi,QWORD PTR [rax+0x10]
   140001e26:	mov    rcx,rsi
   140001e29:	call   QWORD PTR [rip+0x6771]        # 0x1400085a0
   140001e2f:	mov    rcx,rdi
   140001e32:	call   rsi
   140001e34:	nop
   140001e35:	mov    rcx,r12
   140001e38:	call   QWORD PTR [rip+0x6242]        # 0x140008080
   140001e3e:	nop
   140001e3f:	test   rbx,rbx
   140001e42:	je     0x140001e59
   140001e44:	mov    rax,QWORD PTR [rbx]
   140001e47:	mov    rdi,QWORD PTR [rax+0x10]
   140001e4b:	mov    rcx,rdi
   140001e4e:	call   QWORD PTR [rip+0x674c]        # 0x1400085a0
   140001e54:	mov    rcx,rbx
   140001e57:	call   rdi
   140001e59:	add    rsp,0x98
   140001e60:	pop    r15
   140001e62:	pop    r14
   140001e64:	pop    r13
   140001e66:	pop    r12
   140001e68:	pop    rdi
   140001e69:	pop    rsi
   140001e6a:	pop    rbx
   140001e6b:	pop    rbp
   140001e6c:	ret    
   140001e6d:	int3   
   140001e6e:	int3   
   140001e6f:	int3   
   140001e70:	int3   
   140001e71:	int3   
   140001e72:	int3   
   140001e73:	int3   
   140001e74:	int3   
   140001e75:	int3   
   140001e76:	int3   
   140001e77:	int3   
   140001e78:	int3   
   140001e79:	int3   
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	int3   
   140001e7d:	int3   
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	mov    rax,rsp
   140001e83:	mov    QWORD PTR [rax+0x8],rcx
   140001e87:	push   rsi
   140001e88:	push   rdi
   140001e89:	push   r14
   140001e8b:	sub    rsp,0x30
   140001e8f:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140001e97:	mov    QWORD PTR [rax+0x10],rbx
   140001e9b:	mov    QWORD PTR [rax+0x20],rbp
   140001e9f:	mov    ebp,edx
   140001ea1:	mov    rdi,rcx
   140001ea4:	lea    rax,[rip+0x6b55]        # 0x140008a00
   140001eab:	mov    QWORD PTR [rcx],rax
   140001eae:	mov    rsi,QWORD PTR [rcx+0x50]
   140001eb2:	test   rsi,rsi
   140001eb5:	je     0x140001ecc
   140001eb7:	mov    rax,QWORD PTR [rsi]
   140001eba:	mov    rbx,QWORD PTR [rax+0x10]
   140001ebe:	mov    rcx,rbx
   140001ec1:	call   QWORD PTR [rip+0x66d9]        # 0x1400085a0
   140001ec7:	mov    rcx,rsi
   140001eca:	call   rbx
   140001ecc:	mov    rsi,QWORD PTR [rdi+0x70]
   140001ed0:	test   rsi,rsi
   140001ed3:	je     0x140001f19
   140001ed5:	lea    rdx,[rsi+0x10]
   140001ed9:	lea    rcx,[rsp+0x60]
   140001ede:	call   QWORD PTR [rip+0x65ac]        # 0x140008490
   140001ee4:	nop
   140001ee5:	add    DWORD PTR [rsi],0xffffffff
   140001ee8:	jne    0x140001f0d
   140001eea:	mov    r14,QWORD PTR [rsi+0x8]
   140001eee:	test   r14,r14
   140001ef1:	je     0x140001f0d
   140001ef3:	mov    rax,QWORD PTR [r14]
   140001ef6:	mov    rbx,QWORD PTR [rax+0x10]
   140001efa:	mov    rcx,rbx
   140001efd:	call   QWORD PTR [rip+0x669d]        # 0x1400085a0
   140001f03:	mov    rcx,r14
   140001f06:	call   rbx
   140001f08:	and    QWORD PTR [rsi+0x8],0x0
   140001f0d:	lea    rcx,[rsp+0x60]
   140001f12:	call   QWORD PTR [rip+0x6570]        # 0x140008488
   140001f18:	nop
   140001f19:	lea    rcx,[rdi+0x68]
   140001f1d:	call   QWORD PTR [rip+0x662d]        # 0x140008550
   140001f23:	nop
   140001f24:	lea    rcx,[rdi+0x60]
   140001f28:	call   QWORD PTR [rip+0x6622]        # 0x140008550
   140001f2e:	nop
   140001f2f:	lea    rcx,[rdi+0x38]
   140001f33:	call   QWORD PTR [rip+0x6617]        # 0x140008550
   140001f39:	nop
   140001f3a:	lea    rcx,[rdi+0x30]
   140001f3e:	call   QWORD PTR [rip+0x660c]        # 0x140008550
   140001f44:	nop
   140001f45:	lea    rax,[rip+0x6a14]        # 0x140008960
   140001f4c:	mov    QWORD PTR [rdi+0x20],rax
   140001f50:	mov    rcx,rdi
   140001f53:	call   QWORD PTR [rip+0x65ff]        # 0x140008558
   140001f59:	test   bpl,0x1
   140001f5d:	je     0x140001f68
   140001f5f:	mov    rcx,rdi
   140001f62:	call   QWORD PTR [rip+0x6580]        # 0x1400084e8
   140001f68:	mov    rax,rdi
   140001f6b:	mov    rbx,QWORD PTR [rsp+0x58]
   140001f70:	mov    rbp,QWORD PTR [rsp+0x68]
   140001f75:	add    rsp,0x30
   140001f79:	pop    r14
   140001f7b:	pop    rdi
   140001f7c:	pop    rsi
   140001f7d:	ret    
   140001f7e:	int3   
   140001f7f:	int3   
   140001f80:	int3   
   140001f81:	int3   
   140001f82:	int3   
   140001f83:	int3   
   140001f84:	lea    rax,[rip+0x69d5]        # 0x140008960
   140001f8b:	mov    QWORD PTR [rcx],rax
   140001f8e:	ret    
   140001f8f:	int3   
   140001f90:	int3   
   140001f91:	int3   
   140001f92:	int3   
   140001f93:	int3   
   140001f94:	int3   
   140001f95:	int3   
   140001f96:	int3   
   140001f97:	int3   
   140001f98:	sub    rsp,0x38
   140001f9c:	and    QWORD PTR [rsp+0x20],0x0
   140001fa2:	movzx  r9d,dx
   140001fa6:	mov    edx,0x2b
   140001fab:	call   QWORD PTR [rip+0x646f]        # 0x140008420
   140001fb1:	add    rsp,0x38
   140001fb5:	ret    
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	int3   
   140001fb9:	int3   
   140001fba:	int3   
   140001fbb:	int3   
   140001fbc:	mov    r11,rsp
   140001fbf:	mov    DWORD PTR [r11+0x20],r9d
   140001fc3:	sub    rsp,0x48
   140001fc7:	and    QWORD PTR [r11-0x18],0x0
   140001fcc:	lea    rax,[r11+0x20]
   140001fd0:	movzx  r9d,dx
   140001fd4:	mov    edx,0x2b
   140001fd9:	mov    QWORD PTR [r11-0x20],0x4
   140001fe1:	mov    QWORD PTR [r11-0x28],rax
   140001fe5:	call   QWORD PTR [rip+0x6435]        # 0x140008420
   140001feb:	add    rsp,0x48
   140001fef:	ret    
   140001ff0:	int3   
   140001ff1:	int3   
   140001ff2:	int3   
   140001ff3:	int3   
   140001ff4:	int3   
   140001ff5:	int3   
   140001ff6:	int3   
   140001ff7:	int3   
   140001ff8:	mov    DWORD PTR [rsp+0x20],r9d
   140001ffd:	sub    rsp,0x58
   140002001:	mov    rax,QWORD PTR [rsp+0x80]
   140002009:	xor    r9d,r9d
   14000200c:	mov    r10,rcx
   14000200f:	test   rax,rax
   140002012:	je     0x140002038
   140002014:	cmp    WORD PTR [rax],r9w
   140002018:	jne    0x140002020
   14000201a:	lea    ecx,[r9+0xe]
   14000201e:	jmp    0x14000203d
   140002020:	or     rcx,0xffffffffffffffff
   140002024:	inc    rcx
   140002027:	cmp    WORD PTR [rax+rcx*2],r9w
   14000202c:	jne    0x140002024
   14000202e:	lea    rcx,[rcx*2+0x2]
   140002036:	jmp    0x14000203d
   140002038:	mov    ecx,0xa
   14000203d:	test   rax,rax
   140002040:	je     0x140002053
   140002042:	cmp    WORD PTR [rax],r9w
   140002046:	lea    r8,[rip+0x6b8b]        # 0x140008bd8
   14000204d:	cmove  rax,r8
   140002051:	jmp    0x14000205a
   140002053:	lea    rax,[rip+0x6b8e]        # 0x140008be8
   14000205a:	mov    QWORD PTR [rsp+0x40],r9
   14000205f:	lea    r8,[rip+0x6d82]        # 0x140008de8
   140002066:	mov    QWORD PTR [rsp+0x38],rcx
   14000206b:	mov    rcx,r10
   14000206e:	mov    QWORD PTR [rsp+0x30],rax
   140002073:	lea    rax,[rsp+0x78]
   140002078:	movzx  r9d,dx
   14000207c:	mov    edx,0x2b
   140002081:	mov    QWORD PTR [rsp+0x28],0x4
   14000208a:	mov    QWORD PTR [rsp+0x20],rax
   14000208f:	call   QWORD PTR [rip+0x638b]        # 0x140008420
   140002095:	add    rsp,0x58
   140002099:	ret    
   14000209a:	int3   
   14000209b:	int3   
   14000209c:	int3   
   14000209d:	int3   
   14000209e:	int3   
   14000209f:	int3   
   1400020a0:	sub    rsp,0x58
   1400020a4:	xor    r10d,r10d
   1400020a7:	test   r9,r9
   1400020aa:	je     0x1400020d0
   1400020ac:	cmp    WORD PTR [r9],r10w
   1400020b0:	jne    0x1400020b8
   1400020b2:	lea    eax,[r10+0xe]
   1400020b6:	jmp    0x1400020d5
   1400020b8:	or     rax,0xffffffffffffffff
   1400020bc:	inc    rax
   1400020bf:	cmp    WORD PTR [r9+rax*2],r10w
   1400020c4:	jne    0x1400020bc
   1400020c6:	lea    rax,[rax*2+0x2]
   1400020ce:	jmp    0x1400020d5
   1400020d0:	mov    eax,0xa
   1400020d5:	test   r9,r9
   1400020d8:	je     0x1400020eb
   1400020da:	cmp    WORD PTR [r9],r10w
   1400020de:	lea    r8,[rip+0x6af3]        # 0x140008bd8
   1400020e5:	cmove  r9,r8
   1400020e9:	jmp    0x1400020f2
   1400020eb:	lea    r9,[rip+0x6af6]        # 0x140008be8
   1400020f2:	mov    QWORD PTR [rsp+0x40],r10
   1400020f7:	lea    r8,[rsp+0x80]
   1400020ff:	mov    QWORD PTR [rsp+0x38],0x4
   140002108:	mov    QWORD PTR [rsp+0x30],r8
   14000210d:	lea    r8,[rip+0x6cd4]        # 0x140008de8
   140002114:	mov    QWORD PTR [rsp+0x28],rax
   140002119:	mov    QWORD PTR [rsp+0x20],r9
   14000211e:	movzx  r9d,dx
   140002122:	mov    edx,0x2b
   140002127:	call   QWORD PTR [rip+0x62f3]        # 0x140008420
   14000212d:	add    rsp,0x58
   140002131:	ret    
   140002132:	int3   
   140002133:	int3   
   140002134:	int3   
   140002135:	int3   
   140002136:	int3   
   140002137:	int3   
   140002138:	sub    rsp,0x58
   14000213c:	test   r9,r9
   14000213f:	je     0x140002154
   140002141:	or     rdx,0xffffffffffffffff
   140002145:	inc    rdx
   140002148:	cmp    BYTE PTR [r9+rdx*1],0x0
   14000214d:	jne    0x140002145
   14000214f:	inc    rdx
   140002152:	jmp    0x140002159
   140002154:	mov    edx,0x5
   140002159:	test   r9,r9
   14000215c:	lea    r8,[rsp+0x80]
   140002164:	lea    rax,[rip+0x6a89]        # 0x140008bf4
   14000216b:	cmovne rax,r9
   14000216f:	and    QWORD PTR [rsp+0x40],0x0
   140002175:	mov    QWORD PTR [rsp+0x38],0x4
   14000217e:	mov    r9d,0x19
   140002184:	mov    QWORD PTR [rsp+0x30],r8
   140002189:	lea    r8,[rip+0x6c58]        # 0x140008de8
   140002190:	mov    QWORD PTR [rsp+0x28],rdx
   140002195:	mov    QWORD PTR [rsp+0x20],rax
   14000219a:	lea    edx,[r9+0x12]
   14000219e:	call   QWORD PTR [rip+0x627c]        # 0x140008420
   1400021a4:	add    rsp,0x58
   1400021a8:	ret    
   1400021a9:	int3   
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	int3   
   1400021ad:	int3   
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	mov    rax,rsp
   1400021b3:	push   r14
   1400021b5:	sub    rsp,0x30
   1400021b9:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400021c1:	mov    QWORD PTR [rax+0x8],rbx
   1400021c5:	mov    QWORD PTR [rax+0x10],rsi
   1400021c9:	mov    QWORD PTR [rax+0x18],rdi
   1400021cd:	mov    r14,r8
   1400021d0:	mov    rsi,rdx
   1400021d3:	mov    rbx,rcx
   1400021d6:	cmp    BYTE PTR [rip+0xa4f3],0x0        # 0x14000c6d0
   1400021dd:	je     0x1400021e9
   1400021df:	mov    eax,0x80010108
   1400021e4:	jmp    0x14000230a
   1400021e9:	mov    ecx,0x78
   1400021ee:	call   QWORD PTR [rip+0x62fc]        # 0x1400084f0
   1400021f4:	mov    rdi,rax
   1400021f7:	mov    QWORD PTR [rsp+0x58],rax
   1400021fc:	test   rax,rax
   1400021ff:	je     0x14000226b
   140002201:	mov    rax,QWORD PTR [rbx+0x8]
   140002205:	xor    r8d,r8d
   140002208:	mov    rdx,QWORD PTR [rax+0x10]
   14000220c:	mov    rcx,rdi
   14000220f:	call   QWORD PTR [rip+0x634b]        # 0x140008560
   140002215:	nop
   140002216:	lea    rax,[rip+0x67e3]        # 0x140008a00
   14000221d:	mov    QWORD PTR [rdi],rax
   140002220:	mov    QWORD PTR [rdi+0x28],rdi
   140002224:	lea    rax,[rip+0x680d]        # 0x140008a38
   14000222b:	mov    QWORD PTR [rdi+0x20],rax
   14000222f:	lea    rcx,[rdi+0x30]
   140002233:	call   QWORD PTR [rip+0x629f]        # 0x1400084d8
   140002239:	nop
   14000223a:	lea    rcx,[rdi+0x38]
   14000223e:	call   QWORD PTR [rip+0x6294]        # 0x1400084d8
   140002244:	nop
   140002245:	and    QWORD PTR [rdi+0x40],0x0
   14000224a:	and    QWORD PTR [rdi+0x50],0x0
   14000224f:	lea    rcx,[rdi+0x60]
   140002253:	call   QWORD PTR [rip+0x627f]        # 0x1400084d8
   140002259:	nop
   14000225a:	lea    rcx,[rdi+0x68]
   14000225e:	call   QWORD PTR [rip+0x6274]        # 0x1400084d8
   140002264:	and    QWORD PTR [rdi+0x70],0x0
   140002269:	jmp    0x14000226d
   14000226b:	xor    edi,edi
   14000226d:	test   rdi,rdi
   140002270:	jne    0x14000227c
   140002272:	mov    eax,0x80041006
   140002277:	jmp    0x14000230a
   14000227c:	mov    rbx,rdi
   14000227f:	mov    QWORD PTR [rsp+0x58],rbx
   140002284:	mov    rdx,rsi
   140002287:	mov    rcx,rdi
   14000228a:	call   0x140002820
   14000228f:	mov    esi,eax
   140002291:	test   eax,eax
   140002293:	jns    0x1400022d2
   140002295:	cmp    eax,0xffffffff
   140002298:	jne    0x1400022cc
   14000229a:	lea    rax,[rip+0x9d87]        # 0x14000c028
   1400022a1:	mov    rcx,QWORD PTR [rip+0x9d80]        # 0x14000c028
   1400022a8:	cmp    rcx,rax
   1400022ab:	je     0x1400022cc
   1400022ad:	test   BYTE PTR [rcx+0x1c],0x8
   1400022b1:	je     0x1400022cc
   1400022b3:	cmp    BYTE PTR [rcx+0x19],0x0
   1400022b7:	jne    0x1400022cc
   1400022b9:	lea    edx,[rsi+0xb]
   1400022bc:	lea    r8,[rip+0x6b25]        # 0x140008de8
   1400022c3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400022c7:	call   0x140001f98
   1400022cc:	and    QWORD PTR [r14],0x0
   1400022d0:	jmp    0x1400022e9
   1400022d2:	xor    ebx,ebx
   1400022d4:	mov    r8,r14
   1400022d7:	lea    rdx,[rip+0x6e52]        # 0x140009130
   1400022de:	mov    rcx,rdi
   1400022e1:	call   QWORD PTR [rip+0x6249]        # 0x140008530
   1400022e7:	mov    esi,eax
   1400022e9:	test   rbx,rbx
   1400022ec:	je     0x140002308
   1400022ee:	mov    rcx,QWORD PTR [rbx]
   1400022f1:	mov    rdi,QWORD PTR [rcx+0x28]
   1400022f5:	mov    rcx,rdi
   1400022f8:	call   QWORD PTR [rip+0x62a2]        # 0x1400085a0
   1400022fe:	mov    edx,0x1
   140002303:	mov    rcx,rbx
   140002306:	call   rdi
   140002308:	mov    eax,esi
   14000230a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000230f:	mov    rsi,QWORD PTR [rsp+0x48]
   140002314:	mov    rdi,QWORD PTR [rsp+0x50]
   140002319:	add    rsp,0x30
   14000231d:	pop    r14
   14000231f:	ret    
   140002320:	int3   
   140002321:	int3   
   140002322:	int3   
   140002323:	int3   
   140002324:	int3   
   140002325:	int3   
   140002326:	int3   
   140002327:	int3   
   140002328:	int3   
   140002329:	int3   
   14000232a:	int3   
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	mov    rax,QWORD PTR [rdx]
   140002333:	cmp    rax,QWORD PTR [rip+0x6de6]        # 0x140009120
   14000233a:	jne    0x14000234e
   14000233c:	mov    rax,QWORD PTR [rdx+0x8]
   140002340:	cmp    rax,QWORD PTR [rip+0x6de1]        # 0x140009128
   140002347:	jne    0x14000234e
   140002349:	lea    rax,[rcx+0x20]
   14000234d:	ret    
   14000234e:	xor    eax,eax
   140002350:	ret    
   140002351:	int3   
   140002352:	int3   
   140002353:	int3   
   140002354:	int3   
   140002355:	int3   
   140002356:	int3   
   140002357:	int3   
   140002358:	int3   
   140002359:	int3   
   14000235a:	int3   
   14000235b:	int3   
   14000235c:	int3   
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	mov    QWORD PTR [rsp+0x8],rbx
   140002365:	push   rdi
   140002366:	sub    rsp,0x20
   14000236a:	xor    r9d,r9d
   14000236d:	mov    QWORD PTR [r8],r9
   140002370:	mov    rax,QWORD PTR [rdx]
   140002373:	cmp    rax,QWORD PTR [rip+0x6b66]        # 0x140008ee0
   14000237a:	jne    0x140002389
   14000237c:	mov    rax,QWORD PTR [rdx+0x8]
   140002380:	cmp    rax,QWORD PTR [rip+0x6b61]        # 0x140008ee8
   140002387:	je     0x1400023a2
   140002389:	mov    rax,QWORD PTR [rdx]
   14000238c:	cmp    rax,QWORD PTR [rip+0x6b8d]        # 0x140008f20
   140002393:	jne    0x1400023a7
   140002395:	mov    rax,QWORD PTR [rdx+0x8]
   140002399:	cmp    rax,QWORD PTR [rip+0x6b88]        # 0x140008f28
   1400023a0:	jne    0x1400023a7
   1400023a2:	mov    QWORD PTR [r8],rcx
   1400023a5:	jmp    0x1400023cc
   1400023a7:	mov    rax,QWORD PTR [rdx]
   1400023aa:	cmp    rax,QWORD PTR [rip+0x6b5f]        # 0x140008f10
   1400023b1:	jne    0x1400023e8
   1400023b3:	mov    rax,QWORD PTR [rdx+0x8]
   1400023b7:	cmp    rax,QWORD PTR [rip+0x6b5a]        # 0x140008f18
   1400023be:	jne    0x1400023e8
   1400023c0:	test   rcx,rcx
   1400023c3:	je     0x1400023c9
   1400023c5:	lea    r9,[rcx+0x8]
   1400023c9:	mov    QWORD PTR [r8],r9
   1400023cc:	mov    rdi,QWORD PTR [r8]
   1400023cf:	mov    rax,QWORD PTR [rdi]
   1400023d2:	mov    rbx,QWORD PTR [rax+0x8]
   1400023d6:	mov    rcx,rbx
   1400023d9:	call   QWORD PTR [rip+0x61c1]        # 0x1400085a0
   1400023df:	mov    rcx,rdi
   1400023e2:	call   rbx
   1400023e4:	xor    eax,eax
   1400023e6:	jmp    0x1400023ed
   1400023e8:	mov    eax,0x80004002
   1400023ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400023f2:	add    rsp,0x20
   1400023f6:	pop    rdi
   1400023f7:	ret    
   1400023f8:	int3   
   1400023f9:	int3   
   1400023fa:	int3   
   1400023fb:	int3   
   1400023fc:	int3   
   1400023fd:	int3   
   1400023fe:	int3   
   1400023ff:	int3   
   140002400:	mov    eax,0x1
   140002405:	lock xadd DWORD PTR [rcx+0x10],eax
   14000240a:	inc    eax
   14000240c:	ret    
   14000240d:	int3   
   14000240e:	int3   
   14000240f:	int3   
   140002410:	int3   
   140002411:	int3   
   140002412:	int3   
   140002413:	int3   
   140002414:	int3   
   140002415:	int3   
   140002416:	int3   
   140002417:	int3   
   140002418:	int3   
   140002419:	int3   
   14000241a:	int3   
   14000241b:	int3   
   14000241c:	int3   
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	mov    QWORD PTR [rsp+0x8],rbx
   140002425:	mov    QWORD PTR [rsp+0x10],rsi
   14000242a:	mov    QWORD PTR [rsp+0x18],rdi
   14000242f:	push   r14
   140002431:	sub    rsp,0x20
   140002435:	mov    rdi,rcx
   140002438:	or     esi,0xffffffff
   14000243b:	lock xadd DWORD PTR [rcx+0x10],esi
   140002440:	sub    esi,0x1
   140002443:	jne    0x140002495
   140002445:	test   rcx,rcx
   140002448:	je     0x140002495
   14000244a:	mov    r14,QWORD PTR [rcx+0x18]
   14000244e:	lea    rax,[rip+0x6553]        # 0x1400089a8
   140002455:	mov    QWORD PTR [rcx],rax
   140002458:	lea    rax,[rip+0x6521]        # 0x140008980
   14000245f:	mov    QWORD PTR [rcx+0x8],rax
   140002463:	test   r14,r14
   140002466:	je     0x14000247d
   140002468:	mov    rax,QWORD PTR [r14]
   14000246b:	mov    rbx,QWORD PTR [rax+0x10]
   14000246f:	mov    rcx,rbx
   140002472:	call   QWORD PTR [rip+0x6128]        # 0x1400085a0
   140002478:	mov    rcx,r14
   14000247b:	call   rbx
   14000247d:	mov    rcx,QWORD PTR [rdi+0x20]
   140002481:	test   rcx,rcx
   140002484:	je     0x14000248c
   140002486:	call   QWORD PTR [rip+0x6094]        # 0x140008520
   14000248c:	mov    rcx,rdi
   14000248f:	call   QWORD PTR [rip+0x6053]        # 0x1400084e8
   140002495:	mov    rbx,QWORD PTR [rsp+0x30]
   14000249a:	mov    eax,esi
   14000249c:	mov    rsi,QWORD PTR [rsp+0x38]
   1400024a1:	mov    rdi,QWORD PTR [rsp+0x40]
   1400024a6:	add    rsp,0x20
   1400024aa:	pop    r14
   1400024ac:	ret    
   1400024ad:	int3   
   1400024ae:	int3   
   1400024af:	int3   
   1400024b0:	int3   
   1400024b1:	int3   
   1400024b2:	int3   
   1400024b3:	int3   
   1400024b4:	int3   
   1400024b5:	int3   
   1400024b6:	int3   
   1400024b7:	int3   
   1400024b8:	int3   
   1400024b9:	int3   
   1400024ba:	int3   
   1400024bb:	int3   
   1400024bc:	int3   
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	mov    eax,0x80004001
   1400024c5:	ret    
   1400024c6:	int3   
   1400024c7:	int3   
   1400024c8:	int3   
   1400024c9:	int3   
   1400024ca:	int3   
   1400024cb:	int3   
   1400024cc:	int3   
   1400024cd:	int3   
   1400024ce:	int3   
   1400024cf:	int3   
   1400024d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400024d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400024da:	mov    QWORD PTR [rsp+0x20],rsi
   1400024df:	push   rdi
   1400024e0:	push   r12
   1400024e2:	push   r13
   1400024e4:	push   r14
   1400024e6:	push   r15
   1400024e8:	sub    rsp,0x40
   1400024ec:	mov    r14,rdx
   1400024ef:	lea    rdi,[rip+0x670a]        # 0x140008c00
   1400024f6:	sub    r14,rdi
   1400024f9:	mov    rsi,r9
   1400024fc:	xor    r12d,r12d
   1400024ff:	mov    ebp,r8d
   140002502:	mov    r15,rcx
   140002505:	lea    r13d,[r12+0x7f]
   14000250a:	movzx  ebx,WORD PTR [r14+rdi*1]
   14000250f:	test   bx,bx
   140002512:	jne    0x14000251e
   140002514:	cmp    WORD PTR [rdi],r12w
   140002518:	je     0x1400025d8
   14000251e:	cmp    bx,r13w
   140002522:	ja     0x140002533
   140002524:	lea    eax,[rbx-0x41]
   140002527:	cmp    ax,0x19
   14000252b:	ja     0x140002570
   14000252d:	add    bx,0x20
   140002531:	jmp    0x140002570
   140002533:	lea    rax,[rsp+0x38]
   140002538:	mov    DWORD PTR [rsp+0x28],0x1
   140002540:	mov    r9d,0x1
   140002546:	mov    QWORD PTR [rsp+0x20],rax
   14000254b:	lea    r8,[rsp+0x78]
   140002550:	mov    WORD PTR [rsp+0x78],bx
   140002555:	mov    edx,0x100
   14000255a:	mov    ecx,r13d
   14000255d:	call   QWORD PTR [rip+0x5c65]        # 0x1400081c8
   140002563:	movzx  ebx,WORD PTR [rsp+0x38]
   140002568:	test   eax,eax
   14000256a:	cmove  bx,WORD PTR [rsp+0x78]
   140002570:	movzx  ecx,WORD PTR [rdi]
   140002573:	cmp    cx,r13w
   140002577:	ja     0x140002588
   140002579:	lea    eax,[rcx-0x41]
   14000257c:	cmp    ax,0x19
   140002580:	ja     0x1400025c5
   140002582:	add    cx,0x20
   140002586:	jmp    0x1400025c5
   140002588:	mov    WORD PTR [rsp+0x30],cx
   14000258d:	lea    rax,[rsp+0x3c]
   140002592:	mov    ecx,r13d
   140002595:	mov    DWORD PTR [rsp+0x28],0x1
   14000259d:	mov    r9d,0x1
   1400025a3:	mov    QWORD PTR [rsp+0x20],rax
   1400025a8:	lea    r8,[rsp+0x30]
   1400025ad:	mov    edx,0x100
   1400025b2:	call   QWORD PTR [rip+0x5c10]        # 0x1400081c8
   1400025b8:	movzx  ecx,WORD PTR [rsp+0x3c]
   1400025bd:	test   eax,eax
   1400025bf:	cmove  cx,WORD PTR [rsp+0x30]
   1400025c5:	movzx  eax,cx
   1400025c8:	movzx  ecx,bx
   1400025cb:	sub    ecx,eax
   1400025cd:	jne    0x140002628
   1400025cf:	add    rdi,0x2
   1400025d3:	jmp    0x14000250a
   1400025d8:	mov    rax,QWORD PTR [rsp+0x90]
   1400025e0:	test   rax,rax
   1400025e3:	je     0x1400025e8
   1400025e5:	mov    QWORD PTR [rax],r12
   1400025e8:	test   rsi,rsi
   1400025eb:	je     0x1400025f0
   1400025ed:	mov    QWORD PTR [rsi],r12
   1400025f0:	test   bpl,0x1
   1400025f4:	je     0x140002624
   1400025f6:	test   rsi,rsi
   1400025f9:	jne    0x140002602
   1400025fb:	mov    eax,0x80004003
   140002600:	jmp    0x14000262d
   140002602:	mov    rdi,QWORD PTR [r15+0x18]
   140002606:	mov    rax,QWORD PTR [rdi]
   140002609:	mov    rbx,QWORD PTR [rax]
   14000260c:	mov    rcx,rbx
   14000260f:	call   QWORD PTR [rip+0x5f8b]        # 0x1400085a0
   140002615:	mov    r8,rsi
   140002618:	lea    rdx,[rip+0x68c1]        # 0x140008ee0
   14000261f:	mov    rcx,rdi
   140002622:	call   rbx
   140002624:	xor    eax,eax
   140002626:	jmp    0x14000262d
   140002628:	mov    eax,0x8002802b
   14000262d:	lea    r11,[rsp+0x40]
   140002632:	mov    rbx,QWORD PTR [r11+0x30]
   140002636:	mov    rbp,QWORD PTR [r11+0x40]
   14000263a:	mov    rsi,QWORD PTR [r11+0x48]
   14000263e:	mov    rsp,r11
   140002641:	pop    r15
   140002643:	pop    r14
   140002645:	pop    r13
   140002647:	pop    r12
   140002649:	pop    rdi
   14000264a:	ret    
   14000264b:	int3   
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	int3   
   140002651:	int3   
   140002652:	int3   
   140002653:	int3   
   140002654:	int3   
   140002655:	int3   
   140002656:	int3   
   140002657:	int3   
   140002658:	int3   
   140002659:	int3   
   14000265a:	int3   
   14000265b:	int3   
   14000265c:	int3   
   14000265d:	int3   
   14000265e:	int3   
   14000265f:	int3   
   140002660:	mov    QWORD PTR [rsp+0x18],rbx
   140002665:	mov    QWORD PTR [rsp+0x20],rsi
   14000266a:	push   rbp
   14000266b:	push   rdi
   14000266c:	push   r14
   14000266e:	lea    rbp,[rsp-0x190]
   140002676:	sub    rsp,0x290
   14000267d:	mov    rax,QWORD PTR [rip+0x9984]        # 0x14000c008
   140002684:	xor    rax,rsp
   140002687:	mov    QWORD PTR [rbp+0x180],rax
   14000268e:	mov    rax,QWORD PTR [rdx]
   140002691:	mov    rdi,rcx
   140002694:	mov    rsi,rdx
   140002697:	mov    rbx,QWORD PTR [rax+0x18]
   14000269b:	mov    rcx,rbx
   14000269e:	call   QWORD PTR [rip+0x5efc]        # 0x1400085a0
   1400026a4:	lea    rdx,[rsp+0x40]
   1400026a9:	mov    rcx,rsi
   1400026ac:	call   rbx
   1400026ae:	xor    r14d,r14d
   1400026b1:	test   eax,eax
   1400026b3:	js     0x14000271a
   1400026b5:	mov    rdx,QWORD PTR [rsp+0x48]
   1400026ba:	test   rdx,rdx
   1400026bd:	je     0x1400026e2
   1400026bf:	mov    rcx,QWORD PTR [rdi+0x20]
   1400026c3:	add    rcx,0x60
   1400026c7:	call   QWORD PTR [rip+0x5e03]        # 0x1400084d0
   1400026cd:	mov    rcx,QWORD PTR [rdi+0x20]
   1400026d1:	lea    rdx,[rip+0x6540]        # 0x140008c18
   1400026d8:	add    rcx,0x60
   1400026dc:	call   QWORD PTR [rip+0x5de6]        # 0x1400084c8
   1400026e2:	mov    rcx,QWORD PTR [rdi+0x20]
   1400026e6:	mov    rdx,QWORD PTR [rsp+0x50]
   1400026eb:	add    rcx,0x60
   1400026ef:	test   rdx,rdx
   1400026f2:	jne    0x1400026fb
   1400026f4:	lea    rdx,[rip+0x6525]        # 0x140008c20
   1400026fb:	call   QWORD PTR [rip+0x5dc7]        # 0x1400084c8
   140002701:	mov    eax,DWORD PTR [rsp+0x78]
   140002705:	mov    ecx,0x3e8
   14000270a:	cmp    WORD PTR [rsp+0x40],cx
   14000270f:	mov    edx,0x80041001
   140002714:	cmovae eax,edx
   140002717:	mov    DWORD PTR [rdi+0x28],eax
   14000271a:	mov    rax,QWORD PTR [rsi]
   14000271d:	mov    DWORD PTR [rsp+0x34],r14d
   140002722:	mov    DWORD PTR [rsp+0x30],r14d
   140002727:	mov    rbx,QWORD PTR [rax+0x20]
   14000272b:	mov    rcx,rbx
   14000272e:	call   QWORD PTR [rip+0x5e6c]        # 0x1400085a0
   140002734:	lea    r9,[rsp+0x30]
   140002739:	mov    rcx,rsi
   14000273c:	lea    r8,[rsp+0x34]
   140002741:	lea    rdx,[rsp+0x38]
   140002746:	call   rbx
   140002748:	test   eax,eax
   14000274a:	js     0x1400027d4
   140002750:	mov    rcx,QWORD PTR [rdi+0x20]
   140002754:	or     rax,0xffffffffffffffff
   140002758:	lea    rdx,[rcx+0x38]
   14000275c:	mov    r8,QWORD PTR [rdx]
   14000275f:	inc    rax
   140002762:	cmp    WORD PTR [r8+rax*2],r14w
   140002767:	jne    0x14000275f
   140002769:	add    rcx,0x68
   14000276d:	test   eax,eax
   14000276f:	jle    0x140002779
   140002771:	call   QWORD PTR [rip+0x5e11]        # 0x140008588
   140002777:	jmp    0x140002786
   140002779:	lea    rdx,[rip+0x64b0]        # 0x140008c30
   140002780:	call   QWORD PTR [rip+0x5d4a]        # 0x1400084d0
   140002786:	xor    edx,edx
   140002788:	mov    DWORD PTR [rbp-0x80],r14d
   14000278c:	mov    r8d,0x1fc
   140002792:	lea    rcx,[rbp-0x7c]
   140002796:	call   0x140007a76
   14000279b:	mov    eax,DWORD PTR [rsp+0x30]
   14000279f:	lea    r8,[rip+0x64a2]        # 0x140008c48
   1400027a6:	mov    r9d,DWORD PTR [rsp+0x34]
   1400027ab:	lea    rcx,[rbp-0x80]
   1400027af:	inc    eax
   1400027b1:	mov    edx,0x100
   1400027b6:	inc    r9d
   1400027b9:	mov    DWORD PTR [rsp+0x20],eax
   1400027bd:	call   0x140003990
   1400027c2:	mov    rcx,QWORD PTR [rdi+0x20]
   1400027c6:	lea    rdx,[rbp-0x80]
   1400027ca:	add    rcx,0x68
   1400027ce:	call   QWORD PTR [rip+0x5cf4]        # 0x1400084c8
   1400027d4:	xor    eax,eax
   1400027d6:	mov    rcx,QWORD PTR [rbp+0x180]
   1400027dd:	xor    rcx,rsp
   1400027e0:	call   0x140007230
   1400027e5:	lea    r11,[rsp+0x290]
   1400027ed:	mov    rbx,QWORD PTR [r11+0x30]
   1400027f1:	mov    rsi,QWORD PTR [r11+0x38]
   1400027f5:	mov    rsp,r11
   1400027f8:	pop    r14
   1400027fa:	pop    rdi
   1400027fb:	pop    rbp
   1400027fc:	ret    
   1400027fd:	int3   
   1400027fe:	int3   
   1400027ff:	int3   
   140002800:	int3   
   140002801:	int3   
   140002802:	int3   
   140002803:	int3   
   140002804:	int3   
   140002805:	int3   
   140002806:	int3   
   140002807:	int3   
   140002808:	int3   
   140002809:	int3   
   14000280a:	int3   
   14000280b:	int3   
   14000280c:	int3   
   14000280d:	int3   
   14000280e:	int3   
   14000280f:	int3   
   140002810:	and    QWORD PTR [rdx],0x0
   140002814:	xor    eax,eax
   140002816:	ret    
   140002817:	int3   
   140002818:	int3   
   140002819:	int3   
   14000281a:	int3   
   14000281b:	int3   
   14000281c:	int3   
   14000281d:	int3   
   14000281e:	int3   
   14000281f:	int3   
   140002820:	mov    rax,rsp
   140002823:	push   rbp
   140002824:	push   rsi
   140002825:	push   rdi
   140002826:	push   r14
   140002828:	push   r15
   14000282a:	lea    rbp,[rax-0x5f]
   14000282e:	sub    rsp,0x90
   140002835:	mov    QWORD PTR [rbp+0xf],0xfffffffffffffffe
   14000283d:	mov    QWORD PTR [rax+0x18],rbx
   140002841:	mov    rax,QWORD PTR [rip+0x97c0]        # 0x14000c008
   140002848:	xor    rax,rsp
   14000284b:	mov    QWORD PTR [rbp+0x2f],rax
   14000284f:	mov    rsi,rdx
   140002852:	mov    rdi,rcx
   140002855:	lea    rcx,[rbp-0x21]
   140002859:	call   QWORD PTR [rip+0x5809]        # 0x140008068
   14000285f:	lea    rdx,[rip+0x9fc2]        # 0x14000c828
   140002866:	lea    rcx,[rbp-0x1]
   14000286a:	call   QWORD PTR [rip+0x5c20]        # 0x140008490
   140002870:	inc    DWORD PTR [rip+0x9fa2]        # 0x14000c818
   140002876:	lea    rcx,[rbp-0x1]
   14000287a:	call   QWORD PTR [rip+0x5c08]        # 0x140008488
   140002880:	lea    rax,[rip+0x9f91]        # 0x14000c818
   140002887:	mov    QWORD PTR [rdi+0x70],rax
   14000288b:	lea    rcx,[rip+0x63ce]        # 0x140008c60
   140002892:	call   QWORD PTR [rip+0x57e0]        # 0x140008078
   140002898:	mov    r14,rax
   14000289b:	xor    r15d,r15d
   14000289e:	test   rax,rax
   1400028a1:	je     0x140002c20
   1400028a7:	mov    QWORD PTR [rbp+0x17],rax
   1400028ab:	mov    rax,QWORD PTR [rsi]
   1400028ae:	mov    rbx,QWORD PTR [rax+0x20]
   1400028b2:	mov    rcx,rbx
   1400028b5:	call   QWORD PTR [rip+0x5ce5]        # 0x1400085a0
   1400028bb:	mov    QWORD PTR [rsp+0x28],r15
   1400028c0:	mov    QWORD PTR [rsp+0x20],r15
   1400028c5:	lea    r9,[rbp-0x21]
   1400028c9:	xor    r8d,r8d
   1400028cc:	mov    rdx,r14
   1400028cf:	mov    rcx,rsi
   1400028d2:	call   rbx
   1400028d4:	test   eax,eax
   1400028d6:	js     0x140002c17
   1400028dc:	mov    DWORD PTR [rbp-0x9],r15d
   1400028e0:	lea    r8,[rbp-0x9]
   1400028e4:	lea    edx,[r15+0x1]
   1400028e8:	mov    rcx,QWORD PTR [rbp-0x19]
   1400028ec:	call   QWORD PTR [rip+0x5796]        # 0x140008088
   1400028f2:	lea    rdx,[rbp+0x7]
   1400028f6:	mov    rcx,QWORD PTR [rbp-0x19]
   1400028fa:	call   QWORD PTR [rip+0x5790]        # 0x140008090
   140002900:	test   eax,eax
   140002902:	js     0x140002954
   140002904:	mov    edx,DWORD PTR [rbp-0x9]
   140002907:	lea    rcx,[rbp-0x1]
   14000290b:	call   0x1400038f8
   140002910:	movsxd rbx,DWORD PTR [rax]
   140002913:	mov    rcx,rbx
   140002916:	call   QWORD PTR [rip+0x5bd4]        # 0x1400084f0
   14000291c:	mov    QWORD PTR [rdi+0x40],rax
   140002920:	test   rax,rax
   140002923:	je     0x140002940
   140002925:	mov    r8,rbx
   140002928:	mov    rdx,QWORD PTR [rbp+0x7]
   14000292c:	mov    rcx,rax
   14000292f:	call   0x140007a6a
   140002934:	mov    rcx,QWORD PTR [rbp-0x19]
   140002938:	call   QWORD PTR [rip+0x5722]        # 0x140008060
   14000293e:	jmp    0x140002954
   140002940:	mov    rcx,QWORD PTR [rbp-0x19]
   140002944:	call   QWORD PTR [rip+0x5716]        # 0x140008060
   14000294a:	mov    ebx,0x80041006
   14000294f:	jmp    0x140002c0a
   140002954:	lea    rcx,[rbp-0x21]
   140002958:	call   QWORD PTR [rip+0x570a]        # 0x140008068
   14000295e:	mov    rax,QWORD PTR [rsi]
   140002961:	mov    rbx,QWORD PTR [rax+0x20]
   140002965:	mov    rcx,rbx
   140002968:	call   QWORD PTR [rip+0x5c32]        # 0x1400085a0
   14000296e:	mov    QWORD PTR [rsp+0x28],r15
   140002973:	mov    QWORD PTR [rsp+0x20],r15
   140002978:	lea    r9,[rbp-0x21]
   14000297c:	xor    r8d,r8d
   14000297f:	lea    rdx,[rip+0x62f2]        # 0x140008c78
   140002986:	mov    rcx,rsi
   140002989:	call   rbx
   14000298b:	test   eax,eax
   14000298d:	js     0x140002be7
   140002993:	cmp    WORD PTR [rbp-0x21],0x8
   140002998:	jne    0x140002be7
   14000299e:	xor    r8d,r8d
   1400029a1:	mov    rdx,QWORD PTR [rbp-0x19]
   1400029a5:	lea    rcx,[rbp-0x29]
   1400029a9:	call   QWORD PTR [rip+0x5be1]        # 0x140008590
   1400029af:	nop
   1400029b0:	lea    rcx,[rbp-0x21]
   1400029b4:	call   QWORD PTR [rip+0x56b6]        # 0x140008070
   1400029ba:	mov    rax,QWORD PTR [rsi]
   1400029bd:	mov    rbx,QWORD PTR [rax+0x20]
   1400029c1:	mov    rcx,rbx
   1400029c4:	call   QWORD PTR [rip+0x5bd6]        # 0x1400085a0
   1400029ca:	mov    QWORD PTR [rsp+0x28],r15
   1400029cf:	mov    QWORD PTR [rsp+0x20],r15
   1400029d4:	lea    r9,[rbp-0x21]
   1400029d8:	xor    r8d,r8d
   1400029db:	lea    rdx,[rip+0x62b6]        # 0x140008c98
   1400029e2:	mov    rcx,rsi
   1400029e5:	call   rbx
   1400029e7:	mov    eax,r15d
   1400029ea:	cmp    WORD PTR [rbp-0x21],0x3
   1400029ef:	cmove  eax,DWORD PTR [rbp-0x19]
   1400029f3:	mov    DWORD PTR [rdi+0x48],eax
   1400029f6:	lea    rcx,[rbp-0x21]
   1400029fa:	call   QWORD PTR [rip+0x5670]        # 0x140008070
   140002a00:	mov    rax,QWORD PTR [rsi]
   140002a03:	mov    rbx,QWORD PTR [rax+0x20]
   140002a07:	mov    rcx,rbx
   140002a0a:	call   QWORD PTR [rip+0x5b90]        # 0x1400085a0
   140002a10:	mov    QWORD PTR [rsp+0x28],r15
   140002a15:	mov    QWORD PTR [rsp+0x20],r15
   140002a1a:	lea    r9,[rbp-0x21]
   140002a1e:	xor    r8d,r8d
   140002a21:	lea    rdx,[rip+0x6208]        # 0x140008c30
   140002a28:	mov    rcx,rsi
   140002a2b:	call   rbx
   140002a2d:	test   eax,eax
   140002a2f:	js     0x140002bdb
   140002a35:	cmp    WORD PTR [rbp-0x21],0x8
   140002a3a:	jne    0x140002a42
   140002a3c:	lea    rcx,[rdi+0x30]
   140002a40:	jmp    0x140002a86
   140002a42:	mov    rax,QWORD PTR [rsi]
   140002a45:	mov    rbx,QWORD PTR [rax+0x20]
   140002a49:	mov    rcx,rbx
   140002a4c:	call   QWORD PTR [rip+0x5b4e]        # 0x1400085a0
   140002a52:	mov    QWORD PTR [rsp+0x28],r15
   140002a57:	mov    QWORD PTR [rsp+0x20],r15
   140002a5c:	lea    r9,[rbp-0x21]
   140002a60:	xor    r8d,r8d
   140002a63:	lea    rdx,[rip+0x6246]        # 0x140008cb0
   140002a6a:	mov    rcx,rsi
   140002a6d:	call   rbx
   140002a6f:	test   eax,eax
   140002a71:	js     0x140002bb8
   140002a77:	cmp    WORD PTR [rbp-0x21],0x8
   140002a7c:	jne    0x140002bb8
   140002a82:	lea    rcx,[rdi+0x38]
   140002a86:	mov    rdx,QWORD PTR [rbp-0x19]
   140002a8a:	call   QWORD PTR [rip+0x5a40]        # 0x1400084d0
   140002a90:	lea    rcx,[rbp-0x21]
   140002a94:	call   QWORD PTR [rip+0x55d6]        # 0x140008070
   140002a9a:	mov    rcx,QWORD PTR [rbp-0x29]
   140002a9e:	or     rsi,0xffffffffffffffff
   140002aa2:	mov    rax,rsi
   140002aa5:	inc    rax
   140002aa8:	cmp    WORD PTR [rcx+rax*2],r15w
   140002aad:	jne    0x140002aa5
   140002aaf:	test   eax,eax
   140002ab1:	jne    0x140002aba
   140002ab3:	mov    ebx,0x80041008
   140002ab8:	jmp    0x140002aca
   140002aba:	lea    rdx,[rbp+0x1f]
   140002abe:	call   QWORD PTR [rip+0x5664]        # 0x140008128
   140002ac4:	mov    ebx,eax
   140002ac6:	test   eax,eax
   140002ac8:	jns    0x140002b3b
   140002aca:	call   QWORD PTR [rip+0x5aa8]        # 0x140008578
   140002ad0:	mov    rcx,rax
   140002ad3:	mov    edx,esi
   140002ad5:	call   QWORD PTR [rip+0x5aa5]        # 0x140008580
   140002adb:	lea    rax,[rip+0x9546]        # 0x14000c028
   140002ae2:	mov    rcx,QWORD PTR [rip+0x953f]        # 0x14000c028
   140002ae9:	cmp    rcx,rax
   140002aec:	je     0x140002b10
   140002aee:	test   BYTE PTR [rcx+0x1c],0x2
   140002af2:	je     0x140002b10
   140002af4:	cmp    BYTE PTR [rcx+0x19],0x2
   140002af8:	jb     0x140002b10
   140002afa:	mov    edx,0xb
   140002aff:	mov    DWORD PTR [rsp+0x20],ebx
   140002b03:	mov    r9,QWORD PTR [rbp-0x29]
   140002b07:	mov    rcx,QWORD PTR [rcx+0x10]
   140002b0b:	call   0x1400020a0
   140002b10:	mov    DWORD PTR [rsp+0x20],ebx
   140002b14:	xor    r9d,r9d
   140002b17:	mov    r8,QWORD PTR [rbp-0x29]
   140002b1b:	lea    rdx,[rip+0x61e6]        # 0x140008d08
   140002b22:	mov    rcx,QWORD PTR [rdi+0x70]
   140002b26:	call   0x1400041d4
   140002b2b:	nop
   140002b2c:	lea    rcx,[rbp-0x29]
   140002b30:	call   QWORD PTR [rip+0x5a1a]        # 0x140008550
   140002b36:	jmp    0x140002c0a
   140002b3b:	lea    rax,[rdi+0x50]
   140002b3f:	mov    QWORD PTR [rsp+0x20],rax
   140002b44:	lea    r9,[rip+0x6385]        # 0x140008ed0
   140002b4b:	xor    r8d,r8d
   140002b4e:	lea    edx,[r8+0x5]
   140002b52:	lea    rcx,[rbp+0x1f]
   140002b56:	call   QWORD PTR [rip+0x55d4]        # 0x140008130
   140002b5c:	mov    ebx,eax
   140002b5e:	test   eax,eax
   140002b60:	jns    0x140002ba0
   140002b62:	call   QWORD PTR [rip+0x5a10]        # 0x140008578
   140002b68:	mov    rcx,rax
   140002b6b:	mov    edx,esi
   140002b6d:	call   QWORD PTR [rip+0x5a0d]        # 0x140008580
   140002b73:	lea    rax,[rip+0x94ae]        # 0x14000c028
   140002b7a:	mov    rcx,QWORD PTR [rip+0x94a7]        # 0x14000c028
   140002b81:	cmp    rcx,rax
   140002b84:	je     0x140002b10
   140002b86:	test   BYTE PTR [rcx+0x1c],0x2
   140002b8a:	je     0x140002b10
   140002b8c:	cmp    BYTE PTR [rcx+0x19],0x2
   140002b90:	jb     0x140002b10
   140002b96:	mov    edx,0xc
   140002b9b:	jmp    0x140002aff
   140002ba0:	lea    rcx,[rbp-0x29]
   140002ba4:	call   QWORD PTR [rip+0x59a6]        # 0x140008550
   140002baa:	nop
   140002bab:	mov    rcx,r14
   140002bae:	call   QWORD PTR [rip+0x54cc]        # 0x140008080
   140002bb4:	xor    eax,eax
   140002bb6:	jmp    0x140002c25
   140002bb8:	mov    DWORD PTR [rsp+0x20],0x80041028
   140002bc0:	xor    r9d,r9d
   140002bc3:	lea    r8,[rip+0x6106]        # 0x140008cd0
   140002bca:	lea    rdx,[rip+0x6137]        # 0x140008d08
   140002bd1:	mov    rcx,QWORD PTR [rdi+0x70]
   140002bd5:	call   0x1400041d4
   140002bda:	nop
   140002bdb:	lea    rcx,[rbp-0x29]
   140002bdf:	call   QWORD PTR [rip+0x596b]        # 0x140008550
   140002be5:	jmp    0x140002c05
   140002be7:	mov    DWORD PTR [rsp+0x20],0x80041008
   140002bef:	xor    r9d,r9d
   140002bf2:	xor    r8d,r8d
   140002bf5:	lea    rdx,[rip+0x607c]        # 0x140008c78
   140002bfc:	mov    rcx,QWORD PTR [rdi+0x70]
   140002c00:	call   0x1400041d4
   140002c05:	mov    ebx,0x80041008
   140002c0a:	mov    rcx,r14
   140002c0d:	call   QWORD PTR [rip+0x546d]        # 0x140008080
   140002c13:	mov    eax,ebx
   140002c15:	jmp    0x140002c25
   140002c17:	mov    rcx,r14
   140002c1a:	call   QWORD PTR [rip+0x5460]        # 0x140008080
   140002c20:	mov    eax,0x80041006
   140002c25:	mov    rcx,QWORD PTR [rbp+0x2f]
   140002c29:	xor    rcx,rsp
   140002c2c:	call   0x140007230
   140002c31:	mov    rbx,QWORD PTR [rsp+0xd0]
   140002c39:	add    rsp,0x90
   140002c40:	pop    r15
   140002c42:	pop    r14
   140002c44:	pop    rdi
   140002c45:	pop    rsi
   140002c46:	pop    rbp
   140002c47:	ret    
   140002c48:	int3   
   140002c49:	int3   
   140002c4a:	int3   
   140002c4b:	int3   
   140002c4c:	int3   
   140002c4d:	int3   
   140002c4e:	int3   
   140002c4f:	int3   
   140002c50:	rex push rbp
   140002c52:	push   rbx
   140002c53:	push   rsi
   140002c54:	push   rdi
   140002c55:	push   r12
   140002c57:	push   r14
   140002c59:	push   r15
   140002c5b:	lea    rbp,[rsp-0x27]
   140002c60:	sub    rsp,0xd0
   140002c67:	mov    QWORD PTR [rbp-0x31],0xfffffffffffffffe
   140002c6f:	mov    r15,rdx
   140002c72:	mov    r14,rcx
   140002c75:	lock inc DWORD PTR [rip+0x9a58]        # 0x14000c6d4
   140002c7c:	mov    eax,DWORD PTR [rip+0x939e]        # 0x14000c020
   140002c82:	cmp    DWORD PTR [rip+0x9a4c],eax        # 0x14000c6d4
   140002c88:	jb     0x140002c97
   140002c8a:	call   QWORD PTR [rip+0x5478]        # 0x140008108
   140002c90:	mov    BYTE PTR [rip+0x9a39],0x1        # 0x14000c6d0
   140002c97:	mov    rdi,QWORD PTR [r14+0x50]
   140002c9b:	mov    rax,QWORD PTR [rdi]
   140002c9e:	mov    rbx,QWORD PTR [rax+0x18]
   140002ca2:	mov    rcx,rbx
   140002ca5:	call   QWORD PTR [rip+0x58f5]        # 0x1400085a0
   140002cab:	lea    r9,[rbp+0x7f]
   140002caf:	lea    r8,[rip+0x624a]        # 0x140008f00
   140002cb6:	xor    edx,edx
   140002cb8:	mov    rcx,rdi
   140002cbb:	call   rbx
   140002cbd:	mov    ebx,eax
   140002cbf:	xor    r12d,r12d
   140002cc2:	test   eax,eax
   140002cc4:	jns    0x140002d18
   140002cc6:	call   QWORD PTR [rip+0x58ac]        # 0x140008578
   140002ccc:	mov    rcx,rax
   140002ccf:	or     edx,0xffffffff
   140002cd2:	call   QWORD PTR [rip+0x58a8]        # 0x140008580
   140002cd8:	lea    rcx,[rip+0x9349]        # 0x14000c028
   140002cdf:	mov    r10,QWORD PTR [rip+0x9342]        # 0x14000c028
   140002ce6:	cmp    r10,rcx
   140002ce9:	je     0x140002d11
   140002ceb:	test   BYTE PTR [r10+0x1c],0x2
   140002cf0:	je     0x140002d11
   140002cf2:	cmp    BYTE PTR [r10+0x19],0x2
   140002cf7:	jb     0x140002d11
   140002cf9:	lea    edx,[r12+0xe]
   140002cfe:	mov    r9d,ebx
   140002d01:	lea    r8,[rip+0x60e0]        # 0x140008de8
   140002d08:	mov    rcx,QWORD PTR [r10+0x10]
   140002d0c:	call   0x140001fbc
   140002d11:	mov    eax,ebx
   140002d13:	jmp    0x1400033e8
   140002d18:	mov    rdi,QWORD PTR [rbp+0x7f]
   140002d1c:	mov    rax,QWORD PTR [rdi]
   140002d1f:	mov    rbx,QWORD PTR [rax]
   140002d22:	mov    rcx,rbx
   140002d25:	call   QWORD PTR [rip+0x5875]        # 0x1400085a0
   140002d2b:	lea    r8,[rbp-0x59]
   140002d2f:	lea    rdx,[rip+0x61ba]        # 0x140008ef0
   140002d36:	mov    rcx,rdi
   140002d39:	call   rbx
   140002d3b:	mov    esi,eax
   140002d3d:	test   eax,eax
   140002d3f:	jns    0x140002da5
   140002d41:	call   QWORD PTR [rip+0x5831]        # 0x140008578
   140002d47:	mov    rcx,rax
   140002d4a:	or     edx,0xffffffff
   140002d4d:	call   QWORD PTR [rip+0x582d]        # 0x140008580
   140002d53:	lea    rcx,[rip+0x92ce]        # 0x14000c028
   140002d5a:	mov    r9,QWORD PTR [rip+0x92c7]        # 0x14000c028
   140002d61:	cmp    r9,rcx
   140002d64:	je     0x140002d89
   140002d66:	test   BYTE PTR [r9+0x1c],0x2
   140002d6b:	je     0x140002d89
   140002d6d:	cmp    BYTE PTR [r9+0x19],0x2
   140002d72:	jb     0x140002d89
   140002d74:	mov    edx,0xf
   140002d79:	lea    r8,[rip+0x6068]        # 0x140008de8
   140002d80:	mov    rcx,QWORD PTR [r9+0x10]
   140002d84:	call   0x140001f98
   140002d89:	mov    rdi,QWORD PTR [rbp+0x7f]
   140002d8d:	mov    rax,QWORD PTR [rdi]
   140002d90:	mov    rbx,QWORD PTR [rax+0x10]
   140002d94:	mov    rcx,rbx
   140002d97:	call   QWORD PTR [rip+0x5803]        # 0x1400085a0
   140002d9d:	mov    rcx,rdi
   140002da0:	jmp    0x1400033e4
   140002da5:	mov    QWORD PTR [rbp-0x51],r12
   140002da9:	mov    QWORD PTR [rbp-0x49],r12
   140002dad:	mov    DWORD PTR [rbp+0x67],r12d
   140002db1:	lea    rdx,[rbp-0x51]
   140002db5:	xor    ecx,ecx
   140002db7:	call   QWORD PTR [rip+0x569b]        # 0x140008458
   140002dbd:	mov    esi,eax
   140002dbf:	test   eax,eax
   140002dc1:	jns    0x140002e30
   140002dc3:	call   QWORD PTR [rip+0x57af]        # 0x140008578
   140002dc9:	mov    rcx,rax
   140002dcc:	or     edx,0xffffffff
   140002dcf:	call   QWORD PTR [rip+0x57ab]        # 0x140008580
   140002dd5:	lea    rcx,[rip+0x924c]        # 0x14000c028
   140002ddc:	mov    r10,QWORD PTR [rip+0x9245]        # 0x14000c028
   140002de3:	cmp    r10,rcx
   140002de6:	je     0x140002e0e
   140002de8:	test   BYTE PTR [r10+0x1c],0x2
   140002ded:	je     0x140002e0e
   140002def:	cmp    BYTE PTR [r10+0x19],0x2
   140002df4:	jb     0x140002e0e
   140002df6:	mov    edx,0x10
   140002dfb:	mov    r9d,esi
   140002dfe:	lea    r8,[rip+0x5fe3]        # 0x140008de8
   140002e05:	mov    rcx,QWORD PTR [r10+0x10]
   140002e09:	call   0x140001fbc
   140002e0e:	mov    rdi,QWORD PTR [rbp+0x7f]
   140002e12:	mov    rax,QWORD PTR [rdi]
   140002e15:	mov    rbx,QWORD PTR [rax+0x10]
   140002e19:	mov    rcx,rbx
   140002e1c:	call   QWORD PTR [rip+0x577e]        # 0x1400085a0
   140002e22:	mov    rcx,rdi
   140002e25:	call   rbx
   140002e27:	mov    rdi,QWORD PTR [rbp-0x59]
   140002e2b:	jmp    0x140002d8d
   140002e30:	mov    rdi,QWORD PTR [rbp-0x51]
   140002e34:	mov    rax,QWORD PTR [rdi]
   140002e37:	mov    rbx,QWORD PTR [rax+0x48]
   140002e3b:	mov    rcx,rbx
   140002e3e:	call   QWORD PTR [rip+0x575c]        # 0x1400085a0
   140002e44:	mov    r8,r15
   140002e47:	lea    rdx,[rip+0x5ed2]        # 0x140008d20
   140002e4e:	mov    rcx,rdi
   140002e51:	call   rbx
   140002e53:	mov    esi,eax
   140002e55:	test   eax,eax
   140002e57:	jns    0x140002e96
   140002e59:	call   QWORD PTR [rip+0x5719]        # 0x140008578
   140002e5f:	mov    rcx,rax
   140002e62:	or     edx,0xffffffff
   140002e65:	call   QWORD PTR [rip+0x5715]        # 0x140008580
   140002e6b:	lea    rcx,[rip+0x91b6]        # 0x14000c028
   140002e72:	mov    r10,QWORD PTR [rip+0x91af]        # 0x14000c028
   140002e79:	cmp    r10,rcx
   140002e7c:	je     0x140002e0e
   140002e7e:	test   BYTE PTR [r10+0x1c],0x2
   140002e83:	je     0x140002e0e
   140002e85:	cmp    BYTE PTR [r10+0x19],0x2
   140002e8a:	jb     0x140002e0e
   140002e8c:	mov    edx,0x11
   140002e91:	jmp    0x140002dfb
   140002e96:	lea    r9,[rbp-0x49]
   140002e9a:	lea    r8,[rbp+0x67]
   140002e9e:	lea    rdx,[rip+0x5e93]        # 0x140008d38
   140002ea5:	mov    rcx,QWORD PTR [rbp-0x51]
   140002ea9:	call   QWORD PTR [rip+0x55b1]        # 0x140008460
   140002eaf:	mov    esi,eax
   140002eb1:	test   eax,eax
   140002eb3:	jns    0x140002efe
   140002eb5:	call   QWORD PTR [rip+0x56bd]        # 0x140008578
   140002ebb:	mov    rcx,rax
   140002ebe:	or     edx,0xffffffff
   140002ec1:	call   QWORD PTR [rip+0x56b9]        # 0x140008580
   140002ec7:	lea    rcx,[rip+0x915a]        # 0x14000c028
   140002ece:	mov    r10,QWORD PTR [rip+0x9153]        # 0x14000c028
   140002ed5:	cmp    r10,rcx
   140002ed8:	je     0x140002e0e
   140002ede:	test   BYTE PTR [r10+0x1c],0x2
   140002ee3:	je     0x140002e0e
   140002ee9:	cmp    BYTE PTR [r10+0x19],0x2
   140002eee:	jb     0x140002e0e
   140002ef4:	mov    edx,0x12
   140002ef9:	jmp    0x140002dfb
   140002efe:	mov    rdi,QWORD PTR [rbp-0x49]
   140002f02:	mov    rax,QWORD PTR [rdi]
   140002f05:	mov    rbx,QWORD PTR [rax+0x40]
   140002f09:	mov    rcx,rbx
   140002f0c:	call   QWORD PTR [rip+0x568e]        # 0x1400085a0
   140002f12:	lea    rax,[rbp-0x41]
   140002f16:	mov    QWORD PTR [rsp+0x20],rax
   140002f1b:	lea    r9,[rip+0x621e]        # 0x140009140
   140002f22:	xor    r8d,r8d
   140002f25:	mov    rdx,QWORD PTR [rbp-0x51]
   140002f29:	mov    rcx,rdi
   140002f2c:	call   rbx
   140002f2e:	mov    esi,eax
   140002f30:	test   eax,eax
   140002f32:	jns    0x140002f7d
   140002f34:	call   QWORD PTR [rip+0x563e]        # 0x140008578
   140002f3a:	mov    rcx,rax
   140002f3d:	or     edx,0xffffffff
   140002f40:	call   QWORD PTR [rip+0x563a]        # 0x140008580
   140002f46:	lea    rcx,[rip+0x90db]        # 0x14000c028
   140002f4d:	mov    r10,QWORD PTR [rip+0x90d4]        # 0x14000c028
   140002f54:	cmp    r10,rcx
   140002f57:	je     0x140002e0e
   140002f5d:	test   BYTE PTR [r10+0x1c],0x2
   140002f62:	je     0x140002e0e
   140002f68:	cmp    BYTE PTR [r10+0x19],0x2
   140002f6d:	jb     0x140002e0e
   140002f73:	mov    edx,0x13
   140002f78:	jmp    0x140002dfb
   140002f7d:	mov    rdi,QWORD PTR [rbp-0x49]
   140002f81:	mov    rax,QWORD PTR [rdi]
   140002f84:	mov    rbx,QWORD PTR [rax+0x10]
   140002f88:	mov    rcx,rbx
   140002f8b:	call   QWORD PTR [rip+0x560f]        # 0x1400085a0
   140002f91:	mov    rcx,rdi
   140002f94:	call   rbx
   140002f96:	mov    rdi,QWORD PTR [rbp-0x51]
   140002f9a:	mov    rax,QWORD PTR [rdi]
   140002f9d:	mov    rbx,QWORD PTR [rax+0x10]
   140002fa1:	mov    rcx,rbx
   140002fa4:	call   QWORD PTR [rip+0x55f6]        # 0x1400085a0
   140002faa:	mov    rcx,rdi
   140002fad:	call   rbx
   140002faf:	mov    ecx,0x30
   140002fb4:	call   QWORD PTR [rip+0x5536]        # 0x1400084f0
   140002fba:	mov    r15,rax
   140002fbd:	mov    QWORD PTR [rbp-0x29],rax
   140002fc1:	test   rax,rax
   140002fc4:	je     0x140003020
   140002fc6:	mov    rdi,QWORD PTR [rbp-0x41]
   140002fca:	lea    rax,[rip+0x59d7]        # 0x1400089a8
   140002fd1:	mov    QWORD PTR [r15],rax
   140002fd4:	lea    rax,[rip+0x59a5]        # 0x140008980
   140002fdb:	mov    QWORD PTR [r15+0x8],rax
   140002fdf:	mov    DWORD PTR [r15+0x10],r12d
   140002fe3:	mov    DWORD PTR [r15+0x28],r12d
   140002fe7:	mov    QWORD PTR [r15+0x20],r14
   140002feb:	mov    rax,QWORD PTR [r14]
   140002fee:	mov    rbx,QWORD PTR [rax+0x8]
   140002ff2:	mov    rcx,rbx
   140002ff5:	call   QWORD PTR [rip+0x55a5]        # 0x1400085a0
   140002ffb:	mov    rcx,r14
   140002ffe:	call   rbx
   140003000:	mov    QWORD PTR [r15+0x18],rdi
   140003004:	test   rdi,rdi
   140003007:	je     0x140003023
   140003009:	mov    rax,QWORD PTR [rdi]
   14000300c:	mov    rbx,QWORD PTR [rax+0x8]
   140003010:	mov    rcx,rbx
   140003013:	call   QWORD PTR [rip+0x5587]        # 0x1400085a0
   140003019:	mov    rcx,rdi
   14000301c:	call   rbx
   14000301e:	jmp    0x140003023
   140003020:	mov    r15,r12
   140003023:	test   r15,r15
   140003026:	jne    0x140003064
   140003028:	mov    rdi,QWORD PTR [rbp+0x7f]
   14000302c:	mov    rax,QWORD PTR [rdi]
   14000302f:	mov    rbx,QWORD PTR [rax+0x10]
   140003033:	mov    rcx,rbx
   140003036:	call   QWORD PTR [rip+0x5564]        # 0x1400085a0
   14000303c:	mov    rcx,rdi
   14000303f:	call   rbx
   140003041:	mov    rdi,QWORD PTR [rbp-0x59]
   140003045:	mov    rax,QWORD PTR [rdi]
   140003048:	mov    rbx,QWORD PTR [rax+0x10]
   14000304c:	mov    rcx,rbx
   14000304f:	call   QWORD PTR [rip+0x554b]        # 0x1400085a0
   140003055:	mov    rcx,rdi
   140003058:	call   rbx
   14000305a:	mov    eax,0x80041006
   14000305f:	jmp    0x1400033e8
   140003064:	mov    rax,QWORD PTR [r15]
   140003067:	mov    rbx,QWORD PTR [rax+0x8]
   14000306b:	mov    rcx,rbx
   14000306e:	call   QWORD PTR [rip+0x552c]        # 0x1400085a0
   140003074:	mov    rcx,r15
   140003077:	call   rbx
   140003079:	mov    rdi,QWORD PTR [rbp-0x41]
   14000307d:	test   rdi,rdi
   140003080:	je     0x140003097
   140003082:	mov    rax,QWORD PTR [rdi]
   140003085:	mov    rbx,QWORD PTR [rax+0x10]
   140003089:	mov    rcx,rbx
   14000308c:	call   QWORD PTR [rip+0x550e]        # 0x1400085a0
   140003092:	mov    rcx,rdi
   140003095:	call   rbx
   140003097:	mov    rdi,QWORD PTR [rbp+0x7f]
   14000309b:	mov    rax,QWORD PTR [rdi]
   14000309e:	mov    rbx,QWORD PTR [rax+0x18]
   1400030a2:	mov    rcx,rbx
   1400030a5:	call   QWORD PTR [rip+0x54f5]        # 0x1400085a0
   1400030ab:	mov    rdx,r15
   1400030ae:	mov    rcx,rdi
   1400030b1:	call   rbx
   1400030b3:	mov    rdi,QWORD PTR [rbp-0x59]
   1400030b7:	mov    rax,QWORD PTR [rdi]
   1400030ba:	mov    rbx,QWORD PTR [rax+0x18]
   1400030be:	mov    rcx,rbx
   1400030c1:	call   QWORD PTR [rip+0x54d9]        # 0x1400085a0
   1400030c7:	mov    rcx,rdi
   1400030ca:	call   rbx
   1400030cc:	mov    esi,eax
   1400030ce:	test   eax,eax
   1400030d0:	jns    0x140003137
   1400030d2:	call   QWORD PTR [rip+0x54a0]        # 0x140008578
   1400030d8:	mov    rcx,rax
   1400030db:	or     edx,0xffffffff
   1400030de:	call   QWORD PTR [rip+0x549c]        # 0x140008580
   1400030e4:	lea    rcx,[rip+0x8f3d]        # 0x14000c028
   1400030eb:	mov    r10,QWORD PTR [rip+0x8f36]        # 0x14000c028
   1400030f2:	cmp    r10,rcx
   1400030f5:	je     0x14000311d
   1400030f7:	test   BYTE PTR [r10+0x1c],0x2
   1400030fc:	je     0x14000311d
   1400030fe:	cmp    BYTE PTR [r10+0x19],0x2
   140003103:	jb     0x14000311d
   140003105:	mov    edx,0x14
   14000310a:	mov    r9d,esi
   14000310d:	lea    r8,[rip+0x5cd4]        # 0x140008de8
   140003114:	mov    rcx,QWORD PTR [r10+0x10]
   140003118:	call   0x140001fbc
   14000311d:	mov    rax,QWORD PTR [r15]
   140003120:	mov    rbx,QWORD PTR [rax+0x10]
   140003124:	mov    rcx,rbx
   140003127:	call   QWORD PTR [rip+0x5473]        # 0x1400085a0
   14000312d:	mov    rcx,r15
   140003130:	call   rbx
   140003132:	jmp    0x140002e0e
   140003137:	mov    rdi,QWORD PTR [rbp+0x7f]
   14000313b:	mov    rax,QWORD PTR [rdi]
   14000313e:	mov    rbx,QWORD PTR [rax+0x40]
   140003142:	mov    rcx,rbx
   140003145:	call   QWORD PTR [rip+0x5455]        # 0x1400085a0
   14000314b:	mov    r8d,0x402
   140003151:	lea    rdx,[rip+0x5aa8]        # 0x140008c00
   140003158:	mov    rcx,rdi
   14000315b:	call   rbx
   14000315d:	mov    esi,eax
   14000315f:	test   eax,eax
   140003161:	jns    0x1400031a0
   140003163:	call   QWORD PTR [rip+0x540f]        # 0x140008578
   140003169:	mov    rcx,rax
   14000316c:	or     edx,0xffffffff
   14000316f:	call   QWORD PTR [rip+0x540b]        # 0x140008580
   140003175:	lea    rcx,[rip+0x8eac]        # 0x14000c028
   14000317c:	mov    r10,QWORD PTR [rip+0x8ea5]        # 0x14000c028
   140003183:	cmp    r10,rcx
   140003186:	je     0x14000311d
   140003188:	test   BYTE PTR [r10+0x1c],0x2
   14000318d:	je     0x14000311d
   14000318f:	cmp    BYTE PTR [r10+0x19],0x2
   140003194:	jb     0x14000311d
   140003196:	mov    edx,0x15
   14000319b:	jmp    0x14000310a
   1400031a0:	mov    rdi,QWORD PTR [r14+0x30]
   1400031a4:	mov    rsi,QWORD PTR [rbp-0x59]
   1400031a8:	mov    rax,QWORD PTR [rsi]
   1400031ab:	mov    rbx,QWORD PTR [rax+0x28]
   1400031af:	mov    rcx,rbx
   1400031b2:	call   QWORD PTR [rip+0x53e8]        # 0x1400085a0
   1400031b8:	lea    rax,[rbp-0x19]
   1400031bc:	mov    QWORD PTR [rsp+0x48],rax
   1400031c1:	mov    QWORD PTR [rsp+0x40],r12
   1400031c6:	mov    DWORD PTR [rsp+0x38],r12d
   1400031cb:	mov    DWORD PTR [rsp+0x30],r12d
   1400031d0:	mov    QWORD PTR [rsp+0x28],r12
   1400031d5:	mov    QWORD PTR [rsp+0x20],r12
   1400031da:	xor    r9d,r9d
   1400031dd:	xor    r8d,r8d
   1400031e0:	mov    rdx,rdi
   1400031e3:	mov    rcx,rsi
   1400031e6:	call   rbx
   1400031e8:	mov    esi,eax
   1400031ea:	test   eax,eax
   1400031ec:	jns    0x14000325c
   1400031ee:	call   QWORD PTR [rip+0x5384]        # 0x140008578
   1400031f4:	mov    rcx,rax
   1400031f7:	or     edx,0xffffffff
   1400031fa:	call   QWORD PTR [rip+0x5380]        # 0x140008580
   140003200:	lea    rcx,[rip+0x8e21]        # 0x14000c028
   140003207:	mov    r8,QWORD PTR [rip+0x8e1a]        # 0x14000c028
   14000320e:	cmp    r8,rcx
   140003211:	je     0x14000323b
   140003213:	test   BYTE PTR [r8+0x1c],0x2
   140003218:	je     0x14000323b
   14000321a:	cmp    BYTE PTR [r8+0x19],0x2
   14000321f:	jb     0x14000323b
   140003221:	mov    edx,0x16
   140003226:	mov    rax,QWORD PTR [r14+0x60]
   14000322a:	mov    QWORD PTR [rsp+0x20],rax
   14000322f:	mov    r9d,esi
   140003232:	mov    rcx,QWORD PTR [r8+0x10]
   140003236:	call   0x140001ff8
   14000323b:	mov    DWORD PTR [rsp+0x20],esi
   14000323f:	mov    r9,QWORD PTR [r14+0x60]
   140003243:	mov    r8,QWORD PTR [r14+0x68]
   140003247:	lea    rdx,[rip+0x5b02]        # 0x140008d50
   14000324e:	mov    rcx,QWORD PTR [r14+0x70]
   140003252:	call   0x1400041d4
   140003257:	jmp    0x14000311d
   14000325c:	mov    rdi,QWORD PTR [rbp-0x59]
   140003260:	mov    rax,QWORD PTR [rdi]
   140003263:	mov    rbx,QWORD PTR [rax+0x10]
   140003267:	mov    rcx,rbx
   14000326a:	call   QWORD PTR [rip+0x5330]        # 0x1400085a0
   140003270:	mov    rcx,rdi
   140003273:	call   rbx
   140003275:	cmp    DWORD PTR [r14+0x48],r12d
   140003279:	je     0x1400032ce
   14000327b:	lea    rcx,[rbp-0x39]
   14000327f:	call   QWORD PTR [rip+0x5023]        # 0x1400082a8
   140003285:	mov    eax,DWORD PTR [r14+0x48]
   140003289:	imul   rbx,rax,0x989680
   140003290:	add    rbx,QWORD PTR [rbp-0x39]
   140003294:	mov    rax,QWORD PTR [rbp+0x7f]
   140003298:	mov    rdi,QWORD PTR [rax]
   14000329b:	call   QWORD PTR [rip+0x4f3f]        # 0x1400081e0
   1400032a1:	mov    esi,eax
   1400032a3:	mov    rcx,QWORD PTR [rdi+0x60]
   1400032a7:	call   QWORD PTR [rip+0x52f3]        # 0x1400085a0
   1400032ad:	lea    r8,[rbp+0x77]
   1400032b1:	mov    edx,esi
   1400032b3:	mov    rcx,QWORD PTR [rbp+0x7f]
   1400032b7:	call   QWORD PTR [rdi+0x60]
   1400032ba:	test   eax,eax
   1400032bc:	js     0x1400032ce
   1400032be:	mov    r9d,DWORD PTR [rbp+0x77]
   1400032c2:	mov    r8,rbx
   1400032c5:	mov    rdx,QWORD PTR [rbp+0x7f]
   1400032c9:	call   0x140001288
   1400032ce:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400032d2:	mov    rax,QWORD PTR [rdi]
   1400032d5:	mov    rbx,QWORD PTR [rax+0x28]
   1400032d9:	mov    rcx,rbx
   1400032dc:	call   QWORD PTR [rip+0x52be]        # 0x1400085a0
   1400032e2:	mov    edx,0x2
   1400032e7:	mov    rcx,rdi
   1400032ea:	call   rbx
   1400032ec:	mov    esi,eax
   1400032ee:	test   eax,eax
   1400032f0:	jns    0x14000332c
   1400032f2:	call   QWORD PTR [rip+0x5280]        # 0x140008578
   1400032f8:	mov    rcx,rax
   1400032fb:	or     edx,0xffffffff
   1400032fe:	call   QWORD PTR [rip+0x527c]        # 0x140008580
   140003304:	lea    rcx,[rip+0x8d1d]        # 0x14000c028
   14000330b:	mov    r8,QWORD PTR [rip+0x8d16]        # 0x14000c028
   140003312:	cmp    r8,rcx
   140003315:	je     0x140003383
   140003317:	test   BYTE PTR [r8+0x1c],0x2
   14000331c:	je     0x140003383
   14000331e:	cmp    BYTE PTR [r8+0x19],0x2
   140003323:	jb     0x140003383
   140003325:	mov    edx,0x17
   14000332a:	jmp    0x14000336e
   14000332c:	cmp    DWORD PTR [r15+0x28],r12d
   140003330:	jge    0x14000339f
   140003332:	mov    esi,DWORD PTR [r15+0x28]
   140003336:	call   QWORD PTR [rip+0x523c]        # 0x140008578
   14000333c:	mov    rcx,rax
   14000333f:	or     edx,0xffffffff
   140003342:	call   QWORD PTR [rip+0x5238]        # 0x140008580
   140003348:	lea    rcx,[rip+0x8cd9]        # 0x14000c028
   14000334f:	mov    r8,QWORD PTR [rip+0x8cd2]        # 0x14000c028
   140003356:	cmp    r8,rcx
   140003359:	je     0x140003383
   14000335b:	test   BYTE PTR [r8+0x1c],0x2
   140003360:	je     0x140003383
   140003362:	cmp    BYTE PTR [r8+0x19],0x2
   140003367:	jb     0x140003383
   140003369:	mov    edx,0x18
   14000336e:	mov    rax,QWORD PTR [r14+0x60]
   140003372:	mov    QWORD PTR [rsp+0x20],rax
   140003377:	mov    r9d,esi
   14000337a:	mov    rcx,QWORD PTR [r8+0x10]
   14000337e:	call   0x140001ff8
   140003383:	mov    DWORD PTR [rsp+0x20],esi
   140003387:	mov    r9,QWORD PTR [r14+0x60]
   14000338b:	mov    r8,QWORD PTR [r14+0x68]
   14000338f:	lea    rdx,[rip+0x59da]        # 0x140008d70
   140003396:	mov    rcx,QWORD PTR [r14+0x70]
   14000339a:	call   0x1400041d4
   14000339f:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400033a3:	mov    rax,QWORD PTR [rdi]
   1400033a6:	mov    rbx,QWORD PTR [rax+0x38]
   1400033aa:	mov    rcx,rbx
   1400033ad:	call   QWORD PTR [rip+0x51ed]        # 0x1400085a0
   1400033b3:	mov    rcx,rdi
   1400033b6:	call   rbx
   1400033b8:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400033bc:	mov    rax,QWORD PTR [rdi]
   1400033bf:	mov    rbx,QWORD PTR [rax+0x10]
   1400033c3:	mov    rcx,rbx
   1400033c6:	call   QWORD PTR [rip+0x51d4]        # 0x1400085a0
   1400033cc:	mov    rcx,rdi
   1400033cf:	call   rbx
   1400033d1:	mov    rax,QWORD PTR [r15]
   1400033d4:	mov    rbx,QWORD PTR [rax+0x10]
   1400033d8:	mov    rcx,rbx
   1400033db:	call   QWORD PTR [rip+0x51bf]        # 0x1400085a0
   1400033e1:	mov    rcx,r15
   1400033e4:	call   rbx
   1400033e6:	mov    eax,esi
   1400033e8:	add    rsp,0xd0
   1400033ef:	pop    r15
   1400033f1:	pop    r14
   1400033f3:	pop    r12
   1400033f5:	pop    rdi
   1400033f6:	pop    rsi
   1400033f7:	pop    rbx
   1400033f8:	pop    rbp
   1400033f9:	ret    
   1400033fa:	int3   
   1400033fb:	int3   
   1400033fc:	int3   
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	mov    QWORD PTR [rsp+0x10],rbx
   140003405:	push   rbp
   140003406:	push   rsi
   140003407:	push   rdi
   140003408:	push   r12
   14000340a:	push   r13
   14000340c:	push   r14
   14000340e:	push   r15
   140003410:	sub    rsp,0x40
   140003414:	or     rbx,0xffffffffffffffff
   140003418:	mov    rbp,rcx
   14000341b:	mov    rcx,QWORD PTR [rcx+0x38]
   14000341f:	mov    rax,rbx
   140003422:	xor    r13d,r13d
   140003425:	mov    r12,rdx
   140003428:	mov    edi,0x80041008
   14000342d:	inc    rax
   140003430:	cmp    WORD PTR [rcx+rax*2],r13w
   140003435:	jne    0x14000342d
   140003437:	test   eax,eax
   140003439:	je     0x1400036a2
   14000343f:	xor    r9d,r9d
   140003442:	mov    QWORD PTR [rsp+0x30],r13
   140003447:	mov    DWORD PTR [rsp+0x28],0x80
   14000344f:	mov    edx,0x80000000
   140003454:	mov    DWORD PTR [rsp+0x20],0x3
   14000345c:	lea    r8d,[r9+0x1]
   140003460:	call   QWORD PTR [rip+0x4d12]        # 0x140008178
   140003466:	mov    r15,rax
   140003469:	cmp    rax,rbx
   14000346c:	je     0x14000364c
   140003472:	lea    rdx,[rsp+0x80]
   14000347a:	mov    rcx,rax
   14000347d:	call   QWORD PTR [rip+0x4ced]        # 0x140008170
   140003483:	mov    DWORD PTR [rsp+0x80],eax
   14000348a:	cmp    eax,0xffffffff
   14000348d:	je     0x140003641
   140003493:	lea    ecx,[rax+0x2]
   140003496:	call   QWORD PTR [rip+0x5054]        # 0x1400084f0
   14000349c:	mov    rsi,rax
   14000349f:	test   rax,rax
   1400034a2:	jne    0x1400034ae
   1400034a4:	mov    edi,0x80041006
   1400034a9:	jmp    0x140003641
   1400034ae:	mov    r8d,DWORD PTR [rsp+0x80]
   1400034b6:	xor    edx,edx
   1400034b8:	add    r8d,0x2
   1400034bc:	mov    rcx,rax
   1400034bf:	call   0x140007a76
   1400034c4:	mov    r8d,DWORD PTR [rsp+0x80]
   1400034cc:	lea    r9,[rsp+0x90]
   1400034d4:	mov    rdx,rsi
   1400034d7:	mov    QWORD PTR [rsp+0x20],r13
   1400034dc:	mov    rcx,r15
   1400034df:	call   QWORD PTR [rip+0x4c83]        # 0x140008168
   1400034e5:	test   eax,eax
   1400034e7:	je     0x1400035dd
   1400034ed:	mov    eax,0xfeff
   1400034f2:	mov    edi,r13d
   1400034f5:	cmp    WORD PTR [rsi],ax
   1400034f8:	jne    0x14000350c
   1400034fa:	lea    rcx,[rbp+0x30]
   1400034fe:	mov    rdx,rsi
   140003501:	call   QWORD PTR [rip+0x5069]        # 0x140008570
   140003507:	jmp    0x1400035ce
   14000350c:	inc    rbx
   14000350f:	cmp    BYTE PTR [rsi+rbx*1],r13b
   140003513:	jne    0x14000350c
   140003515:	inc    ebx
   140003517:	movsxd rcx,ebx
   14000351a:	add    rcx,rcx
   14000351d:	call   QWORD PTR [rip+0x4fcd]        # 0x1400084f0
   140003523:	mov    r14,rax
   140003526:	test   rax,rax
   140003529:	jne    0x140003535
   14000352b:	mov    edi,0x80041006
   140003530:	jmp    0x1400035c1
   140003535:	mov    edx,0x1
   14000353a:	mov    DWORD PTR [rsp+0x28],ebx
   14000353e:	mov    r9d,ebx
   140003541:	mov    QWORD PTR [rsp+0x20],rax
   140003546:	mov    r8,rsi
   140003549:	lea    ecx,[rdx+0x2]
   14000354c:	call   QWORD PTR [rip+0x4cee]        # 0x140008240
   140003552:	test   eax,eax
   140003554:	jne    0x1400035b4
   140003556:	call   QWORD PTR [rip+0x501c]        # 0x140008578
   14000355c:	mov    rcx,rax
   14000355f:	or     edx,0xffffffff
   140003562:	call   QWORD PTR [rip+0x5018]        # 0x140008580
   140003568:	mov    rcx,QWORD PTR [rip+0x8ab9]        # 0x14000c028
   14000356f:	lea    rax,[rip+0x8ab2]        # 0x14000c028
   140003576:	cmp    rcx,rax
   140003579:	je     0x1400035a4
   14000357b:	test   BYTE PTR [rcx+0x1c],0x2
   14000357f:	je     0x1400035a4
   140003581:	cmp    BYTE PTR [rcx+0x19],0x2
   140003585:	jb     0x1400035a4
   140003587:	call   QWORD PTR [rip+0x4bcb]        # 0x140008158
   14000358d:	mov    rcx,QWORD PTR [rip+0x8a94]        # 0x14000c028
   140003594:	mov    r9,rsi
   140003597:	mov    DWORD PTR [rsp+0x20],eax
   14000359b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000359f:	call   0x140002138
   1400035a4:	mov    rcx,r14
   1400035a7:	mov    edi,0x80041001
   1400035ac:	call   QWORD PTR [rip+0x4f36]        # 0x1400084e8
   1400035b2:	jmp    0x1400035c1
   1400035b4:	lea    rcx,[rbp+0x30]
   1400035b8:	mov    rdx,r14
   1400035bb:	call   QWORD PTR [rip+0x4faf]        # 0x140008570
   1400035c1:	mov    rcx,rsi
   1400035c4:	call   QWORD PTR [rip+0x4f1e]        # 0x1400084e8
   1400035ca:	test   edi,edi
   1400035cc:	js     0x140003641
   1400035ce:	mov    rdx,r12
   1400035d1:	mov    rcx,rbp
   1400035d4:	call   0x140002c50
   1400035d9:	mov    edi,eax
   1400035db:	jmp    0x140003641
   1400035dd:	call   QWORD PTR [rip+0x4f95]        # 0x140008578
   1400035e3:	mov    rcx,rax
   1400035e6:	mov    edx,ebx
   1400035e8:	call   QWORD PTR [rip+0x4f92]        # 0x140008580
   1400035ee:	mov    rcx,QWORD PTR [rip+0x8a33]        # 0x14000c028
   1400035f5:	lea    rax,[rip+0x8a2c]        # 0x14000c028
   1400035fc:	cmp    rcx,rax
   1400035ff:	je     0x140003633
   140003601:	test   BYTE PTR [rcx+0x1c],0x2
   140003605:	je     0x140003633
   140003607:	cmp    BYTE PTR [rcx+0x19],0x2
   14000360b:	jb     0x140003633
   14000360d:	mov    rbx,QWORD PTR [rbp+0x38]
   140003611:	call   QWORD PTR [rip+0x4b41]        # 0x140008158
   140003617:	mov    rcx,QWORD PTR [rip+0x8a0a]        # 0x14000c028
   14000361e:	mov    edx,0x1a
   140003623:	mov    r9,rbx
   140003626:	mov    DWORD PTR [rsp+0x20],eax
   14000362a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000362e:	call   0x1400020a0
   140003633:	mov    rcx,rsi
   140003636:	call   QWORD PTR [rip+0x4eac]        # 0x1400084e8
   14000363c:	mov    edi,0x80041001
   140003641:	mov    rcx,r15
   140003644:	call   QWORD PTR [rip+0x4b46]        # 0x140008190
   14000364a:	jmp    0x1400036a2
   14000364c:	call   QWORD PTR [rip+0x4f26]        # 0x140008578
   140003652:	mov    rcx,rax
   140003655:	mov    edx,ebx
   140003657:	call   QWORD PTR [rip+0x4f23]        # 0x140008580
   14000365d:	mov    rcx,QWORD PTR [rip+0x89c4]        # 0x14000c028
   140003664:	lea    rax,[rip+0x89bd]        # 0x14000c028
   14000366b:	cmp    rcx,rax
   14000366e:	je     0x1400036a2
   140003670:	test   BYTE PTR [rcx+0x1c],0x2
   140003674:	je     0x1400036a2
   140003676:	cmp    BYTE PTR [rcx+0x19],0x2
   14000367a:	jb     0x1400036a2
   14000367c:	mov    rbx,QWORD PTR [rbp+0x38]
   140003680:	call   QWORD PTR [rip+0x4ad2]        # 0x140008158
   140003686:	mov    rcx,QWORD PTR [rip+0x899b]        # 0x14000c028
   14000368d:	mov    edx,0x1b
   140003692:	mov    r9,rbx
   140003695:	mov    DWORD PTR [rsp+0x20],eax
   140003699:	mov    rcx,QWORD PTR [rcx+0x10]
   14000369d:	call   0x1400020a0
   1400036a2:	mov    eax,edi
   1400036a4:	mov    rbx,QWORD PTR [rsp+0x88]
   1400036ac:	add    rsp,0x40
   1400036b0:	pop    r15
   1400036b2:	pop    r14
   1400036b4:	pop    r13
   1400036b6:	pop    r12
   1400036b8:	pop    rdi
   1400036b9:	pop    rsi
   1400036ba:	pop    rbp
   1400036bb:	ret    
   1400036bc:	int3   
   1400036bd:	int3   
   1400036be:	int3   
   1400036bf:	int3   
   1400036c0:	int3   
   1400036c1:	int3   
   1400036c2:	int3   
   1400036c3:	int3   
   1400036c4:	int3   
   1400036c5:	int3   
   1400036c6:	int3   
   1400036c7:	int3   
   1400036c8:	int3   
   1400036c9:	int3   
   1400036ca:	int3   
   1400036cb:	int3   
   1400036cc:	int3   
   1400036cd:	int3   
   1400036ce:	int3   
   1400036cf:	int3   
   1400036d0:	mov    r11,rsp
   1400036d3:	mov    QWORD PTR [r11+0x10],rbx
   1400036d7:	mov    QWORD PTR [r11+0x18],rbp
   1400036db:	push   rsi
   1400036dc:	push   rdi
   1400036dd:	push   r12
   1400036df:	push   r14
   1400036e1:	push   r15
   1400036e3:	sub    rsp,0x80
   1400036ea:	mov    rax,QWORD PTR [rip+0x8917]        # 0x14000c008
   1400036f1:	xor    rax,rsp
   1400036f4:	mov    QWORD PTR [rsp+0x70],rax
   1400036f9:	xor    r12d,r12d
   1400036fc:	movsxd rdi,r8d
   1400036ff:	lea    rax,[r11-0x48]
   140003703:	mov    DWORD PTR [r11-0x40],r12d
   140003707:	mov    QWORD PTR [r11-0x58],rax
   14000370b:	mov    r15,r9
   14000370e:	mov    DWORD PTR [r11-0x60],r12d
   140003712:	mov    rsi,rcx
   140003715:	mov    DWORD PTR [r11-0x68],r12d
   140003719:	lea    r8d,[r12+0x12]
   14000371e:	mov    DWORD PTR [r11-0x70],r12d
   140003722:	lea    rcx,[r11-0x40]
   140003726:	mov    DWORD PTR [r11-0x78],r12d
   14000372a:	xor    r9d,r9d
   14000372d:	mov    DWORD PTR [r11-0x80],r12d
   140003731:	mov    dl,0x1
   140003733:	mov    DWORD PTR [rsp+0x20],r12d
   140003738:	mov    WORD PTR [rsp+0x6c],0x500
   14000373f:	call   QWORD PTR [rip+0x4b73]        # 0x1400082b8
   140003745:	test   eax,eax
   140003747:	je     0x140003855
   14000374d:	mov    rdx,QWORD PTR [rsi+0x8]
   140003751:	mov    ebx,0x80041003
   140003756:	mov    rcx,QWORD PTR [rsp+0x60]
   14000375b:	mov    rdx,QWORD PTR [rdx+0x40]
   14000375f:	call   QWORD PTR [rip+0x4b5b]        # 0x1400082c0
   140003765:	test   eax,eax
   140003767:	jne    0x14000377b
   140003769:	mov    rcx,QWORD PTR [rsi+0x8]
   14000376d:	mov    rcx,QWORD PTR [rcx+0x40]
   140003771:	call   QWORD PTR [rip+0x4bb1]        # 0x140008328
   140003777:	test   eax,eax
   140003779:	jne    0x14000377e
   14000377b:	mov    ebx,r12d
   14000377e:	mov    rcx,QWORD PTR [rsp+0x60]
   140003783:	call   QWORD PTR [rip+0x4b3f]        # 0x1400082c8
   140003789:	test   ebx,ebx
   14000378b:	jns    0x140003794
   14000378d:	mov    eax,ebx
   14000378f:	jmp    0x14000385a
   140003794:	cmp    BYTE PTR [rip+0x8f35],r12b        # 0x14000c6d0
   14000379b:	je     0x1400037a7
   14000379d:	mov    eax,0x80010108
   1400037a2:	jmp    0x14000385a
   1400037a7:	mov    ebp,r12d
   1400037aa:	mov    rbx,r12
   1400037ad:	mov    r14,rdi
   1400037b0:	test   edi,edi
   1400037b2:	jle    0x140003828
   1400037b4:	mov    rcx,QWORD PTR [rsi+0x8]
   1400037b8:	or     rax,0xffffffffffffffff
   1400037bc:	mov    rdx,QWORD PTR [rcx+0x30]
   1400037c0:	inc    rax
   1400037c3:	cmp    WORD PTR [rdx+rax*2],r12w
   1400037c8:	jne    0x1400037c0
   1400037ca:	test   eax,eax
   1400037cc:	je     0x1400037d9
   1400037ce:	mov    rdx,QWORD PTR [r15+rbx*8]
   1400037d2:	call   0x140002c50
   1400037d7:	jmp    0x1400037f8
   1400037d9:	mov    rdx,QWORD PTR [rcx+0x38]
   1400037dd:	or     rax,0xffffffffffffffff
   1400037e1:	inc    rax
   1400037e4:	cmp    WORD PTR [rdx+rax*2],r12w
   1400037e9:	jne    0x1400037e1
   1400037eb:	test   eax,eax
   1400037ed:	je     0x14000382c
   1400037ef:	mov    rdx,QWORD PTR [r15+rbx*8]
   1400037f3:	call   0x140003400
   1400037f8:	mov    edi,eax
   1400037fa:	test   eax,eax
   1400037fc:	jns    0x140003820
   1400037fe:	mov    rcx,QWORD PTR [rsi+0x8]
   140003802:	lea    rdx,[rip+0x55b7]        # 0x140008dc0
   140003809:	mov    DWORD PTR [rsp+0x20],eax
   14000380d:	mov    r9,QWORD PTR [rcx+0x60]
   140003811:	mov    r8,QWORD PTR [rcx+0x68]
   140003815:	mov    rcx,QWORD PTR [rcx+0x70]
   140003819:	call   0x1400041d4
   14000381e:	mov    ebp,edi
   140003820:	inc    rbx
   140003823:	cmp    rbx,r14
   140003826:	jl     0x1400037b4
   140003828:	mov    eax,ebp
   14000382a:	jmp    0x14000385a
   14000382c:	mov    rcx,QWORD PTR [rcx+0x70]
   140003830:	lea    r8,[rip+0x5499]        # 0x140008cd0
   140003837:	xor    r9d,r9d
   14000383a:	mov    DWORD PTR [rsp+0x20],0x80041028
   140003842:	lea    rdx,[rip+0x5577]        # 0x140008dc0
   140003849:	call   0x1400041d4
   14000384e:	mov    eax,0x80041008
   140003853:	jmp    0x14000385a
   140003855:	mov    eax,0x80041006
   14000385a:	mov    rcx,QWORD PTR [rsp+0x70]
   14000385f:	xor    rcx,rsp
   140003862:	call   0x140007230
   140003867:	lea    r11,[rsp+0x80]
   14000386f:	mov    rbx,QWORD PTR [r11+0x38]
   140003873:	mov    rbp,QWORD PTR [r11+0x40]
   140003877:	mov    rsp,r11
   14000387a:	pop    r15
   14000387c:	pop    r14
   14000387e:	pop    r12
   140003880:	pop    rdi
   140003881:	pop    rsi
   140003882:	ret    
   140003883:	int3   
   140003884:	int3   
   140003885:	int3   
   140003886:	int3   
   140003887:	int3   
   140003888:	int3   
   140003889:	int3   
   14000388a:	int3   
   14000388b:	int3   
   14000388c:	int3   
   14000388d:	int3   
   14000388e:	int3   
   14000388f:	int3   
   140003890:	mov    rax,QWORD PTR [rdx]
   140003893:	cmp    rax,QWORD PTR [rip+0x5896]        # 0x140009130
   14000389a:	jne    0x1400038ae
   14000389c:	mov    rax,QWORD PTR [rdx+0x8]
   1400038a0:	cmp    rax,QWORD PTR [rip+0x5891]        # 0x140009138
   1400038a7:	jne    0x1400038ae
   1400038a9:	lea    rax,[rcx+0x20]
   1400038ad:	ret    
   1400038ae:	xor    eax,eax
   1400038b0:	ret    
   1400038b1:	int3   
   1400038b2:	int3   
   1400038b3:	int3   
   1400038b4:	int3   
   1400038b5:	int3   
   1400038b6:	int3   
   1400038b7:	int3   
   1400038b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400038bd:	push   rdi
   1400038be:	sub    rsp,0x20
   1400038c2:	mov    rdi,QWORD PTR [rcx]
   1400038c5:	test   rdi,rdi
   1400038c8:	je     0x1400038e4
   1400038ca:	mov    rax,QWORD PTR [rdi]
   1400038cd:	mov    rbx,QWORD PTR [rax+0x28]
   1400038d1:	mov    rcx,rbx
   1400038d4:	call   QWORD PTR [rip+0x4cc6]        # 0x1400085a0
   1400038da:	mov    edx,0x1
   1400038df:	mov    rcx,rdi
   1400038e2:	call   rbx
   1400038e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038e9:	add    rsp,0x20
   1400038ed:	pop    rdi
   1400038ee:	ret    
   1400038ef:	int3   
   1400038f0:	int3   
   1400038f1:	int3   
   1400038f2:	int3   
   1400038f3:	int3   
   1400038f4:	int3   
   1400038f5:	int3   
   1400038f6:	int3   
   1400038f7:	int3   
   1400038f8:	mov    DWORD PTR [rsp+0x18],r8d
   1400038fd:	sub    rsp,0x28
   140003901:	mov    eax,edx
   140003903:	xor    eax,0x1
   140003906:	jl     0x140003914
   140003908:	mov    eax,0x7fffffff
   14000390d:	sub    eax,edx
   14000390f:	cmp    eax,0x1
   140003912:	jl     0x140003920
   140003914:	inc    edx
   140003916:	mov    rax,rcx
   140003919:	mov    DWORD PTR [rcx],edx
   14000391b:	add    rsp,0x28
   14000391f:	ret    
   140003920:	lea    rcx,[rsp+0x48]
   140003925:	call   0x140003980
   14000392a:	lea    rdx,[rip+0x6a0f]        # 0x14000a340
   140003931:	mov    ecx,DWORD PTR [rax]
   140003933:	mov    DWORD PTR [rsp+0x40],ecx
   140003937:	lea    rcx,[rsp+0x40]
   14000393c:	call   0x14000792c
   140003941:	int3   
   140003942:	int3   
   140003943:	int3   
   140003944:	int3   
   140003945:	int3   
   140003946:	int3   
   140003947:	int3   
   140003948:	int3   
   140003949:	int3   
   14000394a:	int3   
   14000394b:	int3   
   14000394c:	int3   
   14000394d:	int3   
   14000394e:	int3   
   14000394f:	int3   
   140003950:	sub    rcx,0x8
   140003954:	jmp    0x140002360
   140003959:	int3   
   14000395a:	int3   
   14000395b:	int3   
   14000395c:	int3   
   14000395d:	int3   
   14000395e:	int3   
   14000395f:	int3   
   140003960:	sub    rcx,0x8
   140003964:	jmp    0x140002420
   140003969:	int3   
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	sub    rcx,0x8
   140003974:	jmp    0x140002400
   140003979:	int3   
   14000397a:	int3   
   14000397b:	int3   
   14000397c:	int3   
   14000397d:	int3   
   14000397e:	int3   
   14000397f:	int3   
   140003980:	mov    DWORD PTR [rcx],0x216
   140003986:	mov    rax,rcx
   140003989:	ret    
   14000398a:	int3   
   14000398b:	int3   
   14000398c:	int3   
   14000398d:	int3   
   14000398e:	int3   
   14000398f:	int3   
   140003990:	mov    QWORD PTR [rsp+0x18],r8
   140003995:	mov    QWORD PTR [rsp+0x20],r9
   14000399a:	push   rbx
   14000399b:	push   rbp
   14000399c:	push   rsi
   14000399d:	push   rdi
   14000399e:	sub    rsp,0x28
   1400039a2:	xor    ebp,ebp
   1400039a4:	lea    rax,[rdx-0x1]
   1400039a8:	cmp    rax,0x7ffffffe
   1400039ae:	mov    rsi,rcx
   1400039b1:	mov    edi,ebp
   1400039b3:	mov    ecx,0x80070057
   1400039b8:	cmova  edi,ecx
   1400039bb:	test   edi,edi
   1400039bd:	js     0x1400039f4
   1400039bf:	lea    rbx,[rdx-0x1]
   1400039c3:	mov    rcx,rsi
   1400039c6:	mov    rdx,rbx
   1400039c9:	lea    r9,[rsp+0x68]
   1400039ce:	mov    edi,ebp
   1400039d0:	call   QWORD PTR [rip+0x4a32]        # 0x140008408
   1400039d6:	test   eax,eax
   1400039d8:	js     0x1400039e9
   1400039da:	cdqe   
   1400039dc:	cmp    rax,rbx
   1400039df:	ja     0x1400039e9
   1400039e1:	jne    0x1400039fc
   1400039e3:	mov    WORD PTR [rsi+rbx*2],bp
   1400039e7:	jmp    0x1400039fc
   1400039e9:	mov    WORD PTR [rsi+rbx*2],bp
   1400039ed:	mov    edi,0x8007007a
   1400039f2:	jmp    0x1400039fc
   1400039f4:	test   rdx,rdx
   1400039f7:	je     0x1400039fc
   1400039f9:	mov    WORD PTR [rsi],bp
   1400039fc:	mov    eax,edi
   1400039fe:	add    rsp,0x28
   140003a02:	pop    rdi
   140003a03:	pop    rsi
   140003a04:	pop    rbp
   140003a05:	pop    rbx
   140003a06:	ret    
   140003a07:	int3   
   140003a08:	int3   
   140003a09:	int3   
   140003a0a:	int3   
   140003a0b:	int3   
   140003a0c:	int3   
   140003a0d:	int3   
   140003a0e:	int3   
   140003a0f:	int3   
   140003a10:	mov    rax,rsp
   140003a13:	push   rdi
   140003a14:	push   r14
   140003a16:	push   r15
   140003a18:	sub    rsp,0x30
   140003a1c:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140003a24:	mov    QWORD PTR [rax+0x10],rbx
   140003a28:	mov    QWORD PTR [rax+0x18],rbp
   140003a2c:	mov    QWORD PTR [rax+0x20],rsi
   140003a30:	mov    r15,rdx
   140003a33:	mov    rdi,rcx
   140003a36:	lea    rdx,[rcx+0x58]
   140003a3a:	lea    rcx,[rax+0x8]
   140003a3e:	call   QWORD PTR [rip+0x4a4c]        # 0x140008490
   140003a44:	nop
   140003a45:	mov    r14d,DWORD PTR [rdi]
   140003a48:	xor    ebp,ebp
   140003a4a:	test   r14d,r14d
   140003a4d:	jle    0x140003ab8
   140003a4f:	mov    edx,ebp
   140003a51:	mov    rcx,rdi
   140003a54:	call   QWORD PTR [rip+0x4a1e]        # 0x140008478
   140003a5a:	mov    rsi,QWORD PTR [rax]
   140003a5d:	test   rsi,rsi
   140003a60:	je     0x140003ab8
   140003a62:	lea    rcx,[rsi+0x8]
   140003a66:	mov    rdx,r15
   140003a69:	call   QWORD PTR [rip+0x4711]        # 0x140008180
   140003a6f:	cmp    eax,0x1
   140003a72:	jge    0x140003ab8
   140003a74:	mov    edx,ebp
   140003a76:	mov    rcx,rdi
   140003a79:	call   QWORD PTR [rip+0x49f9]        # 0x140008478
   140003a7f:	and    QWORD PTR [rax],0x0
   140003a83:	mov    rax,QWORD PTR [rsi]
   140003a86:	mov    rbx,QWORD PTR [rax+0x8]
   140003a8a:	mov    rcx,rbx
   140003a8d:	call   QWORD PTR [rip+0x4b0d]        # 0x1400085a0
   140003a93:	mov    rcx,rsi
   140003a96:	call   rbx
   140003a98:	mov    rax,QWORD PTR [rsi]
   140003a9b:	mov    rbx,QWORD PTR [rax]
   140003a9e:	mov    rcx,rbx
   140003aa1:	call   QWORD PTR [rip+0x4af9]        # 0x1400085a0
   140003aa7:	mov    edx,0x1
   140003aac:	mov    rcx,rsi
   140003aaf:	call   rbx
   140003ab1:	inc    ebp
   140003ab3:	cmp    ebp,r14d
   140003ab6:	jl     0x140003a4f
   140003ab8:	mov    rcx,rdi
   140003abb:	call   QWORD PTR [rip+0x4a7f]        # 0x140008540
   140003ac1:	nop
   140003ac2:	lea    rcx,[rsp+0x50]
   140003ac7:	call   QWORD PTR [rip+0x49bb]        # 0x140008488
   140003acd:	mov    rbx,QWORD PTR [rsp+0x58]
   140003ad2:	mov    rbp,QWORD PTR [rsp+0x60]
   140003ad7:	mov    rsi,QWORD PTR [rsp+0x68]
   140003adc:	add    rsp,0x30
   140003ae0:	pop    r15
   140003ae2:	pop    r14
   140003ae4:	pop    rdi
   140003ae5:	ret    
   140003ae6:	int3   
   140003ae7:	int3   
   140003ae8:	int3   
   140003ae9:	int3   
   140003aea:	int3   
   140003aeb:	int3   
   140003aec:	int3   
   140003aed:	int3   
   140003aee:	int3   
   140003aef:	int3   
   140003af0:	sub    rsp,0x28
   140003af4:	call   0x140003b08
   140003af9:	xor    eax,eax
   140003afb:	add    rsp,0x28
   140003aff:	ret    
   140003b00:	int3   
   140003b01:	int3   
   140003b02:	int3   
   140003b03:	int3   
   140003b04:	int3   
   140003b05:	int3   
   140003b06:	int3   
   140003b07:	int3   
   140003b08:	mov    rax,rsp
   140003b0b:	push   rbp
   140003b0c:	push   r14
   140003b0e:	push   r15
   140003b10:	lea    rbp,[rax-0x5f]
   140003b14:	sub    rsp,0xa0
   140003b1b:	mov    QWORD PTR [rbp+0xf],0xfffffffffffffffe
   140003b23:	mov    QWORD PTR [rax+0x10],rbx
   140003b27:	mov    QWORD PTR [rax+0x18],rsi
   140003b2b:	mov    QWORD PTR [rax+0x20],rdi
   140003b2f:	mov    rax,QWORD PTR [rip+0x84d2]        # 0x14000c008
   140003b36:	xor    rax,rsp
   140003b39:	mov    QWORD PTR [rbp+0x37],rax
   140003b3d:	mov    rbx,rcx
   140003b40:	xor    edx,edx
   140003b42:	xor    ecx,ecx
   140003b44:	call   QWORD PTR [rip+0x45ee]        # 0x140008138
   140003b4a:	xor    r8d,r8d
   140003b4d:	xor    edx,edx
   140003b4f:	xor    ecx,ecx
   140003b51:	call   QWORD PTR [rip+0x4739]        # 0x140008290
   140003b57:	mov    r14,rax
   140003b5a:	xor    r8d,r8d
   140003b5d:	xor    edx,edx
   140003b5f:	xor    ecx,ecx
   140003b61:	call   QWORD PTR [rip+0x4729]        # 0x140008290
   140003b67:	mov    rsi,rax
   140003b6a:	xor    r15b,r15b
   140003b6d:	mov    QWORD PTR [rbp+0x17],r14
   140003b71:	mov    QWORD PTR [rbp+0x1f],rax
   140003b75:	mov    rcx,QWORD PTR [rbx+0xb0]
   140003b7c:	mov    QWORD PTR [rbp+0x27],rcx
   140003b80:	mov    rcx,QWORD PTR [rbx+0xa8]
   140003b87:	mov    QWORD PTR [rbp+0x2f],rcx
   140003b8b:	or     r9d,0xffffffff
   140003b8f:	xor    r8d,r8d
   140003b92:	lea    rdx,[rbp+0x17]
   140003b96:	lea    ecx,[r8+0x4]
   140003b9a:	call   QWORD PTR [rip+0x46e8]        # 0x140008288
   140003ba0:	mov    edi,eax
   140003ba2:	cmp    eax,0x2
   140003ba5:	ja     0x140003d0a
   140003bab:	mov    rcx,rsi
   140003bae:	call   QWORD PTR [rip+0x46bc]        # 0x140008270
   140003bb4:	test   edi,edi
   140003bb6:	je     0x140003c26
   140003bb8:	sub    edi,0x1
   140003bbb:	je     0x140003bc8
   140003bbd:	cmp    edi,0x1
   140003bc0:	je     0x140003c88
   140003bc6:	jmp    0x140003b8b
   140003bc8:	lea    rcx,[rbx+0x80]
   140003bcf:	call   QWORD PTR [rip+0x48cb]        # 0x1400084a0
   140003bd5:	cmp    QWORD PTR [rbx+0xc0],0x0
   140003bdd:	je     0x140003b8b
   140003bdf:	lea    rdx,[rbx+0x58]
   140003be3:	lea    rcx,[rbp-0x1]
   140003be7:	call   QWORD PTR [rip+0x48a3]        # 0x140008490
   140003bed:	cmp    DWORD PTR [rbx],0x0
   140003bf0:	jne    0x140003c17
   140003bf2:	mov    r15b,0x1
   140003bf5:	mov    rcx,QWORD PTR [rbx+0xc0]
   140003bfc:	call   QWORD PTR [rip+0x458e]        # 0x140008190
   140003c02:	and    QWORD PTR [rbx+0xc0],0x0
   140003c0a:	mov    rcx,QWORD PTR [rbx+0xa8]
   140003c11:	call   QWORD PTR [rip+0x4649]        # 0x140008260
   140003c17:	lea    rcx,[rbp-0x1]
   140003c1b:	call   QWORD PTR [rip+0x4867]        # 0x140008488
   140003c21:	jmp    0x140003b8b
   140003c26:	lea    rcx,[rbp-0x21]
   140003c2a:	call   QWORD PTR [rip+0x4678]        # 0x1400082a8
   140003c30:	lea    rdx,[rbp-0x21]
   140003c34:	mov    rcx,rbx
   140003c37:	call   0x140003a10
   140003c3c:	lea    rdx,[rbx+0x58]
   140003c40:	lea    rcx,[rbp-0x19]
   140003c44:	call   QWORD PTR [rip+0x4846]        # 0x140008490
   140003c4a:	cmp    DWORD PTR [rbx],0x0
   140003c4d:	jne    0x140003c7e
   140003c4f:	mov    rax,QWORD PTR [rbp-0x21]
   140003c53:	add    rax,0x23c34600
   140003c59:	mov    QWORD PTR [rbp+0x7],rax
   140003c5d:	mov    DWORD PTR [rsp+0x28],0x1
   140003c65:	and    QWORD PTR [rsp+0x20],0x0
   140003c6b:	xor    r9d,r9d
   140003c6e:	xor    r8d,r8d
   140003c71:	lea    rdx,[rbp+0x7]
   140003c75:	mov    rcx,rsi
   140003c78:	call   QWORD PTR [rip+0x45fa]        # 0x140008278
   140003c7e:	lea    rcx,[rbp-0x19]
   140003c82:	call   QWORD PTR [rip+0x4800]        # 0x140008488
   140003c88:	lea    rdx,[rbx+0x58]
   140003c8c:	lea    rcx,[rbp-0x11]
   140003c90:	call   QWORD PTR [rip+0x47fa]        # 0x140008490
   140003c96:	nop
   140003c97:	cmp    DWORD PTR [rbx],0x0
   140003c9a:	jle    0x140003cb0
   140003c9c:	xor    edx,edx
   140003c9e:	mov    rcx,rbx
   140003ca1:	call   QWORD PTR [rip+0x47d1]        # 0x140008478
   140003ca7:	mov    rcx,QWORD PTR [rax]
   140003caa:	mov    rax,QWORD PTR [rcx+0x8]
   140003cae:	jmp    0x140003cb7
   140003cb0:	mov    rax,QWORD PTR [rip+0x5171]        # 0x140008e28
   140003cb7:	mov    QWORD PTR [rbp-0x29],rax
   140003cbb:	lea    rcx,[rbp-0x11]
   140003cbf:	call   QWORD PTR [rip+0x47c3]        # 0x140008488
   140003cc5:	mov    rax,QWORD PTR [rbp-0x29]
   140003cc9:	cmp    QWORD PTR [rip+0x5158],rax        # 0x140008e28
   140003cd0:	je     0x140003b8b
   140003cd6:	mov    DWORD PTR [rsp+0x28],0x1
   140003cde:	and    QWORD PTR [rsp+0x20],0x0
   140003ce4:	xor    r9d,r9d
   140003ce7:	xor    r8d,r8d
   140003cea:	lea    rdx,[rbp-0x29]
   140003cee:	mov    rcx,r14
   140003cf1:	call   QWORD PTR [rip+0x4581]        # 0x140008278
   140003cf7:	test   eax,eax
   140003cf9:	jne    0x140003b8b
   140003cff:	call   QWORD PTR [rip+0x4453]        # 0x140008158
   140003d05:	jmp    0x140003b8b
   140003d0a:	mov    rcx,r14
   140003d0d:	call   QWORD PTR [rip+0x455d]        # 0x140008270
   140003d13:	mov    rcx,r14
   140003d16:	call   QWORD PTR [rip+0x4474]        # 0x140008190
   140003d1c:	mov    rcx,rsi
   140003d1f:	call   QWORD PTR [rip+0x454b]        # 0x140008270
   140003d25:	mov    rcx,rsi
   140003d28:	call   QWORD PTR [rip+0x4462]        # 0x140008190
   140003d2e:	lea    rcx,[rbp-0x9]
   140003d32:	call   QWORD PTR [rip+0x4570]        # 0x1400082a8
   140003d38:	lea    rdx,[rbp-0x9]
   140003d3c:	mov    rcx,rbx
   140003d3f:	call   0x140003a10
   140003d44:	call   QWORD PTR [rip+0x43ae]        # 0x1400080f8
   140003d4a:	test   r15b,r15b
   140003d4d:	je     0x140003d5c
   140003d4f:	lea    rcx,[rbx+0x80]
   140003d56:	call   QWORD PTR [rip+0x473c]        # 0x140008498
   140003d5c:	mov    rcx,QWORD PTR [rbp+0x37]
   140003d60:	xor    rcx,rsp
   140003d63:	call   0x140007230
   140003d68:	lea    r11,[rsp+0xa0]
   140003d70:	mov    rbx,QWORD PTR [r11+0x28]
   140003d74:	mov    rsi,QWORD PTR [r11+0x30]
   140003d78:	mov    rdi,QWORD PTR [r11+0x38]
   140003d7c:	mov    rsp,r11
   140003d7f:	pop    r15
   140003d81:	pop    r14
   140003d83:	pop    rbp
   140003d84:	ret    
   140003d85:	int3   
   140003d86:	int3   
   140003d87:	int3   
   140003d88:	int3   
   140003d89:	int3   
   140003d8a:	int3   
   140003d8b:	int3   
   140003d8c:	mov    rax,rsp
   140003d8f:	mov    QWORD PTR [rax+0x8],rcx
   140003d93:	push   rsi
   140003d94:	push   rdi
   140003d95:	push   r14
   140003d97:	sub    rsp,0x30
   140003d9b:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140003da3:	mov    QWORD PTR [rax+0x18],rbx
   140003da7:	lea    r14,[rip+0x89a2]        # 0x14000c750
   140003dae:	mov    QWORD PTR [rax+0x10],r14
   140003db2:	cmp    QWORD PTR [rip+0x8a56],0x0        # 0x14000c810
   140003dba:	je     0x140003e72
   140003dc0:	xor    bl,bl
   140003dc2:	lea    rdx,[rip+0x8a07]        # 0x14000c7d0
   140003dc9:	lea    rcx,[rax+0x8]
   140003dcd:	call   QWORD PTR [rip+0x46bd]        # 0x140008490
   140003dd3:	cmp    QWORD PTR [rip+0x8a35],0x0        # 0x14000c810
   140003ddb:	je     0x140003e1d
   140003ddd:	mov    rcx,QWORD PTR [rip+0x8a14]        # 0x14000c7f8
   140003de4:	call   QWORD PTR [rip+0x4476]        # 0x140008260
   140003dea:	test   eax,eax
   140003dec:	je     0x140003e1d
   140003dee:	mov    edx,0xea60
   140003df3:	mov    rcx,QWORD PTR [rip+0x8a16]        # 0x14000c810
   140003dfa:	call   QWORD PTR [rip+0x4450]        # 0x140008250
   140003e00:	cmp    eax,0x102
   140003e05:	setne  bl
   140003e08:	mov    rcx,QWORD PTR [rip+0x8a01]        # 0x14000c810
   140003e0f:	call   QWORD PTR [rip+0x437b]        # 0x140008190
   140003e15:	and    QWORD PTR [rip+0x89f3],0x0        # 0x14000c810
   140003e1d:	lea    rcx,[rsp+0x50]
   140003e22:	call   QWORD PTR [rip+0x4660]        # 0x140008488
   140003e28:	test   bl,bl
   140003e2a:	jne    0x140003e72
   140003e2c:	call   QWORD PTR [rip+0x4746]        # 0x140008578
   140003e32:	mov    rcx,rax
   140003e35:	or     edx,0xffffffff
   140003e38:	call   QWORD PTR [rip+0x4742]        # 0x140008580
   140003e3e:	lea    rax,[rip+0x81e3]        # 0x14000c028
   140003e45:	mov    rcx,QWORD PTR [rip+0x81dc]        # 0x14000c028
   140003e4c:	cmp    rcx,rax
   140003e4f:	je     0x140003e72
   140003e51:	test   BYTE PTR [rcx+0x1c],0x2
   140003e55:	je     0x140003e72
   140003e57:	cmp    BYTE PTR [rcx+0x19],0x2
   140003e5b:	jb     0x140003e72
   140003e5d:	mov    edx,0xa
   140003e62:	lea    r8,[rip+0x4faf]        # 0x140008e18
   140003e69:	mov    rcx,QWORD PTR [rcx+0x10]
   140003e6d:	call   0x140001f98
   140003e72:	lea    rdx,[rip+0x892f]        # 0x14000c7a8
   140003e79:	lea    rcx,[rsp+0x50]
   140003e7e:	call   QWORD PTR [rip+0x460c]        # 0x140008490
   140003e84:	nop
   140003e85:	xor    edi,edi
   140003e87:	cmp    DWORD PTR [rip+0x88c3],edi        # 0x14000c750
   140003e8d:	jle    0x140003ed4
   140003e8f:	mov    edx,edi
   140003e91:	mov    rcx,r14
   140003e94:	call   QWORD PTR [rip+0x45de]        # 0x140008478
   140003e9a:	mov    rsi,QWORD PTR [rax]
   140003e9d:	test   rsi,rsi
   140003ea0:	je     0x140003ebb
   140003ea2:	mov    rax,QWORD PTR [rsi]
   140003ea5:	mov    rbx,QWORD PTR [rax]
   140003ea8:	mov    rcx,rbx
   140003eab:	call   QWORD PTR [rip+0x46ef]        # 0x1400085a0
   140003eb1:	mov    edx,0x1
   140003eb6:	mov    rcx,rsi
   140003eb9:	call   rbx
   140003ebb:	mov    edx,edi
   140003ebd:	mov    rcx,r14
   140003ec0:	call   QWORD PTR [rip+0x45b2]        # 0x140008478
   140003ec6:	and    QWORD PTR [rax],0x0
   140003eca:	inc    edi
   140003ecc:	cmp    edi,DWORD PTR [rip+0x887e]        # 0x14000c750
   140003ed2:	jl     0x140003e8f
   140003ed4:	mov    rcx,r14
   140003ed7:	call   QWORD PTR [rip+0x45a3]        # 0x140008480
   140003edd:	nop
   140003ede:	lea    rcx,[rsp+0x50]
   140003ee3:	call   QWORD PTR [rip+0x459f]        # 0x140008488
   140003ee9:	mov    rcx,QWORD PTR [rip+0x8908]        # 0x14000c7f8
   140003ef0:	test   rcx,rcx
   140003ef3:	je     0x140003efb
   140003ef5:	call   QWORD PTR [rip+0x4295]        # 0x140008190
   140003efb:	mov    rcx,QWORD PTR [rip+0x88fe]        # 0x14000c800
   140003f02:	test   rcx,rcx
   140003f05:	je     0x140003f0e
   140003f07:	call   QWORD PTR [rip+0x4283]        # 0x140008190
   140003f0d:	nop
   140003f0e:	lea    rcx,[rip+0x88bb]        # 0x14000c7d0
   140003f15:	call   QWORD PTR [rip+0x458d]        # 0x1400084a8
   140003f1b:	nop
   140003f1c:	lea    rcx,[rip+0x8885]        # 0x14000c7a8
   140003f23:	call   QWORD PTR [rip+0x457f]        # 0x1400084a8
   140003f29:	nop
   140003f2a:	mov    rcx,r14
   140003f2d:	mov    rbx,QWORD PTR [rsp+0x60]
   140003f32:	add    rsp,0x30
   140003f36:	pop    r14
   140003f38:	pop    rdi
   140003f39:	pop    rsi
   140003f3a:	rex.W jmp QWORD PTR [rip+0x452f]        # 0x140008470
   140003f41:	int3   
   140003f42:	int3   
   140003f43:	int3   
   140003f44:	int3   
   140003f45:	int3   
   140003f46:	int3   
   140003f47:	int3   
   140003f48:	mov    rax,rsp
   140003f4b:	mov    QWORD PTR [rax+0x8],rcx
   140003f4f:	push   rsi
   140003f50:	push   rdi
   140003f51:	push   r15
   140003f53:	sub    rsp,0x40
   140003f57:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140003f5f:	mov    QWORD PTR [rax+0x10],rbx
   140003f63:	mov    rsi,rdx
   140003f66:	mov    r15d,0x80041001
   140003f6c:	mov    edi,r15d
   140003f6f:	lea    rdx,[rip+0x8832]        # 0x14000c7a8
   140003f76:	lea    rcx,[rax+0x18]
   140003f7a:	call   QWORD PTR [rip+0x4510]        # 0x140008490
   140003f80:	nop
   140003f81:	mov    edx,DWORD PTR [rip+0x87c9]        # 0x14000c750
   140003f87:	lea    rcx,[rip+0x87c2]        # 0x14000c750
   140003f8e:	test   edx,edx
   140003f90:	je     0x14000402f
   140003f96:	mov    rax,QWORD PTR [rsi+0x8]
   140003f9a:	mov    QWORD PTR [rsp+0x60],rax
   140003f9f:	dec    edx
   140003fa1:	call   QWORD PTR [rip+0x44d1]        # 0x140008478
   140003fa7:	mov    rcx,QWORD PTR [rax]
   140003faa:	add    rcx,0x8
   140003fae:	lea    rdx,[rsp+0x60]
   140003fb3:	call   QWORD PTR [rip+0x41c7]        # 0x140008180
   140003fb9:	test   eax,eax
   140003fbb:	jns    0x140003fcc
   140003fbd:	mov    edx,DWORD PTR [rip+0x878d]        # 0x14000c750
   140003fc3:	lea    rcx,[rip+0x8786]        # 0x14000c750
   140003fca:	jmp    0x14000402f
   140003fcc:	xor    ebx,ebx
   140003fce:	cmp    DWORD PTR [rip+0x877c],ebx        # 0x14000c750
   140003fd4:	jle    0x140004042
   140003fd6:	mov    rax,QWORD PTR [rsi+0x8]
   140003fda:	mov    QWORD PTR [rsp+0x60],rax
   140003fdf:	mov    edx,ebx
   140003fe1:	lea    rcx,[rip+0x8768]        # 0x14000c750
   140003fe8:	call   QWORD PTR [rip+0x448a]        # 0x140008478
   140003fee:	mov    rcx,QWORD PTR [rax]
   140003ff1:	add    rcx,0x8
   140003ff5:	lea    rdx,[rsp+0x60]
   140003ffa:	call   QWORD PTR [rip+0x4180]        # 0x140008180
   140004000:	test   eax,eax
   140004002:	js     0x14000401f
   140004004:	mov    r8,rsi
   140004007:	mov    edx,ebx
   140004009:	lea    rcx,[rip+0x8740]        # 0x14000c750
   140004010:	call   QWORD PTR [rip+0x4532]        # 0x140008548
   140004016:	test   eax,eax
   140004018:	je     0x14000402b
   14000401a:	mov    edi,0x80041006
   14000401f:	inc    ebx
   140004021:	cmp    ebx,DWORD PTR [rip+0x8729]        # 0x14000c750
   140004027:	jge    0x140004042
   140004029:	jmp    0x140003fd6
   14000402b:	xor    edi,edi
   14000402d:	jmp    0x140004042
   14000402f:	mov    r8,rsi
   140004032:	call   QWORD PTR [rip+0x4510]        # 0x140008548
   140004038:	neg    eax
   14000403a:	sbb    edi,edi
   14000403c:	and    edi,0x80041006
   140004042:	lea    rcx,[rsp+0x70]
   140004047:	call   QWORD PTR [rip+0x443b]        # 0x140008488
   14000404d:	test   edi,edi
   14000404f:	js     0x1400040c3
   140004051:	lea    rdx,[rip+0x8778]        # 0x14000c7d0
   140004058:	lea    rcx,[rsp+0x70]
   14000405d:	call   QWORD PTR [rip+0x442d]        # 0x140008490
   140004063:	xor    edi,edi
   140004065:	cmp    QWORD PTR [rip+0x87a4],rdi        # 0x14000c810
   14000406c:	jne    0x1400040a2
   14000406e:	lea    rax,[rsp+0x60]
   140004073:	mov    QWORD PTR [rsp+0x28],rax
   140004078:	and    DWORD PTR [rsp+0x20],edi
   14000407c:	lea    r9,[rip+0x86cd]        # 0x14000c750
   140004083:	lea    r8,[rip+0xfffffffffffffa66]        # 0x140003af0
   14000408a:	xor    edx,edx
   14000408c:	xor    ecx,ecx
   14000408e:	call   QWORD PTR [rip+0x416c]        # 0x140008200
   140004094:	mov    QWORD PTR [rip+0x8775],rax        # 0x14000c810
   14000409b:	test   rax,rax
   14000409e:	cmove  edi,r15d
   1400040a2:	lea    rcx,[rsp+0x70]
   1400040a7:	call   QWORD PTR [rip+0x43db]        # 0x140008488
   1400040ad:	mov    rcx,QWORD PTR [rip+0x874c]        # 0x14000c800
   1400040b4:	call   QWORD PTR [rip+0x41a6]        # 0x140008260
   1400040ba:	test   eax,eax
   1400040bc:	jne    0x1400040e1
   1400040be:	mov    edi,r15d
   1400040c1:	jmp    0x1400040e1
   1400040c3:	test   rsi,rsi
   1400040c6:	je     0x1400040e1
   1400040c8:	mov    rcx,QWORD PTR [rsi]
   1400040cb:	mov    rbx,QWORD PTR [rcx]
   1400040ce:	mov    rcx,rbx
   1400040d1:	call   QWORD PTR [rip+0x44c9]        # 0x1400085a0
   1400040d7:	mov    edx,0x1
   1400040dc:	mov    rcx,rsi
   1400040df:	call   rbx
   1400040e1:	mov    eax,edi
   1400040e3:	mov    rbx,QWORD PTR [rsp+0x68]
   1400040e8:	add    rsp,0x40
   1400040ec:	pop    r15
   1400040ee:	pop    rdi
   1400040ef:	pop    rsi
   1400040f0:	ret    
   1400040f1:	int3   
   1400040f2:	int3   
   1400040f3:	int3   
   1400040f4:	int3   
   1400040f5:	int3   
   1400040f6:	int3   
   1400040f7:	int3   
   1400040f8:	mov    r11,rsp
   1400040fb:	mov    QWORD PTR [r11+0x18],rbx
   1400040ff:	mov    QWORD PTR [r11+0x20],rsi
   140004103:	mov    QWORD PTR [r11+0x8],rcx
   140004107:	push   rdi
   140004108:	sub    rsp,0x50
   14000410c:	and    QWORD PTR [r11+0x10],0x0
   140004111:	lea    rax,[r11+0x8]
   140004115:	and    QWORD PTR [r11+0x8],0x0
   14000411a:	lea    r9,[rip+0x4fef]        # 0x140009110
   140004121:	xor    edx,edx
   140004123:	mov    QWORD PTR [r11-0x38],rax
   140004127:	lea    rcx,[rip+0x4fd2]        # 0x140009100
   14000412e:	lea    r8d,[rdx+0x1]
   140004132:	call   QWORD PTR [rip+0x3fc8]        # 0x140008100
   140004138:	test   eax,eax
   14000413a:	js     0x1400041b8
   14000413c:	lea    rcx,[rip+0x4ced]        # 0x140008e30
   140004143:	call   QWORD PTR [rip+0x3f2f]        # 0x140008078
   140004149:	mov    rsi,rax
   14000414c:	test   rax,rax
   14000414f:	je     0x14000419e
   140004151:	mov    rdi,QWORD PTR [rsp+0x60]
   140004156:	mov    rdx,QWORD PTR [rdi]
   140004159:	mov    rbx,QWORD PTR [rdx+0x18]
   14000415d:	mov    rcx,rbx
   140004160:	call   QWORD PTR [rip+0x443a]        # 0x1400085a0
   140004166:	lea    rax,[rsp+0x68]
   14000416b:	xor    r9d,r9d
   14000416e:	mov    QWORD PTR [rsp+0x40],rax
   140004173:	xor    r8d,r8d
   140004176:	and    QWORD PTR [rsp+0x38],0x0
   14000417c:	mov    rdx,rsi
   14000417f:	and    QWORD PTR [rsp+0x30],0x0
   140004185:	mov    rcx,rdi
   140004188:	and    DWORD PTR [rsp+0x28],0x0
   14000418d:	and    QWORD PTR [rsp+0x20],0x0
   140004193:	call   rbx
   140004195:	mov    rcx,rsi
   140004198:	call   QWORD PTR [rip+0x3ee2]        # 0x140008080
   14000419e:	mov    rdi,QWORD PTR [rsp+0x60]
   1400041a3:	mov    rax,QWORD PTR [rdi]
   1400041a6:	mov    rbx,QWORD PTR [rax+0x10]
   1400041aa:	mov    rcx,rbx
   1400041ad:	call   QWORD PTR [rip+0x43ed]        # 0x1400085a0
   1400041b3:	mov    rcx,rdi
   1400041b6:	call   rbx
   1400041b8:	mov    rax,QWORD PTR [rsp+0x68]
   1400041bd:	mov    rbx,QWORD PTR [rsp+0x70]
   1400041c2:	mov    rsi,QWORD PTR [rsp+0x78]
   1400041c7:	add    rsp,0x50
   1400041cb:	pop    rdi
   1400041cc:	ret    
   1400041cd:	int3   
   1400041ce:	int3   
   1400041cf:	int3   
   1400041d0:	int3   
   1400041d1:	int3   
   1400041d2:	int3   
   1400041d3:	int3   
   1400041d4:	mov    rax,rsp
   1400041d7:	mov    QWORD PTR [rax+0x20],r9
   1400041db:	push   rbp
   1400041dc:	push   rsi
   1400041dd:	push   rdi
   1400041de:	push   r12
   1400041e0:	push   r13
   1400041e2:	push   r14
   1400041e4:	push   r15
   1400041e6:	mov    rbp,rsp
   1400041e9:	sub    rsp,0x80
   1400041f0:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   1400041f8:	mov    QWORD PTR [rax+0x10],rbx
   1400041fc:	mov    r14,r9
   1400041ff:	mov    r12,r8
   140004202:	mov    r13,rdx
   140004205:	mov    r15,rcx
   140004208:	xor    edi,edi
   14000420a:	mov    QWORD PTR [rbp-0x30],rdi
   14000420e:	lea    rdx,[rcx+0x10]
   140004212:	lea    rcx,[rbp-0x28]
   140004216:	call   QWORD PTR [rip+0x4274]        # 0x140008490
   14000421c:	nop
   14000421d:	cmp    QWORD PTR [r15+0x8],rdi
   140004221:	jne    0x1400042db
   140004227:	call   0x1400040f8
   14000422c:	mov    rsi,rax
   14000422f:	test   rax,rax
   140004232:	je     0x1400042db
   140004238:	lea    rcx,[rip+0x4c69]        # 0x140008ea8
   14000423f:	call   QWORD PTR [rip+0x3e33]        # 0x140008078
   140004245:	mov    r14,rax
   140004248:	test   rax,rax
   14000424b:	je     0x1400042c2
   14000424d:	mov    QWORD PTR [rbp+0x40],rdi
   140004251:	mov    rcx,QWORD PTR [rsi]
   140004254:	mov    rbx,QWORD PTR [rcx+0x30]
   140004258:	mov    rcx,rbx
   14000425b:	call   QWORD PTR [rip+0x433f]        # 0x1400085a0
   140004261:	mov    QWORD PTR [rsp+0x28],rdi
   140004266:	lea    rax,[rbp+0x40]
   14000426a:	mov    QWORD PTR [rsp+0x20],rax
   14000426f:	xor    r9d,r9d
   140004272:	xor    r8d,r8d
   140004275:	mov    rdx,r14
   140004278:	mov    rcx,rsi
   14000427b:	call   rbx
   14000427d:	test   eax,eax
   14000427f:	js     0x1400042b9
   140004281:	mov    rdi,QWORD PTR [rbp+0x40]
   140004285:	mov    rax,QWORD PTR [rdi]
   140004288:	mov    rbx,QWORD PTR [rax+0x78]
   14000428c:	mov    rcx,rbx
   14000428f:	call   QWORD PTR [rip+0x430b]        # 0x1400085a0
   140004295:	lea    r8,[r15+0x8]
   140004299:	xor    edx,edx
   14000429b:	mov    rcx,rdi
   14000429e:	call   rbx
   1400042a0:	mov    rdi,QWORD PTR [rbp+0x40]
   1400042a4:	mov    rax,QWORD PTR [rdi]
   1400042a7:	mov    rbx,QWORD PTR [rax+0x10]
   1400042ab:	mov    rcx,rbx
   1400042ae:	call   QWORD PTR [rip+0x42ec]        # 0x1400085a0
   1400042b4:	mov    rcx,rdi
   1400042b7:	call   rbx
   1400042b9:	mov    rcx,r14
   1400042bc:	call   QWORD PTR [rip+0x3dbe]        # 0x140008080
   1400042c2:	mov    rax,QWORD PTR [rsi]
   1400042c5:	mov    rbx,QWORD PTR [rax+0x10]
   1400042c9:	mov    rcx,rbx
   1400042cc:	call   QWORD PTR [rip+0x42ce]        # 0x1400085a0
   1400042d2:	mov    rcx,rsi
   1400042d5:	call   rbx
   1400042d7:	mov    r14,QWORD PTR [rbp+0x58]
   1400042db:	mov    rdi,QWORD PTR [r15+0x8]
   1400042df:	xor    r15d,r15d
   1400042e2:	test   rdi,rdi
   1400042e5:	je     0x140004300
   1400042e7:	mov    rax,QWORD PTR [rdi]
   1400042ea:	mov    rbx,QWORD PTR [rax+0x60]
   1400042ee:	mov    rcx,rbx
   1400042f1:	call   QWORD PTR [rip+0x42a9]        # 0x1400085a0
   1400042f7:	lea    rdx,[rbp-0x30]
   1400042fb:	mov    rcx,rdi
   1400042fe:	call   rbx
   140004300:	mov    rdi,QWORD PTR [rbp-0x30]
   140004304:	lea    rcx,[rbp-0x28]
   140004308:	call   QWORD PTR [rip+0x417a]        # 0x140008488
   14000430e:	mov    QWORD PTR [rbp-0x38],r15
   140004312:	test   rdi,rdi
   140004315:	je     0x1400044ff
   14000431b:	mov    rax,QWORD PTR [rdi]
   14000431e:	mov    rbx,QWORD PTR [rax]
   140004321:	mov    rcx,rbx
   140004324:	call   QWORD PTR [rip+0x4276]        # 0x1400085a0
   14000432a:	lea    r8,[rbp-0x38]
   14000432e:	lea    rdx,[rip+0x4bfb]        # 0x140008f30
   140004335:	mov    rcx,rdi
   140004338:	call   rbx
   14000433a:	test   eax,eax
   14000433c:	js     0x1400044cc
   140004342:	lea    rcx,[rbp-0x18]
   140004346:	call   QWORD PTR [rip+0x3d1c]        # 0x140008068
   14000434c:	mov    eax,0x8
   140004351:	mov    WORD PTR [rbp-0x18],ax
   140004355:	test   r13,r13
   140004358:	je     0x14000439e
   14000435a:	mov    rcx,r13
   14000435d:	call   QWORD PTR [rip+0x3d15]        # 0x140008078
   140004363:	mov    QWORD PTR [rbp-0x10],rax
   140004367:	test   rax,rax
   14000436a:	je     0x14000439e
   14000436c:	mov    rax,QWORD PTR [rdi]
   14000436f:	mov    rbx,QWORD PTR [rax+0x28]
   140004373:	mov    rcx,rbx
   140004376:	call   QWORD PTR [rip+0x4224]        # 0x1400085a0
   14000437c:	mov    DWORD PTR [rsp+0x20],r15d
   140004381:	lea    r9,[rbp-0x18]
   140004385:	xor    r8d,r8d
   140004388:	lea    rdx,[rip+0x4ab1]        # 0x140008e40
   14000438f:	mov    rcx,rdi
   140004392:	call   rbx
   140004394:	mov    rcx,QWORD PTR [rbp-0x10]
   140004398:	call   QWORD PTR [rip+0x3ce2]        # 0x140008080
   14000439e:	test   r12,r12
   1400043a1:	je     0x1400043e7
   1400043a3:	mov    rcx,r12
   1400043a6:	call   QWORD PTR [rip+0x3ccc]        # 0x140008078
   1400043ac:	mov    QWORD PTR [rbp-0x10],rax
   1400043b0:	test   rax,rax
   1400043b3:	je     0x1400043e7
   1400043b5:	mov    rax,QWORD PTR [rdi]
   1400043b8:	mov    rbx,QWORD PTR [rax+0x28]
   1400043bc:	mov    rcx,rbx
   1400043bf:	call   QWORD PTR [rip+0x41db]        # 0x1400085a0
   1400043c5:	mov    DWORD PTR [rsp+0x20],r15d
   1400043ca:	lea    r9,[rbp-0x18]
   1400043ce:	xor    r8d,r8d
   1400043d1:	lea    rdx,[rip+0x4a80]        # 0x140008e58
   1400043d8:	mov    rcx,rdi
   1400043db:	call   rbx
   1400043dd:	mov    rcx,QWORD PTR [rbp-0x10]
   1400043e1:	call   QWORD PTR [rip+0x3c99]        # 0x140008080
   1400043e7:	mov    esi,DWORD PTR [rbp+0x60]
   1400043ea:	test   r14,r14
   1400043ed:	je     0x1400043fa
   1400043ef:	mov    rcx,r14
   1400043f2:	call   QWORD PTR [rip+0x3c80]        # 0x140008078
   1400043f8:	jmp    0x140004451
   1400043fa:	mov    QWORD PTR [rbp-0x40],r15
   1400043fe:	mov    QWORD PTR [rsp+0x30],r15
   140004403:	mov    DWORD PTR [rsp+0x28],0x1
   14000440b:	lea    rax,[rbp-0x40]
   14000440f:	mov    QWORD PTR [rsp+0x20],rax
   140004414:	xor    r9d,r9d
   140004417:	mov    r8d,esi
   14000441a:	xor    edx,edx
   14000441c:	mov    ecx,0x1300
   140004421:	call   QWORD PTR [rip+0x3d99]        # 0x1400081c0
   140004427:	test   eax,eax
   140004429:	je     0x14000444e
   14000442b:	mov    rcx,QWORD PTR [rbp-0x40]
   14000442f:	test   rcx,rcx
   140004432:	je     0x14000444e
   140004434:	call   QWORD PTR [rip+0x3c3e]        # 0x140008078
   14000443a:	mov    QWORD PTR [rbp-0x10],rax
   14000443e:	mov    rcx,QWORD PTR [rbp-0x40]
   140004442:	call   QWORD PTR [rip+0x3d58]        # 0x1400081a0
   140004448:	mov    rax,QWORD PTR [rbp-0x10]
   14000444c:	jmp    0x140004455
   14000444e:	mov    rax,r15
   140004451:	mov    QWORD PTR [rbp-0x10],rax
   140004455:	test   rax,rax
   140004458:	je     0x14000448c
   14000445a:	mov    rax,QWORD PTR [rdi]
   14000445d:	mov    rbx,QWORD PTR [rax+0x28]
   140004461:	mov    rcx,rbx
   140004464:	call   QWORD PTR [rip+0x4136]        # 0x1400085a0
   14000446a:	mov    DWORD PTR [rsp+0x20],r15d
   14000446f:	lea    r9,[rbp-0x18]
   140004473:	xor    r8d,r8d
   140004476:	lea    rdx,[rip+0x49fb]        # 0x140008e78
   14000447d:	mov    rcx,rdi
   140004480:	call   rbx
   140004482:	mov    rcx,QWORD PTR [rbp-0x10]
   140004486:	call   QWORD PTR [rip+0x3bf4]        # 0x140008080
   14000448c:	mov    eax,0x3
   140004491:	mov    WORD PTR [rbp-0x18],ax
   140004495:	mov    DWORD PTR [rbp-0x10],esi
   140004498:	mov    rax,QWORD PTR [rdi]
   14000449b:	mov    rbx,QWORD PTR [rax+0x28]
   14000449f:	mov    rcx,rbx
   1400044a2:	call   QWORD PTR [rip+0x40f8]        # 0x1400085a0
   1400044a8:	mov    DWORD PTR [rsp+0x20],r15d
   1400044ad:	lea    r9,[rbp-0x18]
   1400044b1:	xor    r8d,r8d
   1400044b4:	lea    rdx,[rip+0x49d5]        # 0x140008e90
   1400044bb:	mov    rcx,rdi
   1400044be:	call   rbx
   1400044c0:	mov    rdx,QWORD PTR [rbp-0x38]
   1400044c4:	xor    ecx,ecx
   1400044c6:	call   QWORD PTR [rip+0x3bcc]        # 0x140008098
   1400044cc:	mov    rax,QWORD PTR [rdi]
   1400044cf:	mov    rbx,QWORD PTR [rax+0x10]
   1400044d3:	mov    rcx,rbx
   1400044d6:	call   QWORD PTR [rip+0x40c4]        # 0x1400085a0
   1400044dc:	mov    rcx,rdi
   1400044df:	call   rbx
   1400044e1:	mov    rdi,QWORD PTR [rbp-0x38]
   1400044e5:	test   rdi,rdi
   1400044e8:	je     0x1400044ff
   1400044ea:	mov    rax,QWORD PTR [rdi]
   1400044ed:	mov    rbx,QWORD PTR [rax+0x10]
   1400044f1:	mov    rcx,rbx
   1400044f4:	call   QWORD PTR [rip+0x40a6]        # 0x1400085a0
   1400044fa:	mov    rcx,rdi
   1400044fd:	call   rbx
   1400044ff:	mov    rbx,QWORD PTR [rsp+0xc8]
   140004507:	add    rsp,0x80
   14000450e:	pop    r15
   140004510:	pop    r14
   140004512:	pop    r13
   140004514:	pop    r12
   140004516:	pop    rdi
   140004517:	pop    rsi
   140004518:	pop    rbp
   140004519:	ret    
   14000451a:	int3   
   14000451b:	int3   
   14000451c:	int3   
   14000451d:	int3   
   14000451e:	int3   
   14000451f:	int3   
   140004520:	rex.W jmp QWORD PTR [rip+0x3fc1]        # 0x1400084e8
   140004527:	int3   
   140004528:	int3   
   140004529:	int3   
   14000452a:	int3   
   14000452b:	int3   
   14000452c:	int3   
   14000452d:	int3   
   14000452e:	int3   
   14000452f:	int3   
   140004530:	mov    QWORD PTR [rsp+0x8],rcx
   140004535:	push   rbx
   140004536:	sub    rsp,0x20
   14000453a:	mov    rbx,rcx
   14000453d:	mov    QWORD PTR [rcx],rdx
   140004540:	mov    rcx,rdx
   140004543:	call   QWORD PTR [rip+0x3ac7]        # 0x140008010
   140004549:	jmp    0x140004550
   14000454b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004550:	mov    rax,rbx
   140004553:	add    rsp,0x20
   140004557:	pop    rbx
   140004558:	ret    
   140004559:	int3   
   14000455a:	int3   
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	mov    DWORD PTR [rsp+0x20],r9d
   140004565:	sub    rsp,0x58
   140004569:	mov    rax,QWORD PTR [rsp+0x80]
   140004571:	xor    r9d,r9d
   140004574:	mov    r10,rcx
   140004577:	test   rax,rax
   14000457a:	je     0x1400045a0
   14000457c:	cmp    WORD PTR [rax],r9w
   140004580:	jne    0x140004588
   140004582:	lea    ecx,[r9+0xe]
   140004586:	jmp    0x1400045a5
   140004588:	or     rcx,0xffffffffffffffff
   14000458c:	inc    rcx
   14000458f:	cmp    WORD PTR [rax+rcx*2],r9w
   140004594:	jne    0x14000458c
   140004596:	lea    rcx,[rcx*2+0x2]
   14000459e:	jmp    0x1400045a5
   1400045a0:	mov    ecx,0xa
   1400045a5:	test   rax,rax
   1400045a8:	je     0x1400045bb
   1400045aa:	cmp    WORD PTR [rax],r9w
   1400045ae:	lea    r8,[rip+0x4623]        # 0x140008bd8
   1400045b5:	cmove  rax,r8
   1400045b9:	jmp    0x1400045c2
   1400045bb:	lea    rax,[rip+0x4626]        # 0x140008be8
   1400045c2:	mov    QWORD PTR [rsp+0x40],r9
   1400045c7:	lea    r8,[rip+0x4b22]        # 0x1400090f0
   1400045ce:	mov    QWORD PTR [rsp+0x38],rcx
   1400045d3:	mov    rcx,r10
   1400045d6:	mov    QWORD PTR [rsp+0x30],rax
   1400045db:	lea    rax,[rsp+0x78]
   1400045e0:	movzx  r9d,dx
   1400045e4:	mov    edx,0x2b
   1400045e9:	mov    QWORD PTR [rsp+0x28],0x4
   1400045f2:	mov    QWORD PTR [rsp+0x20],rax
   1400045f7:	call   QWORD PTR [rip+0x3e23]        # 0x140008420
   1400045fd:	add    rsp,0x58
   140004601:	ret    
   140004602:	int3   
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	sub    rsp,0x48
   14000460c:	xor    r10d,r10d
   14000460f:	test   r9,r9
   140004612:	je     0x140004638
   140004614:	cmp    WORD PTR [r9],r10w
   140004618:	jne    0x140004620
   14000461a:	lea    eax,[r10+0xe]
   14000461e:	jmp    0x14000463d
   140004620:	or     rax,0xffffffffffffffff
   140004624:	inc    rax
   140004627:	cmp    WORD PTR [r9+rax*2],r10w
   14000462c:	jne    0x140004624
   14000462e:	lea    rax,[rax*2+0x2]
   140004636:	jmp    0x14000463d
   140004638:	mov    eax,0xa
   14000463d:	test   r9,r9
   140004640:	je     0x140004653
   140004642:	cmp    WORD PTR [r9],r10w
   140004646:	lea    r8,[rip+0x458b]        # 0x140008bd8
   14000464d:	cmove  r9,r8
   140004651:	jmp    0x14000465a
   140004653:	lea    r9,[rip+0x458e]        # 0x140008be8
   14000465a:	mov    QWORD PTR [rsp+0x30],r10
   14000465f:	lea    r8,[rip+0x4a8a]        # 0x1400090f0
   140004666:	mov    QWORD PTR [rsp+0x28],rax
   14000466b:	mov    QWORD PTR [rsp+0x20],r9
   140004670:	movzx  r9d,dx
   140004674:	mov    edx,0x2b
   140004679:	call   QWORD PTR [rip+0x3da1]        # 0x140008420
   14000467f:	add    rsp,0x48
   140004683:	ret    
   140004684:	int3   
   140004685:	int3   
   140004686:	int3   
   140004687:	int3   
   140004688:	int3   
   140004689:	int3   
   14000468a:	int3   
   14000468b:	int3   
   14000468c:	sub    rsp,0x58
   140004690:	xor    r10d,r10d
   140004693:	test   r9,r9
   140004696:	je     0x1400046bc
   140004698:	cmp    WORD PTR [r9],r10w
   14000469c:	jne    0x1400046a4
   14000469e:	lea    eax,[r10+0xe]
   1400046a2:	jmp    0x1400046c1
   1400046a4:	or     rax,0xffffffffffffffff
   1400046a8:	inc    rax
   1400046ab:	cmp    WORD PTR [r9+rax*2],r10w
   1400046b0:	jne    0x1400046a8
   1400046b2:	lea    rax,[rax*2+0x2]
   1400046ba:	jmp    0x1400046c1
   1400046bc:	mov    eax,0xa
   1400046c1:	test   r9,r9
   1400046c4:	je     0x1400046d7
   1400046c6:	cmp    WORD PTR [r9],r10w
   1400046ca:	lea    r8,[rip+0x4507]        # 0x140008bd8
   1400046d1:	cmove  r9,r8
   1400046d5:	jmp    0x1400046de
   1400046d7:	lea    r9,[rip+0x450a]        # 0x140008be8
   1400046de:	mov    QWORD PTR [rsp+0x40],r10
   1400046e3:	lea    r8,[rip+0x4856]        # 0x140008f40
   1400046ea:	mov    QWORD PTR [rsp+0x38],0x30
   1400046f3:	mov    QWORD PTR [rsp+0x30],r8
   1400046f8:	lea    r8,[rip+0x49f1]        # 0x1400090f0
   1400046ff:	mov    QWORD PTR [rsp+0x28],rax
   140004704:	mov    QWORD PTR [rsp+0x20],r9
   140004709:	movzx  r9d,dx
   14000470d:	mov    edx,0x2b
   140004712:	call   QWORD PTR [rip+0x3d08]        # 0x140008420
   140004718:	add    rsp,0x58
   14000471c:	ret    
   14000471d:	int3   
   14000471e:	int3   
   14000471f:	int3   
   140004720:	int3   
   140004721:	int3   
   140004722:	int3   
   140004723:	int3   
   140004724:	sub    rsp,0x28
   140004728:	call   QWORD PTR [rip+0x38d2]        # 0x140008000
   14000472e:	jmp    0x140004730
   140004730:	or     eax,0xffffffff
   140004733:	add    rsp,0x28
   140004737:	ret    
   140004738:	int3   
   140004739:	int3   
   14000473a:	int3   
   14000473b:	int3   
   14000473c:	int3   
   14000473d:	int3   
   14000473e:	int3   
   14000473f:	int3   
   140004740:	sub    rsp,0x28
   140004744:	test   rcx,rcx
   140004747:	je     0x14000474f
   140004749:	call   QWORD PTR [rip+0x3d69]        # 0x1400084b8
   14000474f:	add    rsp,0x28
   140004753:	ret    
   140004754:	int3   
   140004755:	int3   
   140004756:	int3   
   140004757:	int3   
   140004758:	int3   
   140004759:	int3   
   14000475a:	int3   
   14000475b:	int3   
   14000475c:	mov    QWORD PTR [rsp+0x10],rbx
   140004761:	mov    QWORD PTR [rsp+0x20],rbp
   140004766:	push   rsi
   140004767:	push   rdi
   140004768:	push   r14
   14000476a:	sub    rsp,0x140
   140004771:	mov    rax,QWORD PTR [rip+0x7890]        # 0x14000c008
   140004778:	xor    rax,rsp
   14000477b:	mov    QWORD PTR [rsp+0x130],rax
   140004783:	mov    rbp,r8
   140004786:	lea    rax,[rsp+0x30]
   14000478b:	xor    r14d,r14d
   14000478e:	lea    rdx,[rsp+0x30]
   140004793:	mov    r9,rbp
   140004796:	mov    rsi,rcx
   140004799:	sub    r9,rax
   14000479c:	mov    r8d,0x80
   1400047a2:	mov    ebx,r14d
   1400047a5:	lea    rax,[r8+0x7fffff7e]
   1400047ac:	test   rax,rax
   1400047af:	je     0x1400047c8
   1400047b1:	movzx  eax,WORD PTR [r9+rdx*1]
   1400047b6:	test   ax,ax
   1400047b9:	je     0x1400047c8
   1400047bb:	mov    WORD PTR [rdx],ax
   1400047be:	add    rdx,0x2
   1400047c2:	sub    r8,0x1
   1400047c6:	jne    0x1400047a5
   1400047c8:	test   r8,r8
   1400047cb:	jne    0x1400047d6
   1400047cd:	sub    rdx,0x2
   1400047d1:	mov    ebx,0x8007007a
   1400047d6:	mov    WORD PTR [rdx],r14w
   1400047da:	test   ebx,ebx
   1400047dc:	jns    0x140004826
   1400047de:	call   QWORD PTR [rip+0x3d94]        # 0x140008578
   1400047e4:	mov    rcx,rax
   1400047e7:	mov    edx,ebx
   1400047e9:	call   QWORD PTR [rip+0x3d91]        # 0x140008580
   1400047ef:	mov    rcx,QWORD PTR [rip+0x7832]        # 0x14000c028
   1400047f6:	lea    rax,[rip+0x782b]        # 0x14000c028
   1400047fd:	cmp    rcx,rax
   140004800:	je     0x14000481f
   140004802:	test   BYTE PTR [rcx+0x1c],0x1
   140004806:	je     0x14000481f
   140004808:	cmp    BYTE PTR [rcx+0x19],0x2
   14000480c:	jb     0x14000481f
   14000480e:	mov    rcx,QWORD PTR [rcx+0x10]
   140004812:	mov    edx,0xa
   140004817:	mov    r9,rbp
   14000481a:	call   0x14000468c
   14000481f:	mov    eax,ebx
   140004821:	jmp    0x140004945
   140004826:	mov    ebx,0x100
   14000482b:	lea    r8,[rip+0x470e]        # 0x140008f40
   140004832:	mov    edx,ebx
   140004834:	call   0x140006a70
   140004839:	mov    edi,eax
   14000483b:	test   eax,eax
   14000483d:	jns    0x140004885
   14000483f:	call   QWORD PTR [rip+0x3d33]        # 0x140008578
   140004845:	mov    rcx,rax
   140004848:	mov    edx,edi
   14000484a:	call   QWORD PTR [rip+0x3d30]        # 0x140008580
   140004850:	mov    rcx,QWORD PTR [rip+0x77d1]        # 0x14000c028
   140004857:	lea    rax,[rip+0x77ca]        # 0x14000c028
   14000485e:	cmp    rcx,rax
   140004861:	je     0x140004943
   140004867:	test   BYTE PTR [rcx+0x1c],0x1
   14000486b:	je     0x140004943
   140004871:	cmp    BYTE PTR [rcx+0x19],0x2
   140004875:	jb     0x140004943
   14000487b:	mov    edx,0xb
   140004880:	jmp    0x140004937
   140004885:	mov    rax,rbx
   140004888:	mov    rcx,rsi
   14000488b:	cmp    WORD PTR [rcx],r14w
   14000488f:	je     0x14000489b
   140004891:	add    rcx,0x2
   140004895:	sub    rax,0x1
   140004899:	jne    0x14000488b
   14000489b:	test   rax,rax
   14000489e:	je     0x1400048fd
   1400048a0:	mov    rcx,rbx
   1400048a3:	mov    edi,r14d
   1400048a6:	sub    rcx,rax
   1400048a9:	lea    rax,[rsi+rcx*2]
   1400048ad:	sub    rbx,rcx
   1400048b0:	je     0x1400048ea
   1400048b2:	lea    rdx,[rcx+0x7ffffefe]
   1400048b9:	add    rdx,rbx
   1400048bc:	lea    rcx,[rsp+0x30]
   1400048c1:	sub    rcx,rax
   1400048c4:	test   rdx,rdx
   1400048c7:	je     0x1400048e5
   1400048c9:	movzx  r8d,WORD PTR [rcx+rax*1]
   1400048ce:	test   r8w,r8w
   1400048d2:	je     0x1400048e5
   1400048d4:	mov    WORD PTR [rax],r8w
   1400048d8:	dec    rdx
   1400048db:	add    rax,0x2
   1400048df:	sub    rbx,0x1
   1400048e3:	jne    0x1400048c4
   1400048e5:	test   rbx,rbx
   1400048e8:	jne    0x1400048f3
   1400048ea:	sub    rax,0x2
   1400048ee:	mov    edi,0x8007007a
   1400048f3:	mov    WORD PTR [rax],r14w
   1400048f7:	test   edi,edi
   1400048f9:	jns    0x140004943
   1400048fb:	jmp    0x140004902
   1400048fd:	mov    edi,0x80070057
   140004902:	call   QWORD PTR [rip+0x3c70]        # 0x140008578
   140004908:	mov    rcx,rax
   14000490b:	mov    edx,edi
   14000490d:	call   QWORD PTR [rip+0x3c6d]        # 0x140008580
   140004913:	mov    rcx,QWORD PTR [rip+0x770e]        # 0x14000c028
   14000491a:	lea    rax,[rip+0x7707]        # 0x14000c028
   140004921:	cmp    rcx,rax
   140004924:	je     0x140004943
   140004926:	test   BYTE PTR [rcx+0x1c],0x1
   14000492a:	je     0x140004943
   14000492c:	cmp    BYTE PTR [rcx+0x19],0x2
   140004930:	jb     0x140004943
   140004932:	mov    edx,0xc
   140004937:	mov    rcx,QWORD PTR [rcx+0x10]
   14000493b:	mov    r9,rbp
   14000493e:	call   0x14000468c
   140004943:	mov    eax,edi
   140004945:	mov    rcx,QWORD PTR [rsp+0x130]
   14000494d:	xor    rcx,rsp
   140004950:	call   0x140007230
   140004955:	lea    r11,[rsp+0x140]
   14000495d:	mov    rbx,QWORD PTR [r11+0x28]
   140004961:	mov    rbp,QWORD PTR [r11+0x38]
   140004965:	mov    rsp,r11
   140004968:	pop    r14
   14000496a:	pop    rdi
   14000496b:	pop    rsi
   14000496c:	ret    
   14000496d:	int3   
   14000496e:	int3   
   14000496f:	int3   
   140004970:	int3   
   140004971:	int3   
   140004972:	int3   
   140004973:	int3   
   140004974:	int3   
   140004975:	int3   
   140004976:	int3   
   140004977:	int3   
   140004978:	int3   
   140004979:	int3   
   14000497a:	int3   
   14000497b:	int3   
   14000497c:	int3   
   14000497d:	int3   
   14000497e:	int3   
   14000497f:	int3   
   140004980:	mov    QWORD PTR [rsp+0x8],rbx
   140004985:	push   rdi
   140004986:	sub    rsp,0x20
   14000498a:	lea    rax,[rip+0x413f]        # 0x140008ad0
   140004991:	mov    rdi,rcx
   140004994:	mov    QWORD PTR [rcx],rax
   140004997:	mov    ebx,edx
   140004999:	mov    rcx,QWORD PTR [rcx+0x28]
   14000499d:	call   QWORD PTR [rip+0x3b45]        # 0x1400084e8
   1400049a3:	mov    rcx,QWORD PTR [rdi+0x20]
   1400049a7:	call   QWORD PTR [rip+0x3b0b]        # 0x1400084b8
   1400049ad:	test   bl,0x1
   1400049b0:	je     0x1400049bb
   1400049b2:	mov    rcx,rdi
   1400049b5:	call   QWORD PTR [rip+0x3b2d]        # 0x1400084e8
   1400049bb:	mov    rax,rdi
   1400049be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400049c3:	add    rsp,0x20
   1400049c7:	pop    rdi
   1400049c8:	ret    
   1400049c9:	int3   
   1400049ca:	int3   
   1400049cb:	int3   
   1400049cc:	int3   
   1400049cd:	int3   
   1400049ce:	int3   
   1400049cf:	int3   
   1400049d0:	mov    rax,rsp
   1400049d3:	push   rbp
   1400049d4:	push   r14
   1400049d6:	push   r15
   1400049d8:	lea    rbp,[rax-0x4d8]
   1400049df:	sub    rsp,0x5c0
   1400049e6:	mov    QWORD PTR [rbp-0x70],0xfffffffffffffffe
   1400049ee:	mov    QWORD PTR [rax+0x10],rbx
   1400049f2:	mov    QWORD PTR [rax+0x18],rsi
   1400049f6:	mov    QWORD PTR [rax+0x20],rdi
   1400049fa:	mov    rax,QWORD PTR [rip+0x7607]        # 0x14000c008
   140004a01:	xor    rax,rsp
   140004a04:	mov    QWORD PTR [rbp+0x4b0],rax
   140004a0b:	mov    rdi,rcx
   140004a0e:	mov    r8d,0x80
   140004a14:	lea    rdx,[rbp-0x60]
   140004a18:	mov    rcx,QWORD PTR [rcx+0x18]
   140004a1c:	call   QWORD PTR [rip+0x36ee]        # 0x140008110
   140004a22:	lea    r8,[rbp-0x60]
   140004a26:	lea    rcx,[rbp+0x2b0]
   140004a2d:	call   0x14000475c
   140004a32:	mov    ebx,eax
   140004a34:	xor    r15d,r15d
   140004a37:	test   eax,eax
   140004a39:	jns    0x140004a86
   140004a3b:	call   QWORD PTR [rip+0x3b37]        # 0x140008578
   140004a41:	mov    rcx,rax
   140004a44:	mov    edx,ebx
   140004a46:	call   QWORD PTR [rip+0x3b34]        # 0x140008580
   140004a4c:	lea    rax,[rip+0x75d5]        # 0x14000c028
   140004a53:	mov    rcx,QWORD PTR [rip+0x75ce]        # 0x14000c028
   140004a5a:	cmp    rcx,rax
   140004a5d:	je     0x140004a7c
   140004a5f:	test   BYTE PTR [rcx+0x1c],0x1
   140004a63:	je     0x140004a7c
   140004a65:	cmp    BYTE PTR [rcx+0x19],0x2
   140004a69:	jb     0x140004a7c
   140004a6b:	lea    edx,[r15+0xd]
   140004a6f:	lea    r9,[rbp-0x60]
   140004a73:	mov    rcx,QWORD PTR [rcx+0x10]
   140004a77:	call   0x140004608
   140004a7c:	mov    eax,0x80004005
   140004a81:	jmp    0x140004eff
   140004a86:	lea    rax,[rsp+0x50]
   140004a8b:	mov    QWORD PTR [rsp+0x38],rax
   140004a90:	lea    rdx,[rbp+0x2b0]
   140004a97:	mov    rcx,0xffffffff80000002
   140004a9e:	call   0x140006bcc
   140004aa3:	mov    ebx,eax
   140004aa5:	test   eax,eax
   140004aa7:	je     0x140004af8
   140004aa9:	call   QWORD PTR [rip+0x3ac9]        # 0x140008578
   140004aaf:	mov    rcx,rax
   140004ab2:	mov    edx,ebx
   140004ab4:	call   QWORD PTR [rip+0x3ac6]        # 0x140008580
   140004aba:	lea    rax,[rip+0x7567]        # 0x14000c028
   140004ac1:	mov    rcx,QWORD PTR [rip+0x7560]        # 0x14000c028
   140004ac8:	cmp    rcx,rax
   140004acb:	je     0x140004a7c
   140004acd:	test   BYTE PTR [rcx+0x1c],0x1
   140004ad1:	je     0x140004a7c
   140004ad3:	cmp    BYTE PTR [rcx+0x19],0x2
   140004ad7:	jb     0x140004a7c
   140004ad9:	mov    edx,0xe
   140004ade:	lea    rax,[rbp+0x2b0]
   140004ae5:	mov    QWORD PTR [rsp+0x20],rax
   140004aea:	mov    r9d,ebx
   140004aed:	mov    rcx,QWORD PTR [rcx+0x10]
   140004af1:	call   0x140004560
   140004af6:	jmp    0x140004a7c
   140004af8:	mov    r8,QWORD PTR [rsp+0x50]
   140004afd:	lea    rcx,[rsp+0x78]
   140004b02:	call   0x140006a18
   140004b07:	nop
   140004b08:	mov    rcx,QWORD PTR [rdi+0x28]
   140004b0c:	or     rbx,0xffffffffffffffff
   140004b10:	mov    rax,rbx
   140004b13:	inc    rax
   140004b16:	cmp    WORD PTR [rcx+rax*2],r15w
   140004b1b:	jne    0x140004b13
   140004b1d:	add    eax,0x64
   140004b20:	movsxd r14,eax
   140004b23:	mov    eax,0x2
   140004b28:	mul    r14
   140004b2b:	cmovo  rax,rbx
   140004b2f:	mov    rcx,rax
   140004b32:	call   QWORD PTR [rip+0x39b8]        # 0x1400084f0
   140004b38:	mov    rsi,rax
   140004b3b:	test   rax,rax
   140004b3e:	jne    0x140004b97
   140004b40:	call   QWORD PTR [rip+0x3a32]        # 0x140008578
   140004b46:	mov    rcx,rax
   140004b49:	mov    edx,0x8007000e
   140004b4e:	call   QWORD PTR [rip+0x3a2c]        # 0x140008580
   140004b54:	lea    rax,[rip+0x74cd]        # 0x14000c028
   140004b5b:	mov    rcx,QWORD PTR [rip+0x74c6]        # 0x14000c028
   140004b62:	cmp    rcx,rax
   140004b65:	je     0x140004cf9
   140004b6b:	test   BYTE PTR [rcx+0x1c],0x1
   140004b6f:	je     0x140004cf9
   140004b75:	cmp    BYTE PTR [rcx+0x19],0x2
   140004b79:	jb     0x140004cf9
   140004b7f:	lea    edx,[rsi+0xf]
   140004b82:	lea    r9,[rbp+0x2b0]
   140004b89:	mov    rcx,QWORD PTR [rcx+0x10]
   140004b8d:	call   0x140004608
   140004b92:	jmp    0x140004cf9
   140004b97:	mov    r9,QWORD PTR [rdi+0x28]
   140004b9b:	lea    r8,[rip+0x43ce]        # 0x140008f70
   140004ba2:	mov    rdx,r14
   140004ba5:	mov    rcx,rax
   140004ba8:	call   0x140003990
   140004bad:	mov    r14d,eax
   140004bb0:	test   eax,eax
   140004bb2:	jns    0x140004c0b
   140004bb4:	call   QWORD PTR [rip+0x39be]        # 0x140008578
   140004bba:	mov    rcx,rax
   140004bbd:	mov    edx,r14d
   140004bc0:	call   QWORD PTR [rip+0x39ba]        # 0x140008580
   140004bc6:	lea    rax,[rip+0x745b]        # 0x14000c028
   140004bcd:	mov    rcx,QWORD PTR [rip+0x7454]        # 0x14000c028
   140004bd4:	cmp    rcx,rax
   140004bd7:	je     0x140004cf9
   140004bdd:	test   BYTE PTR [rcx+0x1c],0x1
   140004be1:	je     0x140004cf9
   140004be7:	cmp    BYTE PTR [rcx+0x19],0x2
   140004beb:	jb     0x140004cf9
   140004bf1:	mov    edx,0x10
   140004bf6:	lea    r8,[rip+0x44f3]        # 0x1400090f0
   140004bfd:	mov    rcx,QWORD PTR [rcx+0x10]
   140004c01:	call   0x140001f98
   140004c06:	jmp    0x140004cf9
   140004c0b:	mov    rax,rbx
   140004c0e:	inc    rax
   140004c11:	cmp    WORD PTR [rsi+rax*2],r15w
   140004c16:	jne    0x140004c0e
   140004c18:	lea    eax,[rax*2+0x2]
   140004c1f:	mov    DWORD PTR [rsp+0x28],eax
   140004c23:	mov    QWORD PTR [rsp+0x20],rsi
   140004c28:	xor    edx,edx
   140004c2a:	mov    rcx,QWORD PTR [rsp+0x50]
   140004c2f:	call   0x140006de0
   140004c34:	mov    r14d,eax
   140004c37:	test   eax,eax
   140004c39:	je     0x140004c90
   140004c3b:	call   QWORD PTR [rip+0x3937]        # 0x140008578
   140004c41:	mov    rcx,rax
   140004c44:	mov    edx,r14d
   140004c47:	call   QWORD PTR [rip+0x3933]        # 0x140008580
   140004c4d:	lea    rax,[rip+0x73d4]        # 0x14000c028
   140004c54:	mov    rcx,QWORD PTR [rip+0x73cd]        # 0x14000c028
   140004c5b:	cmp    rcx,rax
   140004c5e:	je     0x140004cf9
   140004c64:	test   BYTE PTR [rcx+0x1c],0x1
   140004c68:	je     0x140004cf9
   140004c6e:	cmp    BYTE PTR [rcx+0x19],0x2
   140004c72:	jb     0x140004cf9
   140004c78:	mov    edx,0x11
   140004c7d:	mov    QWORD PTR [rsp+0x20],rsi
   140004c82:	mov    r9d,r14d
   140004c85:	mov    rcx,QWORD PTR [rcx+0x10]
   140004c89:	call   0x140004560
   140004c8e:	jmp    0x140004cf9
   140004c90:	lea    rax,[rsp+0x58]
   140004c95:	mov    QWORD PTR [rsp+0x38],rax
   140004c9a:	lea    rdx,[rip+0x42f7]        # 0x140008f98
   140004ca1:	mov    rcx,QWORD PTR [rsp+0x50]
   140004ca6:	call   0x140006bcc
   140004cab:	mov    esi,eax
   140004cad:	test   eax,eax
   140004caf:	je     0x140004d03
   140004cb1:	call   QWORD PTR [rip+0x38c1]        # 0x140008578
   140004cb7:	mov    rcx,rax
   140004cba:	mov    edx,esi
   140004cbc:	call   QWORD PTR [rip+0x38be]        # 0x140008580
   140004cc2:	lea    rax,[rip+0x735f]        # 0x14000c028
   140004cc9:	mov    rcx,QWORD PTR [rip+0x7358]        # 0x14000c028
   140004cd0:	cmp    rcx,rax
   140004cd3:	je     0x140004cf9
   140004cd5:	test   BYTE PTR [rcx+0x1c],0x1
   140004cd9:	je     0x140004cf9
   140004cdb:	cmp    BYTE PTR [rcx+0x19],0x2
   140004cdf:	jb     0x140004cf9
   140004ce1:	mov    edx,0x12
   140004ce6:	mov    r9d,esi
   140004ce9:	lea    r8,[rip+0x4400]        # 0x1400090f0
   140004cf0:	mov    rcx,QWORD PTR [rcx+0x10]
   140004cf4:	call   0x140001fbc
   140004cf9:	mov    ebx,0x80004005
   140004cfe:	jmp    0x140004ee5
   140004d03:	mov    r8,QWORD PTR [rsp+0x58]
   140004d08:	lea    rcx,[rsp+0x60]
   140004d0d:	call   0x140006a18
   140004d12:	nop
   140004d13:	mov    eax,0x30
   140004d18:	mov    WORD PTR [rbp+0x2a8],ax
   140004d1f:	mov    r8d,0x104
   140004d25:	lea    rdx,[rbp+0xa0]
   140004d2c:	mov    rcx,QWORD PTR [rip+0x7b4d]        # 0x14000c880
   140004d33:	call   QWORD PTR [rip+0x32e7]        # 0x140008020
   140004d39:	test   eax,eax
   140004d3b:	jne    0x140004d86
   140004d3d:	call   QWORD PTR [rip+0x3835]        # 0x140008578
   140004d43:	mov    rcx,rax
   140004d46:	xor    edx,edx
   140004d48:	call   QWORD PTR [rip+0x3832]        # 0x140008580
   140004d4e:	lea    rax,[rip+0x72d3]        # 0x14000c028
   140004d55:	mov    rcx,QWORD PTR [rip+0x72cc]        # 0x14000c028
   140004d5c:	cmp    rcx,rax
   140004d5f:	je     0x140004ebf
   140004d65:	test   BYTE PTR [rcx+0x1c],0x1
   140004d69:	je     0x140004ebf
   140004d6f:	cmp    BYTE PTR [rcx+0x19],0x2
   140004d73:	jb     0x140004ebf
   140004d79:	mov    edx,0x13
   140004d7e:	xor    r9d,r9d
   140004d81:	jmp    0x140004eaf
   140004d86:	lea    rcx,[rbp+0xa0]
   140004d8d:	mov    rax,rbx
   140004d90:	inc    rax
   140004d93:	cmp    WORD PTR [rcx+rax*2],r15w
   140004d98:	jne    0x140004d90
   140004d9a:	lea    eax,[rax*2+0x2]
   140004da1:	mov    DWORD PTR [rsp+0x28],eax
   140004da5:	lea    rax,[rbp+0xa0]
   140004dac:	mov    QWORD PTR [rsp+0x20],rax
   140004db1:	xor    edx,edx
   140004db3:	mov    rcx,QWORD PTR [rsp+0x58]
   140004db8:	call   0x140006de0
   140004dbd:	mov    esi,eax
   140004dbf:	test   eax,eax
   140004dc1:	je     0x140004e21
   140004dc3:	call   QWORD PTR [rip+0x37af]        # 0x140008578
   140004dc9:	mov    rcx,rax
   140004dcc:	mov    edx,esi
   140004dce:	call   QWORD PTR [rip+0x37ac]        # 0x140008580
   140004dd4:	lea    rax,[rip+0x724d]        # 0x14000c028
   140004ddb:	mov    rcx,QWORD PTR [rip+0x7246]        # 0x14000c028
   140004de2:	cmp    rcx,rax
   140004de5:	je     0x140004ebf
   140004deb:	test   BYTE PTR [rcx+0x1c],0x1
   140004def:	je     0x140004ebf
   140004df5:	cmp    BYTE PTR [rcx+0x19],0x2
   140004df9:	jb     0x140004ebf
   140004dff:	mov    edx,0x14
   140004e04:	lea    rax,[rbp+0xa0]
   140004e0b:	mov    QWORD PTR [rsp+0x20],rax
   140004e10:	mov    r9d,esi
   140004e13:	mov    rcx,QWORD PTR [rcx+0x10]
   140004e17:	call   0x140004560
   140004e1c:	jmp    0x140004ebf
   140004e21:	cmp    DWORD PTR [rdi+0x30],r15d
   140004e25:	je     0x140004e3f
   140004e27:	lea    rcx,[rip+0x418a]        # 0x140008fb8
   140004e2e:	lea    rax,[rip+0x4193]        # 0x140008fc8
   140004e35:	cmp    DWORD PTR [rdi+0x34],r15d
   140004e39:	cmovne rcx,rax
   140004e3d:	jmp    0x140004e46
   140004e3f:	lea    rcx,[rip+0x4192]        # 0x140008fd8
   140004e46:	inc    rbx
   140004e49:	cmp    WORD PTR [rcx+rbx*2],r15w
   140004e4e:	jne    0x140004e46
   140004e50:	lea    eax,[rbx*2+0x2]
   140004e57:	mov    DWORD PTR [rsp+0x28],eax
   140004e5b:	mov    QWORD PTR [rsp+0x20],rcx
   140004e60:	lea    rdx,[rip+0x4189]        # 0x140008ff0
   140004e67:	mov    rcx,QWORD PTR [rsp+0x58]
   140004e6c:	call   0x140006de0
   140004e71:	mov    ebx,eax
   140004e73:	test   eax,eax
   140004e75:	je     0x140004ec6
   140004e77:	call   QWORD PTR [rip+0x36fb]        # 0x140008578
   140004e7d:	mov    rcx,rax
   140004e80:	mov    edx,ebx
   140004e82:	call   QWORD PTR [rip+0x36f8]        # 0x140008580
   140004e88:	lea    rax,[rip+0x7199]        # 0x14000c028
   140004e8f:	mov    rcx,QWORD PTR [rip+0x7192]        # 0x14000c028
   140004e96:	cmp    rcx,rax
   140004e99:	je     0x140004ebf
   140004e9b:	test   BYTE PTR [rcx+0x1c],0x1
   140004e9f:	je     0x140004ebf
   140004ea1:	cmp    BYTE PTR [rcx+0x19],0x2
   140004ea5:	jb     0x140004ebf
   140004ea7:	mov    edx,0x15
   140004eac:	mov    r9d,ebx
   140004eaf:	lea    r8,[rip+0x423a]        # 0x1400090f0
   140004eb6:	mov    rcx,QWORD PTR [rcx+0x10]
   140004eba:	call   0x140001fbc
   140004ebf:	mov    ebx,0x80004005
   140004ec4:	jmp    0x140004ec9
   140004ec6:	mov    ebx,r15d
   140004ec9:	cmp    BYTE PTR [rsp+0x60],r15b
   140004ece:	jne    0x140004ee5
   140004ed0:	mov    rcx,QWORD PTR [rsp+0x68]
   140004ed5:	call   QWORD PTR [rip+0x36c5]        # 0x1400085a0
   140004edb:	mov    rcx,QWORD PTR [rsp+0x70]
   140004ee0:	call   QWORD PTR [rsp+0x68]
   140004ee4:	nop
   140004ee5:	cmp    BYTE PTR [rsp+0x78],r15b
   140004eea:	jne    0x140004efd
   140004eec:	mov    rcx,QWORD PTR [rbp-0x80]
   140004ef0:	call   QWORD PTR [rip+0x36aa]        # 0x1400085a0
   140004ef6:	mov    rcx,QWORD PTR [rbp-0x78]
   140004efa:	call   QWORD PTR [rbp-0x80]
   140004efd:	mov    eax,ebx
   140004eff:	mov    rcx,QWORD PTR [rbp+0x4b0]
   140004f06:	xor    rcx,rsp
   140004f09:	call   0x140007230
   140004f0e:	lea    r11,[rsp+0x5c0]
   140004f16:	mov    rbx,QWORD PTR [r11+0x28]
   140004f1a:	mov    rsi,QWORD PTR [r11+0x30]
   140004f1e:	mov    rdi,QWORD PTR [r11+0x38]
   140004f22:	mov    rsp,r11
   140004f25:	pop    r15
   140004f27:	pop    r14
   140004f29:	pop    rbp
   140004f2a:	ret    
   140004f2b:	int3   
   140004f2c:	int3   
   140004f2d:	int3   
   140004f2e:	int3   
   140004f2f:	int3   
   140004f30:	int3   
   140004f31:	int3   
   140004f32:	int3   
   140004f33:	int3   
   140004f34:	mov    rax,rsp
   140004f37:	push   rbp
   140004f38:	push   r14
   140004f3a:	push   r15
   140004f3c:	lea    rbp,[rax-0x288]
   140004f43:	sub    rsp,0x370
   140004f4a:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140004f53:	mov    QWORD PTR [rax+0x10],rbx
   140004f57:	mov    QWORD PTR [rax+0x18],rsi
   140004f5b:	mov    rax,QWORD PTR [rip+0x70a6]        # 0x14000c008
   140004f62:	xor    rax,rsp
   140004f65:	mov    QWORD PTR [rbp+0x260],rax
   140004f6c:	mov    r8d,0x80
   140004f72:	lea    rdx,[rsp+0x60]
   140004f77:	mov    rcx,QWORD PTR [rcx+0x18]
   140004f7b:	call   QWORD PTR [rip+0x318f]        # 0x140008110
   140004f81:	lea    r8,[rsp+0x60]
   140004f86:	lea    rcx,[rbp+0x60]
   140004f8a:	call   0x14000475c
   140004f8f:	mov    ebx,eax
   140004f91:	test   eax,eax
   140004f93:	jns    0x140004fe3
   140004f95:	call   QWORD PTR [rip+0x35dd]        # 0x140008578
   140004f9b:	mov    rcx,rax
   140004f9e:	mov    edx,ebx
   140004fa0:	call   QWORD PTR [rip+0x35da]        # 0x140008580
   140004fa6:	lea    rsi,[rip+0x707b]        # 0x14000c028
   140004fad:	mov    rcx,QWORD PTR [rip+0x7074]        # 0x14000c028
   140004fb4:	cmp    rcx,rsi
   140004fb7:	je     0x140004fd9
   140004fb9:	test   BYTE PTR [rcx+0x1c],0x1
   140004fbd:	je     0x140004fd9
   140004fbf:	mov    bl,0x2
   140004fc1:	cmp    BYTE PTR [rcx+0x19],bl
   140004fc4:	jb     0x140004fd9
   140004fc6:	mov    edx,0x16
   140004fcb:	lea    r9,[rsp+0x60]
   140004fd0:	mov    rcx,QWORD PTR [rcx+0x10]
   140004fd4:	call   0x140004608
   140004fd9:	mov    eax,0x80004005
   140004fde:	jmp    0x1400051ca
   140004fe3:	lea    rax,[rsp+0x30]
   140004fe8:	mov    QWORD PTR [rsp+0x20],rax
   140004fed:	lea    rdx,[rbp+0x60]
   140004ff1:	call   0x140006d58
   140004ff6:	mov    r14d,eax
   140004ff9:	mov    bl,0x2
   140004ffb:	test   eax,eax
   140004ffd:	jne    0x140005093
   140005003:	mov    r8,QWORD PTR [rsp+0x30]
   140005008:	lea    rcx,[rsp+0x38]
   14000500d:	call   0x140006a18
   140005012:	nop
   140005013:	lea    rdx,[rip+0x3f7e]        # 0x140008f98
   14000501a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000501f:	call   0x140006c74
   140005024:	mov    r14d,eax
   140005027:	lea    rsi,[rip+0x6ffa]        # 0x14000c028
   14000502e:	test   eax,eax
   140005030:	je     0x140005076
   140005032:	call   QWORD PTR [rip+0x3540]        # 0x140008578
   140005038:	mov    rcx,rax
   14000503b:	mov    edx,r14d
   14000503e:	call   QWORD PTR [rip+0x353c]        # 0x140008580
   140005044:	mov    rcx,QWORD PTR [rip+0x6fdd]        # 0x14000c028
   14000504b:	cmp    rcx,rsi
   14000504e:	je     0x140005076
   140005050:	test   BYTE PTR [rcx+0x1c],0x1
   140005054:	je     0x140005076
   140005056:	cmp    BYTE PTR [rcx+0x19],bl
   140005059:	jb     0x140005076
   14000505b:	mov    edx,0x17
   140005060:	lea    rax,[rbp+0x60]
   140005064:	mov    QWORD PTR [rsp+0x20],rax
   140005069:	mov    r9d,r14d
   14000506c:	mov    rcx,QWORD PTR [rcx+0x10]
   140005070:	call   0x140004560
   140005075:	nop
   140005076:	cmp    BYTE PTR [rsp+0x38],0x0
   14000507b:	jne    0x1400050dd
   14000507d:	mov    rcx,QWORD PTR [rsp+0x40]
   140005082:	call   QWORD PTR [rip+0x3518]        # 0x1400085a0
   140005088:	mov    rcx,QWORD PTR [rsp+0x48]
   14000508d:	call   QWORD PTR [rsp+0x40]
   140005091:	jmp    0x1400050dd
   140005093:	call   QWORD PTR [rip+0x34df]        # 0x140008578
   140005099:	mov    rcx,rax
   14000509c:	mov    edx,r14d
   14000509f:	call   QWORD PTR [rip+0x34db]        # 0x140008580
   1400050a5:	lea    rsi,[rip+0x6f7c]        # 0x14000c028
   1400050ac:	mov    rcx,QWORD PTR [rip+0x6f75]        # 0x14000c028
   1400050b3:	cmp    rcx,rsi
   1400050b6:	je     0x1400050dd
   1400050b8:	test   BYTE PTR [rcx+0x1c],0x1
   1400050bc:	je     0x1400050dd
   1400050be:	cmp    BYTE PTR [rcx+0x19],bl
   1400050c1:	jb     0x1400050dd
   1400050c3:	mov    edx,0x18
   1400050c8:	lea    rax,[rbp+0x60]
   1400050cc:	mov    QWORD PTR [rsp+0x20],rax
   1400050d1:	mov    r9d,r14d
   1400050d4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400050d8:	call   0x140004560
   1400050dd:	lea    rax,[rsp+0x30]
   1400050e2:	mov    QWORD PTR [rsp+0x20],rax
   1400050e7:	lea    r15,[rip+0x3f22]        # 0x140009010
   1400050ee:	mov    rdx,r15
   1400050f1:	call   0x140006d58
   1400050f6:	mov    r14d,eax
   1400050f9:	test   eax,eax
   1400050fb:	jne    0x140005189
   140005101:	mov    r8,QWORD PTR [rsp+0x30]
   140005106:	lea    rcx,[rsp+0x38]
   14000510b:	call   0x140006a18
   140005110:	nop
   140005111:	lea    rdx,[rsp+0x60]
   140005116:	mov    rcx,QWORD PTR [rsp+0x30]
   14000511b:	call   0x140006c74
   140005120:	mov    r14d,eax
   140005123:	test   eax,eax
   140005125:	je     0x14000516c
   140005127:	call   QWORD PTR [rip+0x344b]        # 0x140008578
   14000512d:	mov    rcx,rax
   140005130:	mov    edx,r14d
   140005133:	call   QWORD PTR [rip+0x3447]        # 0x140008580
   140005139:	mov    rcx,QWORD PTR [rip+0x6ee8]        # 0x14000c028
   140005140:	cmp    rcx,rsi
   140005143:	je     0x14000516c
   140005145:	test   BYTE PTR [rcx+0x1c],0x1
   140005149:	je     0x14000516c
   14000514b:	cmp    BYTE PTR [rcx+0x19],bl
   14000514e:	jb     0x14000516c
   140005150:	mov    edx,0x19
   140005155:	lea    rax,[rsp+0x60]
   14000515a:	mov    QWORD PTR [rsp+0x20],rax
   14000515f:	mov    r9d,r14d
   140005162:	mov    rcx,QWORD PTR [rcx+0x10]
   140005166:	call   0x140004560
   14000516b:	nop
   14000516c:	cmp    BYTE PTR [rsp+0x38],0x0
   140005171:	jne    0x1400051c8
   140005173:	mov    rcx,QWORD PTR [rsp+0x40]
   140005178:	call   QWORD PTR [rip+0x3422]        # 0x1400085a0
   14000517e:	mov    rcx,QWORD PTR [rsp+0x48]
   140005183:	call   QWORD PTR [rsp+0x40]
   140005187:	jmp    0x1400051c8
   140005189:	call   QWORD PTR [rip+0x33e9]        # 0x140008578
   14000518f:	mov    rcx,rax
   140005192:	mov    edx,r14d
   140005195:	call   QWORD PTR [rip+0x33e5]        # 0x140008580
   14000519b:	mov    rcx,QWORD PTR [rip+0x6e86]        # 0x14000c028
   1400051a2:	cmp    rcx,rsi
   1400051a5:	je     0x1400051c8
   1400051a7:	test   BYTE PTR [rcx+0x1c],0x1
   1400051ab:	je     0x1400051c8
   1400051ad:	cmp    BYTE PTR [rcx+0x19],bl
   1400051b0:	jb     0x1400051c8
   1400051b2:	mov    edx,0x1a
   1400051b7:	mov    QWORD PTR [rsp+0x20],r15
   1400051bc:	mov    r9d,r14d
   1400051bf:	mov    rcx,QWORD PTR [rcx+0x10]
   1400051c3:	call   0x140004560
   1400051c8:	xor    eax,eax
   1400051ca:	mov    rcx,QWORD PTR [rbp+0x260]
   1400051d1:	xor    rcx,rsp
   1400051d4:	call   0x140007230
   1400051d9:	lea    r11,[rsp+0x370]
   1400051e1:	mov    rbx,QWORD PTR [r11+0x28]
   1400051e5:	mov    rsi,QWORD PTR [r11+0x30]
   1400051e9:	mov    rsp,r11
   1400051ec:	pop    r15
   1400051ee:	pop    r14
   1400051f0:	pop    rbp
   1400051f1:	ret    
   1400051f2:	int3   
   1400051f3:	int3   
   1400051f4:	int3   
   1400051f5:	int3   
   1400051f6:	int3   
   1400051f7:	int3   
   1400051f8:	int3   
   1400051f9:	int3   
   1400051fa:	int3   
   1400051fb:	int3   
   1400051fc:	int3   
   1400051fd:	int3   
   1400051fe:	int3   
   1400051ff:	int3   
   140005200:	mov    edx,0x2
   140005205:	xor    ecx,ecx
   140005207:	rex.W jmp QWORD PTR [rip+0x2f2a]        # 0x140008138
   14000520e:	int3   
   14000520f:	int3   
   140005210:	int3   
   140005211:	int3   
   140005212:	int3   
   140005213:	int3   
   140005214:	mov    rax,rsp
   140005217:	mov    QWORD PTR [rax+0x20],r9
   14000521b:	push   rdi
   14000521c:	sub    rsp,0x30
   140005220:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140005228:	mov    QWORD PTR [rax+0x8],rbx
   14000522c:	mov    QWORD PTR [rax+0x10],rbp
   140005230:	mov    rdi,r8
   140005233:	test   r8,r8
   140005236:	jne    0x140005293
   140005238:	call   QWORD PTR [rip+0x333a]        # 0x140008578
   14000523e:	mov    rcx,rax
   140005241:	mov    edi,0x8007000e
   140005246:	mov    edx,edi
   140005248:	call   QWORD PTR [rip+0x3332]        # 0x140008580
   14000524e:	lea    rax,[rip+0x6dd3]        # 0x14000c028
   140005255:	mov    rcx,QWORD PTR [rip+0x6dcc]        # 0x14000c028
   14000525c:	cmp    rcx,rax
   14000525f:	je     0x140005431
   140005265:	test   BYTE PTR [rcx+0x1c],0x1
   140005269:	je     0x140005431
   14000526f:	cmp    BYTE PTR [rcx+0x19],0x2
   140005273:	jb     0x140005431
   140005279:	mov    edx,0x1b
   14000527e:	lea    r8,[rip+0x3e6b]        # 0x1400090f0
   140005285:	mov    rcx,QWORD PTR [rcx+0x10]
   140005289:	call   0x140001f98
   14000528e:	jmp    0x140005431
   140005293:	mov    ecx,0x40
   140005298:	call   QWORD PTR [rip+0x3252]        # 0x1400084f0
   14000529e:	mov    rbx,rax
   1400052a1:	mov    QWORD PTR [rsp+0x58],rax
   1400052a6:	lea    rbp,[rip+0x3823]        # 0x140008ad0
   1400052ad:	test   rax,rax
   1400052b0:	je     0x1400052ce
   1400052b2:	mov    QWORD PTR [rax],rbp
   1400052b5:	and    QWORD PTR [rax+0x18],0x0
   1400052ba:	and    QWORD PTR [rax+0x20],0x0
   1400052bf:	and    QWORD PTR [rax+0x28],0x0
   1400052c4:	and    DWORD PTR [rax+0x30],0x0
   1400052c8:	and    DWORD PTR [rax+0x38],0x0
   1400052cc:	jmp    0x1400052d0
   1400052ce:	xor    ebx,ebx
   1400052d0:	mov    QWORD PTR [rsp+0x58],rbx
   1400052d5:	test   rbx,rbx
   1400052d8:	jne    0x140005333
   1400052da:	call   QWORD PTR [rip+0x3298]        # 0x140008578
   1400052e0:	mov    rcx,rax
   1400052e3:	mov    edi,0x8007000e
   1400052e8:	mov    edx,edi
   1400052ea:	call   QWORD PTR [rip+0x3290]        # 0x140008580
   1400052f0:	lea    rax,[rip+0x6d31]        # 0x14000c028
   1400052f7:	mov    rcx,QWORD PTR [rip+0x6d2a]        # 0x14000c028
   1400052fe:	cmp    rcx,rax
   140005301:	je     0x14000540c
   140005307:	test   BYTE PTR [rcx+0x1c],0x1
   14000530b:	je     0x14000540c
   140005311:	cmp    BYTE PTR [rcx+0x19],0x2
   140005315:	jb     0x14000540c
   14000531b:	lea    edx,[rbx+0x1c]
   14000531e:	lea    r8,[rip+0x3dcb]        # 0x1400090f0
   140005325:	mov    rcx,QWORD PTR [rcx+0x10]
   140005329:	call   0x140001f98
   14000532e:	jmp    0x14000540c
   140005333:	lock inc DWORD PTR [rdi+0x8]
   140005337:	mov    QWORD PTR [rbx+0x20],rdi
   14000533b:	lea    rax,[rip+0x37f6]        # 0x140008b38
   140005342:	mov    QWORD PTR [rbx+0x18],rax
   140005346:	mov    edi,0x29
   14000534b:	lea    eax,[rdi-0x27]
   14000534e:	mul    rdi
   140005351:	lea    rcx,[rdi-0x2a]
   140005355:	cmovo  rax,rcx
   140005359:	mov    rcx,rax
   14000535c:	call   QWORD PTR [rip+0x318e]        # 0x1400084f0
   140005362:	mov    QWORD PTR [rbx+0x28],rax
   140005366:	test   rax,rax
   140005369:	jne    0x1400053bc
   14000536b:	call   QWORD PTR [rip+0x3207]        # 0x140008578
   140005371:	mov    rcx,rax
   140005374:	mov    edi,0x8007000e
   140005379:	mov    edx,edi
   14000537b:	call   QWORD PTR [rip+0x31ff]        # 0x140008580
   140005381:	lea    rax,[rip+0x6ca0]        # 0x14000c028
   140005388:	mov    rcx,QWORD PTR [rip+0x6c99]        # 0x14000c028
   14000538f:	cmp    rcx,rax
   140005392:	je     0x1400053b5
   140005394:	test   BYTE PTR [rcx+0x1c],0x1
   140005398:	je     0x1400053b5
   14000539a:	cmp    BYTE PTR [rcx+0x19],0x2
   14000539e:	jb     0x1400053b5
   1400053a0:	mov    edx,0x1d
   1400053a5:	lea    r8,[rip+0x3d44]        # 0x1400090f0
   1400053ac:	mov    rcx,QWORD PTR [rcx+0x10]
   1400053b0:	call   0x140001f98
   1400053b5:	mov    rbx,QWORD PTR [rsp+0x58]
   1400053ba:	jmp    0x14000540c
   1400053bc:	lea    r8,[rip+0x371d]        # 0x140008ae0
   1400053c3:	mov    rdx,rdi
   1400053c6:	mov    rcx,rax
   1400053c9:	call   0x140006a70
   1400053ce:	mov    DWORD PTR [rbx+0x30],0x1
   1400053d5:	and    DWORD PTR [rbx+0x34],0x0
   1400053d9:	add    rbx,0x8
   1400053dd:	mov    rax,QWORD PTR [rip+0x6c5c]        # 0x14000c040
   1400053e4:	lea    rcx,[rip+0x6c4d]        # 0x14000c038
   1400053eb:	mov    QWORD PTR [rbx],rcx
   1400053ee:	mov    QWORD PTR [rbx+0x8],rax
   1400053f2:	cmp    QWORD PTR [rax],rcx
   1400053f5:	je     0x1400053fe
   1400053f7:	mov    ecx,0x3
   1400053fc:	int    0x29
   1400053fe:	mov    QWORD PTR [rax],rbx
   140005401:	mov    QWORD PTR [rip+0x6c38],rbx        # 0x14000c040
   140005408:	xor    ebx,ebx
   14000540a:	xor    edi,edi
   14000540c:	test   rbx,rbx
   14000540f:	je     0x140005431
   140005411:	mov    QWORD PTR [rbx],rbp
   140005414:	mov    rcx,QWORD PTR [rbx+0x28]
   140005418:	call   QWORD PTR [rip+0x30ca]        # 0x1400084e8
   14000541e:	mov    rcx,QWORD PTR [rbx+0x20]
   140005422:	call   QWORD PTR [rip+0x3090]        # 0x1400084b8
   140005428:	mov    rcx,rbx
   14000542b:	call   QWORD PTR [rip+0x30b7]        # 0x1400084e8
   140005431:	mov    eax,edi
   140005433:	mov    rbx,QWORD PTR [rsp+0x40]
   140005438:	mov    rbp,QWORD PTR [rsp+0x48]
   14000543d:	add    rsp,0x30
   140005441:	pop    rdi
   140005442:	ret    
   140005443:	int3   
   140005444:	int3   
   140005445:	int3   
   140005446:	int3   
   140005447:	int3   
   140005448:	int3   
   140005449:	int3   
   14000544a:	int3   
   14000544b:	int3   
   14000544c:	mov    QWORD PTR [rsp+0x8],rbx
   140005451:	mov    QWORD PTR [rsp+0x10],rsi
   140005456:	push   rdi
   140005457:	sub    rsp,0x20
   14000545b:	mov    rdi,QWORD PTR [rip+0x7426]        # 0x14000c888
   140005462:	mov    rax,QWORD PTR [rdi]
   140005465:	mov    rbx,QWORD PTR [rax+0x8]
   140005469:	mov    rcx,rbx
   14000546c:	call   QWORD PTR [rip+0x312e]        # 0x1400085a0
   140005472:	mov    rcx,rdi
   140005475:	call   rbx
   140005477:	mov    edi,eax
   140005479:	test   eax,eax
   14000547b:	jns    0x1400054c5
   14000547d:	call   QWORD PTR [rip+0x30f5]        # 0x140008578
   140005483:	mov    rcx,rax
   140005486:	mov    edx,edi
   140005488:	call   QWORD PTR [rip+0x30f2]        # 0x140008580
   14000548e:	mov    rcx,QWORD PTR [rip+0x6b93]        # 0x14000c028
   140005495:	lea    rax,[rip+0x6b8c]        # 0x14000c028
   14000549c:	cmp    rcx,rax
   14000549f:	je     0x1400054c5
   1400054a1:	test   BYTE PTR [rcx+0x1c],0x1
   1400054a5:	je     0x1400054c5
   1400054a7:	cmp    BYTE PTR [rcx+0x19],0x2
   1400054ab:	jb     0x1400054c5
   1400054ad:	mov    rcx,QWORD PTR [rcx+0x10]
   1400054b1:	lea    r8,[rip+0x3c38]        # 0x1400090f0
   1400054b8:	mov    edx,0x2f
   1400054bd:	mov    r9d,edi
   1400054c0:	call   0x140001fbc
   1400054c5:	lea    rsi,[rip+0x6b6c]        # 0x14000c038
   1400054cc:	jmp    0x140005522
   1400054ce:	mov    rbx,QWORD PTR [rip+0x6b6b]        # 0x14000c040
   1400054d5:	add    rbx,0xfffffffffffffff8
   1400054d9:	lea    rax,[rbx+0x8]
   1400054dd:	mov    rdx,QWORD PTR [rax]
   1400054e0:	mov    rcx,QWORD PTR [rax+0x8]
   1400054e4:	cmp    QWORD PTR [rdx+0x8],rax
   1400054e8:	jne    0x14000553d
   1400054ea:	cmp    QWORD PTR [rcx],rax
   1400054ed:	jne    0x14000553d
   1400054ef:	mov    QWORD PTR [rcx],rdx
   1400054f2:	mov    QWORD PTR [rdx+0x8],rcx
   1400054f6:	test   rbx,rbx
   1400054f9:	je     0x140005522
   1400054fb:	mov    rcx,QWORD PTR [rbx+0x28]
   1400054ff:	lea    rax,[rip+0x35ca]        # 0x140008ad0
   140005506:	mov    QWORD PTR [rbx],rax
   140005509:	call   QWORD PTR [rip+0x2fd9]        # 0x1400084e8
   14000550f:	mov    rcx,QWORD PTR [rbx+0x20]
   140005513:	call   QWORD PTR [rip+0x2f9f]        # 0x1400084b8
   140005519:	mov    rcx,rbx
   14000551c:	call   QWORD PTR [rip+0x2fc6]        # 0x1400084e8
   140005522:	cmp    QWORD PTR [rip+0x6b0f],rsi        # 0x14000c038
   140005529:	jne    0x1400054ce
   14000552b:	mov    rbx,QWORD PTR [rsp+0x30]
   140005530:	mov    eax,edi
   140005532:	mov    rsi,QWORD PTR [rsp+0x38]
   140005537:	add    rsp,0x20
   14000553b:	pop    rdi
   14000553c:	ret    
   14000553d:	mov    ecx,0x3
   140005542:	int    0x29
   140005544:	int3   
   140005545:	int3   
   140005546:	int3   
   140005547:	int3   
   140005548:	int3   
   140005549:	int3   
   14000554a:	int3   
   14000554b:	int3   
   14000554c:	int3   
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	mov    QWORD PTR [rsp+0x8],rbx
   140005555:	mov    QWORD PTR [rsp+0x10],rsi
   14000555a:	push   rdi
   14000555b:	sub    rsp,0x20
   14000555f:	and    DWORD PTR [r8],0x0
   140005563:	mov    rbx,rdx
   140005566:	sub    ecx,0x4
   140005569:	je     0x140005580
   14000556b:	cmp    ecx,0x1
   14000556e:	je     0x140005577
   140005570:	mov    eax,0x57
   140005575:	jmp    0x1400055bf
   140005577:	xor    edi,edi
   140005579:	xor    eax,eax
   14000557b:	xor    sil,sil
   14000557e:	jmp    0x1400055a1
   140005580:	mov    rcx,r9
   140005583:	call   QWORD PTR [rip+0x2ebf]        # 0x140008448
   140005589:	mov    rcx,rax
   14000558c:	mov    rdi,rax
   14000558f:	call   QWORD PTR [rip+0x2e93]        # 0x140008428
   140005595:	mov    rcx,rdi
   140005598:	mov    sil,al
   14000559b:	call   QWORD PTR [rip+0x2e8f]        # 0x140008430
   1400055a1:	test   BYTE PTR [rbx+0x1a],0x2
   1400055a5:	je     0x1400055b2
   1400055a7:	mov    rcx,QWORD PTR [rbx+0x10]
   1400055ab:	test   rcx,rcx
   1400055ae:	cmovne rbx,rcx
   1400055b2:	mov    QWORD PTR [rbx+0x10],rdi
   1400055b6:	mov    BYTE PTR [rbx+0x19],sil
   1400055ba:	mov    DWORD PTR [rbx+0x1c],eax
   1400055bd:	xor    eax,eax
   1400055bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400055c4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400055c9:	add    rsp,0x20
   1400055cd:	pop    rdi
   1400055ce:	ret    
   1400055cf:	int3   
   1400055d0:	int3   
   1400055d1:	int3   
   1400055d2:	int3   
   1400055d3:	int3   
   1400055d4:	int3   
   1400055d5:	int3   
   1400055d6:	int3   
   1400055d7:	int3   
   1400055d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400055dd:	push   rdi
   1400055de:	sub    rsp,0x20
   1400055e2:	mov    rbx,QWORD PTR [rip+0x6a3f]        # 0x14000c028
   1400055e9:	lea    rdi,[rip+0x6a38]        # 0x14000c028
   1400055f0:	cmp    rbx,rdi
   1400055f3:	je     0x14000561a
   1400055f5:	jmp    0x14000560e
   1400055f7:	mov    rcx,QWORD PTR [rbx+0x8]
   1400055fb:	test   rcx,rcx
   1400055fe:	je     0x14000560b
   140005600:	call   QWORD PTR [rip+0x2e32]        # 0x140008438
   140005606:	and    QWORD PTR [rbx+0x8],0x0
   14000560b:	mov    rbx,QWORD PTR [rbx]
   14000560e:	test   rbx,rbx
   140005611:	jne    0x1400055f7
   140005613:	mov    QWORD PTR [rip+0x6a0e],rdi        # 0x14000c028
   14000561a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000561f:	add    rsp,0x20
   140005623:	pop    rdi
   140005624:	ret    
   140005625:	int3   
   140005626:	int3   
   140005627:	int3   
   140005628:	int3   
   140005629:	int3   
   14000562a:	int3   
   14000562b:	int3   
   14000562c:	int3   
   14000562d:	int3   
   14000562e:	int3   
   14000562f:	int3   
   140005630:	mov    QWORD PTR [rsp+0x8],rbx
   140005635:	mov    QWORD PTR [rsp+0x10],rsi
   14000563a:	push   rdi
   14000563b:	sub    rsp,0x20
   14000563f:	mov    rax,QWORD PTR [rdx]
   140005642:	mov    rsi,rcx
   140005645:	cmp    rax,QWORD PTR [rip+0x3894]        # 0x140008ee0
   14000564c:	jne    0x14000565b
   14000564e:	mov    rax,QWORD PTR [rdx+0x8]
   140005652:	cmp    rax,QWORD PTR [rip+0x388f]        # 0x140008ee8
   140005659:	je     0x140005674
   14000565b:	mov    rax,QWORD PTR [rdx]
   14000565e:	cmp    rax,QWORD PTR [rip+0x386b]        # 0x140008ed0
   140005665:	jne    0x140005690
   140005667:	mov    rax,QWORD PTR [rdx+0x8]
   14000566b:	cmp    rax,QWORD PTR [rip+0x3866]        # 0x140008ed8
   140005672:	jne    0x140005690
   140005674:	mov    QWORD PTR [r8],rcx
   140005677:	mov    rax,QWORD PTR [rcx]
   14000567a:	mov    rbx,QWORD PTR [rax+0x8]
   14000567e:	mov    rcx,rbx
   140005681:	call   QWORD PTR [rip+0x2f19]        # 0x1400085a0
   140005687:	mov    rcx,rsi
   14000568a:	call   rbx
   14000568c:	xor    edi,edi
   14000568e:	jmp    0x1400056da
   140005690:	mov    rax,QWORD PTR [rdx]
   140005693:	cmp    rax,QWORD PTR [rip+0x3ab6]        # 0x140009150
   14000569a:	jne    0x1400056d0
   14000569c:	mov    rax,QWORD PTR [rdx+0x8]
   1400056a0:	cmp    rax,QWORD PTR [rip+0x3ab1]        # 0x140009158
   1400056a7:	jne    0x1400056d0
   1400056a9:	xor    edi,edi
   1400056ab:	lea    rax,[rcx+0x8]
   1400056af:	test   rcx,rcx
   1400056b2:	jne    0x1400056b6
   1400056b4:	mov    eax,edi
   1400056b6:	mov    QWORD PTR [r8],rax
   1400056b9:	mov    rax,QWORD PTR [rcx]
   1400056bc:	mov    rbx,QWORD PTR [rax+0x8]
   1400056c0:	mov    rcx,rbx
   1400056c3:	call   QWORD PTR [rip+0x2ed7]        # 0x1400085a0
   1400056c9:	mov    rcx,rsi
   1400056cc:	call   rbx
   1400056ce:	jmp    0x1400056da
   1400056d0:	xor    edi,edi
   1400056d2:	mov    QWORD PTR [r8],rdi
   1400056d5:	mov    edi,0x80004002
   1400056da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400056df:	mov    eax,edi
   1400056e1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400056e6:	add    rsp,0x20
   1400056ea:	pop    rdi
   1400056eb:	ret    
   1400056ec:	int3   
   1400056ed:	int3   
   1400056ee:	int3   
   1400056ef:	int3   
   1400056f0:	int3   
   1400056f1:	int3   
   1400056f2:	int3   
   1400056f3:	int3   
   1400056f4:	int3   
   1400056f5:	int3   
   1400056f6:	int3   
   1400056f7:	int3   
   1400056f8:	int3   
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	int3   
   1400056fd:	int3   
   1400056fe:	int3   
   1400056ff:	int3   
   140005700:	mov    QWORD PTR [rsp+0x8],rbx
   140005705:	push   rdi
   140005706:	sub    rsp,0x20
   14000570a:	mov    rbx,rcx
   14000570d:	or     edi,0xffffffff
   140005710:	lock xadd DWORD PTR [rcx+0x10],edi
   140005715:	sub    edi,0x1
   140005718:	jne    0x140005747
   14000571a:	test   rcx,rcx
   14000571d:	je     0x140005747
   14000571f:	lea    rax,[rip+0x3382]        # 0x140008aa8
   140005726:	mov    QWORD PTR [rcx],rax
   140005729:	lea    rax,[rip+0x3350]        # 0x140008a80
   140005730:	mov    QWORD PTR [rcx+0x8],rax
   140005734:	mov    rcx,QWORD PTR [rcx+0x20]
   140005738:	call   QWORD PTR [rip+0x2d7a]        # 0x1400084b8
   14000573e:	mov    rcx,rbx
   140005741:	call   QWORD PTR [rip+0x2da1]        # 0x1400084e8
   140005747:	mov    eax,edi
   140005749:	mov    rbx,QWORD PTR [rsp+0x30]
   14000574e:	add    rsp,0x20
   140005752:	pop    rdi
   140005753:	ret    
   140005754:	int3   
   140005755:	int3   
   140005756:	int3   
   140005757:	int3   
   140005758:	int3   
   140005759:	int3   
   14000575a:	int3   
   14000575b:	int3   
   14000575c:	int3   
   14000575d:	int3   
   14000575e:	int3   
   14000575f:	int3   
   140005760:	mov    rax,rsp
   140005763:	mov    QWORD PTR [rax+0x8],rbx
   140005767:	mov    QWORD PTR [rax+0x10],rbp
   14000576b:	mov    QWORD PTR [rax+0x18],rsi
   14000576f:	mov    QWORD PTR [rax+0x20],rdi
   140005773:	push   r14
   140005775:	sub    rsp,0x20
   140005779:	mov    rdi,QWORD PTR [rcx+0x18]
   14000577d:	mov    rsi,r9
   140005780:	mov    rbp,r8
   140005783:	mov    r14,rdx
   140005786:	mov    rax,QWORD PTR [rdi]
   140005789:	mov    rbx,QWORD PTR [rax+0x18]
   14000578d:	mov    rcx,rbx
   140005790:	call   QWORD PTR [rip+0x2e0a]        # 0x1400085a0
   140005796:	mov    r9,rsi
   140005799:	mov    r8,rbp
   14000579c:	mov    rdx,r14
   14000579f:	mov    rcx,rdi
   1400057a2:	mov    rax,rbx
   1400057a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057aa:	mov    rbp,QWORD PTR [rsp+0x38]
   1400057af:	mov    rsi,QWORD PTR [rsp+0x40]
   1400057b4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400057b9:	add    rsp,0x20
   1400057bd:	pop    r14
   1400057bf:	rex.W jmp rax
   1400057c2:	int3   
   1400057c3:	int3   
   1400057c4:	int3   
   1400057c5:	int3   
   1400057c6:	int3   
   1400057c7:	int3   
   1400057c8:	int3   
   1400057c9:	int3   
   1400057ca:	int3   
   1400057cb:	int3   
   1400057cc:	int3   
   1400057cd:	int3   
   1400057ce:	int3   
   1400057cf:	int3   
   1400057d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400057d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400057da:	push   rdi
   1400057db:	sub    rsp,0x20
   1400057df:	mov    rdi,QWORD PTR [rcx+0x18]
   1400057e3:	mov    esi,edx
   1400057e5:	mov    rax,QWORD PTR [rdi]
   1400057e8:	mov    rbx,QWORD PTR [rax+0x20]
   1400057ec:	mov    rcx,rbx
   1400057ef:	call   QWORD PTR [rip+0x2dab]        # 0x1400085a0
   1400057f5:	mov    edx,esi
   1400057f7:	mov    rcx,rdi
   1400057fa:	mov    rax,rbx
   1400057fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140005802:	mov    rsi,QWORD PTR [rsp+0x38]
   140005807:	add    rsp,0x20
   14000580b:	pop    rdi
   14000580c:	rex.W jmp rax
   14000580f:	int3   
   140005810:	int3   
   140005811:	int3   
   140005812:	int3   
   140005813:	int3   
   140005814:	int3   
   140005815:	int3   
   140005816:	int3   
   140005817:	int3   
   140005818:	int3   
   140005819:	int3   
   14000581a:	int3   
   14000581b:	int3   
   14000581c:	int3   
   14000581d:	int3   
   14000581e:	int3   
   14000581f:	int3   
   140005820:	mov    QWORD PTR [rsp+0x8],rbx
   140005825:	push   rdi
   140005826:	sub    rsp,0x20
   14000582a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000582e:	mov    rax,QWORD PTR [rdi]
   140005831:	mov    rbx,QWORD PTR [rax+0x20]
   140005835:	mov    rcx,rbx
   140005838:	call   QWORD PTR [rip+0x2d62]        # 0x1400085a0
   14000583e:	mov    edx,0x1
   140005843:	mov    rcx,rdi
   140005846:	call   rbx
   140005848:	mov    rbx,QWORD PTR [rsp+0x30]
   14000584d:	mov    eax,0x1
   140005852:	add    rsp,0x20
   140005856:	pop    rdi
   140005857:	ret    
   140005858:	int3   
   140005859:	int3   
   14000585a:	int3   
   14000585b:	int3   
   14000585c:	int3   
   14000585d:	int3   
   14000585e:	int3   
   14000585f:	int3   
   140005860:	mov    QWORD PTR [rsp+0x8],rbx
   140005865:	push   rdi
   140005866:	sub    rsp,0x20
   14000586a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000586e:	mov    rax,QWORD PTR [rdi]
   140005871:	mov    rbx,QWORD PTR [rax+0x20]
   140005875:	mov    rcx,rbx
   140005878:	call   QWORD PTR [rip+0x2d22]        # 0x1400085a0
   14000587e:	xor    edx,edx
   140005880:	mov    rcx,rdi
   140005883:	call   rbx
   140005885:	mov    rbx,QWORD PTR [rsp+0x30]
   14000588a:	mov    eax,0x1
   14000588f:	add    rsp,0x20
   140005893:	pop    rdi
   140005894:	ret    
   140005895:	int3   
   140005896:	int3   
   140005897:	int3   
   140005898:	int3   
   140005899:	int3   
   14000589a:	int3   
   14000589b:	int3   
   14000589c:	int3   
   14000589d:	int3   
   14000589e:	int3   
   14000589f:	int3   
   1400058a0:	sub    rsp,0x28
   1400058a4:	call   0x1400078cc
   1400058a9:	test   al,al
   1400058ab:	je     0x1400058c3
   1400058ad:	mov    ecx,DWORD PTR [rip+0x677d]        # 0x14000c030
   1400058b3:	xor    r9d,r9d
   1400058b6:	xor    r8d,r8d
   1400058b9:	lea    edx,[r9+0x12]
   1400058bd:	call   QWORD PTR [rip+0x2815]        # 0x1400080d8
   1400058c3:	add    rsp,0x28
   1400058c7:	ret    
   1400058c8:	int3   
   1400058c9:	int3   
   1400058ca:	int3   
   1400058cb:	int3   
   1400058cc:	int3   
   1400058cd:	int3   
   1400058ce:	int3   
   1400058cf:	int3   
   1400058d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400058d5:	push   rdi
   1400058d6:	sub    rsp,0x20
   1400058da:	mov    rdi,rcx
   1400058dd:	lea    rdx,[rcx+0x10]
   1400058e1:	lea    rcx,[rsp+0x30]
   1400058e6:	call   0x140004530
   1400058eb:	xor    ebx,ebx
   1400058ed:	cmp    DWORD PTR [rdi+0xc],ebx
   1400058f0:	jne    0x1400058fa
   1400058f2:	mov    ebx,0x1
   1400058f7:	add    DWORD PTR [rdi+0x8],ebx
   1400058fa:	mov    rcx,QWORD PTR [rsp+0x30]
   1400058ff:	call   QWORD PTR [rip+0x2713]        # 0x140008018
   140005905:	mov    eax,ebx
   140005907:	mov    rbx,QWORD PTR [rsp+0x38]
   14000590c:	add    rsp,0x20
   140005910:	pop    rdi
   140005911:	ret    
   140005912:	int3   
   140005913:	int3   
   140005914:	int3   
   140005915:	int3   
   140005916:	int3   
   140005917:	int3   
   140005918:	int3   
   140005919:	int3   
   14000591a:	int3   
   14000591b:	int3   
   14000591c:	int3   
   14000591d:	int3   
   14000591e:	int3   
   14000591f:	int3   
   140005920:	mov    QWORD PTR [rsp+0x8],rbx
   140005925:	push   rdi
   140005926:	sub    rsp,0x20
   14000592a:	lea    rdi,[rcx+0x10]
   14000592e:	mov    rbx,rcx
   140005931:	mov    rcx,rdi
   140005934:	call   QWORD PTR [rip+0x26d6]        # 0x140008010
   14000593a:	sub    DWORD PTR [rbx+0x8],0x1
   14000593e:	mov    rcx,rdi
   140005941:	jne    0x140005971
   140005943:	mov    DWORD PTR [rbx+0xc],0x1
   14000594a:	call   QWORD PTR [rip+0x26c8]        # 0x140008018
   140005950:	call   0x1400078cc
   140005955:	test   al,al
   140005957:	je     0x140005977
   140005959:	mov    ecx,DWORD PTR [rip+0x66d1]        # 0x14000c030
   14000595f:	xor    r9d,r9d
   140005962:	xor    r8d,r8d
   140005965:	lea    edx,[r9+0x12]
   140005969:	call   QWORD PTR [rip+0x2769]        # 0x1400080d8
   14000596f:	jmp    0x140005977
   140005971:	call   QWORD PTR [rip+0x26a1]        # 0x140008018
   140005977:	mov    rbx,QWORD PTR [rsp+0x30]
   14000597c:	add    rsp,0x20
   140005980:	pop    rdi
   140005981:	ret    
   140005982:	int3   
   140005983:	int3   
   140005984:	int3   
   140005985:	int3   
   140005986:	int3   
   140005987:	int3   
   140005988:	int3   
   140005989:	int3   
   14000598a:	int3   
   14000598b:	int3   
   14000598c:	int3   
   14000598d:	int3   
   14000598e:	int3   
   14000598f:	int3   
   140005990:	ret    0x0
   140005993:	int3   
   140005994:	int3   
   140005995:	int3   
   140005996:	int3   
   140005997:	int3   
   140005998:	int3   
   140005999:	int3   
   14000599a:	int3   
   14000599b:	int3   
   14000599c:	sub    rsp,0x58
   1400059a0:	jmp    0x1400059b8
   1400059a2:	lea    rcx,[rsp+0x20]
   1400059a7:	call   QWORD PTR [rip+0x270b]        # 0x1400080b8
   1400059ad:	lea    rcx,[rsp+0x20]
   1400059b2:	call   QWORD PTR [rip+0x26f8]        # 0x1400080b0
   1400059b8:	xor    r9d,r9d
   1400059bb:	lea    rcx,[rsp+0x20]
   1400059c0:	xor    r8d,r8d
   1400059c3:	xor    edx,edx
   1400059c5:	call   QWORD PTR [rip+0x26f5]        # 0x1400080c0
   1400059cb:	test   eax,eax
   1400059cd:	jne    0x1400059a2
   1400059cf:	add    rsp,0x58
   1400059d3:	ret    
   1400059d4:	int3   
   1400059d5:	int3   
   1400059d6:	int3   
   1400059d7:	int3   
   1400059d8:	int3   
   1400059d9:	int3   
   1400059da:	int3   
   1400059db:	int3   
   1400059dc:	int3   
   1400059dd:	int3   
   1400059de:	int3   
   1400059df:	int3   
   1400059e0:	rex push rbx
   1400059e2:	sub    rsp,0x50
   1400059e6:	mov    rax,QWORD PTR [rip+0x661b]        # 0x14000c008
   1400059ed:	xor    rax,rsp
   1400059f0:	mov    QWORD PTR [rsp+0x40],rax
   1400059f5:	and    DWORD PTR [rsp+0x2c],0x0
   1400059fa:	lea    rdx,[rsp+0x20]
   1400059ff:	and    DWORD PTR [rsp+0x34],0x0
   140005a04:	mov    ebx,ecx
   140005a06:	mov    rcx,QWORD PTR [rip+0x6e6b]        # 0x14000c878
   140005a0d:	and    DWORD PTR [rsp+0x38],0x0
   140005a12:	mov    DWORD PTR [rsp+0x20],0x10
   140005a1a:	mov    DWORD PTR [rsp+0x24],0x4
   140005a22:	mov    DWORD PTR [rsp+0x28],0x1
   140005a2a:	call   QWORD PTR [rip+0x28a8]        # 0x1400082d8
   140005a30:	test   eax,eax
   140005a32:	jne    0x140005a98
   140005a34:	call   QWORD PTR [rip+0x271e]        # 0x140008158
   140005a3a:	mov    ebx,eax
   140005a3c:	call   QWORD PTR [rip+0x2b36]        # 0x140008578
   140005a42:	mov    rcx,rax
   140005a45:	or     edx,0xffffffff
   140005a48:	call   QWORD PTR [rip+0x2b32]        # 0x140008580
   140005a4e:	mov    rcx,QWORD PTR [rip+0x65d3]        # 0x14000c028
   140005a55:	lea    rax,[rip+0x65cc]        # 0x14000c028
   140005a5c:	cmp    rcx,rax
   140005a5f:	je     0x140005a85
   140005a61:	test   BYTE PTR [rcx+0x1c],0x1
   140005a65:	je     0x140005a85
   140005a67:	cmp    BYTE PTR [rcx+0x19],0x2
   140005a6b:	jb     0x140005a85
   140005a6d:	mov    rcx,QWORD PTR [rcx+0x10]
   140005a71:	lea    r8,[rip+0x3668]        # 0x1400090e0
   140005a78:	mov    edx,0xa
   140005a7d:	mov    r9d,ebx
   140005a80:	call   0x140001fbc
   140005a85:	mov    rcx,QWORD PTR [rsp+0x40]
   140005a8a:	xor    rcx,rsp
   140005a8d:	call   0x140007230
   140005a92:	add    rsp,0x50
   140005a96:	pop    rbx
   140005a97:	ret    
   140005a98:	cmp    ebx,0x1
   140005a9b:	jne    0x140005a85
   140005a9d:	mov    rcx,QWORD PTR [rip+0x6dd4]        # 0x14000c878
   140005aa4:	lea    rdx,[rsp+0x20]
   140005aa9:	mov    DWORD PTR [rsp+0x24],ebx
   140005aad:	call   QWORD PTR [rip+0x2825]        # 0x1400082d8
   140005ab3:	mov    rcx,QWORD PTR [rip+0x6db6]        # 0x14000c870
   140005aba:	call   QWORD PTR [rip+0x27a0]        # 0x140008260
   140005ac0:	xor    ecx,ecx
   140005ac2:	call   QWORD PTR [rip+0x2560]        # 0x140008028
   140005ac8:	int3   
   140005ac9:	int3   
   140005aca:	int3   
   140005acb:	int3   
   140005acc:	int3   
   140005acd:	int3   
   140005ace:	int3   
   140005acf:	int3   
   140005ad0:	rex push rbx
   140005ad2:	sub    rsp,0x50
   140005ad6:	mov    rax,QWORD PTR [rip+0x652b]        # 0x14000c008
   140005add:	xor    rax,rsp
   140005ae0:	mov    QWORD PTR [rsp+0x40],rax
   140005ae5:	xor    r9d,r9d
   140005ae8:	xor    r8d,r8d
   140005aeb:	xor    edx,edx
   140005aed:	xor    ecx,ecx
   140005aef:	call   QWORD PTR [rip+0x2763]        # 0x140008258
   140005af5:	mov    QWORD PTR [rip+0x6d74],rax        # 0x14000c870
   140005afc:	test   rax,rax
   140005aff:	jne    0x140005b63
   140005b01:	call   QWORD PTR [rip+0x2651]        # 0x140008158
   140005b07:	mov    ebx,eax
   140005b09:	call   QWORD PTR [rip+0x2a69]        # 0x140008578
   140005b0f:	mov    rcx,rax
   140005b12:	or     edx,0xffffffff
   140005b15:	call   QWORD PTR [rip+0x2a65]        # 0x140008580
   140005b1b:	mov    rcx,QWORD PTR [rip+0x6506]        # 0x14000c028
   140005b22:	lea    rdx,[rip+0x64ff]        # 0x14000c028
   140005b29:	cmp    rcx,rdx
   140005b2c:	je     0x140005cc4
   140005b32:	test   BYTE PTR [rcx+0x1c],0x1
   140005b36:	je     0x140005cc4
   140005b3c:	cmp    BYTE PTR [rcx+0x19],0x2
   140005b40:	jb     0x140005cc4
   140005b46:	mov    edx,0xb
   140005b4b:	mov    rcx,QWORD PTR [rcx+0x10]
   140005b4f:	lea    r8,[rip+0x358a]        # 0x1400090e0
   140005b56:	mov    r9d,ebx
   140005b59:	call   0x140001fbc
   140005b5e:	jmp    0x140005cc4
   140005b63:	mov    rcx,QWORD PTR [rip+0x6cee]        # 0x14000c858
   140005b6a:	lea    rdx,[rip+0xfffffffffffffe6f]        # 0x1400059e0
   140005b71:	call   QWORD PTR [rip+0x27a1]        # 0x140008318
   140005b77:	mov    QWORD PTR [rip+0x6cfa],rax        # 0x14000c878
   140005b7e:	test   rax,rax
   140005b81:	jne    0x140005bd2
   140005b83:	call   QWORD PTR [rip+0x25cf]        # 0x140008158
   140005b89:	mov    ebx,eax
   140005b8b:	call   QWORD PTR [rip+0x29e7]        # 0x140008578
   140005b91:	mov    rcx,rax
   140005b94:	or     edx,0xffffffff
   140005b97:	call   QWORD PTR [rip+0x29e3]        # 0x140008580
   140005b9d:	mov    rcx,QWORD PTR [rip+0x6484]        # 0x14000c028
   140005ba4:	lea    rdx,[rip+0x647d]        # 0x14000c028
   140005bab:	cmp    rcx,rdx
   140005bae:	je     0x140005cc4
   140005bb4:	test   BYTE PTR [rcx+0x1c],0x1
   140005bb8:	je     0x140005cc4
   140005bbe:	cmp    BYTE PTR [rcx+0x19],0x2
   140005bc2:	jb     0x140005cc4
   140005bc8:	mov    edx,0xc
   140005bcd:	jmp    0x140005b4b
   140005bd2:	and    DWORD PTR [rsp+0x2c],0x0
   140005bd7:	lea    rdx,[rsp+0x20]
   140005bdc:	and    DWORD PTR [rsp+0x34],0x0
   140005be1:	mov    rcx,rax
   140005be4:	mov    DWORD PTR [rsp+0x20],0x10
   140005bec:	mov    DWORD PTR [rsp+0x24],0x2
   140005bf4:	mov    DWORD PTR [rsp+0x28],0x1
   140005bfc:	mov    DWORD PTR [rsp+0x38],0x2710
   140005c04:	call   QWORD PTR [rip+0x26ce]        # 0x1400082d8
   140005c0a:	test   eax,eax
   140005c0c:	jne    0x140005c55
   140005c0e:	call   QWORD PTR [rip+0x2544]        # 0x140008158
   140005c14:	mov    ebx,eax
   140005c16:	call   QWORD PTR [rip+0x295c]        # 0x140008578
   140005c1c:	mov    rcx,rax
   140005c1f:	or     edx,0xffffffff
   140005c22:	call   QWORD PTR [rip+0x2958]        # 0x140008580
   140005c28:	mov    rcx,QWORD PTR [rip+0x63f9]        # 0x14000c028
   140005c2f:	lea    rdx,[rip+0x63f2]        # 0x14000c028
   140005c36:	cmp    rcx,rdx
   140005c39:	je     0x140005cc4
   140005c3f:	test   BYTE PTR [rcx+0x1c],0x1
   140005c43:	je     0x140005cc4
   140005c45:	cmp    BYTE PTR [rcx+0x19],0x2
   140005c49:	jb     0x140005cc4
   140005c4b:	mov    edx,0xd
   140005c50:	jmp    0x140005b4b
   140005c55:	mov    rcx,QWORD PTR [rip+0x6c1c]        # 0x14000c878
   140005c5c:	lea    rdx,[rsp+0x20]
   140005c61:	mov    DWORD PTR [rsp+0x24],0x4
   140005c69:	call   QWORD PTR [rip+0x2669]        # 0x1400082d8
   140005c6f:	test   eax,eax
   140005c71:	jne    0x140005cb6
   140005c73:	call   QWORD PTR [rip+0x24df]        # 0x140008158
   140005c79:	mov    ebx,eax
   140005c7b:	call   QWORD PTR [rip+0x28f7]        # 0x140008578
   140005c81:	mov    rcx,rax
   140005c84:	or     edx,0xffffffff
   140005c87:	call   QWORD PTR [rip+0x28f3]        # 0x140008580
   140005c8d:	mov    rcx,QWORD PTR [rip+0x6394]        # 0x14000c028
   140005c94:	lea    rdx,[rip+0x638d]        # 0x14000c028
   140005c9b:	cmp    rcx,rdx
   140005c9e:	je     0x140005cc4
   140005ca0:	test   BYTE PTR [rcx+0x1c],0x1
   140005ca4:	je     0x140005cc4
   140005ca6:	cmp    BYTE PTR [rcx+0x19],0x2
   140005caa:	jb     0x140005cc4
   140005cac:	mov    edx,0xe
   140005cb1:	jmp    0x140005b4b
   140005cb6:	call   0x1400078cc
   140005cbb:	test   al,al
   140005cbd:	je     0x140005cc4
   140005cbf:	call   0x14000599c
   140005cc4:	mov    rcx,QWORD PTR [rsp+0x40]
   140005cc9:	xor    rcx,rsp
   140005ccc:	call   0x140007230
   140005cd1:	add    rsp,0x50
   140005cd5:	pop    rbx
   140005cd6:	ret    
   140005cd7:	int3   
   140005cd8:	int3   
   140005cd9:	int3   
   140005cda:	int3   
   140005cdb:	int3   
   140005cdc:	int3   
   140005cdd:	int3   
   140005cde:	int3   
   140005cdf:	int3   
   140005ce0:	rex push rbx
   140005ce2:	sub    rsp,0x880
   140005ce9:	mov    rax,QWORD PTR [rip+0x6318]        # 0x14000c008
   140005cf0:	xor    rax,rsp
   140005cf3:	mov    QWORD PTR [rsp+0x870],rax
   140005cfb:	xor    edx,edx
   140005cfd:	xor    ecx,ecx
   140005cff:	mov    r8d,0xf003f
   140005d05:	call   QWORD PTR [rip+0x25fd]        # 0x140008308
   140005d0b:	mov    rbx,rax
   140005d0e:	test   rax,rax
   140005d11:	jne    0x140005d6b
   140005d13:	call   QWORD PTR [rip+0x243f]        # 0x140008158
   140005d19:	mov    ebx,eax
   140005d1b:	call   QWORD PTR [rip+0x2857]        # 0x140008578
   140005d21:	mov    rcx,rax
   140005d24:	or     edx,0xffffffff
   140005d27:	call   QWORD PTR [rip+0x2853]        # 0x140008580
   140005d2d:	mov    rcx,QWORD PTR [rip+0x62f4]        # 0x14000c028
   140005d34:	lea    rdx,[rip+0x62ed]        # 0x14000c028
   140005d3b:	cmp    rcx,rdx
   140005d3e:	je     0x140005d64
   140005d40:	test   BYTE PTR [rcx+0x1c],0x1
   140005d44:	je     0x140005d64
   140005d46:	cmp    BYTE PTR [rcx+0x19],0x2
   140005d4a:	jb     0x140005d64
   140005d4c:	mov    edx,0x10
   140005d51:	mov    rcx,QWORD PTR [rcx+0x10]
   140005d55:	lea    r8,[rip+0x3384]        # 0x1400090e0
   140005d5c:	mov    r9d,ebx
   140005d5f:	call   0x140001fbc
   140005d64:	xor    eax,eax
   140005d66:	jmp    0x140005e3d
   140005d6b:	mov    r8d,0x3ff
   140005d71:	lea    rdx,[rsp+0x70]
   140005d76:	xor    ecx,ecx
   140005d78:	call   QWORD PTR [rip+0x22a2]        # 0x140008020
   140005d7e:	mov    eax,DWORD PTR [rip+0x6ae4]        # 0x14000c868
   140005d84:	mov    r9d,0xf01ff
   140005d8a:	mov    r8,QWORD PTR [rip+0x6acf]        # 0x14000c860
   140005d91:	neg    eax
   140005d93:	mov    rdx,QWORD PTR [rip+0x6abe]        # 0x14000c858
   140005d9a:	lea    rax,[rsp+0x70]
   140005d9f:	sbb    ecx,ecx
   140005da1:	and    QWORD PTR [rsp+0x60],0x0
   140005da7:	and    QWORD PTR [rsp+0x58],0x0
   140005dad:	add    ecx,0x3
   140005db0:	and    QWORD PTR [rsp+0x50],0x0
   140005db6:	and    QWORD PTR [rsp+0x48],0x0
   140005dbc:	and    QWORD PTR [rsp+0x40],0x0
   140005dc2:	mov    QWORD PTR [rsp+0x38],rax
   140005dc7:	mov    DWORD PTR [rsp+0x30],0x1
   140005dcf:	mov    DWORD PTR [rsp+0x28],ecx
   140005dd3:	mov    rcx,rbx
   140005dd6:	mov    DWORD PTR [rsp+0x20],0x10
   140005dde:	call   QWORD PTR [rip+0x250c]        # 0x1400082f0
   140005de4:	test   rax,rax
   140005de7:	jne    0x140005e38
   140005de9:	call   QWORD PTR [rip+0x2369]        # 0x140008158
   140005def:	mov    ebx,eax
   140005df1:	call   QWORD PTR [rip+0x2781]        # 0x140008578
   140005df7:	mov    rcx,rax
   140005dfa:	or     edx,0xffffffff
   140005dfd:	call   QWORD PTR [rip+0x277d]        # 0x140008580
   140005e03:	mov    rcx,QWORD PTR [rip+0x621e]        # 0x14000c028
   140005e0a:	lea    rdx,[rip+0x6217]        # 0x14000c028
   140005e11:	cmp    rcx,rdx
   140005e14:	je     0x140005d64
   140005e1a:	test   BYTE PTR [rcx+0x1c],0x1
   140005e1e:	je     0x140005d64
   140005e24:	cmp    BYTE PTR [rcx+0x19],0x2
   140005e28:	jb     0x140005d64
   140005e2e:	mov    edx,0x11
   140005e33:	jmp    0x140005d51
   140005e38:	mov    eax,0x1
   140005e3d:	mov    rcx,QWORD PTR [rsp+0x870]
   140005e45:	xor    rcx,rsp
   140005e48:	call   0x140007230
   140005e4d:	add    rsp,0x880
   140005e54:	pop    rbx
   140005e55:	ret    
   140005e56:	int3   
   140005e57:	int3   
   140005e58:	int3   
   140005e59:	int3   
   140005e5a:	int3   
   140005e5b:	int3   
   140005e5c:	rex push rbx
   140005e5e:	sub    rsp,0x20
   140005e62:	xor    edx,edx
   140005e64:	xor    ecx,ecx
   140005e66:	mov    r8d,0xf003f
   140005e6c:	call   QWORD PTR [rip+0x2496]        # 0x140008308
   140005e72:	test   rax,rax
   140005e75:	jne    0x140005ecf
   140005e77:	call   QWORD PTR [rip+0x22db]        # 0x140008158
   140005e7d:	mov    ebx,eax
   140005e7f:	call   QWORD PTR [rip+0x26f3]        # 0x140008578
   140005e85:	mov    rcx,rax
   140005e88:	or     edx,0xffffffff
   140005e8b:	call   QWORD PTR [rip+0x26ef]        # 0x140008580
   140005e91:	mov    rcx,QWORD PTR [rip+0x6190]        # 0x14000c028
   140005e98:	lea    rdx,[rip+0x6189]        # 0x14000c028
   140005e9f:	cmp    rcx,rdx
   140005ea2:	je     0x140005ec8
   140005ea4:	test   BYTE PTR [rcx+0x1c],0x1
   140005ea8:	je     0x140005ec8
   140005eaa:	cmp    BYTE PTR [rcx+0x19],0x2
   140005eae:	jb     0x140005ec8
   140005eb0:	mov    edx,0x12
   140005eb5:	mov    rcx,QWORD PTR [rcx+0x10]
   140005eb9:	lea    r8,[rip+0x3220]        # 0x1400090e0
   140005ec0:	mov    r9d,ebx
   140005ec3:	call   0x140001fbc
   140005ec8:	xor    eax,eax
   140005eca:	jmp    0x140005f8b
   140005ecf:	mov    rdx,QWORD PTR [rip+0x6982]        # 0x14000c858
   140005ed6:	mov    r8d,0xf01ff
   140005edc:	mov    rcx,rax
   140005edf:	call   QWORD PTR [rip+0x2413]        # 0x1400082f8
   140005ee5:	test   rax,rax
   140005ee8:	jne    0x140005f2a
   140005eea:	call   QWORD PTR [rip+0x2268]        # 0x140008158
   140005ef0:	mov    ebx,eax
   140005ef2:	call   QWORD PTR [rip+0x2680]        # 0x140008578
   140005ef8:	mov    rcx,rax
   140005efb:	or     edx,0xffffffff
   140005efe:	call   QWORD PTR [rip+0x267c]        # 0x140008580
   140005f04:	mov    rcx,QWORD PTR [rip+0x611d]        # 0x14000c028
   140005f0b:	lea    rdx,[rip+0x6116]        # 0x14000c028
   140005f12:	cmp    rcx,rdx
   140005f15:	je     0x140005ec8
   140005f17:	test   BYTE PTR [rcx+0x1c],0x1
   140005f1b:	je     0x140005ec8
   140005f1d:	cmp    BYTE PTR [rcx+0x19],0x2
   140005f21:	jb     0x140005ec8
   140005f23:	mov    edx,0x13
   140005f28:	jmp    0x140005eb5
   140005f2a:	mov    rcx,rax
   140005f2d:	call   QWORD PTR [rip+0x23cd]        # 0x140008300
   140005f33:	test   eax,eax
   140005f35:	jne    0x140005f86
   140005f37:	call   QWORD PTR [rip+0x221b]        # 0x140008158
   140005f3d:	mov    ebx,eax
   140005f3f:	call   QWORD PTR [rip+0x2633]        # 0x140008578
   140005f45:	mov    rcx,rax
   140005f48:	or     edx,0xffffffff
   140005f4b:	call   QWORD PTR [rip+0x262f]        # 0x140008580
   140005f51:	mov    rcx,QWORD PTR [rip+0x60d0]        # 0x14000c028
   140005f58:	lea    rdx,[rip+0x60c9]        # 0x14000c028
   140005f5f:	cmp    rcx,rdx
   140005f62:	je     0x140005ec8
   140005f68:	test   BYTE PTR [rcx+0x1c],0x1
   140005f6c:	je     0x140005ec8
   140005f72:	cmp    BYTE PTR [rcx+0x19],0x2
   140005f76:	jb     0x140005ec8
   140005f7c:	mov    edx,0x14
   140005f81:	jmp    0x140005eb5
   140005f86:	mov    eax,0x1
   140005f8b:	add    rsp,0x20
   140005f8f:	pop    rbx
   140005f90:	ret    
   140005f91:	int3   
   140005f92:	int3   
   140005f93:	int3   
   140005f94:	int3   
   140005f95:	int3   
   140005f96:	int3   
   140005f97:	int3   
   140005f98:	int3   
   140005f99:	int3   
   140005f9a:	int3   
   140005f9b:	int3   
   140005f9c:	int3   
   140005f9d:	int3   
   140005f9e:	int3   
   140005f9f:	int3   
   140005fa0:	xor    ecx,ecx
   140005fa2:	rex.W jmp QWORD PTR [rip+0x20ff]        # 0x1400080a8
   140005fa9:	int3   
   140005faa:	int3   
   140005fab:	int3   
   140005fac:	int3   
   140005fad:	int3   
   140005fae:	int3   
   140005faf:	int3   
   140005fb0:	mov    rax,rsp
   140005fb3:	push   rbp
   140005fb4:	push   rsi
   140005fb5:	push   rdi
   140005fb6:	push   r12
   140005fb8:	push   r13
   140005fba:	push   r14
   140005fbc:	push   r15
   140005fbe:	mov    rbp,rsp
   140005fc1:	sub    rsp,0x80
   140005fc8:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   140005fd0:	mov    QWORD PTR [rax+0x20],rbx
   140005fd4:	xor    r12d,r12d
   140005fd7:	mov    QWORD PTR [rip+0x6712],r12        # 0x14000c6f0
   140005fde:	lea    rax,[rip+0x6723]        # 0x14000c708
   140005fe5:	mov    QWORD PTR [rip+0x66f4],rax        # 0x14000c6e0
   140005fec:	lea    r13d,[r12+0x1]
   140005ff1:	mov    QWORD PTR [rip+0x6700],r13        # 0x14000c6f8
   140005ff8:	mov    QWORD PTR [rip+0x6719],r12        # 0x14000c718
   140005fff:	mov    QWORD PTR [rip+0x6702],r12        # 0x14000c708
   140006006:	mov    QWORD PTR [rip+0x6713],r13        # 0x14000c720
   14000600d:	lea    rax,[rip+0x2df4]        # 0x140008e08
   140006014:	mov    QWORD PTR [rip+0x6715],rax        # 0x14000c730
   14000601b:	lea    rax,[rip+0x2dd6]        # 0x140008df8
   140006022:	mov    QWORD PTR [rip+0x670f],rax        # 0x14000c738
   140006029:	lea    rbx,[rip+0x66b0]        # 0x14000c6e0
   140006030:	mov    QWORD PTR [rip+0x5ff1],rbx        # 0x14000c028
   140006037:	lea    rdi,[rip+0x66f2]        # 0x14000c730
   14000603e:	mov    r8,QWORD PTR [rdi]
   140006041:	lea    rdi,[rdi+0x8]
   140006045:	mov    QWORD PTR [rbp-0x38],r8
   140006049:	mov    QWORD PTR [rbp-0x30],r12
   14000604d:	mov    QWORD PTR [rbx+0x20],r8
   140006051:	lea    rax,[rbx+0x8]
   140006055:	mov    QWORD PTR [rsp+0x38],rax
   14000605a:	mov    QWORD PTR [rsp+0x30],r12
   14000605f:	mov    QWORD PTR [rsp+0x28],r12
   140006064:	lea    rax,[rbp-0x38]
   140006068:	mov    QWORD PTR [rsp+0x20],rax
   14000606d:	mov    r9d,r13d
   140006070:	mov    rdx,rbx
   140006073:	lea    rcx,[rip+0xfffffffffffff4d6]        # 0x140005550
   14000607a:	call   QWORD PTR [rip+0x23c0]        # 0x140008440
   140006080:	mov    rbx,QWORD PTR [rbx]
   140006083:	test   rbx,rbx
   140006086:	jne    0x14000603e
   140006088:	call   QWORD PTR [rip+0x1fa2]        # 0x140008030
   14000608e:	mov    rdi,rax
   140006091:	or     r14,0xffffffffffffffff
   140006095:	mov    rbx,r14
   140006098:	inc    rbx
   14000609b:	cmp    WORD PTR [rax+rbx*2],r12w
   1400060a0:	jne    0x140006098
   1400060a2:	add    rbx,r13
   1400060a5:	mov    r15d,0x2
   1400060ab:	mov    eax,r15d
   1400060ae:	mul    rbx
   1400060b1:	cmovo  rax,r14
   1400060b5:	mov    rcx,rax
   1400060b8:	call   QWORD PTR [rip+0x2432]        # 0x1400084f0
   1400060be:	mov    rsi,rax
   1400060c1:	test   rax,rax
   1400060c4:	jne    0x14000610b
   1400060c6:	call   QWORD PTR [rip+0x24ac]        # 0x140008578
   1400060cc:	mov    rcx,rax
   1400060cf:	mov    edx,r14d
   1400060d2:	call   QWORD PTR [rip+0x24a8]        # 0x140008580
   1400060d8:	lea    rbx,[rip+0x5f49]        # 0x14000c028
   1400060df:	mov    rcx,QWORD PTR [rip+0x5f42]        # 0x14000c028
   1400060e6:	cmp    rcx,rbx
   1400060e9:	je     0x14000694a
   1400060ef:	test   BYTE PTR [rcx+0x1c],r13b
   1400060f3:	je     0x14000694a
   1400060f9:	cmp    BYTE PTR [rcx+0x19],r15b
   1400060fd:	jb     0x14000694a
   140006103:	lea    edx,[rsi+0x15]
   140006106:	jmp    0x14000693a
   14000610b:	mov    r8,rdi
   14000610e:	mov    rdx,rbx
   140006111:	mov    rcx,rax
   140006114:	call   0x140006a70
   140006119:	mov    edi,eax
   14000611b:	test   eax,eax
   14000611d:	jns    0x140006178
   14000611f:	call   QWORD PTR [rip+0x2453]        # 0x140008578
   140006125:	mov    rcx,rax
   140006128:	mov    edx,edi
   14000612a:	call   QWORD PTR [rip+0x2450]        # 0x140008580
   140006130:	lea    rbx,[rip+0x5ef1]        # 0x14000c028
   140006137:	mov    rcx,QWORD PTR [rip+0x5eea]        # 0x14000c028
   14000613e:	cmp    rcx,rbx
   140006141:	je     0x14000694a
   140006147:	test   BYTE PTR [rcx+0x1c],r13b
   14000614b:	je     0x14000694a
   140006151:	cmp    BYTE PTR [rcx+0x19],r15b
   140006155:	jb     0x14000694a
   14000615b:	mov    edx,0x16
   140006160:	mov    r9d,edi
   140006163:	lea    r8,[rip+0x2f76]        # 0x1400090e0
   14000616a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000616e:	call   0x140001fbc
   140006173:	jmp    0x14000694a
   140006178:	mov    rbx,rsi
   14000617b:	mov    edx,0x19
   140006180:	lea    r8d,[rdx+0x7]
   140006184:	cmp    WORD PTR [rsi],r12w
   140006188:	je     0x1400061e9
   14000618a:	lea    edi,[rdx+0x66]
   14000618d:	movzx  ecx,WORD PTR [rbx]
   140006190:	cmp    cx,di
   140006193:	ja     0x1400061a3
   140006195:	lea    eax,[rcx-0x61]
   140006198:	cmp    ax,dx
   14000619b:	ja     0x1400061dd
   14000619d:	sub    cx,r8w
   1400061a1:	jmp    0x1400061dd
   1400061a3:	mov    WORD PTR [rbp+0x40],cx
   1400061a7:	mov    DWORD PTR [rsp+0x28],r13d
   1400061ac:	lea    rax,[rbp+0x48]
   1400061b0:	mov    QWORD PTR [rsp+0x20],rax
   1400061b5:	mov    r9d,r13d
   1400061b8:	lea    r8,[rbp+0x40]
   1400061bc:	mov    edx,0x200
   1400061c1:	mov    ecx,edi
   1400061c3:	call   QWORD PTR [rip+0x1fff]        # 0x1400081c8
   1400061c9:	movzx  ecx,WORD PTR [rbp+0x48]
   1400061cd:	test   eax,eax
   1400061cf:	cmove  cx,WORD PTR [rbp+0x40]
   1400061d4:	mov    edx,0x19
   1400061d9:	lea    r8d,[rdx+0x7]
   1400061dd:	mov    WORD PTR [rbx],cx
   1400061e0:	add    rbx,r15
   1400061e3:	cmp    WORD PTR [rbx],r12w
   1400061e7:	jne    0x14000618d
   1400061e9:	mov    rdi,QWORD PTR [rip+0x6698]        # 0x14000c888
   1400061f0:	mov    rax,QWORD PTR [rdi]
   1400061f3:	mov    rbx,QWORD PTR [rax]
   1400061f6:	mov    rcx,rbx
   1400061f9:	call   QWORD PTR [rip+0x23a1]        # 0x1400085a0
   1400061ff:	mov    rcx,rdi
   140006202:	call   rbx
   140006204:	mov    edi,eax
   140006206:	test   eax,eax
   140006208:	jns    0x140006251
   14000620a:	call   QWORD PTR [rip+0x2368]        # 0x140008578
   140006210:	mov    rcx,rax
   140006213:	mov    edx,r14d
   140006216:	call   QWORD PTR [rip+0x2364]        # 0x140008580
   14000621c:	lea    rbx,[rip+0x5e05]        # 0x14000c028
   140006223:	mov    rcx,QWORD PTR [rip+0x5dfe]        # 0x14000c028
   14000622a:	cmp    rcx,rbx
   14000622d:	je     0x14000694a
   140006233:	test   BYTE PTR [rcx+0x1c],r13b
   140006237:	je     0x14000694a
   14000623d:	cmp    BYTE PTR [rcx+0x19],r15b
   140006241:	jb     0x14000694a
   140006247:	mov    edx,0x17
   14000624c:	jmp    0x1400066ce
   140006251:	lea    rdx,[rip+0x2de8]        # 0x140009040
   140006258:	mov    rcx,rsi
   14000625b:	call   QWORD PTR [rip+0x218f]        # 0x1400083f0
   140006261:	mov    ecx,r12d
   140006264:	test   rax,rax
   140006267:	setne  cl
   14000626a:	test   ecx,ecx
   14000626c:	jne    0x140006822
   140006272:	lea    rdx,[rip+0x2ddf]        # 0x140009058
   140006279:	mov    rcx,rsi
   14000627c:	call   QWORD PTR [rip+0x216e]        # 0x1400083f0
   140006282:	mov    ecx,r12d
   140006285:	test   rax,rax
   140006288:	setne  cl
   14000628b:	test   ecx,ecx
   14000628d:	jne    0x140006822
   140006293:	lea    rdx,[rip+0x2dd6]        # 0x140009070
   14000629a:	mov    rcx,rsi
   14000629d:	call   QWORD PTR [rip+0x214d]        # 0x1400083f0
   1400062a3:	mov    ecx,r12d
   1400062a6:	test   rax,rax
   1400062a9:	setne  cl
   1400062ac:	test   ecx,ecx
   1400062ae:	jne    0x1400066e6
   1400062b4:	lea    rdx,[rip+0x2dd5]        # 0x140009090
   1400062bb:	mov    rcx,rsi
   1400062be:	call   QWORD PTR [rip+0x212c]        # 0x1400083f0
   1400062c4:	mov    ecx,r12d
   1400062c7:	test   rax,rax
   1400062ca:	setne  cl
   1400062cd:	test   ecx,ecx
   1400062cf:	jne    0x1400066e6
   1400062d5:	lea    rdx,[rip+0x2dd4]        # 0x1400090b0
   1400062dc:	mov    rcx,rsi
   1400062df:	call   QWORD PTR [rip+0x210b]        # 0x1400083f0
   1400062e5:	mov    ecx,r12d
   1400062e8:	test   rax,rax
   1400062eb:	setne  cl
   1400062ee:	test   ecx,ecx
   1400062f0:	jne    0x14000630d
   1400062f2:	cmp    DWORD PTR [rip+0x6557],r12d        # 0x14000c850
   1400062f9:	jne    0x14000630d
   1400062fb:	lea    rcx,[rip+0x2dc6]        # 0x1400090c8
   140006302:	call   QWORD PTR [rip+0x20e0]        # 0x1400083e8
   140006308:	jmp    0x14000694a
   14000630d:	mov    rdi,QWORD PTR [rip+0x6574]        # 0x14000c888
   140006314:	mov    rax,QWORD PTR [rdi]
   140006317:	mov    rbx,QWORD PTR [rax+0x18]
   14000631b:	mov    rcx,rbx
   14000631e:	call   QWORD PTR [rip+0x227c]        # 0x1400085a0
   140006324:	mov    rcx,rdi
   140006327:	call   rbx
   140006329:	mov    r14d,eax
   14000632c:	test   eax,eax
   14000632e:	jns    0x14000637a
   140006330:	call   QWORD PTR [rip+0x2242]        # 0x140008578
   140006336:	mov    rcx,rax
   140006339:	or     edx,0xffffffff
   14000633c:	call   QWORD PTR [rip+0x223e]        # 0x140008580
   140006342:	lea    rbx,[rip+0x5cdf]        # 0x14000c028
   140006349:	mov    rcx,QWORD PTR [rip+0x5cd8]        # 0x14000c028
   140006350:	cmp    rcx,rbx
   140006353:	je     0x14000694a
   140006359:	test   BYTE PTR [rcx+0x1c],r13b
   14000635d:	je     0x14000694a
   140006363:	cmp    BYTE PTR [rcx+0x19],r15b
   140006367:	jb     0x14000694a
   14000636d:	mov    edx,0x1e
   140006372:	mov    r9d,r14d
   140006375:	jmp    0x1400066d1
   14000637a:	mov    rsi,QWORD PTR [rip+0x5cb7]        # 0x14000c038
   140006381:	lea    rdi,[rip+0x5cb0]        # 0x14000c038
   140006388:	cmp    rsi,rdi
   14000638b:	je     0x1400064c2
   140006391:	mov    ecx,0x28
   140006396:	call   QWORD PTR [rip+0x2154]        # 0x1400084f0
   14000639c:	mov    rbx,rax
   14000639f:	mov    QWORD PTR [rbp+0x50],rax
   1400063a3:	test   rax,rax
   1400063a6:	je     0x1400063e8
   1400063a8:	mov    rax,QWORD PTR [rsi+0x18]
   1400063ac:	lea    rcx,[rip+0x26f5]        # 0x140008aa8
   1400063b3:	mov    QWORD PTR [rbx],rcx
   1400063b6:	lea    rcx,[rip+0x26c3]        # 0x140008a80
   1400063bd:	mov    QWORD PTR [rbx+0x8],rcx
   1400063c1:	mov    DWORD PTR [rbx+0x10],r12d
   1400063c5:	lea    r8,[rbx+0x18]
   1400063c9:	mov    QWORD PTR [r8],r12
   1400063cc:	mov    QWORD PTR [rbx+0x20],rax
   1400063d0:	lock add DWORD PTR [rax+0x8],r13d
   1400063d5:	lea    rdx,[rip+0x2af4]        # 0x140008ed0
   1400063dc:	mov    rcx,QWORD PTR [rbx+0x20]
   1400063e0:	call   QWORD PTR [rip+0x20da]        # 0x1400084c0
   1400063e6:	jmp    0x1400063eb
   1400063e8:	mov    rbx,r12
   1400063eb:	test   rbx,rbx
   1400063ee:	je     0x14000647b
   1400063f4:	lea    rax,[rsi+0x30]
   1400063f8:	mov    QWORD PTR [rsp+0x20],rax
   1400063fd:	mov    r9d,r13d
   140006400:	mov    r8d,0x15
   140006406:	mov    rdx,rbx
   140006409:	mov    rcx,QWORD PTR [rsi+0x10]
   14000640d:	call   QWORD PTR [rip+0x1d05]        # 0x140008118
   140006413:	mov    r15d,eax
   140006416:	test   eax,eax
   140006418:	js     0x140006431
   14000641a:	mov    rsi,QWORD PTR [rsi]
   14000641d:	cmp    rsi,rdi
   140006420:	jne    0x140006391
   140006426:	mov    r15d,0x2
   14000642c:	jmp    0x1400064c2
   140006431:	call   QWORD PTR [rip+0x2141]        # 0x140008578
   140006437:	mov    rcx,rax
   14000643a:	or     edx,0xffffffff
   14000643d:	call   QWORD PTR [rip+0x213d]        # 0x140008580
   140006443:	lea    rbx,[rip+0x5bde]        # 0x14000c028
   14000644a:	mov    rcx,QWORD PTR [rip+0x5bd7]        # 0x14000c028
   140006451:	cmp    rcx,rbx
   140006454:	je     0x14000694a
   14000645a:	test   BYTE PTR [rcx+0x1c],r13b
   14000645e:	je     0x14000694a
   140006464:	cmp    BYTE PTR [rcx+0x19],0x2
   140006468:	jb     0x14000694a
   14000646e:	mov    edx,0x20
   140006473:	mov    r9d,r15d
   140006476:	jmp    0x1400066d1
   14000647b:	call   QWORD PTR [rip+0x20f7]        # 0x140008578
   140006481:	mov    rcx,rax
   140006484:	or     edx,0xffffffff
   140006487:	call   QWORD PTR [rip+0x20f3]        # 0x140008580
   14000648d:	lea    rbx,[rip+0x5b94]        # 0x14000c028
   140006494:	mov    rcx,QWORD PTR [rip+0x5b8d]        # 0x14000c028
   14000649b:	cmp    rcx,rbx
   14000649e:	je     0x14000694a
   1400064a4:	test   BYTE PTR [rcx+0x1c],r13b
   1400064a8:	je     0x14000694a
   1400064ae:	cmp    BYTE PTR [rcx+0x19],0x2
   1400064b2:	jb     0x14000694a
   1400064b8:	mov    edx,0x1f
   1400064bd:	jmp    0x14000693a
   1400064c2:	lea    rbx,[rip+0x5b5f]        # 0x14000c028
   1400064c9:	cmp    DWORD PTR [rip+0x6380],r12d        # 0x14000c850
   1400064d0:	je     0x140006597
   1400064d6:	mov    rax,QWORD PTR [rip+0x637b]        # 0x14000c858
   1400064dd:	mov    QWORD PTR [rbp-0x28],rax
   1400064e1:	lea    rax,[rip+0xfffffffffffff5e8]        # 0x140005ad0
   1400064e8:	mov    QWORD PTR [rbp-0x20],rax
   1400064ec:	mov    QWORD PTR [rbp-0x18],r12
   1400064f0:	mov    QWORD PTR [rbp-0x10],r12
   1400064f4:	lea    rcx,[rbp-0x28]
   1400064f8:	call   QWORD PTR [rip+0x1de2]        # 0x1400082e0
   1400064fe:	test   eax,eax
   140006500:	jne    0x1400065b1
   140006506:	call   QWORD PTR [rip+0x1c4c]        # 0x140008158
   14000650c:	mov    esi,eax
   14000650e:	call   QWORD PTR [rip+0x2064]        # 0x140008578
   140006514:	mov    rcx,rax
   140006517:	or     edx,0xffffffff
   14000651a:	call   QWORD PTR [rip+0x2060]        # 0x140008580
   140006520:	mov    rcx,QWORD PTR [rip+0x5b01]        # 0x14000c028
   140006527:	cmp    rcx,rbx
   14000652a:	je     0x140006550
   14000652c:	test   BYTE PTR [rcx+0x1c],r13b
   140006530:	je     0x140006550
   140006532:	cmp    BYTE PTR [rcx+0x19],r15b
   140006536:	jb     0x140006550
   140006538:	mov    edx,0xf
   14000653d:	mov    r9d,esi
   140006540:	lea    r8,[rip+0x2b99]        # 0x1400090e0
   140006547:	mov    rcx,QWORD PTR [rcx+0x10]
   14000654b:	call   0x140001fbc
   140006550:	call   QWORD PTR [rip+0x2022]        # 0x140008578
   140006556:	mov    rcx,rax
   140006559:	or     edx,0xffffffff
   14000655c:	call   QWORD PTR [rip+0x201e]        # 0x140008580
   140006562:	mov    rcx,QWORD PTR [rip+0x5abf]        # 0x14000c028
   140006569:	cmp    rcx,rbx
   14000656c:	je     0x1400065b1
   14000656e:	test   BYTE PTR [rcx+0x1c],r13b
   140006572:	je     0x1400065b1
   140006574:	cmp    BYTE PTR [rcx+0x19],r15b
   140006578:	jb     0x1400065b1
   14000657a:	mov    edx,0x21
   14000657f:	mov    r9d,0x80041001
   140006585:	lea    r8,[rip+0x2b54]        # 0x1400090e0
   14000658c:	mov    rcx,QWORD PTR [rcx+0x10]
   140006590:	call   0x140001fbc
   140006595:	jmp    0x1400065b1
   140006597:	call   QWORD PTR [rip+0x1c43]        # 0x1400081e0
   14000659d:	mov    DWORD PTR [rip+0x5a8d],eax        # 0x14000c030
   1400065a3:	call   0x1400078cc
   1400065a8:	test   al,al
   1400065aa:	je     0x1400065b1
   1400065ac:	call   0x14000599c
   1400065b1:	mov    rsi,QWORD PTR [rip+0x5a80]        # 0x14000c038
   1400065b8:	jmp    0x140006612
   1400065ba:	mov    ecx,DWORD PTR [rsi+0x30]
   1400065bd:	call   QWORD PTR [rip+0x1b5d]        # 0x140008120
   1400065c3:	mov    r15d,eax
   1400065c6:	test   eax,eax
   1400065c8:	jns    0x14000660f
   1400065ca:	call   QWORD PTR [rip+0x1fa8]        # 0x140008578
   1400065d0:	mov    rcx,rax
   1400065d3:	or     edx,0xffffffff
   1400065d6:	call   QWORD PTR [rip+0x1fa4]        # 0x140008580
   1400065dc:	mov    rcx,QWORD PTR [rip+0x5a45]        # 0x14000c028
   1400065e3:	cmp    rcx,rbx
   1400065e6:	je     0x14000660c
   1400065e8:	test   BYTE PTR [rcx+0x1c],r13b
   1400065ec:	je     0x14000660c
   1400065ee:	cmp    BYTE PTR [rcx+0x19],0x2
   1400065f2:	jb     0x14000660c
   1400065f4:	mov    edx,0x22
   1400065f9:	mov    r9d,r15d
   1400065fc:	lea    r8,[rip+0x2add]        # 0x1400090e0
   140006603:	mov    rcx,QWORD PTR [rcx+0x10]
   140006607:	call   0x140001fbc
   14000660c:	mov    r14d,r15d
   14000660f:	mov    rsi,QWORD PTR [rsi]
   140006612:	cmp    rsi,rdi
   140006615:	jne    0x1400065ba
   140006617:	test   r14d,r14d
   14000661a:	jns    0x14000665f
   14000661c:	call   QWORD PTR [rip+0x1f56]        # 0x140008578
   140006622:	mov    rcx,rax
   140006625:	mov    edx,r14d
   140006628:	call   QWORD PTR [rip+0x1f52]        # 0x140008580
   14000662e:	mov    rcx,QWORD PTR [rip+0x59f3]        # 0x14000c028
   140006635:	cmp    rcx,rbx
   140006638:	je     0x14000694a
   14000663e:	test   BYTE PTR [rcx+0x1c],r13b
   140006642:	je     0x14000694a
   140006648:	cmp    BYTE PTR [rcx+0x19],0x2
   14000664c:	jb     0x14000694a
   140006652:	mov    edx,0x23
   140006657:	mov    r9d,r14d
   14000665a:	jmp    0x140006163
   14000665f:	call   0x1400078cc
   140006664:	test   al,al
   140006666:	je     0x140006684
   140006668:	lea    r9,[rip+0xfffffffffffff931]        # 0x140005fa0
   14000666f:	xor    edx,edx
   140006671:	xor    ecx,ecx
   140006673:	mov    r8d,0x3e8
   140006679:	call   QWORD PTR [rip+0x1a49]        # 0x1400080c8
   14000667f:	call   0x14000599c
   140006684:	call   0x14000544c
   140006689:	mov    edi,eax
   14000668b:	test   eax,eax
   14000668d:	jns    0x14000694a
   140006693:	call   QWORD PTR [rip+0x1edf]        # 0x140008578
   140006699:	mov    rcx,rax
   14000669c:	or     edx,0xffffffff
   14000669f:	call   QWORD PTR [rip+0x1edb]        # 0x140008580
   1400066a5:	mov    rcx,QWORD PTR [rip+0x597c]        # 0x14000c028
   1400066ac:	cmp    rcx,rbx
   1400066af:	je     0x14000694a
   1400066b5:	test   BYTE PTR [rcx+0x1c],r13b
   1400066b9:	je     0x14000694a
   1400066bf:	cmp    BYTE PTR [rcx+0x19],0x2
   1400066c3:	jb     0x14000694a
   1400066c9:	mov    edx,0x24
   1400066ce:	mov    r9d,edi
   1400066d1:	lea    r8,[rip+0x2a08]        # 0x1400090e0
   1400066d8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400066dc:	call   0x140001fbc
   1400066e1:	jmp    0x14000694a
   1400066e6:	mov    rdi,QWORD PTR [rip+0x619b]        # 0x14000c888
   1400066ed:	mov    rax,QWORD PTR [rdi]
   1400066f0:	mov    rbx,QWORD PTR [rax+0x28]
   1400066f4:	mov    rcx,rbx
   1400066f7:	call   QWORD PTR [rip+0x1ea3]        # 0x1400085a0
   1400066fd:	mov    rcx,rdi
   140006700:	call   rbx
   140006702:	mov    edi,eax
   140006704:	lea    rbx,[rip+0x591d]        # 0x14000c028
   14000670b:	test   eax,eax
   14000670d:	jns    0x140006751
   14000670f:	call   QWORD PTR [rip+0x1e63]        # 0x140008578
   140006715:	mov    rcx,rax
   140006718:	mov    edx,r14d
   14000671b:	call   QWORD PTR [rip+0x1e5f]        # 0x140008580
   140006721:	mov    rcx,QWORD PTR [rip+0x5900]        # 0x14000c028
   140006728:	cmp    rcx,rbx
   14000672b:	je     0x140006751
   14000672d:	test   BYTE PTR [rcx+0x1c],r13b
   140006731:	je     0x140006751
   140006733:	cmp    BYTE PTR [rcx+0x19],r15b
   140006737:	jb     0x140006751
   140006739:	mov    edx,0x1b
   14000673e:	mov    r9d,edi
   140006741:	lea    r8,[rip+0x2998]        # 0x1400090e0
   140006748:	mov    rcx,QWORD PTR [rcx+0x10]
   14000674c:	call   0x140001fbc
   140006751:	mov    rsi,QWORD PTR [rip+0x58e0]        # 0x14000c038
   140006758:	lea    rdi,[rip+0x58d9]        # 0x14000c038
   14000675f:	cmp    rsi,rdi
   140006762:	je     0x1400067c2
   140006764:	lea    rcx,[rsi-0x8]
   140006768:	call   0x140004f34
   14000676d:	mov    r14d,eax
   140006770:	test   eax,eax
   140006772:	jns    0x1400067b6
   140006774:	call   QWORD PTR [rip+0x1dfe]        # 0x140008578
   14000677a:	mov    rcx,rax
   14000677d:	or     edx,0xffffffff
   140006780:	call   QWORD PTR [rip+0x1dfa]        # 0x140008580
   140006786:	mov    rcx,QWORD PTR [rip+0x589b]        # 0x14000c028
   14000678d:	cmp    rcx,rbx
   140006790:	je     0x1400067b6
   140006792:	test   BYTE PTR [rcx+0x1c],r13b
   140006796:	je     0x1400067b6
   140006798:	cmp    BYTE PTR [rcx+0x19],r15b
   14000679c:	jb     0x1400067b6
   14000679e:	mov    edx,0x1c
   1400067a3:	mov    r9d,r14d
   1400067a6:	lea    r8,[rip+0x2933]        # 0x1400090e0
   1400067ad:	mov    rcx,QWORD PTR [rcx+0x10]
   1400067b1:	call   0x140001fbc
   1400067b6:	mov    rsi,QWORD PTR [rsi]
   1400067b9:	cmp    rsi,rdi
   1400067bc:	jne    0x140006764
   1400067be:	or     r14,0xffffffffffffffff
   1400067c2:	cmp    DWORD PTR [rip+0x6087],r12d        # 0x14000c850
   1400067c9:	je     0x14000694a
   1400067cf:	call   0x140005e5c
   1400067d4:	test   eax,eax
   1400067d6:	jne    0x14000694a
   1400067dc:	call   QWORD PTR [rip+0x1d96]        # 0x140008578
   1400067e2:	mov    rcx,rax
   1400067e5:	mov    edx,r14d
   1400067e8:	call   QWORD PTR [rip+0x1d92]        # 0x140008580
   1400067ee:	mov    rcx,QWORD PTR [rip+0x5833]        # 0x14000c028
   1400067f5:	cmp    rcx,rbx
   1400067f8:	je     0x14000694a
   1400067fe:	test   BYTE PTR [rcx+0x1c],r13b
   140006802:	je     0x14000694a
   140006808:	cmp    BYTE PTR [rcx+0x19],r15b
   14000680c:	jb     0x14000694a
   140006812:	mov    edx,0x1d
   140006817:	mov    r9d,0x80041001
   14000681d:	jmp    0x1400066d1
   140006822:	mov    rdi,QWORD PTR [rip+0x605f]        # 0x14000c888
   140006829:	mov    rax,QWORD PTR [rdi]
   14000682c:	mov    rbx,QWORD PTR [rax+0x20]
   140006830:	mov    rcx,rbx
   140006833:	call   QWORD PTR [rip+0x1d67]        # 0x1400085a0
   140006839:	mov    rcx,rdi
   14000683c:	call   rbx
   14000683e:	mov    edi,eax
   140006840:	test   eax,eax
   140006842:	jns    0x14000688b
   140006844:	call   QWORD PTR [rip+0x1d2e]        # 0x140008578
   14000684a:	mov    rcx,rax
   14000684d:	mov    edx,r14d
   140006850:	call   QWORD PTR [rip+0x1d2a]        # 0x140008580
   140006856:	lea    rbx,[rip+0x57cb]        # 0x14000c028
   14000685d:	mov    rcx,QWORD PTR [rip+0x57c4]        # 0x14000c028
   140006864:	cmp    rcx,rbx
   140006867:	je     0x14000694a
   14000686d:	test   BYTE PTR [rcx+0x1c],r13b
   140006871:	je     0x14000694a
   140006877:	cmp    BYTE PTR [rcx+0x19],r15b
   14000687b:	jb     0x14000694a
   140006881:	mov    edx,0x18
   140006886:	jmp    0x1400066ce
   14000688b:	mov    rbx,QWORD PTR [rip+0x57a6]        # 0x14000c038
   140006892:	lea    rdi,[rip+0x579f]        # 0x14000c038
   140006899:	jmp    0x1400068ad
   14000689b:	lea    rcx,[rbx-0x8]
   14000689f:	call   0x1400049d0
   1400068a4:	mov    esi,eax
   1400068a6:	test   eax,eax
   1400068a8:	js     0x1400068b4
   1400068aa:	mov    rbx,QWORD PTR [rbx]
   1400068ad:	cmp    rbx,rdi
   1400068b0:	jne    0x14000689b
   1400068b2:	jmp    0x1400068f2
   1400068b4:	call   QWORD PTR [rip+0x1cbe]        # 0x140008578
   1400068ba:	mov    rcx,rax
   1400068bd:	mov    edx,r14d
   1400068c0:	call   QWORD PTR [rip+0x1cba]        # 0x140008580
   1400068c6:	lea    rbx,[rip+0x575b]        # 0x14000c028
   1400068cd:	mov    rcx,QWORD PTR [rip+0x5754]        # 0x14000c028
   1400068d4:	cmp    rcx,rbx
   1400068d7:	je     0x14000694a
   1400068d9:	test   BYTE PTR [rcx+0x1c],r13b
   1400068dd:	je     0x14000694a
   1400068df:	cmp    BYTE PTR [rcx+0x19],r15b
   1400068e3:	jb     0x14000694a
   1400068e5:	mov    edx,0x19
   1400068ea:	mov    r9d,esi
   1400068ed:	jmp    0x1400066d1
   1400068f2:	cmp    DWORD PTR [rip+0x5f57],r12d        # 0x14000c850
   1400068f9:	je     0x14000694a
   1400068fb:	call   0x140005ce0
   140006900:	test   eax,eax
   140006902:	jne    0x14000694a
   140006904:	call   QWORD PTR [rip+0x1c6e]        # 0x140008578
   14000690a:	mov    rcx,rax
   14000690d:	mov    edx,r14d
   140006910:	call   QWORD PTR [rip+0x1c6a]        # 0x140008580
   140006916:	lea    rbx,[rip+0x570b]        # 0x14000c028
   14000691d:	mov    rcx,QWORD PTR [rip+0x5704]        # 0x14000c028
   140006924:	cmp    rcx,rbx
   140006927:	je     0x14000694a
   140006929:	test   BYTE PTR [rcx+0x1c],r13b
   14000692d:	je     0x14000694a
   14000692f:	cmp    BYTE PTR [rcx+0x19],r15b
   140006933:	jb     0x14000694a
   140006935:	mov    edx,0x1a
   14000693a:	lea    r8,[rip+0x279f]        # 0x1400090e0
   140006941:	mov    rcx,QWORD PTR [rcx+0x10]
   140006945:	call   0x140001f98
   14000694a:	call   0x1400055d8
   14000694f:	xor    eax,eax
   140006951:	mov    rbx,QWORD PTR [rsp+0xd8]
   140006959:	add    rsp,0x80
   140006960:	pop    r15
   140006962:	pop    r14
   140006964:	pop    r13
   140006966:	pop    r12
   140006968:	pop    rdi
   140006969:	pop    rsi
   14000696a:	pop    rbp
   14000696b:	ret    
   14000696c:	int3   
   14000696d:	int3   
   14000696e:	int3   
   14000696f:	int3   
   140006970:	int3   
   140006971:	int3   
   140006972:	int3   
   140006973:	int3   
   140006974:	sub    rsp,0x28
   140006978:	xor    r9d,r9d
   14000697b:	xor    r8d,r8d
   14000697e:	xor    ecx,ecx
   140006980:	lea    edx,[r9+0x1]
   140006984:	call   QWORD PTR [rip+0x16be]        # 0x140008048
   14000698a:	call   0x140005fb0
   14000698f:	xor    eax,eax
   140006991:	add    rsp,0x28
   140006995:	ret    
   140006996:	int3   
   140006997:	int3   
   140006998:	int3   
   140006999:	int3   
   14000699a:	int3   
   14000699b:	int3   
   14000699c:	mov    QWORD PTR [rsp+0x8],rbx
   1400069a1:	push   rdi
   1400069a2:	sub    rsp,0x20
   1400069a6:	cmp    BYTE PTR [rcx],0x0
   1400069a9:	mov    rdi,rcx
   1400069ac:	jne    0x1400069c1
   1400069ae:	mov    rbx,QWORD PTR [rcx+0x8]
   1400069b2:	mov    rcx,rbx
   1400069b5:	call   QWORD PTR [rip+0x1be5]        # 0x1400085a0
   1400069bb:	mov    rcx,QWORD PTR [rdi+0x10]
   1400069bf:	call   rbx
   1400069c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400069c6:	add    rsp,0x20
   1400069ca:	pop    rdi
   1400069cb:	ret    
   1400069cc:	int3   
   1400069cd:	int3   
   1400069ce:	int3   
   1400069cf:	int3   
   1400069d0:	int3   
   1400069d1:	int3   
   1400069d2:	int3   
   1400069d3:	int3   
   1400069d4:	rex push rbx
   1400069d6:	sub    rsp,0x20
   1400069da:	mov    rbx,QWORD PTR [rcx]
   1400069dd:	test   rbx,rbx
   1400069e0:	je     0x140006a09
   1400069e2:	mov    rcx,QWORD PTR [rbx+0x28]
   1400069e6:	lea    rax,[rip+0x20e3]        # 0x140008ad0
   1400069ed:	mov    QWORD PTR [rbx],rax
   1400069f0:	call   QWORD PTR [rip+0x1af2]        # 0x1400084e8
   1400069f6:	mov    rcx,QWORD PTR [rbx+0x20]
   1400069fa:	call   QWORD PTR [rip+0x1ab8]        # 0x1400084b8
   140006a00:	mov    rcx,rbx
   140006a03:	call   QWORD PTR [rip+0x1adf]        # 0x1400084e8
   140006a09:	add    rsp,0x20
   140006a0d:	pop    rbx
   140006a0e:	ret    
   140006a0f:	int3   
   140006a10:	int3   
   140006a11:	int3   
   140006a12:	int3   
   140006a13:	int3   
   140006a14:	int3   
   140006a15:	int3   
   140006a16:	int3   
   140006a17:	int3   
   140006a18:	sub    rsp,0x28
   140006a1c:	mov    r9,r8
   140006a1f:	call   0x140006a34
   140006a24:	mov    rax,rcx
   140006a27:	add    rsp,0x28
   140006a2b:	ret    
   140006a2c:	int3   
   140006a2d:	int3   
   140006a2e:	int3   
   140006a2f:	int3   
   140006a30:	int3   
   140006a31:	int3   
   140006a32:	int3   
   140006a33:	int3   
   140006a34:	lea    rax,[rip+0x125]        # 0x140006b60
   140006a3b:	mov    BYTE PTR [rcx],0x0
   140006a3e:	mov    QWORD PTR [rcx+0x8],rax
   140006a42:	mov    rax,rcx
   140006a45:	mov    QWORD PTR [rcx+0x10],r9
   140006a49:	ret    
   140006a4a:	int3   
   140006a4b:	int3   
   140006a4c:	int3   
   140006a4d:	int3   
   140006a4e:	int3   
   140006a4f:	int3   
   140006a50:	sub    rcx,0x8
   140006a54:	jmp    0x140005700
   140006a59:	int3   
   140006a5a:	int3   
   140006a5b:	int3   
   140006a5c:	int3   
   140006a5d:	int3   
   140006a5e:	int3   
   140006a5f:	int3   
   140006a60:	sub    rcx,0x8
   140006a64:	jmp    0x140005630
   140006a69:	int3   
   140006a6a:	int3   
   140006a6b:	int3   
   140006a6c:	int3   
   140006a6d:	int3   
   140006a6e:	int3   
   140006a6f:	int3   
   140006a70:	mov    QWORD PTR [rsp+0x8],rbx
   140006a75:	xor    ebx,ebx
   140006a77:	lea    rax,[rdx-0x1]
   140006a7b:	mov    r10d,0x7ffffffe
   140006a81:	mov    r9d,ebx
   140006a84:	cmp    rax,r10
   140006a87:	mov    r11d,0x80070057
   140006a8d:	cmova  r9d,r11d
   140006a91:	test   r9d,r9d
   140006a94:	js     0x140006ad5
   140006a96:	mov    r9d,ebx
   140006a99:	test   rdx,rdx
   140006a9c:	je     0x140006ac9
   140006a9e:	sub    r10,rdx
   140006aa1:	sub    r8,rcx
   140006aa4:	lea    rax,[r10+rdx*1]
   140006aa8:	test   rax,rax
   140006aab:	je     0x140006ac4
   140006aad:	movzx  eax,WORD PTR [r8+rcx*1]
   140006ab2:	test   ax,ax
   140006ab5:	je     0x140006ac4
   140006ab7:	mov    WORD PTR [rcx],ax
   140006aba:	add    rcx,0x2
   140006abe:	sub    rdx,0x1
   140006ac2:	jne    0x140006aa4
   140006ac4:	test   rdx,rdx
   140006ac7:	jne    0x140006ada
   140006ac9:	sub    rcx,0x2
   140006acd:	mov    r9d,0x8007007a
   140006ad3:	jmp    0x140006ada
   140006ad5:	test   rdx,rdx
   140006ad8:	je     0x140006add
   140006ada:	mov    WORD PTR [rcx],bx
   140006add:	mov    rbx,QWORD PTR [rsp+0x8]
   140006ae2:	mov    eax,r9d
   140006ae5:	ret    
   140006ae6:	int3   
   140006ae7:	int3   
   140006ae8:	int3   
   140006ae9:	int3   
   140006aea:	int3   
   140006aeb:	int3   
   140006aec:	rex push rbx
   140006aee:	sub    rsp,0x20
   140006af2:	xor    ebx,ebx
   140006af4:	cmp    QWORD PTR [rip+0x5c4d],rbx        # 0x14000c748
   140006afb:	jne    0x140006b43
   140006afd:	xor    edx,edx
   140006aff:	lea    r8d,[rbx+0x8]
   140006b03:	lea    rcx,[rip+0x2656]        # 0x140009160
   140006b0a:	call   QWORD PTR [rip+0x1528]        # 0x140008038
   140006b10:	mov    QWORD PTR [rip+0x5c31],rax        # 0x14000c748
   140006b17:	test   rax,rax
   140006b1a:	jne    0x140006b43
   140006b1c:	xor    edx,edx
   140006b1e:	lea    r8d,[rbx+0x8]
   140006b22:	lea    rcx,[rip+0x268f]        # 0x1400091b8
   140006b29:	call   QWORD PTR [rip+0x1509]        # 0x140008038
   140006b2f:	mov    QWORD PTR [rip+0x5c12],rax        # 0x14000c748
   140006b36:	test   rax,rax
   140006b39:	jne    0x140006b43
   140006b3b:	call   QWORD PTR [rip+0x1617]        # 0x140008158
   140006b41:	mov    ebx,eax
   140006b43:	mov    eax,ebx
   140006b45:	add    rsp,0x20
   140006b49:	pop    rbx
   140006b4a:	ret    
   140006b4b:	int3   
   140006b4c:	int3   
   140006b4d:	int3   
   140006b4e:	int3   
   140006b4f:	int3   
   140006b50:	int3   
   140006b51:	int3   
   140006b52:	int3   
   140006b53:	int3   
   140006b54:	int3   
   140006b55:	int3   
   140006b56:	int3   
   140006b57:	int3   
   140006b58:	int3   
   140006b59:	int3   
   140006b5a:	int3   
   140006b5b:	int3   
   140006b5c:	int3   
   140006b5d:	int3   
   140006b5e:	int3   
   140006b5f:	int3   
   140006b60:	mov    QWORD PTR [rsp+0x8],rbx
   140006b65:	push   rdi
   140006b66:	sub    rsp,0x20
   140006b6a:	mov    rbx,QWORD PTR [rip+0x5d2f]        # 0x14000c8a0
   140006b71:	mov    rdi,rcx
   140006b74:	test   rbx,rbx
   140006b77:	jne    0x140006bad
   140006b79:	call   0x140006aec
   140006b7e:	test   eax,eax
   140006b80:	jne    0x140006bbb
   140006b82:	mov    rcx,QWORD PTR [rip+0x5bbf]        # 0x14000c748
   140006b89:	lea    rdx,[rip+0x2648]        # 0x1400091d8
   140006b90:	call   QWORD PTR [rip+0x14aa]        # 0x140008040
   140006b96:	mov    QWORD PTR [rip+0x5d03],rax        # 0x14000c8a0
   140006b9d:	mov    rbx,rax
   140006ba0:	test   rax,rax
   140006ba3:	jne    0x140006bad
   140006ba5:	call   QWORD PTR [rip+0x15ad]        # 0x140008158
   140006bab:	jmp    0x140006bbb
   140006bad:	mov    rcx,rbx
   140006bb0:	call   QWORD PTR [rip+0x19ea]        # 0x1400085a0
   140006bb6:	mov    rcx,rdi
   140006bb9:	call   rbx
   140006bbb:	mov    rbx,QWORD PTR [rsp+0x30]
   140006bc0:	add    rsp,0x20
   140006bc4:	pop    rdi
   140006bc5:	ret    
   140006bc6:	int3   
   140006bc7:	int3   
   140006bc8:	int3   
   140006bc9:	int3   
   140006bca:	int3   
   140006bcb:	int3   
   140006bcc:	mov    QWORD PTR [rsp+0x8],rbx
   140006bd1:	mov    QWORD PTR [rsp+0x10],rsi
   140006bd6:	push   rdi
   140006bd7:	sub    rsp,0x50
   140006bdb:	mov    rbx,QWORD PTR [rip+0x5cb6]        # 0x14000c898
   140006be2:	mov    rdi,rdx
   140006be5:	mov    rsi,rcx
   140006be8:	test   rbx,rbx
   140006beb:	jne    0x140006c21
   140006bed:	call   0x140006aec
   140006bf2:	test   eax,eax
   140006bf4:	jne    0x140006c5e
   140006bf6:	mov    rcx,QWORD PTR [rip+0x5b4b]        # 0x14000c748
   140006bfd:	lea    rdx,[rip+0x25e4]        # 0x1400091e8
   140006c04:	call   QWORD PTR [rip+0x1436]        # 0x140008040
   140006c0a:	mov    QWORD PTR [rip+0x5c87],rax        # 0x14000c898
   140006c11:	mov    rbx,rax
   140006c14:	test   rax,rax
   140006c17:	jne    0x140006c21
   140006c19:	call   QWORD PTR [rip+0x1539]        # 0x140008158
   140006c1f:	jmp    0x140006c5e
   140006c21:	mov    rcx,rbx
   140006c24:	call   QWORD PTR [rip+0x1976]        # 0x1400085a0
   140006c2a:	and    QWORD PTR [rsp+0x40],0x0
   140006c30:	xor    r9d,r9d
   140006c33:	mov    rax,QWORD PTR [rsp+0x98]
   140006c3b:	xor    r8d,r8d
   140006c3e:	mov    QWORD PTR [rsp+0x38],rax
   140006c43:	mov    rdx,rdi
   140006c46:	and    QWORD PTR [rsp+0x30],0x0
   140006c4c:	mov    rcx,rsi
   140006c4f:	mov    DWORD PTR [rsp+0x28],0x2000000
   140006c57:	and    DWORD PTR [rsp+0x20],0x0
   140006c5c:	call   rbx
   140006c5e:	mov    rbx,QWORD PTR [rsp+0x60]
   140006c63:	mov    rsi,QWORD PTR [rsp+0x68]
   140006c68:	add    rsp,0x50
   140006c6c:	pop    rdi
   140006c6d:	ret    
   140006c6e:	int3   
   140006c6f:	int3   
   140006c70:	int3   
   140006c71:	int3   
   140006c72:	int3   
   140006c73:	int3   
   140006c74:	mov    QWORD PTR [rsp+0x8],rbx
   140006c79:	mov    QWORD PTR [rsp+0x10],rbp
   140006c7e:	mov    QWORD PTR [rsp+0x18],rsi
   140006c83:	push   rdi
   140006c84:	sub    rsp,0x20
   140006c88:	mov    rbx,QWORD PTR [rip+0x5ab1]        # 0x14000c740
   140006c8f:	mov    rsi,rdx
   140006c92:	mov    rbp,rcx
   140006c95:	test   rbx,rbx
   140006c98:	jne    0x140006d24
   140006c9e:	mov    rdi,QWORD PTR [rip+0x5c0b]        # 0x14000c8b0
   140006ca5:	test   rdi,rdi
   140006ca8:	jne    0x140006d11
   140006caa:	call   0x140006aec
   140006caf:	test   eax,eax
   140006cb1:	jne    0x140006d3b
   140006cb7:	mov    rcx,QWORD PTR [rip+0x5a8a]        # 0x14000c748
   140006cbe:	lea    rdx,[rip+0x2533]        # 0x1400091f8
   140006cc5:	call   QWORD PTR [rip+0x1375]        # 0x140008040
   140006ccb:	mov    QWORD PTR [rip+0x5a6e],rax        # 0x14000c740
   140006cd2:	mov    rbx,rax
   140006cd5:	test   rax,rax
   140006cd8:	jne    0x140006d24
   140006cda:	mov    rcx,QWORD PTR [rip+0x5a67]        # 0x14000c748
   140006ce1:	lea    rdx,[rip+0x2520]        # 0x140009208
   140006ce8:	call   QWORD PTR [rip+0x1352]        # 0x140008040
   140006cee:	mov    rbx,QWORD PTR [rip+0x5a4b]        # 0x14000c740
   140006cf5:	mov    rdi,rax
   140006cf8:	mov    QWORD PTR [rip+0x5bb1],rax        # 0x14000c8b0
   140006cff:	test   rbx,rbx
   140006d02:	jne    0x140006d24
   140006d04:	test   rax,rax
   140006d07:	jne    0x140006d11
   140006d09:	call   QWORD PTR [rip+0x1449]        # 0x140008158
   140006d0f:	jmp    0x140006d3b
   140006d11:	mov    rcx,rdi
   140006d14:	call   QWORD PTR [rip+0x1886]        # 0x1400085a0
   140006d1a:	mov    rdx,rsi
   140006d1d:	mov    rcx,rbp
   140006d20:	call   rdi
   140006d22:	jmp    0x140006d3b
   140006d24:	mov    rcx,rbx
   140006d27:	call   QWORD PTR [rip+0x1873]        # 0x1400085a0
   140006d2d:	xor    r9d,r9d
   140006d30:	xor    r8d,r8d
   140006d33:	mov    rdx,rsi
   140006d36:	mov    rcx,rbp
   140006d39:	call   rbx
   140006d3b:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d40:	mov    rbp,QWORD PTR [rsp+0x38]
   140006d45:	mov    rsi,QWORD PTR [rsp+0x40]
   140006d4a:	add    rsp,0x20
   140006d4e:	pop    rdi
   140006d4f:	ret    
   140006d50:	int3   
   140006d51:	int3   
   140006d52:	int3   
   140006d53:	int3   
   140006d54:	int3   
   140006d55:	int3   
   140006d56:	int3   
   140006d57:	int3   
   140006d58:	mov    QWORD PTR [rsp+0x8],rbx
   140006d5d:	push   rdi
   140006d5e:	sub    rsp,0x30
   140006d62:	mov    rbx,QWORD PTR [rip+0x5b3f]        # 0x14000c8a8
   140006d69:	mov    rdi,rdx
   140006d6c:	test   rbx,rbx
   140006d6f:	jne    0x140006da5
   140006d71:	call   0x140006aec
   140006d76:	test   eax,eax
   140006d78:	jne    0x140006dcd
   140006d7a:	mov    rcx,QWORD PTR [rip+0x59c7]        # 0x14000c748
   140006d81:	lea    rdx,[rip+0x2490]        # 0x140009218
   140006d88:	call   QWORD PTR [rip+0x12b2]        # 0x140008040
   140006d8e:	mov    QWORD PTR [rip+0x5b13],rax        # 0x14000c8a8
   140006d95:	mov    rbx,rax
   140006d98:	test   rax,rax
   140006d9b:	jne    0x140006da5
   140006d9d:	call   QWORD PTR [rip+0x13b5]        # 0x140008158
   140006da3:	jmp    0x140006dcd
   140006da5:	mov    rcx,rbx
   140006da8:	call   QWORD PTR [rip+0x17f2]        # 0x1400085a0
   140006dae:	mov    rax,QWORD PTR [rsp+0x60]
   140006db3:	mov    r9d,0x2000000
   140006db9:	xor    r8d,r8d
   140006dbc:	mov    QWORD PTR [rsp+0x20],rax
   140006dc1:	mov    rdx,rdi
   140006dc4:	mov    rcx,0xffffffff80000002
   140006dcb:	call   rbx
   140006dcd:	mov    rbx,QWORD PTR [rsp+0x40]
   140006dd2:	add    rsp,0x30
   140006dd6:	pop    rdi
   140006dd7:	ret    
   140006dd8:	int3   
   140006dd9:	int3   
   140006dda:	int3   
   140006ddb:	int3   
   140006ddc:	int3   
   140006ddd:	int3   
   140006dde:	int3   
   140006ddf:	int3   
   140006de0:	mov    QWORD PTR [rsp+0x8],rbx
   140006de5:	mov    QWORD PTR [rsp+0x10],rsi
   140006dea:	push   rdi
   140006deb:	sub    rsp,0x30
   140006def:	mov    rbx,QWORD PTR [rip+0x5ac2]        # 0x14000c8b8
   140006df6:	mov    rdi,rdx
   140006df9:	mov    rsi,rcx
   140006dfc:	test   rbx,rbx
   140006dff:	jne    0x140006e35
   140006e01:	call   0x140006aec
   140006e06:	test   eax,eax
   140006e08:	jne    0x140006e61
   140006e0a:	mov    rcx,QWORD PTR [rip+0x5937]        # 0x14000c748
   140006e11:	lea    rdx,[rip+0x2410]        # 0x140009228
   140006e18:	call   QWORD PTR [rip+0x1222]        # 0x140008040
   140006e1e:	mov    QWORD PTR [rip+0x5a93],rax        # 0x14000c8b8
   140006e25:	mov    rbx,rax
   140006e28:	test   rax,rax
   140006e2b:	jne    0x140006e35
   140006e2d:	call   QWORD PTR [rip+0x1325]        # 0x140008158
   140006e33:	jmp    0x140006e61
   140006e35:	mov    rcx,rbx
   140006e38:	call   QWORD PTR [rip+0x1762]        # 0x1400085a0
   140006e3e:	mov    eax,DWORD PTR [rsp+0x68]
   140006e42:	mov    r9d,0x1
   140006e48:	mov    DWORD PTR [rsp+0x28],eax
   140006e4c:	xor    r8d,r8d
   140006e4f:	mov    rax,QWORD PTR [rsp+0x60]
   140006e54:	mov    rdx,rdi
   140006e57:	mov    rcx,rsi
   140006e5a:	mov    QWORD PTR [rsp+0x20],rax
   140006e5f:	call   rbx
   140006e61:	mov    rbx,QWORD PTR [rsp+0x40]
   140006e66:	mov    rsi,QWORD PTR [rsp+0x48]
   140006e6b:	add    rsp,0x30
   140006e6f:	pop    rdi
   140006e70:	ret    
   140006e71:	int3   
   140006e72:	int3   
   140006e73:	int3   
   140006e74:	int3   
   140006e75:	int3   
   140006e76:	int3   
   140006e77:	int3   
   140006e78:	int3   
   140006e79:	int3   
   140006e7a:	int3   
   140006e7b:	int3   
   140006e7c:	int3   
   140006e7d:	int3   
   140006e7e:	int3   
   140006e7f:	int3   
   140006e80:	sub    rsp,0x28
   140006e84:	mov    eax,0x5a4d
   140006e89:	cmp    WORD PTR [rip+0xffffffffffff9170],ax        # 0x140000000
   140006e90:	je     0x140006e96
   140006e92:	xor    eax,eax
   140006e94:	jmp    0x140006ee5
   140006e96:	movsxd rcx,DWORD PTR [rip+0xffffffffffff919f]        # 0x14000003c
   140006e9d:	lea    rax,[rip+0xffffffffffff915c]        # 0x140000000
   140006ea4:	add    rcx,rax
   140006ea7:	cmp    DWORD PTR [rcx],0x4550
   140006ead:	jne    0x140006e92
   140006eaf:	movzx  eax,WORD PTR [rcx+0x18]
   140006eb3:	cmp    eax,0x10b
   140006eb8:	je     0x140006ed4
   140006eba:	cmp    eax,0x20b
   140006ebf:	jne    0x140006e92
   140006ec1:	xor    eax,eax
   140006ec3:	cmp    DWORD PTR [rcx+0x84],0xe
   140006eca:	jbe    0x140006ee5
   140006ecc:	cmp    DWORD PTR [rcx+0xf8],eax
   140006ed2:	jmp    0x140006ee2
   140006ed4:	xor    eax,eax
   140006ed6:	cmp    DWORD PTR [rcx+0x74],0xe
   140006eda:	jbe    0x140006ee5
   140006edc:	cmp    DWORD PTR [rcx+0xe8],eax
   140006ee2:	setne  al
   140006ee5:	mov    ecx,0x2
   140006eea:	mov    DWORD PTR [rip+0x5240],eax        # 0x14000c130
   140006ef0:	call   0x140007438
   140006ef5:	mov    ecx,eax
   140006ef7:	call   QWORD PTR [rip+0x1473]        # 0x140008370
   140006efd:	mov    rcx,QWORD PTR [rip+0x1484]        # 0x140008388
   140006f04:	or     rax,0xffffffffffffffff
   140006f08:	mov    QWORD PTR [rip+0x59c1],rax        # 0x14000c8d0
   140006f0f:	mov    QWORD PTR [rip+0x59c2],rax        # 0x14000c8d8
   140006f16:	mov    eax,DWORD PTR [rip+0x5228]        # 0x14000c144
   140006f1c:	mov    DWORD PTR [rcx],eax
   140006f1e:	mov    rcx,QWORD PTR [rip+0x14b3]        # 0x1400083d8
   140006f25:	mov    eax,DWORD PTR [rip+0x520d]        # 0x14000c138
   140006f2b:	mov    DWORD PTR [rcx],eax
   140006f2d:	call   0x1400014e0
   140006f32:	cmp    DWORD PTR [rip+0x50c7],0x0        # 0x14000c000
   140006f39:	jne    0x140006f48
   140006f3b:	lea    rcx,[rip+0xffffffffffffa59e]        # 0x1400014e0
   140006f42:	call   QWORD PTR [rip+0x13f8]        # 0x140008340
   140006f48:	xor    eax,eax
   140006f4a:	add    rsp,0x28
   140006f4e:	ret    
   140006f4f:	int3   
   140006f50:	int3   
   140006f51:	int3   
   140006f52:	int3   
   140006f53:	int3   
   140006f54:	int3   
   140006f55:	int3   
   140006f56:	int3   
   140006f57:	int3   
   140006f58:	int3   
   140006f59:	int3   
   140006f5a:	int3   
   140006f5b:	int3   
   140006f5c:	int3   
   140006f5d:	int3   
   140006f5e:	int3   
   140006f5f:	int3   
   140006f60:	sub    rsp,0x38
   140006f64:	mov    eax,DWORD PTR [rip+0x51d6]        # 0x14000c140
   140006f6a:	lea    r8,[rip+0x51b7]        # 0x14000c128
   140006f71:	mov    r9d,DWORD PTR [rip+0x51c4]        # 0x14000c13c
   140006f78:	lea    rdx,[rip+0x51a1]        # 0x14000c120
   140006f7f:	mov    DWORD PTR [rip+0x51af],eax        # 0x14000c134
   140006f85:	lea    rcx,[rip+0x518c]        # 0x14000c118
   140006f8c:	lea    rax,[rip+0x51a1]        # 0x14000c134
   140006f93:	mov    QWORD PTR [rsp+0x20],rax
   140006f98:	call   QWORD PTR [rip+0x13da]        # 0x140008378
   140006f9e:	mov    DWORD PTR [rip+0x5178],eax        # 0x14000c11c
   140006fa4:	add    rsp,0x38
   140006fa8:	ret    
   140006fa9:	int3   
   140006faa:	int3   
   140006fab:	int3   
   140006fac:	int3   
   140006fad:	int3   
   140006fae:	int3   
   140006faf:	int3   
   140006fb0:	sub    rsp,0x28
   140006fb4:	call   0x140007574
   140006fb9:	add    rsp,0x28
   140006fbd:	jmp    0x140006fc8
   140006fc2:	int3   
   140006fc3:	int3   
   140006fc4:	int3   
   140006fc5:	int3   
   140006fc6:	int3   
   140006fc7:	int3   
   140006fc8:	mov    rax,rsp
   140006fcb:	mov    QWORD PTR [rax+0x8],rbx
   140006fcf:	mov    QWORD PTR [rax+0x10],rsi
   140006fd3:	mov    QWORD PTR [rax+0x18],rdi
   140006fd7:	push   r15
   140006fd9:	sub    rsp,0xb0
   140006fe0:	and    DWORD PTR [rsp+0x20],0x0
   140006fe5:	lea    rcx,[rax-0x78]
   140006fe9:	call   QWORD PTR [rip+0x1209]        # 0x1400081f8
   140006fef:	nop
   140006ff0:	mov    rax,QWORD PTR gs:0x30
   140006ff9:	mov    rbx,QWORD PTR [rax+0x8]
   140006ffd:	xor    esi,esi
   140006fff:	xor    eax,eax
   140007001:	lock cmpxchg QWORD PTR [rip+0x58b6],rbx        # 0x14000c8c0
   14000700a:	je     0x140007025
   14000700c:	cmp    rax,rbx
   14000700f:	jne    0x140007018
   140007011:	mov    esi,0x1
   140007016:	jmp    0x140007025
   140007018:	mov    ecx,0x3e8
   14000701d:	call   QWORD PTR [rip+0x1245]        # 0x140008268
   140007023:	jmp    0x140006fff
   140007025:	mov    eax,DWORD PTR [rip+0x589d]        # 0x14000c8c8
   14000702b:	cmp    eax,0x1
   14000702e:	jne    0x14000703a
   140007030:	lea    ecx,[rax+0x1e]
   140007033:	call   0x140007484
   140007038:	jmp    0x1400070ab
   14000703a:	mov    eax,DWORD PTR [rip+0x5888]        # 0x14000c8c8
   140007040:	test   eax,eax
   140007042:	jne    0x1400070a1
   140007044:	mov    DWORD PTR [rip+0x587a],0x1        # 0x14000c8c8
   14000704e:	lea    r15,[rip+0x15ab]        # 0x140008600
   140007055:	lea    rbx,[rip+0x158c]        # 0x1400085e8
   14000705c:	mov    QWORD PTR [rsp+0x38],rbx
   140007061:	mov    DWORD PTR [rsp+0x30],eax
   140007065:	cmp    rbx,r15
   140007068:	jae    0x140007093
   14000706a:	test   eax,eax
   14000706c:	jne    0x140007097
   14000706e:	mov    rdi,QWORD PTR [rbx]
   140007071:	test   rdi,rdi
   140007074:	je     0x140007088
   140007076:	mov    rcx,rdi
   140007079:	mov    rax,QWORD PTR [rip+0x1520]        # 0x1400085a0
   140007080:	call   rax
   140007082:	call   rdi
   140007084:	mov    DWORD PTR [rsp+0x30],eax
   140007088:	add    rbx,0x8
   14000708c:	mov    QWORD PTR [rsp+0x38],rbx
   140007091:	jmp    0x140007065
   140007093:	test   eax,eax
   140007095:	je     0x1400070ab
   140007097:	mov    eax,0xff
   14000709c:	jmp    0x140007204
   1400070a1:	mov    DWORD PTR [rip+0x5069],0x1        # 0x14000c114
   1400070ab:	mov    eax,DWORD PTR [rip+0x5817]        # 0x14000c8c8
   1400070b1:	cmp    eax,0x1
   1400070b4:	jne    0x1400070d3
   1400070b6:	lea    rdx,[rip+0x1523]        # 0x1400085e0
   1400070bd:	lea    rcx,[rip+0x14ec]        # 0x1400085b0
   1400070c4:	call   0x14000764a
   1400070c9:	mov    DWORD PTR [rip+0x57f5],0x2        # 0x14000c8c8
   1400070d3:	test   esi,esi
   1400070d5:	jne    0x1400070e0
   1400070d7:	xor    eax,eax
   1400070d9:	xchg   QWORD PTR [rip+0x57e0],rax        # 0x14000c8c0
   1400070e0:	cmp    QWORD PTR [rip+0x57f8],0x0        # 0x14000c8e0
   1400070e8:	je     0x140007118
   1400070ea:	lea    rcx,[rip+0x57ef]        # 0x14000c8e0
   1400070f1:	call   0x1400074e0
   1400070f6:	test   eax,eax
   1400070f8:	je     0x140007118
   1400070fa:	mov    rbx,QWORD PTR [rip+0x57df]        # 0x14000c8e0
   140007101:	mov    rcx,rbx
   140007104:	mov    rax,QWORD PTR [rip+0x1495]        # 0x1400085a0
   14000710b:	call   rax
   14000710d:	xor    r8d,r8d
   140007110:	lea    edx,[r8+0x2]
   140007114:	xor    ecx,ecx
   140007116:	call   rbx
   140007118:	mov    rax,QWORD PTR [rip+0x1289]        # 0x1400083a8
   14000711f:	mov    rbx,QWORD PTR [rax]
   140007122:	mov    QWORD PTR [rsp+0x28],rbx
   140007127:	mov    edi,DWORD PTR [rsp+0x20]
   14000712b:	cmp    BYTE PTR [rbx],0x20
   14000712e:	ja     0x1400071a3
   140007130:	cmp    BYTE PTR [rbx],0x0
   140007133:	je     0x140007139
   140007135:	test   edi,edi
   140007137:	jne    0x1400071a3
   140007139:	mov    al,BYTE PTR [rbx]
   14000713b:	dec    al
   14000713d:	cmp    al,0x1f
   14000713f:	ja     0x14000714b
   140007141:	inc    rbx
   140007144:	mov    QWORD PTR [rsp+0x28],rbx
   140007149:	jmp    0x140007139
   14000714b:	mov    ecx,DWORD PTR [rsp+0x7c]
   14000714f:	movzx  eax,WORD PTR [rsp+0x80]
   140007157:	mov    r9d,0xa
   14000715d:	and    cl,0x1
   140007160:	cmovne r9d,eax
   140007164:	mov    r8,rbx
   140007167:	xor    edx,edx
   140007169:	lea    rcx,[rip+0xffffffffffff8e90]        # 0x140000000
   140007170:	call   0x140006974
   140007175:	mov    DWORD PTR [rip+0x4f95],eax        # 0x14000c110
   14000717b:	cmp    DWORD PTR [rip+0x4fae],0x0        # 0x14000c130
   140007182:	jne    0x14000718c
   140007184:	mov    ecx,eax
   140007186:	call   QWORD PTR [rip+0x11d4]        # 0x140008360
   14000718c:	cmp    DWORD PTR [rip+0x4f81],0x0        # 0x14000c114
   140007193:	jne    0x1400071a1
   140007195:	call   QWORD PTR [rip+0x11b5]        # 0x140008350
   14000719b:	mov    eax,DWORD PTR [rip+0x4f6f]        # 0x14000c110
   1400071a1:	jmp    0x140007204
   1400071a3:	cmp    BYTE PTR [rbx],0x22
   1400071a6:	jne    0x1400071b5
   1400071a8:	xor    eax,eax
   1400071aa:	test   edi,edi
   1400071ac:	sete   al
   1400071af:	mov    edi,eax
   1400071b1:	mov    DWORD PTR [rsp+0x20],eax
   1400071b5:	movzx  ecx,BYTE PTR [rbx]
   1400071b8:	call   QWORD PTR [rip+0x118a]        # 0x140008348
   1400071be:	test   eax,eax
   1400071c0:	je     0x1400071ca
   1400071c2:	inc    rbx
   1400071c5:	mov    QWORD PTR [rsp+0x28],rbx
   1400071ca:	inc    rbx
   1400071cd:	mov    QWORD PTR [rsp+0x28],rbx
   1400071d2:	jmp    0x14000712b
   1400071d7:	mov    DWORD PTR [rip+0x4f33],eax        # 0x14000c110
   1400071dd:	cmp    DWORD PTR [rip+0x4f4c],0x0        # 0x14000c130
   1400071e4:	jne    0x1400071ef
   1400071e6:	mov    ecx,eax
   1400071e8:	call   QWORD PTR [rip+0x11d2]        # 0x1400083c0
   1400071ee:	int3   
   1400071ef:	cmp    DWORD PTR [rip+0x4f1e],0x0        # 0x14000c114
   1400071f6:	jne    0x140007204
   1400071f8:	call   QWORD PTR [rip+0x1152]        # 0x140008350
   1400071fe:	mov    eax,DWORD PTR [rip+0x4f0c]        # 0x14000c110
   140007204:	lea    r11,[rsp+0xb0]
   14000720c:	mov    rbx,QWORD PTR [r11+0x10]
   140007210:	mov    rsi,QWORD PTR [r11+0x18]
   140007214:	mov    rdi,QWORD PTR [r11+0x20]
   140007218:	mov    rsp,r11
   14000721b:	pop    r15
   14000721d:	ret    
   14000721e:	int3   
   14000721f:	int3   
   140007220:	int3   
   140007221:	int3   
   140007222:	int3   
   140007223:	int3   
   140007224:	int3   
   140007225:	int3   
   140007226:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007230:	cmp    rcx,QWORD PTR [rip+0x4dd1]        # 0x14000c008
   140007237:	jne    0x140007249
   140007239:	rol    rcx,0x10
   14000723d:	test   cx,0xffff
   140007242:	jne    0x140007245
   140007244:	ret    
   140007245:	ror    rcx,0x10
   140007249:	jmp    0x1400076a0
   14000724e:	int3   
   14000724f:	int3   
   140007250:	int3   
   140007251:	int3   
   140007252:	int3   
   140007253:	int3   
   140007254:	mov    QWORD PTR [rsp+0x8],rbx
   140007259:	push   rdi
   14000725a:	sub    rsp,0x20
   14000725e:	mov    rdi,rcx
   140007261:	mov    rax,QWORD PTR [rip+0x5670]        # 0x14000c8d8
   140007268:	mov    QWORD PTR [rsp+0x38],rax
   14000726d:	cmp    rax,0xffffffffffffffff
   140007271:	jne    0x14000728a
   140007273:	mov    rbx,QWORD PTR [rip+0x111e]        # 0x140008398
   14000727a:	mov    rcx,rbx
   14000727d:	call   QWORD PTR [rip+0x131d]        # 0x1400085a0
   140007283:	mov    rcx,rdi
   140007286:	call   rbx
   140007288:	jmp    0x1400072e7
   14000728a:	mov    ecx,0x8
   14000728f:	call   0x140007818
   140007294:	nop
   140007295:	mov    rax,QWORD PTR [rip+0x563c]        # 0x14000c8d8
   14000729c:	mov    QWORD PTR [rsp+0x38],rax
   1400072a1:	mov    rax,QWORD PTR [rip+0x5628]        # 0x14000c8d0
   1400072a8:	mov    QWORD PTR [rsp+0x40],rax
   1400072ad:	lea    r8,[rsp+0x40]
   1400072b2:	lea    rdx,[rsp+0x38]
   1400072b7:	mov    rcx,rdi
   1400072ba:	call   0x140007830
   1400072bf:	mov    rbx,rax
   1400072c2:	mov    rdx,QWORD PTR [rsp+0x38]
   1400072c7:	mov    QWORD PTR [rip+0x560a],rdx        # 0x14000c8d8
   1400072ce:	mov    rdx,QWORD PTR [rsp+0x40]
   1400072d3:	mov    QWORD PTR [rip+0x55f6],rdx        # 0x14000c8d0
   1400072da:	mov    ecx,0x8
   1400072df:	call   0x140007824
   1400072e4:	mov    rax,rbx
   1400072e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072ec:	add    rsp,0x20
   1400072f0:	pop    rdi
   1400072f1:	ret    
   1400072f2:	int3   
   1400072f3:	int3   
   1400072f4:	int3   
   1400072f5:	int3   
   1400072f6:	int3   
   1400072f7:	int3   
   1400072f8:	sub    rsp,0x28
   1400072fc:	call   0x140007254
   140007301:	neg    rax
   140007304:	sbb    eax,eax
   140007306:	neg    eax
   140007308:	dec    eax
   14000730a:	add    rsp,0x28
   14000730e:	ret    
   14000730f:	int3   
   140007310:	int3   
   140007311:	int3   
   140007312:	int3   
   140007313:	int3   
   140007314:	int3   
   140007315:	int3   
   140007316:	int3   
   140007317:	int3   
   140007318:	int3   
   140007319:	int3   
   14000731a:	int3   
   14000731b:	int3   
   14000731c:	int3   
   14000731d:	int3   
   14000731e:	int3   
   14000731f:	int3   
   140007320:	jmp    QWORD PTR [rip+0x10ea]        # 0x140008410
   140007326:	int3   
   140007327:	int3   
   140007328:	int3   
   140007329:	int3   
   14000732a:	int3   
   14000732b:	int3   
   14000732c:	int3   
   14000732d:	int3   
   14000732e:	int3   
   14000732f:	int3   
   140007330:	mov    QWORD PTR [rsp+0x8],rbx
   140007335:	push   rdi
   140007336:	sub    rsp,0x20
   14000733a:	mov    ebx,edx
   14000733c:	mov    rdi,rcx
   14000733f:	call   QWORD PTR [rip+0x105b]        # 0x1400083a0
   140007345:	test   bl,0x1
   140007348:	je     0x140007352
   14000734a:	mov    rcx,rdi
   14000734d:	call   0x140004520
   140007352:	mov    rax,rdi
   140007355:	mov    rbx,QWORD PTR [rsp+0x30]
   14000735a:	add    rsp,0x20
   14000735e:	pop    rdi
   14000735f:	ret    
   140007360:	int3   
   140007361:	int3   
   140007362:	int3   
   140007363:	int3   
   140007364:	int3   
   140007365:	int3   
   140007366:	int3   
   140007367:	int3   
   140007368:	int3   
   140007369:	int3   
   14000736a:	int3   
   14000736b:	int3   
   14000736c:	int3   
   14000736d:	int3   
   14000736e:	int3   
   14000736f:	int3   
   140007370:	sub    rsp,0x28
   140007374:	mov    rax,QWORD PTR [rcx]
   140007377:	cmp    DWORD PTR [rax],0xe06d7363
   14000737d:	jne    0x1400073a2
   14000737f:	cmp    DWORD PTR [rax+0x18],0x4
   140007383:	jne    0x1400073a2
   140007385:	mov    ecx,DWORD PTR [rax+0x20]
   140007388:	lea    eax,[rcx-0x19930520]
   14000738e:	cmp    eax,0x2
   140007391:	jbe    0x14000739b
   140007393:	cmp    ecx,0x1994000
   140007399:	jne    0x1400073a2
   14000739b:	call   QWORD PTR [rip+0x103f]        # 0x1400083e0
   1400073a1:	int3   
   1400073a2:	xor    eax,eax
   1400073a4:	add    rsp,0x28
   1400073a8:	ret    
   1400073a9:	int3   
   1400073aa:	int3   
   1400073ab:	int3   
   1400073ac:	int3   
   1400073ad:	int3   
   1400073ae:	int3   
   1400073af:	int3   
   1400073b0:	sub    rsp,0x28
   1400073b4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140007370
   1400073bb:	call   QWORD PTR [rip+0xd87]        # 0x140008148
   1400073c1:	xor    eax,eax
   1400073c3:	add    rsp,0x28
   1400073c7:	ret    
   1400073c8:	int3   
   1400073c9:	int3   
   1400073ca:	int3   
   1400073cb:	int3   
   1400073cc:	int3   
   1400073cd:	int3   
   1400073ce:	jmp    QWORD PTR [rip+0x102c]        # 0x140008400
   1400073d4:	int3   
   1400073d5:	int3   
   1400073d6:	int3   
   1400073d7:	int3   
   1400073d8:	int3   
   1400073d9:	int3   
   1400073da:	int3   
   1400073db:	int3   
   1400073dc:	sub    rsp,0x18
   1400073e0:	xor    edx,edx
   1400073e2:	lea    rax,[rcx-0x1]
   1400073e6:	cmp    rax,0xfffffffffffffffd
   1400073ea:	ja     0x140007428
   1400073ec:	mov    eax,0x5a4d
   1400073f1:	cmp    WORD PTR [rcx],ax
   1400073f4:	jne    0x140007420
   1400073f6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400073f9:	jl     0x140007420
   1400073fb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140007402:	jae    0x140007420
   140007404:	movsxd rax,DWORD PTR [rcx+0x3c]
   140007408:	add    rax,rcx
   14000740b:	mov    QWORD PTR [rsp],rax
   14000740f:	cmp    DWORD PTR [rax],0x4550
   140007415:	cmovne rax,rdx
   140007419:	mov    rdx,rax
   14000741c:	mov    QWORD PTR [rsp],rax
   140007420:	jmp    0x140007428
   140007422:	xor    edx,edx
   140007424:	mov    QWORD PTR [rsp],rdx
   140007428:	mov    rax,rdx
   14000742b:	add    rsp,0x18
   14000742f:	ret    
   140007430:	int3   
   140007431:	int3   
   140007432:	int3   
   140007433:	int3   
   140007434:	int3   
   140007435:	int3   
   140007436:	int3   
   140007437:	int3   
   140007438:	rex push rbx
   14000743a:	sub    rsp,0x20
   14000743e:	mov    ebx,ecx
   140007440:	xor    ecx,ecx
   140007442:	call   QWORD PTR [rip+0xd68]        # 0x1400081b0
   140007448:	test   rax,rax
   14000744b:	je     0x140007475
   14000744d:	mov    rcx,rax
   140007450:	call   0x1400073dc
   140007455:	test   rax,rax
   140007458:	je     0x140007475
   14000745a:	mov    ecx,0x2
   14000745f:	cmp    WORD PTR [rax+0x5c],cx
   140007463:	jne    0x140007469
   140007465:	mov    eax,ecx
   140007467:	jmp    0x140007477
   140007469:	cmp    WORD PTR [rax+0x5c],0x3
   14000746e:	mov    eax,0x1
   140007473:	je     0x140007477
   140007475:	mov    eax,ebx
   140007477:	add    rsp,0x20
   14000747b:	pop    rbx
   14000747c:	ret    
   14000747d:	int3   
   14000747e:	int3   
   14000747f:	int3   
   140007480:	int3   
   140007481:	int3   
   140007482:	int3   
   140007483:	int3   
   140007484:	jmp    QWORD PTR [rip+0xf6e]        # 0x1400083f8
   14000748a:	int3   
   14000748b:	int3   
   14000748c:	int3   
   14000748d:	int3   
   14000748e:	int3   
   14000748f:	int3   
   140007490:	movsxd r8,DWORD PTR [rcx+0x3c]
   140007494:	xor    r9d,r9d
   140007497:	add    r8,rcx
   14000749a:	mov    r10,rdx
   14000749d:	movzx  eax,WORD PTR [r8+0x14]
   1400074a2:	movzx  r11d,WORD PTR [r8+0x6]
   1400074a7:	add    rax,0x18
   1400074ab:	add    rax,r8
   1400074ae:	test   r11d,r11d
   1400074b1:	je     0x1400074d1
   1400074b3:	mov    edx,DWORD PTR [rax+0xc]
   1400074b6:	cmp    r10,rdx
   1400074b9:	jb     0x1400074c5
   1400074bb:	mov    ecx,DWORD PTR [rax+0x8]
   1400074be:	add    ecx,edx
   1400074c0:	cmp    r10,rcx
   1400074c3:	jb     0x1400074d3
   1400074c5:	inc    r9d
   1400074c8:	add    rax,0x28
   1400074cc:	cmp    r9d,r11d
   1400074cf:	jb     0x1400074b3
   1400074d1:	xor    eax,eax
   1400074d3:	ret    
   1400074d4:	int3   
   1400074d5:	int3   
   1400074d6:	int3   
   1400074d7:	int3   
   1400074d8:	int3   
   1400074d9:	int3   
   1400074da:	int3   
   1400074db:	int3   
   1400074dc:	int3   
   1400074dd:	int3   
   1400074de:	int3   
   1400074df:	int3   
   1400074e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400074e5:	push   rdi
   1400074e6:	sub    rsp,0x20
   1400074ea:	mov    rbx,rcx
   1400074ed:	lea    rdi,[rip+0xffffffffffff8b0c]        # 0x140000000
   1400074f4:	mov    rcx,rdi
   1400074f7:	call   0x140007540
   1400074fc:	test   eax,eax
   1400074fe:	je     0x140007522
   140007500:	sub    rbx,rdi
   140007503:	mov    rdx,rbx
   140007506:	mov    rcx,rdi
   140007509:	call   0x140007490
   14000750e:	test   rax,rax
   140007511:	je     0x140007522
   140007513:	mov    eax,DWORD PTR [rax+0x24]
   140007516:	shr    eax,0x1f
   140007519:	not    eax
   14000751b:	and    eax,0x1
   14000751e:	jmp    0x140007522
   140007520:	xor    eax,eax
   140007522:	mov    rbx,QWORD PTR [rsp+0x30]
   140007527:	add    rsp,0x20
   14000752b:	pop    rdi
   14000752c:	ret    
   14000752d:	int3   
   14000752e:	int3   
   14000752f:	int3   
   140007530:	int3   
   140007531:	int3   
   140007532:	int3   
   140007533:	int3   
   140007534:	int3   
   140007535:	int3   
   140007536:	int3   
   140007537:	int3   
   140007538:	int3   
   140007539:	int3   
   14000753a:	int3   
   14000753b:	int3   
   14000753c:	int3   
   14000753d:	int3   
   14000753e:	int3   
   14000753f:	int3   
   140007540:	mov    rax,rcx
   140007543:	mov    ecx,0x5a4d
   140007548:	cmp    WORD PTR [rax],cx
   14000754b:	je     0x140007550
   14000754d:	xor    eax,eax
   14000754f:	ret    
   140007550:	movsxd rcx,DWORD PTR [rax+0x3c]
   140007554:	add    rcx,rax
   140007557:	xor    eax,eax
   140007559:	cmp    DWORD PTR [rcx],0x4550
   14000755f:	jne    0x14000756d
   140007561:	mov    edx,0x20b
   140007566:	cmp    WORD PTR [rcx+0x18],dx
   14000756a:	sete   al
   14000756d:	ret    
   14000756e:	int3   
   14000756f:	int3   
   140007570:	int3   
   140007571:	int3   
   140007572:	int3   
   140007573:	int3   
   140007574:	mov    QWORD PTR [rsp+0x20],rbx
   140007579:	push   rbp
   14000757a:	mov    rbp,rsp
   14000757d:	sub    rsp,0x20
   140007581:	and    QWORD PTR [rbp+0x18],0x0
   140007586:	movabs rbx,0x2b992ddfa232
   140007590:	mov    rax,QWORD PTR [rip+0x4a71]        # 0x14000c008
   140007597:	cmp    rax,rbx
   14000759a:	jne    0x14000762f
   1400075a0:	lea    rcx,[rbp+0x18]
   1400075a4:	call   QWORD PTR [rip+0xcfe]        # 0x1400082a8
   1400075aa:	mov    rax,QWORD PTR [rbp+0x18]
   1400075ae:	mov    QWORD PTR [rbp+0x10],rax
   1400075b2:	call   QWORD PTR [rip+0xc38]        # 0x1400081f0
   1400075b8:	mov    eax,eax
   1400075ba:	xor    QWORD PTR [rbp+0x10],rax
   1400075be:	call   QWORD PTR [rip+0xc1c]        # 0x1400081e0
   1400075c4:	mov    eax,eax
   1400075c6:	xor    QWORD PTR [rbp+0x10],rax
   1400075ca:	call   QWORD PTR [rip+0xcd0]        # 0x1400082a0
   1400075d0:	mov    eax,eax
   1400075d2:	shl    rax,0x18
   1400075d6:	xor    QWORD PTR [rbp+0x10],rax
   1400075da:	call   QWORD PTR [rip+0xcc0]        # 0x1400082a0
   1400075e0:	mov    eax,eax
   1400075e2:	lea    rcx,[rbp+0x10]
   1400075e6:	xor    rax,QWORD PTR [rbp+0x10]
   1400075ea:	xor    rax,rcx
   1400075ed:	lea    rcx,[rbp+0x20]
   1400075f1:	mov    QWORD PTR [rbp+0x10],rax
   1400075f5:	call   QWORD PTR [rip+0xc15]        # 0x140008210
   1400075fb:	mov    eax,DWORD PTR [rbp+0x20]
   1400075fe:	movabs rcx,0xffffffffffff
   140007608:	shl    rax,0x20
   14000760c:	xor    rax,QWORD PTR [rbp+0x20]
   140007610:	xor    rax,QWORD PTR [rbp+0x10]
   140007614:	and    rax,rcx
   140007617:	movabs rcx,0x2b992ddfa233
   140007621:	cmp    rax,rbx
   140007624:	cmove  rax,rcx
   140007628:	mov    QWORD PTR [rip+0x49d9],rax        # 0x14000c008
   14000762f:	mov    rbx,QWORD PTR [rsp+0x48]
   140007634:	not    rax
   140007637:	mov    QWORD PTR [rip+0x49d2],rax        # 0x14000c010
   14000763e:	add    rsp,0x20
   140007642:	pop    rbp
   140007643:	ret    
   140007644:	int3   
   140007645:	int3   
   140007646:	int3   
   140007647:	int3   
   140007648:	int3   
   140007649:	int3   
   14000764a:	jmp    QWORD PTR [rip+0xce8]        # 0x140008338
   140007650:	int3   
   140007651:	int3   
   140007652:	int3   
   140007653:	int3   
   140007654:	int3   
   140007655:	int3   
   140007656:	jmp    QWORD PTR [rip+0xcfc]        # 0x140008358
   14000765c:	int3   
   14000765d:	int3   
   14000765e:	int3   
   14000765f:	int3   
   140007660:	int3   
   140007661:	int3   
   140007662:	int3   
   140007663:	int3   
   140007664:	rex push rbx
   140007666:	sub    rsp,0x20
   14000766a:	mov    rbx,rcx
   14000766d:	xor    ecx,ecx
   14000766f:	call   QWORD PTR [rip+0xad3]        # 0x140008148
   140007675:	mov    rcx,rbx
   140007678:	call   QWORD PTR [rip+0xad2]        # 0x140008150
   14000767e:	call   QWORD PTR [rip+0xb54]        # 0x1400081d8
   140007684:	mov    rcx,rax
   140007687:	mov    edx,0xc0000409
   14000768c:	add    rsp,0x20
   140007690:	pop    rbx
   140007691:	rex.W jmp QWORD PTR [rip+0xb50]        # 0x1400081e8
   140007698:	int3   
   140007699:	int3   
   14000769a:	int3   
   14000769b:	int3   
   14000769c:	int3   
   14000769d:	int3   
   14000769e:	int3   
   14000769f:	int3   
   1400076a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400076a5:	sub    rsp,0x88
   1400076ac:	lea    rcx,[rip+0x4b3d]        # 0x14000c1f0
   1400076b3:	call   QWORD PTR [rip+0xb6f]        # 0x140008228
   1400076b9:	mov    rax,QWORD PTR [rip+0x4c28]        # 0x14000c2e8
   1400076c0:	mov    QWORD PTR [rsp+0x48],rax
   1400076c5:	xor    r8d,r8d
   1400076c8:	lea    rdx,[rsp+0x50]
   1400076cd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400076d2:	call   QWORD PTR [rip+0xb58]        # 0x140008230
   1400076d8:	mov    QWORD PTR [rsp+0x40],rax
   1400076dd:	cmp    QWORD PTR [rsp+0x40],0x0
   1400076e3:	je     0x140007727
   1400076e5:	mov    QWORD PTR [rsp+0x38],0x0
   1400076ee:	lea    rax,[rsp+0x58]
   1400076f3:	mov    QWORD PTR [rsp+0x30],rax
   1400076f8:	lea    rax,[rsp+0x60]
   1400076fd:	mov    QWORD PTR [rsp+0x28],rax
   140007702:	lea    rax,[rip+0x4ae7]        # 0x14000c1f0
   140007709:	mov    QWORD PTR [rsp+0x20],rax
   14000770e:	mov    r9,QWORD PTR [rsp+0x40]
   140007713:	mov    r8,QWORD PTR [rsp+0x48]
   140007718:	mov    rdx,QWORD PTR [rsp+0x50]
   14000771d:	xor    ecx,ecx
   14000771f:	call   QWORD PTR [rip+0xafb]        # 0x140008220
   140007725:	jmp    0x14000774a
   140007727:	mov    rax,QWORD PTR [rip+0x4b5a]        # 0x14000c288
   14000772e:	mov    rax,QWORD PTR [rax]
   140007731:	mov    QWORD PTR [rip+0x4bb0],rax        # 0x14000c2e8
   140007738:	mov    rax,QWORD PTR [rip+0x4b49]        # 0x14000c288
   14000773f:	add    rax,0x8
   140007743:	mov    QWORD PTR [rip+0x4b3e],rax        # 0x14000c288
   14000774a:	mov    rax,QWORD PTR [rip+0x4b97]        # 0x14000c2e8
   140007751:	mov    QWORD PTR [rip+0x4a08],rax        # 0x14000c160
   140007758:	mov    rax,QWORD PTR [rsp+0x90]
   140007760:	mov    QWORD PTR [rip+0x4b09],rax        # 0x14000c270
   140007767:	mov    DWORD PTR [rip+0x49df],0xc0000409        # 0x14000c150
   140007771:	mov    DWORD PTR [rip+0x49d9],0x1        # 0x14000c154
   14000777b:	mov    DWORD PTR [rip+0x49e3],0x3        # 0x14000c168
   140007785:	mov    eax,0x8
   14000778a:	imul   rax,rax,0x0
   14000778e:	lea    rcx,[rip+0x49db]        # 0x14000c170
   140007795:	mov    QWORD PTR [rcx+rax*1],0x2
   14000779d:	mov    eax,0x8
   1400077a2:	imul   rax,rax,0x1
   1400077a6:	lea    rcx,[rip+0x49c3]        # 0x14000c170
   1400077ad:	mov    rdx,QWORD PTR [rip+0x4854]        # 0x14000c008
   1400077b4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400077b8:	mov    eax,0x8
   1400077bd:	imul   rax,rax,0x2
   1400077c1:	lea    rcx,[rip+0x49a8]        # 0x14000c170
   1400077c8:	mov    rdx,QWORD PTR [rip+0x4841]        # 0x14000c010
   1400077cf:	mov    QWORD PTR [rcx+rax*1],rdx
   1400077d3:	mov    eax,0x8
   1400077d8:	imul   rax,rax,0x0
   1400077dc:	mov    rcx,QWORD PTR [rip+0x4825]        # 0x14000c008
   1400077e3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400077e8:	mov    eax,0x8
   1400077ed:	imul   rax,rax,0x1
   1400077f1:	mov    rcx,QWORD PTR [rip+0x4818]        # 0x14000c010
   1400077f8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400077fd:	lea    rcx,[rip+0xf54]        # 0x140008758
   140007804:	call   0x140007664
   140007809:	add    rsp,0x88
   140007810:	ret    
   140007811:	int3   
   140007812:	int3   
   140007813:	int3   
   140007814:	int3   
   140007815:	int3   
   140007816:	int3   
   140007817:	int3   
   140007818:	jmp    QWORD PTR [rip+0xb72]        # 0x140008390
   14000781e:	int3   
   14000781f:	int3   
   140007820:	int3   
   140007821:	int3   
   140007822:	int3   
   140007823:	int3   
   140007824:	jmp    QWORD PTR [rip+0xb9e]        # 0x1400083c8
   14000782a:	int3   
   14000782b:	int3   
   14000782c:	int3   
   14000782d:	int3   
   14000782e:	int3   
   14000782f:	int3   
   140007830:	jmp    QWORD PTR [rip+0xb32]        # 0x140008368
   140007836:	int3   
   140007837:	int3   
   140007838:	int3   
   140007839:	int3   
   14000783a:	int3   
   14000783b:	int3   
   14000783c:	int3   
   14000783d:	int3   
   14000783e:	int3   
   14000783f:	int3   
   140007840:	int3   
   140007841:	int3   
   140007842:	int3   
   140007843:	int3   
   140007844:	int3   
   140007845:	int3   
   140007846:	int3   
   140007847:	int3   
   140007848:	int3   
   140007849:	int3   
   14000784a:	int3   
   14000784b:	int3   
   14000784c:	int3   
   14000784d:	int3   
   14000784e:	int3   
   14000784f:	int3   
   140007850:	jmp    QWORD PTR [rip+0xce2]        # 0x140008538
   140007856:	int3   
   140007857:	int3   
   140007858:	int3   
   140007859:	int3   
   14000785a:	int3   
   14000785b:	int3   
   14000785c:	int3   
   14000785d:	int3   
   14000785e:	int3   
   14000785f:	int3   
   140007860:	jmp    QWORD PTR [rip+0xcca]        # 0x140008530
   140007866:	int3   
   140007867:	int3   
   140007868:	int3   
   140007869:	int3   
   14000786a:	int3   
   14000786b:	int3   
   14000786c:	int3   
   14000786d:	int3   
   14000786e:	int3   
   14000786f:	int3   
   140007870:	jmp    QWORD PTR [rip+0xcb2]        # 0x140008528
   140007876:	int3   
   140007877:	int3   
   140007878:	int3   
   140007879:	int3   
   14000787a:	int3   
   14000787b:	int3   
   14000787c:	int3   
   14000787d:	int3   
   14000787e:	int3   
   14000787f:	int3   
   140007880:	jmp    QWORD PTR [rip+0xc9a]        # 0x140008520
   140007886:	int3   
   140007887:	int3   
   140007888:	int3   
   140007889:	int3   
   14000788a:	int3   
   14000788b:	int3   
   14000788c:	int3   
   14000788d:	int3   
   14000788e:	int3   
   14000788f:	int3   
   140007890:	jmp    QWORD PTR [rip+0xc82]        # 0x140008518
   140007896:	int3   
   140007897:	int3   
   140007898:	int3   
   140007899:	int3   
   14000789a:	int3   
   14000789b:	int3   
   14000789c:	int3   
   14000789d:	int3   
   14000789e:	int3   
   14000789f:	int3   
   1400078a0:	jmp    QWORD PTR [rip+0xc6a]        # 0x140008510
   1400078a6:	int3   
   1400078a7:	int3   
   1400078a8:	int3   
   1400078a9:	int3   
   1400078aa:	int3   
   1400078ab:	int3   
   1400078ac:	int3   
   1400078ad:	int3   
   1400078ae:	int3   
   1400078af:	int3   
   1400078b0:	jmp    QWORD PTR [rip+0xc52]        # 0x140008508
   1400078b6:	int3   
   1400078b7:	int3   
   1400078b8:	int3   
   1400078b9:	int3   
   1400078ba:	int3   
   1400078bb:	int3   
   1400078bc:	int3   
   1400078bd:	int3   
   1400078be:	int3   
   1400078bf:	int3   
   1400078c0:	jmp    QWORD PTR [rip+0xc32]        # 0x1400084f8
   1400078c6:	int3   
   1400078c7:	int3   
   1400078c8:	int3   
   1400078c9:	int3   
   1400078ca:	int3   
   1400078cb:	int3   
   1400078cc:	sub    rsp,0x28
   1400078d0:	mov    ecx,DWORD PTR [rip+0x4dea]        # 0x14000c6c0
   1400078d6:	cmp    ecx,0x1
   1400078d9:	jne    0x1400078df
   1400078db:	mov    al,cl
   1400078dd:	jmp    0x140007915
   1400078df:	cmp    ecx,0x2
   1400078e2:	jne    0x1400078e8
   1400078e4:	xor    al,al
   1400078e6:	jmp    0x140007915
   1400078e8:	lea    rdx,[rsp+0x30]
   1400078ed:	mov    BYTE PTR [rsp+0x30],0x0
   1400078f2:	lea    rcx,[rip+0xe6f]        # 0x140008768
   1400078f9:	call   0x140007920
   1400078fe:	test   eax,eax
   140007900:	js     0x1400078e4
   140007902:	mov    al,BYTE PTR [rsp+0x30]
   140007906:	mov    cl,al
   140007908:	neg    cl
   14000790a:	sbb    edx,edx
   14000790c:	add    edx,0x2
   14000790f:	mov    DWORD PTR [rip+0x4dab],edx        # 0x14000c6c0
   140007915:	add    rsp,0x28
   140007919:	ret    
   14000791a:	int3   
   14000791b:	int3   
   14000791c:	int3   
   14000791d:	int3   
   14000791e:	int3   
   14000791f:	int3   
   140007920:	jmp    QWORD PTR [rip+0x7c2]        # 0x1400080e8
   140007926:	int3   
   140007927:	int3   
   140007928:	int3   
   140007929:	int3   
   14000792a:	int3   
   14000792b:	int3   
   14000792c:	jmp    QWORD PTR [rip+0xa9e]        # 0x1400083d0
   140007932:	int3   
   140007933:	int3   
   140007934:	int3   
   140007935:	int3   
   140007936:	int3   
   140007937:	int3   
   140007938:	jmp    QWORD PTR [rip+0xa72]        # 0x1400083b0
   14000793e:	int3   
   14000793f:	int3   
   140007940:	int3   
   140007941:	int3   
   140007942:	int3   
   140007943:	int3   
   140007944:	sub    rsp,0x28
   140007948:	mov    r8,QWORD PTR [r9+0x38]
   14000794c:	mov    rcx,rdx
   14000794f:	mov    rdx,r9
   140007952:	call   0x140007968
   140007957:	mov    eax,0x1
   14000795c:	add    rsp,0x28
   140007960:	ret    
   140007961:	int3   
   140007962:	int3   
   140007963:	int3   
   140007964:	int3   
   140007965:	int3   
   140007966:	int3   
   140007967:	int3   
   140007968:	rex push rbx
   14000796a:	sub    rsp,0x20
   14000796e:	mov    r11d,DWORD PTR [r8]
   140007971:	mov    rbx,rdx
   140007974:	and    r11d,0xfffffff8
   140007978:	mov    r9,rcx
   14000797b:	test   BYTE PTR [r8],0x4
   14000797f:	mov    r10,rcx
   140007982:	je     0x140007997
   140007984:	mov    eax,DWORD PTR [r8+0x8]
   140007988:	movsxd r10,DWORD PTR [r8+0x4]
   14000798c:	neg    eax
   14000798e:	add    r10,rcx
   140007991:	movsxd rcx,eax
   140007994:	and    r10,rcx
   140007997:	movsxd rax,r11d
   14000799a:	mov    rdx,QWORD PTR [rax+r10*1]
   14000799e:	mov    rax,QWORD PTR [rbx+0x10]
   1400079a2:	mov    ecx,DWORD PTR [rax+0x8]
   1400079a5:	add    rcx,QWORD PTR [rbx+0x8]
   1400079a9:	test   BYTE PTR [rcx+0x3],0xf
   1400079ad:	je     0x1400079bb
   1400079af:	movzx  eax,BYTE PTR [rcx+0x3]
   1400079b3:	and    eax,0xfffffff0
   1400079b6:	cdqe   
   1400079b8:	add    r9,rax
   1400079bb:	xor    r9,rdx
   1400079be:	mov    rcx,r9
   1400079c1:	add    rsp,0x20
   1400079c5:	pop    rbx
   1400079c6:	jmp    0x140007230
   1400079cb:	int3   
   1400079cc:	int3   
   1400079cd:	int3   
   1400079ce:	int3   
   1400079cf:	int3   
   1400079d0:	int3   
   1400079d1:	int3   
   1400079d2:	int3   
   1400079d3:	int3   
   1400079d4:	mov    rax,rsp
   1400079d7:	mov    QWORD PTR [rax+0x8],rbx
   1400079db:	mov    QWORD PTR [rax+0x10],rbp
   1400079df:	mov    QWORD PTR [rax+0x18],rsi
   1400079e3:	mov    QWORD PTR [rax+0x20],rdi
   1400079e7:	push   r14
   1400079e9:	sub    rsp,0x20
   1400079ed:	mov    rbx,QWORD PTR [r9+0x38]
   1400079f1:	mov    rsi,rdx
   1400079f4:	mov    r14,r8
   1400079f7:	mov    rbp,rcx
   1400079fa:	mov    rdx,r9
   1400079fd:	mov    rcx,rsi
   140007a00:	mov    rdi,r9
   140007a03:	lea    r8,[rbx+0x4]
   140007a07:	call   0x140007968
   140007a0c:	mov    r11d,DWORD PTR [rbx+0x4]
   140007a10:	mov    r8d,0x1
   140007a16:	mov    r10d,DWORD PTR [rbp+0x4]
   140007a1a:	mov    eax,r11d
   140007a1d:	and    eax,r8d
   140007a20:	and    r11d,0x2
   140007a24:	and    r10b,0x66
   140007a28:	cmove  r11d,eax
   140007a2c:	test   r11d,r11d
   140007a2f:	je     0x140007a45
   140007a31:	mov    r9,rdi
   140007a34:	mov    r8,r14
   140007a37:	mov    rdx,rsi
   140007a3a:	mov    rcx,rbp
   140007a3d:	call   0x140007938
   140007a42:	mov    r8d,eax
   140007a45:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a4a:	mov    eax,r8d
   140007a4d:	mov    rbp,QWORD PTR [rsp+0x38]
   140007a52:	mov    rsi,QWORD PTR [rsp+0x40]
   140007a57:	mov    rdi,QWORD PTR [rsp+0x48]
   140007a5c:	add    rsp,0x20
   140007a60:	pop    r14
   140007a62:	ret    
   140007a63:	int3   
   140007a64:	int3   
   140007a65:	int3   
   140007a66:	int3   
   140007a67:	int3   
   140007a68:	int3   
   140007a69:	int3   
   140007a6a:	jmp    QWORD PTR [rip+0x910]        # 0x140008380
   140007a70:	int3   
   140007a71:	int3   
   140007a72:	int3   
   140007a73:	int3   
   140007a74:	int3   
   140007a75:	int3   
   140007a76:	jmp    QWORD PTR [rip+0x93c]        # 0x1400083b8
   140007a7c:	int3   
   140007a7d:	int3   
   140007a7e:	int3   
   140007a7f:	int3   
   140007a80:	int3   
   140007a81:	int3   
   140007a82:	int3   
   140007a83:	int3   
   140007a84:	int3   
   140007a85:	int3   
   140007a86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007a90:	jmp    rax
   140007a92:	int3   
   140007a93:	int3   
   140007a94:	int3   
   140007a95:	int3   
   140007a96:	int3   
   140007a97:	int3   
   140007a98:	int3   
   140007a99:	int3   
   140007a9a:	int3   
   140007a9b:	int3   
   140007a9c:	int3   
   140007a9d:	int3   
   140007a9e:	int3   
   140007a9f:	int3   
   140007aa0:	int3   
   140007aa1:	int3   
   140007aa2:	int3   
   140007aa3:	int3   
   140007aa4:	int3   
   140007aa5:	int3   
   140007aa6:	mov    rcx,QWORD PTR [rdx+0x40]
   140007aad:	jmp    0x140001108
   140007ab2:	int3   
   140007ab3:	int3   
   140007ab4:	int3   
   140007ab5:	int3   
   140007ab6:	int3   
   140007ab7:	int3   
   140007ab8:	lea    rcx,[rip+0x4c91]        # 0x14000c750
   140007abf:	rex.W jmp QWORD PTR [rip+0x9aa]        # 0x140008470
   140007ac6:	lea    rcx,[rip+0x4c83]        # 0x14000c750
   140007acd:	add    rcx,0x58
   140007ad1:	rex.W jmp QWORD PTR [rip+0x9d0]        # 0x1400084a8
   140007ad8:	int3   
   140007ad9:	int3   
   140007ada:	int3   
   140007adb:	int3   
   140007adc:	int3   
   140007add:	int3   
   140007ade:	mov    rcx,QWORD PTR [rdx+0x50]
   140007ae5:	jmp    0x140004520
   140007aea:	mov    rcx,QWORD PTR [rdx+0x50]
   140007af1:	jmp    0x140001108
   140007af6:	int3   
   140007af7:	int3   
   140007af8:	int3   
   140007af9:	int3   
   140007afa:	int3   
   140007afb:	int3   
   140007afc:	mov    rcx,QWORD PTR [rdx+0x70]
   140007b03:	jmp    0x140004520
   140007b08:	lea    rcx,[rdx+0x38]
   140007b0f:	jmp    0x140001a64
   140007b14:	int3   
   140007b15:	int3   
   140007b16:	int3   
   140007b17:	int3   
   140007b18:	int3   
   140007b19:	int3   
   140007b1a:	mov    rcx,QWORD PTR [rdx+0x78]
   140007b21:	jmp    0x140004520
   140007b26:	lea    rcx,[rdx+0x78]
   140007b2d:	jmp    0x140001a9c
   140007b32:	mov    QWORD PTR [rsp+0x10],rdx
   140007b37:	push   rbp
   140007b38:	sub    rsp,0x20
   140007b3c:	mov    rbp,rdx
   140007b3f:	mov    DWORD PTR [rbp+0x78],0x8007000e
   140007b46:	lea    rax,[rip+0xffffffffffff9e90]        # 0x1400019dd
   140007b4d:	add    rsp,0x20
   140007b51:	pop    rbp
   140007b52:	ret    
   140007b53:	int3   
   140007b54:	int3   
   140007b55:	int3   
   140007b56:	int3   
   140007b57:	int3   
   140007b58:	int3   
   140007b59:	int3   
   140007b5a:	lea    rcx,[rdx+0xf8]
   140007b61:	jmp    0x140001af4
   140007b66:	lea    rcx,[rdx+0x58]
   140007b6d:	jmp    0x140001b40
   140007b72:	lea    rcx,[rdx+0x60]
   140007b79:	jmp    0x140001af4
   140007b7e:	lea    rcx,[rdx+0x68]
   140007b85:	jmp    0x140001b40
   140007b8a:	lea    rcx,[rdx+0x70]
   140007b91:	jmp    0x140001af4
   140007b96:	int3   
   140007b97:	int3   
   140007b98:	int3   
   140007b99:	int3   
   140007b9a:	int3   
   140007b9b:	int3   
   140007b9c:	mov    rcx,QWORD PTR [rdx+0x50]
   140007ba3:	rex.W jmp QWORD PTR [rip+0x9ae]        # 0x140008558
   140007baa:	mov    rcx,QWORD PTR [rdx+0x50]
   140007bb1:	add    rcx,0x20
   140007bb5:	jmp    0x140001f84
   140007bba:	mov    rcx,QWORD PTR [rdx+0x50]
   140007bc1:	add    rcx,0x30
   140007bc5:	rex.W jmp QWORD PTR [rip+0x984]        # 0x140008550
   140007bcc:	mov    rcx,QWORD PTR [rdx+0x50]
   140007bd3:	add    rcx,0x38
   140007bd7:	rex.W jmp QWORD PTR [rip+0x972]        # 0x140008550
   140007bde:	mov    rcx,QWORD PTR [rdx+0x50]
   140007be5:	add    rcx,0x60
   140007be9:	rex.W jmp QWORD PTR [rip+0x960]        # 0x140008550
   140007bf0:	mov    rcx,QWORD PTR [rdx+0x50]
   140007bf7:	add    rcx,0x68
   140007bfb:	rex.W jmp QWORD PTR [rip+0x94e]        # 0x140008550
   140007c02:	lea    rcx,[rdx+0x60]
   140007c09:	rex.W jmp QWORD PTR [rip+0x878]        # 0x140008488
   140007c10:	int3   
   140007c11:	int3   
   140007c12:	int3   
   140007c13:	int3   
   140007c14:	int3   
   140007c15:	int3   
   140007c16:	mov    rcx,QWORD PTR [rdx+0x58]
   140007c1d:	jmp    0x140004520
   140007c22:	mov    rcx,QWORD PTR [rdx+0x58]
   140007c29:	rex.W jmp QWORD PTR [rip+0x928]        # 0x140008558
   140007c30:	mov    rcx,QWORD PTR [rdx+0x58]
   140007c37:	add    rcx,0x20
   140007c3b:	jmp    0x140001f84
   140007c40:	mov    rcx,QWORD PTR [rdx+0x58]
   140007c47:	add    rcx,0x30
   140007c4b:	rex.W jmp QWORD PTR [rip+0x8fe]        # 0x140008550
   140007c52:	mov    rcx,QWORD PTR [rdx+0x58]
   140007c59:	add    rcx,0x38
   140007c5d:	rex.W jmp QWORD PTR [rip+0x8ec]        # 0x140008550
   140007c64:	mov    rcx,QWORD PTR [rdx+0x58]
   140007c6b:	add    rcx,0x60
   140007c6f:	rex.W jmp QWORD PTR [rip+0x8da]        # 0x140008550
   140007c76:	lea    rcx,[rdx+0x58]
   140007c7d:	jmp    0x1400038b8
   140007c82:	int3   
   140007c83:	int3   
   140007c84:	int3   
   140007c85:	int3   
   140007c86:	int3   
   140007c87:	int3   
   140007c88:	lea    rcx,[rdx+0x70]
   140007c8f:	jmp    0x140001b40
   140007c94:	lea    rcx,[rdx+0x30]
   140007c9b:	rex.W jmp QWORD PTR [rip+0x8ae]        # 0x140008550
   140007ca2:	int3   
   140007ca3:	int3   
   140007ca4:	int3   
   140007ca5:	int3   
   140007ca6:	int3   
   140007ca7:	int3   
   140007ca8:	mov    rcx,QWORD PTR [rdx+0x80]
   140007caf:	jmp    0x140004520
   140007cb4:	int3   
   140007cb5:	int3   
   140007cb6:	int3   
   140007cb7:	int3   
   140007cb8:	int3   
   140007cb9:	int3   
   140007cba:	lea    rcx,[rdx+0x50]
   140007cc1:	rex.W jmp QWORD PTR [rip+0x7c0]        # 0x140008488
   140007cc8:	int3   
   140007cc9:	int3   
   140007cca:	int3   
   140007ccb:	int3   
   140007ccc:	int3   
   140007ccd:	int3   
   140007cce:	lea    rcx,[rdx+0x48]
   140007cd5:	rex.W jmp QWORD PTR [rip+0x7ac]        # 0x140008488
   140007cdc:	int3   
   140007cdd:	int3   
   140007cde:	int3   
   140007cdf:	int3   
   140007ce0:	int3   
   140007ce1:	int3   
   140007ce2:	mov    rcx,QWORD PTR [rdx+0x58]
   140007ce9:	rex.W jmp QWORD PTR [rip+0x780]        # 0x140008470
   140007cf0:	mov    rcx,QWORD PTR [rdx+0x58]
   140007cf7:	add    rcx,0x58
   140007cfb:	rex.W jmp QWORD PTR [rip+0x7a6]        # 0x1400084a8
   140007d02:	mov    rcx,QWORD PTR [rdx+0x58]
   140007d09:	add    rcx,0x80
   140007d10:	rex.W jmp QWORD PTR [rip+0x791]        # 0x1400084a8
   140007d17:	lea    rcx,[rdx+0x50]
   140007d1e:	rex.W jmp QWORD PTR [rip+0x763]        # 0x140008488
   140007d25:	int3   
   140007d26:	int3   
   140007d27:	int3   
   140007d28:	int3   
   140007d29:	int3   
   140007d2a:	int3   
   140007d2b:	lea    rcx,[rdx+0x70]
   140007d32:	rex.W jmp QWORD PTR [rip+0x74f]        # 0x140008488
   140007d39:	int3   
   140007d3a:	int3   
   140007d3b:	int3   
   140007d3c:	int3   
   140007d3d:	int3   
   140007d3e:	int3   
   140007d3f:	lea    rcx,[rdx+0x58]
   140007d46:	rex.W jmp QWORD PTR [rip+0x73b]        # 0x140008488
   140007d4d:	int3   
   140007d4e:	int3   
   140007d4f:	int3   
   140007d50:	int3   
   140007d51:	int3   
   140007d52:	int3   
   140007d53:	rex push rbp
   140007d55:	sub    rsp,0x20
   140007d59:	mov    rbp,rdx
   140007d5c:	mov    rax,QWORD PTR [rcx]
   140007d5f:	cmp    DWORD PTR [rax],0xc0000194
   140007d65:	jne    0x140007d6e
   140007d67:	call   0x140004724
   140007d6c:	jmp    0x140007d70
   140007d6e:	xor    eax,eax
   140007d70:	add    rsp,0x20
   140007d74:	pop    rbp
   140007d75:	ret    
   140007d76:	int3   
   140007d77:	int3   
   140007d78:	int3   
   140007d79:	int3   
   140007d7a:	int3   
   140007d7b:	int3   
   140007d7c:	int3   
   140007d7d:	lea    rcx,[rdx+0x78]
   140007d84:	jmp    0x14000699c
   140007d89:	lea    rcx,[rdx+0x60]
   140007d90:	jmp    0x14000699c
   140007d95:	int3   
   140007d96:	int3   
   140007d97:	int3   
   140007d98:	int3   
   140007d99:	int3   
   140007d9a:	int3   
   140007d9b:	lea    rcx,[rdx+0x38]
   140007da2:	jmp    0x14000699c
   140007da7:	lea    rcx,[rdx+0x38]
   140007dae:	jmp    0x14000699c
   140007db3:	int3   
   140007db4:	int3   
   140007db5:	int3   
   140007db6:	int3   
   140007db7:	int3   
   140007db8:	int3   
   140007db9:	lea    rcx,[rdx+0x58]
   140007dc0:	jmp    0x1400069d4
   140007dc5:	int3   
   140007dc6:	int3   
   140007dc7:	int3   
   140007dc8:	int3   
   140007dc9:	int3   
   140007dca:	int3   
   140007dcb:	mov    rcx,QWORD PTR [rdx+0xd0]
   140007dd2:	jmp    0x140004520
   140007dd7:	int3   
   140007dd8:	int3   
   140007dd9:	int3   
   140007dda:	int3   
   140007ddb:	int3   
   140007ddc:	int3   
   140007ddd:	rex push rbp
   140007ddf:	sub    rsp,0x20
   140007de3:	mov    rbp,rdx
   140007de6:	mov    rax,QWORD PTR [rcx]
   140007de9:	mov    rdx,rcx
   140007dec:	mov    ecx,DWORD PTR [rax]
   140007dee:	call   0x1400073ce
   140007df3:	nop
   140007df4:	add    rsp,0x20
   140007df8:	pop    rbp
   140007df9:	ret    
   140007dfa:	int3   
   140007dfb:	int3   
   140007dfc:	int3   
   140007dfd:	int3   
   140007dfe:	int3   
   140007dff:	int3   
   140007e00:	int3   
   140007e01:	rex push rbp
   140007e03:	sub    rsp,0x20
   140007e07:	mov    rbp,rdx
   140007e0a:	mov    ecx,0x8
   140007e0f:	call   0x140007824
   140007e14:	nop
   140007e15:	add    rsp,0x20
   140007e19:	pop    rbp
   140007e1a:	ret    
   140007e1b:	int3   
   140007e1c:	int3   
   140007e1d:	int3   
   140007e1e:	int3   
   140007e1f:	int3   
   140007e20:	int3   
   140007e21:	int3   
   140007e22:	int3   
   140007e23:	int3   
   140007e24:	int3   
   140007e25:	int3   
   140007e26:	int3   
   140007e27:	int3   
   140007e28:	int3   
   140007e29:	int3   
   140007e2a:	int3   
   140007e2b:	int3   
   140007e2c:	int3   
   140007e2d:	int3   
   140007e2e:	int3   
   140007e2f:	int3   
   140007e30:	rex push rbp
   140007e32:	sub    rsp,0x20
   140007e36:	mov    rbp,rdx
   140007e39:	mov    rax,QWORD PTR [rcx]
   140007e3c:	xor    ecx,ecx
   140007e3e:	cmp    DWORD PTR [rax],0xc0000005
   140007e44:	sete   cl
   140007e47:	mov    eax,ecx
   140007e49:	add    rsp,0x20
   140007e4d:	pop    rbp
   140007e4e:	ret    
   140007e4f:	int3   
   140007e50:	int3   
   140007e51:	int3   
   140007e52:	int3   
   140007e53:	int3   
   140007e54:	int3   
   140007e55:	int3   
   140007e56:	int3   
   140007e57:	int3   
   140007e58:	int3   
   140007e59:	int3   
   140007e5a:	int3   
   140007e5b:	int3   
   140007e5c:	int3   
   140007e5d:	int3   
   140007e5e:	int3   
   140007e5f:	int3   
   140007e60:	jmp    0x140003d8c
   140007e65:	int3   
   140007e66:	int3   
   140007e67:	int3   
   140007e68:	int3   
   140007e69:	int3   
   140007e6a:	int3   
   140007e6b:	int3   
   140007e6c:	int3   
   140007e6d:	int3   
   140007e6e:	int3   
   140007e6f:	int3   
   140007e70:	lea    rcx,[rip+0x49b1]        # 0x14000c828
   140007e77:	rex.W jmp QWORD PTR [rip+0x62a]        # 0x1400084a8
   140007e7e:	int3   
   140007e7f:	int3   
   140007e80:	int3   
   140007e81:	int3   
   140007e82:	int3   
   140007e83:	int3   
   140007e84:	int3   
   140007e85:	int3   
   140007e86:	int3   
   140007e87:	int3   
   140007e88:	int3   
   140007e89:	int3   
   140007e8a:	int3   
   140007e8b:	int3   
   140007e8c:	int3   
   140007e8d:	int3   
   140007e8e:	int3   
   140007e8f:	int3   
   140007e90:	lea    rcx,[rip+0x41c9]        # 0x14000c060
   140007e97:	rex.W jmp QWORD PTR [rip+0x16a]        # 0x140008008

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	sub    dh,BYTE PTR [rbx+0x0]
   140008006:	add    BYTE PTR [rax],al
   140008008:	loop   0x140007fbc
   14000800a:	add    BYTE PTR [rax],al
   14000800c:	add    BYTE PTR [rax],al
   14000800e:	add    BYTE PTR [rax],al
   140008010:	cli    
   140008011:	mov    dl,0x0
   140008013:	add    BYTE PTR [rax],al
   140008015:	add    BYTE PTR [rax],al
   140008017:	add    BYTE PTR [rdx],dl
   140008019:	mov    bl,0x0
   14000801b:	add    BYTE PTR [rax],al
   14000801d:	add    BYTE PTR [rax],al
   14000801f:	add    BYTE PTR [rax],bh
   140008021:	mov    bl,0x0
   140008023:	add    BYTE PTR [rax],al
   140008025:	add    BYTE PTR [rax],al
   140008027:	add    BYTE PTR [rsi-0x4d],cl
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	add    BYTE PTR [rax],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	pop    rsp
   140008031:	mov    bl,0x0
   140008033:	add    BYTE PTR [rax],al
   140008035:	add    BYTE PTR [rax],al
   140008037:	add    al,dl
   140008039:	mov    edx,0x0
   14000803e:	add    BYTE PTR [rax],al
   140008040:	loop   0x140007ffc
   140008042:	add    BYTE PTR [rax],al
   140008044:	add    BYTE PTR [rax],al
   140008046:	add    BYTE PTR [rax],al
   140008048:	outs   dx,BYTE PTR ds:[rsi]
   140008049:	mov    bl,0x0
   14000804b:	add    BYTE PTR [rax],al
   14000804d:	add    BYTE PTR [rax],al
   14000804f:	add    BYTE PTR [rdx+0xb2],bh
	...
   14000805d:	add    BYTE PTR [rax],al
   14000805f:	add    BYTE PTR [rax],bl
   140008061:	add    BYTE PTR [rax],al
   140008063:	add    BYTE PTR [rax],al
   140008065:	add    BYTE PTR [rax],al
   140008067:	or     BYTE PTR [rax],0x0
   14000806a:	add    BYTE PTR [rax],al
   14000806c:	add    BYTE PTR [rax],al
   14000806e:	add    BYTE PTR [rax+0x9],al
   140008074:	add    BYTE PTR [rax],al
   140008076:	add    BYTE PTR [rax+0x2],al
   14000807c:	add    BYTE PTR [rax],al
   14000807e:	add    BYTE PTR [rax+0x6],al
   140008084:	add    BYTE PTR [rax],al
   140008086:	add    BYTE PTR [rax+0x13],al
   14000808c:	add    BYTE PTR [rax],al
   14000808e:	add    BYTE PTR [rax+0x17],al
   140008094:	add    BYTE PTR [rax],al
   140008096:	add    BYTE PTR [rax+0xc9],al
   14000809c:	add    BYTE PTR [rax],al
   14000809e:	add    BYTE PTR [rax+0x0],al
   1400080a4:	add    BYTE PTR [rax],al
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	loopne 0x140008062
   1400080aa:	add    BYTE PTR [rax],al
   1400080ac:	add    BYTE PTR [rax],al
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	int3   
   1400080b1:	mov    eax,0x0
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	mov    eax,0xb8
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rdx+0xb8],ch
   1400080c5:	add    BYTE PTR [rax],al
   1400080c7:	add    BYTE PTR [rbx+rbp*4+0x0],bl
   1400080ce:	add    BYTE PTR [rax],al
   1400080d0:	nop
   1400080d1:	stos   DWORD PTR es:[rdi],eax
   1400080d2:	add    BYTE PTR [rax],al
   1400080d4:	add    BYTE PTR [rax],al
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	xchg   esp,eax
   1400080d9:	mov    eax,0x0
	...
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	hlt    
   1400080e9:	mov    edx,0x0
	...
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	shr    BYTE PTR [rsi+0x0],1
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	(bad)  
   140008101:	lods   eax,DWORD PTR ds:[rsi]
   140008102:	add    BYTE PTR [rax],al
   140008104:	add    BYTE PTR [rax],al
   140008106:	add    BYTE PTR [rax],al
   140008108:	out    dx,al
   140008109:	lods   al,BYTE PTR ds:[rsi]
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	add    BYTE PTR [rax],al
   14000810e:	add    BYTE PTR [rax],al
   140008110:	(bad)  
   140008111:	mov    ecx,0x0
   140008116:	add    BYTE PTR [rax],al
   140008118:	lods   al,BYTE PTR ds:[rsi]
   140008119:	mov    ecx,0x0
   14000811e:	add    BYTE PTR [rax],al
   140008120:	(bad)  
   140008121:	mov    ecx,0x0
   140008126:	add    BYTE PTR [rax],al
   140008128:	rex.WRX lods rax,QWORD PTR ds:[rsi]
   14000812a:	add    BYTE PTR [rax],al
   14000812c:	add    BYTE PTR [rax],al
   14000812e:	add    BYTE PTR [rax],al
   140008130:	(bad)  
   140008131:	lods   eax,DWORD PTR ds:[rsi]
   140008132:	add    BYTE PTR [rax],al
   140008134:	add    BYTE PTR [rax],al
   140008136:	add    BYTE PTR [rax],al
   140008138:	(bad)  
   140008139:	scas   al,BYTE PTR es:[rdi]
	...
   140008146:	add    BYTE PTR [rax],al
   140008148:	sbb    ch,BYTE PTR [rdi+0x0]
   14000814e:	add    BYTE PTR [rax],al
   140008150:	(bad)  
   140008151:	scas   eax,DWORD PTR es:[rdi]
   140008152:	add    BYTE PTR [rax],al
   140008154:	add    BYTE PTR [rax],al
   140008156:	add    BYTE PTR [rax],al
   140008158:	int3   
   140008159:	lods   eax,DWORD PTR ds:[rsi]
	...
   140008166:	add    BYTE PTR [rax],al
   140008168:	shr    BYTE PTR [rbp+0x0],0x0
   14000816f:	add    BYTE PTR [rdx+0xad],dh
   140008175:	add    BYTE PTR [rax],al
   140008177:	add    BYTE PTR [rbp+rbp*4+0x0],ah
   14000817e:	add    BYTE PTR [rax],al
   140008180:	(bad)  
   140008181:	scas   al,BYTE PTR es:[rdi]
	...
   14000818e:	add    BYTE PTR [rax],al
   140008190:	sub    ch,BYTE PTR [rbp+0x0]
	...
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	hlt    
   1400081a1:	scas   al,BYTE PTR es:[rdi]
	...
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	cmp    BYTE PTR [rdi+0x0],ch
	...
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	loop   0x140008170
   1400081c2:	add    BYTE PTR [rax],al
   1400081c4:	add    BYTE PTR [rax],al
   1400081c6:	add    BYTE PTR [rax],al
   1400081c8:	sbb    ch,BYTE PTR [rbp+0x0]
	...
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	(bad)  
   1400081d9:	scas   eax,DWORD PTR es:[rdi]
   1400081da:	add    BYTE PTR [rax],al
   1400081dc:	add    BYTE PTR [rax],al
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	mov    gs,WORD PTR [rbp+0x0]
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	(bad)  
   1400081e9:	scas   eax,DWORD PTR es:[rdi]
   1400081ea:	add    BYTE PTR [rax],al
   1400081ec:	add    BYTE PTR [rax],al
   1400081ee:	add    BYTE PTR [rax],al
   1400081f0:	scas   ax,WORD PTR es:[rdi]
   1400081f2:	add    BYTE PTR [rax],al
   1400081f4:	add    BYTE PTR [rax],al
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	or     BYTE PTR [rdi+0x0],ch
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	push   rdx
   140008201:	scas   al,BYTE PTR es:[rdi]
	...
   14000820e:	add    BYTE PTR [rax],al
   140008210:	rex.WR scas rax,QWORD PTR es:[rdi]
	...
   14000821e:	add    BYTE PTR [rax],al
   140008220:	mov    edx,0xaf
   140008225:	add    BYTE PTR [rax],al
   140008227:	add    BYTE PTR [rdi+rbp*4+0x0],cl
   14000822e:	add    BYTE PTR [rax],al
   140008230:	movabs al,ds:0xaf
   140008239:	add    BYTE PTR [rax],al
   14000823b:	add    BYTE PTR [rax],al
   14000823d:	add    BYTE PTR [rax],al
   14000823f:	add    BYTE PTR [rax],bh
   140008241:	lods   eax,DWORD PTR ds:[rsi]
	...
   14000824e:	add    BYTE PTR [rax],al
   140008250:	cmp    al,0xae
   140008252:	add    BYTE PTR [rax],al
   140008254:	add    BYTE PTR [rax],al
   140008256:	add    BYTE PTR [rax],al
   140008258:	and    BYTE PTR [rsi+0x0],ch
   14000825e:	add    BYTE PTR [rax],al
   140008260:	xor    BYTE PTR [rsi+0x0],ch
   140008266:	add    BYTE PTR [rax],al
   140008268:	add    BYTE PTR [rdi+0x0],ch
   14000826e:	add    BYTE PTR [rax],al
   140008270:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008271:	scas   al,BYTE PTR es:[rdi]
   140008272:	add    BYTE PTR [rax],al
   140008274:	add    BYTE PTR [rax],al
   140008276:	add    BYTE PTR [rax],al
   140008278:	mov    esp,0xae
	...
   140008285:	add    BYTE PTR [rax],al
   140008287:	add    BYTE PTR [rsi+rbp*4+0x0],cl
   14000828e:	add    BYTE PTR [rax],al
   140008290:	je     0x140008240
	...
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	jl     0x140008251
   1400082a2:	add    BYTE PTR [rax],al
   1400082a4:	add    BYTE PTR [rax],al
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	je     0x140008257
	...
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	fsubr  QWORD PTR [rbp+0x0]
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	clc    
   1400082c1:	lods   eax,DWORD PTR ds:[rsi]
   1400082c2:	add    BYTE PTR [rax],al
   1400082c4:	add    BYTE PTR [rax],al
   1400082c6:	add    BYTE PTR [rax],al
   1400082c8:	add    al,0xae
	...
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	sbb    BYTE PTR [rcx+0x0],bh
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	rex.WX movabs rcx,0x0
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	add    BYTE PTR [rax],al
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	jp     0x1400082ab
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	add    BYTE PTR [rax],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	mov    WORD PTR [rcx+0x0],?
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	pushf  
   140008301:	mov    ecx,0x0
   140008306:	add    BYTE PTR [rax],al
   140008308:	push   0xb9
	...
   140008315:	add    BYTE PTR [rax],al
   140008317:	add    BYTE PTR [rcx+rdi*4],ch
	...
   140008326:	add    BYTE PTR [rax],al
   140008328:	mov    WORD PTR [rdx+0x0],?
	...
   140008336:	add    BYTE PTR [rax],al
   140008338:	rex.W lods al,BYTE PTR ds:[rsi]
   14000833a:	add    BYTE PTR [rax],al
   14000833c:	add    BYTE PTR [rax],al
   14000833e:	add    BYTE PTR [rax],al
   140008340:	xor    al,0xac
   140008342:	add    BYTE PTR [rax],al
   140008344:	add    BYTE PTR [rax],al
   140008346:	add    BYTE PTR [rax],al
   140008348:	lods   al,BYTE PTR es:[rsi]
   14000834a:	add    BYTE PTR [rax],al
   14000834c:	add    BYTE PTR [rax],al
   14000834e:	add    BYTE PTR [rax],al
   140008350:	sbb    al,0xac
   140008352:	add    BYTE PTR [rax],al
   140008354:	add    BYTE PTR [rax],al
   140008356:	add    BYTE PTR [rax],al
   140008358:	push   rsp
   140008359:	lods   al,BYTE PTR ds:[rsi]
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	add    BYTE PTR [rax],al
   14000835e:	add    BYTE PTR [rax],al
   140008360:	or     al,0xac
   140008362:	add    BYTE PTR [rax],al
   140008364:	add    BYTE PTR [rax],al
   140008366:	add    BYTE PTR [rax],al
   140008368:	sahf   
   140008369:	lods   al,BYTE PTR ds:[rsi]
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	add    BYTE PTR [rax],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	cli    
   140008371:	stos   DWORD PTR es:[rdi],eax
   140008372:	add    BYTE PTR [rax],al
   140008374:	add    BYTE PTR [rax],al
   140008376:	add    BYTE PTR [rax],al
   140008378:	(bad)  
   140008379:	stos   DWORD PTR es:[rdi],eax
   14000837a:	add    BYTE PTR [rax],al
   14000837c:	add    BYTE PTR [rax],al
   14000837e:	add    BYTE PTR [rax],al
   140008380:	(bad)  
   140008381:	mov    ebx,0x0
   140008386:	add    BYTE PTR [rax],al
   140008388:	jbe    0x140008336
   14000838a:	add    BYTE PTR [rax],al
   14000838c:	add    BYTE PTR [rax],al
   14000838e:	add    BYTE PTR [rax],al
   140008390:	mov    WORD PTR [rax+rax*1+0x0],gs
   140008397:	add    BYTE PTR [rsp+rbp*4+0x0],ch
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	ret    0xac
   1400083a3:	add    BYTE PTR [rax],al
   1400083a5:	add    BYTE PTR [rax],al
   1400083a7:	add    BYTE PTR [rsp+rbp*4+0x0],ch
   1400083ab:	add    BYTE PTR [rax],al
   1400083ad:	add    BYTE PTR [rax],al
   1400083af:	add    BYTE PTR [rdx-0x45],cl
   1400083b2:	add    BYTE PTR [rax],al
   1400083b4:	add    BYTE PTR [rax],al
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	push   0xffffffffffffffbb
   1400083ba:	add    BYTE PTR [rax],al
   1400083bc:	add    BYTE PTR [rax],al
   1400083be:	add    BYTE PTR [rax],al
   1400083c0:	adc    al,0xac
   1400083c2:	add    BYTE PTR [rax],al
   1400083c4:	add    BYTE PTR [rax],al
   1400083c6:	add    BYTE PTR [rax],al
   1400083c8:	xchg   esp,eax
   1400083c9:	lods   al,BYTE PTR ds:[rsi]
   1400083ca:	add    BYTE PTR [rax],al
   1400083cc:	add    BYTE PTR [rax],al
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	xor    al,0xbb
   1400083d2:	add    BYTE PTR [rax],al
   1400083d4:	add    BYTE PTR [rax],al
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	sub    BYTE PTR [rax+rax*1+0x0],0x0
   1400083e0:	fisubr DWORD PTR [rax+rax*1+0x0]
   1400083e7:	add    ah,bh
   1400083e9:	mov    eax,0x0
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	repnz mov eax,0x0
   1400083f6:	add    BYTE PTR [rax],al
   1400083f8:	fsubr  QWORD PTR [rbx+0x0]
   1400083fe:	add    BYTE PTR [rax],al
   140008400:	(bad)  
   140008401:	stos   DWORD PTR es:[rdi],eax
   140008402:	add    BYTE PTR [rax],al
   140008404:	add    BYTE PTR [rax],al
   140008406:	add    BYTE PTR [rax],al
   140008408:	shr    BYTE PTR [rbx+0x0],0x0
   14000840f:	add    BYTE PTR [rbx+rbp*4+0x0],dh
	...
   14000841e:	add    BYTE PTR [rax],al
   140008420:	mov    dl,0x0
   140008423:	add    BYTE PTR [rax],al
   140008425:	add    BYTE PTR [rax],al
   140008427:	add    BYTE PTR [rax-0x46],ch
   14000842a:	add    BYTE PTR [rax],al
   14000842c:	add    BYTE PTR [rax],al
   14000842e:	add    BYTE PTR [rax],al
   140008430:	(bad)  
   140008431:	mov    edx,0x0
   140008436:	add    BYTE PTR [rax],al
   140008438:	mov    dh,0xba
   14000843a:	add    BYTE PTR [rax],al
   14000843c:	add    BYTE PTR [rax],al
   14000843e:	add    BYTE PTR [rax],al
   140008440:	pushf  
   140008441:	mov    edx,0x0
   140008446:	add    BYTE PTR [rax],al
   140008448:	rex.WRX movabs rdx,0x0
   140008452:	add    BYTE PTR [rax],al
   140008454:	add    BYTE PTR [rax],al
   140008456:	add    BYTE PTR [rax],al
   140008458:	pop    rsp
   140008459:	mov    dl,0x0
   14000845b:	add    BYTE PTR [rax],al
   14000845d:	add    BYTE PTR [rax],al
   14000845f:	add    BYTE PTR [rdx+rsi*4+0x0],ch
	...
   14000846f:	add    BYTE PTR [rdi+rsi*4],cl
   140008472:	add    BYTE PTR [rax],al
   140008474:	add    BYTE PTR [rax],al
   140008476:	add    BYTE PTR [rax],al
   140008478:	es mov bh,0x0
   14000847b:	add    BYTE PTR [rax],al
   14000847d:	add    BYTE PTR [rax],al
   14000847f:	add    BYTE PTR [rsi-0x49],al
   140008482:	add    BYTE PTR [rax],al
   140008484:	add    BYTE PTR [rax],al
   140008486:	add    BYTE PTR [rax],al
   140008488:	fs mov bh,0x0
   14000848b:	add    BYTE PTR [rax],al
   14000848d:	add    BYTE PTR [rax],al
   14000848f:	add    BYTE PTR [rsi-0x49],bh
   140008492:	add    BYTE PTR [rax],al
   140008494:	add    BYTE PTR [rax],al
   140008496:	add    BYTE PTR [rax],al
   140008498:	mov    dl,0xb7
   14000849a:	add    BYTE PTR [rax],al
   14000849c:	add    BYTE PTR [rax],al
   14000849e:	add    BYTE PTR [rax],al
   1400084a0:	(bad)  
   1400084a1:	mov    bh,0x0
   1400084a3:	add    BYTE PTR [rax],al
   1400084a5:	add    BYTE PTR [rax],al
   1400084a7:	add    dl,ch
   1400084a9:	mov    bh,0x0
   1400084ab:	add    BYTE PTR [rax],al
   1400084ad:	add    BYTE PTR [rax],al
   1400084af:	add    BYTE PTR [rdx],al
   1400084b1:	mov    eax,0x0
   1400084b6:	add    BYTE PTR [rax],al
   1400084b8:	sbb    bh,BYTE PTR [rax+0x0]
   1400084be:	add    BYTE PTR [rax],al
   1400084c0:	rex.R mov eax,0x0
   1400084c6:	add    BYTE PTR [rax],al
   1400084c8:	lock mov ch,0x0
   1400084cb:	add    BYTE PTR [rax],al
   1400084cd:	add    BYTE PTR [rax],al
   1400084cf:	add    al,dl
   1400084d1:	mov    ch,0x0
   1400084d3:	add    BYTE PTR [rax],al
   1400084d5:	add    BYTE PTR [rax],al
   1400084d7:	add    BYTE PTR [rdx+0xb5],bh
   1400084dd:	add    BYTE PTR [rax],al
   1400084df:	add    al,dh
   1400084e1:	mov    dh,0x0
   1400084e3:	add    BYTE PTR [rax],al
   1400084e5:	add    BYTE PTR [rax],al
   1400084e7:	add    BYTE PTR [rdx-0x4b],ch
   1400084ea:	add    BYTE PTR [rax],al
   1400084ec:	add    BYTE PTR [rax],al
   1400084ee:	add    BYTE PTR [rax],al
   1400084f0:	cmp    dh,BYTE PTR [rbp+0x0]
   1400084f6:	add    BYTE PTR [rax],al
   1400084f8:	sbb    al,0xb5
   1400084fa:	add    BYTE PTR [rax],al
   1400084fc:	add    BYTE PTR [rax],al
   1400084fe:	add    BYTE PTR [rax],al
   140008500:	out    dx,al
   140008501:	mov    ah,0x0
   140008503:	add    BYTE PTR [rax],al
   140008505:	add    BYTE PTR [rax],al
   140008507:	add    BYTE PTR [rsp+rsi*4+0x0],dh
   14000850e:	add    BYTE PTR [rax],al
   140008510:	xchg   esp,eax
   140008511:	mov    ah,0x0
   140008513:	add    BYTE PTR [rax],al
   140008515:	add    BYTE PTR [rax],al
   140008517:	add    BYTE PTR [rdx-0x4c],dh
   14000851a:	add    BYTE PTR [rax],al
   14000851c:	add    BYTE PTR [rax],al
   14000851e:	add    BYTE PTR [rax],al
   140008520:	pop    rax
   140008521:	mov    ah,0x0
   140008523:	add    BYTE PTR [rax],al
   140008525:	add    BYTE PTR [rax],al
   140008527:	add    BYTE PTR [rax-0x4c],al
   14000852a:	add    BYTE PTR [rax],al
   14000852c:	add    BYTE PTR [rax],al
   14000852e:	add    BYTE PTR [rax],al
   140008530:	(bad)  
   140008531:	mov    ah,0x0
   140008533:	add    BYTE PTR [rax],al
   140008535:	add    BYTE PTR [rax],al
   140008537:	add    dl,dh
   140008539:	mov    bl,0x0
   14000853b:	add    BYTE PTR [rax],al
   14000853d:	add    BYTE PTR [rax],al
   14000853f:	add    al,dl
   140008541:	mov    dh,0x0
   140008543:	add    BYTE PTR [rax],al
   140008545:	add    BYTE PTR [rax],al
   140008547:	add    BYTE PTR [rdx+0xb6],ch
   14000854d:	add    BYTE PTR [rax],al
   14000854f:	add    BYTE PTR [rsi+rsi*4+0x0],dl
   140008556:	add    BYTE PTR [rax],al
   140008558:	fidiv  WORD PTR [rbx+0x0]
   14000855e:	add    BYTE PTR [rax],al
   140008560:	stos   BYTE PTR es:[rdi],al
   140008561:	mov    bl,0x0
   140008563:	add    BYTE PTR [rax],al
   140008565:	add    BYTE PTR [rax],al
   140008567:	add    BYTE PTR [rdx+0xb3],dl
   14000856d:	add    BYTE PTR [rax],al
   14000856f:	add    BYTE PTR [rsi+rsi*4+0x0],dh
   140008573:	add    BYTE PTR [rax],al
   140008575:	add    BYTE PTR [rax],al
   140008577:	add    BYTE PTR [rdx-0x4a],cl
   14000857a:	add    BYTE PTR [rax],al
   14000857c:	add    BYTE PTR [rax],al
   14000857e:	add    BYTE PTR [rax],al
   140008580:	sub    al,0xb6
   140008582:	add    BYTE PTR [rax],al
   140008584:	add    BYTE PTR [rax],al
   140008586:	add    BYTE PTR [rax],al
   140008588:	cwde   
   140008589:	mov    ch,0x0
   14000858b:	add    BYTE PTR [rax],al
   14000858d:	add    BYTE PTR [rax],al
   14000858f:	add    BYTE PTR [rax],dl
   140008591:	mov    dh,0x0
	...
   14000859f:	add    BYTE PTR [rax+0x1400059],dl
   1400085a5:	add    BYTE PTR [rax],al
   1400085a7:	add    BYTE PTR [rax+0x140007a],dl
	...
   1400085b5:	add    BYTE PTR [rax],al
   1400085b7:	add    BYTE PTR [rax+0x6f],ah
   1400085ba:	add    BYTE PTR [rax+0x1],al
   1400085bd:	add    BYTE PTR [rax],al
   1400085bf:	add    BYTE PTR [rax],al
   1400085c1:	adc    BYTE PTR [rax],al
   1400085c3:	rex add DWORD PTR [rax],eax
   1400085c6:	add    BYTE PTR [rax],al
   1400085c8:	jo     0x1400085da
   1400085ca:	add    BYTE PTR [rax+0x1],al
   1400085cd:	add    BYTE PTR [rax],al
   1400085cf:	add    BYTE PTR [rax+0x1400010],al
   1400085d5:	add    BYTE PTR [rax],al
   1400085d7:	add    BYTE PTR [rax+0x1400010],dh
	...
   1400085ed:	add    BYTE PTR [rax],al
   1400085ef:	add    BYTE PTR [rax+0x140006e],al
   1400085f5:	add    BYTE PTR [rax],al
   1400085f7:	add    BYTE PTR [rax+0x1400073],dh
	...
   140008609:	adc    BYTE PTR [rax],al
   14000860b:	add    BYTE PTR [rax+0x10],dh
   14000860e:	add    BYTE PTR [rax],al
   140008610:	adc    BYTE PTR [rax],0x0
   140008613:	add    BYTE PTR [rax+0x50000010],dh
   140008619:	adc    DWORD PTR [rax],eax
   14000861b:	add    BYTE PTR [rax+0x12],dl
   14000861e:	add    BYTE PTR [rax],al
   140008620:	(bad)  
   140008621:	adc    eax,DWORD PTR [rax]
   140008623:	add    al,dh
   140008625:	adc    eax,DWORD PTR [rax]
   140008627:	add    BYTE PTR [rax+0x14],ah
   14000862a:	add    BYTE PTR [rax],al
   14000862c:	mov    al,0x14
   14000862e:	add    BYTE PTR [rax],al
   140008630:	loopne 0x140008646
   140008632:	add    BYTE PTR [rax],al
   140008634:	lock adc al,0x0
   140008637:	add    BYTE PTR [rax],al
   140008639:	adc    eax,0x15500000
   14000863e:	add    BYTE PTR [rax],al
   140008640:	nop
   140008641:	adc    eax,0x16b00000
   140008646:	add    BYTE PTR [rax],al
   140008648:	adc    BYTE PTR [rdi],dl
   14000864a:	add    BYTE PTR [rax],al
   14000864c:	push   rax
   14000864d:	(bad)  
   14000864e:	add    BYTE PTR [rax],al
   140008650:	nop
   140008651:	(bad)  
   140008652:	add    BYTE PTR [rax],al
   140008654:	add    BYTE PTR [rax],bl
   140008656:	add    BYTE PTR [rax],al
   140008658:	push   rax
   140008659:	sbb    BYTE PTR [rax],al
   14000865b:	add    BYTE PTR [rax],ah
   14000865d:	sbb    al,BYTE PTR [rax]
   14000865f:	add    BYTE PTR [rax+0x1b],ah
   140008662:	add    BYTE PTR [rax],al
   140008664:	rcr    BYTE PTR [rbx],0x0
   140008667:	add    BYTE PTR [rax-0x4fffffe2],al
   14000866d:	and    DWORD PTR [rax],eax
   14000866f:	add    BYTE PTR [rax],dh
   140008671:	and    eax,DWORD PTR [rax]
   140008673:	add    BYTE PTR [rax+0x23],ah
   140008676:	add    BYTE PTR [rax],al
   140008678:	add    BYTE PTR [rax+rax*1],ah
   14000867b:	add    BYTE PTR [rax],ah
   14000867d:	and    al,0x0
   14000867f:	add    al,al
   140008681:	and    al,0x0
   140008683:	add    al,dl
   140008685:	and    al,0x0
   140008687:	add    BYTE PTR [rax+0x26],ah
   14000868a:	add    BYTE PTR [rax],al
   14000868c:	adc    BYTE PTR [rax],ch
   14000868e:	add    BYTE PTR [rax],al
   140008690:	shl    BYTE PTR [rsi],1
   140008692:	add    BYTE PTR [rax],al
   140008694:	nop
   140008695:	cmp    BYTE PTR [rax],al
   140008697:	add    BYTE PTR [rax+0x39],dl
   14000869a:	add    BYTE PTR [rax],al
   14000869c:	(bad)  
   14000869d:	cmp    DWORD PTR [rax],eax
   14000869f:	add    BYTE PTR [rax+0x39],dh
   1400086a2:	add    BYTE PTR [rax],al
   1400086a4:	lock cmp al,BYTE PTR [rax]
   1400086a7:	add    BYTE PTR [rax+0x47],al
   1400086aa:	add    BYTE PTR [rax],al
   1400086ac:	or     BYTE PTR [rcx+0x0],0x0
   1400086b0:	add    BYTE PTR [rdx+0x0],dl
   1400086b3:	add    BYTE PTR [rax+0x55],dl
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	xor    BYTE PTR [rsi+0x0],dl
   1400086bb:	add    BYTE PTR [rax],al
   1400086bd:	push   rdi
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	(bad)  
   1400086c1:	push   rdi
   1400086c2:	add    BYTE PTR [rax],al
   1400086c4:	rcl    BYTE PTR [rdi+0x0],1
   1400086c7:	add    BYTE PTR [rax],ah
   1400086c9:	pop    rax
   1400086ca:	add    BYTE PTR [rax],al
   1400086cc:	(bad)  
   1400086cd:	pop    rax
   1400086ce:	add    BYTE PTR [rax],al
   1400086d0:	movabs al,ds:0x20000058d0000058
   1400086d9:	pop    rcx
   1400086da:	add    BYTE PTR [rax],al
   1400086dc:	nop
   1400086dd:	pop    rcx
   1400086de:	add    BYTE PTR [rax],al
   1400086e0:	loopne 0x14000873b
   1400086e2:	add    BYTE PTR [rax],al
   1400086e4:	rcr    BYTE PTR [rdx+0x0],1
   1400086e7:	add    BYTE PTR [rax+0x5000005f],ah
   1400086ed:	push   0x0
   1400086ef:	add    BYTE PTR [rax+0x6a],ah
   1400086f2:	add    BYTE PTR [rax],al
   1400086f4:	(bad)  
   1400086f5:	imul   eax,DWORD PTR [rax],0x0
   1400086f8:	sub    BYTE PTR [rsi+0x0],0x0
   1400086fc:	(bad)  
   1400086fd:	outs   dx,DWORD PTR ds:[rsi]
   1400086fe:	add    BYTE PTR [rax],al
   140008700:	mov    al,0x6f
   140008702:	add    BYTE PTR [rax],al
   140008704:	and    BYTE PTR [rbx+0x0],dh
   140008707:	add    BYTE PTR [rax],dh
   140008709:	jae    0x14000870b
   14000870b:	add    BYTE PTR [rax+0x73],dh
   14000870e:	add    BYTE PTR [rax],al
   140008710:	mov    al,0x73
   140008712:	add    BYTE PTR [rax],al
   140008714:	movabs al,ds:0x6000007850000076
   14000871d:	js     0x14000871f
   14000871f:	add    BYTE PTR [rax+0x78],dh
   140008722:	add    BYTE PTR [rax],al
   140008724:	cmp    BYTE PTR [rax+0x0],0x0
   140008728:	nop
   140008729:	js     0x14000872b
   14000872b:	add    BYTE PTR [rax-0x4fffff88],ah
   140008731:	js     0x140008733
   140008733:	add    al,al
   140008735:	js     0x140008737
   140008737:	add    BYTE PTR [rax],ah
   140008739:	jns    0x14000873b
   14000873b:	add    BYTE PTR [rax+0x7e],ah
   14000873e:	add    BYTE PTR [rax],al
   140008740:	jo     0x1400087c0
   140008742:	add    BYTE PTR [rax],al
   140008744:	nop
   140008745:	jle    0x140008747
	...
   14000874f:	add    BYTE PTR [rax],dh
   140008751:	jae    0x140008753
   140008753:	rex add DWORD PTR [rax],eax
   140008756:	add    BYTE PTR [rax],al
   140008758:	push   rax
   140008759:	rol    DWORD PTR [rax],0x40
   14000875c:	add    DWORD PTR [rax],eax
   14000875e:	add    BYTE PTR [rax],al
   140008760:	lock rol DWORD PTR [rax],0x40
   140008764:	add    DWORD PTR [rax],eax
   140008766:	add    BYTE PTR [rax],al
   140008768:	add    BYTE PTR [rdx+0x0],al
   14000876c:	add    BYTE PTR [rax],al
   14000876e:	add    BYTE PTR [rax],al
   140008770:	nop
   140008771:	xchg   DWORD PTR [rax],eax
   140008773:	rex add DWORD PTR [rax],eax
   140008776:	add    BYTE PTR [rax],al
   140008778:	add    BYTE PTR [rdx+0x0],al
   14000877c:	add    BYTE PTR [rax],al
   14000877e:	add    BYTE PTR [rax],al
   140008780:	loopne 0x140008709
   140008782:	add    BYTE PTR [rax+0x1],al
	...
   14000878d:	add    BYTE PTR [rax],al
   14000878f:	add    BYTE PTR [rbp+0x0],ah
   140008792:	js     0x140008794
   140008794:	je     0x140008796
   140008796:	sub    eax,0x73006d00
   14000879b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a900fea1
   1400087a1:	add    BYTE PTR [rsi+0x0],ch
   1400087a4:	sub    eax,0x74006e00
   1400087a9:	add    BYTE PTR [rbp+0x0],dh
   1400087ac:	jae    0x1400087ae
   1400087ae:	add    BYTE PTR gs:[rdx+0x0],dh
   1400087b2:	sub    eax,0x65006d00
   1400087b7:	add    BYTE PTR [rbx+0x0],dh
   1400087ba:	jae    0x1400087bc
   1400087bc:	(bad)  
   1400087bd:	add    BYTE PTR [rdi+0x0],ah
   1400087c0:	add    BYTE PTR gs:[rip+0x31006c00],ch        # 0x17100f3c7
   1400087c7:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00b8cd
   1400087cd:	add    BYTE PTR [rcx],dh
	...
   1400087df:	add    BYTE PTR [rbp+0x0],ah
   1400087e2:	js     0x1400087e4
   1400087e4:	je     0x1400087e6
   1400087e6:	sub    eax,0x73006d00
   1400087eb:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a900fef1
   1400087f1:	add    BYTE PTR [rsi+0x0],ch
   1400087f4:	sub    eax,0x74006e00
   1400087f9:	add    BYTE PTR [rbp+0x0],dh
   1400087fc:	jae    0x1400087fe
   1400087fe:	add    BYTE PTR gs:[rdx+0x0],dh
   140008802:	sub    eax,0x65006d00
   140008807:	add    BYTE PTR [rbx+0x0],dh
   14000880a:	jae    0x14000880c
   14000880c:	(bad)  
   14000880d:	add    BYTE PTR [rdi+0x0],ah
   140008810:	add    BYTE PTR gs:[rip+0x31006c00],ch        # 0x17100f417
   140008817:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00b91d
   14000881d:	add    BYTE PTR [rdx],dh
	...
   140008827:	add    BYTE PTR [rax+0x12],dl
   14000882a:	add    BYTE PTR [rax+0x1],al
   14000882d:	add    BYTE PTR [rax],al
   14000882f:	add    BYTE PTR [rax+0x13],ah
   140008832:	add    BYTE PTR [rax+0x1],al
   140008835:	add    BYTE PTR [rax],al
   140008837:	add    BYTE PTR [rax+0x11],dl
   14000883a:	add    BYTE PTR [rax+0x1],al
   14000883d:	add    BYTE PTR [rax],al
   14000883f:	add    BYTE PTR [rax],ah
   140008841:	jae    0x140008843
   140008843:	rex add DWORD PTR [rax],eax
   140008846:	add    BYTE PTR [rax],al
   140008848:	mov    al,0x16
   14000884a:	add    BYTE PTR [rax+0x1],al
   14000884d:	add    BYTE PTR [rax],al
   14000884f:	add    BYTE PTR [rax],dl
   140008851:	(bad)  
   140008852:	add    BYTE PTR [rax+0x1],al
   140008855:	add    BYTE PTR [rax],al
   140008857:	add    BYTE PTR [rax+0x17],dl
   14000885a:	add    BYTE PTR [rax+0x1],al
   14000885d:	add    BYTE PTR [rax],al
   14000885f:	add    BYTE PTR [rax],ah
   140008861:	jae    0x140008863
   140008863:	rex add DWORD PTR [rax],eax
   140008866:	add    BYTE PTR [rax],al
   140008868:	and    BYTE PTR [rbx+0x0],dh
   14000886b:	rex add DWORD PTR [rax],eax
   14000886e:	add    BYTE PTR [rax],al
   140008870:	nop
   140008871:	adc    eax,0x14000
   140008876:	add    BYTE PTR [rax],al
   140008878:	loopne 0x14000888e
   14000887a:	add    BYTE PTR [rax+0x1],al
   14000887d:	add    BYTE PTR [rax],al
   14000887f:	add    al,ah
   140008881:	adc    al,0x0
   140008883:	rex add DWORD PTR [rax],eax
   140008886:	add    BYTE PTR [rax],al
   140008888:	add    BYTE PTR [rdx+0x0],dl
   14000888b:	rex add DWORD PTR [rax],eax
   14000888e:	add    BYTE PTR [rax],al
   140008890:	loopne 0x1400088a6
   140008892:	add    BYTE PTR [rax+0x1],al
   140008895:	add    BYTE PTR [rax],al
   140008897:	add    al,ah
   140008899:	adc    al,0x0
   14000889b:	rex add DWORD PTR [rax],eax
   14000889e:	add    BYTE PTR [rax],al
   1400088a0:	lock adc al,0x0
   1400088a3:	rex add DWORD PTR [rax],eax
   1400088a6:	add    BYTE PTR [rax],al
   1400088a8:	mov    al,0x78
   1400088aa:	add    BYTE PTR [rax+0x1],al
   1400088ad:	add    BYTE PTR [rax],al
   1400088af:	add    BYTE PTR [rax+0x1400078],ah
   1400088b5:	add    BYTE PTR [rax],al
   1400088b7:	add    BYTE PTR [rax+0x1400078],dl
   1400088bd:	add    BYTE PTR [rax],al
   1400088bf:	add    BYTE PTR [rax+0x15],dl
   1400088c2:	add    BYTE PTR [rax+0x1],al
   1400088c5:	add    BYTE PTR [rax],al
   1400088c7:	add    BYTE PTR [rax+0x1400014],dh
   1400088cd:	add    BYTE PTR [rax],al
   1400088cf:	add    BYTE PTR [rax+0x1b],ah
   1400088d2:	add    BYTE PTR [rax+0x1],al
   1400088d5:	add    BYTE PTR [rax],al
   1400088d7:	add    BYTE PTR [rax],ah
   1400088d9:	sbb    al,BYTE PTR [rax]
   1400088db:	rex add DWORD PTR [rax],eax
   1400088de:	add    BYTE PTR [rax],al
   1400088e0:	(bad)  
   1400088e1:	js     0x1400088e3
   1400088e3:	rex add DWORD PTR [rax],eax
   1400088e6:	add    BYTE PTR [rax],al
   1400088e8:	jo     0x140008962
   1400088ea:	add    BYTE PTR [rax+0x1],al
   1400088ed:	add    BYTE PTR [rax],al
   1400088ef:	add    BYTE PTR [rax+0x1400078],al
   1400088f5:	add    BYTE PTR [rax],al
   1400088f7:	add    BYTE PTR [rax],dh
   1400088f9:	and    eax,DWORD PTR [rax]
   1400088fb:	rex add DWORD PTR [rax],eax
   1400088fe:	add    BYTE PTR [rax],al
   140008900:	sar    BYTE PTR [rax+0x0],0x40
   140008904:	add    DWORD PTR [rax],eax
   140008906:	add    BYTE PTR [rax],al
   140008908:	add    BYTE PTR [rip+0x14000],dl        # 0x14001c90e
   14000890e:	add    BYTE PTR [rax],al
   140008910:	push   rax
   140008911:	js     0x140008913
   140008913:	rex add DWORD PTR [rax],eax
   140008916:	add    BYTE PTR [rax],al
   140008918:	nop
   140008919:	(bad)  
   14000891a:	add    BYTE PTR [rax+0x1],al
   14000891d:	add    BYTE PTR [rax],al
   14000891f:	add    BYTE PTR [rax],al
   140008921:	sbb    BYTE PTR [rax],al
   140008923:	rex add DWORD PTR [rax],eax
   140008926:	add    BYTE PTR [rax],al
   140008928:	push   rax
   140008929:	sbb    BYTE PTR [rax],al
   14000892b:	rex add DWORD PTR [rax],eax
   14000892e:	add    BYTE PTR [rax],al
   140008930:	mov    al,0x21
   140008932:	add    BYTE PTR [rax+0x1],al
   140008935:	add    BYTE PTR [rax],al
   140008937:	add    BYTE PTR [rax+0x1400016],dh
   14000893d:	add    BYTE PTR [rax],al
   14000893f:	add    BYTE PTR [rax],dl
   140008941:	(bad)  
   140008942:	add    BYTE PTR [rax+0x1],al
   140008945:	add    BYTE PTR [rax],al
   140008947:	add    BYTE PTR [rax+0x17],dl
   14000894a:	add    BYTE PTR [rax+0x1],al
   14000894d:	add    BYTE PTR [rax],al
   14000894f:	add    al,dh
   140008951:	adc    eax,DWORD PTR [rax]
   140008953:	rex add DWORD PTR [rax],eax
   140008956:	add    BYTE PTR [rax],al
   140008958:	(bad)  
   140008959:	adc    al,0x0
   14000895b:	rex add DWORD PTR [rax],eax
   14000895e:	add    BYTE PTR [rax],al
   140008960:	nop
   140008961:	(bad)  
   140008962:	add    BYTE PTR [rax+0x1],al
   140008965:	add    BYTE PTR [rax],al
   140008967:	add    BYTE PTR [rax],al
   140008969:	sbb    BYTE PTR [rax],al
   14000896b:	rex add DWORD PTR [rax],eax
   14000896e:	add    BYTE PTR [rax],al
   140008970:	push   rax
   140008971:	sbb    BYTE PTR [rax],al
   140008973:	rex add DWORD PTR [rax],eax
   140008976:	add    BYTE PTR [rax],al
   140008978:	and    BYTE PTR [rbx+0x0],dh
   14000897b:	rex add DWORD PTR [rax],eax
   14000897e:	add    BYTE PTR [rax],al
   140008980:	push   rax
   140008981:	cmp    DWORD PTR [rax],eax
   140008983:	rex add DWORD PTR [rax],eax
   140008986:	add    BYTE PTR [rax],al
   140008988:	jo     0x1400089c3
   14000898a:	add    BYTE PTR [rax+0x1],al
   14000898d:	add    BYTE PTR [rax],al
   14000898f:	add    BYTE PTR [rax+0x39],ah
   140008992:	add    BYTE PTR [rax+0x1],al
   140008995:	add    BYTE PTR [rax],al
   140008997:	add    BYTE PTR [rax],dl
   140008999:	sub    BYTE PTR [rax],al
   14000899b:	rex add DWORD PTR [rax],eax
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	loopne 0x1400089b6
   1400089a2:	add    BYTE PTR [rax+0x1],al
   1400089a5:	add    BYTE PTR [rax],al
   1400089a7:	add    BYTE PTR [rax+0x23],ah
   1400089aa:	add    BYTE PTR [rax+0x1],al
   1400089ad:	add    BYTE PTR [rax],al
   1400089af:	add    BYTE PTR [rax],al
   1400089b1:	and    al,0x0
   1400089b3:	rex add DWORD PTR [rax],eax
   1400089b6:	add    BYTE PTR [rax],al
   1400089b8:	and    BYTE PTR [rax+rax*1],ah
   1400089bb:	rex add DWORD PTR [rax],eax
   1400089be:	add    BYTE PTR [rax],al
   1400089c0:	shl    BYTE PTR [rax+rax*1],0x40
   1400089c4:	add    DWORD PTR [rax],eax
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	shl    BYTE PTR [rax+rax*1],1
   1400089cb:	rex add DWORD PTR [rax],eax
   1400089ce:	add    BYTE PTR [rax],al
   1400089d0:	shl    BYTE PTR [rax+rax*1],0x40
   1400089d4:	add    DWORD PTR [rax],eax
   1400089d6:	add    BYTE PTR [rax],al
   1400089d8:	loopne 0x1400089ee
   1400089da:	add    BYTE PTR [rax+0x1],al
   1400089dd:	add    BYTE PTR [rax],al
   1400089df:	add    al,ah
   1400089e1:	adc    al,0x0
   1400089e3:	rex add DWORD PTR [rax],eax
   1400089e6:	add    BYTE PTR [rax],al
   1400089e8:	(bad)  
   1400089e9:	add    BYTE PTR es:[rax+0x1],al
   1400089ed:	add    BYTE PTR [rax],al
   1400089ef:	add    al,ah
   1400089f1:	adc    al,0x0
   1400089f3:	rex add DWORD PTR [rax],eax
   1400089f6:	add    BYTE PTR [rax],al
   1400089f8:	loopne 0x140008a0e
   1400089fa:	add    BYTE PTR [rax+0x1],al
   1400089fd:	add    BYTE PTR [rax],al
   1400089ff:	add    BYTE PTR [rax+0x78],ah
   140008a02:	add    BYTE PTR [rax+0x1],al
   140008a05:	add    BYTE PTR [rax],al
   140008a07:	add    BYTE PTR [rax+0x78],dh
   140008a0a:	add    BYTE PTR [rax+0x1],al
   140008a0d:	add    BYTE PTR [rax],al
   140008a0f:	add    BYTE PTR [rax+0x1400078],al
   140008a15:	add    BYTE PTR [rax],al
   140008a17:	add    BYTE PTR [rax+0x1400038],dl
   140008a1d:	add    BYTE PTR [rax],al
   140008a1f:	add    al,al
   140008a21:	js     0x140008a23
   140008a23:	rex add DWORD PTR [rax],eax
   140008a26:	add    BYTE PTR [rax],al
   140008a28:	sbb    BYTE PTR [rsi],0x0
   140008a2b:	rex add DWORD PTR [rax],eax
   140008a2e:	add    BYTE PTR [rax],al
   140008a30:	push   rax
   140008a31:	js     0x140008a33
   140008a33:	rex add DWORD PTR [rax],eax
   140008a36:	add    BYTE PTR [rax],al
   140008a38:	nop
   140008a39:	(bad)  
   140008a3a:	add    BYTE PTR [rax+0x1],al
   140008a3d:	add    BYTE PTR [rax],al
   140008a3f:	add    BYTE PTR [rax],al
   140008a41:	sbb    BYTE PTR [rax],al
   140008a43:	rex add DWORD PTR [rax],eax
   140008a46:	add    BYTE PTR [rax],al
   140008a48:	push   rax
   140008a49:	sbb    BYTE PTR [rax],al
   140008a4b:	rex add DWORD PTR [rax],eax
   140008a4e:	add    BYTE PTR [rax],al
   140008a50:	shl    BYTE PTR [rsi],1
   140008a52:	add    BYTE PTR [rax+0x1],al
   140008a55:	add    BYTE PTR [rax],al
   140008a57:	add    al,dl
   140008a59:	pop    rax
   140008a5a:	add    BYTE PTR [rax+0x1],al
   140008a5d:	add    BYTE PTR [rax],al
   140008a5f:	add    BYTE PTR [rax],ah
   140008a61:	pop    rcx
   140008a62:	add    BYTE PTR [rax+0x1],al
   140008a65:	add    BYTE PTR [rax],al
   140008a67:	add    BYTE PTR [rax+0x1400059],dl
   140008a6d:	add    BYTE PTR [rax],al
   140008a6f:	add    BYTE PTR [rax+0x1400059],dl
   140008a75:	add    BYTE PTR [rax],al
   140008a77:	add    BYTE PTR [rax+0x1400058],ah
   140008a7d:	add    BYTE PTR [rax],al
   140008a7f:	add    BYTE PTR [rax+0x6a],ah
   140008a82:	add    BYTE PTR [rax+0x1],al
   140008a85:	add    BYTE PTR [rax],al
   140008a87:	add    BYTE PTR [rax+0x39],dh
   140008a8a:	add    BYTE PTR [rax+0x1],al
   140008a8d:	add    BYTE PTR [rax],al
   140008a8f:	add    BYTE PTR [rax+0x6a],dl
   140008a92:	add    BYTE PTR [rax+0x1],al
   140008a95:	add    BYTE PTR [rax],al
   140008a97:	add    BYTE PTR [rax],ah
   140008a99:	pop    rax
   140008a9a:	add    BYTE PTR [rax+0x1],al
   140008a9d:	add    BYTE PTR [rax],al
   140008a9f:	add    BYTE PTR [rax+0x58],ah
   140008aa2:	add    BYTE PTR [rax+0x1],al
   140008aa5:	add    BYTE PTR [rax],al
   140008aa7:	add    BYTE PTR [rax],dh
   140008aa9:	push   rsi
   140008aaa:	add    BYTE PTR [rax+0x1],al
   140008aad:	add    BYTE PTR [rax],al
   140008aaf:	add    BYTE PTR [rax],al
   140008ab1:	and    al,0x0
   140008ab3:	rex add DWORD PTR [rax],eax
   140008ab6:	add    BYTE PTR [rax],al
   140008ab8:	add    BYTE PTR [rdi+0x0],dl
   140008abb:	rex add DWORD PTR [rax],eax
   140008abe:	add    BYTE PTR [rax],al
   140008ac0:	(bad)  
   140008ac1:	push   rdi
   140008ac2:	add    BYTE PTR [rax+0x1],al
   140008ac5:	add    BYTE PTR [rax],al
   140008ac7:	add    al,dl
   140008ac9:	push   rdi
   140008aca:	add    BYTE PTR [rax+0x1],al
   140008acd:	add    BYTE PTR [rax],al
   140008acf:	add    BYTE PTR [rax+0x1400049],al
	...
   140008add:	add    BYTE PTR [rax],al
   140008adf:	add    BYTE PTR [rcx+0x0],al
   140008ae2:	movsxd eax,DWORD PTR [rax]
   140008ae4:	je     0x140008ae6
   140008ae6:	imul   eax,DWORD PTR [rax],0x650076
   140008aec:	and    BYTE PTR [rax],al
   140008aee:	push   rbx
   140008aef:	add    BYTE PTR [rbx+0x0],ah
   140008af2:	jb     0x140008af4
   140008af4:	imul   eax,DWORD PTR [rax],0x740070
   140008afa:	imul   eax,DWORD PTR [rax],0x67006e
   140008b00:	and    BYTE PTR [rax],al
   140008b02:	add    BYTE PTR [r14+0x0],r14b
   140008b06:	add    BYTE PTR gs:[rsi+0x0],ch
   140008b0a:	je     0x140008b0c
   140008b0c:	and    BYTE PTR [rax],al
   140008b0e:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008b12:	outs   dx,BYTE PTR ds:[rsi]
   140008b13:	add    BYTE PTR [rbx+0x0],dh
   140008b16:	jne    0x140008b18
   140008b18:	ins    DWORD PTR es:[rdi],dx
   140008b19:	add    BYTE PTR [rbp+0x0],ah
   140008b1c:	jb     0x140008b1e
   140008b1e:	and    BYTE PTR [rax],al
   140008b20:	push   rax
   140008b21:	add    BYTE PTR [rdx+0x0],dh
   140008b24:	outs   dx,DWORD PTR ds:[rsi]
   140008b25:	add    BYTE PTR [rsi+0x0],dh
   140008b28:	imul   eax,DWORD PTR [rax],0x650064
   140008b2e:	jb     0x140008b30
	...
   140008b38:	out    0x72,eax
   140008b3a:	ins    BYTE PTR es:[rdi],dx
   140008b3b:	es call 0xed125ca3
   140008b41:	mov    DWORD PTR [rax],eax
   140008b43:	ror    BYTE PTR [rdi-0x28],0xfd
   140008b47:	push   QWORD PTR [rdx+0x0]
   140008b4a:	outs   dx,DWORD PTR ds:[rsi]
   140008b4b:	add    BYTE PTR [rdi+0x0],ch
   140008b4e:	je     0x140008b50
   140008b50:	pop    rsp
   140008b51:	add    BYTE PTR [rbx+0x0],al
   140008b54:	rex.WB add BYTE PTR [r13+0x0],cl
   140008b58:	jbe    0x140008b5a
   140008b5a:	xor    al,BYTE PTR [rax]
   140008b5c:	add    BYTE PTR [rax],al
   140008b5e:	add    BYTE PTR [rax],al
   140008b60:	push   rbx
   140008b61:	add    BYTE PTR [rbx+0x0],ah
   140008b64:	jb     0x140008b66
   140008b66:	imul   eax,DWORD PTR [rax],0x740070
   140008b6c:	imul   eax,DWORD PTR [rax],0x67006e
   140008b72:	push   rbx
   140008b73:	add    BYTE PTR [rax+rax*1+0x61],dh
   140008b77:	add    BYTE PTR [rsi+0x0],ch
   140008b7a:	add    BYTE PTR fs:[rcx+0x0],ah
   140008b7e:	jb     0x140008b80
   140008b80:	add    BYTE PTR fs:[rbx+0x0],al
   140008b84:	outs   dx,DWORD PTR ds:[rsi]
   140008b85:	add    BYTE PTR [rsi+0x0],ch
   140008b88:	jae    0x140008b8a
   140008b8a:	jne    0x140008b8c
   140008b8c:	ins    DWORD PTR es:[rdi],dx
   140008b8d:	add    BYTE PTR [rbp+0x0],ah
   140008b90:	jb     0x140008b92
   140008b92:	push   rbx
   140008b93:	add    BYTE PTR [rbp+0x0],ah
   140008b96:	je     0x140008b98
   140008b98:	je     0x140008b9a
   140008b9a:	imul   eax,DWORD PTR [rax],0x67006e
   140008ba0:	cmp    eax,0x4000
   140008ba5:	add    BYTE PTR [rax],al
   140008ba7:	add    BYTE PTR [rbp+0x0],cl
   140008baa:	(bad)  
   140008bab:	add    BYTE PTR [rax+0x0],bh
   140008bae:	imul   eax,DWORD PTR [rax],0x75006d
   140008bb4:	ins    DWORD PTR es:[rdi],dx
   140008bb5:	add    BYTE PTR [rbx+0x0],dl
   140008bb8:	movsxd eax,DWORD PTR [rax]
   140008bba:	jb     0x140008bbc
   140008bbc:	imul   eax,DWORD PTR [rax],0x740070
   140008bc2:	jae    0x140008bc4
   140008bc4:	add    BYTE PTR [rax],al
   140008bc6:	add    BYTE PTR [rax],al
   140008bc8:	push   rsp
   140008bc9:	add    BYTE PTR [rcx+0x0],ch
   140008bcc:	ins    DWORD PTR es:[rdi],dx
   140008bcd:	add    BYTE PTR [rbp+0x0],ah
   140008bd0:	outs   dx,DWORD PTR ds:[rsi]
   140008bd1:	add    BYTE PTR [rbp+0x0],dh
   140008bd4:	je     0x140008bd6
   140008bd6:	add    BYTE PTR [rax],al
   140008bd8:	cmp    al,0x0
   140008bda:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140008bde:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   140008be3:	add    BYTE PTR [rax],al
   140008be5:	add    BYTE PTR [rax],al
   140008be7:	add    BYTE PTR [rsi+0x0],cl
   140008bea:	push   rbp
   140008beb:	add    BYTE PTR [rax+rax*1+0x4c],cl
   140008bef:	add    BYTE PTR [rax],al
   140008bf1:	add    BYTE PTR [rax],al
   140008bf3:	add    BYTE PTR [rsi+0x55],cl
   140008bf6:	rex.WR
   140008bf7:	rex.WR add BYTE PTR [rax],r8b
   140008bfa:	add    BYTE PTR [rax],al
   140008bfc:	add    BYTE PTR [rax],al
   140008bfe:	add    BYTE PTR [rax],al
   140008c00:	push   rsp
   140008c01:	add    BYTE PTR [rcx+0x0],ah
   140008c04:	jb     0x140008c06
   140008c06:	add    BYTE PTR [ebp+0x0],ah
   140008c0a:	je     0x140008c0c
   140008c0c:	add    BYTE PTR [r14+0x0],r14b
   140008c10:	add    BYTE PTR gs:[rsi+0x0],ch
   140008c14:	je     0x140008c16
   140008c16:	add    BYTE PTR [rax],al
   140008c18:	cmp    al,BYTE PTR [rax]
   140008c1a:	and    BYTE PTR [rax],al
   140008c1c:	add    BYTE PTR [rax],al
   140008c1e:	add    BYTE PTR [rax],al
   140008c20:	jne    0x140008c22
   140008c22:	outs   dx,BYTE PTR ds:[rsi]
   140008c23:	add    BYTE PTR [rbx+0x0],ch
   140008c26:	outs   dx,BYTE PTR ds:[rsi]
   140008c27:	add    BYTE PTR [rdi+0x0],ch
   140008c2a:	ja     0x140008c2c
   140008c2c:	outs   dx,BYTE PTR ds:[rsi]
   140008c2d:	add    BYTE PTR [rax],al
   140008c2f:	add    BYTE PTR [rbx+0x0],dl
   140008c32:	movsxd eax,DWORD PTR [rax]
   140008c34:	jb     0x140008c36
   140008c36:	imul   eax,DWORD PTR [rax],0x740070
   140008c3c:	push   rsp
   140008c3d:	add    BYTE PTR [rbp+0x0],ah
   140008c40:	js     0x140008c42
   140008c42:	je     0x140008c44
   140008c44:	add    BYTE PTR [rax],al
   140008c46:	add    BYTE PTR [rax],al
   140008c48:	and    BYTE PTR [rax],al
   140008c4a:	sub    BYTE PTR [rax],al
   140008c4c:	and    eax,0x2c007500
   140008c51:	add    BYTE PTR [rip+0x29006400],ah        # 0x16900f057
	...
   140008c5f:	add    BYTE PTR [rbx+0x0],al
   140008c62:	jb     0x140008c64
   140008c64:	add    BYTE PTR gs:[rcx+0x0],ah
   140008c68:	je     0x140008c6a
   140008c6a:	outs   dx,DWORD PTR ds:[rsi]
   140008c6b:	add    BYTE PTR [rdx+0x0],dh
   140008c6e:	push   rbx
   140008c6f:	add    BYTE PTR [rcx+0x0],cl
   140008c72:	add    BYTE PTR [rax],r8b
   140008c75:	add    BYTE PTR [rax],al
   140008c77:	add    BYTE PTR [rbx+0x0],dl
   140008c7a:	movsxd eax,DWORD PTR [rax]
   140008c7c:	jb     0x140008c7e
   140008c7e:	imul   eax,DWORD PTR [rax],0x740070
   140008c84:	imul   eax,DWORD PTR [rax],0x67006e
   140008c8a:	add    BYTE PTR [r14+0x0],r13b
   140008c8e:	add    BYTE PTR [ecx+0x0],ch
   140008c92:	outs   dx,BYTE PTR ds:[rsi]
   140008c93:	add    BYTE PTR [rbp+0x0],ah
   140008c96:	add    BYTE PTR [rax],al
   140008c98:	rex.WXB add BYTE PTR [r9+0x0],bpl
   140008c9c:	ins    BYTE PTR es:[rdi],dx
   140008c9d:	add    BYTE PTR [rax+rax*1+0x54],ch
   140008ca1:	add    BYTE PTR [rcx+0x0],ch
   140008ca4:	ins    DWORD PTR es:[rdi],dx
   140008ca5:	add    BYTE PTR [rbp+0x0],ah
   140008ca8:	outs   dx,DWORD PTR ds:[rsi]
   140008ca9:	add    BYTE PTR [rbp+0x0],dh
   140008cac:	je     0x140008cae
   140008cae:	add    BYTE PTR [rax],al
   140008cb0:	push   rbx
   140008cb1:	add    BYTE PTR [rbx+0x0],ah
   140008cb4:	jb     0x140008cb6
   140008cb6:	imul   eax,DWORD PTR [rax],0x740070
   140008cbc:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140008cc0:	ins    BYTE PTR es:[rdi],dx
   140008cc1:	add    BYTE PTR [rbp+0x0],ah
   140008cc4:	outs   dx,BYTE PTR ds:[rsi]
   140008cc5:	add    BYTE PTR [rcx+0x0],ah
   140008cc8:	ins    DWORD PTR es:[rdi],dx
   140008cc9:	add    BYTE PTR [rbp+0x0],ah
   140008ccc:	add    BYTE PTR [rax],al
   140008cce:	add    BYTE PTR [rax],al
   140008cd0:	push   rbx
   140008cd1:	add    BYTE PTR [rbx+0x0],ah
   140008cd4:	jb     0x140008cd6
   140008cd6:	imul   eax,DWORD PTR [rax],0x740070
   140008cdc:	push   rsp
   140008cdd:	add    BYTE PTR [rbp+0x0],ah
   140008ce0:	js     0x140008ce2
   140008ce2:	je     0x140008ce4
   140008ce4:	sub    al,0x0
   140008ce6:	and    BYTE PTR [rax],al
   140008ce8:	push   rbx
   140008ce9:	add    BYTE PTR [rbx+0x0],ah
   140008cec:	jb     0x140008cee
   140008cee:	imul   eax,DWORD PTR [rax],0x740070
   140008cf4:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140008cf8:	ins    BYTE PTR es:[rdi],dx
   140008cf9:	add    BYTE PTR [rbp+0x0],ah
   140008cfc:	outs   dx,BYTE PTR ds:[rsi]
   140008cfd:	add    BYTE PTR [rcx+0x0],ah
   140008d00:	ins    DWORD PTR es:[rdi],dx
   140008d01:	add    BYTE PTR [rbp+0x0],ah
   140008d04:	add    BYTE PTR [rax],al
   140008d06:	add    BYTE PTR [rax],al
   140008d08:	rex.WB add BYTE PTR [r14+0x0],bpl
   140008d0c:	imul   eax,DWORD PTR [rax],0x690074
   140008d12:	(bad)  
   140008d13:	add    BYTE PTR [rax+rax*1+0x69],ch
   140008d17:	add    BYTE PTR [rdx+0x0],bh
   140008d1a:	add    BYTE PTR gs:[rax],al
   140008d1d:	add    BYTE PTR [rax],al
   140008d1f:	add    BYTE PTR [rdi+0x0],dl
   140008d22:	ins    DWORD PTR es:[rdi],dx
   140008d23:	add    BYTE PTR [rcx+0x0],ch
   140008d26:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   140008d2a:	push   0x0
   140008d2c:	add    BYTE PTR gs:[rbx+0x0],ah
   140008d30:	je     0x140008d32
   140008d32:	add    BYTE PTR [rax],al
   140008d34:	add    BYTE PTR [rax],al
   140008d36:	add    BYTE PTR [rax],al
   140008d38:	ja     0x140008d3a
   140008d3a:	imul   eax,DWORD PTR [rax],0x6d006e
   140008d40:	add    BYTE PTR [ebp+0x0],ch
   140008d44:	je     0x140008d46
   140008d46:	jae    0x140008d48
   140008d48:	cmp    al,BYTE PTR [rax]
   140008d4a:	add    BYTE PTR [rax],al
   140008d4c:	add    BYTE PTR [rax],al
   140008d4e:	add    BYTE PTR [rax],al
   140008d50:	push   rax
   140008d51:	add    BYTE PTR [rcx+0x0],ah
   140008d54:	jb     0x140008d56
   140008d56:	jae    0x140008d58
   140008d58:	add    BYTE PTR gs:[rbx+0x0],dl
   140008d5c:	movsxd eax,DWORD PTR [rax]
   140008d5e:	jb     0x140008d60
   140008d60:	imul   eax,DWORD PTR [rax],0x740070
   140008d66:	push   rsp
   140008d67:	add    BYTE PTR [rbp+0x0],ah
   140008d6a:	js     0x140008d6c
   140008d6c:	je     0x140008d6e
   140008d6e:	add    BYTE PTR [rax],al
   140008d70:	push   rbx
   140008d71:	add    BYTE PTR [rbp+0x0],ah
   140008d74:	je     0x140008d76
   140008d76:	push   rbx
   140008d77:	add    BYTE PTR [rbx+0x0],ah
   140008d7a:	jb     0x140008d7c
   140008d7c:	imul   eax,DWORD PTR [rax],0x740070
   140008d82:	push   rbx
   140008d83:	add    BYTE PTR [rax+rax*1+0x61],dh
   140008d87:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008d8b:	add    BYTE PTR [rax],ch
   140008d8d:	add    BYTE PTR [rbx+0x0],dl
   140008d90:	rex.XB add BYTE PTR [r10+0x0],dl
   140008d94:	rex.WB add BYTE PTR [r8+0x0],dl
   140008d98:	push   rsp
   140008d99:	add    BYTE PTR [rbx+0x0],dl
   140008d9c:	push   rsp
   140008d9d:	add    BYTE PTR [rcx+0x0],al
   140008da0:	push   rsp
   140008da1:	add    BYTE PTR [rbp+0x0],al
   140008da4:	pop    rdi
   140008da5:	add    BYTE PTR [rbx+0x0],al
   140008da8:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140008dac:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   140008db0:	add    BYTE PTR [r8+r8*1+0x45],dl
   140008db5:	add    BYTE PTR [rax+rax*1+0x29],al
   140008db9:	add    BYTE PTR [rax],al
   140008dbb:	add    BYTE PTR [rax],al
   140008dbd:	add    BYTE PTR [rax],al
   140008dbf:	add    BYTE PTR [rcx+0x0],cl
   140008dc2:	outs   dx,BYTE PTR ds:[rsi]
   140008dc3:	add    BYTE PTR [rax+rax*1+0x69],ah
   140008dc7:	add    BYTE PTR [rbx+0x0],ah
   140008dca:	(bad)  
   140008dcb:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008dcf:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140008dd3:	add    BYTE PTR [rbx+0x0],al
   140008dd6:	outs   dx,DWORD PTR ds:[rsi]
   140008dd7:	add    BYTE PTR [rsi+0x0],ch
   140008dda:	jae    0x140008ddc
   140008ddc:	jne    0x140008dde
   140008dde:	ins    DWORD PTR es:[rdi],dx
   140008ddf:	add    BYTE PTR [rbp+0x0],ah
   140008de2:	jb     0x140008de4
   140008de4:	add    BYTE PTR [rax],al
   140008de6:	add    BYTE PTR [rax],al
   140008de8:	jne    0x140008e53
   140008dea:	imul   ecx,DWORD PTR [rdx],0x622c8e79
   140008df0:	enter  0x47b6,0x4e
   140008df4:	(bad)  
   140008df5:	push   rcx
   140008df6:	adc    eax,DWORD PTR [rdx]
   140008df8:	(bad)  
   140008df9:	imul   ebp,DWORD PTR [rbx-0x72],0x4335ab54
   140008e00:	(bad)  
   140008e01:	sub    DWORD PTR [rdx],esi
   140008e03:	push   rbp
   140008e04:	mov    ecx,0x270edd19
   140008e09:	mov    dl,0xf6
   140008e0b:	(bad)  
   140008e0c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008e0d:	sub    al,0xf9
   140008e0f:	rex (bad) 
   140008e11:	cbw    
   140008e13:	(bad)  
   140008e14:	lods   eax,DWORD PTR ds:[rsi]
   140008e15:	stos   BYTE PTR es:[rdi],al
   140008e16:	(bad)  
   140008e17:	cs mov edx,0xe848407e
   140008e1d:	xchg   esp,eax
   140008e1e:	push   rbp
   140008e1f:	or     BYTE PTR [rbx],0xbb
   140008e22:	out    dx,eax
   140008e23:	mov    dh,0x8d
   140008e25:	cmp    bh,BYTE PTR [rsi]
   140008e27:	mov    ah,0xff
   140008e29:	(bad)  
   140008e2a:	(bad)  
   140008e2b:	(bad)  
   140008e2c:	(bad)  
   140008e2d:	(bad)  
   140008e2e:	(bad)  
   140008e2f:	push   QWORD PTR [rdx+0x0]
   140008e32:	outs   dx,DWORD PTR ds:[rsi]
   140008e33:	add    BYTE PTR [rdi+0x0],ch
   140008e36:	je     0x140008e38
	...
   140008e40:	rex.WRXB add BYTE PTR [r8+0x0],r14b
   140008e44:	add    BYTE PTR gs:[rdx+0x0],dh
   140008e48:	(bad)  
   140008e49:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008e4d:	add    BYTE PTR [rdi+0x0],ch
   140008e50:	outs   dx,BYTE PTR ds:[rsi]
   140008e51:	add    BYTE PTR [rax],al
   140008e53:	add    BYTE PTR [rax],al
   140008e55:	add    BYTE PTR [rax],al
   140008e57:	add    BYTE PTR [rax+0x0],dl
   140008e5a:	(bad)  
   140008e5b:	add    BYTE PTR [rdx+0x0],dh
   140008e5e:	(bad)  
   140008e5f:	add    BYTE PTR [rbp+0x0],ch
   140008e62:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   140008e67:	add    BYTE PTR [rdx+0x0],dh
   140008e6a:	rex.WB add BYTE PTR [r14+0x0],bpl
   140008e6e:	data16 add BYTE PTR [rdi+0x0],ch
   140008e72:	add    BYTE PTR [rax],al
   140008e74:	add    BYTE PTR [rax],al
   140008e76:	add    BYTE PTR [rax],al
   140008e78:	add    BYTE PTR [rbp+0x0],r12b
   140008e7c:	jae    0x140008e7e
   140008e7e:	movsxd eax,DWORD PTR [rax]
   140008e80:	jb     0x140008e82
   140008e82:	imul   eax,DWORD PTR [rax],0x740070
   140008e88:	imul   eax,DWORD PTR [rax],0x6e006f
   140008e8e:	add    BYTE PTR [rax],al
   140008e90:	push   rbx
   140008e91:	add    BYTE PTR [rax+rax*1+0x61],dh
   140008e95:	add    BYTE PTR [rax+rax*1+0x75],dh
   140008e99:	add    BYTE PTR [rbx+0x0],dh
   140008e9c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008ea0:	add    BYTE PTR fs:[rbp+0x0],ah
   140008ea4:	add    BYTE PTR [rax],al
   140008ea6:	add    BYTE PTR [rax],al
   140008ea8:	pop    rdi
   140008ea9:	add    BYTE PTR [rdi+0x0],bl
   140008eac:	add    BYTE PTR [r8+0x0],r15b
   140008eb0:	je     0x140008eb2
   140008eb2:	add    BYTE PTR gs:[rsi+0x0],ch
   140008eb6:	add    BYTE PTR fs:[rbp+0x0],ah
   140008eba:	add    BYTE PTR fs:[rbx+0x0],dl
   140008ebe:	je     0x140008ec0
   140008ec0:	(bad)  
   140008ec1:	add    BYTE PTR [rax+rax*1+0x75],dh
   140008ec5:	add    BYTE PTR [rbx+0x0],dh
	...
   140008ed0:	add    DWORD PTR [rax],eax
   140008ed2:	add    BYTE PTR [rax],al
   140008ed4:	add    BYTE PTR [rax],al
   140008ed6:	add    BYTE PTR [rax],al
   140008ed8:	rol    BYTE PTR [rax],0x0
   140008edb:	add    BYTE PTR [rax],al
   140008edd:	add    BYTE PTR [rax],al
   140008edf:	rex.RX add BYTE PTR [rax],r8b
   140008ee2:	add    BYTE PTR [rax],al
   140008ee4:	add    BYTE PTR [rax],al
   140008ee6:	add    BYTE PTR [rax],al
   140008ee8:	rol    BYTE PTR [rax],0x0
   140008eeb:	add    BYTE PTR [rax],al
   140008eed:	add    BYTE PTR [rax],al
   140008eef:	rex.RX pop rax
   140008ef1:	jbe    0x140008ee2
   140008ef3:	(bad)  
   140008ef4:	out    dx,al
   140008ef5:	loope  0x140008f05
   140008ef7:	xchg   rdi,rax
   140008ef9:	(bad)  
   140008efa:	(bad)  
   140008efb:	sub    al,0xb4
   140008efd:	xlat   BYTE PTR ds:[rbx]
   140008efe:	ins    DWORD PTR es:[rdi],dx
   140008eff:	(bad)  
   140008f00:	loope  0x140008f2c
   140008f02:	sbb    bh,BYTE PTR [rbx+0x11cfa4f9]
   140008f08:	(bad)  
   140008f09:	and    BYTE PTR [rax],al
   140008f0b:	sbb    BYTE PTR [rdi+0x2c],0xd0
   140008f0f:	fs (bad) 
   140008f11:	addr32 psrlw mm5,mm1
   140008f15:	or     edi,0x11
   140008f18:	(bad)  
   140008f19:	and    BYTE PTR [rax],al
   140008f1b:	sbb    BYTE PTR [rdi+0x2c],0xd0
   140008f1f:	fs jrcxz 0x140008ec3
   140008f22:	add    ebx,ebx
   140008f24:	sub    esp,DWORD PTR [rdi+rcx*8+0x208f11]
   140008f2b:	sbb    BYTE PTR [rdi+0x2c],0xd0
   140008f2f:	and    BYTE PTR fs:[rcx+0x547d1cf2],dh
   140008f36:	sbb    edx,DWORD PTR [rax]
   140008f38:	mov    fs,WORD PTR [rbp+0x8]
   140008f3b:	add    BYTE PTR [rbx],ch
   140008f3d:	sub    edx,ecx
   140008f3f:	sbb    DWORD PTR [rbx+0x0],edx
   140008f42:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140008f46:	push   rsp
   140008f47:	add    BYTE PTR [rdi+0x0],dl
   140008f4a:	add    BYTE PTR [r10+0x0],dl
   140008f4e:	add    BYTE PTR [r8+rax*1+0x43],r11b
   140008f53:	add    BYTE PTR [rax+rax*1+0x61],ch
   140008f57:	add    BYTE PTR [rbx+0x0],dh
   140008f5a:	jae    0x140008f5c
   140008f5c:	add    BYTE PTR gs:[rbx+0x0],dh
   140008f60:	pop    rsp
   140008f61:	add    BYTE PTR [rbx+0x0],al
   140008f64:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140008f68:	rex.WB add BYTE PTR [r8+rax*1+0x5c],al
   140008f6d:	add    BYTE PTR [rax],al
   140008f6f:	add    BYTE PTR [rbp+0x0],cl
   140008f72:	imul   eax,DWORD PTR [rax],0x720063
   140008f78:	outs   dx,DWORD PTR ds:[rsi]
   140008f79:	add    BYTE PTR [rbx+0x0],dh
   140008f7c:	outs   dx,DWORD PTR ds:[rsi]
   140008f7d:	add    BYTE PTR [rsi+0x0],ah
   140008f80:	je     0x140008f82
   140008f82:	and    BYTE PTR [rax],al
   140008f84:	push   rdi
   140008f85:	add    BYTE PTR [rdx+0x0],al
   140008f88:	add    BYTE PTR [r13+0x0],r9b
   140008f8c:	and    BYTE PTR [rax],al
   140008f8e:	and    eax,0x7300
   140008f93:	add    BYTE PTR [rax],al
   140008f95:	add    BYTE PTR [rax],al
   140008f97:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140008f9b:	add    BYTE PTR [rbx+0x0],ah
   140008f9e:	(bad)  
   140008f9f:	add    BYTE PTR [rax+rax*1+0x53],ch
   140008fa3:	add    BYTE PTR [rbp+0x0],ah
   140008fa6:	jb     0x140008fa8
   140008fa8:	jbe    0x140008faa
   140008faa:	add    BYTE PTR gs:[rdx+0x0],dh
   140008fae:	xor    eax,DWORD PTR [rax]
   140008fb0:	xor    al,BYTE PTR [rax]
   140008fb2:	add    BYTE PTR [rax],al
   140008fb4:	add    BYTE PTR [rax],al
   140008fb6:	add    BYTE PTR [rax],al
   140008fb8:	rex.X add BYTE PTR [rdi+0x0],bpl
   140008fbc:	je     0x140008fbe
   140008fbe:	push   0x0
   140008fc3:	add    BYTE PTR [rax],al
   140008fc5:	add    BYTE PTR [rax],al
   140008fc7:	add    BYTE PTR [rsi+0x0],al
   140008fca:	jb     0x140008fcc
   140008fcc:	add    BYTE PTR gs:[rbp+0x0],ah
	...
   140008fd8:	add    BYTE PTR [r8+0x0],sil
   140008fdc:	(bad)  
   140008fdd:	add    BYTE PTR [rdx+0x0],dh
   140008fe0:	je     0x140008fe2
   140008fe2:	ins    DWORD PTR es:[rdi],dx
   140008fe3:	add    BYTE PTR [rbp+0x0],ah
   140008fe6:	outs   dx,BYTE PTR ds:[rsi]
   140008fe7:	add    BYTE PTR [rax+rax*1+0x0],dh
   140008feb:	add    BYTE PTR [rax],al
   140008fed:	add    BYTE PTR [rax],al
   140008fef:	add    BYTE PTR [rax+rax*1+0x68],dl
   140008ff3:	add    BYTE PTR [rdx+0x0],dh
   140008ff6:	add    BYTE PTR gs:[rcx+0x0],ah
   140008ffa:	add    BYTE PTR fs:[rcx+0x0],ch
   140008ffe:	outs   dx,BYTE PTR ds:[rsi]
   140008fff:	add    BYTE PTR [rdi+0x0],ah
   140009002:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140009006:	add    BYTE PTR fs:[rbp+0x0],ah
   14000900a:	ins    BYTE PTR es:[rdi],dx
   14000900b:	add    BYTE PTR [rax],al
   14000900d:	add    BYTE PTR [rax],al
   14000900f:	add    BYTE PTR [rbx+0x0],dl
   140009012:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140009016:	push   rsp
   140009017:	add    BYTE PTR [rdi+0x0],dl
   14000901a:	add    BYTE PTR [r10+0x0],dl
   14000901e:	add    BYTE PTR [r8+rax*1+0x43],r11b
   140009023:	add    BYTE PTR [rax+rax*1+0x61],ch
   140009027:	add    BYTE PTR [rbx+0x0],dh
   14000902a:	jae    0x14000902c
   14000902c:	add    BYTE PTR gs:[rbx+0x0],dh
   140009030:	pop    rsp
   140009031:	add    BYTE PTR [rbx+0x0],al
   140009034:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140009038:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000903d:	add    BYTE PTR [rax],al
   14000903f:	add    BYTE PTR [rip+0x45005200],ch        # 0x18500e245
   140009045:	add    BYTE PTR [rdi+0x0],al
   140009048:	push   rbx
   140009049:	add    BYTE PTR [rbp+0x0],al
   14000904c:	push   rdx
   14000904d:	add    BYTE PTR [rsi+0x0],dl
   140009050:	add    BYTE PTR [r10+0x0],r10b
   140009054:	add    BYTE PTR [rax],al
   140009056:	add    BYTE PTR [rax],al
   140009058:	(bad)  
   140009059:	add    BYTE PTR [rdx+0x0],dl
   14000905c:	add    BYTE PTR [r15+0x0],r8b
   140009060:	push   rbx
   140009061:	add    BYTE PTR [rbp+0x0],al
   140009064:	push   rdx
   140009065:	add    BYTE PTR [rsi+0x0],dl
   140009068:	add    BYTE PTR [r10+0x0],r10b
   14000906c:	add    BYTE PTR [rax],al
   14000906e:	add    BYTE PTR [rax],al
   140009070:	sub    eax,0x4e005500
   140009075:	add    BYTE PTR [rdx+0x0],dl
   140009078:	add    BYTE PTR [r15+0x0],r8b
   14000907c:	push   rbx
   14000907d:	add    BYTE PTR [rbp+0x0],al
   140009080:	push   rdx
   140009081:	add    BYTE PTR [rsi+0x0],dl
   140009084:	add    BYTE PTR [r10+0x0],r10b
	...
   140009090:	(bad)  
   140009091:	add    BYTE PTR [rbp+0x0],dl
   140009094:	rex.WRX add BYTE PTR [rdx+0x0],r10b
   140009098:	add    BYTE PTR [r15+0x0],r8b
   14000909c:	push   rbx
   14000909d:	add    BYTE PTR [rbp+0x0],al
   1400090a0:	push   rdx
   1400090a1:	add    BYTE PTR [rsi+0x0],dl
   1400090a4:	add    BYTE PTR [r10+0x0],r10b
	...
   1400090b0:	add    BYTE PTR [r13+0x0],r9b
   1400090b4:	rex.X add BYTE PTR [rbp+0x0],al
   1400090b8:	add    BYTE PTR [rax+rax*1+0x49],r8b
   1400090bd:	add    BYTE PTR [rsi+0x0],cl
   1400090c0:	rex.RXB add BYTE PTR [r8],r8b
   1400090c3:	add    BYTE PTR [rax],al
   1400090c5:	add    BYTE PTR [rax],al
   1400090c7:	add    BYTE PTR [rbx+0x61],al
   1400090ca:	outs   dx,BYTE PTR ds:[rsi]
   1400090cb:	outs   dx,BYTE PTR ds:[rsi]
   1400090cc:	outs   dx,DWORD PTR ds:[rsi]
   1400090cd:	je     0x1400090ef
   1400090cf:	jb     0x140009146
   1400090d1:	outs   dx,BYTE PTR ds:[rsi]
   1400090d2:	and    BYTE PTR [rbx+0x74],dh
   1400090d5:	(bad)  
   1400090d6:	outs   dx,BYTE PTR ds:[rsi]
   1400090d7:	fs (bad) 
   1400090d9:	ins    BYTE PTR es:[rdi],dx
   1400090da:	outs   dx,DWORD PTR ds:[rsi]
   1400090db:	outs   dx,BYTE PTR ds:[rsi]
   1400090dc:	or     al,BYTE PTR gs:[rax]
   1400090df:	add    BYTE PTR [rdi+rdx*2-0x33],cl
   1400090e3:	cmp    al,0x43
   1400090e5:	sbb    al,cl
   1400090e7:	int    0xc1
   1400090e9:	or     eax,0x213abf62
   1400090ee:	jnp    0x140009139
   1400090f0:	mov    edi,0x622d6bb0
   1400090f5:	jno    0x1400090a0
   1400090f7:	add    esp,eax
   1400090f9:	cmp    DWORD PTR [rbp+rbx*2-0x22510c99],esi
   140009100:	adc    eax,edi
   140009102:	nop
   140009103:	cmp    r11b,BYTE PTR [rip+0x1f8911d0]        # 0x15f89a2da
   14000910a:	add    BYTE PTR [rdx+0x242e4b00],ch
   140009110:	xchg   DWORD PTR [rsi+0x737fdc12],esp
   140009116:	iret   
   140009117:	adc    DWORD PTR [rax+0xaa004d],ecx
   14000911d:	rex.WXB
   14000911e:	cs and al,0x7a
   140009121:	adc    BYTE PTR [rsi-0x1e],al
   140009124:	outs   dx,BYTE PTR ds:[rsi]
   140009125:	mov    al,0xd0
   140009127:	adc    DWORD PTR [rbp+0x4fc00061],ebp
   14000912d:	fdivr  st,st(5)
   14000912f:	(bad)  
   140009130:	jnp    0x140009142
   140009132:	rex.RX loop 0x1400091a3
   140009135:	mov    al,0xd0
   140009137:	adc    DWORD PTR [rbp+0x4fc00061],ebp
   14000913d:	fdivr  st,st(5)
   14000913f:	call   FWORD PTR [rdx+0x41]
   140009142:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009143:	jbe    0x140009186
   140009145:	retf   
   140009146:	rcl    DWORD PTR [rcx],1
   140009148:	mov    eax,DWORD PTR [rdx]
   14000914a:	add    BYTE PTR [rax+0x8],ah
   14000914d:	(bad)  
   14000914e:	fnstenv [rsi+0x19]
   140009154:	add    BYTE PTR [rax],al
   140009156:	add    BYTE PTR [rax],al
   140009158:	rol    BYTE PTR [rax],0x0
   14000915b:	add    BYTE PTR [rax],al
   14000915d:	add    BYTE PTR [rax],al
   14000915f:	rex.RX
   140009160:	add    BYTE PTR [r8+0x0],dl
   140009164:	rex.WB add BYTE PTR [rip+0x53004d00],bpl        # 0x19300de6b
   14000916b:	add    BYTE PTR [rip+0x69005700],ch        # 0x1a900e871
   140009171:	add    BYTE PTR [rsi+0x0],ch
   140009174:	sub    eax,0x6f004300
   140009179:	add    BYTE PTR [rdx+0x0],dh
   14000917c:	add    BYTE PTR gs:[rip+0x6f004c00],ch        # 0x1af00dd83
   140009183:	add    BYTE PTR [rbx+0x0],ah
   140009186:	(bad)  
   140009187:	add    BYTE PTR [rax+rax*1+0x52],ch
   14000918b:	add    BYTE PTR [rbp+0x0],ah
   14000918e:	add    BYTE PTR [ecx+0x0],ch
   140009192:	jae    0x140009194
   140009194:	je     0x140009196
   140009196:	jb     0x140009198
   140009198:	jns    0x14000919a
   14000919a:	sub    eax,0x31004c00
   14000919f:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00c2a5
   1400091a5:	add    BYTE PTR [rax],dh
   1400091a7:	add    BYTE PTR [rsi],ch
   1400091a9:	add    BYTE PTR [rax+rax*1+0x6c],ah
   1400091ad:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400091b1:	add    BYTE PTR [rax],al
   1400091b3:	add    BYTE PTR [rax],al
   1400091b5:	add    BYTE PTR [rax],al
   1400091b7:	add    BYTE PTR [rcx+0x0],ah
   1400091ba:	add    BYTE PTR fs:[rsi+0x0],dh
   1400091be:	(bad)  
   1400091bf:	add    BYTE PTR [rax+0x0],dh
   1400091c2:	imul   eax,DWORD PTR [rax],0x320033
   1400091c8:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400091cd:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400091d1:	add    BYTE PTR [rax],al
   1400091d3:	add    BYTE PTR [rax],al
   1400091d5:	add    BYTE PTR [rax],al
   1400091d7:	add    BYTE PTR [rdx+0x65],dl
   1400091da:	rex.XB ins BYTE PTR es:[edi],dx
   1400091dd:	outs   dx,DWORD PTR ds:[rsi]
   1400091de:	jae    0x140009245
   1400091e0:	rex.WXB
   1400091e1:	gs jns 0x1400091e4
   1400091e4:	add    BYTE PTR [rax],al
   1400091e6:	add    BYTE PTR [rax],al
   1400091e8:	push   rdx
   1400091e9:	gs addr32 rex.XB jb 0x140009253
   1400091ee:	(bad)  
   1400091ef:	je     0x140009256
   1400091f1:	rex.WXB
   1400091f2:	gs jns 0x14000923a
   1400091f5:	js     0x14000924e
   1400091f7:	add    BYTE PTR [rdx+0x65],dl
   1400091fa:	addr32 rex.R
   1400091fc:	gs ins BYTE PTR es:[rdi],dx
   1400091fe:	gs je  0x140009266
   140009201:	rex.WXB
   140009202:	gs jns 0x14000924a
   140009205:	js     0x14000925e
   140009207:	add    BYTE PTR [rdx+0x65],dl
   14000920a:	addr32 rex.R
   14000920c:	gs ins BYTE PTR es:[rdi],dx
   14000920e:	gs je  0x140009276
   140009211:	rex.WXB
   140009212:	gs jns 0x14000926c
   140009215:	add    BYTE PTR [rax],al
   140009217:	add    BYTE PTR [rdx+0x65],dl
   14000921a:	addr32 rex.WRXB jo 0x140009283
   14000921e:	outs   dx,BYTE PTR ds:[rsi]
   14000921f:	rex.WXB
   140009220:	gs jns 0x140009268
   140009223:	js     0x14000927c
   140009225:	add    BYTE PTR [rax],al
   140009227:	add    BYTE PTR [rdx+0x65],dl
   14000922a:	addr32 push rbx
   14000922c:	gs je  0x140009285
   14000922f:	(bad)  
   140009230:	ins    BYTE PTR es:[rdi],dx
   140009231:	jne    0x140009298
   140009233:	rex.RB js 0x14000928d
   140009236:	add    BYTE PTR [rax],al
   140009238:	and    al,BYTE PTR [rip+0x21993]        # 0x14002abd1
   14000923e:	add    BYTE PTR [rax],al
   140009240:	fs cdq 
	...
   14000924a:	add    BYTE PTR [rax],al
   14000924c:	add    eax,0x78000000
   140009251:	cdq    
   140009252:	add    BYTE PTR [rax],al
   140009254:	and    BYTE PTR [rax],al
   140009256:	add    BYTE PTR [rax],al
   140009258:	add    BYTE PTR [rax],al
   14000925a:	add    BYTE PTR [rax],al
   14000925c:	add    DWORD PTR [rax],eax
   14000925e:	add    BYTE PTR [rax],al
   140009260:	and    al,BYTE PTR [rip+0x21993]        # 0x14002abf9
   140009266:	add    BYTE PTR [rax],al
   140009268:	sbb    BYTE PTR [rcx+0x0],bl
   14000926e:	add    BYTE PTR [rax],al
   140009270:	add    BYTE PTR [rax],al
   140009272:	add    BYTE PTR [rax],al
   140009274:	add    al,0x0
   140009276:	add    BYTE PTR [rax],al
   140009278:	sub    BYTE PTR [rcx+0x200000],bl
   14000927e:	add    BYTE PTR [rax],al
   140009280:	add    BYTE PTR [rax],al
   140009282:	add    BYTE PTR [rax],al
   140009284:	add    DWORD PTR [rax],eax
   140009286:	add    BYTE PTR [rax],al
   140009288:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ac21
   14000928e:	add    BYTE PTR [rax],al
   140009290:	call   0x14000932d
   140009295:	add    BYTE PTR [rax],al
   140009297:	add    BYTE PTR [rax],al
   140009299:	add    BYTE PTR [rax],al
   14000929b:	add    BYTE PTR [rbx],al
   14000929d:	add    BYTE PTR [rax],al
   14000929f:	add    al,dh
   1400092a1:	cwde   
   1400092a2:	add    BYTE PTR [rax],al
   1400092a4:	and    BYTE PTR [rax],al
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	add    BYTE PTR [rax],al
   1400092aa:	add    BYTE PTR [rax],al
   1400092ac:	add    DWORD PTR [rax],eax
   1400092ae:	add    BYTE PTR [rax],al
   1400092b0:	and    al,BYTE PTR [rip+0x41993]        # 0x14004ac49
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	rex.WR (bad) 
   1400092ba:	add    BYTE PTR [rax],al
   1400092bc:	add    DWORD PTR [rax],eax
   1400092be:	add    BYTE PTR [rax],al
   1400092c0:	ins    BYTE PTR es:[rdi],dx
   1400092c1:	(bad)  
   1400092c2:	add    BYTE PTR [rax],al
   1400092c4:	or     al,BYTE PTR [rax]
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	movabs al,ds:0x2000009a
   1400092d1:	add    BYTE PTR [rax],al
   1400092d3:	add    BYTE PTR [rcx],al
   1400092d5:	add    BYTE PTR [rax],al
   1400092d7:	add    BYTE PTR [rdx],ah
   1400092d9:	add    eax,0x21993
   1400092de:	add    BYTE PTR [rax],al
   1400092e0:	hlt    
   1400092e1:	cdq    
	...
   1400092ea:	add    BYTE PTR [rax],al
   1400092ec:	add    eax,0x8000000
   1400092f1:	(bad)  
   1400092f2:	add    BYTE PTR [rax],al
   1400092f4:	xor    BYTE PTR [rax],al
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	add    BYTE PTR [rax],al
   1400092fa:	add    BYTE PTR [rax],al
   1400092fc:	add    DWORD PTR [rax],eax
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	and    al,BYTE PTR [rip+0x51993]        # 0x14005ac99
   140009306:	add    BYTE PTR [rax],al
   140009308:	sub    BYTE PTR [rbx+0x0],bl
   14000930e:	add    BYTE PTR [rax],al
   140009310:	add    BYTE PTR [rax],al
   140009312:	add    BYTE PTR [rax],al
   140009314:	or     eax,DWORD PTR [rax]
   140009316:	add    BYTE PTR [rax],al
   140009318:	push   rax
   140009319:	fwait
   14000931a:	add    BYTE PTR [rax],al
   14000931c:	push   rax
   14000931d:	add    BYTE PTR [rax],al
   14000931f:	add    BYTE PTR [rax],al
   140009321:	add    BYTE PTR [rax],al
   140009323:	add    BYTE PTR [rcx],al
   140009325:	add    BYTE PTR [rax],al
   140009327:	add    BYTE PTR [rdx],ah
   140009329:	add    eax,0x11993
   14000932e:	add    BYTE PTR [rax],al
   140009330:	and    BYTE PTR [rsi+0x0],bl
   140009336:	add    BYTE PTR [rax],al
   140009338:	add    BYTE PTR [rax],al
   14000933a:	add    BYTE PTR [rax],al
   14000933c:	add    eax,DWORD PTR [rax]
   14000933e:	add    BYTE PTR [rax],al
   140009340:	sub    BYTE PTR [rsi+0x780000],bl
   140009346:	add    BYTE PTR [rax],al
   140009348:	add    BYTE PTR [rax],al
   14000934a:	add    BYTE PTR [rax],al
   14000934c:	add    DWORD PTR [rax],eax
   14000934e:	add    BYTE PTR [rax],al
   140009350:	and    al,BYTE PTR [rip+0x21993]        # 0x14002ace9
   140009356:	add    BYTE PTR [rax],al
   140009358:	pushf  
   140009359:	popf   
	...
   140009362:	add    BYTE PTR [rax],al
   140009364:	or     al,BYTE PTR [rax]
   140009366:	add    BYTE PTR [rax],al
   140009368:	mov    al,0x9d
   14000936a:	add    BYTE PTR [rax],al
   14000936c:	push   0x0
   140009371:	add    BYTE PTR [rax],al
   140009373:	add    BYTE PTR [rcx],al
   140009375:	add    BYTE PTR [rax],al
   140009377:	add    BYTE PTR [rdx],ah
   140009379:	add    eax,0x71993
   14000937e:	add    BYTE PTR [rax],al
   140009380:	(bad)  
   140009381:	fwait
	...
   14000938a:	add    BYTE PTR [rax],al
   14000938c:	or     al,BYTE PTR [rax]
   14000938e:	add    BYTE PTR [rax],al
   140009390:	add    BYTE PTR [rax+rax*1+0x2000],bl
   140009397:	add    BYTE PTR [rax],al
   140009399:	add    BYTE PTR [rax],al
   14000939b:	add    BYTE PTR [rcx],al
   14000939d:	add    BYTE PTR [rax],al
   14000939f:	add    BYTE PTR [rdx],ah
   1400093a1:	add    eax,0x71993
   1400093a6:	add    BYTE PTR [rax],al
   1400093a8:	mov    WORD PTR [rax+rax*1+0x0],ds
   1400093af:	add    BYTE PTR [rax],al
   1400093b1:	add    BYTE PTR [rax],al
   1400093b3:	add    BYTE PTR [rbx],cl
   1400093b5:	add    BYTE PTR [rax],al
   1400093b7:	add    al,dl
   1400093b9:	pushf  
   1400093ba:	add    BYTE PTR [rax],al
   1400093bc:	and    BYTE PTR [rax],al
   1400093be:	add    BYTE PTR [rax],al
   1400093c0:	add    BYTE PTR [rax],al
   1400093c2:	add    BYTE PTR [rax],al
   1400093c4:	add    DWORD PTR [rax],eax
   1400093c6:	add    BYTE PTR [rax],al
   1400093c8:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ad61
   1400093ce:	add    BYTE PTR [rax],al
   1400093d0:	clc    
   1400093d1:	sahf   
	...
   1400093da:	add    BYTE PTR [rax],al
   1400093dc:	add    eax,DWORD PTR [rax]
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	add    BYTE PTR [rdi+0x680000],bl
   1400093e6:	add    BYTE PTR [rax],al
   1400093e8:	add    BYTE PTR [rax],al
   1400093ea:	add    BYTE PTR [rax],al
   1400093ec:	add    DWORD PTR [rax],eax
   1400093ee:	add    BYTE PTR [rax],al
   1400093f0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ad89
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	mov    al,0x9e
	...
   140009402:	add    BYTE PTR [rax],al
   140009404:	add    eax,DWORD PTR [rax]
   140009406:	add    BYTE PTR [rax],al
   140009408:	mov    eax,0x2000009e
   14000940d:	add    BYTE PTR [rax],al
   14000940f:	add    BYTE PTR [rax],al
   140009411:	add    BYTE PTR [rax],al
   140009413:	add    BYTE PTR [rcx],al
   140009415:	add    BYTE PTR [rax],al
   140009417:	add    BYTE PTR [rdx],ah
   140009419:	add    eax,0x41993
   14000941e:	add    BYTE PTR [rax],al
   140009420:	xor    BYTE PTR [rdi+0x0],bl
   140009426:	add    BYTE PTR [rax],al
   140009428:	add    BYTE PTR [rax],al
   14000942a:	add    BYTE PTR [rax],al
   14000942c:	(bad)  
   14000942d:	add    BYTE PTR [rax],al
   14000942f:	add    BYTE PTR [rax-0x61],dl
   140009432:	add    BYTE PTR [rax],al
   140009434:	and    BYTE PTR [rax],al
   140009436:	add    BYTE PTR [rax],al
   140009438:	add    BYTE PTR [rax],al
   14000943a:	add    BYTE PTR [rax],al
   14000943c:	add    DWORD PTR [rax],eax
   14000943e:	add    BYTE PTR [rax],al
   140009440:	and    al,BYTE PTR [rip+0x11993]        # 0x14001add9
   140009446:	add    BYTE PTR [rax],al
   140009448:	movabs al,ds:0x9f
   140009451:	add    BYTE PTR [rax],al
   140009453:	add    BYTE PTR [rbx],al
   140009455:	add    BYTE PTR [rax],al
   140009457:	add    BYTE PTR [rax+0x3000009f],ch
   14000945d:	add    BYTE PTR [rax],al
   14000945f:	add    BYTE PTR [rax],al
   140009461:	add    BYTE PTR [rax],al
   140009463:	add    BYTE PTR [rcx],al
   140009465:	add    BYTE PTR [rax],al
   140009467:	add    BYTE PTR [rdx],ah
   140009469:	add    eax,0x11993
   14000946e:	add    BYTE PTR [rax],al
   140009470:	lock lahf 
	...
   14000947a:	add    BYTE PTR [rax],al
   14000947c:	add    eax,DWORD PTR [rax]
   14000947e:	add    BYTE PTR [rax],al
   140009480:	clc    
   140009481:	lahf   
   140009482:	add    BYTE PTR [rax],al
   140009484:	(bad)  
   140009485:	add    BYTE PTR [rax],al
   140009487:	add    BYTE PTR [rax],al
   140009489:	add    BYTE PTR [rax],al
   14000948b:	add    BYTE PTR [rcx],al
   14000948d:	add    BYTE PTR [rax],al
   14000948f:	add    BYTE PTR [rdx],ah
   140009491:	add    eax,0x11993
   140009496:	add    BYTE PTR [rax],al
   140009498:	enter  0xa1,0x0
	...
   1400094a4:	add    eax,DWORD PTR [rax]
   1400094a6:	add    BYTE PTR [rax],al
   1400094a8:	shl    BYTE PTR [rcx+0x400000],1
   1400094ae:	add    BYTE PTR [rax],al
   1400094b0:	add    BYTE PTR [rax],al
   1400094b2:	add    BYTE PTR [rax],al
   1400094b4:	add    DWORD PTR [rax],eax
   1400094b6:	add    BYTE PTR [rax],al
   1400094b8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002ae51
   1400094be:	add    BYTE PTR [rax],al
   1400094c0:	add    al,0xa1
	...
   1400094ca:	add    BYTE PTR [rax],al
   1400094cc:	add    eax,0x18000000
   1400094d1:	movabs eax,ds:0x500000
   1400094da:	add    BYTE PTR [rax],al
   1400094dc:	add    DWORD PTR [rax],eax
   1400094de:	add    BYTE PTR [rax],al
   1400094e0:	and    al,BYTE PTR [rip+0x21993]        # 0x14002ae79
   1400094e6:	add    BYTE PTR [rax],al
   1400094e8:	test   al,0xa0
	...
   1400094f2:	add    BYTE PTR [rax],al
   1400094f4:	add    eax,0xb8000000
   1400094f9:	movabs al,ds:0x900000
   140009502:	add    BYTE PTR [rax],al
   140009504:	add    DWORD PTR [rax],eax
   140009506:	add    BYTE PTR [rax],al
   140009508:	and    al,BYTE PTR [rip+0x11993]        # 0x14001aea1
   14000950e:	add    BYTE PTR [rax],al
   140009510:	pop    rax
   140009511:	movabs eax,ds:0x0
   14000951a:	add    BYTE PTR [rax],al
   14000951c:	add    eax,DWORD PTR [rax]
   14000951e:	add    BYTE PTR [rax],al
   140009520:	(bad)  
   140009521:	movabs eax,ds:0x200000
   14000952a:	add    BYTE PTR [rax],al
   14000952c:	add    DWORD PTR [rax],eax
   14000952e:	add    BYTE PTR [rax],al
   140009530:	add    BYTE PTR [rax],al
   140009532:	add    BYTE PTR [rax],al
   140009534:	jge    0x14000956f
   140009536:	lahf   
   140009537:	push   rbp
   140009538:	add    BYTE PTR [rax],al
   14000953a:	add    BYTE PTR [rax],al
   14000953c:	add    al,BYTE PTR [rax]
   14000953e:	add    BYTE PTR [rax],al
   140009540:	and    al,0x0
   140009542:	add    BYTE PTR [rax],al
   140009544:	xor    BYTE PTR [rsi-0x75d00000],dl
   14000954a:	add    BYTE PTR [rax],al
   14000954c:	add    BYTE PTR [rax],al
   14000954e:	add    BYTE PTR [rax],al
   140009550:	jge    0x14000958b
   140009552:	lahf   
   140009553:	push   rbp
   140009554:	add    BYTE PTR [rax],al
   140009556:	add    BYTE PTR [rax],al
   140009558:	or     eax,0x40000000
   14000955d:	add    al,BYTE PTR [rax]
   14000955f:	add    BYTE PTR [rax-0x6a],ch
   140009562:	add    BYTE PTR [rax],al
   140009564:	push   0x8a
	...
   14000958d:	add    BYTE PTR [rax],al
   14000958f:	add    BYTE PTR [rax+0x0],ah
	...
   1400095e5:	add    BYTE PTR [rax],al
   1400095e7:	add    BYTE PTR [rax],cl
   1400095e9:	rol    BYTE PTR [rax],0x40
   1400095ec:	add    DWORD PTR [rax],eax
	...
   1400095fe:	add    BYTE PTR [rax],al
   140009600:	movabs al,ds:0xa800000001400085
   140009609:	test   DWORD PTR [rax],eax
   14000960b:	rex add DWORD PTR [rax],eax
   14000960e:	add    BYTE PTR [rax],al
   140009610:	or     BYTE PTR [rsi+0x14000],al
   140009616:	add    BYTE PTR [rax],al
   140009618:	push   rax
	...
   140009621:	xor    eax,0x0
	...
   14000962e:	add    BYTE PTR [rax],al
   140009630:	push   rdx
   140009631:	push   rbx
   140009632:	rex.R push rbx
   140009634:	(bad)  
   140009635:	retf   0x116a
   140009638:	or     al,0x77
   14000963a:	add    al,0x40
   14000963c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000963d:	sbb    dh,BYTE PTR [rbx]
   14000963f:	(bad)  
   140009640:	(bad)  
   140009641:	xchg   ebx,eax
   140009642:	pop    rdx
   140009643:	push   rbp
   140009644:	add    DWORD PTR [rax],eax
   140009646:	add    BYTE PTR [rax],al
   140009648:	jae    0x1400096ad
   14000964a:	jb     0x1400096af
   14000964c:	outs   dx,DWORD PTR ds:[rsi]
   14000964d:	outs   dx,BYTE PTR ds:[rsi]
   14000964e:	jae    0x14000967e
   140009650:	jo     0x1400096b6
   140009652:	(bad)  
	...
   140009667:	add    BYTE PTR [rdi+0x43],al
   14000966a:	push   rsp
   14000966b:	rex.WR add BYTE PTR [rax],r10b
   14000966e:	add    BYTE PTR [rax],al
   140009670:	icebp  
   140009671:	add    BYTE PTR [rax],al
   140009673:	add    BYTE PTR [rsi],ch
   140009675:	je     0x1400096dc
   140009677:	js     0x1400096ed
   140009679:	and    al,0x64
   14000967b:	imul   eax,DWORD PTR [rax],0x0
   140009681:	adc    DWORD PTR [rax],eax
   140009683:	add    BYTE PTR [rcx+rbp*2+0x0],bh
   140009687:	add    BYTE PTR [rsi],ch
   140009689:	je     0x1400096f0
   14000968b:	js     0x140009701
   14000968d:	and    al,0x6d
   14000968f:	outs   dx,BYTE PTR ds:[rsi]
   140009690:	add    BYTE PTR [rax],al
   140009692:	add    BYTE PTR [rax],al
   140009694:	cmp    BYTE PTR [rdx+0x0],0x0
   140009698:	adc    al,BYTE PTR [rax]
   14000969a:	add    BYTE PTR [rax],al
   14000969c:	cs je  0x140009704
   14000969f:	js     0x140009715
   1400096a1:	and    al,0x6d
   1400096a3:	outs   dx,BYTE PTR ds:[rsi]
   1400096a4:	and    al,0x30
   1400096a6:	xor    BYTE PTR [rax],al
   1400096a8:	movabs al,ds:0x2e000003b000007a
   1400096b1:	je     0x140009718
   1400096b3:	js     0x140009729
   1400096b5:	and    al,0x78
   1400096b7:	add    BYTE PTR [rax+0x7e],dl
   1400096ba:	add    BYTE PTR [rax],al
   1400096bc:	rex.WRX add BYTE PTR [rax],r8b
   1400096bf:	add    BYTE PTR [rsi],ch
   1400096c1:	je     0x140009728
   1400096c3:	js     0x140009739
   1400096c5:	and    al,0x79
   1400096c7:	add    BYTE PTR fs:[rax],al
   1400096ca:	add    BYTE PTR [rax],al
   1400096cc:	add    BYTE PTR [rax+0x5a00000],al
   1400096d2:	add    BYTE PTR [rax],al
   1400096d4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   1400096dd:	add    BYTE PTR [rax],al
   1400096df:	add    BYTE PTR [rax+0x10000085],ah
   1400096e5:	add    BYTE PTR [rax],al
   1400096e7:	add    BYTE PTR [rsi],ch
   1400096e9:	xor    BYTE PTR [rax],dh
   1400096eb:	movsxd esp,DWORD PTR [rsi+0x67]
   1400096ee:	add    BYTE PTR [rax],al
   1400096f0:	mov    al,0x85
   1400096f2:	add    BYTE PTR [rax],al
   1400096f4:	or     BYTE PTR [rax],al
   1400096f6:	add    BYTE PTR [rax],al
   1400096f8:	cs rex.XB push r10
   1400096fb:	push   rsp
   1400096fc:	and    al,0x58
   1400096fe:	rex.XB
   1400096ff:	add    BYTE PTR [r8],al
   140009702:	add    BYTE PTR [rax],al
   140009704:	mov    eax,0x8000085
   140009709:	add    BYTE PTR [rax],al
   14000970b:	add    BYTE PTR [rsi],ch
   14000970d:	rex.XB push r10
   14000970f:	push   rsp
   140009710:	and    al,0x58
   140009712:	rex.XB
   140009713:	rex.B
   140009714:	add    BYTE PTR [r8],al
   140009717:	add    al,al
   140009719:	test   DWORD PTR [rax],eax
   14000971b:	add    BYTE PTR [rax],ah
   14000971d:	add    BYTE PTR [rax],al
   14000971f:	add    BYTE PTR [rsi],ch
   140009721:	rex.XB push r10
   140009723:	push   rsp
   140009724:	and    al,0x58
   140009726:	rex.XB push r13
   140009728:	add    BYTE PTR [rax],al
   14000972a:	add    BYTE PTR [rax],al
   14000972c:	loopne 0x1400096b3
   14000972e:	add    BYTE PTR [rax],al
   140009730:	or     BYTE PTR [rax],al
   140009732:	add    BYTE PTR [rax],al
   140009734:	cs rex.XB push r10
   140009737:	push   rsp
   140009738:	and    al,0x58
   14000973a:	rex.XB pop r10
   14000973c:	add    BYTE PTR [rax],al
   14000973e:	add    BYTE PTR [rax],al
   140009740:	call   0x1480097ca
   140009745:	add    BYTE PTR [rax],al
   140009747:	add    BYTE PTR [rsi],ch
   140009749:	rex.XB push r10
   14000974b:	push   rsp
   14000974c:	and    al,0x58
   14000974e:	rex.WB
   14000974f:	add    BYTE PTR [r8],al
   140009752:	add    BYTE PTR [rax],al
   140009754:	lock test DWORD PTR [rax],eax
   140009757:	add    BYTE PTR [rax],cl
   140009759:	add    BYTE PTR [rax],al
   14000975b:	add    BYTE PTR [rsi],ch
   14000975d:	rex.XB push r10
   14000975f:	push   rsp
   140009760:	and    al,0x58
   140009762:	rex.WB
   140009763:	rex.B
   140009764:	add    BYTE PTR [r8],al
   140009767:	add    al,bh
   140009769:	test   DWORD PTR [rax],eax
   14000976b:	add    BYTE PTR [rax],cl
   14000976d:	add    BYTE PTR [rax],al
   14000976f:	add    BYTE PTR [rsi],ch
   140009771:	rex.XB push r10
   140009773:	push   rsp
   140009774:	and    al,0x58
   140009776:	rex.WB pop r9
   140009778:	add    BYTE PTR [rax],al
   14000977a:	add    BYTE PTR [rax],al
   14000977c:	add    BYTE PTR [rsi+0x80000],al
   140009782:	add    BYTE PTR [rax],al
   140009784:	cs rex.XB push r10
   140009787:	push   rsp
   140009788:	and    al,0x58
   14000978a:	rex.WB pop r10
   14000978c:	add    BYTE PTR [rax],al
   14000978e:	add    BYTE PTR [rax],al
   140009790:	or     BYTE PTR [rsi+0x1400000],al
   140009796:	add    BYTE PTR [rax],al
   140009798:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   1400097a1:	add    BYTE PTR [rax],al
   1400097a3:	add    BYTE PTR [rax-0x79],dl
   1400097a6:	add    BYTE PTR [rax],al
   1400097a8:	loopne 0x1400097b8
   1400097aa:	add    BYTE PTR [rax],al
   1400097ac:	cs jb  0x140009813
   1400097af:	(bad)  
   1400097b0:	je     0x140009813
   1400097b2:	add    BYTE PTR [rax],al
   1400097b4:	xor    BYTE PTR [rsi+0x2780000],dl
   1400097ba:	add    BYTE PTR [rax],al
   1400097bc:	cs jb  0x140009823
   1400097bf:	(bad)  
   1400097c0:	je     0x140009823
   1400097c2:	and    al,0x7a
   1400097c4:	jp     0x140009840
   1400097c6:	fs (bad) 
   1400097c8:	add    BYTE PTR [eax],al
   1400097cb:	add    BYTE PTR [rax+0x24000098],dh
   1400097d1:	or     al,BYTE PTR [rax]
   1400097d3:	add    BYTE PTR [rsi],ch
   1400097d5:	js     0x14000983b
   1400097d7:	(bad)  
   1400097d8:	je     0x14000983b
   1400097da:	add    BYTE PTR [rax],al
   1400097dc:	fsub   DWORD PTR [rdx+0xe40000]
   1400097e2:	add    BYTE PTR [rax],al
   1400097e4:	cs js  0x14000984b
   1400097e7:	(bad)  
   1400097e8:	je     0x14000984b
   1400097ea:	and    al,0x78
   1400097ec:	add    BYTE PTR [rax],al
   1400097ee:	add    BYTE PTR [rax],al
   1400097f0:	mov    esp,0x1c0000a3
   1400097f5:	add    al,BYTE PTR [rax]
   1400097f7:	add    BYTE PTR [rsi],ch
   1400097f9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140009801:	add    BYTE PTR [rax],al
   140009803:	add    al,bl
   140009805:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009806:	add    BYTE PTR [rax],al
   140009808:	adc    al,0x0
   14000980a:	add    BYTE PTR [rax],al
   14000980c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140009815:	add    BYTE PTR [rax],al
   140009817:	add    al,dh
   140009819:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000981a:	add    BYTE PTR [rax],al
   14000981c:	movabs al,ds:0x746164692e000005
   140009825:	(bad)  
   140009826:	and    al,0x34
   140009828:	add    BYTE PTR [rax],al
   14000982a:	add    BYTE PTR [rax],al
   14000982c:	nop
   14000982d:	stos   DWORD PTR es:[rdi],eax
   14000982e:	add    BYTE PTR [rax],al
   140009830:	in     al,0xf
   140009832:	add    BYTE PTR [rax],al
   140009834:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   14000983d:	add    BYTE PTR [rax],al
   14000983f:	add    BYTE PTR [rax],al
   140009841:	rol    BYTE PTR [rax],0x0
   140009844:	mov    BYTE PTR [rax],al
   140009846:	add    BYTE PTR [rax],al
   140009848:	cs fs (bad) 
   14000984b:	je     0x1400098ae
   14000984d:	add    BYTE PTR [rax],al
   14000984f:	add    BYTE PTR [rax+0x7f0000c0],cl
   140009855:	add    BYTE PTR [rax],al
   140009857:	add    BYTE PTR [rsi],ch
   140009859:	fs (bad) 
   14000985b:	je     0x1400098be
   14000985d:	and    al,0x72
   14000985f:	add    BYTE PTR [rax],dl
   140009861:	rol    DWORD PTR [rax],0x0
   140009864:	fadd   DWORD PTR [rdi]
   140009866:	add    BYTE PTR [rax],al
   140009868:	cs (bad) 
   14000986b:	jae    0x14000986d
   14000986d:	add    BYTE PTR [rax],al
   14000986f:	add    BYTE PTR [rax],al
   140009871:	rol    BYTE PTR [rax],1
   140009873:	add    BYTE PTR [rbp+rax*1+0x702e0000],ch
   14000987a:	fs (bad) 
   14000987c:	je     0x1400098df
   14000987e:	add    BYTE PTR [rax],al
   140009880:	add    al,ah
   140009882:	add    BYTE PTR [rax],al
   140009884:	lock add BYTE PTR [rax],al
   140009887:	add    BYTE PTR [rsi],ch
   140009889:	jb     0x1400098fe
   14000988b:	jb     0x1400098f0
   14000988d:	and    al,0x30
   14000988f:	xor    DWORD PTR [rax],eax
   140009891:	add    BYTE PTR [rax],al
   140009893:	add    al,dh
   140009895:	loopne 0x140009897
   140009897:	add    BYTE PTR [rax],ch
   140009899:	(bad)  
   14000989a:	add    BYTE PTR [rax],al
   14000989c:	cs jb  0x140009912
   14000989f:	jb     0x140009904
   1400098a1:	and    al,0x30
   1400098a3:	xor    al,BYTE PTR [rax]
	...
   1400098ad:	add    BYTE PTR [rax],al
   1400098af:	add    BYTE PTR [rcx],al
   1400098b1:	or     al,BYTE PTR [rax+rax*1]
   1400098b4:	or     dh,BYTE PTR [rsi+rax*1]
   1400098b7:	add    BYTE PTR [rdx],cl
   1400098b9:	xor    al,BYTE PTR [rsi]
   1400098bb:	jo     0x1400098be
   1400098bd:	adc    al,0x8
   1400098bf:	add    BYTE PTR [rsp+riz*2],dl
   1400098c2:	or     BYTE PTR [rax],al
   1400098c4:	adc    al,0x54
   1400098c6:	(bad)  
   1400098c7:	add    BYTE PTR [rsp+rsi*1],dl
   1400098ca:	(bad)  
   1400098cb:	add    BYTE PTR [rdx+rsi*1],dl
   1400098ce:	adc    BYTE PTR [rax+0x11],dh
   1400098d1:	sbb    al,0x6
   1400098d3:	add    BYTE PTR [rsp+riz*2],bl
   1400098d6:	or     al,BYTE PTR [rax]
   1400098d8:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400098db:	add    BYTE PTR [rdx+rdx*2],cl
   1400098de:	or     BYTE PTR [rax+0x38],dh
   1400098e1:	jns    0x1400098e3
   1400098e3:	add    BYTE PTR [rax-0xffff6e],cl
   1400098e9:	(bad)  
   1400098ea:	(bad)  
   1400098eb:	jmp    QWORD PTR [rsi-0x3fffff86]
   1400098f1:	adc    DWORD PTR [rax],eax
   1400098f3:	add    bh,bh
   1400098f5:	(bad)  
   1400098f6:	(bad)  
   1400098f7:	(bad)  
   1400098f8:	jmp    0x14000990e
   1400098fd:	add    BYTE PTR [rax],al
   1400098ff:	add    BYTE PTR [rbx],al
   140009901:	adc    al,BYTE PTR [rax]
   140009903:	add    bh,bh
   140009905:	(bad)  
   140009906:	(bad)  
   140009907:	call   QWORD PTR [rcx]
   140009909:	or     eax,0x62040001
   14000990e:	add    BYTE PTR [rax],al
   140009910:	cmp    BYTE PTR [rcx+0x0],bh
   140009913:	add    BYTE PTR [rax-0x6e],ah
   140009916:	add    BYTE PTR [rax],al
   140009918:	(bad)  
   140009919:	(bad)  
   14000991a:	(bad)  
   14000991b:	(bad)  
   14000991c:	mov    eax,0x7a
   140009921:	add    BYTE PTR [rax],al
   140009923:	add    dh,al
   140009925:	jp     0x140009927
   140009927:	add    BYTE PTR [rax],al
   140009929:	adc    BYTE PTR [rax],al
   14000992b:	add    bh,bh
   14000992d:	(bad)  
   14000992e:	(bad)  
   14000992f:	jmp    QWORD PTR [rax+rdx*1]
   140009932:	add    BYTE PTR [rax],al
   140009934:	add    BYTE PTR [rax],al
   140009936:	add    BYTE PTR [rax],al
   140009938:	xor    dl,BYTE PTR [rax]
   14000993a:	add    BYTE PTR [rax],al
   14000993c:	add    DWORD PTR [rax],eax
   14000993e:	add    BYTE PTR [rax],al
   140009940:	pop    rdx
   140009941:	adc    BYTE PTR [rax],al
   140009943:	add    bh,bh
   140009945:	(bad)  
   140009946:	(bad)  
   140009947:	call   QWORD PTR [rcx]
   140009949:	and    ecx,DWORD PTR [rax]
   14000994b:	add    BYTE PTR [rbx],ah
   14000994d:	push   rsp
   14000994e:	or     eax,0xb341f00
   140009953:	add    BYTE PTR [rbx],dl
   140009955:	push   rdx
   140009956:	pavgb  mm1,QWORD PTR [rip+0x38600c70]        # 0x17860a5cd
   14000995d:	jns    0x14000995f
   14000995f:	add    BYTE PTR [rax],bh
   140009961:	xchg   edx,eax
   140009962:	add    BYTE PTR [rax],al
   140009964:	(bad)  
   140009965:	(bad)  
   140009966:	(bad)  
   140009967:	(bad)  
   140009968:	fidivr WORD PTR [rdx+0x0]
   14000996b:	add    BYTE PTR [rax],al
   14000996d:	add    BYTE PTR [rax],al
   14000996f:	add    dl,ch
   140009971:	jp     0x140009973
   140009973:	add    BYTE PTR [rax],al
   140009975:	add    BYTE PTR [rax],al
   140009977:	add    BYTE PTR [rax-0xffffee],cl
   14000997d:	(bad)  
   14000997e:	(bad)  
   14000997f:	inc    esp
   140009981:	adc    al,BYTE PTR [rax]
   140009983:	add    BYTE PTR [rax],al
   140009985:	add    BYTE PTR [rax],al
   140009987:	add    BYTE PTR [rbx],al
   140009989:	adc    eax,DWORD PTR [rax]
   14000998b:	add    BYTE PTR [rcx],al
   14000998d:	add    BYTE PTR [rax],al
   14000998f:	add    BYTE PTR [rdx],ch
   140009991:	adc    eax,DWORD PTR [rax]
   140009993:	add    BYTE PTR [rax],al
   140009995:	add    BYTE PTR [rax],al
   140009997:	add    BYTE PTR [rsi],ch
   140009999:	adc    eax,DWORD PTR [rax]
   14000999b:	add    bh,bh
   14000999d:	(bad)  
   14000999e:	(bad)  
   14000999f:	inc    DWORD PTR [rcx]
   1400099a1:	clts   
   1400099a3:	add    BYTE PTR [rdi],cl
   1400099a5:	str    WORD PTR fs:[rdi]
   1400099a9:	xor    al,0xe
   1400099ab:	add    BYTE PTR [rdi],cl
   1400099ad:	mov    dl,0xb
   1400099af:	jo     0x1400099b2
   1400099b1:	sbb    DWORD PTR [rdx],ecx
   1400099b3:	add    BYTE PTR [rcx],bl
   1400099b5:	je     0x1400099c0
   1400099b7:	add    BYTE PTR [rcx],bl
   1400099b9:	or     BYTE PTR fs:[rax],al
   1400099bc:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400099c0:	sbb    DWORD PTR [rsi+rax*1],esi
   1400099c3:	add    BYTE PTR [rcx],bl
   1400099c5:	xor    dl,BYTE PTR [rip+0x60f01e0]        # 0x1460f9bab
   1400099cb:	add    BYTE PTR [rdi],cl
   1400099cd:	fs (bad) 
   1400099cf:	add    BYTE PTR [rdi],cl
   1400099d1:	xor    al,0x6
   1400099d3:	add    BYTE PTR [rdi],cl
   1400099d5:	xor    cl,BYTE PTR [rbx]
   1400099d7:	jo     0x1400099da
   1400099d9:	(bad)  
   1400099da:	add    al,BYTE PTR [rax]
   1400099dc:	(bad)  
   1400099dd:	xor    al,BYTE PTR [rdx]
   1400099df:	xor    BYTE PTR [rcx],dl
   1400099e1:	adc    al,0x4
   1400099e3:	add    BYTE PTR [rsp+rsi*1],dl
   1400099e6:	or     al,0x0
   1400099e8:	(bad)  
   1400099e9:	xchg   edx,eax
   1400099ea:	add    dh,BYTE PTR [rax+0x38]
   1400099ed:	jns    0x1400099ef
   1400099ef:	add    al,bl
   1400099f1:	xchg   edx,eax
   1400099f2:	add    BYTE PTR [rax],al
   1400099f4:	(bad)  
   1400099f5:	(bad)  
   1400099f6:	(bad)  
   1400099f7:	(bad)  
   1400099f8:	cld    
   1400099f9:	jp     0x1400099fb
   1400099fb:	add    bh,bh
   1400099fd:	(bad)  
   1400099fe:	(bad)  
   1400099ff:	dec    DWORD PTR [rax]
   140009a01:	jnp    0x140009a03
   140009a03:	add    BYTE PTR [rax],al
   140009a05:	add    BYTE PTR [rax],al
   140009a07:	add    BYTE PTR [rax-0xffffeb],dl
   140009a0d:	(bad)  
   140009a0e:	(bad)  
   140009a0f:	call   QWORD PTR [rdi]
   140009a11:	(bad)  
   140009a12:	add    BYTE PTR [rax],al
   140009a14:	add    BYTE PTR [rax],al
   140009a16:	add    BYTE PTR [rax],al
   140009a18:	rex.RB (bad) 
   140009a1a:	add    BYTE PTR [rax],al
   140009a1c:	(bad)  
   140009a1d:	(bad)  
   140009a1e:	(bad)  
   140009a1f:	jmp    FWORD PTR [rdx+0x16]
   140009a22:	add    BYTE PTR [rax],al
   140009a24:	add    DWORD PTR [rax],eax
   140009a26:	add    BYTE PTR [rax],al
   140009a28:	jbe    0x140009a40
   140009a2a:	add    BYTE PTR [rax],al
   140009a2c:	(bad)  
   140009a2d:	(bad)  
   140009a2e:	(bad)  
   140009a2f:	call   FWORD PTR [rcx]
   140009a31:	(bad)  
   140009a32:	or     BYTE PTR [rax],al
   140009a34:	(bad)  
   140009a35:	xor    al,0xd
   140009a37:	add    BYTE PTR [rcx],dl
   140009a39:	push   rdx
   140009a3a:	or     eax,0x9e00bf0
   140009a3f:	rol    BYTE PTR [rdi],0x70
   140009a42:	(bad)  
   140009a43:	(bad)  
   140009a44:	cmp    BYTE PTR [rcx+0x0],bh
   140009a47:	add    BYTE PTR [rax-0xffff6e],dh
   140009a4d:	(bad)  
   140009a4e:	(bad)  
   140009a4f:	inc    DWORD PTR [rax]
   140009a51:	add    BYTE PTR [rax],al
   140009a53:	add    BYTE PTR [rax],al
   140009a55:	add    BYTE PTR [rax],al
   140009a57:	add    BYTE PTR [rdx],bl
   140009a59:	jnp    0x140009a5b
   140009a5b:	add    BYTE PTR [rax],al
   140009a5d:	add    BYTE PTR [rax],al
   140009a5f:	add    BYTE PTR [rsi],ah
   140009a61:	jnp    0x140009a63
   140009a63:	add    bh,bh
   140009a65:	(bad)  
   140009a66:	(bad)  
   140009a67:	inc    DWORD PTR [rax]
   140009a69:	add    BYTE PTR [rax],al
   140009a6b:	add    BYTE PTR [rax],al
   140009a6d:	add    BYTE PTR [rax],al
   140009a6f:	add    BYTE PTR [rdx],al
   140009a71:	add    BYTE PTR [rax],al
   140009a73:	add    BYTE PTR [rbx],al
   140009a75:	add    BYTE PTR [rax],al
   140009a77:	add    BYTE PTR [rcx],al
   140009a79:	add    BYTE PTR [rax],al
   140009a7b:	add    BYTE PTR [rax+0x800009a],al
   140009a81:	add    BYTE PTR [rax],al
   140009a83:	add    BYTE PTR [rax+0xc0],cl
   140009a89:	add    BYTE PTR [rax],al
   140009a8b:	add    BYTE PTR [rdx],dh
   140009a8d:	jnp    0x140009a8f
   140009a8f:	add    BYTE PTR [rax],bh
	...
   140009a9d:	add    BYTE PTR [rax],al
   140009a9f:	add    BYTE PTR [rax+rbx*1-0x10000],dl
   140009aa6:	(bad)  
   140009aa7:	push   rax
   140009aa9:	sbb    BYTE PTR [rax],al
   140009aab:	add    BYTE PTR [rax],al
   140009aad:	add    BYTE PTR [rax],al
   140009aaf:	add    BYTE PTR [rbx],al
   140009ab1:	sbb    DWORD PTR [rax],eax
   140009ab3:	add    BYTE PTR [rcx],al
   140009ab5:	add    BYTE PTR [rax],al
   140009ab7:	add    BYTE PTR [rip+0x19],dh        # 0x140009ad6
   140009abd:	add    BYTE PTR [rax],al
   140009abf:	add    BYTE PTR [rbp+0x19],dl
   140009ac2:	add    BYTE PTR [rax],al
   140009ac4:	add    al,BYTE PTR [rax]
   140009ac6:	add    BYTE PTR [rax],al
   140009ac8:	int3   
   140009ac9:	sbb    DWORD PTR [rax],eax
   140009acb:	add    BYTE PTR [rax],al
   140009acd:	add    BYTE PTR [rax],al
   140009acf:	add    bl,bl
   140009ad1:	sbb    DWORD PTR [rax],eax
   140009ad3:	add    bh,bh
   140009ad5:	(bad)  
   140009ad6:	(bad)  
   140009ad7:	push   QWORD PTR [rdx]
   140009ad9:	jnp    0x140009adb
   140009adb:	add    BYTE PTR [rax],al
   140009add:	add    BYTE PTR [rax],al
   140009adf:	add    BYTE PTR [rdi],bh
   140009ae1:	jnp    0x140009ae3
   140009ae3:	add    BYTE PTR [rbx],al
   140009ae5:	add    BYTE PTR [rax],al
   140009ae7:	add    BYTE PTR [rsi+0x7b],al
   140009aea:	add    BYTE PTR [rax],al
   140009aec:	add    BYTE PTR [rax],al
   140009aee:	add    BYTE PTR [rax],al
   140009af0:	sbb    DWORD PTR [rdx],ecx
   140009af2:	add    al,BYTE PTR [rax]
   140009af4:	or     dh,BYTE PTR [rdx]
   140009af6:	(bad)  
   140009af7:	push   rax
   140009af8:	cmp    BYTE PTR [rcx+0x0],bh
   140009afb:	add    BYTE PTR [rax+0x1000092],dh
   140009b01:	add    al,0x1
   140009b03:	add    BYTE PTR [rdx+rax*2],al
   140009b06:	add    BYTE PTR [rax],al
   140009b08:	adc    DWORD PTR [rcx],esp
   140009b0a:	or     al,BYTE PTR [rax]
   140009b0c:	sbb    DWORD PTR [rcx],eax
   140009b0e:	adc    eax,DWORD PTR [rax]
   140009b10:	or     eax,0x9e00bf0
   140009b15:	rol    BYTE PTR [rdi],1
   140009b17:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143609f8e
   140009b1e:	add    dl,BYTE PTR [rax+0x38]
   140009b21:	jns    0x140009b23
   140009b23:	add    BYTE PTR [rax],al
   140009b25:	xchg   ebx,eax
   140009b26:	add    BYTE PTR [rax],al
   140009b28:	(bad)  
   140009b29:	(bad)  
   140009b2a:	(bad)  
   140009b2b:	call   FWORD PTR [rdx+0x7b]
   140009b2e:	add    BYTE PTR [rax],al
   140009b30:	add    BYTE PTR [rax],al
   140009b32:	add    BYTE PTR [rax],al
   140009b34:	data16 jnp 0x140009b37
   140009b37:	add    BYTE PTR [rcx],al
   140009b39:	add    BYTE PTR [rax],al
   140009b3b:	add    BYTE PTR [rdx+0x7b],dh
   140009b3e:	add    BYTE PTR [rax],al
   140009b40:	add    al,BYTE PTR [rax]
   140009b42:	add    BYTE PTR [rax],al
   140009b44:	jle    0x140009bc1
   140009b46:	add    BYTE PTR [rax],al
   140009b48:	add    eax,DWORD PTR [rax]
   140009b4a:	add    BYTE PTR [rax],al
   140009b4c:	mov    bh,BYTE PTR [rbx+0x0]
   140009b4f:	add    ah,dh
   140009b51:	sbb    eax,DWORD PTR [rax]
   140009b53:	add    bh,bh
   140009b55:	(bad)  
   140009b56:	(bad)  
   140009b57:	call   QWORD PTR [rdx+0x1c]
   140009b5a:	add    BYTE PTR [rax],al
   140009b5c:	add    BYTE PTR [rax],al
   140009b5e:	add    BYTE PTR [rax],al
   140009b60:	outs   dx,DWORD PTR ds:[rsi]
   140009b61:	sbb    al,0x0
   140009b63:	add    BYTE PTR [rcx],al
   140009b65:	add    BYTE PTR [rax],al
   140009b67:	add    BYTE PTR [rsi+0x200001c],bh
   140009b6d:	add    BYTE PTR [rax],al
   140009b6f:	add    bh,bl
   140009b71:	sbb    al,0x0
   140009b73:	add    BYTE PTR [rbx],al
   140009b75:	add    BYTE PTR [rax],al
   140009b77:	add    BYTE PTR [rdi],bl
   140009b79:	sbb    eax,0x40000
   140009b7e:	add    BYTE PTR [rax],al
   140009b80:	hlt    
   140009b81:	sbb    eax,0x30000
   140009b86:	add    BYTE PTR [rax],al
   140009b88:	adc    BYTE PTR [rsi],bl
   140009b8a:	add    BYTE PTR [rax],al
   140009b8c:	add    al,BYTE PTR [rax]
   140009b8e:	add    BYTE PTR [rax],al
   140009b90:	sbb    bl,BYTE PTR [rsi]
   140009b92:	add    BYTE PTR [rax],al
   140009b94:	add    DWORD PTR [rax],eax
   140009b96:	add    BYTE PTR [rax],al
   140009b98:	xor    eax,0x1e
   140009b9d:	add    BYTE PTR [rax],al
   140009b9f:	add    BYTE PTR [rdi],bh
   140009ba1:	(bad)  
   140009ba2:	add    BYTE PTR [rax],al
   140009ba4:	(bad)  
   140009ba5:	(bad)  
   140009ba6:	(bad)  
   140009ba7:	call   QWORD PTR [rcx]
   140009ba9:	(bad)  
   140009baa:	or     BYTE PTR [rax],al
   140009bac:	(bad)  
   140009bad:	push   rsp
   140009bae:	or     eax,0xb341b00
   140009bb3:	add    BYTE PTR [rdi],cl
   140009bb5:	push   rdx
   140009bb6:	or     esp,eax
   140009bb8:	or     DWORD PTR [rax+0x8],esi
   140009bbb:	(bad)  
   140009bbc:	cmp    BYTE PTR [rcx+0x0],bh
   140009bbf:	add    BYTE PTR [rax-0x6d],bh
   140009bc2:	add    BYTE PTR [rax],al
   140009bc4:	(bad)  
   140009bc5:	(bad)  
   140009bc6:	(bad)  
   140009bc7:	call   FWORD PTR [rbx+rdi*2+0x0]
   140009bce:	add    BYTE PTR [rax],al
   140009bd0:	stos   BYTE PTR es:[rdi],al
   140009bd1:	jnp    0x140009bd3
   140009bd3:	add    BYTE PTR [rcx],al
   140009bd5:	add    BYTE PTR [rax],al
   140009bd7:	add    BYTE PTR [rdx+0x200007b],bh
   140009bdd:	add    BYTE PTR [rax],al
   140009bdf:	add    ah,cl
   140009be1:	jnp    0x140009be3
   140009be3:	add    BYTE PTR [rbx],al
   140009be5:	add    BYTE PTR [rax],al
   140009be7:	add    dh,bl
   140009be9:	jnp    0x140009beb
   140009beb:	add    BYTE PTR [rax+rax*1],al
   140009bee:	add    BYTE PTR [rax],al
   140009bf0:	lock jnp 0x140009bf3
   140009bf3:	add    BYTE PTR [rip+0x2000000],al        # 0x142009bf9
   140009bf9:	jl     0x140009bfb
   140009bfb:	add    BYTE PTR [rax],al
   140009bfd:	add    BYTE PTR [rax],al
   140009bff:	add    BYTE PTR [rax-0xffffe2],al
   140009c05:	(bad)  
   140009c06:	(bad)  
   140009c07:	jmp    FWORD PTR [rsi+0x500001e]
   140009c0d:	add    BYTE PTR [rax],al
   140009c0f:	add    ch,ah
   140009c11:	(bad)  
   140009c12:	add    BYTE PTR [rax],al
   140009c14:	(bad)  
   140009c15:	add    BYTE PTR [rax],al
   140009c17:	add    BYTE PTR [rip+0x500001f],cl        # 0x145009c3c
   140009c1d:	add    BYTE PTR [rax],al
   140009c1f:	add    BYTE PTR [rcx],bl
   140009c21:	(bad)  
   140009c22:	add    BYTE PTR [rax],al
   140009c24:	add    al,0x0
   140009c26:	add    BYTE PTR [rax],al
   140009c28:	and    al,0x1f
   140009c2a:	add    BYTE PTR [rax],al
   140009c2c:	add    eax,DWORD PTR [rax]
   140009c2e:	add    BYTE PTR [rax],al
   140009c30:	(bad)  
   140009c31:	(bad)  
   140009c32:	add    BYTE PTR [rax],al
   140009c34:	add    al,BYTE PTR [rax]
   140009c36:	add    BYTE PTR [rax],al
   140009c38:	cmp    bl,BYTE PTR [rdi]
   140009c3a:	add    BYTE PTR [rax],al
   140009c3c:	add    DWORD PTR [rax],eax
   140009c3e:	add    BYTE PTR [rax],al
   140009c40:	rex.RB (bad) 
   140009c42:	add    BYTE PTR [rax],al
   140009c44:	add    BYTE PTR [rax],al
   140009c46:	add    BYTE PTR [rax],al
   140009c48:	push   rax
   140009c49:	(bad)  
   140009c4a:	add    BYTE PTR [rax],al
   140009c4c:	(bad)  
   140009c4d:	(bad)  
   140009c4e:	(bad)  
   140009c4f:	inc    DWORD PTR [rcx]
   140009c51:	add    al,0x1
   140009c53:	add    BYTE PTR [rdx+riz*2],al
   140009c56:	add    BYTE PTR [rax],al
   140009c58:	add    DWORD PTR [rbx],ecx
   140009c5a:	add    DWORD PTR [rax],eax
   140009c5c:	or     eax,DWORD PTR [rdx+0x9010000]
   140009c62:	add    DWORD PTR [rax],eax
   140009c64:	or     DWORD PTR [rdx+0x4010000],esp
   140009c6a:	add    DWORD PTR [rax],eax
   140009c6c:	add    al,0xa2
   140009c6e:	add    BYTE PTR [rax],al
   140009c70:	adc    DWORD PTR [rip+0x741d0008],ebx        # 0x1b41d9c7e
   140009c76:	or     al,BYTE PTR [rax]
   140009c78:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140009c7c:	adc    eax,0x9000834
   140009c81:	push   rdx
   140009c82:	add    eax,0x7938e0
   140009c87:	add    BYTE PTR [rax-0xffff6d],ah
   140009c8d:	(bad)  
   140009c8e:	(bad)  
   140009c8f:	call   QWORD PTR [rsi]
   140009c91:	jl     0x140009c93
   140009c93:	add    BYTE PTR [rax],al
   140009c95:	add    BYTE PTR [rax],al
   140009c97:	add    BYTE PTR [rdx],ah
   140009c99:	jl     0x140009c9b
   140009c9b:	add    BYTE PTR [rcx],al
   140009c9d:	add    BYTE PTR [rax],al
   140009c9f:	add    BYTE PTR [rax],dh
   140009ca1:	jl     0x140009ca3
   140009ca3:	add    BYTE PTR [rdx],al
   140009ca5:	add    BYTE PTR [rax],al
   140009ca7:	add    BYTE PTR [rax+0x7c],al
   140009caa:	add    BYTE PTR [rax],al
   140009cac:	add    eax,DWORD PTR [rax]
   140009cae:	add    BYTE PTR [rax],al
   140009cb0:	push   rdx
   140009cb1:	jl     0x140009cb3
   140009cb3:	add    BYTE PTR [rax+rax*1],al
   140009cb6:	add    BYTE PTR [rax],al
   140009cb8:	fs jl  0x140009cbb
   140009cbb:	add    bh,bh
   140009cbd:	(bad)  
   140009cbe:	(bad)  
   140009cbf:	push   QWORD PTR [rsi+0x7c]
	...
   140009cce:	add    BYTE PTR [rax],al
   140009cd0:	mov    al,0x21
   140009cd2:	add    BYTE PTR [rax],al
   140009cd4:	(bad)  
   140009cd5:	(bad)  
   140009cd6:	(bad)  
   140009cd7:	(bad)  
   140009cd8:	cld    
   140009cd9:	and    DWORD PTR [rax],eax
   140009cdb:	add    BYTE PTR [rax],al
   140009cdd:	add    BYTE PTR [rax],al
   140009cdf:	add    BYTE PTR [rsi],dl
   140009ce1:	and    al,BYTE PTR [rax]
   140009ce3:	add    BYTE PTR [rcx],al
   140009ce5:	add    BYTE PTR [rax],al
   140009ce7:	add    BYTE PTR [rdi],ch
   140009ce9:	and    al,BYTE PTR [rax]
   140009ceb:	add    BYTE PTR [rdx],al
   140009ced:	add    BYTE PTR [rax],al
   140009cef:	add    BYTE PTR [rdx],bh
   140009cf1:	and    al,BYTE PTR [rax]
   140009cf3:	add    BYTE PTR [rbx],al
   140009cf5:	add    BYTE PTR [rax],al
   140009cf7:	add    BYTE PTR [rbp+0x22],al
   140009cfa:	add    BYTE PTR [rax],al
   140009cfc:	add    al,0x0
   140009cfe:	add    BYTE PTR [rax],al
   140009d00:	pop    rdx
   140009d01:	and    al,BYTE PTR [rax]
   140009d03:	add    BYTE PTR [rip+0x69000000],al        # 0x1a9009d09
   140009d09:	and    al,BYTE PTR [rax]
   140009d0b:	add    BYTE PTR [rax],al
   140009d0d:	add    BYTE PTR [rax],al
   140009d0f:	add    BYTE PTR [rbp+0x22],ch
   140009d12:	add    BYTE PTR [rax],al
   140009d14:	(bad)  
   140009d15:	(bad)  
   140009d16:	(bad)  
   140009d17:	inc    DWORD PTR [rdx+riz*1+0x60000]
   140009d1e:	add    BYTE PTR [rax],al
   140009d20:	jmp    0x13f009d47
   140009d25:	(bad)  
   140009d26:	(bad)  
   140009d27:	inc    DWORD PTR [rcx]
   140009d29:	adc    eax,0x74150008
   140009d2e:	or     BYTE PTR [rax],al
   140009d30:	adc    eax,0x15000764
   140009d35:	xor    al,0x6
   140009d37:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0ae6f
   140009d3d:	sbb    al,0xc
   140009d3f:	add    BYTE PTR [rsp+riz*2],bl
   140009d42:	adc    DWORD PTR [rax],eax
   140009d44:	sbb    al,0x54
   140009d46:	adc    BYTE PTR [rax],al
   140009d48:	sbb    al,0x34
   140009d4a:	(bad)  
   140009d4b:	add    BYTE PTR [rdx+rsi*2],bl
   140009d4e:	sbb    al,dh
   140009d50:	(bad)  
   140009d51:	loopne 0x140009d67
   140009d53:	rcl    BYTE PTR [rdx],1
   140009d55:	rcl    BYTE PTR [rax],0x70
   140009d58:	sbb    DWORD PTR [rsi],ebp
   140009d5a:	or     DWORD PTR [rax],eax
   140009d5c:	sbb    eax,0x1d005964
   140009d61:	xor    al,0x58
   140009d63:	add    BYTE PTR [rip+0xe005201],bl        # 0x14e00ef6a
   140009d69:	loopne 0x140009d77
   140009d6b:	jo     0x140009d78
   140009d6d:	push   rax
   140009d6e:	add    BYTE PTR [rax],al
   140009d70:	rex.R jns 0x140009d73
   140009d73:	add    BYTE PTR [rax+0x19000002],al
   140009d79:	(bad)  
   140009d7a:	or     DWORD PTR [rax],eax
   140009d7c:	and    DWORD PTR [rdx+rbx*1],esi
   140009d7f:	add    BYTE PTR [rip+0xa001201],dl        # 0x14a00af86
   140009d85:	lock or al,ah
   140009d88:	(bad)  
   140009d89:	jo     0x140009d90
   140009d8b:	(bad)  
   140009d8c:	add    al,0x50
   140009d8e:	add    BYTE PTR [rax],al
   140009d90:	(bad)  
   140009d91:	jns    0x140009d93
   140009d93:	add    BYTE PTR [rax-0x6d],dl
   140009d96:	add    BYTE PTR [rax],al
   140009d98:	mov    al,BYTE PTR [rax]
   140009d9a:	add    BYTE PTR [rax],al
   140009d9c:	(bad)  
   140009d9d:	(bad)  
   140009d9e:	(bad)  
   140009d9f:	dec    DWORD PTR [rax+0x7c]
   140009da5:	add    BYTE PTR [rax],al
   140009da7:	add    BYTE PTR [rsp+rdi*2+0x0],dl
   140009dae:	add    BYTE PTR [rax],al
   140009db0:	and    BYTE PTR [rax],ch
   140009db2:	add    BYTE PTR [rax],al
   140009db4:	(bad)  
   140009db5:	(bad)  
   140009db6:	(bad)  
   140009db7:	jmp    FWORD PTR [rbx+0x28]
   140009dbd:	add    BYTE PTR [rax],al
   140009dbf:	add    BYTE PTR [rax+0x1000029],dh
   140009dc5:	add    BYTE PTR [rax],al
   140009dc7:	add    BYTE PTR [rbx+rbp*1],ch
   140009dca:	add    BYTE PTR [rax],al
   140009dcc:	add    BYTE PTR [rax],al
   140009dce:	add    BYTE PTR [rax],al
   140009dd0:	cmp    ebp,DWORD PTR [rbx]
   140009dd2:	add    BYTE PTR [rax],al
   140009dd4:	add    DWORD PTR [rax],eax
   140009dd6:	add    BYTE PTR [rax],al
   140009dd8:	movabs al,ds:0xab0000000000002b
   140009de1:	sub    eax,DWORD PTR [rax]
   140009de3:	add    bh,bh
   140009de5:	(bad)  
   140009de6:	(bad)  
   140009de7:	(bad)  
   140009de8:	mov    eax,0x100002b
   140009ded:	add    BYTE PTR [rax],al
   140009def:	add    bl,bl
   140009df1:	sub    eax,DWORD PTR [rax]
   140009df3:	add    BYTE PTR [rax],al
   140009df5:	add    BYTE PTR [rax],al
   140009df7:	add    BYTE PTR [rdx],cl
   140009df9:	sub    al,0x0
   140009dfb:	add    bh,bh
   140009dfd:	(bad)  
   140009dfe:	(bad)  
   140009dff:	call   QWORD PTR [rcx]
   140009e01:	(bad)  
   140009e02:	or     DWORD PTR [rax],eax
   140009e04:	(bad)  
   140009e05:	add    DWORD PTR [rdx],ebx
   140009e07:	add    BYTE PTR [rbx],cl
   140009e09:	lock or eax,esp
   140009e0c:	(bad)  
   140009e0d:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360a284
   140009e14:	add    dl,BYTE PTR [rax+0x0]
   140009e17:	add    BYTE PTR [rax],bh
   140009e19:	jns    0x140009e1b
   140009e1b:	add    BYTE PTR [rax],ch
   140009e1d:	xchg   ebx,eax
   140009e1e:	add    BYTE PTR [rax],al
   140009e20:	(bad)  
   140009e21:	(bad)  
   140009e22:	(bad)  
   140009e23:	jmp    FWORD PTR [rax+0x5000007c]
   140009e29:	sub    al,0x0
   140009e2b:	add    bh,bh
   140009e2d:	(bad)  
   140009e2e:	(bad)  
   140009e2f:	inc    ecx
   140009e31:	(bad)  
   140009e32:	add    BYTE PTR [rax],al
   140009e34:	add    BYTE PTR [rax],al
   140009e36:	add    BYTE PTR [rax],al
   140009e38:	and    esi,DWORD PTR [rax]
   140009e3a:	add    BYTE PTR [rax],al
   140009e3c:	(bad)  
   140009e3d:	(bad)  
   140009e3e:	(bad)  
   140009e3f:	inc    DWORD PTR [rcx]
   140009e41:	adc    al,0xa
   140009e43:	add    BYTE PTR [rsp+rsi*1],dl
   140009e46:	adc    DWORD PTR [rax],eax
   140009e48:	adc    al,0x72
   140009e4a:	adc    al,dh
   140009e4c:	(bad)  
   140009e4d:	loopne 0x140009e5b
   140009e4f:	ror    BYTE PTR [rdx],1
   140009e51:	ror    BYTE PTR [rax],0x70
   140009e54:	(bad)  
   140009e55:	(bad)  
   140009e56:	(bad)  
   140009e57:	push   rax
   140009e58:	sbb    DWORD PTR [rcx],ebp
   140009e5a:	or     al,BYTE PTR [rax]
   140009e5c:	sbb    dl,BYTE PTR [rax+rbx*1+0x0]
   140009e60:	sbb    dh,BYTE PTR [rdi+rdx*1]
   140009e63:	add    BYTE PTR [rdx],bl
   140009e65:	repnz adc esi,eax
   140009e68:	adc    eax,esp
   140009e6a:	xadd   BYTE PTR [rip+0x44600c70],cl        # 0x18460aae1
   140009e71:	jns    0x140009e73
   140009e73:	add    BYTE PTR [rax+0x0],dh
   140009e76:	add    BYTE PTR [rax],al
   140009e78:	add    DWORD PTR [rcx],ecx
   140009e7a:	add    DWORD PTR [rax],eax
   140009e7c:	or     DWORD PTR [rdx+0x0],eax
   140009e7f:	add    BYTE PTR [rcx],al
   140009e81:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e42b087
   140009e87:	jo     0x140009e96
   140009e89:	(bad)  
   140009e8a:	or     al,0x50
   140009e8c:	or     esi,DWORD PTR [rax]
   140009e8e:	add    BYTE PTR [rax],al
   140009e90:	adc    DWORD PTR [rax],esp
   140009e92:	or     al,BYTE PTR [rax]
   140009e94:	and    BYTE PTR [rbp+rcx*1+0x0],ah
   140009e98:	sbb    al,0x54
   140009e9a:	or     al,0x0
   140009e9c:	sbb    BYTE PTR [rbx+rcx*1],dh
   140009e9f:	add    BYTE PTR [rdx+rdx*2],cl
   140009ea2:	or     al,dh
   140009ea4:	(bad)  
   140009ea5:	loopne 0x140009eab
   140009ea7:	jo     0x140009ee1
   140009ea9:	jns    0x140009eab
   140009eab:	add    al,dh
   140009ead:	xchg   ebx,eax
   140009eae:	add    BYTE PTR [rax],al
   140009eb0:	(bad)  
   140009eb1:	(bad)  
   140009eb2:	(bad)  
   140009eb3:	(bad)  
   140009eb4:	mov    edx,0x1000007c
   140009eb9:	cmp    al,BYTE PTR [rax]
   140009ebb:	add    bh,bh
   140009ebd:	(bad)  
   140009ebe:	(bad)  
   140009ebf:	inc    DWORD PTR [rbp+0x3a]
   140009ec2:	add    BYTE PTR [rax],al
   140009ec4:	add    BYTE PTR [rax],al
   140009ec6:	add    BYTE PTR [rax],al
   140009ec8:	ret    0x3a
   140009ecb:	add    bh,bh
   140009ecd:	(bad)  
   140009ece:	(bad)  
   140009ecf:	call   FWORD PTR [rcx]
   140009ed1:	xor    eax,0x7427000b
   140009ed6:	sbb    eax,DWORD PTR [rax]
   140009ed8:	and    esp,DWORD PTR [rdx+rbx*1+0x0]
   140009edc:	(bad)  
   140009edd:	xor    al,0x19
   140009edf:	add    BYTE PTR [rbx],dl
   140009ee1:	add    DWORD PTR [rax+rax*1],edx
   140009ee4:	or     al,dh
   140009ee6:	(bad)  
   140009ee7:	loopne 0x140009eed
   140009ee9:	push   rax
   140009eea:	add    BYTE PTR [rax],al
   140009eec:	(bad)  
   140009eed:	jns    0x140009eef
   140009eef:	add    al,cl
   140009ef1:	xchg   ebx,eax
   140009ef2:	add    BYTE PTR [rax],al
   140009ef4:	xchg   edx,eax
   140009ef5:	add    BYTE PTR [rax],al
   140009ef7:	add    bh,bh
   140009ef9:	(bad)  
   140009efa:	(bad)  
   140009efb:	dec    esi
   140009efd:	jl     0x140009eff
   140009eff:	add    BYTE PTR [rax],cl
   140009f01:	cmp    eax,DWORD PTR [rax]
   140009f03:	add    bh,bh
   140009f05:	(bad)  
   140009f06:	(bad)  
   140009f07:	call   QWORD PTR [rdi+0x3c]
   140009f0d:	add    BYTE PTR [rax],al
   140009f0f:	add    BYTE PTR [rbx-0xffffc4],bh
   140009f15:	(bad)  
   140009f16:	(bad)  
   140009f17:	call   QWORD PTR [rcx]
   140009f19:	sbb    eax,DWORD PTR [rsi]
   140009f1b:	add    BYTE PTR [rbx],bl
   140009f1d:	xor    al,0xc
   140009f1f:	add    BYTE PTR [rdi],cl
   140009f21:	push   rdx
   140009f22:	or     esp,eax
   140009f24:	or     DWORD PTR [rax+0x8],esi
   140009f27:	(bad)  
   140009f28:	cmp    BYTE PTR [rcx+0x0],bh
   140009f2b:	add    BYTE PTR [rax],bl
   140009f2d:	xchg   esp,eax
   140009f2e:	add    BYTE PTR [rax],al
   140009f30:	(bad)  
   140009f31:	(bad)  
   140009f32:	(bad)  
   140009f33:	jmp    rdx
   140009f35:	jl     0x140009f37
   140009f37:	add    BYTE PTR [rax],al
   140009f39:	add    BYTE PTR [rax],al
   140009f3b:	add    al,dh
   140009f3d:	jl     0x140009f3f
   140009f3f:	add    BYTE PTR [rcx],al
   140009f41:	add    BYTE PTR [rax],al
   140009f43:	add    BYTE PTR [rdx],al
   140009f45:	jge    0x140009f47
   140009f47:	add    BYTE PTR [rdx],al
   140009f49:	add    BYTE PTR [rax],al
   140009f4b:	add    BYTE PTR [rdi],dl
   140009f4d:	jge    0x140009f4f
   140009f4f:	add    BYTE PTR [rbp+rdi*1-0x10000],cl
   140009f56:	(bad)  
   140009f57:	push   QWORD PTR [rdx+0x200003d]
   140009f5d:	add    BYTE PTR [rax],al
   140009f5f:	add    BYTE PTR [rbp+0x300003e],al
   140009f65:	add    BYTE PTR [rax],al
   140009f67:	add    dh,bl
   140009f69:	add    BYTE PTR ds:[rax],al
   140009f6c:	add    al,BYTE PTR [rax]
   140009f6e:	add    BYTE PTR [rax],al
   140009f70:	(bad)  
   140009f71:	(bad)  
   140009f72:	add    BYTE PTR [rax],al
   140009f74:	add    DWORD PTR [rax],eax
   140009f76:	add    BYTE PTR [rax],al
   140009f78:	sbb    al,0x3f
   140009f7a:	add    BYTE PTR [rax],al
   140009f7c:	add    BYTE PTR [rax],al
   140009f7e:	add    BYTE PTR [rax],al
   140009f80:	sub    bh,BYTE PTR [rdi]
   140009f82:	add    BYTE PTR [rax],al
   140009f84:	(bad)  
   140009f85:	(bad)  
   140009f86:	(bad)  
   140009f87:	call   QWORD PTR [rcx]
   140009f89:	sbb    eax,DWORD PTR [rsi]
   140009f8b:	add    BYTE PTR [rbx],bl
   140009f8d:	xor    al,0xd
   140009f8f:	add    BYTE PTR [rdi],cl
   140009f91:	jb     0x140009f9e
   140009f93:	lock or DWORD PTR [rax+0x8],esi
   140009f97:	(bad)  
   140009f98:	cmp    BYTE PTR [rcx+0x0],bh
   140009f9b:	add    BYTE PTR [rax-0x6c],al
   140009f9e:	add    BYTE PTR [rax],al
   140009fa0:	(bad)  
   140009fa1:	(bad)  
   140009fa2:	(bad)  
   140009fa3:	jmp    FWORD PTR [rbx]
   140009fa5:	jge    0x140009fa7
   140009fa7:	add    BYTE PTR [rax+0x3f],cl
   140009faa:	add    BYTE PTR [rax],al
   140009fac:	(bad)  
   140009fad:	(bad)  
   140009fae:	(bad)  
   140009faf:	inc    DWORD PTR [rcx+0x3f]
   140009fb5:	add    BYTE PTR [rax],al
   140009fb7:	add    BYTE PTR [rdx+0x40],al
   140009fba:	add    BYTE PTR [rax],al
   140009fbc:	(bad)  
   140009fbd:	(bad)  
   140009fbe:	(bad)  
   140009fbf:	inc    DWORD PTR [rcx]
   140009fc1:	adc    al,0x6
   140009fc3:	add    BYTE PTR [rsp+riz*2],dl
   140009fc6:	lldt   WORD PTR [rsp+rsi*1]
   140009fca:	(bad)  
   140009fcb:	add    BYTE PTR [rdx+rdx*4],dl
   140009fce:	adc    BYTE PTR [rax+0x11],dh
   140009fd1:	sub    BYTE PTR [rdx],cl
   140009fd3:	add    BYTE PTR [rax],ch
   140009fd5:	xor    al,0x19
   140009fd7:	add    BYTE PTR [rdx+rsi*8],bl
   140009fda:	adc    dh,al
   140009fdc:	adc    al,ah
   140009fde:	(bad)  
   140009fdf:	ror    BYTE PTR [rax+rax*8],1
   140009fe2:	or     dh,BYTE PTR [rax+0x9]
   140009fe5:	(bad)  
   140009fe6:	or     BYTE PTR [rax+0x38],dl
   140009fe9:	jns    0x140009feb
   140009feb:	add    BYTE PTR [rax-0x6c],ch
   140009fee:	add    BYTE PTR [rax],al
   140009ff0:	(bad)  
   140009ff1:	(bad)  
   140009ff2:	(bad)  
   140009ff3:	(bad)  
   140009ff4:	(bad)  
   140009ff5:	jge    0x140009ff7
   140009ff7:	add    ah,dl
   140009ff9:	add    BYTE PTR [r8],al
   140009ffc:	(bad)  
   140009ffd:	(bad)  
   140009ffe:	(bad)  
   140009fff:	call   FWORD PTR [rip+0x42]        # 0x14000a047
   14000a005:	add    BYTE PTR [rax],al
   14000a007:	add    BYTE PTR [rbx+rax*2],al
   14000a00a:	add    BYTE PTR [rax],al
   14000a00c:	(bad)  
   14000a00d:	(bad)  
   14000a00e:	(bad)  
   14000a00f:	dec    DWORD PTR [rcx]
   14000a011:	or     al,BYTE PTR [rdx]
   14000a013:	add    BYTE PTR [rdx],cl
   14000a015:	xor    al,BYTE PTR [rsi]
   14000a017:	xor    BYTE PTR [rsi+0x76],dl
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	add    DWORD PTR [rax],eax
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	rex
   14000a021:	add    BYTE PTR [r8],r8b
   14000a024:	rex.WXB
   14000a025:	add    BYTE PTR [r8],r8b
   14000a028:	push   rbx
   14000a029:	jge    0x14000a02b
   14000a02b:	add    BYTE PTR [rbx+0x45],cl
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	add    DWORD PTR [rsi],eax
   14000a032:	add    al,BYTE PTR [rax]
   14000a034:	(bad)  
   14000a035:	xor    al,BYTE PTR [rdx]
   14000a037:	push   rax
   14000a038:	add    DWORD PTR [rcx+rax*1],eax
   14000a03b:	add    BYTE PTR [rdx+rax*4],al
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	or     DWORD PTR [rcx+rax*1],eax
   14000a043:	add    BYTE PTR [rdx+rax*2],al
   14000a046:	add    BYTE PTR [rax],al
   14000a048:	push   rsi
   14000a049:	jbe    0x14000a04b
   14000a04b:	add    BYTE PTR [rcx],al
   14000a04d:	add    BYTE PTR [rax],al
   14000a04f:	add    BYTE PTR [rax],ch
   14000a051:	rex.RXB add BYTE PTR [r8],r8b
   14000a054:	xor    BYTE PTR [rdi+0x0],al
   14000a057:	add    BYTE PTR [rcx],al
   14000a059:	add    BYTE PTR [rax],al
   14000a05b:	add    BYTE PTR [rax],dh
   14000a05d:	rex.RXB add BYTE PTR [r8],r8b
   14000a060:	sbb    DWORD PTR [rdi],esp
   14000a062:	or     DWORD PTR [rax],eax
   14000a064:	adc    eax,0x15002f54
   14000a069:	xor    al,0x2d
   14000a06b:	add    BYTE PTR [rip+0xe002801],dl        # 0x14e00c872
   14000a071:	loopne 0x14000a07f
   14000a073:	jo     0x14000a080
   14000a075:	(bad)  
   14000a076:	add    BYTE PTR [rax],al
   14000a078:	rex.R jns 0x14000a07b
   14000a07b:	add    BYTE PTR [rax],dh
   14000a07d:	add    DWORD PTR [rax],eax
   14000a07f:	add    BYTE PTR [rcx],bl
   14000a081:	cmp    ecx,DWORD PTR [rbx]
   14000a083:	add    BYTE PTR [rdx],ch
   14000a085:	je     0x14000a046
   14000a087:	add    BYTE PTR [rsi],ah
   14000a089:	fs mov esi,0xbd342200
   14000a08f:	add    BYTE PTR [rsi],dl
   14000a091:	add    DWORD PTR [rax+0x6f00800],edi
   14000a097:	loopne 0x14000a09d
   14000a099:	push   rax
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	(bad)  
   14000a09d:	jns    0x14000a09f
   14000a09f:	add    al,ah
   14000a0a1:	xchg   esp,eax
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	mov    dl,0x5
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	(bad)  
   14000a0a9:	(bad)  
   14000a0aa:	(bad)  
   14000a0ab:	(bad)  
   14000a0ac:	jge    0x14000a12b
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	add    BYTE PTR [rax],al
   14000a0b2:	add    BYTE PTR [rax],al
   14000a0b4:	mov    DWORD PTR [rbp+0x0],edi
   14000a0b7:	add    al,dl
   14000a0b9:	rex.WB add BYTE PTR [r8],al
   14000a0bc:	(bad)  
   14000a0bd:	(bad)  
   14000a0be:	(bad)  
   14000a0bf:	dec    DWORD PTR [rax]
   14000a0c1:	rex.WXB add BYTE PTR [r8],al
   14000a0c4:	add    BYTE PTR [rax],al
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	adc    ecx,DWORD PTR [rbp+0x0]
   14000a0cb:	add    BYTE PTR [rcx],al
   14000a0cd:	add    BYTE PTR [rax],al
   14000a0cf:	add    cl,cl
   14000a0d1:	rex.WRX add BYTE PTR [rax],r8b
   14000a0d4:	add    BYTE PTR [rax],al
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	in     eax,0x4e
   14000a0da:	add    BYTE PTR [rax],al
   14000a0dc:	(bad)  
   14000a0dd:	(bad)  
   14000a0de:	(bad)  
   14000a0df:	call   FWORD PTR [rcx]
   14000a0e1:	cmp    BYTE PTR [rcx],cl
   14000a0e3:	add    BYTE PTR [rdi],ah
   14000a0e5:	fs je  0x14000a0e8
   14000a0e8:	and    esi,DWORD PTR [rbx+rsi*2]
   14000a0eb:	add    BYTE PTR [rsi],dl
   14000a0ed:	add    DWORD PTR [rsi+0x0],ebp
   14000a0f0:	or     al,dh
   14000a0f2:	(bad)  
   14000a0f3:	loopne 0x14000a0f9
   14000a0f5:	push   rax
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	(bad)  
   14000a0f9:	jns    0x14000a0fb
   14000a0fb:	add    BYTE PTR [rax+0x62000094],bh
   14000a101:	add    eax,DWORD PTR [rax]
   14000a103:	add    bh,bh
   14000a105:	(bad)  
   14000a106:	(bad)  
   14000a107:	call   FWORD PTR [rbx-0xffff83]
   14000a10d:	(bad)  
   14000a10e:	(bad)  
   14000a10f:	jmp    QWORD PTR [rdi+0x7d]
   14000a115:	add    BYTE PTR [rax],al
   14000a117:	add    BYTE PTR [rdi+rcx*2],dh
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	(bad)  
   14000a11d:	(bad)  
   14000a11e:	(bad)  
   14000a11f:	call   QWORD PTR [rbx]
   14000a121:	push   rax
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	add    BYTE PTR [rax],al
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	jbe    0x14000a17a
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	(bad)  
   14000a12d:	(bad)  
   14000a12e:	(bad)  
   14000a12f:	call   QWORD PTR [rcx]
   14000a131:	push   rcx
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	add    DWORD PTR [rax],eax
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	ins    BYTE PTR es:[rdi],dx
   14000a139:	push   rcx
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	(bad)  
   14000a13d:	(bad)  
   14000a13e:	(bad)  
   14000a13f:	call   QWORD PTR [rcx]
   14000a141:	sbb    al,0x6
   14000a143:	add    BYTE PTR [rsp+rdx*2],bl
   14000a146:	or     DWORD PTR [rax],eax
   14000a148:	sbb    BYTE PTR [rax+rcx*1],dh
   14000a14b:	add    BYTE PTR [rdx+rdx*2],cl
   14000a14e:	or     BYTE PTR [rax+0x38],dh
   14000a151:	jns    0x14000a153
   14000a153:	add    BYTE PTR [rax],cl
   14000a155:	xchg   ebp,eax
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	(bad)  
   14000a159:	(bad)  
   14000a15a:	(bad)  
   14000a15b:	(bad)  
   14000a15c:	mov    ecx,0x1400007d
   14000a161:	push   rdx
   14000a162:	add    BYTE PTR [rax],al
   14000a164:	(bad)  
   14000a165:	(bad)  
   14000a166:	(bad)  
   14000a167:	call   rbp
   14000a169:	push   rdx
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	add    BYTE PTR [rax],al
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	or     al,0x54
   14000a172:	add    BYTE PTR [rax],al
   14000a174:	(bad)  
   14000a175:	(bad)  
   14000a176:	(bad)  
   14000a177:	inc    DWORD PTR [rcx]
   14000a179:	or     al,BYTE PTR [rax+rax*1]
   14000a17c:	or     dh,BYTE PTR [rdi+rax*1]
   14000a17f:	add    BYTE PTR [rdx],cl
   14000a181:	xor    al,BYTE PTR [rsi]
   14000a183:	jo     0x14000a19e
   14000a185:	adc    eax,0x92060002
   14000a18a:	add    dh,BYTE PTR [rax]
   14000a18c:	rex.R jns 0x14000a18f
   14000a18f:	add    BYTE PTR [rax+0x0],al
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	sbb    DWORD PTR [rbx],ebx
   14000a196:	add    eax,DWORD PTR [rax]
   14000a198:	or     DWORD PTR [rcx],eax
   14000a19a:	adc    BYTE PTR [rcx],al
   14000a19c:	add    dh,BYTE PTR [rax]
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	rex.R jns 0x14000a1a3
   14000a1a3:	add    BYTE PTR [rax+0x8],dh
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	adc    DWORD PTR [rdx+rcx*1],esp
   14000a1ab:	add    BYTE PTR [rsp+rsi*1],ah
   14000a1ae:	sbb    eax,DWORD PTR [rax]
   14000a1b0:	sbb    dl,dh
   14000a1b2:	(bad)  
   14000a1b3:	lock or al,0xe0
   14000a1b6:	or     dl,al
   14000a1b8:	or     al,al
   14000a1ba:	(bad)  
   14000a1bb:	jo     0x14000a1c2
   14000a1bd:	(bad)  
   14000a1be:	add    al,0x50
   14000a1c0:	cmp    BYTE PTR [rcx+0x0],bh
   14000a1c3:	add    BYTE PTR [rax-0xffff6c],dl
   14000a1c9:	(bad)  
   14000a1ca:	(bad)  
   14000a1cb:	dec    ebx
   14000a1cd:	jge    0x14000a1cf
   14000a1cf:	add    BYTE PTR [rax-0xffffa1],dh
   14000a1d5:	(bad)  
   14000a1d6:	(bad)  
   14000a1d7:	jmp    QWORD PTR [rbx+0x63]
   14000a1dd:	add    BYTE PTR [rax],al
   14000a1df:	add    bl,ch
   14000a1e1:	movsxd eax,DWORD PTR [rax]
   14000a1e3:	add    bh,bh
   14000a1e5:	(bad)  
   14000a1e6:	(bad)  
   14000a1e7:	inc    DWORD PTR [rcx]
   14000a1e9:	add    eax,0x34050002
   14000a1ee:	add    DWORD PTR [rax],eax
   14000a1f0:	add    DWORD PTR [rdi],ecx
   14000a1f2:	(bad)  
   14000a1f3:	add    BYTE PTR [rdi],cl
   14000a1f5:	fs or  eax,0xc340f00
   14000a1fb:	add    BYTE PTR [rdi],cl
   14000a1fd:	xchg   edx,eax
   14000a1fe:	or     esi,DWORD PTR [rax+0x1]
   14000a201:	or     al,BYTE PTR [rax+rax*1]
   14000a204:	or     dh,BYTE PTR [rax+rcx*1]
   14000a207:	add    BYTE PTR [rdx],cl
   14000a209:	push   rdx
   14000a20a:	(bad)  
   14000a20b:	jo     0x14000a20e
   14000a20d:	clts   
   14000a20f:	add    BYTE PTR [rdi],cl
   14000a211:	or     DWORD PTR fs:[rax],eax
   14000a214:	sysenter 
   14000a216:	or     BYTE PTR [rax],al
   14000a218:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000a21b:	jo     0x14000a226
   14000a21d:	sbb    BYTE PTR [rcx],cl
   14000a21f:	add    BYTE PTR [rax],bl
   14000a221:	je     0x14000a23d
   14000a223:	add    BYTE PTR [rax],bl
   14000a225:	sbb    DWORD PTR fs:[rax],eax
   14000a228:	sbb    BYTE PTR [rax+rbx*1],dh
   14000a22b:	add    BYTE PTR [rax],bl
   14000a22d:	add    DWORD PTR [rsi],edx
   14000a22f:	add    BYTE PTR [rcx],dl
   14000a231:	lock add BYTE PTR [rax],al
   14000a234:	push   rsi
   14000a235:	jbe    0x14000a237
   14000a237:	add    BYTE PTR [rcx],al
   14000a239:	add    BYTE PTR [rax],al
   14000a23b:	add    al,dh
   14000a23d:	outs   dx,DWORD PTR ds:[rsi]
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	xlat   BYTE PTR ds:[rbx]
   14000a241:	jno    0x14000a243
   14000a243:	add    ch,bl
   14000a245:	jge    0x14000a247
   14000a247:	add    bh,dl
   14000a249:	jno    0x14000a24b
   14000a24b:	add    BYTE PTR [rax],al
   14000a24d:	add    BYTE PTR [rax],al
   14000a24f:	add    BYTE PTR [rcx],al
   14000a251:	add    BYTE PTR [rax],al
   14000a253:	add    BYTE PTR [rcx],dl
   14000a255:	or     al,BYTE PTR [rax+rax*1]
   14000a258:	or     dh,BYTE PTR [rsi+rax*1]
   14000a25b:	add    BYTE PTR [rdx],cl
   14000a25d:	xor    al,BYTE PTR [rsi]
   14000a25f:	jo     0x14000a2b7
   14000a261:	jbe    0x14000a263
   14000a263:	add    BYTE PTR [rcx],al
   14000a265:	add    BYTE PTR [rax],al
   14000a267:	add    BYTE PTR [rbp-0x25ffff8e],dl
   14000a26d:	jb     0x14000a26f
   14000a26f:	add    BYTE PTR [rcx],al
   14000a271:	jle    0x14000a273
   14000a273:	add    BYTE PTR [rax],al
   14000a275:	add    BYTE PTR [rax],al
   14000a277:	add    BYTE PTR [rcx],cl
   14000a279:	add    al,0x1
   14000a27b:	add    BYTE PTR [rdx+riz*1],al
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	push   rsi
   14000a281:	jbe    0x14000a283
   14000a283:	add    BYTE PTR [rcx],al
   14000a285:	add    BYTE PTR [rax],al
   14000a287:	add    ah,ch
   14000a289:	jae    0x14000a28b
   14000a28b:	add    BYTE PTR [rdx],ah
   14000a28d:	je     0x14000a28f
   14000a28f:	add    BYTE PTR [rcx],al
   14000a291:	add    BYTE PTR [rax],al
   14000a293:	add    BYTE PTR [rdx],ah
   14000a295:	je     0x14000a297
   14000a297:	add    BYTE PTR [rcx],cl
   14000a299:	or     al,BYTE PTR [rax+rax*1]
   14000a29c:	or     dh,BYTE PTR [rsi+rax*1]
   14000a29f:	add    BYTE PTR [rdx],cl
   14000a2a1:	xor    al,BYTE PTR [rsi]
   14000a2a3:	jo     0x14000a2fb
   14000a2a5:	jbe    0x14000a2a7
   14000a2a7:	add    BYTE PTR [rcx],al
   14000a2a9:	add    BYTE PTR [rax],al
   14000a2ab:	add    ch,ch
   14000a2ad:	je     0x14000a2af
   14000a2af:	add    BYTE PTR [rax],ah
   14000a2b1:	jne    0x14000a2b3
   14000a2b3:	add    BYTE PTR [rax],dh
   14000a2b5:	jle    0x14000a2b7
   14000a2b7:	add    BYTE PTR [rax],ah
   14000a2b9:	jne    0x14000a2bb
   14000a2bb:	add    BYTE PTR [rcx],al
   14000a2bd:	or     eax,0x340d0004
   14000a2c2:	or     DWORD PTR [rax],eax
   14000a2c4:	or     eax,0x1500632
   14000a2c9:	or     al,0x2
   14000a2cb:	add    BYTE PTR [rcx+rax*1],cl
   14000a2ce:	adc    DWORD PTR [rax],eax
   14000a2d0:	add    DWORD PTR [rax],eax
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	add    BYTE PTR [rax],al
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	add    al,BYTE PTR [rax]
   14000a2da:	add    BYTE PTR [rax],al
   14000a2dc:	sbb    BYTE PTR [rbx-0x5d100000],ah
	...
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	mov    eax,0xc0
   14000a2f9:	add    BYTE PTR [rax],al
   14000a2fb:	add    bh,bh
   14000a2fd:	(bad)  
   14000a2fe:	(bad)  
   14000a2ff:	inc    DWORD PTR [rax]
   14000a301:	add    BYTE PTR [rax],al
   14000a303:	add    BYTE PTR [rcx],al
	...
   14000a319:	add    BYTE PTR [rax],al
   14000a31b:	add    al,ah
   14000a31d:	rol    BYTE PTR [rax],0x0
   14000a320:	add    BYTE PTR [rax],al
   14000a322:	add    BYTE PTR [rax],al
   14000a324:	(bad)  
   14000a325:	(bad)  
   14000a326:	(bad)  
   14000a327:	inc    DWORD PTR [rax]
   14000a329:	add    BYTE PTR [rax],al
   14000a32b:	add    BYTE PTR [rax+rax*1],al
	...
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	fsub   DWORD PTR [rdx+0x0]
	...
   14000a35e:	add    BYTE PTR [rax],al
   14000a360:	add    al,BYTE PTR [rax]
   14000a362:	add    BYTE PTR [rax],al
   14000a364:	js     0x14000a309
   14000a366:	add    BYTE PTR [rax],al
   14000a368:	lock movabs ds:0x0,al
	...
   14000a37a:	add    BYTE PTR [rax],al
   14000a37c:	mov    al,al
   14000a37e:	add    BYTE PTR [rax],al
   14000a380:	add    BYTE PTR [rax],al
   14000a382:	add    BYTE PTR [rax],al
   14000a384:	(bad)  
   14000a385:	(bad)  
   14000a386:	(bad)  
   14000a387:	inc    DWORD PTR [rax]
   14000a389:	add    BYTE PTR [rax],al
   14000a38b:	add    BYTE PTR [rcx],al
	...
   14000a3a9:	add    BYTE PTR [rax],al
   14000a3ab:	add    BYTE PTR [rax-0x5d],ah
	...
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	cwde   
   14000a3bd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...
   14000a3c6:	add    BYTE PTR [rax],al
   14000a3c8:	test   al,0xab
   14000a3ca:	add    BYTE PTR [rax],al
   14000a3cc:	test   al,0x80
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	sub    BYTE PTR [rcx+0x0],ch
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	add    BYTE PTR [rax],al
   14000a3da:	add    BYTE PTR [rax],al
   14000a3dc:	mov    dh,0xac
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	cmp    BYTE PTR [rbx-0x59b00000],al
	...
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	adc    dh,BYTE PTR [rax-0x7fa00000]
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	call   0x14000a4a3
   14000a3fd:	add    BYTE PTR [rax],al
   14000a3ff:	add    BYTE PTR [rax],al
   14000a401:	add    BYTE PTR [rax],al
   14000a403:	add    BYTE PTR [rax],ah
   14000a405:	mov    al,0x0
   14000a407:	add    al,bh
   14000a409:	add    BYTE PTR [rax],0x0
   14000a40c:	mov    al,0xa7
	...
   14000a416:	add    BYTE PTR [rax],al
   14000a418:	mov    al,0x0
   14000a41b:	add    al,al
   14000a41d:	add    DWORD PTR [rax],0xa78000
	...
   14000a42b:	add    BYTE PTR [rax-0x50],ch
   14000a42e:	add    BYTE PTR [rax],al
   14000a430:	nop
   14000a431:	add    DWORD PTR [rax],0xa83000
	...
   14000a43f:	add    BYTE PTR [rdx+0x400000b0],cl
   14000a445:	(bad)  
   14000a446:	add    BYTE PTR [rax],al
   14000a448:	nop
   14000a449:	test   al,0x0
	...
   14000a453:	add    BYTE PTR [rax+rsi*4-0x7d600000],ch
   14000a45a:	add    BYTE PTR [rax],al
   14000a45c:	enter  0xa7,0x0
	...
   14000a468:	shl    BYTE PTR [rax-0x7e280000],1
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	pop    rax
   14000a471:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
   14000a47a:	add    BYTE PTR [rax],al
   14000a47c:	cli    
   14000a47d:	mov    al,0x0
   14000a47f:	add    BYTE PTR [rax-0x7f],ch
   14000a482:	add    BYTE PTR [rax],al
   14000a484:	cmp    BYTE PTR [rdi+0x0],ah
   14000a48a:	add    BYTE PTR [rax],al
   14000a48c:	add    BYTE PTR [rax],al
   14000a48e:	add    BYTE PTR [rax],al
   14000a490:	sbb    dh,BYTE PTR [rcx-0x7eb80000]
   14000a496:	add    BYTE PTR [rax],al
   14000a498:	test   al,0xa8
	...
   14000a4a2:	add    BYTE PTR [rax],al
   14000a4a4:	rex.R mov cl,0x0
   14000a4a7:	add    BYTE PTR [rax+0x40000082],bh
   14000a4ad:	test   al,0x0
	...
   14000a4b7:	add    BYTE PTR [rax-0x4f],ch
   14000a4ba:	add    BYTE PTR [rax],al
   14000a4bc:	push   rax
   14000a4bd:	(bad)  
   14000a4be:	add    BYTE PTR [rax],al
   14000a4c0:	js     0x14000a46a
	...
   14000a4ca:	add    BYTE PTR [rax],al
   14000a4cc:	mov    dh,BYTE PTR [rcx-0x7d780000]
   14000a4d2:	add    BYTE PTR [rax],al
   14000a4d4:	nop
   14000a4d5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
   14000a4de:	add    BYTE PTR [rax],al
   14000a4e0:	lods   al,BYTE PTR ds:[rsi]
   14000a4e1:	mov    cl,0x0
   14000a4e3:	add    BYTE PTR [rax-0x5fffff7f],ah
   14000a4e9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
   14000a4f2:	add    BYTE PTR [rax],al
   14000a4f4:	int3   
   14000a4f5:	mov    cl,0x0
   14000a4f7:	add    BYTE PTR [rax+0x81],dh
   14000a4fd:	test   al,0x0
	...
   14000a507:	add    dh,dh
   14000a509:	mov    cl,0x0
   14000a50b:	add    BYTE PTR [rax],dl
   14000a50d:	(bad)  
   14000a50e:	add    BYTE PTR [rax],al
   14000a510:	adc    BYTE PTR [rax+0x0],ch
   14000a516:	add    BYTE PTR [rax],al
   14000a518:	add    BYTE PTR [rax],al
   14000a51a:	add    BYTE PTR [rax],al
   14000a51c:	sbb    dh,BYTE PTR [rdx-0x7de00000]
   14000a522:	add    BYTE PTR [rax],al
   14000a524:	adc    BYTE PTR [rdx+0x0],ch
   14000a52a:	add    BYTE PTR [rax],al
   14000a52c:	add    BYTE PTR [rax],al
   14000a52e:	add    BYTE PTR [rax],al
   14000a530:	push   rdx
   14000a531:	mov    dl,0x0
   14000a533:	add    BYTE PTR [rax],ah
   14000a535:	test   BYTE PTR [rax],al
   14000a537:	add    BYTE PTR [rax-0x56],cl
	...
   14000a542:	add    BYTE PTR [rax],al
   14000a544:	(bad)  
   14000a545:	mov    dl,0x0
   14000a547:	add    BYTE PTR [rax-0x7c],bl
   14000a54a:	add    BYTE PTR [rax],al
   14000a54c:	sbb    BYTE PTR [rcx+0x0],ch
   14000a552:	add    BYTE PTR [rax],al
   14000a554:	add    BYTE PTR [rax],al
   14000a556:	add    BYTE PTR [rax],al
   14000a558:	scas   al,BYTE PTR es:[rdi]
   14000a559:	mov    dl,0x0
   14000a55b:	add    BYTE PTR [rax],ch
   14000a55d:	add    DWORD PTR [rax],0x0
   14000a560:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000a56a:	add    BYTE PTR [rax],al
   14000a56c:	test   BYTE PTR [rbx-0x80000000],dh
   14000a572:	add    BYTE PTR [rax],al
   14000a574:	(bad)  
   14000a575:	stos   BYTE PTR es:[rdi],al
	...
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	xchg   BYTE PTR [rax-0x7b900000],bh
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	enter  0xa8,0x0
	...
   14000a594:	fidivr DWORD PTR [rcx-0x7d280000]
   14000a59a:	add    BYTE PTR [rax],al
   14000a59c:	or     BYTE PTR [rcx+0x0],ch
   14000a5a2:	add    BYTE PTR [rax],al
   14000a5a4:	add    BYTE PTR [rax],al
   14000a5a6:	add    BYTE PTR [rax],al
   14000a5a8:	(bad)  
   14000a5a9:	mov    ecx,0x83180000
   14000a5ae:	add    BYTE PTR [rax],al
   14000a5b0:	loopne 0x14000a55a
	...
   14000a5ba:	add    BYTE PTR [rax],al
   14000a5bc:	and    al,0xba
   14000a5be:	add    BYTE PTR [rax],al
   14000a5c0:	lock (bad) 
   14000a5c2:	add    BYTE PTR [rax],al
   14000a5c4:	fsub   DWORD PTR [rsi+0x0]
   14000a5ca:	add    BYTE PTR [rax],al
   14000a5cc:	add    BYTE PTR [rax],al
   14000a5ce:	add    BYTE PTR [rax],al
   14000a5d0:	adc    BYTE PTR [rbx-0x7f180000],bh
	...
   14000a5ee:	add    BYTE PTR [rax],al
   14000a5f0:	sub    dh,BYTE PTR [rbx+0x0]
   14000a5f6:	add    BYTE PTR [rax],al
   14000a5f8:	loop   0x14000a5ac
   14000a5fa:	add    BYTE PTR [rax],al
   14000a5fc:	add    BYTE PTR [rax],al
   14000a5fe:	add    BYTE PTR [rax],al
   14000a600:	cli    
   14000a601:	mov    dl,0x0
   14000a603:	add    BYTE PTR [rax],al
   14000a605:	add    BYTE PTR [rax],al
   14000a607:	add    BYTE PTR [rdx],dl
   14000a609:	mov    bl,0x0
   14000a60b:	add    BYTE PTR [rax],al
   14000a60d:	add    BYTE PTR [rax],al
   14000a60f:	add    BYTE PTR [rax],bh
   14000a611:	mov    bl,0x0
   14000a613:	add    BYTE PTR [rax],al
   14000a615:	add    BYTE PTR [rax],al
   14000a617:	add    BYTE PTR [rsi-0x4d],cl
   14000a61a:	add    BYTE PTR [rax],al
   14000a61c:	add    BYTE PTR [rax],al
   14000a61e:	add    BYTE PTR [rax],al
   14000a620:	pop    rsp
   14000a621:	mov    bl,0x0
   14000a623:	add    BYTE PTR [rax],al
   14000a625:	add    BYTE PTR [rax],al
   14000a627:	add    al,dl
   14000a629:	mov    edx,0x0
   14000a62e:	add    BYTE PTR [rax],al
   14000a630:	loop   0x14000a5ec
   14000a632:	add    BYTE PTR [rax],al
   14000a634:	add    BYTE PTR [rax],al
   14000a636:	add    BYTE PTR [rax],al
   14000a638:	outs   dx,BYTE PTR ds:[rsi]
   14000a639:	mov    bl,0x0
   14000a63b:	add    BYTE PTR [rax],al
   14000a63d:	add    BYTE PTR [rax],al
   14000a63f:	add    BYTE PTR [rdx+0xb2],bh
	...
   14000a64d:	add    BYTE PTR [rax],al
   14000a64f:	add    BYTE PTR [rax],bl
   14000a651:	add    BYTE PTR [rax],al
   14000a653:	add    BYTE PTR [rax],al
   14000a655:	add    BYTE PTR [rax],al
   14000a657:	or     BYTE PTR [rax],0x0
   14000a65a:	add    BYTE PTR [rax],al
   14000a65c:	add    BYTE PTR [rax],al
   14000a65e:	add    BYTE PTR [rax+0x9],al
   14000a664:	add    BYTE PTR [rax],al
   14000a666:	add    BYTE PTR [rax+0x2],al
   14000a66c:	add    BYTE PTR [rax],al
   14000a66e:	add    BYTE PTR [rax+0x6],al
   14000a674:	add    BYTE PTR [rax],al
   14000a676:	add    BYTE PTR [rax+0x13],al
   14000a67c:	add    BYTE PTR [rax],al
   14000a67e:	add    BYTE PTR [rax+0x17],al
   14000a684:	add    BYTE PTR [rax],al
   14000a686:	add    BYTE PTR [rax+0xc9],al
   14000a68c:	add    BYTE PTR [rax],al
   14000a68e:	add    BYTE PTR [rax+0x0],al
   14000a694:	add    BYTE PTR [rax],al
   14000a696:	add    BYTE PTR [rax],al
   14000a698:	loopne 0x14000a652
   14000a69a:	add    BYTE PTR [rax],al
   14000a69c:	add    BYTE PTR [rax],al
   14000a69e:	add    BYTE PTR [rax],al
   14000a6a0:	int3   
   14000a6a1:	mov    eax,0x0
   14000a6a6:	add    BYTE PTR [rax],al
   14000a6a8:	mov    eax,0xb8
   14000a6ad:	add    BYTE PTR [rax],al
   14000a6af:	add    BYTE PTR [rdx+0xb8],ch
   14000a6b5:	add    BYTE PTR [rax],al
   14000a6b7:	add    BYTE PTR [rbx+rbp*4+0x0],bl
   14000a6be:	add    BYTE PTR [rax],al
   14000a6c0:	nop
   14000a6c1:	stos   DWORD PTR es:[rdi],eax
   14000a6c2:	add    BYTE PTR [rax],al
   14000a6c4:	add    BYTE PTR [rax],al
   14000a6c6:	add    BYTE PTR [rax],al
   14000a6c8:	xchg   esp,eax
   14000a6c9:	mov    eax,0x0
	...
   14000a6d6:	add    BYTE PTR [rax],al
   14000a6d8:	hlt    
   14000a6d9:	mov    edx,0x0
	...
   14000a6e6:	add    BYTE PTR [rax],al
   14000a6e8:	shr    BYTE PTR [rsi+0x0],1
   14000a6ee:	add    BYTE PTR [rax],al
   14000a6f0:	(bad)  
   14000a6f1:	lods   eax,DWORD PTR ds:[rsi]
   14000a6f2:	add    BYTE PTR [rax],al
   14000a6f4:	add    BYTE PTR [rax],al
   14000a6f6:	add    BYTE PTR [rax],al
   14000a6f8:	out    dx,al
   14000a6f9:	lods   al,BYTE PTR ds:[rsi]
   14000a6fa:	add    BYTE PTR [rax],al
   14000a6fc:	add    BYTE PTR [rax],al
   14000a6fe:	add    BYTE PTR [rax],al
   14000a700:	(bad)  
   14000a701:	mov    ecx,0x0
   14000a706:	add    BYTE PTR [rax],al
   14000a708:	lods   al,BYTE PTR ds:[rsi]
   14000a709:	mov    ecx,0x0
   14000a70e:	add    BYTE PTR [rax],al
   14000a710:	(bad)  
   14000a711:	mov    ecx,0x0
   14000a716:	add    BYTE PTR [rax],al
   14000a718:	rex.WRX lods rax,QWORD PTR ds:[rsi]
   14000a71a:	add    BYTE PTR [rax],al
   14000a71c:	add    BYTE PTR [rax],al
   14000a71e:	add    BYTE PTR [rax],al
   14000a720:	(bad)  
   14000a721:	lods   eax,DWORD PTR ds:[rsi]
   14000a722:	add    BYTE PTR [rax],al
   14000a724:	add    BYTE PTR [rax],al
   14000a726:	add    BYTE PTR [rax],al
   14000a728:	(bad)  
   14000a729:	scas   al,BYTE PTR es:[rdi]
	...
   14000a736:	add    BYTE PTR [rax],al
   14000a738:	sbb    ch,BYTE PTR [rdi+0x0]
   14000a73e:	add    BYTE PTR [rax],al
   14000a740:	(bad)  
   14000a741:	scas   eax,DWORD PTR es:[rdi]
   14000a742:	add    BYTE PTR [rax],al
   14000a744:	add    BYTE PTR [rax],al
   14000a746:	add    BYTE PTR [rax],al
   14000a748:	int3   
   14000a749:	lods   eax,DWORD PTR ds:[rsi]
	...
   14000a756:	add    BYTE PTR [rax],al
   14000a758:	shr    BYTE PTR [rbp+0x0],0x0
   14000a75f:	add    BYTE PTR [rdx+0xad],dh
   14000a765:	add    BYTE PTR [rax],al
   14000a767:	add    BYTE PTR [rbp+rbp*4+0x0],ah
   14000a76e:	add    BYTE PTR [rax],al
   14000a770:	(bad)  
   14000a771:	scas   al,BYTE PTR es:[rdi]
	...
   14000a77e:	add    BYTE PTR [rax],al
   14000a780:	sub    ch,BYTE PTR [rbp+0x0]
	...
   14000a78e:	add    BYTE PTR [rax],al
   14000a790:	hlt    
   14000a791:	scas   al,BYTE PTR es:[rdi]
	...
   14000a79e:	add    BYTE PTR [rax],al
   14000a7a0:	cmp    BYTE PTR [rdi+0x0],ch
	...
   14000a7ae:	add    BYTE PTR [rax],al
   14000a7b0:	loop   0x14000a760
   14000a7b2:	add    BYTE PTR [rax],al
   14000a7b4:	add    BYTE PTR [rax],al
   14000a7b6:	add    BYTE PTR [rax],al
   14000a7b8:	sbb    ch,BYTE PTR [rbp+0x0]
	...
   14000a7c6:	add    BYTE PTR [rax],al
   14000a7c8:	(bad)  
   14000a7c9:	scas   eax,DWORD PTR es:[rdi]
   14000a7ca:	add    BYTE PTR [rax],al
   14000a7cc:	add    BYTE PTR [rax],al
   14000a7ce:	add    BYTE PTR [rax],al
   14000a7d0:	mov    gs,WORD PTR [rbp+0x0]
   14000a7d6:	add    BYTE PTR [rax],al
   14000a7d8:	(bad)  
   14000a7d9:	scas   eax,DWORD PTR es:[rdi]
   14000a7da:	add    BYTE PTR [rax],al
   14000a7dc:	add    BYTE PTR [rax],al
   14000a7de:	add    BYTE PTR [rax],al
   14000a7e0:	scas   ax,WORD PTR es:[rdi]
   14000a7e2:	add    BYTE PTR [rax],al
   14000a7e4:	add    BYTE PTR [rax],al
   14000a7e6:	add    BYTE PTR [rax],al
   14000a7e8:	or     BYTE PTR [rdi+0x0],ch
   14000a7ee:	add    BYTE PTR [rax],al
   14000a7f0:	push   rdx
   14000a7f1:	scas   al,BYTE PTR es:[rdi]
	...
   14000a7fe:	add    BYTE PTR [rax],al
   14000a800:	rex.WR scas rax,QWORD PTR es:[rdi]
	...
   14000a80e:	add    BYTE PTR [rax],al
   14000a810:	mov    edx,0xaf
   14000a815:	add    BYTE PTR [rax],al
   14000a817:	add    BYTE PTR [rdi+rbp*4+0x0],cl
   14000a81e:	add    BYTE PTR [rax],al
   14000a820:	movabs al,ds:0xaf
   14000a829:	add    BYTE PTR [rax],al
   14000a82b:	add    BYTE PTR [rax],al
   14000a82d:	add    BYTE PTR [rax],al
   14000a82f:	add    BYTE PTR [rax],bh
   14000a831:	lods   eax,DWORD PTR ds:[rsi]
	...
   14000a83e:	add    BYTE PTR [rax],al
   14000a840:	cmp    al,0xae
   14000a842:	add    BYTE PTR [rax],al
   14000a844:	add    BYTE PTR [rax],al
   14000a846:	add    BYTE PTR [rax],al
   14000a848:	and    BYTE PTR [rsi+0x0],ch
   14000a84e:	add    BYTE PTR [rax],al
   14000a850:	xor    BYTE PTR [rsi+0x0],ch
   14000a856:	add    BYTE PTR [rax],al
   14000a858:	add    BYTE PTR [rdi+0x0],ch
   14000a85e:	add    BYTE PTR [rax],al
   14000a860:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a861:	scas   al,BYTE PTR es:[rdi]
   14000a862:	add    BYTE PTR [rax],al
   14000a864:	add    BYTE PTR [rax],al
   14000a866:	add    BYTE PTR [rax],al
   14000a868:	mov    esp,0xae
	...
   14000a875:	add    BYTE PTR [rax],al
   14000a877:	add    BYTE PTR [rsi+rbp*4+0x0],cl
   14000a87e:	add    BYTE PTR [rax],al
   14000a880:	je     0x14000a830
	...
   14000a88e:	add    BYTE PTR [rax],al
   14000a890:	jl     0x14000a841
   14000a892:	add    BYTE PTR [rax],al
   14000a894:	add    BYTE PTR [rax],al
   14000a896:	add    BYTE PTR [rax],al
   14000a898:	je     0x14000a847
	...
   14000a8a6:	add    BYTE PTR [rax],al
   14000a8a8:	fsubr  QWORD PTR [rbp+0x0]
   14000a8ae:	add    BYTE PTR [rax],al
   14000a8b0:	clc    
   14000a8b1:	lods   eax,DWORD PTR ds:[rsi]
   14000a8b2:	add    BYTE PTR [rax],al
   14000a8b4:	add    BYTE PTR [rax],al
   14000a8b6:	add    BYTE PTR [rax],al
   14000a8b8:	add    al,0xae
	...
   14000a8c6:	add    BYTE PTR [rax],al
   14000a8c8:	sbb    BYTE PTR [rcx+0x0],bh
   14000a8ce:	add    BYTE PTR [rax],al
   14000a8d0:	rex.WX movabs rcx,0x0
   14000a8da:	add    BYTE PTR [rax],al
   14000a8dc:	add    BYTE PTR [rax],al
   14000a8de:	add    BYTE PTR [rax],al
   14000a8e0:	jp     0x14000a89b
   14000a8e2:	add    BYTE PTR [rax],al
   14000a8e4:	add    BYTE PTR [rax],al
   14000a8e6:	add    BYTE PTR [rax],al
   14000a8e8:	mov    WORD PTR [rcx+0x0],?
   14000a8ee:	add    BYTE PTR [rax],al
   14000a8f0:	pushf  
   14000a8f1:	mov    ecx,0x0
   14000a8f6:	add    BYTE PTR [rax],al
   14000a8f8:	push   0xb9
	...
   14000a905:	add    BYTE PTR [rax],al
   14000a907:	add    BYTE PTR [rcx+rdi*4],ch
	...
   14000a916:	add    BYTE PTR [rax],al
   14000a918:	mov    WORD PTR [rdx+0x0],?
	...
   14000a926:	add    BYTE PTR [rax],al
   14000a928:	rex.W lods al,BYTE PTR ds:[rsi]
   14000a92a:	add    BYTE PTR [rax],al
   14000a92c:	add    BYTE PTR [rax],al
   14000a92e:	add    BYTE PTR [rax],al
   14000a930:	xor    al,0xac
   14000a932:	add    BYTE PTR [rax],al
   14000a934:	add    BYTE PTR [rax],al
   14000a936:	add    BYTE PTR [rax],al
   14000a938:	lods   al,BYTE PTR es:[rsi]
   14000a93a:	add    BYTE PTR [rax],al
   14000a93c:	add    BYTE PTR [rax],al
   14000a93e:	add    BYTE PTR [rax],al
   14000a940:	sbb    al,0xac
   14000a942:	add    BYTE PTR [rax],al
   14000a944:	add    BYTE PTR [rax],al
   14000a946:	add    BYTE PTR [rax],al
   14000a948:	push   rsp
   14000a949:	lods   al,BYTE PTR ds:[rsi]
   14000a94a:	add    BYTE PTR [rax],al
   14000a94c:	add    BYTE PTR [rax],al
   14000a94e:	add    BYTE PTR [rax],al
   14000a950:	or     al,0xac
   14000a952:	add    BYTE PTR [rax],al
   14000a954:	add    BYTE PTR [rax],al
   14000a956:	add    BYTE PTR [rax],al
   14000a958:	sahf   
   14000a959:	lods   al,BYTE PTR ds:[rsi]
   14000a95a:	add    BYTE PTR [rax],al
   14000a95c:	add    BYTE PTR [rax],al
   14000a95e:	add    BYTE PTR [rax],al
   14000a960:	cli    
   14000a961:	stos   DWORD PTR es:[rdi],eax
   14000a962:	add    BYTE PTR [rax],al
   14000a964:	add    BYTE PTR [rax],al
   14000a966:	add    BYTE PTR [rax],al
   14000a968:	(bad)  
   14000a969:	stos   DWORD PTR es:[rdi],eax
   14000a96a:	add    BYTE PTR [rax],al
   14000a96c:	add    BYTE PTR [rax],al
   14000a96e:	add    BYTE PTR [rax],al
   14000a970:	(bad)  
   14000a971:	mov    ebx,0x0
   14000a976:	add    BYTE PTR [rax],al
   14000a978:	jbe    0x14000a926
   14000a97a:	add    BYTE PTR [rax],al
   14000a97c:	add    BYTE PTR [rax],al
   14000a97e:	add    BYTE PTR [rax],al
   14000a980:	mov    WORD PTR [rax+rax*1+0x0],gs
   14000a987:	add    BYTE PTR [rsp+rbp*4+0x0],ch
   14000a98e:	add    BYTE PTR [rax],al
   14000a990:	ret    0xac
   14000a993:	add    BYTE PTR [rax],al
   14000a995:	add    BYTE PTR [rax],al
   14000a997:	add    BYTE PTR [rsp+rbp*4+0x0],ch
   14000a99b:	add    BYTE PTR [rax],al
   14000a99d:	add    BYTE PTR [rax],al
   14000a99f:	add    BYTE PTR [rdx-0x45],cl
   14000a9a2:	add    BYTE PTR [rax],al
   14000a9a4:	add    BYTE PTR [rax],al
   14000a9a6:	add    BYTE PTR [rax],al
   14000a9a8:	push   0xffffffffffffffbb
   14000a9aa:	add    BYTE PTR [rax],al
   14000a9ac:	add    BYTE PTR [rax],al
   14000a9ae:	add    BYTE PTR [rax],al
   14000a9b0:	adc    al,0xac
   14000a9b2:	add    BYTE PTR [rax],al
   14000a9b4:	add    BYTE PTR [rax],al
   14000a9b6:	add    BYTE PTR [rax],al
   14000a9b8:	xchg   esp,eax
   14000a9b9:	lods   al,BYTE PTR ds:[rsi]
   14000a9ba:	add    BYTE PTR [rax],al
   14000a9bc:	add    BYTE PTR [rax],al
   14000a9be:	add    BYTE PTR [rax],al
   14000a9c0:	xor    al,0xbb
   14000a9c2:	add    BYTE PTR [rax],al
   14000a9c4:	add    BYTE PTR [rax],al
   14000a9c6:	add    BYTE PTR [rax],al
   14000a9c8:	sub    BYTE PTR [rax+rax*1+0x0],0x0
   14000a9d0:	fisubr DWORD PTR [rax+rax*1+0x0]
   14000a9d7:	add    ah,bh
   14000a9d9:	mov    eax,0x0
   14000a9de:	add    BYTE PTR [rax],al
   14000a9e0:	repnz mov eax,0x0
   14000a9e6:	add    BYTE PTR [rax],al
   14000a9e8:	fsubr  QWORD PTR [rbx+0x0]
   14000a9ee:	add    BYTE PTR [rax],al
   14000a9f0:	(bad)  
   14000a9f1:	stos   DWORD PTR es:[rdi],eax
   14000a9f2:	add    BYTE PTR [rax],al
   14000a9f4:	add    BYTE PTR [rax],al
   14000a9f6:	add    BYTE PTR [rax],al
   14000a9f8:	shr    BYTE PTR [rbx+0x0],0x0
   14000a9ff:	add    BYTE PTR [rbx+rbp*4+0x0],dh
	...
   14000aa0e:	add    BYTE PTR [rax],al
   14000aa10:	mov    dl,0x0
   14000aa13:	add    BYTE PTR [rax],al
   14000aa15:	add    BYTE PTR [rax],al
   14000aa17:	add    BYTE PTR [rax-0x46],ch
   14000aa1a:	add    BYTE PTR [rax],al
   14000aa1c:	add    BYTE PTR [rax],al
   14000aa1e:	add    BYTE PTR [rax],al
   14000aa20:	(bad)  
   14000aa21:	mov    edx,0x0
   14000aa26:	add    BYTE PTR [rax],al
   14000aa28:	mov    dh,0xba
   14000aa2a:	add    BYTE PTR [rax],al
   14000aa2c:	add    BYTE PTR [rax],al
   14000aa2e:	add    BYTE PTR [rax],al
   14000aa30:	pushf  
   14000aa31:	mov    edx,0x0
   14000aa36:	add    BYTE PTR [rax],al
   14000aa38:	rex.WRX movabs rdx,0x0
   14000aa42:	add    BYTE PTR [rax],al
   14000aa44:	add    BYTE PTR [rax],al
   14000aa46:	add    BYTE PTR [rax],al
   14000aa48:	pop    rsp
   14000aa49:	mov    dl,0x0
   14000aa4b:	add    BYTE PTR [rax],al
   14000aa4d:	add    BYTE PTR [rax],al
   14000aa4f:	add    BYTE PTR [rdx+rsi*4+0x0],ch
	...
   14000aa5f:	add    BYTE PTR [rdi+rsi*4],cl
   14000aa62:	add    BYTE PTR [rax],al
   14000aa64:	add    BYTE PTR [rax],al
   14000aa66:	add    BYTE PTR [rax],al
   14000aa68:	es mov bh,0x0
   14000aa6b:	add    BYTE PTR [rax],al
   14000aa6d:	add    BYTE PTR [rax],al
   14000aa6f:	add    BYTE PTR [rsi-0x49],al
   14000aa72:	add    BYTE PTR [rax],al
   14000aa74:	add    BYTE PTR [rax],al
   14000aa76:	add    BYTE PTR [rax],al
   14000aa78:	fs mov bh,0x0
   14000aa7b:	add    BYTE PTR [rax],al
   14000aa7d:	add    BYTE PTR [rax],al
   14000aa7f:	add    BYTE PTR [rsi-0x49],bh
   14000aa82:	add    BYTE PTR [rax],al
   14000aa84:	add    BYTE PTR [rax],al
   14000aa86:	add    BYTE PTR [rax],al
   14000aa88:	mov    dl,0xb7
   14000aa8a:	add    BYTE PTR [rax],al
   14000aa8c:	add    BYTE PTR [rax],al
   14000aa8e:	add    BYTE PTR [rax],al
   14000aa90:	(bad)  
   14000aa91:	mov    bh,0x0
   14000aa93:	add    BYTE PTR [rax],al
   14000aa95:	add    BYTE PTR [rax],al
   14000aa97:	add    dl,ch
   14000aa99:	mov    bh,0x0
   14000aa9b:	add    BYTE PTR [rax],al
   14000aa9d:	add    BYTE PTR [rax],al
   14000aa9f:	add    BYTE PTR [rdx],al
   14000aaa1:	mov    eax,0x0
   14000aaa6:	add    BYTE PTR [rax],al
   14000aaa8:	sbb    bh,BYTE PTR [rax+0x0]
   14000aaae:	add    BYTE PTR [rax],al
   14000aab0:	rex.R mov eax,0x0
   14000aab6:	add    BYTE PTR [rax],al
   14000aab8:	lock mov ch,0x0
   14000aabb:	add    BYTE PTR [rax],al
   14000aabd:	add    BYTE PTR [rax],al
   14000aabf:	add    al,dl
   14000aac1:	mov    ch,0x0
   14000aac3:	add    BYTE PTR [rax],al
   14000aac5:	add    BYTE PTR [rax],al
   14000aac7:	add    BYTE PTR [rdx+0xb5],bh
   14000aacd:	add    BYTE PTR [rax],al
   14000aacf:	add    al,dh
   14000aad1:	mov    dh,0x0
   14000aad3:	add    BYTE PTR [rax],al
   14000aad5:	add    BYTE PTR [rax],al
   14000aad7:	add    BYTE PTR [rdx-0x4b],ch
   14000aada:	add    BYTE PTR [rax],al
   14000aadc:	add    BYTE PTR [rax],al
   14000aade:	add    BYTE PTR [rax],al
   14000aae0:	cmp    dh,BYTE PTR [rbp+0x0]
   14000aae6:	add    BYTE PTR [rax],al
   14000aae8:	sbb    al,0xb5
   14000aaea:	add    BYTE PTR [rax],al
   14000aaec:	add    BYTE PTR [rax],al
   14000aaee:	add    BYTE PTR [rax],al
   14000aaf0:	out    dx,al
   14000aaf1:	mov    ah,0x0
   14000aaf3:	add    BYTE PTR [rax],al
   14000aaf5:	add    BYTE PTR [rax],al
   14000aaf7:	add    BYTE PTR [rsp+rsi*4+0x0],dh
   14000aafe:	add    BYTE PTR [rax],al
   14000ab00:	xchg   esp,eax
   14000ab01:	mov    ah,0x0
   14000ab03:	add    BYTE PTR [rax],al
   14000ab05:	add    BYTE PTR [rax],al
   14000ab07:	add    BYTE PTR [rdx-0x4c],dh
   14000ab0a:	add    BYTE PTR [rax],al
   14000ab0c:	add    BYTE PTR [rax],al
   14000ab0e:	add    BYTE PTR [rax],al
   14000ab10:	pop    rax
   14000ab11:	mov    ah,0x0
   14000ab13:	add    BYTE PTR [rax],al
   14000ab15:	add    BYTE PTR [rax],al
   14000ab17:	add    BYTE PTR [rax-0x4c],al
   14000ab1a:	add    BYTE PTR [rax],al
   14000ab1c:	add    BYTE PTR [rax],al
   14000ab1e:	add    BYTE PTR [rax],al
   14000ab20:	(bad)  
   14000ab21:	mov    ah,0x0
   14000ab23:	add    BYTE PTR [rax],al
   14000ab25:	add    BYTE PTR [rax],al
   14000ab27:	add    dl,dh
   14000ab29:	mov    bl,0x0
   14000ab2b:	add    BYTE PTR [rax],al
   14000ab2d:	add    BYTE PTR [rax],al
   14000ab2f:	add    al,dl
   14000ab31:	mov    dh,0x0
   14000ab33:	add    BYTE PTR [rax],al
   14000ab35:	add    BYTE PTR [rax],al
   14000ab37:	add    BYTE PTR [rdx+0xb6],ch
   14000ab3d:	add    BYTE PTR [rax],al
   14000ab3f:	add    BYTE PTR [rsi+rsi*4+0x0],dl
   14000ab46:	add    BYTE PTR [rax],al
   14000ab48:	fidiv  WORD PTR [rbx+0x0]
   14000ab4e:	add    BYTE PTR [rax],al
   14000ab50:	stos   BYTE PTR es:[rdi],al
   14000ab51:	mov    bl,0x0
   14000ab53:	add    BYTE PTR [rax],al
   14000ab55:	add    BYTE PTR [rax],al
   14000ab57:	add    BYTE PTR [rdx+0xb3],dl
   14000ab5d:	add    BYTE PTR [rax],al
   14000ab5f:	add    BYTE PTR [rsi+rsi*4+0x0],dh
   14000ab63:	add    BYTE PTR [rax],al
   14000ab65:	add    BYTE PTR [rax],al
   14000ab67:	add    BYTE PTR [rdx-0x4a],cl
   14000ab6a:	add    BYTE PTR [rax],al
   14000ab6c:	add    BYTE PTR [rax],al
   14000ab6e:	add    BYTE PTR [rax],al
   14000ab70:	sub    al,0xb6
   14000ab72:	add    BYTE PTR [rax],al
   14000ab74:	add    BYTE PTR [rax],al
   14000ab76:	add    BYTE PTR [rax],al
   14000ab78:	cwde   
   14000ab79:	mov    ch,0x0
   14000ab7b:	add    BYTE PTR [rax],al
   14000ab7d:	add    BYTE PTR [rax],al
   14000ab7f:	add    BYTE PTR [rax],dl
   14000ab81:	mov    dh,0x0
	...
   14000ab8f:	add    BYTE PTR [rdx+rax*1],ch
   14000ab92:	imul   rbp,QWORD PTR [r12+r13*2+0x54],0x72656d69
   14000ab9b:	add    BYTE PTR [rbx],ch
   14000ab9d:	add    edx,DWORD PTR [rbx+0x65]
   14000aba0:	je     0x14000abf6
   14000aba2:	imul   ebp,DWORD PTR [rbp+0x65],0x55000072
   14000aba9:	push   rbx
   14000abaa:	rex.RB push r10
   14000abac:	xor    esi,DWORD PTR [rdx]
   14000abae:	cs fs ins BYTE PTR es:[rdi],dx
   14000abb1:	ins    BYTE PTR es:[rdi],dx
   14000abb2:	add    BYTE PTR [rax],al
   14000abb4:	sahf   
   14000abb5:	add    bl,BYTE PTR [rdi+0x70]
   14000abb8:	jne    0x14000ac2c
   14000abba:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   14000abbe:	ins    BYTE PTR es:[rdi],dx
   14000abbf:	add    BYTE PTR [rcx+0x3],ch
   14000abc2:	pop    rdi
   14000abc3:	jbe    0x14000ac38
   14000abc5:	outs   dx,BYTE PTR ds:[rsi]
   14000abc6:	ja     0x14000ac38
   14000abc8:	jb     0x14000ac33
   14000abca:	outs   dx,BYTE PTR ds:[rsi]
   14000abcb:	je     0x14000ac33
   14000abcd:	add    BYTE PTR [rbp+0x0],dl
   14000abd0:	pop    rdi
   14000abd1:	pop    rax
   14000abd2:	movsxd esi,DWORD PTR [rax+0x74]
   14000abd5:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000abde:	pop    rdi
   14000abdf:	(bad)  
   14000abe0:	ins    DWORD PTR es:[rdi],dx
   14000abe1:	jae    0x14000ac4a
   14000abe3:	pop    rdi
   14000abe4:	gs js  0x14000ac50
   14000abe7:	je     0x14000abe9
   14000abe9:	add    BYTE PTR [rdi+0x0],bh
   14000abec:	pop    rdi
   14000abed:	pop    rdi
   14000abee:	addr32 gs je 0x14000ac5f
   14000abf2:	(bad)  
   14000abf3:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000abfa:	mov    es,WORD PTR [rax]
   14000abfc:	pop    rdi
   14000abfd:	pop    rdi
   14000abfe:	jae    0x14000ac65
   14000ac00:	je     0x14000ac61
   14000ac02:	(bad)  
   14000ac03:	jo     0x14000ac75
   14000ac05:	pop    rdi
   14000ac06:	je     0x14000ac81
   14000ac08:	jo     0x14000ac6f
   14000ac0a:	add    BYTE PTR [rax],al
   14000ac0c:	xor    al,BYTE PTR [riz*2+0x746978]
   14000ac13:	add    BYTE PTR [rsi],cl
   14000ac15:	add    DWORD PTR [rdi+0x65],ebx
   14000ac18:	js     0x14000ac83
   14000ac1a:	je     0x14000ac1c
   14000ac1c:	rol    DWORD PTR [rax],0x5f
   14000ac1f:	movsxd esp,DWORD PTR [rbp+0x78]
   14000ac22:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   14000ac2a:	jae    0x14000ac99
   14000ac2c:	(bad)
   14000ac31:	add    BYTE PTR fs:[rax],al
   14000ac34:	nop
   14000ac35:	add    BYTE PTR [rdi+0x5f],bl
   14000ac38:	jae    0x14000ac9f
   14000ac3a:	je     0x14000acb1
   14000ac3c:	jae    0x14000aca3
   14000ac3e:	jb     0x14000acad
   14000ac40:	(bad)  
   14000ac41:	je     0x14000acab
   14000ac43:	gs jb  0x14000acb8
   14000ac46:	add    BYTE PTR [rax],al
   14000ac48:	jge    0x14000ac4b
   14000ac4a:	pop    rdi
   14000ac4b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000ac52:	ins    DWORD PTR es:[rdi],dx
   14000ac53:	add    BYTE PTR [rdi+0x0],dl
   14000ac56:	pop    rdi
   14000ac57:	pop    rdi
   14000ac58:	rex.XB pop r15
   14000ac5a:	jae    0x14000accc
   14000ac5c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000ac60:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000ac67:	ins    BYTE PTR es:[rdi],dx
   14000ac68:	gs jb  0x14000ac6b
   14000ac6b:	add    BYTE PTR [rdx+0x63615f00],ah
   14000ac71:	ins    DWORD PTR es:[rdi],dx
   14000ac72:	fs ins BYTE PTR es:[rdi],dx
   14000ac74:	outs   dx,BYTE PTR ds:[rsi]
   14000ac75:	add    BYTE PTR [rdi],ah
   14000ac77:	add    DWORD PTR [rdi+0x66],ebx
   14000ac7a:	ins    DWORD PTR es:[rdi],dx
   14000ac7b:	outs   dx,DWORD PTR ds:[rsi]
   14000ac7c:	fs add BYTE PTR gs:[rax],al
   14000ac80:	rol    BYTE PTR [rax],cl
   14000ac82:	pop    rdi
   14000ac83:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000ac86:	ins    DWORD PTR es:[rdi],dx
   14000ac87:	outs   dx,DWORD PTR ds:[rsi]
   14000ac88:	fs add BYTE PTR gs:[rax],al
   14000ac8c:	out    0x1,al
   14000ac8e:	pop    rdi
   14000ac8f:	ins    BYTE PTR es:[rdi],dx
   14000ac90:	outs   dx,DWORD PTR ds:[rsi]
   14000ac91:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000ac94:	add    ebx,DWORD PTR [r15+0x75]
   14000ac98:	outs   dx,BYTE PTR ds:[rsi]
   14000ac99:	ins    BYTE PTR es:[rdi],dx
   14000ac9a:	outs   dx,DWORD PTR ds:[rsi]
   14000ac9b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000ac9e:	jnp    0x14000aca0
   14000aca0:	pop    rdi
   14000aca1:	pop    rdi
   14000aca2:	fs ins BYTE PTR es:[rdi],dx
   14000aca4:	ins    BYTE PTR es:[rdi],dx
   14000aca5:	outs   dx,DWORD PTR ds:[rsi]
   14000aca6:	outs   dx,BYTE PTR ds:[rsi]
   14000aca7:	gs js  0x14000ad13
   14000acaa:	je     0x14000acac
   14000acac:	nop
   14000acad:	add    bl,BYTE PTR [rdi+0x6f]
   14000acb0:	outs   dx,BYTE PTR ds:[rsi]
   14000acb1:	gs js  0x14000ad1d
   14000acb4:	je     0x14000acb6
   14000acb6:	ins    DWORD PTR es:[rdi],dx
   14000acb7:	jae    0x14000ad2f
   14000acb9:	movsxd esi,DWORD PTR [rdx+0x74]
   14000acbc:	cs fs ins BYTE PTR es:[rdi],dx
   14000acbf:	ins    BYTE PTR es:[rdi],dx
   14000acc0:	add    BYTE PTR [rax],al
   14000acc2:	adc    al,BYTE PTR [rax]
   14000acc4:	(bad)  
   14000acc5:	(bad)  
   14000acc6:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000acca:	gs pop rdi
   14000accc:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000acd3:	rex.RB
   14000acd4:	rex.B
   14000acd5:	rex.B
   14000acd6:	rex pop rax
   14000acd8:	pop    rdx
   14000acd9:	add    BYTE PTR [rdi],ch
   14000acdb:	add    BYTE PTR [rdi],bh
   14000acdd:	je     0x14000ad44
   14000acdf:	jb     0x14000ad4e
   14000ace1:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000ace8:	pop    rcx
   14000ace9:	pop    r8
   14000aceb:	pop    rax
   14000acec:	pop    rdx
   14000aced:	add    BYTE PTR [rax+rax*1],bh
   14000acf0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000acf2:	push   rbx
   14000acf3:	jne    0x14000ad68
   14000acf5:	jo     0x14000ad5c
   14000acf7:	outs   dx,BYTE PTR ds:[rsi]
   14000acf8:	fs rex.XB ins BYTE PTR es:[rdi],dx
   14000acfb:	(bad)  
   14000acfc:	jae    0x14000ad71
   14000acfe:	rex.WRXB (bad) 
   14000ad00:	push   0x65
   14000ad02:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000ad06:	or     BYTE PTR [rax],al
   14000ad08:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ad0a:	rex.XB jb 0x14000ad72
   14000ad0d:	(bad)  
   14000ad0e:	je     0x14000ad75
   14000ad10:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ad12:	jae    0x14000ad88
   14000ad14:	(bad)  
   14000ad15:	outs   dx,BYTE PTR ds:[rsi]
   14000ad16:	movsxd esp,DWORD PTR [rbp+0x0]
   14000ad19:	add    BYTE PTR [rdx],dh
   14000ad1b:	add    BYTE PTR [rbx+rax*2+0x4d],cl
   14000ad1f:	(bad)  
   14000ad20:	jo     0x14000ad75
   14000ad22:	je     0x14000ad96
   14000ad24:	imul   ebp,DWORD PTR [rsi+0x67],0x57
   14000ad2b:	add    BYTE PTR [rbx+0x6c],al
   14000ad2e:	outs   dx,DWORD PTR ds:[rsi]
   14000ad2f:	jae    0x14000ad96
   14000ad31:	rex.W (bad) 
   14000ad33:	outs   dx,BYTE PTR ds:[rsi]
   14000ad34:	fs ins BYTE PTR es:[rdi],dx
   14000ad36:	add    BYTE PTR gs:[rsi],al
   14000ad39:	add    BYTE PTR [rbp+0x75],cl
   14000ad3c:	ins    BYTE PTR es:[rdi],dx
   14000ad3d:	je     0x14000ada8
   14000ad3f:	rex.X jns 0x14000adb6
   14000ad42:	gs push rsp
   14000ad44:	outs   dx,DWORD PTR ds:[rsi]
   14000ad45:	push   rdi
   14000ad46:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14000ad4e:	add    BYTE PTR [rax],al
   14000ad50:	rex.XB
   14000ad51:	rex.WR push rbx
   14000ad53:	rex.WB
   14000ad54:	rex.R
   14000ad55:	rex.RX jb 0x14000adc7
   14000ad58:	ins    DWORD PTR es:[rdi],dx
   14000ad59:	push   rax
   14000ad5a:	jb     0x14000adcb
   14000ad5c:	addr32 rex.WB
   14000ad5e:	add    BYTE PTR [rdi],r10b
   14000ad61:	add    BYTE PTR [rbx+0x6f],al
   14000ad64:	rex.RXB
   14000ad65:	gs je  0x14000adab
   14000ad68:	ins    BYTE PTR es:[rdi],dx
   14000ad69:	(bad)  
   14000ad6a:	jae    0x14000addf
   14000ad6c:	rex.WRXB (bad) 
   14000ad6e:	push   0x65
   14000ad70:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000ad74:	adc    al,0x0
   14000ad76:	rex.RXB
   14000ad77:	gs je  0x14000adcd
   14000ad7a:	jns    0x14000adef
   14000ad7c:	je     0x14000ade3
   14000ad7e:	ins    DWORD PTR es:[rdi],dx
   14000ad7f:	push   rsp
   14000ad80:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000ad87:	ins    BYTE PTR es:[rdi],dx
   14000ad88:	gs push rsp
   14000ad8a:	imul   ebp,DWORD PTR [rbp+0x65],0x47001100
   14000ad91:	gs je  0x14000add7
   14000ad94:	jne    0x14000ae08
   14000ad96:	jb     0x14000adfd
   14000ad98:	outs   dx,BYTE PTR ds:[rsi]
   14000ad99:	je     0x14000adef
   14000ad9b:	push   0x64616572
   14000ada0:	rex.WB
   14000ada1:	add    BYTE PTR fs:[rax],al
   14000ada4:	(bad)  
   14000ada5:	add    BYTE PTR [rbx+0x72],al
   14000ada8:	gs (bad) 
   14000adaa:	je     0x14000ae11
   14000adac:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x47002c00
   14000adb5:	gs je  0x14000adfe
   14000adb8:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
   14000adc0:	rex.RXB add BYTE PTR [r10+0x65],r10b
   14000adc4:	(bad)  
   14000adc5:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x47000500
   14000adcf:	gs je  0x14000ae1e
   14000add2:	(bad)  
   14000add3:	jae    0x14000ae49
   14000add5:	rex.RB jb 0x14000ae4a
   14000add8:	outs   dx,DWORD PTR ds:[rsi]
   14000add9:	jb     0x14000addb
   14000addb:	add    BYTE PTR [rsi],dl
   14000addd:	add    BYTE PTR [rcx+0x6c],al
   14000ade0:	ins    BYTE PTR es:[rdi],dx
   14000ade1:	outs   dx,DWORD PTR ds:[rsi]
   14000ade2:	movsxd esp,DWORD PTR [rcx+0x74]
   14000ade5:	rex.B outs dx,BYTE PTR gs:[rsi]
   14000ade8:	rex.WB outs dx,BYTE PTR fs:[rsi]
   14000adeb:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000adf3:	push   rbx
   14000adf4:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x7145002a
   14000adfc:	jne    0x14000ae5f
   14000adfe:	ins    BYTE PTR es:[rdi],dx
   14000adff:	push   rbx
   14000ae00:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x7246002c
   14000ae08:	gs gs push rbx
   14000ae0b:	imul   esp,DWORD PTR [rax+rax*1+0x1],0x6d6f4300
   14000ae13:	jo     0x14000ae76
   14000ae15:	jb     0x14000ae7c
   14000ae17:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   14000ae20:	(bad)  
   14000ae21:	add    BYTE PTR [rbx+0x72],al
   14000ae24:	gs (bad) 
   14000ae26:	je     0x14000ae8d
   14000ae28:	rex.RB jbe 0x14000ae90
   14000ae2b:	outs   dx,BYTE PTR ds:[rsi]
   14000ae2c:	je     0x14000ae85
   14000ae2e:	add    BYTE PTR [rax],al
   14000ae30:	sub    DWORD PTR [rax],eax
   14000ae32:	push   rbx
   14000ae33:	gs je  0x14000ae7b
   14000ae36:	jbe    0x14000ae9d
   14000ae38:	outs   dx,BYTE PTR ds:[rsi]
   14000ae39:	je     0x14000ae3b
   14000ae3b:	add    BYTE PTR [rsi],dh
   14000ae3d:	add    BYTE PTR [rdi+0x61],dl
   14000ae40:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000ae48:	ins    BYTE PTR es:[edi],dx
   14000ae4a:	gs rex.WRXB (bad) 
   14000ae4d:	push   0x65
   14000ae4f:	movsxd esi,DWORD PTR [rax+rax*1+0x6]
   14000ae53:	add    BYTE PTR [rbx+0x72],al
   14000ae56:	gs (bad) 
   14000ae58:	je     0x14000aebf
   14000ae5a:	push   rsp
   14000ae5b:	push   0x64616572
   14000ae60:	add    BYTE PTR [rax],al
   14000ae62:	add    BYTE PTR es:[rbx+0x6f],al
   14000ae66:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ae68:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000ae70:	rex.RB js 0x14000ae73
   14000ae73:	add    BYTE PTR [rsi],cl
   14000ae75:	add    BYTE PTR [rbx+0x72],al
   14000ae78:	gs (bad) 
   14000ae7a:	je     0x14000aee1
   14000ae7c:	push   rdi
   14000ae7d:	(bad)  
   14000ae7e:	imul   esi,DWORD PTR [rcx+riz*2+0x62],0x6954656c
   14000ae86:	ins    DWORD PTR es:[rdi],dx
   14000ae87:	gs jb  0x14000aee1
   14000ae8a:	add    BYTE PTR [rax],al
   14000ae8c:	xor    al,0x0
   14000ae8e:	push   rdi
   14000ae8f:	(bad)  
   14000ae90:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6c754d72
   14000ae98:	je     0x14000af03
   14000ae9a:	jo     0x14000af08
   14000ae9c:	gs rex.WRXB (bad) 
   14000ae9f:	push   0x65
   14000aea1:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000aea5:	add    BYTE PTR [rdx],al
   14000aea7:	add    BYTE PTR [rbx+0x61],al
   14000aeaa:	outs   dx,BYTE PTR ds:[rsi]
   14000aeab:	movsxd esp,DWORD PTR [rbp+0x6c]
   14000aeae:	push   rdi
   14000aeaf:	(bad)  
   14000aeb0:	imul   esi,DWORD PTR [rcx+riz*2+0x62],0x6954656c
   14000aeb8:	ins    DWORD PTR es:[rdi],dx
   14000aeb9:	gs jb  0x14000aebc
   14000aebc:	sub    al,BYTE PTR [rax]
   14000aebe:	push   rbx
   14000aebf:	gs je  0x14000af19
   14000aec2:	(bad)  
   14000aec3:	imul   esi,DWORD PTR [rcx+riz*2+0x62],0x6954656c
   14000aecb:	ins    DWORD PTR es:[rdi],dx
   14000aecc:	gs jb  0x14000aecf
   14000aecf:	add    BYTE PTR [rdx+0x0],al
   14000aed2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000aed4:	push   rbp
   14000aed5:	outs   dx,BYTE PTR ds:[rsi]
   14000aed6:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000aedd:	imul   edi,DWORD PTR [rdx+0x65],0x80000
   14000aee4:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000aee6:	jb     0x14000af55
   14000aee8:	(bad)  
   14000aee9:	je     0x14000af38
   14000aeeb:	gs jae 0x14000af61
   14000aeee:	(bad)  
   14000aeef:	addr32 gs push rdi
   14000aef2:	add    BYTE PTR [rax],al
   14000aef4:	add    eax,DWORD PTR [rax]
   14000aef6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000aef8:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000aefb:	rex.RX jb 0x14000af63
   14000aefe:	add    BYTE PTR gs:[rip+0x656c5300],ch        # 0x1a56d0205
   14000af05:	gs jo  0x14000af08
   14000af08:	and    BYTE PTR [rax],al
   14000af0a:	rex.RXB
   14000af0b:	gs je  0x14000af61
   14000af0e:	je     0x14000af71
   14000af10:	jb     0x14000af86
   14000af12:	jne    0x14000af84
   14000af14:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000af16:	outs   dx,WORD PTR ds:[rsi]
   14000af18:	push   rdi
   14000af19:	add    BYTE PTR [rdi],cl
   14000af1b:	add    BYTE PTR [rbx+0x65],dl
   14000af1e:	je     0x14000af75
   14000af20:	outs   dx,BYTE PTR ds:[rsi]
   14000af21:	push   0x6c646e61
   14000af26:	gs fs rex.RB js 0x14000af8e
   14000af2b:	gs jo  0x14000afa2
   14000af2e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000af35:	gs jb  0x14000af38
   14000af38:	adc    eax,DWORD PTR [rax]
   14000af3a:	rex.RXB
   14000af3b:	gs je  0x14000af8b
   14000af3e:	outs   dx,DWORD PTR ds:[rsi]
   14000af3f:	fs jne 0x14000afae
   14000af42:	gs rex.W (bad) 
   14000af45:	outs   dx,BYTE PTR ds:[rsi]
   14000af46:	fs ins BYTE PTR es:[rdi],dx
   14000af48:	gs push rdi
   14000af4a:	add    BYTE PTR [rax],al
   14000af4c:	add    BYTE PTR [rax],al
   14000af4e:	push   rcx
   14000af4f:	jne    0x14000afb6
   14000af51:	jb     0x14000afcc
   14000af53:	push   rax
   14000af54:	gs jb  0x14000afbd
   14000af57:	outs   dx,DWORD PTR ds:[rsi]
   14000af58:	jb     0x14000afc7
   14000af5a:	(bad)  
   14000af5b:	outs   dx,BYTE PTR ds:[rsi]
   14000af5c:	movsxd esp,DWORD PTR [rbp+0x43]
   14000af5f:	outs   dx,DWORD PTR ds:[rsi]
   14000af60:	jne    0x14000afd0
   14000af62:	je     0x14000afc9
   14000af64:	jb     0x14000af66
   14000af66:	or     eax,0x74654700
   14000af6b:	rex.XB jne 0x14000afe0
   14000af6e:	jb     0x14000afd5
   14000af70:	outs   dx,BYTE PTR ds:[rsi]
   14000af71:	je     0x14000afc3
   14000af73:	jb     0x14000afe4
   14000af75:	movsxd esp,DWORD PTR [rbp+0x73]
   14000af78:	jae    0x14000afc3
   14000af7a:	add    BYTE PTR fs:[rax],bl
   14000af7d:	add    BYTE PTR [rdi+0x65],al
   14000af80:	je     0x14000afd6
   14000af82:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000af89:	je     0x14000af8b
   14000af8b:	add    BYTE PTR [rdx],al
   14000af8d:	add    BYTE PTR [rdx+0x74],dl
   14000af90:	ins    BYTE PTR es:[rdi],dx
   14000af91:	rex.XB (bad) 
   14000af93:	jo     0x14000b009
   14000af95:	jne    0x14000b009
   14000af97:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000af9a:	outs   dx,BYTE PTR ds:[rsi]
   14000af9b:	je     0x14000b002
   14000af9d:	js     0x14000b013
   14000af9f:	add    BYTE PTR [rcx],cl
   14000afa1:	add    BYTE PTR [rdx+0x74],dl
   14000afa4:	ins    BYTE PTR es:[rdi],dx
   14000afa5:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000afa7:	outs   dx,DWORD PTR ds:[rsi]
   14000afa8:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000afac:	jne    0x14000b01c
   14000afae:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000afb2:	outs   dx,BYTE PTR ds:[rsi]
   14000afb3:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000afb5:	je     0x14000b029
   14000afb7:	jns    0x14000afb9
   14000afb9:	add    BYTE PTR [rdi],cl
   14000afbb:	add    BYTE PTR [rdx+0x74],dl
   14000afbe:	ins    BYTE PTR es:[rdi],dx
   14000afbf:	push   rsi
   14000afc0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000afc7:	outs   dx,BYTE PTR ds:[rsi]
   14000afc8:	ja     0x14000b033
   14000afca:	outs   dx,BYTE PTR ds:[rsi]
   14000afcb:	add    BYTE PTR fs:[rax],al
   14000afce:	adc    DWORD PTR [rax],eax
   14000afd0:	push   rbp
   14000afd1:	outs   dx,BYTE PTR ds:[rsi]
   14000afd2:	push   0x6c646e61
   14000afd7:	gs fs rex.RB js 0x14000b03f
   14000afdc:	gs jo  0x14000b053
   14000afdf:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000afe6:	gs jb  0x14000afe9
   14000afe9:	add    BYTE PTR [rax+rax*1],cl
   14000afec:	rex.RXB
   14000afed:	gs je  0x14000b033
   14000aff0:	jne    0x14000b064
   14000aff2:	jb     0x14000b059
   14000aff4:	outs   dx,BYTE PTR ds:[rsi]
   14000aff5:	je     0x14000b047
   14000aff7:	jb     0x14000b068
   14000aff9:	movsxd esp,DWORD PTR [rbp+0x73]
   14000affc:	jae    0x14000affe
   14000affe:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000b003:	ins    DWORD PTR es:[rdi],dx
   14000b004:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000b00b:	outs   dx,DWORD PTR ds:[rsi]
   14000b00c:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b00f:	jae    0x14000b011
   14000b011:	add    BYTE PTR [rdi+0x4c],cl
   14000b014:	rex.RB
   14000b015:	push   r13
   14000b017:	push   rsp
   14000b018:	xor    esi,DWORD PTR [rdx]
   14000b01a:	cs fs ins BYTE PTR es:[rdi],dx
   14000b01d:	ins    BYTE PTR es:[rdi],dx
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	(bad)  
   14000b021:	jo     0x14000b08c
   14000b023:	sub    eax,0x772d736d
   14000b028:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b02f:	sub    eax,0x2d6d6f63
   14000b034:	ins    BYTE PTR es:[rdi],dx
   14000b035:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31dd6c
   14000b03b:	fs ins BYTE PTR es:[rdi],dx
   14000b03d:	ins    BYTE PTR es:[rdi],dx
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	(bad)  
   14000b041:	jo     0x14000b0ac
   14000b043:	sub    eax,0x772d736d
   14000b048:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b04f:	sub    eax,0x61636f6c
   14000b054:	ins    BYTE PTR es:[rdi],dx
   14000b055:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14000b05c:	sub    eax,0x322d316c
   14000b061:	sub    eax,0x6c642e31
   14000b066:	ins    BYTE PTR es:[rdi],dx
   14000b067:	add    BYTE PTR [rcx+0x70],ah
   14000b06a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e23e1
   14000b074:	outs   dx,DWORD PTR ds:[rsi]
   14000b075:	jb     0x14000b0dc
   14000b077:	sub    eax,0x646e6168
   14000b07c:	ins    BYTE PTR es:[rdi],dx
   14000b07d:	gs sub eax,0x312d316c
   14000b083:	sub    eax,0x6c642e30
   14000b088:	ins    BYTE PTR es:[rdi],dx
   14000b089:	add    BYTE PTR [rcx+0x70],ah
   14000b08c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2403
   14000b096:	outs   dx,DWORD PTR ds:[rsi]
   14000b097:	jb     0x14000b0fe
   14000b099:	sub    eax,0x69727473
   14000b09e:	outs   dx,BYTE PTR ds:[rsi]
   14000b09f:	addr32 sub eax,0x312d316c
   14000b0a5:	sub    eax,0x6c642e30
   14000b0aa:	ins    BYTE PTR es:[rdi],dx
   14000b0ab:	add    BYTE PTR [rcx+0x70],ah
   14000b0ae:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2425
   14000b0b8:	outs   dx,DWORD PTR ds:[rsi]
   14000b0b9:	jb     0x14000b120
   14000b0bb:	sub    eax,0x69737973
   14000b0c0:	outs   dx,BYTE PTR ds:[rsi]
   14000b0c1:	outs   dx,WORD PTR ds:[rsi]
   14000b0c3:	sub    eax,0x322d316c
   14000b0c8:	sub    eax,0x6c642e31
   14000b0cd:	ins    BYTE PTR es:[rdi],dx
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	(bad)  
   14000b0d1:	jo     0x14000b13c
   14000b0d3:	sub    eax,0x772d736d
   14000b0d8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b0df:	sub    eax,0x636f7270
   14000b0e4:	gs jae 0x14000b15a
   14000b0e7:	je     0x14000b151
   14000b0e9:	jb     0x14000b150
   14000b0eb:	(bad)  
   14000b0ec:	fs jae 0x14000b11c
   14000b0ef:	ins    BYTE PTR es:[rdi],dx
   14000b0f0:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32de27
   14000b0f6:	fs ins BYTE PTR es:[rdi],dx
   14000b0f8:	ins    BYTE PTR es:[rdi],dx
   14000b0f9:	add    BYTE PTR [rcx+0x70],ah
   14000b0fc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2473
   14000b106:	outs   dx,DWORD PTR ds:[rsi]
   14000b107:	jb     0x14000b16e
   14000b109:	sub    eax,0x656c6966
   14000b10e:	sub    eax,0x322d316c
   14000b113:	sub    eax,0x6c642e31
   14000b118:	ins    BYTE PTR es:[rdi],dx
   14000b119:	add    BYTE PTR [rcx+0x70],ah
   14000b11c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2493
   14000b126:	outs   dx,DWORD PTR ds:[rsi]
   14000b127:	jb     0x14000b18e
   14000b129:	sub    eax,0x6f727265
   14000b12e:	jb     0x14000b198
   14000b130:	(bad)  
   14000b131:	outs   dx,BYTE PTR ds:[rsi]
   14000b132:	fs ins BYTE PTR es:[rdi],dx
   14000b134:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000b13b:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64df72
   14000b141:	ins    BYTE PTR es:[rdi],dx
   14000b142:	add    BYTE PTR [rax],al
   14000b144:	(bad)  
   14000b145:	jo     0x14000b1b0
   14000b147:	sub    eax,0x772d736d
   14000b14c:	imul   ebp,DWORD PTR [rsi+0x2d],0x75636573
   14000b153:	jb     0x14000b1be
   14000b155:	je     0x14000b1d0
   14000b157:	sub    eax,0x65736162
   14000b15c:	sub    eax,0x322d316c
   14000b161:	sub    eax,0x6c642e30
   14000b166:	ins    BYTE PTR es:[rdi],dx
   14000b167:	add    BYTE PTR [rcx+0x70],ah
   14000b16a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e24e1
   14000b174:	outs   dx,DWORD PTR ds:[rsi]
   14000b175:	jb     0x14000b1dc
   14000b177:	sub    eax,0x636e7973
   14000b17c:	push   0x2d316c2d
   14000b181:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64dfb7
   14000b187:	ins    BYTE PTR es:[rdi],dx
   14000b188:	add    BYTE PTR [rax],al
   14000b18a:	(bad)  
   14000b18b:	jo     0x14000b1f6
   14000b18d:	sub    eax,0x772d736d
   14000b192:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b199:	sub    eax,0x636e7973
   14000b19e:	push   0x2d316c2d
   14000b1a3:	xor    ch,BYTE PTR [rip+0x6c642e31]        # 0x1ac64dfda
   14000b1a9:	ins    BYTE PTR es:[rdi],dx
   14000b1aa:	add    BYTE PTR [rax],al
   14000b1ac:	(bad)  
   14000b1ad:	jo     0x14000b218
   14000b1af:	sub    eax,0x772d736d
   14000b1b4:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b1bb:	sub    eax,0x70616568
   14000b1c0:	sub    eax,0x312d326c
   14000b1c5:	sub    eax,0x6c642e30
   14000b1ca:	ins    BYTE PTR es:[rdi],dx
   14000b1cb:	add    BYTE PTR [rcx+0x70],ah
   14000b1ce:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2545
   14000b1d8:	outs   dx,DWORD PTR ds:[rsi]
   14000b1d9:	jb     0x14000b240
   14000b1db:	sub    eax,0x7262696c
   14000b1e0:	(bad)  
   14000b1e1:	jb     0x14000b25c
   14000b1e3:	ins    BYTE PTR es:[rdi],dx
   14000b1e4:	outs   dx,DWORD PTR ds:[rsi]
   14000b1e5:	(bad)  
   14000b1e6:	fs gs jb 0x14000b217
   14000b1ea:	ins    BYTE PTR es:[rdi],dx
   14000b1eb:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30df23
   14000b1f1:	fs ins BYTE PTR es:[rdi],dx
   14000b1f3:	ins    BYTE PTR es:[rdi],dx
   14000b1f4:	add    BYTE PTR [rax],al
   14000b1f6:	(bad)  
   14000b1f7:	jo     0x14000b262
   14000b1f9:	sub    eax,0x772d736d
   14000b1fe:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b205:	sub    eax,0x666f7270
   14000b20a:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000b212:	sub    eax,0x6c642e30
   14000b217:	ins    BYTE PTR es:[rdi],dx
   14000b218:	add    BYTE PTR [rax],al
   14000b21a:	(bad)  
   14000b21b:	jo     0x14000b286
   14000b21d:	sub    eax,0x772d736d
   14000b222:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b229:	sub    eax,0x736c7472
   14000b22e:	jne    0x14000b2a0
   14000b230:	jo     0x14000b2a1
   14000b232:	jb     0x14000b2a8
   14000b234:	sub    eax,0x322d316c
   14000b239:	sub    eax,0x6c642e30
   14000b23e:	ins    BYTE PTR es:[rdi],dx
   14000b23f:	add    BYTE PTR [rdx+0x0],dl
   14000b242:	rex.RB je 0x14000b2bc
   14000b245:	push   rsp
   14000b246:	jb     0x14000b2a9
   14000b248:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000b24b:	gs jae 0x14000b2c1
   14000b24e:	(bad)  
   14000b24f:	add    BYTE PTR gs:[esi+0x74],ch
   14000b254:	fs ins BYTE PTR es:[rdi],dx
   14000b256:	ins    BYTE PTR es:[rdi],dx
   14000b257:	cs fs ins BYTE PTR es:[rdi],dx
   14000b25a:	ins    BYTE PTR es:[rdi],dx
   14000b25b:	add    BYTE PTR [rsi+0x65724300],bl
   14000b261:	(bad)  
   14000b262:	je     0x14000b2c9
   14000b264:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x787443
   14000b26c:	add    DWORD PTR [r13+0x6b],r9d
   14000b270:	push   rax
   14000b271:	(bad)  
   14000b272:	jb     0x14000b2e7
   14000b274:	imul   r14d,DWORD PTR gs:[rbx+0x70],0x4e79616c
   14000b27d:	(bad)  
   14000b27e:	ins    DWORD PTR es:[rdi],dx
   14000b27f:	add    BYTE PTR gs:[rax],al
   14000b282:	outs   dx,DWORD PTR ds:[rsi]
   14000b283:	ins    BYTE PTR es:[rdi],dx
   14000b284:	xor    esi,DWORD PTR gs:[rdx]
   14000b287:	cs fs ins BYTE PTR es:[rdi],dx
   14000b28a:	ins    BYTE PTR es:[rdi],dx
   14000b28b:	add    BYTE PTR [rdx+0x73493f00],al
   14000b291:	push   rbp
   14000b292:	jae    0x14000b2f9
   14000b294:	jb     0x14000b2d7
   14000b296:	fs ins DWORD PTR es:[rdi],dx
   14000b298:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   14000b29f:	je     0x14000b310
   14000b2a1:	jb     0x14000b2e3
   14000b2a3:	rex pop rcx
   14000b2a5:	rex.B
   14000b2a6:	rex.WX push rax
   14000b2a8:	rex.RB
   14000b2a9:	pop    r8
   14000b2ab:	rex pop rdx
   14000b2ad:	add    BYTE PTR [rbp+0x73],ah
   14000b2b0:	jae    0x14000b315
   14000b2b2:	ins    BYTE PTR es:[rdi],dx
   14000b2b3:	imul   ebp,DWORD PTR [rsi],0x6c6c64
   14000b2b9:	add    BYTE PTR [rbp+0x3],dl
   14000b2bc:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b2be:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b2c6:	rex.XB jb 0x14000b332
   14000b2c9:	je     0x14000b334
   14000b2cb:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b2ce:	push   rbx
   14000b2cf:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b2d4:	outs   dx,BYTE PTR ds:[rsi]
   14000b2d5:	rex.B outs dx,BYTE PTR ds:[rsi]
   14000b2d7:	fs push rbx
   14000b2d9:	jo     0x14000b344
   14000b2db:	outs   dx,BYTE PTR ds:[rsi]
   14000b2dc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b2de:	jne    0x14000b34e
   14000b2e0:	je     0x14000b2e2
   14000b2e2:	add    eax,0x6c654401
   14000b2e7:	gs je  0x14000b34f
   14000b2ea:	rex.XB jb 0x14000b356
   14000b2ed:	je     0x14000b358
   14000b2ef:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b2f2:	push   rbx
   14000b2f3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b2f8:	outs   dx,BYTE PTR ds:[rsi]
   14000b2f9:	add    BYTE PTR [rcx],ch
   14000b2fb:	add    DWORD PTR [rbp+0x6e],eax
   14000b2fe:	je     0x14000b365
   14000b300:	jb     0x14000b345
   14000b302:	jb     0x14000b36d
   14000b304:	je     0x14000b36f
   14000b306:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b309:	push   rbx
   14000b30a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b30f:	outs   dx,BYTE PTR ds:[rsi]
   14000b310:	add    BYTE PTR [rax],al
   14000b312:	test   eax,0x61654c03
   14000b317:	jbe    0x14000b37e
   14000b319:	rex.XB jb 0x14000b385
   14000b31c:	je     0x14000b387
   14000b31e:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b321:	push   rbx
   14000b322:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b327:	outs   dx,BYTE PTR ds:[rsi]
   14000b328:	add    BYTE PTR [rax],al
   14000b32a:	sti    
   14000b32b:	add    BYTE PTR [rbp+riz*2+0x62],al
   14000b32f:	jne    0x14000b398
   14000b331:	rex.X jb 0x14000b399
   14000b334:	(bad)  
   14000b335:	imul   eax,DWORD PTR [rax],0x0
   14000b338:	push   0x2
   14000b33a:	rex.RXB
   14000b33b:	gs je  0x14000b38b
   14000b33e:	outs   dx,DWORD PTR ds:[rsi]
   14000b33f:	fs jne 0x14000b3ae
   14000b342:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000b34c:	add    BYTE PTR [rax],al
   14000b34e:	push   rdi
   14000b34f:	add    DWORD PTR [rbp+0x78],eax
   14000b352:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   14000b35a:	jae    0x14000b35c
   14000b35c:	rol    BYTE PTR [rcx],1
   14000b35e:	rex.RXB
   14000b35f:	gs je  0x14000b3a5
   14000b362:	outs   dx,DWORD PTR ds:[rsi]
   14000b363:	ins    DWORD PTR es:[rdi],dx
   14000b364:	ins    DWORD PTR es:[rdi],dx
   14000b365:	(bad)  
   14000b366:	outs   dx,BYTE PTR ds:[rsi]
   14000b367:	imul   r13,QWORD PTR fs:[rsi+0x65],0x3440057
   14000b370:	rex.W
   14000b371:	gs (bad) 
   14000b373:	jo     0x14000b3c8
   14000b375:	gs je  0x14000b3c1
   14000b378:	outs   dx,BYTE PTR ds:[rsi]
   14000b379:	outs   dx,WORD PTR ds:[rsi]
   14000b37b:	jb     0x14000b3ea
   14000b37d:	(bad)  
   14000b37e:	je     0x14000b3e9
   14000b380:	outs   dx,DWORD PTR ds:[rsi]
   14000b381:	outs   dx,BYTE PTR ds:[rsi]
   14000b382:	add    BYTE PTR [rax],al
   14000b384:	rex.WXB
   14000b385:	rex.RB push r10
   14000b387:	rex.WRX
   14000b388:	rex.RB
   14000b389:	xor    r14,QWORD PTR [rdx]
   14000b38c:	cs fs ins BYTE PTR es:[rdi],dx
   14000b38f:	ins    BYTE PTR es:[rdi],dx
   14000b390:	add    BYTE PTR [rax],al
   14000b392:	lea    eax,[rcx]
   14000b394:	(bad)  
   14000b395:	(bad)  
   14000b396:	pop    rdi
   14000b397:	(bad)  
   14000b398:	rex.XB push r13
   14000b39a:	outs   dx,BYTE PTR ds:[rsi]
   14000b39b:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000b39f:	gs jb  0x14000b410
   14000b3a2:	(bad)  
   14000b3a3:	ins    BYTE PTR es:[rdi],dx
   14000b3a4:	rex
   14000b3a5:	rex
   14000b3a6:	ss rex.X
   14000b3a8:	add    BYTE PTR [rax+0x0],bpl
   14000b3ac:	(bad)  
   14000b3ad:	(bad)  
   14000b3ae:	xor    BYTE PTR [rbx+0x55],al
   14000b3b1:	outs   dx,BYTE PTR ds:[rsi]
   14000b3b2:	imul   eax,DWORD PTR [rax+0x40],0x51
   14000b3b6:	rex.RB
   14000b3b7:	rex.B
   14000b3b8:	rex.B
   14000b3b9:	rex push rax
   14000b3bb:	rex.RB
   14000b3bc:	push   r14
   14000b3be:	rex.XB
   14000b3bf:	imul   r12,QWORD PTR [rsi+0x65],0x746e6f43
   14000b3c7:	jb     0x14000b438
   14000b3c9:	ins    BYTE PTR es:[rdi],dx
   14000b3ca:	rex
   14000b3cb:	rex push rax
   14000b3cd:	rex.RB
   14000b3ce:	push   r13
   14000b3d0:	rex.WB push r13
   14000b3d2:	outs   dx,BYTE PTR ds:[rsi]
   14000b3d3:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000b3d7:	outs   dx,BYTE PTR ds:[rsi]
   14000b3d8:	rex
   14000b3d9:	rex
   14000b3da:	rex pop rdx
   14000b3dc:	add    BYTE PTR [rax],al
   14000b3de:	xlat   BYTE PTR ds:[rbx]
   14000b3df:	add    BYTE PTR [rdi],bh
   14000b3e1:	(bad)  
   14000b3e2:	xor    DWORD PTR [rbx+0x55],eax
   14000b3e5:	outs   dx,BYTE PTR ds:[rsi]
   14000b3e6:	imul   eax,DWORD PTR [rax+0x40],0x55
   14000b3ea:	rex.RB
   14000b3eb:	rex.B
   14000b3ec:	rex.B
   14000b3ed:	rex pop rax
   14000b3ef:	pop    rdx
   14000b3f0:	add    BYTE PTR [rax],al
   14000b3f2:	pop    rcx
   14000b3f3:	add    edi,DWORD PTR [rdi]
   14000b3f5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b3f7:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b3ff:	rex
   14000b400:	rex.XB push r13
   14000b402:	outs   dx,BYTE PTR ds:[rsi]
   14000b403:	imul   eax,DWORD PTR [rax+0x40],0x55
   14000b407:	rex.RB
   14000b408:	rex.B
   14000b409:	rex.B
   14000b40a:	rex.W pop rax
   14000b40c:	pop    rdx
   14000b40d:	add    al,bl
   14000b40f:	add    edi,DWORD PTR [rdi]
   14000b411:	push   rcx
   14000b412:	jne    0x14000b479
   14000b414:	jb     0x14000b48f
   14000b416:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b418:	je     0x14000b47f
   14000b41a:	jb     0x14000b482
   14000b41c:	(bad)  
   14000b41d:	movsxd esp,DWORD PTR [rbp+0x40]
   14000b420:	rex.XB push r13
   14000b422:	outs   dx,BYTE PTR ds:[rsi]
   14000b423:	imul   eax,DWORD PTR [rax+0x40],0x55
   14000b427:	rex.RB
   14000b428:	rex.B
   14000b429:	rex.B
   14000b42a:	rex.WX
   14000b42b:	rex.B
   14000b42c:	rex.RB
   14000b42d:	rex.X push rbp
   14000b42f:	pop    rdi
   14000b430:	rex.RXB push r13
   14000b432:	rex.WB
   14000b433:	rex.R
   14000b434:	rex
   14000b435:	rex push rax
   14000b437:	rex.RB
   14000b438:	push   r8
   14000b43a:	rex.RB
   14000b43b:	pop    r8
   14000b43d:	rex pop rdx
   14000b43f:	add    BYTE PTR [rsi+0x64413f01],bh
   14000b445:	fs push rdx
   14000b447:	gs data16 rex
   14000b44a:	rex.XB push r13
   14000b44c:	outs   dx,BYTE PTR ds:[rsi]
   14000b44d:	imul   eax,DWORD PTR [rax+0x40],0x55
   14000b451:	rex.RB
   14000b452:	rex.B
   14000b453:	rex.B
   14000b454:	rex.WXB pop r8
   14000b456:	pop    rdx
   14000b457:	add    ch,ch
   14000b459:	add    edi,DWORD PTR [rdi]
   14000b45b:	push   rdx
   14000b45c:	gs ins BYTE PTR es:[rdi],dx
   14000b45e:	gs (bad) 
   14000b460:	jae    0x14000b4c7
   14000b462:	rex
   14000b463:	rex.XB push r13
   14000b465:	outs   dx,BYTE PTR ds:[rsi]
   14000b466:	imul   eax,DWORD PTR [rax+0x40],0x55
   14000b46a:	rex.RB
   14000b46b:	rex.B
   14000b46c:	rex.B
   14000b46d:	rex.WXB pop r8
   14000b46f:	pop    rdx
   14000b470:	add    BYTE PTR [rax],al
   14000b472:	out    dx,al
   14000b473:	add    edi,DWORD PTR [rdi]
   14000b475:	push   rdx
   14000b476:	gs ins BYTE PTR es:[rdi],dx
   14000b478:	gs (bad) 
   14000b47a:	jae    0x14000b4e1
   14000b47c:	rex
   14000b47d:	rex.XB push r13
   14000b47f:	outs   dx,BYTE PTR ds:[rsi]
   14000b480:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000b484:	gs jb  0x14000b4f5
   14000b487:	(bad)  
   14000b488:	ins    BYTE PTR es:[rdi],dx
   14000b489:	rex
   14000b48a:	rex push rbp
   14000b48c:	rex.RB
   14000b48d:	rex.B
   14000b48e:	rex.B
   14000b48f:	rex.WXB pop r8
   14000b491:	pop    rdx
   14000b492:	add    BYTE PTR [rax],al
   14000b494:	mov    edi,0x64413f01
   14000b499:	fs push rdx
   14000b49b:	gs data16 rex
   14000b49e:	rex.XB push r13
   14000b4a0:	outs   dx,BYTE PTR ds:[rsi]
   14000b4a1:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000b4a5:	gs jb  0x14000b516
   14000b4a8:	(bad)  
   14000b4a9:	ins    BYTE PTR es:[rdi],dx
   14000b4aa:	rex
   14000b4ab:	rex push rbp
   14000b4ad:	rex.RB
   14000b4ae:	rex.B
   14000b4af:	rex.B
   14000b4b0:	rex.WXB pop r8
   14000b4b2:	pop    rdx
   14000b4b3:	add    cl,bl
   14000b4b5:	add    edi,DWORD PTR [rdi]
   14000b4b7:	push   rcx
   14000b4b8:	jne    0x14000b51f
   14000b4ba:	jb     0x14000b535
   14000b4bc:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b4be:	je     0x14000b525
   14000b4c0:	jb     0x14000b528
   14000b4c2:	(bad)  
   14000b4c3:	movsxd esp,DWORD PTR [rbp+0x40]
   14000b4c6:	rex.XB push r13
   14000b4c8:	outs   dx,BYTE PTR ds:[rsi]
   14000b4c9:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000b4cd:	gs jb  0x14000b53e
   14000b4d0:	(bad)  
   14000b4d1:	ins    BYTE PTR es:[rdi],dx
   14000b4d2:	rex
   14000b4d3:	rex push rbp
   14000b4d5:	rex.RB
   14000b4d6:	rex.B
   14000b4d7:	rex.B
   14000b4d8:	rex.WX
   14000b4d9:	rex.B
   14000b4da:	rex.RB
   14000b4db:	rex.X push rbp
   14000b4dd:	pop    rdi
   14000b4de:	rex.RXB push r13
   14000b4e0:	rex.WB
   14000b4e1:	rex.R
   14000b4e2:	rex
   14000b4e3:	rex push rax
   14000b4e5:	rex.RB
   14000b4e6:	push   r8
   14000b4e8:	rex.RB
   14000b4e9:	pop    r8
   14000b4eb:	rex pop rdx
   14000b4ed:	add    BYTE PTR [rdx+0x0],ch
   14000b4f0:	(bad)  
   14000b4f1:	(bad)  
   14000b4f2:	xor    BYTE PTR [rbx+0x55],al
   14000b4f5:	outs   dx,BYTE PTR ds:[rsi]
   14000b4f6:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000b4fa:	gs jb  0x14000b56b
   14000b4fd:	(bad)  
   14000b4fe:	ins    BYTE PTR es:[rdi],dx
   14000b4ff:	rex
   14000b500:	rex push rcx
   14000b502:	rex.RB
   14000b503:	rex.B
   14000b504:	rex.B
   14000b505:	rex push rax
   14000b507:	rex.RB
   14000b508:	push   r14
   14000b50a:	rex.XB
   14000b50b:	imul   r12,QWORD PTR [rsi+0x65],0x746e6f43
   14000b513:	jb     0x14000b584
   14000b515:	ins    BYTE PTR es:[rdi],dx
   14000b516:	rex
   14000b517:	rex
   14000b518:	rex pop rdx
   14000b51a:	add    BYTE PTR [rax],al
   14000b51c:	mov    edi,0x6e4f3f03
   14000b521:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b523:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b52b:	rex
   14000b52c:	rex.XB push r13
   14000b52e:	outs   dx,BYTE PTR ds:[rsi]
   14000b52f:	imul   eax,DWORD PTR [rax+0x40],0x55
   14000b533:	rex.RB
   14000b534:	rex.B
   14000b535:	rex.B
   14000b536:	rex.W pop rax
   14000b538:	pop    rdx
   14000b539:	add    bl,bl
   14000b53b:	add    al,0x3f
   14000b53d:	push   rdi
   14000b53e:	(bad)  
   14000b53f:	gs ins DWORD PTR es:[rdi],dx
   14000b541:	rex.WRB
   14000b542:	gs ins DWORD PTR es:[rdi],dx
   14000b544:	rex.B ins BYTE PTR es:[rdi],dx
   14000b546:	ins    BYTE PTR es:[rdi],dx
   14000b547:	outs   dx,DWORD PTR ds:[rsi]
   14000b548:	movsxd eax,DWORD PTR [rax+0x43]
   14000b54b:	push   rdi
   14000b54c:	imul   ebp,DWORD PTR [rsi+0x33],0x66654432
   14000b553:	(bad)  
   14000b554:	jne    0x14000b5c2
   14000b556:	je     0x14000b599
   14000b558:	jb     0x14000b5bf
   14000b55a:	outs   dx,BYTE PTR ds:[rsi]
   14000b55b:	(bad)  
   14000b55c:	rex
   14000b55d:	rex push rbx
   14000b55f:	push   r8
   14000b561:	rex.RB
   14000b562:	pop    r8
   14000b564:	pop    rdi
   14000b565:	rex.WXB
   14000b566:	rex pop rdx
   14000b568:	add    BYTE PTR [rax],al
   14000b56a:	fadd   QWORD PTR [rdi+rdi*1]
   14000b56d:	push   rdi
   14000b56e:	(bad)  
   14000b56f:	gs ins DWORD PTR es:[rdi],dx
   14000b571:	rex.WRB
   14000b572:	gs ins DWORD PTR es:[rdi],dx
   14000b574:	rex.RX jb 0x14000b5dc
   14000b577:	gs rex
   14000b579:	rex.XB push r15
   14000b57b:	imul   ebp,DWORD PTR [rsi+0x33],0x66654432
   14000b582:	(bad)  
   14000b583:	jne    0x14000b5f1
   14000b585:	je     0x14000b5c8
   14000b587:	jb     0x14000b5ee
   14000b589:	outs   dx,BYTE PTR ds:[rsi]
   14000b58a:	(bad)  
   14000b58b:	rex
   14000b58c:	rex push rbx
   14000b58e:	rex.B
   14000b58f:	rex.W push rax
   14000b591:	rex.RB
   14000b592:	pop    r8
   14000b594:	rex pop rdx
   14000b596:	add    BYTE PTR [rax],al
   14000b598:	(bad)  
   14000b599:	add    DWORD PTR [rdi],edi
   14000b59b:	(bad)  
   14000b59c:	xor    al,0x57
   14000b59e:	push   rbx
   14000b59f:	je     0x14000b613
   14000b5a1:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14000b5a8:	rex.B
   14000b5a9:	rex.B
   14000b5aa:	rex.B
   14000b5ab:	rex.RB
   14000b5ac:	push   r14
   14000b5ae:	xor    BYTE PTR [rax+0x41],al
   14000b5b1:	rex.RB
   14000b5b2:	rex.X push rsi
   14000b5b4:	xor    BYTE PTR [rax+0x40],al
   14000b5b7:	pop    rdx
   14000b5b8:	add    BYTE PTR [rax],al
   14000b5ba:	stos   DWORD PTR es:[rdi],eax
   14000b5bb:	add    BYTE PTR [rdi],bh
   14000b5bd:	(bad)  
   14000b5be:	xor    BYTE PTR [rdi+0x53],dl
   14000b5c1:	je     0x14000b635
   14000b5c3:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14000b5ca:	rex.B
   14000b5cb:	rex.B
   14000b5cc:	rex pop rax
   14000b5ce:	pop    rdx
   14000b5cf:	add    BYTE PTR [rax],bh
   14000b5d1:	add    DWORD PTR [rdi],edi
   14000b5d3:	(bad)  
   14000b5d4:	xor    al,0x57
   14000b5d6:	push   rbx
   14000b5d7:	je     0x14000b64b
   14000b5d9:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14000b5e0:	rex.B
   14000b5e1:	rex.B
   14000b5e2:	rex.B
   14000b5e3:	rex.RB
   14000b5e4:	push   r14
   14000b5e6:	xor    BYTE PTR [rax+0x50],al
   14000b5e9:	rex.RB
   14000b5ea:	rex.X
   14000b5eb:	rex.RXB
   14000b5ec:	rex pop rdx
   14000b5ee:	add    BYTE PTR [rax],al
   14000b5f0:	jbe    0x14000b5f3
   14000b5f2:	(bad)  
   14000b5f3:	(bad)  
   14000b5f4:	pop    rcx
   14000b5f5:	push   rdi
   14000b5f6:	push   rbx
   14000b5f7:	je     0x14000b66b
   14000b5f9:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14000b600:	rex.B
   14000b601:	rex.B
   14000b602:	rex.B
   14000b603:	rex.RB
   14000b604:	push   r14
   14000b606:	xor    BYTE PTR [rax+0x50],al
   14000b609:	rex.RB
   14000b60a:	rex.X
   14000b60b:	rex.RXB
   14000b60c:	rex pop rdx
   14000b60e:	add    BYTE PTR [rax],al
   14000b610:	test   al,0x0
   14000b612:	(bad)  
   14000b613:	(bad)  
   14000b614:	xor    BYTE PTR [rdi+0x53],dl
   14000b617:	je     0x14000b68b
   14000b619:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14000b620:	rex.B
   14000b621:	rex.B
   14000b622:	rex push rax
   14000b624:	rex.RB
   14000b625:	rex.B
   14000b626:	rex.RXB
   14000b627:	rex.W
   14000b628:	rex pop rdx
   14000b62a:	add    BYTE PTR [rax],al
   14000b62c:	in     al,dx
   14000b62d:	add    al,0x3f
   14000b62f:	push   rdi
   14000b630:	jb     0x14000b69b
   14000b632:	je     0x14000b699
   14000b634:	rex
   14000b635:	rex.XB
   14000b636:	rex.WRB
   14000b637:	gs ins DWORD PTR es:[rdi],dx
   14000b639:	outs   dx,DWORD PTR ds:[rsi]
   14000b63a:	jb     0x14000b6b5
   14000b63c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b63e:	addr32 rex
   14000b640:	rex push rcx
   14000b642:	rex.RB
   14000b643:	rex.B
   14000b644:	pop    r8
   14000b646:	rex.WX
   14000b647:	rex pop rdx
   14000b649:	add    dl,dl
   14000b64b:	add    bh,BYTE PTR [rdi]
   14000b64d:	rex.RXB
   14000b64e:	gs je  0x14000b69e
   14000b651:	gs ins DWORD PTR es:[rdi],dx
   14000b653:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b655:	addr32 rex.WRXB (bad) 
   14000b658:	push   0x65
   14000b65a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14000b65e:	pop    rcx
   14000b65f:	push   r8
   14000b661:	rex.RB
   14000b662:	push   r14
   14000b664:	rex.XB
   14000b665:	rex.WRB
   14000b666:	gs ins DWORD PTR es:[rdi],dx
   14000b668:	outs   dx,DWORD PTR ds:[rsi]
   14000b669:	jb     0x14000b6e4
   14000b66b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b66d:	addr32 rex
   14000b66f:	rex pop rax
   14000b671:	pop    rdx
   14000b672:	add    BYTE PTR [rax],al
   14000b674:	(bad)  
   14000b675:	add    DWORD PTR [rdi],edi
   14000b677:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x40727450
   14000b67f:	push   rdi
   14000b680:	push   rbx
   14000b681:	je     0x14000b6f5
   14000b683:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14000b68a:	rex.B
   14000b68b:	pop    r8
   14000b68d:	push   rax
   14000b68e:	rex.RB
   14000b68f:	rex.B
   14000b690:	rex.RXB
   14000b691:	rex pop rdx
   14000b693:	add    dh,ah
   14000b695:	add    BYTE PTR [rdi],bh
   14000b697:	(bad)  
   14000b698:	xor    DWORD PTR [rdi+0x53],edx
   14000b69b:	je     0x14000b70f
   14000b69d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14000b6a4:	rex.B
   14000b6a5:	rex.B
   14000b6a6:	rex pop rax
   14000b6a8:	pop    rdx
   14000b6a9:	add    BYTE PTR [rbx+rax*1+0x3f],bl
   14000b6ad:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b6af:	jae    0x14000b716
   14000b6b1:	jb     0x14000b727
   14000b6b3:	rex.B je 0x14000b6f6
   14000b6b6:	rex.XB
   14000b6b7:	rex.RX ins BYTE PTR es:[rdi],dx
   14000b6b9:	gs js  0x14000b6fd
   14000b6bc:	jb     0x14000b730
   14000b6be:	(bad)  
   14000b6bf:	jns    0x14000b701
   14000b6c1:	rex push rcx
   14000b6c3:	rex.RB
   14000b6c4:	rex.B
   14000b6c5:	rex.B
   14000b6c6:	rex.W
   14000b6c7:	rex.W push rax
   14000b6c9:	rex.RB
   14000b6ca:	pop    r8
   14000b6cc:	rex pop rdx
   14000b6ce:	add    BYTE PTR [rax],al
   14000b6d0:	std    
   14000b6d1:	add    DWORD PTR [rdi],edi
   14000b6d3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b6d5:	ins    DWORD PTR es:[rdi],dx
   14000b6d6:	jo     0x14000b74a
   14000b6d8:	gs jae 0x14000b74e
   14000b6db:	rex
   14000b6dc:	rex.XB
   14000b6dd:	rex.RX ins BYTE PTR es:[rdi],dx
   14000b6df:	gs js  0x14000b723
   14000b6e2:	jb     0x14000b756
   14000b6e4:	(bad)  
   14000b6e5:	jns    0x14000b727
   14000b6e7:	rex push rcx
   14000b6e9:	rex.RB
   14000b6ea:	rex.B
   14000b6eb:	pop    r8
   14000b6ed:	pop    rax
   14000b6ee:	pop    rdx
   14000b6ef:	add    BYTE PTR [rsi],ah
   14000b6f1:	add    BYTE PTR [rdi],bh
   14000b6f3:	(bad)  
   14000b6f4:	xor    BYTE PTR [rbx+0x46],al
   14000b6f7:	ins    BYTE PTR es:[rdi],dx
   14000b6f8:	gs js  0x14000b73c
   14000b6fb:	jb     0x14000b76f
   14000b6fd:	(bad)  
   14000b6fe:	jns    0x14000b740
   14000b700:	rex push rcx
   14000b702:	rex.RB
   14000b703:	rex.B
   14000b704:	rex.B
   14000b705:	rex
   14000b706:	rex.W
   14000b707:	rex.W
   14000b708:	rex pop rdx
   14000b70a:	add    BYTE PTR [rax],al
   14000b70c:	mov    esi,0x313f3f00
   14000b711:	rex.XB
   14000b712:	rex.RX ins BYTE PTR es:[rdi],dx
   14000b714:	gs js  0x14000b758
   14000b717:	jb     0x14000b78b
   14000b719:	(bad)  
   14000b71a:	jns    0x14000b75c
   14000b71c:	rex push rcx
   14000b71e:	rex.RB
   14000b71f:	rex.B
   14000b720:	rex.B
   14000b721:	rex pop rax
   14000b723:	pop    rdx
   14000b724:	add    BYTE PTR [rax],al
   14000b726:	add    DWORD PTR ds:[rdi],edi
   14000b729:	(bad)  
   14000b72a:	rex.B
   14000b72b:	rex.XB
   14000b72c:	rex.RX ins BYTE PTR es:[rdi],dx
   14000b72e:	gs js  0x14000b772
   14000b731:	jb     0x14000b7a5
   14000b733:	(bad)  
   14000b734:	jns    0x14000b776
   14000b736:	rex push rcx
   14000b738:	rex.RB
   14000b739:	rex.B
   14000b73a:	rex.B
   14000b73b:	rex.B
   14000b73c:	rex.RB
   14000b73d:	push   r8
   14000b73f:	rex.RB
   14000b740:	pop    r8
   14000b742:	rex.W
   14000b743:	rex pop rdx
   14000b745:	add    BYTE PTR [rbx],bh
   14000b747:	add    bh,BYTE PTR [rdi]
   14000b749:	rex.RB ins DWORD PTR es:[rdi],dx
   14000b74b:	jo     0x14000b7c1
   14000b74d:	jns    0x14000b78f
   14000b74f:	rex.XB
   14000b750:	rex.RX ins BYTE PTR es:[rdi],dx
   14000b752:	gs js  0x14000b796
   14000b755:	jb     0x14000b7c9
   14000b757:	(bad)  
   14000b758:	jns    0x14000b79a
   14000b75a:	rex push rcx
   14000b75c:	rex.RB
   14000b75d:	rex.B
   14000b75e:	pop    r8
   14000b760:	pop    rax
   14000b761:	pop    rdx
   14000b762:	add    BYTE PTR [rax],al
   14000b764:	ret    
   14000b765:	add    BYTE PTR [rdi],bh
   14000b767:	(bad)  
   14000b768:	xor    DWORD PTR [rbx+0x49],eax
   14000b76b:	outs   dx,BYTE PTR ds:[rsi]
   14000b76c:	rex.XB jb 0x14000b7d8
   14000b76f:	je     0x14000b7c4
   14000b771:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14000b775:	push   rcx
   14000b776:	rex.RB
   14000b777:	rex.B
   14000b778:	rex.B
   14000b779:	rex pop rax
   14000b77b:	pop    rdx
   14000b77c:	add    BYTE PTR [rax],al
   14000b77e:	(bad)  
   14000b77f:	add    BYTE PTR [rdi],bh
   14000b781:	(bad)  
   14000b782:	xor    BYTE PTR [rbx+0x49],al
   14000b785:	outs   dx,BYTE PTR ds:[rsi]
   14000b786:	rex.XB jb 0x14000b7f2
   14000b789:	je     0x14000b7de
   14000b78b:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14000b78f:	push   rcx
   14000b790:	rex.RB
   14000b791:	rex.B
   14000b792:	rex.B
   14000b793:	rex push rax
   14000b795:	rex.RB
   14000b796:	push   r13
   14000b798:	pop    rdi
   14000b799:	push   rdx
   14000b79a:	push   rsp
   14000b79b:	rex.WR pop rdi
   14000b79d:	rex.XB push r10
   14000b79f:	rex.WB push r12
   14000b7a1:	rex.WB
   14000b7a2:	rex.XB
   14000b7a3:	rex.B
   14000b7a4:	rex.WR pop rdi
   14000b7a6:	push   rbx
   14000b7a7:	rex.RB
   14000b7a8:	rex.XB push r12
   14000b7aa:	rex.WB
   14000b7ab:	rex.WRXB
   14000b7ac:	rex.WRX
   14000b7ad:	rex
   14000b7ae:	rex
   14000b7af:	rex pop rdx
   14000b7b1:	add    BYTE PTR [rdx+0x654c3f03],ah
   14000b7b7:	(bad)  
   14000b7b8:	jbe    0x14000b81f
   14000b7ba:	rex
   14000b7bb:	rex.XB
   14000b7bc:	rex.XB jb 0x14000b828
   14000b7bf:	je     0x14000b814
   14000b7c1:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14000b7c5:	push   rcx
   14000b7c6:	rex.RB
   14000b7c7:	rex.B
   14000b7c8:	pop    r8
   14000b7ca:	pop    rax
   14000b7cb:	pop    rdx
   14000b7cc:	add    BYTE PTR [rax],al
   14000b7ce:	push   rbx
   14000b7cf:	add    bh,BYTE PTR [rdi]
   14000b7d1:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b7d3:	je     0x14000b83a
   14000b7d5:	jb     0x14000b817
   14000b7d7:	rex.XB
   14000b7d8:	rex.XB jb 0x14000b844
   14000b7db:	je     0x14000b830
   14000b7dd:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14000b7e1:	push   rcx
   14000b7e2:	rex.RB
   14000b7e3:	rex.B
   14000b7e4:	pop    r8
   14000b7e6:	pop    rax
   14000b7e7:	pop    rdx
   14000b7e8:	add    BYTE PTR [rax],al
   14000b7ea:	mov    ch,0x0
   14000b7ec:	(bad)  
   14000b7ed:	(bad)  
   14000b7ee:	xor    DWORD PTR [rbx+0x43],eax
   14000b7f1:	jb     0x14000b85c
   14000b7f3:	je     0x14000b848
   14000b7f5:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14000b7f9:	push   rcx
   14000b7fa:	rex.RB
   14000b7fb:	rex.B
   14000b7fc:	rex.B
   14000b7fd:	rex pop rax
   14000b7ff:	pop    rdx
   14000b800:	add    BYTE PTR [rax],al
   14000b802:	(bad)  
   14000b803:	add    BYTE PTR [rdi],bh
   14000b805:	(bad)  
   14000b806:	xor    BYTE PTR [rbx+0x43],al
   14000b809:	jb     0x14000b874
   14000b80b:	je     0x14000b860
   14000b80d:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14000b811:	push   rcx
   14000b812:	rex.RB
   14000b813:	rex.B
   14000b814:	rex.B
   14000b815:	rex pop rax
   14000b817:	pop    rdx
   14000b818:	add    BYTE PTR [rax],al
   14000b81a:	movsxd eax,DWORD PTR [rbx]
   14000b81c:	(bad)  
   14000b81d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b81f:	je     0x14000b886
   14000b821:	jb     0x14000b891
   14000b823:	(bad)  
   14000b824:	ins    BYTE PTR es:[rdi],dx
   14000b825:	push   rdx
   14000b826:	gs ins BYTE PTR es:[rdi],dx
   14000b828:	gs (bad) 
   14000b82a:	jae    0x14000b891
   14000b82c:	rex
   14000b82d:	rex.XB push r13
   14000b82f:	outs   dx,BYTE PTR ds:[rsi]
   14000b830:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000b834:	gs jb  0x14000b8a5
   14000b837:	(bad)  
   14000b838:	ins    BYTE PTR es:[rdi],dx
   14000b839:	rex
   14000b83a:	rex push rcx
   14000b83c:	rex.RB
   14000b83d:	rex.B
   14000b83e:	rex.B
   14000b83f:	rex.WXB pop r8
   14000b841:	pop    rdx
   14000b842:	add    BYTE PTR [rax],al
   14000b844:	(bad)  
   14000b845:	add    edi,DWORD PTR [rdi]
   14000b847:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b849:	je     0x14000b8b0
   14000b84b:	jb     0x14000b8bb
   14000b84d:	(bad)  
   14000b84e:	ins    BYTE PTR es:[rdi],dx
   14000b84f:	push   rcx
   14000b850:	jne    0x14000b8b7
   14000b852:	jb     0x14000b8cd
   14000b854:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b856:	je     0x14000b8bd
   14000b858:	jb     0x14000b8c0
   14000b85a:	(bad)  
   14000b85b:	movsxd esp,DWORD PTR [rbp+0x40]
   14000b85e:	rex.XB push r13
   14000b860:	outs   dx,BYTE PTR ds:[rsi]
   14000b861:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000b865:	gs jb  0x14000b8d6
   14000b868:	(bad)  
   14000b869:	ins    BYTE PTR es:[rdi],dx
   14000b86a:	rex
   14000b86b:	rex push rcx
   14000b86d:	rex.RB
   14000b86e:	rex.B
   14000b86f:	rex.B
   14000b870:	rex.WX
   14000b871:	rex.B
   14000b872:	rex.RB
   14000b873:	rex.X push rbp
   14000b875:	pop    rdi
   14000b876:	rex.RXB push r13
   14000b878:	rex.WB
   14000b879:	rex.R
   14000b87a:	rex
   14000b87b:	rex push rax
   14000b87d:	rex.RB
   14000b87e:	push   r8
   14000b880:	rex.RB
   14000b881:	pop    r8
   14000b883:	rex pop rdx
   14000b885:	add    BYTE PTR [rdi+0x62],dh
   14000b888:	gs ins DWORD PTR es:[rdi],dx
   14000b88a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b88d:	outs   dx,BYTE PTR ds:[rsi]
   14000b88e:	cs fs ins BYTE PTR es:[rdi],dx
   14000b891:	ins    BYTE PTR es:[rdi],dx
   14000b892:	add    BYTE PTR [rax],al
   14000b894:	xchg   BYTE PTR [rdx],al
   14000b896:	push   rax
   14000b897:	outs   dx,DWORD PTR ds:[rsi]
   14000b898:	jae    0x14000b90e
   14000b89a:	push   rsp
   14000b89b:	push   0x64616572
   14000b8a0:	rex.WRB
   14000b8a1:	gs jae 0x14000b917
   14000b8a4:	(bad)  
   14000b8a5:	addr32 gs push rdi
   14000b8a8:	add    BYTE PTR [rax],al
   14000b8aa:	js     0x14000b8ad
   14000b8ac:	rex.RXB
   14000b8ad:	gs je  0x14000b8fd
   14000b8b0:	gs jae 0x14000b926
   14000b8b3:	(bad)  
   14000b8b4:	addr32 gs push rdi
   14000b8b7:	add    BYTE PTR [rbx+0x3],ch
   14000b8ba:	push   rsp
   14000b8bb:	jb     0x14000b91e
   14000b8bd:	outs   dx,BYTE PTR ds:[rsi]
   14000b8be:	jae    0x14000b92c
   14000b8c0:	(bad)  
   14000b8c1:	je     0x14000b928
   14000b8c3:	rex.WRB
   14000b8c4:	gs jae 0x14000b93a
   14000b8c7:	(bad)  
   14000b8c8:	add    BYTE PTR gs:[eax],al
   14000b8cc:	mov    dh,0x0
   14000b8ce:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14000b8d6:	rex.WRB
   14000b8d7:	gs jae 0x14000b94d
   14000b8da:	(bad)  
   14000b8db:	addr32 gs push rdi
   14000b8de:	add    BYTE PTR [rax],al
   14000b8e0:	test   BYTE PTR [rdx],al
   14000b8e2:	push   rax
   14000b8e3:	outs   dx,DWORD PTR ds:[rsi]
   14000b8e4:	jae    0x14000b95a
   14000b8e6:	push   rcx
   14000b8e7:	jne    0x14000b952
   14000b8e9:	je     0x14000b938
   14000b8eb:	gs jae 0x14000b961
   14000b8ee:	(bad)  
   14000b8ef:	add    BYTE PTR gs:[eax*1+0x73736377],dl
   14000b8f8:	je     0x14000b96c
   14000b8fa:	add    BYTE PTR [rax],al
   14000b8fc:	popf   
   14000b8fd:	add    al,0x70
   14000b8ff:	jb     0x14000b96a
   14000b901:	outs   dx,BYTE PTR ds:[rsi]
   14000b902:	je     0x14000b96a
   14000b904:	add    BYTE PTR [rax],al
   14000b906:	push   rax
   14000b907:	add    BYTE PTR [rbx+0x74],dl
   14000b90a:	jb     0x14000b975
   14000b90c:	outs   dx,BYTE PTR ds:[rsi]
   14000b90d:	addr32 rex.RX jb 0x14000b980
   14000b911:	ins    DWORD PTR es:[rdi],dx
   14000b912:	rex.RXB push r13
   14000b914:	rex.WB
   14000b915:	xor    r8b,BYTE PTR [rax]
   14000b918:	(bad)  
   14000b919:	add    BYTE PTR [rbx+0x65],dl
   14000b91c:	je     0x14000b971
   14000b91e:	gs jb  0x14000b997
   14000b921:	imul   esp,DWORD PTR [rbx+0x65],0x74617453
   14000b928:	jne    0x14000b99d
   14000b92a:	add    BYTE PTR [rax],al
   14000b92c:	or     eax,0x67655200
   14000b931:	imul   esi,DWORD PTR [rbx+0x74],0x65537265
   14000b938:	jb     0x14000b9b0
   14000b93a:	imul   esp,DWORD PTR [rbx+0x65],0x6c727443
   14000b941:	rex.W (bad) 
   14000b943:	outs   dx,BYTE PTR ds:[rsi]
   14000b944:	fs ins BYTE PTR es:[rdi],dx
   14000b946:	gs jb  0x14000b9a0
   14000b949:	add    BYTE PTR [rdi],al
   14000b94b:	add    BYTE PTR [rbx+0x74],dl
   14000b94e:	(bad)  
   14000b94f:	jb     0x14000b9c5
   14000b951:	push   rbx
   14000b952:	gs jb  0x14000b9cb
   14000b955:	imul   esp,DWORD PTR [rbx+0x65],0x6c727443
   14000b95c:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14000b964:	gs jb  0x14000b9be
   14000b967:	add    BYTE PTR [rax+rax*1],al
   14000b96a:	rex.WRXB jo 0x14000b9d2
   14000b96d:	outs   dx,BYTE PTR ds:[rsi]
   14000b96e:	push   rbx
   14000b96f:	rex.XB
   14000b970:	rex.WRB (bad) 
   14000b972:	outs   dx,BYTE PTR ds:[rsi]
   14000b973:	(bad)  
   14000b974:	addr32 gs jb 0x14000b9cf
   14000b978:	add    BYTE PTR [rax],al
   14000b97a:	add    al,BYTE PTR [rax]
   14000b97c:	rex.XB jb 0x14000b9e4
   14000b97f:	(bad)  
   14000b980:	je     0x14000b9e7
   14000b982:	push   rbx
   14000b983:	gs jb  0x14000b9fc
   14000b986:	imul   esp,DWORD PTR [rbx+0x65],0x5000057
   14000b98d:	add    BYTE PTR [rdi+0x70],cl
   14000b990:	outs   dx,BYTE PTR gs:[rsi]
   14000b992:	push   rbx
   14000b993:	gs jb  0x14000ba0c
   14000b996:	imul   esp,DWORD PTR [rbx+0x65],0x3000057
   14000b99d:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14000b9a1:	gs je  0x14000ba09
   14000b9a4:	push   rbx
   14000b9a5:	gs jb  0x14000ba1e
   14000b9a8:	imul   esp,DWORD PTR [rbx+0x65],0x43003200
   14000b9af:	outs   dx,DWORD PTR ds:[rsi]
   14000b9b0:	push   rdx
   14000b9b1:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   14000b9ba:	(bad)  
   14000b9bb:	jae    0x14000ba30
   14000b9bd:	rex.WRXB (bad) 
   14000b9bf:	push   0x65
   14000b9c1:	movsxd esi,DWORD PTR [rax+rax*1+0x39]
   14000b9c5:	add    BYTE PTR [rbx+0x6f],al
   14000b9c8:	push   rdx
   14000b9c9:	gs jbe 0x14000ba3b
   14000b9cc:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14000b9d0:	(bad)  
   14000b9d1:	jae    0x14000ba46
   14000b9d3:	rex.WRXB (bad) 
   14000b9d5:	push   0x65
   14000b9d7:	movsxd esi,DWORD PTR [rax+rax*1+0x61]
   14000b9db:	jo     0x14000ba46
   14000b9dd:	sub    eax,0x772d736d
   14000b9e2:	imul   ebp,DWORD PTR [rsi+0x2d],0x76726573
   14000b9e9:	imul   esp,DWORD PTR [rbx+0x65],0x726f632d
   14000b9f0:	gs sub eax,0x312d316c
   14000b9f6:	sub    eax,0x6c642e31
   14000b9fb:	ins    BYTE PTR es:[rdi],dx
   14000b9fc:	add    BYTE PTR [rax],al
   14000b9fe:	(bad)  
   14000b9ff:	jo     0x14000ba6a
   14000ba01:	sub    eax,0x772d736d
   14000ba06:	imul   ebp,DWORD PTR [rsi+0x2d],0x76726573
   14000ba0d:	imul   esp,DWORD PTR [rbx+0x65],0x6e69772d
   14000ba14:	jae    0x14000ba8c
   14000ba16:	movsxd ebp,DWORD PTR [rip+0x322d316c]        # 0x1722deb88
   14000ba1c:	sub    eax,0x6c642e30
   14000ba21:	ins    BYTE PTR es:[rdi],dx
   14000ba22:	add    BYTE PTR [rax],al
   14000ba24:	(bad)  
   14000ba25:	jo     0x14000ba90
   14000ba27:	sub    eax,0x772d736d
   14000ba2c:	imul   ebp,DWORD PTR [rsi+0x2d],0x76726573
   14000ba33:	imul   esp,DWORD PTR [rbx+0x65],0x6e616d2d
   14000ba3a:	(bad)  
   14000ba3b:	gs ins DWORD PTR es:[edi],dx
   14000ba3e:	outs   dx,BYTE PTR gs:[rsi]
   14000ba40:	je     0x14000ba6f
   14000ba42:	ins    BYTE PTR es:[rdi],dx
   14000ba43:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30e77a
   14000ba49:	fs ins BYTE PTR es:[rdi],dx
   14000ba4b:	ins    BYTE PTR es:[rdi],dx
   14000ba4c:	add    BYTE PTR [rax],al
   14000ba4e:	rex.RX add BYTE PTR [rbp+0x74],r8b
   14000ba52:	ja     0x14000ba9b
   14000ba54:	gs je  0x14000baab
   14000ba57:	jb     0x14000baba
   14000ba59:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000ba5c:	outs   dx,DWORD PTR ds:[rsi]
   14000ba5d:	addr32 addr32 gs jb 0x14000baaa
   14000ba62:	(bad)  
   14000ba63:	outs   dx,BYTE PTR ds:[rsi]
   14000ba64:	fs ins BYTE PTR es:[rdi],dx
   14000ba66:	add    BYTE PTR gs:[rbp+0x0],al
   14000ba6a:	rex.RB je 0x14000bae4
   14000ba6d:	rex.RXB
   14000ba6e:	gs je  0x14000bac5
   14000ba71:	jb     0x14000bad4
   14000ba73:	movsxd esp,DWORD PTR [rbp+0x45]
   14000ba76:	outs   dx,BYTE PTR ds:[rsi]
   14000ba77:	(bad)  
   14000ba78:	(bad)  
   14000ba79:	ins    BYTE PTR es:[rdi],dx
   14000ba7a:	gs rex.WR
   14000ba7c:	gs jbe 0x14000bae4
   14000ba7f:	ins    BYTE PTR es:[rdi],dx
   14000ba80:	add    BYTE PTR [rax],al
   14000ba82:	add    BYTE PTR [rbp+0x74],r8b
   14000ba86:	ja     0x14000bacf
   14000ba88:	gs je  0x14000badf
   14000ba8b:	jb     0x14000baee
   14000ba8d:	movsxd esp,DWORD PTR [rbp+0x45]
   14000ba90:	outs   dx,BYTE PTR ds:[rsi]
   14000ba91:	(bad)  
   14000ba92:	(bad)  
   14000ba93:	ins    BYTE PTR es:[rdi],dx
   14000ba94:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14000ba97:	(bad)  
   14000ba98:	addr32 jae 0x14000ba9b
   14000ba9b:	add    BYTE PTR [rbp+0x0],cl
   14000ba9e:	rex.RB je 0x14000bb18
   14000baa1:	push   rdx
   14000baa2:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   14000baab:	(bad)  
   14000baac:	movsxd esp,DWORD PTR [rbp+0x47]
   14000baaf:	jne    0x14000bb1a
   14000bab1:	fs jae 0x14000bb0b
   14000bab4:	add    BYTE PTR [rax],al
   14000bab6:	push   rsp
   14000bab7:	add    BYTE PTR [rbp+0x74],al
   14000baba:	ja     0x14000bb11
   14000babc:	outs   dx,BYTE PTR ds:[rsi]
   14000babd:	jb     0x14000bb24
   14000babf:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   14000bac7:	(bad)  
   14000bac8:	movsxd esp,DWORD PTR [rbp+0x47]
   14000bacb:	jne    0x14000bb36
   14000bacd:	fs jae 0x14000bad0
   14000bad0:	scas   al,BYTE PTR es:[rdi]
   14000bad1:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14000bad5:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000bade:	js     0x14000bb37
   14000bae0:	add    BYTE PTR [rax],al
   14000bae2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bae3:	add    al,BYTE PTR [rdi+0x65]
   14000bae6:	je     0x14000bb38
   14000bae8:	jb     0x14000bb59
   14000baea:	movsxd eax,DWORD PTR [rcx+0x64]
   14000baed:	fs jb  0x14000bb55
   14000baf0:	jae    0x14000bb65
   14000baf2:	add    BYTE PTR [rax],al
   14000baf4:	add    BYTE PTR [rax],al
   14000baf6:	rex.B jo 0x14000bb62
   14000baf9:	push   rbx
   14000bafa:	gs je  0x14000bb4e
   14000bafd:	jne    0x14000bb64
   14000baff:	jb     0x14000bb7a
   14000bb01:	rex.B jo 0x14000bb6d
   14000bb04:	push   rbx
   14000bb05:	gs je  0x14000bb58
   14000bb08:	jb     0x14000bb6f
   14000bb0a:	jae    0x14000bb71
   14000bb0c:	outs   dx,BYTE PTR ds:[rsi]
   14000bb0d:	movsxd esp,DWORD PTR [rbp+0x0]
   14000bb10:	(bad)  
   14000bb11:	jo     0x14000bb7c
   14000bb13:	sub    eax,0x772d736d
   14000bb18:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000bb1f:	sub    eax,0x71697061
   14000bb24:	jne    0x14000bb8b
   14000bb26:	jb     0x14000bba1
   14000bb28:	sub    eax,0x312d316c
   14000bb2d:	sub    eax,0x6c642e30
   14000bb32:	ins    BYTE PTR es:[rdi],dx
   14000bb33:	add    BYTE PTR [rbx+0x0],cl
   14000bb36:	pop    rdi
   14000bb37:	rex.XB js 0x14000bbb2
   14000bb3a:	push   rsp
   14000bb3b:	push   0x45776f72
   14000bb40:	js     0x14000bba5
   14000bb42:	gs jo  0x14000bbb9
   14000bb45:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   14000bb4c:	pop    rdi
   14000bb4d:	pop    rdi
   14000bb4e:	rex.XB js 0x14000bbc9
   14000bb51:	rex.RX jb 0x14000bbb5
   14000bb54:	ins    DWORD PTR es:[rdi],dx
   14000bb55:	gs rex.W (bad) 
   14000bb58:	outs   dx,BYTE PTR ds:[rsi]
   14000bb59:	fs ins BYTE PTR es:[rdi],dx
   14000bb5b:	gs jb  0x14000bb91
   14000bb5e:	add    BYTE PTR [rax],al
   14000bb60:	xchg   edx,eax
   14000bb61:	add    al,0x6d
   14000bb63:	gs ins DWORD PTR es:[rdi],dx
   14000bb65:	movsxd esi,DWORD PTR [rax+0x79]
   14000bb68:	add    BYTE PTR [rax],al
   14000bb6a:	xchg   esi,eax
   14000bb6b:	add    al,0x6d
   14000bb6d:	gs ins DWORD PTR es:[rdi],dx
   14000bb6f:	jae    0x14000bbd6
   14000bb71:	je     0x14000bb73
	...

Disassembly of section .data:

000000014000c000 <.data>:
   14000c000:	add    DWORD PTR [rax],eax
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	add    BYTE PTR [rax],al
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	int    0x5d
   14000c012:	and    dl,dl
   14000c014:	data16 (bad) 
   14000c016:	(bad)  
   14000c017:	inc    DWORD PTR [rax]
   14000c019:	add    BYTE PTR [rax],al
   14000c01b:	add    BYTE PTR [rax],al
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rcx+rax*1],ch
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	add    BYTE PTR [rax],al
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	sub    al,al
   14000c02a:	add    BYTE PTR [rax+0x1],al
   14000c02d:	add    BYTE PTR [rax],al
   14000c02f:	add    bh,bh
   14000c031:	(bad)  
   14000c032:	(bad)  
   14000c033:	inc    DWORD PTR [rax]
   14000c035:	add    BYTE PTR [rax],al
   14000c037:	add    BYTE PTR [rax],bh
   14000c039:	rol    BYTE PTR [rax],0x40
   14000c03c:	add    DWORD PTR [rax],eax
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	cmp    al,al
   14000c042:	add    BYTE PTR [rax+0x1],al
   14000c045:	add    BYTE PTR [rax],al
   14000c047:	add    BYTE PTR [rax-0x78],dh
   14000c04a:	add    BYTE PTR [rax+0x1],al
   14000c04d:	add    BYTE PTR [rax],al
   14000c04f:	add    BYTE PTR [rax-0x76],bl
   14000c052:	add    BYTE PTR [rax+0x1],al
	...
   14000c085:	add    BYTE PTR [rax],al
   14000c087:	add    BYTE PTR [rax-0x79],dl
   14000c08a:	add    BYTE PTR [rax+0x1],al
	...
   14000c095:	add    BYTE PTR [rax],al
   14000c097:	add    BYTE PTR [rsi],ch
   14000c099:	(bad)  
   14000c09a:	push   r14
   14000c09c:	rex.XB pop r8
   14000c09e:	pop    rdi
   14000c09f:	rex.WRB
   14000c0a0:	gs ins DWORD PTR es:[rdi],dx
   14000c0a2:	outs   dx,DWORD PTR ds:[rsi]
   14000c0a3:	jb     0x14000c11e
   14000c0a5:	rex.RB js 0x14000c10b
   14000c0a8:	gs jo  0x14000c11f
   14000c0ab:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14000c0b2:	add    BYTE PTR [rax],al
   14000c0b4:	add    BYTE PTR [rax],al
   14000c0b6:	add    BYTE PTR [rax],al
   14000c0b8:	push   rax
   14000c0b9:	xchg   DWORD PTR [rax],eax
   14000c0bb:	rex add DWORD PTR [rax],eax
	...
   14000c0c6:	add    BYTE PTR [rax],al
   14000c0c8:	cs (bad) 
   14000c0ca:	push   r14
   14000c0cc:	rex.XB pop r8
   14000c0ce:	pop    rdi
   14000c0cf:	rex.RB js 0x14000c135
   14000c0d2:	gs jo  0x14000c149
   14000c0d5:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14000c0dc:	add    BYTE PTR [rax],al
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	push   rax
   14000c0e1:	xchg   DWORD PTR [rax],eax
   14000c0e3:	rex add DWORD PTR [rax],eax
	...
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	cs (bad) 
   14000c0f2:	push   r14
   14000c0f4:	push   rbx
   14000c0f5:	(bad)  
   14000c0f6:	data16 rex.WB outs dx,BYTE PTR gs:[rsi]
   14000c0fa:	je     0x14000c141
   14000c0fc:	js     0x14000c161
   14000c0fe:	gs jo  0x14000c175
   14000c101:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
	...

Disassembly of section .pdata:

000000014000d000 <.pdata>:
   14000d000:	add    BYTE PTR [rax],dl
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	push   0x10
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	or     BYTE PTR [rcx+0x10800000],bl
   14000d00e:	add    BYTE PTR [rax],al
   14000d010:	movabs eax,ds:0xb000009b00000010
   14000d019:	adc    BYTE PTR [rax],al
   14000d01b:	add    cl,dh
   14000d01d:	adc    BYTE PTR [rax],al
   14000d01f:	add    BYTE PTR [rax],al
   14000d021:	fwait
   14000d022:	add    BYTE PTR [rax],al
   14000d024:	or     BYTE PTR [rcx],dl
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	rex.RXB adc DWORD PTR [r8],r8d
   14000d02b:	add    BYTE PTR [rax+0x50000098],dh
   14000d031:	adc    DWORD PTR [rax],eax
   14000d033:	add    BYTE PTR [rdx-0x43ffffef],bh
   14000d039:	cwde   
   14000d03a:	add    BYTE PTR [rax],al
   14000d03c:	rcl    BYTE PTR [rcx],0x0
   14000d03f:	add    BYTE PTR [rip+0xffffffffd0000012],bh        # 0x11000d057
   14000d045:	cwde   
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	push   rax
   14000d049:	adc    al,BYTE PTR [rax]
   14000d04b:	add    BYTE PTR [rax-0x4fffffee],al
   14000d051:	cwde   
   14000d052:	add    BYTE PTR [rax],al
   14000d054:	mov    BYTE PTR [rdx],dl
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	push   rbp
   14000d059:	adc    eax,DWORD PTR [rax]
   14000d05b:	add    BYTE PTR [rax-0x67],cl
   14000d05e:	add    BYTE PTR [rax],al
   14000d060:	(bad)  
   14000d061:	adc    eax,DWORD PTR [rax]
   14000d063:	add    bl,bl
   14000d065:	adc    eax,DWORD PTR [rax]
   14000d067:	add    BYTE PTR [rax-0xfffff67],ah
   14000d06d:	adc    eax,DWORD PTR [rax]
   14000d06f:	add    BYTE PTR [rdx+0x14],dl
   14000d072:	add    BYTE PTR [rax],al
   14000d074:	mov    al,0x99
   14000d076:	add    BYTE PTR [rax],al
   14000d078:	(bad)  
   14000d079:	adc    al,0x0
   14000d07b:	add    BYTE PTR [rdi-0x37ffffec],bl
   14000d081:	cdq    
   14000d082:	add    BYTE PTR [rax],al
   14000d084:	add    BYTE PTR [rip+0x15460000],dl        # 0x15546d08a
   14000d08a:	add    BYTE PTR [rax],al
   14000d08c:	mov    al,0x98
   14000d08e:	add    BYTE PTR [rax],al
   14000d090:	push   rax
   14000d091:	adc    eax,0x15820000
   14000d096:	add    BYTE PTR [rax],al
   14000d098:	fcomp  DWORD PTR [rcx+0x15900000]
   14000d09e:	add    BYTE PTR [rax],al
   14000d0a0:	movabs eax,ds:0xb0000099e0000016
   14000d0a9:	(bad)  
   14000d0aa:	add    BYTE PTR [rax],al
   14000d0ac:	add    BYTE PTR [rdi],dl
   14000d0ae:	add    BYTE PTR [rax],al
   14000d0b0:	mov    esp,0x10000098
   14000d0b5:	(bad)  
   14000d0b6:	add    BYTE PTR [rax],al
   14000d0b8:	rex.B (bad) 
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	mov    al,0x98
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	push   rax
   14000d0c1:	(bad)  
   14000d0c2:	add    BYTE PTR [rax],al
   14000d0c4:	adc    DWORD PTR [rdi],0x98b00000
   14000d0ca:	add    BYTE PTR [rax],al
   14000d0cc:	nop
   14000d0cd:	(bad)  
   14000d0ce:	add    BYTE PTR [rax],al
   14000d0d0:	jmp    0x14000d0e9
   14000d0d2:	add    BYTE PTR [rax],al
   14000d0d4:	mov    esp,0x98
   14000d0d9:	sbb    BYTE PTR [rax],al
   14000d0db:	add    BYTE PTR [rax+rbx*1],bh
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	mov    al,0x98
   14000d0e2:	add    BYTE PTR [rax],al
   14000d0e4:	push   rax
   14000d0e5:	sbb    BYTE PTR [rax],al
   14000d0e7:	add    BYTE PTR [rax+rbx*1-0x67500000],cl
   14000d0ee:	add    BYTE PTR [rax],al
   14000d0f0:	xchg   esp,eax
   14000d0f1:	sbb    BYTE PTR [rax],al
   14000d0f3:	add    BYTE PTR [rdx],bl
   14000d0f5:	sbb    al,BYTE PTR [rax]
   14000d0f7:	add    BYTE PTR [rax],dh
   14000d0f9:	(bad)  
   14000d0fa:	add    BYTE PTR [rax],al
   14000d0fc:	and    BYTE PTR [rdx],bl
   14000d0fe:	add    BYTE PTR [rax],al
   14000d100:	pop    rbx
   14000d101:	sbb    al,BYTE PTR [rax]
   14000d103:	add    BYTE PTR [rax+0x64000098],dh
   14000d109:	sbb    al,BYTE PTR [rax]
   14000d10b:	add    BYTE PTR [rdx+rbx*1-0x67500000],dl
   14000d112:	add    BYTE PTR [rax],al
   14000d114:	pushf  
   14000d115:	sbb    al,BYTE PTR [rax]
   14000d117:	add    BYTE PTR [rbx+0x1a],dh
   14000d11d:	fwait
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	mov    esp,0xd000001a
   14000d125:	sbb    al,BYTE PTR [rax]
   14000d127:	add    BYTE PTR [rax],al
   14000d129:	fwait
   14000d12a:	add    BYTE PTR [rax],al
   14000d12c:	hlt    
   14000d12d:	sbb    al,BYTE PTR [rax]
   14000d12f:	add    BYTE PTR [rdi],dh
   14000d131:	sbb    eax,DWORD PTR [rax]
   14000d133:	add    al,cl
   14000d135:	cdq    
   14000d136:	add    BYTE PTR [rax],al
   14000d138:	rex sbb eax,DWORD PTR [rax]
   14000d13b:	add    BYTE PTR [rdi+0x1b],dl
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	add    BYTE PTR [rbx+0x1b600000],bl
   14000d146:	add    BYTE PTR [rax],al
   14000d148:	mov    bl,0x1b
   14000d14a:	add    BYTE PTR [rax],al
   14000d14c:	mov    esp,0xc0000098
   14000d151:	sbb    eax,DWORD PTR [rax]
   14000d153:	add    bl,ch
   14000d155:	sbb    eax,DWORD PTR [rax]
   14000d157:	add    BYTE PTR [rax],al
   14000d159:	fwait
   14000d15a:	add    BYTE PTR [rax],al
   14000d15c:	hlt    
   14000d15d:	sbb    eax,DWORD PTR [rax]
   14000d15f:	add    BYTE PTR [rbp+0x1e],ch
   14000d162:	add    BYTE PTR [rax],al
   14000d164:	or     BYTE PTR [rbx+0x1e800000],bl
   14000d16a:	add    BYTE PTR [rax],al
   14000d16c:	jle    0x14000d18d
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	test   al,0x9b
   14000d172:	add    BYTE PTR [rax],al
   14000d174:	cwde   
   14000d175:	(bad)  
   14000d176:	add    BYTE PTR [rax],al
   14000d178:	mov    dh,0x1f
   14000d17a:	add    BYTE PTR [rax],al
   14000d17c:	push   rax
   14000d17d:	pushf  
   14000d17e:	add    BYTE PTR [rax],al
   14000d180:	mov    esp,0xf000001f
   14000d185:	(bad)  
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	pop    rax
   14000d189:	pushf  
   14000d18a:	add    BYTE PTR [rax],al
   14000d18c:	clc    
   14000d18d:	(bad)  
   14000d18e:	add    BYTE PTR [rax],al
   14000d190:	(bad)  
   14000d191:	and    BYTE PTR [rax],al
   14000d193:	add    BYTE PTR [rax-0x64],ah
   14000d196:	add    BYTE PTR [rax],al
   14000d198:	movabs al,ds:0x6800002132000020
   14000d1a1:	pushf  
   14000d1a2:	add    BYTE PTR [rax],al
   14000d1a4:	cmp    BYTE PTR [rcx],ah
   14000d1a6:	add    BYTE PTR [rax],al
   14000d1a8:	test   eax,0x68000021
   14000d1ad:	pushf  
   14000d1ae:	add    BYTE PTR [rax],al
   14000d1b0:	mov    al,0x21
   14000d1b2:	add    BYTE PTR [rax],al
   14000d1b4:	and    BYTE PTR [rbx],ah
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	jo     0x14000d156
   14000d1ba:	add    BYTE PTR [rax],al
   14000d1bc:	(bad)  
   14000d1bd:	and    eax,DWORD PTR [rax]
   14000d1bf:	add    al,bh
   14000d1c1:	and    eax,DWORD PTR [rax]
   14000d1c3:	add    BYTE PTR [rax+0x20000098],dh
   14000d1c9:	and    al,0x0
   14000d1cb:	add    BYTE PTR [rbp+0x28000024],ch
   14000d1d1:	popf   
   14000d1d2:	add    BYTE PTR [rax],al
   14000d1d4:	shl    BYTE PTR [rax+rax*1],1
   14000d1d7:	add    BYTE PTR [rbx+0x26],cl
   14000d1da:	add    BYTE PTR [rax],al
   14000d1dc:	cmp    al,0x9d
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	(bad)  
   14000d1e1:	add    BYTE PTR es:[rax],al
   14000d1e4:	std    
   14000d1e5:	(bad)  
   14000d1e6:	add    BYTE PTR [rax],al
   14000d1e8:	pop    rax
   14000d1e9:	popf   
   14000d1ea:	add    BYTE PTR [rax],al
   14000d1ec:	and    BYTE PTR [rax],ch
   14000d1ee:	add    BYTE PTR [rax],al
   14000d1f0:	rex.W sub al,0x0
   14000d1f3:	add    BYTE PTR [rax-0x63],bh
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	push   rax
   14000d1f9:	sub    al,0x0
   14000d1fb:	add    dl,bh
   14000d1fd:	xor    eax,DWORD PTR [rax]
   14000d1ff:	add    BYTE PTR [rax],al
   14000d201:	sahf   
   14000d202:	add    BYTE PTR [rax],al
   14000d204:	add    BYTE PTR [rax+rax*1],dh
   14000d207:	add    BYTE PTR [rsi+rsi*1-0x61c00000],bh
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	shl    BYTE PTR [rsi],1
   14000d212:	add    BYTE PTR [rax],al
   14000d214:	cmp    DWORD PTR [rax],0x0
   14000d217:	add    BYTE PTR [rax-0x62],bl
   14000d21a:	add    BYTE PTR [rax],al
   14000d21c:	mov    eax,0xef000038
   14000d221:	cmp    BYTE PTR [rax],al
   14000d223:	add    BYTE PTR [rax-0x7ffff68],dh
   14000d229:	cmp    BYTE PTR [rax],al
   14000d22b:	add    BYTE PTR [rdx+0x39],al
   14000d22e:	add    BYTE PTR [rax],al
   14000d230:	js     0x14000d1d0
   14000d232:	add    BYTE PTR [rax],al
   14000d234:	nop
   14000d235:	cmp    DWORD PTR [rax],eax
   14000d237:	add    BYTE PTR [rdi],al
   14000d239:	cmp    al,BYTE PTR [rax]
   14000d23b:	add    BYTE PTR [rax+0x1000009e],al
   14000d241:	cmp    al,BYTE PTR [rax]
   14000d243:	add    dh,ah
   14000d245:	cmp    al,BYTE PTR [rax]
   14000d247:	add    BYTE PTR [rax-0xfffff62],dl
   14000d24d:	cmp    al,BYTE PTR [rax]
   14000d24f:	add    BYTE PTR [rax],al
   14000d251:	cmp    eax,DWORD PTR [rax]
   14000d253:	add    BYTE PTR [rax],al
   14000d255:	fwait
   14000d256:	add    BYTE PTR [rax],al
   14000d258:	or     BYTE PTR [rbx],bh
   14000d25a:	add    BYTE PTR [rax],al
   14000d25c:	test   DWORD PTR [rip+0xffffffff9ed00000],edi        # 0xded0d262
   14000d262:	add    BYTE PTR [rax],al
   14000d264:	mov    WORD PTR [rip+0x3f410000],?        # 0x17f41d26a
   14000d26a:	add    BYTE PTR [rax],al
   14000d26c:	sbb    BYTE PTR [rdi+0x3f480000],bl
   14000d272:	add    BYTE PTR [rax],al
   14000d274:	icebp  
   14000d275:	add    BYTE PTR [rax],al
   14000d278:	mov    BYTE PTR [rdi+0x40f80000],bl
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	int    0x41
   14000d282:	add    BYTE PTR [rax],al
   14000d284:	rcr    BYTE PTR [rdi+0x41d40000],0x0
   14000d28b:	add    BYTE PTR [rdx],bl
   14000d28d:	add    BYTE PTR [r8],r8b
   14000d290:	rcr    BYTE PTR [rdi+0x45300000],1
   14000d296:	add    BYTE PTR [rax],al
   14000d298:	pop    rcx
   14000d299:	add    BYTE PTR [r8],r8b
   14000d29c:	adc    BYTE PTR [rax+0x45600000],ah
   14000d2a2:	add    BYTE PTR [rax],al
   14000d2a4:	add    al,BYTE PTR [rsi+0x0]
   14000d2a7:	add    BYTE PTR [rax-0x64],ah
   14000d2aa:	add    BYTE PTR [rax],al
   14000d2ac:	or     BYTE PTR [rsi+0x0],al
   14000d2af:	add    BYTE PTR [rsi+rax*2-0x5fc80000],al
   14000d2b6:	add    BYTE PTR [rax],al
   14000d2b8:	mov    WORD PTR [rsi+0x0],es
   14000d2bb:	add    BYTE PTR [rip+0x68000047],bl        # 0x1a800d308
   14000d2c1:	pushf  
   14000d2c2:	add    BYTE PTR [rax],al
   14000d2c4:	and    al,0x47
   14000d2c6:	add    BYTE PTR [rax],al
   14000d2c8:	cmp    BYTE PTR [rdi+0x0],al
   14000d2cb:	add    BYTE PTR [rax-0x60],al
   14000d2ce:	add    BYTE PTR [rax],al
   14000d2d0:	rex
   14000d2d1:	rex.RXB add BYTE PTR [r8],r8b
   14000d2d4:	push   rsp
   14000d2d5:	rex.RXB add BYTE PTR [r8],r8b
   14000d2d8:	add    BYTE PTR [rbx+0x475c0000],bl
   14000d2de:	add    BYTE PTR [rax],al
   14000d2e0:	ins    DWORD PTR es:[rdi],dx
   14000d2e1:	rex.WB add BYTE PTR [r8],al
   14000d2e4:	(bad)  
   14000d2e5:	movabs al,ds:0x49c9000049800000
   14000d2ee:	add    BYTE PTR [rax],al
   14000d2f0:	mov    al,0x98
   14000d2f2:	add    BYTE PTR [rax],al
   14000d2f4:	ror    BYTE PTR [rcx+0x0],1
   14000d2f7:	add    BYTE PTR [rbx],ch
   14000d2f9:	rex.WRXB add BYTE PTR [r8],r8b
   14000d2fc:	and    BYTE PTR [rax+0x4f340000],0x0
   14000d303:	add    dl,dh
   14000d305:	push   rcx
   14000d306:	add    BYTE PTR [rax],al
   14000d308:	loopne 0x14000d2aa
   14000d30a:	add    BYTE PTR [rax],al
   14000d30c:	adc    al,0x52
   14000d30e:	add    BYTE PTR [rax],al
   14000d310:	rex.XB push r12
   14000d312:	add    BYTE PTR [rax],al
   14000d314:	rex movabs eax,ds:0x55440000544c0000
   14000d31e:	add    BYTE PTR [rax],al
   14000d320:	enter  0x99,0x0
   14000d324:	push   rax
   14000d325:	push   rbp
   14000d326:	add    BYTE PTR [rax],al
   14000d328:	iret   
   14000d329:	push   rbp
   14000d32a:	add    BYTE PTR [rax],al
   14000d32c:	enter  0x99,0x0
   14000d330:	fcom   DWORD PTR [rbp+0x0]
   14000d333:	add    BYTE PTR [rip+0xffffffffb0000056],ah        # 0xf000d38f
   14000d339:	cwde   
   14000d33a:	add    BYTE PTR [rax],al
   14000d33c:	xor    BYTE PTR [rsi+0x0],dl
   14000d33f:	add    ah,ch
   14000d341:	push   rsi
   14000d342:	add    BYTE PTR [rax],al
   14000d344:	enter  0x99,0x0
   14000d348:	add    BYTE PTR [rdi+0x0],dl
   14000d34b:	add    BYTE PTR [rdi+rdx*2+0x0],dl
   14000d34f:	add    BYTE PTR [rax+0x60000098],dh
   14000d355:	push   rdi
   14000d356:	add    BYTE PTR [rax],al
   14000d358:	ret    0x57
   14000d35b:	add    BYTE PTR [rax-0x2fffff67],dh
   14000d361:	push   rdi
   14000d362:	add    BYTE PTR [rax],al
   14000d364:	addps  xmm0,XMMWORD PTR [rax]
   14000d367:	add    al,cl
   14000d369:	cdq    
   14000d36a:	add    BYTE PTR [rax],al
   14000d36c:	and    BYTE PTR [rax+0x0],bl
   14000d36f:	add    BYTE PTR [rax+0x58],bl
   14000d372:	add    BYTE PTR [rax],al
   14000d374:	mov    al,0x98
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	(bad)  
   14000d379:	pop    rax
   14000d37a:	add    BYTE PTR [rax],al
   14000d37c:	xchg   ebp,eax
   14000d37d:	pop    rax
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	mov    al,0x98
   14000d382:	add    BYTE PTR [rax],al
   14000d384:	movabs al,ds:0x58c8000058
   14000d38d:	fwait
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	rcr    BYTE PTR [rax+0x0],1
   14000d393:	add    BYTE PTR [rdx],dl
   14000d395:	pop    rcx
   14000d396:	add    BYTE PTR [rax],al
   14000d398:	js     0x14000d33b
   14000d39a:	add    BYTE PTR [rax],al
   14000d39c:	and    BYTE PTR [rcx+0x0],bl
   14000d39f:	add    BYTE PTR [rdx-0x4fffffa7],al
   14000d3a5:	cwde   
   14000d3a6:	add    BYTE PTR [rax],al
   14000d3a8:	pushf  
   14000d3a9:	pop    rcx
   14000d3aa:	add    BYTE PTR [rax],al
   14000d3ac:	(bad)  
   14000d3ad:	pop    rcx
   14000d3ae:	add    BYTE PTR [rax],al
   14000d3b0:	push   0xffffffffe000009c
   14000d3b5:	pop    rcx
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	leave  
   14000d3b9:	pop    rdx
   14000d3ba:	add    BYTE PTR [rax],al
   14000d3bc:	test   BYTE PTR [rcx+0x5ad00000],ah
   14000d3c2:	add    BYTE PTR [rax],al
   14000d3c4:	xlat   BYTE PTR ds:[rbx]
   14000d3c5:	pop    rsp
   14000d3c6:	add    BYTE PTR [rax],al
   14000d3c8:	test   BYTE PTR [rcx+0x5ce00000],ah
   14000d3ce:	add    BYTE PTR [rax],al
   14000d3d0:	push   rsi
   14000d3d1:	pop    rsi
   14000d3d2:	add    BYTE PTR [rax],al
   14000d3d4:	xchg   esp,eax
   14000d3d5:	movabs eax,ds:0x5f9100005e5c0000
   14000d3de:	add    BYTE PTR [rax],al
   14000d3e0:	fcomp  DWORD PTR [rcx+0x5fb00000]
   14000d3e6:	add    BYTE PTR [rax],al
   14000d3e8:	ins    BYTE PTR es:[rdi],dx
   14000d3e9:	imul   eax,DWORD PTR [rax],0xa1a800
   14000d3ef:	add    BYTE PTR [rcx+rbp*2+0x0],dh
   14000d3f3:	add    BYTE PTR [rsi+0x69],dl
   14000d3f9:	fwait
   14000d3fa:	add    BYTE PTR [rax],al
   14000d3fc:	pushf  
   14000d3fd:	imul   eax,DWORD PTR [rax],0x69cc00
   14000d403:	add    BYTE PTR [rax-0x2bffff68],dh
   14000d409:	imul   eax,DWORD PTR [rax],0x6a0f00
   14000d40f:	add    al,bl
   14000d411:	cdq    
   14000d412:	add    BYTE PTR [rax],al
   14000d414:	sbb    BYTE PTR [rdx+0x0],ch
   14000d417:	add    BYTE PTR [rdx+rbp*2],ch
   14000d41a:	add    BYTE PTR [rax],al
   14000d41c:	add    BYTE PTR [rbx+0x6a700000],bl
   14000d422:	add    BYTE PTR [rax],al
   14000d424:	out    0x6a,al
   14000d426:	add    BYTE PTR [rax],al
   14000d428:	call   0x12c00d4ce
   14000d42d:	push   0x0
   14000d42f:	add    BYTE PTR [rbx+0x6b],cl
   14000d432:	add    BYTE PTR [rax],al
   14000d434:	fcomp  DWORD PTR [rcx+0x6b600000]
   14000d43a:	add    BYTE PTR [rax],al
   14000d43c:	(bad)  
   14000d43d:	imul   eax,DWORD PTR [rax],0x0
   14000d440:	mov    al,0x98
   14000d442:	add    BYTE PTR [rax],al
   14000d444:	int3   
   14000d445:	imul   eax,DWORD PTR [rax],0x0
   14000d448:	outs   dx,BYTE PTR ds:[rsi]
   14000d449:	ins    BYTE PTR es:[rdi],dx
   14000d44a:	add    BYTE PTR [rax],al
   14000d44c:	lock movabs eax,ds:0x6d5000006c740000
   14000d456:	add    BYTE PTR [rax],al
   14000d458:	mov    esp,0x58000098
   14000d45d:	ins    DWORD PTR es:[rdi],dx
   14000d45e:	add    BYTE PTR [rax],al
   14000d460:	fsubr  DWORD PTR [rbp+0x0]
   14000d463:	add    BYTE PTR [rax],al
   14000d465:	movabs ds:0x6e7100006de00000,al
   14000d46e:	add    BYTE PTR [rax],al
   14000d470:	or     al,0xa2
   14000d472:	add    BYTE PTR [rax],al
   14000d474:	sub    BYTE PTR [rsi+0x0],0x0
   14000d478:	rex.WRXB outs dx,DWORD PTR ds:[rsi]
   14000d47a:	add    BYTE PTR [rax],al
   14000d47c:	add    BYTE PTR [rbx+0x6f600000],bl
   14000d482:	add    BYTE PTR [rax],al
   14000d484:	test   eax,0x5000006f
   14000d489:	pushf  
   14000d48a:	add    BYTE PTR [rax],al
   14000d48c:	mov    al,0x6f
   14000d48e:	add    BYTE PTR [rax],al
   14000d490:	ret    0x6f
   14000d493:	add    BYTE PTR [rax],al
   14000d495:	fwait
   14000d496:	add    BYTE PTR [rax],al
   14000d498:	enter  0x6f,0x0
   14000d49c:	(bad)  
   14000d49d:	jb     0x14000d49f
   14000d49f:	add    BYTE PTR [rdx+riz*4],bl
   14000d4a2:	add    BYTE PTR [rax],al
   14000d4a4:	xor    BYTE PTR [rdx+0x0],dh
   14000d4a7:	add    BYTE PTR [rsi+0x72],cl
   14000d4aa:	add    BYTE PTR [rax],al
   14000d4ac:	push   rax
   14000d4ad:	movabs ds:0x72f2000072540000,al
   14000d4b6:	add    BYTE PTR [rax],al
   14000d4b8:	push   rsp
   14000d4b9:	movabs ds:0x730f000072f80000,al
   14000d4c2:	add    BYTE PTR [rax],al
   14000d4c4:	add    BYTE PTR [rbx+0x73300000],bl
   14000d4ca:	add    BYTE PTR [rax],al
   14000d4cc:	(bad)  
   14000d4cd:	jae    0x14000d4cf
   14000d4cf:	add    BYTE PTR [rax+0x70000098],dh
   14000d4d5:	jae    0x14000d4d7
   14000d4d7:	add    BYTE PTR [rcx+0x73],ch
   14000d4dd:	fwait
   14000d4de:	add    BYTE PTR [rax],al
   14000d4e0:	mov    al,0x73
   14000d4e2:	add    BYTE PTR [rax],al
   14000d4e4:	enter  0x73,0x0
   14000d4e8:	add    BYTE PTR [rbx+0x73dc0000],bl
   14000d4ee:	add    BYTE PTR [rax],al
   14000d4f0:	xor    BYTE PTR [rax+rax*1+0x0],dh
   14000d4f4:	js     0x14000d498
   14000d4f6:	add    BYTE PTR [rax],al
   14000d4f8:	cmp    BYTE PTR [rax+rax*1+0x0],dh
   14000d4fc:	jge    0x14000d572
   14000d4fe:	add    BYTE PTR [rax],al
   14000d500:	fcomp  DWORD PTR [rcx+0x74e00000]
   14000d506:	add    BYTE PTR [rax],al
   14000d508:	sub    eax,0x98000075
   14000d50d:	movabs ds:0x7644000075740000,al
   14000d516:	add    BYTE PTR [rax],al
   14000d518:	mov    esp,0x640000a2
   14000d51d:	jbe    0x14000d51f
   14000d51f:	add    BYTE PTR [rax-0x27ffff8a],bl
   14000d525:	cdq    
   14000d526:	add    BYTE PTR [rax],al
   14000d528:	movabs al,ds:0xc800007811000076
   14000d531:	movabs ds:0x791a000078cc0000,al
   14000d53a:	add    BYTE PTR [rax],al
   14000d53c:	add    BYTE PTR [rbx+0x79440000],bl
   14000d542:	add    BYTE PTR [rax],al
   14000d544:	(bad)  
   14000d545:	jns    0x14000d547
   14000d547:	add    BYTE PTR [rax],al
   14000d549:	fwait
   14000d54a:	add    BYTE PTR [rax],al
   14000d54c:	push   0xffffffffcb000079
   14000d551:	jns    0x14000d553
   14000d553:	add    al,bl
   14000d555:	cdq    
   14000d556:	add    BYTE PTR [rax],al
   14000d558:	(bad)  
   14000d559:	jns    0x14000d55b
   14000d55b:	add    BYTE PTR [rbx+0x7a],ah
   14000d55e:	add    BYTE PTR [rax],al
   14000d560:	mov    al,0x99
   14000d562:	add    BYTE PTR [rax],al
   14000d564:	nop
   14000d565:	jp     0x14000d567
   14000d567:	add    BYTE PTR [rdx-0x2fffff86],dl
   14000d56d:	movabs ds:0x7b5400007b320000,al
   14000d576:	add    BYTE PTR [rax],al
   14000d578:	lock (bad) 
   14000d57a:	add    BYTE PTR [rax],al
   14000d57c:	push   rbx
   14000d57d:	jge    0x14000d57f
   14000d57f:	add    BYTE PTR [rdi+0x7d],dh
   14000d582:	add    BYTE PTR [rax],al
   14000d584:	xor    BYTE PTR [rax+0x7ddd0000],ah
   14000d58a:	add    BYTE PTR [rax],al
   14000d58c:	sti    
   14000d58d:	jge    0x14000d58f
   14000d58f:	add    BYTE PTR [rax],dh
   14000d591:	movabs al,ds:0x7e1c00007e010000
   14000d59a:	add    BYTE PTR [rax],al
   14000d59c:	xor    BYTE PTR [rax+0x7e300000],ah
   14000d5a2:	add    BYTE PTR [rax],al
   14000d5a4:	push   rax
   14000d5a5:	jle    0x14000d5a7
   14000d5a7:	add    BYTE PTR [rax],dh
   14000d5a9:	.byte 0xa0
	...

Disassembly of section .rsrc:

000000014000e000 <.rsrc>:
	...
   14000e00c:	add    DWORD PTR [rax],eax
   14000e00e:	add    al,BYTE PTR [rax]
   14000e010:	call   0x16880e015
   14000e015:	add    BYTE PTR [rax],al
   14000e017:	adc    BYTE PTR [rax],0x0
   14000e01a:	add    BYTE PTR [rax],al
   14000e01c:	add    BYTE PTR [rax],al
   14000e01f:	sbb    BYTE PTR [rax],0x0
   14000e022:	add    BYTE PTR [rax],al
   14000e024:	pop    rax
   14000e025:	add    BYTE PTR [rax],al
   14000e027:	add    BYTE PTR [rax],0x0
	...
   14000e036:	add    DWORD PTR [rax],eax
   14000e038:	add    DWORD PTR [rax],eax
   14000e03a:	add    BYTE PTR [rax],al
   14000e03c:	jo     0x14000e03e
   14000e03e:	add    BYTE PTR [rax+0x0],al
	...
   14000e04c:	add    BYTE PTR [rax],al
   14000e04e:	add    DWORD PTR [rax],eax
   14000e050:	add    DWORD PTR [rax],eax
   14000e052:	add    BYTE PTR [rax],al
   14000e054:	mov    BYTE PTR [rax],al
   14000e056:	add    BYTE PTR [rax+0x0],al
	...
   14000e064:	add    BYTE PTR [rax],al
   14000e066:	add    DWORD PTR [rax],eax
   14000e068:	add    DWORD PTR [rax],eax
   14000e06a:	add    BYTE PTR [rax],al
   14000e06c:	movabs al,ds:0x800000
	...
   14000e07d:	add    BYTE PTR [rcx],al
   14000e07f:	add    BYTE PTR [rcx],cl
   14000e081:	add    al,0x0
   14000e083:	add    BYTE PTR [rax+0x0],bh
	...
   14000e095:	add    BYTE PTR [rcx],al
   14000e097:	add    BYTE PTR [rcx],cl
   14000e099:	add    al,0x0
   14000e09b:	add    al,cl
	...
   14000e0ad:	add    BYTE PTR [rcx],al
   14000e0af:	add    BYTE PTR [rcx],cl
   14000e0b1:	add    al,0x0
   14000e0b3:	add    al,bl
   14000e0b5:	add    BYTE PTR [rax],al
   14000e0b7:	add    BYTE PTR [rax-0x19],dl
   14000e0ba:	add    BYTE PTR [rax],al
   14000e0bc:	enter  0x0,0x0
	...
   14000e0c8:	test   al,0xe3
   14000e0ca:	add    BYTE PTR [rax],al
   14000e0cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e0cd:	add    eax,DWORD PTR [rax]
	...
   14000e0d7:	add    al,dh
   14000e0d9:	loopne 0x14000e0db
   14000e0db:	add    BYTE PTR [rcx+0x2],dh
   14000e0e1:	add    BYTE PTR [rax],al
   14000e0e3:	add    BYTE PTR [rax],al
   14000e0e5:	add    BYTE PTR [rax],al
   14000e0e7:	add    BYTE PTR [rbx],al
   14000e0e9:	add    BYTE PTR [rbp+0x0],cl
   14000e0ec:	push   rbp
   14000e0ed:	add    BYTE PTR [rcx+0x0],cl
   14000e0f0:	cmp    al,0x3f
   14000e0f2:	js     0x14000e161
   14000e0f4:	ins    BYTE PTR es:[rdi],dx
   14000e0f5:	and    BYTE PTR [rsi+0x65],dh
   14000e0f8:	jb     0x14000e16d
   14000e0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e101:	xor    BYTE PTR [rdx],ah
   14000e103:	and    BYTE PTR [rbp+0x6e],ah
   14000e106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000e109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000e110:	rex.RX sub eax,0x73202238
   14000e116:	je     0x14000e179
   14000e118:	outs   dx,BYTE PTR ds:[rsi]
   14000e119:	fs (bad) 
   14000e11b:	ins    BYTE PTR es:[rdi],dx
   14000e11c:	outs   dx,DWORD PTR ds:[rsi]
   14000e11d:	outs   dx,BYTE PTR ds:[rsi]
   14000e11e:	gs cmp eax,0x73657922
   14000e124:	and    bh,BYTE PTR [rdi]
   14000e126:	ds or  eax,0x2d213c0a
   14000e12c:	sub    eax,0x706f4320
   14000e131:	jns    0x14000e1a5
   14000e133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000e13a:	sub    DWORD PTR [rax],esp
   14000e13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000e144:	je     0x14000e166
   14000e146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e148:	jb     0x14000e1ba
   14000e14a:	outs   dx,DWORD PTR ds:[rsi]
   14000e14b:	jb     0x14000e1ae
   14000e14d:	je     0x14000e1b8
   14000e14f:	outs   dx,DWORD PTR ds:[rsi]
   14000e150:	outs   dx,BYTE PTR ds:[rsi]
   14000e151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e1f84
   14000e157:	cmp    al,0x61
   14000e159:	jae    0x14000e1ce
   14000e15b:	gs ins DWORD PTR es:[rdi],dx
   14000e15d:	(bad)  
   14000e15e:	ins    BYTE PTR es:[rdi],dx
   14000e15f:	jns    0x14000e181
   14000e161:	js     0x14000e1d0
   14000e163:	ins    BYTE PTR es:[rdi],dx
   14000e164:	outs   dx,BYTE PTR ds:[rsi]
   14000e165:	jae    0x14000e1a4
   14000e167:	and    dh,BYTE PTR [rbp+0x72]
   14000e16a:	outs   dx,BYTE PTR ds:[rsi]
   14000e16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e16e:	push   0x73616d65
   14000e173:	sub    eax,0x7263696d
   14000e178:	outs   dx,DWORD PTR ds:[rsi]
   14000e179:	jae    0x14000e1ea
   14000e17b:	data16 je 0x14000e1ab
   14000e17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e181:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e184:	ins    DWORD PTR es:[rdi],dx
   14000e185:	cs jbe 0x14000e1b9
   14000e188:	and    ah,BYTE PTR [rax]
   14000e18a:	ins    DWORD PTR es:[rdi],dx
   14000e18b:	(bad)  
   14000e18c:	outs   dx,BYTE PTR ds:[rsi]
   14000e18d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000e194:	jb     0x14000e209
   14000e196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e19d:	xor    BYTE PTR [rdx],ah
   14000e19f:	ds or  eax,0x73613c0a
   14000e1a5:	jae    0x14000e20c
   14000e1a7:	ins    DWORD PTR es:[rdi],dx
   14000e1a8:	(bad)  
   14000e1a9:	ins    BYTE PTR es:[rdi],dx
   14000e1aa:	jns    0x14000e1f5
   14000e1ac:	fs outs dx,BYTE PTR gs:[rsi]
   14000e1af:	je     0x14000e21a
   14000e1b1:	je     0x14000e22c
   14000e1b3:	or     eax,0x2020200a
   14000e1b8:	and    BYTE PTR [rsi+0x65],dh
   14000e1bb:	jb     0x14000e230
   14000e1bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000e1c4:	xor    DWORD PTR [rsi],ebp
   14000e1c6:	xor    BYTE PTR [rsi],ch
   14000e1c8:	xor    BYTE PTR [rdx],ah
   14000e1ca:	or     eax,0x2020200a
   14000e1cf:	and    BYTE PTR [rax+0x72],dh
   14000e1d2:	outs   dx,DWORD PTR ds:[rsi]
   14000e1d3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e1d6:	jae    0x14000e247
   14000e1d8:	jb     0x14000e21b
   14000e1da:	jb     0x14000e23f
   14000e1dc:	push   0x63657469
   14000e1e1:	je     0x14000e258
   14000e1e3:	jb     0x14000e24a
   14000e1e5:	cmp    eax,0x646d6122
   14000e1ea:	ss xor al,0x22
   14000e1ed:	or     eax,0x2020200a
   14000e1f2:	and    BYTE PTR [rsi+0x61],ch
   14000e1f5:	ins    DWORD PTR es:[rdi],dx
   14000e1f6:	gs cmp eax,0x63694d22
   14000e1fc:	jb     0x14000e26d
   14000e1fe:	jae    0x14000e26f
   14000e200:	data16 je 0x14000e231
   14000e203:	push   rdi
   14000e204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000e20b:	push   rdi
   14000e20c:	rex.WRB
   14000e20d:	rex.WB
   14000e20e:	cs push rbx
   14000e210:	movsxd esi,DWORD PTR [rdx+0x43]
   14000e213:	outs   dx,DWORD PTR ds:[rsi]
   14000e214:	outs   dx,BYTE PTR ds:[rsi]
   14000e215:	jae    0x14000e239
   14000e217:	or     eax,0x2020200a
   14000e21c:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000e220:	gs cmp eax,0x6e697722
   14000e226:	xor    esi,DWORD PTR [rdx]
   14000e228:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f1138
   14000e22e:	or     bh,BYTE PTR [rsp+riz*2]
   14000e231:	gs jae 0x14000e297
   14000e234:	jb     0x14000e29f
   14000e236:	jo     0x14000e2ac
   14000e238:	imul   ebp,DWORD PTR [rdi+0x6e],0x494d573e
   14000e23f:	and    BYTE PTR [rbx+0x74],dl
   14000e242:	(bad)  
   14000e243:	outs   dx,BYTE PTR ds:[rsi]
   14000e244:	fs (bad) 
   14000e246:	jb     0x14000e2ac
   14000e248:	and    BYTE PTR [rbp+0x76],al
   14000e24b:	outs   dx,BYTE PTR gs:[rsi]
   14000e24d:	je     0x14000e26f
   14000e24f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e251:	outs   dx,BYTE PTR ds:[rsi]
   14000e252:	jae    0x14000e2c9
   14000e254:	ins    DWORD PTR es:[rdi],dx
   14000e255:	gs jb  0x14000e278
   14000e258:	sub    eax,0x72637320
   14000e25d:	imul   esi,DWORD PTR [rax+0x74],0x3c676e69
   14000e264:	(bad)  
   14000e265:	fs gs jae 0x14000e2cc
   14000e269:	jb     0x14000e2d4
   14000e26b:	jo     0x14000e2e1
   14000e26d:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000e274:	or     bh,BYTE PTR [rsp+rsi*2]
   14000e277:	jb     0x14000e2ee
   14000e279:	jae    0x14000e2ef
   14000e27b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e27d:	outs   dx,WORD PTR ds:[rsi]
   14000e27f:	and    BYTE PTR [rax+0x6d],bh
   14000e282:	ins    BYTE PTR es:[rdi],dx
   14000e283:	outs   dx,BYTE PTR ds:[rsi]
   14000e284:	jae    0x14000e2c3
   14000e286:	and    dh,BYTE PTR [rbp+0x72]
   14000e289:	outs   dx,BYTE PTR ds:[rsi]
   14000e28a:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e28d:	push   0x73616d65
   14000e292:	sub    eax,0x7263696d
   14000e297:	outs   dx,DWORD PTR ds:[rsi]
   14000e298:	jae    0x14000e309
   14000e29a:	data16 je 0x14000e2ca
   14000e29d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e2a0:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e2a3:	ins    DWORD PTR es:[rdi],dx
   14000e2a4:	cs jbe 0x14000e2da
   14000e2a7:	and    bh,BYTE PTR [rsi]
   14000e2a9:	or     eax,0x2020200a
   14000e2ae:	and    BYTE PTR [rbx+rsi*2],bh
   14000e2b1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e2b5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000e2bd:	and    BYTE PTR [rax],ah
   14000e2bf:	and    BYTE PTR [rax],ah
   14000e2c1:	and    BYTE PTR [rax],ah
   14000e2c3:	cmp    al,0x72
   14000e2c5:	gs jno 0x14000e33d
   14000e2c8:	gs jae 0x14000e33f
   14000e2cb:	gs fs push rax
   14000e2ce:	jb     0x14000e339
   14000e2d0:	jbe    0x14000e33b
   14000e2d2:	ins    BYTE PTR es:[rdi],dx
   14000e2d3:	gs addr32 gs jae 0x14000e316
   14000e2d8:	or     eax,0x2020200a
   14000e2dd:	and    BYTE PTR [rax],ah
   14000e2df:	and    BYTE PTR [rax],ah
   14000e2e1:	and    BYTE PTR [rax],ah
   14000e2e3:	and    BYTE PTR [rax],ah
   14000e2e5:	and    BYTE PTR [rdx+rsi*2],bh
   14000e2e8:	gs jno 0x14000e360
   14000e2eb:	gs jae 0x14000e362
   14000e2ee:	gs fs rex.RB js 0x14000e358
   14000e2f3:	movsxd esi,DWORD PTR [rbp+0x74]
   14000e2f6:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000e2fd:	ins    BYTE PTR es:[rdi],dx
   14000e2fe:	or     eax,0x2020200a
   14000e303:	and    BYTE PTR [rax],ah
   14000e305:	and    BYTE PTR [rax],ah
   14000e307:	and    BYTE PTR [rax],ah
   14000e309:	and    BYTE PTR [rax],ah
   14000e30b:	and    BYTE PTR [rax],ah
   14000e30d:	and    BYTE PTR [rax],ah
   14000e30f:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000e313:	gs ins BYTE PTR es:[rdi],dx
   14000e315:	cmp    eax,0x49736122
   14000e31a:	outs   dx,BYTE PTR ds:[rsi]
   14000e31b:	jbe    0x14000e38c
   14000e31d:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000e321:	or     eax,0x2020200a
   14000e326:	and    BYTE PTR [rax],ah
   14000e328:	and    BYTE PTR [rax],ah
   14000e32a:	and    BYTE PTR [rax],ah
   14000e32c:	and    BYTE PTR [rax],ah
   14000e32e:	and    BYTE PTR [rax],ah
   14000e330:	and    BYTE PTR [rax],ah
   14000e332:	and    BYTE PTR [rbp+0x69],dh
   14000e335:	movsxd esp,DWORD PTR [r11+0x65]
   14000e339:	jae    0x14000e3ae
   14000e33b:	cmp    eax,0x6c616622
   14000e340:	jae    0x14000e3a7
   14000e342:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160210352
   14000e348:	and    BYTE PTR [rax],ah
   14000e34a:	and    BYTE PTR [rax],ah
   14000e34c:	and    BYTE PTR [rax],ah
   14000e34e:	and    BYTE PTR [rax],ah
   14000e350:	and    BYTE PTR [rdi],ch
   14000e352:	ds or  eax,0x2020200a
   14000e358:	and    BYTE PTR [rax],ah
   14000e35a:	and    BYTE PTR [rax],ah
   14000e35c:	and    BYTE PTR [rdi+rbp*1],bh
   14000e35f:	jb     0x14000e3c6
   14000e361:	jno    0x14000e3d8
   14000e363:	gs jae 0x14000e3da
   14000e366:	gs fs push rax
   14000e369:	jb     0x14000e3d4
   14000e36b:	jbe    0x14000e3d6
   14000e36d:	ins    BYTE PTR es:[rdi],dx
   14000e36e:	gs addr32 gs jae 0x14000e3b1
   14000e373:	or     eax,0x2020200a
   14000e378:	and    BYTE PTR [rdi+rbp*1],bh
   14000e37b:	jae    0x14000e3e2
   14000e37d:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e380:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000e388:	je     0x14000e3fc
   14000e38a:	jne    0x14000e3ff
   14000e38c:	je     0x14000e3d7
   14000e38e:	outs   dx,BYTE PTR ds:[rsi]
   14000e38f:	outs   dx,WORD PTR ds:[rsi]
   14000e391:	ds or  eax,0x612f3c0a
   14000e397:	jae    0x14000e40c
   14000e399:	gs ins DWORD PTR es:[rdi],dx
   14000e39b:	(bad)  
   14000e39c:	ins    BYTE PTR es:[rdi],dx
   14000e39d:	jns    0x14000e3dd
   14000e39f:	or     eax,0xa
   14000e3a4:	add    BYTE PTR [rax],al
   14000e3a6:	add    BYTE PTR [rax],al
   14000e3a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e3a9:	add    esi,DWORD PTR [rax+rax*1]
   14000e3ac:	add    BYTE PTR [rax],al
   14000e3ae:	push   rsi
   14000e3af:	add    BYTE PTR [rbx+0x0],dl
   14000e3b2:	pop    rdi
   14000e3b3:	add    BYTE PTR [rsi+0x0],dl
   14000e3b6:	add    BYTE PTR [r10+0x0],r10b
   14000e3ba:	push   rbx
   14000e3bb:	add    BYTE PTR [rcx+0x0],cl
   14000e3be:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000e3c2:	pop    rdi
   14000e3c3:	add    BYTE PTR [rcx+0x0],cl
   14000e3c6:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000e3ca:	rex.WRXB add BYTE PTR [r8],r8b
   14000e3cd:	add    BYTE PTR [rax],al
   14000e3cf:	add    BYTE PTR [rbp+0xfeef04],bh
   14000e3d5:	add    BYTE PTR [rcx],al
   14000e3d7:	add    BYTE PTR [rax],al
   14000e3d9:	add    BYTE PTR [rdx],cl
   14000e3db:	add    BYTE PTR [rax],al
   14000e3dd:	add    BYTE PTR [rax],bpl
   14000e3e0:	add    BYTE PTR [rax],al
   14000e3e2:	or     al,BYTE PTR [rax]
   14000e3e4:	add    BYTE PTR [rax+0x0],al
   14000e3e7:	sub    BYTE PTR [rdi],bh
   14000e3e9:	add    BYTE PTR [rax],al
   14000e3eb:	add    BYTE PTR [rax],al
   14000e3ed:	add    BYTE PTR [rax],al
   14000e3ef:	add    BYTE PTR [rax+rax*1],al
   14000e3f2:	add    al,0x0
   14000e3f4:	add    DWORD PTR [rax],eax
	...
   14000e402:	add    BYTE PTR [rax],al
   14000e404:	add    al,BYTE PTR [rbx]
   14000e406:	add    BYTE PTR [rax],al
   14000e408:	add    DWORD PTR [rax],eax
   14000e40a:	push   rbx
   14000e40b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000e40f:	add    BYTE PTR [rcx+0x0],ch
   14000e412:	outs   dx,BYTE PTR ds:[rsi]
   14000e413:	add    BYTE PTR [rdi+0x0],ah
   14000e416:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e41a:	ins    BYTE PTR es:[rdi],dx
   14000e41b:	add    BYTE PTR [rbp+0x0],ah
   14000e41e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e422:	data16 add BYTE PTR [rdi+0x0],ch
   14000e426:	add    BYTE PTR [rax],al
   14000e428:	fiadd  WORD PTR [rdx]
   14000e42a:	add    BYTE PTR [rax],al
   14000e42c:	add    DWORD PTR [rax],eax
   14000e42e:	xor    BYTE PTR [rax],al
   14000e430:	xor    al,0x0
   14000e432:	xor    BYTE PTR [rax],al
   14000e434:	cmp    DWORD PTR [rax],eax
   14000e436:	xor    BYTE PTR [rax],al
   14000e438:	xor    al,0x0
   14000e43a:	rex.X add BYTE PTR [rax],sil
   14000e43d:	add    BYTE PTR [rax],al
   14000e43f:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000e443:	add    BYTE PTR [rcx],al
   14000e445:	add    BYTE PTR [rbx+0x0],al
   14000e448:	outs   dx,DWORD PTR ds:[rsi]
   14000e449:	add    BYTE PTR [rbp+0x0],ch
   14000e44c:	jo     0x14000e44e
   14000e44e:	(bad)  
   14000e44f:	add    BYTE PTR [rsi+0x0],ch
   14000e452:	jns    0x14000e454
   14000e454:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e458:	ins    DWORD PTR es:[rdi],dx
   14000e459:	add    BYTE PTR [rbp+0x0],ah
   14000e45c:	add    BYTE PTR [rax],al
   14000e45e:	add    BYTE PTR [rax],al
   14000e460:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e464:	movsxd eax,DWORD PTR [rax]
   14000e466:	jb     0x14000e468
   14000e468:	outs   dx,DWORD PTR ds:[rsi]
   14000e469:	add    BYTE PTR [rbx+0x0],dh
   14000e46c:	outs   dx,DWORD PTR ds:[rsi]
   14000e46d:	add    BYTE PTR [rsi+0x0],ah
   14000e470:	je     0x14000e472
   14000e472:	and    BYTE PTR [rax],al
   14000e474:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e478:	jb     0x14000e47a
   14000e47a:	jo     0x14000e47c
   14000e47c:	outs   dx,DWORD PTR ds:[rsi]
   14000e47d:	add    BYTE PTR [rdx+0x0],dh
   14000e480:	(bad)  
   14000e481:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e485:	add    BYTE PTR [rdi+0x0],ch
   14000e488:	outs   dx,BYTE PTR ds:[rsi]
   14000e489:	add    BYTE PTR [rax],al
   14000e48b:	add    BYTE PTR [rax+0x0],bh
   14000e48e:	sub    BYTE PTR [rax],al
   14000e490:	add    DWORD PTR [rax],eax
   14000e492:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e496:	ins    BYTE PTR es:[rdi],dx
   14000e497:	add    BYTE PTR [rbp+0x0],ah
   14000e49a:	add    BYTE PTR [rbp+0x0],r12b
   14000e49e:	jae    0x14000e4a0
   14000e4a0:	movsxd eax,DWORD PTR [rax]
   14000e4a2:	jb     0x14000e4a4
   14000e4a4:	imul   eax,DWORD PTR [rax],0x740070
   14000e4aa:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e4b0:	add    BYTE PTR [rax],al
   14000e4b2:	add    BYTE PTR [rax],al
   14000e4b4:	push   rdi
   14000e4b5:	add    BYTE PTR [rbp+0x0],cl
   14000e4b8:	rex.WB add BYTE PTR [r8],spl
   14000e4bb:	add    BYTE PTR [rbx+0x0],dl
   14000e4be:	je     0x14000e4c0
   14000e4c0:	(bad)  
   14000e4c1:	add    BYTE PTR [rsi+0x0],ch
   14000e4c4:	add    BYTE PTR fs:[rcx+0x0],ah
   14000e4c8:	jb     0x14000e4ca
   14000e4ca:	add    BYTE PTR fs:[rax],ah
   14000e4cd:	add    BYTE PTR [rbp+0x0],al
   14000e4d0:	jbe    0x14000e4d2
   14000e4d2:	add    BYTE PTR gs:[rsi+0x0],ch
   14000e4d6:	je     0x14000e4d8
   14000e4d8:	and    BYTE PTR [rax],al
   14000e4da:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e4de:	outs   dx,BYTE PTR ds:[rsi]
   14000e4df:	add    BYTE PTR [rbx+0x0],dh
   14000e4e2:	jne    0x14000e4e4
   14000e4e4:	ins    DWORD PTR es:[rdi],dx
   14000e4e5:	add    BYTE PTR [rbp+0x0],ah
   14000e4e8:	jb     0x14000e4ea
   14000e4ea:	and    BYTE PTR [rax],al
   14000e4ec:	sub    eax,0x73002000
   14000e4f1:	add    BYTE PTR [rbx+0x0],ah
   14000e4f4:	jb     0x14000e4f6
   14000e4f6:	imul   eax,DWORD PTR [rax],0x740070
   14000e4fc:	imul   eax,DWORD PTR [rax],0x67006e
   14000e502:	add    BYTE PTR [rax],al
   14000e504:	data16 add BYTE PTR [rbx],ah
   14000e507:	add    BYTE PTR [rcx],al
   14000e509:	add    BYTE PTR [rsi+0x0],al
   14000e50c:	imul   eax,DWORD PTR [rax],0x65006c
   14000e512:	push   rsi
   14000e513:	add    BYTE PTR [rbp+0x0],ah
   14000e516:	jb     0x14000e518
   14000e518:	jae    0x14000e51a
   14000e51a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e520:	add    BYTE PTR [rax],al
   14000e522:	add    BYTE PTR [rax],al
   14000e524:	xor    DWORD PTR [rax],eax
   14000e526:	xor    BYTE PTR [rax],al
   14000e528:	add    BYTE PTR cs:[rax],dh
   14000e52b:	add    BYTE PTR [rsi],ch
   14000e52d:	add    BYTE PTR [rcx],dh
   14000e52f:	add    BYTE PTR [rax],dh
   14000e531:	add    BYTE PTR [rdx],dh
   14000e533:	add    BYTE PTR [rax+rax*1],dh
   14000e536:	xor    BYTE PTR [rax],al
   14000e538:	add    BYTE PTR cs:[rcx],dh
   14000e53b:	add    BYTE PTR [rsi],dh
   14000e53d:	add    BYTE PTR [rbx],dh
   14000e53f:	add    BYTE PTR [rax],bh
   14000e541:	add    BYTE PTR [rax+rax*1],dh
   14000e544:	and    BYTE PTR [rax],al
   14000e546:	sub    BYTE PTR [rax],al
   14000e548:	je     0x14000e54a
   14000e54a:	push   0x2e003100
   14000e54f:	add    BYTE PTR [rcx],dh
   14000e551:	add    BYTE PTR [rip+0x37003000],dh        # 0x177011557
   14000e557:	add    BYTE PTR [rax],dh
   14000e559:	add    BYTE PTR [rcx],bh
   14000e55b:	add    BYTE PTR [rip+0x37003100],ch        # 0x177011661
   14000e561:	add    BYTE PTR [rax],dh
   14000e563:	add    BYTE PTR [rax],dh
   14000e565:	add    BYTE PTR [rcx],ch
   14000e567:	add    BYTE PTR [rax],al
   14000e569:	add    BYTE PTR [rax],al
   14000e56b:	add    BYTE PTR [rax],dh
   14000e56d:	add    BYTE PTR [rax],cl
   14000e56f:	add    BYTE PTR [rcx],al
   14000e571:	add    BYTE PTR [rcx+0x0],cl
   14000e574:	outs   dx,BYTE PTR ds:[rsi]
   14000e575:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000e579:	add    BYTE PTR [rdx+0x0],dh
   14000e57c:	outs   dx,BYTE PTR ds:[rsi]
   14000e57d:	add    BYTE PTR [rcx+0x0],ah
   14000e580:	ins    BYTE PTR es:[rdi],dx
   14000e581:	add    BYTE PTR [rsi+0x0],cl
   14000e584:	(bad)  
   14000e585:	add    BYTE PTR [rbp+0x0],ch
   14000e588:	add    BYTE PTR gs:[rax],al
   14000e58b:	add    BYTE PTR [rbx+0x0],dl
   14000e58e:	movsxd eax,DWORD PTR [rax]
   14000e590:	jb     0x14000e592
   14000e592:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e596:	outs   dx,BYTE PTR ds:[rsi]
   14000e597:	add    BYTE PTR [rbx+0x0],dh
   14000e59a:	add    BYTE PTR [rax],al
   14000e59c:	add    BYTE PTR [rax],0x2e
   14000e59f:	add    BYTE PTR [rcx],al
   14000e5a1:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000e5a5:	add    BYTE PTR [rdi+0x0],ah
   14000e5a8:	(bad)  
   14000e5a9:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000e5ad:	add    BYTE PTR [rdi+0x0],ch
   14000e5b0:	jo     0x14000e5b2
   14000e5b2:	jns    0x14000e5b4
   14000e5b4:	jb     0x14000e5b6
   14000e5b6:	imul   eax,DWORD PTR [rax],0x680067
   14000e5bc:	je     0x14000e5be
   14000e5be:	add    BYTE PTR [rax],al
   14000e5c0:	test   eax,0x4d002000
   14000e5c5:	add    BYTE PTR [rcx+0x0],ch
   14000e5c8:	movsxd eax,DWORD PTR [rax]
   14000e5ca:	jb     0x14000e5cc
   14000e5cc:	outs   dx,DWORD PTR ds:[rsi]
   14000e5cd:	add    BYTE PTR [rbx+0x0],dh
   14000e5d0:	outs   dx,DWORD PTR ds:[rsi]
   14000e5d1:	add    BYTE PTR [rsi+0x0],ah
   14000e5d4:	je     0x14000e5d6
   14000e5d6:	and    BYTE PTR [rax],al
   14000e5d8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e5dc:	jb     0x14000e5de
   14000e5de:	jo     0x14000e5e0
   14000e5e0:	outs   dx,DWORD PTR ds:[rsi]
   14000e5e1:	add    BYTE PTR [rdx+0x0],dh
   14000e5e4:	(bad)  
   14000e5e5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e5e9:	add    BYTE PTR [rdi+0x0],ch
   14000e5ec:	outs   dx,BYTE PTR ds:[rsi]
   14000e5ed:	add    BYTE PTR [rsi],ch
   14000e5ef:	add    BYTE PTR [rax],ah
   14000e5f1:	add    BYTE PTR [rcx+0x0],al
   14000e5f4:	ins    BYTE PTR es:[rdi],dx
   14000e5f5:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000e5f9:	add    BYTE PTR [rdx+0x0],dh
   14000e5fc:	imul   eax,DWORD PTR [rax],0x680067
   14000e602:	je     0x14000e604
   14000e604:	jae    0x14000e606
   14000e606:	and    BYTE PTR [rax],al
   14000e608:	jb     0x14000e60a
   14000e60a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e60e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e612:	jbe    0x14000e614
   14000e614:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000e619:	add    BYTE PTR [rax],al
   14000e61b:	add    BYTE PTR [rax],bh
   14000e61d:	add    BYTE PTR [rax],cl
   14000e61f:	add    BYTE PTR [rcx],al
   14000e621:	add    BYTE PTR [rdi+0x0],cl
   14000e624:	jb     0x14000e626
   14000e626:	imul   eax,DWORD PTR [rax],0x690067
   14000e62c:	outs   dx,BYTE PTR ds:[rsi]
   14000e62d:	add    BYTE PTR [rcx+0x0],ah
   14000e630:	ins    BYTE PTR es:[rdi],dx
   14000e631:	add    BYTE PTR [rsi+0x0],al
   14000e634:	imul   eax,DWORD PTR [rax],0x65006c
   14000e63a:	outs   dx,BYTE PTR ds:[rsi]
   14000e63b:	add    BYTE PTR [rcx+0x0],ah
   14000e63e:	ins    DWORD PTR es:[rdi],dx
   14000e63f:	add    BYTE PTR [rbp+0x0],ah
   14000e642:	add    BYTE PTR [rax],al
   14000e644:	push   rbx
   14000e645:	add    BYTE PTR [rbx+0x0],ah
   14000e648:	jb     0x14000e64a
   14000e64a:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e64e:	outs   dx,BYTE PTR ds:[rsi]
   14000e64f:	add    BYTE PTR [rbx+0x0],dh
   14000e652:	add    BYTE PTR [rax],al
   14000e654:	push   0x0
   14000e656:	and    eax,0x50000100
   14000e65b:	add    BYTE PTR [rdx+0x0],dh
   14000e65e:	outs   dx,DWORD PTR ds:[rsi]
   14000e65f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e663:	add    BYTE PTR [rbx+0x0],ah
   14000e666:	je     0x14000e668
   14000e668:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e66c:	ins    DWORD PTR es:[rdi],dx
   14000e66d:	add    BYTE PTR [rbp+0x0],ah
   14000e670:	add    BYTE PTR [rax],al
   14000e672:	add    BYTE PTR [rax],al
   14000e674:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e678:	movsxd eax,DWORD PTR [rax]
   14000e67a:	jb     0x14000e67c
   14000e67c:	outs   dx,DWORD PTR ds:[rsi]
   14000e67d:	add    BYTE PTR [rbx+0x0],dh
   14000e680:	outs   dx,DWORD PTR ds:[rsi]
   14000e681:	add    BYTE PTR [rsi+0x0],ah
   14000e684:	je     0x14000e686
   14000e686:	scas   al,BYTE PTR es:[rdi]
   14000e687:	add    BYTE PTR [rax],ah
   14000e689:	add    BYTE PTR [rdi+0x0],dl
   14000e68c:	imul   eax,DWORD PTR [rax],0x64006e
   14000e692:	outs   dx,DWORD PTR ds:[rsi]
   14000e693:	add    BYTE PTR [rdi+0x0],dh
   14000e696:	jae    0x14000e698
   14000e698:	scas   al,BYTE PTR es:[rdi]
   14000e699:	add    BYTE PTR [rax],ah
   14000e69b:	add    BYTE PTR [rdi+0x0],cl
   14000e69e:	jo     0x14000e6a0
   14000e6a0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e6a4:	(bad)  
   14000e6a5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e6a9:	add    BYTE PTR [rsi+0x0],ch
   14000e6ac:	add    BYTE PTR [eax],ah
   14000e6af:	add    BYTE PTR [rbx+0x0],dl
   14000e6b2:	jns    0x14000e6b4
   14000e6b4:	jae    0x14000e6b6
   14000e6b6:	je     0x14000e6b8
   14000e6b8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e6bc:	add    BYTE PTR [rax],al
   14000e6be:	add    BYTE PTR [rax],al
   14000e6c0:	rex.RX add BYTE PTR [rcx],r10b
   14000e6c3:	add    BYTE PTR [rcx],al
   14000e6c5:	add    BYTE PTR [rax+0x0],dl
   14000e6c8:	jb     0x14000e6ca
   14000e6ca:	outs   dx,DWORD PTR ds:[rsi]
   14000e6cb:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e6cf:	add    BYTE PTR [rbx+0x0],ah
   14000e6d2:	je     0x14000e6d4
   14000e6d4:	push   rsi
   14000e6d5:	add    BYTE PTR [rbp+0x0],ah
   14000e6d8:	jb     0x14000e6da
   14000e6da:	jae    0x14000e6dc
   14000e6dc:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e6e2:	add    BYTE PTR [rax],al
   14000e6e4:	xor    DWORD PTR [rax],eax
   14000e6e6:	xor    BYTE PTR [rax],al
   14000e6e8:	add    BYTE PTR cs:[rax],dh
   14000e6eb:	add    BYTE PTR [rsi],ch
   14000e6ed:	add    BYTE PTR [rcx],dh
   14000e6ef:	add    BYTE PTR [rax],dh
   14000e6f1:	add    BYTE PTR [rdx],dh
   14000e6f3:	add    BYTE PTR [rax+rax*1],dh
   14000e6f6:	xor    BYTE PTR [rax],al
   14000e6f8:	add    BYTE PTR cs:[rcx],dh
   14000e6fb:	add    BYTE PTR [rsi],dh
   14000e6fd:	add    BYTE PTR [rbx],dh
   14000e6ff:	add    BYTE PTR [rax],bh
   14000e701:	add    BYTE PTR [rax+rax*1],dh
   14000e704:	add    BYTE PTR [rax],al
   14000e706:	add    BYTE PTR [rax],al
   14000e708:	add    BYTE PTR [rax],r8b
   14000e70b:	add    BYTE PTR [rcx],al
   14000e70d:	add    BYTE PTR [rsi+0x0],dl
   14000e710:	(bad)  
   14000e711:	add    BYTE PTR [rdx+0x0],dh
   14000e714:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e718:	ins    BYTE PTR es:[rdi],dx
   14000e719:	add    BYTE PTR [rbp+0x0],ah
   14000e71c:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e720:	data16 add BYTE PTR [rdi+0x0],ch
   14000e724:	add    BYTE PTR [rax],al
   14000e726:	add    BYTE PTR [rax],al
   14000e728:	and    al,0x0
   14000e72a:	add    al,0x0
   14000e72c:	add    BYTE PTR [rax],al
   14000e72e:	push   rsp
   14000e72f:	add    BYTE PTR [rdx+0x0],dh
   14000e732:	(bad)  
   14000e733:	add    BYTE PTR [rsi+0x0],ch
   14000e736:	jae    0x14000e738
   14000e738:	ins    BYTE PTR es:[rdi],dx
   14000e739:	add    BYTE PTR [rcx+0x0],ah
   14000e73c:	je     0x14000e73e
   14000e73e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e744:	add    BYTE PTR [rax],al
   14000e746:	add    BYTE PTR [rax],al
   14000e748:	or     DWORD PTR [rax+rsi*4],eax
   14000e74b:	add    al,0x0
   14000e74d:	add    BYTE PTR [rax],al
   14000e74f:	add    ch,cl
   14000e751:	dec    ch
   14000e753:	dec    al
   14000e755:	add    BYTE PTR [rax],al
   14000e757:	add    BYTE PTR [rax],al
   14000e759:	add    BYTE PTR [rcx],al
   14000e75b:	add    BYTE PTR [rax],al
   14000e75d:	add    BYTE PTR [rax],al
   14000e75f:	add    BYTE PTR [rcx],dl
   14000e761:	add    BYTE PTR [rax],al
   14000e763:	add    BYTE PTR [rax],al
   14000e765:	add    BYTE PTR [rax],al
   14000e767:	add    BYTE PTR [rdx],al
   14000e769:	add    BYTE PTR [rax],al
   14000e76b:	add    BYTE PTR [rax+0x1e],al
   14000e76e:	sar    BYTE PTR [rdx-0x3cbf1f22],1
   14000e774:	test   al,0x24
   14000e776:	popf   
   14000e777:	sub    dh,BYTE PTR [rip+0xf787ade]        # 0x14f79625b
   14000e77d:	and    cl,BYTE PTR [rdx-0x661d36c7]
   14000e783:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e784:	add    eax,0xf6c5668b
   14000e789:	jb     0x14000e7ee
   14000e78b:	rol    BYTE PTR [rax],0x0
	...
   14000e7a2:	add    BYTE PTR [rax],al
   14000e7a4:	mov    BYTE PTR [rax],al
   14000e7a6:	add    BYTE PTR [rax],al
   14000e7a8:	(bad)  
   14000e7a9:	add    BYTE PTR [rax],al
   14000e7ab:	add    BYTE PTR [rax+0x8000000],bl
   14000e7b1:	add    BYTE PTR [rax],al
   14000e7b3:	add    BYTE PTR [rax+0xe000000],ah
   14000e7b9:	add    BYTE PTR [rax],al
   14000e7bb:	add    BYTE PTR [rax+0x4000000],dh
	...
   14000e7c9:	add    BYTE PTR [rax],al
   14000e7cb:	add    BYTE PTR [rax+0xc000000],bh
   14000e7d1:	add    BYTE PTR [rax],al
   14000e7d3:	add    BYTE PTR [rax],al
   14000e7d5:	add    BYTE PTR [rax],al
   14000e7d7:	add    BYTE PTR [rbp+0x0],cl
   14000e7da:	push   rbp
   14000e7db:	add    BYTE PTR [rcx+0x0],cl
	...
   14000e7e6:	add    BYTE PTR [rax],al
   14000e7e8:	adc    BYTE PTR [rax],al
   14000e7ea:	add    BYTE PTR [rax],al
   14000e7ec:	sbb    BYTE PTR [rax],al
   14000e7ee:	add    BYTE PTR [rax],al
   14000e7f0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000e7f4:	rex.WB add BYTE PTR [r8],al
	...
   14000e7ff:	add    BYTE PTR [rax],dl
   14000e801:	add    BYTE PTR [rax],al
   14000e803:	add    BYTE PTR [rax],al
   14000e805:	add    BYTE PTR [rax],al
   14000e807:	add    BYTE PTR [rbp+0x0],ah
   14000e80a:	outs   dx,BYTE PTR ds:[rsi]
   14000e80b:	add    BYTE PTR [rip+0x53005500],ch        # 0x193013d11
   14000e811:	add    BYTE PTR [rax],al
   14000e813:	add    BYTE PTR [rax],al
   14000e815:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000f000 <.reloc>:
   14000f000:	add    BYTE PTR [rax+0xd00000],al
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	movabs al,ds:0xc8a5c0a5b8a5a8a5
   14000f011:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f012:	shl    BYTE PTR [rbp-0x5a0f5a28],1
   14000f018:	clc    
   14000f019:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f01a:	push   rax
   14000f01b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f01c:	pop    rax
   14000f01d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f01e:	(bad)  
   14000f01f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f020:	jo     0x14000efc9
   14000f022:	and    BYTE PTR [rdi-0x57cf57d8],0x38
   14000f029:	test   al,0x40
   14000f02b:	test   al,0x48
   14000f02d:	test   al,0x50
   14000f02f:	test   al,0x58
   14000f031:	test   al,0x60
   14000f033:	test   al,0x68
   14000f035:	test   al,0x70
   14000f037:	test   al,0x78
   14000f039:	test   al,0x80
   14000f03b:	test   al,0x88
   14000f03d:	test   al,0x90
   14000f03f:	test   al,0x98
   14000f041:	test   al,0xa0
   14000f043:	test   al,0xa8
   14000f045:	test   al,0xb0
   14000f047:	test   al,0xb8
   14000f049:	test   al,0xc0
   14000f04b:	test   al,0xc8
   14000f04d:	test   al,0xd0
   14000f04f:	test   al,0xd8
   14000f051:	test   al,0xe0
   14000f053:	test   al,0xe8
   14000f055:	test   al,0xf0
   14000f057:	test   al,0xf8
   14000f059:	test   al,0x0
   14000f05b:	test   eax,0xa910a908
   14000f060:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14000f066:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14000f06c:	test   rax,0xffffffffa958a950
   14000f072:	(bad)  
   14000f073:	test   eax,0xa970a968
   14000f078:	js     0x14000f023
   14000f07a:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14000f081:	test   eax,0xa9a8a9a0
   14000f086:	mov    al,0xa9
   14000f088:	mov    eax,0xc8a9c0a9
   14000f08d:	test   eax,0xa9d8a9d0
   14000f092:	loopne 0x14000f03d
   14000f094:	call   0x138aae142
   14000f099:	test   eax,0xaa08aa00
   14000f09e:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14000f0a4:	sub    BYTE PTR [rdx-0x55c755d0],ch
   14000f0aa:	stos   BYTE PTR es:[rdi],al
   14000f0ac:	rex.W stos BYTE PTR es:[rdi],al
   14000f0ae:	push   rax
   14000f0af:	stos   BYTE PTR es:[rdi],al
   14000f0b0:	pop    rax
   14000f0b1:	stos   BYTE PTR es:[rdi],al
   14000f0b2:	(bad)  
   14000f0b3:	stos   BYTE PTR es:[rdi],al
   14000f0b4:	push   0x78aa70aa
   14000f0b9:	stos   BYTE PTR es:[rdi],al
   14000f0ba:	sub    BYTE PTR [rdx-0x556f5578],0x98
   14000f0c1:	stos   BYTE PTR es:[rdi],al
   14000f0c2:	movabs al,ds:0xc0aab8aab0aaa8aa
   14000f0cb:	stos   BYTE PTR es:[rdi],al
   14000f0cc:	enter  0xd0aa,0xaa
   14000f0d0:	add    BYTE PTR [rax+0x100000],dl
   14000f0d6:	add    BYTE PTR [rax],al
   14000f0d8:	call   0x148a6f182
   14000f0dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f0de:	adc    BYTE PTR [rsi+0xc000],ah
   14000f0e4:	sbb    BYTE PTR [rax],al
   14000f0e6:	add    BYTE PTR [rax],al
   14000f0e8:	sub    BYTE PTR [rax-0x5fbf5fc8],ah
   14000f0ee:	rex.W movabs al,ds:0xa0e0a0b8a088a050
