
c5f8edfa5555688a71b70d7a32425b931d1e8f6ce44bbba3166f827146787c6d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0xf6a5]        # 0x4106c0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0xf6a6]        # 0x4106d0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0xf6a9]        # 0x4106e0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0xf66c]        # 0x4106b0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0xf4ef]        # 0x410540
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0xf641]        # 0x4106a0
  40105f:	mov    DWORD PTR [rip+0x11fa3],edx        # 0x413008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x40ca88
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x406bb0
  401081:	mov    rdx,QWORD PTR [rip+0xf558]        # 0x4105e0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0xf53e]        # 0x4105d0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0xf5c4]        # 0x410660
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0xf4db]        # 0x410580
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x406790
  4010af:	mov    rax,QWORD PTR [rip+0xf41a]        # 0x4104d0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x40ca88
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x5969]        # 0x406a90
  401127:	call   0x406a80
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0xf525]        # 0x410690
  40116b:	lea    r8,[rip+0x11ea6]        # 0x413018
  401172:	lea    rdx,[rip+0x11ea7]        # 0x413020
  401179:	lea    rcx,[rip+0x11ea8]        # 0x413028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x11e78],eax        # 0x413000
  401188:	lea    rax,[rip+0x11e71]        # 0x413000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0xf4b5]        # 0x410650
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x40caa0
  4011a3:	mov    DWORD PTR [rip+0x11e67],eax        # 0x413010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0xf4da]        # 0x4106a0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0xf3bb]        # 0x4105b0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x1457a]        # 0x41577c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0xf397]        # 0x4105c0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x11dba],0x1        # 0x413004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0xf2bc]        # 0x410520
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x406da0
  40127d:	lea    rcx,[rip+0x60bc]        # 0x407340
  401284:	call   QWORD PTR [rip+0x144ea]        # 0x415774
  40128a:	mov    rdx,QWORD PTR [rip+0xf30f]        # 0x4105a0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x407250
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x40cad0
  4012a5:	call   0x406b90
  4012aa:	mov    rax,QWORD PTR [rip+0xf28f]        # 0x410540
  4012b1:	mov    QWORD PTR [rip+0x13260],rax        # 0x414518
  4012b8:	mov    rax,QWORD PTR [rip+0xf2b1]        # 0x410570
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x131f9],rax        # 0x414510
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0xccca],eax        # 0x40e000
  401336:	mov    r12d,DWORD PTR [rip+0x11ceb]        # 0x413028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x40c9c0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x11cc2]        # 0x413020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x40c980
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x40c9c0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x40c9b8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x11c6a],rbp        # 0x413020
  4013b6:	call   0x406760
  4013bb:	mov    rax,QWORD PTR [rip+0xf19e]        # 0x410560
  4013c2:	mov    rdx,QWORD PTR [rip+0x11c4f]        # 0x413018
  4013c9:	mov    ecx,DWORD PTR [rip+0x11c59]        # 0x413028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x11c3c]        # 0x413018
  4013dc:	mov    rdx,QWORD PTR [rip+0x11c3d]        # 0x413020
  4013e3:	call   0x40cbb0
  4013e8:	mov    ecx,DWORD PTR [rip+0x11c1a]        # 0x413008
  4013ee:	mov    DWORD PTR [rip+0x11c18],eax        # 0x41300c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x11c02]        # 0x413004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x40ca70
  40140b:	mov    eax,DWORD PTR [rip+0x11bfb]        # 0x41300c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0xf189]        # 0x4105c0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x40ca78
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0xf1bd]        # 0x410620
  401463:	mov    rcx,QWORD PTR [rip+0xf1a6]        # 0x410610
  40146a:	call   0x40ca58
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x1428b]        # 0x415724
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0xf199]        # 0x410640
  4014a7:	mov    rcx,QWORD PTR [rip+0xf182]        # 0x410630
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x40ca58
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x40ca18
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0xf1c5]        # 0x4106a0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4067a0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0xf195]        # 0x4106a0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4067a0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x48
  401536:	movaps XMMWORD PTR [rsp+0x30],xmm6
  40153b:	mov    rsi,rcx
  40153e:	mov    QWORD PTR [rsp+0x28],0x0
  401547:	mov    rbx,QWORD PTR [rip+0x142c6]        # 0x415814
  40154e:	call   rbx
  401550:	lea    rdx,[rsp+0x28]
  401555:	mov    DWORD PTR [rax],0x0
  40155b:	mov    rcx,rsi
  40155e:	call   0x407b50
  401563:	movapd xmm6,xmm0
  401567:	pxor   xmm0,xmm0
  40156b:	ucomisd xmm0,xmm6
  40156f:	ja     0x4015a3
  401571:	call   rbx
  401573:	mov    eax,DWORD PTR [rax]
  401575:	test   eax,eax
  401577:	jne    0x4015a3
  401579:	mov    rax,QWORD PTR [rsp+0x28]
  40157e:	movapd xmm0,xmm6
  401582:	movzx  eax,BYTE PTR [rax]
  401585:	test   al,al
  401587:	je     0x4015ab
  401589:	sub    eax,0x47
  40158c:	cmp    al,0x2d
  40158e:	ja     0x4015a3
  401590:	lea    rdx,[rip+0xda69]        # 0x40f000
  401597:	movzx  eax,al
  40159a:	movsxd rax,DWORD PTR [rdx+rax*4]
  40159e:	add    rdx,rax
  4015a1:	jmp    rdx
  4015a3:	movsd  xmm0,QWORD PTR [rip+0xe3dd]        # 0x40f988
  4015ab:	movaps xmm6,XMMWORD PTR [rsp+0x30]
  4015b0:	add    rsp,0x48
  4015b4:	pop    rbx
  4015b5:	pop    rsi
  4015b6:	ret    
  4015b7:	nop    WORD PTR [rax+rax*1+0x0]
  4015c0:	mulsd  xmm6,QWORD PTR [rip+0xe3e0]        # 0x40f9a8
  4015c8:	movapd xmm0,xmm6
  4015cc:	jmp    0x4015ab
  4015ce:	xchg   ax,ax
  4015d0:	mulsd  xmm6,QWORD PTR [rip+0xe3d8]        # 0x40f9b0
  4015d8:	movapd xmm0,xmm6
  4015dc:	jmp    0x4015ab
  4015de:	xchg   ax,ax
  4015e0:	mulsd  xmm6,QWORD PTR [rip+0xe3b0]        # 0x40f998
  4015e8:	movapd xmm0,xmm6
  4015ec:	jmp    0x4015ab
  4015ee:	xchg   ax,ax
  4015f0:	mulsd  xmm6,QWORD PTR [rip+0xe398]        # 0x40f990
  4015f8:	movapd xmm0,xmm6
  4015fc:	jmp    0x4015ab
  4015fe:	xchg   ax,ax
  401600:	mulsd  xmm6,QWORD PTR [rip+0xe398]        # 0x40f9a0
  401608:	movapd xmm0,xmm6
  40160c:	jmp    0x4015ab
  40160e:	xchg   ax,ax
  401610:	push   rdi
  401611:	push   rsi
  401612:	push   rbx
  401613:	sub    rsp,0x20
  401617:	mov    esi,ecx
  401619:	mov    rcx,rdx
  40161c:	mov    rdi,r8
  40161f:	call   0x40c940
  401624:	test   rax,rax
  401627:	mov    rbx,rax
  40162a:	je     0x4016a6
  40162c:	mov    edx,0x2f
  401631:	mov    rcx,rax
  401634:	call   0x40c968
  401639:	test   rax,rax
  40163c:	je     0x401670
  40163e:	cmp    rax,rbx
  401641:	je     0x401670
  401643:	mov    BYTE PTR [rax],0x0
  401646:	mov    r8,rdi
  401649:	mov    rdx,rbx
  40164c:	mov    ecx,esi
  40164e:	call   0x406500
  401653:	test   eax,eax
  401655:	jne    0x401690
  401657:	mov    rcx,rbx
  40165a:	call   0x40c9f0
  40165f:	xor    eax,eax
  401661:	add    rsp,0x20
  401665:	pop    rbx
  401666:	pop    rsi
  401667:	pop    rdi
  401668:	ret    
  401669:	nop    DWORD PTR [rax+0x0]
  401670:	mov    rcx,rbx
  401673:	call   0x40c9f0
  401678:	lea    rcx,[rip+0xda39]        # 0x40f0b8
  40167f:	call   0x40c940
  401684:	mov    rbx,rax
  401687:	jmp    0x401646
  401689:	nop    DWORD PTR [rax+0x0]
  401690:	lea    rdx,[rip+0xda23]        # 0x40f0ba
  401697:	mov    r8d,0x7d
  40169d:	mov    ecx,eax
  40169f:	call   0x405480
  4016a4:	jmp    0x401657
  4016a6:	mov    eax,0xffffffc3
  4016ab:	jmp    0x401661
  4016ad:	nop    DWORD PTR [rax]
  4016b0:	push   rsi
  4016b1:	push   rbx
  4016b2:	sub    rsp,0x138
  4016b9:	lea    rbx,[rsp+0x30]
  4016be:	lea    r9,[rsp+0x28]
  4016c3:	mov    esi,r8d
  4016c6:	mov    r8,rbx
  4016c9:	call   0x4064c0
  4016ce:	test   eax,eax
  4016d0:	jne    0x401710
  4016d2:	mov    rdx,QWORD PTR [rsp+0x28]
  4016d7:	lea    r9,[rsp+0x24]
  4016dc:	mov    r8,rbx
  4016df:	mov    ecx,esi
  4016e1:	call   0x4065b0
  4016e6:	test   eax,eax
  4016e8:	je     0x4016fe
  4016ea:	lea    rdx,[rip+0xd9c9]        # 0x40f0ba
  4016f1:	mov    r8d,0x122
  4016f7:	mov    ecx,eax
  4016f9:	call   0x405480
  4016fe:	xor    eax,eax
  401700:	add    rsp,0x138
  401707:	pop    rbx
  401708:	pop    rsi
  401709:	ret    
  40170a:	nop    WORD PTR [rax+rax*1+0x0]
  401710:	lea    rdx,[rip+0xd9a3]        # 0x40f0ba
  401717:	mov    r8d,0x121
  40171d:	mov    ecx,eax
  40171f:	call   0x405480
  401724:	jmp    0x4016d2
  401726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401730:	push   r13
  401732:	push   r12
  401734:	push   rbp
  401735:	push   rdi
  401736:	push   rsi
  401737:	push   rbx
  401738:	sub    rsp,0x258
  40173f:	lea    rax,[rsp+0x40]
  401744:	lea    rbx,[rsp+0x50]
  401749:	lea    r9,[rsp+0x34]
  40174e:	mov    r13d,r8d
  401751:	mov    ebp,ecx
  401753:	mov    r12d,edx
  401756:	mov    QWORD PTR [rsp+0x28],rax
  40175b:	lea    rax,[rsp+0x38]
  401760:	mov    r8,rbx
  401763:	mov    QWORD PTR [rsp+0x20],rax
  401768:	call   0x406518
  40176d:	test   eax,eax
  40176f:	jne    0x401831
  401775:	mov    edx,DWORD PTR [rsp+0x34]
  401779:	lea    r9,[rsp+0x30]
  40177e:	mov    r8,rbx
  401781:	mov    ecx,r13d
  401784:	call   0x4065c0
  401789:	test   eax,eax
  40178b:	jne    0x401850
  401791:	cmp    QWORD PTR [rsp+0x40],0x0
  401797:	je     0x40181f
  40179d:	xor    ebx,ebx
  40179f:	lea    rdi,[rsp+0x150]
  4017a7:	lea    rsi,[rsp+0x48]
  4017ac:	jmp    0x4017d1
  4017ae:	xchg   ax,ax
  4017b0:	mov    edx,DWORD PTR [rsp+0x30]
  4017b4:	mov    r9,rsi
  4017b7:	mov    r8,rdi
  4017ba:	mov    ecx,r13d
  4017bd:	call   0x406418
  4017c2:	test   eax,eax
  4017c4:	jne    0x401800
  4017c6:	add    rbx,0x1
  4017ca:	cmp    rbx,QWORD PTR [rsp+0x40]
  4017cf:	jae    0x40181f
  4017d1:	mov    QWORD PTR [rsp+0x20],rsi
  4017d6:	mov    r9,rdi
  4017d9:	mov    r8d,ebx
  4017dc:	mov    edx,r12d
  4017df:	mov    ecx,ebp
  4017e1:	call   0x406510
  4017e6:	test   eax,eax
  4017e8:	je     0x4017b0
  4017ea:	lea    rdx,[rip+0xd8c9]        # 0x40f0ba
  4017f1:	mov    r8d,0x13a
  4017f7:	mov    ecx,eax
  4017f9:	call   0x405480
  4017fe:	jmp    0x4017b0
  401800:	lea    rdx,[rip+0xd8b3]        # 0x40f0ba
  401807:	mov    r8d,0x13b
  40180d:	mov    ecx,eax
  40180f:	add    rbx,0x1
  401813:	call   0x405480
  401818:	cmp    rbx,QWORD PTR [rsp+0x40]
  40181d:	jb     0x4017d1
  40181f:	xor    eax,eax
  401821:	add    rsp,0x258
  401828:	pop    rbx
  401829:	pop    rsi
  40182a:	pop    rdi
  40182b:	pop    rbp
  40182c:	pop    r12
  40182e:	pop    r13
  401830:	ret    
  401831:	lea    rdx,[rip+0xd882]        # 0x40f0ba
  401838:	mov    r8d,0x135
  40183e:	mov    ecx,eax
  401840:	call   0x405480
  401845:	jmp    0x401775
  40184a:	nop    WORD PTR [rax+rax*1+0x0]
  401850:	lea    rdx,[rip+0xd863]        # 0x40f0ba
  401857:	mov    r8d,0x136
  40185d:	mov    ecx,eax
  40185f:	call   0x405480
  401864:	jmp    0x401791
  401869:	nop    DWORD PTR [rax+0x0]
  401870:	push   r15
  401872:	push   r14
  401874:	push   r13
  401876:	push   r12
  401878:	push   rbp
  401879:	push   rdi
  40187a:	push   rsi
  40187b:	push   rbx
  40187c:	sub    rsp,0x3a8
  401883:	lea    rax,[rsp+0x90]
  40188b:	lea    rbx,[rsp+0xa0]
  401893:	lea    r9,[rsp+0x88]
  40189b:	mov    edi,r8d
  40189e:	mov    esi,ecx
  4018a0:	mov    r14d,edx
  4018a3:	mov    QWORD PTR [rsp+0x20],rax
  4018a8:	mov    r8,rbx
  4018ab:	call   0x406548
  4018b0:	test   eax,eax
  4018b2:	jne    0x401b40
  4018b8:	mov    rdx,QWORD PTR [rsp+0x88]
  4018c0:	lea    r9,[rsp+0x78]
  4018c5:	mov    r8,rbx
  4018c8:	mov    ecx,edi
  4018ca:	call   0x4065d0
  4018cf:	test   eax,eax
  4018d1:	jne    0x401b60
  4018d7:	cmp    QWORD PTR [rsp+0x90],0x0
  4018e0:	je     0x401b79
  4018e6:	lea    rax,[rsp+0x84]
  4018ee:	xor    ebx,ebx
  4018f0:	mov    DWORD PTR [rsp+0x6c],0x0
  4018f8:	lea    r12,[rsp+0x1a0]
  401900:	lea    rbp,[rsp+0x2a0]
  401908:	mov    QWORD PTR [rsp+0x60],rax
  40190d:	lea    rax,[rsp+0x7c]
  401912:	mov    QWORD PTR [rsp+0x50],rax
  401917:	lea    rax,[rsp+0x98]
  40191f:	mov    QWORD PTR [rsp+0x48],rax
  401924:	lea    rax,[rsp+0x80]
  40192c:	mov    QWORD PTR [rsp+0x58],rax
  401931:	jmp    0x40196e
  401933:	mov    eax,DWORD PTR [rsp+0x80]
  40193a:	mov    r9,QWORD PTR [rsp+0x98]
  401942:	mov    r8,r12
  401945:	mov    edx,DWORD PTR [rsp+0x78]
  401949:	mov    ecx,edi
  40194b:	mov    DWORD PTR [rsp+0x20],eax
  40194f:	call   0x406420
  401954:	test   eax,eax
  401956:	jne    0x401b20
  40195c:	add    rbx,0x1
  401960:	cmp    rbx,QWORD PTR [rsp+0x90]
  401968:	jae    0x401a88
  40196e:	mov    rax,QWORD PTR [rsp+0x60]
  401973:	mov    QWORD PTR [rsp+0x38],0x0
  40197c:	mov    r9,r12
  40197f:	mov    r8d,ebx
  401982:	mov    edx,r14d
  401985:	mov    ecx,esi
  401987:	mov    r15d,ebx
  40198a:	mov    QWORD PTR [rsp+0x30],rax
  40198f:	mov    rax,QWORD PTR [rsp+0x50]
  401994:	mov    QWORD PTR [rsp+0x28],rax
  401999:	mov    rax,QWORD PTR [rsp+0x48]
  40199e:	mov    QWORD PTR [rsp+0x20],rax
  4019a3:	call   0x406540
  4019a8:	test   eax,eax
  4019aa:	jne    0x401ae0
  4019b0:	mov    edx,DWORD PTR [rsp+0x7c]
  4019b4:	xor    r9d,r9d
  4019b7:	mov    r8,rbp
  4019ba:	mov    ecx,esi
  4019bc:	call   0x4064b8
  4019c1:	test   eax,eax
  4019c3:	jne    0x401ac0
  4019c9:	mov    r8,QWORD PTR [rsp+0x58]
  4019ce:	mov    rdx,rbp
  4019d1:	mov    ecx,edi
  4019d3:	call   0x4064b0
  4019d8:	test   eax,eax
  4019da:	jne    0x401aa0
  4019e0:	mov    ecx,DWORD PTR [rsp+0x84]
  4019e7:	test   ecx,ecx
  4019e9:	je     0x401933
  4019ef:	add    ecx,0x1
  4019f2:	movsxd rcx,ecx
  4019f5:	shl    rcx,0x2
  4019f9:	call   0x405450
  4019fe:	xor    r9d,r9d
  401a01:	mov    r8d,r15d
  401a04:	mov    edx,r14d
  401a07:	mov    ecx,esi
  401a09:	mov    QWORD PTR [rsp+0x38],rax
  401a0e:	mov    QWORD PTR [rsp+0x30],0x0
  401a17:	mov    QWORD PTR [rsp+0x28],0x0
  401a20:	mov    QWORD PTR [rsp+0x20],0x0
  401a29:	mov    r13,rax
  401a2c:	call   0x406540
  401a31:	mov    DWORD PTR [rsp+0x6c],eax
  401a35:	mov    eax,DWORD PTR [rsp+0x84]
  401a3c:	mov    r8,r12
  401a3f:	mov    r9,QWORD PTR [rsp+0x98]
  401a47:	mov    edx,DWORD PTR [rsp+0x78]
  401a4b:	mov    ecx,edi
  401a4d:	mov    QWORD PTR [rsp+0x30],r13
  401a52:	mov    DWORD PTR [rsp+0x28],eax
  401a56:	mov    eax,DWORD PTR [rsp+0x80]
  401a5d:	mov    DWORD PTR [rsp+0x20],eax
  401a61:	call   0x406428
  401a66:	test   eax,eax
  401a68:	jne    0x401b00
  401a6e:	mov    rcx,r13
  401a71:	add    rbx,0x1
  401a75:	call   0x40c9f0
  401a7a:	cmp    rbx,QWORD PTR [rsp+0x90]
  401a82:	jb     0x40196e
  401a88:	mov    eax,DWORD PTR [rsp+0x6c]
  401a8c:	add    rsp,0x3a8
  401a93:	pop    rbx
  401a94:	pop    rsi
  401a95:	pop    rdi
  401a96:	pop    rbp
  401a97:	pop    r12
  401a99:	pop    r13
  401a9b:	pop    r14
  401a9d:	pop    r15
  401a9f:	ret    
  401aa0:	lea    rdx,[rip+0xd613]        # 0x40f0ba
  401aa7:	mov    r8d,0x15c
  401aad:	mov    ecx,eax
  401aaf:	call   0x405480
  401ab4:	jmp    0x4019e0
  401ab9:	nop    DWORD PTR [rax+0x0]
  401ac0:	lea    rdx,[rip+0xd5f3]        # 0x40f0ba
  401ac7:	mov    r8d,0x15b
  401acd:	mov    ecx,eax
  401acf:	call   0x405480
  401ad4:	jmp    0x4019c9
  401ad9:	nop    DWORD PTR [rax+0x0]
  401ae0:	lea    rdx,[rip+0xd5d3]        # 0x40f0ba
  401ae7:	mov    r8d,0x157
  401aed:	mov    ecx,eax
  401aef:	call   0x405480
  401af4:	jmp    0x4019b0
  401af9:	nop    DWORD PTR [rax+0x0]
  401b00:	lea    rdx,[rip+0xd5b3]        # 0x40f0ba
  401b07:	mov    r8d,0x164
  401b0d:	mov    ecx,eax
  401b0f:	call   0x405480
  401b14:	jmp    0x401a6e
  401b19:	nop    DWORD PTR [rax+0x0]
  401b20:	lea    rdx,[rip+0xd593]        # 0x40f0ba
  401b27:	mov    r8d,0x15e
  401b2d:	mov    ecx,eax
  401b2f:	call   0x405480
  401b34:	jmp    0x40195c
  401b39:	nop    DWORD PTR [rax+0x0]
  401b40:	lea    rdx,[rip+0xd573]        # 0x40f0ba
  401b47:	mov    r8d,0x14d
  401b4d:	mov    ecx,eax
  401b4f:	call   0x405480
  401b54:	jmp    0x4018b8
  401b59:	nop    DWORD PTR [rax+0x0]
  401b60:	lea    rdx,[rip+0xd553]        # 0x40f0ba
  401b67:	mov    r8d,0x14e
  401b6d:	mov    ecx,eax
  401b6f:	call   0x405480
  401b74:	jmp    0x4018d7
  401b79:	mov    DWORD PTR [rsp+0x6c],0x0
  401b81:	jmp    0x401a88
  401b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b90:	push   rdi
  401b91:	push   rsi
  401b92:	push   rbx
  401b93:	sub    rsp,0x50
  401b97:	xor    r9d,r9d
  401b9a:	lea    rax,[rsp+0x4c]
  401b9f:	mov    edi,r8d
  401ba2:	mov    QWORD PTR [rsp+0x28],0x0
  401bab:	xor    r8d,r8d
  401bae:	mov    QWORD PTR [rsp+0x20],0x0
  401bb7:	mov    ebx,ecx
  401bb9:	mov    QWORD PTR [rsp+0x30],rax
  401bbe:	mov    esi,edx
  401bc0:	call   0x406490
  401bc5:	test   eax,eax
  401bc7:	jne    0x401c70
  401bcd:	mov    eax,DWORD PTR [rsp+0x4c]
  401bd1:	cmp    eax,0xe
  401bd4:	je     0x401c91
  401bda:	jle    0x401c40
  401bdc:	cmp    eax,0xf
  401bdf:	je     0x401c10
  401be1:	cmp    eax,0x10
  401be4:	jne    0x401cc0
  401bea:	mov    r8d,edi
  401bed:	mov    edx,esi
  401bef:	mov    ecx,ebx
  401bf1:	call   0x401870
  401bf6:	test   eax,eax
  401bf8:	jne    0x401ce1
  401bfe:	xchg   ax,ax
  401c00:	xor    eax,eax
  401c02:	add    rsp,0x50
  401c06:	pop    rbx
  401c07:	pop    rsi
  401c08:	pop    rdi
  401c09:	ret    
  401c0a:	nop    WORD PTR [rax+rax*1+0x0]
  401c10:	mov    r8d,edi
  401c13:	mov    edx,esi
  401c15:	mov    ecx,ebx
  401c17:	call   0x401730
  401c1c:	test   eax,eax
  401c1e:	je     0x401c00
  401c20:	lea    rdx,[rip+0xd493]        # 0x40f0ba
  401c27:	mov    r8d,0x17f
  401c2d:	mov    ecx,eax
  401c2f:	call   0x405480
  401c34:	jmp    0x401c00
  401c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c40:	cmp    eax,0xd
  401c43:	jne    0x401cc0
  401c45:	mov    r8d,edi
  401c48:	mov    edx,esi
  401c4a:	mov    ecx,ebx
  401c4c:	call   0x401d00
  401c51:	test   eax,eax
  401c53:	je     0x401c00
  401c55:	lea    rdx,[rip+0xd45e]        # 0x40f0ba
  401c5c:	mov    r8d,0x179
  401c62:	mov    ecx,eax
  401c64:	call   0x405480
  401c69:	jmp    0x401c00
  401c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  401c70:	lea    rdx,[rip+0xd443]        # 0x40f0ba
  401c77:	mov    ecx,eax
  401c79:	mov    r8d,0x175
  401c7f:	call   0x405480
  401c84:	mov    eax,DWORD PTR [rsp+0x4c]
  401c88:	cmp    eax,0xe
  401c8b:	jne    0x401bda
  401c91:	mov    r8d,edi
  401c94:	mov    edx,esi
  401c96:	mov    ecx,ebx
  401c98:	call   0x4016b0
  401c9d:	test   eax,eax
  401c9f:	je     0x401c00
  401ca5:	lea    rdx,[rip+0xd40e]        # 0x40f0ba
  401cac:	mov    r8d,0x17c
  401cb2:	mov    ecx,eax
  401cb4:	call   0x405480
  401cb9:	jmp    0x401c00
  401cbe:	xchg   ax,ax
  401cc0:	lea    rdx,[rip+0xd3f3]        # 0x40f0ba
  401cc7:	mov    r8d,0x185
  401ccd:	mov    ecx,0xffffffd3
  401cd2:	call   0x405480
  401cd7:	xor    eax,eax
  401cd9:	add    rsp,0x50
  401cdd:	pop    rbx
  401cde:	pop    rsi
  401cdf:	pop    rdi
  401ce0:	ret    
  401ce1:	lea    rdx,[rip+0xd3d2]        # 0x40f0ba
  401ce8:	mov    r8d,0x182
  401cee:	mov    ecx,eax
  401cf0:	call   0x405480
  401cf5:	jmp    0x401c00
  401cfa:	nop    WORD PTR [rax+rax*1+0x0]
  401d00:	push   r13
  401d02:	push   r12
  401d04:	push   rbp
  401d05:	push   rdi
  401d06:	push   rsi
  401d07:	push   rbx
  401d08:	sub    rsp,0x258
  401d0f:	lea    rax,[rsp+0x34]
  401d14:	lea    r12,[rsp+0x50]
  401d19:	lea    r9,[rsp+0x40]
  401d1e:	mov    esi,r8d
  401d21:	mov    ebp,ecx
  401d23:	mov    QWORD PTR [rsp+0x20],rax
  401d28:	mov    r8,r12
  401d2b:	call   0x406430
  401d30:	test   eax,eax
  401d32:	jne    0x401e00
  401d38:	lea    rdi,[rsp+0x150]
  401d40:	mov    edx,DWORD PTR [rsp+0x34]
  401d44:	lea    r9,[rsp+0x48]
  401d49:	mov    ecx,ebp
  401d4b:	mov    r8,rdi
  401d4e:	call   0x4064b8
  401d53:	test   eax,eax
  401d55:	jne    0x401de0
  401d5b:	lea    r13,[rsp+0x38]
  401d60:	mov    rdx,rdi
  401d63:	mov    ecx,esi
  401d65:	mov    r8,r13
  401d68:	call   0x4064b0
  401d6d:	cmp    eax,0xffffffd3
  401d70:	mov    ebx,eax
  401d72:	je     0x401e20
  401d78:	test   ebx,ebx
  401d7a:	jne    0x401dc0
  401d7c:	mov    r8d,DWORD PTR [rsp+0x38]
  401d81:	lea    r9,[rsp+0x3c]
  401d86:	mov    rdx,r12
  401d89:	mov    ecx,esi
  401d8b:	call   0x406580
  401d90:	test   eax,eax
  401d92:	je     0x401da8
  401d94:	lea    rdx,[rip+0xd31f]        # 0x40f0ba
  401d9b:	mov    r8d,0x111
  401da1:	mov    ecx,eax
  401da3:	call   0x405480
  401da8:	mov    eax,ebx
  401daa:	add    rsp,0x258
  401db1:	pop    rbx
  401db2:	pop    rsi
  401db3:	pop    rdi
  401db4:	pop    rbp
  401db5:	pop    r12
  401db7:	pop    r13
  401db9:	ret    
  401dba:	nop    WORD PTR [rax+rax*1+0x0]
  401dc0:	lea    rdx,[rip+0xd2f3]        # 0x40f0ba
  401dc7:	mov    r8d,0x10e
  401dcd:	mov    ecx,ebx
  401dcf:	call   0x405480
  401dd4:	jmp    0x401d7c
  401dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401de0:	lea    rdx,[rip+0xd2d3]        # 0x40f0ba
  401de7:	mov    r8d,0x107
  401ded:	mov    ecx,eax
  401def:	call   0x405480
  401df4:	jmp    0x401d5b
  401df9:	nop    DWORD PTR [rax+0x0]
  401e00:	lea    rdx,[rip+0xd2b3]        # 0x40f0ba
  401e07:	mov    r8d,0x104
  401e0d:	mov    ecx,eax
  401e0f:	call   0x405480
  401e14:	jmp    0x401d38
  401e19:	nop    DWORD PTR [rax+0x0]
  401e20:	mov    edx,DWORD PTR [rsp+0x34]
  401e24:	mov    r8d,esi
  401e27:	mov    ecx,ebp
  401e29:	call   0x401b90
  401e2e:	test   eax,eax
  401e30:	jne    0x401e50
  401e32:	mov    r8,r13
  401e35:	mov    rdx,rdi
  401e38:	mov    ecx,esi
  401e3a:	call   0x4064b0
  401e3f:	mov    ebx,eax
  401e41:	jmp    0x401d78
  401e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e50:	lea    rdx,[rip+0xd263]        # 0x40f0ba
  401e57:	mov    r8d,0x10b
  401e5d:	mov    ecx,eax
  401e5f:	call   0x405480
  401e64:	jmp    0x401e32
  401e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e70:	push   r12
  401e72:	push   rbp
  401e73:	push   rdi
  401e74:	push   rsi
  401e75:	push   rbx
  401e76:	sub    rsp,0x140
  401e7d:	mov    DWORD PTR [rsp+0x28],edx
  401e81:	mov    esi,edx
  401e83:	lea    rdx,[rsp+0x2c]
  401e88:	mov    edi,ecx
  401e8a:	mov    rbp,r8
  401e8d:	call   0x4064f0
  401e92:	test   eax,eax
  401e94:	mov    ebx,eax
  401e96:	je     0x401ed0
  401e98:	cmp    eax,0xffffff83
  401e9b:	je     0x401f10
  401e9d:	lea    rdx,[rip+0xd216]        # 0x40f0ba
  401ea4:	mov    r8d,0x59
  401eaa:	mov    ecx,eax
  401eac:	call   0x405480
  401eb1:	mov    eax,DWORD PTR [rsp+0x28]
  401eb5:	mov    DWORD PTR [rbp+0x0],eax
  401eb8:	mov    eax,ebx
  401eba:	add    rsp,0x140
  401ec1:	pop    rbx
  401ec2:	pop    rsi
  401ec3:	pop    rdi
  401ec4:	pop    rbp
  401ec5:	pop    r12
  401ec7:	ret    
  401ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ed0:	lea    r12,[rsp+0x30]
  401ed5:	mov    ecx,edi
  401ed7:	mov    rdx,r12
  401eda:	call   0x4064e8
  401edf:	test   eax,eax
  401ee1:	jne    0x401f14
  401ee3:	lea    r8,[rsp+0x28]
  401ee8:	mov    rdx,r12
  401eeb:	mov    ecx,esi
  401eed:	call   0x4064f8
  401ef2:	test   eax,eax
  401ef4:	je     0x401eb1
  401ef6:	lea    rdx,[rip+0xd1bd]        # 0x40f0ba
  401efd:	mov    r8d,0x55
  401f03:	mov    ecx,eax
  401f05:	call   0x405480
  401f0a:	jmp    0x401eb1
  401f0c:	nop    DWORD PTR [rax+0x0]
  401f10:	xor    ebx,ebx
  401f12:	jmp    0x401eb1
  401f14:	lea    rdx,[rip+0xd19f]        # 0x40f0ba
  401f1b:	mov    r8d,0x54
  401f21:	mov    ecx,eax
  401f23:	call   0x405480
  401f28:	jmp    0x401ee3
  401f2a:	nop    WORD PTR [rax+rax*1+0x0]
  401f30:	push   r12
  401f32:	push   rbp
  401f33:	push   rdi
  401f34:	push   rsi
  401f35:	push   rbx
  401f36:	sub    rsp,0x30
  401f3a:	xor    r8d,r8d
  401f3d:	lea    rbx,[rsp+0x24]
  401f42:	mov    edi,edx
  401f44:	mov    ebp,ecx
  401f46:	mov    rdx,rbx
  401f49:	call   0x4064a8
  401f4e:	test   eax,eax
  401f50:	jne    0x402110
  401f56:	movsxd rcx,DWORD PTR [rsp+0x24]
  401f5b:	test   ecx,ecx
  401f5d:	jle    0x401f99
  401f5f:	shl    rcx,0x2
  401f63:	call   0x405450
  401f68:	mov    rdx,rbx
  401f6b:	mov    r8,rax
  401f6e:	mov    ecx,ebp
  401f70:	mov    r12,rax
  401f73:	call   0x4064a8
  401f78:	test   eax,eax
  401f7a:	jne    0x402150
  401f80:	mov    ecx,DWORD PTR [rsp+0x24]
  401f84:	xor    ebx,ebx
  401f86:	mov    rsi,r12
  401f89:	test   ecx,ecx
  401f8b:	jg     0x4020d5
  401f91:	mov    rcx,r12
  401f94:	call   0x40c9f0
  401f99:	lea    rbx,[rsp+0x28]
  401f9e:	xor    r8d,r8d
  401fa1:	mov    ecx,ebp
  401fa3:	mov    rdx,rbx
  401fa6:	call   0x4064d8
  401fab:	test   eax,eax
  401fad:	jne    0x4020f0
  401fb3:	movsxd rcx,DWORD PTR [rsp+0x28]
  401fb8:	test   ecx,ecx
  401fba:	jle    0x40209a
  401fc0:	shl    rcx,0x2
  401fc4:	call   0x405450
  401fc9:	mov    rdx,rbx
  401fcc:	mov    r8,rax
  401fcf:	mov    ecx,ebp
  401fd1:	mov    r12,rax
  401fd4:	call   0x4064d8
  401fd9:	test   eax,eax
  401fdb:	jne    0x402130
  401fe1:	mov    edx,DWORD PTR [rsp+0x28]
  401fe5:	xor    esi,esi
  401fe7:	mov    rbx,r12
  401fea:	lea    rbp,[rsp+0x2c]
  401fef:	test   edx,edx
  401ff1:	jg     0x40201c
  401ff3:	jmp    0x402092
  401ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  402000:	mov    edx,DWORD PTR [rsp+0x2c]
  402004:	mov    ecx,DWORD PTR [rbx]
  402006:	call   0x401f30
  40200b:	test   eax,eax
  40200d:	jne    0x402071
  40200f:	add    esi,0x1
  402012:	add    rbx,0x4
  402016:	cmp    DWORD PTR [rsp+0x28],esi
  40201a:	jle    0x402092
  40201c:	mov    eax,DWORD PTR [rip+0x1102a]        # 0x41304c
  402022:	test   eax,eax
  402024:	jne    0x40203e
  402026:	mov    r8,QWORD PTR [rip+0x11023]        # 0x413050
  40202d:	mov    edx,DWORD PTR [rip+0x1102d]        # 0x413060
  402033:	mov    ecx,DWORD PTR [rbx]
  402035:	call   0x405ca0
  40203a:	test   eax,eax
  40203c:	je     0x40200f
  40203e:	mov    ecx,DWORD PTR [rbx]
  402040:	mov    r8,rbp
  402043:	mov    edx,edi
  402045:	call   0x401e70
  40204a:	test   eax,eax
  40204c:	je     0x402000
  40204e:	lea    rdx,[rip+0xd065]        # 0x40f0ba
  402055:	mov    ecx,eax
  402057:	mov    r8d,0x1e1
  40205d:	call   0x405480
  402062:	mov    edx,DWORD PTR [rsp+0x2c]
  402066:	mov    ecx,DWORD PTR [rbx]
  402068:	call   0x401f30
  40206d:	test   eax,eax
  40206f:	je     0x40200f
  402071:	lea    rdx,[rip+0xd042]        # 0x40f0ba
  402078:	mov    r8d,0x1e2
  40207e:	mov    ecx,eax
  402080:	add    esi,0x1
  402083:	add    rbx,0x4
  402087:	call   0x405480
  40208c:	cmp    DWORD PTR [rsp+0x28],esi
  402090:	jg     0x40201c
  402092:	mov    rcx,r12
  402095:	call   0x40c9f0
  40209a:	xor    eax,eax
  40209c:	add    rsp,0x30
  4020a0:	pop    rbx
  4020a1:	pop    rsi
  4020a2:	pop    rdi
  4020a3:	pop    rbp
  4020a4:	pop    r12
  4020a6:	ret    
  4020a7:	nop    WORD PTR [rax+rax*1+0x0]
  4020b0:	lea    rdx,[rip+0xd003]        # 0x40f0ba
  4020b7:	mov    r8d,0x1d1
  4020bd:	mov    ecx,eax
  4020bf:	call   0x405480
  4020c4:	add    ebx,0x1
  4020c7:	add    rsi,0x4
  4020cb:	cmp    DWORD PTR [rsp+0x24],ebx
  4020cf:	jle    0x401f91
  4020d5:	mov    edx,DWORD PTR [rsi]
  4020d7:	mov    r8d,edi
  4020da:	mov    ecx,ebp
  4020dc:	call   0x401b90
  4020e1:	test   eax,eax
  4020e3:	je     0x4020c4
  4020e5:	jmp    0x4020b0
  4020e7:	nop    WORD PTR [rax+rax*1+0x0]
  4020f0:	lea    rdx,[rip+0xcfc3]        # 0x40f0ba
  4020f7:	mov    r8d,0x1d7
  4020fd:	mov    ecx,eax
  4020ff:	call   0x405480
  402104:	jmp    0x401fb3
  402109:	nop    DWORD PTR [rax+0x0]
  402110:	lea    rdx,[rip+0xcfa3]        # 0x40f0ba
  402117:	mov    r8d,0x1cb
  40211d:	mov    ecx,eax
  40211f:	call   0x405480
  402124:	jmp    0x401f56
  402129:	nop    DWORD PTR [rax+0x0]
  402130:	lea    rdx,[rip+0xcf83]        # 0x40f0ba
  402137:	mov    r8d,0x1da
  40213d:	mov    ecx,eax
  40213f:	call   0x405480
  402144:	jmp    0x401fe1
  402149:	nop    DWORD PTR [rax+0x0]
  402150:	lea    rdx,[rip+0xcf63]        # 0x40f0ba
  402157:	mov    ecx,eax
  402159:	mov    r8d,0x1cf
  40215f:	xor    ebx,ebx
  402161:	mov    rsi,r12
  402164:	call   0x405480
  402169:	mov    ecx,DWORD PTR [rsp+0x24]
  40216d:	test   ecx,ecx
  40216f:	jg     0x4020d5
  402175:	jmp    0x401f91
  40217a:	nop    WORD PTR [rax+rax*1+0x0]
  402180:	push   r15
  402182:	push   r14
  402184:	push   r13
  402186:	push   r12
  402188:	push   rbp
  402189:	push   rdi
  40218a:	push   rsi
  40218b:	push   rbx
  40218c:	sub    rsp,0x168
  402193:	mov    DWORD PTR [rsp+0x1b8],edx
  40219a:	lea    rdx,[rsp+0x4c]
  40219f:	mov    r14d,ecx
  4021a2:	call   0x4064d0
  4021a7:	test   eax,eax
  4021a9:	jne    0x4023e9
  4021af:	mov    eax,DWORD PTR [rsp+0x4c]
  4021b3:	lea    ecx,[rax+0x1]
  4021b6:	movsxd rcx,ecx
  4021b9:	shl    rcx,0x2
  4021bd:	call   0x405450
  4021c2:	xor    r9d,r9d
  4021c5:	xor    edx,edx
  4021c7:	mov    r8,rax
  4021ca:	mov    ecx,r14d
  4021cd:	mov    QWORD PTR [rsp+0x38],rax
  4021d2:	call   0x406528
  4021d7:	test   eax,eax
  4021d9:	jne    0x402442
  4021df:	lea    rdx,[rsp+0x50]
  4021e4:	xor    r8d,r8d
  4021e7:	mov    ecx,r14d
  4021ea:	call   0x406498
  4021ef:	test   eax,eax
  4021f1:	jne    0x402429
  4021f7:	mov    eax,DWORD PTR [rsp+0x50]
  4021fb:	lea    ecx,[rax+0x1]
  4021fe:	movsxd rcx,ecx
  402201:	shl    rcx,0x2
  402205:	call   0x405450
  40220a:	xor    edx,edx
  40220c:	mov    r8,rax
  40220f:	mov    ecx,r14d
  402212:	mov    rdi,rax
  402215:	call   0x406498
  40221a:	test   eax,eax
  40221c:	jne    0x402402
  402222:	mov    edx,DWORD PTR [rsp+0x4c]
  402226:	test   edx,edx
  402228:	jle    0x402422
  40222e:	lea    rax,[rsp+0x54]
  402233:	mov    rsi,QWORD PTR [rsp+0x38]
  402238:	lea    r13,[rsp+0x60]
  40223d:	xor    ebx,ebx
  40223f:	mov    QWORD PTR [rsp+0x28],rax
  402244:	lea    rax,[rsp+0x58]
  402249:	mov    QWORD PTR [rsp+0x20],rax
  40224e:	xchg   ax,ax
  402250:	mov    edx,DWORD PTR [rsp+0x50]
  402254:	mov    r15d,DWORD PTR [rsi]
  402257:	test   edx,edx
  402259:	jle    0x402285
  40225b:	cmp    DWORD PTR [rdi],r15d
  40225e:	je     0x402311
  402264:	sub    edx,0x1
  402267:	lea    rax,[rdi+0x4]
  40226b:	lea    rdx,[rdi+rdx*4+0x4]
  402270:	jmp    0x402280
  402272:	add    rax,0x4
  402276:	cmp    DWORD PTR [rax-0x4],r15d
  40227a:	je     0x402311
  402280:	cmp    rax,rdx
  402283:	jne    0x402272
  402285:	mov    r9,QWORD PTR [rsp+0x20]
  40228a:	mov    r8,r13
  40228d:	mov    edx,r15d
  402290:	mov    ecx,r14d
  402293:	call   0x406538
  402298:	test   eax,eax
  40229a:	mov    ebp,eax
  40229c:	jne    0x4023b3
  4022a2:	xor    r12d,r12d
  4022a5:	mov    r9,QWORD PTR [rsp+0x28]
  4022aa:	mov    r8,QWORD PTR [rsp+0x58]
  4022af:	mov    rdx,r13
  4022b2:	mov    ecx,DWORD PTR [rsp+0x1b8]
  4022b9:	call   0x4065c8
  4022be:	xor    r9d,r9d
  4022c1:	test   eax,eax
  4022c3:	jne    0x402390
  4022c9:	mov    edx,DWORD PTR [rsp+0x54]
  4022cd:	mov    r8d,r12d
  4022d0:	mov    ecx,r15d
  4022d3:	add    ebx,0x1
  4022d6:	add    rsi,0x4
  4022da:	call   0x406370
  4022df:	cmp    DWORD PTR [rsp+0x4c],ebx
  4022e3:	jg     0x402250
  4022e9:	mov    rcx,QWORD PTR [rsp+0x38]
  4022ee:	call   0x40c9f0
  4022f3:	mov    rcx,rdi
  4022f6:	call   0x40c9f0
  4022fb:	mov    eax,ebp
  4022fd:	add    rsp,0x168
  402304:	pop    rbx
  402305:	pop    rsi
  402306:	pop    rdi
  402307:	pop    rbp
  402308:	pop    r12
  40230a:	pop    r13
  40230c:	pop    r14
  40230e:	pop    r15
  402310:	ret    
  402311:	mov    r9,QWORD PTR [rsp+0x20]
  402316:	mov    r8,r13
  402319:	mov    edx,r15d
  40231c:	mov    ecx,r14d
  40231f:	call   0x406538
  402324:	test   eax,eax
  402326:	mov    ebp,eax
  402328:	jne    0x4023d0
  40232e:	mov    eax,DWORD PTR [rip+0x10d44]        # 0x413078
  402334:	mov    r12d,0x1
  40233a:	test   eax,eax
  40233c:	jne    0x4022a5
  402342:	mov    r9,QWORD PTR [rsp+0x28]
  402347:	mov    ecx,DWORD PTR [rsp+0x1b8]
  40234e:	xor    r8d,r8d
  402351:	mov    rdx,r13
  402354:	call   0x4065c8
  402359:	test   eax,eax
  40235b:	mov    r9d,0x1
  402361:	je     0x4022c9
  402367:	lea    rdx,[rip+0xcd4c]        # 0x40f0ba
  40236e:	mov    r8d,0x2f0
  402374:	mov    ecx,eax
  402376:	mov    DWORD PTR [rsp+0x34],r9d
  40237b:	call   0x405480
  402380:	mov    r9d,DWORD PTR [rsp+0x34]
  402385:	jmp    0x4022c9
  40238a:	nop    WORD PTR [rax+rax*1+0x0]
  402390:	lea    rdx,[rip+0xcd23]        # 0x40f0ba
  402397:	mov    r8d,0x2f2
  40239d:	mov    ecx,eax
  40239f:	mov    DWORD PTR [rsp+0x34],r9d
  4023a4:	call   0x405480
  4023a9:	mov    r9d,DWORD PTR [rsp+0x34]
  4023ae:	jmp    0x4022c9
  4023b3:	lea    rdx,[rip+0xcd00]        # 0x40f0ba
  4023ba:	mov    r8d,0x2ed
  4023c0:	mov    ecx,eax
  4023c2:	call   0x405480
  4023c7:	jmp    0x4022a2
  4023cc:	nop    DWORD PTR [rax+0x0]
  4023d0:	lea    rdx,[rip+0xcce3]        # 0x40f0ba
  4023d7:	mov    r8d,0x2ed
  4023dd:	mov    ecx,eax
  4023df:	call   0x405480
  4023e4:	jmp    0x40232e
  4023e9:	lea    rdx,[rip+0xccca]        # 0x40f0ba
  4023f0:	mov    r8d,0x2bd
  4023f6:	mov    ecx,eax
  4023f8:	call   0x405480
  4023fd:	jmp    0x4021af
  402402:	lea    rdx,[rip+0xccb1]        # 0x40f0ba
  402409:	mov    r8d,0x2c9
  40240f:	mov    ecx,eax
  402411:	call   0x405480
  402416:	mov    edx,DWORD PTR [rsp+0x4c]
  40241a:	test   edx,edx
  40241c:	jg     0x40222e
  402422:	xor    ebp,ebp
  402424:	jmp    0x4022e9
  402429:	lea    rdx,[rip+0xcc8a]        # 0x40f0ba
  402430:	mov    r8d,0x2c7
  402436:	mov    ecx,eax
  402438:	call   0x405480
  40243d:	jmp    0x4021f7
  402442:	lea    rdx,[rip+0xcc71]        # 0x40f0ba
  402449:	mov    r8d,0x2c5
  40244f:	mov    ecx,eax
  402451:	call   0x405480
  402456:	jmp    0x4021df
  40245b:	nop    DWORD PTR [rax+rax*1+0x0]
  402460:	push   r13
  402462:	push   r12
  402464:	push   rbp
  402465:	push   rdi
  402466:	push   rsi
  402467:	push   rbx
  402468:	sub    rsp,0x148
  40246f:	mov    r12d,r8d
  402472:	lea    r8,[rsp+0x3c]
  402477:	mov    esi,ecx
  402479:	mov    edi,edx
  40247b:	mov    r13d,r9d
  40247e:	call   0x406448
  402483:	test   eax,eax
  402485:	jne    0x402520
  40248b:	mov    eax,DWORD PTR [rsp+0x3c]
  40248f:	xor    ebx,ebx
  402491:	lea    rbp,[rsp+0x40]
  402496:	test   eax,eax
  402498:	jg     0x4024c1
  40249a:	jmp    0x40250d
  40249c:	nop    DWORD PTR [rax+0x0]
  4024a0:	mov    DWORD PTR [rsp+0x20],r13d
  4024a5:	mov    r9d,r12d
  4024a8:	mov    r8,rbp
  4024ab:	mov    edx,edi
  4024ad:	mov    ecx,esi
  4024af:	call   0x4065e0
  4024b4:	test   eax,eax
  4024b6:	jne    0x4024f0
  4024b8:	add    ebx,0x1
  4024bb:	cmp    DWORD PTR [rsp+0x3c],ebx
  4024bf:	jle    0x40250d
  4024c1:	mov    r9,rbp
  4024c4:	mov    r8d,ebx
  4024c7:	mov    edx,edi
  4024c9:	mov    ecx,esi
  4024cb:	call   0x406550
  4024d0:	test   eax,eax
  4024d2:	je     0x4024a0
  4024d4:	lea    rdx,[rip+0xcbdf]        # 0x40f0ba
  4024db:	mov    r8d,0x30d
  4024e1:	mov    ecx,eax
  4024e3:	call   0x405480
  4024e8:	jmp    0x4024a0
  4024ea:	nop    WORD PTR [rax+rax*1+0x0]
  4024f0:	lea    rdx,[rip+0xcbc3]        # 0x40f0ba
  4024f7:	mov    r8d,0x30e
  4024fd:	mov    ecx,eax
  4024ff:	add    ebx,0x1
  402502:	call   0x405480
  402507:	cmp    DWORD PTR [rsp+0x3c],ebx
  40250b:	jg     0x4024c1
  40250d:	xor    eax,eax
  40250f:	add    rsp,0x148
  402516:	pop    rbx
  402517:	pop    rsi
  402518:	pop    rdi
  402519:	pop    rbp
  40251a:	pop    r12
  40251c:	pop    r13
  40251e:	ret    
  40251f:	nop
  402520:	lea    rdx,[rip+0xcb93]        # 0x40f0ba
  402527:	mov    r8d,0x309
  40252d:	mov    ecx,eax
  40252f:	call   0x405480
  402534:	jmp    0x40248b
  402539:	nop    DWORD PTR [rax+0x0]
  402540:	push   rbx
  402541:	sub    rsp,0x30
  402545:	lea    r8,[rsp+0x24]
  40254a:	mov    ebx,ecx
  40254c:	call   0x406438
  402551:	test   eax,eax
  402553:	jne    0x402590
  402555:	mov    edx,DWORD PTR [rsp+0x24]
  402559:	lea    r9,[rsp+0x28]
  40255e:	xor    r8d,r8d
  402561:	mov    ecx,ebx
  402563:	call   0x4064b8
  402568:	test   eax,eax
  40256a:	je     0x402580
  40256c:	lea    rdx,[rip+0xcb47]        # 0x40f0ba
  402573:	mov    r8d,0x66
  402579:	mov    ecx,eax
  40257b:	call   0x405480
  402580:	mov    rax,QWORD PTR [rsp+0x28]
  402585:	add    rsp,0x30
  402589:	pop    rbx
  40258a:	ret    
  40258b:	nop    DWORD PTR [rax+rax*1+0x0]
  402590:	lea    rdx,[rip+0xcb23]        # 0x40f0ba
  402597:	mov    r8d,0x65
  40259d:	mov    ecx,eax
  40259f:	call   0x405480
  4025a4:	jmp    0x402555
  4025a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025b0:	push   r15
  4025b2:	push   r14
  4025b4:	push   r13
  4025b6:	push   r12
  4025b8:	push   rbp
  4025b9:	push   rdi
  4025ba:	push   rsi
  4025bb:	push   rbx
  4025bc:	sub    rsp,0x2b8
  4025c3:	mov    ebp,r8d
  4025c6:	lea    r8,[rsp+0x84]
  4025ce:	mov    edi,ecx
  4025d0:	mov    r12d,edx
  4025d3:	call   0x406440
  4025d8:	test   eax,eax
  4025da:	jne    0x4028e0
  4025e0:	mov    eax,DWORD PTR [rsp+0x84]
  4025e7:	lea    r15,[rsp+0xb0]
  4025ef:	lea    ecx,[rax+0x1]
  4025f2:	movsxd rcx,ecx
  4025f5:	shl    rcx,0x2
  4025f9:	call   0x405450
  4025fe:	mov    rbx,rax
  402601:	lea    rax,[rsp+0x90]
  402609:	lea    r9,[rsp+0x88]
  402611:	mov    QWORD PTR [rsp+0x28],rbx
  402616:	mov    QWORD PTR [rsp+0x20],0x0
  40261f:	mov    r8,r15
  402622:	mov    QWORD PTR [rsp+0x30],rax
  402627:	mov    edx,r12d
  40262a:	mov    ecx,edi
  40262c:	call   0x406488
  402631:	test   eax,eax
  402633:	jne    0x4028c0
  402639:	mov    edx,DWORD PTR [rsp+0x88]
  402640:	cmp    edx,0xc
  402643:	mov    DWORD PTR [rsp+0x8c],edx
  40264a:	jg     0x402860
  402650:	mov    eax,DWORD PTR [rsp+0x84]
  402657:	lea    ecx,[rax+0x1]
  40265a:	movsxd rcx,ecx
  40265d:	shl    rcx,0x2
  402661:	call   0x405450
  402666:	mov    r9d,DWORD PTR [rsp+0x84]
  40266e:	mov    rsi,rax
  402671:	test   r9d,r9d
  402674:	jle    0x4026c0
  402676:	xor    r13d,r13d
  402679:	jmp    0x402695
  40267b:	nop    DWORD PTR [rax+rax*1+0x0]
  402680:	mov    r9d,DWORD PTR [rsp+0x84]
  402688:	lea    eax,[r13+0x1]
  40268c:	add    r13,0x1
  402690:	cmp    r9d,eax
  402693:	jle    0x4026c0
  402695:	mov    ecx,DWORD PTR [rbx+r13*4]
  402699:	call   0x4063b0
  40269e:	cmp    eax,0xffffffff
  4026a1:	mov    DWORD PTR [rsi+r13*4],eax
  4026a5:	jne    0x402680
  4026a7:	mov    edx,DWORD PTR [rbx+r13*4]
  4026ab:	lea    rcx,[rip+0xca16]        # 0x40f0c8
  4026b2:	call   0x4053d0
  4026b7:	jmp    0x402680
  4026b9:	nop    DWORD PTR [rax+0x0]
  4026c0:	lea    rax,[rsp+0x94]
  4026c8:	mov    r8d,DWORD PTR [rsp+0x8c]
  4026d0:	mov    QWORD PTR [rsp+0x20],rsi
  4026d5:	mov    rdx,r15
  4026d8:	mov    ecx,ebp
  4026da:	mov    QWORD PTR [rsp+0x28],rax
  4026df:	call   0x4065a8
  4026e4:	test   eax,eax
  4026e6:	jne    0x402840
  4026ec:	mov    r9d,DWORD PTR [rsp+0x94]
  4026f4:	mov    r8d,ebp
  4026f7:	mov    edx,r12d
  4026fa:	mov    ecx,edi
  4026fc:	call   0x402460
  402701:	test   eax,eax
  402703:	jne    0x402820
  402709:	lea    rdx,[rsp+0x98]
  402711:	mov    ecx,edi
  402713:	call   0x406508
  402718:	test   eax,eax
  40271a:	jne    0x402800
  402720:	lea    rdx,[rsp+0x9c]
  402728:	mov    ecx,ebp
  40272a:	call   0x406508
  40272f:	test   eax,eax
  402731:	jne    0x4027e5
  402737:	mov    eax,DWORD PTR [rsp+0x9c]
  40273e:	sub    eax,0x3
  402741:	cmp    eax,0x1
  402744:	jbe    0x402770
  402746:	mov    rcx,rbx
  402749:	call   0x40c9f0
  40274e:	mov    rcx,rsi
  402751:	call   0x40c9f0
  402756:	xor    eax,eax
  402758:	add    rsp,0x2b8
  40275f:	pop    rbx
  402760:	pop    rsi
  402761:	pop    rdi
  402762:	pop    rbp
  402763:	pop    r12
  402765:	pop    r13
  402767:	pop    r14
  402769:	pop    r15
  40276b:	ret    
  40276c:	nop    DWORD PTR [rax+0x0]
  402770:	mov    eax,DWORD PTR [rsp+0x98]
  402777:	sub    eax,0x3
  40277a:	cmp    eax,0x1
  40277d:	mov    eax,DWORD PTR [rsp+0x94]
  402784:	jbe    0x402a6c
  40278a:	mov    DWORD PTR [rsp+0x40],eax
  40278e:	call   0x405370
  402793:	test   eax,eax
  402795:	jne    0x402900
  40279b:	mov    eax,DWORD PTR [rip+0xb9b7]        # 0x40e158
  4027a1:	mov    edx,DWORD PTR [rsp+0x94]
  4027a8:	test   eax,eax
  4027aa:	jle    0x402746
  4027ac:	mov    r8d,DWORD PTR [rip+0x108c9]        # 0x41307c
  4027b3:	mov    DWORD PTR [rsp+0x20],eax
  4027b7:	mov    r9d,0x1
  4027bd:	mov    ecx,ebp
  4027bf:	call   0x406598
  4027c4:	test   eax,eax
  4027c6:	je     0x402746
  4027cc:	lea    rdx,[rip+0xc8e7]        # 0x40f0ba
  4027d3:	mov    r8d,0x28c
  4027d9:	mov    ecx,eax
  4027db:	call   0x405480
  4027e0:	jmp    0x402746
  4027e5:	lea    rdx,[rip+0xc8ce]        # 0x40f0ba
  4027ec:	mov    r8d,0x342
  4027f2:	mov    ecx,eax
  4027f4:	call   0x405480
  4027f9:	jmp    0x402737
  4027fe:	xchg   ax,ax
  402800:	lea    rdx,[rip+0xc8b3]        # 0x40f0ba
  402807:	mov    r8d,0x341
  40280d:	mov    ecx,eax
  40280f:	call   0x405480
  402814:	jmp    0x402720
  402819:	nop    DWORD PTR [rax+0x0]
  402820:	lea    rdx,[rip+0xc893]        # 0x40f0ba
  402827:	mov    r8d,0x33c
  40282d:	mov    ecx,eax
  40282f:	call   0x405480
  402834:	jmp    0x402709
  402839:	nop    DWORD PTR [rax+0x0]
  402840:	lea    rdx,[rip+0xc873]        # 0x40f0ba
  402847:	mov    r8d,0x33a
  40284d:	mov    ecx,eax
  40284f:	call   0x405480
  402854:	jmp    0x4026ec
  402859:	nop    DWORD PTR [rax+0x0]
  402860:	lea    rax,[rsp+0x1b0]
  402868:	xor    r9d,r9d
  40286b:	mov    ecx,edi
  40286d:	mov    r8,rax
  402870:	mov    QWORD PTR [rsp+0x40],rax
  402875:	call   0x4064b8
  40287a:	test   eax,eax
  40287c:	jne    0x402ce2
  402882:	mov    rdx,QWORD PTR [rsp+0x40]
  402887:	lea    r8,[rsp+0x8c]
  40288f:	mov    ecx,ebp
  402891:	call   0x4064b0
  402896:	test   eax,eax
  402898:	je     0x402650
  40289e:	lea    rdx,[rip+0xc815]        # 0x40f0ba
  4028a5:	mov    r8d,0x32c
  4028ab:	mov    ecx,eax
  4028ad:	call   0x405480
  4028b2:	jmp    0x402650
  4028b7:	nop    WORD PTR [rax+rax*1+0x0]
  4028c0:	lea    rdx,[rip+0xc7f3]        # 0x40f0ba
  4028c7:	mov    r8d,0x323
  4028cd:	mov    ecx,eax
  4028cf:	call   0x405480
  4028d4:	jmp    0x402639
  4028d9:	nop    DWORD PTR [rax+0x0]
  4028e0:	lea    rdx,[rip+0xc7d3]        # 0x40f0ba
  4028e7:	mov    r8d,0x321
  4028ed:	mov    ecx,eax
  4028ef:	call   0x405480
  4028f4:	jmp    0x4025e0
  4028f9:	nop    DWORD PTR [rax+0x0]
  402900:	mov    edx,DWORD PTR [rsp+0x40]
  402904:	lea    r8,[rsp+0xa0]
  40290c:	mov    ecx,ebp
  40290e:	call   0x406440
  402913:	test   eax,eax
  402915:	jne    0x402ed1
  40291b:	movsxd rax,DWORD PTR [rsp+0xa0]
  402923:	test   eax,eax
  402925:	jle    0x40279b
  40292b:	lea    rcx,[rax*4+0x0]
  402933:	call   0x405450
  402938:	mov    edx,DWORD PTR [rsp+0x40]
  40293c:	mov    r8,rax
  40293f:	mov    ecx,ebp
  402941:	mov    QWORD PTR [rsp+0x50],rax
  402946:	call   0x406460
  40294b:	test   eax,eax
  40294d:	jne    0x402e0c
  402953:	mov    edx,DWORD PTR [rsp+0x40]
  402957:	lea    r8,[rsp+0xa4]
  40295f:	mov    ecx,ebp
  402961:	call   0x406438
  402966:	test   eax,eax
  402968:	jne    0x402df3
  40296e:	mov    edx,DWORD PTR [rsp+0xa4]
  402975:	lea    r9,[rsp+0xa8]
  40297d:	xor    r8d,r8d
  402980:	mov    ecx,ebp
  402982:	call   0x4064b8
  402987:	test   eax,eax
  402989:	jne    0x402dda
  40298f:	mov    edx,DWORD PTR [rsp+0xa0]
  402996:	mov    rax,QWORD PTR [rsp+0xa8]
  40299e:	test   edx,edx
  4029a0:	mov    rdi,rax
  4029a3:	jle    0x402d1c
  4029a9:	mov    rax,QWORD PTR [rsp+0x50]
  4029ae:	xor    edx,edx
  4029b0:	mov    QWORD PTR [rsp+0x60],rsi
  4029b5:	xor    r14d,r14d
  4029b8:	xor    r12d,r12d
  4029bb:	mov    QWORD PTR [rsp+0x58],rbx
  4029c0:	mov    esi,edx
  4029c2:	mov    QWORD PTR [rsp+0x68],rax
  4029c7:	mov    r13,rax
  4029ca:	lea    rax,[rsp+0x1b0]
  4029d2:	mov    QWORD PTR [rsp+0x48],rax
  4029d7:	jmp    0x402a10
  4029d9:	nop    DWORD PTR [rax+0x0]
  4029e0:	test   r15,r15
  4029e3:	je     0x402ccc
  4029e9:	mov    esi,0x1
  4029ee:	imul   rdi,QWORD PTR [rsp+0x1b0]
  4029f7:	movsxd rax,DWORD PTR [rsp+0xa0]
  4029ff:	add    r12d,0x1
  402a03:	add    r13,0x4
  402a07:	cmp    r12d,eax
  402a0a:	jge    0x402d2b
  402a10:	mov    ebx,DWORD PTR [r13+0x0]
  402a14:	mov    ecx,ebx
  402a16:	call   0x4063c0
  402a1b:	mov    ecx,ebx
  402a1d:	mov    r15d,eax
  402a20:	call   0x4063d0
  402a25:	test   eax,eax
  402a27:	mov    eax,0x1
  402a2c:	cmovne r14d,eax
  402a30:	cmp    r15d,0xffffffff
  402a34:	je     0x4029f7
  402a36:	mov    ecx,r15d
  402a39:	call   0x405310
  402a3e:	mov    r8,QWORD PTR [rsp+0x48]
  402a43:	mov    edx,ebx
  402a45:	mov    ecx,ebp
  402a47:	mov    r15,rax
  402a4a:	call   0x406520
  402a4f:	test   eax,eax
  402a51:	je     0x4029e0
  402a53:	lea    rdx,[rip+0xc660]        # 0x40f0ba
  402a5a:	mov    r8d,0x263
  402a60:	mov    ecx,eax
  402a62:	call   0x405480
  402a67:	jmp    0x4029e0
  402a6c:	mov    DWORD PTR [rsp+0x48],eax
  402a70:	lea    rax,[rsp+0xa8]
  402a78:	mov    edx,r12d
  402a7b:	mov    ecx,edi
  402a7d:	mov    r8,rax
  402a80:	mov    QWORD PTR [rsp+0x68],rax
  402a85:	call   0x406440
  402a8a:	test   eax,eax
  402a8c:	jne    0x402f03
  402a92:	movsxd rax,DWORD PTR [rsp+0xa8]
  402a9a:	lea    rdx,[rsp+0x1b0]
  402aa2:	mov    r14,rdx
  402aa5:	mov    QWORD PTR [rsp+0x40],rdx
  402aaa:	test   eax,eax
  402aac:	jle    0x402c0b
  402ab2:	lea    rcx,[rax*8+0x0]
  402aba:	mov    DWORD PTR [rsp+0x1b0],0x0
  402ac5:	call   0x405450
  402aca:	movsxd rcx,DWORD PTR [rsp+0xa8]
  402ad2:	mov    r15,rax
  402ad5:	mov    QWORD PTR [rsp+0x60],rax
  402ada:	shl    rcx,0x2
  402ade:	call   0x405450
  402ae3:	mov    edx,DWORD PTR [rsp+0x48]
  402ae7:	mov    ecx,ebp
  402ae9:	mov    QWORD PTR [rsp+0x58],rax
  402aee:	call   0x402540
  402af3:	mov    r9,r15
  402af6:	mov    r8,r14
  402af9:	mov    edx,r12d
  402afc:	mov    ecx,edi
  402afe:	mov    QWORD PTR [rsp+0x50],rax
  402b03:	call   0x406480
  402b08:	test   eax,eax
  402b0a:	jne    0x402e3e
  402b10:	mov    r8,QWORD PTR [rsp+0x58]
  402b15:	mov    edx,r12d
  402b18:	mov    ecx,edi
  402b1a:	call   0x406460
  402b1f:	test   eax,eax
  402b21:	jne    0x402e25
  402b27:	mov    r8d,DWORD PTR [rsp+0xa8]
  402b2f:	test   r8d,r8d
  402b32:	jle    0x402bbd
  402b38:	xor    r15d,r15d
  402b3b:	mov    QWORD PTR [rsp+0x70],rbx
  402b40:	mov    DWORD PTR [rsp+0x300],edi
  402b47:	xor    r13d,r13d
  402b4a:	mov    rdi,r15
  402b4d:	mov    QWORD PTR [rsp+0x78],rsi
  402b52:	mov    rbx,QWORD PTR [rsp+0x50]
  402b57:	mov    r14,QWORD PTR [rsp+0x58]
  402b5c:	mov    r15,QWORD PTR [rsp+0x60]
  402b61:	mov    DWORD PTR [rsp+0x310],ebp
  402b68:	jmp    0x402b9e
  402b6a:	nop    WORD PTR [rax+rax*1+0x0]
  402b70:	mov    rax,QWORD PTR [r15+rdi*8]
  402b74:	mov    ecx,esi
  402b76:	imul   rbx,rax
  402b7a:	call   0x4063d0
  402b7f:	test   eax,eax
  402b81:	mov    eax,0x1
  402b86:	cmovne r13d,eax
  402b8a:	lea    eax,[rdi+0x1]
  402b8d:	add    rdi,0x1
  402b91:	cmp    eax,DWORD PTR [rsp+0xa8]
  402b98:	jge    0x402e57
  402b9e:	mov    ebp,DWORD PTR [r14+rdi*4]
  402ba2:	mov    ecx,ebp
  402ba4:	call   0x4063b0
  402ba9:	mov    ecx,ebp
  402bab:	mov    esi,eax
  402bad:	call   0x405310
  402bb2:	test   rax,rax
  402bb5:	je     0x402b70
  402bb7:	mov    QWORD PTR [r15+rdi*8],rax
  402bbb:	jmp    0x402b74
  402bbd:	mov    r13d,0x1
  402bc3:	cmp    QWORD PTR [rsp+0x50],0x1fff
  402bcc:	ja     0x402e81
  402bd2:	test   r13b,r13b
  402bd5:	je     0x402e81
  402bdb:	mov    edx,DWORD PTR [rsp+0x48]
  402bdf:	xor    r9d,r9d
  402be2:	mov    r8d,0x1
  402be8:	mov    ecx,ebp
  402bea:	call   0x4065a0
  402bef:	test   eax,eax
  402bf1:	jne    0x402fde
  402bf7:	mov    rcx,QWORD PTR [rsp+0x58]
  402bfc:	call   0x40c9f0
  402c01:	mov    rcx,QWORD PTR [rsp+0x60]
  402c06:	call   0x40c9f0
  402c0b:	mov    ecx,DWORD PTR [rip+0xb547]        # 0x40e158
  402c11:	mov    DWORD PTR [rsp+0xa4],0x0
  402c1c:	mov    DWORD PTR [rsp+0xa8],0x0
  402c27:	mov    DWORD PTR [rsp+0x1b0],0x0
  402c32:	test   ecx,ecx
  402c34:	jne    0x402f1c
  402c3a:	mov    r8,QWORD PTR [rsp+0x40]
  402c3f:	mov    edx,r12d
  402c42:	mov    ecx,edi
  402c44:	mov    DWORD PTR [rsp+0x1b0],0x0
  402c4f:	call   0x406468
  402c54:	test   eax,eax
  402c56:	jne    0x402fc5
  402c5c:	mov    r8d,DWORD PTR [rsp+0x1b0]
  402c64:	test   r8d,r8d
  402c67:	jne    0x402f99
  402c6d:	mov    r8,QWORD PTR [rsp+0x40]
  402c72:	mov    edx,r12d
  402c75:	mov    ecx,edi
  402c77:	mov    DWORD PTR [rsp+0x1b0],0x0
  402c82:	call   0x406470
  402c87:	test   eax,eax
  402c89:	jne    0x402eea
  402c8f:	mov    r8d,DWORD PTR [rsp+0x1b0]
  402c97:	test   r8d,r8d
  402c9a:	je     0x402746
  402ca0:	mov    edx,DWORD PTR [rsp+0x48]
  402ca4:	mov    ecx,ebp
  402ca6:	call   0x406590
  402cab:	test   eax,eax
  402cad:	je     0x402746
  402cb3:	lea    rdx,[rip+0xc400]        # 0x40f0ba
  402cba:	mov    r8d,0x234
  402cc0:	mov    ecx,eax
  402cc2:	call   0x405480
  402cc7:	jmp    0x402746
  402ccc:	mov    ecx,ebx
  402cce:	call   0x4063d0
  402cd3:	test   eax,eax
  402cd5:	mov    eax,0x1
  402cda:	cmovne esi,eax
  402cdd:	jmp    0x4029ee
  402ce2:	lea    rdx,[rip+0xc3d1]        # 0x40f0ba
  402ce9:	mov    r8d,0x32b
  402cef:	mov    ecx,eax
  402cf1:	call   0x405480
  402cf6:	jmp    0x402882
  402cfb:	mov    edx,DWORD PTR [rsp+0x40]
  402cff:	xor    r8d,r8d
  402d02:	mov    r9,r13
  402d05:	mov    ecx,ebp
  402d07:	call   0x4065a0
  402d0c:	test   eax,eax
  402d0e:	jne    0x403039
  402d14:	mov    rcx,r13
  402d17:	call   0x40c9f0
  402d1c:	mov    rcx,QWORD PTR [rsp+0x50]
  402d21:	call   0x40c9f0
  402d26:	jmp    0x40279b
  402d2b:	xor    r14d,0x1
  402d2f:	cmp    rdi,0x1fff
  402d36:	mov    ecx,esi
  402d38:	setbe  dl
  402d3b:	mov    rbx,QWORD PTR [rsp+0x58]
  402d40:	mov    rsi,QWORD PTR [rsp+0x60]
  402d45:	and    r14d,edx
  402d48:	test   ecx,ecx
  402d4a:	setne  dl
  402d4d:	cmp    r14b,dl
  402d50:	jae    0x402d1c
  402d52:	lea    rcx,[rax*8+0x0]
  402d5a:	xor    edi,edi
  402d5c:	call   0x405450
  402d61:	mov    r13,rax
  402d64:	mov    r12,rax
  402d67:	mov    eax,DWORD PTR [rsp+0xa0]
  402d6e:	mov    r14,QWORD PTR [rsp+0x68]
  402d73:	test   eax,eax
  402d75:	jg     0x402d9c
  402d77:	jmp    0x402cfb
  402d79:	nop    DWORD PTR [rax+0x0]
  402d80:	mov    QWORD PTR [r12],rax
  402d84:	add    edi,0x1
  402d87:	add    r14,0x4
  402d8b:	add    r12,0x8
  402d8f:	cmp    edi,DWORD PTR [rsp+0xa0]
  402d96:	jge    0x402cfb
  402d9c:	mov    r15d,DWORD PTR [r14]
  402d9f:	mov    ecx,r15d
  402da2:	call   0x4063c0
  402da7:	mov    ecx,eax
  402da9:	call   0x405310
  402dae:	test   rax,rax
  402db1:	jne    0x402d80
  402db3:	mov    r8,r12
  402db6:	mov    edx,r15d
  402db9:	mov    ecx,ebp
  402dbb:	call   0x406520
  402dc0:	test   eax,eax
  402dc2:	je     0x402d84
  402dc4:	lea    rdx,[rip+0xc2ef]        # 0x40f0ba
  402dcb:	mov    r8d,0x27a
  402dd1:	mov    ecx,eax
  402dd3:	call   0x405480
  402dd8:	jmp    0x402d84
  402dda:	lea    rdx,[rip+0xc2d9]        # 0x40f0ba
  402de1:	mov    r8d,0x254
  402de7:	mov    ecx,eax
  402de9:	call   0x405480
  402dee:	jmp    0x40298f
  402df3:	lea    rdx,[rip+0xc2c0]        # 0x40f0ba
  402dfa:	mov    r8d,0x252
  402e00:	mov    ecx,eax
  402e02:	call   0x405480
  402e07:	jmp    0x40296e
  402e0c:	lea    rdx,[rip+0xc2a7]        # 0x40f0ba
  402e13:	mov    r8d,0x251
  402e19:	mov    ecx,eax
  402e1b:	call   0x405480
  402e20:	jmp    0x402953
  402e25:	lea    rdx,[rip+0xc28e]        # 0x40f0ba
  402e2c:	mov    r8d,0x1fc
  402e32:	mov    ecx,eax
  402e34:	call   0x405480
  402e39:	jmp    0x402b27
  402e3e:	lea    rdx,[rip+0xc275]        # 0x40f0ba
  402e45:	mov    r8d,0x1fb
  402e4b:	mov    ecx,eax
  402e4d:	call   0x405480
  402e52:	jmp    0x402b10
  402e57:	xor    r13d,0x1
  402e5b:	mov    QWORD PTR [rsp+0x50],rbx
  402e60:	mov    rsi,QWORD PTR [rsp+0x78]
  402e65:	mov    rbx,QWORD PTR [rsp+0x70]
  402e6a:	mov    edi,DWORD PTR [rsp+0x300]
  402e71:	and    r13d,0x1
  402e75:	mov    ebp,DWORD PTR [rsp+0x310]
  402e7c:	jmp    0x402bc3
  402e81:	cmp    DWORD PTR [rsp+0x1b0],0x1
  402e89:	je     0x402bdb
  402e8f:	call   0x405380
  402e94:	cmp    eax,0x1
  402e97:	je     0x402bdb
  402e9d:	mov    r9,QWORD PTR [rsp+0x60]
  402ea2:	mov    edx,DWORD PTR [rsp+0x48]
  402ea6:	xor    r8d,r8d
  402ea9:	mov    ecx,ebp
  402eab:	call   0x4065a0
  402eb0:	test   eax,eax
  402eb2:	je     0x402bf7
  402eb8:	lea    rdx,[rip+0xc1fb]        # 0x40f0ba
  402ebf:	mov    r8d,0x211
  402ec5:	mov    ecx,eax
  402ec7:	call   0x405480
  402ecc:	jmp    0x402bf7
  402ed1:	lea    rdx,[rip+0xc1e2]        # 0x40f0ba
  402ed8:	mov    r8d,0x247
  402ede:	mov    ecx,eax
  402ee0:	call   0x405480
  402ee5:	jmp    0x40291b
  402eea:	lea    rdx,[rip+0xc1c9]        # 0x40f0ba
  402ef1:	mov    r8d,0x232
  402ef7:	mov    ecx,eax
  402ef9:	call   0x405480
  402efe:	jmp    0x402c8f
  402f03:	lea    rdx,[rip+0xc1b0]        # 0x40f0ba
  402f0a:	mov    r8d,0x1f2
  402f10:	mov    ecx,eax
  402f12:	call   0x405480
  402f17:	jmp    0x402a92
  402f1c:	mov    rax,QWORD PTR [rsp+0x40]
  402f21:	mov    r9,QWORD PTR [rsp+0x68]
  402f26:	lea    r8,[rsp+0xa4]
  402f2e:	mov    edx,r12d
  402f31:	mov    ecx,edi
  402f33:	mov    QWORD PTR [rsp+0x20],rax
  402f38:	call   0x406478
  402f3d:	test   eax,eax
  402f3f:	jne    0x403013
  402f45:	mov    eax,DWORD PTR [rip+0xb20d]        # 0x40e158
  402f4b:	cmp    eax,0xffffffff
  402f4e:	je     0x402ff7
  402f54:	test   eax,eax
  402f56:	jle    0x40302c
  402f5c:	mov    r8d,DWORD PTR [rip+0x10119]        # 0x41307c
  402f63:	mov    r9d,0x1
  402f69:	mov    edx,DWORD PTR [rsp+0x48]
  402f6d:	mov    DWORD PTR [rsp+0x20],eax
  402f71:	mov    ecx,ebp
  402f73:	call   0x406598
  402f78:	test   eax,eax
  402f7a:	je     0x402c3a
  402f80:	lea    rdx,[rip+0xc133]        # 0x40f0ba
  402f87:	mov    r8d,0x226
  402f8d:	mov    ecx,eax
  402f8f:	call   0x405480
  402f94:	jmp    0x402c3a
  402f99:	mov    edx,DWORD PTR [rsp+0x48]
  402f9d:	mov    ecx,ebp
  402f9f:	call   0x406588
  402fa4:	test   eax,eax
  402fa6:	je     0x402c6d
  402fac:	lea    rdx,[rip+0xc107]        # 0x40f0ba
  402fb3:	mov    r8d,0x22d
  402fb9:	mov    ecx,eax
  402fbb:	call   0x405480
  402fc0:	jmp    0x402c6d
  402fc5:	lea    rdx,[rip+0xc0ee]        # 0x40f0ba
  402fcc:	mov    r8d,0x22b
  402fd2:	mov    ecx,eax
  402fd4:	call   0x405480
  402fd9:	jmp    0x402c5c
  402fde:	lea    rdx,[rip+0xc0d5]        # 0x40f0ba
  402fe5:	mov    r8d,0x20f
  402feb:	mov    ecx,eax
  402fed:	call   0x405480
  402ff2:	jmp    0x402bf7
  402ff7:	mov    r8d,DWORD PTR [rsp+0xa4]
  402fff:	mov    r9d,DWORD PTR [rsp+0xa8]
  403007:	mov    eax,DWORD PTR [rsp+0x1b0]
  40300e:	jmp    0x402f69
  403013:	lea    rdx,[rip+0xc0a0]        # 0x40f0ba
  40301a:	mov    r8d,0x21c
  403020:	mov    ecx,eax
  403022:	call   0x405480
  403027:	jmp    0x402f45
  40302c:	xor    eax,eax
  40302e:	xor    r9d,r9d
  403031:	xor    r8d,r8d
  403034:	jmp    0x402f69
  403039:	lea    rdx,[rip+0xc07a]        # 0x40f0ba
  403040:	mov    r8d,0x27d
  403046:	mov    ecx,eax
  403048:	call   0x405480
  40304d:	jmp    0x402d14
  403052:	nop    DWORD PTR [rax+0x0]
  403056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403060:	push   r13
  403062:	push   r12
  403064:	push   rbp
  403065:	push   rdi
  403066:	push   rsi
  403067:	push   rbx
  403068:	sub    rsp,0x38
  40306c:	lea    r8,[rsp+0x24]
  403071:	mov    edi,ecx
  403073:	call   0x401e70
  403078:	test   eax,eax
  40307a:	jne    0x403280
  403080:	mov    edx,DWORD PTR [rsp+0x24]
  403084:	mov    ecx,edi
  403086:	call   0x402180
  40308b:	test   eax,eax
  40308d:	jne    0x4032a7
  403093:	mov    r8d,DWORD PTR [rsp+0x24]
  403098:	mov    r9d,0xffffffff
  40309e:	mov    ecx,edi
  4030a0:	mov    edx,r9d
  4030a3:	call   0x402460
  4030a8:	test   eax,eax
  4030aa:	jne    0x403300
  4030b0:	mov    r12d,DWORD PTR [rsp+0x24]
  4030b5:	xor    esi,esi
  4030b7:	xor    ebx,ebx
  4030b9:	call   0x405be0
  4030be:	mov    r10d,DWORD PTR [rip+0xff83]        # 0x413048
  4030c5:	mov    r13,rax
  4030c8:	lea    rbp,[rsp+0x2c]
  4030cd:	test   r10d,r10d
  4030d0:	jg     0x4030ef
  4030d2:	jmp    0x403319
  4030d7:	nop    WORD PTR [rax+rax*1+0x0]
  4030e0:	add    ebx,0x1
  4030e3:	add    rsi,0x8
  4030e7:	cmp    ebx,DWORD PTR [rip+0xff5b]        # 0x413048
  4030ed:	jge    0x403123
  4030ef:	mov    rax,QWORD PTR [rip+0xff4a]        # 0x413040
  4030f6:	mov    r8,rbp
  4030f9:	mov    ecx,edi
  4030fb:	mov    rdx,QWORD PTR [rax+rsi*1]
  4030ff:	call   0x405da0
  403104:	test   eax,eax
  403106:	jne    0x4030e0
  403108:	mov    edx,DWORD PTR [rsp+0x2c]
  40310c:	mov    rcx,r13
  40310f:	add    ebx,0x1
  403112:	add    rsi,0x8
  403116:	call   0x405c10
  40311b:	cmp    ebx,DWORD PTR [rip+0xff27]        # 0x413048
  403121:	jl     0x4030ef
  403123:	lea    rdx,[rsp+0x28]
  403128:	mov    ecx,edi
  40312a:	call   0x4064c8
  40312f:	test   eax,eax
  403131:	jne    0x4032e0
  403137:	mov    r9d,DWORD PTR [rsp+0x28]
  40313c:	xor    edx,edx
  40313e:	mov    DWORD PTR [rsp+0x2c],0x0
  403146:	test   r9d,r9d
  403149:	jg     0x403161
  40314b:	jmp    0x4031b0
  40314d:	nop    DWORD PTR [rax]
  403150:	mov    eax,DWORD PTR [rsp+0x2c]
  403154:	lea    edx,[rax+0x1]
  403157:	cmp    edx,DWORD PTR [rsp+0x28]
  40315b:	mov    DWORD PTR [rsp+0x2c],edx
  40315f:	jge    0x4031b0
  403161:	mov    r8d,DWORD PTR [rip+0xfed4]        # 0x41303c
  403168:	test   r8d,r8d
  40316b:	jne    0x403183
  40316d:	mov    ecx,DWORD PTR [rip+0xfed5]        # 0x413048
  403173:	test   ecx,ecx
  403175:	jle    0x403183
  403177:	mov    rcx,r13
  40317a:	call   0x405c40
  40317f:	test   eax,eax
  403181:	je     0x403150
  403183:	mov    edx,DWORD PTR [rsp+0x2c]
  403187:	mov    r8d,r12d
  40318a:	mov    ecx,edi
  40318c:	call   0x4025b0
  403191:	test   eax,eax
  403193:	je     0x403150
  403195:	lea    rdx,[rip+0xbf1e]        # 0x40f0ba
  40319c:	mov    r8d,0x371
  4031a2:	mov    ecx,eax
  4031a4:	call   0x405480
  4031a9:	jmp    0x403150
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4031b0:	mov    rcx,r13
  4031b3:	call   0x405c70
  4031b8:	xor    r8d,r8d
  4031bb:	mov    rdx,rbp
  4031be:	mov    ecx,edi
  4031c0:	call   0x4064d8
  4031c5:	mov    r12d,eax
  4031c8:	mov    eax,DWORD PTR [rsp+0x2c]
  4031cc:	lea    ecx,[rax+0x1]
  4031cf:	movsxd rcx,ecx
  4031d2:	shl    rcx,0x2
  4031d6:	call   0x405450
  4031db:	mov    rdx,rbp
  4031de:	mov    r8,rax
  4031e1:	mov    ecx,edi
  4031e3:	mov    r13,rax
  4031e6:	call   0x4064d8
  4031eb:	test   eax,eax
  4031ed:	jne    0x4032c0
  4031f3:	mov    edx,DWORD PTR [rsp+0x2c]
  4031f7:	xor    esi,esi
  4031f9:	mov    rbx,r13
  4031fc:	test   edx,edx
  4031fe:	jg     0x40320f
  403200:	jmp    0x403261
  403202:	add    esi,0x1
  403205:	add    rbx,0x4
  403209:	cmp    DWORD PTR [rsp+0x2c],esi
  40320d:	jle    0x403261
  40320f:	mov    eax,DWORD PTR [rip+0xfe37]        # 0x41304c
  403215:	test   eax,eax
  403217:	jne    0x403231
  403219:	mov    r8,QWORD PTR [rip+0xfe30]        # 0x413050
  403220:	mov    edx,DWORD PTR [rip+0xfe3a]        # 0x413060
  403226:	mov    ecx,DWORD PTR [rbx]
  403228:	call   0x405ca0
  40322d:	test   eax,eax
  40322f:	je     0x403202
  403231:	mov    edx,DWORD PTR [rsp+0x24]
  403235:	mov    ecx,DWORD PTR [rbx]
  403237:	call   0x403060
  40323c:	test   eax,eax
  40323e:	je     0x403202
  403240:	lea    rdx,[rip+0xbe73]        # 0x40f0ba
  403247:	mov    r8d,0x393
  40324d:	mov    ecx,eax
  40324f:	add    esi,0x1
  403252:	add    rbx,0x4
  403256:	call   0x405480
  40325b:	cmp    DWORD PTR [rsp+0x2c],esi
  40325f:	jg     0x40320f
  403261:	mov    rcx,r13
  403264:	call   0x40c9f0
  403269:	mov    eax,r12d
  40326c:	add    rsp,0x38
  403270:	pop    rbx
  403271:	pop    rsi
  403272:	pop    rdi
  403273:	pop    rbp
  403274:	pop    r12
  403276:	pop    r13
  403278:	ret    
  403279:	nop    DWORD PTR [rax+0x0]
  403280:	lea    rdx,[rip+0xbe33]        # 0x40f0ba
  403287:	mov    ecx,eax
  403289:	mov    r8d,0x382
  40328f:	call   0x405480
  403294:	mov    edx,DWORD PTR [rsp+0x24]
  403298:	mov    ecx,edi
  40329a:	call   0x402180
  40329f:	test   eax,eax
  4032a1:	je     0x403093
  4032a7:	lea    rdx,[rip+0xbe0c]        # 0x40f0ba
  4032ae:	mov    r8d,0x384
  4032b4:	mov    ecx,eax
  4032b6:	call   0x405480
  4032bb:	jmp    0x403093
  4032c0:	lea    rdx,[rip+0xbdf3]        # 0x40f0ba
  4032c7:	mov    r8d,0x38f
  4032cd:	mov    ecx,eax
  4032cf:	call   0x405480
  4032d4:	jmp    0x4031f3
  4032d9:	nop    DWORD PTR [rax+0x0]
  4032e0:	lea    rdx,[rip+0xbdd3]        # 0x40f0ba
  4032e7:	mov    r8d,0x36d
  4032ed:	mov    ecx,eax
  4032ef:	call   0x405480
  4032f4:	jmp    0x403137
  4032f9:	nop    DWORD PTR [rax+0x0]
  403300:	lea    rdx,[rip+0xbdb3]        # 0x40f0ba
  403307:	mov    r8d,0x385
  40330d:	mov    ecx,eax
  40330f:	call   0x405480
  403314:	jmp    0x4030b0
  403319:	lea    rbp,[rsp+0x2c]
  40331e:	jmp    0x403123
  403323:	nop    DWORD PTR [rax]
  403326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403330:	push   r13
  403332:	push   r12
  403334:	push   rbp
  403335:	push   rdi
  403336:	push   rsi
  403337:	push   rbx
  403338:	sub    rsp,0x38
  40333c:	mov    r12,QWORD PTR [rsp+0x90]
  403344:	mov    rdi,rdx
  403347:	lea    rdx,[rsp+0x2c]
  40334c:	mov    ebp,ecx
  40334e:	mov    r13,r8
  403351:	mov    rsi,r9
  403354:	call   0x4064c8
  403359:	test   eax,eax
  40335b:	jne    0x4033f0
  403361:	movsxd rcx,DWORD PTR [rsp+0x2c]
  403366:	mov    QWORD PTR [rdi],0x0
  40336d:	xor    ebx,ebx
  40336f:	shl    rcx,0x2
  403373:	call   0x405450
  403378:	movsxd rcx,DWORD PTR [rsp+0x2c]
  40337d:	mov    QWORD PTR [r13+0x0],rax
  403381:	mov    QWORD PTR [rsi],0x0
  403388:	shl    rcx,0x2
  40338c:	call   0x405450
  403391:	mov    QWORD PTR [r12],rax
  403395:	mov    eax,DWORD PTR [rsp+0x2c]
  403399:	test   eax,eax
  40339b:	jg     0x4033ba
  40339d:	jmp    0x4033e1
  40339f:	nop
  4033a0:	mov    rax,QWORD PTR [rsi]
  4033a3:	mov    rdx,QWORD PTR [r12]
  4033a7:	mov    DWORD PTR [rdx+rax*4],ebx
  4033aa:	add    rax,0x1
  4033ae:	add    ebx,0x1
  4033b1:	cmp    DWORD PTR [rsp+0x2c],ebx
  4033b5:	mov    QWORD PTR [rsi],rax
  4033b8:	jle    0x4033e1
  4033ba:	mov    edx,ebx
  4033bc:	mov    ecx,ebp
  4033be:	call   0x405a70
  4033c3:	test   eax,eax
  4033c5:	jne    0x4033a0
  4033c7:	mov    rax,QWORD PTR [rdi]
  4033ca:	mov    rdx,QWORD PTR [r13+0x0]
  4033ce:	mov    DWORD PTR [rdx+rax*4],ebx
  4033d1:	add    rax,0x1
  4033d5:	add    ebx,0x1
  4033d8:	cmp    DWORD PTR [rsp+0x2c],ebx
  4033dc:	mov    QWORD PTR [rdi],rax
  4033df:	jg     0x4033ba
  4033e1:	xor    eax,eax
  4033e3:	add    rsp,0x38
  4033e7:	pop    rbx
  4033e8:	pop    rsi
  4033e9:	pop    rdi
  4033ea:	pop    rbp
  4033eb:	pop    r12
  4033ed:	pop    r13
  4033ef:	ret    
  4033f0:	lea    rdx,[rip+0xbcc3]        # 0x40f0ba
  4033f7:	mov    r8d,0x4ad
  4033fd:	mov    ecx,eax
  4033ff:	call   0x405480
  403404:	jmp    0x403361
  403409:	nop    DWORD PTR [rax+0x0]
  403410:	push   r12
  403412:	push   rbp
  403413:	push   rdi
  403414:	push   rsi
  403415:	push   rbx
  403416:	sub    rsp,0x30
  40341a:	lea    rdx,[rsp+0x24]
  40341f:	mov    esi,ecx
  403421:	mov    DWORD PTR [rsp+0x24],0x0
  403429:	call   0x4064a0
  40342e:	test   eax,eax
  403430:	jne    0x403506
  403436:	cmp    DWORD PTR [rsp+0x24],0xffffffff
  40343b:	je     0x4034e3
  403441:	lea    rdx,[rsp+0x28]
  403446:	mov    ecx,esi
  403448:	call   0x4064c8
  40344d:	test   eax,eax
  40344f:	jne    0x40351f
  403455:	cmp    DWORD PTR [rsp+0x28],0x0
  40345a:	jle    0x4034e3
  403460:	xor    ebx,ebx
  403462:	lea    rdi,[rsp+0x2c]
  403467:	jmp    0x4034bd
  403469:	nop    DWORD PTR [rax+0x0]
  403470:	mov    eax,DWORD PTR [rsp+0x2c]
  403474:	test   eax,eax
  403476:	jle    0x4034b4
  403478:	add    eax,0x1
  40347b:	cdqe   
  40347d:	lea    rcx,[rax*4+0x0]
  403485:	call   0x405450
  40348a:	mov    edx,ebx
  40348c:	mov    r8,rax
  40348f:	mov    ecx,esi
  403491:	mov    rbp,rax
  403494:	call   0x406460
  403499:	test   eax,eax
  40349b:	jne    0x4034f0
  40349d:	mov    rcx,rbp
  4034a0:	mov    r12d,DWORD PTR [rbp+0x0]
  4034a4:	call   0x40c9f0
  4034a9:	cmp    r12d,DWORD PTR [rsp+0x24]
  4034ae:	je     0x403538
  4034b4:	add    ebx,0x1
  4034b7:	cmp    ebx,DWORD PTR [rsp+0x28]
  4034bb:	jge    0x4034e3
  4034bd:	mov    r8,rdi
  4034c0:	mov    edx,ebx
  4034c2:	mov    ecx,esi
  4034c4:	call   0x406440
  4034c9:	test   eax,eax
  4034cb:	je     0x403470
  4034cd:	lea    rdx,[rip+0xbbe6]        # 0x40f0ba
  4034d4:	mov    r8d,0x48f
  4034da:	mov    ecx,eax
  4034dc:	call   0x405480
  4034e1:	jmp    0x403470
  4034e3:	xor    eax,eax
  4034e5:	add    rsp,0x30
  4034e9:	pop    rbx
  4034ea:	pop    rsi
  4034eb:	pop    rdi
  4034ec:	pop    rbp
  4034ed:	pop    r12
  4034ef:	ret    
  4034f0:	lea    rdx,[rip+0xbbc3]        # 0x40f0ba
  4034f7:	mov    r8d,0x493
  4034fd:	mov    ecx,eax
  4034ff:	call   0x405480
  403504:	jmp    0x40349d
  403506:	lea    rdx,[rip+0xbbad]        # 0x40f0ba
  40350d:	mov    r8d,0x487
  403513:	mov    ecx,eax
  403515:	call   0x405480
  40351a:	jmp    0x403436
  40351f:	lea    rdx,[rip+0xbb94]        # 0x40f0ba
  403526:	mov    r8d,0x48b
  40352c:	mov    ecx,eax
  40352e:	call   0x405480
  403533:	jmp    0x403455
  403538:	mov    eax,0x1
  40353d:	jmp    0x4034e5
  40353f:	nop
  403540:	push   r15
  403542:	push   r14
  403544:	push   r13
  403546:	push   r12
  403548:	push   rbp
  403549:	push   rdi
  40354a:	push   rsi
  40354b:	push   rbx
  40354c:	sub    rsp,0x188
  403553:	mov    DWORD PTR [rsp+0x1d8],edx
  40355a:	lea    rdx,[rsp+0x70]
  40355f:	mov    ebp,ecx
  403561:	mov    QWORD PTR [rsp+0x1e0],r8
  403569:	mov    QWORD PTR [rsp+0x1e8],r9
  403571:	mov    QWORD PTR [rsp+0x78],0x0
  40357a:	call   0x4064a0
  40357f:	test   eax,eax
  403581:	jne    0x4039f9
  403587:	mov    edx,DWORD PTR [rsp+0x70]
  40358b:	lea    r8,[rsp+0x78]
  403590:	mov    ecx,ebp
  403592:	call   0x406520
  403597:	test   eax,eax
  403599:	jne    0x403a12
  40359f:	mov    rax,QWORD PTR [rsp+0x1e0]
  4035a7:	lea    rbx,[rax*8+0x0]
  4035af:	mov    rcx,rbx
  4035b2:	call   0x405450
  4035b7:	mov    QWORD PTR [rsp+0x38],rax
  4035bc:	mov    rax,QWORD PTR [rsp+0x1e0]
  4035c4:	lea    rcx,[rax*4+0x0]
  4035cc:	call   0x405450
  4035d1:	mov    rcx,rbx
  4035d4:	mov    rsi,rax
  4035d7:	mov    QWORD PTR [rsp+0x40],rax
  4035dc:	call   0x405450
  4035e1:	mov    rcx,rbx
  4035e4:	mov    r13,rax
  4035e7:	call   0x405450
  4035ec:	cmp    QWORD PTR [rsp+0x1e0],0x0
  4035f5:	mov    r12,rax
  4035f8:	je     0x403a2b
  4035fe:	lea    rax,[rsp+0x74]
  403603:	mov    QWORD PTR [rsp+0x58],rsi
  403608:	xor    ebx,ebx
  40360a:	mov    QWORD PTR [rsp+0x68],rax
  40360f:	lea    rax,[rsp+0x80]
  403617:	mov    QWORD PTR [rsp+0x30],rax
  40361c:	nop    DWORD PTR [rax+0x0]
  403620:	mov    rax,QWORD PTR [rsp+0x1e8]
  403628:	mov    r8,QWORD PTR [rsp+0x68]
  40362d:	mov    ecx,ebp
  40362f:	mov    eax,DWORD PTR [rax+rbx*4]
  403632:	mov    edx,eax
  403634:	mov    DWORD PTR [rsp+0x4c],eax
  403638:	call   0x406440
  40363d:	test   eax,eax
  40363f:	jne    0x4039c0
  403645:	mov    eax,DWORD PTR [rsp+0x74]
  403649:	lea    ecx,[rax+0x1]
  40364c:	movsxd rcx,ecx
  40364f:	shl    rcx,0x2
  403653:	call   0x405450
  403658:	movsxd rcx,DWORD PTR [rsp+0x74]
  40365d:	mov    rdi,rax
  403660:	mov    QWORD PTR [rsp+0x50],rax
  403665:	shl    rcx,0x3
  403669:	call   0x405450
  40366e:	movsxd rcx,DWORD PTR [rsp+0x74]
  403673:	mov    QWORD PTR [r13+rbx*8+0x0],rax
  403678:	shl    rcx,0x3
  40367c:	call   0x405450
  403681:	mov    edx,DWORD PTR [rsp+0x4c]
  403685:	mov    QWORD PTR [r12+rbx*8],rax
  403689:	mov    r8,rdi
  40368c:	mov    ecx,ebp
  40368e:	call   0x406460
  403693:	test   eax,eax
  403695:	jne    0x4039e0
  40369b:	mov    edx,DWORD PTR [rsp+0x4c]
  40369f:	mov    ecx,ebp
  4036a1:	call   0x402540
  4036a6:	cmp    DWORD PTR [rsp+0x74],0x1
  4036ab:	mov    QWORD PTR [rsp+0x60],rax
  4036b0:	jle    0x403731
  4036b2:	mov    rax,QWORD PTR [rsp+0x50]
  4036b7:	mov    r15d,0x8
  4036bd:	mov    esi,0x1
  4036c2:	mov    r14d,0x1
  4036c8:	lea    rdi,[rax+0x4]
  4036cc:	jmp    0x403709
  4036ce:	xchg   ax,ax
  4036d0:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
  4036d5:	mov    rax,QWORD PTR [r12+rbx*8]
  4036d9:	add    r14d,0x1
  4036dd:	imul   rsi,QWORD PTR [rsp+0x80]
  4036e6:	add    rdi,0x4
  4036ea:	mov    QWORD PTR [rdx+r15*1],0x0
  4036f2:	mov    rcx,QWORD PTR [rsp+0x80]
  4036fa:	mov    QWORD PTR [rax+r15*1],rcx
  4036fe:	add    r15,0x8
  403702:	cmp    DWORD PTR [rsp+0x74],r14d
  403707:	jle    0x403740
  403709:	mov    r8,QWORD PTR [rsp+0x30]
  40370e:	mov    edx,DWORD PTR [rdi]
  403710:	mov    ecx,ebp
  403712:	call   0x406520
  403717:	test   eax,eax
  403719:	je     0x4036d0
  40371b:	lea    rdx,[rip+0xb998]        # 0x40f0ba
  403722:	mov    r8d,0x503
  403728:	mov    ecx,eax
  40372a:	call   0x405480
  40372f:	jmp    0x4036d0
  403731:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
  403736:	mov    rax,QWORD PTR [r12+rbx*8]
  40373a:	mov    esi,0x1
  40373f:	nop
  403740:	mov    rcx,QWORD PTR [rsp+0x60]
  403745:	mov    QWORD PTR [rdx],0x0
  40374c:	mov    QWORD PTR [rax],0x1
  403753:	imul   rcx,rsi
  403757:	call   0x405450
  40375c:	mov    rdi,QWORD PTR [rsp+0x38]
  403761:	mov    r8,QWORD PTR [rsp+0x30]
  403766:	mov    ecx,ebp
  403768:	mov    edx,DWORD PTR [rsp+0x4c]
  40376c:	mov    QWORD PTR [rdi+rbx*8],rax
  403770:	call   0x406450
  403775:	test   eax,eax
  403777:	jne    0x4039a0
  40377d:	mov    r8,QWORD PTR [rsp+0x58]
  403782:	mov    rdx,QWORD PTR [rsp+0x30]
  403787:	mov    ecx,DWORD PTR [rsp+0x1d8]
  40378e:	call   0x406458
  403793:	test   eax,eax
  403795:	jne    0x403980
  40379b:	mov    rax,QWORD PTR [rsp+0x50]
  4037a0:	test   rax,rax
  4037a3:	je     0x4037ad
  4037a5:	mov    rcx,rax
  4037a8:	call   0x40c9f0
  4037ad:	add    rbx,0x1
  4037b1:	add    QWORD PTR [rsp+0x58],0x4
  4037b7:	cmp    rbx,QWORD PTR [rsp+0x1e0]
  4037bf:	jne    0x403620
  4037c5:	cmp    QWORD PTR [rsp+0x78],0x0
  4037cb:	je     0x4038af
  4037d1:	xor    eax,eax
  4037d3:	mov    DWORD PTR [rsp+0x1d0],ebp
  4037da:	mov    rbp,rax
  4037dd:	nop    DWORD PTR [rax]
  4037e0:	xor    ebx,ebx
  4037e2:	cmp    QWORD PTR [rsp+0x1e0],0x0
  4037eb:	jne    0x403831
  4037ed:	jmp    0x403891
  4037f2:	mov    ecx,DWORD PTR [rsp+0x1d8]
  4037f9:	mov    QWORD PTR [rsp+0x20],r15
  4037fe:	mov    r9,rsi
  403801:	mov    r8,r14
  403804:	mov    edx,edi
  403806:	call   0x406408
  40380b:	test   eax,eax
  40380d:	je     0x403823
  40380f:	lea    rdx,[rip+0xb8a4]        # 0x40f0ba
  403816:	mov    r8d,0x4d9
  40381c:	mov    ecx,eax
  40381e:	call   0x405480
  403823:	add    rbx,0x1
  403827:	cmp    rbx,QWORD PTR [rsp+0x1e0]
  40382f:	je     0x403891
  403831:	mov    rax,QWORD PTR [rsp+0x1e8]
  403839:	mov    r14,QWORD PTR [r13+rbx*8+0x0]
  40383e:	mov    rsi,QWORD PTR [r12+rbx*8]
  403842:	mov    ecx,DWORD PTR [rsp+0x1d0]
  403849:	mov    edx,DWORD PTR [rax+rbx*4]
  40384c:	mov    rax,QWORD PTR [rsp+0x40]
  403851:	mov    r8,r14
  403854:	mov    r9,rsi
  403857:	mov    edi,DWORD PTR [rax+rbx*4]
  40385a:	mov    rax,QWORD PTR [rsp+0x38]
  40385f:	mov    QWORD PTR [r14],rbp
  403862:	mov    r15,QWORD PTR [rax+rbx*8]
  403866:	mov    QWORD PTR [rsp+0x20],r15
  40386b:	call   0x406560
  403870:	test   eax,eax
  403872:	je     0x4037f2
  403878:	lea    rdx,[rip+0xb83b]        # 0x40f0ba
  40387f:	mov    r8d,0x4d8
  403885:	mov    ecx,eax
  403887:	call   0x405480
  40388c:	jmp    0x4037f2
  403891:	add    rbp,0x1
  403895:	cmp    QWORD PTR [rsp+0x78],rbp
  40389a:	ja     0x4037e0
  4038a0:	cmp    QWORD PTR [rsp+0x1e0],0x0
  4038a9:	je     0x403a37
  4038af:	mov    rsi,QWORD PTR [rsp+0x1e0]
  4038b7:	xor    ebx,ebx
  4038b9:	nop    DWORD PTR [rax+0x0]
  4038c0:	mov    rcx,QWORD PTR [r13+rbx*8+0x0]
  4038c5:	test   rcx,rcx
  4038c8:	je     0x4038cf
  4038ca:	call   0x40c9f0
  4038cf:	mov    rcx,QWORD PTR [r12+rbx*8]
  4038d3:	test   rcx,rcx
  4038d6:	je     0x4038dd
  4038d8:	call   0x40c9f0
  4038dd:	add    rbx,0x1
  4038e1:	cmp    rbx,rsi
  4038e4:	jne    0x4038c0
  4038e6:	mov    rcx,r13
  4038e9:	call   0x40c9f0
  4038ee:	test   r12,r12
  4038f1:	je     0x4038fb
  4038f3:	mov    rcx,r12
  4038f6:	call   0x40c9f0
  4038fb:	xor    ebx,ebx
  4038fd:	cmp    QWORD PTR [rsp+0x1e0],0x0
  403906:	je     0x40392c
  403908:	mov    rsi,QWORD PTR [rsp+0x38]
  40390d:	mov    rdi,QWORD PTR [rsp+0x1e0]
  403915:	mov    rcx,QWORD PTR [rsi+rbx*8]
  403919:	test   rcx,rcx
  40391c:	je     0x403923
  40391e:	call   0x40c9f0
  403923:	add    rbx,0x1
  403927:	cmp    rbx,rdi
  40392a:	jne    0x403915
  40392c:	cmp    QWORD PTR [rsp+0x1e8],0x0
  403935:	je     0x403944
  403937:	mov    rcx,QWORD PTR [rsp+0x1e8]
  40393f:	call   0x40c9f0
  403944:	mov    rax,QWORD PTR [rsp+0x38]
  403949:	test   rax,rax
  40394c:	je     0x403956
  40394e:	mov    rcx,rax
  403951:	call   0x40c9f0
  403956:	mov    rax,QWORD PTR [rsp+0x40]
  40395b:	test   rax,rax
  40395e:	je     0x403968
  403960:	mov    rcx,rax
  403963:	call   0x40c9f0
  403968:	xor    eax,eax
  40396a:	add    rsp,0x188
  403971:	pop    rbx
  403972:	pop    rsi
  403973:	pop    rdi
  403974:	pop    rbp
  403975:	pop    r12
  403977:	pop    r13
  403979:	pop    r14
  40397b:	pop    r15
  40397d:	ret    
  40397e:	xchg   ax,ax
  403980:	lea    rdx,[rip+0xb733]        # 0x40f0ba
  403987:	mov    r8d,0x50c
  40398d:	mov    ecx,eax
  40398f:	call   0x405480
  403994:	jmp    0x40379b
  403999:	nop    DWORD PTR [rax+0x0]
  4039a0:	lea    rdx,[rip+0xb713]        # 0x40f0ba
  4039a7:	mov    r8d,0x50b
  4039ad:	mov    ecx,eax
  4039af:	call   0x405480
  4039b4:	jmp    0x40377d
  4039b9:	nop    DWORD PTR [rax+0x0]
  4039c0:	lea    rdx,[rip+0xb6f3]        # 0x40f0ba
  4039c7:	mov    r8d,0x4f9
  4039cd:	mov    ecx,eax
  4039cf:	call   0x405480
  4039d4:	jmp    0x403645
  4039d9:	nop    DWORD PTR [rax+0x0]
  4039e0:	lea    rdx,[rip+0xb6d3]        # 0x40f0ba
  4039e7:	mov    r8d,0x4fd
  4039ed:	mov    ecx,eax
  4039ef:	call   0x405480
  4039f4:	jmp    0x40369b
  4039f9:	lea    rdx,[rip+0xb6ba]        # 0x40f0ba
  403a00:	mov    r8d,0x4e8
  403a06:	mov    ecx,eax
  403a08:	call   0x405480
  403a0d:	jmp    0x403587
  403a12:	lea    rdx,[rip+0xb6a1]        # 0x40f0ba
  403a19:	mov    r8d,0x4e9
  403a1f:	mov    ecx,eax
  403a21:	call   0x405480
  403a26:	jmp    0x40359f
  403a2b:	cmp    QWORD PTR [rsp+0x78],0x0
  403a31:	jne    0x4037d1
  403a37:	test   r13,r13
  403a3a:	je     0x4038ee
  403a40:	jmp    0x4038e6
  403a45:	nop
  403a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a50:	push   r15
  403a52:	push   r14
  403a54:	push   r13
  403a56:	push   r12
  403a58:	push   rbp
  403a59:	push   rdi
  403a5a:	push   rsi
  403a5b:	push   rbx
  403a5c:	sub    rsp,0x198
  403a63:	lea    rbp,[rsp+0x90]
  403a6b:	mov    edi,r8d
  403a6e:	mov    ebx,ecx
  403a70:	mov    esi,edx
  403a72:	mov    r8,rbp
  403a75:	call   0x406450
  403a7a:	test   eax,eax
  403a7c:	jne    0x4041f0
  403a82:	lea    r8,[rsp+0x6c]
  403a87:	mov    rdx,rbp
  403a8a:	mov    ecx,edi
  403a8c:	call   0x406458
  403a91:	test   eax,eax
  403a93:	jne    0x4041d0
  403a99:	lea    r8,[rsp+0x68]
  403a9e:	mov    edx,esi
  403aa0:	mov    ecx,ebx
  403aa2:	call   0x406438
  403aa7:	test   eax,eax
  403aa9:	jne    0x4041b0
  403aaf:	mov    edx,esi
  403ab1:	mov    ecx,ebx
  403ab3:	xor    r13d,r13d
  403ab6:	call   0x402540
  403abb:	cmp    rax,QWORD PTR [rip+0xa68e]        # 0x40e150
  403ac2:	jbe    0x403ace
  403ac4:	mov    QWORD PTR [rip+0xa685],rax        # 0x40e150
  403acb:	mov    r13b,0x1
  403ace:	lea    rdx,[rsp+0x70]
  403ad3:	mov    ecx,edi
  403ad5:	call   0x406508
  403ada:	test   eax,eax
  403adc:	jne    0x403f00
  403ae2:	mov    eax,DWORD PTR [rsp+0x70]
  403ae6:	sub    eax,0x3
  403ae9:	cmp    eax,0x1
  403aec:	jbe    0x403f24
  403af2:	lea    r14,[rsp+0x7c]
  403af7:	lea    rbp,[rsp+0x84]
  403aff:	lea    r12,[rsp+0x88]
  403b07:	mov    r8,rbp
  403b0a:	mov    edx,esi
  403b0c:	mov    ecx,ebx
  403b0e:	mov    DWORD PTR [rsp+0x80],0x1
  403b19:	call   0x406438
  403b1e:	test   eax,eax
  403b20:	jne    0x403ee0
  403b26:	mov    edx,DWORD PTR [rsp+0x84]
  403b2d:	xor    r8d,r8d
  403b30:	mov    r9,r12
  403b33:	mov    ecx,ebx
  403b35:	call   0x4064b8
  403b3a:	test   eax,eax
  403b3c:	jne    0x403ec0
  403b42:	mov    r8,r14
  403b45:	mov    edx,esi
  403b47:	mov    ecx,ebx
  403b49:	mov    r15,QWORD PTR [rsp+0x88]
  403b51:	call   0x406440
  403b56:	test   eax,eax
  403b58:	jne    0x403ea0
  403b5e:	mov    eax,DWORD PTR [rsp+0x7c]
  403b62:	lea    ecx,[rax+0x1]
  403b65:	movsxd rcx,ecx
  403b68:	shl    rcx,0x3
  403b6c:	call   0x405450
  403b71:	mov    r14,rax
  403b74:	mov    eax,DWORD PTR [rsp+0x7c]
  403b78:	test   eax,eax
  403b7a:	jle    0x403b98
  403b7c:	lea    r8,[rsp+0x80]
  403b84:	xor    r9d,r9d
  403b87:	mov    edx,esi
  403b89:	mov    ecx,ebx
  403b8b:	call   0x406480
  403b90:	test   eax,eax
  403b92:	jne    0x404230
  403b98:	cmp    DWORD PTR [rsp+0x80],0x1
  403ba0:	je     0x403c41
  403ba6:	lea    r8,[rsp+0x80]
  403bae:	mov    r9,r14
  403bb1:	mov    edx,esi
  403bb3:	mov    ecx,ebx
  403bb5:	call   0x406480
  403bba:	test   eax,eax
  403bbc:	jne    0x404210
  403bc2:	mov    eax,DWORD PTR [rsp+0x7c]
  403bc6:	test   eax,eax
  403bc8:	jle    0x403be2
  403bca:	sub    eax,0x1
  403bcd:	mov    rdx,r14
  403bd0:	lea    r8,[r14+rax*8+0x8]
  403bd5:	imul   r15,QWORD PTR [rdx]
  403bd9:	add    rdx,0x8
  403bdd:	cmp    rdx,r8
  403be0:	jne    0x403bd5
  403be2:	mov    rcx,r14
  403be5:	call   0x40c9f0
  403bea:	mov    r14,QWORD PTR [rip+0xa55f]        # 0x40e150
  403bf1:	cmp    r14,r15
  403bf4:	jae    0x403c50
  403bf6:	mov    rcx,QWORD PTR [rip+0xf433]        # 0x413030
  403bfd:	mov    QWORD PTR [rip+0xa54c],r15        # 0x40e150
  403c04:	mov    r14,r15
  403c07:	test   rcx,rcx
  403c0a:	je     0x403c1c
  403c0c:	call   0x40c9f0
  403c11:	mov    QWORD PTR [rip+0xf414],0x0        # 0x413030
  403c1c:	mov    rcx,r14
  403c1f:	call   0x405450
  403c24:	mov    r14,QWORD PTR [rip+0xa525]        # 0x40e150
  403c2b:	xor    edx,edx
  403c2d:	mov    rcx,rax
  403c30:	mov    QWORD PTR [rip+0xf3f9],rax        # 0x413030
  403c37:	mov    r8,r14
  403c3a:	call   0x40c9b0
  403c3f:	jmp    0x403c66
  403c41:	mov    rcx,r14
  403c44:	call   0x40c9f0
  403c49:	mov    r14,QWORD PTR [rip+0xa500]        # 0x40e150
  403c50:	test   r13d,r13d
  403c53:	mov    rcx,QWORD PTR [rip+0xf3d6]        # 0x413030
  403c5a:	je     0x403c61
  403c5c:	test   rcx,rcx
  403c5f:	jne    0x403c0c
  403c61:	test   rcx,rcx
  403c64:	je     0x403c1c
  403c66:	mov    r9,r12
  403c69:	mov    r8,r14
  403c6c:	mov    edx,esi
  403c6e:	mov    ecx,ebx
  403c70:	call   0x4048f0
  403c75:	test   eax,eax
  403c77:	jne    0x403e80
  403c7d:	mov    rax,QWORD PTR [rsp+0x88]
  403c85:	mov    ecx,DWORD PTR [rax+0x38]
  403c88:	add    ecx,0x1
  403c8b:	movsxd rcx,ecx
  403c8e:	shl    rcx,0x3
  403c92:	call   0x405450
  403c97:	mov    r13,rax
  403c9a:	mov    rax,QWORD PTR [rsp+0x88]
  403ca2:	mov    ecx,DWORD PTR [rax+0x38]
  403ca5:	add    ecx,0x1
  403ca8:	movsxd rcx,ecx
  403cab:	shl    rcx,0x3
  403caf:	call   0x405450
  403cb4:	mov    r12,rax
  403cb7:	nop    WORD PTR [rax+rax*1+0x0]
  403cc0:	mov    rcx,QWORD PTR [rsp+0x88]
  403cc8:	mov    r8,r12
  403ccb:	mov    rdx,r13
  403cce:	call   0x404cf0
  403cd3:	test   rax,rax
  403cd6:	mov    r14,rax
  403cd9:	je     0x403e10
  403cdf:	mov    rax,QWORD PTR [rip+0xf34a]        # 0x413030
  403ce6:	mov    r9,r12
  403ce9:	mov    r8,r13
  403cec:	mov    edx,esi
  403cee:	mov    ecx,ebx
  403cf0:	mov    QWORD PTR [rsp+0x20],rax
  403cf5:	call   0x406560
  403cfa:	test   eax,eax
  403cfc:	jne    0x403df1
  403d02:	mov    rax,QWORD PTR [rip+0xf327]        # 0x413030
  403d09:	mov    edx,DWORD PTR [rsp+0x6c]
  403d0d:	mov    r9,r12
  403d10:	mov    r8,r13
  403d13:	mov    ecx,edi
  403d15:	mov    QWORD PTR [rsp+0x20],rax
  403d1a:	call   0x406408
  403d1f:	test   eax,eax
  403d21:	jne    0x403da0
  403d23:	mov    edx,DWORD PTR [rsp+0x68]
  403d27:	cmp    edx,0xc
  403d2a:	je     0x403dc1
  403d30:	jle    0x403cc0
  403d32:	xor    r9d,r9d
  403d35:	xor    r8d,r8d
  403d38:	mov    QWORD PTR [rsp+0x30],rbp
  403d3d:	mov    QWORD PTR [rsp+0x28],0x0
  403d46:	mov    QWORD PTR [rsp+0x20],0x0
  403d4f:	mov    ecx,ebx
  403d51:	call   0x406490
  403d56:	test   eax,eax
  403d58:	jne    0x403e60
  403d5e:	cmp    DWORD PTR [rsp+0x84],0xd
  403d66:	jne    0x403cc0
  403d6c:	mov    rdx,QWORD PTR [rip+0xf2bd]        # 0x413030
  403d73:	mov    rcx,r14
  403d76:	call   0x406568
  403d7b:	test   eax,eax
  403d7d:	je     0x403cc0
  403d83:	lea    rdx,[rip+0xb330]        # 0x40f0ba
  403d8a:	mov    r8d,0x418
  403d90:	mov    ecx,eax
  403d92:	call   0x405480
  403d97:	jmp    0x403cc0
  403d9c:	nop    DWORD PTR [rax+0x0]
  403da0:	lea    rdx,[rip+0xb313]        # 0x40f0ba
  403da7:	mov    r8d,0x40f
  403dad:	mov    ecx,eax
  403daf:	call   0x405480
  403db4:	mov    edx,DWORD PTR [rsp+0x68]
  403db8:	cmp    edx,0xc
  403dbb:	jne    0x403d30
  403dc1:	mov    rdx,QWORD PTR [rip+0xf268]        # 0x413030
  403dc8:	mov    rcx,r14
  403dcb:	call   0x406570
  403dd0:	test   eax,eax
  403dd2:	je     0x403cc0
  403dd8:	lea    rdx,[rip+0xb2db]        # 0x40f0ba
  403ddf:	mov    r8d,0x413
  403de5:	mov    ecx,eax
  403de7:	call   0x405480
  403dec:	jmp    0x403cc0
  403df1:	lea    rdx,[rip+0xb2c2]        # 0x40f0ba
  403df8:	mov    r8d,0x40e
  403dfe:	mov    ecx,eax
  403e00:	call   0x405480
  403e05:	jmp    0x403d02
  403e0a:	nop    WORD PTR [rax+rax*1+0x0]
  403e10:	mov    rcx,r13
  403e13:	call   0x40c9f0
  403e18:	mov    rcx,r12
  403e1b:	call   0x40c9f0
  403e20:	mov    rcx,QWORD PTR [rsp+0x88]
  403e28:	call   0x404fe0
  403e2d:	test   eax,eax
  403e2f:	je     0x403e45
  403e31:	lea    rdx,[rip+0xb282]        # 0x40f0ba
  403e38:	mov    r8d,0x425
  403e3e:	mov    ecx,eax
  403e40:	call   0x405480
  403e45:	xor    eax,eax
  403e47:	add    rsp,0x198
  403e4e:	pop    rbx
  403e4f:	pop    rsi
  403e50:	pop    rdi
  403e51:	pop    rbp
  403e52:	pop    r12
  403e54:	pop    r13
  403e56:	pop    r14
  403e58:	pop    r15
  403e5a:	ret    
  403e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  403e60:	lea    rdx,[rip+0xb253]        # 0x40f0ba
  403e67:	mov    r8d,0x416
  403e6d:	mov    ecx,eax
  403e6f:	call   0x405480
  403e74:	jmp    0x403d5e
  403e79:	nop    DWORD PTR [rax+0x0]
  403e80:	lea    rdx,[rip+0xb233]        # 0x40f0ba
  403e87:	mov    r8d,0x406
  403e8d:	mov    ecx,eax
  403e8f:	call   0x405480
  403e94:	jmp    0x403c7d
  403e99:	nop    DWORD PTR [rax+0x0]
  403ea0:	lea    rdx,[rip+0xb213]        # 0x40f0ba
  403ea7:	mov    r8d,0x93
  403ead:	mov    ecx,eax
  403eaf:	call   0x405480
  403eb4:	jmp    0x403b5e
  403eb9:	nop    DWORD PTR [rax+0x0]
  403ec0:	lea    rdx,[rip+0xb1f3]        # 0x40f0ba
  403ec7:	mov    r8d,0x91
  403ecd:	mov    ecx,eax
  403ecf:	call   0x405480
  403ed4:	jmp    0x403b42
  403ed9:	nop    DWORD PTR [rax+0x0]
  403ee0:	lea    rdx,[rip+0xb1d3]        # 0x40f0ba
  403ee7:	mov    r8d,0x8f
  403eed:	mov    ecx,eax
  403eef:	call   0x405480
  403ef4:	jmp    0x403b26
  403ef9:	nop    DWORD PTR [rax+0x0]
  403f00:	lea    rdx,[rip+0xb1b3]        # 0x40f0ba
  403f07:	mov    ecx,eax
  403f09:	mov    r8d,0x3d5
  403f0f:	call   0x405480
  403f14:	mov    eax,DWORD PTR [rsp+0x70]
  403f18:	sub    eax,0x3
  403f1b:	cmp    eax,0x1
  403f1e:	ja     0x403af2
  403f24:	mov    edx,DWORD PTR [rsp+0x6c]
  403f28:	lea    r8,[rsp+0x74]
  403f2d:	xor    r9d,r9d
  403f30:	mov    ecx,edi
  403f32:	mov    DWORD PTR [rsp+0x74],0x1
  403f3a:	call   0x406480
  403f3f:	test   eax,eax
  403f41:	jne    0x40428b
  403f47:	mov    r9d,DWORD PTR [rsp+0x74]
  403f4c:	test   r9d,r9d
  403f4f:	jne    0x403af2
  403f55:	mov    r8d,DWORD PTR [rip+0xf0dc]        # 0x413038
  403f5c:	test   r8d,r8d
  403f5f:	je     0x404249
  403f65:	lea    r8,[rsp+0x78]
  403f6a:	mov    edx,esi
  403f6c:	mov    ecx,ebx
  403f6e:	mov    r15d,DWORD PTR [rsp+0x6c]
  403f73:	mov    DWORD PTR [rsp+0x7c],0x1
  403f7b:	mov    DWORD PTR [rsp+0x80],0x1
  403f86:	call   0x406440
  403f8b:	test   eax,eax
  403f8d:	jne    0x4042ce
  403f93:	mov    ecx,DWORD PTR [rsp+0x78]
  403f97:	lea    r14,[rsp+0x7c]
  403f9c:	test   ecx,ecx
  403f9e:	jle    0x403fd4
  403fa0:	xor    r9d,r9d
  403fa3:	mov    r8,r14
  403fa6:	mov    edx,esi
  403fa8:	mov    ecx,ebx
  403faa:	call   0x406480
  403faf:	test   eax,eax
  403fb1:	jne    0x404372
  403fb7:	lea    r8,[rsp+0x80]
  403fbf:	xor    r9d,r9d
  403fc2:	mov    edx,r15d
  403fc5:	mov    ecx,edi
  403fc7:	call   0x406480
  403fcc:	test   eax,eax
  403fce:	jne    0x404359
  403fd4:	cmp    DWORD PTR [rsp+0x7c],0x1
  403fd9:	jne    0x403fe9
  403fdb:	cmp    DWORD PTR [rsp+0x80],0x1
  403fe3:	je     0x40438b
  403fe9:	lea    rbp,[rsp+0x84]
  403ff1:	mov    edx,esi
  403ff3:	mov    ecx,ebx
  403ff5:	mov    r8,rbp
  403ff8:	call   0x406438
  403ffd:	test   eax,eax
  403fff:	jne    0x404300
  404005:	lea    r12,[rsp+0x88]
  40400d:	mov    edx,DWORD PTR [rsp+0x84]
  404014:	xor    r8d,r8d
  404017:	mov    ecx,ebx
  404019:	mov    r9,r12
  40401c:	call   0x4064b8
  404021:	test   eax,eax
  404023:	jne    0x4042e7
  404029:	mov    edx,DWORD PTR [rsp+0x7c]
  40402d:	mov    rax,QWORD PTR [rsp+0x88]
  404035:	test   edx,edx
  404037:	mov    QWORD PTR [rsp+0x48],rax
  40403c:	jne    0x40404c
  40403e:	cmp    DWORD PTR [rsp+0x80],0x1
  404046:	je     0x404346
  40404c:	mov    eax,DWORD PTR [rsp+0x78]
  404050:	lea    ecx,[rax+0x1]
  404053:	movsxd rcx,ecx
  404056:	shl    rcx,0x3
  40405a:	call   0x405450
  40405f:	cmp    DWORD PTR [rsp+0x7c],0x1
  404064:	mov    r11,rax
  404067:	jne    0x4042a4
  40406d:	mov    edx,DWORD PTR [rsp+0x78]
  404071:	mov    QWORD PTR [rax],0x1
  404078:	cmp    edx,0x1
  40407b:	jle    0x40408e
  40407d:	mov    eax,0x1
  404082:	mov    QWORD PTR [r11+rax*8],rax
  404086:	add    rax,0x1
  40408a:	cmp    edx,eax
  40408c:	jg     0x404082
  40408e:	lea    ecx,[rdx+0x1]
  404091:	mov    QWORD PTR [rsp+0x58],r11
  404096:	movsxd rcx,ecx
  404099:	shl    rcx,0x3
  40409d:	call   0x405450
  4040a2:	lea    r8,[rsp+0x80]
  4040aa:	mov    r9,rax
  4040ad:	mov    edx,r15d
  4040b0:	mov    ecx,edi
  4040b2:	mov    QWORD PTR [rsp+0x50],rax
  4040b7:	call   0x406480
  4040bc:	test   eax,eax
  4040be:	mov    r10,QWORD PTR [rsp+0x50]
  4040c3:	mov    r11,QWORD PTR [rsp+0x58]
  4040c8:	jne    0x404319
  4040ce:	mov    r9d,DWORD PTR [rsp+0x78]
  4040d3:	mov    r8,QWORD PTR [rsp+0x88]
  4040db:	test   r9d,r9d
  4040de:	jle    0x4043d7
  4040e4:	mov    DWORD PTR [rsp+0x50],r13d
  4040e9:	mov    r13,QWORD PTR [rsp+0x48]
  4040ee:	xor    ecx,ecx
  4040f0:	mov    r15d,0x1
  4040f6:	mov    DWORD PTR [rsp+0x1e0],ebx
  4040fd:	mov    DWORD PTR [rsp+0x1e8],esi
  404104:	mov    rsi,QWORD PTR [r11+rcx*8]
  404108:	mov    rbx,QWORD PTR [r10+rcx*8]
  40410c:	xor    edx,edx
  40410e:	add    rcx,0x1
  404112:	lea    rax,[rsi-0x1]
  404116:	imul   r13,rsi
  40411a:	imul   r8,rbx
  40411e:	div    rbx
  404121:	cmp    r9d,ecx
  404124:	lea    r15,[r15+rax*1+0x1]
  404129:	jg     0x404104
  40412b:	lea    rax,[r15-0x1]
  40412f:	mov    QWORD PTR [rsp+0x48],r13
  404134:	mov    ebx,DWORD PTR [rsp+0x1e0]
  40413b:	mov    r13d,DWORD PTR [rsp+0x50]
  404140:	mov    esi,DWORD PTR [rsp+0x1e8]
  404147:	imul   rax,r8
  40414b:	mov    rcx,r11
  40414e:	mov    QWORD PTR [rsp+0x50],r10
  404153:	add    QWORD PTR [rsp+0x48],rax
  404158:	call   0x40c9f0
  40415d:	mov    r10,QWORD PTR [rsp+0x50]
  404162:	mov    rcx,r10
  404165:	call   0x40c9f0
  40416a:	movss  xmm0,DWORD PTR [rip+0xb846]        # 0x40f9b8
  404172:	mov    r8,QWORD PTR [rsp+0x48]
  404177:	mov    edx,DWORD PTR [rsp+0x6c]
  40417b:	movss  DWORD PTR [rsp+0x20],xmm0
  404181:	mov    r9,r15
  404184:	mov    ecx,edi
  404186:	call   0x4063f8
  40418b:	test   eax,eax
  40418d:	je     0x403b07
  404193:	lea    rdx,[rip+0xaf20]        # 0x40f0ba
  40419a:	mov    r8d,0x3e8
  4041a0:	mov    ecx,eax
  4041a2:	call   0x405480
  4041a7:	jmp    0x403b07
  4041ac:	nop    DWORD PTR [rax+0x0]
  4041b0:	lea    rdx,[rip+0xaf03]        # 0x40f0ba
  4041b7:	mov    r8d,0x3ce
  4041bd:	mov    ecx,eax
  4041bf:	call   0x405480
  4041c4:	jmp    0x403aaf
  4041c9:	nop    DWORD PTR [rax+0x0]
  4041d0:	lea    rdx,[rip+0xaee3]        # 0x40f0ba
  4041d7:	mov    r8d,0x3cd
  4041dd:	mov    ecx,eax
  4041df:	call   0x405480
  4041e4:	jmp    0x403a99
  4041e9:	nop    DWORD PTR [rax+0x0]
  4041f0:	lea    rdx,[rip+0xaec3]        # 0x40f0ba
  4041f7:	mov    r8d,0x3cc
  4041fd:	mov    ecx,eax
  4041ff:	call   0x405480
  404204:	jmp    0x403a82
  404209:	nop    DWORD PTR [rax+0x0]
  404210:	lea    rdx,[rip+0xaea3]        # 0x40f0ba
  404217:	mov    r8d,0x9b
  40421d:	mov    ecx,eax
  40421f:	call   0x405480
  404224:	jmp    0x403bc2
  404229:	nop    DWORD PTR [rax+0x0]
  404230:	lea    rdx,[rip+0xae83]        # 0x40f0ba
  404237:	mov    r8d,0x96
  40423d:	mov    ecx,eax
  40423f:	call   0x405480
  404244:	jmp    0x403b98
  404249:	mov    r9,QWORD PTR [rip+0x9ef0]        # 0x40e140
  404250:	mov    r8,QWORD PTR [rip+0x9ef1]        # 0x40e148
  404257:	mov    ecx,edi
  404259:	mov    edx,DWORD PTR [rsp+0x6c]
  40425d:	mov    DWORD PTR [rsp+0x20],0x3f800000
  404265:	call   0x4063f8
  40426a:	test   eax,eax
  40426c:	je     0x403af2
  404272:	lea    rdx,[rip+0xae41]        # 0x40f0ba
  404279:	mov    r8d,0x3ee
  40427f:	mov    ecx,eax
  404281:	call   0x405480
  404286:	jmp    0x403af2
  40428b:	lea    rdx,[rip+0xae28]        # 0x40f0ba
  404292:	mov    r8d,0x3d9
  404298:	mov    ecx,eax
  40429a:	call   0x405480
  40429f:	jmp    0x403f47
  4042a4:	mov    r9,rax
  4042a7:	mov    r8,r14
  4042aa:	mov    edx,esi
  4042ac:	mov    ecx,ebx
  4042ae:	mov    QWORD PTR [rsp+0x50],rax
  4042b3:	call   0x406480
  4042b8:	test   eax,eax
  4042ba:	mov    r11,QWORD PTR [rsp+0x50]
  4042bf:	jne    0x4043b0
  4042c5:	mov    edx,DWORD PTR [rsp+0x78]
  4042c9:	jmp    0x40408e
  4042ce:	lea    rdx,[rip+0xade5]        # 0x40f0ba
  4042d5:	mov    r8d,0xbc
  4042db:	mov    ecx,eax
  4042dd:	call   0x405480
  4042e2:	jmp    0x403f93
  4042e7:	lea    rdx,[rip+0xadcc]        # 0x40f0ba
  4042ee:	mov    r8d,0xc9
  4042f4:	mov    ecx,eax
  4042f6:	call   0x405480
  4042fb:	jmp    0x404029
  404300:	lea    rdx,[rip+0xadb3]        # 0x40f0ba
  404307:	mov    r8d,0xc8
  40430d:	mov    ecx,eax
  40430f:	call   0x405480
  404314:	jmp    0x404005
  404319:	lea    rdx,[rip+0xad9a]        # 0x40f0ba
  404320:	mov    r8d,0xe0
  404326:	mov    ecx,eax
  404328:	mov    QWORD PTR [rsp+0x58],r10
  40432d:	mov    QWORD PTR [rsp+0x50],r11
  404332:	call   0x405480
  404337:	mov    r10,QWORD PTR [rsp+0x58]
  40433c:	mov    r11,QWORD PTR [rsp+0x50]
  404341:	jmp    0x4040ce
  404346:	movss  xmm0,DWORD PTR [rip+0xb66a]        # 0x40f9b8
  40434e:	mov    r15d,0x1
  404354:	jmp    0x404172
  404359:	lea    rdx,[rip+0xad5a]        # 0x40f0ba
  404360:	mov    r8d,0xbf
  404366:	mov    ecx,eax
  404368:	call   0x405480
  40436d:	jmp    0x403fd4
  404372:	lea    rdx,[rip+0xad41]        # 0x40f0ba
  404379:	mov    r8d,0xbe
  40437f:	mov    ecx,eax
  404381:	call   0x405480
  404386:	jmp    0x403fb7
  40438b:	pxor   xmm0,xmm0
  40438f:	xor    r15d,r15d
  404392:	mov    QWORD PTR [rsp+0x48],0x0
  40439b:	lea    rbp,[rsp+0x84]
  4043a3:	lea    r12,[rsp+0x88]
  4043ab:	jmp    0x404172
  4043b0:	lea    rdx,[rip+0xad03]        # 0x40f0ba
  4043b7:	mov    r8d,0xdb
  4043bd:	mov    ecx,eax
  4043bf:	mov    QWORD PTR [rsp+0x50],r11
  4043c4:	call   0x405480
  4043c9:	mov    edx,DWORD PTR [rsp+0x78]
  4043cd:	mov    r11,QWORD PTR [rsp+0x50]
  4043d2:	jmp    0x40408e
  4043d7:	xor    eax,eax
  4043d9:	mov    r15d,0x1
  4043df:	jmp    0x40414b
  4043e4:	xchg   ax,ax
  4043e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043f0:	push   r15
  4043f2:	push   r14
  4043f4:	push   r13
  4043f6:	push   r12
  4043f8:	push   rbp
  4043f9:	push   rdi
  4043fa:	push   rsi
  4043fb:	push   rbx
  4043fc:	sub    rsp,0x38
  404400:	mov    r15d,r8d
  404403:	lea    r8,[rsp+0x24]
  404408:	mov    ebp,ecx
  40440a:	mov    r14d,edx
  40440d:	call   0x406440
  404412:	test   eax,eax
  404414:	jne    0x404500
  40441a:	mov    eax,DWORD PTR [rsp+0x24]
  40441e:	lea    ecx,[rax+0x1]
  404421:	movsxd rcx,ecx
  404424:	shl    rcx,0x2
  404428:	call   0x405450
  40442d:	mov    edx,r14d
  404430:	mov    r8,rax
  404433:	mov    ecx,ebp
  404435:	mov    r13,rax
  404438:	call   0x406460
  40443d:	test   eax,eax
  40443f:	jne    0x4044e0
  404445:	mov    eax,DWORD PTR [rsp+0x24]
  404449:	test   eax,eax
  40444b:	jle    0x4044c0
  40444d:	mov    rsi,r13
  404450:	mov    edi,0x1
  404455:	xor    ebx,ebx
  404457:	lea    r12,[rsp+0x28]
  40445c:	jmp    0x404473
  40445e:	xchg   ax,ax
  404460:	imul   rdi,QWORD PTR [rsp+0x28]
  404466:	add    ebx,0x1
  404469:	add    rsi,0x4
  40446d:	cmp    ebx,DWORD PTR [rsp+0x24]
  404471:	jge    0x4044a0
  404473:	mov    edx,DWORD PTR [rsi]
  404475:	mov    r8,r12
  404478:	mov    ecx,ebp
  40447a:	call   0x406520
  40447f:	test   eax,eax
  404481:	je     0x404460
  404483:	lea    rdx,[rip+0xac30]        # 0x40f0ba
  40448a:	mov    r8d,0x3aa
  404490:	mov    ecx,eax
  404492:	call   0x405480
  404497:	jmp    0x404460
  404499:	nop    DWORD PTR [rax+0x0]
  4044a0:	mov    rcx,r13
  4044a3:	call   0x40c9f0
  4044a8:	test   rdi,rdi
  4044ab:	jne    0x4044c8
  4044ad:	xor    eax,eax
  4044af:	add    rsp,0x38
  4044b3:	pop    rbx
  4044b4:	pop    rsi
  4044b5:	pop    rdi
  4044b6:	pop    rbp
  4044b7:	pop    r12
  4044b9:	pop    r13
  4044bb:	pop    r14
  4044bd:	pop    r15
  4044bf:	ret    
  4044c0:	mov    rcx,r13
  4044c3:	call   0x40c9f0
  4044c8:	mov    r8d,r15d
  4044cb:	mov    edx,r14d
  4044ce:	mov    ecx,ebp
  4044d0:	call   0x403a50
  4044d5:	jmp    0x4044ad
  4044d7:	nop    WORD PTR [rax+rax*1+0x0]
  4044e0:	lea    rdx,[rip+0xabd3]        # 0x40f0ba
  4044e7:	mov    r8d,0x3a7
  4044ed:	mov    ecx,eax
  4044ef:	call   0x405480
  4044f4:	jmp    0x404445
  4044f9:	nop    DWORD PTR [rax+0x0]
  404500:	lea    rdx,[rip+0xabb3]        # 0x40f0ba
  404507:	mov    r8d,0x3a5
  40450d:	mov    ecx,eax
  40450f:	call   0x405480
  404514:	jmp    0x40441a
  404519:	nop    DWORD PTR [rax+0x0]
  404520:	push   r12
  404522:	push   rbp
  404523:	push   rdi
  404524:	push   rsi
  404525:	push   rbx
  404526:	sub    rsp,0x20
  40452a:	xor    ebx,ebx
  40452c:	test   r8,r8
  40452f:	mov    r12d,ecx
  404532:	mov    ebp,edx
  404534:	mov    rsi,r8
  404537:	mov    rdi,r9
  40453a:	jne    0x404549
  40453c:	jmp    0x40458d
  40453e:	xchg   ax,ax
  404540:	add    rbx,0x1
  404544:	cmp    rbx,rsi
  404547:	je     0x404578
  404549:	mov    edx,DWORD PTR [rdi+rbx*4]
  40454c:	mov    r8d,ebp
  40454f:	mov    ecx,r12d
  404552:	call   0x4043f0
  404557:	test   eax,eax
  404559:	je     0x404540
  40455b:	lea    rdx,[rip+0xab58]        # 0x40f0ba
  404562:	mov    r8d,0x4c5
  404568:	mov    ecx,eax
  40456a:	add    rbx,0x1
  40456e:	call   0x405480
  404573:	cmp    rbx,rsi
  404576:	jne    0x404549
  404578:	mov    rcx,rdi
  40457b:	call   0x40c9f0
  404580:	xor    eax,eax
  404582:	add    rsp,0x20
  404586:	pop    rbx
  404587:	pop    rsi
  404588:	pop    rdi
  404589:	pop    rbp
  40458a:	pop    r12
  40458c:	ret    
  40458d:	test   r9,r9
  404590:	je     0x404580
  404592:	jmp    0x404578
  404594:	xchg   ax,ax
  404596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045a0:	push   r13
  4045a2:	push   r12
  4045a4:	push   rbp
  4045a5:	push   rdi
  4045a6:	push   rsi
  4045a7:	push   rbx
  4045a8:	sub    rsp,0x38
  4045ac:	xor    esi,esi
  4045ae:	xor    ebx,ebx
  4045b0:	mov    edi,ecx
  4045b2:	mov    r13d,edx
  4045b5:	lea    r12,[rsp+0x28]
  4045ba:	call   0x405be0
  4045bf:	mov    r9d,DWORD PTR [rip+0xea82]        # 0x413048
  4045c6:	mov    rbp,rax
  4045c9:	test   r9d,r9d
  4045cc:	jg     0x4045df
  4045ce:	jmp    0x404613
  4045d0:	add    ebx,0x1
  4045d3:	add    rsi,0x8
  4045d7:	cmp    DWORD PTR [rip+0xea6b],ebx        # 0x413048
  4045dd:	jle    0x404613
  4045df:	mov    rax,QWORD PTR [rip+0xea5a]        # 0x413040
  4045e6:	mov    r8,r12
  4045e9:	mov    ecx,edi
  4045eb:	mov    rdx,QWORD PTR [rax+rsi*1]
  4045ef:	call   0x405da0
  4045f4:	test   eax,eax
  4045f6:	jne    0x4045d0
  4045f8:	mov    edx,DWORD PTR [rsp+0x28]
  4045fc:	mov    rcx,rbp
  4045ff:	add    ebx,0x1
  404602:	add    rsi,0x8
  404606:	call   0x405c10
  40460b:	cmp    DWORD PTR [rip+0xea37],ebx        # 0x413048
  404611:	jg     0x4045df
  404613:	lea    r8,[rsp+0x20]
  404618:	mov    edx,r13d
  40461b:	mov    ecx,edi
  40461d:	call   0x401e70
  404622:	test   eax,eax
  404624:	jne    0x404790
  40462a:	lea    rdx,[rsp+0x24]
  40462f:	mov    ecx,edi
  404631:	call   0x4064c8
  404636:	test   eax,eax
  404638:	jne    0x4047b8
  40463e:	mov    r8d,DWORD PTR [rsp+0x24]
  404643:	xor    edx,edx
  404645:	mov    DWORD PTR [rsp+0x28],0x0
  40464d:	test   r8d,r8d
  404650:	jg     0x404665
  404652:	jmp    0x4046c0
  404654:	mov    eax,DWORD PTR [rsp+0x28]
  404658:	lea    edx,[rax+0x1]
  40465b:	cmp    DWORD PTR [rsp+0x24],edx
  40465f:	mov    DWORD PTR [rsp+0x28],edx
  404663:	jle    0x4046c0
  404665:	mov    ecx,DWORD PTR [rip+0xe9dd]        # 0x413048
  40466b:	test   ecx,ecx
  40466d:	jle    0x40467b
  40466f:	mov    rcx,rbp
  404672:	call   0x405c40
  404677:	test   eax,eax
  404679:	je     0x404654
  40467b:	mov    r8,QWORD PTR [rip+0xe9ce]        # 0x413050
  404682:	mov    edx,DWORD PTR [rip+0xe9d8]        # 0x413060
  404688:	mov    ecx,edi
  40468a:	call   0x405ca0
  40468f:	test   eax,eax
  404691:	je     0x404654
  404693:	mov    r8d,DWORD PTR [rsp+0x20]
  404698:	mov    edx,DWORD PTR [rsp+0x28]
  40469c:	mov    ecx,edi
  40469e:	call   0x4043f0
  4046a3:	test   eax,eax
  4046a5:	je     0x404654
  4046a7:	lea    rdx,[rip+0xaa0c]        # 0x40f0ba
  4046ae:	mov    r8d,0x454
  4046b4:	mov    ecx,eax
  4046b6:	call   0x405480
  4046bb:	jmp    0x404654
  4046bd:	nop    DWORD PTR [rax]
  4046c0:	lea    rbx,[rsp+0x2c]
  4046c5:	xor    r8d,r8d
  4046c8:	mov    ecx,edi
  4046ca:	mov    rdx,rbx
  4046cd:	call   0x4064d8
  4046d2:	mov    r12d,eax
  4046d5:	mov    eax,DWORD PTR [rsp+0x2c]
  4046d9:	lea    ecx,[rax+0x1]
  4046dc:	movsxd rcx,ecx
  4046df:	shl    rcx,0x2
  4046e3:	call   0x405450
  4046e8:	mov    rdx,rbx
  4046eb:	mov    r8,rax
  4046ee:	mov    ecx,edi
  4046f0:	mov    r13,rax
  4046f3:	call   0x4064d8
  4046f8:	test   eax,eax
  4046fa:	jne    0x4047d1
  404700:	mov    edx,DWORD PTR [rsp+0x2c]
  404704:	xor    esi,esi
  404706:	mov    rbx,r13
  404709:	test   edx,edx
  40470b:	jg     0x40471d
  40470d:	jmp    0x404770
  40470f:	nop
  404710:	add    esi,0x1
  404713:	add    rbx,0x4
  404717:	cmp    DWORD PTR [rsp+0x2c],esi
  40471b:	jle    0x404770
  40471d:	mov    eax,DWORD PTR [rip+0xe929]        # 0x41304c
  404723:	test   eax,eax
  404725:	jne    0x40473f
  404727:	mov    r8,QWORD PTR [rip+0xe922]        # 0x413050
  40472e:	mov    edx,DWORD PTR [rip+0xe92c]        # 0x413060
  404734:	mov    ecx,DWORD PTR [rbx]
  404736:	call   0x405ca0
  40473b:	test   eax,eax
  40473d:	je     0x404710
  40473f:	mov    edx,DWORD PTR [rsp+0x20]
  404743:	mov    ecx,DWORD PTR [rbx]
  404745:	call   0x4045a0
  40474a:	test   eax,eax
  40474c:	je     0x404710
  40474e:	lea    rdx,[rip+0xa965]        # 0x40f0ba
  404755:	mov    r8d,0x45f
  40475b:	mov    ecx,eax
  40475d:	add    esi,0x1
  404760:	add    rbx,0x4
  404764:	call   0x405480
  404769:	cmp    DWORD PTR [rsp+0x2c],esi
  40476d:	jg     0x40471d
  40476f:	nop
  404770:	mov    rcx,r13
  404773:	call   0x40c9f0
  404778:	mov    rcx,rbp
  40477b:	call   0x405c70
  404780:	mov    eax,r12d
  404783:	add    rsp,0x38
  404787:	pop    rbx
  404788:	pop    rsi
  404789:	pop    rdi
  40478a:	pop    rbp
  40478b:	pop    r12
  40478d:	pop    r13
  40478f:	ret    
  404790:	lea    rdx,[rip+0xa923]        # 0x40f0ba
  404797:	mov    ecx,eax
  404799:	mov    r8d,0x44a
  40479f:	call   0x405480
  4047a4:	lea    rdx,[rsp+0x24]
  4047a9:	mov    ecx,edi
  4047ab:	call   0x4064c8
  4047b0:	test   eax,eax
  4047b2:	je     0x40463e
  4047b8:	lea    rdx,[rip+0xa8fb]        # 0x40f0ba
  4047bf:	mov    r8d,0x44d
  4047c5:	mov    ecx,eax
  4047c7:	call   0x405480
  4047cc:	jmp    0x40463e
  4047d1:	lea    rdx,[rip+0xa8e2]        # 0x40f0ba
  4047d8:	mov    r8d,0x45a
  4047de:	mov    ecx,eax
  4047e0:	call   0x405480
  4047e5:	jmp    0x404700
  4047ea:	nop    WORD PTR [rax+rax*1+0x0]
  4047f0:	push   rdi
  4047f1:	push   rsi
  4047f2:	push   rbx
  4047f3:	sub    rsp,0x30
  4047f7:	lea    rdx,[rsp+0x2c]
  4047fc:	mov    ebx,ecx
  4047fe:	call   0x4064d0
  404803:	test   eax,eax
  404805:	jne    0x4048b0
  40480b:	lea    rsi,[rsp+0x28]
  404810:	xor    r8d,r8d
  404813:	mov    ecx,ebx
  404815:	mov    rdx,rsi
  404818:	call   0x4064d8
  40481d:	test   eax,eax
  40481f:	jne    0x404890
  404821:	movsxd rax,DWORD PTR [rsp+0x28]
  404826:	test   eax,eax
  404828:	jle    0x404880
  40482a:	lea    rcx,[rax*4+0x0]
  404832:	call   0x405450
  404837:	mov    rdx,rsi
  40483a:	mov    r8,rax
  40483d:	mov    ecx,ebx
  40483f:	mov    rdi,rax
  404842:	call   0x4064d8
  404847:	test   eax,eax
  404849:	jne    0x4048d0
  40484f:	mov    eax,DWORD PTR [rsp+0x28]
  404853:	xor    ebx,ebx
  404855:	mov    rsi,rdi
  404858:	test   eax,eax
  40485a:	jle    0x404878
  40485c:	nop    DWORD PTR [rax+0x0]
  404860:	mov    ecx,DWORD PTR [rsi]
  404862:	add    ebx,0x1
  404865:	add    rsi,0x4
  404869:	call   0x4047f0
  40486e:	add    DWORD PTR [rsp+0x2c],eax
  404872:	cmp    DWORD PTR [rsp+0x28],ebx
  404876:	jg     0x404860
  404878:	mov    rcx,rdi
  40487b:	call   0x40c9f0
  404880:	mov    eax,DWORD PTR [rsp+0x2c]
  404884:	add    rsp,0x30
  404888:	pop    rbx
  404889:	pop    rsi
  40488a:	pop    rdi
  40488b:	ret    
  40488c:	nop    DWORD PTR [rax+0x0]
  404890:	lea    rdx,[rip+0xa823]        # 0x40f0ba
  404897:	mov    r8d,0x46e
  40489d:	mov    ecx,eax
  40489f:	call   0x405480
  4048a4:	jmp    0x404821
  4048a9:	nop    DWORD PTR [rax+0x0]
  4048b0:	lea    rdx,[rip+0xa803]        # 0x40f0ba
  4048b7:	mov    r8d,0x46c
  4048bd:	mov    ecx,eax
  4048bf:	call   0x405480
  4048c4:	jmp    0x40480b
  4048c9:	nop    DWORD PTR [rax+0x0]
  4048d0:	lea    rdx,[rip+0xa7e3]        # 0x40f0ba
  4048d7:	mov    r8d,0x472
  4048dd:	mov    ecx,eax
  4048df:	call   0x405480
  4048e4:	jmp    0x40484f
  4048e9:	nop
  4048ea:	nop
  4048eb:	nop
  4048ec:	nop
  4048ed:	nop
  4048ee:	nop
  4048ef:	nop
  4048f0:	push   r15
  4048f2:	push   r14
  4048f4:	push   r13
  4048f6:	push   r12
  4048f8:	push   rbp
  4048f9:	push   rdi
  4048fa:	push   rsi
  4048fb:	push   rbx
  4048fc:	sub    rsp,0x48
  404900:	mov    ebp,ecx
  404902:	mov    ecx,0x60
  404907:	mov    r13d,edx
  40490a:	mov    r12,r8
  40490d:	mov    r14,r9
  404910:	call   0x405450
  404915:	lea    rdi,[rax+0x8]
  404919:	mov    rcx,rax
  40491c:	mov    QWORD PTR [rax],0x0
  404923:	mov    QWORD PTR [rax+0x58],0x0
  40492b:	mov    rsi,rax
  40492e:	xor    eax,eax
  404930:	and    rdi,0xfffffffffffffff8
  404934:	lea    r8,[rsp+0x30]
  404939:	mov    edx,r13d
  40493c:	sub    rcx,rdi
  40493f:	add    ecx,0x60
  404942:	shr    ecx,0x3
  404945:	rep stos QWORD PTR es:[rdi],rax
  404948:	mov    ecx,ebp
  40494a:	call   0x406440
  40494f:	test   eax,eax
  404951:	jne    0x404c00
  404957:	mov    eax,DWORD PTR [rsp+0x30]
  40495b:	lea    ecx,[rax+0x1]
  40495e:	movsxd rcx,ecx
  404961:	shl    rcx,0x2
  404965:	call   0x405450
  40496a:	mov    rdi,rax
  40496d:	mov    eax,DWORD PTR [rsp+0x30]
  404971:	lea    ecx,[rax+0x1]
  404974:	movsxd rcx,ecx
  404977:	shl    rcx,0x3
  40497b:	call   0x405450
  404980:	mov    QWORD PTR [rsi+0x50],rax
  404984:	mov    eax,DWORD PTR [rsp+0x30]
  404988:	lea    ecx,[rax+0x1]
  40498b:	movsxd rcx,ecx
  40498e:	shl    rcx,0x3
  404992:	call   0x405450
  404997:	mov    r8,rdi
  40499a:	mov    QWORD PTR [rsi+0x58],rax
  40499e:	mov    edx,r13d
  4049a1:	mov    ecx,ebp
  4049a3:	call   0x406460
  4049a8:	test   eax,eax
  4049aa:	jne    0x404be0
  4049b0:	mov    edx,DWORD PTR [rsp+0x30]
  4049b4:	xor    ebx,ebx
  4049b6:	lea    r15,[rsp+0x38]
  4049bb:	test   edx,edx
  4049bd:	jg     0x4049db
  4049bf:	jmp    0x404a02
  4049c1:	mov    rax,QWORD PTR [rsi+0x50]
  4049c5:	mov    rdx,QWORD PTR [rsp+0x38]
  4049ca:	mov    QWORD PTR [rax+rbx*8],rdx
  4049ce:	lea    eax,[rbx+0x1]
  4049d1:	add    rbx,0x1
  4049d5:	cmp    DWORD PTR [rsp+0x30],eax
  4049d9:	jle    0x404a02
  4049db:	mov    edx,DWORD PTR [rdi+rbx*4]
  4049de:	mov    r8,r15
  4049e1:	mov    ecx,ebp
  4049e3:	call   0x406520
  4049e8:	test   eax,eax
  4049ea:	je     0x4049c1
  4049ec:	lea    rdx,[rip+0xafdd]        # 0x40f9d0
  4049f3:	mov    r8d,0xcc
  4049f9:	mov    ecx,eax
  4049fb:	call   0x405480
  404a00:	jmp    0x4049c1
  404a02:	lea    r8,[rsp+0x2c]
  404a07:	mov    edx,r13d
  404a0a:	mov    ecx,ebp
  404a0c:	call   0x406438
  404a11:	test   eax,eax
  404a13:	jne    0x404bc0
  404a19:	mov    edx,DWORD PTR [rsp+0x2c]
  404a1d:	xor    r8d,r8d
  404a20:	mov    r9,r15
  404a23:	mov    ecx,ebp
  404a25:	call   0x4064b8
  404a2a:	test   eax,eax
  404a2c:	je     0x404a42
  404a2e:	lea    rdx,[rip+0xaf9b]        # 0x40f9d0
  404a35:	mov    r8d,0x50
  404a3b:	mov    ecx,eax
  404a3d:	call   0x405480
  404a42:	mov    eax,DWORD PTR [rsp+0x30]
  404a46:	mov    DWORD PTR [rsp+0x34],0x1
  404a4e:	test   eax,eax
  404a50:	jle    0x404ba0
  404a56:	lea    rbx,[rsp+0x34]
  404a5b:	xor    r9d,r9d
  404a5e:	mov    edx,r13d
  404a61:	mov    ecx,ebp
  404a63:	mov    r8,rbx
  404a66:	call   0x406480
  404a6b:	test   eax,eax
  404a6d:	jne    0x404c70
  404a73:	mov    eax,DWORD PTR [rsp+0x34]
  404a77:	test   eax,eax
  404a79:	jne    0x404b10
  404a7f:	mov    r9,QWORD PTR [rsi+0x58]
  404a83:	mov    r8,rbx
  404a86:	mov    edx,r13d
  404a89:	mov    ecx,ebp
  404a8b:	call   0x406480
  404a90:	test   eax,eax
  404a92:	jne    0x404ccd
  404a98:	mov    edx,DWORD PTR [rsp+0x30]
  404a9c:	mov    rbx,QWORD PTR [rsp+0x38]
  404aa1:	mov    DWORD PTR [rsi],0x1
  404aa7:	mov    DWORD PTR [rsi+0x28],0x1
  404aae:	mov    DWORD PTR [rsi+0x48],0x1
  404ab5:	test   edx,edx
  404ab7:	mov    DWORD PTR [rsi+0x38],edx
  404aba:	jle    0x404add
  404abc:	mov    rax,QWORD PTR [rsi+0x58]
  404ac0:	sub    edx,0x1
  404ac3:	lea    rdx,[rax+rdx*8+0x8]
  404ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ad0:	imul   rbx,QWORD PTR [rax]
  404ad4:	add    rax,0x8
  404ad8:	cmp    rax,rdx
  404adb:	jne    0x404ad0
  404add:	cmp    r12,rbx
  404ae0:	jb     0x404c95
  404ae6:	mov    QWORD PTR [rsi+0x30],0x0
  404aee:	mov    rcx,rdi
  404af1:	call   0x40c9f0
  404af6:	xor    eax,eax
  404af8:	mov    QWORD PTR [r14],rsi
  404afb:	add    rsp,0x48
  404aff:	pop    rbx
  404b00:	pop    rsi
  404b01:	pop    rdi
  404b02:	pop    rbp
  404b03:	pop    r12
  404b05:	pop    r13
  404b07:	pop    r14
  404b09:	pop    r15
  404b0b:	ret    
  404b0c:	nop    DWORD PTR [rax+0x0]
  404b10:	mov    eax,DWORD PTR [rsp+0x30]
  404b14:	mov    rcx,QWORD PTR [rsp+0x38]
  404b19:	mov    r9,QWORD PTR [rsi+0x50]
  404b1d:	mov    DWORD PTR [rsi],0x1
  404b23:	mov    DWORD PTR [rsi+0x28],0x1
  404b2a:	mov    DWORD PTR [rsi+0x48],0x0
  404b31:	lea    r10d,[rax-0x1]
  404b35:	test   eax,eax
  404b37:	mov    DWORD PTR [rsi+0x38],eax
  404b3a:	mov    DWORD PTR [rsi+0x4],r10d
  404b3e:	jle    0x404b83
  404b40:	movsxd rdx,eax
  404b43:	mov    r8,rcx
  404b46:	sub    eax,0x2
  404b49:	shl    rdx,0x3
  404b4d:	imul   r8,QWORD PTR [r9+rdx*1-0x8]
  404b53:	add    rdx,r9
  404b56:	cmp    r12,r8
  404b59:	jae    0x404b7b
  404b5b:	jmp    0x404ce6
  404b60:	mov    rcx,r8
  404b63:	sub    eax,0x1
  404b66:	sub    rdx,0x8
  404b6a:	imul   rcx,QWORD PTR [rdx-0x8]
  404b6f:	cmp    r12,rcx
  404b72:	jb     0x404c20
  404b78:	mov    r8,rcx
  404b7b:	cmp    eax,0xffffffff
  404b7e:	mov    r10d,eax
  404b81:	jne    0x404b60
  404b83:	mov    rax,QWORD PTR [r9]
  404b86:	mov    DWORD PTR [rsi+0x4],0x0
  404b8d:	mov    QWORD PTR [rsi+0x40],0x0
  404b95:	mov    QWORD PTR [rsi+0x8],rax
  404b99:	jmp    0x404ae6
  404b9e:	xchg   ax,ax
  404ba0:	mov    r9,QWORD PTR [rsi+0x50]
  404ba4:	mov    DWORD PTR [rsi+0x38],eax
  404ba7:	mov    DWORD PTR [rsi],0x1
  404bad:	mov    DWORD PTR [rsi+0x28],0x1
  404bb4:	mov    DWORD PTR [rsi+0x48],0x0
  404bbb:	jmp    0x404b83
  404bbd:	nop    DWORD PTR [rax]
  404bc0:	lea    rdx,[rip+0xae09]        # 0x40f9d0
  404bc7:	mov    r8d,0xd0
  404bcd:	mov    ecx,eax
  404bcf:	call   0x405480
  404bd4:	jmp    0x404a19
  404bd9:	nop    DWORD PTR [rax+0x0]
  404be0:	lea    rdx,[rip+0xade9]        # 0x40f9d0
  404be7:	mov    r8d,0xc9
  404bed:	mov    ecx,eax
  404bef:	call   0x405480
  404bf4:	jmp    0x4049b0
  404bf9:	nop    DWORD PTR [rax+0x0]
  404c00:	lea    rdx,[rip+0xadc9]        # 0x40f9d0
  404c07:	mov    r8d,0xc2
  404c0d:	mov    ecx,eax
  404c0f:	call   0x405480
  404c14:	jmp    0x404957
  404c19:	nop    DWORD PTR [rax+0x0]
  404c20:	mov    DWORD PTR [rsi+0x4],r10d
  404c24:	mov    rax,r12
  404c27:	xor    edx,edx
  404c29:	movsxd r10,r10d
  404c2c:	div    r8
  404c2f:	lea    r8,[r9+r10*8]
  404c33:	xor    edx,edx
  404c35:	mov    r12,rax
  404c38:	mov    QWORD PTR [rsi+0x8],rax
  404c3c:	mov    rax,QWORD PTR [r8]
  404c3f:	div    r12
  404c42:	mov    QWORD PTR [rsi+0x10],rax
  404c46:	imul   rax,r12
  404c4a:	mov    rcx,rax
  404c4d:	mov    rax,QWORD PTR [r8]
  404c50:	mov    QWORD PTR [rsi+0x18],0x1
  404c58:	mov    QWORD PTR [rsi+0x40],r12
  404c5c:	sub    rax,rcx
  404c5f:	mov    QWORD PTR [rsi+0x20],rax
  404c63:	jmp    0x404ae6
  404c68:	nop    DWORD PTR [rax+rax*1+0x0]
  404c70:	lea    rdx,[rip+0xad59]        # 0x40f9d0
  404c77:	mov    ecx,eax
  404c79:	mov    r8d,0xd6
  404c7f:	call   0x405480
  404c84:	mov    eax,DWORD PTR [rsp+0x34]
  404c88:	test   eax,eax
  404c8a:	je     0x404a7f
  404c90:	jmp    0x404b10
  404c95:	call   QWORD PTR [rip+0x10b41]        # 0x4157dc
  404c9b:	lea    rdx,[rip+0xad3e]        # 0x40f9e0
  404ca2:	lea    rcx,[rax+0x60]
  404ca6:	mov    r8d,ebx
  404ca9:	mov    r9d,r12d
  404cac:	call   0x40ca08
  404cb1:	lea    rdx,[rip+0xad18]        # 0x40f9d0
  404cb8:	mov    r8d,0xde
  404cbe:	mov    ecx,0xffffffc3
  404cc3:	call   0x405480
  404cc8:	jmp    0x404ae6
  404ccd:	lea    rdx,[rip+0xacfc]        # 0x40f9d0
  404cd4:	mov    r8d,0xd9
  404cda:	mov    ecx,eax
  404cdc:	call   0x405480
  404ce1:	jmp    0x404a98
  404ce6:	mov    r8,rcx
  404ce9:	jmp    0x404c24
  404cee:	xchg   ax,ax
  404cf0:	push   r13
  404cf2:	push   r12
  404cf4:	push   rbp
  404cf5:	push   rdi
  404cf6:	push   rsi
  404cf7:	push   rbx
  404cf8:	mov    r9d,DWORD PTR [rcx]
  404cfb:	test   r9d,r9d
  404cfe:	je     0x404d94
  404d04:	mov    eax,DWORD PTR [rcx+0x48]
  404d07:	test   eax,eax
  404d09:	je     0x404f12
  404d0f:	mov    ebx,DWORD PTR [rcx+0x38]
  404d12:	test   ebx,ebx
  404d14:	jle    0x404d43
  404d16:	mov    rsi,QWORD PTR [rcx+0x50]
  404d1a:	mov    r11,QWORD PTR [rcx+0x58]
  404d1e:	xor    eax,eax
  404d20:	mov    QWORD PTR [rdx+rax*8],0x0
  404d28:	mov    r10,QWORD PTR [r11+rax*8]
  404d2c:	mov    r9,QWORD PTR [rsi+rax*8]
  404d30:	cmp    r10,r9
  404d33:	cmovbe r9,r10
  404d37:	mov    QWORD PTR [r8+rax*8],r9
  404d3b:	add    rax,0x1
  404d3f:	cmp    ebx,eax
  404d41:	jg     0x404d20
  404d43:	mov    edi,DWORD PTR [rcx+0x28]
  404d46:	mov    DWORD PTR [rcx],0x0
  404d4c:	test   ebx,ebx
  404d4e:	mov    QWORD PTR [rcx+0x30],0x1
  404d56:	lea    esi,[rbx-0x1]
  404d59:	jle    0x404d81
  404d5b:	mov    esi,esi
  404d5d:	mov    eax,0x1
  404d62:	lea    rdx,[r8+rsi*8+0x8]
  404d67:	nop    WORD PTR [rax+rax*1+0x0]
  404d70:	imul   rax,QWORD PTR [r8]
  404d74:	add    r8,0x8
  404d78:	cmp    r8,rdx
  404d7b:	mov    QWORD PTR [rcx+0x30],rax
  404d7f:	jne    0x404d70
  404d81:	xor    eax,eax
  404d83:	test   edi,edi
  404d85:	je     0x404d8b
  404d87:	mov    rax,QWORD PTR [rcx+0x30]
  404d8b:	pop    rbx
  404d8c:	pop    rsi
  404d8d:	pop    rdi
  404d8e:	pop    rbp
  404d8f:	pop    r12
  404d91:	pop    r13
  404d93:	ret    
  404d94:	mov    edi,DWORD PTR [rcx+0x48]
  404d97:	test   edi,edi
  404d99:	je     0x404e70
  404d9f:	mov    ebx,DWORD PTR [rcx+0x38]
  404da2:	mov    rbp,QWORD PTR [rcx+0x58]
  404da6:	mov    r12,QWORD PTR [rcx+0x50]
  404daa:	lea    esi,[rbx-0x1]
  404dad:	movsxd r9,esi
  404db0:	lea    r13,[r9*8+0x0]
  404db8:	lea    rax,[rdx+r13*1]
  404dbc:	mov    r10,QWORD PTR [rax]
  404dbf:	add    r10,QWORD PTR [rbp+r9*8+0x0]
  404dc4:	test   esi,esi
  404dc6:	mov    QWORD PTR [rax],r10
  404dc9:	jle    0x404e16
  404dcb:	lea    r11d,[rbx-0x2]
  404dcf:	lea    r9,[rdx+r13*1-0x8]
  404dd4:	lea    rdi,[r12+r13*1]
  404dd8:	xor    eax,eax
  404dda:	add    r13,rbp
  404ddd:	neg    r11
  404de0:	shl    r11,0x3
  404de4:	jmp    0x404dfb
  404de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404df0:	mov    r10,QWORD PTR [r9]
  404df3:	sub    rax,0x8
  404df7:	sub    r9,0x8
  404dfb:	cmp    QWORD PTR [rdi+rax*1],r10
  404dff:	ja     0x404e11
  404e01:	mov    r10,QWORD PTR [r13+rax*1-0x8]
  404e06:	add    QWORD PTR [r9],r10
  404e09:	mov    QWORD PTR [r9+0x8],0x0
  404e11:	cmp    rax,r11
  404e14:	jne    0x404df0
  404e16:	mov    rax,QWORD PTR [r12]
  404e1a:	xor    edi,edi
  404e1c:	cmp    QWORD PTR [rdx],rax
  404e1f:	mov    r11,r8
  404e22:	setb   dil
  404e26:	xor    eax,eax
  404e28:	test   ebx,ebx
  404e2a:	mov    DWORD PTR [rcx+0x28],edi
  404e2d:	jg     0x404e55
  404e2f:	jmp    0x404fc9
  404e34:	mov    QWORD PTR [r11],r13
  404e37:	mov    r9,r13
  404e3a:	movsxd r10,r10d
  404e3d:	cmp    r10,r9
  404e40:	jae    0x404e45
  404e42:	mov    QWORD PTR [r11],r10
  404e45:	add    rax,0x1
  404e49:	add    r11,0x8
  404e4d:	cmp    ebx,eax
  404e4f:	jle    0x404fa0
  404e55:	mov    r9,QWORD PTR [r12+rax*8]
  404e59:	mov    r13,QWORD PTR [rbp+rax*8+0x0]
  404e5e:	mov    r10d,r9d
  404e61:	sub    r10d,DWORD PTR [rdx+rax*8]
  404e65:	cmp    r9,r13
  404e68:	jae    0x404e34
  404e6a:	mov    QWORD PTR [r11],r9
  404e6d:	jmp    0x404e3a
  404e6f:	nop
  404e70:	mov    r10,QWORD PTR [rcx+0x40]
  404e74:	movsxd rbx,DWORD PTR [rcx+0x4]
  404e78:	mov    rsi,QWORD PTR [rcx+0x50]
  404e7c:	test   r10,r10
  404e7f:	je     0x404edc
  404e81:	movsxd r11,ebx
  404e84:	lea    r9,[r11*8+0x0]
  404e8c:	lea    rax,[rdx+r9*1]
  404e90:	add    r10,QWORD PTR [rax]
  404e93:	test   ebx,ebx
  404e95:	mov    QWORD PTR [rax],r10
  404e98:	jle    0x404ed0
  404e9a:	lea    edi,[rbx-0x1]
  404e9d:	add    r9,rsi
  404ea0:	sub    r11,rdi
  404ea3:	lea    r11,[rdx+r11*8-0x8]
  404ea8:	jmp    0x404eb3
  404eaa:	nop    WORD PTR [rax+rax*1+0x0]
  404eb0:	mov    r10,QWORD PTR [rax]
  404eb3:	cmp    QWORD PTR [r9],r10
  404eb6:	ja     0x404ec3
  404eb8:	add    QWORD PTR [rax-0x8],0x1
  404ebd:	mov    r10,QWORD PTR [r9]
  404ec0:	sub    QWORD PTR [rax],r10
  404ec3:	sub    rax,0x8
  404ec7:	sub    r9,0x8
  404ecb:	cmp    rax,r11
  404ece:	jne    0x404eb0
  404ed0:	xor    edi,edi
  404ed2:	mov    rax,QWORD PTR [rsi]
  404ed5:	cmp    QWORD PTR [rdx],rax
  404ed8:	setb   dil
  404edc:	mov    rax,QWORD PTR [rcx+0x10]
  404ee0:	cmp    QWORD PTR [rcx+0x18],rax
  404ee4:	mov    DWORD PTR [rcx+0x28],edi
  404ee7:	jb     0x404fb0
  404eed:	mov    rax,QWORD PTR [rcx+0x20]
  404ef1:	test   rax,rax
  404ef4:	je     0x404f0a
  404ef6:	mov    QWORD PTR [r8+rbx*8],rax
  404efa:	mov    rax,QWORD PTR [rcx+0x20]
  404efe:	mov    QWORD PTR [rcx+0x18],0x0
  404f06:	mov    QWORD PTR [rcx+0x40],rax
  404f0a:	mov    ebx,DWORD PTR [rcx+0x38]
  404f0d:	jmp    0x404d4c
  404f12:	mov    r9d,DWORD PTR [rcx+0x4]
  404f16:	xor    eax,eax
  404f18:	test   r9d,r9d
  404f1b:	jle    0x404f39
  404f1d:	nop    DWORD PTR [rax]
  404f20:	mov    QWORD PTR [rdx+rax*8],0x0
  404f28:	mov    QWORD PTR [r8+rax*8],0x1
  404f30:	add    rax,0x1
  404f34:	cmp    r9d,eax
  404f37:	jg     0x404f20
  404f39:	movsxd rax,r9d
  404f3c:	mov    ebx,DWORD PTR [rcx+0x38]
  404f3f:	mov    QWORD PTR [rdx+rax*8],0x0
  404f47:	mov    r11,QWORD PTR [rcx+0x8]
  404f4b:	lea    r10,[rax*8+0x0]
  404f53:	mov    QWORD PTR [r8+rax*8],r11
  404f57:	lea    eax,[r9+0x1]
  404f5b:	cmp    eax,ebx
  404f5d:	jge    0x404d43
  404f63:	add    r10,0x8
  404f67:	lea    r11d,[rbx-0x2]
  404f6b:	xor    eax,eax
  404f6d:	mov    rsi,r10
  404f70:	add    rsi,QWORD PTR [rcx+0x50]
  404f74:	add    rdx,r10
  404f77:	sub    r11d,r9d
  404f7a:	add    r10,r8
  404f7d:	add    r11,0x1
  404f81:	mov    QWORD PTR [rdx+rax*8],0x0
  404f89:	mov    r9,QWORD PTR [rsi+rax*8]
  404f8d:	mov    QWORD PTR [r10+rax*8],r9
  404f91:	add    rax,0x1
  404f95:	cmp    rax,r11
  404f98:	jne    0x404f81
  404f9a:	jmp    0x404d43
  404f9f:	nop
  404fa0:	mov    QWORD PTR [rcx+0x30],0x1
  404fa8:	jmp    0x404d5b
  404fad:	nop    DWORD PTR [rax]
  404fb0:	mov    rax,QWORD PTR [rcx+0x8]
  404fb4:	mov    QWORD PTR [rcx+0x40],rax
  404fb8:	mov    QWORD PTR [r8+rbx*8],rax
  404fbc:	mov    ebx,DWORD PTR [rcx+0x38]
  404fbf:	add    QWORD PTR [rcx+0x18],0x1
  404fc4:	jmp    0x404d4c
  404fc9:	mov    QWORD PTR [rcx+0x30],0x1
  404fd1:	jmp    0x404d81
  404fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fe0:	push   rbx
  404fe1:	sub    rsp,0x20
  404fe5:	mov    rbx,rcx
  404fe8:	mov    rcx,QWORD PTR [rcx+0x50]
  404fec:	test   rcx,rcx
  404fef:	je     0x404ff6
  404ff1:	call   0x40c9f0
  404ff6:	mov    rcx,QWORD PTR [rbx+0x58]
  404ffa:	test   rcx,rcx
  404ffd:	je     0x405004
  404fff:	call   0x40c9f0
  405004:	mov    rcx,rbx
  405007:	call   0x40c9f0
  40500c:	xor    eax,eax
  40500e:	add    rsp,0x20
  405012:	pop    rbx
  405013:	ret    
  405014:	nop
  405015:	nop
  405016:	nop
  405017:	nop
  405018:	nop
  405019:	nop
  40501a:	nop
  40501b:	nop
  40501c:	nop
  40501d:	nop
  40501e:	nop
  40501f:	nop
  405020:	push   r15
  405022:	push   r14
  405024:	push   r13
  405026:	push   r12
  405028:	push   rbp
  405029:	push   rdi
  40502a:	push   rsi
  40502b:	push   rbx
  40502c:	sub    rsp,0x48
  405030:	mov    QWORD PTR [rip+0xe045],0x0        # 0x413080
  40503b:	mov    DWORD PTR [rip+0xe053],0x0        # 0x413098
  405045:	test   rdx,rdx
  405048:	mov    r13d,ecx
  40504b:	mov    r15,rdx
  40504e:	je     0x4052f8
  405054:	movzx  ecx,BYTE PTR [rdx]
  405057:	xor    eax,eax
  405059:	test   cl,cl
  40505b:	je     0x4052a0
  405061:	cmp    cl,0x2f
  405064:	je     0x405289
  40506a:	mov    r9,r15
  40506d:	mov    rax,r15
  405070:	xor    r10d,r10d
  405073:	xor    r11d,r11d
  405076:	jmp    0x405095
  405078:	nop    DWORD PTR [rax+rax*1+0x0]
  405080:	movzx  ecx,BYTE PTR [rax+0x1]
  405084:	xor    r10d,r10d
  405087:	lea    r8,[rax+0x1]
  40508b:	mov    r9,rax
  40508e:	test   cl,cl
  405090:	je     0x4050bf
  405092:	mov    rax,r8
  405095:	cmp    cl,0x2c
  405098:	jne    0x405080
  40509a:	cmp    BYTE PTR [r9],0x5c
  40509e:	je     0x405080
  4050a0:	test   r10d,r10d
  4050a3:	jne    0x4052fc
  4050a9:	movzx  ecx,BYTE PTR [rax+0x1]
  4050ad:	add    r11,0x1
  4050b1:	mov    r10b,0x1
  4050b4:	lea    r8,[rax+0x1]
  4050b8:	mov    r9,rax
  4050bb:	test   cl,cl
  4050bd:	jne    0x405092
  4050bf:	lea    rbx,[r11+0x1]
  4050c3:	xor    ebp,ebp
  4050c5:	mov    r12,r15
  4050c8:	lea    rcx,[rbx*4+0x0]
  4050d0:	mov    QWORD PTR [rip+0xdfa9],rbx        # 0x413080
  4050d7:	call   0x405450
  4050dc:	lea    rcx,[rbx*8+0x0]
  4050e4:	mov    QWORD PTR [rip+0xdf9d],rax        # 0x413088
  4050eb:	lea    rbx,[r15+0x1]
  4050ef:	call   0x405450
  4050f4:	mov    QWORD PTR [rip+0xdf95],rax        # 0x413090
  4050fb:	lea    rax,[rsp+0x34]
  405100:	lea    rdi,[rbx-0x1]
  405104:	mov    QWORD PTR [rsp+0x20],rax
  405109:	lea    rax,[rsp+0x38]
  40510e:	mov    QWORD PTR [rsp+0x28],rax
  405113:	movzx  eax,BYTE PTR [rbx-0x1]
  405117:	test   al,al
  405119:	jne    0x40524f
  40511f:	nop
  405120:	cmp    r15,r12
  405123:	movzx  eax,BYTE PTR [r15]
  405127:	jbe    0x405264
  40512d:	cmp    al,0x2f
  40512f:	je     0x4052d1
  405135:	lea    r14,[r15-0x1]
  405139:	cmp    r14,r12
  40513c:	je     0x4052eb
  405142:	cmp    BYTE PTR [r14],0x2f
  405146:	mov    r15,r14
  405149:	jne    0x405135
  40514b:	mov    rcx,r14
  40514e:	sub    rcx,r12
  405151:	add    rcx,0x1
  405155:	call   0x405450
  40515a:	cmp    r12,r14
  40515d:	mov    rsi,rax
  405160:	jae    0x405281
  405166:	mov    rdx,rsi
  405169:	mov    rax,r12
  40516c:	nop    DWORD PTR [rax+0x0]
  405170:	add    rax,0x1
  405174:	movzx  ecx,BYTE PTR [rax-0x1]
  405178:	add    rdx,0x1
  40517c:	cmp    rax,r14
  40517f:	mov    BYTE PTR [rdx-0x1],cl
  405182:	jne    0x405170
  405184:	add    r12,0x1
  405188:	mov    eax,0x1
  40518d:	sub    rax,r12
  405190:	add    rax,r14
  405193:	add    rax,rsi
  405196:	mov    r8,QWORD PTR [rsp+0x20]
  40519b:	mov    BYTE PTR [rax],0x0
  40519e:	mov    rdx,rsi
  4051a1:	mov    ecx,r13d
  4051a4:	call   0x4059b0
  4051a9:	test   eax,eax
  4051ab:	jne    0x4052f8
  4051b1:	mov    rax,QWORD PTR [rip+0xded0]        # 0x413088
  4051b8:	mov    edx,DWORD PTR [rsp+0x34]
  4051bc:	movsxd r12,ebp
  4051bf:	mov    DWORD PTR [rax+r12*4],edx
  4051c3:	movzx  eax,BYTE PTR [r14+0x1]
  4051c8:	test   al,al
  4051ca:	je     0x4052b1
  4051d0:	cmp    al,0x2c
  4051d2:	je     0x4052b1
  4051d8:	lea    r15,[r14+0x1]
  4051dc:	mov    rdx,QWORD PTR [rsp+0x28]
  4051e1:	xor    r8d,r8d
  4051e4:	mov    rcx,r15
  4051e7:	call   0x40c958
  4051ec:	cmp    QWORD PTR [rsp+0x38],r15
  4051f1:	mov    r14d,eax
  4051f4:	je     0x4052fc
  4051fa:	call   QWORD PTR [rip+0x10614]        # 0x415814
  405200:	cmp    DWORD PTR [rax],0x22
  405203:	je     0x4052fc
  405209:	test   r14d,r14d
  40520c:	jle    0x4052fc
  405212:	movsxd rax,r14d
  405215:	mov    rdx,QWORD PTR [rip+0xde74]        # 0x413090
  40521c:	mov    rcx,rsi
  40521f:	add    ebp,0x1
  405222:	mov    QWORD PTR [rdx+r12*8],rax
  405226:	call   0x40c9f0
  40522b:	cmp    BYTE PTR [rbx-0x1],0x0
  40522f:	je     0x4052f8
  405235:	mov    r12,rbx
  405238:	add    rbx,0x1
  40523c:	movzx  eax,BYTE PTR [rbx-0x1]
  405240:	mov    r15,rdi
  405243:	lea    rdi,[rbx-0x1]
  405247:	test   al,al
  405249:	je     0x405120
  40524f:	cmp    al,0x2c
  405251:	jne    0x405238
  405253:	movzx  eax,BYTE PTR [r15]
  405257:	cmp    al,0x5c
  405259:	je     0x405238
  40525b:	cmp    r15,r12
  40525e:	ja     0x40512d
  405264:	cmp    al,0x2f
  405266:	jne    0x4052fc
  40526c:	mov    rcx,r15
  40526f:	mov    r14,r15
  405272:	sub    rcx,r12
  405275:	add    rcx,0x1
  405279:	call   0x405450
  40527e:	mov    rsi,rax
  405281:	mov    rax,rsi
  405284:	jmp    0x405196
  405289:	cmp    BYTE PTR [rdx+0x1],0x0
  40528d:	jne    0x40506a
  405293:	mov    DWORD PTR [rip+0xddfb],0x1        # 0x413098
  40529d:	nop    DWORD PTR [rax]
  4052a0:	add    rsp,0x48
  4052a4:	pop    rbx
  4052a5:	pop    rsi
  4052a6:	pop    rdi
  4052a7:	pop    rbp
  4052a8:	pop    r12
  4052aa:	pop    r13
  4052ac:	pop    r14
  4052ae:	pop    r15
  4052b0:	ret    
  4052b1:	mov    r8,QWORD PTR [rsp+0x28]
  4052b6:	mov    edx,DWORD PTR [rsp+0x34]
  4052ba:	mov    ecx,r13d
  4052bd:	call   QWORD PTR [rip+0x102e9]        # 0x4155ac
  4052c3:	test   eax,eax
  4052c5:	jne    0x4052a0
  4052c7:	mov    rax,QWORD PTR [rsp+0x38]
  4052cc:	jmp    0x405215
  4052d1:	mov    rcx,r15
  4052d4:	mov    r14,r15
  4052d7:	sub    rcx,r12
  4052da:	add    rcx,0x1
  4052de:	call   0x405450
  4052e3:	mov    rsi,rax
  4052e6:	jmp    0x405166
  4052eb:	movzx  eax,BYTE PTR [r15-0x1]
  4052f0:	mov    r15,r12
  4052f3:	jmp    0x405264
  4052f8:	xor    eax,eax
  4052fa:	jmp    0x4052a0
  4052fc:	mov    eax,0xffffffdc
  405301:	jmp    0x4052a0
  405303:	nop    DWORD PTR [rax]
  405306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405310:	mov    rax,QWORD PTR [rip+0xdd69]        # 0x413080
  405317:	test   rax,rax
  40531a:	je     0x405345
  40531c:	mov    r9,QWORD PTR [rip+0xdd65]        # 0x413088
  405323:	cmp    DWORD PTR [r9],ecx
  405326:	je     0x405360
  405328:	mov    edx,0x1
  40532d:	jmp    0x40533e
  40532f:	nop
  405330:	lea    r8,[rdx+0x1]
  405334:	cmp    DWORD PTR [r9+r8*4-0x4],ecx
  405339:	je     0x405350
  40533b:	mov    rdx,r8
  40533e:	cmp    rdx,rax
  405341:	jne    0x405330
  405343:	xor    eax,eax
  405345:	repz ret 
  405347:	nop    WORD PTR [rax+rax*1+0x0]
  405350:	shl    rdx,0x3
  405354:	mov    rax,QWORD PTR [rip+0xdd35]        # 0x413090
  40535b:	mov    rax,QWORD PTR [rax+rdx*1]
  40535f:	ret    
  405360:	xor    edx,edx
  405362:	jmp    0x405354
  405364:	xchg   ax,ax
  405366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405370:	mov    eax,DWORD PTR [rip+0xdd0a]        # 0x413080
  405376:	ret    
  405377:	nop    WORD PTR [rax+rax*1+0x0]
  405380:	mov    eax,DWORD PTR [rip+0xdd12]        # 0x413098
  405386:	ret    
  405387:	nop
  405388:	nop
  405389:	nop
  40538a:	nop
  40538b:	nop
  40538c:	nop
  40538d:	nop
  40538e:	nop
  40538f:	nop
  405390:	push   rsi
  405391:	push   rbx
  405392:	sub    rsp,0x28
  405396:	mov    rsi,rcx
  405399:	mov    rcx,QWORD PTR [rcx+0x8]
  40539d:	test   rcx,rcx
  4053a0:	je     0x4053b3
  4053a2:	mov    rbx,QWORD PTR [rcx+0x8]
  4053a6:	call   0x40c9f0
  4053ab:	test   rbx,rbx
  4053ae:	mov    rcx,rbx
  4053b1:	jne    0x4053a2
  4053b3:	mov    rcx,rsi
  4053b6:	add    rsp,0x28
  4053ba:	pop    rbx
  4053bb:	pop    rsi
  4053bc:	jmp    0x40c9f0
  4053c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4053c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053d0:	push   rdi
  4053d1:	push   rsi
  4053d2:	push   rbx
  4053d3:	sub    rsp,0x30
  4053d7:	mov    rax,QWORD PTR [rip+0xb342]        # 0x410720
  4053de:	mov    rbx,QWORD PTR [rip+0x103f7]        # 0x4157dc
  4053e5:	mov    QWORD PTR [rsp+0x68],r9
  4053ea:	mov    QWORD PTR [rsp+0x58],rdx
  4053ef:	mov    rdi,rcx
  4053f2:	mov    QWORD PTR [rsp+0x60],r8
  4053f7:	mov    rsi,QWORD PTR [rax]
  4053fa:	call   rbx
  4053fc:	lea    rdx,[rip+0xa60d]        # 0x40fa10
  405403:	lea    rcx,[rax+0x60]
  405407:	mov    r8,rsi
  40540a:	lea    rsi,[rsp+0x58]
  40540f:	call   0x40ca08
  405414:	mov    QWORD PTR [rsp+0x28],rsi
  405419:	call   rbx
  40541b:	lea    rcx,[rax+0x60]
  40541f:	mov    r8,rsi
  405422:	mov    rdx,rdi
  405425:	call   0x40c950
  40542a:	call   rbx
  40542c:	lea    rdx,[rax+0x60]
  405430:	mov    ecx,0xa
  405435:	call   0x40ca00
  40543a:	call   rbx
  40543c:	lea    rcx,[rax+0x60]
  405440:	call   0x40ca10
  405445:	mov    ecx,0x1
  40544a:	call   0x40ca18
  40544f:	nop
  405450:	sub    rsp,0x28
  405454:	mov    eax,0x1
  405459:	test   rcx,rcx
  40545c:	cmove  rcx,rax
  405460:	call   0x40c9c0
  405465:	test   rax,rax
  405468:	je     0x40546f
  40546a:	add    rsp,0x28
  40546e:	ret    
  40546f:	lea    rcx,[rip+0xa59f]        # 0x40fa15
  405476:	call   0x4053d0
  40547b:	nop
  40547c:	nop    DWORD PTR [rax+0x0]
  405480:	push   rbp
  405481:	push   rdi
  405482:	push   rsi
  405483:	push   rbx
  405484:	sub    rsp,0x28
  405488:	mov    rsi,rdx
  40548b:	mov    edi,r8d
  40548e:	call   0x4063f0
  405493:	mov    rbx,QWORD PTR [rip+0x10342]        # 0x4157dc
  40549a:	mov    rbp,rax
  40549d:	call   rbx
  40549f:	lea    rdx,[rip+0xa57e]        # 0x40fa24
  4054a6:	lea    rcx,[rax+0x60]
  4054aa:	mov    r8,rbp
  4054ad:	call   0x40ca08
  4054b2:	call   rbx
  4054b4:	lea    rdx,[rip+0xa56d]        # 0x40fa28
  4054bb:	lea    rcx,[rax+0x60]
  4054bf:	mov    r9d,edi
  4054c2:	mov    r8,rsi
  4054c5:	call   0x40ca08
  4054ca:	call   rbx
  4054cc:	lea    rcx,[rax+0x60]
  4054d0:	call   0x40ca10
  4054d5:	call   rbx
  4054d7:	lea    rcx,[rax+0x30]
  4054db:	call   0x40ca10
  4054e0:	mov    ecx,0x1
  4054e5:	call   0x40ca18
  4054ea:	nop
  4054eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4054f0:	push   rdi
  4054f1:	push   rsi
  4054f2:	push   rbx
  4054f3:	sub    rsp,0x30
  4054f7:	xor    r9d,r9d
  4054fa:	mov    rsi,rdx
  4054fd:	mov    rdi,r8
  405500:	xor    edx,edx
  405502:	xor    r8d,r8d
  405505:	mov    QWORD PTR [rsp+0x20],0x0
  40550e:	mov    ebx,ecx
  405510:	call   0x406558
  405515:	test   eax,eax
  405517:	jne    0x405534
  405519:	mov    r8,rdi
  40551c:	mov    rdx,rsi
  40551f:	mov    ecx,ebx
  405521:	call   0x4064d8
  405526:	test   eax,eax
  405528:	jne    0x405548
  40552a:	xor    eax,eax
  40552c:	add    rsp,0x30
  405530:	pop    rbx
  405531:	pop    rsi
  405532:	pop    rdi
  405533:	ret    
  405534:	lea    rdx,[rip+0xa509]        # 0x40fa44
  40553b:	mov    r8d,0x289
  405541:	mov    ecx,eax
  405543:	call   0x405480
  405548:	lea    rdx,[rip+0xa4f5]        # 0x40fa44
  40554f:	mov    r8d,0x28c
  405555:	mov    ecx,eax
  405557:	call   0x405480
  40555c:	nop
  40555d:	nop    DWORD PTR [rax]
  405560:	push   r15
  405562:	push   r14
  405564:	push   r13
  405566:	push   r12
  405568:	push   rbp
  405569:	push   rdi
  40556a:	push   rsi
  40556b:	push   rbx
  40556c:	sub    rsp,0x38
  405570:	movsxd rax,edx
  405573:	mov    r15d,ecx
  405576:	mov    r13,r8
  405579:	mov    rbx,QWORD PTR [r8+rax*8]
  40557d:	mov    rbp,rax
  405580:	mov    r12,r9
  405583:	movzx  eax,BYTE PTR [rbx]
  405586:	test   al,al
  405588:	je     0x405680
  40558e:	cmp    al,0x2f
  405590:	je     0x405630
  405596:	lea    r8,[rsp+0x2c]
  40559b:	mov    rdx,rbx
  40559e:	xor    ebx,ebx
  4055a0:	call   0x4064f8
  4055a5:	test   eax,eax
  4055a7:	je     0x4056a0
  4055ad:	lea    rdx,[rsp+0x28]
  4055b2:	xor    r8d,r8d
  4055b5:	mov    ecx,r15d
  4055b8:	call   0x4064d8
  4055bd:	test   eax,eax
  4055bf:	jne    0x4056f6
  4055c5:	movsxd rcx,DWORD PTR [rsp+0x28]
  4055ca:	test   ecx,ecx
  4055cc:	jle    0x405662
  4055d2:	shl    rcx,0x2
  4055d6:	call   0x405450
  4055db:	xor    edx,edx
  4055dd:	mov    r8,rax
  4055e0:	mov    ecx,r15d
  4055e3:	mov    r14,rax
  4055e6:	call   0x4064d8
  4055eb:	test   eax,eax
  4055ed:	jne    0x405723
  4055f3:	mov    eax,DWORD PTR [rsp+0x28]
  4055f7:	xor    esi,esi
  4055f9:	mov    rdi,r14
  4055fc:	test   eax,eax
  4055fe:	jle    0x40561f
  405600:	mov    ecx,DWORD PTR [rdi]
  405602:	mov    r9,r12
  405605:	mov    r8,r13
  405608:	mov    edx,ebp
  40560a:	add    esi,0x1
  40560d:	add    rdi,0x4
  405611:	call   0x405560
  405616:	add    rbx,rax
  405619:	cmp    DWORD PTR [rsp+0x28],esi
  40561d:	jg     0x405600
  40561f:	mov    rcx,r14
  405622:	call   0x40c9f0
  405627:	mov    rax,rbx
  40562a:	jmp    0x405665
  40562c:	nop    DWORD PTR [rax+0x0]
  405630:	lea    rdi,[rip+0xa415]        # 0x40fa4c
  405637:	mov    ecx,0x2
  40563c:	mov    rsi,rbx
  40563f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405641:	je     0x405680
  405643:	lea    r8,[rsp+0x2c]
  405648:	mov    rdx,rbx
  40564b:	mov    ecx,r15d
  40564e:	call   0x406500
  405653:	test   eax,eax
  405655:	je     0x4056d0
  405657:	cmp    eax,0xffffff83
  40565a:	jne    0x40570a
  405660:	xor    ebx,ebx
  405662:	mov    rax,rbx
  405665:	add    rsp,0x38
  405669:	pop    rbx
  40566a:	pop    rsi
  40566b:	pop    rdi
  40566c:	pop    rbp
  40566d:	pop    r12
  40566f:	pop    r13
  405671:	pop    r14
  405673:	pop    r15
  405675:	ret    
  405676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405680:	mov    ecx,0x10
  405685:	call   0x405450
  40568a:	mov    rdx,QWORD PTR [r12]
  40568e:	mov    DWORD PTR [rax+0x8],r15d
  405692:	mov    QWORD PTR [rax],rdx
  405695:	mov    QWORD PTR [r12],rax
  405699:	mov    eax,0x1
  40569e:	jmp    0x405665
  4056a0:	mov    ecx,0x10
  4056a5:	mov    ebx,DWORD PTR [rsp+0x2c]
  4056a9:	call   0x405450
  4056ae:	mov    rdx,QWORD PTR [r12]
  4056b2:	mov    DWORD PTR [rax+0x8],ebx
  4056b5:	mov    ebx,0x1
  4056ba:	mov    QWORD PTR [rax],rdx
  4056bd:	mov    QWORD PTR [r12],rax
  4056c1:	jmp    0x4055ad
  4056c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056d0:	mov    ecx,0x10
  4056d5:	mov    ebx,DWORD PTR [rsp+0x2c]
  4056d9:	call   0x405450
  4056de:	mov    rdx,QWORD PTR [r12]
  4056e2:	mov    DWORD PTR [rax+0x8],ebx
  4056e5:	mov    ebx,0x1
  4056ea:	mov    QWORD PTR [rax],rdx
  4056ed:	mov    QWORD PTR [r12],rax
  4056f1:	jmp    0x405662
  4056f6:	lea    rdx,[rip+0xa347]        # 0x40fa44
  4056fd:	mov    r8d,0x158
  405703:	mov    ecx,eax
  405705:	call   0x405480
  40570a:	mov    ecx,eax
  40570c:	call   0x4063f0
  405711:	lea    rcx,[rip+0xa336]        # 0x40fa4e
  405718:	mov    r8,rax
  40571b:	mov    rdx,rbx
  40571e:	call   0x4053d0
  405723:	lea    rdx,[rip+0xa31a]        # 0x40fa44
  40572a:	mov    r8d,0x15d
  405730:	mov    ecx,eax
  405732:	call   0x405480
  405737:	nop
  405738:	nop    DWORD PTR [rax+rax*1+0x0]
  405740:	push   r12
  405742:	push   rbp
  405743:	push   rdi
  405744:	push   rsi
  405745:	push   rbx
  405746:	sub    rsp,0x30
  40574a:	mov    rbx,rcx
  40574d:	mov    rdi,rdx
  405750:	mov    ecx,0xffffffff
  405755:	mov    eax,DWORD PTR [rbx]
  405757:	test   eax,eax
  405759:	je     0x405773
  40575b:	mov    rcx,QWORD PTR [rbx+0x8]
  40575f:	mov    rax,QWORD PTR [rcx+0x8]
  405763:	mov    esi,DWORD PTR [rcx]
  405765:	mov    QWORD PTR [rbx+0x8],rax
  405769:	call   0x40c9f0
  40576e:	sub    DWORD PTR [rbx],0x1
  405771:	mov    ecx,esi
  405773:	lea    rsi,[rsp+0x2c]
  405778:	xor    r8d,r8d
  40577b:	mov    DWORD PTR [rdi],ecx
  40577d:	mov    rdx,rsi
  405780:	call   0x4054f0
  405785:	test   eax,eax
  405787:	jne    0x405816
  40578d:	movsxd rcx,DWORD PTR [rsp+0x2c]
  405792:	test   ecx,ecx
  405794:	jle    0x40580b
  405796:	shl    rcx,0x2
  40579a:	call   0x405450
  40579f:	mov    ecx,DWORD PTR [rdi]
  4057a1:	mov    r8,rax
  4057a4:	mov    rdx,rsi
  4057a7:	mov    rbp,rax
  4057aa:	call   0x4054f0
  4057af:	test   eax,eax
  4057b1:	jne    0x40582a
  4057b3:	mov    eax,DWORD PTR [rsp+0x2c]
  4057b7:	sub    eax,0x1
  4057ba:	js     0x405803
  4057bc:	movsxd rdx,eax
  4057bf:	mov    eax,eax
  4057c1:	lea    rsi,[rbp+rdx*4+0x0]
  4057c6:	sub    rdx,rax
  4057c9:	lea    rdi,[rbp+rdx*4-0x4]
  4057ce:	xchg   ax,ax
  4057d0:	mov    r12d,DWORD PTR [rsi]
  4057d3:	mov    ecx,0x10
  4057d8:	call   0x405450
  4057dd:	xor    r10d,r10d
  4057e0:	mov    DWORD PTR [rax],r12d
  4057e3:	mov    edx,DWORD PTR [rbx]
  4057e5:	test   edx,edx
  4057e7:	je     0x4057ed
  4057e9:	mov    r10,QWORD PTR [rbx+0x8]
  4057ed:	sub    rsi,0x4
  4057f1:	add    edx,0x1
  4057f4:	mov    QWORD PTR [rax+0x8],r10
  4057f8:	cmp    rsi,rdi
  4057fb:	mov    QWORD PTR [rbx+0x8],rax
  4057ff:	mov    DWORD PTR [rbx],edx
  405801:	jne    0x4057d0
  405803:	mov    rcx,rbp
  405806:	call   0x40c9f0
  40580b:	add    rsp,0x30
  40580f:	pop    rbx
  405810:	pop    rsi
  405811:	pop    rdi
  405812:	pop    rbp
  405813:	pop    r12
  405815:	ret    
  405816:	lea    rdx,[rip+0xa227]        # 0x40fa44
  40581d:	mov    r8d,0x2b5
  405823:	mov    ecx,eax
  405825:	call   0x405480
  40582a:	lea    rdx,[rip+0xa213]        # 0x40fa44
  405831:	mov    r8d,0x2b8
  405837:	mov    ecx,eax
  405839:	call   0x405480
  40583e:	nop
  40583f:	nop
  405840:	push   r15
  405842:	push   r14
  405844:	push   r13
  405846:	push   r12
  405848:	push   rbp
  405849:	push   rdi
  40584a:	push   rsi
  40584b:	push   rbx
  40584c:	sub    rsp,0x28
  405850:	test   rcx,rcx
  405853:	mov    rsi,rcx
  405856:	je     0x40594b
  40585c:	movzx  eax,BYTE PTR [rsi]
  40585f:	lea    edx,[rax-0x1]
  405862:	cmp    dl,0x1f
  405865:	jbe    0x405969
  40586b:	cmp    al,0x7f
  40586d:	je     0x405969
  405873:	mov    rcx,rsi
  405876:	call   0x40c980
  40587b:	lea    rcx,[rax*4+0x1]
  405883:	call   0x405450
  405888:	mov    BYTE PTR [rax],0x0
  40588b:	movzx  ebx,BYTE PTR [rsi]
  40588e:	mov    r12,rax
  405891:	mov    rdi,r12
  405894:	lea    eax,[rbx-0x30]
  405897:	cmp    al,0x9
  405899:	ja     0x4058a8
  40589b:	mov    BYTE PTR [r12],0x5c
  4058a0:	movzx  ebx,BYTE PTR [rsi]
  4058a3:	lea    rdi,[r12+0x1]
  4058a8:	test   bl,bl
  4058aa:	je     0x405901
  4058ac:	mov    r13,QWORD PTR [rip+0x10001]        # 0x4158b4
  4058b3:	mov    r14,QWORD PTR [rip+0xff8a]        # 0x415844
  4058ba:	lea    rbp,[rip+0xa1ef]        # 0x40fab0
  4058c1:	test   bl,bl
  4058c3:	js     0x4058f0
  4058c5:	movsx  r15d,bl
  4058c9:	mov    ecx,r15d
  4058cc:	call   r13
  4058cf:	test   eax,eax
  4058d1:	jne    0x405930
  4058d3:	lea    edx,[rbx-0x20]
  4058d6:	cmp    dl,0x5e
  4058d9:	ja     0x4058f0
  4058db:	movzx  edx,dl
  4058de:	movsxd rax,DWORD PTR [rbp+rdx*4+0x0]
  4058e3:	add    rax,rbp
  4058e6:	jmp    rax
  4058e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4058f0:	mov    BYTE PTR [rdi],bl
  4058f2:	add    rdi,0x1
  4058f6:	add    rsi,0x1
  4058fa:	movzx  ebx,BYTE PTR [rsi]
  4058fd:	test   bl,bl
  4058ff:	jne    0x4058c1
  405901:	mov    rax,r12
  405904:	mov    BYTE PTR [rdi],0x0
  405907:	add    rsp,0x28
  40590b:	pop    rbx
  40590c:	pop    rsi
  40590d:	pop    rdi
  40590e:	pop    rbp
  40590f:	pop    r12
  405911:	pop    r13
  405913:	pop    r14
  405915:	pop    r15
  405917:	ret    
  405918:	nop    DWORD PTR [rax+rax*1+0x0]
  405920:	mov    BYTE PTR [rdi],0x5c
  405923:	movzx  eax,BYTE PTR [rsi]
  405926:	add    rdi,0x2
  40592a:	mov    BYTE PTR [rdi-0x1],al
  40592d:	jmp    0x4058f6
  40592f:	nop
  405930:	mov    rcx,rdi
  405933:	mov    r9d,r15d
  405936:	lea    r8,[rip+0xa16b]        # 0x40faa8
  40593d:	mov    edx,0x4
  405942:	add    rdi,0x4
  405946:	call   r14
  405949:	jmp    0x4058f6
  40594b:	lea    rdx,[rip+0xa0f2]        # 0x40fa44
  405952:	lea    rcx,[rip+0xa113]        # 0x40fa6c
  405959:	mov    r8d,0x43
  40595f:	call   0x4089c0
  405964:	jmp    0x40585c
  405969:	lea    rcx,[rip+0xa108]        # 0x40fa78
  405970:	movsx  edx,al
  405973:	call   0x4053d0
  405978:	nop
  405979:	nop    DWORD PTR [rax+0x0]
  405980:	push   rbx
  405981:	sub    rsp,0x20
  405985:	call   0x405840
  40598a:	mov    rbx,rax
  40598d:	call   QWORD PTR [rip+0xfe49]        # 0x4157dc
  405993:	lea    rdx,[rax+0x30]
  405997:	mov    rcx,rbx
  40599a:	call   0x40c9f8
  40599f:	mov    rcx,rbx
  4059a2:	add    rsp,0x20
  4059a6:	pop    rbx
  4059a7:	jmp    0x40c9f0
  4059ac:	nop    DWORD PTR [rax+0x0]
  4059b0:	push   r13
  4059b2:	push   r12
  4059b4:	push   rbp
  4059b5:	push   rdi
  4059b6:	push   rsi
  4059b7:	push   rbx
  4059b8:	sub    rsp,0x38
  4059bc:	mov    rdi,rdx
  4059bf:	mov    r12d,ecx
  4059c2:	mov    edx,0x2f
  4059c7:	mov    rcx,rdi
  4059ca:	mov    r13,r8
  4059cd:	call   0x40c968
  4059d2:	test   rax,rax
  4059d5:	je     0x405a43
  4059d7:	sub    rax,rdi
  4059da:	lea    rbp,[rax+0x1]
  4059de:	mov    rbx,rax
  4059e1:	mov    rcx,rbp
  4059e4:	call   0x405450
  4059e9:	mov    r8,rbp
  4059ec:	mov    rdx,rdi
  4059ef:	mov    rcx,rax
  4059f2:	mov    rsi,rax
  4059f5:	call   0x40c970
  4059fa:	lea    r8,[rsp+0x2c]
  4059ff:	mov    BYTE PTR [rsi+rbx*1],0x0
  405a03:	mov    rdx,rsi
  405a06:	mov    ecx,r12d
  405a09:	call   0x406500
  405a0e:	test   eax,eax
  405a10:	mov    ebx,eax
  405a12:	je     0x405a30
  405a14:	mov    rcx,rsi
  405a17:	call   0x40c9f0
  405a1c:	mov    eax,ebx
  405a1e:	add    rsp,0x38
  405a22:	pop    rbx
  405a23:	pop    rsi
  405a24:	pop    rdi
  405a25:	pop    rbp
  405a26:	pop    r12
  405a28:	pop    r13
  405a2a:	ret    
  405a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  405a30:	mov    ecx,DWORD PTR [rsp+0x2c]
  405a34:	mov    r8,r13
  405a37:	mov    rdx,rdi
  405a3a:	call   0x406530
  405a3f:	mov    ebx,eax
  405a41:	jmp    0x405a14
  405a43:	mov    r8,r13
  405a46:	mov    rdx,rdi
  405a49:	mov    ecx,r12d
  405a4c:	call   0x406530
  405a51:	mov    ebx,eax
  405a53:	mov    eax,ebx
  405a55:	add    rsp,0x38
  405a59:	pop    rbx
  405a5a:	pop    rsi
  405a5b:	pop    rdi
  405a5c:	pop    rbp
  405a5d:	pop    r12
  405a5f:	pop    r13
  405a61:	ret    
  405a62:	nop    DWORD PTR [rax+0x0]
  405a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a70:	push   rbp
  405a71:	push   rdi
  405a72:	push   rsi
  405a73:	push   rbx
  405a74:	sub    rsp,0x38
  405a78:	lea    r8,[rsp+0x28]
  405a7d:	mov    ebx,ecx
  405a7f:	mov    esi,edx
  405a81:	call   0x406440
  405a86:	test   eax,eax
  405a88:	jne    0x405b96
  405a8e:	mov    eax,DWORD PTR [rsp+0x28]
  405a92:	test   eax,eax
  405a94:	jle    0x405b71
  405a9a:	add    eax,0x1
  405a9d:	cdqe   
  405a9f:	lea    rcx,[rax*4+0x0]
  405aa7:	call   0x405450
  405aac:	mov    edx,esi
  405aae:	mov    r8,rax
  405ab1:	mov    ecx,ebx
  405ab3:	mov    rbp,rax
  405ab6:	call   0x406460
  405abb:	test   eax,eax
  405abd:	jne    0x405b82
  405ac3:	lea    rdx,[rsp+0x2c]
  405ac8:	xor    r8d,r8d
  405acb:	mov    ecx,ebx
  405acd:	call   0x406498
  405ad2:	test   eax,eax
  405ad4:	jne    0x405bbe
  405ada:	mov    eax,DWORD PTR [rsp+0x2c]
  405ade:	add    eax,0x1
  405ae1:	cdqe   
  405ae3:	lea    rcx,[rax*4+0x0]
  405aeb:	call   0x405450
  405af0:	xor    edx,edx
  405af2:	mov    r8,rax
  405af5:	mov    ecx,ebx
  405af7:	mov    rsi,rax
  405afa:	call   0x406498
  405aff:	test   eax,eax
  405b01:	jne    0x405baa
  405b07:	mov    eax,DWORD PTR [rsp+0x28]
  405b0b:	test   eax,eax
  405b0d:	jle    0x405b7e
  405b0f:	mov    edi,DWORD PTR [rsp+0x2c]
  405b13:	mov    r11,rbp
  405b16:	mov    ebx,0x1
  405b1b:	lea    edx,[rdi-0x1]
  405b1e:	lea    r10,[rsi+rdx*4+0x4]
  405b23:	test   edi,edi
  405b25:	jle    0x405b44
  405b27:	mov    r9d,DWORD PTR [r11]
  405b2a:	cmp    r9d,DWORD PTR [rsi]
  405b2d:	je     0x405b51
  405b2f:	lea    rdx,[rsi+0x4]
  405b33:	jmp    0x405b3f
  405b35:	add    rdx,0x4
  405b39:	cmp    DWORD PTR [rdx-0x4],r9d
  405b3d:	je     0x405b51
  405b3f:	cmp    rdx,r10
  405b42:	jne    0x405b35
  405b44:	cmp    eax,ebx
  405b46:	jle    0x405b7e
  405b48:	add    ebx,0x1
  405b4b:	add    r11,0x4
  405b4f:	jmp    0x405b23
  405b51:	mov    ebx,0x1
  405b56:	mov    rcx,rbp
  405b59:	call   0x40c9f0
  405b5e:	mov    rcx,rsi
  405b61:	call   0x40c9f0
  405b66:	mov    eax,ebx
  405b68:	add    rsp,0x38
  405b6c:	pop    rbx
  405b6d:	pop    rsi
  405b6e:	pop    rdi
  405b6f:	pop    rbp
  405b70:	ret    
  405b71:	xor    ebx,ebx
  405b73:	mov    eax,ebx
  405b75:	add    rsp,0x38
  405b79:	pop    rbx
  405b7a:	pop    rsi
  405b7b:	pop    rdi
  405b7c:	pop    rbp
  405b7d:	ret    
  405b7e:	xor    ebx,ebx
  405b80:	jmp    0x405b56
  405b82:	lea    rdx,[rip+0x9ebb]        # 0x40fa44
  405b89:	mov    r8d,0xc2
  405b8f:	mov    ecx,eax
  405b91:	call   0x405480
  405b96:	lea    rdx,[rip+0x9ea7]        # 0x40fa44
  405b9d:	mov    r8d,0xbb
  405ba3:	mov    ecx,eax
  405ba5:	call   0x405480
  405baa:	lea    rdx,[rip+0x9e93]        # 0x40fa44
  405bb1:	mov    r8d,0xc5
  405bb7:	mov    ecx,eax
  405bb9:	call   0x405480
  405bbe:	lea    rdx,[rip+0x9e7f]        # 0x40fa44
  405bc5:	mov    r8d,0xc3
  405bcb:	mov    ecx,eax
  405bcd:	call   0x405480
  405bd2:	nop
  405bd3:	nop    DWORD PTR [rax]
  405bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405be0:	sub    rsp,0x28
  405be4:	mov    ecx,0x10
  405be9:	call   0x405450
  405bee:	mov    QWORD PTR [rax],0x0
  405bf5:	mov    DWORD PTR [rax+0x8],0xffffffff
  405bfc:	add    rsp,0x28
  405c00:	ret    
  405c01:	nop    DWORD PTR [rax+rax*1+0x0]
  405c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c10:	push   rsi
  405c11:	push   rbx
  405c12:	sub    rsp,0x28
  405c16:	mov    rbx,rcx
  405c19:	mov    ecx,0x10
  405c1e:	mov    esi,edx
  405c20:	call   0x405450
  405c25:	mov    rdx,QWORD PTR [rbx]
  405c28:	mov    DWORD PTR [rax+0x8],esi
  405c2b:	mov    QWORD PTR [rax],rdx
  405c2e:	mov    QWORD PTR [rbx],rax
  405c31:	add    rsp,0x28
  405c35:	pop    rbx
  405c36:	pop    rsi
  405c37:	ret    
  405c38:	nop    DWORD PTR [rax+rax*1+0x0]
  405c40:	mov    rax,QWORD PTR [rcx]
  405c43:	test   rax,rax
  405c46:	jne    0x405c58
  405c48:	jmp    0x405c65
  405c4a:	nop    WORD PTR [rax+rax*1+0x0]
  405c50:	mov    rax,QWORD PTR [rax]
  405c53:	test   rax,rax
  405c56:	je     0x405c63
  405c58:	cmp    DWORD PTR [rax+0x8],edx
  405c5b:	jne    0x405c50
  405c5d:	mov    eax,0x1
  405c62:	ret    
  405c63:	repz ret 
  405c65:	xor    eax,eax
  405c67:	ret    
  405c68:	nop    DWORD PTR [rax+rax*1+0x0]
  405c70:	push   rbx
  405c71:	sub    rsp,0x20
  405c75:	test   rcx,rcx
  405c78:	je     0x405c90
  405c7a:	nop    WORD PTR [rax+rax*1+0x0]
  405c80:	mov    rbx,QWORD PTR [rcx]
  405c83:	call   0x40c9f0
  405c88:	test   rbx,rbx
  405c8b:	mov    rcx,rbx
  405c8e:	jne    0x405c80
  405c90:	add    rsp,0x20
  405c94:	pop    rbx
  405c95:	ret    
  405c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ca0:	mov    eax,0x1
  405ca5:	test   edx,edx
  405ca7:	je     0x405cd5
  405ca9:	mov    rdx,QWORD PTR [r8]
  405cac:	test   rdx,rdx
  405caf:	je     0x405ccd
  405cb1:	cmp    ecx,DWORD PTR [rdx+0x8]
  405cb4:	jne    0x405cc5
  405cb6:	jmp    0x405cd7
  405cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  405cc0:	cmp    ecx,DWORD PTR [rdx+0x8]
  405cc3:	je     0x405cd0
  405cc5:	mov    rdx,QWORD PTR [rdx]
  405cc8:	test   rdx,rdx
  405ccb:	jne    0x405cc0
  405ccd:	xor    eax,eax
  405ccf:	ret    
  405cd0:	mov    eax,0x1
  405cd5:	repz ret 
  405cd7:	repz ret 
  405cd9:	nop    DWORD PTR [rax+0x0]
  405ce0:	push   r13
  405ce2:	push   r12
  405ce4:	push   rbp
  405ce5:	push   rdi
  405ce6:	push   rsi
  405ce7:	push   rbx
  405ce8:	sub    rsp,0x28
  405cec:	test   edx,edx
  405cee:	jle    0x405d2e
  405cf0:	mov    r13,r9
  405cf3:	mov    rbp,r8
  405cf6:	mov    edi,edx
  405cf8:	mov    r12d,ecx
  405cfb:	xor    esi,esi
  405cfd:	xor    ebx,ebx
  405cff:	nop
  405d00:	mov    r9,r13
  405d03:	mov    r8,rbp
  405d06:	mov    edx,ebx
  405d08:	mov    ecx,r12d
  405d0b:	call   0x405560
  405d10:	test   rax,rax
  405d13:	je     0x405d32
  405d15:	add    ebx,0x1
  405d18:	add    rsi,rax
  405d1b:	cmp    ebx,edi
  405d1d:	jne    0x405d00
  405d1f:	mov    eax,esi
  405d21:	add    rsp,0x28
  405d25:	pop    rbx
  405d26:	pop    rsi
  405d27:	pop    rdi
  405d28:	pop    rbp
  405d29:	pop    r12
  405d2b:	pop    r13
  405d2d:	ret    
  405d2e:	xor    eax,eax
  405d30:	jmp    0x405d21
  405d32:	movsxd rbx,ebx
  405d35:	lea    rcx,[rip+0x9ef0]        # 0x40fc2c
  405d3c:	mov    rdx,QWORD PTR [rbp+rbx*8+0x0]
  405d41:	call   0x4053d0
  405d46:	nop
  405d47:	nop    WORD PTR [rax+rax*1+0x0]
  405d50:	push   rdi
  405d51:	push   rsi
  405d52:	push   rbx
  405d53:	sub    rsp,0x20
  405d57:	mov    rsi,rdx
  405d5a:	mov    rdi,rcx
  405d5d:	call   0x40c980
  405d62:	mov    rcx,rsi
  405d65:	mov    rbx,rax
  405d68:	call   0x40c980
  405d6d:	xor    r8d,r8d
  405d70:	cmp    rbx,rax
  405d73:	jb     0x405d8d
  405d75:	sub    rbx,rax
  405d78:	mov    rdx,rsi
  405d7b:	lea    rcx,[rdi+rbx*1]
  405d7f:	call   0x40c990
  405d84:	xor    r8d,r8d
  405d87:	test   eax,eax
  405d89:	sete   r8b
  405d8d:	mov    eax,r8d
  405d90:	add    rsp,0x20
  405d94:	pop    rbx
  405d95:	pop    rsi
  405d96:	pop    rdi
  405d97:	ret    
  405d98:	nop    DWORD PTR [rax+rax*1+0x0]
  405da0:	push   r15
  405da2:	push   r14
  405da4:	push   r13
  405da6:	push   r12
  405da8:	push   rbp
  405da9:	push   rdi
  405daa:	push   rsi
  405dab:	push   rbx
  405dac:	sub    rsp,0x38
  405db0:	cmp    BYTE PTR [rdx],0x0
  405db3:	mov    ebp,0xffffffcf
  405db8:	je     0x405e16
  405dba:	mov    ebx,ecx
  405dbc:	mov    rcx,rdx
  405dbf:	mov    r12,r8
  405dc2:	mov    rdi,rdx
  405dc5:	call   0x40c940
  405dca:	test   rax,rax
  405dcd:	mov    rsi,rax
  405dd0:	je     0x405ebf
  405dd6:	mov    edx,0x2f
  405ddb:	mov    rcx,rax
  405dde:	call   0x40c968
  405de3:	test   rax,rax
  405de6:	mov    r13,rax
  405de9:	je     0x405ea3
  405def:	lea    r15,[rsp+0x28]
  405df4:	xor    r8d,r8d
  405df7:	mov    BYTE PTR [rax],0x0
  405dfa:	mov    ecx,ebx
  405dfc:	mov    rdx,r15
  405dff:	call   0x4064e0
  405e04:	test   eax,eax
  405e06:	mov    r14d,eax
  405e09:	je     0x405e30
  405e0b:	mov    rcx,rsi
  405e0e:	mov    ebp,r14d
  405e11:	call   0x40c9f0
  405e16:	mov    eax,ebp
  405e18:	add    rsp,0x38
  405e1c:	pop    rbx
  405e1d:	pop    rsi
  405e1e:	pop    rdi
  405e1f:	pop    rbp
  405e20:	pop    r12
  405e22:	pop    r13
  405e24:	pop    r14
  405e26:	pop    r15
  405e28:	ret    
  405e29:	nop    DWORD PTR [rax+0x0]
  405e30:	mov    rax,QWORD PTR [rsp+0x28]
  405e35:	lea    rcx,[rax+0x1]
  405e39:	call   0x405450
  405e3e:	mov    rdx,r15
  405e41:	mov    r8,rax
  405e44:	mov    ecx,ebx
  405e46:	mov    r14,rax
  405e49:	call   0x4064e0
  405e4e:	test   eax,eax
  405e50:	mov    r15d,eax
  405e53:	jne    0x405e70
  405e55:	add    r13,0x1
  405e59:	cmp    BYTE PTR [rdi],0x2f
  405e5c:	mov    rdx,rsi
  405e5f:	mov    rcx,r14
  405e62:	je     0x405e85
  405e64:	call   0x405d50
  405e69:	test   eax,eax
  405e6b:	mov    r15d,ebp
  405e6e:	jne    0x405e91
  405e70:	mov    rcx,rsi
  405e73:	mov    ebp,r15d
  405e76:	call   0x40c9f0
  405e7b:	mov    rcx,r14
  405e7e:	call   0x40c9f0
  405e83:	jmp    0x405e16
  405e85:	call   0x40c990
  405e8a:	test   eax,eax
  405e8c:	mov    r15d,ebp
  405e8f:	jne    0x405e70
  405e91:	mov    r8,r12
  405e94:	mov    rdx,r13
  405e97:	mov    ecx,ebx
  405e99:	call   0x406458
  405e9e:	mov    r15d,eax
  405ea1:	jmp    0x405e70
  405ea3:	mov    rcx,rsi
  405ea6:	call   0x40c9f0
  405eab:	mov    r8,r12
  405eae:	mov    rdx,rdi
  405eb1:	mov    ecx,ebx
  405eb3:	call   0x406458
  405eb8:	mov    ebp,eax
  405eba:	jmp    0x405e16
  405ebf:	mov    ebp,0xffffffc3
  405ec4:	jmp    0x405e16
  405ec9:	nop    DWORD PTR [rax+0x0]
  405ed0:	push   r12
  405ed2:	push   rbp
  405ed3:	push   rdi
  405ed4:	push   rsi
  405ed5:	push   rbx
  405ed6:	sub    rsp,0x30
  405eda:	xor    edi,edi
  405edc:	lea    r8,[rsp+0x28]
  405ee1:	mov    ebx,ecx
  405ee3:	mov    rbp,rdx
  405ee6:	call   0x405da0
  405eeb:	lea    rdx,[rsp+0x2c]
  405ef0:	test   eax,eax
  405ef2:	mov    ecx,ebx
  405ef4:	sete   dil
  405ef8:	xor    r8d,r8d
  405efb:	call   0x4064d8
  405f00:	test   eax,eax
  405f02:	jne    0x405f70
  405f04:	mov    eax,DWORD PTR [rsp+0x2c]
  405f08:	add    eax,0x1
  405f0b:	cdqe   
  405f0d:	lea    rcx,[rax*4+0x0]
  405f15:	call   0x405450
  405f1a:	xor    edx,edx
  405f1c:	mov    r8,rax
  405f1f:	mov    ecx,ebx
  405f21:	mov    r12,rax
  405f24:	call   0x4064d8
  405f29:	test   eax,eax
  405f2b:	jne    0x405f84
  405f2d:	mov    eax,DWORD PTR [rsp+0x2c]
  405f31:	xor    ebx,ebx
  405f33:	mov    rsi,r12
  405f36:	test   eax,eax
  405f38:	jle    0x405f5a
  405f3a:	nop    WORD PTR [rax+rax*1+0x0]
  405f40:	mov    ecx,DWORD PTR [rsi]
  405f42:	mov    rdx,rbp
  405f45:	add    ebx,0x1
  405f48:	add    rsi,0x4
  405f4c:	call   0x405ed0
  405f51:	add    rdi,rax
  405f54:	cmp    DWORD PTR [rsp+0x2c],ebx
  405f58:	jg     0x405f40
  405f5a:	mov    rcx,r12
  405f5d:	call   0x40c9f0
  405f62:	mov    rax,rdi
  405f65:	add    rsp,0x30
  405f69:	pop    rbx
  405f6a:	pop    rsi
  405f6b:	pop    rdi
  405f6c:	pop    rbp
  405f6d:	pop    r12
  405f6f:	ret    
  405f70:	lea    rdx,[rip+0x9acd]        # 0x40fa44
  405f77:	mov    r8d,0x1e9
  405f7d:	mov    ecx,eax
  405f7f:	call   0x405480
  405f84:	lea    rdx,[rip+0x9ab9]        # 0x40fa44
  405f8b:	mov    r8d,0x1ef
  405f91:	mov    ecx,eax
  405f93:	call   0x405480
  405f98:	nop
  405f99:	nop    DWORD PTR [rax+0x0]
  405fa0:	push   rdi
  405fa1:	push   rsi
  405fa2:	push   rbx
  405fa3:	sub    rsp,0x20
  405fa7:	test   edx,edx
  405fa9:	jle    0x405fd8
  405fab:	lea    eax,[rdx-0x1]
  405fae:	mov    esi,ecx
  405fb0:	mov    rbx,r8
  405fb3:	lea    rdi,[r8+rax*8+0x8]
  405fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  405fc0:	mov    rdx,QWORD PTR [rbx]
  405fc3:	mov    ecx,esi
  405fc5:	call   0x405ed0
  405fca:	test   rax,rax
  405fcd:	je     0x405fe2
  405fcf:	add    rbx,0x8
  405fd3:	cmp    rbx,rdi
  405fd6:	jne    0x405fc0
  405fd8:	xor    eax,eax
  405fda:	add    rsp,0x20
  405fde:	pop    rbx
  405fdf:	pop    rsi
  405fe0:	pop    rdi
  405fe1:	ret    
  405fe2:	mov    rdx,QWORD PTR [rbx]
  405fe5:	lea    rcx,[rip+0x9c52]        # 0x40fc3e
  405fec:	call   0x4053d0
  405ff1:	nop
  405ff2:	nop    DWORD PTR [rax+0x0]
  405ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406000:	push   rdi
  406001:	push   rsi
  406002:	push   rbx
  406003:	sub    rsp,0x20
  406007:	mov    r10d,0x1
  40600d:	mov    DWORD PTR [rdx],0x1
  406013:	mov    rsi,rcx
  406016:	mov    rdi,r8
  406019:	movzx  r9d,BYTE PTR [rcx]
  40601d:	mov    rax,rcx
  406020:	jmp    0x406034
  406022:	movzx  r9d,BYTE PTR [rax]
  406026:	xor    r11d,r11d
  406029:	cmp    r9b,0x2c
  40602d:	sete   r11b
  406031:	add    r10d,r11d
  406034:	add    rax,0x1
  406038:	test   r9b,r9b
  40603b:	jne    0x406022
  40603d:	mov    DWORD PTR [rdx],r10d
  406040:	movsxd r10,r10d
  406043:	lea    rcx,[r10*8+0x0]
  40604b:	call   0x405450
  406050:	lea    rdx,[rip+0x9bfc]        # 0x40fc53
  406057:	mov    QWORD PTR [rdi],rax
  40605a:	mov    rcx,rsi
  40605d:	mov    rbx,rax
  406060:	call   0x40c960
  406065:	test   rax,rax
  406068:	je     0x406093
  40606a:	nop    WORD PTR [rax+rax*1+0x0]
  406070:	mov    rcx,rax
  406073:	add    rbx,0x8
  406077:	call   0x40c940
  40607c:	lea    rdx,[rip+0x9bd0]        # 0x40fc53
  406083:	mov    QWORD PTR [rbx-0x8],rax
  406087:	xor    ecx,ecx
  406089:	call   0x40c960
  40608e:	test   rax,rax
  406091:	jne    0x406070
  406093:	add    rsp,0x20
  406097:	pop    rbx
  406098:	pop    rsi
  406099:	pop    rdi
  40609a:	ret    
  40609b:	nop    DWORD PTR [rax+rax*1+0x0]
  4060a0:	push   rbp
  4060a1:	push   rdi
  4060a2:	push   rsi
  4060a3:	push   rbx
  4060a4:	sub    rsp,0x28
  4060a8:	mov    r11d,0x1
  4060ae:	movzx  r10d,BYTE PTR [rcx]
  4060b2:	mov    rdi,rcx
  4060b5:	mov    rbp,r8
  4060b8:	mov    rsi,r9
  4060bb:	mov    rax,rcx
  4060be:	jmp    0x4060d2
  4060c0:	movzx  r10d,BYTE PTR [rax]
  4060c4:	xor    r9d,r9d
  4060c7:	cmp    r10b,0x2c
  4060cb:	sete   r9b
  4060cf:	add    r11d,r9d
  4060d2:	add    rax,0x1
  4060d6:	test   r10b,r10b
  4060d9:	jne    0x4060c0
  4060db:	mov    DWORD PTR [rdx],r11d
  4060de:	movsxd r11,r11d
  4060e1:	lea    rcx,[r11*8+0x0]
  4060e9:	call   0x405450
  4060ee:	lea    rdx,[rip+0x9b5e]        # 0x40fc53
  4060f5:	mov    QWORD PTR [rbp+0x0],rax
  4060f9:	mov    rcx,rdi
  4060fc:	mov    rbx,rax
  4060ff:	call   0x40c960
  406104:	test   rax,rax
  406107:	je     0x406133
  406109:	nop    DWORD PTR [rax+0x0]
  406110:	mov    rcx,rax
  406113:	add    rbx,0x8
  406117:	call   0x40c940
  40611c:	lea    rdx,[rip+0x9b30]        # 0x40fc53
  406123:	mov    QWORD PTR [rbx-0x8],rax
  406127:	xor    ecx,ecx
  406129:	call   0x40c960
  40612e:	test   rax,rax
  406131:	jne    0x406110
  406133:	mov    ecx,0x10
  406138:	call   0x405450
  40613d:	mov    QWORD PTR [rax],0x0
  406144:	mov    DWORD PTR [rax+0x8],0xffffffff
  40614b:	mov    QWORD PTR [rsi],rax
  40614e:	add    rsp,0x28
  406152:	pop    rbx
  406153:	pop    rsi
  406154:	pop    rdi
  406155:	pop    rbp
  406156:	ret    
  406157:	nop    WORD PTR [rax+rax*1+0x0]
  406160:	push   rbp
  406161:	push   rdi
  406162:	push   rsi
  406163:	push   rbx
  406164:	sub    rsp,0x38
  406168:	xor    r9d,r9d
  40616b:	xor    r8d,r8d
  40616e:	mov    rbp,rdx
  406171:	mov    QWORD PTR [rsp+0x20],0x0
  40617a:	xor    edx,edx
  40617c:	mov    edi,ecx
  40617e:	call   0x406558
  406183:	cmp    eax,0xffffffdf
  406186:	mov    ebx,eax
  406188:	je     0x4061d3
  40618a:	cmp    eax,0xffffff8c
  40618d:	je     0x4061d3
  40618f:	mov    ecx,0x10
  406194:	call   0x405450
  406199:	mov    ecx,0x10
  40619e:	mov    rsi,rax
  4061a1:	mov    DWORD PTR [rax],0x0
  4061a7:	mov    QWORD PTR [rax+0x8],0x0
  4061af:	mov    QWORD PTR [rbp+0x0],rax
  4061b3:	call   0x405450
  4061b8:	mov    DWORD PTR [rax],edi
  4061ba:	mov    edx,DWORD PTR [rsi]
  4061bc:	xor    ecx,ecx
  4061be:	test   edx,edx
  4061c0:	je     0x4061c6
  4061c2:	mov    rcx,QWORD PTR [rsi+0x8]
  4061c6:	add    edx,0x1
  4061c9:	mov    QWORD PTR [rax+0x8],rcx
  4061cd:	mov    QWORD PTR [rsi+0x8],rax
  4061d1:	mov    DWORD PTR [rsi],edx
  4061d3:	mov    eax,ebx
  4061d5:	add    rsp,0x38
  4061d9:	pop    rbx
  4061da:	pop    rsi
  4061db:	pop    rdi
  4061dc:	pop    rbp
  4061dd:	ret    
  4061de:	xchg   ax,ax
  4061e0:	sub    rsp,0x28
  4061e4:	mov    eax,DWORD PTR [rcx]
  4061e6:	test   eax,eax
  4061e8:	jne    0x406200
  4061ea:	xor    eax,eax
  4061ec:	mov    DWORD PTR [rdx],0x0
  4061f2:	add    rsp,0x28
  4061f6:	ret    
  4061f7:	nop    WORD PTR [rax+rax*1+0x0]
  406200:	call   0x405740
  406205:	xor    eax,eax
  406207:	add    rsp,0x28
  40620b:	ret    
  40620c:	nop    DWORD PTR [rax+0x0]
  406210:	jmp    0x405390
  406215:	nop
  406216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406220:	push   rbp
  406221:	push   rdi
  406222:	push   rsi
  406223:	push   rbx
  406224:	sub    rsp,0x38
  406228:	mov    rbp,rdx
  40622b:	lea    rdx,[rsp+0x28]
  406230:	mov    rsi,r8
  406233:	call   0x406160
  406238:	test   eax,eax
  40623a:	jne    0x4062b8
  40623c:	mov    rcx,QWORD PTR [rsp+0x28]
  406241:	mov    eax,DWORD PTR [rcx]
  406243:	test   eax,eax
  406245:	jne    0x4062a3
  406247:	mov    DWORD PTR [rsp+0x24],0x0
  40624f:	lea    rdi,[rsp+0x24]
  406254:	xor    ebx,ebx
  406256:	test   eax,eax
  406258:	je     0x406274
  40625a:	test   rsi,rsi
  40625d:	je     0x406262
  40625f:	mov    DWORD PTR [rsi+rbx*4],eax
  406262:	mov    eax,DWORD PTR [rcx]
  406264:	add    rbx,0x1
  406268:	test   eax,eax
  40626a:	jne    0x406290
  40626c:	mov    DWORD PTR [rsp+0x24],0x0
  406274:	test   rbp,rbp
  406277:	je     0x40627c
  406279:	mov    DWORD PTR [rbp+0x0],ebx
  40627c:	call   0x405390
  406281:	xor    eax,eax
  406283:	add    rsp,0x38
  406287:	pop    rbx
  406288:	pop    rsi
  406289:	pop    rdi
  40628a:	pop    rbp
  40628b:	ret    
  40628c:	nop    DWORD PTR [rax+0x0]
  406290:	mov    rdx,rdi
  406293:	call   0x405740
  406298:	mov    eax,DWORD PTR [rsp+0x24]
  40629c:	mov    rcx,QWORD PTR [rsp+0x28]
  4062a1:	jmp    0x406256
  4062a3:	lea    rdx,[rsp+0x24]
  4062a8:	call   0x405740
  4062ad:	mov    eax,DWORD PTR [rsp+0x24]
  4062b1:	mov    rcx,QWORD PTR [rsp+0x28]
  4062b6:	jmp    0x40624f
  4062b8:	lea    rdx,[rip+0x9785]        # 0x40fa44
  4062bf:	mov    r8d,0x2dd
  4062c5:	mov    ecx,eax
  4062c7:	call   0x405480
  4062cc:	nop
  4062cd:	nop
  4062ce:	nop
  4062cf:	nop
  4062d0:	push   rsi
  4062d1:	push   rbx
  4062d2:	sub    rsp,0x28
  4062d6:	lea    rbx,[rcx*4+0x0]
  4062de:	mov    rsi,rcx
  4062e1:	mov    QWORD PTR [rip+0xcdb8],rcx        # 0x4130a0
  4062e8:	mov    rcx,rbx
  4062eb:	call   0x405450
  4062f0:	mov    rcx,rbx
  4062f3:	mov    QWORD PTR [rip+0xcdae],rax        # 0x4130a8
  4062fa:	call   0x405450
  4062ff:	mov    rcx,rbx
  406302:	mov    QWORD PTR [rip+0xcda7],rax        # 0x4130b0
  406309:	call   0x405450
  40630e:	mov    rcx,rbx
  406311:	mov    QWORD PTR [rip+0xcda0],rax        # 0x4130b8
  406318:	call   0x405450
  40631d:	test   rsi,rsi
  406320:	mov    QWORD PTR [rip+0xcd99],rax        # 0x4130c0
  406327:	je     0x406367
  406329:	mov    r9,QWORD PTR [rip+0xcd78]        # 0x4130a8
  406330:	mov    r8,QWORD PTR [rip+0xcd79]        # 0x4130b0
  406337:	xor    edx,edx
  406339:	mov    rcx,QWORD PTR [rip+0xcd78]        # 0x4130b8
  406340:	mov    DWORD PTR [r9+rdx*1],0xffffffff
  406348:	mov    DWORD PTR [r8+rdx*1],0xffffffff
  406350:	mov    DWORD PTR [rcx+rdx*1],0x0
  406357:	mov    DWORD PTR [rax+rdx*1],0x0
  40635e:	add    rdx,0x4
  406362:	cmp    rbx,rdx
  406365:	jne    0x406340
  406367:	xor    eax,eax
  406369:	add    rsp,0x28
  40636d:	pop    rbx
  40636e:	pop    rsi
  40636f:	ret    
  406370:	mov    r10,QWORD PTR [rip+0xcd31]        # 0x4130a8
  406377:	movsxd rax,ecx
  40637a:	mov    DWORD PTR [r10+rax*4],edx
  40637e:	mov    r10,QWORD PTR [rip+0xcd2b]        # 0x4130b0
  406385:	movsxd rdx,edx
  406388:	mov    DWORD PTR [r10+rdx*4],ecx
  40638c:	mov    rcx,QWORD PTR [rip+0xcd25]        # 0x4130b8
  406393:	mov    DWORD PTR [rcx+rdx*4],r9d
  406397:	mov    rdx,QWORD PTR [rip+0xcd22]        # 0x4130c0
  40639e:	mov    DWORD PTR [rdx+rax*4],r8d
  4063a2:	xor    eax,eax
  4063a4:	ret    
  4063a5:	nop
  4063a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063b0:	mov    rax,QWORD PTR [rip+0xccf1]        # 0x4130a8
  4063b7:	movsxd rcx,ecx
  4063ba:	mov    eax,DWORD PTR [rax+rcx*4]
  4063bd:	ret    
  4063be:	xchg   ax,ax
  4063c0:	mov    rax,QWORD PTR [rip+0xcce9]        # 0x4130b0
  4063c7:	movsxd rcx,ecx
  4063ca:	mov    eax,DWORD PTR [rax+rcx*4]
  4063cd:	ret    
  4063ce:	xchg   ax,ax
  4063d0:	mov    rax,QWORD PTR [rip+0xcce1]        # 0x4130b8
  4063d7:	movsxd rcx,ecx
  4063da:	mov    eax,DWORD PTR [rax+rcx*4]
  4063dd:	ret    
  4063de:	xchg   ax,ax
  4063e0:	mov    rax,QWORD PTR [rip+0xccd9]        # 0x4130c0
  4063e7:	movsxd rcx,ecx
  4063ea:	mov    eax,DWORD PTR [rax+rcx*4]
  4063ed:	ret    
  4063ee:	nop
  4063ef:	nop
  4063f0:	jmp    QWORD PTR [rip+0xf2e6]        # 0x4156dc
  4063f6:	nop
  4063f7:	nop
  4063f8:	jmp    QWORD PTR [rip+0xf2d6]        # 0x4156d4
  4063fe:	nop
  4063ff:	nop
  406400:	jmp    QWORD PTR [rip+0xf2c6]        # 0x4156cc
  406406:	nop
  406407:	nop
  406408:	jmp    QWORD PTR [rip+0xf2b6]        # 0x4156c4
  40640e:	nop
  40640f:	nop
  406410:	jmp    QWORD PTR [rip+0xf2a6]        # 0x4156bc
  406416:	nop
  406417:	nop
  406418:	jmp    QWORD PTR [rip+0xf296]        # 0x4156b4
  40641e:	nop
  40641f:	nop
  406420:	jmp    QWORD PTR [rip+0xf286]        # 0x4156ac
  406426:	nop
  406427:	nop
  406428:	jmp    QWORD PTR [rip+0xf276]        # 0x4156a4
  40642e:	nop
  40642f:	nop
  406430:	jmp    QWORD PTR [rip+0xf266]        # 0x41569c
  406436:	nop
  406437:	nop
  406438:	jmp    QWORD PTR [rip+0xf256]        # 0x415694
  40643e:	nop
  40643f:	nop
  406440:	jmp    QWORD PTR [rip+0xf246]        # 0x41568c
  406446:	nop
  406447:	nop
  406448:	jmp    QWORD PTR [rip+0xf236]        # 0x415684
  40644e:	nop
  40644f:	nop
  406450:	jmp    QWORD PTR [rip+0xf226]        # 0x41567c
  406456:	nop
  406457:	nop
  406458:	jmp    QWORD PTR [rip+0xf216]        # 0x415674
  40645e:	nop
  40645f:	nop
  406460:	jmp    QWORD PTR [rip+0xf206]        # 0x41566c
  406466:	nop
  406467:	nop
  406468:	jmp    QWORD PTR [rip+0xf1f6]        # 0x415664
  40646e:	nop
  40646f:	nop
  406470:	jmp    QWORD PTR [rip+0xf1e6]        # 0x41565c
  406476:	nop
  406477:	nop
  406478:	jmp    QWORD PTR [rip+0xf1d6]        # 0x415654
  40647e:	nop
  40647f:	nop
  406480:	jmp    QWORD PTR [rip+0xf1c6]        # 0x41564c
  406486:	nop
  406487:	nop
  406488:	jmp    QWORD PTR [rip+0xf1b6]        # 0x415644
  40648e:	nop
  40648f:	nop
  406490:	jmp    QWORD PTR [rip+0xf1a6]        # 0x41563c
  406496:	nop
  406497:	nop
  406498:	jmp    QWORD PTR [rip+0xf196]        # 0x415634
  40649e:	nop
  40649f:	nop
  4064a0:	jmp    QWORD PTR [rip+0xf186]        # 0x41562c
  4064a6:	nop
  4064a7:	nop
  4064a8:	jmp    QWORD PTR [rip+0xf176]        # 0x415624
  4064ae:	nop
  4064af:	nop
  4064b0:	jmp    QWORD PTR [rip+0xf166]        # 0x41561c
  4064b6:	nop
  4064b7:	nop
  4064b8:	jmp    QWORD PTR [rip+0xf156]        # 0x415614
  4064be:	nop
  4064bf:	nop
  4064c0:	jmp    QWORD PTR [rip+0xf146]        # 0x41560c
  4064c6:	nop
  4064c7:	nop
  4064c8:	jmp    QWORD PTR [rip+0xf136]        # 0x415604
  4064ce:	nop
  4064cf:	nop
  4064d0:	jmp    QWORD PTR [rip+0xf126]        # 0x4155fc
  4064d6:	nop
  4064d7:	nop
  4064d8:	jmp    QWORD PTR [rip+0xf116]        # 0x4155f4
  4064de:	nop
  4064df:	nop
  4064e0:	jmp    QWORD PTR [rip+0xf106]        # 0x4155ec
  4064e6:	nop
  4064e7:	nop
  4064e8:	jmp    QWORD PTR [rip+0xf0f6]        # 0x4155e4
  4064ee:	nop
  4064ef:	nop
  4064f0:	jmp    QWORD PTR [rip+0xf0e6]        # 0x4155dc
  4064f6:	nop
  4064f7:	nop
  4064f8:	jmp    QWORD PTR [rip+0xf0d6]        # 0x4155d4
  4064fe:	nop
  4064ff:	nop
  406500:	jmp    QWORD PTR [rip+0xf0c6]        # 0x4155cc
  406506:	nop
  406507:	nop
  406508:	jmp    QWORD PTR [rip+0xf0b6]        # 0x4155c4
  40650e:	nop
  40650f:	nop
  406510:	jmp    QWORD PTR [rip+0xf0a6]        # 0x4155bc
  406516:	nop
  406517:	nop
  406518:	jmp    QWORD PTR [rip+0xf096]        # 0x4155b4
  40651e:	nop
  40651f:	nop
  406520:	jmp    QWORD PTR [rip+0xf086]        # 0x4155ac
  406526:	nop
  406527:	nop
  406528:	jmp    QWORD PTR [rip+0xf076]        # 0x4155a4
  40652e:	nop
  40652f:	nop
  406530:	jmp    QWORD PTR [rip+0xf066]        # 0x41559c
  406536:	nop
  406537:	nop
  406538:	jmp    QWORD PTR [rip+0xf056]        # 0x415594
  40653e:	nop
  40653f:	nop
  406540:	jmp    QWORD PTR [rip+0xf046]        # 0x41558c
  406546:	nop
  406547:	nop
  406548:	jmp    QWORD PTR [rip+0xf036]        # 0x415584
  40654e:	nop
  40654f:	nop
  406550:	jmp    QWORD PTR [rip+0xf026]        # 0x41557c
  406556:	nop
  406557:	nop
  406558:	jmp    QWORD PTR [rip+0xf016]        # 0x415574
  40655e:	nop
  40655f:	nop
  406560:	jmp    QWORD PTR [rip+0xf006]        # 0x41556c
  406566:	nop
  406567:	nop
  406568:	jmp    QWORD PTR [rip+0xeff6]        # 0x415564
  40656e:	nop
  40656f:	nop
  406570:	jmp    QWORD PTR [rip+0xefe6]        # 0x41555c
  406576:	nop
  406577:	nop
  406578:	jmp    QWORD PTR [rip+0xefd6]        # 0x415554
  40657e:	nop
  40657f:	nop
  406580:	jmp    QWORD PTR [rip+0xefc6]        # 0x41554c
  406586:	nop
  406587:	nop
  406588:	jmp    QWORD PTR [rip+0xefb6]        # 0x415544
  40658e:	nop
  40658f:	nop
  406590:	jmp    QWORD PTR [rip+0xefa6]        # 0x41553c
  406596:	nop
  406597:	nop
  406598:	jmp    QWORD PTR [rip+0xef96]        # 0x415534
  40659e:	nop
  40659f:	nop
  4065a0:	jmp    QWORD PTR [rip+0xef86]        # 0x41552c
  4065a6:	nop
  4065a7:	nop
  4065a8:	jmp    QWORD PTR [rip+0xef76]        # 0x415524
  4065ae:	nop
  4065af:	nop
  4065b0:	jmp    QWORD PTR [rip+0xef66]        # 0x41551c
  4065b6:	nop
  4065b7:	nop
  4065b8:	jmp    QWORD PTR [rip+0xef56]        # 0x415514
  4065be:	nop
  4065bf:	nop
  4065c0:	jmp    QWORD PTR [rip+0xef46]        # 0x41550c
  4065c6:	nop
  4065c7:	nop
  4065c8:	jmp    QWORD PTR [rip+0xef36]        # 0x415504
  4065ce:	nop
  4065cf:	nop
  4065d0:	jmp    QWORD PTR [rip+0xef26]        # 0x4154fc
  4065d6:	nop
  4065d7:	nop
  4065d8:	jmp    QWORD PTR [rip+0xef16]        # 0x4154f4
  4065de:	nop
  4065df:	nop
  4065e0:	jmp    QWORD PTR [rip+0xef06]        # 0x4154ec
  4065e6:	nop
  4065e7:	nop
  4065e8:	jmp    QWORD PTR [rip+0xeef6]        # 0x4154e4
  4065ee:	nop
  4065ef:	nop
  4065f0:	push   rbx
  4065f1:	sub    rsp,0x30
  4065f5:	mov    rbx,rcx
  4065f8:	mov    rcx,QWORD PTR [rip+0xdf29]        # 0x414528
  4065ff:	call   0x406ba0
  406604:	cmp    rax,0xffffffffffffffff
  406608:	mov    QWORD PTR [rsp+0x20],rax
  40660d:	je     0x406685
  40660f:	mov    ecx,0x8
  406614:	call   0x40ca50
  406619:	mov    rcx,QWORD PTR [rip+0xdf08]        # 0x414528
  406620:	call   0x406ba0
  406625:	mov    rcx,QWORD PTR [rip+0xdf04]        # 0x414530
  40662c:	mov    QWORD PTR [rsp+0x20],rax
  406631:	call   0x406ba0
  406636:	lea    rdx,[rsp+0x20]
  40663b:	lea    r8,[rsp+0x28]
  406640:	mov    rcx,rbx
  406643:	mov    QWORD PTR [rsp+0x28],rax
  406648:	call   0x40caa8
  40664d:	mov    rcx,QWORD PTR [rsp+0x20]
  406652:	mov    rbx,rax
  406655:	call   0x406bb0
  40665a:	mov    rcx,QWORD PTR [rsp+0x28]
  40665f:	mov    QWORD PTR [rip+0xdec2],rax        # 0x414528
  406666:	call   0x406bb0
  40666b:	mov    ecx,0x8
  406670:	mov    QWORD PTR [rip+0xdeb9],rax        # 0x414530
  406677:	call   0x40ca30
  40667c:	mov    rax,rbx
  40667f:	add    rsp,0x30
  406683:	pop    rbx
  406684:	ret    
  406685:	mov    rax,QWORD PTR [rip+0x9f04]        # 0x410590
  40668c:	mov    rcx,rbx
  40668f:	call   QWORD PTR [rax]
  406691:	add    rsp,0x30
  406695:	pop    rbx
  406696:	ret    
  406697:	nop    WORD PTR [rax+rax*1+0x0]
  4066a0:	sub    rsp,0x28
  4066a4:	call   0x4065f0
  4066a9:	test   rax,rax
  4066ac:	sete   al
  4066af:	movzx  eax,al
  4066b2:	neg    eax
  4066b4:	add    rsp,0x28
  4066b8:	ret    
  4066b9:	nop
  4066ba:	nop
  4066bb:	nop
  4066bc:	nop
  4066bd:	nop
  4066be:	nop
  4066bf:	nop
  4066c0:	sub    rsp,0x28
  4066c4:	mov    rax,QWORD PTR [rip+0x7ab5]        # 0x40e180
  4066cb:	mov    rax,QWORD PTR [rax]
  4066ce:	test   rax,rax
  4066d1:	je     0x4066f0
  4066d3:	call   rax
  4066d5:	mov    rax,QWORD PTR [rip+0x7aa4]        # 0x40e180
  4066dc:	lea    rdx,[rax+0x8]
  4066e0:	mov    rax,QWORD PTR [rax+0x8]
  4066e4:	mov    QWORD PTR [rip+0x7a95],rdx        # 0x40e180
  4066eb:	test   rax,rax
  4066ee:	jne    0x4066d3
  4066f0:	add    rsp,0x28
  4066f4:	ret    
  4066f5:	nop
  4066f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406700:	push   rsi
  406701:	push   rbx
  406702:	sub    rsp,0x28
  406706:	mov    rsi,QWORD PTR [rip+0x9dd3]        # 0x4104e0
  40670d:	mov    rax,QWORD PTR [rsi]
  406710:	cmp    eax,0xffffffff
  406713:	mov    ebx,eax
  406715:	je     0x406740
  406717:	test   ebx,ebx
  406719:	je     0x40672a
  40671b:	nop    DWORD PTR [rax+rax*1+0x0]
  406720:	mov    eax,ebx
  406722:	call   QWORD PTR [rsi+rax*8]
  406725:	sub    ebx,0x1
  406728:	jne    0x406720
  40672a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4066c0
  406731:	add    rsp,0x28
  406735:	pop    rbx
  406736:	pop    rsi
  406737:	jmp    0x4066a0
  40673c:	nop    DWORD PTR [rax+0x0]
  406740:	xor    ebx,ebx
  406742:	jmp    0x406746
  406744:	mov    ebx,eax
  406746:	lea    edx,[rbx+0x1]
  406749:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40674e:	mov    rax,rdx
  406751:	jne    0x406744
  406753:	jmp    0x406717
  406755:	nop
  406756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406760:	mov    eax,DWORD PTR [rip+0xc97a]        # 0x4130e0
  406766:	test   eax,eax
  406768:	je     0x406770
  40676a:	repz ret 
  40676c:	nop    DWORD PTR [rax+0x0]
  406770:	mov    DWORD PTR [rip+0xc966],0x1        # 0x4130e0
  40677a:	jmp    0x406700
  40677c:	nop
  40677d:	nop
  40677e:	nop
  40677f:	nop
  406780:	mov    rax,QWORD PTR [rip+0xf05d]        # 0x4157e4
  406787:	rex.W jmp rax
  40678a:	nop
  40678b:	nop
  40678c:	nop
  40678d:	nop
  40678e:	nop
  40678f:	nop
  406790:	xor    eax,eax
  406792:	ret    
  406793:	nop
  406794:	nop
  406795:	nop
  406796:	nop
  406797:	nop
  406798:	nop
  406799:	nop
  40679a:	nop
  40679b:	nop
  40679c:	nop
  40679d:	nop
  40679e:	nop
  40679f:	nop
  4067a0:	push   r12
  4067a2:	push   rbp
  4067a3:	push   rdi
  4067a4:	push   rsi
  4067a5:	push   rbx
  4067a6:	sub    rsp,0x40
  4067aa:	mov    rbx,QWORD PTR [rip+0x7a8f]        # 0x40e240
  4067b1:	movabs rax,0x2b992ddfa232
  4067bb:	mov    QWORD PTR [rsp+0x20],0x0
  4067c4:	cmp    rbx,rax
  4067c7:	je     0x4067e0
  4067c9:	not    rbx
  4067cc:	mov    QWORD PTR [rip+0x7a7d],rbx        # 0x40e250
  4067d3:	add    rsp,0x40
  4067d7:	pop    rbx
  4067d8:	pop    rsi
  4067d9:	pop    rdi
  4067da:	pop    rbp
  4067db:	pop    r12
  4067dd:	ret    
  4067de:	xchg   ax,ax
  4067e0:	lea    rcx,[rsp+0x20]
  4067e5:	call   QWORD PTR [rip+0xef41]        # 0x41572c
  4067eb:	mov    r12,QWORD PTR [rsp+0x20]
  4067f0:	call   QWORD PTR [rip+0xef0e]        # 0x415704
  4067f6:	mov    ebp,eax
  4067f8:	call   QWORD PTR [rip+0xef0e]        # 0x41570c
  4067fe:	mov    edi,eax
  406800:	call   QWORD PTR [rip+0xef2e]        # 0x415734
  406806:	lea    rcx,[rsp+0x30]
  40680b:	mov    esi,eax
  40680d:	call   QWORD PTR [rip+0xef39]        # 0x41574c
  406813:	xor    r12,QWORD PTR [rsp+0x30]
  406818:	mov    edx,edi
  40681a:	movabs rax,0xffffffffffff
  406824:	xor    rbp,r12
  406827:	mov    rdi,rbp
  40682a:	xor    rdi,rdx
  40682d:	mov    edx,esi
  40682f:	xor    rdi,rdx
  406832:	mov    rsi,rdi
  406835:	and    rsi,rax
  406838:	cmp    rsi,rbx
  40683b:	je     0x406860
  40683d:	mov    rax,rsi
  406840:	not    rax
  406843:	mov    QWORD PTR [rip+0x79f6],rsi        # 0x40e240
  40684a:	mov    QWORD PTR [rip+0x79ff],rax        # 0x40e250
  406851:	add    rsp,0x40
  406855:	pop    rbx
  406856:	pop    rsi
  406857:	pop    rdi
  406858:	pop    rbp
  406859:	pop    r12
  40685b:	ret    
  40685c:	nop    DWORD PTR [rax+0x0]
  406860:	movabs rax,0xffffd466d2205dcc
  40686a:	movabs rsi,0x2b992ddfa233
  406874:	jmp    0x406843
  406876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406880:	push   rbp
  406881:	push   rsi
  406882:	push   rbx
  406883:	mov    rbp,rsp
  406886:	sub    rsp,0x70
  40688a:	mov    rsi,rcx
  40688d:	lea    rcx,[rip+0xc8ac]        # 0x413140
  406894:	call   QWORD PTR [rip+0xeec2]        # 0x41575c
  40689a:	mov    rbx,QWORD PTR [rip+0xc997]        # 0x413238
  4068a1:	xor    r8d,r8d
  4068a4:	lea    rdx,[rbp-0x28]
  4068a8:	mov    rcx,rbx
  4068ab:	call   QWORD PTR [rip+0xeeb3]        # 0x415764
  4068b1:	test   rax,rax
  4068b4:	mov    r9,rax
  4068b7:	je     0x406960
  4068bd:	lea    rax,[rbp-0x20]
  4068c1:	mov    QWORD PTR [rsp+0x38],0x0
  4068ca:	mov    r8,rbx
  4068cd:	mov    rdx,QWORD PTR [rbp-0x28]
  4068d1:	xor    ecx,ecx
  4068d3:	mov    QWORD PTR [rsp+0x30],rax
  4068d8:	lea    rax,[rbp-0x18]
  4068dc:	mov    QWORD PTR [rsp+0x28],rax
  4068e1:	lea    rax,[rip+0xc858]        # 0x413140
  4068e8:	mov    QWORD PTR [rsp+0x20],rax
  4068ed:	call   QWORD PTR [rip+0xee79]        # 0x41576c
  4068f3:	mov    rax,QWORD PTR [rip+0xc93e]        # 0x413238
  4068fa:	xor    ecx,ecx
  4068fc:	mov    QWORD PTR [rip+0xc8bd],rsi        # 0x4131c0
  406903:	mov    DWORD PTR [rip+0xcd33],0xc0000409        # 0x413640
  40690d:	mov    DWORD PTR [rip+0xcd2d],0x1        # 0x413644
  406917:	mov    QWORD PTR [rip+0xcd32],rax        # 0x413650
  40691e:	mov    rax,QWORD PTR [rip+0x791b]        # 0x40e240
  406925:	mov    QWORD PTR [rbp-0x10],rax
  406929:	mov    rax,QWORD PTR [rip+0x7920]        # 0x40e250
  406930:	mov    QWORD PTR [rbp-0x8],rax
  406934:	call   QWORD PTR [rip+0xee3a]        # 0x415774
  40693a:	lea    rcx,[rip+0x931f]        # 0x40fc60
  406941:	call   QWORD PTR [rip+0xee4d]        # 0x415794
  406947:	call   QWORD PTR [rip+0xedaf]        # 0x4156fc
  40694d:	mov    edx,0xc0000409
  406952:	mov    rcx,rax
  406955:	call   QWORD PTR [rip+0xee29]        # 0x415784
  40695b:	call   0x40ca28
  406960:	mov    rax,QWORD PTR [rbp+0x18]
  406964:	mov    QWORD PTR [rip+0xc8cd],rax        # 0x413238
  40696b:	lea    rax,[rbp+0x8]
  40696f:	mov    QWORD PTR [rip+0xc862],rax        # 0x4131d8
  406976:	jmp    0x4068f3
  40697b:	nop
  40697c:	nop
  40697d:	nop
  40697e:	nop
  40697f:	nop
  406980:	sub    rsp,0x28
  406984:	test   edx,edx
  406986:	je     0x4069a0
  406988:	cmp    edx,0x3
  40698b:	je     0x4069a0
  40698d:	mov    eax,0x1
  406992:	add    rsp,0x28
  406996:	ret    
  406997:	nop    WORD PTR [rax+rax*1+0x0]
  4069a0:	call   0x407690
  4069a5:	mov    eax,0x1
  4069aa:	add    rsp,0x28
  4069ae:	ret    
  4069af:	nop
  4069b0:	push   rsi
  4069b1:	push   rbx
  4069b2:	sub    rsp,0x28
  4069b6:	mov    rax,QWORD PTR [rip+0x9b03]        # 0x4104c0
  4069bd:	cmp    DWORD PTR [rax],0x2
  4069c0:	je     0x4069c8
  4069c2:	mov    DWORD PTR [rax],0x2
  4069c8:	cmp    edx,0x2
  4069cb:	je     0x4069e0
  4069cd:	cmp    edx,0x1
  4069d0:	je     0x406a12
  4069d2:	mov    eax,0x1
  4069d7:	add    rsp,0x28
  4069db:	pop    rbx
  4069dc:	pop    rsi
  4069dd:	ret    
  4069de:	xchg   ax,ax
  4069e0:	lea    rbx,[rip+0x10679]        # 0x417060
  4069e7:	lea    rsi,[rip+0x10672]        # 0x417060
  4069ee:	cmp    rbx,rsi
  4069f1:	je     0x4069d2
  4069f3:	mov    rax,QWORD PTR [rbx]
  4069f6:	test   rax,rax
  4069f9:	je     0x4069fd
  4069fb:	call   rax
  4069fd:	add    rbx,0x8
  406a01:	cmp    rbx,rsi
  406a04:	jne    0x4069f3
  406a06:	mov    eax,0x1
  406a0b:	add    rsp,0x28
  406a0f:	pop    rbx
  406a10:	pop    rsi
  406a11:	ret    
  406a12:	call   0x407690
  406a17:	jmp    0x4069d2
  406a19:	nop    DWORD PTR [rax+0x0]
  406a20:	xor    eax,eax
  406a22:	ret    
  406a23:	nop
  406a24:	nop
  406a25:	nop
  406a26:	nop
  406a27:	nop
  406a28:	nop
  406a29:	nop
  406a2a:	nop
  406a2b:	nop
  406a2c:	nop
  406a2d:	nop
  406a2e:	nop
  406a2f:	nop
  406a30:	sub    rsp,0x58
  406a34:	mov    rax,QWORD PTR [rip+0xcce5]        # 0x413720
  406a3b:	test   rax,rax
  406a3e:	je     0x406a6c
  406a40:	movsd  xmm0,QWORD PTR [rsp+0x80]
  406a49:	mov    DWORD PTR [rsp+0x20],ecx
  406a4d:	lea    rcx,[rsp+0x20]
  406a52:	mov    QWORD PTR [rsp+0x28],rdx
  406a57:	movsd  QWORD PTR [rsp+0x30],xmm2
  406a5d:	movsd  QWORD PTR [rsp+0x38],xmm3
  406a63:	movsd  QWORD PTR [rsp+0x40],xmm0
  406a69:	call   rax
  406a6b:	nop
  406a6c:	add    rsp,0x58
  406a70:	ret    
  406a71:	nop    DWORD PTR [rax+rax*1+0x0]
  406a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a80:	mov    QWORD PTR [rip+0xcc99],rcx        # 0x413720
  406a87:	jmp    0x40ca80
  406a8c:	nop    DWORD PTR [rax+0x0]
  406a90:	push   rsi
  406a91:	push   rbx
  406a92:	sub    rsp,0x78
  406a96:	movaps XMMWORD PTR [rsp+0x40],xmm6
  406a9b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  406aa0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  406aa6:	cmp    DWORD PTR [rcx],0x6
  406aa9:	ja     0x406b80
  406aaf:	mov    edx,DWORD PTR [rcx]
  406ab1:	lea    rax,[rip+0x92ec]        # 0x40fda4
  406ab8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406abc:	add    rax,rdx
  406abf:	jmp    rax
  406ac1:	lea    rbx,[rip+0x91b8]        # 0x40fc80
  406ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ad0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  406ad6:	mov    rsi,QWORD PTR [rcx+0x8]
  406ada:	movsd  xmm7,QWORD PTR [rcx+0x18]
  406adf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  406ae4:	call   0x40ca98
  406ae9:	movsd  QWORD PTR [rsp+0x30],xmm8
  406af0:	lea    rcx,[rax+0x60]
  406af4:	lea    rdx,[rip+0x927d]        # 0x40fd78
  406afb:	movsd  QWORD PTR [rsp+0x28],xmm7
  406b01:	mov    r9,rsi
  406b04:	mov    r8,rbx
  406b07:	movsd  QWORD PTR [rsp+0x20],xmm6
  406b0d:	call   0x40ca08
  406b12:	nop
  406b13:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  406b18:	xor    eax,eax
  406b1a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  406b1f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  406b25:	add    rsp,0x78
  406b29:	pop    rbx
  406b2a:	pop    rsi
  406b2b:	ret    
  406b2c:	nop    DWORD PTR [rax+0x0]
  406b30:	lea    rbx,[rip+0x9168]        # 0x40fc9f
  406b37:	jmp    0x406ad0
  406b39:	nop    DWORD PTR [rax+0x0]
  406b40:	lea    rbx,[rip+0x9179]        # 0x40fcc0
  406b47:	jmp    0x406ad0
  406b49:	nop    DWORD PTR [rax+0x0]
  406b50:	lea    rbx,[rip+0x91d9]        # 0x40fd30
  406b57:	jmp    0x406ad0
  406b5c:	nop    DWORD PTR [rax+0x0]
  406b60:	lea    rbx,[rip+0x91a1]        # 0x40fd08
  406b67:	jmp    0x406ad0
  406b6c:	nop    DWORD PTR [rax+0x0]
  406b70:	lea    rbx,[rip+0x9169]        # 0x40fce0
  406b77:	jmp    0x406ad0
  406b7c:	nop    DWORD PTR [rax+0x0]
  406b80:	lea    rbx,[rip+0x91df]        # 0x40fd66
  406b87:	jmp    0x406ad0
  406b8c:	nop
  406b8d:	nop
  406b8e:	nop
  406b8f:	nop
  406b90:	fninit 
  406b92:	ret    
  406b93:	nop
  406b94:	nop
  406b95:	nop
  406b96:	nop
  406b97:	nop
  406b98:	nop
  406b99:	nop
  406b9a:	nop
  406b9b:	nop
  406b9c:	nop
  406b9d:	nop
  406b9e:	nop
  406b9f:	nop
  406ba0:	mov    rax,rcx
  406ba3:	ret    
  406ba4:	xchg   ax,ax
  406ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406bb0:	mov    rax,rcx
  406bb3:	ret    
  406bb4:	nop
  406bb5:	nop
  406bb6:	nop
  406bb7:	nop
  406bb8:	nop
  406bb9:	nop
  406bba:	nop
  406bbb:	nop
  406bbc:	nop
  406bbd:	nop
  406bbe:	nop
  406bbf:	nop
  406bc0:	push   rsi
  406bc1:	push   rbx
  406bc2:	sub    rsp,0x38
  406bc6:	lea    rax,[rsp+0x58]
  406bcb:	mov    rbx,rcx
  406bce:	mov    QWORD PTR [rsp+0x58],rdx
  406bd3:	mov    QWORD PTR [rsp+0x60],r8
  406bd8:	mov    QWORD PTR [rsp+0x68],r9
  406bdd:	mov    QWORD PTR [rsp+0x28],rax
  406be2:	call   0x40ca98
  406be7:	lea    rcx,[rip+0x91d2]        # 0x40fdc0
  406bee:	lea    r9,[rax+0x60]
  406bf2:	mov    r8d,0x1b
  406bf8:	mov    edx,0x1
  406bfd:	call   0x40c9e0
  406c02:	mov    rsi,QWORD PTR [rsp+0x28]
  406c07:	call   0x40ca98
  406c0c:	lea    rcx,[rax+0x60]
  406c10:	mov    rdx,rbx
  406c13:	mov    r8,rsi
  406c16:	call   0x40c950
  406c1b:	call   0x40ca28
  406c20:	nop
  406c21:	nop    DWORD PTR [rax+rax*1+0x0]
  406c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c30:	push   r13
  406c32:	push   r12
  406c34:	push   rbp
  406c35:	push   rdi
  406c36:	push   rsi
  406c37:	push   rbx
  406c38:	sub    rsp,0x58
  406c3c:	movsxd rbp,DWORD PTR [rip+0xcb01]        # 0x413744
  406c43:	mov    rbx,rcx
  406c46:	mov    rsi,rdx
  406c49:	mov    rdi,r8
  406c4c:	test   ebp,ebp
  406c4e:	jle    0x406d4a
  406c54:	mov    rax,QWORD PTR [rip+0xcaed]        # 0x413748
  406c5b:	xor    r9d,r9d
  406c5e:	add    rax,0x8
  406c62:	mov    r10,QWORD PTR [rax]
  406c65:	cmp    rbx,r10
  406c68:	jb     0x406c7e
  406c6a:	mov    rdx,QWORD PTR [rax+0x8]
  406c6e:	mov    r11d,DWORD PTR [rdx+0x8]
  406c72:	add    r10,r11
  406c75:	cmp    rbx,r10
  406c78:	jb     0x406d30
  406c7e:	add    r9d,0x1
  406c82:	add    rax,0x18
  406c86:	cmp    r9d,ebp
  406c89:	jne    0x406c62
  406c8b:	mov    rcx,rbx
  406c8e:	call   0x4078a0
  406c93:	test   rax,rax
  406c96:	mov    r12,rax
  406c99:	je     0x406d82
  406c9f:	lea    rbp,[rbp+rbp*2+0x0]
  406ca4:	shl    rbp,0x3
  406ca8:	mov    r13,rbp
  406cab:	add    r13,QWORD PTR [rip+0xca96]        # 0x413748
  406cb2:	mov    QWORD PTR [r13+0x10],rax
  406cb6:	mov    DWORD PTR [r13+0x0],0x0
  406cbe:	call   0x4079c0
  406cc3:	mov    edx,DWORD PTR [r12+0xc]
  406cc8:	mov    r8d,0x30
  406cce:	add    rax,rdx
  406cd1:	lea    rdx,[rsp+0x20]
  406cd6:	mov    QWORD PTR [r13+0x8],rax
  406cda:	mov    rax,QWORD PTR [rip+0xca67]        # 0x413748
  406ce1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  406ce6:	call   QWORD PTR [rip+0xeab8]        # 0x4157a4
  406cec:	test   rax,rax
  406cef:	je     0x406d65
  406cf1:	mov    eax,DWORD PTR [rsp+0x44]
  406cf5:	lea    edx,[rax-0x4]
  406cf8:	and    edx,0xfffffffb
  406cfb:	je     0x406d29
  406cfd:	sub    eax,0x40
  406d00:	and    eax,0xffffffbf
  406d03:	je     0x406d29
  406d05:	mov    r9,rbp
  406d08:	add    r9,QWORD PTR [rip+0xca39]        # 0x413748
  406d0f:	mov    r8d,0x40
  406d15:	mov    rdx,QWORD PTR [rsp+0x38]
  406d1a:	mov    rcx,QWORD PTR [rsp+0x20]
  406d1f:	call   QWORD PTR [rip+0xea77]        # 0x41579c
  406d25:	test   eax,eax
  406d27:	je     0x406d51
  406d29:	add    DWORD PTR [rip+0xca14],0x1        # 0x413744
  406d30:	mov    r8,rdi
  406d33:	mov    rdx,rsi
  406d36:	mov    rcx,rbx
  406d39:	add    rsp,0x58
  406d3d:	pop    rbx
  406d3e:	pop    rsi
  406d3f:	pop    rdi
  406d40:	pop    rbp
  406d41:	pop    r12
  406d43:	pop    r13
  406d45:	jmp    0x40c9b8
  406d4a:	xor    ebp,ebp
  406d4c:	jmp    0x406c8b
  406d51:	call   QWORD PTR [rip+0xe9bd]        # 0x415714
  406d57:	lea    rcx,[rip+0x90da]        # 0x40fe38
  406d5e:	mov    edx,eax
  406d60:	call   0x406bc0
  406d65:	mov    rax,QWORD PTR [rip+0xc9dc]        # 0x413748
  406d6c:	mov    edx,DWORD PTR [r12+0x8]
  406d71:	lea    rcx,[rip+0x9088]        # 0x40fe00
  406d78:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  406d7d:	call   0x406bc0
  406d82:	lea    rcx,[rip+0x9057]        # 0x40fde0
  406d89:	mov    rdx,rbx
  406d8c:	call   0x406bc0
  406d91:	nop
  406d92:	nop    DWORD PTR [rax+0x0]
  406d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406da0:	push   rbp
  406da1:	push   r14
  406da3:	push   r13
  406da5:	push   r12
  406da7:	push   rdi
  406da8:	push   rsi
  406da9:	push   rbx
  406daa:	mov    rbp,rsp
  406dad:	sub    rsp,0x60
  406db1:	mov    ebx,DWORD PTR [rip+0xc989]        # 0x413740
  406db7:	test   ebx,ebx
  406db9:	je     0x406dd0
  406dbb:	mov    rsp,rbp
  406dbe:	pop    rbx
  406dbf:	pop    rsi
  406dc0:	pop    rdi
  406dc1:	pop    r12
  406dc3:	pop    r13
  406dc5:	pop    r14
  406dc7:	pop    rbp
  406dc8:	ret    
  406dc9:	nop    DWORD PTR [rax+0x0]
  406dd0:	mov    DWORD PTR [rip+0xc966],0x1        # 0x413740
  406dda:	call   0x4078f0
  406ddf:	cdqe   
  406de1:	lea    rax,[rax+rax*2]
  406de5:	lea    rax,[rax*8+0x1e]
  406ded:	and    rax,0xfffffffffffffff0
  406df1:	call   0x407b10
  406df6:	mov    rsi,QWORD PTR [rip+0x96f3]        # 0x4104f0
  406dfd:	mov    rbx,QWORD PTR [rip+0x96fc]        # 0x410500
  406e04:	sub    rsp,rax
  406e07:	mov    DWORD PTR [rip+0xc933],0x0        # 0x413744
  406e11:	lea    rax,[rsp+0x20]
  406e16:	mov    QWORD PTR [rip+0xc92b],rax        # 0x413748
  406e1d:	mov    rax,rsi
  406e20:	sub    rax,rbx
  406e23:	cmp    rax,0x7
  406e27:	jle    0x406dbb
  406e29:	cmp    rax,0xb
  406e2d:	jle    0x406e55
  406e2f:	mov    r11d,DWORD PTR [rbx]
  406e32:	test   r11d,r11d
  406e35:	jne    0x406f80
  406e3b:	mov    r10d,DWORD PTR [rbx+0x4]
  406e3f:	test   r10d,r10d
  406e42:	jne    0x406f80
  406e48:	mov    r9d,DWORD PTR [rbx+0x8]
  406e4c:	test   r9d,r9d
  406e4f:	jne    0x406e6c
  406e51:	add    rbx,0xc
  406e55:	mov    r8d,DWORD PTR [rbx]
  406e58:	test   r8d,r8d
  406e5b:	jne    0x406f80
  406e61:	mov    ecx,DWORD PTR [rbx+0x4]
  406e64:	test   ecx,ecx
  406e66:	jne    0x406f80
  406e6c:	mov    edx,DWORD PTR [rbx+0x8]
  406e6f:	cmp    edx,0x1
  406e72:	jne    0x40708c
  406e78:	add    rbx,0xc
  406e7c:	cmp    rbx,rsi
  406e7f:	jae    0x406dbb
  406e85:	mov    r12,QWORD PTR [rip+0x96b4]        # 0x410540
  406e8c:	lea    r13,[rbp-0x30]
  406e90:	movabs r14,0xffffffff00000000
  406e9a:	mov    ecx,DWORD PTR [rbx+0x4]
  406e9d:	mov    eax,DWORD PTR [rbx]
  406e9f:	movzx  edx,BYTE PTR [rbx+0x8]
  406ea3:	add    rax,r12
  406ea6:	add    rcx,r12
  406ea9:	cmp    edx,0x10
  406eac:	mov    r8,QWORD PTR [rax]
  406eaf:	je     0x406ff6
  406eb5:	jbe    0x406fbd
  406ebb:	cmp    edx,0x20
  406ebe:	je     0x40703f
  406ec4:	cmp    edx,0x40
  406ec7:	jne    0x40702b
  406ecd:	sub    r8,rax
  406ed0:	mov    rdx,r13
  406ed3:	mov    rdi,r13
  406ed6:	mov    rax,r8
  406ed9:	add    rax,QWORD PTR [rcx]
  406edc:	mov    r8d,0x8
  406ee2:	mov    QWORD PTR [rbp-0x30],rax
  406ee6:	call   0x406c30
  406eeb:	add    rbx,0xc
  406eef:	cmp    rbx,rsi
  406ef2:	jb     0x406e9a
  406ef4:	mov    eax,DWORD PTR [rip+0xc84a]        # 0x413744
  406efa:	xor    ebx,ebx
  406efc:	xor    esi,esi
  406efe:	test   eax,eax
  406f00:	jle    0x406dbb
  406f06:	mov    r14,QWORD PTR [rip+0xe897]        # 0x4157a4
  406f0d:	lea    r13,[rbp-0x34]
  406f11:	mov    r12,QWORD PTR [rip+0xe884]        # 0x41579c
  406f18:	jmp    0x406f33
  406f1a:	nop    WORD PTR [rax+rax*1+0x0]
  406f20:	add    esi,0x1
  406f23:	add    rbx,0x18
  406f27:	cmp    esi,DWORD PTR [rip+0xc817]        # 0x413744
  406f2d:	jge    0x406dbb
  406f33:	mov    rax,rbx
  406f36:	add    rax,QWORD PTR [rip+0xc80b]        # 0x413748
  406f3d:	mov    edx,DWORD PTR [rax]
  406f3f:	test   edx,edx
  406f41:	je     0x406f20
  406f43:	mov    rcx,QWORD PTR [rax+0x8]
  406f47:	mov    r8d,0x30
  406f4d:	mov    rdx,rdi
  406f50:	call   r14
  406f53:	test   rax,rax
  406f56:	je     0x40706e
  406f5c:	mov    rax,QWORD PTR [rip+0xc7e5]        # 0x413748
  406f63:	mov    r9,r13
  406f66:	mov    rdx,QWORD PTR [rbp-0x18]
  406f6a:	mov    rcx,QWORD PTR [rbp-0x30]
  406f6e:	mov    r8d,DWORD PTR [rax+rbx*1]
  406f72:	call   r12
  406f75:	jmp    0x406f20
  406f77:	nop    WORD PTR [rax+rax*1+0x0]
  406f80:	cmp    rbx,rsi
  406f83:	jae    0x406dbb
  406f89:	mov    r12,QWORD PTR [rip+0x95b0]        # 0x410540
  406f90:	lea    rdi,[rbp-0x30]
  406f94:	mov    ecx,DWORD PTR [rbx+0x4]
  406f97:	mov    eax,DWORD PTR [rbx]
  406f99:	mov    r8d,0x4
  406f9f:	mov    rdx,rdi
  406fa2:	add    rbx,0x8
  406fa6:	add    rcx,r12
  406fa9:	add    eax,DWORD PTR [rcx]
  406fab:	mov    DWORD PTR [rbp-0x30],eax
  406fae:	call   0x406c30
  406fb3:	cmp    rbx,rsi
  406fb6:	jb     0x406f94
  406fb8:	jmp    0x406ef4
  406fbd:	cmp    edx,0x8
  406fc0:	jne    0x40702b
  406fc2:	movzx  edx,BYTE PTR [rcx]
  406fc5:	mov    rdi,r13
  406fc8:	mov    r10,rdx
  406fcb:	or     r10,0xffffffffffffff00
  406fd2:	test   dl,dl
  406fd4:	cmovs  rdx,r10
  406fd8:	sub    rdx,rax
  406fdb:	lea    rax,[r8+rdx*1]
  406fdf:	mov    r8d,0x1
  406fe5:	mov    rdx,r13
  406fe8:	mov    QWORD PTR [rbp-0x30],rax
  406fec:	call   0x406c30
  406ff1:	jmp    0x406eeb
  406ff6:	movzx  edx,WORD PTR [rcx]
  406ff9:	mov    rdi,r13
  406ffc:	mov    r10,rdx
  406fff:	or     r10,0xffffffffffff0000
  407006:	test   dx,dx
  407009:	cmovs  rdx,r10
  40700d:	sub    rdx,rax
  407010:	lea    rax,[r8+rdx*1]
  407014:	mov    r8d,0x2
  40701a:	mov    rdx,r13
  40701d:	mov    QWORD PTR [rbp-0x30],rax
  407021:	call   0x406c30
  407026:	jmp    0x406eeb
  40702b:	lea    rcx,[rip+0x8e66]        # 0x40fe98
  407032:	mov    QWORD PTR [rbp-0x30],0x0
  40703a:	call   0x406bc0
  40703f:	mov    edx,DWORD PTR [rcx]
  407041:	mov    rdi,r13
  407044:	mov    r10,rdx
  407047:	or     r10,r14
  40704a:	test   edx,edx
  40704c:	cmovs  rdx,r10
  407050:	sub    rdx,rax
  407053:	lea    rax,[r8+rdx*1]
  407057:	mov    r8d,0x4
  40705d:	mov    rdx,r13
  407060:	mov    QWORD PTR [rbp-0x30],rax
  407064:	call   0x406c30
  407069:	jmp    0x406eeb
  40706e:	add    rbx,QWORD PTR [rip+0xc6d3]        # 0x413748
  407075:	lea    rcx,[rip+0x8d84]        # 0x40fe00
  40707c:	mov    rax,QWORD PTR [rbx+0x10]
  407080:	mov    r8,QWORD PTR [rbx+0x8]
  407084:	mov    edx,DWORD PTR [rax+0x8]
  407087:	call   0x406bc0
  40708c:	lea    rcx,[rip+0x8dcd]        # 0x40fe60
  407093:	call   0x406bc0
  407098:	nop
  407099:	nop
  40709a:	nop
  40709b:	nop
  40709c:	nop
  40709d:	nop
  40709e:	nop
  40709f:	nop
  4070a0:	sub    rsp,0x28
  4070a4:	mov    eax,DWORD PTR [rcx]
  4070a6:	cmp    eax,0xc0000091
  4070ab:	ja     0x407110
  4070ad:	cmp    eax,0xc000008d
  4070b2:	jae    0x40712f
  4070b4:	cmp    eax,0xc0000008
  4070b9:	je     0x4071d0
  4070bf:	ja     0x4071a0
  4070c5:	cmp    eax,0x80000002
  4070ca:	je     0x4071d0
  4070d0:	cmp    eax,0xc0000005
  4070d5:	jne    0x4071ae
  4070db:	xor    edx,edx
  4070dd:	mov    ecx,0xb
  4070e2:	call   0x40c9a0
  4070e7:	cmp    rax,0x1
  4070eb:	je     0x407230
  4070f1:	test   rax,rax
  4070f4:	je     0x407210
  4070fa:	mov    ecx,0xb
  4070ff:	call   rax
  407101:	xor    eax,eax
  407103:	add    rsp,0x28
  407107:	ret    
  407108:	nop    DWORD PTR [rax+rax*1+0x0]
  407110:	cmp    eax,0xc0000094
  407115:	je     0x4071e0
  40711b:	ja     0x407160
  40711d:	cmp    eax,0xc0000092
  407122:	je     0x4071d0
  407128:	cmp    eax,0xc0000093
  40712d:	jne    0x4071ae
  40712f:	xor    edx,edx
  407131:	mov    ecx,0x8
  407136:	call   0x40c9a0
  40713b:	cmp    rax,0x1
  40713f:	mov    rdx,rax
  407142:	je     0x4071b8
  407144:	test   rdx,rdx
  407147:	mov    eax,0x1
  40714c:	je     0x407103
  40714e:	mov    ecx,0x8
  407153:	call   rdx
  407155:	xor    eax,eax
  407157:	add    rsp,0x28
  40715b:	ret    
  40715c:	nop    DWORD PTR [rax+0x0]
  407160:	cmp    eax,0xc0000095
  407165:	je     0x4071d0
  407167:	cmp    eax,0xc0000096
  40716c:	jne    0x4071ae
  40716e:	xor    edx,edx
  407170:	mov    ecx,0x4
  407175:	call   0x40c9a0
  40717a:	cmp    rax,0x1
  40717e:	je     0x40721a
  407184:	test   rax,rax
  407187:	je     0x407210
  40718d:	mov    ecx,0x4
  407192:	call   rax
  407194:	xor    eax,eax
  407196:	jmp    0x407103
  40719b:	nop    DWORD PTR [rax+rax*1+0x0]
  4071a0:	cmp    eax,0xc000001d
  4071a5:	je     0x40716e
  4071a7:	cmp    eax,0xc000008c
  4071ac:	je     0x4071d0
  4071ae:	mov    eax,0x1
  4071b3:	add    rsp,0x28
  4071b7:	ret    
  4071b8:	mov    edx,0x1
  4071bd:	mov    ecx,0x8
  4071c2:	call   0x40c9a0
  4071c7:	call   0x406b90
  4071cc:	nop    DWORD PTR [rax+0x0]
  4071d0:	xor    eax,eax
  4071d2:	add    rsp,0x28
  4071d6:	ret    
  4071d7:	nop    WORD PTR [rax+rax*1+0x0]
  4071e0:	xor    edx,edx
  4071e2:	mov    ecx,0x8
  4071e7:	call   0x40c9a0
  4071ec:	cmp    rax,0x1
  4071f0:	mov    rdx,rax
  4071f3:	jne    0x407144
  4071f9:	mov    edx,0x1
  4071fe:	mov    ecx,0x8
  407203:	call   0x40c9a0
  407208:	xor    eax,eax
  40720a:	jmp    0x407103
  40720f:	nop
  407210:	mov    eax,0x4
  407215:	add    rsp,0x28
  407219:	ret    
  40721a:	mov    edx,0x1
  40721f:	mov    ecx,0x4
  407224:	call   0x40c9a0
  407229:	xor    eax,eax
  40722b:	jmp    0x407103
  407230:	mov    edx,0x1
  407235:	mov    ecx,0xb
  40723a:	call   0x40c9a0
  40723f:	xor    eax,eax
  407241:	jmp    0x407103
  407246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407250:	push   r12
  407252:	push   rbp
  407253:	push   rdi
  407254:	push   rsi
  407255:	push   rbx
  407256:	sub    rsp,0x20
  40725a:	call   0x4079c0
  40725f:	mov    rbp,rax
  407262:	mov    eax,DWORD PTR [rip+0xc520]        # 0x413788
  407268:	test   eax,eax
  40726a:	jne    0x407291
  40726c:	test   rbp,rbp
  40726f:	je     0x407291
  407271:	lea    rcx,[rip+0x8c58]        # 0x40fed0
  407278:	mov    DWORD PTR [rip+0xc506],0x1        # 0x413788
  407282:	call   0x407800
  407287:	test   rax,rax
  40728a:	je     0x4072a0
  40728c:	mov    eax,0x1
  407291:	add    rsp,0x20
  407295:	pop    rbx
  407296:	pop    rsi
  407297:	pop    rdi
  407298:	pop    rbp
  407299:	pop    r12
  40729b:	ret    
  40729c:	nop    DWORD PTR [rax+0x0]
  4072a0:	lea    rbx,[rip+0xc619]        # 0x4138c0
  4072a7:	mov    ecx,0x30
  4072ac:	lea    rdx,[rip+0xc50d]        # 0x4137c0
  4072b3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x4070a0
  4072ba:	xor    esi,esi
  4072bc:	mov    rdi,rbx
  4072bf:	rep stos QWORD PTR es:[rdi],rax
  4072c2:	mov    rdi,rdx
  4072c5:	sub    r12,rbp
  4072c8:	mov    cl,0x20
  4072ca:	rep stos QWORD PTR es:[rdi],rax
  4072cd:	mov    rdi,rdx
  4072d0:	jmp    0x407300
  4072d2:	mov    BYTE PTR [rdi],0x9
  4072d5:	mov    DWORD PTR [rdi+0x4],r12d
  4072d9:	add    rsi,0x1
  4072dd:	mov    edx,DWORD PTR [rax+0xc]
  4072e0:	add    rbx,0xc
  4072e4:	mov    DWORD PTR [rbx-0xc],edx
  4072e7:	add    edx,DWORD PTR [rax+0x8]
  4072ea:	mov    rax,rdi
  4072ed:	sub    rax,rbp
  4072f0:	add    rdi,0x8
  4072f4:	mov    DWORD PTR [rbx-0x4],eax
  4072f7:	mov    DWORD PTR [rbx-0x8],edx
  4072fa:	cmp    rsi,0x20
  4072fe:	je     0x407335
  407300:	mov    rcx,rsi
  407303:	call   0x407930
  407308:	test   rax,rax
  40730b:	jne    0x4072d2
  40730d:	test   rsi,rsi
  407310:	je     0x40728c
  407316:	mov    edx,esi
  407318:	nop    DWORD PTR [rax+rax*1+0x0]
  407320:	mov    r8,rbp
  407323:	lea    rcx,[rip+0xc596]        # 0x4138c0
  40732a:	call   QWORD PTR [rip+0xe424]        # 0x415754
  407330:	jmp    0x40728c
  407335:	mov    edx,0x20
  40733a:	jmp    0x407320
  40733c:	nop    DWORD PTR [rax+0x0]
  407340:	push   rbx
  407341:	sub    rsp,0x20
  407345:	mov    rdx,QWORD PTR [rcx]
  407348:	mov    eax,DWORD PTR [rdx]
  40734a:	mov    r8d,eax
  40734d:	and    r8d,0x20ffffff
  407354:	cmp    r8d,0x20474343
  40735b:	je     0x407460
  407361:	cmp    eax,0xc0000091
  407366:	mov    rbx,rcx
  407369:	ja     0x4073f0
  40736f:	cmp    eax,0xc000008d
  407374:	jae    0x407407
  40737a:	cmp    eax,0xc0000008
  40737f:	je     0x4073b3
  407381:	ja     0x4073c0
  407383:	cmp    eax,0x80000002
  407388:	je     0x4073b3
  40738a:	cmp    eax,0xc0000005
  40738f:	jne    0x4073d2
  407391:	xor    edx,edx
  407393:	mov    ecx,0xb
  407398:	call   0x40c9a0
  40739d:	cmp    rax,0x1
  4073a1:	je     0x4074d0
  4073a7:	test   rax,rax
  4073aa:	je     0x4073d2
  4073ac:	mov    ecx,0xb
  4073b1:	call   rax
  4073b3:	mov    eax,0xffffffff
  4073b8:	add    rsp,0x20
  4073bc:	pop    rbx
  4073bd:	ret    
  4073be:	xchg   ax,ax
  4073c0:	cmp    eax,0xc000001d
  4073c5:	je     0x407486
  4073cb:	cmp    eax,0xc000008c
  4073d0:	je     0x4073b3
  4073d2:	mov    rax,QWORD PTR [rip+0xc3a7]        # 0x413780
  4073d9:	test   rax,rax
  4073dc:	je     0x4073b8
  4073de:	mov    rcx,rbx
  4073e1:	add    rsp,0x20
  4073e5:	pop    rbx
  4073e6:	rex.W jmp rax
  4073e9:	nop    DWORD PTR [rax+0x0]
  4073f0:	cmp    eax,0xc0000094
  4073f5:	je     0x407432
  4073f7:	ja     0x407470
  4073f9:	cmp    eax,0xc0000092
  4073fe:	je     0x4073b3
  407400:	cmp    eax,0xc0000093
  407405:	jne    0x4073d2
  407407:	xor    edx,edx
  407409:	mov    ecx,0x8
  40740e:	call   0x40c9a0
  407413:	cmp    rax,0x1
  407417:	jne    0x407444
  407419:	mov    edx,0x1
  40741e:	mov    ecx,0x8
  407423:	call   0x40c9a0
  407428:	call   0x406b90
  40742d:	jmp    0x4073b3
  407432:	xor    edx,edx
  407434:	mov    ecx,0x8
  407439:	call   0x40c9a0
  40743e:	cmp    rax,0x1
  407442:	je     0x4074b2
  407444:	test   rax,rax
  407447:	je     0x4073d2
  407449:	mov    ecx,0x8
  40744e:	call   rax
  407450:	mov    eax,0xffffffff
  407455:	jmp    0x4073b8
  40745a:	nop    WORD PTR [rax+rax*1+0x0]
  407460:	test   BYTE PTR [rdx+0x4],0x1
  407464:	jne    0x407361
  40746a:	jmp    0x4073b3
  40746f:	nop
  407470:	cmp    eax,0xc0000095
  407475:	je     0x4073b3
  40747b:	cmp    eax,0xc0000096
  407480:	jne    0x4073d2
  407486:	xor    edx,edx
  407488:	mov    ecx,0x4
  40748d:	call   0x40c9a0
  407492:	cmp    rax,0x1
  407496:	je     0x4074e4
  407498:	test   rax,rax
  40749b:	je     0x4073d2
  4074a1:	mov    ecx,0x4
  4074a6:	call   rax
  4074a8:	mov    eax,0xffffffff
  4074ad:	jmp    0x4073b8
  4074b2:	mov    edx,0x1
  4074b7:	mov    ecx,0x8
  4074bc:	call   0x40c9a0
  4074c1:	jmp    0x4073b3
  4074c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074d0:	mov    edx,0x1
  4074d5:	mov    ecx,0xb
  4074da:	call   0x40c9a0
  4074df:	jmp    0x4073b3
  4074e4:	mov    edx,0x1
  4074e9:	mov    ecx,0x4
  4074ee:	call   0x40c9a0
  4074f3:	jmp    0x4073b3
  4074f8:	nop
  4074f9:	nop
  4074fa:	nop
  4074fb:	nop
  4074fc:	nop
  4074fd:	nop
  4074fe:	nop
  4074ff:	nop
  407500:	push   rbp
  407501:	push   rdi
  407502:	push   rsi
  407503:	push   rbx
  407504:	sub    rsp,0x28
  407508:	lea    rcx,[rip+0xc551]        # 0x413a60
  40750f:	call   QWORD PTR [rip+0xe1df]        # 0x4156f4
  407515:	mov    rbx,QWORD PTR [rip+0xc524]        # 0x413a40
  40751c:	test   rbx,rbx
  40751f:	je     0x407554
  407521:	mov    rbp,QWORD PTR [rip+0xe264]        # 0x41578c
  407528:	mov    rdi,QWORD PTR [rip+0xe1e5]        # 0x415714
  40752f:	nop
  407530:	mov    ecx,DWORD PTR [rbx]
  407532:	call   rbp
  407534:	mov    rsi,rax
  407537:	call   rdi
  407539:	test   eax,eax
  40753b:	jne    0x40754b
  40753d:	test   rsi,rsi
  407540:	je     0x40754b
  407542:	mov    rax,QWORD PTR [rbx+0x8]
  407546:	mov    rcx,rsi
  407549:	call   rax
  40754b:	mov    rbx,QWORD PTR [rbx+0x10]
  40754f:	test   rbx,rbx
  407552:	jne    0x407530
  407554:	mov    rax,QWORD PTR [rip+0xe1e9]        # 0x415744
  40755b:	lea    rcx,[rip+0xc4fe]        # 0x413a60
  407562:	add    rsp,0x28
  407566:	pop    rbx
  407567:	pop    rsi
  407568:	pop    rdi
  407569:	pop    rbp
  40756a:	rex.W jmp rax
  40756d:	nop    DWORD PTR [rax]
  407570:	push   rdi
  407571:	push   rsi
  407572:	push   rbx
  407573:	sub    rsp,0x20
  407577:	mov    eax,DWORD PTR [rip+0xc4cb]        # 0x413a48
  40757d:	test   eax,eax
  40757f:	jne    0x407590
  407581:	add    rsp,0x20
  407585:	pop    rbx
  407586:	pop    rsi
  407587:	pop    rdi
  407588:	ret    
  407589:	nop    DWORD PTR [rax+0x0]
  407590:	mov    rsi,rdx
  407593:	mov    edi,ecx
  407595:	mov    edx,0x18
  40759a:	mov    ecx,0x1
  40759f:	call   0x40ca20
  4075a4:	test   rax,rax
  4075a7:	mov    rbx,rax
  4075aa:	je     0x4075e8
  4075ac:	mov    DWORD PTR [rax],edi
  4075ae:	mov    QWORD PTR [rax+0x8],rsi
  4075b2:	lea    rcx,[rip+0xc4a7]        # 0x413a60
  4075b9:	call   QWORD PTR [rip+0xe135]        # 0x4156f4
  4075bf:	mov    rax,QWORD PTR [rip+0xc47a]        # 0x413a40
  4075c6:	lea    rcx,[rip+0xc493]        # 0x413a60
  4075cd:	mov    QWORD PTR [rip+0xc46c],rbx        # 0x413a40
  4075d4:	mov    QWORD PTR [rbx+0x10],rax
  4075d8:	call   QWORD PTR [rip+0xe166]        # 0x415744
  4075de:	xor    eax,eax
  4075e0:	add    rsp,0x20
  4075e4:	pop    rbx
  4075e5:	pop    rsi
  4075e6:	pop    rdi
  4075e7:	ret    
  4075e8:	mov    eax,0xffffffff
  4075ed:	jmp    0x407581
  4075ef:	nop
  4075f0:	push   rbx
  4075f1:	sub    rsp,0x20
  4075f5:	mov    eax,DWORD PTR [rip+0xc44d]        # 0x413a48
  4075fb:	test   eax,eax
  4075fd:	jne    0x407610
  4075ff:	xor    eax,eax
  407601:	add    rsp,0x20
  407605:	pop    rbx
  407606:	ret    
  407607:	nop    WORD PTR [rax+rax*1+0x0]
  407610:	mov    ebx,ecx
  407612:	lea    rcx,[rip+0xc447]        # 0x413a60
  407619:	call   QWORD PTR [rip+0xe0d5]        # 0x4156f4
  40761f:	mov    rdx,QWORD PTR [rip+0xc41a]        # 0x413a40
  407626:	test   rdx,rdx
  407629:	je     0x407647
  40762b:	mov    eax,DWORD PTR [rdx]
  40762d:	cmp    eax,ebx
  40762f:	jne    0x40763e
  407631:	jmp    0x40767f
  407633:	mov    r8d,DWORD PTR [rax]
  407636:	cmp    r8d,ebx
  407639:	je     0x407660
  40763b:	mov    rdx,rax
  40763e:	mov    rax,QWORD PTR [rdx+0x10]
  407642:	test   rax,rax
  407645:	jne    0x407633
  407647:	lea    rcx,[rip+0xc412]        # 0x413a60
  40764e:	call   QWORD PTR [rip+0xe0f0]        # 0x415744
  407654:	xor    eax,eax
  407656:	add    rsp,0x20
  40765a:	pop    rbx
  40765b:	ret    
  40765c:	nop    DWORD PTR [rax+0x0]
  407660:	mov    rcx,rax
  407663:	mov    rax,QWORD PTR [rax+0x10]
  407667:	mov    QWORD PTR [rdx+0x10],rax
  40766b:	call   0x40c9f0
  407670:	lea    rcx,[rip+0xc3e9]        # 0x413a60
  407677:	call   QWORD PTR [rip+0xe0c7]        # 0x415744
  40767d:	jmp    0x407654
  40767f:	mov    rax,QWORD PTR [rdx+0x10]
  407683:	mov    rcx,rdx
  407686:	mov    QWORD PTR [rip+0xc3b3],rax        # 0x413a40
  40768d:	jmp    0x40766b
  40768f:	nop
  407690:	push   rbx
  407691:	sub    rsp,0x20
  407695:	cmp    edx,0x1
  407698:	je     0x407730
  40769e:	jb     0x4076d0
  4076a0:	cmp    edx,0x2
  4076a3:	je     0x4076c0
  4076a5:	cmp    edx,0x3
  4076a8:	jne    0x4076c5
  4076aa:	mov    eax,DWORD PTR [rip+0xc398]        # 0x413a48
  4076b0:	test   eax,eax
  4076b2:	je     0x4076c5
  4076b4:	call   0x407500
  4076b9:	jmp    0x4076c5
  4076bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4076c0:	call   0x406b90
  4076c5:	mov    eax,0x1
  4076ca:	add    rsp,0x20
  4076ce:	pop    rbx
  4076cf:	ret    
  4076d0:	mov    eax,DWORD PTR [rip+0xc372]        # 0x413a48
  4076d6:	test   eax,eax
  4076d8:	jne    0x407760
  4076de:	mov    eax,DWORD PTR [rip+0xc364]        # 0x413a48
  4076e4:	cmp    eax,0x1
  4076e7:	jne    0x4076c5
  4076e9:	mov    rcx,QWORD PTR [rip+0xc350]        # 0x413a40
  4076f0:	test   rcx,rcx
  4076f3:	je     0x407706
  4076f5:	mov    rbx,QWORD PTR [rcx+0x10]
  4076f9:	call   0x40c9f0
  4076fe:	test   rbx,rbx
  407701:	mov    rcx,rbx
  407704:	jne    0x4076f5
  407706:	lea    rcx,[rip+0xc353]        # 0x413a60
  40770d:	mov    QWORD PTR [rip+0xc328],0x0        # 0x413a40
  407718:	mov    DWORD PTR [rip+0xc326],0x0        # 0x413a48
  407722:	call   QWORD PTR [rip+0xdfc4]        # 0x4156ec
  407728:	jmp    0x4076c5
  40772a:	nop    WORD PTR [rax+rax*1+0x0]
  407730:	mov    eax,DWORD PTR [rip+0xc312]        # 0x413a48
  407736:	test   eax,eax
  407738:	je     0x407750
  40773a:	mov    eax,0x1
  40773f:	mov    DWORD PTR [rip+0xc2ff],0x1        # 0x413a48
  407749:	add    rsp,0x20
  40774d:	pop    rbx
  40774e:	ret    
  40774f:	nop
  407750:	lea    rcx,[rip+0xc309]        # 0x413a60
  407757:	call   QWORD PTR [rip+0xdfdf]        # 0x41573c
  40775d:	jmp    0x40773a
  40775f:	nop
  407760:	call   0x407500
  407765:	jmp    0x4076de
  40776a:	nop
  40776b:	nop
  40776c:	nop
  40776d:	nop
  40776e:	nop
  40776f:	nop
  407770:	movsxd rax,DWORD PTR [rcx+0x3c]
  407774:	add    rcx,rax
  407777:	xor    eax,eax
  407779:	cmp    DWORD PTR [rcx],0x4550
  40777f:	je     0x407783
  407781:	repz ret 
  407783:	xor    eax,eax
  407785:	cmp    WORD PTR [rcx+0x18],0x20b
  40778b:	sete   al
  40778e:	ret    
  40778f:	nop
  407790:	cmp    WORD PTR [rcx],0x5a4d
  407795:	je     0x4077a0
  407797:	xor    eax,eax
  407799:	ret    
  40779a:	nop    WORD PTR [rax+rax*1+0x0]
  4077a0:	jmp    0x407770
  4077a2:	nop    DWORD PTR [rax+0x0]
  4077a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077b0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4077b4:	add    rcx,rax
  4077b7:	movzx  eax,WORD PTR [rcx+0x14]
  4077bb:	lea    rax,[rcx+rax*1+0x18]
  4077c0:	movzx  ecx,WORD PTR [rcx+0x6]
  4077c4:	test   ecx,ecx
  4077c6:	je     0x4077f1
  4077c8:	sub    ecx,0x1
  4077cb:	lea    rcx,[rcx+rcx*4]
  4077cf:	lea    r9,[rax+rcx*8+0x28]
  4077d4:	mov    r8d,DWORD PTR [rax+0xc]
  4077d8:	cmp    r8,rdx
  4077db:	mov    rcx,r8
  4077de:	ja     0x4077e8
  4077e0:	add    ecx,DWORD PTR [rax+0x8]
  4077e3:	cmp    rdx,rcx
  4077e6:	jb     0x4077f3
  4077e8:	add    rax,0x28
  4077ec:	cmp    rax,r9
  4077ef:	jne    0x4077d4
  4077f1:	xor    eax,eax
  4077f3:	repz ret 
  4077f5:	nop
  4077f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407800:	push   rdi
  407801:	push   rsi
  407802:	push   rbx
  407803:	sub    rsp,0x20
  407807:	mov    rsi,rcx
  40780a:	call   0x40c980
  40780f:	cmp    rax,0x8
  407813:	ja     0x407830
  407815:	mov    rbx,QWORD PTR [rip+0x8d24]        # 0x410540
  40781c:	xor    edi,edi
  40781e:	cmp    WORD PTR [rbx],0x5a4d
  407823:	je     0x407840
  407825:	mov    rax,rdi
  407828:	add    rsp,0x20
  40782c:	pop    rbx
  40782d:	pop    rsi
  40782e:	pop    rdi
  40782f:	ret    
  407830:	xor    edi,edi
  407832:	mov    rax,rdi
  407835:	add    rsp,0x20
  407839:	pop    rbx
  40783a:	pop    rsi
  40783b:	pop    rdi
  40783c:	ret    
  40783d:	nop    DWORD PTR [rax]
  407840:	mov    rcx,rbx
  407843:	call   0x407770
  407848:	test   eax,eax
  40784a:	je     0x407825
  40784c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  407850:	add    rdx,rbx
  407853:	movzx  eax,WORD PTR [rdx+0x14]
  407857:	lea    rbx,[rdx+rax*1+0x18]
  40785c:	movzx  eax,WORD PTR [rdx+0x6]
  407860:	test   eax,eax
  407862:	je     0x407825
  407864:	sub    eax,0x1
  407867:	lea    rax,[rax+rax*4]
  40786b:	lea    rdi,[rbx+rax*8+0x28]
  407870:	jmp    0x40787b
  407872:	add    rbx,0x28
  407876:	cmp    rbx,rdi
  407879:	je     0x407830
  40787b:	mov    r8d,0x8
  407881:	mov    rdx,rsi
  407884:	mov    rcx,rbx
  407887:	call   0x40c978
  40788c:	test   eax,eax
  40788e:	jne    0x407872
  407890:	mov    rdi,rbx
  407893:	mov    rax,rdi
  407896:	add    rsp,0x20
  40789a:	pop    rbx
  40789b:	pop    rsi
  40789c:	pop    rdi
  40789d:	ret    
  40789e:	xchg   ax,ax
  4078a0:	push   rsi
  4078a1:	push   rbx
  4078a2:	sub    rsp,0x28
  4078a6:	mov    rbx,QWORD PTR [rip+0x8c93]        # 0x410540
  4078ad:	cmp    WORD PTR [rbx],0x5a4d
  4078b2:	je     0x4078c0
  4078b4:	xor    eax,eax
  4078b6:	add    rsp,0x28
  4078ba:	pop    rbx
  4078bb:	pop    rsi
  4078bc:	ret    
  4078bd:	nop    DWORD PTR [rax]
  4078c0:	mov    rsi,rcx
  4078c3:	mov    rcx,rbx
  4078c6:	call   0x407770
  4078cb:	test   eax,eax
  4078cd:	je     0x4078b4
  4078cf:	sub    rsi,rbx
  4078d2:	mov    rcx,rbx
  4078d5:	mov    rdx,rsi
  4078d8:	add    rsp,0x28
  4078dc:	pop    rbx
  4078dd:	pop    rsi
  4078de:	jmp    0x4077b0
  4078e3:	nop    DWORD PTR [rax]
  4078e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078f0:	push   rbx
  4078f1:	sub    rsp,0x20
  4078f5:	mov    rbx,QWORD PTR [rip+0x8c44]        # 0x410540
  4078fc:	xor    eax,eax
  4078fe:	cmp    WORD PTR [rbx],0x5a4d
  407903:	je     0x407910
  407905:	add    rsp,0x20
  407909:	pop    rbx
  40790a:	ret    
  40790b:	nop    DWORD PTR [rax+rax*1+0x0]
  407910:	mov    rcx,rbx
  407913:	call   0x407770
  407918:	test   eax,eax
  40791a:	je     0x407905
  40791c:	movsxd rax,DWORD PTR [rbx+0x3c]
  407920:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  407925:	add    rsp,0x20
  407929:	pop    rbx
  40792a:	ret    
  40792b:	nop    DWORD PTR [rax+rax*1+0x0]
  407930:	push   rdi
  407931:	push   rsi
  407932:	push   rbx
  407933:	sub    rsp,0x20
  407937:	mov    rsi,QWORD PTR [rip+0x8c02]        # 0x410540
  40793e:	xor    edi,edi
  407940:	mov    rbx,rcx
  407943:	cmp    WORD PTR [rsi],0x5a4d
  407948:	je     0x407955
  40794a:	mov    rax,rdi
  40794d:	add    rsp,0x20
  407951:	pop    rbx
  407952:	pop    rsi
  407953:	pop    rdi
  407954:	ret    
  407955:	mov    rcx,rsi
  407958:	call   0x407770
  40795d:	test   eax,eax
  40795f:	je     0x40794a
  407961:	movsxd rax,DWORD PTR [rsi+0x3c]
  407965:	add    rsi,rax
  407968:	movzx  eax,WORD PTR [rsi+0x14]
  40796c:	lea    rdx,[rsi+rax*1+0x18]
  407971:	movzx  eax,WORD PTR [rsi+0x6]
  407975:	test   eax,eax
  407977:	je     0x40794a
  407979:	sub    eax,0x1
  40797c:	lea    rax,[rax+rax*4]
  407980:	lea    rax,[rdx+rax*8+0x28]
  407985:	test   BYTE PTR [rdx+0x27],0x20
  407989:	je     0x407994
  40798b:	test   rbx,rbx
  40798e:	je     0x4079b0
  407990:	sub    rbx,0x1
  407994:	add    rdx,0x28
  407998:	cmp    rdx,rax
  40799b:	jne    0x407985
  40799d:	xor    edi,edi
  40799f:	mov    rax,rdi
  4079a2:	add    rsp,0x20
  4079a6:	pop    rbx
  4079a7:	pop    rsi
  4079a8:	pop    rdi
  4079a9:	ret    
  4079aa:	nop    WORD PTR [rax+rax*1+0x0]
  4079b0:	mov    rdi,rdx
  4079b3:	mov    rax,rdi
  4079b6:	add    rsp,0x20
  4079ba:	pop    rbx
  4079bb:	pop    rsi
  4079bc:	pop    rdi
  4079bd:	ret    
  4079be:	xchg   ax,ax
  4079c0:	push   rsi
  4079c1:	push   rbx
  4079c2:	sub    rsp,0x28
  4079c6:	mov    rsi,QWORD PTR [rip+0x8b73]        # 0x410540
  4079cd:	xor    ebx,ebx
  4079cf:	cmp    WORD PTR [rsi],0x5a4d
  4079d4:	je     0x4079e0
  4079d6:	mov    rax,rbx
  4079d9:	add    rsp,0x28
  4079dd:	pop    rbx
  4079de:	pop    rsi
  4079df:	ret    
  4079e0:	mov    rcx,rsi
  4079e3:	call   0x407770
  4079e8:	test   eax,eax
  4079ea:	cmovne rbx,rsi
  4079ee:	mov    rax,rbx
  4079f1:	add    rsp,0x28
  4079f5:	pop    rbx
  4079f6:	pop    rsi
  4079f7:	ret    
  4079f8:	nop    DWORD PTR [rax+rax*1+0x0]
  407a00:	push   rsi
  407a01:	push   rbx
  407a02:	sub    rsp,0x28
  407a06:	mov    rbx,QWORD PTR [rip+0x8b33]        # 0x410540
  407a0d:	xor    eax,eax
  407a0f:	cmp    WORD PTR [rbx],0x5a4d
  407a14:	je     0x407a20
  407a16:	add    rsp,0x28
  407a1a:	pop    rbx
  407a1b:	pop    rsi
  407a1c:	ret    
  407a1d:	nop    DWORD PTR [rax]
  407a20:	mov    rsi,rcx
  407a23:	mov    rcx,rbx
  407a26:	call   0x407770
  407a2b:	test   eax,eax
  407a2d:	je     0x407a16
  407a2f:	sub    rsi,rbx
  407a32:	mov    rcx,rbx
  407a35:	mov    rdx,rsi
  407a38:	call   0x4077b0
  407a3d:	test   rax,rax
  407a40:	je     0x407a51
  407a42:	mov    eax,DWORD PTR [rax+0x24]
  407a45:	not    eax
  407a47:	shr    eax,0x1f
  407a4a:	add    rsp,0x28
  407a4e:	pop    rbx
  407a4f:	pop    rsi
  407a50:	ret    
  407a51:	xor    eax,eax
  407a53:	jmp    0x407a16
  407a55:	nop
  407a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a60:	push   rbp
  407a61:	push   rdi
  407a62:	push   rsi
  407a63:	push   rbx
  407a64:	sub    rsp,0x28
  407a68:	mov    rdi,QWORD PTR [rip+0x8ad1]        # 0x410540
  407a6f:	xor    ebp,ebp
  407a71:	mov    esi,ecx
  407a73:	cmp    WORD PTR [rdi],0x5a4d
  407a78:	je     0x407a90
  407a7a:	mov    rax,rbp
  407a7d:	add    rsp,0x28
  407a81:	pop    rbx
  407a82:	pop    rsi
  407a83:	pop    rdi
  407a84:	pop    rbp
  407a85:	ret    
  407a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a90:	mov    rcx,rdi
  407a93:	call   0x407770
  407a98:	test   eax,eax
  407a9a:	je     0x407a7a
  407a9c:	movsxd rax,DWORD PTR [rdi+0x3c]
  407aa0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  407aa7:	test   edx,edx
  407aa9:	je     0x407a7a
  407aab:	mov    ebx,edx
  407aad:	mov    rcx,rdi
  407ab0:	mov    rdx,rbx
  407ab3:	call   0x4077b0
  407ab8:	test   rax,rax
  407abb:	je     0x407a7a
  407abd:	add    rbx,rdi
  407ac0:	mov    rdx,rbx
  407ac3:	jne    0x407ad7
  407ac5:	jmp    0x407a7a
  407ac7:	nop    WORD PTR [rax+rax*1+0x0]
  407ad0:	sub    esi,0x1
  407ad3:	add    rdx,0x14
  407ad7:	mov    ecx,DWORD PTR [rdx+0x4]
  407ada:	test   ecx,ecx
  407adc:	jne    0x407ae5
  407ade:	mov    eax,DWORD PTR [rdx+0xc]
  407ae1:	test   eax,eax
  407ae3:	je     0x407b00
  407ae5:	test   esi,esi
  407ae7:	jg     0x407ad0
  407ae9:	mov    ebp,DWORD PTR [rdx+0xc]
  407aec:	add    rbp,rdi
  407aef:	mov    rax,rbp
  407af2:	add    rsp,0x28
  407af6:	pop    rbx
  407af7:	pop    rsi
  407af8:	pop    rdi
  407af9:	pop    rbp
  407afa:	ret    
  407afb:	nop    DWORD PTR [rax+rax*1+0x0]
  407b00:	xor    ebp,ebp
  407b02:	mov    rax,rbp
  407b05:	add    rsp,0x28
  407b09:	pop    rbx
  407b0a:	pop    rsi
  407b0b:	pop    rdi
  407b0c:	pop    rbp
  407b0d:	ret    
  407b0e:	nop
  407b0f:	nop
  407b10:	push   rcx
  407b11:	push   rax
  407b12:	cmp    rax,0x1000
  407b18:	lea    rcx,[rsp+0x18]
  407b1d:	jb     0x407b38
  407b1f:	sub    rcx,0x1000
  407b26:	or     QWORD PTR [rcx],0x0
  407b2a:	sub    rax,0x1000
  407b30:	cmp    rax,0x1000
  407b36:	ja     0x407b1f
  407b38:	sub    rcx,rax
  407b3b:	or     QWORD PTR [rcx],0x0
  407b3f:	pop    rax
  407b40:	pop    rcx
  407b41:	ret    
  407b42:	nop
  407b43:	nop
  407b44:	nop
  407b45:	nop
  407b46:	nop
  407b47:	nop
  407b48:	nop
  407b49:	nop
  407b4a:	nop
  407b4b:	nop
  407b4c:	nop
  407b4d:	nop
  407b4e:	nop
  407b4f:	nop
  407b50:	push   rbx
  407b51:	sub    rsp,0x60
  407b55:	lea    r8,[rip+0x6664]        # 0x40e1c0
  407b5c:	lea    rax,[rsp+0x50]
  407b61:	lea    r9,[rsp+0x4c]
  407b66:	mov    QWORD PTR [rsp+0x20],rax
  407b6b:	call   0x408fe0
  407b70:	mov    edx,eax
  407b72:	and    edx,0x7
  407b75:	cmp    edx,0x6
  407b78:	ja     0x407ba5
  407b7a:	lea    rcx,[rip+0x835f]        # 0x40fee0
  407b81:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  407b85:	add    rcx,rdx
  407b88:	jmp    rcx
  407b8a:	nop    WORD PTR [rax+rax*1+0x0]
  407b90:	mov    ebx,DWORD PTR [rsp+0x54]
  407b94:	mov    edx,DWORD PTR [rsp+0x50]
  407b98:	or     ebx,0x7ff00000
  407b9e:	shl    rbx,0x20
  407ba2:	or     rbx,rdx
  407ba5:	test   al,0x8
  407ba7:	je     0x407bbe
  407ba9:	mov    rax,rbx
  407bac:	mov    ebx,ebx
  407bae:	shr    rax,0x20
  407bb2:	or     eax,0x80000000
  407bb7:	shl    rax,0x20
  407bbb:	or     rbx,rax
  407bbe:	mov    QWORD PTR [rsp+0x38],rbx
  407bc3:	movsd  xmm0,QWORD PTR [rsp+0x38]
  407bc9:	add    rsp,0x60
  407bcd:	pop    rbx
  407bce:	ret    
  407bcf:	nop
  407bd0:	movabs rbx,0x7ff8000000000000
  407bda:	jmp    0x407ba5
  407bdc:	nop    DWORD PTR [rax+0x0]
  407be0:	xor    ebx,ebx
  407be2:	jmp    0x407ba5
  407be4:	mov    ebx,DWORD PTR [rsp+0x4c]
  407be8:	mov    edx,DWORD PTR [rsp+0x54]
  407bec:	add    ebx,0x433
  407bf2:	and    edx,0xffefffff
  407bf8:	shl    ebx,0x14
  407bfb:	or     ebx,edx
  407bfd:	mov    edx,DWORD PTR [rsp+0x50]
  407c01:	shl    rbx,0x20
  407c05:	or     rbx,rdx
  407c08:	jmp    0x407ba5
  407c0a:	nop    WORD PTR [rax+rax*1+0x0]
  407c10:	mov    ebx,DWORD PTR [rsp+0x54]
  407c14:	mov    edx,DWORD PTR [rsp+0x50]
  407c18:	shl    rbx,0x20
  407c1c:	or     rbx,rdx
  407c1f:	jmp    0x407ba5
  407c21:	movabs rbx,0x7ff0000000000000
  407c2b:	jmp    0x407ba5
  407c30:	push   r13
  407c32:	push   r12
  407c34:	push   rbp
  407c35:	push   rdi
  407c36:	push   rsi
  407c37:	push   rbx
  407c38:	mov    r12d,edx
  407c3b:	mov    ebp,r8d
  407c3e:	mov    edi,edx
  407c40:	sub    r12d,ecx
  407c43:	sub    ebp,edx
  407c45:	mov    eax,r12d
  407c48:	cdq    
  407c49:	idiv   ebp
  407c4b:	test   edx,edx
  407c4d:	mov    r13d,edx
  407c50:	je     0x407cd5
  407c56:	mov    eax,ebp
  407c58:	jmp    0x407c63
  407c5a:	nop    WORD PTR [rax+rax*1+0x0]
  407c60:	mov    r13d,edx
  407c63:	cdq    
  407c64:	idiv   r13d
  407c67:	mov    eax,r13d
  407c6a:	test   edx,edx
  407c6c:	jne    0x407c60
  407c6e:	mov    eax,r8d
  407c71:	sub    eax,ecx
  407c73:	cdq    
  407c74:	idiv   r13d
  407c77:	test   r13d,r13d
  407c7a:	jle    0x407ccc
  407c7c:	movsxd rdx,edi
  407c7f:	xor    esi,esi
  407c81:	lea    rdx,[r9+rdx*8]
  407c85:	test   eax,eax
  407c87:	lea    ecx,[rdi+rsi*1]
  407c8a:	jle    0x407cc3
  407c8c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  407c90:	xor    r10d,r10d
  407c93:	mov    r11d,ecx
  407c96:	lea    r8d,[rcx+rbp*1]
  407c9a:	sub    r11d,r12d
  407c9d:	cmp    edi,ecx
  407c9f:	mov    ecx,r11d
  407ca2:	cmovg  ecx,r8d
  407ca6:	add    r10d,0x1
  407caa:	movsxd r11,ecx
  407cad:	cmp    r10d,eax
  407cb0:	lea    r8,[r9+r11*8]
  407cb4:	mov    r11,QWORD PTR [r8]
  407cb7:	mov    QWORD PTR [r8],rbx
  407cba:	mov    QWORD PTR [rdx+rsi*8],r11
  407cbe:	mov    rbx,r11
  407cc1:	jne    0x407c93
  407cc3:	add    rsi,0x1
  407cc7:	cmp    r13d,esi
  407cca:	jg     0x407c85
  407ccc:	pop    rbx
  407ccd:	pop    rsi
  407cce:	pop    rdi
  407ccf:	pop    rbp
  407cd0:	pop    r12
  407cd2:	pop    r13
  407cd4:	ret    
  407cd5:	mov    r13d,ebp
  407cd8:	jmp    0x407c6e
  407cda:	nop    WORD PTR [rax+rax*1+0x0]
  407ce0:	push   rdi
  407ce1:	push   rsi
  407ce2:	push   rbx
  407ce3:	sub    rsp,0x30
  407ce7:	mov    rax,QWORD PTR [rip+0x8862]        # 0x410550
  407cee:	mov    QWORD PTR [rsp+0x58],rdx
  407cf3:	mov    QWORD PTR [rsp+0x60],r8
  407cf8:	lea    rsi,[rsp+0x58]
  407cfd:	mov    QWORD PTR [rsp+0x68],r9
  407d02:	mov    rbx,rcx
  407d05:	mov    rax,QWORD PTR [rax]
  407d08:	mov    QWORD PTR [rsp+0x28],rsi
  407d0d:	mov    rax,QWORD PTR [rax]
  407d10:	mov    rdi,QWORD PTR [rax]
  407d13:	call   0x40ca98
  407d18:	lea    rdx,[rip+0x81e1]        # 0x40ff00
  407d1f:	lea    rcx,[rax+0x60]
  407d23:	mov    r8,rdi
  407d26:	call   0x40ca08
  407d2b:	test   rbx,rbx
  407d2e:	je     0x407d44
  407d30:	call   0x40ca98
  407d35:	lea    rcx,[rax+0x60]
  407d39:	mov    r8,rsi
  407d3c:	mov    rdx,rbx
  407d3f:	call   0x40c950
  407d44:	call   0x40ca98
  407d49:	lea    rdx,[rax+0x60]
  407d4d:	mov    ecx,0xa
  407d52:	call   0x40ca00
  407d57:	nop
  407d58:	add    rsp,0x30
  407d5c:	pop    rbx
  407d5d:	pop    rsi
  407d5e:	pop    rdi
  407d5f:	ret    
  407d60:	push   r15
  407d62:	push   r14
  407d64:	push   r13
  407d66:	push   r12
  407d68:	push   rbp
  407d69:	push   rdi
  407d6a:	push   rsi
  407d6b:	push   rbx
  407d6c:	sub    rsp,0x48
  407d70:	mov    eax,DWORD PTR [rip+0x6486]        # 0x40e1fc
  407d76:	mov    rbp,QWORD PTR [rip+0x6473]        # 0x40e1f0
  407d7d:	mov    QWORD PTR [rsp+0x90],rcx
  407d85:	mov    QWORD PTR [rsp+0x98],rdx
  407d8d:	mov    edx,0x3d
  407d92:	mov    r14,r8
  407d95:	mov    QWORD PTR [rsp+0xa8],r9
  407d9d:	mov    r13d,DWORD PTR [rsp+0xb0]
  407da5:	mov    DWORD PTR [rsp+0x38],eax
  407da9:	mov    rcx,rbp
  407dac:	add    eax,0x1
  407daf:	mov    DWORD PTR [rsp+0x3c],eax
  407db3:	mov    DWORD PTR [rip+0x6443],eax        # 0x40e1fc
  407db9:	call   0x40c998
  407dbe:	test   rax,rax
  407dc1:	mov    QWORD PTR [rsp+0x30],rax
  407dc6:	je     0x407fa4
  407dcc:	mov    rdi,rax
  407dcf:	add    rax,0x1
  407dd3:	sub    rdi,rbp
  407dd6:	mov    QWORD PTR [rsp+0x30],rax
  407ddb:	mov    r15,QWORD PTR [r14]
  407dde:	test   r15,r15
  407de1:	je     0x407feb
  407de7:	lea    rbx,[r14+0x20]
  407deb:	mov    r12d,0xffffffff
  407df1:	mov    DWORD PTR [rsp+0x2c],0x0
  407df9:	xor    esi,esi
  407dfb:	jmp    0x407e15
  407dfd:	nop    DWORD PTR [rax]
  407e00:	test   r13d,r13d
  407e03:	je     0x407e3e
  407e05:	add    rbx,0x20
  407e09:	mov    r15,QWORD PTR [rbx-0x20]
  407e0d:	add    esi,0x1
  407e10:	test   r15,r15
  407e13:	je     0x407e80
  407e15:	mov    r8,rdi
  407e18:	mov    rdx,r15
  407e1b:	mov    rcx,rbp
  407e1e:	call   0x40c978
  407e23:	test   eax,eax
  407e25:	jne    0x407e05
  407e27:	mov    rcx,r15
  407e2a:	call   0x40c980
  407e2f:	cmp    rax,rdi
  407e32:	je     0x407f2d
  407e38:	cmp    rdi,0x1
  407e3c:	je     0x407e00
  407e3e:	cmp    r12d,0xffffffff
  407e42:	je     0x407ee0
  407e48:	movsxd rax,r12d
  407e4b:	shl    rax,0x5
  407e4f:	add    rax,r14
  407e52:	mov    edx,DWORD PTR [rax+0x8]
  407e55:	cmp    DWORD PTR [rbx-0x18],edx
  407e58:	je     0x407ef0
  407e5e:	add    rbx,0x20
  407e62:	mov    r15,QWORD PTR [rbx-0x20]
  407e66:	add    esi,0x1
  407e69:	mov    DWORD PTR [rsp+0x2c],0x1
  407e71:	test   r15,r15
  407e74:	jne    0x407e15
  407e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e80:	mov    r9d,DWORD PTR [rsp+0x2c]
  407e85:	test   r9d,r9d
  407e88:	je     0x407f20
  407e8e:	mov    r8d,DWORD PTR [rip+0x636b]        # 0x40e200
  407e95:	test   r8d,r8d
  407e98:	je     0x407eb8
  407e9a:	mov    rax,QWORD PTR [rsp+0x98]
  407ea2:	cmp    BYTE PTR [rax],0x3a
  407ea5:	je     0x407eb8
  407ea7:	lea    rcx,[rip+0x80e2]        # 0x40ff90
  407eae:	mov    r8,rbp
  407eb1:	mov    edx,edi
  407eb3:	call   0x407ce0
  407eb8:	mov    DWORD PTR [rip+0x6336],0x0        # 0x40e1f8
  407ec2:	mov    eax,0x3f
  407ec7:	add    rsp,0x48
  407ecb:	pop    rbx
  407ecc:	pop    rsi
  407ecd:	pop    rdi
  407ece:	pop    rbp
  407ecf:	pop    r12
  407ed1:	pop    r13
  407ed3:	pop    r14
  407ed5:	pop    r15
  407ed7:	ret    
  407ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  407ee0:	mov    r12d,esi
  407ee3:	jmp    0x407e05
  407ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  407ef0:	mov    rdx,QWORD PTR [rax+0x10]
  407ef4:	cmp    QWORD PTR [rbx-0x10],rdx
  407ef8:	jne    0x407e5e
  407efe:	mov    eax,DWORD PTR [rax+0x18]
  407f01:	cmp    DWORD PTR [rbx-0x8],eax
  407f04:	mov    eax,0x1
  407f09:	cmove  eax,DWORD PTR [rsp+0x2c]
  407f0e:	mov    DWORD PTR [rsp+0x2c],eax
  407f12:	jmp    0x407e05
  407f17:	nop    WORD PTR [rax+rax*1+0x0]
  407f20:	cmp    r12d,0xffffffff
  407f24:	je     0x407feb
  407f2a:	mov    esi,r12d
  407f2d:	movsxd rax,esi
  407f30:	shl    rax,0x5
  407f34:	add    r14,rax
  407f37:	cmp    QWORD PTR [rsp+0x30],0x0
  407f3d:	mov    eax,DWORD PTR [r14+0x8]
  407f41:	setne  cl
  407f44:	je     0x407fb4
  407f46:	test   eax,eax
  407f48:	jne    0x407fb4
  407f4a:	mov    ecx,DWORD PTR [rip+0x62b0]        # 0x40e200
  407f50:	test   ecx,ecx
  407f52:	jne    0x407f84
  407f54:	cmp    QWORD PTR [r14+0x10],0x0
  407f59:	je     0x4080b4
  407f5f:	mov    DWORD PTR [rip+0x628f],0x0        # 0x40e1f8
  407f69:	mov    rax,QWORD PTR [rsp+0x98]
  407f71:	cmp    BYTE PTR [rax],0x3a
  407f74:	je     0x4080a1
  407f7a:	mov    eax,0x3f
  407f7f:	jmp    0x407ec7
  407f84:	mov    rax,QWORD PTR [rsp+0x98]
  407f8c:	cmp    BYTE PTR [rax],0x3a
  407f8f:	je     0x407f54
  407f91:	lea    rcx,[rip+0x7fc8]        # 0x40ff60
  407f98:	mov    r8,rbp
  407f9b:	mov    edx,edi
  407f9d:	call   0x407ce0
  407fa2:	jmp    0x407f54
  407fa4:	mov    rcx,rbp
  407fa7:	call   0x40c980
  407fac:	mov    rdi,rax
  407faf:	jmp    0x407ddb
  407fb4:	lea    edx,[rax-0x1]
  407fb7:	cmp    edx,0x1
  407fba:	jbe    0x408027
  407fbc:	cmp    QWORD PTR [rsp+0xa8],0x0
  407fc5:	je     0x407fd1
  407fc7:	mov    rax,QWORD PTR [rsp+0xa8]
  407fcf:	mov    DWORD PTR [rax],esi
  407fd1:	mov    rax,QWORD PTR [r14+0x10]
  407fd5:	test   rax,rax
  407fd8:	je     0x4080ab
  407fde:	mov    edx,DWORD PTR [r14+0x18]
  407fe2:	mov    DWORD PTR [rax],edx
  407fe4:	xor    eax,eax
  407fe6:	jmp    0x407ec7
  407feb:	test   r13d,r13d
  407fee:	jne    0x408102
  407ff4:	mov    eax,DWORD PTR [rip+0x6206]        # 0x40e200
  407ffa:	test   eax,eax
  407ffc:	je     0x407eb8
  408002:	mov    rax,QWORD PTR [rsp+0x98]
  40800a:	cmp    BYTE PTR [rax],0x3a
  40800d:	je     0x407eb8
  408013:	lea    rcx,[rip+0x7f06]        # 0x40ff20
  40801a:	mov    rdx,rbp
  40801d:	call   0x407ce0
  408022:	jmp    0x407eb8
  408027:	test   cl,cl
  408029:	je     0x4080c3
  40802f:	mov    rdx,QWORD PTR [rsp+0x30]
  408034:	cmp    eax,0x1
  408037:	mov    QWORD PTR [rip+0xc532],rdx        # 0x414570
  40803e:	jne    0x407fbc
  408044:	mov    r15,QWORD PTR [rsp+0x30]
  408049:	test   r15,r15
  40804c:	jne    0x407fbc
  408052:	mov    edx,DWORD PTR [rip+0x61a8]        # 0x40e200
  408058:	test   edx,edx
  40805a:	je     0x408078
  40805c:	mov    rax,QWORD PTR [rsp+0x98]
  408064:	cmp    BYTE PTR [rax],0x3a
  408067:	je     0x408078
  408069:	lea    rcx,[rip+0x7f50]        # 0x40ffc0
  408070:	mov    rdx,rbp
  408073:	call   0x407ce0
  408078:	cmp    QWORD PTR [r14+0x10],0x0
  40807d:	je     0x4080f6
  40807f:	mov    DWORD PTR [rip+0x616f],0x0        # 0x40e1f8
  408089:	mov    rax,QWORD PTR [rsp+0x98]
  408091:	sub    DWORD PTR [rip+0x6164],0x1        # 0x40e1fc
  408098:	cmp    BYTE PTR [rax],0x3a
  40809b:	jne    0x407f7a
  4080a1:	mov    eax,0x3a
  4080a6:	jmp    0x407ec7
  4080ab:	mov    eax,DWORD PTR [r14+0x18]
  4080af:	jmp    0x407ec7
  4080b4:	mov    eax,DWORD PTR [r14+0x18]
  4080b8:	mov    DWORD PTR [rip+0x613a],eax        # 0x40e1f8
  4080be:	jmp    0x407f69
  4080c3:	cmp    eax,0x1
  4080c6:	jne    0x407fbc
  4080cc:	mov    eax,DWORD PTR [rsp+0x38]
  4080d0:	mov    rdx,QWORD PTR [rsp+0x90]
  4080d8:	add    eax,0x2
  4080db:	mov    DWORD PTR [rip+0x611b],eax        # 0x40e1fc
  4080e1:	movsxd rax,DWORD PTR [rsp+0x3c]
  4080e6:	mov    r15,QWORD PTR [rdx+rax*8]
  4080ea:	mov    QWORD PTR [rip+0xc47f],r15        # 0x414570
  4080f1:	jmp    0x408049
  4080f6:	mov    eax,DWORD PTR [r14+0x18]
  4080fa:	mov    DWORD PTR [rip+0x60f8],eax        # 0x40e1f8
  408100:	jmp    0x408089
  408102:	mov    eax,DWORD PTR [rsp+0x38]
  408106:	mov    DWORD PTR [rip+0x60f0],eax        # 0x40e1fc
  40810c:	mov    eax,0xffffffff
  408111:	jmp    0x407ec7
  408116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408120:	push   r15
  408122:	push   r14
  408124:	push   r13
  408126:	push   r12
  408128:	push   rbp
  408129:	push   rdi
  40812a:	push   rsi
  40812b:	push   rbx
  40812c:	sub    rsp,0x38
  408130:	test   r8,r8
  408133:	mov    edi,ecx
  408135:	mov    r15,rdx
  408138:	mov    QWORD PTR [rsp+0x90],r8
  408140:	mov    QWORD PTR [rsp+0x98],r9
  408148:	je     0x40841e
  40814e:	mov    r9d,DWORD PTR [rip+0x60a7]        # 0x40e1fc
  408155:	test   r9d,r9d
  408158:	je     0x4083b0
  40815e:	cmp    DWORD PTR [rip+0x607b],0xffffffff        # 0x40e1e0
  408165:	je     0x408324
  40816b:	mov    edx,DWORD PTR [rip+0xc407]        # 0x414578
  408171:	test   edx,edx
  408173:	jne    0x408324
  408179:	mov    rax,QWORD PTR [rsp+0x90]
  408181:	movzx  eax,BYTE PTR [rax]
  408184:	cmp    al,0x2d
  408186:	je     0x408358
  40818c:	cmp    al,0x2b
  40818e:	je     0x408434
  408194:	mov    r8d,DWORD PTR [rip+0x6045]        # 0x40e1e0
  40819b:	test   r8d,r8d
  40819e:	jne    0x408434
  4081a4:	sub    eax,0x2b
  4081a7:	test   al,0xfd
  4081a9:	je     0x408360
  4081af:	test   edx,edx
  4081b1:	mov    QWORD PTR [rip+0xc3b4],0x0        # 0x414570
  4081bc:	jne    0x408390
  4081c2:	mov    r14d,DWORD PTR [rsp+0xa8]
  4081ca:	mov    ebp,DWORD PTR [rsp+0xa8]
  4081d1:	and    r14d,0x2
  4081d5:	and    ebp,0x1
  4081d8:	jmp    0x40825e
  4081dd:	nop    DWORD PTR [rax]
  4081e0:	lea    rax,[rip+0x7d2e]        # 0x40ff15
  4081e7:	test   r14d,r14d
  4081ea:	mov    edx,r14d
  4081ed:	mov    QWORD PTR [rip+0x5ffc],rax        # 0x40e1f0
  4081f4:	jne    0x408500
  4081fa:	test   ebp,ebp
  4081fc:	je     0x40841e
  408202:	mov    r12d,DWORD PTR [rip+0x5fdf]        # 0x40e1e8
  408209:	cmp    r12d,0xffffffff
  40820d:	je     0x408380
  408213:	mov    r13d,DWORD PTR [rip+0x5fca]        # 0x40e1e4
  40821a:	cmp    r13d,0xffffffff
  40821e:	je     0x408255
  408220:	mov    edx,r13d
  408223:	mov    r9,r15
  408226:	mov    r8d,ebx
  408229:	mov    ecx,r12d
  40822c:	call   0x407c30
  408231:	mov    esi,DWORD PTR [rip+0x5fc5]        # 0x40e1fc
  408237:	mov    eax,r12d
  40823a:	mov    edx,DWORD PTR [rip+0xc338]        # 0x414578
  408240:	sub    eax,r13d
  408243:	mov    DWORD PTR [rip+0x5f97],0xffffffff        # 0x40e1e4
  40824d:	add    eax,esi
  40824f:	mov    DWORD PTR [rip+0x5f93],eax        # 0x40e1e8
  408255:	add    esi,0x1
  408258:	mov    DWORD PTR [rip+0x5f9e],esi        # 0x40e1fc
  40825e:	test   edx,edx
  408260:	jne    0x408274
  408262:	mov    rsi,QWORD PTR [rip+0x5f87]        # 0x40e1f0
  408269:	movzx  eax,BYTE PTR [rsi]
  40826c:	test   al,al
  40826e:	jne    0x40846e
  408274:	movsxd rbx,DWORD PTR [rip+0x5f81]        # 0x40e1fc
  40827b:	mov    DWORD PTR [rip+0xc2f3],0x0        # 0x414578
  408285:	cmp    ebx,edi
  408287:	mov    esi,ebx
  408289:	jge    0x4083d0
  40828f:	movsxd rax,ebx
  408292:	mov    r13,QWORD PTR [r15+rax*8]
  408296:	cmp    BYTE PTR [r13+0x0],0x2d
  40829b:	mov    QWORD PTR [rip+0x5f4e],r13        # 0x40e1f0
  4082a2:	jne    0x4081e0
  4082a8:	movzx  eax,BYTE PTR [r13+0x1]
  4082ad:	test   al,al
  4082af:	jne    0x408441
  4082b5:	mov    rcx,QWORD PTR [rsp+0x90]
  4082bd:	mov    edx,0x2d
  4082c2:	call   0x40c998
  4082c7:	test   rax,rax
  4082ca:	je     0x4081e0
  4082d0:	cmp    DWORD PTR [rip+0x5f11],0xffffffff        # 0x40e1e8
  4082d7:	mov    rsi,r13
  4082da:	je     0x4082f4
  4082dc:	cmp    DWORD PTR [rip+0x5f01],0xffffffff        # 0x40e1e4
  4082e3:	mov    eax,0x2d
  4082e8:	jne    0x40846e
  4082ee:	mov    DWORD PTR [rip+0x5ef0],ebx        # 0x40e1e4
  4082f4:	cmp    QWORD PTR [rsp+0x98],0x0
  4082fd:	je     0x4086ec
  408303:	cmp    rsi,QWORD PTR [r15+rbx*8]
  408307:	mov    eax,0x2d
  40830c:	je     0x40853e
  408312:	add    rsi,0x1
  408316:	xor    edx,edx
  408318:	mov    QWORD PTR [rip+0x5ed1],rsi        # 0x40e1f0
  40831f:	jmp    0x4084c2
  408324:	lea    rcx,[rip+0x7bda]        # 0x40ff05
  40832b:	call   0x40c9d8
  408330:	test   rax,rax
  408333:	mov    edx,DWORD PTR [rip+0xc23f]        # 0x414578
  408339:	setne  al
  40833c:	movzx  eax,al
  40833f:	mov    DWORD PTR [rip+0x5e9b],eax        # 0x40e1e0
  408345:	mov    rax,QWORD PTR [rsp+0x90]
  40834d:	movzx  eax,BYTE PTR [rax]
  408350:	cmp    al,0x2d
  408352:	jne    0x40818c
  408358:	or     DWORD PTR [rsp+0xa8],0x2
  408360:	add    QWORD PTR [rsp+0x90],0x1
  408369:	test   edx,edx
  40836b:	mov    QWORD PTR [rip+0xc1fa],0x0        # 0x414570
  408376:	je     0x4081c2
  40837c:	jmp    0x408390
  40837e:	xchg   ax,ax
  408380:	mov    DWORD PTR [rip+0x5e62],ebx        # 0x40e1e8
  408386:	jmp    0x408255
  40838b:	nop    DWORD PTR [rax+rax*1+0x0]
  408390:	mov    DWORD PTR [rip+0x5e4a],0xffffffff        # 0x40e1e4
  40839a:	mov    DWORD PTR [rip+0x5e44],0xffffffff        # 0x40e1e8
  4083a4:	jmp    0x4081c2
  4083a9:	nop    DWORD PTR [rax+0x0]
  4083b0:	mov    DWORD PTR [rip+0xc1be],0x1        # 0x414578
  4083ba:	mov    DWORD PTR [rip+0x5e38],0x1        # 0x40e1fc
  4083c4:	jmp    0x40815e
  4083c9:	nop    DWORD PTR [rax+0x0]
  4083d0:	mov    esi,DWORD PTR [rip+0x5e0e]        # 0x40e1e4
  4083d6:	lea    rax,[rip+0x7b38]        # 0x40ff15
  4083dd:	mov    QWORD PTR [rip+0x5e0c],rax        # 0x40e1f0
  4083e4:	cmp    esi,0xffffffff
  4083e7:	je     0x40851a
  4083ed:	mov    edi,DWORD PTR [rip+0x5df5]        # 0x40e1e8
  4083f3:	mov    r9,r15
  4083f6:	mov    r8d,ebx
  4083f9:	mov    edx,esi
  4083fb:	mov    ecx,edi
  4083fd:	sub    edi,esi
  4083ff:	call   0x407c30
  408404:	add    DWORD PTR [rip+0x5df2],edi        # 0x40e1fc
  40840a:	mov    DWORD PTR [rip+0x5dd0],0xffffffff        # 0x40e1e4
  408414:	mov    DWORD PTR [rip+0x5dca],0xffffffff        # 0x40e1e8
  40841e:	mov    eax,0xffffffff
  408423:	add    rsp,0x38
  408427:	pop    rbx
  408428:	pop    rsi
  408429:	pop    rdi
  40842a:	pop    rbp
  40842b:	pop    r12
  40842d:	pop    r13
  40842f:	pop    r14
  408431:	pop    r15
  408433:	ret    
  408434:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  40843c:	jmp    0x4081a4
  408441:	mov    ebp,DWORD PTR [rip+0x5da1]        # 0x40e1e8
  408447:	cmp    ebp,0xffffffff
  40844a:	je     0x40845b
  40844c:	cmp    DWORD PTR [rip+0x5d91],0xffffffff        # 0x40e1e4
  408453:	jne    0x40845b
  408455:	mov    DWORD PTR [rip+0x5d89],ebx        # 0x40e1e4
  40845b:	lea    rsi,[r13+0x1]
  40845f:	cmp    al,0x2d
  408461:	mov    QWORD PTR [rip+0x5d88],rsi        # 0x40e1f0
  408468:	je     0x40861f
  40846e:	cmp    QWORD PTR [rsp+0x98],0x0
  408477:	je     0x40853e
  40847d:	movsxd rdx,DWORD PTR [rip+0x5d78]        # 0x40e1fc
  408484:	cmp    rsi,QWORD PTR [r15+rdx*8]
  408488:	je     0x40853e
  40848e:	cmp    al,0x2d
  408490:	je     0x408312
  408496:	test   BYTE PTR [rsp+0xa8],0x4
  40849e:	je     0x40853e
  4084a4:	xor    edx,edx
  4084a6:	cmp    al,0x3a
  4084a8:	je     0x4084c2
  4084aa:	mov    rcx,QWORD PTR [rsp+0x90]
  4084b2:	movsx  edx,al
  4084b5:	call   0x40c998
  4084ba:	xor    edx,edx
  4084bc:	test   rax,rax
  4084bf:	setne  dl
  4084c2:	mov    DWORD PTR [rsp+0x20],edx
  4084c6:	mov    r9,QWORD PTR [rsp+0xa0]
  4084ce:	mov    rcx,r15
  4084d1:	mov    r8,QWORD PTR [rsp+0x98]
  4084d9:	mov    rdx,QWORD PTR [rsp+0x90]
  4084e1:	call   0x407d60
  4084e6:	cmp    eax,0xffffffff
  4084e9:	je     0x408534
  4084eb:	lea    rcx,[rip+0x7a23]        # 0x40ff15
  4084f2:	mov    QWORD PTR [rip+0x5cf7],rcx        # 0x40e1f0
  4084f9:	jmp    0x408423
  4084fe:	xchg   ax,ax
  408500:	add    ebx,0x1
  408503:	mov    QWORD PTR [rip+0xc066],r13        # 0x414570
  40850a:	mov    eax,0x1
  40850f:	mov    DWORD PTR [rip+0x5ce7],ebx        # 0x40e1fc
  408515:	jmp    0x408423
  40851a:	mov    eax,DWORD PTR [rip+0x5cc8]        # 0x40e1e8
  408520:	cmp    eax,0xffffffff
  408523:	je     0x40840a
  408529:	mov    DWORD PTR [rip+0x5ccd],eax        # 0x40e1fc
  40852f:	jmp    0x40840a
  408534:	mov    rsi,QWORD PTR [rip+0x5cb5]        # 0x40e1f0
  40853b:	movzx  eax,BYTE PTR [rsi]
  40853e:	lea    rbp,[rsi+0x1]
  408542:	movsx  ebx,al
  408545:	cmp    ebx,0x3a
  408548:	mov    QWORD PTR [rip+0x5ca1],rbp        # 0x40e1f0
  40854f:	je     0x4085b4
  408551:	cmp    ebx,0x2d
  408554:	je     0x4086f7
  40855a:	mov    rcx,QWORD PTR [rsp+0x90]
  408562:	mov    edx,ebx
  408564:	call   0x40c998
  408569:	test   rax,rax
  40856c:	je     0x4085b4
  40856e:	cmp    ebx,0x57
  408571:	jne    0x408616
  408577:	cmp    QWORD PTR [rsp+0x98],0x0
  408580:	je     0x408616
  408586:	movzx  edx,BYTE PTR [rax+0x1]
  40858a:	cmp    dl,0x3b
  40858d:	je     0x408670
  408593:	cmp    dl,0x3a
  408596:	je     0x40870b
  40859c:	cmp    BYTE PTR [rsi+0x1],0x0
  4085a0:	mov    eax,ebx
  4085a2:	jne    0x408423
  4085a8:	add    DWORD PTR [rip+0x5c4d],0x1        # 0x40e1fc
  4085af:	jmp    0x408423
  4085b4:	cmp    BYTE PTR [rsi+0x1],0x0
  4085b8:	jne    0x4085c1
  4085ba:	add    DWORD PTR [rip+0x5c3b],0x1        # 0x40e1fc
  4085c1:	mov    ecx,DWORD PTR [rip+0x5c39]        # 0x40e200
  4085c7:	test   ecx,ecx
  4085c9:	je     0x4085e6
  4085cb:	mov    rax,QWORD PTR [rsp+0x90]
  4085d3:	cmp    BYTE PTR [rax],0x3a
  4085d6:	je     0x4085e6
  4085d8:	lea    rcx,[rip+0x7961]        # 0x40ff40
  4085df:	mov    edx,ebx
  4085e1:	call   0x407ce0
  4085e6:	mov    DWORD PTR [rip+0x5c0c],ebx        # 0x40e1f8
  4085ec:	mov    eax,0x3f
  4085f1:	jmp    0x408423
  4085f6:	mov    rcx,QWORD PTR [rsp+0x90]
  4085fe:	mov    edx,0x2d
  408603:	call   0x40c998
  408608:	test   rax,rax
  40860b:	je     0x40841e
  408611:	mov    ebx,0x2d
  408616:	movzx  edx,BYTE PTR [rax+0x1]
  40861a:	jmp    0x408593
  40861f:	cmp    BYTE PTR [r13+0x2],0x0
  408624:	jne    0x4082f4
  40862a:	mov    esi,DWORD PTR [rip+0x5bb4]        # 0x40e1e4
  408630:	lea    r8d,[rbx+0x1]
  408634:	lea    rax,[rip+0x78da]        # 0x40ff15
  40863b:	mov    DWORD PTR [rip+0x5bba],r8d        # 0x40e1fc
  408642:	mov    QWORD PTR [rip+0x5ba7],rax        # 0x40e1f0
  408649:	cmp    esi,0xffffffff
  40864c:	je     0x40840a
  408652:	mov    ecx,ebp
  408654:	mov    r9,r15
  408657:	mov    edx,esi
  408659:	call   0x407c30
  40865e:	sub    ebp,esi
  408660:	add    DWORD PTR [rip+0x5b96],ebp        # 0x40e1fc
  408666:	jmp    0x40840a
  40866b:	nop    DWORD PTR [rax+rax*1+0x0]
  408670:	cmp    BYTE PTR [rsi+0x1],0x0
  408674:	jne    0x4087c5
  40867a:	mov    eax,DWORD PTR [rip+0x5b7c]        # 0x40e1fc
  408680:	add    eax,0x1
  408683:	cmp    edi,eax
  408685:	mov    DWORD PTR [rip+0x5b71],eax        # 0x40e1fc
  40868b:	jg     0x4087b8
  408691:	mov    edx,DWORD PTR [rip+0x5b69]        # 0x40e200
  408697:	lea    rax,[rip+0x7877]        # 0x40ff15
  40869e:	mov    QWORD PTR [rip+0x5b4b],rax        # 0x40e1f0
  4086a5:	test   edx,edx
  4086a7:	je     0x4086c7
  4086a9:	mov    rax,QWORD PTR [rsp+0x90]
  4086b1:	cmp    BYTE PTR [rax],0x3a
  4086b4:	je     0x4086c7
  4086b6:	lea    rcx,[rip+0x7943]        # 0x410000
  4086bd:	mov    edx,0x57
  4086c2:	call   0x407ce0
  4086c7:	mov    rax,QWORD PTR [rsp+0x90]
  4086cf:	mov    DWORD PTR [rip+0x5b1f],0x57        # 0x40e1f8
  4086d9:	cmp    BYTE PTR [rax],0x3a
  4086dc:	je     0x4087ae
  4086e2:	mov    eax,0x3f
  4086e7:	jmp    0x408423
  4086ec:	lea    rbp,[rsi+0x1]
  4086f0:	mov    QWORD PTR [rip+0x5af9],rbp        # 0x40e1f0
  4086f7:	cmp    BYTE PTR [rsi+0x1],0x0
  4086fb:	je     0x4085f6
  408701:	mov    ebx,0x2d
  408706:	jmp    0x4085c1
  40870b:	mov    QWORD PTR [rip+0xbe5a],0x0        # 0x414570
  408716:	cmp    BYTE PTR [rsi+0x1],0x0
  40871a:	je     0x408747
  40871c:	mov    eax,DWORD PTR [rip+0x5ada]        # 0x40e1fc
  408722:	mov    QWORD PTR [rip+0xbe47],rbp        # 0x414570
  408729:	lea    rcx,[rip+0x77e5]        # 0x40ff15
  408730:	add    eax,0x1
  408733:	mov    DWORD PTR [rip+0x5ac3],eax        # 0x40e1fc
  408739:	mov    eax,ebx
  40873b:	mov    QWORD PTR [rip+0x5aae],rcx        # 0x40e1f0
  408742:	jmp    0x408423
  408747:	cmp    BYTE PTR [rax+0x2],0x3a
  40874b:	mov    eax,DWORD PTR [rip+0x5aab]        # 0x40e1fc
  408751:	je     0x408729
  408753:	add    eax,0x1
  408756:	cmp    edi,eax
  408758:	mov    DWORD PTR [rip+0x5a9e],eax        # 0x40e1fc
  40875e:	jg     0x4087f2
  408764:	lea    rax,[rip+0x77aa]        # 0x40ff15
  40876b:	mov    QWORD PTR [rip+0x5a7e],rax        # 0x40e1f0
  408772:	mov    eax,DWORD PTR [rip+0x5a88]        # 0x40e200
  408778:	test   eax,eax
  40877a:	je     0x408797
  40877c:	mov    rax,QWORD PTR [rsp+0x90]
  408784:	cmp    BYTE PTR [rax],0x3a
  408787:	je     0x408797
  408789:	lea    rcx,[rip+0x7870]        # 0x410000
  408790:	mov    edx,ebx
  408792:	call   0x407ce0
  408797:	mov    rax,QWORD PTR [rsp+0x90]
  40879f:	mov    DWORD PTR [rip+0x5a53],ebx        # 0x40e1f8
  4087a5:	cmp    BYTE PTR [rax],0x3a
  4087a8:	jne    0x4086e2
  4087ae:	mov    eax,0x3a
  4087b3:	jmp    0x408423
  4087b8:	cdqe   
  4087ba:	mov    rax,QWORD PTR [r15+rax*8]
  4087be:	mov    QWORD PTR [rip+0x5a2b],rax        # 0x40e1f0
  4087c5:	mov    r9,QWORD PTR [rsp+0xa0]
  4087cd:	mov    r8,QWORD PTR [rsp+0x98]
  4087d5:	mov    rcx,r15
  4087d8:	mov    rdx,QWORD PTR [rsp+0x90]
  4087e0:	mov    DWORD PTR [rsp+0x20],0x0
  4087e8:	call   0x407d60
  4087ed:	jmp    0x4084eb
  4087f2:	movsxd rdx,eax
  4087f5:	mov    rdx,QWORD PTR [r15+rdx*8]
  4087f9:	mov    QWORD PTR [rip+0xbd70],rdx        # 0x414570
  408800:	jmp    0x408729
  408805:	nop
  408806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408810:	sub    rsp,0x38
  408814:	xor    r9d,r9d
  408817:	mov    DWORD PTR [rsp+0x28],0x0
  40881f:	mov    QWORD PTR [rsp+0x20],0x0
  408828:	call   0x408120
  40882d:	add    rsp,0x38
  408831:	ret    
  408832:	nop    DWORD PTR [rax+0x0]
  408836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408840:	sub    rsp,0x38
  408844:	mov    rax,QWORD PTR [rsp+0x60]
  408849:	mov    DWORD PTR [rsp+0x28],0x1
  408851:	mov    QWORD PTR [rsp+0x20],rax
  408856:	call   0x408120
  40885b:	add    rsp,0x38
  40885f:	ret    
  408860:	sub    rsp,0x38
  408864:	mov    rax,QWORD PTR [rsp+0x60]
  408869:	mov    DWORD PTR [rsp+0x28],0x5
  408871:	mov    QWORD PTR [rsp+0x20],rax
  408876:	call   0x408120
  40887b:	add    rsp,0x38
  40887f:	ret    
  408880:	push   r12
  408882:	push   rbp
  408883:	push   rdi
  408884:	push   rsi
  408885:	push   rbx
  408886:	sub    rsp,0x250
  40888d:	mov    rbx,rdx
  408890:	mov    rsi,rcx
  408893:	mov    ecx,0x4000
  408898:	mov    r12d,r8d
  40889b:	call   0x40c9c0
  4088a0:	test   rbx,rbx
  4088a3:	mov    rbp,rax
  4088a6:	je     0x408970
  4088ac:	cmp    WORD PTR [rbx],0x0
  4088b0:	lea    rax,[rip+0x7789]        # 0x410040
  4088b7:	cmove  rbx,rax
  4088bb:	test   rsi,rsi
  4088be:	je     0x408961
  4088c4:	cmp    WORD PTR [rsi],0x0
  4088c8:	lea    rax,[rip+0x7785]        # 0x410054
  4088cf:	cmove  rsi,rax
  4088d3:	lea    rdi,[rsp+0x40]
  4088d8:	xor    ecx,ecx
  4088da:	mov    r8d,0x104
  4088e0:	mov    rdx,rdi
  4088e3:	call   QWORD PTR [rip+0xce33]        # 0x41571c
  4088e9:	test   eax,eax
  4088eb:	je     0x408950
  4088ed:	lea    r8,[rip+0x7764]        # 0x410058
  4088f4:	mov    QWORD PTR [rsp+0x30],rsi
  4088f9:	mov    DWORD PTR [rsp+0x28],r12d
  4088fe:	mov    QWORD PTR [rsp+0x20],rbx
  408903:	mov    r9,rdi
  408906:	mov    edx,0x1fff
  40890b:	mov    rcx,rbp
  40890e:	call   0x40ca38
  408913:	mov    rax,QWORD PTR [rip+0x7d86]        # 0x4106a0
  40891a:	mov    eax,DWORD PTR [rax]
  40891c:	test   eax,eax
  40891e:	je     0x408995
  408920:	xor    ecx,ecx
  408922:	mov    r9d,0x12012
  408928:	lea    r8,[rip+0x77c1]        # 0x4100f0
  40892f:	mov    rdx,rbp
  408932:	call   QWORD PTR [rip+0xd01c]        # 0x415954
  408938:	cmp    eax,0x3
  40893b:	je     0x408981
  40893d:	cmp    eax,0x5
  408940:	jne    0x40897c
  408942:	add    rsp,0x250
  408949:	pop    rbx
  40894a:	pop    rsi
  40894b:	pop    rdi
  40894c:	pop    rbp
  40894d:	pop    r12
  40894f:	ret    
  408950:	lea    rdx,[rip+0x76e9]        # 0x410040
  408957:	mov    rcx,rdi
  40895a:	call   0x40c948
  40895f:	jmp    0x4088ed
  408961:	lea    rsi,[rip+0x76ec]        # 0x410054
  408968:	jmp    0x4088d3
  40896d:	nop    DWORD PTR [rax]
  408970:	lea    rbx,[rip+0x76c9]        # 0x410040
  408977:	jmp    0x4088bb
  40897c:	call   0x40ca28
  408981:	mov    ecx,0x16
  408986:	call   0x40c9a8
  40898b:	mov    ecx,0x3
  408990:	call   0x40ca60
  408995:	call   0x40ca98
  40899a:	lea    rdx,[rip+0x773f]        # 0x4100e0
  4089a1:	lea    rcx,[rax+0x60]
  4089a5:	mov    r8,rbp
  4089a8:	call   0x40c9e8
  4089ad:	call   0x40ca28
  4089b2:	nop
  4089b3:	nop    DWORD PTR [rax]
  4089b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4089c0:	push   rbp
  4089c1:	push   rdi
  4089c2:	push   rsi
  4089c3:	push   rbx
  4089c4:	sub    rsp,0x38
  4089c8:	mov    rdi,rdx
  4089cb:	mov    DWORD PTR [rsp+0x2c],r8d
  4089d0:	mov    rbp,rcx
  4089d3:	call   0x40c980
  4089d8:	lea    rcx,[rax+rax*1+0x2]
  4089dd:	call   0x40c9c0
  4089e2:	mov    rcx,rdi
  4089e5:	mov    rsi,rax
  4089e8:	call   0x40c980
  4089ed:	lea    rcx,[rax+rax*1+0x2]
  4089f2:	call   0x40c9c0
  4089f7:	movzx  r9d,BYTE PTR [rbp+0x0]
  4089fc:	xor    r10d,r10d
  4089ff:	mov    rbx,rax
  408a02:	mov    r8d,DWORD PTR [rsp+0x2c]
  408a07:	test   r9b,r9b
  408a0a:	je     0x408a27
  408a0c:	nop    DWORD PTR [rax+0x0]
  408a10:	mov    WORD PTR [rsi+r10*2],r9w
  408a15:	add    r10,0x1
  408a19:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  408a1f:	test   r9b,r9b
  408a22:	jne    0x408a10
  408a24:	add    r10,r10
  408a27:	movzx  r9d,BYTE PTR [rdi]
  408a2b:	xor    edx,edx
  408a2d:	mov    WORD PTR [rsi+r10*1],dx
  408a32:	xor    r10d,r10d
  408a35:	test   r9b,r9b
  408a38:	je     0x408a56
  408a3a:	nop    WORD PTR [rax+rax*1+0x0]
  408a40:	mov    WORD PTR [rbx+r10*2],r9w
  408a45:	add    r10,0x1
  408a49:	movzx  r9d,BYTE PTR [rdi+r10*1]
  408a4e:	test   r9b,r9b
  408a51:	jne    0x408a40
  408a53:	add    r10,r10
  408a56:	xor    eax,eax
  408a58:	mov    rdx,rbx
  408a5b:	mov    rcx,rsi
  408a5e:	mov    WORD PTR [rbx+r10*1],ax
  408a63:	call   0x408880
  408a68:	mov    rcx,rsi
  408a6b:	call   0x40c9f0
  408a70:	mov    rcx,rbx
  408a73:	add    rsp,0x38
  408a77:	pop    rbx
  408a78:	pop    rsi
  408a79:	pop    rdi
  408a7a:	pop    rbp
  408a7b:	jmp    0x40c9f0
  408a80:	push   rsi
  408a81:	push   rbx
  408a82:	sub    rsp,0x28
  408a86:	movsxd rax,DWORD PTR [rcx+0x14]
  408a8a:	lea    rdx,[rcx+0x18]
  408a8e:	mov    rbx,rcx
  408a91:	lea    r9,[rdx+rax*4]
  408a95:	mov    rcx,rax
  408a98:	jmp    0x408ab0
  408a9a:	nop    WORD PTR [rax+rax*1+0x0]
  408aa0:	add    rdx,0x4
  408aa4:	mov    DWORD PTR [rdx-0x4],0x0
  408aab:	cmp    r9,rdx
  408aae:	jbe    0x408ad0
  408ab0:	mov    r8d,DWORD PTR [rdx]
  408ab3:	cmp    r8d,0xffffffff
  408ab7:	je     0x408aa0
  408ab9:	add    r8d,0x1
  408abd:	mov    rax,rbx
  408ac0:	mov    DWORD PTR [rdx],r8d
  408ac3:	add    rsp,0x28
  408ac7:	pop    rbx
  408ac8:	pop    rsi
  408ac9:	ret    
  408aca:	nop    WORD PTR [rax+rax*1+0x0]
  408ad0:	cmp    ecx,DWORD PTR [rbx+0xc]
  408ad3:	jge    0x408af0
  408ad5:	add    ecx,0x1
  408ad8:	mov    DWORD PTR [rbx+0x14],ecx
  408adb:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  408ae3:	mov    rax,rbx
  408ae6:	add    rsp,0x28
  408aea:	pop    rbx
  408aeb:	pop    rsi
  408aec:	ret    
  408aed:	nop    DWORD PTR [rax]
  408af0:	mov    eax,DWORD PTR [rbx+0x8]
  408af3:	lea    ecx,[rax+0x1]
  408af6:	call   0x40bc10
  408afb:	mov    rsi,rax
  408afe:	lea    rcx,[rax+0x10]
  408b02:	movsxd rax,DWORD PTR [rbx+0x14]
  408b06:	lea    rdx,[rbx+0x10]
  408b0a:	lea    r8,[rax*4+0x8]
  408b12:	call   0x40c9b8
  408b17:	mov    rcx,rbx
  408b1a:	mov    rbx,rsi
  408b1d:	call   0x40bd20
  408b22:	movsxd rax,DWORD PTR [rsi+0x14]
  408b26:	mov    rcx,rax
  408b29:	jmp    0x408ad5
  408b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  408b30:	push   r15
  408b32:	push   r14
  408b34:	push   r13
  408b36:	push   r12
  408b38:	push   rbp
  408b39:	push   rdi
  408b3a:	push   rsi
  408b3b:	push   rbx
  408b3c:	sub    rsp,0x48
  408b40:	mov    rdi,rdx
  408b43:	mov    r12,r8
  408b46:	lea    rdx,[rsp+0x3c]
  408b4b:	lea    r8,[rsp+0x38]
  408b50:	movsd  xmm0,QWORD PTR [rcx]
  408b54:	mov    r13,r9
  408b57:	call   0x40c4f0
  408b5c:	mov    r10d,DWORD PTR [rsp+0x38]
  408b61:	mov    esi,DWORD PTR [rdi]
  408b63:	mov    rbx,rax
  408b66:	mov    edx,DWORD PTR [rsp+0x3c]
  408b6a:	sub    r10d,esi
  408b6d:	add    edx,r10d
  408b70:	test   r10d,r10d
  408b73:	mov    DWORD PTR [rsp+0x38],r10d
  408b78:	mov    DWORD PTR [rsp+0x3c],edx
  408b7c:	jle    0x408d40
  408b82:	cmp    esi,0x35
  408b85:	je     0x408d70
  408b8b:	cmp    DWORD PTR [rsp+0xb8],0x1
  408b93:	je     0x408c44
  408b99:	cmp    DWORD PTR [rsp+0xb8],0x2
  408ba1:	je     0x408bd0
  408ba3:	mov    eax,r10d
  408ba6:	sub    eax,0x1
  408ba9:	jne    0x408e40
  408baf:	mov    ecx,DWORD PTR [rsp+0xb0]
  408bb6:	xor    r15d,r15d
  408bb9:	test   ecx,ecx
  408bbb:	je     0x408cc7
  408bc1:	test   BYTE PTR [rbx+0x18],0x2
  408bc5:	je     0x408d8e
  408bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  408bd0:	mov    edx,r10d
  408bd3:	mov    rcx,rbx
  408bd6:	call   0x40c8b0
  408bdb:	mov    edx,DWORD PTR [rsp+0x38]
  408bdf:	mov    rcx,rbx
  408be2:	mov    r14d,eax
  408be5:	call   0x40b560
  408bea:	mov    rcx,rbx
  408bed:	call   0x408a80
  408bf2:	mov    edx,esi
  408bf4:	mov    rbx,rax
  408bf7:	and    edx,0x1f
  408bfa:	jne    0x408e30
  408c00:	mov    eax,DWORD PTR [rbx+0x14]
  408c03:	sub    eax,0x1
  408c06:	cdqe   
  408c08:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  408c0d:	xor    eax,0x1f
  408c10:	cmp    edx,eax
  408c12:	je     0x408ec0
  408c18:	test   r14d,r14d
  408c1b:	jne    0x408c25
  408c1d:	mov    r14d,DWORD PTR [rbx+0x18]
  408c21:	and    r14d,0x1
  408c25:	mov    edx,0x1
  408c2a:	mov    rcx,rbx
  408c2d:	mov    ebp,0x20
  408c32:	call   0x40b560
  408c37:	mov    eax,DWORD PTR [rsp+0x3c]
  408c3b:	lea    edx,[rax+0x1]
  408c3e:	mov    DWORD PTR [rsp+0x3c],edx
  408c42:	jmp    0x408c6f
  408c44:	mov    edx,r10d
  408c47:	mov    rcx,rax
  408c4a:	call   0x40c8b0
  408c4f:	test   eax,eax
  408c51:	mov    r14d,eax
  408c54:	jne    0x408ce3
  408c5a:	mov    edx,DWORD PTR [rsp+0x38]
  408c5e:	mov    rcx,rbx
  408c61:	xor    r14d,r14d
  408c64:	xor    ebp,ebp
  408c66:	call   0x40b560
  408c6b:	mov    edx,DWORD PTR [rsp+0x3c]
  408c6f:	mov    eax,DWORD PTR [rdi+0x4]
  408c72:	cmp    eax,edx
  408c74:	jle    0x408d00
  408c7a:	mov    r8d,eax
  408c7d:	mov    DWORD PTR [rsp+0x3c],eax
  408c81:	sub    r8d,edx
  408c84:	cmp    esi,r8d
  408c87:	jge    0x408dc0
  408c8d:	mov    rdi,QWORD PTR [rsp+0xc0]
  408c95:	mov    DWORD PTR [rbx+0x14],0x0
  408c9c:	mov    edx,eax
  408c9e:	xor    ebp,ebp
  408ca0:	mov    DWORD PTR [rdi],0x50
  408ca6:	mov    DWORD PTR [r12],edx
  408caa:	mov    r8,rbx
  408cad:	mov    edx,esi
  408caf:	mov    rcx,r13
  408cb2:	mov    r15d,0x1
  408cb8:	call   0x40c840
  408cbd:	mov    rax,QWORD PTR [rsp+0xc0]
  408cc5:	or     DWORD PTR [rax],ebp
  408cc7:	mov    rcx,rbx
  408cca:	call   0x40bd20
  408ccf:	mov    eax,r15d
  408cd2:	add    rsp,0x48
  408cd6:	pop    rbx
  408cd7:	pop    rsi
  408cd8:	pop    rdi
  408cd9:	pop    rbp
  408cda:	pop    r12
  408cdc:	pop    r13
  408cde:	pop    r14
  408ce0:	pop    r15
  408ce2:	ret    
  408ce3:	mov    edx,DWORD PTR [rsp+0x38]
  408ce7:	mov    rcx,rbx
  408cea:	mov    ebp,0x10
  408cef:	call   0x40b560
  408cf4:	jmp    0x408c6b
  408cf9:	nop    DWORD PTR [rax+0x0]
  408d00:	mov    eax,DWORD PTR [rdi+0x8]
  408d03:	cmp    eax,edx
  408d05:	jge    0x408ca6
  408d07:	add    eax,0x1
  408d0a:	xor    ebp,ebp
  408d0c:	mov    DWORD PTR [rsp+0x3c],eax
  408d10:	mov    rax,QWORD PTR [rsp+0xc0]
  408d18:	mov    DWORD PTR [rax],0xa3
  408d1e:	call   0x40ca68
  408d23:	mov    DWORD PTR [rax],0x22
  408d29:	mov    DWORD PTR [rbx+0x14],0x0
  408d30:	mov    edx,DWORD PTR [rsp+0x3c]
  408d34:	jmp    0x408ca6
  408d39:	nop    DWORD PTR [rax+0x0]
  408d40:	mov    r9d,DWORD PTR [rsp+0xb0]
  408d48:	xor    r15d,r15d
  408d4b:	test   r9d,r9d
  408d4e:	je     0x408cc7
  408d54:	test   r10d,r10d
  408d57:	jne    0x408ea0
  408d5d:	xor    r14d,r14d
  408d60:	xor    ebp,ebp
  408d62:	jmp    0x408c6f
  408d67:	nop    WORD PTR [rax+rax*1+0x0]
  408d70:	mov    r8d,DWORD PTR [rsp+0xb0]
  408d78:	xor    r15d,r15d
  408d7b:	test   r8d,r8d
  408d7e:	je     0x408cc7
  408d84:	cmp    DWORD PTR [rdi+0xc],0x1
  408d88:	jne    0x408cc7
  408d8e:	mov    edx,r10d
  408d91:	mov    rcx,rbx
  408d94:	call   0x40c8b0
  408d99:	test   eax,eax
  408d9b:	mov    r14d,eax
  408d9e:	je     0x408c5a
  408da4:	mov    edx,DWORD PTR [rsp+0x38]
  408da8:	mov    rcx,rbx
  408dab:	mov    ebp,0x10
  408db0:	call   0x40b560
  408db5:	mov    edx,DWORD PTR [rsp+0x3c]
  408db9:	jmp    0x408c6f
  408dbe:	xchg   ax,ax
  408dc0:	mov    edx,DWORD PTR [rdi+0x10]
  408dc3:	test   edx,edx
  408dc5:	jne    0x408c8d
  408dcb:	lea    edi,[r8-0x1]
  408dcf:	test   r14d,r14d
  408dd2:	sete   al
  408dd5:	test   edi,edi
  408dd7:	jle    0x408e7c
  408ddd:	test   al,al
  408ddf:	jne    0x408e60
  408de1:	mov    ecx,edi
  408de3:	sar    edi,0x5
  408de6:	mov    eax,0x1
  408deb:	movsxd rdi,edi
  408dee:	shl    eax,cl
  408df0:	mov    edx,r8d
  408df3:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  408df7:	mov    rcx,rbx
  408dfa:	mov    edi,eax
  408dfc:	call   0x40b560
  408e01:	mov    rax,QWORD PTR [rsp+0xc0]
  408e09:	test   edi,edi
  408e0b:	mov    DWORD PTR [rax],0x2
  408e11:	jne    0x408ed0
  408e17:	test   r14d,r14d
  408e1a:	mov    edx,DWORD PTR [rsp+0x3c]
  408e1e:	je     0x408ca6
  408e24:	mov    ebp,0x50
  408e29:	jmp    0x408ca6
  408e2e:	xchg   ax,ax
  408e30:	mov    eax,0x20
  408e35:	sub    eax,edx
  408e37:	mov    edx,eax
  408e39:	jmp    0x408c00
  408e3e:	xchg   ax,ax
  408e40:	mov    edx,eax
  408e42:	sar    edx,0x5
  408e45:	movsxd rdx,edx
  408e48:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  408e4c:	bt     edx,eax
  408e4f:	jb     0x408bd0
  408e55:	jmp    0x408d8e
  408e5a:	nop    WORD PTR [rax+rax*1+0x0]
  408e60:	mov    edx,edi
  408e62:	mov    rcx,rbx
  408e65:	mov    DWORD PTR [rsp+0x2c],r8d
  408e6a:	call   0x40c8b0
  408e6f:	mov    r8d,DWORD PTR [rsp+0x2c]
  408e74:	test   eax,eax
  408e76:	mov    r14d,eax
  408e79:	sete   al
  408e7c:	test   al,al
  408e7e:	je     0x408de1
  408e84:	mov    eax,DWORD PTR [rsp+0xb0]
  408e8b:	xor    r15d,r15d
  408e8e:	test   eax,eax
  408e90:	je     0x408cc7
  408e96:	jmp    0x408de1
  408e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  408ea0:	mov    edx,r10d
  408ea3:	mov    rcx,rbx
  408ea6:	neg    edx
  408ea8:	call   0x40c120
  408ead:	mov    edx,DWORD PTR [rsp+0x3c]
  408eb1:	mov    rbx,rax
  408eb4:	jmp    0x408d5d
  408eb9:	nop    DWORD PTR [rax+0x0]
  408ec0:	mov    edx,DWORD PTR [rsp+0x3c]
  408ec4:	mov    ebp,0x20
  408ec9:	jmp    0x408c6f
  408ece:	xchg   ax,ax
  408ed0:	mov    rcx,rbx
  408ed3:	mov    ebp,0x60
  408ed8:	call   0x408a80
  408edd:	mov    edx,DWORD PTR [rsp+0x3c]
  408ee1:	mov    rbx,rax
  408ee4:	jmp    0x408ca6
  408ee9:	nop    DWORD PTR [rax+0x0]
  408ef0:	movsxd rdx,DWORD PTR [rcx+0x14]
  408ef4:	lea    rax,[rcx+0x18]
  408ef8:	lea    rcx,[rax+rdx*4]
  408efc:	jmp    0x408f10
  408efe:	xchg   ax,ax
  408f00:	add    rax,0x4
  408f04:	mov    DWORD PTR [rax-0x4],0xffffffff
  408f0b:	cmp    rcx,rax
  408f0e:	jbe    0x408f20
  408f10:	mov    edx,DWORD PTR [rax]
  408f12:	test   edx,edx
  408f14:	je     0x408f00
  408f16:	sub    edx,0x1
  408f19:	mov    DWORD PTR [rax],edx
  408f1b:	ret    
  408f1c:	nop    DWORD PTR [rax+0x0]
  408f20:	repz ret 
  408f22:	nop    DWORD PTR [rax+0x0]
  408f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f30:	push   rbx
  408f31:	sub    rsp,0x30
  408f35:	lea    ebx,[rdx+0x1f]
  408f38:	mov    rax,rcx
  408f3b:	sar    ebx,0x5
  408f3e:	cmp    ebx,DWORD PTR [rcx+0x8]
  408f41:	jg     0x408fc0
  408f43:	mov    r9d,edx
  408f46:	sar    r9d,0x5
  408f4a:	and    edx,0x1f
  408f4d:	je     0x408fa0
  408f4f:	add    r9d,0x1
  408f53:	lea    r8,[rax+0x18]
  408f57:	mov    DWORD PTR [rax+0x14],r9d
  408f5b:	movsxd r9,r9d
  408f5e:	lea    r9,[r8+r9*4]
  408f62:	cmp    r8,r9
  408f65:	jae    0x408f85
  408f67:	nop    WORD PTR [rax+rax*1+0x0]
  408f70:	add    r8,0x4
  408f74:	mov    DWORD PTR [r8-0x4],0xffffffff
  408f7c:	cmp    r8,r9
  408f7f:	jb     0x408f70
  408f81:	test   edx,edx
  408f83:	je     0x408f90
  408f85:	mov    ecx,0x20
  408f8a:	sub    ecx,edx
  408f8c:	shr    DWORD PTR [r8-0x4],cl
  408f90:	add    rsp,0x30
  408f94:	pop    rbx
  408f95:	ret    
  408f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fa0:	lea    r8,[rax+0x18]
  408fa4:	mov    DWORD PTR [rax+0x14],r9d
  408fa8:	movsxd r9,r9d
  408fab:	lea    r9,[r8+r9*4]
  408faf:	cmp    r8,r9
  408fb2:	jb     0x408f70
  408fb4:	jmp    0x408f90
  408fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fc0:	mov    DWORD PTR [rsp+0x2c],edx
  408fc4:	call   0x40bd20
  408fc9:	mov    ecx,ebx
  408fcb:	call   0x40bc10
  408fd0:	mov    edx,DWORD PTR [rsp+0x2c]
  408fd4:	jmp    0x408f43
  408fd9:	nop    DWORD PTR [rax+0x0]
  408fe0:	push   r15
  408fe2:	push   r14
  408fe4:	push   r13
  408fe6:	push   r12
  408fe8:	push   rbp
  408fe9:	push   rdi
  408fea:	push   rsi
  408feb:	push   rbx
  408fec:	sub    rsp,0x138
  408ff3:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  408ffb:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  409003:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  40900c:	movaps XMMWORD PTR [rsp+0x100],xmm9
  409015:	movaps XMMWORD PTR [rsp+0x110],xmm10
  40901e:	movaps XMMWORD PTR [rsp+0x120],xmm11
  409027:	mov    rdi,rcx
  40902a:	mov    QWORD PTR [rsp+0x190],r8
  409032:	mov    QWORD PTR [rsp+0x188],rdx
  40903a:	mov    QWORD PTR [rsp+0x198],r9
  409042:	call   0x40c9c8
  409047:	mov    rbp,QWORD PTR [rax]
  40904a:	mov    rcx,rbp
  40904d:	call   0x40c980
  409052:	mov    r14,rax
  409055:	mov    rax,QWORD PTR [rsp+0x190]
  40905d:	mov    DWORD PTR [rsp+0xa4],0x0
  409068:	mov    QWORD PTR [rsp+0xb0],0x0
  409074:	mov    QWORD PTR [rsp+0xc8],0x0
  409080:	lea    rcx,[rip+0x70c5]        # 0x41014c
  409087:	mov    QWORD PTR [rsp+0xc0],rdi
  40908f:	mov    eax,DWORD PTR [rax]
  409091:	mov    DWORD PTR [rsp+0x40],eax
  409095:	mov    rax,rdi
  409098:	movzx  r8d,BYTE PTR [rax]
  40909c:	cmp    r8b,0x2d
  4090a0:	ja     0x409250
  4090a6:	movzx  edx,r8b
  4090aa:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  4090ae:	add    rdx,rcx
  4090b1:	jmp    rdx
  4090b3:	mov    DWORD PTR [rsp+0xa4],0x6
  4090be:	mov    QWORD PTR [rsp+0xc0],rdi
  4090c6:	xor    r8d,r8d
  4090c9:	mov    DWORD PTR [rsp+0x58],0x0
  4090d1:	cmp    QWORD PTR [rsp+0x188],0x0
  4090da:	je     0x4090ef
  4090dc:	mov    rax,QWORD PTR [rsp+0xc0]
  4090e4:	mov    rsi,QWORD PTR [rsp+0x188]
  4090ec:	mov    QWORD PTR [rsi],rax
  4090ef:	mov    eax,DWORD PTR [rsp+0x58]
  4090f3:	test   eax,eax
  4090f5:	jne    0x409170
  4090f7:	test   r8,r8
  4090fa:	je     0x40911a
  4090fc:	mov    rcx,QWORD PTR [rsp+0x1a0]
  409104:	mov    edx,DWORD PTR [rsp+0x40]
  409108:	call   0x40c840
  40910d:	mov    rcx,QWORD PTR [rsp+0xc8]
  409115:	call   0x40bd20
  40911a:	mov    eax,DWORD PTR [rsp+0xa4]
  409121:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  409129:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  409131:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  40913a:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  409143:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  40914c:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  409155:	add    rsp,0x138
  40915c:	pop    rbx
  40915d:	pop    rsi
  40915e:	pop    rdi
  40915f:	pop    rbp
  409160:	pop    r12
  409162:	pop    r13
  409164:	pop    r14
  409166:	pop    r15
  409168:	ret    
  409169:	nop    DWORD PTR [rax+0x0]
  409170:	or     DWORD PTR [rsp+0xa4],0x8
  409178:	jmp    0x4090f7
  40917d:	nop    DWORD PTR [rax]
  409180:	mov    rdx,rax
  409183:	mov    DWORD PTR [rsp+0x58],0x0
  40918b:	add    rax,0x1
  40918f:	mov    QWORD PTR [rsp+0xc0],rax
  409197:	movzx  r8d,BYTE PTR [rdx+0x1]
  40919c:	test   r8b,r8b
  40919f:	je     0x4090b3
  4091a5:	xor    r12d,r12d
  4091a8:	cmp    r8b,0x30
  4091ac:	mov    r15,rax
  4091af:	je     0x409268
  4091b5:	mov    rax,QWORD PTR [rsp+0x190]
  4091bd:	mov    eax,DWORD PTR [rax+0x10]
  4091c0:	mov    DWORD PTR [rsp+0x84],eax
  4091c7:	movsx  eax,r8b
  4091cb:	lea    edx,[rax-0x30]
  4091ce:	cmp    edx,0x9
  4091d1:	ja     0x4092c3
  4091d7:	lea    rcx,[r15+0x1]
  4091db:	xor    edx,edx
  4091dd:	xor    esi,esi
  4091df:	xor    ebx,ebx
  4091e1:	jmp    0x409215
  4091e3:	lea    eax,[rsi+rsi*4]
  4091e6:	movsx  r8d,r8b
  4091ea:	lea    esi,[r8+rax*2-0x30]
  4091ef:	mov    QWORD PTR [rsp+0xc0],rcx
  4091f7:	movsx  eax,BYTE PTR [rcx]
  4091fa:	add    ebx,0x1
  4091fd:	mov    r9,rcx
  409200:	lea    rcx,[rcx+0x1]
  409204:	lea    r10d,[rax-0x30]
  409208:	mov    r8d,eax
  40920b:	cmp    r10d,0x9
  40920f:	ja     0x4092d0
  409215:	cmp    ebx,0x8
  409218:	jle    0x4091e3
  40921a:	cmp    ebx,0xf
  40921d:	jg     0x4091ef
  40921f:	lea    eax,[rdx+rdx*4]
  409222:	movsx  r8d,r8b
  409226:	lea    edx,[r8+rax*2-0x30]
  40922b:	jmp    0x4091ef
  40922d:	nop    DWORD PTR [rax]
  409230:	add    rax,0x1
  409234:	mov    QWORD PTR [rsp+0xc0],rax
  40923c:	movzx  r8d,BYTE PTR [rax]
  409240:	cmp    r8b,0x2d
  409244:	jbe    0x4090a6
  40924a:	nop    WORD PTR [rax+rax*1+0x0]
  409250:	xor    r12d,r12d
  409253:	cmp    r8b,0x30
  409257:	mov    DWORD PTR [rsp+0x58],0x0
  40925f:	mov    r15,rax
  409262:	jne    0x4091b5
  409268:	movzx  edx,BYTE PTR [rax+0x1]
  40926c:	cmp    dl,0x58
  40926f:	je     0x40a42f
  409275:	add    rax,0x1
  409279:	cmp    dl,0x78
  40927c:	je     0x40a42f
  409282:	mov    r15,rax
  409285:	mov    QWORD PTR [rsp+0xc0],rax
  40928d:	add    rax,0x1
  409291:	movzx  edx,BYTE PTR [rax-0x1]
  409295:	cmp    dl,0x30
  409298:	je     0x409282
  40929a:	xor    r8d,r8d
  40929d:	test   dl,dl
  40929f:	je     0x4090d1
  4092a5:	mov    r8d,edx
  4092a8:	mov    r12d,0x1
  4092ae:	jmp    0x4091b5
  4092b3:	mov    rdx,rax
  4092b6:	mov    DWORD PTR [rsp+0x58],0x1
  4092be:	jmp    0x40918b
  4092c3:	mov    r9,r15
  4092c6:	xor    edx,edx
  4092c8:	xor    esi,esi
  4092ca:	xor    ebx,ebx
  4092cc:	nop    DWORD PTR [rax+0x0]
  4092d0:	movsx  ecx,BYTE PTR [rbp+0x0]
  4092d4:	cmp    ecx,eax
  4092d6:	je     0x4096d4
  4092dc:	mov    ebp,ebx
  4092de:	xor    ecx,ecx
  4092e0:	xor    r13d,r13d
  4092e3:	xor    r11d,r11d
  4092e6:	mov    r8d,eax
  4092e9:	and    r8d,0xffffffdf
  4092ed:	cmp    r8d,0x45
  4092f1:	je     0x4093f0
  4092f7:	xor    r8d,r8d
  4092fa:	test   ebp,ebp
  4092fc:	jne    0x409565
  409302:	or     ecx,r12d
  409305:	jne    0x409558
  40930b:	test   r11d,r11d
  40930e:	jne    0x409523
  409314:	cmp    eax,0x4e
  409317:	je     0x409331
  409319:	jle    0x40951a
  40931f:	cmp    eax,0x69
  409322:	je     0x40a6ba
  409328:	cmp    eax,0x6e
  40932b:	jne    0x409523
  409331:	lea    rbx,[rsp+0xc0]
  409339:	lea    rdx,[rip+0x6e09]        # 0x410149
  409340:	mov    rcx,rbx
  409343:	call   0x40c7f0
  409348:	test   eax,eax
  40934a:	je     0x409523
  409350:	mov    rax,QWORD PTR [rsp+0x190]
  409358:	mov    rsi,QWORD PTR [rsp+0x198]
  409360:	xor    ebp,ebp
  409362:	mov    rdx,QWORD PTR [rsp+0xc0]
  40936a:	mov    DWORD PTR [rsp+0xa4],0x4
  409375:	mov    eax,DWORD PTR [rax+0x8]
  409378:	mov    DWORD PTR [rsp+0x44],eax
  40937c:	add    eax,0x1
  40937f:	mov    DWORD PTR [rsi],eax
  409381:	cmp    BYTE PTR [rdx],0x28
  409384:	je     0x40aa96
  40938a:	nop    WORD PTR [rax+rax*1+0x0]
  409390:	mov    rsi,QWORD PTR [rsp+0x198]
  409398:	mov    DWORD PTR [rsi],eax
  40939a:	mov    r8,QWORD PTR [rsp+0xc8]
  4093a2:	test   ebp,ebp
  4093a4:	je     0x4090d1
  4093aa:	mov    r9d,DWORD PTR [rsp+0x84]
  4093b2:	test   r9d,r9d
  4093b5:	jne    0x409ae4
  4093bb:	mov    eax,DWORD PTR [rsp+0xa4]
  4093c2:	mov    ecx,DWORD PTR [r8+0x14]
  4093c6:	xor    edx,edx
  4093c8:	and    eax,0xfffffff8
  4093cb:	test   ecx,ecx
  4093cd:	setg   dl
  4093d0:	add    edx,edx
  4093d2:	or     eax,edx
  4093d4:	test   al,0x30
  4093d6:	jne    0x409543
  4093dc:	mov    DWORD PTR [rsp+0xa4],eax
  4093e3:	jmp    0x4090d1
  4093e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4093f0:	mov    eax,ebp
  4093f2:	or     eax,ecx
  4093f4:	or     eax,r12d
  4093f7:	je     0x409523
  4093fd:	mov    rdi,QWORD PTR [rsp+0xc0]
  409405:	lea    rax,[rdi+0x1]
  409409:	mov    QWORD PTR [rsp+0xc0],rax
  409411:	movsx  eax,BYTE PTR [rdi+0x1]
  409415:	cmp    al,0x2b
  409417:	je     0x40a5d8
  40941d:	cmp    al,0x2d
  40941f:	je     0x4099e1
  409425:	mov    DWORD PTR [rsp+0x44],0x0
  40942d:	lea    r8d,[rax-0x30]
  409431:	cmp    r8d,0x9
  409435:	ja     0x409b10
  40943b:	cmp    eax,0x30
  40943e:	jne    0x409465
  409440:	mov    rax,QWORD PTR [rsp+0xc0]
  409448:	lea    r8,[rax+0x1]
  40944c:	nop    DWORD PTR [rax+0x0]
  409450:	mov    QWORD PTR [rsp+0xc0],r8
  409458:	movsx  eax,BYTE PTR [r8]
  40945c:	add    r8,0x1
  409460:	cmp    eax,0x30
  409463:	je     0x409450
  409465:	lea    r9d,[rax-0x31]
  409469:	xor    r8d,r8d
  40946c:	cmp    r9d,0x8
  409470:	ja     0x4092fa
  409476:	lea    r9d,[rax-0x30]
  40947a:	mov    rax,QWORD PTR [rsp+0xc0]
  409482:	lea    r10,[rax+0x1]
  409486:	mov    QWORD PTR [rsp+0x50],rax
  40948b:	mov    QWORD PTR [rsp+0xc0],r10
  409493:	mov    QWORD PTR [rsp+0x48],r10
  409498:	mov    r10,rax
  40949b:	movsx  eax,BYTE PTR [rax+0x1]
  40949f:	lea    r8d,[rax-0x30]
  4094a3:	cmp    r8d,0x9
  4094a7:	ja     0x4094e3
  4094a9:	lea    r8,[r10+0x2]
  4094ad:	mov    DWORD PTR [rsp+0x5c],r11d
  4094b2:	lea    r9d,[r9+r9*4]
  4094b6:	mov    QWORD PTR [rsp+0xc0],r8
  4094be:	mov    r11,r8
  4094c1:	add    r8,0x1
  4094c5:	lea    r9d,[rax+r9*2-0x30]
  4094ca:	movsx  eax,BYTE PTR [r8-0x1]
  4094cf:	lea    r10d,[rax-0x30]
  4094d3:	cmp    r10d,0x9
  4094d7:	jbe    0x4094b2
  4094d9:	mov    QWORD PTR [rsp+0x48],r11
  4094de:	mov    r11d,DWORD PTR [rsp+0x5c]
  4094e3:	mov    r8,QWORD PTR [rsp+0x48]
  4094e8:	sub    r8,QWORD PTR [rsp+0x50]
  4094ed:	cmp    r8,0x8
  4094f1:	jg     0x40a6af
  4094f7:	cmp    r9d,0x4e1f
  4094fe:	jg     0x40a6af
  409504:	mov    r10d,DWORD PTR [rsp+0x44]
  409509:	mov    r8d,r10d
  40950c:	neg    r8d
  40950f:	xor    r8d,r9d
  409512:	add    r8d,r10d
  409515:	jmp    0x4092fa
  40951a:	cmp    eax,0x49
  40951d:	je     0x40a6ba
  409523:	mov    DWORD PTR [rsp+0xa4],0x6
  40952e:	mov    QWORD PTR [rsp+0xc0],rdi
  409536:	mov    r8,QWORD PTR [rsp+0xc8]
  40953e:	jmp    0x4090d1
  409543:	or     eax,0x40
  409546:	mov    DWORD PTR [rsp+0xa4],eax
  40954d:	call   0x40ca68
  409552:	mov    DWORD PTR [rax],0x22
  409558:	mov    r8,QWORD PTR [rsp+0xc8]
  409560:	jmp    0x4090d1
  409565:	mov    rax,QWORD PTR [rsp+0x190]
  40956d:	mov    ecx,DWORD PTR [rsp+0x58]
  409571:	sub    r8d,r13d
  409574:	mov    DWORD PTR [rsp+0xa4],0x1
  40957f:	mov    DWORD PTR [rsp+0x68],r8d
  409584:	mov    eax,DWORD PTR [rax+0xc]
  409587:	mov    DWORD PTR [rsp+0x44],eax
  40958b:	and    eax,0x3
  40958e:	mov    edi,eax
  409590:	sub    edi,ecx
  409592:	cmp    eax,0x2
  409595:	mov    DWORD PTR [rsp+0x6c],edi
  409599:	je     0x4095b3
  40959b:	lea    edi,[rcx+0x1]
  40959e:	cmp    eax,0x3
  4095a1:	mov    DWORD PTR [rsp+0x6c],edi
  4095a5:	je     0x4095b3
  4095a7:	test   eax,eax
  4095a9:	sete   al
  4095ac:	movzx  eax,al
  4095af:	mov    DWORD PTR [rsp+0x6c],eax
  4095b3:	pxor   xmm0,xmm0
  4095b7:	mov    eax,esi
  4095b9:	test   ebx,ebx
  4095bb:	cmove  ebx,ebp
  4095be:	mov    edi,0x10
  4095c3:	cmp    ebp,0x10
  4095c6:	cmovle edi,ebp
  4095c9:	cvtsi2sd xmm0,rax
  4095ce:	cmp    edi,0x9
  4095d1:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4095da:	jle    0x409603
  4095dc:	pxor   xmm1,xmm1
  4095e0:	lea    eax,[rdi-0x9]
  4095e3:	mov    rcx,QWORD PTR [rip+0x7006]        # 0x4105f0
  4095ea:	cdqe   
  4095ec:	cvtsi2sd xmm1,rdx
  4095f1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  4095f6:	addsd  xmm0,xmm1
  4095fa:	movsd  QWORD PTR [rsp+0xb0],xmm0
  409603:	cmp    ebp,0xf
  409606:	jg     0x409775
  40960c:	cmp    DWORD PTR [rsp+0x40],0x35
  409611:	jg     0x409775
  409617:	cmp    DWORD PTR [rsp+0x68],0x0
  40961c:	je     0x40a600
  409622:	jle    0x409a89
  409628:	cmp    DWORD PTR [rsp+0x68],0x16
  40962d:	jg     0x40a62a
  409633:	movsxd rcx,DWORD PTR [rsp+0x68]
  409638:	mov    edx,DWORD PTR [rsp+0xb0]
  40963f:	lea    rax,[rip+0x6bfa]        # 0x410240
  409646:	test   edx,edx
  409648:	mov    r8d,DWORD PTR [rax+rcx*4]
  40964c:	je     0x40a71e
  409652:	tzcnt  edx,edx
  409656:	mov    eax,0x35
  40965b:	sub    eax,edx
  40965d:	mov    rdx,QWORD PTR [rip+0x6f8c]        # 0x4105f0
  409664:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40966d:	add    eax,r8d
  409670:	cmp    eax,0x35
  409673:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  409678:	lea    rdx,[rsp+0xa4]
  409680:	setle  al
  409683:	movzx  eax,al
  409686:	lea    rcx,[rsp+0xb0]
  40968e:	mov    QWORD PTR [rsp+0x30],rdx
  409693:	mov    edx,DWORD PTR [rsp+0x6c]
  409697:	mov    DWORD PTR [rsp+0x20],eax
  40969b:	mov    DWORD PTR [rsp+0x28],edx
  40969f:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4096a8:	mov    r9,QWORD PTR [rsp+0x1a0]
  4096b0:	mov    r8,QWORD PTR [rsp+0x198]
  4096b8:	mov    rdx,QWORD PTR [rsp+0x190]
  4096c0:	call   0x408b30
  4096c5:	test   eax,eax
  4096c7:	jne    0x409558
  4096cd:	xor    eax,eax
  4096cf:	jmp    0x409779
  4096d4:	movzx  r8d,BYTE PTR [rbp+0x1]
  4096d9:	test   r8b,r8b
  4096dc:	je     0x40a95d
  4096e2:	cmp    r8b,BYTE PTR [r9+0x1]
  4096e6:	jne    0x4092dc
  4096ec:	mov    eax,0x2
  4096f1:	jmp    0x409702
  4096f3:	add    rax,0x1
  4096f7:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  4096fc:	jne    0x409900
  409702:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  409708:	test   r8b,r8b
  40970b:	jne    0x4096f3
  40970d:	lea    r8,[r9+rax*1]
  409711:	test   ebx,ebx
  409713:	mov    QWORD PTR [rsp+0xc0],r8
  40971b:	movsx  eax,BYTE PTR [r8]
  40971f:	je     0x4099fe
  409725:	lea    r8d,[rax-0x30]
  409729:	xor    ecx,ecx
  40972b:	xor    r13d,r13d
  40972e:	mov    ebp,ebx
  409730:	cmp    r8d,0x9
  409734:	ja     0x40976a
  409736:	test   r8d,r8d
  409739:	lea    eax,[rcx+0x1]
  40973c:	mov    r9d,r8d
  40973f:	jne    0x40a8dd
  409745:	mov    r8,QWORD PTR [rsp+0xc0]
  40974d:	mov    ecx,eax
  40974f:	lea    rax,[r8+0x1]
  409753:	mov    QWORD PTR [rsp+0xc0],rax
  40975b:	movsx  eax,BYTE PTR [r8+0x1]
  409760:	lea    r8d,[rax-0x30]
  409764:	cmp    r8d,0x9
  409768:	jbe    0x409736
  40976a:	mov    r11d,0x1
  409770:	jmp    0x4092e6
  409775:	mov    eax,DWORD PTR [rsp+0x68]
  409779:	mov    edx,ebp
  40977b:	sub    edx,edi
  40977d:	add    edx,eax
  40977f:	cmp    edx,0x0
  409782:	jle    0x40a4ba
  409788:	mov    eax,edx
  40978a:	and    eax,0xf
  40978d:	je     0x4097af
  40978f:	mov    rcx,QWORD PTR [rip+0x6e5a]        # 0x4105f0
  409796:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40979f:	cdqe   
  4097a1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  4097a6:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4097af:	and    edx,0xfffffff0
  4097b2:	jne    0x409911
  4097b8:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4097c1:	xor    edi,edi
  4097c3:	lea    rdx,[rsp+0xac]
  4097cb:	lea    r8,[rsp+0xa8]
  4097d3:	call   0x40c4f0
  4097d8:	mov    edx,DWORD PTR [rsp+0xa8]
  4097df:	mov    r13d,DWORD PTR [rsp+0x40]
  4097e4:	add    edi,DWORD PTR [rsp+0xac]
  4097eb:	mov    QWORD PTR [rsp+0xc8],rax
  4097f3:	mov    r12d,edx
  4097f6:	sub    r12d,r13d
  4097f9:	test   r12d,r12d
  4097fc:	mov    DWORD PTR [rsp+0xac],edi
  409803:	jle    0x40982c
  409805:	mov    edx,r12d
  409808:	mov    rcx,rax
  40980b:	call   0x40b560
  409810:	mov    edi,DWORD PTR [rsp+0xac]
  409817:	mov    DWORD PTR [rsp+0xa8],r13d
  40981f:	mov    edx,r13d
  409822:	add    edi,r12d
  409825:	mov    DWORD PTR [rsp+0xac],edi
  40982c:	lea    eax,[rdi+rdx*1]
  40982f:	sub    eax,DWORD PTR [rsp+0x40]
  409833:	mov    ecx,eax
  409835:	mov    DWORD PTR [rsp+0x8c],eax
  40983c:	mov    rax,QWORD PTR [rsp+0x190]
  409844:	mov    eax,DWORD PTR [rax+0x8]
  409847:	mov    DWORD PTR [rsp+0x44],eax
  40984b:	add    eax,0x1
  40984e:	cmp    ecx,eax
  409850:	jg     0x40a3f5
  409856:	mov    rax,QWORD PTR [rsp+0x190]
  40985e:	mov    eax,DWORD PTR [rax+0x4]
  409861:	cmp    ecx,eax
  409863:	mov    DWORD PTR [rsp+0x50],eax
  409867:	jge    0x40a5f3
  40986d:	sub    edi,eax
  40986f:	cmp    edi,0x0
  409872:	jle    0x409a5c
  409878:	mov    rcx,QWORD PTR [rsp+0xc8]
  409880:	mov    edx,edi
  409882:	call   0x40c120
  409887:	add    DWORD PTR [rsp+0xa8],edi
  40988e:	mov    QWORD PTR [rsp+0xc8],rax
  409896:	mov    eax,DWORD PTR [rsp+0x50]
  40989a:	mov    DWORD PTR [rsp+0xac],eax
  4098a1:	mov    eax,DWORD PTR [rsp+0x84]
  4098a8:	test   eax,eax
  4098aa:	je     0x409b20
  4098b0:	mov    eax,DWORD PTR [rsp+0x8c]
  4098b7:	add    eax,0x1
  4098ba:	cmp    DWORD PTR [rsp+0x50],eax
  4098be:	jle    0x409b20
  4098c4:	mov    r8,QWORD PTR [rsp+0xc8]
  4098cc:	mov    rax,QWORD PTR [rsp+0x198]
  4098d4:	mov    esi,DWORD PTR [rsp+0x50]
  4098d8:	mov    DWORD PTR [rsp+0xa4],0x50
  4098e3:	mov    DWORD PTR [r8+0x14],0x0
  4098eb:	mov    DWORD PTR [r8+0x18],0x0
  4098f3:	mov    DWORD PTR [rax],esi
  4098f5:	jmp    0x4093aa
  4098fa:	nop    WORD PTR [rax+rax*1+0x0]
  409900:	mov    eax,ecx
  409902:	mov    ebp,ebx
  409904:	xor    ecx,ecx
  409906:	xor    r13d,r13d
  409909:	xor    r11d,r11d
  40990c:	jmp    0x4092e6
  409911:	sar    edx,0x4
  409914:	cmp    edx,0xf
  409917:	jle    0x40a9e3
  40991d:	mov    rax,QWORD PTR [rip+0x6bec]        # 0x410510
  409924:	mov    ecx,edx
  409926:	xor    r8d,r8d
  409929:	movsd  xmm1,QWORD PTR [rax+0x20]
  40992e:	xchg   ax,ax
  409930:	mov    eax,DWORD PTR [rsp+0xb4]
  409937:	sub    ecx,0x10
  40993a:	mov    r9d,eax
  40993d:	and    eax,0x800fffff
  409942:	or     eax,0x3ff00000
  409947:	and    r9d,0x7ff00000
  40994e:	mov    DWORD PTR [rsp+0xb4],eax
  409955:	shr    r9d,0x14
  409959:	cmp    ecx,0xf
  40995c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  409965:	lea    r8d,[r8+r9*1-0x3ff]
  40996d:	mulsd  xmm0,xmm1
  409971:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40997a:	jg     0x409930
  40997c:	and    edx,0xf
  40997f:	mov    eax,DWORD PTR [rsp+0xb4]
  409986:	mov    ecx,eax
  409988:	and    eax,0x800fffff
  40998d:	or     eax,0x3ff00000
  409992:	and    ecx,0x7ff00000
  409998:	shr    ecx,0x14
  40999b:	mov    DWORD PTR [rsp+0xb4],eax
  4099a2:	test   edx,edx
  4099a4:	lea    edi,[r8+rcx*1-0x3ff]
  4099ac:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4099b5:	mov    rax,QWORD PTR [rip+0x6b54]        # 0x410510
  4099bc:	je     0x4097c3
  4099c2:	test   dl,0x1
  4099c5:	je     0x4099cb
  4099c7:	mulsd  xmm0,QWORD PTR [rax]
  4099cb:	add    rax,0x8
  4099cf:	sar    edx,1
  4099d1:	jne    0x4099c2
  4099d3:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4099dc:	jmp    0x4097c3
  4099e1:	mov    DWORD PTR [rsp+0x44],0x1
  4099e9:	lea    rax,[rdi+0x2]
  4099ed:	mov    QWORD PTR [rsp+0xc0],rax
  4099f5:	movsx  eax,BYTE PTR [rdi+0x2]
  4099f9:	jmp    0x40942d
  4099fe:	cmp    eax,0x30
  409a01:	jne    0x40aa45
  409a07:	add    r8,0x1
  409a0b:	xor    ecx,ecx
  409a0d:	nop    DWORD PTR [rax]
  409a10:	mov    QWORD PTR [rsp+0xc0],r8
  409a18:	movsx  eax,BYTE PTR [r8]
  409a1c:	add    ecx,0x1
  409a1f:	add    r8,0x1
  409a23:	cmp    eax,0x30
  409a26:	je     0x409a10
  409a28:	lea    r8d,[rax-0x31]
  409a2c:	cmp    r8d,0x8
  409a30:	ja     0x40a6a5
  409a36:	mov    r15,QWORD PTR [rsp+0xc0]
  409a3e:	lea    r9d,[rax-0x30]
  409a42:	lea    r13d,[rcx+0x1]
  409a46:	mov    ebp,0x1
  409a4b:	mov    r8,r15
  409a4e:	lea    eax,[rsi+rsi*4]
  409a51:	xor    ecx,ecx
  409a53:	lea    esi,[r9+rax*2]
  409a57:	jmp    0x40974f
  409a5c:	je     0x409896
  409a62:	add    edx,edi
  409a64:	test   edx,edx
  409a66:	mov    DWORD PTR [rsp+0xa8],edx
  409a6d:	jle    0x40aa06
  409a73:	mov    rcx,QWORD PTR [rsp+0xc8]
  409a7b:	neg    edi
  409a7d:	mov    edx,edi
  409a7f:	call   0x40b560
  409a84:	jmp    0x409896
  409a89:	mov    edx,DWORD PTR [rsp+0x68]
  409a8d:	cmp    edx,0xffffffea
  409a90:	mov    eax,edx
  409a92:	jl     0x409779
  409a98:	mov    rdx,QWORD PTR [rip+0x6b51]        # 0x4105f0
  409a9f:	neg    eax
  409aa1:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  409aaa:	cdqe   
  409aac:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  409ab1:	lea    rax,[rsp+0xa4]
  409ab9:	movsd  QWORD PTR [rsp+0xb0],xmm0
  409ac2:	lea    rcx,[rsp+0xb0]
  409aca:	mov    DWORD PTR [rsp+0x20],0x0
  409ad2:	mov    QWORD PTR [rsp+0x30],rax
  409ad7:	mov    eax,DWORD PTR [rsp+0x6c]
  409adb:	mov    DWORD PTR [rsp+0x28],eax
  409adf:	jmp    0x4096a8
  409ae4:	mov    DWORD PTR [r8+0x14],0x0
  409aec:	mov    DWORD PTR [rsp+0xa4],0x50
  409af7:	call   0x40ca68
  409afc:	mov    r8,QWORD PTR [rsp+0xc8]
  409b04:	mov    DWORD PTR [rax],0x22
  409b0a:	jmp    0x4090d1
  409b0f:	nop
  409b10:	mov    QWORD PTR [rsp+0xc0],rdi
  409b18:	xor    r8d,r8d
  409b1b:	jmp    0x4092fa
  409b20:	mov    eax,DWORD PTR [rsp+0x50]
  409b24:	mov    DWORD PTR [rsp+0x44],0x1
  409b2c:	mov    DWORD PTR [rsp+0x8c],eax
  409b33:	mov    r8d,ebp
  409b36:	mov    edx,ebx
  409b38:	mov    DWORD PTR [rsp+0x20],r14d
  409b3d:	mov    r9d,esi
  409b40:	mov    rcx,r15
  409b43:	call   0x40c630
  409b48:	mov    QWORD PTR [rsp+0x70],rax
  409b4d:	add    rax,0x10
  409b51:	mov    QWORD PTR [rsp+0x78],rax
  409b56:	mov    eax,DWORD PTR [rsp+0x40]
  409b5a:	movsd  xmm8,QWORD PTR [rip+0x673d]        # 0x4102a0
  409b63:	movsd  xmm9,QWORD PTR [rip+0x6744]        # 0x4102b0
  409b6c:	add    eax,0x1
  409b6f:	movapd xmm11,xmm8
  409b74:	mov    DWORD PTR [rsp+0x80],eax
  409b7b:	mov    eax,DWORD PTR [rsp+0x68]
  409b7f:	movsd  xmm10,QWORD PTR [rip+0x6748]        # 0x4102d0
  409b88:	mov    edx,eax
  409b8a:	neg    edx
  409b8c:	test   eax,eax
  409b8e:	mov    eax,0x0
  409b93:	cmovs  eax,edx
  409b96:	xor    ebp,ebp
  409b98:	mov    DWORD PTR [rsp+0x5c],eax
  409b9c:	jmp    0x409de0
  409ba1:	mov    rcx,rsi
  409ba4:	call   0x40c120
  409ba9:	mov    rsi,rax
  409bac:	test   r15d,r15d
  409baf:	je     0x409bbf
  409bb1:	mov    rcx,rdi
  409bb4:	mov    edx,r15d
  409bb7:	call   0x40bfb0
  409bbc:	mov    rdi,rax
  409bbf:	test   r12d,r12d
  409bc2:	jle    0x409bd2
  409bc4:	mov    rcx,rdi
  409bc7:	mov    edx,r12d
  409bca:	call   0x40c120
  409bcf:	mov    rdi,rax
  409bd2:	test   r14d,r14d
  409bd5:	jle    0x409be5
  409bd7:	mov    rcx,r13
  409bda:	mov    edx,r14d
  409bdd:	call   0x40c120
  409be2:	mov    r13,rax
  409be5:	mov    rdx,rdi
  409be8:	mov    rcx,rsi
  409beb:	call   0x40c290
  409bf0:	cmp    DWORD PTR [rax+0x14],0x1
  409bf4:	mov    rbx,rax
  409bf7:	jle    0x409f90
  409bfd:	mov    ebp,DWORD PTR [rbx+0x10]
  409c00:	mov    rdx,r13
  409c03:	mov    DWORD PTR [rbx+0x10],0x0
  409c0a:	mov    rcx,rbx
  409c0d:	call   0x40c240
  409c12:	test   eax,eax
  409c14:	jg     0x409f20
  409c1a:	mov    ecx,DWORD PTR [rsp+0x6c]
  409c1e:	test   ecx,ecx
  409c20:	je     0x409f20
  409c26:	mov    eax,ecx
  409c28:	and    eax,0x1
  409c2b:	xor    eax,ebp
  409c2d:	mov    DWORD PTR [rsp+0x60],eax
  409c31:	je     0x40a73b
  409c37:	test   ebp,ebp
  409c39:	je     0x40a191
  409c3f:	movsd  xmm6,QWORD PTR [rip+0x6659]        # 0x4102a0
  409c47:	mov    DWORD PTR [rsp+0xa4],0x21
  409c52:	xor    r12d,r12d
  409c55:	mov    DWORD PTR [rsp+0x88],0x20
  409c60:	xor    r14d,r14d
  409c63:	movapd xmm7,xmm6
  409c67:	mov    eax,DWORD PTR [rsp+0xa8]
  409c6e:	mov    edx,DWORD PTR [rsp+0xac]
  409c75:	mov    r8d,DWORD PTR [rsp+0x44]
  409c7a:	add    edx,eax
  409c7c:	test   r8d,r8d
  409c7f:	mov    DWORD PTR [rsp+0x48],edx
  409c83:	jne    0x409c8f
  409c85:	cmp    DWORD PTR [rsp+0x40],eax
  409c89:	jg     0x40a345
  409c8f:	lea    rdx,[rsp+0x9c]
  409c97:	lea    r8,[rsp+0xa0]
  409c9f:	movapd xmm0,xmm6
  409ca3:	call   0x40c4f0
  409ca8:	mov    edx,DWORD PTR [rsp+0x9c]
  409caf:	mov    r15,rax
  409cb2:	test   edx,edx
  409cb4:	js     0x40a380
  409cba:	je     0x409cc7
  409cbc:	mov    rcx,rax
  409cbf:	call   0x40c120
  409cc4:	mov    r15,rax
  409cc7:	mov    rbp,QWORD PTR [rsp+0xc8]
  409ccf:	test   r14d,r14d
  409cd2:	mov    rdx,r15
  409cd5:	mov    rcx,rbp
  409cd8:	je     0x40a0c0
  409cde:	call   0x40c290
  409ce3:	mov    ecx,DWORD PTR [rsp+0x44]
  409ce7:	mov    QWORD PTR [rsp+0xc8],rax
  409cef:	mov    edx,DWORD PTR [rbp+0x14]
  409cf2:	test   ecx,ecx
  409cf4:	jne    0x40a260
  409cfa:	sub    edx,0x1
  409cfd:	cmp    edx,DWORD PTR [rax+0x14]
  409d00:	jge    0x409d1d
  409d02:	movsxd rdx,edx
  409d05:	add    rdx,0x4
  409d09:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  409d0e:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  409d13:	xor    ecx,0x1f
  409d16:	xor    edx,0x1f
  409d19:	cmp    ecx,edx
  409d1b:	jle    0x409d40
  409d1d:	mov    ecx,DWORD PTR [rsp+0x50]
  409d21:	cmp    DWORD PTR [rsp+0x8c],ecx
  409d28:	jne    0x40a140
  409d2e:	sub    DWORD PTR [rsp+0xa8],0x1
  409d36:	mov    DWORD PTR [rsp+0x44],0x1
  409d3e:	xchg   ax,ax
  409d40:	mov    rcx,r15
  409d43:	call   0x40bd20
  409d48:	mov    rcx,rbp
  409d4b:	call   0x40bd20
  409d50:	mov    r14d,DWORD PTR [rsp+0x60]
  409d55:	test   r14d,r14d
  409d58:	jne    0x409fa0
  409d5e:	test   r12d,r12d
  409d61:	je     0x409da8
  409d63:	mov    eax,DWORD PTR [rsp+0xa8]
  409d6a:	add    eax,DWORD PTR [rsp+0xac]
  409d71:	cmp    DWORD PTR [rsp+0x48],eax
  409d75:	jne    0x409da8
  409d77:	mulsd  xmm6,QWORD PTR [rip+0x6549]        # 0x4102c8
  409d7f:	movapd xmm0,xmm7
  409d83:	subsd  xmm0,QWORD PTR [rip+0x652d]        # 0x4102b8
  409d8b:	movapd xmm1,xmm6
  409d8f:	xorpd  xmm1,xmm10
  409d94:	ucomisd xmm1,xmm0
  409d98:	jbe    0x40a312
  409d9e:	ucomisd xmm7,xmm6
  409da2:	ja     0x40a332
  409da8:	mov    r12d,DWORD PTR [rsp+0x44]
  409dad:	test   r12d,r12d
  409db0:	je     0x40a175
  409db6:	mov    DWORD PTR [rsp+0x44],0x1
  409dbe:	xor    ebp,ebp
  409dc0:	mov    rcx,rsi
  409dc3:	call   0x40bd20
  409dc8:	mov    rcx,rdi
  409dcb:	call   0x40bd20
  409dd0:	mov    rcx,r13
  409dd3:	call   0x40bd20
  409dd8:	mov    rcx,rbx
  409ddb:	call   0x40bd20
  409de0:	mov    rsi,QWORD PTR [rsp+0x70]
  409de5:	mov    r15d,0x0
  409deb:	mov    ecx,DWORD PTR [rsi+0x8]
  409dee:	call   0x40bc10
  409df3:	lea    rcx,[rax+0x10]
  409df7:	mov    rdi,rax
  409dfa:	movsxd rax,DWORD PTR [rsi+0x14]
  409dfe:	mov    rdx,QWORD PTR [rsp+0x78]
  409e03:	lea    r8,[rax*4+0x8]
  409e0b:	call   0x40c9b8
  409e10:	mov    rax,QWORD PTR [rsp+0xc8]
  409e18:	mov    ecx,DWORD PTR [rax+0x8]
  409e1b:	call   0x40bc10
  409e20:	mov    rdx,QWORD PTR [rsp+0xc8]
  409e28:	lea    rcx,[rax+0x10]
  409e2c:	mov    rsi,rax
  409e2f:	movsxd rax,DWORD PTR [rdx+0x14]
  409e33:	add    rdx,0x10
  409e37:	lea    r8,[rax*4+0x8]
  409e3f:	call   0x40c9b8
  409e44:	mov    eax,DWORD PTR [rsp+0xa8]
  409e4b:	mov    ecx,0x1
  409e50:	mov    ebx,DWORD PTR [rsp+0xac]
  409e57:	sub    eax,ebp
  409e59:	add    ebx,ebp
  409e5b:	mov    DWORD PTR [rsp+0x48],eax
  409e5f:	call   0x40be50
  409e64:	mov    r13,rax
  409e67:	mov    eax,DWORD PTR [rsp+0x68]
  409e6b:	test   eax,eax
  409e6d:	cmovg  r15d,eax
  409e71:	test   ebx,ebx
  409e73:	js     0x40a130
  409e79:	mov    eax,DWORD PTR [rsp+0x5c]
  409e7d:	mov    edx,r15d
  409e80:	lea    r14d,[rax+rbx*1]
  409e84:	mov    ecx,DWORD PTR [rsp+0x48]
  409e88:	mov    eax,DWORD PTR [rsp+0x80]
  409e8f:	add    ebx,ecx
  409e91:	sub    ebx,DWORD PTR [rsp+0x40]
  409e95:	sub    eax,ecx
  409e97:	cmp    DWORD PTR [rsp+0x50],ebx
  409e9b:	jle    0x409ea3
  409e9d:	sub    ebx,DWORD PTR [rsp+0x50]
  409ea1:	add    eax,ebx
  409ea3:	lea    ebx,[r14+rax*1]
  409ea7:	lea    r12d,[rdx+rax*1]
  409eab:	cmp    ebx,r12d
  409eae:	mov    eax,r12d
  409eb1:	cmovle eax,ebx
  409eb4:	cmp    eax,r14d
  409eb7:	cmovg  eax,r14d
  409ebb:	test   eax,eax
  409ebd:	jle    0x409ec7
  409ebf:	sub    ebx,eax
  409ec1:	sub    r12d,eax
  409ec4:	sub    r14d,eax
  409ec7:	mov    eax,DWORD PTR [rsp+0x5c]
  409ecb:	test   eax,eax
  409ecd:	je     0x409efc
  409ecf:	mov    rcx,r13
  409ed2:	mov    edx,eax
  409ed4:	call   0x40bfb0
  409ed9:	mov    rdx,rsi
  409edc:	mov    rcx,rax
  409edf:	mov    r13,rax
  409ee2:	call   0x40be80
  409ee7:	mov    rcx,rsi
  409eea:	mov    QWORD PTR [rsp+0x60],rax
  409eef:	call   0x40bd20
  409ef4:	mov    rax,QWORD PTR [rsp+0x60]
  409ef9:	mov    rsi,rax
  409efc:	sub    ebx,ebp
  409efe:	cmp    ebx,0x0
  409f01:	mov    edx,ebx
  409f03:	jg     0x409ba1
  409f09:	je     0x409bac
  409f0f:	neg    edx
  409f11:	mov    rcx,rsi
  409f14:	call   0x40b560
  409f19:	jmp    0x409bac
  409f1e:	xchg   ax,ax
  409f20:	test   eax,eax
  409f22:	js     0x40a752
  409f28:	je     0x40a81e
  409f2e:	mov    rdx,r13
  409f31:	mov    rcx,rbx
  409f34:	call   0x40c730
  409f39:	ucomisd xmm9,xmm0
  409f3e:	jb     0x40a270
  409f44:	test   ebp,ebp
  409f46:	jne    0x40a3a0
  409f4c:	mov    DWORD PTR [rsp+0x60],0x0
  409f54:	cmp    DWORD PTR [rsp+0x48],0x1
  409f59:	jg     0x409f69
  409f5b:	mov    r9d,DWORD PTR [rsp+0x44]
  409f60:	test   r9d,r9d
  409f63:	jne    0x40a92a
  409f69:	movapd xmm6,xmm8
  409f6e:	xor    r12d,r12d
  409f71:	mov    DWORD PTR [rsp+0x88],0x10
  409f7c:	movapd xmm7,xmm8
  409f81:	mov    r14d,0x1
  409f87:	jmp    0x409c67
  409f8c:	nop    DWORD PTR [rax+0x0]
  409f90:	mov    r15d,DWORD PTR [rax+0x18]
  409f94:	test   r15d,r15d
  409f97:	jne    0x409bfd
  409f9d:	nop    DWORD PTR [rax]
  409fa0:	mov    ebp,DWORD PTR [rsp+0x44]
  409fa4:	test   ebp,ebp
  409fa6:	je     0x40a498
  409fac:	mov    eax,DWORD PTR [rsp+0xac]
  409fb3:	mov    ebp,0x1
  409fb8:	mov    rdx,QWORD PTR [rsp+0x198]
  409fc0:	mov    rcx,rsi
  409fc3:	mov    DWORD PTR [rdx],eax
  409fc5:	call   0x40bd20
  409fca:	mov    rcx,rdi
  409fcd:	call   0x40bd20
  409fd2:	mov    rcx,r13
  409fd5:	call   0x40bd20
  409fda:	mov    rcx,QWORD PTR [rsp+0x70]
  409fdf:	call   0x40bd20
  409fe4:	mov    rcx,rbx
  409fe7:	call   0x40bd20
  409fec:	mov    rax,QWORD PTR [rsp+0x190]
  409ff4:	mov    esi,DWORD PTR [rsp+0xac]
  409ffb:	cmp    DWORD PTR [rax+0x8],esi
  409ffe:	jge    0x40939a
  40a004:	mov    rax,QWORD PTR [rsp+0x190]
  40a00c:	mov    eax,DWORD PTR [rax+0xc]
  40a00f:	mov    DWORD PTR [rsp+0x44],eax
  40a013:	and    eax,0x3
  40a016:	cmp    eax,0x2
  40a019:	je     0x40a80b
  40a01f:	cmp    eax,0x3
  40a022:	je     0x40a7f8
  40a028:	cmp    eax,0x1
  40a02b:	je     0x40a3f7
  40a031:	mov    rcx,QWORD PTR [rsp+0xc8]
  40a039:	call   0x40bd20
  40a03e:	mov    rax,QWORD PTR [rsp+0x190]
  40a046:	mov    rsi,QWORD PTR [rsp+0x198]
  40a04e:	mov    QWORD PTR [rsp+0xc8],0x0
  40a05a:	mov    DWORD PTR [rsp+0xa4],0x11
  40a065:	mov    eax,DWORD PTR [rax+0x8]
  40a068:	mov    DWORD PTR [rsi],eax
  40a06a:	mov    rax,QWORD PTR [rsp+0x190]
  40a072:	mov    rsi,QWORD PTR [rsp+0x1a0]
  40a07a:	mov    ecx,DWORD PTR [rax]
  40a07c:	lea    eax,[rcx+0x1f]
  40a07f:	sar    eax,0x5
  40a082:	cdqe   
  40a084:	lea    rdx,[rsi+rax*4]
  40a088:	mov    rax,rsi
  40a08b:	cmp    rsi,rdx
  40a08e:	jae    0x40a0a0
  40a090:	add    rax,0x4
  40a094:	mov    DWORD PTR [rax-0x4],0xffffffff
  40a09b:	cmp    rdx,rax
  40a09e:	ja     0x40a090
  40a0a0:	and    ecx,0x1f
  40a0a3:	je     0x40a0b1
  40a0a5:	mov    eax,0x20
  40a0aa:	sub    eax,ecx
  40a0ac:	mov    ecx,eax
  40a0ae:	shr    DWORD PTR [rdx-0x4],cl
  40a0b1:	xor    r8d,r8d
  40a0b4:	jmp    0x4093a2
  40a0b9:	nop    DWORD PTR [rax+0x0]
  40a0c0:	call   0x40ab30
  40a0c5:	mov    edx,DWORD PTR [rax+0x14]
  40a0c8:	mov    QWORD PTR [rsp+0xc8],rax
  40a0d0:	sub    edx,0x1
  40a0d3:	cmp    edx,DWORD PTR [rbp+0x14]
  40a0d6:	jge    0x40a0f7
  40a0d8:	movsxd rdx,edx
  40a0db:	add    rdx,0x4
  40a0df:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  40a0e4:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  40a0e9:	xor    ecx,0x1f
  40a0ec:	xor    edx,0x1f
  40a0ef:	cmp    ecx,edx
  40a0f1:	jge    0x409d40
  40a0f7:	mov    edx,DWORD PTR [rsp+0x44]
  40a0fb:	test   edx,edx
  40a0fd:	je     0x40a3d0
  40a103:	mov    eax,DWORD PTR [rsp+0xa8]
  40a10a:	add    eax,0x1
  40a10d:	cmp    DWORD PTR [rsp+0x40],eax
  40a111:	mov    DWORD PTR [rsp+0xa8],eax
  40a118:	setne  al
  40a11b:	movzx  eax,al
  40a11e:	mov    DWORD PTR [rsp+0x44],eax
  40a122:	jmp    0x409d40
  40a127:	nop    WORD PTR [rax+rax*1+0x0]
  40a130:	mov    edx,r15d
  40a133:	mov    r14d,DWORD PTR [rsp+0x5c]
  40a138:	sub    edx,ebx
  40a13a:	jmp    0x409e84
  40a13f:	nop
  40a140:	mov    edx,0x1
  40a145:	mov    rcx,rax
  40a148:	call   0x40c120
  40a14d:	mov    rcx,r15
  40a150:	mov    QWORD PTR [rsp+0xc8],rax
  40a158:	sub    DWORD PTR [rsp+0xac],0x1
  40a160:	sub    DWORD PTR [rsp+0x8c],0x1
  40a168:	call   0x40bd20
  40a16d:	mov    rcx,rbp
  40a170:	call   0x40bd20
  40a175:	mov    rcx,QWORD PTR [rsp+0xc8]
  40a17d:	call   0x40b660
  40a182:	mov    DWORD PTR [rsp+0x44],0x0
  40a18a:	mov    ebp,eax
  40a18c:	jmp    0x409dc0
  40a191:	mov    edx,DWORD PTR [rsp+0x50]
  40a195:	cmp    DWORD PTR [rsp+0x8c],edx
  40a19c:	mov    DWORD PTR [rsp+0xa4],0x11
  40a1a7:	je     0x409f54
  40a1ad:	xor    ecx,ecx
  40a1af:	cmp    DWORD PTR [rsp+0x40],0x1f
  40a1b4:	mov    r9,QWORD PTR [rsp+0xc8]
  40a1bc:	mov    eax,DWORD PTR [rsp+0x40]
  40a1c0:	jle    0x40a1fc
  40a1c2:	mov    r14d,DWORD PTR [r9+0x18]
  40a1c6:	test   r14d,r14d
  40a1c9:	jne    0x409f54
  40a1cf:	lea    rdx,[r9+0x1c]
  40a1d3:	mov    eax,DWORD PTR [rsp+0x40]
  40a1d7:	xor    ecx,ecx
  40a1d9:	jmp    0x40a1f1
  40a1db:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1e0:	add    rdx,0x4
  40a1e4:	mov    r12d,DWORD PTR [rdx-0x4]
  40a1e8:	test   r12d,r12d
  40a1eb:	jne    0x409f54
  40a1f1:	sub    eax,0x20
  40a1f4:	add    ecx,0x1
  40a1f7:	cmp    eax,0x1f
  40a1fa:	jg     0x40a1e0
  40a1fc:	cmp    eax,0x1
  40a1ff:	jle    0x40a223
  40a201:	movsxd rcx,ecx
  40a204:	sub    eax,0x1
  40a207:	lea    r8,[r9+rcx*4]
  40a20b:	xor    ecx,ecx
  40a20d:	mov    edx,DWORD PTR [r8+0x18]
  40a211:	tzcnt  ecx,edx
  40a215:	shr    edx,cl
  40a217:	cmp    eax,ecx
  40a219:	mov    DWORD PTR [r8+0x18],edx
  40a21d:	jg     0x409f54
  40a223:	mov    eax,DWORD PTR [rsp+0x8c]
  40a22a:	mov    rcx,r9
  40a22d:	sub    eax,0x1
  40a230:	mov    DWORD PTR [rsp+0xac],eax
  40a237:	mov    eax,DWORD PTR [rsp+0x40]
  40a23b:	mov    edx,eax
  40a23d:	mov    DWORD PTR [rsp+0xa8],eax
  40a244:	call   0x408f30
  40a249:	mov    QWORD PTR [rsp+0xc8],rax
  40a251:	jmp    0x409fa0
  40a256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a260:	mov    DWORD PTR [rsp+0x44],0x1
  40a268:	jmp    0x409d40
  40a26d:	nop    DWORD PTR [rax]
  40a270:	movapd xmm7,xmm0
  40a274:	cmp    ebp,0x1
  40a277:	movsd  xmm1,QWORD PTR [rip+0x6039]        # 0x4102b8
  40a27f:	sbb    eax,eax
  40a281:	and    eax,0x10
  40a284:	movsd  xmm0,QWORD PTR [rip+0x6034]        # 0x4102c0
  40a28c:	mulsd  xmm7,xmm1
  40a290:	add    eax,0x10
  40a293:	xor    r14d,r14d
  40a296:	cmp    ebp,0x1
  40a299:	mov    DWORD PTR [rsp+0x88],eax
  40a2a0:	setb   r14b
  40a2a4:	ucomisd xmm0,xmm7
  40a2a8:	jbe    0x40a390
  40a2ae:	cvttsd2si r12d,xmm7
  40a2b3:	pxor   xmm6,xmm6
  40a2b7:	mov    eax,DWORD PTR [rsp+0x6c]
  40a2bb:	cmp    eax,0x1
  40a2be:	cvtsi2sd xmm6,r12d
  40a2c3:	subsd  xmm7,xmm6
  40a2c7:	je     0x40a5e5
  40a2cd:	cmp    eax,0x2
  40a2d0:	jne    0x40a489
  40a2d6:	test   r14d,r14d
  40a2d9:	jne    0x40a305
  40a2db:	ucomisd xmm7,QWORD PTR [rip+0x5fc5]        # 0x4102a8
  40a2e3:	jbe    0x40a305
  40a2e5:	pxor   xmm6,xmm6
  40a2e9:	add    r12d,0x1
  40a2ed:	mov    eax,0x30
  40a2f2:	sub    eax,DWORD PTR [rsp+0x88]
  40a2f9:	cvtsi2sd xmm6,r12d
  40a2fe:	mov    DWORD PTR [rsp+0x88],eax
  40a305:	mov    DWORD PTR [rsp+0x60],0x0
  40a30d:	jmp    0x409c67
  40a312:	ucomisd xmm0,xmm6
  40a316:	jbe    0x409da8
  40a31c:	movsd  xmm0,QWORD PTR [rip+0x5f7c]        # 0x4102a0
  40a324:	subsd  xmm0,xmm6
  40a328:	ucomisd xmm0,xmm7
  40a32c:	jbe    0x409da8
  40a332:	mov    eax,DWORD PTR [rsp+0x88]
  40a339:	or     DWORD PTR [rsp+0xa4],eax
  40a340:	jmp    0x409fa0
  40a345:	mov    r15d,DWORD PTR [rsp+0x40]
  40a34a:	mov    rcx,QWORD PTR [rsp+0xc8]
  40a352:	mov    ebp,r15d
  40a355:	sub    ebp,eax
  40a357:	mov    edx,ebp
  40a359:	call   0x40c120
  40a35e:	sub    DWORD PTR [rsp+0xac],ebp
  40a365:	mov    QWORD PTR [rsp+0xc8],rax
  40a36d:	mov    DWORD PTR [rsp+0xa8],r15d
  40a375:	jmp    0x409c8f
  40a37a:	nop    WORD PTR [rax+rax*1+0x0]
  40a380:	neg    edx
  40a382:	mov    rcx,rax
  40a385:	call   0x40b560
  40a38a:	jmp    0x409cc7
  40a38f:	nop
  40a390:	movapd xmm6,xmm7
  40a394:	xor    r12d,r12d
  40a397:	jmp    0x40a305
  40a39c:	nop    DWORD PTR [rax+0x0]
  40a3a0:	movapd xmm6,xmm11
  40a3a5:	xor    r12d,r12d
  40a3a8:	movapd xmm7,xmm11
  40a3ad:	mov    DWORD PTR [rsp+0x88],0x20
  40a3b8:	mov    DWORD PTR [rsp+0x60],0x0
  40a3c0:	xor    r14d,r14d
  40a3c3:	jmp    0x409c67
  40a3c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a3d0:	mov    edx,0x1
  40a3d5:	mov    rcx,rax
  40a3d8:	xor    r12d,r12d
  40a3db:	call   0x40b560
  40a3e0:	add    DWORD PTR [rsp+0xac],0x1
  40a3e8:	add    DWORD PTR [rsp+0x8c],0x1
  40a3f0:	jmp    0x409d40
  40a3f5:	xor    ebp,ebp
  40a3f7:	mov    rax,QWORD PTR [rsp+0xc8]
  40a3ff:	mov    DWORD PTR [rsp+0xa4],0xa3
  40a40a:	mov    DWORD PTR [rax+0x14],0x0
  40a411:	call   0x40ca68
  40a416:	mov    DWORD PTR [rax],0x22
  40a41c:	mov    rax,QWORD PTR [rsp+0x190]
  40a424:	mov    eax,DWORD PTR [rax+0x8]
  40a427:	add    eax,0x1
  40a42a:	jmp    0x409390
  40a42f:	mov    eax,DWORD PTR [rsp+0x58]
  40a433:	mov    r8,QWORD PTR [rsp+0x198]
  40a43b:	lea    rcx,[rsp+0xc0]
  40a443:	mov    rdx,QWORD PTR [rsp+0x190]
  40a44b:	lea    r9,[rsp+0xc8]
  40a453:	mov    DWORD PTR [rsp+0x20],eax
  40a457:	call   0x40ac90
  40a45c:	cmp    eax,0x6
  40a45f:	mov    DWORD PTR [rsp+0xa4],eax
  40a466:	mov    r8,QWORD PTR [rsp+0xc8]
  40a46e:	jne    0x4090d1
  40a474:	mov    QWORD PTR [rsp+0xc0],rdi
  40a47c:	mov    DWORD PTR [rsp+0x58],0x0
  40a484:	jmp    0x4090d1
  40a489:	ucomisd xmm7,xmm1
  40a48d:	jae    0x40a2e5
  40a493:	jmp    0x40a305
  40a498:	mov    eax,DWORD PTR [rsp+0xa8]
  40a49f:	mov    ebp,DWORD PTR [rsp+0x40]
  40a4a3:	sub    ebp,eax
  40a4a5:	cmp    ebp,0x0
  40a4a8:	jne    0x40a671
  40a4ae:	mov    eax,DWORD PTR [rsp+0xac]
  40a4b5:	jmp    0x409fb8
  40a4ba:	je     0x4097b8
  40a4c0:	neg    edx
  40a4c2:	mov    eax,edx
  40a4c4:	and    eax,0xf
  40a4c7:	je     0x40a4e9
  40a4c9:	mov    rcx,QWORD PTR [rip+0x6120]        # 0x4105f0
  40a4d0:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40a4d9:	cdqe   
  40a4db:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  40a4e0:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40a4e9:	and    edx,0xfffffff0
  40a4ec:	je     0x4097b8
  40a4f2:	mov    eax,edx
  40a4f4:	sar    eax,0x4
  40a4f7:	cmp    eax,0xf
  40a4fa:	jle    0x40aac8
  40a500:	mov    rdx,QWORD PTR [rip+0x60f9]        # 0x410600
  40a507:	mov    ecx,eax
  40a509:	xor    r8d,r8d
  40a50c:	movsd  xmm1,QWORD PTR [rdx+0x20]
  40a511:	mov    edx,DWORD PTR [rsp+0xb4]
  40a518:	sub    ecx,0x10
  40a51b:	mov    r9d,edx
  40a51e:	and    edx,0x800fffff
  40a524:	or     edx,0x3ff00000
  40a52a:	and    r9d,0x7ff00000
  40a531:	mov    DWORD PTR [rsp+0xb4],edx
  40a538:	shr    r9d,0x14
  40a53c:	cmp    ecx,0xf
  40a53f:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40a548:	lea    r8d,[r8+r9*1-0x3ff]
  40a550:	mulsd  xmm0,xmm1
  40a554:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40a55d:	jg     0x40a511
  40a55f:	and    eax,0xf
  40a562:	mov    edx,DWORD PTR [rsp+0xb4]
  40a569:	mov    ecx,edx
  40a56b:	and    edx,0x800fffff
  40a571:	and    ecx,0x7ff00000
  40a577:	or     edx,0x3ff00000
  40a57d:	shr    ecx,0x14
  40a580:	mov    DWORD PTR [rsp+0xb4],edx
  40a587:	test   eax,eax
  40a589:	lea    edi,[r8+rcx*1-0x3ff]
  40a591:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40a59a:	jle    0x4097c3
  40a5a0:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  40a5a9:	mov    rdx,QWORD PTR [rip+0x6050]        # 0x410600
  40a5b0:	movapd xmm0,xmm1
  40a5b4:	test   al,0x1
  40a5b6:	je     0x40a5c0
  40a5b8:	mulsd  xmm1,QWORD PTR [rdx]
  40a5bc:	movapd xmm0,xmm1
  40a5c0:	sar    eax,1
  40a5c2:	add    rdx,0x8
  40a5c6:	test   eax,eax
  40a5c8:	jg     0x40a5b4
  40a5ca:	movsd  QWORD PTR [rsp+0xb0],xmm1
  40a5d3:	jmp    0x4097c3
  40a5d8:	mov    DWORD PTR [rsp+0x44],0x0
  40a5e0:	jmp    0x4099e9
  40a5e5:	test   r14d,r14d
  40a5e8:	je     0x40a305
  40a5ee:	jmp    0x40a2db
  40a5f3:	mov    DWORD PTR [rsp+0x44],0x0
  40a5fb:	jmp    0x409b33
  40a600:	lea    rax,[rsp+0xa4]
  40a608:	lea    rcx,[rsp+0xb0]
  40a610:	mov    DWORD PTR [rsp+0x20],0x1
  40a618:	mov    QWORD PTR [rsp+0x30],rax
  40a61d:	mov    eax,DWORD PTR [rsp+0x6c]
  40a621:	mov    DWORD PTR [rsp+0x28],eax
  40a625:	jmp    0x4096a8
  40a62a:	mov    ecx,DWORD PTR [rsp+0x68]
  40a62e:	mov    edx,0x25
  40a633:	sub    edx,ebp
  40a635:	cmp    ecx,edx
  40a637:	mov    eax,ecx
  40a639:	jg     0x409779
  40a63f:	mov    rdx,QWORD PTR [rip+0x5faa]        # 0x4105f0
  40a646:	mov    eax,0xf
  40a64b:	sub    eax,ebp
  40a64d:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40a656:	movsxd rcx,eax
  40a659:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  40a65e:	mov    ecx,DWORD PTR [rsp+0x68]
  40a662:	sub    ecx,eax
  40a664:	movsxd rax,ecx
  40a667:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  40a66c:	jmp    0x409ab1
  40a671:	mov    edx,ebp
  40a673:	jle    0x40a9cf
  40a679:	mov    rcx,QWORD PTR [rsp+0xc8]
  40a681:	call   0x40c120
  40a686:	mov    QWORD PTR [rsp+0xc8],rax
  40a68e:	mov    eax,DWORD PTR [rsp+0xac]
  40a695:	sub    eax,ebp
  40a697:	xor    ebp,ebp
  40a699:	mov    DWORD PTR [rsp+0xac],eax
  40a6a0:	jmp    0x409fb8
  40a6a5:	xor    ebp,ebp
  40a6a7:	xor    r13d,r13d
  40a6aa:	jmp    0x40976a
  40a6af:	mov    r9d,0x4e1f
  40a6b5:	jmp    0x409504
  40a6ba:	lea    rbx,[rsp+0xc0]
  40a6c2:	lea    rdx,[rip+0x5a77]        # 0x410140
  40a6c9:	mov    rcx,rbx
  40a6cc:	call   0x40c7f0
  40a6d1:	test   eax,eax
  40a6d3:	je     0x409523
  40a6d9:	lea    rdx,[rip+0x5a63]        # 0x410143
  40a6e0:	mov    rcx,rbx
  40a6e3:	sub    QWORD PTR [rsp+0xc0],0x1
  40a6ec:	call   0x40c7f0
  40a6f1:	test   eax,eax
  40a6f3:	jne    0x40a6fe
  40a6f5:	add    QWORD PTR [rsp+0xc0],0x1
  40a6fe:	mov    rax,QWORD PTR [rsp+0x190]
  40a706:	mov    DWORD PTR [rsp+0xa4],0x3
  40a711:	xor    ebp,ebp
  40a713:	mov    eax,DWORD PTR [rax+0x8]
  40a716:	add    eax,0x1
  40a719:	jmp    0x409390
  40a71e:	mov    edx,DWORD PTR [rsp+0xb4]
  40a725:	mov    eax,0x15
  40a72a:	or     edx,0x100000
  40a730:	tzcnt  edx,edx
  40a734:	sub    eax,edx
  40a736:	jmp    0x40965d
  40a73b:	cmp    ebp,0x1
  40a73e:	sbb    eax,eax
  40a740:	and    eax,0x10
  40a743:	add    eax,0x11
  40a746:	mov    DWORD PTR [rsp+0xa4],eax
  40a74d:	jmp    0x409fa0
  40a752:	cmp    ebp,0x1
  40a755:	sbb    eax,eax
  40a757:	and    eax,0x10
  40a75a:	add    eax,0x11
  40a75d:	test   ebp,ebp
  40a75f:	mov    DWORD PTR [rsp+0xa4],eax
  40a766:	jne    0x409fa0
  40a76c:	cmp    DWORD PTR [rsp+0x48],0x1
  40a771:	jg     0x409fa0
  40a777:	mov    ebp,DWORD PTR [rsp+0x44]
  40a77b:	test   ebp,ebp
  40a77d:	jne    0x409fa0
  40a783:	mov    edx,DWORD PTR [rsp+0x8c]
  40a78a:	cmp    DWORD PTR [rsp+0x50],edx
  40a78e:	je     0x409fa0
  40a794:	mov    rcx,rbx
  40a797:	mov    edx,0x1
  40a79c:	call   0x40c120
  40a7a1:	mov    rdx,r13
  40a7a4:	mov    rcx,rax
  40a7a7:	mov    rbx,rax
  40a7aa:	call   0x40c240
  40a7af:	test   eax,eax
  40a7b1:	jle    0x40a498
  40a7b7:	mov    DWORD PTR [rsp+0xa4],0x11
  40a7c2:	mov    DWORD PTR [rsp+0x44],0x0
  40a7ca:	mov    eax,DWORD PTR [rsp+0x40]
  40a7ce:	mov    rcx,QWORD PTR [rsp+0xc8]
  40a7d6:	sub    DWORD PTR [rsp+0xac],eax
  40a7dd:	mov    edx,eax
  40a7df:	mov    DWORD PTR [rsp+0xa8],eax
  40a7e6:	call   0x408f30
  40a7eb:	mov    QWORD PTR [rsp+0xc8],rax
  40a7f3:	jmp    0x409fa0
  40a7f8:	mov    r10d,DWORD PTR [rsp+0x58]
  40a7fd:	test   r10d,r10d
  40a800:	jne    0x40a3f7
  40a806:	jmp    0x40a031
  40a80b:	mov    r11d,DWORD PTR [rsp+0x58]
  40a810:	test   r11d,r11d
  40a813:	je     0x40a3f7
  40a819:	jmp    0x40a031
  40a81e:	test   ebp,ebp
  40a820:	je     0x40a967
  40a826:	mov    r11d,DWORD PTR [rsp+0x44]
  40a82b:	test   r11d,r11d
  40a82e:	je     0x40aa35
  40a834:	mov    ecx,DWORD PTR [rsp+0xa8]
  40a83b:	mov    r8,QWORD PTR [rsp+0xc8]
  40a843:	mov    edx,ecx
  40a845:	lea    rax,[r8+0x18]
  40a849:	sar    edx,0x5
  40a84c:	movsxd rdx,edx
  40a84f:	lea    rdx,[rax+rdx*4]
  40a853:	cmp    rax,rdx
  40a856:	jae    0x40a883
  40a858:	cmp    DWORD PTR [r8+0x18],0xffffffff
  40a85d:	lea    rax,[r8+0x1c]
  40a861:	je     0x40a87e
  40a863:	jmp    0x40aa35
  40a868:	nop    DWORD PTR [rax+rax*1+0x0]
  40a870:	add    rax,0x4
  40a874:	cmp    DWORD PTR [rax-0x4],0xffffffff
  40a878:	jne    0x40aa35
  40a87e:	cmp    rdx,rax
  40a881:	ja     0x40a870
  40a883:	and    ecx,0x1f
  40a886:	je     0x40a89a
  40a888:	or     edx,0xffffffff
  40a88b:	shl    edx,cl
  40a88d:	or     edx,DWORD PTR [rax]
  40a88f:	mov    eax,edx
  40a891:	add    eax,0x1
  40a894:	jne    0x40aa35
  40a89a:	mov    eax,DWORD PTR [rsp+0x40]
  40a89e:	mov    edx,DWORD PTR [rsp+0x50]
  40a8a2:	mov    DWORD PTR [r8+0x14],0x1
  40a8aa:	mov    DWORD PTR [r8+0x18],0x1
  40a8b2:	mov    DWORD PTR [rsp+0xa8],0x1
  40a8bd:	mov    DWORD PTR [rsp+0xa4],0x21
  40a8c8:	lea    eax,[rax+rdx*1-0x1]
  40a8cc:	mov    DWORD PTR [rsp+0xac],eax
  40a8d3:	mov    eax,0x1
  40a8d8:	jmp    0x40a49f
  40a8dd:	add    r13d,eax
  40a8e0:	cmp    eax,0x1
  40a8e3:	je     0x40a90c
  40a8e5:	add    ecx,ebp
  40a8e7:	mov    r10d,ecx
  40a8ea:	jmp    0x40a8f5
  40a8ec:	lea    esi,[rsi+rsi*4]
  40a8ef:	add    esi,esi
  40a8f1:	cmp    ebp,ecx
  40a8f3:	je     0x40a90f
  40a8f5:	add    ebp,0x1
  40a8f8:	lea    eax,[rbp-0x1]
  40a8fb:	cmp    eax,0x8
  40a8fe:	jle    0x40a8ec
  40a900:	cmp    ebp,0x10
  40a903:	jg     0x40a8f1
  40a905:	lea    edx,[rdx+rdx*4]
  40a908:	add    edx,edx
  40a90a:	jmp    0x40a8f1
  40a90c:	mov    r10d,ebp
  40a90f:	cmp    r10d,0x8
  40a913:	lea    ebp,[r10+0x1]
  40a917:	jg     0x40a9eb
  40a91d:	mov    r8,QWORD PTR [rsp+0xc0]
  40a925:	jmp    0x409a4e
  40a92a:	mov    r9,QWORD PTR [rsp+0xc8]
  40a932:	mov    DWORD PTR [rsp+0x44],0x1
  40a93a:	mov    eax,DWORD PTR [rsp+0x50]
  40a93e:	mov    DWORD PTR [r9+0x14],0x0
  40a946:	mov    DWORD PTR [rsp+0xa4],0x50
  40a951:	mov    DWORD PTR [rsp+0xac],eax
  40a958:	jmp    0x409fa0
  40a95d:	mov    eax,0x1
  40a962:	jmp    0x40970d
  40a967:	cmp    DWORD PTR [rsp+0x48],0x1
  40a96c:	je     0x40aa4c
  40a972:	mov    DWORD PTR [rsp+0xa4],0x21
  40a97d:	mov    r10d,DWORD PTR [rsp+0x44]
  40a982:	test   r10d,r10d
  40a985:	jne    0x40a995
  40a987:	mov    edx,DWORD PTR [rsp+0x40]
  40a98b:	cmp    DWORD PTR [rsp+0x48],edx
  40a98f:	jl     0x40a498
  40a995:	mov    r9,QWORD PTR [rsp+0xc8]
  40a99d:	mov    eax,DWORD PTR [r9+0x18]
  40a9a1:	test   al,0x1
  40a9a3:	je     0x409fa0
  40a9a9:	test   ebp,ebp
  40a9ab:	jne    0x40aad0
  40a9b1:	cmp    DWORD PTR [rsp+0x48],0x1
  40a9b6:	je     0x40a93a
  40a9b8:	sub    eax,0x1
  40a9bb:	mov    DWORD PTR [rsp+0xa4],0x11
  40a9c6:	mov    DWORD PTR [r9+0x18],eax
  40a9ca:	jmp    0x409fa0
  40a9cf:	mov    rcx,QWORD PTR [rsp+0xc8]
  40a9d7:	neg    edx
  40a9d9:	call   0x40b560
  40a9de:	jmp    0x40a68e
  40a9e3:	xor    r8d,r8d
  40a9e6:	jmp    0x40997f
  40a9eb:	cmp    ebp,0x10
  40a9ee:	jg     0x40a9f7
  40a9f0:	lea    eax,[rdx+rdx*4]
  40a9f3:	lea    edx,[r8+rax*2]
  40a9f7:	mov    r8,QWORD PTR [rsp+0xc0]
  40a9ff:	xor    ecx,ecx
  40aa01:	jmp    0x40974f
  40aa06:	cmp    edx,0xffffffff
  40aa09:	jl     0x4098c4
  40aa0f:	mov    rax,QWORD PTR [rsp+0xc8]
  40aa17:	mov    DWORD PTR [rsp+0xa8],0x1
  40aa22:	mov    DWORD PTR [rax+0x14],0x1
  40aa29:	mov    DWORD PTR [rax+0x18],0x1
  40aa30:	jmp    0x409896
  40aa35:	mov    DWORD PTR [rsp+0xa4],0x11
  40aa40:	jmp    0x40a97d
  40aa45:	xor    ecx,ecx
  40aa47:	jmp    0x409a28
  40aa4c:	mov    edx,DWORD PTR [rsp+0x8c]
  40aa53:	cmp    DWORD PTR [rsp+0x50],edx
  40aa57:	jne    0x40ab1d
  40aa5d:	mov    rax,QWORD PTR [rsp+0xc8]
  40aa65:	mov    DWORD PTR [rsp+0xa4],0x21
  40aa70:	cmp    DWORD PTR [rax+0x14],0x1
  40aa74:	jne    0x409fa0
  40aa7a:	cmp    DWORD PTR [rax+0x18],0x1
  40aa7e:	mov    eax,DWORD PTR [rsp+0x48]
  40aa82:	cmovne eax,DWORD PTR [rsp+0x84]
  40aa8a:	mov    DWORD PTR [rsp+0x84],eax
  40aa91:	jmp    0x409fa0
  40aa96:	mov    r8,QWORD PTR [rsp+0x1a0]
  40aa9e:	mov    rdx,QWORD PTR [rsp+0x190]
  40aaa6:	mov    rcx,rbx
  40aaa9:	call   0x40b730
  40aaae:	mov    DWORD PTR [rsp+0xa4],eax
  40aab5:	mov    rax,QWORD PTR [rsp+0x190]
  40aabd:	mov    eax,DWORD PTR [rax+0x8]
  40aac0:	add    eax,0x1
  40aac3:	jmp    0x409390
  40aac8:	xor    r8d,r8d
  40aacb:	jmp    0x40a562
  40aad0:	mov    rcx,r9
  40aad3:	call   0x408a80
  40aad8:	mov    edx,DWORD PTR [rax+0x14]
  40aadb:	mov    ecx,DWORD PTR [rsp+0xa8]
  40aae2:	mov    QWORD PTR [rsp+0xc8],rax
  40aaea:	sub    edx,0x1
  40aaed:	movsxd rdx,edx
  40aaf0:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  40aaf5:	mov    eax,ecx
  40aaf7:	neg    eax
  40aaf9:	and    eax,0x1f
  40aafc:	xor    edx,0x1f
  40aaff:	cmp    edx,eax
  40ab01:	je     0x40ab0d
  40ab03:	add    ecx,0x1
  40ab06:	mov    DWORD PTR [rsp+0xa8],ecx
  40ab0d:	mov    DWORD PTR [rsp+0xa4],0x21
  40ab18:	jmp    0x409fa0
  40ab1d:	mov    DWORD PTR [rsp+0xa4],0x1
  40ab28:	jmp    0x40a7ca
  40ab2d:	nop
  40ab2e:	nop
  40ab2f:	nop
  40ab30:	push   r13
  40ab32:	push   r12
  40ab34:	push   rbp
  40ab35:	push   rdi
  40ab36:	push   rsi
  40ab37:	push   rbx
  40ab38:	sub    rsp,0x28
  40ab3c:	mov    eax,DWORD PTR [rdx+0x14]
  40ab3f:	cmp    DWORD PTR [rcx+0x14],eax
  40ab42:	mov    rsi,rcx
  40ab45:	mov    rdi,rdx
  40ab48:	jge    0x40ab50
  40ab4a:	mov    rsi,rdx
  40ab4d:	mov    rdi,rcx
  40ab50:	mov    ecx,DWORD PTR [rsi+0x8]
  40ab53:	xor    r12d,r12d
  40ab56:	call   0x40bc10
  40ab5b:	movsxd rcx,DWORD PTR [rsi+0x14]
  40ab5f:	mov    rbx,rax
  40ab62:	lea    r11,[rdi+0x18]
  40ab66:	lea    r8,[rbx+0x18]
  40ab6a:	mov    DWORD PTR [rax+0x14],ecx
  40ab6d:	movsxd rdx,DWORD PTR [rdi+0x14]
  40ab71:	lea    rax,[rsi+0x18]
  40ab75:	lea    rdi,[r8+rdx*4]
  40ab79:	mov    rbp,rdx
  40ab7c:	nop    DWORD PTR [rax+0x0]
  40ab80:	mov    r10d,DWORD PTR [rax]
  40ab83:	mov    r9d,DWORD PTR [r11]
  40ab86:	add    r8,0x4
  40ab8a:	add    rax,0x4
  40ab8e:	add    r11,0x4
  40ab92:	movzx  r13d,r9w
  40ab96:	movzx  edx,r10w
  40ab9a:	shr    r9d,0x10
  40ab9e:	add    edx,r13d
  40aba1:	shr    r10d,0x10
  40aba5:	add    edx,r12d
  40aba8:	add    r10d,r9d
  40abab:	mov    r9d,edx
  40abae:	mov    WORD PTR [r8-0x4],dx
  40abb3:	and    r9d,0x10000
  40abba:	shr    r9d,0x10
  40abbe:	add    r9d,r10d
  40abc1:	mov    r12d,r9d
  40abc4:	mov    WORD PTR [r8-0x2],r9w
  40abc9:	and    r12d,0x10000
  40abd0:	shr    r12d,0x10
  40abd4:	cmp    rdi,r8
  40abd7:	ja     0x40ab80
  40abd9:	mov    edx,DWORD PTR [rsi+0x14]
  40abdc:	sub    edx,ebp
  40abde:	movsxd rdx,edx
  40abe1:	lea    r11,[rdi+rdx*4]
  40abe5:	cmp    r11,r8
  40abe8:	jbe    0x40ac2b
  40abea:	nop    WORD PTR [rax+rax*1+0x0]
  40abf0:	mov    r9d,DWORD PTR [rax]
  40abf3:	add    r8,0x4
  40abf7:	add    rax,0x4
  40abfb:	movzx  r10d,r9w
  40abff:	shr    r9d,0x10
  40ac03:	add    r10d,r12d
  40ac06:	mov    edx,r10d
  40ac09:	mov    WORD PTR [r8-0x4],r10w
  40ac0e:	and    edx,0x10000
  40ac14:	shr    edx,0x10
  40ac17:	add    edx,r9d
  40ac1a:	mov    WORD PTR [r8-0x2],dx
  40ac1f:	mov    r12d,edx
  40ac22:	shr    r12d,0x10
  40ac26:	cmp    r11,r8
  40ac29:	ja     0x40abf0
  40ac2b:	test   r12d,r12d
  40ac2e:	je     0x40ac43
  40ac30:	cmp    ecx,DWORD PTR [rbx+0xc]
  40ac33:	je     0x40ac53
  40ac35:	lea    eax,[rcx+0x1]
  40ac38:	mov    DWORD PTR [rbx+0x14],eax
  40ac3b:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  40ac43:	mov    rax,rbx
  40ac46:	add    rsp,0x28
  40ac4a:	pop    rbx
  40ac4b:	pop    rsi
  40ac4c:	pop    rdi
  40ac4d:	pop    rbp
  40ac4e:	pop    r12
  40ac50:	pop    r13
  40ac52:	ret    
  40ac53:	mov    eax,DWORD PTR [rbx+0x8]
  40ac56:	lea    ecx,[rax+0x1]
  40ac59:	call   0x40bc10
  40ac5e:	mov    rsi,rax
  40ac61:	lea    rcx,[rax+0x10]
  40ac65:	movsxd rax,DWORD PTR [rbx+0x14]
  40ac69:	lea    rdx,[rbx+0x10]
  40ac6d:	lea    r8,[rax*4+0x8]
  40ac75:	call   0x40c9b8
  40ac7a:	mov    rcx,rbx
  40ac7d:	mov    rbx,rsi
  40ac80:	call   0x40bd20
  40ac85:	movsxd rcx,DWORD PTR [rsi+0x14]
  40ac89:	jmp    0x40ac35
  40ac8b:	nop
  40ac8c:	nop
  40ac8d:	nop
  40ac8e:	nop
  40ac8f:	nop
  40ac90:	push   r15
  40ac92:	push   r14
  40ac94:	push   r13
  40ac96:	push   r12
  40ac98:	push   rbp
  40ac99:	push   rdi
  40ac9a:	push   rsi
  40ac9b:	push   rbx
  40ac9c:	sub    rsp,0x28
  40aca0:	mov    r14,rcx
  40aca3:	mov    r13,rdx
  40aca6:	mov    QWORD PTR [rsp+0x80],r8
  40acae:	mov    QWORD PTR [rsp+0x88],r9
  40acb6:	call   0x40c9c8
  40acbb:	mov    rdi,QWORD PTR [rip+0x586e]        # 0x410530
  40acc2:	mov    rsi,QWORD PTR [rax]
  40acc5:	cmp    BYTE PTR [rdi+0x30],0x0
  40acc9:	je     0x40b0f0
  40accf:	mov    rax,QWORD PTR [rsp+0x88]
  40acd7:	xor    r8d,r8d
  40acda:	mov    QWORD PTR [rax],0x0
  40ace1:	mov    rbx,QWORD PTR [r14]
  40ace4:	movzx  edx,BYTE PTR [rbx+0x2]
  40ace8:	lea    rax,[rbx+0x3]
  40acec:	add    rbx,0x2
  40acf0:	cmp    dl,0x30
  40acf3:	jne    0x40ad09
  40acf5:	mov    rbx,rax
  40acf8:	add    rax,0x1
  40acfc:	movzx  edx,BYTE PTR [rax-0x1]
  40ad00:	add    r8d,0x1
  40ad04:	cmp    dl,0x30
  40ad07:	je     0x40acf5
  40ad09:	cmp    BYTE PTR [rdi+rdx*1],0x0
  40ad0d:	jne    0x40ae60
  40ad13:	movzx  r9d,BYTE PTR [rsi]
  40ad17:	test   r9b,r9b
  40ad1a:	je     0x40b35a
  40ad20:	movzx  edx,BYTE PTR [rbx]
  40ad23:	cmp    r9b,dl
  40ad26:	jne    0x40b103
  40ad2c:	mov    eax,0x1
  40ad31:	jmp    0x40ad41
  40ad33:	add    rax,0x1
  40ad37:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  40ad3b:	jne    0x40b100
  40ad41:	movzx  edx,BYTE PTR [rsi+rax*1]
  40ad45:	test   dl,dl
  40ad47:	jne    0x40ad33
  40ad49:	add    rax,rbx
  40ad4c:	movzx  ecx,BYTE PTR [rax]
  40ad4f:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  40ad54:	mov    rdx,rcx
  40ad57:	test   r10b,r10b
  40ad5a:	jne    0x40b1e0
  40ad60:	cmp    dl,0x50
  40ad63:	je     0x40b010
  40ad69:	cmp    dl,0x70
  40ad6c:	je     0x40b010
  40ad72:	mov    rbp,rax
  40ad75:	mov    r11d,0x1
  40ad7b:	xor    r12d,r12d
  40ad7e:	xor    r15d,r15d
  40ad81:	xor    r10d,r10d
  40ad84:	test   r8d,r8d
  40ad87:	jne    0x40ad8d
  40ad89:	lea    rax,[rbx-0x1]
  40ad8d:	test   r11d,r11d
  40ad90:	mov    QWORD PTR [r14],rax
  40ad93:	jne    0x40b0c0
  40ad99:	test   r10d,r10d
  40ad9c:	je     0x40aed0
  40ada2:	test   r15d,r15d
  40ada5:	mov    eax,DWORD PTR [r13+0xc]
  40ada9:	jne    0x40b150
  40adaf:	cmp    eax,0x2
  40adb2:	je     0x40b3f8
  40adb8:	cmp    eax,0x3
  40adbb:	je     0x40b3e2
  40adc1:	cmp    eax,0x1
  40adc4:	je     0x40b1c8
  40adca:	mov    esi,DWORD PTR [r13+0x0]
  40adce:	mov    ebx,esi
  40add0:	and    esi,0x1f
  40add3:	sar    ebx,0x5
  40add6:	cmp    esi,0x1
  40add9:	mov    edi,ebx
  40addb:	sbb    edi,0xffffffff
  40adde:	xor    ecx,ecx
  40ade0:	mov    eax,edi
  40ade2:	sar    eax,1
  40ade4:	je     0x40adf7
  40ade6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40adf0:	add    ecx,0x1
  40adf3:	sar    eax,1
  40adf5:	jne    0x40adf0
  40adf7:	call   0x40bc10
  40adfc:	mov    rcx,QWORD PTR [rsp+0x88]
  40ae04:	test   ebx,ebx
  40ae06:	mov    QWORD PTR [rcx],rax
  40ae09:	mov    DWORD PTR [rax+0x14],edi
  40ae0c:	jle    0x40b518
  40ae12:	lea    ecx,[rbx-0x1]
  40ae15:	lea    rdx,[rax+0x18]
  40ae19:	lea    rcx,[rax+rcx*4+0x1c]
  40ae1e:	xchg   ax,ax
  40ae20:	mov    DWORD PTR [rdx],0xffffffff
  40ae26:	add    rdx,0x4
  40ae2a:	cmp    rdx,rcx
  40ae2d:	jne    0x40ae20
  40ae2f:	mov    edx,ebx
  40ae31:	cmp    edi,ebx
  40ae33:	jle    0x40ae48
  40ae35:	movsxd r8,edx
  40ae38:	mov    edx,0x20
  40ae3d:	mov    ecx,edx
  40ae3f:	sub    ecx,esi
  40ae41:	sar    edx,cl
  40ae43:	mov    DWORD PTR [rax+r8*4+0x18],edx
  40ae48:	mov    eax,DWORD PTR [r13+0x4]
  40ae4c:	mov    rdi,QWORD PTR [rsp+0x80]
  40ae54:	mov    DWORD PTR [rdi],eax
  40ae56:	mov    eax,0x11
  40ae5b:	jmp    0x40b0c2
  40ae60:	movzx  eax,BYTE PTR [rbx]
  40ae63:	movzx  r9d,BYTE PTR [rsi]
  40ae67:	add    r8d,0x1
  40ae6b:	xor    r11d,r11d
  40ae6e:	xor    r12d,r12d
  40ae71:	movzx  r10d,BYTE PTR [rdi+rax*1]
  40ae76:	mov    rdx,rax
  40ae79:	test   r10b,r10b
  40ae7c:	mov    rax,rbx
  40ae7f:	je     0x40ae91
  40ae81:	add    rax,0x1
  40ae85:	movzx  ecx,BYTE PTR [rax]
  40ae88:	cmp    BYTE PTR [rdi+rcx*1],0x0
  40ae8c:	mov    rdx,rcx
  40ae8f:	jne    0x40ae81
  40ae91:	cmp    dl,r9b
  40ae94:	je     0x40b110
  40ae9a:	test   r12,r12
  40ae9d:	movzx  edx,BYTE PTR [rax]
  40aea0:	je     0x40aea9
  40aea2:	sub    r12d,eax
  40aea5:	shl    r12d,0x2
  40aea9:	cmp    dl,0x50
  40aeac:	je     0x40b019
  40aeb2:	cmp    dl,0x70
  40aeb5:	je     0x40b019
  40aebb:	test   r11d,r11d
  40aebe:	mov    QWORD PTR [r14],rax
  40aec1:	mov    rbp,rax
  40aec4:	jne    0x40b0c0
  40aeca:	nop    WORD PTR [rax+rax*1+0x0]
  40aed0:	mov    rax,rbp
  40aed3:	xor    ecx,ecx
  40aed5:	sub    rax,rbx
  40aed8:	sub    eax,0x1
  40aedb:	cmp    eax,0x7
  40aede:	jle    0x40aeea
  40aee0:	sar    eax,1
  40aee2:	add    ecx,0x1
  40aee5:	cmp    eax,0x7
  40aee8:	jg     0x40aee0
  40aeea:	call   0x40bc10
  40aeef:	cmp    BYTE PTR [rsi+0x1],0x0
  40aef3:	mov    r14,rax
  40aef6:	lea    r15,[rax+0x18]
  40aefa:	je     0x40b40e
  40af00:	mov    edx,0x1
  40af05:	jmp    0x40af13
  40af07:	nop    WORD PTR [rax+rax*1+0x0]
  40af10:	mov    rdx,rax
  40af13:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  40af18:	lea    rax,[rdx+0x1]
  40af1c:	jne    0x40af10
  40af1e:	cmp    rbx,rbp
  40af21:	jae    0x40b415
  40af27:	add    rsi,rdx
  40af2a:	mov    rax,r15
  40af2d:	xor    r9d,r9d
  40af30:	xor    r8d,r8d
  40af33:	jmp    0x40af61
  40af35:	cmp    r8d,0x20
  40af39:	je     0x40b0d3
  40af3f:	movzx  r10d,cl
  40af43:	mov    ecx,r8d
  40af46:	add    r8d,0x4
  40af4a:	movzx  r10d,BYTE PTR [rdi+r10*1]
  40af4f:	mov    rbp,r11
  40af52:	and    r10d,0xf
  40af56:	shl    r10d,cl
  40af59:	or     r9d,r10d
  40af5c:	cmp    rbx,rbp
  40af5f:	jae    0x40af78
  40af61:	movzx  ecx,BYTE PTR [rbp-0x1]
  40af65:	lea    r11,[rbp-0x1]
  40af69:	cmp    cl,BYTE PTR [rsi]
  40af6b:	jne    0x40af35
  40af6d:	sub    r11,rdx
  40af70:	mov    rbp,r11
  40af73:	cmp    rbx,rbp
  40af76:	jb     0x40af61
  40af78:	bsr    edx,r9d
  40af7c:	xor    edx,0x1f
  40af7f:	mov    DWORD PTR [rax],r9d
  40af82:	add    rax,0x4
  40af86:	mov    esi,DWORD PTR [r13+0x0]
  40af8a:	sub    rax,r15
  40af8d:	sar    rax,0x2
  40af91:	mov    DWORD PTR [r14+0x14],eax
  40af95:	shl    eax,0x5
  40af98:	sub    eax,edx
  40af9a:	cmp    eax,esi
  40af9c:	jg     0x40b248
  40afa2:	mov    edi,0x0
  40afa7:	jl     0x40b21e
  40afad:	cmp    r12d,DWORD PTR [r13+0x8]
  40afb1:	jg     0x40b1c0
  40afb7:	mov    eax,DWORD PTR [r13+0x4]
  40afbb:	cmp    r12d,eax
  40afbe:	jge    0x40b2a9
  40afc4:	mov    ebx,eax
  40afc6:	sub    ebx,r12d
  40afc9:	cmp    esi,ebx
  40afcb:	jg     0x40b307
  40afd1:	mov    edx,DWORD PTR [r13+0xc]
  40afd5:	cmp    edx,0x2
  40afd8:	je     0x40b4e2
  40afde:	cmp    edx,0x3
  40afe1:	je     0x40b4bf
  40afe7:	cmp    edx,0x1
  40afea:	je     0x40b4f2
  40aff0:	mov    rcx,r14
  40aff3:	call   0x40bd20
  40aff8:	call   0x40ca68
  40affd:	mov    DWORD PTR [rax],0x22
  40b003:	mov    eax,0x50
  40b008:	jmp    0x40b0c2
  40b00d:	nop    DWORD PTR [rax]
  40b010:	xor    r12d,r12d
  40b013:	mov    r11d,0x1
  40b019:	movzx  edx,BYTE PTR [rax+0x1]
  40b01d:	cmp    dl,0x2b
  40b020:	je     0x40b240
  40b026:	cmp    dl,0x2d
  40b029:	je     0x40b121
  40b02f:	movzx  edx,BYTE PTR [rdi+rdx*1]
  40b033:	xor    r15d,r15d
  40b036:	lea    r9,[rax+0x1]
  40b03a:	lea    ecx,[rdx-0x1]
  40b03d:	cmp    cl,0x18
  40b040:	ja     0x40b13f
  40b046:	lea    rcx,[r9+0x1]
  40b04a:	movzx  r9d,BYTE PTR [r9+0x1]
  40b04f:	sub    edx,0x10
  40b052:	xor    r10d,r10d
  40b055:	movzx  ebp,BYTE PTR [rdi+r9*1]
  40b05a:	mov    r9d,ebp
  40b05d:	sub    r9d,0x1
  40b061:	cmp    r9b,0x18
  40b065:	ja     0x40b0a1
  40b067:	nop    WORD PTR [rax+rax*1+0x0]
  40b070:	test   edx,0xf8000000
  40b076:	mov    r9d,0x1
  40b07c:	lea    edx,[rdx+rdx*4]
  40b07f:	cmovne r10d,r9d
  40b083:	add    rcx,0x1
  40b087:	movzx  r9d,BYTE PTR [rcx]
  40b08b:	lea    edx,[rbp+rdx*2-0x10]
  40b08f:	movzx  ebp,BYTE PTR [rdi+r9*1]
  40b094:	mov    r9d,ebp
  40b097:	sub    r9d,0x1
  40b09b:	cmp    r9b,0x18
  40b09f:	jbe    0x40b070
  40b0a1:	mov    r9d,r15d
  40b0a4:	mov    rbp,rax
  40b0a7:	mov    rax,rcx
  40b0aa:	neg    r9d
  40b0ad:	xor    edx,r9d
  40b0b0:	add    edx,r15d
  40b0b3:	add    r12d,edx
  40b0b6:	jmp    0x40ad84
  40b0bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b0c0:	xor    eax,eax
  40b0c2:	add    rsp,0x28
  40b0c6:	pop    rbx
  40b0c7:	pop    rsi
  40b0c8:	pop    rdi
  40b0c9:	pop    rbp
  40b0ca:	pop    r12
  40b0cc:	pop    r13
  40b0ce:	pop    r14
  40b0d0:	pop    r15
  40b0d2:	ret    
  40b0d3:	mov    DWORD PTR [rax],r9d
  40b0d6:	mov    r8d,0x4
  40b0dc:	movzx  r10d,BYTE PTR [rbp-0x1]
  40b0e1:	add    rax,0x4
  40b0e5:	xor    r9d,r9d
  40b0e8:	xor    ecx,ecx
  40b0ea:	jmp    0x40af4a
  40b0ef:	nop
  40b0f0:	call   0x40b6a0
  40b0f5:	jmp    0x40accf
  40b0fa:	nop    WORD PTR [rax+rax*1+0x0]
  40b100:	mov    edx,r9d
  40b103:	mov    rax,rbx
  40b106:	jmp    0x40ad60
  40b10b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b110:	test   r12,r12
  40b113:	je     0x40b425
  40b119:	movzx  edx,BYTE PTR [rax]
  40b11c:	jmp    0x40aea2
  40b121:	mov    r15d,0x1
  40b127:	movzx  edx,BYTE PTR [rax+0x2]
  40b12b:	lea    r9,[rax+0x2]
  40b12f:	movzx  edx,BYTE PTR [rdi+rdx*1]
  40b133:	lea    ecx,[rdx-0x1]
  40b136:	cmp    cl,0x18
  40b139:	jbe    0x40b046
  40b13f:	mov    rbp,rax
  40b142:	xor    r10d,r10d
  40b145:	jmp    0x40ad84
  40b14a:	nop    WORD PTR [rax+rax*1+0x0]
  40b150:	cmp    eax,0x2
  40b153:	je     0x40b2f1
  40b159:	cmp    eax,0x3
  40b15c:	jne    0x40aff8
  40b162:	mov    r10d,DWORD PTR [rsp+0x90]
  40b16a:	test   r10d,r10d
  40b16d:	je     0x40aff8
  40b173:	xor    ecx,ecx
  40b175:	call   0x40bc10
  40b17a:	mov    r14,rax
  40b17d:	mov    DWORD PTR [rax+0x14],0x1
  40b184:	mov    DWORD PTR [rax+0x18],0x1
  40b18b:	mov    eax,DWORD PTR [r13+0x4]
  40b18f:	mov    rdi,QWORD PTR [rsp+0x88]
  40b197:	mov    QWORD PTR [rdi],r14
  40b19a:	mov    rdi,QWORD PTR [rsp+0x80]
  40b1a2:	mov    DWORD PTR [rdi],eax
  40b1a4:	call   0x40ca68
  40b1a9:	mov    DWORD PTR [rax],0x22
  40b1af:	mov    eax,0x62
  40b1b4:	jmp    0x40b0c2
  40b1b9:	nop    DWORD PTR [rax+0x0]
  40b1c0:	mov    rcx,r14
  40b1c3:	call   0x40bd20
  40b1c8:	call   0x40ca68
  40b1cd:	mov    DWORD PTR [rax],0x22
  40b1d3:	mov    eax,0xa3
  40b1d8:	jmp    0x40b0c2
  40b1dd:	nop    DWORD PTR [rax]
  40b1e0:	cmp    cl,0x30
  40b1e3:	mov    rbx,rax
  40b1e6:	jne    0x40b206
  40b1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1f0:	add    rbx,0x1
  40b1f4:	movzx  ecx,BYTE PTR [rbx]
  40b1f7:	cmp    cl,0x30
  40b1fa:	je     0x40b1f0
  40b1fc:	movzx  edx,cl
  40b1ff:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  40b204:	mov    edx,ecx
  40b206:	xor    r11d,r11d
  40b209:	test   r10b,r10b
  40b20c:	mov    r12,rax
  40b20f:	sete   r11b
  40b213:	mov    r8d,0x1
  40b219:	jmp    0x40ae79
  40b21e:	mov    ebx,esi
  40b220:	mov    rcx,r14
  40b223:	sub    ebx,eax
  40b225:	mov    edx,ebx
  40b227:	sub    r12d,ebx
  40b22a:	call   0x40c120
  40b22f:	mov    r14,rax
  40b232:	lea    r15,[rax+0x18]
  40b236:	jmp    0x40afad
  40b23b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b240:	xor    r15d,r15d
  40b243:	jmp    0x40b127
  40b248:	mov    ebx,eax
  40b24a:	mov    rcx,r14
  40b24d:	xor    edi,edi
  40b24f:	sub    ebx,esi
  40b251:	mov    edx,ebx
  40b253:	call   0x40c8b0
  40b258:	test   eax,eax
  40b25a:	je     0x40b297
  40b25c:	lea    ecx,[rbx-0x1]
  40b25f:	mov    r8d,0x1
  40b265:	mov    dil,0x1
  40b268:	mov    eax,ecx
  40b26a:	shl    r8d,cl
  40b26d:	sar    eax,0x5
  40b270:	cdqe   
  40b272:	test   DWORD PTR [r15+rax*4],r8d
  40b276:	je     0x40b297
  40b278:	test   ecx,ecx
  40b27a:	jle    0x40b48f
  40b280:	mov    edx,ecx
  40b282:	mov    rcx,r14
  40b285:	call   0x40c8b0
  40b28a:	test   eax,eax
  40b28c:	je     0x40b48f
  40b292:	mov    edi,0x3
  40b297:	mov    edx,ebx
  40b299:	mov    rcx,r14
  40b29c:	add    r12d,ebx
  40b29f:	call   0x40b560
  40b2a4:	jmp    0x40afad
  40b2a9:	mov    ebx,0x1
  40b2ae:	test   edi,edi
  40b2b0:	je     0x40b2d4
  40b2b2:	mov    eax,DWORD PTR [r13+0xc]
  40b2b6:	cmp    eax,0x2
  40b2b9:	je     0x40b361
  40b2bf:	cmp    eax,0x3
  40b2c2:	je     0x40b374
  40b2c8:	cmp    eax,0x1
  40b2cb:	je     0x40b499
  40b2d1:	or     ebx,0x10
  40b2d4:	mov    rax,QWORD PTR [rsp+0x88]
  40b2dc:	mov    QWORD PTR [rax],r14
  40b2df:	mov    rax,QWORD PTR [rsp+0x80]
  40b2e7:	mov    DWORD PTR [rax],r12d
  40b2ea:	mov    eax,ebx
  40b2ec:	jmp    0x40b0c2
  40b2f1:	mov    r11d,DWORD PTR [rsp+0x90]
  40b2f9:	test   r11d,r11d
  40b2fc:	jne    0x40aff8
  40b302:	jmp    0x40b173
  40b307:	test   edi,edi
  40b309:	lea    ebp,[rbx-0x1]
  40b30c:	jne    0x40b485
  40b312:	test   ebp,ebp
  40b314:	jle    0x40b322
  40b316:	mov    edx,ebp
  40b318:	mov    rcx,r14
  40b31b:	call   0x40c8b0
  40b320:	mov    edi,eax
  40b322:	mov    eax,ebp
  40b324:	mov    ecx,ebp
  40b326:	mov    edx,edi
  40b328:	sar    eax,0x5
  40b32b:	mov    r8d,0x1
  40b331:	or     edx,0x2
  40b334:	cdqe   
  40b336:	shl    r8d,cl
  40b339:	mov    rcx,r14
  40b33c:	test   DWORD PTR [r15+rax*4],r8d
  40b340:	cmovne edi,edx
  40b343:	mov    edx,ebx
  40b345:	sub    esi,ebx
  40b347:	call   0x40b560
  40b34c:	mov    ebx,0x2
  40b351:	mov    r12d,DWORD PTR [r13+0x4]
  40b355:	jmp    0x40b2ae
  40b35a:	xor    eax,eax
  40b35c:	jmp    0x40ad49
  40b361:	mov    eax,0x1
  40b366:	sub    eax,DWORD PTR [rsp+0x90]
  40b36d:	mov    DWORD PTR [rsp+0x90],eax
  40b374:	mov    eax,DWORD PTR [rsp+0x90]
  40b37b:	test   eax,eax
  40b37d:	je     0x40b2d1
  40b383:	mov    rcx,r14
  40b386:	movsxd rdi,DWORD PTR [r14+0x14]
  40b38a:	call   0x408a80
  40b38f:	cmp    ebx,0x2
  40b392:	mov    r14,rax
  40b395:	lea    r8,[rax+0x18]
  40b399:	je     0x40b51f
  40b39f:	cmp    edi,DWORD PTR [rax+0x14]
  40b3a2:	jl     0x40b3bd
  40b3a4:	and    esi,0x1f
  40b3a7:	je     0x40b3d8
  40b3a9:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  40b3af:	mov    edx,0x20
  40b3b4:	sub    edx,esi
  40b3b6:	xor    eax,0x1f
  40b3b9:	cmp    edx,eax
  40b3bb:	jle    0x40b3d8
  40b3bd:	mov    edx,0x1
  40b3c2:	mov    rcx,r14
  40b3c5:	add    r12d,0x1
  40b3c9:	call   0x40b560
  40b3ce:	cmp    r12d,DWORD PTR [r13+0x8]
  40b3d2:	jg     0x40b1c0
  40b3d8:	mov    ebx,0x21
  40b3dd:	jmp    0x40b2d4
  40b3e2:	mov    r8d,DWORD PTR [rsp+0x90]
  40b3ea:	test   r8d,r8d
  40b3ed:	jne    0x40b1c8
  40b3f3:	jmp    0x40adca
  40b3f8:	mov    r9d,DWORD PTR [rsp+0x90]
  40b400:	test   r9d,r9d
  40b403:	je     0x40b1c8
  40b409:	jmp    0x40adca
  40b40e:	xor    edx,edx
  40b410:	jmp    0x40af1e
  40b415:	mov    rax,r15
  40b418:	mov    edx,0x20
  40b41d:	xor    r9d,r9d
  40b420:	jmp    0x40af7f
  40b425:	movzx  edx,BYTE PTR [rsi+0x1]
  40b429:	test   dl,dl
  40b42b:	je     0x40b554
  40b431:	cmp    dl,BYTE PTR [rax+0x1]
  40b434:	jne    0x40b4b4
  40b436:	mov    r12d,0x2
  40b43c:	jmp    0x40b44b
  40b43e:	xchg   ax,ax
  40b440:	add    r12,0x1
  40b444:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  40b449:	jne    0x40b4b4
  40b44b:	movzx  edx,BYTE PTR [rsi+r12*1]
  40b450:	test   dl,dl
  40b452:	jne    0x40b440
  40b454:	add    r12,rax
  40b457:	movzx  eax,BYTE PTR [r12]
  40b45c:	cmp    BYTE PTR [rdi+rax*1],0x0
  40b460:	mov    rdx,rax
  40b463:	mov    rax,r12
  40b466:	je     0x40aea2
  40b46c:	nop    DWORD PTR [rax+0x0]
  40b470:	add    rax,0x1
  40b474:	movzx  ecx,BYTE PTR [rax]
  40b477:	cmp    BYTE PTR [rdi+rcx*1],0x0
  40b47b:	mov    rdx,rcx
  40b47e:	jne    0x40b470
  40b480:	jmp    0x40aea2
  40b485:	mov    edi,0x1
  40b48a:	jmp    0x40b322
  40b48f:	mov    edi,0x2
  40b494:	jmp    0x40b297
  40b499:	test   dil,0x2
  40b49d:	je     0x40b2d1
  40b4a3:	or     edi,DWORD PTR [r15]
  40b4a6:	and    edi,0x1
  40b4a9:	jne    0x40b383
  40b4af:	jmp    0x40b2d1
  40b4b4:	movzx  edx,BYTE PTR [rax]
  40b4b7:	xor    r12d,r12d
  40b4ba:	jmp    0x40aea9
  40b4bf:	mov    edx,DWORD PTR [rsp+0x90]
  40b4c6:	test   edx,edx
  40b4c8:	je     0x40aff0
  40b4ce:	mov    DWORD PTR [r14+0x14],0x1
  40b4d6:	mov    DWORD PTR [r15],0x1
  40b4dd:	jmp    0x40b18f
  40b4e2:	mov    ecx,DWORD PTR [rsp+0x90]
  40b4e9:	test   ecx,ecx
  40b4eb:	je     0x40b4ce
  40b4ed:	jmp    0x40aff0
  40b4f2:	cmp    ebx,esi
  40b4f4:	jne    0x40aff0
  40b4fa:	cmp    esi,0x1
  40b4fd:	jle    0x40b4ce
  40b4ff:	lea    edx,[rsi-0x1]
  40b502:	mov    rcx,r14
  40b505:	call   0x40c8b0
  40b50a:	test   eax,eax
  40b50c:	je     0x40aff0
  40b512:	mov    eax,DWORD PTR [r13+0x4]
  40b516:	jmp    0x40b4ce
  40b518:	xor    edx,edx
  40b51a:	jmp    0x40ae31
  40b51f:	mov    eax,DWORD PTR [r13+0x0]
  40b523:	mov    bl,0x22
  40b525:	sub    eax,0x1
  40b528:	cmp    eax,esi
  40b52a:	jne    0x40b2d4
  40b530:	mov    edx,esi
  40b532:	mov    eax,0x1
  40b537:	mov    ecx,esi
  40b539:	sar    edx,0x5
  40b53c:	shl    eax,cl
  40b53e:	movsxd rdx,edx
  40b541:	and    eax,DWORD PTR [r8+rdx*4]
  40b545:	cmp    eax,0x1
  40b548:	sbb    ebx,ebx
  40b54a:	not    ebx
  40b54c:	add    ebx,0x22
  40b54f:	jmp    0x40b2d4
  40b554:	mov    r12d,0x1
  40b55a:	jmp    0x40b454
  40b55f:	nop
  40b560:	push   rbp
  40b561:	push   rdi
  40b562:	push   rsi
  40b563:	push   rbx
  40b564:	mov    rsi,rcx
  40b567:	lea    r10,[rcx+0x18]
  40b56b:	movsxd rcx,DWORD PTR [rcx+0x14]
  40b56f:	mov    eax,edx
  40b571:	sar    eax,0x5
  40b574:	cmp    eax,ecx
  40b576:	jge    0x40b600
  40b57c:	cdqe   
  40b57e:	and    edx,0x1f
  40b581:	lea    rbx,[r10+rcx*4]
  40b585:	lea    rdi,[r10+rax*4]
  40b589:	je     0x40b613
  40b58f:	mov    r9d,DWORD PTR [rdi]
  40b592:	lea    r8,[rdi+0x4]
  40b596:	mov    ebp,0x20
  40b59b:	mov    ecx,edx
  40b59d:	sub    ebp,edx
  40b59f:	shr    r9d,cl
  40b5a2:	cmp    rbx,r8
  40b5a5:	jbe    0x40b658
  40b5ab:	mov    r11,r10
  40b5ae:	xchg   ax,ax
  40b5b0:	mov    eax,DWORD PTR [r8]
  40b5b3:	mov    ecx,ebp
  40b5b5:	add    r11,0x4
  40b5b9:	add    r8,0x4
  40b5bd:	shl    eax,cl
  40b5bf:	mov    ecx,edx
  40b5c1:	or     eax,r9d
  40b5c4:	mov    DWORD PTR [r11-0x4],eax
  40b5c8:	mov    r9d,DWORD PTR [r8-0x4]
  40b5cc:	shr    r9d,cl
  40b5cf:	cmp    rbx,r8
  40b5d2:	ja     0x40b5b0
  40b5d4:	sub    rbx,rdi
  40b5d7:	lea    rax,[rbx-0x5]
  40b5db:	shr    rax,0x2
  40b5df:	lea    rax,[r10+rax*4+0x4]
  40b5e4:	test   r9d,r9d
  40b5e7:	mov    DWORD PTR [rax],r9d
  40b5ea:	je     0x40b5f0
  40b5ec:	add    rax,0x4
  40b5f0:	sub    rax,r10
  40b5f3:	shr    rax,0x2
  40b5f7:	jmp    0x40b64c
  40b5f9:	nop    DWORD PTR [rax+0x0]
  40b600:	mov    DWORD PTR [rsi+0x14],0x0
  40b607:	mov    DWORD PTR [rsi+0x18],0x0
  40b60e:	pop    rbx
  40b60f:	pop    rsi
  40b610:	pop    rdi
  40b611:	pop    rbp
  40b612:	ret    
  40b613:	cmp    rbx,rdi
  40b616:	mov    rdx,r10
  40b619:	mov    rax,rdi
  40b61c:	jbe    0x40b600
  40b61e:	xchg   ax,ax
  40b620:	add    rax,0x4
  40b624:	mov    r8d,DWORD PTR [rax-0x4]
  40b628:	add    rdx,0x4
  40b62c:	cmp    rbx,rax
  40b62f:	mov    DWORD PTR [rdx-0x4],r8d
  40b633:	ja     0x40b620
  40b635:	not    rdi
  40b638:	lea    rax,[rdi+rbx*1]
  40b63c:	shr    rax,0x2
  40b640:	lea    rax,[rax*4+0x4]
  40b648:	shr    rax,0x2
  40b64c:	test   eax,eax
  40b64e:	mov    DWORD PTR [rsi+0x14],eax
  40b651:	je     0x40b607
  40b653:	pop    rbx
  40b654:	pop    rsi
  40b655:	pop    rdi
  40b656:	pop    rbp
  40b657:	ret    
  40b658:	mov    rax,r10
  40b65b:	jmp    0x40b5e4
  40b65d:	nop    DWORD PTR [rax]
  40b660:	movsxd rax,DWORD PTR [rcx+0x14]
  40b664:	lea    rdx,[rcx+0x18]
  40b668:	lea    r8,[rdx+rax*4]
  40b66c:	cmp    rdx,r8
  40b66f:	jae    0x40b69b
  40b671:	mov    ecx,DWORD PTR [rcx+0x18]
  40b674:	xor    eax,eax
  40b676:	test   ecx,ecx
  40b678:	je     0x40b686
  40b67a:	jmp    0x40b694
  40b67c:	nop    DWORD PTR [rax+0x0]
  40b680:	mov    ecx,DWORD PTR [rdx]
  40b682:	test   ecx,ecx
  40b684:	jne    0x40b694
  40b686:	add    rdx,0x4
  40b68a:	add    eax,0x20
  40b68d:	cmp    r8,rdx
  40b690:	ja     0x40b680
  40b692:	repz ret 
  40b694:	tzcnt  ecx,ecx
  40b698:	add    eax,ecx
  40b69a:	ret    
  40b69b:	xor    eax,eax
  40b69d:	ret    
  40b69e:	nop
  40b69f:	nop
  40b6a0:	lea    r8,[rip+0x4c67]        # 0x41030e
  40b6a7:	lea    rdx,[rip+0x8ed2]        # 0x414580
  40b6ae:	mov    ecx,0x10
  40b6b3:	mov    eax,0x30
  40b6b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b6c0:	mov    BYTE PTR [rdx+rax*1],cl
  40b6c3:	movzx  eax,BYTE PTR [r8+0x1]
  40b6c8:	add    ecx,0x1
  40b6cb:	add    r8,0x1
  40b6cf:	test   al,al
  40b6d1:	jne    0x40b6c0
  40b6d3:	lea    r8,[rip+0x4c2d]        # 0x410307
  40b6da:	mov    ecx,0x1a
  40b6df:	mov    eax,0x61
  40b6e4:	mov    BYTE PTR [rdx+rax*1],cl
  40b6e7:	movzx  eax,BYTE PTR [r8+0x1]
  40b6ec:	add    ecx,0x1
  40b6ef:	add    r8,0x1
  40b6f3:	test   al,al
  40b6f5:	jne    0x40b6e4
  40b6f7:	lea    r8,[rip+0x4c02]        # 0x410300
  40b6fe:	mov    ecx,0x1a
  40b703:	mov    eax,0x41
  40b708:	nop    DWORD PTR [rax+rax*1+0x0]
  40b710:	mov    BYTE PTR [rdx+rax*1],cl
  40b713:	movzx  eax,BYTE PTR [r8+0x1]
  40b718:	add    ecx,0x1
  40b71b:	add    r8,0x1
  40b71f:	test   al,al
  40b721:	jne    0x40b710
  40b723:	ret    
  40b724:	nop
  40b725:	nop
  40b726:	nop
  40b727:	nop
  40b728:	nop
  40b729:	nop
  40b72a:	nop
  40b72b:	nop
  40b72c:	nop
  40b72d:	nop
  40b72e:	nop
  40b72f:	nop
  40b730:	push   r15
  40b732:	push   r14
  40b734:	push   r13
  40b736:	push   r12
  40b738:	push   rbp
  40b739:	push   rdi
  40b73a:	push   rsi
  40b73b:	push   rbx
  40b73c:	sub    rsp,0x48
  40b740:	mov    r14,QWORD PTR [rip+0x4de9]        # 0x410530
  40b747:	mov    QWORD PTR [rsp+0x90],rcx
  40b74f:	cmp    BYTE PTR [r14+0x30],0x0
  40b754:	je     0x40ba26
  40b75a:	mov    eax,DWORD PTR [rdx]
  40b75c:	mov    edx,eax
  40b75e:	sar    edx,0x5
  40b761:	and    eax,0x1f
  40b764:	movsxd rdx,edx
  40b767:	mov    DWORD PTR [rsp+0x3c],eax
  40b76b:	mov    rax,QWORD PTR [rsp+0x90]
  40b773:	lea    rdi,[r8+rdx*4]
  40b777:	lea    rdx,[rdi+0x4]
  40b77b:	mov    rax,QWORD PTR [rax]
  40b77e:	cmove  rdx,rdi
  40b782:	mov    QWORD PTR [rsp+0x30],rdx
  40b787:	lea    rsi,[rdx-0x4]
  40b78b:	mov    DWORD PTR [rdx-0x4],0x0
  40b792:	jmp    0x40b798
  40b794:	add    rax,0x1
  40b798:	movzx  edx,BYTE PTR [rax+0x1]
  40b79c:	mov    ecx,edx
  40b79e:	sub    edx,0x1
  40b7a1:	cmp    edx,0x1f
  40b7a4:	jbe    0x40b794
  40b7a6:	cmp    cl,0x30
  40b7a9:	je     0x40ba44
  40b7af:	movzx  edx,BYTE PTR [rax+0x1]
  40b7b3:	xor    r9d,r9d
  40b7b6:	xor    r15d,r15d
  40b7b9:	xor    r12d,r12d
  40b7bc:	test   edx,edx
  40b7be:	mov    rbp,rsi
  40b7c1:	mov    r11,rsi
  40b7c4:	lea    rbx,[rax+0x1]
  40b7c8:	je     0x40b870
  40b7ce:	xchg   ax,ax
  40b7d0:	mov    ecx,edx
  40b7d2:	movzx  ecx,BYTE PTR [r14+rcx*1]
  40b7d7:	test   cl,cl
  40b7d9:	jne    0x40b944
  40b7df:	cmp    edx,0x20
  40b7e2:	ja     0x40b9f5
  40b7e8:	cmp    r12d,r15d
  40b7eb:	jle    0x40b985
  40b7f1:	cmp    r9d,0x7
  40b7f5:	jg     0x40b84a
  40b7f7:	cmp    r11,rbp
  40b7fa:	jae    0x40b84a
  40b7fc:	mov    edi,0x8
  40b801:	mov    edx,DWORD PTR [r11]
  40b804:	mov    r13d,0x20
  40b80a:	sub    edi,r9d
  40b80d:	mov    QWORD PTR [rsp+0x28],rax
  40b812:	mov    r9,r11
  40b815:	shl    edi,0x2
  40b818:	sub    r13d,edi
  40b81b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b820:	mov    r10d,DWORD PTR [r9+0x4]
  40b824:	mov    ecx,r13d
  40b827:	add    r9,0x4
  40b82b:	mov    eax,r10d
  40b82e:	shl    eax,cl
  40b830:	mov    ecx,edi
  40b832:	or     edx,eax
  40b834:	mov    DWORD PTR [r9-0x4],edx
  40b838:	mov    edx,r10d
  40b83b:	shr    edx,cl
  40b83d:	mov    DWORD PTR [r9],edx
  40b840:	cmp    rbp,r9
  40b843:	ja     0x40b820
  40b845:	mov    rax,QWORD PTR [rsp+0x28]
  40b84a:	cmp    r11,r8
  40b84d:	ja     0x40b970
  40b853:	mov    rax,rbx
  40b856:	mov    r9d,0x8
  40b85c:	nop    DWORD PTR [rax+0x0]
  40b860:	movzx  edx,BYTE PTR [rax+0x1]
  40b864:	lea    rbx,[rax+0x1]
  40b868:	test   edx,edx
  40b86a:	jne    0x40b7d0
  40b870:	test   r12d,r12d
  40b873:	mov    eax,0x4
  40b878:	je     0x40b933
  40b87e:	mov    r10,r11
  40b881:	cmp    r9d,0x7
  40b885:	jg     0x40b8d3
  40b887:	cmp    rbp,r11
  40b88a:	jbe    0x40b8d3
  40b88c:	mov    edi,0x8
  40b891:	mov    eax,DWORD PTR [r11]
  40b894:	mov    r12d,0x20
  40b89a:	sub    edi,r9d
  40b89d:	mov    r9,r11
  40b8a0:	shl    edi,0x2
  40b8a3:	sub    r12d,edi
  40b8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b8b0:	mov    ebx,DWORD PTR [r9+0x4]
  40b8b4:	mov    ecx,r12d
  40b8b7:	add    r9,0x4
  40b8bb:	mov    edx,ebx
  40b8bd:	shl    edx,cl
  40b8bf:	mov    ecx,edi
  40b8c1:	or     eax,edx
  40b8c3:	mov    DWORD PTR [r9-0x4],eax
  40b8c7:	mov    eax,ebx
  40b8c9:	shr    eax,cl
  40b8cb:	mov    DWORD PTR [r9],eax
  40b8ce:	cmp    rbp,r9
  40b8d1:	ja     0x40b8b0
  40b8d3:	cmp    r8,r11
  40b8d6:	jae    0x40ba74
  40b8dc:	mov    rax,r8
  40b8df:	nop
  40b8e0:	add    r10,0x4
  40b8e4:	mov    edx,DWORD PTR [r10-0x4]
  40b8e8:	add    rax,0x4
  40b8ec:	cmp    rsi,r10
  40b8ef:	mov    DWORD PTR [rax-0x4],edx
  40b8f2:	jae    0x40b8e0
  40b8f4:	add    rax,0x4
  40b8f8:	mov    DWORD PTR [rax-0x4],0x0
  40b8ff:	cmp    rsi,rax
  40b902:	jae    0x40b8f4
  40b904:	mov    rax,QWORD PTR [rsp+0x30]
  40b909:	mov    eax,DWORD PTR [rax-0x4]
  40b90c:	test   eax,eax
  40b90e:	je     0x40b923
  40b910:	jmp    0x40ba6a
  40b915:	sub    rsi,0x4
  40b919:	mov    eax,DWORD PTR [rsi]
  40b91b:	test   eax,eax
  40b91d:	jne    0x40ba6a
  40b923:	cmp    r8,rsi
  40b926:	jne    0x40b915
  40b928:	mov    DWORD PTR [rsi],0x1
  40b92e:	mov    eax,0x5
  40b933:	add    rsp,0x48
  40b937:	pop    rbx
  40b938:	pop    rsi
  40b939:	pop    rdi
  40b93a:	pop    rbp
  40b93b:	pop    r12
  40b93d:	pop    r13
  40b93f:	pop    r14
  40b941:	pop    r15
  40b943:	ret    
  40b944:	add    r9d,0x1
  40b948:	add    r12d,0x1
  40b94c:	cmp    r9d,0x8
  40b950:	jg     0x40b9d0
  40b952:	mov    eax,DWORD PTR [r11]
  40b955:	shl    eax,0x4
  40b958:	and    ecx,0xf
  40b95b:	or     ecx,eax
  40b95d:	mov    rax,rbx
  40b960:	mov    DWORD PTR [r11],ecx
  40b963:	jmp    0x40b860
  40b968:	nop    DWORD PTR [rax+rax*1+0x0]
  40b970:	lea    rbp,[r11-0x4]
  40b974:	mov    DWORD PTR [r11-0x4],0x0
  40b97c:	mov    r15d,r12d
  40b97f:	xor    r9d,r9d
  40b982:	mov    r11,rbp
  40b985:	movzx  edx,BYTE PTR [rax+0x2]
  40b989:	mov    rax,rbx
  40b98c:	cmp    dl,0x20
  40b98f:	ja     0x40b99e
  40b991:	add    rax,0x1
  40b995:	movzx  edx,BYTE PTR [rax+0x1]
  40b999:	cmp    dl,0x20
  40b99c:	jbe    0x40b991
  40b99e:	cmp    dl,0x30
  40b9a1:	jne    0x40b860
  40b9a7:	movzx  edx,BYTE PTR [rax+0x2]
  40b9ab:	and    edx,0xffffffdf
  40b9ae:	cmp    dl,0x58
  40b9b1:	jne    0x40b860
  40b9b7:	cmp    BYTE PTR [rax+0x3],0x21
  40b9bb:	lea    rdx,[rax+0x2]
  40b9bf:	cmovae rax,rdx
  40b9c3:	jmp    0x40b860
  40b9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b9d0:	cmp    r11,r8
  40b9d3:	mov    rax,rbx
  40b9d6:	jbe    0x40b860
  40b9dc:	mov    DWORD PTR [r11-0x4],0x0
  40b9e4:	xor    eax,eax
  40b9e6:	sub    r11,0x4
  40b9ea:	mov    r9d,0x1
  40b9f0:	jmp    0x40b958
  40b9f5:	cmp    edx,0x29
  40b9f8:	mov    rcx,rbx
  40b9fb:	sete   dl
  40b9fe:	test   r12d,r12d
  40ba01:	je     0x40baa0
  40ba07:	test   dl,dl
  40ba09:	je     0x40baa4
  40ba0f:	mov    rbx,QWORD PTR [rsp+0x90]
  40ba17:	add    rax,0x2
  40ba1b:	mov    r10,r11
  40ba1e:	mov    QWORD PTR [rbx],rax
  40ba21:	jmp    0x40b881
  40ba26:	mov    QWORD PTR [rsp+0x30],r8
  40ba2b:	mov    QWORD PTR [rsp+0x28],rdx
  40ba30:	call   0x40b6a0
  40ba35:	mov    r8,QWORD PTR [rsp+0x30]
  40ba3a:	mov    rdx,QWORD PTR [rsp+0x28]
  40ba3f:	jmp    0x40b75a
  40ba44:	movzx  edx,BYTE PTR [rax+0x2]
  40ba48:	and    edx,0xffffffdf
  40ba4b:	cmp    dl,0x58
  40ba4e:	jne    0x40b7af
  40ba54:	movzx  edx,BYTE PTR [rax+0x3]
  40ba58:	cmp    dl,0x20
  40ba5b:	jbe    0x40b7af
  40ba61:	add    rax,0x2
  40ba65:	jmp    0x40b7b3
  40ba6a:	mov    eax,0x5
  40ba6f:	jmp    0x40b933
  40ba74:	mov    edx,DWORD PTR [rsp+0x3c]
  40ba78:	test   edx,edx
  40ba7a:	je     0x40b904
  40ba80:	mov    ecx,0x20
  40ba85:	sub    ecx,DWORD PTR [rsp+0x3c]
  40ba89:	mov    rbx,QWORD PTR [rsp+0x30]
  40ba8e:	mov    eax,0xffffffff
  40ba93:	shr    eax,cl
  40ba95:	and    eax,DWORD PTR [rbx-0x4]
  40ba98:	mov    DWORD PTR [rbx-0x4],eax
  40ba9b:	jmp    0x40b90c
  40baa0:	test   dl,dl
  40baa2:	jne    0x40bac2
  40baa4:	movsx  eax,BYTE PTR [rbx+0x1]
  40baa8:	lea    rcx,[rbx+0x1]
  40baac:	test   eax,eax
  40baae:	jne    0x40babd
  40bab0:	jmp    0x40badb
  40bab2:	add    rcx,0x1
  40bab6:	movsx  eax,BYTE PTR [rcx]
  40bab9:	test   eax,eax
  40babb:	je     0x40badb
  40babd:	cmp    eax,0x29
  40bac0:	jne    0x40bab2
  40bac2:	mov    rax,QWORD PTR [rsp+0x90]
  40baca:	add    rcx,0x1
  40bace:	mov    QWORD PTR [rax],rcx
  40bad1:	mov    eax,0x4
  40bad6:	jmp    0x40b933
  40badb:	mov    al,0x4
  40badd:	jmp    0x40b933
  40bae2:	nop
  40bae3:	nop
  40bae4:	nop
  40bae5:	nop
  40bae6:	nop
  40bae7:	nop
  40bae8:	nop
  40bae9:	nop
  40baea:	nop
  40baeb:	nop
  40baec:	nop
  40baed:	nop
  40baee:	nop
  40baef:	nop
  40baf0:	push   rsi
  40baf1:	push   rbx
  40baf2:	sub    rsp,0x28
  40baf6:	mov    eax,DWORD PTR [rip+0x8954]        # 0x414450
  40bafc:	movsxd rsi,ecx
  40baff:	cmp    eax,0x2
  40bb02:	je     0x40bb6d
  40bb04:	test   eax,eax
  40bb06:	je     0x40bb32
  40bb08:	cmp    eax,0x1
  40bb0b:	jne    0x40bb2b
  40bb0d:	mov    rbx,QWORD PTR [rip+0x9c68]        # 0x41577c
  40bb14:	mov    ecx,0x1
  40bb19:	call   rbx
  40bb1b:	mov    eax,DWORD PTR [rip+0x892f]        # 0x414450
  40bb21:	cmp    eax,0x1
  40bb24:	je     0x40bb14
  40bb26:	cmp    eax,0x2
  40bb29:	je     0x40bb6d
  40bb2b:	add    rsp,0x28
  40bb2f:	pop    rbx
  40bb30:	pop    rsi
  40bb31:	ret    
  40bb32:	mov    al,0x1
  40bb34:	xchg   DWORD PTR [rip+0x8916],eax        # 0x414450
  40bb3a:	test   eax,eax
  40bb3c:	jne    0x40bb90
  40bb3e:	lea    rcx,[rip+0x893b]        # 0x414480
  40bb45:	mov    rbx,QWORD PTR [rip+0x9bf0]        # 0x41573c
  40bb4c:	call   rbx
  40bb4e:	lea    rcx,[rip+0x8953]        # 0x4144a8
  40bb55:	call   rbx
  40bb57:	lea    rcx,[rip+0x62]        # 0x40bbc0
  40bb5e:	call   0x4066a0
  40bb63:	mov    DWORD PTR [rip+0x88e3],0x2        # 0x414450
  40bb6d:	lea    rdx,[rsi+rsi*4]
  40bb71:	lea    rax,[rip+0x8908]        # 0x414480
  40bb78:	lea    rcx,[rax+rdx*8]
  40bb7c:	mov    rax,QWORD PTR [rip+0x9b71]        # 0x4156f4
  40bb83:	add    rsp,0x28
  40bb87:	pop    rbx
  40bb88:	pop    rsi
  40bb89:	rex.W jmp rax
  40bb8c:	nop    DWORD PTR [rax+0x0]
  40bb90:	cmp    eax,0x2
  40bb93:	je     0x40bbb0
  40bb95:	mov    eax,DWORD PTR [rip+0x88b5]        # 0x414450
  40bb9b:	cmp    eax,0x1
  40bb9e:	je     0x40bb0d
  40bba4:	jmp    0x40bb26
  40bba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bbb0:	mov    DWORD PTR [rip+0x8896],0x2        # 0x414450
  40bbba:	jmp    0x40bb6d
  40bbbc:	nop    DWORD PTR [rax+0x0]
  40bbc0:	push   rbx
  40bbc1:	sub    rsp,0x20
  40bbc5:	mov    eax,0x3
  40bbca:	xchg   DWORD PTR [rip+0x8880],eax        # 0x414450
  40bbd0:	cmp    eax,0x2
  40bbd3:	je     0x40bbe0
  40bbd5:	add    rsp,0x20
  40bbd9:	pop    rbx
  40bbda:	ret    
  40bbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bbe0:	mov    rbx,QWORD PTR [rip+0x9b05]        # 0x4156ec
  40bbe7:	lea    rcx,[rip+0x8892]        # 0x414480
  40bbee:	call   rbx
  40bbf0:	lea    rcx,[rip+0x88b1]        # 0x4144a8
  40bbf7:	mov    rax,rbx
  40bbfa:	add    rsp,0x20
  40bbfe:	pop    rbx
  40bbff:	rex.W jmp rax
  40bc02:	nop    DWORD PTR [rax+0x0]
  40bc06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc10:	push   rdi
  40bc11:	push   rsi
  40bc12:	push   rbx
  40bc13:	sub    rsp,0x20
  40bc17:	mov    ebx,ecx
  40bc19:	xor    ecx,ecx
  40bc1b:	call   0x40baf0
  40bc20:	cmp    ebx,0x9
  40bc23:	jg     0x40bc60
  40bc25:	lea    rdx,[rip+0x87d4]        # 0x414400
  40bc2c:	movsxd rcx,ebx
  40bc2f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40bc33:	test   rdi,rdi
  40bc36:	je     0x40bcc0
  40bc3c:	cmp    DWORD PTR [rip+0x880d],0x2        # 0x414450
  40bc43:	mov    r8,QWORD PTR [rdi]
  40bc46:	mov    QWORD PTR [rdx+rcx*8],r8
  40bc4a:	jne    0x40bca6
  40bc4c:	lea    rcx,[rip+0x882d]        # 0x414480
  40bc53:	call   QWORD PTR [rip+0x9aeb]        # 0x415744
  40bc59:	jmp    0x40bca6
  40bc5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bc60:	mov    eax,0x1
  40bc65:	mov    ecx,ebx
  40bc67:	shl    eax,cl
  40bc69:	mov    esi,eax
  40bc6b:	lea    eax,[rax-0x1]
  40bc6e:	cdqe   
  40bc70:	lea    rdx,[rax*4+0x27]
  40bc78:	shr    rdx,0x3
  40bc7c:	mov    edx,edx
  40bc7e:	lea    rcx,[rdx*8+0x0]
  40bc86:	call   0x40c9c0
  40bc8b:	test   rax,rax
  40bc8e:	mov    rdi,rax
  40bc91:	je     0x40bd1a
  40bc97:	cmp    DWORD PTR [rip+0x87b2],0x2        # 0x414450
  40bc9e:	mov    DWORD PTR [rdi+0x8],ebx
  40bca1:	mov    DWORD PTR [rdi+0xc],esi
  40bca4:	je     0x40bc4c
  40bca6:	mov    DWORD PTR [rdi+0x14],0x0
  40bcad:	mov    DWORD PTR [rdi+0x10],0x0
  40bcb4:	mov    rax,rdi
  40bcb7:	add    rsp,0x20
  40bcbb:	pop    rbx
  40bcbc:	pop    rsi
  40bcbd:	pop    rdi
  40bcbe:	ret    
  40bcbf:	nop
  40bcc0:	mov    ecx,ebx
  40bcc2:	mov    eax,0x1
  40bcc7:	mov    rdi,QWORD PTR [rip+0x2552]        # 0x40e220
  40bcce:	shl    eax,cl
  40bcd0:	lea    rcx,[rip+0x7e29]        # 0x413b00
  40bcd7:	lea    edx,[rax-0x1]
  40bcda:	mov    esi,eax
  40bcdc:	mov    rax,rdi
  40bcdf:	movsxd rdx,edx
  40bce2:	sub    rax,rcx
  40bce5:	lea    rdx,[rdx*4+0x27]
  40bced:	mov    rcx,rax
  40bcf0:	sar    rcx,0x3
  40bcf4:	shr    rdx,0x3
  40bcf8:	mov    edx,edx
  40bcfa:	add    rcx,rdx
  40bcfd:	cmp    rcx,0x120
  40bd04:	ja     0x40bc7e
  40bd0a:	lea    rdx,[rdi+rdx*8]
  40bd0e:	mov    QWORD PTR [rip+0x250b],rdx        # 0x40e220
  40bd15:	jmp    0x40bc97
  40bd1a:	xor    eax,eax
  40bd1c:	jmp    0x40bcb7
  40bd1e:	xchg   ax,ax
  40bd20:	push   rbx
  40bd21:	sub    rsp,0x20
  40bd25:	test   rcx,rcx
  40bd28:	je     0x40bd59
  40bd2a:	cmp    DWORD PTR [rcx+0x8],0x9
  40bd2e:	jg     0x40bd60
  40bd30:	mov    rbx,rcx
  40bd33:	xor    ecx,ecx
  40bd35:	call   0x40baf0
  40bd3a:	movsxd rdx,DWORD PTR [rbx+0x8]
  40bd3e:	lea    rax,[rip+0x86bb]        # 0x414400
  40bd45:	cmp    DWORD PTR [rip+0x8704],0x2        # 0x414450
  40bd4c:	mov    rcx,QWORD PTR [rax+rdx*8]
  40bd50:	mov    QWORD PTR [rax+rdx*8],rbx
  40bd54:	mov    QWORD PTR [rbx],rcx
  40bd57:	je     0x40bd70
  40bd59:	add    rsp,0x20
  40bd5d:	pop    rbx
  40bd5e:	ret    
  40bd5f:	nop
  40bd60:	add    rsp,0x20
  40bd64:	pop    rbx
  40bd65:	jmp    0x40c9f0
  40bd6a:	nop    WORD PTR [rax+rax*1+0x0]
  40bd70:	mov    rax,QWORD PTR [rip+0x99cd]        # 0x415744
  40bd77:	lea    rcx,[rip+0x8702]        # 0x414480
  40bd7e:	add    rsp,0x20
  40bd82:	pop    rbx
  40bd83:	rex.W jmp rax
  40bd86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd90:	push   rbp
  40bd91:	push   rdi
  40bd92:	push   rsi
  40bd93:	push   rbx
  40bd94:	sub    rsp,0x28
  40bd98:	mov    esi,DWORD PTR [rcx+0x14]
  40bd9b:	xor    r9d,r9d
  40bd9e:	lea    r10,[rcx+0x18]
  40bda2:	mov    rdi,rcx
  40bda5:	movsxd rbx,r8d
  40bda8:	movsxd rdx,edx
  40bdab:	nop    DWORD PTR [rax+rax*1+0x0]
  40bdb0:	mov    eax,DWORD PTR [r10+r9*4]
  40bdb4:	imul   rax,rdx
  40bdb8:	add    rax,rbx
  40bdbb:	mov    rbx,rax
  40bdbe:	mov    DWORD PTR [r10+r9*4],eax
  40bdc2:	add    r9,0x1
  40bdc6:	shr    rbx,0x20
  40bdca:	cmp    esi,r9d
  40bdcd:	jg     0x40bdb0
  40bdcf:	test   rbx,rbx
  40bdd2:	mov    rax,rdi
  40bdd5:	je     0x40bdec
  40bdd7:	cmp    esi,DWORD PTR [rdi+0xc]
  40bdda:	jge    0x40bdf5
  40bddc:	movsxd rax,esi
  40bddf:	add    esi,0x1
  40bde2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  40bde6:	mov    DWORD PTR [rdi+0x14],esi
  40bde9:	mov    rax,rdi
  40bdec:	add    rsp,0x28
  40bdf0:	pop    rbx
  40bdf1:	pop    rsi
  40bdf2:	pop    rdi
  40bdf3:	pop    rbp
  40bdf4:	ret    
  40bdf5:	mov    eax,DWORD PTR [rdi+0x8]
  40bdf8:	lea    ecx,[rax+0x1]
  40bdfb:	call   0x40bc10
  40be00:	test   rax,rax
  40be03:	mov    rbp,rax
  40be06:	je     0x40be3e
  40be08:	lea    rcx,[rax+0x10]
  40be0c:	movsxd rax,DWORD PTR [rdi+0x14]
  40be10:	lea    rdx,[rdi+0x10]
  40be14:	lea    r8,[rax*4+0x8]
  40be1c:	call   0x40c9b8
  40be21:	mov    rcx,rdi
  40be24:	mov    rdi,rbp
  40be27:	call   0x40bd20
  40be2c:	movsxd rax,esi
  40be2f:	add    esi,0x1
  40be32:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  40be36:	mov    DWORD PTR [rdi+0x14],esi
  40be39:	mov    rax,rdi
  40be3c:	jmp    0x40bdec
  40be3e:	xor    eax,eax
  40be40:	jmp    0x40bdec
  40be42:	nop    DWORD PTR [rax+0x0]
  40be46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be50:	push   rbx
  40be51:	sub    rsp,0x20
  40be55:	mov    ebx,ecx
  40be57:	mov    ecx,0x1
  40be5c:	call   0x40bc10
  40be61:	test   rax,rax
  40be64:	je     0x40be70
  40be66:	mov    DWORD PTR [rax+0x18],ebx
  40be69:	mov    DWORD PTR [rax+0x14],0x1
  40be70:	add    rsp,0x20
  40be74:	pop    rbx
  40be75:	ret    
  40be76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be80:	push   r14
  40be82:	push   r13
  40be84:	push   r12
  40be86:	push   rbp
  40be87:	push   rdi
  40be88:	push   rsi
  40be89:	push   rbx
  40be8a:	sub    rsp,0x20
  40be8e:	movsxd r13,DWORD PTR [rcx+0x14]
  40be92:	movsxd rbx,DWORD PTR [rdx+0x14]
  40be96:	mov    r12,rcx
  40be99:	mov    r14,rdx
  40be9c:	cmp    r13d,ebx
  40be9f:	jl     0x40bfa1
  40bea5:	mov    eax,ebx
  40bea7:	movsxd rbx,r13d
  40beaa:	movsxd r13,eax
  40bead:	xor    eax,eax
  40beaf:	lea    esi,[rbx+r13*1]
  40beb3:	cmp    esi,DWORD PTR [r12+0xc]
  40beb8:	setg   al
  40bebb:	add    eax,DWORD PTR [r12+0x8]
  40bec0:	mov    ecx,eax
  40bec2:	call   0x40bc10
  40bec7:	test   rax,rax
  40beca:	je     0x40bfac
  40bed0:	lea    rdi,[rax+0x18]
  40bed4:	movsxd rdx,esi
  40bed7:	lea    rbp,[rdi+rdx*4]
  40bedb:	mov    r8,rdi
  40bede:	cmp    rdi,rbp
  40bee1:	jae    0x40bef3
  40bee3:	mov    DWORD PTR [r8],0x0
  40beea:	add    r8,0x4
  40beee:	cmp    rbp,r8
  40bef1:	ja     0x40bee3
  40bef3:	lea    rdx,[r14+0x18]
  40bef7:	add    r12,0x18
  40befb:	lea    rbx,[r12+rbx*4]
  40beff:	lea    r13,[rdx+r13*4]
  40bf03:	cmp    rdx,r13
  40bf06:	jae    0x40bf69
  40bf08:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf10:	add    rdx,0x4
  40bf14:	mov    r11d,DWORD PTR [rdx-0x4]
  40bf18:	test   r11d,r11d
  40bf1b:	je     0x40bf60
  40bf1d:	mov    r9,rdi
  40bf20:	mov    r8,r12
  40bf23:	xor    r10d,r10d
  40bf26:	jmp    0x40bf33
  40bf28:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf30:	mov    r9,r14
  40bf33:	add    r8,0x4
  40bf37:	mov    ecx,DWORD PTR [r8-0x4]
  40bf3b:	mov    r14d,DWORD PTR [r9]
  40bf3e:	imul   rcx,r11
  40bf42:	add    rcx,r14
  40bf45:	lea    r14,[r9+0x4]
  40bf49:	add    rcx,r10
  40bf4c:	mov    r10,rcx
  40bf4f:	mov    DWORD PTR [r14-0x4],ecx
  40bf53:	shr    r10,0x20
  40bf57:	cmp    rbx,r8
  40bf5a:	ja     0x40bf30
  40bf5c:	mov    DWORD PTR [r9+0x4],r10d
  40bf60:	add    rdi,0x4
  40bf64:	cmp    r13,rdx
  40bf67:	ja     0x40bf10
  40bf69:	test   esi,esi
  40bf6b:	jle    0x40bf8f
  40bf6d:	mov    r8d,DWORD PTR [rbp-0x4]
  40bf71:	lea    rdx,[rbp-0x4]
  40bf75:	test   r8d,r8d
  40bf78:	je     0x40bf8a
  40bf7a:	jmp    0x40bf8f
  40bf7c:	nop    DWORD PTR [rax+0x0]
  40bf80:	sub    rdx,0x4
  40bf84:	mov    ecx,DWORD PTR [rdx]
  40bf86:	test   ecx,ecx
  40bf88:	jne    0x40bf8f
  40bf8a:	sub    esi,0x1
  40bf8d:	jne    0x40bf80
  40bf8f:	mov    DWORD PTR [rax+0x14],esi
  40bf92:	add    rsp,0x20
  40bf96:	pop    rbx
  40bf97:	pop    rsi
  40bf98:	pop    rdi
  40bf99:	pop    rbp
  40bf9a:	pop    r12
  40bf9c:	pop    r13
  40bf9e:	pop    r14
  40bfa0:	ret    
  40bfa1:	mov    r12,rdx
  40bfa4:	mov    r14,rcx
  40bfa7:	jmp    0x40bead
  40bfac:	xor    eax,eax
  40bfae:	jmp    0x40bf92
  40bfb0:	push   rbp
  40bfb1:	push   rdi
  40bfb2:	push   rsi
  40bfb3:	push   rbx
  40bfb4:	sub    rsp,0x28
  40bfb8:	mov    eax,edx
  40bfba:	mov    rbp,rcx
  40bfbd:	mov    ebx,edx
  40bfbf:	and    eax,0x3
  40bfc2:	jne    0x40c050
  40bfc8:	sar    ebx,0x2
  40bfcb:	mov    rax,rbp
  40bfce:	test   ebx,ebx
  40bfd0:	je     0x40c01c
  40bfd2:	mov    rdi,QWORD PTR [rip+0x7ae7]        # 0x413ac0
  40bfd9:	test   rdi,rdi
  40bfdc:	jne    0x40bff2
  40bfde:	jmp    0x40c09d
  40bfe3:	sar    ebx,1
  40bfe5:	je     0x40c019
  40bfe7:	mov    rsi,QWORD PTR [rdi]
  40bfea:	test   rsi,rsi
  40bfed:	je     0x40c025
  40bfef:	mov    rdi,rsi
  40bff2:	test   bl,0x1
  40bff5:	je     0x40bfe3
  40bff7:	mov    rdx,rdi
  40bffa:	mov    rcx,rbp
  40bffd:	call   0x40be80
  40c002:	test   rax,rax
  40c005:	mov    rsi,rax
  40c008:	je     0x40c073
  40c00a:	mov    rcx,rbp
  40c00d:	mov    rbp,rsi
  40c010:	call   0x40bd20
  40c015:	sar    ebx,1
  40c017:	jne    0x40bfe7
  40c019:	mov    rax,rbp
  40c01c:	add    rsp,0x28
  40c020:	pop    rbx
  40c021:	pop    rsi
  40c022:	pop    rdi
  40c023:	pop    rbp
  40c024:	ret    
  40c025:	mov    ecx,0x1
  40c02a:	call   0x40baf0
  40c02f:	mov    rsi,QWORD PTR [rdi]
  40c032:	test   rsi,rsi
  40c035:	je     0x40c07e
  40c037:	cmp    DWORD PTR [rip+0x8412],0x2        # 0x414450
  40c03e:	jne    0x40bfef
  40c040:	lea    rcx,[rip+0x8461]        # 0x4144a8
  40c047:	call   QWORD PTR [rip+0x96f7]        # 0x415744
  40c04d:	jmp    0x40bfef
  40c04f:	nop
  40c050:	sub    eax,0x1
  40c053:	lea    rdx,[rip+0x42e6]        # 0x410340
  40c05a:	xor    r8d,r8d
  40c05d:	cdqe   
  40c05f:	mov    edx,DWORD PTR [rdx+rax*4]
  40c062:	call   0x40bd90
  40c067:	test   rax,rax
  40c06a:	mov    rbp,rax
  40c06d:	jne    0x40bfc8
  40c073:	xor    eax,eax
  40c075:	add    rsp,0x28
  40c079:	pop    rbx
  40c07a:	pop    rsi
  40c07b:	pop    rdi
  40c07c:	pop    rbp
  40c07d:	ret    
  40c07e:	mov    rdx,rdi
  40c081:	mov    rcx,rdi
  40c084:	call   0x40be80
  40c089:	test   rax,rax
  40c08c:	mov    rsi,rax
  40c08f:	mov    QWORD PTR [rdi],rax
  40c092:	je     0x40c073
  40c094:	mov    QWORD PTR [rax],0x0
  40c09b:	jmp    0x40c037
  40c09d:	mov    ecx,0x1
  40c0a2:	call   0x40baf0
  40c0a7:	mov    rdi,QWORD PTR [rip+0x7a12]        # 0x413ac0
  40c0ae:	test   rdi,rdi
  40c0b1:	je     0x40c0d2
  40c0b3:	cmp    DWORD PTR [rip+0x8396],0x2        # 0x414450
  40c0ba:	jne    0x40bff2
  40c0c0:	lea    rcx,[rip+0x83e1]        # 0x4144a8
  40c0c7:	call   QWORD PTR [rip+0x9677]        # 0x415744
  40c0cd:	jmp    0x40bff2
  40c0d2:	mov    ecx,0x1
  40c0d7:	call   0x40bc10
  40c0dc:	test   rax,rax
  40c0df:	mov    rdi,rax
  40c0e2:	je     0x40c102
  40c0e4:	mov    DWORD PTR [rax+0x18],0x271
  40c0eb:	mov    DWORD PTR [rax+0x14],0x1
  40c0f2:	mov    QWORD PTR [rip+0x79c7],rax        # 0x413ac0
  40c0f9:	mov    QWORD PTR [rax],0x0
  40c100:	jmp    0x40c0b3
  40c102:	mov    QWORD PTR [rip+0x79b3],0x0        # 0x413ac0
  40c10d:	xor    eax,eax
  40c10f:	jmp    0x40c075
  40c114:	xchg   ax,ax
  40c116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c120:	push   r13
  40c122:	push   r12
  40c124:	push   rbp
  40c125:	push   rdi
  40c126:	push   rsi
  40c127:	push   rbx
  40c128:	sub    rsp,0x28
  40c12c:	mov    rdi,rcx
  40c12f:	mov    ebp,edx
  40c131:	mov    esi,edx
  40c133:	mov    r12d,DWORD PTR [rdi+0x14]
  40c137:	sar    ebp,0x5
  40c13a:	mov    eax,DWORD PTR [rdi+0xc]
  40c13d:	mov    ecx,DWORD PTR [rcx+0x8]
  40c140:	add    r12d,ebp
  40c143:	lea    ebx,[r12+0x1]
  40c148:	cmp    ebx,eax
  40c14a:	jle    0x40c159
  40c14c:	nop    DWORD PTR [rax+0x0]
  40c150:	add    eax,eax
  40c152:	add    ecx,0x1
  40c155:	cmp    ebx,eax
  40c157:	jg     0x40c150
  40c159:	call   0x40bc10
  40c15e:	test   rax,rax
  40c161:	mov    r13,rax
  40c164:	je     0x40c22f
  40c16a:	test   ebp,ebp
  40c16c:	lea    r8,[rax+0x18]
  40c170:	jle    0x40c227
  40c176:	lea    eax,[rbp-0x1]
  40c179:	lea    r9,[r8+rax*4+0x4]
  40c17e:	xchg   ax,ax
  40c180:	add    r8,0x4
  40c184:	mov    DWORD PTR [r8-0x4],0x0
  40c18c:	cmp    r8,r9
  40c18f:	jne    0x40c180
  40c191:	movsxd rax,DWORD PTR [rdi+0x14]
  40c195:	lea    r8,[rdi+0x18]
  40c199:	mov    edx,esi
  40c19b:	and    edx,0x1f
  40c19e:	lea    rbp,[r8+rax*4]
  40c1a2:	je     0x40c210
  40c1a4:	mov    eax,0x20
  40c1a9:	xor    r11d,r11d
  40c1ac:	sub    eax,edx
  40c1ae:	jmp    0x40c1b3
  40c1b0:	mov    r9,rsi
  40c1b3:	mov    r10d,DWORD PTR [r8]
  40c1b6:	mov    ecx,edx
  40c1b8:	lea    rsi,[r9+0x4]
  40c1bc:	add    r8,0x4
  40c1c0:	shl    r10d,cl
  40c1c3:	mov    ecx,eax
  40c1c5:	or     r10d,r11d
  40c1c8:	mov    DWORD PTR [rsi-0x4],r10d
  40c1cc:	mov    r11d,DWORD PTR [r8-0x4]
  40c1d0:	shr    r11d,cl
  40c1d3:	cmp    rbp,r8
  40c1d6:	ja     0x40c1b0
  40c1d8:	add    r12d,0x2
  40c1dc:	test   r11d,r11d
  40c1df:	mov    DWORD PTR [r9+0x4],r11d
  40c1e3:	cmovne ebx,r12d
  40c1e7:	sub    ebx,0x1
  40c1ea:	mov    rcx,rdi
  40c1ed:	mov    DWORD PTR [r13+0x14],ebx
  40c1f1:	call   0x40bd20
  40c1f6:	mov    rax,r13
  40c1f9:	add    rsp,0x28
  40c1fd:	pop    rbx
  40c1fe:	pop    rsi
  40c1ff:	pop    rdi
  40c200:	pop    rbp
  40c201:	pop    r12
  40c203:	pop    r13
  40c205:	ret    
  40c206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c210:	add    r8,0x4
  40c214:	mov    edx,DWORD PTR [r8-0x4]
  40c218:	add    r9,0x4
  40c21c:	cmp    rbp,r8
  40c21f:	mov    DWORD PTR [r9-0x4],edx
  40c223:	ja     0x40c210
  40c225:	jmp    0x40c1e7
  40c227:	mov    r9,r8
  40c22a:	jmp    0x40c191
  40c22f:	xor    eax,eax
  40c231:	jmp    0x40c1f9
  40c233:	nop    DWORD PTR [rax]
  40c236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c240:	movsxd r8,DWORD PTR [rdx+0x14]
  40c244:	mov    eax,DWORD PTR [rcx+0x14]
  40c247:	sub    eax,r8d
  40c24a:	test   eax,eax
  40c24c:	jne    0x40c282
  40c24e:	shl    r8,0x2
  40c252:	add    rcx,0x18
  40c256:	lea    rax,[rcx+r8*1]
  40c25a:	lea    rdx,[rdx+r8*1+0x18]
  40c25f:	jmp    0x40c266
  40c261:	cmp    rcx,rax
  40c264:	jae    0x40c280
  40c266:	sub    rdx,0x4
  40c26a:	sub    rax,0x4
  40c26e:	mov    r9d,DWORD PTR [rdx]
  40c271:	cmp    DWORD PTR [rax],r9d
  40c274:	je     0x40c261
  40c276:	sbb    eax,eax
  40c278:	or     eax,0x1
  40c27b:	ret    
  40c27c:	nop    DWORD PTR [rax+0x0]
  40c280:	xor    eax,eax
  40c282:	repz ret 
  40c284:	xchg   ax,ax
  40c286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c290:	push   rdi
  40c291:	push   rsi
  40c292:	push   rbx
  40c293:	sub    rsp,0x20
  40c297:	mov    rsi,rcx
  40c29a:	mov    rdi,rdx
  40c29d:	call   0x40c240
  40c2a2:	test   eax,eax
  40c2a4:	je     0x40c390
  40c2aa:	mov    ebx,0x0
  40c2af:	js     0x40c3b2
  40c2b5:	mov    ecx,DWORD PTR [rsi+0x8]
  40c2b8:	call   0x40bc10
  40c2bd:	test   rax,rax
  40c2c0:	je     0x40c3c2
  40c2c6:	movsxd rdx,DWORD PTR [rsi+0x14]
  40c2ca:	lea    rcx,[rsi+0x18]
  40c2ce:	mov    DWORD PTR [rax+0x10],ebx
  40c2d1:	lea    r10,[rdi+0x18]
  40c2d5:	xor    r9d,r9d
  40c2d8:	mov    rbx,rdx
  40c2db:	lea    rsi,[rcx+rdx*4]
  40c2df:	movsxd rdx,DWORD PTR [rdi+0x14]
  40c2e3:	lea    rdi,[r10+rdx*4]
  40c2e7:	lea    rdx,[rax+0x18]
  40c2eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c2f0:	add    rcx,0x4
  40c2f4:	add    r10,0x4
  40c2f8:	mov    r11d,DWORD PTR [r10-0x4]
  40c2fc:	mov    r8d,DWORD PTR [rcx-0x4]
  40c300:	add    rdx,0x4
  40c304:	sub    r8,r11
  40c307:	sub    r8,r9
  40c30a:	mov    r9,r8
  40c30d:	mov    r11d,r8d
  40c310:	mov    DWORD PTR [rdx-0x4],r8d
  40c314:	shr    r9,0x20
  40c318:	and    r9d,0x1
  40c31c:	cmp    rdi,r10
  40c31f:	ja     0x40c2f0
  40c321:	cmp    rsi,rcx
  40c324:	mov    rdi,rdx
  40c327:	mov    r10,rcx
  40c32a:	jbe    0x40c366
  40c32c:	nop    DWORD PTR [rax+0x0]
  40c330:	add    rcx,0x4
  40c334:	mov    r8d,DWORD PTR [rcx-0x4]
  40c338:	add    rdx,0x4
  40c33c:	sub    r8,r9
  40c33f:	mov    r9,r8
  40c342:	mov    r11d,r8d
  40c345:	mov    DWORD PTR [rdx-0x4],r8d
  40c349:	shr    r9,0x20
  40c34d:	and    r9d,0x1
  40c351:	cmp    rsi,rcx
  40c354:	ja     0x40c330
  40c356:	not    r10
  40c359:	lea    rdx,[r10+rsi*1]
  40c35d:	shr    rdx,0x2
  40c361:	lea    rdx,[rdi+rdx*4+0x4]
  40c366:	sub    rdx,0x4
  40c36a:	test   r11d,r11d
  40c36d:	jne    0x40c37d
  40c36f:	nop
  40c370:	sub    rdx,0x4
  40c374:	mov    ecx,DWORD PTR [rdx]
  40c376:	sub    ebx,0x1
  40c379:	test   ecx,ecx
  40c37b:	je     0x40c370
  40c37d:	mov    DWORD PTR [rax+0x14],ebx
  40c380:	add    rsp,0x20
  40c384:	pop    rbx
  40c385:	pop    rsi
  40c386:	pop    rdi
  40c387:	ret    
  40c388:	nop    DWORD PTR [rax+rax*1+0x0]
  40c390:	xor    ecx,ecx
  40c392:	call   0x40bc10
  40c397:	test   rax,rax
  40c39a:	je     0x40c3c2
  40c39c:	mov    DWORD PTR [rax+0x14],0x1
  40c3a3:	mov    DWORD PTR [rax+0x18],0x0
  40c3aa:	add    rsp,0x20
  40c3ae:	pop    rbx
  40c3af:	pop    rsi
  40c3b0:	pop    rdi
  40c3b1:	ret    
  40c3b2:	mov    rax,rsi
  40c3b5:	mov    bl,0x1
  40c3b7:	mov    rsi,rdi
  40c3ba:	mov    rdi,rax
  40c3bd:	jmp    0x40c2b5
  40c3c2:	xor    eax,eax
  40c3c4:	jmp    0x40c380
  40c3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c3d0:	push   rsi
  40c3d1:	push   rbx
  40c3d2:	sub    rsp,0x18
  40c3d6:	movsxd rax,DWORD PTR [rcx+0x14]
  40c3da:	lea    r10,[rcx+0x18]
  40c3de:	mov    ecx,0x20
  40c3e3:	lea    r9,[r10+rax*4]
  40c3e7:	mov    eax,DWORD PTR [r9-0x4]
  40c3eb:	lea    rbx,[r9-0x4]
  40c3ef:	bsr    r8d,eax
  40c3f3:	xor    r8d,0x1f
  40c3f7:	sub    ecx,r8d
  40c3fa:	cmp    r8d,0xa
  40c3fe:	mov    DWORD PTR [rdx],ecx
  40c400:	jg     0x40c450
  40c402:	mov    ecx,0xb
  40c407:	mov    r11d,eax
  40c40a:	xor    esi,esi
  40c40c:	sub    ecx,r8d
  40c40f:	shr    r11d,cl
  40c412:	or     r11d,0x3ff00000
  40c419:	shl    r11,0x20
  40c41d:	cmp    r10,rbx
  40c420:	jae    0x40c428
  40c422:	mov    esi,DWORD PTR [r9-0x8]
  40c426:	shr    esi,cl
  40c428:	lea    ecx,[r8+0x15]
  40c42c:	shl    eax,cl
  40c42e:	mov    edx,eax
  40c430:	mov    eax,esi
  40c432:	or     eax,edx
  40c434:	or     rax,r11
  40c437:	mov    QWORD PTR [rsp+0x8],rax
  40c43c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  40c442:	add    rsp,0x18
  40c446:	pop    rbx
  40c447:	pop    rsi
  40c448:	ret    
  40c449:	nop    DWORD PTR [rax+0x0]
  40c450:	cmp    r10,rbx
  40c453:	jae    0x40c4b0
  40c455:	mov    r11d,r8d
  40c458:	lea    rsi,[r9-0x8]
  40c45c:	mov    edx,DWORD PTR [r9-0x8]
  40c460:	sub    r11d,0xb
  40c464:	je     0x40c4d2
  40c466:	mov    ebx,0x2b
  40c46b:	mov    ecx,r11d
  40c46e:	sub    ebx,r8d
  40c471:	shl    eax,cl
  40c473:	mov    r8d,edx
  40c476:	mov    ecx,ebx
  40c478:	shr    r8d,cl
  40c47b:	or     eax,r8d
  40c47e:	xor    r8d,r8d
  40c481:	or     eax,0x3ff00000
  40c486:	shl    rax,0x20
  40c48a:	cmp    r10,rsi
  40c48d:	jae    0x40c496
  40c48f:	mov    r8d,DWORD PTR [r9-0xc]
  40c493:	shr    r8d,cl
  40c496:	mov    ecx,r11d
  40c499:	shl    edx,cl
  40c49b:	or     r8d,edx
  40c49e:	movabs rdx,0xffffffff00000000
  40c4a8:	and    rax,rdx
  40c4ab:	or     rax,r8
  40c4ae:	jmp    0x40c437
  40c4b0:	mov    r11d,r8d
  40c4b3:	sub    r11d,0xb
  40c4b7:	je     0x40c4d0
  40c4b9:	mov    ecx,r11d
  40c4bc:	xor    r8d,r8d
  40c4bf:	xor    edx,edx
  40c4c1:	shl    eax,cl
  40c4c3:	or     eax,0x3ff00000
  40c4c8:	shl    rax,0x20
  40c4cc:	jmp    0x40c496
  40c4ce:	xchg   ax,ax
  40c4d0:	xor    edx,edx
  40c4d2:	or     eax,0x3ff00000
  40c4d7:	shl    rax,0x20
  40c4db:	or     rax,rdx
  40c4de:	jmp    0x40c437
  40c4e3:	nop    DWORD PTR [rax]
  40c4e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4f0:	push   rdi
  40c4f1:	push   rsi
  40c4f2:	push   rbx
  40c4f3:	sub    rsp,0x20
  40c4f7:	mov    ecx,0x1
  40c4fc:	movq   rbx,xmm0
  40c501:	mov    rdi,rdx
  40c504:	mov    rsi,r8
  40c507:	call   0x40bc10
  40c50c:	test   rax,rax
  40c50f:	je     0x40c5f5
  40c515:	mov    r9,rbx
  40c518:	shr    r9,0x20
  40c51c:	mov    r10d,r9d
  40c51f:	and    r9d,0x7fffffff
  40c526:	and    r10d,0xfffff
  40c52d:	shr    r9d,0x14
  40c531:	mov    edx,r10d
  40c534:	or     edx,0x100000
  40c53a:	test   r9d,r9d
  40c53d:	cmovne r10d,edx
  40c541:	test   ebx,ebx
  40c543:	jne    0x40c584
  40c545:	xor    ecx,ecx
  40c547:	mov    DWORD PTR [rax+0x14],0x1
  40c54e:	mov    edx,0x1
  40c553:	tzcnt  ecx,r10d
  40c558:	shr    r10d,cl
  40c55b:	test   r9d,r9d
  40c55e:	lea    r11d,[rcx+0x20]
  40c562:	mov    DWORD PTR [rax+0x18],r10d
  40c566:	je     0x40c5c3
  40c568:	lea    edx,[r11+r9*1-0x433]
  40c570:	mov    DWORD PTR [rdi],edx
  40c572:	mov    edx,0x35
  40c577:	sub    edx,r11d
  40c57a:	mov    DWORD PTR [rsi],edx
  40c57c:	add    rsp,0x20
  40c580:	pop    rbx
  40c581:	pop    rsi
  40c582:	pop    rdi
  40c583:	ret    
  40c584:	xor    r11d,r11d
  40c587:	tzcnt  r11d,ebx
  40c58c:	mov    ecx,r11d
  40c58f:	shr    ebx,cl
  40c591:	test   r11d,r11d
  40c594:	je     0x40c5f0
  40c596:	mov    ecx,0x20
  40c59b:	mov    edx,r10d
  40c59e:	sub    ecx,r11d
  40c5a1:	shl    edx,cl
  40c5a3:	mov    ecx,r11d
  40c5a6:	or     ebx,edx
  40c5a8:	shr    r10d,cl
  40c5ab:	mov    DWORD PTR [rax+0x18],ebx
  40c5ae:	cmp    r10d,0x1
  40c5b2:	mov    DWORD PTR [rax+0x1c],r10d
  40c5b6:	sbb    edx,edx
  40c5b8:	add    edx,0x2
  40c5bb:	test   r9d,r9d
  40c5be:	mov    DWORD PTR [rax+0x14],edx
  40c5c1:	jne    0x40c568
  40c5c3:	movsxd rcx,edx
  40c5c6:	shl    edx,0x5
  40c5c9:	sub    r11d,0x432
  40c5d0:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  40c5d5:	mov    DWORD PTR [rdi],r11d
  40c5d8:	xor    ecx,0x1f
  40c5db:	sub    edx,ecx
  40c5dd:	mov    DWORD PTR [rsi],edx
  40c5df:	add    rsp,0x20
  40c5e3:	pop    rbx
  40c5e4:	pop    rsi
  40c5e5:	pop    rdi
  40c5e6:	ret    
  40c5e7:	nop    WORD PTR [rax+rax*1+0x0]
  40c5f0:	mov    DWORD PTR [rax+0x18],ebx
  40c5f3:	jmp    0x40c5ae
  40c5f5:	xor    eax,eax
  40c5f7:	jmp    0x40c57c
  40c5f9:	nop    DWORD PTR [rax+0x0]
  40c600:	mov    rax,rcx
  40c603:	lea    rcx,[rdx+0x1]
  40c607:	movzx  edx,BYTE PTR [rdx]
  40c60a:	test   dl,dl
  40c60c:	mov    BYTE PTR [rax],dl
  40c60e:	je     0x40c622
  40c610:	add    rcx,0x1
  40c614:	movzx  edx,BYTE PTR [rcx-0x1]
  40c618:	add    rax,0x1
  40c61c:	test   dl,dl
  40c61e:	mov    BYTE PTR [rax],dl
  40c620:	jne    0x40c610
  40c622:	repz ret 
  40c624:	nop
  40c625:	nop
  40c626:	nop
  40c627:	nop
  40c628:	nop
  40c629:	nop
  40c62a:	nop
  40c62b:	nop
  40c62c:	nop
  40c62d:	nop
  40c62e:	nop
  40c62f:	nop
  40c630:	push   r13
  40c632:	push   r12
  40c634:	push   rbp
  40c635:	push   rdi
  40c636:	push   rsi
  40c637:	push   rbx
  40c638:	sub    rsp,0x28
  40c63c:	mov    rsi,rcx
  40c63f:	lea    ecx,[r8+0x8]
  40c643:	mov    ebp,edx
  40c645:	mov    edx,0x38e38e39
  40c64a:	mov    edi,r8d
  40c64d:	mov    ebx,r9d
  40c650:	mov    eax,ecx
  40c652:	sar    ecx,0x1f
  40c655:	imul   edx
  40c657:	sar    edx,1
  40c659:	sub    edx,ecx
  40c65b:	cmp    edx,0x1
  40c65e:	jle    0x40c724
  40c664:	mov    eax,0x1
  40c669:	xor    ecx,ecx
  40c66b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c670:	add    eax,eax
  40c672:	add    ecx,0x1
  40c675:	cmp    edx,eax
  40c677:	jg     0x40c670
  40c679:	call   0x40bc10
  40c67e:	cmp    ebp,0x9
  40c681:	mov    DWORD PTR [rax+0x18],ebx
  40c684:	mov    DWORD PTR [rax+0x14],0x1
  40c68b:	jle    0x40c710
  40c691:	lea    rbx,[rsi+0x9]
  40c695:	lea    r12d,[rbp-0xa]
  40c699:	lea    r13,[rsi+r12*1+0xa]
  40c69e:	mov    rsi,rbx
  40c6a1:	add    rsi,0x1
  40c6a5:	movsx  r8d,BYTE PTR [rsi-0x1]
  40c6aa:	mov    edx,0xa
  40c6af:	mov    rcx,rax
  40c6b2:	sub    r8d,0x30
  40c6b6:	call   0x40bd90
  40c6bb:	cmp    rsi,r13
  40c6be:	jne    0x40c6a1
  40c6c0:	movsxd rdx,DWORD PTR [rsp+0x80]
  40c6c8:	lea    r9,[r12+rdx*1+0x1]
  40c6cd:	add    rbx,r9
  40c6d0:	cmp    edi,ebp
  40c6d2:	jle    0x40c6ff
  40c6d4:	sub    edi,0x1
  40c6d7:	sub    edi,ebp
  40c6d9:	lea    rsi,[rbx+rdi*1+0x1]
  40c6de:	xchg   ax,ax
  40c6e0:	add    rbx,0x1
  40c6e4:	movsx  r8d,BYTE PTR [rbx-0x1]
  40c6e9:	mov    edx,0xa
  40c6ee:	mov    rcx,rax
  40c6f1:	sub    r8d,0x30
  40c6f5:	call   0x40bd90
  40c6fa:	cmp    rbx,rsi
  40c6fd:	jne    0x40c6e0
  40c6ff:	add    rsp,0x28
  40c703:	pop    rbx
  40c704:	pop    rsi
  40c705:	pop    rdi
  40c706:	pop    rbp
  40c707:	pop    r12
  40c709:	pop    r13
  40c70b:	ret    
  40c70c:	nop    DWORD PTR [rax+0x0]
  40c710:	movsxd rdx,DWORD PTR [rsp+0x80]
  40c718:	mov    ebp,0x9
  40c71d:	lea    rbx,[rsi+rdx*1+0x9]
  40c722:	jmp    0x40c6d0
  40c724:	xor    ecx,ecx
  40c726:	jmp    0x40c679
  40c72b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c730:	push   rdi
  40c731:	push   rsi
  40c732:	push   rbx
  40c733:	sub    rsp,0x50
  40c737:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40c73c:	mov    rsi,rdx
  40c73f:	lea    rdx,[rsp+0x38]
  40c744:	mov    rdi,rcx
  40c747:	call   0x40c3d0
  40c74c:	lea    rdx,[rsp+0x3c]
  40c751:	mov    rcx,rsi
  40c754:	movq   rbx,xmm0
  40c759:	movapd xmm6,xmm0
  40c75d:	call   0x40c3d0
  40c762:	mov    eax,DWORD PTR [rsp+0x38]
  40c766:	sub    eax,DWORD PTR [rsp+0x3c]
  40c76a:	movq   rcx,xmm0
  40c76f:	mov    r8d,eax
  40c772:	mov    eax,DWORD PTR [rdi+0x14]
  40c775:	sub    eax,DWORD PTR [rsi+0x14]
  40c778:	shl    eax,0x5
  40c77b:	add    eax,r8d
  40c77e:	test   eax,eax
  40c780:	jle    0x40c7c0
  40c782:	movq   rdx,xmm6
  40c787:	shl    eax,0x14
  40c78a:	shr    rdx,0x20
  40c78e:	add    eax,edx
  40c790:	shl    rax,0x20
  40c794:	mov    rdx,rax
  40c797:	mov    eax,ebx
  40c799:	or     rax,rdx
  40c79c:	mov    QWORD PTR [rsp+0x28],rax
  40c7a1:	movsd  xmm6,QWORD PTR [rsp+0x28]
  40c7a7:	divsd  xmm6,xmm0
  40c7ab:	movapd xmm0,xmm6
  40c7af:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  40c7b4:	add    rsp,0x50
  40c7b8:	pop    rbx
  40c7b9:	pop    rsi
  40c7ba:	pop    rdi
  40c7bb:	ret    
  40c7bc:	nop    DWORD PTR [rax+0x0]
  40c7c0:	movq   rdx,xmm0
  40c7c5:	shl    eax,0x14
  40c7c8:	shr    rdx,0x20
  40c7cc:	mov    ebx,edx
  40c7ce:	sub    ebx,eax
  40c7d0:	mov    rax,rbx
  40c7d3:	shl    rax,0x20
  40c7d7:	mov    rdx,rax
  40c7da:	mov    eax,ecx
  40c7dc:	or     rax,rdx
  40c7df:	mov    QWORD PTR [rsp+0x28],rax
  40c7e4:	movsd  xmm0,QWORD PTR [rsp+0x28]
  40c7ea:	jmp    0x40c7a7
  40c7ec:	nop    DWORD PTR [rax+0x0]
  40c7f0:	mov    r8,QWORD PTR [rcx]
  40c7f3:	jmp    0x40c80e
  40c7f5:	movsx  eax,BYTE PTR [r8]
  40c7f9:	lea    r11d,[rax-0x41]
  40c7fd:	lea    r10d,[rax+0x20]
  40c801:	cmp    r11d,0x19
  40c805:	cmovbe eax,r10d
  40c809:	cmp    eax,r9d
  40c80c:	jne    0x40c830
  40c80e:	add    rdx,0x1
  40c812:	movsx  r9d,BYTE PTR [rdx-0x1]
  40c817:	add    r8,0x1
  40c81b:	test   r9d,r9d
  40c81e:	jne    0x40c7f5
  40c820:	mov    QWORD PTR [rcx],r8
  40c823:	mov    eax,0x1
  40c828:	ret    
  40c829:	nop    DWORD PTR [rax+0x0]
  40c830:	xor    eax,eax
  40c832:	ret    
  40c833:	nop    DWORD PTR [rax]
  40c836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c840:	sub    edx,0x1
  40c843:	lea    rax,[r8+0x18]
  40c847:	sar    edx,0x5
  40c84a:	movsxd rdx,edx
  40c84d:	lea    r11,[rcx+rdx*4+0x4]
  40c852:	movsxd rdx,DWORD PTR [r8+0x14]
  40c856:	lea    r10,[rax+rdx*4]
  40c85a:	cmp    rax,r10
  40c85d:	jae    0x40c89b
  40c85f:	mov    rdx,rcx
  40c862:	add    rax,0x4
  40c866:	mov    r9d,DWORD PTR [rax-0x4]
  40c86a:	add    rdx,0x4
  40c86e:	cmp    r10,rax
  40c871:	mov    DWORD PTR [rdx-0x4],r9d
  40c875:	ja     0x40c862
  40c877:	sub    r10,r8
  40c87a:	lea    rax,[r10-0x19]
  40c87e:	shr    rax,0x2
  40c882:	lea    rcx,[rcx+rax*4+0x4]
  40c887:	cmp    r11,rcx
  40c88a:	jbe    0x40c8a0
  40c88c:	nop    DWORD PTR [rax+0x0]
  40c890:	add    rcx,0x4
  40c894:	mov    DWORD PTR [rcx-0x4],0x0
  40c89b:	cmp    r11,rcx
  40c89e:	ja     0x40c890
  40c8a0:	repz ret 
  40c8a2:	nop    DWORD PTR [rax+0x0]
  40c8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c8b0:	movsxd rax,DWORD PTR [rcx+0x14]
  40c8b4:	mov    r9d,edx
  40c8b7:	lea    r8,[rcx+0x18]
  40c8bb:	sar    r9d,0x5
  40c8bf:	cmp    eax,r9d
  40c8c2:	jge    0x40c8f1
  40c8c4:	lea    r9,[r8+rax*4]
  40c8c8:	cmp    r8,r9
  40c8cb:	jae    0x40c936
  40c8cd:	mov    eax,DWORD PTR [r9-0x4]
  40c8d1:	lea    rdx,[r9-0x4]
  40c8d5:	test   eax,eax
  40c8d7:	je     0x40c8ea
  40c8d9:	jmp    0x40c930
  40c8db:	nop    DWORD PTR [rax+rax*1+0x0]
  40c8e0:	sub    rdx,0x4
  40c8e4:	mov    ecx,DWORD PTR [rdx]
  40c8e6:	test   ecx,ecx
  40c8e8:	jne    0x40c930
  40c8ea:	cmp    r8,rdx
  40c8ed:	jb     0x40c8e0
  40c8ef:	repz ret 
  40c8f1:	jle    0x40c920
  40c8f3:	mov    ecx,edx
  40c8f5:	movsxd r9,r9d
  40c8f8:	and    ecx,0x1f
  40c8fb:	lea    r9,[r8+r9*4]
  40c8ff:	je     0x40c8c8
  40c901:	mov    r10d,DWORD PTR [r9]
  40c904:	mov    eax,r10d
  40c907:	shr    eax,cl
  40c909:	shl    eax,cl
  40c90b:	mov    edx,eax
  40c90d:	mov    eax,0x1
  40c912:	cmp    edx,r10d
  40c915:	je     0x40c8c8
  40c917:	repz ret 
  40c919:	nop    DWORD PTR [rax+0x0]
  40c920:	movsxd r9,r9d
  40c923:	lea    r9,[r8+r9*4]
  40c927:	jmp    0x40c8c8
  40c929:	nop    DWORD PTR [rax+0x0]
  40c930:	mov    eax,0x1
  40c935:	ret    
  40c936:	xor    eax,eax
  40c938:	ret    
  40c939:	nop
  40c93a:	nop
  40c93b:	nop
  40c93c:	nop
  40c93d:	nop
  40c93e:	nop
  40c93f:	nop
  40c940:	jmp    QWORD PTR [rip+0x8ffe]        # 0x415944
  40c946:	nop
  40c947:	nop
  40c948:	jmp    QWORD PTR [rip+0x8fee]        # 0x41593c
  40c94e:	nop
  40c94f:	nop
  40c950:	jmp    QWORD PTR [rip+0x8fde]        # 0x415934
  40c956:	nop
  40c957:	nop
  40c958:	jmp    QWORD PTR [rip+0x8fce]        # 0x41592c
  40c95e:	nop
  40c95f:	nop
  40c960:	jmp    QWORD PTR [rip+0x8fbe]        # 0x415924
  40c966:	nop
  40c967:	nop
  40c968:	jmp    QWORD PTR [rip+0x8fae]        # 0x41591c
  40c96e:	nop
  40c96f:	nop
  40c970:	jmp    QWORD PTR [rip+0x8f9e]        # 0x415914
  40c976:	nop
  40c977:	nop
  40c978:	jmp    QWORD PTR [rip+0x8f8e]        # 0x41590c
  40c97e:	nop
  40c97f:	nop
  40c980:	jmp    QWORD PTR [rip+0x8f7e]        # 0x415904
  40c986:	nop
  40c987:	nop
  40c988:	jmp    QWORD PTR [rip+0x8f6e]        # 0x4158fc
  40c98e:	nop
  40c98f:	nop
  40c990:	jmp    QWORD PTR [rip+0x8f5e]        # 0x4158f4
  40c996:	nop
  40c997:	nop
  40c998:	jmp    QWORD PTR [rip+0x8f4e]        # 0x4158ec
  40c99e:	nop
  40c99f:	nop
  40c9a0:	jmp    QWORD PTR [rip+0x8f3e]        # 0x4158e4
  40c9a6:	nop
  40c9a7:	nop
  40c9a8:	jmp    QWORD PTR [rip+0x8f2e]        # 0x4158dc
  40c9ae:	nop
  40c9af:	nop
  40c9b0:	jmp    QWORD PTR [rip+0x8f1e]        # 0x4158d4
  40c9b6:	nop
  40c9b7:	nop
  40c9b8:	jmp    QWORD PTR [rip+0x8f0e]        # 0x4158cc
  40c9be:	nop
  40c9bf:	nop
  40c9c0:	jmp    QWORD PTR [rip+0x8efe]        # 0x4158c4
  40c9c6:	nop
  40c9c7:	nop
  40c9c8:	jmp    QWORD PTR [rip+0x8eee]        # 0x4158bc
  40c9ce:	nop
  40c9cf:	nop
  40c9d0:	jmp    QWORD PTR [rip+0x8ede]        # 0x4158b4
  40c9d6:	nop
  40c9d7:	nop
  40c9d8:	jmp    QWORD PTR [rip+0x8ece]        # 0x4158ac
  40c9de:	nop
  40c9df:	nop
  40c9e0:	jmp    QWORD PTR [rip+0x8ebe]        # 0x4158a4
  40c9e6:	nop
  40c9e7:	nop
  40c9e8:	jmp    QWORD PTR [rip+0x8eae]        # 0x41589c
  40c9ee:	nop
  40c9ef:	nop
  40c9f0:	jmp    QWORD PTR [rip+0x8e9e]        # 0x415894
  40c9f6:	nop
  40c9f7:	nop
  40c9f8:	jmp    QWORD PTR [rip+0x8e8e]        # 0x41588c
  40c9fe:	nop
  40c9ff:	nop
  40ca00:	jmp    QWORD PTR [rip+0x8e7e]        # 0x415884
  40ca06:	nop
  40ca07:	nop
  40ca08:	jmp    QWORD PTR [rip+0x8e6e]        # 0x41587c
  40ca0e:	nop
  40ca0f:	nop
  40ca10:	jmp    QWORD PTR [rip+0x8e5e]        # 0x415874
  40ca16:	nop
  40ca17:	nop
  40ca18:	jmp    QWORD PTR [rip+0x8e4e]        # 0x41586c
  40ca1e:	nop
  40ca1f:	nop
  40ca20:	jmp    QWORD PTR [rip+0x8e3e]        # 0x415864
  40ca26:	nop
  40ca27:	nop
  40ca28:	jmp    QWORD PTR [rip+0x8e2e]        # 0x41585c
  40ca2e:	nop
  40ca2f:	nop
  40ca30:	jmp    QWORD PTR [rip+0x8e1e]        # 0x415854
  40ca36:	nop
  40ca37:	nop
  40ca38:	jmp    QWORD PTR [rip+0x8e0e]        # 0x41584c
  40ca3e:	nop
  40ca3f:	nop
  40ca40:	jmp    QWORD PTR [rip+0x8dfe]        # 0x415844
  40ca46:	nop
  40ca47:	nop
  40ca48:	jmp    QWORD PTR [rip+0x8dee]        # 0x41583c
  40ca4e:	nop
  40ca4f:	nop
  40ca50:	jmp    QWORD PTR [rip+0x8dde]        # 0x415834
  40ca56:	nop
  40ca57:	nop
  40ca58:	jmp    QWORD PTR [rip+0x8dce]        # 0x41582c
  40ca5e:	nop
  40ca5f:	nop
  40ca60:	jmp    QWORD PTR [rip+0x8db6]        # 0x41581c
  40ca66:	nop
  40ca67:	nop
  40ca68:	jmp    QWORD PTR [rip+0x8da6]        # 0x415814
  40ca6e:	nop
  40ca6f:	nop
  40ca70:	jmp    QWORD PTR [rip+0x8d96]        # 0x41580c
  40ca76:	nop
  40ca77:	nop
  40ca78:	jmp    QWORD PTR [rip+0x8d86]        # 0x415804
  40ca7e:	nop
  40ca7f:	nop
  40ca80:	jmp    QWORD PTR [rip+0x8d6e]        # 0x4157f4
  40ca86:	nop
  40ca87:	nop
  40ca88:	jmp    QWORD PTR [rip+0x8d5e]        # 0x4157ec
  40ca8e:	nop
  40ca8f:	nop
  40ca90:	jmp    QWORD PTR [rip+0x8d4e]        # 0x4157e4
  40ca96:	nop
  40ca97:	nop
  40ca98:	jmp    QWORD PTR [rip+0x8d3e]        # 0x4157dc
  40ca9e:	nop
  40ca9f:	nop
  40caa0:	jmp    QWORD PTR [rip+0x8d26]        # 0x4157cc
  40caa6:	nop
  40caa7:	nop
  40caa8:	jmp    QWORD PTR [rip+0x8d16]        # 0x4157c4
  40caae:	nop
  40caaf:	nop
  40cab0:	jmp    QWORD PTR [rip+0x8cfe]        # 0x4157b4
  40cab6:	nop
  40cab7:	nop
  40cab8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cac0:	mov    rax,QWORD PTR [rip+0x7a39]        # 0x414500
  40cac7:	ret    
  40cac8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cad0:	mov    rax,rcx
  40cad3:	xchg   QWORD PTR [rip+0x7a26],rax        # 0x414500
  40cada:	ret    
  40cadb:	nop
  40cadc:	nop
  40cadd:	nop
  40cade:	nop
  40cadf:	nop
  40cae0:	jmp    QWORD PTR [rip+0x8e6e]        # 0x415954
  40cae6:	nop
  40cae7:	nop
  40cae8:	nop    DWORD PTR [rax+rax*1+0x0]
  40caf0:	jmp    QWORD PTR [rip+0x8cae]        # 0x4157a4
  40caf6:	nop
  40caf7:	nop
  40caf8:	jmp    QWORD PTR [rip+0x8c9e]        # 0x41579c
  40cafe:	nop
  40caff:	nop
  40cb00:	jmp    QWORD PTR [rip+0x8c8e]        # 0x415794
  40cb06:	nop
  40cb07:	nop
  40cb08:	jmp    QWORD PTR [rip+0x8c7e]        # 0x41578c
  40cb0e:	nop
  40cb0f:	nop
  40cb10:	jmp    QWORD PTR [rip+0x8c6e]        # 0x415784
  40cb16:	nop
  40cb17:	nop
  40cb18:	jmp    QWORD PTR [rip+0x8c5e]        # 0x41577c
  40cb1e:	nop
  40cb1f:	nop
  40cb20:	jmp    QWORD PTR [rip+0x8c4e]        # 0x415774
  40cb26:	nop
  40cb27:	nop
  40cb28:	jmp    QWORD PTR [rip+0x8c3e]        # 0x41576c
  40cb2e:	nop
  40cb2f:	nop
  40cb30:	jmp    QWORD PTR [rip+0x8c2e]        # 0x415764
  40cb36:	nop
  40cb37:	nop
  40cb38:	jmp    QWORD PTR [rip+0x8c1e]        # 0x41575c
  40cb3e:	nop
  40cb3f:	nop
  40cb40:	jmp    QWORD PTR [rip+0x8c0e]        # 0x415754
  40cb46:	nop
  40cb47:	nop
  40cb48:	jmp    QWORD PTR [rip+0x8bfe]        # 0x41574c
  40cb4e:	nop
  40cb4f:	nop
  40cb50:	jmp    QWORD PTR [rip+0x8bee]        # 0x415744
  40cb56:	nop
  40cb57:	nop
  40cb58:	jmp    QWORD PTR [rip+0x8bde]        # 0x41573c
  40cb5e:	nop
  40cb5f:	nop
  40cb60:	jmp    QWORD PTR [rip+0x8bce]        # 0x415734
  40cb66:	nop
  40cb67:	nop
  40cb68:	jmp    QWORD PTR [rip+0x8bbe]        # 0x41572c
  40cb6e:	nop
  40cb6f:	nop
  40cb70:	jmp    QWORD PTR [rip+0x8bae]        # 0x415724
  40cb76:	nop
  40cb77:	nop
  40cb78:	jmp    QWORD PTR [rip+0x8b9e]        # 0x41571c
  40cb7e:	nop
  40cb7f:	nop
  40cb80:	jmp    QWORD PTR [rip+0x8b8e]        # 0x415714
  40cb86:	nop
  40cb87:	nop
  40cb88:	jmp    QWORD PTR [rip+0x8b7e]        # 0x41570c
  40cb8e:	nop
  40cb8f:	nop
  40cb90:	jmp    QWORD PTR [rip+0x8b6e]        # 0x415704
  40cb96:	nop
  40cb97:	nop
  40cb98:	jmp    QWORD PTR [rip+0x8b5e]        # 0x4156fc
  40cb9e:	nop
  40cb9f:	nop
  40cba0:	jmp    QWORD PTR [rip+0x8b4e]        # 0x4156f4
  40cba6:	nop
  40cba7:	nop
  40cba8:	jmp    QWORD PTR [rip+0x8b3e]        # 0x4156ec
  40cbae:	nop
  40cbaf:	nop
  40cbb0:	push   r15
  40cbb2:	push   r14
  40cbb4:	push   r13
  40cbb6:	push   r12
  40cbb8:	push   rbp
  40cbb9:	push   rdi
  40cbba:	push   rsi
  40cbbb:	push   rbx
  40cbbc:	sub    rsp,0x288
  40cbc3:	lea    rsi,[rip+0x1476]        # 0x40e040
  40cbca:	mov    rbp,rdx
  40cbcd:	mov    ebx,ecx
  40cbcf:	lea    r12,[rsp+0x80]
  40cbd7:	call   0x406760
  40cbdc:	mov    rax,QWORD PTR [rip+0x3b1d]        # 0x410700
  40cbe3:	mov    rdx,QWORD PTR [rbp+0x0]
  40cbe7:	cmp    ebx,0x1
  40cbea:	mov    ecx,0x20
  40cbef:	mov    rdi,r12
  40cbf2:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40cbf5:	mov    DWORD PTR [rax],0x1
  40cbfb:	mov    QWORD PTR [rip+0x791e],rdx        # 0x414520
  40cc02:	jle    0x40d5ee
  40cc08:	mov    rsi,QWORD PTR [rip+0x3ae1]        # 0x4106f0
  40cc0f:	mov    r15,rsi
  40cc12:	mov    r14,rsi
  40cc15:	mov    QWORD PTR [rsp+0x30],rsi
  40cc1a:	mov    QWORD PTR [rsp+0x38],rsi
  40cc1f:	mov    QWORD PTR [rsp+0x40],rsi
  40cc24:	lea    r8,[rip+0x2b00]        # 0x40f72b
  40cc2b:	mov    rdx,rbp
  40cc2e:	mov    ecx,ebx
  40cc30:	call   0x408810
  40cc35:	cmp    eax,0xffffffff
  40cc38:	je     0x40cef4
  40cc3e:	sub    eax,0x47
  40cc41:	cmp    eax,0x31
  40cc44:	ja     0x40ced5
  40cc4a:	lea    rdx,[rip+0x2c6f]        # 0x40f8c0
  40cc51:	movsxd rax,DWORD PTR [rdx+rax*4]
  40cc55:	add    rdx,rax
  40cc58:	jmp    rdx
  40cc5a:	mov    DWORD PTR [rip+0x63d4],0x1        # 0x413038
  40cc64:	jmp    0x40cc24
  40cc66:	mov    DWORD PTR [rip+0x63f4],0x1        # 0x413064
  40cc70:	jmp    0x40cc24
  40cc72:	mov    rcx,QWORD PTR [r15]
  40cc75:	lea    r8,[rip+0x63c4]        # 0x413040
  40cc7c:	lea    rdx,[rip+0x63c5]        # 0x413048
  40cc83:	call   0x406000
  40cc88:	mov    DWORD PTR [rip+0x63aa],0x1        # 0x41303c
  40cc92:	jmp    0x40cc24
  40cc94:	mov    DWORD PTR [rip+0x63da],0x1        # 0x413078
  40cc9e:	jmp    0x40cc24
  40cca0:	mov    DWORD PTR [rip+0x63d2],0x1        # 0x41307c
  40ccaa:	jmp    0x40cc24
  40ccaf:	mov    DWORD PTR [rip+0x63af],0x1        # 0x413068
  40ccb9:	jmp    0x40cc24
  40ccbe:	mov    rax,QWORD PTR [rip+0x3a2b]        # 0x4106f0
  40ccc5:	mov    rcx,QWORD PTR [rax]
  40ccc8:	call   0x401530
  40cccd:	pxor   xmm1,xmm1
  40ccd1:	ucomisd xmm1,xmm0
  40ccd5:	ja     0x40d728
  40ccdb:	movsd  xmm1,QWORD PTR [rip+0x2cdd]        # 0x40f9c0
  40cce3:	ucomisd xmm0,xmm1
  40cce7:	jb     0x40d02b
  40cced:	subsd  xmm0,xmm1
  40ccf1:	cvttsd2si rax,xmm0
  40ccf6:	mov    QWORD PTR [rip+0x1453],rax        # 0x40e150
  40ccfd:	movabs rax,0x8000000000000000
  40cd07:	xor    QWORD PTR [rip+0x1442],rax        # 0x40e150
  40cd0e:	jmp    0x40cc24
  40cd13:	mov    r13,QWORD PTR [rip+0x39d6]        # 0x4106f0
  40cd1a:	xor    eax,eax
  40cd1c:	or     rcx,0xffffffffffffffff
  40cd20:	mov    rdi,QWORD PTR [r13+0x0]
  40cd24:	repnz scas al,BYTE PTR es:[rdi]
  40cd26:	not    rcx
  40cd29:	call   0x405450
  40cd2e:	mov    rdx,QWORD PTR [r13+0x0]
  40cd32:	mov    rcx,rax
  40cd35:	mov    rdi,rax
  40cd38:	call   0x40c988
  40cd3d:	mov    rdx,QWORD PTR [rsp+0x80]
  40cd45:	test   rdx,rdx
  40cd48:	je     0x40d15d
  40cd4e:	mov    r13,r12
  40cd51:	jmp    0x40cd64
  40cd53:	add    r13,0x10
  40cd57:	mov    rdx,QWORD PTR [r13+0x0]
  40cd5b:	test   rdx,rdx
  40cd5e:	je     0x40d15d
  40cd64:	mov    rcx,rdi
  40cd67:	call   0x40c990
  40cd6c:	test   eax,eax
  40cd6e:	jne    0x40cd53
  40cd70:	mov    eax,DWORD PTR [r13+0x8]
  40cd74:	mov    DWORD PTR [rip+0x13e2],eax        # 0x40e15c
  40cd7a:	jmp    0x40cc24
  40cd7f:	mov    rax,QWORD PTR [rip+0x396a]        # 0x4106f0
  40cd86:	mov    rcx,QWORD PTR [rax]
  40cd89:	call   0x401530
  40cd8e:	pxor   xmm1,xmm1
  40cd92:	ucomisd xmm1,xmm0
  40cd96:	ja     0x40d745
  40cd9c:	movsd  xmm1,QWORD PTR [rip+0x2c1c]        # 0x40f9c0
  40cda4:	ucomisd xmm0,xmm1
  40cda8:	jb     0x40d01a
  40cdae:	subsd  xmm0,xmm1
  40cdb2:	cvttsd2si rax,xmm0
  40cdb7:	mov    QWORD PTR [rip+0x138a],rax        # 0x40e148
  40cdbe:	movabs rax,0x8000000000000000
  40cdc8:	xor    QWORD PTR [rip+0x1379],rax        # 0x40e148
  40cdcf:	jmp    0x40cc24
  40cdd4:	mov    rax,QWORD PTR [rsp+0x30]
  40cdd9:	lea    r9,[rip+0x6270]        # 0x413050
  40cde0:	lea    r8,[rip+0x6271]        # 0x413058
  40cde7:	lea    rdx,[rip+0x6272]        # 0x413060
  40cdee:	mov    rcx,QWORD PTR [rax]
  40cdf1:	call   0x4060a0
  40cdf6:	mov    DWORD PTR [rip+0x624c],0x1        # 0x41304c
  40ce00:	jmp    0x40cc24
  40ce05:	mov    rax,QWORD PTR [rsp+0x40]
  40ce0a:	mov    rcx,QWORD PTR [rax]
  40ce0d:	call   0x401530
  40ce12:	pxor   xmm1,xmm1
  40ce16:	ucomisd xmm1,xmm0
  40ce1a:	ja     0x40d70b
  40ce20:	cvttsd2si eax,xmm0
  40ce24:	cdqe   
  40ce26:	mov    QWORD PTR [rip+0x1313],rax        # 0x40e140
  40ce2d:	jmp    0x40cc24
  40ce32:	mov    rax,QWORD PTR [rip+0x38b7]        # 0x4106f0
  40ce39:	xor    edx,edx
  40ce3b:	mov    r8d,0xa
  40ce41:	mov    rcx,QWORD PTR [rax]
  40ce44:	call   0x40c958
  40ce49:	cmp    eax,0x9
  40ce4c:	mov    DWORD PTR [rip+0x1306],eax        # 0x40e158
  40ce52:	jbe    0x40cc24
  40ce58:	lea    rcx,[rip+0x27ee]        # 0x40f64d
  40ce5f:	mov    edx,eax
  40ce61:	call   0x4053d0
  40ce66:	jmp    0x40cc24
  40ce6b:	mov    rax,QWORD PTR [rsp+0x38]
  40ce70:	mov    rcx,QWORD PTR [rax]
  40ce73:	call   0x40c940
  40ce78:	mov    QWORD PTR [rip+0x61f1],rax        # 0x413070
  40ce7f:	jmp    0x40cc24
  40ce84:	mov    rcx,QWORD PTR [rsi]
  40ce87:	lea    r8,[rip+0x61b2]        # 0x413040
  40ce8e:	lea    rdx,[rip+0x61b3]        # 0x413048
  40ce95:	call   0x406000
  40ce9a:	mov    DWORD PTR [rip+0x6198],0x0        # 0x41303c
  40cea4:	jmp    0x40cc24
  40cea9:	mov    rcx,QWORD PTR [r14]
  40ceac:	lea    r9,[rip+0x619d]        # 0x413050
  40ceb3:	lea    r8,[rip+0x619e]        # 0x413058
  40ceba:	lea    rdx,[rip+0x619f]        # 0x413060
  40cec1:	call   0x4060a0
  40cec6:	mov    DWORD PTR [rip+0x617c],0x0        # 0x41304c
  40ced0:	jmp    0x40cc24
  40ced5:	mov    rdx,QWORD PTR [rip+0x7644]        # 0x414520
  40cedc:	lea    r8,[rip+0x2225]        # 0x40f108
  40cee3:	lea    rcx,[rip+0x26e6]        # 0x40f5d0
  40ceea:	call   0x4053d0
  40ceef:	jmp    0x40cc24
  40cef4:	mov    rax,QWORD PTR [rip+0x3815]        # 0x410710
  40cefb:	movsxd rdx,DWORD PTR [rax]
  40cefe:	sub    ebx,edx
  40cf00:	lea    rsi,[rbp+rdx*8+0x0]
  40cf05:	cmp    ebx,0x2
  40cf08:	je     0x40cf16
  40cf0a:	lea    rcx,[rip+0x2837]        # 0x40f748
  40cf11:	call   0x4053d0
  40cf16:	mov    rbx,QWORD PTR [rsi]
  40cf19:	mov    rdi,QWORD PTR [rsi+0x8]
  40cf1d:	mov    rcx,rbx
  40cf20:	mov    rdx,rdi
  40cf23:	call   0x40c990
  40cf28:	test   eax,eax
  40cf2a:	je     0x40d239
  40cf30:	cmp    DWORD PTR [rip+0x6131],0x1        # 0x413068
  40cf37:	lea    r8,[rsp+0x54]
  40cf3c:	mov    rcx,rbx
  40cf3f:	sbb    edx,edx
  40cf41:	not    edx
  40cf43:	and    edx,0x8
  40cf46:	call   0x406410
  40cf4b:	test   eax,eax
  40cf4d:	jne    0x40d220
  40cf53:	mov    ecx,DWORD PTR [rsp+0x54]
  40cf57:	lea    rdx,[rsp+0x5c]
  40cf5c:	call   0x406508
  40cf61:	test   eax,eax
  40cf63:	jne    0x40d207
  40cf69:	mov    ebx,DWORD PTR [rip+0x11ed]        # 0x40e15c
  40cf6f:	cmp    ebx,0xffffffff
  40cf72:	je     0x40d24a
  40cf78:	mov    rdx,QWORD PTR [rip+0x60f1]        # 0x413070
  40cf7f:	test   rdx,rdx
  40cf82:	je     0x40cf95
  40cf84:	mov    ecx,DWORD PTR [rsp+0x54]
  40cf88:	call   0x405020
  40cf8d:	test   eax,eax
  40cf8f:	jne    0x40d12d
  40cf95:	mov    r8,QWORD PTR [rip+0x60a4]        # 0x413040
  40cf9c:	mov    edx,DWORD PTR [rip+0x60a6]        # 0x413048
  40cfa2:	mov    ecx,DWORD PTR [rsp+0x54]
  40cfa6:	call   0x405fa0
  40cfab:	test   eax,eax
  40cfad:	jne    0x40d7d5
  40cfb3:	mov    edx,DWORD PTR [rip+0x60a7]        # 0x413060
  40cfb9:	test   edx,edx
  40cfbb:	jle    0x40cfe7
  40cfbd:	cmp    DWORD PTR [rsp+0x5c],0x3
  40cfc2:	jne    0x40d7c9
  40cfc8:	mov    r9,QWORD PTR [rip+0x6081]        # 0x413050
  40cfcf:	mov    r8,QWORD PTR [rip+0x6082]        # 0x413058
  40cfd6:	mov    ecx,DWORD PTR [rsp+0x54]
  40cfda:	call   0x405ce0
  40cfdf:	test   eax,eax
  40cfe1:	je     0x40d7d5
  40cfe7:	cmp    DWORD PTR [rip+0x6076],0x1        # 0x413064
  40cfee:	sbb    esi,esi
  40cff0:	not    esi
  40cff2:	and    esi,0x9
  40cff5:	cmp    ebx,0x2
  40cff8:	je     0x40d27c
  40cffe:	jle    0x40d03c
  40d000:	cmp    ebx,0x3
  40d003:	je     0x40d271
  40d009:	cmp    ebx,0x4
  40d00c:	jne    0x40d146
  40d012:	or     esi,0x1100
  40d018:	jmp    0x40d045
  40d01a:	cvttsd2si rax,xmm0
  40d01f:	mov    QWORD PTR [rip+0x1122],rax        # 0x40e148
  40d026:	jmp    0x40cc24
  40d02b:	cvttsd2si rax,xmm0
  40d030:	mov    QWORD PTR [rip+0x1119],rax        # 0x40e150
  40d037:	jmp    0x40cc24
  40d03c:	cmp    ebx,0x1
  40d03f:	jne    0x40d146
  40d045:	lea    r8,[rsp+0x58]
  40d04a:	mov    edx,esi
  40d04c:	mov    rcx,rdi
  40d04f:	call   0x4065d8
  40d054:	test   eax,eax
  40d056:	jne    0x40d1d5
  40d05c:	mov    ecx,DWORD PTR [rsp+0x58]
  40d060:	xor    r8d,r8d
  40d063:	mov    edx,0x100
  40d068:	call   0x406400
  40d06d:	test   eax,eax
  40d06f:	jne    0x40d1bc
  40d075:	cmp    DWORD PTR [rsp+0x5c],0x3
  40d07a:	je     0x40d287
  40d080:	mov    ecx,DWORD PTR [rsp+0x54]
  40d084:	call   0x4047f0
  40d089:	movsxd rcx,eax
  40d08c:	call   0x4062d0
  40d091:	test   eax,eax
  40d093:	jne    0x40d1a3
  40d099:	mov    edx,DWORD PTR [rsp+0x58]
  40d09d:	mov    ecx,DWORD PTR [rsp+0x54]
  40d0a1:	call   0x403060
  40d0a6:	test   eax,eax
  40d0a8:	jne    0x40d18a
  40d0ae:	mov    ecx,DWORD PTR [rsp+0x58]
  40d0b2:	call   0x406578
  40d0b7:	test   eax,eax
  40d0b9:	jne    0x40d171
  40d0bf:	mov    eax,DWORD PTR [rsp+0x5c]
  40d0c3:	mov    ecx,DWORD PTR [rsp+0x54]
  40d0c7:	sub    eax,0x1
  40d0ca:	cmp    eax,0x1
  40d0cd:	jbe    0x40d55a
  40d0d3:	sub    ebx,0x1
  40d0d6:	mov    edx,DWORD PTR [rsp+0x58]
  40d0da:	cmp    ebx,0x1
  40d0dd:	jbe    0x40d61f
  40d0e3:	mov    ecx,DWORD PTR [rsp+0x54]
  40d0e7:	call   0x4045a0
  40d0ec:	test   eax,eax
  40d0ee:	jne    0x40d606
  40d0f4:	mov    ecx,DWORD PTR [rsp+0x54]
  40d0f8:	call   0x4065e8
  40d0fd:	test   eax,eax
  40d0ff:	jne    0x40d1ee
  40d105:	mov    ecx,DWORD PTR [rsp+0x58]
  40d109:	call   0x4065e8
  40d10e:	test   eax,eax
  40d110:	je     0x40d126
  40d112:	lea    rdx,[rip+0x1fa1]        # 0x40f0ba
  40d119:	mov    r8d,0x5ba
  40d11f:	mov    ecx,eax
  40d121:	call   0x405480
  40d126:	xor    ecx,ecx
  40d128:	call   0x40ca18
  40d12d:	lea    rdx,[rip+0x1f86]        # 0x40f0ba
  40d134:	mov    r8d,0x565
  40d13a:	mov    ecx,eax
  40d13c:	call   0x405480
  40d141:	jmp    0x40cf95
  40d146:	mov    edx,DWORD PTR [rip+0x1010]        # 0x40e15c
  40d14c:	lea    rcx,[rip+0x267a]        # 0x40f7cd
  40d153:	call   0x4053d0
  40d158:	jmp    0x40d045
  40d15d:	lea    rcx,[rip+0x26c1]        # 0x40f825
  40d164:	mov    rdx,rdi
  40d167:	call   0x4053d0
  40d16c:	jmp    0x40cc24
  40d171:	lea    rdx,[rip+0x1f42]        # 0x40f0ba
  40d178:	mov    r8d,0x5a0
  40d17e:	mov    ecx,eax
  40d180:	call   0x405480
  40d185:	jmp    0x40d0bf
  40d18a:	lea    rdx,[rip+0x1f29]        # 0x40f0ba
  40d191:	mov    r8d,0x59f
  40d197:	mov    ecx,eax
  40d199:	call   0x405480
  40d19e:	jmp    0x40d0ae
  40d1a3:	lea    rdx,[rip+0x1f10]        # 0x40f0ba
  40d1aa:	mov    r8d,0x59e
  40d1b0:	mov    ecx,eax
  40d1b2:	call   0x405480
  40d1b7:	jmp    0x40d099
  40d1bc:	lea    rdx,[rip+0x1ef7]        # 0x40f0ba
  40d1c3:	mov    r8d,0x592
  40d1c9:	mov    ecx,eax
  40d1cb:	call   0x405480
  40d1d0:	jmp    0x40d075
  40d1d5:	lea    rdx,[rip+0x1ede]        # 0x40f0ba
  40d1dc:	mov    r8d,0x591
  40d1e2:	mov    ecx,eax
  40d1e4:	call   0x405480
  40d1e9:	jmp    0x40d05c
  40d1ee:	lea    rdx,[rip+0x1ec5]        # 0x40f0ba
  40d1f5:	mov    r8d,0x5b9
  40d1fb:	mov    ecx,eax
  40d1fd:	call   0x405480
  40d202:	jmp    0x40d105
  40d207:	lea    rdx,[rip+0x1eac]        # 0x40f0ba
  40d20e:	mov    r8d,0x546
  40d214:	mov    ecx,eax
  40d216:	call   0x405480
  40d21b:	jmp    0x40cf69
  40d220:	lea    rdx,[rip+0x1e93]        # 0x40f0ba
  40d227:	mov    r8d,0x544
  40d22d:	mov    ecx,eax
  40d22f:	call   0x405480
  40d234:	jmp    0x40cf53
  40d239:	lea    rcx,[rip+0x2534]        # 0x40f774
  40d240:	call   0x4053d0
  40d245:	jmp    0x40cf30
  40d24a:	mov    ebx,DWORD PTR [rsp+0x5c]
  40d24e:	lea    eax,[rbx-0x1]
  40d251:	cmp    eax,0x1
  40d254:	ja     0x40cf78
  40d25a:	cmp    DWORD PTR [rip+0xef7],0x0        # 0x40e158
  40d261:	jle    0x40d794
  40d267:	mov    ebx,0x4
  40d26c:	jmp    0x40cf78
  40d271:	or     esi,0x1000
  40d277:	jmp    0x40d045
  40d27c:	or     esi,0x200
  40d282:	jmp    0x40d045
  40d287:	mov    r15d,DWORD PTR [rsp+0x54]
  40d28c:	lea    rdx,[rsp+0x60]
  40d291:	xor    r8d,r8d
  40d294:	mov    edi,DWORD PTR [rsp+0x58]
  40d298:	mov    ecx,r15d
  40d29b:	call   0x406220
  40d2a0:	test   eax,eax
  40d2a2:	jne    0x40d762
  40d2a8:	movsxd rax,DWORD PTR [rsp+0x60]
  40d2ad:	cmp    eax,0x1
  40d2b0:	jle    0x40d52c
  40d2b6:	lea    rcx,[rax*4+0x0]
  40d2be:	call   0x405450
  40d2c3:	xor    edx,edx
  40d2c5:	mov    r8,rax
  40d2c8:	mov    ecx,r15d
  40d2cb:	mov    QWORD PTR [rsp+0x48],rax
  40d2d0:	call   0x406220
  40d2d5:	test   eax,eax
  40d2d7:	jne    0x40d77b
  40d2dd:	cmp    DWORD PTR [rsp+0x60],0x1
  40d2e2:	jle    0x40d522
  40d2e8:	mov    rax,QWORD PTR [rsp+0x48]
  40d2ed:	mov    r12d,0x1
  40d2f3:	lea    r13,[rsp+0x180]
  40d2fb:	lea    r14,[rsp+0x78]
  40d300:	lea    rsi,[rax+0x4]
  40d304:	lea    rax,[rsp+0x70]
  40d309:	mov    QWORD PTR [rsp+0x30],rax
  40d30e:	lea    rax,[rsp+0x68]
  40d313:	mov    QWORD PTR [rsp+0x38],rax
  40d318:	lea    rax,[rsp+0x64]
  40d31d:	mov    QWORD PTR [rsp+0x40],rax
  40d322:	jmp    0x40d40f
  40d327:	nop    WORD PTR [rax+rax*1+0x0]
  40d330:	mov    eax,DWORD PTR [rip+0x5d16]        # 0x41304c
  40d336:	test   eax,eax
  40d338:	jne    0x40d356
  40d33a:	mov    r8,QWORD PTR [rip+0x5d0f]        # 0x413050
  40d341:	mov    edx,DWORD PTR [rip+0x5d19]        # 0x413060
  40d347:	mov    ecx,DWORD PTR [rsi]
  40d349:	call   0x405ca0
  40d34e:	test   eax,eax
  40d350:	je     0x40d3fc
  40d356:	mov    ecx,DWORD PTR [rsi]
  40d358:	xor    r8d,r8d
  40d35b:	mov    rdx,r14
  40d35e:	call   0x4064e0
  40d363:	test   eax,eax
  40d365:	jne    0x40d509
  40d36b:	mov    rax,QWORD PTR [rsp+0x78]
  40d370:	lea    rcx,[rax+0x1]
  40d374:	call   0x405450
  40d379:	mov    ecx,DWORD PTR [rsi]
  40d37b:	mov    r8,rax
  40d37e:	mov    rdx,r14
  40d381:	mov    rbp,rax
  40d384:	call   0x4064e0
  40d389:	test   eax,eax
  40d38b:	jne    0x40d4f0
  40d391:	mov    r8,QWORD PTR [rsp+0x30]
  40d396:	mov    rdx,rbp
  40d399:	mov    ecx,r15d
  40d39c:	call   0x401610
  40d3a1:	test   eax,eax
  40d3a3:	jne    0x40d4d7
  40d3a9:	cmp    DWORD PTR [rip+0x5c9c],0x0        # 0x41304c
  40d3b0:	je     0x40d49a
  40d3b6:	mov    r8,QWORD PTR [rsp+0x38]
  40d3bb:	mov    rdx,rbp
  40d3be:	mov    ecx,edi
  40d3c0:	call   0x401610
  40d3c5:	test   eax,eax
  40d3c7:	jne    0x40d481
  40d3cd:	mov    ecx,DWORD PTR [rsi]
  40d3cf:	mov    rdx,r13
  40d3d2:	call   0x4064e8
  40d3d7:	test   eax,eax
  40d3d9:	jne    0x40d468
  40d3df:	mov    r8,QWORD PTR [rsp+0x40]
  40d3e4:	mov    ecx,DWORD PTR [rsp+0x68]
  40d3e8:	mov    rdx,r13
  40d3eb:	call   0x4065b8
  40d3f0:	test   eax,eax
  40d3f2:	jne    0x40d452
  40d3f4:	mov    rcx,rbp
  40d3f7:	call   0x40c9f0
  40d3fc:	add    r12d,0x1
  40d400:	add    rsi,0x4
  40d404:	cmp    r12d,DWORD PTR [rsp+0x60]
  40d409:	jge    0x40d522
  40d40f:	mov    DWORD PTR [rsp+0x64],0x0
  40d417:	mov    DWORD PTR [rsp+0x68],0x0
  40d41f:	mov    rdx,r13
  40d422:	mov    DWORD PTR [rsp+0x70],0x0
  40d42a:	mov    ecx,DWORD PTR [rsi]
  40d42c:	call   0x4064e8
  40d431:	test   eax,eax
  40d433:	je     0x40d330
  40d439:	lea    rdx,[rip+0x1c7a]        # 0x40f0ba
  40d440:	mov    r8d,0x1a2
  40d446:	mov    ecx,eax
  40d448:	call   0x405480
  40d44d:	jmp    0x40d330
  40d452:	lea    rdx,[rip+0x1c61]        # 0x40f0ba
  40d459:	mov    r8d,0x1b4
  40d45f:	mov    ecx,eax
  40d461:	call   0x405480
  40d466:	jmp    0x40d3f4
  40d468:	lea    rdx,[rip+0x1c4b]        # 0x40f0ba
  40d46f:	mov    r8d,0x1b2
  40d475:	mov    ecx,eax
  40d477:	call   0x405480
  40d47c:	jmp    0x40d3df
  40d481:	lea    rdx,[rip+0x1c32]        # 0x40f0ba
  40d488:	mov    r8d,0x1b1
  40d48e:	mov    ecx,eax
  40d490:	call   0x405480
  40d495:	jmp    0x40d3cd
  40d49a:	mov    r8,QWORD PTR [rip+0x5baf]        # 0x413050
  40d4a1:	mov    edx,DWORD PTR [rip+0x5bb9]        # 0x413060
  40d4a7:	mov    ecx,DWORD PTR [rsp+0x70]
  40d4ab:	call   0x405ca0
  40d4b0:	test   eax,eax
  40d4b2:	jne    0x40d3b6
  40d4b8:	cmp    r15d,DWORD PTR [rsp+0x70]
  40d4bd:	je     0x40d3b6
  40d4c3:	lea    rcx,[rip+0x2326]        # 0x40f7f0
  40d4ca:	mov    rdx,rbp
  40d4cd:	call   0x4053d0
  40d4d2:	jmp    0x40d3b6
  40d4d7:	lea    rdx,[rip+0x1bdc]        # 0x40f0ba
  40d4de:	mov    r8d,0x1a8
  40d4e4:	mov    ecx,eax
  40d4e6:	call   0x405480
  40d4eb:	jmp    0x40d3a9
  40d4f0:	lea    rdx,[rip+0x1bc3]        # 0x40f0ba
  40d4f7:	mov    r8d,0x1a6
  40d4fd:	mov    ecx,eax
  40d4ff:	call   0x405480
  40d504:	jmp    0x40d391
  40d509:	lea    rdx,[rip+0x1baa]        # 0x40f0ba
  40d510:	mov    r8d,0x1a4
  40d516:	mov    ecx,eax
  40d518:	call   0x405480
  40d51d:	jmp    0x40d36b
  40d522:	mov    rcx,QWORD PTR [rsp+0x48]
  40d527:	call   0x40c9f0
  40d52c:	mov    edx,DWORD PTR [rsp+0x58]
  40d530:	mov    ecx,DWORD PTR [rsp+0x54]
  40d534:	call   0x401f30
  40d539:	test   eax,eax
  40d53b:	je     0x40d080
  40d541:	lea    rdx,[rip+0x1b72]        # 0x40f0ba
  40d548:	mov    r8d,0x599
  40d54e:	mov    ecx,eax
  40d550:	call   0x405480
  40d555:	jmp    0x40d080
  40d55a:	call   0x403410
  40d55f:	test   eax,eax
  40d561:	je     0x40d0d3
  40d567:	lea    rax,[rsp+0x180]
  40d56f:	mov    ecx,DWORD PTR [rsp+0x54]
  40d573:	lea    rdx,[rsp+0x68]
  40d578:	lea    r9,[rsp+0x70]
  40d57d:	lea    r8,[rsp+0x78]
  40d582:	mov    QWORD PTR [rsp+0x20],rax
  40d587:	call   0x403330
  40d58c:	test   eax,eax
  40d58e:	jne    0x40d6f2
  40d594:	mov    r9,QWORD PTR [rsp+0x78]
  40d599:	mov    r8,QWORD PTR [rsp+0x68]
  40d59e:	mov    edx,DWORD PTR [rsp+0x58]
  40d5a2:	mov    ecx,DWORD PTR [rsp+0x54]
  40d5a6:	call   0x404520
  40d5ab:	test   eax,eax
  40d5ad:	jne    0x40d6d9
  40d5b3:	mov    r9,QWORD PTR [rsp+0x180]
  40d5bb:	mov    r8,QWORD PTR [rsp+0x70]
  40d5c0:	mov    edx,DWORD PTR [rsp+0x58]
  40d5c4:	mov    ecx,DWORD PTR [rsp+0x54]
  40d5c8:	call   0x403540
  40d5cd:	test   eax,eax
  40d5cf:	je     0x40d0f4
  40d5d5:	lea    rdx,[rip+0x1ade]        # 0x40f0ba
  40d5dc:	mov    r8d,0x5ac
  40d5e2:	mov    ecx,eax
  40d5e4:	call   0x405480
  40d5e9:	jmp    0x40d0f4
  40d5ee:	lea    r8,[rip+0x1b13]        # 0x40f108
  40d5f5:	lea    rcx,[rip+0x1fd4]        # 0x40f5d0
  40d5fc:	call   0x4053d0
  40d601:	jmp    0x40cc08
  40d606:	lea    rdx,[rip+0x1aad]        # 0x40f0ba
  40d60d:	mov    r8d,0x5b6
  40d613:	mov    ecx,eax
  40d615:	call   0x405480
  40d61a:	jmp    0x40d0f4
  40d61f:	mov    ecx,edx
  40d621:	call   0x403410
  40d626:	test   eax,eax
  40d628:	je     0x40d7c0
  40d62e:	lea    rax,[rsp+0x180]
  40d636:	mov    ecx,DWORD PTR [rsp+0x58]
  40d63a:	lea    rdx,[rsp+0x68]
  40d63f:	lea    r9,[rsp+0x70]
  40d644:	lea    r8,[rsp+0x78]
  40d649:	mov    QWORD PTR [rsp+0x20],rax
  40d64e:	call   0x403330
  40d653:	test   eax,eax
  40d655:	jne    0x40d6ad
  40d657:	mov    r9,QWORD PTR [rsp+0x78]
  40d65c:	mov    r8,QWORD PTR [rsp+0x68]
  40d661:	mov    edx,DWORD PTR [rsp+0x58]
  40d665:	mov    ecx,DWORD PTR [rsp+0x54]
  40d669:	call   0x404520
  40d66e:	test   eax,eax
  40d670:	jne    0x40d6c3
  40d672:	mov    r9,QWORD PTR [rsp+0x180]
  40d67a:	mov    r8,QWORD PTR [rsp+0x70]
  40d67f:	mov    edx,DWORD PTR [rsp+0x58]
  40d683:	mov    ecx,DWORD PTR [rsp+0x54]
  40d687:	call   0x403540
  40d68c:	test   eax,eax
  40d68e:	je     0x40d0f4
  40d694:	lea    rdx,[rip+0x1a1f]        # 0x40f0ba
  40d69b:	mov    r8d,0x5b4
  40d6a1:	mov    ecx,eax
  40d6a3:	call   0x405480
  40d6a8:	jmp    0x40d0f4
  40d6ad:	lea    rdx,[rip+0x1a06]        # 0x40f0ba
  40d6b4:	mov    r8d,0x5b2
  40d6ba:	mov    ecx,eax
  40d6bc:	call   0x405480
  40d6c1:	jmp    0x40d657
  40d6c3:	lea    rdx,[rip+0x19f0]        # 0x40f0ba
  40d6ca:	mov    r8d,0x5b3
  40d6d0:	mov    ecx,eax
  40d6d2:	call   0x405480
  40d6d7:	jmp    0x40d672
  40d6d9:	lea    rdx,[rip+0x19da]        # 0x40f0ba
  40d6e0:	mov    r8d,0x5ab
  40d6e6:	mov    ecx,eax
  40d6e8:	call   0x405480
  40d6ed:	jmp    0x40d5b3
  40d6f2:	lea    rdx,[rip+0x19c1]        # 0x40f0ba
  40d6f9:	mov    r8d,0x5aa
  40d6ff:	mov    ecx,eax
  40d701:	call   0x405480
  40d706:	jmp    0x40d594
  40d70b:	lea    rcx,[rip+0x1fde]        # 0x40f6f0
  40d712:	movsd  QWORD PTR [rsp+0x48],xmm0
  40d718:	call   0x4053d0
  40d71d:	movsd  xmm0,QWORD PTR [rsp+0x48]
  40d723:	jmp    0x40ce20
  40d728:	lea    rcx,[rip+0x1f41]        # 0x40f670
  40d72f:	movsd  QWORD PTR [rsp+0x48],xmm0
  40d735:	call   0x4053d0
  40d73a:	movsd  xmm0,QWORD PTR [rsp+0x48]
  40d740:	jmp    0x40ccdb
  40d745:	lea    rcx,[rip+0x1f64]        # 0x40f6b0
  40d74c:	movsd  QWORD PTR [rsp+0x48],xmm0
  40d752:	call   0x4053d0
  40d757:	movsd  xmm0,QWORD PTR [rsp+0x48]
  40d75d:	jmp    0x40cd9c
  40d762:	lea    rdx,[rip+0x1951]        # 0x40f0ba
  40d769:	mov    r8d,0x197
  40d76f:	mov    ecx,eax
  40d771:	call   0x405480
  40d776:	jmp    0x40d2a8
  40d77b:	lea    rdx,[rip+0x1938]        # 0x40f0ba
  40d782:	mov    r8d,0x19a
  40d788:	mov    ecx,eax
  40d78a:	call   0x405480
  40d78f:	jmp    0x40d2dd
  40d794:	cmp    DWORD PTR [rip+0x58e1],0x1        # 0x41307c
  40d79b:	je     0x40d267
  40d7a1:	cmp    QWORD PTR [rip+0x58c7],0x0        # 0x413070
  40d7a9:	je     0x40cf95
  40d7af:	mov    rdx,QWORD PTR [rip+0x58ba]        # 0x413070
  40d7b6:	mov    ebx,0x4
  40d7bb:	jmp    0x40cf84
  40d7c0:	mov    edx,DWORD PTR [rsp+0x58]
  40d7c4:	jmp    0x40d0e3
  40d7c9:	lea    rcx,[rip+0x1fc8]        # 0x40f798
  40d7d0:	call   0x4053d0
  40d7d5:	mov    ecx,0x1
  40d7da:	call   0x40ca18
  40d7df:	nop
  40d7e0:	(bad)  
  40d7e1:	(bad)  
  40d7e2:	(bad)  
  40d7e3:	(bad)  
  40d7e4:	(bad)  
  40d7e5:	(bad)  
  40d7e6:	(bad)  
  40d7e7:	inc    DWORD PTR [rax]
  40d7e9:	add    BYTE PTR [rax],al
  40d7eb:	add    BYTE PTR [rax],al
  40d7ed:	add    BYTE PTR [rax],al
  40d7ef:	add    bh,bh
  40d7f1:	(bad)  
  40d7f2:	(bad)  
  40d7f3:	(bad)  
  40d7f4:	(bad)  
  40d7f5:	(bad)  
  40d7f6:	(bad)  
  40d7f7:	inc    DWORD PTR [rax]
  40d7f9:	add    BYTE PTR [rax],al
  40d7fb:	add    BYTE PTR [rax],al
  40d7fd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000040e000 <.data>:
  40e000:	or     al,BYTE PTR [rax]
	...
  40e03e:	add    BYTE PTR [rax],al
  40e040:	cmp    al,bh
  40e042:	add    BYTE PTR [rax],al
  40e045:	add    BYTE PTR [rax],al
  40e047:	add    BYTE PTR [rcx],al
  40e049:	add    BYTE PTR [rax],al
  40e04b:	add    BYTE PTR [rax],al
  40e04d:	add    BYTE PTR [rax],al
  40e04f:	add    BYTE PTR [rdx],bh
  40e051:	clc    
  40e052:	add    BYTE PTR [rax],al
  40e055:	add    BYTE PTR [rax],al
  40e057:	add    BYTE PTR [rcx],al
  40e059:	add    BYTE PTR [rax],al
  40e05b:	add    BYTE PTR [rax],al
  40e05d:	add    BYTE PTR [rax],al
  40e05f:	add    BYTE PTR [rdx-0x8],al
  40e062:	add    BYTE PTR [rax],al
  40e065:	add    BYTE PTR [rax],al
  40e067:	add    BYTE PTR [rdx],al
  40e069:	add    BYTE PTR [rax],al
  40e06b:	add    BYTE PTR [rax],al
  40e06d:	add    BYTE PTR [rax],al
  40e06f:	add    BYTE PTR [rax+rdi*8+0x40],al
  40e073:	add    BYTE PTR [rax],al
  40e075:	add    BYTE PTR [rax],al
  40e077:	add    BYTE PTR [rdx],al
  40e079:	add    BYTE PTR [rax],al
  40e07b:	add    BYTE PTR [rax],al
  40e07d:	add    BYTE PTR [rax],al
  40e07f:	add    BYTE PTR [rdx-0x8],dl
  40e082:	add    BYTE PTR [rax],al
  40e085:	add    BYTE PTR [rax],al
  40e087:	add    BYTE PTR [rdx],al
  40e089:	add    BYTE PTR [rax],al
  40e08b:	add    BYTE PTR [rax],al
  40e08d:	add    BYTE PTR [rax],al
  40e08f:	add    BYTE PTR [rax-0x8],ah
  40e092:	add    BYTE PTR [rax],al
  40e095:	add    BYTE PTR [rax],al
  40e097:	add    BYTE PTR [rbx],al
  40e099:	add    BYTE PTR [rax],al
  40e09b:	add    BYTE PTR [rax],al
  40e09d:	add    BYTE PTR [rax],al
  40e09f:	add    BYTE PTR [rdx-0x8],ah
  40e0a2:	add    BYTE PTR [rax],al
  40e0a5:	add    BYTE PTR [rax],al
  40e0a7:	add    BYTE PTR [rbx],al
  40e0a9:	add    BYTE PTR [rax],al
  40e0ab:	add    BYTE PTR [rax],al
  40e0ad:	add    BYTE PTR [rax],al
  40e0af:	add    BYTE PTR [rdi-0x8],ah
  40e0b2:	add    BYTE PTR [rax],al
  40e0b5:	add    BYTE PTR [rax],al
  40e0b7:	add    BYTE PTR [rbx],al
  40e0b9:	add    BYTE PTR [rax],al
  40e0bb:	add    BYTE PTR [rax],al
  40e0bd:	add    BYTE PTR [rax],al
  40e0bf:	add    BYTE PTR [rax-0x8],dh
  40e0c2:	add    BYTE PTR [rax],al
  40e0c5:	add    BYTE PTR [rax],al
  40e0c7:	add    BYTE PTR [rbx],al
  40e0c9:	add    BYTE PTR [rax],al
  40e0cb:	add    BYTE PTR [rax],al
  40e0cd:	add    BYTE PTR [rax],al
  40e0cf:	add    BYTE PTR [rax-0x8],bh
  40e0d2:	add    BYTE PTR [rax],al
  40e0d5:	add    BYTE PTR [rax],al
  40e0d7:	add    BYTE PTR [rbx],al
  40e0d9:	add    BYTE PTR [rax],al
  40e0db:	add    BYTE PTR [rax],al
  40e0dd:	add    BYTE PTR [rax],al
  40e0df:	add    BYTE PTR [rcx+0x40f8],al
  40e0e5:	add    BYTE PTR [rax],al
  40e0e7:	add    BYTE PTR [rax+rax*1],al
  40e0ea:	add    BYTE PTR [rax],al
  40e0ec:	add    BYTE PTR [rax],al
  40e0ee:	add    BYTE PTR [rax],al
  40e0f0:	cmp    eax,0x40
  40e0f3:	add    BYTE PTR [rax],al
  40e0f5:	add    BYTE PTR [rax],al
  40e0f7:	add    BYTE PTR [rax+rax*1],al
  40e0fa:	add    BYTE PTR [rax],al
  40e0fc:	add    BYTE PTR [rax],al
  40e0fe:	add    BYTE PTR [rax],al
  40e100:	mov    eax,?
  40e102:	add    BYTE PTR [rax],al
  40e105:	add    BYTE PTR [rax],al
  40e107:	add    BYTE PTR [rax+rax*1],al
  40e10a:	add    BYTE PTR [rax],al
  40e10c:	add    BYTE PTR [rax],al
  40e10e:	add    BYTE PTR [rax],al
  40e110:	movabs ds:0x4000000000040f8,eax
  40e119:	add    BYTE PTR [rax],al
  40e11b:	add    BYTE PTR [rax],al
  40e11d:	add    BYTE PTR [rax],al
  40e11f:	add    BYTE PTR [rbx+0x40f8],dh
  40e125:	add    BYTE PTR [rax],al
  40e127:	add    BYTE PTR [rax+rax*1],al
	...
  40e13e:	add    BYTE PTR [rax],al
  40e140:	icebp  
  40e141:	add    eax,DWORD PTR [rax]
  40e143:	add    BYTE PTR [rax],al
  40e145:	add    BYTE PTR [rax],al
  40e147:	add    BYTE PTR [rax],al
  40e149:	add    BYTE PTR [rax+0x0],al
  40e14c:	add    BYTE PTR [rax],al
  40e14e:	add    BYTE PTR [rax],al
  40e150:	rex
  40e151:	rex.WXB
  40e152:	rex.WR add BYTE PTR [rax],r8b
  40e155:	add    BYTE PTR [rax],al
  40e157:	add    bh,bh
  40e159:	(bad)  
  40e15a:	(bad)  
  40e15b:	(bad)  
  40e15c:	(bad)  
  40e15d:	(bad)  
  40e15e:	(bad)  
  40e15f:	inc    DWORD PTR [rax]
	...
  40e17d:	add    BYTE PTR [rax],al
  40e17f:	add    al,bh
  40e181:	xlat   BYTE PTR ds:[rbx]
  40e182:	add    BYTE PTR [rax],al
	...
  40e18d:	add    BYTE PTR [rax],al
  40e18f:	add    bh,bh
  40e191:	(bad)  
  40e192:	(bad)  
  40e193:	(bad)  
  40e194:	(bad)  
  40e195:	(bad)  
  40e196:	(bad)  
  40e197:	inc    DWORD PTR [rax]
  40e199:	add    BYTE PTR [rax],al
  40e19b:	add    BYTE PTR [rax],al
  40e19d:	add    BYTE PTR [rax],al
  40e19f:	add    bh,bh
	...
  40e1ad:	add    BYTE PTR [rax],al
  40e1af:	add    BYTE PTR [rdx],al
	...
  40e1bd:	add    BYTE PTR [rax],al
  40e1bf:	add    BYTE PTR [rip+0xffffffffce000000],dh        # 0xffffffffce40e1c5
  40e1c5:	sti    
  40e1c6:	(bad)  
  40e1c7:	dec    ebx
  40e1c9:	add    eax,DWORD PTR [rax]
  40e1cb:	add    BYTE PTR [rcx],al
  40e1cd:	add    BYTE PTR [rax],al
  40e1cf:	add    BYTE PTR [rax],al
  40e1d1:	add    BYTE PTR [rax],al
  40e1d3:	add    BYTE PTR [rsi],cl
	...
  40e1dd:	add    BYTE PTR [rax],al
  40e1df:	add    bh,bh
  40e1e1:	(bad)  
  40e1e2:	(bad)  
  40e1e3:	(bad)  
  40e1e4:	(bad)  
  40e1e5:	(bad)  
  40e1e6:	(bad)  
  40e1e7:	(bad)  
  40e1e8:	(bad)  
  40e1e9:	(bad)  
  40e1ea:	(bad)  
  40e1eb:	inc    DWORD PTR [rax]
  40e1ed:	add    BYTE PTR [rax],al
  40e1ef:	add    BYTE PTR [rip+0x40ff],dl        # 0x4122f4
  40e1f5:	add    BYTE PTR [rax],al
  40e1f7:	add    BYTE PTR [rdi],bh
  40e1f9:	add    BYTE PTR [rax],al
  40e1fb:	add    BYTE PTR [rcx],al
  40e1fd:	add    BYTE PTR [rax],al
  40e1ff:	add    BYTE PTR [rcx],al
	...
  40e20d:	add    BYTE PTR [rax],al
  40e20f:	add    bh,bh
  40e211:	(bad)  
  40e212:	(bad)  
  40e213:	inc    DWORD PTR [rax]
	...
  40e221:	cmp    eax,DWORD PTR [rcx+0x0]
	...
  40e230:	ror    dl,0x40
  40e233:	add    BYTE PTR [rax],al
  40e235:	add    BYTE PTR [rax],al
  40e237:	add    al,dl
  40e239:	retf   0x40
  40e23c:	add    BYTE PTR [rax],al
  40e23e:	add    BYTE PTR [rax],al
  40e240:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
	...
  40e24e:	add    BYTE PTR [rax],al
  40e250:	int    0x5d
  40e252:	and    dl,dl
  40e254:	data16 (bad) 
  40e256:	(bad)  
  40e257:	inc    DWORD PTR [rax]
  40e259:	add    BYTE PTR [rax],al
  40e25b:	add    BYTE PTR [rax],al
  40e25d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000000040f000 <.rdata>:
  40f000:	add    BYTE PTR [rsi],ah
  40f002:	(bad)  
  40f003:	jmp    QWORD PTR [rbx-0x5c0000db]
  40f009:	and    eax,0x25a3ffff
  40f00e:	(bad)  
  40f00f:	push   rax
  40f011:	and    eax,0x25a3ffff
  40f016:	(bad)  
  40f017:	jmp    rax
  40f019:	and    eax,0x25a3ffff
  40f01e:	(bad)  
  40f01f:	jmp    QWORD PTR [rbx-0x2f0000db]
  40f025:	and    eax,0x25a3ffff
  40f02a:	(bad)  
  40f02b:	jmp    QWORD PTR [rbx-0x5c0000db]
  40f031:	and    eax,0x25c0ffff
  40f036:	(bad)  
  40f037:	jmp    QWORD PTR [rbx-0x5c0000db]
  40f03d:	and    eax,0x25a3ffff
  40f042:	(bad)  
  40f043:	jmp    QWORD PTR [rbx-0x5c0000db]
  40f049:	and    eax,0x25a3ffff
  40f04e:	(bad)  
  40f04f:	jmp    QWORD PTR [rbx-0x5c0000db]
  40f055:	and    eax,0x25a3ffff
  40f05a:	(bad)  
  40f05b:	jmp    QWORD PTR [rbx-0x5c0000db]
  40f061:	and    eax,0x25a3ffff
  40f066:	(bad)  
  40f067:	jmp    QWORD PTR [rbx-0x5c0000db]
  40f06d:	and    eax,0x25a3ffff
  40f072:	(bad)  
  40f073:	jmp    QWORD PTR [rbx-0x5c0000db]
  40f079:	and    eax,0x25a3ffff
  40f07e:	(bad)  
  40f07f:	inc    DWORD PTR [rax]
  40f081:	es (bad) 
  40f083:	jmp    QWORD PTR [rbx-0x5c0000db]
  40f089:	and    eax,0x25a3ffff
  40f08e:	(bad)  
  40f08f:	push   rax
  40f091:	and    eax,0x25a3ffff
  40f096:	(bad)  
  40f097:	jmp    rax
  40f099:	and    eax,0x25a3ffff
  40f09e:	(bad)  
  40f09f:	jmp    QWORD PTR [rbx-0x2f0000db]
  40f0a5:	and    eax,0x25a3ffff
  40f0aa:	(bad)  
  40f0ab:	jmp    QWORD PTR [rbx-0x5c0000db]
  40f0b1:	and    eax,0x25c0ffff
  40f0b6:	(bad)  
  40f0b7:	jmp    FWORD PTR [rdi]
  40f0b9:	add    BYTE PTR [rsi+0x63],ch
  40f0bc:	movsxd ebp,DWORD PTR [rdi+0x70]
  40f0bf:	jns    0x40f0ef
  40f0c1:	movsxd eax,DWORD PTR [rax]
  40f0c3:	add    BYTE PTR [rax],al
  40f0c5:	add    BYTE PTR [rax],al
  40f0c7:	add    BYTE PTR [rdi+0x6f],cl
  40f0ca:	jo     0x40f13f
  40f0cc:	sub    al,0x20
  40f0ce:	outs   dx,BYTE PTR ds:[rsi]
  40f0cf:	outs   dx,DWORD PTR ds:[rsi]
  40f0d0:	and    BYTE PTR [rcx+rbp*2+0x6d],ah
  40f0d4:	outs   dx,BYTE PTR gs:[rsi]
  40f0d6:	jae    0x40f141
  40f0d8:	outs   dx,DWORD PTR ds:[rsi]
  40f0d9:	outs   dx,BYTE PTR ds:[rsi]
  40f0da:	and    BYTE PTR [rcx+0x6e],ch
  40f0dd:	and    BYTE PTR [rdi+0x75],ch
  40f0e0:	je     0x40f152
  40f0e2:	jne    0x40f158
  40f0e4:	and    BYTE PTR [rcx+0x73],ah
  40f0e7:	jae    0x40f158
  40f0e9:	movsxd ebp,DWORD PTR [rcx+0x61]
  40f0ec:	je     0x40f153
  40f0ee:	and    BYTE PTR fs:[rdi+0x69],dh
  40f0f2:	je     0x40f15c
  40f0f4:	and    BYTE PTR [rcx+0x6e],ch
  40f0f7:	jo     0x40f16e
  40f0f9:	je     0x40f11b
  40f0fb:	imul   ebp,DWORD PTR fs:[rbp+0x69],0x64252064
  40f103:	add    BYTE PTR [rax],al
  40f105:	add    BYTE PTR [rax],al
  40f107:	add    BYTE PTR [rax],ah
  40f109:	and    BYTE PTR [rbx+0x2d],bl
  40f10c:	imul   esp,DWORD PTR [rax],0x6e
  40f10f:	pop    rbp
  40f110:	and    BYTE PTR [rax],ah
  40f112:	and    BYTE PTR [rax],ah
  40f114:	jae    0x40f186
  40f116:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40f11a:	jns    0x40f13c
  40f11c:	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  40f120:	and    BYTE PTR [rdi+0x66],ch
  40f123:	and    BYTE PTR [rsi+0x65],ch
  40f126:	je     0x40f16b
  40f128:	rex.R
  40f129:	rex.RX and BYTE PTR [rsi+0x6f],r12b
  40f12d:	jb     0x40f19c
  40f12f:	(bad)  
  40f130:	je     0x40f152
  40f132:	outs   dx,WORD PTR ds:[rsi]
  40f134:	jb     0x40f156
  40f136:	outs   dx,DWORD PTR ds:[rsi]
  40f137:	jne    0x40f1ad
  40f139:	jo     0x40f1b0
  40f13b:	je     0x40f15d
  40f13d:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x6420
  40f144:	gs data16 (bad) 
  40f147:	jne    0x40f1b5
  40f149:	je     0x40f16b
  40f14b:	jae    0x40f1ae
  40f14d:	ins    DWORD PTR es:[rdi],dx
  40f14e:	and    BYTE PTR gs:[rcx+0x73],ah
  40f152:	and    BYTE PTR [rcx+0x6e],ch
  40f155:	jo     0x40f1cc
  40f157:	je     0x40f163
  40f159:	or     DWORD PTR [rax],esp
  40f15b:	and    BYTE PTR [rax],ah
  40f15d:	and    BYTE PTR [rcx],dh
  40f15f:	and    BYTE PTR [rbx+0x6c],ah
  40f162:	(bad)  
  40f163:	jae    0x40f1d8
  40f165:	imul   esp,DWORD PTR [rbx+0x2c],0x36203220
  40f16c:	xor    al,0x2d
  40f16e:	(bad)  
  40f16f:	imul   esi,DWORD PTR [rax+riz*1+0x6f],0x65736666
  40f177:	je     0x40f1a5
  40f179:	and    BYTE PTR [rbx],dh
  40f17b:	and    BYTE PTR [rsi+0x65],ch
  40f17e:	je     0x40f1c3
  40f180:	rex.R
  40f181:	rex.RX sub eax,0x34202c34
  40f187:	and    BYTE PTR [rsi+0x65],ch
  40f18a:	je     0x40f1cf
  40f18c:	rex.R
  40f18d:	rex.RX sub eax,0x6c632034
  40f193:	(bad)  
  40f194:	jae    0x40f209
  40f196:	imul   esp,DWORD PTR [rbx+0x20],0x65646f6d
  40f19d:	ins    BYTE PTR es:[rdi],dx
  40f19e:	or     ah,BYTE PTR [rax]
  40f1a0:	and    BYTE PTR [rbx+0x2d],bl
  40f1a3:	and    BYTE PTR fs:[rsi+0x5d],ch
  40f1a7:	and    BYTE PTR [rax],ah
  40f1a9:	and    BYTE PTR [rax],ah
  40f1ab:	jae    0x40f212
  40f1ad:	je     0x40f1cf
  40f1af:	fs gs data16 ins BYTE PTR es:[rdi],dx
  40f1b3:	(bad)  
  40f1b4:	je     0x40f21f
  40f1b6:	outs   dx,DWORD PTR ds:[rsi]
  40f1b7:	outs   dx,BYTE PTR ds:[rsi]
  40f1b8:	and    BYTE PTR [rbx+0x6f],ah
  40f1bb:	ins    DWORD PTR es:[rdi],dx
  40f1bc:	jo     0x40f230
  40f1be:	gs jae 0x40f234
  40f1c1:	imul   ebp,DWORD PTR [rdi+0x6e],0x76656c20
  40f1c8:	gs ins BYTE PTR es:[rdi],dx
  40f1ca:	sub    al,0x20
  40f1cc:	fs gs data16 (bad) 
  40f1d0:	jne    0x40f23e
  40f1d2:	je     0x40f1f4
  40f1d4:	jae    0x40f237
  40f1d6:	ins    DWORD PTR es:[rdi],dx
  40f1d7:	and    BYTE PTR gs:[rcx+0x73],ah
  40f1db:	and    BYTE PTR [rcx+0x6e],ch
  40f1de:	jo     0x40f255
  40f1e0:	je     0x40f202
  40f1e2:	sub    BYTE PTR [rax],dh
  40f1e4:	cmp    eax,0x656e6f6e
  40f1e9:	and    BYTE PTR [rcx],bh
  40f1eb:	cmp    eax,0x2978616d
  40f1f0:	or     ah,BYTE PTR [rax]
  40f1f2:	and    BYTE PTR [rbx+0x2d],bl
  40f1f5:	jae    0x40f254
  40f1f7:	and    BYTE PTR [rax],ah
  40f1f9:	and    BYTE PTR [rax],ah
  40f1fb:	and    BYTE PTR [rax],ah
  40f1fd:	(bad)  
  40f1fe:	fs and BYTE PTR fs:[rbx+0x68],dh
  40f203:	jne    0x40f26b
  40f205:	data16 ins BYTE PTR es:[rdi],dx
  40f207:	and    BYTE PTR gs:[rdi+0x70],ch
  40f20b:	je     0x40f276
  40f20d:	outs   dx,DWORD PTR ds:[rsi]
  40f20e:	outs   dx,BYTE PTR ds:[rsi]
  40f20f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40f213:	fs gs data16 ins BYTE PTR es:[rdi],dx
  40f217:	(bad)  
  40f218:	je     0x40f283
  40f21a:	outs   dx,DWORD PTR ds:[rsi]
  40f21b:	outs   dx,BYTE PTR ds:[rsi]
  40f21c:	and    BYTE PTR [rbx+0x6f],ah
  40f21f:	ins    DWORD PTR es:[rdi],dx
  40f220:	jo     0x40f294
  40f222:	gs jae 0x40f298
  40f225:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b20200a
  40f22c:	sub    eax,0x68632063
  40f231:	jne    0x40f2a1
  40f233:	imul   esi,DWORD PTR [rbx+0x70],0x65
  40f237:	movsxd ebx,DWORD PTR [rbp+0x20]
  40f23a:	jae    0x40f2ac
  40f23c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40f240:	jns    0x40f262
  40f242:	movsxd ebp,DWORD PTR [rax+0x75]
  40f245:	outs   dx,BYTE PTR ds:[rsi]
  40f246:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  40f24a:	and    BYTE PTR [rsi+0x6f],ah
  40f24d:	jb     0x40f26f
  40f24f:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  40f257:	outs   dx,BYTE PTR ds:[rsi]
  40f258:	jae    0x40f286
  40f25a:	and    BYTE PTR [rbp+0x2e],ah
  40f25d:	and    BYTE PTR cs:[edx],ah
  40f261:	imul   ebp,DWORD PTR fs:[rbp+0x31],0x2c314e2f
  40f269:	imul   ebp,DWORD PTR fs:[rbp+0x32],0x2c324e2f
  40f271:	cs cs and cl,BYTE PTR cs:[rdx]
  40f276:	and    BYTE PTR [rax],ah
  40f278:	pop    rbx
  40f279:	sub    eax,0x20205d75
  40f27e:	and    BYTE PTR [rax],ah
  40f280:	and    BYTE PTR [rax],ah
  40f282:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40f285:	jbe    0x40f2ec
  40f287:	jb     0x40f2fd
  40f289:	and    BYTE PTR [rbp+0x6e],dh
  40f28c:	ins    BYTE PTR es:[rdi],dx
  40f28d:	imul   ebp,DWORD PTR [rbp+0x69],0x20646574
  40f294:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  40f29c:	outs   dx,BYTE PTR ds:[rsi]
  40f29d:	jae    0x40f2bf
  40f29f:	je     0x40f310
  40f2a1:	and    BYTE PTR [rsi+0x69],ah
  40f2a4:	js     0x40f30b
  40f2a6:	fs sub eax,0x657a6973
  40f2ac:	and    BYTE PTR [rcx+rbp*2+0x6d],ah
  40f2b0:	outs   dx,BYTE PTR gs:[rsi]
  40f2b2:	jae    0x40f31d
  40f2b4:	outs   dx,DWORD PTR ds:[rsi]
  40f2b5:	outs   dx,BYTE PTR ds:[rsi]
  40f2b6:	jae    0x40f2d8
  40f2b8:	imul   ebp,DWORD PTR [rsi+0x20],0x7074756f
  40f2bf:	jne    0x40f335
  40f2c1:	and    BYTE PTR [rbx+0x6f],ah
  40f2c4:	jo     0x40f33f
  40f2c6:	or     ah,BYTE PTR [rax]
  40f2c8:	and    BYTE PTR [rbx+0x2d],bl
  40f2cb:	ja     0x40f32a
  40f2cd:	and    BYTE PTR [rax],ah
  40f2cf:	and    BYTE PTR [rax],ah
  40f2d1:	and    BYTE PTR [rax],ah
  40f2d3:	ja     0x40f347
  40f2d5:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6c6f6877
  40f2dd:	and    BYTE PTR gs:[rdi+0x75],ch
  40f2e1:	je     0x40f353
  40f2e3:	jne    0x40f359
  40f2e5:	and    BYTE PTR [rsi+0x69],ah
  40f2e8:	ins    BYTE PTR es:[rdi],dx
  40f2e9:	and    BYTE PTR gs:[rsi+0x72],ah
  40f2ed:	outs   dx,DWORD PTR ds:[rsi]
  40f2ee:	ins    DWORD PTR es:[rdi],dx
  40f2ef:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  40f2f3:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x73
  40f2f8:	and    BYTE PTR [rsi+0x65],ch
  40f2fb:	je     0x40f340
  40f2fd:	rex.R
  40f2fe:	rex.RX and BYTE PTR [rdi+0x6e],r13b
  40f302:	and    BYTE PTR [rbx+0x6c],ah
  40f305:	outs   dx,DWORD PTR ds:[rsi]
  40f306:	jae    0x40f36d
  40f308:	or     ah,BYTE PTR [rax]
  40f30a:	and    BYTE PTR [rbx+0x2d],bl
  40f30d:	jbe    0x40f32f
  40f30f:	jbe    0x40f372
  40f311:	jb     0x40f344
  40f313:	sub    al,0x2e
  40f315:	cs cs pop rbp
  40f318:	and    BYTE PTR [rcx+0x6e],ch
  40f31b:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40f31f:	and    BYTE PTR gs:[rcx+riz*2+0x74],ah
  40f324:	(bad)  
  40f325:	and    BYTE PTR [rsi+0x6f],ah
  40f328:	jb     0x40f34a
  40f32a:	outs   dx,DWORD PTR ds:[rsi]
  40f32b:	outs   dx,BYTE PTR ds:[rsi]
  40f32c:	ins    BYTE PTR es:[rdi],dx
  40f32d:	jns    0x40f34f
  40f32f:	ins    BYTE PTR es:[rdi],dx
  40f330:	imul   esi,DWORD PTR [rbx+0x74],0x76206465
  40f337:	(bad)  
  40f338:	jb     0x40f3a3
  40f33a:	(bad)  
  40f33b:	(bad)  
  40f33c:	ins    BYTE PTR es:[rdi],dx
  40f33d:	gs jae 0x40f36c
  40f340:	and    BYTE PTR [rdx+0x75],ah
  40f343:	je     0x40f365
  40f345:	fs imul bp,WORD PTR gs:[rsi+0x69],0x6974
  40f34d:	outs   dx,DWORD PTR ds:[rsi]
  40f34e:	outs   dx,BYTE PTR ds:[rsi]
  40f34f:	jae    0x40f371
  40f351:	outs   dx,WORD PTR ds:[rsi]
  40f353:	jb     0x40f375
  40f355:	(bad)  
  40f356:	ins    BYTE PTR es:[rdi],dx
  40f357:	ins    BYTE PTR es:[rdi],dx
  40f358:	and    BYTE PTR [rsi+0x61],dh
  40f35b:	jb     0x40f3c6
  40f35d:	(bad)  
  40f35e:	(bad)  
  40f35f:	ins    BYTE PTR es:[rdi],dx
  40f360:	gs jae 0x40f36d
  40f363:	and    BYTE PTR [rax],ah
  40f365:	pop    rbx
  40f366:	sub    eax,0x61762056
  40f36b:	jb     0x40f39e
  40f36d:	sub    al,0x2e
  40f36f:	cs cs pop rbp
  40f372:	and    BYTE PTR [rcx+0x6e],ch
  40f375:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40f379:	and    BYTE PTR gs:[rbp+riz*2+0x66],ah
  40f37e:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  40f385:	jae    0x40f3a7
  40f387:	(bad)  
  40f388:	outs   dx,BYTE PTR ds:[rsi]
  40f389:	and    BYTE PTR fs:[rcx+riz*2+0x74],ah
  40f38e:	(bad)  
  40f38f:	and    BYTE PTR [rsi+0x6f],ah
  40f392:	jb     0x40f3b4
  40f394:	outs   dx,DWORD PTR ds:[rsi]
  40f395:	outs   dx,BYTE PTR ds:[rsi]
  40f396:	ins    BYTE PTR es:[rdi],dx
  40f397:	jns    0x40f3b9
  40f399:	ins    BYTE PTR es:[rdi],dx
  40f39a:	imul   esi,DWORD PTR [rbx+0x74],0x76206465
  40f3a1:	(bad)  
  40f3a2:	jb     0x40f40d
  40f3a4:	(bad)  
  40f3a5:	(bad)  
  40f3a6:	ins    BYTE PTR es:[rdi],dx
  40f3a7:	gs jae 0x40f3b4
  40f3aa:	and    BYTE PTR [rax],ah
  40f3ac:	pop    rbx
  40f3ad:	sub    eax,0x72672067
  40f3b2:	jo     0x40f3e5
  40f3b4:	sub    al,0x2e
  40f3b6:	cs cs pop rbp
  40f3b9:	and    BYTE PTR [rcx+0x6e],ch
  40f3bc:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40f3c0:	and    BYTE PTR gs:[rcx+riz*2+0x74],ah
  40f3c5:	(bad)  
  40f3c6:	and    BYTE PTR [rsi+0x6f],ah
  40f3c9:	jb     0x40f3eb
  40f3cb:	outs   dx,DWORD PTR ds:[rsi]
  40f3cc:	outs   dx,BYTE PTR ds:[rsi]
  40f3cd:	ins    BYTE PTR es:[rdi],dx
  40f3ce:	jns    0x40f3f0
  40f3d0:	jbe    0x40f433
  40f3d2:	jb     0x40f43d
  40f3d4:	(bad)  
  40f3d5:	(bad)  
  40f3d6:	ins    BYTE PTR es:[rdi],dx
  40f3d7:	gs jae 0x40f3fa
  40f3da:	imul   ebp,DWORD PTR [rsi+0x20],0x7473696c
  40f3e1:	gs and BYTE PTR fs:[rdi+0x72],ah
  40f3e6:	outs   dx,DWORD PTR ds:[rsi]
  40f3e7:	jne    0x40f459
  40f3e9:	jae    0x40f417
  40f3eb:	and    BYTE PTR [rdx+0x75],ah
  40f3ee:	je     0x40f410
  40f3f0:	(bad)  
  40f3f1:	ins    BYTE PTR es:[rdi],dx
  40f3f2:	ins    BYTE PTR es:[rdi],dx
  40f3f3:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40f3f7:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  40f3fe:	jae    0x40f40a
  40f400:	and    BYTE PTR [rax],ah
  40f402:	pop    rbx
  40f403:	sub    eax,0x72672047
  40f408:	jo     0x40f43b
  40f40a:	sub    al,0x2e
  40f40c:	cs cs pop rbp
  40f40f:	and    BYTE PTR [rcx+0x6e],ch
  40f412:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40f416:	and    BYTE PTR gs:[rbp+riz*2+0x66],ah
  40f41b:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  40f422:	jae    0x40f444
  40f424:	(bad)  
  40f425:	outs   dx,BYTE PTR ds:[rsi]
  40f426:	and    BYTE PTR fs:[rcx+riz*2+0x74],ah
  40f42b:	(bad)  
  40f42c:	and    BYTE PTR [rdi+0x6e],ch
  40f42f:	ins    BYTE PTR es:[rdi],dx
  40f430:	jns    0x40f452
  40f432:	outs   dx,WORD PTR ds:[rsi]
  40f434:	jb     0x40f456
  40f436:	jbe    0x40f499
  40f438:	jb     0x40f4a3
  40f43a:	(bad)  
  40f43b:	(bad)  
  40f43c:	ins    BYTE PTR es:[rdi],dx
  40f43d:	gs jae 0x40f460
  40f440:	imul   ebp,DWORD PTR [rsi+0x20],0x7473696c
  40f447:	gs and BYTE PTR fs:[rdi+0x72],ah
  40f44c:	outs   dx,DWORD PTR ds:[rsi]
  40f44d:	jne    0x40f4bf
  40f44f:	jae    0x40f45b
  40f451:	and    BYTE PTR [rax],ah
  40f453:	pop    rbx
  40f454:	sub    eax,0x5d6e206d
  40f459:	and    BYTE PTR [rax],ah
  40f45b:	and    BYTE PTR [rax],ah
  40f45d:	jae    0x40f4c4
  40f45f:	je     0x40f481
  40f461:	jae    0x40f4cc
  40f463:	jp     0x40f4ca
  40f465:	and    BYTE PTR [rcx+0x6e],ch
  40f468:	and    BYTE PTR [rdx+0x79],ah
  40f46b:	je     0x40f4d2
  40f46d:	jae    0x40f48f
  40f46f:	outs   dx,DWORD PTR ds:[rsi]
  40f470:	data16 and BYTE PTR [rbx+0x6f],ah
  40f474:	jo     0x40f4ef
  40f476:	and    BYTE PTR [rdx+0x75],ah
  40f479:	data16 data16 gs jb 0x40f4aa
  40f47e:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40f482:	(bad)  
  40f483:	jne    0x40f4f1
  40f485:	je     0x40f4a7
  40f487:	imul   esi,DWORD PTR [rbx+0x20],0x30303035
  40f48e:	xor    BYTE PTR [rax],dh
  40f490:	xor    BYTE PTR [rax],ah
  40f492:	(bad)  
  40f493:	jns    0x40f509
  40f495:	gs jae 0x40f4a2
  40f498:	and    BYTE PTR [rax],ah
  40f49a:	pop    rbx
  40f49b:	sub    eax,0x5d6e2068
  40f4a0:	and    BYTE PTR [rax],ah
  40f4a2:	and    BYTE PTR [rax],ah
  40f4a4:	jae    0x40f50b
  40f4a6:	je     0x40f4c8
  40f4a8:	jae    0x40f513
  40f4aa:	jp     0x40f511
  40f4ac:	and    BYTE PTR [rcx+0x6e],ch
  40f4af:	and    BYTE PTR [rdx+0x79],ah
  40f4b2:	je     0x40f519
  40f4b4:	jae    0x40f4d6
  40f4b6:	outs   dx,DWORD PTR ds:[rsi]
  40f4b7:	data16 and BYTE PTR [rbx+0x68],ah
  40f4bb:	jne    0x40f52b
  40f4bd:	imul   ebx,DWORD PTR [rdi+0x63],0x61
  40f4c1:	movsxd ebp,DWORD PTR [rax+0x65]
  40f4c4:	and    BYTE PTR [rsi+0x6f],ah
  40f4c7:	jb     0x40f4e9
  40f4c9:	movsxd ebp,DWORD PTR [rax+0x75]
  40f4cc:	outs   dx,BYTE PTR ds:[rsi]
  40f4cd:	imul   esp,DWORD PTR [rbp+0x64],0x20
  40f4d1:	jbe    0x40f534
  40f4d3:	jb     0x40f53e
  40f4d5:	(bad)  
  40f4d6:	(bad)  
  40f4d7:	ins    BYTE PTR es:[rdi],dx
  40f4d8:	gs jae 0x40f4e5
  40f4db:	and    BYTE PTR [rax],ah
  40f4dd:	pop    rbx
  40f4de:	sub    eax,0x5d6e2065
  40f4e3:	and    BYTE PTR [rax],ah
  40f4e5:	and    BYTE PTR [rax],ah
  40f4e7:	jae    0x40f54e
  40f4e9:	je     0x40f50b
  40f4eb:	outs   dx,BYTE PTR ds:[rsi]
  40f4ec:	jne    0x40f55b
  40f4ee:	(bad)  
  40f4ef:	gs jb  0x40f512
  40f4f2:	outs   dx,DWORD PTR ds:[rsi]
  40f4f3:	data16 and BYTE PTR [rbp+0x6c],ah
  40f4f7:	gs ins DWORD PTR es:[rdi],dx
  40f4f9:	outs   dx,BYTE PTR gs:[rsi]
  40f4fb:	je     0x40f570
  40f4fd:	and    BYTE PTR [rax+rbp*2+0x61],dh
  40f501:	je     0x40f523
  40f503:	movsxd ebp,DWORD PTR [rax+0x75]
  40f506:	outs   dx,BYTE PTR ds:[rsi]
  40f507:	imul   ebx,DWORD PTR [rdi+0x63],0x61
  40f50b:	movsxd ebp,DWORD PTR [rax+0x65]
  40f50e:	and    BYTE PTR [rbx+0x61],ah
  40f511:	outs   dx,BYTE PTR ds:[rsi]
  40f512:	and    BYTE PTR [rax+0x6f],ch
  40f515:	ins    BYTE PTR es:[rdi],dx
  40f516:	or     ah,BYTE PTR fs:[rax]
  40f519:	and    BYTE PTR [rbx+0x2d],bl
  40f51c:	jb     0x40f57b
  40f51e:	and    BYTE PTR [rax],ah
  40f520:	and    BYTE PTR [rax],ah
  40f522:	and    BYTE PTR [rax],ah
  40f524:	jb     0x40f58b
  40f526:	(bad)  
  40f527:	and    BYTE PTR fs:[rdi+0x68],dh
  40f52b:	outs   dx,DWORD PTR ds:[rsi]
  40f52c:	ins    BYTE PTR es:[rdi],dx
  40f52d:	and    BYTE PTR gs:[rcx+0x6e],ch
  40f531:	jo     0x40f5a8
  40f533:	je     0x40f555
  40f535:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6e69
  40f53c:	je     0x40f5ad
  40f53e:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  40f542:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x73
  40f547:	and    BYTE PTR [rsi+0x69],ah
  40f54a:	ins    BYTE PTR es:[rdi],dx
  40f54b:	and    BYTE PTR gs:[rdi+0x6e],ch
  40f54f:	and    BYTE PTR [rdi+0x70],ch
  40f552:	outs   dx,BYTE PTR gs:[rsi]
  40f554:	and    BYTE PTR [rax],ch
  40f556:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  40f55a:	jae    0x40f5c5
  40f55c:	movsxd esp,DWORD PTR [rax]
  40f55e:	outs   dx,DWORD PTR ds:[rsi]
  40f55f:	jb     0x40f581
  40f561:	ss xor al,0x2d
  40f564:	(bad)  
  40f565:	imul   esi,DWORD PTR [rax+riz*1+0x6f],0x65736666
  40f56d:	je     0x40f58f
  40f56f:	outs   dx,WORD PTR ds:[rsi]
  40f571:	jb     0x40f5e0
  40f573:	(bad)  
  40f574:	je     0x40f596
  40f576:	outs   dx,DWORD PTR ds:[rsi]
  40f577:	outs   dx,BYTE PTR ds:[rsi]
  40f578:	ins    BYTE PTR es:[rdi],dx
  40f579:	jns    0x40f5a4
  40f57b:	or     ah,BYTE PTR [rax]
  40f57d:	and    BYTE PTR [rcx+0x6e],ch
  40f580:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2020
  40f587:	and    BYTE PTR [rsi+0x61],ch
  40f58a:	ins    DWORD PTR es:[rdi],dx
  40f58b:	and    BYTE PTR gs:[rdi+0x66],ch
  40f58f:	and    BYTE PTR [rsi+0x65],ch
  40f592:	je     0x40f5d7
  40f594:	rex.R
  40f595:	rex.RX and BYTE PTR [rcx+0x6e],r13b
  40f599:	jo     0x40f610
  40f59b:	je     0x40f5bd
  40f59d:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x2020
  40f5a4:	outs   dx,DWORD PTR ds:[rsi]
  40f5a5:	jne    0x40f61b
  40f5a7:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2020
  40f5ae:	outs   dx,BYTE PTR ds:[rsi]
  40f5af:	(bad)  
  40f5b0:	ins    DWORD PTR es:[rdi],dx
  40f5b1:	and    BYTE PTR gs:[rsi+0x6f],ah
  40f5b5:	jb     0x40f5d7
  40f5b7:	outs   dx,BYTE PTR ds:[rsi]
  40f5b8:	gs je  0x40f5fe
  40f5bb:	rex.R
  40f5bc:	rex.RX and BYTE PTR [rdi+0x75],r13b
  40f5c0:	je     0x40f632
  40f5c2:	jne    0x40f638
  40f5c4:	and    BYTE PTR [rsi+0x69],ah
  40f5c7:	ins    BYTE PTR es:[rdi],dx
  40f5c8:	or     al,BYTE PTR gs:[rax]
  40f5cb:	add    BYTE PTR [rax],al
  40f5cd:	add    BYTE PTR [rax],al
  40f5cf:	add    BYTE PTR [rip+0x2d5b2073],ah        # 0x2d9c1648
  40f5d5:	imul   esp,DWORD PTR [rax],0x6e
  40f5d8:	pop    rbp
  40f5d9:	and    BYTE PTR [rbx+0x2d],bl
  40f5dc:	and    BYTE PTR fs:[rsi+0x5d],ch
  40f5e0:	and    BYTE PTR [rbx+0x2d],bl
  40f5e3:	jae    0x40f642
  40f5e5:	and    BYTE PTR [rbx+0x2d],bl
  40f5e8:	movsxd esp,DWORD PTR [rax]
  40f5ea:	movsxd ebp,DWORD PTR [rax+0x75]
  40f5ed:	outs   dx,BYTE PTR ds:[rsi]
  40f5ee:	imul   esi,DWORD PTR [rbx+0x70],0x65
  40f5f2:	movsxd ebx,DWORD PTR [rbp+0x20]
  40f5f5:	pop    rbx
  40f5f6:	sub    eax,0x5b205d75
  40f5fb:	sub    eax,0x5b205d77
  40f600:	sub    eax,0x567c765b
  40f605:	pop    rbp
  40f606:	and    BYTE PTR [rsi+0x61],dh
  40f609:	jb     0x40f677
  40f60b:	imul   esi,DWORD PTR [rbx+0x74],0x2d5b205d
  40f612:	pop    rbx
  40f613:	addr32 jl 0x40f65d
  40f616:	pop    rbp
  40f617:	and    BYTE PTR [rdi+0x72],ah
  40f61a:	jo     0x40f688
  40f61c:	imul   esi,DWORD PTR [rbx+0x74],0x2d5b205d
  40f623:	ins    DWORD PTR es:[rdi],dx
  40f624:	and    BYTE PTR [rsi+0x5d],ch
  40f627:	and    BYTE PTR [rbx+0x2d],bl
  40f62a:	push   0x205d6e20
  40f62f:	pop    rbx
  40f630:	sub    eax,0x5d6e2065
  40f635:	and    BYTE PTR [rbx+0x2d],bl
  40f638:	jb     0x40f697
  40f63a:	and    BYTE PTR [rcx+0x6e],ch
  40f63d:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x756f
  40f644:	je     0x40f6ac
  40f646:	imul   ebp,DWORD PTR [rbp+riz*2+0xa],0x69007325
  40f64e:	outs   dx,BYTE PTR ds:[rsi]
  40f64f:	jbe    0x40f6b2
  40f651:	ins    BYTE PTR es:[rdi],dx
  40f652:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x616c6665
  40f65a:	je     0x40f6c5
  40f65c:	outs   dx,DWORD PTR ds:[rsi]
  40f65d:	outs   dx,BYTE PTR ds:[rsi]
  40f65e:	and    BYTE PTR [rbp+riz*2+0x76],ch
  40f662:	gs ins BYTE PTR es:[rdi],dx
  40f664:	cmp    ah,BYTE PTR [rax]
  40f666:	and    eax,0x64
  40f66b:	add    BYTE PTR [rax],al
  40f66d:	add    BYTE PTR [rax],al
  40f66f:	add    BYTE PTR [rbx+0x75],dl
  40f672:	data16 imul di,WORD PTR [rax+0x20],0x7375
  40f679:	gs and BYTE PTR fs:[rsi+0x6f],ah
  40f67e:	jb     0x40f6a0
  40f680:	(bad)  
  40f681:	sub    eax,0x6f20276d
  40f686:	jo     0x40f6fc
  40f688:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c617620
  40f68f:	jne    0x40f6f6
  40f691:	and    BYTE PTR [rbp+0x75],ch
  40f694:	jae    0x40f70a
  40f696:	and    BYTE PTR [rdx+0x65],ah
  40f699:	and    BYTE PTR [rbx+0x2c],cl
  40f69c:	and    BYTE PTR [rbp+0x2c],cl
  40f69f:	and    BYTE PTR [rdi+0x2c],al
  40f6a2:	and    BYTE PTR [rsp+rbp*1+0x20],dl
  40f6a6:	outs   dx,DWORD PTR ds:[rsi]
  40f6a7:	jb     0x40f6c9
  40f6a9:	push   rax
  40f6aa:	add    BYTE PTR [rax],al
  40f6ac:	add    BYTE PTR [rax],al
  40f6ae:	add    BYTE PTR [rax],al
  40f6b0:	push   rbx
  40f6b1:	jne    0x40f719
  40f6b3:	imul   di,WORD PTR [rax+0x20],0x7375
  40f6b9:	gs and BYTE PTR fs:[rsi+0x6f],ah
  40f6be:	jb     0x40f6e0
  40f6c0:	(bad)  
  40f6c1:	sub    eax,0x6f202768
  40f6c6:	jo     0x40f73c
  40f6c8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c617620
  40f6cf:	jne    0x40f736
  40f6d1:	and    BYTE PTR [rbp+0x75],ch
  40f6d4:	jae    0x40f74a
  40f6d6:	and    BYTE PTR [rdx+0x65],ah
  40f6d9:	and    BYTE PTR [rbx+0x2c],cl
  40f6dc:	and    BYTE PTR [rbp+0x2c],cl
  40f6df:	and    BYTE PTR [rdi+0x2c],al
  40f6e2:	and    BYTE PTR [rsp+rbp*1+0x20],dl
  40f6e6:	outs   dx,DWORD PTR ds:[rsi]
  40f6e7:	jb     0x40f709
  40f6e9:	push   rax
  40f6ea:	add    BYTE PTR [rax],al
  40f6ec:	add    BYTE PTR [rax],al
  40f6ee:	add    BYTE PTR [rax],al
  40f6f0:	push   rbx
  40f6f1:	jne    0x40f759
  40f6f3:	imul   di,WORD PTR [rax+0x20],0x7375
  40f6f9:	gs and BYTE PTR fs:[rsi+0x6f],ah
  40f6fe:	jb     0x40f720
  40f700:	(bad)  
  40f701:	sub    eax,0x6f202765
  40f706:	jo     0x40f77c
  40f708:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c617620
  40f70f:	jne    0x40f776
  40f711:	and    BYTE PTR [rbp+0x75],ch
  40f714:	jae    0x40f78a
  40f716:	and    BYTE PTR [rdx+0x65],ah
  40f719:	and    BYTE PTR [rbx+0x2c],cl
  40f71c:	and    BYTE PTR [rbp+0x2c],cl
  40f71f:	and    BYTE PTR [rdi+0x2c],al
  40f722:	and    BYTE PTR [rsp+rbp*1+0x20],dl
  40f726:	outs   dx,DWORD PTR ds:[rsi]
  40f727:	jb     0x40f749
  40f729:	push   rax
  40f72a:	add    BYTE PTR [rbx+0x3a],ch
  40f72d:	cmp    dh,BYTE PTR fs:[rbx+0x75]
  40f731:	ins    DWORD PTR es:[rdi],dx
  40f732:	cmp    ah,BYTE PTR [rbx+0x3a]
  40f735:	push   0x723a653a
  40f73a:	ja     0x40f7b4
  40f73c:	cmp    al,BYTE PTR [edi+0x3a]
  40f740:	jbe    0x40f77c
  40f742:	push   rsi
  40f743:	cmp    al,BYTE PTR [rax]
  40f745:	add    BYTE PTR [rax],al
  40f747:	add    BYTE PTR [rdi+0x6e],ch
  40f74a:	and    BYTE PTR gs:[rcx+0x6e],ch
  40f74e:	jo     0x40f7c5
  40f750:	je     0x40f772
  40f752:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6e61
  40f759:	and    BYTE PTR fs:[rdi+0x6e],ch
  40f75d:	and    BYTE PTR gs:[rdi+0x75],ch
  40f761:	je     0x40f7d3
  40f763:	jne    0x40f7d9
  40f765:	and    BYTE PTR [rsi+0x69],ah
  40f768:	ins    BYTE PTR es:[rdi],dx
  40f769:	and    BYTE PTR gs:[rdx+0x65],dh
  40f76d:	jno    0x40f7e4
  40f76f:	imul   esi,DWORD PTR [rdx+0x65],0x756f0064
  40f776:	je     0x40f7e8
  40f778:	jne    0x40f7ee
  40f77a:	and    BYTE PTR [rdi+0x6f],dh
  40f77d:	jne    0x40f7eb
  40f77f:	and    BYTE PTR fs:[rdi+0x76],ch
  40f783:	gs jb  0x40f7fd
  40f786:	jb     0x40f7f1
  40f788:	je     0x40f7ef
  40f78a:	and    BYTE PTR [rcx+0x6e],ch
  40f78d:	jo     0x40f804
  40f78f:	je     0x40f791
  40f791:	add    BYTE PTR [rax],al
  40f793:	add    BYTE PTR [rax],al
  40f795:	add    BYTE PTR [rax],al
  40f797:	add    BYTE PTR [rdi+0x72],al
  40f79a:	outs   dx,DWORD PTR ds:[rsi]
  40f79b:	jne    0x40f80d
  40f79d:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  40f7a1:	je     0x40f7c3
  40f7a3:	sub    BYTE PTR [rip+0x2e2e2067],ch        # 0x2e6f1810
  40f7a9:	sub    DWORD PTR cs:[rax],esp
  40f7ac:	outs   dx,DWORD PTR ds:[rsi]
  40f7ad:	outs   dx,BYTE PTR ds:[rsi]
  40f7ae:	ins    BYTE PTR es:[rdi],dx
  40f7af:	jns    0x40f7d1
  40f7b1:	jo     0x40f818
  40f7b3:	jb     0x40f822
  40f7b5:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6f662064
  40f7bd:	jb     0x40f7df
  40f7bf:	outs   dx,BYTE PTR ds:[rsi]
  40f7c0:	gs je  0x40f806
  40f7c3:	rex.R
  40f7c4:	rex.RX sub eax,0x69662034
  40f7ca:	ins    BYTE PTR es:[rdi],dx
  40f7cb:	add    BYTE PTR gs:[rdx+0x61],ah
  40f7cf:	and    BYTE PTR fs:[rsi+0x61],dh
  40f7d3:	ins    BYTE PTR es:[rdi],dx
  40f7d4:	jne    0x40f83b
  40f7d6:	and    BYTE PTR [rax],ch
  40f7d8:	and    eax,0x66202964
  40f7dd:	outs   dx,DWORD PTR ds:[rsi]
  40f7de:	jb     0x40f800
  40f7e0:	sub    eax,0x706f206b
  40f7e5:	je     0x40f850
  40f7e7:	outs   dx,DWORD PTR ds:[rsi]
  40f7e8:	outs   dx,BYTE PTR ds:[rsi]
  40f7e9:	or     al,BYTE PTR [rax]
  40f7eb:	add    BYTE PTR [rax],al
  40f7ed:	add    BYTE PTR [rax],al
  40f7ef:	add    BYTE PTR [rbp+0x52],al
  40f7f2:	push   rdx
  40f7f3:	rex.WRXB push r10
  40f7f5:	cmp    ah,BYTE PTR [rax]
  40f7f7:	je     0x40f86b
  40f7f9:	jns    0x40f864
  40f7fb:	outs   dx,BYTE PTR ds:[rsi]
  40f7fc:	and    BYTE PTR [edi+ebp*2+0x20],dh
  40f801:	movsxd ebp,DWORD PTR [rdi+0x70]
  40f804:	jns    0x40f826
  40f806:	(bad)  
  40f807:	and    BYTE PTR [rdi+0x72],ah
  40f80a:	outs   dx,DWORD PTR ds:[rsi]
  40f80b:	jne    0x40f87d
  40f80d:	and    BYTE PTR [rdx+0x75],ah
  40f810:	je     0x40f832
  40f812:	outs   dx,BYTE PTR ds:[rsi]
  40f813:	outs   dx,DWORD PTR ds:[rsi]
  40f814:	je     0x40f836
  40f816:	je     0x40f880
  40f818:	and    BYTE PTR gs:[rax+0x61],dh
  40f81c:	jb     0x40f883
  40f81e:	outs   dx,BYTE PTR ds:[rsi]
  40f81f:	je     0x40f85b
  40f821:	and    BYTE PTR [rip+0x6e690073],ah        # 0x6ea9f89a
  40f827:	jbe    0x40f88a
  40f829:	ins    BYTE PTR es:[rdi],dx
  40f82a:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x616d726f
  40f832:	je     0x40f86e
  40f834:	and    BYTE PTR [rip+0x310073],ah        # 0x71f8ad
  40f83a:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  40f83e:	jae    0x40f8a9
  40f840:	movsxd eax,DWORD PTR [rax]
  40f842:	xor    al,BYTE PTR [rax]
  40f844:	ss xor al,0x2d
  40f847:	(bad)  
  40f848:	imul   esi,DWORD PTR [rbp+rbp*1+0x6f],0x65736666
  40f850:	je     0x40f852
  40f852:	ss xor al,0x2d
  40f855:	(bad)  
  40f856:	imul   esi,DWORD PTR [rax+riz*1+0x6f],0x65736666
  40f85e:	je     0x40f860
  40f860:	xor    eax,DWORD PTR [rax]
  40f862:	push   0x356664
  40f867:	outs   dx,BYTE PTR ds:[rsi]
  40f868:	gs je  0x40f8ae
  40f86b:	rex.R
  40f86c:	rex.RX sub eax,0x656e0034
  40f872:	je     0x40f8b7
  40f874:	rex.R
  40f875:	rex.RX xor al,0x0
  40f878:	outs   dx,BYTE PTR gs:[rsi]
  40f87a:	push   0x65636e61
  40f87f:	add    BYTE PTR fs:[rax+rax*1],dh
  40f883:	push   0x2d356664
  40f888:	outs   dx,BYTE PTR ds:[rsi]
  40f889:	movsxd esi,DWORD PTR [rbx]
  40f88b:	add    BYTE PTR [rsi+0x65],ch
  40f88e:	je     0x40f8d3
  40f890:	rex.R
  40f891:	rex.RX sub eax,0x6c632034
  40f897:	(bad)  
  40f898:	jae    0x40f90d
  40f89a:	imul   esp,DWORD PTR [rbx+0x20],0x65646f6d
  40f8a1:	ins    BYTE PTR es:[rdi],dx
  40f8a2:	add    BYTE PTR [rsi+0x65],ch
  40f8a5:	je     0x40f8ea
  40f8a7:	rex.R
  40f8a8:	rex.RX xor al,0x5f
  40f8ab:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  40f8af:	jae    0x40f91a
  40f8b1:	movsxd eax,DWORD PTR [rax]
  40f8b3:	outs   dx,BYTE PTR gs:[rsi]
  40f8b5:	push   0x65636e61
  40f8ba:	fs sub eax,0x33636e
  40f8c0:	jmp    0x1640f89a
  40f8c5:	(bad)  
  40f8c6:	(bad)  
  40f8c7:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f8a3
  40f8cd:	(bad)  
  40f8ce:	(bad)  
  40f8cf:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f8ab
  40f8d5:	(bad)  
  40f8d6:	(bad)  
  40f8d7:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f8b3
  40f8dd:	(bad)  
  40f8de:	(bad)  
  40f8df:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f8bb
  40f8e5:	(bad)  
  40f8e6:	(bad)  
  40f8e7:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f8c3
  40f8ed:	(bad)  
  40f8ee:	(bad)  
  40f8ef:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f8cb
  40f8f5:	(bad)  
  40f8f6:	(bad)  
  40f8f7:	call   QWORD PTR [rip+0xffffffffc4ffffd6]        # 0xffffffffc540f8d3
  40f8fd:	(bad)  
  40f8fe:	(bad)  
  40f8ff:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f8db
  40f905:	(bad)  
  40f906:	(bad)  
  40f907:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f8e3
  40f90d:	(bad)  
  40f90e:	(bad)  
  40f90f:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f8eb
  40f915:	(bad)  
  40f916:	(bad)  
  40f917:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f8f3
  40f91d:	(bad)  
  40f91e:	(bad)  
  40f91f:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f8fb
  40f925:	(bad)  
  40f926:	(bad)  
  40f927:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f903
  40f92d:	(bad)  
  40f92e:	(bad)  
  40f92f:	jmp    FWORD PTR [rbx+0x72ffffd5]
  40f935:	(bad)  
  40f936:	(bad)  
  40f937:	inc    DWORD PTR [rbp-0x2b]
  40f93a:	(bad)  
  40f93b:	call   QWORD PTR [rip+0x14ffffd6]        # 0x1540f917
  40f941:	(bad)  
  40f942:	(bad)  
  40f943:	(bad)  
  40f944:	mov    edi,0x15ffffd4
  40f949:	(bad)  
  40f94a:	(bad)  
  40f94b:	call   QWORD PTR [rip+0x53ffffd6]        # 0x5440f927
  40f951:	(bad)  
  40f952:	(bad)  
  40f953:	call   QWORD PTR [rip+0xfffffffffeffffd6]        # 0xffffffffff40f92f
  40f959:	sar    edi,cl
  40f95b:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f937
  40f961:	(bad)  
  40f962:	(bad)  
  40f963:	call   QWORD PTR [rip+0x15ffffd6]        # 0x1640f93f
  40f969:	(bad)  
  40f96a:	(bad)  
  40f96b:	(bad)  
  40f96c:	out    dx,eax
  40f96d:	sar    edi,cl
  40f96f:	jmp    rax
  40f971:	sar    edi,cl
  40f973:	call   QWORD PTR [rip+0xffffffffd4ffffd6]        # 0xffffffffd540f94f
  40f979:	sar    edi,cl
  40f97b:	push   QWORD PTR [rdx-0x5900002d]
  40f981:	sar    edi,cl
  40f983:	call   FWORD PTR [rdx+0xffffd3]
  40f989:	add    BYTE PTR [rax],al
  40f98b:	add    BYTE PTR [rax],al
  40f98d:	add    al,dh
  40f98f:	mov    edi,0x0
  40f994:	add    BYTE PTR [rax-0x71],al
  40f997:	add    BYTE PTR [rax],al
  40f99a:	add    BYTE PTR [rax],al
  40f99c:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  40f9a4:	gs int 0xcd
  40f9a7:	add    BYTE PTR [r8],al
  40f9aa:	add    BYTE PTR [rdx+0x426d1a94],ah
  40f9b0:	add    BYTE PTR [rax],al
  40f9b2:	xor    al,0x26
  40f9b4:	cmc    
  40f9b5:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  40f9b9:	add    BYTE PTR [rax+0x3f],al
  40f9bf:	add    BYTE PTR [rax],al
  40f9c1:	add    BYTE PTR [rax],al
  40f9c3:	add    BYTE PTR [rax],al
  40f9c5:	add    al,ah
  40f9c7:	rex.XB add BYTE PTR [r8],al
  40f9ca:	add    BYTE PTR [rax],al
  40f9cc:	add    BYTE PTR [rax],al
  40f9ce:	add    BYTE PTR [rax],al
  40f9d0:	outs   dx,BYTE PTR ds:[rsi]
  40f9d1:	movsxd ebp,DWORD PTR [rcx+0x74]
  40f9d4:	gs jb  0x40fa05
  40f9d7:	movsxd eax,DWORD PTR [rax]
  40f9d9:	add    BYTE PTR [rax],al
  40f9db:	add    BYTE PTR [rax],al
  40f9dd:	add    BYTE PTR [rax],al
  40f9df:	add    BYTE PTR [rbx+0x68],ah
  40f9e2:	jne    0x40fa52
  40f9e4:	imul   esi,DWORD PTR [rbx+0x69],0x7a
  40f9e8:	and    BYTE PTR gs:[rax],ch
  40f9eb:	cmp    eax,0x646c2520
  40f9f0:	sub    DWORD PTR [rax],esp
  40f9f2:	and    BYTE PTR ds:[rbx+0x6f],ah
  40f9f6:	jo     0x40fa71
  40f9f8:	pop    rdi
  40f9f9:	(bad)  
  40f9fa:	jne    0x40fa62
  40f9fc:	data16 gs jb 0x40fa20
  40fa00:	jae    0x40fa6b
  40fa02:	jp     0x40fa69
  40fa04:	and    BYTE PTR [rax],ch
  40fa06:	cmp    eax,0x646c2520
  40fa0b:	sub    DWORD PTR [rdx],ecx
  40fa0d:	add    BYTE PTR [rax],al
  40fa0f:	add    BYTE PTR [rip+0x203a73],ah        # 0x613488
  40fa15:	outs   dx,DWORD PTR ds:[rsi]
  40fa16:	jne    0x40fa8c
  40fa18:	and    BYTE PTR [rdi+0x66],ch
  40fa1b:	and    BYTE PTR [rbp+0x65],ch
  40fa1e:	ins    DWORD PTR es:[rdi],dx
  40fa1f:	outs   dx,DWORD PTR ds:[rsi]
  40fa20:	jb     0x40fa9b
  40fa22:	or     al,BYTE PTR [rax]
  40fa24:	and    eax,0x4c000a73
  40fa29:	outs   dx,DWORD PTR ds:[rsi]
  40fa2a:	movsxd esp,DWORD PTR [rcx+0x74]
  40fa2d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6966203a
  40fa34:	ins    BYTE PTR es:[rdi],dx
  40fa35:	and    BYTE PTR gs:[rip+0x6c203b73],ah        # 0x6c6135af
  40fa3c:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  40fa43:	add    BYTE PTR [rbp+0x74],dh
  40fa46:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x2f0063
  40fa4e:	ja     0x40fab8
  40fa50:	outs   dx,BYTE PTR gs:[rsi]
  40fa52:	and    BYTE PTR [rdi+rbp*2+0x6f],ch
  40fa56:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  40fa5a:	and    BYTE PTR [rbp+0x70],dh
  40fa5d:	and    BYTE PTR [rdi+0x72],ah
  40fa60:	outs   dx,DWORD PTR ds:[rsi]
  40fa61:	jne    0x40fad3
  40fa63:	and    BYTE PTR [rip+0x25203a73],ah        # 0x256134dc
  40fa69:	jae    0x40fa8b
  40fa6b:	add    BYTE PTR [rbx+0x70],ah
  40fa6e:	and    BYTE PTR [rcx],ah
  40fa70:	cmp    eax,0x4c554e20
  40fa75:	rex.WR add BYTE PTR [rax],r8b
  40fa78:	outs   dx,BYTE PTR ds:[rsi]
  40fa79:	(bad)  
  40fa7a:	ins    DWORD PTR es:[rdi],dx
  40fa7b:	and    BYTE PTR gs:[rdx+0x65],ah
  40fa7f:	imul   ebp,DWORD PTR [esi+0x73],0x74697720
  40fa87:	push   0x61707320
  40fa8c:	movsxd esp,DWORD PTR [rbp+0x20]
  40fa8f:	outs   dx,DWORD PTR ds:[rsi]
  40fa90:	jb     0x40fab2
  40fa92:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40fa95:	je     0x40fb09
  40fa97:	outs   dx,DWORD PTR ds:[rsi]
  40fa98:	ins    BYTE PTR es:[rdi],dx
  40fa99:	sub    eax,0x72616863
  40fa9e:	(bad)  
  40fa9f:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  40faa3:	cmp    ah,BYTE PTR [rax]
  40faa5:	and    eax,0x255c0063
  40faaa:	and    eax,0x78322e25
  40faaf:	add    BYTE PTR [rax+0x5e],dh
  40fab2:	(bad)  
  40fab3:	push   QWORD PTR [rax+0x5e]
  40fab6:	(bad)  
  40fab7:	push   QWORD PTR [rax+0x5e]
  40faba:	(bad)  
  40fabb:	push   QWORD PTR [rax+0x5e]
  40fabe:	(bad)  
  40fabf:	push   QWORD PTR [rax+0x5e]
  40fac2:	(bad)  
  40fac3:	inc    DWORD PTR [rax+0x5e]
  40fac6:	(bad)  
  40fac7:	push   QWORD PTR [rax+0x5e]
  40faca:	(bad)  
  40facb:	push   QWORD PTR [rax+0x5e]
  40face:	(bad)  
  40facf:	push   QWORD PTR [rax+0x5e]
  40fad2:	(bad)  
  40fad3:	push   QWORD PTR [rax+0x5e]
  40fad6:	(bad)  
  40fad7:	push   QWORD PTR [rax+0x5e]
  40fada:	(bad)  
  40fadb:	inc    DWORD PTR [rax+0x5e]
  40fade:	(bad)  
  40fadf:	push   QWORD PTR [rax+0x5e]
  40fae2:	(bad)  
  40fae3:	inc    DWORD PTR [rax+0x5e]
  40fae6:	(bad)  
  40fae7:	inc    DWORD PTR [rax+0x5e]
  40faea:	(bad)  
  40faeb:	inc    DWORD PTR [rax+0x5e]
  40faee:	(bad)  
  40faef:	inc    DWORD PTR [rax+0x5e]
  40faf2:	(bad)  
  40faf3:	inc    DWORD PTR [rax+0x5e]
  40faf6:	(bad)  
  40faf7:	inc    DWORD PTR [rax+0x5e]
  40fafa:	(bad)  
  40fafb:	inc    DWORD PTR [rax+0x5e]
  40fafe:	(bad)  
  40faff:	inc    DWORD PTR [rax+0x5e]
  40fb02:	(bad)  
  40fb03:	inc    DWORD PTR [rax+0x5e]
  40fb06:	(bad)  
  40fb07:	inc    DWORD PTR [rax+0x5e]
  40fb0a:	(bad)  
  40fb0b:	inc    DWORD PTR [rax+0x5e]
  40fb0e:	(bad)  
  40fb0f:	inc    DWORD PTR [rax+0x5e]
  40fb12:	(bad)  
  40fb13:	inc    DWORD PTR [rax+0x5e]
  40fb16:	(bad)  
  40fb17:	push   QWORD PTR [rax+0x5e]
  40fb1a:	(bad)  
  40fb1b:	push   QWORD PTR [rax+0x5e]
  40fb1e:	(bad)  
  40fb1f:	push   QWORD PTR [rax+0x5e]
  40fb22:	(bad)  
  40fb23:	push   QWORD PTR [rax+0x5e]
  40fb26:	(bad)  
  40fb27:	push   QWORD PTR [rax+0x5e]
  40fb2a:	(bad)  
  40fb2b:	push   QWORD PTR [rax+0x5e]
  40fb2e:	(bad)  
  40fb2f:	inc    DWORD PTR [rax+0x5e]
  40fb32:	(bad)  
  40fb33:	inc    DWORD PTR [rax+0x5e]
  40fb36:	(bad)  
  40fb37:	inc    DWORD PTR [rax+0x5e]
  40fb3a:	(bad)  
  40fb3b:	inc    DWORD PTR [rax+0x5e]
  40fb3e:	(bad)  
  40fb3f:	inc    DWORD PTR [rax+0x5e]
  40fb42:	(bad)  
  40fb43:	inc    DWORD PTR [rax+0x5e]
  40fb46:	(bad)  
  40fb47:	inc    DWORD PTR [rax+0x5e]
  40fb4a:	(bad)  
  40fb4b:	inc    DWORD PTR [rax+0x5e]
  40fb4e:	(bad)  
  40fb4f:	inc    DWORD PTR [rax+0x5e]
  40fb52:	(bad)  
  40fb53:	inc    DWORD PTR [rax+0x5e]
  40fb56:	(bad)  
  40fb57:	inc    DWORD PTR [rax+0x5e]
  40fb5a:	(bad)  
  40fb5b:	inc    DWORD PTR [rax+0x5e]
  40fb5e:	(bad)  
  40fb5f:	inc    DWORD PTR [rax+0x5e]
  40fb62:	(bad)  
  40fb63:	inc    DWORD PTR [rax+0x5e]
  40fb66:	(bad)  
  40fb67:	inc    DWORD PTR [rax+0x5e]
  40fb6a:	(bad)  
  40fb6b:	inc    DWORD PTR [rax+0x5e]
  40fb6e:	(bad)  
  40fb6f:	inc    DWORD PTR [rax+0x5e]
  40fb72:	(bad)  
  40fb73:	inc    DWORD PTR [rax+0x5e]
  40fb76:	(bad)  
  40fb77:	inc    DWORD PTR [rax+0x5e]
  40fb7a:	(bad)  
  40fb7b:	inc    DWORD PTR [rax+0x5e]
  40fb7e:	(bad)  
  40fb7f:	inc    DWORD PTR [rax+0x5e]
  40fb82:	(bad)  
  40fb83:	inc    DWORD PTR [rax+0x5e]
  40fb86:	(bad)  
  40fb87:	inc    DWORD PTR [rax+0x5e]
  40fb8a:	(bad)  
  40fb8b:	inc    DWORD PTR [rax+0x5e]
  40fb8e:	(bad)  
  40fb8f:	inc    DWORD PTR [rax+0x5e]
  40fb92:	(bad)  
  40fb93:	inc    DWORD PTR [rax+0x5e]
  40fb96:	(bad)  
  40fb97:	inc    DWORD PTR [rax+0x5e]
  40fb9a:	(bad)  
  40fb9b:	push   QWORD PTR [rax+0x5e]
  40fb9e:	(bad)  
  40fb9f:	push   QWORD PTR [rax+0x5e]
  40fba2:	(bad)  
  40fba3:	push   QWORD PTR [rax+0x5e]
  40fba6:	(bad)  
  40fba7:	push   QWORD PTR [rax+0x5e]
  40fbaa:	(bad)  
  40fbab:	inc    DWORD PTR [rax+0x5e]
  40fbae:	(bad)  
  40fbaf:	push   QWORD PTR [rax+0x5e]
  40fbb2:	(bad)  
  40fbb3:	inc    DWORD PTR [rax+0x5e]
  40fbb6:	(bad)  
  40fbb7:	inc    DWORD PTR [rax+0x5e]
  40fbba:	(bad)  
  40fbbb:	inc    DWORD PTR [rax+0x5e]
  40fbbe:	(bad)  
  40fbbf:	inc    DWORD PTR [rax+0x5e]
  40fbc2:	(bad)  
  40fbc3:	inc    DWORD PTR [rax+0x5e]
  40fbc6:	(bad)  
  40fbc7:	inc    DWORD PTR [rax+0x5e]
  40fbca:	(bad)  
  40fbcb:	inc    DWORD PTR [rax+0x5e]
  40fbce:	(bad)  
  40fbcf:	inc    DWORD PTR [rax+0x5e]
  40fbd2:	(bad)  
  40fbd3:	inc    DWORD PTR [rax+0x5e]
  40fbd6:	(bad)  
  40fbd7:	inc    DWORD PTR [rax+0x5e]
  40fbda:	(bad)  
  40fbdb:	inc    DWORD PTR [rax+0x5e]
  40fbde:	(bad)  
  40fbdf:	inc    DWORD PTR [rax+0x5e]
  40fbe2:	(bad)  
  40fbe3:	inc    DWORD PTR [rax+0x5e]
  40fbe6:	(bad)  
  40fbe7:	inc    DWORD PTR [rax+0x5e]
  40fbea:	(bad)  
  40fbeb:	inc    DWORD PTR [rax+0x5e]
  40fbee:	(bad)  
  40fbef:	inc    DWORD PTR [rax+0x5e]
  40fbf2:	(bad)  
  40fbf3:	inc    DWORD PTR [rax+0x5e]
  40fbf6:	(bad)  
  40fbf7:	inc    DWORD PTR [rax+0x5e]
  40fbfa:	(bad)  
  40fbfb:	inc    DWORD PTR [rax+0x5e]
  40fbfe:	(bad)  
  40fbff:	inc    DWORD PTR [rax+0x5e]
  40fc02:	(bad)  
  40fc03:	inc    DWORD PTR [rax+0x5e]
  40fc06:	(bad)  
  40fc07:	inc    DWORD PTR [rax+0x5e]
  40fc0a:	(bad)  
  40fc0b:	inc    DWORD PTR [rax+0x5e]
  40fc0e:	(bad)  
  40fc0f:	inc    DWORD PTR [rax+0x5e]
  40fc12:	(bad)  
  40fc13:	inc    DWORD PTR [rax+0x5e]
  40fc16:	(bad)  
  40fc17:	inc    DWORD PTR [rax+0x5e]
  40fc1a:	(bad)  
  40fc1b:	push   QWORD PTR [rax+0x5e]
  40fc1e:	(bad)  
  40fc1f:	push   QWORD PTR [rax+0x5e]
  40fc22:	(bad)  
  40fc23:	push   QWORD PTR [rax+0x5e]
  40fc26:	(bad)  
  40fc27:	push   QWORD PTR [rax+0x5e]
  40fc2a:	(bad)  
  40fc2b:	jmp    QWORD PTR [rip+0x4e203a73]        # 0x4e6136a4
  40fc31:	outs   dx,DWORD PTR ds:[rsi]
  40fc32:	and    BYTE PTR [rbx+0x75],dh
  40fc35:	movsxd ebp,DWORD PTR [rax+0x20]
  40fc38:	addr32 jb 0x40fcaa
  40fc3b:	jne    0x40fcad
  40fc3d:	add    BYTE PTR [rip+0x4e203a73],ah        # 0x4e6136b6
  40fc43:	outs   dx,DWORD PTR ds:[rsi]
  40fc44:	and    BYTE PTR [rbx+0x75],dh
  40fc47:	movsxd ebp,DWORD PTR [rax+0x20]
  40fc4a:	jbe    0x40fcad
  40fc4c:	jb     0x40fcb7
  40fc4e:	(bad)  
  40fc4f:	(bad)  
  40fc50:	ins    BYTE PTR es:[rdi],dx
  40fc51:	add    BYTE PTR gs:[rax+rax*1],ch
	...
  40fc5d:	add    BYTE PTR [rax],al
  40fc5f:	add    BYTE PTR [rax+0x36],al
  40fc62:	add    BYTE PTR [r8],al
  40fc65:	add    BYTE PTR [rax],al
  40fc67:	add    BYTE PTR [rax+0x31],al
  40fc6a:	add    BYTE PTR [r8],al
  40fc6d:	add    BYTE PTR [rax],al
  40fc6f:	add    BYTE PTR [rax+0x4069],dh
	...
  40fc7d:	add    BYTE PTR [rax],al
  40fc7f:	add    BYTE PTR [rcx+0x72],al
  40fc82:	addr32 jne 0x40fcf2
  40fc85:	outs   dx,BYTE PTR gs:[rsi]
  40fc87:	je     0x40fca9
  40fc89:	outs   dx,DWORD PTR fs:[rsi]
  40fc8b:	ins    DWORD PTR es:[rdi],dx
  40fc8c:	(bad)  
  40fc8d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  40fc94:	jb     0x40fcb6
  40fc96:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40fc9a:	rex.B
  40fc9b:	rex.WB
  40fc9c:	rex.WRX sub QWORD PTR [rax],r8
  40fc9f:	rex.B jb 0x40fd09
  40fca2:	jne    0x40fd11
  40fca4:	outs   dx,BYTE PTR gs:[rsi]
  40fca6:	je     0x40fcc8
  40fca8:	jae    0x40fd13
  40fcaa:	outs   dx,BYTE PTR ds:[rsi]
  40fcab:	addr32 jne 0x40fd1a
  40fcae:	(bad)  
  40fcaf:	jb     0x40fd1a
  40fcb1:	je     0x40fd2c
  40fcb3:	and    BYTE PTR [rax],ch
  40fcb5:	push   rbx
  40fcb6:	rex.WB
  40fcb7:	rex.RXB
  40fcb8:	rex.WRX sub QWORD PTR [rax],r8
  40fcbb:	add    BYTE PTR [rax],al
  40fcbd:	add    BYTE PTR [rax],al
  40fcbf:	add    BYTE PTR [rdi+0x76],cl
  40fcc2:	gs jb  0x40fd2b
  40fcc5:	ins    BYTE PTR es:[rdi],dx
  40fcc6:	outs   dx,DWORD PTR ds:[rsi]
  40fcc7:	ja     0x40fce9
  40fcc9:	jb     0x40fd2c
  40fccb:	outs   dx,BYTE PTR ds:[rsi]
  40fccc:	and    BYTE PTR gs:[ebp+0x72],ah
  40fcd1:	jb     0x40fd42
  40fcd3:	jb     0x40fcf5
  40fcd5:	sub    BYTE PTR [rdi+0x56],cl
  40fcd8:	rex.RB push r10
  40fcda:	rex.RX
  40fcdb:	rex.WR
  40fcdc:	rex.WRXB push r15
  40fcde:	sub    DWORD PTR [rax],eax
  40fce0:	push   rax
  40fce1:	(bad)  
  40fce2:	jb     0x40fd58
  40fce4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40fceb:	jae    0x40fd0d
  40fced:	outs   dx,DWORD PTR ds:[rsi]
  40fcee:	data16 and BYTE PTR [rbx+0x69],dh
  40fcf2:	outs   dx,BYTE PTR ds:[esi]
  40fcf4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40fcfb:	and    BYTE PTR gs:[rax],ch
  40fcfe:	push   rax
  40fcff:	rex.WR
  40fd00:	rex.WRXB push r11
  40fd02:	push   rbx
  40fd03:	sub    DWORD PTR [rax],eax
  40fd05:	add    BYTE PTR [rax],al
  40fd07:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40fd0b:	(bad)  
  40fd0c:	ins    BYTE PTR es:[rdi],dx
  40fd0d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  40fd11:	jae    0x40fd33
  40fd13:	outs   dx,DWORD PTR ds:[rsi]
  40fd14:	data16 and BYTE PTR [rbx+0x69],dh
  40fd18:	outs   dx,BYTE PTR ds:[esi]
  40fd1a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40fd21:	and    BYTE PTR gs:[rax],ch
  40fd24:	push   rsp
  40fd25:	rex.WR
  40fd26:	rex.WRXB push r11
  40fd28:	push   rbx
  40fd29:	sub    DWORD PTR [rax],eax
  40fd2b:	add    BYTE PTR [rax],al
  40fd2d:	add    BYTE PTR [rax],al
  40fd2f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40fd33:	and    BYTE PTR [rdx+0x65],dh
  40fd36:	jae    0x40fdad
  40fd38:	ins    BYTE PTR es:[rdi],dx
  40fd39:	je     0x40fd5b
  40fd3b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  40fd42:	jae    0x40fdb1
  40fd44:	(bad)  
  40fd45:	ins    BYTE PTR es:[rdi],dx
  40fd46:	ins    BYTE PTR es:[rdi],dx
  40fd47:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40fd4b:	(bad)  
  40fd4c:	and    BYTE PTR gs:[rdx+0x65],dh
  40fd50:	jo     0x40fdc4
  40fd52:	gs jae 0x40fdba
  40fd55:	outs   dx,BYTE PTR ds:[rsi]
  40fd56:	je     0x40fdbd
  40fd58:	and    BYTE PTR fs:[rax],ch
  40fd5b:	push   rbp
  40fd5c:	rex.WRX
  40fd5d:	rex.R
  40fd5e:	rex.RB push r10
  40fd60:	rex.RX
  40fd61:	rex.WR
  40fd62:	rex.WRXB push r15
  40fd64:	sub    DWORD PTR [rax],eax
  40fd66:	push   rbp
  40fd67:	outs   dx,BYTE PTR ds:[rsi]
  40fd68:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40fd6c:	outs   dx,BYTE PTR ds:[rsi]
  40fd6d:	and    BYTE PTR [rbp+0x72],ah
  40fd70:	jb     0x40fde1
  40fd72:	jb     0x40fd74
  40fd74:	add    BYTE PTR [rax],al
  40fd76:	add    BYTE PTR [rax],al
  40fd78:	pop    rdi
  40fd79:	ins    DWORD PTR es:[rdi],dx
  40fd7a:	(bad)  
  40fd7b:	je     0x40fde5
  40fd7d:	gs jb  0x40fdf2
  40fd80:	sub    BYTE PTR [rcx],ch
  40fd82:	cmp    ah,BYTE PTR [rax]
  40fd84:	and    eax,0x6e692073
  40fd89:	and    BYTE PTR [rip+0x67252873],ah        # 0x67662602
  40fd8f:	sub    al,0x20
  40fd91:	and    eax,0x20202967
  40fd96:	sub    BYTE PTR [rdx+0x65],dh
  40fd99:	je     0x40fe11
  40fd9b:	(bad)  
  40fd9c:	ins    BYTE PTR es:[rdi],dx
  40fd9d:	cmp    eax,0xa296725
  40fda2:	add    BYTE PTR [rax],al
  40fda4:	fsubr  QWORD PTR [rbp-0x1]
  40fda7:	call   FWORD PTR [rip+0xffffffff8cffff6d]        # 0xffffffff8d40fd1a
  40fdad:	ins    DWORD PTR es:[rdi],dx
  40fdae:	(bad)  
  40fdaf:	call   FWORD PTR [rbp+rbp*2+0x6dacffff]
  40fdb6:	(bad)  
  40fdb7:	(bad)  
  40fdb8:	mov    esp,0xccffff6d
  40fdbd:	ins    DWORD PTR es:[rdi],dx
  40fdbe:	(bad)  
  40fdbf:	dec    DWORD PTR [rbp+0x69]
  40fdc2:	outs   dx,BYTE PTR ds:[rsi]
  40fdc3:	addr32 ja 0x40fdf3
  40fdc6:	ja     0x40fdfe
  40fdc8:	xor    al,0x20
  40fdca:	jb     0x40fe41
  40fdcc:	outs   dx,BYTE PTR ds:[rsi]
  40fdcd:	je     0x40fe38
  40fdcf:	ins    DWORD PTR es:[rdi],dx
  40fdd0:	and    BYTE PTR gs:[rsi+0x61],ah
  40fdd4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40fddc:	add    BYTE PTR [rax],al
  40fdde:	add    BYTE PTR [rax],al
  40fde0:	rex.B
  40fde1:	fs fs jb 0x40fe4a
  40fde5:	jae    0x40fe5a
  40fde7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a91e5d
  40fded:	jae    0x40fe0f
  40fdef:	outs   dx,BYTE PTR ds:[rsi]
  40fdf0:	outs   dx,DWORD PTR ds:[rsi]
  40fdf1:	and    BYTE PTR [rcx+0x6d],ch
  40fdf4:	(bad)  
  40fdf5:	addr32 gs sub eax,0x74636573
  40fdfc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  40fe03:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40fe0a:	jne    0x40fe71
  40fe0c:	jb     0x40fe87
  40fe0e:	and    BYTE PTR [rsi+0x61],ah
  40fe11:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  40fe19:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a31e83
  40fe1f:	je     0x40fe86
  40fe21:	jae    0x40fe43
  40fe23:	(bad)  
  40fe24:	je     0x40fe46
  40fe26:	(bad)  
  40fe27:	fs fs jb 0x40fe90
  40fe2b:	jae    0x40fea0
  40fe2d:	and    BYTE PTR [rip+0x70],ah        # 0x40fea3
  40fe33:	add    BYTE PTR [rax],al
  40fe35:	add    BYTE PTR [rax],al
  40fe37:	add    BYTE PTR [rax],ah
  40fe39:	and    BYTE PTR [rsi+0x69],dl
  40fe3c:	jb     0x40feb2
  40fe3e:	jne    0x40fea1
  40fe40:	ins    BYTE PTR es:[rdi],dx
  40fe41:	push   rax
  40fe42:	jb     0x40feb3
  40fe44:	je     0x40feab
  40fe46:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40fe4a:	(bad)  
  40fe4b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  40fe53:	push   0x646f6320
  40fe58:	and    BYTE PTR gs:[rax],dh
  40fe5b:	js     0x40fe82
  40fe5d:	js     0x40fe5f
  40fe5f:	add    BYTE PTR [rax],ah
  40fe61:	and    BYTE PTR [rbp+0x6e],dl
  40fe64:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40fe68:	outs   dx,BYTE PTR ds:[rsi]
  40fe69:	and    BYTE PTR [rax+0x73],dh
  40fe6c:	gs jne 0x40fed3
  40fe6f:	outs   dx,DWORD PTR ds:[rsi]
  40fe70:	and    BYTE PTR [rdx+0x65],dh
  40fe73:	ins    BYTE PTR es:[rdi],dx
  40fe74:	outs   dx,DWORD PTR ds:[rsi]
  40fe75:	movsxd esp,DWORD PTR [rcx+0x74]
  40fe78:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40fe7f:	je     0x40fef0
  40fe81:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40fe84:	and    BYTE PTR [rsi+0x65],dh
  40fe87:	jb     0x40fefc
  40fe89:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  40fe90:	or     al,BYTE PTR [rax]
  40fe92:	add    BYTE PTR [rax],al
  40fe94:	add    BYTE PTR [rax],al
  40fe96:	add    BYTE PTR [rax],al
  40fe98:	and    BYTE PTR [rax],ah
  40fe9a:	push   rbp
  40fe9b:	outs   dx,BYTE PTR ds:[rsi]
  40fe9c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40fea0:	outs   dx,BYTE PTR ds:[rsi]
  40fea1:	and    BYTE PTR [rax+0x73],dh
  40fea4:	gs jne 0x40ff0b
  40fea7:	outs   dx,DWORD PTR ds:[rsi]
  40fea8:	and    BYTE PTR [rdx+0x65],dh
  40feab:	ins    BYTE PTR es:[rdi],dx
  40feac:	outs   dx,DWORD PTR ds:[rsi]
  40fead:	movsxd esp,DWORD PTR [rcx+0x74]
  40feb0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  40feb7:	and    BYTE PTR [rbx+0x69],dh
  40feba:	jp     0x40ff21
  40febc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4b2d26
	...
  40fece:	add    BYTE PTR [rax],al
  40fed0:	cs jo  0x40ff37
  40fed3:	(bad)  
  40fed4:	je     0x40ff37
	...
  40fede:	add    BYTE PTR [rax],al
  40fee0:	add    BYTE PTR [rbp-0x1],bh
  40fee3:	inc    DWORD PTR [rdi*2+0x7d30ffff]
  40feea:	(bad)  
  40feeb:	inc    DWORD PTR [rcx+0x7d]
  40feee:	(bad)  
  40feef:	push   rax
  40fef1:	jl     0x40fef2
  40fef3:	push   QWORD PTR [rax+0xffff7c]
  40fef9:	jge    0x40fefa
  40fefb:	inc    DWORD PTR [rax]
  40fefd:	add    BYTE PTR [rax],al
  40feff:	add    BYTE PTR [rip+0x203a73],ah        # 0x613978
  40ff05:	push   rax
  40ff06:	rex.WRXB push r11
  40ff08:	rex.WB pop r8
  40ff0a:	rex.WR pop rcx
  40ff0c:	pop    rdi
  40ff0d:	rex.XB
  40ff0e:	rex.WRXB push r10
  40ff10:	push   rdx
  40ff11:	rex.RB
  40ff12:	rex.XB push r12
	...
  40ff20:	jne    0x40ff90
  40ff22:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40ff26:	outs   dx,BYTE PTR ds:[rsi]
  40ff27:	and    BYTE PTR [rdi+0x70],ch
  40ff2a:	je     0x40ff95
  40ff2c:	outs   dx,DWORD PTR ds:[rsi]
  40ff2d:	outs   dx,BYTE PTR ds:[rsi]
  40ff2e:	and    BYTE PTR [rip+0x7325202d],ch        # 0x73661f61
	...
  40ff40:	jne    0x40ffb0
  40ff42:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40ff46:	outs   dx,BYTE PTR ds:[rsi]
  40ff47:	and    BYTE PTR [rdi+0x70],ch
  40ff4a:	je     0x40ffb5
  40ff4c:	outs   dx,DWORD PTR ds:[rsi]
  40ff4d:	outs   dx,BYTE PTR ds:[rsi]
  40ff4e:	and    BYTE PTR [rip+0x6325202d],ch        # 0x63661f81
	...
  40ff60:	outs   dx,DWORD PTR ds:[rsi]
  40ff61:	jo     0x40ffd7
  40ff63:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  40ff6a:	jae    0x40ffda
  40ff6c:	(bad)  
  40ff6d:	je     0x40ff8f
  40ff6f:	je     0x40ffd2
  40ff71:	imul   esp,DWORD PTR [rbp+0x20],0x61
  40ff75:	outs   dx,BYTE PTR ds:[rsi]
  40ff76:	and    BYTE PTR [rcx+0x72],ah
  40ff79:	addr32 jne 0x40ffe9
  40ff7c:	outs   dx,BYTE PTR gs:[rsi]
  40ff7e:	je     0x40ffa0
  40ff80:	sub    eax,0x2e25202d
  40ff85:	sub    dh,BYTE PTR [rbx+0x0]
	...
  40ff90:	(bad)  
  40ff91:	ins    DWORD PTR es:[rdi],dx
  40ff92:	(bad)  
  40ff93:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  40ff9a:	outs   dx,DWORD PTR ds:[rsi]
  40ff9b:	jo     0x410011
  40ff9d:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  40ffa4:	and    eax,0x732a2e
	...
  40ffbd:	add    BYTE PTR [rax],al
  40ffbf:	add    BYTE PTR [rdi+0x70],ch
  40ffc2:	je     0x41002d
  40ffc4:	outs   dx,DWORD PTR ds:[rsi]
  40ffc5:	outs   dx,BYTE PTR ds:[rsi]
  40ffc6:	and    BYTE PTR [rdx+0x65],dh
  40ffc9:	jno    0x410040
  40ffcb:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  40ffd2:	and    BYTE PTR [rcx+0x72],ah
  40ffd5:	addr32 jne 0x410045
  40ffd8:	outs   dx,BYTE PTR gs:[rsi]
  40ffda:	je     0x40fffc
  40ffdc:	sub    eax,0x7325202d
	...
  40fffd:	add    BYTE PTR [rax],al
  40ffff:	add    BYTE PTR [rdi+0x70],ch
  410002:	je     0x41006d
  410004:	outs   dx,DWORD PTR ds:[rsi]
  410005:	outs   dx,BYTE PTR ds:[rsi]
  410006:	and    BYTE PTR [rdx+0x65],dh
  410009:	jno    0x410080
  41000b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  410012:	and    BYTE PTR [rcx+0x72],ah
  410015:	addr32 jne 0x410085
  410018:	outs   dx,BYTE PTR gs:[rsi]
  41001a:	je     0x41003c
  41001c:	sub    eax,0x6325202d
	...
  41003d:	add    BYTE PTR [rax],al
  41003f:	add    BYTE PTR [rax+rax*1],bh
  410042:	jne    0x410044
  410044:	outs   dx,BYTE PTR ds:[rsi]
  410045:	add    BYTE PTR [rbx+0x0],ch
  410048:	outs   dx,BYTE PTR ds:[rsi]
  410049:	add    BYTE PTR [rdi+0x0],ch
  41004c:	ja     0x41004e
  41004e:	outs   dx,BYTE PTR ds:[rsi]
  41004f:	add    BYTE PTR [rsi],bh
  410051:	add    BYTE PTR [rax],al
  410053:	add    BYTE PTR [rdi],bh
  410055:	add    BYTE PTR [rax],al
  410057:	add    BYTE PTR [rcx+0x0],al
  41005a:	jae    0x41005c
  41005c:	jae    0x41005e
  41005e:	add    BYTE PTR gs:[rdx+0x0],dh
  410062:	je     0x410064
  410064:	imul   eax,DWORD PTR [rax],0x6e006f
  41006a:	and    BYTE PTR [rax],al
  41006c:	data16 add BYTE PTR [rcx+0x0],ah
  410070:	imul   eax,DWORD PTR [rax],0x65006c
  410076:	add    BYTE PTR fs:[rcx],ah
  410079:	add    BYTE PTR [rdx],cl
  41007b:	add    BYTE PTR [rdx],cl
  41007d:	add    BYTE PTR [rax+0x0],dl
  410080:	jb     0x410082
  410082:	outs   dx,DWORD PTR ds:[rsi]
  410083:	add    BYTE PTR [rdi+0x0],ah
  410086:	jb     0x410088
  410088:	(bad)  
  410089:	add    BYTE PTR [rbp+0x0],ch
  41008c:	cmp    al,BYTE PTR [rax]
  41008e:	and    BYTE PTR [rax],al
  410090:	and    eax,0x73007700
  410095:	add    BYTE PTR [rdx],cl
  410097:	add    BYTE PTR [rsi+0x0],al
  41009a:	imul   eax,DWORD PTR [rax],0x65006c
  4100a0:	cmp    al,BYTE PTR [rax]
  4100a2:	and    BYTE PTR [rax],al
  4100a4:	and    eax,0x73007700
  4100a9:	add    BYTE PTR [rax+rax*1],ch
  4100ac:	and    BYTE PTR [rax],al
  4100ae:	rex.WR add BYTE PTR [rcx+0x0],r13b
  4100b2:	outs   dx,BYTE PTR ds:[rsi]
  4100b3:	add    BYTE PTR [rbp+0x0],ah
  4100b6:	and    BYTE PTR [rax],al
  4100b8:	and    eax,0xa007500
  4100bd:	add    BYTE PTR [rdx],cl
  4100bf:	add    BYTE PTR [rbp+0x0],al
  4100c2:	js     0x4100c4
  4100c4:	jo     0x4100c6
  4100c6:	jb     0x4100c8
  4100c8:	add    BYTE PTR gs:[rbx+0x0],dh
  4100cc:	jae    0x4100ce
  4100ce:	imul   eax,DWORD PTR [rax],0x6e006f
  4100d4:	cmp    al,BYTE PTR [rax]
  4100d6:	and    BYTE PTR [rax],al
  4100d8:	and    eax,0x73007700
  4100dd:	add    BYTE PTR [rax],al
  4100df:	add    BYTE PTR [rip+0x73007700],ah        # 0x734177e5
  4100e5:	add    BYTE PTR [rdx],cl
	...
  4100ef:	add    BYTE PTR [rbp+0x0],cl
  4100f2:	imul   eax,DWORD PTR [rax],0x47006e
  4100f8:	push   rdi
  4100f9:	add    BYTE PTR [rax],ah
  4100fb:	add    BYTE PTR [rdx+0x0],dl
  4100fe:	jne    0x410100
  410100:	outs   dx,BYTE PTR ds:[rsi]
  410101:	add    BYTE PTR [rax+rax*1+0x69],dh
  410105:	add    BYTE PTR [rbp+0x0],ch
  410108:	add    BYTE PTR gs:[rax],ah
  41010b:	add    BYTE PTR [rcx+0x0],al
  41010e:	jae    0x410110
  410110:	jae    0x410112
  410112:	add    BYTE PTR gs:[rdx+0x0],dh
  410116:	je     0x410118
  410118:	imul   eax,DWORD PTR [rax],0x6e006f
	...
  41013e:	add    BYTE PTR [rax],al
  410140:	outs   dx,BYTE PTR ds:[rsi]
  410141:	data16 add BYTE PTR [rcx+0x6e],ch
  410145:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x67006e61
  41014d:	(bad)  
  41014e:	(bad)  
  41014f:	inc    DWORD PTR [rcx+rdx*4]
  410152:	(bad)  
  410153:	inc    DWORD PTR [rcx+rdx*4]
  410156:	(bad)  
  410157:	inc    DWORD PTR [rcx+rdx*4]
  41015a:	(bad)  
  41015b:	inc    DWORD PTR [rcx+rdx*4]
  41015e:	(bad)  
  41015f:	inc    DWORD PTR [rcx+rdx*4]
  410162:	(bad)  
  410163:	inc    DWORD PTR [rcx+rdx*4]
  410166:	(bad)  
  410167:	inc    DWORD PTR [rcx+rdx*4]
  41016a:	(bad)  
  41016b:	inc    DWORD PTR [rcx+rdx*4]
  41016e:	(bad)  
  41016f:	jmp    rsp
  410171:	nop
  410172:	(bad)  
  410173:	jmp    rsp
  410175:	nop
  410176:	(bad)  
  410177:	jmp    rsp
  410179:	nop
  41017a:	(bad)  
  41017b:	jmp    rsp
  41017d:	nop
  41017e:	(bad)  
  41017f:	jmp    rsp
  410181:	nop
  410182:	(bad)  
  410183:	inc    DWORD PTR [rcx+rdx*4]
  410186:	(bad)  
  410187:	inc    DWORD PTR [rcx+rdx*4]
  41018a:	(bad)  
  41018b:	inc    DWORD PTR [rcx+rdx*4]
  41018e:	(bad)  
  41018f:	inc    DWORD PTR [rcx+rdx*4]
  410192:	(bad)  
  410193:	inc    DWORD PTR [rcx+rdx*4]
  410196:	(bad)  
  410197:	inc    DWORD PTR [rcx+rdx*4]
  41019a:	(bad)  
  41019b:	inc    DWORD PTR [rcx+rdx*4]
  41019e:	(bad)  
  41019f:	inc    DWORD PTR [rcx+rdx*4]
  4101a2:	(bad)  
  4101a3:	inc    DWORD PTR [rcx+rdx*4]
  4101a6:	(bad)  
  4101a7:	inc    DWORD PTR [rcx+rdx*4]
  4101aa:	(bad)  
  4101ab:	inc    DWORD PTR [rcx+rdx*4]
  4101ae:	(bad)  
  4101af:	inc    DWORD PTR [rcx+rdx*4]
  4101b2:	(bad)  
  4101b3:	inc    DWORD PTR [rcx+rdx*4]
  4101b6:	(bad)  
  4101b7:	inc    DWORD PTR [rcx+rdx*4]
  4101ba:	(bad)  
  4101bb:	inc    DWORD PTR [rcx+rdx*4]
  4101be:	(bad)  
  4101bf:	inc    DWORD PTR [rcx+rdx*4]
  4101c2:	(bad)  
  4101c3:	inc    DWORD PTR [rcx+rdx*4]
  4101c6:	(bad)  
  4101c7:	inc    DWORD PTR [rcx+rdx*4]
  4101ca:	(bad)  
  4101cb:	jmp    rsp
  4101cd:	nop
  4101ce:	(bad)  
  4101cf:	inc    DWORD PTR [rcx+rdx*4]
  4101d2:	(bad)  
  4101d3:	inc    DWORD PTR [rcx+rdx*4]
  4101d6:	(bad)  
  4101d7:	inc    DWORD PTR [rcx+rdx*4]
  4101da:	(bad)  
  4101db:	inc    DWORD PTR [rcx+rdx*4]
  4101de:	(bad)  
  4101df:	inc    DWORD PTR [rcx+rdx*4]
  4101e2:	(bad)  
  4101e3:	inc    DWORD PTR [rcx+rdx*4]
  4101e6:	(bad)  
  4101e7:	inc    DWORD PTR [rcx+rdx*4]
  4101ea:	(bad)  
  4101eb:	inc    DWORD PTR [rcx+rdx*4]
  4101ee:	(bad)  
  4101ef:	inc    DWORD PTR [rcx+rdx*4]
  4101f2:	(bad)  
  4101f3:	inc    DWORD PTR [rcx+rdx*4]
  4101f6:	(bad)  
  4101f7:	push   QWORD PTR [rax+rdx*4]
  4101fa:	(bad)  
  4101fb:	inc    DWORD PTR [rcx+rdx*4]
  4101fe:	(bad)  
  4101ff:	jmp    QWORD PTR [rdi-0x6f]
  410202:	(bad)  
  410203:	inc    DWORD PTR [rax]
	...
  410241:	add    BYTE PTR [rax],al
  410243:	add    BYTE PTR [rbx],al
  410245:	add    BYTE PTR [rax],al
  410247:	add    BYTE PTR [rip+0x7000000],al        # 0x741024d
  41024d:	add    BYTE PTR [rax],al
  41024f:	add    BYTE PTR [rdx],cl
  410251:	add    BYTE PTR [rax],al
  410253:	add    BYTE PTR [rax+rax*1],cl
  410256:	add    BYTE PTR [rax],al
  410258:	(bad)  
  410259:	add    BYTE PTR [rax],al
  41025b:	add    BYTE PTR [rcx],dl
  41025d:	add    BYTE PTR [rax],al
  41025f:	add    BYTE PTR [rbx],dl
  410261:	add    BYTE PTR [rax],al
  410263:	add    BYTE PTR [rip+0x18000000],dl        # 0x18410269
  410269:	add    BYTE PTR [rax],al
  41026b:	add    BYTE PTR [rdx],bl
  41026d:	add    BYTE PTR [rax],al
  41026f:	add    BYTE PTR [rax+rax*1],bl
  410272:	add    BYTE PTR [rax],al
  410274:	(bad)  
  410275:	add    BYTE PTR [rax],al
  410277:	add    BYTE PTR [rcx],ah
  410279:	add    BYTE PTR [rax],al
  41027b:	add    BYTE PTR [rbx],ah
  41027d:	add    BYTE PTR [rax],al
  41027f:	add    BYTE PTR [rsi],ah
  410281:	add    BYTE PTR [rax],al
  410283:	add    BYTE PTR [rax],ch
  410285:	add    BYTE PTR [rax],al
  410287:	add    BYTE PTR [rdx],ch
  410289:	add    BYTE PTR [rax],al
  41028b:	add    BYTE PTR [rip+0x2f000000],ch        # 0x2f410291
  410291:	add    BYTE PTR [rax],al
  410293:	add    BYTE PTR [rcx],dh
  410295:	add    BYTE PTR [rax],al
  410297:	add    BYTE PTR [rax+rax*1],dh
	...
  4102a6:	lock (bad) 
	...
  4102b4:	add    BYTE PTR [rax],al
  4102b6:	add    BYTE PTR [rax+0x0],al
  4102b9:	add    BYTE PTR [rax],al
  4102bb:	add    BYTE PTR [rax],al
  4102bd:	add    al,ah
  4102bf:	(bad)  
  4102c0:	add    BYTE PTR [rax],al
  4102c2:	sar    bh,0xff
  4102c5:	(bad)  
  4102c6:	fild   WORD PTR [rcx+0x16]
  4102c9:	push   rsi
  4102ca:	out    0x9e,eax
  4102cc:	scas   eax,DWORD PTR es:[rdi]
  4102cd:	add    eax,edx
  4102cf:	cmp    al,0x0
  4102d1:	add    BYTE PTR [rax],al
  4102d3:	add    BYTE PTR [rax],al
  4102d5:	add    BYTE PTR [rax],al
  4102d7:	add    BYTE PTR [rax],0x0
	...
  4102fe:	add    BYTE PTR [rax],al
  410300:	rex.B
  410301:	rex.X
  410302:	rex.XB
  410303:	rex.R
  410304:	rex.RB
  410305:	rex.RX add BYTE PTR [rcx+0x62],r12b
  410309:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  41030d:	add    BYTE PTR [rax],dh
  41030f:	xor    DWORD PTR [rdx],esi
  410311:	xor    esi,DWORD PTR [rsi*1+0x39383736]
	...
  410340:	add    eax,0x19000000
  410345:	add    BYTE PTR [rax],al
  410347:	add    BYTE PTR [rbp+0x0],bh
	...
  410386:	lock (bad) 
  410388:	add    BYTE PTR [rax],al
  41038a:	add    BYTE PTR [rax],al
  41038c:	add    BYTE PTR [rax],al
  41038e:	and    al,0x40
  410390:	add    BYTE PTR [rax],al
  410392:	add    BYTE PTR [rax],al
  410394:	add    BYTE PTR [rax],al
  410396:	pop    rcx
  410397:	add    BYTE PTR [rax],al
  41039a:	add    BYTE PTR [rax],al
  41039c:	add    BYTE PTR [rax-0x71],al
  41039f:	add    BYTE PTR [rax],al
  4103a2:	add    BYTE PTR [rax],al
  4103a4:	add    BYTE PTR [rax+0x40c3],cl
  4103aa:	add    BYTE PTR [rax],al
  4103ac:	add    BYTE PTR [rdx-0x8],ch
  4103af:	add    BYTE PTR [rax],al
  4103b2:	add    BYTE PTR [rax],al
  4103b4:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  4103bc:	rcl    BYTE PTR [rdx],1
  4103be:	movsxd eax,DWORD PTR [rcx+0x0]
  4103c1:	add    BYTE PTR [rax],al
  4103c3:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  4103ca:	add    BYTE PTR [rax],al
  4103cc:	gs int 0xcd
  4103cf:	add    BYTE PTR [r8],al
  4103d2:	add    BYTE PTR [rax],ah
  4103d4:	pop    rdi
  4103d5:	movabs al,ds:0x4876e80000004202
  4103de:	(bad)  
  4103df:	rex.X add BYTE PTR [rax],al
  4103e2:	add    BYTE PTR [rdx+0x426d1a94],ah
  4103e8:	add    BYTE PTR [rax],al
  4103ea:	rex in eax,0x9c
  4103ed:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  4103f3:	(bad)  
  4103f4:	(bad)  
  4103f5:	mov    esp,0x42d6
  4103fa:	xor    al,0x26
  4103fc:	cmc    
  4103fd:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  410401:	and    al,0x37
  410404:	jns    0x4103c9
  410406:	rex.B
  410407:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  41040e:	jbe    0x410453
  410410:	add    al,cl
  410412:	rex.WRX
  410413:	ins    DWORD PTR es:[edi],dx
  410415:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  41041c:	in     al,0x58
  41041e:	loope  0x410463
  410420:	rex mov WORD PTR [rbp+0x15af1d78],?
  410427:	rex.R push rax
  410429:	out    dx,eax
  41042a:	loop   0x410402
  41042c:	in     al,0x1a
  41042e:	rex.WXB
  41042f:	rex.R xchg edx,eax
  410431:	(bad)  
  410432:	rex.WRB (bad) 
  410434:	iret   
  410435:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  41043b:	add    BYTE PTR [rax],al
  41043d:	add    BYTE PTR [rax],al
  41043f:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  410446:	pushf  
  410447:	cmp    al,0x33
  410449:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41044a:	test   al,0xd5
  41044c:	and    esi,esi
  41044e:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd85f8fc
  410455:	shld   DWORD PTR [rdx],esi,cl
  410458:	popf   
  410459:	xchg   edi,eax
  41045a:	mov    edi,cs
  41045c:	or     BYTE PTR [rdx+0x6f43255b],bh
  410462:	lods   al,BYTE PTR ds:[rsi]
  410463:	sub    BYTE PTR fs:[rsi],al
  410466:	enter  0xa,0x0
	...
  41047e:	add    BYTE PTR [rax],al
  410480:	add    BYTE PTR [rax-0x3c86c820],al
  410486:	rex.B
  410487:	rex.XB (bad) 
  410489:	outs   dx,BYTE PTR ds:[rsi]
  41048a:	add    eax,0x93b8b5b5
  41048f:	rex.RX cmc 
  410491:	stc    
  410492:	(bad)  
  410493:	jmp    0x4d79539b
  410498:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x7789fdce
  41049e:	(bad)  
  41049f:	pop    rdx
  4104a0:	cmp    al,0xbf
  4104a2:	jae    0x410523
  4104a4:	fisttp QWORD PTR [rdi+0x15]
  4104a7:	jne    0x4104a9
	...
  4104bd:	add    BYTE PTR [rax],al
  4104bf:	add    BYTE PTR [rax+0x40e1],dh
	...
  4104cd:	add    BYTE PTR [rax],al
  4104cf:	add    BYTE PTR [rax],dl
  4104d1:	loop   0x410513
	...
  4104df:	add    al,ah
  4104e1:	xlat   BYTE PTR ds:[rbx]
  4104e2:	add    BYTE PTR [rax],al
	...
  4104ed:	add    BYTE PTR [rax],al
  4104ef:	add    BYTE PTR [rax+0xc],dh
  4104f2:	add    BYTE PTR [r8],al
	...
  4104fd:	add    BYTE PTR [rax],al
  4104ff:	add    BYTE PTR [rax+0xc],dh
  410502:	add    BYTE PTR [r8],al
	...
  41050d:	add    BYTE PTR [rax],al
  41050f:	add    BYTE PTR [rax+0x4104],al
	...
  41051d:	add    BYTE PTR [rax],al
  41051f:	add    BYTE PTR [rax-0x4],dh
  410522:	add    BYTE PTR [rax],al
	...
  41052d:	add    BYTE PTR [rax],al
  41052f:	add    BYTE PTR [rax+0x4145],al
	...
  410541:	add    BYTE PTR [rax+0x0],al
	...
  410550:	mov    esp,0x4157
	...
  41055d:	add    BYTE PTR [rax],al
  41055f:	add    ah,dl
  410561:	push   rdi
  410562:	add    BYTE PTR [r8],al
	...
  41056d:	add    BYTE PTR [rax],al
  41056f:	add    ah,bh
  410571:	push   rdi
  410572:	add    BYTE PTR [r8],al
	...
  41057d:	add    BYTE PTR [rax],al
  41057f:	add    BYTE PTR [rax+rbx*2],ah
  410582:	add    BYTE PTR [r8],al
	...
  41058d:	add    BYTE PTR [rax],al
  41058f:	add    BYTE PTR [rax+rbx*2],bh
  410592:	add    BYTE PTR [r8],al
	...
  41059d:	add    BYTE PTR [rax],al
  41059f:	add    BYTE PTR [rax+0x4137],al
	...
  4105ad:	add    BYTE PTR [rax],al
  4105af:	add    BYTE PTR [rax+0x45],al
  4105b2:	add    BYTE PTR [r8],al
	...
  4105bd:	add    BYTE PTR [rax],al
  4105bf:	add    BYTE PTR [rax],bh
  4105c1:	rex.RB
  4105c2:	add    BYTE PTR [r8],al
	...
  4105cd:	add    BYTE PTR [rax],al
  4105cf:	add    BYTE PTR [rax],ch
  4105d1:	rex.RB
  4105d2:	add    BYTE PTR [r8],al
	...
  4105dd:	add    BYTE PTR [rax],al
  4105df:	add    BYTE PTR [rax],dh
  4105e1:	rex.RB
  4105e2:	add    BYTE PTR [r8],al
	...
  4105ed:	add    BYTE PTR [rax],al
  4105ef:	add    BYTE PTR [rax+0x4103],al
	...
  4105fd:	add    BYTE PTR [rax],al
  4105ff:	add    BYTE PTR [rax+0x4],al
  410602:	add    BYTE PTR [r8],al
	...
  410611:	jo     0x410654
	...
  41061f:	add    BYTE PTR [rax],dl
  410621:	jo     0x410664
	...
  41062f:	add    BYTE PTR [rax],bl
  410631:	jo     0x410674
	...
  41063f:	add    BYTE PTR [rax],dh
  410641:	jo     0x410684
	...
  41064f:	add    al,dh
  410651:	xor    BYTE PTR [rcx+0x0],al
	...
  410660:	push   rax
  410661:	(bad)  
  410662:	add    BYTE PTR [r8],al
	...
  41066d:	add    BYTE PTR [rax],al
  41066f:	add    BYTE PTR [rax+0x73],al
  410672:	add    BYTE PTR [rax],al
	...
  41067d:	add    BYTE PTR [rax],al
  41067f:	add    BYTE PTR [rax+0x406a],dl
	...
  410691:	(bad)  
  410692:	add    BYTE PTR [r8],al
	...
  41069d:	add    BYTE PTR [rax],al
  41069f:	add    BYTE PTR [rax],dh
  4106a1:	(bad)  
  4106a2:	add    BYTE PTR [r8],al
	...
  4106b1:	xor    DWORD PTR [rcx+0x0],eax
	...
  4106c0:	sbb    BYTE PTR [rdi],dh
  4106c2:	add    BYTE PTR [r8],al
	...
  4106cd:	add    BYTE PTR [rax],al
  4106cf:	add    BYTE PTR [rdi+rsi*1],dl
  4106d2:	add    BYTE PTR [r8],al
	...
  4106dd:	add    BYTE PTR [rax],al
  4106df:	add    BYTE PTR [rax],dl
  4106e1:	(bad)  
  4106e2:	add    BYTE PTR [r8],al
	...
  4106ed:	add    BYTE PTR [rax],al
  4106ef:	add    BYTE PTR [rax+0x45],dh
  4106f2:	add    BYTE PTR [r8],al
	...
  410701:	loop   0x410743
	...
  41070f:	add    ah,bh
  410711:	loope  0x410753
	...
  41071f:	add    BYTE PTR [rax],ah
  410721:	rex.RB
  410722:	add    BYTE PTR [r8],al
	...
  41072d:	add    BYTE PTR [rax],al
  41072f:	add    BYTE PTR [rdi+0x43],al
  410732:	rex.XB cmp spl,BYTE PTR [r8]
  410735:	sub    BYTE PTR [rdi+0x4e],al
  410738:	push   rbp
  410739:	sub    DWORD PTR [rax],esp
  41073b:	xor    al,0x2e
  41073d:	cmp    DWORD PTR [rsi],ebp
  41073f:	xor    al,0x0
	...
  41074d:	add    BYTE PTR [rax],al
  41074f:	add    BYTE PTR [rdi+0x43],al
  410752:	rex.XB cmp spl,BYTE PTR [r8]
  410755:	sub    BYTE PTR [rdi+0x4e],al
  410758:	push   rbp
  410759:	sub    DWORD PTR [rax],esp
  41075b:	xor    al,0x2e
  41075d:	cmp    DWORD PTR [rsi],ebp
  41075f:	xor    al,0x0
	...
  41076d:	add    BYTE PTR [rax],al
  41076f:	add    BYTE PTR [rdi+0x43],al
  410772:	rex.XB cmp spl,BYTE PTR [r8]
  410775:	sub    BYTE PTR [rdi+0x4e],al
  410778:	push   rbp
  410779:	sub    DWORD PTR [rax],esp
  41077b:	xor    al,0x2e
  41077d:	cmp    DWORD PTR [rsi],ebp
  41077f:	xor    al,0x0
	...
  41078d:	add    BYTE PTR [rax],al
  41078f:	add    BYTE PTR [rdi+0x43],al
  410792:	rex.XB cmp spl,BYTE PTR [r8]
  410795:	sub    BYTE PTR [rdi+0x4e],al
  410798:	push   rbp
  410799:	sub    DWORD PTR [rax],esp
  41079b:	xor    al,0x2e
  41079d:	cmp    DWORD PTR [rsi],ebp
  41079f:	xor    al,0x0
	...
  4107ad:	add    BYTE PTR [rax],al
  4107af:	add    BYTE PTR [rdi+0x43],al
  4107b2:	rex.XB cmp spl,BYTE PTR [r8]
  4107b5:	sub    BYTE PTR [rdi+0x4e],al
  4107b8:	push   rbp
  4107b9:	sub    DWORD PTR [rax],esp
  4107bb:	xor    al,0x2e
  4107bd:	cmp    DWORD PTR [rsi],ebp
  4107bf:	xor    al,0x0
	...
  4107cd:	add    BYTE PTR [rax],al
  4107cf:	add    BYTE PTR [rdi+0x43],al
  4107d2:	rex.XB cmp spl,BYTE PTR [r8]
  4107d5:	sub    BYTE PTR [rdi+0x4e],al
  4107d8:	push   rbp
  4107d9:	sub    DWORD PTR [rax],esp
  4107db:	xor    al,0x2e
  4107dd:	cmp    DWORD PTR [rsi],ebp
  4107df:	xor    al,0x0
	...
  4107ed:	add    BYTE PTR [rax],al
  4107ef:	add    BYTE PTR [rdi+0x43],al
  4107f2:	rex.XB cmp spl,BYTE PTR [r8]
  4107f5:	sub    BYTE PTR [rdi+0x4e],al
  4107f8:	push   rbp
  4107f9:	sub    DWORD PTR [rax],esp
  4107fb:	xor    al,0x2e
  4107fd:	cmp    DWORD PTR [rsi],ebp
  4107ff:	xor    al,0x0
	...
  41080d:	add    BYTE PTR [rax],al
  41080f:	add    BYTE PTR [rdi+0x43],al
  410812:	rex.XB cmp spl,BYTE PTR [r8]
  410815:	sub    BYTE PTR [rdi+0x4e],al
  410818:	push   rbp
  410819:	sub    DWORD PTR [rax],esp
  41081b:	xor    al,0x2e
  41081d:	cmp    DWORD PTR [rsi],ebp
  41081f:	xor    al,0x0
	...
  41082d:	add    BYTE PTR [rax],al
  41082f:	add    BYTE PTR [rdi+0x43],al
  410832:	rex.XB cmp spl,BYTE PTR [r8]
  410835:	sub    BYTE PTR [rdi+0x4e],al
  410838:	push   rbp
  410839:	sub    DWORD PTR [rax],esp
  41083b:	xor    al,0x2e
  41083d:	cmp    DWORD PTR [rsi],ebp
  41083f:	xor    al,0x0
	...
  41084d:	add    BYTE PTR [rax],al
  41084f:	add    BYTE PTR [rdi+0x43],al
  410852:	rex.XB cmp spl,BYTE PTR [r8]
  410855:	sub    BYTE PTR [rdi+0x4e],al
  410858:	push   rbp
  410859:	sub    DWORD PTR [rax],esp
  41085b:	xor    al,0x2e
  41085d:	cmp    DWORD PTR [rsi],ebp
  41085f:	xor    al,0x0
	...
  41086d:	add    BYTE PTR [rax],al
  41086f:	add    BYTE PTR [rdi+0x43],al
  410872:	rex.XB cmp spl,BYTE PTR [r8]
  410875:	sub    BYTE PTR [rdi+0x4e],al
  410878:	push   rbp
  410879:	sub    DWORD PTR [rax],esp
  41087b:	xor    al,0x2e
  41087d:	cmp    DWORD PTR [rsi],ebp
  41087f:	xor    al,0x0
	...
  41088d:	add    BYTE PTR [rax],al
  41088f:	add    BYTE PTR [rdi+0x43],al
  410892:	rex.XB cmp spl,BYTE PTR [r8]
  410895:	sub    BYTE PTR [rdi+0x4e],al
  410898:	push   rbp
  410899:	sub    DWORD PTR [rax],esp
  41089b:	xor    al,0x2e
  41089d:	cmp    DWORD PTR [rsi],ebp
  41089f:	xor    al,0x0
	...
  4108ad:	add    BYTE PTR [rax],al
  4108af:	add    BYTE PTR [rdi+0x43],al
  4108b2:	rex.XB cmp spl,BYTE PTR [r8]
  4108b5:	sub    BYTE PTR [rdi+0x4e],al
  4108b8:	push   rbp
  4108b9:	sub    DWORD PTR [rax],esp
  4108bb:	xor    al,0x2e
  4108bd:	cmp    DWORD PTR [rsi],ebp
  4108bf:	xor    al,0x0
	...
  4108cd:	add    BYTE PTR [rax],al
  4108cf:	add    BYTE PTR [rdi+0x43],al
  4108d2:	rex.XB cmp spl,BYTE PTR [r8]
  4108d5:	sub    BYTE PTR [rdi+0x4e],al
  4108d8:	push   rbp
  4108d9:	sub    DWORD PTR [rax],esp
  4108db:	xor    al,0x2e
  4108dd:	cmp    DWORD PTR [rsi],ebp
  4108df:	xor    al,0x0
	...
  4108ed:	add    BYTE PTR [rax],al
  4108ef:	add    BYTE PTR [rdi+0x43],al
  4108f2:	rex.XB cmp spl,BYTE PTR [r8]
  4108f5:	sub    BYTE PTR [rdi+0x4e],al
  4108f8:	push   rbp
  4108f9:	sub    DWORD PTR [rax],esp
  4108fb:	xor    al,0x2e
  4108fd:	cmp    DWORD PTR [rsi],ebp
  4108ff:	xor    al,0x0
	...
  41090d:	add    BYTE PTR [rax],al
  41090f:	add    BYTE PTR [rdi+0x43],al
  410912:	rex.XB cmp spl,BYTE PTR [r8]
  410915:	sub    BYTE PTR [rdi+0x4e],al
  410918:	push   rbp
  410919:	sub    DWORD PTR [rax],esp
  41091b:	xor    al,0x2e
  41091d:	cmp    DWORD PTR [rsi],ebp
  41091f:	xor    al,0x0
	...
  41092d:	add    BYTE PTR [rax],al
  41092f:	add    BYTE PTR [rdi+0x43],al
  410932:	rex.XB cmp spl,BYTE PTR [r8]
  410935:	sub    BYTE PTR [rdi+0x4e],al
  410938:	push   rbp
  410939:	sub    DWORD PTR [rax],esp
  41093b:	xor    al,0x2e
  41093d:	cmp    DWORD PTR [rsi],ebp
  41093f:	xor    al,0x0
	...
  41094d:	add    BYTE PTR [rax],al
  41094f:	add    BYTE PTR [rdi+0x43],al
  410952:	rex.XB cmp spl,BYTE PTR [r8]
  410955:	sub    BYTE PTR [rdi+0x4e],al
  410958:	push   rbp
  410959:	sub    DWORD PTR [rax],esp
  41095b:	xor    al,0x2e
  41095d:	cmp    DWORD PTR [rsi],ebp
  41095f:	xor    al,0x0
	...
  41096d:	add    BYTE PTR [rax],al
  41096f:	add    BYTE PTR [rdi+0x43],al
  410972:	rex.XB cmp spl,BYTE PTR [r8]
  410975:	sub    BYTE PTR [rdi+0x4e],al
  410978:	push   rbp
  410979:	sub    DWORD PTR [rax],esp
  41097b:	xor    al,0x2e
  41097d:	cmp    DWORD PTR [rsi],ebp
  41097f:	xor    al,0x0
	...
  41098d:	add    BYTE PTR [rax],al
  41098f:	add    BYTE PTR [rdi+0x43],al
  410992:	rex.XB cmp spl,BYTE PTR [r8]
  410995:	sub    BYTE PTR [rdi+0x4e],al
  410998:	push   rbp
  410999:	sub    DWORD PTR [rax],esp
  41099b:	xor    al,0x2e
  41099d:	cmp    DWORD PTR [rsi],ebp
  41099f:	xor    al,0x0
	...
  4109ad:	add    BYTE PTR [rax],al
  4109af:	add    BYTE PTR [rdi+0x43],al
  4109b2:	rex.XB cmp spl,BYTE PTR [r8]
  4109b5:	sub    BYTE PTR [rdi+0x4e],al
  4109b8:	push   rbp
  4109b9:	sub    DWORD PTR [rax],esp
  4109bb:	xor    al,0x2e
  4109bd:	cmp    DWORD PTR [rsi],ebp
  4109bf:	xor    al,0x0
	...
  4109cd:	add    BYTE PTR [rax],al
  4109cf:	add    BYTE PTR [rdi+0x43],al
  4109d2:	rex.XB cmp spl,BYTE PTR [r8]
  4109d5:	sub    BYTE PTR [rdi+0x4e],al
  4109d8:	push   rbp
  4109d9:	sub    DWORD PTR [rax],esp
  4109db:	xor    al,0x2e
  4109dd:	cmp    DWORD PTR [rsi],ebp
  4109df:	xor    al,0x0
	...
  4109ed:	add    BYTE PTR [rax],al
  4109ef:	add    BYTE PTR [rdi+0x43],al
  4109f2:	rex.XB cmp spl,BYTE PTR [r8]
  4109f5:	sub    BYTE PTR [rdi+0x4e],al
  4109f8:	push   rbp
  4109f9:	sub    DWORD PTR [rax],esp
  4109fb:	xor    al,0x2e
  4109fd:	cmp    DWORD PTR [rsi],ebp
  4109ff:	xor    al,0x0
	...
  410a0d:	add    BYTE PTR [rax],al
  410a0f:	add    BYTE PTR [rdi+0x43],al
  410a12:	rex.XB cmp spl,BYTE PTR [r8]
  410a15:	sub    BYTE PTR [rdi+0x4e],al
  410a18:	push   rbp
  410a19:	sub    DWORD PTR [rax],esp
  410a1b:	xor    al,0x2e
  410a1d:	cmp    DWORD PTR [rsi],ebp
  410a1f:	xor    al,0x0
	...
  410a2d:	add    BYTE PTR [rax],al
  410a2f:	add    BYTE PTR [rdi+0x43],al
  410a32:	rex.XB cmp spl,BYTE PTR [r8]
  410a35:	sub    BYTE PTR [rdi+0x4e],al
  410a38:	push   rbp
  410a39:	sub    DWORD PTR [rax],esp
  410a3b:	xor    al,0x2e
  410a3d:	cmp    DWORD PTR [rsi],ebp
  410a3f:	xor    al,0x0
	...
  410a4d:	add    BYTE PTR [rax],al
  410a4f:	add    BYTE PTR [rdi+0x43],al
  410a52:	rex.XB cmp spl,BYTE PTR [r8]
  410a55:	sub    BYTE PTR [rdi+0x4e],al
  410a58:	push   rbp
  410a59:	sub    DWORD PTR [rax],esp
  410a5b:	xor    al,0x2e
  410a5d:	cmp    DWORD PTR [rsi],ebp
  410a5f:	xor    al,0x0
	...
  410a6d:	add    BYTE PTR [rax],al
  410a6f:	add    BYTE PTR [rdi+0x43],al
  410a72:	rex.XB cmp spl,BYTE PTR [r8]
  410a75:	sub    BYTE PTR [rdi+0x4e],al
  410a78:	push   rbp
  410a79:	sub    DWORD PTR [rax],esp
  410a7b:	xor    al,0x2e
  410a7d:	cmp    DWORD PTR [rsi],ebp
  410a7f:	xor    al,0x0
	...
  410a8d:	add    BYTE PTR [rax],al
  410a8f:	add    BYTE PTR [rdi+0x43],al
  410a92:	rex.XB cmp spl,BYTE PTR [r8]
  410a95:	sub    BYTE PTR [rdi+0x4e],al
  410a98:	push   rbp
  410a99:	sub    DWORD PTR [rax],esp
  410a9b:	xor    al,0x2e
  410a9d:	cmp    DWORD PTR [rsi],ebp
  410a9f:	xor    al,0x0
	...
  410aad:	add    BYTE PTR [rax],al
  410aaf:	add    BYTE PTR [rdi+0x43],al
  410ab2:	rex.XB cmp spl,BYTE PTR [r8]
  410ab5:	sub    BYTE PTR [rdi+0x4e],al
  410ab8:	push   rbp
  410ab9:	sub    DWORD PTR [rax],esp
  410abb:	xor    al,0x2e
  410abd:	cmp    DWORD PTR [rsi],ebp
  410abf:	xor    al,0x0
	...
  410acd:	add    BYTE PTR [rax],al
  410acf:	add    BYTE PTR [rdi+0x43],al
  410ad2:	rex.XB cmp spl,BYTE PTR [r8]
  410ad5:	sub    BYTE PTR [rdi+0x4e],al
  410ad8:	push   rbp
  410ad9:	sub    DWORD PTR [rax],esp
  410adb:	xor    al,0x2e
  410add:	cmp    DWORD PTR [rsi],ebp
  410adf:	xor    al,0x0
	...
  410aed:	add    BYTE PTR [rax],al
  410aef:	add    BYTE PTR [rdi+0x43],al
  410af2:	rex.XB cmp spl,BYTE PTR [r8]
  410af5:	sub    BYTE PTR [rdi+0x4e],al
  410af8:	push   rbp
  410af9:	sub    DWORD PTR [rax],esp
  410afb:	xor    al,0x2e
  410afd:	cmp    DWORD PTR [rsi],ebp
  410aff:	xor    al,0x0
	...
  410b0d:	add    BYTE PTR [rax],al
  410b0f:	add    BYTE PTR [rdi+0x43],al
  410b12:	rex.XB cmp spl,BYTE PTR [r8]
  410b15:	sub    BYTE PTR [rdi+0x4e],al
  410b18:	push   rbp
  410b19:	sub    DWORD PTR [rax],esp
  410b1b:	xor    al,0x2e
  410b1d:	cmp    DWORD PTR [rsi],ebp
  410b1f:	xor    al,0x0
	...
  410b2d:	add    BYTE PTR [rax],al
  410b2f:	add    BYTE PTR [rdi+0x43],al
  410b32:	rex.XB cmp spl,BYTE PTR [r8]
  410b35:	sub    BYTE PTR [rdi+0x4e],al
  410b38:	push   rbp
  410b39:	sub    DWORD PTR [rax],esp
  410b3b:	xor    al,0x2e
  410b3d:	cmp    DWORD PTR [rsi],ebp
  410b3f:	xor    al,0x0
	...
  410b4d:	add    BYTE PTR [rax],al
  410b4f:	add    BYTE PTR [rdi+0x43],al
  410b52:	rex.XB cmp spl,BYTE PTR [r8]
  410b55:	sub    BYTE PTR [rdi+0x4e],al
  410b58:	push   rbp
  410b59:	sub    DWORD PTR [rax],esp
  410b5b:	xor    al,0x2e
  410b5d:	cmp    DWORD PTR [rsi],ebp
  410b5f:	xor    al,0x0
	...
  410b6d:	add    BYTE PTR [rax],al
  410b6f:	add    BYTE PTR [rdi+0x43],al
  410b72:	rex.XB cmp spl,BYTE PTR [r8]
  410b75:	sub    BYTE PTR [rdi+0x4e],al
  410b78:	push   rbp
  410b79:	sub    DWORD PTR [rax],esp
  410b7b:	xor    al,0x2e
  410b7d:	cmp    DWORD PTR [rsi],ebp
  410b7f:	xor    al,0x0
	...
  410b8d:	add    BYTE PTR [rax],al
  410b8f:	add    BYTE PTR [rdi+0x43],al
  410b92:	rex.XB cmp spl,BYTE PTR [r8]
  410b95:	sub    BYTE PTR [rdi+0x4e],al
  410b98:	push   rbp
  410b99:	sub    DWORD PTR [rax],esp
  410b9b:	xor    al,0x2e
  410b9d:	cmp    DWORD PTR [rsi],ebp
  410b9f:	xor    al,0x0
	...
  410bad:	add    BYTE PTR [rax],al
  410baf:	add    BYTE PTR [rdi+0x43],al
  410bb2:	rex.XB cmp spl,BYTE PTR [r8]
  410bb5:	sub    BYTE PTR [rdi+0x4e],al
  410bb8:	push   rbp
  410bb9:	sub    DWORD PTR [rax],esp
  410bbb:	xor    al,0x2e
  410bbd:	cmp    DWORD PTR [rsi],ebp
  410bbf:	xor    al,0x0
	...
  410bcd:	add    BYTE PTR [rax],al
  410bcf:	add    BYTE PTR [rdi+0x43],al
  410bd2:	rex.XB cmp spl,BYTE PTR [r8]
  410bd5:	sub    BYTE PTR [rdi+0x4e],al
  410bd8:	push   rbp
  410bd9:	sub    DWORD PTR [rax],esp
  410bdb:	xor    al,0x2e
  410bdd:	cmp    DWORD PTR [rsi],ebp
  410bdf:	xor    al,0x0
	...
  410bed:	add    BYTE PTR [rax],al
  410bef:	add    BYTE PTR [rdi+0x43],al
  410bf2:	rex.XB cmp spl,BYTE PTR [r8]
  410bf5:	sub    BYTE PTR [rdi+0x4e],al
  410bf8:	push   rbp
  410bf9:	sub    DWORD PTR [rax],esp
  410bfb:	xor    al,0x2e
  410bfd:	cmp    DWORD PTR [rsi],ebp
  410bff:	xor    al,0x0
	...
  410c0d:	add    BYTE PTR [rax],al
  410c0f:	add    BYTE PTR [rdi+0x43],al
  410c12:	rex.XB cmp spl,BYTE PTR [r8]
  410c15:	sub    BYTE PTR [rdi+0x4e],al
  410c18:	push   rbp
  410c19:	sub    DWORD PTR [rax],esp
  410c1b:	xor    al,0x2e
  410c1d:	cmp    DWORD PTR [rsi],ebp
  410c1f:	xor    al,0x0
	...
  410c2d:	add    BYTE PTR [rax],al
  410c2f:	add    BYTE PTR [rdi+0x43],al
  410c32:	rex.XB cmp spl,BYTE PTR [r8]
  410c35:	sub    BYTE PTR [rdi+0x4e],al
  410c38:	push   rbp
  410c39:	sub    DWORD PTR [rax],esp
  410c3b:	xor    al,0x2e
  410c3d:	cmp    DWORD PTR [rsi],ebp
  410c3f:	xor    al,0x0
	...
  410c4d:	add    BYTE PTR [rax],al
  410c4f:	add    BYTE PTR [rdi+0x43],al
  410c52:	rex.XB cmp spl,BYTE PTR [r8]
  410c55:	sub    BYTE PTR [rdi+0x4e],al
  410c58:	push   rbp
  410c59:	sub    DWORD PTR [rax],esp
  410c5b:	xor    al,0x2e
  410c5d:	cmp    DWORD PTR [rsi],ebp
  410c5f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000411000 <.pdata>:
  411000:	add    BYTE PTR [rax],dl
  411002:	add    BYTE PTR [rax],al
  411004:	add    DWORD PTR [rax],edx
  411006:	add    BYTE PTR [rax],al
  411008:	add    BYTE PTR [rax],ah
  41100a:	add    DWORD PTR [rax],eax
  41100c:	adc    BYTE PTR [rax],dl
  41100e:	add    BYTE PTR [rax],al
  411010:	push   rcx
  411011:	adc    DWORD PTR [rax],eax
  411013:	add    BYTE PTR [rax+riz*1],al
  411016:	add    DWORD PTR [rax],eax
  411018:	(bad)  
  411019:	adc    DWORD PTR [rax],eax
  41101b:	add    BYTE PTR [rsi+0xc000011],ch
  411021:	and    BYTE PTR [rcx],al
  411023:	add    BYTE PTR [rax-0x31ffffef],dh
  411029:	adc    al,0x0
  41102b:	add    BYTE PTR [rax+riz*1],dl
  41102e:	add    DWORD PTR [rax],eax
  411030:	rcl    BYTE PTR [rax+rax*1],1
  411033:	add    dl,dh
  411035:	adc    al,0x0
  411037:	add    BYTE PTR [rax],ch
  411039:	and    BYTE PTR [rcx],al
  41103b:	add    BYTE PTR [rax],al
  41103d:	adc    eax,0x15220000
  411042:	add    BYTE PTR [rax],al
  411044:	rex.W and BYTE PTR [rcx],al
  411047:	add    BYTE PTR [rax],dh
  411049:	adc    eax,0x160e0000
  41104e:	add    BYTE PTR [rax],al
  411050:	push   0x10000120
  411055:	(bad)  
  411056:	add    BYTE PTR [rax],al
  411058:	lods   eax,DWORD PTR ds:[rsi]
  411059:	(bad)  
  41105a:	add    BYTE PTR [rax],al
  41105c:	js     0x41107e
  41105e:	add    DWORD PTR [rax],eax
  411060:	mov    al,0x16
  411062:	add    BYTE PTR [rax],al
  411064:	es (bad) 
  411066:	add    BYTE PTR [rax],al
  411068:	test   BYTE PTR [rax],ah
  41106a:	add    DWORD PTR [rax],eax
  41106c:	xor    BYTE PTR [rdi],dl
  41106e:	add    BYTE PTR [rax],al
  411070:	imul   ebx,DWORD PTR [rax],0x20900000
  411076:	add    DWORD PTR [rax],eax
  411078:	jo     0x411092
  41107a:	add    BYTE PTR [rax],al
  41107c:	xchg   BYTE PTR [rbx],bl
  41107e:	add    BYTE PTR [rax],al
  411080:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  411081:	and    BYTE PTR [rcx],al
  411083:	add    BYTE PTR [rax-0x5ffffe5],dl
  411089:	sbb    al,0x0
  41108b:	add    BYTE PTR [rax+riz*1+0x1d000001],bh
  411092:	add    BYTE PTR [rax],al
  411094:	data16 (bad) 
  411096:	add    BYTE PTR [rax],al
  411098:	enter  0x120,0x0
  41109c:	jo     0x4110bc
  41109e:	add    BYTE PTR [rax],al
  4110a0:	sub    bl,BYTE PTR [rdi]
  4110a2:	add    BYTE PTR [rax],al
  4110a4:	fsub   QWORD PTR [rax]
  4110a6:	add    DWORD PTR [rax],eax
  4110a8:	xor    BYTE PTR [rdi],bl
  4110aa:	add    BYTE PTR [rax],al
  4110ac:	jp     0x4110cf
  4110ae:	add    BYTE PTR [rax],al
  4110b0:	lock and BYTE PTR [rcx],al
  4110b3:	add    BYTE PTR [rax+0x5b000021],al
  4110b9:	and    al,0x0
  4110bb:	add    BYTE PTR [rax],al
  4110bd:	and    DWORD PTR [rcx],eax
  4110bf:	add    BYTE PTR [rax+0x24],ah
  4110c2:	add    BYTE PTR [rax],al
  4110c4:	cmp    DWORD PTR [rip+0x21180000],esp        # 0x215910ca
  4110ca:	add    DWORD PTR [rax],eax
  4110cc:	rex and eax,0x25a60000
  4110d2:	add    BYTE PTR [rax],al
  4110d4:	sub    al,0x21
  4110d6:	add    DWORD PTR [rax],eax
  4110d8:	mov    al,0x25
  4110da:	add    BYTE PTR [rax],al
  4110dc:	push   rdx
  4110dd:	xor    BYTE PTR [rax],al
  4110df:	add    BYTE PTR [rcx+riz*1],dh
  4110e2:	add    DWORD PTR [rax],eax
  4110e4:	(bad)  
  4110e5:	xor    BYTE PTR [rax],al
  4110e7:	add    BYTE PTR [rbx],ah
  4110e9:	xor    eax,DWORD PTR [rax]
  4110eb:	add    BYTE PTR [rcx+riz*1+0x1],cl
  4110ef:	add    BYTE PTR [rax],dh
  4110f1:	xor    eax,DWORD PTR [rax]
  4110f3:	add    BYTE PTR [rcx],cl
  4110f5:	xor    al,0x0
  4110f7:	add    BYTE PTR [rax+0x21],ah
  4110fa:	add    DWORD PTR [rax],eax
  4110fc:	adc    BYTE PTR [rax+rax*1],dh
  4110ff:	add    BYTE PTR [rdi],bh
  411101:	xor    eax,0x21740000
  411106:	add    DWORD PTR [rax],eax
  411108:	rex xor eax,0x3a450000
  41110e:	add    BYTE PTR [rax],al
  411110:	test   BYTE PTR [rcx],ah
  411112:	add    DWORD PTR [rax],eax
  411114:	push   rax
  411115:	cmp    al,BYTE PTR [rax]
  411117:	add    ah,ah
  411119:	rex.XB add BYTE PTR [r8],al
  41111c:	pushf  
  41111d:	and    DWORD PTR [rcx],eax
  41111f:	add    al,dh
  411121:	rex.XB add BYTE PTR [r8],al
  411124:	sbb    DWORD PTR [rbp+0x0],eax
  411127:	add    BYTE PTR [rcx+riz*1+0x45200001],dh
  41112e:	add    BYTE PTR [rax],al
  411130:	xchg   esp,eax
  411131:	add    BYTE PTR [r8],r8b
  411134:	int3   
  411135:	and    DWORD PTR [rcx],eax
  411137:	add    BYTE PTR [rax-0x15ffffbb],ah
  41113d:	rex.RXB add BYTE PTR [r8],r8b
  411140:	fsub   QWORD PTR [rcx]
  411142:	add    DWORD PTR [rax],eax
  411144:	lock rex.RXB add BYTE PTR [r8],r8b
  411148:	jmp    0xfffffffff0411195
  41114d:	and    DWORD PTR [rcx],eax
  41114f:	add    al,dh
  411151:	rex.W add BYTE PTR [rax],al
  411154:	out    dx,al
  411155:	rex.WR add BYTE PTR [rax],r8b
  411158:	adc    al,0x22
  41115a:	add    DWORD PTR [rax],eax
  41115c:	lock rex.WR add BYTE PTR [rax],r8b
  411160:	(bad)  
  411161:	rex.WRXB add BYTE PTR [r8],r8b
  411164:	sub    al,0x22
  411166:	add    DWORD PTR [rax],eax
  411168:	loopne 0x4111b9
  41116a:	add    BYTE PTR [rax],al
  41116c:	adc    al,0x50
  41116e:	add    BYTE PTR [rax],al
  411170:	cmp    al,0x22
  411172:	add    DWORD PTR [rax],eax
  411174:	and    BYTE PTR [rax+0x0],dl
  411177:	add    BYTE PTR [rbx],al
  411179:	push   rbx
  41117a:	add    BYTE PTR [rax],al
  41117c:	and    r8b,BYTE PTR [rcx]
  41117f:	add    BYTE PTR [rax],dl
  411181:	push   rbx
  411182:	add    BYTE PTR [rax],al
  411184:	fs push rbx
  411186:	add    BYTE PTR [rax],al
  411188:	pop    rsp
  411189:	and    al,BYTE PTR [rcx]
  41118b:	add    BYTE PTR [rax+0x53],dh
  41118e:	add    BYTE PTR [rax],al
  411190:	ja     0x4111e5
  411192:	add    BYTE PTR [rax],al
  411194:	(bad)  
  411195:	and    al,BYTE PTR [rcx]
  411197:	add    BYTE PTR [rax-0x78ffffad],al
  41119d:	push   rbx
  41119e:	add    BYTE PTR [rax],al
  4111a0:	and    al,BYTE PTR fs:[rcx]
  4111a3:	add    BYTE PTR [rax-0x3effffad],dl
  4111a9:	push   rbx
  4111aa:	add    BYTE PTR [rax],al
  4111ac:	push   0xffffffffd0000122
  4111b1:	push   rbx
  4111b2:	add    BYTE PTR [rax],al
  4111b4:	push   rax
  4111b5:	push   rsp
  4111b6:	add    BYTE PTR [rax],al
  4111b8:	je     0x4111dc
  4111ba:	add    DWORD PTR [rax],eax
  4111bc:	push   rax
  4111bd:	push   rsp
  4111be:	add    BYTE PTR [rax],al
  4111c0:	jl     0x411216
  4111c2:	add    BYTE PTR [rax],al
  4111c4:	and    BYTE PTR [rdx],0x1
  4111c7:	add    BYTE PTR [rax-0x14ffffac],al
  4111cd:	push   rsp
  4111ce:	add    BYTE PTR [rax],al
  4111d0:	mov    BYTE PTR [rdx],ah
  4111d2:	add    DWORD PTR [rax],eax
  4111d4:	lock push rsp
  4111d6:	add    BYTE PTR [rax],al
  4111d8:	pop    rbp
  4111d9:	push   rbp
  4111da:	add    BYTE PTR [rax],al
  4111dc:	cwde   
  4111dd:	and    al,BYTE PTR [rcx]
  4111df:	add    BYTE PTR [rax+0x55],ah
  4111e2:	add    BYTE PTR [rax],al
  4111e4:	cmp    BYTE PTR [rdi+0x0],dl
  4111e7:	add    BYTE PTR [rdx+riz*1+0x57400001],ah
  4111ee:	add    BYTE PTR [rax],al
  4111f0:	(bad)  
  4111f1:	pop    rax
  4111f2:	add    BYTE PTR [rax],al
  4111f4:	mov    esp,0x40000122
  4111f9:	pop    rax
  4111fa:	add    BYTE PTR [rax],al
  4111fc:	jns    0x411257
  4111fe:	add    BYTE PTR [rax],al
  411200:	int3   
  411201:	and    al,BYTE PTR [rcx]
  411203:	add    BYTE PTR [rax-0x53ffffa7],al
  411209:	pop    rcx
  41120a:	add    BYTE PTR [rax],al
  41120c:	in     al,0x22
  41120e:	add    DWORD PTR [rax],eax
  411210:	mov    al,0x59
  411212:	add    BYTE PTR [rax],al
  411214:	(bad)  
  411215:	pop    rdx
  411216:	add    BYTE PTR [rax],al
  411218:	in     al,dx
  411219:	and    al,BYTE PTR [rcx]
  41121b:	add    BYTE PTR [rax+0x5a],dh
  41121e:	add    BYTE PTR [rax],al
  411220:	rcr    DWORD PTR [rbx+0x0],cl
  411223:	add    BYTE PTR [rax],al
  411225:	and    eax,DWORD PTR [rcx]
  411227:	add    al,ah
  411229:	pop    rbx
  41122a:	add    BYTE PTR [rax],al
  41122c:	add    DWORD PTR [rax+rax*1+0x0],ebx
  411230:	adc    BYTE PTR [rbx],ah
  411232:	add    DWORD PTR [rax],eax
  411234:	adc    BYTE PTR [rax+rax*1+0x0],bl
  411238:	cmp    BYTE PTR [rax+rax*1+0x0],bl
  41123c:	sbb    BYTE PTR [rbx],ah
  41123e:	add    DWORD PTR [rax],eax
  411240:	rex pop rsp
  411242:	add    BYTE PTR [rax],al
  411244:	push   0x2400005c
  411249:	and    eax,DWORD PTR [rcx]
  41124b:	add    BYTE PTR [rax+0x5c],dh
  41124e:	add    BYTE PTR [rax],al
  411250:	xchg   esi,eax
  411251:	pop    rsp
  411252:	add    BYTE PTR [rax],al
  411254:	sub    BYTE PTR [rbx],ah
  411256:	add    DWORD PTR [rax],eax
  411258:	movabs al,ds:0x3000005cd900005c
  411261:	and    eax,DWORD PTR [rcx]
  411263:	add    al,ah
  411265:	pop    rsp
  411266:	add    BYTE PTR [rax],al
  411268:	rex.RXB pop r13
  41126a:	add    BYTE PTR [rax],al
  41126c:	xor    al,0x23
  41126e:	add    DWORD PTR [rax],eax
  411270:	push   rax
  411271:	pop    rbp
  411272:	add    BYTE PTR [rax],al
  411274:	cwde   
  411275:	pop    rbp
  411276:	add    BYTE PTR [rax],al
  411278:	and    rax,QWORD PTR [rcx]
  41127b:	add    BYTE PTR [rax-0x36ffffa3],ah
  411281:	pop    rsi
  411282:	add    BYTE PTR [rax],al
  411284:	push   rsp
  411285:	and    eax,DWORD PTR [rcx]
  411287:	add    al,dl
  411289:	pop    rsi
  41128a:	add    BYTE PTR [rax],al
  41128c:	cdq    
  41128d:	pop    rdi
  41128e:	add    BYTE PTR [rax],al
  411290:	ins    BYTE PTR es:[rdi],dx
  411291:	and    eax,DWORD PTR [rcx]
  411293:	add    BYTE PTR [rax-0xdffffa1],ah
  411299:	pop    rdi
  41129a:	add    BYTE PTR [rax],al
  41129c:	jl     0x4112c1
  41129e:	add    DWORD PTR [rax],eax
  4112a0:	add    BYTE PTR [rax+0x0],ah
  4112a3:	add    BYTE PTR [rbx-0x77ffffa0],bl
  4112a9:	and    eax,DWORD PTR [rcx]
  4112ab:	add    BYTE PTR [rax+0x57000060],ah
  4112b1:	(bad)  
  4112b2:	add    BYTE PTR [rax],al
  4112b4:	xchg   esp,eax
  4112b5:	and    eax,DWORD PTR [rcx]
  4112b7:	add    BYTE PTR [rax+0x61],ah
  4112ba:	add    BYTE PTR [rax],al
  4112bc:	fisub  WORD PTR [rcx+0x0]
  4112bf:	add    BYTE PTR [rbx+riz*1+0x61e00001],ah
  4112c6:	add    BYTE PTR [rax],al
  4112c8:	or     al,0x62
  4112ca:	add    BYTE PTR [rax],al
  4112cc:	mov    ah,0x23
  4112ce:	add    DWORD PTR [rax],eax
  4112d0:	adc    BYTE PTR [rdx+0x0],ah
  4112d3:	add    BYTE PTR [rip+0xffffffffbc000062],dl        # 0xffffffffbc41133b
  4112d9:	and    eax,DWORD PTR [rcx]
  4112db:	add    BYTE PTR [rax],ah
  4112dd:	(bad)  
  4112de:	add    BYTE PTR [rax],al
  4112e0:	int    0x62
  4112e2:	add    BYTE PTR [rax],al
  4112e4:	shl    BYTE PTR [rbx],0x1
  4112e7:	add    al,dl
  4112e9:	(bad)  
  4112ea:	add    BYTE PTR [rax],al
  4112ec:	jo     0x411351
  4112ee:	add    BYTE PTR [rax],al
  4112f0:	shl    BYTE PTR [rbx],1
  4112f2:	add    DWORD PTR [rax],eax
  4112f4:	jo     0x411359
  4112f6:	add    BYTE PTR [rax],al
  4112f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4112f9:	movsxd eax,DWORD PTR [rax]
  4112fb:	add    ah,bl
  4112fd:	and    eax,DWORD PTR [rcx]
  4112ff:	add    BYTE PTR [rax-0x41ffff9d],dh
  411305:	movsxd eax,DWORD PTR [rax]
  411307:	add    al,ah
  411309:	and    eax,DWORD PTR [rcx]
  41130b:	add    al,al
  41130d:	movsxd eax,DWORD PTR [rax]
  41130f:	add    dh,cl
  411311:	movsxd eax,DWORD PTR [rax]
  411313:	add    ah,ah
  411315:	and    eax,DWORD PTR [rcx]
  411317:	add    al,dl
  411319:	movsxd eax,DWORD PTR [rax]
  41131b:	add    dh,bl
  41131d:	movsxd eax,DWORD PTR [rax]
  41131f:	add    al,ch
  411321:	and    eax,DWORD PTR [rcx]
  411323:	add    al,ah
  411325:	movsxd eax,DWORD PTR [rax]
  411327:	add    dh,ch
  411329:	movsxd eax,DWORD PTR [rax]
  41132b:	add    ah,ch
  41132d:	and    eax,DWORD PTR [rcx]
  41132f:	add    al,dh
  411331:	add    BYTE PTR gs:[rax],al
  411334:	xchg   edi,eax
  411335:	data16 add BYTE PTR [rax],al
  411338:	lock and eax,DWORD PTR [rcx]
  41133b:	add    BYTE PTR [rax-0x46ffff9a],ah
  411341:	data16 add BYTE PTR [rax],al
  411344:	clc    
  411345:	and    eax,DWORD PTR [rcx]
  411347:	add    al,al
  411349:	data16 add BYTE PTR [rax],al
  41134c:	cmc    
  41134d:	data16 add BYTE PTR [rax],al
  411350:	add    BYTE PTR [rcx+rax*1],ah
  411353:	add    BYTE PTR [rax],al
  411355:	add    BYTE PTR [eax],al
  411358:	push   rbp
  411359:	add    BYTE PTR [eax],al
  41135c:	or     BYTE PTR [rcx+rax*1],ah
  41135f:	add    BYTE PTR [rax+0x67],ah
  411362:	add    BYTE PTR [rax],al
  411364:	jl     0x4113cd
  411366:	add    BYTE PTR [rax],al
  411368:	adc    al,0x24
  41136a:	add    DWORD PTR [rax],eax
  41136c:	and    BYTE PTR [rdi+0x0],0x0
  411370:	mov    ah,BYTE PTR [rdi+0x0]
  411373:	add    BYTE PTR [rax],bl
  411375:	and    al,0x1
  411377:	add    BYTE PTR [rax-0x6cffff99],dl
  41137d:	add    BYTE PTR [eax],al
  411380:	sbb    al,0x24
  411382:	add    DWORD PTR [rax],eax
  411384:	movabs al,ds:0x2000006876000067
  41138d:	and    al,0x1
  41138f:	add    BYTE PTR [rax+0x7b000068],al
  411395:	imul   eax,DWORD PTR [rax],0x1243000
  41139b:	add    BYTE PTR [rax-0x50ffff97],al
  4113a1:	imul   eax,DWORD PTR [rax],0x1244000
  4113a7:	add    BYTE PTR [rax+0x19000069],dh
  4113ad:	push   0x0
  4113af:	add    BYTE PTR [rax+0x24],cl
  4113b2:	add    DWORD PTR [rax],eax
  4113b4:	and    BYTE PTR [rdx+0x0],ch
  4113b7:	add    BYTE PTR [rbx],ah
  4113b9:	push   0x0
  4113bb:	add    BYTE PTR [rsp+0x1],dl
  4113bf:	add    BYTE PTR [rax],dh
  4113c1:	push   0x0
  4113c3:	add    BYTE PTR [rcx+0x6a],dh
  4113c6:	add    BYTE PTR [rax],al
  4113c8:	pop    rax
  4113c9:	and    al,0x1
  4113cb:	add    BYTE PTR [rax-0x73ffff96],al
  4113d1:	push   0x0
  4113d3:	add    BYTE PTR [rax+0x24],ah
  4113d6:	add    DWORD PTR [rax],eax
  4113d8:	nop
  4113d9:	push   0x0
  4113db:	add    BYTE PTR [rbx+rbp*2+0x24640000],cl
  4113e2:	add    DWORD PTR [rax],eax
  4113e4:	nop
  4113e5:	imul   eax,DWORD PTR [rax],0x0
  4113e8:	xchg   ebx,eax
  4113e9:	imul   eax,DWORD PTR [rax],0x0
  4113ec:	jl     0x411412
  4113ee:	add    DWORD PTR [rax],eax
  4113f0:	movabs al,ds:0x8000006ba400006b
  4113f9:	and    al,0x1
  4113fb:	add    BYTE PTR [rax-0x4bffff95],dh
  411401:	imul   eax,DWORD PTR [rax],0x0
  411404:	test   BYTE PTR [rcx+rax*1],ah
  411407:	add    al,al
  411409:	imul   eax,DWORD PTR [rax],0x0
  41140c:	and    DWORD PTR [rax+rax*1+0x0],ebp
  411410:	mov    BYTE PTR [rcx+rax*1],ah
  411413:	add    BYTE PTR [rax],dh
  411415:	ins    BYTE PTR es:[rdi],dx
  411416:	add    BYTE PTR [rax],al
  411418:	xchg   edx,eax
  411419:	ins    DWORD PTR es:[rdi],dx
  41141a:	add    BYTE PTR [rax],al
  41141c:	xchg   esp,eax
  41141d:	and    al,0x1
  41141f:	add    BYTE PTR [rax-0x66ffff93],ah
  411425:	jo     0x411427
  411427:	add    BYTE PTR [rax-0x5ffffedc],ch
  41142d:	jo     0x41142f
  41142f:	add    BYTE PTR [rsi+0x72],al
  411432:	add    BYTE PTR [rax],al
  411434:	shl    BYTE PTR [rcx+rax*1],0x0
  411438:	push   rax
  411439:	jb     0x41143b
  41143b:	add    BYTE PTR [rbx+rsi*2],bh
  41143e:	add    BYTE PTR [rax],al
  411440:	enter  0x124,0x0
  411444:	rex jae 0x411447
  411447:	add    al,bh
  411449:	je     0x41144b
  41144b:	add    al,bl
  41144d:	and    al,0x1
  41144f:	add    BYTE PTR [rax],al
  411451:	jne    0x411453
  411453:	add    BYTE PTR [rbp+0x75],ch
  411456:	add    BYTE PTR [rax],al
  411458:	loopne 0x41147e
  41145a:	add    DWORD PTR [rax],eax
  41145c:	jo     0x4114d3
  41145e:	add    BYTE PTR [rax],al
  411460:	out    dx,eax
  411461:	jne    0x411463
  411463:	add    al,dh
  411465:	and    al,0x1
  411467:	add    al,dh
  411469:	jne    0x41146b
  41146b:	add    BYTE PTR [rdi-0x3ffff8a],cl
  411471:	and    al,0x1
  411473:	add    BYTE PTR [rax+0x6a000076],dl
  411479:	ja     0x41147b
  41147b:	add    BYTE PTR ds:0x77700001,al
  411482:	add    BYTE PTR [rax],al
  411484:	(bad)  
  411485:	ja     0x411487
  411487:	add    BYTE PTR ds:0x77900001,cl
  41148e:	add    BYTE PTR [rax],al
  411490:	movabs ds:0xb000012510000077,al
  411499:	ja     0x41149b
  41149b:	add    ch,dh
  41149d:	ja     0x41149f
  41149f:	add    BYTE PTR ds:0x78000001,dl
  4114a6:	add    BYTE PTR [rax],al
  4114a8:	sahf   
  4114a9:	js     0x4114ab
  4114ab:	add    BYTE PTR [rax],bl
  4114ad:	and    eax,0x78a00001
  4114b2:	add    BYTE PTR [rax],al
  4114b4:	jrcxz  0x41152e
  4114b6:	add    BYTE PTR [rax],al
  4114b8:	and    al,0x25
  4114ba:	add    DWORD PTR [rax],eax
  4114bc:	lock js 0x4114bf
  4114bf:	add    BYTE PTR [rbx],ch
  4114c1:	jns    0x4114c3
  4114c3:	add    BYTE PTR [rax],dh
  4114c5:	and    eax,0x79300001
  4114ca:	add    BYTE PTR [rax],al
  4114cc:	mov    esi,0x38000079
  4114d1:	and    eax,0x79c00001
  4114d6:	add    BYTE PTR [rax],al
  4114d8:	clc    
  4114d9:	jns    0x4114db
  4114db:	add    BYTE PTR [rbp+riz*1+0x1],al
  4114df:	add    BYTE PTR [rax],al
  4114e1:	jp     0x4114e3
  4114e3:	add    BYTE PTR [rbp+0x7a],dl
  4114e6:	add    BYTE PTR [rax],al
  4114e8:	push   rax
  4114e9:	and    eax,0x7a600001
  4114ee:	add    BYTE PTR [rax],al
  4114f0:	(bad)  
  4114f1:	jnp    0x4114f3
  4114f3:	add    BYTE PTR [rbp+riz*1+0x1],bl
  4114f7:	add    BYTE PTR [rax+0x7b],dl
  4114fa:	add    BYTE PTR [rax],al
  4114fc:	xor    BYTE PTR [rax+rax*1+0x0],bh
  411500:	ins    BYTE PTR es:[rdi],dx
  411501:	and    eax,0x7c300001
  411506:	add    BYTE PTR [rax],al
  411508:	fidivr DWORD PTR [rax+rax*1+0x0]
  41150c:	je     0x411533
  41150e:	add    DWORD PTR [rax],eax
  411510:	loopne 0x41158e
  411512:	add    BYTE PTR [rax],al
  411514:	(bad)  
  411515:	jge    0x411517
  411517:	add    BYTE PTR [rbp+riz*1+0x7d600001],al
  41151e:	add    BYTE PTR [rax],al
  411520:	(bad)  
  411521:	add    DWORD PTR [rax],0x1259000
  411527:	add    BYTE PTR [rax],ah
  411529:	add    DWORD PTR [rax],0x880500
  41152f:	add    BYTE PTR [rax+0x10000125],ch
  411535:	mov    BYTE PTR [rax],al
  411537:	add    BYTE PTR [rdx],dh
  411539:	mov    BYTE PTR [rax],al
  41153b:	add    al,al
  41153d:	and    eax,0x88400001
  411542:	add    BYTE PTR [rax],al
  411544:	(bad)  
  411545:	mov    BYTE PTR [rax],al
  411547:	add    al,cl
  411549:	and    eax,0x88600001
  41154e:	add    BYTE PTR [rax],al
  411550:	or     BYTE PTR [rax+0x25d00000],0x1
  411557:	add    BYTE PTR [rax-0x4cffff78],al
  41155d:	mov    DWORD PTR [rax],eax
  41155f:	add    al,bl
  411561:	and    eax,0x89c00001
  411566:	add    BYTE PTR [rax],al
  411568:	or     BYTE PTR [rdx+0x25ec0000],0x1
  41156f:	add    BYTE PTR [rax+0x2b00008a],al
  411575:	mov    eax,DWORD PTR [rax]
  411577:	add    ah,bh
  411579:	and    eax,0x8b300001
  41157e:	add    BYTE PTR [rax],al
  411580:	jmp    0x8411613
  411585:	add    DWORD PTR es:[rax],eax
  411588:	lock mov es,WORD PTR [rax]
  41158b:	add    BYTE PTR [rdx],ah
  41158d:	pop    QWORD PTR [rax]
  41158f:	add    BYTE PTR [rax],ah
  411591:	add    DWORD PTR es:[rax],eax
  411594:	xor    BYTE PTR [rdi-0x70270000],cl
  41159a:	add    BYTE PTR [rax],al
  41159c:	and    al,0x26
  41159e:	add    DWORD PTR [rax],eax
  4115a0:	loopne 0x411531
  4115a2:	add    BYTE PTR [rax],al
  4115a4:	sub    eax,0x2c0000ab
  4115a9:	add    DWORD PTR es:[rax],eax
  4115ac:	xor    BYTE PTR [rbx-0x53750000],ch
  4115b2:	add    BYTE PTR [rax],al
  4115b4:	pop    rsp
  4115b5:	add    DWORD PTR es:[rax],eax
  4115b8:	nop
  4115b9:	lods   al,BYTE PTR ds:[rsi]
  4115ba:	add    BYTE PTR [rax],al
  4115bc:	pop    rdi
  4115bd:	mov    ch,0x0
  4115bf:	add    BYTE PTR [rax+0x26],dh
  4115c2:	add    DWORD PTR [rax],eax
  4115c4:	(bad)  
  4115c5:	mov    ch,0x0
  4115c7:	add    BYTE PTR [rbp-0x4a],bl
  4115ca:	add    BYTE PTR [rax],al
  4115cc:	mov    BYTE PTR [rsi],ah
  4115ce:	add    DWORD PTR [rax],eax
  4115d0:	(bad)  
  4115d1:	mov    dh,0x0
  4115d3:	add    BYTE PTR [rsi-0x6bffff4a],bl
  4115d9:	add    DWORD PTR es:[rax],eax
  4115dc:	movabs al,ds:0x980000b7240000b6
  4115e5:	add    DWORD PTR es:[rax],eax
  4115e8:	xor    BYTE PTR [rdi-0x451e0000],dh
  4115ee:	add    BYTE PTR [rax],al
  4115f0:	pushf  
  4115f1:	add    DWORD PTR es:[rax],eax
  4115f4:	lock mov edx,0xbbbc0000
  4115fa:	add    BYTE PTR [rax],al
  4115fc:	mov    ah,0x26
  4115fe:	add    DWORD PTR [rax],eax
  411600:	sar    BYTE PTR [rbx-0x43fe0000],0x0
  411607:	add    al,al
  411609:	add    DWORD PTR es:[rax],eax
  41160c:	adc    BYTE PTR [rax+rax*1+0xbd1e00],bh
  411613:	add    al,cl
  411615:	add    DWORD PTR es:[rax],eax
  411618:	and    BYTE PTR [rbp-0x427a0000],bh
  41161e:	add    BYTE PTR [rax],al
  411620:	(bad)  
  411621:	add    DWORD PTR es:[rax],eax
  411624:	nop
  411625:	mov    ebp,0xbe420000
  41162a:	add    BYTE PTR [rax],al
  41162c:	fsub   QWORD PTR [rsi]
  41162e:	add    DWORD PTR [rax],eax
  411630:	push   rax
  411631:	mov    esi,0xbe760000
  411636:	add    BYTE PTR [rax],al
  411638:	in     al,dx
  411639:	add    DWORD PTR es:[rax],eax
  41163c:	cmp    BYTE PTR [rsi-0x40500000],0x0
  411643:	add    ah,dh
  411645:	add    DWORD PTR es:[rax],eax
  411648:	mov    al,0xbf
  41164a:	add    BYTE PTR [rax],al
  41164c:	adc    al,0xc1
  41164e:	add    BYTE PTR [rax],al
  411650:	or     BYTE PTR [rdi],ah
  411652:	add    DWORD PTR [rax],eax
  411654:	and    cl,al
  411656:	add    BYTE PTR [rax],al
  411658:	xor    eax,edx
  41165a:	add    BYTE PTR [rax],al
  41165c:	sbb    BYTE PTR [rdi],ah
  41165e:	add    DWORD PTR [rax],eax
  411660:	rex ret 0x0
  411664:	test   dl,al
  411666:	add    BYTE PTR [rax],al
  411668:	sub    al,0x27
  41166a:	add    DWORD PTR [rax],eax
  41166c:	nop
  41166d:	ret    0x0
  411670:	mov    bl,0x0
  411673:	add    BYTE PTR [rax],dh
  411675:	(bad)  
  411676:	add    DWORD PTR [rax],eax
  411678:	rol    bl,1
  41167a:	add    BYTE PTR [rax],al
  41167c:	jrcxz  0x411642
  41167e:	add    BYTE PTR [rax],al
  411680:	cmp    al,0x27
  411682:	add    DWORD PTR [rax],eax
  411684:	lock (bad) 
  411686:	add    BYTE PTR [rax],al
  411688:	stc    
  411689:	(bad)
  41168c:	rex.W (bad) 
  41168e:	add    DWORD PTR [rax],eax
  411690:	add    dh,al
  411692:	add    BYTE PTR [rax],al
  411694:	and    al,0xc6
  411696:	add    BYTE PTR [rax],al
  411698:	push   rsp
  411699:	(bad)  
  41169a:	add    DWORD PTR [rax],eax
  41169c:	xor    dh,al
  41169e:	add    BYTE PTR [rax],al
  4116a0:	sub    eax,edi
  4116a2:	add    BYTE PTR [rax],al
  4116a4:	pop    rax
  4116a5:	(bad)  
  4116a6:	add    DWORD PTR [rax],eax
  4116a8:	xor    bh,al
  4116aa:	add    BYTE PTR [rax],al
  4116ac:	in     al,dx
  4116ad:	mov    DWORD PTR [rax],0x1276c00
  4116b3:	add    al,dh
  4116b5:	mov    DWORD PTR [rax],0xc83300
  4116bb:	add    BYTE PTR [rdi+riz*1+0x1],bh
  4116bf:	add    BYTE PTR [rax-0x38],al
  4116c2:	add    BYTE PTR [rax],al
  4116c4:	movabs ds:0xb0000127800000c8,al
  4116cd:	enter  0x0,0x39
  4116d1:	leave  
  4116d2:	add    BYTE PTR [rax],al
  4116d4:	test   BYTE PTR [rdi],ah
  4116d6:	add    DWORD PTR [rax],eax
  4116d8:	ror    dl,0x0
  4116db:	add    al,cl
  4116dd:	retf   0x0
  4116e0:	mov    BYTE PTR [rdi],ah
  4116e2:	add    DWORD PTR [rax],eax
  4116e4:	ror    dl,1
  4116e6:	add    BYTE PTR [rax],al
  4116e8:	fcmovne st,st(2)
  4116ea:	add    BYTE PTR [rax],al
  4116ec:	mov    WORD PTR [rdi],fs
  4116ee:	add    DWORD PTR [rax],eax
  4116f0:	mov    al,0xcb
  4116f2:	add    BYTE PTR [rax],al
  4116f4:	loopne 0x4116cd
  4116f6:	add    BYTE PTR [rax],al
  4116f8:	cld    
  4116f9:	and    DWORD PTR [rcx],eax
	...

Disassembly of section .xdata:

0000000000412000 <.xdata>:
  412000:	add    DWORD PTR [rax],eax
  412002:	add    BYTE PTR [rax],al
  412004:	add    DWORD PTR [rcx+rax*1],eax
  412007:	add    BYTE PTR [rdx+rax*2],al
  41200a:	add    BYTE PTR [rax],al
  41200c:	add    DWORD PTR [rcx+rax*1],eax
  41200f:	add    BYTE PTR [rdx+riz*2],al
  412012:	add    BYTE PTR [rax],al
  412014:	add    DWORD PTR [rdi],ecx
  412016:	or     BYTE PTR [rax],al
  412018:	lgdt   [rbx]
  41201b:	add    BYTE PTR [rax],cl
  41201d:	xor    BYTE PTR [rdi],al
  41201f:	(bad)  
  412020:	(bad)  
  412021:	jo     0x412028
  412023:	push   rax
  412024:	add    al,0xc0
  412026:	add    dl,al
  412028:	or     DWORD PTR [rcx+rax*1],eax
  41202b:	add    BYTE PTR [rdx+rax*2],al
  41202e:	add    BYTE PTR [rax],al
  412030:	mov    al,0xca
  412032:	add    BYTE PTR [rax],al
  412034:	add    DWORD PTR [rax],eax
  412036:	add    BYTE PTR [rax],al
  412038:	(bad)  
  412039:	adc    al,0x0
  41203b:	add    ah,ch
  41203d:	adc    al,0x0
  41203f:	add    BYTE PTR [rax+0x73],al
  412042:	add    BYTE PTR [rax],al
  412044:	in     al,dx
  412045:	adc    al,0x0
  412047:	add    BYTE PTR [rcx],cl
  412049:	add    al,0x1
  41204b:	add    BYTE PTR [rdx+rax*2],al
  41204e:	add    BYTE PTR [rax],al
  412050:	mov    al,0xca
  412052:	add    BYTE PTR [rax],al
  412054:	add    DWORD PTR [rax],eax
  412056:	add    BYTE PTR [rax],al
  412058:	add    al,0x15
  41205a:	add    BYTE PTR [rax],al
  41205c:	sbb    al,0x15
  41205e:	add    BYTE PTR [rax],al
  412060:	rex jae 0x412063
  412063:	add    BYTE PTR [rdx*1+0xb010000],bl
  41206a:	add    eax,0x3680b00
  41206f:	add    BYTE PTR [rsi],al
  412071:	(bad)  
  412072:	add    dh,BYTE PTR [rax]
  412074:	add    DWORD PTR [rax+0x0],esp
  412077:	add    BYTE PTR [rcx],al
  412079:	(bad)  
  41207a:	add    al,0x0
  41207c:	(bad)  
  41207d:	xor    al,BYTE PTR [rbx]
  41207f:	xor    BYTE PTR [rdx],al
  412081:	(bad)  
  412082:	add    DWORD PTR [rax+0x1],esi
  412085:	or     DWORD PTR [rax+rax*1],eax
  412088:	or     DWORD PTR [rcx],eax
  41208a:	(bad)  
  41208b:	add    BYTE PTR [rdx],al
  41208d:	xor    BYTE PTR [rcx],al
  41208f:	(bad)  
  412090:	add    DWORD PTR [rdi],ecx
  412092:	or     BYTE PTR [rax],al
  412094:	sidt   [rbx+0x0]
  412098:	or     BYTE PTR [rax],dh
  41209a:	(bad)  
  41209b:	(bad)  
  41209c:	(bad)  
  41209d:	jo     0x4120a4
  41209f:	push   rax
  4120a0:	add    al,0xc0
  4120a2:	add    dl,al
  4120a4:	add    DWORD PTR [rbx],edx
  4120a6:	or     al,BYTE PTR [rax]
  4120a8:	adc    eax,DWORD PTR [rcx]
  4120aa:	jne    0x4120ac
  4120ac:	or     al,0x30
  4120ae:	or     esp,DWORD PTR [rax+0xa]
  4120b1:	jo     0x4120bc
  4120b3:	push   rax
  4120b4:	or     al,al
  4120b6:	(bad)  
  4120b7:	rol    BYTE PTR [rax+riz*8],1
  4120ba:	add    dh,al
  4120bc:	add    DWORD PTR [rdi],eax
  4120be:	add    al,0x0
  4120c0:	(bad)  
  4120c1:	xchg   edx,eax
  4120c2:	add    esi,DWORD PTR [rax]
  4120c4:	add    ah,BYTE PTR [rax+0x1]
  4120c7:	jo     0x4120ca
  4120c9:	invd   
  4120cb:	add    BYTE PTR [rdi],cl
  4120cd:	add    DWORD PTR [rbx+0x0],ecx
  4120d0:	or     BYTE PTR [rax],dh
  4120d2:	(bad)  
  4120d3:	(bad)  
  4120d4:	(bad)  
  4120d5:	jo     0x4120dc
  4120d7:	push   rax
  4120d8:	add    al,0xc0
  4120da:	add    dl,al
  4120dc:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14e20e9
  4120e2:	sub    BYTE PTR [rax],al
  4120e4:	(bad)  
  4120e5:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1254b
  4120eb:	push   rax
  4120ec:	add    al,al
  4120ee:	add    BYTE PTR [rax],al
  4120f0:	add    DWORD PTR [rdx],ecx
  4120f2:	(bad)  
  4120f3:	add    BYTE PTR [rdx],cl
  4120f5:	push   rdx
  4120f6:	(bad)  
  4120f7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1255d
  4120fd:	push   rax
  4120fe:	add    al,al
  412100:	add    DWORD PTR [rbx],edx
  412102:	or     al,BYTE PTR [rax]
  412104:	adc    eax,DWORD PTR [rcx]
  412106:	sub    eax,0xb300c00
  41210b:	(bad)  
  41210c:	or     dh,BYTE PTR [rax+0x9]
  41210f:	push   rax
  412110:	or     al,al
  412112:	(bad)  
  412113:	rol    BYTE PTR [rax+riz*8],1
  412116:	add    dh,al
  412118:	add    DWORD PTR [rdi],ecx
  41211a:	or     BYTE PTR [rax],al
  41211c:	(bad)  
  41211e:	sub    DWORD PTR [rax],eax
  412120:	or     BYTE PTR [rax],dh
  412122:	(bad)  
  412123:	(bad)  
  412124:	(bad)  
  412125:	jo     0x41212c
  412127:	push   rax
  412128:	add    al,0xc0
  41212a:	add    dl,al
  41212c:	add    DWORD PTR [rip+0x52050002],eax        # 0x52462134
  412132:	add    DWORD PTR [rax],esi
  412134:	add    DWORD PTR [rbx],edx
  412136:	or     al,BYTE PTR [rax]
  412138:	adc    eax,DWORD PTR [rcx]
  41213a:	push   rdi
  41213b:	add    BYTE PTR [rax+rsi*1],cl
  41213e:	or     esp,DWORD PTR [rax+0xa]
  412141:	jo     0x41214c
  412143:	push   rax
  412144:	or     al,al
  412146:	(bad)  
  412147:	rol    BYTE PTR [rax+riz*8],1
  41214a:	add    dh,al
  41214c:	add    DWORD PTR [rdi+rax*1],ecx
  41214f:	add    BYTE PTR [rdx+riz*2],cl
  412152:	or     BYTE PTR [rax],dh
  412154:	(bad)  
  412155:	(bad)  
  412156:	(bad)  
  412157:	jo     0x41215e
  412159:	push   rax
  41215a:	add    al,0xc0
  41215c:	add    dl,al
  41215e:	add    BYTE PTR [rax],al
  412160:	add    DWORD PTR [rdi+rax*1],ecx
  412163:	add    BYTE PTR [rdx+riz*2],cl
  412166:	or     BYTE PTR [rax],dh
  412168:	(bad)  
  412169:	(bad)  
  41216a:	(bad)  
  41216b:	jo     0x412172
  41216d:	push   rax
  41216e:	add    al,0xc0
  412170:	add    dl,al
  412172:	add    BYTE PTR [rax],al
  412174:	add    DWORD PTR [rdx],ecx
  412176:	(bad)  
  412177:	add    BYTE PTR [rdx],cl
  412179:	push   rdx
  41217a:	(bad)  
  41217b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b125e1
  412181:	push   rax
  412182:	add    al,al
  412184:	add    DWORD PTR [rbx],edx
  412186:	or     al,BYTE PTR [rax]
  412188:	adc    eax,DWORD PTR [rcx]
  41218a:	xor    DWORD PTR [rax],eax
  41218c:	or     al,0x30
  41218e:	or     esp,DWORD PTR [rax+0xa]
  412191:	jo     0x41219c
  412193:	push   rax
  412194:	or     al,al
  412196:	(bad)  
  412197:	rol    BYTE PTR [rax+riz*8],1
  41219a:	add    dh,al
  41219c:	add    DWORD PTR [rbx],edx
  41219e:	or     al,BYTE PTR [rax]
  4121a0:	adc    eax,DWORD PTR [rcx]
  4121a2:	xor    eax,DWORD PTR [rax]
  4121a4:	or     al,0x30
  4121a6:	or     esp,DWORD PTR [rax+0xa]
  4121a9:	jo     0x4121b4
  4121ab:	push   rax
  4121ac:	or     al,al
  4121ae:	(bad)  
  4121af:	rol    BYTE PTR [rax+riz*8],1
  4121b2:	add    dh,al
  4121b4:	add    DWORD PTR [rax],edx
  4121b6:	or     DWORD PTR [rax],eax
  4121b8:	adc    BYTE PTR [rdx+0xc],ah
  4121bb:	xor    BYTE PTR [rbx],cl
  4121bd:	(bad)  
  4121be:	or     dh,BYTE PTR [rax+0x9]
  4121c1:	push   rax
  4121c2:	or     al,al
  4121c4:	(bad)  
  4121c5:	rol    BYTE PTR [rax+riz*8],1
  4121c8:	add    dh,al
  4121ca:	add    BYTE PTR [rax],al
  4121cc:	add    DWORD PTR [rdx],ecx
  4121ce:	(bad)  
  4121cf:	add    BYTE PTR [rdx],cl
  4121d1:	xor    al,BYTE PTR [rsi]
  4121d3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b12639
  4121d9:	push   rax
  4121da:	add    al,al
  4121dc:	add    DWORD PTR [rdi+rax*1],ecx
  4121df:	add    BYTE PTR [rdx+riz*2],cl
  4121e2:	or     BYTE PTR [rax],dh
  4121e4:	(bad)  
  4121e5:	(bad)  
  4121e6:	(bad)  
  4121e7:	jo     0x4121ee
  4121e9:	push   rax
  4121ea:	add    al,0xc0
  4121ec:	add    dl,al
  4121ee:	add    BYTE PTR [rax],al
  4121f0:	add    DWORD PTR [rdi],eax
  4121f2:	add    al,0x0
  4121f4:	(bad)  
  4121f5:	push   rdx
  4121f6:	add    esi,DWORD PTR [rax]
  4121f8:	add    ah,BYTE PTR [rax+0x1]
  4121fb:	jo     0x4121fe
  4121fd:	adc    ecx,DWORD PTR [rdx]
  4121ff:	add    BYTE PTR [rbx],dl
  412201:	add    DWORD PTR [rcx+0x0],edx
  412204:	or     al,0x30
  412206:	or     esp,DWORD PTR [rax+0xa]
  412209:	jo     0x412214
  41220b:	push   rax
  41220c:	or     al,al
  41220e:	(bad)  
  41220f:	rol    BYTE PTR [rax+riz*8],1
  412212:	add    dh,al
  412214:	add    DWORD PTR [rax],edx
  412216:	or     DWORD PTR [rax],eax
  412218:	adc    BYTE PTR [rdx+0x600b300c],al
  41221e:	or     dh,BYTE PTR [rax+0x9]
  412221:	push   rax
  412222:	or     al,al
  412224:	(bad)  
  412225:	rol    BYTE PTR [rax+riz*8],1
  412228:	add    dh,al
  41222a:	add    BYTE PTR [rax],al
  41222c:	add    DWORD PTR [rax],ecx
  41222e:	(bad)  
  41222f:	add    BYTE PTR [rax],cl
  412231:	xor    BYTE PTR [rdi],al
  412233:	(bad)  
  412234:	(bad)  
  412235:	jo     0x41223c
  412237:	push   rax
  412238:	add    al,0xc0
  41223a:	add    dl,al
  41223c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32462244
  412242:	add    DWORD PTR [rax],esi
  412244:	add    DWORD PTR [rax],edx
  412246:	or     DWORD PTR [rax],eax
  412248:	adc    BYTE PTR [rdx+0x600b300c],al
  41224e:	or     dh,BYTE PTR [rax+0x9]
  412251:	push   rax
  412252:	or     al,al
  412254:	(bad)  
  412255:	rol    BYTE PTR [rax+riz*8],1
  412258:	add    dh,al
  41225a:	add    BYTE PTR [rax],al
  41225c:	add    DWORD PTR [rax],eax
  41225e:	add    BYTE PTR [rax],al
  412260:	add    DWORD PTR [rax],eax
  412262:	add    BYTE PTR [rax],al
  412264:	add    DWORD PTR [rax],eax
  412266:	add    BYTE PTR [rax],al
  412268:	add    DWORD PTR [rsi],eax
  41226a:	add    eax,DWORD PTR [rax]
  41226c:	(bad)  
  41226d:	rex.X add sil,BYTE PTR [rax]
  412270:	add    DWORD PTR [rax+0x0],esp
  412273:	add    BYTE PTR [rcx],al
  412275:	(bad)  
  412276:	add    al,0x0
  412278:	(bad)  
  412279:	push   rdx
  41227a:	add    esi,DWORD PTR [rax]
  41227c:	add    ah,BYTE PTR [rax+0x1]
  41227f:	jo     0x412282
  412281:	add    al,0x1
  412283:	add    BYTE PTR [rdx+rax*2],al
  412286:	add    BYTE PTR [rax],al
  412288:	add    DWORD PTR [rax],ecx
  41228a:	add    eax,0x4420800
  41228f:	xor    BYTE PTR [rbx],al
  412291:	(bad)  
  412292:	add    dh,BYTE PTR [rax+0x1]
  412295:	push   rax
  412296:	add    BYTE PTR [rax],al
  412298:	add    DWORD PTR [rdi],eax
  41229a:	add    al,0x0
  41229c:	(bad)  
  41229d:	push   rdx
  41229e:	add    esi,DWORD PTR [rax]
  4122a0:	add    ah,BYTE PTR [rax+0x1]
  4122a3:	jo     0x4122a6
  4122a5:	adc    BYTE PTR [rcx],cl
  4122a7:	add    BYTE PTR [rax],dl
  4122a9:	(bad)  
  4122aa:	or     al,0x30
  4122ac:	or     esp,DWORD PTR [rax+0xa]
  4122af:	jo     0x4122ba
  4122b1:	push   rax
  4122b2:	or     al,al
  4122b4:	(bad)  
  4122b5:	rol    BYTE PTR [rax+riz*8],1
  4122b8:	add    dh,al
  4122ba:	add    BYTE PTR [rax],al
  4122bc:	add    DWORD PTR [rdx],ecx
  4122be:	(bad)  
  4122bf:	add    BYTE PTR [rdx],cl
  4122c1:	push   rdx
  4122c2:	(bad)  
  4122c3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b12729
  4122c9:	push   rax
  4122ca:	add    al,al
  4122cc:	add    DWORD PTR [rax],edx
  4122ce:	or     DWORD PTR [rax],eax
  4122d0:	adc    BYTE PTR [rdx+0xc],al
  4122d3:	xor    BYTE PTR [rbx],cl
  4122d5:	(bad)  
  4122d6:	or     dh,BYTE PTR [rax+0x9]
  4122d9:	push   rax
  4122da:	or     al,al
  4122dc:	(bad)  
  4122dd:	rol    BYTE PTR [rax+riz*8],1
  4122e0:	add    dh,al
  4122e2:	add    BYTE PTR [rax],al
  4122e4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324622ec
  4122ea:	add    DWORD PTR [rax],esi
  4122ec:	add    DWORD PTR [rdi+rax*1],ecx
  4122ef:	add    BYTE PTR [rdx+riz*2],cl
  4122f2:	or     BYTE PTR [rax],dh
  4122f4:	(bad)  
  4122f5:	(bad)  
  4122f6:	(bad)  
  4122f7:	jo     0x4122fe
  4122f9:	push   rax
  4122fa:	add    al,0xc0
  4122fc:	add    dl,al
  4122fe:	add    BYTE PTR [rax],al
  412300:	add    DWORD PTR [rax],ecx
  412302:	add    eax,0x4620800
  412307:	xor    BYTE PTR [rbx],al
  412309:	(bad)  
  41230a:	add    dh,BYTE PTR [rax+0x1]
  41230d:	push   rax
  41230e:	add    BYTE PTR [rax],al
  412310:	add    DWORD PTR [rcx+rax*1],eax
  412313:	add    BYTE PTR [rdx+rax*2],al
  412316:	add    BYTE PTR [rax],al
  412318:	add    DWORD PTR [rsi],eax
  41231a:	add    eax,DWORD PTR [rax]
  41231c:	(bad)  
  41231d:	rex.X add sil,BYTE PTR [rax]
  412320:	add    DWORD PTR [rax+0x0],esp
  412323:	add    BYTE PTR [rcx],al
  412325:	add    BYTE PTR [rax],al
  412327:	add    BYTE PTR [rcx],al
  412329:	add    eax,0x32050002
  41232e:	add    DWORD PTR [rax],esi
  412330:	add    DWORD PTR [rax],eax
  412332:	add    BYTE PTR [rax],al
  412334:	add    DWORD PTR [rdi+rax*1],ecx
  412337:	add    BYTE PTR [rdx+rax*2],cl
  41233a:	or     BYTE PTR [rax],dh
  41233c:	(bad)  
  41233d:	(bad)  
  41233e:	(bad)  
  41233f:	jo     0x412346
  412341:	push   rax
  412342:	add    al,0xc0
  412344:	add    dl,al
  412346:	add    BYTE PTR [rax],al
  412348:	add    DWORD PTR [rdi],eax
  41234a:	add    al,0x0
  41234c:	(bad)  
  41234d:	xor    al,BYTE PTR [rbx]
  41234f:	xor    BYTE PTR [rdx],al
  412351:	(bad)  
  412352:	add    DWORD PTR [rax+0x1],esi
  412355:	adc    BYTE PTR [rcx],cl
  412357:	add    BYTE PTR [rax],dl
  412359:	(bad)  
  41235a:	or     al,0x30
  41235c:	or     esp,DWORD PTR [rax+0xa]
  41235f:	jo     0x41236a
  412361:	push   rax
  412362:	or     al,al
  412364:	(bad)  
  412365:	rol    BYTE PTR [rax+riz*8],1
  412368:	add    dh,al
  41236a:	add    BYTE PTR [rax],al
  41236c:	add    DWORD PTR [rdx],ecx
  41236e:	(bad)  
  41236f:	add    BYTE PTR [rdx],cl
  412371:	push   rdx
  412372:	(bad)  
  412373:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b127d9
  412379:	push   rax
  41237a:	add    al,al
  41237c:	add    DWORD PTR [rdi],eax
  41237e:	add    al,0x0
  412380:	(bad)  
  412381:	xor    al,BYTE PTR [rbx]
  412383:	xor    BYTE PTR [rdx],al
  412385:	(bad)  
  412386:	add    DWORD PTR [rax+0x1],esi
  412389:	(bad)  
  41238a:	add    al,0x0
  41238c:	(bad)  
  41238d:	xor    al,BYTE PTR [rbx]
  41238f:	xor    BYTE PTR [rdx],al
  412391:	(bad)  
  412392:	add    DWORD PTR [rax+0x1],esi
  412395:	or     BYTE PTR [rip+0x4420800],al        # 0x4832b9b
  41239b:	xor    BYTE PTR [rbx],al
  41239d:	(bad)  
  41239e:	add    dh,BYTE PTR [rax+0x1]
  4123a1:	push   rax
  4123a2:	add    BYTE PTR [rax],al
  4123a4:	add    DWORD PTR [rax],ecx
  4123a6:	add    eax,0x4620800
  4123ab:	xor    BYTE PTR [rbx],al
  4123ad:	(bad)  
  4123ae:	add    dh,BYTE PTR [rax+0x1]
  4123b1:	push   rax
  4123b2:	add    BYTE PTR [rax],al
  4123b4:	add    DWORD PTR [rcx+rax*1],eax
  4123b7:	add    BYTE PTR [rdx+rax*2],al
  4123ba:	add    BYTE PTR [rax],al
  4123bc:	add    DWORD PTR [rax],eax
  4123be:	add    BYTE PTR [rax],al
  4123c0:	add    DWORD PTR [rax],ecx
  4123c2:	add    eax,0x4620800
  4123c7:	xor    BYTE PTR [rbx],al
  4123c9:	(bad)  
  4123ca:	add    dh,BYTE PTR [rax+0x1]
  4123cd:	push   rax
  4123ce:	add    BYTE PTR [rax],al
  4123d0:	add    DWORD PTR [rsi],eax
  4123d2:	add    eax,DWORD PTR [rax]
  4123d4:	(bad)  
  4123d5:	rex.X add sil,BYTE PTR [rax]
  4123d8:	add    DWORD PTR [rax+0x0],esp
  4123db:	add    BYTE PTR [rcx],al
  4123dd:	add    BYTE PTR [rax],al
  4123df:	add    BYTE PTR [rcx],al
  4123e1:	add    BYTE PTR [rax],al
  4123e3:	add    BYTE PTR [rcx],al
  4123e5:	add    BYTE PTR [rax],al
  4123e7:	add    BYTE PTR [rcx],al
  4123e9:	add    BYTE PTR [rax],al
  4123eb:	add    BYTE PTR [rcx],al
  4123ed:	add    BYTE PTR [rax],al
  4123ef:	add    BYTE PTR [rcx],al
  4123f1:	add    eax,0x52050002
  4123f6:	add    DWORD PTR [rax],esi
  4123f8:	add    DWORD PTR [rcx+rax*1],eax
  4123fb:	add    BYTE PTR [rdx+rax*2],al
  4123fe:	add    BYTE PTR [rax],al
  412400:	add    DWORD PTR [rcx+rax*1],eax
  412403:	add    BYTE PTR [rdx+rax*2],al
  412406:	add    BYTE PTR [rax],al
  412408:	add    DWORD PTR [rsi],eax
  41240a:	add    eax,DWORD PTR [rax]
  41240c:	(bad)  
  41240d:	rex.X add sil,BYTE PTR [rax]
  412410:	add    DWORD PTR [rax+0x0],esp
  412413:	add    BYTE PTR [rcx],al
  412415:	add    BYTE PTR [rax],al
  412417:	add    BYTE PTR [rcx],al
  412419:	add    BYTE PTR [rax],al
  41241b:	add    BYTE PTR [rcx],al
  41241d:	add    BYTE PTR [rax],al
  41241f:	add    BYTE PTR [rcx],al
  412421:	or     al,BYTE PTR [rsi]
  412423:	add    BYTE PTR [rdx],cl
  412425:	jb     0x41242d
  412427:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1288d
  41242d:	push   rax
  41242e:	add    al,al
  412430:	add    DWORD PTR [rdx],ecx
  412432:	add    eax,0x6d20a05
  412437:	add    eax,DWORD PTR [rbx]
  412439:	xor    BYTE PTR [rdx],al
  41243b:	(bad)  
  41243c:	add    DWORD PTR [rax+0x0],edx
  41243f:	add    BYTE PTR [rcx],al
  412441:	add    al,0x1
  412443:	add    BYTE PTR [rdx+rax*2],al
  412446:	add    BYTE PTR [rax],al
  412448:	add    DWORD PTR [rsi],eax
  41244a:	add    eax,DWORD PTR [rax]
  41244c:	(bad)  
  41244d:	rex.X add sil,BYTE PTR [rax]
  412450:	add    DWORD PTR [rax+0x0],esp
  412453:	add    BYTE PTR [rcx],al
  412455:	add    BYTE PTR [rax],al
  412457:	add    BYTE PTR [rcx],al
  412459:	add    al,0x1
  41245b:	add    BYTE PTR [rdx+riz*4],al
  41245e:	add    BYTE PTR [rax],al
  412460:	add    DWORD PTR [rax],eax
  412462:	add    BYTE PTR [rax],al
  412464:	add    DWORD PTR [rsi],edx
  412466:	or     DWORD PTR [rax],eax
  412468:	(bad)  
  412469:	mov    BYTE PTR [rsi],al
  41246b:	add    BYTE PTR [rax],dl
  41246d:	js     0x412474
  41246f:	add    BYTE PTR [rbx],cl
  412471:	push   0xffffffffe2060004
  412476:	add    dh,BYTE PTR [rax]
  412478:	add    DWORD PTR [rax+0x0],esp
  41247b:	add    BYTE PTR [rcx],al
  41247d:	add    BYTE PTR [rax],al
  41247f:	add    BYTE PTR [rcx],al
  412481:	add    BYTE PTR [rax],al
  412483:	add    BYTE PTR [rcx],al
  412485:	add    BYTE PTR [rax],al
  412487:	add    BYTE PTR [rcx],al
  412489:	(bad)  
  41248a:	add    eax,DWORD PTR [rax]
  41248c:	(bad)  
  41248d:	(bad)  
  41248f:	xor    BYTE PTR [rcx],al
  412491:	(bad)  
  412492:	add    BYTE PTR [rax],al
  412494:	add    DWORD PTR [rdi+rax*1],ecx
  412497:	add    BYTE PTR [rdx+riz*4],cl
  41249a:	or     BYTE PTR [rax],dh
  41249c:	(bad)  
  41249d:	(bad)  
  41249e:	(bad)  
  41249f:	jo     0x4124a6
  4124a1:	push   rax
  4124a2:	add    al,0xc0
  4124a4:	add    dl,al
  4124a6:	add    BYTE PTR [rax],al
  4124a8:	add    DWORD PTR [rcx],edx
  4124aa:	or     DWORD PTR [rip+0x30db211],eax        # 0x34ed6c1
  4124b0:	or     dh,BYTE PTR [rax]
  4124b2:	or     DWORD PTR [rax+0x8],esp
  4124b5:	jo     0x4124be
  4124b7:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x221288e
  4124be:	add    BYTE PTR [rax],al
  4124c0:	add    DWORD PTR [rcx+rax*1],eax
  4124c3:	add    BYTE PTR [rdx+rax*2],al
  4124c6:	add    BYTE PTR [rax],al
  4124c8:	add    DWORD PTR [rdx],ecx
  4124ca:	(bad)  
  4124cb:	add    BYTE PTR [rdx],cl
  4124cd:	xor    al,BYTE PTR [rsi]
  4124cf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b12935
  4124d5:	push   rax
  4124d6:	add    al,al
  4124d8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324624e0
  4124de:	add    DWORD PTR [rax],esi
  4124e0:	add    DWORD PTR [rax],ecx
  4124e2:	add    eax,0x4420800
  4124e7:	xor    BYTE PTR [rbx],al
  4124e9:	(bad)  
  4124ea:	add    dh,BYTE PTR [rax+0x1]
  4124ed:	push   rax
  4124ee:	add    BYTE PTR [rax],al
  4124f0:	add    DWORD PTR [rdi],eax
  4124f2:	add    al,0x0
  4124f4:	(bad)  
  4124f5:	xor    al,BYTE PTR [rbx]
  4124f7:	xor    BYTE PTR [rdx],al
  4124f9:	(bad)  
  4124fa:	add    DWORD PTR [rax+0x1],esi
  4124fd:	add    eax,0x32050002
  412502:	add    DWORD PTR [rax],esi
  412504:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246250c
  41250a:	add    DWORD PTR [rax],esi
  41250c:	add    DWORD PTR [rax],eax
  41250e:	add    BYTE PTR [rax],al
  412510:	add    DWORD PTR [rax],eax
  412512:	add    BYTE PTR [rax],al
  412514:	add    DWORD PTR [rax],eax
  412516:	add    BYTE PTR [rax],al
  412518:	add    DWORD PTR [rdi],eax
  41251a:	add    al,0x0
  41251c:	(bad)  
  41251d:	xor    al,BYTE PTR [rbx]
  41251f:	xor    BYTE PTR [rdx],al
  412521:	(bad)  
  412522:	add    DWORD PTR [rax+0x1],esi
  412525:	(bad)  
  412526:	add    eax,DWORD PTR [rax]
  412528:	(bad)  
  412529:	rex.X add sil,BYTE PTR [rax]
  41252c:	add    DWORD PTR [rax+0x0],esp
  41252f:	add    BYTE PTR [rcx],al
  412531:	add    eax,0x32050002
  412536:	add    DWORD PTR [rax],esi
  412538:	add    DWORD PTR [rdi],eax
  41253a:	add    al,0x0
  41253c:	(bad)  
  41253d:	xor    al,BYTE PTR [rbx]
  41253f:	xor    BYTE PTR [rdx],al
  412541:	(bad)  
  412542:	add    DWORD PTR [rax+0x1],esi
  412545:	(bad)  
  412546:	add    eax,DWORD PTR [rax]
  412548:	(bad)  
  412549:	rex.X add sil,BYTE PTR [rax]
  41254c:	add    DWORD PTR [rax+0x0],esp
  41254f:	add    BYTE PTR [rcx],al
  412551:	(bad)  
  412552:	add    eax,DWORD PTR [rax]
  412554:	(bad)  
  412555:	rex.X add sil,BYTE PTR [rax]
  412558:	add    DWORD PTR [rax+0x0],esp
  41255b:	add    BYTE PTR [rcx],al
  41255d:	or     BYTE PTR [rip+0x4420800],al        # 0x4832d63
  412563:	xor    BYTE PTR [rbx],al
  412565:	(bad)  
  412566:	add    dh,BYTE PTR [rax+0x1]
  412569:	push   rax
  41256a:	add    BYTE PTR [rax],al
  41256c:	add    DWORD PTR [rip+0xffffffffb2050002],eax        # 0xffffffffb2462574
  412572:	add    DWORD PTR [rax],esi
  412574:	add    DWORD PTR [rax],ecx
  412576:	(bad)  
  412577:	add    BYTE PTR [rax],cl
  412579:	xor    BYTE PTR [rdi],al
  41257b:	(bad)  
  41257c:	(bad)  
  41257d:	jo     0x412584
  41257f:	push   rax
  412580:	add    al,0xc0
  412582:	add    dl,al
  412584:	add    DWORD PTR [rdi],eax
  412586:	add    al,0x0
  412588:	(bad)  
  412589:	push   rdx
  41258a:	add    esi,DWORD PTR [rax]
  41258c:	add    ah,BYTE PTR [rax+0x1]
  41258f:	jo     0x412592
  412591:	adc    BYTE PTR [rcx],cl
  412593:	add    BYTE PTR [rax],dl
  412595:	(bad)  
  412596:	or     al,0x30
  412598:	or     esp,DWORD PTR [rax+0xa]
  41259b:	jo     0x4125a6
  41259d:	push   rax
  41259e:	or     al,al
  4125a0:	(bad)  
  4125a1:	rol    BYTE PTR [rax+riz*8],1
  4125a4:	add    dh,al
  4125a6:	add    BYTE PTR [rax],al
  4125a8:	add    DWORD PTR [rax],edx
  4125aa:	or     DWORD PTR [rax],eax
  4125ac:	adc    BYTE PTR [rdx+0xc],ah
  4125af:	xor    BYTE PTR [rbx],cl
  4125b1:	(bad)  
  4125b2:	or     dh,BYTE PTR [rax+0x9]
  4125b5:	push   rax
  4125b6:	or     al,al
  4125b8:	(bad)  
  4125b9:	rol    BYTE PTR [rax+riz*8],1
  4125bc:	add    dh,al
  4125be:	add    BYTE PTR [rax],al
  4125c0:	add    DWORD PTR [rcx+rax*1],eax
  4125c3:	add    BYTE PTR [rdx+riz*2],al
  4125c6:	add    BYTE PTR [rax],al
  4125c8:	add    DWORD PTR [rcx+rax*1],eax
  4125cb:	add    BYTE PTR [rdx+riz*2],al
  4125ce:	add    BYTE PTR [rax],al
  4125d0:	add    DWORD PTR [rcx+rax*1],eax
  4125d3:	add    BYTE PTR [rdx+riz*2],al
  4125d6:	add    BYTE PTR [rax],al
  4125d8:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14e25e5
  4125de:	rex.WX add BYTE PTR [rsi],al
  4125e1:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b12a47
  4125e7:	push   rax
  4125e8:	add    al,al
  4125ea:	add    BYTE PTR [rax],al
  4125ec:	add    DWORD PTR [rax],ecx
  4125ee:	add    eax,0x4620800
  4125f3:	xor    BYTE PTR [rbx],al
  4125f5:	(bad)  
  4125f6:	add    dh,BYTE PTR [rax+0x1]
  4125f9:	push   rax
  4125fa:	add    BYTE PTR [rax],al
  4125fc:	add    DWORD PTR [rsi],eax
  4125fe:	add    eax,DWORD PTR [rax]
  412600:	(bad)  
  412601:	rex.X add sil,BYTE PTR [rax]
  412604:	add    DWORD PTR [rax+0x0],esp
  412607:	add    BYTE PTR [rcx],al
  412609:	adc    BYTE PTR [rcx],cl
  41260b:	add    BYTE PTR [rax],dl
  41260d:	(bad)  
  41260e:	or     al,0x30
  412610:	or     esp,DWORD PTR [rax+0xa]
  412613:	jo     0x41261e
  412615:	push   rax
  412616:	or     al,al
  412618:	(bad)  
  412619:	rol    BYTE PTR [rax+riz*8],1
  41261c:	add    dh,al
  41261e:	add    BYTE PTR [rax],al
  412620:	add    DWORD PTR [rax],eax
  412622:	add    BYTE PTR [rax],al
  412624:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246262c
  41262a:	add    DWORD PTR [rax],esi
  41262c:	add    DWORD PTR [rdi+0x16],eax
  41262f:	add    BYTE PTR [rdi-0x48],al
  412632:	adc    al,BYTE PTR [rax]
  412634:	ds test al,0x11
  412637:	add    BYTE PTR [rip+0x2c001098],dh        # 0x2c4136d5
  41263d:	mov    BYTE PTR [rdi],cl
  41263f:	add    BYTE PTR [rbx],ah
  412641:	js     0x412651
  412643:	add    BYTE PTR [rbx],bl
  412645:	push   0x113000d
  41264a:	(bad)  
  41264b:	add    BYTE PTR [rax+rsi*1],cl
  41264e:	or     esp,DWORD PTR [rax+0xa]
  412651:	jo     0x41265c
  412653:	push   rax
  412654:	or     al,al
  412656:	(bad)  
  412657:	rol    BYTE PTR [rax+riz*8],1
  41265a:	add    dh,al
  41265c:	add    DWORD PTR [rdi+rax*1],ecx
  41265f:	add    BYTE PTR [rdx+rax*2],cl
  412662:	or     BYTE PTR [rax],dh
  412664:	(bad)  
  412665:	(bad)  
  412666:	(bad)  
  412667:	jo     0x41266e
  412669:	push   rax
  41266a:	add    al,0xc0
  41266c:	add    dl,al
  41266e:	add    BYTE PTR [rax],al
  412670:	add    DWORD PTR [rax],edx
  412672:	or     DWORD PTR [rax],eax
  412674:	adc    BYTE PTR [rdx+0xc],al
  412677:	xor    BYTE PTR [rbx],cl
  412679:	(bad)  
  41267a:	or     dh,BYTE PTR [rax+0x9]
  41267d:	push   rax
  41267e:	or     al,al
  412680:	(bad)  
  412681:	rol    BYTE PTR [rax+riz*8],1
  412684:	add    dh,al
  412686:	add    BYTE PTR [rax],al
  412688:	add    DWORD PTR [rsp+rax*1],eax
  41268b:	add    BYTE PTR [rax+rsi*1],al
  41268e:	add    esp,DWORD PTR [rax+0x2]
  412691:	jo     0x412694
  412693:	push   rax
  412694:	add    DWORD PTR [rax],eax
  412696:	add    BYTE PTR [rax],al
  412698:	add    DWORD PTR [rax],eax
  41269a:	add    BYTE PTR [rax],al
  41269c:	add    DWORD PTR [rax],edx
  41269e:	or     DWORD PTR [rax],eax
  4126a0:	adc    BYTE PTR [rdx+0x600b300c],al
  4126a6:	or     dh,BYTE PTR [rax+0x9]
  4126a9:	push   rax
  4126aa:	or     al,al
  4126ac:	(bad)  
  4126ad:	rol    BYTE PTR [rax+riz*8],1
  4126b0:	add    dh,al
  4126b2:	add    BYTE PTR [rax],al
  4126b4:	add    DWORD PTR [rsi],eax
  4126b6:	add    eax,DWORD PTR [rax]
  4126b8:	(bad)  
  4126b9:	rex.X add sil,BYTE PTR [rax]
  4126bc:	add    DWORD PTR [rax+0x0],esp
  4126bf:	add    BYTE PTR [rcx],al
  4126c1:	add    eax,0x32050002
  4126c6:	add    DWORD PTR [rax],esi
  4126c8:	add    DWORD PTR [rdi],eax
  4126ca:	add    al,0x0
  4126cc:	(bad)  
  4126cd:	xor    al,BYTE PTR [rbx]
  4126cf:	xor    BYTE PTR [rdx],al
  4126d1:	(bad)  
  4126d2:	add    DWORD PTR [rax+0x1],esi
  4126d5:	add    eax,0x32050002
  4126da:	add    DWORD PTR [rax],esi
  4126dc:	add    DWORD PTR [rax],ecx
  4126de:	add    eax,0x4420800
  4126e3:	xor    BYTE PTR [rbx],al
  4126e5:	(bad)  
  4126e6:	add    dh,BYTE PTR [rax+0x1]
  4126e9:	push   rax
  4126ea:	add    BYTE PTR [rax],al
  4126ec:	add    DWORD PTR [rip+0x32050002],eax        # 0x324626f4
  4126f2:	add    DWORD PTR [rax],esi
  4126f4:	add    DWORD PTR [rsi],ecx
  4126f6:	or     BYTE PTR [rax],al
  4126f8:	(bad)  
  4126f9:	xor    cl,BYTE PTR [rdx]
  4126fb:	xor    BYTE PTR [rcx],cl
  4126fd:	(bad)  
  4126fe:	or     BYTE PTR [rax+0x7],dh
  412701:	push   rax
  412702:	(bad)  
  412703:	rol    BYTE PTR [rax+rdx*8],0x2
  412707:	loopne 0x41270a
  412709:	or     BYTE PTR [rip+0x4420800],al        # 0x4832f0f
  41270f:	xor    BYTE PTR [rbx],al
  412711:	(bad)  
  412712:	add    dh,BYTE PTR [rax+0x1]
  412715:	push   rax
  412716:	add    BYTE PTR [rax],al
  412718:	add    DWORD PTR [rdi+rax*1],ecx
  41271b:	add    BYTE PTR [rdx+rax*2],cl
  41271e:	or     BYTE PTR [rax],dh
  412720:	(bad)  
  412721:	(bad)  
  412722:	(bad)  
  412723:	jo     0x41272a
  412725:	push   rax
  412726:	add    al,0xc0
  412728:	add    dl,al
  41272a:	add    BYTE PTR [rax],al
  41272c:	add    DWORD PTR [rax],eax
  41272e:	add    BYTE PTR [rax],al
  412730:	add    DWORD PTR [rdi],eax
  412732:	add    al,0x0
  412734:	(bad)  
  412735:	xor    al,BYTE PTR [rbx]
  412737:	xor    BYTE PTR [rdx],al
  412739:	(bad)  
  41273a:	add    DWORD PTR [rax+0x1],esi
  41273d:	(bad)  
  41273e:	add    eax,DWORD PTR [rax]
  412740:	(bad)  
  412741:	and    al,BYTE PTR [rdx]
  412743:	xor    BYTE PTR [rcx],al
  412745:	(bad)  
  412746:	add    BYTE PTR [rax],al
  412748:	add    DWORD PTR [rdi],eax
  41274a:	add    al,0x0
  41274c:	(bad)  
  41274d:	xor    al,BYTE PTR [rbx]
  41274f:	xor    BYTE PTR [rdx],al
  412751:	(bad)  
  412752:	add    DWORD PTR [rax+0x1],esi
  412755:	add    BYTE PTR [rax],al
  412757:	add    BYTE PTR [rcx],al
  412759:	or     al,0x7
  41275b:	add    BYTE PTR [rdx+rax*2],cl
  41275e:	or     BYTE PTR [rax],dh
  412760:	(bad)  
  412761:	(bad)  
  412762:	(bad)  
  412763:	jo     0x41276a
  412765:	push   rax
  412766:	add    al,0xc0
  412768:	add    dl,al
  41276a:	add    BYTE PTR [rax],al
  41276c:	add    DWORD PTR [rsi+rax*1],ecx
  41276f:	add    BYTE PTR [rax+rbp*2],cl
  412772:	add    al,0x0
  412774:	(bad)  
  412775:	xchg   edx,eax
  412776:	add    esi,DWORD PTR [rax]
  412778:	add    ah,BYTE PTR [rax+0x1]
  41277b:	jo     0x41277e
  41277d:	add    BYTE PTR [rax],al
  41277f:	add    BYTE PTR [rcx],al
  412781:	add    BYTE PTR [rax],al
  412783:	add    BYTE PTR [rcx],al
  412785:	add    BYTE PTR [rax],al
  412787:	add    BYTE PTR [rcx],al
  412789:	add    BYTE PTR [rax],al
  41278b:	add    BYTE PTR [rcx],al
  41278d:	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000413000 <.bss>:
	...

Disassembly of section .idata:

0000000000415000 <.idata>:
  415000:	fs push rax
  415002:	add    DWORD PTR [rax],eax
	...
  41500c:	push   rax
  41500d:	movsxd eax,DWORD PTR [rcx]
  41500f:	add    ah,ah
  415011:	push   rsp
  415012:	add    DWORD PTR [rax],eax
  415014:	ins    BYTE PTR es:[rdi],dx
  415015:	push   rdx
  415016:	add    DWORD PTR [rax],eax
	...
  415020:	shl    BYTE PTR [rbx+0x1],0x0
  415024:	in     al,dx
  415025:	push   rsi
  415026:	add    DWORD PTR [rax],eax
  415028:	xor    al,0x53
  41502a:	add    DWORD PTR [rax],eax
	...
  415034:	pushf  
  415035:	add    DWORD PTR fs:[rax],eax
  415038:	mov    ah,0x57
  41503a:	add    DWORD PTR [rax],eax
  41503c:	(bad)  
  41503d:	push   rsp
  41503e:	add    DWORD PTR [rax],eax
	...
  415048:	lods   al,BYTE PTR ds:[rsi]
  415049:	add    DWORD PTR fs:[rax],eax
  41504c:	push   rsp
  41504d:	pop    rcx
  41504e:	add    DWORD PTR [rax],eax
	...
  415064:	fs pop rcx
  415066:	add    DWORD PTR [rax],eax
  415068:	add    BYTE PTR [rax],al
  41506a:	add    BYTE PTR [rax],al
  41506c:	jo     0x4150c7
  41506e:	add    DWORD PTR [rax],eax
  415070:	add    BYTE PTR [rax],al
  415072:	add    BYTE PTR [rax],al
  415074:	sbb    BYTE PTR [rcx+0x1],0x0
  415078:	add    BYTE PTR [rax],al
  41507a:	add    BYTE PTR [rax],al
  41507c:	mov    WORD PTR [rcx+0x1],ds
  41507f:	add    BYTE PTR [rax],al
  415081:	add    BYTE PTR [rax],al
  415083:	add    BYTE PTR [rax+0x159],ah
  415089:	add    BYTE PTR [rax],al
  41508b:	add    BYTE PTR [rax+0x159],dh
  415091:	add    BYTE PTR [rax],al
  415093:	add    al,al
  415095:	pop    rcx
  415096:	add    DWORD PTR [rax],eax
  415098:	add    BYTE PTR [rax],al
  41509a:	add    BYTE PTR [rax],al
  41509c:	rcr    BYTE PTR [rcx+0x1],1
  41509f:	add    BYTE PTR [rax],al
  4150a1:	add    BYTE PTR [rax],al
  4150a3:	add    al,ah
  4150a5:	pop    rcx
  4150a6:	add    DWORD PTR [rax],eax
  4150a8:	add    BYTE PTR [rax],al
  4150aa:	add    BYTE PTR [rax],al
  4150ac:	lock pop rcx
  4150ae:	add    DWORD PTR [rax],eax
  4150b0:	add    BYTE PTR [rax],al
  4150b2:	add    BYTE PTR [rax],al
  4150b4:	or     BYTE PTR [rdx+0x1],bl
  4150b7:	add    BYTE PTR [rax],al
  4150b9:	add    BYTE PTR [rax],al
  4150bb:	add    BYTE PTR [rax],ah
  4150bd:	pop    rdx
  4150be:	add    DWORD PTR [rax],eax
  4150c0:	add    BYTE PTR [rax],al
  4150c2:	add    BYTE PTR [rax],al
  4150c4:	xor    al,0x5a
  4150c6:	add    DWORD PTR [rax],eax
  4150c8:	add    BYTE PTR [rax],al
  4150ca:	add    BYTE PTR [rax],al
  4150cc:	rex.WR pop rdx
  4150ce:	add    DWORD PTR [rax],eax
  4150d0:	add    BYTE PTR [rax],al
  4150d2:	add    BYTE PTR [rax],al
  4150d4:	pop    rsp
  4150d5:	pop    rdx
  4150d6:	add    DWORD PTR [rax],eax
  4150d8:	add    BYTE PTR [rax],al
  4150da:	add    BYTE PTR [rax],al
  4150dc:	push   0x15a
  4150e1:	add    BYTE PTR [rax],al
  4150e3:	add    BYTE PTR [rdx+rbx*2+0x1],bh
  4150e7:	add    BYTE PTR [rax],al
  4150e9:	add    BYTE PTR [rax],al
  4150eb:	add    BYTE PTR [rdx+rbx*2+0x1],cl
  4150f2:	add    BYTE PTR [rax],al
  4150f4:	pushf  
  4150f5:	pop    rdx
  4150f6:	add    DWORD PTR [rax],eax
  4150f8:	add    BYTE PTR [rax],al
  4150fa:	add    BYTE PTR [rax],al
  4150fc:	test   al,0x5a
  4150fe:	add    DWORD PTR [rax],eax
  415100:	add    BYTE PTR [rax],al
  415102:	add    BYTE PTR [rax],al
  415104:	mov    esp,0x15a
  415109:	add    BYTE PTR [rax],al
  41510b:	add    al,dl
  41510d:	pop    rdx
  41510e:	add    DWORD PTR [rax],eax
  415110:	add    BYTE PTR [rax],al
  415112:	add    BYTE PTR [rax],al
  415114:	call   0x415273
  415119:	add    BYTE PTR [rax],al
  41511b:	add    al,bh
  41511d:	pop    rdx
  41511e:	add    DWORD PTR [rax],eax
  415120:	add    BYTE PTR [rax],al
  415122:	add    BYTE PTR [rax],al
  415124:	or     BYTE PTR [rbx+0x1],bl
  415127:	add    BYTE PTR [rax],al
  415129:	add    BYTE PTR [rax],al
  41512b:	add    BYTE PTR [rax],bl
  41512d:	pop    rbx
  41512e:	add    DWORD PTR [rax],eax
  415130:	add    BYTE PTR [rax],al
  415132:	add    BYTE PTR [rax],al
  415134:	sub    BYTE PTR [rbx+0x1],bl
  415137:	add    BYTE PTR [rax],al
  415139:	add    BYTE PTR [rax],al
  41513b:	add    BYTE PTR [rax],bh
  41513d:	pop    rbx
  41513e:	add    DWORD PTR [rax],eax
  415140:	add    BYTE PTR [rax],al
  415142:	add    BYTE PTR [rax],al
  415144:	push   rax
  415145:	pop    rbx
  415146:	add    DWORD PTR [rax],eax
  415148:	add    BYTE PTR [rax],al
  41514a:	add    BYTE PTR [rax],al
  41514c:	(bad)  
  41514d:	pop    rbx
  41514e:	add    DWORD PTR [rax],eax
  415150:	add    BYTE PTR [rax],al
  415152:	add    BYTE PTR [rax],al
  415154:	js     0x4151b1
  415156:	add    DWORD PTR [rax],eax
  415158:	add    BYTE PTR [rax],al
  41515a:	add    BYTE PTR [rax],al
  41515c:	mov    WORD PTR [rbx+0x1],ds
  41515f:	add    BYTE PTR [rax],al
  415161:	add    BYTE PTR [rax],al
  415163:	add    BYTE PTR [rax+0x15b],ah
  415169:	add    BYTE PTR [rax],al
  41516b:	add    BYTE PTR [rbx+rbx*2+0x1],dh
  415172:	add    BYTE PTR [rax],al
  415174:	int3   
  415175:	pop    rbx
  415176:	add    DWORD PTR [rax],eax
  415178:	add    BYTE PTR [rax],al
  41517a:	add    BYTE PTR [rax],al
  41517c:	fcomp  QWORD PTR [rbx+0x1]
  41517f:	add    BYTE PTR [rax],al
  415181:	add    BYTE PTR [rax],al
  415183:	add    ah,ch
  415185:	pop    rbx
  415186:	add    DWORD PTR [rax],eax
  415188:	add    BYTE PTR [rax],al
  41518a:	add    BYTE PTR [rax],al
  41518c:	cld    
  41518d:	pop    rbx
  41518e:	add    DWORD PTR [rax],eax
  415190:	add    BYTE PTR [rax],al
  415192:	add    BYTE PTR [rax],al
  415194:	or     al,0x5c
  415196:	add    DWORD PTR [rax],eax
  415198:	add    BYTE PTR [rax],al
  41519a:	add    BYTE PTR [rax],al
  41519c:	sbb    al,0x5c
  41519e:	add    DWORD PTR [rax],eax
  4151a0:	add    BYTE PTR [rax],al
  4151a2:	add    BYTE PTR [rax],al
  4151a4:	sub    al,0x5c
  4151a6:	add    DWORD PTR [rax],eax
  4151a8:	add    BYTE PTR [rax],al
  4151aa:	add    BYTE PTR [rax],al
  4151ac:	rex pop rsp
  4151ae:	add    DWORD PTR [rax],eax
  4151b0:	add    BYTE PTR [rax],al
  4151b2:	add    BYTE PTR [rax],al
  4151b4:	push   rsp
  4151b5:	pop    rsp
  4151b6:	add    DWORD PTR [rax],eax
  4151b8:	add    BYTE PTR [rax],al
  4151ba:	add    BYTE PTR [rax],al
  4151bc:	push   0x15c
  4151c1:	add    BYTE PTR [rax],al
  4151c3:	add    BYTE PTR [rsp+rbx*2+0x1],bh
  4151c7:	add    BYTE PTR [rax],al
  4151c9:	add    BYTE PTR [rax],al
  4151cb:	add    BYTE PTR [rsp+rbx*2+0x1],cl
  4151d2:	add    BYTE PTR [rax],al
  4151d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4151d5:	pop    rsp
  4151d6:	add    DWORD PTR [rax],eax
  4151d8:	add    BYTE PTR [rax],al
  4151da:	add    BYTE PTR [rax],al
  4151dc:	mov    esp,0x15c
  4151e1:	add    BYTE PTR [rax],al
  4151e3:	add    al,dl
  4151e5:	pop    rsp
  4151e6:	add    DWORD PTR [rax],eax
  4151e8:	add    BYTE PTR [rax],al
  4151ea:	add    BYTE PTR [rax],al
  4151ec:	call   0x41534d
  4151f1:	add    BYTE PTR [rax],al
  4151f3:	add    ah,bh
  4151f5:	pop    rsp
  4151f6:	add    DWORD PTR [rax],eax
  4151f8:	add    BYTE PTR [rax],al
  4151fa:	add    BYTE PTR [rax],al
  4151fc:	or     al,0x5d
  4151fe:	add    DWORD PTR [rax],eax
  415200:	add    BYTE PTR [rax],al
  415202:	add    BYTE PTR [rax],al
  415204:	and    BYTE PTR [rbp+0x1],bl
  415207:	add    BYTE PTR [rax],al
  415209:	add    BYTE PTR [rax],al
  41520b:	add    BYTE PTR [rbx*2+0x1],dh
  415212:	add    BYTE PTR [rax],al
  415214:	rex.W pop rbp
  415216:	add    DWORD PTR [rax],eax
  415218:	add    BYTE PTR [rax],al
  41521a:	add    BYTE PTR [rax],al
  41521c:	pop    rsp
  41521d:	pop    rbp
  41521e:	add    DWORD PTR [rax],eax
  415220:	add    BYTE PTR [rax],al
  415222:	add    BYTE PTR [rax],al
  415224:	ins    BYTE PTR es:[rdi],dx
  415225:	pop    rbp
  415226:	add    DWORD PTR [rax],eax
  415228:	add    BYTE PTR [rax],al
  41522a:	add    BYTE PTR [rax],al
  41522c:	mov    BYTE PTR [rbp+0x1],bl
  41522f:	add    BYTE PTR [rax],al
  415231:	add    BYTE PTR [rax],al
  415233:	add    BYTE PTR [rax+0x15d],ah
  415239:	add    BYTE PTR [rax],al
  41523b:	add    BYTE PTR [rbp+rbx*2+0x1],dh
  415242:	add    BYTE PTR [rax],al
  415244:	rcr    BYTE PTR [rbp+0x1],0x0
  415248:	add    BYTE PTR [rax],al
  41524a:	add    BYTE PTR [rax],al
  41524c:	rcr    BYTE PTR [rbp+0x1],1
  41524f:	add    BYTE PTR [rax],al
  415251:	add    BYTE PTR [rax],al
  415253:	add    al,ah
  415255:	pop    rbp
  415256:	add    DWORD PTR [rax],eax
  415258:	add    BYTE PTR [rax],al
  41525a:	add    BYTE PTR [rax],al
  41525c:	cld    
  41525d:	pop    rbp
  41525e:	add    DWORD PTR [rax],eax
	...
  41526c:	or     al,0x5e
  41526e:	add    DWORD PTR [rax],eax
  415270:	add    BYTE PTR [rax],al
  415272:	add    BYTE PTR [rax],al
  415274:	and    al,0x5e
  415276:	add    DWORD PTR [rax],eax
  415278:	add    BYTE PTR [rax],al
  41527a:	add    BYTE PTR [rax],al
  41527c:	cmp    al,0x5e
  41527e:	add    DWORD PTR [rax],eax
  415280:	add    BYTE PTR [rax],al
  415282:	add    BYTE PTR [rax],al
  415284:	push   rax
  415285:	pop    rsi
  415286:	add    DWORD PTR [rax],eax
  415288:	add    BYTE PTR [rax],al
  41528a:	add    BYTE PTR [rax],al
  41528c:	pop    si
  41528e:	add    DWORD PTR [rax],eax
  415290:	add    BYTE PTR [rax],al
  415292:	add    BYTE PTR [rax],al
  415294:	jl     0x4152f4
  415296:	add    DWORD PTR [rax],eax
  415298:	add    BYTE PTR [rax],al
  41529a:	add    BYTE PTR [rax],al
  41529c:	mov    WORD PTR [rsi+0x1],ds
  41529f:	add    BYTE PTR [rax],al
  4152a1:	add    BYTE PTR [rax],al
  4152a3:	add    BYTE PTR [rdx+0x15e],ah
  4152a9:	add    BYTE PTR [rax],al
  4152ab:	add    BYTE PTR [rsi+rbx*2+0x1],dh
  4152b2:	add    BYTE PTR [rax],al
  4152b4:	(bad)  
  4152b5:	pop    rsi
  4152b6:	add    DWORD PTR [rax],eax
  4152b8:	add    BYTE PTR [rax],al
  4152ba:	add    BYTE PTR [rax],al
  4152bc:	ficomp WORD PTR [rsi+0x1]
  4152bf:	add    BYTE PTR [rax],al
  4152c1:	add    BYTE PTR [rax],al
  4152c3:	add    dl,bh
  4152c5:	pop    rsi
  4152c6:	add    DWORD PTR [rax],eax
  4152c8:	add    BYTE PTR [rax],al
  4152ca:	add    BYTE PTR [rax],al
  4152cc:	adc    bl,BYTE PTR [rdi+0x1]
  4152cf:	add    BYTE PTR [rax],al
  4152d1:	add    BYTE PTR [rax],al
  4152d3:	add    BYTE PTR [rdi+rbx*2],ch
  4152d6:	add    DWORD PTR [rax],eax
  4152d8:	add    BYTE PTR [rax],al
  4152da:	add    BYTE PTR [rax],al
  4152dc:	rex.X pop rdi
  4152de:	add    DWORD PTR [rax],eax
  4152e0:	add    BYTE PTR [rax],al
  4152e2:	add    BYTE PTR [rax],al
  4152e4:	push   rsi
  4152e5:	pop    rdi
  4152e6:	add    DWORD PTR [rax],eax
  4152e8:	add    BYTE PTR [rax],al
  4152ea:	add    BYTE PTR [rax],al
  4152ec:	jo     0x41534d
  4152ee:	add    DWORD PTR [rax],eax
  4152f0:	add    BYTE PTR [rax],al
  4152f2:	add    BYTE PTR [rax],al
  4152f4:	test   BYTE PTR [rdi+0x1],bl
  4152f7:	add    BYTE PTR [rax],al
  4152f9:	add    BYTE PTR [rax],al
  4152fb:	add    BYTE PTR [rdx+0x15f],ah
  415301:	add    BYTE PTR [rax],al
  415303:	add    BYTE PTR [rdx+0x15f],ch
  415309:	add    BYTE PTR [rax],al
  41530b:	add    BYTE PTR [rsi+0x15f],bh
  415311:	add    BYTE PTR [rax],al
  415313:	add    ah,cl
  415315:	pop    rdi
  415316:	add    DWORD PTR [rax],eax
  415318:	add    BYTE PTR [rax],al
  41531a:	add    BYTE PTR [rax],al
  41531c:	call   0x415480
  415321:	add    BYTE PTR [rax],al
  415323:	add    dl,bh
  415325:	pop    rdi
  415326:	add    DWORD PTR [rax],eax
	...
  415334:	or     ah,BYTE PTR [rax+0x1]
  415337:	add    BYTE PTR [rax],al
  415339:	add    BYTE PTR [rax],al
  41533b:	add    BYTE PTR [rdx],ah
  41533d:	(bad)  
  41533e:	add    DWORD PTR [rax],eax
  415340:	add    BYTE PTR [rax],al
  415342:	add    BYTE PTR [rax],al
  415344:	sub    al,0x60
  415346:	add    DWORD PTR [rax],eax
  415348:	add    BYTE PTR [rax],al
  41534a:	add    BYTE PTR [rax],al
  41534c:	cmp    ah,BYTE PTR [rax+0x1]
  41534f:	add    BYTE PTR [rax],al
  415351:	add    BYTE PTR [rax],al
  415353:	add    BYTE PTR [rdx+0x60],cl
  415356:	add    DWORD PTR [rax],eax
  415358:	add    BYTE PTR [rax],al
  41535a:	add    BYTE PTR [rax],al
  41535c:	push   rsi
  41535d:	(bad)  
  41535e:	add    DWORD PTR [rax],eax
  415360:	add    BYTE PTR [rax],al
  415362:	add    BYTE PTR [rax],al
  415364:	fs (bad) 
  415366:	add    DWORD PTR [rax],eax
  415368:	add    BYTE PTR [rax],al
  41536a:	add    BYTE PTR [rax],al
  41536c:	je     0x4153ce
  41536e:	add    DWORD PTR [rax],eax
  415370:	add    BYTE PTR [rax],al
  415372:	add    BYTE PTR [rax],al
  415374:	xchg   BYTE PTR [rax+0x1],ah
  415377:	add    BYTE PTR [rax],al
  415379:	add    BYTE PTR [rax],al
  41537b:	add    BYTE PTR [rdx+0x160],bl
  415381:	add    BYTE PTR [rax],al
  415383:	add    BYTE PTR [rax+riz*2+0x1],ah
  41538a:	add    BYTE PTR [rax],al
  41538c:	mov    dl,0x60
  41538e:	add    DWORD PTR [rax],eax
  415390:	add    BYTE PTR [rax],al
  415392:	add    BYTE PTR [rax],al
  415394:	mov    esp,0x160
  415399:	add    BYTE PTR [rax],al
  41539b:	add    dh,al
  41539d:	(bad)  
  41539e:	add    DWORD PTR [rax],eax
  4153a0:	add    BYTE PTR [rax],al
  4153a2:	add    BYTE PTR [rax],al
  4153a4:	(bad)  
  4153a5:	(bad)  
  4153a6:	add    DWORD PTR [rax],eax
  4153a8:	add    BYTE PTR [rax],al
  4153aa:	add    BYTE PTR [rax],al
  4153ac:	fsub   DWORD PTR [rax+0x1]
  4153af:	add    BYTE PTR [rax],al
  4153b1:	add    BYTE PTR [rax],al
  4153b3:	add    ah,ah
  4153b5:	(bad)  
  4153b6:	add    DWORD PTR [rax],eax
  4153b8:	add    BYTE PTR [rax],al
  4153ba:	add    BYTE PTR [rax],al
  4153bc:	in     al,dx
  4153bd:	(bad)  
  4153be:	add    DWORD PTR [rax],eax
  4153c0:	add    BYTE PTR [rax],al
  4153c2:	add    BYTE PTR [rax],al
  4153c4:	mul    BYTE PTR [rax+0x1]
  4153c7:	add    BYTE PTR [rax],al
  4153c9:	add    BYTE PTR [rax],al
  4153cb:	add    BYTE PTR [rdx],al
  4153cd:	(bad)  
  4153ce:	add    DWORD PTR [rax],eax
  4153d0:	add    BYTE PTR [rax],al
  4153d2:	add    BYTE PTR [rax],al
  4153d4:	adc    BYTE PTR [rcx+0x1],ah
  4153d7:	add    BYTE PTR [rax],al
  4153d9:	add    BYTE PTR [rax],al
  4153db:	add    BYTE PTR [rdx],bl
  4153dd:	(bad)  
  4153de:	add    DWORD PTR [rax],eax
  4153e0:	add    BYTE PTR [rax],al
  4153e2:	add    BYTE PTR [rax],al
  4153e4:	and    ah,BYTE PTR [rcx+0x1]
  4153e7:	add    BYTE PTR [rax],al
  4153e9:	add    BYTE PTR [rax],al
  4153eb:	add    BYTE PTR [rcx+riz*2],ch
  4153ee:	add    DWORD PTR [rax],eax
  4153f0:	add    BYTE PTR [rax],al
  4153f2:	add    BYTE PTR [rax],al
  4153f4:	xor    al,0x61
  4153f6:	add    DWORD PTR [rax],eax
  4153f8:	add    BYTE PTR [rax],al
  4153fa:	add    BYTE PTR [rax],al
  4153fc:	ds (bad) 
  4153fe:	add    DWORD PTR [rax],eax
  415400:	add    BYTE PTR [rax],al
  415402:	add    BYTE PTR [rax],al
  415404:	rex.W (bad) 
  415406:	add    DWORD PTR [rax],eax
  415408:	add    BYTE PTR [rax],al
  41540a:	add    BYTE PTR [rax],al
  41540c:	push   rax
  41540d:	(bad)  
  41540e:	add    DWORD PTR [rax],eax
  415410:	add    BYTE PTR [rax],al
  415412:	add    BYTE PTR [rax],al
  415414:	pop    rax
  415415:	(bad)  
  415416:	add    DWORD PTR [rax],eax
  415418:	add    BYTE PTR [rax],al
  41541a:	add    BYTE PTR [rax],al
  41541c:	(bad)  
  41541d:	(bad)  
  41541e:	add    DWORD PTR [rax],eax
  415420:	add    BYTE PTR [rax],al
  415422:	add    BYTE PTR [rax],al
  415424:	ins    BYTE PTR es:[rdi],dx
  415425:	(bad)  
  415426:	add    DWORD PTR [rax],eax
  415428:	add    BYTE PTR [rax],al
  41542a:	add    BYTE PTR [rax],al
  41542c:	jbe    0x41548f
  41542e:	add    DWORD PTR [rax],eax
  415430:	add    BYTE PTR [rax],al
  415432:	add    BYTE PTR [rax],al
  415434:	and    BYTE PTR [rcx+0x1],0x0
  415438:	add    BYTE PTR [rax],al
  41543a:	add    BYTE PTR [rax],al
  41543c:	mov    ah,BYTE PTR [rcx+0x1]
  41543f:	add    BYTE PTR [rax],al
  415441:	add    BYTE PTR [rax],al
  415443:	add    BYTE PTR [rax+0x161],bl
  415449:	add    BYTE PTR [rax],al
  41544b:	add    BYTE PTR [rdx+0x161],ah
  415451:	add    BYTE PTR [rax],al
  415453:	add    BYTE PTR [rcx+riz*2+0x1],ch
  41545a:	add    BYTE PTR [rax],al
  41545c:	mov    dh,0x61
  41545e:	add    DWORD PTR [rax],eax
  415460:	add    BYTE PTR [rax],al
  415462:	add    BYTE PTR [rax],al
  415464:	mov    esi,0x161
  415469:	add    BYTE PTR [rax],al
  41546b:	add    al,cl
  41546d:	(bad)  
  41546e:	add    DWORD PTR [rax],eax
  415470:	add    BYTE PTR [rax],al
  415472:	add    BYTE PTR [rax],al
  415474:	shl    BYTE PTR [rcx+0x1],cl
  415477:	add    BYTE PTR [rax],al
  415479:	add    BYTE PTR [rax],al
  41547b:	add    ah,bl
  41547d:	(bad)  
  41547e:	add    DWORD PTR [rax],eax
  415480:	add    BYTE PTR [rax],al
  415482:	add    BYTE PTR [rax],al
  415484:	out    0x61,al
  415486:	add    DWORD PTR [rax],eax
  415488:	add    BYTE PTR [rax],al
  41548a:	add    BYTE PTR [rax],al
  41548c:	lock (bad) 
  41548e:	add    DWORD PTR [rax],eax
  415490:	add    BYTE PTR [rax],al
  415492:	add    BYTE PTR [rax],al
  415494:	cli    
  415495:	(bad)  
  415496:	add    DWORD PTR [rax],eax
  415498:	add    BYTE PTR [rax],al
  41549a:	add    BYTE PTR [rax],al
  41549c:	add    al,0x62
  41549e:	add    DWORD PTR [rax],eax
  4154a0:	add    BYTE PTR [rax],al
  4154a2:	add    BYTE PTR [rax],al
  4154a4:	(bad)  
  4154a5:	(bad)  
  4154a7:	add    BYTE PTR [rax],al
  4154a9:	add    BYTE PTR [rax],al
  4154ab:	add    BYTE PTR [rax],bl
  4154ad:	(bad)  
  4154af:	add    BYTE PTR [rax],al
  4154b1:	add    BYTE PTR [rax],al
  4154b3:	add    BYTE PTR [rdx],ah
  4154b5:	(bad)  
  4154b7:	add    BYTE PTR [rax],al
  4154b9:	add    BYTE PTR [rax],al
  4154bb:	add    BYTE PTR [rsi],ch
  4154bd:	(bad)  
  4154bf:	add    BYTE PTR [rax],al
  4154c1:	add    BYTE PTR [rax],al
  4154c3:	add    BYTE PTR [rax],bh
  4154c5:	(bad)  
	...
  4154d3:	add    BYTE PTR [rdx+0x62],al
  4154d6:	add    DWORD PTR [rax],eax
	...
  4154e4:	fs pop rcx
  4154e6:	add    DWORD PTR [rax],eax
  4154e8:	add    BYTE PTR [rax],al
  4154ea:	add    BYTE PTR [rax],al
  4154ec:	jo     0x415547
  4154ee:	add    DWORD PTR [rax],eax
  4154f0:	add    BYTE PTR [rax],al
  4154f2:	add    BYTE PTR [rax],al
  4154f4:	sbb    BYTE PTR [rcx+0x1],0x0
  4154f8:	add    BYTE PTR [rax],al
  4154fa:	add    BYTE PTR [rax],al
  4154fc:	mov    WORD PTR [rcx+0x1],ds
  4154ff:	add    BYTE PTR [rax],al
  415501:	add    BYTE PTR [rax],al
  415503:	add    BYTE PTR [rax+0x159],ah
  415509:	add    BYTE PTR [rax],al
  41550b:	add    BYTE PTR [rax+0x159],dh
  415511:	add    BYTE PTR [rax],al
  415513:	add    al,al
  415515:	pop    rcx
  415516:	add    DWORD PTR [rax],eax
  415518:	add    BYTE PTR [rax],al
  41551a:	add    BYTE PTR [rax],al
  41551c:	rcr    BYTE PTR [rcx+0x1],1
  41551f:	add    BYTE PTR [rax],al
  415521:	add    BYTE PTR [rax],al
  415523:	add    al,ah
  415525:	pop    rcx
  415526:	add    DWORD PTR [rax],eax
  415528:	add    BYTE PTR [rax],al
  41552a:	add    BYTE PTR [rax],al
  41552c:	lock pop rcx
  41552e:	add    DWORD PTR [rax],eax
  415530:	add    BYTE PTR [rax],al
  415532:	add    BYTE PTR [rax],al
  415534:	or     BYTE PTR [rdx+0x1],bl
  415537:	add    BYTE PTR [rax],al
  415539:	add    BYTE PTR [rax],al
  41553b:	add    BYTE PTR [rax],ah
  41553d:	pop    rdx
  41553e:	add    DWORD PTR [rax],eax
  415540:	add    BYTE PTR [rax],al
  415542:	add    BYTE PTR [rax],al
  415544:	xor    al,0x5a
  415546:	add    DWORD PTR [rax],eax
  415548:	add    BYTE PTR [rax],al
  41554a:	add    BYTE PTR [rax],al
  41554c:	rex.WR pop rdx
  41554e:	add    DWORD PTR [rax],eax
  415550:	add    BYTE PTR [rax],al
  415552:	add    BYTE PTR [rax],al
  415554:	pop    rsp
  415555:	pop    rdx
  415556:	add    DWORD PTR [rax],eax
  415558:	add    BYTE PTR [rax],al
  41555a:	add    BYTE PTR [rax],al
  41555c:	push   0x15a
  415561:	add    BYTE PTR [rax],al
  415563:	add    BYTE PTR [rdx+rbx*2+0x1],bh
  415567:	add    BYTE PTR [rax],al
  415569:	add    BYTE PTR [rax],al
  41556b:	add    BYTE PTR [rdx+rbx*2+0x1],cl
  415572:	add    BYTE PTR [rax],al
  415574:	pushf  
  415575:	pop    rdx
  415576:	add    DWORD PTR [rax],eax
  415578:	add    BYTE PTR [rax],al
  41557a:	add    BYTE PTR [rax],al
  41557c:	test   al,0x5a
  41557e:	add    DWORD PTR [rax],eax
  415580:	add    BYTE PTR [rax],al
  415582:	add    BYTE PTR [rax],al
  415584:	mov    esp,0x15a
  415589:	add    BYTE PTR [rax],al
  41558b:	add    al,dl
  41558d:	pop    rdx
  41558e:	add    DWORD PTR [rax],eax
  415590:	add    BYTE PTR [rax],al
  415592:	add    BYTE PTR [rax],al
  415594:	call   0x4156f3
  415599:	add    BYTE PTR [rax],al
  41559b:	add    al,bh
  41559d:	pop    rdx
  41559e:	add    DWORD PTR [rax],eax
  4155a0:	add    BYTE PTR [rax],al
  4155a2:	add    BYTE PTR [rax],al
  4155a4:	or     BYTE PTR [rbx+0x1],bl
  4155a7:	add    BYTE PTR [rax],al
  4155a9:	add    BYTE PTR [rax],al
  4155ab:	add    BYTE PTR [rax],bl
  4155ad:	pop    rbx
  4155ae:	add    DWORD PTR [rax],eax
  4155b0:	add    BYTE PTR [rax],al
  4155b2:	add    BYTE PTR [rax],al
  4155b4:	sub    BYTE PTR [rbx+0x1],bl
  4155b7:	add    BYTE PTR [rax],al
  4155b9:	add    BYTE PTR [rax],al
  4155bb:	add    BYTE PTR [rax],bh
  4155bd:	pop    rbx
  4155be:	add    DWORD PTR [rax],eax
  4155c0:	add    BYTE PTR [rax],al
  4155c2:	add    BYTE PTR [rax],al
  4155c4:	push   rax
  4155c5:	pop    rbx
  4155c6:	add    DWORD PTR [rax],eax
  4155c8:	add    BYTE PTR [rax],al
  4155ca:	add    BYTE PTR [rax],al
  4155cc:	(bad)  
  4155cd:	pop    rbx
  4155ce:	add    DWORD PTR [rax],eax
  4155d0:	add    BYTE PTR [rax],al
  4155d2:	add    BYTE PTR [rax],al
  4155d4:	js     0x415631
  4155d6:	add    DWORD PTR [rax],eax
  4155d8:	add    BYTE PTR [rax],al
  4155da:	add    BYTE PTR [rax],al
  4155dc:	mov    WORD PTR [rbx+0x1],ds
  4155df:	add    BYTE PTR [rax],al
  4155e1:	add    BYTE PTR [rax],al
  4155e3:	add    BYTE PTR [rax+0x15b],ah
  4155e9:	add    BYTE PTR [rax],al
  4155eb:	add    BYTE PTR [rbx+rbx*2+0x1],dh
  4155f2:	add    BYTE PTR [rax],al
  4155f4:	int3   
  4155f5:	pop    rbx
  4155f6:	add    DWORD PTR [rax],eax
  4155f8:	add    BYTE PTR [rax],al
  4155fa:	add    BYTE PTR [rax],al
  4155fc:	fcomp  QWORD PTR [rbx+0x1]
  4155ff:	add    BYTE PTR [rax],al
  415601:	add    BYTE PTR [rax],al
  415603:	add    ah,ch
  415605:	pop    rbx
  415606:	add    DWORD PTR [rax],eax
  415608:	add    BYTE PTR [rax],al
  41560a:	add    BYTE PTR [rax],al
  41560c:	cld    
  41560d:	pop    rbx
  41560e:	add    DWORD PTR [rax],eax
  415610:	add    BYTE PTR [rax],al
  415612:	add    BYTE PTR [rax],al
  415614:	or     al,0x5c
  415616:	add    DWORD PTR [rax],eax
  415618:	add    BYTE PTR [rax],al
  41561a:	add    BYTE PTR [rax],al
  41561c:	sbb    al,0x5c
  41561e:	add    DWORD PTR [rax],eax
  415620:	add    BYTE PTR [rax],al
  415622:	add    BYTE PTR [rax],al
  415624:	sub    al,0x5c
  415626:	add    DWORD PTR [rax],eax
  415628:	add    BYTE PTR [rax],al
  41562a:	add    BYTE PTR [rax],al
  41562c:	rex pop rsp
  41562e:	add    DWORD PTR [rax],eax
  415630:	add    BYTE PTR [rax],al
  415632:	add    BYTE PTR [rax],al
  415634:	push   rsp
  415635:	pop    rsp
  415636:	add    DWORD PTR [rax],eax
  415638:	add    BYTE PTR [rax],al
  41563a:	add    BYTE PTR [rax],al
  41563c:	push   0x15c
  415641:	add    BYTE PTR [rax],al
  415643:	add    BYTE PTR [rsp+rbx*2+0x1],bh
  415647:	add    BYTE PTR [rax],al
  415649:	add    BYTE PTR [rax],al
  41564b:	add    BYTE PTR [rsp+rbx*2+0x1],cl
  415652:	add    BYTE PTR [rax],al
  415654:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  415655:	pop    rsp
  415656:	add    DWORD PTR [rax],eax
  415658:	add    BYTE PTR [rax],al
  41565a:	add    BYTE PTR [rax],al
  41565c:	mov    esp,0x15c
  415661:	add    BYTE PTR [rax],al
  415663:	add    al,dl
  415665:	pop    rsp
  415666:	add    DWORD PTR [rax],eax
  415668:	add    BYTE PTR [rax],al
  41566a:	add    BYTE PTR [rax],al
  41566c:	call   0x4157cd
  415671:	add    BYTE PTR [rax],al
  415673:	add    ah,bh
  415675:	pop    rsp
  415676:	add    DWORD PTR [rax],eax
  415678:	add    BYTE PTR [rax],al
  41567a:	add    BYTE PTR [rax],al
  41567c:	or     al,0x5d
  41567e:	add    DWORD PTR [rax],eax
  415680:	add    BYTE PTR [rax],al
  415682:	add    BYTE PTR [rax],al
  415684:	and    BYTE PTR [rbp+0x1],bl
  415687:	add    BYTE PTR [rax],al
  415689:	add    BYTE PTR [rax],al
  41568b:	add    BYTE PTR [rbx*2+0x1],dh
  415692:	add    BYTE PTR [rax],al
  415694:	rex.W pop rbp
  415696:	add    DWORD PTR [rax],eax
  415698:	add    BYTE PTR [rax],al
  41569a:	add    BYTE PTR [rax],al
  41569c:	pop    rsp
  41569d:	pop    rbp
  41569e:	add    DWORD PTR [rax],eax
  4156a0:	add    BYTE PTR [rax],al
  4156a2:	add    BYTE PTR [rax],al
  4156a4:	ins    BYTE PTR es:[rdi],dx
  4156a5:	pop    rbp
  4156a6:	add    DWORD PTR [rax],eax
  4156a8:	add    BYTE PTR [rax],al
  4156aa:	add    BYTE PTR [rax],al
  4156ac:	mov    BYTE PTR [rbp+0x1],bl
  4156af:	add    BYTE PTR [rax],al
  4156b1:	add    BYTE PTR [rax],al
  4156b3:	add    BYTE PTR [rax+0x15d],ah
  4156b9:	add    BYTE PTR [rax],al
  4156bb:	add    BYTE PTR [rbp+rbx*2+0x1],dh
  4156c2:	add    BYTE PTR [rax],al
  4156c4:	rcr    BYTE PTR [rbp+0x1],0x0
  4156c8:	add    BYTE PTR [rax],al
  4156ca:	add    BYTE PTR [rax],al
  4156cc:	rcr    BYTE PTR [rbp+0x1],1
  4156cf:	add    BYTE PTR [rax],al
  4156d1:	add    BYTE PTR [rax],al
  4156d3:	add    al,ah
  4156d5:	pop    rbp
  4156d6:	add    DWORD PTR [rax],eax
  4156d8:	add    BYTE PTR [rax],al
  4156da:	add    BYTE PTR [rax],al
  4156dc:	cld    
  4156dd:	pop    rbp
  4156de:	add    DWORD PTR [rax],eax
	...
  4156ec:	or     al,0x5e
  4156ee:	add    DWORD PTR [rax],eax
  4156f0:	add    BYTE PTR [rax],al
  4156f2:	add    BYTE PTR [rax],al
  4156f4:	and    al,0x5e
  4156f6:	add    DWORD PTR [rax],eax
  4156f8:	add    BYTE PTR [rax],al
  4156fa:	add    BYTE PTR [rax],al
  4156fc:	cmp    al,0x5e
  4156fe:	add    DWORD PTR [rax],eax
  415700:	add    BYTE PTR [rax],al
  415702:	add    BYTE PTR [rax],al
  415704:	push   rax
  415705:	pop    rsi
  415706:	add    DWORD PTR [rax],eax
  415708:	add    BYTE PTR [rax],al
  41570a:	add    BYTE PTR [rax],al
  41570c:	pop    si
  41570e:	add    DWORD PTR [rax],eax
  415710:	add    BYTE PTR [rax],al
  415712:	add    BYTE PTR [rax],al
  415714:	jl     0x415774
  415716:	add    DWORD PTR [rax],eax
  415718:	add    BYTE PTR [rax],al
  41571a:	add    BYTE PTR [rax],al
  41571c:	mov    WORD PTR [rsi+0x1],ds
  41571f:	add    BYTE PTR [rax],al
  415721:	add    BYTE PTR [rax],al
  415723:	add    BYTE PTR [rdx+0x15e],ah
  415729:	add    BYTE PTR [rax],al
  41572b:	add    BYTE PTR [rsi+rbx*2+0x1],dh
  415732:	add    BYTE PTR [rax],al
  415734:	(bad)  
  415735:	pop    rsi
  415736:	add    DWORD PTR [rax],eax
  415738:	add    BYTE PTR [rax],al
  41573a:	add    BYTE PTR [rax],al
  41573c:	ficomp WORD PTR [rsi+0x1]
  41573f:	add    BYTE PTR [rax],al
  415741:	add    BYTE PTR [rax],al
  415743:	add    dl,bh
  415745:	pop    rsi
  415746:	add    DWORD PTR [rax],eax
  415748:	add    BYTE PTR [rax],al
  41574a:	add    BYTE PTR [rax],al
  41574c:	adc    bl,BYTE PTR [rdi+0x1]
  41574f:	add    BYTE PTR [rax],al
  415751:	add    BYTE PTR [rax],al
  415753:	add    BYTE PTR [rdi+rbx*2],ch
  415756:	add    DWORD PTR [rax],eax
  415758:	add    BYTE PTR [rax],al
  41575a:	add    BYTE PTR [rax],al
  41575c:	rex.X pop rdi
  41575e:	add    DWORD PTR [rax],eax
  415760:	add    BYTE PTR [rax],al
  415762:	add    BYTE PTR [rax],al
  415764:	push   rsi
  415765:	pop    rdi
  415766:	add    DWORD PTR [rax],eax
  415768:	add    BYTE PTR [rax],al
  41576a:	add    BYTE PTR [rax],al
  41576c:	jo     0x4157cd
  41576e:	add    DWORD PTR [rax],eax
  415770:	add    BYTE PTR [rax],al
  415772:	add    BYTE PTR [rax],al
  415774:	test   BYTE PTR [rdi+0x1],bl
  415777:	add    BYTE PTR [rax],al
  415779:	add    BYTE PTR [rax],al
  41577b:	add    BYTE PTR [rdx+0x15f],ah
  415781:	add    BYTE PTR [rax],al
  415783:	add    BYTE PTR [rdx+0x15f],ch
  415789:	add    BYTE PTR [rax],al
  41578b:	add    BYTE PTR [rsi+0x15f],bh
  415791:	add    BYTE PTR [rax],al
  415793:	add    ah,cl
  415795:	pop    rdi
  415796:	add    DWORD PTR [rax],eax
  415798:	add    BYTE PTR [rax],al
  41579a:	add    BYTE PTR [rax],al
  41579c:	call   0x415900
  4157a1:	add    BYTE PTR [rax],al
  4157a3:	add    dl,bh
  4157a5:	pop    rdi
  4157a6:	add    DWORD PTR [rax],eax
	...
  4157b4:	or     ah,BYTE PTR [rax+0x1]
  4157b7:	add    BYTE PTR [rax],al
  4157b9:	add    BYTE PTR [rax],al
  4157bb:	add    BYTE PTR [rdx],ah
  4157bd:	(bad)  
  4157be:	add    DWORD PTR [rax],eax
  4157c0:	add    BYTE PTR [rax],al
  4157c2:	add    BYTE PTR [rax],al
  4157c4:	sub    al,0x60
  4157c6:	add    DWORD PTR [rax],eax
  4157c8:	add    BYTE PTR [rax],al
  4157ca:	add    BYTE PTR [rax],al
  4157cc:	cmp    ah,BYTE PTR [rax+0x1]
  4157cf:	add    BYTE PTR [rax],al
  4157d1:	add    BYTE PTR [rax],al
  4157d3:	add    BYTE PTR [rdx+0x60],cl
  4157d6:	add    DWORD PTR [rax],eax
  4157d8:	add    BYTE PTR [rax],al
  4157da:	add    BYTE PTR [rax],al
  4157dc:	push   rsi
  4157dd:	(bad)  
  4157de:	add    DWORD PTR [rax],eax
  4157e0:	add    BYTE PTR [rax],al
  4157e2:	add    BYTE PTR [rax],al
  4157e4:	fs (bad) 
  4157e6:	add    DWORD PTR [rax],eax
  4157e8:	add    BYTE PTR [rax],al
  4157ea:	add    BYTE PTR [rax],al
  4157ec:	je     0x41584e
  4157ee:	add    DWORD PTR [rax],eax
  4157f0:	add    BYTE PTR [rax],al
  4157f2:	add    BYTE PTR [rax],al
  4157f4:	xchg   BYTE PTR [rax+0x1],ah
  4157f7:	add    BYTE PTR [rax],al
  4157f9:	add    BYTE PTR [rax],al
  4157fb:	add    BYTE PTR [rdx+0x160],bl
  415801:	add    BYTE PTR [rax],al
  415803:	add    BYTE PTR [rax+riz*2+0x1],ah
  41580a:	add    BYTE PTR [rax],al
  41580c:	mov    dl,0x60
  41580e:	add    DWORD PTR [rax],eax
  415810:	add    BYTE PTR [rax],al
  415812:	add    BYTE PTR [rax],al
  415814:	mov    esp,0x160
  415819:	add    BYTE PTR [rax],al
  41581b:	add    dh,al
  41581d:	(bad)  
  41581e:	add    DWORD PTR [rax],eax
  415820:	add    BYTE PTR [rax],al
  415822:	add    BYTE PTR [rax],al
  415824:	(bad)  
  415825:	(bad)  
  415826:	add    DWORD PTR [rax],eax
  415828:	add    BYTE PTR [rax],al
  41582a:	add    BYTE PTR [rax],al
  41582c:	fsub   DWORD PTR [rax+0x1]
  41582f:	add    BYTE PTR [rax],al
  415831:	add    BYTE PTR [rax],al
  415833:	add    ah,ah
  415835:	(bad)  
  415836:	add    DWORD PTR [rax],eax
  415838:	add    BYTE PTR [rax],al
  41583a:	add    BYTE PTR [rax],al
  41583c:	in     al,dx
  41583d:	(bad)  
  41583e:	add    DWORD PTR [rax],eax
  415840:	add    BYTE PTR [rax],al
  415842:	add    BYTE PTR [rax],al
  415844:	mul    BYTE PTR [rax+0x1]
  415847:	add    BYTE PTR [rax],al
  415849:	add    BYTE PTR [rax],al
  41584b:	add    BYTE PTR [rdx],al
  41584d:	(bad)  
  41584e:	add    DWORD PTR [rax],eax
  415850:	add    BYTE PTR [rax],al
  415852:	add    BYTE PTR [rax],al
  415854:	adc    BYTE PTR [rcx+0x1],ah
  415857:	add    BYTE PTR [rax],al
  415859:	add    BYTE PTR [rax],al
  41585b:	add    BYTE PTR [rdx],bl
  41585d:	(bad)  
  41585e:	add    DWORD PTR [rax],eax
  415860:	add    BYTE PTR [rax],al
  415862:	add    BYTE PTR [rax],al
  415864:	and    ah,BYTE PTR [rcx+0x1]
  415867:	add    BYTE PTR [rax],al
  415869:	add    BYTE PTR [rax],al
  41586b:	add    BYTE PTR [rcx+riz*2],ch
  41586e:	add    DWORD PTR [rax],eax
  415870:	add    BYTE PTR [rax],al
  415872:	add    BYTE PTR [rax],al
  415874:	xor    al,0x61
  415876:	add    DWORD PTR [rax],eax
  415878:	add    BYTE PTR [rax],al
  41587a:	add    BYTE PTR [rax],al
  41587c:	ds (bad) 
  41587e:	add    DWORD PTR [rax],eax
  415880:	add    BYTE PTR [rax],al
  415882:	add    BYTE PTR [rax],al
  415884:	rex.W (bad) 
  415886:	add    DWORD PTR [rax],eax
  415888:	add    BYTE PTR [rax],al
  41588a:	add    BYTE PTR [rax],al
  41588c:	push   rax
  41588d:	(bad)  
  41588e:	add    DWORD PTR [rax],eax
  415890:	add    BYTE PTR [rax],al
  415892:	add    BYTE PTR [rax],al
  415894:	pop    rax
  415895:	(bad)  
  415896:	add    DWORD PTR [rax],eax
  415898:	add    BYTE PTR [rax],al
  41589a:	add    BYTE PTR [rax],al
  41589c:	(bad)  
  41589d:	(bad)  
  41589e:	add    DWORD PTR [rax],eax
  4158a0:	add    BYTE PTR [rax],al
  4158a2:	add    BYTE PTR [rax],al
  4158a4:	ins    BYTE PTR es:[rdi],dx
  4158a5:	(bad)  
  4158a6:	add    DWORD PTR [rax],eax
  4158a8:	add    BYTE PTR [rax],al
  4158aa:	add    BYTE PTR [rax],al
  4158ac:	jbe    0x41590f
  4158ae:	add    DWORD PTR [rax],eax
  4158b0:	add    BYTE PTR [rax],al
  4158b2:	add    BYTE PTR [rax],al
  4158b4:	and    BYTE PTR [rcx+0x1],0x0
  4158b8:	add    BYTE PTR [rax],al
  4158ba:	add    BYTE PTR [rax],al
  4158bc:	mov    ah,BYTE PTR [rcx+0x1]
  4158bf:	add    BYTE PTR [rax],al
  4158c1:	add    BYTE PTR [rax],al
  4158c3:	add    BYTE PTR [rax+0x161],bl
  4158c9:	add    BYTE PTR [rax],al
  4158cb:	add    BYTE PTR [rdx+0x161],ah
  4158d1:	add    BYTE PTR [rax],al
  4158d3:	add    BYTE PTR [rcx+riz*2+0x1],ch
  4158da:	add    BYTE PTR [rax],al
  4158dc:	mov    dh,0x61
  4158de:	add    DWORD PTR [rax],eax
  4158e0:	add    BYTE PTR [rax],al
  4158e2:	add    BYTE PTR [rax],al
  4158e4:	mov    esi,0x161
  4158e9:	add    BYTE PTR [rax],al
  4158eb:	add    al,cl
  4158ed:	(bad)  
  4158ee:	add    DWORD PTR [rax],eax
  4158f0:	add    BYTE PTR [rax],al
  4158f2:	add    BYTE PTR [rax],al
  4158f4:	shl    BYTE PTR [rcx+0x1],cl
  4158f7:	add    BYTE PTR [rax],al
  4158f9:	add    BYTE PTR [rax],al
  4158fb:	add    ah,bl
  4158fd:	(bad)  
  4158fe:	add    DWORD PTR [rax],eax
  415900:	add    BYTE PTR [rax],al
  415902:	add    BYTE PTR [rax],al
  415904:	out    0x61,al
  415906:	add    DWORD PTR [rax],eax
  415908:	add    BYTE PTR [rax],al
  41590a:	add    BYTE PTR [rax],al
  41590c:	lock (bad) 
  41590e:	add    DWORD PTR [rax],eax
  415910:	add    BYTE PTR [rax],al
  415912:	add    BYTE PTR [rax],al
  415914:	cli    
  415915:	(bad)  
  415916:	add    DWORD PTR [rax],eax
  415918:	add    BYTE PTR [rax],al
  41591a:	add    BYTE PTR [rax],al
  41591c:	add    al,0x62
  41591e:	add    DWORD PTR [rax],eax
  415920:	add    BYTE PTR [rax],al
  415922:	add    BYTE PTR [rax],al
  415924:	(bad)  
  415925:	(bad)  
  415927:	add    BYTE PTR [rax],al
  415929:	add    BYTE PTR [rax],al
  41592b:	add    BYTE PTR [rax],bl
  41592d:	(bad)  
  41592f:	add    BYTE PTR [rax],al
  415931:	add    BYTE PTR [rax],al
  415933:	add    BYTE PTR [rdx],ah
  415935:	(bad)  
  415937:	add    BYTE PTR [rax],al
  415939:	add    BYTE PTR [rax],al
  41593b:	add    BYTE PTR [rsi],ch
  41593d:	(bad)  
  41593f:	add    BYTE PTR [rax],al
  415941:	add    BYTE PTR [rax],al
  415943:	add    BYTE PTR [rax],bh
  415945:	(bad)  
	...
  415953:	add    BYTE PTR [rdx+0x62],al
  415956:	add    DWORD PTR [rax],eax
	...
  415964:	imul   eax,DWORD PTR [rax],0x635f636e
  41596a:	ins    BYTE PTR es:[rdi],dx
  41596b:	outs   dx,DWORD PTR ds:[rsi]
  41596c:	jae    0x4159d3
  41596e:	add    BYTE PTR [rax],al
  415970:	push   0x0
  415972:	outs   dx,BYTE PTR ds:[rsi]
  415973:	movsxd ebx,DWORD PTR [rdi+0x63]
  415976:	outs   dx,DWORD PTR ds:[rsi]
  415977:	jo     0x4159f2
  415979:	pop    rdi
  41597a:	(bad)  
  41597b:	je     0x4159f1
  41597d:	add    BYTE PTR [rax],al
  41597f:	add    BYTE PTR [rax+rax*1+0x6e],ch
  415983:	movsxd ebx,DWORD PTR [rdi+0x63]
  415986:	jb     0x4159ed
  415988:	(bad)  
  415989:	je     0x4159f0
  41598b:	add    BYTE PTR [rbp+0x0],ch
  41598e:	outs   dx,BYTE PTR ds:[rsi]
  41598f:	movsxd ebx,DWORD PTR [rdi+0x64]
  415992:	gs pop di
  415995:	movsxd ebp,DWORD PTR [rdi+0x6d]
  415998:	jo     0x415a09
  41599a:	jne    0x415a0a
  41599c:	add    BYTE PTR fs:[rax],al
  41599f:	add    BYTE PTR [rsi+0x0],ch
  4159a2:	outs   dx,BYTE PTR ds:[rsi]
  4159a3:	movsxd ebx,DWORD PTR [rdi+0x64]
  4159a6:	gs pop di
  4159a9:	imul   ebp,DWORD PTR fs:[rbp+0x0],0x6f000000
  4159b1:	add    BYTE PTR [rsi+0x63],ch
  4159b4:	pop    rdi
  4159b5:	fs gs pop di
  4159b9:	outs   dx,BYTE PTR gs:[rsi]
  4159bb:	jne    0x415a2a
  4159bd:	add    BYTE PTR [rax],al
  4159bf:	add    BYTE PTR [rax+0x0],dh
  4159c2:	outs   dx,BYTE PTR ds:[rsi]
  4159c3:	movsxd ebx,DWORD PTR [rdi+0x64]
  4159c6:	gs pop di
  4159c9:	addr32 jb 0x415a3c
  4159cc:	add    BYTE PTR [rax],al
  4159ce:	add    BYTE PTR [rax],al
  4159d0:	jno    0x4159d2
  4159d2:	outs   dx,BYTE PTR ds:[rsi]
  4159d3:	movsxd ebx,DWORD PTR [rdi+0x64]
  4159d6:	gs pop di
  4159d9:	outs   dx,DWORD PTR ds:[rsi]
  4159da:	jo     0x415a3d
  4159dc:	jno    0x415a53
  4159de:	add    BYTE PTR gs:[rdx+0x0],dh
  4159e2:	outs   dx,BYTE PTR ds:[rsi]
  4159e3:	movsxd ebx,DWORD PTR [rdi+0x64]
  4159e6:	gs pop di
  4159e9:	jbe    0x415a4c
  4159eb:	jb     0x4159ed
  4159ed:	add    BYTE PTR [rax],al
  4159ef:	add    BYTE PTR [rbx+0x0],dh
  4159f2:	outs   dx,BYTE PTR ds:[rsi]
  4159f3:	movsxd ebx,DWORD PTR [rdi+0x64]
  4159f6:	gs pop di
  4159f9:	jbe    0x415a5c
  4159fb:	jb     0x415a5c
  4159fd:	movsxd ebp,DWORD PTR [rax+0x75]
  415a00:	outs   dx,BYTE PTR ds:[rsi]
  415a01:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  415a05:	add    BYTE PTR [rax],al
  415a07:	add    BYTE PTR [rbp+0x0],dh
  415a0a:	outs   dx,BYTE PTR ds:[rsi]
  415a0b:	movsxd ebx,DWORD PTR [rdi+0x64]
  415a0e:	gs pop di
  415a11:	jbe    0x415a74
  415a13:	jb     0x415a74
  415a15:	fs gs data16 ins BYTE PTR es:[rdi],dx
  415a19:	(bad)  
  415a1a:	je     0x415a81
  415a1c:	add    BYTE PTR [rax],al
  415a1e:	add    BYTE PTR [rax],al
  415a20:	jbe    0x415a22
  415a22:	outs   dx,BYTE PTR ds:[rsi]
  415a23:	movsxd ebx,DWORD PTR [rdi+0x64]
  415a26:	gs pop di
  415a29:	jbe    0x415a8c
  415a2b:	jb     0x415a8c
  415a2d:	outs   dx,BYTE PTR gs:[rsi]
  415a2f:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x6e007800
  415a37:	movsxd ebx,DWORD PTR [rdi+0x64]
  415a3a:	gs pop di
  415a3d:	jbe    0x415aa0
  415a3f:	jb     0x415aa0
  415a41:	data16 ins BYTE PTR es:[rdi],dx
  415a43:	gs je  0x415aa9
  415a46:	push   0x32337265
  415a4b:	add    BYTE PTR [rcx+0x0],bh
  415a4e:	outs   dx,BYTE PTR ds:[rsi]
  415a4f:	movsxd ebx,DWORD PTR [rdi+0x64]
  415a52:	gs pop di
  415a55:	jbe    0x415ac3
  415a57:	outs   dx,BYTE PTR gs:[rsi]
  415a59:	add    BYTE PTR [rax],al
  415a5b:	add    BYTE PTR [rbp+0x0],bh
  415a5e:	outs   dx,BYTE PTR ds:[rsi]
  415a5f:	movsxd ebx,DWORD PTR [rdi+0x65]
  415a62:	outs   dx,BYTE PTR ds:[rsi]
  415a63:	fs fs data16 add BYTE PTR gs:[rsi+0x0],bh
  415a6a:	outs   dx,BYTE PTR ds:[rsi]
  415a6b:	movsxd ebx,DWORD PTR [rdi+0x66]
  415a6e:	jb     0x415ad5
  415a70:	gs pop rdi
  415a72:	jae    0x415ae8
  415a74:	jb     0x415adf
  415a76:	outs   dx,BYTE PTR ds:[rsi]
  415a77:	add    BYTE PTR [eax],al
  415a7a:	add    BYTE PTR [rax],al
  415a7c:	add    BYTE PTR [rax],0x6e
  415a7f:	movsxd ebx,DWORD PTR [rdi+0x66]
  415a82:	jb     0x415ae9
  415a84:	gs pop rdi
  415a86:	jbe    0x415af4
  415a88:	outs   dx,BYTE PTR gs:[rsi]
  415a8a:	jae    0x415a8c
  415a8c:	mov    dl,0x0
  415a8e:	outs   dx,BYTE PTR ds:[rsi]
  415a8f:	movsxd ebx,DWORD PTR [rdi+0x67]
  415a92:	gs je  0x415af4
  415a95:	jbe    0x415af8
  415a97:	jb     0x415afa
  415a99:	add    BYTE PTR [rax],al
  415a9b:	add    al,ah
  415a9d:	add    BYTE PTR [rsi+0x63],ch
  415aa0:	pop    rdi
  415aa1:	imul   ebp,DWORD PTR [rsi+0x71],0x0
  415aa8:	in     al,0x0
  415aaa:	outs   dx,BYTE PTR ds:[rsi]
  415aab:	movsxd ebx,DWORD PTR [rdi+0x69]
  415aae:	outs   dx,BYTE PTR ds:[rsi]
  415aaf:	jno    0x415b10
  415ab1:	(bad)  
  415ab2:	je     0x415b28
  415ab4:	outs   dx,BYTE PTR ds:[rsi]
  415ab5:	(bad)  
  415ab6:	ins    DWORD PTR es:[rdi],dx
  415ab7:	add    BYTE PTR gs:[rax],al
  415aba:	add    BYTE PTR [rax],al
  415abc:	out    0x0,eax
  415abe:	outs   dx,BYTE PTR ds:[rsi]
  415abf:	movsxd ebx,DWORD PTR [rdi+0x69]
  415ac2:	outs   dx,BYTE PTR ds:[rsi]
  415ac3:	jno    0x415b24
  415ac5:	movsxd ebp,DWORD PTR [rdi+0x6d]
  415ac8:	jo     0x415b39
  415aca:	jne    0x415b3a
  415acc:	add    BYTE PTR fs:[rax],al
  415acf:	add    al,ch
  415ad1:	add    BYTE PTR [rsi+0x63],ch
  415ad4:	pop    rdi
  415ad5:	imul   ebp,DWORD PTR [rsi+0x71],0x6d6f635f
  415adc:	jo     0x415b4d
  415ade:	jne    0x415b4e
  415ae0:	fs pop rdi
  415ae2:	imul   sp,WORD PTR [rbp+0x6c],0x64
  415ae8:	repnz add BYTE PTR [rsi+0x63],ch
  415aec:	pop    rdi
  415aed:	imul   ebp,DWORD PTR [rsi+0x71],0x6d69645f
  415af4:	add    BYTE PTR [rax],al
  415af6:	add    BYTE PTR [rax],al
  415af8:	repz add BYTE PTR [rsi+0x63],ch
  415afc:	pop    rdi
  415afd:	imul   ebp,DWORD PTR [rsi+0x71],0x6d69645f
  415b04:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x636e00f4
  415b0c:	pop    rdi
  415b0d:	imul   ebp,DWORD PTR [rsi+0x71],0x6d69645f
  415b14:	imul   esp,DWORD PTR [rbx+rsi*2+0x0],0x636e00f5
  415b1c:	pop    rdi
  415b1d:	imul   ebp,DWORD PTR [rsi+0x71],0x6d69645f
  415b24:	ins    BYTE PTR es:[rdi],dx
  415b25:	outs   dx,BYTE PTR gs:[rsi]
  415b27:	add    bh,dh
  415b29:	add    BYTE PTR [rsi+0x63],ch
  415b2c:	pop    rdi
  415b2d:	imul   ebp,DWORD PTR [rsi+0x71],0x756e655f
  415b34:	ins    DWORD PTR es:[rdi],dx
  415b35:	add    BYTE PTR [rax],al
  415b37:	add    cl,bh
  415b39:	add    BYTE PTR [rsi+0x63],ch
  415b3c:	pop    rdi
  415b3d:	imul   ebp,DWORD PTR [rsi+0x71],0x756e655f
  415b44:	ins    DWORD PTR es:[rdi],dx
  415b45:	pop    rdi
  415b46:	ins    DWORD PTR es:[rdi],dx
  415b47:	gs ins DWORD PTR es:[rdi],dx
  415b49:	(bad)  
  415b4a:	gs jb  0x415b4d
  415b4d:	add    BYTE PTR [rax],al
  415b4f:	add    dl,bh
  415b51:	add    BYTE PTR [rsi+0x63],ch
  415b54:	pop    rdi
  415b55:	imul   ebp,DWORD PTR [rsi+0x71],0x726f665f
  415b5c:	ins    DWORD PTR es:[rdi],dx
  415b5d:	(bad)  
  415b5e:	je     0x415b60
  415b60:	cld    
  415b61:	add    BYTE PTR [rsi+0x63],ch
  415b64:	pop    rdi
  415b65:	imul   ebp,DWORD PTR [rsi+0x71],0x7072675f
  415b6c:	pop    rdi
  415b6d:	data16 jne 0x415bdc
  415b70:	ins    BYTE PTR es:[rdi],dx
  415b71:	pop    rdi
  415b72:	outs   dx,BYTE PTR ds:[rsi]
  415b73:	movsxd ebp,DWORD PTR [rcx+0x64]
  415b76:	add    BYTE PTR [rax],al
  415b78:	std    
  415b79:	add    BYTE PTR [rsi+0x63],ch
  415b7c:	pop    rdi
  415b7d:	imul   ebp,DWORD PTR [rsi+0x71],0x7072675f
  415b84:	pop    rdi
  415b85:	outs   dx,BYTE PTR ds:[rsi]
  415b86:	movsxd ebp,DWORD PTR [rcx+0x64]
  415b89:	add    BYTE PTR [rax],al
  415b8b:	add    dh,bh
  415b8d:	add    BYTE PTR [rsi+0x63],ch
  415b90:	pop    rdi
  415b91:	imul   ebp,DWORD PTR [rsi+0x71],0x7072675f
  415b98:	pop    rdi
  415b99:	jo     0x415bfc
  415b9b:	jb     0x415c02
  415b9d:	outs   dx,BYTE PTR ds:[rsi]
  415b9e:	je     0x415ba0
  415ba0:	inc    DWORD PTR [rax]
  415ba2:	outs   dx,BYTE PTR ds:[rsi]
  415ba3:	movsxd ebx,DWORD PTR [rdi+0x69]
  415ba6:	outs   dx,BYTE PTR ds:[rsi]
  415ba7:	jno    0x415c08
  415ba9:	addr32 jb 0x415c1c
  415bac:	outs   dx,BYTE PTR ds:[rsi]
  415bad:	(bad)  
  415bae:	ins    DWORD PTR es:[rdi],dx
  415baf:	add    BYTE PTR gs:[rax],al
  415bb2:	add    BYTE PTR [rax],al
  415bb4:	add    BYTE PTR [rcx],al
  415bb6:	outs   dx,BYTE PTR ds:[rsi]
  415bb7:	movsxd ebx,DWORD PTR [rdi+0x69]
  415bba:	outs   dx,BYTE PTR ds:[rsi]
  415bbb:	jno    0x415c1c
  415bbd:	addr32 jb 0x415c30
  415bc0:	outs   dx,BYTE PTR ds:[rsi]
  415bc1:	(bad)  
  415bc2:	ins    DWORD PTR es:[rdi],dx
  415bc3:	gs pop rdi
  415bc5:	data16 jne 0x415c34
  415bc8:	ins    BYTE PTR es:[rdi],dx
  415bc9:	add    BYTE PTR [rax],al
  415bcb:	add    BYTE PTR [rdx],al
  415bcd:	add    DWORD PTR [rsi+0x63],ebp
  415bd0:	pop    rdi
  415bd1:	imul   ebp,DWORD PTR [rsi+0x71],0x7072675f
  415bd8:	jae    0x415bda
  415bda:	add    BYTE PTR [rax],al
  415bdc:	(bad)  
  415bdd:	add    DWORD PTR [rsi+0x63],ebp
  415be0:	pop    rdi
  415be1:	imul   ebp,DWORD PTR [rsi+0x71],0x69646e5f
  415be8:	ins    DWORD PTR es:[rdi],dx
  415be9:	jae    0x415beb
  415beb:	add    BYTE PTR [rdi],al
  415bed:	add    DWORD PTR [rsi+0x63],ebp
  415bf0:	pop    rdi
  415bf1:	imul   ebp,DWORD PTR [rsi+0x71],0x61766e5f
  415bf8:	jb     0x415c6d
  415bfa:	add    BYTE PTR [rax],al
  415bfc:	or     BYTE PTR [rcx],al
  415bfe:	outs   dx,BYTE PTR ds:[rsi]
  415bff:	movsxd ebx,DWORD PTR [rdi+0x69]
  415c02:	outs   dx,BYTE PTR ds:[rsi]
  415c03:	jno    0x415c64
  415c05:	outs   dx,DWORD PTR ds:[rsi]
  415c06:	jo     0x415c69
  415c08:	jno    0x415c7f
  415c0a:	add    BYTE PTR gs:[rdx],cl
  415c0d:	add    DWORD PTR [rsi+0x63],ebp
  415c10:	pop    rdi
  415c11:	imul   ebp,DWORD PTR [rsi+0x71],0x7079745f
  415c18:	add    BYTE PTR gs:[rax],al
  415c1b:	add    BYTE PTR [rcx+rax*1],cl
  415c1e:	outs   dx,BYTE PTR ds:[rsi]
  415c1f:	movsxd ebx,DWORD PTR [rdi+0x69]
  415c22:	outs   dx,BYTE PTR ds:[rsi]
  415c23:	jno    0x415c84
  415c25:	je     0x415ca0
  415c27:	jo     0x415c8e
  415c29:	imul   esp,DWORD PTR [rax+rax*1+0xd],0x5f636e01
  415c31:	imul   ebp,DWORD PTR [rsi+0x71],0x7079745f
  415c38:	imul   esp,DWORD PTR gs:[rbx+rsi*2+0x0],0xe000000
  415c41:	add    DWORD PTR [rsi+0x63],ebp
  415c44:	pop    rdi
  415c45:	imul   ebp,DWORD PTR [rsi+0x71],0x6c6e755f
  415c4c:	imul   ebp,DWORD PTR [rbp+0x64],0x6d69
  415c53:	add    BYTE PTR [rdi],cl
  415c55:	add    DWORD PTR [rsi+0x63],ebp
  415c58:	pop    rdi
  415c59:	imul   ebp,DWORD PTR [rsi+0x71],0x6c6e755f
  415c60:	imul   ebp,DWORD PTR [rbp+0x64],0x736d69
  415c67:	add    BYTE PTR [rax],dl
  415c69:	add    DWORD PTR [rsi+0x63],ebp
  415c6c:	pop    rdi
  415c6d:	imul   ebp,DWORD PTR [rsi+0x71],0x6573755f
  415c74:	jb     0x415cd5
  415c76:	je     0x415cf1
  415c78:	jo     0x415cdf
  415c7a:	add    BYTE PTR [rax],al
  415c7c:	adc    DWORD PTR [rcx],eax
  415c7e:	outs   dx,BYTE PTR ds:[rsi]
  415c7f:	movsxd ebx,DWORD PTR [rdi+0x69]
  415c82:	outs   dx,BYTE PTR ds:[rsi]
  415c83:	jno    0x415ce4
  415c85:	jbe    0x415ce8
  415c87:	jb     0x415c89
  415c89:	add    BYTE PTR [rax],al
  415c8b:	add    BYTE PTR [rdx],dl
  415c8d:	add    DWORD PTR [rsi+0x63],ebp
  415c90:	pop    rdi
  415c91:	imul   ebp,DWORD PTR [rsi+0x71],0x7261765f
  415c98:	pop    rdi
  415c99:	movsxd ebp,DWORD PTR [rax+0x75]
  415c9c:	outs   dx,BYTE PTR ds:[rsi]
  415c9d:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  415ca1:	add    BYTE PTR [rax],al
  415ca3:	add    BYTE PTR [rcx+rax*1],dl
  415ca6:	outs   dx,BYTE PTR ds:[rsi]
  415ca7:	movsxd ebx,DWORD PTR [rdi+0x69]
  415caa:	outs   dx,BYTE PTR ds:[rsi]
  415cab:	jno    0x415d0c
  415cad:	jbe    0x415d10
  415caf:	jb     0x415d10
  415cb1:	fs gs data16 ins BYTE PTR es:[rdi],dx
  415cb5:	(bad)  
  415cb6:	je     0x415d1d
  415cb8:	add    BYTE PTR [rax],al
  415cba:	add    BYTE PTR [rax],al
  415cbc:	adc    eax,0x5f636e01
  415cc1:	imul   ebp,DWORD PTR [rsi+0x71],0x7261765f
  415cc8:	pop    rdi
  415cc9:	outs   dx,BYTE PTR gs:[rsi]
  415ccb:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x6e011700
  415cd3:	movsxd ebx,DWORD PTR [rdi+0x69]
  415cd6:	outs   dx,BYTE PTR ds:[rsi]
  415cd7:	jno    0x415d38
  415cd9:	jbe    0x415d3c
  415cdb:	jb     0x415d3c
  415cdd:	data16 ins BYTE PTR es:[rdi],dx
  415cdf:	gs je  0x415d45
  415ce2:	push   0x32337265
  415ce7:	add    BYTE PTR [rcx],bl
  415ce9:	add    DWORD PTR [rsi+0x63],ebp
  415cec:	pop    rdi
  415ced:	imul   ebp,DWORD PTR [rsi+0x71],0x7261765f
  415cf4:	imul   ebp,DWORD PTR fs:[rbp+0x69],0x64
  415cfc:	sbb    al,BYTE PTR [rcx]
  415cfe:	outs   dx,BYTE PTR ds:[rsi]
  415cff:	movsxd ebx,DWORD PTR [rdi+0x69]
  415d02:	outs   dx,BYTE PTR ds:[rsi]
  415d03:	jno    0x415d64
  415d05:	jbe    0x415d68
  415d07:	jb     0x415d72
  415d09:	add    BYTE PTR fs:[rax],al
  415d0c:	sbb    al,0x1
  415d0e:	outs   dx,BYTE PTR ds:[rsi]
  415d0f:	movsxd ebx,DWORD PTR [rdi+0x69]
  415d12:	outs   dx,BYTE PTR ds:[rsi]
  415d13:	jno    0x415d74
  415d15:	jbe    0x415d78
  415d17:	jb     0x415d87
  415d19:	(bad)  
  415d1a:	ins    DWORD PTR es:[rdi],dx
  415d1b:	add    BYTE PTR gs:[rax],al
  415d1e:	add    BYTE PTR [rax],al
  415d20:	sbb    eax,0x5f636e01
  415d25:	imul   ebp,DWORD PTR [rsi+0x71],0x7261765f
  415d2c:	outs   dx,BYTE PTR ds:[rsi]
  415d2d:	(bad)  
  415d2e:	je     0x415da4
  415d30:	jae    0x415d32
  415d32:	add    BYTE PTR [rax],al
  415d34:	(bad)  
  415d35:	add    DWORD PTR [rsi+0x63],ebp
  415d38:	pop    rdi
  415d39:	imul   ebp,DWORD PTR [rsi+0x71],0x7261765f
  415d40:	outs   dx,BYTE PTR ds:[rsi]
  415d41:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x1f000000
  415d49:	add    DWORD PTR [rsi+0x63],ebp
  415d4c:	pop    rdi
  415d4d:	imul   ebp,DWORD PTR [rsi+0x71],0x7261765f
  415d54:	je     0x415dcf
  415d56:	jo     0x415dbd
  415d58:	add    BYTE PTR [rax],al
  415d5a:	add    BYTE PTR [rax],al
  415d5c:	and    BYTE PTR [rcx],al
  415d5e:	outs   dx,BYTE PTR ds:[rsi]
  415d5f:	movsxd ebx,DWORD PTR [rdi+0x69]
  415d62:	outs   dx,BYTE PTR ds:[rsi]
  415d63:	jno    0x415dc4
  415d65:	jbe    0x415dd3
  415d67:	outs   dx,BYTE PTR gs:[rsi]
  415d69:	add    BYTE PTR [rax],al
  415d6b:	add    BYTE PTR [rcx],ah
  415d6d:	add    DWORD PTR [rsi+0x63],ebp
  415d70:	pop    rdi
  415d71:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  415d78:	(bad)  
  415d79:	jb     0x415ded
  415d7b:	(bad)  
  415d7c:	jns    0x415ddd
  415d7e:	movsxd ebp,DWORD PTR [rdi+0x6d]
  415d81:	jo     0x415df2
  415d83:	jne    0x415df3
  415d85:	add    BYTE PTR fs:[rax],al
  415d88:	and    al,BYTE PTR [rcx]
  415d8a:	outs   dx,BYTE PTR ds:[rsi]
  415d8b:	movsxd ebx,DWORD PTR [rdi+0x69]
  415d8e:	outs   dx,BYTE PTR ds:[rsi]
  415d8f:	jae    0x415df6
  415d91:	jb     0x415e07
  415d93:	pop    rdi
  415d94:	movsxd ebp,DWORD PTR [rdi+0x6d]
  415d97:	jo     0x415e08
  415d99:	jne    0x415e09
  415d9b:	add    BYTE PTR fs:[rax],al
  415d9e:	add    BYTE PTR [rax],al
  415da0:	and    eax,DWORD PTR [rcx]
  415da2:	outs   dx,BYTE PTR ds:[rsi]
  415da3:	movsxd ebx,DWORD PTR [rdi+0x69]
  415da6:	outs   dx,BYTE PTR ds:[rsi]
  415da7:	jae    0x415e0e
  415da9:	jb     0x415e1f
  415dab:	pop    rdi
  415dac:	outs   dx,BYTE PTR gs:[rsi]
  415dae:	jne    0x415e1d
  415db0:	add    BYTE PTR [rax],al
  415db2:	add    BYTE PTR [rax],al
  415db4:	and    al,0x1
  415db6:	outs   dx,BYTE PTR ds:[rsi]
  415db7:	movsxd ebx,DWORD PTR [rdi+0x6f]
  415dba:	jo     0x415e21
  415dbc:	outs   dx,BYTE PTR ds:[rsi]
  415dbd:	add    BYTE PTR [rax],al
  415dbf:	add    BYTE PTR [rdx+0x1],dl
  415dc2:	outs   dx,BYTE PTR ds:[rsi]
  415dc3:	movsxd ebx,DWORD PTR [rdi+0x70]
  415dc6:	jne    0x415e3c
  415dc8:	pop    rdi
  415dc9:	jbe    0x415e2c
  415dcb:	jb     0x415e2e
  415dcd:	add    BYTE PTR [rax],al
  415dcf:	add    BYTE PTR [rcx+0x5f636e01],cl
  415dd5:	jae    0x415e3c
  415dd7:	je     0x415e38
  415dd9:	imul   bp,WORD PTR [rsp+rbp*2+0x0],0x0
  415de0:	mov    al,BYTE PTR [rcx]
  415de2:	outs   dx,BYTE PTR ds:[rsi]
  415de3:	movsxd ebx,DWORD PTR [rdi+0x73]
  415de6:	gs je  0x415e48
  415de9:	jbe    0x415e4c
  415deb:	jb     0x415e4c
  415ded:	movsxd ebp,DWORD PTR [rax+0x75]
  415df0:	outs   dx,BYTE PTR ds:[rsi]
  415df1:	imul   ebx,DWORD PTR [rdi+0x63],0x61
  415df5:	movsxd ebp,DWORD PTR [rax+0x65]
  415df8:	add    BYTE PTR [rax],al
  415dfa:	add    BYTE PTR [rax],al
  415dfc:	lea    eax,[rcx]
  415dfe:	outs   dx,BYTE PTR ds:[rsi]
  415dff:	movsxd ebx,DWORD PTR [rdi+0x73]
  415e02:	je     0x415e76
  415e04:	gs jb  0x415e79
  415e07:	outs   dx,DWORD PTR ds:[rsi]
  415e08:	jb     0x415e0a
  415e0a:	add    BYTE PTR [rax],al
  415e0c:	fadd   DWORD PTR [rax]
  415e0e:	rex.R
  415e0f:	gs ins BYTE PTR es:[rdi],dx
  415e11:	gs je  0x415e79
  415e14:	rex.XB jb 0x415e80
  415e17:	je     0x415e82
  415e19:	movsxd esp,DWORD PTR [rcx+0x6c]
  415e1c:	push   rbx
  415e1d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  415e22:	outs   dx,BYTE PTR ds:[rsi]
  415e23:	add    al,bh
  415e25:	add    BYTE PTR [rbp+0x6e],al
  415e28:	je     0x415e8f
  415e2a:	jb     0x415e6f
  415e2c:	jb     0x415e97
  415e2e:	je     0x415e99
  415e30:	movsxd esp,DWORD PTR [rcx+0x6c]
  415e33:	push   rbx
  415e34:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  415e39:	outs   dx,BYTE PTR ds:[rsi]
  415e3a:	add    BYTE PTR [rax],al
  415e3c:	int    0x1
  415e3e:	rex.RXB
  415e3f:	gs je  0x415e85
  415e42:	jne    0x415eb6
  415e44:	jb     0x415eab
  415e46:	outs   dx,BYTE PTR ds:[rsi]
  415e47:	je     0x415e99
  415e49:	jb     0x415eba
  415e4b:	movsxd esp,DWORD PTR [rbp+0x73]
  415e4e:	jae    0x415e50
  415e50:	(bad)  
  415e51:	add    DWORD PTR [rdi+0x65],eax
  415e54:	je     0x415e99
  415e56:	jne    0x415eca
  415e58:	jb     0x415ebf
  415e5a:	outs   dx,BYTE PTR ds:[rsi]
  415e5b:	je     0x415ead
  415e5d:	jb     0x415ece
  415e5f:	movsxd esp,DWORD PTR [rbp+0x73]
  415e62:	jae    0x415ead
  415e64:	fs add dl,dl
  415e67:	add    DWORD PTR [rdi+0x65],eax
  415e6a:	je     0x415eaf
  415e6c:	jne    0x415ee0
  415e6e:	jb     0x415ed5
  415e70:	outs   dx,BYTE PTR ds:[rsi]
  415e71:	je     0x415ec7
  415e73:	push   0x64616572
  415e78:	rex.WB
  415e79:	add    BYTE PTR fs:[rax],al
  415e7c:	adc    BYTE PTR [rdx],al
  415e7e:	rex.RXB
  415e7f:	gs je  0x415ece
  415e82:	(bad)  
  415e83:	jae    0x415ef9
  415e85:	rex.RB jb 0x415efa
  415e88:	outs   dx,DWORD PTR ds:[rsi]
  415e89:	jb     0x415e8b
  415e8b:	add    BYTE PTR [rbx],ah
  415e8d:	add    al,BYTE PTR [rdi+0x65]
  415e90:	je     0x415edf
  415e92:	outs   dx,DWORD PTR ds:[rsi]
  415e93:	fs jne 0x415f02
  415e96:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  415ea0:	add    BYTE PTR [rax],al
  415ea2:	jae    0x415ea6
  415ea4:	rex.RXB
  415ea5:	gs je  0x415efb
  415ea8:	je     0x415f0b
  415eaa:	jb     0x415f20
  415eac:	jne    0x415f1e
  415eae:	rex.WB outs dx,BYTE PTR ds:[rsi]
  415eb0:	outs   dx,WORD PTR ds:[rsi]
  415eb2:	add    BYTE PTR [r10+0x74654702],cl
  415eb9:	push   rbx
  415eba:	jns    0x415f2f
  415ebc:	je     0x415f23
  415ebe:	ins    DWORD PTR es:[rdi],dx
  415ebf:	push   rsp
  415ec0:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  415ec7:	ins    BYTE PTR es:[rdi],dx
  415ec8:	gs push rsp
  415eca:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  415ed1:	gs je  0x415f28
  415ed4:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  415edb:	je     0x415edd
  415edd:	add    cl,bh
  415edf:	add    cl,BYTE PTR [rcx+0x6e]
  415ee2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  415eea:	rex.XB jb 0x415f56
  415eed:	je     0x415f58
  415eef:	movsxd esp,DWORD PTR [rcx+0x6c]
  415ef2:	push   rbx
  415ef3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  415ef8:	outs   dx,BYTE PTR ds:[rsi]
  415ef9:	add    BYTE PTR [rbx+0x3],cl
  415efc:	rex.WR
  415efd:	gs (bad) 
  415eff:	jbe    0x415f66
  415f01:	rex.XB jb 0x415f6d
  415f04:	je     0x415f6f
  415f06:	movsxd esp,DWORD PTR [rcx+0x6c]
  415f09:	push   rbx
  415f0a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  415f0f:	outs   dx,BYTE PTR ds:[rsi]
  415f10:	add    BYTE PTR [rax],al
  415f12:	mov    ebx,0x65755103
  415f17:	jb     0x415f92
  415f19:	push   rax
  415f1a:	gs jb  0x415f83
  415f1d:	outs   dx,DWORD PTR ds:[rsi]
  415f1e:	jb     0x415f8d
  415f20:	(bad)  
  415f21:	outs   dx,BYTE PTR ds:[rsi]
  415f22:	movsxd esp,DWORD PTR [rbp+0x43]
  415f25:	outs   dx,DWORD PTR ds:[rsi]
  415f26:	jne    0x415f96
  415f28:	je     0x415f8f
  415f2a:	jb     0x415f2c
  415f2c:	add    DWORD PTR [rdx+rdx*2],eax
  415f2f:	je     0x415f9d
  415f31:	rex.B
  415f32:	fs fs rex.RX jne 0x415fa5
  415f37:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  415f3b:	outs   dx,BYTE PTR ds:[rsi]
  415f3c:	push   rsp
  415f3d:	(bad)  
  415f3e:	(bad)  
  415f3f:	ins    BYTE PTR es:[rdi],dx
  415f40:	add    BYTE PTR gs:[rdx],al
  415f43:	add    al,0x52
  415f45:	je     0x415fb3
  415f47:	rex.XB (bad) 
  415f49:	jo     0x415fbf
  415f4b:	jne    0x415fbf
  415f4d:	rex.XB outs dx,DWORD PTR gs:[rsi]
  415f50:	outs   dx,BYTE PTR ds:[rsi]
  415f51:	je     0x415fb8
  415f53:	js     0x415fc9
  415f55:	add    BYTE PTR [rcx],cl
  415f57:	add    al,0x52
  415f59:	je     0x415fc7
  415f5b:	rex.WR outs dx,DWORD PTR ds:[rsi]
  415f5d:	outs   dx,DWORD PTR ds:[rsi]
  415f5e:	imul   esi,DWORD PTR [rbp+0x70],0x46
  415f62:	jne    0x415fd2
  415f64:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  415f68:	outs   dx,BYTE PTR ds:[rsi]
  415f69:	rex.RB outs dx,BYTE PTR ds:[rsi]
  415f6b:	je     0x415fdf
  415f6d:	jns    0x415f6f
  415f6f:	add    BYTE PTR [rax],dl
  415f71:	add    al,0x52
  415f73:	je     0x415fe1
  415f75:	push   rsi
  415f76:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  415f7d:	outs   dx,BYTE PTR ds:[rsi]
  415f7e:	ja     0x415fe9
  415f80:	outs   dx,BYTE PTR ds:[rsi]
  415f81:	add    BYTE PTR fs:[rax],al
  415f84:	lahf   
  415f85:	add    al,0x53
  415f87:	gs je  0x415fdf
  415f8a:	outs   dx,BYTE PTR ds:[rsi]
  415f8b:	push   0x6c646e61
  415f90:	gs fs rex.RB js 0x415ff8
  415f95:	gs jo  0x41600c
  415f98:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  415f9f:	gs jb  0x415fa2
  415fa2:	lods   al,BYTE PTR ds:[rsi]
  415fa3:	add    al,0x53
  415fa5:	ins    BYTE PTR es:[rdi],dx
  415fa6:	gs gs jo 0x415faa
  415faa:	mov    edx,0x72655404
  415faf:	ins    DWORD PTR es:[rdi],dx
  415fb0:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  415fb7:	outs   dx,DWORD PTR ds:[rsi]
  415fb8:	movsxd esp,DWORD PTR [rbp+0x73]
  415fbb:	jae    0x415fbd
  415fbd:	add    cl,al
  415fbf:	add    al,0x54
  415fc1:	ins    BYTE PTR es:[rdi],dx
  415fc2:	jae    0x41600b
  415fc4:	gs je  0x41601d
  415fc7:	(bad)  
  415fc8:	ins    BYTE PTR es:[rdi],dx
  415fc9:	jne    0x416030
  415fcb:	add    dh,cl
  415fcd:	add    al,0x55
  415fcf:	outs   dx,BYTE PTR ds:[rsi]
  415fd0:	push   0x6c646e61
  415fd5:	gs fs rex.RB js 0x41603d
  415fda:	gs jo  0x416051
  415fdd:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  415fe4:	gs jb  0x415fe7
  415fe7:	add    ah,ch
  415fe9:	add    al,0x56
  415feb:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  415ff2:	jb     0x416063
  415ff4:	je     0x41605b
  415ff6:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  415ffa:	out    dx,al
  415ffb:	add    al,0x56
  415ffd:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  416004:	jne    0x41606b
  416006:	jb     0x416081
  416008:	add    BYTE PTR [rax],al
  41600a:	(bad)  
  41600b:	add    BYTE PTR [rdi+0x5f],bl
  41600e:	rex.XB pop r15
  416010:	jae    0x416082
  416012:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  416016:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  41601d:	ins    BYTE PTR es:[rdi],dx
  41601e:	gs jb  0x416021
  416021:	add    BYTE PTR [rsi+0x0],al
  416024:	pop    rdi
  416025:	pop    rdi
  416026:	(bad)  
  416027:	jb     0x416090
  416029:	jbe    0x41602b
  41602b:	add    BYTE PTR [rsi+0x0],cl
  41602e:	pop    rdi
  41602f:	pop    rdi
  416030:	fs ins BYTE PTR es:[rdi],dx
  416032:	ins    BYTE PTR es:[rdi],dx
  416033:	outs   dx,DWORD PTR ds:[rsi]
  416034:	outs   dx,BYTE PTR ds:[rsi]
  416035:	gs js  0x4160a1
  416038:	je     0x41603a
  41603a:	push   rcx
  41603b:	add    BYTE PTR [rdi+0x5f],bl
  41603e:	addr32 gs je 0x4160af
  416042:	(bad)  
  416043:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  41604a:	push   rdx
  41604b:	add    BYTE PTR [rdi+0x5f],bl
  41604e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  416055:	add    BYTE PTR [rbx+0x0],dl
  416058:	pop    rdi
  416059:	pop    rdi
  41605a:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  416061:	movsxd eax,DWORD PTR [rax]
  416063:	add    BYTE PTR [rdx+0x0],bl
  416066:	pop    rdi
  416067:	pop    rdi
  416068:	ins    BYTE PTR es:[rdi],dx
  416069:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41606c:	jbe    0x4160cd
  41606e:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  416075:	add    BYTE PTR [rdi+0x5f],bl
  416078:	jae    0x4160df
  41607a:	je     0x4160db
  41607c:	(bad)  
  41607d:	jo     0x4160ef
  41607f:	pop    rdi
  416080:	je     0x4160fb
  416082:	jo     0x4160e9
  416084:	add    BYTE PTR [rax],al
  416086:	(bad)  
  416087:	add    BYTE PTR [rdi+0x5f],bl
  41608a:	jae    0x4160f1
  41608c:	je     0x416103
  41608e:	jae    0x4160f5
  416090:	jb     0x4160ff
  416092:	(bad)  
  416093:	je     0x4160fd
  416095:	gs jb  0x41610a
  416098:	add    BYTE PTR [rax],al
  41609a:	jno    0x41609c
  41609c:	pop    rdi
  41609d:	(bad)  
  41609e:	movsxd ebp,DWORD PTR [rbp+0x64]
  4160a1:	ins    BYTE PTR es:[rdi],dx
  4160a2:	outs   dx,BYTE PTR ds:[rsi]
  4160a3:	add    BYTE PTR [rax+0x0],bh
  4160a6:	pop    rdi
  4160a7:	(bad)  
  4160a8:	ins    DWORD PTR es:[rdi],dx
  4160a9:	jae    0x416112
  4160ab:	pop    rdi
  4160ac:	gs js  0x416118
  4160af:	je     0x4160b1
  4160b1:	add    BYTE PTR [rdx+0x65635f00],cl
  4160b7:	js     0x416122
  4160b9:	je     0x4160bb
  4160bb:	add    BYTE PTR [rdx+0x72655f00],bh
  4160c1:	jb     0x416131
  4160c3:	outs   dx,DWORD PTR ds:[rsi]
  4160c4:	add    BYTE PTR [rax],al
  4160c6:	ret    
  4160c7:	add    BYTE PTR [rdi+0x65],bl
  4160ca:	js     0x416135
  4160cc:	je     0x4160ce
  4160ce:	fiadd  DWORD PTR [rax]
  4160d0:	pop    rdi
  4160d1:	ins    WORD PTR es:[rdi],dx
  4160d3:	outs   dx,DWORD PTR ds:[rsi]
  4160d4:	fs add BYTE PTR gs:[rax],al
  4160d8:	sbb    al,BYTE PTR [rcx]
  4160da:	pop    rdi
  4160db:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4160e2:	ins    DWORD PTR es:[rdi],dx
  4160e3:	add    BYTE PTR [rax+0x6f6c5f01],al
  4160e9:	movsxd ebp,DWORD PTR [rbx+0x0]
  4160ec:	and    eax,0x6e6f5f02
  4160f1:	gs js  0x41615d
  4160f4:	je     0x4160f6
  4160f6:	pop    rcx
  4160f7:	add    bl,BYTE PTR [rdi+0x73]
  4160fa:	outs   dx,BYTE PTR ds:[rsi]
  4160fb:	jo     0x41616f
  4160fd:	imul   ebp,DWORD PTR [rsi+0x74],0x2630066
  416104:	pop    rdi
  416105:	jae    0x416175
  416107:	ja     0x416179
  416109:	jb     0x416174
  41610b:	outs   dx,BYTE PTR ds:[rsi]
  41610c:	je     0x416174
  41610e:	add    BYTE PTR [rax],al
  416110:	(bad)
  416114:	outs   dx,BYTE PTR ds:[rsi]
  416115:	ins    BYTE PTR es:[rdi],dx
  416116:	outs   dx,DWORD PTR ds:[rsi]
  416117:	movsxd ebp,DWORD PTR [rbx+0x0]
  41611a:	jg     0x41611f
  41611c:	(bad)  
  41611d:	(bad)  
  41611e:	outs   dx,DWORD PTR ds:[rsi]
  41611f:	jb     0x416195
  416121:	add    BYTE PTR [rax+0x6c616303],dl
  416127:	ins    BYTE PTR es:[rdi],dx
  416128:	outs   dx,DWORD PTR ds:[rsi]
  416129:	movsxd eax,DWORD PTR [rax]
  41612b:	add    BYTE PTR [rbp+0x69786503],bl
  416131:	je     0x416133
  416133:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  41613a:	jae    0x4161a4
  41613c:	add    BYTE PTR [rax],al
  41613e:	mov    al,0x3
  416140:	data16 jo 0x4161b5
  416143:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  41614a:	data16 jo 0x4161c2
  41614d:	je     0x4161b2
  41614f:	add    BYTE PTR [rbx+0x75706603],dh
  416155:	je     0x4161ca
  416157:	add    BYTE PTR [rdi+0x65726603],dh
  41615d:	add    BYTE PTR gs:[rax],al
  416160:	rol    BYTE PTR [rbx],0x66
  416163:	ja     0x4161d5
  416165:	jb     0x4161d0
  416167:	outs   dx,BYTE PTR ds:[rsi]
  416168:	je     0x4161d0
  41616a:	add    BYTE PTR [rax],al
  41616c:	ret    0x6603
  41616f:	ja     0x4161e3
  416171:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  416179:	gs je  0x4161e1
  41617c:	outs   dx,BYTE PTR ds:[rsi]
  41617d:	jbe    0x41617f
  41617f:	add    al,dl
  416181:	add    ebp,DWORD PTR [rcx+0x73]
  416184:	movsxd ebp,DWORD PTR [rsi+0x74]
  416187:	jb     0x4161f5
  416189:	add    dl,ch
  41618b:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  41618f:	(bad)  
  416190:	ins    BYTE PTR es:[rdi],dx
  416191:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  416195:	jbe    0x416197
  416197:	add    al,dh
  416199:	add    ebp,DWORD PTR [rbp+0x61]
  41619c:	ins    BYTE PTR es:[rdi],dx
  41619d:	ins    BYTE PTR es:[rdi],dx
  41619e:	outs   dx,DWORD PTR ds:[rsi]
  41619f:	movsxd eax,DWORD PTR [rax]
  4161a1:	add    al,bh
  4161a3:	add    ebp,DWORD PTR [rbp+0x65]
  4161a6:	ins    DWORD PTR es:[rdi],dx
  4161a7:	movsxd esi,DWORD PTR [rax+0x79]
  4161aa:	add    BYTE PTR [rax],al
  4161ac:	cli    
  4161ad:	add    ebp,DWORD PTR [rbp+0x65]
  4161b0:	ins    DWORD PTR es:[rdi],dx
  4161b1:	jae    0x416218
  4161b3:	je     0x4161b5
  4161b5:	add    BYTE PTR [rdx],cl
  4161b7:	add    al,0x72
  4161b9:	(bad)  
  4161ba:	imul   esi,DWORD PTR [rbx+0x65],0x73041600
  4161c1:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  4161c8:	and    eax,DWORD PTR [rbx+rsi*2]
  4161cb:	je     0x41623f
  4161cd:	movsxd ebp,DWORD PTR [rax+0x72]
  4161d0:	add    BYTE PTR [rax],al
  4161d2:	and    al,0x4
  4161d4:	jae    0x41624a
  4161d6:	jb     0x41623b
  4161d8:	ins    DWORD PTR es:[rdi],dx
  4161d9:	jo     0x4161db
  4161db:	add    BYTE PTR [rsi],ah
  4161dd:	add    al,0x73
  4161df:	je     0x416253
  4161e1:	movsxd esi,DWORD PTR [rax+0x79]
  4161e4:	add    BYTE PTR [rax],al
  4161e6:	sub    eax,DWORD PTR [rbx+rsi*2]
  4161e9:	je     0x41625d
  4161eb:	ins    BYTE PTR es:[rdi],dx
  4161ec:	outs   dx,BYTE PTR gs:[rsi]
  4161ee:	add    BYTE PTR [rax],al
  4161f0:	cs add al,0x73
  4161f3:	je     0x416267
  4161f5:	outs   dx,BYTE PTR ds:[rsi]
  4161f6:	movsxd ebp,DWORD PTR [rbp+0x70]
  4161f9:	add    BYTE PTR [rdi],ch
  4161fb:	add    al,0x73
  4161fd:	je     0x416271
  4161ff:	outs   dx,BYTE PTR ds:[rsi]
  416200:	movsxd esi,DWORD PTR [rax+0x79]
  416203:	add    BYTE PTR [rdx],dh
  416205:	add    al,0x73
  416207:	je     0x41627b
  416209:	jb     0x41626e
  41620b:	push   0x4360072
  416210:	jae    0x416286
  416212:	jb     0x416288
  416214:	outs   dx,DWORD PTR ds:[rsi]
  416215:	imul   eax,DWORD PTR [rax],0x0
  416218:	cmp    BYTE PTR [rbx+rsi*2],al
  41621b:	je     0x41628f
  41621d:	je     0x41628e
  41621f:	ins    BYTE PTR es:[rdi],dx
  416220:	add    BYTE PTR [rax],al
  416222:	rex.WRX add al,0x76
  416225:	data16 jo 0x41629a
  416228:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  41622f:	add    al,0x77
  416231:	movsxd esi,DWORD PTR [rbx+0x63]
  416234:	jo     0x4162af
  416236:	add    BYTE PTR [rax],al
  416238:	mov    esi,0x74735f04
  41623d:	jb     0x4162a3
  41623f:	jne    0x4162b1
  416241:	add    al,dh
  416243:	add    DWORD PTR [rbp+0x65],ecx
  416246:	jae    0x4162bb
  416248:	(bad)  
  416249:	rex.X outs dx,DWORD PTR gs:[esi]
  41624d:	js     0x4162a6
  41624f:	add    BYTE PTR [rax],al
  416251:	push   rax
  416252:	add    DWORD PTR [rax],eax
  416254:	add    BYTE PTR [rax+0x1],dl
  416257:	add    BYTE PTR [rax],al
  416259:	push   rax
  41625a:	add    DWORD PTR [rax],eax
  41625c:	add    BYTE PTR [rax+0x1],dl
  41625f:	add    BYTE PTR [rax],al
  416261:	push   rax
  416262:	add    DWORD PTR [rax],eax
  416264:	add    BYTE PTR [rax+0x1],dl
  416267:	add    BYTE PTR [rax],al
  416269:	push   rax
  41626a:	add    DWORD PTR [rax],eax
  41626c:	add    BYTE PTR [rax+0x1],dl
  41626f:	add    BYTE PTR [rax],al
  416271:	push   rax
  416272:	add    DWORD PTR [rax],eax
  416274:	add    BYTE PTR [rax+0x1],dl
  416277:	add    BYTE PTR [rax],al
  416279:	push   rax
  41627a:	add    DWORD PTR [rax],eax
  41627c:	add    BYTE PTR [rax+0x1],dl
  41627f:	add    BYTE PTR [rax],al
  416281:	push   rax
  416282:	add    DWORD PTR [rax],eax
  416284:	add    BYTE PTR [rax+0x1],dl
  416287:	add    BYTE PTR [rax],al
  416289:	push   rax
  41628a:	add    DWORD PTR [rax],eax
  41628c:	add    BYTE PTR [rax+0x1],dl
  41628f:	add    BYTE PTR [rax],al
  416291:	push   rax
  416292:	add    DWORD PTR [rax],eax
  416294:	add    BYTE PTR [rax+0x1],dl
  416297:	add    BYTE PTR [rax],al
  416299:	push   rax
  41629a:	add    DWORD PTR [rax],eax
  41629c:	add    BYTE PTR [rax+0x1],dl
  41629f:	add    BYTE PTR [rax],al
  4162a1:	push   rax
  4162a2:	add    DWORD PTR [rax],eax
  4162a4:	add    BYTE PTR [rax+0x1],dl
  4162a7:	add    BYTE PTR [rax],al
  4162a9:	push   rax
  4162aa:	add    DWORD PTR [rax],eax
  4162ac:	add    BYTE PTR [rax+0x1],dl
  4162af:	add    BYTE PTR [rax],al
  4162b1:	push   rax
  4162b2:	add    DWORD PTR [rax],eax
  4162b4:	add    BYTE PTR [rax+0x1],dl
  4162b7:	add    BYTE PTR [rax],al
  4162b9:	push   rax
  4162ba:	add    DWORD PTR [rax],eax
  4162bc:	add    BYTE PTR [rax+0x1],dl
  4162bf:	add    BYTE PTR [rax],al
  4162c1:	push   rax
  4162c2:	add    DWORD PTR [rax],eax
  4162c4:	add    BYTE PTR [rax+0x1],dl
  4162c7:	add    BYTE PTR [rax],al
  4162c9:	push   rax
  4162ca:	add    DWORD PTR [rax],eax
  4162cc:	add    BYTE PTR [rax+0x1],dl
  4162cf:	add    BYTE PTR [rax],al
  4162d1:	push   rax
  4162d2:	add    DWORD PTR [rax],eax
  4162d4:	add    BYTE PTR [rax+0x1],dl
  4162d7:	add    BYTE PTR [rax],al
  4162d9:	push   rax
  4162da:	add    DWORD PTR [rax],eax
  4162dc:	add    BYTE PTR [rax+0x1],dl
  4162df:	add    BYTE PTR [rax],al
  4162e1:	push   rax
  4162e2:	add    DWORD PTR [rax],eax
  4162e4:	add    BYTE PTR [rax+0x1],dl
  4162e7:	add    BYTE PTR [rax],al
  4162e9:	push   rax
  4162ea:	add    DWORD PTR [rax],eax
  4162ec:	add    BYTE PTR [rax+0x1],dl
  4162ef:	add    BYTE PTR [rax],al
  4162f1:	push   rax
  4162f2:	add    DWORD PTR [rax],eax
  4162f4:	add    BYTE PTR [rax+0x1],dl
  4162f7:	add    BYTE PTR [rax],al
  4162f9:	push   rax
  4162fa:	add    DWORD PTR [rax],eax
  4162fc:	add    BYTE PTR [rax+0x1],dl
  4162ff:	add    BYTE PTR [rax],al
  416301:	push   rax
  416302:	add    DWORD PTR [rax],eax
  416304:	add    BYTE PTR [rax+0x1],dl
  416307:	add    BYTE PTR [rax],al
  416309:	push   rax
  41630a:	add    DWORD PTR [rax],eax
  41630c:	add    BYTE PTR [rax+0x1],dl
  41630f:	add    BYTE PTR [rax],al
  416311:	push   rax
  416312:	add    DWORD PTR [rax],eax
  416314:	add    BYTE PTR [rax+0x1],dl
  416317:	add    BYTE PTR [rax],al
  416319:	push   rax
  41631a:	add    DWORD PTR [rax],eax
  41631c:	add    BYTE PTR [rax+0x1],dl
  41631f:	add    BYTE PTR [rax],al
  416321:	push   rax
  416322:	add    DWORD PTR [rax],eax
  416324:	add    BYTE PTR [rax+0x1],dl
  416327:	add    BYTE PTR [rax],al
  416329:	push   rax
  41632a:	add    DWORD PTR [rax],eax
  41632c:	add    BYTE PTR [rax+0x1],dl
  41632f:	add    BYTE PTR [rax],al
  416331:	push   rax
  416332:	add    DWORD PTR [rax],eax
  416334:	add    BYTE PTR [rax+0x1],dl
  416337:	add    BYTE PTR [rax],al
  416339:	push   rax
  41633a:	add    DWORD PTR [rax],eax
  41633c:	add    BYTE PTR [rax+0x1],dl
  41633f:	add    BYTE PTR [rax],al
  416341:	push   rax
  416342:	add    DWORD PTR [rax],eax
  416344:	add    BYTE PTR [rax+0x1],dl
  416347:	add    BYTE PTR [rax],al
  416349:	push   rax
  41634a:	add    DWORD PTR [rax],eax
  41634c:	add    BYTE PTR [rax+0x1],dl
  41634f:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  416353:	outs   dx,BYTE PTR ds:[rsi]
  416354:	gs je  0x4163ba
  416357:	fs sub ax,0x2e37
  41635c:	fs ins BYTE PTR es:[rdi],dx
  41635e:	ins    BYTE PTR es:[rdi],dx
  41635f:	add    BYTE PTR [rax+rdx*2],dl
  416362:	add    DWORD PTR [rax],eax
  416364:	adc    al,0x50
  416366:	add    DWORD PTR [rax],eax
  416368:	adc    al,0x50
  41636a:	add    DWORD PTR [rax],eax
  41636c:	adc    al,0x50
  41636e:	add    DWORD PTR [rax],eax
  416370:	adc    al,0x50
  416372:	add    DWORD PTR [rax],eax
  416374:	adc    al,0x50
  416376:	add    DWORD PTR [rax],eax
  416378:	adc    al,0x50
  41637a:	add    DWORD PTR [rax],eax
  41637c:	adc    al,0x50
  41637e:	add    DWORD PTR [rax],eax
  416380:	adc    al,0x50
  416382:	add    DWORD PTR [rax],eax
  416384:	adc    al,0x50
  416386:	add    DWORD PTR [rax],eax
  416388:	adc    al,0x50
  41638a:	add    DWORD PTR [rax],eax
  41638c:	adc    al,0x50
  41638e:	add    DWORD PTR [rax],eax
  416390:	adc    al,0x50
  416392:	add    DWORD PTR [rax],eax
  416394:	adc    al,0x50
  416396:	add    DWORD PTR [rax],eax
  416398:	adc    al,0x50
  41639a:	add    DWORD PTR [rax],eax
  41639c:	adc    al,0x50
  41639e:	add    DWORD PTR [rax],eax
  4163a0:	adc    al,0x50
  4163a2:	add    DWORD PTR [rax],eax
  4163a4:	adc    al,0x50
  4163a6:	add    DWORD PTR [rax],eax
  4163a8:	adc    al,0x50
  4163aa:	add    DWORD PTR [rax],eax
  4163ac:	adc    al,0x50
  4163ae:	add    DWORD PTR [rax],eax
  4163b0:	adc    al,0x50
  4163b2:	add    DWORD PTR [rax],eax
  4163b4:	adc    al,0x50
  4163b6:	add    DWORD PTR [rax],eax
  4163b8:	adc    al,0x50
  4163ba:	add    DWORD PTR [rax],eax
  4163bc:	adc    al,0x50
  4163be:	add    DWORD PTR [rax],eax
  4163c0:	rex.WXB
  4163c1:	rex.RB push r10
  4163c3:	rex.WRX
  4163c4:	rex.RB
  4163c5:	xor    r14,QWORD PTR [rdx]
  4163c8:	cs fs ins BYTE PTR es:[rdi],dx
  4163cb:	ins    BYTE PTR es:[rdi],dx
  4163cc:	add    BYTE PTR [rax],al
  4163ce:	add    BYTE PTR [rax],al
  4163d0:	sub    BYTE PTR [rax+0x1],dl
  4163d3:	add    BYTE PTR [rax],ch
  4163d5:	push   rax
  4163d6:	add    DWORD PTR [rax],eax
  4163d8:	sub    BYTE PTR [rax+0x1],dl
  4163db:	add    BYTE PTR [rax],ch
  4163dd:	push   rax
  4163de:	add    DWORD PTR [rax],eax
  4163e0:	sub    BYTE PTR [rax+0x1],dl
  4163e3:	add    BYTE PTR [rax],ch
  4163e5:	push   rax
  4163e6:	add    DWORD PTR [rax],eax
  4163e8:	sub    BYTE PTR [rax+0x1],dl
  4163eb:	add    BYTE PTR [rax],ch
  4163ed:	push   rax
  4163ee:	add    DWORD PTR [rax],eax
  4163f0:	sub    BYTE PTR [rax+0x1],dl
  4163f3:	add    BYTE PTR [rax],ch
  4163f5:	push   rax
  4163f6:	add    DWORD PTR [rax],eax
  4163f8:	sub    BYTE PTR [rax+0x1],dl
  4163fb:	add    BYTE PTR [rax],ch
  4163fd:	push   rax
  4163fe:	add    DWORD PTR [rax],eax
  416400:	sub    BYTE PTR [rax+0x1],dl
  416403:	add    BYTE PTR [rax],ch
  416405:	push   rax
  416406:	add    DWORD PTR [rax],eax
  416408:	sub    BYTE PTR [rax+0x1],dl
  41640b:	add    BYTE PTR [rax],ch
  41640d:	push   rax
  41640e:	add    DWORD PTR [rax],eax
  416410:	sub    BYTE PTR [rax+0x1],dl
  416413:	add    BYTE PTR [rax],ch
  416415:	push   rax
  416416:	add    DWORD PTR [rax],eax
  416418:	sub    BYTE PTR [rax+0x1],dl
  41641b:	add    BYTE PTR [rax],ch
  41641d:	push   rax
  41641e:	add    DWORD PTR [rax],eax
  416420:	sub    BYTE PTR [rax+0x1],dl
  416423:	add    BYTE PTR [rax],ch
  416425:	push   rax
  416426:	add    DWORD PTR [rax],eax
  416428:	sub    BYTE PTR [rax+0x1],dl
  41642b:	add    BYTE PTR [rax],ch
  41642d:	push   rax
  41642e:	add    DWORD PTR [rax],eax
  416430:	sub    BYTE PTR [rax+0x1],dl
  416433:	add    BYTE PTR [rax],ch
  416435:	push   rax
  416436:	add    DWORD PTR [rax],eax
  416438:	sub    BYTE PTR [rax+0x1],dl
  41643b:	add    BYTE PTR [rax],ch
  41643d:	push   rax
  41643e:	add    DWORD PTR [rax],eax
  416440:	sub    BYTE PTR [rax+0x1],dl
  416443:	add    BYTE PTR [rax],ch
  416445:	push   rax
  416446:	add    DWORD PTR [rax],eax
  416448:	sub    BYTE PTR [rax+0x1],dl
  41644b:	add    BYTE PTR [rax],ch
  41644d:	push   rax
  41644e:	add    DWORD PTR [rax],eax
  416450:	sub    BYTE PTR [rax+0x1],dl
  416453:	add    BYTE PTR [rax],ch
  416455:	push   rax
  416456:	add    DWORD PTR [rax],eax
  416458:	sub    BYTE PTR [rax+0x1],dl
  41645b:	add    BYTE PTR [rax],ch
  41645d:	push   rax
  41645e:	add    DWORD PTR [rax],eax
  416460:	sub    BYTE PTR [rax+0x1],dl
  416463:	add    BYTE PTR [rax],ch
  416465:	push   rax
  416466:	add    DWORD PTR [rax],eax
  416468:	sub    BYTE PTR [rax+0x1],dl
  41646b:	add    BYTE PTR [rax],ch
  41646d:	push   rax
  41646e:	add    DWORD PTR [rax],eax
  416470:	sub    BYTE PTR [rax+0x1],dl
  416473:	add    BYTE PTR [rax],ch
  416475:	push   rax
  416476:	add    DWORD PTR [rax],eax
  416478:	sub    BYTE PTR [rax+0x1],dl
  41647b:	add    BYTE PTR [rax],ch
  41647d:	push   rax
  41647e:	add    DWORD PTR [rax],eax
  416480:	sub    BYTE PTR [rax+0x1],dl
  416483:	add    BYTE PTR [rax],ch
  416485:	push   rax
  416486:	add    DWORD PTR [rax],eax
  416488:	sub    BYTE PTR [rax+0x1],dl
  41648b:	add    BYTE PTR [rax],ch
  41648d:	push   rax
  41648e:	add    DWORD PTR [rax],eax
  416490:	sub    BYTE PTR [rax+0x1],dl
  416493:	add    BYTE PTR [rax],ch
  416495:	push   rax
  416496:	add    DWORD PTR [rax],eax
  416498:	sub    BYTE PTR [rax+0x1],dl
  41649b:	add    BYTE PTR [rbp+0x73],ch
  41649e:	jbe    0x416503
  4164a0:	jb     0x416516
  4164a2:	cs fs ins BYTE PTR es:[rdi],dx
  4164a5:	ins    BYTE PTR es:[rdi],dx
  4164a6:	add    BYTE PTR [rax],al
  4164a8:	cmp    al,0x50
  4164aa:	add    DWORD PTR [rax],eax
  4164ac:	push   rbp
  4164ad:	push   rbx
  4164ae:	rex.RB push r10
  4164b0:	xor    esi,DWORD PTR [rdx]
  4164b2:	cs fs ins BYTE PTR es:[rdi],dx
  4164b5:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000417000 <.CRT>:
	...
  417008:	(bad)  
  417009:	adc    DWORD PTR [rax+0x0],eax
	...
  417020:	adc    BYTE PTR [rax],dl
  417022:	add    BYTE PTR [rax],al
  417025:	add    BYTE PTR [rax],al
  417027:	add    BYTE PTR [rax+0x4067],al
	...
  41703d:	add    BYTE PTR [rax],al
  41703f:	add    BYTE PTR [rax+0x4069],dh
  417045:	add    BYTE PTR [rax],al
  417047:	add    BYTE PTR [rax+0x4069],al
	...

Disassembly of section .tls:

0000000000418000 <.tls>:
	...
  418020:	add    BYTE PTR [rax+0x41],al
  418026:	add    BYTE PTR [rax],al
  418028:	(bad)  
  418029:	add    BYTE PTR [rcx+0x0],0x0
  41802d:	add    BYTE PTR [rax],al
  41802f:	add    BYTE PTR [rdi+rsi*1],bl
  418032:	add    BYTE PTR [r8],al
  418035:	add    BYTE PTR [rax],al
  418037:	add    BYTE PTR [rax+0x70],al
  41803a:	add    BYTE PTR [r8],al
	...
