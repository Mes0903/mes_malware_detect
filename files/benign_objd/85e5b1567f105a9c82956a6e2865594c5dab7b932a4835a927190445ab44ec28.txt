
85e5b1567f105a9c82956a6e2865594c5dab7b932a4835a927190445ab44ec28.exe:     file format pei-i386


Disassembly of section .text:

10001000 <.text>:
10001000:	xchg   esi,eax
10001001:	mov    eax,0xb8860000
10001006:	add    BYTE PTR [eax],al
10001008:	js     0x10000fc2
1000100a:	add    BYTE PTR [eax],al
1000100c:	add    BYTE PTR [eax],al
1000100e:	add    BYTE PTR [eax],al
10001010:	jb     0x10000fcc
10001012:	add    BYTE PTR [eax],al
10001014:	mov    BYTE PTR [edx-0x456c0000],bh
1000101a:	add    BYTE PTR [eax],al
1000101c:	mov    ds:0xb40000ba,al
10001021:	mov    edx,0xbac60000
10001026:	add    BYTE PTR [eax],al
10001028:	fdivr  QWORD PTR [edx-0x450a0000]
1000102e:	add    BYTE PTR [eax],al
10001030:	adc    BYTE PTR [ebx-0x44da0000],bh
10001036:	add    BYTE PTR [eax],al
10001038:	cs mov ebx,0xbb4c0000
1000103e:	add    BYTE PTR [eax],al
10001040:	pop    esp
10001041:	mov    ebx,0xb8b40000
10001046:	add    BYTE PTR [eax],al
10001048:	ret    0xb8
1000104b:	add    ah,dl
1000104d:	mov    eax,0xb8ea0000
10001052:	add    BYTE PTR [eax],al
10001054:	idiv   BYTE PTR [eax-0x46fa0000]
1000105a:	add    BYTE PTR [eax],al
1000105c:	adc    al,0xb9
1000105e:	add    BYTE PTR [eax],al
10001060:	xor    bh,BYTE PTR [ecx-0x46be0000]
10001066:	add    BYTE PTR [eax],al
10001068:	push   edx
10001069:	mov    ecx,0xb9660000
1000106e:	add    BYTE PTR [eax],al
10001070:	jle    0x1000102b
10001072:	add    BYTE PTR [eax],al
10001074:	xchg   esi,eax
10001075:	mov    ecx,0xb9a60000
1000107a:	add    BYTE PTR [eax],al
1000107c:	mov    esp,0xc80000b9
10001081:	mov    ecx,0xb9de0000
10001086:	add    BYTE PTR [eax],al
10001088:	jmp    0xb9:0xfe0000b9
1000108f:	add    BYTE PTR [edx],dl
10001091:	mov    edx,0xba240000
10001096:	add    BYTE PTR [eax],al
10001098:	ss mov edx,0xba4c0000
1000109e:	add    BYTE PTR [eax],al
100010a0:	bound  edi,QWORD PTR [edx-0x44880000]
100010a6:	add    BYTE PTR [eax],al
100010a8:	add    BYTE PTR [eax],al
100010aa:	add    BYTE PTR [eax],al
100010ac:	inc    edx
100010ad:	mov    eax,0xb82c0000
100010b2:	add    BYTE PTR [eax],al
100010b4:	sbb    al,0xb8
100010b6:	add    BYTE PTR [eax],al
100010b8:	or     bh,BYTE PTR [eax-0x48080000]
100010be:	add    BYTE PTR [eax],al
100010c0:	out    dx,al
100010c1:	mov    bh,0x0
100010c3:	add    dh,ah
100010c5:	mov    bh,0x0
100010c7:	add    al,bl
100010c9:	mov    bh,0x0
100010cb:	add    dh,cl
100010cd:	mov    bh,0x0
100010cf:	add    BYTE PTR [edx-0x5fffff49],bh
100010d5:	mov    bh,0x0
100010d7:	add    BYTE PTR [edx+0x700000b7],al
100010dd:	mov    bh,0x0
100010df:	add    BYTE PTR [edx-0x49],ah
100010e2:	add    BYTE PTR [eax],al
100010e4:	push   edx
100010e5:	mov    bh,0x0
100010e7:	add    BYTE PTR [edx-0x49],al
100010ea:	add    BYTE PTR [eax],al
100010ec:	cs mov bh,0x0
100010ef:	add    BYTE PTR [eax],bl
100010f1:	mov    bh,0x0
100010f3:	add    BYTE PTR [edx],cl
100010f5:	mov    bh,0x0
100010f7:	add    dh,bh
100010f9:	mov    dh,0x0
100010fb:	add    al,dh
100010fd:	mov    dh,0x0
100010ff:	add    dl,ah
10001101:	mov    dh,0x0
10001103:	add    dl,bl
10001105:	mov    dh,0x0
10001107:	add    al,dl
10001109:	mov    dh,0x0
1000110b:	add    BYTE PTR [esi-0x4fffff4a],bh
10001111:	mov    dh,0x0
10001113:	add    BYTE PTR [edx-0x67ffff4a],ah
10001119:	mov    dh,0x0
1000111b:	add    BYTE PTR [esi+esi*4-0x497e0000],cl
10001122:	add    BYTE PTR [eax],al
10001124:	js     0x100010dc
10001126:	add    BYTE PTR [eax],al
10001128:	bound  esi,QWORD PTR [esi-0x49aa0000]
1000112e:	add    BYTE PTR [eax],al
10001130:	dec    esp
10001131:	mov    dh,0x0
10001133:	add    BYTE PTR [edx-0x4a],al
10001136:	add    BYTE PTR [eax],al
10001138:	xor    dh,BYTE PTR [esi-0x49da0000]
1000113e:	add    BYTE PTR [eax],al
10001140:	push   ss
10001141:	mov    dh,0x0
10001143:	add    BYTE PTR [eax],al
10001145:	mov    dh,0x0
10001147:	add    ah,dh
10001149:	mov    ch,0x0
1000114b:	add    dh,ah
1000114d:	mov    ch,0x0
1000114f:	add    dl,bl
10001151:	mov    ch,0x0
10001153:	add    dl,dl
10001155:	mov    ch,0x0
10001157:	add    dh,al
10001159:	mov    ch,0x0
1000115b:	add    BYTE PTR [ebp+esi*4+0x0],bh
10001162:	add    BYTE PTR [eax],al
10001164:	call   0xbb:0xa80000bb
1000116b:	add    BYTE PTR [esi-0x3bffff45],dh
10001171:	mov    ebx,0x0
10001176:	add    BYTE PTR [eax],al
10001178:	mov    ds:0x800000b5,al
1000117d:	mov    ch,0x0
	...
10001187:	add    BYTE PTR [edx-0x69],bh
1000118a:	add    BYTE PTR [eax],dl
1000118c:	xchg   esi,eax
1000118d:	test   eax,0x1000
10001192:	add    BYTE PTR [eax],al
10001194:	add    BYTE PTR [eax],al
10001196:	add    BYTE PTR [eax],al
10001198:	cmp    ebx,DWORD PTR [ecx-0x62def000]
1000119e:	add    BYTE PTR [eax],dl
	...
100011b4:	cli    
100011b5:	cmc    
100011b6:	dec    edx
100011b7:	push   ebp
100011b8:	add    BYTE PTR [eax],al
100011ba:	add    BYTE PTR [eax],al
100011bc:	add    al,BYTE PTR [eax]
100011be:	add    BYTE PTR [eax],al
100011c0:	add    BYTE PTR es:[eax],al
100011c3:	add    BYTE PTR [eax-0x67ffffcf],bl
100011c9:	and    eax,0xa06e0000
100011ce:	icebp  
100011cf:	nop
100011d0:	adc    dh,BYTE PTR [edi+0x62]
100011d3:	inc    edi
100011d4:	xchg   BYTE PTR [ebp+0x6bba5e7a],dh
100011da:	fild   DWORD PTR [edx]
100011dc:	ins    BYTE PTR es:[edi],dx
100011dd:	mov    al,ds:0x771290f1
100011e2:	bound  eax,QWORD PTR [edi-0x7a]
100011e5:	mov    ch,0x7a
100011e7:	pop    esi
100011e8:	mov    edx,0x6102db6b
100011ed:	cmp    esi,DWORD PTR [ecx+0x17]
100011f0:	lahf   
100011f1:	mov    ch,0x13
100011f3:	dec    esi
100011f4:	mov    edx,0x3d6291af
100011f9:	enter  0xc0ad,0x77
100011fd:	add    BYTE PTR [ebx+0x0],ch
10001200:	jae    0x10001202
10001202:	add    BYTE PTR [eax],al
10001204:	xor    al,BYTE PTR [eax]
10001206:	add    BYTE PTR cs:[eax],dh
10001209:	add    BYTE PTR [esi],ch
1000120b:	add    BYTE PTR ds:0x37003000,dh
10001211:	add    BYTE PTR [edx],dh
10001213:	add    BYTE PTR [edi],dh
10001215:	add    BYTE PTR [esi],ch
10001217:	add    BYTE PTR [eax],bh
10001219:	add    BYTE PTR [esi],dh
1000121b:	add    BYTE PTR [esi],dh
1000121d:	add    BYTE PTR [edx],dh
1000121f:	add    BYTE PTR [eax],al
10001221:	add    BYTE PTR [eax],al
10001223:	add    BYTE PTR ds:0xa00,cl
10001229:	add    BYTE PTR [eax],al
1000122b:	add    BYTE PTR [edi],bh
1000122d:	add    BYTE PTR [eax],al
1000122f:	add    BYTE PTR [eax+0x0],ch
10001232:	add    BYTE PTR gs:[eax+eax*1+0x70],ch
10001237:	add    BYTE PTR [eax],al
10001239:	add    BYTE PTR [eax],al
1000123b:	add    BYTE PTR [ecx+0x0],ah
1000123e:	arpl   WORD PTR [eax],ax
10001240:	je     0x10001242
10001242:	imul   eax,DWORD PTR [eax],0x610076
10001248:	je     0x1000124a
1000124a:	add    BYTE PTR gs:[eax],al
1000124d:	add    BYTE PTR [eax],al
1000124f:	add    BYTE PTR [ebp+0x0],ch
10001252:	popa   
10001253:	add    BYTE PTR [esi+0x0],ch
10001256:	imul   eax,DWORD PTR [eax],0x650066
1000125c:	jae    0x1000125e
1000125e:	je     0x10001260
10001260:	jae    0x10001262
10001262:	add    BYTE PTR [eax],al
10001264:	outs   dx,BYTE PTR ds:[esi]
10001265:	add    BYTE PTR [edi+0x0],ch
10001268:	ins    BYTE PTR es:[edi],dx
10001269:	add    BYTE PTR [edi+0x0],ch
1000126c:	add    BYTE PTR [bx+0x0],ch
10001270:	add    BYTE PTR [eax],al
10001272:	add    BYTE PTR [eax],al
10001274:	jo     0x10001276
10001276:	popa   
10001277:	add    BYTE PTR [edx+0x0],dh
1000127a:	popa   
1000127b:	add    BYTE PTR [ebp+0x0],ch
1000127e:	add    BYTE PTR gs:[eax+eax*1+0x65],dh
10001283:	add    BYTE PTR [edx+0x0],dh
10001286:	jae    0x10001288
10001288:	add    BYTE PTR [eax],al
1000128a:	add    BYTE PTR [eax],al
1000128c:	jae    0x1000128e
1000128e:	imul   eax,DWORD PTR [eax],0x65006c
10001294:	outs   dx,BYTE PTR ds:[esi]
10001295:	add    BYTE PTR [eax+eax*1+0x0],dh
10001299:	add    BYTE PTR [eax],al
1000129b:	add    BYTE PTR [edi+ebp*2+0x61],cl
1000129f:	fs push ebx
100012a1:	je     0x10001315
100012a3:	imul   ebp,DWORD PTR [esi+0x67],0x4352
100012aa:	add    BYTE PTR [eax],al
100012ac:	ins    DWORD PTR es:[edi],dx
100012ad:	add    BYTE PTR [ebx+0x0],dh
100012b0:	arpl   WORD PTR [eax],ax
100012b2:	outs   dx,DWORD PTR ds:[esi]
100012b3:	add    BYTE PTR [edx+0x0],dh
100012b6:	add    BYTE PTR gs:[ebp+0x0],ah
100012ba:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
100012bf:	add    BYTE PTR [eax+eax*1+0x0],ch
100012c3:	add    BYTE PTR ds:0x583830,ah
100012c9:	add    BYTE PTR [eax],al
100012cb:	add    BYTE PTR [eax],al
100012cd:	add    BYTE PTR [eax],al
100012cf:	add    BYTE PTR [ebp+0x0],dl
100012d2:	outs   dx,BYTE PTR ds:[esi]
100012d3:	add    BYTE PTR [ecx+0x0],ah
100012d6:	bound  eax,QWORD PTR [eax]
100012d8:	ins    BYTE PTR es:[edi],dx
100012d9:	add    BYTE PTR [ebp+0x0],ah
100012dc:	and    BYTE PTR [eax],al
100012de:	je     0x100012e0
100012e0:	outs   dx,DWORD PTR ds:[esi]
100012e1:	add    BYTE PTR [eax],ah
100012e3:	add    BYTE PTR [esi+0x0],ah
100012e6:	outs   dx,DWORD PTR ds:[esi]
100012e7:	add    BYTE PTR [edx+0x0],dh
100012ea:	ins    DWORD PTR es:[edi],dx
100012eb:	add    BYTE PTR [ecx+0x0],ah
100012ee:	je     0x100012f0
100012f0:	and    BYTE PTR [eax],al
100012f2:	add    BYTE PTR gs:[edx+0x0],dh
100012f6:	jb     0x100012f8
100012f8:	outs   dx,DWORD PTR ds:[esi]
100012f9:	add    BYTE PTR [edx+0x0],dh
100012fc:	and    BYTE PTR [eax],al
100012fe:	ins    DWORD PTR es:[edi],dx
100012ff:	add    BYTE PTR [ebp+0x0],ah
10001302:	jae    0x10001304
10001304:	jae    0x10001306
10001306:	popa   
10001307:	add    BYTE PTR [edi+0x0],ah
1000130a:	add    BYTE PTR gs:[eax],ah
1000130d:	add    BYTE PTR [eax],al
1000130f:	add    BYTE PTR [ebp-0x39],cl
10001312:	inc    eax
10001313:	jmp    0x26bb:0x45614f65
1000131a:	bound  esi,QWORD PTR gs:[ecx]
1000131d:	enter  0x7f96,0x0
10001321:	add    BYTE PTR [eax],al
10001323:	add    BYTE PTR [eax],al
10001325:	add    BYTE PTR [eax],al
10001327:	add    BYTE PTR [ebp+0x73],ch
1000132a:	arpl   WORD PTR [edi+0x72],bp
1000132d:	ja     0x1000139a
1000132f:	jae    0x1000135f
10001331:	fs ins BYTE PTR es:[edi],dx
10001333:	ins    BYTE PTR es:[edi],dx
10001334:	add    BYTE PTR [eax],al
10001336:	add    BYTE PTR [eax],al
10001338:	inc    edi
10001339:	gs je  0x1000137f
1000133c:	dec    esp
1000133d:	push   edx
1000133e:	inc    esi
1000133f:	jne    0x100013af
10001341:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
10001345:	outs   dx,BYTE PTR ds:[esi]
10001346:	add    BYTE PTR [eax],al
10001348:	ins    DWORD PTR es:[edi],dx
10001349:	add    BYTE PTR [ebx+0x0],dh
1000134c:	arpl   WORD PTR [eax],ax
1000134e:	outs   dx,DWORD PTR ds:[esi]
1000134f:	add    BYTE PTR [edx+0x0],dh
10001352:	ja     0x10001354
10001354:	imul   eax,DWORD PTR [eax],0x73
10001357:	add    BYTE PTR [esi],ch
10001359:	add    BYTE PTR [eax+eax*1+0x6c],ah
1000135d:	add    BYTE PTR [eax+eax*1+0x0],ch
10001361:	add    BYTE PTR [eax],al
10001363:	add    BYTE PTR [edi+ebp*2+0x61],cl
10001367:	fs dec esp
10001369:	imul   esp,DWORD PTR [edx+0x72],0x53797261
10001370:	push   0x49006d69
10001375:	inc    ebp
10001376:	inc    ebp
10001377:	add    BYTE PTR [ebp+0x45],al
1000137a:	dec    eax
1000137b:	gs popa 
1000137d:	jo     0x100013c0
1000137f:	ins    BYTE PTR es:[edi],dx
10001380:	ins    BYTE PTR es:[edi],dx
10001381:	outs   dx,DWORD PTR ds:[esi]
10001382:	arpl   WORD PTR [ecx+0x6e],cx
10001385:	push   eax
10001386:	jb     0x100013f7
10001388:	arpl   WORD PTR [ebp+0x73],sp
1000138b:	jae    0x100013d5
1000138d:	gs popa 
1000138f:	jo     0x10001391
10001391:	add    BYTE PTR [eax],al
10001393:	add    BYTE PTR [ebp+0x45],al
10001396:	dec    eax
10001397:	gs popa 
10001399:	jo     0x100013e1
1000139b:	jb     0x10001402
1000139d:	gs dec ecx
1000139f:	outs   dx,BYTE PTR ds:[esi]
100013a0:	push   eax
100013a1:	jb     0x10001412
100013a3:	arpl   WORD PTR [ebp+0x73],sp
100013a6:	jae    0x100013f0
100013a8:	gs popa 
100013aa:	jo     0x100013ac
100013ac:	push   ebx
100013ad:	dec    edi
100013ae:	inc    esi
100013af:	push   esp
100013b0:	push   edi
100013b1:	inc    ecx
100013b2:	push   edx
100013b3:	inc    ebp
100013b4:	add    BYTE PTR [eax],al
100013b6:	add    BYTE PTR [eax],al
100013b8:	push   ebx
100013b9:	add    BYTE PTR [edi+0x0],cl
100013bc:	inc    esi
100013bd:	add    BYTE PTR [eax+eax*1+0x57],dl
100013c1:	add    BYTE PTR [ecx+0x0],al
100013c4:	push   edx
100013c5:	add    BYTE PTR [ebp+0x0],al
100013c8:	add    BYTE PTR [eax],al
100013ca:	add    BYTE PTR [eax],al
100013cc:	inc    ecx
100013cd:	add    BYTE PTR [eax],al
100013cf:	add    BYTE PTR [edx*2+0x6f6e6b6e],bh
100013d6:	ja     0x10001446
100013d8:	add    BYTE PTR ds:[eax],al
100013db:	add    BYTE PTR [edx],dh
100013dd:	arpl   WORD PTR [eax],ax
100013df:	adc    BYTE PTR [edi+0x6210004d],ah
100013e5:	fwait
100013e6:	add    BYTE PTR [eax],dl
100013e8:	into   
100013e9:	ins    BYTE PTR es:[edi],dx
100013ea:	add    BYTE PTR [eax],dl
100013ec:	mov    cl,0x9f
100013ee:	add    BYTE PTR [eax],dl
100013f0:	bound  ebx,QWORD PTR [ebx+0x4dc01000]
100013f6:	add    BYTE PTR [eax],dl
100013f8:	dec    ebp
100013f9:	ins    DWORD PTR es:[edi],dx
100013fa:	add    BYTE PTR [eax],dl
100013fc:	mov    cl,0x9f
100013fe:	add    BYTE PTR [eax],dl
10001400:	dec    edx
10001401:	push   0x0
10001403:	adc    bl,dl
10001405:	dec    ebp
10001406:	add    BYTE PTR [eax],dl
10001408:	dec    ebp
10001409:	dec    ebx
1000140a:	pop    edi
1000140b:	push   ebx
1000140c:	pop    edi
1000140d:	dec    eax
1000140e:	dec    ecx
1000140f:	dec    ebp
10001410:	add    BYTE PTR [eax],al
10001412:	add    BYTE PTR [eax],al
10001414:	dec    ebp
10001415:	dec    ebx
10001416:	pop    edi
10001417:	push   ebx
10001418:	pop    edi
10001419:	push   ebp
1000141a:	push   ebx
1000141b:	add    BYTE PTR [ebp+0x4b],cl
1000141e:	pop    edi
1000141f:	push   ebx
10001420:	pop    edi
10001421:	dec    ebp
10001422:	dec    edi
10001423:	dec    esi
10001424:	dec    ecx
10001425:	dec    ebx
10001426:	inc    ebp
10001427:	push   edx
10001428:	inc    ecx
10001429:	dec    esp
1000142a:	push   edx
1000142b:	inc    ebp
1000142c:	inc    ecx
1000142d:	inc    esp
1000142e:	pop    ecx
1000142f:	push   edx
10001430:	inc    ebp
10001431:	inc    edi
10001432:	dec    ecx
10001433:	push   ebx
10001434:	push   esp
10001435:	inc    ebp
10001436:	push   edx
10001437:	inc    ebp
10001438:	inc    esp
10001439:	add    BYTE PTR [eax],al
1000143b:	add    BYTE PTR [ebp+0x4b],cl
1000143e:	pop    edi
1000143f:	push   ebx
10001440:	pop    edi
10001441:	dec    ebp
10001442:	inc    ebp
10001443:	add    BYTE PTR [edi+0x4c],cl
10001446:	inc    ebp
10001447:	dec    edi
10001448:	inc    edx
10001449:	dec    edx
1000144a:	pop    edi
1000144b:	push   ebx
1000144c:	pop    edi
1000144d:	dec    ecx
1000144e:	dec    esi
1000144f:	push   esi
10001450:	inc    ecx
10001451:	dec    esp
10001452:	dec    ecx
10001453:	inc    esp
10001454:	dec    eax
10001455:	push   edi
10001456:	dec    esi
10001457:	inc    esp
10001458:	add    BYTE PTR [eax],al
1000145a:	add    BYTE PTR [eax],al
1000145c:	dec    ecx
1000145d:	dec    esi
1000145e:	push   eax
1000145f:	dec    esp
10001460:	inc    ecx
10001461:	inc    ebx
10001462:	inc    ebp
10001463:	pop    edi
10001464:	push   ebx
10001465:	pop    edi
10001466:	push   esp
10001467:	push   edx
10001468:	push   ebp
10001469:	dec    esi
1000146a:	inc    ebx
1000146b:	inc    ecx
1000146c:	push   esp
1000146d:	inc    ebp
1000146e:	inc    esp
1000146f:	add    BYTE PTR [ebx+0x4f],al
10001472:	dec    esi
10001473:	push   esi
10001474:	inc    ebp
10001475:	push   edx
10001476:	push   esp
10001477:	xor    DWORD PTR [eax],esi
10001479:	pop    edi
1000147a:	push   ebx
1000147b:	pop    edi
1000147c:	dec    esi
1000147d:	dec    edi
1000147e:	pop    edi
1000147f:	push   eax
10001480:	push   edx
10001481:	inc    ebp
10001482:	push   ebx
10001483:	inc    ebp
10001484:	dec    esi
10001485:	push   esp
10001486:	inc    ecx
10001487:	push   esp
10001488:	dec    ecx
10001489:	dec    edi
1000148a:	dec    esi
1000148b:	add    BYTE PTR [ebp+0x4b],cl
1000148e:	pop    edi
1000148f:	push   ebx
10001490:	pop    edi
10001491:	push   edx
10001492:	inc    ebp
10001493:	inc    esp
10001494:	push   ebp
10001495:	inc    ebx
10001496:	inc    ebp
10001497:	inc    esp
10001498:	pop    edi
10001499:	push   esp
1000149a:	dec    edi
1000149b:	pop    edi
1000149c:	push   ebx
1000149d:	inc    ebp
1000149e:	dec    esp
1000149f:	inc    esi
100014a0:	add    BYTE PTR [eax],al
100014a2:	add    BYTE PTR [eax],al
100014a4:	dec    edi
100014a5:	dec    esp
100014a6:	inc    ebp
100014a7:	dec    edi
100014a8:	inc    edx
100014a9:	dec    edx
100014aa:	pop    edi
100014ab:	push   ebx
100014ac:	pop    edi
100014ad:	inc    ebx
100014ae:	inc    ecx
100014af:	dec    esi
100014b0:	dec    esi
100014b1:	dec    edi
100014b2:	push   esp
100014b3:	pop    edi
100014b4:	inc    esp
100014b5:	dec    edi
100014b6:	push   esi
100014b7:	inc    ebp
100014b8:	push   edx
100014b9:	inc    edx
100014ba:	pop    edi
100014bb:	dec    esi
100014bc:	dec    edi
100014bd:	push   edi
100014be:	add    BYTE PTR [eax],al
100014c0:	inc    ebx
100014c1:	inc    ecx
100014c2:	inc    ebx
100014c3:	dec    eax
100014c4:	inc    ebp
100014c5:	pop    edi
100014c6:	push   ebx
100014c7:	pop    edi
100014c8:	inc    esi
100014c9:	dec    edi
100014ca:	push   edx
100014cb:	dec    ebp
100014cc:	inc    ecx
100014cd:	push   esp
100014ce:	inc    ebp
100014cf:	push   esp
100014d0:	inc    ebx
100014d1:	pop    edi
100014d2:	dec    esi
100014d3:	dec    edi
100014d4:	push   esp
100014d5:	push   ebx
100014d6:	push   ebp
100014d7:	push   eax
100014d8:	push   eax
100014d9:	dec    edi
100014da:	push   edx
100014db:	push   esp
100014dc:	inc    ebp
100014dd:	inc    esp
100014de:	add    BYTE PTR [eax],al
100014e0:	inc    ebx
100014e1:	inc    ecx
100014e2:	inc    ebx
100014e3:	dec    eax
100014e4:	inc    ebp
100014e5:	pop    edi
100014e6:	push   ebx
100014e7:	pop    edi
100014e8:	push   ebx
100014e9:	inc    ecx
100014ea:	dec    ebp
100014eb:	inc    ebp
100014ec:	inc    ebx
100014ed:	inc    ecx
100014ee:	inc    ebx
100014ef:	dec    eax
100014f0:	inc    ebp
100014f1:	add    BYTE PTR [eax],al
100014f3:	add    BYTE PTR [ebx+0x41],al
100014f6:	inc    ebx
100014f7:	dec    eax
100014f8:	inc    ebp
100014f9:	pop    edi
100014fa:	push   ebx
100014fb:	pop    edi
100014fc:	push   ebx
100014fd:	dec    edi
100014fe:	dec    ebp
100014ff:	inc    ebp
10001500:	inc    ebx
10001501:	inc    ecx
10001502:	inc    ebx
10001503:	dec    eax
10001504:	inc    ebp
10001505:	push   ebx
10001506:	pop    edi
10001507:	dec    esi
10001508:	dec    edi
10001509:	push   esp
1000150a:	push   ebp
1000150b:	push   eax
1000150c:	inc    esp
1000150d:	inc    ecx
1000150e:	push   esp
1000150f:	inc    ebp
10001510:	inc    esp
10001511:	add    BYTE PTR [eax],al
10001513:	add    BYTE PTR [edi+0x4c],cl
10001516:	inc    ebp
10001517:	dec    edi
10001518:	inc    edx
10001519:	dec    edx
1000151a:	pop    edi
1000151b:	push   ebx
1000151c:	pop    edi
1000151d:	dec    ecx
1000151e:	dec    esi
1000151f:	push   esi
10001520:	inc    ecx
10001521:	dec    esp
10001522:	dec    ecx
10001523:	inc    esp
10001524:	push   esi
10001525:	inc    ebp
10001526:	push   edx
10001527:	inc    edx
10001528:	add    BYTE PTR [eax],al
1000152a:	add    BYTE PTR [eax],al
1000152c:	push   esi
1000152d:	dec    ecx
1000152e:	inc    ebp
1000152f:	push   edi
10001530:	pop    edi
10001531:	push   ebx
10001532:	pop    edi
10001533:	inc    ecx
10001534:	dec    esp
10001535:	push   edx
10001536:	inc    ebp
10001537:	inc    ecx
10001538:	inc    esp
10001539:	pop    ecx
1000153a:	pop    edi
1000153b:	inc    esi
1000153c:	push   edx
1000153d:	dec    edi
1000153e:	pop    edx
1000153f:	inc    ebp
10001540:	dec    esi
10001541:	add    BYTE PTR [eax],al
10001543:	add    BYTE PTR [edx+edx*2+0x41],al
10001547:	inc    edi
10001548:	inc    esp
10001549:	push   edx
1000154a:	dec    edi
1000154b:	push   eax
1000154c:	pop    edi
1000154d:	push   ebx
1000154e:	pop    edi
1000154f:	inc    esp
10001550:	push   edx
10001551:	dec    edi
10001552:	push   eax
10001553:	add    BYTE PTR [edx+edx*2+0x41],al
10001557:	inc    edi
10001558:	inc    esp
10001559:	push   edx
1000155a:	dec    edi
1000155b:	push   eax
1000155c:	pop    edi
1000155d:	push   ebx
1000155e:	pop    edi
1000155f:	inc    ebx
10001560:	inc    ecx
10001561:	dec    esi
10001562:	inc    ebx
10001563:	inc    ebp
10001564:	dec    esp
10001565:	add    BYTE PTR [eax],al
10001567:	add    BYTE PTR [edx+edx*2+0x41],al
1000156b:	inc    edi
1000156c:	inc    esp
1000156d:	push   edx
1000156e:	dec    edi
1000156f:	push   eax
10001570:	pop    edi
10001571:	push   ebx
10001572:	pop    edi
10001573:	push   ebp
10001574:	push   ebx
10001575:	inc    ebp
10001576:	inc    esp
10001577:	inc    ebp
10001578:	inc    esi
10001579:	inc    ecx
1000157a:	push   ebp
1000157b:	dec    esp
1000157c:	push   esp
1000157d:	inc    ebx
1000157e:	push   ebp
1000157f:	push   edx
10001580:	push   ebx
10001581:	dec    edi
10001582:	push   edx
10001583:	push   ebx
10001584:	add    BYTE PTR [eax],al
10001586:	add    BYTE PTR [eax],al
10001588:	inc    esp
10001589:	inc    ecx
1000158a:	push   esp
1000158b:	inc    ecx
1000158c:	pop    edi
1000158d:	push   ebx
1000158e:	pop    edi
1000158f:	push   ebx
10001590:	inc    ecx
10001591:	dec    ebp
10001592:	inc    ebp
10001593:	inc    esi
10001594:	dec    edi
10001595:	push   edx
10001596:	dec    ebp
10001597:	inc    ecx
10001598:	push   esp
10001599:	inc    ebp
1000159a:	push   esp
1000159b:	inc    ebx
1000159c:	add    BYTE PTR [eax],al
1000159e:	add    BYTE PTR [eax],al
100015a0:	dec    edi
100015a1:	dec    esp
100015a2:	inc    ebp
100015a3:	pop    edi
100015a4:	push   ebx
100015a5:	pop    edi
100015a6:	dec    ebp
100015a7:	inc    ecx
100015a8:	inc    ebx
100015a9:	pop    edi
100015aa:	inc    ebx
100015ab:	dec    esp
100015ac:	dec    ecx
100015ad:	push   eax
100015ae:	inc    esi
100015af:	dec    edi
100015b0:	push   edx
100015b1:	dec    ebp
100015b2:	inc    ecx
100015b3:	push   esp
100015b4:	add    BYTE PTR [eax],al
100015b6:	add    BYTE PTR [eax],al
100015b8:	push   ebx
100015b9:	pop    edi
100015ba:	inc    esi
100015bb:	inc    ecx
100015bc:	dec    esp
100015bd:	push   ebx
100015be:	inc    ebp
100015bf:	add    BYTE PTR [ebx+0x54],dl
100015c2:	inc    edi
100015c3:	pop    edi
100015c4:	push   ebx
100015c5:	pop    edi
100015c6:	inc    ebx
100015c7:	dec    edi
100015c8:	dec    esi
100015c9:	push   esi
100015ca:	inc    ebp
100015cb:	push   edx
100015cc:	push   esp
100015cd:	inc    ebp
100015ce:	inc    esp
100015cf:	add    BYTE PTR [edi+0x4c],cl
100015d2:	inc    ebp
100015d3:	pop    edi
100015d4:	push   ebx
100015d5:	pop    edi
100015d6:	push   ebp
100015d7:	push   ebx
100015d8:	inc    ebp
100015d9:	push   edx
100015da:	inc    ebp
100015db:	inc    edi
100015dc:	add    BYTE PTR [eax],al
100015de:	add    BYTE PTR [eax],al
100015e0:	dec    edi
100015e1:	dec    esp
100015e2:	inc    ebp
100015e3:	pop    edi
100015e4:	push   ebx
100015e5:	pop    edi
100015e6:	push   ebx
100015e7:	push   esp
100015e8:	inc    ecx
100015e9:	push   esp
100015ea:	dec    ecx
100015eb:	inc    ebx
100015ec:	add    BYTE PTR [eax],al
100015ee:	add    BYTE PTR [eax],al
100015f0:	push   ebx
100015f1:	pop    edi
100015f2:	dec    edi
100015f3:	dec    ebx
100015f4:	add    BYTE PTR [eax],al
100015f6:	add    BYTE PTR [eax],al
100015f8:	inc    ebx
100015f9:	push   esp
100015fa:	dec    esp
100015fb:	pop    edi
100015fc:	inc    ebp
100015fd:	pop    edi
100015fe:	push   eax
100015ff:	push   edx
10001600:	dec    ecx
10001601:	dec    esi
10001602:	push   esp
10001603:	inc    ebp
10001604:	push   edx
10001605:	inc    ebp
10001606:	push   edx
10001607:	push   edx
10001608:	dec    edi
10001609:	push   edx
1000160a:	add    BYTE PTR [eax],al
1000160c:	inc    ebx
1000160d:	push   esp
1000160e:	dec    esp
1000160f:	pop    edi
10001610:	inc    ebp
10001611:	pop    edi
10001612:	inc    ebx
10001613:	inc    ecx
10001614:	dec    esi
10001615:	push   esp
10001616:	push   ebx
10001617:	inc    ecx
10001618:	push   esi
10001619:	inc    ebp
1000161a:	inc    esi
1000161b:	dec    ecx
1000161c:	dec    esp
1000161d:	inc    ebp
1000161e:	push   esp
1000161f:	dec    edi
10001620:	push   esp
10001621:	inc    ebp
10001622:	dec    ebp
10001623:	push   eax
10001624:	add    BYTE PTR [eax],al
10001626:	add    BYTE PTR [eax],al
10001628:	inc    ebx
10001629:	push   esp
1000162a:	dec    esp
1000162b:	pop    edi
1000162c:	inc    ebp
1000162d:	pop    edi
1000162e:	push   ebx
1000162f:	inc    ebp
10001630:	inc    ecx
10001631:	push   edx
10001632:	inc    ebx
10001633:	dec    eax
10001634:	push   esp
10001635:	inc    ebp
10001636:	pop    eax
10001637:	push   esp
10001638:	dec    esi
10001639:	dec    edi
1000163a:	push   esp
1000163b:	inc    esi
1000163c:	dec    edi
1000163d:	push   ebp
1000163e:	dec    esi
1000163f:	inc    esp
10001640:	add    BYTE PTR [eax],al
10001642:	add    BYTE PTR [eax],al
10001644:	inc    ebx
10001645:	push   esp
10001646:	dec    esp
10001647:	pop    edi
10001648:	inc    ebp
10001649:	pop    edi
1000164a:	push   edx
1000164b:	inc    ebp
1000164c:	push   eax
1000164d:	dec    esp
1000164e:	inc    ecx
1000164f:	inc    ebx
10001650:	inc    ebp
10001651:	dec    ebp
10001652:	inc    ebp
10001653:	dec    esi
10001654:	push   esp
10001655:	push   ebx
10001656:	push   esp
10001657:	dec    edi
10001658:	dec    edi
10001659:	dec    esp
1000165a:	dec    edi
1000165b:	dec    esi
1000165c:	inc    edi
1000165d:	add    BYTE PTR [eax],al
1000165f:	add    BYTE PTR [ebx+0x54],al
10001662:	dec    esp
10001663:	pop    edi
10001664:	inc    ebp
10001665:	pop    edi
10001666:	dec    ecx
10001667:	dec    esi
10001668:	push   esi
10001669:	inc    ecx
1000166a:	dec    esp
1000166b:	dec    ecx
1000166c:	inc    esp
1000166d:	push   eax
1000166e:	dec    ecx
1000166f:	inc    ebx
10001670:	push   esp
10001671:	push   ebp
10001672:	push   edx
10001673:	inc    ebp
10001674:	add    BYTE PTR [eax],al
10001676:	add    BYTE PTR [eax],al
10001678:	inc    ebx
10001679:	push   esp
1000167a:	dec    esp
1000167b:	pop    edi
1000167c:	inc    ebp
1000167d:	pop    edi
1000167e:	inc    edi
1000167f:	inc    ebp
10001680:	push   esp
10001681:	dec    esi
10001682:	dec    edi
10001683:	push   esp
10001684:	push   ebx
10001685:	push   ebp
10001686:	push   eax
10001687:	push   eax
10001688:	dec    edi
10001689:	push   edx
1000168a:	push   esp
1000168b:	inc    ebp
1000168c:	inc    esp
1000168d:	inc    ecx
1000168e:	push   esp
1000168f:	push   edx
10001690:	push   ebp
10001691:	dec    esi
10001692:	push   esp
10001693:	dec    ecx
10001694:	dec    ebp
10001695:	inc    ebp
10001696:	add    BYTE PTR [eax],al
10001698:	inc    ebx
10001699:	push   esp
1000169a:	dec    esp
1000169b:	pop    edi
1000169c:	inc    ebp
1000169d:	pop    edi
1000169e:	inc    edi
1000169f:	inc    ebp
100016a0:	push   esp
100016a1:	dec    esi
100016a2:	dec    edi
100016a3:	push   esp
100016a4:	push   ebx
100016a5:	push   ebp
100016a6:	push   eax
100016a7:	push   eax
100016a8:	dec    edi
100016a9:	push   edx
100016aa:	push   esp
100016ab:	inc    ebp
100016ac:	inc    esp
100016ad:	add    BYTE PTR [eax],al
100016af:	add    BYTE PTR [ebx+0x54],al
100016b2:	dec    esp
100016b3:	pop    edi
100016b4:	inc    ebp
100016b5:	pop    edi
100016b6:	push   eax
100016b7:	push   edx
100016b8:	dec    edi
100016b9:	push   eax
100016ba:	inc    ebp
100016bb:	push   edx
100016bc:	push   esp
100016bd:	pop    ecx
100016be:	dec    esi
100016bf:	dec    edi
100016c0:	push   esp
100016c1:	inc    esi
100016c2:	dec    edi
100016c3:	push   ebp
100016c4:	dec    esi
100016c5:	inc    esp
100016c6:	add    BYTE PTR [eax],al
100016c8:	inc    ebx
100016c9:	push   esp
100016ca:	dec    esp
100016cb:	pop    edi
100016cc:	inc    ebp
100016cd:	pop    edi
100016ce:	dec    ecx
100016cf:	dec    esi
100016d0:	push   esi
100016d1:	inc    ecx
100016d2:	dec    esp
100016d3:	dec    ecx
100016d4:	inc    esp
100016d5:	inc    ebx
100016d6:	dec    esp
100016d7:	dec    ecx
100016d8:	push   eax
100016d9:	inc    edx
100016da:	dec    edi
100016db:	inc    ecx
100016dc:	push   edx
100016dd:	inc    esp
100016de:	inc    esi
100016df:	dec    edi
100016e0:	push   edx
100016e1:	dec    ebp
100016e2:	inc    ecx
100016e3:	push   esp
100016e4:	add    BYTE PTR [eax],al
100016e6:	add    BYTE PTR [eax],al
100016e8:	inc    ebx
100016e9:	push   esp
100016ea:	dec    esp
100016eb:	pop    edi
100016ec:	inc    ebp
100016ed:	pop    edi
100016ee:	push   ebx
100016ef:	inc    ebp
100016f0:	push   esp
100016f1:	dec    esi
100016f2:	dec    edi
100016f3:	push   esp
100016f4:	push   eax
100016f5:	inc    ebp
100016f6:	push   edx
100016f7:	dec    ebp
100016f8:	dec    ecx
100016f9:	push   esp
100016fa:	push   esp
100016fb:	inc    ebp
100016fc:	inc    esp
100016fd:	add    BYTE PTR [eax],al
100016ff:	add    BYTE PTR [ebx+0x54],al
10001702:	dec    esp
10001703:	pop    edi
10001704:	inc    ebp
10001705:	pop    edi
10001706:	dec    ecx
10001707:	dec    esi
10001708:	push   esi
10001709:	inc    ecx
1000170a:	dec    esp
1000170b:	dec    ecx
1000170c:	inc    esp
1000170d:	push   eax
1000170e:	push   edx
1000170f:	dec    edi
10001710:	push   eax
10001711:	inc    ebp
10001712:	push   edx
10001713:	push   esp
10001714:	pop    ecx
10001715:	inc    ecx
10001716:	push   edx
10001717:	push   edx
10001718:	inc    ecx
10001719:	pop    ecx
1000171a:	dec    ecx
1000171b:	dec    esi
1000171c:	inc    esp
1000171d:	inc    ebp
1000171e:	pop    eax
1000171f:	add    BYTE PTR [ebx+0x54],al
10001722:	dec    esp
10001723:	pop    edi
10001724:	inc    ebp
10001725:	pop    edi
10001726:	push   ebx
10001727:	inc    ebp
10001728:	push   esp
10001729:	dec    esi
1000172a:	dec    edi
1000172b:	push   esp
1000172c:	push   ebx
1000172d:	push   ebp
1000172e:	push   eax
1000172f:	push   eax
10001730:	dec    edi
10001731:	push   edx
10001732:	push   esp
10001733:	inc    ebp
10001734:	inc    esp
10001735:	inc    ecx
10001736:	push   esp
10001737:	push   edx
10001738:	push   ebp
10001739:	dec    esi
1000173a:	push   esp
1000173b:	dec    ecx
1000173c:	dec    ebp
1000173d:	inc    ebp
1000173e:	add    BYTE PTR [eax],al
10001740:	inc    ebx
10001741:	push   esp
10001742:	dec    esp
10001743:	pop    edi
10001744:	inc    ebp
10001745:	pop    edi
10001746:	push   ebx
10001747:	inc    ebp
10001748:	push   esp
10001749:	dec    esi
1000174a:	dec    edi
1000174b:	push   esp
1000174c:	push   ebx
1000174d:	push   ebp
1000174e:	push   eax
1000174f:	push   eax
10001750:	dec    edi
10001751:	push   edx
10001752:	push   esp
10001753:	inc    ebp
10001754:	inc    esp
10001755:	add    BYTE PTR [eax],al
10001757:	add    BYTE PTR [ebx+0x54],al
1000175a:	dec    esp
1000175b:	pop    edi
1000175c:	inc    ebp
1000175d:	pop    edi
1000175e:	dec    esi
1000175f:	inc    ebp
10001760:	inc    ebp
10001761:	inc    esp
10001762:	push   eax
10001763:	push   edx
10001764:	dec    edi
10001765:	push   eax
10001766:	inc    ebp
10001767:	push   edx
10001768:	push   esp
10001769:	pop    ecx
1000176a:	inc    ecx
1000176b:	push   edx
1000176c:	push   edx
1000176d:	inc    ecx
1000176e:	pop    ecx
1000176f:	dec    ecx
10001770:	dec    esi
10001771:	inc    esp
10001772:	inc    ebp
10001773:	pop    eax
10001774:	add    BYTE PTR [eax],al
10001776:	add    BYTE PTR [eax],al
10001778:	inc    ebx
10001779:	push   esp
1000177a:	dec    esp
1000177b:	pop    edi
1000177c:	inc    ebp
1000177d:	pop    edi
1000177e:	dec    ecx
1000177f:	dec    esi
10001780:	push   esi
10001781:	inc    ecx
10001782:	dec    esp
10001783:	dec    ecx
10001784:	inc    esp
10001785:	push   eax
10001786:	push   edx
10001787:	dec    edi
10001788:	push   eax
10001789:	inc    ebp
1000178a:	push   edx
1000178b:	push   esp
1000178c:	pop    ecx
1000178d:	push   esi
1000178e:	inc    ecx
1000178f:	dec    esp
10001790:	push   ebp
10001791:	inc    ebp
10001792:	add    BYTE PTR [eax],al
10001794:	inc    ebx
10001795:	push   esp
10001796:	dec    esp
10001797:	pop    edi
10001798:	inc    ebp
10001799:	pop    edi
1000179a:	dec    ecx
1000179b:	dec    esi
1000179c:	push   esi
1000179d:	inc    ecx
1000179e:	dec    esp
1000179f:	dec    ecx
100017a0:	inc    esp
100017a1:	inc    esi
100017a2:	dec    ecx
100017a3:	dec    esp
100017a4:	inc    ebp
100017a5:	inc    esi
100017a6:	dec    edi
100017a7:	push   edx
100017a8:	dec    ebp
100017a9:	inc    ecx
100017aa:	push   esp
100017ab:	add    BYTE PTR [ebx+0x54],al
100017ae:	dec    esp
100017af:	pop    edi
100017b0:	inc    ebp
100017b1:	pop    edi
100017b2:	dec    ecx
100017b3:	dec    esi
100017b4:	push   esi
100017b5:	inc    ecx
100017b6:	dec    esp
100017b7:	dec    ecx
100017b8:	inc    esp
100017b9:	push   ebp
100017ba:	push   ebx
100017bb:	inc    ebp
100017bc:	dec    edi
100017bd:	inc    esi
100017be:	dec    esi
100017bf:	push   ebp
100017c0:	dec    esp
100017c1:	dec    esp
100017c2:	add    BYTE PTR [eax],al
100017c4:	inc    ebx
100017c5:	push   esp
100017c6:	dec    esp
100017c7:	pop    edi
100017c8:	inc    ebp
100017c9:	pop    edi
100017ca:	dec    ecx
100017cb:	dec    esi
100017cc:	push   esi
100017cd:	inc    ecx
100017ce:	dec    esp
100017cf:	dec    ecx
100017d0:	inc    esp
100017d1:	push   eax
100017d2:	inc    ecx
100017d3:	push   esp
100017d4:	push   esp
100017d5:	inc    ebp
100017d6:	push   edx
100017d7:	dec    esi
100017d8:	push   ebx
100017d9:	push   esp
100017da:	push   edx
100017db:	dec    ecx
100017dc:	dec    esi
100017dd:	inc    edi
100017de:	add    BYTE PTR [eax],al
100017e0:	inc    ebx
100017e1:	push   esp
100017e2:	dec    esp
100017e3:	pop    edi
100017e4:	inc    ebp
100017e5:	pop    edi
100017e6:	push   eax
100017e7:	inc    ecx
100017e8:	push   esp
100017e9:	dec    eax
100017ea:	dec    esi
100017eb:	dec    edi
100017ec:	push   esp
100017ed:	inc    esi
100017ee:	dec    edi
100017ef:	push   ebp
100017f0:	dec    esi
100017f1:	inc    esp
100017f2:	add    BYTE PTR [eax],al
100017f4:	inc    ebx
100017f5:	push   esp
100017f6:	dec    esp
100017f7:	pop    edi
100017f8:	inc    ebp
100017f9:	pop    edi
100017fa:	push   eax
100017fb:	inc    ecx
100017fc:	push   esp
100017fd:	dec    eax
100017fe:	inc    esi
100017ff:	dec    ecx
10001800:	dec    esp
10001801:	inc    ebp
10001802:	inc    ecx
10001803:	inc    ebx
10001804:	inc    ebx
10001805:	inc    ebp
10001806:	push   ebx
10001807:	push   ebx
10001808:	inc    ebp
10001809:	push   edx
1000180a:	push   edx
1000180b:	dec    edi
1000180c:	push   edx
1000180d:	add    BYTE PTR [eax],al
1000180f:	add    BYTE PTR [ebx+0x54],al
10001812:	dec    esp
10001813:	pop    edi
10001814:	inc    ebp
10001815:	pop    edi
10001816:	inc    esp
10001817:	dec    ecx
10001818:	push   ebx
10001819:	dec    ebx
1000181a:	dec    esi
1000181b:	dec    edi
1000181c:	push   esp
1000181d:	push   edx
1000181e:	inc    ebp
1000181f:	inc    ecx
10001820:	inc    esp
10001821:	pop    ecx
10001822:	add    BYTE PTR [eax],al
10001824:	inc    ebx
10001825:	push   esp
10001826:	dec    esp
10001827:	pop    edi
10001828:	inc    ebp
10001829:	pop    edi
1000182a:	push   eax
1000182b:	inc    ebp
1000182c:	push   edx
1000182d:	dec    ebp
1000182e:	dec    ecx
1000182f:	push   ebx
10001830:	push   ebx
10001831:	dec    ecx
10001832:	dec    edi
10001833:	dec    esi
10001834:	inc    esp
10001835:	inc    ebp
10001836:	dec    esi
10001837:	dec    ecx
10001838:	inc    ebp
10001839:	inc    esp
1000183a:	add    BYTE PTR [eax],al
1000183c:	inc    ebx
1000183d:	push   esp
1000183e:	dec    esp
1000183f:	pop    edi
10001840:	inc    ebp
10001841:	pop    edi
10001842:	inc    esp
10001843:	inc    ebp
10001844:	push   esi
10001845:	dec    ecx
10001846:	inc    ebx
10001847:	inc    ebp
10001848:	push   ebp
10001849:	dec    esi
1000184a:	inc    ecx
1000184b:	push   esi
1000184c:	inc    ecx
1000184d:	dec    ecx
1000184e:	dec    esp
1000184f:	inc    ecx
10001850:	inc    edx
10001851:	dec    esp
10001852:	inc    ebp
10001853:	add    BYTE PTR [ebx+0x54],al
10001856:	dec    esp
10001857:	pop    edi
10001858:	inc    ebp
10001859:	pop    edi
1000185a:	push   esp
1000185b:	dec    edi
1000185c:	dec    edi
1000185d:	dec    ebp
1000185e:	inc    ecx
1000185f:	dec    esi
10001860:	pop    ecx
10001861:	inc    esi
10001862:	dec    ecx
10001863:	dec    esp
10001864:	inc    ebp
10001865:	push   ebx
10001866:	add    BYTE PTR [eax],al
10001868:	inc    ebx
10001869:	push   esp
1000186a:	dec    esp
1000186b:	pop    edi
1000186c:	inc    ebp
1000186d:	pop    edi
1000186e:	inc    edx
1000186f:	inc    ecx
10001870:	inc    esp
10001871:	inc    esi
10001872:	dec    ecx
10001873:	dec    esp
10001874:	inc    ebp
10001875:	dec    esi
10001876:	inc    ecx
10001877:	dec    ebp
10001878:	inc    ebp
10001879:	add    BYTE PTR [eax],al
1000187b:	add    BYTE PTR [ebx+0x54],al
1000187e:	dec    esp
1000187f:	pop    edi
10001880:	inc    ebp
10001881:	pop    edi
10001882:	inc    edx
10001883:	inc    ecx
10001884:	inc    esp
10001885:	push   edx
10001886:	inc    ebp
10001887:	inc    ebx
10001888:	dec    edi
10001889:	push   edx
1000188a:	inc    esp
1000188b:	dec    esi
1000188c:	push   ebp
1000188d:	dec    ebp
1000188e:	inc    edx
1000188f:	inc    ebp
10001890:	push   edx
10001891:	add    BYTE PTR [eax],al
10001893:	add    BYTE PTR [ebx+0x54],al
10001896:	dec    esp
10001897:	pop    edi
10001898:	inc    ebp
10001899:	pop    edi
1000189a:	inc    esp
1000189b:	dec    ecx
1000189c:	push   ebx
1000189d:	dec    ebx
1000189e:	inc    esi
1000189f:	push   ebp
100018a0:	dec    esp
100018a1:	dec    esp
100018a2:	add    BYTE PTR [eax],al
100018a4:	inc    ebx
100018a5:	push   esp
100018a6:	dec    esp
100018a7:	pop    edi
100018a8:	inc    ebp
100018a9:	pop    edi
100018aa:	inc    edx
100018ab:	inc    ecx
100018ac:	inc    esp
100018ad:	push   edx
100018ae:	inc    ebp
100018af:	inc    ebx
100018b0:	dec    edi
100018b1:	push   edx
100018b2:	inc    esp
100018b3:	dec    esp
100018b4:	inc    ebp
100018b5:	dec    esi
100018b6:	inc    edi
100018b7:	push   esp
100018b8:	dec    eax
100018b9:	add    BYTE PTR [eax],al
100018bb:	add    BYTE PTR [ebx+0x54],al
100018be:	dec    esp
100018bf:	pop    edi
100018c0:	inc    ebp
100018c1:	pop    edi
100018c2:	inc    esi
100018c3:	dec    ecx
100018c4:	dec    esp
100018c5:	inc    ebp
100018c6:	inc    ecx
100018c7:	dec    esp
100018c8:	push   edx
100018c9:	inc    ebp
100018ca:	inc    ecx
100018cb:	inc    esp
100018cc:	pop    ecx
100018cd:	inc    ebp
100018ce:	pop    eax
100018cf:	dec    ecx
100018d0:	push   ebx
100018d1:	push   esp
100018d2:	push   ebx
100018d3:	add    BYTE PTR [ebx+0x54],al
100018d6:	dec    esp
100018d7:	pop    edi
100018d8:	inc    ebp
100018d9:	pop    edi
100018da:	inc    esp
100018db:	inc    ebp
100018dc:	push   esi
100018dd:	dec    ecx
100018de:	inc    ebx
100018df:	inc    ebp
100018e0:	dec    ecx
100018e1:	dec    edi
100018e2:	inc    ebp
100018e3:	push   edx
100018e4:	push   edx
100018e5:	dec    edi
100018e6:	push   edx
100018e7:	add    BYTE PTR [ebx+0x54],al
100018ea:	dec    esp
100018eb:	pop    edi
100018ec:	inc    ebp
100018ed:	pop    edi
100018ee:	inc    esi
100018ef:	dec    ecx
100018f0:	dec    esp
100018f1:	inc    ebp
100018f2:	inc    ecx
100018f3:	dec    esp
100018f4:	push   edx
100018f5:	inc    ebp
100018f6:	inc    ecx
100018f7:	inc    esp
100018f8:	pop    ecx
100018f9:	dec    edi
100018fa:	push   eax
100018fb:	inc    ebp
100018fc:	dec    esi
100018fd:	add    BYTE PTR [eax],al
100018ff:	add    BYTE PTR [ebx+0x54],al
10001902:	dec    esp
10001903:	pop    edi
10001904:	inc    ebp
10001905:	pop    edi
10001906:	inc    edx
10001907:	inc    ecx
10001908:	inc    esp
10001909:	inc    esi
1000190a:	dec    ecx
1000190b:	dec    esp
1000190c:	inc    ebp
1000190d:	dec    ebp
1000190e:	dec    edi
1000190f:	inc    esp
10001910:	inc    ebp
10001911:	add    BYTE PTR [eax],al
10001913:	add    BYTE PTR [ebx+0x54],al
10001916:	dec    esp
10001917:	pop    edi
10001918:	inc    ebp
10001919:	pop    edi
1000191a:	inc    esi
1000191b:	dec    ecx
1000191c:	dec    esp
1000191d:	inc    ebp
1000191e:	dec    esi
1000191f:	dec    edi
10001920:	push   esp
10001921:	inc    esi
10001922:	dec    edi
10001923:	push   ebp
10001924:	dec    esi
10001925:	inc    esp
10001926:	add    BYTE PTR [eax],al
10001928:	inc    ebx
10001929:	push   esp
1000192a:	dec    esp
1000192b:	pop    edi
1000192c:	inc    ebp
1000192d:	pop    edi
1000192e:	inc    edx
1000192f:	inc    ecx
10001930:	inc    esp
10001931:	inc    esi
10001932:	dec    ecx
10001933:	dec    esp
10001934:	inc    ebp
10001935:	dec    esi
10001936:	inc    ecx
10001937:	dec    ebp
10001938:	inc    ebp
10001939:	dec    edi
1000193a:	push   edx
1000193b:	dec    esi
1000193c:	push   ebp
1000193d:	dec    ebp
1000193e:	inc    edx
1000193f:	inc    ebp
10001940:	push   edx
10001941:	add    BYTE PTR [eax],al
10001943:	add    BYTE PTR [ebx+0x54],al
10001946:	dec    esp
10001947:	pop    edi
10001948:	inc    ebp
10001949:	pop    edi
1000194a:	dec    edi
1000194b:	push   ebp
1000194c:	push   esp
1000194d:	dec    edi
1000194e:	inc    esi
1000194f:	push   ebx
10001950:	push   esp
10001951:	inc    ecx
10001952:	inc    ebx
10001953:	dec    ebx
10001954:	push   ebx
10001955:	push   eax
10001956:	inc    ecx
10001957:	inc    ebx
10001958:	inc    ebp
10001959:	add    BYTE PTR [eax],al
1000195b:	add    BYTE PTR [ebx+0x54],al
1000195e:	dec    esp
1000195f:	pop    edi
10001960:	inc    ebp
10001961:	pop    edi
10001962:	dec    edi
10001963:	push   esi
10001964:	inc    ebp
10001965:	push   edx
10001966:	inc    esi
10001967:	dec    esp
10001968:	dec    edi
10001969:	push   edi
1000196a:	add    BYTE PTR [eax],al
1000196c:	inc    ebx
1000196d:	push   esp
1000196e:	dec    esp
1000196f:	pop    edi
10001970:	inc    ebp
10001971:	pop    edi
10001972:	dec    edi
10001973:	push   ebp
10001974:	push   esp
10001975:	dec    edi
10001976:	inc    esi
10001977:	dec    ebp
10001978:	inc    ebp
10001979:	dec    ebp
1000197a:	dec    edi
1000197b:	push   edx
1000197c:	pop    ecx
1000197d:	add    BYTE PTR [eax],al
1000197f:	add    BYTE PTR [ebx+0x54],al
10001982:	dec    esp
10001983:	pop    edi
10001984:	inc    ebp
10001985:	pop    edi
10001986:	inc    esp
10001987:	dec    ecx
10001988:	push   esi
10001989:	dec    ecx
1000198a:	push   ebx
1000198b:	dec    ecx
1000198c:	dec    edi
1000198d:	dec    esi
1000198e:	inc    edx
1000198f:	pop    ecx
10001990:	pop    edx
10001991:	inc    ebp
10001992:	push   edx
10001993:	dec    edi
10001994:	add    BYTE PTR [eax],al
10001996:	add    BYTE PTR [eax],al
10001998:	inc    ebx
10001999:	push   esp
1000199a:	dec    esp
1000199b:	pop    edi
1000199c:	inc    ebp
1000199d:	pop    edi
1000199e:	dec    edi
1000199f:	push   ebp
100019a0:	push   esp
100019a1:	dec    edi
100019a2:	inc    esi
100019a3:	push   ebx
100019a4:	push   esp
100019a5:	push   edx
100019a6:	dec    ecx
100019a7:	dec    esi
100019a8:	inc    edi
100019a9:	push   ebx
100019aa:	push   eax
100019ab:	inc    ecx
100019ac:	inc    ebx
100019ad:	inc    ebp
100019ae:	add    BYTE PTR [eax],al
100019b0:	inc    ebx
100019b1:	push   esp
100019b2:	dec    esp
100019b3:	pop    edi
100019b4:	inc    ebp
100019b5:	pop    edi
100019b6:	dec    ecx
100019b7:	dec    esp
100019b8:	dec    esp
100019b9:	inc    ebp
100019ba:	inc    edi
100019bb:	inc    ecx
100019bc:	dec    esp
100019bd:	inc    esi
100019be:	push   ebp
100019bf:	dec    esi
100019c0:	inc    ebx
100019c1:	push   esp
100019c2:	dec    ecx
100019c3:	dec    edi
100019c4:	dec    esi
100019c5:	inc    ebx
100019c6:	inc    ecx
100019c7:	dec    esp
100019c8:	dec    esp
100019c9:	add    BYTE PTR [eax],al
100019cb:	add    BYTE PTR [ebx+0x4f],al
100019ce:	pop    edi
100019cf:	inc    ebp
100019d0:	pop    edi
100019d1:	push   ebx
100019d2:	inc    ebp
100019d3:	push   edx
100019d4:	push   esi
100019d5:	inc    ebp
100019d6:	push   edx
100019d7:	pop    edi
100019d8:	push   ebx
100019d9:	push   esp
100019da:	dec    edi
100019db:	push   eax
100019dc:	push   eax
100019dd:	dec    ecx
100019de:	dec    esi
100019df:	inc    edi
100019e0:	add    BYTE PTR [eax],al
100019e2:	add    BYTE PTR [eax],al
100019e4:	dec    ebp
100019e5:	inc    ebp
100019e6:	dec    ebp
100019e7:	pop    edi
100019e8:	inc    ebp
100019e9:	pop    edi
100019ea:	dec    ecx
100019eb:	dec    esi
100019ec:	push   esi
100019ed:	inc    ecx
100019ee:	dec    esp
100019ef:	dec    ecx
100019f0:	inc    esp
100019f1:	pop    edi
100019f2:	push   edx
100019f3:	dec    edi
100019f4:	dec    edi
100019f5:	push   esp
100019f6:	add    BYTE PTR [eax],al
100019f8:	dec    ebp
100019f9:	inc    ebp
100019fa:	dec    ebp
100019fb:	pop    edi
100019fc:	inc    ebp
100019fd:	pop    edi
100019fe:	dec    ecx
100019ff:	dec    esi
10001a00:	push   esi
10001a01:	inc    ecx
10001a02:	dec    esp
10001a03:	dec    ecx
10001a04:	inc    esp
10001a05:	pop    edi
10001a06:	dec    esp
10001a07:	dec    ecx
10001a08:	dec    esi
10001a09:	dec    ebx
10001a0a:	add    BYTE PTR [eax],al
10001a0c:	dec    ebp
10001a0d:	inc    ebp
10001a0e:	dec    ebp
10001a0f:	pop    edi
10001a10:	inc    ebp
10001a11:	pop    edi
10001a12:	dec    ecx
10001a13:	dec    esi
10001a14:	push   esi
10001a15:	inc    ecx
10001a16:	dec    esp
10001a17:	dec    ecx
10001a18:	inc    esp
10001a19:	pop    edi
10001a1a:	push   ebx
10001a1b:	dec    ecx
10001a1c:	pop    edx
10001a1d:	inc    ebp
10001a1e:	add    BYTE PTR [eax],al
10001a20:	dec    ebp
10001a21:	dec    ebx
10001a22:	pop    edi
10001a23:	inc    ebp
10001a24:	pop    edi
10001a25:	dec    esi
10001a26:	dec    edi
10001a27:	pop    edi
10001a28:	dec    esi
10001a29:	dec    edi
10001a2a:	push   edx
10001a2b:	dec    ebp
10001a2c:	inc    ecx
10001a2d:	dec    esp
10001a2e:	dec    ecx
10001a2f:	pop    edx
10001a30:	inc    ebp
10001a31:	inc    esp
10001a32:	add    BYTE PTR [eax],al
10001a34:	inc    ebx
10001a35:	dec    edi
10001a36:	pop    edi
10001a37:	inc    ebp
10001a38:	pop    edi
10001a39:	push   ebx
10001a3a:	inc    ebx
10001a3b:	dec    ebp
10001a3c:	pop    edi
10001a3d:	push   edx
10001a3e:	push   eax
10001a3f:	inc    ebx
10001a40:	pop    edi
10001a41:	inc    esi
10001a42:	inc    ecx
10001a43:	dec    ecx
10001a44:	dec    esp
10001a45:	push   ebp
10001a46:	push   edx
10001a47:	inc    ebp
10001a48:	add    BYTE PTR [eax],al
10001a4a:	add    BYTE PTR [eax],al
10001a4c:	inc    ebx
10001a4d:	dec    edi
10001a4e:	pop    edi
10001a4f:	inc    ebp
10001a50:	pop    edi
10001a51:	inc    edx
10001a52:	inc    ecx
10001a53:	inc    esp
10001a54:	pop    edi
10001a55:	push   eax
10001a56:	inc    ecx
10001a57:	push   esp
10001a58:	dec    eax
10001a59:	add    BYTE PTR [eax],al
10001a5b:	add    BYTE PTR [ebx+0x4f],al
10001a5e:	pop    edi
10001a5f:	inc    ebp
10001a60:	pop    edi
10001a61:	push   ebx
10001a62:	inc    ebp
10001a63:	push   edx
10001a64:	push   esi
10001a65:	inc    ebp
10001a66:	push   edx
10001a67:	pop    edi
10001a68:	inc    ebp
10001a69:	pop    eax
10001a6a:	inc    ebp
10001a6b:	inc    ebx
10001a6c:	pop    edi
10001a6d:	inc    esi
10001a6e:	inc    ecx
10001a6f:	dec    ecx
10001a70:	dec    esp
10001a71:	push   ebp
10001a72:	push   edx
10001a73:	inc    ebp
10001a74:	add    BYTE PTR [eax],al
10001a76:	add    BYTE PTR [eax],al
10001a78:	inc    ebx
10001a79:	dec    edi
10001a7a:	pop    edi
10001a7b:	inc    ebp
10001a7c:	pop    edi
10001a7d:	dec    edi
10001a7e:	inc    edx
10001a7f:	dec    edx
10001a80:	push   ebx
10001a81:	push   edx
10001a82:	push   esi
10001a83:	pop    edi
10001a84:	push   edx
10001a85:	push   eax
10001a86:	inc    ebx
10001a87:	pop    edi
10001a88:	inc    esi
10001a89:	inc    ecx
10001a8a:	dec    ecx
10001a8b:	dec    esp
10001a8c:	push   ebp
10001a8d:	push   edx
10001a8e:	inc    ebp
10001a8f:	add    BYTE PTR [ebx+0x4f],al
10001a92:	pop    edi
10001a93:	inc    ebp
10001a94:	pop    edi
10001a95:	push   ebx
10001a96:	inc    ebx
10001a97:	dec    ebp
10001a98:	pop    edi
10001a99:	inc    ebp
10001a9a:	push   edx
10001a9b:	push   edx
10001a9c:	dec    edi
10001a9d:	push   edx
10001a9e:	add    BYTE PTR [eax],al
10001aa0:	inc    ebp
10001aa1:	pop    edi
10001aa2:	dec    eax
10001aa3:	inc    ecx
10001aa4:	dec    esi
10001aa5:	inc    esp
10001aa6:	dec    esp
10001aa7:	inc    ebp
10001aa8:	add    BYTE PTR [eax],al
10001aaa:	add    BYTE PTR [eax],al
10001aac:	inc    ebp
10001aad:	pop    edi
10001aae:	dec    edi
10001aaf:	push   ebp
10001ab0:	push   esp
10001ab1:	dec    edi
10001ab2:	inc    esi
10001ab3:	dec    ebp
10001ab4:	inc    ebp
10001ab5:	dec    ebp
10001ab6:	dec    edi
10001ab7:	push   edx
10001ab8:	pop    ecx
10001ab9:	add    BYTE PTR [eax],al
10001abb:	add    BYTE PTR [ebp+0x5f],al
10001abe:	dec    ecx
10001abf:	dec    esi
10001ac0:	push   esi
10001ac1:	inc    ecx
10001ac2:	dec    esp
10001ac3:	dec    ecx
10001ac4:	inc    esp
10001ac5:	inc    ecx
10001ac6:	push   edx
10001ac7:	inc    edi
10001ac8:	add    BYTE PTR [eax],al
10001aca:	add    BYTE PTR [eax],al
10001acc:	inc    ebx
10001acd:	dec    edi
10001ace:	pop    edi
10001acf:	inc    ebp
10001ad0:	pop    edi
10001ad1:	inc    ebx
10001ad2:	dec    esp
10001ad3:	inc    ecx
10001ad4:	push   ebx
10001ad5:	push   ebx
10001ad6:	pop    edi
10001ad7:	inc    ebx
10001ad8:	push   edx
10001ad9:	inc    ebp
10001ada:	inc    ecx
10001adb:	push   esp
10001adc:	inc    ebp
10001add:	pop    edi
10001ade:	inc    esi
10001adf:	inc    ecx
10001ae0:	dec    ecx
10001ae1:	dec    esp
10001ae2:	inc    ebp
10001ae3:	inc    esp
10001ae4:	add    BYTE PTR [eax],al
10001ae6:	add    BYTE PTR [eax],al
10001ae8:	inc    ebp
10001ae9:	pop    edi
10001aea:	inc    ecx
10001aeb:	inc    ebx
10001aec:	inc    ebx
10001aed:	inc    ebp
10001aee:	push   ebx
10001aef:	push   ebx
10001af0:	inc    esp
10001af1:	inc    ebp
10001af2:	dec    esi
10001af3:	dec    ecx
10001af4:	inc    ebp
10001af5:	inc    esp
10001af6:	add    BYTE PTR [eax],al
10001af8:	inc    ebx
10001af9:	dec    edi
10001afa:	pop    edi
10001afb:	inc    ebp
10001afc:	pop    edi
10001afd:	push   edx
10001afe:	inc    ebp
10001aff:	dec    esp
10001b00:	inc    ebp
10001b01:	inc    ecx
10001b02:	push   ebx
10001b03:	inc    ebp
10001b04:	inc    esp
10001b05:	add    BYTE PTR [eax],al
10001b07:	add    BYTE PTR [ebx+0x4f],al
10001b0a:	pop    edi
10001b0b:	inc    ebp
10001b0c:	pop    edi
10001b0d:	inc    ecx
10001b0e:	push   eax
10001b0f:	push   eax
10001b10:	inc    esp
10001b11:	dec    ecx
10001b12:	inc    esp
10001b13:	dec    esi
10001b14:	push   esp
10001b15:	push   edx
10001b16:	inc    ebp
10001b17:	inc    edi
10001b18:	add    BYTE PTR [eax],al
10001b1a:	add    BYTE PTR [eax],al
10001b1c:	inc    ebx
10001b1d:	dec    edi
10001b1e:	pop    edi
10001b1f:	inc    ebp
10001b20:	pop    edi
10001b21:	dec    edi
10001b22:	inc    edx
10001b23:	dec    edx
10001b24:	dec    esi
10001b25:	dec    edi
10001b26:	push   esp
10001b27:	inc    ebx
10001b28:	dec    edi
10001b29:	dec    esi
10001b2a:	dec    esi
10001b2b:	inc    ebp
10001b2c:	inc    ebx
10001b2d:	push   esp
10001b2e:	inc    ebp
10001b2f:	inc    esp
10001b30:	add    BYTE PTR [eax],al
10001b32:	add    BYTE PTR [eax],al
10001b34:	inc    ebx
10001b35:	dec    edi
10001b36:	pop    edi
10001b37:	inc    ebp
10001b38:	pop    edi
10001b39:	dec    edi
10001b3a:	inc    edx
10001b3b:	dec    edx
10001b3c:	dec    ecx
10001b3d:	push   ebx
10001b3e:	push   edx
10001b3f:	inc    ebp
10001b40:	inc    edi
10001b41:	add    BYTE PTR [eax],al
10001b43:	add    BYTE PTR [ebx+0x4f],al
10001b46:	pop    edi
10001b47:	inc    ebp
10001b48:	pop    edi
10001b49:	dec    edi
10001b4a:	inc    edx
10001b4b:	dec    edx
10001b4c:	dec    esi
10001b4d:	dec    edi
10001b4e:	push   esp
10001b4f:	push   edx
10001b50:	inc    ebp
10001b51:	inc    edi
10001b52:	add    BYTE PTR [eax],al
10001b54:	inc    ebx
10001b55:	dec    edi
10001b56:	pop    edi
10001b57:	inc    ebp
10001b58:	pop    edi
10001b59:	push   edi
10001b5a:	push   edx
10001b5b:	dec    edi
10001b5c:	dec    esi
10001b5d:	inc    edi
10001b5e:	dec    edi
10001b5f:	push   ebx
10001b60:	inc    esi
10001b61:	dec    edi
10001b62:	push   edx
10001b63:	inc    ecx
10001b64:	push   eax
10001b65:	push   eax
10001b66:	add    BYTE PTR [eax],al
10001b68:	inc    ebx
10001b69:	dec    edi
10001b6a:	pop    edi
10001b6b:	inc    ebp
10001b6c:	pop    edi
10001b6d:	inc    ebp
10001b6e:	push   edx
10001b6f:	push   edx
10001b70:	dec    edi
10001b71:	push   edx
10001b72:	dec    ecx
10001b73:	dec    esi
10001b74:	inc    esp
10001b75:	dec    esp
10001b76:	dec    esp
10001b77:	add    BYTE PTR [ebx+0x4f],al
10001b7a:	pop    edi
10001b7b:	inc    ebp
10001b7c:	pop    edi
10001b7d:	inc    esp
10001b7e:	dec    esp
10001b7f:	dec    esp
10001b80:	dec    esi
10001b81:	dec    edi
10001b82:	push   esp
10001b83:	inc    esi
10001b84:	dec    edi
10001b85:	push   ebp
10001b86:	dec    esi
10001b87:	inc    esp
10001b88:	add    BYTE PTR [eax],al
10001b8a:	add    BYTE PTR [eax],al
10001b8c:	inc    ebx
10001b8d:	dec    edi
10001b8e:	pop    edi
10001b8f:	inc    ebp
10001b90:	pop    edi
10001b91:	inc    ebp
10001b92:	push   edx
10001b93:	push   edx
10001b94:	dec    edi
10001b95:	push   edx
10001b96:	dec    ecx
10001b97:	dec    esi
10001b98:	inc    ecx
10001b99:	push   eax
10001b9a:	push   eax
10001b9b:	add    BYTE PTR [ebx+0x4f],al
10001b9e:	pop    edi
10001b9f:	inc    ebp
10001ba0:	pop    edi
10001ba1:	inc    ecx
10001ba2:	push   eax
10001ba3:	push   eax
10001ba4:	push   ebx
10001ba5:	dec    ecx
10001ba6:	dec    esi
10001ba7:	inc    edi
10001ba8:	dec    esp
10001ba9:	inc    ebp
10001baa:	push   ebp
10001bab:	push   ebx
10001bac:	inc    ebp
10001bad:	add    BYTE PTR [eax],al
10001baf:	add    BYTE PTR [ebx+0x4f],al
10001bb2:	pop    edi
10001bb3:	inc    ebp
10001bb4:	pop    edi
10001bb5:	inc    ecx
10001bb6:	push   eax
10001bb7:	push   eax
10001bb8:	dec    esi
10001bb9:	dec    edi
10001bba:	push   esp
10001bbb:	inc    esi
10001bbc:	dec    edi
10001bbd:	push   ebp
10001bbe:	dec    esi
10001bbf:	inc    esp
10001bc0:	add    BYTE PTR [eax],al
10001bc2:	add    BYTE PTR [eax],al
10001bc4:	inc    ebx
10001bc5:	dec    edi
10001bc6:	pop    edi
10001bc7:	inc    ebp
10001bc8:	pop    edi
10001bc9:	dec    ecx
10001bca:	dec    ecx
10001bcb:	inc    esp
10001bcc:	push   ebx
10001bcd:	push   esp
10001bce:	push   edx
10001bcf:	dec    ecx
10001bd0:	dec    esi
10001bd1:	inc    edi
10001bd2:	add    BYTE PTR [eax],al
10001bd4:	inc    ebx
10001bd5:	dec    edi
10001bd6:	pop    edi
10001bd7:	inc    ebp
10001bd8:	pop    edi
10001bd9:	inc    ebx
10001bda:	dec    esp
10001bdb:	inc    ecx
10001bdc:	push   ebx
10001bdd:	push   ebx
10001bde:	push   ebx
10001bdf:	push   esp
10001be0:	push   edx
10001be1:	dec    ecx
10001be2:	dec    esi
10001be3:	inc    edi
10001be4:	add    BYTE PTR [eax],al
10001be6:	add    BYTE PTR [eax],al
10001be8:	inc    ebx
10001be9:	dec    edi
10001bea:	pop    edi
10001beb:	inc    ebp
10001bec:	pop    edi
10001bed:	inc    ebx
10001bee:	inc    ecx
10001bef:	dec    esi
10001bf0:	push   esp
10001bf1:	inc    esp
10001bf2:	inc    ebp
10001bf3:	push   esp
10001bf4:	inc    ebp
10001bf5:	push   edx
10001bf6:	dec    ebp
10001bf7:	dec    ecx
10001bf8:	dec    esi
10001bf9:	inc    ebp
10001bfa:	inc    ebx
10001bfb:	dec    esp
10001bfc:	inc    ecx
10001bfd:	push   ebx
10001bfe:	push   ebx
10001bff:	add    BYTE PTR [ebx+0x4f],al
10001c02:	pop    edi
10001c03:	inc    ebp
10001c04:	pop    edi
10001c05:	inc    ecx
10001c06:	dec    esp
10001c07:	push   edx
10001c08:	inc    ebp
10001c09:	inc    ecx
10001c0a:	inc    esp
10001c0b:	pop    ecx
10001c0c:	dec    ecx
10001c0d:	dec    esi
10001c0e:	dec    ecx
10001c0f:	push   esp
10001c10:	dec    ecx
10001c11:	inc    ecx
10001c12:	dec    esp
10001c13:	dec    ecx
10001c14:	pop    edx
10001c15:	inc    ebp
10001c16:	inc    esp
10001c17:	add    BYTE PTR [ebx+0x4f],al
10001c1a:	pop    edi
10001c1b:	inc    ebp
10001c1c:	pop    edi
10001c1d:	dec    esi
10001c1e:	dec    edi
10001c1f:	push   esp
10001c20:	dec    ecx
10001c21:	dec    esi
10001c22:	dec    ecx
10001c23:	push   esp
10001c24:	dec    ecx
10001c25:	inc    ecx
10001c26:	dec    esp
10001c27:	dec    ecx
10001c28:	pop    edx
10001c29:	inc    ebp
10001c2a:	inc    esp
10001c2b:	add    BYTE PTR [ebp+0x4b],cl
10001c2e:	pop    edi
10001c2f:	inc    ebp
10001c30:	pop    edi
10001c31:	inc    ebp
10001c32:	dec    esi
10001c33:	push   ebp
10001c34:	dec    ebp
10001c35:	inc    ebp
10001c36:	push   edx
10001c37:	inc    ecx
10001c38:	push   esp
10001c39:	dec    ecx
10001c3a:	dec    edi
10001c3b:	dec    esi
10001c3c:	pop    edi
10001c3d:	inc    esi
10001c3e:	inc    ecx
10001c3f:	dec    ecx
10001c40:	dec    esp
10001c41:	inc    ebp
10001c42:	inc    esp
10001c43:	add    BYTE PTR [ebp+0x4b],cl
10001c46:	pop    edi
10001c47:	inc    ebp
10001c48:	pop    edi
10001c49:	dec    esi
10001c4a:	dec    edi
10001c4b:	push   eax
10001c4c:	push   edx
10001c4d:	inc    ebp
10001c4e:	inc    esi
10001c4f:	dec    ecx
10001c50:	pop    eax
10001c51:	add    BYTE PTR [eax],al
10001c53:	add    BYTE PTR [ebp+0x4b],cl
10001c56:	pop    edi
10001c57:	inc    ebp
10001c58:	pop    edi
10001c59:	dec    esi
10001c5a:	dec    edi
10001c5b:	push   ebx
10001c5c:	push   esp
10001c5d:	dec    edi
10001c5e:	push   edx
10001c5f:	inc    ecx
10001c60:	inc    edi
10001c61:	inc    ebp
10001c62:	add    BYTE PTR [eax],al
10001c64:	dec    ebp
10001c65:	dec    ebx
10001c66:	pop    edi
10001c67:	inc    ebp
10001c68:	pop    edi
10001c69:	dec    esi
10001c6a:	dec    edi
10001c6b:	dec    ecx
10001c6c:	dec    esi
10001c6d:	push   esi
10001c6e:	inc    ebp
10001c6f:	push   edx
10001c70:	push   ebx
10001c71:	inc    ebp
10001c72:	add    BYTE PTR [eax],al
10001c74:	dec    ebp
10001c75:	dec    ebx
10001c76:	pop    edi
10001c77:	inc    ebp
10001c78:	pop    edi
10001c79:	dec    ebp
10001c7a:	push   ebp
10001c7b:	push   ebx
10001c7c:	push   esp
10001c7d:	inc    edx
10001c7e:	dec    edi
10001c7f:	push   esp
10001c80:	dec    eax
10001c81:	inc    ebp
10001c82:	push   edx
10001c83:	push   ebp
10001c84:	push   ebx
10001c85:	inc    ebp
10001c86:	push   edx
10001c87:	add    BYTE PTR [ebp+0x4b],cl
10001c8a:	pop    edi
10001c8b:	inc    ebp
10001c8c:	pop    edi
10001c8d:	inc    ebx
10001c8e:	inc    ecx
10001c8f:	dec    esi
10001c90:	push   esp
10001c91:	dec    edi
10001c92:	push   eax
10001c93:	inc    ebp
10001c94:	dec    esi
10001c95:	inc    esi
10001c96:	dec    ecx
10001c97:	dec    esp
10001c98:	inc    ebp
10001c99:	add    BYTE PTR [eax],al
10001c9b:	add    BYTE PTR [ebp+0x4b],cl
10001c9e:	pop    edi
10001c9f:	inc    ebp
10001ca0:	pop    edi
10001ca1:	dec    esi
10001ca2:	dec    edi
10001ca3:	push   esp
10001ca4:	inc    edx
10001ca5:	dec    edi
10001ca6:	push   ebp
10001ca7:	dec    esi
10001ca8:	inc    esp
10001ca9:	add    BYTE PTR [eax],al
10001cab:	add    BYTE PTR [ebp+0x4b],cl
10001cae:	pop    edi
10001caf:	inc    ebp
10001cb0:	pop    edi
10001cb1:	dec    esi
10001cb2:	dec    edi
10001cb3:	push   esp
10001cb4:	inc    edx
10001cb5:	dec    ecx
10001cb6:	dec    esi
10001cb7:	inc    esp
10001cb8:	inc    ecx
10001cb9:	inc    edx
10001cba:	dec    esp
10001cbb:	inc    ebp
10001cbc:	add    BYTE PTR [eax],al
10001cbe:	add    BYTE PTR [eax],al
10001cc0:	dec    ebp
10001cc1:	dec    ebx
10001cc2:	pop    edi
10001cc3:	inc    ebp
10001cc4:	pop    edi
10001cc5:	dec    ecx
10001cc6:	dec    esi
10001cc7:	push   esp
10001cc8:	inc    ebp
10001cc9:	push   edx
10001cca:	dec    ebp
10001ccb:	inc    ebp
10001ccc:	inc    esp
10001ccd:	dec    ecx
10001cce:	inc    ecx
10001ccf:	push   esp
10001cd0:	inc    ebp
10001cd1:	dec    ecx
10001cd2:	dec    esi
10001cd3:	push   esp
10001cd4:	inc    ebp
10001cd5:	push   edx
10001cd6:	inc    esi
10001cd7:	inc    ecx
10001cd8:	inc    ebx
10001cd9:	inc    ebp
10001cda:	dec    esi
10001cdb:	dec    edi
10001cdc:	push   esp
10001cdd:	push   ebx
10001cde:	push   ebp
10001cdf:	push   eax
10001ce0:	push   eax
10001ce1:	dec    edi
10001ce2:	push   edx
10001ce3:	push   esp
10001ce4:	inc    ebp
10001ce5:	inc    esp
10001ce6:	add    BYTE PTR [eax],al
10001ce8:	dec    ebp
10001ce9:	dec    ebx
10001cea:	pop    edi
10001ceb:	inc    ebp
10001cec:	pop    edi
10001ced:	dec    ecx
10001cee:	dec    esi
10001cef:	push   esi
10001cf0:	inc    ecx
10001cf1:	dec    esp
10001cf2:	dec    ecx
10001cf3:	inc    esp
10001cf4:	inc    ebp
10001cf5:	pop    eax
10001cf6:	push   esp
10001cf7:	inc    ebp
10001cf8:	dec    esi
10001cf9:	push   ebx
10001cfa:	dec    ecx
10001cfb:	dec    edi
10001cfc:	dec    esi
10001cfd:	add    BYTE PTR [eax],al
10001cff:	add    BYTE PTR [ebp+0x4b],cl
10001d02:	pop    edi
10001d03:	inc    ebp
10001d04:	pop    edi
10001d05:	dec    esi
10001d06:	dec    edi
10001d07:	dec    edi
10001d08:	inc    edx
10001d09:	dec    edx
10001d0a:	inc    ebp
10001d0b:	inc    ebx
10001d0c:	push   esp
10001d0d:	add    BYTE PTR [eax],al
10001d0f:	add    BYTE PTR [ebp+0x4b],cl
10001d12:	pop    edi
10001d13:	inc    ebp
10001d14:	pop    edi
10001d15:	push   ebx
10001d16:	pop    ecx
10001d17:	dec    esi
10001d18:	push   esp
10001d19:	inc    ecx
10001d1a:	pop    eax
10001d1b:	add    BYTE PTR [ebp+0x4b],cl
10001d1e:	pop    edi
10001d1f:	inc    ebp
10001d20:	pop    edi
10001d21:	push   ebp
10001d22:	dec    esi
10001d23:	inc    ecx
10001d24:	push   esi
10001d25:	inc    ecx
10001d26:	dec    ecx
10001d27:	dec    esp
10001d28:	inc    ecx
10001d29:	inc    edx
10001d2a:	dec    esp
10001d2b:	inc    ebp
10001d2c:	add    BYTE PTR [eax],al
10001d2e:	add    BYTE PTR [eax],al
10001d30:	dec    ebp
10001d31:	dec    ebx
10001d32:	pop    edi
10001d33:	inc    ebp
10001d34:	pop    edi
10001d35:	dec    esi
10001d36:	inc    ebp
10001d37:	inc    ebp
10001d38:	inc    esp
10001d39:	inc    edi
10001d3a:	inc    ebp
10001d3b:	dec    esi
10001d3c:	inc    ebp
10001d3d:	push   edx
10001d3e:	dec    ecx
10001d3f:	inc    ebx
10001d40:	add    BYTE PTR [eax],al
10001d42:	add    BYTE PTR [eax],al
10001d44:	dec    ebp
10001d45:	dec    ebx
10001d46:	pop    edi
10001d47:	inc    ebp
10001d48:	pop    edi
10001d49:	inc    ebp
10001d4a:	pop    eax
10001d4b:	inc    ebx
10001d4c:	inc    ebp
10001d4d:	inc    ebp
10001d4e:	inc    esp
10001d4f:	inc    ebp
10001d50:	inc    esp
10001d51:	inc    esp
10001d52:	inc    ebp
10001d53:	inc    ecx
10001d54:	inc    esp
10001d55:	dec    esp
10001d56:	dec    ecx
10001d57:	dec    esi
10001d58:	inc    ebp
10001d59:	add    BYTE PTR [eax],al
10001d5b:	add    BYTE PTR [ebp+0x4b],cl
10001d5e:	pop    edi
10001d5f:	inc    ebp
10001d60:	pop    edi
10001d61:	inc    ebx
10001d62:	dec    edi
10001d63:	dec    esi
10001d64:	dec    esi
10001d65:	inc    ebp
10001d66:	inc    ebx
10001d67:	push   esp
10001d68:	dec    ebp
10001d69:	inc    ecx
10001d6a:	dec    esi
10001d6b:	push   ebp
10001d6c:	inc    ecx
10001d6d:	dec    esp
10001d6e:	dec    esp
10001d6f:	pop    ecx
10001d70:	add    BYTE PTR [eax],al
10001d72:	add    BYTE PTR [eax],al
10001d74:	inc    ebx
10001d75:	dec    esp
10001d76:	dec    ecx
10001d77:	push   eax
10001d78:	inc    edx
10001d79:	push   edx
10001d7a:	inc    esp
10001d7b:	pop    edi
10001d7c:	inc    ebp
10001d7d:	pop    edi
10001d7e:	inc    ebx
10001d7f:	inc    ecx
10001d80:	dec    esi
10001d81:	push   esp
10001d82:	pop    edi
10001d83:	inc    ebx
10001d84:	dec    esp
10001d85:	dec    edi
10001d86:	push   ebx
10001d87:	inc    ebp
10001d88:	add    BYTE PTR [eax],al
10001d8a:	add    BYTE PTR [eax],al
10001d8c:	inc    ebx
10001d8d:	dec    edi
10001d8e:	dec    esi
10001d8f:	push   esi
10001d90:	inc    ebp
10001d91:	push   edx
10001d92:	push   esp
10001d93:	xor    DWORD PTR [eax],esi
10001d95:	pop    edi
10001d96:	inc    ebp
10001d97:	pop    edi
10001d98:	push   ebx
10001d99:	push   esp
10001d9a:	inc    edi
10001d9b:	pop    edi
10001d9c:	inc    esp
10001d9d:	dec    ecx
10001d9e:	inc    edx
10001d9f:	pop    edi
10001da0:	push   esp
10001da1:	dec    edi
10001da2:	pop    edi
10001da3:	inc    edx
10001da4:	dec    ecx
10001da5:	push   esp
10001da6:	dec    ebp
10001da7:	inc    ecx
10001da8:	push   eax
10001da9:	add    BYTE PTR [eax],al
10001dab:	add    BYTE PTR [ebx+0x4c],al
10001dae:	dec    ecx
10001daf:	push   eax
10001db0:	inc    edx
10001db1:	push   edx
10001db2:	inc    esp
10001db3:	pop    edi
10001db4:	inc    ebp
10001db5:	pop    edi
10001db6:	inc    ebx
10001db7:	inc    ecx
10001db8:	dec    esi
10001db9:	push   esp
10001dba:	pop    edi
10001dbb:	dec    edi
10001dbc:	push   eax
10001dbd:	inc    ebp
10001dbe:	dec    esi
10001dbf:	add    BYTE PTR [ebx+0x4c],al
10001dc2:	dec    ecx
10001dc3:	push   eax
10001dc4:	inc    edx
10001dc5:	push   edx
10001dc6:	inc    esp
10001dc7:	pop    edi
10001dc8:	inc    ebp
10001dc9:	pop    edi
10001dca:	inc    ebx
10001dcb:	inc    ecx
10001dcc:	dec    esi
10001dcd:	push   esp
10001dce:	pop    edi
10001dcf:	inc    ebp
10001dd0:	dec    ebp
10001dd1:	push   eax
10001dd2:	push   esp
10001dd3:	pop    ecx
10001dd4:	add    BYTE PTR [eax],al
10001dd6:	add    BYTE PTR [eax],al
10001dd8:	inc    ebx
10001dd9:	dec    esp
10001dda:	dec    ecx
10001ddb:	push   eax
10001ddc:	inc    edx
10001ddd:	push   edx
10001dde:	inc    esp
10001ddf:	pop    edi
10001de0:	inc    ebp
10001de1:	pop    edi
10001de2:	inc    ebx
10001de3:	inc    ecx
10001de4:	dec    esi
10001de5:	push   esp
10001de6:	pop    edi
10001de7:	push   ebx
10001de8:	inc    ebp
10001de9:	push   esp
10001dea:	add    BYTE PTR [eax],al
10001dec:	inc    ebx
10001ded:	dec    esp
10001dee:	dec    ecx
10001def:	push   eax
10001df0:	inc    edx
10001df1:	push   edx
10001df2:	inc    esp
10001df3:	pop    edi
10001df4:	inc    ebp
10001df5:	pop    edi
10001df6:	inc    edx
10001df7:	inc    ecx
10001df8:	inc    esp
10001df9:	pop    edi
10001dfa:	inc    esp
10001dfb:	inc    ecx
10001dfc:	push   esp
10001dfd:	inc    ecx
10001dfe:	add    BYTE PTR [eax],al
10001e00:	inc    ebx
10001e01:	dec    edi
10001e02:	dec    esi
10001e03:	push   esi
10001e04:	inc    ebp
10001e05:	push   edx
10001e06:	push   esp
10001e07:	xor    DWORD PTR [eax],esi
10001e09:	pop    edi
10001e0a:	inc    ebp
10001e0b:	pop    edi
10001e0c:	push   ebx
10001e0d:	push   esp
10001e0e:	inc    edi
10001e0f:	pop    edi
10001e10:	dec    esi
10001e11:	dec    edi
10001e12:	pop    edi
10001e13:	push   ebx
10001e14:	push   esp
10001e15:	inc    esp
10001e16:	pop    edi
10001e17:	push   ebx
10001e18:	push   esp
10001e19:	push   edx
10001e1a:	inc    ebp
10001e1b:	inc    ecx
10001e1c:	dec    ebp
10001e1d:	add    BYTE PTR [eax],al
10001e1f:	add    BYTE PTR [ecx+0x4e],cl
10001e22:	push   eax
10001e23:	dec    esp
10001e24:	inc    ecx
10001e25:	inc    ebx
10001e26:	inc    ebp
10001e27:	pop    edi
10001e28:	inc    ebp
10001e29:	pop    edi
10001e2a:	dec    esi
10001e2b:	dec    edi
10001e2c:	push   esp
10001e2d:	dec    edi
10001e2e:	dec    edi
10001e2f:	dec    esp
10001e30:	push   ebx
10001e31:	push   eax
10001e32:	inc    ecx
10001e33:	inc    ebx
10001e34:	inc    ebp
10001e35:	add    BYTE PTR [eax],al
10001e37:	add    BYTE PTR [ebx+0x4f],al
10001e3a:	dec    esi
10001e3b:	push   esi
10001e3c:	inc    ebp
10001e3d:	push   edx
10001e3e:	push   esp
10001e3f:	xor    DWORD PTR [eax],esi
10001e41:	pop    edi
10001e42:	inc    ebp
10001e43:	pop    edi
10001e44:	dec    edi
10001e45:	dec    esp
10001e46:	inc    ebp
10001e47:	push   ebx
10001e48:	push   esp
10001e49:	push   edx
10001e4a:	inc    ebp
10001e4b:	inc    ecx
10001e4c:	dec    ebp
10001e4d:	pop    edi
10001e4e:	inc    edi
10001e4f:	inc    ebp
10001e50:	push   esp
10001e51:	add    BYTE PTR [eax],al
10001e53:	add    BYTE PTR [ebx+0x4f],al
10001e56:	dec    esi
10001e57:	push   esi
10001e58:	inc    ebp
10001e59:	push   edx
10001e5a:	push   esp
10001e5b:	xor    DWORD PTR [eax],esi
10001e5d:	pop    edi
10001e5e:	inc    ebp
10001e5f:	pop    edi
10001e60:	dec    edi
10001e61:	dec    esp
10001e62:	inc    ebp
10001e63:	push   ebx
10001e64:	push   esp
10001e65:	push   edx
10001e66:	inc    ebp
10001e67:	inc    ecx
10001e68:	dec    ebp
10001e69:	pop    edi
10001e6a:	push   eax
10001e6b:	push   ebp
10001e6c:	push   esp
10001e6d:	add    BYTE PTR [eax],al
10001e6f:	add    BYTE PTR [ebx+0x4f],al
10001e72:	dec    esi
10001e73:	push   esi
10001e74:	inc    ebp
10001e75:	push   edx
10001e76:	push   esp
10001e77:	xor    DWORD PTR [eax],esi
10001e79:	pop    edi
10001e7a:	inc    ebp
10001e7b:	pop    edi
10001e7c:	dec    edi
10001e7d:	dec    esp
10001e7e:	inc    ebp
10001e7f:	push   ebx
10001e80:	push   esp
10001e81:	push   edx
10001e82:	inc    ebp
10001e83:	inc    ecx
10001e84:	dec    ebp
10001e85:	pop    edi
10001e86:	inc    esi
10001e87:	dec    ebp
10001e88:	push   esp
10001e89:	add    BYTE PTR [eax],al
10001e8b:	add    BYTE PTR [ebx+0x4f],al
10001e8e:	dec    esi
10001e8f:	push   esi
10001e90:	inc    ebp
10001e91:	push   edx
10001e92:	push   esp
10001e93:	xor    DWORD PTR [eax],esi
10001e95:	pop    edi
10001e96:	inc    ebp
10001e97:	pop    edi
10001e98:	dec    edi
10001e99:	dec    esp
10001e9a:	inc    ebp
10001e9b:	push   ebx
10001e9c:	push   esp
10001e9d:	push   edx
10001e9e:	inc    ebp
10001e9f:	inc    ecx
10001ea0:	dec    ebp
10001ea1:	pop    edi
10001ea2:	inc    edx
10001ea3:	dec    ecx
10001ea4:	push   esp
10001ea5:	dec    ebp
10001ea6:	inc    ecx
10001ea7:	push   eax
10001ea8:	pop    edi
10001ea9:	push   esp
10001eaa:	dec    edi
10001eab:	pop    edi
10001eac:	inc    esp
10001ead:	dec    ecx
10001eae:	inc    edx
10001eaf:	add    BYTE PTR [ebx+0x4f],al
10001eb2:	dec    esi
10001eb3:	push   esi
10001eb4:	inc    ebp
10001eb5:	push   edx
10001eb6:	push   esp
10001eb7:	xor    DWORD PTR [eax],esi
10001eb9:	pop    edi
10001eba:	inc    ebp
10001ebb:	pop    edi
10001ebc:	push   ebx
10001ebd:	push   esp
10001ebe:	inc    edi
10001ebf:	pop    edi
10001ec0:	inc    esi
10001ec1:	dec    ebp
10001ec2:	push   esp
10001ec3:	add    BYTE PTR [ecx+0x4e],cl
10001ec6:	push   eax
10001ec7:	dec    esp
10001ec8:	inc    ecx
10001ec9:	inc    ebx
10001eca:	inc    ebp
10001ecb:	pop    edi
10001ecc:	inc    ebp
10001ecd:	pop    edi
10001ece:	dec    esi
10001ecf:	dec    edi
10001ed0:	push   esp
10001ed1:	push   ebp
10001ed2:	dec    esi
10001ed3:	inc    esp
10001ed4:	dec    edi
10001ed5:	inc    ecx
10001ed6:	inc    edx
10001ed7:	dec    esp
10001ed8:	inc    ebp
10001ed9:	add    BYTE PTR [eax],al
10001edb:	add    BYTE PTR [edx+0x45],dl
10001ede:	inc    edi
10001edf:	inc    esp
10001ee0:	inc    edx
10001ee1:	pop    edi
10001ee2:	inc    ebp
10001ee3:	pop    edi
10001ee4:	dec    ebx
10001ee5:	inc    ebp
10001ee6:	pop    ecx
10001ee7:	dec    ebp
10001ee8:	dec    ecx
10001ee9:	push   ebx
10001eea:	push   ebx
10001eeb:	dec    ecx
10001eec:	dec    esi
10001eed:	inc    edi
10001eee:	add    BYTE PTR [eax],al
10001ef0:	push   edx
10001ef1:	inc    ebp
10001ef2:	inc    edi
10001ef3:	inc    esp
10001ef4:	inc    edx
10001ef5:	pop    edi
10001ef6:	inc    ebp
10001ef7:	pop    edi
10001ef8:	dec    ecx
10001ef9:	dec    esi
10001efa:	push   esi
10001efb:	inc    ecx
10001efc:	dec    esp
10001efd:	dec    ecx
10001efe:	inc    esp
10001eff:	push   esi
10001f00:	inc    ecx
10001f01:	dec    esp
10001f02:	push   ebp
10001f03:	inc    ebp
10001f04:	add    BYTE PTR [eax],al
10001f06:	add    BYTE PTR [eax],al
10001f08:	push   edx
10001f09:	inc    ebp
10001f0a:	inc    edi
10001f0b:	inc    esp
10001f0c:	inc    edx
10001f0d:	pop    edi
10001f0e:	inc    ebp
10001f0f:	pop    edi
10001f10:	inc    ebx
10001f11:	dec    esp
10001f12:	inc    ecx
10001f13:	push   ebx
10001f14:	push   ebx
10001f15:	dec    esi
10001f16:	dec    edi
10001f17:	push   esp
10001f18:	push   edx
10001f19:	inc    ebp
10001f1a:	inc    edi
10001f1b:	add    BYTE PTR [ebx+0x41],al
10001f1e:	inc    ebx
10001f1f:	dec    eax
10001f20:	inc    ebp
10001f21:	pop    edi
10001f22:	inc    ebp
10001f23:	pop    edi
10001f24:	dec    esi
10001f25:	dec    edi
10001f26:	inc    ebx
10001f27:	inc    ecx
10001f28:	inc    ebx
10001f29:	dec    eax
10001f2a:	inc    ebp
10001f2b:	pop    edi
10001f2c:	push   ebp
10001f2d:	push   eax
10001f2e:	inc    esp
10001f2f:	inc    ecx
10001f30:	push   esp
10001f31:	inc    ebp
10001f32:	inc    esp
10001f33:	add    BYTE PTR [edi+0x4c],cl
10001f36:	inc    ebp
10001f37:	dec    edi
10001f38:	inc    edx
10001f39:	dec    edx
10001f3a:	pop    edi
10001f3b:	inc    ebp
10001f3c:	pop    edi
10001f3d:	dec    esi
10001f3e:	dec    edi
10001f3f:	push   esi
10001f40:	inc    ebp
10001f41:	push   edx
10001f42:	inc    edx
10001f43:	push   ebx
10001f44:	add    BYTE PTR [eax],al
10001f46:	add    BYTE PTR [eax],al
10001f48:	push   edx
10001f49:	inc    ebp
10001f4a:	inc    edi
10001f4b:	inc    esp
10001f4c:	inc    edx
10001f4d:	pop    edi
10001f4e:	inc    ebp
10001f4f:	pop    edi
10001f50:	push   edi
10001f51:	push   edx
10001f52:	dec    ecx
10001f53:	push   esp
10001f54:	inc    ebp
10001f55:	push   edx
10001f56:	inc    ebp
10001f57:	inc    edi
10001f58:	inc    esp
10001f59:	inc    edx
10001f5a:	add    BYTE PTR [eax],al
10001f5c:	inc    esp
10001f5d:	push   edx
10001f5e:	inc    ecx
10001f5f:	inc    edi
10001f60:	inc    esp
10001f61:	push   edx
10001f62:	dec    edi
10001f63:	push   eax
10001f64:	pop    edi
10001f65:	inc    ebp
10001f66:	pop    edi
10001f67:	inc    ecx
10001f68:	dec    esp
10001f69:	push   edx
10001f6a:	inc    ebp
10001f6b:	inc    ecx
10001f6c:	inc    esp
10001f6d:	pop    ecx
10001f6e:	push   edx
10001f6f:	inc    ebp
10001f70:	inc    edi
10001f71:	dec    ecx
10001f72:	push   ebx
10001f73:	push   esp
10001f74:	inc    ebp
10001f75:	push   edx
10001f76:	inc    ebp
10001f77:	inc    esp
10001f78:	add    BYTE PTR [eax],al
10001f7a:	add    BYTE PTR [eax],al
10001f7c:	inc    esp
10001f7d:	push   edx
10001f7e:	inc    ecx
10001f7f:	inc    edi
10001f80:	inc    esp
10001f81:	push   edx
10001f82:	dec    edi
10001f83:	push   eax
10001f84:	pop    edi
10001f85:	inc    ebp
10001f86:	pop    edi
10001f87:	dec    ecx
10001f88:	dec    esi
10001f89:	push   esi
10001f8a:	inc    ecx
10001f8b:	dec    esp
10001f8c:	dec    ecx
10001f8d:	inc    esp
10001f8e:	dec    eax
10001f8f:	push   edi
10001f90:	dec    esi
10001f91:	inc    esp
10001f92:	add    BYTE PTR [eax],al
10001f94:	inc    ebx
10001f95:	dec    esp
10001f96:	inc    ecx
10001f97:	push   ebx
10001f98:	push   ebx
10001f99:	pop    edi
10001f9a:	inc    ebp
10001f9b:	pop    edi
10001f9c:	dec    esi
10001f9d:	dec    edi
10001f9e:	inc    ecx
10001f9f:	inc    edi
10001fa0:	inc    edi
10001fa1:	push   edx
10001fa2:	inc    ebp
10001fa3:	inc    edi
10001fa4:	inc    ecx
10001fa5:	push   esp
10001fa6:	dec    ecx
10001fa7:	dec    edi
10001fa8:	dec    esi
10001fa9:	add    BYTE PTR [eax],al
10001fab:	add    BYTE PTR [ebx+0x4c],al
10001fae:	inc    ecx
10001faf:	push   ebx
10001fb0:	push   ebx
10001fb1:	pop    edi
10001fb2:	inc    ebp
10001fb3:	pop    edi
10001fb4:	inc    ebx
10001fb5:	dec    esp
10001fb6:	inc    ecx
10001fb7:	push   ebx
10001fb8:	push   ebx
10001fb9:	dec    esi
10001fba:	dec    edi
10001fbb:	push   esp
10001fbc:	inc    ecx
10001fbd:	push   esi
10001fbe:	inc    ecx
10001fbf:	dec    ecx
10001fc0:	dec    esp
10001fc1:	inc    ecx
10001fc2:	inc    edx
10001fc3:	dec    esp
10001fc4:	inc    ebp
10001fc5:	add    BYTE PTR [eax],al
10001fc7:	add    BYTE PTR [esi+0x49],dl
10001fca:	inc    ebp
10001fcb:	push   edi
10001fcc:	pop    edi
10001fcd:	inc    ebp
10001fce:	pop    edi
10001fcf:	inc    esp
10001fd0:	push   edx
10001fd1:	inc    ecx
10001fd2:	push   edi
10001fd3:	add    BYTE PTR [edx+0x45],dl
10001fd6:	inc    edi
10001fd7:	inc    esp
10001fd8:	inc    edx
10001fd9:	pop    edi
10001fda:	inc    ebp
10001fdb:	pop    edi
10001fdc:	push   edx
10001fdd:	inc    ebp
10001fde:	inc    ecx
10001fdf:	inc    esp
10001fe0:	push   edx
10001fe1:	inc    ebp
10001fe2:	inc    edi
10001fe3:	inc    esp
10001fe4:	inc    edx
10001fe5:	add    BYTE PTR [eax],al
10001fe7:	add    BYTE PTR [edx+edx*2+0x41],al
10001feb:	inc    edi
10001fec:	inc    esp
10001fed:	push   edx
10001fee:	dec    edi
10001fef:	push   eax
10001ff0:	pop    edi
10001ff1:	inc    ebp
10001ff2:	pop    edi
10001ff3:	dec    esi
10001ff4:	dec    edi
10001ff5:	push   esp
10001ff6:	push   edx
10001ff7:	inc    ebp
10001ff8:	inc    edi
10001ff9:	dec    ecx
10001ffa:	push   ebx
10001ffb:	push   esp
10001ffc:	inc    ebp
10001ffd:	push   edx
10001ffe:	inc    ebp
10001fff:	inc    esp
10002000:	add    BYTE PTR [eax],al
10002002:	add    BYTE PTR [eax],al
10002004:	inc    esp
10002005:	push   esi
10002006:	pop    edi
10002007:	inc    ebp
10002008:	pop    edi
10002009:	dec    esi
1000200a:	dec    edi
1000200b:	dec    ecx
1000200c:	push   esi
1000200d:	dec    ecx
1000200e:	inc    ebp
1000200f:	push   edi
10002010:	dec    edi
10002011:	inc    edx
10002012:	dec    edx
10002013:	inc    ebp
10002014:	inc    ebx
10002015:	push   esp
10002016:	add    BYTE PTR [eax],al
10002018:	inc    esp
10002019:	push   esi
1000201a:	pop    edi
1000201b:	inc    ebp
1000201c:	pop    edi
1000201d:	inc    esp
1000201e:	push   esi
1000201f:	push   esp
10002020:	inc    ecx
10002021:	push   edx
10002022:	inc    edi
10002023:	inc    ebp
10002024:	push   esp
10002025:	inc    esp
10002026:	inc    ebp
10002027:	push   esi
10002028:	dec    ecx
10002029:	inc    ebx
1000202a:	inc    ebp
1000202b:	pop    edi
1000202c:	push   ebx
1000202d:	dec    ecx
1000202e:	pop    edx
1000202f:	inc    ebp
10002030:	add    BYTE PTR [eax],al
10002032:	add    BYTE PTR [eax],al
10002034:	inc    esp
10002035:	push   esi
10002036:	pop    edi
10002037:	inc    ebp
10002038:	pop    edi
10002039:	inc    esp
1000203a:	push   esi
1000203b:	inc    ecx
1000203c:	push   ebx
1000203d:	push   eax
1000203e:	inc    ebp
1000203f:	inc    ebx
10002040:	push   esp
10002041:	add    BYTE PTR [eax],al
10002043:	add    BYTE PTR [esi+edx*2+0x5f],al
10002047:	inc    ebp
10002048:	pop    edi
10002049:	inc    ebx
1000204a:	dec    esp
1000204b:	dec    ecx
1000204c:	push   eax
1000204d:	inc    esi
1000204e:	dec    edi
1000204f:	push   edx
10002050:	dec    ebp
10002051:	inc    ecx
10002052:	push   esp
10002053:	add    BYTE PTR [esi+edx*2+0x5f],al
10002057:	inc    ebp
10002058:	pop    edi
10002059:	push   esp
1000205a:	pop    ecx
1000205b:	dec    ebp
1000205c:	inc    ebp
1000205d:	inc    esp
1000205e:	add    BYTE PTR [eax],al
10002060:	inc    esp
10002061:	push   esi
10002062:	pop    edi
10002063:	inc    ebp
10002064:	pop    edi
10002065:	dec    esp
10002066:	dec    ecx
10002067:	dec    esi
10002068:	inc    esp
10002069:	inc    ebp
1000206a:	pop    eax
1000206b:	add    BYTE PTR [esi+edx*2+0x5f],al
1000206f:	inc    ebp
10002070:	pop    edi
10002071:	push   ebx
10002072:	push   esp
10002073:	inc    ecx
10002074:	push   esp
10002075:	inc    esp
10002076:	inc    ecx
10002077:	push   esp
10002078:	inc    ecx
10002079:	add    BYTE PTR [eax],al
1000207b:	add    BYTE PTR [esi+edx*2+0x5f],al
1000207f:	inc    ebp
10002080:	pop    edi
10002081:	push   ebx
10002082:	push   esp
10002083:	inc    edi
10002084:	dec    ebp
10002085:	inc    ebp
10002086:	inc    esp
10002087:	dec    ecx
10002088:	push   ebp
10002089:	dec    ebp
1000208a:	add    BYTE PTR [eax],al
1000208c:	inc    esp
1000208d:	push   esi
1000208e:	pop    edi
1000208f:	inc    ebp
10002090:	pop    edi
10002091:	inc    esp
10002092:	push   esi
10002093:	push   esp
10002094:	inc    ecx
10002095:	push   edx
10002096:	inc    edi
10002097:	inc    ebp
10002098:	push   esp
10002099:	inc    esp
1000209a:	inc    ebp
1000209b:	push   esi
1000209c:	dec    ecx
1000209d:	inc    ebx
1000209e:	inc    ebp
1000209f:	add    BYTE PTR [esi+edx*2+0x5f],al
100020a3:	inc    ebp
100020a4:	pop    edi
100020a5:	inc    esi
100020a6:	dec    edi
100020a7:	push   edx
100020a8:	dec    ebp
100020a9:	inc    ecx
100020aa:	push   esp
100020ab:	inc    ebp
100020ac:	push   esp
100020ad:	inc    ebx
100020ae:	add    BYTE PTR [eax],al
100020b0:	dec    edi
100020b1:	dec    esp
100020b2:	inc    ebp
100020b3:	pop    edi
100020b4:	inc    ebp
100020b5:	pop    edi
100020b6:	dec    esi
100020b7:	dec    edi
100020b8:	push   ebx
100020b9:	push   esp
100020ba:	dec    edi
100020bb:	push   edx
100020bc:	inc    ecx
100020bd:	inc    edi
100020be:	inc    ebp
100020bf:	add    BYTE PTR [edi+0x4c],cl
100020c2:	inc    ebp
100020c3:	pop    edi
100020c4:	inc    ebp
100020c5:	pop    edi
100020c6:	inc    ebx
100020c7:	inc    ecx
100020c8:	dec    esi
100020c9:	push   esp
100020ca:	inc    ebx
100020cb:	dec    edi
100020cc:	dec    esi
100020cd:	push   esi
100020ce:	inc    ebp
100020cf:	push   edx
100020d0:	push   esp
100020d1:	add    BYTE PTR [eax],al
100020d3:	add    BYTE PTR [edi+0x4c],cl
100020d6:	inc    ebp
100020d7:	pop    edi
100020d8:	inc    ebp
100020d9:	pop    edi
100020da:	dec    esi
100020db:	dec    edi
100020dc:	push   esp
100020dd:	pop    edi
100020de:	dec    ecx
100020df:	dec    esi
100020e0:	push   eax
100020e1:	dec    esp
100020e2:	inc    ecx
100020e3:	inc    ebx
100020e4:	inc    ebp
100020e5:	inc    ecx
100020e6:	inc    ebx
100020e7:	push   esp
100020e8:	dec    ecx
100020e9:	push   esi
100020ea:	inc    ebp
100020eb:	add    BYTE PTR [edi+0x4c],cl
100020ee:	inc    ebp
100020ef:	pop    edi
100020f0:	inc    ebp
100020f1:	pop    edi
100020f2:	dec    ecx
100020f3:	dec    esi
100020f4:	push   esi
100020f5:	inc    ecx
100020f6:	dec    esp
100020f7:	dec    ecx
100020f8:	inc    esp
100020f9:	dec    eax
100020fa:	push   edi
100020fb:	dec    esi
100020fc:	inc    esp
100020fd:	add    BYTE PTR [eax],al
100020ff:	add    BYTE PTR [edi+0x4c],cl
10002102:	inc    ebp
10002103:	pop    edi
10002104:	inc    ebp
10002105:	pop    edi
10002106:	push   edi
10002107:	push   edx
10002108:	dec    edi
10002109:	dec    esi
1000210a:	inc    edi
1000210b:	inc    ebx
1000210c:	dec    edi
1000210d:	dec    ebp
1000210e:	push   eax
1000210f:	dec    edi
10002110:	inc    edx
10002111:	dec    edx
10002112:	add    BYTE PTR [eax],al
10002114:	dec    edi
10002115:	dec    esp
10002116:	inc    ebp
10002117:	pop    edi
10002118:	inc    ebp
10002119:	pop    edi
1000211a:	dec    ecx
1000211b:	dec    esi
1000211c:	push   esi
1000211d:	inc    ecx
1000211e:	dec    esp
1000211f:	dec    ecx
10002120:	inc    esp
10002121:	push   edx
10002122:	inc    ebp
10002123:	inc    ebx
10002124:	push   esp
10002125:	add    BYTE PTR [eax],al
10002127:	add    BYTE PTR [edi+0x4c],cl
1000212a:	inc    ebp
1000212b:	pop    edi
1000212c:	inc    ebp
1000212d:	pop    edi
1000212e:	push   eax
1000212f:	push   edx
10002130:	dec    edi
10002131:	dec    ebp
10002132:	push   eax
10002133:	push   esp
10002134:	push   ebx
10002135:	inc    ecx
10002136:	push   esi
10002137:	inc    ebp
10002138:	inc    ebx
10002139:	inc    ecx
1000213a:	dec    esi
1000213b:	inc    ebx
1000213c:	inc    ebp
1000213d:	dec    esp
1000213e:	dec    esp
1000213f:	inc    ebp
10002140:	inc    esp
10002141:	add    BYTE PTR [eax],al
10002143:	add    BYTE PTR [edi+0x4c],cl
10002146:	inc    ebp
10002147:	pop    edi
10002148:	inc    ebp
10002149:	pop    edi
1000214a:	push   ebx
1000214b:	push   esp
1000214c:	inc    ecx
1000214d:	push   esp
1000214e:	dec    ecx
1000214f:	inc    ebx
10002150:	add    BYTE PTR [eax],al
10002152:	add    BYTE PTR [eax],al
10002154:	dec    edi
10002155:	dec    esp
10002156:	inc    ebp
10002157:	pop    edi
10002158:	inc    ebp
10002159:	pop    edi
1000215a:	inc    ebx
1000215b:	inc    ecx
1000215c:	dec    esi
1000215d:	push   esp
1000215e:	pop    edi
1000215f:	inc    edx
10002160:	dec    ecx
10002161:	dec    esi
10002162:	inc    esp
10002163:	push   esp
10002164:	dec    edi
10002165:	push   ebx
10002166:	dec    edi
10002167:	push   ebp
10002168:	push   edx
10002169:	inc    ebx
1000216a:	inc    ebp
1000216b:	add    BYTE PTR [edi+0x4c],cl
1000216e:	inc    ebp
1000216f:	pop    edi
10002170:	inc    ebp
10002171:	pop    edi
10002172:	inc    ebx
10002173:	inc    ecx
10002174:	dec    esi
10002175:	push   esp
10002176:	pop    edi
10002177:	inc    edi
10002178:	inc    ebp
10002179:	push   esp
1000217a:	dec    ebp
1000217b:	dec    edi
1000217c:	dec    esi
1000217d:	dec    ecx
1000217e:	dec    ebx
1000217f:	inc    ebp
10002180:	push   edx
10002181:	add    BYTE PTR [eax],al
10002183:	add    BYTE PTR [edi+0x4c],cl
10002186:	inc    ebp
10002187:	pop    edi
10002188:	inc    ebp
10002189:	pop    edi
1000218a:	inc    ebx
1000218b:	dec    esp
1000218c:	inc    ecx
1000218d:	push   ebx
1000218e:	push   ebx
1000218f:	inc    esp
10002190:	dec    ecx
10002191:	inc    esi
10002192:	inc    esi
10002193:	add    BYTE PTR [edi+0x4c],cl
10002196:	inc    ebp
10002197:	pop    edi
10002198:	inc    ebp
10002199:	pop    edi
1000219a:	inc    edx
1000219b:	dec    esp
1000219c:	inc    ecx
1000219d:	dec    esi
1000219e:	dec    ebx
1000219f:	add    BYTE PTR [edi+0x4c],cl
100021a2:	inc    ebp
100021a3:	pop    edi
100021a4:	inc    ebp
100021a5:	pop    edi
100021a6:	dec    esi
100021a7:	dec    edi
100021a8:	inc    ebx
100021a9:	inc    ecx
100021aa:	inc    ebx
100021ab:	dec    eax
100021ac:	inc    ebp
100021ad:	add    BYTE PTR [eax],al
100021af:	add    BYTE PTR [edi+0x4c],cl
100021b2:	inc    ebp
100021b3:	pop    edi
100021b4:	inc    ebp
100021b5:	pop    edi
100021b6:	dec    esi
100021b7:	dec    edi
100021b8:	push   esp
100021b9:	push   edx
100021ba:	push   ebp
100021bb:	dec    esi
100021bc:	dec    esi
100021bd:	dec    ecx
100021be:	dec    esi
100021bf:	inc    edi
100021c0:	add    BYTE PTR [eax],al
100021c2:	add    BYTE PTR [eax],al
100021c4:	dec    edi
100021c5:	dec    esp
100021c6:	inc    ebp
100021c7:	pop    edi
100021c8:	inc    ebp
100021c9:	pop    edi
100021ca:	dec    esi
100021cb:	dec    edi
100021cc:	inc    ebx
100021cd:	dec    edi
100021ce:	dec    esi
100021cf:	dec    esi
100021d0:	inc    ebp
100021d1:	inc    ebx
100021d2:	push   esp
100021d3:	dec    ecx
100021d4:	dec    edi
100021d5:	dec    esi
100021d6:	add    BYTE PTR [eax],al
100021d8:	dec    edi
100021d9:	dec    esp
100021da:	inc    ebp
100021db:	pop    edi
100021dc:	inc    ebp
100021dd:	pop    edi
100021de:	inc    ecx
100021df:	inc    esp
100021e0:	push   esi
100021e1:	dec    ecx
100021e2:	push   ebx
100021e3:	inc    ebp
100021e4:	dec    esi
100021e5:	dec    edi
100021e6:	push   esp
100021e7:	push   ebx
100021e8:	push   ebp
100021e9:	push   eax
100021ea:	push   eax
100021eb:	dec    edi
100021ec:	push   edx
100021ed:	push   esp
100021ee:	inc    ebp
100021ef:	inc    esp
100021f0:	add    BYTE PTR [eax],al
100021f2:	add    BYTE PTR [eax],al
100021f4:	dec    edi
100021f5:	dec    esp
100021f6:	inc    ebp
100021f7:	pop    edi
100021f8:	inc    ebp
100021f9:	pop    edi
100021fa:	inc    ebp
100021fb:	dec    esi
100021fc:	push   ebp
100021fd:	dec    ebp
100021fe:	pop    edi
100021ff:	dec    esi
10002200:	dec    edi
10002201:	dec    ebp
10002202:	dec    edi
10002203:	push   edx
10002204:	inc    ebp
10002205:	add    BYTE PTR [eax],al
10002207:	add    BYTE PTR [edi+0x4c],cl
1000220a:	inc    ebp
1000220b:	pop    edi
1000220c:	inc    ebp
1000220d:	pop    edi
1000220e:	inc    ecx
1000220f:	inc    esp
10002210:	push   esi
10002211:	inc    esi
10002212:	add    BYTE PTR [eax],al
10002214:	dec    edi
10002215:	dec    esp
10002216:	inc    ebp
10002217:	pop    edi
10002218:	inc    ebp
10002219:	pop    edi
1000221a:	dec    edi
1000221b:	dec    esp
1000221c:	inc    ebp
1000221d:	push   esi
1000221e:	inc    ebp
1000221f:	push   edx
10002220:	inc    edx
10002221:	add    BYTE PTR [eax],al
10002223:	add    BYTE PTR [ebx+0x54],dl
10002226:	inc    edi
10002227:	pop    edi
10002228:	inc    ebp
10002229:	pop    edi
1000222a:	dec    esi
1000222b:	dec    edi
1000222c:	push   esp
1000222d:	inc    esi
1000222e:	dec    ecx
1000222f:	dec    esp
10002230:	inc    ebp
10002231:	inc    edx
10002232:	inc    ecx
10002233:	push   ebx
10002234:	inc    ebp
10002235:	inc    esp
10002236:	push   ebx
10002237:	push   esp
10002238:	dec    edi
10002239:	push   edx
1000223a:	inc    ecx
1000223b:	inc    edi
1000223c:	inc    ebp
1000223d:	add    BYTE PTR [eax],al
1000223f:	add    BYTE PTR [ebx+0x54],dl
10002242:	inc    edi
10002243:	pop    edi
10002244:	inc    ebp
10002245:	pop    edi
10002246:	push   ebx
10002247:	dec    eax
10002248:	inc    ecx
10002249:	push   edx
1000224a:	inc    ebp
1000224b:	push   edx
1000224c:	inc    ebp
1000224d:	push   ecx
1000224e:	push   ebp
1000224f:	dec    ecx
10002250:	push   edx
10002251:	inc    ebp
10002252:	inc    esp
10002253:	add    BYTE PTR [ebx+0x54],dl
10002256:	inc    edi
10002257:	pop    edi
10002258:	inc    ebp
10002259:	pop    edi
1000225a:	dec    edi
1000225b:	dec    esp
1000225c:	inc    esp
1000225d:	inc    esp
1000225e:	dec    esp
1000225f:	dec    esp
10002260:	add    BYTE PTR [eax],al
10002262:	add    BYTE PTR [eax],al
10002264:	push   ebx
10002265:	push   esp
10002266:	inc    edi
10002267:	pop    edi
10002268:	inc    ebp
10002269:	pop    edi
1000226a:	dec    edi
1000226b:	dec    esp
1000226c:	inc    esp
1000226d:	inc    esi
1000226e:	dec    edi
1000226f:	push   edx
10002270:	dec    ebp
10002271:	inc    ecx
10002272:	push   esp
10002273:	add    BYTE PTR [ebx+0x54],dl
10002276:	inc    edi
10002277:	pop    edi
10002278:	inc    ebp
10002279:	pop    edi
1000227a:	inc    ebx
1000227b:	inc    ecx
1000227c:	dec    esi
1000227d:	push   esp
1000227e:	push   ebx
1000227f:	inc    ecx
10002280:	push   esi
10002281:	inc    ebp
10002282:	add    BYTE PTR [eax],al
10002284:	push   ebx
10002285:	push   esp
10002286:	inc    edi
10002287:	pop    edi
10002288:	inc    ebp
10002289:	pop    edi
1000228a:	push   edx
1000228b:	inc    ebp
1000228c:	push   esi
1000228d:	inc    ebp
1000228e:	push   edx
1000228f:	push   esp
10002290:	inc    ebp
10002291:	inc    esp
10002292:	add    BYTE PTR [eax],al
10002294:	push   ebx
10002295:	push   esp
10002296:	inc    edi
10002297:	pop    edi
10002298:	inc    ebp
10002299:	pop    edi
1000229a:	dec    esi
1000229b:	dec    edi
1000229c:	push   esp
1000229d:	inc    ebx
1000229e:	push   ebp
1000229f:	push   edx
100022a0:	push   edx
100022a1:	inc    ebp
100022a2:	dec    esi
100022a3:	push   esp
100022a4:	add    BYTE PTR [eax],al
100022a6:	add    BYTE PTR [eax],al
100022a8:	push   ebx
100022a9:	push   esp
100022aa:	inc    edi
100022ab:	pop    edi
100022ac:	inc    ebp
100022ad:	pop    edi
100022ae:	dec    ecx
100022af:	dec    esi
100022b0:	push   ebp
100022b1:	push   ebx
100022b2:	inc    ebp
100022b3:	add    BYTE PTR [ebx+0x54],dl
100022b6:	inc    edi
100022b7:	pop    edi
100022b8:	inc    ebp
100022b9:	pop    edi
100022ba:	dec    ecx
100022bb:	dec    esi
100022bc:	push   esi
100022bd:	inc    ecx
100022be:	dec    esp
100022bf:	dec    ecx
100022c0:	inc    esp
100022c1:	inc    esi
100022c2:	dec    esp
100022c3:	inc    ecx
100022c4:	inc    edi
100022c5:	add    BYTE PTR [eax],al
100022c7:	add    BYTE PTR [ebx+0x54],dl
100022ca:	inc    edi
100022cb:	pop    edi
100022cc:	inc    ebp
100022cd:	pop    edi
100022ce:	push   ebp
100022cf:	dec    esi
100022d0:	dec    ecx
100022d1:	dec    ebp
100022d2:	push   eax
100022d3:	dec    esp
100022d4:	inc    ebp
100022d5:	dec    ebp
100022d6:	inc    ebp
100022d7:	dec    esi
100022d8:	push   esp
100022d9:	inc    ebp
100022da:	inc    esp
100022db:	inc    esi
100022dc:	push   ebp
100022dd:	dec    esi
100022de:	inc    ebx
100022df:	push   esp
100022e0:	dec    ecx
100022e1:	dec    edi
100022e2:	dec    esi
100022e3:	add    BYTE PTR [ebx+0x54],dl
100022e6:	inc    edi
100022e7:	pop    edi
100022e8:	inc    ebp
100022e9:	pop    edi
100022ea:	push   ebp
100022eb:	dec    esi
100022ec:	dec    ebx
100022ed:	dec    esi
100022ee:	dec    edi
100022ef:	push   edi
100022f0:	dec    esi
100022f1:	add    BYTE PTR [eax],al
100022f3:	add    BYTE PTR [ebx+0x54],dl
100022f6:	inc    edi
100022f7:	pop    edi
100022f8:	inc    ebp
100022f9:	pop    edi
100022fa:	dec    ecx
100022fb:	dec    esi
100022fc:	push   esi
100022fd:	inc    ecx
100022fe:	dec    esp
100022ff:	dec    ecx
10002300:	inc    esp
10002301:	dec    esi
10002302:	inc    ecx
10002303:	dec    ebp
10002304:	inc    ebp
10002305:	add    BYTE PTR [eax],al
10002307:	add    BYTE PTR [ebx+0x54],dl
1000230a:	inc    edi
1000230b:	pop    edi
1000230c:	inc    ebp
1000230d:	pop    edi
1000230e:	dec    ecx
1000230f:	dec    esi
10002310:	push   esi
10002311:	inc    ecx
10002312:	dec    esp
10002313:	dec    ecx
10002314:	inc    esp
10002315:	dec    eax
10002316:	inc    ebp
10002317:	inc    ecx
10002318:	inc    esp
10002319:	inc    ebp
1000231a:	push   edx
1000231b:	add    BYTE PTR [ebx+0x54],dl
1000231e:	inc    edi
1000231f:	pop    edi
10002320:	inc    ebp
10002321:	pop    edi
10002322:	inc    ecx
10002323:	inc    edx
10002324:	dec    esi
10002325:	dec    edi
10002326:	push   edx
10002327:	dec    ebp
10002328:	inc    ecx
10002329:	dec    esp
1000232a:	inc    ecx
1000232b:	push   eax
1000232c:	dec    ecx
1000232d:	inc    ebp
1000232e:	pop    eax
1000232f:	dec    ecx
10002330:	push   esp
10002331:	add    BYTE PTR [eax],al
10002333:	add    BYTE PTR [ebx+0x54],dl
10002336:	inc    edi
10002337:	pop    edi
10002338:	inc    ebp
10002339:	pop    edi
1000233a:	dec    ebp
1000233b:	inc    ebp
1000233c:	inc    esp
1000233d:	dec    ecx
1000233e:	push   ebp
1000233f:	dec    ebp
10002340:	inc    esi
10002341:	push   ebp
10002342:	dec    esp
10002343:	dec    esp
10002344:	add    BYTE PTR [eax],al
10002346:	add    BYTE PTR [eax],al
10002348:	push   ebx
10002349:	push   esp
1000234a:	inc    edi
1000234b:	pop    edi
1000234c:	inc    ebp
1000234d:	pop    edi
1000234e:	push   edi
1000234f:	push   edx
10002350:	dec    ecx
10002351:	push   esp
10002352:	inc    ebp
10002353:	inc    esi
10002354:	inc    ecx
10002355:	push   ebp
10002356:	dec    esp
10002357:	push   esp
10002358:	add    BYTE PTR [eax],al
1000235a:	add    BYTE PTR [eax],al
1000235c:	push   ebx
1000235d:	push   esp
1000235e:	inc    edi
1000235f:	pop    edi
10002360:	inc    ebp
10002361:	pop    edi
10002362:	push   edx
10002363:	inc    ebp
10002364:	inc    ecx
10002365:	inc    esp
10002366:	inc    esi
10002367:	inc    ecx
10002368:	push   ebp
10002369:	dec    esp
1000236a:	push   esp
1000236b:	add    BYTE PTR [ebx+0x54],dl
1000236e:	inc    edi
1000236f:	pop    edi
10002370:	inc    ebp
10002371:	pop    edi
10002372:	push   ebx
10002373:	dec    eax
10002374:	inc    ecx
10002375:	push   edx
10002376:	inc    ebp
10002377:	push   esi
10002378:	dec    ecx
10002379:	dec    edi
1000237a:	dec    esp
1000237b:	inc    ecx
1000237c:	push   esp
1000237d:	dec    ecx
1000237e:	dec    edi
1000237f:	dec    esi
10002380:	add    BYTE PTR [eax],al
10002382:	add    BYTE PTR [eax],al
10002384:	push   ebx
10002385:	push   esp
10002386:	inc    edi
10002387:	pop    edi
10002388:	inc    ebp
10002389:	pop    edi
1000238a:	dec    esp
1000238b:	dec    edi
1000238c:	inc    ebx
1000238d:	dec    ebx
1000238e:	push   esi
1000238f:	dec    ecx
10002390:	dec    edi
10002391:	dec    esp
10002392:	inc    ecx
10002393:	push   esp
10002394:	dec    ecx
10002395:	dec    edi
10002396:	dec    esi
10002397:	add    BYTE PTR [ebx+0x54],dl
1000239a:	inc    edi
1000239b:	pop    edi
1000239c:	inc    ebp
1000239d:	pop    edi
1000239e:	inc    esi
1000239f:	dec    ecx
100023a0:	dec    esp
100023a1:	inc    ebp
100023a2:	inc    ecx
100023a3:	dec    esp
100023a4:	push   edx
100023a5:	inc    ebp
100023a6:	inc    ecx
100023a7:	inc    esp
100023a8:	pop    ecx
100023a9:	inc    ebp
100023aa:	pop    eax
100023ab:	dec    ecx
100023ac:	push   ebx
100023ad:	push   esp
100023ae:	push   ebx
100023af:	add    BYTE PTR [ebx+0x54],dl
100023b2:	inc    edi
100023b3:	pop    edi
100023b4:	inc    ebp
100023b5:	pop    edi
100023b6:	dec    ecx
100023b7:	dec    esi
100023b8:	push   esi
100023b9:	inc    ecx
100023ba:	dec    esp
100023bb:	dec    ecx
100023bc:	inc    esp
100023bd:	push   eax
100023be:	inc    ecx
100023bf:	push   edx
100023c0:	inc    ecx
100023c1:	dec    ebp
100023c2:	inc    ebp
100023c3:	push   esp
100023c4:	inc    ebp
100023c5:	push   edx
100023c6:	add    BYTE PTR [eax],al
100023c8:	push   ebx
100023c9:	push   esp
100023ca:	inc    edi
100023cb:	pop    edi
100023cc:	inc    ebp
100023cd:	pop    edi
100023ce:	push   ebx
100023cf:	inc    ebp
100023d0:	inc    ebp
100023d1:	dec    ebx
100023d2:	inc    ebp
100023d3:	push   edx
100023d4:	push   edx
100023d5:	dec    edi
100023d6:	push   edx
100023d7:	add    BYTE PTR [ebx+0x54],dl
100023da:	inc    edi
100023db:	pop    edi
100023dc:	inc    ebp
100023dd:	pop    edi
100023de:	inc    ecx
100023df:	inc    ebx
100023e0:	inc    ebx
100023e1:	inc    ebp
100023e2:	push   ebx
100023e3:	push   ebx
100023e4:	inc    esp
100023e5:	inc    ebp
100023e6:	dec    esi
100023e7:	dec    ecx
100023e8:	inc    ebp
100023e9:	inc    esp
100023ea:	add    BYTE PTR [eax],al
100023ec:	push   ebx
100023ed:	push   esp
100023ee:	inc    edi
100023ef:	pop    edi
100023f0:	inc    ebp
100023f1:	pop    edi
100023f2:	dec    ecx
100023f3:	dec    esi
100023f4:	push   esi
100023f5:	inc    ecx
100023f6:	dec    esp
100023f7:	dec    ecx
100023f8:	inc    esp
100023f9:	dec    eax
100023fa:	inc    ecx
100023fb:	dec    esi
100023fc:	inc    esp
100023fd:	dec    esp
100023fe:	inc    ebp
100023ff:	add    BYTE PTR [ebx+0x54],dl
10002402:	inc    edi
10002403:	pop    edi
10002404:	inc    ebp
10002405:	pop    edi
10002406:	dec    ecx
10002407:	dec    esi
10002408:	push   ebx
10002409:	push   ebp
1000240a:	inc    esi
1000240b:	inc    esi
1000240c:	dec    ecx
1000240d:	inc    ebx
1000240e:	dec    ecx
1000240f:	inc    ebp
10002410:	dec    esi
10002411:	push   esp
10002412:	dec    ebp
10002413:	inc    ebp
10002414:	dec    ebp
10002415:	dec    edi
10002416:	push   edx
10002417:	pop    ecx
10002418:	add    BYTE PTR [eax],al
1000241a:	add    BYTE PTR [eax],al
1000241c:	push   ebx
1000241d:	push   esp
1000241e:	inc    edi
1000241f:	pop    edi
10002420:	inc    ebp
10002421:	pop    edi
10002422:	dec    ecx
10002423:	dec    esi
10002424:	push   esi
10002425:	inc    ecx
10002426:	dec    esp
10002427:	dec    ecx
10002428:	inc    esp
10002429:	push   eax
1000242a:	dec    edi
1000242b:	dec    ecx
1000242c:	dec    esi
1000242d:	push   esp
1000242e:	inc    ebp
1000242f:	push   edx
10002430:	add    BYTE PTR [eax],al
10002432:	add    BYTE PTR [eax],al
10002434:	push   ebx
10002435:	push   esp
10002436:	inc    edi
10002437:	pop    edi
10002438:	inc    ebp
10002439:	pop    edi
1000243a:	dec    esi
1000243b:	dec    edi
1000243c:	dec    ebp
1000243d:	dec    edi
1000243e:	push   edx
1000243f:	inc    ebp
10002440:	inc    esi
10002441:	dec    ecx
10002442:	dec    esp
10002443:	inc    ebp
10002444:	push   ebx
10002445:	add    BYTE PTR [eax],al
10002447:	add    BYTE PTR [ebx+0x54],dl
1000244a:	inc    edi
1000244b:	pop    edi
1000244c:	inc    ebp
1000244d:	pop    edi
1000244e:	inc    esp
1000244f:	dec    ecx
10002450:	push   ebx
10002451:	dec    ebx
10002452:	dec    ecx
10002453:	push   ebx
10002454:	push   edi
10002455:	push   edx
10002456:	dec    ecx
10002457:	push   esp
10002458:	inc    ebp
10002459:	push   eax
1000245a:	push   edx
1000245b:	dec    edi
1000245c:	push   esp
1000245d:	inc    ebp
1000245e:	inc    ebx
1000245f:	push   esp
10002460:	inc    ebp
10002461:	inc    esp
10002462:	add    BYTE PTR [eax],al
10002464:	push   ebx
10002465:	push   esp
10002466:	inc    edi
10002467:	pop    edi
10002468:	inc    ebp
10002469:	pop    edi
1000246a:	push   esp
1000246b:	dec    edi
1000246c:	dec    edi
1000246d:	dec    ebp
1000246e:	inc    ecx
1000246f:	dec    esi
10002470:	pop    ecx
10002471:	dec    edi
10002472:	push   eax
10002473:	inc    ebp
10002474:	dec    esi
10002475:	inc    esi
10002476:	dec    ecx
10002477:	dec    esp
10002478:	inc    ebp
10002479:	push   ebx
1000247a:	add    BYTE PTR [eax],al
1000247c:	push   esp
1000247d:	pop    ecx
1000247e:	push   eax
1000247f:	inc    ebp
10002480:	pop    edi
10002481:	inc    ebp
10002482:	pop    edi
10002483:	inc    ebx
10002484:	inc    ecx
10002485:	dec    esi
10002486:	push   esp
10002487:	dec    esp
10002488:	dec    edi
10002489:	inc    ecx
1000248a:	inc    esp
1000248b:	dec    esp
1000248c:	dec    ecx
1000248d:	inc    edx
1000248e:	push   edx
1000248f:	inc    ecx
10002490:	push   edx
10002491:	pop    ecx
10002492:	add    BYTE PTR [eax],al
10002494:	push   esp
10002495:	pop    ecx
10002496:	push   eax
10002497:	inc    ebp
10002498:	pop    edi
10002499:	inc    ebp
1000249a:	pop    edi
1000249b:	dec    ecx
1000249c:	dec    esi
1000249d:	inc    ebx
1000249e:	dec    edi
1000249f:	dec    esi
100024a0:	push   ebx
100024a1:	dec    ecx
100024a2:	push   ebx
100024a3:	push   esp
100024a4:	inc    ebp
100024a5:	dec    esi
100024a6:	push   esp
100024a7:	push   eax
100024a8:	push   edx
100024a9:	dec    edi
100024aa:	push   eax
100024ab:	inc    esi
100024ac:	push   ebp
100024ad:	dec    esi
100024ae:	inc    ebx
100024af:	push   ebx
100024b0:	add    BYTE PTR [eax],al
100024b2:	add    BYTE PTR [eax],al
100024b4:	push   esp
100024b5:	pop    ecx
100024b6:	push   eax
100024b7:	inc    ebp
100024b8:	pop    edi
100024b9:	inc    ebp
100024ba:	pop    edi
100024bb:	inc    ebx
100024bc:	dec    ecx
100024bd:	push   edx
100024be:	inc    ebx
100024bf:	push   ebp
100024c0:	dec    esp
100024c1:	inc    ecx
100024c2:	push   edx
100024c3:	push   esp
100024c4:	pop    ecx
100024c5:	push   eax
100024c6:	inc    ebp
100024c7:	add    BYTE PTR [ebx+0x54],dl
100024ca:	inc    edi
100024cb:	pop    edi
100024cc:	inc    ebp
100024cd:	pop    edi
100024ce:	dec    ecx
100024cf:	dec    esi
100024d0:	push   esi
100024d1:	inc    ecx
100024d2:	dec    esp
100024d3:	dec    ecx
100024d4:	inc    esp
100024d5:	inc    esi
100024d6:	push   ebp
100024d7:	dec    esi
100024d8:	inc    ebx
100024d9:	push   esp
100024da:	dec    ecx
100024db:	dec    edi
100024dc:	dec    esi
100024dd:	add    BYTE PTR [eax],al
100024df:	add    BYTE PTR [ebx+0x54],dl
100024e2:	inc    edi
100024e3:	pop    edi
100024e4:	inc    ebp
100024e5:	pop    edi
100024e6:	inc    esi
100024e7:	dec    ecx
100024e8:	dec    esp
100024e9:	inc    ebp
100024ea:	dec    esi
100024eb:	dec    edi
100024ec:	push   esp
100024ed:	inc    esi
100024ee:	dec    edi
100024ef:	push   ebp
100024f0:	dec    esi
100024f1:	inc    esp
100024f2:	add    BYTE PTR [eax],al
100024f4:	push   ebx
100024f5:	push   esp
100024f6:	inc    edi
100024f7:	pop    edi
100024f8:	inc    ebp
100024f9:	pop    edi
100024fa:	push   eax
100024fb:	inc    ecx
100024fc:	push   esp
100024fd:	dec    eax
100024fe:	dec    esi
100024ff:	dec    edi
10002500:	push   esp
10002501:	inc    esi
10002502:	dec    edi
10002503:	push   ebp
10002504:	dec    esi
10002505:	inc    esp
10002506:	add    BYTE PTR [eax],al
10002508:	push   esp
10002509:	pop    ecx
1000250a:	push   eax
1000250b:	inc    ebp
1000250c:	pop    edi
1000250d:	inc    ebp
1000250e:	pop    edi
1000250f:	inc    ebx
10002510:	inc    ecx
10002511:	dec    esi
10002512:	push   esp
10002513:	inc    ebx
10002514:	push   edx
10002515:	inc    ebp
10002516:	inc    ecx
10002517:	push   esp
10002518:	inc    ebp
10002519:	push   esp
1000251a:	dec    ebp
1000251b:	push   eax
1000251c:	inc    esi
1000251d:	dec    ecx
1000251e:	dec    esp
1000251f:	inc    ebp
10002520:	add    BYTE PTR [eax],al
10002522:	add    BYTE PTR [eax],al
10002524:	push   esp
10002525:	pop    ecx
10002526:	push   eax
10002527:	inc    ebp
10002528:	pop    edi
10002529:	inc    ebp
1000252a:	pop    edi
1000252b:	push   ebx
1000252c:	dec    ecx
1000252d:	pop    edx
1000252e:	inc    ebp
1000252f:	push   esp
10002530:	dec    edi
10002531:	dec    edi
10002532:	inc    edx
10002533:	dec    ecx
10002534:	inc    edi
10002535:	add    BYTE PTR [eax],al
10002537:	add    BYTE PTR [ecx+ebx*2+0x50],dl
1000253b:	inc    ebp
1000253c:	pop    edi
1000253d:	inc    ebp
1000253e:	pop    edi
1000253f:	inc    esp
10002540:	push   ebp
10002541:	push   eax
10002542:	dec    esp
10002543:	dec    ecx
10002544:	inc    ebx
10002545:	inc    ecx
10002546:	push   esp
10002547:	inc    ebp
10002548:	dec    ecx
10002549:	inc    esp
1000254a:	add    BYTE PTR [eax],al
1000254c:	push   esp
1000254d:	pop    ecx
1000254e:	push   eax
1000254f:	inc    ebp
10002550:	pop    edi
10002551:	inc    ebp
10002552:	pop    edi
10002553:	dec    ecx
10002554:	dec    esi
10002555:	push   esi
10002556:	inc    ecx
10002557:	dec    esp
10002558:	dec    ecx
10002559:	inc    esp
1000255a:	dec    ecx
1000255b:	inc    esp
1000255c:	add    BYTE PTR [eax],al
1000255e:	add    BYTE PTR [eax],al
10002560:	push   esp
10002561:	pop    ecx
10002562:	push   eax
10002563:	inc    ebp
10002564:	pop    edi
10002565:	inc    ebp
10002566:	pop    edi
10002567:	push   esp
10002568:	pop    ecx
10002569:	push   eax
1000256a:	inc    ebp
1000256b:	dec    ebp
1000256c:	dec    ecx
1000256d:	push   ebx
1000256e:	dec    ebp
1000256f:	inc    ecx
10002570:	push   esp
10002571:	inc    ebx
10002572:	dec    eax
10002573:	add    BYTE PTR [ecx+ebx*2+0x50],dl
10002577:	inc    ebp
10002578:	pop    edi
10002579:	inc    ebp
1000257a:	pop    edi
1000257b:	dec    edi
1000257c:	push   ebp
1000257d:	push   esp
1000257e:	dec    edi
1000257f:	inc    esi
10002580:	inc    edx
10002581:	dec    edi
10002582:	push   ebp
10002583:	dec    esi
10002584:	inc    esp
10002585:	push   ebx
10002586:	add    BYTE PTR [eax],al
10002588:	push   esp
10002589:	pop    ecx
1000258a:	push   eax
1000258b:	inc    ebp
1000258c:	pop    edi
1000258d:	inc    ebp
1000258e:	pop    edi
1000258f:	dec    ecx
10002590:	dec    edi
10002591:	inc    ebp
10002592:	push   edx
10002593:	push   edx
10002594:	dec    edi
10002595:	push   edx
10002596:	add    BYTE PTR [eax],al
10002598:	push   esp
10002599:	pop    ecx
1000259a:	push   eax
1000259b:	inc    ebp
1000259c:	pop    edi
1000259d:	inc    ebp
1000259e:	pop    edi
1000259f:	inc    edx
100025a0:	inc    ecx
100025a1:	inc    esp
100025a2:	dec    ebp
100025a3:	dec    edi
100025a4:	inc    esp
100025a5:	push   ebp
100025a6:	dec    esp
100025a7:	inc    ebp
100025a8:	dec    ebx
100025a9:	dec    ecx
100025aa:	dec    esi
100025ab:	inc    esp
100025ac:	add    BYTE PTR [eax],al
100025ae:	add    BYTE PTR [eax],al
100025b0:	push   esp
100025b1:	pop    ecx
100025b2:	push   eax
100025b3:	inc    ebp
100025b4:	pop    edi
100025b5:	inc    ebp
100025b6:	pop    edi
100025b7:	inc    esp
100025b8:	dec    esp
100025b9:	dec    esp
100025ba:	inc    esi
100025bb:	push   ebp
100025bc:	dec    esi
100025bd:	inc    ebx
100025be:	push   esp
100025bf:	dec    ecx
100025c0:	dec    edi
100025c1:	dec    esi
100025c2:	dec    esi
100025c3:	dec    edi
100025c4:	push   esp
100025c5:	inc    esi
100025c6:	dec    edi
100025c7:	push   ebp
100025c8:	dec    esi
100025c9:	inc    esp
100025ca:	add    BYTE PTR [eax],al
100025cc:	push   esp
100025cd:	pop    ecx
100025ce:	push   eax
100025cf:	inc    ebp
100025d0:	pop    edi
100025d1:	inc    ebp
100025d2:	pop    edi
100025d3:	push   ebp
100025d4:	dec    esi
100025d5:	dec    ebx
100025d6:	dec    esi
100025d7:	dec    edi
100025d8:	push   edi
100025d9:	dec    esi
100025da:	dec    esp
100025db:	inc    ebx
100025dc:	dec    ecx
100025dd:	inc    esp
100025de:	add    BYTE PTR [eax],al
100025e0:	push   esp
100025e1:	pop    ecx
100025e2:	push   eax
100025e3:	inc    ebp
100025e4:	pop    edi
100025e5:	inc    ebp
100025e6:	pop    edi
100025e7:	dec    esi
100025e8:	inc    ecx
100025e9:	dec    ebp
100025ea:	inc    ebp
100025eb:	inc    ebx
100025ec:	dec    edi
100025ed:	dec    esi
100025ee:	inc    esi
100025ef:	dec    esp
100025f0:	dec    ecx
100025f1:	inc    ebx
100025f2:	push   esp
100025f3:	add    BYTE PTR [ecx+ebx*2+0x50],dl
100025f7:	inc    ebp
100025f8:	pop    edi
100025f9:	inc    ebp
100025fa:	pop    edi
100025fb:	inc    ecx
100025fc:	dec    ebp
100025fd:	inc    edx
100025fe:	dec    ecx
100025ff:	inc    edi
10002600:	push   ebp
10002601:	dec    edi
10002602:	push   ebp
10002603:	push   ebx
10002604:	dec    esi
10002605:	inc    ecx
10002606:	dec    ebp
10002607:	inc    ebp
10002608:	add    BYTE PTR [eax],al
1000260a:	add    BYTE PTR [eax],al
1000260c:	push   esp
1000260d:	pop    ecx
1000260e:	push   eax
1000260f:	inc    ebp
10002610:	pop    edi
10002611:	inc    ebp
10002612:	pop    edi
10002613:	inc    ebp
10002614:	dec    esp
10002615:	inc    ebp
10002616:	dec    ebp
10002617:	inc    ebp
10002618:	dec    esi
10002619:	push   esp
1000261a:	dec    esi
1000261b:	dec    edi
1000261c:	push   esp
1000261d:	inc    esi
1000261e:	dec    edi
1000261f:	push   ebp
10002620:	dec    esi
10002621:	inc    esp
10002622:	add    BYTE PTR [eax],al
10002624:	push   esp
10002625:	pop    ecx
10002626:	push   eax
10002627:	inc    ebp
10002628:	pop    edi
10002629:	inc    ebp
1000262a:	pop    edi
1000262b:	push   edi
1000262c:	push   edx
1000262d:	dec    edi
1000262e:	dec    esi
1000262f:	inc    edi
10002630:	push   esp
10002631:	pop    ecx
10002632:	push   eax
10002633:	inc    ebp
10002634:	dec    ebx
10002635:	dec    ecx
10002636:	dec    esi
10002637:	inc    esp
10002638:	add    BYTE PTR [eax],al
1000263a:	add    BYTE PTR [eax],al
1000263c:	push   esp
1000263d:	pop    ecx
1000263e:	push   eax
1000263f:	inc    ebp
10002640:	pop    edi
10002641:	inc    ebp
10002642:	pop    edi
10002643:	dec    ecx
10002644:	dec    esi
10002645:	push   esi
10002646:	inc    ecx
10002647:	dec    esp
10002648:	dec    ecx
10002649:	inc    esp
1000264a:	push   ebx
1000264b:	push   esp
1000264c:	inc    ecx
1000264d:	push   esp
1000264e:	inc    ebp
1000264f:	add    BYTE PTR [ecx+ebx*2+0x50],dl
10002653:	inc    ebp
10002654:	pop    edi
10002655:	inc    ebp
10002656:	pop    edi
10002657:	push   ecx
10002658:	push   ebp
10002659:	inc    ecx
1000265a:	dec    esp
1000265b:	dec    ecx
1000265c:	inc    esi
1000265d:	dec    ecx
1000265e:	inc    ebp
1000265f:	inc    esp
10002660:	dec    esi
10002661:	inc    ecx
10002662:	dec    ebp
10002663:	inc    ebp
10002664:	inc    esp
10002665:	dec    ecx
10002666:	push   ebx
10002667:	inc    ecx
10002668:	dec    esp
10002669:	dec    esp
1000266a:	dec    edi
1000266b:	push   edi
1000266c:	inc    ebp
1000266d:	inc    esp
1000266e:	add    BYTE PTR [eax],al
10002670:	push   esp
10002671:	pop    ecx
10002672:	push   eax
10002673:	inc    ebp
10002674:	pop    edi
10002675:	inc    ebp
10002676:	pop    edi
10002677:	push   ebp
10002678:	dec    esi
10002679:	inc    esp
1000267a:	inc    ebp
1000267b:	inc    esi
1000267c:	dec    ecx
1000267d:	dec    esi
1000267e:	inc    ebp
1000267f:	inc    esp
10002680:	push   esp
10002681:	pop    ecx
10002682:	push   eax
10002683:	inc    ebp
10002684:	add    BYTE PTR [eax],al
10002686:	add    BYTE PTR [eax],al
10002688:	push   esp
10002689:	pop    ecx
1000268a:	push   eax
1000268b:	inc    ebp
1000268c:	pop    edi
1000268d:	inc    ebp
1000268e:	pop    edi
1000268f:	dec    esp
10002690:	dec    ecx
10002691:	inc    edx
10002692:	dec    esi
10002693:	dec    edi
10002694:	push   esp
10002695:	push   edx
10002696:	inc    ebp
10002697:	inc    edi
10002698:	dec    ecx
10002699:	push   ebx
1000269a:	push   esp
1000269b:	inc    ebp
1000269c:	push   edx
1000269d:	inc    ebp
1000269e:	inc    esp
1000269f:	add    BYTE PTR [ecx+ebx*2+0x50],dl
100026a3:	inc    ebp
100026a4:	pop    edi
100026a5:	inc    ebp
100026a6:	pop    edi
100026a7:	push   edx
100026a8:	inc    ebp
100026a9:	inc    edi
100026aa:	dec    ecx
100026ab:	push   ebx
100026ac:	push   esp
100026ad:	push   edx
100026ae:	pop    ecx
100026af:	inc    ecx
100026b0:	inc    ebx
100026b1:	inc    ebx
100026b2:	inc    ebp
100026b3:	push   ebx
100026b4:	push   ebx
100026b5:	add    BYTE PTR [eax],al
100026b7:	add    BYTE PTR [ecx+ebx*2+0x50],dl
100026bb:	inc    ebp
100026bc:	pop    edi
100026bd:	inc    ebp
100026be:	pop    edi
100026bf:	push   ebp
100026c0:	dec    esi
100026c1:	push   ebx
100026c2:	push   ebp
100026c3:	push   eax
100026c4:	inc    esi
100026c5:	dec    edi
100026c6:	push   edx
100026c7:	dec    ebp
100026c8:	inc    ecx
100026c9:	push   esp
100026ca:	add    BYTE PTR [eax],al
100026cc:	push   esp
100026cd:	pop    ecx
100026ce:	push   eax
100026cf:	inc    ebp
100026d0:	pop    edi
100026d1:	inc    ebp
100026d2:	pop    edi
100026d3:	dec    ecx
100026d4:	dec    esi
100026d5:	push   esi
100026d6:	inc    esp
100026d7:	inc    ecx
100026d8:	push   esp
100026d9:	inc    ecx
100026da:	push   edx
100026db:	inc    ebp
100026dc:	inc    ecx
100026dd:	inc    esp
100026de:	add    BYTE PTR [eax],al
100026e0:	push   esp
100026e1:	pop    ecx
100026e2:	push   eax
100026e3:	inc    ebp
100026e4:	pop    edi
100026e5:	inc    ebp
100026e6:	pop    edi
100026e7:	inc    edx
100026e8:	push   ebp
100026e9:	inc    esi
100026ea:	inc    esi
100026eb:	inc    ebp
100026ec:	push   edx
100026ed:	push   esp
100026ee:	dec    edi
100026ef:	dec    edi
100026f0:	push   ebx
100026f1:	dec    ebp
100026f2:	inc    ecx
100026f3:	dec    esp
100026f4:	dec    esp
100026f5:	add    BYTE PTR [eax],al
100026f7:	add    BYTE PTR [ecx+ecx*2+0x53],al
100026fb:	push   eax
100026fc:	pop    edi
100026fd:	inc    ebp
100026fe:	pop    edi
100026ff:	dec    esi
10002700:	dec    edi
10002701:	push   esp
10002702:	inc    ecx
10002703:	inc    ebx
10002704:	dec    edi
10002705:	dec    esp
10002706:	dec    esp
10002707:	inc    ebp
10002708:	inc    ebx
10002709:	push   esp
1000270a:	dec    ecx
1000270b:	dec    edi
1000270c:	dec    esi
1000270d:	add    BYTE PTR [eax],al
1000270f:	add    BYTE PTR [ecx+ecx*2+0x53],al
10002713:	push   eax
10002714:	pop    edi
10002715:	inc    ebp
10002716:	pop    edi
10002717:	inc    edx
10002718:	inc    ecx
10002719:	inc    esp
1000271a:	inc    ebx
1000271b:	inc    ecx
1000271c:	dec    esp
1000271d:	dec    esp
1000271e:	inc    ebp
1000271f:	inc    ebp
10002720:	add    BYTE PTR [eax],al
10002722:	add    BYTE PTR [eax],al
10002724:	inc    esp
10002725:	dec    ecx
10002726:	push   ebx
10002727:	push   eax
10002728:	pop    edi
10002729:	inc    ebp
1000272a:	pop    edi
1000272b:	push   eax
1000272c:	inc    ecx
1000272d:	push   edx
1000272e:	inc    ecx
1000272f:	dec    ebp
10002730:	dec    esi
10002731:	dec    edi
10002732:	push   esp
10002733:	dec    edi
10002734:	push   eax
10002735:	push   esp
10002736:	dec    ecx
10002737:	dec    edi
10002738:	dec    esi
10002739:	inc    ecx
1000273a:	dec    esp
1000273b:	add    BYTE PTR [ecx+ecx*2+0x53],al
1000273f:	push   eax
10002740:	pop    edi
10002741:	inc    ebp
10002742:	pop    edi
10002743:	inc    edx
10002744:	inc    ecx
10002745:	inc    esp
10002746:	push   eax
10002747:	inc    ecx
10002748:	push   edx
10002749:	inc    ecx
1000274a:	dec    ebp
1000274b:	inc    ebx
1000274c:	dec    edi
1000274d:	push   ebp
1000274e:	dec    esi
1000274f:	push   esp
10002750:	add    BYTE PTR [eax],al
10002752:	add    BYTE PTR [eax],al
10002754:	inc    esp
10002755:	dec    ecx
10002756:	push   ebx
10002757:	push   eax
10002758:	pop    edi
10002759:	inc    ebp
1000275a:	pop    edi
1000275b:	inc    ecx
1000275c:	push   edx
1000275d:	push   edx
1000275e:	inc    ecx
1000275f:	pop    ecx
10002760:	dec    ecx
10002761:	push   ebx
10002762:	dec    esp
10002763:	dec    edi
10002764:	inc    ebx
10002765:	dec    ebx
10002766:	inc    ebp
10002767:	inc    esp
10002768:	add    BYTE PTR [eax],al
1000276a:	add    BYTE PTR [eax],al
1000276c:	inc    esp
1000276d:	dec    ecx
1000276e:	push   ebx
1000276f:	push   eax
10002770:	pop    edi
10002771:	inc    ebp
10002772:	pop    edi
10002773:	push   ebp
10002774:	dec    esi
10002775:	dec    ebx
10002776:	dec    esi
10002777:	dec    edi
10002778:	push   edi
10002779:	dec    esi
1000277a:	dec    esp
1000277b:	inc    ebx
1000277c:	dec    ecx
1000277d:	inc    esp
1000277e:	add    BYTE PTR [eax],al
10002780:	inc    esp
10002781:	dec    ecx
10002782:	push   ebx
10002783:	push   eax
10002784:	pop    edi
10002785:	inc    ebp
10002786:	pop    edi
10002787:	inc    edx
10002788:	inc    ecx
10002789:	inc    esp
1000278a:	dec    ecx
1000278b:	dec    esi
1000278c:	inc    esp
1000278d:	inc    ebp
1000278e:	pop    eax
1000278f:	add    BYTE PTR [ecx+ecx*2+0x53],al
10002793:	push   eax
10002794:	pop    edi
10002795:	inc    ebp
10002796:	pop    edi
10002797:	dec    edi
10002798:	push   esi
10002799:	inc    ebp
1000279a:	push   edx
1000279b:	inc    esi
1000279c:	dec    esp
1000279d:	dec    edi
1000279e:	push   edi
1000279f:	add    BYTE PTR [ecx+ecx*2+0x53],al
100027a3:	push   eax
100027a4:	pop    edi
100027a5:	inc    ebp
100027a6:	pop    edi
100027a7:	inc    ebp
100027a8:	pop    eax
100027a9:	inc    ebx
100027aa:	inc    ebp
100027ab:	push   eax
100027ac:	push   esp
100027ad:	dec    ecx
100027ae:	dec    edi
100027af:	dec    esi
100027b0:	add    BYTE PTR [eax],al
100027b2:	add    BYTE PTR [eax],al
100027b4:	inc    esp
100027b5:	dec    ecx
100027b6:	push   ebx
100027b7:	push   eax
100027b8:	pop    edi
100027b9:	inc    ebp
100027ba:	pop    edi
100027bb:	inc    edx
100027bc:	inc    ecx
100027bd:	inc    esp
100027be:	push   esi
100027bf:	inc    ecx
100027c0:	push   edx
100027c1:	push   esp
100027c2:	pop    ecx
100027c3:	push   eax
100027c4:	inc    ebp
100027c5:	add    BYTE PTR [eax],al
100027c7:	add    BYTE PTR [ecx+ecx*2+0x53],al
100027cb:	push   eax
100027cc:	pop    edi
100027cd:	inc    ebp
100027ce:	pop    edi
100027cf:	dec    esi
100027d0:	dec    edi
100027d1:	dec    esi
100027d2:	inc    ecx
100027d3:	dec    ebp
100027d4:	inc    ebp
100027d5:	inc    esp
100027d6:	inc    ecx
100027d7:	push   edx
100027d8:	inc    edi
100027d9:	push   ebx
100027da:	add    BYTE PTR [eax],al
100027dc:	inc    esp
100027dd:	dec    ecx
100027de:	push   ebx
100027df:	push   eax
100027e0:	pop    edi
100027e1:	inc    ebp
100027e2:	pop    edi
100027e3:	push   ebp
100027e4:	dec    esi
100027e5:	dec    ebx
100027e6:	dec    esi
100027e7:	dec    edi
100027e8:	push   edi
100027e9:	dec    esi
100027ea:	dec    esi
100027eb:	inc    ecx
100027ec:	dec    ebp
100027ed:	inc    ebp
100027ee:	add    BYTE PTR [eax],al
100027f0:	inc    esp
100027f1:	dec    ecx
100027f2:	push   ebx
100027f3:	push   eax
100027f4:	pop    edi
100027f5:	inc    ebp
100027f6:	pop    edi
100027f7:	push   esp
100027f8:	pop    ecx
100027f9:	push   eax
100027fa:	inc    ebp
100027fb:	dec    ebp
100027fc:	dec    ecx
100027fd:	push   ebx
100027fe:	dec    ebp
100027ff:	inc    ecx
10002800:	push   esp
10002801:	inc    ebx
10002802:	dec    eax
10002803:	add    BYTE PTR [ecx+ecx*2+0x53],al
10002807:	push   eax
10002808:	pop    edi
10002809:	inc    ebp
1000280a:	pop    edi
1000280b:	push   eax
1000280c:	inc    ecx
1000280d:	push   edx
1000280e:	inc    ecx
1000280f:	dec    ebp
10002810:	dec    esi
10002811:	dec    edi
10002812:	push   esp
10002813:	inc    esi
10002814:	dec    edi
10002815:	push   ebp
10002816:	dec    esi
10002817:	inc    esp
10002818:	add    BYTE PTR [eax],al
1000281a:	add    BYTE PTR [eax],al
1000281c:	inc    esp
1000281d:	dec    ecx
1000281e:	push   ebx
1000281f:	push   eax
10002820:	pop    edi
10002821:	inc    ebp
10002822:	pop    edi
10002823:	dec    ebp
10002824:	inc    ebp
10002825:	dec    ebp
10002826:	inc    edx
10002827:	inc    ebp
10002828:	push   edx
10002829:	dec    esi
1000282a:	dec    edi
1000282b:	push   esp
1000282c:	inc    esi
1000282d:	dec    edi
1000282e:	push   ebp
1000282f:	dec    esi
10002830:	inc    esp
10002831:	add    BYTE PTR [eax],al
10002833:	add    BYTE PTR [ecx+ecx*2+0x53],al
10002837:	push   eax
10002838:	pop    edi
10002839:	inc    ebp
1000283a:	pop    edi
1000283b:	push   ebp
1000283c:	dec    esi
1000283d:	dec    ebx
1000283e:	dec    esi
1000283f:	dec    edi
10002840:	push   edi
10002841:	dec    esi
10002842:	dec    ecx
10002843:	dec    esi
10002844:	push   esp
10002845:	inc    ebp
10002846:	push   edx
10002847:	inc    esi
10002848:	inc    ecx
10002849:	inc    ebx
1000284a:	inc    ebp
1000284b:	add    BYTE PTR [edx+0x50],dl
1000284e:	inc    ebx
1000284f:	pop    edi
10002850:	inc    ebp
10002851:	pop    edi
10002852:	push   ebp
10002853:	dec    esi
10002854:	inc    ebp
10002855:	pop    eax
10002856:	push   eax
10002857:	inc    ebp
10002858:	inc    ebx
10002859:	push   esp
1000285a:	inc    ebp
1000285b:	inc    esp
1000285c:	add    BYTE PTR [eax],al
1000285e:	add    BYTE PTR [eax],al
10002860:	push   edx
10002861:	push   eax
10002862:	inc    ebx
10002863:	pop    edi
10002864:	inc    ebp
10002865:	pop    edi
10002866:	push   esp
10002867:	dec    eax
10002868:	push   edx
10002869:	inc    ebp
1000286a:	inc    ecx
1000286b:	inc    esp
1000286c:	pop    edi
1000286d:	dec    esi
1000286e:	dec    edi
1000286f:	push   esp
10002870:	pop    edi
10002871:	dec    ecx
10002872:	dec    esi
10002873:	dec    ecx
10002874:	push   esp
10002875:	add    BYTE PTR [eax],al
10002877:	add    BYTE PTR [edx+0x50],dl
1000287a:	inc    ebx
1000287b:	pop    edi
1000287c:	inc    ebp
1000287d:	pop    edi
1000287e:	push   edi
1000287f:	push   edx
10002880:	dec    edi
10002881:	dec    esi
10002882:	inc    edi
10002883:	pop    edi
10002884:	push   esp
10002885:	dec    eax
10002886:	push   edx
10002887:	inc    ebp
10002888:	inc    ecx
10002889:	inc    esp
1000288a:	add    BYTE PTR [eax],al
1000288c:	push   edx
1000288d:	push   eax
1000288e:	inc    ebx
1000288f:	pop    edi
10002890:	inc    ebp
10002891:	pop    edi
10002892:	inc    ebx
10002893:	inc    ecx
10002894:	dec    esi
10002895:	push   esp
10002896:	inc    ebx
10002897:	inc    ecx
10002898:	dec    esp
10002899:	dec    esp
1000289a:	dec    edi
1000289b:	push   ebp
1000289c:	push   esp
1000289d:	pop    edi
1000289e:	dec    ecx
1000289f:	dec    esi
100028a0:	dec    ecx
100028a1:	dec    esi
100028a2:	push   eax
100028a3:	push   ebp
100028a4:	push   esp
100028a5:	push   ebx
100028a6:	pop    ecx
100028a7:	dec    esi
100028a8:	inc    ebx
100028a9:	inc    ebx
100028aa:	inc    ecx
100028ab:	dec    esp
100028ac:	dec    esp
100028ad:	add    BYTE PTR [eax],al
100028af:	add    BYTE PTR [edx+0x50],dl
100028b2:	inc    ebx
100028b3:	pop    edi
100028b4:	inc    ebp
100028b5:	pop    edi
100028b6:	dec    ecx
100028b7:	dec    esi
100028b8:	push   esi
100028b9:	inc    ecx
100028ba:	dec    esp
100028bb:	dec    ecx
100028bc:	inc    esp
100028bd:	pop    edi
100028be:	inc    ebx
100028bf:	inc    ecx
100028c0:	dec    esp
100028c1:	dec    esp
100028c2:	inc    esp
100028c3:	inc    ecx
100028c4:	push   esp
100028c5:	inc    ecx
100028c6:	add    BYTE PTR [eax],al
100028c8:	push   edx
100028c9:	push   eax
100028ca:	inc    ebx
100028cb:	pop    edi
100028cc:	inc    ebp
100028cd:	pop    edi
100028ce:	push   ebx
100028cf:	inc    ebp
100028d0:	push   edx
100028d1:	push   esi
100028d2:	inc    ebp
100028d3:	push   edx
100028d4:	inc    ebx
100028d5:	inc    ecx
100028d6:	dec    esp
100028d7:	dec    esp
100028d8:	pop    edi
100028d9:	push   edx
100028da:	inc    ebp
100028db:	dec    edx
100028dc:	inc    ebp
100028dd:	inc    ebx
100028de:	push   esp
100028df:	inc    ebp
100028e0:	inc    esp
100028e1:	add    BYTE PTR [eax],al
100028e3:	add    BYTE PTR [edx+0x50],dl
100028e6:	inc    ebx
100028e7:	pop    edi
100028e8:	inc    ebp
100028e9:	pop    edi
100028ea:	push   ebx
100028eb:	inc    ebp
100028ec:	push   edx
100028ed:	push   esi
100028ee:	inc    ebp
100028ef:	push   edx
100028f0:	inc    ebx
100028f1:	inc    ecx
100028f2:	dec    esp
100028f3:	dec    esp
100028f4:	pop    edi
100028f5:	push   edx
100028f6:	inc    ebp
100028f7:	push   esp
100028f8:	push   edx
100028f9:	pop    ecx
100028fa:	dec    esp
100028fb:	inc    ecx
100028fc:	push   esp
100028fd:	inc    ebp
100028fe:	push   edx
100028ff:	add    BYTE PTR [edx+0x50],dl
10002902:	inc    ebx
10002903:	pop    edi
10002904:	inc    ebp
10002905:	pop    edi
10002906:	push   edx
10002907:	inc    ebp
10002908:	push   esp
10002909:	push   edx
1000290a:	pop    ecx
1000290b:	add    BYTE PTR [edx+0x50],dl
1000290e:	inc    ebx
1000290f:	pop    edi
10002910:	inc    ebp
10002911:	pop    edi
10002912:	inc    esp
10002913:	dec    ecx
10002914:	push   ebx
10002915:	inc    ebx
10002916:	dec    edi
10002917:	dec    esi
10002918:	dec    esi
10002919:	inc    ebp
1000291a:	inc    ebx
1000291b:	push   esp
1000291c:	inc    ebp
1000291d:	inc    esp
1000291e:	add    BYTE PTR [eax],al
10002920:	push   edx
10002921:	push   eax
10002922:	inc    ebx
10002923:	pop    edi
10002924:	inc    ebp
10002925:	pop    edi
10002926:	dec    ecx
10002927:	dec    esi
10002928:	push   esi
10002929:	inc    ecx
1000292a:	dec    esp
1000292b:	dec    ecx
1000292c:	inc    esp
1000292d:	dec    ebp
1000292e:	inc    ebp
1000292f:	push   esp
10002930:	dec    eax
10002931:	dec    edi
10002932:	inc    esp
10002933:	add    BYTE PTR [edx+0x50],dl
10002936:	inc    ebx
10002937:	pop    edi
10002938:	inc    ebp
10002939:	pop    edi
1000293a:	inc    ebx
1000293b:	dec    eax
1000293c:	inc    ecx
1000293d:	dec    esi
1000293e:	inc    edi
1000293f:	inc    ebp
10002940:	inc    esp
10002941:	pop    edi
10002942:	dec    ebp
10002943:	dec    edi
10002944:	inc    esp
10002945:	inc    ebp
10002946:	add    BYTE PTR [eax],al
10002948:	push   edx
10002949:	push   eax
1000294a:	inc    ebx
1000294b:	pop    edi
1000294c:	inc    ebp
1000294d:	pop    edi
1000294e:	push   ebx
1000294f:	inc    ebp
10002950:	push   edx
10002951:	push   esi
10002952:	inc    ebp
10002953:	push   edx
10002954:	inc    esi
10002955:	inc    ecx
10002956:	push   ebp
10002957:	dec    esp
10002958:	push   esp
10002959:	add    BYTE PTR [eax],al
1000295b:	add    BYTE PTR [edx+0x50],dl
1000295e:	inc    ebx
1000295f:	pop    edi
10002960:	inc    ebp
10002961:	pop    edi
10002962:	inc    esi
10002963:	inc    ecx
10002964:	push   ebp
10002965:	dec    esp
10002966:	push   esp
10002967:	add    BYTE PTR [edx+0x50],dl
1000296a:	inc    ebx
1000296b:	pop    edi
1000296c:	inc    ebp
1000296d:	pop    edi
1000296e:	dec    esi
1000296f:	dec    edi
10002970:	push   esp
10002971:	pop    edi
10002972:	push   edx
10002973:	inc    ebp
10002974:	inc    edi
10002975:	dec    ecx
10002976:	push   ebx
10002977:	push   esp
10002978:	inc    ebp
10002979:	push   edx
1000297a:	inc    ebp
1000297b:	inc    esp
1000297c:	add    BYTE PTR [eax],al
1000297e:	add    BYTE PTR [eax],al
10002980:	push   edx
10002981:	push   eax
10002982:	inc    ebx
10002983:	pop    edi
10002984:	inc    ebp
10002985:	pop    edi
10002986:	inc    ecx
10002987:	push   esp
10002988:	push   esp
10002989:	inc    ebp
1000298a:	dec    ebp
1000298b:	push   eax
1000298c:	push   esp
1000298d:	inc    ebp
1000298e:	inc    esp
1000298f:	pop    edi
10002990:	dec    ebp
10002991:	push   ebp
10002992:	dec    esp
10002993:	push   esp
10002994:	dec    ecx
10002995:	push   esp
10002996:	dec    eax
10002997:	push   edx
10002998:	inc    ebp
10002999:	inc    ecx
1000299a:	inc    esp
1000299b:	add    BYTE PTR [edx+0x50],dl
1000299e:	inc    ebx
1000299f:	pop    edi
100029a0:	inc    ebp
100029a1:	pop    edi
100029a2:	dec    edi
100029a3:	push   ebp
100029a4:	push   esp
100029a5:	pop    edi
100029a6:	dec    edi
100029a7:	inc    esi
100029a8:	pop    edi
100029a9:	push   edx
100029aa:	inc    ebp
100029ab:	push   ebx
100029ac:	dec    edi
100029ad:	push   ebp
100029ae:	push   edx
100029af:	inc    ebx
100029b0:	inc    ebp
100029b1:	push   ebx
100029b2:	add    BYTE PTR [eax],al
100029b4:	push   edx
100029b5:	push   eax
100029b6:	inc    ebx
100029b7:	pop    edi
100029b8:	inc    ebp
100029b9:	pop    edi
100029ba:	push   ebx
100029bb:	pop    ecx
100029bc:	push   ebx
100029bd:	pop    edi
100029be:	inc    ebx
100029bf:	inc    ecx
100029c0:	dec    esp
100029c1:	dec    esp
100029c2:	pop    edi
100029c3:	inc    esi
100029c4:	inc    ecx
100029c5:	dec    ecx
100029c6:	dec    esp
100029c7:	inc    ebp
100029c8:	inc    esp
100029c9:	add    BYTE PTR [eax],al
100029cb:	add    BYTE PTR [edx+0x50],dl
100029ce:	inc    ebx
100029cf:	pop    edi
100029d0:	inc    ebp
100029d1:	pop    edi
100029d2:	push   ebx
100029d3:	inc    ebp
100029d4:	push   edx
100029d5:	push   esi
100029d6:	inc    ebp
100029d7:	push   edx
100029d8:	pop    edi
100029d9:	inc    esp
100029da:	dec    ecx
100029db:	inc    ebp
100029dc:	inc    esp
100029dd:	pop    edi
100029de:	inc    esp
100029df:	dec    esi
100029e0:	inc    ebp
100029e1:	add    BYTE PTR [eax],al
100029e3:	add    BYTE PTR [edx+0x50],dl
100029e6:	inc    ebx
100029e7:	pop    edi
100029e8:	inc    ebp
100029e9:	pop    edi
100029ea:	inc    ebx
100029eb:	inc    ecx
100029ec:	dec    esi
100029ed:	push   esp
100029ee:	inc    ebx
100029ef:	inc    ecx
100029f0:	dec    esp
100029f1:	dec    esp
100029f2:	dec    edi
100029f3:	push   ebp
100029f4:	push   esp
100029f5:	pop    edi
100029f6:	inc    ecx
100029f7:	inc    edi
100029f8:	inc    ecx
100029f9:	dec    ecx
100029fa:	dec    esi
100029fb:	add    BYTE PTR [edx+0x50],dl
100029fe:	inc    ebx
100029ff:	pop    edi
10002a00:	inc    ebp
10002a01:	pop    edi
10002a02:	dec    ecx
10002a03:	dec    esi
10002a04:	push   esi
10002a05:	inc    ecx
10002a06:	dec    esp
10002a07:	dec    ecx
10002a08:	inc    esp
10002a09:	pop    edi
10002a0a:	push   eax
10002a0b:	inc    ecx
10002a0c:	push   edx
10002a0d:	inc    ecx
10002a0e:	dec    ebp
10002a0f:	inc    ebp
10002a10:	push   esp
10002a11:	inc    ebp
10002a12:	push   edx
10002a13:	add    BYTE PTR [edx+0x50],dl
10002a16:	inc    ebx
10002a17:	pop    edi
10002a18:	inc    ebp
10002a19:	pop    edi
10002a1a:	dec    ecx
10002a1b:	dec    esi
10002a1c:	push   esi
10002a1d:	inc    ecx
10002a1e:	dec    esp
10002a1f:	dec    ecx
10002a20:	inc    esp
10002a21:	pop    edi
10002a22:	inc    esp
10002a23:	inc    ecx
10002a24:	push   esp
10002a25:	inc    ecx
10002a26:	add    BYTE PTR [eax],al
10002a28:	push   edx
10002a29:	push   eax
10002a2a:	inc    ebx
10002a2b:	pop    edi
10002a2c:	inc    ebp
10002a2d:	pop    edi
10002a2e:	push   ebx
10002a2f:	inc    ebp
10002a30:	push   edx
10002a31:	push   esi
10002a32:	inc    ebp
10002a33:	push   edx
10002a34:	pop    edi
10002a35:	inc    ebx
10002a36:	inc    ecx
10002a37:	dec    esi
10002a38:	push   esp
10002a39:	push   ebp
10002a3a:	dec    esi
10002a3b:	dec    ebp
10002a3c:	inc    ecx
10002a3d:	push   edx
10002a3e:	push   ebx
10002a3f:	dec    eax
10002a40:	inc    ecx
10002a41:	dec    esp
10002a42:	pop    edi
10002a43:	inc    esp
10002a44:	inc    ecx
10002a45:	push   esp
10002a46:	inc    ecx
10002a47:	add    BYTE PTR [edx+0x50],dl
10002a4a:	inc    ebx
10002a4b:	pop    edi
10002a4c:	inc    ebp
10002a4d:	pop    edi
10002a4e:	push   ebx
10002a4f:	inc    ebp
10002a50:	push   edx
10002a51:	push   esi
10002a52:	inc    ebp
10002a53:	push   edx
10002a54:	pop    edi
10002a55:	inc    ebx
10002a56:	inc    ecx
10002a57:	dec    esi
10002a58:	push   esp
10002a59:	dec    ebp
10002a5a:	inc    ecx
10002a5b:	push   edx
10002a5c:	push   ebx
10002a5d:	dec    eax
10002a5e:	inc    ecx
10002a5f:	dec    esp
10002a60:	pop    edi
10002a61:	inc    esp
10002a62:	inc    ecx
10002a63:	push   esp
10002a64:	inc    ecx
10002a65:	add    BYTE PTR [eax],al
10002a67:	add    BYTE PTR [edx+0x50],dl
10002a6a:	inc    ebx
10002a6b:	pop    edi
10002a6c:	inc    ebp
10002a6d:	pop    edi
10002a6e:	inc    ebx
10002a6f:	dec    esp
10002a70:	dec    ecx
10002a71:	inc    ebp
10002a72:	dec    esi
10002a73:	push   esp
10002a74:	pop    edi
10002a75:	inc    ebx
10002a76:	inc    ecx
10002a77:	dec    esi
10002a78:	push   esp
10002a79:	push   ebp
10002a7a:	dec    esi
10002a7b:	dec    ebp
10002a7c:	inc    ecx
10002a7d:	push   edx
10002a7e:	push   ebx
10002a7f:	dec    eax
10002a80:	inc    ecx
10002a81:	dec    esp
10002a82:	pop    edi
10002a83:	inc    esp
10002a84:	inc    ecx
10002a85:	push   esp
10002a86:	inc    ecx
10002a87:	add    BYTE PTR [edx+0x50],dl
10002a8a:	inc    ebx
10002a8b:	pop    edi
10002a8c:	inc    ebp
10002a8d:	pop    edi
10002a8e:	inc    ebx
10002a8f:	dec    esp
10002a90:	dec    ecx
10002a91:	inc    ebp
10002a92:	dec    esi
10002a93:	push   esp
10002a94:	pop    edi
10002a95:	inc    ebx
10002a96:	inc    ecx
10002a97:	dec    esi
10002a98:	push   esp
10002a99:	dec    ebp
10002a9a:	inc    ecx
10002a9b:	push   edx
10002a9c:	push   ebx
10002a9d:	dec    eax
10002a9e:	inc    ecx
10002a9f:	dec    esp
10002aa0:	pop    edi
10002aa1:	inc    esp
10002aa2:	inc    ecx
10002aa3:	push   esp
10002aa4:	inc    ecx
10002aa5:	add    BYTE PTR [eax],al
10002aa7:	add    BYTE PTR [edx+0x50],dl
10002aaa:	inc    ebx
10002aab:	pop    edi
10002aac:	inc    ebp
10002aad:	pop    edi
10002aae:	inc    ebx
10002aaf:	inc    ecx
10002ab0:	dec    esi
10002ab1:	push   esp
10002ab2:	push   esp
10002ab3:	push   edx
10002ab4:	inc    ecx
10002ab5:	dec    esi
10002ab6:	push   ebx
10002ab7:	dec    ebp
10002ab8:	dec    ecx
10002ab9:	push   esp
10002aba:	pop    edi
10002abb:	inc    ebx
10002abc:	inc    ecx
10002abd:	dec    esp
10002abe:	dec    esp
10002abf:	add    BYTE PTR [edx+0x50],dl
10002ac2:	inc    ebx
10002ac3:	pop    edi
10002ac4:	inc    ebp
10002ac5:	pop    edi
10002ac6:	dec    ecx
10002ac7:	dec    esi
10002ac8:	push   esi
10002ac9:	inc    ecx
10002aca:	dec    esp
10002acb:	dec    ecx
10002acc:	inc    esp
10002acd:	pop    edi
10002ace:	inc    esp
10002acf:	inc    ecx
10002ad0:	push   esp
10002ad1:	inc    ecx
10002ad2:	push   eax
10002ad3:	inc    ecx
10002ad4:	inc    ebx
10002ad5:	dec    ebx
10002ad6:	inc    ebp
10002ad7:	push   esp
10002ad8:	add    BYTE PTR [eax],al
10002ada:	add    BYTE PTR [eax],al
10002adc:	push   edx
10002add:	push   eax
10002ade:	inc    ebx
10002adf:	pop    edi
10002ae0:	inc    ebp
10002ae1:	pop    edi
10002ae2:	inc    ebx
10002ae3:	dec    esp
10002ae4:	dec    ecx
10002ae5:	inc    ebp
10002ae6:	dec    esi
10002ae7:	push   esp
10002ae8:	pop    edi
10002ae9:	inc    esp
10002aea:	dec    ecx
10002aeb:	inc    ebp
10002aec:	inc    esp
10002aed:	add    BYTE PTR [eax],al
10002aef:	add    BYTE PTR [edx+0x50],dl
10002af2:	inc    ebx
10002af3:	pop    edi
10002af4:	inc    ebp
10002af5:	pop    edi
10002af6:	push   ebx
10002af7:	inc    ebp
10002af8:	push   edx
10002af9:	push   esi
10002afa:	inc    ebp
10002afb:	push   edx
10002afc:	pop    edi
10002afd:	inc    esp
10002afe:	dec    ecx
10002aff:	inc    ebp
10002b00:	inc    esp
10002b01:	add    BYTE PTR [eax],al
10002b03:	add    BYTE PTR [edx+0x50],dl
10002b06:	inc    ebx
10002b07:	pop    edi
10002b08:	inc    ebp
10002b09:	pop    edi
10002b0a:	inc    ebx
10002b0b:	dec    edi
10002b0c:	dec    esi
10002b0d:	dec    esi
10002b0e:	inc    ebp
10002b0f:	inc    ebx
10002b10:	push   esp
10002b11:	dec    ecx
10002b12:	dec    edi
10002b13:	dec    esi
10002b14:	pop    edi
10002b15:	push   esp
10002b16:	inc    ebp
10002b17:	push   edx
10002b18:	dec    ebp
10002b19:	dec    ecx
10002b1a:	dec    esi
10002b1b:	inc    ecx
10002b1c:	push   esp
10002b1d:	inc    ebp
10002b1e:	inc    esp
10002b1f:	add    BYTE PTR [edx+0x50],dl
10002b22:	inc    ebx
10002b23:	pop    edi
10002b24:	inc    ebp
10002b25:	pop    edi
10002b26:	inc    ebx
10002b27:	inc    ecx
10002b28:	dec    esi
10002b29:	push   esp
10002b2a:	inc    ebx
10002b2b:	inc    ecx
10002b2c:	dec    esp
10002b2d:	dec    esp
10002b2e:	dec    edi
10002b2f:	push   ebp
10002b30:	push   esp
10002b31:	pop    edi
10002b32:	dec    ecx
10002b33:	dec    esi
10002b34:	inc    ebp
10002b35:	pop    eax
10002b36:	push   esp
10002b37:	inc    ebp
10002b38:	push   edx
10002b39:	dec    esi
10002b3a:	inc    ecx
10002b3b:	dec    esp
10002b3c:	inc    ebx
10002b3d:	inc    ecx
10002b3e:	dec    esp
10002b3f:	dec    esp
10002b40:	add    BYTE PTR [eax],al
10002b42:	add    BYTE PTR [eax],al
10002b44:	push   edx
10002b45:	push   eax
10002b46:	inc    ebx
10002b47:	pop    edi
10002b48:	inc    ebp
10002b49:	pop    edi
10002b4a:	inc    ebx
10002b4b:	inc    ecx
10002b4c:	dec    esi
10002b4d:	push   esp
10002b4e:	inc    ebx
10002b4f:	inc    ecx
10002b50:	dec    esp
10002b51:	dec    esp
10002b52:	dec    edi
10002b53:	push   ebp
10002b54:	push   esp
10002b55:	pop    edi
10002b56:	dec    ecx
10002b57:	dec    esi
10002b58:	inc    ecx
10002b59:	push   ebx
10002b5a:	pop    ecx
10002b5b:	dec    esi
10002b5c:	inc    ebx
10002b5d:	inc    ebx
10002b5e:	inc    ecx
10002b5f:	dec    esp
10002b60:	dec    esp
10002b61:	add    BYTE PTR [eax],al
10002b63:	add    BYTE PTR [edx+0x50],dl
10002b66:	inc    ebx
10002b67:	pop    edi
10002b68:	inc    ebp
10002b69:	pop    edi
10002b6a:	inc    ebx
10002b6b:	inc    ecx
10002b6c:	dec    esi
10002b6d:	push   esp
10002b6e:	push   eax
10002b6f:	dec    edi
10002b70:	push   ebx
10002b71:	push   esp
10002b72:	pop    edi
10002b73:	dec    ecx
10002b74:	dec    esi
10002b75:	push   ebx
10002b76:	inc    ebp
10002b77:	dec    esi
10002b78:	inc    esp
10002b79:	inc    ebx
10002b7a:	inc    ecx
10002b7b:	dec    esp
10002b7c:	dec    esp
10002b7d:	add    BYTE PTR [eax],al
10002b7f:	add    BYTE PTR [edx+0x50],dl
10002b82:	inc    ebx
10002b83:	pop    edi
10002b84:	inc    ebp
10002b85:	pop    edi
10002b86:	inc    ebx
10002b87:	inc    ecx
10002b88:	dec    esp
10002b89:	dec    esp
10002b8a:	pop    edi
10002b8b:	inc    ebx
10002b8c:	inc    ecx
10002b8d:	dec    esi
10002b8e:	inc    ebx
10002b8f:	inc    ebp
10002b90:	dec    esp
10002b91:	inc    ebp
10002b92:	inc    esp
10002b93:	add    BYTE PTR [edx+0x50],dl
10002b96:	inc    ebx
10002b97:	pop    edi
10002b98:	inc    ebp
10002b99:	pop    edi
10002b9a:	inc    ebx
10002b9b:	inc    ecx
10002b9c:	dec    esp
10002b9d:	dec    esp
10002b9e:	pop    edi
10002b9f:	push   edx
10002ba0:	inc    ebp
10002ba1:	dec    edx
10002ba2:	inc    ebp
10002ba3:	inc    ebx
10002ba4:	push   esp
10002ba5:	inc    ebp
10002ba6:	inc    esp
10002ba7:	add    BYTE PTR [ebp+0x5f],al
10002baa:	push   ebp
10002bab:	dec    esi
10002bac:	inc    ebp
10002bad:	pop    eax
10002bae:	push   eax
10002baf:	inc    ebp
10002bb0:	inc    ebx
10002bb1:	push   esp
10002bb2:	inc    ebp
10002bb3:	inc    esp
10002bb4:	add    BYTE PTR [eax],al
10002bb6:	add    BYTE PTR [eax],al
10002bb8:	inc    ebx
10002bb9:	dec    edi
10002bba:	pop    edi
10002bbb:	inc    ebp
10002bbc:	pop    edi
10002bbd:	dec    ecx
10002bbe:	dec    esi
10002bbf:	dec    ecx
10002bc0:	push   esp
10002bc1:	pop    edi
10002bc2:	dec    edi
10002bc3:	dec    esi
10002bc4:	dec    esp
10002bc5:	pop    ecx
10002bc6:	pop    edi
10002bc7:	push   ebx
10002bc8:	dec    ecx
10002bc9:	dec    esi
10002bca:	inc    edi
10002bcb:	dec    esp
10002bcc:	inc    ebp
10002bcd:	pop    edi
10002bce:	push   esp
10002bcf:	dec    eax
10002bd0:	push   edx
10002bd1:	inc    ebp
10002bd2:	inc    ecx
10002bd3:	inc    esp
10002bd4:	inc    ebp
10002bd5:	inc    esp
10002bd6:	add    BYTE PTR [eax],al
10002bd8:	inc    ebx
10002bd9:	dec    edi
10002bda:	pop    edi
10002bdb:	inc    ebp
10002bdc:	pop    edi
10002bdd:	dec    ecx
10002bde:	dec    esi
10002bdf:	dec    ecx
10002be0:	push   esp
10002be1:	pop    edi
10002be2:	push   ebx
10002be3:	inc    ebx
10002be4:	dec    ebp
10002be5:	pop    edi
10002be6:	inc    ebp
10002be7:	pop    eax
10002be8:	inc    ebp
10002be9:	inc    ebx
10002bea:	pop    edi
10002beb:	inc    esi
10002bec:	inc    ecx
10002bed:	dec    ecx
10002bee:	dec    esp
10002bef:	push   ebp
10002bf0:	push   edx
10002bf1:	inc    ebp
10002bf2:	add    BYTE PTR [eax],al
10002bf4:	inc    ebx
10002bf5:	dec    edi
10002bf6:	pop    edi
10002bf7:	inc    ebp
10002bf8:	pop    edi
10002bf9:	dec    ecx
10002bfa:	dec    esi
10002bfb:	dec    ecx
10002bfc:	push   esp
10002bfd:	pop    edi
10002bfe:	push   ebx
10002bff:	inc    ebx
10002c00:	dec    ebp
10002c01:	pop    edi
10002c02:	dec    ebp
10002c03:	inc    ecx
10002c04:	push   eax
10002c05:	pop    edi
10002c06:	push   esi
10002c07:	dec    ecx
10002c08:	inc    ebp
10002c09:	push   edi
10002c0a:	pop    edi
10002c0b:	dec    edi
10002c0c:	inc    esi
10002c0d:	pop    edi
10002c0e:	inc    esi
10002c0f:	dec    ecx
10002c10:	dec    esp
10002c11:	inc    ebp
10002c12:	add    BYTE PTR [eax],al
10002c14:	inc    ebx
10002c15:	dec    edi
10002c16:	pop    edi
10002c17:	inc    ebp
10002c18:	pop    edi
10002c19:	dec    ecx
10002c1a:	dec    esi
10002c1b:	dec    ecx
10002c1c:	push   esp
10002c1d:	pop    edi
10002c1e:	push   ebx
10002c1f:	inc    ebx
10002c20:	dec    ebp
10002c21:	pop    edi
10002c22:	inc    esi
10002c23:	dec    ecx
10002c24:	dec    esp
10002c25:	inc    ebp
10002c26:	pop    edi
10002c27:	dec    ebp
10002c28:	inc    ecx
10002c29:	push   eax
10002c2a:	push   eax
10002c2b:	dec    ecx
10002c2c:	dec    esi
10002c2d:	inc    edi
10002c2e:	pop    edi
10002c2f:	inc    ebp
10002c30:	pop    eax
10002c31:	dec    ecx
10002c32:	push   ebx
10002c33:	push   esp
10002c34:	push   ebx
10002c35:	add    BYTE PTR [eax],al
10002c37:	add    BYTE PTR [ebx+0x4f],al
10002c3a:	pop    edi
10002c3b:	inc    ebp
10002c3c:	pop    edi
10002c3d:	dec    ecx
10002c3e:	dec    esi
10002c3f:	dec    ecx
10002c40:	push   esp
10002c41:	pop    edi
10002c42:	push   ebx
10002c43:	inc    ebx
10002c44:	dec    ebp
10002c45:	pop    edi
10002c46:	dec    ebp
10002c47:	push   ebp
10002c48:	push   esp
10002c49:	inc    ebp
10002c4a:	pop    eax
10002c4b:	pop    edi
10002c4c:	inc    ebp
10002c4d:	pop    eax
10002c4e:	dec    ecx
10002c4f:	push   ebx
10002c50:	push   esp
10002c51:	push   ebx
10002c52:	add    BYTE PTR [eax],al
10002c54:	inc    ebx
10002c55:	dec    edi
10002c56:	pop    edi
10002c57:	inc    ebp
10002c58:	pop    edi
10002c59:	dec    ecx
10002c5a:	dec    esi
10002c5b:	dec    ecx
10002c5c:	push   esp
10002c5d:	pop    edi
10002c5e:	push   ebp
10002c5f:	dec    esi
10002c60:	inc    ecx
10002c61:	inc    ebx
10002c62:	inc    ebx
10002c63:	inc    ebp
10002c64:	push   eax
10002c65:	push   esp
10002c66:	inc    ebp
10002c67:	inc    esp
10002c68:	pop    edi
10002c69:	push   ebp
10002c6a:	push   ebx
10002c6b:	inc    ebp
10002c6c:	push   edx
10002c6d:	pop    edi
10002c6e:	inc    ecx
10002c6f:	dec    esp
10002c70:	dec    esp
10002c71:	dec    edi
10002c72:	inc    ebx
10002c73:	inc    ecx
10002c74:	push   esp
10002c75:	dec    edi
10002c76:	push   edx
10002c77:	add    BYTE PTR [ebx+0x4f],al
10002c7a:	pop    edi
10002c7b:	inc    ebp
10002c7c:	pop    edi
10002c7d:	dec    ecx
10002c7e:	dec    esi
10002c7f:	dec    ecx
10002c80:	push   esp
10002c81:	pop    edi
10002c82:	push   esp
10002c83:	dec    esp
10002c84:	push   ebx
10002c85:	pop    edi
10002c86:	inc    ebx
10002c87:	dec    eax
10002c88:	inc    ecx
10002c89:	dec    esi
10002c8a:	dec    esi
10002c8b:	inc    ebp
10002c8c:	dec    esp
10002c8d:	pop    edi
10002c8e:	inc    ebx
10002c8f:	dec    edi
10002c90:	dec    esi
10002c91:	push   esp
10002c92:	push   edx
10002c93:	dec    edi
10002c94:	dec    esp
10002c95:	add    BYTE PTR [eax],al
10002c97:	add    BYTE PTR [ebx+0x4f],al
10002c9a:	pop    edi
10002c9b:	inc    ebp
10002c9c:	pop    edi
10002c9d:	dec    ecx
10002c9e:	dec    esi
10002c9f:	dec    ecx
10002ca0:	push   esp
10002ca1:	pop    edi
10002ca2:	push   esp
10002ca3:	dec    esp
10002ca4:	push   ebx
10002ca5:	pop    edi
10002ca6:	push   ebx
10002ca7:	inc    ebp
10002ca8:	push   esp
10002ca9:	pop    edi
10002caa:	inc    ebx
10002cab:	dec    eax
10002cac:	inc    ecx
10002cad:	dec    esi
10002cae:	dec    esi
10002caf:	inc    ebp
10002cb0:	dec    esp
10002cb1:	pop    edi
10002cb2:	inc    ebx
10002cb3:	dec    edi
10002cb4:	dec    esi
10002cb5:	push   esp
10002cb6:	push   edx
10002cb7:	dec    edi
10002cb8:	dec    esp
10002cb9:	add    BYTE PTR [eax],al
10002cbb:	add    BYTE PTR [ebx+0x4f],al
10002cbe:	pop    edi
10002cbf:	inc    ebp
10002cc0:	pop    edi
10002cc1:	dec    ecx
10002cc2:	dec    esi
10002cc3:	dec    ecx
10002cc4:	push   esp
10002cc5:	pop    edi
10002cc6:	push   edx
10002cc7:	push   eax
10002cc8:	inc    ebx
10002cc9:	pop    edi
10002cca:	inc    ebx
10002ccb:	dec    eax
10002ccc:	inc    ecx
10002ccd:	dec    esi
10002cce:	dec    esi
10002ccf:	inc    ebp
10002cd0:	dec    esp
10002cd1:	add    BYTE PTR [eax],al
10002cd3:	add    BYTE PTR [ebx+0x4f],al
10002cd6:	pop    edi
10002cd7:	inc    ebp
10002cd8:	pop    edi
10002cd9:	dec    ecx
10002cda:	dec    esi
10002cdb:	dec    ecx
10002cdc:	push   esp
10002cdd:	pop    edi
10002cde:	inc    ebx
10002cdf:	dec    esp
10002ce0:	inc    ecx
10002ce1:	push   ebx
10002ce2:	push   ebx
10002ce3:	pop    edi
10002ce4:	inc    ebx
10002ce5:	inc    ecx
10002ce6:	inc    ebx
10002ce7:	dec    eax
10002ce8:	inc    ebp
10002ce9:	add    BYTE PTR [eax],al
10002ceb:	add    BYTE PTR [ebx+0x4f],al
10002cee:	pop    edi
10002cef:	inc    ebp
10002cf0:	pop    edi
10002cf1:	dec    ecx
10002cf2:	dec    esi
10002cf3:	dec    ecx
10002cf4:	push   esp
10002cf5:	pop    edi
10002cf6:	dec    ebp
10002cf7:	inc    ebp
10002cf8:	dec    ebp
10002cf9:	dec    edi
10002cfa:	push   edx
10002cfb:	pop    ecx
10002cfc:	pop    edi
10002cfd:	inc    ecx
10002cfe:	dec    esp
10002cff:	dec    esp
10002d00:	dec    edi
10002d01:	inc    ebx
10002d02:	inc    ecx
10002d03:	push   esp
10002d04:	dec    edi
10002d05:	push   edx
10002d06:	add    BYTE PTR [eax],al
10002d08:	inc    ebx
10002d09:	dec    edi
10002d0a:	pop    edi
10002d0b:	inc    ebp
10002d0c:	pop    edi
10002d0d:	dec    ecx
10002d0e:	dec    esi
10002d0f:	dec    ecx
10002d10:	push   esp
10002d11:	pop    edi
10002d12:	push   ebx
10002d13:	dec    eax
10002d14:	inc    ecx
10002d15:	push   edx
10002d16:	inc    ebp
10002d17:	inc    esp
10002d18:	pop    edi
10002d19:	inc    ecx
10002d1a:	dec    esp
10002d1b:	dec    esp
10002d1c:	dec    edi
10002d1d:	inc    ebx
10002d1e:	inc    ecx
10002d1f:	push   esp
10002d20:	dec    edi
10002d21:	push   edx
10002d22:	add    BYTE PTR [eax],al
10002d24:	inc    ebx
10002d25:	dec    edi
10002d26:	pop    edi
10002d27:	inc    ebp
10002d28:	pop    edi
10002d29:	dec    ecx
10002d2a:	dec    esi
10002d2b:	dec    ecx
10002d2c:	push   esp
10002d2d:	pop    edi
10002d2e:	push   esp
10002d2f:	dec    esp
10002d30:	push   ebx
10002d31:	add    BYTE PTR [eax],al
10002d33:	add    BYTE PTR [ebp+0x5f],al
10002d36:	inc    esi
10002d37:	inc    ecx
10002d38:	dec    ecx
10002d39:	dec    esp
10002d3a:	add    BYTE PTR [eax],al
10002d3c:	inc    ebp
10002d3d:	pop    edi
10002d3e:	inc    ecx
10002d3f:	inc    edx
10002d40:	dec    edi
10002d41:	push   edx
10002d42:	push   esp
10002d43:	add    BYTE PTR [ebp+0x5f],al
10002d46:	push   eax
10002d47:	dec    edi
10002d48:	dec    ecx
10002d49:	dec    esi
10002d4a:	push   esp
10002d4b:	inc    ebp
10002d4c:	push   edx
10002d4d:	add    BYTE PTR [eax],al
10002d4f:	add    BYTE PTR [ebp+0x5f],al
10002d52:	dec    esi
10002d53:	dec    edi
10002d54:	dec    ecx
10002d55:	dec    esi
10002d56:	push   esp
10002d57:	inc    ebp
10002d58:	push   edx
10002d59:	inc    esi
10002d5a:	inc    ecx
10002d5b:	inc    ebx
10002d5c:	inc    ebp
10002d5d:	add    BYTE PTR [eax],al
10002d5f:	add    BYTE PTR [ebp+0x5f],al
10002d62:	dec    esi
10002d63:	dec    edi
10002d64:	push   esp
10002d65:	dec    ecx
10002d66:	dec    ebp
10002d67:	push   eax
10002d68:	dec    esp
10002d69:	add    BYTE PTR [eax],al
10002d6b:	add    BYTE PTR [ebp+0x6e],dl
10002d6e:	imul   ebp,DWORD PTR [esi+0x6f],0x77
10002d72:	outs   dx,BYTE PTR ds:[esi]
10002d73:	and    BYTE PTR [ebp+0x78],ah
10002d76:	arpl   WORD PTR [ebp+0x70],sp
10002d79:	je     0x10002de4
10002d7b:	outs   dx,DWORD PTR ds:[esi]
10002d7c:	outs   dx,BYTE PTR ds:[esi]
10002d7d:	add    BYTE PTR [eax],al
10002d7f:	add    BYTE PTR [edx],al
10002d81:	data16 add BYTE PTR [eax],dl
10002d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10002d85:	dec    ebp
10002d86:	add    BYTE PTR [eax],dl
10002d88:	and    eax,0xce100064
10002d8d:	ins    BYTE PTR es:[edi],dx
10002d8e:	add    BYTE PTR [eax],dl
10002d90:	mov    cl,0x9f
10002d92:	add    BYTE PTR [eax],dl
10002d94:	mov    BYTE PTR [ebx+0x0],ah
10002d97:	adc    BYTE PTR [esi+0x4d100063],cl
10002d9d:	ins    DWORD PTR es:[edi],dx
10002d9e:	add    BYTE PTR [eax],dl
10002da0:	mov    cl,0x9f
10002da2:	add    BYTE PTR [eax],dl
10002da4:	fwait
10002da5:	add    BYTE PTR gs:[eax],dl
10002da8:	ror    DWORD PTR [ebp+0x0],cl
10002dab:	adc    BYTE PTR [edx],al
10002dad:	data16 add BYTE PTR [eax],dl
10002db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10002db1:	dec    ebp
10002db2:	add    BYTE PTR [eax],dl
10002db4:	or     esp,DWORD PTR [eax+eax*1+0x10]
10002db8:	adc    DWORD PTR [eax+eax*1+0x10],esp
10002dbc:	mov    cl,0x9f
10002dbe:	add    BYTE PTR [eax],dl
10002dc0:	in     eax,0x63
10002dc2:	add    BYTE PTR [eax],dl
10002dc4:	jmp    0x10002e29
10002dc6:	add    BYTE PTR [eax],dl
10002dc8:	xchg   ebx,eax
10002dc9:	add    BYTE PTR fs:[eax],dl
10002dcc:	and    eax,0x4a100064
10002dd1:	push   0x0
10002dd3:	adc    bl,dl
10002dd5:	dec    ebp
10002dd6:	add    BYTE PTR [eax],dl
10002dd8:	dec    edi
10002dd9:	jne    0x10002e4f
10002ddb:	and    BYTE PTR [edi+0x66],cl
10002dde:	and    BYTE PTR [ebp+0x65],cl
10002de1:	ins    DWORD PTR es:[edi],dx
10002de2:	outs   dx,DWORD PTR ds:[esi]
10002de3:	jb     0x10002e5e
10002de5:	add    BYTE PTR [eax],al
10002de7:	add    BYTE PTR [ecx],ah
10002de9:	data16 add BYTE PTR [eax],dl
10002dec:	icebp  
10002ded:	add    BYTE PTR fs:[eax],dl
10002df0:	loop   0x10002e53
10002df2:	add    BYTE PTR [eax],dl
10002df4:	or     esp,DWORD PTR [edx+0x0]
10002df7:	adc    al,bh
10002df9:	popa   
10002dfa:	add    BYTE PTR [eax],dl
10002dfc:	retf   
10002dfd:	add    BYTE PTR fs:[eax],dl
10002e00:	shl    DWORD PTR [eax+eax*1+0x10],1
10002e04:	test   al,0x6d
10002e06:	add    BYTE PTR [eax],dl
10002e08:	mov    cl,0x9f
10002e0a:	add    BYTE PTR [eax],dl
10002e0c:	shl    DWORD PTR [ebp+0x0],1
10002e0f:	adc    bl,dl
10002e11:	dec    ebp
10002e12:	add    BYTE PTR [eax],dl
10002e14:	inc    ebp
10002e15:	pop    eax
10002e16:	pop    edi
10002e17:	push   esp
10002e18:	dec    eax
10002e19:	push   edx
10002e1a:	dec    edi
10002e1b:	push   edi
10002e1c:	and    BYTE PTR [ecx+edi*2+0x70],dl
10002e20:	and    BYTE PTR gs:0x25783020,bh
10002e27:	js     0x10002e49
10002e29:	dec    eax
10002e2a:	push   edx
10002e2b:	and    BYTE PTR ds:0x25783020,bh
10002e31:	js     0x10002e5f
10002e33:	and    BYTE PTR [eax],ah
10002e35:	ins    BYTE PTR es:[edi],dx
10002e36:	imul   ebp,DWORD PTR [esi+0x65],0xa642520
10002e3d:	add    BYTE PTR [eax],al
10002e3f:	add    BYTE PTR [eax+ebp*2+0x72],dl
10002e43:	outs   dx,DWORD PTR ds:[esi]
10002e44:	ja     0x10002e8e
10002e46:	push   edx
10002e47:	cmp    ah,BYTE PTR [eax]
10002e49:	dec    eax
10002e4a:	push   edx
10002e4b:	and    BYTE PTR ds:0xa782520,bh
10002e51:	add    BYTE PTR [eax],al
10002e53:	add    BYTE PTR [ebx],ch
10002e55:	push   0x0
10002e57:	adc    BYTE PTR [edi+0x2510004d],ah
10002e5d:	add    BYTE PTR fs:[eax],dl
10002e60:	jecxz  0x10002ece
10002e62:	add    BYTE PTR [eax],dl
10002e64:	mov    cl,0x9f
10002e66:	add    BYTE PTR [eax],dl
10002e68:	mov    BYTE PTR [ebx+0x0],ah
10002e6b:	adc    BYTE PTR [esi+0x4d100063],cl
10002e71:	ins    DWORD PTR es:[edi],dx
10002e72:	add    BYTE PTR [eax],dl
10002e74:	mov    cl,0x9f
10002e76:	add    BYTE PTR [eax],dl
10002e78:	xchg   esp,eax
10002e79:	ins    BYTE PTR es:[edi],dx
10002e7a:	add    BYTE PTR [eax],dl
10002e7c:	ror    DWORD PTR [ebp+0x0],cl
10002e7f:	adc    BYTE PTR [ecx],ch
10002e81:	add    BYTE PTR [eax],al
10002e83:	add    BYTE PTR [eax],ah
10002e85:	add    BYTE PTR [eax],ch
10002e87:	add    BYTE PTR ds:0x29005300,ah
10002e8d:	add    BYTE PTR [eax],al
10002e8f:	add    BYTE PTR [eax],dh
10002e91:	add    BYTE PTR [eax+0x0],bh
10002e94:	and    eax,0x38002e00
10002e99:	add    BYTE PTR [eax+0x0],bl
10002e9c:	add    BYTE PTR [eax],al
10002e9e:	add    BYTE PTR [eax],al
10002ea0:	and    BYTE PTR [eax],al
10002ea2:	sub    BYTE PTR [eax],al
	...
10002eb0:	add    DWORD PTR [eax],eax
10002eb2:	add    BYTE PTR [eax],al
10002eb4:	add    BYTE PTR [eax],al
10002eb6:	add    BYTE PTR [eax],al
10002eb8:	rol    BYTE PTR [eax],0x0
10002ebb:	add    BYTE PTR [eax],al
10002ebd:	add    BYTE PTR [eax],al
10002ebf:	inc    esi
10002ec0:	add    DWORD PTR [ecx],eax
10002ec2:	add    DWORD PTR [ecx],eax
10002ec4:	add    DWORD PTR [ecx],eax
10002ec6:	add    DWORD PTR [ecx],eax
10002ec8:	add    DWORD PTR [eax],eax
10002eca:	add    BYTE PTR [eax],al
10002ecc:	add    BYTE PTR [eax],al
10002ece:	add    DWORD PTR [ecx],eax
10002ed0:	add    DWORD PTR [ecx],eax
10002ed2:	add    DWORD PTR [ecx],eax
10002ed4:	add    DWORD PTR [ecx],eax
10002ed6:	add    DWORD PTR [ecx],eax
10002ed8:	add    DWORD PTR [ecx],eax
10002eda:	add    DWORD PTR [ecx],eax
10002edc:	add    DWORD PTR [ecx],eax
10002ede:	add    DWORD PTR [ecx],eax
10002ee0:	add    BYTE PTR [eax],al
10002ee2:	add    BYTE PTR [eax],al
10002ee4:	add    BYTE PTR [eax],al
10002ee6:	add    BYTE PTR [ecx],al
10002ee8:	add    BYTE PTR [eax],al
10002eea:	add    BYTE PTR [eax],al
10002eec:	add    BYTE PTR [ecx],al
	...
10002f3e:	add    BYTE PTR [ecx],al
10002f40:	inc    ebp
10002f41:	pop    eax
10002f42:	pop    edi
10002f43:	inc    ebx
10002f44:	inc    ecx
10002f45:	push   esp
10002f46:	inc    ebx
10002f47:	dec    eax
10002f48:	and    BYTE PTR [eax],ah
10002f4a:	ins    BYTE PTR es:[edi],dx
10002f4b:	imul   ebp,DWORD PTR [esi+0x65],0xa642520
10002f52:	add    BYTE PTR [eax],al
10002f54:	add    BYTE PTR [eax],al
10002f56:	add    BYTE PTR [eax],al
10002f58:	inc    ecx
10002f59:	inc    edx
10002f5a:	inc    ebx
10002f5b:	inc    esp
10002f5c:	inc    ebp
10002f5d:	inc    esi
10002f5e:	inc    edi
10002f5f:	dec    eax
10002f60:	dec    ecx
10002f61:	dec    edx
10002f62:	dec    ebx
10002f63:	dec    esp
10002f64:	dec    ebp
10002f65:	dec    esi
10002f66:	dec    edi
10002f67:	push   eax
10002f68:	push   ecx
10002f69:	push   edx
10002f6a:	push   ebx
10002f6b:	push   esp
10002f6c:	push   ebp
10002f6d:	push   esi
10002f6e:	push   edi
10002f6f:	pop    eax
10002f70:	pop    ecx
10002f71:	pop    edx
10002f72:	popa   
10002f73:	bound  esp,QWORD PTR [ebx+0x64]
10002f76:	gs addr16 pushw 0x6a69
10002f7c:	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
10002f81:	jo     0x10002ff4
10002f83:	jb     0x10002ff8
10002f85:	je     0x10002ffc
10002f87:	jbe    0x10003000
10002f89:	js     0x10003004
10002f8b:	jp     0x10002fbd
10002f8d:	xor    DWORD PTR [edx],esi
10002f8f:	xor    esi,DWORD PTR [esi*1+0x39383736]
10002f96:	sub    ebp,DWORD PTR [edi]
	...
10002fa0:	add    BYTE PTR [ecx],al
10002fa2:	add    DWORD PTR [ecx],eax
10002fa4:	add    DWORD PTR [ecx],eax
10002fa6:	add    DWORD PTR [ecx],eax
10002fa8:	add    DWORD PTR [eax],eax
10002faa:	add    BYTE PTR [ecx],al
10002fac:	add    DWORD PTR [eax],eax
10002fae:	add    DWORD PTR [ecx],eax
10002fb0:	add    DWORD PTR [ecx],eax
10002fb2:	add    DWORD PTR [ecx],eax
10002fb4:	add    DWORD PTR [ecx],eax
10002fb6:	add    DWORD PTR [ecx],eax
10002fb8:	add    DWORD PTR [ecx],eax
10002fba:	add    DWORD PTR [ecx],eax
10002fbc:	add    DWORD PTR [ecx],eax
10002fbe:	add    DWORD PTR [ecx],eax
10002fc0:	add    BYTE PTR [ecx],al
10002fc2:	add    DWORD PTR [ecx],eax
10002fc4:	add    DWORD PTR [ecx],eax
10002fc6:	add    DWORD PTR [eax],eax
10002fc8:	add    BYTE PTR [eax],al
10002fca:	add    DWORD PTR [eax],eax
	...
10002fd8:	add    BYTE PTR [eax],al
10002fda:	add    BYTE PTR [ecx],al
10002fdc:	add    DWORD PTR [ecx],eax
10002fde:	add    DWORD PTR [eax],eax
10002fe0:	add    DWORD PTR [eax],eax
	...
10002ffa:	add    BYTE PTR [ecx],al
10002ffc:	add    DWORD PTR [ecx],eax
10002ffe:	add    DWORD PTR [ecx],eax
10003000:	add    DWORD PTR [eax],eax
	...
1000301a:	add    BYTE PTR [ecx],al
1000301c:	add    DWORD PTR [ecx],eax
1000301e:	add    DWORD PTR [ecx],eax
10003020:	(bad)  
10003021:	(bad)  
10003022:	(bad)  
10003023:	(bad)  
10003024:	(bad)  
10003025:	(bad)  
10003026:	(bad)  
10003027:	(bad)  
10003028:	(bad)  
10003029:	(bad)  
1000302a:	(bad)  
1000302b:	(bad)  
1000302c:	(bad)  
1000302d:	(bad)  
1000302e:	(bad)  
1000302f:	(bad)  
10003030:	(bad)  
10003031:	(bad)  
10003032:	(bad)  
10003033:	(bad)  
10003034:	(bad)  
10003035:	(bad)  
10003036:	(bad)  
10003037:	(bad)  
10003038:	(bad)  
10003039:	(bad)  
1000303a:	(bad)  
1000303b:	(bad)  
1000303c:	(bad)  
1000303d:	(bad)  
1000303e:	(bad)  
1000303f:	(bad)  
10003040:	(bad)  
10003041:	(bad)  
10003042:	(bad)  
10003043:	(bad)  
10003044:	(bad)  
10003045:	(bad)  
10003046:	(bad)  
10003047:	(bad)  
10003048:	(bad)  
10003049:	(bad)  
1000304a:	(bad)  
1000304b:	ds (bad) 
1000304d:	(bad)  
1000304e:	(bad)  
1000304f:	aas    
10003050:	xor    al,0x35
10003052:	ss aaa 
10003054:	cmp    BYTE PTR [ecx],bh
10003056:	cmp    bh,BYTE PTR [ebx]
10003058:	cmp    al,0x3d
1000305a:	(bad)  
1000305b:	(bad)  
1000305c:	(bad)  
1000305d:	(bad)  
1000305e:	(bad)  
1000305f:	(bad)  
10003060:	inc    DWORD PTR [eax]
10003062:	add    DWORD PTR [edx],eax
10003064:	add    eax,DWORD PTR [eax*1+0x9080706]
1000306b:	or     cl,BYTE PTR [ebx]
1000306d:	or     al,0xd
1000306f:	push   cs
10003070:	movups xmm2,XMMWORD PTR [ecx]
10003073:	adc    dl,BYTE PTR [ebx]
10003075:	adc    al,0x15
10003077:	push   ss
10003078:	pop    ss
10003079:	sbb    BYTE PTR [ecx],bl
1000307b:	(bad)  
1000307c:	(bad)  
1000307d:	(bad)  
1000307e:	(bad)  
1000307f:	(bad)  
10003080:	call   FWORD PTR [edx]
10003082:	sbb    ebx,DWORD PTR [ebx*1+0x21201f1e]
10003089:	and    ah,BYTE PTR [ebx]
1000308b:	and    al,0x25
1000308d:	es daa 
1000308f:	sub    BYTE PTR [ecx],ch
10003091:	sub    ch,BYTE PTR [ebx]
10003093:	sub    al,0x2d
10003095:	cs das 
10003097:	xor    BYTE PTR [ecx],dh
10003099:	xor    dh,BYTE PTR [ebx]
1000309b:	(bad)  
1000309c:	(bad)  
1000309d:	(bad)  
1000309e:	(bad)  
1000309f:	jmp    DWORD PTR [esp]
100030a2:	and    al,0x24
100030a4:	and    al,0x24
100030a6:	and    al,0x24
100030a8:	and    al,0x24
100030aa:	and    al,0x24
100030ac:	and    al,0x24
100030ae:	and    al,0x24
100030b0:	and    al,0x24
100030b2:	and    al,0x24
100030b4:	and    al,0x24
100030b6:	and    al,0x24
100030b8:	and    al,0x24
100030ba:	and    al,0x24
100030bc:	and    al,0x24
100030be:	and    al,0x24
100030c0:	and    al,0x24
100030c2:	and    al,0x24
100030c4:	and    al,0x24
100030c6:	and    al,0x24
100030c8:	and    al,0x24
100030ca:	and    al,0x24
100030cc:	and    al,0x24
100030ce:	and    al,0x24
100030d0:	and    al,0x24
100030d2:	and    al,0x24
100030d4:	and    al,0x24
100030d6:	and    al,0x24
100030d8:	and    al,0x24
100030da:	and    al,0x24
100030dc:	and    al,0x24
100030de:	and    al,0x24
100030e0:	inc    esp
100030e1:	add    BYTE PTR [ecx+0x0],ch
100030e4:	jae    0x100030e6
100030e6:	popa   
100030e7:	add    BYTE PTR [edx+0x0],ah
100030ea:	ins    BYTE PTR es:[edi],dx
100030eb:	add    BYTE PTR [ebp+0x0],ah
100030ee:	inc    ebx
100030ef:	add    BYTE PTR [edi+0x0],ch
100030f2:	outs   dx,BYTE PTR ds:[esi]
100030f3:	add    BYTE PTR [esi+0x0],ah
100030f6:	imul   eax,DWORD PTR [eax],0x430067
100030fc:	popa   
100030fd:	add    BYTE PTR [ebx+0x0],ah
10003100:	push   0x6500
10003105:	add    BYTE PTR [eax],al
10003107:	add    BYTE PTR [eax+eax*1+0x0],bl
1000310b:	add    BYTE PTR [ebp+0x0],ch
1000310e:	jae    0x10003110
10003110:	arpl   WORD PTR [eax],ax
10003112:	outs   dx,DWORD PTR ds:[esi]
10003113:	add    BYTE PTR [edx+0x0],dh
10003116:	jb     0x10003118
10003118:	arpl   WORD PTR [eax],ax
1000311a:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
1000311f:	add    BYTE PTR [eax+eax*1+0x0],ch
10003123:	add    BYTE PTR [esi+0x0],dh
10003126:	xor    al,BYTE PTR [eax]
10003128:	add    BYTE PTR cs:[eax],dh
1000312b:	add    BYTE PTR [esi],ch
1000312d:	add    BYTE PTR ds:0x37003000,dh
10003133:	add    BYTE PTR [edx],dh
10003135:	add    BYTE PTR [edi],dh
10003137:	add    BYTE PTR [eax],al
10003139:	add    BYTE PTR [eax],al
1000313b:	add    al,al
1000313d:	xor    DWORD PTR [eax],eax
1000313f:	adc    BYTE PTR [esi-0x65],ch
10003142:	add    BYTE PTR [eax],dl
10003144:	ror    ch,0x0
10003147:	adc    BYTE PTR [eax],bl
10003149:	into   
1000314a:	add    BYTE PTR [eax],dl
1000314c:	add    BYTE PTR [eax],al
1000314e:	add    BYTE PTR [eax],al
10003150:	dec    eax
	...
10003189:	add    BYTE PTR [eax],al
1000318b:	add    BYTE PTR [eax],bl
1000318d:	rol    DWORD PTR [eax],0x10
10003190:	adc    BYTE PTR [edx],dh
10003192:	add    BYTE PTR [eax],dl
10003194:	daa    
10003195:	add    BYTE PTR [eax],al
10003197:	add    BYTE PTR [edx+0x53],dl
1000319a:	inc    esp
1000319b:	push   ebx
1000319c:	leave  
1000319d:	cmp    eax,0xf6c08b59
100031a2:	dec    eax
100031a3:	inc    edi
100031a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100031a5:	jns    0x1000321b
100031a7:	add    al,0x5f
100031a9:	pusha  
100031aa:	add    BYTE PTR ds:[ecx],0x0
100031ae:	add    BYTE PTR [eax],al
100031b0:	popa   
100031b1:	jo     0x10003223
100031b3:	ins    BYTE PTR es:[edi],dx
100031b4:	popa   
100031b5:	jne    0x10003225
100031b7:	arpl   WORD PTR [eax+0x2e],bp
100031ba:	jo     0x10003220
100031bc:	bound  eax,QWORD PTR [eax]
	...
100031ca:	add    BYTE PTR [eax],al
100031cc:	and    cl,al
100031ce:	add    BYTE PTR [eax],dl
100031d0:	aam    0x31
100031d2:	add    BYTE PTR [eax],dl
	...
100031dc:	add    DWORD PTR [eax],eax
100031de:	add    BYTE PTR [eax],al
100031e0:	in     al,0x31
100031e2:	add    BYTE PTR [eax],dl
100031e4:	in     al,dx
100031e5:	xor    DWORD PTR [eax],eax
100031e7:	adc    BYTE PTR [eax],al
100031e9:	add    BYTE PTR [eax],al
100031eb:	add    BYTE PTR [eax],ah
100031ed:	rol    DWORD PTR [eax],0x10
	...
100031f8:	(bad)  
100031f9:	(bad)  
100031fa:	(bad)  
100031fb:	inc    DWORD PTR [eax]
100031fd:	add    BYTE PTR [eax],al
100031ff:	add    BYTE PTR [eax+0x0],al
10003202:	add    BYTE PTR [eax],al
10003204:	aam    0x31
10003206:	add    BYTE PTR [eax],dl
	...
10003210:	sbb    DWORD PTR [eax+eax*1+0xa24c00],ebx
10003217:	add    BYTE PTR [edi-0x5e],ch
1000321a:	add    BYTE PTR [eax],al
1000321c:	xchg   edx,eax
1000321d:	mov    ds:0xa3050000,al
10003222:	add    BYTE PTR [eax],al
10003224:	test   DWORD PTR [ebx-0x5c4b0000],esp
1000322a:	add    BYTE PTR [eax],al
1000322c:	adc    BYTE PTR [eax+eax*1+0xa44b00],ah
10003233:	add    BYTE PTR [esi-0x5c],ch
10003236:	add    BYTE PTR [eax],al
10003238:	xchg   ecx,eax
10003239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000323a:	add    BYTE PTR [eax],al
1000323c:	mov    ah,0xa4
1000323e:	add    BYTE PTR [eax],al
10003240:	fldenv [eax+eax*1+0xa4fc00]
10003247:	add    BYTE PTR [edi],bl
10003249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000324a:	add    BYTE PTR [eax],al
1000324c:	dec    ebp
1000324d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000324e:	add    BYTE PTR [eax],al
10003250:	mov    esp,DWORD PTR [ebp-0x5a450000]
10003256:	add    BYTE PTR [eax],al
10003258:	out    dx,al
10003259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000325a:	add    BYTE PTR [eax],al
1000325c:	adc    DWORD PTR [esi-0x59ca0000],esp
10003262:	add    BYTE PTR [eax],al
10003264:	pop    ecx
10003265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10003266:	add    BYTE PTR [eax],al
10003268:	jl     0x10003210
1000326a:	add    BYTE PTR [eax],al
1000326c:	mov    bh,0xa6
1000326e:	add    BYTE PTR [eax],al
10003270:	fisub  DWORD PTR [esi-0x59030000]
10003276:	add    BYTE PTR [eax],al
10003278:	and    BYTE PTR [edi-0x58bd0000],ah
1000327e:	add    BYTE PTR [eax],al
10003280:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
10003282:	add    BYTE PTR [eax],al
10003284:	xchg   edi,eax
10003285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10003286:	add    BYTE PTR [eax],al
10003288:	aad    0xa7
1000328a:	add    BYTE PTR [eax],al
1000328c:	adc    eax,0x390000a8
10003291:	test   al,0x0
10003293:	add    BYTE PTR [eax+ebp*4+0x0],bl
10003297:	add    BYTE PTR [edi-0x2dffff58],cl
1000329d:	test   al,0x0
1000329f:	add    ch,dh
100032a1:	test   al,0x0
100032a3:	add    BYTE PTR [eax-0x57],al
100032a6:	add    BYTE PTR [eax],al
100032a8:	jnp    0x10003253
	...
100032be:	add    BYTE PTR [eax],al
100032c0:	mov    eax,ecx
100032c2:	xor    ecx,ecx
100032c4:	mov    BYTE PTR [eax],0x1
100032c7:	mov    BYTE PTR [eax+0x1],0x1
100032cb:	mov    DWORD PTR [eax+0x4],ecx
100032ce:	mov    DWORD PTR [eax+0x8],ecx
100032d1:	mov    DWORD PTR [eax+0xc],ecx
100032d4:	mov    DWORD PTR [eax+0x10],ecx
100032d7:	mov    DWORD PTR [eax+0x14],ecx
100032da:	ret    
100032db:	push   ebp
100032dc:	mov    ebp,esp
100032de:	push   ecx
100032df:	and    DWORD PTR [ebp-0x4],0x0
100032e3:	push   esi
100032e4:	lea    eax,[ebp-0x4]
100032e7:	push   eax
100032e8:	push   0x100011dc
100032ed:	push   0x100011cc
100032f2:	push   0x0
100032f4:	push   0x100011fc
100032f9:	push   0x0
100032fb:	mov    esi,ecx
100032fd:	call   0x10003dce
10003302:	mov    eax,DWORD PTR [ebp-0x4]
10003305:	test   eax,eax
10003307:	jne    0x10003318
10003309:	push   0x13
1000330b:	call   0x10003d78
10003310:	pop    ecx
10003311:	mov    eax,0x8000ffff
10003316:	jmp    0x10003330
10003318:	push   DWORD PTR [ebp+0x8]
1000331b:	mov    ecx,DWORD PTR [eax]
1000331d:	push   DWORD PTR [esi+0x14]
10003320:	push   DWORD PTR [esi+0x10]
10003323:	push   DWORD PTR [esi+0xc]
10003326:	push   DWORD PTR [esi+0x8]
10003329:	push   DWORD PTR [esi+0x4]
1000332c:	push   eax
1000332d:	call   DWORD PTR [ecx+0x28]
10003330:	pop    esi
10003331:	leave  
10003332:	ret    0x4
10003335:	push   ebp
10003336:	mov    ebp,esp
10003338:	push   DWORD PTR [ecx+0x4]
1000333b:	push   DWORD PTR [ebp+0x8]
1000333e:	call   0x100036ba
10003343:	push   eax
10003344:	push   0xf
10003346:	call   0x10003a60
1000334b:	pop    ecx
1000334c:	pop    ecx
1000334d:	pop    ebp
1000334e:	ret    0x4
10003351:	push   edi
10003352:	mov    edi,ecx
10003354:	cmp    BYTE PTR [edi],0x0
10003357:	je     0x10003390
10003359:	cmp    BYTE PTR [edi+0x1],0x0
1000335d:	jne    0x10003390
1000335f:	push   esi
10003360:	mov    esi,0x10001224
10003365:	push   esi
10003366:	call   0x10003d67
1000336b:	mov    DWORD PTR [esp],0x10001204
10003372:	push   0x1
10003374:	call   0x10003d78
10003379:	push   0x3e8
1000337e:	call   0x10003d78
10003383:	push   esi
10003384:	call   0x10003d67
10003389:	add    esp,0x10
1000338c:	mov    BYTE PTR [edi],0x0
1000338f:	pop    esi
10003390:	pop    edi
10003391:	ret    
10003392:	push   0x2
10003394:	call   0x10003d78
10003399:	push   0x3
1000339b:	call   0x10003d78
100033a0:	push   0x4
100033a2:	call   0x10003d78
100033a7:	push   0x5
100033a9:	call   0x10003d78
100033ae:	push   0x6
100033b0:	call   0x10003d78
100033b5:	push   0x7
100033b7:	call   0x10003d78
100033bc:	push   0x8
100033be:	call   0x10003d78
100033c3:	push   0x9
100033c5:	call   0x10003d78
100033ca:	push   0xa
100033cc:	call   0x10003d78
100033d1:	push   0xb
100033d3:	call   0x10003d78
100033d8:	push   0xc
100033da:	call   0x10003d78
100033df:	add    esp,0x2c
100033e2:	ret    
100033e3:	cmp    BYTE PTR [ecx+0x1],0x0
100033e7:	jne    0x100033f1
100033e9:	push   0x12
100033eb:	call   0x10003d78
100033f0:	pop    ecx
100033f1:	ret    
100033f2:	push   ebp
100033f3:	mov    ebp,esp
100033f5:	push   ecx
100033f6:	push   ecx
100033f7:	push   edi
100033f8:	mov    edi,ecx
100033fa:	xor    ecx,ecx
100033fc:	cmp    DWORD PTR [ebp+0x8],ecx
100033ff:	jne    0x10003409
10003401:	xor    eax,eax
10003403:	inc    eax
10003404:	jmp    0x100035de
10003409:	cmp    DWORD PTR [ebp+0x8],ecx
1000340c:	push   ebx
1000340d:	push   esi
1000340e:	mov    DWORD PTR [ebp-0x4],ecx
10003411:	jle    0x1000358d
10003417:	mov    eax,DWORD PTR [ebp+0x8]
1000341a:	mov    ebx,DWORD PTR ds:0x10001158
10003420:	inc    eax
10003421:	mov    DWORD PTR [ebp-0x8],eax
10003424:	mov    eax,DWORD PTR [ebp+0xc]
10003427:	mov    esi,DWORD PTR [eax]
10003429:	movzx  eax,WORD PTR [esi]
1000342c:	dec    DWORD PTR [ebp+0x8]
1000342f:	dec    DWORD PTR [ebp-0x8]
10003432:	add    DWORD PTR [ebp+0xc],0x4
10003436:	cmp    ax,0x2d
1000343a:	je     0x100034c3
10003440:	cmp    ax,0x2f
10003444:	je     0x100034c3
10003446:	mov    eax,DWORD PTR [ebp-0x4]
10003449:	dec    eax
1000344a:	je     0x100034b8
1000344c:	dec    eax
1000344d:	je     0x10003487
1000344f:	dec    eax
10003450:	jne    0x100035c3
10003456:	cmp    DWORD PTR [edi+0x14],ecx
10003459:	jne    0x10003476
1000345b:	mov    eax,DWORD PTR [ebp-0x8]
1000345e:	xor    ecx,ecx
10003460:	push   0x4
10003462:	pop    edx
10003463:	mul    edx
10003465:	seto   cl
10003468:	neg    ecx
1000346a:	or     ecx,eax
1000346c:	push   ecx
1000346d:	call   0x10003e6c
10003472:	pop    ecx
10003473:	mov    DWORD PTR [edi+0x14],eax
10003476:	mov    eax,DWORD PTR [edi+0x10]
10003479:	mov    ecx,DWORD PTR [edi+0x14]
1000347c:	mov    DWORD PTR [ecx+eax*4],esi
1000347f:	inc    DWORD PTR [edi+0x10]
10003482:	jmp    0x10003582
10003487:	cmp    DWORD PTR [edi+0xc],ecx
1000348a:	jne    0x100034a7
1000348c:	mov    eax,DWORD PTR [ebp-0x8]
1000348f:	xor    ecx,ecx
10003491:	push   0x4
10003493:	pop    edx
10003494:	mul    edx
10003496:	seto   cl
10003499:	neg    ecx
1000349b:	or     ecx,eax
1000349d:	push   ecx
1000349e:	call   0x10003e6c
100034a3:	pop    ecx
100034a4:	mov    DWORD PTR [edi+0xc],eax
100034a7:	mov    eax,DWORD PTR [edi+0x8]
100034aa:	mov    ecx,DWORD PTR [edi+0xc]
100034ad:	mov    DWORD PTR [ecx+eax*4],esi
100034b0:	inc    DWORD PTR [edi+0x8]
100034b3:	jmp    0x10003582
100034b8:	mov    DWORD PTR [edi+0x4],esi
100034bb:	mov    DWORD PTR [ebp-0x4],ecx
100034be:	jmp    0x10003582
100034c3:	inc    esi
100034c4:	inc    esi
100034c5:	movzx  eax,WORD PTR [esi]
100034c8:	push   eax
100034c9:	call   DWORD PTR ds:0x1000115c
100034cf:	inc    esi
100034d0:	inc    esi
100034d1:	sub    eax,0x3f
100034d4:	pop    ecx
100034d5:	je     0x100035af
100034db:	sub    eax,0x22
100034de:	je     0x1000356a
100034e4:	sub    eax,0x7
100034e7:	je     0x100035a8
100034ed:	sub    eax,0x5
100034f0:	je     0x10003550
100034f2:	dec    eax
100034f3:	je     0x1000353b
100034f5:	dec    eax
100034f6:	dec    eax
100034f7:	je     0x1000351d
100034f9:	sub    eax,0x3
100034fc:	jne    0x100035c3
10003502:	push   0x1000128c
10003507:	add    esi,0xfffffffe
1000350a:	push   esi
1000350b:	call   ebx
1000350d:	test   eax,eax
1000350f:	pop    ecx
10003510:	pop    ecx
10003511:	jne    0x100035c3
10003517:	mov    BYTE PTR [edi+0x1],0x1
1000351b:	jmp    0x10003582
1000351d:	push   0x10001274
10003522:	add    esi,0xfffffffe
10003525:	push   esi
10003526:	call   ebx
10003528:	test   eax,eax
1000352a:	pop    ecx
1000352b:	pop    ecx
1000352c:	jne    0x100035c3
10003532:	mov    DWORD PTR [ebp-0x4],0x3
10003539:	jmp    0x10003582
1000353b:	push   0x10001264
10003540:	add    esi,0xfffffffe
10003543:	push   esi
10003544:	call   ebx
10003546:	test   eax,eax
10003548:	pop    ecx
10003549:	pop    ecx
1000354a:	jne    0x100035c3
1000354c:	mov    BYTE PTR [edi],al
1000354e:	jmp    0x10003582
10003550:	push   0x10001250
10003555:	add    esi,0xfffffffe
10003558:	push   esi
10003559:	call   ebx
1000355b:	test   eax,eax
1000355d:	pop    ecx
1000355e:	pop    ecx
1000355f:	jne    0x100035c3
10003561:	mov    DWORD PTR [ebp-0x4],0x2
10003568:	jmp    0x10003582
1000356a:	push   0x1000123c
1000356f:	add    esi,0xfffffffe
10003572:	push   esi
10003573:	call   ebx
10003575:	test   eax,eax
10003577:	pop    ecx
10003578:	pop    ecx
10003579:	jne    0x100035c3
1000357b:	mov    DWORD PTR [ebp-0x4],0x1
10003582:	xor    ecx,ecx
10003584:	cmp    DWORD PTR [ebp+0x8],ecx
10003587:	jg     0x10003424
1000358d:	cmp    DWORD PTR [edi+0x4],ecx
10003590:	jne    0x100035da
10003592:	mov    ecx,edi
10003594:	call   0x10003351
10003599:	push   0x10
1000359b:	call   0x10003d78
100035a0:	pop    ecx
100035a1:	mov    eax,0x80004005
100035a6:	jmp    0x100035dc
100035a8:	push   0x10001230
100035ad:	jmp    0x100035b4
100035af:	push   0x1000122c
100035b4:	add    esi,0xfffffffe
100035b7:	push   esi
100035b8:	call   ebx
100035ba:	test   eax,eax
100035bc:	pop    ecx
100035bd:	pop    ecx
100035be:	jne    0x100035c3
100035c0:	inc    eax
100035c1:	jmp    0x100035dc
100035c3:	mov    ecx,edi
100035c5:	call   0x10003351
100035ca:	mov    eax,DWORD PTR [ebp+0xc]
100035cd:	push   DWORD PTR [eax-0x4]
100035d0:	push   0xe
100035d2:	call   0x10003d78
100035d7:	pop    ecx
100035d8:	jmp    0x100035a0
100035da:	xor    eax,eax
100035dc:	pop    esi
100035dd:	pop    ebx
100035de:	pop    edi
100035df:	leave  
100035e0:	ret    0x8
100035e3:	push   ebp
100035e4:	mov    ebp,esp
100035e6:	sub    esp,0x1c
100035e9:	push   esi
100035ea:	call   0x10004355
100035ef:	lea    ecx,[ebp-0x1c]
100035f2:	call   0x100032c0
100035f7:	mov    eax,DWORD PTR [ebp+0xc]
100035fa:	add    eax,0x4
100035fd:	push   eax
100035fe:	mov    eax,DWORD PTR [ebp+0x8]
10003601:	dec    eax
10003602:	push   eax
10003603:	lea    ecx,[ebp-0x1c]
10003606:	call   0x100033f2
1000360b:	lea    ecx,[ebp-0x1c]
1000360e:	mov    esi,eax
10003610:	call   0x10003351
10003615:	test   esi,esi
10003617:	lea    ecx,[ebp-0x1c]
1000361a:	je     0x10003631
1000361c:	call   0x10003392
10003621:	test   esi,esi
10003623:	jge    0x1000362d
10003625:	push   0xffffffff
10003627:	call   DWORD PTR ds:0x10001154
1000362d:	push   0x0
1000362f:	jmp    0x10003627
10003631:	lea    eax,[ebp-0x4]
10003634:	push   eax
10003635:	call   0x100032db
1000363a:	test   eax,eax
1000363c:	lea    ecx,[ebp-0x1c]
1000363f:	jge    0x10003649
10003641:	push   eax
10003642:	call   0x10003335
10003647:	jmp    0x1000364e
10003649:	call   0x100033e3
1000364e:	push   DWORD PTR [ebp-0x4]
10003651:	jmp    0x10003627
10003653:	push   ebp
10003654:	mov    ebp,esp
10003656:	push   esi
10003657:	push   DWORD PTR [ebp+0x10]
1000365a:	xor    esi,esi
1000365c:	push   DWORD PTR [ebp+0xc]
1000365f:	push   DWORD PTR [ebp+0x8]
10003662:	push   esi
10003663:	call   0x10004c2b
10003668:	cmp    eax,esi
1000366a:	jne    0x100036b5
1000366c:	push   edi
1000366d:	push   esi
1000366e:	push   esi
1000366f:	push   0x100012ac
10003674:	call   0x10004747
10003679:	mov    edi,eax
1000367b:	cmp    edi,esi
1000367d:	jne    0x10003683
1000367f:	xor    eax,eax
10003681:	jmp    0x100036b4
10003683:	push   0x1000129c
10003688:	push   edi
10003689:	call   DWORD PTR ds:0x10001048
1000368f:	cmp    eax,esi
10003691:	je     0x100036ab
10003693:	movzx  ecx,WORD PTR [ebp+0x8]
10003697:	push   0x1
10003699:	push   DWORD PTR [ebp+0x10]
1000369c:	push   DWORD PTR [ebp+0xc]
1000369f:	push   ecx
100036a0:	call   eax
100036a2:	xor    ecx,ecx
100036a4:	test   eax,eax
100036a6:	setge  cl
100036a9:	mov    esi,ecx
100036ab:	push   edi
100036ac:	call   DWORD PTR ds:0x10001044
100036b2:	mov    eax,esi
100036b4:	pop    edi
100036b5:	pop    esi
100036b6:	pop    ebp
100036b7:	ret    0xc
100036ba:	push   ebp
100036bb:	mov    ebp,esp
100036bd:	sub    esp,0x820
100036c3:	mov    eax,ds:0x1000c118
100036c8:	xor    eax,ebp
100036ca:	mov    DWORD PTR [ebp-0x4],eax
100036cd:	mov    eax,DWORD PTR [ebp+0xc]
100036d0:	push   ebx
100036d1:	mov    DWORD PTR [ebp-0x820],eax
100036d7:	mov    eax,DWORD PTR [ebp+0x8]
100036da:	push   esi
100036db:	xor    ebx,ebx
100036dd:	and    eax,0x1fff0000
100036e2:	cmp    eax,0x130000
100036e7:	push   edi
100036e8:	mov    DWORD PTR [ebp-0x81c],ebx
100036ee:	mov    WORD PTR ds:0x1000c150,bx
100036f5:	mov    edi,0x1000c150
100036fa:	mov    esi,0x400
100036ff:	jne    0x100037a8
10003705:	push   esi
10003706:	lea    eax,[ebp-0x818]
1000370c:	push   eax
1000370d:	push   DWORD PTR [ebp+0x8]
10003710:	call   0x10003653
10003715:	test   eax,eax
10003717:	je     0x10003739
10003719:	lea    eax,[ebp-0x820]
1000371f:	push   eax
10003720:	push   esi
10003721:	push   edi
10003722:	push   ebx
10003723:	push   ebx
10003724:	lea    eax,[ebp-0x818]
1000372a:	push   eax
1000372b:	push   0x2400
10003730:	call   0x100049bd
10003735:	test   eax,eax
10003737:	jne    0x10003795
10003739:	push   esi
1000373a:	push   edi
1000373b:	push   0x11
1000373d:	call   0x10003653
10003742:	test   eax,eax
10003744:	jne    0x10003758
10003746:	push   0xffffffff
10003748:	push   0x100012d0
1000374d:	push   esi
1000374e:	push   edi
1000374f:	call   DWORD PTR ds:0x10001148
10003755:	add    esp,0x10
10003758:	push   DWORD PTR [ebp+0x8]
1000375b:	lea    eax,[ebp-0x18]
1000375e:	push   0x100012c4
10003763:	push   0xffffffff
10003765:	push   0x12
10003767:	push   eax
10003768:	call   DWORD PTR ds:0x1000114c
1000376e:	add    esp,0x14
10003771:	push   0x7
10003773:	pop    eax
10003774:	dec    eax
10003775:	movsx  cx,BYTE PTR [ebp+eax*1-0x17]
1000377b:	mov    WORD PTR [ebp+eax*2-0x16],cx
10003780:	jns    0x10003774
10003782:	lea    eax,[ebp-0x18]
10003785:	push   eax
10003786:	push   esi
10003787:	push   edi
10003788:	mov    WORD PTR [ebp-0x8],bx
1000378c:	call   DWORD PTR ds:0x10001150
10003792:	add    esp,0xc
10003795:	mov    ecx,DWORD PTR [ebp-0x4]
10003798:	mov    eax,edi
1000379a:	pop    edi
1000379b:	pop    esi
1000379c:	xor    ecx,ebp
1000379e:	pop    ebx
1000379f:	call   0x10009a23
100037a4:	leave  
100037a5:	ret    0x8
100037a8:	push   ebx
100037a9:	push   esi
100037aa:	push   edi
100037ab:	push   ebx
100037ac:	push   DWORD PTR [ebp+0x8]
100037af:	push   ebx
100037b0:	push   0x12ff
100037b5:	jmp    0x10003730
100037ba:	push   esi
100037bb:	mov    esi,ecx
100037bd:	cmp    DWORD PTR [esi+0x4],0x0
100037c1:	je     0x100037cf
100037c3:	push   DWORD PTR [esi]
100037c5:	call   0x10003eeb
100037ca:	and    DWORD PTR [esi+0x4],0x0
100037ce:	pop    ecx
100037cf:	pop    esi
100037d0:	ret    
100037d1:	push   0x4
100037d3:	mov    eax,0x1000a24c
100037d8:	call   0x10009a38
100037dd:	mov    esi,ecx
100037df:	mov    DWORD PTR [ebp-0x10],esi
100037e2:	or     DWORD PTR [ebp-0x4],0xffffffff
100037e6:	cmp    DWORD PTR [esi+0x4],0x0
100037ea:	je     0x100037f8
100037ec:	push   DWORD PTR [esi]
100037ee:	call   0x10003eeb
100037f3:	and    DWORD PTR [esi+0x4],0x0
100037f7:	pop    ecx
100037f8:	call   0x10009ad7
100037fd:	ret    
100037fe:	push   0x4
10003800:	mov    eax,0x1000a26f
10003805:	call   0x10009a38
1000380a:	mov    DWORD PTR [ebp-0x10],ecx
1000380d:	or     DWORD PTR [ebp-0x4],0xffffffff
10003811:	call   0x100037d1
10003816:	call   0x10009ad7
1000381b:	ret    
1000381c:	push   0x4
1000381e:	mov    eax,0x1000a292
10003823:	call   0x10009a38
10003828:	mov    DWORD PTR [ebp-0x10],ecx
1000382b:	or     DWORD PTR [ebp-0x4],0xffffffff
1000382f:	call   0x100037fe
10003834:	call   0x10009ad7
10003839:	ret    
1000383a:	push   ebp
1000383b:	mov    ebp,esp
1000383d:	push   0xffffffff
1000383f:	push   0x1000a305
10003844:	mov    eax,fs:0x0
1000384a:	push   eax
1000384b:	mov    eax,0x221c
10003850:	call   0x10009b00
10003855:	mov    eax,ds:0x1000c118
1000385a:	xor    eax,ebp
1000385c:	mov    DWORD PTR [ebp-0x10],eax
1000385f:	push   ebx
10003860:	push   esi
10003861:	push   edi
10003862:	push   eax
10003863:	lea    eax,[ebp-0xc]
10003866:	mov    fs:0x0,eax
1000386c:	mov    esi,DWORD PTR [ebp+0x8]
1000386f:	mov    edi,DWORD PTR [ebp+0xc]
10003872:	mov    DWORD PTR [ebp-0x221c],esi
10003878:	mov    DWORD PTR [ebp-0x2228],edi
1000387e:	call   0x10004355
10003883:	test   eax,eax
10003885:	je     0x1000390b
1000388b:	push   edi
1000388c:	push   esi
1000388d:	push   0xffffffff
1000388f:	lea    eax,[ebp-0x2210]
10003895:	push   0x1000
1000389a:	push   eax
1000389b:	call   DWORD PTR ds:0x10001138
100038a1:	add    esp,0x14
100038a4:	xor    ebx,ebx
100038a6:	cmp    eax,0xffffffff
100038a9:	jne    0x100038f6
100038ab:	push   0x100
100038b0:	lea    eax,[ebp-0x210]
100038b6:	push   eax
100038b7:	push   0xd
100038b9:	call   0x10003653
100038be:	test   eax,eax
100038c0:	je     0x100038f6
100038c2:	lea    eax,[ebp-0x210]
100038c8:	lea    edx,[eax+0x2]
100038cb:	mov    cx,WORD PTR [eax]
100038ce:	inc    eax
100038cf:	inc    eax
100038d0:	cmp    cx,bx
100038d3:	jne    0x100038cb
100038d5:	sub    eax,edx
100038d7:	sar    eax,1
100038d9:	lea    ecx,[ebp-0x210]
100038df:	push   ecx
100038e0:	inc    eax
100038e1:	push   eax
100038e2:	add    eax,eax
100038e4:	lea    ecx,[ebp-0x210]
100038ea:	sub    ecx,eax
100038ec:	push   ecx
100038ed:	call   DWORD PTR ds:0x1000113c
100038f3:	add    esp,0xc
100038f6:	push   0x10
100038f8:	push   ebx
100038f9:	lea    eax,[ebp-0x2210]
100038ff:	push   eax
10003900:	push   ebx
10003901:	call   0x1000492d
10003906:	jmp    0x10003a44
1000390b:	xor    ebx,ebx
1000390d:	mov    DWORD PTR [ebp-0x2218],ebx
10003913:	mov    DWORD PTR [ebp-0x2214],ebx
10003919:	mov    DWORD PTR [ebp-0x4],0x3
10003920:	mov    eax,esi
10003922:	lea    edx,[eax+0x2]
10003925:	mov    cx,WORD PTR [eax]
10003928:	inc    eax
10003929:	inc    eax
1000392a:	cmp    cx,bx
1000392d:	jne    0x10003925
1000392f:	sub    eax,edx
10003931:	sar    eax,1
10003933:	lea    esi,[eax+0x1]
10003936:	imul   esi,esi,0x3
10003939:	push   esi
1000393a:	call   0x10003e6c
1000393f:	pop    ecx
10003940:	mov    edi,eax
10003942:	cmp    DWORD PTR [ebp-0x2214],ebx
10003948:	je     0x1000395c
1000394a:	push   DWORD PTR [ebp-0x2218]
10003950:	call   0x10003eeb
10003955:	pop    ecx
10003956:	mov    DWORD PTR [ebp-0x2214],ebx
1000395c:	mov    DWORD PTR [ebp-0x2218],edi
10003962:	cmp    edi,ebx
10003964:	je     0x10003970
10003966:	mov    DWORD PTR [ebp-0x2214],0x1
10003970:	push   ebx
10003971:	push   ebx
10003972:	dec    esi
10003973:	push   esi
10003974:	push   edi
10003975:	push   0xffffffff
10003977:	push   DWORD PTR [ebp-0x221c]
1000397d:	push   ebx
1000397e:	call   DWORD PTR ds:0x1000104c
10003984:	push   eax
10003985:	call   0x100044ce
1000398a:	mov    eax,DWORD PTR [ebp-0x2218]
10003990:	xor    edi,edi
10003992:	lea    esi,[eax+0x1]
10003995:	mov    cl,BYTE PTR [eax]
10003997:	inc    eax
10003998:	cmp    cl,bl
1000399a:	jne    0x10003995
1000399c:	sub    eax,esi
1000399e:	je     0x100039ce
100039a0:	mov    eax,DWORD PTR [ebp-0x2218]
100039a6:	add    eax,edi
100039a8:	cmp    BYTE PTR [eax],0x25
100039ab:	jne    0x100039b7
100039ad:	cmp    BYTE PTR [eax+0x1],0x73
100039b1:	jne    0x100039b7
100039b3:	mov    BYTE PTR [eax+0x1],0x53
100039b7:	mov    eax,DWORD PTR [ebp-0x2218]
100039bd:	inc    edi
100039be:	lea    esi,[eax+0x1]
100039c1:	mov    cl,BYTE PTR [eax]
100039c3:	inc    eax
100039c4:	cmp    cl,bl
100039c6:	jne    0x100039c1
100039c8:	sub    eax,esi
100039ca:	cmp    edi,eax
100039cc:	jb     0x100039a0
100039ce:	mov    esi,0x400
100039d3:	push   esi
100039d4:	call   0x10003e6c
100039d9:	pop    ecx
100039da:	mov    DWORD PTR [ebp-0x2224],eax
100039e0:	mov    DWORD PTR [ebp-0x2220],ebx
100039e6:	cmp    eax,ebx
100039e8:	je     0x100039f4
100039ea:	mov    DWORD PTR [ebp-0x2220],0x1
100039f4:	mov    BYTE PTR [ebp-0x4],0x7
100039f8:	push   DWORD PTR [ebp-0x2228]
100039fe:	push   DWORD PTR [ebp-0x2218]
10003a04:	push   0xffffffff
10003a06:	push   esi
10003a07:	push   DWORD PTR [ebp-0x2224]
10003a0d:	call   DWORD PTR ds:0x10001140
10003a13:	add    esp,0x14
10003a16:	push   0x10
10003a18:	push   ebx
10003a19:	push   DWORD PTR [ebp-0x2224]
10003a1f:	push   ebx
10003a20:	call   DWORD PTR ds:0x10001164
10003a26:	mov    BYTE PTR [ebp-0x4],0x3
10003a2a:	lea    ecx,[ebp-0x2224]
10003a30:	call   0x1000381c
10003a35:	or     DWORD PTR [ebp-0x4],0xffffffff
10003a39:	lea    ecx,[ebp-0x2218]
10003a3f:	call   0x1000381c
10003a44:	mov    ecx,DWORD PTR [ebp-0xc]
10003a47:	mov    DWORD PTR fs:0x0,ecx
10003a4e:	pop    ecx
10003a4f:	pop    edi
10003a50:	pop    esi
10003a51:	pop    ebx
10003a52:	mov    ecx,DWORD PTR [ebp-0x10]
10003a55:	xor    ecx,ebp
10003a57:	call   0x10009a23
10003a5c:	leave  
10003a5d:	ret    0x8
10003a60:	push   ebp
10003a61:	mov    ebp,esp
10003a63:	sub    esp,0x804
10003a69:	mov    eax,ds:0x1000c118
10003a6e:	xor    eax,ebp
10003a70:	mov    DWORD PTR [ebp-0x4],eax
10003a73:	push   0x400
10003a78:	lea    eax,[ebp-0x804]
10003a7e:	push   eax
10003a7f:	push   DWORD PTR [ebp+0x8]
10003a82:	call   0x10003653
10003a87:	test   eax,eax
10003a89:	je     0x10003a9b
10003a8b:	lea    eax,[ebp+0xc]
10003a8e:	push   eax
10003a8f:	lea    eax,[ebp-0x804]
10003a95:	push   eax
10003a96:	call   0x1000383a
10003a9b:	mov    ecx,DWORD PTR [ebp-0x4]
10003a9e:	xor    ecx,ebp
10003aa0:	call   0x10009a23
10003aa5:	leave  
10003aa6:	ret    
10003aa7:	push   ebp
10003aa8:	mov    ebp,esp
10003aaa:	push   0xffffffff
10003aac:	push   0x1000a385
10003ab1:	mov    eax,fs:0x0
10003ab7:	push   eax
10003ab8:	mov    eax,0x2220
10003abd:	call   0x10009b00
10003ac2:	mov    eax,ds:0x1000c118
10003ac7:	xor    eax,ebp
10003ac9:	mov    DWORD PTR [ebp-0x10],eax
10003acc:	push   ebx
10003acd:	push   esi
10003ace:	push   edi
10003acf:	push   eax
10003ad0:	lea    eax,[ebp-0xc]
10003ad3:	mov    fs:0x0,eax
10003ad9:	mov    esi,DWORD PTR [ebp+0x8]
10003adc:	mov    edi,DWORD PTR [ebp+0xc]
10003adf:	xor    ebx,ebx
10003ae1:	mov    DWORD PTR [ebp-0x2224],esi
10003ae7:	mov    DWORD PTR [ebp-0x2228],edi
10003aed:	mov    DWORD PTR [ebp-0x2218],ebx
10003af3:	mov    DWORD PTR [ebp-0x2214],ebx
10003af9:	mov    DWORD PTR [ebp-0x4],0x3
10003b00:	call   0x10004355
10003b05:	test   eax,eax
10003b07:	je     0x10003bea
10003b0d:	push   edi
10003b0e:	push   esi
10003b0f:	push   0xffffffff
10003b11:	lea    eax,[ebp-0x2210]
10003b17:	push   0x1000
10003b1c:	push   eax
10003b1d:	call   DWORD PTR ds:0x10001138
10003b23:	add    esp,0x14
10003b26:	cmp    eax,0xffffffff
10003b29:	jne    0x10003b76
10003b2b:	push   0x100
10003b30:	lea    eax,[ebp-0x210]
10003b36:	push   eax
10003b37:	push   0xd
10003b39:	call   0x10003653
10003b3e:	test   eax,eax
10003b40:	je     0x10003b76
10003b42:	lea    eax,[ebp-0x210]
10003b48:	lea    edx,[eax+0x2]
10003b4b:	mov    cx,WORD PTR [eax]
10003b4e:	inc    eax
10003b4f:	inc    eax
10003b50:	cmp    cx,bx
10003b53:	jne    0x10003b4b
10003b55:	sub    eax,edx
10003b57:	sar    eax,1
10003b59:	lea    ecx,[ebp-0x210]
10003b5f:	push   ecx
10003b60:	inc    eax
10003b61:	push   eax
10003b62:	add    eax,eax
10003b64:	lea    ecx,[ebp-0x210]
10003b6a:	sub    ecx,eax
10003b6c:	push   ecx
10003b6d:	call   DWORD PTR ds:0x1000113c
10003b73:	add    esp,0xc
10003b76:	lea    eax,[ebp-0x2210]
10003b7c:	lea    edx,[eax+0x2]
10003b7f:	mov    cx,WORD PTR [eax]
10003b82:	inc    eax
10003b83:	inc    eax
10003b84:	cmp    cx,bx
10003b87:	jne    0x10003b7f
10003b89:	sub    eax,edx
10003b8b:	sar    eax,1
10003b8d:	lea    esi,[eax+0x1]
10003b90:	imul   esi,esi,0x3
10003b93:	push   esi
10003b94:	call   0x10003e6c
10003b99:	pop    ecx
10003b9a:	mov    edi,eax
10003b9c:	cmp    DWORD PTR [ebp-0x2214],ebx
10003ba2:	je     0x10003bb6
10003ba4:	push   DWORD PTR [ebp-0x2218]
10003baa:	call   0x10003eeb
10003baf:	pop    ecx
10003bb0:	mov    DWORD PTR [ebp-0x2214],ebx
10003bb6:	mov    DWORD PTR [ebp-0x2218],edi
10003bbc:	cmp    edi,ebx
10003bbe:	je     0x10003bca
10003bc0:	mov    DWORD PTR [ebp-0x2214],0x1
10003bca:	push   ebx
10003bcb:	push   ebx
10003bcc:	dec    esi
10003bcd:	push   esi
10003bce:	push   edi
10003bcf:	push   0xffffffff
10003bd1:	lea    eax,[ebp-0x2210]
10003bd7:	push   eax
10003bd8:	push   ebx
10003bd9:	call   DWORD PTR ds:0x1000104c
10003bdf:	push   eax
10003be0:	call   0x100044ce
10003be5:	jmp    0x10003d0c
10003bea:	mov    DWORD PTR [ebp-0x2220],ebx
10003bf0:	mov    DWORD PTR [ebp-0x221c],ebx
10003bf6:	mov    BYTE PTR [ebp-0x4],0x7
10003bfa:	mov    eax,esi
10003bfc:	lea    edx,[eax+0x2]
10003bff:	mov    cx,WORD PTR [eax]
10003c02:	inc    eax
10003c03:	inc    eax
10003c04:	cmp    cx,bx
10003c07:	jne    0x10003bff
10003c09:	sub    eax,edx
10003c0b:	sar    eax,1
10003c0d:	lea    esi,[eax+0x1]
10003c10:	imul   esi,esi,0x3
10003c13:	push   esi
10003c14:	call   0x10003e6c
10003c19:	pop    ecx
10003c1a:	mov    edi,eax
10003c1c:	cmp    DWORD PTR [ebp-0x221c],ebx
10003c22:	je     0x10003c36
10003c24:	push   DWORD PTR [ebp-0x2220]
10003c2a:	call   0x10003eeb
10003c2f:	pop    ecx
10003c30:	mov    DWORD PTR [ebp-0x221c],ebx
10003c36:	mov    DWORD PTR [ebp-0x2220],edi
10003c3c:	cmp    edi,ebx
10003c3e:	je     0x10003c4a
10003c40:	mov    DWORD PTR [ebp-0x221c],0x1
10003c4a:	push   ebx
10003c4b:	push   ebx
10003c4c:	dec    esi
10003c4d:	push   esi
10003c4e:	push   edi
10003c4f:	push   0xffffffff
10003c51:	push   DWORD PTR [ebp-0x2224]
10003c57:	push   ebx
10003c58:	call   DWORD PTR ds:0x1000104c
10003c5e:	push   eax
10003c5f:	call   0x100044ce
10003c64:	mov    eax,DWORD PTR [ebp-0x2220]
10003c6a:	xor    edi,edi
10003c6c:	lea    esi,[eax+0x1]
10003c6f:	mov    cl,BYTE PTR [eax]
10003c71:	inc    eax
10003c72:	cmp    cl,bl
10003c74:	jne    0x10003c6f
10003c76:	sub    eax,esi
10003c78:	je     0x10003ca8
10003c7a:	mov    eax,DWORD PTR [ebp-0x2220]
10003c80:	add    eax,edi
10003c82:	cmp    BYTE PTR [eax],0x25
10003c85:	jne    0x10003c91
10003c87:	cmp    BYTE PTR [eax+0x1],0x73
10003c8b:	jne    0x10003c91
10003c8d:	mov    BYTE PTR [eax+0x1],0x53
10003c91:	mov    eax,DWORD PTR [ebp-0x2220]
10003c97:	inc    edi
10003c98:	lea    esi,[eax+0x1]
10003c9b:	mov    cl,BYTE PTR [eax]
10003c9d:	inc    eax
10003c9e:	cmp    cl,bl
10003ca0:	jne    0x10003c9b
10003ca2:	sub    eax,esi
10003ca4:	cmp    edi,eax
10003ca6:	jb     0x10003c7a
10003ca8:	mov    esi,0x400
10003cad:	push   esi
10003cae:	call   0x10003e6c
10003cb3:	pop    ecx
10003cb4:	mov    edi,eax
10003cb6:	cmp    DWORD PTR [ebp-0x2214],ebx
10003cbc:	je     0x10003cd0
10003cbe:	push   DWORD PTR [ebp-0x2218]
10003cc4:	call   0x10003eeb
10003cc9:	pop    ecx
10003cca:	mov    DWORD PTR [ebp-0x2214],ebx
10003cd0:	mov    DWORD PTR [ebp-0x2218],edi
10003cd6:	cmp    edi,ebx
10003cd8:	je     0x10003ce4
10003cda:	mov    DWORD PTR [ebp-0x2214],0x1
10003ce4:	push   DWORD PTR [ebp-0x2228]
10003cea:	push   DWORD PTR [ebp-0x2220]
10003cf0:	push   0xffffffff
10003cf2:	push   esi
10003cf3:	push   edi
10003cf4:	call   DWORD PTR ds:0x10001140
10003cfa:	add    esp,0x14
10003cfd:	mov    BYTE PTR [ebp-0x4],0x3
10003d01:	lea    ecx,[ebp-0x2220]
10003d07:	call   0x1000381c
10003d0c:	mov    eax,DWORD PTR [ebp-0x2218]
10003d12:	lea    edx,[eax+0x1]
10003d15:	mov    cl,BYTE PTR [eax]
10003d17:	inc    eax
10003d18:	cmp    cl,bl
10003d1a:	jne    0x10003d15
10003d1c:	push   ebx
10003d1d:	lea    ecx,[ebp-0x222c]
10003d23:	push   ecx
10003d24:	sub    eax,edx
10003d26:	push   eax
10003d27:	push   DWORD PTR [ebp-0x2218]
10003d2d:	push   0xfffffff5
10003d2f:	call   DWORD PTR ds:0x10001054
10003d35:	push   eax
10003d36:	call   DWORD PTR ds:0x10001050
10003d3c:	or     DWORD PTR [ebp-0x4],0xffffffff
10003d40:	lea    ecx,[ebp-0x2218]
10003d46:	call   0x1000381c
10003d4b:	mov    ecx,DWORD PTR [ebp-0xc]
10003d4e:	mov    DWORD PTR fs:0x0,ecx
10003d55:	pop    ecx
10003d56:	pop    edi
10003d57:	pop    esi
10003d58:	pop    ebx
10003d59:	mov    ecx,DWORD PTR [ebp-0x10]
10003d5c:	xor    ecx,ebp
10003d5e:	call   0x10009a23
10003d63:	leave  
10003d64:	ret    0x8
10003d67:	push   ebp
10003d68:	mov    ebp,esp
10003d6a:	lea    eax,[ebp+0xc]
10003d6d:	push   eax
10003d6e:	push   DWORD PTR [ebp+0x8]
10003d71:	call   0x10003aa7
10003d76:	pop    ebp
10003d77:	ret    
10003d78:	push   ebp
10003d79:	mov    ebp,esp
10003d7b:	sub    esp,0x804
10003d81:	mov    eax,ds:0x1000c118
10003d86:	xor    eax,ebp
10003d88:	mov    DWORD PTR [ebp-0x4],eax
10003d8b:	push   0x400
10003d90:	lea    eax,[ebp-0x804]
10003d96:	push   eax
10003d97:	push   DWORD PTR [ebp+0x8]
10003d9a:	call   0x10003653
10003d9f:	test   eax,eax
10003da1:	je     0x10003dc1
10003da3:	lea    eax,[ebp+0xc]
10003da6:	push   eax
10003da7:	lea    eax,[ebp-0x804]
10003dad:	push   eax
10003dae:	call   0x10003aa7
10003db3:	lea    eax,[ebp+0xc]
10003db6:	push   eax
10003db7:	push   0x10001224
10003dbc:	call   0x10003aa7
10003dc1:	mov    ecx,DWORD PTR [ebp-0x4]
10003dc4:	xor    ecx,ebp
10003dc6:	call   0x10009a23
10003dcb:	leave  
10003dcc:	ret    
10003dcd:	int3   
10003dce:	jmp    DWORD PTR ds:0x1000117c
10003dd4:	push   ebp
10003dd5:	mov    ebp,esp
10003dd7:	push   esi
10003dd8:	mov    esi,ecx
10003dda:	call   DWORD PTR ds:0x10001060
10003de0:	mov    DWORD PTR [esi],eax
10003de2:	mov    eax,DWORD PTR [ebp+0x8]
10003de5:	mov    DWORD PTR [esi+0x4],eax
10003de8:	mov    eax,esi
10003dea:	pop    esi
10003deb:	pop    ebp
10003dec:	ret    0x4
10003def:	push   esi
10003df0:	mov    esi,ecx
10003df2:	cmp    DWORD PTR [esi+0x4],0x1
10003df6:	je     0x10003e07
10003df8:	cmp    DWORD PTR [esi],0x0
10003dfb:	je     0x10003e0f
10003dfd:	call   DWORD PTR ds:0x10001060
10003e03:	test   eax,eax
10003e05:	jne    0x10003e0f
10003e07:	push   DWORD PTR [esi]
10003e09:	call   DWORD PTR ds:0x10001064
10003e0f:	pop    esi
10003e10:	ret    
10003e11:	mov    eax,fs:0x18
10003e17:	mov    eax,DWORD PTR [eax+0x4]
10003e1a:	ret    
10003e1b:	mov    eax,ds:0x1000cc80
10003e20:	test   eax,eax
10003e22:	jne    0x10003e34
10003e24:	push   0x10001328
10003e29:	call   DWORD PTR ds:0x10001068
10003e2f:	mov    ds:0x1000cc80,eax
10003e34:	ret    
10003e35:	cmp    DWORD PTR ds:0x1000cc84,0x0
10003e3c:	jne    0x10003e6b
10003e3e:	cmp    DWORD PTR ds:0x1000c954,0x0
10003e45:	jne    0x10003e6b
10003e47:	call   0x10003e1b
10003e4c:	test   eax,eax
10003e4e:	je     0x10003e6b
10003e50:	push   0x10001338
10003e55:	push   eax
10003e56:	call   DWORD PTR ds:0x10001048
10003e5c:	mov    ds:0x1000c954,eax
10003e61:	mov    DWORD PTR ds:0x1000cc84,0x1
10003e6b:	ret    
10003e6c:	push   0x8
10003e6e:	mov    eax,0x1000a3b5
10003e73:	call   0x10009a38
10003e78:	push   0x2
10003e7a:	lea    ecx,[ebp-0x14]
10003e7d:	call   0x10003dd4
10003e82:	and    DWORD PTR [ebp-0x4],0x0
10003e86:	push   DWORD PTR [ebp+0x8]
10003e89:	push   0x0
10003e8b:	call   DWORD PTR ds:0x1000c004
10003e91:	mov    esi,eax
10003e93:	test   esi,esi
10003e95:	jne    0x10003e9c
10003e97:	jmp    0x10006558
10003e9c:	or     DWORD PTR [ebp-0x4],0xffffffff
10003ea0:	lea    ecx,[ebp-0x14]
10003ea3:	call   0x10003def
10003ea8:	mov    eax,esi
10003eaa:	call   0x10009ad7
10003eaf:	ret    
10003eb0:	push   0x8
10003eb2:	mov    eax,0x1000a3b5
10003eb7:	call   0x10009a38
10003ebc:	push   0x2
10003ebe:	lea    ecx,[ebp-0x14]
10003ec1:	call   0x10003dd4
10003ec6:	and    DWORD PTR [ebp-0x4],0x0
10003eca:	push   DWORD PTR [ebp+0x8]
10003ecd:	push   0x0
10003ecf:	call   DWORD PTR ds:0x1000c004
10003ed5:	mov    esi,eax
10003ed7:	or     DWORD PTR [ebp-0x4],0xffffffff
10003edb:	lea    ecx,[ebp-0x14]
10003ede:	call   0x10003def
10003ee3:	mov    eax,esi
10003ee5:	call   0x10009ad7
10003eea:	ret    
10003eeb:	push   0x8
10003eed:	mov    eax,0x1000a3b5
10003ef2:	call   0x10009a38
10003ef7:	push   0x2
10003ef9:	lea    ecx,[ebp-0x14]
10003efc:	call   0x10003dd4
10003f01:	xor    eax,eax
10003f03:	mov    DWORD PTR [ebp-0x4],eax
10003f06:	cmp    DWORD PTR [ebp+0x8],eax
10003f09:	je     0x10003f15
10003f0b:	push   DWORD PTR [ebp+0x8]
10003f0e:	push   eax
10003f0f:	call   DWORD PTR ds:0x1000c008
10003f15:	or     DWORD PTR [ebp-0x4],0xffffffff
10003f19:	lea    ecx,[ebp-0x14]
10003f1c:	call   0x10003def
10003f21:	call   0x10009ad7
10003f26:	ret    
10003f27:	push   ebp
10003f28:	mov    ebp,esp
10003f2a:	push   ecx
10003f2b:	push   esi
10003f2c:	xor    esi,esi
10003f2e:	cmp    DWORD PTR ds:0x1000c958,esi
10003f34:	jne    0x10003f9c
10003f36:	push   ebx
10003f37:	call   0x10004355
10003f3c:	push   esi
10003f3d:	push   esi
10003f3e:	push   0x100012ac
10003f43:	call   0x10004747
10003f48:	mov    ebx,eax
10003f4a:	cmp    ebx,esi
10003f4c:	je     0x10003f9b
10003f4e:	mov    esi,DWORD PTR ds:0x10001048
10003f54:	push   edi
10003f55:	mov    edi,0x10001374
10003f5a:	push   edi
10003f5b:	push   ebx
10003f5c:	call   esi
10003f5e:	test   eax,eax
10003f60:	jne    0x10003f93
10003f62:	push   0x10001364
10003f67:	push   ebx
10003f68:	call   esi
10003f6a:	xor    ebx,ebx
10003f6c:	cmp    eax,ebx
10003f6e:	je     0x10003f9a
10003f70:	lea    ecx,[ebp-0x4]
10003f73:	push   ecx
10003f74:	push   ebx
10003f75:	push   ebx
10003f76:	push   0x10001348
10003f7b:	mov    DWORD PTR [ebp-0x4],ebx
10003f7e:	call   eax
10003f80:	test   eax,eax
10003f82:	jl     0x10003f9a
10003f84:	cmp    DWORD PTR [ebp-0x4],ebx
10003f87:	je     0x10003f9a
10003f89:	push   edi
10003f8a:	push   DWORD PTR [ebp-0x4]
10003f8d:	call   esi
10003f8f:	cmp    eax,ebx
10003f91:	je     0x10003f9a
10003f93:	call   eax
10003f95:	mov    ds:0x1000c958,eax
10003f9a:	pop    edi
10003f9b:	pop    ebx
10003f9c:	mov    eax,ds:0x1000c958
10003fa1:	pop    esi
10003fa2:	leave  
10003fa3:	ret    
10003fa4:	push   ebp
10003fa5:	mov    ebp,esp
10003fa7:	push   ecx
10003fa8:	mov    eax,ds:0x1000cc88
10003fad:	test   eax,eax
10003faf:	jne    0x10003fcc
10003fb1:	call   0x10003f27
10003fb6:	mov    ecx,DWORD PTR [eax]
10003fb8:	lea    edx,[ebp-0x4]
10003fbb:	push   edx
10003fbc:	push   0x100011ec
10003fc1:	push   eax
10003fc2:	call   DWORD PTR [ecx]
10003fc4:	mov    eax,DWORD PTR [ebp-0x4]
10003fc7:	mov    ds:0x1000cc88,eax
10003fcc:	leave  
10003fcd:	ret    
10003fce:	push   DWORD PTR ds:0x1000c000
10003fd4:	call   DWORD PTR ds:0x10001058
10003fda:	ret    
10003fdb:	call   0x10004355
10003fe0:	call   0x10003f27
10003fe5:	mov    ecx,DWORD PTR [eax]
10003fe7:	push   eax
10003fe8:	call   DWORD PTR [ecx+0x10]
10003feb:	push   0x0
10003fed:	push   eax
10003fee:	mov    ds:0x1000c000,eax
10003ff3:	mov    DWORD PTR ds:0x1000c00c,0x10003fce
10003ffd:	call   0x10006e3a
10004002:	test   eax,eax
10004004:	je     0x1000400b
10004006:	mov    ds:0x1000c00c,eax
1000400b:	jmp    DWORD PTR ds:0x1000c00c
10004011:	push   ebp
10004012:	mov    ebp,esp
10004014:	call   0x10003f27
10004019:	push   DWORD PTR [ebp+0xc]
1000401c:	mov    ecx,DWORD PTR [eax]
1000401e:	push   DWORD PTR [ebp+0x8]
10004021:	push   0x0
10004023:	push   eax
10004024:	call   DWORD PTR [ecx+0x24]
10004027:	pop    ebp
10004028:	ret    0x8
1000402b:	push   ebp
1000402c:	mov    ebp,esp
1000402e:	call   0x10003f27
10004033:	push   DWORD PTR [ebp+0x8]
10004036:	mov    ecx,DWORD PTR [eax]
10004038:	push   eax
10004039:	call   DWORD PTR [ecx+0x28]
1000403c:	xor    eax,eax
1000403e:	pop    ebp
1000403f:	ret    0x4
10004042:	push   ebp
10004043:	mov    ebp,esp
10004045:	call   0x10003f27
1000404a:	push   DWORD PTR [ebp+0x8]
1000404d:	mov    ecx,DWORD PTR [eax]
1000404f:	push   eax
10004050:	call   DWORD PTR [ecx+0x2c]
10004053:	pop    ebp
10004054:	ret    0x4
10004057:	push   ebp
10004058:	mov    ebp,esp
1000405a:	call   0x10003f27
1000405f:	push   DWORD PTR [ebp+0x8]
10004062:	mov    ecx,DWORD PTR [eax]
10004064:	push   eax
10004065:	call   DWORD PTR [ecx+0x30]
10004068:	pop    ebp
10004069:	ret    0x4
1000406c:	push   ebp
1000406d:	mov    ebp,esp
1000406f:	call   0x10003f27
10004074:	push   DWORD PTR [ebp+0xc]
10004077:	mov    ecx,DWORD PTR [eax]
10004079:	push   DWORD PTR [ebp+0x8]
1000407c:	push   eax
1000407d:	call   DWORD PTR [ecx+0x70]
10004080:	pop    ebp
10004081:	ret    0x8
10004084:	call   0x10003fa4
10004089:	mov    ecx,DWORD PTR [eax]
1000408b:	push   eax
1000408c:	call   DWORD PTR [ecx+0x1c]
1000408f:	ret    
10004090:	push   ebp
10004091:	mov    ebp,esp
10004093:	call   0x10003fa4
10004098:	push   DWORD PTR [ebp+0x10]
1000409b:	mov    ecx,DWORD PTR [eax]
1000409d:	push   DWORD PTR [ebp+0xc]
100040a0:	push   DWORD PTR [ebp+0x8]
100040a3:	push   eax
100040a4:	call   DWORD PTR [ecx+0x28]
100040a7:	pop    ebp
100040a8:	ret    0xc
100040ab:	push   ebp
100040ac:	mov    ebp,esp
100040ae:	call   0x10003fa4
100040b3:	push   DWORD PTR [ebp+0x10]
100040b6:	mov    ecx,DWORD PTR [eax]
100040b8:	push   DWORD PTR [ebp+0xc]
100040bb:	push   DWORD PTR [ebp+0x8]
100040be:	push   eax
100040bf:	call   DWORD PTR [ecx+0x2c]
100040c2:	pop    ebp
100040c3:	ret    0xc
100040c6:	call   0x10003fa4
100040cb:	mov    ecx,DWORD PTR [eax]
100040cd:	push   eax
100040ce:	call   DWORD PTR [ecx+0x34]
100040d1:	ret    
100040d2:	push   ebp
100040d3:	mov    ebp,esp
100040d5:	call   0x10003f27
100040da:	push   DWORD PTR [ebp+0x8]
100040dd:	mov    ecx,DWORD PTR [eax]
100040df:	push   eax
100040e0:	call   DWORD PTR [ecx+0x78]
100040e3:	pop    ebp
100040e4:	ret    0x4
100040e7:	push   ebp
100040e8:	mov    ebp,esp
100040ea:	call   DWORD PTR ds:0x1000c00c
100040f0:	test   eax,eax
100040f2:	jne    0x10004107
100040f4:	call   0x10003f27
100040f9:	push   DWORD PTR [ebp+0xc]
100040fc:	mov    ecx,DWORD PTR [eax]
100040fe:	push   DWORD PTR [ebp+0x8]
10004101:	push   eax
10004102:	call   DWORD PTR [ecx+0x18]
10004105:	jmp    0x10004115
10004107:	mov    ecx,DWORD PTR [ebp+0x8]
1000410a:	mov    eax,DWORD PTR [eax+ecx*4]
1000410d:	mov    ecx,DWORD PTR [ebp+0xc]
10004110:	mov    DWORD PTR [ecx],eax
10004112:	xor    eax,eax
10004114:	inc    eax
10004115:	pop    ebp
10004116:	ret    0x8
10004119:	push   0x8
1000411b:	mov    eax,0x1000a3b5
10004120:	call   0x10009a38
10004125:	push   0x2
10004127:	lea    ecx,[ebp-0x14]
1000412a:	call   0x10003dd4
1000412f:	and    DWORD PTR [ebp-0x4],0x0
10004133:	call   DWORD PTR ds:0x1000c00c
10004139:	test   eax,eax
1000413b:	jne    0x10004150
1000413d:	call   0x10003f27
10004142:	push   DWORD PTR [ebp+0xc]
10004145:	mov    ecx,DWORD PTR [eax]
10004147:	push   DWORD PTR [ebp+0x8]
1000414a:	push   eax
1000414b:	call   DWORD PTR [ecx+0x1c]
1000414e:	jmp    0x10004159
10004150:	mov    ecx,DWORD PTR [ebp+0xc]
10004153:	mov    edx,DWORD PTR [ebp+0x8]
10004156:	mov    DWORD PTR [eax+edx*4],ecx
10004159:	or     DWORD PTR [ebp-0x4],0xffffffff
1000415d:	lea    ecx,[ebp-0x14]
10004160:	call   0x10003def
10004165:	call   0x10009ad7
1000416a:	ret    0x8
1000416d:	push   esi
1000416e:	mov    eax,ecx
10004170:	push   0x63
10004172:	mov    edx,eax
10004174:	pop    esi
10004175:	and    DWORD PTR [edx],0x0
10004178:	and    DWORD PTR [edx+0x4],0x0
1000417c:	add    edx,0x8
1000417f:	dec    esi
10004180:	jns    0x10004175
10004182:	pop    esi
10004183:	ret    
10004184:	push   ebp
10004185:	mov    ebp,esp
10004187:	push   ecx
10004188:	push   ecx
10004189:	push   ebx
1000418a:	push   edi
1000418b:	lea    eax,[ebp-0x4]
1000418e:	push   eax
1000418f:	xor    ebx,ebx
10004191:	push   0x10
10004193:	mov    edi,ecx
10004195:	mov    DWORD PTR [ebp-0x4],ebx
10004198:	call   0x100040e7
1000419d:	test   eax,eax
1000419f:	je     0x100041af
100041a1:	mov    eax,DWORD PTR [ebp-0x4]
100041a4:	inc    eax
100041a5:	push   eax
100041a6:	push   0x10
100041a8:	call   0x10004119
100041ad:	jmp    0x100041f3
100041af:	call   0x10003e11
100041b4:	mov    ecx,eax
100041b6:	mov    DWORD PTR [ebp-0x8],ecx
100041b9:	xor    eax,eax
100041bb:	cmp    DWORD PTR [edi+eax*8],ecx
100041be:	je     0x100041f7
100041c0:	inc    eax
100041c1:	cmp    eax,0x64
100041c4:	jl     0x100041bb
100041c6:	push   esi
100041c7:	mov    esi,edi
100041c9:	cmp    DWORD PTR [esi],0x0
100041cc:	jne    0x100041de
100041ce:	push   0x0
100041d0:	push   DWORD PTR [ebp-0x8]
100041d3:	push   esi
100041d4:	call   DWORD PTR ds:0x1000105c
100041da:	test   eax,eax
100041dc:	je     0x100041ff
100041de:	inc    ebx
100041df:	add    esi,0x8
100041e2:	cmp    ebx,0x64
100041e5:	jl     0x100041c9
100041e7:	push   0x1000c950
100041ec:	call   DWORD PTR ds:0x1000106c
100041f2:	pop    esi
100041f3:	pop    edi
100041f4:	pop    ebx
100041f5:	leave  
100041f6:	ret    
100041f7:	lea    eax,[edi+eax*8+0x4]
100041fb:	inc    DWORD PTR [eax]
100041fd:	jmp    0x100041f3
100041ff:	mov    DWORD PTR [edi+ebx*8+0x4],0x1
10004207:	jmp    0x100041f2
10004209:	push   ebp
1000420a:	mov    ebp,esp
1000420c:	push   ecx
1000420d:	and    DWORD PTR [ebp-0x4],0x0
10004211:	push   esi
10004212:	lea    eax,[ebp-0x4]
10004215:	push   eax
10004216:	push   0x10
10004218:	mov    esi,ecx
1000421a:	call   0x100040e7
1000421f:	test   eax,eax
10004221:	je     0x10004235
10004223:	mov    eax,DWORD PTR [ebp-0x4]
10004226:	test   eax,eax
10004228:	jbe    0x10004235
1000422a:	dec    eax
1000422b:	push   eax
1000422c:	push   0x10
1000422e:	call   0x10004119
10004233:	jmp    0x10004252
10004235:	call   0x10003e11
1000423a:	xor    ecx,ecx
1000423c:	cmp    DWORD PTR [esi+ecx*8],eax
1000423f:	je     0x10004255
10004241:	inc    ecx
10004242:	cmp    ecx,0x64
10004245:	jl     0x1000423c
10004247:	push   0x1000c950
1000424c:	call   DWORD PTR ds:0x10001070
10004252:	pop    esi
10004253:	leave  
10004254:	ret    
10004255:	lea    eax,[esi+ecx*8]
10004258:	dec    DWORD PTR [eax+0x4]
1000425b:	jne    0x10004252
1000425d:	and    DWORD PTR [eax],0x0
10004260:	jmp    0x10004252
10004262:	push   ebp
10004263:	mov    ebp,esp
10004265:	push   ecx
10004266:	and    DWORD PTR [ebp-0x4],0x0
1000426a:	push   esi
1000426b:	lea    eax,[ebp-0x4]
1000426e:	push   eax
1000426f:	push   0x10
10004271:	mov    esi,ecx
10004273:	call   0x100040e7
10004278:	test   eax,eax
1000427a:	je     0x10004287
1000427c:	cmp    DWORD PTR [ebp-0x4],0x0
10004280:	jbe    0x10004287
10004282:	xor    eax,eax
10004284:	inc    eax
10004285:	jmp    0x100042a7
10004287:	call   0x10003e11
1000428c:	xor    ecx,ecx
1000428e:	cmp    DWORD PTR [esi+ecx*8],eax
10004291:	je     0x10004282
10004293:	inc    ecx
10004294:	cmp    ecx,0x64
10004297:	jl     0x1000428e
10004299:	mov    eax,ds:0x1000c950
1000429e:	xor    ecx,ecx
100042a0:	test   eax,eax
100042a2:	setg   cl
100042a5:	mov    eax,ecx
100042a7:	pop    esi
100042a8:	leave  
100042a9:	ret    
100042aa:	mov    ecx,0x1000c960
100042af:	jmp    0x10004184
100042b4:	mov    ecx,0x1000c960
100042b9:	jmp    0x10004209
100042be:	mov    ecx,0x1000c960
100042c3:	jmp    0x10004262
100042c8:	push   ebp
100042c9:	mov    ebp,esp
100042cb:	call   0x10003e35
100042d0:	mov    eax,ds:0x1000c954
100042d5:	test   eax,eax
100042d7:	je     0x100042ec
100042d9:	push   0x10001378
100042de:	call   eax
100042e0:	test   eax,eax
100042e2:	je     0x100042ec
100042e4:	mov    ds:0x1000c004,eax
100042e9:	pop    ebp
100042ea:	jmp    eax
100042ec:	push   DWORD PTR [ebp+0xc]
100042ef:	push   DWORD PTR [ebp+0x8]
100042f2:	call   0x10004084
100042f7:	push   eax
100042f8:	call   0x10004090
100042fd:	pop    ebp
100042fe:	ret    0x8
10004301:	push   ebp
10004302:	mov    ebp,esp
10004304:	call   0x10003e35
10004309:	mov    eax,ds:0x1000c954
1000430e:	test   eax,eax
10004310:	je     0x10004325
10004312:	push   0x10001394
10004317:	call   eax
10004319:	test   eax,eax
1000431b:	je     0x10004325
1000431d:	mov    ds:0x1000c008,eax
10004322:	pop    ebp
10004323:	jmp    eax
10004325:	push   DWORD PTR [ebp+0xc]
10004328:	push   DWORD PTR [ebp+0x8]
1000432b:	call   0x10004084
10004330:	push   eax
10004331:	call   0x100040ab
10004336:	pop    ebp
10004337:	ret    0x8
1000433a:	cmp    DWORD PTR ds:0x1000ccbc,0x0
10004341:	jne    0x10004348
10004343:	call   0x10006f25
10004348:	xor    eax,eax
1000434a:	cmp    DWORD PTR ds:0x1000ccbc,0x1
10004351:	sete   al
10004354:	ret    
10004355:	push   ebp
10004356:	mov    ebp,esp
10004358:	sub    esp,0xb0
1000435e:	mov    eax,ds:0x1000c118
10004363:	xor    eax,ebp
10004365:	mov    DWORD PTR [ebp-0x4],eax
10004368:	push   ebx
10004369:	mov    eax,ds:0x1000c010
1000436e:	cmp    eax,0xffffffff
10004371:	mov    ebx,0x80000001
10004376:	mov    DWORD PTR [ebp-0xb0],ebx
1000437c:	jne    0x10004476
10004382:	push   esi
10004383:	push   edi
10004384:	lea    eax,[ebp-0x18]
10004387:	push   eax
10004388:	xor    esi,esi
1000438a:	push   esi
1000438b:	call   DWORD PTR ds:0x1000107c
10004391:	test   eax,eax
10004393:	push   0x2
10004395:	pop    edi
10004396:	je     0x100043a2
10004398:	mov    eax,DWORD PTR [ebp-0x18]
1000439b:	mov    ds:0x1000cc90,eax
100043a0:	jmp    0x100043a8
100043a2:	mov    DWORD PTR ds:0x1000cc90,edi
100043a8:	push   esi
100043a9:	push   esi
100043aa:	push   0xffffffff
100043ac:	push   0x100013cc
100043b1:	push   0x8
100043b3:	push   0xfde9
100043b8:	call   DWORD PTR ds:0x10001078
100043be:	test   eax,eax
100043c0:	setne  al
100043c3:	mov    ds:0x1000cc8c,al
100043c8:	lea    eax,[ebp-0xac]
100043ce:	push   eax
100043cf:	mov    DWORD PTR [ebp-0xac],0x94
100043d9:	call   DWORD PTR ds:0x10001074
100043df:	test   eax,eax
100043e1:	je     0x100043eb
100043e3:	cmp    DWORD PTR [ebp-0x9c],edi
100043e9:	je     0x10004459
100043eb:	lea    eax,[ebp-0xb0]
100043f1:	push   eax
100043f2:	mov    edi,0x20019
100043f7:	push   edi
100043f8:	push   esi
100043f9:	push   0x100013b8
100043fe:	mov    esi,0x80000002
10004403:	push   esi
10004404:	call   DWORD PTR ds:0x10001000
1000440a:	test   eax,eax
1000440c:	jne    0x10004445
1000440e:	cmp    DWORD PTR [ebp-0xb0],ebx
10004414:	jne    0x1000444d
10004416:	lea    eax,[ebp-0xb0]
1000441c:	push   eax
1000441d:	push   edi
1000441e:	xor    edi,edi
10004420:	push   edi
10004421:	push   0x100013ac
10004426:	push   esi
10004427:	call   DWORD PTR ds:0x10001004
1000442d:	test   eax,eax
1000442f:	jne    0x10004445
10004431:	cmp    DWORD PTR [ebp-0xb0],ebx
10004437:	je     0x10004459
10004439:	mov    DWORD PTR ds:0x1000c010,edi
1000443f:	mov    DWORD PTR ds:0x1000c014,edi
10004445:	cmp    DWORD PTR [ebp-0xb0],ebx
1000444b:	je     0x10004459
1000444d:	push   DWORD PTR [ebp-0xb0]
10004453:	call   DWORD PTR ds:0x10001008
10004459:	cmp    DWORD PTR ds:0x1000c010,0xffffffff
10004460:	pop    edi
10004461:	pop    esi
10004462:	jne    0x10004471
10004464:	xor    eax,eax
10004466:	inc    eax
10004467:	mov    ds:0x1000c010,eax
1000446c:	mov    ds:0x1000c014,eax
10004471:	mov    eax,ds:0x1000c010
10004476:	mov    ecx,DWORD PTR [ebp-0x4]
10004479:	xor    ecx,ebp
1000447b:	pop    ebx
1000447c:	call   0x10009a23
10004481:	leave  
10004482:	ret    
10004483:	push   ebp
10004484:	mov    ebp,esp
10004486:	cmp    BYTE PTR ds:0x1000cc8c,0x0
1000448d:	mov    eax,DWORD PTR [ebp+0x8]
10004490:	jne    0x100044b4
10004492:	lea    ecx,[eax-0xfde8]
10004498:	cmp    ecx,0x1
1000449b:	ja     0x100044b4
1000449d:	push   DWORD PTR [ebp+0x1c]
100044a0:	push   DWORD PTR [ebp+0x18]
100044a3:	push   DWORD PTR [ebp+0x14]
100044a6:	push   DWORD PTR [ebp+0x10]
100044a9:	push   DWORD PTR [ebp+0xc]
100044ac:	push   eax
100044ad:	call   0x10007886
100044b2:	jmp    0x100044ca
100044b4:	push   DWORD PTR [ebp+0x1c]
100044b7:	push   DWORD PTR [ebp+0x18]
100044ba:	push   DWORD PTR [ebp+0x14]
100044bd:	push   DWORD PTR [ebp+0x10]
100044c0:	push   DWORD PTR [ebp+0xc]
100044c3:	push   eax
100044c4:	call   DWORD PTR ds:0x10001078
100044ca:	pop    ebp
100044cb:	ret    0x18
100044ce:	push   ebp
100044cf:	mov    ebp,esp
100044d1:	cmp    BYTE PTR ds:0x1000cc8c,0x0
100044d8:	mov    eax,DWORD PTR [ebp+0x8]
100044db:	jne    0x10004505
100044dd:	lea    ecx,[eax-0xfde8]
100044e3:	cmp    ecx,0x1
100044e6:	ja     0x10004505
100044e8:	push   DWORD PTR [ebp+0x24]
100044eb:	push   DWORD PTR [ebp+0x20]
100044ee:	push   DWORD PTR [ebp+0x1c]
100044f1:	push   DWORD PTR [ebp+0x18]
100044f4:	push   DWORD PTR [ebp+0x14]
100044f7:	push   DWORD PTR [ebp+0x10]
100044fa:	push   DWORD PTR [ebp+0xc]
100044fd:	push   eax
100044fe:	call   0x1000793d
10004503:	jmp    0x10004521
10004505:	push   DWORD PTR [ebp+0x24]
10004508:	push   DWORD PTR [ebp+0x20]
1000450b:	push   DWORD PTR [ebp+0x1c]
1000450e:	push   DWORD PTR [ebp+0x18]
10004511:	push   DWORD PTR [ebp+0x14]
10004514:	push   DWORD PTR [ebp+0x10]
10004517:	push   DWORD PTR [ebp+0xc]
1000451a:	push   eax
1000451b:	call   DWORD PTR ds:0x10001080
10004521:	pop    ebp
10004522:	ret    0x20
10004525:	push   ebp
10004526:	mov    ebp,esp
10004528:	push   ecx
10004529:	push   ebx
1000452a:	mov    ebx,DWORD PTR [ebp+0x14]
1000452d:	push   esi
1000452e:	push   edi
1000452f:	xor    edi,edi
10004531:	cmp    ebx,edi
10004533:	mov    DWORD PTR [ebp-0x4],edi
10004536:	jne    0x1000453b
10004538:	lea    ebx,[ebp-0x4]
1000453b:	cmp    DWORD PTR [ebp+0x8],edi
1000453e:	je     0x100045f5
10004544:	cmp    DWORD PTR [ebp+0xc],edi
10004547:	je     0x100045f5
1000454d:	cmp    DWORD PTR [ebp+0x18],edi
10004550:	mov    esi,DWORD PTR ds:0x10001078
10004556:	je     0x100045bf
10004558:	push   edi
10004559:	push   edi
1000455a:	push   DWORD PTR [ebp+0xc]
1000455d:	push   DWORD PTR [ebp+0x8]
10004560:	push   0x8
10004562:	push   edi
10004563:	call   esi
10004565:	cmp    eax,edi
10004567:	mov    DWORD PTR [ebp+0x14],eax
1000456a:	jne    0x1000458d
1000456c:	mov    esi,DWORD PTR ds:0x10001060
10004572:	call   esi
10004574:	test   eax,eax
10004576:	jg     0x1000457f
10004578:	call   esi
1000457a:	jmp    0x10004602
1000457f:	call   esi
10004581:	and    eax,0xffff
10004586:	or     eax,0x80070000
1000458b:	jmp    0x10004602
1000458d:	push   0x10001320
10004592:	xor    ecx,ecx
10004594:	push   0x2
10004596:	pop    edx
10004597:	mul    edx
10004599:	seto   cl
1000459c:	neg    ecx
1000459e:	or     ecx,eax
100045a0:	push   ecx
100045a1:	call   0x10003eb0
100045a6:	mov    edi,DWORD PTR [ebp+0x10]
100045a9:	mov    DWORD PTR [edi],eax
100045ab:	mov    eax,DWORD PTR [ebp+0x14]
100045ae:	mov    DWORD PTR [ebx],eax
100045b0:	mov    eax,DWORD PTR [edi]
100045b2:	test   eax,eax
100045b4:	pop    ecx
100045b5:	pop    ecx
100045b6:	jne    0x100045c8
100045b8:	mov    eax,0x8007000e
100045bd:	jmp    0x10004602
100045bf:	mov    edi,DWORD PTR [ebp+0x10]
100045c2:	mov    eax,DWORD PTR [edi]
100045c4:	test   eax,eax
100045c6:	je     0x10004600
100045c8:	push   DWORD PTR [ebx]
100045ca:	push   eax
100045cb:	push   DWORD PTR [ebp+0xc]
100045ce:	push   DWORD PTR [ebp+0x8]
100045d1:	push   0x8
100045d3:	push   0x0
100045d5:	call   esi
100045d7:	test   eax,eax
100045d9:	je     0x100045df
100045db:	mov    DWORD PTR [ebx],eax
100045dd:	jmp    0x10004600
100045df:	cmp    DWORD PTR [ebp+0x18],0x0
100045e3:	je     0x1000456c
100045e5:	push   DWORD PTR [edi]
100045e7:	call   0x10003eeb
100045ec:	and    DWORD PTR [edi],0x0
100045ef:	pop    ecx
100045f0:	jmp    0x1000456c
100045f5:	cmp    ebx,edi
100045f7:	mov    eax,DWORD PTR [ebp+0x10]
100045fa:	mov    DWORD PTR [eax],edi
100045fc:	je     0x10004600
100045fe:	mov    DWORD PTR [ebx],edi
10004600:	xor    eax,eax
10004602:	pop    edi
10004603:	pop    esi
10004604:	pop    ebx
10004605:	leave  
10004606:	ret    0x14
10004609:	push   ebp
1000460a:	mov    ebp,esp
1000460c:	push   ecx
1000460d:	push   ebx
1000460e:	push   esi
1000460f:	push   edi
10004610:	mov    edi,DWORD PTR [ebp+0x8]
10004613:	xor    esi,esi
10004615:	cmp    edi,esi
10004617:	je     0x10004625
10004619:	push   edi
1000461a:	call   DWORD PTR ds:0x10001084
10004620:	mov    ebx,eax
10004622:	inc    ebx
10004623:	jmp    0x10004627
10004625:	xor    ebx,ebx
10004627:	cmp    DWORD PTR [ebp+0x14],esi
1000462a:	jne    0x10004632
1000462c:	lea    eax,[ebp+0x14]
1000462f:	mov    DWORD PTR [ebp+0x14],eax
10004632:	cmp    edi,esi
10004634:	je     0x10004734
1000463a:	cmp    ebx,esi
1000463c:	je     0x10004734
10004642:	cmp    DWORD PTR [ebp+0x18],esi
10004645:	je     0x10004680
10004647:	push   esi
10004648:	push   esi
10004649:	push   esi
1000464a:	push   esi
1000464b:	push   ebx
1000464c:	push   edi
1000464d:	push   esi
1000464e:	push   esi
1000464f:	call   DWORD PTR ds:0x10001080
10004655:	push   0x10001320
1000465a:	push   eax
1000465b:	mov    DWORD PTR [ebp+0x10],eax
1000465e:	call   0x10003eb0
10004663:	cmp    eax,esi
10004665:	mov    edi,DWORD PTR [ebp+0xc]
10004668:	pop    ecx
10004669:	pop    ecx
1000466a:	mov    DWORD PTR [edi],eax
1000466c:	jne    0x1000468b
1000466e:	push   0xe
10004670:	call   DWORD PTR ds:0x10001064
10004676:	mov    eax,0x8007000e
1000467b:	jmp    0x10004740
10004680:	mov    edi,DWORD PTR [ebp+0xc]
10004683:	cmp    DWORD PTR [edi],esi
10004685:	je     0x1000473e
1000468b:	lea    eax,[ebp-0x4]
1000468e:	push   eax
1000468f:	mov    eax,DWORD PTR [ebp+0x1c]
10004692:	push   esi
10004693:	push   DWORD PTR [ebp+0x10]
10004696:	neg    eax
10004698:	push   DWORD PTR [edi]
1000469a:	sbb    eax,eax
1000469c:	push   ebx
1000469d:	push   DWORD PTR [ebp+0x8]
100046a0:	and    eax,0xfffffc00
100046a5:	add    eax,0x400
100046aa:	push   eax
100046ab:	push   esi
100046ac:	mov    DWORD PTR [ebp-0x4],esi
100046af:	call   0x100044ce
100046b4:	cmp    eax,esi
100046b6:	mov    ecx,DWORD PTR [ebp+0x14]
100046b9:	mov    DWORD PTR [ecx],eax
100046bb:	jne    0x100046c1
100046bd:	cmp    ebx,esi
100046bf:	ja     0x100046c6
100046c1:	cmp    DWORD PTR [ebp-0x4],esi
100046c4:	je     0x1000470a
100046c6:	cmp    DWORD PTR [ebp+0x18],esi
100046c9:	je     0x100046d5
100046cb:	push   DWORD PTR [edi]
100046cd:	call   0x10003eeb
100046d2:	pop    ecx
100046d3:	mov    DWORD PTR [edi],esi
100046d5:	cmp    DWORD PTR [ebp-0x4],esi
100046d8:	je     0x100046ec
100046da:	push   0x459
100046df:	call   DWORD PTR ds:0x10001064
100046e5:	mov    eax,0x80070459
100046ea:	jmp    0x10004740
100046ec:	mov    esi,DWORD PTR ds:0x10001060
100046f2:	call   esi
100046f4:	test   eax,eax
100046f6:	jg     0x100046fc
100046f8:	call   esi
100046fa:	jmp    0x10004740
100046fc:	call   esi
100046fe:	and    eax,0xffff
10004703:	or     eax,0x80070000
10004708:	jmp    0x10004740
1000470a:	cmp    eax,DWORD PTR [ebp+0x10]
1000470d:	jbe    0x10004723
1000470f:	cmp    ebx,DWORD PTR [ebp+0x10]
10004712:	jbe    0x1000471e
10004714:	mov    eax,ds:0x1000cc90
10004719:	imul   eax,ebx
1000471c:	mov    DWORD PTR [ecx],eax
1000471e:	xor    eax,eax
10004720:	inc    eax
10004721:	jmp    0x10004740
10004723:	cmp    ebx,DWORD PTR [ebp+0x10]
10004726:	jbe    0x1000473e
10004728:	mov    eax,ds:0x1000cc90
1000472d:	imul   eax,ebx
10004730:	mov    DWORD PTR [ecx],eax
10004732:	jmp    0x1000473e
10004734:	mov    eax,DWORD PTR [ebp+0xc]
10004737:	mov    DWORD PTR [eax],esi
10004739:	mov    eax,DWORD PTR [ebp+0x14]
1000473c:	mov    DWORD PTR [eax],esi
1000473e:	xor    eax,eax
10004740:	pop    edi
10004741:	pop    esi
10004742:	pop    ebx
10004743:	leave  
10004744:	ret    0x18
10004747:	push   ebp
10004748:	mov    ebp,esp
1000474a:	push   ecx
1000474b:	push   ecx
1000474c:	mov    eax,ds:0x1000c118
10004751:	xor    eax,ebp
10004753:	mov    DWORD PTR [ebp-0x4],eax
10004756:	push   esi
10004757:	push   edi
10004758:	xor    edi,edi
1000475a:	cmp    DWORD PTR ds:0x1000c014,edi
10004760:	je     0x10004773
10004762:	push   DWORD PTR [ebp+0x10]
10004765:	push   DWORD PTR [ebp+0xc]
10004768:	push   DWORD PTR [ebp+0x8]
1000476b:	call   DWORD PTR ds:0x10001094
10004771:	jmp    0x100047bc
10004773:	mov    eax,DWORD PTR [ebp+0x8]
10004776:	lea    edx,[eax+0x2]
10004779:	mov    cx,WORD PTR [eax]
1000477c:	inc    eax
1000477d:	inc    eax
1000477e:	cmp    cx,di
10004781:	jne    0x10004779
10004783:	sub    eax,edx
10004785:	sar    eax,1
10004787:	lea    esi,[eax+eax*1+0x2]
1000478b:	mov    eax,esi
1000478d:	call   0x10009b30
10004792:	mov    DWORD PTR [ebp-0x8],esp
10004795:	push   edi
10004796:	push   edi
10004797:	push   edi
10004798:	push   esi
10004799:	lea    eax,[ebp-0x8]
1000479c:	push   eax
1000479d:	push   DWORD PTR [ebp+0x8]
100047a0:	call   0x10004609
100047a5:	test   eax,eax
100047a7:	jl     0x100047ba
100047a9:	push   DWORD PTR [ebp+0x10]
100047ac:	push   DWORD PTR [ebp+0xc]
100047af:	push   DWORD PTR [ebp-0x8]
100047b2:	call   DWORD PTR ds:0x10001090
100047b8:	mov    edi,eax
100047ba:	mov    eax,edi
100047bc:	lea    esp,[ebp-0x10]
100047bf:	pop    edi
100047c0:	pop    esi
100047c1:	mov    ecx,DWORD PTR [ebp-0x4]
100047c4:	xor    ecx,ebp
100047c6:	call   0x10009a23
100047cb:	leave  
100047cc:	ret    0xc
100047cf:	push   ebp
100047d0:	mov    ebp,esp
100047d2:	push   ebx
100047d3:	push   esi
100047d4:	mov    esi,DWORD PTR [ebp+0x10]
100047d7:	test   esi,esi
100047d9:	je     0x10004883
100047df:	mov    eax,DWORD PTR [ebp+0xc]
100047e2:	test   eax,eax
100047e4:	je     0x10004883
100047ea:	and    WORD PTR [eax],0x0
100047ee:	cmp    DWORD PTR ds:0x1000c014,0x0
100047f5:	je     0x10004807
100047f7:	push   esi
100047f8:	push   eax
100047f9:	push   DWORD PTR [ebp+0x8]
100047fc:	call   DWORD PTR ds:0x1000109c
10004802:	jmp    0x10004890
10004807:	mov    eax,ds:0x1000cc90
1000480c:	imul   eax,esi
1000480f:	push   0x10001320
10004814:	push   eax
10004815:	call   0x10003eb0
1000481a:	mov    ebx,eax
1000481c:	test   ebx,ebx
1000481e:	pop    ecx
1000481f:	pop    ecx
10004820:	jne    0x10004826
10004822:	push   0xe
10004824:	jmp    0x10004888
10004826:	mov    eax,ds:0x1000cc90
1000482b:	imul   eax,esi
1000482e:	push   edi
1000482f:	push   eax
10004830:	push   ebx
10004831:	push   DWORD PTR [ebp+0x8]
10004834:	call   DWORD PTR ds:0x10001098
1000483a:	mov    esi,DWORD PTR ds:0x10001060
10004840:	mov    edi,eax
10004842:	call   esi
10004844:	test   edi,edi
10004846:	mov    DWORD PTR [ebp+0x8],eax
10004849:	je     0x1000486e
1000484b:	push   0x0
1000484d:	lea    eax,[ebp+0x10]
10004850:	push   eax
10004851:	lea    eax,[ebp+0xc]
10004854:	push   eax
10004855:	push   0xffffffff
10004857:	push   ebx
10004858:	call   0x10004525
1000485d:	test   eax,eax
1000485f:	jge    0x1000486a
10004861:	call   esi
10004863:	mov    DWORD PTR [ebp+0x8],eax
10004866:	xor    edi,edi
10004868:	jmp    0x1000486e
1000486a:	mov    edi,DWORD PTR [ebp+0x10]
1000486d:	dec    edi
1000486e:	push   ebx
1000486f:	call   0x10003eeb
10004874:	pop    ecx
10004875:	push   DWORD PTR [ebp+0x8]
10004878:	call   DWORD PTR ds:0x10001064
1000487e:	mov    eax,edi
10004880:	pop    edi
10004881:	jmp    0x10004890
10004883:	push   0xa0
10004888:	call   DWORD PTR ds:0x10001064
1000488e:	xor    eax,eax
10004890:	pop    esi
10004891:	pop    ebx
10004892:	pop    ebp
10004893:	ret    0xc
10004896:	push   ebp
10004897:	mov    ebp,esp
10004899:	sub    esp,0x9c
1000489f:	mov    eax,ds:0x1000c118
100048a4:	xor    eax,ebp
100048a6:	mov    DWORD PTR [ebp-0x4],eax
100048a9:	push   ebx
100048aa:	mov    ebx,DWORD PTR [ebp+0x8]
100048ad:	cmp    DWORD PTR ds:0x1000c014,0x0
100048b4:	je     0x100048bf
100048b6:	push   ebx
100048b7:	call   DWORD PTR ds:0x100010a0
100048bd:	jmp    0x1000491e
100048bf:	cmp    DWORD PTR [ebx],0x114
100048c5:	je     0x100048cb
100048c7:	xor    eax,eax
100048c9:	jmp    0x1000491e
100048cb:	lea    eax,[ebp-0x98]
100048d1:	push   eax
100048d2:	mov    DWORD PTR [ebp-0x98],0x94
100048dc:	call   DWORD PTR ds:0x10001074
100048e2:	test   eax,eax
100048e4:	mov    DWORD PTR [ebp-0x9c],eax
100048ea:	je     0x10004918
100048ec:	push   esi
100048ed:	push   edi
100048ee:	push   0x5
100048f0:	pop    ecx
100048f1:	push   0x80
100048f6:	mov    edi,ebx
100048f8:	add    ebx,0x14
100048fb:	push   ebx
100048fc:	push   0xffffffff
100048fe:	lea    eax,[ebp-0x84]
10004904:	push   eax
10004905:	push   0x0
10004907:	lea    esi,[ebp-0x98]
1000490d:	push   0x0
1000490f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10004911:	call   0x10004483
10004916:	pop    edi
10004917:	pop    esi
10004918:	mov    eax,DWORD PTR [ebp-0x9c]
1000491e:	mov    ecx,DWORD PTR [ebp-0x4]
10004921:	xor    ecx,ebp
10004923:	pop    ebx
10004924:	call   0x10009a23
10004929:	leave  
1000492a:	ret    0x4
1000492d:	push   ebp
1000492e:	mov    ebp,esp
10004930:	push   ecx
10004931:	push   ecx
10004932:	push   esi
10004933:	xor    esi,esi
10004935:	cmp    DWORD PTR ds:0x1000c014,esi
1000493b:	je     0x10004951
1000493d:	push   DWORD PTR [ebp+0x14]
10004940:	push   DWORD PTR [ebp+0x10]
10004943:	push   DWORD PTR [ebp+0xc]
10004946:	push   DWORD PTR [ebp+0x8]
10004949:	call   DWORD PTR ds:0x10001168
1000494f:	jmp    0x100049b8
10004951:	push   edi
10004952:	push   0x3
10004954:	pop    edi
10004955:	push   esi
10004956:	push   0x1
10004958:	push   esi
10004959:	push   esi
1000495a:	lea    eax,[ebp-0x4]
1000495d:	push   eax
1000495e:	push   DWORD PTR [ebp+0xc]
10004961:	mov    DWORD PTR [ebp-0x4],esi
10004964:	mov    DWORD PTR [ebp-0x8],esi
10004967:	call   0x10004609
1000496c:	test   eax,eax
1000496e:	jl     0x10004999
10004970:	push   esi
10004971:	push   0x1
10004973:	push   esi
10004974:	push   esi
10004975:	lea    eax,[ebp-0x8]
10004978:	push   eax
10004979:	push   DWORD PTR [ebp+0x10]
1000497c:	call   0x10004609
10004981:	test   eax,eax
10004983:	jl     0x10004999
10004985:	push   DWORD PTR [ebp+0x14]
10004988:	push   DWORD PTR [ebp-0x8]
1000498b:	push   DWORD PTR [ebp-0x4]
1000498e:	push   DWORD PTR [ebp+0x8]
10004991:	call   DWORD PTR ds:0x10001164
10004997:	mov    edi,eax
10004999:	cmp    DWORD PTR [ebp-0x4],esi
1000499c:	je     0x100049a7
1000499e:	push   DWORD PTR [ebp-0x4]
100049a1:	call   0x10003eeb
100049a6:	pop    ecx
100049a7:	cmp    DWORD PTR [ebp-0x8],esi
100049aa:	je     0x100049b5
100049ac:	push   DWORD PTR [ebp-0x8]
100049af:	call   0x10003eeb
100049b4:	pop    ecx
100049b5:	mov    eax,edi
100049b7:	pop    edi
100049b8:	pop    esi
100049b9:	leave  
100049ba:	ret    0x10
100049bd:	push   0x44
100049bf:	mov    eax,0x1000a410
100049c4:	call   0x10009a38
100049c9:	xor    esi,esi
100049cb:	cmp    DWORD PTR ds:0x1000c014,esi
100049d1:	je     0x100049f6
100049d3:	push   DWORD PTR [ebp+0x20]
100049d6:	push   DWORD PTR [ebp+0x1c]
100049d9:	push   DWORD PTR [ebp+0x18]
100049dc:	push   DWORD PTR [ebp+0x14]
100049df:	push   DWORD PTR [ebp+0x10]
100049e2:	push   DWORD PTR [ebp+0xc]
100049e5:	push   DWORD PTR [ebp+0x8]
100049e8:	call   DWORD PTR ds:0x10001020
100049ee:	call   0x10009ad7
100049f3:	ret    0x1c
100049f6:	mov    DWORD PTR [ebp-0x10],esi
100049f9:	mov    DWORD PTR [ebp-0x28],esi
100049fc:	mov    DWORD PTR [ebp-0x24],esi
100049ff:	mov    DWORD PTR [ebp-0x4],0x3
10004a06:	mov    DWORD PTR [ebp-0x14],esi
10004a09:	mov    DWORD PTR [ebp-0x18],esi
10004a0c:	mov    DWORD PTR [ebp-0x20],esi
10004a0f:	mov    DWORD PTR [ebp-0x1c],esi
10004a12:	mov    BYTE PTR [ebp-0x4],0x7
10004a16:	test   WORD PTR [ebp+0x8],0x400
10004a1c:	je     0x10004a72
10004a1e:	push   esi
10004a1f:	xor    ebx,ebx
10004a21:	inc    ebx
10004a22:	push   ebx
10004a23:	push   esi
10004a24:	push   esi
10004a25:	lea    eax,[ebp-0x18]
10004a28:	push   eax
10004a29:	push   DWORD PTR [ebp+0xc]
10004a2c:	call   0x10004609
10004a31:	test   eax,eax
10004a33:	jge    0x10004a51
10004a35:	mov    BYTE PTR [ebp-0x4],0x3
10004a39:	lea    ecx,[ebp-0x20]
10004a3c:	call   0x1000381c
10004a41:	or     DWORD PTR [ebp-0x4],0xffffffff
10004a45:	lea    ecx,[ebp-0x28]
10004a48:	call   0x1000381c
10004a4d:	mov    eax,esi
10004a4f:	jmp    0x100049ee
10004a51:	mov    edi,DWORD PTR [ebp-0x18]
10004a54:	mov    DWORD PTR [ebp+0xc],edi
10004a57:	cmp    DWORD PTR [ebp-0x1c],esi
10004a5a:	je     0x10004a68
10004a5c:	push   DWORD PTR [ebp-0x20]
10004a5f:	call   0x10003eeb
10004a64:	pop    ecx
10004a65:	mov    DWORD PTR [ebp-0x1c],esi
10004a68:	mov    DWORD PTR [ebp-0x20],edi
10004a6b:	cmp    edi,esi
10004a6d:	je     0x10004a72
10004a6f:	mov    DWORD PTR [ebp-0x1c],ebx
10004a72:	mov    ebx,DWORD PTR [ebp+0x20]
10004a75:	push   0xa
10004a77:	xor    eax,eax
10004a79:	cmp    ebx,esi
10004a7b:	pop    ecx
10004a7c:	lea    edi,[ebp-0x50]
10004a7f:	rep stos DWORD PTR es:[edi],eax
10004a81:	je     0x10004b2f
10004a87:	test   WORD PTR [ebp+0x8],0x2000
10004a8d:	je     0x10004b2f
10004a93:	cmp    DWORD PTR [ebp-0x18],esi
10004a96:	je     0x10004b04
10004a98:	push   0x25
10004a9a:	push   DWORD PTR [ebp-0x18]
10004a9d:	jmp    0x10004af4
10004a9f:	lea    eax,[edi+0x1]
10004aa2:	mov    cl,BYTE PTR [eax]
10004aa4:	cmp    cl,0x25
10004aa7:	jne    0x10004aad
10004aa9:	mov    edi,eax
10004aab:	jmp    0x10004af0
10004aad:	cmp    cl,0x31
10004ab0:	jl     0x10004af0
10004ab2:	cmp    cl,0x39
10004ab5:	jg     0x10004af0
10004ab7:	cmp    cl,0x3a
10004aba:	jg     0x10004c0b
10004ac0:	movsx  ecx,cl
10004ac3:	cmp    DWORD PTR [ebx+ecx*4-0xc4],esi
10004aca:	je     0x10004af0
10004acc:	movsx  eax,BYTE PTR [eax]
10004acf:	push   esi
10004ad0:	push   0x1
10004ad2:	push   esi
10004ad3:	lea    eax,[eax*4-0xc4]
10004ada:	push   esi
10004adb:	lea    ecx,[ebp+eax*1-0x50]
10004adf:	push   ecx
10004ae0:	push   DWORD PTR [eax+ebx*1]
10004ae3:	call   0x10004609
10004ae8:	test   eax,eax
10004aea:	jl     0x10004c0b
10004af0:	push   0x25
10004af2:	inc    edi
10004af3:	push   edi
10004af4:	call   DWORD PTR ds:0x10001134
10004afa:	mov    edi,eax
10004afc:	cmp    edi,esi
10004afe:	pop    ecx
10004aff:	pop    ecx
10004b00:	jne    0x10004a9f
10004b02:	jmp    0x10004b2c
10004b04:	mov    ebx,DWORD PTR [ebx]
10004b06:	cmp    ebx,esi
10004b08:	mov    eax,0x100013d0
10004b0d:	mov    DWORD PTR [ebp-0x48],eax
10004b10:	mov    DWORD PTR [ebp-0x4c],eax
10004b13:	je     0x10004b2c
10004b15:	push   esi
10004b16:	push   0x1
10004b18:	push   esi
10004b19:	push   esi
10004b1a:	lea    eax,[ebp-0x50]
10004b1d:	push   eax
10004b1e:	push   ebx
10004b1f:	call   0x10004609
10004b24:	test   eax,eax
10004b26:	jl     0x10004c0b
10004b2c:	lea    ebx,[ebp-0x50]
10004b2f:	mov    eax,DWORD PTR [ebp+0x8]
10004b32:	and    eax,0x100
10004b37:	mov    DWORD PTR [ebp+0x20],eax
10004b3a:	je     0x10004b77
10004b3c:	push   ebx
10004b3d:	mov    ebx,DWORD PTR [ebp+0x1c]
10004b40:	push   ebx
10004b41:	lea    eax,[ebp-0x10]
10004b44:	push   eax
10004b45:	push   DWORD PTR [ebp+0x14]
10004b48:	push   DWORD PTR [ebp+0x10]
10004b4b:	push   DWORD PTR [ebp+0xc]
10004b4e:	push   DWORD PTR [ebp+0x8]
10004b51:	call   DWORD PTR ds:0x1000101c
10004b57:	mov    edi,eax
10004b59:	cmp    edi,esi
10004b5b:	jbe    0x10004bca
10004b5d:	cmp    ebx,edi
10004b5f:	ja     0x10004b64
10004b61:	lea    ebx,[edi+0x1]
10004b64:	lea    eax,[ebx+ebx*1]
10004b67:	push   eax
10004b68:	push   0x40
10004b6a:	call   DWORD PTR ds:0x10001018
10004b70:	mov    ecx,DWORD PTR [ebp+0x18]
10004b73:	mov    DWORD PTR [ecx],eax
10004b75:	jmp    0x10004bca
10004b77:	push   0x10001320
10004b7c:	push   DWORD PTR [ebp+0x1c]
10004b7f:	call   0x10003eb0
10004b84:	pop    ecx
10004b85:	mov    edi,eax
10004b87:	pop    ecx
10004b88:	mov    DWORD PTR [ebp-0x10],edi
10004b8b:	cmp    DWORD PTR [ebp-0x24],esi
10004b8e:	je     0x10004b9c
10004b90:	push   DWORD PTR [ebp-0x28]
10004b93:	call   0x10003eeb
10004b98:	pop    ecx
10004b99:	mov    DWORD PTR [ebp-0x24],esi
10004b9c:	mov    DWORD PTR [ebp-0x28],edi
10004b9f:	cmp    edi,esi
10004ba1:	je     0x10004baa
10004ba3:	mov    DWORD PTR [ebp-0x24],0x1
10004baa:	cmp    DWORD PTR [ebp-0x10],esi
10004bad:	je     0x10004bfd
10004baf:	push   ebx
10004bb0:	push   DWORD PTR [ebp+0x1c]
10004bb3:	push   DWORD PTR [ebp-0x10]
10004bb6:	push   DWORD PTR [ebp+0x14]
10004bb9:	push   DWORD PTR [ebp+0x10]
10004bbc:	push   DWORD PTR [ebp+0xc]
10004bbf:	push   DWORD PTR [ebp+0x8]
10004bc2:	call   DWORD PTR ds:0x1000101c
10004bc8:	mov    edi,eax
10004bca:	cmp    DWORD PTR [ebp-0x10],esi
10004bcd:	je     0x10004bfd
10004bcf:	cmp    edi,esi
10004bd1:	je     0x10004bfd
10004bd3:	mov    eax,DWORD PTR [ebp+0x18]
10004bd6:	inc    edi
10004bd7:	cmp    DWORD PTR [ebp+0x20],esi
10004bda:	mov    DWORD PTR [ebp-0x14],edi
10004bdd:	jne    0x10004be2
10004bdf:	lea    eax,[ebp+0x18]
10004be2:	push   esi
10004be3:	lea    ecx,[ebp-0x14]
10004be6:	push   ecx
10004be7:	push   eax
10004be8:	push   edi
10004be9:	push   DWORD PTR [ebp-0x10]
10004bec:	call   0x10004525
10004bf1:	test   eax,eax
10004bf3:	jge    0x10004bfa
10004bf5:	mov    DWORD PTR [ebp-0x14],esi
10004bf8:	jmp    0x10004bfd
10004bfa:	dec    DWORD PTR [ebp-0x14]
10004bfd:	cmp    DWORD PTR [ebp+0x20],esi
10004c00:	je     0x10004c0b
10004c02:	push   DWORD PTR [ebp-0x10]
10004c05:	call   DWORD PTR ds:0x10001014
10004c0b:	mov    eax,DWORD PTR [ebp+esi*4-0x50]
10004c0f:	cmp    eax,0x100013d0
10004c14:	je     0x10004c1d
10004c16:	push   eax
10004c17:	call   0x10003eeb
10004c1c:	pop    ecx
10004c1d:	inc    esi
10004c1e:	cmp    esi,0xa
10004c21:	jb     0x10004c0b
10004c23:	mov    esi,DWORD PTR [ebp-0x14]
10004c26:	jmp    0x10004a35
10004c2b:	push   0x8
10004c2d:	mov    eax,0x1000a44b
10004c32:	call   0x10009a38
10004c37:	mov    eax,DWORD PTR [ebp+0x10]
10004c3a:	test   eax,eax
10004c3c:	je     0x10004c7d
10004c3e:	mov    edi,DWORD PTR [ebp+0x14]
10004c41:	test   edi,edi
10004c43:	je     0x10004c7d
10004c45:	and    WORD PTR [eax],0x0
10004c49:	cmp    DWORD PTR ds:0x1000c014,0x0
10004c50:	je     0x10004c62
10004c52:	push   edi
10004c53:	push   eax
10004c54:	push   DWORD PTR [ebp+0xc]
10004c57:	push   DWORD PTR [ebp+0x8]
10004c5a:	call   DWORD PTR ds:0x10001170
10004c60:	jmp    0x10004c7f
10004c62:	push   0x10001320
10004c67:	push   edi
10004c68:	call   0x10003eb0
10004c6d:	mov    esi,eax
10004c6f:	test   esi,esi
10004c71:	pop    ecx
10004c72:	pop    ecx
10004c73:	jne    0x10004c87
10004c75:	push   0xe
10004c77:	call   DWORD PTR ds:0x10001064
10004c7d:	xor    eax,eax
10004c7f:	call   0x10009ad7
10004c84:	ret    0x10
10004c87:	and    DWORD PTR [ebp-0x10],0x0
10004c8b:	mov    DWORD PTR [ebp-0x14],esi
10004c8e:	mov    DWORD PTR [ebp-0x10],0x1
10004c95:	mov    DWORD PTR [ebp-0x4],0x3
10004c9c:	push   edi
10004c9d:	push   esi
10004c9e:	push   DWORD PTR [ebp+0xc]
10004ca1:	push   DWORD PTR [ebp+0x8]
10004ca4:	call   DWORD PTR ds:0x1000116c
10004caa:	mov    edi,eax
10004cac:	test   edi,edi
10004cae:	jle    0x10004ce7
10004cb0:	push   0x0
10004cb2:	lea    eax,[ebp+0x14]
10004cb5:	push   eax
10004cb6:	lea    eax,[ebp+0x10]
10004cb9:	push   eax
10004cba:	inc    edi
10004cbb:	push   edi
10004cbc:	push   esi
10004cbd:	call   0x10004525
10004cc2:	mov    esi,eax
10004cc4:	cmp    esi,0x8007000e
10004cca:	jne    0x10004cd4
10004ccc:	push   0xe
10004cce:	call   DWORD PTR ds:0x10001064
10004cd4:	test   esi,esi
10004cd6:	jge    0x10004cdc
10004cd8:	xor    edi,edi
10004cda:	jmp    0x10004ce7
10004cdc:	push   DWORD PTR [ebp+0x10]
10004cdf:	call   DWORD PTR ds:0x10001084
10004ce5:	mov    edi,eax
10004ce7:	or     DWORD PTR [ebp-0x4],0xffffffff
10004ceb:	lea    ecx,[ebp-0x14]
10004cee:	call   0x1000381c
10004cf3:	mov    eax,edi
10004cf5:	jmp    0x10004c7f
10004cf7:	mov    eax,DWORD PTR [ecx+0x8]
10004cfa:	test   al,0x2
10004cfc:	je     0x10004d11
10004cfe:	and    eax,0x7
10004d01:	cmp    al,0x7
10004d03:	jne    0x10004d0e
10004d05:	cmp    DWORD PTR ds:0x1000c0b8,0x0
10004d0c:	je     0x10004d11
10004d0e:	xor    eax,eax
10004d10:	ret    
10004d11:	xor    eax,eax
10004d13:	inc    eax
10004d14:	ret    
10004d15:	push   esi
10004d16:	mov    esi,ecx
10004d18:	call   0x10004cf7
10004d1d:	test   eax,eax
10004d1f:	jne    0x10004d34
10004d21:	mov    ecx,esi
10004d23:	call   0x100079ff
10004d28:	test   eax,eax
10004d2a:	jne    0x10004d34
10004d2c:	mov    ecx,esi
10004d2e:	pop    esi
10004d2f:	jmp    0x10007f3d
10004d34:	pop    esi
10004d35:	ret    
10004d36:	push   esi
10004d37:	mov    esi,ecx
10004d39:	mov    eax,DWORD PTR [esi+0x8]
10004d3c:	shr    eax,1
10004d3e:	not    eax
10004d40:	test   al,0x1
10004d42:	jne    0x10004d55
10004d44:	call   0x100079ff
10004d49:	test   eax,eax
10004d4b:	jne    0x10004d55
10004d4d:	mov    ecx,esi
10004d4f:	pop    esi
10004d50:	jmp    0x10007f3d
10004d55:	pop    esi
10004d56:	ret    
10004d57:	push   ebp
10004d58:	mov    ebp,esp
10004d5a:	mov    eax,ds:0x1000c0c0
10004d5f:	test   DWORD PTR [ebp+0x8],eax
10004d62:	je     0x10004d74
10004d64:	mov    eax,DWORD PTR [ebp+0xc]
10004d67:	cmp    eax,DWORD PTR ds:0x1000c0c4
10004d6d:	ja     0x10004d74
10004d6f:	xor    eax,eax
10004d71:	inc    eax
10004d72:	jmp    0x10004d76
10004d74:	xor    eax,eax
10004d76:	pop    ebp
10004d77:	ret    0x8
10004d7a:	push   ebp
10004d7b:	mov    ebp,esp
10004d7d:	mov    eax,ds:0x1000ccfc
10004d82:	test   eax,eax
10004d84:	je     0x10004da1
10004d86:	cmp    DWORD PTR [eax+0x30],0x0
10004d8a:	je     0x10004da1
10004d8c:	mov    ecx,DWORD PTR [ebp+0x8]
10004d8f:	test   DWORD PTR [eax+0x34],ecx
10004d92:	je     0x10004da1
10004d94:	mov    ecx,DWORD PTR [ebp+0xc]
10004d97:	cmp    ecx,DWORD PTR [eax+0x38]
10004d9a:	ja     0x10004da1
10004d9c:	xor    eax,eax
10004d9e:	inc    eax
10004d9f:	jmp    0x10004da3
10004da1:	xor    eax,eax
10004da3:	pop    ebp
10004da4:	ret    0x8
10004da7:	cmp    DWORD PTR [ecx+0x4],0x0
10004dab:	je     0x10004dbd
10004dad:	mov    ecx,DWORD PTR [ecx+0x4]
10004db0:	mov    eax,DWORD PTR [ecx]
10004db2:	call   DWORD PTR [eax+0x4]
10004db5:	test   eax,eax
10004db7:	je     0x10004dbd
10004db9:	xor    eax,eax
10004dbb:	inc    eax
10004dbc:	ret    
10004dbd:	xor    eax,eax
10004dbf:	ret    
10004dc0:	push   ebp
10004dc1:	mov    ebp,esp
10004dc3:	xor    eax,eax
10004dc5:	cmp    DWORD PTR [ebp+0x8],0x524f4f54
10004dcc:	sete   al
10004dcf:	pop    ebp
10004dd0:	ret    0x4
10004dd3:	mov    eax,DWORD PTR [ecx]
10004dd5:	jmp    DWORD PTR [eax+0x24]
10004dd8:	mov    eax,DWORD PTR [ecx+0x8]
10004ddb:	cmp    eax,0xffffffff
10004dde:	je     0x10004de8
10004de0:	test   eax,eax
10004de2:	je     0x10004de8
10004de4:	xor    eax,eax
10004de6:	inc    eax
10004de7:	ret    
10004de8:	xor    eax,eax
10004dea:	ret    
10004deb:	push   ebp
10004dec:	mov    ebp,esp
10004dee:	push   esi
10004def:	mov    esi,DWORD PTR [ebp+0x8]
10004df2:	test   esi,esi
10004df4:	je     0x10004e10
10004df6:	mov    eax,DWORD PTR [esi]
10004df8:	mov    ecx,esi
10004dfa:	call   DWORD PTR [eax+0x20]
10004dfd:	test   eax,eax
10004dff:	jne    0x10004e10
10004e01:	mov    eax,DWORD PTR [esi]
10004e03:	push   0x0
10004e05:	mov    ecx,esi
10004e07:	call   DWORD PTR [eax]
10004e09:	push   eax
10004e0a:	call   0x10003eeb
10004e0f:	pop    ecx
10004e10:	pop    esi
10004e11:	pop    ebp
10004e12:	ret    0x4
10004e15:	push   ebp
10004e16:	mov    ebp,esp
10004e18:	mov    eax,DWORD PTR [ebp+0x8]
10004e1b:	mov    ecx,0x8000ffff
10004e20:	cmp    eax,ecx
10004e22:	jg     0x10004f01
10004e28:	je     0x10004ef7
10004e2e:	add    eax,0x7fffbfff
10004e33:	cmp    eax,0x11
10004e36:	ja     0x10005eb6
10004e3c:	jmp    DWORD PTR [eax*4+0x10005ed1]
10004e43:	mov    eax,0x10002d60
10004e48:	jmp    0x10005ecd
10004e4d:	mov    eax,0x10002d50
10004e52:	jmp    0x10005ecd
10004e57:	mov    eax,0x10002d44
10004e5c:	jmp    0x10005ecd
10004e61:	mov    eax,0x10002d3c
10004e66:	jmp    0x10005ecd
10004e6b:	mov    eax,0x10002d34
10004e70:	jmp    0x10005ecd
10004e75:	mov    eax,0x10002d24
10004e7a:	jmp    0x10005ecd
10004e7f:	mov    eax,0x10002d08
10004e84:	jmp    0x10005ecd
10004e89:	mov    eax,0x10002cec
10004e8e:	jmp    0x10005ecd
10004e93:	mov    eax,0x10002cd4
10004e98:	jmp    0x10005ecd
10004e9d:	mov    eax,0x10002cbc
10004ea2:	jmp    0x10005ecd
10004ea7:	mov    eax,0x10002c98
10004eac:	jmp    0x10005ecd
10004eb1:	mov    eax,0x10002c78
10004eb6:	jmp    0x10005ecd
10004ebb:	mov    eax,0x10002c54
10004ec0:	jmp    0x10005ecd
10004ec5:	mov    eax,0x10002c38
10004eca:	jmp    0x10005ecd
10004ecf:	mov    eax,0x10002c14
10004ed4:	jmp    0x10005ecd
10004ed9:	mov    eax,0x10002bf4
10004ede:	jmp    0x10005ecd
10004ee3:	mov    eax,0x10002bd8
10004ee8:	jmp    0x10005ecd
10004eed:	mov    eax,0x10002bb8
10004ef2:	jmp    0x10005ecd
10004ef7:	mov    eax,0x10002ba8
10004efc:	jmp    0x10005ecd
10004f01:	mov    ecx,0x80010100
10004f06:	cmp    eax,ecx
10004f08:	jg     0x10004fe7
10004f0e:	je     0x10004fdd
10004f14:	add    eax,0x7ffeffff
10004f19:	cmp    eax,0x11
10004f1c:	ja     0x10005eb6
10004f22:	jmp    DWORD PTR [eax*4+0x10005f19]
10004f29:	mov    eax,0x10002b94
10004f2e:	jmp    0x10005ecd
10004f33:	mov    eax,0x10002b80
10004f38:	jmp    0x10005ecd
10004f3d:	mov    eax,0x10002b64
10004f42:	jmp    0x10005ecd
10004f47:	mov    eax,0x10002b44
10004f4c:	jmp    0x10005ecd
10004f51:	mov    eax,0x10002b20
10004f56:	jmp    0x10005ecd
10004f5b:	mov    eax,0x10002b04
10004f60:	jmp    0x10005ecd
10004f65:	mov    eax,0x10002af0
10004f6a:	jmp    0x10005ecd
10004f6f:	mov    eax,0x10002adc
10004f74:	jmp    0x10005ecd
10004f79:	mov    eax,0x10002ac0
10004f7e:	jmp    0x10005ecd
10004f83:	mov    eax,0x10002aa8
10004f88:	jmp    0x10005ecd
10004f8d:	mov    eax,0x10002a88
10004f92:	jmp    0x10005ecd
10004f97:	mov    eax,0x10002a68
10004f9c:	jmp    0x10005ecd
10004fa1:	mov    eax,0x10002a48
10004fa6:	jmp    0x10005ecd
10004fab:	mov    eax,0x10002a28
10004fb0:	jmp    0x10005ecd
10004fb5:	mov    eax,0x10002a14
10004fba:	jmp    0x10005ecd
10004fbf:	mov    eax,0x100029fc
10004fc4:	jmp    0x10005ecd
10004fc9:	mov    eax,0x100029e4
10004fce:	jmp    0x10005ecd
10004fd3:	mov    eax,0x100029cc
10004fd8:	jmp    0x10005ecd
10004fdd:	mov    eax,0x100029b4
10004fe2:	jmp    0x10005ecd
10004fe7:	mov    ecx,0x8001ffff
10004fec:	cmp    eax,ecx
10004fee:	jg     0x100050af
10004ff4:	je     0x100050a5
10004ffa:	add    eax,0x7ffefeff
10004fff:	cmp    eax,0xe
10005002:	ja     0x10005eb6
10005008:	jmp    DWORD PTR [eax*4+0x10005f61]
1000500f:	mov    eax,0x1000299c
10005014:	jmp    0x10005ecd
10005019:	mov    eax,0x10002980
1000501e:	jmp    0x10005ecd
10005023:	mov    eax,0x10002968
10005028:	jmp    0x10005ecd
1000502d:	mov    eax,0x1000295c
10005032:	jmp    0x10005ecd
10005037:	mov    eax,0x10002948
1000503c:	jmp    0x10005ecd
10005041:	mov    eax,0x10002934
10005046:	jmp    0x10005ecd
1000504b:	mov    eax,0x10002920
10005050:	jmp    0x10005ecd
10005055:	mov    eax,0x1000290c
1000505a:	jmp    0x10005ecd
1000505f:	mov    eax,0x10002900
10005064:	jmp    0x10005ecd
10005069:	mov    eax,0x100028e4
1000506e:	jmp    0x10005ecd
10005073:	mov    eax,0x100028c8
10005078:	jmp    0x10005ecd
1000507d:	mov    eax,0x100028b0
10005082:	jmp    0x10005ecd
10005087:	mov    eax,0x1000288c
1000508c:	jmp    0x10005ecd
10005091:	mov    eax,0x10002878
10005096:	jmp    0x10005ecd
1000509b:	mov    eax,0x10002860
100050a0:	jmp    0x10005ecd
100050a5:	mov    eax,0x1000284c
100050aa:	jmp    0x10005ecd
100050af:	mov    ecx,0x80028016
100050b4:	cmp    eax,ecx
100050b6:	jg     0x10005181
100050bc:	je     0x10005177
100050c2:	add    eax,0x7ffdffff
100050c7:	cmp    eax,0x10
100050ca:	ja     0x10005eb6
100050d0:	jmp    DWORD PTR [eax*4+0x10005f9d]
100050d7:	mov    eax,0x10002834
100050dc:	jmp    0x10005ecd
100050e1:	mov    eax,0x1000281c
100050e6:	jmp    0x10005ecd
100050eb:	mov    eax,0x10002804
100050f0:	jmp    0x10005ecd
100050f5:	mov    eax,0x100027f0
100050fa:	jmp    0x10005ecd
100050ff:	mov    eax,0x100027dc
10005104:	jmp    0x10005ecd
10005109:	mov    eax,0x100027c8
1000510e:	jmp    0x10005ecd
10005113:	mov    eax,0x100027b4
10005118:	jmp    0x10005ecd
1000511d:	mov    eax,0x100027a0
10005122:	jmp    0x10005ecd
10005127:	mov    eax,0x10002790
1000512c:	jmp    0x10005ecd
10005131:	mov    eax,0x10002780
10005136:	jmp    0x10005ecd
1000513b:	mov    eax,0x1000276c
10005140:	jmp    0x10005ecd
10005145:	mov    eax,0x10002754
1000514a:	jmp    0x10005ecd
1000514f:	mov    eax,0x1000273c
10005154:	jmp    0x10005ecd
10005159:	mov    eax,0x10002724
1000515e:	jmp    0x10005ecd
10005163:	mov    eax,0x10002710
10005168:	jmp    0x10005ecd
1000516d:	mov    eax,0x100026f8
10005172:	jmp    0x10005ecd
10005177:	mov    eax,0x100026e0
1000517c:	jmp    0x10005ecd
10005181:	mov    ecx,0x800401d4
10005186:	cmp    eax,ecx
10005188:	jg     0x10005856
1000518e:	je     0x1000584c
10005194:	mov    ecx,0x80030107
10005199:	cmp    eax,ecx
1000519b:	jg     0x1000550d
100051a1:	je     0x10005503
100051a7:	mov    ecx,0x80030004
100051ac:	cmp    eax,ecx
100051ae:	jg     0x10005368
100051b4:	je     0x1000535e
100051ba:	mov    ecx,0x800288bd
100051bf:	cmp    eax,ecx
100051c1:	jg     0x10005275
100051c7:	je     0x1000526b
100051cd:	add    eax,0x7ffd7fe8
100051d2:	cmp    eax,0x17
100051d5:	ja     0x10005eb6
100051db:	movzx  eax,BYTE PTR [eax+0x10006019]
100051e2:	jmp    DWORD PTR [eax*4+0x10005fe1]
100051e9:	mov    eax,0x100026cc
100051ee:	jmp    0x10005ecd
100051f3:	mov    eax,0x100026b8
100051f8:	jmp    0x10005ecd
100051fd:	mov    eax,0x100026a0
10005202:	jmp    0x10005ecd
10005207:	mov    eax,0x10002688
1000520c:	jmp    0x10005ecd
10005211:	mov    eax,0x10002670
10005216:	jmp    0x10005ecd
1000521b:	mov    eax,0x10002650
10005220:	jmp    0x10005ecd
10005225:	mov    eax,0x1000263c
1000522a:	jmp    0x10005ecd
1000522f:	mov    eax,0x10002624
10005234:	jmp    0x10005ecd
10005239:	mov    eax,0x1000260c
1000523e:	jmp    0x10005ecd
10005243:	mov    eax,0x100025f4
10005248:	jmp    0x10005ecd
1000524d:	mov    eax,0x100025e0
10005252:	jmp    0x10005ecd
10005257:	mov    eax,0x100025cc
1000525c:	jmp    0x10005ecd
10005261:	mov    eax,0x100025b0
10005266:	jmp    0x10005ecd
1000526b:	mov    eax,0x10002598
10005270:	jmp    0x10005ecd
10005275:	mov    ecx,0x80028ca3
1000527a:	cmp    eax,ecx
1000527c:	jg     0x100052f4
1000527e:	je     0x100052ea
10005280:	cmp    eax,0x800288c5
10005285:	je     0x100052e0
10005287:	cmp    eax,0x800288c6
1000528c:	je     0x100052d6
1000528e:	cmp    eax,0x800288cf
10005293:	je     0x100052cc
10005295:	cmp    eax,0x80028ca0
1000529a:	je     0x100052c2
1000529c:	cmp    eax,0x80028ca1
100052a1:	je     0x100052b8
100052a3:	cmp    eax,0x80028ca2
100052a8:	jne    0x10005eb6
100052ae:	mov    eax,0x10002588
100052b3:	jmp    0x10005ecd
100052b8:	mov    eax,0x10002574
100052bd:	jmp    0x10005ecd
100052c2:	mov    eax,0x10002560
100052c7:	jmp    0x10005ecd
100052cc:	mov    eax,0x1000254c
100052d1:	jmp    0x10005ecd
100052d6:	mov    eax,0x10002538
100052db:	jmp    0x10005ecd
100052e0:	mov    eax,0x10002524
100052e5:	jmp    0x10005ecd
100052ea:	mov    eax,0x10002508
100052ef:	jmp    0x10005ecd
100052f4:	cmp    eax,0x80029c4a
100052f9:	je     0x10005354
100052fb:	cmp    eax,0x80029c83
10005300:	je     0x1000534a
10005302:	cmp    eax,0x80029c84
10005307:	je     0x10005340
10005309:	cmp    eax,0x80030001
1000530e:	je     0x10005336
10005310:	cmp    eax,0x80030002
10005315:	je     0x1000532c
10005317:	cmp    eax,0x80030003
1000531c:	jne    0x10005eb6
10005322:	mov    eax,0x100024f4
10005327:	jmp    0x10005ecd
1000532c:	mov    eax,0x100024e0
10005331:	jmp    0x10005ecd
10005336:	mov    eax,0x100024c8
1000533b:	jmp    0x10005ecd
10005340:	mov    eax,0x100024b4
10005345:	jmp    0x10005ecd
1000534a:	mov    eax,0x10002494
1000534f:	jmp    0x10005ecd
10005354:	mov    eax,0x1000247c
10005359:	jmp    0x10005ecd
1000535e:	mov    eax,0x10002464
10005363:	jmp    0x10005ecd
10005368:	mov    ecx,0x80030070
1000536d:	cmp    eax,ecx
1000536f:	jg     0x1000546c
10005375:	je     0x10005462
1000537b:	add    ecx,0xffffffa9
1000537e:	cmp    eax,ecx
10005380:	jg     0x100053f8
10005382:	je     0x100053ee
10005384:	cmp    eax,0x80030005
10005389:	je     0x100053e4
1000538b:	cmp    eax,0x80030006
10005390:	je     0x100053da
10005392:	cmp    eax,0x80030008
10005397:	je     0x100053d0
10005399:	cmp    eax,0x80030009
1000539e:	je     0x100053c6
100053a0:	cmp    eax,0x80030012
100053a5:	je     0x100053bc
100053a7:	cmp    eax,0x80030013
100053ac:	jne    0x10005eb6
100053b2:	mov    eax,0x10002448
100053b7:	jmp    0x10005ecd
100053bc:	mov    eax,0x10002434
100053c1:	jmp    0x10005ecd
100053c6:	mov    eax,0x1000241c
100053cb:	jmp    0x10005ecd
100053d0:	mov    eax,0x10002400
100053d5:	jmp    0x10005ecd
100053da:	mov    eax,0x100023ec
100053df:	jmp    0x10005ecd
100053e4:	mov    eax,0x100023d8
100053e9:	jmp    0x10005ecd
100053ee:	mov    eax,0x100023c8
100053f3:	jmp    0x10005ecd
100053f8:	cmp    eax,0x8003001d
100053fd:	je     0x10005458
100053ff:	cmp    eax,0x8003001e
10005404:	je     0x1000544e
10005406:	cmp    eax,0x80030020
1000540b:	je     0x10005444
1000540d:	cmp    eax,0x80030021
10005412:	je     0x1000543a
10005414:	cmp    eax,0x80030050
10005419:	je     0x10005430
1000541b:	cmp    eax,0x80030057
10005420:	jne    0x10005eb6
10005426:	mov    eax,0x100023b0
1000542b:	jmp    0x10005ecd
10005430:	mov    eax,0x10002398
10005435:	jmp    0x10005ecd
1000543a:	mov    eax,0x10002384
1000543f:	jmp    0x10005ecd
10005444:	mov    eax,0x1000236c
10005449:	jmp    0x10005ecd
1000544e:	mov    eax,0x1000235c
10005453:	jmp    0x10005ecd
10005458:	mov    eax,0x10002348
1000545d:	jmp    0x10005ecd
10005462:	mov    eax,0x10002334
10005467:	jmp    0x10005ecd
1000546c:	add    eax,0x7ffcff06
10005471:	cmp    eax,0xc
10005474:	ja     0x10005eb6
1000547a:	jmp    DWORD PTR [eax*4+0x10006031]
10005481:	mov    eax,0x1000231c
10005486:	jmp    0x10005ecd
1000548b:	mov    eax,0x10002308
10005490:	jmp    0x10005ecd
10005495:	mov    eax,0x100022f4
1000549a:	jmp    0x10005ecd
1000549f:	mov    eax,0x100022e4
100054a4:	jmp    0x10005ecd
100054a9:	mov    eax,0x100022c8
100054ae:	jmp    0x10005ecd
100054b3:	mov    eax,0x100022b4
100054b8:	jmp    0x10005ecd
100054bd:	mov    eax,0x100022a8
100054c2:	jmp    0x10005ecd
100054c7:	mov    eax,0x10002294
100054cc:	jmp    0x10005ecd
100054d1:	mov    eax,0x10002284
100054d6:	jmp    0x10005ecd
100054db:	mov    eax,0x10002274
100054e0:	jmp    0x10005ecd
100054e5:	mov    eax,0x10002264
100054ea:	jmp    0x10005ecd
100054ef:	mov    eax,0x10002254
100054f4:	jmp    0x10005ecd
100054f9:	mov    eax,0x10002240
100054fe:	jmp    0x10005ecd
10005503:	mov    eax,0x10002224
10005508:	jmp    0x10005ecd
1000550d:	mov    ecx,0x80040064
10005512:	cmp    eax,ecx
10005514:	jg     0x100055fd
1000551a:	je     0x100055f3
10005520:	add    eax,0x7ffc0000
10005525:	cmp    eax,0x12
10005528:	ja     0x10005eb6
1000552e:	jmp    DWORD PTR [eax*4+0x10006065]
10005535:	mov    eax,0x10002214
1000553a:	jmp    0x10005ecd
1000553f:	mov    eax,0x10002208
10005544:	jmp    0x10005ecd
10005549:	mov    eax,0x100021f4
1000554e:	jmp    0x10005ecd
10005553:	mov    eax,0x100021d8
10005558:	jmp    0x10005ecd
1000555d:	mov    eax,0x100021c4
10005562:	jmp    0x10005ecd
10005567:	mov    eax,0x100021b0
1000556c:	jmp    0x10005ecd
10005571:	mov    eax,0x100021a0
10005576:	jmp    0x10005ecd
1000557b:	mov    eax,0x10002194
10005580:	jmp    0x10005ecd
10005585:	mov    eax,0x10002184
1000558a:	jmp    0x10005ecd
1000558f:	mov    eax,0x1000216c
10005594:	jmp    0x10005ecd
10005599:	mov    eax,0x10002154
1000559e:	jmp    0x10005ecd
100055a3:	mov    eax,0x10002144
100055a8:	jmp    0x10005ecd
100055ad:	mov    eax,0x10002128
100055b2:	jmp    0x10005ecd
100055b7:	mov    eax,0x10002114
100055bc:	jmp    0x10005ecd
100055c1:	mov    eax,0x10002100
100055c6:	jmp    0x10005ecd
100055cb:	mov    eax,0x100020ec
100055d0:	jmp    0x10005ecd
100055d5:	mov    eax,0x100020d4
100055da:	jmp    0x10005ecd
100055df:	mov    eax,0x100020c0
100055e4:	jmp    0x10005ecd
100055e9:	mov    eax,0x100020b0
100055ee:	jmp    0x10005ecd
100055f3:	mov    eax,0x100020a0
100055f8:	jmp    0x10005ecd
100055fd:	mov    ecx,0x80040100
10005602:	cmp    eax,ecx
10005604:	jg     0x10005681
10005606:	je     0x10005677
10005608:	add    eax,0x7ffbff9b
1000560d:	cmp    eax,0x8
10005610:	ja     0x10005eb6
10005616:	jmp    DWORD PTR [eax*4+0x100060b1]
1000561d:	mov    eax,0x1000208c
10005622:	jmp    0x10005ecd
10005627:	mov    eax,0x1000207c
1000562c:	jmp    0x10005ecd
10005631:	mov    eax,0x1000206c
10005636:	jmp    0x10005ecd
1000563b:	mov    eax,0x10002060
10005640:	jmp    0x10005ecd
10005645:	mov    eax,0x10002054
1000564a:	jmp    0x10005ecd
1000564f:	mov    eax,0x10002044
10005654:	jmp    0x10005ecd
10005659:	mov    eax,0x10002034
1000565e:	jmp    0x10005ecd
10005663:	mov    eax,0x10002018
10005668:	jmp    0x10005ecd
1000566d:	mov    eax,0x10002004
10005672:	jmp    0x10005ecd
10005677:	mov    eax,0x10001fe8
1000567c:	jmp    0x10005ecd
10005681:	mov    ecx,0x800401a0
10005686:	cmp    eax,ecx
10005688:	jg     0x10005774
1000568e:	je     0x1000576a
10005694:	add    ecx,0xffffffb1
10005697:	cmp    eax,ecx
10005699:	jg     0x10005711
1000569b:	je     0x10005707
1000569d:	cmp    eax,0x80040101
100056a2:	je     0x100056fd
100056a4:	cmp    eax,0x80040102
100056a9:	je     0x100056f3
100056ab:	cmp    eax,0x80040110
100056b0:	je     0x100056e9
100056b2:	cmp    eax,0x80040111
100056b7:	je     0x100056df
100056b9:	cmp    eax,0x80040140
100056be:	je     0x100056d5
100056c0:	cmp    eax,0x80040150
100056c5:	jne    0x10005eb6
100056cb:	mov    eax,0x10001fd4
100056d0:	jmp    0x10005ecd
100056d5:	mov    eax,0x10001fc8
100056da:	jmp    0x10005ecd
100056df:	mov    eax,0x10001fac
100056e4:	jmp    0x10005ecd
100056e9:	mov    eax,0x10001f94
100056ee:	jmp    0x10005ecd
100056f3:	mov    eax,0x10001f7c
100056f8:	jmp    0x10005ecd
100056fd:	mov    eax,0x10001f5c
10005702:	jmp    0x10005ecd
10005707:	mov    eax,0x10001f48
1000570c:	jmp    0x10005ecd
10005711:	cmp    eax,0x80040152
10005716:	je     0x10005760
10005718:	cmp    eax,0x80040153
1000571d:	je     0x10005756
1000571f:	cmp    eax,0x80040154
10005724:	je     0x1000574c
10005726:	cmp    eax,0x80040170
1000572b:	je     0x10005742
1000572d:	cmp    eax,0x80040180
10005732:	jne    0x10005eb6
10005738:	mov    eax,0x10001f34
1000573d:	jmp    0x10005ecd
10005742:	mov    eax,0x10001f1c
10005747:	jmp    0x10005ecd
1000574c:	mov    eax,0x10001f08
10005751:	jmp    0x10005ecd
10005756:	mov    eax,0x10001ef0
1000575b:	jmp    0x10005ecd
10005760:	mov    eax,0x10001edc
10005765:	jmp    0x10005ecd
1000576a:	mov    eax,0x10001ec4
1000576f:	jmp    0x10005ecd
10005774:	mov    ecx,0x800401c5
10005779:	cmp    eax,ecx
1000577b:	jg     0x100057f3
1000577d:	je     0x100057e9
1000577f:	cmp    eax,0x800401a1
10005784:	je     0x100057df
10005786:	cmp    eax,0x800401c0
1000578b:	je     0x100057d5
1000578d:	cmp    eax,0x800401c1
10005792:	je     0x100057cb
10005794:	cmp    eax,0x800401c2
10005799:	je     0x100057c1
1000579b:	cmp    eax,0x800401c3
100057a0:	je     0x100057b7
100057a2:	cmp    eax,0x800401c4
100057a7:	jne    0x10005eb6
100057ad:	mov    eax,0x10001eb0
100057b2:	jmp    0x10005ecd
100057b7:	mov    eax,0x10001e8c
100057bc:	jmp    0x10005ecd
100057c1:	mov    eax,0x10001e70
100057c6:	jmp    0x10005ecd
100057cb:	mov    eax,0x10001e54
100057d0:	jmp    0x10005ecd
100057d5:	mov    eax,0x10001e38
100057da:	jmp    0x10005ecd
100057df:	mov    eax,0x10001e20
100057e4:	jmp    0x10005ecd
100057e9:	mov    eax,0x10001e00
100057ee:	jmp    0x10005ecd
100057f3:	cmp    eax,0x800401c6
100057f8:	je     0x10005842
100057fa:	cmp    eax,0x800401d0
100057ff:	je     0x10005838
10005801:	cmp    eax,0x800401d1
10005806:	je     0x1000582e
10005808:	cmp    eax,0x800401d2
1000580d:	je     0x10005824
1000580f:	cmp    eax,0x800401d3
10005814:	jne    0x10005eb6
1000581a:	mov    eax,0x10001dec
1000581f:	jmp    0x10005ecd
10005824:	mov    eax,0x10001dd8
10005829:	jmp    0x10005ecd
1000582e:	mov    eax,0x10001dc0
10005833:	jmp    0x10005ecd
10005838:	mov    eax,0x10001dac
1000583d:	jmp    0x10005ecd
10005842:	mov    eax,0x10001d8c
10005847:	jmp    0x10005ecd
1000584c:	mov    eax,0x10001d74
10005851:	jmp    0x10005ecd
10005856:	mov    ecx,0x80070005
1000585b:	cmp    eax,ecx
1000585d:	jg     0x100059c8
10005863:	je     0x100059be
10005869:	add    eax,0x7ffbfe20
1000586e:	cmp    eax,0x1f
10005871:	ja     0x10005eb6
10005877:	jmp    DWORD PTR [eax*4+0x100060d5]
1000587e:	mov    eax,0x10001d5c
10005883:	jmp    0x10005ecd
10005888:	mov    eax,0x10001d44
1000588d:	jmp    0x10005ecd
10005892:	mov    eax,0x10001d30
10005897:	jmp    0x10005ecd
1000589c:	mov    eax,0x10001d1c
100058a1:	jmp    0x10005ecd
100058a6:	mov    eax,0x10001d10
100058ab:	jmp    0x10005ecd
100058b0:	mov    eax,0x10001d00
100058b5:	jmp    0x10005ecd
100058ba:	mov    eax,0x10001ce8
100058bf:	jmp    0x10005ecd
100058c4:	mov    eax,0x10001cc0
100058c9:	jmp    0x10005ecd
100058ce:	mov    eax,0x10001cac
100058d3:	jmp    0x10005ecd
100058d8:	mov    eax,0x10001c9c
100058dd:	jmp    0x10005ecd
100058e2:	mov    eax,0x10001c88
100058e7:	jmp    0x10005ecd
100058ec:	mov    eax,0x10001c74
100058f1:	jmp    0x10005ecd
100058f6:	mov    eax,0x10001c64
100058fb:	jmp    0x10005ecd
10005900:	mov    eax,0x10001c54
10005905:	jmp    0x10005ecd
1000590a:	mov    eax,0x10001c44
1000590f:	jmp    0x10005ecd
10005914:	mov    eax,0x10001c2c
10005919:	jmp    0x10005ecd
1000591e:	mov    eax,0x10001c18
10005923:	jmp    0x10005ecd
10005928:	mov    eax,0x10001c00
1000592d:	jmp    0x10005ecd
10005932:	mov    eax,0x10001be8
10005937:	jmp    0x10005ecd
1000593c:	mov    eax,0x10001bd4
10005941:	jmp    0x10005ecd
10005946:	mov    eax,0x10001bc4
1000594b:	jmp    0x10005ecd
10005950:	mov    eax,0x10001bb0
10005955:	jmp    0x10005ecd
1000595a:	mov    eax,0x10001b9c
1000595f:	jmp    0x10005ecd
10005964:	mov    eax,0x10001b8c
10005969:	jmp    0x10005ecd
1000596e:	mov    eax,0x10001b78
10005973:	jmp    0x10005ecd
10005978:	mov    eax,0x10001b68
1000597d:	jmp    0x10005ecd
10005982:	mov    eax,0x10001b54
10005987:	jmp    0x10005ecd
1000598c:	mov    eax,0x10001b44
10005991:	jmp    0x10005ecd
10005996:	mov    eax,0x10001b34
1000599b:	jmp    0x10005ecd
100059a0:	mov    eax,0x10001b1c
100059a5:	jmp    0x10005ecd
100059aa:	mov    eax,0x10001b08
100059af:	jmp    0x10005ecd
100059b4:	mov    eax,0x10001af8
100059b9:	jmp    0x10005ecd
100059be:	mov    eax,0x10001ae8
100059c3:	jmp    0x10005ecd
100059c8:	mov    ecx,0x800a017c
100059cd:	cmp    eax,ecx
100059cf:	jg     0x10005c54
100059d5:	je     0x10005c4a
100059db:	mov    ecx,0x800a001c
100059e0:	cmp    eax,ecx
100059e2:	jg     0x10005b5d
100059e8:	je     0x10005b53
100059ee:	mov    ecx,0x80080007
100059f3:	cmp    eax,ecx
100059f5:	jg     0x10005aae
100059fb:	je     0x10005aa4
10005a01:	add    ecx,0xfffffffb
10005a04:	cmp    eax,ecx
10005a06:	jg     0x10005a5c
10005a08:	je     0x10005a52
10005a0a:	cmp    eax,0x80070006
10005a0f:	je     0x10005a48
10005a11:	cmp    eax,0x8007000e
10005a16:	je     0x10005a3e
10005a18:	cmp    eax,0x80070057
10005a1d:	je     0x10005a34
10005a1f:	cmp    eax,0x80080001
10005a24:	jne    0x10005eb6
10005a2a:	mov    eax,0x10001acc
10005a2f:	jmp    0x10005ecd
10005a34:	mov    eax,0x10001abc
10005a39:	jmp    0x10005ecd
10005a3e:	mov    eax,0x10001aac
10005a43:	jmp    0x10005ecd
10005a48:	mov    eax,0x10001aa0
10005a4d:	jmp    0x10005ecd
10005a52:	mov    eax,0x10001a90
10005a57:	jmp    0x10005ecd
10005a5c:	cmp    eax,0x80080003
10005a61:	je     0x10005a9a
10005a63:	cmp    eax,0x80080004
10005a68:	je     0x10005a90
10005a6a:	cmp    eax,0x80080005
10005a6f:	je     0x10005a86
10005a71:	cmp    eax,0x80080006
10005a76:	jne    0x10005eb6
10005a7c:	mov    eax,0x10001a78
10005a81:	jmp    0x10005ecd
10005a86:	mov    eax,0x10001a5c
10005a8b:	jmp    0x10005ecd
10005a90:	mov    eax,0x10001a4c
10005a95:	jmp    0x10005ecd
10005a9a:	mov    eax,0x10001a34
10005a9f:	jmp    0x10005ecd
10005aa4:	mov    eax,0x10001a20
10005aa9:	jmp    0x10005ecd
10005aae:	mov    ecx,0x800a0005
10005ab3:	cmp    eax,ecx
10005ab5:	jg     0x10005b0b
10005ab7:	je     0x10005b01
10005ab9:	cmp    eax,0x80080008
10005abe:	je     0x10005af7
10005ac0:	cmp    eax,0x80080009
10005ac5:	je     0x10005aed
10005ac7:	cmp    eax,0x80080010
10005acc:	je     0x10005ae3
10005ace:	cmp    eax,0x80080011
10005ad3:	jne    0x10005eb6
10005ad9:	mov    eax,0x10001a0c
10005ade:	jmp    0x10005ecd
10005ae3:	mov    eax,0x100019f8
10005ae8:	jmp    0x10005ecd
10005aed:	mov    eax,0x100019e4
10005af2:	jmp    0x10005ecd
10005af7:	mov    eax,0x100019cc
10005afc:	jmp    0x10005ecd
10005b01:	mov    eax,0x100019b0
10005b06:	jmp    0x10005ecd
10005b0b:	cmp    eax,0x800a0006
10005b10:	je     0x10005b49
10005b12:	cmp    eax,0x800a0007
10005b17:	je     0x10005b3f
10005b19:	cmp    eax,0x800a000b
10005b1e:	je     0x10005b35
10005b20:	cmp    eax,0x800a000e
10005b25:	jne    0x10005eb6
10005b2b:	mov    eax,0x10001998
10005b30:	jmp    0x10005ecd
10005b35:	mov    eax,0x10001980
10005b3a:	jmp    0x10005ecd
10005b3f:	mov    eax,0x1000196c
10005b44:	jmp    0x10005ecd
10005b49:	mov    eax,0x1000195c
10005b4e:	jmp    0x10005ecd
10005b53:	mov    eax,0x10001944
10005b58:	jmp    0x10005ecd
10005b5d:	mov    ecx,0x800a0141
10005b62:	cmp    eax,ecx
10005b64:	jg     0x10005eb6
10005b6a:	je     0x10005c40
10005b70:	add    eax,0x7ff5ffcc
10005b75:	cmp    eax,0x2a
10005b78:	ja     0x10005eb6
10005b7e:	movzx  eax,BYTE PTR [eax+0x100061a1]
10005b85:	jmp    DWORD PTR [eax*4+0x10006155]
10005b8c:	mov    eax,0x10001928
10005b91:	jmp    0x10005ecd
10005b96:	mov    eax,0x10001914
10005b9b:	jmp    0x10005ecd
10005ba0:	mov    eax,0x10001900
10005ba5:	jmp    0x10005ecd
10005baa:	mov    eax,0x100018e8
10005baf:	jmp    0x10005ecd
10005bb4:	mov    eax,0x100018d4
10005bb9:	jmp    0x10005ecd
10005bbe:	mov    eax,0x100018bc
10005bc3:	jmp    0x10005ecd
10005bc8:	mov    eax,0x100018a4
10005bcd:	jmp    0x10005ecd
10005bd2:	mov    eax,0x10001894
10005bd7:	jmp    0x10005ecd
10005bdc:	mov    eax,0x1000187c
10005be1:	jmp    0x10005ecd
10005be6:	mov    eax,0x10001868
10005beb:	jmp    0x10005ecd
10005bf0:	mov    eax,0x10001854
10005bf5:	jmp    0x10005ecd
10005bfa:	mov    eax,0x1000183c
10005bff:	jmp    0x10005ecd
10005c04:	mov    eax,0x10001824
10005c09:	jmp    0x10005ecd
10005c0e:	mov    eax,0x10001810
10005c13:	jmp    0x10005ecd
10005c18:	mov    eax,0x100017f4
10005c1d:	jmp    0x10005ecd
10005c22:	mov    eax,0x100017e0
10005c27:	jmp    0x10005ecd
10005c2c:	mov    eax,0x100017c4
10005c31:	jmp    0x10005ecd
10005c36:	mov    eax,0x100017ac
10005c3b:	jmp    0x10005ecd
10005c40:	mov    eax,0x10001794
10005c45:	jmp    0x10005ecd
10005c4a:	mov    eax,0x10001778
10005c4f:	jmp    0x10005ecd
10005c54:	mov    ecx,0x40002
10005c59:	cmp    eax,ecx
10005c5b:	jg     0x10005dc9
10005c61:	je     0x10005dbf
10005c67:	mov    ecx,0x800a01e1
10005c6c:	cmp    eax,ecx
10005c6e:	jg     0x10005d27
10005c74:	je     0x10005d1d
10005c7a:	add    ecx,0xffffffa2
10005c7d:	cmp    eax,ecx
10005c7f:	jg     0x10005cd5
10005c81:	je     0x10005ccb
10005c83:	cmp    eax,0x800a017d
10005c88:	je     0x10005cc1
10005c8a:	cmp    eax,0x800a017e
10005c8f:	je     0x10005cb7
10005c91:	cmp    eax,0x800a017f
10005c96:	je     0x10005cad
10005c98:	cmp    eax,0x800a0181
10005c9d:	jne    0x10005eb6
10005ca3:	mov    eax,0x10001758
10005ca8:	jmp    0x10005ecd
10005cad:	mov    eax,0x10001740
10005cb2:	jmp    0x10005ecd
10005cb7:	mov    eax,0x10001720
10005cbc:	jmp    0x10005ecd
10005cc1:	mov    eax,0x10001700
10005cc6:	jmp    0x10005ecd
10005ccb:	mov    eax,0x100016e8
10005cd0:	jmp    0x10005ecd
10005cd5:	cmp    eax,0x800a0189
10005cda:	je     0x10005d13
10005cdc:	cmp    eax,0x800a018a
10005ce1:	je     0x10005d09
10005ce3:	cmp    eax,0x800a01a6
10005ce8:	je     0x10005cff
10005cea:	cmp    eax,0x800a01cc
10005cef:	jne    0x10005eb6
10005cf5:	mov    eax,0x100016c8
10005cfa:	jmp    0x10005ecd
10005cff:	mov    eax,0x100016b0
10005d04:	jmp    0x10005ecd
10005d09:	mov    eax,0x10001698
10005d0e:	jmp    0x10005ecd
10005d13:	mov    eax,0x10001678
10005d18:	jmp    0x10005ecd
10005d1d:	mov    eax,0x10001660
10005d22:	jmp    0x10005ecd
10005d27:	test   eax,eax
10005d29:	jg     0x10005d7f
10005d2b:	je     0x10005d75
10005d2d:	cmp    eax,0x800a01e2
10005d32:	je     0x10005d6b
10005d34:	cmp    eax,0x800a02df
10005d39:	je     0x10005d61
10005d3b:	cmp    eax,0x800a02e8
10005d40:	je     0x10005d57
10005d42:	cmp    eax,0x800a02ea
10005d47:	jne    0x10005eb6
10005d4d:	mov    eax,0x10001644
10005d52:	jmp    0x10005ecd
10005d57:	mov    eax,0x10001628
10005d5c:	jmp    0x10005ecd
10005d61:	mov    eax,0x1000160c
10005d66:	jmp    0x10005ecd
10005d6b:	mov    eax,0x100015f8
10005d70:	jmp    0x10005ecd
10005d75:	mov    eax,0x100015f0
10005d7a:	jmp    0x10005ecd
10005d7f:	dec    eax
10005d80:	je     0x10005db5
10005d82:	sub    eax,0x301ff
10005d87:	je     0x10005dab
10005d89:	sub    eax,0xfe00
10005d8e:	je     0x10005da1
10005d90:	dec    eax
10005d91:	jne    0x10005eb6
10005d97:	mov    eax,0x100015e0
10005d9c:	jmp    0x10005ecd
10005da1:	mov    eax,0x100015d0
10005da6:	jmp    0x10005ecd
10005dab:	mov    eax,0x100015c0
10005db0:	jmp    0x10005ecd
10005db5:	mov    eax,0x100015b8
10005dba:	jmp    0x10005ecd
10005dbf:	mov    eax,0x100015a0
10005dc4:	jmp    0x10005ecd
10005dc9:	mov    ecx,0x40181
10005dce:	cmp    eax,ecx
10005dd0:	jg     0x10005e65
10005dd6:	je     0x10005e5e
10005ddc:	add    ecx,0xffffffbf
10005ddf:	cmp    eax,ecx
10005de1:	jg     0x10005e2d
10005de3:	je     0x10005e23
10005de5:	sub    eax,0x40100
10005dea:	je     0x10005e19
10005dec:	dec    eax
10005ded:	je     0x10005e0f
10005def:	dec    eax
10005df0:	je     0x10005e05
10005df2:	sub    eax,0x2e
10005df5:	jne    0x10005eb6
10005dfb:	mov    eax,0x10001588
10005e00:	jmp    0x10005ecd
10005e05:	mov    eax,0x10001568
10005e0a:	jmp    0x10005ecd
10005e0f:	mov    eax,0x10001554
10005e14:	jmp    0x10005ecd
10005e19:	mov    eax,0x10001544
10005e1e:	jmp    0x10005ecd
10005e23:	mov    eax,0x1000152c
10005e28:	jmp    0x10005ecd
10005e2d:	sub    eax,0x40170
10005e32:	je     0x10005e57
10005e34:	dec    eax
10005e35:	je     0x10005e50
10005e37:	dec    eax
10005e38:	je     0x10005e49
10005e3a:	sub    eax,0xe
10005e3d:	jne    0x10005eb6
10005e3f:	mov    eax,0x10001514
10005e44:	jmp    0x10005ecd
10005e49:	mov    eax,0x100014f4
10005e4e:	jmp    0x10005ecd
10005e50:	mov    eax,0x100014e0
10005e55:	jmp    0x10005ecd
10005e57:	mov    eax,0x100014c0
10005e5c:	jmp    0x10005ecd
10005e5e:	mov    eax,0x100014a4
10005e63:	jmp    0x10005ecd
10005e65:	mov    ecx,0x401e4
10005e6a:	cmp    eax,ecx
10005e6c:	jg     0x10005ea9
10005e6e:	je     0x10005ea2
10005e70:	sub    eax,0x40182
10005e75:	je     0x10005e9b
10005e77:	sub    eax,0x1e
10005e7a:	je     0x10005e94
10005e7c:	sub    eax,0x20
10005e7f:	je     0x10005e8d
10005e81:	sub    eax,0x22
10005e84:	jne    0x10005eb6
10005e86:	mov    eax,0x1000148c
10005e8b:	jmp    0x10005ecd
10005e8d:	mov    eax,0x10001470
10005e92:	jmp    0x10005ecd
10005e94:	mov    eax,0x1000145c
10005e99:	jmp    0x10005ecd
10005e9b:	mov    eax,0x10001444
10005ea0:	jmp    0x10005ecd
10005ea2:	mov    eax,0x1000143c
10005ea7:	jmp    0x10005ecd
10005ea9:	sub    eax,0x401e5
10005eae:	je     0x10005ec8
10005eb0:	dec    eax
10005eb1:	je     0x10005ec1
10005eb3:	dec    eax
10005eb4:	je     0x10005eba
10005eb6:	xor    eax,eax
10005eb8:	jmp    0x10005ecd
10005eba:	mov    eax,0x1000141c
10005ebf:	jmp    0x10005ecd
10005ec1:	mov    eax,0x10001414
10005ec6:	jmp    0x10005ecd
10005ec8:	mov    eax,0x10001408
10005ecd:	pop    ebp
10005ece:	ret    0x4
10005ed1:	inc    ebx
10005ed2:	dec    esi
10005ed3:	add    BYTE PTR [eax],dl
10005ed5:	dec    ebp
10005ed6:	dec    esi
10005ed7:	add    BYTE PTR [eax],dl
10005ed9:	push   edi
10005eda:	dec    esi
10005edb:	add    BYTE PTR [eax],dl
10005edd:	popa   
10005ede:	dec    esi
10005edf:	add    BYTE PTR [eax],dl
10005ee1:	imul   ecx,DWORD PTR [esi+0x0],0x10
10005ee5:	jne    0x10005f35
10005ee7:	add    BYTE PTR [eax],dl
10005ee9:	jg     0x10005f39
10005eeb:	add    BYTE PTR [eax],dl
10005eed:	mov    DWORD PTR [esi+0x0],ecx
10005ef0:	adc    BYTE PTR [ebx-0x62efffb2],dl
10005ef6:	dec    esi
10005ef7:	add    BYTE PTR [eax],dl
10005ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005efa:	dec    esi
10005efb:	add    BYTE PTR [eax],dl
10005efd:	mov    cl,0x4e
10005eff:	add    BYTE PTR [eax],dl
10005f01:	mov    ebx,0xc510004e
10005f06:	dec    esi
10005f07:	add    BYTE PTR [eax],dl
10005f09:	iret   
10005f0a:	dec    esi
10005f0b:	add    BYTE PTR [eax],dl
10005f0d:	(bad)  [esi+0x0]
10005f10:	adc    bl,ah
10005f12:	dec    esi
10005f13:	add    BYTE PTR [eax],dl
10005f15:	in     eax,dx
10005f16:	dec    esi
10005f17:	add    BYTE PTR [eax],dl
10005f19:	sub    DWORD PTR [edi+0x0],ecx
10005f1c:	adc    BYTE PTR [ebx],dh
10005f1e:	dec    edi
10005f1f:	add    BYTE PTR [eax],dl
10005f21:	cmp    eax,0x4710004f
10005f26:	dec    edi
10005f27:	add    BYTE PTR [eax],dl
10005f29:	push   ecx
10005f2a:	dec    edi
10005f2b:	add    BYTE PTR [eax],dl
10005f2d:	pop    ebx
10005f2e:	dec    edi
10005f2f:	add    BYTE PTR [eax],dl
10005f31:	gs dec edi
10005f33:	add    BYTE PTR [eax],dl
10005f35:	outs   dx,DWORD PTR ds:[esi]
10005f36:	dec    edi
10005f37:	add    BYTE PTR [eax],dl
10005f39:	jns    0x10005f8a
10005f3b:	add    BYTE PTR [eax],dl
10005f3d:	or     DWORD PTR [edi+0x0],0x10
10005f41:	lea    ecx,[edi+0x0]
10005f44:	adc    BYTE PTR [edi-0x5eefffb1],dl
10005f4a:	dec    edi
10005f4b:	add    BYTE PTR [eax],dl
10005f4d:	stos   DWORD PTR es:[edi],eax
10005f4e:	dec    edi
10005f4f:	add    BYTE PTR [eax],dl
10005f51:	mov    ch,0x4f
10005f53:	add    BYTE PTR [eax],dl
10005f55:	mov    edi,0xc910004f
10005f5a:	dec    edi
10005f5b:	add    BYTE PTR [eax],dl
10005f5d:	ror    DWORD PTR [edi+0x0],cl
10005f60:	adc    BYTE PTR [edi],cl
10005f62:	push   eax
10005f63:	add    BYTE PTR [eax],dl
10005f65:	sbb    DWORD PTR [eax+0x0],edx
10005f68:	adc    BYTE PTR [ebx],ah
10005f6a:	push   eax
10005f6b:	add    BYTE PTR [eax],dl
10005f6d:	sub    eax,0x37100050
10005f72:	push   eax
10005f73:	add    BYTE PTR [eax],dl
10005f75:	inc    ecx
10005f76:	push   eax
10005f77:	add    BYTE PTR [eax],dl
10005f79:	dec    ebx
10005f7a:	push   eax
10005f7b:	add    BYTE PTR [eax],dl
10005f7d:	push   ebp
10005f7e:	push   eax
10005f7f:	add    BYTE PTR [eax],dl
10005f81:	pop    edi
10005f82:	push   eax
10005f83:	add    BYTE PTR [eax],dl
10005f85:	imul   edx,DWORD PTR [eax+0x0],0x507310
10005f8c:	adc    BYTE PTR [ebp+0x50],bh
10005f8f:	add    BYTE PTR [eax],dl
10005f91:	xchg   DWORD PTR [eax+0x0],edx
10005f94:	adc    BYTE PTR [ecx-0x64efffb0],dl
10005f9a:	push   eax
10005f9b:	add    BYTE PTR [eax],dl
10005f9d:	xlat   BYTE PTR ds:[ebx]
10005f9e:	push   eax
10005f9f:	add    BYTE PTR [eax],dl
10005fa1:	mov    dh,0x5e
10005fa3:	add    BYTE PTR [eax],dl
10005fa5:	loope  0x10005ff7
10005fa7:	add    BYTE PTR [eax],dl
10005fa9:	jmp    0x10005ffb
10005fab:	add    BYTE PTR [eax],dl
10005fad:	cmc    
10005fae:	push   eax
10005faf:	add    BYTE PTR [eax],dl
10005fb1:	call   DWORD PTR [eax+0x0]
10005fb4:	adc    BYTE PTR [ecx],cl
10005fb6:	push   ecx
10005fb7:	add    BYTE PTR [eax],dl
10005fb9:	adc    edx,DWORD PTR [ecx+0x0]
10005fbc:	adc    BYTE PTR ds:0x27100051,bl
10005fc2:	push   ecx
10005fc3:	add    BYTE PTR [eax],dl
10005fc5:	xor    DWORD PTR [ecx+0x0],edx
10005fc8:	adc    BYTE PTR [ebx],bh
10005fca:	push   ecx
10005fcb:	add    BYTE PTR [eax],dl
10005fcd:	inc    ebp
10005fce:	push   ecx
10005fcf:	add    BYTE PTR [eax],dl
10005fd1:	dec    edi
10005fd2:	push   ecx
10005fd3:	add    BYTE PTR [eax],dl
10005fd5:	pop    ecx
10005fd6:	push   ecx
10005fd7:	add    BYTE PTR [eax],dl
10005fd9:	arpl   WORD PTR [ecx+0x0],dx
10005fdc:	adc    BYTE PTR [ebp+0x51],ch
10005fdf:	add    BYTE PTR [eax],dl
10005fe1:	jmp    0x3106037
10005fe6:	push   ecx
10005fe7:	add    BYTE PTR [eax],dl
10005fe9:	std    
10005fea:	push   ecx
10005feb:	add    BYTE PTR [eax],dl
10005fed:	pop    es
10005fee:	push   edx
10005fef:	add    BYTE PTR [eax],dl
10005ff1:	adc    DWORD PTR [edx+0x0],edx
10005ff4:	adc    BYTE PTR [ebx],bl
10005ff6:	push   edx
10005ff7:	add    BYTE PTR [eax],dl
10005ff9:	and    eax,0x2f100052
10005ffe:	push   edx
10005fff:	add    BYTE PTR [eax],dl
10006001:	cmp    DWORD PTR [edx+0x0],edx
10006004:	adc    BYTE PTR [ebx+0x52],al
10006007:	add    BYTE PTR [eax],dl
10006009:	dec    ebp
1000600a:	push   edx
1000600b:	add    BYTE PTR [eax],dl
1000600d:	push   edi
1000600e:	push   edx
1000600f:	add    BYTE PTR [eax],dl
10006011:	popa   
10006012:	push   edx
10006013:	add    BYTE PTR [eax],dl
10006015:	mov    dh,0x5e
10006017:	add    BYTE PTR [eax],dl
10006019:	add    BYTE PTR [ecx],al
1000601b:	or     eax,0xd03020d
10006020:	or     eax,0xd0d0d0d
10006025:	or     eax,0x5040d0d
1000602a:	push   es
1000602b:	pop    es
1000602c:	or     BYTE PTR [ecx],cl
1000602e:	or     cl,BYTE PTR [ebx]
10006030:	or     al,0x81
10006032:	push   esp
10006033:	add    BYTE PTR [eax],dl
10006035:	mov    edx,DWORD PTR [eax+eax*1+0x10]
10006039:	xchg   ebp,eax
1000603a:	push   esp
1000603b:	add    BYTE PTR [eax],dl
1000603d:	lahf   
1000603e:	push   esp
1000603f:	add    BYTE PTR [eax],dl
10006041:	test   eax,0xb3100054
10006046:	push   esp
10006047:	add    BYTE PTR [eax],dl
10006049:	mov    ebp,0xc7100054
1000604e:	push   esp
1000604f:	add    BYTE PTR [eax],dl
10006051:	rcl    DWORD PTR [eax+eax*1+0x10],1
10006055:	fist   DWORD PTR [eax+eax*1+0x10]
10006059:	in     eax,0x54
1000605b:	add    BYTE PTR [eax],dl
1000605d:	out    dx,eax
1000605e:	push   esp
1000605f:	add    BYTE PTR [eax],dl
10006061:	stc    
10006062:	push   esp
10006063:	add    BYTE PTR [eax],dl
10006065:	xor    eax,0x3f100055
1000606a:	push   ebp
1000606b:	add    BYTE PTR [eax],dl
1000606d:	dec    ecx
1000606e:	push   ebp
1000606f:	add    BYTE PTR [eax],dl
10006071:	push   ebx
10006072:	push   ebp
10006073:	add    BYTE PTR [eax],dl
10006075:	pop    ebp
10006076:	push   ebp
10006077:	add    BYTE PTR [eax],dl
10006079:	addr16 push ebp
1000607b:	add    BYTE PTR [eax],dl
1000607d:	jno    0x100060d4
1000607f:	add    BYTE PTR [eax],dl
10006081:	jnp    0x100060d8
10006083:	add    BYTE PTR [eax],dl
10006085:	test   DWORD PTR [ebp+0x0],edx
10006088:	adc    BYTE PTR [edi-0x66efffab],cl
1000608e:	push   ebp
1000608f:	add    BYTE PTR [eax],dl
10006091:	mov    ds:0xad100055,eax
10006096:	push   ebp
10006097:	add    BYTE PTR [eax],dl
10006099:	mov    bh,0x55
1000609b:	add    BYTE PTR [eax],dl
1000609d:	rcl    DWORD PTR [ebp+0x0],0x10
100060a1:	retf   
100060a2:	push   ebp
100060a3:	add    BYTE PTR [eax],dl
100060a5:	aad    0x55
100060a7:	add    BYTE PTR [eax],dl
100060a9:	fist   WORD PTR [ebp+0x0]
100060ac:	adc    cl,ch
100060ae:	push   ebp
100060af:	add    BYTE PTR [eax],dl
100060b1:	sbb    eax,0x27100056
100060b6:	push   esi
100060b7:	add    BYTE PTR [eax],dl
100060b9:	xor    DWORD PTR [esi+0x0],edx
100060bc:	adc    BYTE PTR [ebx],bh
100060be:	push   esi
100060bf:	add    BYTE PTR [eax],dl
100060c1:	inc    ebp
100060c2:	push   esi
100060c3:	add    BYTE PTR [eax],dl
100060c5:	dec    edi
100060c6:	push   esi
100060c7:	add    BYTE PTR [eax],dl
100060c9:	pop    ecx
100060ca:	push   esi
100060cb:	add    BYTE PTR [eax],dl
100060cd:	arpl   WORD PTR [esi+0x0],dx
100060d0:	adc    BYTE PTR [ebp+0x56],ch
100060d3:	add    BYTE PTR [eax],dl
100060d5:	jle    0x1000612f
100060d7:	add    BYTE PTR [eax],dl
100060d9:	mov    BYTE PTR [eax+0x0],bl
100060dc:	adc    BYTE PTR [edx-0x63efffa8],dl
100060e2:	pop    eax
100060e3:	add    BYTE PTR [eax],dl
100060e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100060e6:	pop    eax
100060e7:	add    BYTE PTR [eax],dl
100060e9:	mov    al,0x58
100060eb:	add    BYTE PTR [eax],dl
100060ed:	mov    edx,0xc4100058
100060f2:	pop    eax
100060f3:	add    BYTE PTR [eax],dl
100060f5:	into   
100060f6:	pop    eax
100060f7:	add    BYTE PTR [eax],dl
100060f9:	fcomp  DWORD PTR [eax+0x0]
100060fc:	adc    dl,ah
100060fe:	pop    eax
100060ff:	add    BYTE PTR [eax],dl
10006101:	in     al,dx
10006102:	pop    eax
10006103:	add    BYTE PTR [eax],dl
10006105:	neg    BYTE PTR [eax+0x0]
10006108:	adc    BYTE PTR [eax],al
1000610a:	pop    ecx
1000610b:	add    BYTE PTR [eax],dl
1000610d:	or     bl,BYTE PTR [ecx+0x0]
10006110:	adc    BYTE PTR [ecx+ebx*2],dl
10006113:	add    BYTE PTR [eax],dl
10006115:	push   ds
10006116:	pop    ecx
10006117:	add    BYTE PTR [eax],dl
10006119:	sub    BYTE PTR [ecx+0x0],bl
1000611c:	adc    BYTE PTR [edx],dh
1000611e:	pop    ecx
1000611f:	add    BYTE PTR [eax],dl
10006121:	cmp    al,0x59
10006123:	add    BYTE PTR [eax],dl
10006125:	inc    esi
10006126:	pop    ecx
10006127:	add    BYTE PTR [eax],dl
10006129:	push   eax
1000612a:	pop    ecx
1000612b:	add    BYTE PTR [eax],dl
1000612d:	pop    edx
1000612e:	pop    ecx
1000612f:	add    BYTE PTR [eax],dl
10006131:	fs pop ecx
10006133:	add    BYTE PTR [eax],dl
10006135:	outs   dx,BYTE PTR ds:[esi]
10006136:	pop    ecx
10006137:	add    BYTE PTR [eax],dl
10006139:	js     0x10006194
1000613b:	add    BYTE PTR [eax],dl
1000613d:	sbb    BYTE PTR [ecx+0x0],0x10
10006141:	mov    WORD PTR [ecx+0x0],ds
10006144:	adc    BYTE PTR [esi-0x5fefffa7],dl
1000614a:	pop    ecx
1000614b:	add    BYTE PTR [eax],dl
1000614d:	stos   BYTE PTR es:[edi],al
1000614e:	pop    ecx
1000614f:	add    BYTE PTR [eax],dl
10006151:	mov    ah,0x59
10006153:	add    BYTE PTR [eax],dl
10006155:	mov    WORD PTR [ebx+0x0],ds
10006158:	adc    BYTE PTR [esi-0x5fefffa5],dl
1000615e:	pop    ebx
1000615f:	add    BYTE PTR [eax],dl
10006161:	stos   BYTE PTR es:[edi],al
10006162:	pop    ebx
10006163:	add    BYTE PTR [eax],dl
10006165:	mov    ah,0x5b
10006167:	add    BYTE PTR [eax],dl
10006169:	mov    esi,0xc810005b
1000616e:	pop    ebx
1000616f:	add    BYTE PTR [eax],dl
10006171:	rcr    BYTE PTR [ebx+0x0],cl
10006174:	adc    ah,bl
10006176:	pop    ebx
10006177:	add    BYTE PTR [eax],dl
10006179:	out    0x5b,al
1000617b:	add    BYTE PTR [eax],dl
1000617d:	lock pop ebx
1000617f:	add    BYTE PTR [eax],dl
10006181:	cli    
10006182:	pop    ebx
10006183:	add    BYTE PTR [eax],dl
10006185:	add    al,0x5c
10006187:	add    BYTE PTR [eax],dl
10006189:	push   cs
1000618a:	pop    esp
1000618b:	add    BYTE PTR [eax],dl
1000618d:	sbb    BYTE PTR [eax+eax*1+0x10],bl
10006191:	and    bl,BYTE PTR [eax+eax*1+0x10]
10006195:	sub    al,0x5c
10006197:	add    BYTE PTR [eax],dl
10006199:	ss pop esp
1000619b:	add    BYTE PTR [eax],dl
1000619d:	mov    dh,0x5e
1000619f:	add    BYTE PTR [eax],dl
100061a1:	add    BYTE PTR [ecx],al
100061a3:	add    al,BYTE PTR [ebx]
100061a5:	adc    al,BYTE PTR [eax*1+0x12071206]
100061ac:	or     BYTE PTR [ecx],cl
100061ae:	adc    dl,BYTE PTR [edx]
100061b0:	or     cl,BYTE PTR [ebx]
100061b2:	adc    cl,BYTE PTR [ecx*1+0xe121212]
100061b9:	movlps xmm2,QWORD PTR [edx]
100061bc:	adc    dl,BYTE PTR [edx]
100061be:	adc    dl,BYTE PTR [edx]
100061c0:	adc    dl,BYTE PTR [edx]
100061c2:	adc    dl,BYTE PTR [edx]
100061c4:	adc    dl,BYTE PTR [edx]
100061c6:	adc    dl,BYTE PTR [edx]
100061c8:	adc    dl,BYTE PTR [edx]
100061ca:	adc    BYTE PTR [ecx],dl
100061cc:	push   esi
100061cd:	lea    esi,[ecx+0x8]
100061d0:	cmp    DWORD PTR [esi],0xffffffff
100061d3:	jne    0x100061de
100061d5:	and    DWORD PTR [esi],0x0
100061d8:	push   esi
100061d9:	call   0x100040d2
100061de:	mov    eax,DWORD PTR [esi]
100061e0:	pop    esi
100061e1:	ret    
100061e2:	call   0x100061cc
100061e7:	test   eax,eax
100061e9:	je     0x100061f2
100061eb:	mov    edx,DWORD PTR [eax]
100061ed:	mov    ecx,eax
100061ef:	jmp    DWORD PTR [edx+0x8]
100061f2:	mov    eax,0x80004005
100061f7:	ret    
100061f8:	call   0x100061cc
100061fd:	test   eax,eax
100061ff:	je     0x10006208
10006201:	mov    edx,DWORD PTR [eax]
10006203:	mov    ecx,eax
10006205:	jmp    DWORD PTR [edx+0x10]
10006208:	xor    eax,eax
1000620a:	ret    
1000620b:	push   ebp
1000620c:	mov    ebp,esp
1000620e:	call   0x100061cc
10006213:	test   eax,eax
10006215:	je     0x1000621f
10006217:	mov    edx,DWORD PTR [eax]
10006219:	mov    ecx,eax
1000621b:	pop    ebp
1000621c:	jmp    DWORD PTR [edx+0xc]
1000621f:	push   0x10002d6c
10006224:	push   DWORD PTR [ebp+0x8]
10006227:	call   0x1000806f
1000622c:	pop    ecx
1000622d:	pop    ecx
1000622e:	pop    ebp
1000622f:	ret    0x4
10006232:	test   BYTE PTR [ecx+0x8],0x8
10006236:	je     0x10006241
10006238:	push   DWORD PTR [ecx+0xc]
1000623b:	call   0x10003eeb
10006240:	pop    ecx
10006241:	ret    
10006242:	push   0x4
10006244:	mov    eax,0x1000a51f
10006249:	call   0x10009a38
1000624e:	mov    eax,ecx
10006250:	mov    DWORD PTR [ebp-0x10],eax
10006253:	push   0x2
10006255:	pop    ecx
10006256:	mov    DWORD PTR [eax],ecx
10006258:	mov    DWORD PTR [eax+0x4],ecx
1000625b:	mov    DWORD PTR [eax+0x8],0x10
10006262:	mov    DWORD PTR [eax+0xc],0x1000ccd8
10006269:	or     DWORD PTR [ebp-0x4],0xffffffff
1000626d:	call   0x10009ad7
10006272:	ret    
10006273:	push   0x4
10006275:	mov    eax,0x1000a51f
1000627a:	call   0x10009a38
1000627f:	mov    esi,ecx
10006281:	mov    DWORD PTR [ebp-0x10],esi
10006284:	push   0x2
10006286:	pop    eax
10006287:	mov    DWORD PTR [esi],eax
10006289:	mov    DWORD PTR [esi+0x4],eax
1000628c:	mov    DWORD PTR [esi+0x8],0x10
10006293:	mov    DWORD PTR [esi+0xc],0x1000ccd8
1000629a:	and    DWORD PTR [ebp-0x4],0x0
1000629e:	push   DWORD PTR [ebp+0x8]
100062a1:	call   0x10007b80
100062a6:	or     DWORD PTR [ebp-0x4],0xffffffff
100062aa:	mov    eax,esi
100062ac:	call   0x10009ad7
100062b1:	ret    0x4
100062b4:	push   0x4
100062b6:	mov    eax,0x1000a51f
100062bb:	call   0x10009a38
100062c0:	mov    DWORD PTR [ebp-0x10],ecx
100062c3:	or     DWORD PTR [ebp-0x4],0xffffffff
100062c7:	test   BYTE PTR [ecx+0x8],0x8
100062cb:	je     0x100062d6
100062cd:	push   DWORD PTR [ecx+0xc]
100062d0:	call   0x10003eeb
100062d5:	pop    ecx
100062d6:	call   0x10009ad7
100062db:	ret    
100062dc:	push   esi
100062dd:	mov    esi,ecx
100062df:	call   0x10004d15
100062e4:	mov    ecx,DWORD PTR [esi+0x8]
100062e7:	mov    eax,DWORD PTR [esi]
100062e9:	not    ecx
100062eb:	and    ecx,0x1
100062ee:	shr    eax,cl
100062f0:	pop    esi
100062f1:	dec    eax
100062f2:	ret    
100062f3:	push   ebp
100062f4:	mov    ebp,esp
100062f6:	push   esi
100062f7:	mov    eax,ecx
100062f9:	mov    edx,DWORD PTR [ebp+0x8]
100062fc:	mov    ecx,DWORD PTR [edx+0x8]
100062ff:	mov    esi,DWORD PTR [ebp+0xc]
10006302:	not    ecx
10006304:	and    ecx,0x1
10006307:	shl    esi,cl
10006309:	add    esi,DWORD PTR [edx+0xc]
1000630c:	mov    DWORD PTR [eax],esi
1000630e:	mov    ecx,DWORD PTR [edx+0x8]
10006311:	not    ecx
10006313:	and    ecx,0x1
10006316:	mov    DWORD PTR [eax+0x4],ecx
10006319:	pop    esi
1000631a:	pop    ebp
1000631b:	ret    0x8
1000631e:	mov    DWORD PTR [ecx],0x100013dc
10006324:	mov    ecx,DWORD PTR [ecx+0x4]
10006327:	test   ecx,ecx
10006329:	je     0x10006331
1000632b:	push   ecx
1000632c:	call   0x10004deb
10006331:	ret    
10006332:	push   ebp
10006333:	mov    ebp,esp
10006335:	push   esi
10006336:	mov    esi,ecx
10006338:	call   0x1000631e
1000633d:	test   BYTE PTR [ebp+0x8],0x1
10006341:	je     0x1000634a
10006343:	push   esi
10006344:	call   0x10003eeb
10006349:	pop    ecx
1000634a:	mov    eax,esi
1000634c:	pop    esi
1000634d:	pop    ebp
1000634e:	ret    0x4
10006351:	push   0x4
10006353:	mov    eax,0x1000a491
10006358:	call   0x10009a38
1000635d:	mov    eax,ecx
1000635f:	mov    DWORD PTR [ebp-0x10],eax
10006362:	mov    DWORD PTR [eax],0x100013dc
10006368:	and    DWORD PTR [eax+0x4],0x0
1000636c:	and    DWORD PTR [ebp-0x4],0x0
10006370:	mov    ecx,DWORD PTR [ebp+0x8]
10006373:	mov    DWORD PTR [eax],0x10002d80
10006379:	mov    DWORD PTR [eax+0x8],ecx
1000637c:	or     DWORD PTR [ebp-0x4],0xffffffff
10006380:	call   0x10009ad7
10006385:	ret    0x4
10006388:	mov    eax,0x48522020
1000638d:	ret    
1000638e:	push   ebp
1000638f:	mov    ebp,esp
10006391:	cmp    DWORD PTR [ebp+0x8],0x48522020
10006398:	je     0x100063a7
1000639a:	cmp    DWORD PTR [ebp+0x8],0x524f4f54
100063a1:	je     0x100063a7
100063a3:	xor    eax,eax
100063a5:	jmp    0x100063aa
100063a7:	xor    eax,eax
100063a9:	inc    eax
100063aa:	pop    ebp
100063ab:	ret    0x4
100063ae:	push   0x4
100063b0:	mov    eax,0x1000a491
100063b5:	call   0x10009a38
100063ba:	mov    eax,ecx
100063bc:	mov    DWORD PTR [ebp-0x10],eax
100063bf:	mov    DWORD PTR [eax],0x100013dc
100063c5:	and    DWORD PTR [eax+0x4],0x0
100063c9:	and    DWORD PTR [ebp-0x4],0x0
100063cd:	mov    ecx,DWORD PTR [ebp+0x8]
100063d0:	mov    DWORD PTR [eax],0x10002dac
100063d6:	mov    DWORD PTR [eax+0x8],ecx
100063d9:	or     DWORD PTR [ebp-0x4],0xffffffff
100063dd:	call   0x10009ad7
100063e2:	ret    0x4
100063e5:	mov    eax,0x4f4f4d20
100063ea:	ret    
100063eb:	push   ebp
100063ec:	mov    ebp,esp
100063ee:	cmp    DWORD PTR [ebp+0x8],0x4f4f4d20
100063f5:	je     0x10006404
100063f7:	cmp    DWORD PTR [ebp+0x8],0x524f4f54
100063fe:	je     0x10006404
10006400:	xor    eax,eax
10006402:	jmp    0x10006407
10006404:	xor    eax,eax
10006406:	inc    eax
10006407:	pop    ebp
10006408:	ret    0x4
1000640b:	mov    eax,0x8007000e
10006410:	ret    
10006411:	push   ebp
10006412:	mov    ebp,esp
10006414:	mov    ecx,DWORD PTR [ebp+0x8]
10006417:	push   0x10002dd8
1000641c:	call   0x10007bda
10006421:	pop    ebp
10006422:	ret    0x4
10006425:	mov    eax,DWORD PTR [ecx+0x8]
10006428:	ret    
10006429:	push   0x4
1000642b:	mov    eax,0x1000a491
10006430:	call   0x10009a38
10006435:	mov    DWORD PTR [ebp-0x10],ecx
10006438:	or     DWORD PTR [ebp-0x4],0xffffffff
1000643c:	call   0x1000631e
10006441:	call   0x10009ad7
10006446:	ret    
10006447:	push   0xc
10006449:	mov    eax,0x1000a46e
1000644e:	call   0x10009a38
10006453:	cmp    DWORD PTR ds:0x1000ccb4,0x0
1000645a:	jne    0x10006488
1000645c:	push   0x1
1000645e:	lea    ecx,[ebp-0x18]
10006461:	call   0x100063ae
10006466:	and    DWORD PTR [ebp-0x4],0x0
1000646a:	mov    eax,0x1000cca4
1000646f:	lea    esi,[ebp-0x18]
10006472:	mov    edi,eax
10006474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10006475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10006476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10006477:	mov    ds:0x1000ccb4,eax
1000647c:	or     DWORD PTR [ebp-0x4],0xffffffff
10006480:	lea    ecx,[ebp-0x18]
10006483:	call   0x10006429
10006488:	mov    eax,ds:0x1000ccb4
1000648d:	call   0x10009ad7
10006492:	ret    
10006493:	jmp    0x10006447
10006498:	push   0x4
1000649a:	mov    eax,0x1000a491
1000649f:	call   0x10009a38
100064a4:	mov    eax,ecx
100064a6:	mov    DWORD PTR [ebp-0x10],eax
100064a9:	mov    DWORD PTR [eax],0x100013dc
100064af:	and    DWORD PTR [eax+0x4],0x0
100064b3:	and    DWORD PTR [ebp-0x4],0x0
100064b7:	or     DWORD PTR [eax+0x8],0xffffffff
100064bb:	mov    DWORD PTR [eax],0x10002de8
100064c1:	or     DWORD PTR [ebp-0x4],0xffffffff
100064c5:	call   0x10009ad7
100064ca:	ret    
100064cb:	mov    eax,0x44454c20
100064d0:	ret    
100064d1:	push   ebp
100064d2:	mov    ebp,esp
100064d4:	cmp    DWORD PTR [ebp+0x8],0x44454c20
100064db:	je     0x100064ea
100064dd:	cmp    DWORD PTR [ebp+0x8],0x524f4f54
100064e4:	je     0x100064ea
100064e6:	xor    eax,eax
100064e8:	jmp    0x100064ed
100064ea:	xor    eax,eax
100064ec:	inc    eax
100064ed:	pop    ebp
100064ee:	ret    0x4
100064f1:	push   esi
100064f2:	mov    esi,ecx
100064f4:	call   0x10004da7
100064f9:	test   eax,eax
100064fb:	jne    0x10006512
100064fd:	cmp    DWORD PTR [esi+0x8],eax
10006500:	je     0x1000650e
10006502:	mov    ecx,DWORD PTR [esi+0x8]
10006505:	mov    eax,DWORD PTR [ecx]
10006507:	call   DWORD PTR [eax+0x4]
1000650a:	test   eax,eax
1000650c:	jne    0x10006512
1000650e:	xor    eax,eax
10006510:	pop    esi
10006511:	ret    
10006512:	xor    eax,eax
10006514:	inc    eax
10006515:	pop    esi
10006516:	ret    
10006517:	push   0x4
10006519:	mov    eax,0x1000a491
1000651e:	call   0x10009a38
10006523:	mov    esi,ecx
10006525:	mov    DWORD PTR [ebp-0x10],esi
10006528:	mov    DWORD PTR [esi],0x10002de8
1000652e:	and    DWORD PTR [ebp-0x4],0x0
10006532:	call   0x10004dd8
10006537:	test   al,al
10006539:	je     0x10006543
1000653b:	push   DWORD PTR [esi+0x8]
1000653e:	call   0x10004deb
10006543:	and    DWORD PTR [esi+0x8],0x0
10006547:	or     DWORD PTR [ebp-0x4],0xffffffff
1000654b:	mov    ecx,esi
1000654d:	call   0x1000631e
10006552:	call   0x10009ad7
10006557:	ret    
10006558:	push   ebp
10006559:	mov    ebp,esp
1000655b:	push   ecx
1000655c:	mov    DWORD PTR ds:0x1000ccb0,0x8007000e
10006566:	call   0x10006447
1000656b:	mov    DWORD PTR [ebp-0x4],eax
1000656e:	push   0x1000ac18
10006573:	lea    eax,[ebp-0x4]
10006576:	push   eax
10006577:	call   0x10009b68
1000657c:	int3   
1000657d:	push   0x4
1000657f:	mov    eax,0x1000a4b4
10006584:	call   0x10009a38
10006589:	mov    DWORD PTR [ebp-0x10],ecx
1000658c:	or     DWORD PTR [ebp-0x4],0xffffffff
10006590:	call   0x100062b4
10006595:	call   0x10009ad7
1000659a:	ret    
1000659b:	push   0x4
1000659d:	mov    eax,0x1000a636
100065a2:	call   0x10009a38
100065a7:	mov    esi,ecx
100065a9:	push   0xc
100065ab:	call   0x10003e6c
100065b0:	pop    ecx
100065b1:	mov    ecx,eax
100065b3:	mov    DWORD PTR [ebp-0x10],ecx
100065b6:	xor    eax,eax
100065b8:	mov    DWORD PTR [ebp-0x4],eax
100065bb:	cmp    ecx,eax
100065bd:	je     0x100065c7
100065bf:	push   DWORD PTR [esi+0x8]
100065c2:	call   0x10006351
100065c7:	or     DWORD PTR [ebp-0x4],0xffffffff
100065cb:	call   0x10009ad7
100065d0:	ret    
100065d1:	push   0x4
100065d3:	mov    eax,0x1000a636
100065d8:	call   0x10009a38
100065dd:	push   0xc
100065df:	call   0x10003e6c
100065e4:	pop    ecx
100065e5:	mov    ecx,eax
100065e7:	mov    DWORD PTR [ebp-0x10],ecx
100065ea:	xor    eax,eax
100065ec:	mov    DWORD PTR [ebp-0x4],eax
100065ef:	cmp    ecx,eax
100065f1:	je     0x100065f8
100065f3:	call   0x10006498
100065f8:	or     DWORD PTR [ebp-0x4],0xffffffff
100065fc:	call   0x10009ad7
10006601:	ret    
10006602:	push   ebp
10006603:	mov    ebp,esp
10006605:	push   esi
10006606:	mov    esi,ecx
10006608:	call   0x10006429
1000660d:	test   BYTE PTR [ebp+0x8],0x1
10006611:	je     0x1000661a
10006613:	push   esi
10006614:	call   0x10003eeb
10006619:	pop    ecx
1000661a:	mov    eax,esi
1000661c:	pop    esi
1000661d:	pop    ebp
1000661e:	ret    0x4
10006621:	push   ebp
10006622:	mov    ebp,esp
10006624:	push   esi
10006625:	mov    esi,ecx
10006627:	call   0x10006517
1000662c:	test   BYTE PTR [ebp+0x8],0x1
10006630:	je     0x10006639
10006632:	push   esi
10006633:	call   0x10003eeb
10006638:	pop    ecx
10006639:	mov    eax,esi
1000663b:	pop    esi
1000663c:	pop    ebp
1000663d:	ret    0x4
10006640:	push   0x0
10006642:	mov    eax,0x1000a4d9
10006647:	call   0x10009a38
1000664c:	push   0x5
1000664e:	mov    esi,0x4000
10006653:	push   esi
10006654:	call   0x10004d57
10006659:	test   eax,eax
1000665b:	mov    ebx,DWORD PTR [ebp+0x8]
1000665e:	mov    edi,0x10002e40
10006663:	je     0x10006672
10006665:	push   ebx
10006666:	push   edi
10006667:	push   0x1
10006669:	push   esi
1000666a:	call   0x10008a62
1000666f:	add    esp,0x10
10006672:	push   0x5
10006674:	push   esi
10006675:	call   0x10004d7a
1000667a:	test   eax,eax
1000667c:	je     0x1000668d
1000667e:	push   ebx
1000667f:	push   edi
10006680:	push   0x1
10006682:	push   esi
10006683:	push   0x5
10006685:	call   0x1000866b
1000668a:	add    esp,0x14
1000668d:	cmp    ebx,0x8007000e
10006693:	jne    0x1000669a
10006695:	call   0x10006558
1000669a:	xor    edi,edi
1000669c:	cmp    ebx,edi
1000669e:	jne    0x100066a5
100066a0:	mov    ebx,0x80004005
100066a5:	push   0xc
100066a7:	call   0x10003e6c
100066ac:	pop    ecx
100066ad:	mov    DWORD PTR [ebp+0x8],eax
100066b0:	mov    DWORD PTR [ebp-0x4],edi
100066b3:	cmp    eax,edi
100066b5:	je     0x100066c1
100066b7:	push   ebx
100066b8:	mov    ecx,eax
100066ba:	call   0x10006351
100066bf:	mov    edi,eax
100066c1:	or     DWORD PTR [ebp-0x4],0xffffffff
100066c5:	push   0x5
100066c7:	push   esi
100066c8:	call   0x10004d57
100066cd:	test   eax,eax
100066cf:	mov    ebx,0x10002e14
100066d4:	je     0x100066f6
100066d6:	mov    eax,DWORD PTR [edi]
100066d8:	push   0x0
100066da:	push   0x699
100066df:	mov    ecx,edi
100066e1:	call   DWORD PTR [eax+0x8]
100066e4:	push   eax
100066e5:	push   0x48522020
100066ea:	push   ebx
100066eb:	push   0x3
100066ed:	push   esi
100066ee:	call   0x10008a62
100066f3:	add    esp,0x1c
100066f6:	push   0x5
100066f8:	push   esi
100066f9:	call   0x10004d7a
100066fe:	test   eax,eax
10006700:	je     0x10006724
10006702:	mov    eax,DWORD PTR [edi]
10006704:	push   0x0
10006706:	push   0x699
1000670b:	mov    ecx,edi
1000670d:	call   DWORD PTR [eax+0x8]
10006710:	push   eax
10006711:	push   0x48522020
10006716:	push   ebx
10006717:	push   0x3
10006719:	push   esi
1000671a:	push   0x5
1000671c:	call   0x1000866b
10006721:	add    esp,0x20
10006724:	push   0x1000ac98
10006729:	lea    eax,[ebp+0x8]
1000672c:	push   eax
1000672d:	mov    DWORD PTR [ebp+0x8],edi
10006730:	call   0x10009b68
10006735:	int3   
10006736:	push   ebp
10006737:	mov    ebp,esp
10006739:	mov    eax,DWORD PTR [ebp+0x8]
1000673c:	cmp    eax,0x8
1000673f:	jne    0x10006746
10006741:	call   0x10006558
10006746:	test   eax,eax
10006748:	jle    0x10006754
1000674a:	and    eax,0xffff
1000674f:	or     eax,0x80070000
10006754:	push   eax
10006755:	call   0x10006640
1000675a:	int3   
1000675b:	call   DWORD PTR ds:0x10001060
10006761:	push   eax
10006762:	call   0x10006736
10006767:	int3   
10006768:	push   ebp
10006769:	mov    ebp,esp
1000676b:	push   esi
1000676c:	push   edi
1000676d:	mov    esi,ecx
1000676f:	mov    edi,DWORD PTR [ebp+0x8]
10006772:	test   BYTE PTR [edi+0x8],0x10
10006776:	je     0x100067ab
10006778:	mov    eax,DWORD PTR [esi+0x8]
1000677b:	test   al,0x10
1000677d:	jne    0x10006786
1000677f:	mov    ecx,DWORD PTR [esi+0x4]
10006782:	cmp    ecx,DWORD PTR [edi]
10006784:	jae    0x100067ab
10006786:	test   al,0x8
10006788:	je     0x10006793
1000678a:	push   DWORD PTR [esi+0xc]
1000678d:	call   0x10003eeb
10006792:	pop    ecx
10006793:	mov    eax,DWORD PTR [edi]
10006795:	mov    DWORD PTR [esi],eax
10006797:	mov    eax,DWORD PTR [edi+0x4]
1000679a:	mov    DWORD PTR [esi+0x4],eax
1000679d:	mov    eax,DWORD PTR [edi+0xc]
100067a0:	mov    DWORD PTR [esi+0xc],eax
100067a3:	mov    eax,DWORD PTR [edi+0x8]
100067a6:	mov    DWORD PTR [esi+0x8],eax
100067a9:	jmp    0x100067e2
100067ab:	push   ebx
100067ac:	mov    ebx,DWORD PTR [edi]
100067ae:	cmp    ebx,DWORD PTR [esi+0x4]
100067b1:	jbe    0x100067bd
100067b3:	push   0x0
100067b5:	push   ebx
100067b6:	mov    ecx,esi
100067b8:	call   0x10008ab2
100067bd:	mov    DWORD PTR [esi],ebx
100067bf:	test   BYTE PTR [esi+0x8],0x10
100067c3:	pop    ebx
100067c4:	je     0x100067d2
100067c6:	push   0x1
100067c8:	push   DWORD PTR [esi+0x4]
100067cb:	mov    ecx,esi
100067cd:	call   0x10008ab2
100067d2:	push   DWORD PTR [edi]
100067d4:	push   DWORD PTR [edi+0xc]
100067d7:	push   DWORD PTR [esi+0xc]
100067da:	call   0x10009b5c
100067df:	add    esp,0xc
100067e2:	pop    edi
100067e3:	pop    esi
100067e4:	pop    ebp
100067e5:	ret    0x4
100067e8:	push   0x10
100067ea:	mov    eax,0x1000a4fc
100067ef:	call   0x10009a38
100067f4:	mov    eax,DWORD PTR [ebp+0xc]
100067f7:	mov    DWORD PTR [ebp-0x1c],eax
100067fa:	mov    DWORD PTR [ebp-0x18],eax
100067fd:	mov    eax,DWORD PTR [ebp+0x8]
10006800:	mov    DWORD PTR [ebp-0x14],0x10
10006807:	mov    DWORD PTR [ebp-0x10],eax
1000680a:	and    DWORD PTR [ebp-0x4],0x0
1000680e:	lea    eax,[ebp-0x1c]
10006811:	push   eax
10006812:	call   0x10006768
10006817:	or     DWORD PTR [ebp-0x4],0xffffffff
1000681b:	call   0x10009ad7
10006820:	ret    0x8
10006823:	push   0x4
10006825:	mov    eax,0x1000a51f
1000682a:	call   0x10009a38
1000682f:	mov    esi,ecx
10006831:	mov    DWORD PTR [ebp-0x10],esi
10006834:	xor    edx,edx
10006836:	mov    DWORD PTR [esi],edx
10006838:	mov    DWORD PTR [esi+0x8],edx
1000683b:	mov    eax,DWORD PTR [ebp+0x8]
1000683e:	mov    ecx,DWORD PTR [ebp+0xc]
10006841:	mov    DWORD PTR [esi+0xc],eax
10006844:	mov    DWORD PTR [esi+0x4],ecx
10006847:	mov    DWORD PTR [ebp-0x4],edx
1000684a:	push   0x2
1000684c:	pop    eax
1000684d:	cmp    ecx,eax
1000684f:	jae    0x10006860
10006851:	push   eax
10006852:	push   0x1000ccd8
10006857:	mov    ecx,esi
10006859:	call   0x100067e8
1000685e:	jmp    0x10006868
10006860:	mov    DWORD PTR [esi],eax
10006862:	mov    eax,DWORD PTR [esi+0xc]
10006865:	mov    WORD PTR [eax],dx
10006868:	or     DWORD PTR [ebp-0x4],0xffffffff
1000686c:	mov    eax,esi
1000686e:	call   0x10009ad7
10006873:	ret    0x8
10006876:	push   ebp
10006877:	mov    ebp,esp
10006879:	push   esi
1000687a:	push   edi
1000687b:	mov    edi,DWORD PTR [ebp+0x8]
1000687e:	push   edi
1000687f:	mov    esi,ecx
10006881:	call   0x10006768
10006886:	mov    eax,DWORD PTR [edi+0x8]
10006889:	and    eax,0x7
1000688c:	mov    ecx,DWORD PTR [esi+0x8]
1000688f:	and    ecx,0xfffffff8
10006892:	or     ecx,eax
10006894:	and    ecx,0xfffffeff
1000689a:	pop    edi
1000689b:	mov    DWORD PTR [esi+0x8],ecx
1000689e:	pop    esi
1000689f:	pop    ebp
100068a0:	ret    0x4
100068a3:	push   ebp
100068a4:	mov    ebp,esp
100068a6:	sub    esp,0xc
100068a9:	push   esi
100068aa:	mov    esi,ecx
100068ac:	call   0x10004d36
100068b1:	test   BYTE PTR [esi+0x8],0x10
100068b5:	je     0x100068c3
100068b7:	push   0x1
100068b9:	push   DWORD PTR [esi+0x4]
100068bc:	mov    ecx,esi
100068be:	call   0x10008ab2
100068c3:	mov    ecx,esi
100068c5:	call   0x100062dc
100068ca:	push   eax
100068cb:	push   esi
100068cc:	lea    ecx,[ebp-0xc]
100068cf:	call   0x100062f3
100068d4:	push   DWORD PTR [ebp+0x8]
100068d7:	lea    eax,[ebp-0xc]
100068da:	push   0x0
100068dc:	push   eax
100068dd:	mov    ecx,esi
100068df:	call   0x1000814c
100068e4:	pop    esi
100068e5:	leave  
100068e6:	ret    0x4
100068e9:	push   esi
100068ea:	mov    esi,ecx
100068ec:	cmp    DWORD PTR [esi+0x4],0x0
100068f0:	je     0x10006902
100068f2:	mov    ecx,DWORD PTR [esi]
100068f4:	test   ecx,ecx
100068f6:	je     0x100068fe
100068f8:	mov    eax,DWORD PTR [ecx]
100068fa:	push   0x1
100068fc:	call   DWORD PTR [eax]
100068fe:	and    DWORD PTR [esi+0x4],0x0
10006902:	pop    esi
10006903:	ret    
10006904:	push   ebp
10006905:	mov    ebp,esp
10006907:	push   esi
10006908:	mov    esi,ecx
1000690a:	push   DWORD PTR [ebp+0x8]
1000690d:	call   0x10006876
10006912:	mov    eax,esi
10006914:	pop    esi
10006915:	pop    ebp
10006916:	ret    0x4
10006919:	push   0x4
1000691b:	mov    eax,0x1000a51f
10006920:	call   0x10009a38
10006925:	mov    esi,ecx
10006927:	mov    DWORD PTR [ebp-0x10],esi
1000692a:	push   0x2
1000692c:	pop    eax
1000692d:	mov    DWORD PTR [esi],eax
1000692f:	mov    DWORD PTR [esi+0x4],eax
10006932:	mov    DWORD PTR [esi+0x8],0x10
10006939:	mov    DWORD PTR [esi+0xc],0x1000ccd8
10006940:	and    DWORD PTR [ebp-0x4],0x0
10006944:	push   DWORD PTR [ebp+0x8]
10006947:	call   0x10006876
1000694c:	or     DWORD PTR [ebp-0x4],0xffffffff
10006950:	mov    eax,esi
10006952:	call   0x10009ad7
10006957:	ret    0x4
1000695a:	push   0x214
1000695f:	mov    eax,0x1000a797
10006964:	call   0x10009aa1
10006969:	mov    esi,DWORD PTR [ebp+0x8]
1000696c:	mov    edi,ecx
1000696e:	push   0x200
10006973:	lea    eax,[ebp-0x210]
10006979:	push   eax
1000697a:	lea    ecx,[ebp-0x220]
10006980:	call   0x10006823
10006985:	and    DWORD PTR [ebp-0x4],0x0
10006989:	push   esi
1000698a:	lea    ecx,[ebp-0x220]
10006990:	call   0x10007b80
10006995:	mov    DWORD PTR [ebp-0x4],0x1
1000699c:	lea    eax,[ebp-0x220]
100069a2:	push   eax
100069a3:	mov    ecx,edi
100069a5:	call   0x100068a3
100069aa:	or     DWORD PTR [ebp-0x4],0xffffffff
100069ae:	lea    ecx,[ebp-0x220]
100069b4:	call   0x1000657d
100069b9:	call   0x10009aeb
100069be:	ret    0x4
100069c1:	push   0x4
100069c3:	mov    eax,0x1000a54d
100069c8:	call   0x10009a38
100069cd:	mov    esi,ecx
100069cf:	mov    DWORD PTR [ebp-0x10],esi
100069d2:	push   DWORD PTR [ebp+0x8]
100069d5:	call   0x10006351
100069da:	and    DWORD PTR [ebp-0x4],0x0
100069de:	push   DWORD PTR [ebp+0xc]
100069e1:	lea    ecx,[esi+0xc]
100069e4:	mov    DWORD PTR [esi],0x10002e54
100069ea:	call   0x10006919
100069ef:	or     DWORD PTR [ebp-0x4],0xffffffff
100069f3:	mov    eax,esi
100069f5:	call   0x10009ad7
100069fa:	ret    0x8
100069fd:	push   0x4
100069ff:	mov    eax,0x1000a54d
10006a04:	call   0x10009a38
10006a09:	mov    esi,ecx
10006a0b:	mov    DWORD PTR [ebp-0x10],esi
10006a0e:	and    DWORD PTR [ebp-0x4],0x0
10006a12:	lea    ecx,[esi+0xc]
10006a15:	call   0x100062b4
10006a1a:	or     DWORD PTR [ebp-0x4],0xffffffff
10006a1e:	mov    ecx,esi
10006a20:	call   0x10006429
10006a25:	call   0x10009ad7
10006a2a:	ret    
10006a2b:	push   ebp
10006a2c:	mov    ebp,esp
10006a2e:	push   esi
10006a2f:	mov    esi,ecx
10006a31:	call   0x100069fd
10006a36:	test   BYTE PTR [ebp+0x8],0x1
10006a3a:	je     0x10006a43
10006a3c:	push   esi
10006a3d:	call   0x10003eeb
10006a42:	pop    ecx
10006a43:	mov    eax,esi
10006a45:	pop    esi
10006a46:	pop    ebp
10006a47:	ret    0x4
10006a4a:	push   0x218
10006a4f:	mov    eax,0x1000a58b
10006a54:	call   0x10009aa1
10006a59:	push   0x200
10006a5e:	lea    eax,[ebp-0x210]
10006a64:	mov    esi,ecx
10006a66:	push   eax
10006a67:	lea    ecx,[ebp-0x220]
10006a6d:	call   0x10006823
10006a72:	mov    DWORD PTR [ebp-0x4],0x1
10006a79:	mov    eax,DWORD PTR [esi]
10006a7b:	lea    ecx,[ebp-0x220]
10006a81:	push   ecx
10006a82:	mov    ecx,esi
10006a84:	call   DWORD PTR [eax+0xc]
10006a87:	push   0x1c
10006a89:	call   0x10003e6c
10006a8e:	pop    ecx
10006a8f:	mov    DWORD PTR [ebp-0x224],eax
10006a95:	mov    BYTE PTR [ebp-0x4],0x2
10006a99:	test   eax,eax
10006a9b:	je     0x10006abb
10006a9d:	lea    eax,[ebp-0x220]
10006aa3:	push   eax
10006aa4:	mov    eax,DWORD PTR [esi]
10006aa6:	mov    ecx,esi
10006aa8:	call   DWORD PTR [eax+0x8]
10006aab:	mov    ecx,DWORD PTR [ebp-0x224]
10006ab1:	push   eax
10006ab2:	call   0x100069c1
10006ab7:	mov    esi,eax
10006ab9:	jmp    0x10006abd
10006abb:	xor    esi,esi
10006abd:	or     DWORD PTR [ebp-0x4],0xffffffff
10006ac1:	lea    ecx,[ebp-0x220]
10006ac7:	call   0x1000657d
10006acc:	mov    eax,esi
10006ace:	call   0x10009aeb
10006ad3:	ret    
10006ad4:	push   0x4
10006ad6:	mov    eax,0x1000a5bb
10006adb:	call   0x10009a38
10006ae0:	mov    esi,ecx
10006ae2:	mov    DWORD PTR [ebp-0x10],esi
10006ae5:	or     DWORD PTR [ebp-0x4],0xffffffff
10006ae9:	cmp    DWORD PTR [esi+0x4],0x0
10006aed:	je     0x10006aff
10006aef:	mov    ecx,DWORD PTR [esi]
10006af1:	test   ecx,ecx
10006af3:	je     0x10006afb
10006af5:	mov    eax,DWORD PTR [ecx]
10006af7:	push   0x1
10006af9:	call   DWORD PTR [eax]
10006afb:	and    DWORD PTR [esi+0x4],0x0
10006aff:	call   0x10009ad7
10006b04:	ret    
10006b05:	push   0x20
10006b07:	mov    eax,0x1000a5ee
10006b0c:	call   0x10009a38
10006b11:	push   0x10002ea8
10006b16:	lea    ecx,[ebp-0x2c]
10006b19:	call   0x10006273
10006b1e:	and    DWORD PTR [ebp-0x4],0x0
10006b22:	mov    ebx,DWORD PTR [ebp+0xc]
10006b25:	lea    eax,[ebp-0x2c]
10006b28:	push   eax
10006b29:	mov    ecx,ebx
10006b2b:	call   0x10006876
10006b30:	or     DWORD PTR [ebp-0x4],0xffffffff
10006b34:	lea    ecx,[ebp-0x2c]
10006b37:	call   0x100062b4
10006b3c:	lea    ecx,[ebp-0x1c]
10006b3f:	call   0x10006242
10006b44:	xor    ecx,ecx
10006b46:	inc    ecx
10006b47:	mov    DWORD PTR [ebp-0x4],ecx
10006b4a:	mov    esi,DWORD PTR [ebp+0x8]
10006b4d:	test   esi,esi
10006b4f:	jge    0x10006b7e
10006b51:	mov    eax,esi
10006b53:	and    eax,0x1fff0000
10006b58:	cmp    eax,0x130000
10006b5d:	jne    0x10006b7e
10006b5f:	mov    eax,esi
10006b61:	and    eax,0xffff
10006b66:	cmp    eax,0x3000
10006b6b:	jge    0x10006b7e
10006b6d:	push   ecx
10006b6e:	add    eax,0x6000
10006b73:	push   eax
10006b74:	lea    ecx,[ebp-0x1c]
10006b77:	call   0x10008d9f
10006b7c:	jmp    0x10006ba2
10006b7e:	mov    eax,ds:0x1000ccd4
10006b83:	push   eax
10006b84:	push   eax
10006b85:	push   eax
10006b86:	push   eax
10006b87:	push   eax
10006b88:	push   eax
10006b89:	push   eax
10006b8a:	push   eax
10006b8b:	push   eax
10006b8c:	push   eax
10006b8d:	push   0x400
10006b92:	push   esi
10006b93:	push   0x0
10006b95:	push   0x10ff
10006b9a:	lea    ecx,[ebp-0x1c]
10006b9d:	call   0x10008210
10006ba2:	push   esi
10006ba3:	mov    DWORD PTR [ebp+0xc],eax
10006ba6:	call   0x10004e15
10006bab:	cmp    DWORD PTR [ebp+0xc],0x0
10006baf:	mov    edi,eax
10006bb1:	je     0x10006bd0
10006bb3:	lea    eax,[ebp-0x1c]
10006bb6:	push   eax
10006bb7:	mov    ecx,ebx
10006bb9:	call   0x100068a3
10006bbe:	cmp    DWORD PTR [ebp+0x10],0x0
10006bc2:	jne    0x10006c36
10006bc4:	push   0x10002ea0
10006bc9:	mov    ecx,ebx
10006bcb:	call   0x1000695a
10006bd0:	lea    ecx,[ebp-0x2c]
10006bd3:	call   0x10006242
10006bd8:	mov    BYTE PTR [ebp-0x4],0x2
10006bdc:	push   0x1
10006bde:	push   0x1709
10006be3:	lea    ecx,[ebp-0x2c]
10006be6:	call   0x10008d9f
10006beb:	lea    eax,[ebp-0x2c]
10006bee:	push   eax
10006bef:	mov    ecx,ebx
10006bf1:	call   0x100068a3
10006bf6:	push   esi
10006bf7:	push   0x10002e90
10006bfc:	push   ebx
10006bfd:	call   0x100083f1
10006c02:	add    esp,0xc
10006c05:	test   edi,edi
10006c07:	je     0x10006c18
10006c09:	push   edi
10006c0a:	push   0x10002e84
10006c0f:	push   ebx
10006c10:	call   0x100083f1
10006c15:	add    esp,0xc
10006c18:	cmp    DWORD PTR [ebp+0xc],0x0
10006c1c:	je     0x10006c2a
10006c1e:	push   0x10002e80
10006c23:	mov    ecx,ebx
10006c25:	call   0x1000695a
10006c2a:	mov    BYTE PTR [ebp-0x4],0x1
10006c2e:	lea    ecx,[ebp-0x2c]
10006c31:	call   0x100062b4
10006c36:	or     DWORD PTR [ebp-0x4],0xffffffff
10006c3a:	lea    ecx,[ebp-0x1c]
10006c3d:	call   0x100062b4
10006c42:	call   0x10009ad7
10006c47:	ret    0xc
10006c4a:	push   0x10
10006c4c:	mov    eax,0x1000a611
10006c51:	call   0x10009a38
10006c56:	push   0x10002ea8
10006c5b:	lea    ecx,[ebp-0x1c]
10006c5e:	call   0x10006273
10006c63:	and    DWORD PTR [ebp-0x4],0x0
10006c67:	mov    ecx,DWORD PTR [ebp+0xc]
10006c6a:	lea    eax,[ebp-0x1c]
10006c6d:	push   eax
10006c6e:	call   0x10006876
10006c73:	or     DWORD PTR [ebp-0x4],0xffffffff
10006c77:	lea    ecx,[ebp-0x1c]
10006c7a:	call   0x100062b4
10006c7f:	push   0x0
10006c81:	push   DWORD PTR [ebp+0xc]
10006c84:	push   DWORD PTR [ebp+0x8]
10006c87:	call   0x10006b05
10006c8c:	call   0x10009ad7
10006c91:	ret    0x8
10006c94:	push   0x4
10006c96:	mov    eax,0x1000a636
10006c9b:	call   0x10009a38
10006ca0:	mov    esi,ecx
10006ca2:	push   0x1c
10006ca4:	call   0x10003e6c
10006ca9:	pop    ecx
10006caa:	mov    ecx,eax
10006cac:	mov    DWORD PTR [ebp-0x10],ecx
10006caf:	xor    eax,eax
10006cb1:	mov    DWORD PTR [ebp-0x4],eax
10006cb4:	cmp    ecx,eax
10006cb6:	je     0x10006cc4
10006cb8:	lea    eax,[esi+0xc]
10006cbb:	push   eax
10006cbc:	push   DWORD PTR [esi+0x8]
10006cbf:	call   0x100069c1
10006cc4:	or     DWORD PTR [ebp-0x4],0xffffffff
10006cc8:	call   0x10009ad7
10006ccd:	ret    
10006cce:	push   ebp
10006ccf:	mov    ebp,esp
10006cd1:	push   DWORD PTR [ebp+0x8]
10006cd4:	mov    eax,DWORD PTR [ecx]
10006cd6:	call   DWORD PTR [eax+0x8]
10006cd9:	push   eax
10006cda:	call   0x10006c4a
10006cdf:	pop    ebp
10006ce0:	ret    0x4
10006ce3:	push   ebp
10006ce4:	mov    ebp,esp
10006ce6:	push   esi
10006ce7:	mov    edx,ecx
10006ce9:	lea    eax,[edx+0xc]
10006cec:	mov    ecx,DWORD PTR [eax+0x8]
10006cef:	mov    esi,DWORD PTR [eax]
10006cf1:	not    ecx
10006cf3:	and    ecx,0x1
10006cf6:	shr    esi,cl
10006cf8:	dec    esi
10006cf9:	pop    esi
10006cfa:	jne    0x10006d04
10006cfc:	mov    ecx,edx
10006cfe:	pop    ebp
10006cff:	jmp    0x10006cce
10006d04:	mov    ecx,DWORD PTR [ebp+0x8]
10006d07:	push   eax
10006d08:	call   0x10006904
10006d0d:	pop    ebp
10006d0e:	ret    0x4
10006d11:	push   0x4
10006d13:	mov    eax,0x1000a659
10006d18:	call   0x10009a38
10006d1d:	mov    DWORD PTR [ebp-0x10],ecx
10006d20:	or     DWORD PTR [ebp-0x4],0xffffffff
10006d24:	call   0x10006ad4
10006d29:	call   0x10009ad7
10006d2e:	ret    
10006d2f:	push   0x4
10006d31:	mov    eax,0x1000a67c
10006d36:	call   0x10009a38
10006d3b:	mov    DWORD PTR [ebp-0x10],ecx
10006d3e:	or     DWORD PTR [ebp-0x4],0xffffffff
10006d42:	call   0x10006d11
10006d47:	call   0x10009ad7
10006d4c:	ret    
10006d4d:	push   0x8
10006d4f:	mov    eax,0x1000a6b7
10006d54:	call   0x10009a38
10006d59:	mov    esi,ecx
10006d5b:	mov    eax,DWORD PTR [esi]
10006d5d:	call   DWORD PTR [eax+0x24]
10006d60:	and    DWORD PTR [ebp-0x10],0x0
10006d64:	mov    DWORD PTR [ebp-0x14],eax
10006d67:	test   eax,eax
10006d69:	je     0x10006d72
10006d6b:	mov    DWORD PTR [ebp-0x10],0x1
10006d72:	mov    DWORD PTR [ebp-0x4],0x3
10006d79:	cmp    DWORD PTR [esi+0x4],0x0
10006d7d:	je     0x10006d8d
10006d7f:	mov    ecx,DWORD PTR [esi+0x4]
10006d82:	mov    eax,DWORD PTR [ecx]
10006d84:	call   DWORD PTR [eax+0x1c]
10006d87:	mov    ecx,DWORD PTR [ebp-0x14]
10006d8a:	mov    DWORD PTR [ecx+0x4],eax
10006d8d:	and    DWORD PTR [ebp-0x10],0x0
10006d91:	mov    esi,DWORD PTR [ebp-0x14]
10006d94:	or     DWORD PTR [ebp-0x4],0xffffffff
10006d98:	lea    ecx,[ebp-0x14]
10006d9b:	call   0x10006d2f
10006da0:	mov    eax,esi
10006da2:	call   0x10009ad7
10006da7:	ret    
10006da8:	push   0x8
10006daa:	mov    eax,0x1000a6b7
10006daf:	call   0x10009a38
10006db4:	mov    esi,ecx
10006db6:	call   0x10006d4d
10006dbb:	and    DWORD PTR [ebp-0x10],0x0
10006dbf:	mov    DWORD PTR [ebp-0x14],eax
10006dc2:	test   eax,eax
10006dc4:	je     0x10006dcd
10006dc6:	mov    DWORD PTR [ebp-0x10],0x1
10006dcd:	mov    DWORD PTR [ebp-0x4],0x3
10006dd4:	mov    ecx,esi
10006dd6:	call   0x10004dd8
10006ddb:	test   al,al
10006ddd:	je     0x10006de9
10006ddf:	mov    ecx,DWORD PTR [esi+0x8]
10006de2:	mov    eax,DWORD PTR [ecx]
10006de4:	call   DWORD PTR [eax+0x1c]
10006de7:	jmp    0x10006dec
10006de9:	mov    eax,DWORD PTR [esi+0x8]
10006dec:	mov    ecx,DWORD PTR [ebp-0x14]
10006def:	mov    DWORD PTR [ecx+0x8],eax
10006df2:	and    DWORD PTR [ebp-0x10],0x0
10006df6:	mov    esi,DWORD PTR [ebp-0x14]
10006df9:	or     DWORD PTR [ebp-0x4],0xffffffff
10006dfd:	lea    ecx,[ebp-0x14]
10006e00:	call   0x10006d2f
10006e05:	mov    eax,esi
10006e07:	call   0x10009ad7
10006e0c:	ret    
10006e0d:	push   ebp
10006e0e:	mov    ebp,esp
10006e10:	cmp    DWORD PTR [ebp+0x8],0x440
10006e17:	jb     0x10006e1e
10006e19:	xor    eax,eax
10006e1b:	inc    eax
10006e1c:	jmp    0x10006e36
10006e1e:	call   0x1000433a
10006e23:	test   eax,eax
10006e25:	je     0x10006e2c
10006e27:	push   0x2
10006e29:	pop    eax
10006e2a:	jmp    0x10006e36
10006e2c:	cmp    DWORD PTR [ebp+0x8],0x40
10006e30:	sbb    eax,eax
10006e32:	and    eax,0x2
10006e35:	inc    eax
10006e36:	pop    ebp
10006e37:	ret    0x4
10006e3a:	push   ebp
10006e3b:	mov    ebp,esp
10006e3d:	push   ebx
10006e3e:	push   esi
10006e3f:	mov    ebx,DWORD PTR [ebp+0x8]
10006e42:	push   ebx
10006e43:	xor    esi,esi
10006e45:	call   0x10006e0d
10006e4a:	dec    eax
10006e4b:	dec    eax
10006e4c:	je     0x10006eb6
10006e4e:	dec    eax
10006e4f:	je     0x10006e8c
10006e51:	dec    eax
10006e52:	jne    0x10006f00
10006e58:	push   0xe
10006e5a:	push   esi
10006e5b:	call   0x100040c6
10006e60:	push   eax
10006e61:	call   0x10004090
10006e66:	mov    esi,eax
10006e68:	test   esi,esi
10006e6a:	je     0x10006f00
10006e70:	lea    eax,[ebx-0x40]
10006e73:	cmp    eax,0x20
10006e76:	mov    WORD PTR [esi],0xa164
10006e7b:	mov    DWORD PTR [esi+0x2],0xf94
10006e82:	jae    0x10006ef0
10006e84:	sub    bl,0x40
10006e87:	shl    bl,0x2
10006e8a:	jmp    0x10006edf
10006e8c:	push   0x7
10006e8e:	push   0x0
10006e90:	call   0x100040c6
10006e95:	push   eax
10006e96:	call   0x10004090
10006e9b:	mov    esi,eax
10006e9d:	test   esi,esi
10006e9f:	je     0x10006f00
10006ea1:	lea    eax,[ebx*4+0xe10]
10006ea8:	mov    WORD PTR [esi],0xa164
10006ead:	mov    DWORD PTR [esi+0x2],eax
10006eb0:	mov    BYTE PTR [esi+0x6],0xc3
10006eb4:	jmp    0x10006f00
10006eb6:	push   0xe
10006eb8:	push   0x0
10006eba:	call   0x100040c6
10006ebf:	push   eax
10006ec0:	call   0x10004090
10006ec5:	mov    esi,eax
10006ec7:	test   esi,esi
10006ec9:	je     0x10006f00
10006ecb:	cmp    ebx,0x20
10006ece:	mov    WORD PTR [esi],0xa164
10006ed3:	mov    DWORD PTR [esi+0x2],0x2c
10006eda:	jae    0x10006eee
10006edc:	shl    bl,0x2
10006edf:	mov    WORD PTR [esi+0x6],0x408b
10006ee5:	mov    BYTE PTR [esi+0x8],bl
10006ee8:	mov    BYTE PTR [esi+0x9],0xc3
10006eec:	jmp    0x10006f00
10006eee:	mov    eax,ebx
10006ef0:	shl    eax,0x2
10006ef3:	mov    BYTE PTR [esi+0xc],0xc3
10006ef7:	mov    DWORD PTR [esi+0x8],eax
10006efa:	mov    WORD PTR [esi+0x6],0x808b
10006f00:	mov    eax,esi
10006f02:	pop    esi
10006f03:	pop    ebx
10006f04:	pop    ebp
10006f05:	ret    0x8
10006f08:	call   DWORD PTR ds:0x10001060
10006f0e:	test   eax,eax
10006f10:	jne    0x10006f18
10006f12:	mov    eax,0x80004005
10006f17:	ret    
10006f18:	jle    0x10006f24
10006f1a:	and    eax,0xffff
10006f1f:	or     eax,0x80070000
10006f24:	ret    
10006f25:	push   ebp
10006f26:	mov    ebp,esp
10006f28:	sub    esp,0x234
10006f2e:	mov    eax,ds:0x1000c118
10006f33:	xor    eax,ebp
10006f35:	mov    DWORD PTR [ebp-0x4],eax
10006f38:	push   esi
10006f39:	lea    eax,[ebp-0x118]
10006f3f:	push   eax
10006f40:	mov    DWORD PTR [ebp-0x118],0x114
10006f4a:	call   0x10004896
10006f4f:	xor    esi,esi
10006f51:	inc    esi
10006f52:	cmp    DWORD PTR [ebp-0x108],esi
10006f58:	jne    0x10006f60
10006f5a:	mov    DWORD PTR ds:0x1000ccbc,esi
10006f60:	cmp    DWORD PTR [ebp-0x108],0x2
10006f67:	jne    0x10006fb1
10006f69:	push   0x6
10006f6b:	pop    eax
10006f6c:	cmp    DWORD PTR [ebp-0x114],eax
10006f72:	jae    0x10006fa0
10006f74:	cmp    DWORD PTR [ebp-0x114],0x5
10006f7b:	jb     0x10006fa7
10006f7d:	cmp    DWORD PTR [ebp-0x110],0x0
10006f84:	jne    0x10006f92
10006f86:	mov    DWORD PTR ds:0x1000ccbc,0x3
10006f90:	jmp    0x10006fb1
10006f92:	xor    eax,eax
10006f94:	cmp    DWORD PTR [ebp-0x110],esi
10006f9a:	setne  al
10006f9d:	add    eax,0x4
10006fa0:	mov    ds:0x1000ccbc,eax
10006fa5:	jmp    0x10006fb1
10006fa7:	mov    DWORD PTR ds:0x1000ccbc,0x2
10006fb1:	lea    eax,[ebp-0x234]
10006fb7:	push   eax
10006fb8:	mov    DWORD PTR [ebp-0x234],0x11c
10006fc2:	call   0x10004896
10006fc7:	test   eax,eax
10006fc9:	mov    ds:0x1000ccc0,eax
10006fce:	je     0x10006ffd
10006fd0:	cmp    BYTE PTR [ebp-0x11a],0x2
10006fd7:	je     0x10006feb
10006fd9:	cmp    BYTE PTR [ebp-0x11a],0x3
10006fe0:	je     0x10006feb
10006fe2:	and    DWORD PTR ds:0x1000c060,0x0
10006fe9:	jmp    0x10006ff1
10006feb:	mov    DWORD PTR ds:0x1000c060,esi
10006ff1:	movzx  eax,WORD PTR [ebp-0x120]
10006ff8:	mov    ds:0x1000ccc4,eax
10006ffd:	mov    ecx,DWORD PTR [ebp-0x4]
10007000:	xor    ecx,ebp
10007002:	pop    esi
10007003:	call   0x10009a23
10007008:	leave  
10007009:	ret    
1000700a:	push   esi
1000700b:	mov    esi,ecx
1000700d:	test   esi,esi
1000700f:	jne    0x10007015
10007011:	xor    eax,eax
10007013:	pop    esi
10007014:	ret    
10007015:	call   0x10007f3d
1000701a:	mov    eax,DWORD PTR [esi+0xc]
1000701d:	pop    esi
1000701e:	ret    
1000701f:	push   esi
10007020:	mov    esi,ecx
10007022:	cmp    DWORD PTR [esi+0x4],0x0
10007026:	je     0x10007033
10007028:	push   DWORD PTR [esi]
1000702a:	call   0x10004deb
1000702f:	and    DWORD PTR [esi+0x4],0x0
10007033:	pop    esi
10007034:	ret    
10007035:	push   0x4
10007037:	mov    eax,0x1000a6da
1000703c:	call   0x10009a38
10007041:	mov    esi,ecx
10007043:	mov    DWORD PTR [ebp-0x10],esi
10007046:	or     DWORD PTR [ebp-0x4],0xffffffff
1000704a:	cmp    DWORD PTR [esi+0x4],0x0
1000704e:	je     0x1000705b
10007050:	push   DWORD PTR [esi]
10007052:	call   0x10004deb
10007057:	and    DWORD PTR [esi+0x4],0x0
1000705b:	call   0x10009ad7
10007060:	ret    
10007061:	push   0x4
10007063:	mov    eax,0x1000a6fd
10007068:	call   0x10009a38
1000706d:	mov    DWORD PTR [ebp-0x10],ecx
10007070:	or     DWORD PTR [ebp-0x4],0xffffffff
10007074:	call   0x10007035
10007079:	call   0x10009ad7
1000707e:	ret    
1000707f:	push   0x4
10007081:	mov    eax,0x1000a720
10007086:	call   0x10009a38
1000708b:	mov    DWORD PTR [ebp-0x10],ecx
1000708e:	or     DWORD PTR [ebp-0x4],0xffffffff
10007092:	call   0x10007061
10007097:	call   0x10009ad7
1000709c:	ret    
1000709d:	push   ebp
1000709e:	mov    ebp,esp
100070a0:	push   ecx
100070a1:	push   ebx
100070a2:	xor    edx,edx
100070a4:	push   esi
100070a5:	push   edi
100070a6:	mov    edi,DWORD PTR [ebp+0x8]
100070a9:	xor    ebx,ebx
100070ab:	xor    eax,eax
100070ad:	cmp    DWORD PTR [ebp+0xc],edx
100070b0:	mov    DWORD PTR [ebp-0x4],edx
100070b3:	mov    DWORD PTR [ebp+0x8],edx
100070b6:	je     0x100071c5
100070bc:	mov    esi,DWORD PTR [ebp+0x10]
100070bf:	dec    DWORD PTR [ebp+0xc]
100070c2:	cmp    DWORD PTR [ebp+0x14],edx
100070c5:	je     0x100070d0
100070c7:	cmp    eax,DWORD PTR [ebp+0x14]
100070ca:	jge    0x100071c8
100070d0:	mov    cl,BYTE PTR [edi]
100070d2:	cmp    cl,0x7f
100070d5:	jbe    0x100070f3
100070d7:	cmp    esi,edx
100070d9:	je     0x100070e9
100070db:	cmp    DWORD PTR [ebp+0x14],0x0
100070df:	je     0x100070e9
100070e1:	movzx  cx,cl
100070e5:	mov    WORD PTR [esi+eax*2],cx
100070e9:	inc    eax
100070ea:	and    DWORD PTR [ebp-0x4],0x0
100070ee:	jmp    0x100071b9
100070f3:	cmp    DWORD PTR [ebp-0x4],0x0
100070f7:	jne    0x10007147
100070f9:	cmp    cl,0x2b
100070fc:	jne    0x10007133
100070fe:	cmp    DWORD PTR [ebp+0xc],0x0
10007102:	je     0x10007127
10007104:	lea    ecx,[edi+0x1]
10007107:	cmp    BYTE PTR [ecx],0x2d
1000710a:	jne    0x10007127
1000710c:	test   esi,esi
1000710e:	je     0x1000711c
10007110:	cmp    DWORD PTR [ebp+0x14],0x0
10007114:	je     0x1000711c
10007116:	mov    WORD PTR [esi+eax*2],0x2b
1000711c:	dec    DWORD PTR [ebp+0xc]
1000711f:	mov    edi,ecx
10007121:	inc    eax
10007122:	jmp    0x100071b9
10007127:	mov    DWORD PTR [ebp-0x4],0x1
1000712e:	jmp    0x100071b9
10007133:	test   esi,esi
10007135:	je     0x10007121
10007137:	cmp    DWORD PTR [ebp+0x14],0x0
1000713b:	je     0x10007121
1000713d:	movzx  cx,cl
10007141:	mov    WORD PTR [esi+eax*2],cx
10007145:	jmp    0x10007121
10007147:	movzx  edx,cl
1000714a:	mov    dl,BYTE PTR [edx+0x10003020]
10007150:	cmp    dl,0xff
10007153:	jne    0x10007177
10007155:	cmp    cl,0x2d
10007158:	je     0x1000716d
1000715a:	test   esi,esi
1000715c:	je     0x1000716c
1000715e:	cmp    DWORD PTR [ebp+0x14],0x0
10007162:	je     0x1000716c
10007164:	movzx  cx,cl
10007168:	mov    WORD PTR [esi+eax*2],cx
1000716c:	inc    eax
1000716d:	xor    ebx,ebx
1000716f:	mov    DWORD PTR [ebp-0x4],ebx
10007172:	mov    DWORD PTR [ebp+0x8],ebx
10007175:	jmp    0x100071b9
10007177:	push   0x1a
10007179:	pop    ecx
1000717a:	sub    ecx,DWORD PTR [ebp+0x8]
1000717d:	add    DWORD PTR [ebp+0x8],0x6
10007181:	movsx  edx,dl
10007184:	shl    edx,cl
10007186:	push   0x10
10007188:	pop    ecx
10007189:	or     ebx,edx
1000718b:	cmp    DWORD PTR [ebp+0x8],ecx
1000718e:	jl     0x100071b9
10007190:	test   esi,esi
10007192:	je     0x100071a8
10007194:	cmp    DWORD PTR [ebp+0x14],0x0
10007198:	je     0x100071a8
1000719a:	cmp    eax,DWORD PTR [ebp+0x14]
1000719d:	jge    0x100071b4
1000719f:	mov    edx,ebx
100071a1:	shr    edx,0x10
100071a4:	mov    WORD PTR [esi+eax*2],dx
100071a8:	sub    DWORD PTR [ebp+0x8],ecx
100071ab:	inc    eax
100071ac:	shl    ebx,0x10
100071af:	cmp    DWORD PTR [ebp+0x8],ecx
100071b2:	jge    0x10007190
100071b4:	cmp    DWORD PTR [ebp+0x8],ecx
100071b7:	jge    0x100071f1
100071b9:	xor    edx,edx
100071bb:	inc    edi
100071bc:	cmp    DWORD PTR [ebp+0xc],edx
100071bf:	jne    0x100070bf
100071c5:	dec    DWORD PTR [ebp+0xc]
100071c8:	xor    ecx,ecx
100071ca:	cmp    DWORD PTR [ebp+0x14],ecx
100071cd:	je     0x100071ea
100071cf:	cmp    DWORD PTR [ebp+0xc],ecx
100071d2:	jl     0x100071ea
100071d4:	jne    0x100071e0
100071d6:	cmp    DWORD PTR [ebp-0x4],ecx
100071d9:	je     0x100071e0
100071db:	cmp    BYTE PTR [edi],0x2d
100071de:	je     0x100071ea
100071e0:	push   0x7a
100071e2:	call   DWORD PTR ds:0x10001064
100071e8:	xor    eax,eax
100071ea:	pop    edi
100071eb:	pop    esi
100071ec:	pop    ebx
100071ed:	leave  
100071ee:	ret    0x10
100071f1:	inc    DWORD PTR [ebp+0xc]
100071f4:	jmp    0x100071c8
100071f6:	push   ebp
100071f7:	mov    ebp,esp
100071f9:	push   ecx
100071fa:	push   ecx
100071fb:	mov    eax,DWORD PTR [ebp+0x8]
100071fe:	push   ebx
100071ff:	push   esi
10007200:	push   edi
10007201:	mov    edi,DWORD PTR [ebp+0x18]
10007204:	xor    edx,edx
10007206:	xor    ebx,ebx
10007208:	xor    esi,esi
1000720a:	and    edi,0x8
1000720d:	cmp    DWORD PTR [ebp+0xc],edx
10007210:	mov    DWORD PTR [ebp-0x4],eax
10007213:	mov    DWORD PTR [ebp-0x8],edx
10007216:	je     0x100073a1
1000721c:	mov    DWORD PTR [ebp+0x8],0x1
10007223:	mov    eax,DWORD PTR [ebp-0x4]
10007226:	mov    al,BYTE PTR [eax]
10007228:	dec    DWORD PTR [ebp+0xc]
1000722b:	test   al,al
1000722d:	js     0x1000725a
1000722f:	mov    ecx,DWORD PTR [ebp+0x10]
10007232:	cmp    ecx,edx
10007234:	je     0x1000724c
10007236:	cmp    DWORD PTR [ebp+0x14],edx
10007239:	je     0x1000724c
1000723b:	cmp    esi,DWORD PTR [ebp+0x14]
1000723e:	jge    0x100073b0
10007244:	movzx  ax,al
10007248:	mov    WORD PTR [ecx+esi*2],ax
1000724c:	mov    DWORD PTR [ebp-0x8],edx
1000724f:	xor    ebx,ebx
10007251:	inc    esi
10007252:	inc    DWORD PTR [ebp+0x8]
10007255:	jmp    0x10007393
1000725a:	test   al,0x40
1000725c:	jne    0x1000730b
10007262:	cmp    ebx,edx
10007264:	je     0x100072fb
1000726a:	mov    ecx,DWORD PTR [ebp+0x18]
1000726d:	and    eax,0x3f
10007270:	shl    ecx,0x6
10007273:	dec    ebx
10007274:	or     eax,ecx
10007276:	cmp    ebx,edx
10007278:	mov    DWORD PTR [ebp+0x18],eax
1000727b:	jne    0x10007393
10007281:	cmp    DWORD PTR [ebp-0x8],edx
10007284:	mov    ecx,DWORD PTR [ebp+0x10]
10007287:	je     0x100072d7
10007289:	cmp    ecx,edx
1000728b:	je     0x100072c8
1000728d:	cmp    DWORD PTR [ebp+0x14],edx
10007290:	je     0x100072c8
10007292:	mov    edx,DWORD PTR [ebp+0x8]
10007295:	cmp    edx,DWORD PTR [ebp+0x14]
10007298:	jge    0x100073b0
1000729e:	cmp    edx,esi
100072a0:	jl     0x100073b0
100072a6:	lea    edx,[eax-0x10000]
100072ac:	shr    edx,0xa
100072af:	sub    edx,0x2800
100072b5:	and    eax,0xffff03ff
100072ba:	sub    eax,0x2400
100072bf:	mov    WORD PTR [ecx+esi*2],dx
100072c3:	mov    WORD PTR [ecx+esi*2+0x2],ax
100072c8:	add    DWORD PTR [ebp+0x8],0x2
100072cc:	inc    esi
100072cd:	inc    esi
100072ce:	and    DWORD PTR [ebp-0x8],0x0
100072d2:	jmp    0x10007393
100072d7:	cmp    ecx,edx
100072d9:	je     0x10007251
100072df:	cmp    DWORD PTR [ebp+0x14],0x0
100072e3:	je     0x10007251
100072e9:	cmp    esi,DWORD PTR [ebp+0x14]
100072ec:	jge    0x100073b0
100072f2:	mov    WORD PTR [ecx+esi*2],ax
100072f6:	jmp    0x10007251
100072fb:	cmp    edi,edx
100072fd:	jne    0x100073a9
10007303:	mov    DWORD PTR [ebp-0x8],edx
10007306:	jmp    0x10007393
1000730b:	cmp    ebx,edx
1000730d:	jle    0x10007324
1000730f:	cmp    edi,edx
10007311:	jne    0x100073a9
10007317:	xor    ebx,ebx
10007319:	inc    DWORD PTR [ebp+0xc]
1000731c:	dec    DWORD PTR [ebp-0x4]
1000731f:	mov    DWORD PTR [ebp-0x8],edx
10007322:	jmp    0x10007393
10007324:	mov    dl,al
10007326:	jmp    0x1000732b
10007328:	add    dl,dl
1000732a:	inc    ebx
1000732b:	test   dl,dl
1000732d:	js     0x10007328
1000732f:	mov    cl,bl
10007331:	shr    dl,cl
10007333:	mov    ecx,ebx
10007335:	dec    ecx
10007336:	je     0x1000738d
10007338:	dec    ecx
10007339:	je     0x10007389
1000733b:	dec    ecx
1000733c:	je     0x10007376
1000733e:	dec    ecx
1000733f:	jne    0x1000738d
10007341:	cmp    DWORD PTR [ebp+0xc],0x3
10007345:	jl     0x1000736d
10007347:	xor    ecx,ecx
10007349:	mov    ch,al
1000734b:	mov    eax,DWORD PTR [ebp-0x4]
1000734e:	mov    cl,BYTE PTR [eax+0x1]
10007351:	movzx  eax,cx
10007354:	test   ax,0x730
10007358:	je     0x1000738d
1000735a:	test   ax,0x400
1000735e:	je     0x10007366
10007360:	test   ax,0x330
10007364:	jne    0x1000738d
10007366:	mov    DWORD PTR [ebp-0x8],0x1
1000736d:	movzx  eax,dl
10007370:	mov    DWORD PTR [ebp+0x18],eax
10007373:	dec    ebx
10007374:	jmp    0x10007393
10007376:	cmp    DWORD PTR [ebp+0xc],0x2
1000737a:	jl     0x1000736d
1000737c:	test   al,0xf
1000737e:	jne    0x1000736d
10007380:	mov    eax,DWORD PTR [ebp-0x4]
10007383:	test   BYTE PTR [eax+0x1],0x20
10007387:	jmp    0x1000738b
10007389:	test   al,0x1e
1000738b:	jne    0x1000736d
1000738d:	xor    ebx,ebx
1000738f:	test   edi,edi
10007391:	jne    0x100073a9
10007393:	inc    DWORD PTR [ebp-0x4]
10007396:	xor    edx,edx
10007398:	cmp    DWORD PTR [ebp+0xc],edx
1000739b:	jne    0x10007223
100073a1:	cmp    edi,edx
100073a3:	je     0x100073bc
100073a5:	cmp    ebx,edx
100073a7:	je     0x100073c7
100073a9:	push   0x459
100073ae:	jmp    0x100073b2
100073b0:	push   0x7a
100073b2:	call   DWORD PTR ds:0x10001064
100073b8:	xor    eax,eax
100073ba:	jmp    0x100073c9
100073bc:	cmp    esi,edx
100073be:	jne    0x100073c7
100073c0:	push   edx
100073c1:	call   DWORD PTR ds:0x10001064
100073c7:	mov    eax,esi
100073c9:	pop    edi
100073ca:	pop    esi
100073cb:	pop    ebx
100073cc:	leave  
100073cd:	ret    0x14
100073d0:	push   ebp
100073d1:	mov    ebp,esp
100073d3:	push   ecx
100073d4:	mov    edx,DWORD PTR [ebp+0x10]
100073d7:	push   ebx
100073d8:	mov    ebx,DWORD PTR [ebp+0x8]
100073db:	xor    ecx,ecx
100073dd:	push   esi
100073de:	xor    esi,esi
100073e0:	push   edi
100073e1:	mov    DWORD PTR [ebp-0x4],ecx
100073e4:	mov    DWORD PTR [ebp+0x8],ecx
100073e7:	xor    eax,eax
100073e9:	jmp    0x1000750c
100073ee:	dec    DWORD PTR [ebp+0xc]
100073f1:	cmp    DWORD PTR [ebp+0x14],ecx
100073f4:	je     0x100073ff
100073f6:	cmp    eax,DWORD PTR [ebp+0x14]
100073f9:	jge    0x10007518
100073ff:	movzx  edi,WORD PTR [ebx]
10007402:	cmp    di,0x7f
10007406:	ja     0x100074a5
1000740c:	movzx  ecx,di
1000740f:	cmp    BYTE PTR [ecx+0x10002fa0],0x0
10007416:	jne    0x100074a5
1000741c:	xor    ecx,ecx
1000741e:	cmp    DWORD PTR [ebp-0x4],ecx
10007421:	je     0x1000746e
10007423:	cmp    DWORD PTR [ebp+0x8],ecx
10007426:	mov    DWORD PTR [ebp-0x4],ecx
10007429:	je     0x10007460
1000742b:	cmp    edx,ecx
1000742d:	je     0x10007455
1000742f:	cmp    DWORD PTR [ebp+0x14],ecx
10007432:	je     0x10007455
10007434:	lea    edi,[eax+0x1]
10007437:	cmp    edi,DWORD PTR [ebp+0x14]
1000743a:	jge    0x1000757c
10007440:	shr    esi,0x1a
10007443:	mov    cl,BYTE PTR [esi+0x10002f58]
10007449:	mov    BYTE PTR [eax+edx*1],cl
1000744c:	mov    eax,edi
1000744e:	mov    BYTE PTR [eax+edx*1],0x2d
10007452:	inc    eax
10007453:	jmp    0x10007457
10007455:	inc    eax
10007456:	inc    eax
10007457:	xor    ecx,ecx
10007459:	xor    esi,esi
1000745b:	mov    DWORD PTR [ebp+0x8],ecx
1000745e:	jmp    0x1000746e
10007460:	cmp    edx,ecx
10007462:	je     0x1000746d
10007464:	cmp    DWORD PTR [ebp+0x14],ecx
10007467:	je     0x1000746d
10007469:	mov    BYTE PTR [eax+edx*1],0x2d
1000746d:	inc    eax
1000746e:	cmp    edx,ecx
10007470:	je     0x1000749c
10007472:	cmp    DWORD PTR [ebp+0x14],ecx
10007475:	je     0x1000749c
10007477:	cmp    eax,DWORD PTR [ebp+0x14]
1000747a:	jge    0x10007565
10007480:	mov    cl,BYTE PTR [ebx]
10007482:	mov    BYTE PTR [eax+edx*1],cl
10007485:	inc    eax
10007486:	cmp    WORD PTR [ebx],0x2b
1000748a:	jne    0x10007508
1000748c:	cmp    eax,DWORD PTR [ebp+0x14]
1000748f:	jge    0x10007565
10007495:	mov    BYTE PTR [eax+edx*1],0x2d
10007499:	inc    eax
1000749a:	jmp    0x10007508
1000749c:	inc    eax
1000749d:	cmp    WORD PTR [ebx],0x2b
100074a1:	jne    0x10007508
100074a3:	jmp    0x10007499
100074a5:	push   0x10
100074a7:	pop    ecx
100074a8:	sub    ecx,DWORD PTR [ebp+0x8]
100074ab:	add    DWORD PTR [ebp+0x8],0x10
100074af:	movzx  edi,di
100074b2:	shl    edi,cl
100074b4:	or     esi,edi
100074b6:	cmp    DWORD PTR [ebp-0x4],0x0
100074ba:	jne    0x100074d2
100074bc:	test   edx,edx
100074be:	je     0x100074ca
100074c0:	cmp    DWORD PTR [ebp+0x14],0x0
100074c4:	je     0x100074ca
100074c6:	mov    BYTE PTR [eax+edx*1],0x2b
100074ca:	inc    eax
100074cb:	mov    DWORD PTR [ebp-0x4],0x1
100074d2:	push   0x6
100074d4:	pop    edi
100074d5:	cmp    DWORD PTR [ebp+0x8],edi
100074d8:	jl     0x10007508
100074da:	test   edx,edx
100074dc:	je     0x100074f7
100074de:	cmp    DWORD PTR [ebp+0x14],0x0
100074e2:	je     0x100074f7
100074e4:	cmp    eax,DWORD PTR [ebp+0x14]
100074e7:	jge    0x10007503
100074e9:	mov    ecx,esi
100074eb:	shr    ecx,0x1a
100074ee:	mov    cl,BYTE PTR [ecx+0x10002f58]
100074f4:	mov    BYTE PTR [eax+edx*1],cl
100074f7:	sub    DWORD PTR [ebp+0x8],edi
100074fa:	inc    eax
100074fb:	shl    esi,0x6
100074fe:	cmp    DWORD PTR [ebp+0x8],edi
10007501:	jge    0x100074da
10007503:	cmp    DWORD PTR [ebp+0x8],edi
10007506:	jge    0x10007565
10007508:	inc    ebx
10007509:	inc    ebx
1000750a:	xor    ecx,ecx
1000750c:	cmp    DWORD PTR [ebp+0xc],ecx
1000750f:	jne    0x100073ee
10007515:	dec    DWORD PTR [ebp+0xc]
10007518:	xor    ecx,ecx
1000751a:	cmp    DWORD PTR [ebp-0x4],ecx
1000751d:	je     0x10007548
1000751f:	cmp    DWORD PTR [ebp+0x8],ecx
10007522:	je     0x1000756e
10007524:	cmp    edx,ecx
10007526:	je     0x1000756a
10007528:	cmp    DWORD PTR [ebp+0x14],ecx
1000752b:	je     0x1000756a
1000752d:	lea    edi,[eax+0x1]
10007530:	cmp    edi,DWORD PTR [ebp+0x14]
10007533:	jge    0x1000757c
10007535:	shr    esi,0x1a
10007538:	mov    cl,BYTE PTR [esi+0x10002f58]
1000753e:	mov    BYTE PTR [eax+edx*1],cl
10007541:	mov    eax,edi
10007543:	mov    BYTE PTR [eax+edx*1],0x2d
10007547:	inc    eax
10007548:	cmp    DWORD PTR [ebp+0x14],0x0
1000754c:	pop    edi
1000754d:	pop    esi
1000754e:	pop    ebx
1000754f:	je     0x10007561
10007551:	cmp    DWORD PTR [ebp+0xc],0x0
10007555:	jl     0x10007561
10007557:	push   0x7a
10007559:	call   DWORD PTR ds:0x10001064
1000755f:	xor    eax,eax
10007561:	leave  
10007562:	ret    0x10
10007565:	inc    DWORD PTR [ebp+0xc]
10007568:	jmp    0x10007518
1000756a:	inc    eax
1000756b:	inc    eax
1000756c:	jmp    0x10007548
1000756e:	cmp    edx,ecx
10007570:	je     0x10007547
10007572:	cmp    DWORD PTR [ebp+0x14],ecx
10007575:	je     0x10007547
10007577:	cmp    eax,DWORD PTR [ebp+0x14]
1000757a:	jl     0x10007543
1000757c:	inc    DWORD PTR [ebp+0xc]
1000757f:	jmp    0x10007548
10007581:	push   ebp
10007582:	mov    ebp,esp
10007584:	push   ecx
10007585:	push   ecx
10007586:	mov    ecx,DWORD PTR [ebp+0x10]
10007589:	push   ebx
1000758a:	push   esi
1000758b:	push   edi
1000758c:	mov    edi,DWORD PTR [ebp+0x8]
1000758f:	xor    edx,edx
10007591:	xor    eax,eax
10007593:	cmp    DWORD PTR [ebp+0xc],edx
10007596:	mov    DWORD PTR [ebp-0x4],edi
10007599:	je     0x10007814
1000759f:	push   0x2
100075a1:	pop    esi
100075a2:	mov    DWORD PTR [ebp+0x10],0x1
100075a9:	mov    DWORD PTR [ebp+0x8],0x3
100075b0:	dec    DWORD PTR [ebp+0xc]
100075b3:	cmp    DWORD PTR [ebp+0x14],0x0
100075b7:	je     0x100075c2
100075b9:	cmp    eax,DWORD PTR [ebp+0x14]
100075bc:	jge    0x10007817
100075c2:	movzx  ebx,WORD PTR [edi]
100075c5:	and    DWORD PTR [ebp-0x8],0x0
100075c9:	cmp    bx,0xd800
100075ce:	jb     0x1000764a
100075d0:	cmp    bx,0xdbff
100075d5:	ja     0x1000764a
100075d7:	test   ecx,ecx
100075d9:	je     0x10007635
100075db:	cmp    DWORD PTR [ebp+0x14],0x0
100075df:	je     0x10007635
100075e1:	test   dx,dx
100075e4:	je     0x10007642
100075e6:	cmp    esi,DWORD PTR [ebp+0x14]
100075e9:	jge    0x10007861
100075ef:	cmp    esi,eax
100075f1:	jl     0x10007861
100075f7:	mov    bx,dx
100075fa:	shr    bx,0xc
100075fe:	or     bl,0xe0
10007601:	mov    BYTE PTR [eax+ecx*1],bl
10007604:	inc    eax
10007605:	inc    DWORD PTR [ebp+0x8]
10007608:	inc    DWORD PTR [ebp+0x10]
1000760b:	mov    ebx,edx
1000760d:	shr    ebx,0x6
10007610:	and    bl,0x3f
10007613:	or     bl,0x80
10007616:	inc    esi
10007617:	and    dl,0x3f
1000761a:	mov    BYTE PTR [eax+ecx*1],bl
1000761d:	inc    eax
1000761e:	inc    DWORD PTR [ebp+0x8]
10007621:	inc    DWORD PTR [ebp+0x10]
10007624:	or     dl,0x80
10007627:	inc    esi
10007628:	mov    BYTE PTR [eax+ecx*1],dl
1000762b:	inc    eax
1000762c:	inc    DWORD PTR [ebp+0x8]
1000762f:	inc    DWORD PTR [ebp+0x10]
10007632:	inc    esi
10007633:	jmp    0x10007642
10007635:	push   0x3
10007637:	pop    edx
10007638:	add    DWORD PTR [ebp+0x8],edx
1000763b:	add    DWORD PTR [ebp+0x10],edx
1000763e:	add    eax,edx
10007640:	add    esi,edx
10007642:	movzx  edx,WORD PTR [edi]
10007645:	jmp    0x10007805
1000764a:	test   dx,dx
1000764d:	je     0x10007743
10007653:	cmp    bx,0xdc00
10007658:	jb     0x100076e1
1000765e:	cmp    bx,0xdfff
10007663:	ja     0x100076e1
10007665:	test   ecx,ecx
10007667:	je     0x100076d8
10007669:	mov    ebx,DWORD PTR [ebp+0x14]
1000766c:	test   ebx,ebx
1000766e:	je     0x100076d8
10007670:	cmp    DWORD PTR [ebp+0x8],ebx
10007673:	jge    0x10007861
10007679:	mov    edi,DWORD PTR [ebp-0x4]
1000767c:	movzx  ebx,WORD PTR [edi]
1000767f:	movzx  ebx,bx
10007682:	movzx  edx,dx
10007685:	sub    edx,0xd7f7
1000768b:	shl    edx,0xa
1000768e:	add    edx,ebx
10007690:	mov    ebx,edx
10007692:	shr    ebx,0x12
10007695:	or     bl,0xf0
10007698:	mov    BYTE PTR [eax+ecx*1],bl
1000769b:	inc    eax
1000769c:	inc    DWORD PTR [ebp+0x8]
1000769f:	inc    DWORD PTR [ebp+0x10]
100076a2:	mov    ebx,edx
100076a4:	shr    ebx,0xc
100076a7:	and    bl,0x3f
100076aa:	or     bl,0x80
100076ad:	mov    BYTE PTR [eax+ecx*1],bl
100076b0:	inc    esi
100076b1:	inc    eax
100076b2:	inc    DWORD PTR [ebp+0x8]
100076b5:	inc    DWORD PTR [ebp+0x10]
100076b8:	mov    ebx,edx
100076ba:	shr    ebx,0x6
100076bd:	and    bl,0x3f
100076c0:	or     bl,0x80
100076c3:	inc    esi
100076c4:	mov    BYTE PTR [eax+ecx*1],bl
100076c7:	inc    eax
100076c8:	inc    DWORD PTR [ebp+0x8]
100076cb:	inc    DWORD PTR [ebp+0x10]
100076ce:	and    dl,0x3f
100076d1:	inc    esi
100076d2:	or     dl,0x80
100076d5:	mov    BYTE PTR [eax+ecx*1],dl
100076d8:	mov    DWORD PTR [ebp-0x8],0x1
100076df:	jmp    0x10007730
100076e1:	test   ecx,ecx
100076e3:	je     0x10007738
100076e5:	cmp    DWORD PTR [ebp+0x14],0x0
100076e9:	je     0x10007738
100076eb:	cmp    esi,DWORD PTR [ebp+0x14]
100076ee:	jge    0x10007861
100076f4:	cmp    esi,eax
100076f6:	jl     0x10007861
100076fc:	mov    bx,dx
100076ff:	shr    bx,0xc
10007703:	or     bl,0xe0
10007706:	mov    BYTE PTR [eax+ecx*1],bl
10007709:	inc    eax
1000770a:	inc    DWORD PTR [ebp+0x8]
1000770d:	inc    DWORD PTR [ebp+0x10]
10007710:	mov    ebx,edx
10007712:	shr    ebx,0x6
10007715:	and    bl,0x3f
10007718:	or     bl,0x80
1000771b:	inc    esi
1000771c:	mov    BYTE PTR [eax+ecx*1],bl
1000771f:	inc    eax
10007720:	inc    DWORD PTR [ebp+0x8]
10007723:	inc    DWORD PTR [ebp+0x10]
10007726:	and    dl,0x3f
10007729:	inc    esi
1000772a:	or     dl,0x80
1000772d:	mov    BYTE PTR [eax+ecx*1],dl
10007730:	inc    eax
10007731:	inc    DWORD PTR [ebp+0x8]
10007734:	inc    DWORD PTR [ebp+0x10]
10007737:	inc    esi
10007738:	xor    edx,edx
1000773a:	cmp    DWORD PTR [ebp-0x8],edx
1000773d:	jne    0x10007805
10007743:	movzx  ebx,WORD PTR [edi]
10007746:	cmp    bx,0x7f
1000774a:	ja     0x1000776b
1000774c:	test   ecx,ecx
1000774e:	je     0x100077ed
10007754:	cmp    DWORD PTR [ebp+0x14],0x0
10007758:	je     0x100077ed
1000775e:	cmp    eax,DWORD PTR [ebp+0x14]
10007761:	jge    0x10007861
10007767:	mov    bl,BYTE PTR [edi]
10007769:	jmp    0x100077ea
1000776b:	cmp    bx,0x7ff
10007770:	ja     0x100077a2
10007772:	test   ecx,ecx
10007774:	je     0x10007794
10007776:	mov    ebx,DWORD PTR [ebp+0x14]
10007779:	test   ebx,ebx
1000777b:	je     0x10007794
1000777d:	cmp    DWORD PTR [ebp+0x10],ebx
10007780:	jge    0x10007861
10007786:	mov    edi,DWORD PTR [ebp-0x4]
10007789:	movzx  ebx,WORD PTR [edi]
1000778c:	shr    ebx,0x6
1000778f:	or     bl,0xc0
10007792:	jmp    0x100077d7
10007794:	add    DWORD PTR [ebp+0x8],0x2
10007798:	add    DWORD PTR [ebp+0x10],0x2
1000779c:	inc    eax
1000779d:	inc    eax
1000779e:	inc    esi
1000779f:	inc    esi
100077a0:	jmp    0x10007805
100077a2:	test   ecx,ecx
100077a4:	je     0x100077f7
100077a6:	cmp    DWORD PTR [ebp+0x14],0x0
100077aa:	je     0x100077f7
100077ac:	cmp    esi,DWORD PTR [ebp+0x14]
100077af:	jge    0x10007861
100077b5:	movzx  ebx,WORD PTR [edi]
100077b8:	shr    bx,0xc
100077bc:	or     bl,0xe0
100077bf:	mov    BYTE PTR [eax+ecx*1],bl
100077c2:	mov    bx,WORD PTR [edi]
100077c5:	inc    eax
100077c6:	inc    DWORD PTR [ebp+0x8]
100077c9:	inc    DWORD PTR [ebp+0x10]
100077cc:	shr    bx,0x6
100077d0:	and    bl,0x3f
100077d3:	inc    esi
100077d4:	or     bl,0x80
100077d7:	mov    BYTE PTR [eax+ecx*1],bl
100077da:	mov    bl,BYTE PTR [edi]
100077dc:	inc    eax
100077dd:	inc    DWORD PTR [ebp+0x8]
100077e0:	inc    DWORD PTR [ebp+0x10]
100077e3:	and    bl,0x3f
100077e6:	inc    esi
100077e7:	or     bl,0x80
100077ea:	mov    BYTE PTR [eax+ecx*1],bl
100077ed:	inc    eax
100077ee:	inc    DWORD PTR [ebp+0x8]
100077f1:	inc    DWORD PTR [ebp+0x10]
100077f4:	inc    esi
100077f5:	jmp    0x10007805
100077f7:	add    DWORD PTR [ebp+0x8],0x3
100077fb:	add    DWORD PTR [ebp+0x10],0x3
100077ff:	add    eax,0x3
10007802:	add    esi,0x3
10007805:	inc    edi
10007806:	inc    edi
10007807:	cmp    DWORD PTR [ebp+0xc],0x0
1000780b:	mov    DWORD PTR [ebp-0x4],edi
1000780e:	jne    0x100075b0
10007814:	dec    DWORD PTR [ebp+0xc]
10007817:	cmp    DWORD PTR [ebp+0xc],0x0
1000781b:	jge    0x10007869
1000781d:	test   dx,dx
10007820:	je     0x10007869
10007822:	test   ecx,ecx
10007824:	je     0x10007869
10007826:	cmp    DWORD PTR [ebp+0x14],0x0
1000782a:	je     0x1000787f
1000782c:	lea    esi,[eax+0x2]
1000782f:	cmp    esi,DWORD PTR [ebp+0x14]
10007832:	jge    0x10007866
10007834:	cmp    esi,eax
10007836:	jl     0x10007866
10007838:	mov    bx,dx
1000783b:	shr    bx,0xc
1000783f:	or     bl,0xe0
10007842:	mov    BYTE PTR [eax+ecx*1],bl
10007845:	mov    ebx,edx
10007847:	shr    ebx,0x6
1000784a:	and    bl,0x3f
1000784d:	inc    eax
1000784e:	or     bl,0x80
10007851:	mov    BYTE PTR [eax+ecx*1],bl
10007854:	and    dl,0x3f
10007857:	inc    eax
10007858:	or     dl,0x80
1000785b:	mov    BYTE PTR [eax+ecx*1],dl
1000785e:	inc    eax
1000785f:	jmp    0x10007869
10007861:	inc    DWORD PTR [ebp+0xc]
10007864:	jmp    0x10007817
10007866:	inc    DWORD PTR [ebp+0xc]
10007869:	cmp    DWORD PTR [ebp+0x14],0x0
1000786d:	je     0x1000787f
1000786f:	cmp    DWORD PTR [ebp+0xc],0x0
10007873:	jl     0x1000787f
10007875:	push   0x7a
10007877:	call   DWORD PTR ds:0x10001064
1000787d:	xor    eax,eax
1000787f:	pop    edi
10007880:	pop    esi
10007881:	pop    ebx
10007882:	leave  
10007883:	ret    0x10
10007886:	push   ebp
10007887:	mov    ebp,esp
10007889:	push   ecx
1000788a:	mov    ecx,DWORD PTR [ebp+0x8]
1000788d:	and    DWORD PTR [ebp-0x4],0x0
10007891:	lea    eax,[ecx-0xfde8]
10007897:	cmp    eax,0x1
1000789a:	push   ebx
1000789b:	push   edi
1000789c:	ja     0x1000792d
100078a2:	mov    edx,DWORD PTR [ebp+0x14]
100078a5:	test   edx,edx
100078a7:	je     0x1000792d
100078ad:	mov    eax,DWORD PTR [ebp+0x1c]
100078b0:	test   eax,eax
100078b2:	jl     0x1000792d
100078b4:	mov    edi,DWORD PTR [ebp+0x10]
100078b7:	test   edi,edi
100078b9:	je     0x1000792d
100078bb:	test   eax,eax
100078bd:	mov    ebx,DWORD PTR [ebp+0x18]
100078c0:	je     0x100078ca
100078c2:	test   ebx,ebx
100078c4:	je     0x1000792d
100078c6:	cmp    edi,ebx
100078c8:	je     0x1000792d
100078ca:	cmp    ecx,0xfde9
100078d0:	jne    0x100078e2
100078d2:	test   DWORD PTR [ebp+0xc],0xfffffff7
100078d9:	je     0x100078e8
100078db:	push   0x3ec
100078e0:	jmp    0x1000792f
100078e2:	cmp    DWORD PTR [ebp+0xc],0x0
100078e6:	jmp    0x100078d9
100078e8:	cmp    edx,0xffffffff
100078eb:	jg     0x10007900
100078ed:	mov    ecx,edi
100078ef:	push   esi
100078f0:	lea    esi,[ecx+0x1]
100078f3:	mov    dl,BYTE PTR [ecx]
100078f5:	inc    ecx
100078f6:	test   dl,dl
100078f8:	jne    0x100078f3
100078fa:	sub    ecx,esi
100078fc:	lea    edx,[ecx+0x1]
100078ff:	pop    esi
10007900:	mov    ecx,DWORD PTR [ebp+0x8]
10007903:	sub    ecx,0xfde8
10007909:	je     0x1000791c
1000790b:	dec    ecx
1000790c:	jne    0x10007928
1000790e:	push   DWORD PTR [ebp+0xc]
10007911:	push   eax
10007912:	push   ebx
10007913:	push   edx
10007914:	push   edi
10007915:	call   0x100071f6
1000791a:	jmp    0x10007925
1000791c:	push   eax
1000791d:	push   ebx
1000791e:	push   edx
1000791f:	push   edi
10007920:	call   0x1000709d
10007925:	mov    DWORD PTR [ebp-0x4],eax
10007928:	mov    eax,DWORD PTR [ebp-0x4]
1000792b:	jmp    0x10007937
1000792d:	push   0x57
1000792f:	call   DWORD PTR ds:0x10001064
10007935:	xor    eax,eax
10007937:	pop    edi
10007938:	pop    ebx
10007939:	leave  
1000793a:	ret    0x18
1000793d:	push   ebp
1000793e:	mov    ebp,esp
10007940:	push   ecx
10007941:	mov    eax,DWORD PTR [ebp+0x8]
10007944:	push   ebx
10007945:	xor    ecx,ecx
10007947:	add    eax,0xffff0218
1000794c:	cmp    eax,0x1
1000794f:	push   esi
10007950:	push   edi
10007951:	mov    DWORD PTR [ebp-0x4],ecx
10007954:	ja     0x100079c7
10007956:	mov    eax,DWORD PTR [ebp+0x14]
10007959:	cmp    eax,ecx
1000795b:	je     0x100079c7
1000795d:	mov    ebx,DWORD PTR [ebp+0x1c]
10007960:	cmp    ebx,ecx
10007962:	jl     0x100079c7
10007964:	mov    edi,DWORD PTR [ebp+0x10]
10007967:	cmp    edi,ecx
10007969:	je     0x100079c7
1000796b:	cmp    ebx,ecx
1000796d:	mov    esi,DWORD PTR [ebp+0x18]
10007970:	je     0x1000797a
10007972:	cmp    esi,ecx
10007974:	je     0x100079c7
10007976:	cmp    edi,esi
10007978:	je     0x100079c7
1000797a:	cmp    DWORD PTR [ebp+0x20],ecx
1000797d:	jne    0x100079c7
1000797f:	cmp    DWORD PTR [ebp+0x24],ecx
10007982:	jne    0x100079c7
10007984:	cmp    DWORD PTR [ebp+0xc],ecx
10007987:	je     0x10007990
10007989:	push   0x3ec
1000798e:	jmp    0x100079c9
10007990:	cmp    eax,0xffffffff
10007993:	jg     0x1000799d
10007995:	push   edi
10007996:	call   DWORD PTR ds:0x10001084
1000799c:	inc    eax
1000799d:	mov    ecx,DWORD PTR [ebp+0x8]
100079a0:	sub    ecx,0xfde8
100079a6:	je     0x100079b6
100079a8:	dec    ecx
100079a9:	jne    0x100079c2
100079ab:	push   ebx
100079ac:	push   esi
100079ad:	push   eax
100079ae:	push   edi
100079af:	call   0x10007581
100079b4:	jmp    0x100079bf
100079b6:	push   ebx
100079b7:	push   esi
100079b8:	push   eax
100079b9:	push   edi
100079ba:	call   0x100073d0
100079bf:	mov    DWORD PTR [ebp-0x4],eax
100079c2:	mov    eax,DWORD PTR [ebp-0x4]
100079c5:	jmp    0x100079d1
100079c7:	push   0x57
100079c9:	call   DWORD PTR ds:0x10001064
100079cf:	xor    eax,eax
100079d1:	pop    edi
100079d2:	pop    esi
100079d3:	pop    ebx
100079d4:	leave  
100079d5:	ret    0x20
100079d8:	push   ebp
100079d9:	mov    ebp,esp
100079db:	call   DWORD PTR ds:0x1000c00c
100079e1:	test   eax,eax
100079e3:	jne    0x100079f5
100079e5:	call   0x10003f27
100079ea:	push   DWORD PTR [ebp+0x8]
100079ed:	mov    ecx,DWORD PTR [eax]
100079ef:	push   eax
100079f0:	call   DWORD PTR [ecx+0x14]
100079f3:	jmp    0x100079fb
100079f5:	mov    ecx,DWORD PTR [ebp+0x8]
100079f8:	mov    eax,DWORD PTR [eax+ecx*4]
100079fb:	pop    ebp
100079fc:	ret    0x4
100079ff:	mov    edx,ecx
10007a01:	mov    eax,DWORD PTR [edx+0x8]
10007a04:	test   al,0x40
10007a06:	jne    0x10007a41
10007a08:	push   esi
10007a09:	push   edi
10007a0a:	mov    esi,DWORD PTR [edx+0xc]
10007a0d:	mov    edi,DWORD PTR [edx]
10007a0f:	mov    ecx,eax
10007a11:	not    ecx
10007a13:	and    ecx,0x1
10007a16:	shr    edi,cl
10007a18:	lea    ecx,[edi+esi*1-0x1]
10007a1c:	jmp    0x10007a24
10007a1e:	test   BYTE PTR [esi],0x80
10007a21:	jne    0x10007a28
10007a23:	inc    esi
10007a24:	cmp    esi,ecx
10007a26:	jb     0x10007a1e
10007a28:	pop    edi
10007a29:	cmp    esi,ecx
10007a2b:	pop    esi
10007a2c:	jne    0x10007a3b
10007a2e:	and    eax,0xfffffff9
10007a31:	or     eax,0x1
10007a34:	mov    DWORD PTR [edx+0x8],eax
10007a37:	xor    eax,eax
10007a39:	inc    eax
10007a3a:	ret    
10007a3b:	or     eax,0x40
10007a3e:	mov    DWORD PTR [edx+0x8],eax
10007a41:	xor    eax,eax
10007a43:	ret    
10007a44:	push   ebp
10007a45:	mov    ebp,esp
10007a47:	mov    eax,DWORD PTR [ecx+0x8]
10007a4a:	and    eax,0x7
10007a4d:	cmp    eax,DWORD PTR [ebp+0x8]
10007a50:	jne    0x10007a57
10007a52:	xor    eax,eax
10007a54:	inc    eax
10007a55:	jmp    0x10007a76
10007a57:	test   eax,eax
10007a59:	je     0x10007a52
10007a5b:	cmp    eax,0x4
10007a5e:	je     0x10007a74
10007a60:	cmp    DWORD PTR [ebp+0x8],0x4
10007a64:	je     0x10007a74
10007a66:	cmp    eax,0x1
10007a69:	je     0x10007a52
10007a6b:	call   0x100079ff
10007a70:	test   eax,eax
10007a72:	jne    0x10007a52
10007a74:	xor    eax,eax
10007a76:	pop    ebp
10007a77:	ret    0x4
10007a7a:	push   esi
10007a7b:	mov    esi,ecx
10007a7d:	cmp    DWORD PTR [esi+0x4],0x0
10007a81:	je     0x10007a8f
10007a83:	push   DWORD PTR [esi]
10007a85:	call   DWORD PTR ds:0x10001014
10007a8b:	and    DWORD PTR [esi+0x4],0x0
10007a8f:	pop    esi
10007a90:	ret    
10007a91:	push   0x4
10007a93:	mov    eax,0x1000a743
10007a98:	call   0x10009a38
10007a9d:	mov    esi,ecx
10007a9f:	mov    DWORD PTR [ebp-0x10],esi
10007aa2:	or     DWORD PTR [ebp-0x4],0xffffffff
10007aa6:	cmp    DWORD PTR [esi+0x4],0x0
10007aaa:	je     0x10007ab8
10007aac:	push   DWORD PTR [esi]
10007aae:	call   DWORD PTR ds:0x10001014
10007ab4:	and    DWORD PTR [esi+0x4],0x0
10007ab8:	call   0x10009ad7
10007abd:	ret    
10007abe:	and    DWORD PTR [ecx+0x8],0xfffffff8
10007ac2:	mov    eax,DWORD PTR [ecx+0x8]
10007ac5:	test   al,0x10
10007ac7:	je     0x10007ad6
10007ac9:	push   0x2
10007acb:	push   0x1000ccd8
10007ad0:	call   0x100067e8
10007ad5:	ret    
10007ad6:	mov    DWORD PTR [ecx],0x2
10007adc:	mov    eax,DWORD PTR [ecx+0xc]
10007adf:	and    WORD PTR [eax],0x0
10007ae3:	ret    
10007ae4:	push   0x4
10007ae6:	mov    eax,0x1000a766
10007aeb:	call   0x10009a38
10007af0:	mov    DWORD PTR [ebp-0x10],ecx
10007af3:	or     DWORD PTR [ebp-0x4],0xffffffff
10007af7:	call   0x10007a91
10007afc:	call   0x10009ad7
10007b01:	ret    
10007b02:	push   ebp
10007b03:	mov    ebp,esp
10007b05:	mov    edx,DWORD PTR [ebp+0x8]
10007b08:	test   edx,edx
10007b0a:	push   esi
10007b0b:	mov    esi,ecx
10007b0d:	jne    0x10007b16
10007b0f:	call   0x10007abe
10007b14:	jmp    0x10007b7b
10007b16:	push   edi
10007b17:	mov    eax,DWORD PTR [esi+0x8]
10007b1a:	and    eax,0xfffffff8
10007b1d:	or     eax,DWORD PTR [ebp+0xc]
10007b20:	mov    DWORD PTR [esi+0x8],eax
10007b23:	mov    ecx,eax
10007b25:	not    ecx
10007b27:	and    ecx,0x1
10007b2a:	lea    edi,[edx+0x1]
10007b2d:	shl    edi,cl
10007b2f:	cmp    edi,edx
10007b31:	jae    0x10007b38
10007b33:	call   0x10006558
10007b38:	and    eax,0xfffffeff
10007b3d:	mov    DWORD PTR [esi+0x8],eax
10007b40:	cmp    edi,DWORD PTR [esi+0x4]
10007b43:	jbe    0x10007b50
10007b45:	push   DWORD PTR [ebp+0x10]
10007b48:	mov    ecx,esi
10007b4a:	push   edi
10007b4b:	call   0x10008ab2
10007b50:	mov    DWORD PTR [esi],edi
10007b52:	test   BYTE PTR [esi+0x8],0x10
10007b56:	pop    edi
10007b57:	je     0x10007b65
10007b59:	push   0x1
10007b5b:	push   DWORD PTR [esi+0x4]
10007b5e:	mov    ecx,esi
10007b60:	call   0x10008ab2
10007b65:	mov    eax,DWORD PTR [esi+0xc]
10007b68:	add    eax,DWORD PTR [esi]
10007b6a:	test   BYTE PTR [esi+0x8],0x1
10007b6e:	je     0x10007b76
10007b70:	mov    BYTE PTR [eax-0x1],0x0
10007b74:	jmp    0x10007b7b
10007b76:	and    WORD PTR [eax-0x2],0x0
10007b7b:	pop    esi
10007b7c:	pop    ebp
10007b7d:	ret    0xc
10007b80:	push   ebp
10007b81:	mov    ebp,esp
10007b83:	push   esi
10007b84:	push   edi
10007b85:	mov    edi,DWORD PTR [ebp+0x8]
10007b88:	test   edi,edi
10007b8a:	mov    esi,ecx
10007b8c:	je     0x10007bcf
10007b8e:	cmp    WORD PTR [edi],0x0
10007b92:	je     0x10007bcf
10007b94:	mov    eax,edi
10007b96:	lea    edx,[eax+0x2]
10007b99:	mov    cx,WORD PTR [eax]
10007b9c:	inc    eax
10007b9d:	inc    eax
10007b9e:	test   cx,cx
10007ba1:	jne    0x10007b99
10007ba3:	push   0x0
10007ba5:	sub    eax,edx
10007ba7:	sar    eax,1
10007ba9:	push   0x4
10007bab:	push   eax
10007bac:	mov    ecx,esi
10007bae:	call   0x10007b02
10007bb3:	mov    ecx,DWORD PTR [esi+0x8]
10007bb6:	mov    eax,DWORD PTR [esi]
10007bb8:	not    ecx
10007bba:	and    ecx,0x1
10007bbd:	shr    eax,cl
10007bbf:	push   edi
10007bc0:	push   eax
10007bc1:	push   DWORD PTR [esi+0xc]
10007bc4:	call   DWORD PTR ds:0x1000113c
10007bca:	add    esp,0xc
10007bcd:	jmp    0x10007bd4
10007bcf:	call   0x10007abe
10007bd4:	pop    edi
10007bd5:	pop    esi
10007bd6:	pop    ebp
10007bd7:	ret    0x4
10007bda:	push   ebp
10007bdb:	mov    ebp,esp
10007bdd:	push   esi
10007bde:	push   edi
10007bdf:	mov    edi,DWORD PTR [ebp+0x8]
10007be2:	test   edi,edi
10007be4:	mov    esi,ecx
10007be6:	je     0x10007c23
10007be8:	cmp    BYTE PTR [edi],0x0
10007beb:	je     0x10007c23
10007bed:	mov    eax,edi
10007bef:	lea    ecx,[eax+0x1]
10007bf2:	mov    dl,BYTE PTR [eax]
10007bf4:	inc    eax
10007bf5:	test   dl,dl
10007bf7:	jne    0x10007bf2
10007bf9:	push   0x0
10007bfb:	sub    eax,ecx
10007bfd:	push   0x1
10007bff:	push   eax
10007c00:	mov    ecx,esi
10007c02:	call   0x10007b02
10007c07:	mov    ecx,DWORD PTR [esi+0x8]
10007c0a:	mov    eax,DWORD PTR [esi]
10007c0c:	not    ecx
10007c0e:	and    ecx,0x1
10007c11:	shr    eax,cl
10007c13:	push   edi
10007c14:	push   eax
10007c15:	push   DWORD PTR [esi+0xc]
10007c18:	call   DWORD PTR ds:0x1000111c
10007c1e:	add    esp,0xc
10007c21:	jmp    0x10007c28
10007c23:	call   0x10007abe
10007c28:	pop    edi
10007c29:	pop    esi
10007c2a:	pop    ebp
10007c2b:	ret    0x4
10007c2e:	push   ebp
10007c2f:	mov    ebp,esp
10007c31:	push   esi
10007c32:	mov    esi,ecx
10007c34:	mov    ecx,DWORD PTR [esi+0x8]
10007c37:	mov    eax,DWORD PTR [esi]
10007c39:	not    ecx
10007c3b:	and    ecx,0x1
10007c3e:	shr    eax,cl
10007c40:	dec    eax
10007c41:	jne    0x10007c4d
10007c43:	mov    ecx,DWORD PTR [ebp+0x8]
10007c46:	call   0x10007abe
10007c4b:	jmp    0x10007c9d
10007c4d:	push   edi
10007c4e:	mov    edi,DWORD PTR [ebp+0x8]
10007c51:	xor    ecx,ecx
10007c53:	cmp    esi,edi
10007c55:	sete   cl
10007c58:	push   ecx
10007c59:	push   0x4
10007c5b:	push   eax
10007c5c:	mov    ecx,edi
10007c5e:	call   0x10007b02
10007c63:	mov    ecx,DWORD PTR [edi+0x8]
10007c66:	mov    eax,DWORD PTR [edi]
10007c68:	not    ecx
10007c6a:	and    ecx,0x1
10007c6d:	shr    eax,cl
10007c6f:	mov    ecx,DWORD PTR [edi+0xc]
10007c72:	lea    edi,[ecx+eax*2-0x2]
10007c76:	mov    ecx,DWORD PTR [esi+0x8]
10007c79:	mov    eax,DWORD PTR [esi]
10007c7b:	mov    edx,DWORD PTR [esi+0xc]
10007c7e:	not    ecx
10007c80:	and    ecx,0x1
10007c83:	shr    eax,cl
10007c85:	lea    eax,[eax+edx*1-0x1]
10007c89:	cmp    edx,eax
10007c8b:	ja     0x10007c9c
10007c8d:	movsx  cx,BYTE PTR [eax]
10007c91:	mov    WORD PTR [edi],cx
10007c94:	dec    edi
10007c95:	dec    edi
10007c96:	dec    eax
10007c97:	cmp    DWORD PTR [esi+0xc],eax
10007c9a:	jbe    0x10007c8d
10007c9c:	pop    edi
10007c9d:	pop    esi
10007c9e:	pop    ebp
10007c9f:	ret    0x4
10007ca2:	push   ebp
10007ca3:	mov    ebp,esp
10007ca5:	push   ecx
10007ca6:	push   ebx
10007ca7:	push   esi
10007ca8:	mov    esi,ecx
10007caa:	mov    ecx,DWORD PTR [esi+0x8]
10007cad:	mov    eax,ecx
10007caf:	and    eax,0x7
10007cb2:	xor    ebx,ebx
10007cb4:	sub    eax,ebx
10007cb6:	je     0x10007d4a
10007cbc:	dec    eax
10007cbd:	je     0x10007d3e
10007cbf:	dec    eax
10007cc0:	dec    eax
10007cc1:	je     0x10007cd6
10007cc3:	dec    eax
10007cc4:	je     0x10007ccb
10007cc6:	mov    DWORD PTR [ebp-0x4],ebx
10007cc9:	jmp    0x10007cdd
10007ccb:	mov    ecx,DWORD PTR [ebp+0x8]
10007cce:	push   esi
10007ccf:	call   0x10006876
10007cd4:	jmp    0x10007d52
10007cd6:	mov    DWORD PTR [ebp-0x4],0xfde9
10007cdd:	push   edi
10007cde:	mov    eax,DWORD PTR [esi]
10007ce0:	not    ecx
10007ce2:	and    ecx,0x1
10007ce5:	shr    eax,cl
10007ce7:	dec    eax
10007ce8:	mov    ecx,DWORD PTR [esi+0xc]
10007ceb:	push   ebx
10007cec:	push   ebx
10007ced:	inc    eax
10007cee:	push   eax
10007cef:	push   ecx
10007cf0:	push   ebx
10007cf1:	push   DWORD PTR [ebp-0x4]
10007cf4:	call   0x10004483
10007cf9:	mov    edi,eax
10007cfb:	cmp    edi,ebx
10007cfd:	jne    0x10007d04
10007cff:	call   0x1000675b
10007d04:	mov    ecx,DWORD PTR [ebp+0x8]
10007d07:	push   ebx
10007d08:	push   0x4
10007d0a:	lea    eax,[edi-0x1]
10007d0d:	push   eax
10007d0e:	call   0x10007b02
10007d13:	mov    eax,DWORD PTR [ebp+0x8]
10007d16:	mov    edx,DWORD PTR [eax+0xc]
10007d19:	mov    ecx,DWORD PTR [esi+0x8]
10007d1c:	mov    eax,DWORD PTR [esi]
10007d1e:	not    ecx
10007d20:	and    ecx,0x1
10007d23:	shr    eax,cl
10007d25:	dec    eax
10007d26:	mov    esi,DWORD PTR [esi+0xc]
10007d29:	push   edi
10007d2a:	push   edx
10007d2b:	inc    eax
10007d2c:	push   eax
10007d2d:	push   esi
10007d2e:	push   ebx
10007d2f:	push   DWORD PTR [ebp-0x4]
10007d32:	call   0x10004483
10007d37:	test   eax,eax
10007d39:	pop    edi
10007d3a:	jne    0x10007d52
10007d3c:	jmp    0x10007cff
10007d3e:	push   DWORD PTR [ebp+0x8]
10007d41:	mov    ecx,esi
10007d43:	call   0x10007c2e
10007d48:	jmp    0x10007d52
10007d4a:	mov    ecx,DWORD PTR [ebp+0x8]
10007d4d:	call   0x10007abe
10007d52:	pop    esi
10007d53:	pop    ebx
10007d54:	leave  
10007d55:	ret    0x4
10007d58:	push   ebp
10007d59:	mov    ebp,esp
10007d5b:	push   esi
10007d5c:	mov    esi,ecx
10007d5e:	mov    ecx,DWORD PTR [esi+0x8]
10007d61:	mov    eax,DWORD PTR [esi]
10007d63:	not    ecx
10007d65:	and    ecx,0x1
10007d68:	shr    eax,cl
10007d6a:	dec    eax
10007d6b:	je     0x10007d99
10007d6d:	push   DWORD PTR [ebp+0xc]
10007d70:	mov    ecx,DWORD PTR [esi+0xc]
10007d73:	push   DWORD PTR [ebp+0x8]
10007d76:	inc    eax
10007d77:	push   0xffffffff
10007d79:	push   eax
10007d7a:	push   ecx
10007d7b:	call   DWORD PTR ds:0x10001140
10007d81:	add    esp,0x14
10007d84:	test   eax,eax
10007d86:	jl     0x10007d99
10007d88:	push   0x1
10007d8a:	push   0x7
10007d8c:	push   eax
10007d8d:	mov    ecx,esi
10007d8f:	call   0x10007b02
10007d94:	pop    esi
10007d95:	pop    ebp
10007d96:	ret    0x8
10007d99:	mov    eax,DWORD PTR [ebp+0x8]
10007d9c:	lea    ecx,[eax+0x1]
10007d9f:	mov    dl,BYTE PTR [eax]
10007da1:	inc    eax
10007da2:	test   dl,dl
10007da4:	jne    0x10007d9f
10007da6:	push   ebx
10007da7:	sub    eax,ecx
10007da9:	push   edi
10007daa:	lea    edi,[eax+0x1]
10007dad:	mov    ecx,DWORD PTR [esi+0x8]
10007db0:	mov    eax,DWORD PTR [esi]
10007db2:	not    ecx
10007db4:	and    ecx,0x1
10007db7:	shr    eax,cl
10007db9:	dec    eax
10007dba:	cmp    edi,eax
10007dbc:	jae    0x10007dc0
10007dbe:	mov    edi,eax
10007dc0:	cmp    edi,0x14
10007dc3:	jae    0x10007dc8
10007dc5:	push   0x14
10007dc7:	pop    edi
10007dc8:	mov    ebx,DWORD PTR ds:0x10001118
10007dce:	push   0x0
10007dd0:	push   0x7
10007dd2:	add    edi,edi
10007dd4:	push   edi
10007dd5:	mov    ecx,esi
10007dd7:	call   0x10007b02
10007ddc:	call   ebx
10007dde:	and    DWORD PTR [eax],0x0
10007de1:	mov    ecx,DWORD PTR [esi+0x8]
10007de4:	mov    eax,DWORD PTR [esi]
10007de6:	not    ecx
10007de8:	and    ecx,0x1
10007deb:	shr    eax,cl
10007ded:	dec    eax
10007dee:	push   DWORD PTR [ebp+0xc]
10007df1:	mov    ecx,DWORD PTR [esi+0xc]
10007df4:	push   DWORD PTR [ebp+0x8]
10007df7:	inc    eax
10007df8:	push   0xffffffff
10007dfa:	push   eax
10007dfb:	push   ecx
10007dfc:	call   DWORD PTR ds:0x10001140
10007e02:	add    esp,0x14
10007e05:	test   eax,eax
10007e07:	jge    0x10007e2f
10007e09:	call   ebx
10007e0b:	cmp    DWORD PTR [eax],0xc
10007e0e:	je     0x10007e42
10007e10:	call   ebx
10007e12:	cmp    DWORD PTR [eax],0x0
10007e15:	je     0x10007dce
10007e17:	call   ebx
10007e19:	cmp    DWORD PTR [eax],0x9
10007e1c:	je     0x10007dce
10007e1e:	call   ebx
10007e20:	cmp    DWORD PTR [eax],0x22
10007e23:	je     0x10007dce
10007e25:	push   0x80070459
10007e2a:	call   0x10006640
10007e2f:	push   0x1
10007e31:	push   0x7
10007e33:	push   eax
10007e34:	mov    ecx,esi
10007e36:	call   0x10007b02
10007e3b:	pop    edi
10007e3c:	pop    ebx
10007e3d:	jmp    0x10007d94
10007e42:	call   0x10006558
10007e47:	int3   
10007e48:	push   ebp
10007e49:	mov    ebp,esp
10007e4b:	push   esi
10007e4c:	mov    esi,ecx
10007e4e:	mov    ecx,DWORD PTR [esi+0x8]
10007e51:	mov    eax,DWORD PTR [esi]
10007e53:	not    ecx
10007e55:	and    ecx,0x1
10007e58:	shr    eax,cl
10007e5a:	dec    eax
10007e5b:	je     0x10007e89
10007e5d:	push   DWORD PTR [ebp+0xc]
10007e60:	mov    ecx,DWORD PTR [esi+0xc]
10007e63:	push   DWORD PTR [ebp+0x8]
10007e66:	inc    eax
10007e67:	push   0xffffffff
10007e69:	push   eax
10007e6a:	push   ecx
10007e6b:	call   DWORD PTR ds:0x10001138
10007e71:	add    esp,0x14
10007e74:	test   eax,eax
10007e76:	jl     0x10007e89
10007e78:	push   0x1
10007e7a:	push   0x4
10007e7c:	push   eax
10007e7d:	mov    ecx,esi
10007e7f:	call   0x10007b02
10007e84:	pop    esi
10007e85:	pop    ebp
10007e86:	ret    0x8
10007e89:	mov    eax,DWORD PTR [ebp+0x8]
10007e8c:	lea    ecx,[eax+0x2]
10007e8f:	mov    dx,WORD PTR [eax]
10007e92:	inc    eax
10007e93:	inc    eax
10007e94:	test   dx,dx
10007e97:	jne    0x10007e8f
10007e99:	sub    eax,ecx
10007e9b:	push   ebx
10007e9c:	sar    eax,1
10007e9e:	push   edi
10007e9f:	lea    edi,[eax+0x1]
10007ea2:	mov    ecx,DWORD PTR [esi+0x8]
10007ea5:	mov    eax,DWORD PTR [esi]
10007ea7:	not    ecx
10007ea9:	and    ecx,0x1
10007eac:	shr    eax,cl
10007eae:	dec    eax
10007eaf:	cmp    edi,eax
10007eb1:	jae    0x10007eb5
10007eb3:	mov    edi,eax
10007eb5:	cmp    edi,0x14
10007eb8:	jae    0x10007ebd
10007eba:	push   0x14
10007ebc:	pop    edi
10007ebd:	mov    ebx,DWORD PTR ds:0x10001118
10007ec3:	push   0x0
10007ec5:	push   0x4
10007ec7:	add    edi,edi
10007ec9:	push   edi
10007eca:	mov    ecx,esi
10007ecc:	call   0x10007b02
10007ed1:	call   ebx
10007ed3:	and    DWORD PTR [eax],0x0
10007ed6:	mov    ecx,DWORD PTR [esi+0x8]
10007ed9:	mov    eax,DWORD PTR [esi]
10007edb:	not    ecx
10007edd:	and    ecx,0x1
10007ee0:	shr    eax,cl
10007ee2:	dec    eax
10007ee3:	push   DWORD PTR [ebp+0xc]
10007ee6:	mov    ecx,DWORD PTR [esi+0xc]
10007ee9:	push   DWORD PTR [ebp+0x8]
10007eec:	inc    eax
10007eed:	push   0xffffffff
10007eef:	push   eax
10007ef0:	push   ecx
10007ef1:	call   DWORD PTR ds:0x10001138
10007ef7:	add    esp,0x14
10007efa:	test   eax,eax
10007efc:	jge    0x10007f24
10007efe:	call   ebx
10007f00:	cmp    DWORD PTR [eax],0xc
10007f03:	je     0x10007f37
10007f05:	call   ebx
10007f07:	cmp    DWORD PTR [eax],0x0
10007f0a:	je     0x10007ec3
10007f0c:	call   ebx
10007f0e:	cmp    DWORD PTR [eax],0x9
10007f11:	je     0x10007ec3
10007f13:	call   ebx
10007f15:	cmp    DWORD PTR [eax],0x22
10007f18:	je     0x10007ec3
10007f1a:	push   0x80070459
10007f1f:	call   0x10006640
10007f24:	push   0x1
10007f26:	push   0x4
10007f28:	push   eax
10007f29:	mov    ecx,esi
10007f2b:	call   0x10007b02
10007f30:	pop    edi
10007f31:	pop    ebx
10007f32:	jmp    0x10007e84
10007f37:	call   0x10006558
10007f3c:	int3   
10007f3d:	push   0x214
10007f42:	mov    eax,0x1000a797
10007f47:	call   0x10009aa1
10007f4c:	push   0x4
10007f4e:	mov    esi,ecx
10007f50:	call   0x10007a44
10007f55:	test   eax,eax
10007f57:	jne    0x10007fb9
10007f59:	push   0x1
10007f5b:	mov    ecx,esi
10007f5d:	call   0x10007a44
10007f62:	test   eax,eax
10007f64:	je     0x10007f70
10007f66:	push   esi
10007f67:	mov    ecx,esi
10007f69:	call   0x10007c2e
10007f6e:	jmp    0x10007fb9
10007f70:	push   0x200
10007f75:	lea    eax,[ebp-0x210]
10007f7b:	push   eax
10007f7c:	lea    ecx,[ebp-0x220]
10007f82:	call   0x10006823
10007f87:	mov    DWORD PTR [ebp-0x4],0x1
10007f8e:	lea    eax,[ebp-0x220]
10007f94:	push   eax
10007f95:	mov    ecx,esi
10007f97:	call   0x10007ca2
10007f9c:	lea    eax,[ebp-0x220]
10007fa2:	push   eax
10007fa3:	mov    ecx,esi
10007fa5:	call   0x10006876
10007faa:	or     DWORD PTR [ebp-0x4],0xffffffff
10007fae:	lea    ecx,[ebp-0x220]
10007fb4:	call   0x1000657d
10007fb9:	call   0x10009aeb
10007fbe:	ret    
10007fbf:	push   0x214
10007fc4:	mov    eax,0x1000a797
10007fc9:	call   0x10009aa1
10007fce:	mov    esi,DWORD PTR [ebp+0x8]
10007fd1:	push   0x4
10007fd3:	mov    edi,ecx
10007fd5:	call   0x10007a44
10007fda:	test   eax,eax
10007fdc:	jne    0x10008067
10007fe2:	mov    eax,DWORD PTR [esi]
10007fe4:	xor    ebx,ebx
10007fe6:	test   eax,eax
10007fe8:	je     0x10007fef
10007fea:	sub    eax,DWORD PTR [edi+0xc]
10007fed:	mov    ebx,eax
10007fef:	push   0x1
10007ff1:	mov    ecx,edi
10007ff3:	call   0x10007a44
10007ff8:	test   eax,eax
10007ffa:	je     0x10008006
10007ffc:	push   edi
10007ffd:	mov    ecx,edi
10007fff:	call   0x10007c2e
10008004:	jmp    0x1000804f
10008006:	push   0x200
1000800b:	lea    eax,[ebp-0x210]
10008011:	push   eax
10008012:	lea    ecx,[ebp-0x220]
10008018:	call   0x10006823
1000801d:	mov    DWORD PTR [ebp-0x4],0x1
10008024:	lea    eax,[ebp-0x220]
1000802a:	push   eax
1000802b:	mov    ecx,edi
1000802d:	call   0x10007ca2
10008032:	lea    eax,[ebp-0x220]
10008038:	push   eax
10008039:	mov    ecx,edi
1000803b:	call   0x10006876
10008040:	or     DWORD PTR [ebp-0x4],0xffffffff
10008044:	lea    ecx,[ebp-0x220]
1000804a:	call   0x1000657d
1000804f:	cmp    DWORD PTR [esi],0x0
10008052:	je     0x10008067
10008054:	mov    eax,DWORD PTR [edi+0xc]
10008057:	lea    eax,[eax+ebx*2]
1000805a:	mov    DWORD PTR [esi],eax
1000805c:	mov    eax,DWORD PTR [edi+0x8]
1000805f:	not    eax
10008061:	and    eax,0x1
10008064:	mov    DWORD PTR [esi+0x4],eax
10008067:	call   0x10009aeb
1000806c:	ret    0x4
1000806f:	push   ebp
10008070:	mov    ebp,esp
10008072:	mov    ecx,DWORD PTR [ebp+0x8]
10008075:	lea    eax,[ebp+0x10]
10008078:	push   eax
10008079:	push   DWORD PTR [ebp+0xc]
1000807c:	call   0x10007d58
10008081:	pop    ebp
10008082:	ret    
10008083:	push   ebp
10008084:	mov    ebp,esp
10008086:	push   esi
10008087:	push   edi
10008088:	mov    esi,ecx
1000808a:	mov    eax,DWORD PTR [esi+0x8]
1000808d:	and    eax,0x7
10008090:	sub    eax,0x0
10008093:	je     0x100080d2
10008095:	dec    eax
10008096:	mov    edi,DWORD PTR [ebp+0x8]
10008099:	jne    0x100080b6
1000809b:	push   0x1
1000809d:	mov    ecx,edi
1000809f:	call   0x10007a44
100080a4:	test   eax,eax
100080a6:	je     0x100080ac
100080a8:	mov    eax,edi
100080aa:	jmp    0x100080d5
100080ac:	push   DWORD PTR [ebp+0x10]
100080af:	mov    ecx,esi
100080b1:	call   0x10007fbf
100080b6:	push   0x4
100080b8:	mov    ecx,edi
100080ba:	call   0x10007a44
100080bf:	test   eax,eax
100080c1:	jne    0x100080a8
100080c3:	push   DWORD PTR [ebp+0xc]
100080c6:	mov    ecx,edi
100080c8:	call   0x10007ca2
100080cd:	mov    eax,DWORD PTR [ebp+0xc]
100080d0:	jmp    0x100080d5
100080d2:	mov    eax,DWORD PTR [ebp+0x8]
100080d5:	pop    edi
100080d6:	pop    esi
100080d7:	pop    ebp
100080d8:	ret    0xc
100080db:	push   ebp
100080dc:	mov    ebp,esp
100080de:	sub    esp,0xc
100080e1:	push   ebx
100080e2:	push   esi
100080e3:	push   edi
100080e4:	mov    edi,ecx
100080e6:	call   0x10004d36
100080eb:	test   BYTE PTR [edi+0x8],0x10
100080ef:	je     0x100080fd
100080f1:	push   0x1
100080f3:	push   DWORD PTR [edi+0x4]
100080f6:	mov    ecx,edi
100080f8:	call   0x10008ab2
100080fd:	push   0x0
100080ff:	push   edi
10008100:	lea    ecx,[ebp-0xc]
10008103:	call   0x100062f3
10008108:	mov    ebx,DWORD PTR [ebp+0x8]
1000810b:	lea    eax,[ebx+0x9]
1000810e:	lea    ecx,[eax-0x9]
10008111:	neg    eax
10008113:	sbb    eax,eax
10008115:	and    eax,ecx
10008117:	mov    esi,DWORD PTR [eax]
10008119:	sub    esi,DWORD PTR [ebp-0xc]
1000811c:	mov    ecx,DWORD PTR [eax+0x4]
1000811f:	sar    esi,cl
10008121:	mov    eax,DWORD PTR [edi+0x8]
10008124:	push   0x1
10008126:	and    eax,0x7
10008129:	push   eax
1000812a:	push   esi
1000812b:	mov    ecx,edi
1000812d:	call   0x10007b02
10008132:	mov    eax,DWORD PTR [edi+0xc]
10008135:	lea    eax,[eax+esi*2]
10008138:	mov    DWORD PTR [ebx],eax
1000813a:	mov    eax,DWORD PTR [edi+0x8]
1000813d:	not    eax
1000813f:	pop    edi
10008140:	and    eax,0x1
10008143:	pop    esi
10008144:	mov    DWORD PTR [ebx+0x4],eax
10008147:	pop    ebx
10008148:	leave  
10008149:	ret    0x4
1000814c:	push   0x218
10008151:	mov    eax,0x1000a7d5
10008156:	call   0x10009aa1
1000815b:	mov    ebx,DWORD PTR [ebp+0x8]
1000815e:	mov    esi,DWORD PTR [ebp+0x10]
10008161:	mov    edi,ecx
10008163:	mov    eax,DWORD PTR [edi+0x8]
10008166:	and    eax,0x7
10008169:	jne    0x1000818a
1000816b:	push   esi
1000816c:	call   0x10006876
10008171:	mov    ecx,edi
10008173:	call   0x10004d36
10008178:	mov    eax,DWORD PTR [edi+0xc]
1000817b:	mov    DWORD PTR [ebx],eax
1000817d:	mov    eax,DWORD PTR [edi+0x8]
10008180:	not    eax
10008182:	and    eax,0x1
10008185:	mov    DWORD PTR [ebx+0x4],eax
10008188:	jmp    0x10008208
1000818a:	push   0x200
1000818f:	lea    eax,[ebp-0x210]
10008195:	push   eax
10008196:	lea    ecx,[ebp-0x220]
1000819c:	call   0x10006823
100081a1:	mov    DWORD PTR [ebp-0x4],0x1
100081a8:	push   ebx
100081a9:	lea    eax,[ebp-0x220]
100081af:	push   eax
100081b0:	push   esi
100081b1:	mov    ecx,edi
100081b3:	call   0x10008083
100081b8:	mov    esi,eax
100081ba:	mov    ecx,DWORD PTR [edi+0x8]
100081bd:	mov    edx,DWORD PTR [ebp+0xc]
100081c0:	not    ecx
100081c2:	and    ecx,0x1
100081c5:	shl    edx,cl
100081c7:	mov    eax,DWORD PTR [esi]
100081c9:	mov    ecx,DWORD PTR [esi+0x8]
100081cc:	not    ecx
100081ce:	and    ecx,0x1
100081d1:	shr    eax,cl
100081d3:	dec    eax
100081d4:	shl    eax,cl
100081d6:	mov    ecx,edi
100081d8:	push   eax
100081d9:	push   edx
100081da:	push   ebx
100081db:	mov    DWORD PTR [ebp-0x224],eax
100081e1:	call   0x10008b34
100081e6:	mov    esi,DWORD PTR [esi+0xc]
100081e9:	push   DWORD PTR [ebp-0x224]
100081ef:	mov    ecx,edi
100081f1:	push   esi
100081f2:	push   DWORD PTR [ebx]
100081f4:	call   0x10008a93
100081f9:	or     DWORD PTR [ebp-0x4],0xffffffff
100081fd:	lea    ecx,[ebp-0x220]
10008203:	call   0x1000657d
10008208:	call   0x10009aeb
1000820d:	ret    0xc
10008210:	push   0x30
10008212:	mov    eax,0x1000a815
10008217:	call   0x10009a38
1000821c:	mov    esi,ecx
1000821e:	mov    ecx,DWORD PTR [ebp+0x18]
10008221:	call   0x1000700a
10008226:	mov    ecx,DWORD PTR [ebp+0x1c]
10008229:	mov    DWORD PTR [ebp-0x3c],eax
1000822c:	call   0x1000700a
10008231:	mov    ecx,DWORD PTR [ebp+0x20]
10008234:	mov    DWORD PTR [ebp-0x38],eax
10008237:	call   0x1000700a
1000823c:	mov    ecx,DWORD PTR [ebp+0x24]
1000823f:	mov    DWORD PTR [ebp-0x34],eax
10008242:	call   0x1000700a
10008247:	mov    ecx,DWORD PTR [ebp+0x28]
1000824a:	mov    DWORD PTR [ebp-0x30],eax
1000824d:	call   0x1000700a
10008252:	mov    ecx,DWORD PTR [ebp+0x2c]
10008255:	mov    DWORD PTR [ebp-0x2c],eax
10008258:	call   0x1000700a
1000825d:	mov    ecx,DWORD PTR [ebp+0x30]
10008260:	mov    DWORD PTR [ebp-0x28],eax
10008263:	call   0x1000700a
10008268:	mov    ecx,DWORD PTR [ebp+0x34]
1000826b:	mov    DWORD PTR [ebp-0x24],eax
1000826e:	call   0x1000700a
10008273:	mov    ecx,DWORD PTR [ebp+0x38]
10008276:	mov    DWORD PTR [ebp-0x20],eax
10008279:	call   0x1000700a
1000827e:	mov    ecx,DWORD PTR [ebp+0x3c]
10008281:	mov    DWORD PTR [ebp-0x1c],eax
10008284:	call   0x1000700a
10008289:	mov    DWORD PTR [ebp-0x18],eax
1000828c:	mov    eax,DWORD PTR [esi]
1000828e:	mov    ecx,DWORD PTR [esi+0x8]
10008291:	mov    edi,DWORD PTR [ebp+0x8]
10008294:	not    ecx
10008296:	and    ecx,0x1
10008299:	mov    edx,eax
1000829b:	shr    edx,cl
1000829d:	push   0x0
1000829f:	pop    ebx
100082a0:	dec    edx
100082a1:	je     0x1000831b
100082a3:	shr    eax,cl
100082a5:	push   ebx
100082a6:	push   0x4
100082a8:	mov    ecx,esi
100082aa:	dec    eax
100082ab:	push   eax
100082ac:	call   0x10007b02
100082b1:	mov    eax,DWORD PTR [esi]
100082b3:	mov    ecx,DWORD PTR [esi+0x8]
100082b6:	not    ecx
100082b8:	and    ecx,0x1
100082bb:	shr    eax,cl
100082bd:	dec    eax
100082be:	mov    ecx,DWORD PTR [esi+0xc]
100082c1:	lea    edx,[ebp-0x3c]
100082c4:	push   edx
100082c5:	inc    eax
100082c6:	push   eax
100082c7:	push   ecx
100082c8:	push   DWORD PTR [ebp+0x14]
100082cb:	mov    eax,edi
100082cd:	push   DWORD PTR [ebp+0x10]
100082d0:	or     eax,0x2000
100082d5:	push   DWORD PTR [ebp+0xc]
100082d8:	push   eax
100082d9:	call   0x100049bd
100082de:	cmp    eax,ebx
100082e0:	je     0x1000831b
100082e2:	mov    edx,DWORD PTR [esi]
100082e4:	mov    ecx,DWORD PTR [esi+0x8]
100082e7:	not    ecx
100082e9:	and    ecx,0x1
100082ec:	shr    edx,cl
100082ee:	dec    edx
100082ef:	cmp    eax,edx
100082f1:	jae    0x1000831b
100082f3:	mov    ecx,DWORD PTR [esi+0xc]
100082f6:	lea    ecx,[ecx+eax*2-0x2]
100082fa:	cmp    WORD PTR [ecx],0x20
100082fe:	jne    0x10008304
10008300:	mov    WORD PTR [ecx],bx
10008303:	dec    eax
10008304:	push   0x1
10008306:	push   0x4
10008308:	push   eax
10008309:	mov    ecx,esi
1000830b:	call   0x10007b02
10008310:	xor    eax,eax
10008312:	inc    eax
10008313:	call   0x10009ad7
10008318:	ret    0x38
1000831b:	lea    eax,[ebp-0x3c]
1000831e:	push   eax
1000831f:	push   ebx
10008320:	lea    eax,[ebp+0x18]
10008323:	push   eax
10008324:	push   DWORD PTR [ebp+0x14]
10008327:	or     edi,0x2100
1000832d:	push   DWORD PTR [ebp+0x10]
10008330:	mov    DWORD PTR [ebp+0x18],ebx
10008333:	push   DWORD PTR [ebp+0xc]
10008336:	push   edi
10008337:	call   0x100049bd
1000833c:	mov    ecx,DWORD PTR [ebp+0x18]
1000833f:	mov    DWORD PTR [ebp-0x14],ecx
10008342:	mov    DWORD PTR [ebp-0x10],ebx
10008345:	cmp    ecx,ebx
10008347:	je     0x10008350
10008349:	mov    DWORD PTR [ebp-0x10],0x1
10008350:	mov    DWORD PTR [ebp-0x4],0x2
10008357:	cmp    eax,ebx
10008359:	jne    0x1000836b
1000835b:	or     DWORD PTR [ebp-0x4],0xffffffff
1000835f:	lea    ecx,[ebp-0x14]
10008362:	call   0x10007ae4
10008367:	mov    eax,ebx
10008369:	jmp    0x10008313
1000836b:	mov    ecx,DWORD PTR [ebp+0x18]
1000836e:	lea    eax,[ecx+eax*2-0x2]
10008372:	cmp    WORD PTR [eax],0x20
10008376:	jne    0x1000837b
10008378:	mov    WORD PTR [eax],bx
1000837b:	push   DWORD PTR [ebp+0x18]
1000837e:	mov    ecx,esi
10008380:	call   0x10007b80
10008385:	xor    ebx,ebx
10008387:	inc    ebx
10008388:	jmp    0x1000835b
1000838a:	push   0x214
1000838f:	mov    eax,0x1000a797
10008394:	call   0x10009aa1
10008399:	mov    esi,DWORD PTR [ebp+0x8]
1000839c:	mov    edi,DWORD PTR [ebp+0xc]
1000839f:	mov    ebx,ecx
100083a1:	push   0x200
100083a6:	lea    eax,[ebp-0x210]
100083ac:	push   eax
100083ad:	lea    ecx,[ebp-0x220]
100083b3:	call   0x10006823
100083b8:	mov    DWORD PTR [ebp-0x4],0x1
100083bf:	push   edi
100083c0:	push   esi
100083c1:	lea    ecx,[ebp-0x220]
100083c7:	call   0x10007e48
100083cc:	lea    eax,[ebp-0x220]
100083d2:	push   eax
100083d3:	mov    ecx,ebx
100083d5:	call   0x100068a3
100083da:	or     DWORD PTR [ebp-0x4],0xffffffff
100083de:	lea    ecx,[ebp-0x220]
100083e4:	call   0x1000657d
100083e9:	call   0x10009aeb
100083ee:	ret    0x8
100083f1:	push   ebp
100083f2:	mov    ebp,esp
100083f4:	mov    ecx,DWORD PTR [ebp+0x8]
100083f7:	lea    eax,[ebp+0x10]
100083fa:	push   eax
100083fb:	push   DWORD PTR [ebp+0xc]
100083fe:	call   0x1000838a
10008403:	pop    ebp
10008404:	ret    
10008405:	push   ebp
10008406:	mov    ebp,esp
10008408:	push   esi
10008409:	push   DWORD PTR [ebp+0x18]
1000840c:	mov    esi,ecx
1000840e:	push   DWORD PTR [ebp+0x14]
10008411:	push   0xff
10008416:	push   esi
10008417:	call   DWORD PTR ds:0x10001114
1000841d:	add    esp,0x10
10008420:	cmp    ax,0x100
10008424:	lea    ecx,[esi+0x100]
1000842a:	mov    WORD PTR [ecx],ax
1000842d:	jae    0x10008438
1000842f:	movzx  eax,ax
10008432:	mov    BYTE PTR [eax+esi*1],0x0
10008436:	jmp    0x1000843d
10008438:	mov    WORD PTR [ecx],0xff
1000843d:	mov    al,BYTE PTR [ebp+0x8]
10008440:	inc    WORD PTR [ecx]
10008443:	mov    BYTE PTR [esi+0x108],al
10008449:	mov    eax,DWORD PTR [ebp+0xc]
1000844c:	mov    BYTE PTR [esi+0xff],0x0
10008453:	mov    DWORD PTR [esi+0x104],eax
10008459:	mov    DWORD PTR [esi+0x10c],esi
1000845f:	pop    esi
10008460:	pop    ebp
10008461:	ret    0x14
10008464:	call   0x100042be
10008469:	test   eax,eax
1000846b:	je     0x10008471
1000846d:	xor    eax,eax
1000846f:	jmp    0x10008483
10008471:	push   0x4010
10008476:	push   0x0
10008478:	push   DWORD PTR ds:0x1000ccf8
1000847e:	call   0x10004090
10008483:	ret    0x4
10008486:	push   ebp
10008487:	mov    ebp,esp
10008489:	push   DWORD PTR [ebp+0x8]
1000848c:	push   0x0
1000848e:	push   DWORD PTR ds:0x1000ccf8
10008494:	call   0x100040ab
10008499:	pop    ebp
1000849a:	ret    0x4
1000849d:	push   ebp
1000849e:	mov    ebp,esp
100084a0:	mov    eax,ecx
100084a2:	mov    ecx,DWORD PTR [ebp+0x8]
100084a5:	mov    DWORD PTR [eax],ecx
100084a7:	mov    ecx,DWORD PTR [ebp+0xc]
100084aa:	mov    DWORD PTR [eax+0x4],ecx
100084ad:	mov    ecx,0xcfcfcfcf
100084b2:	mov    DWORD PTR [eax+0x4008],ecx
100084b8:	mov    DWORD PTR [eax+0x400c],ecx
100084be:	pop    ebp
100084bf:	ret    0x8
100084c2:	mov    eax,0xcfcfcfcf
100084c7:	cmp    DWORD PTR [ecx+0x4008],eax
100084cd:	jne    0x100084db
100084cf:	cmp    DWORD PTR [ecx+0x400c],eax
100084d5:	jne    0x100084db
100084d7:	xor    eax,eax
100084d9:	inc    eax
100084da:	ret    
100084db:	xor    eax,eax
100084dd:	ret    
100084de:	push   0x4
100084e0:	mov    eax,0x1000a839
100084e5:	call   0x10009a38
100084ea:	mov    esi,ecx
100084ec:	xor    ebx,ebx
100084ee:	push   0x4010
100084f3:	mov    DWORD PTR [esi+0x28],ebx
100084f6:	mov    DWORD PTR [esi+0x20],ebx
100084f9:	mov    DWORD PTR [esi+0x1c],ebx
100084fc:	call   0x10008464
10008501:	mov    DWORD PTR [ebp-0x10],eax
10008504:	mov    DWORD PTR [ebp-0x4],ebx
10008507:	cmp    eax,ebx
10008509:	je     0x10008525
1000850b:	mov    ecx,0xcfcfcfcf
10008510:	mov    DWORD PTR [eax],ebx
10008512:	mov    DWORD PTR [eax+0x4],ebx
10008515:	mov    DWORD PTR [eax+0x4008],ecx
1000851b:	mov    DWORD PTR [eax+0x400c],ecx
10008521:	mov    edi,eax
10008523:	jmp    0x10008527
10008525:	xor    edi,edi
10008527:	or     DWORD PTR [ebp-0x4],0xffffffff
1000852b:	cmp    edi,ebx
1000852d:	je     0x10008562
1000852f:	push   0x1000c0d0
10008534:	call   DWORD PTR ds:0x1000106c
1000853a:	mov    DWORD PTR [edi],edi
1000853c:	mov    DWORD PTR [edi+0x4],edi
1000853f:	xor    eax,eax
10008541:	inc    eax
10008542:	mov    DWORD PTR [esi+0x20],edi
10008545:	mov    DWORD PTR [esi+0x1c],edi
10008548:	mov    DWORD PTR [esi],ebx
1000854a:	mov    DWORD PTR [esi+0x4],ebx
1000854d:	mov    DWORD PTR [esi+0x8],eax
10008550:	mov    DWORD PTR [esi+0xc],ebx
10008553:	mov    DWORD PTR [esi+0x10],ebx
10008556:	mov    DWORD PTR [esi+0x18],ebx
10008559:	mov    DWORD PTR [esi+0x24],ebx
1000855c:	mov    DWORD PTR [esi+0x28],ebx
1000855f:	mov    DWORD PTR [esi+0x2c],eax
10008562:	mov    eax,esi
10008564:	call   0x10009ad7
10008569:	ret    
1000856a:	push   esi
1000856b:	push   edi
1000856c:	mov    edi,ecx
1000856e:	mov    esi,DWORD PTR [edi+0x1c]
10008571:	test   esi,esi
10008573:	je     0x10008590
10008575:	mov    eax,esi
10008577:	mov    esi,DWORD PTR [esi+0x4]
1000857a:	push   eax
1000857b:	call   0x10008486
10008580:	push   0x1000c0d0
10008585:	call   DWORD PTR ds:0x10001070
1000858b:	cmp    esi,DWORD PTR [edi+0x1c]
1000858e:	jne    0x10008575
10008590:	pop    edi
10008591:	pop    esi
10008592:	ret    
10008593:	push   esi
10008594:	mov    esi,ecx
10008596:	call   DWORD PTR ds:0x10001024
1000859c:	and    DWORD PTR [esi+0x8],0x0
100085a0:	and    DWORD PTR [esi+0x18],0x0
100085a4:	mov    DWORD PTR [esi+0x4],eax
100085a7:	mov    eax,DWORD PTR [esi+0x20]
100085aa:	mov    DWORD PTR [esi+0x28],eax
100085ad:	add    eax,0x4008
100085b2:	mov    DWORD PTR [esi+0xc],eax
100085b5:	pop    esi
100085b6:	ret    
100085b7:	cmp    DWORD PTR [ecx+0x1c],0x0
100085bb:	je     0x100085d1
100085bd:	mov    ecx,DWORD PTR [ecx+0x28]
100085c0:	test   ecx,ecx
100085c2:	je     0x100085cd
100085c4:	call   0x100084c2
100085c9:	test   eax,eax
100085cb:	je     0x100085d1
100085cd:	xor    eax,eax
100085cf:	inc    eax
100085d0:	ret    
100085d1:	xor    eax,eax
100085d3:	ret    
100085d4:	rdtsc  
100085d6:	ret    
100085d7:	call   0x100042aa
100085dc:	push   DWORD PTR ds:0x1000c0e0
100085e2:	call   0x10004042
100085e7:	call   0x100042b4
100085ec:	ret    0x4
100085ef:	call   0x100042aa
100085f4:	push   DWORD PTR ds:0x1000c0e0
100085fa:	call   0x10004057
100085ff:	call   0x100042b4
10008604:	ret    0x4
10008607:	push   ebp
10008608:	mov    ebp,esp
1000860a:	push   esi
1000860b:	mov    esi,ecx
1000860d:	call   0x1000856a
10008612:	test   BYTE PTR [ebp+0x8],0x1
10008616:	je     0x1000861f
10008618:	push   esi
10008619:	call   0x10003eeb
1000861e:	pop    ecx
1000861f:	mov    eax,esi
10008621:	pop    esi
10008622:	pop    ebp
10008623:	ret    0x4
10008626:	and    DWORD PTR ds:0x1000cd04,0x0
1000862d:	ret    
1000862e:	push   ebp
1000862f:	mov    ebp,esp
10008631:	push   esi
10008632:	mov    esi,DWORD PTR ds:0x1000c0c8
10008638:	push   0xc
1000863a:	call   0x100079d8
1000863f:	test   al,0x1
10008641:	je     0x10008646
10008643:	imul   esi,esi,0x5
10008646:	mov    eax,DWORD PTR [ebp+0x8]
10008649:	shl    eax,0xe
1000864c:	cmp    eax,esi
1000864e:	pop    esi
1000864f:	jb     0x10008655
10008651:	xor    eax,eax
10008653:	jmp    0x10008667
10008655:	mov    eax,ds:0x1000c0d0
1000865a:	shl    eax,0xe
1000865d:	cmp    eax,DWORD PTR ds:0x1000c0cc
10008663:	sbb    eax,eax
10008665:	neg    eax
10008667:	pop    ebp
10008668:	ret    0x4
1000866b:	push   ebp
1000866c:	mov    ebp,esp
1000866e:	sub    esp,0x12c
10008674:	mov    eax,ds:0x1000c118
10008679:	xor    eax,ebp
1000867b:	mov    DWORD PTR [ebp-0x4],eax
1000867e:	and    WORD PTR [ebp-0x14],0x0
10008683:	lea    eax,[ebp+0x18]
10008686:	push   eax
10008687:	push   DWORD PTR [ebp+0x14]
1000868a:	lea    ecx,[ebp-0x114]
10008690:	push   DWORD PTR [ebp+0x10]
10008693:	push   DWORD PTR [ebp+0xc]
10008696:	push   DWORD PTR [ebp+0x8]
10008699:	call   0x10008405
1000869e:	mov    ecx,DWORD PTR [ebp-0x8]
100086a1:	mov    DWORD PTR [ebp-0x118],ecx
100086a7:	movzx  ecx,WORD PTR [ebp-0x14]
100086ab:	push   0x3
100086ad:	lea    eax,[ebp-0x10]
100086b0:	mov    DWORD PTR [ebp-0x120],eax
100086b6:	mov    DWORD PTR [ebp-0x124],ecx
100086bc:	lea    eax,[ebp-0xc]
100086bf:	lea    ecx,[ebp-0x12c]
100086c5:	push   ecx
100086c6:	mov    DWORD PTR [ebp-0x11c],eax
100086cc:	xor    eax,eax
100086ce:	lea    ecx,[ebp-0x120]
100086d4:	push   ecx
100086d5:	mov    ecx,DWORD PTR ds:0x1000ccfc
100086db:	inc    eax
100086dc:	push   eax
100086dd:	push   0x2
100086df:	push   0x10001310
100086e4:	mov    DWORD PTR [ebp-0x12c],0x4
100086ee:	mov    DWORD PTR [ebp-0x128],eax
100086f4:	call   DWORD PTR ds:0x1000cd00
100086fa:	mov    ecx,DWORD PTR [ebp-0x4]
100086fd:	xor    ecx,ebp
100086ff:	call   0x10009a23
10008704:	leave  
10008705:	ret    
10008706:	push   0x4
10008708:	mov    eax,0x1000a839
1000870d:	call   0x10009a38
10008712:	mov    esi,ecx
10008714:	mov    eax,DWORD PTR [esi+0x28]
10008717:	mov    ecx,DWORD PTR [esi+0xc]
1000871a:	sub    ecx,eax
1000871c:	sub    ecx,0x8
1000871f:	push   ecx
10008720:	add    eax,0x8
10008723:	push   0x0
10008725:	push   eax
10008726:	call   0x10009bb8
1000872b:	mov    eax,DWORD PTR [esi+0x28]
1000872e:	add    esp,0xc
10008731:	cmp    eax,DWORD PTR [esi+0x1c]
10008734:	jne    0x1000878e
10008736:	push   DWORD PTR [esi+0x2c]
10008739:	call   0x1000862e
1000873e:	test   eax,eax
10008740:	je     0x1000878e
10008742:	push   0x4010
10008747:	call   0x10008464
1000874c:	mov    ecx,eax
1000874e:	mov    DWORD PTR [ebp-0x10],ecx
10008751:	and    DWORD PTR [ebp-0x4],0x0
10008755:	test   ecx,ecx
10008757:	je     0x10008768
10008759:	push   DWORD PTR [esi+0x1c]
1000875c:	push   DWORD PTR [esi+0x20]
1000875f:	call   0x1000849d
10008764:	mov    edi,eax
10008766:	jmp    0x1000876a
10008768:	xor    edi,edi
1000876a:	or     DWORD PTR [ebp-0x4],0xffffffff
1000876e:	test   edi,edi
10008770:	je     0x1000878e
10008772:	push   0x1000c0d0
10008777:	call   DWORD PTR ds:0x1000106c
1000877d:	mov    eax,DWORD PTR [esi+0x1c]
10008780:	inc    DWORD PTR [esi+0x2c]
10008783:	mov    DWORD PTR [eax],edi
10008785:	mov    eax,DWORD PTR [esi+0x20]
10008788:	mov    DWORD PTR [eax+0x4],edi
1000878b:	mov    DWORD PTR [esi+0x1c],edi
1000878e:	mov    eax,DWORD PTR [esi+0x28]
10008791:	mov    eax,DWORD PTR [eax]
10008793:	cmp    eax,DWORD PTR [esi+0x20]
10008796:	mov    DWORD PTR [esi+0x28],eax
10008799:	jne    0x100087a2
1000879b:	mov    DWORD PTR [esi+0x18],0x1
100087a2:	mov    ecx,DWORD PTR [esi+0x28]
100087a5:	mov    eax,0xffe
100087aa:	sub    eax,DWORD PTR [ebp+0x8]
100087ad:	lea    eax,[ecx+eax*4]
100087b0:	mov    DWORD PTR [esi+0xc],eax
100087b3:	call   0x10009ad7
100087b8:	ret    0x4
100087bb:	push   ebp
100087bc:	mov    ebp,esp
100087be:	push   ebx
100087bf:	push   esi
100087c0:	push   edi
100087c1:	mov    esi,ecx
100087c3:	mov    edi,DWORD PTR [ebp+0x10]
100087c6:	sub    edi,DWORD PTR ds:0x1000c100
100087cc:	mov    ebx,DWORD PTR [ebp+0xc]
100087cf:	mov    eax,DWORD PTR [esi+0xc]
100087d2:	lea    ecx,[ebx*4+0x10]
100087d9:	sub    eax,ecx
100087db:	mov    ecx,DWORD PTR [esi+0x28]
100087de:	add    ecx,0x8
100087e1:	cmp    eax,ecx
100087e3:	jae    0x100087ed
100087e5:	push   ebx
100087e6:	mov    ecx,esi
100087e8:	call   0x10008706
100087ed:	mov    DWORD PTR [esi+0xc],eax
100087f0:	mov    esi,eax
100087f2:	call   0x100085d4
100087f7:	mov    DWORD PTR [esi+0x8],eax
100087fa:	mov    eax,DWORD PTR [ebp+0x8]
100087fd:	mov    DWORD PTR [esi+0x4],eax
10008800:	lea    eax,[edi+edi*1]
10008803:	or     eax,ebx
10008805:	test   ebx,ebx
10008807:	mov    DWORD PTR [esi+0xc],edx
1000880a:	mov    DWORD PTR [esi],eax
1000880c:	jle    0x10008824
1000880e:	mov    eax,DWORD PTR [ebp+0x14]
10008811:	add    eax,0xfffffffc
10008814:	lea    ecx,[esi+0x10]
10008817:	add    eax,0x4
1000881a:	mov    edx,DWORD PTR [eax]
1000881c:	mov    DWORD PTR [ecx],edx
1000881e:	add    ecx,0x4
10008821:	dec    ebx
10008822:	jne    0x10008817
10008824:	pop    edi
10008825:	pop    esi
10008826:	pop    ebx
10008827:	pop    ebp
10008828:	ret    0x10
1000882b:	push   esi
1000882c:	mov    esi,ecx
1000882e:	cmp    DWORD PTR [esi+0x4],0x0
10008832:	je     0x1000883f
10008834:	push   DWORD PTR [esi]
10008836:	call   0x100085ef
1000883b:	and    DWORD PTR [esi+0x4],0x0
1000883f:	pop    esi
10008840:	ret    
10008841:	push   0x4
10008843:	mov    eax,0x1000a85c
10008848:	call   0x10009a38
1000884d:	mov    esi,ecx
1000884f:	mov    DWORD PTR [ebp-0x10],esi
10008852:	or     DWORD PTR [ebp-0x4],0xffffffff
10008856:	cmp    DWORD PTR [esi+0x4],0x0
1000885a:	je     0x10008867
1000885c:	push   DWORD PTR [esi]
1000885e:	call   0x100085ef
10008863:	and    DWORD PTR [esi+0x4],0x0
10008867:	call   0x10009ad7
1000886c:	ret    
1000886d:	push   0x20
1000886f:	mov    eax,0x1000a88f
10008874:	call   0x10009a6b
10008879:	push   DWORD PTR ds:0x1000c0d8
1000887f:	call   0x100079d8
10008884:	mov    esi,eax
10008886:	mov    DWORD PTR [ebp-0x18],esi
10008889:	xor    ebx,ebx
1000888b:	cmp    esi,ebx
1000888d:	jne    0x10008a5c
10008893:	call   0x10003e11
10008898:	cmp    DWORD PTR ds:0x1000cd04,eax
1000889e:	je     0x10008a5a
100088a4:	cmp    DWORD PTR ds:0x1000ccf8,ebx
100088aa:	je     0x10008a5a
100088b0:	call   0x10003e11
100088b5:	mov    ecx,DWORD PTR ds:0x1000ccc8
100088bb:	cmp    ecx,eax
100088bd:	je     0x10008a5a
100088c3:	call   0x100042be
100088c8:	test   eax,eax
100088ca:	jne    0x10008a5a
100088d0:	mov    eax,ds:0x1000c0e0
100088d5:	mov    DWORD PTR [ebp-0x20],eax
100088d8:	mov    DWORD PTR [ebp-0x1c],ebx
100088db:	push   0x2
100088dd:	pop    edi
100088de:	mov    DWORD PTR [ebp-0x4],edi
100088e1:	mov    BYTE PTR [ebp-0x4],0x3
100088e5:	cmp    DWORD PTR [ebp-0x20],ebx
100088e8:	je     0x100088f9
100088ea:	push   DWORD PTR [ebp-0x20]
100088ed:	call   0x100085d7
100088f2:	mov    DWORD PTR [ebp-0x1c],0x1
100088f9:	call   0x10003e11
100088fe:	mov    ds:0x1000cd04,eax
10008903:	push   ebx
10008904:	push   DWORD PTR ds:0x1000c0d8
1000890a:	call   0x10004119
1000890f:	mov    DWORD PTR [ebp-0x4],edi
10008912:	cmp    DWORD PTR ds:0x1000c0c0,ebx
10008918:	je     0x10008a40
1000891e:	mov    DWORD PTR [ebp-0x18],ebx
10008921:	mov    eax,ds:0x1000c0dc
10008926:	test   eax,eax
10008928:	jle    0x100089d7
1000892e:	call   0x100085d4
10008933:	add    eax,0xc0000000
10008938:	adc    edx,0xffffffff
1000893b:	mov    esi,DWORD PTR ds:0x1000c0d4
10008941:	mov    DWORD PTR [ebp-0x14],ebx
10008944:	jmp    0x10008998
10008946:	mov    eax,0x1000894c
1000894b:	ret    
1000894c:	xor    ebx,ebx
1000894e:	mov    esi,DWORD PTR [ebp-0x18]
10008951:	jmp    0x10008a40
10008956:	cmp    DWORD PTR [esi+0x8],ebx
10008959:	je     0x10008996
1000895b:	mov    ecx,DWORD PTR [esi+0xc]
1000895e:	mov    edi,DWORD PTR [ecx+0x8]
10008961:	mov    DWORD PTR [ebp-0x28],edi
10008964:	mov    ecx,DWORD PTR [ecx+0xc]
10008967:	cmp    ecx,edx
10008969:	jb     0x1000899e
1000896b:	ja     0x10008971
1000896d:	cmp    edi,eax
1000896f:	jb     0x1000899e
10008971:	mov    edi,DWORD PTR [ebp-0x14]
10008974:	cmp    edi,ebx
10008976:	jne    0x1000897d
10008978:	mov    DWORD PTR [ebp-0x14],esi
1000897b:	jmp    0x10008996
1000897d:	mov    edi,DWORD PTR [edi+0xc]
10008980:	mov    ebx,DWORD PTR [edi+0xc]
10008983:	cmp    ebx,ecx
10008985:	jb     0x10008994
10008987:	ja     0x10008991
10008989:	mov    ecx,DWORD PTR [edi+0x8]
1000898c:	cmp    ecx,DWORD PTR [ebp-0x28]
1000898f:	jbe    0x10008994
10008991:	mov    DWORD PTR [ebp-0x14],esi
10008994:	xor    ebx,ebx
10008996:	mov    esi,DWORD PTR [esi]
10008998:	cmp    esi,ebx
1000899a:	jne    0x10008956
1000899c:	jmp    0x100089b0
1000899e:	mov    DWORD PTR [ebp-0x18],0x1
100089a5:	push   0x1000c0dc
100089aa:	call   DWORD PTR ds:0x10001070
100089b0:	push   ebx
100089b1:	call   0x1000862e
100089b6:	test   eax,eax
100089b8:	jne    0x100089d3
100089ba:	cmp    esi,ebx
100089bc:	jne    0x10008a1b
100089be:	mov    esi,DWORD PTR [ebp-0x14]
100089c1:	mov    DWORD PTR [ebp-0x18],0x1
100089c8:	push   0x1000c0dc
100089cd:	call   DWORD PTR ds:0x10001070
100089d3:	cmp    esi,ebx
100089d5:	jne    0x10008a1b
100089d7:	call   0x100042be
100089dc:	test   eax,eax
100089de:	jne    0x10008a40
100089e0:	push   0x10001320
100089e5:	push   0x30
100089e7:	call   0x10003eb0
100089ec:	pop    ecx
100089ed:	pop    ecx
100089ee:	cmp    eax,ebx
100089f0:	je     0x100089fd
100089f2:	mov    ecx,eax
100089f4:	call   0x100084de
100089f9:	mov    esi,eax
100089fb:	jmp    0x100089ff
100089fd:	xor    esi,esi
100089ff:	cmp    esi,ebx
10008a01:	je     0x10008a17
10008a03:	mov    ecx,esi
10008a05:	call   0x100085b7
10008a0a:	test   eax,eax
10008a0c:	jne    0x10008a1b
10008a0e:	push   0x1
10008a10:	mov    ecx,esi
10008a12:	call   0x10008607
10008a17:	xor    esi,esi
10008a19:	jmp    0x10008a40
10008a1b:	mov    ecx,esi
10008a1d:	call   0x10008593
10008a22:	push   esi
10008a23:	push   DWORD PTR ds:0x1000c0d8
10008a29:	call   0x10004119
10008a2e:	cmp    DWORD PTR [ebp-0x18],ebx
10008a31:	jne    0x10008a40
10008a33:	mov    eax,ds:0x1000c0d4
10008a38:	mov    DWORD PTR [esi],eax
10008a3a:	mov    DWORD PTR ds:0x1000c0d4,esi
10008a40:	mov    BYTE PTR [ebp-0x4],0x1
10008a44:	mov    DWORD PTR ds:0x1000cd04,ebx
10008a4a:	or     DWORD PTR [ebp-0x4],0xffffffff
10008a4e:	lea    ecx,[ebp-0x20]
10008a51:	call   0x10008841
10008a56:	mov    eax,esi
10008a58:	jmp    0x10008a5c
10008a5a:	xor    eax,eax
10008a5c:	call   0x10009ad7
10008a61:	ret    
10008a62:	push   ebp
10008a63:	mov    ebp,esp
10008a65:	push   DWORD PTR ds:0x1000c0d8
10008a6b:	call   0x100079d8
10008a70:	test   eax,eax
10008a72:	jne    0x10008a7d
10008a74:	call   0x1000886d
10008a79:	test   eax,eax
10008a7b:	je     0x10008a91
10008a7d:	lea    ecx,[ebp+0x14]
10008a80:	push   ecx
10008a81:	push   DWORD PTR [ebp+0x10]
10008a84:	mov    ecx,eax
10008a86:	push   DWORD PTR [ebp+0xc]
10008a89:	push   DWORD PTR [ebp+0x8]
10008a8c:	call   0x100087bb
10008a91:	pop    ebp
10008a92:	ret    
10008a93:	push   ebp
10008a94:	mov    ebp,esp
10008a96:	cmp    DWORD PTR [ebp+0x10],0x0
10008a9a:	je     0x10008aae
10008a9c:	push   DWORD PTR [ebp+0x10]
10008a9f:	push   DWORD PTR [ebp+0xc]
10008aa2:	push   DWORD PTR [ebp+0x8]
10008aa5:	call   DWORD PTR ds:0x10001120
10008aab:	add    esp,0xc
10008aae:	pop    ebp
10008aaf:	ret    0xc
10008ab2:	push   ebp
10008ab3:	mov    ebp,esp
10008ab5:	push   ebx
10008ab6:	mov    ebx,DWORD PTR [ebp+0x8]
10008ab9:	push   esi
10008aba:	push   edi
10008abb:	xor    edi,edi
10008abd:	test   ebx,ebx
10008abf:	mov    esi,ecx
10008ac1:	jbe    0x10008adf
10008ac3:	push   ebx
10008ac4:	call   0x10003e6c
10008ac9:	cmp    DWORD PTR [ebp+0xc],0x1
10008acd:	pop    ecx
10008ace:	mov    edi,eax
10008ad0:	jne    0x10008adf
10008ad2:	push   DWORD PTR [esi]
10008ad4:	mov    ecx,esi
10008ad6:	push   DWORD PTR [esi+0xc]
10008ad9:	push   edi
10008ada:	call   0x10008a93
10008adf:	test   BYTE PTR [esi+0x8],0x8
10008ae3:	je     0x10008aee
10008ae5:	push   DWORD PTR [esi+0xc]
10008ae8:	call   0x10003eeb
10008aed:	pop    ecx
10008aee:	test   ebx,ebx
10008af0:	mov    DWORD PTR [esi+0xc],edi
10008af3:	mov    DWORD PTR [esi+0x4],ebx
10008af6:	jbe    0x10008afe
10008af8:	or     DWORD PTR [esi+0x8],0x8
10008afc:	jmp    0x10008b02
10008afe:	and    DWORD PTR [esi+0x8],0xfffffff7
10008b02:	and    DWORD PTR [esi+0x8],0xffffffef
10008b06:	pop    edi
10008b07:	pop    esi
10008b08:	pop    ebx
10008b09:	pop    ebp
10008b0a:	ret    0x8
10008b0d:	push   ebp
10008b0e:	mov    ebp,esp
10008b10:	push   esi
10008b11:	push   edi
10008b12:	mov    esi,ecx
10008b14:	mov    edi,DWORD PTR [ebp+0x8]
10008b17:	cmp    edi,DWORD PTR [esi+0x4]
10008b1a:	jbe    0x10008b2c
10008b1c:	push   DWORD PTR [ebp+0xc]
10008b1f:	mov    eax,edi
10008b21:	imul   eax,eax,0x3
10008b24:	shr    eax,1
10008b26:	push   eax
10008b27:	call   0x10008ab2
10008b2c:	mov    DWORD PTR [esi],edi
10008b2e:	pop    edi
10008b2f:	pop    esi
10008b30:	pop    ebp
10008b31:	ret    0x8
10008b34:	push   ebp
10008b35:	mov    ebp,esp
10008b37:	push   ecx
10008b38:	mov    eax,DWORD PTR [ebp+0x8]
10008b3b:	mov    eax,DWORD PTR [eax]
10008b3d:	mov    edx,DWORD PTR [ebp+0xc]
10008b40:	push   ebx
10008b41:	push   esi
10008b42:	mov    esi,ecx
10008b44:	mov    ecx,DWORD PTR [esi+0xc]
10008b47:	mov    ebx,DWORD PTR [esi]
10008b49:	sub    eax,ecx
10008b4b:	push   edi
10008b4c:	mov    edi,DWORD PTR [ebp+0x10]
10008b4f:	mov    DWORD PTR [ebp-0x4],eax
10008b52:	add    eax,edx
10008b54:	sub    edi,edx
10008b56:	mov    DWORD PTR [ebp+0xc],eax
10008b59:	jns    0x10008b90
10008b5b:	lea    edx,[ecx+eax*1]
10008b5e:	sub    ebx,eax
10008b60:	push   ebx
10008b61:	add    ecx,edi
10008b63:	add    ecx,eax
10008b65:	push   edx
10008b66:	push   ecx
10008b67:	mov    ecx,esi
10008b69:	call   0x10008a93
10008b6e:	mov    ebx,DWORD PTR [esi]
10008b70:	add    ebx,edi
10008b72:	cmp    ebx,DWORD PTR [esi+0x4]
10008b75:	jbe    0x10008b81
10008b77:	push   0x1
10008b79:	push   ebx
10008b7a:	mov    ecx,esi
10008b7c:	call   0x10008ab2
10008b81:	mov    DWORD PTR [esi],ebx
10008b83:	mov    eax,DWORD PTR [esi+0xc]
10008b86:	add    eax,DWORD PTR [ebp-0x4]
10008b89:	mov    ecx,DWORD PTR [ebp+0x8]
10008b8c:	mov    DWORD PTR [ecx],eax
10008b8e:	jmp    0x10008bc5
10008b90:	test   edi,edi
10008b92:	jle    0x10008bc5
10008b94:	push   0x1
10008b96:	lea    eax,[ebx+edi*1]
10008b99:	push   eax
10008b9a:	mov    ecx,esi
10008b9c:	call   0x10008b0d
10008ba1:	mov    eax,DWORD PTR [esi+0xc]
10008ba4:	add    eax,DWORD PTR [ebp-0x4]
10008ba7:	mov    ecx,DWORD PTR [ebp+0x8]
10008baa:	mov    DWORD PTR [ecx],eax
10008bac:	mov    ecx,DWORD PTR [ebp+0xc]
10008baf:	mov    eax,DWORD PTR [esi+0xc]
10008bb2:	lea    edx,[eax+ecx*1]
10008bb5:	sub    ebx,ecx
10008bb7:	push   ebx
10008bb8:	add    eax,edi
10008bba:	add    eax,ecx
10008bbc:	push   edx
10008bbd:	push   eax
10008bbe:	mov    ecx,esi
10008bc0:	call   0x10008a93
10008bc5:	pop    edi
10008bc6:	pop    esi
10008bc7:	pop    ebx
10008bc8:	leave  
10008bc9:	ret    0xc
10008bcc:	push   ebp
10008bcd:	mov    ebp,esp
10008bcf:	push   esi
10008bd0:	push   edi
10008bd1:	mov    eax,DWORD PTR [ebp+0x8]
10008bd4:	mov    esi,ecx
10008bd6:	add    ecx,0xfffffff7
10008bd9:	neg    esi
10008bdb:	sbb    esi,esi
10008bdd:	and    esi,ecx
10008bdf:	mov    edi,eax
10008be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008be4:	mov    edx,DWORD PTR [ebp+0xc]
10008be7:	mov    ecx,DWORD PTR [eax+0x4]
10008bea:	shl    edx,cl
10008bec:	pop    edi
10008bed:	pop    esi
10008bee:	add    DWORD PTR [eax],edx
10008bf0:	pop    ebp
10008bf1:	ret    0x8
10008bf4:	push   0x30
10008bf6:	mov    eax,0x1000a8d2
10008bfb:	call   0x10009a6b
10008c00:	mov    esi,ecx
10008c02:	mov    DWORD PTR [ebp-0x18],0x80004005
10008c09:	call   0x1000958d
10008c0e:	mov    edi,eax
10008c10:	xor    ebx,ebx
10008c12:	cmp    edi,ebx
10008c14:	je     0x10008ce7
10008c1a:	mov    DWORD PTR [ebp-0x1c],ebx
10008c1d:	mov    DWORD PTR [ebp-0x20],ebx
10008c20:	mov    DWORD PTR [ebp-0x4],ebx
10008c23:	mov    BYTE PTR [ebp-0x4],0x1
10008c27:	mov    eax,DWORD PTR [esi]
10008c29:	mov    ecx,DWORD PTR [esi+0x8]
10008c2c:	not    ecx
10008c2e:	and    ecx,0x1
10008c31:	shr    eax,cl
10008c33:	dec    eax
10008c34:	jne    0x10008c45
10008c36:	push   ebx
10008c37:	push   0x4
10008c39:	push   0xff
10008c3e:	mov    ecx,esi
10008c40:	call   0x10007b02
10008c45:	mov    eax,DWORD PTR [esi]
10008c47:	mov    ecx,DWORD PTR [esi+0x8]
10008c4a:	not    ecx
10008c4c:	and    ecx,0x1
10008c4f:	shr    eax,cl
10008c51:	dec    eax
10008c52:	mov    ecx,DWORD PTR [esi+0xc]
10008c55:	lea    edx,[ebp-0x1c]
10008c58:	push   edx
10008c59:	push   DWORD PTR [ebp+0xc]
10008c5c:	inc    eax
10008c5d:	push   eax
10008c5e:	push   ecx
10008c5f:	push   DWORD PTR [ebp+0x8]
10008c62:	mov    ecx,edi
10008c64:	call   0x10009439
10008c69:	mov    DWORD PTR [ebp-0x18],eax
10008c6c:	cmp    eax,ebx
10008c6e:	jge    0x10008c79
10008c70:	mov    ecx,esi
10008c72:	call   0x10007abe
10008c77:	jmp    0x10008c8d
10008c79:	mov    eax,DWORD PTR [esi]
10008c7b:	mov    ecx,DWORD PTR [esi+0x8]
10008c7e:	not    ecx
10008c80:	and    ecx,0x1
10008c83:	shr    eax,cl
10008c85:	dec    eax
10008c86:	mov    ecx,DWORD PTR [ebp-0x1c]
10008c89:	cmp    ecx,eax
10008c8b:	jge    0x10008cf2
10008c8d:	cmp    DWORD PTR [ebp-0x18],ebx
10008c90:	jl     0x10008ce0
10008c92:	mov    eax,DWORD PTR [esi+0xc]
10008c95:	lea    edx,[eax+0x2]
10008c98:	mov    cx,WORD PTR [eax]
10008c9b:	inc    eax
10008c9c:	inc    eax
10008c9d:	cmp    cx,bx
10008ca0:	jne    0x10008c98
10008ca2:	sub    eax,edx
10008ca4:	sar    eax,1
10008ca6:	mov    edi,eax
10008ca8:	mov    ecx,esi
10008caa:	call   0x10004d36
10008caf:	test   BYTE PTR [esi+0x8],0x10
10008cb3:	je     0x10008cc1
10008cb5:	push   0x1
10008cb7:	push   DWORD PTR [esi+0x4]
10008cba:	mov    ecx,esi
10008cbc:	call   0x10008ab2
10008cc1:	push   ebx
10008cc2:	push   esi
10008cc3:	lea    ecx,[ebp-0x30]
10008cc6:	call   0x100062f3
10008ccb:	push   edi
10008ccc:	lea    eax,[ebp-0x3c]
10008ccf:	push   eax
10008cd0:	lea    ecx,[ebp-0x27]
10008cd3:	call   0x10008bcc
10008cd8:	push   eax
10008cd9:	mov    ecx,esi
10008cdb:	call   0x100080db
10008ce0:	mov    DWORD PTR [ebp-0x4],ebx
10008ce3:	or     DWORD PTR [ebp-0x4],0xffffffff
10008ce7:	mov    eax,DWORD PTR [ebp-0x18]
10008cea:	call   0x10009ad7
10008cef:	ret    0x8
10008cf2:	push   ebx
10008cf3:	push   0x4
10008cf5:	lea    eax,[ecx+ecx*1]
10008cf8:	push   eax
10008cf9:	jmp    0x10008c3e
10008cfe:	mov    BYTE PTR [ebp-0x11],0x1
10008d02:	mov    eax,DWORD PTR [ebp-0x24]
10008d05:	mov    DWORD PTR [ebp-0x20],eax
10008d08:	xor    ebx,ebx
10008d0a:	push   ebx
10008d0b:	push   ebx
10008d0c:	call   0x10009b68
10008d11:	mov    eax,DWORD PTR [ebp-0x20]
10008d14:	mov    DWORD PTR [ebp-0x2c],eax
10008d17:	xor    ebx,ebx
10008d19:	mov    DWORD PTR [ebp-0x28],ebx
10008d1c:	cmp    eax,ebx
10008d1e:	je     0x10008d27
10008d20:	mov    DWORD PTR [ebp-0x28],0x1
10008d27:	mov    BYTE PTR [ebp-0x4],0x7
10008d2b:	lea    ecx,[ebp-0x3c]
10008d2e:	call   0x10006498
10008d33:	mov    BYTE PTR [ebp-0x4],0x8
10008d37:	push   0x5
10008d39:	mov    esi,0x4000
10008d3e:	push   esi
10008d3f:	call   0x10004d57
10008d44:	test   eax,eax
10008d46:	je     0x10008d5a
10008d48:	push   0x46
10008d4a:	push   0x10002f40
10008d4f:	push   0x1
10008d51:	push   esi
10008d52:	call   0x10008a62
10008d57:	add    esp,0x10
10008d5a:	push   0x5
10008d5c:	push   esi
10008d5d:	call   0x10004d7a
10008d62:	test   eax,eax
10008d64:	je     0x10008d7a
10008d66:	push   0x46
10008d68:	push   0x10002f40
10008d6d:	push   0x1
10008d6f:	push   esi
10008d70:	push   0x5
10008d72:	call   0x1000866b
10008d77:	add    esp,0x14
10008d7a:	mov    DWORD PTR [ebp-0x18],0x80004005
10008d81:	mov    BYTE PTR [ebp-0x4],0x7
10008d85:	lea    ecx,[ebp-0x3c]
10008d88:	call   0x10006517
10008d8d:	mov    BYTE PTR [ebp-0x4],0x3
10008d91:	lea    ecx,[ebp-0x2c]
10008d94:	call   0x1000707f
10008d99:	mov    eax,0x10008ce7
10008d9e:	ret    
10008d9f:	push   ebp
10008da0:	mov    ebp,esp
10008da2:	push   DWORD PTR [ebp+0xc]
10008da5:	push   DWORD PTR [ebp+0x8]
10008da8:	call   0x10008bf4
10008dad:	xor    ecx,ecx
10008daf:	test   eax,eax
10008db1:	setge  cl
10008db4:	mov    eax,ecx
10008db6:	pop    ebp
10008db7:	ret    0x8
10008dba:	push   ebp
10008dbb:	mov    ebp,esp
10008dbd:	push   esi
10008dbe:	mov    esi,DWORD PTR [ecx+0x8]
10008dc1:	xor    eax,eax
10008dc3:	test   esi,esi
10008dc5:	je     0x10008de3
10008dc7:	mov    ecx,DWORD PTR [ecx+0xc]
10008dca:	test   ecx,ecx
10008dcc:	push   edi
10008dcd:	jle    0x10008de0
10008dcf:	mov    edx,esi
10008dd1:	mov    edi,DWORD PTR [edx]
10008dd3:	cmp    edi,DWORD PTR [ebp+0x8]
10008dd6:	je     0x10008de8
10008dd8:	inc    eax
10008dd9:	add    edx,0x8
10008ddc:	cmp    eax,ecx
10008dde:	jl     0x10008dd1
10008de0:	xor    eax,eax
10008de2:	pop    edi
10008de3:	pop    esi
10008de4:	pop    ebp
10008de5:	ret    0x4
10008de8:	mov    eax,DWORD PTR [esi+eax*8+0x4]
10008dec:	jmp    0x10008de2
10008dee:	push   ebp
10008def:	mov    ebp,esp
10008df1:	mov    eax,DWORD PTR [ecx+0x14]
10008df4:	cmp    eax,DWORD PTR ds:0x1000c114
10008dfa:	jne    0x10008e01
10008dfc:	push   0x2
10008dfe:	pop    eax
10008dff:	jmp    0x10008e03
10008e01:	xor    eax,eax
10008e03:	push   eax
10008e04:	push   0x0
10008e06:	push   DWORD PTR [ebp+0xc]
10008e09:	call   0x10004747
10008e0e:	test   eax,eax
10008e10:	mov    ecx,DWORD PTR [ebp+0x8]
10008e13:	mov    DWORD PTR [ecx],eax
10008e15:	jne    0x10008e1e
10008e17:	call   0x10006f08
10008e1c:	jmp    0x10008e20
10008e1e:	xor    eax,eax
10008e20:	pop    ebp
10008e21:	ret    0x8
10008e24:	push   ebp
10008e25:	mov    ebp,esp
10008e27:	sub    esp,0x298
10008e2d:	mov    eax,ds:0x1000c118
10008e32:	xor    eax,ebp
10008e34:	mov    DWORD PTR [ebp-0x4],eax
10008e37:	mov    eax,DWORD PTR [ebp+0x8]
10008e3a:	push   ebx
10008e3b:	mov    DWORD PTR [ebp-0x284],eax
10008e41:	mov    eax,DWORD PTR [ebp+0xc]
10008e44:	push   esi
10008e45:	mov    ebx,ecx
10008e47:	push   edi
10008e48:	mov    DWORD PTR [ebp-0x278],ebx
10008e4e:	mov    DWORD PTR [ebp-0x274],eax
10008e54:	push   DWORD PTR [ebx+0x14]
10008e57:	mov    edi,DWORD PTR ds:0x10001084
10008e5d:	call   edi
10008e5f:	mov    ebx,DWORD PTR [ebx+0x1c]
10008e62:	xor    esi,esi
10008e64:	cmp    ebx,esi
10008e66:	mov    DWORD PTR [ebp-0x27c],eax
10008e6c:	je     0x10008eb4
10008e6e:	push   0x14
10008e70:	lea    eax,[ebp-0x38]
10008e73:	push   eax
10008e74:	push   0x14
10008e76:	lea    eax,[ebp-0x64]
10008e79:	push   eax
10008e7a:	call   ebx
10008e7c:	test   eax,eax
10008e7e:	jl     0x10008ebc
10008e80:	cmp    WORD PTR [ebp-0x64],si
10008e84:	mov    ebx,DWORD PTR ds:0x10001150
10008e8a:	je     0x10008e9c
10008e8c:	push   0x10003108
10008e91:	lea    eax,[ebp-0x64]
10008e94:	push   0x16
10008e96:	push   eax
10008e97:	call   ebx
10008e99:	add    esp,0xc
10008e9c:	cmp    WORD PTR [ebp-0x38],si
10008ea0:	je     0x10008ebc
10008ea2:	push   0x10003108
10008ea7:	lea    eax,[ebp-0x38]
10008eaa:	push   0x16
10008eac:	push   eax
10008ead:	call   ebx
10008eaf:	add    esp,0xc
10008eb2:	jmp    0x10008ebc
10008eb4:	mov    WORD PTR [ebp-0x64],si
10008eb8:	mov    WORD PTR [ebp-0x38],si
10008ebc:	push   esi
10008ebd:	push   esi
10008ebe:	push   esi
10008ebf:	push   esi
10008ec0:	push   0x104
10008ec5:	lea    eax,[ebp-0x26c]
10008ecb:	push   eax
10008ecc:	push   0x3
10008ece:	lea    eax,[ebp-0xc]
10008ed1:	push   eax
10008ed2:	push   DWORD PTR [ebp-0x274]
10008ed8:	call   0x100095f8
10008edd:	lea    eax,[ebp-0xc]
10008ee0:	push   eax
10008ee1:	call   edi
10008ee3:	mov    ebx,eax
10008ee5:	lea    eax,[ebp-0x26c]
10008eeb:	push   eax
10008eec:	call   edi
10008eee:	mov    ecx,DWORD PTR [ebp-0x27c]
10008ef4:	mov    DWORD PTR [ebp-0x280],eax
10008efa:	add    eax,ebx
10008efc:	lea    eax,[eax+ecx*1+0x1]
10008f00:	mov    DWORD PTR [ebp-0x288],eax
10008f06:	lea    eax,[ebp-0x64]
10008f09:	mov    DWORD PTR [ebp-0x298],eax
10008f0f:	lea    eax,[ebp-0x38]
10008f12:	mov    DWORD PTR [ebp-0x270],esi
10008f18:	mov    esi,DWORD PTR ds:0x1000113c
10008f1e:	mov    DWORD PTR [ebp-0x294],eax
10008f24:	mov    DWORD PTR [ebp-0x290],0x10002ea8
10008f2e:	jmp    0x10008f36
10008f30:	mov    edi,DWORD PTR ds:0x10001084
10008f36:	mov    eax,DWORD PTR [ebp-0x270]
10008f3c:	push   DWORD PTR [ebp+eax*4-0x298]
10008f43:	call   edi
10008f45:	mov    edi,eax
10008f47:	mov    eax,DWORD PTR [ebp-0x288]
10008f4d:	add    eax,edi
10008f4f:	cmp    eax,DWORD PTR [ebp+0x10]
10008f52:	ja     0x10008fe8
10008f58:	lea    eax,[ebp-0xc]
10008f5b:	push   eax
10008f5c:	lea    eax,[ebx+0x1]
10008f5f:	push   eax
10008f60:	push   DWORD PTR [ebp-0x274]
10008f66:	call   esi
10008f68:	mov    eax,DWORD PTR [ebp-0x274]
10008f6e:	lea    ecx,[ebp-0x26c]
10008f74:	push   ecx
10008f75:	mov    ecx,DWORD PTR [ebp-0x280]
10008f7b:	inc    ecx
10008f7c:	lea    eax,[eax+ebx*2]
10008f7f:	push   ecx
10008f80:	push   eax
10008f81:	call   esi
10008f83:	mov    eax,DWORD PTR [ebp-0x274]
10008f89:	mov    ecx,DWORD PTR [ebp-0x280]
10008f8f:	lea    eax,[eax+ebx*2]
10008f92:	lea    eax,[eax+ecx*2]
10008f95:	mov    ecx,DWORD PTR [ebp-0x270]
10008f9b:	push   DWORD PTR [ebp+ecx*4-0x298]
10008fa2:	lea    ecx,[edi+0x1]
10008fa5:	push   ecx
10008fa6:	push   eax
10008fa7:	mov    DWORD PTR [ebp-0x28c],eax
10008fad:	call   esi
10008faf:	mov    eax,DWORD PTR [ebp-0x278]
10008fb5:	push   DWORD PTR [eax+0x14]
10008fb8:	mov    eax,DWORD PTR [ebp-0x27c]
10008fbe:	inc    eax
10008fbf:	push   eax
10008fc0:	mov    eax,DWORD PTR [ebp-0x28c]
10008fc6:	lea    eax,[eax+edi*2]
10008fc9:	push   eax
10008fca:	call   esi
10008fcc:	mov    ecx,DWORD PTR [ebp-0x278]
10008fd2:	add    esp,0x30
10008fd5:	push   DWORD PTR [ebp-0x274]
10008fdb:	push   DWORD PTR [ebp-0x284]
10008fe1:	call   0x10008dee
10008fe6:	jmp    0x10008fed
10008fe8:	mov    eax,0x80004005
10008fed:	inc    DWORD PTR [ebp-0x270]
10008ff3:	test   eax,eax
10008ff5:	jge    0x10009018
10008ff7:	cmp    DWORD PTR [ebp-0x270],0x3
10008ffe:	jb     0x10008f30
10009004:	mov    ecx,DWORD PTR [ebp-0x278]
1000900a:	push   DWORD PTR [ecx+0x14]
1000900d:	push   DWORD PTR [ebp-0x284]
10009013:	call   0x10008dee
10009018:	mov    ecx,DWORD PTR [ebp-0x4]
1000901b:	pop    edi
1000901c:	pop    esi
1000901d:	xor    ecx,ebp
1000901f:	pop    ebx
10009020:	call   0x10009a23
10009025:	leave  
10009026:	ret    0xc
10009029:	push   ebp
1000902a:	mov    ebp,esp
1000902c:	sub    esp,0x254
10009032:	mov    eax,ds:0x1000c118
10009037:	xor    eax,ebp
10009039:	mov    DWORD PTR [ebp-0x4],eax
1000903c:	push   ebx
1000903d:	mov    ebx,DWORD PTR [ebp+0x8]
10009040:	push   esi
10009041:	push   edi
10009042:	mov    edi,ecx
10009044:	mov    DWORD PTR [ebp-0x24c],edi
1000904a:	mov    esi,0x104
1000904f:	push   esi
10009050:	lea    eax,[ebp-0x248]
10009056:	push   eax
10009057:	call   0x10009fb1
1000905c:	push   eax
1000905d:	call   0x100047cf
10009062:	test   eax,eax
10009064:	jne    0x10009070
10009066:	call   0x10006f08
1000906b:	jmp    0x100090fa
10009070:	push   esi
10009071:	lea    eax,[ebp-0x248]
10009077:	push   eax
10009078:	push   ebx
10009079:	mov    ecx,edi
1000907b:	call   0x10008e24
10009080:	xor    ecx,ecx
10009082:	cmp    eax,ecx
10009084:	jge    0x100090fa
10009086:	mov    edx,DWORD PTR [edi+0x14]
10009089:	cmp    edx,DWORD PTR ds:0x1000c114
1000908f:	jne    0x100090fa
10009091:	lea    eax,[ebp-0x254]
10009097:	push   eax
10009098:	push   0x1e
1000909a:	lea    eax,[ebp-0x40]
1000909d:	push   eax
1000909e:	lea    eax,[ebp-0x250]
100090a4:	push   eax
100090a5:	push   esi
100090a6:	lea    eax,[ebp-0x248]
100090ac:	push   eax
100090ad:	push   0x41
100090af:	push   ecx
100090b0:	push   ecx
100090b1:	push   0x10003124
100090b6:	push   ecx
100090b7:	call   0x10009774
100090bc:	test   eax,eax
100090be:	jl     0x100090fa
100090c0:	mov    edi,DWORD PTR ds:0x10001150
100090c6:	lea    eax,[ebp-0x40]
100090c9:	push   eax
100090ca:	lea    eax,[ebp-0x248]
100090d0:	push   esi
100090d1:	push   eax
100090d2:	call   edi
100090d4:	push   0x10003108
100090d9:	lea    eax,[ebp-0x248]
100090df:	push   esi
100090e0:	push   eax
100090e1:	call   edi
100090e3:	mov    ecx,DWORD PTR [ebp-0x24c]
100090e9:	add    esp,0x18
100090ec:	push   esi
100090ed:	lea    eax,[ebp-0x248]
100090f3:	push   eax
100090f4:	push   ebx
100090f5:	call   0x10008e24
100090fa:	mov    ecx,DWORD PTR [ebp-0x4]
100090fd:	pop    edi
100090fe:	pop    esi
100090ff:	xor    ecx,ebp
10009101:	pop    ebx
10009102:	call   0x10009a23
10009107:	leave  
10009108:	ret    0x4
1000910b:	push   ebp
1000910c:	mov    ebp,esp
1000910e:	push   ebx
1000910f:	push   esi
10009110:	push   edi
10009111:	mov    esi,ecx
10009113:	xor    edi,edi
10009115:	cmp    DWORD PTR [esi+0x8],edi
10009118:	mov    ebx,0x10001320
1000911d:	jne    0x10009153
1000911f:	push   ebx
10009120:	push   0x38
10009122:	call   0x10003eb0
10009127:	cmp    eax,edi
10009129:	pop    ecx
1000912a:	pop    ecx
1000912b:	je     0x1000913f
1000912d:	push   0x6
1000912f:	mov    ecx,eax
10009131:	pop    edx
10009132:	mov    DWORD PTR [ecx],edi
10009134:	mov    DWORD PTR [ecx+0x4],edi
10009137:	add    ecx,0x8
1000913a:	dec    edx
1000913b:	jns    0x10009132
1000913d:	jmp    0x10009141
1000913f:	xor    eax,eax
10009141:	cmp    eax,edi
10009143:	mov    DWORD PTR [esi+0x8],eax
10009146:	je     0x100091ff
1000914c:	mov    DWORD PTR [esi+0xc],0x7
10009153:	mov    ecx,DWORD PTR [esi+0xc]
10009156:	xor    eax,eax
10009158:	cmp    ecx,edi
1000915a:	jle    0x1000916e
1000915c:	mov    edx,DWORD PTR [esi+0x8]
1000915f:	mov    edi,edx
10009161:	cmp    DWORD PTR [edi],0x0
10009164:	je     0x100091a8
10009166:	inc    eax
10009167:	add    edi,0x8
1000916a:	cmp    eax,ecx
1000916c:	jl     0x10009161
1000916e:	lea    edi,[ecx+0x5]
10009171:	push   ebx
10009172:	xor    ecx,ecx
10009174:	push   0x8
10009176:	pop    edx
10009177:	mov    eax,edi
10009179:	mul    edx
1000917b:	seto   cl
1000917e:	neg    ecx
10009180:	or     ecx,eax
10009182:	push   ecx
10009183:	call   0x10003eb0
10009188:	test   eax,eax
1000918a:	pop    ecx
1000918b:	pop    ecx
1000918c:	je     0x100091bf
1000918e:	lea    edx,[edi-0x1]
10009191:	test   edx,edx
10009193:	mov    ecx,eax
10009195:	jl     0x100091a4
10009197:	and    DWORD PTR [ecx],0x0
1000919a:	and    DWORD PTR [ecx+0x4],0x0
1000919e:	add    ecx,0x8
100091a1:	dec    edx
100091a2:	jns    0x10009197
100091a4:	mov    edi,eax
100091a6:	jmp    0x100091c1
100091a8:	mov    ecx,DWORD PTR [ebp+0x8]
100091ab:	shl    eax,0x3
100091ae:	mov    DWORD PTR [eax+edx*1],ecx
100091b1:	mov    ecx,DWORD PTR [esi+0x8]
100091b4:	mov    edx,DWORD PTR [ebp+0xc]
100091b7:	mov    DWORD PTR [eax+ecx*1+0x4],edx
100091bb:	xor    eax,eax
100091bd:	jmp    0x10009204
100091bf:	xor    edi,edi
100091c1:	test   edi,edi
100091c3:	je     0x100091ff
100091c5:	mov    eax,DWORD PTR [esi+0xc]
100091c8:	shl    eax,0x3
100091cb:	push   eax
100091cc:	push   DWORD PTR [esi+0x8]
100091cf:	push   edi
100091d0:	call   0x10009b5c
100091d5:	push   DWORD PTR [esi+0x8]
100091d8:	call   0x10003eeb
100091dd:	mov    eax,DWORD PTR [esi+0xc]
100091e0:	mov    ecx,DWORD PTR [ebp+0x8]
100091e3:	mov    edx,DWORD PTR [ebp+0xc]
100091e6:	mov    DWORD PTR [esi+0x8],edi
100091e9:	mov    DWORD PTR [edi+eax*8],ecx
100091ec:	mov    eax,DWORD PTR [esi+0xc]
100091ef:	mov    ecx,DWORD PTR [esi+0x8]
100091f2:	add    esp,0x10
100091f5:	mov    DWORD PTR [ecx+eax*8+0x4],edx
100091f9:	add    DWORD PTR [esi+0xc],0x5
100091fd:	jmp    0x100091bb
100091ff:	mov    eax,0x8007000e
10009204:	pop    edi
10009205:	pop    esi
10009206:	pop    ebx
10009207:	pop    ebp
10009208:	ret    0x8
1000920b:	push   esi
1000920c:	mov    esi,ecx
1000920e:	cmp    DWORD PTR [esi+0x4],0x0
10009212:	je     0x1000921f
10009214:	push   DWORD PTR [esi]
10009216:	call   0x10004057
1000921b:	and    DWORD PTR [esi+0x4],0x0
1000921f:	pop    esi
10009220:	ret    
10009221:	push   0x4
10009223:	mov    eax,0x1000a8f5
10009228:	call   0x10009a38
1000922d:	mov    esi,ecx
1000922f:	mov    DWORD PTR [ebp-0x10],esi
10009232:	or     DWORD PTR [ebp-0x4],0xffffffff
10009236:	cmp    DWORD PTR [esi+0x4],0x0
1000923a:	je     0x10009247
1000923c:	push   DWORD PTR [esi]
1000923e:	call   0x10004057
10009243:	and    DWORD PTR [esi+0x4],0x0
10009247:	call   0x10009ad7
1000924c:	ret    
1000924d:	push   0x10
1000924f:	mov    eax,0x1000a940
10009254:	call   0x10009a38
10009259:	mov    esi,ecx
1000925b:	mov    eax,DWORD PTR [esi]
1000925d:	mov    ebx,DWORD PTR [ebp+0x8]
10009260:	xor    edi,edi
10009262:	and    DWORD PTR [ebp-0x10],edi
10009265:	and    DWORD PTR [ebp-0x14],edi
10009268:	cmp    eax,ebx
1000926a:	je     0x10009279
1000926c:	test   eax,eax
1000926e:	je     0x1000931e
10009274:	cmp    ebx,0xffffffff
10009277:	jne    0x10009288
10009279:	mov    edi,DWORD PTR [esi+0x4]
1000927c:	and    DWORD PTR [ebp+0x8],0x0
10009280:	test   edi,edi
10009282:	jne    0x100093b6
10009288:	mov    eax,DWORD PTR [esi+0x10]
1000928b:	and    DWORD PTR [ebp-0x18],0x0
1000928f:	mov    DWORD PTR [ebp-0x1c],eax
10009292:	test   eax,eax
10009294:	je     0x100092a3
10009296:	push   eax
10009297:	call   0x10004042
1000929c:	mov    DWORD PTR [ebp-0x18],0x1
100092a3:	mov    DWORD PTR [ebp-0x4],0x3
100092aa:	push   ebx
100092ab:	mov    ecx,esi
100092ad:	call   0x10008dba
100092b2:	mov    edi,eax
100092b4:	or     DWORD PTR [ebp-0x4],0xffffffff
100092b8:	lea    ecx,[ebp-0x1c]
100092bb:	call   0x10009221
100092c0:	test   edi,edi
100092c2:	jne    0x100093b2
100092c8:	lea    eax,[ebp-0x10]
100092cb:	push   eax
100092cc:	mov    ecx,esi
100092ce:	call   0x10009029
100092d3:	test   eax,eax
100092d5:	mov    DWORD PTR [ebp+0x8],eax
100092d8:	jl     0x100093be
100092de:	mov    eax,DWORD PTR [esi+0x10]
100092e1:	and    DWORD PTR [ebp-0x18],edi
100092e4:	mov    DWORD PTR [ebp-0x1c],eax
100092e7:	test   eax,eax
100092e9:	je     0x100092f8
100092eb:	push   eax
100092ec:	call   0x10004042
100092f1:	mov    DWORD PTR [ebp-0x18],0x1
100092f8:	mov    DWORD PTR [ebp-0x4],0x5
100092ff:	push   ebx
10009300:	mov    ecx,esi
10009302:	call   0x10008dba
10009307:	mov    edi,eax
10009309:	test   edi,edi
1000930b:	jne    0x10009388
1000930d:	mov    edi,DWORD PTR [ebp-0x10]
10009310:	push   edi
10009311:	push   ebx
10009312:	mov    ecx,esi
10009314:	call   0x1000910b
10009319:	mov    DWORD PTR [ebp+0x8],eax
1000931c:	jmp    0x1000938f
1000931e:	lea    eax,[ebp-0x10]
10009321:	push   eax
10009322:	call   0x10009029
10009327:	test   eax,eax
10009329:	mov    DWORD PTR [ebp+0x8],eax
1000932c:	jl     0x100093be
10009332:	mov    eax,DWORD PTR [esi+0x10]
10009335:	and    DWORD PTR [ebp-0x18],edi
10009338:	mov    DWORD PTR [ebp-0x1c],eax
1000933b:	test   eax,eax
1000933d:	je     0x1000934c
1000933f:	push   eax
10009340:	call   0x10004042
10009345:	mov    DWORD PTR [ebp-0x18],0x1
1000934c:	mov    DWORD PTR [ebp-0x4],0x1
10009353:	mov    eax,DWORD PTR [esi]
10009355:	test   eax,eax
10009357:	jne    0x10009363
10009359:	mov    edi,DWORD PTR [ebp-0x10]
1000935c:	mov    DWORD PTR [esi+0x4],edi
1000935f:	mov    DWORD PTR [esi],ebx
10009361:	jmp    0x10009377
10009363:	cmp    eax,ebx
10009365:	jne    0x1000936a
10009367:	mov    edi,DWORD PTR [esi+0x4]
1000936a:	push   DWORD PTR [ebp-0x10]
1000936d:	call   DWORD PTR ds:0x10001044
10009373:	and    DWORD PTR [ebp-0x14],0x0
10009377:	or     DWORD PTR [ebp-0x4],0xffffffff
1000937b:	lea    ecx,[ebp-0x1c]
1000937e:	call   0x10009221
10009383:	jmp    0x10009280
10009388:	mov    DWORD PTR [ebp-0x14],0x1
1000938f:	or     DWORD PTR [ebp-0x4],0xffffffff
10009393:	lea    ecx,[ebp-0x1c]
10009396:	call   0x10009221
1000939b:	cmp    DWORD PTR [ebp-0x14],0x0
1000939f:	jne    0x100093a7
100093a1:	cmp    DWORD PTR [ebp+0x8],0x0
100093a5:	jge    0x100093b6
100093a7:	push   DWORD PTR [ebp-0x10]
100093aa:	call   DWORD PTR ds:0x10001044
100093b0:	jmp    0x100093b6
100093b2:	and    DWORD PTR [ebp+0x8],0x0
100093b6:	mov    eax,DWORD PTR [ebp+0xc]
100093b9:	mov    DWORD PTR [eax],edi
100093bb:	mov    eax,DWORD PTR [ebp+0x8]
100093be:	call   0x10009ad7
100093c3:	ret    0x8
100093c6:	push   ebp
100093c7:	mov    ebp,esp
100093c9:	push   ecx
100093ca:	push   esi
100093cb:	and    DWORD PTR [ebp-0x4],0x0
100093cf:	lea    eax,[ebp-0x4]
100093d2:	push   eax
100093d3:	push   DWORD PTR [ebp+0x8]
100093d6:	call   0x1000924d
100093db:	test   eax,eax
100093dd:	mov    esi,DWORD PTR [ebp+0x10]
100093e0:	jl     0x10009426
100093e2:	push   DWORD PTR [ebp+0x14]
100093e5:	push   esi
100093e6:	push   DWORD PTR [ebp+0xc]
100093e9:	push   DWORD PTR [ebp-0x4]
100093ec:	call   0x10004c2b
100093f1:	test   eax,eax
100093f3:	jle    0x10009402
100093f5:	mov    ecx,DWORD PTR [ebp+0x1c]
100093f8:	test   ecx,ecx
100093fa:	je     0x100093fe
100093fc:	mov    DWORD PTR [ecx],eax
100093fe:	xor    eax,eax
10009400:	jmp    0x10009434
10009402:	call   DWORD PTR ds:0x10001060
10009408:	cmp    eax,0xe
1000940b:	jne    0x10009414
1000940d:	mov    eax,0x8007000e
10009412:	jmp    0x10009426
10009414:	cmp    DWORD PTR [ebp+0x18],0x0
10009418:	je     0x10009421
1000941a:	mov    eax,0x80004005
1000941f:	jmp    0x10009426
10009421:	call   0x10006f08
10009426:	test   esi,esi
10009428:	je     0x10009434
1000942a:	cmp    DWORD PTR [ebp+0x14],0x0
1000942e:	je     0x10009434
10009430:	and    WORD PTR [esi],0x0
10009434:	pop    esi
10009435:	leave  
10009436:	ret    0x18
10009439:	push   ebp
1000943a:	mov    ebp,esp
1000943c:	push   esi
1000943d:	mov    esi,ecx
1000943f:	mov    eax,DWORD PTR [esi+0x18]
10009442:	test   eax,eax
10009444:	je     0x1000944a
10009446:	call   eax
10009448:	jmp    0x1000944d
1000944a:	or     eax,0xffffffff
1000944d:	push   DWORD PTR [ebp+0x18]
10009450:	mov    ecx,esi
10009452:	push   DWORD PTR [ebp+0x14]
10009455:	push   DWORD PTR [ebp+0x10]
10009458:	push   DWORD PTR [ebp+0xc]
1000945b:	push   DWORD PTR [ebp+0x8]
1000945e:	push   eax
1000945f:	call   0x100093c6
10009464:	pop    esi
10009465:	pop    ebp
10009466:	ret    0x14
10009469:	push   0x10
1000946b:	mov    eax,0x1000a97b
10009470:	call   0x10009a38
10009475:	mov    edi,ecx
10009477:	mov    DWORD PTR [ebp-0x10],edi
1000947a:	mov    ebx,DWORD PTR ds:0x1000105c
10009480:	lea    eax,[edi+0x14]
10009483:	xor    esi,esi
10009485:	cmp    DWORD PTR [eax],esi
10009487:	jne    0x10009541
1000948d:	cmp    DWORD PTR [ebp+0x8],esi
10009490:	je     0x10009537
10009496:	mov    DWORD PTR [ebp-0x1c],esi
10009499:	mov    DWORD PTR [ebp-0x18],esi
1000949c:	mov    DWORD PTR [ebp-0x4],0x3
100094a3:	mov    eax,DWORD PTR [ebp+0x8]
100094a6:	lea    edx,[eax+0x2]
100094a9:	mov    cx,WORD PTR [eax]
100094ac:	inc    eax
100094ad:	inc    eax
100094ae:	cmp    cx,si
100094b1:	jne    0x100094a9
100094b3:	sub    eax,edx
100094b5:	sar    eax,1
100094b7:	push   0x10001320
100094bc:	lea    edi,[eax+0x1]
100094bf:	xor    ecx,ecx
100094c1:	push   0x2
100094c3:	pop    edx
100094c4:	mov    eax,edi
100094c6:	mul    edx
100094c8:	seto   cl
100094cb:	neg    ecx
100094cd:	or     ecx,eax
100094cf:	push   ecx
100094d0:	call   0x10003eb0
100094d5:	pop    ecx
100094d6:	pop    ecx
100094d7:	mov    DWORD PTR [ebp-0x14],eax
100094da:	cmp    DWORD PTR [ebp-0x18],esi
100094dd:	je     0x100094eb
100094df:	push   DWORD PTR [ebp-0x1c]
100094e2:	call   0x10003eeb
100094e7:	pop    ecx
100094e8:	mov    DWORD PTR [ebp-0x18],esi
100094eb:	mov    eax,DWORD PTR [ebp-0x14]
100094ee:	mov    DWORD PTR [ebp-0x1c],eax
100094f1:	cmp    eax,esi
100094f3:	je     0x10009526
100094f5:	push   DWORD PTR [ebp+0x8]
100094f8:	mov    DWORD PTR [ebp-0x18],0x1
100094ff:	push   edi
10009500:	push   eax
10009501:	call   DWORD PTR ds:0x1000113c
10009507:	add    esp,0xc
1000950a:	mov    DWORD PTR [ebp-0x18],esi
1000950d:	mov    edi,DWORD PTR [ebp-0x1c]
10009510:	mov    eax,DWORD PTR [ebp-0x10]
10009513:	push   esi
10009514:	push   edi
10009515:	add    eax,0x14
10009518:	push   eax
10009519:	call   ebx
1000951b:	test   eax,eax
1000951d:	je     0x10009526
1000951f:	push   edi
10009520:	call   0x10003eeb
10009525:	pop    ecx
10009526:	or     DWORD PTR [ebp-0x4],0xffffffff
1000952a:	lea    ecx,[ebp-0x1c]
1000952d:	call   0x1000381c
10009532:	mov    edi,DWORD PTR [ebp-0x10]
10009535:	jmp    0x10009541
10009537:	push   esi
10009538:	push   DWORD PTR ds:0x1000c114
1000953e:	push   eax
1000953f:	call   ebx
10009541:	cmp    DWORD PTR [edi+0x14],esi
10009544:	jne    0x1000954d
10009546:	mov    eax,0x8007000e
1000954b:	jmp    0x10009585
1000954d:	add    edi,0x10
10009550:	cmp    DWORD PTR [edi],esi
10009552:	jne    0x10009575
10009554:	push   0x18
10009556:	push   0x8
10009558:	call   0x10004011
1000955d:	cmp    eax,esi
1000955f:	mov    DWORD PTR [ebp+0x8],eax
10009562:	je     0x10009575
10009564:	push   esi
10009565:	push   eax
10009566:	push   edi
10009567:	call   ebx
10009569:	test   eax,eax
1000956b:	je     0x10009575
1000956d:	push   DWORD PTR [ebp+0x8]
10009570:	call   0x1000402b
10009575:	mov    eax,DWORD PTR [edi]
10009577:	neg    eax
10009579:	sbb    eax,eax
1000957b:	and    eax,0x7ff8fff2
10009580:	add    eax,0x8007000e
10009585:	call   0x10009ad7
1000958a:	ret    0x4
1000958d:	cmp    DWORD PTR ds:0x1000cd64,0xffffffff
10009594:	jne    0x1000959c
10009596:	mov    eax,0x1000cd68
1000959b:	ret    
1000959c:	push   ebx
1000959d:	push   esi
1000959e:	mov    esi,DWORD PTR ds:0x1000105c
100095a4:	push   edi
100095a5:	xor    ebx,ebx
100095a7:	mov    edi,0x1000cd64
100095ac:	jmp    0x100095bf
100095ae:	push   ebx
100095af:	push   0x1
100095b1:	call   0x1000406c
100095b6:	cmp    DWORD PTR ds:0x1000cd64,0xffffffff
100095bd:	je     0x100095e4
100095bf:	push   ebx
100095c0:	push   0x1
100095c2:	push   edi
100095c3:	call   esi
100095c5:	test   eax,eax
100095c7:	jne    0x100095ae
100095c9:	mov    esi,0x1000cd68
100095ce:	push   ebx
100095cf:	mov    ecx,esi
100095d1:	call   0x10009469
100095d6:	test   eax,eax
100095d8:	jge    0x100095eb
100095da:	mov    DWORD PTR ds:0x1000cd64,ebx
100095e0:	xor    eax,eax
100095e2:	jmp    0x100095f4
100095e4:	mov    eax,0x1000cd68
100095e9:	jmp    0x100095f4
100095eb:	or     DWORD PTR ds:0x1000cd64,0xffffffff
100095f2:	mov    eax,esi
100095f4:	pop    edi
100095f5:	pop    esi
100095f6:	pop    ebx
100095f7:	ret    
100095f8:	push   ebp
100095f9:	mov    ebp,esp
100095fb:	push   ecx
100095fc:	push   ebx
100095fd:	push   esi
100095fe:	push   edi
100095ff:	mov    ebx,DWORD PTR [ebp+0x8]
10009602:	xor    edi,edi
10009604:	mov    eax,ebx
10009606:	mov    DWORD PTR [ebp-0x4],edi
10009609:	lea    edx,[eax+0x2]
1000960c:	mov    cx,WORD PTR [eax]
1000960f:	inc    eax
10009610:	inc    eax
10009611:	cmp    cx,di
10009614:	jne    0x1000960c
10009616:	sub    eax,edx
10009618:	sar    eax,1
1000961a:	cmp    eax,0x1
1000961d:	jb     0x10009649
1000961f:	cmp    WORD PTR [ebx+0x2],0x3a
10009624:	jne    0x10009649
10009626:	mov    esi,DWORD PTR [ebp+0xc]
10009629:	cmp    esi,edi
1000962b:	je     0x10009641
1000962d:	push   0x2
1000962f:	push   ebx
10009630:	push   DWORD PTR [ebp+0x10]
10009633:	push   esi
10009634:	call   DWORD PTR ds:0x10001148
1000963a:	add    esp,0x10
1000963d:	mov    WORD PTR [esi+0x4],di
10009641:	add    ebx,0x4
10009644:	mov    DWORD PTR [ebp+0x8],ebx
10009647:	jmp    0x10009653
10009649:	mov    eax,DWORD PTR [ebp+0xc]
1000964c:	cmp    eax,edi
1000964e:	je     0x10009653
10009650:	mov    WORD PTR [eax],di
10009653:	movzx  eax,WORD PTR [ebx]
10009656:	test   ax,ax
10009659:	mov    DWORD PTR [ebp+0xc],edi
1000965c:	mov    edi,ebx
1000965e:	mov    esi,0xff
10009663:	je     0x100096cd
10009665:	movzx  eax,ax
10009668:	cmp    ax,0x2f
1000966c:	je     0x1000967f
1000966e:	cmp    ax,0x5c
10009672:	je     0x1000967f
10009674:	cmp    ax,0x2e
10009678:	jne    0x10009685
1000967a:	mov    DWORD PTR [ebp-0x4],edi
1000967d:	jmp    0x10009685
1000967f:	lea    eax,[edi+0x2]
10009682:	mov    DWORD PTR [ebp+0xc],eax
10009685:	inc    edi
10009686:	inc    edi
10009687:	movzx  eax,WORD PTR [edi]
1000968a:	test   ax,ax
1000968d:	jne    0x10009668
1000968f:	mov    eax,DWORD PTR [ebp+0xc]
10009692:	test   eax,eax
10009694:	je     0x100096cd
10009696:	cmp    DWORD PTR [ebp+0x14],0x0
1000969a:	je     0x100096c3
1000969c:	sub    eax,ebx
1000969e:	shr    eax,1
100096a0:	cmp    eax,esi
100096a2:	mov    ebx,eax
100096a4:	jb     0x100096a8
100096a6:	mov    ebx,esi
100096a8:	push   ebx
100096a9:	push   DWORD PTR [ebp+0x8]
100096ac:	push   DWORD PTR [ebp+0x18]
100096af:	push   DWORD PTR [ebp+0x14]
100096b2:	call   DWORD PTR ds:0x10001148
100096b8:	mov    eax,DWORD PTR [ebp+0x14]
100096bb:	add    esp,0x10
100096be:	and    WORD PTR [eax+ebx*2],0x0
100096c3:	mov    eax,DWORD PTR [ebp+0xc]
100096c6:	mov    DWORD PTR [ebp+0x8],eax
100096c9:	mov    ebx,eax
100096cb:	jmp    0x100096d8
100096cd:	mov    eax,DWORD PTR [ebp+0x14]
100096d0:	test   eax,eax
100096d2:	je     0x100096d8
100096d4:	and    WORD PTR [eax],0x0
100096d8:	mov    eax,DWORD PTR [ebp-0x4]
100096db:	test   eax,eax
100096dd:	je     0x1000973a
100096df:	cmp    eax,ebx
100096e1:	jb     0x1000973a
100096e3:	cmp    DWORD PTR [ebp+0x1c],0x0
100096e7:	je     0x10009710
100096e9:	sub    eax,ebx
100096eb:	shr    eax,1
100096ed:	cmp    eax,esi
100096ef:	mov    ebx,eax
100096f1:	jb     0x100096f5
100096f3:	mov    ebx,esi
100096f5:	push   ebx
100096f6:	push   DWORD PTR [ebp+0x8]
100096f9:	push   DWORD PTR [ebp+0x20]
100096fc:	push   DWORD PTR [ebp+0x1c]
100096ff:	call   DWORD PTR ds:0x10001148
10009705:	mov    eax,DWORD PTR [ebp+0x1c]
10009708:	add    esp,0x10
1000970b:	and    WORD PTR [eax+ebx*2],0x0
10009710:	mov    ebx,DWORD PTR [ebp+0x24]
10009713:	test   ebx,ebx
10009715:	je     0x1000976d
10009717:	sub    edi,DWORD PTR [ebp-0x4]
1000971a:	shr    edi,1
1000971c:	cmp    edi,esi
1000971e:	jae    0x10009722
10009720:	mov    esi,edi
10009722:	push   esi
10009723:	push   DWORD PTR [ebp-0x4]
10009726:	push   DWORD PTR [ebp+0x28]
10009729:	push   ebx
1000972a:	call   DWORD PTR ds:0x10001148
10009730:	add    esp,0x10
10009733:	and    WORD PTR [ebx+esi*2],0x0
10009738:	jmp    0x1000976d
1000973a:	mov    ebx,DWORD PTR [ebp+0x1c]
1000973d:	test   ebx,ebx
1000973f:	je     0x10009762
10009741:	sub    edi,DWORD PTR [ebp+0x8]
10009744:	shr    edi,1
10009746:	cmp    edi,esi
10009748:	jae    0x1000974c
1000974a:	mov    esi,edi
1000974c:	push   esi
1000974d:	push   DWORD PTR [ebp+0x8]
10009750:	push   DWORD PTR [ebp+0x20]
10009753:	push   ebx
10009754:	call   DWORD PTR ds:0x10001148
1000975a:	add    esp,0x10
1000975d:	and    WORD PTR [ebx+esi*2],0x0
10009762:	mov    eax,DWORD PTR [ebp+0x24]
10009765:	test   eax,eax
10009767:	je     0x1000976d
10009769:	and    WORD PTR [eax],0x0
1000976d:	pop    edi
1000976e:	pop    esi
1000976f:	pop    ebx
10009770:	leave  
10009771:	ret    0x24
10009774:	jmp    DWORD PTR ds:0x10001178
1000977a:	push   0x10009e11
1000977f:	call   0x10009ddb
10009784:	mov    eax,ds:0x1000cdb0
10009789:	mov    DWORD PTR [esp],0x1000cd9c
10009790:	push   DWORD PTR ds:0x1000cdac
10009796:	mov    ds:0x1000cd9c,eax
1000979b:	push   0x1000cd8c
100097a0:	push   0x1000cd90
100097a5:	push   0x1000cd88
100097aa:	call   DWORD PTR ds:0x1000110c
100097b0:	add    esp,0x14
100097b3:	test   eax,eax
100097b5:	mov    ds:0x1000cd98,eax
100097ba:	jge    0x100097c4
100097bc:	push   0x8
100097be:	call   0x10009d30
100097c3:	pop    ecx
100097c4:	ret    
100097c5:	push   0x10
100097c7:	push   0x1000b2e8
100097cc:	call   0x10009bc0
100097d1:	xor    ebx,ebx
100097d3:	mov    DWORD PTR [ebp-0x4],ebx
100097d6:	mov    eax,fs:0x18
100097dc:	mov    esi,DWORD PTR [eax+0x4]
100097df:	mov    DWORD PTR [ebp-0x1c],ebx
100097e2:	mov    edi,0x1000d0ec
100097e7:	push   ebx
100097e8:	push   esi
100097e9:	push   edi
100097ea:	call   DWORD PTR ds:0x1000105c
100097f0:	cmp    eax,ebx
100097f2:	je     0x1000980d
100097f4:	cmp    eax,esi
100097f6:	jne    0x10009800
100097f8:	xor    esi,esi
100097fa:	inc    esi
100097fb:	mov    DWORD PTR [ebp-0x1c],esi
100097fe:	jmp    0x10009810
10009800:	push   0x3e8
10009805:	call   DWORD PTR ds:0x10001034
1000980b:	jmp    0x100097e7
1000980d:	xor    esi,esi
1000980f:	inc    esi
10009810:	mov    eax,ds:0x1000d0e8
10009815:	cmp    eax,esi
10009817:	jne    0x10009823
10009819:	push   0x1f
1000981b:	call   0x10009d30
10009820:	pop    ecx
10009821:	jmp    0x1000985e
10009823:	mov    eax,ds:0x1000d0e8
10009828:	test   eax,eax
1000982a:	jne    0x10009858
1000982c:	mov    DWORD PTR ds:0x1000d0e8,esi
10009832:	push   0x100011a0
10009837:	push   0x10001194
1000983c:	call   0x10009f82
10009841:	pop    ecx
10009842:	pop    ecx
10009843:	test   eax,eax
10009845:	je     0x1000985e
10009847:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1000984e:	mov    eax,0xff
10009853:	jmp    0x10009935
10009858:	mov    DWORD PTR ds:0x1000cda4,esi
1000985e:	mov    eax,ds:0x1000d0e8
10009863:	cmp    eax,esi
10009865:	jne    0x10009882
10009867:	push   0x10001190
1000986c:	push   0x10001184
10009871:	call   0x10009f7c
10009876:	pop    ecx
10009877:	pop    ecx
10009878:	mov    DWORD PTR ds:0x1000d0e8,0x2
10009882:	cmp    DWORD PTR [ebp-0x1c],ebx
10009885:	jne    0x1000988f
10009887:	push   ebx
10009888:	push   edi
10009889:	call   DWORD PTR ds:0x10001030
1000988f:	cmp    DWORD PTR ds:0x1000d0f8,ebx
10009895:	je     0x100098b0
10009897:	push   0x1000d0f8
1000989c:	call   0x10009ec0
100098a1:	pop    ecx
100098a2:	test   eax,eax
100098a4:	je     0x100098b0
100098a6:	push   ebx
100098a7:	push   0x2
100098a9:	push   ebx
100098aa:	call   DWORD PTR ds:0x1000d0f8
100098b0:	mov    eax,ds:0x1000cd8c
100098b5:	mov    ecx,DWORD PTR ds:0x100010fc
100098bb:	mov    DWORD PTR [ecx],eax
100098bd:	push   DWORD PTR ds:0x1000cd8c
100098c3:	push   DWORD PTR ds:0x1000cd90
100098c9:	push   DWORD PTR ds:0x1000cd88
100098cf:	call   0x100035e3
100098d4:	add    esp,0xc
100098d7:	mov    ds:0x1000cda0,eax
100098dc:	cmp    DWORD PTR ds:0x1000cd94,ebx
100098e2:	jne    0x1000991b
100098e4:	push   eax
100098e5:	call   DWORD PTR ds:0x10001154
100098eb:	mov    eax,DWORD PTR [ebp-0x14]
100098ee:	mov    ecx,DWORD PTR [eax]
100098f0:	mov    ecx,DWORD PTR [ecx]
100098f2:	mov    DWORD PTR [ebp-0x20],ecx
100098f5:	push   eax
100098f6:	push   ecx
100098f7:	call   0x10009e36
100098fc:	pop    ecx
100098fd:	pop    ecx
100098fe:	ret    
100098ff:	mov    esp,DWORD PTR [ebp-0x18]
10009902:	mov    eax,DWORD PTR [ebp-0x20]
10009905:	mov    ds:0x1000cda0,eax
1000990a:	xor    ebx,ebx
1000990c:	cmp    DWORD PTR ds:0x1000cd94,ebx
10009912:	jne    0x1000991b
10009914:	push   eax
10009915:	call   DWORD PTR ds:0x10001104
1000991b:	cmp    DWORD PTR ds:0x1000cda4,ebx
10009921:	jne    0x10009929
10009923:	call   DWORD PTR ds:0x10001108
10009929:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10009930:	mov    eax,ds:0x1000cda0
10009935:	call   0x10009c05
1000993a:	ret    
1000993b:	cmp    WORD PTR ds:0x10000000,0x5a4d
10009944:	je     0x1000994a
10009946:	xor    eax,eax
10009948:	jmp    0x10009997
1000994a:	mov    eax,ds:0x1000003c
1000994f:	lea    eax,[eax+0x10000000]
10009955:	cmp    DWORD PTR [eax],0x4550
1000995b:	jne    0x10009946
1000995d:	movzx  ecx,WORD PTR [eax+0x18]
10009961:	cmp    ecx,0x10b
10009967:	je     0x10009984
10009969:	cmp    ecx,0x20b
1000996f:	jne    0x10009946
10009971:	cmp    DWORD PTR [eax+0x84],0xe
10009978:	jbe    0x10009946
1000997a:	xor    ecx,ecx
1000997c:	cmp    DWORD PTR [eax+0xf8],ecx
10009982:	jmp    0x10009992
10009984:	cmp    DWORD PTR [eax+0x74],0xe
10009988:	jbe    0x10009946
1000998a:	xor    ecx,ecx
1000998c:	cmp    DWORD PTR [eax+0xe8],ecx
10009992:	setne  cl
10009995:	mov    eax,ecx
10009997:	push   0x1
10009999:	mov    ds:0x1000cd94,eax
1000999e:	call   DWORD PTR ds:0x100010d8
100099a4:	push   0xffffffff
100099a6:	call   DWORD PTR ds:0x100010dc
100099ac:	pop    ecx
100099ad:	pop    ecx
100099ae:	mov    ds:0x1000d0f0,eax
100099b3:	mov    ds:0x1000d0f4,eax
100099b8:	call   DWORD PTR ds:0x100010e0
100099be:	mov    ecx,DWORD PTR ds:0x1000cdb8
100099c4:	mov    DWORD PTR [eax],ecx
100099c6:	call   DWORD PTR ds:0x100010e4
100099cc:	mov    ecx,DWORD PTR ds:0x1000cdb4
100099d2:	mov    DWORD PTR [eax],ecx
100099d4:	mov    eax,ds:0x100010e8
100099d9:	mov    eax,DWORD PTR [eax]
100099db:	mov    ds:0x1000d0e4,eax
100099e0:	call   0x10009ded
100099e5:	call   0x10009fb1
100099ea:	cmp    DWORD PTR ds:0x1000c14c,0x0
100099f1:	jne    0x100099ff
100099f3:	push   0x10009fb1
100099f8:	call   DWORD PTR ds:0x100010ec
100099fe:	pop    ecx
100099ff:	call   0x10009f88
10009a04:	cmp    DWORD PTR ds:0x1000c148,0xffffffff
10009a0b:	jne    0x10009a16
10009a0d:	push   0xffffffff
10009a0f:	call   DWORD PTR ds:0x100010f0
10009a15:	pop    ecx
10009a16:	xor    eax,eax
10009a18:	ret    
10009a19:	call   0x10009fb4
10009a1e:	jmp    0x100097c5
10009a23:	cmp    ecx,DWORD PTR ds:0x1000c118
10009a29:	jne    0x10009a2d
10009a2b:	repz ret 
10009a2d:	jmp    0x1000a048
10009a32:	jmp    DWORD PTR ds:0x10001144
10009a38:	push   eax
10009a39:	push   DWORD PTR fs:0x0
10009a40:	lea    eax,[esp+0xc]
10009a44:	sub    esp,DWORD PTR [esp+0xc]
10009a48:	push   ebx
10009a49:	push   esi
10009a4a:	push   edi
10009a4b:	mov    DWORD PTR [eax],ebp
10009a4d:	mov    ebp,eax
10009a4f:	mov    eax,ds:0x1000c118
10009a54:	xor    eax,ebp
10009a56:	push   eax
10009a57:	push   DWORD PTR [ebp-0x4]
10009a5a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009a61:	lea    eax,[ebp-0xc]
10009a64:	mov    fs:0x0,eax
10009a6a:	ret    
10009a6b:	push   eax
10009a6c:	push   DWORD PTR fs:0x0
10009a73:	lea    eax,[esp+0xc]
10009a77:	sub    esp,DWORD PTR [esp+0xc]
10009a7b:	push   ebx
10009a7c:	push   esi
10009a7d:	push   edi
10009a7e:	mov    DWORD PTR [eax],ebp
10009a80:	mov    ebp,eax
10009a82:	mov    eax,ds:0x1000c118
10009a87:	xor    eax,ebp
10009a89:	push   eax
10009a8a:	mov    DWORD PTR [ebp-0x10],esp
10009a8d:	push   DWORD PTR [ebp-0x4]
10009a90:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009a97:	lea    eax,[ebp-0xc]
10009a9a:	mov    fs:0x0,eax
10009aa0:	ret    
10009aa1:	push   eax
10009aa2:	push   DWORD PTR fs:0x0
10009aa9:	lea    eax,[esp+0xc]
10009aad:	sub    esp,DWORD PTR [esp+0xc]
10009ab1:	push   ebx
10009ab2:	push   esi
10009ab3:	push   edi
10009ab4:	mov    DWORD PTR [eax],ebp
10009ab6:	mov    ebp,eax
10009ab8:	mov    eax,ds:0x1000c118
10009abd:	xor    eax,ebp
10009abf:	push   eax
10009ac0:	mov    DWORD PTR [ebp-0x10],eax
10009ac3:	push   DWORD PTR [ebp-0x4]
10009ac6:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009acd:	lea    eax,[ebp-0xc]
10009ad0:	mov    fs:0x0,eax
10009ad6:	ret    
10009ad7:	mov    ecx,DWORD PTR [ebp-0xc]
10009ada:	mov    DWORD PTR fs:0x0,ecx
10009ae1:	pop    ecx
10009ae2:	pop    edi
10009ae3:	pop    edi
10009ae4:	pop    esi
10009ae5:	pop    ebx
10009ae6:	mov    esp,ebp
10009ae8:	pop    ebp
10009ae9:	push   ecx
10009aea:	ret    
10009aeb:	mov    ecx,DWORD PTR [ebp-0x10]
10009aee:	xor    ecx,ebp
10009af0:	call   0x10009a23
10009af5:	jmp    0x10009ad7
10009afa:	int3   
10009afb:	int3   
10009afc:	int3   
10009afd:	int3   
10009afe:	int3   
10009aff:	int3   
10009b00:	push   ecx
10009b01:	lea    ecx,[esp+0x4]
10009b05:	sub    ecx,eax
10009b07:	sbb    eax,eax
10009b09:	not    eax
10009b0b:	and    ecx,eax
10009b0d:	mov    eax,esp
10009b0f:	and    eax,0xfffff000
10009b14:	cmp    ecx,eax
10009b16:	jb     0x10009b22
10009b18:	mov    eax,ecx
10009b1a:	pop    ecx
10009b1b:	xchg   esp,eax
10009b1c:	mov    eax,DWORD PTR [eax]
10009b1e:	mov    DWORD PTR [esp],eax
10009b21:	ret    
10009b22:	sub    eax,0x1000
10009b27:	test   DWORD PTR [eax],eax
10009b29:	jmp    0x10009b14
10009b2b:	int3   
10009b2c:	int3   
10009b2d:	int3   
10009b2e:	int3   
10009b2f:	int3   
10009b30:	push   ecx
10009b31:	lea    ecx,[esp+0x8]
10009b35:	sub    ecx,eax
10009b37:	and    ecx,0xf
10009b3a:	add    eax,ecx
10009b3c:	sbb    ecx,ecx
10009b3e:	or     eax,ecx
10009b40:	pop    ecx
10009b41:	jmp    0x10009b00
10009b46:	push   ecx
10009b47:	lea    ecx,[esp+0x8]
10009b4b:	sub    ecx,eax
10009b4d:	and    ecx,0x7
10009b50:	add    eax,ecx
10009b52:	sbb    ecx,ecx
10009b54:	or     eax,ecx
10009b56:	pop    ecx
10009b57:	jmp    0x10009b00
10009b5c:	jmp    DWORD PTR ds:0x10001130
10009b62:	jmp    DWORD PTR ds:0x1000112c
10009b68:	jmp    DWORD PTR ds:0x10001128
10009b6e:	push   ebx
10009b6f:	mov    bl,BYTE PTR [esp+0x8]
10009b73:	test   bl,0x2
10009b76:	push   esi
10009b77:	mov    esi,ecx
10009b79:	je     0x10009b9f
10009b7b:	push   edi
10009b7c:	push   0x1000a23e
10009b81:	lea    edi,[esi-0x4]
10009b84:	push   DWORD PTR [edi]
10009b86:	push   0xc
10009b88:	push   esi
10009b89:	call   0x1000a1aa
10009b8e:	test   bl,0x1
10009b91:	je     0x10009b9a
10009b93:	push   edi
10009b94:	call   0x10003eeb
10009b99:	pop    ecx
10009b9a:	mov    eax,edi
10009b9c:	pop    edi
10009b9d:	jmp    0x10009bb2
10009b9f:	call   0x1000a23e
10009ba4:	test   bl,0x1
10009ba7:	je     0x10009bb0
10009ba9:	push   esi
10009baa:	call   0x10003eeb
10009baf:	pop    ecx
10009bb0:	mov    eax,esi
10009bb2:	pop    esi
10009bb3:	pop    ebx
10009bb4:	ret    0x4
10009bb7:	int3   
10009bb8:	jmp    DWORD PTR ds:0x10001124
10009bbe:	int3   
10009bbf:	int3   
10009bc0:	push   0x10009c19
10009bc5:	push   DWORD PTR fs:0x0
10009bcc:	mov    eax,DWORD PTR [esp+0x10]
10009bd0:	mov    DWORD PTR [esp+0x10],ebp
10009bd4:	lea    ebp,[esp+0x10]
10009bd8:	sub    esp,eax
10009bda:	push   ebx
10009bdb:	push   esi
10009bdc:	push   edi
10009bdd:	mov    eax,ds:0x1000c118
10009be2:	xor    DWORD PTR [ebp-0x4],eax
10009be5:	xor    eax,ebp
10009be7:	push   eax
10009be8:	mov    DWORD PTR [ebp-0x18],esp
10009beb:	push   DWORD PTR [ebp-0x8]
10009bee:	mov    eax,DWORD PTR [ebp-0x4]
10009bf1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10009bf8:	mov    DWORD PTR [ebp-0x8],eax
10009bfb:	lea    eax,[ebp-0x10]
10009bfe:	mov    fs:0x0,eax
10009c04:	ret    
10009c05:	mov    ecx,DWORD PTR [ebp-0x10]
10009c08:	mov    DWORD PTR fs:0x0,ecx
10009c0f:	pop    ecx
10009c10:	pop    edi
10009c11:	pop    edi
10009c12:	pop    esi
10009c13:	pop    ebx
10009c14:	mov    esp,ebp
10009c16:	pop    ebp
10009c17:	push   ecx
10009c18:	ret    
10009c19:	push   DWORD PTR [esp+0x10]
10009c1d:	push   DWORD PTR [esp+0x10]
10009c21:	push   DWORD PTR [esp+0x10]
10009c25:	push   DWORD PTR [esp+0x10]
10009c29:	push   0x10009a23
10009c2e:	push   0x1000c118
10009c33:	call   0x1000a20e
10009c38:	add    esp,0x18
10009c3b:	ret    
10009c3c:	int3   
10009c3d:	int3   
10009c3e:	int3   
10009c3f:	int3   
10009c40:	push   ebx
10009c41:	push   esi
10009c42:	mov    eax,DWORD PTR [esp+0x18]
10009c46:	or     eax,eax
10009c48:	jne    0x10009c62
10009c4a:	mov    ecx,DWORD PTR [esp+0x14]
10009c4e:	mov    eax,DWORD PTR [esp+0x10]
10009c52:	xor    edx,edx
10009c54:	div    ecx
10009c56:	mov    ebx,eax
10009c58:	mov    eax,DWORD PTR [esp+0xc]
10009c5c:	div    ecx
10009c5e:	mov    edx,ebx
10009c60:	jmp    0x10009ca3
10009c62:	mov    ecx,eax
10009c64:	mov    ebx,DWORD PTR [esp+0x14]
10009c68:	mov    edx,DWORD PTR [esp+0x10]
10009c6c:	mov    eax,DWORD PTR [esp+0xc]
10009c70:	shr    ecx,1
10009c72:	rcr    ebx,1
10009c74:	shr    edx,1
10009c76:	rcr    eax,1
10009c78:	or     ecx,ecx
10009c7a:	jne    0x10009c70
10009c7c:	div    ebx
10009c7e:	mov    esi,eax
10009c80:	mul    DWORD PTR [esp+0x18]
10009c84:	mov    ecx,eax
10009c86:	mov    eax,DWORD PTR [esp+0x14]
10009c8a:	mul    esi
10009c8c:	add    edx,ecx
10009c8e:	jb     0x10009c9e
10009c90:	cmp    edx,DWORD PTR [esp+0x10]
10009c94:	ja     0x10009c9e
10009c96:	jb     0x10009c9f
10009c98:	cmp    eax,DWORD PTR [esp+0xc]
10009c9c:	jbe    0x10009c9f
10009c9e:	dec    esi
10009c9f:	xor    edx,edx
10009ca1:	mov    eax,esi
10009ca3:	pop    esi
10009ca4:	pop    ebx
10009ca5:	ret    0x10
10009ca8:	int3   
10009ca9:	int3   
10009caa:	int3   
10009cab:	int3   
10009cac:	int3   
10009cad:	int3   
10009cae:	int3   
10009caf:	int3   
10009cb0:	mov    eax,DWORD PTR [esp+0x8]
10009cb4:	mov    ecx,DWORD PTR [esp+0x10]
10009cb8:	or     ecx,eax
10009cba:	mov    ecx,DWORD PTR [esp+0xc]
10009cbe:	jne    0x10009cc9
10009cc0:	mov    eax,DWORD PTR [esp+0x4]
10009cc4:	mul    ecx
10009cc6:	ret    0x10
10009cc9:	push   ebx
10009cca:	mul    ecx
10009ccc:	mov    ebx,eax
10009cce:	mov    eax,DWORD PTR [esp+0x8]
10009cd2:	mul    DWORD PTR [esp+0x14]
10009cd6:	add    ebx,eax
10009cd8:	mov    eax,DWORD PTR [esp+0x8]
10009cdc:	mul    ecx
10009cde:	add    edx,ebx
10009ce0:	pop    ebx
10009ce1:	ret    0x10
10009ce4:	mov    eax,DWORD PTR [esp+0x4]
10009ce8:	mov    eax,DWORD PTR [eax]
10009cea:	cmp    DWORD PTR [eax],0xe06d7363
10009cf0:	jne    0x10009d1c
10009cf2:	cmp    DWORD PTR [eax+0x10],0x3
10009cf6:	jne    0x10009d1c
10009cf8:	mov    eax,DWORD PTR [eax+0x14]
10009cfb:	cmp    eax,0x19930520
10009d00:	je     0x10009d17
10009d02:	cmp    eax,0x19930521
10009d07:	je     0x10009d17
10009d09:	cmp    eax,0x19930522
10009d0e:	je     0x10009d17
10009d10:	cmp    eax,0x1994000
10009d15:	jne    0x10009d1c
10009d17:	call   0x1000a214
10009d1c:	xor    eax,eax
10009d1e:	ret    0x4
10009d21:	push   0x10009ce4
10009d26:	call   DWORD PTR ds:0x10001038
10009d2c:	xor    eax,eax
10009d2e:	ret    
10009d2f:	int3   
10009d30:	jmp    DWORD PTR ds:0x10001110
10009d36:	push   0x14
10009d38:	push   0x1000b308
10009d3d:	call   0x10009bc0
10009d42:	push   DWORD PTR ds:0x1000d0f4
10009d48:	mov    esi,DWORD PTR ds:0x100010bc
10009d4e:	call   esi
10009d50:	pop    ecx
10009d51:	mov    DWORD PTR [ebp-0x1c],eax
10009d54:	cmp    eax,0xffffffff
10009d57:	jne    0x10009d65
10009d59:	push   DWORD PTR [ebp+0x8]
10009d5c:	call   DWORD PTR ds:0x100010c0
10009d62:	pop    ecx
10009d63:	jmp    0x10009dcc
10009d65:	push   0x8
10009d67:	call   0x1000a226
10009d6c:	pop    ecx
10009d6d:	and    DWORD PTR [ebp-0x4],0x0
10009d71:	push   DWORD PTR ds:0x1000d0f4
10009d77:	call   esi
10009d79:	mov    DWORD PTR [ebp-0x1c],eax
10009d7c:	push   DWORD PTR ds:0x1000d0f0
10009d82:	call   esi
10009d84:	pop    ecx
10009d85:	pop    ecx
10009d86:	mov    DWORD PTR [ebp-0x20],eax
10009d89:	lea    eax,[ebp-0x20]
10009d8c:	push   eax
10009d8d:	lea    eax,[ebp-0x1c]
10009d90:	push   eax
10009d91:	push   DWORD PTR [ebp+0x8]
10009d94:	mov    esi,DWORD PTR ds:0x100010dc
10009d9a:	call   esi
10009d9c:	pop    ecx
10009d9d:	push   eax
10009d9e:	call   0x1000a220
10009da3:	mov    DWORD PTR [ebp-0x24],eax
10009da6:	push   DWORD PTR [ebp-0x1c]
10009da9:	call   esi
10009dab:	mov    ds:0x1000d0f4,eax
10009db0:	push   DWORD PTR [ebp-0x20]
10009db3:	call   esi
10009db5:	add    esp,0x14
10009db8:	mov    ds:0x1000d0f0,eax
10009dbd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10009dc4:	call   0x10009dd2
10009dc9:	mov    eax,DWORD PTR [ebp-0x24]
10009dcc:	call   0x10009c05
10009dd1:	ret    
10009dd2:	push   0x8
10009dd4:	call   0x1000a21a
10009dd9:	pop    ecx
10009dda:	ret    
10009ddb:	push   DWORD PTR [esp+0x4]
10009ddf:	call   0x10009d36
10009de4:	neg    eax
10009de6:	sbb    eax,eax
10009de8:	neg    eax
10009dea:	pop    ecx
10009deb:	dec    eax
10009dec:	ret    
10009ded:	push   esi
10009dee:	push   edi
10009def:	mov    eax,0x100032b0
10009df4:	mov    edi,0x100032b0
10009df9:	cmp    eax,edi
10009dfb:	mov    esi,eax
10009dfd:	jae    0x10009e0e
10009dff:	mov    eax,DWORD PTR [esi]
10009e01:	test   eax,eax
10009e03:	je     0x10009e07
10009e05:	call   eax
10009e07:	add    esi,0x4
10009e0a:	cmp    esi,edi
10009e0c:	jb     0x10009dff
10009e0e:	pop    edi
10009e0f:	pop    esi
10009e10:	ret    
10009e11:	push   esi
10009e12:	push   edi
10009e13:	mov    eax,0x100032b8
10009e18:	mov    edi,0x100032b8
10009e1d:	cmp    eax,edi
10009e1f:	mov    esi,eax
10009e21:	jae    0x10009e32
10009e23:	mov    eax,DWORD PTR [esi]
10009e25:	test   eax,eax
10009e27:	je     0x10009e2b
10009e29:	call   eax
10009e2b:	add    esi,0x4
10009e2e:	cmp    esi,edi
10009e30:	jb     0x10009e23
10009e32:	pop    edi
10009e33:	pop    esi
10009e34:	ret    
10009e35:	int3   
10009e36:	jmp    DWORD PTR ds:0x10001100
10009e3c:	int3   
10009e3d:	int3   
10009e3e:	int3   
10009e3f:	int3   
10009e40:	mov    ecx,DWORD PTR [esp+0x4]
10009e44:	cmp    WORD PTR [ecx],0x5a4d
10009e49:	je     0x10009e4e
10009e4b:	xor    eax,eax
10009e4d:	ret    
10009e4e:	mov    eax,DWORD PTR [ecx+0x3c]
10009e51:	add    eax,ecx
10009e53:	cmp    DWORD PTR [eax],0x4550
10009e59:	jne    0x10009e4b
10009e5b:	xor    ecx,ecx
10009e5d:	cmp    WORD PTR [eax+0x18],0x10b
10009e63:	sete   cl
10009e66:	mov    eax,ecx
10009e68:	ret    
10009e69:	int3   
10009e6a:	int3   
10009e6b:	int3   
10009e6c:	int3   
10009e6d:	int3   
10009e6e:	int3   
10009e6f:	int3   
10009e70:	mov    eax,DWORD PTR [esp+0x4]
10009e74:	mov    ecx,DWORD PTR [eax+0x3c]
10009e77:	add    ecx,eax
10009e79:	movzx  eax,WORD PTR [ecx+0x14]
10009e7d:	push   ebx
10009e7e:	push   esi
10009e7f:	movzx  esi,WORD PTR [ecx+0x6]
10009e83:	xor    edx,edx
10009e85:	test   esi,esi
10009e87:	push   edi
10009e88:	lea    eax,[eax+ecx*1+0x18]
10009e8c:	jbe    0x10009eac
10009e8e:	mov    edi,DWORD PTR [esp+0x14]
10009e92:	mov    ecx,DWORD PTR [eax+0xc]
10009e95:	cmp    edi,ecx
10009e97:	jb     0x10009ea2
10009e99:	mov    ebx,DWORD PTR [eax+0x8]
10009e9c:	add    ebx,ecx
10009e9e:	cmp    edi,ebx
10009ea0:	jb     0x10009eae
10009ea2:	add    edx,0x1
10009ea5:	add    eax,0x28
10009ea8:	cmp    edx,esi
10009eaa:	jb     0x10009e92
10009eac:	xor    eax,eax
10009eae:	pop    edi
10009eaf:	pop    esi
10009eb0:	pop    ebx
10009eb1:	ret    
10009eb2:	int3   
10009eb3:	int3   
10009eb4:	int3   
10009eb5:	int3   
10009eb6:	int3   
10009eb7:	int3   
10009eb8:	int3   
10009eb9:	int3   
10009eba:	int3   
10009ebb:	int3   
10009ebc:	int3   
10009ebd:	int3   
10009ebe:	int3   
10009ebf:	int3   
10009ec0:	push   ebp
10009ec1:	mov    ebp,esp
10009ec3:	push   0xfffffffe
10009ec5:	push   0x1000b328
10009eca:	push   0x10009c19
10009ecf:	mov    eax,fs:0x0
10009ed5:	push   eax
10009ed6:	sub    esp,0x8
10009ed9:	push   ebx
10009eda:	push   esi
10009edb:	push   edi
10009edc:	mov    eax,ds:0x1000c118
10009ee1:	xor    DWORD PTR [ebp-0x8],eax
10009ee4:	xor    eax,ebp
10009ee6:	push   eax
10009ee7:	lea    eax,[ebp-0x10]
10009eea:	mov    fs:0x0,eax
10009ef0:	mov    DWORD PTR [ebp-0x18],esp
10009ef3:	mov    DWORD PTR [ebp-0x4],0x0
10009efa:	push   0x10000000
10009eff:	call   0x10009e40
10009f04:	add    esp,0x4
10009f07:	test   eax,eax
10009f09:	je     0x10009f60
10009f0b:	mov    eax,DWORD PTR [ebp+0x8]
10009f0e:	sub    eax,0x10000000
10009f13:	push   eax
10009f14:	push   0x10000000
10009f19:	call   0x10009e70
10009f1e:	add    esp,0x8
10009f21:	test   eax,eax
10009f23:	je     0x10009f60
10009f25:	mov    eax,DWORD PTR [eax+0x24]
10009f28:	shr    eax,0x1f
10009f2b:	not    eax
10009f2d:	and    eax,0x1
10009f30:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10009f37:	mov    ecx,DWORD PTR [ebp-0x10]
10009f3a:	mov    DWORD PTR fs:0x0,ecx
10009f41:	pop    ecx
10009f42:	pop    edi
10009f43:	pop    esi
10009f44:	pop    ebx
10009f45:	mov    esp,ebp
10009f47:	pop    ebp
10009f48:	ret    
10009f49:	mov    eax,DWORD PTR [ebp-0x14]
10009f4c:	mov    ecx,DWORD PTR [eax]
10009f4e:	mov    eax,DWORD PTR [ecx]
10009f50:	xor    edx,edx
10009f52:	cmp    eax,0xc0000005
10009f57:	sete   dl
10009f5a:	mov    eax,edx
10009f5c:	ret    
10009f5d:	mov    esp,DWORD PTR [ebp-0x18]
10009f60:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10009f67:	xor    eax,eax
10009f69:	mov    ecx,DWORD PTR [ebp-0x10]
10009f6c:	mov    DWORD PTR fs:0x0,ecx
10009f73:	pop    ecx
10009f74:	pop    edi
10009f75:	pop    esi
10009f76:	pop    ebx
10009f77:	mov    esp,ebp
10009f79:	pop    ebp
10009f7a:	ret    
10009f7b:	int3   
10009f7c:	jmp    DWORD PTR ds:0x100010f8
10009f82:	jmp    DWORD PTR ds:0x100010f4
10009f88:	push   esi
10009f89:	push   0x30000
10009f8e:	push   0x10000
10009f93:	xor    esi,esi
10009f95:	push   esi
10009f96:	call   0x1000a232
10009f9b:	add    esp,0xc
10009f9e:	test   eax,eax
10009fa0:	je     0x10009faf
10009fa2:	push   esi
10009fa3:	push   esi
10009fa4:	push   esi
10009fa5:	push   esi
10009fa6:	push   esi
10009fa7:	call   0x1000a22c
10009fac:	add    esp,0x14
10009faf:	pop    esi
10009fb0:	ret    
10009fb1:	xor    eax,eax
10009fb3:	ret    
10009fb4:	push   ebp
10009fb5:	mov    ebp,esp
10009fb7:	sub    esp,0x10
10009fba:	mov    eax,ds:0x1000c118
10009fbf:	and    DWORD PTR [ebp-0x8],0x0
10009fc3:	and    DWORD PTR [ebp-0x4],0x0
10009fc7:	push   ebx
10009fc8:	push   edi
10009fc9:	mov    edi,0xbb40e64e
10009fce:	cmp    eax,edi
10009fd0:	mov    ebx,0xffff0000
10009fd5:	je     0x10009fe4
10009fd7:	test   ebx,eax
10009fd9:	je     0x10009fe4
10009fdb:	not    eax
10009fdd:	mov    ds:0x1000c11c,eax
10009fe2:	jmp    0x1000a044
10009fe4:	push   esi
10009fe5:	lea    eax,[ebp-0x8]
10009fe8:	push   eax
10009fe9:	call   DWORD PTR ds:0x1000102c
10009fef:	mov    esi,DWORD PTR [ebp-0x4]
10009ff2:	xor    esi,DWORD PTR [ebp-0x8]
10009ff5:	call   DWORD PTR ds:0x10001010
10009ffb:	xor    esi,eax
10009ffd:	call   DWORD PTR ds:0x10001024
1000a003:	xor    esi,eax
1000a005:	call   DWORD PTR ds:0x1000103c
1000a00b:	xor    esi,eax
1000a00d:	lea    eax,[ebp-0x10]
1000a010:	push   eax
1000a011:	call   DWORD PTR ds:0x10001028
1000a017:	mov    eax,DWORD PTR [ebp-0xc]
1000a01a:	xor    eax,DWORD PTR [ebp-0x10]
1000a01d:	xor    esi,eax
1000a01f:	cmp    esi,edi
1000a021:	jne    0x1000a02a
1000a023:	mov    esi,0xbb40e64f
1000a028:	jmp    0x1000a035
1000a02a:	test   ebx,esi
1000a02c:	jne    0x1000a035
1000a02e:	mov    eax,esi
1000a030:	shl    eax,0x10
1000a033:	or     esi,eax
1000a035:	mov    DWORD PTR ds:0x1000c118,esi
1000a03b:	not    esi
1000a03d:	mov    DWORD PTR ds:0x1000c11c,esi
1000a043:	pop    esi
1000a044:	pop    edi
1000a045:	pop    ebx
1000a046:	leave  
1000a047:	ret    
1000a048:	push   ebp
1000a049:	mov    ebp,esp
1000a04b:	sub    esp,0x328
1000a051:	mov    ds:0x1000cec8,eax
1000a056:	mov    DWORD PTR ds:0x1000cec4,ecx
1000a05c:	mov    DWORD PTR ds:0x1000cec0,edx
1000a062:	mov    DWORD PTR ds:0x1000cebc,ebx
1000a068:	mov    DWORD PTR ds:0x1000ceb8,esi
1000a06e:	mov    DWORD PTR ds:0x1000ceb4,edi
1000a074:	data16 mov WORD PTR ds:0x1000cee0,ss
1000a07b:	data16 mov WORD PTR ds:0x1000ced4,cs
1000a082:	data16 mov WORD PTR ds:0x1000ceb0,ds
1000a089:	data16 mov WORD PTR ds:0x1000ceac,es
1000a090:	data16 mov WORD PTR ds:0x1000cea8,fs
1000a097:	data16 mov WORD PTR ds:0x1000cea4,gs
1000a09e:	pushf  
1000a09f:	pop    DWORD PTR ds:0x1000ced8
1000a0a5:	mov    eax,DWORD PTR [ebp+0x0]
1000a0a8:	mov    ds:0x1000cecc,eax
1000a0ad:	mov    eax,DWORD PTR [ebp+0x4]
1000a0b0:	mov    ds:0x1000ced0,eax
1000a0b5:	lea    eax,[ebp+0x8]
1000a0b8:	mov    ds:0x1000cedc,eax
1000a0bd:	mov    eax,DWORD PTR [ebp-0x320]
1000a0c3:	mov    DWORD PTR ds:0x1000ce18,0x10001
1000a0cd:	mov    eax,ds:0x1000ced0
1000a0d2:	mov    ds:0x1000cdcc,eax
1000a0d7:	mov    DWORD PTR ds:0x1000cdc0,0xc0000409
1000a0e1:	mov    DWORD PTR ds:0x1000cdc4,0x1
1000a0eb:	mov    eax,ds:0x1000c118
1000a0f0:	mov    DWORD PTR [ebp-0x328],eax
1000a0f6:	mov    eax,ds:0x1000c11c
1000a0fb:	mov    DWORD PTR [ebp-0x324],eax
1000a101:	call   DWORD PTR ds:0x100010a4
1000a107:	mov    ds:0x1000ce10,eax
1000a10c:	push   0x1
1000a10e:	call   0x1000a238
1000a113:	pop    ecx
1000a114:	push   0x0
1000a116:	call   DWORD PTR ds:0x10001038
1000a11c:	push   0x10003144
1000a121:	call   DWORD PTR ds:0x10001040
1000a127:	cmp    DWORD PTR ds:0x1000ce10,0x0
1000a12e:	jne    0x1000a138
1000a130:	push   0x1
1000a132:	call   0x1000a238
1000a137:	pop    ecx
1000a138:	push   0xc0000409
1000a13d:	call   DWORD PTR ds:0x1000108c
1000a143:	push   eax
1000a144:	call   DWORD PTR ds:0x10001088
1000a14a:	leave  
1000a14b:	ret    
1000a14c:	push   0x14
1000a14e:	push   0x1000b348
1000a153:	call   0x10009bc0
1000a158:	and    DWORD PTR [ebp-0x4],0x0
1000a15c:	dec    DWORD PTR [ebp+0x10]
1000a15f:	js     0x1000a19b
1000a161:	mov    ecx,DWORD PTR [ebp+0x8]
1000a164:	sub    ecx,DWORD PTR [ebp+0xc]
1000a167:	mov    DWORD PTR [ebp+0x8],ecx
1000a16a:	call   DWORD PTR [ebp+0x14]
1000a16d:	jmp    0x1000a15c
1000a16f:	mov    eax,DWORD PTR [ebp-0x14]
1000a172:	mov    DWORD PTR [ebp-0x1c],eax
1000a175:	mov    eax,DWORD PTR [ebp-0x1c]
1000a178:	mov    eax,DWORD PTR [eax]
1000a17a:	mov    DWORD PTR [ebp-0x20],eax
1000a17d:	mov    eax,DWORD PTR [ebp-0x20]
1000a180:	cmp    DWORD PTR [eax],0xe06d7363
1000a186:	je     0x1000a193
1000a188:	mov    DWORD PTR [ebp-0x24],0x0
1000a18f:	mov    eax,DWORD PTR [ebp-0x24]
1000a192:	ret    
1000a193:	call   0x1000a214
1000a198:	mov    esp,DWORD PTR [ebp-0x18]
1000a19b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1000a1a2:	call   0x10009c05
1000a1a7:	ret    0x10
1000a1aa:	push   0xc
1000a1ac:	push   0x1000b368
1000a1b1:	call   0x10009bc0
1000a1b6:	and    DWORD PTR [ebp-0x1c],0x0
1000a1ba:	mov    esi,DWORD PTR [ebp+0xc]
1000a1bd:	mov    eax,esi
1000a1bf:	imul   eax,DWORD PTR [ebp+0x10]
1000a1c3:	add    DWORD PTR [ebp+0x8],eax
1000a1c6:	and    DWORD PTR [ebp-0x4],0x0
1000a1ca:	dec    DWORD PTR [ebp+0x10]
1000a1cd:	js     0x1000a1da
1000a1cf:	sub    DWORD PTR [ebp+0x8],esi
1000a1d2:	mov    ecx,DWORD PTR [ebp+0x8]
1000a1d5:	call   DWORD PTR [ebp+0x14]
1000a1d8:	jmp    0x1000a1ca
1000a1da:	mov    DWORD PTR [ebp-0x1c],0x1
1000a1e1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1000a1e8:	call   0x1000a1f5
1000a1ed:	call   0x10009c05
1000a1f2:	ret    0x10
1000a1f5:	cmp    DWORD PTR [ebp-0x1c],0x0
1000a1f9:	jne    0x1000a20c
1000a1fb:	push   DWORD PTR [ebp+0x14]
1000a1fe:	push   DWORD PTR [ebp+0x10]
1000a201:	push   DWORD PTR [ebp+0xc]
1000a204:	push   DWORD PTR [ebp+0x8]
1000a207:	call   0x1000a14c
1000a20c:	ret    
1000a20d:	int3   
1000a20e:	jmp    DWORD PTR ds:0x100010d4
1000a214:	jmp    DWORD PTR ds:0x100010d0
1000a21a:	jmp    DWORD PTR ds:0x100010cc
1000a220:	jmp    DWORD PTR ds:0x100010c8
1000a226:	jmp    DWORD PTR ds:0x100010c4
1000a22c:	jmp    DWORD PTR ds:0x100010b8
1000a232:	jmp    DWORD PTR ds:0x100010b4
1000a238:	jmp    DWORD PTR ds:0x100010b0
1000a23e:	jmp    DWORD PTR ds:0x100010ac
1000a244:	mov    ecx,DWORD PTR [ebp-0x10]
1000a247:	jmp    0x100037ba
1000a24c:	mov    edx,DWORD PTR [esp+0x8]
1000a250:	lea    eax,[edx+0xc]
1000a253:	mov    ecx,DWORD PTR [edx-0x14]
1000a256:	xor    ecx,eax
1000a258:	call   0x10009a23
1000a25d:	mov    eax,0x1000a9a8
1000a262:	jmp    0x10009a32
1000a267:	mov    ecx,DWORD PTR [ebp-0x10]
1000a26a:	jmp    0x100037d1
1000a26f:	mov    edx,DWORD PTR [esp+0x8]
1000a273:	lea    eax,[edx+0xc]
1000a276:	mov    ecx,DWORD PTR [edx-0x14]
1000a279:	xor    ecx,eax
1000a27b:	call   0x10009a23
1000a280:	mov    eax,0x1000a9d4
1000a285:	jmp    0x10009a32
1000a28a:	mov    ecx,DWORD PTR [ebp-0x10]
1000a28d:	jmp    0x100037fe
1000a292:	mov    edx,DWORD PTR [esp+0x8]
1000a296:	lea    eax,[edx+0xc]
1000a299:	mov    ecx,DWORD PTR [edx-0x14]
1000a29c:	xor    ecx,eax
1000a29e:	call   0x10009a23
1000a2a3:	mov    eax,0x1000aa00
1000a2a8:	jmp    0x10009a32
1000a2ad:	lea    ecx,[ebp-0x2218]
1000a2b3:	jmp    0x100037ba
1000a2b8:	lea    ecx,[ebp-0x2218]
1000a2be:	jmp    0x100037d1
1000a2c3:	lea    ecx,[ebp-0x2218]
1000a2c9:	jmp    0x100037fe
1000a2ce:	lea    ecx,[ebp-0x2218]
1000a2d4:	jmp    0x1000381c
1000a2d9:	lea    ecx,[ebp-0x2224]
1000a2df:	jmp    0x100037ba
1000a2e4:	lea    ecx,[ebp-0x2224]
1000a2ea:	jmp    0x100037d1
1000a2ef:	lea    ecx,[ebp-0x2224]
1000a2f5:	jmp    0x100037fe
1000a2fa:	lea    ecx,[ebp-0x2224]
1000a300:	jmp    0x1000381c
1000a305:	mov    edx,DWORD PTR [esp+0x8]
1000a309:	lea    eax,[edx+0xc]
1000a30c:	mov    ecx,DWORD PTR [edx-0x222c]
1000a312:	xor    ecx,eax
1000a314:	call   0x10009a23
1000a319:	mov    ecx,DWORD PTR [edx-0x4]
1000a31c:	xor    ecx,eax
1000a31e:	call   0x10009a23
1000a323:	mov    eax,0x1000aa24
1000a328:	jmp    0x10009a32
1000a32d:	lea    ecx,[ebp-0x2218]
1000a333:	jmp    0x100037ba
1000a338:	lea    ecx,[ebp-0x2218]
1000a33e:	jmp    0x100037d1
1000a343:	lea    ecx,[ebp-0x2218]
1000a349:	jmp    0x100037fe
1000a34e:	lea    ecx,[ebp-0x2218]
1000a354:	jmp    0x1000381c
1000a359:	lea    ecx,[ebp-0x2220]
1000a35f:	jmp    0x100037ba
1000a364:	lea    ecx,[ebp-0x2220]
1000a36a:	jmp    0x100037d1
1000a36f:	lea    ecx,[ebp-0x2220]
1000a375:	jmp    0x100037fe
1000a37a:	lea    ecx,[ebp-0x2220]
1000a380:	jmp    0x1000381c
1000a385:	mov    edx,DWORD PTR [esp+0x8]
1000a389:	lea    eax,[edx+0xc]
1000a38c:	mov    ecx,DWORD PTR [edx-0x2230]
1000a392:	xor    ecx,eax
1000a394:	call   0x10009a23
1000a399:	mov    ecx,DWORD PTR [edx-0x4]
1000a39c:	xor    ecx,eax
1000a39e:	call   0x10009a23
1000a3a3:	mov    eax,0x1000aa88
1000a3a8:	jmp    0x10009a32
1000a3ad:	lea    ecx,[ebp-0x14]
1000a3b0:	jmp    0x10003def
1000a3b5:	mov    edx,DWORD PTR [esp+0x8]
1000a3b9:	lea    eax,[edx+0xc]
1000a3bc:	mov    ecx,DWORD PTR [edx-0x18]
1000a3bf:	xor    ecx,eax
1000a3c1:	call   0x10009a23
1000a3c6:	mov    eax,0x1000aaf4
1000a3cb:	jmp    0x10009a32
1000a3d0:	lea    ecx,[ebp-0x28]
1000a3d3:	jmp    0x100037ba
1000a3d8:	lea    ecx,[ebp-0x28]
1000a3db:	jmp    0x100037d1
1000a3e0:	lea    ecx,[ebp-0x28]
1000a3e3:	jmp    0x100037fe
1000a3e8:	lea    ecx,[ebp-0x28]
1000a3eb:	jmp    0x1000381c
1000a3f0:	lea    ecx,[ebp-0x20]
1000a3f3:	jmp    0x100037ba
1000a3f8:	lea    ecx,[ebp-0x20]
1000a3fb:	jmp    0x100037d1
1000a400:	lea    ecx,[ebp-0x20]
1000a403:	jmp    0x100037fe
1000a408:	lea    ecx,[ebp-0x20]
1000a40b:	jmp    0x1000381c
1000a410:	mov    edx,DWORD PTR [esp+0x8]
1000a414:	lea    eax,[edx+0xc]
1000a417:	mov    ecx,DWORD PTR [edx-0x54]
1000a41a:	xor    ecx,eax
1000a41c:	call   0x10009a23
1000a421:	mov    eax,0x1000ab18
1000a426:	jmp    0x10009a32
1000a42b:	lea    ecx,[ebp-0x14]
1000a42e:	jmp    0x100037ba
1000a433:	lea    ecx,[ebp-0x14]
1000a436:	jmp    0x100037d1
1000a43b:	lea    ecx,[ebp-0x14]
1000a43e:	jmp    0x100037fe
1000a443:	lea    ecx,[ebp-0x14]
1000a446:	jmp    0x1000381c
1000a44b:	mov    edx,DWORD PTR [esp+0x8]
1000a44f:	lea    eax,[edx+0xc]
1000a452:	mov    ecx,DWORD PTR [edx-0x18]
1000a455:	xor    ecx,eax
1000a457:	call   0x10009a23
1000a45c:	mov    eax,0x1000ab9c
1000a461:	jmp    0x10009a32
1000a466:	lea    ecx,[ebp-0x18]
1000a469:	jmp    0x10006429
1000a46e:	mov    edx,DWORD PTR [esp+0x8]
1000a472:	lea    eax,[edx+0xc]
1000a475:	mov    ecx,DWORD PTR [edx-0x1c]
1000a478:	xor    ecx,eax
1000a47a:	call   0x10009a23
1000a47f:	mov    eax,0x1000abc8
1000a484:	jmp    0x10009a32
1000a489:	mov    ecx,DWORD PTR [ebp-0x10]
1000a48c:	jmp    0x1000631e
1000a491:	mov    edx,DWORD PTR [esp+0x8]
1000a495:	lea    eax,[edx+0xc]
1000a498:	mov    ecx,DWORD PTR [edx-0x14]
1000a49b:	xor    ecx,eax
1000a49d:	call   0x10009a23
1000a4a2:	mov    eax,0x1000abf4
1000a4a7:	jmp    0x10009a32
1000a4ac:	mov    ecx,DWORD PTR [ebp-0x10]
1000a4af:	jmp    0x100062b4
1000a4b4:	mov    edx,DWORD PTR [esp+0x8]
1000a4b8:	lea    eax,[edx+0xc]
1000a4bb:	mov    ecx,DWORD PTR [edx-0x14]
1000a4be:	xor    ecx,eax
1000a4c0:	call   0x10009a23
1000a4c5:	mov    eax,0x1000ac74
1000a4ca:	jmp    0x10009a32
1000a4cf:	push   DWORD PTR [ebp+0x8]
1000a4d2:	call   0x10003eeb
1000a4d7:	pop    ecx
1000a4d8:	ret    
1000a4d9:	mov    edx,DWORD PTR [esp+0x8]
1000a4dd:	lea    eax,[edx+0xc]
1000a4e0:	mov    ecx,DWORD PTR [edx-0x10]
1000a4e3:	xor    ecx,eax
1000a4e5:	call   0x10009a23
1000a4ea:	mov    eax,0x1000acb0
1000a4ef:	jmp    0x10009a32
1000a4f4:	lea    ecx,[ebp-0x1c]
1000a4f7:	jmp    0x10006232
1000a4fc:	mov    edx,DWORD PTR [esp+0x8]
1000a500:	lea    eax,[edx+0xc]
1000a503:	mov    ecx,DWORD PTR [edx-0x20]
1000a506:	xor    ecx,eax
1000a508:	call   0x10009a23
1000a50d:	mov    eax,0x1000ad08
1000a512:	jmp    0x10009a32
1000a517:	mov    ecx,DWORD PTR [ebp-0x10]
1000a51a:	jmp    0x10006232
1000a51f:	mov    edx,DWORD PTR [esp+0x8]
1000a523:	lea    eax,[edx+0xc]
1000a526:	mov    ecx,DWORD PTR [edx-0x14]
1000a529:	xor    ecx,eax
1000a52b:	call   0x10009a23
1000a530:	mov    eax,0x1000ad34
1000a535:	jmp    0x10009a32
1000a53a:	mov    ecx,DWORD PTR [ebp-0x10]
1000a53d:	jmp    0x10006429
1000a542:	mov    ecx,DWORD PTR [ebp-0x10]
1000a545:	add    ecx,0xc
1000a548:	jmp    0x100062b4
1000a54d:	mov    edx,DWORD PTR [esp+0x8]
1000a551:	lea    eax,[edx+0xc]
1000a554:	mov    ecx,DWORD PTR [edx-0x14]
1000a557:	xor    ecx,eax
1000a559:	call   0x10009a23
1000a55e:	mov    eax,0x1000ad68
1000a563:	jmp    0x10009a32
1000a568:	lea    ecx,[ebp-0x220]
1000a56e:	jmp    0x100062b4
1000a573:	lea    ecx,[ebp-0x220]
1000a579:	jmp    0x1000657d
1000a57e:	push   DWORD PTR [ebp-0x224]
1000a584:	call   0x10003eeb
1000a589:	pop    ecx
1000a58a:	ret    
1000a58b:	mov    edx,DWORD PTR [esp+0x8]
1000a58f:	lea    eax,[edx+0xc]
1000a592:	mov    ecx,DWORD PTR [edx-0x228]
1000a598:	xor    ecx,eax
1000a59a:	call   0x10009a23
1000a59f:	mov    ecx,DWORD PTR [edx-0x4]
1000a5a2:	xor    ecx,eax
1000a5a4:	call   0x10009a23
1000a5a9:	mov    eax,0x1000ada4
1000a5ae:	jmp    0x10009a32
1000a5b3:	mov    ecx,DWORD PTR [ebp-0x10]
1000a5b6:	jmp    0x100068e9
1000a5bb:	mov    edx,DWORD PTR [esp+0x8]
1000a5bf:	lea    eax,[edx+0xc]
1000a5c2:	mov    ecx,DWORD PTR [edx-0x14]
1000a5c5:	xor    ecx,eax
1000a5c7:	call   0x10009a23
1000a5cc:	mov    eax,0x1000add0
1000a5d1:	jmp    0x10009a32
1000a5d6:	lea    ecx,[ebp-0x2c]
1000a5d9:	jmp    0x100062b4
1000a5de:	lea    ecx,[ebp-0x1c]
1000a5e1:	jmp    0x100062b4
1000a5e6:	lea    ecx,[ebp-0x2c]
1000a5e9:	jmp    0x100062b4
1000a5ee:	mov    edx,DWORD PTR [esp+0x8]
1000a5f2:	lea    eax,[edx+0xc]
1000a5f5:	mov    ecx,DWORD PTR [edx-0x30]
1000a5f8:	xor    ecx,eax
1000a5fa:	call   0x10009a23
1000a5ff:	mov    eax,0x1000ae0c
1000a604:	jmp    0x10009a32
1000a609:	lea    ecx,[ebp-0x1c]
1000a60c:	jmp    0x100062b4
1000a611:	mov    edx,DWORD PTR [esp+0x8]
1000a615:	lea    eax,[edx+0xc]
1000a618:	mov    ecx,DWORD PTR [edx-0x20]
1000a61b:	xor    ecx,eax
1000a61d:	call   0x10009a23
1000a622:	mov    eax,0x1000ae38
1000a627:	jmp    0x10009a32
1000a62c:	push   DWORD PTR [ebp-0x10]
1000a62f:	call   0x10003eeb
1000a634:	pop    ecx
1000a635:	ret    
1000a636:	mov    edx,DWORD PTR [esp+0x8]
1000a63a:	lea    eax,[edx+0xc]
1000a63d:	mov    ecx,DWORD PTR [edx-0x14]
1000a640:	xor    ecx,eax
1000a642:	call   0x10009a23
1000a647:	mov    eax,0x1000ae64
1000a64c:	jmp    0x10009a32
1000a651:	mov    ecx,DWORD PTR [ebp-0x10]
1000a654:	jmp    0x10006ad4
1000a659:	mov    edx,DWORD PTR [esp+0x8]
1000a65d:	lea    eax,[edx+0xc]
1000a660:	mov    ecx,DWORD PTR [edx-0x14]
1000a663:	xor    ecx,eax
1000a665:	call   0x10009a23
1000a66a:	mov    eax,0x1000ae90
1000a66f:	jmp    0x10009a32
1000a674:	mov    ecx,DWORD PTR [ebp-0x10]
1000a677:	jmp    0x10006d11
1000a67c:	mov    edx,DWORD PTR [esp+0x8]
1000a680:	lea    eax,[edx+0xc]
1000a683:	mov    ecx,DWORD PTR [edx-0x14]
1000a686:	xor    ecx,eax
1000a688:	call   0x10009a23
1000a68d:	mov    eax,0x1000aebc
1000a692:	jmp    0x10009a32
1000a697:	lea    ecx,[ebp-0x14]
1000a69a:	jmp    0x100068e9
1000a69f:	lea    ecx,[ebp-0x14]
1000a6a2:	jmp    0x10006ad4
1000a6a7:	lea    ecx,[ebp-0x14]
1000a6aa:	jmp    0x10006d11
1000a6af:	lea    ecx,[ebp-0x14]
1000a6b2:	jmp    0x10006d2f
1000a6b7:	mov    edx,DWORD PTR [esp+0x8]
1000a6bb:	lea    eax,[edx+0xc]
1000a6be:	mov    ecx,DWORD PTR [edx-0x18]
1000a6c1:	xor    ecx,eax
1000a6c3:	call   0x10009a23
1000a6c8:	mov    eax,0x1000af00
1000a6cd:	jmp    0x10009a32
1000a6d2:	mov    ecx,DWORD PTR [ebp-0x10]
1000a6d5:	jmp    0x1000701f
1000a6da:	mov    edx,DWORD PTR [esp+0x8]
1000a6de:	lea    eax,[edx+0xc]
1000a6e1:	mov    ecx,DWORD PTR [edx-0x14]
1000a6e4:	xor    ecx,eax
1000a6e6:	call   0x10009a23
1000a6eb:	mov    eax,0x1000af2c
1000a6f0:	jmp    0x10009a32
1000a6f5:	mov    ecx,DWORD PTR [ebp-0x10]
1000a6f8:	jmp    0x10007035
1000a6fd:	mov    edx,DWORD PTR [esp+0x8]
1000a701:	lea    eax,[edx+0xc]
1000a704:	mov    ecx,DWORD PTR [edx-0x14]
1000a707:	xor    ecx,eax
1000a709:	call   0x10009a23
1000a70e:	mov    eax,0x1000af58
1000a713:	jmp    0x10009a32
1000a718:	mov    ecx,DWORD PTR [ebp-0x10]
1000a71b:	jmp    0x10007061
1000a720:	mov    edx,DWORD PTR [esp+0x8]
1000a724:	lea    eax,[edx+0xc]
1000a727:	mov    ecx,DWORD PTR [edx-0x14]
1000a72a:	xor    ecx,eax
1000a72c:	call   0x10009a23
1000a731:	mov    eax,0x1000af84
1000a736:	jmp    0x10009a32
1000a73b:	mov    ecx,DWORD PTR [ebp-0x10]
1000a73e:	jmp    0x10007a7a
1000a743:	mov    edx,DWORD PTR [esp+0x8]
1000a747:	lea    eax,[edx+0xc]
1000a74a:	mov    ecx,DWORD PTR [edx-0x14]
1000a74d:	xor    ecx,eax
1000a74f:	call   0x10009a23
1000a754:	mov    eax,0x1000afb0
1000a759:	jmp    0x10009a32
1000a75e:	mov    ecx,DWORD PTR [ebp-0x10]
1000a761:	jmp    0x10007a91
1000a766:	mov    edx,DWORD PTR [esp+0x8]
1000a76a:	lea    eax,[edx+0xc]
1000a76d:	mov    ecx,DWORD PTR [edx-0x14]
1000a770:	xor    ecx,eax
1000a772:	call   0x10009a23
1000a777:	mov    eax,0x1000afdc
1000a77c:	jmp    0x10009a32
1000a781:	lea    ecx,[ebp-0x220]
1000a787:	jmp    0x100062b4
1000a78c:	lea    ecx,[ebp-0x220]
1000a792:	jmp    0x1000657d
1000a797:	mov    edx,DWORD PTR [esp+0x8]
1000a79b:	lea    eax,[edx+0xc]
1000a79e:	mov    ecx,DWORD PTR [edx-0x224]
1000a7a4:	xor    ecx,eax
1000a7a6:	call   0x10009a23
1000a7ab:	mov    ecx,DWORD PTR [edx-0x4]
1000a7ae:	xor    ecx,eax
1000a7b0:	call   0x10009a23
1000a7b5:	mov    eax,0x1000b010
1000a7ba:	jmp    0x10009a32
1000a7bf:	lea    ecx,[ebp-0x220]
1000a7c5:	jmp    0x100062b4
1000a7ca:	lea    ecx,[ebp-0x220]
1000a7d0:	jmp    0x1000657d
1000a7d5:	mov    edx,DWORD PTR [esp+0x8]
1000a7d9:	lea    eax,[edx+0xc]
1000a7dc:	mov    ecx,DWORD PTR [edx-0x228]
1000a7e2:	xor    ecx,eax
1000a7e4:	call   0x10009a23
1000a7e9:	mov    ecx,DWORD PTR [edx-0x4]
1000a7ec:	xor    ecx,eax
1000a7ee:	call   0x10009a23
1000a7f3:	mov    eax,0x1000b044
1000a7f8:	jmp    0x10009a32
1000a7fd:	lea    ecx,[ebp-0x14]
1000a800:	jmp    0x10007a7a
1000a805:	lea    ecx,[ebp-0x14]
1000a808:	jmp    0x10007a91
1000a80d:	lea    ecx,[ebp-0x14]
1000a810:	jmp    0x10007ae4
1000a815:	mov    edx,DWORD PTR [esp+0x8]
1000a819:	lea    eax,[edx+0xc]
1000a81c:	mov    ecx,DWORD PTR [edx-0x40]
1000a81f:	xor    ecx,eax
1000a821:	call   0x10009a23
1000a826:	mov    eax,0x1000b080
1000a82b:	jmp    0x10009a32
1000a830:	push   DWORD PTR [ebp-0x10]
1000a833:	call   0x10008486
1000a838:	ret    
1000a839:	mov    edx,DWORD PTR [esp+0x8]
1000a83d:	lea    eax,[edx+0xc]
1000a840:	mov    ecx,DWORD PTR [edx-0x14]
1000a843:	xor    ecx,eax
1000a845:	call   0x10009a23
1000a84a:	mov    eax,0x1000b0ac
1000a84f:	jmp    0x10009a32
1000a854:	mov    ecx,DWORD PTR [ebp-0x10]
1000a857:	jmp    0x1000882b
1000a85c:	mov    edx,DWORD PTR [esp+0x8]
1000a860:	lea    eax,[edx+0xc]
1000a863:	mov    ecx,DWORD PTR [edx-0x14]
1000a866:	xor    ecx,eax
1000a868:	call   0x10009a23
1000a86d:	mov    eax,0x1000b0d8
1000a872:	jmp    0x10009a32
1000a877:	lea    ecx,[ebp-0x20]
1000a87a:	jmp    0x1000882b
1000a87f:	lea    ecx,[ebp-0x20]
1000a882:	jmp    0x10008841
1000a887:	lea    ecx,[ebp-0x29]
1000a88a:	jmp    0x10008626
1000a88f:	mov    edx,DWORD PTR [esp+0x8]
1000a893:	lea    eax,[edx+0xc]
1000a896:	mov    ecx,DWORD PTR [edx-0x30]
1000a899:	xor    ecx,eax
1000a89b:	call   0x10009a23
1000a8a0:	mov    eax,0x1000b120
1000a8a5:	jmp    0x10009a32
1000a8aa:	lea    ecx,[ebp-0x2c]
1000a8ad:	jmp    0x1000701f
1000a8b2:	lea    ecx,[ebp-0x2c]
1000a8b5:	jmp    0x10007035
1000a8ba:	lea    ecx,[ebp-0x2c]
1000a8bd:	jmp    0x10007061
1000a8c2:	lea    ecx,[ebp-0x2c]
1000a8c5:	jmp    0x1000707f
1000a8ca:	lea    ecx,[ebp-0x3c]
1000a8cd:	jmp    0x10006517
1000a8d2:	mov    edx,DWORD PTR [esp+0x8]
1000a8d6:	lea    eax,[edx+0xc]
1000a8d9:	mov    ecx,DWORD PTR [edx-0x40]
1000a8dc:	xor    ecx,eax
1000a8de:	call   0x10009a23
1000a8e3:	mov    eax,0x1000b18c
1000a8e8:	jmp    0x10009a32
1000a8ed:	mov    ecx,DWORD PTR [ebp-0x10]
1000a8f0:	jmp    0x1000920b
1000a8f5:	mov    edx,DWORD PTR [esp+0x8]
1000a8f9:	lea    eax,[edx+0xc]
1000a8fc:	mov    ecx,DWORD PTR [edx-0x14]
1000a8ff:	xor    ecx,eax
1000a901:	call   0x10009a23
1000a906:	mov    eax,0x1000b228
1000a90b:	jmp    0x10009a32
1000a910:	lea    ecx,[ebp-0x1c]
1000a913:	jmp    0x1000920b
1000a918:	lea    ecx,[ebp-0x1c]
1000a91b:	jmp    0x10009221
1000a920:	lea    ecx,[ebp-0x1c]
1000a923:	jmp    0x1000920b
1000a928:	lea    ecx,[ebp-0x1c]
1000a92b:	jmp    0x10009221
1000a930:	lea    ecx,[ebp-0x1c]
1000a933:	jmp    0x1000920b
1000a938:	lea    ecx,[ebp-0x1c]
1000a93b:	jmp    0x10009221
1000a940:	mov    edx,DWORD PTR [esp+0x8]
1000a944:	lea    eax,[edx+0xc]
1000a947:	mov    ecx,DWORD PTR [edx-0x20]
1000a94a:	xor    ecx,eax
1000a94c:	call   0x10009a23
1000a951:	mov    eax,0x1000b24c
1000a956:	jmp    0x10009a32
1000a95b:	lea    ecx,[ebp-0x1c]
1000a95e:	jmp    0x100037ba
1000a963:	lea    ecx,[ebp-0x1c]
1000a966:	jmp    0x100037d1
1000a96b:	lea    ecx,[ebp-0x1c]
1000a96e:	jmp    0x100037fe
1000a973:	lea    ecx,[ebp-0x1c]
1000a976:	jmp    0x1000381c
1000a97b:	mov    edx,DWORD PTR [esp+0x8]
1000a97f:	lea    eax,[edx+0xc]
1000a982:	mov    ecx,DWORD PTR [edx-0x20]
1000a985:	xor    ecx,eax
1000a987:	call   0x10009a23
1000a98c:	mov    eax,0x1000b2c0
1000a991:	jmp    0x10009a32
1000a996:	mov    ecx,0x1000c960
1000a99b:	jmp    0x1000416d
1000a9a0:	(bad)  
1000a9a1:	(bad)  
1000a9a2:	(bad)  
1000a9a3:	inc    DWORD PTR [edx+eiz*4+0x0]
1000a9a7:	adc    BYTE PTR [edx],ah
1000a9a9:	add    eax,0x11993
1000a9ae:	add    BYTE PTR [eax],al
1000a9b0:	mov    al,ds:0x1000a9
	...
1000a9c9:	add    BYTE PTR [eax],al
1000a9cb:	add    bh,bh
1000a9cd:	(bad)  
1000a9ce:	(bad)  
1000a9cf:	jmp    DWORD PTR [edi-0x5e]
1000a9d2:	add    BYTE PTR [eax],dl
1000a9d4:	and    al,BYTE PTR ds:0x11993
1000a9da:	add    BYTE PTR [eax],al
1000a9dc:	int3   
1000a9dd:	test   eax,0x1000
	...
1000a9f6:	add    BYTE PTR [eax],al
1000a9f8:	(bad)  
1000a9f9:	(bad)  
1000a9fa:	(bad)  
1000a9fb:	dec    DWORD PTR [edx+0x221000a2]
1000aa01:	add    eax,0x11993
1000aa06:	add    BYTE PTR [eax],al
1000aa08:	clc    
1000aa09:	test   eax,0x1000
	...
1000aa22:	add    BYTE PTR [eax],al
1000aa24:	and    al,BYTE PTR ds:0x81993
1000aa2a:	add    BYTE PTR [eax],al
1000aa2c:	dec    eax
1000aa2d:	stos   BYTE PTR es:[edi],al
1000aa2e:	add    BYTE PTR [eax],dl
	...
1000aa48:	(bad)  
1000aa49:	(bad)  
1000aa4a:	(bad)  
1000aa4b:	jmp    FWORD PTR [ebp-0xefff5e]
1000aa51:	(bad)  
1000aa52:	(bad)  
1000aa53:	(bad)  
1000aa54:	mov    eax,0xff1000a2
1000aa59:	(bad)  
1000aa5a:	(bad)  
1000aa5b:	inc    ebx
1000aa5d:	mov    ds:0xffff1000,al
1000aa62:	(bad)  
1000aa63:	dec    esi
1000aa65:	mov    ds:0x31000,al
1000aa6a:	add    BYTE PTR [eax],al
1000aa6c:	fldenv [edx+0x31000]
1000aa72:	add    BYTE PTR [eax],al
1000aa74:	in     al,0xa2
1000aa76:	add    BYTE PTR [eax],dl
1000aa78:	add    eax,DWORD PTR [eax]
1000aa7a:	add    BYTE PTR [eax],al
1000aa7c:	out    dx,eax
1000aa7d:	mov    ds:0x31000,al
1000aa82:	add    BYTE PTR [eax],al
1000aa84:	cli    
1000aa85:	mov    ds:0x5221000,al
1000aa8a:	xchg   ebx,eax
1000aa8b:	sbb    DWORD PTR [eax],ecx
1000aa8d:	add    BYTE PTR [eax],al
1000aa8f:	add    BYTE PTR [edx+ebp*4+0x1000],ch
	...
1000aaaa:	add    BYTE PTR [eax],al
1000aaac:	(bad)  
1000aaad:	(bad)  
1000aaae:	(bad)  
1000aaaf:	jmp    FWORD PTR ds:0xff1000a3
1000aab5:	(bad)  
1000aab6:	(bad)  
1000aab7:	(bad)  
1000aab8:	cmp    BYTE PTR [ebx-0xf000],ah
1000aabe:	(bad)  
1000aabf:	inc    DWORD PTR [ebx-0x5d]
1000aac2:	add    BYTE PTR [eax],dl
1000aac4:	(bad)  
1000aac5:	(bad)  
1000aac6:	(bad)  
1000aac7:	dec    DWORD PTR [esi-0x5d]
1000aaca:	add    BYTE PTR [eax],dl
1000aacc:	add    eax,DWORD PTR [eax]
1000aace:	add    BYTE PTR [eax],al
1000aad0:	pop    ecx
1000aad1:	mov    ds:0x31000,eax
1000aad6:	add    BYTE PTR [eax],al
1000aad8:	mov    fs:0x31000,eax
1000aade:	add    BYTE PTR [eax],al
1000aae0:	outs   dx,DWORD PTR ds:[esi]
1000aae1:	mov    ds:0x31000,eax
1000aae6:	add    BYTE PTR [eax],al
1000aae8:	jp     0x1000aa8d
1000aaea:	add    BYTE PTR [eax],dl
1000aaec:	(bad)  
1000aaed:	(bad)  
1000aaee:	(bad)  
1000aaef:	jmp    FWORD PTR [ebp+0x221000a3]
1000aaf5:	add    eax,0x11993
1000aafa:	add    BYTE PTR [eax],al
1000aafc:	in     al,dx
1000aafd:	stos   BYTE PTR es:[edi],al
1000aafe:	add    BYTE PTR [eax],dl
	...
1000ab18:	and    al,BYTE PTR ds:0x81993
1000ab1e:	add    BYTE PTR [eax],al
1000ab20:	cmp    al,0xab
1000ab22:	add    BYTE PTR [eax],dl
	...
1000ab3c:	(bad)  
1000ab3d:	(bad)  
1000ab3e:	(bad)  
1000ab3f:	call   eax
1000ab41:	mov    ds:0xffff1000,eax
1000ab46:	(bad)  
1000ab47:	(bad)  
1000ab48:	fsub   DWORD PTR [ebx-0xf000]
1000ab4e:	(bad)  
1000ab4f:	jmp    eax
1000ab51:	mov    ds:0xffff1000,eax
1000ab56:	(bad)  
1000ab57:	(bad)  
1000ab58:	call   0x1310ac00
1000ab5d:	add    BYTE PTR [eax],al
1000ab5f:	add    al,dh
1000ab61:	mov    ds:0x31000,eax
1000ab66:	add    BYTE PTR [eax],al
1000ab68:	clc    
1000ab69:	mov    ds:0x31000,eax
1000ab6e:	add    BYTE PTR [eax],al
1000ab70:	add    BYTE PTR [eax+eax*1+0x310],ah
1000ab77:	add    BYTE PTR [eax],cl
1000ab79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000ab7a:	add    BYTE PTR [eax],dl
1000ab7c:	(bad)  
1000ab7d:	(bad)  
1000ab7e:	(bad)  
1000ab7f:	jmp    FWORD PTR [ebx]
1000ab81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000ab82:	add    BYTE PTR [eax],dl
1000ab84:	(bad)  
1000ab85:	(bad)  
1000ab86:	(bad)  
1000ab87:	push   DWORD PTR [ebx]
1000ab89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000ab8a:	add    BYTE PTR [eax],dl
1000ab8c:	(bad)  
1000ab8d:	(bad)  
1000ab8e:	(bad)  
1000ab8f:	(bad)  
1000ab90:	cmp    esp,DWORD PTR [eax+eax*1-0xf0]
1000ab97:	inc    DWORD PTR [ebx-0x5c]
1000ab9a:	add    BYTE PTR [eax],dl
1000ab9c:	and    al,BYTE PTR ds:0x41993
1000aba2:	add    BYTE PTR [eax],al
1000aba4:	jl     0x1000ab51
1000aba6:	add    BYTE PTR [eax],dl
	...
1000abc0:	(bad)  
1000abc1:	(bad)  
1000abc2:	(bad)  
1000abc3:	jmp    DWORD PTR [esi-0x5c]
1000abc6:	add    BYTE PTR [eax],dl
1000abc8:	and    al,BYTE PTR ds:0x11993
1000abce:	add    BYTE PTR [eax],al
1000abd0:	shr    BYTE PTR [ebx+0x1000],0x0
	...
1000abeb:	add    bh,bh
1000abed:	(bad)  
1000abee:	(bad)  
1000abef:	dec    DWORD PTR [ecx+0x221000a4]
1000abf5:	add    eax,0x11993
1000abfa:	add    BYTE PTR [eax],al
1000abfc:	in     al,dx
1000abfd:	stos   DWORD PTR es:[edi],eax
1000abfe:	add    BYTE PTR [eax],dl
	...
1000ac24:	sub    BYTE PTR [eax+eax*1+0x210],ch
1000ac2b:	add    BYTE PTR [esp+ebp*4],dh
1000ac2e:	add    BYTE PTR [eax],dl
1000ac30:	push   eax
1000ac31:	lods   al,BYTE PTR ds:[esi]
1000ac32:	add    BYTE PTR [eax],dl
1000ac34:	add    DWORD PTR [eax],eax
1000ac36:	add    BYTE PTR [eax],al
1000ac38:	sbb    al,0xc0
1000ac3a:	add    BYTE PTR [eax],dl
1000ac3c:	add    BYTE PTR [eax],al
1000ac3e:	add    BYTE PTR [eax],al
1000ac40:	(bad)  
1000ac41:	(bad)  
1000ac42:	(bad)  
1000ac43:	inc    DWORD PTR [eax]
1000ac45:	add    BYTE PTR [eax],al
1000ac47:	add    BYTE PTR [eax+eax*1],al
1000ac4a:	add    BYTE PTR [eax],al
1000ac4c:	add    BYTE PTR [eax],al
1000ac4e:	add    BYTE PTR [eax],al
1000ac50:	add    DWORD PTR [eax],eax
1000ac52:	add    BYTE PTR [eax],al
1000ac54:	xor    al,0xc0
1000ac56:	add    BYTE PTR [eax],dl
1000ac58:	add    BYTE PTR [eax],al
1000ac5a:	add    BYTE PTR [eax],al
1000ac5c:	(bad)  
1000ac5d:	(bad)  
1000ac5e:	(bad)  
1000ac5f:	inc    DWORD PTR [eax]
1000ac61:	add    BYTE PTR [eax],al
1000ac63:	add    BYTE PTR [eax+eax*1],al
1000ac66:	add    BYTE PTR [eax],al
1000ac68:	add    BYTE PTR [eax],al
1000ac6a:	add    BYTE PTR [eax],al
1000ac6c:	(bad)  
1000ac6d:	(bad)  
1000ac6e:	(bad)  
1000ac6f:	jmp    FWORD PTR [esp+eiz*4+0x5221000]
1000ac76:	xchg   ebx,eax
1000ac77:	sbb    DWORD PTR [ecx],eax
1000ac79:	add    BYTE PTR [eax],al
1000ac7b:	add    BYTE PTR [esp+ebp*4+0x0],ch
1000ac7f:	adc    BYTE PTR [eax],al
	...
1000aca1:	add    BYTE PTR [eax],al
1000aca3:	add    ah,dl
1000aca5:	lods   al,BYTE PTR ds:[esi]
1000aca6:	add    BYTE PTR [eax],dl
1000aca8:	(bad)  
1000aca9:	(bad)  
1000acaa:	(bad)  
1000acab:	dec    edi
1000acad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000acae:	add    BYTE PTR [eax],dl
1000acb0:	and    al,BYTE PTR ds:0x11993
1000acb6:	add    BYTE PTR [eax],al
1000acb8:	test   al,0xac
1000acba:	add    BYTE PTR [eax],dl
	...
1000acd4:	add    eax,DWORD PTR [eax]
1000acd6:	add    BYTE PTR [eax],al
1000acd8:	in     al,0xac
1000acda:	add    BYTE PTR [eax],dl
1000acdc:	xor    al,0xac
1000acde:	add    BYTE PTR [eax],dl
1000ace0:	push   eax
1000ace1:	lods   al,BYTE PTR ds:[esi]
1000ace2:	add    BYTE PTR [eax],dl
1000ace4:	add    DWORD PTR [eax],eax
1000ace6:	add    BYTE PTR [eax],al
1000ace8:	inc    esp
1000ace9:	rol    BYTE PTR [eax],0x10
1000acec:	add    BYTE PTR [eax],al
1000acee:	add    BYTE PTR [eax],al
1000acf0:	(bad)  
1000acf1:	(bad)  
1000acf2:	(bad)  
1000acf3:	inc    DWORD PTR [eax]
1000acf5:	add    BYTE PTR [eax],al
1000acf7:	add    BYTE PTR [eax+eax*1],al
1000acfa:	add    BYTE PTR [eax],al
1000acfc:	add    BYTE PTR [eax],al
1000acfe:	add    BYTE PTR [eax],al
1000ad00:	(bad)  
1000ad01:	(bad)  
1000ad02:	(bad)  
1000ad03:	push   esp
1000ad05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000ad06:	add    BYTE PTR [eax],dl
1000ad08:	and    al,BYTE PTR ds:0x11993
1000ad0e:	add    BYTE PTR [eax],al
1000ad10:	add    BYTE PTR [ebp+0x1000],ch
	...
1000ad2a:	add    BYTE PTR [eax],al
1000ad2c:	(bad)  
1000ad2d:	(bad)  
1000ad2e:	(bad)  
1000ad2f:	call   DWORD PTR [edi]
1000ad31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ad32:	add    BYTE PTR [eax],dl
1000ad34:	and    al,BYTE PTR ds:0x11993
1000ad3a:	add    BYTE PTR [eax],al
1000ad3c:	sub    al,0xad
1000ad3e:	add    BYTE PTR [eax],dl
	...
1000ad58:	(bad)  
1000ad59:	(bad)  
1000ad5a:	(bad)  
1000ad5b:	(bad)  
1000ad5c:	cmp    ah,BYTE PTR [ebp+0x1000]
1000ad62:	add    BYTE PTR [eax],al
1000ad64:	inc    edx
1000ad65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ad66:	add    BYTE PTR [eax],dl
1000ad68:	and    al,BYTE PTR ds:0x21993
1000ad6e:	add    BYTE PTR [eax],al
1000ad70:	pop    eax
1000ad71:	lods   eax,DWORD PTR ds:[esi]
1000ad72:	add    BYTE PTR [eax],dl
	...
1000ad8c:	(bad)  
1000ad8d:	(bad)  
1000ad8e:	(bad)  
1000ad8f:	jmp    FWORD PTR [eax-0x5b]
1000ad92:	add    BYTE PTR [eax],dl
1000ad94:	(bad)  
1000ad95:	(bad)  
1000ad96:	(bad)  
1000ad97:	push   DWORD PTR [ebx-0x5b]
1000ad9a:	add    BYTE PTR [eax],dl
1000ad9c:	add    DWORD PTR [eax],eax
1000ad9e:	add    BYTE PTR [eax],al
1000ada0:	jle    0x1000ad47
1000ada2:	add    BYTE PTR [eax],dl
1000ada4:	and    al,BYTE PTR ds:0x31993
1000adaa:	add    BYTE PTR [eax],al
1000adac:	mov    WORD PTR [ebp+0x1000],gs
	...
1000adc6:	add    BYTE PTR [eax],al
1000adc8:	(bad)  
1000adc9:	(bad)  
1000adca:	(bad)  
1000adcb:	push   DWORD PTR [ebx+0x221000a5]
1000add1:	add    eax,0x11993
1000add6:	add    BYTE PTR [eax],al
1000add8:	enter  0xad,0x10
	...
1000adf4:	(bad)  
1000adf5:	(bad)  
1000adf6:	(bad)  
1000adf7:	call   esi
1000adf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000adfa:	add    BYTE PTR [eax],dl
1000adfc:	(bad)  
1000adfd:	(bad)  
1000adfe:	(bad)  
1000adff:	(bad)  
1000ae00:	fisub  WORD PTR [ebp+0x11000]
1000ae06:	add    BYTE PTR [eax],al
1000ae08:	out    0xa5,al
1000ae0a:	add    BYTE PTR [eax],dl
1000ae0c:	and    al,BYTE PTR ds:0x31993
1000ae12:	add    BYTE PTR [eax],al
1000ae14:	hlt    
1000ae15:	lods   eax,DWORD PTR ds:[esi]
1000ae16:	add    BYTE PTR [eax],dl
	...
1000ae30:	(bad)  
1000ae31:	(bad)  
1000ae32:	(bad)  
1000ae33:	dec    DWORD PTR [ecx]
1000ae35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000ae36:	add    BYTE PTR [eax],dl
1000ae38:	and    al,BYTE PTR ds:0x11993
1000ae3e:	add    BYTE PTR [eax],al
1000ae40:	xor    BYTE PTR [esi+0x1000],ch
	...
1000ae5a:	add    BYTE PTR [eax],al
1000ae5c:	(bad)  
1000ae5d:	(bad)  
1000ae5e:	(bad)  
1000ae5f:	jmp    FWORD PTR [esi+eiz*4]
1000ae62:	add    BYTE PTR [eax],dl
1000ae64:	and    al,BYTE PTR ds:0x11993
1000ae6a:	add    BYTE PTR [eax],al
1000ae6c:	pop    esp
1000ae6d:	scas   al,BYTE PTR es:[edi]
1000ae6e:	add    BYTE PTR [eax],dl
	...
1000ae88:	(bad)  
1000ae89:	(bad)  
1000ae8a:	(bad)  
1000ae8b:	call   DWORD PTR [ecx-0x5a]
1000ae8e:	add    BYTE PTR [eax],dl
1000ae90:	and    al,BYTE PTR ds:0x11993
1000ae96:	add    BYTE PTR [eax],al
1000ae98:	mov    BYTE PTR [esi+0x1000],ch
	...
1000aeb2:	add    BYTE PTR [eax],al
1000aeb4:	(bad)  
1000aeb5:	(bad)  
1000aeb6:	(bad)  
1000aeb7:	push   DWORD PTR [esi+eiz*4+0x0]
1000aebb:	adc    BYTE PTR [edx],ah
1000aebd:	add    eax,0x11993
1000aec2:	add    BYTE PTR [eax],al
1000aec4:	mov    ah,0xae
1000aec6:	add    BYTE PTR [eax],dl
	...
1000aee0:	(bad)  
1000aee1:	(bad)  
1000aee2:	(bad)  
1000aee3:	call   DWORD PTR [edi-0xefff5a]
1000aee9:	(bad)  
1000aeea:	(bad)  
1000aeeb:	call   FWORD PTR [edi-0xefff5a]
1000aef1:	(bad)  
1000aef2:	(bad)  
1000aef3:	jmp    DWORD PTR [edi-0xefff5a]
1000aef9:	(bad)  
1000aefa:	(bad)  
1000aefb:	jmp    FWORD PTR [edi+0x221000a6]
1000af01:	add    eax,0x41993
1000af06:	add    BYTE PTR [eax],al
1000af08:	loopne 0x1000aeb8
1000af0a:	add    BYTE PTR [eax],dl
	...
1000af24:	(bad)  
1000af25:	(bad)  
1000af26:	(bad)  
1000af27:	call   edx
1000af29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000af2a:	add    BYTE PTR [eax],dl
1000af2c:	and    al,BYTE PTR ds:0x11993
1000af32:	add    BYTE PTR [eax],al
1000af34:	and    al,0xaf
1000af36:	add    BYTE PTR [eax],dl
	...
1000af50:	(bad)  
1000af51:	(bad)  
1000af52:	(bad)  
1000af53:	push   ebp
1000af55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000af56:	add    BYTE PTR [eax],dl
1000af58:	and    al,BYTE PTR ds:0x11993
1000af5e:	add    BYTE PTR [eax],al
1000af60:	push   eax
1000af61:	scas   eax,DWORD PTR es:[edi]
1000af62:	add    BYTE PTR [eax],dl
	...
1000af7c:	(bad)  
1000af7d:	(bad)  
1000af7e:	(bad)  
1000af7f:	call   FWORD PTR [eax]
1000af81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000af82:	add    BYTE PTR [eax],dl
1000af84:	and    al,BYTE PTR ds:0x11993
1000af8a:	add    BYTE PTR [eax],al
1000af8c:	jl     0x1000af3d
1000af8e:	add    BYTE PTR [eax],dl
	...
1000afa8:	(bad)  
1000afa9:	(bad)  
1000afaa:	(bad)  
1000afab:	(bad)  
1000afac:	cmp    esp,DWORD PTR [edi+0x5221000]
1000afb2:	xchg   ebx,eax
1000afb3:	sbb    DWORD PTR [ecx],eax
1000afb5:	add    BYTE PTR [eax],al
1000afb7:	add    BYTE PTR [eax+0x1000af],ch
	...
1000afd1:	add    BYTE PTR [eax],al
1000afd3:	add    bh,bh
1000afd5:	(bad)  
1000afd6:	(bad)  
1000afd7:	call   FWORD PTR [esi-0x59]
1000afda:	add    BYTE PTR [eax],dl
1000afdc:	and    al,BYTE PTR ds:0x11993
1000afe2:	add    BYTE PTR [eax],al
1000afe4:	aam    0xaf
1000afe6:	add    BYTE PTR [eax],dl
	...
1000b000:	(bad)  
1000b001:	(bad)  
1000b002:	(bad)  
1000b003:	inc    DWORD PTR [ecx-0xefff59]
1000b009:	(bad)  
1000b00a:	(bad)  
1000b00b:	dec    DWORD PTR [edi+eiz*4+0x5221000]
1000b012:	xchg   ebx,eax
1000b013:	sbb    DWORD PTR [edx],eax
1000b015:	add    BYTE PTR [eax],al
1000b017:	add    BYTE PTR [eax],al
1000b019:	mov    al,0x0
1000b01b:	adc    BYTE PTR [eax],al
	...
1000b031:	add    BYTE PTR [eax],al
1000b033:	add    bh,bh
1000b035:	(bad)  
1000b036:	(bad)  
1000b037:	(bad)  
1000b038:	mov    edi,0xff1000a7
1000b03d:	(bad)  
1000b03e:	(bad)  
1000b03f:	dec    edx
1000b041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000b042:	add    BYTE PTR [eax],dl
1000b044:	and    al,BYTE PTR ds:0x21993
1000b04a:	add    BYTE PTR [eax],al
1000b04c:	xor    al,0xb0
1000b04e:	add    BYTE PTR [eax],dl
	...
1000b068:	(bad)  
1000b069:	(bad)  
1000b06a:	(bad)  
1000b06b:	(bad)  
1000b06c:	std    
1000b06d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000b06e:	add    BYTE PTR [eax],dl
1000b070:	(bad)  
1000b071:	(bad)  
1000b072:	(bad)  
1000b073:	inc    DWORD PTR ds:0xff1000a8
1000b079:	(bad)  
1000b07a:	(bad)  
1000b07b:	dec    DWORD PTR ds:0x221000a8
1000b081:	add    eax,0x31993
1000b086:	add    BYTE PTR [eax],al
1000b088:	push   0x1000b0
	...
1000b0a1:	add    BYTE PTR [eax],al
1000b0a3:	add    bh,bh
1000b0a5:	(bad)  
1000b0a6:	(bad)  
1000b0a7:	push   DWORD PTR [eax]
1000b0a9:	test   al,0x0
1000b0ab:	adc    BYTE PTR [edx],ah
1000b0ad:	add    eax,0x11993
1000b0b2:	add    BYTE PTR [eax],al
1000b0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000b0b5:	mov    al,0x0
1000b0b7:	adc    BYTE PTR [eax],al
	...
1000b0cd:	add    BYTE PTR [eax],al
1000b0cf:	add    bh,bh
1000b0d1:	(bad)  
1000b0d2:	(bad)  
1000b0d3:	call   DWORD PTR [eax+ebp*4+0x0]
1000b0d7:	adc    BYTE PTR [edx],ah
1000b0d9:	add    eax,0x11993
1000b0de:	add    BYTE PTR [eax],al
1000b0e0:	shl    BYTE PTR [eax+0x1000],1
	...
1000b106:	add    BYTE PTR [eax],al
1000b108:	inc    esi
1000b109:	mov    DWORD PTR [eax],eax
1000b10b:	adc    BYTE PTR [ebx],al
1000b10d:	add    BYTE PTR [eax],al
1000b10f:	add    BYTE PTR [ebx],al
1000b111:	add    BYTE PTR [eax],al
1000b113:	add    BYTE PTR [eax+eax*1],al
1000b116:	add    BYTE PTR [eax],al
1000b118:	add    DWORD PTR [eax],eax
1000b11a:	add    BYTE PTR [eax],al
1000b11c:	cld    
1000b11d:	mov    al,0x0
1000b11f:	adc    BYTE PTR [edx],ah
1000b121:	add    eax,0x51993
1000b126:	add    BYTE PTR [eax],al
1000b128:	inc    esp
1000b129:	mov    cl,0x0
1000b12b:	adc    BYTE PTR [ecx],al
1000b12d:	add    BYTE PTR [eax],al
1000b12f:	add    BYTE PTR [ecx+esi*4],cl
1000b132:	add    BYTE PTR [eax],dl
	...
1000b144:	(bad)  
1000b145:	(bad)  
1000b146:	(bad)  
1000b147:	push   DWORD PTR [edi-0x58]
1000b14a:	add    BYTE PTR [eax],dl
1000b14c:	(bad)  
1000b14d:	(bad)  
1000b14e:	(bad)  
1000b14f:	(bad)  
1000b150:	jg     0x1000b0fa
1000b152:	add    BYTE PTR [eax],dl
1000b154:	add    DWORD PTR [eax],eax
1000b156:	add    BYTE PTR [eax],al
1000b158:	xchg   DWORD PTR [eax+0x21000],ebp
1000b15e:	add    BYTE PTR [eax],al
1000b160:	add    BYTE PTR [eax],al
1000b162:	add    BYTE PTR [eax],al
1000b164:	add    al,BYTE PTR [eax]
	...
1000b176:	add    BYTE PTR [eax],al
1000b178:	adc    DWORD PTR [ebp+0x1000],ecx
1000b17e:	add    BYTE PTR [eax],al
1000b180:	sbb    al,0xc0
1000b182:	add    BYTE PTR [eax],dl
1000b184:	fdiv   st(7),st
1000b186:	(bad)  
1000b187:	(bad)  
1000b188:	dec    BYTE PTR [eax+eax*1-0x6cfaddf0]
1000b18f:	sbb    DWORD PTR [ecx],ecx
1000b191:	add    BYTE PTR [eax],al
1000b193:	add    al,bl
1000b195:	mov    cl,0x0
1000b197:	adc    BYTE PTR [edx],al
1000b199:	add    BYTE PTR [eax],al
1000b19b:	add    BYTE PTR [eax+0x1000b1],dh
	...
1000b1ad:	add    BYTE PTR [eax],al
1000b1af:	add    BYTE PTR [ecx],al
1000b1b1:	add    BYTE PTR [eax],al
1000b1b3:	add    BYTE PTR [ecx],al
1000b1b5:	add    BYTE PTR [eax],al
1000b1b7:	add    BYTE PTR [edx],al
1000b1b9:	add    BYTE PTR [eax],al
1000b1bb:	add    BYTE PTR [ecx],al
1000b1bd:	add    BYTE PTR [eax],al
1000b1bf:	add    BYTE PTR [ecx+esi*4+0x0],bh
1000b1c3:	adc    BYTE PTR [eax],al
1000b1c5:	add    BYTE PTR [eax],al
1000b1c7:	add    BYTE PTR [edx],al
1000b1c9:	add    BYTE PTR [eax],al
1000b1cb:	add    BYTE PTR [eax],cl
1000b1cd:	add    BYTE PTR [eax],al
1000b1cf:	add    BYTE PTR [ecx],al
1000b1d1:	add    BYTE PTR [eax],al
1000b1d3:	add    BYTE PTR [ecx+esi*4+0x0],ch
1000b1d7:	adc    bh,bh
1000b1d9:	(bad)  
1000b1da:	(bad)  
1000b1db:	inc    DWORD PTR [eax]
	...
1000b1ed:	add    BYTE PTR [eax],al
1000b1ef:	add    bh,bh
1000b1f1:	(bad)  
1000b1f2:	(bad)  
1000b1f3:	inc    DWORD PTR [eax]
1000b1f5:	add    BYTE PTR [eax],al
1000b1f7:	add    BYTE PTR [ebx],al
1000b1f9:	add    BYTE PTR [eax],al
1000b1fb:	add    BYTE PTR [edx+0x31000a8],ch
1000b201:	add    BYTE PTR [eax],al
1000b203:	add    BYTE PTR [edx+0x31000a8],dh
1000b209:	add    BYTE PTR [eax],al
1000b20b:	add    BYTE PTR [edx+0x31000a8],bh
1000b211:	add    BYTE PTR [eax],al
1000b213:	add    dl,al
1000b215:	test   al,0x0
1000b217:	adc    BYTE PTR [edi],al
1000b219:	add    BYTE PTR [eax],al
1000b21b:	add    dl,cl
1000b21d:	test   al,0x0
1000b21f:	adc    bh,bh
1000b221:	(bad)  
1000b222:	(bad)  
1000b223:	(bad)  
1000b224:	in     eax,dx
1000b225:	test   al,0x0
1000b227:	adc    BYTE PTR [edx],ah
1000b229:	add    eax,0x11993
1000b22e:	add    BYTE PTR [eax],al
1000b230:	and    BYTE PTR [edx+0x1000],dh
	...
1000b24a:	add    BYTE PTR [eax],al
1000b24c:	and    al,BYTE PTR ds:0x61993
1000b252:	add    BYTE PTR [eax],al
1000b254:	jo     0x1000b208
1000b256:	add    BYTE PTR [eax],dl
	...
1000b270:	(bad)  
1000b271:	(bad)  
1000b272:	(bad)  
1000b273:	push   DWORD PTR [eax]
1000b275:	test   eax,0xffff1000
1000b27a:	(bad)  
1000b27b:	(bad)  
1000b27c:	cmp    BYTE PTR [ecx-0xf000],ch
1000b282:	(bad)  
1000b283:	call   DWORD PTR [eax]
1000b285:	test   eax,0xffff1000
1000b28a:	(bad)  
1000b28b:	call   FWORD PTR [eax]
1000b28d:	test   eax,0xffff1000
1000b292:	(bad)  
1000b293:	jmp    DWORD PTR [eax]
1000b295:	test   eax,0xffff1000
1000b29a:	(bad)  
1000b29b:	jmp    FWORD PTR [eax]
1000b29d:	test   eax,0xffff1000
1000b2a2:	(bad)  
1000b2a3:	call   FWORD PTR [ebx-0x57]
1000b2a6:	add    BYTE PTR [eax],dl
1000b2a8:	(bad)  
1000b2a9:	(bad)  
1000b2aa:	(bad)  
1000b2ab:	jmp    DWORD PTR [ebx-0x57]
1000b2ae:	add    BYTE PTR [eax],dl
1000b2b0:	(bad)  
1000b2b1:	(bad)  
1000b2b2:	(bad)  
1000b2b3:	jmp    FWORD PTR [ebx-0x57]
1000b2b6:	add    BYTE PTR [eax],dl
1000b2b8:	(bad)  
1000b2b9:	(bad)  
1000b2ba:	(bad)  
1000b2bb:	push   DWORD PTR [ebx-0x57]
1000b2be:	add    BYTE PTR [eax],dl
1000b2c0:	and    al,BYTE PTR ds:0x41993
1000b2c6:	add    BYTE PTR [eax],al
1000b2c8:	mov    al,ds:0x1000b2
	...
1000b2e5:	add    BYTE PTR [eax],al
1000b2e7:	add    dh,bh
1000b2e9:	(bad)  
1000b2ea:	(bad)  
1000b2eb:	inc    DWORD PTR [eax]
1000b2ed:	add    BYTE PTR [eax],al
1000b2ef:	add    al,dl
1000b2f1:	(bad)  
1000b2f2:	(bad)  
1000b2f3:	inc    DWORD PTR [eax]
1000b2f5:	add    BYTE PTR [eax],al
1000b2f7:	add    dh,bh
1000b2f9:	(bad)  
1000b2fa:	(bad)  
1000b2fb:	(bad)  
1000b2fc:	jmp    0x1000b296
1000b2fe:	add    BYTE PTR [eax],dl
1000b300:	call   FWORD PTR [eax+0x1000]
1000b306:	add    BYTE PTR [eax],al
1000b308:	(bad)  
1000b309:	(bad)  
1000b30a:	(bad)  
1000b30b:	inc    DWORD PTR [eax]
1000b30d:	add    BYTE PTR [eax],al
1000b30f:	add    ah,cl
1000b311:	(bad)  
1000b312:	(bad)  
1000b313:	inc    DWORD PTR [eax]
1000b315:	add    BYTE PTR [eax],al
1000b317:	add    dh,bh
1000b319:	(bad)  
1000b31a:	(bad)  
1000b31b:	inc    DWORD PTR [eax]
1000b31d:	add    BYTE PTR [eax],al
1000b31f:	add    dl,dl
1000b321:	popf   
1000b322:	add    BYTE PTR [eax],dl
1000b324:	add    BYTE PTR [eax],al
1000b326:	add    BYTE PTR [eax],al
1000b328:	(bad)  
1000b329:	(bad)  
1000b32a:	(bad)  
1000b32b:	inc    DWORD PTR [eax]
1000b32d:	add    BYTE PTR [eax],al
1000b32f:	add    al,bl
1000b331:	(bad)  
1000b332:	(bad)  
1000b333:	inc    DWORD PTR [eax]
1000b335:	add    BYTE PTR [eax],al
1000b337:	add    dh,bh
1000b339:	(bad)  
1000b33a:	(bad)  
1000b33b:	dec    DWORD PTR [ecx-0x61]
1000b33e:	add    BYTE PTR [eax],dl
1000b340:	pop    ebp
1000b341:	lahf   
1000b342:	add    BYTE PTR [eax],dl
1000b344:	add    BYTE PTR [eax],al
1000b346:	add    BYTE PTR [eax],al
1000b348:	(bad)  
1000b349:	(bad)  
1000b34a:	(bad)  
1000b34b:	inc    DWORD PTR [eax]
1000b34d:	add    BYTE PTR [eax],al
1000b34f:	add    ah,cl
1000b351:	(bad)  
1000b352:	(bad)  
1000b353:	inc    DWORD PTR [eax]
1000b355:	add    BYTE PTR [eax],al
1000b357:	add    dh,bh
1000b359:	(bad)  
1000b35a:	(bad)  
1000b35b:	jmp    FWORD PTR [edi-0x5f]
1000b35e:	add    BYTE PTR [eax],dl
1000b360:	cwde   
1000b361:	mov    eax,ds:0x1000
1000b366:	add    BYTE PTR [eax],al
1000b368:	(bad)  
1000b369:	(bad)  
1000b36a:	(bad)  
1000b36b:	inc    DWORD PTR [eax]
1000b36d:	add    BYTE PTR [eax],al
1000b36f:	add    ah,dl
1000b371:	(bad)  
1000b372:	(bad)  
1000b373:	inc    DWORD PTR [eax]
1000b375:	add    BYTE PTR [eax],al
1000b377:	add    dh,bh
1000b379:	(bad)  
1000b37a:	(bad)  
1000b37b:	inc    DWORD PTR [eax]
1000b37d:	add    BYTE PTR [eax],al
1000b37f:	add    ch,dh
1000b381:	mov    eax,ds:0xb5741000
	...
1000b38e:	add    BYTE PTR [eax],al
1000b390:	xchg   esi,eax
1000b391:	mov    ch,0x0
1000b393:	add    BYTE PTR [eax+0x11],bh
1000b396:	add    BYTE PTR [eax],al
1000b398:	test   al,0xb4
	...
1000b3a2:	add    BYTE PTR [eax],al
1000b3a4:	xchg   esp,eax
1000b3a5:	mov    bh,0x0
1000b3a7:	add    BYTE PTR [eax+edx*1-0x4c040000],ch
	...
1000b3b6:	add    BYTE PTR [eax],al
1000b3b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000b3b9:	mov    eax,0x10000000
1000b3be:	add    BYTE PTR [eax],al
1000b3c0:	or     al,0xb4
	...
1000b3ca:	add    BYTE PTR [eax],al
1000b3cc:	mov    WORD PTR [ebx+0x10100000],?
1000b3d2:	add    BYTE PTR [eax],al
1000b3d4:	pusha  
1000b3d5:	mov    ch,0x0
	...
1000b3df:	add    dl,dl
1000b3e1:	mov    ebx,0x11640000
	...
1000b3fa:	add    BYTE PTR [eax],al
1000b3fc:	xchg   esi,eax
1000b3fd:	mov    eax,0xb8860000
1000b402:	add    BYTE PTR [eax],al
1000b404:	js     0x1000b3be
1000b406:	add    BYTE PTR [eax],al
1000b408:	add    BYTE PTR [eax],al
1000b40a:	add    BYTE PTR [eax],al
1000b40c:	jb     0x1000b3c8
1000b40e:	add    BYTE PTR [eax],al
1000b410:	mov    BYTE PTR [edx-0x456c0000],bh
1000b416:	add    BYTE PTR [eax],al
1000b418:	mov    ds:0xb40000ba,al
1000b41d:	mov    edx,0xbac60000
1000b422:	add    BYTE PTR [eax],al
1000b424:	fdivr  QWORD PTR [edx-0x450a0000]
1000b42a:	add    BYTE PTR [eax],al
1000b42c:	adc    BYTE PTR [ebx-0x44da0000],bh
1000b432:	add    BYTE PTR [eax],al
1000b434:	cs mov ebx,0xbb4c0000
1000b43a:	add    BYTE PTR [eax],al
1000b43c:	pop    esp
1000b43d:	mov    ebx,0xb8b40000
1000b442:	add    BYTE PTR [eax],al
1000b444:	ret    0xb8
1000b447:	add    ah,dl
1000b449:	mov    eax,0xb8ea0000
1000b44e:	add    BYTE PTR [eax],al
1000b450:	idiv   BYTE PTR [eax-0x46fa0000]
1000b456:	add    BYTE PTR [eax],al
1000b458:	adc    al,0xb9
1000b45a:	add    BYTE PTR [eax],al
1000b45c:	xor    bh,BYTE PTR [ecx-0x46be0000]
1000b462:	add    BYTE PTR [eax],al
1000b464:	push   edx
1000b465:	mov    ecx,0xb9660000
1000b46a:	add    BYTE PTR [eax],al
1000b46c:	jle    0x1000b427
1000b46e:	add    BYTE PTR [eax],al
1000b470:	xchg   esi,eax
1000b471:	mov    ecx,0xb9a60000
1000b476:	add    BYTE PTR [eax],al
1000b478:	mov    esp,0xc80000b9
1000b47d:	mov    ecx,0xb9de0000
1000b482:	add    BYTE PTR [eax],al
1000b484:	jmp    0xb9:0xfe0000b9
1000b48b:	add    BYTE PTR [edx],dl
1000b48d:	mov    edx,0xba240000
1000b492:	add    BYTE PTR [eax],al
1000b494:	ss mov edx,0xba4c0000
1000b49a:	add    BYTE PTR [eax],al
1000b49c:	bound  edi,QWORD PTR [edx-0x44880000]
1000b4a2:	add    BYTE PTR [eax],al
1000b4a4:	add    BYTE PTR [eax],al
1000b4a6:	add    BYTE PTR [eax],al
1000b4a8:	inc    edx
1000b4a9:	mov    eax,0xb82c0000
1000b4ae:	add    BYTE PTR [eax],al
1000b4b0:	sbb    al,0xb8
1000b4b2:	add    BYTE PTR [eax],al
1000b4b4:	or     bh,BYTE PTR [eax-0x48080000]
1000b4ba:	add    BYTE PTR [eax],al
1000b4bc:	out    dx,al
1000b4bd:	mov    bh,0x0
1000b4bf:	add    dh,ah
1000b4c1:	mov    bh,0x0
1000b4c3:	add    al,bl
1000b4c5:	mov    bh,0x0
1000b4c7:	add    dh,cl
1000b4c9:	mov    bh,0x0
1000b4cb:	add    BYTE PTR [edx-0x5fffff49],bh
1000b4d1:	mov    bh,0x0
1000b4d3:	add    BYTE PTR [edx+0x700000b7],al
1000b4d9:	mov    bh,0x0
1000b4db:	add    BYTE PTR [edx-0x49],ah
1000b4de:	add    BYTE PTR [eax],al
1000b4e0:	push   edx
1000b4e1:	mov    bh,0x0
1000b4e3:	add    BYTE PTR [edx-0x49],al
1000b4e6:	add    BYTE PTR [eax],al
1000b4e8:	cs mov bh,0x0
1000b4eb:	add    BYTE PTR [eax],bl
1000b4ed:	mov    bh,0x0
1000b4ef:	add    BYTE PTR [edx],cl
1000b4f1:	mov    bh,0x0
1000b4f3:	add    dh,bh
1000b4f5:	mov    dh,0x0
1000b4f7:	add    al,dh
1000b4f9:	mov    dh,0x0
1000b4fb:	add    dl,ah
1000b4fd:	mov    dh,0x0
1000b4ff:	add    dl,bl
1000b501:	mov    dh,0x0
1000b503:	add    al,dl
1000b505:	mov    dh,0x0
1000b507:	add    BYTE PTR [esi-0x4fffff4a],bh
1000b50d:	mov    dh,0x0
1000b50f:	add    BYTE PTR [edx-0x67ffff4a],ah
1000b515:	mov    dh,0x0
1000b517:	add    BYTE PTR [esi+esi*4-0x497e0000],cl
1000b51e:	add    BYTE PTR [eax],al
1000b520:	js     0x1000b4d8
1000b522:	add    BYTE PTR [eax],al
1000b524:	bound  esi,QWORD PTR [esi-0x49aa0000]
1000b52a:	add    BYTE PTR [eax],al
1000b52c:	dec    esp
1000b52d:	mov    dh,0x0
1000b52f:	add    BYTE PTR [edx-0x4a],al
1000b532:	add    BYTE PTR [eax],al
1000b534:	xor    dh,BYTE PTR [esi-0x49da0000]
1000b53a:	add    BYTE PTR [eax],al
1000b53c:	push   ss
1000b53d:	mov    dh,0x0
1000b53f:	add    BYTE PTR [eax],al
1000b541:	mov    dh,0x0
1000b543:	add    ah,dh
1000b545:	mov    ch,0x0
1000b547:	add    dh,ah
1000b549:	mov    ch,0x0
1000b54b:	add    dl,bl
1000b54d:	mov    ch,0x0
1000b54f:	add    dl,dl
1000b551:	mov    ch,0x0
1000b553:	add    dh,al
1000b555:	mov    ch,0x0
1000b557:	add    BYTE PTR [ebp+esi*4+0x0],bh
1000b55e:	add    BYTE PTR [eax],al
1000b560:	call   0xbb:0xa80000bb
1000b567:	add    BYTE PTR [esi-0x3bffff45],dh
1000b56d:	mov    ebx,0x0
1000b572:	add    BYTE PTR [eax],al
1000b574:	mov    ds:0x800000b5,al
1000b579:	mov    ch,0x0
1000b57b:	add    BYTE PTR [eax],al
1000b57d:	add    BYTE PTR [eax],al
1000b57f:	add    BYTE PTR [esi],cl
1000b581:	add    BYTE PTR [ebx+0x6f],al
1000b584:	jb     0x1000b5c8
1000b586:	imul   ebp,DWORD PTR [esi+0x64],0x75526f54
1000b58d:	outs   dx,BYTE PTR ds:[esi]
1000b58e:	je     0x1000b5f9
1000b590:	ins    DWORD PTR es:[edi],dx
1000b591:	gs inc ebp
1000b593:	js     0x1000b595
1000b595:	add    BYTE PTR [ebp+0x73],ch
1000b598:	arpl   WORD PTR [edi+0x72],bp
1000b59b:	gs gs cs fs ins BYTE PTR es:[edi],dx
1000b5a0:	ins    BYTE PTR es:[edi],dx
1000b5a1:	add    BYTE PTR [eax+eax*1],dh
1000b5a4:	inc    edi
1000b5a5:	gs je  0x1000b5fa
1000b5a8:	gs jno 0x1000b620
1000b5ab:	gs jae 0x1000b622
1000b5ae:	gs fs push edx
1000b5b1:	jne    0x1000b621
1000b5b3:	je     0x1000b61e
1000b5b5:	ins    DWORD PTR es:[edi],dx
1000b5b6:	gs dec ecx
1000b5b8:	outs   dx,BYTE PTR ds:[esi]
1000b5b9:	outs   dx,WORD PTR ds:[esi]
1000b5bb:	add    BYTE PTR [edx+0x6c6f7405],al
1000b5c1:	outs   dx,DWORD PTR ds:[esi]
1000b5c2:	ja     0x1000b629
1000b5c4:	jb     0x1000b5c6
1000b5c6:	ds add al,0x5f
1000b5c9:	ja     0x1000b62e
1000b5cb:	jae    0x1000b636
1000b5cd:	arpl   WORD PTR [ebp+0x70],bp
1000b5d0:	add    BYTE PTR [eax],al
1000b5d2:	fadd   QWORD PTR [eiz*2+0x746978]
1000b5d9:	add    BYTE PTR [esi+0x73637705],dl
1000b5df:	arpl   WORD PTR [ecx+0x74],sp
1000b5e2:	pop    edi
1000b5e3:	jae    0x1000b5e5
1000b5e5:	add    BYTE PTR [ebx+0x3],bh
1000b5e8:	pop    edi
1000b5e9:	jae    0x1000b659
1000b5eb:	jo     0x1000b65f
1000b5ed:	imul   ebp,DWORD PTR [esi+0x74],0x735f66
1000b5f4:	mov    ds:0x73637705,eax
1000b5f9:	outs   dx,BYTE PTR ds:[esi]
1000b5fa:	arpl   WORD PTR [eax+0x79],si
1000b5fd:	pop    edi
1000b5fe:	jae    0x1000b600
1000b600:	jbe    0x1000b602
1000b602:	pop    edi
1000b603:	pop    edi
1000b604:	inc    ebx
1000b605:	js     0x1000b67f
1000b607:	inc    esi
1000b608:	jb     0x1000b66b
1000b60a:	ins    DWORD PTR es:[edi],dx
1000b60b:	gs dec eax
1000b60d:	popa   
1000b60e:	outs   dx,BYTE PTR ds:[esi]
1000b60f:	fs ins BYTE PTR es:[edi],dx
1000b611:	gs jb  0x1000b647
1000b614:	add    BYTE PTR [eax],al
1000b616:	sbb    eax,DWORD PTR [edi+ebx*2]
1000b619:	jbe    0x1000b68e
1000b61b:	outs   dx,BYTE PTR ds:[esi]
1000b61c:	jo     0x1000b690
1000b61e:	imul   ebp,DWORD PTR [esi+0x74],0x735f66
1000b625:	add    BYTE PTR [ebx+0x73637705],bl
1000b62b:	arpl   WORD PTR [eax+0x79],si
1000b62e:	pop    edi
1000b62f:	jae    0x1000b631
1000b631:	add    BYTE PTR [edi],bl
1000b633:	add    al,0x5f
1000b635:	jbe    0x1000b6aa
1000b637:	outs   dx,BYTE PTR ds:[esi]
1000b638:	ja     0x1000b6aa
1000b63a:	jb     0x1000b6a5
1000b63c:	outs   dx,BYTE PTR ds:[esi]
1000b63d:	je     0x1000b6a5
1000b63f:	pop    edi
1000b640:	jae    0x1000b642
1000b642:	pop    esi
1000b643:	add    eax,0x63727473
1000b648:	push   0x36000072
1000b64d:	add    eax,0x636d656d
1000b652:	jo     0x1000b6cd
1000b654:	add    BYTE PTR [eax],al
1000b656:	cmp    DWORD PTR [ebx],eax
1000b658:	pop    edi
1000b659:	jo     0x1000b6d0
1000b65b:	jb     0x1000b6c2
1000b65d:	arpl   WORD PTR [ecx+0x6c],sp
1000b660:	ins    BYTE PTR es:[edi],dx
1000b661:	add    BYTE PTR [ebp+0x0],bl
1000b664:	pop    edi
1000b665:	inc    ebx
1000b666:	js     0x1000b6e0
1000b668:	push   esp
1000b669:	push   0x45776f72
1000b66e:	js     0x1000b6d3
1000b670:	gs jo  0x1000b6e7
1000b673:	imul   ebp,DWORD PTR [edi+0x6e],0x53a0000
1000b67a:	ins    DWORD PTR es:[edi],dx
1000b67b:	gs ins DWORD PTR es:[edi],dx
1000b67d:	jae    0x1000b6e4
1000b67f:	je     0x1000b681
1000b681:	add    BYTE PTR [eax],bh
1000b683:	add    eax,0x6d6d656d
1000b688:	outs   dx,DWORD PTR ds:[esi]
1000b689:	jbe    0x1000b6f0
1000b68b:	add    BYTE PTR [edx+0x5],ah
1000b68e:	jae    0x1000b704
1000b690:	jb     0x1000b6f5
1000b692:	jo     0x1000b70d
1000b694:	pop    edi
1000b695:	jae    0x1000b697
1000b697:	add    BYTE PTR [eax+0x1],bh
1000b69a:	pop    edi
1000b69b:	gs jb  0x1000b710
1000b69e:	outs   dx,BYTE PTR ds:[esi]
1000b69f:	outs   dx,DWORD PTR ds:[esi]
1000b6a0:	add    BYTE PTR [eax],al
1000b6a2:	pop    ss
1000b6a3:	add    al,0x5f
1000b6a5:	jbe    0x1000b71a
1000b6a7:	outs   dx,BYTE PTR ds:[esi]
1000b6a8:	jo     0x1000b71c
1000b6aa:	imul   ebp,DWORD PTR [esi+0x74],0x1d000066
1000b6b1:	add    DWORD PTR [edi+0x61],ebx
1000b6b4:	ins    DWORD PTR es:[edi],dx
1000b6b5:	jae    0x1000b71e
1000b6b7:	pop    edi
1000b6b8:	gs js  0x1000b724
1000b6bb:	je     0x1000b6bd
1000b6bd:	add    bh,bh
1000b6bf:	add    BYTE PTR [edi+0x5f],bl
1000b6c2:	ja     0x1000b72b
1000b6c4:	gs je  0x1000b734
1000b6c7:	popa   
1000b6c8:	imul   ebp,DWORD PTR [esi+0x61],0x736772
1000b6cf:	add    BYTE PTR [ecx+eax*1],dh
1000b6d2:	pop    edi
1000b6d3:	arpl   WORD PTR [ebp+0x78],sp
1000b6d6:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x655f0184
1000b6de:	js     0x1000b749
1000b6e0:	je     0x1000b6e2
1000b6e2:	imul   eax,DWORD PTR [eax],0x7063585f
1000b6e8:	je     0x1000b730
1000b6ea:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1000072
1000b6f2:	pop    edi
1000b6f3:	pop    edi
1000b6f4:	ja     0x1000b75f
1000b6f6:	outs   dx,BYTE PTR ds:[esi]
1000b6f7:	imul   esi,DWORD PTR [ebp+eiz*2+0x6e],0x10000076
1000b6ff:	add    bl,BYTE PTR [edi+0x69]
1000b702:	outs   dx,BYTE PTR ds:[esi]
1000b703:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x11006d72
1000b70b:	add    bl,BYTE PTR [edi+0x69]
1000b70e:	outs   dx,BYTE PTR ds:[esi]
1000b70f:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x655f6d72
1000b717:	add    BYTE PTR [ecx+eax*1+0x5f],al
1000b71b:	arpl   WORD PTR [edi+0x6e],bp
1000b71e:	imul   sp,WORD PTR [edi+0x74],0x7268
1000b724:	gs popa 
1000b726:	fs ins BYTE PTR es:[edi],dx
1000b728:	outs   dx,DWORD PTR ds:[esi]
1000b729:	arpl   WORD PTR [ecx+0x6c],sp
1000b72c:	gs add bl,ch
1000b72f:	add    BYTE PTR [edi+0x5f],bl
1000b732:	jae    0x1000b799
1000b734:	je     0x1000b7ab
1000b736:	jae    0x1000b79d
1000b738:	jb     0x1000b7a7
1000b73a:	popa   
1000b73b:	je     0x1000b7a5
1000b73d:	gs jb  0x1000b7b2
1000b740:	add    BYTE PTR [eax],al
1000b742:	adc    eax,DWORD PTR [ecx]
1000b744:	pop    edi
1000b745:	popa   
1000b746:	fs push 0x75
1000b749:	jae    0x1000b7bf
1000b74b:	pop    edi
1000b74c:	imul   si,WORD PTR fs:[esi+0x0],0xce00
1000b753:	add    BYTE PTR [edi+0x5f],bl
1000b756:	jo     0x1000b7b7
1000b758:	pop    edi
1000b759:	arpl   WORD PTR [edi+0x6d],bp
1000b75c:	ins    DWORD PTR es:[edi],dx
1000b75d:	outs   dx,DWORD PTR ds:[esi]
1000b75e:	fs add BYTE PTR gs:[eax],al
1000b762:	rol    BYTE PTR [eax],cl
1000b764:	pop    edi
1000b765:	pop    edi
1000b766:	jo     0x1000b7c7
1000b768:	pop    edi
1000b769:	ins    WORD PTR es:[edi],dx
1000b76b:	outs   dx,DWORD PTR ds:[esi]
1000b76c:	fs add BYTE PTR gs:[eax],al
1000b770:	jb     0x1000b773
1000b772:	pop    edi
1000b773:	outs   dx,BYTE PTR gs:[esi]
1000b775:	arpl   WORD PTR [edi+0x64],bp
1000b778:	gs pop edi
1000b77a:	jo     0x1000b7eb
1000b77c:	imul   ebp,DWORD PTR [esi+0x74],0xe8007265
1000b783:	add    BYTE PTR [edi+0x5f],bl
1000b786:	jae    0x1000b7ed
1000b788:	je     0x1000b7e9
1000b78a:	popa   
1000b78b:	jo     0x1000b7fd
1000b78d:	pop    edi
1000b78e:	je     0x1000b809
1000b790:	jo     0x1000b7f7
1000b792:	add    BYTE PTR [eax],al
1000b794:	dec    ebp
1000b795:	push   ebx
1000b796:	push   esi
1000b797:	inc    ebx
1000b798:	push   edx
1000b799:	cmp    BYTE PTR [eax],dh
1000b79b:	cs fs ins BYTE PTR es:[edi],dx
1000b79e:	ins    BYTE PTR es:[edi],dx
1000b79f:	add    BYTE PTR [ebx+0x1],bh
1000b7a2:	pop    edi
1000b7a3:	gs js  0x1000b809
1000b7a6:	gs jo  0x1000b81d
1000b7a9:	pop    edi
1000b7aa:	push   0x6c646e61
1000b7af:	gs jb  0x1000b7e6
1000b7b2:	pop    edi
1000b7b3:	arpl   WORD PTR [edi+0x6d],bp
1000b7b6:	ins    DWORD PTR es:[edi],dx
1000b7b7:	outs   dx,DWORD PTR ds:[esi]
1000b7b8:	outs   dx,BYTE PTR ds:[esi]
1000b7b9:	add    BYTE PTR [ebx+0x0],al
1000b7bc:	aas    
1000b7bd:	je     0x1000b824
1000b7bf:	jb     0x1000b82e
1000b7c1:	imul   ebp,DWORD PTR [esi+0x61],0x40406574
1000b7c8:	pop    ecx
1000b7c9:	inc    ecx
1000b7ca:	pop    eax
1000b7cb:	pop    eax
1000b7cc:	pop    edx
1000b7cd:	add    bl,dh
1000b7cf:	add    ebx,DWORD PTR [edi+0x75]
1000b7d2:	outs   dx,BYTE PTR ds:[esi]
1000b7d3:	ins    BYTE PTR es:[edi],dx
1000b7d4:	outs   dx,DWORD PTR ds:[esi]
1000b7d5:	arpl   WORD PTR [ebx+0x0],bp
1000b7d8:	cdq    
1000b7d9:	add    BYTE PTR [edi+0x5f],bl
1000b7dc:	fs ins BYTE PTR es:[edi],dx
1000b7de:	ins    BYTE PTR es:[edi],dx
1000b7df:	outs   dx,DWORD PTR ds:[esi]
1000b7e0:	outs   dx,BYTE PTR ds:[esi]
1000b7e1:	gs js  0x1000b84d
1000b7e4:	je     0x1000b7e6
1000b7e6:	add    BYTE PTR [edx],0x5f
1000b7e9:	ins    BYTE PTR es:[edi],dx
1000b7ea:	outs   dx,DWORD PTR ds:[esi]
1000b7eb:	arpl   WORD PTR [ebx+0x0],bp
1000b7ee:	sub    BYTE PTR [ebx],al
1000b7f0:	pop    edi
1000b7f1:	outs   dx,DWORD PTR ds:[esi]
1000b7f2:	outs   dx,BYTE PTR ds:[esi]
1000b7f3:	gs js  0x1000b85f
1000b7f6:	je     0x1000b7f8
1000b7f8:	push   0x65645f01
1000b7fd:	arpl   WORD PTR [edi+0x64],bp
1000b800:	gs pop edi
1000b802:	jo     0x1000b873
1000b804:	imul   ebp,DWORD PTR [esi+0x74],0x17007265
1000b80b:	add    bl,BYTE PTR [edi+0x69]
1000b80e:	outs   dx,BYTE PTR ds:[esi]
1000b80f:	jbe    0x1000b880
1000b811:	imul   esp,DWORD PTR [ebp+0x5f],0x77
1000b815:	popa   
1000b816:	je     0x1000b88b
1000b818:	outs   dx,DWORD PTR ds:[esi]
1000b819:	outs   dx,BYTE PTR ds:[esi]
1000b81a:	add    BYTE PTR [eax],al
1000b81c:	inc    edi
1000b81d:	add    DWORD PTR [edi+0x63],ebx
1000b820:	outs   dx,DWORD PTR ds:[esi]
1000b821:	outs   dx,BYTE PTR ds:[esi]
1000b822:	je     0x1000b896
1000b824:	outs   dx,DWORD PTR ds:[esi]
1000b825:	ins    BYTE PTR es:[edi],dx
1000b826:	data16 jo 0x1000b888
1000b829:	jae    0x1000b82b
1000b82b:	add    BYTE PTR [ebx+0x1],dl
1000b82e:	pop    edi
1000b82f:	arpl   WORD PTR [edx+0x74],si
1000b832:	pop    edi
1000b833:	fs bound esi,QWORD PTR gs:[ebp+0x67]
1000b838:	addr16 gs jb 0x1000b89b
1000b83c:	push   0x6b6f6f
1000b841:	add    BYTE PTR [esi],dh
1000b843:	add    BYTE PTR [edi],bh
1000b845:	pop    edi
1000b846:	je     0x1000b8c1
1000b848:	jo     0x1000b8af
1000b84a:	pop    edi
1000b84b:	imul   ebp,DWORD PTR [esi+0x66],0x74645f6f
1000b852:	outs   dx,DWORD PTR ds:[esi]
1000b853:	jb     0x1000b8b4
1000b855:	imul   ebp,DWORD PTR [esi+0x74],0x616e7265
1000b85c:	ins    BYTE PTR es:[edi],dx
1000b85d:	pop    edi
1000b85e:	ins    DWORD PTR es:[edi],dx
1000b85f:	gs je  0x1000b8ca
1000b862:	outs   dx,DWORD PTR ds:[esi]
1000b863:	fs inc eax
1000b865:	je     0x1000b8e0
1000b867:	jo     0x1000b8ce
1000b869:	pop    edi
1000b86a:	imul   ebp,DWORD PTR [esi+0x66],0x5140406f
1000b871:	inc    ecx
1000b872:	inc    ebp
1000b873:	pop    eax
1000b874:	pop    eax
1000b875:	pop    edx
1000b876:	add    BYTE PTR [eax],al
1000b878:	retf   
1000b879:	add    DWORD PTR [edx+0x65],edx
1000b87c:	addr16 inc ebx
1000b87e:	ins    BYTE PTR es:[edi],dx
1000b87f:	outs   dx,DWORD PTR ds:[esi]
1000b880:	jae    0x1000b8e7
1000b882:	dec    ebx
1000b883:	gs jns 0x1000b886
1000b886:	in     al,dx
1000b887:	add    DWORD PTR [edx+0x65],edx
1000b88a:	addr16 dec edi
1000b88c:	jo     0x1000b8f3
1000b88e:	outs   dx,BYTE PTR ds:[esi]
1000b88f:	dec    ebx
1000b890:	gs jns 0x1000b8d8
1000b893:	js     0x1000b8d6
1000b895:	add    ch,ch
1000b897:	add    DWORD PTR [edx+0x65],edx
1000b89a:	addr16 dec edi
1000b89c:	jo     0x1000b903
1000b89e:	outs   dx,BYTE PTR ds:[esi]
1000b89f:	dec    ebx
1000b8a0:	gs jns 0x1000b8e8
1000b8a3:	js     0x1000b8fc
1000b8a5:	add    BYTE PTR [ecx+0x44],al
1000b8a8:	push   esi
1000b8a9:	inc    ecx
1000b8aa:	push   eax
1000b8ab:	dec    ecx
1000b8ac:	xor    esi,DWORD PTR [edx]
1000b8ae:	cs fs ins BYTE PTR es:[edi],dx
1000b8b1:	ins    BYTE PTR es:[edi],dx
1000b8b2:	add    BYTE PTR [eax],al
1000b8b4:	clc    
1000b8b5:	add    BYTE PTR [esi+0x72],al
1000b8b8:	gs gs dec esp
1000b8bb:	imul   esp,DWORD PTR [edx+0x72],0x797261
1000b8c2:	mov    al,ds:0x74654701
1000b8c7:	push   eax
1000b8c8:	jb     0x1000b939
1000b8ca:	arpl   WORD PTR [ecx+0x64],ax
1000b8cd:	fs jb  0x1000b935
1000b8d0:	jae    0x1000b945
1000b8d2:	add    BYTE PTR [eax],al
1000b8d4:	xor    eax,0x74654701
1000b8d9:	inc    ebx
1000b8da:	outs   dx,DWORD PTR ds:[esi]
1000b8db:	outs   dx,BYTE PTR ds:[esi]
1000b8dc:	jae    0x1000b94d
1000b8de:	ins    BYTE PTR es:[edi],dx
1000b8df:	gs dec edi
1000b8e1:	jne    0x1000b957
1000b8e3:	jo     0x1000b95a
1000b8e5:	je     0x1000b92a
1000b8e7:	push   eax
1000b8e8:	add    BYTE PTR [eax],al
1000b8ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000b8eb:	add    edx,DWORD PTR [edi+0x72]
1000b8ee:	imul   esi,DWORD PTR [ebp+eiz*2+0x46],0x656c69
1000b8f6:	mov    ecx,0x74654701
1000b8fb:	push   ebx
1000b8fc:	je     0x1000b962
1000b8fe:	dec    eax
1000b8ff:	popa   
1000b900:	outs   dx,BYTE PTR ds:[esi]
1000b901:	fs ins BYTE PTR es:[edi],dx
1000b903:	add    BYTE PTR gs:[eax],al
1000b906:	add    edx,DWORD PTR gs:[esp+ebp*2+0x73]
1000b90b:	inc    edi
1000b90c:	gs je  0x1000b965
1000b90f:	popa   
1000b910:	ins    BYTE PTR es:[edi],dx
1000b911:	jne    0x1000b978
1000b913:	add    BYTE PTR [esi],ah
1000b915:	add    cl,BYTE PTR [ecx+0x6e]
1000b918:	je     0x1000b97f
1000b91a:	jb     0x1000b988
1000b91c:	outs   dx,DWORD PTR ds:[esi]
1000b91d:	arpl   WORD PTR [ebx+0x65],bp
1000b920:	fs inc ebx
1000b922:	outs   dx,DWORD PTR ds:[esi]
1000b923:	ins    DWORD PTR es:[edi],dx
1000b924:	jo     0x1000b987
1000b926:	jb     0x1000b98d
1000b928:	inc    ebp
1000b929:	js     0x1000b98e
1000b92b:	push   0x65676e61
1000b930:	add    BYTE PTR [eax],al
1000b932:	jno    0x1000b935
1000b934:	inc    edi
1000b935:	gs je  0x1000b984
1000b938:	popa   
1000b939:	jae    0x1000b9af
1000b93b:	inc    ebp
1000b93c:	jb     0x1000b9b0
1000b93e:	outs   dx,DWORD PTR ds:[esi]
1000b93f:	jb     0x1000b941
1000b941:	add    BYTE PTR [eax],ch
1000b943:	add    edx,DWORD PTR [ebx+0x65]
1000b946:	je     0x1000b994
1000b948:	popa   
1000b949:	jae    0x1000b9bf
1000b94b:	inc    ebp
1000b94c:	jb     0x1000b9c0
1000b94e:	outs   dx,DWORD PTR ds:[esi]
1000b94f:	jb     0x1000b951
1000b951:	add    BYTE PTR [edi+0x1],bh
1000b954:	inc    edi
1000b955:	gs je  0x1000b9a5
1000b958:	outs   dx,DWORD PTR ds:[esi]
1000b959:	fs jne 0x1000b9c8
1000b95c:	gs dec eax
1000b95e:	popa   
1000b95f:	outs   dx,BYTE PTR ds:[esi]
1000b960:	fs ins BYTE PTR es:[edi],dx
1000b962:	gs inc ecx
1000b964:	add    BYTE PTR [eax],al
1000b966:	sub    al,0x2
1000b968:	dec    ecx
1000b969:	outs   dx,BYTE PTR ds:[esi]
1000b96a:	je     0x1000b9d1
1000b96c:	jb     0x1000b9da
1000b96e:	outs   dx,DWORD PTR ds:[esi]
1000b96f:	arpl   WORD PTR [ebx+0x65],bp
1000b972:	fs dec ecx
1000b974:	outs   dx,BYTE PTR ds:[esi]
1000b975:	arpl   WORD PTR [edx+0x65],si
1000b978:	ins    DWORD PTR es:[edi],dx
1000b979:	outs   dx,BYTE PTR gs:[esi]
1000b97b:	je     0x1000b97d
1000b97d:	add    BYTE PTR [eax],ch
1000b97f:	add    cl,BYTE PTR [ecx+0x6e]
1000b982:	je     0x1000b9e9
1000b984:	jb     0x1000b9f2
1000b986:	outs   dx,DWORD PTR ds:[esi]
1000b987:	arpl   WORD PTR [ebx+0x65],bp
1000b98a:	fs inc esp
1000b98c:	arpl   WORD PTR gs:[edx+0x65],si
1000b990:	ins    DWORD PTR es:[edi],dx
1000b991:	outs   dx,BYTE PTR gs:[esi]
1000b993:	je     0x1000b995
1000b995:	add    cl,ch
1000b997:	add    DWORD PTR [edi+0x65],eax
1000b99a:	je     0x1000b9f2
1000b99c:	gs jb  0x1000ba12
1000b99f:	imul   ebp,DWORD PTR [edi+0x6e],0x417845
1000b9a6:	jne    0x1000b9aa
1000b9a8:	dec    ebp
1000b9a9:	jne    0x1000ba17
1000b9ab:	je     0x1000ba16
1000b9ad:	inc    edx
1000b9ae:	jns    0x1000ba24
1000b9b0:	gs push esp
1000b9b2:	outs   dx,DWORD PTR ds:[esi]
1000b9b3:	push   edi
1000b9b4:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x726168
1000b9bc:	add    al,0x1
1000b9be:	inc    edi
1000b9bf:	gs je  0x1000ba05
1000b9c2:	push   eax
1000b9c3:	dec    ecx
1000b9c4:	outs   dx,BYTE PTR ds:[esi]
1000b9c5:	outs   dx,WORD PTR ds:[esi]
1000b9c7:	add    BYTE PTR [ebx+eax*1+0x65646957],dl
1000b9ce:	inc    ebx
1000b9cf:	push   0x6f547261
1000b9d4:	dec    ebp
1000b9d5:	jne    0x1000ba43
1000b9d7:	je     0x1000ba42
1000b9d9:	inc    edx
1000b9da:	jns    0x1000ba50
1000b9dc:	gs add ch,cl
1000b9df:	add    ebp,DWORD PTR [ebx+esi*2+0x74]
1000b9e3:	jb     0x1000ba51
1000b9e5:	outs   dx,BYTE PTR gs:[esi]
1000b9e7:	push   edi
1000b9e8:	add    BYTE PTR [eax],al
1000b9ea:	pop    esi
1000b9eb:	add    edx,DWORD PTR [ebp+eiz*2+0x72]
1000b9ef:	ins    DWORD PTR es:[edi],dx
1000b9f0:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
1000b9f7:	outs   dx,DWORD PTR ds:[esi]
1000b9f8:	arpl   WORD PTR [ebp+0x73],sp
1000b9fb:	jae    0x1000b9fd
1000b9fd:	add    BYTE PTR [edx+0x1],al
1000ba00:	inc    edi
1000ba01:	gs je  0x1000ba47
1000ba04:	jne    0x1000ba78
1000ba06:	jb     0x1000ba6d
1000ba08:	outs   dx,BYTE PTR ds:[esi]
1000ba09:	je     0x1000ba5b
1000ba0b:	jb     0x1000ba7c
1000ba0d:	arpl   WORD PTR [ebp+0x73],sp
1000ba10:	jae    0x1000ba12
1000ba12:	push   ebx
1000ba13:	add    cl,BYTE PTR [edi+ebp*2+0x61]
1000ba17:	fs dec esp
1000ba19:	imul   esp,DWORD PTR [edx+0x72],0x45797261
1000ba20:	js     0x1000ba63
1000ba22:	add    BYTE PTR [eax],al
1000ba24:	push   esp
1000ba25:	add    cl,BYTE PTR [edi+ebp*2+0x61]
1000ba29:	fs dec esp
1000ba2b:	imul   esp,DWORD PTR [edx+0x72],0x45797261
1000ba32:	js     0x1000ba8b
1000ba34:	add    BYTE PTR [eax],al
1000ba36:	jge    0x1000ba39
1000ba38:	inc    edi
1000ba39:	gs je  0x1000ba89
1000ba3c:	outs   dx,DWORD PTR ds:[esi]
1000ba3d:	fs jne 0x1000baac
1000ba40:	gs inc esi
1000ba42:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
1000ba4a:	add    BYTE PTR [eax],al
1000ba4c:	jle    0x1000ba4f
1000ba4e:	inc    edi
1000ba4f:	gs je  0x1000ba9f
1000ba52:	outs   dx,DWORD PTR ds:[esi]
1000ba53:	fs jne 0x1000bac2
1000ba56:	gs inc esi
1000ba58:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
1000ba60:	add    BYTE PTR [eax],al
1000ba62:	jmp    0x6556:0x74654701
1000ba69:	jb     0x1000bade
1000ba6b:	imul   ebp,DWORD PTR [edi+0x6e],0x577845
1000ba72:	inc    ebx
1000ba73:	add    DWORD PTR [edi+0x65],eax
1000ba76:	je     0x1000babb
1000ba78:	jne    0x1000baec
1000ba7a:	jb     0x1000bae1
1000ba7c:	outs   dx,BYTE PTR ds:[esi]
1000ba7d:	je     0x1000bacf
1000ba7f:	jb     0x1000baf0
1000ba81:	arpl   WORD PTR [ebp+0x73],sp
1000ba84:	jae    0x1000bacf
1000ba86:	add    BYTE PTR fs:[edx+eax*1+0x4c],bl
1000ba8b:	outs   dx,DWORD PTR ds:[esi]
1000ba8c:	arpl   WORD PTR [ecx+0x6c],sp
1000ba8f:	inc    esi
1000ba90:	jb     0x1000baf7
1000ba92:	add    BYTE PTR gs:[eax+0x2],bl
1000ba96:	dec    esp
1000ba97:	outs   dx,DWORD PTR ds:[esi]
1000ba98:	arpl   WORD PTR [ecx+0x6c],sp
1000ba9b:	inc    ecx
1000ba9c:	ins    BYTE PTR es:[edi],dx
1000ba9d:	ins    BYTE PTR es:[edi],dx
1000ba9e:	outs   dx,DWORD PTR ds:[esi]
1000ba9f:	arpl   WORD PTR [eax],ax
1000baa1:	add    bl,dh
1000baa3:	add    BYTE PTR [esi+0x6f],al
1000baa6:	jb     0x1000bb15
1000baa8:	popa   
1000baa9:	je     0x1000baf8
1000baab:	gs jae 0x1000bb21
1000baae:	popa   
1000baaf:	addr16 gs inc ecx
1000bab2:	add    BYTE PTR [eax],al
1000bab4:	hlt    
1000bab5:	add    BYTE PTR [esi+0x6f],al
1000bab8:	jb     0x1000bb27
1000baba:	popa   
1000babb:	je     0x1000bb0a
1000babd:	gs jae 0x1000bb33
1000bac0:	popa   
1000bac1:	addr16 gs push edi
1000bac4:	add    BYTE PTR [eax],al
1000bac6:	inc    esi
1000bac7:	add    DWORD PTR [edi+0x65],eax
1000baca:	je     0x1000bb0f
1000bacc:	jne    0x1000bb40
1000bace:	jb     0x1000bb35
1000bad0:	outs   dx,BYTE PTR ds:[esi]
1000bad1:	je     0x1000bb27
1000bad3:	push   0x64616572
1000bad8:	dec    ecx
1000bad9:	add    BYTE PTR fs:[eax],al
1000badc:	mov    ds:0x65755102,eax
1000bae1:	jb     0x1000bb5c
1000bae3:	push   eax
1000bae4:	gs jb  0x1000bb4d
1000bae7:	outs   dx,DWORD PTR ds:[esi]
1000bae8:	jb     0x1000bb57
1000baea:	popa   
1000baeb:	outs   dx,BYTE PTR ds:[esi]
1000baec:	arpl   WORD PTR [ebp+0x43],sp
1000baef:	outs   dx,DWORD PTR ds:[esi]
1000baf0:	jne    0x1000bb60
1000baf2:	je     0x1000bb59
1000baf4:	jb     0x1000baf6
1000baf6:	retf   0x4701
1000baf9:	gs je  0x1000bb4f
1000bafc:	jns    0x1000bb71
1000bafe:	je     0x1000bb65
1000bb00:	ins    DWORD PTR es:[edi],dx
1000bb01:	push   esp
1000bb02:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
1000bb09:	ins    BYTE PTR es:[edi],dx
1000bb0a:	gs push esp
1000bb0c:	imul   ebp,DWORD PTR [ebp+0x65],0x49022900
1000bb13:	outs   dx,BYTE PTR ds:[esi]
1000bb14:	je     0x1000bb7b
1000bb16:	jb     0x1000bb84
1000bb18:	outs   dx,DWORD PTR ds:[esi]
1000bb19:	arpl   WORD PTR [ebx+0x65],bp
1000bb1c:	fs inc ebp
1000bb1e:	js     0x1000bb83
1000bb20:	push   0x65676e61
1000bb25:	add    BYTE PTR [esi+0x3],dl
1000bb28:	push   ebx
1000bb29:	ins    BYTE PTR es:[edi],dx
1000bb2a:	gs gs jo 0x1000bb2e
1000bb2e:	dec    edx
1000bb2f:	add    edx,DWORD PTR [ebx+0x65]
1000bb32:	je     0x1000bb89
1000bb34:	outs   dx,BYTE PTR ds:[esi]
1000bb35:	push   0x6c646e61
1000bb3a:	gs fs inc ebp
1000bb3d:	js     0x1000bba2
1000bb3f:	gs jo  0x1000bbb6
1000bb42:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
1000bb49:	gs jb  0x1000bb4c
1000bb4c:	fild   WORD PTR [ecx]
1000bb4e:	inc    edi
1000bb4f:	gs je  0x1000bba6
1000bb52:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
1000bb59:	je     0x1000bb5b
1000bb5b:	add    BYTE PTR [esi+0x3],ch
1000bb5e:	push   ebp
1000bb5f:	outs   dx,BYTE PTR ds:[esi]
1000bb60:	push   0x6c646e61
1000bb65:	gs fs inc ebp
1000bb68:	js     0x1000bbcd
1000bb6a:	gs jo  0x1000bbe1
1000bb6d:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
1000bb74:	gs jb  0x1000bb77
1000bb77:	add    BYTE PTR [ecx],bh
1000bb79:	add    cl,BYTE PTR [ecx+0x73]
1000bb7c:	inc    esp
1000bb7d:	bound  esi,QWORD PTR gs:[ebp+0x67]
1000bb81:	addr16 gs jb 0x1000bbd5
1000bb85:	jb     0x1000bbec
1000bb87:	jae    0x1000bbee
1000bb89:	outs   dx,BYTE PTR ds:[esi]
1000bb8a:	je     0x1000bb8c
1000bb8c:	dec    ebx
1000bb8d:	inc    ebp
1000bb8e:	push   edx
1000bb8f:	dec    esi
1000bb90:	inc    ebp
1000bb91:	dec    esp
1000bb92:	xor    esi,DWORD PTR [edx]
1000bb94:	cs fs ins BYTE PTR es:[edi],dx
1000bb97:	ins    BYTE PTR es:[edi],dx
1000bb98:	add    BYTE PTR [eax],al
1000bb9a:	fild   WORD PTR [ecx]
1000bb9c:	dec    ebp
1000bb9d:	gs jae 0x1000bc13
1000bba0:	popa   
1000bba1:	addr16 gs inc edx
1000bba4:	outs   dx,DWORD PTR ds:[esi]
1000bba5:	js     0x1000bbe8
1000bba7:	add    dh,ah
1000bba9:	add    DWORD PTR [ebp+0x65],ecx
1000bbac:	jae    0x1000bc21
1000bbae:	popa   
1000bbaf:	addr16 gs inc edx
1000bbb2:	outs   dx,DWORD PTR ds:[esi]
1000bbb3:	js     0x1000bc0c
1000bbb5:	add    bl,cl
1000bbb7:	add    DWORD PTR [edi+ebp*2+0x61],ecx
1000bbbb:	fs push ebx
1000bbbd:	je     0x1000bc31
1000bbbf:	imul   ebp,DWORD PTR [esi+0x67],0x1cc0041
1000bbc6:	dec    esp
1000bbc7:	outs   dx,DWORD PTR ds:[esi]
1000bbc8:	popa   
1000bbc9:	fs push ebx
1000bbcb:	je     0x1000bc3f
1000bbcd:	imul   ebp,DWORD PTR [esi+0x67],0x53550057
1000bbd4:	inc    ebp
1000bbd5:	push   edx
1000bbd6:	xor    esi,DWORD PTR [edx]
1000bbd8:	cs fs ins BYTE PTR es:[edi],dx
1000bbdb:	ins    BYTE PTR es:[edi],dx
	...
