
4cde1735b0bd09f0ad3ca84856ac023f212bc5732dcb19f8ccb1aacb0f75bb61.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0xc655]        # 0x40d670
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0xc656]        # 0x40d680
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0xc659]        # 0x40d690
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0xc61c]        # 0x40d660
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0xc4bf]        # 0x40d510
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0xc5f1]        # 0x40d650
  40105f:	mov    DWORD PTR [rip+0xefa3],edx        # 0x410008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x407010
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x405bf0
  401081:	mov    rdx,QWORD PTR [rip+0xc518]        # 0x40d5a0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0xc4fe]        # 0x40d590
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0xc564]        # 0x40d600
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0xc49b]        # 0x40d540
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x4057d0
  4010af:	mov    rax,QWORD PTR [rip+0xc40a]        # 0x40d4c0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x407010
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x49a9]        # 0x405ad0
  401127:	call   0x405ac0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0xc4c5]        # 0x40d630
  40116b:	lea    r8,[rip+0xeea6]        # 0x410018
  401172:	lea    rdx,[rip+0xeea7]        # 0x410020
  401179:	lea    rcx,[rip+0xeea8]        # 0x410028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xee78],eax        # 0x410000
  401188:	lea    rax,[rip+0xee71]        # 0x410000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0xc455]        # 0x40d5f0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x407028
  4011a3:	mov    DWORD PTR [rip+0xee67],eax        # 0x410010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0xc48a]        # 0x40d650
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0xc37b]        # 0x40d570
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x1da4a]        # 0x41ec4c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0xc357]        # 0x40d580
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xedba],0x1        # 0x410004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0xc29c]        # 0x40d500
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x405de0
  40127d:	lea    rcx,[rip+0x50fc]        # 0x406380
  401284:	call   QWORD PTR [rip+0x1d9ba]        # 0x41ec44
  40128a:	mov    rdx,QWORD PTR [rip+0xc2cf]        # 0x40d560
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x406290
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x407050
  4012a5:	call   0x405bd0
  4012aa:	mov    rax,QWORD PTR [rip+0xc25f]        # 0x40d510
  4012b1:	mov    QWORD PTR [rip+0x1be50],rax        # 0x41d108
  4012b8:	mov    rax,QWORD PTR [rip+0xc271]        # 0x40d530
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x1bde9],rax        # 0x41d100
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x8cca],eax        # 0x40a000
  401336:	mov    r12d,DWORD PTR [rip+0xeceb]        # 0x410028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x406f48
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xecc2]        # 0x410020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x406f00
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x406f48
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x406f40
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xec6a],rbp        # 0x410020
  4013b6:	call   0x4057a0
  4013bb:	mov    rax,QWORD PTR [rip+0xc15e]        # 0x40d520
  4013c2:	mov    rdx,QWORD PTR [rip+0xec4f]        # 0x410018
  4013c9:	mov    ecx,DWORD PTR [rip+0xec59]        # 0x410028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xec3c]        # 0x410018
  4013dc:	mov    rdx,QWORD PTR [rip+0xec3d]        # 0x410020
  4013e3:	call   0x407720
  4013e8:	mov    ecx,DWORD PTR [rip+0xec1a]        # 0x410008
  4013ee:	mov    DWORD PTR [rip+0xec18],eax        # 0x41000c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xec02]        # 0x410004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x406ff8
  40140b:	mov    eax,DWORD PTR [rip+0xebfb]        # 0x41000c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0xc149]        # 0x40d580
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x407000
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0xc15d]        # 0x40d5c0
  401463:	mov    rcx,QWORD PTR [rip+0xc146]        # 0x40d5b0
  40146a:	call   0x406fe8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x1d753]        # 0x41ebec
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0xc139]        # 0x40d5e0
  4014a7:	mov    rcx,QWORD PTR [rip+0xc122]        # 0x40d5d0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x406fe8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x406fa0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0xc175]        # 0x40d650
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4057e0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0xc145]        # 0x40d650
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4057e0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rdi
  401531:	push   rsi
  401532:	sub    rsp,0x48
  401536:	lea    rax,[rip+0x9ac3]        # 0x40b000
  40153d:	mov    rsi,QWORD PTR [rsp+0x80]
  401545:	test   r8,r8
  401548:	mov    rdi,rdx
  40154b:	cmove  r8,rax
  40154f:	test   r9,r9
  401552:	cmove  r9,rax
  401556:	test   rsi,rsi
  401559:	cmove  rsi,rax
  40155d:	mov    eax,DWORD PTR [rip+0x1b19d]        # 0x41c700
  401563:	add    DWORD PTR [rip+0xead6],0x1        # 0x410040
  40156a:	test   eax,eax
  40156c:	jne    0x4015a9
  40156e:	mov    QWORD PTR [rsp+0x38],r9
  401573:	mov    QWORD PTR [rsp+0x30],r8
  401578:	call   QWORD PTR [rip+0x1d726]        # 0x41eca4
  40157e:	mov    r9,QWORD PTR [rsp+0x38]
  401583:	mov    r8,QWORD PTR [rsp+0x30]
  401588:	lea    rcx,[rax+0x30]
  40158c:	lea    rdx,[rip+0x9a75]        # 0x40b008
  401593:	mov    QWORD PTR [rsp+0x28],rsi
  401598:	mov    QWORD PTR [rsp+0x20],r9
  40159d:	mov    r9,r8
  4015a0:	mov    r8,rdi
  4015a3:	call   0x406f88
  4015a8:	nop
  4015a9:	add    rsp,0x48
  4015ad:	pop    rsi
  4015ae:	pop    rdi
  4015af:	ret    
  4015b0:	push   rbp
  4015b1:	push   rdi
  4015b2:	push   rsi
  4015b3:	sub    rsp,0x50
  4015b7:	mov    rsi,QWORD PTR [rsp+0x90]
  4015bf:	lea    rax,[rip+0x9a3a]        # 0x40b000
  4015c6:	mov    rdi,QWORD PTR [rsp+0x98]
  4015ce:	test   r9,r9
  4015d1:	mov    rbp,rdx
  4015d4:	cmove  r9,rax
  4015d8:	test   rsi,rsi
  4015db:	cmove  rsi,rax
  4015df:	test   rdi,rdi
  4015e2:	cmove  rdi,rax
  4015e6:	mov    eax,DWORD PTR [rip+0x1b114]        # 0x41c700
  4015ec:	add    DWORD PTR [rip+0xea4d],0x1        # 0x410040
  4015f3:	test   eax,eax
  4015f5:	jne    0x401637
  4015f7:	mov    QWORD PTR [rsp+0x48],r9
  4015fc:	mov    DWORD PTR [rsp+0x44],r8d
  401601:	call   QWORD PTR [rip+0x1d69d]        # 0x41eca4
  401607:	mov    r9,QWORD PTR [rsp+0x48]
  40160c:	mov    r8d,DWORD PTR [rsp+0x44]
  401611:	lea    rcx,[rax+0x30]
  401615:	lea    rdx,[rip+0x9a14]        # 0x40b030
  40161c:	mov    QWORD PTR [rsp+0x30],rdi
  401621:	mov    QWORD PTR [rsp+0x28],rsi
  401626:	mov    QWORD PTR [rsp+0x20],r9
  40162b:	mov    r9d,r8d
  40162e:	mov    r8,rbp
  401631:	call   0x406f88
  401636:	nop
  401637:	add    rsp,0x50
  40163b:	pop    rsi
  40163c:	pop    rdi
  40163d:	pop    rbp
  40163e:	ret    
  40163f:	nop
  401640:	push   rbx
  401641:	sub    rsp,0x20
  401645:	mov    ebx,DWORD PTR [rip+0x1b0cd]        # 0x41c718
  40164b:	call   QWORD PTR [rip+0x1d653]        # 0x41eca4
  401651:	lea    rdx,[rip+0x9a00]        # 0x40b058
  401658:	lea    rcx,[rax+0x60]
  40165c:	mov    r8d,ebx
  40165f:	call   0x406f88
  401664:	mov    DWORD PTR [rip+0x1aff6],0x9        # 0x41c664
  40166e:	add    rsp,0x20
  401672:	pop    rbx
  401673:	ret    
  401674:	xchg   ax,ax
  401676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401680:	push   rdi
  401681:	push   rsi
  401682:	push   rbx
  401683:	sub    rsp,0x30
  401687:	mov    eax,DWORD PTR [rip+0x1b073]        # 0x41c700
  40168d:	add    DWORD PTR [rip+0xe9ac],0x1        # 0x410040
  401694:	mov    QWORD PTR [rsp+0x60],r8
  401699:	mov    QWORD PTR [rsp+0x68],r9
  40169e:	test   eax,eax
  4016a0:	je     0x4016b0
  4016a2:	add    rsp,0x30
  4016a6:	pop    rbx
  4016a7:	pop    rsi
  4016a8:	pop    rdi
  4016a9:	ret    
  4016aa:	nop    WORD PTR [rax+rax*1+0x0]
  4016b0:	lea    rax,[rsp+0x60]
  4016b5:	mov    rbx,rdx
  4016b8:	mov    rsi,QWORD PTR [rip+0x1d5e5]        # 0x41eca4
  4016bf:	mov    QWORD PTR [rsp+0x28],rax
  4016c4:	call   rsi
  4016c6:	lea    rcx,[rip+0x99af]        # 0x40b07c
  4016cd:	lea    r9,[rax+0x30]
  4016d1:	mov    r8d,0x10
  4016d7:	mov    edx,0x1
  4016dc:	call   0x406f58
  4016e1:	mov    rdi,QWORD PTR [rsp+0x28]
  4016e6:	call   rsi
  4016e8:	lea    rcx,[rax+0x30]
  4016ec:	mov    rdx,rbx
  4016ef:	mov    r8,rdi
  4016f2:	call   0x406ef0
  4016f7:	nop
  4016f8:	add    rsp,0x30
  4016fc:	pop    rbx
  4016fd:	pop    rsi
  4016fe:	pop    rdi
  4016ff:	ret    
  401700:	push   rdi
  401701:	push   rsi
  401702:	push   rbx
  401703:	sub    rsp,0x30
  401707:	mov    eax,DWORD PTR [rip+0x1aff3]        # 0x41c700
  40170d:	add    DWORD PTR [rip+0xe92c],0x1        # 0x410040
  401714:	mov    QWORD PTR [rsp+0x60],r8
  401719:	mov    QWORD PTR [rsp+0x68],r9
  40171e:	test   eax,eax
  401720:	je     0x401730
  401722:	add    rsp,0x30
  401726:	pop    rbx
  401727:	pop    rsi
  401728:	pop    rdi
  401729:	ret    
  40172a:	nop    WORD PTR [rax+rax*1+0x0]
  401730:	lea    rax,[rsp+0x60]
  401735:	mov    rbx,rdx
  401738:	mov    rsi,QWORD PTR [rip+0x1d565]        # 0x41eca4
  40173f:	mov    QWORD PTR [rsp+0x28],rax
  401744:	call   rsi
  401746:	lea    rcx,[rip+0x9940]        # 0x40b08d
  40174d:	lea    r9,[rax+0x30]
  401751:	mov    r8d,0xb
  401757:	mov    edx,0x1
  40175c:	call   0x406f58
  401761:	mov    rdi,QWORD PTR [rsp+0x28]
  401766:	call   rsi
  401768:	lea    rcx,[rax+0x30]
  40176c:	mov    rdx,rbx
  40176f:	mov    r8,rdi
  401772:	call   0x406ef0
  401777:	nop
  401778:	add    rsp,0x30
  40177c:	pop    rbx
  40177d:	pop    rsi
  40177e:	pop    rdi
  40177f:	ret    
  401780:	push   rdi
  401781:	push   rsi
  401782:	push   rbx
  401783:	sub    rsp,0x30
  401787:	mov    eax,DWORD PTR [rip+0x1af73]        # 0x41c700
  40178d:	add    DWORD PTR [rip+0xe8ac],0x1        # 0x410040
  401794:	mov    QWORD PTR [rsp+0x60],r8
  401799:	mov    QWORD PTR [rsp+0x68],r9
  40179e:	test   eax,eax
  4017a0:	je     0x4017b0
  4017a2:	add    rsp,0x30
  4017a6:	pop    rbx
  4017a7:	pop    rsi
  4017a8:	pop    rdi
  4017a9:	ret    
  4017aa:	nop    WORD PTR [rax+rax*1+0x0]
  4017b0:	lea    rax,[rsp+0x60]
  4017b5:	mov    rbx,rdx
  4017b8:	mov    rsi,QWORD PTR [rip+0x1d4e5]        # 0x41eca4
  4017bf:	mov    QWORD PTR [rsp+0x28],rax
  4017c4:	call   rsi
  4017c6:	lea    rcx,[rip+0x98cc]        # 0x40b099
  4017cd:	lea    r9,[rax+0x30]
  4017d1:	mov    r8d,0xd
  4017d7:	mov    edx,0x1
  4017dc:	call   0x406f58
  4017e1:	mov    rdi,QWORD PTR [rsp+0x28]
  4017e6:	call   rsi
  4017e8:	lea    rcx,[rax+0x30]
  4017ec:	mov    rdx,rbx
  4017ef:	mov    r8,rdi
  4017f2:	call   0x406ef0
  4017f7:	nop
  4017f8:	add    rsp,0x30
  4017fc:	pop    rbx
  4017fd:	pop    rsi
  4017fe:	pop    rdi
  4017ff:	ret    
  401800:	push   r15
  401802:	push   r14
  401804:	push   r13
  401806:	push   r12
  401808:	push   rbp
  401809:	push   rdi
  40180a:	push   rsi
  40180b:	push   rbx
  40180c:	sub    rsp,0x38
  401810:	mov    r13,rcx
  401813:	mov    ecx,DWORD PTR [rip+0x1abd3]        # 0x41c3ec
  401819:	mov    r12,rdx
  40181c:	mov    rbp,r8
  40181f:	mov    rbx,r13
  401822:	test   ecx,ecx
  401824:	jle    0x401852
  401826:	test   r13,r13
  401829:	je     0x401a30
  40182f:	movzx  edx,BYTE PTR [r13+0x0]
  401834:	test   dl,dl
  401836:	je     0x401a30
  40183c:	lea    rax,[r13+0x1]
  401840:	cmp    dl,0x2f
  401843:	movzx  edx,BYTE PTR [rax]
  401846:	cmove  rbx,rax
  40184a:	add    rax,0x1
  40184e:	test   dl,dl
  401850:	jne    0x401840
  401852:	test   rbp,rbp
  401855:	je     0x401a10
  40185b:	mov    rax,QWORD PTR [rbp+0x0]
  40185f:	test   rax,rax
  401862:	je     0x401a10
  401868:	mov    rdi,QWORD PTR [rax+0xa8]
  40186f:	mov    rsi,QWORD PTR [rax+0xb0]
  401876:	mov    QWORD PTR [rax+0xa8],0x0
  401881:	mov    QWORD PTR [rax+0xb0],0x0
  40188c:	mov    QWORD PTR [rsp+0x20],rdi
  401891:	mov    QWORD PTR [rsp+0x28],rsi
  401896:	mov    rax,QWORD PTR [rip+0x1ab43]        # 0x41c3e0
  40189d:	test   rax,rax
  4018a0:	je     0x401940
  4018a6:	mov    rcx,r13
  4018a9:	mov    r8,rbp
  4018ac:	mov    rdx,r12
  4018af:	call   rax
  4018b1:	test   rax,rax
  4018b4:	mov    ecx,DWORD PTR [rip+0x1ab32]        # 0x41c3ec
  4018ba:	je     0x401940
  4018c0:	mov    rdi,QWORD PTR [rsp+0x20]
  4018c5:	test   rdi,rdi
  4018c8:	je     0x4018d5
  4018ca:	mov    rdx,QWORD PTR [rbp+0x0]
  4018ce:	mov    QWORD PTR [rdx+0xa8],rdi
  4018d5:	mov    rsi,QWORD PTR [rsp+0x28]
  4018da:	test   rsi,rsi
  4018dd:	je     0x4018ea
  4018df:	mov    rdx,QWORD PTR [rbp+0x0]
  4018e3:	mov    QWORD PTR [rdx+0xb0],rsi
  4018ea:	mov    edx,DWORD PTR [rip+0x1aaf8]        # 0x41c3e8
  4018f0:	mov    rbx,rax
  4018f3:	test   edx,edx
  4018f5:	je     0x401928
  4018f7:	lea    r8,[rip+0x9702]        # 0x40b000
  4018fe:	test   r12,r12
  401901:	cmove  r12,r8
  401905:	test   r13,r13
  401908:	cmove  r13,r8
  40190c:	call   QWORD PTR [rip+0x1d392]        # 0x41eca4
  401912:	lea    rdx,[rip+0x978e]        # 0x40b0a7
  401919:	lea    rcx,[rax+0x60]
  40191d:	mov    r9,r12
  401920:	mov    r8,r13
  401923:	call   0x406f88
  401928:	mov    rax,rbx
  40192b:	add    rsp,0x38
  40192f:	pop    rbx
  401930:	pop    rsi
  401931:	pop    rdi
  401932:	pop    rbp
  401933:	pop    r12
  401935:	pop    r13
  401937:	pop    r14
  401939:	pop    r15
  40193b:	ret    
  40193c:	nop    DWORD PTR [rax+0x0]
  401940:	xor    edi,edi
  401942:	test   ecx,ecx
  401944:	lea    rsi,[rip+0x1aab5]        # 0x41c400
  40194b:	mov    r14,QWORD PTR [rip+0x1ce9a]        # 0x41e7ec
  401952:	jle    0x4019ae
  401954:	mov    rcx,QWORD PTR [rsi]
  401957:	call   0x4052e8
  40195c:	lea    rdx,[rip+0x975d]        # 0x40b0c0
  401963:	mov    rcx,rax
  401966:	call   0x4052f0
  40196b:	mov    rdx,rbx
  40196e:	mov    rcx,rax
  401971:	call   0x4052f0
  401976:	test   rax,rax
  401979:	mov    r15,rax
  40197c:	je     0x40199f
  40197e:	mov    r8,rbp
  401981:	mov    rdx,r12
  401984:	mov    rcx,rax
  401987:	call   QWORD PTR [rip+0x1aa53]        # 0x41c3e0
  40198d:	test   rax,rax
  401990:	mov    r11,rax
  401993:	jne    0x401a40
  401999:	mov    rcx,r15
  40199c:	call   QWORD PTR [r14]
  40199f:	add    edi,0x1
  4019a2:	add    rsi,0x8
  4019a6:	cmp    DWORD PTR [rip+0x1aa40],edi        # 0x41c3ec
  4019ac:	jg     0x401954
  4019ae:	cmp    QWORD PTR [rsp+0x28],0x0
  4019b4:	je     0x4019c6
  4019b6:	mov    rax,QWORD PTR [rbp+0x0]
  4019ba:	mov    rsi,QWORD PTR [rsp+0x28]
  4019bf:	mov    QWORD PTR [rax+0xb0],rsi
  4019c6:	cmp    QWORD PTR [rsp+0x20],0x0
  4019cc:	je     0x401a00
  4019ce:	mov    rax,QWORD PTR [rbp+0x0]
  4019d2:	mov    rbx,QWORD PTR [rsp+0x20]
  4019d7:	test   r13,r13
  4019da:	mov    QWORD PTR [rax+0xa8],rbx
  4019e1:	jne    0x401ac6
  4019e7:	test   r12,r12
  4019ea:	je     0x401a00
  4019ec:	mov    r8,r12
  4019ef:	lea    rdx,[rip+0x96d2]        # 0x40b0c8
  4019f6:	mov    rcx,rbp
  4019f9:	mov    rax,QWORD PTR [rsp+0x20]
  4019fe:	call   rax
  401a00:	xor    ebx,ebx
  401a02:	jmp    0x401928
  401a07:	nop    WORD PTR [rax+rax*1+0x0]
  401a10:	mov    QWORD PTR [rsp+0x28],0x0
  401a19:	mov    QWORD PTR [rsp+0x20],0x0
  401a22:	jmp    0x401896
  401a27:	nop    WORD PTR [rax+rax*1+0x0]
  401a30:	mov    rbx,r13
  401a33:	jmp    0x401852
  401a38:	nop    DWORD PTR [rax+rax*1+0x0]
  401a40:	mov    rbx,QWORD PTR [rsp+0x20]
  401a45:	test   rbx,rbx
  401a48:	je     0x401a55
  401a4a:	mov    rax,QWORD PTR [rbp+0x0]
  401a4e:	mov    QWORD PTR [rax+0xa8],rbx
  401a55:	mov    rdi,QWORD PTR [rsp+0x28]
  401a5a:	test   rdi,rdi
  401a5d:	je     0x401a6a
  401a5f:	mov    rax,QWORD PTR [rbp+0x0]
  401a63:	mov    QWORD PTR [rax+0xb0],rdi
  401a6a:	mov    eax,DWORD PTR [rip+0x1a978]        # 0x41c3e8
  401a70:	test   eax,eax
  401a72:	je     0x401aa8
  401a74:	lea    rax,[rip+0x9585]        # 0x40b000
  401a7b:	test   r12,r12
  401a7e:	mov    QWORD PTR [rsp+0x20],r11
  401a83:	cmove  r12,rax
  401a87:	call   QWORD PTR [rip+0x1d217]        # 0x41eca4
  401a8d:	lea    rdx,[rip+0x9613]        # 0x40b0a7
  401a94:	lea    rcx,[rax+0x60]
  401a98:	mov    r9,r12
  401a9b:	mov    r8,r15
  401a9e:	call   0x406f88
  401aa3:	mov    r11,QWORD PTR [rsp+0x20]
  401aa8:	mov    rax,QWORD PTR [rip+0x1cd3d]        # 0x41e7ec
  401aaf:	mov    QWORD PTR [rsp+0x20],r11
  401ab4:	mov    rcx,r15
  401ab7:	call   QWORD PTR [rax]
  401ab9:	mov    r11,QWORD PTR [rsp+0x20]
  401abe:	mov    rbx,r11
  401ac1:	jmp    0x401928
  401ac6:	mov    r8,r13
  401ac9:	lea    rdx,[rip+0x95f8]        # 0x40b0c8
  401ad0:	mov    rcx,rbp
  401ad3:	call   rbx
  401ad5:	xor    ebx,ebx
  401ad7:	jmp    0x401928
  401adc:	nop    DWORD PTR [rax+0x0]
  401ae0:	push   rbx
  401ae1:	sub    rsp,0x20
  401ae5:	mov    rbx,rcx
  401ae8:	mov    rcx,QWORD PTR [rcx]
  401aeb:	test   rcx,rcx
  401aee:	je     0x401b30
  401af0:	cmp    DWORD PTR [rcx],0x81726354
  401af6:	je     0x401b14
  401af8:	lea    rcx,[rip+0x9611]        # 0x40b110
  401aff:	lea    rdx,[rip+0x95e7]        # 0x40b0ed
  401b06:	mov    r8d,0xc38
  401b0c:	call   0x406e10
  401b11:	mov    rcx,QWORD PTR [rbx]
  401b14:	call   0x406f68
  401b19:	sub    DWORD PTR [rip+0x1ab14],0x1        # 0x41c634
  401b20:	add    rsp,0x20
  401b24:	pop    rbx
  401b25:	ret    
  401b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b30:	lea    rcx,[rip+0x95c0]        # 0x40b0f7
  401b37:	lea    rdx,[rip+0x95af]        # 0x40b0ed
  401b3e:	mov    r8d,0xc37
  401b44:	call   0x406e10
  401b49:	mov    rcx,QWORD PTR [rbx]
  401b4c:	jmp    0x401af0
  401b4e:	xchg   ax,ax
  401b50:	push   rsi
  401b51:	push   rbx
  401b52:	sub    rsp,0x28
  401b56:	xor    ebx,ebx
  401b58:	call   0x4054d0
  401b5d:	test   rax,rax
  401b60:	mov    rsi,rax
  401b63:	je     0x401b75
  401b65:	call   0x4054e0
  401b6a:	cmp    eax,DWORD PTR [rip+0x1aba8]        # 0x41c718
  401b70:	mov    rbx,rsi
  401b73:	jg     0x401b80
  401b75:	mov    rax,rbx
  401b78:	add    rsp,0x28
  401b7c:	pop    rbx
  401b7d:	pop    rsi
  401b7e:	ret    
  401b7f:	nop
  401b80:	call   0x401640
  401b85:	mov    rax,QWORD PTR [rip+0x1cc60]        # 0x41e7ec
  401b8c:	mov    rcx,rsi
  401b8f:	xor    ebx,ebx
  401b91:	call   QWORD PTR [rax]
  401b93:	jmp    0x401b75
  401b95:	nop
  401b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ba0:	push   rsi
  401ba1:	push   rbx
  401ba2:	sub    rsp,0x28
  401ba6:	xor    ebx,ebx
  401ba8:	call   0x4054f0
  401bad:	test   rax,rax
  401bb0:	mov    rsi,rax
  401bb3:	je     0x401bc5
  401bb5:	call   0x4054e0
  401bba:	cmp    eax,DWORD PTR [rip+0x1ab58]        # 0x41c718
  401bc0:	mov    rbx,rsi
  401bc3:	jg     0x401bd0
  401bc5:	mov    rax,rbx
  401bc8:	add    rsp,0x28
  401bcc:	pop    rbx
  401bcd:	pop    rsi
  401bce:	ret    
  401bcf:	nop
  401bd0:	call   0x401640
  401bd5:	mov    rcx,rsi
  401bd8:	xor    ebx,ebx
  401bda:	call   0x405500
  401bdf:	jmp    0x401bc5
  401be1:	nop    DWORD PTR [rax+rax*1+0x0]
  401be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bf0:	jmp    0x405500
  401bf5:	nop
  401bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c00:	push   rsi
  401c01:	push   rbx
  401c02:	sub    rsp,0x28
  401c06:	xor    ebx,ebx
  401c08:	call   0x4054f8
  401c0d:	test   rax,rax
  401c10:	mov    rsi,rax
  401c13:	je     0x401c25
  401c15:	call   0x4054e0
  401c1a:	cmp    eax,DWORD PTR [rip+0x1aaf8]        # 0x41c718
  401c20:	mov    rbx,rsi
  401c23:	jg     0x401c30
  401c25:	mov    rax,rbx
  401c28:	add    rsp,0x28
  401c2c:	pop    rbx
  401c2d:	pop    rsi
  401c2e:	ret    
  401c2f:	nop
  401c30:	call   0x401640
  401c35:	mov    rcx,rsi
  401c38:	xor    ebx,ebx
  401c3a:	call   0x405500
  401c3f:	jmp    0x401c25
  401c41:	nop    DWORD PTR [rax+rax*1+0x0]
  401c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c50:	push   rbp
  401c51:	push   rdi
  401c52:	push   rsi
  401c53:	push   rbx
  401c54:	sub    rsp,0x38
  401c58:	mov    rsi,rcx
  401c5b:	lea    rcx,[rip+0x1a76e]        # 0x41c3d0
  401c62:	mov    QWORD PTR [rsp+0x68],rdx
  401c67:	xor    edx,edx
  401c69:	mov    QWORD PTR [rsp+0x78],r9
  401c6e:	mov    QWORD PTR [rsp+0x70],r8
  401c73:	call   0x406c30
  401c78:	mov    ebx,DWORD PTR [rip+0x1a752]        # 0x41c3d0
  401c7e:	mov    ecx,DWORD PTR [rip+0x1a750]        # 0x41c3d4
  401c84:	lea    rbp,[rsp+0x68]
  401c89:	sub    ebx,DWORD PTR [rip+0x1a749]        # 0x41c3d8
  401c8f:	sub    ecx,DWORD PTR [rip+0x1a747]        # 0x41c3dc
  401c95:	mov    rdi,QWORD PTR [rip+0x1d008]        # 0x41eca4
  401c9c:	mov    QWORD PTR [rsp+0x28],rbp
  401ca1:	imul   r8d,ebx,0x3e8
  401ca8:	mov    eax,ecx
  401caa:	mov    ebx,0x10624dd3
  401caf:	imul   ebx
  401cb1:	sar    ecx,0x1f
  401cb4:	sar    edx,0x6
  401cb7:	mov    ebx,edx
  401cb9:	sub    ebx,ecx
  401cbb:	add    ebx,r8d
  401cbe:	call   rdi
  401cc0:	lea    rcx,[rax+0x60]
  401cc4:	mov    r8,rbp
  401cc7:	mov    rdx,rsi
  401cca:	call   0x406ef0
  401ccf:	call   rdi
  401cd1:	lea    rdx,[rip+0x9464]        # 0x40b13c
  401cd8:	lea    rcx,[rax+0x60]
  401cdc:	mov    r8d,ebx
  401cdf:	call   0x406f88
  401ce4:	nop
  401ce5:	add    rsp,0x38
  401ce9:	pop    rbx
  401cea:	pop    rsi
  401ceb:	pop    rdi
  401cec:	pop    rbp
  401ced:	ret    
  401cee:	xchg   ax,ax
  401cf0:	push   r13
  401cf2:	push   r12
  401cf4:	push   rbp
  401cf5:	push   rdi
  401cf6:	push   rsi
  401cf7:	push   rbx
  401cf8:	sub    rsp,0x38
  401cfc:	mov    rbx,rcx
  401cff:	call   0x405278
  401d04:	mov    rcx,rbx
  401d07:	mov    esi,eax
  401d09:	call   0x405288
  401d0e:	mov    edi,eax
  401d10:	mov    eax,DWORD PTR [rip+0x1aa06]        # 0x41c71c
  401d16:	test   eax,eax
  401d18:	jne    0x401d50
  401d1a:	cmp    QWORD PTR [rip+0x1a8fe],0x0        # 0x41c620
  401d22:	je     0x401d40
  401d24:	cmp    esi,0x1
  401d27:	je     0x401dc1
  401d2d:	cmp    QWORD PTR [rip+0x1a8e3],0x0        # 0x41c618
  401d35:	je     0x401d40
  401d37:	cmp    esi,0xf
  401d3a:	je     0x401eee
  401d40:	add    rsp,0x38
  401d44:	pop    rbx
  401d45:	pop    rsi
  401d46:	pop    rdi
  401d47:	pop    rbp
  401d48:	pop    r12
  401d4a:	pop    r13
  401d4c:	ret    
  401d4d:	nop    DWORD PTR [rax]
  401d50:	mov    rcx,rbx
  401d53:	call   0x4052b8
  401d58:	test   rax,rax
  401d5b:	mov    rbp,rax
  401d5e:	lea    rax,[rip+0x93e5]        # 0x40b14a
  401d65:	mov    rcx,rbx
  401d68:	cmove  rbp,rax
  401d6c:	call   0x4052a8
  401d71:	mov    rcx,rbx
  401d74:	mov    r12,rax
  401d77:	call   0x405290
  401d7c:	mov    rcx,rbx
  401d7f:	mov    r13d,eax
  401d82:	call   0x405298
  401d87:	lea    rcx,[rip+0x93bf]        # 0x40b14d
  401d8e:	mov    edx,eax
  401d90:	mov    DWORD PTR [rsp+0x28],r13d
  401d95:	mov    DWORD PTR [rsp+0x20],edi
  401d99:	mov    r9,rbp
  401d9c:	mov    r8d,esi
  401d9f:	call   0x406f38
  401da4:	test   r12,r12
  401da7:	je     0x401f44
  401dad:	lea    rcx,[rip+0x93a8]        # 0x40b15c
  401db4:	mov    rdx,r12
  401db7:	call   0x406f38
  401dbc:	jmp    0x401d1a
  401dc1:	mov    rcx,rbx
  401dc4:	call   0x4052a0
  401dc9:	mov    rcx,QWORD PTR [rip+0x1a850]        # 0x41c620
  401dd0:	mov    rdx,rax
  401dd3:	call   0x405460
  401dd8:	test   eax,eax
  401dda:	mov    ebp,eax
  401ddc:	jne    0x401f53
  401de2:	xor    esi,esi
  401de4:	cmp    QWORD PTR [rip+0x1a82c],0x0        # 0x41c618
  401dec:	je     0x401d40
  401df2:	mov    rcx,rbx
  401df5:	call   0x4052b0
  401dfa:	mov    rcx,rbx
  401dfd:	mov    r12,rax
  401e00:	call   0x4052c0
  401e05:	mov    rcx,QWORD PTR [rip+0x1a80c]        # 0x41c618
  401e0c:	mov    rdx,rax
  401e0f:	mov    r8,r12
  401e12:	call   0x4052d8
  401e17:	test   eax,eax
  401e19:	js     0x401eb0
  401e1f:	cmp    eax,ebp
  401e21:	je     0x401ee8
  401e27:	test   rsi,rsi
  401e2a:	je     0x401f8f
  401e30:	mov    rbp,QWORD PTR [rip+0x1ce6d]        # 0x41eca4
  401e37:	call   rbp
  401e39:	lea    rcx,[rip+0x9358]        # 0x40b198
  401e40:	lea    r9,[rax+0x60]
  401e44:	mov    r8d,0x2b
  401e4a:	mov    edx,0x1
  401e4f:	call   0x406f58
  401e54:	mov    rbx,QWORD PTR [rip+0x1a7cd]        # 0x41c628
  401e5b:	call   rbp
  401e5d:	lea    rdx,[rip+0x9360]        # 0x40b1c4
  401e64:	lea    rcx,[rax+0x60]
  401e68:	mov    r9,rsi
  401e6b:	mov    r8,rbx
  401e6e:	call   0x406f88
  401e73:	test   edi,edi
  401e75:	je     0x401e90
  401e77:	mov    rcx,QWORD PTR [rip+0x1a79a]        # 0x41c618
  401e7e:	call   0x4052e0
  401e83:	test   eax,eax
  401e85:	js     0x401f04
  401e87:	test   rsi,rsi
  401e8a:	je     0x401d40
  401e90:	mov    rax,QWORD PTR [rip+0x1c955]        # 0x41e7ec
  401e97:	mov    rcx,rsi
  401e9a:	mov    rax,QWORD PTR [rax]
  401e9d:	add    rsp,0x38
  401ea1:	pop    rbx
  401ea2:	pop    rsi
  401ea3:	pop    rdi
  401ea4:	pop    rbp
  401ea5:	pop    r12
  401ea7:	pop    r13
  401ea9:	rex.W jmp rax
  401eac:	nop    DWORD PTR [rax+0x0]
  401eb0:	call   QWORD PTR [rip+0x1cdee]        # 0x41eca4
  401eb6:	lea    rcx,[rip+0x92c0]        # 0x40b17d
  401ebd:	lea    r9,[rax+0x60]
  401ec1:	mov    r8d,0x18
  401ec7:	mov    edx,0x1
  401ecc:	call   0x406f58
  401ed1:	mov    rcx,QWORD PTR [rip+0x1a740]        # 0x41c618
  401ed8:	call   0x405550
  401edd:	mov    QWORD PTR [rip+0x1a730],0x0        # 0x41c618
  401ee8:	test   edi,edi
  401eea:	jne    0x401e77
  401eec:	jmp    0x401e87
  401eee:	mov    rcx,QWORD PTR [rip+0x1a723]        # 0x41c618
  401ef5:	call   0x4052e0
  401efa:	test   eax,eax
  401efc:	jns    0x401d40
  401f02:	xor    esi,esi
  401f04:	mov    rbp,QWORD PTR [rip+0x1cd99]        # 0x41eca4
  401f0b:	call   rbp
  401f0d:	lea    rcx,[rip+0x92c6]        # 0x40b1da
  401f14:	lea    r9,[rax+0x60]
  401f18:	mov    r8d,0x17
  401f1e:	mov    edx,0x1
  401f23:	call   0x406f58
  401f28:	mov    rcx,QWORD PTR [rip+0x1a6e9]        # 0x41c618
  401f2f:	call   0x405550
  401f34:	mov    QWORD PTR [rip+0x1a6d9],0x0        # 0x41c618
  401f3f:	jmp    0x401e87
  401f44:	mov    ecx,0xa
  401f49:	call   0x406f30
  401f4e:	jmp    0x401d1a
  401f53:	mov    rcx,rbx
  401f56:	call   0x4052a0
  401f5b:	mov    rcx,rax
  401f5e:	call   0x405528
  401f63:	mov    r8,QWORD PTR [rip+0x1a6be]        # 0x41c628
  401f6a:	lea    rcx,[rip+0x91f0]        # 0x40b161
  401f71:	mov    rdx,rax
  401f74:	mov    rsi,rax
  401f77:	call   0x406f38
  401f7c:	cmp    QWORD PTR [rip+0x1a694],0x0        # 0x41c618
  401f84:	jne    0x401df2
  401f8a:	jmp    0x401e87
  401f8f:	mov    rcx,rbx
  401f92:	call   0x4052a0
  401f97:	mov    rcx,rax
  401f9a:	call   0x405528
  401f9f:	mov    rbp,QWORD PTR [rip+0x1ccfe]        # 0x41eca4
  401fa6:	mov    rsi,rax
  401fa9:	call   rbp
  401fab:	lea    rcx,[rip+0x91e6]        # 0x40b198
  401fb2:	lea    r9,[rax+0x60]
  401fb6:	mov    r8d,0x2b
  401fbc:	mov    edx,0x1
  401fc1:	call   0x406f58
  401fc6:	test   rsi,rsi
  401fc9:	jne    0x401e54
  401fcf:	mov    rcx,rbx
  401fd2:	call   0x4052b8
  401fd7:	mov    rbx,QWORD PTR [rip+0x1a64a]        # 0x41c628
  401fde:	mov    r12,rax
  401fe1:	call   rbp
  401fe3:	lea    rdx,[rip+0x91da]        # 0x40b1c4
  401fea:	lea    rcx,[rax+0x60]
  401fee:	mov    r9,r12
  401ff1:	mov    r8,rbx
  401ff4:	call   0x406f88
  401ff9:	test   edi,edi
  401ffb:	je     0x401d40
  402001:	mov    rcx,QWORD PTR [rip+0x1a610]        # 0x41c618
  402008:	call   0x4052e0
  40200d:	test   eax,eax
  40200f:	jns    0x401d40
  402015:	jmp    0x401f0b
  40201a:	nop    WORD PTR [rax+rax*1+0x0]
  402020:	sub    rsp,0x28
  402024:	mov    r9,rcx
  402027:	movsxd r8,r8d
  40202a:	mov    rcx,rdx
  40202d:	mov    edx,0x1
  402032:	call   0x406f70
  402037:	add    rsp,0x28
  40203b:	ret    
  40203c:	nop    DWORD PTR [rax+0x0]
  402040:	push   rbx
  402041:	sub    rsp,0x20
  402045:	mov    rbx,rcx
  402048:	call   QWORD PTR [rip+0x1cc56]        # 0x41eca4
  40204e:	cmp    rax,rbx
  402051:	je     0x402060
  402053:	mov    rcx,rbx
  402056:	add    rsp,0x20
  40205a:	pop    rbx
  40205b:	jmp    0x406f98
  402060:	add    rsp,0x20
  402064:	pop    rbx
  402065:	ret    
  402066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402070:	sub    rsp,0x38
  402074:	mov    QWORD PTR [rsp+0x58],r9
  402079:	lea    r9,[rsp+0x58]
  40207e:	mov    QWORD PTR [rsp+0x28],r9
  402083:	call   0x406ed0
  402088:	add    rsp,0x38
  40208c:	ret    
  40208d:	nop    DWORD PTR [rax]
  402090:	push   rbx
  402091:	sub    rsp,0x20
  402095:	lea    rdx,[rip+0xdfe4]        # 0x410080
  40209c:	xor    ecx,ecx
  40209e:	call   0x405588
  4020a3:	test   rax,rax
  4020a6:	mov    rbx,rax
  4020a9:	je     0x4020d4
  4020ab:	mov    r8,rax
  4020ae:	mov    rax,QWORD PTR [rip+0x1c78f]        # 0x41e844
  4020b5:	lea    rdx,[rip+0x928e]        # 0x40b34a
  4020bc:	mov    rcx,QWORD PTR [rax]
  4020bf:	mov    rax,QWORD PTR [rip+0x1c776]        # 0x41e83c
  4020c6:	call   QWORD PTR [rax]
  4020c8:	mov    rax,QWORD PTR [rip+0x1c71d]        # 0x41e7ec
  4020cf:	mov    rcx,rbx
  4020d2:	call   QWORD PTR [rax]
  4020d4:	mov    BYTE PTR [rip+0xdfa5],0x0        # 0x410080
  4020db:	add    rsp,0x20
  4020df:	pop    rbx
  4020e0:	ret    
  4020e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4020e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020f0:	push   rbx
  4020f1:	sub    rsp,0x30
  4020f5:	mov    rax,QWORD PTR [rip+0x1c748]        # 0x41e844
  4020fc:	lea    rdx,[rip+0x924a]        # 0x40b34d
  402103:	mov    rbx,rcx
  402106:	mov    rcx,QWORD PTR [rax]
  402109:	mov    rax,QWORD PTR [rip+0x1c72c]        # 0x41e83c
  402110:	call   QWORD PTR [rax]
  402112:	lea    r10,[rip+0xdf67]        # 0x410080
  402119:	mov    rcx,r10
  40211c:	mov    rax,r10
  40211f:	mov    r9d,DWORD PTR [rax]
  402122:	add    rax,0x4
  402126:	lea    edx,[r9-0x1010101]
  40212d:	not    r9d
  402130:	and    edx,r9d
  402133:	and    edx,0x80808080
  402139:	je     0x40211f
  40213b:	mov    r8d,edx
  40213e:	shr    r8d,0x10
  402142:	test   edx,0x8080
  402148:	cmove  edx,r8d
  40214c:	lea    r8,[rax+0x2]
  402150:	cmove  rax,r8
  402154:	add    dl,dl
  402156:	sbb    rax,0x3
  40215a:	sub    eax,r10d
  40215d:	test   rbx,rbx
  402160:	je     0x40218c
  402162:	mov    r9,QWORD PTR [rbx+0x8]
  402166:	test   r9,r9
  402169:	je     0x4021a0
  40216b:	cdqe   
  40216d:	mov    edx,0xc350
  402172:	lea    r8,[rip+0x91d8]        # 0x40b351
  402179:	sub    rdx,rax
  40217c:	add    rcx,rax
  40217f:	mov    eax,DWORD PTR [rbx+0x34]
  402182:	mov    DWORD PTR [rsp+0x20],eax
  402186:	call   0x402070
  40218b:	nop
  40218c:	add    rsp,0x30
  402190:	pop    rbx
  402191:	jmp    0x402090
  402196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021a0:	movsxd r8,eax
  4021a3:	mov    r9d,DWORD PTR [rbx+0x34]
  4021a7:	mov    edx,0xc350
  4021ac:	sub    rdx,r8
  4021af:	add    rcx,r8
  4021b2:	lea    r8,[rip+0x91a0]        # 0x40b359
  4021b9:	call   0x402070
  4021be:	nop
  4021bf:	add    rsp,0x30
  4021c3:	pop    rbx
  4021c4:	jmp    0x402090
  4021c9:	nop    DWORD PTR [rax+0x0]
  4021d0:	push   r15
  4021d2:	push   r14
  4021d4:	push   r13
  4021d6:	push   r12
  4021d8:	push   rbp
  4021d9:	push   rdi
  4021da:	push   rsi
  4021db:	push   rbx
  4021dc:	sub    rsp,0x28
  4021e0:	test   rcx,rcx
  4021e3:	je     0x402510
  4021e9:	mov    r12,QWORD PTR [rip+0x1c654]        # 0x41e844
  4021f0:	mov    r13,QWORD PTR [rip+0x1c645]        # 0x41e83c
  4021f7:	mov    rbp,rcx
  4021fa:	lea    rdx,[rip+0x916a]        # 0x40b36b
  402201:	mov    rcx,QWORD PTR [r12]
  402205:	call   QWORD PTR [r13+0x0]
  402209:	mov    r14,QWORD PTR [rbp+0x20]
  40220d:	mov    rcx,QWORD PTR [rbp+0x18]
  402211:	cmp    r14,rcx
  402214:	jbe    0x402529
  40221a:	movzx  eax,BYTE PTR [r14]
  40221e:	cmp    al,0xd
  402220:	je     0x402230
  402222:	cmp    al,0xa
  402224:	jne    0x402521
  40222a:	nop    WORD PTR [rax+rax*1+0x0]
  402230:	lea    rax,[r14-0x1]
  402234:	cmp    rax,rcx
  402237:	je     0x402500
  40223d:	movzx  edx,BYTE PTR [r14-0x1]
  402242:	mov    r14,rax
  402245:	cmp    dl,0xd
  402248:	je     0x402230
  40224a:	cmp    dl,0xa
  40224d:	je     0x402230
  40224f:	mov    rdx,rax
  402252:	jmp    0x40226c
  402254:	cmp    rcx,r14
  402257:	jae    0x40227c
  402259:	movzx  r9d,BYTE PTR [r14]
  40225d:	mov    rdx,r14
  402260:	cmp    r9b,0xa
  402264:	je     0x402281
  402266:	cmp    r9b,0xd
  40226a:	je     0x402281
  40226c:	lea    r14,[rdx-0x1]
  402270:	mov    r8d,eax
  402273:	sub    r8d,r14d
  402276:	cmp    r8d,0x50
  40227a:	jne    0x402254
  40227c:	movzx  r9d,BYTE PTR [rdx-0x1]
  402281:	cmp    r9b,0xd
  402285:	je     0x4024f0
  40228b:	cmp    r9b,0xa
  40228f:	je     0x4024f0
  402295:	cmp    r9b,0xa
  402299:	setne  dl
  40229c:	test   r9b,r9b
  40229f:	setne  al
  4022a2:	test   dl,al
  4022a4:	je     0x402357
  4022aa:	cmp    r9b,0xd
  4022ae:	je     0x402357
  4022b4:	lea    rbx,[rip+0xddc5]        # 0x410080
  4022bb:	mov    r15,r14
  4022be:	mov    esi,0xc350
  4022c3:	mov    rdi,rbx
  4022c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022d0:	lea    rax,[rip+0xdda9]        # 0x410080
  4022d7:	mov    ecx,DWORD PTR [rax]
  4022d9:	add    rax,0x4
  4022dd:	lea    edx,[rcx-0x1010101]
  4022e3:	not    ecx
  4022e5:	and    edx,ecx
  4022e7:	and    edx,0x80808080
  4022ed:	je     0x4022d7
  4022ef:	mov    ecx,edx
  4022f1:	lea    r8,[rip+0x907c]        # 0x40b374
  4022f8:	shr    ecx,0x10
  4022fb:	test   edx,0x8080
  402301:	cmove  edx,ecx
  402304:	lea    rcx,[rax+0x2]
  402308:	cmove  rax,rcx
  40230c:	add    dl,dl
  40230e:	mov    rdx,rsi
  402311:	sbb    rax,0x3
  402315:	add    r15,0x1
  402319:	sub    rax,rbx
  40231c:	cdqe   
  40231e:	lea    rcx,[rdi+rax*1]
  402322:	sub    rdx,rax
  402325:	call   0x402070
  40232a:	movzx  r9d,BYTE PTR [r15]
  40232e:	cmp    r9b,0xa
  402332:	setne  dl
  402335:	test   r9b,r9b
  402338:	setne  al
  40233b:	and    eax,edx
  40233d:	cmp    r9b,0xd
  402341:	setne  dl
  402344:	test   al,dl
  402346:	je     0x402357
  402348:	mov    eax,r15d
  40234b:	sub    eax,r14d
  40234e:	cmp    eax,0x4f
  402351:	jne    0x4022d0
  402357:	lea    r8,[rip+0xdd22]        # 0x410080
  40235e:	mov    rcx,r8
  402361:	mov    rdx,r8
  402364:	mov    eax,DWORD PTR [rdx]
  402366:	add    rdx,0x4
  40236a:	lea    r9d,[rax-0x1010101]
  402371:	not    eax
  402373:	and    r9d,eax
  402376:	and    r9d,0x80808080
  40237d:	je     0x402364
  40237f:	mov    eax,r9d
  402382:	shr    eax,0x10
  402385:	test   r9d,0x8080
  40238c:	cmove  r9d,eax
  402390:	lea    rax,[rdx+0x2]
  402394:	cmove  rdx,rax
  402398:	add    r9b,r9b
  40239b:	sbb    rdx,0x3
  40239f:	sub    rdx,r8
  4023a2:	movsxd r8,edx
  4023a5:	mov    edx,0xc350
  4023aa:	sub    rdx,r8
  4023ad:	add    rcx,r8
  4023b0:	lea    r8,[rip+0x8fbb]        # 0x40b372
  4023b7:	call   0x402070
  4023bc:	mov    r15,QWORD PTR [rbp+0x20]
  4023c0:	movzx  eax,BYTE PTR [r15]
  4023c4:	cmp    al,0xd
  4023c6:	jne    0x4023dc
  4023c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4023d0:	sub    r15,0x1
  4023d4:	movzx  eax,BYTE PTR [r15]
  4023d8:	cmp    al,0xd
  4023da:	je     0x4023d0
  4023dc:	cmp    al,0xa
  4023de:	je     0x4023d0
  4023e0:	lea    rsi,[rip+0xdc99]        # 0x410080
  4023e7:	cmp    r14,r15
  4023ea:	lea    rbx,[r14+0x50]
  4023ee:	mov    edi,0xc350
  4023f3:	mov    rbp,rsi
  4023f6:	jne    0x402405
  4023f8:	jmp    0x402462
  4023fa:	nop    WORD PTR [rax+rax*1+0x0]
  402400:	cmp    r14,rbx
  402403:	je     0x402462
  402405:	lea    rcx,[rip+0xdc74]        # 0x410080
  40240c:	mov    edx,DWORD PTR [rcx]
  40240e:	add    rcx,0x4
  402412:	lea    eax,[rdx-0x1010101]
  402418:	not    edx
  40241a:	and    eax,edx
  40241c:	and    eax,0x80808080
  402421:	je     0x40240c
  402423:	mov    edx,eax
  402425:	lea    r8,[rip+0x8f55]        # 0x40b381
  40242c:	shr    edx,0x10
  40242f:	test   eax,0x8080
  402434:	cmove  eax,edx
  402437:	lea    rdx,[rcx+0x2]
  40243b:	cmove  rcx,rdx
  40243f:	add    al,al
  402441:	mov    rdx,rdi
  402444:	sbb    rcx,0x3
  402448:	add    r14,0x1
  40244c:	sub    rcx,rsi
  40244f:	movsxd rcx,ecx
  402452:	sub    rdx,rcx
  402455:	add    rcx,rbp
  402458:	call   0x402070
  40245d:	cmp    r14,r15
  402460:	jne    0x402400
  402462:	lea    r9,[rip+0xdc17]        # 0x410080
  402469:	mov    rcx,r9
  40246c:	mov    rax,r9
  40246f:	mov    r8d,DWORD PTR [rax]
  402472:	add    rax,0x4
  402476:	lea    edx,[r8-0x1010101]
  40247d:	not    r8d
  402480:	and    edx,r8d
  402483:	and    edx,0x80808080
  402489:	je     0x40246f
  40248b:	mov    r8d,edx
  40248e:	shr    r8d,0x10
  402492:	test   edx,0x8080
  402498:	cmove  edx,r8d
  40249c:	lea    r8,[rax+0x2]
  4024a0:	cmove  rax,r8
  4024a4:	add    dl,dl
  4024a6:	lea    r8,[rip+0x8eca]        # 0x40b377
  4024ad:	sbb    rax,0x3
  4024b1:	mov    edx,0xc350
  4024b6:	sub    rax,r9
  4024b9:	cdqe   
  4024bb:	sub    rdx,rax
  4024be:	add    rcx,rax
  4024c1:	call   0x402070
  4024c6:	call   0x402090
  4024cb:	mov    rax,QWORD PTR [r13+0x0]
  4024cf:	mov    rcx,QWORD PTR [r12]
  4024d3:	lea    rdx,[rip+0x8ea0]        # 0x40b37a
  4024da:	add    rsp,0x28
  4024de:	pop    rbx
  4024df:	pop    rsi
  4024e0:	pop    rdi
  4024e1:	pop    rbp
  4024e2:	pop    r12
  4024e4:	pop    r13
  4024e6:	pop    r14
  4024e8:	pop    r15
  4024ea:	rex.W jmp rax
  4024ed:	nop    DWORD PTR [rax]
  4024f0:	movzx  r9d,BYTE PTR [r14+0x1]
  4024f5:	add    r14,0x1
  4024f9:	jmp    0x402295
  4024fe:	xchg   ax,ax
  402500:	movzx  r9d,BYTE PTR [r14-0x1]
  402505:	mov    r14,rcx
  402508:	jmp    0x402281
  40250d:	nop    DWORD PTR [rax]
  402510:	add    rsp,0x28
  402514:	pop    rbx
  402515:	pop    rsi
  402516:	pop    rdi
  402517:	pop    rbp
  402518:	pop    r12
  40251a:	pop    r13
  40251c:	pop    r14
  40251e:	pop    r15
  402520:	ret    
  402521:	mov    rax,r14
  402524:	jmp    0x40224f
  402529:	movzx  r9d,BYTE PTR [r14]
  40252d:	jmp    0x402281
  402532:	nop    DWORD PTR [rax+0x0]
  402536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402540:	push   rbp
  402541:	push   rdi
  402542:	push   rsi
  402543:	push   rbx
  402544:	sub    rsp,0x38
  402548:	mov    BYTE PTR [rip+0xdb31],0x0        # 0x410080
  40254f:	mov    QWORD PTR [rsp+0x70],r8
  402554:	mov    QWORD PTR [rsp+0x78],r9
  402559:	mov    rdi,rdx
  40255c:	mov    rbp,QWORD PTR [rcx+0x38]
  402560:	cmp    QWORD PTR [rbp+0x8],0x0
  402565:	je     0x402630
  40256b:	mov    rcx,rbp
  40256e:	call   0x4020f0
  402573:	mov    rsi,QWORD PTR [rip+0x1c2ca]        # 0x41e844
  40257a:	mov    rbx,QWORD PTR [rip+0x1c2bb]        # 0x41e83c
  402581:	lea    rdx,[rip+0x8dfb]        # 0x40b383
  402588:	mov    rcx,QWORD PTR [rsi]
  40258b:	call   QWORD PTR [rbx]
  40258d:	lea    rax,[rsp+0x70]
  402592:	lea    rdx,[rip+0xdae7]        # 0x410080
  402599:	mov    QWORD PTR [rsp+0x28],rax
  40259e:	mov    rcx,rdx
  4025a1:	mov    rax,rdx
  4025a4:	mov    r10d,DWORD PTR [rax]
  4025a7:	add    rax,0x4
  4025ab:	lea    r9d,[r10-0x1010101]
  4025b2:	not    r10d
  4025b5:	and    r9d,r10d
  4025b8:	and    r9d,0x80808080
  4025bf:	je     0x4025a4
  4025c1:	mov    r8d,r9d
  4025c4:	shr    r8d,0x10
  4025c8:	test   r9d,0x8080
  4025cf:	cmove  r9d,r8d
  4025d3:	lea    r8,[rax+0x2]
  4025d7:	cmove  rax,r8
  4025db:	add    r9b,r9b
  4025de:	mov    r9,QWORD PTR [rsp+0x28]
  4025e3:	sbb    rax,0x3
  4025e7:	mov    r8,rdi
  4025ea:	sub    rax,rdx
  4025ed:	mov    edx,0xc350
  4025f2:	cdqe   
  4025f4:	sub    rdx,rax
  4025f7:	add    rcx,rax
  4025fa:	call   0x406ed0
  4025ff:	call   0x402090
  402604:	lea    rdx,[rip+0x8d92]        # 0x40b39d
  40260b:	mov    rcx,QWORD PTR [rsi]
  40260e:	call   QWORD PTR [rbx]
  402610:	mov    rcx,rbp
  402613:	call   0x4021d0
  402618:	call   0x402090
  40261d:	nop
  40261e:	add    rsp,0x38
  402622:	pop    rbx
  402623:	pop    rsi
  402624:	pop    rdi
  402625:	pop    rbp
  402626:	ret    
  402627:	nop    WORD PTR [rax+rax*1+0x0]
  402630:	movsxd rax,DWORD PTR [rcx+0x40]
  402634:	cmp    eax,0x1
  402637:	jle    0x40256b
  40263d:	mov    rdx,QWORD PTR [rcx+0x48]
  402641:	mov    rbp,QWORD PTR [rdx+rax*8-0x10]
  402646:	jmp    0x40256b
  40264b:	nop    DWORD PTR [rax+rax*1+0x0]
  402650:	push   rbp
  402651:	push   rdi
  402652:	push   rsi
  402653:	push   rbx
  402654:	sub    rsp,0x38
  402658:	mov    BYTE PTR [rip+0xda21],0x0        # 0x410080
  40265f:	mov    QWORD PTR [rsp+0x70],r8
  402664:	mov    QWORD PTR [rsp+0x78],r9
  402669:	mov    rdi,rdx
  40266c:	mov    rbp,QWORD PTR [rcx+0x38]
  402670:	cmp    QWORD PTR [rbp+0x8],0x0
  402675:	je     0x402740
  40267b:	mov    rcx,rbp
  40267e:	call   0x4020f0
  402683:	mov    rsi,QWORD PTR [rip+0x1c1ba]        # 0x41e844
  40268a:	mov    rbx,QWORD PTR [rip+0x1c1ab]        # 0x41e83c
  402691:	lea    rdx,[rip+0x8d0b]        # 0x40b3a3
  402698:	mov    rcx,QWORD PTR [rsi]
  40269b:	call   QWORD PTR [rbx]
  40269d:	lea    rdx,[rip+0xd9dc]        # 0x410080
  4026a4:	mov    rcx,rdx
  4026a7:	mov    rax,rdx
  4026aa:	mov    r10d,DWORD PTR [rax]
  4026ad:	add    rax,0x4
  4026b1:	lea    r9d,[r10-0x1010101]
  4026b8:	not    r10d
  4026bb:	and    r9d,r10d
  4026be:	and    r9d,0x80808080
  4026c5:	je     0x4026aa
  4026c7:	mov    r8d,r9d
  4026ca:	shr    r8d,0x10
  4026ce:	test   r9d,0x8080
  4026d5:	cmove  r9d,r8d
  4026d9:	lea    r8,[rax+0x2]
  4026dd:	cmove  rax,r8
  4026e1:	add    r9b,r9b
  4026e4:	lea    r9,[rsp+0x70]
  4026e9:	sbb    rax,0x3
  4026ed:	mov    r8,rdi
  4026f0:	sub    rax,rdx
  4026f3:	mov    edx,0xc350
  4026f8:	mov    QWORD PTR [rsp+0x28],r9
  4026fd:	cdqe   
  4026ff:	sub    rdx,rax
  402702:	add    rcx,rax
  402705:	call   0x406ed0
  40270a:	call   0x402090
  40270f:	lea    rdx,[rip+0x8c87]        # 0x40b39d
  402716:	mov    rcx,QWORD PTR [rsi]
  402719:	call   QWORD PTR [rbx]
  40271b:	mov    rcx,rbp
  40271e:	call   0x4021d0
  402723:	call   0x402090
  402728:	mov    DWORD PTR [rip+0x19f32],0x3        # 0x41c664
  402732:	add    rsp,0x38
  402736:	pop    rbx
  402737:	pop    rsi
  402738:	pop    rdi
  402739:	pop    rbp
  40273a:	ret    
  40273b:	nop    DWORD PTR [rax+rax*1+0x0]
  402740:	movsxd rax,DWORD PTR [rcx+0x40]
  402744:	cmp    eax,0x1
  402747:	jle    0x40267b
  40274d:	mov    rdx,QWORD PTR [rcx+0x48]
  402751:	mov    rbp,QWORD PTR [rdx+rax*8-0x10]
  402756:	jmp    0x40267b
  40275b:	nop    DWORD PTR [rax+rax*1+0x0]
  402760:	push   rbp
  402761:	push   rdi
  402762:	push   rsi
  402763:	push   rbx
  402764:	sub    rsp,0x38
  402768:	mov    BYTE PTR [rip+0xd911],0x0        # 0x410080
  40276f:	mov    QWORD PTR [rsp+0x70],r8
  402774:	mov    QWORD PTR [rsp+0x78],r9
  402779:	mov    rdi,rdx
  40277c:	mov    rbp,QWORD PTR [rcx+0x38]
  402780:	test   rbp,rbp
  402783:	je     0x402790
  402785:	cmp    QWORD PTR [rbp+0x8],0x0
  40278a:	je     0x402850
  402790:	mov    rcx,rbp
  402793:	call   0x4020f0
  402798:	mov    rsi,QWORD PTR [rip+0x1c0a5]        # 0x41e844
  40279f:	mov    rbx,QWORD PTR [rip+0x1c096]        # 0x41e83c
  4027a6:	lea    rdx,[rip+0x8c0e]        # 0x40b3bb
  4027ad:	mov    rcx,QWORD PTR [rsi]
  4027b0:	call   QWORD PTR [rbx]
  4027b2:	lea    rax,[rsp+0x70]
  4027b7:	lea    rdx,[rip+0xd8c2]        # 0x410080
  4027be:	mov    QWORD PTR [rsp+0x28],rax
  4027c3:	mov    rcx,rdx
  4027c6:	mov    rax,rdx
  4027c9:	mov    r10d,DWORD PTR [rax]
  4027cc:	add    rax,0x4
  4027d0:	lea    r9d,[r10-0x1010101]
  4027d7:	not    r10d
  4027da:	and    r9d,r10d
  4027dd:	and    r9d,0x80808080
  4027e4:	je     0x4027c9
  4027e6:	mov    r8d,r9d
  4027e9:	shr    r8d,0x10
  4027ed:	test   r9d,0x8080
  4027f4:	cmove  r9d,r8d
  4027f8:	lea    r8,[rax+0x2]
  4027fc:	cmove  rax,r8
  402800:	add    r9b,r9b
  402803:	mov    r9,QWORD PTR [rsp+0x28]
  402808:	sbb    rax,0x3
  40280c:	mov    r8,rdi
  40280f:	sub    rax,rdx
  402812:	mov    edx,0xc350
  402817:	cdqe   
  402819:	sub    rdx,rax
  40281c:	add    rcx,rax
  40281f:	call   0x406ed0
  402824:	call   0x402090
  402829:	lea    rdx,[rip+0x8b6d]        # 0x40b39d
  402830:	mov    rcx,QWORD PTR [rsi]
  402833:	call   QWORD PTR [rbx]
  402835:	mov    rcx,rbp
  402838:	call   0x4021d0
  40283d:	call   0x402090
  402842:	nop
  402843:	add    rsp,0x38
  402847:	pop    rbx
  402848:	pop    rsi
  402849:	pop    rdi
  40284a:	pop    rbp
  40284b:	ret    
  40284c:	nop    DWORD PTR [rax+0x0]
  402850:	movsxd rax,DWORD PTR [rcx+0x40]
  402854:	cmp    eax,0x1
  402857:	jle    0x402790
  40285d:	mov    rdx,QWORD PTR [rcx+0x48]
  402861:	mov    rbp,QWORD PTR [rdx+rax*8-0x10]
  402866:	jmp    0x402790
  40286b:	nop    DWORD PTR [rax+rax*1+0x0]
  402870:	push   rbp
  402871:	push   rdi
  402872:	push   rsi
  402873:	push   rbx
  402874:	sub    rsp,0x38
  402878:	mov    BYTE PTR [rip+0xd801],0x0        # 0x410080
  40287f:	mov    QWORD PTR [rsp+0x70],r8
  402884:	mov    QWORD PTR [rsp+0x78],r9
  402889:	mov    rdi,rdx
  40288c:	mov    rbp,QWORD PTR [rcx+0x38]
  402890:	test   rbp,rbp
  402893:	je     0x4028a0
  402895:	cmp    QWORD PTR [rbp+0x8],0x0
  40289a:	je     0x402960
  4028a0:	mov    rcx,rbp
  4028a3:	call   0x4020f0
  4028a8:	mov    rsi,QWORD PTR [rip+0x1bf95]        # 0x41e844
  4028af:	mov    rbx,QWORD PTR [rip+0x1bf86]        # 0x41e83c
  4028b6:	lea    rdx,[rip+0x8b0f]        # 0x40b3cc
  4028bd:	mov    rcx,QWORD PTR [rsi]
  4028c0:	call   QWORD PTR [rbx]
  4028c2:	lea    rax,[rsp+0x70]
  4028c7:	lea    rdx,[rip+0xd7b2]        # 0x410080
  4028ce:	mov    QWORD PTR [rsp+0x28],rax
  4028d3:	mov    rcx,rdx
  4028d6:	mov    rax,rdx
  4028d9:	mov    r10d,DWORD PTR [rax]
  4028dc:	add    rax,0x4
  4028e0:	lea    r9d,[r10-0x1010101]
  4028e7:	not    r10d
  4028ea:	and    r9d,r10d
  4028ed:	and    r9d,0x80808080
  4028f4:	je     0x4028d9
  4028f6:	mov    r8d,r9d
  4028f9:	shr    r8d,0x10
  4028fd:	test   r9d,0x8080
  402904:	cmove  r9d,r8d
  402908:	lea    r8,[rax+0x2]
  40290c:	cmove  rax,r8
  402910:	add    r9b,r9b
  402913:	mov    r9,QWORD PTR [rsp+0x28]
  402918:	sbb    rax,0x3
  40291c:	mov    r8,rdi
  40291f:	sub    rax,rdx
  402922:	mov    edx,0xc350
  402927:	cdqe   
  402929:	sub    rdx,rax
  40292c:	add    rcx,rax
  40292f:	call   0x406ed0
  402934:	call   0x402090
  402939:	lea    rdx,[rip+0x8a5d]        # 0x40b39d
  402940:	mov    rcx,QWORD PTR [rsi]
  402943:	call   QWORD PTR [rbx]
  402945:	mov    rcx,rbp
  402948:	call   0x4021d0
  40294d:	call   0x402090
  402952:	nop
  402953:	add    rsp,0x38
  402957:	pop    rbx
  402958:	pop    rsi
  402959:	pop    rdi
  40295a:	pop    rbp
  40295b:	ret    
  40295c:	nop    DWORD PTR [rax+0x0]
  402960:	movsxd rax,DWORD PTR [rcx+0x40]
  402964:	cmp    eax,0x1
  402967:	jle    0x4028a0
  40296d:	mov    rdx,QWORD PTR [rcx+0x48]
  402971:	mov    rbp,QWORD PTR [rdx+rax*8-0x10]
  402976:	jmp    0x4028a0
  40297b:	nop    DWORD PTR [rax+rax*1+0x0]
  402980:	push   r14
  402982:	push   r13
  402984:	mov    eax,0x1050
  402989:	push   r12
  40298b:	push   rbp
  40298c:	push   rdi
  40298d:	push   rsi
  40298e:	push   rbx
  40298f:	call   0x406b50
  402994:	sub    rsp,rax
  402997:	mov    eax,DWORD PTR [rip+0x19cc3]        # 0x41c660
  40299d:	mov    r13,rcx
  4029a0:	mov    rsi,rdx
  4029a3:	test   eax,eax
  4029a5:	je     0x4029b4
  4029a7:	cmp    DWORD PTR [rip+0x19cee],0x0        # 0x41c69c
  4029ae:	je     0x40342a
  4029b4:	test   r13,r13
  4029b7:	je     0x4035b9
  4029bd:	mov    eax,DWORD PTR [rip+0x19cd1]        # 0x41c694
  4029c3:	test   eax,eax
  4029c5:	je     0x402ad2
  4029cb:	cmp    DWORD PTR [rip+0x19cb2],0x0        # 0x41c684
  4029d2:	jne    0x403864
  4029d8:	mov    r8d,DWORD PTR [rip+0x79a1]        # 0x40a380
  4029df:	xor    edx,edx
  4029e1:	mov    rcx,r13
  4029e4:	call   0x405608
  4029e9:	mov    rbx,rax
  4029ec:	test   rbx,rbx
  4029ef:	je     0x4035c6
  4029f5:	mov    eax,DWORD PTR [rip+0x19c65]        # 0x41c660
  4029fb:	test   eax,eax
  4029fd:	je     0x402a0c
  4029ff:	cmp    DWORD PTR [rip+0x19c96],0x0        # 0x41c69c
  402a06:	je     0x40381c
  402a0c:	mov    eax,DWORD PTR [rip+0x19c46]        # 0x41c658
  402a12:	test   eax,eax
  402a14:	jne    0x40338b
  402a1a:	mov    eax,DWORD PTR [rip+0x19c50]        # 0x41c670
  402a20:	test   eax,eax
  402a22:	je     0x402a70
  402a24:	cmp    DWORD PTR [rip+0x19c35],0x0        # 0x41c660
  402a2b:	je     0x402a3a
  402a2d:	cmp    DWORD PTR [rip+0x19c68],0x0        # 0x41c69c
  402a34:	je     0x40368d
  402a3a:	mov    edx,DWORD PTR [rip+0x7940]        # 0x40a380
  402a40:	mov    rcx,rbx
  402a43:	call   0x405230
  402a48:	test   eax,eax
  402a4a:	js     0x403924
  402a50:	cmp    DWORD PTR [rip+0x19c09],0x0        # 0x41c660
  402a57:	je     0x402a70
  402a59:	cmp    DWORD PTR [rip+0x19c3c],0x0        # 0x41c69c
  402a60:	je     0x4036b3
  402a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a70:	mov    rsi,QWORD PTR [rip+0x19b99]        # 0x41c610
  402a77:	test   rsi,rsi
  402a7a:	je     0x402c71
  402a80:	mov    rcx,rbx
  402a83:	call   0x405200
  402a88:	test   rax,rax
  402a8b:	mov    rdi,rax
  402a8e:	je     0x403aa0
  402a94:	mov    rcx,rsi
  402a97:	mov    rdx,rax
  402a9a:	mov    QWORD PTR [rax+0x8],rbx
  402a9e:	call   0x405228
  402aa3:	mov    rcx,rdi
  402aa6:	mov    rsi,rax
  402aa9:	call   0x405220
  402aae:	test   rsi,rsi
  402ab1:	je     0x403b66
  402ab7:	cmp    DWORD PTR [rsi],0x4
  402aba:	ja     0x4039db
  402ac0:	mov    edx,DWORD PTR [rsi]
  402ac2:	lea    rax,[rip+0x8c1b]        # 0x40b6e4
  402ac9:	movsxd rdx,DWORD PTR [rax+rdx*4]
  402acd:	add    rax,rdx
  402ad0:	jmp    rax
  402ad2:	cmp    DWORD PTR [rip+0x19bab],0x0        # 0x41c684
  402ad9:	je     0x402bc3
  402adf:	cmp    BYTE PTR [r13+0x0],0x2d
  402ae4:	je     0x4034a9
  402aea:	lea    rdx,[rip+0x88f9]        # 0x40b3ea
  402af1:	mov    rcx,r13
  402af4:	call   0x406f90
  402af9:	mov    rsi,rax
  402afc:	test   rsi,rsi
  402aff:	je     0x4035c6
  402b05:	lea    rdi,[rsp+0x50]
  402b0a:	mov    r9,rsi
  402b0d:	mov    r8d,0x4
  402b13:	mov    edx,0x1
  402b18:	xor    ebx,ebx
  402b1a:	mov    rcx,rdi
  402b1d:	call   0x406f70
  402b22:	test   eax,eax
  402b24:	jle    0x402ba7
  402b2a:	xor    edx,edx
  402b2c:	xor    ecx,ecx
  402b2e:	mov    QWORD PTR [rsp+0x20],r13
  402b33:	mov    r9d,eax
  402b36:	mov    r8,rdi
  402b39:	call   0x4055c0
  402b3e:	mov    edx,DWORD PTR [rip+0x783c]        # 0x40a380
  402b44:	mov    rcx,rax
  402b47:	mov    rbp,rax
  402b4a:	call   0x4055a8
  402b4f:	jmp    0x402b62
  402b51:	xor    r9d,r9d
  402b54:	mov    r8d,eax
  402b57:	mov    rdx,rdi
  402b5a:	mov    rcx,rbp
  402b5d:	call   0x405490
  402b62:	mov    r9,rsi
  402b65:	mov    r8d,0x400
  402b6b:	mov    edx,0x1
  402b70:	mov    rcx,rdi
  402b73:	call   0x406f70
  402b78:	test   eax,eax
  402b7a:	jg     0x402b51
  402b7c:	xor    r8d,r8d
  402b7f:	mov    rdx,rdi
  402b82:	mov    r9d,0x1
  402b88:	mov    rcx,rbp
  402b8b:	call   0x405490
  402b90:	mov    edi,DWORD PTR [rbp+0x18]
  402b93:	mov    rcx,rbp
  402b96:	mov    rbx,QWORD PTR [rbp+0x10]
  402b9a:	call   0x405568
  402b9f:	test   edi,edi
  402ba1:	je     0x403dc6
  402ba7:	call   QWORD PTR [rip+0x1c0f7]        # 0x41eca4
  402bad:	cmp    rax,rsi
  402bb0:	je     0x4029ec
  402bb6:	mov    rcx,rsi
  402bb9:	call   0x406f98
  402bbe:	jmp    0x4029ec
  402bc3:	cmp    DWORD PTR [rip+0x19ab6],0x0        # 0x41c680
  402bca:	jne    0x40343d
  402bd0:	cmp    DWORD PTR [rip+0x19ab5],0x0        # 0x41c68c
  402bd7:	je     0x403a56
  402bdd:	test   rsi,rsi
  402be0:	je     0x403fe2
  402be6:	mov    rax,QWORD PTR [rsi]
  402be9:	lea    rdi,[rip+0xfffffffffffffc80]        # 0x402870
  402bf0:	mov    QWORD PTR [rax+0xb0],rdi
  402bf7:	lea    rdi,[rip+0xfffffffffffffb62]        # 0x402760
  402bfe:	mov    QWORD PTR [rax+0xa8],rdi
  402c05:	lea    rax,[rip+0xfffffffffffffa44]        # 0x402650
  402c0c:	mov    QWORD PTR [rsi+0xa0],rax
  402c13:	lea    rax,[rip+0xfffffffffffff926]        # 0x402540
  402c1a:	mov    QWORD PTR [rsi+0xa8],rax
  402c21:	mov    r9d,DWORD PTR [rip+0x7758]        # 0x40a380
  402c28:	xor    r8d,r8d
  402c2b:	mov    rdx,r13
  402c2e:	mov    rcx,rsi
  402c31:	call   0x4055b8
  402c36:	mov    rbx,rax
  402c39:	jmp    0x4029ec
  402c3e:	call   QWORD PTR [rip+0x1c060]        # 0x41eca4
  402c44:	lea    rcx,[rip+0x8825]        # 0x40b470
  402c4b:	lea    r9,[rax+0x60]
  402c4f:	mov    r8d,0x1e
  402c55:	mov    edx,0x1
  402c5a:	call   0x406f58
  402c5f:	mov    DWORD PTR [rip+0x199fb],0xa        # 0x41c664
  402c69:	mov    rcx,rsi
  402c6c:	call   0x405218
  402c71:	mov    eax,DWORD PTR [rip+0x19a9d]        # 0x41c714
  402c77:	mov    r12,rbx
  402c7a:	test   eax,eax
  402c7c:	je     0x402cbd
  402c7e:	cmp    DWORD PTR [rip+0x199db],0x0        # 0x41c660
  402c85:	jne    0x40382d
  402c8b:	mov    edx,0x1
  402c90:	mov    rcx,rbx
  402c93:	call   0x4055c8
  402c98:	cmp    DWORD PTR [rip+0x199c1],0x0        # 0x41c660
  402c9f:	mov    r12,rax
  402ca2:	jne    0x4037f0
  402ca8:	mov    rcx,rbx
  402cab:	call   0x405580
  402cb0:	cmp    DWORD PTR [rip+0x199a9],0x0        # 0x41c660
  402cb7:	jne    0x4037df
  402cbd:	mov    r14d,DWORD PTR [rip+0x199d4]        # 0x41c698
  402cc4:	test   r14d,r14d
  402cc7:	je     0x403131
  402ccd:	cmp    DWORD PTR [rip+0x199c0],0x0        # 0x41c694
  402cd4:	jne    0x403131
  402cda:	mov    rax,QWORD PTR [r12+0x18]
  402cdf:	test   rax,rax
  402ce2:	je     0x402d00
  402ce4:	mov    rcx,QWORD PTR [rax+0x20]
  402ce8:	test   rcx,rcx
  402ceb:	jne    0x40396c
  402cf1:	mov    rax,QWORD PTR [rax+0x30]
  402cf5:	test   rax,rax
  402cf8:	jne    0x402ce4
  402cfa:	nop    WORD PTR [rax+rax*1+0x0]
  402d00:	mov    esi,DWORD PTR [rip+0x199fa]        # 0x41c700
  402d06:	test   esi,esi
  402d08:	jne    0x402e45
  402d0e:	cmp    DWORD PTR [rip+0x1994b],0x0        # 0x41c660
  402d15:	je     0x402d24
  402d17:	cmp    DWORD PTR [rip+0x1997e],0x0        # 0x41c69c
  402d1e:	je     0x4036a0
  402d24:	cmp    DWORD PTR [rip+0x19969],0x0        # 0x41c694
  402d2b:	je     0x402d8b
  402d2d:	cmp    DWORD PTR [rip+0x1995c],0x0        # 0x41c690
  402d34:	jne    0x402d8b
  402d36:	cmp    DWORD PTR [rip+0x199ab],0x0        # 0x41c6e8
  402d3d:	je     0x403b96
  402d43:	mov    rcx,QWORD PTR [rip+0x199a6]        # 0x41c6f0
  402d4a:	lea    rax,[rip+0x868a]        # 0x40b3db
  402d51:	mov    rdx,r12
  402d54:	test   rcx,rcx
  402d57:	cmove  rcx,rax
  402d5b:	call   0x405600
  402d60:	cmp    DWORD PTR [rip+0x198f9],0x0        # 0x41c660
  402d67:	je     0x402e45
  402d6d:	cmp    DWORD PTR [rip+0x19928],0x0        # 0x41c69c
  402d74:	jne    0x40364e
  402d7a:	lea    rcx,[rip+0x8879]        # 0x40b5fa
  402d81:	call   0x401c50
  402d86:	jmp    0x403634
  402d8b:	cmp    DWORD PTR [rip+0x198ba],0x0        # 0x41c64c
  402d92:	jne    0x403946
  402d98:	cmp    DWORD PTR [rip+0x198a9],0x0        # 0x41c648
  402d9f:	jne    0x4035d5
  402da5:	cmp    DWORD PTR [rip+0x19898],0x0        # 0x41c644
  402dac:	jne    0x403d17
  402db2:	cmp    DWORD PTR [rip+0x1992f],0x0        # 0x41c6e8
  402db9:	jne    0x403ad0
  402dbf:	mov    eax,DWORD PTR [rip+0x19933]        # 0x41c6f8
  402dc5:	cmp    eax,0x1
  402dc8:	je     0x403cb0
  402dce:	cmp    eax,0x2
  402dd1:	mov    r8d,0x80
  402dd7:	mov    eax,0x0
  402ddc:	cmovne r8d,eax
  402de0:	mov    eax,r8d
  402de3:	mov    rcx,QWORD PTR [rip+0x19906]        # 0x41c6f0
  402dea:	mov    rdx,QWORD PTR [rip+0x19887]        # 0x41c678
  402df1:	or     eax,0x20
  402df4:	cmp    DWORD PTR [rip+0x19895],0x0        # 0x41c690
  402dfb:	cmovne r8d,eax
  402dff:	test   rcx,rcx
  402e02:	je     0x403fba
  402e08:	call   0x4053a0
  402e0d:	mov    rbx,rax
  402e10:	test   rbx,rbx
  402e13:	je     0x403f45
  402e19:	mov    rdx,r12
  402e1c:	mov    rcx,rbx
  402e1f:	call   0x4053b8
  402e24:	test   eax,eax
  402e26:	js     0x403f7d
  402e2c:	mov    rcx,rbx
  402e2f:	call   0x4053c0
  402e34:	jmp    0x403634
  402e39:	lea    rcx,[rip+0x87ba]        # 0x40b5fa
  402e40:	call   0x401c50
  402e45:	mov    rdx,QWORD PTR [rip+0x1988c]        # 0x41c6d8
  402e4c:	test   rdx,rdx
  402e4f:	je     0x40365c
  402e55:	mov    eax,DWORD PTR [rip+0x19805]        # 0x41c660
  402e5b:	test   eax,eax
  402e5d:	je     0x402e7c
  402e5f:	cmp    DWORD PTR [rip+0x19836],0x0        # 0x41c69c
  402e66:	je     0x403840
  402e6c:	mov    rdx,QWORD PTR [rip+0x19865]        # 0x41c6d8
  402e73:	test   rdx,rdx
  402e76:	je     0x403677
  402e7c:	xor    ecx,ecx
  402e7e:	call   0x405488
  402e83:	mov    rsi,rax
  402e86:	mov    ebx,DWORD PTR [rip+0x197d4]        # 0x41c660
  402e8c:	test   ebx,ebx
  402e8e:	je     0x402e9d
  402e90:	cmp    DWORD PTR [rip+0x19805],0x0        # 0x41c69c
  402e97:	je     0x403853
  402e9d:	test   rsi,rsi
  402ea0:	je     0x403352
  402ea6:	call   0x4054a8
  402eab:	test   rax,rax
  402eae:	mov    rbx,rax
  402eb1:	je     0x404152
  402eb7:	call   QWORD PTR [rip+0x1bde7]        # 0x41eca4
  402ebd:	add    rax,0x60
  402ec1:	cmp    DWORD PTR [rip+0x19798],0x0        # 0x41c660
  402ec8:	mov    QWORD PTR [rbx],rax
  402ecb:	mov    rax,QWORD PTR [rip+0xa76e]        # 0x40d640
  402ed2:	mov    QWORD PTR [rbx+0x8],rax
  402ed6:	mov    QWORD PTR [rbx+0x10],rax
  402eda:	je     0x402ee9
  402edc:	cmp    DWORD PTR [rip+0x197b9],0x0        # 0x41c69c
  402ee3:	je     0x4039c8
  402ee9:	mov    r8,rsi
  402eec:	mov    rdx,r12
  402eef:	mov    rcx,rbx
  402ef2:	call   0x405238
  402ef7:	test   eax,eax
  402ef9:	jne    0x402f32
  402efb:	mov    r9,QWORD PTR [rip+0x197d6]        # 0x41c6d8
  402f02:	test   r9,r9
  402f05:	je     0x403d40
  402f0b:	mov    rax,QWORD PTR [rip+0x1b932]        # 0x41e844
  402f12:	mov    r8,r13
  402f15:	lea    rdx,[rip+0x8774]        # 0x40b690
  402f1c:	mov    rcx,QWORD PTR [rax]
  402f1f:	mov    rax,QWORD PTR [rip+0x1b916]        # 0x41e83c
  402f26:	call   QWORD PTR [rax]
  402f28:	mov    DWORD PTR [rip+0x19732],0x3        # 0x41c664
  402f32:	cmp    DWORD PTR [rip+0x19727],0x0        # 0x41c660
  402f39:	je     0x402f48
  402f3b:	cmp    DWORD PTR [rip+0x1975a],0x0        # 0x41c69c
  402f42:	je     0x4039b7
  402f48:	mov    rcx,rbx
  402f4b:	call   0x405540
  402f50:	mov    rcx,rsi
  402f53:	call   0x405578
  402f58:	cmp    QWORD PTR [rip+0x19740],0x0        # 0x41c6a0
  402f60:	je     0x4030f4
  402f66:	mov    r11d,DWORD PTR [rip+0x196f3]        # 0x41c660
  402f6d:	test   r11d,r11d
  402f70:	je     0x402f7f
  402f72:	cmp    DWORD PTR [rip+0x19723],0x0        # 0x41c69c
  402f79:	je     0x403933
  402f7f:	cmp    DWORD PTR [rip+0x19796],0x1        # 0x41c71c
  402f86:	mov    r10d,DWORD PTR [rip+0x19773]        # 0x41c700
  402f8d:	mov    rcx,QWORD PTR [rip+0x1970c]        # 0x41c6a0
  402f94:	sbb    edx,edx
  402f96:	and    edx,0xfffffffe
  402f99:	add    edx,0x4
  402f9c:	mov    eax,edx
  402f9e:	or     eax,0x1
  402fa1:	test   r10d,r10d
  402fa4:	cmovne edx,eax
  402fa7:	call   0x405318
  402fac:	mov    rdx,r12
  402faf:	mov    rcx,rax
  402fb2:	mov    rbx,rax
  402fb5:	call   0x405308
  402fba:	cmp    eax,0x0
  402fbd:	mov    rsi,QWORD PTR [rip+0x1bce0]        # 0x41eca4
  402fc4:	je     0x4033f6
  402fca:	jle    0x4037a8
  402fd0:	call   rsi
  402fd2:	lea    rdx,[rip+0x82d6]        # 0x40b2af
  402fd9:	lea    rcx,[rax+0x60]
  402fdd:	mov    r8,r13
  402fe0:	call   0x406f88
  402fe5:	mov    DWORD PTR [rip+0x19675],0x3        # 0x41c664
  402fef:	mov    rcx,rbx
  402ff2:	call   0x405328
  402ff7:	mov    r9d,DWORD PTR [rip+0x19662]        # 0x41c660
  402ffe:	test   r9d,r9d
  403001:	je     0x4032bc
  403007:	cmp    DWORD PTR [rip+0x1968e],0x0        # 0x41c69c
  40300e:	je     0x4030e8
  403014:	cmp    QWORD PTR [rip+0x196a4],0x0        # 0x41c6c0
  40301c:	je     0x403d4c
  403022:	mov    rcx,QWORD PTR [rip+0x19697]        # 0x41c6c0
  403029:	call   0x4053f0
  40302e:	mov    rbx,rax
  403031:	call   rsi
  403033:	lea    r8,[rip+0x3f4e]        # 0x406f88
  40303a:	lea    r9,[rax+0x60]
  40303e:	mov    rcx,rbx
  403041:	mov    rdx,r8
  403044:	call   0x4053d8
  403049:	mov    rdx,r12
  40304c:	mov    rcx,rbx
  40304f:	call   0x4053d0
  403054:	cmp    eax,0x0
  403057:	je     0x403410
  40305d:	jle    0x403784
  403063:	call   rsi
  403065:	lea    rdx,[rip+0x8243]        # 0x40b2af
  40306c:	lea    rcx,[rax+0x60]
  403070:	mov    r8,r13
  403073:	call   0x406f88
  403078:	mov    DWORD PTR [rip+0x195e2],0x3        # 0x41c664
  403082:	mov    rcx,rbx
  403085:	call   0x405400
  40308a:	mov    ecx,DWORD PTR [rip+0x195d0]        # 0x41c660
  403090:	test   ecx,ecx
  403092:	je     0x4030ae
  403094:	cmp    DWORD PTR [rip+0x19601],0x0        # 0x41c69c
  40309b:	je     0x4036c4
  4030a1:	cmp    DWORD PTR [rip+0x195f4],0x0        # 0x41c69c
  4030a8:	je     0x4037cc
  4030ae:	mov    rcx,r12
  4030b1:	call   0x405580
  4030b6:	mov    edx,DWORD PTR [rip+0x195a4]        # 0x41c660
  4030bc:	test   edx,edx
  4030be:	je     0x4030d6
  4030c0:	cmp    DWORD PTR [rip+0x195d5],0x0        # 0x41c69c
  4030c7:	jne    0x4030d6
  4030c9:	lea    rcx,[rip+0x860c]        # 0x40b6dc
  4030d0:	call   0x401c50
  4030d5:	nop
  4030d6:	add    rsp,0x1050
  4030dd:	pop    rbx
  4030de:	pop    rsi
  4030df:	pop    rdi
  4030e0:	pop    rbp
  4030e1:	pop    r12
  4030e3:	pop    r13
  4030e5:	pop    r14
  4030e7:	ret    
  4030e8:	lea    rcx,[rip+0x85e2]        # 0x40b6d1
  4030ef:	call   0x401c50
  4030f4:	cmp    QWORD PTR [rip+0x195c4],0x0        # 0x41c6c0
  4030fc:	je     0x4033b4
  403102:	mov    r8d,DWORD PTR [rip+0x19557]        # 0x41c660
  403109:	test   r8d,r8d
  40310c:	je     0x403125
  40310e:	cmp    DWORD PTR [rip+0x19587],0x0        # 0x41c69c
  403115:	jne    0x403125
  403117:	lea    rcx,[rip+0x192ba]        # 0x41c3d8
  40311e:	xor    edx,edx
  403120:	call   0x406c30
  403125:	mov    rsi,QWORD PTR [rip+0x1bb78]        # 0x41eca4
  40312c:	jmp    0x403022
  403131:	mov    ebp,DWORD PTR [rip+0x19505]        # 0x41c63c
  403137:	test   ebp,ebp
  403139:	je     0x402d00
  40313f:	mov    rcx,r12
  403142:	call   0x405598
  403147:	test   rax,rax
  40314a:	je     0x403f54
  403150:	mov    rax,QWORD PTR [rax+0x60]
  403154:	test   rax,rax
  403157:	je     0x403e71
  40315d:	lea    rdx,[rsp+0x50]
  403162:	xor    ecx,ecx
  403164:	jmp    0x403175
  403166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403170:	test   rax,rax
  403173:	je     0x403194
  403175:	mov    r8,QWORD PTR [rax+0x10]
  403179:	add    ecx,0x2
  40317c:	add    rdx,0x10
  403180:	mov    QWORD PTR [rdx-0x10],r8
  403184:	mov    r8,QWORD PTR [rax+0x18]
  403188:	mov    QWORD PTR [rdx-0x8],r8
  40318c:	cmp    ecx,0x13
  40318f:	mov    rax,QWORD PTR [rax]
  403192:	jle    0x403170
  403194:	movsxd rax,ecx
  403197:	add    ecx,0x1
  40319a:	movsxd rcx,ecx
  40319d:	mov    QWORD PTR [rsp+rax*8+0x50],0x0
  4031a6:	mov    QWORD PTR [rsp+rcx*8+0x50],0x0
  4031af:	mov    rcx,QWORD PTR [rip+0x19472]        # 0x41c628
  4031b6:	test   rcx,rcx
  4031b9:	je     0x403a41
  4031bf:	mov    rdx,QWORD PTR [r12+0x98]
  4031c7:	lea    r9,[rsp+0x50]
  4031cc:	xor    r8d,r8d
  4031cf:	call   0x405458
  4031d4:	test   rax,rax
  4031d7:	mov    QWORD PTR [rip+0x19442],rax        # 0x41c620
  4031de:	je     0x403a0b
  4031e4:	mov    rcx,rax
  4031e7:	call   0x405468
  4031ec:	test   rax,rax
  4031ef:	mov    QWORD PTR [rip+0x19422],rax        # 0x41c618
  4031f6:	je     0x40320d
  4031f8:	xor    r8d,r8d
  4031fb:	xor    edx,edx
  4031fd:	mov    rcx,rax
  403200:	call   0x4052d8
  403205:	test   eax,eax
  403207:	js     0x403f08
  40320d:	mov    rcx,r12
  403210:	call   0x405428
  403215:	test   rax,rax
  403218:	mov    rbx,rax
  40321b:	je     0x403ed8
  403221:	cmp    DWORD PTR [rip+0x19438],0x0        # 0x41c660
  403228:	je     0x40325c
  40322a:	cmp    DWORD PTR [rip+0x1946b],0x0        # 0x41c69c
  403231:	jne    0x40325c
  403233:	jmp    0x403dd5
  403238:	nop    DWORD PTR [rax+rax*1+0x0]
  403240:	mov    edi,DWORD PTR [rip+0x194d6]        # 0x41c71c
  403246:	test   edi,edi
  403248:	jne    0x403254
  40324a:	cmp    QWORD PTR [rip+0x193ce],0x0        # 0x41c620
  403252:	je     0x40325c
  403254:	mov    rcx,rbx
  403257:	call   0x401cf0
  40325c:	mov    rcx,rbx
  40325f:	call   0x405270
  403264:	cmp    eax,0x1
  403267:	je     0x403240
  403269:	cmp    DWORD PTR [rip+0x193f0],0x0        # 0x41c660
  403270:	je     0x40327f
  403272:	cmp    DWORD PTR [rip+0x19423],0x0        # 0x41c69c
  403279:	je     0x403de8
  40327f:	mov    rcx,rbx
  403282:	mov    DWORD PTR [rsp+0x4c],eax
  403286:	call   0x405548
  40328b:	mov    eax,DWORD PTR [rsp+0x4c]
  40328f:	test   eax,eax
  403291:	jne    0x403bd8
  403297:	mov    rcx,QWORD PTR [rip+0x1937a]        # 0x41c618
  40329e:	test   rcx,rcx
  4032a1:	je     0x402d00
  4032a7:	call   0x405550
  4032ac:	mov    QWORD PTR [rip+0x19361],0x0        # 0x41c618
  4032b7:	jmp    0x402d00
  4032bc:	cmp    QWORD PTR [rip+0x193fc],0x0        # 0x41c6c0
  4032c4:	jne    0x403022
  4032ca:	cmp    QWORD PTR [rip+0x193de],0x0        # 0x41c6b0
  4032d2:	je     0x4036d0
  4032d8:	mov    rcx,QWORD PTR [rip+0x193d1]        # 0x41c6b0
  4032df:	call   0x405370
  4032e4:	mov    rbx,rax
  4032e7:	call   rsi
  4032e9:	lea    r8,[rip+0x3c98]        # 0x406f88
  4032f0:	lea    r9,[rax+0x60]
  4032f4:	mov    rcx,rbx
  4032f7:	mov    rdx,r8
  4032fa:	call   0x405358
  4032ff:	mov    rdx,r12
  403302:	mov    rcx,rbx
  403305:	call   0x405350
  40330a:	cmp    eax,0x0
  40330d:	je     0x403d9b
  403313:	jle    0x403e27
  403319:	call   rsi
  40331b:	lea    rdx,[rip+0x7f8d]        # 0x40b2af
  403322:	lea    rcx,[rax+0x60]
  403326:	mov    r8,r13
  403329:	call   0x406f88
  40332e:	mov    DWORD PTR [rip+0x1932c],0x3        # 0x41c664
  403338:	mov    rcx,rbx
  40333b:	call   0x405380
  403340:	cmp    DWORD PTR [rip+0x19319],0x0        # 0x41c660
  403347:	je     0x4030ae
  40334d:	jmp    0x403094
  403352:	mov    r8,QWORD PTR [rip+0x1937f]        # 0x41c6d8
  403359:	test   r8,r8
  40335c:	je     0x403d5f
  403362:	mov    rax,QWORD PTR [rip+0x1b4db]        # 0x41e844
  403369:	lea    rdx,[rip+0x82da]        # 0x40b64a
  403370:	mov    rcx,QWORD PTR [rax]
  403373:	mov    rax,QWORD PTR [rip+0x1b4c2]        # 0x41e83c
  40337a:	call   QWORD PTR [rax]
  40337c:	mov    DWORD PTR [rip+0x192de],0x2        # 0x41c664
  403386:	jmp    0x402f58
  40338b:	mov    rcx,rbx
  40338e:	call   0x405530
  403393:	test   rax,rax
  403396:	mov    rsi,rax
  403399:	je     0x402a1a
  40339f:	mov    rcx,rax
  4033a2:	call   0x405250
  4033a7:	mov    rcx,rsi
  4033aa:	call   0x405578
  4033af:	jmp    0x402a1a
  4033b4:	cmp    QWORD PTR [rip+0x192f4],0x0        # 0x41c6b0
  4033bc:	je     0x4036d0
  4033c2:	cmp    DWORD PTR [rip+0x19297],0x0        # 0x41c660
  4033c9:	mov    rsi,QWORD PTR [rip+0x1b8d4]        # 0x41eca4
  4033d0:	je     0x4032d8
  4033d6:	cmp    DWORD PTR [rip+0x192bf],0x0        # 0x41c69c
  4033dd:	jne    0x4032d8
  4033e3:	lea    rcx,[rip+0x18fee]        # 0x41c3d8
  4033ea:	xor    edx,edx
  4033ec:	call   0x406c30
  4033f1:	jmp    0x4032d8
  4033f6:	call   rsi
  4033f8:	lea    rdx,[rip+0x7ec6]        # 0x40b2c5
  4033ff:	lea    rcx,[rax+0x60]
  403403:	mov    r8,r13
  403406:	call   0x406f88
  40340b:	jmp    0x402fef
  403410:	call   rsi
  403412:	lea    rdx,[rip+0x7eac]        # 0x40b2c5
  403419:	lea    rcx,[rax+0x60]
  40341d:	mov    r8,r13
  403420:	call   0x406f88
  403425:	jmp    0x403082
  40342a:	lea    rcx,[rip+0x18fa7]        # 0x41c3d8
  403431:	xor    edx,edx
  403433:	call   0x406c30
  403438:	jmp    0x4029b4
  40343d:	cmp    BYTE PTR [r13+0x0],0x2d
  403442:	jne    0x40344f
  403444:	cmp    BYTE PTR [r13+0x1],0x0
  403449:	je     0x403c95
  40344f:	lea    rdx,[rip+0x7f94]        # 0x40b3ea
  403456:	mov    rcx,r13
  403459:	call   0x406f90
  40345e:	test   rax,rax
  403461:	je     0x4035c6
  403467:	test   rsi,rsi
  40346a:	mov    edx,DWORD PTR [rip+0x6f10]        # 0x40a380
  403470:	je     0x403e78
  403476:	mov    DWORD PTR [rsp+0x30],edx
  40347a:	lea    r8,[rip+0xffffffffffffebbf]        # 0x402040
  403481:	lea    rdx,[rip+0xffffffffffffeb98]        # 0x402020
  403488:	mov    QWORD PTR [rsp+0x28],0x0
  403491:	mov    QWORD PTR [rsp+0x20],r13
  403496:	mov    r9,rax
  403499:	mov    rcx,rsi
  40349c:	call   0x4055b0
  4034a1:	mov    rbx,rax
  4034a4:	jmp    0x4029ec
  4034a9:	cmp    BYTE PTR [r13+0x1],0x0
  4034ae:	jne    0x402aea
  4034b4:	call   QWORD PTR [rip+0x1b7ea]        # 0x41eca4
  4034ba:	mov    rsi,rax
  4034bd:	jmp    0x402afc
  4034c2:	movsd  xmm0,QWORD PTR [rsi+0x18]
  4034c7:	call   0x405210
  4034cc:	cmp    eax,0xffffffff
  4034cf:	je     0x403db5
  4034d5:	sub    eax,0x1
  4034d8:	je     0x403c84
  4034de:	movsd  xmm0,QWORD PTR [rsi+0x18]
  4034e3:	call   0x405208
  4034e8:	test   eax,eax
  4034ea:	je     0x403ea6
  4034f0:	lea    rcx,[rip+0x7f6f]        # 0x40b466
  4034f7:	call   0x406f38
  4034fc:	jmp    0x402c69
  403501:	cmp    DWORD PTR [rsi+0x10],0x0
  403505:	je     0x403c4d
  40350b:	lea    rcx,[rip+0x7f36]        # 0x40b448
  403512:	call   0x406f38
  403517:	jmp    0x402c69
  40351c:	mov    rax,QWORD PTR [rsi+0x8]
  403520:	test   rax,rax
  403523:	je     0x403d6b
  403529:	cmp    DWORD PTR [rax],0x0
  40352c:	jle    0x403d6b
  403532:	xor    r8d,r8d
  403535:	xor    edx,edx
  403537:	mov    ecx,0x1
  40353c:	call   0x4053a8
  403541:	xor    edi,edi
  403543:	test   rax,rax
  403546:	mov    rbp,rax
  403549:	jne    0x40358f
  40354b:	call   QWORD PTR [rip+0x1b753]        # 0x41eca4
  403551:	lea    rcx,[rip+0x7ea9]        # 0x40b401
  403558:	lea    r9,[rax+0x60]
  40355c:	mov    r8d,0x18
  403562:	mov    edx,0x1
  403567:	call   0x406f58
  40356c:	mov    DWORD PTR [rip+0x190ee],0x9        # 0x41c664
  403576:	jmp    0x402c69
  40357b:	mov    rdx,QWORD PTR [rdx+0x8]
  40357f:	mov    rcx,rbp
  403582:	mov    rdx,QWORD PTR [rdx+rdi*8]
  403586:	add    rdi,0x1
  40358a:	call   0x405398
  40358f:	mov    rdx,QWORD PTR [rsi+0x8]
  403593:	cmp    DWORD PTR [rdx],edi
  403595:	jg     0x40357b
  403597:	mov    rcx,rbp
  40359a:	call   0x4053c0
  40359f:	jmp    0x402c69
  4035a4:	mov    rdx,QWORD PTR [rsi+0x20]
  4035a8:	lea    rcx,[rip+0x7d9b]        # 0x40b34a
  4035af:	call   0x406f38
  4035b4:	jmp    0x402c69
  4035b9:	cmp    DWORD PTR [rip+0x1909c],0x0        # 0x41c65c
  4035c0:	jne    0x403c08
  4035c6:	mov    DWORD PTR [rip+0x19094],0x1        # 0x41c664
  4035d0:	jmp    0x4030d6
  4035d5:	lea    rax,[rsp+0x50]
  4035da:	mov    QWORD PTR [rsp+0x50],0x0
  4035e3:	mov    DWORD PTR [rsp+0x20],0x1
  4035eb:	xor    r9d,r9d
  4035ee:	mov    r8d,0x2
  4035f4:	mov    QWORD PTR [rsp+0x28],rax
  4035f9:	xor    edx,edx
  4035fb:	mov    rcx,r12
  4035fe:	call   0x4055e0
  403603:	test   eax,eax
  403605:	js     0x403af2
  40360b:	mov    rdx,QWORD PTR [rsp+0x50]
  403610:	mov    r8d,eax
  403613:	mov    ecx,0x1
  403618:	call   0x406ee0
  40361d:	add    eax,0x1
  403620:	je     0x403e01
  403626:	mov    rax,QWORD PTR [rip+0x1b1bf]        # 0x41e7ec
  40362d:	mov    rcx,QWORD PTR [rsp+0x50]
  403632:	call   QWORD PTR [rax]
  403634:	cmp    DWORD PTR [rip+0x19025],0x0        # 0x41c660
  40363b:	je     0x4036e2
  403641:	cmp    DWORD PTR [rip+0x19054],0x0        # 0x41c69c
  403648:	je     0x402e39
  40364e:	cmp    QWORD PTR [rip+0x19082],0x0        # 0x41c6d8
  403656:	jne    0x402e6c
  40365c:	cmp    QWORD PTR [rip+0x1906c],0x0        # 0x41c6d0
  403664:	je     0x4036fe
  40366a:	cmp    DWORD PTR [rip+0x18fef],0x0        # 0x41c660
  403671:	jne    0x402e5f
  403677:	mov    rcx,QWORD PTR [rip+0x19052]        # 0x41c6d0
  40367e:	xor    edx,edx
  403680:	call   0x405488
  403685:	mov    rsi,rax
  403688:	jmp    0x402e86
  40368d:	lea    rcx,[rip+0x18d44]        # 0x41c3d8
  403694:	xor    edx,edx
  403696:	call   0x406c30
  40369b:	jmp    0x402a3a
  4036a0:	lea    rcx,[rip+0x18d31]        # 0x41c3d8
  4036a7:	xor    edx,edx
  4036a9:	call   0x406c30
  4036ae:	jmp    0x402d24
  4036b3:	lea    rcx,[rip+0x7d33]        # 0x40b3ed
  4036ba:	call   0x401c50
  4036bf:	jmp    0x402a70
  4036c4:	lea    rcx,[rip+0x8006]        # 0x40b6d1
  4036cb:	call   0x401c50
  4036d0:	cmp    DWORD PTR [rip+0x18f89],0x0        # 0x41c660
  4036d7:	jne    0x4030a1
  4036dd:	jmp    0x4030ae
  4036e2:	cmp    QWORD PTR [rip+0x18fee],0x0        # 0x41c6d8
  4036ea:	jne    0x402e6c
  4036f0:	cmp    QWORD PTR [rip+0x18fd8],0x0        # 0x41c6d0
  4036f8:	jne    0x403677
  4036fe:	cmp    DWORD PTR [rip+0x18fdb],0x0        # 0x41c6e0
  403705:	je     0x402f58
  40370b:	call   0x4054a8
  403710:	test   rax,rax
  403713:	mov    rbx,rax
  403716:	je     0x404152
  40371c:	cmp    DWORD PTR [rip+0x18f3d],0x0        # 0x41c660
  403723:	je     0x403732
  403725:	cmp    DWORD PTR [rip+0x18f70],0x0        # 0x41c69c
  40372c:	je     0x40412e
  403732:	call   QWORD PTR [rip+0x1b56c]        # 0x41eca4
  403738:	add    rax,0x60
  40373c:	mov    rdx,r12
  40373f:	mov    rcx,rbx
  403742:	mov    QWORD PTR [rbx],rax
  403745:	mov    rax,QWORD PTR [rip+0x9ef4]        # 0x40d640
  40374c:	mov    QWORD PTR [rbx+0x8],rax
  403750:	mov    QWORD PTR [rbx+0x10],rax
  403754:	call   0x405240
  403759:	test   eax,eax
  40375b:	je     0x4040b5
  403761:	cmp    DWORD PTR [rip+0x18ef8],0x0        # 0x41c660
  403768:	je     0x403777
  40376a:	cmp    DWORD PTR [rip+0x18f2b],0x0        # 0x41c69c
  403771:	je     0x404141
  403777:	mov    rcx,rbx
  40377a:	call   0x405540
  40377f:	jmp    0x402f58
  403784:	call   rsi
  403786:	lea    rdx,[rip+0x7b7b]        # 0x40b308
  40378d:	lea    rcx,[rax+0x60]
  403791:	mov    r8,r13
  403794:	call   0x406f88
  403799:	mov    DWORD PTR [rip+0x18ec1],0x3        # 0x41c664
  4037a3:	jmp    0x403082
  4037a8:	call   rsi
  4037aa:	lea    rdx,[rip+0x7b57]        # 0x40b308
  4037b1:	lea    rcx,[rax+0x60]
  4037b5:	mov    r8,r13
  4037b8:	call   0x406f88
  4037bd:	mov    DWORD PTR [rip+0x18e9d],0x3        # 0x41c664
  4037c7:	jmp    0x402fef
  4037cc:	lea    rcx,[rip+0x18c05]        # 0x41c3d8
  4037d3:	xor    edx,edx
  4037d5:	call   0x406c30
  4037da:	jmp    0x4030ae
  4037df:	lea    rcx,[rip+0x7cd3]        # 0x40b4b9
  4037e6:	call   0x401c50
  4037eb:	jmp    0x402cbd
  4037f0:	lea    rcx,[rip+0x7cba]        # 0x40b4b1
  4037f7:	call   0x401c50
  4037fc:	cmp    DWORD PTR [rip+0x18e5d],0x0        # 0x41c660
  403803:	je     0x402ca8
  403809:	lea    rcx,[rip+0x18bc8]        # 0x41c3d8
  403810:	xor    edx,edx
  403812:	call   0x406c30
  403817:	jmp    0x402ca8
  40381c:	lea    rcx,[rip+0x7a65]        # 0x40b288
  403823:	call   0x401c50
  403828:	jmp    0x402a0c
  40382d:	lea    rcx,[rip+0x18ba4]        # 0x41c3d8
  403834:	xor    edx,edx
  403836:	call   0x406c30
  40383b:	jmp    0x402c8b
  403840:	lea    rcx,[rip+0x18b91]        # 0x41c3d8
  403847:	xor    edx,edx
  403849:	call   0x406c30
  40384e:	jmp    0x402e6c
  403853:	lea    rcx,[rip+0x7de4]        # 0x40b63e
  40385a:	call   0x401c50
  40385f:	jmp    0x402e9d
  403864:	lea    rdx,[rip+0x7b7f]        # 0x40b3ea
  40386b:	mov    rcx,r13
  40386e:	call   0x406f90
  403873:	test   rax,rax
  403876:	mov    rsi,rax
  403879:	je     0x4035c6
  40387f:	lea    rdi,[rsp+0x50]
  403884:	mov    r9,rax
  403887:	mov    r8d,0x4
  40388d:	mov    edx,0x1
  403892:	xor    ebx,ebx
  403894:	mov    rcx,rdi
  403897:	call   0x406f70
  40389c:	test   eax,eax
  40389e:	jle    0x402bb6
  4038a4:	xor    edx,edx
  4038a6:	xor    ecx,ecx
  4038a8:	mov    DWORD PTR [rsp+0x28],0x0
  4038b0:	mov    QWORD PTR [rsp+0x20],r13
  4038b5:	mov    r9d,eax
  4038b8:	mov    r8,rdi
  4038bb:	call   0x405628
  4038c0:	mov    edx,DWORD PTR [rip+0x6aba]        # 0x40a380
  4038c6:	mov    rcx,rax
  4038c9:	mov    rbp,rax
  4038cc:	call   0x4055a8
  4038d1:	jmp    0x4038e4
  4038d3:	xor    r9d,r9d
  4038d6:	mov    r8d,eax
  4038d9:	mov    rdx,rdi
  4038dc:	mov    rcx,rbp
  4038df:	call   0x405610
  4038e4:	movsxd r8,DWORD PTR [rip+0x6a99]        # 0x40a384
  4038eb:	mov    r9,rsi
  4038ee:	mov    edx,0x1
  4038f3:	mov    rcx,rdi
  4038f6:	call   0x406f70
  4038fb:	test   eax,eax
  4038fd:	jg     0x4038d3
  4038ff:	mov    rcx,rbp
  403902:	mov    r9d,0x1
  403908:	xor    r8d,r8d
  40390b:	mov    rdx,rdi
  40390e:	call   0x405610
  403913:	mov    rcx,rbp
  403916:	mov    rbx,QWORD PTR [rbp+0x10]
  40391a:	call   0x405618
  40391f:	jmp    0x402bb6
  403924:	mov    DWORD PTR [rip+0x18d36],0x1        # 0x41c664
  40392e:	jmp    0x402a50
  403933:	lea    rcx,[rip+0x18a9e]        # 0x41c3d8
  40393a:	xor    edx,edx
  40393c:	call   0x406c30
  403941:	jmp    0x402f7f
  403946:	lea    rax,[rsp+0x50]
  40394b:	mov    QWORD PTR [rsp+0x50],0x0
  403954:	mov    DWORD PTR [rsp+0x20],0x1
  40395c:	xor    r9d,r9d
  40395f:	xor    r8d,r8d
  403962:	mov    QWORD PTR [rsp+0x28],rax
  403967:	jmp    0x4035f9
  40396c:	lea    rdi,[rsp+0x50]
  403971:	xor    edx,edx
  403973:	mov    r9d,0x100
  403979:	mov    r8,rdi
  40397c:	call   0x405248
  403981:	test   eax,eax
  403983:	mov    ebp,eax
  403985:	js     0x403e4b
  40398b:	jne    0x403b22
  403991:	call   QWORD PTR [rip+0x1b30d]        # 0x41eca4
  403997:	lea    rcx,[rip+0x7b5a]        # 0x40b4f8
  40399e:	lea    r9,[rax+0x60]
  4039a2:	mov    r8d,0x26
  4039a8:	mov    edx,0x1
  4039ad:	call   0x406f58
  4039b2:	jmp    0x402d00
  4039b7:	lea    rcx,[rip+0x7cfc]        # 0x40b6ba
  4039be:	call   0x401c50
  4039c3:	jmp    0x402f48
  4039c8:	lea    rcx,[rip+0x18a09]        # 0x41c3d8
  4039cf:	xor    edx,edx
  4039d1:	call   0x406c30
  4039d6:	jmp    0x402ee9
  4039db:	call   QWORD PTR [rip+0x1b2c3]        # 0x41eca4
  4039e1:	lea    rcx,[rip+0x7aa8]        # 0x40b490
  4039e8:	lea    r9,[rax+0x60]
  4039ec:	mov    r8d,0x20
  4039f2:	mov    edx,0x1
  4039f7:	call   0x406f58
  4039fc:	mov    DWORD PTR [rip+0x18c5e],0xa        # 0x41c664
  403a06:	jmp    0x402c69
  403a0b:	mov    rax,QWORD PTR [rip+0x1ae32]        # 0x41e844
  403a12:	mov    r8,QWORD PTR [rip+0x18c0f]        # 0x41c628
  403a19:	lea    rdx,[rip+0x77d2]        # 0x40b1f2
  403a20:	mov    rcx,QWORD PTR [rax]
  403a23:	mov    rax,QWORD PTR [rip+0x1ae12]        # 0x41e83c
  403a2a:	call   QWORD PTR [rax]
  403a2c:	mov    DWORD PTR [rip+0x18c2e],0x7        # 0x41c664
  403a36:	mov    QWORD PTR [rip+0x18be7],0x0        # 0x41c628
  403a41:	mov    rax,QWORD PTR [rip+0x18bd8]        # 0x41c620
  403a48:	test   rax,rax
  403a4b:	je     0x40320d
  403a51:	jmp    0x4031e4
  403a56:	cmp    DWORD PTR [rip+0x18c87],0x0        # 0x41c6e4
  403a5d:	je     0x403c5e
  403a63:	test   rsi,rsi
  403a66:	je     0x404053
  403a6c:	mov    r9d,DWORD PTR [rip+0x690d]        # 0x40a380
  403a73:	xor    r8d,r8d
  403a76:	mov    rdx,r13
  403a79:	mov    rcx,rsi
  403a7c:	call   0x4055b8
  403a81:	cmp    DWORD PTR [rsi+0x90],0x0
  403a88:	mov    rbx,rax
  403a8b:	jne    0x4029ec
  403a91:	mov    DWORD PTR [rip+0x18bc9],0x4        # 0x41c664
  403a9b:	jmp    0x4029ec
  403aa0:	call   QWORD PTR [rip+0x1b1fe]        # 0x41eca4
  403aa6:	lea    rcx,[rip+0x7954]        # 0x40b401
  403aad:	lea    r9,[rax+0x60]
  403ab1:	mov    r8d,0x18
  403ab7:	mov    edx,0x1
  403abc:	call   0x406f58
  403ac1:	mov    DWORD PTR [rip+0x18b99],0x9        # 0x41c664
  403acb:	jmp    0x402c71
  403ad0:	mov    rcx,QWORD PTR [rip+0x18c19]        # 0x41c6f0
  403ad7:	lea    rax,[rip+0x78fd]        # 0x40b3db
  403ade:	mov    rdx,r12
  403ae1:	test   rcx,rcx
  403ae4:	cmove  rcx,rax
  403ae8:	call   0x4053b0
  403aed:	jmp    0x403634
  403af2:	call   QWORD PTR [rip+0x1b1ac]        # 0x41eca4
  403af8:	lea    rcx,[rip+0x7b14]        # 0x40b613
  403aff:	lea    r9,[rax+0x60]
  403b03:	mov    r8d,0x17
  403b09:	mov    edx,0x1
  403b0e:	call   0x406f58
  403b13:	mov    DWORD PTR [rip+0x18b47],0x6        # 0x41c664
  403b1d:	jmp    0x403634
  403b22:	mov    rsi,QWORD PTR [rip+0x1b17b]        # 0x41eca4
  403b29:	xor    ebx,ebx
  403b2b:	call   rsi
  403b2d:	lea    rdx,[rip+0x79ec]        # 0x40b520
  403b34:	lea    rcx,[rax+0x60]
  403b38:	mov    r8d,ebp
  403b3b:	call   0x406f88
  403b40:	mov    r14,QWORD PTR [rdi+rbx*8]
  403b44:	add    rbx,0x1
  403b48:	call   rsi
  403b4a:	lea    rdx,[rip+0x79fd]        # 0x40b54e
  403b51:	lea    rcx,[rax+0x60]
  403b55:	mov    r8,r14
  403b58:	call   0x406f88
  403b5d:	cmp    ebp,ebx
  403b5f:	jg     0x403b40
  403b61:	jmp    0x402d00
  403b66:	call   QWORD PTR [rip+0x1b138]        # 0x41eca4
  403b6c:	lea    rcx,[rip+0x78a7]        # 0x40b41a
  403b73:	lea    r9,[rax+0x60]
  403b77:	mov    r8d,0x19
  403b7d:	mov    edx,0x1
  403b82:	call   0x406f58
  403b87:	mov    DWORD PTR [rip+0x18ad3],0xa        # 0x41c664
  403b91:	jmp    0x402c71
  403b96:	mov    r8,QWORD PTR [rip+0x18adb]        # 0x41c678
  403b9d:	mov    rcx,QWORD PTR [rip+0x18b4c]        # 0x41c6f0
  403ba4:	test   r8,r8
  403ba7:	je     0x403cbb
  403bad:	lea    rax,[rip+0x7827]        # 0x40b3db
  403bb4:	test   rcx,rcx
  403bb7:	cmove  rcx,rax
  403bbb:	cmp    DWORD PTR [rip+0x18b36],0x1        # 0x41c6f8
  403bc2:	je     0x403ec5
  403bc8:	xor    r9d,r9d
  403bcb:	mov    rdx,r12
  403bce:	call   0x4055f8
  403bd3:	jmp    0x402d60
  403bd8:	call   QWORD PTR [rip+0x1b0c6]        # 0x41eca4
  403bde:	lea    rcx,[rip+0x79b3]        # 0x40b598
  403be5:	lea    r9,[rax+0x60]
  403be9:	mov    r8d,0x1f
  403bef:	mov    edx,0x1
  403bf4:	call   0x406f58
  403bf9:	mov    DWORD PTR [rip+0x18a61],0x1        # 0x41c664
  403c03:	jmp    0x403297
  403c08:	lea    rcx,[rip+0x77ce]        # 0x40b3dd
  403c0f:	call   0x4054c8
  403c14:	lea    r8,[rip+0x77c6]        # 0x40b3e1
  403c1b:	xor    r9d,r9d
  403c1e:	xor    edx,edx
  403c20:	mov    rcx,rax
  403c23:	mov    rbx,rax
  403c26:	call   0x4054c0
  403c2b:	lea    rdx,[rip+0x77b4]        # 0x40b3e6
  403c32:	mov    rsi,rax
  403c35:	mov    rcx,rax
  403c38:	call   0x405498
  403c3d:	mov    rdx,rsi
  403c40:	mov    rcx,rbx
  403c43:	call   0x405590
  403c48:	jmp    0x4029ec
  403c4d:	lea    rcx,[rip+0x77f9]        # 0x40b44d
  403c54:	call   0x406f38
  403c59:	jmp    0x402c69
  403c5e:	test   rsi,rsi
  403c61:	jne    0x402c21
  403c67:	cmp    DWORD PTR [rip+0x189c2],0x0        # 0x41c630
  403c6e:	je     0x403fc9
  403c74:	mov    rcx,r13
  403c77:	call   0x405478
  403c7c:	mov    rbx,rax
  403c7f:	jmp    0x4029ec
  403c84:	lea    rcx,[rip+0x77c8]        # 0x40b453
  403c8b:	call   0x406f38
  403c90:	jmp    0x402c69
  403c95:	mov    r9d,DWORD PTR [rip+0x66e4]        # 0x40a380
  403c9c:	xor    r8d,r8d
  403c9f:	xor    edx,edx
  403ca1:	xor    ecx,ecx
  403ca3:	call   0x405448
  403ca8:	mov    rbx,rax
  403cab:	jmp    0x4029ec
  403cb0:	mov    r8d,0x1
  403cb6:	jmp    0x402de0
  403cbb:	cmp    DWORD PTR [rip+0x18a36],0x1        # 0x41c6f8
  403cc2:	je     0x404091
  403cc8:	test   rcx,rcx
  403ccb:	je     0x40411f
  403cd1:	lea    rdx,[rip+0x790c]        # 0x40b5e4
  403cd8:	call   0x406f90
  403cdd:	mov    rbx,rax
  403ce0:	test   rbx,rbx
  403ce3:	je     0x4040f0
  403ce9:	mov    rdx,r12
  403cec:	mov    rcx,rbx
  403cef:	call   0x405620
  403cf4:	test   eax,eax
  403cf6:	js     0x4040e1
  403cfc:	cmp    QWORD PTR [rip+0x189ec],0x0        # 0x41c6f0
  403d04:	je     0x402d60
  403d0a:	mov    rcx,rbx
  403d0d:	call   0x406f98
  403d12:	jmp    0x402d60
  403d17:	lea    rax,[rsp+0x50]
  403d1c:	mov    QWORD PTR [rsp+0x50],0x0
  403d25:	mov    DWORD PTR [rsp+0x20],0x1
  403d2d:	xor    r9d,r9d
  403d30:	mov    r8d,0x1
  403d36:	mov    QWORD PTR [rsp+0x28],rax
  403d3b:	jmp    0x4035f9
  403d40:	mov    r9,QWORD PTR [rip+0x18989]        # 0x41c6d0
  403d47:	jmp    0x402f0b
  403d4c:	cmp    QWORD PTR [rip+0x1895c],0x0        # 0x41c6b0
  403d54:	jne    0x4033d6
  403d5a:	jmp    0x4036d0
  403d5f:	mov    r8,QWORD PTR [rip+0x1896a]        # 0x41c6d0
  403d66:	jmp    0x403362
  403d6b:	call   QWORD PTR [rip+0x1af33]        # 0x41eca4
  403d71:	lea    rcx,[rip+0x76bc]        # 0x40b434
  403d78:	lea    r9,[rax+0x60]
  403d7c:	mov    r8d,0x13
  403d82:	mov    edx,0x1
  403d87:	call   0x406f58
  403d8c:	mov    DWORD PTR [rip+0x188ce],0xa        # 0x41c664
  403d96:	jmp    0x402c69
  403d9b:	call   rsi
  403d9d:	lea    rdx,[rip+0x7521]        # 0x40b2c5
  403da4:	lea    rcx,[rax+0x60]
  403da8:	mov    r8,r13
  403dab:	call   0x406f88
  403db0:	jmp    0x403338
  403db5:	lea    rcx,[rip+0x76a0]        # 0x40b45c
  403dbc:	call   0x406f38
  403dc1:	jmp    0x402c69
  403dc6:	mov    rcx,rbx
  403dc9:	xor    ebx,ebx
  403dcb:	call   0x405580
  403dd0:	jmp    0x402ba7
  403dd5:	lea    rcx,[rip+0x185fc]        # 0x41c3d8
  403ddc:	xor    edx,edx
  403dde:	call   0x406c30
  403de3:	jmp    0x40325c
  403de8:	lea    rcx,[rip+0x778f]        # 0x40b57e
  403def:	mov    DWORD PTR [rsp+0x4c],eax
  403df3:	call   0x401c50
  403df8:	mov    eax,DWORD PTR [rsp+0x4c]
  403dfc:	jmp    0x40327f
  403e01:	call   QWORD PTR [rip+0x1ae9d]        # 0x41eca4
  403e07:	lea    rcx,[rip+0x77f3]        # 0x40b601
  403e0e:	lea    r9,[rax+0x60]
  403e12:	mov    r8d,0x11
  403e18:	mov    edx,0x1
  403e1d:	call   0x406f58
  403e22:	jmp    0x403626
  403e27:	call   rsi
  403e29:	lea    rdx,[rip+0x74d8]        # 0x40b308
  403e30:	lea    rcx,[rax+0x60]
  403e34:	mov    r8,r13
  403e37:	call   0x406f88
  403e3c:	mov    DWORD PTR [rip+0x1881e],0x3        # 0x41c664
  403e46:	jmp    0x403338
  403e4b:	call   QWORD PTR [rip+0x1ae53]        # 0x41eca4
  403e51:	lea    rcx,[rip+0x7678]        # 0x40b4d0
  403e58:	lea    r9,[rax+0x60]
  403e5c:	mov    r8d,0x25
  403e62:	mov    edx,0x1
  403e67:	call   0x406f58
  403e6c:	jmp    0x402d00
  403e71:	xor    ecx,ecx
  403e73:	jmp    0x403194
  403e78:	mov    DWORD PTR [rsp+0x28],edx
  403e7c:	lea    rcx,[rip+0xffffffffffffe19d]        # 0x402020
  403e83:	lea    rdx,[rip+0xffffffffffffe1b6]        # 0x402040
  403e8a:	mov    QWORD PTR [rsp+0x20],0x0
  403e93:	mov    r9,r13
  403e96:	mov    r8,rax
  403e99:	call   0x405438
  403e9e:	mov    rbx,rax
  403ea1:	jmp    0x4029ec
  403ea6:	movsd  xmm0,QWORD PTR [rsi+0x18]
  403eab:	lea    rcx,[rip+0x75b8]        # 0x40b46a
  403eb2:	movapd xmm1,xmm0
  403eb6:	movq   rdx,xmm0
  403ebb:	call   0x406f38
  403ec0:	jmp    0x402c69
  403ec5:	mov    r9d,0x1
  403ecb:	mov    rdx,r12
  403ece:	call   0x4055f8
  403ed3:	jmp    0x402d60
  403ed8:	call   QWORD PTR [rip+0x1adc6]        # 0x41eca4
  403ede:	lea    rcx,[rip+0x76d3]        # 0x40b5b8
  403ee5:	lea    r9,[rax+0x60]
  403ee9:	mov    r8d,0x2b
  403eef:	mov    edx,0x1
  403ef4:	call   0x406f58
  403ef9:	mov    DWORD PTR [rip+0x18761],0x1        # 0x41c664
  403f03:	jmp    0x403297
  403f08:	call   QWORD PTR [rip+0x1ad96]        # 0x41eca4
  403f0e:	lea    rcx,[rip+0x7268]        # 0x40b17d
  403f15:	lea    r9,[rax+0x60]
  403f19:	mov    r8d,0x18
  403f1f:	mov    edx,0x1
  403f24:	call   0x406f58
  403f29:	mov    rcx,QWORD PTR [rip+0x186e8]        # 0x41c618
  403f30:	call   0x405550
  403f35:	mov    QWORD PTR [rip+0x186d8],0x0        # 0x41c618
  403f40:	jmp    0x40320d
  403f45:	mov    DWORD PTR [rip+0x18715],0x6        # 0x41c664
  403f4f:	jmp    0x403634
  403f54:	mov    rax,QWORD PTR [rip+0x1a8e9]        # 0x41e844
  403f5b:	lea    rdx,[rip+0x75f6]        # 0x40b558
  403f62:	mov    rcx,QWORD PTR [rax]
  403f65:	mov    rax,QWORD PTR [rip+0x1a8d0]        # 0x41e83c
  403f6c:	call   QWORD PTR [rax]
  403f6e:	mov    DWORD PTR [rip+0x186ec],0x1        # 0x41c664
  403f78:	jmp    0x402d00
  403f7d:	mov    rsi,QWORD PTR [rip+0x1876c]        # 0x41c6f0
  403f84:	lea    rax,[rip+0x7450]        # 0x40b3db
  403f8b:	test   rsi,rsi
  403f8e:	cmove  rsi,rax
  403f92:	call   QWORD PTR [rip+0x1ad0c]        # 0x41eca4
  403f98:	lea    rdx,[rip+0x768c]        # 0x40b62b
  403f9f:	lea    rcx,[rax+0x60]
  403fa3:	mov    r8,rsi
  403fa6:	call   0x406f88
  403fab:	mov    DWORD PTR [rip+0x186af],0x6        # 0x41c664
  403fb5:	jmp    0x402e2c
  403fba:	mov    cl,0x1
  403fbc:	call   0x4053a8
  403fc1:	mov    rbx,rax
  403fc4:	jmp    0x402e10
  403fc9:	mov    r8d,DWORD PTR [rip+0x63b0]        # 0x40a380
  403fd0:	xor    edx,edx
  403fd2:	mov    rcx,r13
  403fd5:	call   0x405440
  403fda:	mov    rbx,rax
  403fdd:	jmp    0x4029ec
  403fe2:	call   0x4054b0
  403fe7:	test   rax,rax
  403fea:	mov    rsi,rax
  403fed:	je     0x4035c6
  403ff3:	mov    rax,QWORD PTR [rax]
  403ff6:	lea    rdi,[rip+0xffffffffffffe873]        # 0x402870
  403ffd:	mov    r9d,DWORD PTR [rip+0x637c]        # 0x40a380
  404004:	xor    r8d,r8d
  404007:	mov    rdx,r13
  40400a:	mov    rcx,rsi
  40400d:	mov    QWORD PTR [rax+0xb0],rdi
  404014:	lea    rdi,[rip+0xffffffffffffe745]        # 0x402760
  40401b:	mov    QWORD PTR [rax+0xa8],rdi
  404022:	lea    rax,[rip+0xffffffffffffe627]        # 0x402650
  404029:	mov    QWORD PTR [rsi+0xa0],rax
  404030:	lea    rax,[rip+0xffffffffffffe509]        # 0x402540
  404037:	mov    QWORD PTR [rsi+0xa8],rax
  40403e:	call   0x4055b8
  404043:	mov    rbx,rax
  404046:	mov    rcx,rsi
  404049:	call   0x405568
  40404e:	jmp    0x4029ec
  404053:	call   0x4054b0
  404058:	test   rax,rax
  40405b:	mov    rsi,rax
  40405e:	je     0x4035c6
  404064:	mov    r9d,DWORD PTR [rip+0x6315]        # 0x40a380
  40406b:	xor    r8d,r8d
  40406e:	mov    rdx,r13
  404071:	mov    rcx,rax
  404074:	call   0x4055b8
  404079:	cmp    DWORD PTR [rsi+0x90],0x0
  404080:	mov    rbx,rax
  404083:	jne    0x404046
  404085:	mov    DWORD PTR [rip+0x185d5],0x4        # 0x41c664
  40408f:	jmp    0x404046
  404091:	lea    rax,[rip+0x7343]        # 0x40b3db
  404098:	test   rcx,rcx
  40409b:	mov    r9d,0x1
  4040a1:	mov    rdx,r12
  4040a4:	cmove  rcx,rax
  4040a8:	xor    r8d,r8d
  4040ab:	call   0x4055f8
  4040b0:	jmp    0x402d60
  4040b5:	mov    rax,QWORD PTR [rip+0x1a788]        # 0x41e844
  4040bc:	mov    r8,r13
  4040bf:	lea    rdx,[rip+0x71ca]        # 0x40b290
  4040c6:	mov    rcx,QWORD PTR [rax]
  4040c9:	mov    rax,QWORD PTR [rip+0x1a76c]        # 0x41e83c
  4040d0:	call   QWORD PTR [rax]
  4040d2:	mov    DWORD PTR [rip+0x18588],0x3        # 0x41c664
  4040dc:	jmp    0x403761
  4040e1:	mov    DWORD PTR [rip+0x18579],0x6        # 0x41c664
  4040eb:	jmp    0x403cfc
  4040f0:	mov    rbx,QWORD PTR [rip+0x185f9]        # 0x41c6f0
  4040f7:	call   QWORD PTR [rip+0x1aba7]        # 0x41eca4
  4040fd:	lea    rdx,[rip+0x74e3]        # 0x40b5e7
  404104:	lea    rcx,[rax+0x60]
  404108:	mov    r8,rbx
  40410b:	call   0x406f88
  404110:	mov    DWORD PTR [rip+0x1854a],0x6        # 0x41c664
  40411a:	jmp    0x402d60
  40411f:	call   QWORD PTR [rip+0x1ab7f]        # 0x41eca4
  404125:	lea    rbx,[rax+0x30]
  404129:	jmp    0x403ce0
  40412e:	lea    rcx,[rip+0x182a3]        # 0x41c3d8
  404135:	xor    edx,edx
  404137:	call   0x406c30
  40413c:	jmp    0x403732
  404141:	lea    rcx,[rip+0x7589]        # 0x40b6d1
  404148:	call   0x401c50
  40414d:	jmp    0x403777
  404152:	mov    rax,QWORD PTR [rip+0x1a6eb]        # 0x41e844
  404159:	lea    rdx,[rip+0x7508]        # 0x40b668
  404160:	mov    rcx,QWORD PTR [rax]
  404163:	mov    rax,QWORD PTR [rip+0x1a6d2]        # 0x41e83c
  40416a:	call   QWORD PTR [rax]
  40416c:	or     ecx,0xffffffff
  40416f:	call   0x406fa0
  404174:	nop
  404175:	nop
  404176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404180:	sub    rsp,0x28
  404184:	mov    rdx,rcx
  404187:	lea    rcx,[rip+0x756a]        # 0x40b6f8
  40418e:	call   0x406f38
  404193:	lea    rcx,[rip+0x7586]        # 0x40b720
  40419a:	call   0x406f28
  40419f:	lea    rcx,[rip+0x75ba]        # 0x40b760
  4041a6:	call   0x406f28
  4041ab:	lea    rcx,[rip+0x75ee]        # 0x40b7a0
  4041b2:	call   0x406f28
  4041b7:	lea    rcx,[rip+0x761a]        # 0x40b7d8
  4041be:	call   0x406f28
  4041c3:	lea    rcx,[rip+0x7646]        # 0x40b810
  4041ca:	call   0x406f28
  4041cf:	lea    rcx,[rip+0x767a]        # 0x40b850
  4041d6:	call   0x406f28
  4041db:	lea    rcx,[rip+0x76a6]        # 0x40b888
  4041e2:	call   0x406f28
  4041e7:	lea    rcx,[rip+0x76d2]        # 0x40b8c0
  4041ee:	call   0x406f28
  4041f3:	lea    rcx,[rip+0x7706]        # 0x40b900
  4041fa:	call   0x406f28
  4041ff:	lea    rcx,[rip+0x7722]        # 0x40b928
  404206:	call   0x406f28
  40420b:	lea    rcx,[rip+0x774e]        # 0x40b960
  404212:	call   0x406f28
  404217:	lea    rcx,[rip+0x7782]        # 0x40b9a0
  40421e:	call   0x406f28
  404223:	lea    rcx,[rip+0x77b6]        # 0x40b9e0
  40422a:	call   0x406f28
  40422f:	lea    rcx,[rip+0x77e2]        # 0x40ba18
  404236:	call   0x406f28
  40423b:	lea    rcx,[rip+0x77fe]        # 0x40ba40
  404242:	call   0x406f28
  404247:	lea    rcx,[rip+0x781a]        # 0x40ba68
  40424e:	call   0x406f28
  404253:	lea    rcx,[rip+0x7856]        # 0x40bab0
  40425a:	call   0x406f28
  40425f:	lea    rcx,[rip+0x788a]        # 0x40baf0
  404266:	call   0x406f28
  40426b:	lea    rcx,[rip+0x78c6]        # 0x40bb38
  404272:	call   0x406f28
  404277:	lea    rcx,[rip+0x7902]        # 0x40bb80
  40427e:	call   0x406f28
  404283:	lea    rcx,[rip+0x7916]        # 0x40bba0
  40428a:	call   0x406f28
  40428f:	lea    rcx,[rip+0x793a]        # 0x40bbd0
  404296:	call   0x406f28
  40429b:	lea    rcx,[rip+0x7966]        # 0x40bc08
  4042a2:	call   0x406f28
  4042a7:	lea    rcx,[rip+0x798a]        # 0x40bc38
  4042ae:	call   0x406f28
  4042b3:	lea    rcx,[rip+0x79af]        # 0x40bc69
  4042ba:	call   0x406f28
  4042bf:	lea    rcx,[rip+0x79c2]        # 0x40bc88
  4042c6:	call   0x406f28
  4042cb:	lea    rcx,[rip+0x79f6]        # 0x40bcc8
  4042d2:	call   0x406f28
  4042d7:	lea    rcx,[rip+0x7a1a]        # 0x40bcf8
  4042de:	call   0x406f28
  4042e3:	lea    rcx,[rip+0x7a3e]        # 0x40bd28
  4042ea:	call   0x406f28
  4042ef:	lea    rcx,[rip+0x7a7a]        # 0x40bd70
  4042f6:	call   0x406f28
  4042fb:	lea    rcx,[rip+0x7aae]        # 0x40bdb0
  404302:	call   0x406f28
  404307:	lea    rcx,[rip+0x7ae2]        # 0x40bdf0
  40430e:	call   0x406f28
  404313:	lea    rcx,[rip+0x7b06]        # 0x40be20
  40431a:	call   0x406f28
  40431f:	lea    rcx,[rip+0x7b32]        # 0x40be58
  404326:	call   0x406f28
  40432b:	lea    rcx,[rip+0x7b56]        # 0x40be88
  404332:	call   0x406f28
  404337:	lea    rcx,[rip+0x7b82]        # 0x40bec0
  40433e:	call   0x406f28
  404343:	lea    rcx,[rip+0x7bae]        # 0x40bef8
  40434a:	call   0x406f28
  40434f:	lea    rcx,[rip+0x7bda]        # 0x40bf30
  404356:	call   0x406f28
  40435b:	lea    rcx,[rip+0x7bf6]        # 0x40bf58
  404362:	call   0x406f28
  404367:	lea    rcx,[rip+0x7c22]        # 0x40bf90
  40436e:	call   0x406f28
  404373:	lea    rcx,[rip+0x7c5e]        # 0x40bfd8
  40437a:	call   0x406f28
  40437f:	lea    rcx,[rip+0x7c92]        # 0x40c018
  404386:	call   0x406f28
  40438b:	lea    rcx,[rip+0x7cc6]        # 0x40c058
  404392:	call   0x406f28
  404397:	lea    rcx,[rip+0x7d02]        # 0x40c0a0
  40439e:	call   0x406f28
  4043a3:	lea    rcx,[rip+0x7d2e]        # 0x40c0d8
  4043aa:	call   0x406f28
  4043af:	lea    rcx,[rip+0x7d4a]        # 0x40c100
  4043b6:	call   0x406f28
  4043bb:	lea    rcx,[rip+0x7d7e]        # 0x40c140
  4043c2:	call   0x406f28
  4043c7:	lea    rdx,[rip+0x7da6]        # 0x40c174
  4043ce:	lea    rcx,[rip+0x7dbb]        # 0x40c190
  4043d5:	call   0x406f38
  4043da:	lea    rcx,[rip+0x7dd7]        # 0x40c1b8
  4043e1:	call   0x406f28
  4043e6:	lea    rcx,[rip+0x7df3]        # 0x40c1e0
  4043ed:	call   0x406f28
  4043f2:	lea    rcx,[rip+0x7e17]        # 0x40c210
  4043f9:	call   0x406f28
  4043fe:	lea    rcx,[rip+0x7e33]        # 0x40c238
  404405:	call   0x406f28
  40440a:	lea    rcx,[rip+0x7e67]        # 0x40c278
  404411:	call   0x406f28
  404416:	lea    rcx,[rip+0x7e93]        # 0x40c2b0
  40441d:	call   0x406f28
  404422:	lea    rcx,[rip+0x7ea7]        # 0x40c2d0
  404429:	call   0x406f28
  40442e:	lea    rcx,[rip+0x7ee3]        # 0x40c318
  404435:	call   0x406f28
  40443a:	lea    rcx,[rip+0x7f1f]        # 0x40c360
  404441:	call   0x406f28
  404446:	lea    rcx,[rip+0x7f53]        # 0x40c3a0
  40444d:	call   0x406f28
  404452:	lea    rcx,[rip+0x7f7f]        # 0x40c3d8
  404459:	call   0x406f28
  40445e:	lea    rcx,[rip+0x7fab]        # 0x40c410
  404465:	call   0x406f28
  40446a:	lea    rcx,[rip+0x7fdf]        # 0x40c450
  404471:	call   0x406f28
  404476:	lea    rcx,[rip+0x800b]        # 0x40c488
  40447d:	call   0x406f28
  404482:	lea    rcx,[rip+0x803f]        # 0x40c4c8
  404489:	call   0x406f28
  40448e:	lea    rcx,[rip+0x806b]        # 0x40c500
  404495:	call   0x406f28
  40449a:	lea    rcx,[rip+0x809f]        # 0x40c540
  4044a1:	call   0x406f28
  4044a6:	lea    rcx,[rip+0x80d3]        # 0x40c580
  4044ad:	call   0x406f28
  4044b2:	lea    rcx,[rip+0x8107]        # 0x40c5c0
  4044b9:	call   0x406f28
  4044be:	lea    rcx,[rip+0x812b]        # 0x40c5f0
  4044c5:	add    rsp,0x28
  4044c9:	jmp    0x406f28
  4044ce:	xchg   ax,ax
  4044d0:	push   rsi
  4044d1:	push   rbx
  4044d2:	sub    rsp,0x28
  4044d6:	mov    eax,DWORD PTR [rip+0x18224]        # 0x41c700
  4044dc:	add    DWORD PTR [rip+0xbb5d],0x1        # 0x410040
  4044e3:	test   eax,eax
  4044e5:	je     0x4044f0
  4044e7:	add    rsp,0x28
  4044eb:	pop    rbx
  4044ec:	pop    rsi
  4044ed:	ret    
  4044ee:	xchg   ax,ax
  4044f0:	mov    esi,r8d
  4044f3:	mov    rbx,rdx
  4044f6:	call   QWORD PTR [rip+0x1a7a8]        # 0x41eca4
  4044fc:	lea    rdx,[rip+0x8131]        # 0x40c634
  404503:	lea    rcx,[rax+0x30]
  404507:	mov    r9d,esi
  40450a:	mov    r8,rbx
  40450d:	add    rsp,0x28
  404511:	pop    rbx
  404512:	pop    rsi
  404513:	jmp    0x406f88
  404518:	nop    DWORD PTR [rax+rax*1+0x0]
  404520:	push   rbx
  404521:	sub    rsp,0x20
  404525:	mov    eax,DWORD PTR [rip+0x181d5]        # 0x41c700
  40452b:	add    DWORD PTR [rip+0xbb0e],0x1        # 0x410040
  404532:	test   eax,eax
  404534:	jne    0x404552
  404536:	mov    rbx,rdx
  404539:	call   QWORD PTR [rip+0x1a765]        # 0x41eca4
  40453f:	lea    rdx,[rip+0x8105]        # 0x40c64b
  404546:	lea    rcx,[rax+0x30]
  40454a:	mov    r8,rbx
  40454d:	call   0x406f88
  404552:	xor    eax,eax
  404554:	add    rsp,0x20
  404558:	pop    rbx
  404559:	ret    
  40455a:	nop    WORD PTR [rax+rax*1+0x0]
  404560:	push   rbx
  404561:	sub    rsp,0x20
  404565:	mov    eax,DWORD PTR [rip+0x18195]        # 0x41c700
  40456b:	add    DWORD PTR [rip+0xbace],0x1        # 0x410040
  404572:	test   eax,eax
  404574:	je     0x404580
  404576:	add    rsp,0x20
  40457a:	pop    rbx
  40457b:	ret    
  40457c:	nop    DWORD PTR [rax+0x0]
  404580:	mov    rbx,rdx
  404583:	call   QWORD PTR [rip+0x1a71b]        # 0x41eca4
  404589:	lea    rdx,[rip+0x80d7]        # 0x40c667
  404590:	lea    rcx,[rax+0x30]
  404594:	mov    r8,rbx
  404597:	add    rsp,0x20
  40459b:	pop    rbx
  40459c:	jmp    0x406f88
  4045a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4045a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045b0:	push   rsi
  4045b1:	push   rbx
  4045b2:	sub    rsp,0x28
  4045b6:	mov    eax,DWORD PTR [rip+0x18144]        # 0x41c700
  4045bc:	add    DWORD PTR [rip+0xba7d],0x1        # 0x410040
  4045c3:	test   eax,eax
  4045c5:	jne    0x4045f4
  4045c7:	test   r8,r8
  4045ca:	mov    rbx,r8
  4045cd:	mov    rsi,rdx
  4045d0:	je     0x404600
  4045d2:	call   QWORD PTR [rip+0x1a6cc]        # 0x41eca4
  4045d8:	lea    rdx,[rip+0x8099]        # 0x40c678
  4045df:	lea    rcx,[rax+0x30]
  4045e3:	mov    r9,rbx
  4045e6:	mov    r8,rsi
  4045e9:	add    rsp,0x28
  4045ed:	pop    rbx
  4045ee:	pop    rsi
  4045ef:	jmp    0x406f88
  4045f4:	add    rsp,0x28
  4045f8:	pop    rbx
  4045f9:	pop    rsi
  4045fa:	ret    
  4045fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404600:	call   QWORD PTR [rip+0x1a69e]        # 0x41eca4
  404606:	lea    rdx,[rip+0x8093]        # 0x40c6a0
  40460d:	lea    rcx,[rax+0x30]
  404611:	mov    r8,rsi
  404614:	add    rsp,0x28
  404618:	pop    rbx
  404619:	pop    rsi
  40461a:	jmp    0x406f88
  40461f:	nop
  404620:	push   rsi
  404621:	push   rbx
  404622:	sub    rsp,0x58
  404626:	mov    eax,DWORD PTR [rip+0x180d4]        # 0x41c700
  40462c:	add    DWORD PTR [rip+0xba0d],0x1        # 0x410040
  404633:	test   eax,eax
  404635:	jne    0x404691
  404637:	test   r8d,r8d
  40463a:	jle    0x404698
  40463c:	xor    ecx,ecx
  40463e:	xor    eax,eax
  404640:	lea    rsi,[rsp+0x20]
  404645:	jmp    0x404655
  404647:	nop    WORD PTR [rax+rax*1+0x0]
  404650:	cmp    eax,0x1d
  404653:	jg     0x40466a
  404655:	movzx  r10d,BYTE PTR [rdx+rcx*1]
  40465a:	add    eax,0x1
  40465d:	mov    BYTE PTR [rsi+rcx*1],r10b
  404661:	add    rcx,0x1
  404665:	cmp    r8d,eax
  404668:	jg     0x404650
  40466a:	cdqe   
  40466c:	mov    ebx,r8d
  40466f:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  404674:	call   QWORD PTR [rip+0x1a62a]        # 0x41eca4
  40467a:	lea    rdx,[rip+0x8047]        # 0x40c6c8
  404681:	lea    rcx,[rax+0x30]
  404685:	mov    r9d,ebx
  404688:	mov    r8,rsi
  40468b:	call   0x406f88
  404690:	nop
  404691:	add    rsp,0x58
  404695:	pop    rbx
  404696:	pop    rsi
  404697:	ret    
  404698:	xor    eax,eax
  40469a:	lea    rsi,[rsp+0x20]
  40469f:	jmp    0x40466a
  4046a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4046a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046b0:	push   rsi
  4046b1:	push   rbx
  4046b2:	sub    rsp,0x58
  4046b6:	mov    eax,DWORD PTR [rip+0x18044]        # 0x41c700
  4046bc:	add    DWORD PTR [rip+0xb97d],0x1        # 0x410040
  4046c3:	test   eax,eax
  4046c5:	jne    0x404721
  4046c7:	test   r8d,r8d
  4046ca:	jle    0x404728
  4046cc:	xor    ecx,ecx
  4046ce:	xor    eax,eax
  4046d0:	lea    rsi,[rsp+0x20]
  4046d5:	jmp    0x4046e5
  4046d7:	nop    WORD PTR [rax+rax*1+0x0]
  4046e0:	cmp    eax,0x1d
  4046e3:	jg     0x4046fa
  4046e5:	movzx  r10d,BYTE PTR [rdx+rcx*1]
  4046ea:	add    eax,0x1
  4046ed:	mov    BYTE PTR [rsi+rcx*1],r10b
  4046f1:	add    rcx,0x1
  4046f5:	cmp    r8d,eax
  4046f8:	jg     0x4046e0
  4046fa:	cdqe   
  4046fc:	mov    ebx,r8d
  4046ff:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  404704:	call   QWORD PTR [rip+0x1a59a]        # 0x41eca4
  40470a:	lea    rdx,[rip+0x7fd8]        # 0x40c6e9
  404711:	lea    rcx,[rax+0x30]
  404715:	mov    r9d,ebx
  404718:	mov    r8,rsi
  40471b:	call   0x406f88
  404720:	nop
  404721:	add    rsp,0x58
  404725:	pop    rbx
  404726:	pop    rsi
  404727:	ret    
  404728:	xor    eax,eax
  40472a:	lea    rsi,[rsp+0x20]
  40472f:	jmp    0x4046fa
  404731:	nop    DWORD PTR [rax+rax*1+0x0]
  404736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404740:	push   rbx
  404741:	sub    rsp,0x20
  404745:	mov    eax,DWORD PTR [rip+0x17fb5]        # 0x41c700
  40474b:	add    DWORD PTR [rip+0xb8ee],0x1        # 0x410040
  404752:	test   eax,eax
  404754:	je     0x404760
  404756:	add    rsp,0x20
  40475a:	pop    rbx
  40475b:	ret    
  40475c:	nop    DWORD PTR [rax+0x0]
  404760:	mov    rbx,rdx
  404763:	call   QWORD PTR [rip+0x1a53b]        # 0x41eca4
  404769:	lea    rdx,[rip+0x7f91]        # 0x40c701
  404770:	lea    rcx,[rax+0x30]
  404774:	mov    r8,rbx
  404777:	add    rsp,0x20
  40477b:	pop    rbx
  40477c:	jmp    0x406f88
  404781:	nop    DWORD PTR [rax+rax*1+0x0]
  404786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404790:	push   rbx
  404791:	sub    rsp,0x20
  404795:	mov    eax,DWORD PTR [rip+0x17f65]        # 0x41c700
  40479b:	add    DWORD PTR [rip+0xb89e],0x1        # 0x410040
  4047a2:	test   eax,eax
  4047a4:	je     0x4047b0
  4047a6:	add    rsp,0x20
  4047aa:	pop    rbx
  4047ab:	ret    
  4047ac:	nop    DWORD PTR [rax+0x0]
  4047b0:	mov    rbx,rdx
  4047b3:	call   QWORD PTR [rip+0x1a4eb]        # 0x41eca4
  4047b9:	lea    rdx,[rip+0x7f54]        # 0x40c714
  4047c0:	lea    rcx,[rax+0x30]
  4047c4:	mov    r8,rbx
  4047c7:	add    rsp,0x20
  4047cb:	pop    rbx
  4047cc:	jmp    0x406f88
  4047d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4047d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047e0:	push   rsi
  4047e1:	push   rbx
  4047e2:	sub    rsp,0x28
  4047e6:	mov    eax,DWORD PTR [rip+0x17f14]        # 0x41c700
  4047ec:	add    DWORD PTR [rip+0xb84d],0x1        # 0x410040
  4047f3:	test   eax,eax
  4047f5:	je     0x404800
  4047f7:	add    rsp,0x28
  4047fb:	pop    rbx
  4047fc:	pop    rsi
  4047fd:	ret    
  4047fe:	xchg   ax,ax
  404800:	mov    esi,r8d
  404803:	mov    rbx,rdx
  404806:	call   QWORD PTR [rip+0x1a498]        # 0x41eca4
  40480c:	lea    rdx,[rip+0x7f15]        # 0x40c728
  404813:	lea    rcx,[rax+0x30]
  404817:	mov    r9d,esi
  40481a:	mov    r8,rbx
  40481d:	add    rsp,0x28
  404821:	pop    rbx
  404822:	pop    rsi
  404823:	jmp    0x406f88
  404828:	nop    DWORD PTR [rax+rax*1+0x0]
  404830:	push   rdi
  404831:	push   rsi
  404832:	push   rbx
  404833:	sub    rsp,0x30
  404837:	mov    eax,DWORD PTR [rip+0x17ec3]        # 0x41c700
  40483d:	add    DWORD PTR [rip+0xb7fc],0x1        # 0x410040
  404844:	test   eax,eax
  404846:	jne    0x404873
  404848:	mov    rdi,r9
  40484b:	mov    rsi,r8
  40484e:	mov    rbx,rdx
  404851:	call   QWORD PTR [rip+0x1a44d]        # 0x41eca4
  404857:	lea    rdx,[rip+0x7ee8]        # 0x40c746
  40485e:	lea    rcx,[rax+0x30]
  404862:	mov    QWORD PTR [rsp+0x20],rdi
  404867:	mov    r9,rsi
  40486a:	mov    r8,rbx
  40486d:	call   0x406f88
  404872:	nop
  404873:	add    rsp,0x30
  404877:	pop    rbx
  404878:	pop    rsi
  404879:	pop    rdi
  40487a:	ret    
  40487b:	nop    DWORD PTR [rax+rax*1+0x0]
  404880:	push   rbx
  404881:	sub    rsp,0x20
  404885:	mov    eax,DWORD PTR [rip+0x17e75]        # 0x41c700
  40488b:	add    DWORD PTR [rip+0xb7ae],0x1        # 0x410040
  404892:	test   eax,eax
  404894:	jne    0x4048b2
  404896:	mov    rbx,rdx
  404899:	call   QWORD PTR [rip+0x1a405]        # 0x41eca4
  40489f:	lea    rdx,[rip+0x7ebe]        # 0x40c764
  4048a6:	lea    rcx,[rax+0x30]
  4048aa:	mov    r8,rbx
  4048ad:	call   0x406f88
  4048b2:	xor    eax,eax
  4048b4:	add    rsp,0x20
  4048b8:	pop    rbx
  4048b9:	ret    
  4048ba:	nop    WORD PTR [rax+rax*1+0x0]
  4048c0:	push   rbp
  4048c1:	push   rdi
  4048c2:	push   rsi
  4048c3:	push   rbx
  4048c4:	sub    rsp,0x28
  4048c8:	mov    eax,DWORD PTR [rip+0x17e32]        # 0x41c700
  4048ce:	add    DWORD PTR [rip+0xb76b],0x1        # 0x410040
  4048d5:	test   eax,eax
  4048d7:	je     0x4048e2
  4048d9:	add    rsp,0x28
  4048dd:	pop    rbx
  4048de:	pop    rsi
  4048df:	pop    rdi
  4048e0:	pop    rbp
  4048e1:	ret    
  4048e2:	mov    rbp,r8
  4048e5:	mov    rsi,rdx
  4048e8:	mov    rbx,r9
  4048eb:	mov    rdi,QWORD PTR [rip+0x1a3b2]        # 0x41eca4
  4048f2:	call   rdi
  4048f4:	lea    rdx,[rip+0x7e7c]        # 0x40c777
  4048fb:	lea    rcx,[rax+0x30]
  4048ff:	mov    r8,rsi
  404902:	call   0x406f88
  404907:	test   rbp,rbp
  40490a:	je     0x404943
  40490c:	call   rdi
  40490e:	lea    rdx,[rip+0x7e7c]        # 0x40c791
  404915:	lea    rcx,[rax+0x30]
  404919:	mov    r8,rbp
  40491c:	call   0x406f88
  404921:	test   rbx,rbx
  404924:	je     0x404962
  404926:	call   rdi
  404928:	lea    rdx,[rip+0x7e6b]        # 0x40c79a
  40492f:	lea    rcx,[rax+0x30]
  404933:	mov    r8,rbx
  404936:	add    rsp,0x28
  40493a:	pop    rbx
  40493b:	pop    rsi
  40493c:	pop    rdi
  40493d:	pop    rbp
  40493e:	jmp    0x406f88
  404943:	call   rdi
  404945:	lea    rcx,[rip+0x7e42]        # 0x40c78e
  40494c:	lea    r9,[rax+0x30]
  404950:	mov    r8d,0x2
  404956:	mov    edx,0x1
  40495b:	call   0x406f58
  404960:	jmp    0x404921
  404962:	call   rdi
  404964:	lea    rcx,[rip+0x7e2b]        # 0x40c796
  40496b:	lea    r9,[rax+0x30]
  40496f:	mov    r8d,0x3
  404975:	mov    edx,0x1
  40497a:	add    rsp,0x28
  40497e:	pop    rbx
  40497f:	pop    rsi
  404980:	pop    rdi
  404981:	pop    rbp
  404982:	jmp    0x406f58
  404987:	nop    WORD PTR [rax+rax*1+0x0]
  404990:	push   rdi
  404991:	push   rsi
  404992:	push   rbx
  404993:	sub    rsp,0x20
  404997:	mov    eax,DWORD PTR [rip+0x17d63]        # 0x41c700
  40499d:	add    DWORD PTR [rip+0xb69c],0x1        # 0x410040
  4049a4:	test   eax,eax
  4049a6:	je     0x4049b0
  4049a8:	add    rsp,0x20
  4049ac:	pop    rbx
  4049ad:	pop    rsi
  4049ae:	pop    rdi
  4049af:	ret    
  4049b0:	mov    rbx,r8
  4049b3:	mov    rsi,rdx
  4049b6:	mov    rdi,QWORD PTR [rip+0x1a2e7]        # 0x41eca4
  4049bd:	call   rdi
  4049bf:	lea    rdx,[rip+0x7dda]        # 0x40c7a0
  4049c6:	lea    rcx,[rax+0x30]
  4049ca:	mov    r8,rsi
  4049cd:	call   0x406f88
  4049d2:	test   rbx,rbx
  4049d5:	je     0x404a22
  4049d7:	mov    rsi,QWORD PTR [rbx]
  4049da:	test   rsi,rsi
  4049dd:	je     0x404a22
  4049df:	add    rbx,0x8
  4049e3:	call   rdi
  4049e5:	lea    rdx,[rip+0x7dcb]        # 0x40c7b7
  4049ec:	lea    rcx,[rax+0x30]
  4049f0:	mov    r8,rsi
  4049f3:	call   0x406f88
  4049f8:	mov    rsi,QWORD PTR [rbx]
  4049fb:	test   rsi,rsi
  4049fe:	je     0x404a15
  404a00:	call   rdi
  404a02:	lea    rdx,[rip+0x7db5]        # 0x40c7be
  404a09:	lea    rcx,[rax+0x30]
  404a0d:	mov    r8,rsi
  404a10:	call   0x406f88
  404a15:	add    rbx,0x10
  404a19:	mov    rsi,QWORD PTR [rbx-0x8]
  404a1d:	test   rsi,rsi
  404a20:	jne    0x4049e3
  404a22:	call   rdi
  404a24:	lea    rcx,[rip+0x7d89]        # 0x40c7b4
  404a2b:	lea    r9,[rax+0x30]
  404a2f:	mov    r8d,0x2
  404a35:	mov    edx,0x1
  404a3a:	add    rsp,0x20
  404a3e:	pop    rbx
  404a3f:	pop    rsi
  404a40:	pop    rdi
  404a41:	jmp    0x406f58
  404a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a50:	sub    rsp,0x28
  404a54:	mov    eax,DWORD PTR [rip+0x17ca6]        # 0x41c700
  404a5a:	add    DWORD PTR [rip+0xb5df],0x1        # 0x410040
  404a61:	test   eax,eax
  404a63:	je     0x404a70
  404a65:	add    rsp,0x28
  404a69:	ret    
  404a6a:	nop    WORD PTR [rax+rax*1+0x0]
  404a70:	call   QWORD PTR [rip+0x1a22e]        # 0x41eca4
  404a76:	lea    rcx,[rip+0x7d45]        # 0x40c7c2
  404a7d:	lea    r9,[rax+0x30]
  404a81:	mov    r8d,0x12
  404a87:	mov    edx,0x1
  404a8c:	add    rsp,0x28
  404a90:	jmp    0x406f58
  404a95:	nop
  404a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404aa0:	sub    rsp,0x28
  404aa4:	mov    eax,DWORD PTR [rip+0x17c56]        # 0x41c700
  404aaa:	add    DWORD PTR [rip+0xb58f],0x1        # 0x410040
  404ab1:	test   eax,eax
  404ab3:	je     0x404ac0
  404ab5:	add    rsp,0x28
  404ab9:	ret    
  404aba:	nop    WORD PTR [rax+rax*1+0x0]
  404ac0:	call   QWORD PTR [rip+0x1a1de]        # 0x41eca4
  404ac6:	lea    rcx,[rip+0x7d08]        # 0x40c7d5
  404acd:	lea    r9,[rax+0x30]
  404ad1:	mov    r8d,0x14
  404ad7:	mov    edx,0x1
  404adc:	add    rsp,0x28
  404ae0:	jmp    0x406f58
  404ae5:	nop
  404ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404af0:	sub    rsp,0x28
  404af4:	mov    eax,DWORD PTR [rip+0x17c06]        # 0x41c700
  404afa:	add    DWORD PTR [rip+0xb53f],0x1        # 0x410040
  404b01:	test   eax,eax
  404b03:	je     0x404b10
  404b05:	add    rsp,0x28
  404b09:	ret    
  404b0a:	nop    WORD PTR [rax+rax*1+0x0]
  404b10:	call   QWORD PTR [rip+0x1a18e]        # 0x41eca4
  404b16:	lea    rcx,[rip+0x7ccd]        # 0x40c7ea
  404b1d:	lea    r9,[rax+0x30]
  404b21:	mov    r8d,0x19
  404b27:	mov    edx,0x1
  404b2c:	add    rsp,0x28
  404b30:	jmp    0x406f58
  404b35:	nop
  404b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b40:	sub    rsp,0x28
  404b44:	mov    eax,DWORD PTR [rip+0x17bb6]        # 0x41c700
  404b4a:	add    DWORD PTR [rip+0xb4ef],0x1        # 0x410040
  404b51:	test   eax,eax
  404b53:	jne    0x404b76
  404b55:	call   QWORD PTR [rip+0x1a149]        # 0x41eca4
  404b5b:	lea    rcx,[rip+0x7ca2]        # 0x40c804
  404b62:	lea    r9,[rax+0x30]
  404b66:	mov    r8d,0x18
  404b6c:	mov    edx,0x1
  404b71:	call   0x406f58
  404b76:	xor    eax,eax
  404b78:	add    rsp,0x28
  404b7c:	ret    
  404b7d:	nop    DWORD PTR [rax]
  404b80:	sub    rsp,0x28
  404b84:	mov    eax,DWORD PTR [rip+0x17b76]        # 0x41c700
  404b8a:	add    DWORD PTR [rip+0xb4af],0x1        # 0x410040
  404b91:	test   eax,eax
  404b93:	jne    0x404bb6
  404b95:	call   QWORD PTR [rip+0x1a109]        # 0x41eca4
  404b9b:	lea    rcx,[rip+0x7c7b]        # 0x40c81d
  404ba2:	lea    r9,[rax+0x30]
  404ba6:	mov    r8d,0x18
  404bac:	mov    edx,0x1
  404bb1:	call   0x406f58
  404bb6:	xor    eax,eax
  404bb8:	add    rsp,0x28
  404bbc:	ret    
  404bbd:	nop    DWORD PTR [rax]
  404bc0:	sub    rsp,0x28
  404bc4:	mov    eax,DWORD PTR [rip+0x17b36]        # 0x41c700
  404bca:	add    DWORD PTR [rip+0xb46f],0x1        # 0x410040
  404bd1:	test   eax,eax
  404bd3:	jne    0x404bf6
  404bd5:	call   QWORD PTR [rip+0x1a0c9]        # 0x41eca4
  404bdb:	lea    rcx,[rip+0x7c54]        # 0x40c836
  404be2:	lea    r9,[rax+0x30]
  404be6:	mov    r8d,0x13
  404bec:	mov    edx,0x1
  404bf1:	call   0x406f58
  404bf6:	xor    eax,eax
  404bf8:	add    rsp,0x28
  404bfc:	ret    
  404bfd:	nop    DWORD PTR [rax]
  404c00:	push   rbp
  404c01:	push   rdi
  404c02:	push   rsi
  404c03:	push   rbx
  404c04:	sub    rsp,0x28
  404c08:	mov    eax,DWORD PTR [rip+0x17af2]        # 0x41c700
  404c0e:	add    DWORD PTR [rip+0xb42b],0x1        # 0x410040
  404c15:	test   eax,eax
  404c17:	je     0x404c22
  404c19:	add    rsp,0x28
  404c1d:	pop    rbx
  404c1e:	pop    rsi
  404c1f:	pop    rdi
  404c20:	pop    rbp
  404c21:	ret    
  404c22:	mov    rbp,r8
  404c25:	mov    rsi,rdx
  404c28:	mov    rbx,r9
  404c2b:	mov    rdi,QWORD PTR [rip+0x1a072]        # 0x41eca4
  404c32:	call   rdi
  404c34:	lea    rdx,[rip+0x7c0f]        # 0x40c84a
  404c3b:	lea    rcx,[rax+0x30]
  404c3f:	mov    r8,rsi
  404c42:	call   0x406f88
  404c47:	test   rbp,rbp
  404c4a:	je     0x404c83
  404c4c:	call   rdi
  404c4e:	lea    rdx,[rip+0x7b3c]        # 0x40c791
  404c55:	lea    rcx,[rax+0x30]
  404c59:	mov    r8,rbp
  404c5c:	call   0x406f88
  404c61:	test   rbx,rbx
  404c64:	je     0x404ca2
  404c66:	call   rdi
  404c68:	lea    rdx,[rip+0x7b2b]        # 0x40c79a
  404c6f:	lea    rcx,[rax+0x30]
  404c73:	mov    r8,rbx
  404c76:	add    rsp,0x28
  404c7a:	pop    rbx
  404c7b:	pop    rsi
  404c7c:	pop    rdi
  404c7d:	pop    rbp
  404c7e:	jmp    0x406f88
  404c83:	call   rdi
  404c85:	lea    rcx,[rip+0x7b02]        # 0x40c78e
  404c8c:	lea    r9,[rax+0x30]
  404c90:	mov    r8d,0x2
  404c96:	mov    edx,0x1
  404c9b:	call   0x406f58
  404ca0:	jmp    0x404c61
  404ca2:	call   rdi
  404ca4:	lea    rcx,[rip+0x7aeb]        # 0x40c796
  404cab:	lea    r9,[rax+0x30]
  404caf:	mov    r8d,0x3
  404cb5:	mov    edx,0x1
  404cba:	add    rsp,0x28
  404cbe:	pop    rbx
  404cbf:	pop    rsi
  404cc0:	pop    rdi
  404cc1:	pop    rbp
  404cc2:	jmp    0x406f58
  404cc7:	nop    WORD PTR [rax+rax*1+0x0]
  404cd0:	push   rbp
  404cd1:	push   rdi
  404cd2:	push   rsi
  404cd3:	push   rbx
  404cd4:	sub    rsp,0x28
  404cd8:	mov    eax,DWORD PTR [rip+0x17a22]        # 0x41c700
  404cde:	add    DWORD PTR [rip+0xb35b],0x1        # 0x410040
  404ce5:	test   eax,eax
  404ce7:	je     0x404cf2
  404ce9:	add    rsp,0x28
  404ced:	pop    rbx
  404cee:	pop    rsi
  404cef:	pop    rdi
  404cf0:	pop    rbp
  404cf1:	ret    
  404cf2:	mov    rbp,r8
  404cf5:	mov    rsi,rdx
  404cf8:	mov    rbx,r9
  404cfb:	mov    rdi,QWORD PTR [rip+0x19fa2]        # 0x41eca4
  404d02:	call   rdi
  404d04:	lea    rdx,[rip+0x7b56]        # 0x40c861
  404d0b:	lea    rcx,[rax+0x30]
  404d0f:	mov    r8,rsi
  404d12:	call   0x406f88
  404d17:	test   rbp,rbp
  404d1a:	je     0x404d53
  404d1c:	call   rdi
  404d1e:	lea    rdx,[rip+0x7b57]        # 0x40c87c
  404d25:	lea    rcx,[rax+0x30]
  404d29:	mov    r8,rbp
  404d2c:	call   0x406f88
  404d31:	test   rbx,rbx
  404d34:	je     0x404d72
  404d36:	call   rdi
  404d38:	lea    rdx,[rip+0x7b4b]        # 0x40c88a
  404d3f:	lea    rcx,[rax+0x30]
  404d43:	mov    r8,rbx
  404d46:	add    rsp,0x28
  404d4a:	pop    rbx
  404d4b:	pop    rsi
  404d4c:	pop    rdi
  404d4d:	pop    rbp
  404d4e:	jmp    0x406f88
  404d53:	call   rdi
  404d55:	lea    rcx,[rip+0x7b19]        # 0x40c875
  404d5c:	lea    r9,[rax+0x30]
  404d60:	mov    r8d,0x6
  404d66:	mov    edx,0x1
  404d6b:	call   0x406f58
  404d70:	jmp    0x404d31
  404d72:	call   rdi
  404d74:	lea    rcx,[rip+0x7b06]        # 0x40c881
  404d7b:	lea    r9,[rax+0x30]
  404d7f:	mov    r8d,0x8
  404d85:	mov    edx,0x1
  404d8a:	add    rsp,0x28
  404d8e:	pop    rbx
  404d8f:	pop    rsi
  404d90:	pop    rdi
  404d91:	pop    rbp
  404d92:	jmp    0x406f58
  404d97:	nop    WORD PTR [rax+rax*1+0x0]
  404da0:	push   r15
  404da2:	push   r14
  404da4:	push   r13
  404da6:	push   r12
  404da8:	push   rbp
  404da9:	push   rdi
  404daa:	push   rsi
  404dab:	push   rbx
  404dac:	sub    rsp,0x38
  404db0:	mov    eax,DWORD PTR [rip+0x1794a]        # 0x41c700
  404db6:	add    DWORD PTR [rip+0xb283],0x1        # 0x410040
  404dbd:	mov    edi,DWORD PTR [rsp+0xa0]
  404dc4:	mov    rbp,QWORD PTR [rsp+0xa8]
  404dcc:	mov    r12d,DWORD PTR [rsp+0xb0]
  404dd4:	mov    r13d,DWORD PTR [rsp+0xb8]
  404ddc:	test   eax,eax
  404dde:	mov    rbx,QWORD PTR [rsp+0xc0]
  404de6:	je     0x404e00
  404de8:	add    rsp,0x38
  404dec:	pop    rbx
  404ded:	pop    rsi
  404dee:	pop    rdi
  404def:	pop    rbp
  404df0:	pop    r12
  404df2:	pop    r13
  404df4:	pop    r14
  404df6:	pop    r15
  404df8:	ret    
  404df9:	nop    DWORD PTR [rax+0x0]
  404e00:	mov    r15,r8
  404e03:	mov    r14,r9
  404e06:	mov    QWORD PTR [rsp+0x28],rdx
  404e0b:	mov    rsi,QWORD PTR [rip+0x19e92]        # 0x41eca4
  404e12:	call   rsi
  404e14:	mov    r8,QWORD PTR [rsp+0x28]
  404e19:	lea    rcx,[rax+0x30]
  404e1d:	lea    rdx,[rip+0x7a6f]        # 0x40c893
  404e24:	call   0x406f88
  404e29:	test   r15,r15
  404e2c:	je     0x404fd0
  404e32:	call   rsi
  404e34:	lea    rdx,[rip+0x7a41]        # 0x40c87c
  404e3b:	lea    rcx,[rax+0x30]
  404e3f:	mov    r8,r15
  404e42:	call   0x406f88
  404e47:	test   r14,r14
  404e4a:	je     0x404ff2
  404e50:	call   rsi
  404e52:	lea    rdx,[rip+0x7a50]        # 0x40c8a9
  404e59:	lea    rcx,[rax+0x30]
  404e5d:	mov    r8,r14
  404e60:	call   0x406f88
  404e65:	call   rsi
  404e67:	lea    rdx,[rip+0x7a42]        # 0x40c8b0
  404e6e:	lea    rcx,[rax+0x30]
  404e72:	mov    r8d,edi
  404e75:	call   0x406f88
  404e7a:	test   rbp,rbp
  404e7d:	je     0x404efc
  404e7f:	lea    eax,[rdi+rdi*1]
  404e82:	test   eax,eax
  404e84:	jle    0x404efc
  404e86:	sub    eax,0x1
  404e89:	lea    rdi,[rbp+0x8]
  404e8d:	shr    eax,1
  404e8f:	shl    rax,0x4
  404e93:	lea    rbp,[rbp+rax*1+0x18]
  404e98:	nop    DWORD PTR [rax+rax*1+0x0]
  404ea0:	call   rsi
  404ea2:	lea    rcx,[rip+0x7a15]        # 0x40c8be
  404ea9:	lea    r9,[rax+0x30]
  404ead:	mov    r8d,0x7
  404eb3:	mov    edx,0x1
  404eb8:	call   0x406f58
  404ebd:	mov    r14,QWORD PTR [rdi-0x8]
  404ec1:	test   r14,r14
  404ec4:	je     0x404edb
  404ec6:	call   rsi
  404ec8:	lea    rdx,[rip+0x79f7]        # 0x40c8c6
  404ecf:	lea    rcx,[rax+0x30]
  404ed3:	mov    r8,r14
  404ed6:	call   0x406f88
  404edb:	mov    r14,QWORD PTR [rdi]
  404ede:	add    rdi,0x10
  404ee2:	call   rsi
  404ee4:	lea    rdx,[rip+0x79df]        # 0x40c8ca
  404eeb:	lea    rcx,[rax+0x30]
  404eef:	mov    r8,r14
  404ef2:	call   0x406f88
  404ef7:	cmp    rdi,rbp
  404efa:	jne    0x404ea0
  404efc:	call   rsi
  404efe:	lea    rdx,[rip+0x79b0]        # 0x40c8b5
  404f05:	lea    rcx,[rax+0x30]
  404f09:	mov    r9d,r13d
  404f0c:	mov    r8d,r12d
  404f0f:	call   0x406f88
  404f14:	test   rbx,rbx
  404f17:	je     0x404fa0
  404f1d:	lea    r12d,[r12+r12*4]
  404f21:	test   r12d,r12d
  404f24:	jle    0x404fa0
  404f26:	xor    ebp,ebp
  404f28:	jmp    0x404f7a
  404f2a:	nop    WORD PTR [rax+rax*1+0x0]
  404f30:	mov    r13,QWORD PTR [rbx]
  404f33:	call   rsi
  404f35:	lea    rdx,[rip+0x7994]        # 0x40c8d0
  404f3c:	lea    rcx,[rax+0x30]
  404f40:	mov    r8,rdi
  404f43:	mov    r9,r13
  404f46:	call   0x406f88
  404f4b:	mov    r13,QWORD PTR [rbx+0x18]
  404f4f:	mov    rdi,QWORD PTR [rbx+0x20]
  404f53:	add    ebp,0x5
  404f56:	call   rsi
  404f58:	lea    rdx,[rip+0x797b]        # 0x40c8da
  404f5f:	lea    rcx,[rax+0x30]
  404f63:	add    rbx,0x28
  404f67:	sub    rdi,r13
  404f6a:	mov    r8,r13
  404f6d:	mov    r9d,edi
  404f70:	call   0x406f88
  404f75:	cmp    ebp,r12d
  404f78:	jge    0x404fa0
  404f7a:	mov    rdi,QWORD PTR [rbx+0x8]
  404f7e:	test   rdi,rdi
  404f81:	jne    0x404f30
  404f83:	mov    rdi,QWORD PTR [rbx]
  404f86:	call   rsi
  404f88:	lea    rdx,[rip+0x7828]        # 0x40c7b7
  404f8f:	lea    rcx,[rax+0x30]
  404f93:	mov    r8,rdi
  404f96:	call   0x406f88
  404f9b:	jmp    0x404f4b
  404f9d:	nop    DWORD PTR [rax]
  404fa0:	call   rsi
  404fa2:	lea    rcx,[rip+0x780b]        # 0x40c7b4
  404fa9:	lea    r9,[rax+0x30]
  404fad:	mov    r8d,0x2
  404fb3:	mov    edx,0x1
  404fb8:	add    rsp,0x38
  404fbc:	pop    rbx
  404fbd:	pop    rsi
  404fbe:	pop    rdi
  404fbf:	pop    rbp
  404fc0:	pop    r12
  404fc2:	pop    r13
  404fc4:	pop    r14
  404fc6:	pop    r15
  404fc8:	jmp    0x406f58
  404fcd:	nop    DWORD PTR [rax]
  404fd0:	call   rsi
  404fd2:	lea    rcx,[rip+0x789c]        # 0x40c875
  404fd9:	lea    r9,[rax+0x30]
  404fdd:	mov    r8d,0x6
  404fe3:	mov    edx,0x1
  404fe8:	call   0x406f58
  404fed:	jmp    0x404e47
  404ff2:	call   rsi
  404ff4:	lea    rcx,[rip+0x787a]        # 0x40c875
  404ffb:	lea    r9,[rax+0x30]
  404fff:	mov    r8d,0x6
  405005:	mov    edx,0x1
  40500a:	call   0x406f58
  40500f:	jmp    0x404e65
  405014:	xchg   ax,ax
  405016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405020:	push   r13
  405022:	push   r12
  405024:	push   rbp
  405025:	push   rdi
  405026:	push   rsi
  405027:	push   rbx
  405028:	sub    rsp,0x48
  40502c:	mov    eax,DWORD PTR [rip+0x176ce]        # 0x41c700
  405032:	add    DWORD PTR [rip+0xb007],0x1        # 0x410040
  405039:	mov    r13d,DWORD PTR [rsp+0xa0]
  405041:	mov    rsi,QWORD PTR [rsp+0xa8]
  405049:	mov    r12,QWORD PTR [rsp+0xb0]
  405051:	test   eax,eax
  405053:	jne    0x4050a1
  405055:	test   rsi,rsi
  405058:	mov    ebx,r9d
  40505b:	mov    rbp,r8
  40505e:	mov    rdi,rdx
  405061:	je     0x4050b0
  405063:	call   QWORD PTR [rip+0x19c3b]        # 0x41eca4
  405069:	lea    rdx,[rip+0x78a8]        # 0x40c918
  405070:	lea    rcx,[rax+0x30]
  405074:	mov    QWORD PTR [rsp+0x30],rsi
  405079:	mov    DWORD PTR [rsp+0x28],r13d
  40507e:	mov    DWORD PTR [rsp+0x20],ebx
  405082:	mov    r9,rbp
  405085:	mov    r8,rdi
  405088:	call   0x406f88
  40508d:	mov    rcx,r12
  405090:	add    rsp,0x48
  405094:	pop    rbx
  405095:	pop    rsi
  405096:	pop    rdi
  405097:	pop    rbp
  405098:	pop    r12
  40509a:	pop    r13
  40509c:	jmp    0x405570
  4050a1:	add    rsp,0x48
  4050a5:	pop    rbx
  4050a6:	pop    rsi
  4050a7:	pop    rdi
  4050a8:	pop    rbp
  4050a9:	pop    r12
  4050ab:	pop    r13
  4050ad:	ret    
  4050ae:	xchg   ax,ax
  4050b0:	call   QWORD PTR [rip+0x19bee]        # 0x41eca4
  4050b6:	lea    rdx,[rip+0x782b]        # 0x40c8e8
  4050bd:	lea    rcx,[rax+0x30]
  4050c1:	mov    DWORD PTR [rsp+0x28],r13d
  4050c6:	mov    DWORD PTR [rsp+0x20],ebx
  4050ca:	mov    r9,rbp
  4050cd:	mov    r8,rdi
  4050d0:	call   0x406f88
  4050d5:	jmp    0x40508d
  4050d7:	nop    WORD PTR [rax+rax*1+0x0]
  4050e0:	push   rdi
  4050e1:	push   rsi
  4050e2:	push   rbx
  4050e3:	sub    rsp,0x20
  4050e7:	mov    eax,DWORD PTR [rip+0x17613]        # 0x41c700
  4050ed:	add    DWORD PTR [rip+0xaf4c],0x1        # 0x410040
  4050f4:	test   eax,eax
  4050f6:	je     0x405102
  4050f8:	xor    eax,eax
  4050fa:	add    rsp,0x20
  4050fe:	pop    rbx
  4050ff:	pop    rsi
  405100:	pop    rdi
  405101:	ret    
  405102:	mov    rbx,rdx
  405105:	mov    rdi,r8
  405108:	mov    rsi,QWORD PTR [rip+0x19b95]        # 0x41eca4
  40510f:	call   rsi
  405111:	lea    rcx,[rip+0x782c]        # 0x40c944
  405118:	lea    r9,[rax+0x30]
  40511c:	mov    r8d,0x12
  405122:	mov    edx,0x1
  405127:	call   0x406f58
  40512c:	test   rbx,rbx
  40512f:	je     0x405185
  405131:	call   rsi
  405133:	lea    rdx,[rax+0x30]
  405137:	mov    rcx,rbx
  40513a:	call   0x406f78
  40513f:	test   rdi,rdi
  405142:	je     0x405163
  405144:	call   rsi
  405146:	lea    rdx,[rip+0x780a]        # 0x40c957
  40514d:	lea    rcx,[rax+0x30]
  405151:	mov    r8,rdi
  405154:	call   0x406f88
  405159:	xor    eax,eax
  40515b:	add    rsp,0x20
  40515f:	pop    rbx
  405160:	pop    rsi
  405161:	pop    rdi
  405162:	ret    
  405163:	call   rsi
  405165:	lea    rcx,[rip+0x77f2]        # 0x40c95e
  40516c:	lea    r9,[rax+0x30]
  405170:	mov    r8d,0x4
  405176:	mov    edx,0x1
  40517b:	call   0x406f58
  405180:	jmp    0x4050f8
  405185:	call   rsi
  405187:	lea    rdx,[rax+0x30]
  40518b:	mov    ecx,0x20
  405190:	call   0x406f80
  405195:	jmp    0x40513f
  405197:	nop    WORD PTR [rax+rax*1+0x0]
  4051a0:	push   rbx
  4051a1:	sub    rsp,0x20
  4051a5:	mov    rbx,rcx
  4051a8:	mov    ecx,0x4
  4051ad:	call   0x406f48
  4051b2:	test   rax,rax
  4051b5:	mov    QWORD PTR [rbx],rax
  4051b8:	je     0x4051cd
  4051ba:	add    DWORD PTR [rip+0x17473],0x1        # 0x41c634
  4051c1:	mov    DWORD PTR [rax],0x81726354
  4051c7:	add    rsp,0x20
  4051cb:	pop    rbx
  4051cc:	ret    
  4051cd:	call   QWORD PTR [rip+0x19ad1]        # 0x41eca4
  4051d3:	lea    rcx,[rip+0x778e]        # 0x40c968
  4051da:	lea    r9,[rax+0x60]
  4051de:	mov    r8d,0x28
  4051e4:	mov    edx,0x1
  4051e9:	call   0x406f58
  4051ee:	mov    ecx,0x9
  4051f3:	call   0x406fa0
  4051f8:	nop
  4051f9:	nop
  4051fa:	nop
  4051fb:	nop
  4051fc:	nop
  4051fd:	nop
  4051fe:	nop
  4051ff:	nop
  405200:	jmp    QWORD PTR [rip+0x1999e]        # 0x41eba4
  405206:	nop
  405207:	nop
  405208:	jmp    QWORD PTR [rip+0x1998e]        # 0x41eb9c
  40520e:	nop
  40520f:	nop
  405210:	jmp    QWORD PTR [rip+0x1997e]        # 0x41eb94
  405216:	nop
  405217:	nop
  405218:	jmp    QWORD PTR [rip+0x1996e]        # 0x41eb8c
  40521e:	nop
  40521f:	nop
  405220:	jmp    QWORD PTR [rip+0x1995e]        # 0x41eb84
  405226:	nop
  405227:	nop
  405228:	jmp    QWORD PTR [rip+0x1994e]        # 0x41eb7c
  40522e:	nop
  40522f:	nop
  405230:	jmp    QWORD PTR [rip+0x1993e]        # 0x41eb74
  405236:	nop
  405237:	nop
  405238:	jmp    QWORD PTR [rip+0x1992e]        # 0x41eb6c
  40523e:	nop
  40523f:	nop
  405240:	jmp    QWORD PTR [rip+0x1991e]        # 0x41eb64
  405246:	nop
  405247:	nop
  405248:	jmp    QWORD PTR [rip+0x1990e]        # 0x41eb5c
  40524e:	nop
  40524f:	nop
  405250:	jmp    QWORD PTR [rip+0x198fe]        # 0x41eb54
  405256:	nop
  405257:	nop
  405258:	jmp    QWORD PTR [rip+0x198e6]        # 0x41eb44
  40525e:	nop
  40525f:	nop
  405260:	jmp    QWORD PTR [rip+0x198d6]        # 0x41eb3c
  405266:	nop
  405267:	nop
  405268:	jmp    QWORD PTR [rip+0x198c6]        # 0x41eb34
  40526e:	nop
  40526f:	nop
  405270:	jmp    QWORD PTR [rip+0x198b6]        # 0x41eb2c
  405276:	nop
  405277:	nop
  405278:	jmp    QWORD PTR [rip+0x198a6]        # 0x41eb24
  40527e:	nop
  40527f:	nop
  405280:	jmp    QWORD PTR [rip+0x19896]        # 0x41eb1c
  405286:	nop
  405287:	nop
  405288:	jmp    QWORD PTR [rip+0x19886]        # 0x41eb14
  40528e:	nop
  40528f:	nop
  405290:	jmp    QWORD PTR [rip+0x19876]        # 0x41eb0c
  405296:	nop
  405297:	nop
  405298:	jmp    QWORD PTR [rip+0x19866]        # 0x41eb04
  40529e:	nop
  40529f:	nop
  4052a0:	jmp    QWORD PTR [rip+0x19856]        # 0x41eafc
  4052a6:	nop
  4052a7:	nop
  4052a8:	jmp    QWORD PTR [rip+0x19846]        # 0x41eaf4
  4052ae:	nop
  4052af:	nop
  4052b0:	jmp    QWORD PTR [rip+0x19836]        # 0x41eaec
  4052b6:	nop
  4052b7:	nop
  4052b8:	jmp    QWORD PTR [rip+0x19826]        # 0x41eae4
  4052be:	nop
  4052bf:	nop
  4052c0:	jmp    QWORD PTR [rip+0x19816]        # 0x41eadc
  4052c6:	nop
  4052c7:	nop
  4052c8:	jmp    QWORD PTR [rip+0x19806]        # 0x41ead4
  4052ce:	nop
  4052cf:	nop
  4052d0:	jmp    QWORD PTR [rip+0x197f6]        # 0x41eacc
  4052d6:	nop
  4052d7:	nop
  4052d8:	jmp    QWORD PTR [rip+0x197e6]        # 0x41eac4
  4052de:	nop
  4052df:	nop
  4052e0:	jmp    QWORD PTR [rip+0x197d6]        # 0x41eabc
  4052e6:	nop
  4052e7:	nop
  4052e8:	jmp    QWORD PTR [rip+0x197c6]        # 0x41eab4
  4052ee:	nop
  4052ef:	nop
  4052f0:	jmp    QWORD PTR [rip+0x197b6]        # 0x41eaac
  4052f6:	nop
  4052f7:	nop
  4052f8:	jmp    QWORD PTR [rip+0x197a6]        # 0x41eaa4
  4052fe:	nop
  4052ff:	nop
  405300:	jmp    QWORD PTR [rip+0x19796]        # 0x41ea9c
  405306:	nop
  405307:	nop
  405308:	jmp    QWORD PTR [rip+0x19786]        # 0x41ea94
  40530e:	nop
  40530f:	nop
  405310:	jmp    QWORD PTR [rip+0x19776]        # 0x41ea8c
  405316:	nop
  405317:	nop
  405318:	jmp    QWORD PTR [rip+0x19766]        # 0x41ea84
  40531e:	nop
  40531f:	nop
  405320:	jmp    QWORD PTR [rip+0x19756]        # 0x41ea7c
  405326:	nop
  405327:	nop
  405328:	jmp    QWORD PTR [rip+0x19746]        # 0x41ea74
  40532e:	nop
  40532f:	nop
  405330:	jmp    QWORD PTR [rip+0x19736]        # 0x41ea6c
  405336:	nop
  405337:	nop
  405338:	jmp    QWORD PTR [rip+0x19726]        # 0x41ea64
  40533e:	nop
  40533f:	nop
  405340:	jmp    QWORD PTR [rip+0x19716]        # 0x41ea5c
  405346:	nop
  405347:	nop
  405348:	jmp    QWORD PTR [rip+0x19706]        # 0x41ea54
  40534e:	nop
  40534f:	nop
  405350:	jmp    QWORD PTR [rip+0x196f6]        # 0x41ea4c
  405356:	nop
  405357:	nop
  405358:	jmp    QWORD PTR [rip+0x196e6]        # 0x41ea44
  40535e:	nop
  40535f:	nop
  405360:	jmp    QWORD PTR [rip+0x196d6]        # 0x41ea3c
  405366:	nop
  405367:	nop
  405368:	jmp    QWORD PTR [rip+0x196c6]        # 0x41ea34
  40536e:	nop
  40536f:	nop
  405370:	jmp    QWORD PTR [rip+0x196b6]        # 0x41ea2c
  405376:	nop
  405377:	nop
  405378:	jmp    QWORD PTR [rip+0x196a6]        # 0x41ea24
  40537e:	nop
  40537f:	nop
  405380:	jmp    QWORD PTR [rip+0x19696]        # 0x41ea1c
  405386:	nop
  405387:	nop
  405388:	jmp    QWORD PTR [rip+0x19686]        # 0x41ea14
  40538e:	nop
  40538f:	nop
  405390:	jmp    QWORD PTR [rip+0x19676]        # 0x41ea0c
  405396:	nop
  405397:	nop
  405398:	jmp    QWORD PTR [rip+0x19666]        # 0x41ea04
  40539e:	nop
  40539f:	nop
  4053a0:	jmp    QWORD PTR [rip+0x19656]        # 0x41e9fc
  4053a6:	nop
  4053a7:	nop
  4053a8:	jmp    QWORD PTR [rip+0x19646]        # 0x41e9f4
  4053ae:	nop
  4053af:	nop
  4053b0:	jmp    QWORD PTR [rip+0x19636]        # 0x41e9ec
  4053b6:	nop
  4053b7:	nop
  4053b8:	jmp    QWORD PTR [rip+0x19626]        # 0x41e9e4
  4053be:	nop
  4053bf:	nop
  4053c0:	jmp    QWORD PTR [rip+0x19616]        # 0x41e9dc
  4053c6:	nop
  4053c7:	nop
  4053c8:	jmp    QWORD PTR [rip+0x19606]        # 0x41e9d4
  4053ce:	nop
  4053cf:	nop
  4053d0:	jmp    QWORD PTR [rip+0x195f6]        # 0x41e9cc
  4053d6:	nop
  4053d7:	nop
  4053d8:	jmp    QWORD PTR [rip+0x195e6]        # 0x41e9c4
  4053de:	nop
  4053df:	nop
  4053e0:	jmp    QWORD PTR [rip+0x195d6]        # 0x41e9bc
  4053e6:	nop
  4053e7:	nop
  4053e8:	jmp    QWORD PTR [rip+0x195c6]        # 0x41e9b4
  4053ee:	nop
  4053ef:	nop
  4053f0:	jmp    QWORD PTR [rip+0x195b6]        # 0x41e9ac
  4053f6:	nop
  4053f7:	nop
  4053f8:	jmp    QWORD PTR [rip+0x195a6]        # 0x41e9a4
  4053fe:	nop
  4053ff:	nop
  405400:	jmp    QWORD PTR [rip+0x19596]        # 0x41e99c
  405406:	nop
  405407:	nop
  405408:	jmp    QWORD PTR [rip+0x19586]        # 0x41e994
  40540e:	nop
  40540f:	nop
  405410:	jmp    QWORD PTR [rip+0x19576]        # 0x41e98c
  405416:	nop
  405417:	nop
  405418:	jmp    QWORD PTR [rip+0x19566]        # 0x41e984
  40541e:	nop
  40541f:	nop
  405420:	jmp    QWORD PTR [rip+0x19556]        # 0x41e97c
  405426:	nop
  405427:	nop
  405428:	jmp    QWORD PTR [rip+0x19546]        # 0x41e974
  40542e:	nop
  40542f:	nop
  405430:	jmp    QWORD PTR [rip+0x19536]        # 0x41e96c
  405436:	nop
  405437:	nop
  405438:	jmp    QWORD PTR [rip+0x19526]        # 0x41e964
  40543e:	nop
  40543f:	nop
  405440:	jmp    QWORD PTR [rip+0x19516]        # 0x41e95c
  405446:	nop
  405447:	nop
  405448:	jmp    QWORD PTR [rip+0x19506]        # 0x41e954
  40544e:	nop
  40544f:	nop
  405450:	jmp    QWORD PTR [rip+0x194f6]        # 0x41e94c
  405456:	nop
  405457:	nop
  405458:	jmp    QWORD PTR [rip+0x194e6]        # 0x41e944
  40545e:	nop
  40545f:	nop
  405460:	jmp    QWORD PTR [rip+0x194d6]        # 0x41e93c
  405466:	nop
  405467:	nop
  405468:	jmp    QWORD PTR [rip+0x194c6]        # 0x41e934
  40546e:	nop
  40546f:	nop
  405470:	jmp    QWORD PTR [rip+0x194ae]        # 0x41e924
  405476:	nop
  405477:	nop
  405478:	jmp    QWORD PTR [rip+0x1949e]        # 0x41e91c
  40547e:	nop
  40547f:	nop
  405480:	jmp    QWORD PTR [rip+0x1948e]        # 0x41e914
  405486:	nop
  405487:	nop
  405488:	jmp    QWORD PTR [rip+0x1947e]        # 0x41e90c
  40548e:	nop
  40548f:	nop
  405490:	jmp    QWORD PTR [rip+0x1946e]        # 0x41e904
  405496:	nop
  405497:	nop
  405498:	jmp    QWORD PTR [rip+0x1945e]        # 0x41e8fc
  40549e:	nop
  40549f:	nop
  4054a0:	jmp    QWORD PTR [rip+0x1944e]        # 0x41e8f4
  4054a6:	nop
  4054a7:	nop
  4054a8:	jmp    QWORD PTR [rip+0x1943e]        # 0x41e8ec
  4054ae:	nop
  4054af:	nop
  4054b0:	jmp    QWORD PTR [rip+0x1942e]        # 0x41e8e4
  4054b6:	nop
  4054b7:	nop
  4054b8:	jmp    QWORD PTR [rip+0x1941e]        # 0x41e8dc
  4054be:	nop
  4054bf:	nop
  4054c0:	jmp    QWORD PTR [rip+0x1940e]        # 0x41e8d4
  4054c6:	nop
  4054c7:	nop
  4054c8:	jmp    QWORD PTR [rip+0x193fe]        # 0x41e8cc
  4054ce:	nop
  4054cf:	nop
  4054d0:	jmp    QWORD PTR [rip+0x193ee]        # 0x41e8c4
  4054d6:	nop
  4054d7:	nop
  4054d8:	jmp    QWORD PTR [rip+0x193de]        # 0x41e8bc
  4054de:	nop
  4054df:	nop
  4054e0:	jmp    QWORD PTR [rip+0x193ce]        # 0x41e8b4
  4054e6:	nop
  4054e7:	nop
  4054e8:	jmp    QWORD PTR [rip+0x193be]        # 0x41e8ac
  4054ee:	nop
  4054ef:	nop
  4054f0:	jmp    QWORD PTR [rip+0x193ae]        # 0x41e8a4
  4054f6:	nop
  4054f7:	nop
  4054f8:	jmp    QWORD PTR [rip+0x1939e]        # 0x41e89c
  4054fe:	nop
  4054ff:	nop
  405500:	jmp    QWORD PTR [rip+0x1938e]        # 0x41e894
  405506:	nop
  405507:	nop
  405508:	jmp    QWORD PTR [rip+0x19376]        # 0x41e884
  40550e:	nop
  40550f:	nop
  405510:	jmp    QWORD PTR [rip+0x19366]        # 0x41e87c
  405516:	nop
  405517:	nop
  405518:	jmp    QWORD PTR [rip+0x19356]        # 0x41e874
  40551e:	nop
  40551f:	nop
  405520:	jmp    QWORD PTR [rip+0x19346]        # 0x41e86c
  405526:	nop
  405527:	nop
  405528:	jmp    QWORD PTR [rip+0x1932e]        # 0x41e85c
  40552e:	nop
  40552f:	nop
  405530:	jmp    QWORD PTR [rip+0x1931e]        # 0x41e854
  405536:	nop
  405537:	nop
  405538:	jmp    QWORD PTR [rip+0x1930e]        # 0x41e84c
  40553e:	nop
  40553f:	nop
  405540:	jmp    QWORD PTR [rip+0x192ee]        # 0x41e834
  405546:	nop
  405547:	nop
  405548:	jmp    QWORD PTR [rip+0x192de]        # 0x41e82c
  40554e:	nop
  40554f:	nop
  405550:	jmp    QWORD PTR [rip+0x192ce]        # 0x41e824
  405556:	nop
  405557:	nop
  405558:	jmp    QWORD PTR [rip+0x192be]        # 0x41e81c
  40555e:	nop
  40555f:	nop
  405560:	jmp    QWORD PTR [rip+0x192ae]        # 0x41e814
  405566:	nop
  405567:	nop
  405568:	jmp    QWORD PTR [rip+0x1929e]        # 0x41e80c
  40556e:	nop
  40556f:	nop
  405570:	jmp    QWORD PTR [rip+0x1928e]        # 0x41e804
  405576:	nop
  405577:	nop
  405578:	jmp    QWORD PTR [rip+0x1927e]        # 0x41e7fc
  40557e:	nop
  40557f:	nop
  405580:	jmp    QWORD PTR [rip+0x1926e]        # 0x41e7f4
  405586:	nop
  405587:	nop
  405588:	jmp    QWORD PTR [rip+0x19256]        # 0x41e7e4
  40558e:	nop
  40558f:	nop
  405590:	jmp    QWORD PTR [rip+0x19246]        # 0x41e7dc
  405596:	nop
  405597:	nop
  405598:	jmp    QWORD PTR [rip+0x19236]        # 0x41e7d4
  40559e:	nop
  40559f:	nop
  4055a0:	jmp    QWORD PTR [rip+0x1921e]        # 0x41e7c4
  4055a6:	nop
  4055a7:	nop
  4055a8:	jmp    QWORD PTR [rip+0x1920e]        # 0x41e7bc
  4055ae:	nop
  4055af:	nop
  4055b0:	jmp    QWORD PTR [rip+0x191fe]        # 0x41e7b4
  4055b6:	nop
  4055b7:	nop
  4055b8:	jmp    QWORD PTR [rip+0x191ee]        # 0x41e7ac
  4055be:	nop
  4055bf:	nop
  4055c0:	jmp    QWORD PTR [rip+0x191de]        # 0x41e7a4
  4055c6:	nop
  4055c7:	nop
  4055c8:	jmp    QWORD PTR [rip+0x191ce]        # 0x41e79c
  4055ce:	nop
  4055cf:	nop
  4055d0:	jmp    QWORD PTR [rip+0x191be]        # 0x41e794
  4055d6:	nop
  4055d7:	nop
  4055d8:	jmp    QWORD PTR [rip+0x191ae]        # 0x41e78c
  4055de:	nop
  4055df:	nop
  4055e0:	jmp    QWORD PTR [rip+0x1919e]        # 0x41e784
  4055e6:	nop
  4055e7:	nop
  4055e8:	jmp    QWORD PTR [rip+0x1918e]        # 0x41e77c
  4055ee:	nop
  4055ef:	nop
  4055f0:	jmp    QWORD PTR [rip+0x1917e]        # 0x41e774
  4055f6:	nop
  4055f7:	nop
  4055f8:	jmp    QWORD PTR [rip+0x1916e]        # 0x41e76c
  4055fe:	nop
  4055ff:	nop
  405600:	jmp    QWORD PTR [rip+0x1915e]        # 0x41e764
  405606:	nop
  405607:	nop
  405608:	jmp    QWORD PTR [rip+0x1914e]        # 0x41e75c
  40560e:	nop
  40560f:	nop
  405610:	jmp    QWORD PTR [rip+0x1913e]        # 0x41e754
  405616:	nop
  405617:	nop
  405618:	jmp    QWORD PTR [rip+0x1912e]        # 0x41e74c
  40561e:	nop
  40561f:	nop
  405620:	jmp    QWORD PTR [rip+0x1911e]        # 0x41e744
  405626:	nop
  405627:	nop
  405628:	jmp    QWORD PTR [rip+0x1910e]        # 0x41e73c
  40562e:	nop
  40562f:	nop
  405630:	push   rbx
  405631:	sub    rsp,0x30
  405635:	mov    rbx,rcx
  405638:	mov    rcx,QWORD PTR [rip+0x17ad1]        # 0x41d110
  40563f:	call   0x405be0
  405644:	cmp    rax,0xffffffffffffffff
  405648:	mov    QWORD PTR [rsp+0x20],rax
  40564d:	je     0x4056c5
  40564f:	mov    ecx,0x8
  405654:	call   0x406fe0
  405659:	mov    rcx,QWORD PTR [rip+0x17ab0]        # 0x41d110
  405660:	call   0x405be0
  405665:	mov    rcx,QWORD PTR [rip+0x17aac]        # 0x41d118
  40566c:	mov    QWORD PTR [rsp+0x20],rax
  405671:	call   0x405be0
  405676:	lea    rdx,[rsp+0x20]
  40567b:	lea    r8,[rsp+0x28]
  405680:	mov    rcx,rbx
  405683:	mov    QWORD PTR [rsp+0x28],rax
  405688:	call   0x407030
  40568d:	mov    rcx,QWORD PTR [rsp+0x20]
  405692:	mov    rbx,rax
  405695:	call   0x405bf0
  40569a:	mov    rcx,QWORD PTR [rsp+0x28]
  40569f:	mov    QWORD PTR [rip+0x17a6a],rax        # 0x41d110
  4056a6:	call   0x405bf0
  4056ab:	mov    ecx,0x8
  4056b0:	mov    QWORD PTR [rip+0x17a61],rax        # 0x41d118
  4056b7:	call   0x406fc8
  4056bc:	mov    rax,rbx
  4056bf:	add    rsp,0x30
  4056c3:	pop    rbx
  4056c4:	ret    
  4056c5:	mov    rax,QWORD PTR [rip+0x7e84]        # 0x40d550
  4056cc:	mov    rcx,rbx
  4056cf:	call   QWORD PTR [rax]
  4056d1:	add    rsp,0x30
  4056d5:	pop    rbx
  4056d6:	ret    
  4056d7:	nop    WORD PTR [rax+rax*1+0x0]
  4056e0:	sub    rsp,0x28
  4056e4:	call   0x405630
  4056e9:	test   rax,rax
  4056ec:	sete   al
  4056ef:	movzx  eax,al
  4056f2:	neg    eax
  4056f4:	add    rsp,0x28
  4056f8:	ret    
  4056f9:	nop
  4056fa:	nop
  4056fb:	nop
  4056fc:	nop
  4056fd:	nop
  4056fe:	nop
  4056ff:	nop
  405700:	sub    rsp,0x28
  405704:	mov    rax,QWORD PTR [rip+0x4cb5]        # 0x40a3c0
  40570b:	mov    rax,QWORD PTR [rax]
  40570e:	test   rax,rax
  405711:	je     0x405730
  405713:	call   rax
  405715:	mov    rax,QWORD PTR [rip+0x4ca4]        # 0x40a3c0
  40571c:	lea    rdx,[rax+0x8]
  405720:	mov    rax,QWORD PTR [rax+0x8]
  405724:	mov    QWORD PTR [rip+0x4c95],rdx        # 0x40a3c0
  40572b:	test   rax,rax
  40572e:	jne    0x405713
  405730:	add    rsp,0x28
  405734:	ret    
  405735:	nop
  405736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405740:	push   rsi
  405741:	push   rbx
  405742:	sub    rsp,0x28
  405746:	mov    rsi,QWORD PTR [rip+0x7d83]        # 0x40d4d0
  40574d:	mov    rax,QWORD PTR [rsi]
  405750:	cmp    eax,0xffffffff
  405753:	mov    ebx,eax
  405755:	je     0x405780
  405757:	test   ebx,ebx
  405759:	je     0x40576a
  40575b:	nop    DWORD PTR [rax+rax*1+0x0]
  405760:	mov    eax,ebx
  405762:	call   QWORD PTR [rsi+rax*8]
  405765:	sub    ebx,0x1
  405768:	jne    0x405760
  40576a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x405700
  405771:	add    rsp,0x28
  405775:	pop    rbx
  405776:	pop    rsi
  405777:	jmp    0x4056e0
  40577c:	nop    DWORD PTR [rax+0x0]
  405780:	xor    ebx,ebx
  405782:	jmp    0x405786
  405784:	mov    ebx,eax
  405786:	lea    edx,[rbx+0x1]
  405789:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40578e:	mov    rax,rdx
  405791:	jne    0x405784
  405793:	jmp    0x405757
  405795:	nop
  405796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057a0:	mov    eax,DWORD PTR [rip+0x16f9a]        # 0x41c740
  4057a6:	test   eax,eax
  4057a8:	je     0x4057b0
  4057aa:	repz ret 
  4057ac:	nop    DWORD PTR [rax+0x0]
  4057b0:	mov    DWORD PTR [rip+0x16f86],0x1        # 0x41c740
  4057ba:	jmp    0x405740
  4057bc:	nop
  4057bd:	nop
  4057be:	nop
  4057bf:	nop
  4057c0:	mov    rax,QWORD PTR [rip+0x194e5]        # 0x41ecac
  4057c7:	rex.W jmp rax
  4057ca:	nop
  4057cb:	nop
  4057cc:	nop
  4057cd:	nop
  4057ce:	nop
  4057cf:	nop
  4057d0:	xor    eax,eax
  4057d2:	ret    
  4057d3:	nop
  4057d4:	nop
  4057d5:	nop
  4057d6:	nop
  4057d7:	nop
  4057d8:	nop
  4057d9:	nop
  4057da:	nop
  4057db:	nop
  4057dc:	nop
  4057dd:	nop
  4057de:	nop
  4057df:	nop
  4057e0:	push   r12
  4057e2:	push   rbp
  4057e3:	push   rdi
  4057e4:	push   rsi
  4057e5:	push   rbx
  4057e6:	sub    rsp,0x40
  4057ea:	mov    rbx,QWORD PTR [rip+0x4c2f]        # 0x40a420
  4057f1:	movabs rax,0x2b992ddfa232
  4057fb:	mov    QWORD PTR [rsp+0x20],0x0
  405804:	cmp    rbx,rax
  405807:	je     0x405820
  405809:	not    rbx
  40580c:	mov    QWORD PTR [rip+0x4c1d],rbx        # 0x40a430
  405813:	add    rsp,0x40
  405817:	pop    rbx
  405818:	pop    rsi
  405819:	pop    rdi
  40581a:	pop    rbp
  40581b:	pop    r12
  40581d:	ret    
  40581e:	xchg   ax,ax
  405820:	lea    rcx,[rsp+0x20]
  405825:	call   QWORD PTR [rip+0x193c9]        # 0x41ebf4
  40582b:	mov    r12,QWORD PTR [rsp+0x20]
  405830:	call   QWORD PTR [rip+0x19396]        # 0x41ebcc
  405836:	mov    ebp,eax
  405838:	call   QWORD PTR [rip+0x19396]        # 0x41ebd4
  40583e:	mov    edi,eax
  405840:	call   QWORD PTR [rip+0x193b6]        # 0x41ebfc
  405846:	lea    rcx,[rsp+0x30]
  40584b:	mov    esi,eax
  40584d:	call   QWORD PTR [rip+0x193c9]        # 0x41ec1c
  405853:	xor    r12,QWORD PTR [rsp+0x30]
  405858:	mov    edx,edi
  40585a:	movabs rax,0xffffffffffff
  405864:	xor    rbp,r12
  405867:	mov    rdi,rbp
  40586a:	xor    rdi,rdx
  40586d:	mov    edx,esi
  40586f:	xor    rdi,rdx
  405872:	mov    rsi,rdi
  405875:	and    rsi,rax
  405878:	cmp    rsi,rbx
  40587b:	je     0x4058a0
  40587d:	mov    rax,rsi
  405880:	not    rax
  405883:	mov    QWORD PTR [rip+0x4b96],rsi        # 0x40a420
  40588a:	mov    QWORD PTR [rip+0x4b9f],rax        # 0x40a430
  405891:	add    rsp,0x40
  405895:	pop    rbx
  405896:	pop    rsi
  405897:	pop    rdi
  405898:	pop    rbp
  405899:	pop    r12
  40589b:	ret    
  40589c:	nop    DWORD PTR [rax+0x0]
  4058a0:	movabs rax,0xffffd466d2205dcc
  4058aa:	movabs rsi,0x2b992ddfa233
  4058b4:	jmp    0x405883
  4058b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058c0:	push   rbp
  4058c1:	push   rsi
  4058c2:	push   rbx
  4058c3:	mov    rbp,rsp
  4058c6:	sub    rsp,0x70
  4058ca:	mov    rsi,rcx
  4058cd:	lea    rcx,[rip+0x16eac]        # 0x41c780
  4058d4:	call   QWORD PTR [rip+0x19352]        # 0x41ec2c
  4058da:	mov    rbx,QWORD PTR [rip+0x16f97]        # 0x41c878
  4058e1:	xor    r8d,r8d
  4058e4:	lea    rdx,[rbp-0x28]
  4058e8:	mov    rcx,rbx
  4058eb:	call   QWORD PTR [rip+0x19343]        # 0x41ec34
  4058f1:	test   rax,rax
  4058f4:	mov    r9,rax
  4058f7:	je     0x4059a0
  4058fd:	lea    rax,[rbp-0x20]
  405901:	mov    QWORD PTR [rsp+0x38],0x0
  40590a:	mov    r8,rbx
  40590d:	mov    rdx,QWORD PTR [rbp-0x28]
  405911:	xor    ecx,ecx
  405913:	mov    QWORD PTR [rsp+0x30],rax
  405918:	lea    rax,[rbp-0x18]
  40591c:	mov    QWORD PTR [rsp+0x28],rax
  405921:	lea    rax,[rip+0x16e58]        # 0x41c780
  405928:	mov    QWORD PTR [rsp+0x20],rax
  40592d:	call   QWORD PTR [rip+0x19309]        # 0x41ec3c
  405933:	mov    rax,QWORD PTR [rip+0x16f3e]        # 0x41c878
  40593a:	xor    ecx,ecx
  40593c:	mov    QWORD PTR [rip+0x16ebd],rsi        # 0x41c800
  405943:	mov    DWORD PTR [rip+0x17333],0xc0000409        # 0x41cc80
  40594d:	mov    DWORD PTR [rip+0x1732d],0x1        # 0x41cc84
  405957:	mov    QWORD PTR [rip+0x17332],rax        # 0x41cc90
  40595e:	mov    rax,QWORD PTR [rip+0x4abb]        # 0x40a420
  405965:	mov    QWORD PTR [rbp-0x10],rax
  405969:	mov    rax,QWORD PTR [rip+0x4ac0]        # 0x40a430
  405970:	mov    QWORD PTR [rbp-0x8],rax
  405974:	call   QWORD PTR [rip+0x192ca]        # 0x41ec44
  40597a:	lea    rcx,[rip+0x77cf]        # 0x40d150
  405981:	call   QWORD PTR [rip+0x192dd]        # 0x41ec64
  405987:	call   QWORD PTR [rip+0x19237]        # 0x41ebc4
  40598d:	mov    edx,0xc0000409
  405992:	mov    rcx,rax
  405995:	call   QWORD PTR [rip+0x192b9]        # 0x41ec54
  40599b:	call   0x406fb8
  4059a0:	mov    rax,QWORD PTR [rbp+0x18]
  4059a4:	mov    QWORD PTR [rip+0x16ecd],rax        # 0x41c878
  4059ab:	lea    rax,[rbp+0x8]
  4059af:	mov    QWORD PTR [rip+0x16e62],rax        # 0x41c818
  4059b6:	jmp    0x405933
  4059bb:	nop
  4059bc:	nop
  4059bd:	nop
  4059be:	nop
  4059bf:	nop
  4059c0:	sub    rsp,0x28
  4059c4:	test   edx,edx
  4059c6:	je     0x4059e0
  4059c8:	cmp    edx,0x3
  4059cb:	je     0x4059e0
  4059cd:	mov    eax,0x1
  4059d2:	add    rsp,0x28
  4059d6:	ret    
  4059d7:	nop    WORD PTR [rax+rax*1+0x0]
  4059e0:	call   0x4066d0
  4059e5:	mov    eax,0x1
  4059ea:	add    rsp,0x28
  4059ee:	ret    
  4059ef:	nop
  4059f0:	push   rsi
  4059f1:	push   rbx
  4059f2:	sub    rsp,0x28
  4059f6:	mov    rax,QWORD PTR [rip+0x7ab3]        # 0x40d4b0
  4059fd:	cmp    DWORD PTR [rax],0x2
  405a00:	je     0x405a08
  405a02:	mov    DWORD PTR [rax],0x2
  405a08:	cmp    edx,0x2
  405a0b:	je     0x405a20
  405a0d:	cmp    edx,0x1
  405a10:	je     0x405a52
  405a12:	mov    eax,0x1
  405a17:	add    rsp,0x28
  405a1b:	pop    rbx
  405a1c:	pop    rsi
  405a1d:	ret    
  405a1e:	xchg   ax,ax
  405a20:	lea    rbx,[rip+0x1b639]        # 0x421060
  405a27:	lea    rsi,[rip+0x1b632]        # 0x421060
  405a2e:	cmp    rbx,rsi
  405a31:	je     0x405a12
  405a33:	mov    rax,QWORD PTR [rbx]
  405a36:	test   rax,rax
  405a39:	je     0x405a3d
  405a3b:	call   rax
  405a3d:	add    rbx,0x8
  405a41:	cmp    rbx,rsi
  405a44:	jne    0x405a33
  405a46:	mov    eax,0x1
  405a4b:	add    rsp,0x28
  405a4f:	pop    rbx
  405a50:	pop    rsi
  405a51:	ret    
  405a52:	call   0x4066d0
  405a57:	jmp    0x405a12
  405a59:	nop    DWORD PTR [rax+0x0]
  405a60:	xor    eax,eax
  405a62:	ret    
  405a63:	nop
  405a64:	nop
  405a65:	nop
  405a66:	nop
  405a67:	nop
  405a68:	nop
  405a69:	nop
  405a6a:	nop
  405a6b:	nop
  405a6c:	nop
  405a6d:	nop
  405a6e:	nop
  405a6f:	nop
  405a70:	sub    rsp,0x58
  405a74:	mov    rax,QWORD PTR [rip+0x172e5]        # 0x41cd60
  405a7b:	test   rax,rax
  405a7e:	je     0x405aac
  405a80:	movsd  xmm0,QWORD PTR [rsp+0x80]
  405a89:	mov    DWORD PTR [rsp+0x20],ecx
  405a8d:	lea    rcx,[rsp+0x20]
  405a92:	mov    QWORD PTR [rsp+0x28],rdx
  405a97:	movsd  QWORD PTR [rsp+0x30],xmm2
  405a9d:	movsd  QWORD PTR [rsp+0x38],xmm3
  405aa3:	movsd  QWORD PTR [rsp+0x40],xmm0
  405aa9:	call   rax
  405aab:	nop
  405aac:	add    rsp,0x58
  405ab0:	ret    
  405ab1:	nop    DWORD PTR [rax+rax*1+0x0]
  405ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ac0:	mov    QWORD PTR [rip+0x17299],rcx        # 0x41cd60
  405ac7:	jmp    0x407008
  405acc:	nop    DWORD PTR [rax+0x0]
  405ad0:	push   rsi
  405ad1:	push   rbx
  405ad2:	sub    rsp,0x78
  405ad6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  405adb:	movaps XMMWORD PTR [rsp+0x50],xmm7
  405ae0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  405ae6:	cmp    DWORD PTR [rcx],0x6
  405ae9:	ja     0x405bc0
  405aef:	mov    edx,DWORD PTR [rcx]
  405af1:	lea    rax,[rip+0x779c]        # 0x40d294
  405af8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  405afc:	add    rax,rdx
  405aff:	jmp    rax
  405b01:	lea    rbx,[rip+0x7668]        # 0x40d170
  405b08:	nop    DWORD PTR [rax+rax*1+0x0]
  405b10:	movsd  xmm8,QWORD PTR [rcx+0x20]
  405b16:	mov    rsi,QWORD PTR [rcx+0x8]
  405b1a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  405b1f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  405b24:	call   0x407020
  405b29:	movsd  QWORD PTR [rsp+0x30],xmm8
  405b30:	lea    rcx,[rax+0x60]
  405b34:	lea    rdx,[rip+0x772d]        # 0x40d268
  405b3b:	movsd  QWORD PTR [rsp+0x28],xmm7
  405b41:	mov    r9,rsi
  405b44:	mov    r8,rbx
  405b47:	movsd  QWORD PTR [rsp+0x20],xmm6
  405b4d:	call   0x406f88
  405b52:	nop
  405b53:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  405b58:	xor    eax,eax
  405b5a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  405b5f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  405b65:	add    rsp,0x78
  405b69:	pop    rbx
  405b6a:	pop    rsi
  405b6b:	ret    
  405b6c:	nop    DWORD PTR [rax+0x0]
  405b70:	lea    rbx,[rip+0x7618]        # 0x40d18f
  405b77:	jmp    0x405b10
  405b79:	nop    DWORD PTR [rax+0x0]
  405b80:	lea    rbx,[rip+0x7629]        # 0x40d1b0
  405b87:	jmp    0x405b10
  405b89:	nop    DWORD PTR [rax+0x0]
  405b90:	lea    rbx,[rip+0x7689]        # 0x40d220
  405b97:	jmp    0x405b10
  405b9c:	nop    DWORD PTR [rax+0x0]
  405ba0:	lea    rbx,[rip+0x7651]        # 0x40d1f8
  405ba7:	jmp    0x405b10
  405bac:	nop    DWORD PTR [rax+0x0]
  405bb0:	lea    rbx,[rip+0x7619]        # 0x40d1d0
  405bb7:	jmp    0x405b10
  405bbc:	nop    DWORD PTR [rax+0x0]
  405bc0:	lea    rbx,[rip+0x768f]        # 0x40d256
  405bc7:	jmp    0x405b10
  405bcc:	nop
  405bcd:	nop
  405bce:	nop
  405bcf:	nop
  405bd0:	fninit 
  405bd2:	ret    
  405bd3:	nop
  405bd4:	nop
  405bd5:	nop
  405bd6:	nop
  405bd7:	nop
  405bd8:	nop
  405bd9:	nop
  405bda:	nop
  405bdb:	nop
  405bdc:	nop
  405bdd:	nop
  405bde:	nop
  405bdf:	nop
  405be0:	mov    rax,rcx
  405be3:	ret    
  405be4:	xchg   ax,ax
  405be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405bf0:	mov    rax,rcx
  405bf3:	ret    
  405bf4:	nop
  405bf5:	nop
  405bf6:	nop
  405bf7:	nop
  405bf8:	nop
  405bf9:	nop
  405bfa:	nop
  405bfb:	nop
  405bfc:	nop
  405bfd:	nop
  405bfe:	nop
  405bff:	nop
  405c00:	push   rsi
  405c01:	push   rbx
  405c02:	sub    rsp,0x38
  405c06:	lea    rax,[rsp+0x58]
  405c0b:	mov    rbx,rcx
  405c0e:	mov    QWORD PTR [rsp+0x58],rdx
  405c13:	mov    QWORD PTR [rsp+0x60],r8
  405c18:	mov    QWORD PTR [rsp+0x68],r9
  405c1d:	mov    QWORD PTR [rsp+0x28],rax
  405c22:	call   0x407020
  405c27:	lea    rcx,[rip+0x7682]        # 0x40d2b0
  405c2e:	lea    r9,[rax+0x60]
  405c32:	mov    r8d,0x1b
  405c38:	mov    edx,0x1
  405c3d:	call   0x406f58
  405c42:	mov    rsi,QWORD PTR [rsp+0x28]
  405c47:	call   0x407020
  405c4c:	lea    rcx,[rax+0x60]
  405c50:	mov    rdx,rbx
  405c53:	mov    r8,rsi
  405c56:	call   0x406ef0
  405c5b:	call   0x406fb8
  405c60:	nop
  405c61:	nop    DWORD PTR [rax+rax*1+0x0]
  405c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c70:	push   r13
  405c72:	push   r12
  405c74:	push   rbp
  405c75:	push   rdi
  405c76:	push   rsi
  405c77:	push   rbx
  405c78:	sub    rsp,0x58
  405c7c:	movsxd rbp,DWORD PTR [rip+0x17101]        # 0x41cd84
  405c83:	mov    rbx,rcx
  405c86:	mov    rsi,rdx
  405c89:	mov    rdi,r8
  405c8c:	test   ebp,ebp
  405c8e:	jle    0x405d8a
  405c94:	mov    rax,QWORD PTR [rip+0x170ed]        # 0x41cd88
  405c9b:	xor    r9d,r9d
  405c9e:	add    rax,0x8
  405ca2:	mov    r10,QWORD PTR [rax]
  405ca5:	cmp    rbx,r10
  405ca8:	jb     0x405cbe
  405caa:	mov    rdx,QWORD PTR [rax+0x8]
  405cae:	mov    r11d,DWORD PTR [rdx+0x8]
  405cb2:	add    r10,r11
  405cb5:	cmp    rbx,r10
  405cb8:	jb     0x405d70
  405cbe:	add    r9d,0x1
  405cc2:	add    rax,0x18
  405cc6:	cmp    r9d,ebp
  405cc9:	jne    0x405ca2
  405ccb:	mov    rcx,rbx
  405cce:	call   0x4068e0
  405cd3:	test   rax,rax
  405cd6:	mov    r12,rax
  405cd9:	je     0x405dc2
  405cdf:	lea    rbp,[rbp+rbp*2+0x0]
  405ce4:	shl    rbp,0x3
  405ce8:	mov    r13,rbp
  405ceb:	add    r13,QWORD PTR [rip+0x17096]        # 0x41cd88
  405cf2:	mov    QWORD PTR [r13+0x10],rax
  405cf6:	mov    DWORD PTR [r13+0x0],0x0
  405cfe:	call   0x406a00
  405d03:	mov    edx,DWORD PTR [r12+0xc]
  405d08:	mov    r8d,0x30
  405d0e:	add    rax,rdx
  405d11:	lea    rdx,[rsp+0x20]
  405d16:	mov    QWORD PTR [r13+0x8],rax
  405d1a:	mov    rax,QWORD PTR [rip+0x17067]        # 0x41cd88
  405d21:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  405d26:	call   QWORD PTR [rip+0x18f48]        # 0x41ec74
  405d2c:	test   rax,rax
  405d2f:	je     0x405da5
  405d31:	mov    eax,DWORD PTR [rsp+0x44]
  405d35:	lea    edx,[rax-0x4]
  405d38:	and    edx,0xfffffffb
  405d3b:	je     0x405d69
  405d3d:	sub    eax,0x40
  405d40:	and    eax,0xffffffbf
  405d43:	je     0x405d69
  405d45:	mov    r9,rbp
  405d48:	add    r9,QWORD PTR [rip+0x17039]        # 0x41cd88
  405d4f:	mov    r8d,0x40
  405d55:	mov    rdx,QWORD PTR [rsp+0x38]
  405d5a:	mov    rcx,QWORD PTR [rsp+0x20]
  405d5f:	call   QWORD PTR [rip+0x18f07]        # 0x41ec6c
  405d65:	test   eax,eax
  405d67:	je     0x405d91
  405d69:	add    DWORD PTR [rip+0x17014],0x1        # 0x41cd84
  405d70:	mov    r8,rdi
  405d73:	mov    rdx,rsi
  405d76:	mov    rcx,rbx
  405d79:	add    rsp,0x58
  405d7d:	pop    rbx
  405d7e:	pop    rsi
  405d7f:	pop    rdi
  405d80:	pop    rbp
  405d81:	pop    r12
  405d83:	pop    r13
  405d85:	jmp    0x406f40
  405d8a:	xor    ebp,ebp
  405d8c:	jmp    0x405ccb
  405d91:	call   QWORD PTR [rip+0x18e45]        # 0x41ebdc
  405d97:	lea    rcx,[rip+0x758a]        # 0x40d328
  405d9e:	mov    edx,eax
  405da0:	call   0x405c00
  405da5:	mov    rax,QWORD PTR [rip+0x16fdc]        # 0x41cd88
  405dac:	mov    edx,DWORD PTR [r12+0x8]
  405db1:	lea    rcx,[rip+0x7538]        # 0x40d2f0
  405db8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  405dbd:	call   0x405c00
  405dc2:	lea    rcx,[rip+0x7507]        # 0x40d2d0
  405dc9:	mov    rdx,rbx
  405dcc:	call   0x405c00
  405dd1:	nop
  405dd2:	nop    DWORD PTR [rax+0x0]
  405dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405de0:	push   rbp
  405de1:	push   r14
  405de3:	push   r13
  405de5:	push   r12
  405de7:	push   rdi
  405de8:	push   rsi
  405de9:	push   rbx
  405dea:	mov    rbp,rsp
  405ded:	sub    rsp,0x60
  405df1:	mov    ebx,DWORD PTR [rip+0x16f89]        # 0x41cd80
  405df7:	test   ebx,ebx
  405df9:	je     0x405e10
  405dfb:	mov    rsp,rbp
  405dfe:	pop    rbx
  405dff:	pop    rsi
  405e00:	pop    rdi
  405e01:	pop    r12
  405e03:	pop    r13
  405e05:	pop    r14
  405e07:	pop    rbp
  405e08:	ret    
  405e09:	nop    DWORD PTR [rax+0x0]
  405e10:	mov    DWORD PTR [rip+0x16f66],0x1        # 0x41cd80
  405e1a:	call   0x406930
  405e1f:	cdqe   
  405e21:	lea    rax,[rax+rax*2]
  405e25:	lea    rax,[rax*8+0x1e]
  405e2d:	and    rax,0xfffffffffffffff0
  405e31:	call   0x406b50
  405e36:	mov    rsi,QWORD PTR [rip+0x76a3]        # 0x40d4e0
  405e3d:	mov    rbx,QWORD PTR [rip+0x76ac]        # 0x40d4f0
  405e44:	sub    rsp,rax
  405e47:	mov    DWORD PTR [rip+0x16f33],0x0        # 0x41cd84
  405e51:	lea    rax,[rsp+0x20]
  405e56:	mov    QWORD PTR [rip+0x16f2b],rax        # 0x41cd88
  405e5d:	mov    rax,rsi
  405e60:	sub    rax,rbx
  405e63:	cmp    rax,0x7
  405e67:	jle    0x405dfb
  405e69:	cmp    rax,0xb
  405e6d:	jle    0x405e95
  405e6f:	mov    r11d,DWORD PTR [rbx]
  405e72:	test   r11d,r11d
  405e75:	jne    0x405fc0
  405e7b:	mov    r10d,DWORD PTR [rbx+0x4]
  405e7f:	test   r10d,r10d
  405e82:	jne    0x405fc0
  405e88:	mov    r9d,DWORD PTR [rbx+0x8]
  405e8c:	test   r9d,r9d
  405e8f:	jne    0x405eac
  405e91:	add    rbx,0xc
  405e95:	mov    r8d,DWORD PTR [rbx]
  405e98:	test   r8d,r8d
  405e9b:	jne    0x405fc0
  405ea1:	mov    ecx,DWORD PTR [rbx+0x4]
  405ea4:	test   ecx,ecx
  405ea6:	jne    0x405fc0
  405eac:	mov    edx,DWORD PTR [rbx+0x8]
  405eaf:	cmp    edx,0x1
  405eb2:	jne    0x4060cc
  405eb8:	add    rbx,0xc
  405ebc:	cmp    rbx,rsi
  405ebf:	jae    0x405dfb
  405ec5:	mov    r12,QWORD PTR [rip+0x7644]        # 0x40d510
  405ecc:	lea    r13,[rbp-0x30]
  405ed0:	movabs r14,0xffffffff00000000
  405eda:	mov    ecx,DWORD PTR [rbx+0x4]
  405edd:	mov    eax,DWORD PTR [rbx]
  405edf:	movzx  edx,BYTE PTR [rbx+0x8]
  405ee3:	add    rax,r12
  405ee6:	add    rcx,r12
  405ee9:	cmp    edx,0x10
  405eec:	mov    r8,QWORD PTR [rax]
  405eef:	je     0x406036
  405ef5:	jbe    0x405ffd
  405efb:	cmp    edx,0x20
  405efe:	je     0x40607f
  405f04:	cmp    edx,0x40
  405f07:	jne    0x40606b
  405f0d:	sub    r8,rax
  405f10:	mov    rdx,r13
  405f13:	mov    rdi,r13
  405f16:	mov    rax,r8
  405f19:	add    rax,QWORD PTR [rcx]
  405f1c:	mov    r8d,0x8
  405f22:	mov    QWORD PTR [rbp-0x30],rax
  405f26:	call   0x405c70
  405f2b:	add    rbx,0xc
  405f2f:	cmp    rbx,rsi
  405f32:	jb     0x405eda
  405f34:	mov    eax,DWORD PTR [rip+0x16e4a]        # 0x41cd84
  405f3a:	xor    ebx,ebx
  405f3c:	xor    esi,esi
  405f3e:	test   eax,eax
  405f40:	jle    0x405dfb
  405f46:	mov    r14,QWORD PTR [rip+0x18d27]        # 0x41ec74
  405f4d:	lea    r13,[rbp-0x34]
  405f51:	mov    r12,QWORD PTR [rip+0x18d14]        # 0x41ec6c
  405f58:	jmp    0x405f73
  405f5a:	nop    WORD PTR [rax+rax*1+0x0]
  405f60:	add    esi,0x1
  405f63:	add    rbx,0x18
  405f67:	cmp    esi,DWORD PTR [rip+0x16e17]        # 0x41cd84
  405f6d:	jge    0x405dfb
  405f73:	mov    rax,rbx
  405f76:	add    rax,QWORD PTR [rip+0x16e0b]        # 0x41cd88
  405f7d:	mov    edx,DWORD PTR [rax]
  405f7f:	test   edx,edx
  405f81:	je     0x405f60
  405f83:	mov    rcx,QWORD PTR [rax+0x8]
  405f87:	mov    r8d,0x30
  405f8d:	mov    rdx,rdi
  405f90:	call   r14
  405f93:	test   rax,rax
  405f96:	je     0x4060ae
  405f9c:	mov    rax,QWORD PTR [rip+0x16de5]        # 0x41cd88
  405fa3:	mov    r9,r13
  405fa6:	mov    rdx,QWORD PTR [rbp-0x18]
  405faa:	mov    rcx,QWORD PTR [rbp-0x30]
  405fae:	mov    r8d,DWORD PTR [rax+rbx*1]
  405fb2:	call   r12
  405fb5:	jmp    0x405f60
  405fb7:	nop    WORD PTR [rax+rax*1+0x0]
  405fc0:	cmp    rbx,rsi
  405fc3:	jae    0x405dfb
  405fc9:	mov    r12,QWORD PTR [rip+0x7540]        # 0x40d510
  405fd0:	lea    rdi,[rbp-0x30]
  405fd4:	mov    ecx,DWORD PTR [rbx+0x4]
  405fd7:	mov    eax,DWORD PTR [rbx]
  405fd9:	mov    r8d,0x4
  405fdf:	mov    rdx,rdi
  405fe2:	add    rbx,0x8
  405fe6:	add    rcx,r12
  405fe9:	add    eax,DWORD PTR [rcx]
  405feb:	mov    DWORD PTR [rbp-0x30],eax
  405fee:	call   0x405c70
  405ff3:	cmp    rbx,rsi
  405ff6:	jb     0x405fd4
  405ff8:	jmp    0x405f34
  405ffd:	cmp    edx,0x8
  406000:	jne    0x40606b
  406002:	movzx  edx,BYTE PTR [rcx]
  406005:	mov    rdi,r13
  406008:	mov    r10,rdx
  40600b:	or     r10,0xffffffffffffff00
  406012:	test   dl,dl
  406014:	cmovs  rdx,r10
  406018:	sub    rdx,rax
  40601b:	lea    rax,[r8+rdx*1]
  40601f:	mov    r8d,0x1
  406025:	mov    rdx,r13
  406028:	mov    QWORD PTR [rbp-0x30],rax
  40602c:	call   0x405c70
  406031:	jmp    0x405f2b
  406036:	movzx  edx,WORD PTR [rcx]
  406039:	mov    rdi,r13
  40603c:	mov    r10,rdx
  40603f:	or     r10,0xffffffffffff0000
  406046:	test   dx,dx
  406049:	cmovs  rdx,r10
  40604d:	sub    rdx,rax
  406050:	lea    rax,[r8+rdx*1]
  406054:	mov    r8d,0x2
  40605a:	mov    rdx,r13
  40605d:	mov    QWORD PTR [rbp-0x30],rax
  406061:	call   0x405c70
  406066:	jmp    0x405f2b
  40606b:	lea    rcx,[rip+0x7316]        # 0x40d388
  406072:	mov    QWORD PTR [rbp-0x30],0x0
  40607a:	call   0x405c00
  40607f:	mov    edx,DWORD PTR [rcx]
  406081:	mov    rdi,r13
  406084:	mov    r10,rdx
  406087:	or     r10,r14
  40608a:	test   edx,edx
  40608c:	cmovs  rdx,r10
  406090:	sub    rdx,rax
  406093:	lea    rax,[r8+rdx*1]
  406097:	mov    r8d,0x4
  40609d:	mov    rdx,r13
  4060a0:	mov    QWORD PTR [rbp-0x30],rax
  4060a4:	call   0x405c70
  4060a9:	jmp    0x405f2b
  4060ae:	add    rbx,QWORD PTR [rip+0x16cd3]        # 0x41cd88
  4060b5:	lea    rcx,[rip+0x7234]        # 0x40d2f0
  4060bc:	mov    rax,QWORD PTR [rbx+0x10]
  4060c0:	mov    r8,QWORD PTR [rbx+0x8]
  4060c4:	mov    edx,DWORD PTR [rax+0x8]
  4060c7:	call   0x405c00
  4060cc:	lea    rcx,[rip+0x727d]        # 0x40d350
  4060d3:	call   0x405c00
  4060d8:	nop
  4060d9:	nop
  4060da:	nop
  4060db:	nop
  4060dc:	nop
  4060dd:	nop
  4060de:	nop
  4060df:	nop
  4060e0:	sub    rsp,0x28
  4060e4:	mov    eax,DWORD PTR [rcx]
  4060e6:	cmp    eax,0xc0000091
  4060eb:	ja     0x406150
  4060ed:	cmp    eax,0xc000008d
  4060f2:	jae    0x40616f
  4060f4:	cmp    eax,0xc0000008
  4060f9:	je     0x406210
  4060ff:	ja     0x4061e0
  406105:	cmp    eax,0x80000002
  40610a:	je     0x406210
  406110:	cmp    eax,0xc0000005
  406115:	jne    0x4061ee
  40611b:	xor    edx,edx
  40611d:	mov    ecx,0xb
  406122:	call   0x406f18
  406127:	cmp    rax,0x1
  40612b:	je     0x406270
  406131:	test   rax,rax
  406134:	je     0x406250
  40613a:	mov    ecx,0xb
  40613f:	call   rax
  406141:	xor    eax,eax
  406143:	add    rsp,0x28
  406147:	ret    
  406148:	nop    DWORD PTR [rax+rax*1+0x0]
  406150:	cmp    eax,0xc0000094
  406155:	je     0x406220
  40615b:	ja     0x4061a0
  40615d:	cmp    eax,0xc0000092
  406162:	je     0x406210
  406168:	cmp    eax,0xc0000093
  40616d:	jne    0x4061ee
  40616f:	xor    edx,edx
  406171:	mov    ecx,0x8
  406176:	call   0x406f18
  40617b:	cmp    rax,0x1
  40617f:	mov    rdx,rax
  406182:	je     0x4061f8
  406184:	test   rdx,rdx
  406187:	mov    eax,0x1
  40618c:	je     0x406143
  40618e:	mov    ecx,0x8
  406193:	call   rdx
  406195:	xor    eax,eax
  406197:	add    rsp,0x28
  40619b:	ret    
  40619c:	nop    DWORD PTR [rax+0x0]
  4061a0:	cmp    eax,0xc0000095
  4061a5:	je     0x406210
  4061a7:	cmp    eax,0xc0000096
  4061ac:	jne    0x4061ee
  4061ae:	xor    edx,edx
  4061b0:	mov    ecx,0x4
  4061b5:	call   0x406f18
  4061ba:	cmp    rax,0x1
  4061be:	je     0x40625a
  4061c4:	test   rax,rax
  4061c7:	je     0x406250
  4061cd:	mov    ecx,0x4
  4061d2:	call   rax
  4061d4:	xor    eax,eax
  4061d6:	jmp    0x406143
  4061db:	nop    DWORD PTR [rax+rax*1+0x0]
  4061e0:	cmp    eax,0xc000001d
  4061e5:	je     0x4061ae
  4061e7:	cmp    eax,0xc000008c
  4061ec:	je     0x406210
  4061ee:	mov    eax,0x1
  4061f3:	add    rsp,0x28
  4061f7:	ret    
  4061f8:	mov    edx,0x1
  4061fd:	mov    ecx,0x8
  406202:	call   0x406f18
  406207:	call   0x405bd0
  40620c:	nop    DWORD PTR [rax+0x0]
  406210:	xor    eax,eax
  406212:	add    rsp,0x28
  406216:	ret    
  406217:	nop    WORD PTR [rax+rax*1+0x0]
  406220:	xor    edx,edx
  406222:	mov    ecx,0x8
  406227:	call   0x406f18
  40622c:	cmp    rax,0x1
  406230:	mov    rdx,rax
  406233:	jne    0x406184
  406239:	mov    edx,0x1
  40623e:	mov    ecx,0x8
  406243:	call   0x406f18
  406248:	xor    eax,eax
  40624a:	jmp    0x406143
  40624f:	nop
  406250:	mov    eax,0x4
  406255:	add    rsp,0x28
  406259:	ret    
  40625a:	mov    edx,0x1
  40625f:	mov    ecx,0x4
  406264:	call   0x406f18
  406269:	xor    eax,eax
  40626b:	jmp    0x406143
  406270:	mov    edx,0x1
  406275:	mov    ecx,0xb
  40627a:	call   0x406f18
  40627f:	xor    eax,eax
  406281:	jmp    0x406143
  406286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406290:	push   r12
  406292:	push   rbp
  406293:	push   rdi
  406294:	push   rsi
  406295:	push   rbx
  406296:	sub    rsp,0x20
  40629a:	call   0x406a00
  40629f:	mov    rbp,rax
  4062a2:	mov    eax,DWORD PTR [rip+0x16b20]        # 0x41cdc8
  4062a8:	test   eax,eax
  4062aa:	jne    0x4062d1
  4062ac:	test   rbp,rbp
  4062af:	je     0x4062d1
  4062b1:	lea    rcx,[rip+0x7108]        # 0x40d3c0
  4062b8:	mov    DWORD PTR [rip+0x16b06],0x1        # 0x41cdc8
  4062c2:	call   0x406840
  4062c7:	test   rax,rax
  4062ca:	je     0x4062e0
  4062cc:	mov    eax,0x1
  4062d1:	add    rsp,0x20
  4062d5:	pop    rbx
  4062d6:	pop    rsi
  4062d7:	pop    rdi
  4062d8:	pop    rbp
  4062d9:	pop    r12
  4062db:	ret    
  4062dc:	nop    DWORD PTR [rax+0x0]
  4062e0:	lea    rbx,[rip+0x16c19]        # 0x41cf00
  4062e7:	mov    ecx,0x30
  4062ec:	lea    rdx,[rip+0x16b0d]        # 0x41ce00
  4062f3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x4060e0
  4062fa:	xor    esi,esi
  4062fc:	mov    rdi,rbx
  4062ff:	rep stos QWORD PTR es:[rdi],rax
  406302:	mov    rdi,rdx
  406305:	sub    r12,rbp
  406308:	mov    cl,0x20
  40630a:	rep stos QWORD PTR es:[rdi],rax
  40630d:	mov    rdi,rdx
  406310:	jmp    0x406340
  406312:	mov    BYTE PTR [rdi],0x9
  406315:	mov    DWORD PTR [rdi+0x4],r12d
  406319:	add    rsi,0x1
  40631d:	mov    edx,DWORD PTR [rax+0xc]
  406320:	add    rbx,0xc
  406324:	mov    DWORD PTR [rbx-0xc],edx
  406327:	add    edx,DWORD PTR [rax+0x8]
  40632a:	mov    rax,rdi
  40632d:	sub    rax,rbp
  406330:	add    rdi,0x8
  406334:	mov    DWORD PTR [rbx-0x4],eax
  406337:	mov    DWORD PTR [rbx-0x8],edx
  40633a:	cmp    rsi,0x20
  40633e:	je     0x406375
  406340:	mov    rcx,rsi
  406343:	call   0x406970
  406348:	test   rax,rax
  40634b:	jne    0x406312
  40634d:	test   rsi,rsi
  406350:	je     0x4062cc
  406356:	mov    edx,esi
  406358:	nop    DWORD PTR [rax+rax*1+0x0]
  406360:	mov    r8,rbp
  406363:	lea    rcx,[rip+0x16b96]        # 0x41cf00
  40636a:	call   QWORD PTR [rip+0x188b4]        # 0x41ec24
  406370:	jmp    0x4062cc
  406375:	mov    edx,0x20
  40637a:	jmp    0x406360
  40637c:	nop    DWORD PTR [rax+0x0]
  406380:	push   rbx
  406381:	sub    rsp,0x20
  406385:	mov    rdx,QWORD PTR [rcx]
  406388:	mov    eax,DWORD PTR [rdx]
  40638a:	mov    r8d,eax
  40638d:	and    r8d,0x20ffffff
  406394:	cmp    r8d,0x20474343
  40639b:	je     0x4064a0
  4063a1:	cmp    eax,0xc0000091
  4063a6:	mov    rbx,rcx
  4063a9:	ja     0x406430
  4063af:	cmp    eax,0xc000008d
  4063b4:	jae    0x406447
  4063ba:	cmp    eax,0xc0000008
  4063bf:	je     0x4063f3
  4063c1:	ja     0x406400
  4063c3:	cmp    eax,0x80000002
  4063c8:	je     0x4063f3
  4063ca:	cmp    eax,0xc0000005
  4063cf:	jne    0x406412
  4063d1:	xor    edx,edx
  4063d3:	mov    ecx,0xb
  4063d8:	call   0x406f18
  4063dd:	cmp    rax,0x1
  4063e1:	je     0x406510
  4063e7:	test   rax,rax
  4063ea:	je     0x406412
  4063ec:	mov    ecx,0xb
  4063f1:	call   rax
  4063f3:	mov    eax,0xffffffff
  4063f8:	add    rsp,0x20
  4063fc:	pop    rbx
  4063fd:	ret    
  4063fe:	xchg   ax,ax
  406400:	cmp    eax,0xc000001d
  406405:	je     0x4064c6
  40640b:	cmp    eax,0xc000008c
  406410:	je     0x4063f3
  406412:	mov    rax,QWORD PTR [rip+0x169a7]        # 0x41cdc0
  406419:	test   rax,rax
  40641c:	je     0x4063f8
  40641e:	mov    rcx,rbx
  406421:	add    rsp,0x20
  406425:	pop    rbx
  406426:	rex.W jmp rax
  406429:	nop    DWORD PTR [rax+0x0]
  406430:	cmp    eax,0xc0000094
  406435:	je     0x406472
  406437:	ja     0x4064b0
  406439:	cmp    eax,0xc0000092
  40643e:	je     0x4063f3
  406440:	cmp    eax,0xc0000093
  406445:	jne    0x406412
  406447:	xor    edx,edx
  406449:	mov    ecx,0x8
  40644e:	call   0x406f18
  406453:	cmp    rax,0x1
  406457:	jne    0x406484
  406459:	mov    edx,0x1
  40645e:	mov    ecx,0x8
  406463:	call   0x406f18
  406468:	call   0x405bd0
  40646d:	jmp    0x4063f3
  406472:	xor    edx,edx
  406474:	mov    ecx,0x8
  406479:	call   0x406f18
  40647e:	cmp    rax,0x1
  406482:	je     0x4064f2
  406484:	test   rax,rax
  406487:	je     0x406412
  406489:	mov    ecx,0x8
  40648e:	call   rax
  406490:	mov    eax,0xffffffff
  406495:	jmp    0x4063f8
  40649a:	nop    WORD PTR [rax+rax*1+0x0]
  4064a0:	test   BYTE PTR [rdx+0x4],0x1
  4064a4:	jne    0x4063a1
  4064aa:	jmp    0x4063f3
  4064af:	nop
  4064b0:	cmp    eax,0xc0000095
  4064b5:	je     0x4063f3
  4064bb:	cmp    eax,0xc0000096
  4064c0:	jne    0x406412
  4064c6:	xor    edx,edx
  4064c8:	mov    ecx,0x4
  4064cd:	call   0x406f18
  4064d2:	cmp    rax,0x1
  4064d6:	je     0x406524
  4064d8:	test   rax,rax
  4064db:	je     0x406412
  4064e1:	mov    ecx,0x4
  4064e6:	call   rax
  4064e8:	mov    eax,0xffffffff
  4064ed:	jmp    0x4063f8
  4064f2:	mov    edx,0x1
  4064f7:	mov    ecx,0x8
  4064fc:	call   0x406f18
  406501:	jmp    0x4063f3
  406506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406510:	mov    edx,0x1
  406515:	mov    ecx,0xb
  40651a:	call   0x406f18
  40651f:	jmp    0x4063f3
  406524:	mov    edx,0x1
  406529:	mov    ecx,0x4
  40652e:	call   0x406f18
  406533:	jmp    0x4063f3
  406538:	nop
  406539:	nop
  40653a:	nop
  40653b:	nop
  40653c:	nop
  40653d:	nop
  40653e:	nop
  40653f:	nop
  406540:	push   rbp
  406541:	push   rdi
  406542:	push   rsi
  406543:	push   rbx
  406544:	sub    rsp,0x28
  406548:	lea    rcx,[rip+0x16b51]        # 0x41d0a0
  40654f:	call   QWORD PTR [rip+0x18667]        # 0x41ebbc
  406555:	mov    rbx,QWORD PTR [rip+0x16b24]        # 0x41d080
  40655c:	test   rbx,rbx
  40655f:	je     0x406594
  406561:	mov    rbp,QWORD PTR [rip+0x186f4]        # 0x41ec5c
  406568:	mov    rdi,QWORD PTR [rip+0x1866d]        # 0x41ebdc
  40656f:	nop
  406570:	mov    ecx,DWORD PTR [rbx]
  406572:	call   rbp
  406574:	mov    rsi,rax
  406577:	call   rdi
  406579:	test   eax,eax
  40657b:	jne    0x40658b
  40657d:	test   rsi,rsi
  406580:	je     0x40658b
  406582:	mov    rax,QWORD PTR [rbx+0x8]
  406586:	mov    rcx,rsi
  406589:	call   rax
  40658b:	mov    rbx,QWORD PTR [rbx+0x10]
  40658f:	test   rbx,rbx
  406592:	jne    0x406570
  406594:	mov    rax,QWORD PTR [rip+0x18679]        # 0x41ec14
  40659b:	lea    rcx,[rip+0x16afe]        # 0x41d0a0
  4065a2:	add    rsp,0x28
  4065a6:	pop    rbx
  4065a7:	pop    rsi
  4065a8:	pop    rdi
  4065a9:	pop    rbp
  4065aa:	rex.W jmp rax
  4065ad:	nop    DWORD PTR [rax]
  4065b0:	push   rdi
  4065b1:	push   rsi
  4065b2:	push   rbx
  4065b3:	sub    rsp,0x20
  4065b7:	mov    eax,DWORD PTR [rip+0x16acb]        # 0x41d088
  4065bd:	test   eax,eax
  4065bf:	jne    0x4065d0
  4065c1:	add    rsp,0x20
  4065c5:	pop    rbx
  4065c6:	pop    rsi
  4065c7:	pop    rdi
  4065c8:	ret    
  4065c9:	nop    DWORD PTR [rax+0x0]
  4065d0:	mov    rsi,rdx
  4065d3:	mov    edi,ecx
  4065d5:	mov    edx,0x18
  4065da:	mov    ecx,0x1
  4065df:	call   0x406fa8
  4065e4:	test   rax,rax
  4065e7:	mov    rbx,rax
  4065ea:	je     0x406628
  4065ec:	mov    DWORD PTR [rax],edi
  4065ee:	mov    QWORD PTR [rax+0x8],rsi
  4065f2:	lea    rcx,[rip+0x16aa7]        # 0x41d0a0
  4065f9:	call   QWORD PTR [rip+0x185bd]        # 0x41ebbc
  4065ff:	mov    rax,QWORD PTR [rip+0x16a7a]        # 0x41d080
  406606:	lea    rcx,[rip+0x16a93]        # 0x41d0a0
  40660d:	mov    QWORD PTR [rip+0x16a6c],rbx        # 0x41d080
  406614:	mov    QWORD PTR [rbx+0x10],rax
  406618:	call   QWORD PTR [rip+0x185f6]        # 0x41ec14
  40661e:	xor    eax,eax
  406620:	add    rsp,0x20
  406624:	pop    rbx
  406625:	pop    rsi
  406626:	pop    rdi
  406627:	ret    
  406628:	mov    eax,0xffffffff
  40662d:	jmp    0x4065c1
  40662f:	nop
  406630:	push   rbx
  406631:	sub    rsp,0x20
  406635:	mov    eax,DWORD PTR [rip+0x16a4d]        # 0x41d088
  40663b:	test   eax,eax
  40663d:	jne    0x406650
  40663f:	xor    eax,eax
  406641:	add    rsp,0x20
  406645:	pop    rbx
  406646:	ret    
  406647:	nop    WORD PTR [rax+rax*1+0x0]
  406650:	mov    ebx,ecx
  406652:	lea    rcx,[rip+0x16a47]        # 0x41d0a0
  406659:	call   QWORD PTR [rip+0x1855d]        # 0x41ebbc
  40665f:	mov    rdx,QWORD PTR [rip+0x16a1a]        # 0x41d080
  406666:	test   rdx,rdx
  406669:	je     0x406687
  40666b:	mov    eax,DWORD PTR [rdx]
  40666d:	cmp    eax,ebx
  40666f:	jne    0x40667e
  406671:	jmp    0x4066bf
  406673:	mov    r8d,DWORD PTR [rax]
  406676:	cmp    r8d,ebx
  406679:	je     0x4066a0
  40667b:	mov    rdx,rax
  40667e:	mov    rax,QWORD PTR [rdx+0x10]
  406682:	test   rax,rax
  406685:	jne    0x406673
  406687:	lea    rcx,[rip+0x16a12]        # 0x41d0a0
  40668e:	call   QWORD PTR [rip+0x18580]        # 0x41ec14
  406694:	xor    eax,eax
  406696:	add    rsp,0x20
  40669a:	pop    rbx
  40669b:	ret    
  40669c:	nop    DWORD PTR [rax+0x0]
  4066a0:	mov    rcx,rax
  4066a3:	mov    rax,QWORD PTR [rax+0x10]
  4066a7:	mov    QWORD PTR [rdx+0x10],rax
  4066ab:	call   0x406f68
  4066b0:	lea    rcx,[rip+0x169e9]        # 0x41d0a0
  4066b7:	call   QWORD PTR [rip+0x18557]        # 0x41ec14
  4066bd:	jmp    0x406694
  4066bf:	mov    rax,QWORD PTR [rdx+0x10]
  4066c3:	mov    rcx,rdx
  4066c6:	mov    QWORD PTR [rip+0x169b3],rax        # 0x41d080
  4066cd:	jmp    0x4066ab
  4066cf:	nop
  4066d0:	push   rbx
  4066d1:	sub    rsp,0x20
  4066d5:	cmp    edx,0x1
  4066d8:	je     0x406770
  4066de:	jb     0x406710
  4066e0:	cmp    edx,0x2
  4066e3:	je     0x406700
  4066e5:	cmp    edx,0x3
  4066e8:	jne    0x406705
  4066ea:	mov    eax,DWORD PTR [rip+0x16998]        # 0x41d088
  4066f0:	test   eax,eax
  4066f2:	je     0x406705
  4066f4:	call   0x406540
  4066f9:	jmp    0x406705
  4066fb:	nop    DWORD PTR [rax+rax*1+0x0]
  406700:	call   0x405bd0
  406705:	mov    eax,0x1
  40670a:	add    rsp,0x20
  40670e:	pop    rbx
  40670f:	ret    
  406710:	mov    eax,DWORD PTR [rip+0x16972]        # 0x41d088
  406716:	test   eax,eax
  406718:	jne    0x4067a0
  40671e:	mov    eax,DWORD PTR [rip+0x16964]        # 0x41d088
  406724:	cmp    eax,0x1
  406727:	jne    0x406705
  406729:	mov    rcx,QWORD PTR [rip+0x16950]        # 0x41d080
  406730:	test   rcx,rcx
  406733:	je     0x406746
  406735:	mov    rbx,QWORD PTR [rcx+0x10]
  406739:	call   0x406f68
  40673e:	test   rbx,rbx
  406741:	mov    rcx,rbx
  406744:	jne    0x406735
  406746:	lea    rcx,[rip+0x16953]        # 0x41d0a0
  40674d:	mov    QWORD PTR [rip+0x16928],0x0        # 0x41d080
  406758:	mov    DWORD PTR [rip+0x16926],0x0        # 0x41d088
  406762:	call   QWORD PTR [rip+0x1844c]        # 0x41ebb4
  406768:	jmp    0x406705
  40676a:	nop    WORD PTR [rax+rax*1+0x0]
  406770:	mov    eax,DWORD PTR [rip+0x16912]        # 0x41d088
  406776:	test   eax,eax
  406778:	je     0x406790
  40677a:	mov    eax,0x1
  40677f:	mov    DWORD PTR [rip+0x168ff],0x1        # 0x41d088
  406789:	add    rsp,0x20
  40678d:	pop    rbx
  40678e:	ret    
  40678f:	nop
  406790:	lea    rcx,[rip+0x16909]        # 0x41d0a0
  406797:	call   QWORD PTR [rip+0x1846f]        # 0x41ec0c
  40679d:	jmp    0x40677a
  40679f:	nop
  4067a0:	call   0x406540
  4067a5:	jmp    0x40671e
  4067aa:	nop
  4067ab:	nop
  4067ac:	nop
  4067ad:	nop
  4067ae:	nop
  4067af:	nop
  4067b0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4067b4:	add    rcx,rax
  4067b7:	xor    eax,eax
  4067b9:	cmp    DWORD PTR [rcx],0x4550
  4067bf:	je     0x4067c3
  4067c1:	repz ret 
  4067c3:	xor    eax,eax
  4067c5:	cmp    WORD PTR [rcx+0x18],0x20b
  4067cb:	sete   al
  4067ce:	ret    
  4067cf:	nop
  4067d0:	cmp    WORD PTR [rcx],0x5a4d
  4067d5:	je     0x4067e0
  4067d7:	xor    eax,eax
  4067d9:	ret    
  4067da:	nop    WORD PTR [rax+rax*1+0x0]
  4067e0:	jmp    0x4067b0
  4067e2:	nop    DWORD PTR [rax+0x0]
  4067e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067f0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4067f4:	add    rcx,rax
  4067f7:	movzx  eax,WORD PTR [rcx+0x14]
  4067fb:	lea    rax,[rcx+rax*1+0x18]
  406800:	movzx  ecx,WORD PTR [rcx+0x6]
  406804:	test   ecx,ecx
  406806:	je     0x406831
  406808:	sub    ecx,0x1
  40680b:	lea    rcx,[rcx+rcx*4]
  40680f:	lea    r9,[rax+rcx*8+0x28]
  406814:	mov    r8d,DWORD PTR [rax+0xc]
  406818:	cmp    r8,rdx
  40681b:	mov    rcx,r8
  40681e:	ja     0x406828
  406820:	add    ecx,DWORD PTR [rax+0x8]
  406823:	cmp    rdx,rcx
  406826:	jb     0x406833
  406828:	add    rax,0x28
  40682c:	cmp    rax,r9
  40682f:	jne    0x406814
  406831:	xor    eax,eax
  406833:	repz ret 
  406835:	nop
  406836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406840:	push   rdi
  406841:	push   rsi
  406842:	push   rbx
  406843:	sub    rsp,0x20
  406847:	mov    rsi,rcx
  40684a:	call   0x406f00
  40684f:	cmp    rax,0x8
  406853:	ja     0x406870
  406855:	mov    rbx,QWORD PTR [rip+0x6cb4]        # 0x40d510
  40685c:	xor    edi,edi
  40685e:	cmp    WORD PTR [rbx],0x5a4d
  406863:	je     0x406880
  406865:	mov    rax,rdi
  406868:	add    rsp,0x20
  40686c:	pop    rbx
  40686d:	pop    rsi
  40686e:	pop    rdi
  40686f:	ret    
  406870:	xor    edi,edi
  406872:	mov    rax,rdi
  406875:	add    rsp,0x20
  406879:	pop    rbx
  40687a:	pop    rsi
  40687b:	pop    rdi
  40687c:	ret    
  40687d:	nop    DWORD PTR [rax]
  406880:	mov    rcx,rbx
  406883:	call   0x4067b0
  406888:	test   eax,eax
  40688a:	je     0x406865
  40688c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  406890:	add    rdx,rbx
  406893:	movzx  eax,WORD PTR [rdx+0x14]
  406897:	lea    rbx,[rdx+rax*1+0x18]
  40689c:	movzx  eax,WORD PTR [rdx+0x6]
  4068a0:	test   eax,eax
  4068a2:	je     0x406865
  4068a4:	sub    eax,0x1
  4068a7:	lea    rax,[rax+rax*4]
  4068ab:	lea    rdi,[rbx+rax*8+0x28]
  4068b0:	jmp    0x4068bb
  4068b2:	add    rbx,0x28
  4068b6:	cmp    rbx,rdi
  4068b9:	je     0x406870
  4068bb:	mov    r8d,0x8
  4068c1:	mov    rdx,rsi
  4068c4:	mov    rcx,rbx
  4068c7:	call   0x406ef8
  4068cc:	test   eax,eax
  4068ce:	jne    0x4068b2
  4068d0:	mov    rdi,rbx
  4068d3:	mov    rax,rdi
  4068d6:	add    rsp,0x20
  4068da:	pop    rbx
  4068db:	pop    rsi
  4068dc:	pop    rdi
  4068dd:	ret    
  4068de:	xchg   ax,ax
  4068e0:	push   rsi
  4068e1:	push   rbx
  4068e2:	sub    rsp,0x28
  4068e6:	mov    rbx,QWORD PTR [rip+0x6c23]        # 0x40d510
  4068ed:	cmp    WORD PTR [rbx],0x5a4d
  4068f2:	je     0x406900
  4068f4:	xor    eax,eax
  4068f6:	add    rsp,0x28
  4068fa:	pop    rbx
  4068fb:	pop    rsi
  4068fc:	ret    
  4068fd:	nop    DWORD PTR [rax]
  406900:	mov    rsi,rcx
  406903:	mov    rcx,rbx
  406906:	call   0x4067b0
  40690b:	test   eax,eax
  40690d:	je     0x4068f4
  40690f:	sub    rsi,rbx
  406912:	mov    rcx,rbx
  406915:	mov    rdx,rsi
  406918:	add    rsp,0x28
  40691c:	pop    rbx
  40691d:	pop    rsi
  40691e:	jmp    0x4067f0
  406923:	nop    DWORD PTR [rax]
  406926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406930:	push   rbx
  406931:	sub    rsp,0x20
  406935:	mov    rbx,QWORD PTR [rip+0x6bd4]        # 0x40d510
  40693c:	xor    eax,eax
  40693e:	cmp    WORD PTR [rbx],0x5a4d
  406943:	je     0x406950
  406945:	add    rsp,0x20
  406949:	pop    rbx
  40694a:	ret    
  40694b:	nop    DWORD PTR [rax+rax*1+0x0]
  406950:	mov    rcx,rbx
  406953:	call   0x4067b0
  406958:	test   eax,eax
  40695a:	je     0x406945
  40695c:	movsxd rax,DWORD PTR [rbx+0x3c]
  406960:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  406965:	add    rsp,0x20
  406969:	pop    rbx
  40696a:	ret    
  40696b:	nop    DWORD PTR [rax+rax*1+0x0]
  406970:	push   rdi
  406971:	push   rsi
  406972:	push   rbx
  406973:	sub    rsp,0x20
  406977:	mov    rsi,QWORD PTR [rip+0x6b92]        # 0x40d510
  40697e:	xor    edi,edi
  406980:	mov    rbx,rcx
  406983:	cmp    WORD PTR [rsi],0x5a4d
  406988:	je     0x406995
  40698a:	mov    rax,rdi
  40698d:	add    rsp,0x20
  406991:	pop    rbx
  406992:	pop    rsi
  406993:	pop    rdi
  406994:	ret    
  406995:	mov    rcx,rsi
  406998:	call   0x4067b0
  40699d:	test   eax,eax
  40699f:	je     0x40698a
  4069a1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4069a5:	add    rsi,rax
  4069a8:	movzx  eax,WORD PTR [rsi+0x14]
  4069ac:	lea    rdx,[rsi+rax*1+0x18]
  4069b1:	movzx  eax,WORD PTR [rsi+0x6]
  4069b5:	test   eax,eax
  4069b7:	je     0x40698a
  4069b9:	sub    eax,0x1
  4069bc:	lea    rax,[rax+rax*4]
  4069c0:	lea    rax,[rdx+rax*8+0x28]
  4069c5:	test   BYTE PTR [rdx+0x27],0x20
  4069c9:	je     0x4069d4
  4069cb:	test   rbx,rbx
  4069ce:	je     0x4069f0
  4069d0:	sub    rbx,0x1
  4069d4:	add    rdx,0x28
  4069d8:	cmp    rdx,rax
  4069db:	jne    0x4069c5
  4069dd:	xor    edi,edi
  4069df:	mov    rax,rdi
  4069e2:	add    rsp,0x20
  4069e6:	pop    rbx
  4069e7:	pop    rsi
  4069e8:	pop    rdi
  4069e9:	ret    
  4069ea:	nop    WORD PTR [rax+rax*1+0x0]
  4069f0:	mov    rdi,rdx
  4069f3:	mov    rax,rdi
  4069f6:	add    rsp,0x20
  4069fa:	pop    rbx
  4069fb:	pop    rsi
  4069fc:	pop    rdi
  4069fd:	ret    
  4069fe:	xchg   ax,ax
  406a00:	push   rsi
  406a01:	push   rbx
  406a02:	sub    rsp,0x28
  406a06:	mov    rsi,QWORD PTR [rip+0x6b03]        # 0x40d510
  406a0d:	xor    ebx,ebx
  406a0f:	cmp    WORD PTR [rsi],0x5a4d
  406a14:	je     0x406a20
  406a16:	mov    rax,rbx
  406a19:	add    rsp,0x28
  406a1d:	pop    rbx
  406a1e:	pop    rsi
  406a1f:	ret    
  406a20:	mov    rcx,rsi
  406a23:	call   0x4067b0
  406a28:	test   eax,eax
  406a2a:	cmovne rbx,rsi
  406a2e:	mov    rax,rbx
  406a31:	add    rsp,0x28
  406a35:	pop    rbx
  406a36:	pop    rsi
  406a37:	ret    
  406a38:	nop    DWORD PTR [rax+rax*1+0x0]
  406a40:	push   rsi
  406a41:	push   rbx
  406a42:	sub    rsp,0x28
  406a46:	mov    rbx,QWORD PTR [rip+0x6ac3]        # 0x40d510
  406a4d:	xor    eax,eax
  406a4f:	cmp    WORD PTR [rbx],0x5a4d
  406a54:	je     0x406a60
  406a56:	add    rsp,0x28
  406a5a:	pop    rbx
  406a5b:	pop    rsi
  406a5c:	ret    
  406a5d:	nop    DWORD PTR [rax]
  406a60:	mov    rsi,rcx
  406a63:	mov    rcx,rbx
  406a66:	call   0x4067b0
  406a6b:	test   eax,eax
  406a6d:	je     0x406a56
  406a6f:	sub    rsi,rbx
  406a72:	mov    rcx,rbx
  406a75:	mov    rdx,rsi
  406a78:	call   0x4067f0
  406a7d:	test   rax,rax
  406a80:	je     0x406a91
  406a82:	mov    eax,DWORD PTR [rax+0x24]
  406a85:	not    eax
  406a87:	shr    eax,0x1f
  406a8a:	add    rsp,0x28
  406a8e:	pop    rbx
  406a8f:	pop    rsi
  406a90:	ret    
  406a91:	xor    eax,eax
  406a93:	jmp    0x406a56
  406a95:	nop
  406a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406aa0:	push   rbp
  406aa1:	push   rdi
  406aa2:	push   rsi
  406aa3:	push   rbx
  406aa4:	sub    rsp,0x28
  406aa8:	mov    rdi,QWORD PTR [rip+0x6a61]        # 0x40d510
  406aaf:	xor    ebp,ebp
  406ab1:	mov    esi,ecx
  406ab3:	cmp    WORD PTR [rdi],0x5a4d
  406ab8:	je     0x406ad0
  406aba:	mov    rax,rbp
  406abd:	add    rsp,0x28
  406ac1:	pop    rbx
  406ac2:	pop    rsi
  406ac3:	pop    rdi
  406ac4:	pop    rbp
  406ac5:	ret    
  406ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ad0:	mov    rcx,rdi
  406ad3:	call   0x4067b0
  406ad8:	test   eax,eax
  406ada:	je     0x406aba
  406adc:	movsxd rax,DWORD PTR [rdi+0x3c]
  406ae0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  406ae7:	test   edx,edx
  406ae9:	je     0x406aba
  406aeb:	mov    ebx,edx
  406aed:	mov    rcx,rdi
  406af0:	mov    rdx,rbx
  406af3:	call   0x4067f0
  406af8:	test   rax,rax
  406afb:	je     0x406aba
  406afd:	add    rbx,rdi
  406b00:	mov    rdx,rbx
  406b03:	jne    0x406b17
  406b05:	jmp    0x406aba
  406b07:	nop    WORD PTR [rax+rax*1+0x0]
  406b10:	sub    esi,0x1
  406b13:	add    rdx,0x14
  406b17:	mov    ecx,DWORD PTR [rdx+0x4]
  406b1a:	test   ecx,ecx
  406b1c:	jne    0x406b25
  406b1e:	mov    eax,DWORD PTR [rdx+0xc]
  406b21:	test   eax,eax
  406b23:	je     0x406b40
  406b25:	test   esi,esi
  406b27:	jg     0x406b10
  406b29:	mov    ebp,DWORD PTR [rdx+0xc]
  406b2c:	add    rbp,rdi
  406b2f:	mov    rax,rbp
  406b32:	add    rsp,0x28
  406b36:	pop    rbx
  406b37:	pop    rsi
  406b38:	pop    rdi
  406b39:	pop    rbp
  406b3a:	ret    
  406b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  406b40:	xor    ebp,ebp
  406b42:	mov    rax,rbp
  406b45:	add    rsp,0x28
  406b49:	pop    rbx
  406b4a:	pop    rsi
  406b4b:	pop    rdi
  406b4c:	pop    rbp
  406b4d:	ret    
  406b4e:	nop
  406b4f:	nop
  406b50:	push   rcx
  406b51:	push   rax
  406b52:	cmp    rax,0x1000
  406b58:	lea    rcx,[rsp+0x18]
  406b5d:	jb     0x406b78
  406b5f:	sub    rcx,0x1000
  406b66:	or     QWORD PTR [rcx],0x0
  406b6a:	sub    rax,0x1000
  406b70:	cmp    rax,0x1000
  406b76:	ja     0x406b5f
  406b78:	sub    rcx,rax
  406b7b:	or     QWORD PTR [rcx],0x0
  406b7f:	pop    rax
  406b80:	pop    rcx
  406b81:	ret    
  406b82:	nop
  406b83:	nop
  406b84:	nop
  406b85:	nop
  406b86:	nop
  406b87:	nop
  406b88:	nop
  406b89:	nop
  406b8a:	nop
  406b8b:	nop
  406b8c:	nop
  406b8d:	nop
  406b8e:	nop
  406b8f:	nop
  406b90:	push   rsi
  406b91:	push   rbx
  406b92:	sub    rsp,0xe8
  406b99:	test   rdx,rdx
  406b9c:	mov    rbx,rcx
  406b9f:	mov    rsi,rdx
  406ba2:	je     0x406bc6
  406ba4:	lea    rcx,[rsp+0x30]
  406ba9:	call   QWORD PTR [rip+0x18055]        # 0x41ec04
  406baf:	cmp    eax,0xffffffff
  406bb2:	je     0x406c20
  406bb4:	mov    edx,DWORD PTR [rsp+0x30]
  406bb8:	cmp    eax,0x2
  406bbb:	sete   al
  406bbe:	movzx  eax,al
  406bc1:	mov    DWORD PTR [rsi],edx
  406bc3:	mov    DWORD PTR [rsi+0x4],eax
  406bc6:	test   rbx,rbx
  406bc9:	je     0x406c0e
  406bcb:	lea    rcx,[rsp+0x20]
  406bd0:	call   QWORD PTR [rip+0x1801e]        # 0x41ebf4
  406bd6:	movabs r8,0xfe624e212ac18000
  406be0:	add    r8,QWORD PTR [rsp+0x20]
  406be5:	movabs rdx,0xd6bf94d5e57a42bd
  406bef:	mov    rax,r8
  406bf2:	mul    rdx
  406bf5:	shr    rdx,0x17
  406bf9:	mov    QWORD PTR [rbx],rdx
  406bfc:	imul   rdx,rdx,0x989680
  406c03:	sub    r8,rdx
  406c06:	imul   r8d,r8d,0x64
  406c0a:	mov    DWORD PTR [rbx+0x8],r8d
  406c0e:	xor    eax,eax
  406c10:	add    rsp,0xe8
  406c17:	pop    rbx
  406c18:	pop    rsi
  406c19:	ret    
  406c1a:	nop    WORD PTR [rax+rax*1+0x0]
  406c20:	mov    DWORD PTR [rsi],0x0
  406c26:	mov    DWORD PTR [rsi+0x4],0x0
  406c2d:	jmp    0x406bc6
  406c2f:	nop
  406c30:	push   rbx
  406c31:	sub    rsp,0x30
  406c35:	mov    rbx,rcx
  406c38:	lea    rcx,[rsp+0x20]
  406c3d:	call   0x406b90
  406c42:	test   eax,eax
  406c44:	mov    r9d,eax
  406c47:	jne    0x406c75
  406c49:	mov    rax,QWORD PTR [rsp+0x20]
  406c4e:	mov    r8d,DWORD PTR [rsp+0x28]
  406c53:	mov    edx,0x10624dd3
  406c58:	mov    DWORD PTR [rbx],eax
  406c5a:	mov    eax,r8d
  406c5d:	sar    r8d,0x1f
  406c61:	imul   edx
  406c63:	sar    edx,0x6
  406c66:	sub    edx,r8d
  406c69:	mov    DWORD PTR [rbx+0x4],edx
  406c6c:	mov    eax,r9d
  406c6f:	add    rsp,0x30
  406c73:	pop    rbx
  406c74:	ret    
  406c75:	mov    r9d,0xffffffff
  406c7b:	jmp    0x406c6c
  406c7d:	nop    DWORD PTR [rax]
  406c80:	push   rbx
  406c81:	sub    rsp,0x30
  406c85:	mov    rbx,rcx
  406c88:	lea    rcx,[rsp+0x20]
  406c8d:	call   0x406b90
  406c92:	test   eax,eax
  406c94:	mov    r9d,eax
  406c97:	jne    0x406cc5
  406c99:	mov    rax,QWORD PTR [rsp+0x20]
  406c9e:	mov    r8d,DWORD PTR [rsp+0x28]
  406ca3:	mov    edx,0x10624dd3
  406ca8:	mov    DWORD PTR [rbx],eax
  406caa:	mov    eax,r8d
  406cad:	sar    r8d,0x1f
  406cb1:	imul   edx
  406cb3:	sar    edx,0x6
  406cb6:	sub    edx,r8d
  406cb9:	mov    DWORD PTR [rbx+0x4],edx
  406cbc:	mov    eax,r9d
  406cbf:	add    rsp,0x30
  406cc3:	pop    rbx
  406cc4:	ret    
  406cc5:	mov    r9d,0xffffffff
  406ccb:	jmp    0x406cbc
  406ccd:	nop
  406cce:	nop
  406ccf:	nop
  406cd0:	push   r12
  406cd2:	push   rbp
  406cd3:	push   rdi
  406cd4:	push   rsi
  406cd5:	push   rbx
  406cd6:	sub    rsp,0x250
  406cdd:	mov    rbx,rdx
  406ce0:	mov    rsi,rcx
  406ce3:	mov    ecx,0x4000
  406ce8:	mov    r12d,r8d
  406ceb:	call   0x406f48
  406cf0:	test   rbx,rbx
  406cf3:	mov    rbp,rax
  406cf6:	je     0x406dc0
  406cfc:	cmp    WORD PTR [rbx],0x0
  406d00:	lea    rax,[rip+0x66c9]        # 0x40d3d0
  406d07:	cmove  rbx,rax
  406d0b:	test   rsi,rsi
  406d0e:	je     0x406db1
  406d14:	cmp    WORD PTR [rsi],0x0
  406d18:	lea    rax,[rip+0x66c5]        # 0x40d3e4
  406d1f:	cmove  rsi,rax
  406d23:	lea    rdi,[rsp+0x40]
  406d28:	xor    ecx,ecx
  406d2a:	mov    r8d,0x104
  406d30:	mov    rdx,rdi
  406d33:	call   QWORD PTR [rip+0x17eab]        # 0x41ebe4
  406d39:	test   eax,eax
  406d3b:	je     0x406da0
  406d3d:	lea    r8,[rip+0x66a4]        # 0x40d3e8
  406d44:	mov    QWORD PTR [rsp+0x30],rsi
  406d49:	mov    DWORD PTR [rsp+0x28],r12d
  406d4e:	mov    QWORD PTR [rsp+0x20],rbx
  406d53:	mov    r9,rdi
  406d56:	mov    edx,0x1fff
  406d5b:	mov    rcx,rbp
  406d5e:	call   0x406fd0
  406d63:	mov    rax,QWORD PTR [rip+0x68e6]        # 0x40d650
  406d6a:	mov    eax,DWORD PTR [rax]
  406d6c:	test   eax,eax
  406d6e:	je     0x406de5
  406d70:	xor    ecx,ecx
  406d72:	mov    r9d,0x12012
  406d78:	lea    r8,[rip+0x6701]        # 0x40d480
  406d7f:	mov    rdx,rbp
  406d82:	call   QWORD PTR [rip+0x1807c]        # 0x41ee04
  406d88:	cmp    eax,0x3
  406d8b:	je     0x406dd1
  406d8d:	cmp    eax,0x5
  406d90:	jne    0x406dcc
  406d92:	add    rsp,0x250
  406d99:	pop    rbx
  406d9a:	pop    rsi
  406d9b:	pop    rdi
  406d9c:	pop    rbp
  406d9d:	pop    r12
  406d9f:	ret    
  406da0:	lea    rdx,[rip+0x6629]        # 0x40d3d0
  406da7:	mov    rcx,rdi
  406daa:	call   0x406ee8
  406daf:	jmp    0x406d3d
  406db1:	lea    rsi,[rip+0x662c]        # 0x40d3e4
  406db8:	jmp    0x406d23
  406dbd:	nop    DWORD PTR [rax]
  406dc0:	lea    rbx,[rip+0x6609]        # 0x40d3d0
  406dc7:	jmp    0x406d0b
  406dcc:	call   0x406fb8
  406dd1:	mov    ecx,0x16
  406dd6:	call   0x406f20
  406ddb:	mov    ecx,0x3
  406de0:	call   0x406ff0
  406de5:	call   0x407020
  406dea:	lea    rdx,[rip+0x667f]        # 0x40d470
  406df1:	lea    rcx,[rax+0x60]
  406df5:	mov    r8,rbp
  406df8:	call   0x406f60
  406dfd:	call   0x406fb8
  406e02:	nop
  406e03:	nop    DWORD PTR [rax]
  406e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e10:	push   rbp
  406e11:	push   rdi
  406e12:	push   rsi
  406e13:	push   rbx
  406e14:	sub    rsp,0x38
  406e18:	mov    rdi,rdx
  406e1b:	mov    DWORD PTR [rsp+0x2c],r8d
  406e20:	mov    rbp,rcx
  406e23:	call   0x406f00
  406e28:	lea    rcx,[rax+rax*1+0x2]
  406e2d:	call   0x406f48
  406e32:	mov    rcx,rdi
  406e35:	mov    rsi,rax
  406e38:	call   0x406f00
  406e3d:	lea    rcx,[rax+rax*1+0x2]
  406e42:	call   0x406f48
  406e47:	movzx  r9d,BYTE PTR [rbp+0x0]
  406e4c:	xor    r10d,r10d
  406e4f:	mov    rbx,rax
  406e52:	mov    r8d,DWORD PTR [rsp+0x2c]
  406e57:	test   r9b,r9b
  406e5a:	je     0x406e77
  406e5c:	nop    DWORD PTR [rax+0x0]
  406e60:	mov    WORD PTR [rsi+r10*2],r9w
  406e65:	add    r10,0x1
  406e69:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  406e6f:	test   r9b,r9b
  406e72:	jne    0x406e60
  406e74:	add    r10,r10
  406e77:	movzx  r9d,BYTE PTR [rdi]
  406e7b:	xor    edx,edx
  406e7d:	mov    WORD PTR [rsi+r10*1],dx
  406e82:	xor    r10d,r10d
  406e85:	test   r9b,r9b
  406e88:	je     0x406ea6
  406e8a:	nop    WORD PTR [rax+rax*1+0x0]
  406e90:	mov    WORD PTR [rbx+r10*2],r9w
  406e95:	add    r10,0x1
  406e99:	movzx  r9d,BYTE PTR [rdi+r10*1]
  406e9e:	test   r9b,r9b
  406ea1:	jne    0x406e90
  406ea3:	add    r10,r10
  406ea6:	xor    eax,eax
  406ea8:	mov    rdx,rbx
  406eab:	mov    rcx,rsi
  406eae:	mov    WORD PTR [rbx+r10*1],ax
  406eb3:	call   0x406cd0
  406eb8:	mov    rcx,rsi
  406ebb:	call   0x406f68
  406ec0:	mov    rcx,rbx
  406ec3:	add    rsp,0x38
  406ec7:	pop    rbx
  406ec8:	pop    rsi
  406ec9:	pop    rdi
  406eca:	pop    rbp
  406ecb:	jmp    0x406f68
  406ed0:	jmp    0x406fc0
  406ed5:	nop
  406ed6:	nop
  406ed7:	nop
  406ed8:	nop
  406ed9:	nop
  406eda:	nop
  406edb:	nop
  406edc:	nop
  406edd:	nop
  406ede:	nop
  406edf:	nop
  406ee0:	jmp    QWORD PTR [rip+0x17f0e]        # 0x41edf4
  406ee6:	nop
  406ee7:	nop
  406ee8:	jmp    QWORD PTR [rip+0x17efe]        # 0x41edec
  406eee:	nop
  406eef:	nop
  406ef0:	jmp    QWORD PTR [rip+0x17eee]        # 0x41ede4
  406ef6:	nop
  406ef7:	nop
  406ef8:	jmp    QWORD PTR [rip+0x17ede]        # 0x41eddc
  406efe:	nop
  406eff:	nop
  406f00:	jmp    QWORD PTR [rip+0x17ece]        # 0x41edd4
  406f06:	nop
  406f07:	nop
  406f08:	jmp    QWORD PTR [rip+0x17ebe]        # 0x41edcc
  406f0e:	nop
  406f0f:	nop
  406f10:	jmp    QWORD PTR [rip+0x17eae]        # 0x41edc4
  406f16:	nop
  406f17:	nop
  406f18:	jmp    QWORD PTR [rip+0x17e9e]        # 0x41edbc
  406f1e:	nop
  406f1f:	nop
  406f20:	jmp    QWORD PTR [rip+0x17e8e]        # 0x41edb4
  406f26:	nop
  406f27:	nop
  406f28:	jmp    QWORD PTR [rip+0x17e7e]        # 0x41edac
  406f2e:	nop
  406f2f:	nop
  406f30:	jmp    QWORD PTR [rip+0x17e6e]        # 0x41eda4
  406f36:	nop
  406f37:	nop
  406f38:	jmp    QWORD PTR [rip+0x17e5e]        # 0x41ed9c
  406f3e:	nop
  406f3f:	nop
  406f40:	jmp    QWORD PTR [rip+0x17e4e]        # 0x41ed94
  406f46:	nop
  406f47:	nop
  406f48:	jmp    QWORD PTR [rip+0x17e3e]        # 0x41ed8c
  406f4e:	nop
  406f4f:	nop
  406f50:	jmp    QWORD PTR [rip+0x17e2e]        # 0x41ed84
  406f56:	nop
  406f57:	nop
  406f58:	jmp    QWORD PTR [rip+0x17e1e]        # 0x41ed7c
  406f5e:	nop
  406f5f:	nop
  406f60:	jmp    QWORD PTR [rip+0x17e0e]        # 0x41ed74
  406f66:	nop
  406f67:	nop
  406f68:	jmp    QWORD PTR [rip+0x17dfe]        # 0x41ed6c
  406f6e:	nop
  406f6f:	nop
  406f70:	jmp    QWORD PTR [rip+0x17dee]        # 0x41ed64
  406f76:	nop
  406f77:	nop
  406f78:	jmp    QWORD PTR [rip+0x17dde]        # 0x41ed5c
  406f7e:	nop
  406f7f:	nop
  406f80:	jmp    QWORD PTR [rip+0x17dce]        # 0x41ed54
  406f86:	nop
  406f87:	nop
  406f88:	jmp    QWORD PTR [rip+0x17dbe]        # 0x41ed4c
  406f8e:	nop
  406f8f:	nop
  406f90:	jmp    QWORD PTR [rip+0x17dae]        # 0x41ed44
  406f96:	nop
  406f97:	nop
  406f98:	jmp    QWORD PTR [rip+0x17d9e]        # 0x41ed3c
  406f9e:	nop
  406f9f:	nop
  406fa0:	jmp    QWORD PTR [rip+0x17d8e]        # 0x41ed34
  406fa6:	nop
  406fa7:	nop
  406fa8:	jmp    QWORD PTR [rip+0x17d7e]        # 0x41ed2c
  406fae:	nop
  406faf:	nop
  406fb0:	jmp    QWORD PTR [rip+0x17d6e]        # 0x41ed24
  406fb6:	nop
  406fb7:	nop
  406fb8:	jmp    QWORD PTR [rip+0x17d5e]        # 0x41ed1c
  406fbe:	nop
  406fbf:	nop
  406fc0:	jmp    QWORD PTR [rip+0x17d4e]        # 0x41ed14
  406fc6:	nop
  406fc7:	nop
  406fc8:	jmp    QWORD PTR [rip+0x17d3e]        # 0x41ed0c
  406fce:	nop
  406fcf:	nop
  406fd0:	jmp    QWORD PTR [rip+0x17d2e]        # 0x41ed04
  406fd6:	nop
  406fd7:	nop
  406fd8:	jmp    QWORD PTR [rip+0x17d1e]        # 0x41ecfc
  406fde:	nop
  406fdf:	nop
  406fe0:	jmp    QWORD PTR [rip+0x17d0e]        # 0x41ecf4
  406fe6:	nop
  406fe7:	nop
  406fe8:	jmp    QWORD PTR [rip+0x17cfe]        # 0x41ecec
  406fee:	nop
  406fef:	nop
  406ff0:	jmp    QWORD PTR [rip+0x17ce6]        # 0x41ecdc
  406ff6:	nop
  406ff7:	nop
  406ff8:	jmp    QWORD PTR [rip+0x17cd6]        # 0x41ecd4
  406ffe:	nop
  406fff:	nop
  407000:	jmp    QWORD PTR [rip+0x17cc6]        # 0x41eccc
  407006:	nop
  407007:	nop
  407008:	jmp    QWORD PTR [rip+0x17cae]        # 0x41ecbc
  40700e:	nop
  40700f:	nop
  407010:	jmp    QWORD PTR [rip+0x17c9e]        # 0x41ecb4
  407016:	nop
  407017:	nop
  407018:	jmp    QWORD PTR [rip+0x17c8e]        # 0x41ecac
  40701e:	nop
  40701f:	nop
  407020:	jmp    QWORD PTR [rip+0x17c7e]        # 0x41eca4
  407026:	nop
  407027:	nop
  407028:	jmp    QWORD PTR [rip+0x17c66]        # 0x41ec94
  40702e:	nop
  40702f:	nop
  407030:	jmp    QWORD PTR [rip+0x17c56]        # 0x41ec8c
  407036:	nop
  407037:	nop
  407038:	jmp    QWORD PTR [rip+0x17c46]        # 0x41ec84
  40703e:	nop
  40703f:	nop
  407040:	mov    rax,QWORD PTR [rip+0x160a9]        # 0x41d0f0
  407047:	ret    
  407048:	nop    DWORD PTR [rax+rax*1+0x0]
  407050:	mov    rax,rcx
  407053:	xchg   QWORD PTR [rip+0x16096],rax        # 0x41d0f0
  40705a:	ret    
  40705b:	nop
  40705c:	nop
  40705d:	nop
  40705e:	nop
  40705f:	nop
  407060:	jmp    QWORD PTR [rip+0x17d9e]        # 0x41ee04
  407066:	nop
  407067:	nop
  407068:	nop    DWORD PTR [rax+rax*1+0x0]
  407070:	jmp    QWORD PTR [rip+0x17bfe]        # 0x41ec74
  407076:	nop
  407077:	nop
  407078:	jmp    QWORD PTR [rip+0x17bee]        # 0x41ec6c
  40707e:	nop
  40707f:	nop
  407080:	jmp    QWORD PTR [rip+0x17bde]        # 0x41ec64
  407086:	nop
  407087:	nop
  407088:	jmp    QWORD PTR [rip+0x17bce]        # 0x41ec5c
  40708e:	nop
  40708f:	nop
  407090:	jmp    QWORD PTR [rip+0x17bbe]        # 0x41ec54
  407096:	nop
  407097:	nop
  407098:	jmp    QWORD PTR [rip+0x17bae]        # 0x41ec4c
  40709e:	nop
  40709f:	nop
  4070a0:	jmp    QWORD PTR [rip+0x17b9e]        # 0x41ec44
  4070a6:	nop
  4070a7:	nop
  4070a8:	jmp    QWORD PTR [rip+0x17b8e]        # 0x41ec3c
  4070ae:	nop
  4070af:	nop
  4070b0:	jmp    QWORD PTR [rip+0x17b7e]        # 0x41ec34
  4070b6:	nop
  4070b7:	nop
  4070b8:	jmp    QWORD PTR [rip+0x17b6e]        # 0x41ec2c
  4070be:	nop
  4070bf:	nop
  4070c0:	jmp    QWORD PTR [rip+0x17b5e]        # 0x41ec24
  4070c6:	nop
  4070c7:	nop
  4070c8:	jmp    QWORD PTR [rip+0x17b4e]        # 0x41ec1c
  4070ce:	nop
  4070cf:	nop
  4070d0:	jmp    QWORD PTR [rip+0x17b3e]        # 0x41ec14
  4070d6:	nop
  4070d7:	nop
  4070d8:	jmp    QWORD PTR [rip+0x17b2e]        # 0x41ec0c
  4070de:	nop
  4070df:	nop
  4070e0:	jmp    QWORD PTR [rip+0x17b1e]        # 0x41ec04
  4070e6:	nop
  4070e7:	nop
  4070e8:	jmp    QWORD PTR [rip+0x17b0e]        # 0x41ebfc
  4070ee:	nop
  4070ef:	nop
  4070f0:	jmp    QWORD PTR [rip+0x17afe]        # 0x41ebf4
  4070f6:	nop
  4070f7:	nop
  4070f8:	jmp    QWORD PTR [rip+0x17aee]        # 0x41ebec
  4070fe:	nop
  4070ff:	nop
  407100:	jmp    QWORD PTR [rip+0x17ade]        # 0x41ebe4
  407106:	nop
  407107:	nop
  407108:	jmp    QWORD PTR [rip+0x17ace]        # 0x41ebdc
  40710e:	nop
  40710f:	nop
  407110:	jmp    QWORD PTR [rip+0x17abe]        # 0x41ebd4
  407116:	nop
  407117:	nop
  407118:	jmp    QWORD PTR [rip+0x17aae]        # 0x41ebcc
  40711e:	nop
  40711f:	nop
  407120:	jmp    QWORD PTR [rip+0x17a9e]        # 0x41ebc4
  407126:	nop
  407127:	nop
  407128:	jmp    QWORD PTR [rip+0x17a8e]        # 0x41ebbc
  40712e:	nop
  40712f:	nop
  407130:	jmp    QWORD PTR [rip+0x17a7e]        # 0x41ebb4
  407136:	nop
  407137:	nop
  407138:	nop    DWORD PTR [rax+rax*1+0x0]
  407140:	push   rdi
  407141:	push   rsi
  407142:	push   rbx
  407143:	sub    rsp,0x20
  407147:	mov    r8d,DWORD PTR [rip+0x3232]        # 0x40a380
  40714e:	xor    edx,edx
  407150:	mov    rdi,rcx
  407153:	call   0x405430
  407158:	mov    rcx,QWORD PTR [rip+0x154c9]        # 0x41c628
  40715f:	mov    rbx,rax
  407162:	test   rcx,rcx
  407165:	je     0x4071b6
  407167:	xor    r9d,r9d
  40716a:	xor    r8d,r8d
  40716d:	xor    edx,edx
  40716f:	call   0x405458
  407174:	test   rax,rax
  407177:	mov    QWORD PTR [rip+0x154a2],rax        # 0x41c620
  40717e:	jne    0x4071b6
  407180:	mov    rax,QWORD PTR [rip+0x176bd]        # 0x41e844
  407187:	mov    r8,QWORD PTR [rip+0x1549a]        # 0x41c628
  40718e:	lea    rdx,[rip+0x405d]        # 0x40b1f2
  407195:	mov    rcx,QWORD PTR [rax]
  407198:	mov    rax,QWORD PTR [rip+0x1769d]        # 0x41e83c
  40719f:	call   QWORD PTR [rax]
  4071a1:	mov    DWORD PTR [rip+0x154b9],0x7        # 0x41c664
  4071ab:	mov    QWORD PTR [rip+0x15472],0x0        # 0x41c628
  4071b6:	mov    rcx,QWORD PTR [rip+0x15463]        # 0x41c620
  4071bd:	test   rcx,rcx
  4071c0:	je     0x40721c
  4071c2:	call   0x405468
  4071c7:	test   rax,rax
  4071ca:	mov    QWORD PTR [rip+0x15447],rax        # 0x41c618
  4071d1:	je     0x40721c
  4071d3:	xor    r8d,r8d
  4071d6:	xor    edx,edx
  4071d8:	mov    rcx,rax
  4071db:	call   0x4052d8
  4071e0:	test   eax,eax
  4071e2:	jns    0x40721c
  4071e4:	call   QWORD PTR [rip+0x17aba]        # 0x41eca4
  4071ea:	lea    rcx,[rip+0x3f8c]        # 0x40b17d
  4071f1:	lea    r9,[rax+0x60]
  4071f5:	mov    r8d,0x18
  4071fb:	mov    edx,0x1
  407200:	call   0x406f58
  407205:	mov    rcx,QWORD PTR [rip+0x1540c]        # 0x41c618
  40720c:	call   0x405550
  407211:	mov    QWORD PTR [rip+0x153fc],0x0        # 0x41c618
  40721c:	test   rbx,rbx
  40721f:	je     0x4074e2
  407225:	cmp    DWORD PTR [rip+0x154b8],0x0        # 0x41c6e4
  40722c:	je     0x407243
  40722e:	mov    r8d,0x1
  407234:	mov    edx,0x3
  407239:	mov    rcx,rbx
  40723c:	call   0x405258
  407241:	jmp    0x40725f
  407243:	cmp    DWORD PTR [rip+0x1541e],0x0        # 0x41c668
  40724a:	je     0x40725f
  40724c:	mov    r8d,0x1
  407252:	mov    edx,0x1
  407257:	mov    rcx,rbx
  40725a:	call   0x405258
  40725f:	cmp    QWORD PTR [rip+0x15461],0x0        # 0x41c6c8
  407267:	je     0x4072f4
  40726d:	cmp    DWORD PTR [rip+0x153ec],0x0        # 0x41c660
  407274:	je     0x40728d
  407276:	cmp    DWORD PTR [rip+0x1541f],0x0        # 0x41c69c
  40727d:	jne    0x40728d
  40727f:	lea    rcx,[rip+0x15152]        # 0x41c3d8
  407286:	xor    edx,edx
  407288:	call   0x406c30
  40728d:	mov    rdx,QWORD PTR [rip+0x15434]        # 0x41c6c8
  407294:	mov    rcx,rbx
  407297:	call   0x405268
  40729c:	test   eax,eax
  40729e:	jns    0x4072d6
  4072a0:	mov    rax,QWORD PTR [rip+0x1759d]        # 0x41e844
  4072a7:	mov    r8,QWORD PTR [rip+0x1541a]        # 0x41c6c8
  4072ae:	lea    rdx,[rip+0x3f5b]        # 0x40b210
  4072b5:	mov    rcx,QWORD PTR [rax]
  4072b8:	mov    rax,QWORD PTR [rip+0x1757d]        # 0x41e83c
  4072bf:	call   QWORD PTR [rax]
  4072c1:	mov    DWORD PTR [rip+0x15399],0x5        # 0x41c664
  4072cb:	mov    QWORD PTR [rip+0x153f2],0x0        # 0x41c6c8
  4072d6:	cmp    DWORD PTR [rip+0x15383],0x0        # 0x41c660
  4072dd:	je     0x4072f4
  4072df:	cmp    DWORD PTR [rip+0x153b6],0x0        # 0x41c69c
  4072e6:	jne    0x4072f4
  4072e8:	lea    rcx,[rip+0x3f47]        # 0x40b236
  4072ef:	call   0x401c50
  4072f4:	cmp    QWORD PTR [rip+0x153bc],0x0        # 0x41c6b8
  4072fc:	je     0x407389
  407302:	cmp    DWORD PTR [rip+0x15357],0x0        # 0x41c660
  407309:	je     0x407322
  40730b:	cmp    DWORD PTR [rip+0x1538a],0x0        # 0x41c69c
  407312:	jne    0x407322
  407314:	lea    rcx,[rip+0x150bd]        # 0x41c3d8
  40731b:	xor    edx,edx
  40731d:	call   0x406c30
  407322:	mov    rdx,QWORD PTR [rip+0x1538f]        # 0x41c6b8
  407329:	mov    rcx,rbx
  40732c:	call   0x405260
  407331:	test   eax,eax
  407333:	jns    0x40736b
  407335:	mov    rax,QWORD PTR [rip+0x17508]        # 0x41e844
  40733c:	mov    r8,QWORD PTR [rip+0x15375]        # 0x41c6b8
  407343:	lea    rdx,[rip+0x3f06]        # 0x40b250
  40734a:	mov    rcx,QWORD PTR [rax]
  40734d:	mov    rax,QWORD PTR [rip+0x174e8]        # 0x41e83c
  407354:	call   QWORD PTR [rax]
  407356:	mov    DWORD PTR [rip+0x15304],0x5        # 0x41c664
  407360:	mov    QWORD PTR [rip+0x1534d],0x0        # 0x41c6b8
  40736b:	cmp    DWORD PTR [rip+0x152ee],0x0        # 0x41c660
  407372:	je     0x407389
  407374:	cmp    DWORD PTR [rip+0x15321],0x0        # 0x41c69c
  40737b:	jne    0x407389
  40737d:	lea    rcx,[rip+0x3eb2]        # 0x40b236
  407384:	call   0x401c50
  407389:	cmp    DWORD PTR [rip+0x152d0],0x0        # 0x41c660
  407390:	je     0x4073be
  407392:	cmp    DWORD PTR [rip+0x15303],0x0        # 0x41c69c
  407399:	jne    0x4073be
  40739b:	lea    rcx,[rip+0x15036]        # 0x41c3d8
  4073a2:	xor    edx,edx
  4073a4:	call   0x406c30
  4073a9:	jmp    0x4073be
  4073ab:	cmp    DWORD PTR [rip+0x1536a],0x0        # 0x41c71c
  4073b2:	jne    0x4073cf
  4073b4:	cmp    QWORD PTR [rip+0x15264],0x0        # 0x41c620
  4073bc:	jne    0x4073cf
  4073be:	mov    rcx,rbx
  4073c1:	call   0x405270
  4073c6:	cmp    eax,0x1
  4073c9:	mov    esi,eax
  4073cb:	je     0x4073ab
  4073cd:	jmp    0x4073d9
  4073cf:	mov    rcx,rbx
  4073d2:	call   0x401cf0
  4073d7:	jmp    0x4073be
  4073d9:	cmp    DWORD PTR [rip+0x15280],0x0        # 0x41c660
  4073e0:	je     0x407418
  4073e2:	cmp    DWORD PTR [rip+0x152b3],0x0        # 0x41c69c
  4073e9:	jne    0x407418
  4073eb:	cmp    QWORD PTR [rip+0x152d5],0x0        # 0x41c6c8
  4073f3:	je     0x407403
  4073f5:	lea    rcx,[rip+0x3e75]        # 0x40b271
  4073fc:	call   0x401c50
  407401:	jmp    0x407418
  407403:	cmp    DWORD PTR [rip+0x152da],0x0        # 0x41c6e4
  40740a:	jne    0x4073f5
  40740c:	lea    rcx,[rip+0x3e75]        # 0x40b288
  407413:	call   0x401c50
  407418:	cmp    DWORD PTR [rip+0x152c5],0x0        # 0x41c6e4
  40741f:	je     0x407454
  407421:	mov    rcx,rbx
  407424:	call   0x405280
  407429:	dec    eax
  40742b:	je     0x407454
  40742d:	mov    rax,QWORD PTR [rip+0x17410]        # 0x41e844
  407434:	mov    r8,rdi
  407437:	lea    rdx,[rip+0x3e52]        # 0x40b290
  40743e:	mov    rcx,QWORD PTR [rax]
  407441:	mov    rax,QWORD PTR [rip+0x173f4]        # 0x41e83c
  407448:	call   QWORD PTR [rax]
  40744a:	mov    DWORD PTR [rip+0x15210],0x3        # 0x41c664
  407454:	cmp    QWORD PTR [rip+0x1526c],0x0        # 0x41c6c8
  40745c:	jne    0x407468
  40745e:	cmp    QWORD PTR [rip+0x15252],0x0        # 0x41c6b8
  407466:	je     0x4074b1
  407468:	mov    rcx,rbx
  40746b:	call   0x405280
  407470:	dec    eax
  407472:	mov    rax,QWORD PTR [rip+0x1782b]        # 0x41eca4
  407479:	je     0x40749c
  40747b:	call   rax
  40747d:	lea    rdx,[rip+0x3e2b]        # 0x40b2af
  407484:	lea    rcx,[rax+0x60]
  407488:	mov    r8,rdi
  40748b:	call   0x406f88
  407490:	mov    DWORD PTR [rip+0x151ca],0x3        # 0x41c664
  40749a:	jmp    0x4074b1
  40749c:	call   rax
  40749e:	lea    rdx,[rip+0x3e20]        # 0x40b2c5
  4074a5:	lea    rcx,[rax+0x60]
  4074a9:	mov    r8,rdi
  4074ac:	call   0x406f88
  4074b1:	mov    rcx,rbx
  4074b4:	call   0x405548
  4074b9:	test   esi,esi
  4074bb:	je     0x407505
  4074bd:	call   QWORD PTR [rip+0x177e1]        # 0x41eca4
  4074c3:	lea    rdx,[rip+0x3e09]        # 0x40b2d3
  4074ca:	lea    rcx,[rax+0x60]
  4074ce:	mov    r8,rdi
  4074d1:	call   0x406f88
  4074d6:	mov    DWORD PTR [rip+0x15184],0x1        # 0x41c664
  4074e0:	jmp    0x407505
  4074e2:	call   QWORD PTR [rip+0x177bc]        # 0x41eca4
  4074e8:	lea    rdx,[rip+0x3dfa]        # 0x40b2e9
  4074ef:	lea    rcx,[rax+0x60]
  4074f3:	mov    r8,rdi
  4074f6:	call   0x406f88
  4074fb:	mov    DWORD PTR [rip+0x1515f],0x1        # 0x41c664
  407505:	mov    rcx,QWORD PTR [rip+0x1510c]        # 0x41c618
  40750c:	test   rcx,rcx
  40750f:	je     0x407521
  407511:	call   0x405550
  407516:	mov    QWORD PTR [rip+0x150f7],0x0        # 0x41c618
  407521:	add    rsp,0x20
  407525:	pop    rbx
  407526:	pop    rsi
  407527:	pop    rdi
  407528:	ret    
  407529:	push   r12
  40752b:	push   rbp
  40752c:	push   rdi
  40752d:	push   rsi
  40752e:	push   rbx
  40752f:	sub    rsp,0x30
  407533:	cmp    DWORD PTR [rip+0x151c6],0x0        # 0x41c700
  40753a:	mov    DWORD PTR [rip+0x8afc],0x0        # 0x410040
  407544:	lea    rsi,[rip+0x2d35]        # 0x40a280
  40754b:	mov    rdi,rcx
  40754e:	jne    0x407566
  407550:	cmp    DWORD PTR [rip+0x150d9],0x0        # 0x41c630
  407557:	lea    rsi,[rip+0x2ae2]        # 0x40a040
  40755e:	cmovne rsi,QWORD PTR [rip+0x2bda]        # 0x40a140
  407566:	xor    edx,edx
  407568:	mov    rcx,rdi
  40756b:	call   0x405470
  407570:	test   rax,rax
  407573:	mov    rbp,rax
  407576:	je     0x407706
  40757c:	mov    rcx,QWORD PTR [rip+0x1512d]        # 0x41c6b0
  407583:	test   rcx,rcx
  407586:	je     0x407658
  40758c:	call   0x405370
  407591:	mov    r12,QWORD PTR [rip+0x1770c]        # 0x41eca4
  407598:	mov    rbx,rax
  40759b:	call   r12
  40759e:	lea    r8,[rip+0xfffffffffffff9e3]        # 0x406f88
  4075a5:	lea    r9,[rax+0x60]
  4075a9:	mov    rcx,rbx
  4075ac:	mov    rdx,r8
  4075af:	call   0x405358
  4075b4:	mov    rdx,rdi
  4075b7:	mov    rcx,rbx
  4075ba:	call   0x405348
  4075bf:	lea    rax,[rip+0x3d36]        # 0x40b2fc
  4075c6:	xor    r8d,r8d
  4075c9:	mov    r9,rsi
  4075cc:	mov    rdx,rbp
  4075cf:	mov    rcx,rbx
  4075d2:	mov    QWORD PTR [rsp+0x20],rax
  4075d7:	call   0x405340
  4075dc:	cmp    DWORD PTR [rip+0x150b9],0x0        # 0x41c69c
  4075e3:	jne    0x407646
  4075e5:	cmp    eax,0x0
  4075e8:	jne    0x407602
  4075ea:	call   r12
  4075ed:	lea    rdx,[rip+0x3cd1]        # 0x40b2c5
  4075f4:	lea    rcx,[rax+0x60]
  4075f8:	mov    r8,rdi
  4075fb:	call   0x406f88
  407600:	jmp    0x407646
  407602:	jle    0x407626
  407604:	call   r12
  407607:	lea    rdx,[rip+0x3ca1]        # 0x40b2af
  40760e:	lea    rcx,[rax+0x60]
  407612:	mov    r8,rdi
  407615:	call   0x406f88
  40761a:	mov    DWORD PTR [rip+0x15040],0x3        # 0x41c664
  407624:	jmp    0x407646
  407626:	call   r12
  407629:	lea    rdx,[rip+0x3cd8]        # 0x40b308
  407630:	lea    rcx,[rax+0x60]
  407634:	mov    r8,rdi
  407637:	call   0x406f88
  40763c:	mov    DWORD PTR [rip+0x1501e],0x3        # 0x41c664
  407646:	mov    rcx,rbx
  407649:	add    rsp,0x30
  40764d:	pop    rbx
  40764e:	pop    rsi
  40764f:	pop    rdi
  407650:	pop    rbp
  407651:	pop    r12
  407653:	jmp    0x405380
  407658:	call   0x4054b0
  40765d:	test   rax,rax
  407660:	mov    rbx,rax
  407663:	jne    0x407677
  407665:	mov    rcx,rbp
  407668:	add    rsp,0x30
  40766c:	pop    rbx
  40766d:	pop    rsi
  40766e:	pop    rdi
  40766f:	pop    rbp
  407670:	pop    r12
  407672:	jmp    0x405560
  407677:	mov    rdi,QWORD PTR [rax]
  40767a:	mov    QWORD PTR [rax],rsi
  40767d:	lea    rax,[rip+0x3c78]        # 0x40b2fc
  407684:	xor    r8d,r8d
  407687:	mov    rdx,rbp
  40768a:	mov    rcx,rbx
  40768d:	mov    QWORD PTR [rbx+0x8],rax
  407691:	call   0x4054b8
  407696:	test   rax,rax
  407699:	jne    0x4076a5
  40769b:	mov    rcx,rbp
  40769e:	call   0x405560
  4076a3:	jmp    0x4076f1
  4076a5:	mov    rdx,rax
  4076a8:	mov    rcx,rbx
  4076ab:	call   0x4055f0
  4076b0:	mov    rcx,rbx
  4076b3:	call   0x405480
  4076b8:	cmp    QWORD PTR [rbx+0x10],0x0
  4076bd:	je     0x4076f1
  4076bf:	call   QWORD PTR [rip+0x175df]        # 0x41eca4
  4076c5:	lea    rcx,[rip+0x3c67]        # 0x40b333
  4076cc:	lea    r9,[rax+0x60]
  4076d0:	mov    r8d,0x16
  4076d6:	mov    edx,0x1
  4076db:	call   0x406f58
  4076e0:	mov    rcx,QWORD PTR [rbx+0x10]
  4076e4:	call   0x405580
  4076e9:	mov    QWORD PTR [rbx+0x10],0x0
  4076f1:	mov    rcx,rbx
  4076f4:	mov    QWORD PTR [rbx],rdi
  4076f7:	add    rsp,0x30
  4076fb:	pop    rbx
  4076fc:	pop    rsi
  4076fd:	pop    rdi
  4076fe:	pop    rbp
  4076ff:	pop    r12
  407701:	jmp    0x405568
  407706:	add    rsp,0x30
  40770a:	pop    rbx
  40770b:	pop    rsi
  40770c:	pop    rdi
  40770d:	pop    rbp
  40770e:	pop    r12
  407710:	ret    
  407711:	nop
  407712:	nop
  407713:	nop
  407714:	nop
  407715:	nop
  407716:	nop
  407717:	nop
  407718:	nop
  407719:	nop
  40771a:	nop
  40771b:	nop
  40771c:	nop
  40771d:	nop
  40771e:	nop
  40771f:	nop
  407720:	push   r15
  407722:	push   r14
  407724:	push   r13
  407726:	push   r12
  407728:	push   rbp
  407729:	push   rdi
  40772a:	push   rsi
  40772b:	push   rbx
  40772c:	sub    rsp,0x48
  407730:	mov    r12d,ecx
  407733:	mov    rbp,rdx
  407736:	call   0x4057a0
  40773b:	cmp    r12d,0x1
  40773f:	jle    0x40823d
  407745:	mov    ecx,0x51a8
  40774a:	mov    ebx,0x1
  40774f:	lea    r15,[rip+0x3c85]        # 0x40b3db
  407756:	call   0x4055d8
  40775b:	mov    rax,QWORD PTR [rip+0x17102]        # 0x41e864
  407762:	mov    DWORD PTR [rsp+0x2c],0x0
  40776a:	mov    r14d,0x2
  407770:	mov    QWORD PTR [rsp+0x30],rax
  407775:	mov    rax,QWORD PTR [rip+0x17528]        # 0x41eca4
  40777c:	mov    QWORD PTR [rsp+0x38],rax
  407781:	jmp    0x40778f
  407783:	add    ebx,0x1
  407786:	cmp    r12d,ebx
  407789:	jle    0x407953
  40778f:	movsxd rax,ebx
  407792:	mov    rdi,r15
  407795:	mov    rcx,r14
  407798:	mov    r13,QWORD PTR [rbp+rax*8+0x0]
  40779d:	lea    r9,[rax*8+0x0]
  4077a5:	mov    rsi,r13
  4077a8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4077aa:	je     0x407953
  4077b0:	cmp    BYTE PTR [r13+0x0],0x2d
  4077b5:	jne    0x407783
  4077b7:	lea    rdi,[rip+0x51d3]        # 0x40c991
  4077be:	mov    ecx,0x7
  4077c3:	mov    rsi,r13
  4077c6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4077c8:	je     0x407c00
  4077ce:	lea    rdi,[rip+0x51c3]        # 0x40c998
  4077d5:	mov    ecx,0x8
  4077da:	mov    rsi,r13
  4077dd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4077df:	je     0x407c00
  4077e5:	lea    rdi,[rip+0x51b4]        # 0x40c9a0
  4077ec:	mov    ecx,0x6
  4077f1:	mov    rsi,r13
  4077f4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4077f6:	je     0x407940
  4077fc:	lea    rdx,[rip+0x51a3]        # 0x40c9a6
  407803:	mov    rcx,r13
  407806:	mov    QWORD PTR [rsp+0x20],r9
  40780b:	call   0x406f08
  407810:	test   eax,eax
  407812:	mov    r9,QWORD PTR [rsp+0x20]
  407817:	je     0x407940
  40781d:	lea    rdx,[rip+0x5189]        # 0x40c9ad
  407824:	mov    rcx,r13
  407827:	mov    QWORD PTR [rsp+0x20],r9
  40782c:	call   0x406f08
  407831:	test   eax,eax
  407833:	je     0x4081eb
  407839:	lea    rdx,[rip+0x5176]        # 0x40c9b6
  407840:	mov    rcx,r13
  407843:	call   0x406f08
  407848:	test   eax,eax
  40784a:	mov    r9,QWORD PTR [rsp+0x20]
  40784f:	je     0x4081eb
  407855:	lea    rdx,[rip+0x5164]        # 0x40c9c0
  40785c:	mov    rcx,r13
  40785f:	mov    QWORD PTR [rsp+0x20],r9
  407864:	call   0x406f08
  407869:	test   eax,eax
  40786b:	je     0x4082db
  407871:	lea    rdx,[rip+0x514e]        # 0x40c9c6
  407878:	mov    rcx,r13
  40787b:	call   0x406f08
  407880:	test   eax,eax
  407882:	mov    r9,QWORD PTR [rsp+0x20]
  407887:	je     0x4082db
  40788d:	lea    rdx,[rip+0x5139]        # 0x40c9cd
  407894:	mov    rcx,r13
  407897:	mov    QWORD PTR [rsp+0x20],r9
  40789c:	call   0x406f08
  4078a1:	test   eax,eax
  4078a3:	je     0x408393
  4078a9:	lea    rdx,[rip+0x5124]        # 0x40c9d4
  4078b0:	mov    rcx,r13
  4078b3:	call   0x406f08
  4078b8:	test   eax,eax
  4078ba:	mov    r9,QWORD PTR [rsp+0x20]
  4078bf:	je     0x408393
  4078c5:	lea    rdx,[rip+0x5110]        # 0x40c9dc
  4078cc:	mov    rcx,r13
  4078cf:	mov    QWORD PTR [rsp+0x20],r9
  4078d4:	call   0x406f08
  4078d9:	test   eax,eax
  4078db:	je     0x40841c
  4078e1:	lea    rdx,[rip+0x50fb]        # 0x40c9e3
  4078e8:	mov    rcx,r13
  4078eb:	call   0x406f08
  4078f0:	test   eax,eax
  4078f2:	mov    r9,QWORD PTR [rsp+0x20]
  4078f7:	je     0x40841c
  4078fd:	lea    rdx,[rip+0x50e7]        # 0x40c9eb
  407904:	mov    rcx,r13
  407907:	mov    QWORD PTR [rsp+0x20],r9
  40790c:	call   0x406f08
  407911:	test   eax,eax
  407913:	je     0x407931
  407915:	lea    rdx,[rip+0x50d8]        # 0x40c9f4
  40791c:	mov    rcx,r13
  40791f:	call   0x406f08
  407924:	test   eax,eax
  407926:	mov    r9,QWORD PTR [rsp+0x20]
  40792b:	jne    0x408561
  407931:	or     DWORD PTR [rip+0x2a45],0x2000        # 0x40a380
  40793b:	jmp    0x407783
  407940:	add    ebx,0x1
  407943:	add    DWORD PTR [rip+0x14dca],0x1        # 0x41c714
  40794a:	cmp    r12d,ebx
  40794d:	jg     0x40778f
  407953:	mov    eax,DWORD PTR [rip+0x14cf7]        # 0x41c650
  407959:	test   eax,eax
  40795b:	jne    0x40796a
  40795d:	cmp    DWORD PTR [rip+0x14cf0],0x0        # 0x41c654
  407964:	jne    0x4081c9
  40796a:	mov    r15d,DWORD PTR [rip+0x14cbf]        # 0x41c630
  407971:	test   r15d,r15d
  407974:	jne    0x407c0c
  40797a:	mov    ecx,0x2
  40797f:	call   0x4053c8
  407984:	mov    r14d,DWORD PTR [rip+0x14cad]        # 0x41c638
  40798b:	test   r14d,r14d
  40798e:	jne    0x407ddf
  407994:	lea    rcx,[rip+0x563b]        # 0x40cfd6
  40799b:	call   0x406f50
  4079a0:	test   rax,rax
  4079a3:	je     0x4079af
  4079a5:	mov    rdx,QWORD PTR [rip+0x171a0]        # 0x41eb4c
  4079ac:	mov    QWORD PTR [rdx],rax
  4079af:	call   0x405538
  4079b4:	lea    rcx,[rip+0xffffffffffff9e45]        # 0x401800
  4079bb:	mov    QWORD PTR [rip+0x14a1e],rax        # 0x41c3e0
  4079c2:	call   0x4052f8
  4079c7:	mov    ecx,0x1
  4079cc:	call   0x405510
  4079d1:	mov    r13d,DWORD PTR [rip+0x14c90]        # 0x41c668
  4079d8:	test   r13d,r13d
  4079db:	je     0x4079e7
  4079dd:	mov    rax,QWORD PTR [rip+0x16ea8]        # 0x41e88c
  4079e4:	or     DWORD PTR [rax],0x2
  4079e7:	mov    edi,DWORD PTR [rip+0x14c7f]        # 0x41c66c
  4079ed:	test   edi,edi
  4079ef:	je     0x4079fb
  4079f1:	mov    rax,QWORD PTR [rip+0x16e94]        # 0x41e88c
  4079f8:	or     DWORD PTR [rax],0x4
  4079fb:	mov    esi,DWORD PTR [rip+0x14d0b]        # 0x41c70c
  407a01:	test   esi,esi
  407a03:	jne    0x407dd0
  407a09:	mov    ebx,DWORD PTR [rip+0x14cd5]        # 0x41c6e4
  407a0f:	test   ebx,ebx
  407a11:	je     0x407a20
  407a13:	mov    rax,QWORD PTR [rip+0x16db2]        # 0x41e7cc
  407a1a:	mov    DWORD PTR [rax],0x1
  407a20:	mov    r11d,DWORD PTR [rip+0x14c65]        # 0x41c68c
  407a27:	test   r11d,r11d
  407a2a:	je     0x407a39
  407a2c:	cmp    DWORD PTR [rip+0x14cc9],0x0        # 0x41c6fc
  407a33:	je     0x408250
  407a39:	cmp    QWORD PTR [rip+0x14c67],0x0        # 0x41c6a8
  407a41:	je     0x407d10
  407a47:	mov    r10d,DWORD PTR [rip+0x14bbe]        # 0x41c60c
  407a4e:	test   r10d,r10d
  407a51:	jne    0x407c20
  407a57:	cmp    DWORD PTR [rip+0x14be2],0x0        # 0x41c640
  407a5e:	je     0x407ca5
  407a64:	mov    rcx,QWORD PTR [rip+0x14bbd]        # 0x41c628
  407a6b:	test   rcx,rcx
  407a6e:	je     0x407a80
  407a70:	mov    r8d,DWORD PTR [rip+0x14bc5]        # 0x41c63c
  407a77:	test   r8d,r8d
  407a7a:	je     0x407dfc
  407a80:	lea    r10,[rip+0x5363]        # 0x40cdea
  407a87:	mov    DWORD PTR [rsp+0x20],0x0
  407a8f:	mov    ebx,0x1
  407a94:	mov    r15d,0x8
  407a9a:	mov    r13d,0x9
  407aa0:	movsxd rax,ebx
  407aa3:	mov    rdi,r10
  407aa6:	mov    rcx,r15
  407aa9:	lea    r8,[rbp+rax*8+0x0]
  407aae:	mov    r14,QWORD PTR [r8]
  407ab1:	mov    rsi,r14
  407ab4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407ab6:	je     0x407b40
  407abc:	lea    rdi,[rip+0x532f]        # 0x40cdf2
  407ac3:	mov    rsi,r14
  407ac6:	mov    rcx,r13
  407ac9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407acb:	je     0x407b40
  407acd:	lea    rdi,[rip+0x50a8]        # 0x40cb7c
  407ad4:	mov    ecx,0x3
  407ad9:	mov    rsi,r14
  407adc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407ade:	je     0x407b40
  407ae0:	lea    rdi,[rip+0x5098]        # 0x40cb7f
  407ae7:	mov    rsi,r14
  407aea:	mov    rcx,r15
  407aed:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407aef:	je     0x407b40
  407af1:	lea    rdx,[rip+0x508f]        # 0x40cb87
  407af8:	mov    rcx,r14
  407afb:	mov    QWORD PTR [rsp+0x38],r10
  407b00:	mov    QWORD PTR [rsp+0x30],r8
  407b05:	call   0x406f08
  407b0a:	test   eax,eax
  407b0c:	mov    r8,QWORD PTR [rsp+0x30]
  407b11:	mov    r10,QWORD PTR [rsp+0x38]
  407b16:	je     0x407b40
  407b18:	lea    rdx,[rip+0x5114]        # 0x40cc33
  407b1f:	mov    rcx,r14
  407b22:	mov    QWORD PTR [rsp+0x38],r10
  407b27:	mov    QWORD PTR [rsp+0x30],r8
  407b2c:	call   0x406f08
  407b31:	test   eax,eax
  407b33:	mov    r10,QWORD PTR [rsp+0x38]
  407b38:	jne    0x407e54
  407b3e:	xchg   ax,ax
  407b40:	add    ebx,0x1
  407b43:	add    ebx,0x1
  407b46:	cmp    r12d,ebx
  407b49:	jg     0x407aa0
  407b4f:	mov    ecx,DWORD PTR [rip+0x14b07]        # 0x41c65c
  407b55:	test   ecx,ecx
  407b57:	jne    0x407dc2
  407b5d:	mov    edx,DWORD PTR [rip+0x14b29]        # 0x41c68c
  407b63:	test   edx,edx
  407b65:	je     0x407b74
  407b67:	cmp    DWORD PTR [rip+0x14b8e],0x0        # 0x41c6fc
  407b6e:	je     0x4082a9
  407b74:	mov    eax,DWORD PTR [rsp+0x20]
  407b78:	test   eax,eax
  407b7a:	jne    0x407b8c
  407b7c:	mov    eax,DWORD PTR [rsp+0x2c]
  407b80:	or     eax,DWORD PTR [rip+0x14ad6]        # 0x41c65c
  407b86:	je     0x40829b
  407b8c:	mov    rcx,QWORD PTR [rip+0x14b0d]        # 0x41c6a0
  407b93:	test   rcx,rcx
  407b96:	je     0x407b9d
  407b98:	call   0x405338
  407b9d:	mov    rcx,QWORD PTR [rip+0x14b1c]        # 0x41c6c0
  407ba4:	test   rcx,rcx
  407ba7:	je     0x407bae
  407ba9:	call   0x405410
  407bae:	mov    rcx,QWORD PTR [rip+0x14afb]        # 0x41c6b0
  407bb5:	test   rcx,rcx
  407bb8:	je     0x407bbf
  407bba:	call   0x405390
  407bbf:	call   0x405418
  407bc4:	mov    rcx,QWORD PTR [rip+0x14a55]        # 0x41c620
  407bcb:	test   rcx,rcx
  407bce:	je     0x407bd5
  407bd0:	call   0x405558
  407bd5:	call   0x4055d0
  407bda:	call   0x4054d8
  407bdf:	mov    eax,DWORD PTR [rip+0x14a7f]        # 0x41c664
  407be5:	add    rsp,0x48
  407be9:	pop    rbx
  407bea:	pop    rsi
  407beb:	pop    rdi
  407bec:	pop    rbp
  407bed:	pop    r12
  407bef:	pop    r13
  407bf1:	pop    r14
  407bf3:	pop    r15
  407bf5:	ret    
  407bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c00:	add    DWORD PTR [rip+0x14b15],0x1        # 0x41c71c
  407c07:	jmp    0x407783
  407c0c:	mov    ecx,0x1
  407c11:	call   0x4053c8
  407c16:	jmp    0x407984
  407c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  407c20:	cmp    QWORD PTR [rip+0x14a90],0x0        # 0x41c6b8
  407c28:	je     0x407a64
  407c2e:	cmp    DWORD PTR [rip+0x14a0b],0x0        # 0x41c640
  407c35:	jne    0x407a64
  407c3b:	cmp    DWORD PTR [rip+0x14a1e],0x0        # 0x41c660
  407c42:	jne    0x4081fe
  407c48:	mov    rcx,QWORD PTR [rip+0x14a69]        # 0x41c6b8
  407c4f:	call   0x405378
  407c54:	mov    rbx,rax
  407c57:	call   QWORD PTR [rip+0x17047]        # 0x41eca4
  407c5d:	lea    r8,[rip+0xfffffffffffff324]        # 0x406f88
  407c64:	lea    r9,[rax+0x60]
  407c68:	mov    rcx,rbx
  407c6b:	mov    rdx,r8
  407c6e:	call   0x405360
  407c73:	mov    rcx,rbx
  407c76:	call   0x405368
  407c7b:	test   rax,rax
  407c7e:	mov    QWORD PTR [rip+0x14a2b],rax        # 0x41c6b0
  407c85:	je     0x408310
  407c8b:	mov    rcx,rbx
  407c8e:	call   0x405388
  407c93:	cmp    DWORD PTR [rip+0x149c6],0x0        # 0x41c660
  407c9a:	je     0x407a64
  407ca0:	jmp    0x407db1
  407ca5:	mov    rax,QWORD PTR [rip+0x16be0]        # 0x41e88c
  407cac:	or     DWORD PTR [rip+0x26cd],0x4        # 0x40a380
  407cb3:	or     DWORD PTR [rax],0x1
  407cb6:	cmp    DWORD PTR [rip+0x149a3],0x0        # 0x41c660
  407cbd:	jne    0x4082c8
  407cc3:	mov    rcx,QWORD PTR [rip+0x149de]        # 0x41c6a8
  407cca:	call   0x405320
  407ccf:	mov    rcx,rax
  407cd2:	mov    rbx,rax
  407cd5:	call   0x405310
  407cda:	test   rax,rax
  407cdd:	mov    QWORD PTR [rip+0x149bc],rax        # 0x41c6a0
  407ce4:	je     0x4083e1
  407cea:	mov    rcx,rbx
  407ced:	call   0x405330
  407cf2:	cmp    DWORD PTR [rip+0x14967],0x0        # 0x41c660
  407cf9:	je     0x407d10
  407cfb:	lea    rcx,[rip+0x3534]        # 0x40b236
  407d02:	call   0x401c50
  407d07:	nop    WORD PTR [rax+rax*1+0x0]
  407d10:	cmp    QWORD PTR [rip+0x149b0],0x0        # 0x41c6c8
  407d18:	je     0x407c20
  407d1e:	mov    r9d,DWORD PTR [rip+0x148e7]        # 0x41c60c
  407d25:	test   r9d,r9d
  407d28:	jne    0x407c20
  407d2e:	cmp    DWORD PTR [rip+0x1490b],0x0        # 0x41c640
  407d35:	jne    0x407a64
  407d3b:	mov    rax,QWORD PTR [rip+0x16b4a]        # 0x41e88c
  407d42:	or     DWORD PTR [rip+0x2637],0x4        # 0x40a380
  407d49:	or     DWORD PTR [rax],0x1
  407d4c:	cmp    DWORD PTR [rip+0x1490d],0x0        # 0x41c660
  407d53:	jne    0x408211
  407d59:	mov    rcx,QWORD PTR [rip+0x14968]        # 0x41c6c8
  407d60:	call   0x4053f8
  407d65:	mov    rbx,rax
  407d68:	call   QWORD PTR [rip+0x16f36]        # 0x41eca4
  407d6e:	lea    r8,[rip+0xfffffffffffff213]        # 0x406f88
  407d75:	lea    r9,[rax+0x60]
  407d79:	mov    rcx,rbx
  407d7c:	mov    rdx,r8
  407d7f:	call   0x4053e0
  407d84:	mov    rcx,rbx
  407d87:	call   0x4053e8
  407d8c:	test   rax,rax
  407d8f:	mov    QWORD PTR [rip+0x1492a],rax        # 0x41c6c0
  407d96:	je     0x4083a6
  407d9c:	mov    rcx,rbx
  407d9f:	call   0x405408
  407da4:	cmp    DWORD PTR [rip+0x148b5],0x0        # 0x41c660
  407dab:	je     0x407a64
  407db1:	lea    rcx,[rip+0x347e]        # 0x40b236
  407db8:	call   0x401c50
  407dbd:	jmp    0x407a64
  407dc2:	xor    edx,edx
  407dc4:	xor    ecx,ecx
  407dc6:	call   0x402980
  407dcb:	jmp    0x407b5d
  407dd0:	mov    ecx,0x1
  407dd5:	call   0x4052c8
  407dda:	jmp    0x407a09
  407ddf:	lea    rcx,[rip+0xffffffffffffd3ba]        # 0x4051a0
  407de6:	call   0x405420
  407deb:	lea    rcx,[rip+0xffffffffffff9cee]        # 0x401ae0
  407df2:	call   0x4055a0
  407df7:	jmp    0x407994
  407dfc:	xor    r9d,r9d
  407dff:	xor    r8d,r8d
  407e02:	xor    edx,edx
  407e04:	call   0x405458
  407e09:	test   rax,rax
  407e0c:	mov    QWORD PTR [rip+0x1480d],rax        # 0x41c620
  407e13:	jne    0x407a80
  407e19:	mov    rax,QWORD PTR [rip+0x16a24]        # 0x41e844
  407e20:	mov    r8,QWORD PTR [rip+0x14801]        # 0x41c628
  407e27:	lea    rdx,[rip+0x33c4]        # 0x40b1f2
  407e2e:	mov    rcx,QWORD PTR [rax]
  407e31:	mov    rax,QWORD PTR [rip+0x16a04]        # 0x41e83c
  407e38:	call   QWORD PTR [rax]
  407e3a:	mov    DWORD PTR [rip+0x14820],0x7        # 0x41c664
  407e44:	mov    QWORD PTR [rip+0x147d9],0x0        # 0x41c628
  407e4f:	jmp    0x407a80
  407e54:	lea    rdx,[rip+0x4de2]        # 0x40cc3d
  407e5b:	mov    rcx,r14
  407e5e:	call   0x406f08
  407e63:	test   eax,eax
  407e65:	mov    r8,QWORD PTR [rsp+0x30]
  407e6a:	mov    r10,QWORD PTR [rsp+0x38]
  407e6f:	je     0x407b40
  407e75:	lea    rdx,[rip+0x50a7]        # 0x40cf23
  407e7c:	mov    rcx,r14
  407e7f:	mov    QWORD PTR [rsp+0x38],r10
  407e84:	mov    QWORD PTR [rsp+0x30],r8
  407e89:	call   0x406f08
  407e8e:	test   eax,eax
  407e90:	mov    r10,QWORD PTR [rsp+0x38]
  407e95:	je     0x407b40
  407e9b:	lea    rdx,[rip+0x5087]        # 0x40cf29
  407ea2:	mov    rcx,r14
  407ea5:	call   0x406f08
  407eaa:	test   eax,eax
  407eac:	mov    r8,QWORD PTR [rsp+0x30]
  407eb1:	mov    r10,QWORD PTR [rsp+0x38]
  407eb6:	je     0x407b40
  407ebc:	lea    rdx,[rip+0x4d85]        # 0x40cc48
  407ec3:	mov    rcx,r14
  407ec6:	mov    QWORD PTR [rsp+0x38],r10
  407ecb:	mov    QWORD PTR [rsp+0x30],r8
  407ed0:	call   0x406f08
  407ed5:	test   eax,eax
  407ed7:	mov    r10,QWORD PTR [rsp+0x38]
  407edc:	je     0x407b40
  407ee2:	lea    rdx,[rip+0x4d6c]        # 0x40cc55
  407ee9:	mov    rcx,r14
  407eec:	call   0x406f08
  407ef1:	test   eax,eax
  407ef3:	mov    r8,QWORD PTR [rsp+0x30]
  407ef8:	mov    r10,QWORD PTR [rsp+0x38]
  407efd:	je     0x407b40
  407f03:	lea    rdx,[rip+0x4f9d]        # 0x40cea7
  407f0a:	mov    rcx,r14
  407f0d:	mov    QWORD PTR [rsp+0x38],r10
  407f12:	mov    QWORD PTR [rsp+0x30],r8
  407f17:	call   0x406f08
  407f1c:	test   eax,eax
  407f1e:	mov    r10,QWORD PTR [rsp+0x38]
  407f23:	je     0x407b40
  407f29:	lea    rdx,[rip+0x4f80]        # 0x40ceb0
  407f30:	mov    rcx,r14
  407f33:	call   0x406f08
  407f38:	test   eax,eax
  407f3a:	mov    r8,QWORD PTR [rsp+0x30]
  407f3f:	mov    r10,QWORD PTR [rsp+0x38]
  407f44:	je     0x407b40
  407f4a:	lea    rdx,[rip+0x4ecb]        # 0x40ce1c
  407f51:	mov    rcx,r14
  407f54:	mov    QWORD PTR [rsp+0x38],r10
  407f59:	mov    QWORD PTR [rsp+0x30],r8
  407f5e:	call   0x406f08
  407f63:	test   eax,eax
  407f65:	mov    r10,QWORD PTR [rsp+0x38]
  407f6a:	je     0x407b40
  407f70:	lea    rdx,[rip+0x4ead]        # 0x40ce24
  407f77:	mov    rcx,r14
  407f7a:	call   0x406f08
  407f7f:	test   eax,eax
  407f81:	mov    r8,QWORD PTR [rsp+0x30]
  407f86:	mov    r10,QWORD PTR [rsp+0x38]
  407f8b:	je     0x407b40
  407f91:	lea    rdx,[rip+0x4ea9]        # 0x40ce41
  407f98:	mov    rcx,r14
  407f9b:	mov    QWORD PTR [rsp+0x38],r10
  407fa0:	mov    QWORD PTR [rsp+0x30],r8
  407fa5:	call   0x406f08
  407faa:	test   eax,eax
  407fac:	mov    r10,QWORD PTR [rsp+0x38]
  407fb1:	je     0x407b40
  407fb7:	lea    rdx,[rip+0x4e8b]        # 0x40ce49
  407fbe:	mov    rcx,r14
  407fc1:	call   0x406f08
  407fc6:	test   eax,eax
  407fc8:	mov    r8,QWORD PTR [rsp+0x30]
  407fcd:	mov    r10,QWORD PTR [rsp+0x38]
  407fd2:	je     0x407b40
  407fd8:	lea    rdx,[rip+0x4edb]        # 0x40ceba
  407fdf:	mov    rcx,r14
  407fe2:	mov    QWORD PTR [rsp+0x38],r10
  407fe7:	mov    QWORD PTR [rsp+0x30],r8
  407fec:	call   0x406f08
  407ff1:	test   eax,eax
  407ff3:	mov    r10,QWORD PTR [rsp+0x38]
  407ff8:	je     0x407b40
  407ffe:	lea    rdx,[rip+0x4ebd]        # 0x40cec2
  408005:	mov    rcx,r14
  408008:	call   0x406f08
  40800d:	test   eax,eax
  40800f:	mov    r8,QWORD PTR [rsp+0x30]
  408014:	mov    r10,QWORD PTR [rsp+0x38]
  408019:	je     0x407b40
  40801f:	lea    rdx,[rip+0x4ea5]        # 0x40cecb
  408026:	mov    rcx,r14
  408029:	mov    QWORD PTR [rsp+0x38],r10
  40802e:	mov    QWORD PTR [rsp+0x30],r8
  408033:	call   0x406f08
  408038:	test   eax,eax
  40803a:	mov    r10,QWORD PTR [rsp+0x38]
  40803f:	je     0x407b40
  408045:	lea    rdx,[rip+0x4e8b]        # 0x40ced7
  40804c:	mov    rcx,r14
  40804f:	call   0x406f08
  408054:	test   eax,eax
  408056:	mov    r8,QWORD PTR [rsp+0x30]
  40805b:	mov    r10,QWORD PTR [rsp+0x38]
  408060:	je     0x407b40
  408066:	lea    rdx,[rip+0x4ee6]        # 0x40cf53
  40806d:	mov    rcx,r14
  408070:	mov    QWORD PTR [rsp+0x38],r10
  408075:	mov    QWORD PTR [rsp+0x30],r8
  40807a:	call   0x406f08
  40807f:	test   eax,eax
  408081:	mov    r10,QWORD PTR [rsp+0x38]
  408086:	je     0x407b40
  40808c:	lea    rdx,[rip+0x4ec9]        # 0x40cf5c
  408093:	mov    rcx,r14
  408096:	call   0x406f08
  40809b:	test   eax,eax
  40809d:	mov    r8,QWORD PTR [rsp+0x30]
  4080a2:	mov    r10,QWORD PTR [rsp+0x38]
  4080a7:	je     0x407b40
  4080ad:	lea    rdx,[rip+0x4eb2]        # 0x40cf66
  4080b4:	mov    rcx,r14
  4080b7:	mov    QWORD PTR [rsp+0x38],r10
  4080bc:	mov    QWORD PTR [rsp+0x30],r8
  4080c1:	call   0x406f08
  4080c6:	test   eax,eax
  4080c8:	mov    r10,QWORD PTR [rsp+0x38]
  4080cd:	je     0x407b40
  4080d3:	lea    rdx,[rip+0x4e93]        # 0x40cf6d
  4080da:	mov    rcx,r14
  4080dd:	call   0x406f08
  4080e2:	test   eax,eax
  4080e4:	mov    r8,QWORD PTR [rsp+0x30]
  4080e9:	mov    r10,QWORD PTR [rsp+0x38]
  4080ee:	je     0x407b40
  4080f4:	cmp    DWORD PTR [rip+0x14565],0x0        # 0x41c660
  4080fb:	je     0x408457
  408101:	cmp    DWORD PTR [rip+0x14594],0x0        # 0x41c69c
  408108:	jne    0x408432
  40810e:	cmp    BYTE PTR [r14],0x2d
  408112:	je     0x409ba9
  408118:	cmp    DWORD PTR [rip+0x14521],0x0        # 0x41c640
  40811f:	mov    DWORD PTR [rip+0x1450b],0x0        # 0x41c634
  408129:	jne    0x409b92
  40812f:	cmp    DWORD PTR [rip+0x144d6],0x0        # 0x41c60c
  408136:	mov    QWORD PTR [rsp+0x30],r10
  40813b:	je     0x409b7e
  408141:	mov    rcx,r14
  408144:	call   0x407529
  408149:	mov    r10,QWORD PTR [rsp+0x30]
  40814e:	cmp    DWORD PTR [rip+0x144e3],0x0        # 0x41c638
  408155:	je     0x40818e
  408157:	mov    esi,DWORD PTR [rip+0x144d7]        # 0x41c634
  40815d:	test   esi,esi
  40815f:	je     0x40818e
  408161:	mov    QWORD PTR [rsp+0x30],r10
  408166:	call   QWORD PTR [rip+0x16b38]        # 0x41eca4
  40816c:	lea    rdx,[rip+0x4f9e]        # 0x40d111
  408173:	lea    rcx,[rax+0x60]
  408177:	mov    r8d,esi
  40817a:	call   0x406f88
  40817f:	mov    r10,QWORD PTR [rsp+0x30]
  408184:	mov    DWORD PTR [rip+0x144d6],0x8        # 0x41c664
  40818e:	add    DWORD PTR [rsp+0x20],0x1
  408193:	cmp    DWORD PTR [rip+0x144c6],0x0        # 0x41c660
  40819a:	je     0x407b43
  4081a0:	mov    edx,DWORD PTR [rip+0x144f6]        # 0x41c69c
  4081a6:	test   edx,edx
  4081a8:	je     0x407b43
  4081ae:	lea    rcx,[rip+0x4f78]        # 0x40d12d
  4081b5:	mov    QWORD PTR [rsp+0x30],r10
  4081ba:	call   0x401c50
  4081bf:	mov    r10,QWORD PTR [rsp+0x30]
  4081c4:	jmp    0x407b43
  4081c9:	lea    rcx,[rip+0x4dcd]        # 0x40cf9d
  4081d0:	call   0x406f50
  4081d5:	test   rax,rax
  4081d8:	je     0x4082ea
  4081de:	mov    rcx,rax
  4081e1:	call   0x405508
  4081e6:	jmp    0x40796a
  4081eb:	add    DWORD PTR [rip+0x1451e],0x1        # 0x41c710
  4081f2:	or     DWORD PTR [rip+0x2187],0x1        # 0x40a380
  4081f9:	jmp    0x407783
  4081fe:	lea    rcx,[rip+0x141d3]        # 0x41c3d8
  408205:	xor    edx,edx
  408207:	call   0x406c30
  40820c:	jmp    0x407c48
  408211:	lea    rcx,[rip+0x141c0]        # 0x41c3d8
  408218:	xor    edx,edx
  40821a:	call   0x406c30
  40821f:	jmp    0x407d59
  408224:	call   QWORD PTR [rip+0x16a7a]        # 0x41eca4
  40822a:	lea    rdx,[rip+0x4d59]        # 0x40cf8a
  408231:	lea    rcx,[rax+0x60]
  408235:	mov    r8,r13
  408238:	call   0x406f88
  40823d:	mov    rcx,QWORD PTR [rbp+0x0]
  408241:	call   0x404180
  408246:	mov    eax,0x1
  40824b:	jmp    0x407be5
  408250:	mov    rsi,QWORD PTR [rip+0x165ed]        # 0x41e844
  408257:	mov    rbx,QWORD PTR [rip+0x165de]        # 0x41e83c
  40825e:	lea    rdx,[rip+0x4d83]        # 0x40cfe8
  408265:	mov    rcx,QWORD PTR [rsi]
  408268:	call   QWORD PTR [rbx]
  40826a:	mov    rcx,QWORD PTR [rsi]
  40826d:	lea    rdx,[rip+0x4db4]        # 0x40d028
  408274:	call   QWORD PTR [rbx]
  408276:	mov    r8,QWORD PTR [rbp+0x0]
  40827a:	mov    rcx,QWORD PTR [rsi]
  40827d:	lea    rdx,[rip+0x4dd4]        # 0x40d058
  408284:	call   QWORD PTR [rbx]
  408286:	mov    r8,QWORD PTR [rbp+0x0]
  40828a:	lea    rdx,[rip+0x4df7]        # 0x40d088
  408291:	mov    rcx,QWORD PTR [rsi]
  408294:	call   QWORD PTR [rbx]
  408296:	jmp    0x407a39
  40829b:	mov    rcx,QWORD PTR [rbp+0x0]
  40829f:	call   0x404180
  4082a4:	jmp    0x407b8c
  4082a9:	mov    rax,QWORD PTR [rip+0x16594]        # 0x41e844
  4082b0:	lea    rdx,[rip+0x4e84]        # 0x40d13b
  4082b7:	mov    rcx,QWORD PTR [rax]
  4082ba:	mov    rax,QWORD PTR [rip+0x1657b]        # 0x41e83c
  4082c1:	call   QWORD PTR [rax]
  4082c3:	jmp    0x407b74
  4082c8:	lea    rcx,[rip+0x14109]        # 0x41c3d8
  4082cf:	xor    edx,edx
  4082d1:	call   0x406c30
  4082d6:	jmp    0x407cc3
  4082db:	or     DWORD PTR [rip+0x209b],0x80000        # 0x40a380
  4082e5:	jmp    0x407783
  4082ea:	call   QWORD PTR [rip+0x169b4]        # 0x41eca4
  4082f0:	lea    rcx,[rip+0x4cb9]        # 0x40cfb0
  4082f7:	lea    r9,[rax+0x60]
  4082fb:	mov    r8d,0x25
  408301:	mov    edx,0x1
  408306:	call   0x406f58
  40830b:	jmp    0x40796a
  408310:	mov    rax,QWORD PTR [rip+0x1652d]        # 0x41e844
  408317:	mov    r8,QWORD PTR [rip+0x1439a]        # 0x41c6b8
  40831e:	lea    rdx,[rip+0x4dcb]        # 0x40d0f0
  408325:	mov    rcx,QWORD PTR [rax]
  408328:	mov    rax,QWORD PTR [rip+0x1650d]        # 0x41e83c
  40832f:	call   QWORD PTR [rax]
  408331:	mov    DWORD PTR [rip+0x14329],0x5        # 0x41c664
  40833b:	mov    QWORD PTR [rip+0x14372],0x0        # 0x41c6b8
  408346:	jmp    0x407c8b
  40834b:	lea    rdx,[rip+0x4b55]        # 0x40cea7
  408352:	mov    rcx,r13
  408355:	mov    QWORD PTR [rsp+0x20],r9
  40835a:	call   0x406f08
  40835f:	test   eax,eax
  408361:	mov    r9,QWORD PTR [rsp+0x20]
  408366:	je     0x408384
  408368:	lea    rdx,[rip+0x4b41]        # 0x40ceb0
  40836f:	mov    rcx,r13
  408372:	call   0x406f08
  408377:	test   eax,eax
  408379:	mov    r9,QWORD PTR [rsp+0x20]
  40837e:	jne    0x40984f
  408384:	mov    rax,QWORD PTR [rbp+r9*1+0x8]
  408389:	add    ebx,0x1
  40838c:	mov    QWORD PTR [rip+0x14335],rax        # 0x41c6c8
  408393:	add    DWORD PTR [rip+0x14372],0x1        # 0x41c70c
  40839a:	or     DWORD PTR [rip+0x1fdf],0x2        # 0x40a380
  4083a1:	jmp    0x407783
  4083a6:	mov    rax,QWORD PTR [rip+0x16497]        # 0x41e844
  4083ad:	mov    r8,QWORD PTR [rip+0x14314]        # 0x41c6c8
  4083b4:	lea    rdx,[rip+0x2e55]        # 0x40b210
  4083bb:	mov    rcx,QWORD PTR [rax]
  4083be:	mov    rax,QWORD PTR [rip+0x16477]        # 0x41e83c
  4083c5:	call   QWORD PTR [rax]
  4083c7:	mov    DWORD PTR [rip+0x14293],0x5        # 0x41c664
  4083d1:	mov    QWORD PTR [rip+0x142ec],0x0        # 0x41c6c8
  4083dc:	jmp    0x407d9c
  4083e1:	mov    rax,QWORD PTR [rip+0x1645c]        # 0x41e844
  4083e8:	mov    r8,QWORD PTR [rip+0x142b9]        # 0x41c6a8
  4083ef:	lea    rdx,[rip+0x4cd2]        # 0x40d0c8
  4083f6:	mov    rcx,QWORD PTR [rax]
  4083f9:	mov    rax,QWORD PTR [rip+0x1643c]        # 0x41e83c
  408400:	call   QWORD PTR [rax]
  408402:	mov    DWORD PTR [rip+0x14258],0x5        # 0x41c664
  40840c:	mov    QWORD PTR [rip+0x14291],0x0        # 0x41c6a8
  408417:	jmp    0x407cea
  40841c:	add    DWORD PTR [rip+0x142e5],0x1        # 0x41c708
  408423:	or     DWORD PTR [rip+0x1f53],0x200000        # 0x40a380
  40842d:	jmp    0x407783
  408432:	lea    rcx,[rip+0x13f9f]        # 0x41c3d8
  408439:	xor    edx,edx
  40843b:	mov    QWORD PTR [rsp+0x38],r10
  408440:	mov    QWORD PTR [rsp+0x30],r8
  408445:	call   0x406c30
  40844a:	mov    r8,QWORD PTR [rsp+0x30]
  40844f:	mov    r10,QWORD PTR [rsp+0x38]
  408454:	mov    r14,QWORD PTR [r8]
  408457:	cmp    BYTE PTR [r14],0x2d
  40845b:	je     0x408531
  408461:	cmp    DWORD PTR [rip+0x14234],0x0        # 0x41c69c
  408468:	je     0x408118
  40846e:	xor    esi,esi
  408470:	xor    edi,edi
  408472:	cmp    edi,DWORD PTR [rip+0x14224]        # 0x41c69c
  408478:	jge    0x408511
  40847e:	cmp    DWORD PTR [rip+0x141bb],0x0        # 0x41c640
  408485:	jne    0x4084f3
  408487:	cmp    DWORD PTR [rip+0x1417e],0x0        # 0x41c60c
  40848e:	jne    0x4084d5
  408490:	test   rsi,rsi
  408493:	jne    0x4084b1
  408495:	mov    QWORD PTR [rsp+0x38],r10
  40849a:	mov    QWORD PTR [rsp+0x30],r8
  40849f:	call   0x4054b0
  4084a4:	mov    r10,QWORD PTR [rsp+0x38]
  4084a9:	mov    r8,QWORD PTR [rsp+0x30]
  4084ae:	mov    rsi,rax
  4084b1:	mov    rcx,QWORD PTR [r8]
  4084b4:	mov    rdx,rsi
  4084b7:	mov    QWORD PTR [rsp+0x38],r10
  4084bc:	mov    QWORD PTR [rsp+0x30],r8
  4084c1:	call   0x402980
  4084c6:	mov    r10,QWORD PTR [rsp+0x38]
  4084cb:	mov    r8,QWORD PTR [rsp+0x30]
  4084d0:	add    edi,0x1
  4084d3:	jmp    0x408472
  4084d5:	mov    rcx,QWORD PTR [r8]
  4084d8:	mov    QWORD PTR [rsp+0x38],r10
  4084dd:	mov    QWORD PTR [rsp+0x30],r8
  4084e2:	call   0x407529
  4084e7:	mov    r8,QWORD PTR [rsp+0x30]
  4084ec:	mov    r10,QWORD PTR [rsp+0x38]
  4084f1:	jmp    0x4084d0
  4084f3:	mov    rcx,QWORD PTR [r8]
  4084f6:	mov    QWORD PTR [rsp+0x38],r10
  4084fb:	mov    QWORD PTR [rsp+0x30],r8
  408500:	call   0x407140
  408505:	mov    r8,QWORD PTR [rsp+0x30]
  40850a:	mov    r10,QWORD PTR [rsp+0x38]
  40850f:	jmp    0x4084d0
  408511:	test   rsi,rsi
  408514:	je     0x40818e
  40851a:	mov    rcx,rsi
  40851d:	mov    QWORD PTR [rsp+0x30],r10
  408522:	call   0x405568
  408527:	mov    r10,QWORD PTR [rsp+0x30]
  40852c:	jmp    0x40818e
  408531:	lea    rdx,[rip+0x2ea3]        # 0x40b3db
  408538:	mov    rcx,r14
  40853b:	mov    QWORD PTR [rsp+0x38],r10
  408540:	mov    QWORD PTR [rsp+0x30],r8
  408545:	call   0x406f08
  40854a:	test   eax,eax
  40854c:	mov    r8,QWORD PTR [rsp+0x30]
  408551:	mov    r10,QWORD PTR [rsp+0x38]
  408556:	jne    0x407b43
  40855c:	jmp    0x408461
  408561:	lea    rdx,[rip+0x4496]        # 0x40c9fe
  408568:	mov    rcx,r13
  40856b:	mov    QWORD PTR [rsp+0x20],r9
  408570:	call   0x406f08
  408575:	test   eax,eax
  408577:	je     0x408591
  408579:	lea    rdx,[rip+0x4487]        # 0x40ca07
  408580:	mov    rcx,r13
  408583:	call   0x406f08
  408588:	test   eax,eax
  40858a:	mov    r9,QWORD PTR [rsp+0x20]
  40858f:	jne    0x4085a0
  408591:	or     DWORD PTR [rip+0x1de5],0x4000        # 0x40a380
  40859b:	jmp    0x407783
  4085a0:	lea    rdx,[rip+0x446a]        # 0x40ca11
  4085a7:	mov    rcx,r13
  4085aa:	mov    QWORD PTR [rsp+0x20],r9
  4085af:	call   0x406f08
  4085b4:	test   eax,eax
  4085b6:	je     0x4085d0
  4085b8:	lea    rdx,[rip+0x445a]        # 0x40ca19
  4085bf:	mov    rcx,r13
  4085c2:	call   0x406f08
  4085c7:	test   eax,eax
  4085c9:	mov    r9,QWORD PTR [rsp+0x20]
  4085ce:	jne    0x4085df
  4085d0:	or     DWORD PTR [rip+0x1da6],0x1000        # 0x40a380
  4085da:	jmp    0x407783
  4085df:	lea    rdx,[rip+0x443c]        # 0x40ca22
  4085e6:	mov    rcx,r13
  4085e9:	mov    QWORD PTR [rsp+0x20],r9
  4085ee:	call   0x406f08
  4085f3:	test   eax,eax
  4085f5:	je     0x408613
  4085f7:	lea    rdx,[rip+0x442d]        # 0x40ca2b
  4085fe:	mov    rcx,r13
  408601:	call   0x406f08
  408606:	test   eax,eax
  408608:	mov    r9,QWORD PTR [rsp+0x20]
  40860d:	jne    0x408c8e
  408613:	mov    rax,QWORD PTR [rip+0x16312]        # 0x41e92c
  40861a:	mov    rsi,QWORD PTR [rbp+0x0]
  40861e:	mov    rdi,QWORD PTR [rax]
  408621:	call   QWORD PTR [rip+0x1667d]        # 0x41eca4
  408627:	lea    rdx,[rip+0x4407]        # 0x40ca35
  40862e:	lea    rcx,[rax+0x60]
  408632:	mov    r8,rsi
  408635:	mov    r9,rdi
  408638:	call   0x406f88
  40863d:	call   QWORD PTR [rip+0x16661]        # 0x41eca4
  408643:	lea    rcx,[rip+0x4408]        # 0x40ca52
  40864a:	lea    r9,[rax+0x60]
  40864e:	mov    r8d,0x12
  408654:	mov    edx,0x1
  408659:	call   0x406f58
  40865e:	mov    ecx,0x1
  408663:	call   0x405520
  408668:	test   eax,eax
  40866a:	je     0x40868d
  40866c:	call   QWORD PTR [rip+0x16632]        # 0x41eca4
  408672:	lea    rcx,[rip+0x43ec]        # 0x40ca65
  408679:	lea    r9,[rax+0x60]
  40867d:	mov    r8d,0x8
  408683:	mov    edx,0x1
  408688:	call   0x406f58
  40868d:	mov    ecx,0x2
  408692:	call   0x405520
  408697:	test   eax,eax
  408699:	je     0x4086bc
  40869b:	call   QWORD PTR [rip+0x16603]        # 0x41eca4
  4086a1:	lea    rcx,[rip+0x43c6]        # 0x40ca6e
  4086a8:	lea    r9,[rax+0x60]
  4086ac:	mov    r8d,0x5
  4086b2:	mov    edx,0x1
  4086b7:	call   0x406f58
  4086bc:	mov    ecx,0x3
  4086c1:	call   0x405520
  4086c6:	test   eax,eax
  4086c8:	je     0x4086eb
  4086ca:	call   QWORD PTR [rip+0x165d4]        # 0x41eca4
  4086d0:	lea    rcx,[rip+0x439d]        # 0x40ca74
  4086d7:	lea    r9,[rax+0x60]
  4086db:	mov    r8d,0x7
  4086e1:	mov    edx,0x1
  4086e6:	call   0x406f58
  4086eb:	mov    ecx,0x4
  4086f0:	call   0x405520
  4086f5:	test   eax,eax
  4086f7:	je     0x40871a
  4086f9:	call   QWORD PTR [rip+0x165a5]        # 0x41eca4
  4086ff:	lea    rcx,[rip+0x4376]        # 0x40ca7c
  408706:	lea    r9,[rax+0x60]
  40870a:	mov    r8d,0x5
  408710:	mov    edx,0x1
  408715:	call   0x406f58
  40871a:	mov    ecx,0x5
  40871f:	call   0x405520
  408724:	test   eax,eax
  408726:	je     0x408749
  408728:	call   QWORD PTR [rip+0x16576]        # 0x41eca4
  40872e:	lea    rcx,[rip+0x434d]        # 0x40ca82
  408735:	lea    r9,[rax+0x60]
  408739:	mov    r8d,0x7
  40873f:	mov    edx,0x1
  408744:	call   0x406f58
  408749:	mov    ecx,0x6
  40874e:	call   0x405520
  408753:	test   eax,eax
  408755:	je     0x408778
  408757:	call   QWORD PTR [rip+0x16547]        # 0x41eca4
  40875d:	lea    rcx,[rip+0x4326]        # 0x40ca8a
  408764:	lea    r9,[rax+0x60]
  408768:	mov    r8d,0x9
  40876e:	mov    edx,0x1
  408773:	call   0x406f58
  408778:	mov    ecx,0x7
  40877d:	call   0x405520
  408782:	test   eax,eax
  408784:	je     0x4087a7
  408786:	call   QWORD PTR [rip+0x16518]        # 0x41eca4
  40878c:	lea    rcx,[rip+0x4301]        # 0x40ca94
  408793:	lea    r9,[rax+0x60]
  408797:	mov    r8d,0x7
  40879d:	mov    edx,0x1
  4087a2:	call   0x406f58
  4087a7:	mov    ecx,0x8
  4087ac:	call   0x405520
  4087b1:	test   eax,eax
  4087b3:	je     0x4087d6
  4087b5:	call   QWORD PTR [rip+0x164e9]        # 0x41eca4
  4087bb:	lea    rcx,[rip+0x42da]        # 0x40ca9c
  4087c2:	lea    r9,[rax+0x60]
  4087c6:	mov    r8d,0x6
  4087cc:	mov    edx,0x1
  4087d1:	call   0x406f58
  4087d6:	mov    ecx,0x9
  4087db:	call   0x405520
  4087e0:	test   eax,eax
  4087e2:	je     0x408805
  4087e4:	call   QWORD PTR [rip+0x164ba]        # 0x41eca4
  4087ea:	lea    rcx,[rip+0x42b2]        # 0x40caa3
  4087f1:	lea    r9,[rax+0x60]
  4087f5:	mov    r8d,0x4
  4087fb:	mov    edx,0x1
  408800:	call   0x406f58
  408805:	mov    ecx,0xa
  40880a:	call   0x405520
  40880f:	test   eax,eax
  408811:	je     0x408834
  408813:	call   QWORD PTR [rip+0x1648b]        # 0x41eca4
  408819:	lea    rcx,[rip+0x4288]        # 0x40caa8
  408820:	lea    r9,[rax+0x60]
  408824:	mov    r8d,0x5
  40882a:	mov    edx,0x1
  40882f:	call   0x406f58
  408834:	mov    ecx,0xb
  408839:	call   0x405520
  40883e:	test   eax,eax
  408840:	je     0x408863
  408842:	call   QWORD PTR [rip+0x1645c]        # 0x41eca4
  408848:	lea    rcx,[rip+0x425f]        # 0x40caae
  40884f:	lea    r9,[rax+0x60]
  408853:	mov    r8d,0x9
  408859:	mov    edx,0x1
  40885e:	call   0x406f58
  408863:	mov    ecx,0xc
  408868:	call   0x405520
  40886d:	test   eax,eax
  40886f:	je     0x408892
  408871:	call   QWORD PTR [rip+0x1642d]        # 0x41eca4
  408877:	lea    rcx,[rip+0x423a]        # 0x40cab8
  40887e:	lea    r9,[rax+0x60]
  408882:	mov    r8d,0x5
  408888:	mov    edx,0x1
  40888d:	call   0x406f58
  408892:	mov    ecx,0xd
  408897:	call   0x405520
  40889c:	test   eax,eax
  40889e:	je     0x4088c1
  4088a0:	call   QWORD PTR [rip+0x163fe]        # 0x41eca4
  4088a6:	lea    rcx,[rip+0x4211]        # 0x40cabe
  4088ad:	lea    r9,[rax+0x60]
  4088b1:	mov    r8d,0x7
  4088b7:	mov    edx,0x1
  4088bc:	call   0x406f58
  4088c1:	mov    ecx,0xe
  4088c6:	call   0x405520
  4088cb:	test   eax,eax
  4088cd:	je     0x4088f0
  4088cf:	call   QWORD PTR [rip+0x163cf]        # 0x41eca4
  4088d5:	lea    rcx,[rip+0x41ea]        # 0x40cac6
  4088dc:	lea    r9,[rax+0x60]
  4088e0:	mov    r8d,0x5
  4088e6:	mov    edx,0x1
  4088eb:	call   0x406f58
  4088f0:	mov    ecx,0xf
  4088f5:	call   0x405520
  4088fa:	test   eax,eax
  4088fc:	je     0x40891f
  4088fe:	call   QWORD PTR [rip+0x163a0]        # 0x41eca4
  408904:	lea    rcx,[rip+0x41c1]        # 0x40cacc
  40890b:	lea    r9,[rax+0x60]
  40890f:	mov    r8d,0x8
  408915:	mov    edx,0x1
  40891a:	call   0x406f58
  40891f:	mov    ecx,0x10
  408924:	call   0x405520
  408929:	test   eax,eax
  40892b:	je     0x40894e
  40892d:	call   QWORD PTR [rip+0x16371]        # 0x41eca4
  408933:	lea    rcx,[rip+0x419b]        # 0x40cad5
  40893a:	lea    r9,[rax+0x60]
  40893e:	mov    r8d,0x6
  408944:	mov    edx,0x1
  408949:	call   0x406f58
  40894e:	mov    ecx,0x11
  408953:	call   0x405520
  408958:	test   eax,eax
  40895a:	je     0x40897d
  40895c:	call   QWORD PTR [rip+0x16342]        # 0x41eca4
  408962:	lea    rcx,[rip+0x4173]        # 0x40cadc
  408969:	lea    r9,[rax+0x60]
  40896d:	mov    r8d,0x9
  408973:	mov    edx,0x1
  408978:	call   0x406f58
  40897d:	mov    ecx,0x12
  408982:	call   0x405520
  408987:	test   eax,eax
  408989:	je     0x4089ac
  40898b:	call   QWORD PTR [rip+0x16313]        # 0x41eca4
  408991:	lea    rcx,[rip+0x414e]        # 0x40cae6
  408998:	lea    r9,[rax+0x60]
  40899c:	mov    r8d,0x9
  4089a2:	mov    edx,0x1
  4089a7:	call   0x406f58
  4089ac:	mov    ecx,0x13
  4089b1:	call   0x405520
  4089b6:	test   eax,eax
  4089b8:	je     0x4089db
  4089ba:	call   QWORD PTR [rip+0x162e4]        # 0x41eca4
  4089c0:	lea    rcx,[rip+0x4129]        # 0x40caf0
  4089c7:	lea    r9,[rax+0x60]
  4089cb:	mov    r8d,0x6
  4089d1:	mov    edx,0x1
  4089d6:	call   0x406f58
  4089db:	mov    ecx,0x20
  4089e0:	call   0x405520
  4089e5:	test   eax,eax
  4089e7:	je     0x408a0a
  4089e9:	call   QWORD PTR [rip+0x162b5]        # 0x41eca4
  4089ef:	lea    rcx,[rip+0x4101]        # 0x40caf7
  4089f6:	lea    r9,[rax+0x60]
  4089fa:	mov    r8d,0x4
  408a00:	mov    edx,0x1
  408a05:	call   0x406f58
  408a0a:	mov    ecx,0x14
  408a0f:	call   0x405520
  408a14:	test   eax,eax
  408a16:	je     0x408a39
  408a18:	call   QWORD PTR [rip+0x16286]        # 0x41eca4
  408a1e:	lea    rcx,[rip+0x40d7]        # 0x40cafc
  408a25:	lea    r9,[rax+0x60]
  408a29:	mov    r8d,0x9
  408a2f:	mov    edx,0x1
  408a34:	call   0x406f58
  408a39:	mov    ecx,0x15
  408a3e:	call   0x405520
  408a43:	test   eax,eax
  408a45:	je     0x408a68
  408a47:	call   QWORD PTR [rip+0x16257]        # 0x41eca4
  408a4d:	lea    rcx,[rip+0x40b2]        # 0x40cb06
  408a54:	lea    r9,[rax+0x60]
  408a58:	mov    r8d,0x8
  408a5e:	mov    edx,0x1
  408a63:	call   0x406f58
  408a68:	mov    ecx,0x16
  408a6d:	call   0x405520
  408a72:	test   eax,eax
  408a74:	je     0x408a97
  408a76:	call   QWORD PTR [rip+0x16228]        # 0x41eca4
  408a7c:	lea    rcx,[rip+0x408c]        # 0x40cb0f
  408a83:	lea    r9,[rax+0x60]
  408a87:	mov    r8d,0x8
  408a8d:	mov    edx,0x1
  408a92:	call   0x406f58
  408a97:	mov    ecx,0x17
  408a9c:	call   0x405520
  408aa1:	test   eax,eax
  408aa3:	je     0x408ac6
  408aa5:	call   QWORD PTR [rip+0x161f9]        # 0x41eca4
  408aab:	lea    rcx,[rip+0x4066]        # 0x40cb18
  408ab2:	lea    r9,[rax+0x60]
  408ab6:	mov    r8d,0x9
  408abc:	mov    edx,0x1
  408ac1:	call   0x406f58
  408ac6:	mov    ecx,0x18
  408acb:	call   0x405520
  408ad0:	test   eax,eax
  408ad2:	je     0x408af5
  408ad4:	call   QWORD PTR [rip+0x161ca]        # 0x41eca4
  408ada:	lea    rcx,[rip+0x4041]        # 0x40cb22
  408ae1:	lea    r9,[rax+0x60]
  408ae5:	mov    r8d,0x5
  408aeb:	mov    edx,0x1
  408af0:	call   0x406f58
  408af5:	mov    ecx,0x19
  408afa:	call   0x405520
  408aff:	test   eax,eax
  408b01:	je     0x408b24
  408b03:	call   QWORD PTR [rip+0x1619b]        # 0x41eca4
  408b09:	lea    rcx,[rip+0x4018]        # 0x40cb28
  408b10:	lea    r9,[rax+0x60]
  408b14:	mov    r8d,0x8
  408b1a:	mov    edx,0x1
  408b1f:	call   0x406f58
  408b24:	mov    ecx,0x1a
  408b29:	call   0x405520
  408b2e:	test   eax,eax
  408b30:	je     0x408b53
  408b32:	call   QWORD PTR [rip+0x1616c]        # 0x41eca4
  408b38:	lea    rcx,[rip+0x3ff2]        # 0x40cb31
  408b3f:	lea    r9,[rax+0x60]
  408b43:	mov    r8d,0xb
  408b49:	mov    edx,0x1
  408b4e:	call   0x406f58
  408b53:	mov    ecx,0x1b
  408b58:	call   0x405520
  408b5d:	test   eax,eax
  408b5f:	je     0x408b82
  408b61:	call   QWORD PTR [rip+0x1613d]        # 0x41eca4
  408b67:	lea    rcx,[rip+0x3fcf]        # 0x40cb3d
  408b6e:	lea    r9,[rax+0x60]
  408b72:	mov    r8d,0x8
  408b78:	mov    edx,0x1
  408b7d:	call   0x406f58
  408b82:	mov    ecx,0x1c
  408b87:	call   0x405520
  408b8c:	test   eax,eax
  408b8e:	je     0x408bb1
  408b90:	call   QWORD PTR [rip+0x1610e]        # 0x41eca4
  408b96:	lea    rcx,[rip+0x3fa9]        # 0x40cb46
  408b9d:	lea    r9,[rax+0x60]
  408ba1:	mov    r8d,0x6
  408ba7:	mov    edx,0x1
  408bac:	call   0x406f58
  408bb1:	mov    ecx,0x1d
  408bb6:	call   0x405520
  408bbb:	test   eax,eax
  408bbd:	je     0x408be0
  408bbf:	call   QWORD PTR [rip+0x160df]        # 0x41eca4
  408bc5:	lea    rcx,[rip+0x3f81]        # 0x40cb4d
  408bcc:	lea    r9,[rax+0x60]
  408bd0:	mov    r8d,0x9
  408bd6:	mov    edx,0x1
  408bdb:	call   0x406f58
  408be0:	mov    ecx,0x1e
  408be5:	call   0x405520
  408bea:	test   eax,eax
  408bec:	je     0x408c0f
  408bee:	call   QWORD PTR [rip+0x160b0]        # 0x41eca4
  408bf4:	lea    rcx,[rip+0x3f5c]        # 0x40cb57
  408bfb:	lea    r9,[rax+0x60]
  408bff:	mov    r8d,0x9
  408c05:	mov    edx,0x1
  408c0a:	call   0x406f58
  408c0f:	mov    ecx,0x1f
  408c14:	call   0x405520
  408c19:	test   eax,eax
  408c1b:	je     0x408c3e
  408c1d:	call   QWORD PTR [rip+0x16081]        # 0x41eca4
  408c23:	lea    rcx,[rip+0x3f37]        # 0x40cb61
  408c2a:	lea    r9,[rax+0x60]
  408c2e:	mov    r8d,0x5
  408c34:	mov    edx,0x1
  408c39:	call   0x406f58
  408c3e:	mov    ecx,0x21
  408c43:	call   0x405520
  408c48:	test   eax,eax
  408c4a:	je     0x408c6d
  408c4c:	call   QWORD PTR [rip+0x16052]        # 0x41eca4
  408c52:	lea    rcx,[rip+0x3f0e]        # 0x40cb67
  408c59:	lea    r9,[rax+0x60]
  408c5d:	mov    r8d,0x5
  408c63:	mov    edx,0x1
  408c68:	call   0x406f58
  408c6d:	call   QWORD PTR [rip+0x16031]        # 0x41eca4
  408c73:	lea    rdx,[rax+0x60]
  408c77:	mov    ecx,0xa
  408c7c:	call   0x406f80
  408c81:	mov    DWORD PTR [rsp+0x2c],0x1
  408c89:	jmp    0x407783
  408c8e:	lea    rdx,[rip+0x3ed8]        # 0x40cb6d
  408c95:	mov    rcx,r13
  408c98:	mov    QWORD PTR [rsp+0x20],r9
  408c9d:	call   0x406f08
  408ca2:	test   eax,eax
  408ca4:	je     0x408d62
  408caa:	lea    rdx,[rip+0x3ec3]        # 0x40cb74
  408cb1:	mov    rcx,r13
  408cb4:	call   0x406f08
  408cb9:	test   eax,eax
  408cbb:	mov    r9,QWORD PTR [rsp+0x20]
  408cc0:	je     0x408d62
  408cc6:	lea    rdx,[rip+0x3eaf]        # 0x40cb7c
  408ccd:	mov    rcx,r13
  408cd0:	mov    QWORD PTR [rsp+0x20],r9
  408cd5:	call   0x406f08
  408cda:	test   eax,eax
  408cdc:	mov    r9,QWORD PTR [rsp+0x20]
  408ce1:	je     0x408d13
  408ce3:	lea    rdx,[rip+0x3e95]        # 0x40cb7f
  408cea:	mov    rcx,r13
  408ced:	call   0x406f08
  408cf2:	test   eax,eax
  408cf4:	mov    r9,QWORD PTR [rsp+0x20]
  408cf9:	je     0x408d13
  408cfb:	lea    rdx,[rip+0x3e85]        # 0x40cb87
  408d02:	mov    rcx,r13
  408d05:	call   0x406f08
  408d0a:	test   eax,eax
  408d0c:	mov    r9,QWORD PTR [rsp+0x20]
  408d11:	jne    0x408d6e
  408d13:	mov    rax,QWORD PTR [rbp+r9*1+0x8]
  408d18:	add    ebx,0x1
  408d1b:	mov    QWORD PTR [rip+0x139ce],rax        # 0x41c6f0
  408d22:	jmp    0x407783
  408d27:	lea    rdx,[rip+0x4135]        # 0x40ce63
  408d2e:	mov    rcx,r13
  408d31:	mov    QWORD PTR [rsp+0x20],r9
  408d36:	call   0x406f08
  408d3b:	test   eax,eax
  408d3d:	je     0x408d5b
  408d3f:	lea    rdx,[rip+0x4125]        # 0x40ce6b
  408d46:	mov    rcx,r13
  408d49:	call   0x406f08
  408d4e:	test   eax,eax
  408d50:	mov    r9,QWORD PTR [rsp+0x20]
  408d55:	jne    0x40978d
  408d5b:	add    DWORD PTR [rip+0x138da],0x1        # 0x41c63c
  408d62:	add    DWORD PTR [rip+0x13997],0x1        # 0x41c700
  408d69:	jmp    0x407783
  408d6e:	lea    rdx,[rip+0x3e1b]        # 0x40cb90
  408d75:	mov    rcx,r13
  408d78:	mov    QWORD PTR [rsp+0x20],r9
  408d7d:	call   0x406f08
  408d82:	test   eax,eax
  408d84:	je     0x408d9e
  408d86:	lea    rdx,[rip+0x3e0c]        # 0x40cb99
  408d8d:	mov    rcx,r13
  408d90:	call   0x406f08
  408d95:	test   eax,eax
  408d97:	mov    r9,QWORD PTR [rsp+0x20]
  408d9c:	jne    0x408daa
  408d9e:	add    DWORD PTR [rip+0x138e7],0x1        # 0x41c68c
  408da5:	jmp    0x407783
  408daa:	lea    rdx,[rip+0x3df2]        # 0x40cba3
  408db1:	mov    rcx,r13
  408db4:	mov    QWORD PTR [rsp+0x20],r9
  408db9:	call   0x406f08
  408dbe:	test   eax,eax
  408dc0:	je     0x408dda
  408dc2:	lea    rdx,[rip+0x3de2]        # 0x40cbab
  408dc9:	mov    rcx,r13
  408dcc:	call   0x406f08
  408dd1:	test   eax,eax
  408dd3:	mov    r9,QWORD PTR [rsp+0x20]
  408dd8:	jne    0x408de6
  408dda:	add    DWORD PTR [rip+0x1391b],0x1        # 0x41c6fc
  408de1:	jmp    0x407783
  408de6:	lea    rdx,[rip+0x3dc7]        # 0x40cbb4
  408ded:	mov    rcx,r13
  408df0:	mov    QWORD PTR [rsp+0x20],r9
  408df5:	call   0x406f08
  408dfa:	test   eax,eax
  408dfc:	je     0x408e16
  408dfe:	lea    rdx,[rip+0x3db5]        # 0x40cbba
  408e05:	mov    rcx,r13
  408e08:	call   0x406f08
  408e0d:	test   eax,eax
  408e0f:	mov    r9,QWORD PTR [rsp+0x20]
  408e14:	jne    0x408e22
  408e16:	add    DWORD PTR [rip+0x13877],0x1        # 0x41c694
  408e1d:	jmp    0x407783
  408e22:	lea    rdx,[rip+0x3d98]        # 0x40cbc1
  408e29:	mov    rcx,r13
  408e2c:	mov    QWORD PTR [rsp+0x20],r9
  408e31:	call   0x406f08
  408e36:	test   eax,eax
  408e38:	je     0x408e52
  408e3a:	lea    rdx,[rip+0x3d88]        # 0x40cbc9
  408e41:	mov    rcx,r13
  408e44:	call   0x406f08
  408e49:	test   eax,eax
  408e4b:	mov    r9,QWORD PTR [rsp+0x20]
  408e50:	jne    0x408e5e
  408e52:	add    DWORD PTR [rip+0x13837],0x1        # 0x41c690
  408e59:	jmp    0x407783
  408e5e:	lea    rdx,[rip+0x3d6d]        # 0x40cbd2
  408e65:	mov    rcx,r13
  408e68:	mov    QWORD PTR [rsp+0x20],r9
  408e6d:	call   0x406f08
  408e72:	test   eax,eax
  408e74:	je     0x408e8e
  408e76:	lea    rdx,[rip+0x3d5f]        # 0x40cbdc
  408e7d:	mov    rcx,r13
  408e80:	call   0x406f08
  408e85:	test   eax,eax
  408e87:	mov    r9,QWORD PTR [rsp+0x20]
  408e8c:	jne    0x408ea1
  408e8e:	add    DWORD PTR [rip+0x137f3],0x1        # 0x41c688
  408e95:	or     DWORD PTR [rip+0x14e4],0x4        # 0x40a380
  408e9c:	jmp    0x407783
  408ea1:	lea    rdx,[rip+0x3d3f]        # 0x40cbe7
  408ea8:	mov    rcx,r13
  408eab:	mov    QWORD PTR [rsp+0x20],r9
  408eb0:	call   0x406f08
  408eb5:	test   eax,eax
  408eb7:	je     0x408f5a
  408ebd:	lea    rdx,[rip+0x3d2c]        # 0x40cbf0
  408ec4:	mov    rcx,r13
  408ec7:	call   0x406f08
  408ecc:	test   eax,eax
  408ece:	mov    r9,QWORD PTR [rsp+0x20]
  408ed3:	je     0x408f5a
  408ed9:	lea    rdx,[rip+0x3d1a]        # 0x40cbfa
  408ee0:	mov    rcx,r13
  408ee3:	mov    QWORD PTR [rsp+0x20],r9
  408ee8:	call   0x406f08
  408eed:	test   eax,eax
  408eef:	je     0x408f09
  408ef1:	lea    rdx,[rip+0x3d0b]        # 0x40cc03
  408ef8:	mov    rcx,r13
  408efb:	call   0x406f08
  408f00:	test   eax,eax
  408f02:	mov    r9,QWORD PTR [rsp+0x20]
  408f07:	jne    0x408f6d
  408f09:	add    DWORD PTR [rip+0x13758],0x1        # 0x41c668
  408f10:	add    DWORD PTR [rip+0x13755],0x1        # 0x41c66c
  408f17:	or     DWORD PTR [rip+0x1462],0x8        # 0x40a380
  408f1e:	jmp    0x407783
  408f23:	lea    rdx,[rip+0x3cf2]        # 0x40cc1c
  408f2a:	mov    rcx,r13
  408f2d:	mov    QWORD PTR [rsp+0x20],r9
  408f32:	call   0x406f08
  408f37:	test   eax,eax
  408f39:	je     0x408f53
  408f3b:	lea    rdx,[rip+0x3ce5]        # 0x40cc27
  408f42:	mov    rcx,r13
  408f45:	call   0x406f08
  408f4a:	test   eax,eax
  408f4c:	mov    r9,QWORD PTR [rsp+0x20]
  408f51:	jne    0x408fb0
  408f53:	add    DWORD PTR [rip+0x13786],0x1        # 0x41c6e0
  408f5a:	add    DWORD PTR [rip+0x13707],0x1        # 0x41c668
  408f61:	or     DWORD PTR [rip+0x1418],0x4        # 0x40a380
  408f68:	jmp    0x407783
  408f6d:	lea    rdx,[rip+0x3c99]        # 0x40cc0d
  408f74:	mov    rcx,r13
  408f77:	mov    QWORD PTR [rsp+0x20],r9
  408f7c:	call   0x406f08
  408f81:	test   eax,eax
  408f83:	je     0x408f9d
  408f85:	lea    rdx,[rip+0x3c88]        # 0x40cc14
  408f8c:	mov    rcx,r13
  408f8f:	call   0x406f08
  408f94:	test   eax,eax
  408f96:	mov    r9,QWORD PTR [rsp+0x20]
  408f9b:	jne    0x408f23
  408f9d:	add    DWORD PTR [rip+0x13740],0x1        # 0x41c6e4
  408fa4:	or     DWORD PTR [rip+0x13d5],0x10        # 0x40a380
  408fab:	jmp    0x407783
  408fb0:	lea    rdx,[rip+0x3c7c]        # 0x40cc33
  408fb7:	mov    rcx,r13
  408fba:	mov    QWORD PTR [rsp+0x20],r9
  408fbf:	call   0x406f08
  408fc4:	test   eax,eax
  408fc6:	mov    r9,QWORD PTR [rsp+0x20]
  408fcb:	je     0x408fe5
  408fcd:	lea    rdx,[rip+0x3c69]        # 0x40cc3d
  408fd4:	mov    rcx,r13
  408fd7:	call   0x406f08
  408fdc:	test   eax,eax
  408fde:	mov    r9,QWORD PTR [rsp+0x20]
  408fe3:	jne    0x409007
  408fe5:	mov    rax,QWORD PTR [rbp+r9*1+0x8]
  408fea:	add    ebx,0x1
  408fed:	add    DWORD PTR [rip+0x13674],0x1        # 0x41c668
  408ff4:	or     DWORD PTR [rip+0x1385],0x4        # 0x40a380
  408ffb:	mov    QWORD PTR [rip+0x136d6],rax        # 0x41c6d8
  409002:	jmp    0x407783
  409007:	lea    rdx,[rip+0x3c3a]        # 0x40cc48
  40900e:	mov    rcx,r13
  409011:	mov    QWORD PTR [rsp+0x20],r9
  409016:	call   0x406f08
  40901b:	test   eax,eax
  40901d:	mov    r9,QWORD PTR [rsp+0x20]
  409022:	je     0x40903c
  409024:	lea    rdx,[rip+0x3c2a]        # 0x40cc55
  40902b:	mov    rcx,r13
  40902e:	call   0x406f08
  409033:	test   eax,eax
  409035:	mov    r9,QWORD PTR [rsp+0x20]
  40903a:	jne    0x40905e
  40903c:	mov    rax,QWORD PTR [rbp+r9*1+0x8]
  409041:	add    ebx,0x1
  409044:	add    DWORD PTR [rip+0x1361d],0x1        # 0x41c668
  40904b:	or     DWORD PTR [rip+0x132e],0x4        # 0x40a380
  409052:	mov    QWORD PTR [rip+0x13677],rax        # 0x41c6d0
  409059:	jmp    0x407783
  40905e:	lea    rdx,[rip+0x3bfe]        # 0x40cc63
  409065:	mov    rcx,r13
  409068:	mov    QWORD PTR [rsp+0x20],r9
  40906d:	call   0x406f08
  409072:	test   eax,eax
  409074:	je     0x40908e
  409076:	lea    rdx,[rip+0x3bef]        # 0x40cc6c
  40907d:	mov    rcx,r13
  409080:	call   0x406f08
  409085:	test   eax,eax
  409087:	mov    r9,QWORD PTR [rsp+0x20]
  40908c:	jne    0x40909a
  40908e:	add    DWORD PTR [rip+0x135c3],0x1        # 0x41c658
  409095:	jmp    0x407783
  40909a:	lea    rdx,[rip+0x3bd5]        # 0x40cc76
  4090a1:	mov    rcx,r13
  4090a4:	mov    QWORD PTR [rsp+0x20],r9
  4090a9:	call   0x406f08
  4090ae:	test   eax,eax
  4090b0:	je     0x4090ca
  4090b2:	lea    rdx,[rip+0x3bc5]        # 0x40cc7e
  4090b9:	mov    rcx,r13
  4090bc:	call   0x406f08
  4090c1:	test   eax,eax
  4090c3:	mov    r9,QWORD PTR [rsp+0x20]
  4090c8:	jne    0x4090d6
  4090ca:	add    DWORD PTR [rip+0x135c7],0x1        # 0x41c698
  4090d1:	jmp    0x407783
  4090d6:	lea    rdx,[rip+0x3baa]        # 0x40cc87
  4090dd:	mov    rcx,r13
  4090e0:	mov    QWORD PTR [rsp+0x20],r9
  4090e5:	call   0x406f08
  4090ea:	test   eax,eax
  4090ec:	je     0x409106
  4090ee:	lea    rdx,[rip+0x3b9a]        # 0x40cc8f
  4090f5:	mov    rcx,r13
  4090f8:	call   0x406f08
  4090fd:	test   eax,eax
  4090ff:	mov    r9,QWORD PTR [rsp+0x20]
  409104:	jne    0x409112
  409106:	add    DWORD PTR [rip+0x13553],0x1        # 0x41c660
  40910d:	jmp    0x407783
  409112:	lea    rdx,[rip+0x3b7f]        # 0x40cc98
  409119:	mov    rcx,r13
  40911c:	mov    QWORD PTR [rsp+0x20],r9
  409121:	call   0x406f08
  409126:	test   eax,eax
  409128:	je     0x409142
  40912a:	lea    rdx,[rip+0x3b6d]        # 0x40cc9e
  409131:	mov    rcx,r13
  409134:	call   0x406f08
  409139:	test   eax,eax
  40913b:	mov    r9,QWORD PTR [rsp+0x20]
  409140:	jne    0x40914e
  409142:	add    DWORD PTR [rip+0x13513],0x1        # 0x41c65c
  409149:	jmp    0x407783
  40914e:	lea    rdx,[rip+0x3b50]        # 0x40cca5
  409155:	mov    rcx,r13
  409158:	mov    QWORD PTR [rsp+0x20],r9
  40915d:	call   0x406f08
  409162:	test   eax,eax
  409164:	je     0x40917e
  409166:	lea    rdx,[rip+0x3b40]        # 0x40ccad
  40916d:	mov    rcx,r13
  409170:	call   0x406f08
  409175:	test   eax,eax
  409177:	mov    r9,QWORD PTR [rsp+0x20]
  40917c:	jne    0x409196
  40917e:	mov    eax,DWORD PTR [rip+0x13518]        # 0x41c69c
  409184:	test   eax,eax
  409186:	je     0x4091d2
  409188:	imul   eax,eax,0xa
  40918b:	mov    DWORD PTR [rip+0x1350b],eax        # 0x41c69c
  409191:	jmp    0x407783
  409196:	lea    rdx,[rip+0x3b19]        # 0x40ccb6
  40919d:	mov    rcx,r13
  4091a0:	mov    QWORD PTR [rsp+0x20],r9
  4091a5:	call   0x406f08
  4091aa:	test   eax,eax
  4091ac:	je     0x4091c6
  4091ae:	lea    rdx,[rip+0x3b07]        # 0x40ccbc
  4091b5:	mov    rcx,r13
  4091b8:	call   0x406f08
  4091bd:	test   eax,eax
  4091bf:	mov    r9,QWORD PTR [rsp+0x20]
  4091c4:	jne    0x4091e1
  4091c6:	add    DWORD PTR [rip+0x134b7],0x1        # 0x41c684
  4091cd:	jmp    0x407783
  4091d2:	mov    DWORD PTR [rip+0x134c0],0x64        # 0x41c69c
  4091dc:	jmp    0x407783
  4091e1:	lea    rdx,[rip+0x3adb]        # 0x40ccc3
  4091e8:	mov    rcx,r13
  4091eb:	mov    QWORD PTR [rsp+0x20],r9
  4091f0:	call   0x406f08
  4091f5:	test   eax,eax
  4091f7:	je     0x409211
  4091f9:	lea    rdx,[rip+0x3ace]        # 0x40ccce
  409200:	mov    rcx,r13
  409203:	call   0x406f08
  409208:	test   eax,eax
  40920a:	mov    r9,QWORD PTR [rsp+0x20]
  40920f:	jne    0x409227
  409211:	add    DWORD PTR [rip+0x1346c],0x1        # 0x41c684
  409218:	mov    DWORD PTR [rip+0x1162],0xa        # 0x40a384
  409222:	jmp    0x407783
  409227:	lea    rdx,[rip+0x3aac]        # 0x40ccda
  40922e:	mov    rcx,r13
  409231:	mov    QWORD PTR [rsp+0x20],r9
  409236:	call   0x406f08
  40923b:	test   eax,eax
  40923d:	je     0x409257
  40923f:	lea    rdx,[rip+0x3a9c]        # 0x40cce2
  409246:	mov    rcx,r13
  409249:	call   0x406f08
  40924e:	test   eax,eax
  409250:	mov    r9,QWORD PTR [rsp+0x20]
  409255:	jne    0x409263
  409257:	add    DWORD PTR [rip+0x13422],0x1        # 0x41c680
  40925e:	jmp    0x407783
  409263:	lea    rdx,[rip+0x3a81]        # 0x40cceb
  40926a:	mov    rcx,r13
  40926d:	mov    QWORD PTR [rsp+0x20],r9
  409272:	call   0x406f08
  409277:	test   eax,eax
  409279:	je     0x409293
  40927b:	lea    rdx,[rip+0x3a73]        # 0x40ccf5
  409282:	mov    rcx,r13
  409285:	call   0x406f08
  40928a:	test   eax,eax
  40928c:	mov    r9,QWORD PTR [rsp+0x20]
  409291:	jne    0x4092a9
  409293:	add    DWORD PTR [rip+0x133d6],0x1        # 0x41c670
  40929a:	or     DWORD PTR [rip+0x10dc],0x400        # 0x40a380
  4092a4:	jmp    0x407783
  4092a9:	lea    rdx,[rip+0x3a50]        # 0x40cd00
  4092b0:	mov    rcx,r13
  4092b3:	mov    QWORD PTR [rsp+0x20],r9
  4092b8:	call   0x406f08
  4092bd:	test   eax,eax
  4092bf:	je     0x4092d9
  4092c1:	lea    rdx,[rip+0x3a48]        # 0x40cd10
  4092c8:	mov    rcx,r13
  4092cb:	call   0x406f08
  4092d0:	test   eax,eax
  4092d2:	mov    r9,QWORD PTR [rsp+0x20]
  4092d7:	jne    0x4092ef
  4092d9:	add    DWORD PTR [rip+0x13390],0x1        # 0x41c670
  4092e0:	or     DWORD PTR [rip+0x1096],0x8400        # 0x40a380
  4092ea:	jmp    0x407783
  4092ef:	lea    rdx,[rip+0x3a2b]        # 0x40cd21
  4092f6:	mov    rcx,r13
  4092f9:	mov    QWORD PTR [rsp+0x20],r9
  4092fe:	call   0x406f08
  409303:	test   eax,eax
  409305:	je     0x40931f
  409307:	lea    rdx,[rip+0x3a26]        # 0x40cd34
  40930e:	mov    rcx,r13
  409311:	call   0x406f08
  409316:	test   eax,eax
  409318:	mov    r9,QWORD PTR [rsp+0x20]
  40931d:	jne    0x409335
  40931f:	add    DWORD PTR [rip+0x1334a],0x1        # 0x41c670
  409326:	or     DWORD PTR [rip+0x1050],0x40400        # 0x40a380
  409330:	jmp    0x407783
  409335:	lea    rdx,[rip+0x3a0c]        # 0x40cd48
  40933c:	mov    rcx,r13
  40933f:	mov    QWORD PTR [rsp+0x20],r9
  409344:	call   0x406f08
  409349:	test   eax,eax
  40934b:	je     0x409365
  40934d:	lea    rdx,[rip+0x39fe]        # 0x40cd52
  409354:	mov    rcx,r13
  409357:	call   0x406f08
  40935c:	test   eax,eax
  40935e:	mov    r9,QWORD PTR [rsp+0x20]
  409363:	jne    0x40937b
  409365:	mov    ecx,0x9
  40936a:	add    DWORD PTR [rip+0x13377],0x1        # 0x41c6e8
  409371:	call   0x405300
  409376:	jmp    0x407783
  40937b:	lea    rdx,[rip+0x39db]        # 0x40cd5d
  409382:	mov    rcx,r13
  409385:	mov    QWORD PTR [rsp+0x20],r9
  40938a:	call   0x406f08
  40938f:	test   eax,eax
  409391:	je     0x4093ab
  409393:	lea    rdx,[rip+0x39ce]        # 0x40cd68
  40939a:	mov    rcx,r13
  40939d:	call   0x406f08
  4093a2:	test   eax,eax
  4093a4:	mov    r9,QWORD PTR [rsp+0x20]
  4093a9:	jne    0x4093cb
  4093ab:	mov    rax,QWORD PTR [rip+0x154b2]        # 0x41e864
  4093b2:	xor    ecx,ecx
  4093b4:	mov    DWORD PTR [rax],0x0
  4093ba:	call   0x405450
  4093bf:	or     DWORD PTR [rip+0xfba],0x40        # 0x40a380
  4093c6:	jmp    0x407783
  4093cb:	lea    rdx,[rip+0x39a2]        # 0x40cd74
  4093d2:	mov    rcx,r13
  4093d5:	mov    QWORD PTR [rsp+0x20],r9
  4093da:	call   0x406f08
  4093df:	test   eax,eax
  4093e1:	je     0x4093fb
  4093e3:	lea    rdx,[rip+0x3994]        # 0x40cd7e
  4093ea:	mov    rcx,r13
  4093ed:	call   0x406f08
  4093f2:	test   eax,eax
  4093f4:	mov    r9,QWORD PTR [rsp+0x20]
  4093f9:	jne    0x40941f
  4093fb:	mov    rax,QWORD PTR [rsp+0x30]
  409400:	mov    ecx,0x1
  409405:	mov    DWORD PTR [rax],0x1
  40940b:	call   0x405450
  409410:	or     DWORD PTR [rip+0xf66],0x80        # 0x40a380
  40941a:	jmp    0x407783
  40941f:	lea    rdx,[rip+0x3963]        # 0x40cd89
  409426:	mov    rcx,r13
  409429:	mov    QWORD PTR [rsp+0x20],r9
  40942e:	call   0x406f08
  409433:	test   eax,eax
  409435:	je     0x40944f
  409437:	lea    rdx,[rip+0x3951]        # 0x40cd8f
  40943e:	mov    rcx,r13
  409441:	call   0x406f08
  409446:	test   eax,eax
  409448:	mov    r9,QWORD PTR [rsp+0x20]
  40944d:	jne    0x409462
  40944f:	add    DWORD PTR [rip+0x131f6],0x1        # 0x41c64c
  409456:	or     DWORD PTR [rip+0xf23],0xe        # 0x40a380
  40945d:	jmp    0x407783
  409462:	lea    rdx,[rip+0x392d]        # 0x40cd96
  409469:	mov    rcx,r13
  40946c:	mov    QWORD PTR [rsp+0x20],r9
  409471:	call   0x406f08
  409476:	test   eax,eax
  409478:	je     0x409492
  40947a:	lea    rdx,[rip+0x391d]        # 0x40cd9e
  409481:	mov    rcx,r13
  409484:	call   0x406f08
  409489:	test   eax,eax
  40948b:	mov    r9,QWORD PTR [rsp+0x20]
  409490:	jne    0x4094a5
  409492:	add    DWORD PTR [rip+0x131af],0x1        # 0x41c648
  409499:	or     DWORD PTR [rip+0xee0],0xe        # 0x40a380
  4094a0:	jmp    0x407783
  4094a5:	lea    rdx,[rip+0x38fb]        # 0x40cda7
  4094ac:	mov    rcx,r13
  4094af:	mov    QWORD PTR [rsp+0x20],r9
  4094b4:	call   0x406f08
  4094b9:	test   eax,eax
  4094bb:	je     0x4094d5
  4094bd:	lea    rdx,[rip+0x38ed]        # 0x40cdb1
  4094c4:	mov    rcx,r13
  4094c7:	call   0x406f08
  4094cc:	test   eax,eax
  4094ce:	mov    r9,QWORD PTR [rsp+0x20]
  4094d3:	jne    0x4094e8
  4094d5:	add    DWORD PTR [rip+0x13168],0x1        # 0x41c644
  4094dc:	or     DWORD PTR [rip+0xe9d],0xe        # 0x40a380
  4094e3:	jmp    0x407783
  4094e8:	lea    rdx,[rip+0x38cd]        # 0x40cdbc
  4094ef:	mov    rcx,r13
  4094f2:	mov    QWORD PTR [rsp+0x20],r9
  4094f7:	call   0x406f08
  4094fc:	test   eax,eax
  4094fe:	je     0x409518
  409500:	lea    rdx,[rip+0x38bf]        # 0x40cdc6
  409507:	mov    rcx,r13
  40950a:	call   0x406f08
  40950f:	test   eax,eax
  409511:	mov    r9,QWORD PTR [rsp+0x20]
  409516:	jne    0x409524
  409518:	add    DWORD PTR [rip+0x13135],0x1        # 0x41c654
  40951f:	jmp    0x407783
  409524:	lea    rdx,[rip+0x38a6]        # 0x40cdd1
  40952b:	mov    rcx,r13
  40952e:	mov    QWORD PTR [rsp+0x20],r9
  409533:	call   0x406f08
  409538:	test   eax,eax
  40953a:	je     0x409554
  40953c:	lea    rdx,[rip+0x389a]        # 0x40cddd
  409543:	mov    rcx,r13
  409546:	call   0x406f08
  40954b:	test   eax,eax
  40954d:	mov    r9,QWORD PTR [rsp+0x20]
  409552:	jne    0x409560
  409554:	add    DWORD PTR [rip+0x130f5],0x1        # 0x41c650
  40955b:	jmp    0x407783
  409560:	lea    rdx,[rip+0x3883]        # 0x40cdea
  409567:	mov    rcx,r13
  40956a:	mov    QWORD PTR [rsp+0x20],r9
  40956f:	call   0x406f08
  409574:	test   eax,eax
  409576:	mov    r9,QWORD PTR [rsp+0x20]
  40957b:	je     0x409595
  40957d:	lea    rdx,[rip+0x386e]        # 0x40cdf2
  409584:	mov    rcx,r13
  409587:	call   0x406f08
  40958c:	test   eax,eax
  40958e:	mov    r9,QWORD PTR [rsp+0x20]
  409593:	jne    0x4095bc
  409595:	mov    rax,QWORD PTR [rbp+r9*1+0x8]
  40959a:	lea    rdx,[rip+0x385a]        # 0x40cdfb
  4095a1:	lea    rcx,[rip+0x3859]        # 0x40ce01
  4095a8:	add    ebx,0x1
  4095ab:	mov    QWORD PTR [rip+0x130c6],rax        # 0x41c678
  4095b2:	call   0x4055e8
  4095b7:	jmp    0x407783
  4095bc:	lea    rdx,[rip+0x3844]        # 0x40ce07
  4095c3:	mov    rcx,r13
  4095c6:	mov    QWORD PTR [rsp+0x20],r9
  4095cb:	call   0x406f08
  4095d0:	test   eax,eax
  4095d2:	je     0x4095ec
  4095d4:	lea    rdx,[rip+0x3836]        # 0x40ce11
  4095db:	mov    rcx,r13
  4095de:	call   0x406f08
  4095e3:	test   eax,eax
  4095e5:	mov    r9,QWORD PTR [rsp+0x20]
  4095ea:	jne    0x409609
  4095ec:	xor    ecx,ecx
  4095ee:	add    DWORD PTR [rip+0x1310f],0x1        # 0x41c704
  4095f5:	call   0x405518
  4095fa:	or     DWORD PTR [rip+0xd7c],0x100        # 0x40a380
  409604:	jmp    0x407783
  409609:	lea    rdx,[rip+0x380c]        # 0x40ce1c
  409610:	mov    rcx,r13
  409613:	mov    QWORD PTR [rsp+0x20],r9
  409618:	call   0x406f08
  40961d:	test   eax,eax
  40961f:	mov    r9,QWORD PTR [rsp+0x20]
  409624:	je     0x40963e
  409626:	lea    rdx,[rip+0x37f7]        # 0x40ce24
  40962d:	mov    rcx,r13
  409630:	call   0x406f08
  409635:	test   eax,eax
  409637:	mov    r9,QWORD PTR [rsp+0x20]
  40963c:	jne    0x40966d
  40963e:	mov    rcx,QWORD PTR [rbp+r9*1+0x8]
  409643:	lea    r8,[rip+0x130ce]        # 0x41c718
  40964a:	lea    rdx,[rip+0x37dc]        # 0x40ce2d
  409651:	add    ebx,0x1
  409654:	call   0x406f10
  409659:	sub    eax,0x1
  40965c:	je     0x4096ba
  40965e:	mov    DWORD PTR [rip+0x130b0],0x0        # 0x41c718
  409668:	jmp    0x407783
  40966d:	lea    rdx,[rip+0x37bc]        # 0x40ce30
  409674:	mov    rcx,r13
  409677:	mov    QWORD PTR [rsp+0x20],r9
  40967c:	call   0x406f08
  409681:	test   eax,eax
  409683:	je     0x40969d
  409685:	lea    rdx,[rip+0x37ac]        # 0x40ce38
  40968c:	mov    rcx,r13
  40968f:	call   0x406f08
  409694:	test   eax,eax
  409696:	mov    r9,QWORD PTR [rsp+0x20]
  40969b:	jne    0x4096e0
  40969d:	xor    ecx,ecx
  40969f:	add    DWORD PTR [rip+0x1305e],0x1        # 0x41c704
  4096a6:	mov    DWORD PTR [rip+0x13048],0x1        # 0x41c6f8
  4096b0:	call   0x405518
  4096b5:	jmp    0x407783
  4096ba:	lea    r9,[rip+0xffffffffffff848f]        # 0x401b50
  4096c1:	lea    r8,[rip+0xffffffffffff84d8]        # 0x401ba0
  4096c8:	lea    rdx,[rip+0xffffffffffff8531]        # 0x401c00
  4096cf:	lea    rcx,[rip+0xffffffffffff851a]        # 0x401bf0
  4096d6:	call   0x4054e8
  4096db:	jmp    0x407783
  4096e0:	lea    rdx,[rip+0x375a]        # 0x40ce41
  4096e7:	mov    rcx,r13
  4096ea:	mov    QWORD PTR [rsp+0x20],r9
  4096ef:	call   0x406f08
  4096f4:	test   eax,eax
  4096f6:	mov    r9,QWORD PTR [rsp+0x20]
  4096fb:	je     0x409715
  4096fd:	lea    rdx,[rip+0x3745]        # 0x40ce49
  409704:	mov    rcx,r13
  409707:	call   0x406f08
  40970c:	test   eax,eax
  40970e:	mov    r9,QWORD PTR [rsp+0x20]
  409713:	jne    0x40974d
  409715:	mov    rcx,QWORD PTR [rbp+r9*1+0x8]
  40971a:	add    ebx,0x1
  40971d:	test   rcx,rcx
  409720:	je     0x407783
  409726:	call   0x406fb0
  40972b:	mov    DWORD PTR [rip+0x12fc7],eax        # 0x41c6f8
  409731:	sub    eax,0x1
  409734:	jne    0x407783
  40973a:	xor    ecx,ecx
  40973c:	add    DWORD PTR [rip+0x12fc1],0x1        # 0x41c704
  409743:	call   0x405518
  409748:	jmp    0x407783
  40974d:	lea    rdx,[rip+0x36fe]        # 0x40ce52
  409754:	mov    rcx,r13
  409757:	mov    QWORD PTR [rsp+0x20],r9
  40975c:	call   0x406f08
  409761:	test   eax,eax
  409763:	je     0x409781
  409765:	lea    rdx,[rip+0x36ee]        # 0x40ce5a
  40976c:	mov    rcx,r13
  40976f:	call   0x406f08
  409774:	test   eax,eax
  409776:	mov    r9,QWORD PTR [rsp+0x20]
  40977b:	jne    0x408d27
  409781:	add    DWORD PTR [rip+0x12eb8],0x1        # 0x41c640
  409788:	jmp    0x407783
  40978d:	lea    rdx,[rip+0x36e0]        # 0x40ce74
  409794:	mov    rcx,r13
  409797:	mov    QWORD PTR [rsp+0x20],r9
  40979c:	call   0x406f08
  4097a1:	test   eax,eax
  4097a3:	je     0x4097bd
  4097a5:	lea    rdx,[rip+0x36ce]        # 0x40ce7a
  4097ac:	mov    rcx,r13
  4097af:	call   0x406f08
  4097b4:	test   eax,eax
  4097b6:	mov    r9,QWORD PTR [rsp+0x20]
  4097bb:	jne    0x4097d3
  4097bd:	add    DWORD PTR [rip+0x12e6c],0x1        # 0x41c630
  4097c4:	or     DWORD PTR [rip+0xbb2],0x200        # 0x40a380
  4097ce:	jmp    0x407783
  4097d3:	lea    rdx,[rip+0x36a7]        # 0x40ce81
  4097da:	mov    rcx,r13
  4097dd:	mov    QWORD PTR [rsp+0x20],r9
  4097e2:	call   0x406f08
  4097e7:	test   eax,eax
  4097e9:	je     0x409803
  4097eb:	lea    rdx,[rip+0x3694]        # 0x40ce86
  4097f2:	mov    rcx,r13
  4097f5:	call   0x406f08
  4097fa:	test   eax,eax
  4097fc:	mov    r9,QWORD PTR [rsp+0x20]
  409801:	jne    0x40980f
  409803:	add    DWORD PTR [rip+0x12e02],0x1        # 0x41c60c
  40980a:	jmp    0x407783
  40980f:	lea    rdx,[rip+0x3676]        # 0x40ce8c
  409816:	mov    rcx,r13
  409819:	mov    QWORD PTR [rsp+0x20],r9
  40981e:	call   0x406f08
  409823:	test   eax,eax
  409825:	je     0x409843
  409827:	lea    rdx,[rip+0x366b]        # 0x40ce99
  40982e:	mov    rcx,r13
  409831:	call   0x406f08
  409836:	test   eax,eax
  409838:	mov    r9,QWORD PTR [rsp+0x20]
  40983d:	jne    0x40834b
  409843:	add    DWORD PTR [rip+0x12dee],0x1        # 0x41c638
  40984a:	jmp    0x407783
  40984f:	lea    rdx,[rip+0x3664]        # 0x40ceba
  409856:	mov    rcx,r13
  409859:	mov    QWORD PTR [rsp+0x20],r9
  40985e:	call   0x406f08
  409863:	test   eax,eax
  409865:	mov    r9,QWORD PTR [rsp+0x20]
  40986a:	je     0x409884
  40986c:	lea    rdx,[rip+0x364f]        # 0x40cec2
  409873:	mov    rcx,r13
  409876:	call   0x406f08
  40987b:	test   eax,eax
  40987d:	mov    r9,QWORD PTR [rsp+0x20]
  409882:	jne    0x40989f
  409884:	mov    rax,QWORD PTR [rbp+r9*1+0x8]
  409889:	add    ebx,0x1
  40988c:	add    DWORD PTR [rip+0x12e79],0x1        # 0x41c70c
  409893:	mov    QWORD PTR [rip+0x12e1e],rax        # 0x41c6b8
  40989a:	jmp    0x407783
  40989f:	lea    rdx,[rip+0x3625]        # 0x40cecb
  4098a6:	mov    rcx,r13
  4098a9:	mov    QWORD PTR [rsp+0x20],r9
  4098ae:	call   0x406f08
  4098b3:	test   eax,eax
  4098b5:	mov    r9,QWORD PTR [rsp+0x20]
  4098ba:	je     0x4098d4
  4098bc:	lea    rdx,[rip+0x3614]        # 0x40ced7
  4098c3:	mov    rcx,r13
  4098c6:	call   0x406f08
  4098cb:	test   eax,eax
  4098cd:	mov    r9,QWORD PTR [rsp+0x20]
  4098d2:	jne    0x4098ef
  4098d4:	mov    rax,QWORD PTR [rbp+r9*1+0x8]
  4098d9:	add    ebx,0x1
  4098dc:	add    DWORD PTR [rip+0x12e29],0x1        # 0x41c70c
  4098e3:	mov    QWORD PTR [rip+0x12dbe],rax        # 0x41c6a8
  4098ea:	jmp    0x407783
  4098ef:	lea    rdx,[rip+0x35ee]        # 0x40cee4
  4098f6:	mov    rcx,r13
  4098f9:	mov    QWORD PTR [rsp+0x20],r9
  4098fe:	call   0x406f08
  409903:	test   eax,eax
  409905:	je     0x40991f
  409907:	lea    rdx,[rip+0x35dd]        # 0x40ceeb
  40990e:	mov    rcx,r13
  409911:	call   0x406f08
  409916:	test   eax,eax
  409918:	mov    r9,QWORD PTR [rsp+0x20]
  40991d:	jne    0x40993a
  40991f:	lea    rcx,[rip+0xffffffffffffbb7a]        # 0x4054a0
  409926:	or     DWORD PTR [rip+0xa50],0x800        # 0x40a380
  409930:	call   0x4052f8
  409935:	jmp    0x407783
  40993a:	lea    rdx,[rip+0x35b2]        # 0x40cef3
  409941:	mov    rcx,r13
  409944:	mov    QWORD PTR [rsp+0x20],r9
  409949:	call   0x406f08
  40994e:	test   eax,eax
  409950:	je     0x40996a
  409952:	lea    rdx,[rip+0x35a5]        # 0x40cefe
  409959:	mov    rcx,r13
  40995c:	call   0x406f08
  409961:	test   eax,eax
  409963:	mov    r9,QWORD PTR [rsp+0x20]
  409968:	jne    0x409979
  40996a:	and    DWORD PTR [rip+0xa0c],0xfffeffff        # 0x40a380
  409974:	jmp    0x407783
  409979:	lea    rdx,[rip+0x358a]        # 0x40cf0a
  409980:	mov    rcx,r13
  409983:	mov    QWORD PTR [rsp+0x20],r9
  409988:	call   0x406f08
  40998d:	test   eax,eax
  40998f:	je     0x4099a9
  409991:	lea    rdx,[rip+0x357e]        # 0x40cf16
  409998:	mov    rcx,r13
  40999b:	call   0x406f08
  4099a0:	test   eax,eax
  4099a2:	mov    r9,QWORD PTR [rsp+0x20]
  4099a7:	jne    0x4099b5
  4099a9:	add    DWORD PTR [rip+0x12a38],0x1        # 0x41c3e8
  4099b0:	jmp    0x407783
  4099b5:	lea    rdx,[rip+0x3567]        # 0x40cf23
  4099bc:	mov    rcx,r13
  4099bf:	mov    QWORD PTR [rsp+0x20],r9
  4099c4:	call   0x406f08
  4099c9:	test   eax,eax
  4099cb:	mov    r9,QWORD PTR [rsp+0x20]
  4099d0:	je     0x4099ea
  4099d2:	lea    rdx,[rip+0x3550]        # 0x40cf29
  4099d9:	mov    rcx,r13
  4099dc:	call   0x406f08
  4099e1:	test   eax,eax
  4099e3:	mov    r9,QWORD PTR [rsp+0x20]
  4099e8:	jne    0x409a4a
  4099ea:	mov    rax,QWORD PTR [rbp+r9*1+0x8]
  4099ef:	add    ebx,0x1
  4099f2:	test   rax,rax
  4099f5:	je     0x407783
  4099fb:	mov    esi,DWORD PTR [rip+0x129eb]        # 0x41c3ec
  409a01:	cmp    BYTE PTR [rax],0x0
  409a04:	je     0x407783
  409a0a:	cmp    esi,0x3f
  409a0d:	jg     0x409a23
  409a0f:	mov    rcx,rax
  409a12:	movzx  eax,BYTE PTR [rcx]
  409a15:	cmp    al,0x3b
  409a17:	je     0x409a1d
  409a19:	cmp    al,0x20
  409a1b:	jne    0x409a93
  409a1d:	add    rcx,0x1
  409a21:	jmp    0x409a12
  409a23:	mov    rax,QWORD PTR [rsp+0x38]
  409a28:	call   rax
  409a2a:	lea    rcx,[rip+0x34ff]        # 0x40cf30
  409a31:	lea    r9,[rax+0x60]
  409a35:	mov    r8d,0x22
  409a3b:	mov    edx,0x1
  409a40:	call   0x406f58
  409a45:	jmp    0x407783
  409a4a:	lea    rdx,[rip+0x3502]        # 0x40cf53
  409a51:	mov    rcx,r13
  409a54:	mov    QWORD PTR [rsp+0x20],r9
  409a59:	call   0x406f08
  409a5e:	test   eax,eax
  409a60:	mov    r9,QWORD PTR [rsp+0x20]
  409a65:	je     0x409a7f
  409a67:	lea    rdx,[rip+0x34ee]        # 0x40cf5c
  409a6e:	mov    rcx,r13
  409a71:	call   0x406f08
  409a76:	test   eax,eax
  409a78:	mov    r9,QWORD PTR [rsp+0x20]
  409a7d:	jne    0x409aa7
  409a7f:	mov    rax,QWORD PTR [rbp+r9*1+0x8]
  409a84:	add    ebx,0x1
  409a87:	mov    QWORD PTR [rip+0x12b9a],rax        # 0x41c628
  409a8e:	jmp    0x407783
  409a93:	mov    rdi,rcx
  409a96:	movzx  eax,BYTE PTR [rdi]
  409a99:	test   al,0xdf
  409a9b:	je     0x409af7
  409a9d:	cmp    al,0x3b
  409a9f:	je     0x409af7
  409aa1:	add    rdi,0x1
  409aa5:	jmp    0x409a96
  409aa7:	lea    rdx,[rip+0x34b8]        # 0x40cf66
  409aae:	mov    rcx,r13
  409ab1:	mov    QWORD PTR [rsp+0x20],r9
  409ab6:	call   0x406f08
  409abb:	test   eax,eax
  409abd:	mov    r9,QWORD PTR [rsp+0x20]
  409ac2:	je     0x409adc
  409ac4:	lea    rdx,[rip+0x34a2]        # 0x40cf6d
  409acb:	mov    rcx,r13
  409ace:	call   0x406f08
  409ad3:	test   eax,eax
  409ad5:	mov    r9,QWORD PTR [rsp+0x20]
  409ada:	jne    0x409b3e
  409adc:	mov    rax,QWORD PTR [rbp+r9*1+0x8]
  409ae1:	add    ebx,0x1
  409ae4:	add    DWORD PTR [rip+0x12c15],0x1        # 0x41c700
  409aeb:	mov    QWORD PTR [rip+0x12b1e],rax        # 0x41c610
  409af2:	jmp    0x407783
  409af7:	cmp    rdi,rcx
  409afa:	mov    rax,rdi
  409afd:	je     0x409a01
  409b03:	mov    rdx,rdi
  409b06:	movsxd rsi,esi
  409b09:	sub    rdx,rcx
  409b0c:	call   0x4052d0
  409b11:	lea    rdx,[rip+0x128e8]        # 0x41c400
  409b18:	mov    QWORD PTR [rdx+rsi*8],rax
  409b1c:	movsxd rax,DWORD PTR [rip+0x128c9]        # 0x41c3ec
  409b23:	cmp    QWORD PTR [rdx+rax*8],0x0
  409b28:	mov    rsi,rax
  409b2b:	je     0x409b36
  409b2d:	add    esi,0x1
  409b30:	mov    DWORD PTR [rip+0x128b6],esi        # 0x41c3ec
  409b36:	mov    rax,rdi
  409b39:	jmp    0x409a01
  409b3e:	lea    rdx,[rip+0x3430]        # 0x40cf75
  409b45:	mov    rcx,r13
  409b48:	call   0x406f08
  409b4d:	test   eax,eax
  409b4f:	je     0x409b68
  409b51:	lea    rdx,[rip+0x3427]        # 0x40cf7f
  409b58:	mov    rcx,r13
  409b5b:	call   0x406f08
  409b60:	test   eax,eax
  409b62:	jne    0x408224
  409b68:	add    DWORD PTR [rip+0x12a99],0x1        # 0x41c608
  409b6f:	or     DWORD PTR [rip+0x807],0x20000        # 0x40a380
  409b79:	jmp    0x407783
  409b7e:	xor    edx,edx
  409b80:	mov    rcx,r14
  409b83:	call   0x402980
  409b88:	mov    r10,QWORD PTR [rsp+0x30]
  409b8d:	jmp    0x40814e
  409b92:	mov    rcx,r14
  409b95:	mov    QWORD PTR [rsp+0x30],r10
  409b9a:	call   0x407140
  409b9f:	mov    r10,QWORD PTR [rsp+0x30]
  409ba4:	jmp    0x40814e
  409ba9:	lea    rdx,[rip+0x182b]        # 0x40b3db
  409bb0:	mov    rcx,r14
  409bb3:	mov    QWORD PTR [rsp+0x30],r10
  409bb8:	call   0x406f08
  409bbd:	test   eax,eax
  409bbf:	mov    r10,QWORD PTR [rsp+0x30]
  409bc4:	je     0x408118
  409bca:	jmp    0x407b43
  409bcf:	nop
  409bd0:	(bad)  
  409bd1:	(bad)  
  409bd2:	(bad)  
  409bd3:	(bad)  
  409bd4:	(bad)  
  409bd5:	(bad)  
  409bd6:	(bad)  
  409bd7:	inc    DWORD PTR [rax]
  409bd9:	add    BYTE PTR [rax],al
  409bdb:	add    BYTE PTR [rax],al
  409bdd:	add    BYTE PTR [rax],al
  409bdf:	add    bh,bh
  409be1:	(bad)  
  409be2:	(bad)  
  409be3:	(bad)  
  409be4:	(bad)  
  409be5:	(bad)  
  409be6:	(bad)  
  409be7:	inc    DWORD PTR [rax]
  409be9:	add    BYTE PTR [rax],al
  409beb:	add    BYTE PTR [rax],al
  409bed:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000040a000 <.data>:
  40a000:	or     al,BYTE PTR [rax]
	...
  40a03e:	add    BYTE PTR [rax],al
  40a040:	add    BYTE PTR [rax+rax*2+0x0],cl
  40a044:	add    BYTE PTR [rax],al
  40a046:	add    BYTE PTR [rax],al
  40a048:	ror    BYTE PTR [rbx+0x40],0x0
  40a04c:	add    BYTE PTR [rax],al
  40a04e:	add    BYTE PTR [rax],al
  40a050:	or     BYTE PTR [rbx+0x40],0x0
  40a054:	add    BYTE PTR [rax],al
  40a056:	add    BYTE PTR [rax],al
  40a058:	rex
  40a059:	rex.WXB
  40a05a:	add    BYTE PTR [rax],al
  40a05d:	add    BYTE PTR [rax],al
  40a05f:	add    al,ah
  40a061:	push   rax
  40a062:	add    BYTE PTR [rax],al
  40a065:	add    BYTE PTR [rax],al
  40a067:	add    BYTE PTR [rax+0x4048],al
  40a06d:	add    BYTE PTR [rax],al
  40a06f:	add    BYTE PTR [rax+0x4015],dh
  40a075:	add    BYTE PTR [rax],al
  40a077:	add    BYTE PTR [rax],dh
  40a079:	rex.W
  40a07a:	add    BYTE PTR [rax],al
  40a07d:	add    BYTE PTR [rax],al
  40a07f:	add    BYTE PTR [rax],ah
  40a081:	push   rax
  40a082:	add    BYTE PTR [rax],al
  40a085:	add    BYTE PTR [rax],al
  40a087:	add    al,ah
  40a089:	rex.RXB
  40a08a:	add    BYTE PTR [rax],al
  40a08d:	add    BYTE PTR [rax],al
  40a08f:	add    BYTE PTR [rax],dh
  40a091:	adc    eax,0x40
  40a096:	add    BYTE PTR [rax],al
  40a098:	lock rex.WX
  40a09a:	add    BYTE PTR [rax],al
  40a09d:	add    BYTE PTR [rax],al
  40a09f:	add    BYTE PTR [rax+0x404a],ah
  40a0a5:	add    BYTE PTR [rax],al
  40a0a7:	add    BYTE PTR [rax+0x4a],dl
  40a0aa:	add    BYTE PTR [rax],al
	...
  40a0bd:	add    BYTE PTR [rax],al
  40a0bf:	add    BYTE PTR [rax+0x47],al
  40a0c2:	add    BYTE PTR [rax],al
  40a0c5:	add    BYTE PTR [rax],al
  40a0c7:	add    BYTE PTR [rax+0x4046],dh
  40a0cd:	add    BYTE PTR [rax],al
  40a0cf:	add    BYTE PTR [rax],ah
  40a0d1:	rex.RX
  40a0d2:	add    BYTE PTR [rax],al
  40a0d5:	add    BYTE PTR [rax],al
  40a0d7:	add    BYTE PTR [rax+0x4045],dh
  40a0dd:	add    BYTE PTR [rax],al
  40a0df:	add    BYTE PTR [rax+0x45],ah
  40a0e2:	add    BYTE PTR [rax],al
  40a0e5:	add    BYTE PTR [rax],al
  40a0e7:	add    BYTE PTR [rax+0x4017],al
  40a0ed:	add    BYTE PTR [rax],al
  40a0ef:	add    BYTE PTR [rax],al
  40a0f1:	(bad)  
  40a0f2:	add    BYTE PTR [rax],al
  40a0f5:	add    BYTE PTR [rax],al
  40a0f7:	add    BYTE PTR [rax+0x4016],al
  40a0fd:	add    BYTE PTR [rax],al
  40a0ff:	add    BYTE PTR [rax],ah
  40a101:	rex.RB
  40a102:	add    BYTE PTR [rax],al
  40a105:	add    BYTE PTR [rax],al
  40a107:	add    al,dl
  40a109:	rex.R
  40a10a:	add    BYTE PTR [rax],al
  40a10d:	add    BYTE PTR [rax],al
  40a10f:	add    al,al
  40a111:	rex.W
  40a112:	add    BYTE PTR [rax],al
  40a115:	add    BYTE PTR [rax],al
  40a117:	add    BYTE PTR [rdi+0xdeedbe],ch
	...
  40a125:	add    BYTE PTR [rax],al
  40a127:	add    BYTE PTR [rax+0x404d],ah
  40a12d:	add    BYTE PTR [rax],al
  40a12f:	add    al,dl
  40a131:	rex.WR
  40a132:	add    BYTE PTR [rax],al
	...
  40a13d:	add    BYTE PTR [rax],al
  40a13f:	add    BYTE PTR [rax+0x40a1],al
	...
  40a181:	rex.WR
  40a182:	add    BYTE PTR [rax],al
  40a185:	add    BYTE PTR [rax],al
  40a187:	add    al,al
  40a189:	rex.WXB
  40a18a:	add    BYTE PTR [rax],al
  40a18d:	add    BYTE PTR [rax],al
  40a18f:	add    BYTE PTR [rax+0x404b],al
  40a195:	add    BYTE PTR [rax],al
  40a197:	add    BYTE PTR [rax+0x4b],al
  40a19a:	add    BYTE PTR [rax],al
  40a19d:	add    BYTE PTR [rax],al
  40a19f:	add    al,ah
  40a1a1:	push   rax
  40a1a2:	add    BYTE PTR [rax],al
  40a1a5:	add    BYTE PTR [rax],al
  40a1a7:	add    BYTE PTR [rax+0x4048],al
  40a1ad:	add    BYTE PTR [rax],al
  40a1af:	add    BYTE PTR [rax+0x4015],dh
  40a1b5:	add    BYTE PTR [rax],al
  40a1b7:	add    BYTE PTR [rax],dh
  40a1b9:	rex.W
  40a1ba:	add    BYTE PTR [rax],al
  40a1bd:	add    BYTE PTR [rax],al
  40a1bf:	add    BYTE PTR [rax],ah
  40a1c1:	push   rax
  40a1c2:	add    BYTE PTR [rax],al
  40a1c5:	add    BYTE PTR [rax],al
  40a1c7:	add    al,ah
  40a1c9:	rex.RXB
  40a1ca:	add    BYTE PTR [rax],al
  40a1cd:	add    BYTE PTR [rax],al
  40a1cf:	add    BYTE PTR [rax],dh
  40a1d1:	adc    eax,0x40
  40a1d6:	add    BYTE PTR [rax],al
  40a1d8:	lock rex.WX
  40a1da:	add    BYTE PTR [rax],al
  40a1dd:	add    BYTE PTR [rax],al
  40a1df:	add    BYTE PTR [rax+0x404a],ah
  40a1e5:	add    BYTE PTR [rax],al
  40a1e7:	add    BYTE PTR [rax+0x4a],dl
  40a1ea:	add    BYTE PTR [rax],al
  40a1ed:	add    BYTE PTR [rax],al
  40a1ef:	add    BYTE PTR [rax+0x4049],dl
  40a1f5:	add    BYTE PTR [rax],al
  40a1f7:	add    BYTE PTR [rax+0x4047],dl
  40a1fd:	add    BYTE PTR [rax],al
  40a1ff:	add    BYTE PTR [rax+0x47],al
  40a202:	add    BYTE PTR [rax],al
  40a205:	add    BYTE PTR [rax],al
  40a207:	add    BYTE PTR [rax+0x4046],dh
  40a20d:	add    BYTE PTR [rax],al
  40a20f:	add    BYTE PTR [rax],ah
  40a211:	rex.RX
  40a212:	add    BYTE PTR [rax],al
  40a215:	add    BYTE PTR [rax],al
  40a217:	add    BYTE PTR [rax+0x4045],dh
  40a21d:	add    BYTE PTR [rax],al
  40a21f:	add    BYTE PTR [rax+0x45],ah
  40a222:	add    BYTE PTR [rax],al
  40a225:	add    BYTE PTR [rax],al
  40a227:	add    BYTE PTR [rax+0x4017],al
  40a22d:	add    BYTE PTR [rax],al
  40a22f:	add    BYTE PTR [rax],al
  40a231:	(bad)  
  40a232:	add    BYTE PTR [rax],al
  40a235:	add    BYTE PTR [rax],al
  40a237:	add    BYTE PTR [rax+0x4016],al
  40a23d:	add    BYTE PTR [rax],al
  40a23f:	add    BYTE PTR [rax],ah
  40a241:	rex.RB
  40a242:	add    BYTE PTR [rax],al
  40a245:	add    BYTE PTR [rax],al
  40a247:	add    al,dl
  40a249:	rex.R
  40a24a:	add    BYTE PTR [rax],al
  40a24d:	add    BYTE PTR [rax],al
  40a24f:	add    al,al
  40a251:	rex.W
  40a252:	add    BYTE PTR [rax],al
  40a255:	add    BYTE PTR [rax],al
  40a257:	add    BYTE PTR [rcx],al
	...
  40a355:	add    BYTE PTR [rax],al
  40a357:	add    BYTE PTR [rdi+0xdeedbe],ch
	...
  40a381:	add    BYTE PTR [rcx+0x0],al
  40a384:	add    BYTE PTR [rax],dl
	...
  40a3be:	add    BYTE PTR [rax],al
  40a3c0:	call   0x40e460
	...
  40a3cd:	add    BYTE PTR [rax],al
  40a3cf:	add    bh,bh
  40a3d1:	(bad)  
  40a3d2:	(bad)  
  40a3d3:	(bad)  
  40a3d4:	(bad)  
  40a3d5:	(bad)  
  40a3d6:	(bad)  
  40a3d7:	inc    DWORD PTR [rax]
  40a3d9:	add    BYTE PTR [rax],al
  40a3db:	add    BYTE PTR [rax],al
  40a3dd:	add    BYTE PTR [rax],al
  40a3df:	add    bh,bh
	...
  40a3ed:	add    BYTE PTR [rax],al
  40a3ef:	add    BYTE PTR [rdx],al
	...
  40a3fd:	add    BYTE PTR [rax],al
  40a3ff:	add    bh,bh
  40a401:	(bad)  
  40a402:	(bad)  
  40a403:	inc    DWORD PTR [rax]
	...
  40a40d:	add    BYTE PTR [rax],al
  40a40f:	add    BYTE PTR [rax+0x70],al
  40a412:	add    BYTE PTR [rax],al
  40a415:	add    BYTE PTR [rax],al
  40a417:	add    BYTE PTR [rax+0x70],dl
  40a41a:	add    BYTE PTR [rax],al
  40a41d:	add    BYTE PTR [rax],al
  40a41f:	add    BYTE PTR [rdx],dh
  40a421:	movabs ds:0x2b992ddf,al
  40a42a:	add    BYTE PTR [rax],al
  40a42c:	add    BYTE PTR [rax],al
  40a42e:	add    BYTE PTR [rax],al
  40a430:	int    0x5d
  40a432:	and    dl,dl
  40a434:	data16 (bad) 
  40a436:	(bad)  
  40a437:	inc    DWORD PTR [rax]
  40a439:	add    BYTE PTR [rax],al
  40a43b:	add    BYTE PTR [rax],al
  40a43d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000000040b000 <.rdata>:
  40b000:	sub    BYTE PTR [rsi+0x75],ch
  40b003:	ins    BYTE PTR es:[rdi],dx
  40b004:	ins    BYTE PTR es:[rdi],dx
  40b005:	sub    DWORD PTR [rax],eax
  40b007:	add    BYTE PTR [rbx+0x41],dl
  40b00a:	pop    rax
  40b00b:	cs jne 0x40b07c
  40b00e:	jo     0x40b071
  40b010:	jb     0x40b085
  40b012:	gs rex.RB outs dx,BYTE PTR fs:[rsi]
  40b016:	je     0x40b081
  40b018:	je     0x40b093
  40b01a:	rex.R
  40b01b:	movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x25]
  40b020:	jae    0x40b04e
  40b022:	and    BYTE PTR [rip+0x25202c73],ah        # 0x2560dc9b
  40b028:	jae    0x40b056
  40b02a:	and    BYTE PTR [rip+0xa2973],ah        # 0x4ad9a3
  40b030:	push   rbx
  40b031:	pop    r8
  40b033:	cs outs dx,BYTE PTR gs:[rsi]
  40b036:	je     0x40b0a1
  40b038:	je     0x40b0b3
  40b03a:	rex.R
  40b03b:	movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x25]
  40b040:	jae    0x40b06e
  40b042:	and    BYTE PTR [rip+0x25202c64],ah        # 0x2560dcac
  40b048:	jae    0x40b076
  40b04a:	and    BYTE PTR [rip+0x25202c73],ah        # 0x2560dcc3
  40b050:	jae    0x40b07b
  40b052:	or     al,BYTE PTR [rax]
  40b054:	add    BYTE PTR [rax],al
  40b056:	add    BYTE PTR [rax],al
  40b058:	push   rdx
  40b059:	(bad)  
  40b05a:	outs   dx,BYTE PTR ds:[rsi]
  40b05b:	and    BYTE PTR [rdi+0x75],ch
  40b05e:	je     0x40b080
  40b060:	outs   dx,DWORD PTR ds:[rsi]
  40b061:	data16 and BYTE PTR [rbp+0x65],ch
  40b065:	ins    DWORD PTR es:[rdi],dx
  40b066:	outs   dx,DWORD PTR ds:[rsi]
  40b067:	jb     0x40b0e2
  40b069:	and    BYTE PTR [rsi+0x65],ch
  40b06c:	gs fs jae 0x40b090
  40b070:	and    BYTE PTR ds:[rip+0x79622064],ah        # 0x79a2d0db
  40b077:	je     0x40b0de
  40b079:	jae    0x40b085
  40b07b:	add    BYTE PTR [rbx+0x41],dl
  40b07e:	pop    rax
  40b07f:	cs data16 (bad) 
  40b082:	je     0x40b0e5
  40b084:	ins    BYTE PTR es:[rdi],dx
  40b085:	rex.RB jb 0x40b0fa
  40b088:	outs   dx,DWORD PTR ds:[rsi]
  40b089:	jb     0x40b0c5
  40b08b:	and    BYTE PTR [rax],al
  40b08d:	push   rbx
  40b08e:	pop    r8
  40b090:	cs gs jb 0x40b106
  40b094:	outs   dx,DWORD PTR ds:[rsi]
  40b095:	jb     0x40b0d1
  40b097:	and    BYTE PTR [rax],al
  40b099:	push   rbx
  40b09a:	pop    r8
  40b09c:	cs ja  0x40b100
  40b09f:	jb     0x40b10f
  40b0a1:	imul   ebp,DWORD PTR [rsi+0x67],0x4c00203a
  40b0a8:	outs   dx,DWORD PTR ds:[rsi]
  40b0a9:	(bad)  
  40b0aa:	fs gs and BYTE PTR fs:[rbp+0x52],dl
  40b0b0:	rex.WR cmp rax,0x22732522
  40b0b6:	and    BYTE PTR [rcx+0x44],cl
  40b0b9:	cmp    eax,0x22732522
  40b0be:	or     al,BYTE PTR [rax]
  40b0c0:	(bad)  
  40b0c1:	add    BYTE PTR [rax],al
  40b0c3:	add    BYTE PTR [rax],al
  40b0c5:	add    BYTE PTR [rax],al
  40b0c7:	add    BYTE PTR [rsi+0x61],ah
  40b0ca:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40b0d2:	ins    BYTE PTR es:[rdi],dx
  40b0d3:	outs   dx,DWORD PTR ds:[rsi]
  40b0d4:	(bad)  
  40b0d5:	and    BYTE PTR fs:[rbp+0x78],ah
  40b0d9:	je     0x40b140
  40b0db:	jb     0x40b14b
  40b0dd:	(bad)  
  40b0de:	ins    BYTE PTR es:[rdi],dx
  40b0df:	and    BYTE PTR [rbp+0x6e],ah
  40b0e2:	je     0x40b14d
  40b0e4:	je     0x40b15f
  40b0e6:	and    BYTE PTR [rdx],ah
  40b0e8:	and    eax,0xa2273
  40b0ed:	js     0x40b15c
  40b0ef:	ins    BYTE PTR es:[rdi],dx
  40b0f0:	ins    BYTE PTR es:[rdi],dx
  40b0f1:	imul   ebp,DWORD PTR [rsi+0x74],0x6e00632e
  40b0f8:	outs   dx,DWORD PTR ds:[rsi]
  40b0f9:	fs gs sub eax,0x72705f3e
  40b100:	imul   esi,DWORD PTR [rsi+0x61],0x21206574
  40b107:	cmp    eax,0x4c554e20
  40b10c:	rex.WR add BYTE PTR [rax],r8b
  40b10f:	add    BYTE PTR [rdx],ch
  40b111:	sub    BYTE PTR [rdi+rbp*2+0x6e],ch
  40b115:	sub    ch,BYTE PTR [ecx]
  40b118:	outs   dx,BYTE PTR ds:[rsi]
  40b119:	outs   dx,DWORD PTR ds:[rsi]
  40b11a:	fs gs sub eax,0x72705f3e
  40b121:	imul   esi,DWORD PTR [rsi+0x61],0x3d206574
  40b128:	cmp    eax,0x6f6c2820
  40b12d:	outs   dx,BYTE PTR ds:[rsi]
  40b12e:	sub    DWORD PTR [eax],esp
  40b131:	xor    BYTE PTR [rax+0x38],bh
  40b134:	xor    DWORD PTR [rdi],esi
  40b136:	xor    dh,BYTE PTR [rsi]
  40b138:	xor    esi,DWORD PTR [rip+0x74200034]        # 0x7460b172
  40b13e:	outs   dx,DWORD PTR ds:[rsi]
  40b13f:	outs   dx,DWORD PTR ds:[rsi]
  40b140:	imul   esp,DWORD PTR [rax],0x25
  40b143:	ins    BYTE PTR es:[rdi],dx
  40b144:	and    BYTE PTR fs:[rbp+0x73],ch
  40b148:	or     al,BYTE PTR [rax]
  40b14a:	sub    eax,0x6425002d
  40b14f:	and    BYTE PTR [rip+0x73252064],ah        # 0x7365d1b9
  40b155:	and    BYTE PTR [rip+0x64252064],ah        # 0x6465d1bf
  40b15b:	add    BYTE PTR [rax],ah
  40b15d:	and    eax,0x4e000a73
  40b162:	outs   dx,DWORD PTR ds:[rsi]
  40b163:	fs and BYTE PTR gs:[rip+0x616d2073],ah        # 0x61add1de
  40b16b:	je     0x40b1d0
  40b16d:	push   0x70207365
  40b172:	(bad)  
  40b173:	je     0x40b1e9
  40b175:	gs jb  0x40b1e6
  40b178:	and    BYTE PTR [rip+0x78000a73],ah        # 0x7840bbf1
  40b17e:	ins    DWORD PTR es:[rdi],dx
  40b17f:	ins    BYTE PTR es:[rdi],dx
  40b180:	push   rbx
  40b181:	je     0x40b1f5
  40b183:	gs (bad) 
  40b185:	ins    DWORD PTR es:[rdi],dx
  40b186:	push   rax
  40b187:	jne    0x40b1fc
  40b189:	push   0x66202928
  40b18e:	(bad)  
  40b18f:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa65
  40b197:	add    BYTE PTR [rax+0x6d],bh
  40b19a:	ins    BYTE PTR es:[rdi],dx
  40b19b:	push   rax
  40b19c:	(bad)  
  40b19d:	je     0x40b213
  40b19f:	gs jb  0x40b210
  40b1a2:	rex.WRB (bad) 
  40b1a4:	je     0x40b209
  40b1a6:	push   0x646e6120
  40b1ab:	and    BYTE PTR [rax+0x6d],bh
  40b1ae:	ins    BYTE PTR es:[rdi],dx
  40b1af:	push   rbx
  40b1b0:	je     0x40b224
  40b1b2:	gs (bad) 
  40b1b4:	ins    DWORD PTR es:[rdi],dx
  40b1b5:	push   rax
  40b1b6:	jne    0x40b22b
  40b1b8:	push   0x73696420
  40b1bd:	(bad)  
  40b1be:	addr32 jb 0x40b226
  40b1c1:	or     al,BYTE PTR gs:[rax]
  40b1c4:	and    BYTE PTR [rax],ah
  40b1c6:	jo     0x40b229
  40b1c8:	je     0x40b23e
  40b1ca:	gs jb  0x40b23b
  40b1cd:	and    BYTE PTR [rip+0x6f6e2073],ah        # 0x6faed246
  40b1d3:	fs and BYTE PTR gs:[rip+0x78000a73],ah        # 0x7840bc4e
  40b1db:	ins    DWORD PTR es:[rdi],dx
  40b1dc:	ins    BYTE PTR es:[rdi],dx
  40b1dd:	push   rbx
  40b1de:	je     0x40b252
  40b1e0:	gs (bad) 
  40b1e2:	ins    DWORD PTR es:[rdi],dx
  40b1e3:	push   rax
  40b1e4:	outs   dx,DWORD PTR ds:[rsi]
  40b1e5:	jo     0x40b20f
  40b1e7:	sub    DWORD PTR [rax],esp
  40b1e9:	data16 (bad) 
  40b1eb:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x50000a65
  40b1f3:	(bad)  
  40b1f4:	je     0x40b26a
  40b1f6:	gs jb  0x40b267
  40b1f9:	and    BYTE PTR [rip+0x61662073],ah        # 0x61a6d272
  40b1ff:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40b207:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40b20a:	jo     0x40b275
  40b20c:	ins    BYTE PTR es:[rdi],dx
  40b20d:	or     al,BYTE PTR gs:[rax]
  40b210:	push   rdx
  40b211:	gs ins BYTE PTR es:[rdi],dx
  40b213:	(bad)  
  40b214:	js     0x40b243
  40b216:	rex.WRX
  40b217:	rex.RXB and BYTE PTR [r11+0x63],r14b
  40b21b:	push   0x20616d65
  40b220:	and    eax,0x61662073
  40b225:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40b22d:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40b230:	jo     0x40b29b
  40b232:	ins    BYTE PTR es:[rdi],dx
  40b233:	or     al,BYTE PTR gs:[rax]
  40b236:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b238:	ins    DWORD PTR es:[rdi],dx
  40b239:	jo     0x40b2a4
  40b23b:	ins    BYTE PTR es:[rdi],dx
  40b23c:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  40b243:	and    BYTE PTR [rbx+0x63],dh
  40b246:	push   0x73616d65
  40b24b:	add    BYTE PTR [rax],al
  40b24d:	add    BYTE PTR [rax],al
  40b24f:	add    BYTE PTR [rax+0x53],bl
  40b252:	and    BYTE PTR [rbx+0x63],r14b
  40b256:	push   0x20616d65
  40b25b:	and    eax,0x61662073
  40b260:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40b268:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40b26b:	jo     0x40b2d6
  40b26d:	ins    BYTE PTR es:[rdi],dx
  40b26e:	or     al,BYTE PTR gs:[rax]
  40b271:	push   rax
  40b272:	(bad)  
  40b273:	jb     0x40b2e8
  40b275:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
  40b27c:	and    BYTE PTR [rsi+0x61],dh
  40b27f:	ins    BYTE PTR es:[rdi],dx
  40b280:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x676e69
  40b288:	push   rax
  40b289:	(bad)  
  40b28a:	jb     0x40b2ff
  40b28c:	imul   ebp,DWORD PTR [rsi+0x67],0x636f4400
  40b293:	jne    0x40b302
  40b295:	outs   dx,BYTE PTR gs:[rsi]
  40b297:	je     0x40b2b9
  40b299:	and    eax,0x6f642073
  40b29e:	gs jae 0x40b2c1
  40b2a1:	outs   dx,BYTE PTR ds:[rsi]
  40b2a2:	outs   dx,DWORD PTR ds:[rsi]
  40b2a3:	je     0x40b2c5
  40b2a5:	jbe    0x40b308
  40b2a7:	ins    BYTE PTR es:[rdi],dx
  40b2a8:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x25000a65
  40b2b0:	jae    0x40b2d2
  40b2b2:	data16 (bad) 
  40b2b4:	imul   ebp,DWORD PTR [rbx+rsi*2+0x20],0x76206f74
  40b2bc:	(bad)  
  40b2bd:	ins    BYTE PTR es:[rdi],dx
  40b2be:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x25000a65
  40b2c6:	jae    0x40b2e8
  40b2c8:	jbe    0x40b32b
  40b2ca:	ins    BYTE PTR es:[rdi],dx
  40b2cb:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0xa7365
  40b2d3:	and    eax,0x203a2073
  40b2d8:	data16 (bad) 
  40b2da:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40b2e2:	jo     0x40b345
  40b2e4:	jb     0x40b359
  40b2e6:	or     al,BYTE PTR gs:[rax]
  40b2e9:	push   rbp
  40b2ea:	outs   dx,BYTE PTR ds:[rsi]
  40b2eb:	(bad)  
  40b2ec:	(bad)  
  40b2ed:	ins    BYTE PTR es:[rdi],dx
  40b2ee:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40b2f3:	outs   dx,DWORD PTR ds:[rsi]
  40b2f4:	jo     0x40b35b
  40b2f6:	outs   dx,BYTE PTR ds:[rsi]
  40b2f7:	and    BYTE PTR [rip+0x75000a73],ah        # 0x7540bd70
  40b2fd:	jae    0x40b364
  40b2ff:	jb     0x40b360
  40b301:	fs (bad) 
  40b303:	je     0x40b366
  40b305:	add    BYTE PTR [rax],al
  40b307:	add    BYTE PTR [rip+0x61762073],ah        # 0x61b6d380
  40b30d:	ins    BYTE PTR es:[rdi],dx
  40b30e:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x206e6f69
  40b316:	outs   dx,BYTE PTR gs:[esi]
  40b319:	gs jb  0x40b37d
  40b31c:	je     0x40b383
  40b31e:	and    BYTE PTR fs:[rcx+0x6e],ah
  40b322:	and    BYTE PTR [rcx+0x6e],ch
  40b325:	je     0x40b38c
  40b327:	jb     0x40b397
  40b329:	(bad)  
  40b32a:	ins    BYTE PTR es:[rdi],dx
  40b32b:	and    BYTE PTR [rbp+0x72],ah
  40b32e:	jb     0x40b39f
  40b330:	jb     0x40b33c
  40b332:	add    BYTE PTR [rbx+0x41],dl
  40b335:	pop    rax
  40b336:	and    BYTE PTR [rdi+0x65],ah
  40b339:	outs   dx,BYTE PTR ds:[rsi]
  40b33a:	gs jb  0x40b39e
  40b33d:	je     0x40b3a4
  40b33f:	and    BYTE PTR fs:[rcx+0x20],ah
  40b343:	outs   dx,DWORD PTR fs:[rsi]
  40b345:	movsxd esp,DWORD PTR [rax]
  40b347:	and    DWORD PTR [rdx],ecx
  40b349:	add    BYTE PTR [rip+0x703c0073],ah        # 0x707cb3c2
  40b34f:	add    BYTE PTR ds:[rip+0x64253a73],ah        # 0x6465edc9
  40b356:	cmp    ah,BYTE PTR [rax]
  40b358:	add    BYTE PTR [rbp+0x6e],al
  40b35b:	je     0x40b3c6
  40b35d:	je     0x40b3d8
  40b35f:	cmp    ah,BYTE PTR [rax]
  40b361:	ins    BYTE PTR es:[rdi],dx
  40b362:	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
  40b369:	and    BYTE PTR [rax],al
  40b36b:	cmp    al,0x70
  40b36d:	jb     0x40b3d4
  40b36f:	or     al,BYTE PTR ds:[rax]
  40b372:	or     al,BYTE PTR [rax]
  40b374:	and    eax,0xa5e0063
  40b379:	add    BYTE PTR [rdi+rbp*1],bh
  40b37c:	jo     0x40b3f0
  40b37e:	gs add BYTE PTR ds:[rax],ah
  40b382:	add    BYTE PTR [rdx+riz*2],bh
  40b385:	ds jbe 0x40b3e9
  40b388:	ins    BYTE PTR es:[rdi],dx
  40b389:	imul   esp,DWORD PTR [rcx+rbp*2+0x74],0x61772079
  40b391:	jb     0x40b401
  40b393:	imul   ebp,DWORD PTR [rsi+0x67],0x3e622f3c
  40b39a:	cmp    ah,BYTE PTR [rax]
  40b39c:	add    BYTE PTR [rdi+rbp*1],bh
  40b39f:	jo     0x40b3df
  40b3a1:	or     al,BYTE PTR [rax]
  40b3a3:	cmp    al,0x62
  40b3a5:	ds jbe 0x40b409
  40b3a8:	ins    BYTE PTR es:[rdi],dx
  40b3a9:	imul   esp,DWORD PTR [rcx+rbp*2+0x74],0x72652079
  40b3b1:	jb     0x40b422
  40b3b3:	jb     0x40b3f1
  40b3b5:	(bad)  
  40b3b6:	(bad)  
  40b3b7:	cmp    ah,BYTE PTR ds:[rax]
  40b3ba:	add    BYTE PTR [rdx+riz*2],bh
  40b3bd:	ds ja  0x40b421
  40b3c0:	jb     0x40b430
  40b3c2:	imul   ebp,DWORD PTR [rsi+0x67],0x3e622f3c
  40b3c9:	cmp    ah,BYTE PTR [rax]
  40b3cb:	add    BYTE PTR [rdx+riz*2],bh
  40b3ce:	ds gs jb 0x40b444
  40b3d2:	outs   dx,DWORD PTR ds:[rsi]
  40b3d3:	jb     0x40b411
  40b3d5:	(bad)  
  40b3d6:	(bad)  
  40b3d7:	cmp    ah,BYTE PTR ds:[rax]
  40b3da:	add    BYTE PTR [rip+0x302e3100],ch        # 0x306ee4e0
  40b3e0:	add    BYTE PTR [rcx+0x6e],ch
  40b3e3:	outs   dx,WORD PTR ds:[rsi]
  40b3e5:	add    BYTE PTR [rcx+0x62],ah
  40b3e8:	movsxd eax,DWORD PTR [rax]
  40b3ea:	jb     0x40b44e
  40b3ec:	add    BYTE PTR [rax+0x69],bl
  40b3ef:	outs   dx,BYTE PTR ds:[rsi]
  40b3f0:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40b3f4:	and    BYTE PTR gs:[rax+0x72],dh
  40b3f8:	outs   dx,DWORD PTR ds:[rsi]
  40b3f9:	movsxd esp,DWORD PTR [rbp+0x73]
  40b3fc:	jae    0x40b467
  40b3fe:	outs   dx,BYTE PTR ds:[rsi]
  40b3ff:	add    BYTE PTR [edi+0x75],cl
  40b403:	je     0x40b425
  40b405:	outs   dx,DWORD PTR ds:[rsi]
  40b406:	data16 and BYTE PTR [rbp+0x65],ch
  40b40a:	ins    DWORD PTR es:[rdi],dx
  40b40b:	outs   dx,DWORD PTR ds:[rsi]
  40b40c:	jb     0x40b487
  40b40e:	and    BYTE PTR [rsi+0x6f],ah
  40b411:	jb     0x40b433
  40b413:	pop    rax
  40b414:	push   rax
  40b415:	(bad)  
  40b416:	je     0x40b480
  40b418:	or     al,BYTE PTR [rax]
  40b41a:	pop    rax
  40b41b:	push   rax
  40b41c:	(bad)  
  40b41d:	je     0x40b487
  40b41f:	and    BYTE PTR [rbp+0x76],ah
  40b422:	(bad)  
  40b423:	ins    BYTE PTR es:[rdi],dx
  40b424:	jne    0x40b487
  40b426:	je     0x40b491
  40b428:	outs   dx,DWORD PTR ds:[rsi]
  40b429:	outs   dx,BYTE PTR ds:[rsi]
  40b42a:	and    BYTE PTR [rsi+0x61],ah
  40b42d:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x58000a65
  40b435:	push   rax
  40b436:	(bad)  
  40b437:	je     0x40b4a1
  40b439:	and    BYTE PTR [rbx+0x65],dh
  40b43c:	je     0x40b45e
  40b43e:	imul   esi,DWORD PTR [rbx+0x20],0x74706d65
  40b445:	jns    0x40b451
  40b447:	add    BYTE PTR [rdx+rsi*2+0x75],dh
  40b44b:	add    BYTE PTR gs:[rsi+0x61],ah
  40b44f:	ins    BYTE PTR es:[rdi],dx
  40b450:	jae    0x40b4b7
  40b452:	add    BYTE PTR [rcx+0x6e],cl
  40b455:	imul   bp,WORD PTR [rsi+0x69],0x7974
  40b45b:	add    BYTE PTR [rip+0x69666e49],ch        # 0x69a722aa
  40b461:	outs   dx,BYTE PTR ds:[rsi]
  40b462:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x4e614e
  40b46a:	and    eax,0x6730
  40b46f:	add    BYTE PTR [rax+0x50],bl
  40b472:	(bad)  
  40b473:	je     0x40b4dd
  40b475:	and    BYTE PTR [rdi+0x62],cl
  40b478:	push   0x65
  40b47a:	movsxd esi,DWORD PTR [rax+riz*1+0x69]
  40b47e:	jae    0x40b4a0
  40b480:	jne    0x40b4f0
  40b482:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  40b489:	imul   edi,DWORD PTR [rdx+0x65],0xa64
  40b490:	pop    rax
  40b491:	push   rax
  40b492:	(bad)  
  40b493:	je     0x40b4fd
  40b495:	and    BYTE PTR [rdi+0x62],ch
  40b498:	push   0x65
  40b49a:	movsxd esi,DWORD PTR [rax+riz*1+0x6f]
  40b49e:	data16 and BYTE PTR [rbp+0x6e],dh
  40b4a2:	gs js  0x40b515
  40b4a5:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  40b4aa:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  40b4ae:	or     al,BYTE PTR gs:[rax]
  40b4b1:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b4b3:	jo     0x40b52e
  40b4b5:	imul   ebp,DWORD PTR [rsi+0x67],0x65724600
  40b4bc:	imul   ebp,DWORD PTR gs:[rsi+0x67],0x69726f20
  40b4c4:	imul   ebp,DWORD PTR [esi+0x61],0x6c
  40b4cc:	add    BYTE PTR [rax],al
  40b4ce:	add    BYTE PTR [rax],al
  40b4d0:	movsxd ebp,DWORD PTR [rdi+0x75]
  40b4d3:	ins    BYTE PTR es:[rdi],dx
  40b4d4:	and    BYTE PTR fs:[rsi+0x6f],ch
  40b4d8:	je     0x40b4fa
  40b4da:	addr32 gs je 0x40b4fe
  40b4de:	jbe    0x40b541
  40b4e0:	ins    BYTE PTR es:[rdi],dx
  40b4e1:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x20747369
  40b4e9:	outs   dx,DWORD PTR ds:[rsi]
  40b4ea:	data16 and BYTE PTR [rbp+0x6c],ah
  40b4ee:	gs ins DWORD PTR es:[rdi],dx
  40b4f0:	outs   dx,BYTE PTR gs:[rsi]
  40b4f2:	je     0x40b567
  40b4f4:	or     al,BYTE PTR [rax]
  40b4f6:	add    BYTE PTR [rax],al
  40b4f8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  40b4fa:	and    BYTE PTR [rbp+0x6c],ah
  40b4fd:	gs ins DWORD PTR es:[rdi],dx
  40b4ff:	outs   dx,BYTE PTR gs:[rsi]
  40b501:	je     0x40b523
  40b503:	movsxd esp,DWORD PTR [rcx+0x6e]
  40b506:	and    BYTE PTR [rdx+0x65],ah
  40b509:	and    BYTE PTR [rcx+0x6e],ch
  40b50c:	jae    0x40b573
  40b50e:	jb     0x40b584
  40b510:	gs and BYTE PTR fs:[rbp+0x6e],dh
  40b515:	fs gs jb 0x40b539
  40b519:	jb     0x40b58a
  40b51b:	outs   dx,DWORD PTR ds:[rsi]
  40b51c:	je     0x40b528
  40b51e:	add    BYTE PTR [rax],al
  40b520:	and    eax,0x6c652064
  40b525:	gs ins DWORD PTR es:[rdi],dx
  40b527:	outs   dx,BYTE PTR gs:[rsi]
  40b529:	je     0x40b54b
  40b52b:	je     0x40b5a6
  40b52d:	jo     0x40b594
  40b52f:	jae    0x40b551
  40b531:	movsxd esp,DWORD PTR [rcx+0x6e]
  40b534:	and    BYTE PTR [rdx+0x65],ah
  40b537:	and    BYTE PTR [rcx+0x6e],ch
  40b53a:	jae    0x40b5a1
  40b53c:	jb     0x40b5b2
  40b53e:	gs and BYTE PTR fs:[rbp+0x6e],dh
  40b543:	fs gs jb 0x40b567
  40b547:	jb     0x40b5b8
  40b549:	outs   dx,DWORD PTR ds:[rsi]
  40b54a:	je     0x40b586
  40b54c:	or     al,BYTE PTR [rax]
  40b54e:	and    eax,0xa73
  40b553:	add    BYTE PTR [rax],al
  40b555:	add    BYTE PTR [rax],al
  40b557:	add    BYTE PTR [rdi+rbp*2+0x63],al
  40b55b:	jne    0x40b5ca
  40b55d:	outs   dx,BYTE PTR gs:[rsi]
  40b55f:	je     0x40b581
  40b561:	outs   dx,DWORD PTR fs:[rsi]
  40b563:	gs jae 0x40b586
  40b566:	outs   dx,BYTE PTR ds:[rsi]
  40b567:	outs   dx,DWORD PTR ds:[rsi]
  40b568:	je     0x40b58a
  40b56a:	push   0x20657661
  40b56f:	(bad)  
  40b570:	and    BYTE PTR [rdx+0x6f],dh
  40b573:	outs   dx,DWORD PTR ds:[rsi]
  40b574:	je     0x40b596
  40b576:	gs ins BYTE PTR es:[rdi],dx
  40b578:	gs ins DWORD PTR es:[rdi],dx
  40b57a:	outs   dx,BYTE PTR gs:[rsi]
  40b57c:	je     0x40b57e
  40b57e:	ja     0x40b5e1
  40b580:	ins    BYTE PTR es:[rdi],dx
  40b581:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  40b585:	and    BYTE PTR [rax+rbp*2+0x72],dh
  40b589:	outs   dx,DWORD PTR ds:[rsi]
  40b58a:	jne    0x40b5f3
  40b58c:	push   0x65687420
  40b591:	and    BYTE PTR [rdi+rbp*2+0x63],ah
  40b595:	add    BYTE PTR [rax],al
  40b597:	add    BYTE PTR [rsi+0x61],ah
  40b59a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40b5a2:	ja     0x40b605
  40b5a4:	ins    BYTE PTR es:[rdi],dx
  40b5a5:	imul   esp,DWORD PTR [rax],0x74
  40b5a8:	push   0x67756f72
  40b5ad:	push   0x65687420
  40b5b2:	and    BYTE PTR [rdi+rbp*2+0x63],ah
  40b5b6:	or     al,BYTE PTR [rax]
  40b5b8:	rex.RX (bad) 
  40b5ba:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40b5c2:	movsxd esi,DWORD PTR [rdx+0x61]
  40b5c5:	je     0x40b62c
  40b5c7:	and    BYTE PTR [rcx+0x20],ah
  40b5ca:	jb     0x40b631
  40b5cc:	(bad)  
  40b5cd:	fs gs jb 0x40b5f1
  40b5d1:	data16 jb 0x40b643
  40b5d4:	ins    DWORD PTR es:[rdi],dx
  40b5d5:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40b5d9:	and    BYTE PTR [rdi+rbp*2+0x63],ah
  40b5dd:	jne    0x40b64c
  40b5df:	outs   dx,BYTE PTR gs:[rsi]
  40b5e1:	je     0x40b5ed
  40b5e3:	add    BYTE PTR [rdi+0x62],dh
  40b5e6:	add    BYTE PTR [rsi+0x61],ah
  40b5e9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40b5f1:	outs   dx,DWORD PTR ds:[rsi]
  40b5f2:	jo     0x40b659
  40b5f4:	outs   dx,BYTE PTR ds:[rsi]
  40b5f5:	and    BYTE PTR [rip+0x53000a73],ah        # 0x5340c06e
  40b5fb:	(bad)  
  40b5fc:	jbe    0x40b667
  40b5fe:	outs   dx,BYTE PTR ds:[rsi]
  40b5ff:	add    BYTE PTR [ebx+0x61],al
  40b603:	outs   dx,BYTE PTR ds:[rsi]
  40b604:	(bad)  
  40b605:	je     0x40b627
  40b607:	ja     0x40b67b
  40b609:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x61746164
  40b611:	or     al,BYTE PTR [rax]
  40b613:	rex.RX (bad) 
  40b615:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40b61d:	movsxd esp,DWORD PTR [rcx+0x6e]
  40b620:	outs   dx,DWORD PTR ds:[rsi]
  40b621:	outs   dx,BYTE PTR ds:[rsi]
  40b622:	imul   esp,DWORD PTR [rbx+0x61],0x657a696c
  40b629:	or     al,BYTE PTR [rax]
  40b62b:	data16 (bad) 
  40b62d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x76617320
  40b635:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40b63a:	and    eax,0x50000a73
  40b63f:	(bad)  
  40b640:	jb     0x40b6b5
  40b642:	imul   ebp,DWORD PTR [rsi+0x67],0x44544420
  40b649:	add    BYTE PTR [rbx+0x6f],al
  40b64c:	jne    0x40b6ba
  40b64e:	and    BYTE PTR fs:[rsi+0x6f],ch
  40b652:	je     0x40b674
  40b654:	jo     0x40b6b7
  40b656:	jb     0x40b6cb
  40b658:	and    BYTE PTR gs:[rsp+rdx*2+0x44],al
  40b65d:	and    BYTE PTR [rip+0xa73],ah        # 0x40c0d6
  40b663:	add    BYTE PTR [rax],al
  40b665:	add    BYTE PTR [rax],al
  40b667:	add    BYTE PTR [rbx+0x6f],al
  40b66a:	jne    0x40b6d8
  40b66c:	outs   dx,BYTE PTR fs:[rsi]
  40b66e:	(bad)  
  40b66f:	je     0x40b691
  40b671:	(bad)  
  40b672:	ins    BYTE PTR es:[rdi],dx
  40b673:	ins    BYTE PTR es:[rdi],dx
  40b674:	outs   dx,DWORD PTR ds:[rsi]
  40b675:	movsxd esp,DWORD PTR [rcx+0x74]
  40b678:	and    BYTE PTR gs:[rsi+0x61],dh
  40b67c:	ins    BYTE PTR es:[rdi],dx
  40b67d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x206e6f69
  40b685:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40b688:	je     0x40b6ef
  40b68a:	js     0x40b700
  40b68c:	or     al,BYTE PTR [rax]
  40b68e:	add    BYTE PTR [rax],al
  40b690:	rex.R outs dx,DWORD PTR ds:[rsi]
  40b692:	movsxd esi,DWORD PTR [rbp+0x6d]
  40b695:	outs   dx,BYTE PTR gs:[rsi]
  40b697:	je     0x40b6b9
  40b699:	and    eax,0x6f642073
  40b69e:	gs jae 0x40b6c1
  40b6a1:	outs   dx,BYTE PTR ds:[rsi]
  40b6a2:	outs   dx,DWORD PTR ds:[rsi]
  40b6a3:	je     0x40b6c5
  40b6a5:	jbe    0x40b708
  40b6a7:	ins    BYTE PTR es:[rdi],dx
  40b6a8:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x67612065
  40b6b0:	(bad)  
  40b6b1:	imul   ebp,DWORD PTR [rsi+0x73],0x73252074
  40b6b8:	or     al,BYTE PTR [rax]
  40b6ba:	push   rsi
  40b6bb:	(bad)  
  40b6bc:	ins    BYTE PTR es:[rdi],dx
  40b6bd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x20676e69
  40b6c5:	(bad)  
  40b6c6:	addr32 (bad) 
  40b6c8:	imul   ebp,DWORD PTR [rsi+0x73],0x54442074
  40b6cf:	add    BYTE PTR [rsi+0x61],r10b
  40b6d3:	ins    BYTE PTR es:[rdi],dx
  40b6d4:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x676e69
  40b6dc:	rex.RX jb 0x40b744
  40b6df:	imul   ebp,DWORD PTR gs:[rsi+0x67],0xff755a00
  40b6e7:	(bad)  
  40b6e8:	cmp    BYTE PTR [rsi-0x1],bh
  40b6eb:	call   FWORD PTR [rip+0xffffffffdeffff7e]        # 0xffffffffdf40b66f
  40b6f1:	jge    0x40b6f2
  40b6f3:	inc    eax
  40b6f5:	jle    0x40b6f6
  40b6f7:	call   QWORD PTR [rbp+0x73]
  40b6fa:	(bad)  
  40b6fb:	and    BYTE PTR gs:[edx],bh
  40b6ff:	and    BYTE PTR [rip+0x6f5b2073],ah        # 0x6f9bd778
  40b705:	jo     0x40b77b
  40b707:	imul   ebp,DWORD PTR [rdi+0x6e],0x58205d73
  40b70e:	rex.WRB
  40b70f:	rex.WR
  40b710:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x2e20
  40b717:	cs or  al,BYTE PTR cs:[rax]
  40b71b:	add    BYTE PTR [rax],al
  40b71d:	add    BYTE PTR [rax],al
  40b71f:	add    BYTE PTR [rcx],cl
  40b721:	push   rax
  40b722:	(bad)  
  40b723:	jb     0x40b798
  40b725:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  40b72a:	and    BYTE PTR [rax+0x4d],bl
  40b72d:	rex.WR and BYTE PTR [rsi+0x69],r12b
  40b731:	ins    BYTE PTR es:[rdi],dx
  40b732:	gs jae 0x40b755
  40b735:	(bad)  
  40b736:	outs   dx,BYTE PTR ds:[rsi]
  40b737:	and    BYTE PTR fs:[rdi+0x75],ch
  40b73b:	je     0x40b7ad
  40b73d:	jne    0x40b7b3
  40b73f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40b743:	and    BYTE PTR [rdx+0x65],dh
  40b746:	jae    0x40b7bd
  40b748:	ins    BYTE PTR es:[rdi],dx
  40b749:	je     0x40b76b
  40b74b:	outs   dx,DWORD PTR ds:[rsi]
  40b74c:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  40b751:	and    BYTE PTR [rax+0x61],dh
  40b754:	jb     0x40b7c9
  40b756:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  40b75d:	add    BYTE PTR [rax],al
  40b75f:	add    BYTE PTR [rcx],cl
  40b761:	sub    eax,0x7265762d
  40b766:	jae    0x40b7d1
  40b768:	outs   dx,DWORD PTR ds:[rsi]
  40b769:	outs   dx,BYTE PTR ds:[rsi]
  40b76a:	and    BYTE PTR [rdx],bh
  40b76c:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  40b770:	jo     0x40b7de
  40b772:	(bad)  
  40b773:	jns    0x40b795
  40b775:	je     0x40b7df
  40b777:	and    BYTE PTR gs:[rsi+0x65],dh
  40b77b:	jb     0x40b7f0
  40b77d:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  40b784:	je     0x40b7ee
  40b786:	and    BYTE PTR gs:[rax+0x4d],bl
  40b78a:	rex.WR and BYTE PTR [rcx+rbp*2+0x62],r13b
  40b78f:	jb     0x40b7f2
  40b791:	jb     0x40b80c
  40b793:	and    BYTE PTR [rbp+0x73],dh
  40b796:	gs add BYTE PTR fs:[rax],al
  40b79a:	add    BYTE PTR [rax],al
  40b79c:	add    BYTE PTR [rax],al
  40b79e:	add    BYTE PTR [rax],al
  40b7a0:	or     DWORD PTR [rip+0x6265642d],ebp        # 0x62a61bd3
  40b7a6:	jne    0x40b80f
  40b7a8:	and    BYTE PTR [rdx],bh
  40b7aa:	and    BYTE PTR [rbp+rsi*2+0x6d],ah
  40b7ae:	jo     0x40b7d0
  40b7b0:	je     0x40b81a
  40b7b2:	and    BYTE PTR gs:[rsi+0x6f],ch
  40b7b6:	fs gs jae 0x40b7da
  40b7ba:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40b7bd:	je     0x40b824
  40b7bf:	outs   dx,BYTE PTR ds:[rsi]
  40b7c0:	je     0x40b7e2
  40b7c2:	ja     0x40b82c
  40b7c4:	outs   dx,BYTE PTR gs:[rsi]
  40b7c6:	and    BYTE PTR [rbp+0x73],dh
  40b7c9:	imul   ebp,DWORD PTR [rsi+0x67],0x732d2d20
  40b7d0:	je     0x40b844
  40b7d2:	gs (bad) 
  40b7d4:	ins    DWORD PTR es:[rdi],dx
  40b7d5:	add    BYTE PTR [rax],al
  40b7d7:	add    BYTE PTR [rcx],cl
  40b7d9:	sub    eax,0x706f632d
  40b7de:	jns    0x40b800
  40b7e0:	cmp    ah,BYTE PTR [rax]
  40b7e2:	jne    0x40b857
  40b7e4:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40b7ea:	je     0x40b851
  40b7ec:	jae    0x40b862
  40b7ee:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40b7f2:	and    BYTE PTR [rcx+0x6e],ch
  40b7f5:	je     0x40b85c
  40b7f7:	jb     0x40b867
  40b7f9:	(bad)  
  40b7fa:	ins    BYTE PTR es:[rdi],dx
  40b7fb:	and    BYTE PTR [rbx+0x6f],ah
  40b7fe:	jo     0x40b879
  40b800:	and    BYTE PTR [rcx+0x6d],ch
  40b803:	jo     0x40b871
  40b805:	gs ins DWORD PTR es:[rdi],dx
  40b807:	outs   dx,BYTE PTR gs:[rsi]
  40b809:	je     0x40b86c
  40b80b:	je     0x40b876
  40b80d:	outs   dx,DWORD PTR ds:[rsi]
  40b80e:	outs   dx,BYTE PTR ds:[rsi]
  40b80f:	add    BYTE PTR [rcx],cl
  40b811:	sub    eax,0x6365722d
  40b816:	outs   dx,DWORD PTR ds:[rsi]
  40b817:	jbe    0x40b87e
  40b819:	jb     0x40b83b
  40b81b:	cmp    ah,BYTE PTR [rax]
  40b81d:	outs   dx,DWORD PTR ds:[rsi]
  40b81e:	jne    0x40b894
  40b820:	jo     0x40b897
  40b822:	je     0x40b844
  40b824:	ja     0x40b88e
  40b826:	(bad)  
  40b827:	je     0x40b849
  40b829:	ja     0x40b88c
  40b82b:	jae    0x40b84d
  40b82d:	jo     0x40b890
  40b82f:	jb     0x40b8a4
  40b831:	(bad)  
  40b832:	(bad)  
  40b833:	ins    BYTE PTR es:[rdi],dx
  40b834:	and    BYTE PTR gs:[rdi+0x6e],ch
  40b838:	and    BYTE PTR [rdx+0x72],ah
  40b83b:	outs   dx,DWORD PTR ds:[rsi]
  40b83c:	imul   esp,DWORD PTR [rbp+0x6e],0x20
  40b840:	pop    rax
  40b841:	rex.WRB
  40b842:	rex.WR and BYTE PTR [rdi+rbp*2+0x63],r12b
  40b847:	jne    0x40b8b6
  40b849:	outs   dx,BYTE PTR gs:[rsi]
  40b84b:	je     0x40b8c0
  40b84d:	add    BYTE PTR [rax],al
  40b84f:	add    BYTE PTR [rcx],cl
  40b851:	sub    eax,0x6775682d
  40b856:	and    BYTE PTR gs:[rdx],bh
  40b859:	and    BYTE PTR [rdx+0x65],dh
  40b85c:	ins    DWORD PTR es:[rdi],dx
  40b85d:	outs   dx,DWORD PTR ds:[rsi]
  40b85e:	jbe    0x40b8c5
  40b860:	and    BYTE PTR [rcx+0x6e],ah
  40b863:	jns    0x40b885
  40b865:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  40b86c:	ins    BYTE PTR es:[rdi],dx
  40b86d:	and    BYTE PTR [rcx+0x72],ah
  40b870:	(bad)  
  40b871:	imul   esi,DWORD PTR [rdx+rsi*2+0x61],0x70207972
  40b879:	(bad)  
  40b87a:	jb     0x40b8ef
  40b87c:	gs jb  0x40b89f
  40b87f:	ins    BYTE PTR es:[rdi],dx
  40b880:	imul   ebp,DWORD PTR [rbp+0x69],0x7374
  40b887:	add    BYTE PTR [rcx],cl
  40b889:	sub    eax,0x656f6e2d
  40b88e:	outs   dx,BYTE PTR ds:[rsi]
  40b88f:	je     0x40b8b1
  40b891:	cmp    ah,BYTE PTR [rax]
  40b893:	jae    0x40b90a
  40b895:	(bad)
  40b89a:	jne    0x40b910
  40b89c:	and    BYTE PTR gs:[rbp+0x6e],ah
  40b8a0:	je     0x40b90b
  40b8a2:	je     0x40b91d
  40b8a4:	and    BYTE PTR [rdx+0x65],dh
  40b8a7:	data16 gs jb 0x40b910
  40b8ab:	outs   dx,BYTE PTR ds:[rsi]
  40b8ac:	movsxd esp,DWORD PTR [rbp+0x73]
  40b8af:	and    BYTE PTR [rdx+0x79],ah
  40b8b2:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40b8b6:	imul   esi,DWORD PTR [rdx+0x20],0x756c6176
  40b8bd:	add    BYTE PTR gs:[rax],al
  40b8c0:	or     DWORD PTR [rip+0x656f6e2d],ebp        # 0x65b026f3
  40b8c6:	outs   dx,BYTE PTR ds:[rsi]
  40b8c7:	movsxd esp,DWORD PTR [rax]
  40b8c9:	cmp    ah,BYTE PTR [rax]
  40b8cb:	imul   esp,DWORD PTR [rdi+0x6e],0x2065726f
  40b8d2:	(bad)  
  40b8d3:	outs   dx,BYTE PTR ds:[rsi]
  40b8d4:	jns    0x40b8f6
  40b8d6:	outs   dx,BYTE PTR gs:[rsi]
  40b8d8:	movsxd ebp,DWORD PTR [rdi+0x64]
  40b8db:	imul   ebp,DWORD PTR [rsi+0x67],0x65707320
  40b8e2:	movsxd ebp,DWORD PTR [rcx+0x66]
  40b8e5:	imul   esp,DWORD PTR [rbp+0x64],0x736e6920
  40b8ec:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x20656874
  40b8f4:	outs   dx,DWORD PTR fs:[rsi]
  40b8f6:	movsxd esi,DWORD PTR [rbp+0x6d]
  40b8f9:	outs   dx,BYTE PTR gs:[rsi]
  40b8fb:	je     0x40b8fd
  40b8fd:	add    BYTE PTR [rax],al
  40b8ff:	add    BYTE PTR [rcx],cl
  40b901:	sub    eax,0x6f6f6e2d
  40b906:	jne    0x40b97c
  40b908:	and    BYTE PTR [rdx],bh
  40b90a:	and    BYTE PTR [rdi+rbp*2+0x6e],ah
  40b90e:	(bad)  
  40b90f:	je     0x40b931
  40b911:	outs   dx,DWORD PTR ds:[rsi]
  40b912:	jne    0x40b988
  40b914:	jo     0x40b98b
  40b916:	je     0x40b938
  40b918:	je     0x40b982
  40b91a:	and    BYTE PTR gs:[rdx+0x65],dh
  40b91e:	jae    0x40b995
  40b920:	ins    BYTE PTR es:[rdi],dx
  40b921:	je     0x40b943
  40b923:	je     0x40b997
  40b925:	gs add BYTE PTR gs:[rcx],cl
  40b929:	sub    eax,0x7461702d
  40b92e:	push   0x61702720
  40b933:	je     0x40b99d
  40b935:	jae    0x40b95e
  40b937:	cmp    ah,BYTE PTR [rax]
  40b939:	jo     0x40b9ad
  40b93b:	outs   dx,DWORD PTR ds:[rsi]
  40b93c:	jbe    0x40b9a7
  40b93e:	fs and BYTE PTR gs:[rcx+0x20],ah
  40b943:	jae    0x40b9aa
  40b945:	je     0x40b967
  40b947:	outs   dx,DWORD PTR ds:[rsi]
  40b948:	data16 and BYTE PTR [rax+0x61],dh
  40b94c:	je     0x40b9b6
  40b94e:	jae    0x40b970
  40b950:	outs   dx,WORD PTR ds:[rsi]
  40b952:	jb     0x40b974
  40b954:	jb     0x40b9bb
  40b956:	jae    0x40b9c7
  40b958:	jne    0x40b9cc
  40b95a:	movsxd esp,DWORD PTR [rbp+0x73]
  40b95d:	add    BYTE PTR [rax],al
  40b95f:	add    BYTE PTR [rcx],cl
  40b961:	sub    eax,0x616f6c2d
  40b966:	fs sub eax,0x63617274
  40b96c:	and    BYTE PTR gs:[rdx],bh
  40b96f:	and    BYTE PTR [rax+0x72],dh
  40b972:	imul   ebp,DWORD PTR [rsi+0x74],0x61727420
  40b979:	movsxd esp,DWORD PTR [rbp+0x20]
  40b97c:	outs   dx,DWORD PTR ds:[rsi]
  40b97d:	data16 and BYTE PTR [rcx+0x6c],ah
  40b981:	ins    BYTE PTR es:[rdi],dx
  40b982:	and    BYTE PTR [rbp+0x78],ah
  40b985:	je     0x40b9ec
  40b987:	jb     0x40b9f7
  40b989:	(bad)  
  40b98a:	ins    BYTE PTR es:[rdi],dx
  40b98b:	and    BYTE PTR [rbp+0x6e],ah
  40b98e:	je     0x40b9f9
  40b990:	je     0x40b9fb
  40b992:	gs jae 0x40b9b5
  40b995:	ins    BYTE PTR es:[rdi],dx
  40b996:	outs   dx,DWORD PTR ds:[rsi]
  40b997:	(bad)  
  40b998:	fs gs add BYTE PTR fs:[rax],al
  40b99d:	add    BYTE PTR [rax],al
  40b99f:	add    BYTE PTR [rcx],cl
  40b9a1:	sub    eax,0x6e6f6e2d
  40b9a6:	gs je  0x40b9c9
  40b9a9:	cmp    ah,BYTE PTR [rax]
  40b9ab:	jb     0x40ba12
  40b9ad:	data16 jne 0x40ba23
  40b9b0:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40b9b5:	data16 gs je 0x40ba1c
  40b9b9:	push   0x44544420
  40b9be:	jae    0x40b9e0
  40b9c0:	outs   dx,DWORD PTR ds:[rsi]
  40b9c1:	jb     0x40b9e3
  40b9c3:	outs   dx,BYTE PTR gs:[rsi]
  40b9c5:	je     0x40ba30
  40b9c7:	je     0x40ba32
  40b9c9:	gs jae 0x40b9ec
  40b9cc:	outs   dx,DWORD PTR ds:[rsi]
  40b9cd:	jbe    0x40ba34
  40b9cf:	jb     0x40b9f1
  40b9d1:	outs   dx,BYTE PTR ds:[rsi]
  40b9d2:	gs je  0x40ba4c
  40b9d5:	outs   dx,DWORD PTR ds:[rsi]
  40b9d6:	jb     0x40ba43
	...
  40b9e0:	or     DWORD PTR [rip+0x636f6e2d],ebp        # 0x63b02813
  40b9e6:	outs   dx,DWORD PTR ds:[rsi]
  40b9e7:	ins    DWORD PTR es:[rdi],dx
  40b9e8:	jo     0x40ba4b
  40b9ea:	movsxd esi,DWORD PTR [rax+riz*1+0x3a]
  40b9ee:	and    BYTE PTR [rdi+rbp*2+0x20],ah
  40b9f2:	outs   dx,BYTE PTR ds:[rsi]
  40b9f3:	outs   dx,DWORD PTR ds:[rsi]
  40b9f4:	je     0x40ba16
  40b9f6:	outs   dx,BYTE PTR gs:[esi]
  40b9f9:	gs jb  0x40ba5d
  40b9fc:	je     0x40ba63
  40b9fe:	and    BYTE PTR [rbx+0x6f],ah
  40ba01:	ins    DWORD PTR es:[rdi],dx
  40ba02:	jo     0x40ba65
  40ba04:	movsxd esi,DWORD PTR [rax+riz*1+0x74]
  40ba08:	gs js  0x40ba7f
  40ba0b:	and    BYTE PTR [rsi+0x6f],ch
  40ba0e:	fs gs jae 0x40ba12
  40ba12:	add    BYTE PTR [rax],al
  40ba14:	add    BYTE PTR [rax],al
  40ba16:	add    BYTE PTR [rax],al
  40ba18:	or     DWORD PTR [rip+0x6d74682d],ebp        # 0x6db5224b
  40ba1e:	ins    BYTE PTR es:[rdi],dx
  40ba1f:	outs   dx,DWORD PTR ds:[rsi]
  40ba20:	jne    0x40ba96
  40ba22:	and    BYTE PTR [rdx],bh
  40ba24:	and    BYTE PTR [rdi+0x75],ch
  40ba27:	je     0x40ba99
  40ba29:	jne    0x40ba9f
  40ba2b:	and    BYTE PTR [rdx+0x65],dh
  40ba2e:	jae    0x40baa5
  40ba30:	ins    BYTE PTR es:[rdi],dx
  40ba31:	je     0x40baa6
  40ba33:	and    BYTE PTR [rcx+0x73],ah
  40ba36:	and    BYTE PTR [rax+0x54],cl
  40ba39:	rex.WRB
  40ba3a:	rex.WR add BYTE PTR [rax],r8b
  40ba3d:	add    BYTE PTR [rax],al
  40ba3f:	add    BYTE PTR [rcx],cl
  40ba41:	sub    eax,0x776f6e2d
  40ba46:	jb     0x40baa9
  40ba48:	jo     0x40ba6a
  40ba4a:	cmp    ah,BYTE PTR [rax]
  40ba4c:	outs   dx,DWORD PTR fs:[rsi]
  40ba4e:	and    BYTE PTR [rsi+0x6f],ch
  40ba51:	je     0x40ba73
  40ba53:	jo     0x40baca
  40ba55:	je     0x40ba77
  40ba57:	rex.W push rsp
  40ba59:	rex.WRB
  40ba5a:	rex.WR and BYTE PTR [rdi+rbp*2+0x63],r12b
  40ba5f:	and    BYTE PTR [rdi+0x72],dh
  40ba62:	(bad)  
  40ba63:	jo     0x40bad5
  40ba65:	gs jb  0x40ba68
  40ba68:	or     DWORD PTR [rip+0x6c61762d],ebp        # 0x6ca2309b
  40ba6e:	imul   esp,DWORD PTR [rax+riz*1+0x3a],0x6c617620
  40ba76:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x68742065
  40ba7e:	and    BYTE PTR gs:[rdi+rbp*2+0x63],ah
  40ba83:	jne    0x40baf2
  40ba85:	outs   dx,BYTE PTR gs:[rsi]
  40ba87:	je     0x40baa9
  40ba89:	imul   ebp,DWORD PTR [rsi+0x20],0x69646461
  40ba90:	je     0x40bafb
  40ba92:	outs   dx,DWORD PTR ds:[rsi]
  40ba93:	outs   dx,BYTE PTR ds:[rsi]
  40ba94:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40ba98:	jae    0x40bb0e
  40ba9a:	and    BYTE PTR fs:[rdi+0x65],dh
  40ba9e:	ins    BYTE PTR es:[rdi],dx
  40ba9f:	ins    BYTE PTR es:[rdi],dx
  40baa0:	sub    eax,0x6d726f66
  40baa5:	gs and BYTE PTR fs:[rbx+0x68],ah
  40baaa:	movsxd ebp,DWORD PTR gs:[rbx+0x0]
  40baae:	add    BYTE PTR [rax],al
  40bab0:	or     DWORD PTR [rip+0x736f702d],ebp        # 0x73b02ae3
  40bab6:	je     0x40bb2e
  40bab8:	(bad)  
  40bab9:	ins    BYTE PTR es:[rdi],dx
  40baba:	imul   esp,DWORD PTR [rax+riz*1+0x3a],0x206f6420
  40bac2:	(bad)  
  40bac3:	and    BYTE PTR [rax+0x6f],dh
  40bac6:	jae    0x40bb3c
  40bac8:	gs jb  0x40bb34
  40bacb:	outs   dx,DWORD PTR ds:[rsi]
  40bacc:	jb     0x40bb37
  40bace:	and    BYTE PTR [rsi+0x61],dh
  40bad1:	ins    BYTE PTR es:[rdi],dx
  40bad2:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x2c6e6f69
  40bada:	and    BYTE PTR [rcx+0x2e],ch
  40badd:	and    BYTE PTR gs:[rcx+0x66],ah
  40bae1:	je     0x40bb48
  40bae3:	jb     0x40bb05
  40bae5:	jo     0x40bb48
  40bae7:	jb     0x40bb5c
  40bae9:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  40baf0:	or     DWORD PTR [rip+0x6474642d],ebp        # 0x64b51f23
  40baf6:	jbe    0x40bb59
  40baf8:	ins    BYTE PTR es:[rdi],dx
  40baf9:	imul   esp,DWORD PTR [rax+riz*1+0x55],0x3a204c52
  40bb01:	and    BYTE PTR [rdi+rbp*2+0x20],ah
  40bb05:	(bad)  
  40bb06:	and    BYTE PTR [rax+0x6f],dh
  40bb09:	jae    0x40bb7f
  40bb0b:	gs jb  0x40bb77
  40bb0e:	outs   dx,DWORD PTR ds:[rsi]
  40bb0f:	jb     0x40bb7a
  40bb11:	and    BYTE PTR [rsi+0x61],dh
  40bb14:	ins    BYTE PTR es:[rdi],dx
  40bb15:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x206e6f69
  40bb1d:	(bad)  
  40bb1e:	addr32 (bad) 
  40bb20:	imul   ebp,DWORD PTR [rsi+0x73],0x20612074
  40bb27:	imul   esi,DWORD PTR [esi+0x65],0x5444206e
  40bb2f:	add    BYTE PTR [rax],r8b
  40bb32:	add    BYTE PTR [rax],al
  40bb34:	add    BYTE PTR [rax],al
  40bb36:	add    BYTE PTR [rax],al
  40bb38:	or     DWORD PTR [rip+0x6474642d],ebp        # 0x64b51f6b
  40bb3e:	jbe    0x40bba1
  40bb40:	ins    BYTE PTR es:[rdi],dx
  40bb41:	imul   esp,DWORD PTR [rsi+riz*2+0x70],0x50462069
  40bb49:	rex.WB and BYTE PTR [r10],dil
  40bb4c:	and    BYTE PTR [rbx+0x61],dh
  40bb4f:	ins    DWORD PTR es:[rdi],dx
  40bb50:	and    BYTE PTR gs:[rdx+0x75],ah
  40bb54:	je     0x40bb76
  40bb56:	outs   dx,BYTE PTR ds:[rsi]
  40bb57:	(bad)  
  40bb58:	ins    DWORD PTR es:[rdi],dx
  40bb59:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  40bb5e:	and    BYTE PTR [rsp+rdx*2+0x44],al
  40bb62:	and    BYTE PTR [rdi+0x69],dh
  40bb65:	je     0x40bbcf
  40bb67:	and    BYTE PTR [rcx+0x20],ah
  40bb6a:	push   rax
  40bb6b:	jne    0x40bbcf
  40bb6d:	ins    BYTE PTR es:[rdi],dx
  40bb6e:	imul   esp,DWORD PTR [rbx+0x20],0x6e656449
  40bb75:	je     0x40bbe0
  40bb77:	imul   sp,WORD PTR [rbp+0x72],0x0
  40bb7d:	add    BYTE PTR [rax],al
  40bb7f:	add    BYTE PTR [rcx],cl
  40bb81:	sub    eax,0x6d69742d
  40bb86:	imul   ebp,DWORD PTR [rsi+0x67],0x70203a20
  40bb8d:	jb     0x40bbf8
  40bb8f:	outs   dx,BYTE PTR ds:[rsi]
  40bb90:	je     0x40bbb2
  40bb92:	jae    0x40bc03
  40bb94:	ins    DWORD PTR es:[rdi],dx
  40bb95:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  40bb9a:	imul   ebp,DWORD PTR [rsi+0x67],0x9000073
  40bba1:	sub    eax,0x74756f2d
  40bba6:	jo     0x40bc1d
  40bba8:	je     0x40bbca
  40bbaa:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
  40bbb1:	and    BYTE PTR [rip+0x6966206f],ch        # 0x69a6dc26
  40bbb7:	ins    BYTE PTR es:[rdi],dx
  40bbb8:	cmp    ah,BYTE PTR gs:[rax]
  40bbbb:	jae    0x40bc1e
  40bbbd:	jbe    0x40bc24
  40bbbf:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40bbc3:	(bad)  
  40bbc4:	and    BYTE PTR [rdi+0x69],ah
  40bbc7:	jbe    0x40bc2e
  40bbc9:	outs   dx,BYTE PTR ds:[rsi]
  40bbca:	and    BYTE PTR [rsi+0x69],ah
  40bbcd:	ins    BYTE PTR es:[rdi],dx
  40bbce:	add    BYTE PTR gs:[rcx],cl
  40bbd1:	sub    eax,0x7065722d
  40bbd6:	gs (bad) 
  40bbd8:	je     0x40bbfa
  40bbda:	cmp    ah,BYTE PTR [rax]
  40bbdc:	jb     0x40bc43
  40bbde:	jo     0x40bc45
  40bbe0:	(bad)  
  40bbe1:	je     0x40bc03
  40bbe3:	xor    DWORD PTR [rax],esi
  40bbe5:	xor    BYTE PTR [rax],ah
  40bbe7:	je     0x40bc52
  40bbe9:	ins    DWORD PTR es:[rdi],dx
  40bbea:	gs jae 0x40bc19
  40bbed:	and    BYTE PTR [rsi+0x6f],ah
  40bbf0:	jb     0x40bc12
  40bbf2:	je     0x40bc5d
  40bbf4:	ins    DWORD PTR es:[rdi],dx
  40bbf5:	imul   ebp,DWORD PTR [rsi+0x67],0x20726f20
  40bbfc:	jo     0x40bc70
  40bbfe:	outs   dx,DWORD PTR ds:[rsi]
  40bbff:	imul   bp,WORD PTR [rcx+rbp*2+0x6e],0x67
  40bc06:	add    BYTE PTR [rax],al
  40bc08:	or     DWORD PTR [rip+0x736e692d],ebp        # 0x73af253b
  40bc0e:	gs jb  0x40bc85
  40bc11:	and    BYTE PTR [rdx],bh
  40bc13:	and    BYTE PTR [rcx+0x64],ah
  40bc16:	sub    eax,0x20636f68
  40bc1b:	je     0x40bc82
  40bc1d:	jae    0x40bc93
  40bc1f:	and    BYTE PTR [rsi+0x6f],ah
  40bc22:	jb     0x40bc44
  40bc24:	jbe    0x40bc87
  40bc26:	ins    BYTE PTR es:[rdi],dx
  40bc27:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x7265736e
  40bc2f:	je     0x40bc9a
  40bc31:	outs   dx,DWORD PTR ds:[rsi]
  40bc32:	outs   dx,BYTE PTR ds:[rsi]
  40bc33:	jae    0x40bc35
  40bc35:	add    BYTE PTR [rax],al
  40bc37:	add    BYTE PTR [rcx],cl
  40bc39:	sub    eax,0x6d6f632d
  40bc3e:	jo     0x40bcb2
  40bc40:	gs jae 0x40bcb6
  40bc43:	and    BYTE PTR [rdx],bh
  40bc45:	and    BYTE PTR [rbp+rsi*2+0x72],dh
  40bc49:	outs   dx,BYTE PTR ds:[rsi]
  40bc4a:	and    BYTE PTR [rdi+0x6e],ch
  40bc4d:	and    BYTE PTR [rdi+0x7a],ah
  40bc50:	imul   esi,DWORD PTR [rax+0x20],0x706d6f63
  40bc57:	jb     0x40bcbe
  40bc59:	jae    0x40bcce
  40bc5b:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  40bc62:	outs   dx,DWORD PTR ds:[rsi]
  40bc63:	jne    0x40bcd9
  40bc65:	jo     0x40bcdc
  40bc67:	je     0x40bc69
  40bc69:	or     DWORD PTR [rip+0x6d74682d],ebp        # 0x6db5249c
  40bc6f:	ins    BYTE PTR es:[rdi],dx
  40bc70:	and    BYTE PTR [rdx],bh
  40bc72:	and    BYTE PTR [rbp+0x73],dh
  40bc75:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  40bc7a:	and    BYTE PTR [rax+0x54],cl
  40bc7d:	rex.WRB
  40bc7e:	rex.WR and BYTE PTR [rax+0x61],r14b
  40bc82:	jb     0x40bcf7
  40bc84:	gs jb  0x40bc87
  40bc87:	add    BYTE PTR [rcx],cl
  40bc89:	sub    eax,0x6c6d782d
  40bc8e:	outs   dx,DWORD PTR ds:[rsi]
  40bc8f:	jne    0x40bd05
  40bc91:	and    BYTE PTR [rdx],bh
  40bc93:	and    BYTE PTR [rsi+0x6f],ah
  40bc96:	jb     0x40bcfb
  40bc98:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40bc9d:	jne    0x40bd12
  40bc9f:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  40bca4:	and    BYTE PTR [rax+0x4d],bl
  40bca7:	rex.WR and BYTE PTR [rbx+0x65],r14b
  40bcab:	jb     0x40bd16
  40bcad:	(bad)  
  40bcae:	ins    BYTE PTR es:[rdi],dx
  40bcaf:	imul   edi,DWORD PTR [rdx+0x65],0x68772072
  40bcb6:	outs   dx,BYTE PTR gs:[rsi]
  40bcb8:	and    BYTE PTR [rbp+0x73],dh
  40bcbb:	imul   ebp,DWORD PTR [rsi+0x67],0x682d2d20
  40bcc2:	je     0x40bd31
  40bcc4:	ins    BYTE PTR es:[rdi],dx
  40bcc5:	add    BYTE PTR [rax],al
  40bcc7:	add    BYTE PTR [rcx],cl
  40bcc9:	sub    eax,0x646f6e2d
  40bcce:	gs data16 fs je 0x40bd37
  40bcd3:	and    BYTE PTR [rdx],bh
  40bcd5:	and    BYTE PTR [rdi+rbp*2+0x20],ah
  40bcd9:	outs   dx,BYTE PTR ds:[rsi]
  40bcda:	outs   dx,DWORD PTR ds:[rsi]
  40bcdb:	je     0x40bcfd
  40bcdd:	fs gs data16 (bad) 
  40bce1:	jne    0x40bd4f
  40bce3:	je     0x40bd05
  40bce5:	rex.W push rsp
  40bce7:	rex.WRB
  40bce8:	rex.WR and BYTE PTR [rdi+rbp*2+0x63],r12b
  40bced:	je     0x40bd68
  40bcef:	jo     0x40bd56
  40bcf1:	add    BYTE PTR [rax],al
  40bcf3:	add    BYTE PTR [rax],al
  40bcf5:	add    BYTE PTR [rax],al
  40bcf7:	add    BYTE PTR [rcx],cl
  40bcf9:	sub    eax,0x7375702d
  40bcfe:	push   0x75203a20
  40bd03:	jae    0x40bd6a
  40bd05:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40bd09:	and    BYTE PTR [rax+0x75],dh
  40bd0c:	jae    0x40bd76
  40bd0e:	and    BYTE PTR [rbp+0x6f],ch
  40bd11:	fs and BYTE PTR gs:[rdi+0x66],ch
  40bd16:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40bd1a:	and    BYTE PTR [rax+0x61],dh
  40bd1d:	jb     0x40bd92
  40bd1f:	gs jb  0x40bd22
  40bd22:	add    BYTE PTR [rax],al
  40bd24:	add    BYTE PTR [rax],al
  40bd26:	add    BYTE PTR [rax],al
  40bd28:	or     DWORD PTR [rip+0x7375702d],ebp        # 0x73b62d5b
  40bd2e:	push   0x6c616d73
  40bd33:	ins    BYTE PTR es:[rdi],dx
  40bd34:	and    BYTE PTR [rdx],bh
  40bd36:	and    BYTE PTR [rbp+0x73],dh
  40bd39:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  40bd3e:	and    BYTE PTR [rax+0x75],dh
  40bd41:	jae    0x40bdab
  40bd43:	and    BYTE PTR [rbp+0x6f],ch
  40bd46:	fs and BYTE PTR gs:[rdi+0x66],ch
  40bd4b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40bd4f:	and    BYTE PTR [rax+0x61],dh
  40bd52:	jb     0x40bdc7
  40bd54:	gs jb  0x40bd77
  40bd57:	jne    0x40bdcc
  40bd59:	imul   ebp,DWORD PTR [rsi+0x67],0x6e697420
  40bd60:	jns    0x40bd82
  40bd62:	imul   ebp,DWORD PTR [rsi+0x63],0x656d6572
  40bd69:	outs   dx,BYTE PTR ds:[rsi]
  40bd6a:	je     0x40bddf
  40bd6c:	add    BYTE PTR [rax],al
  40bd6e:	add    BYTE PTR [rax],al
  40bd70:	or     DWORD PTR [rip+0x78616d2d],ebp        # 0x78a22aa3
  40bd76:	ins    DWORD PTR es:[rdi],dx
  40bd77:	gs ins DWORD PTR es:[rdi],dx
  40bd79:	and    BYTE PTR [rsi+0x62],ch
  40bd7c:	(bad)  
  40bd7d:	jns    0x40bdf3
  40bd7f:	gs jae 0x40bda2
  40bd82:	cmp    ah,BYTE PTR [rax]
  40bd84:	ins    BYTE PTR es:[rdi],dx
  40bd85:	imul   ebp,DWORD PTR [rbp+0x69],0x6d207374
  40bd8c:	gs ins DWORD PTR es:[rdi],dx
  40bd8e:	outs   dx,DWORD PTR ds:[rsi]
  40bd8f:	jb     0x40be0a
  40bd91:	and    BYTE PTR [rcx+0x6c],ah
  40bd94:	ins    BYTE PTR es:[rdi],dx
  40bd95:	outs   dx,DWORD PTR ds:[rsi]
  40bd96:	movsxd esp,DWORD PTR [rcx+0x74]
  40bd99:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  40bda0:	outs   dx,BYTE PTR ds:[rsi]
  40bda1:	(bad)  
  40bda3:	jns    0x40be19
  40bda5:	gs jae 0x40bdc8
  40bda8:	(bad)  
  40bda9:	jns    0x40be1f
  40bdab:	gs jae 0x40bdae
  40bdae:	add    BYTE PTR [rax],al
  40bdb0:	or     DWORD PTR [rip+0x776f6e2d],ebp        # 0x77b02be3
  40bdb6:	(bad)  
  40bdb7:	jb     0x40be27
  40bdb9:	imul   ebp,DWORD PTR [rsi+0x67],0x64203a20
  40bdc0:	outs   dx,DWORD PTR ds:[rsi]
  40bdc1:	and    BYTE PTR [rsi+0x6f],ch
  40bdc4:	je     0x40bde6
  40bdc6:	gs ins DWORD PTR es:[rdi],dx
  40bdc8:	imul   esi,DWORD PTR [rax+riz*1+0x77],0x696e7261
  40bdd0:	outs   dx,BYTE PTR ds:[rsi]
  40bdd1:	addr32 jae 0x40bdf4
  40bdd4:	data16 jb 0x40be46
  40bdd7:	ins    DWORD PTR es:[rdi],dx
  40bdd8:	and    BYTE PTR [rax+0x61],dh
  40bddb:	jb     0x40be50
  40bddd:	gs jb  0x40be0f
  40bde0:	jbe    0x40be43
  40bde2:	ins    BYTE PTR es:[rdi],dx
  40bde3:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x726f
  40bdeb:	add    BYTE PTR [rax],al
  40bded:	add    BYTE PTR [rax],al
  40bdef:	add    BYTE PTR [rcx],cl
  40bdf1:	sub    eax,0x626f6e2d
  40bdf6:	ins    BYTE PTR es:[rdi],dx
  40bdf7:	(bad)  
  40bdf8:	outs   dx,BYTE PTR ds:[rsi]
  40bdf9:	imul   esi,DWORD PTR [rbx+0x20],0x3a
  40bdfd:	and    BYTE PTR [rdx+rsi*2+0x6f],ah
  40be01:	jo     0x40be23
  40be03:	sub    BYTE PTR [rcx+0x67],ch
  40be06:	outs   dx,BYTE PTR ds:[rsi]
  40be07:	outs   dx,DWORD PTR ds:[rsi]
  40be08:	jb     0x40be6b
  40be0a:	(bad)  
  40be0b:	ins    BYTE PTR es:[rdi],dx
  40be0c:	gs (bad) 
  40be0e:	sub    DWORD PTR [rax],esp
  40be10:	(bad)  
  40be11:	ins    BYTE PTR es:[rdi],dx
  40be12:	(bad)  
  40be13:	outs   dx,BYTE PTR ds:[rsi]
  40be14:	imul   esi,DWORD PTR [rbx+0x20],0x73
  40be18:	jo     0x40be7b
  40be1a:	movsxd esp,DWORD PTR [rbp+0x73]
  40be1d:	add    BYTE PTR [rax],al
  40be1f:	add    BYTE PTR [rcx],cl
  40be21:	sub    eax,0x636f6e2d
  40be26:	fs (bad) 
  40be28:	je     0x40be8b
  40be2a:	and    BYTE PTR [rdx],bh
  40be2c:	and    BYTE PTR [rdx+0x65],dh
  40be2f:	jo     0x40be9d
  40be31:	(bad)  
  40be32:	movsxd esp,DWORD PTR [rbp+0x20]
  40be35:	movsxd esp,DWORD PTR [rcx+riz*2+0x74]
  40be39:	(bad)  
  40be3a:	and    BYTE PTR [rbx+0x65],dh
  40be3d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40be41:	outs   dx,BYTE PTR ds:[rsi]
  40be42:	and    BYTE PTR [rdi+0x69],dh
  40be45:	je     0x40beaf
  40be47:	and    BYTE PTR [rbp+riz*2+0x78],dh
  40be4b:	je     0x40be6d
  40be4d:	outs   dx,BYTE PTR ds:[rsi]
  40be4e:	outs   dx,DWORD PTR ds:[rsi]
  40be4f:	fs gs jae 0x40be53
  40be53:	add    BYTE PTR [rax],al
  40be55:	add    BYTE PTR [rax],al
  40be57:	add    BYTE PTR [rcx],cl
  40be59:	sub    eax,0x726f662d
  40be5e:	ins    DWORD PTR es:[rdi],dx
  40be5f:	(bad)  
  40be60:	je     0x40be82
  40be62:	cmp    ah,BYTE PTR [rax]
  40be64:	jb     0x40becb
  40be66:	outs   dx,WORD PTR ds:[rsi]
  40be68:	jb     0x40bed7
  40be6a:	(bad)  
  40be6b:	je     0x40be9c
  40be6d:	jb     0x40bed4
  40be6f:	imul   ebp,DWORD PTR [rsi+0x64],0x20746e65
  40be76:	je     0x40bee0
  40be78:	and    BYTE PTR gs:[rdi+0x75],ch
  40be7c:	je     0x40beee
  40be7e:	jne    0x40bef4
	...
  40be88:	or     DWORD PTR [rip+0x636e652d],ebp        # 0x63af23bb
  40be8e:	outs   dx,DWORD PTR ds:[rsi]
  40be8f:	fs and BYTE PTR gs:[rbp+0x6e],ah
  40be94:	movsxd ebp,DWORD PTR [rdi+0x64]
  40be97:	imul   ebp,DWORD PTR [rsi+0x67],0x6f203a20
  40be9e:	jne    0x40bf14
  40bea0:	jo     0x40bf17
  40bea2:	je     0x40bec4
  40bea4:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  40beab:	imul   esi,DWORD PTR [esi+0x65],0x6e65206e
  40beb3:	movsxd ebp,DWORD PTR [rdi+0x64]
  40beb6:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  40bebd:	add    BYTE PTR [rax],al
  40bebf:	add    BYTE PTR [rcx],cl
  40bec1:	sub    eax,0x6f72642d
  40bec6:	jo     0x40bf2c
  40bec8:	je     0x40bf2e
  40beca:	and    BYTE PTR [rdx],bh
  40becc:	and    BYTE PTR [rdx+0x65],dh
  40becf:	ins    DWORD PTR es:[rdi],dx
  40bed0:	outs   dx,DWORD PTR ds:[rsi]
  40bed1:	jbe    0x40bf38
  40bed3:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40bed7:	and    BYTE PTR [rdi+rcx*2+0x43],al
  40bedb:	push   rsp
  40bedc:	pop    rcx
  40bedd:	push   rax
  40bede:	and    BYTE PTR [r15+0x66],r13b
  40bee2:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40bee6:	and    BYTE PTR [rcx+0x6e],ch
  40bee9:	jo     0x40bf60
  40beeb:	je     0x40bf0d
  40beed:	outs   dx,DWORD PTR fs:[rsi]
  40beef:	movsxd esi,DWORD PTR [rbx+0x0]
  40bef2:	add    BYTE PTR [rax],al
  40bef4:	add    BYTE PTR [rax],al
  40bef6:	add    BYTE PTR [rax],al
  40bef8:	or     DWORD PTR [rip+0x6572702d],ebp        # 0x65b32f2b
  40befe:	je     0x40bf74
  40bf00:	jns    0x40bf22
  40bf02:	push   rbx
  40bf03:	push   rsp
  40bf04:	pop    rcx
  40bf05:	rex.WR
  40bf06:	and    BYTE PTR [r10],r15b
  40bf09:	and    BYTE PTR [rax+0x72],dh
  40bf0c:	gs je  0x40bf83
  40bf0f:	jns    0x40bf3e
  40bf11:	jo     0x40bf85
  40bf13:	imul   ebp,DWORD PTR [rsi+0x74],0x206e6920
  40bf1a:	(bad)  
  40bf1b:	and    BYTE PTR [rax+0x61],dh
  40bf1e:	jb     0x40bf94
  40bf20:	imul   esp,DWORD PTR [rbx+0x75],0x2072616c
  40bf27:	jae    0x40bf9d
  40bf29:	jns    0x40bf97
  40bf2b:	add    BYTE PTR gs:[rax],al
  40bf2e:	add    BYTE PTR [rax],al
  40bf30:	or     DWORD PTR [rax],esp
  40bf32:	and    BYTE PTR [rax],ah
  40bf34:	and    BYTE PTR [rax],ah
  40bf36:	and    BYTE PTR [rax],ah
  40bf38:	and    BYTE PTR [rax],ah
  40bf3a:	and    BYTE PTR [rax],ah
  40bf3c:	and    BYTE PTR [rax],ah
  40bf3e:	and    BYTE PTR [rax],ah
  40bf40:	and    BYTE PTR [rax],ah
  40bf42:	xor    BYTE PTR [rax],ah
  40bf44:	rex.R outs dx,DWORD PTR ds:[rsi]
  40bf46:	and    BYTE PTR [rsi+0x6f],ch
  40bf49:	je     0x40bf6b
  40bf4b:	jo     0x40bfbf
  40bf4d:	gs je  0x40bfc4
  40bf50:	jns    0x40bf72
  40bf52:	jo     0x40bfc6
  40bf54:	imul   ebp,DWORD PTR [rsi+0x74],0x20200900
  40bf5b:	and    BYTE PTR [rax],ah
  40bf5d:	and    BYTE PTR [rax],ah
  40bf5f:	and    BYTE PTR [rax],ah
  40bf61:	and    BYTE PTR [rax],ah
  40bf63:	and    BYTE PTR [rax],ah
  40bf65:	and    BYTE PTR [rax],ah
  40bf67:	and    BYTE PTR [rax],ah
  40bf69:	and    BYTE PTR [rcx],dh
  40bf6b:	and    BYTE PTR [rsi+0x6f],al
  40bf6e:	jb     0x40bfdd
  40bf70:	(bad)  
  40bf71:	je     0x40bf93
  40bf73:	je     0x40bfdd
  40bf75:	and    BYTE PTR gs:[rax+0x4d],bl
  40bf79:	rex.WR and BYTE PTR [rbx+0x6f],r12b
  40bf7d:	outs   dx,BYTE PTR ds:[rsi]
  40bf7e:	je     0x40bfe5
  40bf80:	outs   dx,BYTE PTR ds:[rsi]
  40bf81:	je     0x40bfaf
  40bf83:	and    BYTE PTR [rcx+0x73],ah
  40bf86:	and    BYTE PTR [rip+0x726f662d],ch        # 0x72b025b9
  40bf8c:	ins    DWORD PTR es:[rdi],dx
  40bf8d:	(bad)  
  40bf8e:	je     0x40bf90
  40bf90:	or     DWORD PTR [rax],esp
  40bf92:	and    BYTE PTR [rax],ah
  40bf94:	and    BYTE PTR [rax],ah
  40bf96:	and    BYTE PTR [rax],ah
  40bf98:	and    BYTE PTR [rax],ah
  40bf9a:	and    BYTE PTR [rax],ah
  40bf9c:	and    BYTE PTR [rax],ah
  40bf9e:	and    BYTE PTR [rax],ah
  40bfa0:	and    BYTE PTR [rax],ah
  40bfa2:	xor    ah,BYTE PTR [rax]
  40bfa4:	rex.B
  40bfa5:	fs and BYTE PTR fs:[rdi+0x68],dh
  40bfaa:	imul   esi,DWORD PTR [rbp+riz*2+0x73],0x65636170
  40bfb2:	and    BYTE PTR [rcx+0x6e],ch
  40bfb5:	jae    0x40c020
  40bfb7:	fs and BYTE PTR gs:[rcx+riz*2+0x67],dh
  40bfbd:	jae    0x40bfeb
  40bfbf:	and    BYTE PTR [rax+0x72],dh
  40bfc2:	gs jae 0x40c02a
  40bfc5:	jb     0x40c03d
  40bfc7:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
  40bfce:	je     0x40c035
  40bfd0:	outs   dx,BYTE PTR ds:[rsi]
  40bfd1:	je     0x40bfd3
  40bfd3:	add    BYTE PTR [rax],al
  40bfd5:	add    BYTE PTR [rax],al
  40bfd7:	add    BYTE PTR [rcx],cl
  40bfd9:	sub    eax,0x3431632d
  40bfde:	outs   dx,BYTE PTR ds:[rsi]
  40bfdf:	and    BYTE PTR [rdx],bh
  40bfe1:	and    BYTE PTR [rbx+0x61],dh
  40bfe4:	jbe    0x40c04b
  40bfe6:	and    BYTE PTR [rcx+0x6e],ch
  40bfe9:	and    BYTE PTR [rdi+0x33],dl
  40bfec:	rex.XB and BYTE PTR [r11+0x61],spl
  40bff0:	outs   dx,BYTE PTR ds:[rsi]
  40bff1:	outs   dx,DWORD PTR ds:[rsi]
  40bff2:	outs   dx,BYTE PTR ds:[rsi]
  40bff3:	imul   esp,DWORD PTR [rbx+0x61],0x6f66206c
  40bffa:	jb     0x40c069
  40bffc:	(bad)  
  40bffd:	je     0x40c01f
  40bfff:	jbe    0x40c032
  40c001:	xor    BYTE PTR cs:[rax],ah
  40c004:	sub    BYTE PTR [rdi+0x69],dh
  40c007:	je     0x40c071
  40c009:	and    BYTE PTR [rbx+0x6f],ah
  40c00c:	ins    DWORD PTR es:[rdi],dx
  40c00d:	ins    DWORD PTR es:[rdi],dx
  40c00e:	outs   dx,BYTE PTR gs:[rsi]
  40c010:	je     0x40c085
  40c012:	sub    DWORD PTR [rax],eax
  40c014:	add    BYTE PTR [rax],al
  40c016:	add    BYTE PTR [rax],al
  40c018:	or     DWORD PTR [rip+0x3431632d],ebp        # 0x3472234b
  40c01e:	outs   dx,BYTE PTR ds:[rsi]
  40c01f:	xor    DWORD PTR [rcx],esi
  40c021:	and    BYTE PTR [rdx],bh
  40c023:	and    BYTE PTR [rbx+0x61],dh
  40c026:	jbe    0x40c08d
  40c028:	and    BYTE PTR [rcx+0x6e],ch
  40c02b:	and    BYTE PTR [rdi+0x33],dl
  40c02e:	rex.XB and BYTE PTR [r11+0x61],spl
  40c032:	outs   dx,BYTE PTR ds:[rsi]
  40c033:	outs   dx,DWORD PTR ds:[rsi]
  40c034:	outs   dx,BYTE PTR ds:[rsi]
  40c035:	imul   esp,DWORD PTR [rbx+0x61],0x6f66206c
  40c03c:	jb     0x40c0ab
  40c03e:	(bad)  
  40c03f:	je     0x40c061
  40c041:	jbe    0x40c074
  40c043:	xor    DWORD PTR cs:[rax],esp
  40c046:	sub    BYTE PTR [rdi+0x69],dh
  40c049:	je     0x40c0b3
  40c04b:	and    BYTE PTR [rbx+0x6f],ah
  40c04e:	ins    DWORD PTR es:[rdi],dx
  40c04f:	ins    DWORD PTR es:[rdi],dx
  40c050:	outs   dx,BYTE PTR gs:[rsi]
  40c052:	je     0x40c0c7
  40c054:	sub    DWORD PTR [rax],eax
  40c056:	add    BYTE PTR [rax],al
  40c058:	or     DWORD PTR [rip+0x6378652d],ebp        # 0x63b9258b
  40c05e:	sub    eax,0x6e343163
  40c063:	and    BYTE PTR [rdx],bh
  40c065:	and    BYTE PTR [rbx+0x61],dh
  40c068:	jbe    0x40c0cf
  40c06a:	and    BYTE PTR [rcx+0x6e],ch
  40c06d:	and    BYTE PTR [rdi+0x33],dl
  40c070:	rex.XB and BYTE PTR [r13+0x78],spl
  40c074:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x73]
  40c078:	imul   esi,DWORD PTR [rsi+0x65],0x6e616320
  40c07f:	outs   dx,DWORD PTR ds:[rsi]
  40c080:	outs   dx,BYTE PTR ds:[rsi]
  40c081:	imul   esp,DWORD PTR [rbx+0x61],0x6f66206c
  40c088:	jb     0x40c0f7
  40c08a:	(bad)  
  40c08b:	je     0x40c0ad
  40c08d:	sub    BYTE PTR [rdi+0x69],dh
  40c090:	je     0x40c0fa
  40c092:	and    BYTE PTR [rbx+0x6f],ah
  40c095:	ins    DWORD PTR es:[rdi],dx
  40c096:	ins    DWORD PTR es:[rdi],dx
  40c097:	outs   dx,BYTE PTR gs:[rsi]
  40c099:	je     0x40c10e
  40c09b:	sub    DWORD PTR [rax],eax
  40c09d:	add    BYTE PTR [rax],al
  40c09f:	add    BYTE PTR [rcx],cl
  40c0a1:	sub    eax,0x63736e2d
  40c0a6:	ins    BYTE PTR es:[rdi],dx
  40c0a7:	gs (bad) 
  40c0a9:	outs   dx,BYTE PTR ds:[rsi]
  40c0aa:	and    BYTE PTR [rdx],bh
  40c0ac:	and    BYTE PTR [rdx+0x65],dh
  40c0af:	ins    DWORD PTR es:[rdi],dx
  40c0b0:	outs   dx,DWORD PTR ds:[rsi]
  40c0b1:	jbe    0x40c118
  40c0b3:	and    BYTE PTR [rdx+0x65],dh
  40c0b6:	fs jne 0x40c127
  40c0b9:	fs (bad) 
  40c0bb:	outs   dx,BYTE PTR ds:[rsi]
  40c0bc:	je     0x40c0de
  40c0be:	outs   dx,BYTE PTR ds:[rsi]
  40c0bf:	(bad)  
  40c0c0:	ins    DWORD PTR es:[rdi],dx
  40c0c1:	gs jae 0x40c134
  40c0c4:	(bad)  
  40c0c5:	movsxd esp,DWORD PTR [rbp+0x20]
  40c0c8:	fs movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
  40c0ce:	(bad)  
  40c0cf:	je     0x40c13a
  40c0d1:	outs   dx,DWORD PTR ds:[rsi]
  40c0d2:	outs   dx,BYTE PTR ds:[rsi]
  40c0d3:	jae    0x40c0d5
  40c0d5:	add    BYTE PTR [rax],al
  40c0d7:	add    BYTE PTR [rcx],cl
  40c0d9:	sub    eax,0x7365742d
  40c0de:	je     0x40c129
  40c0e0:	rex.WRXB and BYTE PTR [r10],r15b
  40c0e3:	and    BYTE PTR [rbp+riz*2+0x73],dh
  40c0e7:	je     0x40c109
  40c0e9:	jne    0x40c15e
  40c0eb:	gs jb  0x40c10e
  40c0ee:	rex.WB (bad) 
  40c0f0:	rex.WRXB and BYTE PTR [r11+0x75],r14b
  40c0f4:	jo     0x40c166
  40c0f6:	outs   dx,DWORD PTR ds:[rsi]
  40c0f7:	jb     0x40c16d
  40c0f9:	add    BYTE PTR [rax],al
  40c0fb:	add    BYTE PTR [rax],al
  40c0fd:	add    BYTE PTR [rax],al
  40c0ff:	add    BYTE PTR [rcx],cl
  40c101:	sub    eax,0x7461632d
  40c106:	(bad)  
  40c107:	ins    BYTE PTR es:[rdi],dx
  40c108:	outs   dx,DWORD PTR ds:[rsi]
  40c109:	addr32 jae 0x40c12c
  40c10c:	cmp    ah,BYTE PTR [rax]
  40c10e:	jne    0x40c183
  40c110:	and    BYTE PTR gs:[rbx+0x47],dl
  40c114:	rex.WRB
  40c115:	rex.WR and BYTE PTR [rbx+0x61],r12b
  40c119:	je     0x40c17c
  40c11b:	ins    BYTE PTR es:[rdi],dx
  40c11c:	outs   dx,DWORD PTR ds:[rsi]
  40c11d:	addr32 jae 0x40c140
  40c120:	data16 jb 0x40c192
  40c123:	ins    DWORD PTR es:[rdi],dx
  40c124:	and    BYTE PTR [rbx+rdx*2],ah
  40c127:	rex.RXB
  40c128:	rex.WRB
  40c129:	rex.WR pop rdi
  40c12b:	rex.XB
  40c12c:	push   r12
  40c12e:	rex.B
  40c12f:	rex.WR
  40c130:	rex.WRXB
  40c131:	rex.RXB pop r15
  40c133:	rex.RX
  40c134:	rex.WB
  40c135:	rex.WR
  40c136:	rex.RB push r11
	...
  40c140:	or     DWORD PTR [rax],esp
  40c142:	and    BYTE PTR [rax],ah
  40c144:	and    BYTE PTR [rax],ah
  40c146:	and    BYTE PTR [rax],ah
  40c148:	and    BYTE PTR [rax],ah
  40c14a:	and    BYTE PTR [rax],ah
  40c14c:	and    BYTE PTR [rax],ah
  40c14e:	outs   dx,DWORD PTR ds:[rsi]
  40c14f:	je     0x40c1b9
  40c151:	gs jb  0x40c1cb
  40c154:	imul   esi,DWORD PTR [rbx+0x65],0x4c4d5820
  40c15b:	and    BYTE PTR [rbx+0x61],al
  40c15e:	je     0x40c1c1
  40c160:	ins    BYTE PTR es:[rdi],dx
  40c161:	outs   dx,DWORD PTR ds:[rsi]
  40c162:	addr32 jae 0x40c185
  40c165:	jae    0x40c1db
  40c167:	(bad)  
  40c168:	jb     0x40c1de
  40c16a:	imul   ebp,DWORD PTR [rsi+0x67],0x6f726620
  40c171:	ins    DWORD PTR es:[rdi],dx
  40c172:	and    BYTE PTR [rax],al
  40c174:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x2f2f
  40c17b:	(bad)  
  40c17c:	gs je  0x40c1e2
  40c17f:	(bad)  
  40c180:	js     0x40c1ef
  40c182:	ins    BYTE PTR es:[rdi],dx
  40c183:	(bad)  
  40c184:	movsxd esp,DWORD PTR [rcx+0x74]
  40c187:	(bad)  
  40c188:	ins    BYTE PTR es:[rdi],dx
  40c189:	outs   dx,DWORD PTR ds:[rsi]
  40c18a:	add    BYTE PTR [eax],al
  40c18d:	add    BYTE PTR [rax],al
  40c18f:	add    BYTE PTR [rcx],cl
  40c191:	and    BYTE PTR [rax],ah
  40c193:	and    BYTE PTR [rax],ah
  40c195:	and    BYTE PTR [rax],ah
  40c197:	and    BYTE PTR [rax],ah
  40c199:	and    BYTE PTR [rip+0x72612073],ah        # 0x72a1e212
  40c19f:	and    BYTE PTR gs:[rcx+0x63],ah
  40c1a3:	je     0x40c20e
  40c1a5:	jbe    0x40c208
  40c1a7:	je     0x40c20e
  40c1a9:	and    BYTE PTR fs:[rdx+0x79],ah
  40c1ad:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40c1b1:	(bad)  
  40c1b2:	jne    0x40c220
  40c1b4:	je     0x40c1c0
  40c1b6:	add    BYTE PTR [rax],al
  40c1b8:	or     DWORD PTR [rip+0x636f6e2d],ebp        # 0x63b02feb
  40c1be:	(bad)  
  40c1bf:	je     0x40c222
  40c1c1:	ins    BYTE PTR es:[rdi],dx
  40c1c2:	outs   dx,DWORD PTR ds:[rsi]
  40c1c3:	addr32 jae 0x40c200
  40c1c6:	and    BYTE PTR [rbp+riz*2+0x61],ah
  40c1ca:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
  40c1ce:	(bad)  
  40c1cf:	je     0x40c236
  40c1d1:	and    BYTE PTR [rcx+0x6c],ah
  40c1d4:	ins    BYTE PTR es:[rdi],dx
  40c1d5:	and    BYTE PTR [rbx+0x61],ah
  40c1d8:	je     0x40c23b
  40c1da:	ins    BYTE PTR es:[rdi],dx
  40c1db:	outs   dx,DWORD PTR ds:[rsi]
  40c1dc:	addr32 jae 0x40c1df
  40c1df:	add    BYTE PTR [rcx],cl
  40c1e1:	sub    eax,0x7475612d
  40c1e6:	outs   dx,DWORD PTR ds:[rsi]
  40c1e7:	and    BYTE PTR [rdx],bh
  40c1e9:	and    BYTE PTR [rdi+0x65],ah
  40c1ec:	outs   dx,BYTE PTR ds:[rsi]
  40c1ed:	gs jb  0x40c251
  40c1f0:	je     0x40c257
  40c1f2:	and    BYTE PTR [rcx+0x20],ah
  40c1f5:	jae    0x40c264
  40c1f7:	(bad)  
  40c1f8:	ins    BYTE PTR es:[rdi],dx
  40c1f9:	ins    BYTE PTR es:[rdi],dx
  40c1fa:	and    BYTE PTR [rdi+rbp*2+0x63],ah
  40c1fe:	and    BYTE PTR [rdi+0x6e],ch
  40c201:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40c205:	and    BYTE PTR [rsi+0x6c],ah
  40c208:	jns    0x40c20a
  40c20a:	add    BYTE PTR [rax],al
  40c20c:	add    BYTE PTR [rax],al
  40c20e:	add    BYTE PTR [rax],al
  40c210:	or     DWORD PTR [rip+0x6e69782d],ebp        # 0x6eaa3a43
  40c216:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40c21a:	and    BYTE PTR gs:[rdx],bh
  40c21d:	and    BYTE PTR [rdi+rbp*2+0x20],ah
  40c221:	pop    rax
  40c222:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40c224:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40c228:	and    BYTE PTR gs:[rax+0x72],dh
  40c22c:	outs   dx,DWORD PTR ds:[rsi]
  40c22d:	movsxd esp,DWORD PTR [rbp+0x73]
  40c230:	jae    0x40c29b
  40c232:	outs   dx,BYTE PTR ds:[rsi]
  40c233:	add    BYTE PTR [eax],al
  40c236:	add    BYTE PTR [rax],al
  40c238:	or     DWORD PTR [rip+0x786f6e2d],ebp        # 0x78b0306b
  40c23e:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  40c245:	outs   dx,BYTE PTR ds:[rsi]
  40c246:	outs   dx,DWORD PTR ds:[rsi]
  40c247:	fs and BYTE PTR gs:[rdx],bh
  40c24b:	and    BYTE PTR [rbx+0x61],dh
  40c24e:	ins    DWORD PTR es:[rdi],dx
  40c24f:	and    BYTE PTR gs:[rdx+0x75],ah
  40c253:	je     0x40c275
  40c255:	outs   dx,DWORD PTR fs:[rsi]
  40c257:	and    BYTE PTR [rsi+0x6f],ch
  40c25a:	je     0x40c27c
  40c25c:	outs   dx,BYTE PTR gs:[esi]
  40c25f:	gs jb  0x40c2c3
  40c262:	je     0x40c2c9
  40c264:	and    BYTE PTR [rax+0x49],bl
  40c267:	outs   dx,BYTE PTR ds:[rsi]
  40c268:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40c26c:	and    BYTE PTR gs:[rsi+0x6f],ch
  40c270:	fs gs jae 0x40c274
  40c274:	add    BYTE PTR [rax],al
  40c276:	add    BYTE PTR [rax],al
  40c278:	or     DWORD PTR [rip+0x666f6e2d],ebp        # 0x66b030ab
  40c27e:	imul   edi,DWORD PTR [rax+0x75],0x61622d70
  40c285:	jae    0x40c2ec
  40c287:	sub    eax,0x73697275
  40c28c:	and    BYTE PTR [rdx],bh
  40c28e:	and    BYTE PTR [rdi+rbp*2+0x20],ah
  40c292:	outs   dx,BYTE PTR ds:[rsi]
  40c293:	outs   dx,DWORD PTR ds:[rsi]
  40c294:	je     0x40c2b6
  40c296:	imul   di,WORD PTR [rax+0x75],0x2070
  40c29c:	js     0x40c30b
  40c29e:	ins    BYTE PTR es:[rdi],dx
  40c29f:	cmp    ah,BYTE PTR [rdx+0x61]
  40c2a2:	jae    0x40c309
  40c2a4:	and    BYTE PTR [rbp+0x72],dh
  40c2a7:	imul   esi,DWORD PTR [rbx+0x0],0x0
  40c2ae:	add    BYTE PTR [rax],al
  40c2b0:	or     DWORD PTR [rip+0x616f6c2d],ebp        # 0x61b02ee3
  40c2b6:	fs fs je 0x40c31e
  40c2ba:	and    BYTE PTR [rdx],bh
  40c2bc:	and    BYTE PTR [rsi+0x65],ah
  40c2bf:	je     0x40c324
  40c2c1:	push   0x74786520
  40c2c6:	gs jb  0x40c337
  40c2c9:	(bad)  
  40c2ca:	ins    BYTE PTR es:[rdi],dx
  40c2cb:	and    BYTE PTR [rsp+rdx*2+0x44],al
  40c2cf:	add    BYTE PTR [rcx],cl
  40c2d1:	sub    eax,0x6474642d
  40c2d6:	(bad)  
  40c2d7:	je     0x40c34d
  40c2d9:	jb     0x40c2fb
  40c2db:	cmp    ah,BYTE PTR [rax]
  40c2dd:	ins    BYTE PTR es:[rdi],dx
  40c2de:	outs   dx,DWORD PTR ds:[rsi]
  40c2df:	(bad)  
  40c2e0:	fs fs je 0x40c348
  40c2e4:	and    BYTE PTR [rbx],ch
  40c2e6:	and    BYTE PTR [rax+0x6f],dh
  40c2e9:	jo     0x40c360
  40c2eb:	ins    BYTE PTR es:[rdi],dx
  40c2ec:	(bad)  
  40c2ed:	je     0x40c354
  40c2ef:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40c2f3:	and    BYTE PTR [rdx+rsi*2+0x65],dh
  40c2f7:	and    BYTE PTR gs:[rdi+0x69],dh
  40c2fb:	je     0x40c365
  40c2fd:	and    BYTE PTR [rcx+0x6e],ch
  40c300:	push   0x74697265
  40c305:	gs and BYTE PTR fs:[rcx+0x74],ah
  40c30a:	je     0x40c37e
  40c30c:	imul   esp,DWORD PTR [rdx+0x75],0x20736574
  40c313:	add    BYTE PTR [rax],al
  40c315:	add    BYTE PTR [rax],al
  40c317:	add    BYTE PTR [rcx],cl
  40c319:	sub    eax,0x7274732d
  40c31e:	gs (bad) 
  40c320:	ins    DWORD PTR es:[rdi],dx
  40c321:	and    BYTE PTR [rdx],bh
  40c323:	and    BYTE PTR [rbp+0x73],dh
  40c326:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  40c32b:	and    BYTE PTR [rbx+0x74],dh
  40c32e:	jb     0x40c395
  40c330:	(bad)  
  40c331:	ins    DWORD PTR es:[rdi],dx
  40c332:	imul   ebp,DWORD PTR [rsi+0x67],0x746e6920
  40c339:	gs jb  0x40c3a2
  40c33c:	(bad)  
  40c33d:	movsxd esp,DWORD PTR [rbp+0x20]
  40c340:	je     0x40c3b1
  40c342:	and    BYTE PTR [rax+0x72],dh
  40c345:	outs   dx,DWORD PTR ds:[rsi]
  40c346:	movsxd esp,DWORD PTR [rbp+0x73]
  40c349:	jae    0x40c36b
  40c34b:	jbe    0x40c3b2
  40c34d:	jb     0x40c3c8
  40c34f:	and    BYTE PTR [rcx+riz*2+0x72],ch
  40c353:	and    BYTE PTR gs:[esi+0x69],ah
  40c358:	ins    BYTE PTR es:[rdi],dx
  40c359:	gs jae 0x40c35c
  40c35c:	add    BYTE PTR [rax],al
  40c35e:	add    BYTE PTR [rax],al
  40c360:	or     DWORD PTR [rip+0x6c61772d],ebp        # 0x6ca23a93
  40c366:	imul   esp,DWORD PTR [rbp+0x72],0x20
  40c36a:	cmp    ah,BYTE PTR [rax]
  40c36c:	movsxd esi,DWORD PTR [rdx+0x65]
  40c36f:	(bad)  
  40c370:	je     0x40c3d7
  40c372:	and    BYTE PTR [rcx+0x20],ah
  40c375:	jb     0x40c3dc
  40c377:	(bad)  
  40c378:	fs gs jb 0x40c39c
  40c37c:	(bad)  
  40c37d:	outs   dx,BYTE PTR ds:[rsi]
  40c37e:	and    BYTE PTR fs:[rdi+0x61],dh
  40c382:	ins    BYTE PTR es:[rdi],dx
  40c383:	imul   esp,DWORD PTR [rax],0x74
  40c386:	push   0x6867756f
  40c38b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40c38f:	and    BYTE PTR [rdx+0x65],dh
  40c392:	jae    0x40c409
  40c394:	ins    BYTE PTR es:[rdi],dx
  40c395:	je     0x40c400
  40c397:	outs   dx,BYTE PTR ds:[rsi]
  40c398:	and    BYTE PTR [edi+ebp*2+0x63],ah
  40c39d:	add    BYTE PTR [rax],al
  40c39f:	add    BYTE PTR [rcx],cl
  40c3a1:	sub    eax,0x7461702d
  40c3a6:	je     0x40c40d
  40c3a8:	jb     0x40c418
  40c3aa:	and    BYTE PTR [rax+0x61],dh
  40c3ad:	je     0x40c423
  40c3af:	gs jb  0x40c420
  40c3b2:	pop    rdi
  40c3b3:	jbe    0x40c416
  40c3b5:	ins    BYTE PTR es:[rdi],dx
  40c3b6:	jne    0x40c41d
  40c3b8:	and    BYTE PTR [rdx],bh
  40c3ba:	and    BYTE PTR [rbp+riz*2+0x73],dh
  40c3be:	je     0x40c3e0
  40c3c0:	je     0x40c42a
  40c3c2:	and    BYTE PTR gs:[rax+0x61],dh
  40c3c6:	je     0x40c43c
  40c3c8:	gs jb  0x40c439
  40c3cb:	and    BYTE PTR [rbx+0x75],dh
  40c3ce:	jo     0x40c440
  40c3d0:	outs   dx,DWORD PTR ds:[rsi]
  40c3d1:	jb     0x40c447
  40c3d3:	add    BYTE PTR [rax],al
  40c3d5:	add    BYTE PTR [rax],al
  40c3d7:	add    BYTE PTR [rcx],cl
  40c3d9:	sub    eax,0x6b68632d
  40c3de:	jb     0x40c445
  40c3e0:	imul   esi,DWORD PTR [ebx+0x74],0x3a207265
  40c3e8:	and    BYTE PTR [rsi+0x65],dh
  40c3eb:	jb     0x40c456
  40c3ed:	data16 jns 0x40c410
  40c3f0:	je     0x40c45a
  40c3f2:	and    BYTE PTR gs:[rsi+0x6f],ch
  40c3f6:	fs and BYTE PTR gs:[rdx+0x65],dh
  40c3fb:	imul   esi,DWORD PTR [ebx+0x74],0x69746172
  40c403:	outs   dx,DWORD PTR ds:[rsi]
  40c404:	outs   dx,BYTE PTR ds:[rsi]
  40c405:	and    BYTE PTR [rbx+0x6f],ah
  40c408:	fs add BYTE PTR gs:[rax],al
  40c40c:	add    BYTE PTR [rax],al
  40c40e:	add    BYTE PTR [rax],al
  40c410:	or     DWORD PTR [rip+0x6c65722d],ebp        # 0x6ca63643
  40c416:	(bad)  
  40c417:	js     0x40c487
  40c419:	and    BYTE PTR [ebx+0x63],dh
  40c41d:	push   0x20616d65
  40c422:	cmp    ah,BYTE PTR [rax]
  40c424:	outs   dx,DWORD PTR fs:[rsi]
  40c426:	and    BYTE PTR [rdx+0x65],dl
  40c429:	ins    BYTE PTR es:[rdi],dx
  40c42a:	(bad)  
  40c42b:	js     0x40c47b
  40c42d:	rex.RXB and BYTE PTR [r14+0x61],r14b
  40c431:	ins    BYTE PTR es:[rdi],dx
  40c432:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x206e6f69
  40c43a:	(bad)  
  40c43b:	addr32 (bad) 
  40c43d:	imul   ebp,DWORD PTR [rsi+0x73],0x68742074
  40c444:	and    BYTE PTR gs:[rbx+0x63],dh
  40c448:	push   0x616d65
  40c44d:	add    BYTE PTR [rax],al
  40c44f:	add    BYTE PTR [rcx],cl
  40c451:	sub    eax,0x6863732d
  40c456:	gs ins DWORD PTR es:[rdi],dx
  40c458:	(bad)  
  40c459:	and    BYTE PTR [rbx+0x63],dh
  40c45c:	push   0x20616d65
  40c461:	cmp    ah,BYTE PTR [rax]
  40c463:	outs   dx,DWORD PTR fs:[rsi]
  40c465:	and    BYTE PTR [rsi+0x61],dh
  40c468:	ins    BYTE PTR es:[rdi],dx
  40c469:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x206e6f69
  40c471:	(bad)  
  40c472:	addr32 (bad) 
  40c474:	imul   ebp,DWORD PTR [rsi+0x73],0x68742074
  40c47b:	and    BYTE PTR gs:[rdi+0x58],dl
  40c47f:	push   rbx
  40c480:	and    BYTE PTR [rbx+0x63],dh
  40c483:	push   0x616d65
  40c488:	or     DWORD PTR [rip+0x6863732d],ebp        # 0x68a437bb
  40c48e:	gs ins DWORD PTR es:[rdi],dx
  40c490:	(bad)  
  40c491:	je     0x40c505
  40c493:	outs   dx,DWORD PTR ds:[rsi]
  40c494:	outs   dx,BYTE PTR ds:[rsi]
  40c495:	and    BYTE PTR [rbx+0x63],dh
  40c498:	push   0x20616d65
  40c49d:	cmp    ah,BYTE PTR [rax]
  40c49f:	outs   dx,DWORD PTR fs:[rsi]
  40c4a1:	and    BYTE PTR [rsi+0x61],dh
  40c4a4:	ins    BYTE PTR es:[rdi],dx
  40c4a5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x206e6f69
  40c4ad:	(bad)  
  40c4ae:	addr32 (bad) 
  40c4b0:	imul   ebp,DWORD PTR [rsi+0x73],0x20612074
  40c4b7:	jae    0x40c51c
  40c4b9:	push   0x74616d65
  40c4be:	jb     0x40c52f
  40c4c0:	outs   dx,BYTE PTR ds:[rsi]
  40c4c1:	add    BYTE PTR [rax],al
  40c4c3:	add    BYTE PTR [rax],al
  40c4c5:	add    BYTE PTR [rax],al
  40c4c7:	add    BYTE PTR [rcx],cl
  40c4c9:	sub    eax,0x7861732d
  40c4ce:	xor    DWORD PTR [rdx],edi
  40c4d0:	and    BYTE PTR [rbp+0x73],dh
  40c4d3:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  40c4d8:	and    BYTE PTR [rdi+0x6c],ch
  40c4db:	and    BYTE PTR fs:[rbx+0x41],dl
  40c4df:	pop    rax
  40c4e0:	xor    DWORD PTR [rax],esp
  40c4e2:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
  40c4e9:	movsxd esp,DWORD PTR [rbp+0x73]
  40c4ec:	and    BYTE PTR [rsi+0x6f],ah
  40c4ef:	jb     0x40c511
  40c4f1:	jo     0x40c565
  40c4f3:	outs   dx,DWORD PTR ds:[rsi]
  40c4f4:	movsxd esp,DWORD PTR [rbp+0x73]
  40c4f7:	jae    0x40c562
  40c4f9:	outs   dx,BYTE PTR ds:[rsi]
  40c4fa:	add    BYTE PTR [eax],al
  40c4fd:	add    BYTE PTR [rax],al
  40c4ff:	add    BYTE PTR [rcx],cl
  40c501:	sub    eax,0x7861732d
  40c506:	cmp    ah,BYTE PTR [rax]
  40c508:	outs   dx,DWORD PTR fs:[rsi]
  40c50a:	and    BYTE PTR [rsi+0x6f],ch
  40c50d:	je     0x40c52f
  40c50f:	(bad)  
  40c510:	jne    0x40c57b
  40c512:	ins    BYTE PTR es:[rdi],dx
  40c513:	and    BYTE PTR fs:[rcx+0x20],ah
  40c517:	je     0x40c58b
  40c519:	gs and BYTE PTR gs:[rdx+0x75],ah
  40c51e:	je     0x40c540
  40c520:	ja     0x40c591
  40c522:	jb     0x40c58f
  40c524:	and    BYTE PTR [rdx+0x75],ch
  40c527:	jae    0x40c59d
  40c529:	and    BYTE PTR [rcx+0x74],ah
  40c52c:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40c530:	and    BYTE PTR [rbx+0x41],dl
  40c533:	pop    rax
  40c534:	and    BYTE PTR [rbp+riz*2+0x76],ch
  40c538:	gs ins BYTE PTR es:[rdi],dx
  40c53a:	add    BYTE PTR [rax],al
  40c53c:	add    BYTE PTR [rax],al
  40c53e:	add    BYTE PTR [rax],al
  40c540:	or     DWORD PTR [rip+0x646c6f2d],ebp        # 0x64ad3473
  40c546:	js     0x40c5b5
  40c548:	ins    BYTE PTR es:[rdi],dx
  40c549:	xor    DWORD PTR [rax],esi
  40c54b:	cmp    ah,BYTE PTR [rax]
  40c54d:	jne    0x40c5c2
  40c54f:	and    BYTE PTR gs:[rax+0x4d],bl
  40c553:	rex.WR sub rax,0x20302e31
  40c559:	jo     0x40c5bc
  40c55b:	jb     0x40c5d0
  40c55d:	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
  40c564:	gs jae 0x40c587
  40c567:	(bad)  
  40c568:	outs   dx,WORD PTR gs:[rsi]
  40c56b:	jb     0x40c5d2
  40c56d:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40c571:	and    BYTE PTR [rip+0x65206874],dh        # 0x65612deb
  40c577:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6e
  40c580:	or     DWORD PTR [rip+0x6170782d],ebp        # 0x61b13db3
  40c586:	je     0x40c5f0
  40c588:	and    BYTE PTR [rbp+0x78],ah
  40c58b:	jo     0x40c5ff
  40c58d:	cmp    ah,BYTE PTR [rax]
  40c58f:	gs jbe 0x40c5f3
  40c592:	ins    BYTE PTR es:[rdi],dx
  40c593:	jne    0x40c5f6
  40c595:	je     0x40c5fc
  40c597:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40c59b:	and    BYTE PTR [rax+0x50],bl
  40c59e:	(bad)  
  40c59f:	je     0x40c609
  40c5a1:	and    BYTE PTR [rbp+0x78],ah
  40c5a4:	jo     0x40c618
  40c5a6:	gs jae 0x40c61c
  40c5a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d69202c
  40c5b0:	jo     0x40c61e
  40c5b2:	jns    0x40c5d4
  40c5b4:	sub    eax,0x6f6f6e2d
  40c5b9:	jne    0x40c62f
  40c5bb:	add    BYTE PTR [rax],al
  40c5bd:	add    BYTE PTR [rax],al
  40c5bf:	add    BYTE PTR [rdx],cl
  40c5c1:	imul   r12,QWORD PTR [rdx+0x78],0x70206c6d
  40c5c9:	jb     0x40c63a
  40c5cb:	push   0x65
  40c5cd:	movsxd esi,DWORD PTR [rax+riz*1+0x68]
  40c5d1:	outs   dx,DWORD PTR ds:[rsi]
  40c5d2:	ins    DWORD PTR es:[rdi],dx
  40c5d3:	and    BYTE PTR gs:[rax+0x61],dh
  40c5d7:	cmp    ah,BYTE PTR gs:[eax]
  40c5db:	push   0x3a707474
  40c5e0:	(bad)  
  40c5e1:	(bad)  
  40c5e2:	js     0x40c651
  40c5e4:	ins    BYTE PTR es:[rdi],dx
  40c5e5:	jae    0x40c656
  40c5e7:	data16 je 0x40c618
  40c5ea:	outs   dx,DWORD PTR ds:[rsi]
  40c5eb:	jb     0x40c654
  40c5ed:	(bad)  
  40c5ee:	add    BYTE PTR [rax],al
  40c5f0:	push   rsp
  40c5f1:	outs   dx,DWORD PTR ds:[rsi]
  40c5f2:	and    BYTE PTR [rdx+0x65],dh
  40c5f5:	jo     0x40c666
  40c5f7:	jb     0x40c66d
  40c5f9:	and    BYTE PTR [rdx+0x75],ah
  40c5fc:	addr32 jae 0x40c61f
  40c5ff:	outs   dx,DWORD PTR ds:[rsi]
  40c600:	jb     0x40c622
  40c602:	addr32 gs je 0x40c626
  40c606:	jae    0x40c677
  40c608:	ins    DWORD PTR es:[rdi],dx
  40c609:	and    BYTE PTR gs:[rax+0x65],ch
  40c60d:	ins    BYTE PTR es:[rdi],dx
  40c60e:	jo     0x40c630
  40c610:	movsxd ebp,DWORD PTR [rax+0x65]
  40c613:	movsxd ebp,DWORD PTR [rbx+0x3a]
  40c616:	and    BYTE PTR [rax+0x74],ch
  40c619:	je     0x40c68b
  40c61b:	cmp    ch,BYTE PTR [rdi]
  40c61d:	(bad)  
  40c61e:	js     0x40c68d
  40c620:	ins    BYTE PTR es:[rdi],dx
  40c621:	jae    0x40c692
  40c623:	data16 je 0x40c654
  40c626:	outs   dx,DWORD PTR ds:[rsi]
  40c627:	jb     0x40c690
  40c629:	(bad)  
  40c62a:	(bad)  
  40c62b:	jne    0x40c694
  40c62d:	jae    0x40c65d
  40c62f:	push   0x6c6d74
  40c634:	push   rbx
  40c635:	pop    r8
  40c637:	cs jo  0x40c69d
  40c63a:	fs (bad) 
  40c63c:	je     0x40c69f
  40c63e:	sub    BYTE PTR [rip+0x7330322e],ah        # 0x7370f872
  40c644:	sub    al,0x20
  40c646:	and    eax,0xa2964
  40c64b:	push   rbx
  40c64c:	pop    r8
  40c64e:	cs addr32 gs je 0x40c6a3
  40c653:	(bad)  
  40c654:	jb     0x40c6b7
  40c656:	ins    DWORD PTR es:[rdi],dx
  40c657:	gs je  0x40c6bf
  40c65a:	jb     0x40c6a1
  40c65c:	outs   dx,BYTE PTR ds:[rsi]
  40c65d:	je     0x40c6c8
  40c65f:	je     0x40c6da
  40c661:	sub    BYTE PTR [rip+0xa2973],ah        # 0x4aefda
  40c667:	push   rbx
  40c668:	pop    r8
  40c66a:	movsxd ebp,DWORD PTR cs:[rdi+0x6d]
  40c66e:	ins    DWORD PTR es:[rdi],dx
  40c66f:	outs   dx,BYTE PTR gs:[rsi]
  40c671:	je     0x40c69b
  40c673:	and    eax,0xa2973
  40c678:	push   rbx
  40c679:	pop    r8
  40c67b:	cs jo  0x40c6f0
  40c67e:	outs   dx,DWORD PTR ds:[rsi]
  40c67f:	movsxd esp,DWORD PTR [rbp+0x73]
  40c682:	jae    0x40c6ed
  40c684:	outs   dx,BYTE PTR ds:[rsi]
  40c685:	rex.WB outs dx,BYTE PTR ds:[esi]
  40c688:	jae    0x40c6fe
  40c68a:	jb     0x40c701
  40c68c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40c690:	outs   dx,BYTE PTR ds:[rsi]
  40c691:	sub    BYTE PTR [rip+0x25202c73],ah        # 0x2560f30a
  40c697:	jae    0x40c6c2
  40c699:	or     al,BYTE PTR [rax]
  40c69b:	add    BYTE PTR [rax],al
  40c69d:	add    BYTE PTR [rax],al
  40c69f:	add    BYTE PTR [rbx+0x41],dl
  40c6a2:	pop    rax
  40c6a3:	cs jo  0x40c718
  40c6a6:	outs   dx,DWORD PTR ds:[rsi]
  40c6a7:	movsxd esp,DWORD PTR [rbp+0x73]
  40c6aa:	jae    0x40c715
  40c6ac:	outs   dx,BYTE PTR ds:[rsi]
  40c6ad:	rex.WB outs dx,BYTE PTR ds:[esi]
  40c6b0:	jae    0x40c726
  40c6b2:	jb     0x40c729
  40c6b4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40c6b8:	outs   dx,BYTE PTR ds:[rsi]
  40c6b9:	sub    BYTE PTR [rip+0x4e202c73],ah        # 0x4e60f332
  40c6bf:	push   rbp
  40c6c0:	rex.WR
  40c6c1:	sub    QWORD PTR [rdx],r9
  40c6c4:	add    BYTE PTR [rax],al
  40c6c6:	add    BYTE PTR [rax],al
  40c6c8:	push   rbx
  40c6c9:	pop    r8
  40c6cb:	imul   esp,DWORD PTR cs:[rdi+0x6e],0x6261726f
  40c6d3:	ins    BYTE PTR es:[rdi],dx
  40c6d4:	gs push rdi
  40c6d6:	push   0x73657469
  40c6db:	jo     0x40c73e
  40c6dd:	movsxd esp,DWORD PTR [rbp+0x28]
  40c6e0:	and    eax,0x25202c73
  40c6e5:	sub    DWORD PTR fs:[rdx],ecx
  40c6e8:	add    BYTE PTR [rbx+0x41],dl
  40c6eb:	pop    rax
  40c6ec:	movsxd ebp,DWORD PTR cs:[rax+0x61]
  40c6f0:	jb     0x40c753
  40c6f2:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  40c6f6:	jae    0x40c720
  40c6f8:	and    eax,0x25202c73
  40c6fd:	sub    DWORD PTR fs:[rdx],ecx
  40c700:	add    BYTE PTR [rbx+0x41],dl
  40c703:	pop    rax
  40c704:	cs jb  0x40c76c
  40c707:	data16 gs jb 0x40c770
  40c70b:	outs   dx,BYTE PTR ds:[rsi]
  40c70c:	movsxd esp,DWORD PTR [rbp+0x28]
  40c70f:	and    eax,0xa2973
  40c714:	push   rbx
  40c715:	pop    r8
  40c717:	cs outs dx,BYTE PTR gs:[rsi]
  40c71a:	fs rex.RB ins BYTE PTR es:[rdi],dx
  40c71d:	gs ins DWORD PTR es:[rdi],dx
  40c71f:	outs   dx,BYTE PTR gs:[rsi]
  40c721:	je     0x40c74b
  40c723:	and    eax,0xa2973
  40c728:	push   rbx
  40c729:	pop    r8
  40c72b:	cs gs ins BYTE PTR es:[rdi],dx
  40c72e:	gs ins DWORD PTR es:[rdi],dx
  40c730:	outs   dx,BYTE PTR gs:[rsi]
  40c732:	je     0x40c778
  40c734:	movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x25]
  40c739:	jae    0x40c767
  40c73b:	and    BYTE PTR [rip+0x2e202c64],ah        # 0x2e60f3a5
  40c741:	cs sub DWORD PTR cs:[rdx],ecx
  40c745:	add    BYTE PTR [rbx+0x41],dl
  40c748:	pop    rax
  40c749:	outs   dx,BYTE PTR cs:[rsi]
  40c74b:	outs   dx,DWORD PTR ds:[rsi]
  40c74c:	je     0x40c7af
  40c74e:	je     0x40c7b9
  40c750:	outs   dx,DWORD PTR ds:[rsi]
  40c751:	outs   dx,BYTE PTR ds:[rsi]
  40c752:	rex.R
  40c753:	movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x25]
  40c758:	jae    0x40c786
  40c75a:	and    BYTE PTR [rip+0x25202c73],ah        # 0x2560f3d3
  40c760:	jae    0x40c78b
  40c762:	or     al,BYTE PTR [rax]
  40c764:	push   rbx
  40c765:	pop    r8
  40c767:	cs addr32 gs je 0x40c7b1
  40c76c:	outs   dx,BYTE PTR ds:[rsi]
  40c76d:	je     0x40c7d8
  40c76f:	je     0x40c7ea
  40c771:	sub    BYTE PTR [rip+0xa2973],ah        # 0x4af0ea
  40c777:	push   rbx
  40c778:	pop    r8
  40c77a:	cs gs js 0x40c7f2
  40c77e:	gs jb  0x40c7ef
  40c781:	(bad)  
  40c782:	ins    BYTE PTR es:[rdi],dx
  40c783:	push   rbx
  40c784:	jne    0x40c7e8
  40c786:	jae    0x40c7ed
  40c788:	je     0x40c7b2
  40c78a:	and    eax,0x20002c73
  40c78f:	sub    al,0x0
  40c791:	and    BYTE PTR [rip+0x20002c73],ah        # 0x2040f40a
  40c797:	sub    DWORD PTR [rdx],ecx
  40c799:	add    BYTE PTR [rax],ah
  40c79b:	and    eax,0xa2973
  40c7a0:	push   rbx
  40c7a1:	pop    r8
  40c7a3:	cs jae 0x40c81a
  40c7a6:	(bad)  
  40c7a7:	jb     0x40c81d
  40c7a9:	rex.RB ins BYTE PTR es:[rdi],dx
  40c7ab:	gs ins DWORD PTR es:[rdi],dx
  40c7ad:	outs   dx,BYTE PTR gs:[rsi]
  40c7af:	je     0x40c7d9
  40c7b1:	and    eax,0xa290073
  40c7b6:	add    BYTE PTR [rax+riz*1],ch
  40c7b9:	and    eax,0x273d73
  40c7be:	and    eax,0x53002773
  40c7c3:	pop    r8
  40c7c5:	cs outs dx,BYTE PTR gs:[rsi]
  40c7c8:	rex.R outs dx,DWORD PTR fs:[rsi]
  40c7cb:	movsxd esi,DWORD PTR [rbp+0x6d]
  40c7ce:	outs   dx,BYTE PTR gs:[rsi]
  40c7d0:	je     0x40c7fa
  40c7d2:	sub    DWORD PTR [rdx],ecx
  40c7d4:	add    BYTE PTR [rbx+0x41],dl
  40c7d7:	pop    rax
  40c7d8:	cs jae 0x40c84f
  40c7db:	(bad)  
  40c7dc:	jb     0x40c852
  40c7de:	rex.R outs dx,DWORD PTR ds:[rsi]
  40c7e0:	movsxd esi,DWORD PTR [rbp+0x6d]
  40c7e3:	outs   dx,BYTE PTR gs:[rsi]
  40c7e5:	je     0x40c80f
  40c7e7:	sub    DWORD PTR [rdx],ecx
  40c7e9:	add    BYTE PTR [rbx+0x41],dl
  40c7ec:	pop    rax
  40c7ed:	cs jae 0x40c855
  40c7f0:	je     0x40c836
  40c7f2:	outs   dx,DWORD PTR ds:[rsi]
  40c7f3:	movsxd esi,DWORD PTR [rbp+0x6d]
  40c7f6:	outs   dx,BYTE PTR gs:[rsi]
  40c7f8:	je     0x40c846
  40c7fa:	outs   dx,DWORD PTR ds:[rsi]
  40c7fb:	movsxd esp,DWORD PTR [rcx+0x74]
  40c7fe:	outs   dx,DWORD PTR ds:[rsi]
  40c7ff:	jb     0x40c829
  40c801:	sub    DWORD PTR [rdx],ecx
  40c803:	add    BYTE PTR [rbx+0x41],dl
  40c806:	pop    rax
  40c807:	cs push 0x78457361
  40c80d:	je     0x40c874
  40c80f:	jb     0x40c87f
  40c811:	(bad)  
  40c812:	ins    BYTE PTR es:[rdi],dx
  40c813:	push   rbx
  40c814:	jne    0x40c878
  40c816:	jae    0x40c87d
  40c818:	je     0x40c842
  40c81a:	sub    DWORD PTR [rdx],ecx
  40c81c:	add    BYTE PTR [rbx+0x41],dl
  40c81f:	pop    rax
  40c820:	cs push 0x6e497361
  40c826:	je     0x40c88d
  40c828:	jb     0x40c898
  40c82a:	(bad)  
  40c82b:	ins    BYTE PTR es:[rdi],dx
  40c82c:	push   rbx
  40c82d:	jne    0x40c891
  40c82f:	jae    0x40c896
  40c831:	je     0x40c85b
  40c833:	sub    DWORD PTR [rdx],ecx
  40c835:	add    BYTE PTR [rbx+0x41],dl
  40c838:	pop    rax
  40c839:	imul   esi,DWORD PTR cs:[rbx+0x53],0x646e6174
  40c841:	(bad)  
  40c842:	ins    BYTE PTR es:[rdi],dx
  40c843:	outs   dx,DWORD PTR ds:[rsi]
  40c844:	outs   dx,BYTE PTR ds:[rsi]
  40c845:	sub    BYTE PTR gs:[rcx],ch
  40c848:	or     al,BYTE PTR [rax]
  40c84a:	push   rbx
  40c84b:	pop    r8
  40c84d:	imul   ebp,DWORD PTR cs:[rsi+0x74],0x616e7265
  40c855:	ins    BYTE PTR es:[rdi],dx
  40c856:	push   rbx
  40c857:	jne    0x40c8bb
  40c859:	jae    0x40c8c0
  40c85b:	je     0x40c885
  40c85d:	and    eax,0x53002c73
  40c862:	pop    r8
  40c864:	cs outs dx,BYTE PTR gs:[rsi]
  40c867:	fs rex.RB ins BYTE PTR es:[rdi],dx
  40c86a:	gs ins DWORD PTR es:[rdi],dx
  40c86c:	outs   dx,BYTE PTR gs:[rsi]
  40c86e:	je     0x40c8be
  40c870:	jae    0x40c89a
  40c872:	and    eax,0x202c0073
  40c877:	rex.WRX push rbp
  40c879:	rex.WR
  40c87a:	rex.WR add BYTE PTR [rax+riz*1],r13b
  40c87e:	and    eax,0x202c0073
  40c883:	rex.WRX push rbp
  40c885:	rex.WR
  40c886:	sub    QWORD PTR [rdx],r9
  40c889:	add    BYTE PTR [rax+riz*1],ch
  40c88c:	(bad)  
  40c88d:	and    eax,0xa292773
  40c892:	add    BYTE PTR [rbx+0x41],dl
  40c895:	pop    rax
  40c896:	cs jae 0x40c90d
  40c899:	(bad)  
  40c89a:	jb     0x40c910
  40c89c:	rex.RB ins BYTE PTR es:[rdi],dx
  40c89e:	gs ins DWORD PTR es:[rdi],dx
  40c8a0:	outs   dx,BYTE PTR gs:[rsi]
  40c8a2:	je     0x40c8f2
  40c8a4:	jae    0x40c8ce
  40c8a6:	and    eax,0x202c0073
  40c8ab:	(bad)  
  40c8ac:	and    eax,0x2c002773
  40c8b1:	and    BYTE PTR [rip+0x202c0064],ah        # 0x206cc91b
  40c8b7:	and    eax,0x25202c64
  40c8bc:	add    BYTE PTR fs:[rax+riz*1],ch
  40c8c0:	js     0x40c92f
  40c8c2:	ins    BYTE PTR es:[rdi],dx
  40c8c3:	outs   dx,BYTE PTR ds:[rsi]
  40c8c4:	jae    0x40c8c6
  40c8c6:	cmp    ah,BYTE PTR [rip+0x273d0073]        # 0x277dc93f
  40c8cc:	and    eax,0x2c002773
  40c8d1:	and    BYTE PTR [rip+0x73253a73],ah        # 0x7366034a
  40c8d7:	cmp    eax,0x2e250027
  40c8dc:	xor    al,0x73
  40c8de:	cs cs cs (bad) 
  40c8e2:	sub    al,0x20
  40c8e4:	and    eax,0x53000064
  40c8e9:	pop    r8
  40c8eb:	cs (bad) 
  40c8ed:	je     0x40c963
  40c8ef:	jb     0x40c95a
  40c8f1:	(bad)  
  40c8f2:	jne    0x40c968
  40c8f4:	gs rex.R
  40c8f6:	movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x25]
  40c8fb:	jae    0x40c929
  40c8fd:	and    BYTE PTR [rip+0x25202c73],ah        # 0x2560f576
  40c903:	fs sub al,0x20
  40c906:	and    eax,0x4e202c64
  40c90b:	push   rbp
  40c90c:	rex.WR
  40c90d:	rex.WR sub al,0x20
  40c910:	cs cs sub DWORD PTR cs:[rdx],ecx
  40c915:	add    BYTE PTR [rax],al
  40c917:	add    BYTE PTR [rbx+0x41],dl
  40c91a:	pop    rax
  40c91b:	cs (bad) 
  40c91d:	je     0x40c993
  40c91f:	jb     0x40c98a
  40c921:	(bad)  
  40c922:	jne    0x40c998
  40c924:	gs rex.R
  40c926:	movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x25]
  40c92b:	jae    0x40c959
  40c92d:	and    BYTE PTR [rip+0x25202c73],ah        # 0x2560f5a6
  40c933:	fs sub al,0x20
  40c936:	and    eax,0x25202c64
  40c93b:	jae    0x40c969
  40c93d:	and    BYTE PTR [rsi],ch
  40c93f:	cs sub DWORD PTR cs:[rdx],ecx
  40c943:	add    BYTE PTR [rbx+0x41],dl
  40c946:	pop    rax
  40c947:	cs jb  0x40c9af
  40c94a:	jae    0x40c9bb
  40c94c:	ins    BYTE PTR es:[rdi],dx
  40c94d:	jbe    0x40c9b4
  40c94f:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40c951:	je     0x40c9bc
  40c953:	je     0x40c9ce
  40c955:	sub    BYTE PTR [rax],al
  40c957:	sub    al,0x20
  40c959:	and    eax,0xa2973
  40c95e:	sub    al,0x20
  40c960:	sub    DWORD PTR [rdx],ecx
  40c962:	add    BYTE PTR [rax],al
  40c964:	add    BYTE PTR [rax],al
  40c966:	add    BYTE PTR [rax],al
  40c968:	rex.WRXB jne 0x40c9df
  40c96b:	and    BYTE PTR [rdi+0x66],ch
  40c96e:	and    BYTE PTR [rbp+0x65],ch
  40c971:	ins    DWORD PTR es:[rdi],dx
  40c972:	outs   dx,DWORD PTR ds:[rsi]
  40c973:	jb     0x40c9ee
  40c975:	and    BYTE PTR [rcx+0x6e],ch
  40c978:	and    BYTE PTR [rax+0x6d],bh
  40c97b:	ins    BYTE PTR es:[rdi],dx
  40c97c:	ins    BYTE PTR es:[rdi],dx
  40c97d:	imul   ebp,DWORD PTR [rsi+0x74],0x6765723a
  40c984:	imul   esi,DWORD PTR [rbx+0x74],0x6f4e7265
  40c98b:	fs sub BYTE PTR gs:[rcx],ch
  40c98f:	or     al,BYTE PTR [rax]
  40c991:	sub    eax,0x75626564
  40c996:	add    BYTE PTR [eip+0x6265642d],ch        # 0x62a62dca
  40c99d:	jne    0x40ca06
  40c99f:	add    BYTE PTR [rip+0x79706f63],ch        # 0x79b13908
  40c9a5:	add    BYTE PTR [rip+0x706f632d],ch        # 0x70b02cd8
  40c9ab:	jns    0x40c9ad
  40c9ad:	sub    eax,0x6f636572
  40c9b2:	jbe    0x40ca19
  40c9b4:	jb     0x40c9b6
  40c9b6:	sub    eax,0x6365722d
  40c9bb:	outs   dx,DWORD PTR ds:[rsi]
  40c9bc:	jbe    0x40ca23
  40c9be:	jb     0x40c9c0
  40c9c0:	sub    eax,0x65677568
  40c9c5:	add    BYTE PTR [rip+0x6775682d],ch        # 0x67b631f8
  40c9cb:	add    BYTE PTR gs:[rip+0x6e656f6e],ch        # 0x6ea63940
  40c9d2:	je     0x40c9d4
  40c9d4:	sub    eax,0x656f6e2d
  40c9d9:	outs   dx,BYTE PTR ds:[rsi]
  40c9da:	je     0x40c9dc
  40c9dc:	sub    eax,0x6e656f6e
  40c9e1:	movsxd eax,DWORD PTR [rax]
  40c9e3:	sub    eax,0x656f6e2d
  40c9e8:	outs   dx,BYTE PTR ds:[rsi]
  40c9e9:	movsxd eax,DWORD PTR [rax]
  40c9eb:	sub    eax,0x6c63736e
  40c9f0:	gs (bad) 
  40c9f2:	outs   dx,BYTE PTR ds:[rsi]
  40c9f3:	add    BYTE PTR [rip+0x63736e2d],ch        # 0x63b43826
  40c9f9:	ins    BYTE PTR es:[rdi],dx
  40c9fa:	gs (bad) 
  40c9fc:	outs   dx,BYTE PTR ds:[rsi]
  40c9fd:	add    BYTE PTR [rip+0x64636f6e],ch        # 0x64a43971
  40ca03:	(bad)  
  40ca04:	je     0x40ca67
  40ca06:	add    BYTE PTR [rip+0x636f6e2d],ch        # 0x63b03839
  40ca0c:	fs (bad) 
  40ca0e:	je     0x40ca71
  40ca10:	add    BYTE PTR [rip+0x69646f6e],ch        # 0x69a53984
  40ca16:	movsxd esi,DWORD PTR [rax+rax*1+0x2d]
  40ca1a:	sub    eax,0x69646f6e
  40ca1f:	movsxd esi,DWORD PTR [rax+rax*1+0x2d]
  40ca23:	jbe    0x40ca8a
  40ca25:	jb     0x40ca9a
  40ca27:	imul   ebp,DWORD PTR [rdi+0x6e],0x762d2d00
  40ca2e:	gs jb  0x40caa4
  40ca31:	imul   ebp,DWORD PTR [rdi+0x6e],0x3a732500
  40ca38:	and    BYTE PTR [rbp+0x73],dh
  40ca3b:	imul   ebp,DWORD PTR [rsi+0x67],0x62696c20
  40ca42:	js     0x40cab1
  40ca44:	ins    BYTE PTR es:[rdi],dx
  40ca45:	and    BYTE PTR [rsi+0x65],dh
  40ca48:	jb     0x40cabd
  40ca4a:	imul   ebp,DWORD PTR [rdi+0x6e],0xa732520
  40ca51:	add    BYTE PTR [rax],ah
  40ca53:	and    BYTE PTR [rax],ah
  40ca55:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40ca58:	jo     0x40cac3
  40ca5a:	ins    BYTE PTR es:[rdi],dx
  40ca5b:	gs and BYTE PTR fs:[rdi+0x69],dh
  40ca60:	je     0x40caca
  40ca62:	cmp    ah,BYTE PTR [rax]
  40ca64:	add    BYTE PTR [rax+rbp*2+0x72],dl
  40ca68:	gs (bad) 
  40ca6a:	fs jae 0x40ca8d
  40ca6d:	add    BYTE PTR [rdx+rsi*2+0x65],dl
  40ca71:	and    BYTE PTR gs:[rax],al
  40ca74:	rex.WRXB jne 0x40caeb
  40ca77:	jo     0x40caee
  40ca79:	je     0x40ca9b
  40ca7b:	add    BYTE PTR [rax+0x75],dl
  40ca7e:	jae    0x40cae8
  40ca80:	and    BYTE PTR [rax],al
  40ca82:	push   rdx
  40ca83:	gs (bad) 
  40ca85:	fs gs jb 0x40caa9
  40ca89:	add    BYTE PTR [rax+0x61],dl
  40ca8c:	je     0x40cb02
  40ca8e:	gs jb  0x40caff
  40ca91:	jae    0x40cab3
  40ca93:	add    BYTE PTR [rdi+0x72],dl
  40ca96:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x41530020
  40ca9e:	pop    rax
  40ca9f:	jbe    0x40cad2
  40caa1:	and    BYTE PTR [rax],al
  40caa3:	rex.RX push rsp
  40caa5:	push   rax
  40caa6:	and    BYTE PTR [rax],al
  40caa8:	rex.W push rsp
  40caaa:	push   rsp
  40caab:	push   rax
  40caac:	and    BYTE PTR [rax],al
  40caae:	rex.R push rsp
  40cab0:	rex.R push rsi
  40cab2:	(bad)  
  40cab3:	ins    BYTE PTR es:[rdi],dx
  40cab4:	imul   esp,DWORD PTR [rax+riz*1+0x0],0x4c4d5448
  40cabc:	and    BYTE PTR [rax],al
  40cabe:	rex.WR
  40cabf:	gs addr32 (bad) 
  40cac2:	movsxd edi,DWORD PTR [rcx+0x20]
  40cac5:	add    BYTE PTR [rbx+0x31],al
  40cac8:	xor    al,0x4e
  40caca:	and    BYTE PTR [rax],al
  40cacc:	rex.XB (bad) 
  40cace:	je     0x40cb31
  40cad0:	ins    BYTE PTR es:[rdi],dx
  40cad1:	outs   dx,DWORD PTR ds:[rsi]
  40cad2:	and    BYTE PTR [eax],al
  40cad5:	pop    rax
  40cad6:	push   rax
  40cad7:	(bad)  
  40cad8:	je     0x40cb42
  40cada:	and    BYTE PTR [rax],al
  40cadc:	pop    rax
  40cadd:	push   rax
  40cade:	outs   dx,DWORD PTR ds:[rsi]
  40cadf:	imul   ebp,DWORD PTR [rsi+0x74],0x207265
  40cae6:	pop    rax
  40cae7:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40cae9:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40caed:	and    BYTE PTR gs:[rax],al
  40caf0:	movsxd rbp,DWORD PTR [r15+0x6e]
  40caf4:	jbe    0x40cb16
  40caf6:	add    BYTE PTR [rcx+0x43],cl
  40caf9:	push   rbp
  40cafa:	and    BYTE PTR [rax],al
  40cafc:	rex.WB push r11
  40cafe:	rex.WRXB cmp BYTE PTR [r8],r15b
  40cb01:	xor    eax,0x205839
  40cb06:	push   rbp
  40cb07:	outs   dx,BYTE PTR ds:[rsi]
  40cb08:	imul   esp,DWORD PTR [rbx+0x6f],0x206564
  40cb0f:	push   rdx
  40cb10:	gs addr32 gs js 0x40cb85
  40cb15:	jae    0x40cb37
  40cb17:	add    BYTE PTR [rcx+0x75],al
  40cb1a:	je     0x40cb8b
  40cb1c:	ins    DWORD PTR es:[rdi],dx
  40cb1d:	(bad)  
  40cb1e:	je     0x40cb81
  40cb20:	and    BYTE PTR [rax],al
  40cb22:	rex.RB js 0x40cb95
  40cb25:	jb     0x40cb47
  40cb27:	add    BYTE PTR [rbx+0x63],dl
  40cb2a:	push   0x73616d65
  40cb2f:	and    BYTE PTR [rax],al
  40cb31:	push   rbx
  40cb32:	movsxd ebp,DWORD PTR [rax+0x65]
  40cb35:	ins    DWORD PTR es:[rdi],dx
  40cb36:	(bad)  
  40cb37:	je     0x40cbab
  40cb39:	outs   dx,DWORD PTR ds:[rsi]
  40cb3a:	outs   dx,BYTE PTR ds:[rsi]
  40cb3b:	and    BYTE PTR [rax],al
  40cb3d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  40cb3f:	fs jne 0x40cbae
  40cb42:	gs jae 0x40cb65
  40cb45:	add    BYTE PTR [rbp+riz*2+0x62],al
  40cb49:	jne    0x40cbb2
  40cb4b:	and    BYTE PTR [rax],al
  40cb4d:	rex.WRB
  40cb4e:	gs ins DWORD PTR es:[rdi],dx
  40cb50:	rex.R
  40cb51:	gs (bad) 
  40cb53:	jne    0x40cbbc
  40cb55:	and    BYTE PTR [rax],al
  40cb57:	push   rdx
  40cb58:	jne    0x40cbc8
  40cb5a:	rex.R
  40cb5b:	gs (bad) 
  40cb5d:	jne    0x40cbc6
  40cb5f:	and    BYTE PTR [rax],al
  40cb61:	pop    rdx
  40cb62:	ins    BYTE PTR es:[rdi],dx
  40cb63:	imul   esp,DWORD PTR [rdx+0x20],0x6d7a4c00
  40cb6a:	(bad)  
  40cb6b:	and    BYTE PTR [rax],al
  40cb6d:	sub    eax,0x756f6f6e
  40cb72:	je     0x40cb74
  40cb74:	sub    eax,0x6f6f6e2d
  40cb79:	jne    0x40cbef
  40cb7b:	add    BYTE PTR [rip+0x6f2d006f],ch        # 0x6f6dcbf0
  40cb81:	jne    0x40cbf7
  40cb83:	jo     0x40cbfa
  40cb85:	je     0x40cb87
  40cb87:	sub    eax,0x74756f2d
  40cb8c:	jo     0x40cc03
  40cb8e:	je     0x40cb90
  40cb90:	sub    eax,0x6c6d7468
  40cb95:	outs   dx,DWORD PTR ds:[rsi]
  40cb96:	jne    0x40cc0c
  40cb98:	add    BYTE PTR [rip+0x6d74682d],ch        # 0x6db533cb
  40cb9e:	ins    BYTE PTR es:[rdi],dx
  40cb9f:	outs   dx,DWORD PTR ds:[rsi]
  40cba0:	jne    0x40cc16
  40cba2:	add    BYTE PTR [rip+0x72776f6e],ch        # 0x72b83b16
  40cba8:	(bad)  
  40cba9:	jo     0x40cbab
  40cbab:	sub    eax,0x776f6e2d
  40cbb0:	jb     0x40cc13
  40cbb2:	jo     0x40cbb4
  40cbb4:	sub    eax,0x6c6d7468
  40cbb9:	add    BYTE PTR [rip+0x6d74682d],ch        # 0x6db533ec
  40cbbf:	ins    BYTE PTR es:[rdi],dx
  40cbc0:	add    BYTE PTR [rip+0x6f6c6d78],ch        # 0x6fad393e
  40cbc6:	jne    0x40cc3c
  40cbc8:	add    BYTE PTR [rip+0x6c6d782d],ch        # 0x6cae43fb
  40cbce:	outs   dx,DWORD PTR ds:[rsi]
  40cbcf:	jne    0x40cc45
  40cbd1:	add    BYTE PTR [rip+0x65646f6e],ch        # 0x65a53b45
  40cbd7:	data16 fs je 0x40cc3f
  40cbdb:	add    BYTE PTR [rip+0x646f6e2d],ch        # 0x64b03a0e
  40cbe1:	gs data16 fs je 0x40cc4a
  40cbe6:	add    BYTE PTR [rip+0x64616f6c],ch        # 0x64a23b58
  40cbec:	fs je  0x40cc53
  40cbef:	add    BYTE PTR [rip+0x616f6c2d],ch        # 0x61b03822
  40cbf5:	fs fs je 0x40cc5d
  40cbf9:	add    BYTE PTR [rip+0x61647464],ch        # 0x61a54063
  40cbff:	je     0x40cc75
  40cc01:	jb     0x40cc03
  40cc03:	sub    eax,0x6474642d
  40cc08:	(bad)  
  40cc09:	je     0x40cc7f
  40cc0b:	jb     0x40cc0d
  40cc0d:	sub    eax,0x696c6176
  40cc12:	add    BYTE PTR fs:[rip+0x6c61762d],ch        # 0x6ca24246
  40cc19:	imul   esp,DWORD PTR [rax+rax*1+0x2d],0x74736f70
  40cc21:	jbe    0x40cc84
  40cc23:	ins    BYTE PTR es:[rdi],dx
  40cc24:	imul   esp,DWORD PTR [rax+rax*1+0x2d],0x736f702d
  40cc2c:	je     0x40cca4
  40cc2e:	(bad)  
  40cc2f:	ins    BYTE PTR es:[rdi],dx
  40cc30:	imul   esp,DWORD PTR [rax+rax*1+0x2d],0x76647464
  40cc38:	(bad)  
  40cc39:	ins    BYTE PTR es:[rdi],dx
  40cc3a:	imul   esp,DWORD PTR [rax+rax*1+0x2d],0x6474642d
  40cc42:	jbe    0x40cca5
  40cc44:	ins    BYTE PTR es:[rdi],dx
  40cc45:	imul   esp,DWORD PTR [rax+rax*1+0x2d],0x76647464
  40cc4d:	(bad)  
  40cc4e:	ins    BYTE PTR es:[rdi],dx
  40cc4f:	imul   esp,DWORD PTR [rsi+riz*2+0x70],0x2d2d0069
  40cc57:	fs je  0x40ccbe
  40cc5a:	jbe    0x40ccbd
  40cc5c:	ins    BYTE PTR es:[rdi],dx
  40cc5d:	imul   esp,DWORD PTR [rsi+riz*2+0x70],0x642d0069
  40cc65:	jb     0x40ccd6
  40cc67:	jo     0x40cccd
  40cc69:	je     0x40cccf
  40cc6b:	add    BYTE PTR [rip+0x6f72642d],ch        # 0x6fb3309e
  40cc71:	jo     0x40ccd7
  40cc73:	je     0x40ccd9
  40cc75:	add    BYTE PTR [rip+0x65736e69],ch        # 0x65b43ae4
  40cc7b:	jb     0x40ccf1
  40cc7d:	add    BYTE PTR [rip+0x736e692d],ch        # 0x73af35b0
  40cc83:	gs jb  0x40ccfa
  40cc86:	add    BYTE PTR [rip+0x696d6974],ch        # 0x69ae3600
  40cc8c:	outs   dx,BYTE PTR ds:[rsi]
  40cc8d:	add    BYTE PTR [eip+0x6d69742d],ch        # 0x6daa40c1
  40cc94:	imul   ebp,DWORD PTR [rsi+0x67],0x75612d00
  40cc9b:	je     0x40cd0c
  40cc9d:	add    BYTE PTR [rip+0x7475612d],ch        # 0x74b62dd0
  40cca3:	outs   dx,DWORD PTR ds:[rsi]
  40cca4:	add    BYTE PTR [rip+0x65706572],ch        # 0x65b1321c
  40ccaa:	(bad)  
  40ccab:	je     0x40ccad
  40ccad:	sub    eax,0x7065722d
  40ccb2:	gs (bad) 
  40ccb4:	je     0x40ccb6
  40ccb6:	sub    eax,0x68737570
  40ccbb:	add    BYTE PTR [rip+0x7375702d],ch        # 0x73b63cee
  40ccc1:	push   0x75702d00
  40ccc6:	jae    0x40cd30
  40ccc8:	jae    0x40cd37
  40ccca:	(bad)  
  40cccb:	ins    BYTE PTR es:[rdi],dx
  40cccc:	ins    BYTE PTR es:[rdi],dx
  40cccd:	add    BYTE PTR [rip+0x7375702d],ch        # 0x73b63d00
  40ccd3:	push   0x6c616d73
  40ccd8:	ins    BYTE PTR es:[rdi],dx
  40ccd9:	add    BYTE PTR [rip+0x74736574],ch        # 0x74b43253
  40ccdf:	rex.WB
  40cce0:	rex.WRXB add BYTE PTR [rip+0x7365742d],r13b        # 0x73a64114
  40cce7:	je     0x40cd32
  40cce9:	rex.WRXB add BYTE PTR [rip+0x636e6978],r13b        # 0x63af3668
  40ccf0:	ins    BYTE PTR es:[rdi],dx
  40ccf1:	jne    0x40cd57
  40ccf3:	add    BYTE PTR gs:[rip+0x6e69782d],ch        # 0x6eaa4527
  40ccfa:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40ccfe:	add    BYTE PTR gs:[rip+0x69786f6e],ch        # 0x69b93c73
  40cd05:	outs   dx,BYTE PTR ds:[rsi]
  40cd06:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40cd0a:	outs   dx,BYTE PTR gs:[rsi]
  40cd0c:	outs   dx,DWORD PTR ds:[rsi]
  40cd0d:	fs add BYTE PTR gs:[rip+0x786f6e2d],ch        # 0x78b03b42
  40cd15:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  40cd1c:	outs   dx,BYTE PTR ds:[rsi]
  40cd1d:	outs   dx,DWORD PTR ds:[rsi]
  40cd1e:	fs add BYTE PTR gs:[rip+0x69666f6e],ch        # 0x69a73c94
  40cd26:	js     0x40cd9d
  40cd28:	jo     0x40cd57
  40cd2a:	(bad)  
  40cd2c:	jae    0x40cd93
  40cd2e:	sub    eax,0x73697275
  40cd33:	add    BYTE PTR [rip+0x666f6e2d],ch        # 0x66b03b66
  40cd39:	imul   edi,DWORD PTR [rax+0x75],0x61622d70
  40cd40:	jae    0x40cda7
  40cd42:	sub    eax,0x73697275
  40cd47:	add    BYTE PTR [rip+0x706d6f63],ch        # 0x70ae3cb0
  40cd4d:	jb     0x40cdb4
  40cd4f:	jae    0x40cdc4
  40cd51:	add    BYTE PTR [rip+0x6d6f632d],ch        # 0x6db03084
  40cd57:	jo     0x40cdcb
  40cd59:	gs jae 0x40cdcf
  40cd5c:	add    BYTE PTR [rip+0x61776f6e],ch        # 0x61b83cd0
  40cd62:	jb     0x40cdd2
  40cd64:	imul   ebp,DWORD PTR [rsi+0x67],0x6e2d2d00
  40cd6b:	outs   dx,DWORD PTR ds:[rsi]
  40cd6c:	ja     0x40cdcf
  40cd6e:	jb     0x40cdde
  40cd70:	imul   ebp,DWORD PTR [rsi+0x67],0x65702d00
  40cd77:	fs (bad) 
  40cd79:	outs   dx,BYTE PTR ds:[rsi]
  40cd7a:	je     0x40cde5
  40cd7c:	movsxd eax,DWORD PTR [rax]
  40cd7e:	sub    eax,0x6465702d
  40cd83:	(bad)  
  40cd84:	outs   dx,BYTE PTR ds:[rsi]
  40cd85:	je     0x40cdf0
  40cd87:	movsxd eax,DWORD PTR [rax]
  40cd89:	sub    eax,0x6e343163
  40cd8e:	add    BYTE PTR [rip+0x3431632d],ch        # 0x347230c1
  40cd94:	outs   dx,BYTE PTR ds:[rsi]
  40cd95:	add    BYTE PTR [rip+0x6e343163],ch        # 0x6e74fefe
  40cd9b:	xor    DWORD PTR [rcx],esi
  40cd9d:	add    BYTE PTR [rip+0x3431632d],ch        # 0x347230d0
  40cda3:	outs   dx,BYTE PTR ds:[rsi]
  40cda4:	xor    DWORD PTR [rcx],esi
  40cda6:	add    BYTE PTR [rip+0x2d637865],ch        # 0x2da44611
  40cdac:	movsxd esi,DWORD PTR [rcx]
  40cdae:	xor    al,0x6e
  40cdb0:	add    BYTE PTR [rip+0x6378652d],ch        # 0x63b932e3
  40cdb6:	sub    eax,0x6e343163
  40cdbb:	add    BYTE PTR [rip+0x61746163],ch        # 0x61b52f24
  40cdc1:	ins    BYTE PTR es:[rdi],dx
  40cdc2:	outs   dx,DWORD PTR ds:[rsi]
  40cdc3:	addr32 jae 0x40cdc6
  40cdc6:	sub    eax,0x7461632d
  40cdcb:	(bad)  
  40cdcc:	ins    BYTE PTR es:[rdi],dx
  40cdcd:	outs   dx,DWORD PTR ds:[rsi]
  40cdce:	addr32 jae 0x40cdd1
  40cdd1:	sub    eax,0x61636f6e
  40cdd6:	je     0x40ce39
  40cdd8:	ins    BYTE PTR es:[rdi],dx
  40cdd9:	outs   dx,DWORD PTR ds:[rsi]
  40cdda:	addr32 jae 0x40cddd
  40cddd:	sub    eax,0x636f6e2d
  40cde2:	(bad)  
  40cde3:	je     0x40ce46
  40cde5:	ins    BYTE PTR es:[rdi],dx
  40cde6:	outs   dx,DWORD PTR ds:[rsi]
  40cde7:	addr32 jae 0x40cdea
  40cdea:	sub    eax,0x6f636e65
  40cdef:	fs add BYTE PTR gs:[rip+0x636e652d],ch        # 0x63af3324
  40cdf7:	outs   dx,DWORD PTR ds:[rsi]
  40cdf8:	fs add BYTE PTR gs:[rsi+rdx*2+0x45],al
  40cdfe:	outs   dx,BYTE PTR ds:[rsi]
  40cdff:	movsxd eax,DWORD PTR [rax]
  40ce01:	push   rbp
  40ce02:	push   rsp
  40ce03:	rex.RX sub eax,0x6e2d0038
  40ce09:	outs   dx,DWORD PTR ds:[rsi]
  40ce0a:	(bad)  
  40ce0b:	ins    BYTE PTR es:[rdi],dx
  40ce0c:	(bad)  
  40ce0d:	outs   dx,BYTE PTR ds:[rsi]
  40ce0e:	imul   esi,DWORD PTR [rbx+0x0],0x2d
  40ce12:	sub    eax,0x6c626f6e
  40ce17:	(bad)  
  40ce18:	outs   dx,BYTE PTR ds:[rsi]
  40ce19:	imul   esi,DWORD PTR [rbx+0x0],0x2d
  40ce1d:	ins    DWORD PTR es:[rdi],dx
  40ce1e:	(bad)  
  40ce1f:	js     0x40ce8e
  40ce21:	gs ins DWORD PTR es:[rdi],dx
  40ce23:	add    BYTE PTR [rip+0x78616d2d],ch        # 0x78a23b56
  40ce29:	ins    DWORD PTR es:[rdi],dx
  40ce2a:	gs ins DWORD PTR es:[rdi],dx
  40ce2c:	add    BYTE PTR [rip+0x662d0064],ah        # 0x666dce96
  40ce32:	outs   dx,DWORD PTR ds:[rsi]
  40ce33:	jb     0x40cea2
  40ce35:	(bad)  
  40ce36:	je     0x40ce38
  40ce38:	sub    eax,0x726f662d
  40ce3d:	ins    DWORD PTR es:[rdi],dx
  40ce3e:	(bad)  
  40ce3f:	je     0x40ce41
  40ce41:	sub    eax,0x74657270
  40ce46:	je     0x40cec1
  40ce48:	add    BYTE PTR [rip+0x6572702d],ch        # 0x65b33e7b
  40ce4e:	je     0x40cec4
  40ce50:	jns    0x40ce52
  40ce52:	sub    eax,0x65727473
  40ce57:	(bad)  
  40ce58:	ins    DWORD PTR es:[rdi],dx
  40ce59:	add    BYTE PTR [rip+0x7274732d],ch        # 0x72b5418c
  40ce5f:	gs (bad) 
  40ce61:	ins    DWORD PTR es:[rdi],dx
  40ce62:	add    BYTE PTR [rip+0x6b6c6177],ch        # 0x6bad2fdf
  40ce68:	gs jb  0x40ce6b
  40ce6b:	sub    eax,0x6c61772d
  40ce70:	imul   esp,DWORD PTR [rbp+0x72],0x0
  40ce74:	sub    eax,0x31786173
  40ce79:	add    BYTE PTR [rip+0x7861732d],ch        # 0x78a241ac
  40ce7f:	xor    DWORD PTR [rax],eax
  40ce81:	sub    eax,0x786173
  40ce86:	sub    eax,0x7861732d
  40ce8b:	add    BYTE PTR [rip+0x726b6863],ch        # 0x72ac36f4
  40ce91:	imul   esi,DWORD PTR gs:[ebx+0x74],0x2d007265
  40ce9a:	sub    eax,0x726b6863
  40ce9f:	imul   esi,DWORD PTR gs:[ebx+0x74],0x2d007265
  40cea8:	jb     0x40cf0f
  40ceaa:	ins    BYTE PTR es:[rdi],dx
  40ceab:	(bad)  
  40ceac:	js     0x40cf1c
  40ceae:	add    BYTE PTR [eip+0x6c65722d],ch        # 0x6ca640e2
  40ceb5:	(bad)  
  40ceb6:	js     0x40cf26
  40ceb8:	add    BYTE PTR [eip+0x65686373],ch        # 0x65a93232
  40cebf:	ins    DWORD PTR es:[rdi],dx
  40cec0:	(bad)  
  40cec1:	add    BYTE PTR [rip+0x6863732d],ch        # 0x68a441f4
  40cec7:	gs ins DWORD PTR es:[rdi],dx
  40cec9:	(bad)  
  40ceca:	add    BYTE PTR [rip+0x65686373],ch        # 0x65a93243
  40ced0:	ins    DWORD PTR es:[rdi],dx
  40ced1:	(bad)  
  40ced2:	je     0x40cf46
  40ced4:	outs   dx,DWORD PTR ds:[rsi]
  40ced5:	outs   dx,BYTE PTR ds:[rsi]
  40ced6:	add    BYTE PTR [rip+0x6863732d],ch        # 0x68a44209
  40cedc:	gs ins DWORD PTR es:[rdi],dx
  40cede:	(bad)  
  40cedf:	je     0x40cf53
  40cee1:	outs   dx,DWORD PTR ds:[rsi]
  40cee2:	outs   dx,BYTE PTR ds:[rsi]
  40cee3:	add    BYTE PTR [rip+0x656e6f6e],ch        # 0x65af3e57
  40cee9:	je     0x40ceeb
  40ceeb:	sub    eax,0x6e6f6e2d
  40cef0:	gs je  0x40cef3
  40cef3:	sub    eax,0x6f636f6e
  40cef8:	ins    DWORD PTR es:[rdi],dx
  40cef9:	jo     0x40cf5c
  40cefb:	movsxd esi,DWORD PTR [rax+rax*1+0x2d]
  40ceff:	sub    eax,0x6f636f6e
  40cf04:	ins    DWORD PTR es:[rdi],dx
  40cf05:	jo     0x40cf68
  40cf07:	movsxd esi,DWORD PTR [rax+rax*1+0x2d]
  40cf0b:	ins    BYTE PTR es:[rdi],dx
  40cf0c:	outs   dx,DWORD PTR ds:[rsi]
  40cf0d:	(bad)  
  40cf0e:	fs sub eax,0x63617274
  40cf14:	add    BYTE PTR gs:[rip+0x616f6c2d],ch        # 0x61b03b48
  40cf1b:	fs sub eax,0x63617274
  40cf21:	add    BYTE PTR gs:[rip+0x68746170],ch        # 0x68b53098
  40cf28:	add    BYTE PTR [rip+0x7461702d],ch        # 0x74a23f5b
  40cf2e:	push   0x58414d00
  40cf33:	pop    rdi
  40cf34:	push   rax
  40cf35:	push   r12
  40cf37:	rex.W push rbx
  40cf39:	and    BYTE PTR [rdx+0x65],dh
  40cf3c:	(bad)  
  40cf3d:	movsxd ebp,DWORD PTR [rax+0x65]
  40cf40:	cmp    ah,BYTE PTR fs:[rax]
  40cf43:	je     0x40cfb4
  40cf45:	outs   dx,DWORD PTR ds:[rsi]
  40cf46:	and    BYTE PTR [rbp+0x61],ch
  40cf49:	outs   dx,BYTE PTR ds:[rsi]
  40cf4a:	jns    0x40cf6c
  40cf4c:	jo     0x40cfaf
  40cf4e:	je     0x40cfb8
  40cf50:	jae    0x40cf5c
  40cf52:	add    BYTE PTR [rip+0x74746170],ch        # 0x74b530c8
  40cf58:	gs jb  0x40cfc9
  40cf5b:	add    BYTE PTR [rip+0x7461702d],ch        # 0x74a23f8e
  40cf61:	je     0x40cfc8
  40cf63:	jb     0x40cfd3
  40cf65:	add    BYTE PTR [rip+0x74617078],ch        # 0x74a23fe3
  40cf6b:	push   0x782d2d00
  40cf70:	jo     0x40cfd3
  40cf72:	je     0x40cfdc
  40cf74:	add    BYTE PTR [rip+0x78646c6f],ch        # 0x78a53be9
  40cf7a:	ins    DWORD PTR es:[rdi],dx
  40cf7b:	ins    BYTE PTR es:[rdi],dx
  40cf7c:	xor    DWORD PTR [rax],esi
  40cf7e:	add    BYTE PTR [rip+0x646c6f2d],ch        # 0x64ad3eb1
  40cf84:	js     0x40cff3
  40cf86:	ins    BYTE PTR es:[rdi],dx
  40cf87:	xor    DWORD PTR [rax],esi
  40cf89:	add    BYTE PTR [rbp+0x6e],dl
  40cf8c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40cf90:	outs   dx,BYTE PTR ds:[rsi]
  40cf91:	and    BYTE PTR [rdi+0x70],ch
  40cf94:	je     0x40cfff
  40cf96:	outs   dx,DWORD PTR ds:[rsi]
  40cf97:	outs   dx,BYTE PTR ds:[rsi]
  40cf98:	and    BYTE PTR [rip+0x53000a73],ah        # 0x5340da11
  40cf9e:	rex.RXB
  40cf9f:	rex.WRB
  40cfa0:	rex.WR pop rdi
  40cfa2:	rex.XB
  40cfa3:	push   r12
  40cfa5:	rex.B
  40cfa6:	rex.WR
  40cfa7:	rex.WRXB
  40cfa8:	rex.RXB pop r15
  40cfaa:	rex.RX
  40cfab:	rex.WB
  40cfac:	rex.WR
  40cfad:	rex.RB push r11
  40cfaf:	add    BYTE PTR [rsi+0x61],dl
  40cfb2:	jb     0x40d01d
  40cfb4:	(bad)  
  40cfb5:	(bad)  
  40cfb6:	ins    BYTE PTR es:[rdi],dx
  40cfb7:	and    BYTE PTR gs:[rbx+rdx*2],ah
  40cfbb:	rex.RXB
  40cfbc:	rex.WRB
  40cfbd:	rex.WR pop rdi
  40cfbf:	rex.XB
  40cfc0:	push   r12
  40cfc2:	rex.B
  40cfc3:	rex.WR
  40cfc4:	rex.WRXB
  40cfc5:	rex.RXB pop r15
  40cfc7:	rex.RX
  40cfc8:	rex.WB
  40cfc9:	rex.WR
  40cfca:	rex.RB push r11
  40cfcc:	and    BYTE PTR [rsi+0x6f],ch
  40cfcf:	je     0x40cff1
  40cfd1:	jae    0x40d038
  40cfd3:	je     0x40cfdf
  40cfd5:	add    BYTE PTR [rax+0x4d],bl
  40cfd8:	rex.WR
  40cfd9:	rex.WR
  40cfda:	rex.WB
  40cfdb:	rex.WRX push rsp
  40cfdd:	pop    rdi
  40cfde:	rex.WB
  40cfdf:	rex.WRX
  40cfe0:	rex.R
  40cfe1:	rex.RB
  40cfe2:	rex.WRX push rsp
  40cfe4:	add    BYTE PTR [rax],al
  40cfe6:	add    BYTE PTR [rax],al
  40cfe8:	cmp    al,0x21
  40cfea:	rex.R
  40cfeb:	rex.WRXB
  40cfec:	rex.XB push r12
  40cfee:	pop    rcx
  40cfef:	push   rax
  40cff0:	and    BYTE PTR [r8+0x54],r9b
  40cff4:	rex.WRB
  40cff5:	rex.WR and BYTE PTR [rax+0x55],r10b
  40cff9:	rex.X
  40cffa:	rex.WR
  40cffb:	rex.WB
  40cffc:	rex.XB and BYTE PTR [r10],spl
  40cfff:	sub    eax,0x33572f2f
  40d004:	rex.XB (bad) 
  40d006:	(bad)  
  40d007:	rex.R push rsp
  40d009:	and    BYTE PTR [rax+0x54],r9b
  40d00d:	rex.WRB
  40d00e:	rex.WR and BYTE PTR [rsi+rbp*1],r14b
  40d012:	xor    BYTE PTR [rax],ah
  40d014:	push   rsp
  40d015:	jb     0x40d078
  40d017:	outs   dx,BYTE PTR ds:[rsi]
  40d018:	jae    0x40d083
  40d01a:	je     0x40d085
  40d01c:	outs   dx,DWORD PTR ds:[rsi]
  40d01d:	outs   dx,BYTE PTR ds:[rsi]
  40d01e:	(bad)  
  40d01f:	ins    BYTE PTR es:[rdi],dx
  40d020:	(bad)  
  40d021:	(bad)  
  40d022:	rex.RB
  40d023:	rex.WRX and r9b,BYTE PTR [rdx]
  40d026:	add    BYTE PTR [rax],al
  40d028:	or     DWORD PTR [rdx],esp
  40d02a:	push   0x3a707474
  40d02f:	(bad)  
  40d030:	(bad)  
  40d031:	ja     0x40d0aa
  40d033:	ja     0x40d063
  40d035:	ja     0x40d06a
  40d037:	outs   dx,DWORD PTR cs:[rsi]
  40d039:	jb     0x40d0a2
  40d03b:	(bad)  
  40d03c:	push   rsp
  40d03d:	push   rdx
  40d03e:	(bad)  
  40d03f:	push   rdx
  40d040:	rex.RB
  40d041:	rex.XB sub eax,0x6c6d7468
  40d047:	xor    al,0x30
  40d049:	(bad)  
  40d04a:	ins    BYTE PTR es:[rdi],dx
  40d04b:	outs   dx,DWORD PTR ds:[rsi]
  40d04c:	outs   dx,DWORD PTR ds:[rsi]
  40d04d:	jae    0x40d0b4
  40d04f:	cs fs je 0x40d0b7
  40d053:	and    bh,BYTE PTR [rsi]
  40d055:	or     al,BYTE PTR [rax]
  40d057:	add    BYTE PTR [rax+rbp*2],bh
  40d05a:	je     0x40d0c9
  40d05c:	ins    BYTE PTR es:[rdi],dx
  40d05d:	ds cmp al,0x68
  40d060:	gs (bad) 
  40d062:	fs ds cmp al,0x74
  40d066:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x2073253e
  40d06e:	outs   dx,DWORD PTR ds:[rsi]
  40d06f:	jne    0x40d0e5
  40d071:	jo     0x40d0e8
  40d073:	je     0x40d0b1
  40d075:	(bad)  
  40d076:	je     0x40d0e1
  40d078:	je     0x40d0e6
  40d07a:	gs ds cmp al,0x2f
  40d07e:	push   0x3e646165
  40d083:	or     al,BYTE PTR [rax]
  40d085:	add    BYTE PTR [rax],al
  40d087:	add    BYTE PTR [rdx+riz*2],bh
  40d08a:	outs   dx,DWORD PTR ds:[rsi]
  40d08b:	fs jns 0x40d0ae
  40d08e:	(bad)  
  40d08f:	movsxd ebp,DWORD PTR [edi+0x6c]
  40d093:	outs   dx,DWORD PTR ds:[rsi]
  40d094:	jb     0x40d0d3
  40d096:	and    ah,BYTE PTR [rbx]
  40d098:	data16 data16 data16 data16 data16 data16 and bh,BYTE PTR [rsi]
  40d0a0:	cmp    al,0x68
  40d0a2:	xor    DWORD PTR [rax],esp
  40d0a4:	(bad)  
  40d0a5:	ins    BYTE PTR es:[rdi],dx
  40d0a6:	imul   esp,DWORD PTR [rdi+0x6e],0x6563223d
  40d0ad:	outs   dx,BYTE PTR ds:[rsi]
  40d0ae:	je     0x40d115
  40d0b0:	jb     0x40d0d4
  40d0b2:	ds and eax,0x756f2073
  40d0b8:	je     0x40d12a
  40d0ba:	jne    0x40d130
  40d0bc:	cmp    al,0x2f
  40d0be:	push   0xa3e31
  40d0c3:	add    BYTE PTR [rax],al
  40d0c5:	add    BYTE PTR [rax],al
  40d0c7:	add    BYTE PTR [rbx+0x63],dl
  40d0ca:	push   0x74616d65
  40d0cf:	jb     0x40d140
  40d0d1:	outs   dx,BYTE PTR ds:[rsi]
  40d0d2:	and    BYTE PTR [rbx+0x63],dh
  40d0d5:	push   0x20616d65
  40d0da:	and    eax,0x61662073
  40d0df:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40d0e7:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40d0ea:	jo     0x40d155
  40d0ec:	ins    BYTE PTR es:[rdi],dx
  40d0ed:	or     al,BYTE PTR gs:[rax]
  40d0f0:	push   rdi
  40d0f1:	pop    rax
  40d0f2:	push   rbx
  40d0f3:	and    BYTE PTR [rbx+0x63],dh
  40d0f6:	push   0x20616d65
  40d0fb:	and    eax,0x61662073
  40d100:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40d108:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40d10b:	jo     0x40d176
  40d10d:	ins    BYTE PTR es:[rdi],dx
  40d10e:	or     al,BYTE PTR gs:[rax]
  40d111:	push   rdx
  40d112:	imul   esi,DWORD PTR gs:[ebx+0x74],0x69746172
  40d11b:	outs   dx,DWORD PTR ds:[rsi]
  40d11c:	outs   dx,BYTE PTR ds:[rsi]
  40d11d:	and    BYTE PTR [rbx+0x6f],ah
  40d120:	jne    0x40d190
  40d122:	je     0x40d144
  40d124:	outs   dx,DWORD PTR ds:[rsi]
  40d125:	data16 data16 cmp ah,BYTE PTR [rax]
  40d129:	and    eax,0x25000a64
  40d12e:	and    BYTE PTR fs:[rcx+0x74],ch
  40d132:	gs jb  0x40d196
  40d135:	je     0x40d1a0
  40d137:	outs   dx,DWORD PTR ds:[rsi]
  40d138:	outs   dx,BYTE PTR ds:[rsi]
  40d139:	jae    0x40d13b
  40d13b:	cmp    al,0x2f
  40d13d:	(bad)  
  40d13e:	outs   dx,DWORD PTR ds:[rsi]
  40d13f:	fs jns 0x40d180
  40d142:	cmp    al,0x2f
  40d144:	push   0x3e6c6d74
  40d149:	or     al,BYTE PTR [rax]
  40d14b:	add    BYTE PTR [rax],al
  40d14d:	add    BYTE PTR [rax],al
  40d14f:	add    BYTE PTR [rax+0x41cc],al
  40d155:	add    BYTE PTR [rax],al
  40d157:	add    BYTE PTR [rax+0x41c7],al
  40d15d:	add    BYTE PTR [rax],al
  40d15f:	add    al,dh
  40d161:	pop    rcx
  40d162:	add    BYTE PTR [rax],al
	...
  40d16d:	add    BYTE PTR [rax],al
  40d16f:	add    BYTE PTR [rcx+0x72],al
  40d172:	addr32 jne 0x40d1e2
  40d175:	outs   dx,BYTE PTR gs:[rsi]
  40d177:	je     0x40d199
  40d179:	outs   dx,DWORD PTR fs:[rsi]
  40d17b:	ins    DWORD PTR es:[rdi],dx
  40d17c:	(bad)  
  40d17d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  40d184:	jb     0x40d1a6
  40d186:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40d18a:	rex.B
  40d18b:	rex.WB
  40d18c:	rex.WRX sub QWORD PTR [rax],r8
  40d18f:	rex.B jb 0x40d1f9
  40d192:	jne    0x40d201
  40d194:	outs   dx,BYTE PTR gs:[rsi]
  40d196:	je     0x40d1b8
  40d198:	jae    0x40d203
  40d19a:	outs   dx,BYTE PTR ds:[rsi]
  40d19b:	addr32 jne 0x40d20a
  40d19e:	(bad)  
  40d19f:	jb     0x40d20a
  40d1a1:	je     0x40d21c
  40d1a3:	and    BYTE PTR [rax],ch
  40d1a5:	push   rbx
  40d1a6:	rex.WB
  40d1a7:	rex.RXB
  40d1a8:	rex.WRX sub QWORD PTR [rax],r8
  40d1ab:	add    BYTE PTR [rax],al
  40d1ad:	add    BYTE PTR [rax],al
  40d1af:	add    BYTE PTR [rdi+0x76],cl
  40d1b2:	gs jb  0x40d21b
  40d1b5:	ins    BYTE PTR es:[rdi],dx
  40d1b6:	outs   dx,DWORD PTR ds:[rsi]
  40d1b7:	ja     0x40d1d9
  40d1b9:	jb     0x40d21c
  40d1bb:	outs   dx,BYTE PTR ds:[rsi]
  40d1bc:	and    BYTE PTR gs:[ebp+0x72],ah
  40d1c1:	jb     0x40d232
  40d1c3:	jb     0x40d1e5
  40d1c5:	sub    BYTE PTR [rdi+0x56],cl
  40d1c8:	rex.RB push r10
  40d1ca:	rex.RX
  40d1cb:	rex.WR
  40d1cc:	rex.WRXB push r15
  40d1ce:	sub    DWORD PTR [rax],eax
  40d1d0:	push   rax
  40d1d1:	(bad)  
  40d1d2:	jb     0x40d248
  40d1d4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40d1db:	jae    0x40d1fd
  40d1dd:	outs   dx,DWORD PTR ds:[rsi]
  40d1de:	data16 and BYTE PTR [rbx+0x69],dh
  40d1e2:	outs   dx,BYTE PTR ds:[esi]
  40d1e4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40d1eb:	and    BYTE PTR gs:[rax],ch
  40d1ee:	push   rax
  40d1ef:	rex.WR
  40d1f0:	rex.WRXB push r11
  40d1f2:	push   rbx
  40d1f3:	sub    DWORD PTR [rax],eax
  40d1f5:	add    BYTE PTR [rax],al
  40d1f7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40d1fb:	(bad)  
  40d1fc:	ins    BYTE PTR es:[rdi],dx
  40d1fd:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  40d201:	jae    0x40d223
  40d203:	outs   dx,DWORD PTR ds:[rsi]
  40d204:	data16 and BYTE PTR [rbx+0x69],dh
  40d208:	outs   dx,BYTE PTR ds:[esi]
  40d20a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40d211:	and    BYTE PTR gs:[rax],ch
  40d214:	push   rsp
  40d215:	rex.WR
  40d216:	rex.WRXB push r11
  40d218:	push   rbx
  40d219:	sub    DWORD PTR [rax],eax
  40d21b:	add    BYTE PTR [rax],al
  40d21d:	add    BYTE PTR [rax],al
  40d21f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40d223:	and    BYTE PTR [rdx+0x65],dh
  40d226:	jae    0x40d29d
  40d228:	ins    BYTE PTR es:[rdi],dx
  40d229:	je     0x40d24b
  40d22b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  40d232:	jae    0x40d2a1
  40d234:	(bad)  
  40d235:	ins    BYTE PTR es:[rdi],dx
  40d236:	ins    BYTE PTR es:[rdi],dx
  40d237:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40d23b:	(bad)  
  40d23c:	and    BYTE PTR gs:[rdx+0x65],dh
  40d240:	jo     0x40d2b4
  40d242:	gs jae 0x40d2aa
  40d245:	outs   dx,BYTE PTR ds:[rsi]
  40d246:	je     0x40d2ad
  40d248:	and    BYTE PTR fs:[rax],ch
  40d24b:	push   rbp
  40d24c:	rex.WRX
  40d24d:	rex.R
  40d24e:	rex.RB push r10
  40d250:	rex.RX
  40d251:	rex.WR
  40d252:	rex.WRXB push r15
  40d254:	sub    DWORD PTR [rax],eax
  40d256:	push   rbp
  40d257:	outs   dx,BYTE PTR ds:[rsi]
  40d258:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40d25c:	outs   dx,BYTE PTR ds:[rsi]
  40d25d:	and    BYTE PTR [rbp+0x72],ah
  40d260:	jb     0x40d2d1
  40d262:	jb     0x40d264
  40d264:	add    BYTE PTR [rax],al
  40d266:	add    BYTE PTR [rax],al
  40d268:	pop    rdi
  40d269:	ins    DWORD PTR es:[rdi],dx
  40d26a:	(bad)  
  40d26b:	je     0x40d2d5
  40d26d:	gs jb  0x40d2e2
  40d270:	sub    BYTE PTR [rcx],ch
  40d272:	cmp    ah,BYTE PTR [rax]
  40d274:	and    eax,0x6e692073
  40d279:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765faf2
  40d27f:	sub    al,0x20
  40d281:	and    eax,0x20202967
  40d286:	sub    BYTE PTR [rdx+0x65],dh
  40d289:	je     0x40d301
  40d28b:	(bad)  
  40d28c:	ins    BYTE PTR es:[rdi],dx
  40d28d:	cmp    eax,0xa296725
  40d292:	add    BYTE PTR [rax],al
  40d294:	sub    al,0x89
  40d296:	(bad)  
  40d297:	jmp    FWORD PTR [rbp-0x78]
  40d29a:	(bad)  
  40d29b:	(bad)  
  40d29c:	fmul   QWORD PTR [rax-0x77130001]
  40d2a2:	(bad)  
  40d2a3:	(bad)  
  40d2a4:	cld    
  40d2a5:	mov    bh,bh
  40d2a7:	dec    DWORD PTR [rcx+rcx*4]
  40d2aa:	(bad)  
  40d2ab:	call   FWORD PTR [rcx+rcx*4]
  40d2ae:	(bad)  
  40d2af:	dec    DWORD PTR [rbp+0x69]
  40d2b2:	outs   dx,BYTE PTR ds:[rsi]
  40d2b3:	addr32 ja 0x40d2e3
  40d2b6:	ja     0x40d2ee
  40d2b8:	xor    al,0x20
  40d2ba:	jb     0x40d331
  40d2bc:	outs   dx,BYTE PTR ds:[rsi]
  40d2bd:	je     0x40d328
  40d2bf:	ins    DWORD PTR es:[rdi],dx
  40d2c0:	and    BYTE PTR gs:[rsi+0x61],ah
  40d2c4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40d2cc:	add    BYTE PTR [rax],al
  40d2ce:	add    BYTE PTR [rax],al
  40d2d0:	rex.B
  40d2d1:	fs fs jb 0x40d33a
  40d2d5:	jae    0x40d34a
  40d2d7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8f34d
  40d2dd:	jae    0x40d2ff
  40d2df:	outs   dx,BYTE PTR ds:[rsi]
  40d2e0:	outs   dx,DWORD PTR ds:[rsi]
  40d2e1:	and    BYTE PTR [rcx+0x6d],ch
  40d2e4:	(bad)  
  40d2e5:	addr32 gs sub eax,0x74636573
  40d2ec:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  40d2f3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40d2fa:	jne    0x40d361
  40d2fc:	jb     0x40d377
  40d2fe:	and    BYTE PTR [rsi+0x61],ah
  40d301:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  40d309:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2f373
  40d30f:	je     0x40d376
  40d311:	jae    0x40d333
  40d313:	(bad)  
  40d314:	je     0x40d336
  40d316:	(bad)  
  40d317:	fs fs jb 0x40d380
  40d31b:	jae    0x40d390
  40d31d:	and    BYTE PTR [rip+0x70],ah        # 0x40d393
  40d323:	add    BYTE PTR [rax],al
  40d325:	add    BYTE PTR [rax],al
  40d327:	add    BYTE PTR [rax],ah
  40d329:	and    BYTE PTR [rsi+0x69],dl
  40d32c:	jb     0x40d3a2
  40d32e:	jne    0x40d391
  40d330:	ins    BYTE PTR es:[rdi],dx
  40d331:	push   rax
  40d332:	jb     0x40d3a3
  40d334:	je     0x40d39b
  40d336:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40d33a:	(bad)  
  40d33b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  40d343:	push   0x646f6320
  40d348:	and    BYTE PTR gs:[rax],dh
  40d34b:	js     0x40d372
  40d34d:	js     0x40d34f
  40d34f:	add    BYTE PTR [rax],ah
  40d351:	and    BYTE PTR [rbp+0x6e],dl
  40d354:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40d358:	outs   dx,BYTE PTR ds:[rsi]
  40d359:	and    BYTE PTR [rax+0x73],dh
  40d35c:	gs jne 0x40d3c3
  40d35f:	outs   dx,DWORD PTR ds:[rsi]
  40d360:	and    BYTE PTR [rdx+0x65],dh
  40d363:	ins    BYTE PTR es:[rdi],dx
  40d364:	outs   dx,DWORD PTR ds:[rsi]
  40d365:	movsxd esp,DWORD PTR [rcx+0x74]
  40d368:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40d36f:	je     0x40d3e0
  40d371:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40d374:	and    BYTE PTR [rsi+0x65],dh
  40d377:	jb     0x40d3ec
  40d379:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  40d380:	or     al,BYTE PTR [rax]
  40d382:	add    BYTE PTR [rax],al
  40d384:	add    BYTE PTR [rax],al
  40d386:	add    BYTE PTR [rax],al
  40d388:	and    BYTE PTR [rax],ah
  40d38a:	push   rbp
  40d38b:	outs   dx,BYTE PTR ds:[rsi]
  40d38c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40d390:	outs   dx,BYTE PTR ds:[rsi]
  40d391:	and    BYTE PTR [rax+0x73],dh
  40d394:	gs jne 0x40d3fb
  40d397:	outs   dx,DWORD PTR ds:[rsi]
  40d398:	and    BYTE PTR [rdx+0x65],dh
  40d39b:	ins    BYTE PTR es:[rdi],dx
  40d39c:	outs   dx,DWORD PTR ds:[rsi]
  40d39d:	movsxd esp,DWORD PTR [rcx+0x74]
  40d3a0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  40d3a7:	and    BYTE PTR [rbx+0x69],dh
  40d3aa:	jp     0x40d411
  40d3ac:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4b0216
	...
  40d3be:	add    BYTE PTR [rax],al
  40d3c0:	cs jo  0x40d427
  40d3c3:	(bad)  
  40d3c4:	je     0x40d427
	...
  40d3ce:	add    BYTE PTR [rax],al
  40d3d0:	cmp    al,0x0
  40d3d2:	jne    0x40d3d4
  40d3d4:	outs   dx,BYTE PTR ds:[rsi]
  40d3d5:	add    BYTE PTR [rbx+0x0],ch
  40d3d8:	outs   dx,BYTE PTR ds:[rsi]
  40d3d9:	add    BYTE PTR [rdi+0x0],ch
  40d3dc:	ja     0x40d3de
  40d3de:	outs   dx,BYTE PTR ds:[rsi]
  40d3df:	add    BYTE PTR [rsi],bh
  40d3e1:	add    BYTE PTR [rax],al
  40d3e3:	add    BYTE PTR [rdi],bh
  40d3e5:	add    BYTE PTR [rax],al
  40d3e7:	add    BYTE PTR [rcx+0x0],al
  40d3ea:	jae    0x40d3ec
  40d3ec:	jae    0x40d3ee
  40d3ee:	add    BYTE PTR gs:[rdx+0x0],dh
  40d3f2:	je     0x40d3f4
  40d3f4:	imul   eax,DWORD PTR [rax],0x6e006f
  40d3fa:	and    BYTE PTR [rax],al
  40d3fc:	data16 add BYTE PTR [rcx+0x0],ah
  40d400:	imul   eax,DWORD PTR [rax],0x65006c
  40d406:	add    BYTE PTR fs:[rcx],ah
  40d409:	add    BYTE PTR [rdx],cl
  40d40b:	add    BYTE PTR [rdx],cl
  40d40d:	add    BYTE PTR [rax+0x0],dl
  40d410:	jb     0x40d412
  40d412:	outs   dx,DWORD PTR ds:[rsi]
  40d413:	add    BYTE PTR [rdi+0x0],ah
  40d416:	jb     0x40d418
  40d418:	(bad)  
  40d419:	add    BYTE PTR [rbp+0x0],ch
  40d41c:	cmp    al,BYTE PTR [rax]
  40d41e:	and    BYTE PTR [rax],al
  40d420:	and    eax,0x73007700
  40d425:	add    BYTE PTR [rdx],cl
  40d427:	add    BYTE PTR [rsi+0x0],al
  40d42a:	imul   eax,DWORD PTR [rax],0x65006c
  40d430:	cmp    al,BYTE PTR [rax]
  40d432:	and    BYTE PTR [rax],al
  40d434:	and    eax,0x73007700
  40d439:	add    BYTE PTR [rax+rax*1],ch
  40d43c:	and    BYTE PTR [rax],al
  40d43e:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40d442:	outs   dx,BYTE PTR ds:[rsi]
  40d443:	add    BYTE PTR [rbp+0x0],ah
  40d446:	and    BYTE PTR [rax],al
  40d448:	and    eax,0xa007500
  40d44d:	add    BYTE PTR [rdx],cl
  40d44f:	add    BYTE PTR [rbp+0x0],al
  40d452:	js     0x40d454
  40d454:	jo     0x40d456
  40d456:	jb     0x40d458
  40d458:	add    BYTE PTR gs:[rbx+0x0],dh
  40d45c:	jae    0x40d45e
  40d45e:	imul   eax,DWORD PTR [rax],0x6e006f
  40d464:	cmp    al,BYTE PTR [rax]
  40d466:	and    BYTE PTR [rax],al
  40d468:	and    eax,0x73007700
  40d46d:	add    BYTE PTR [rax],al
  40d46f:	add    BYTE PTR [rip+0x73007700],ah        # 0x73414b75
  40d475:	add    BYTE PTR [rdx],cl
	...
  40d47f:	add    BYTE PTR [rbp+0x0],cl
  40d482:	imul   eax,DWORD PTR [rax],0x47006e
  40d488:	push   rdi
  40d489:	add    BYTE PTR [rax],ah
  40d48b:	add    BYTE PTR [rdx+0x0],dl
  40d48e:	jne    0x40d490
  40d490:	outs   dx,BYTE PTR ds:[rsi]
  40d491:	add    BYTE PTR [rax+rax*1+0x69],dh
  40d495:	add    BYTE PTR [rbp+0x0],ch
  40d498:	add    BYTE PTR gs:[rax],ah
  40d49b:	add    BYTE PTR [rcx+0x0],al
  40d49e:	jae    0x40d4a0
  40d4a0:	jae    0x40d4a2
  40d4a2:	add    BYTE PTR gs:[rdx+0x0],dh
  40d4a6:	je     0x40d4a8
  40d4a8:	imul   eax,DWORD PTR [rax],0x6e006f
  40d4ae:	add    BYTE PTR [rax],al
  40d4b0:	lock movabs ds:0x40,eax
  40d4ba:	add    BYTE PTR [rax],al
  40d4bc:	add    BYTE PTR [rax],al
  40d4be:	add    BYTE PTR [rax],al
  40d4c0:	add    BYTE PTR [rax+rax*2+0x0],ah
	...
  40d4cf:	add    al,dl
  40d4d1:	fwait
  40d4d2:	add    BYTE PTR [rax],al
	...
  40d4dd:	add    BYTE PTR [rax],al
  40d4df:	add    BYTE PTR [rax-0x26],dh
  40d4e2:	add    BYTE PTR [rax],al
	...
  40d4ed:	add    BYTE PTR [rax],al
  40d4ef:	add    BYTE PTR [rax-0x26],dh
  40d4f2:	add    BYTE PTR [rax],al
	...
  40d4fd:	add    BYTE PTR [rax],al
  40d4ff:	add    BYTE PTR [rax-0x2f],ah
  40d502:	add    BYTE PTR [rax],al
	...
  40d511:	add    BYTE PTR [rax+0x0],al
	...
  40d520:	pushf  
  40d521:	in     al,dx
  40d522:	add    BYTE PTR [r8],al
	...
  40d52d:	add    BYTE PTR [rax],al
  40d52f:	add    ah,al
  40d531:	in     al,dx
  40d532:	add    BYTE PTR [r8],al
	...
  40d53d:	add    BYTE PTR [rax],al
  40d53f:	add    ah,ah
  40d541:	in     al,dx
  40d542:	add    BYTE PTR [r8],al
	...
  40d54d:	add    BYTE PTR [rax],al
  40d54f:	add    ah,bh
  40d551:	in     al,dx
  40d552:	add    BYTE PTR [r8],al
	...
  40d55d:	add    BYTE PTR [rax],al
  40d55f:	add    al,al
  40d561:	int    0x41
	...
  40d56f:	add    BYTE PTR [rax],ch
  40d571:	rol    DWORD PTR [rcx+0x0],1
	...
  40d580:	and    cl,dl
  40d582:	add    BYTE PTR [r8],al
	...
  40d58d:	add    BYTE PTR [rax],al
  40d58f:	add    BYTE PTR [rax],dl
  40d591:	rol    DWORD PTR [rcx+0x0],1
	...
  40d5a0:	sbb    cl,dl
  40d5a2:	add    BYTE PTR [r8],al
	...
  40d5b1:	adc    BYTE PTR [rdx+0x0],al
	...
  40d5c0:	adc    BYTE PTR [rax],dl
  40d5c2:	rex.X add BYTE PTR [rax],al
	...
  40d5cd:	add    BYTE PTR [rax],al
  40d5cf:	add    BYTE PTR [rax],bl
  40d5d1:	adc    BYTE PTR [rdx+0x0],al
	...
  40d5e0:	xor    BYTE PTR [rax],dl
  40d5e2:	rex.X add BYTE PTR [rax],al
	...
  40d5ed:	add    BYTE PTR [rax],al
  40d5ef:	add    BYTE PTR [rax-0x39],dl
  40d5f2:	add    BYTE PTR [r8],al
	...
  40d5fd:	add    BYTE PTR [rax],al
  40d5ff:	add    BYTE PTR [rax+0x41cd],dl
	...
  40d60d:	add    BYTE PTR [rax],al
  40d60f:	add    BYTE PTR [rax+0x4063],al
	...
  40d61d:	add    BYTE PTR [rax],al
  40d61f:	add    al,dl
  40d621:	pop    rdx
  40d622:	add    BYTE PTR [rax],al
	...
  40d62d:	add    BYTE PTR [rax],al
  40d62f:	add    BYTE PTR [rax-0x33],al
  40d632:	add    BYTE PTR [r8],al
	...
  40d63d:	add    BYTE PTR [rax],al
  40d63f:	add    BYTE PTR [rax+0x406f],cl
	...
  40d64d:	add    BYTE PTR [rax],al
  40d64f:	add    BYTE PTR [rax-0x33],dh
  40d652:	add    BYTE PTR [r8],al
	...
  40d65d:	add    BYTE PTR [rax],al
  40d65f:	add    BYTE PTR [rax-0x39],ah
  40d662:	add    BYTE PTR [r8],al
	...
  40d66d:	add    BYTE PTR [rax],al
  40d66f:	add    BYTE PTR [rax-0x33],bl
  40d672:	add    BYTE PTR [r8],al
	...
  40d67d:	add    BYTE PTR [rax],al
  40d67f:	add    BYTE PTR [rbp+rcx*8+0x41],dl
	...
  40d68f:	add    BYTE PTR [rax-0x33],dl
  40d692:	add    BYTE PTR [r8],al
	...
  40d69d:	add    BYTE PTR [rax],al
  40d69f:	add    BYTE PTR [rax+0x4054],ah
	...
  40d6ad:	add    BYTE PTR [rax],al
  40d6af:	add    BYTE PTR [rdi+0x43],al
  40d6b2:	rex.XB cmp spl,BYTE PTR [r8]
  40d6b5:	sub    BYTE PTR [rdi+0x4e],al
  40d6b8:	push   rbp
  40d6b9:	sub    DWORD PTR [rax],esp
  40d6bb:	xor    al,0x2e
  40d6bd:	cmp    DWORD PTR [rsi],ebp
  40d6bf:	xor    al,0x0
	...
  40d6cd:	add    BYTE PTR [rax],al
  40d6cf:	add    BYTE PTR [rdi+0x43],al
  40d6d2:	rex.XB cmp spl,BYTE PTR [r8]
  40d6d5:	sub    BYTE PTR [rdi+0x4e],al
  40d6d8:	push   rbp
  40d6d9:	sub    DWORD PTR [rax],esp
  40d6db:	xor    al,0x2e
  40d6dd:	cmp    DWORD PTR [rsi],ebp
  40d6df:	xor    al,0x0
	...
  40d6ed:	add    BYTE PTR [rax],al
  40d6ef:	add    BYTE PTR [rdi+0x43],al
  40d6f2:	rex.XB cmp spl,BYTE PTR [r8]
  40d6f5:	sub    BYTE PTR [rdi+0x4e],al
  40d6f8:	push   rbp
  40d6f9:	sub    DWORD PTR [rax],esp
  40d6fb:	xor    al,0x2e
  40d6fd:	cmp    DWORD PTR [rsi],ebp
  40d6ff:	xor    al,0x0
	...
  40d70d:	add    BYTE PTR [rax],al
  40d70f:	add    BYTE PTR [rdi+0x43],al
  40d712:	rex.XB cmp spl,BYTE PTR [r8]
  40d715:	sub    BYTE PTR [rdi+0x4e],al
  40d718:	push   rbp
  40d719:	sub    DWORD PTR [rax],esp
  40d71b:	xor    al,0x2e
  40d71d:	cmp    DWORD PTR [rsi],ebp
  40d71f:	xor    al,0x0
	...
  40d72d:	add    BYTE PTR [rax],al
  40d72f:	add    BYTE PTR [rdi+0x43],al
  40d732:	rex.XB cmp spl,BYTE PTR [r8]
  40d735:	sub    BYTE PTR [rdi+0x4e],al
  40d738:	push   rbp
  40d739:	sub    DWORD PTR [rax],esp
  40d73b:	xor    al,0x2e
  40d73d:	cmp    DWORD PTR [rsi],ebp
  40d73f:	xor    al,0x0
	...
  40d74d:	add    BYTE PTR [rax],al
  40d74f:	add    BYTE PTR [rdi+0x43],al
  40d752:	rex.XB cmp spl,BYTE PTR [r8]
  40d755:	sub    BYTE PTR [rdi+0x4e],al
  40d758:	push   rbp
  40d759:	sub    DWORD PTR [rax],esp
  40d75b:	xor    al,0x2e
  40d75d:	cmp    DWORD PTR [rsi],ebp
  40d75f:	xor    al,0x0
	...
  40d76d:	add    BYTE PTR [rax],al
  40d76f:	add    BYTE PTR [rdi+0x43],al
  40d772:	rex.XB cmp spl,BYTE PTR [r8]
  40d775:	sub    BYTE PTR [rdi+0x4e],al
  40d778:	push   rbp
  40d779:	sub    DWORD PTR [rax],esp
  40d77b:	xor    al,0x2e
  40d77d:	cmp    DWORD PTR [rsi],ebp
  40d77f:	xor    al,0x0
	...
  40d78d:	add    BYTE PTR [rax],al
  40d78f:	add    BYTE PTR [rdi+0x43],al
  40d792:	rex.XB cmp spl,BYTE PTR [r8]
  40d795:	sub    BYTE PTR [rdi+0x4e],al
  40d798:	push   rbp
  40d799:	sub    DWORD PTR [rax],esp
  40d79b:	xor    al,0x2e
  40d79d:	cmp    DWORD PTR [rsi],ebp
  40d79f:	xor    al,0x0
	...
  40d7ad:	add    BYTE PTR [rax],al
  40d7af:	add    BYTE PTR [rdi+0x43],al
  40d7b2:	rex.XB cmp spl,BYTE PTR [r8]
  40d7b5:	sub    BYTE PTR [rdi+0x4e],al
  40d7b8:	push   rbp
  40d7b9:	sub    DWORD PTR [rax],esp
  40d7bb:	xor    al,0x2e
  40d7bd:	cmp    DWORD PTR [rsi],ebp
  40d7bf:	xor    al,0x0
	...
  40d7cd:	add    BYTE PTR [rax],al
  40d7cf:	add    BYTE PTR [rdi+0x43],al
  40d7d2:	rex.XB cmp spl,BYTE PTR [r8]
  40d7d5:	sub    BYTE PTR [rdi+0x4e],al
  40d7d8:	push   rbp
  40d7d9:	sub    DWORD PTR [rax],esp
  40d7db:	xor    al,0x2e
  40d7dd:	cmp    DWORD PTR [rsi],ebp
  40d7df:	xor    al,0x0
	...
  40d7ed:	add    BYTE PTR [rax],al
  40d7ef:	add    BYTE PTR [rdi+0x43],al
  40d7f2:	rex.XB cmp spl,BYTE PTR [r8]
  40d7f5:	sub    BYTE PTR [rdi+0x4e],al
  40d7f8:	push   rbp
  40d7f9:	sub    DWORD PTR [rax],esp
  40d7fb:	xor    al,0x2e
  40d7fd:	cmp    DWORD PTR [rsi],ebp
  40d7ff:	xor    al,0x0
	...
  40d80d:	add    BYTE PTR [rax],al
  40d80f:	add    BYTE PTR [rdi+0x43],al
  40d812:	rex.XB cmp spl,BYTE PTR [r8]
  40d815:	sub    BYTE PTR [rdi+0x4e],al
  40d818:	push   rbp
  40d819:	sub    DWORD PTR [rax],esp
  40d81b:	xor    al,0x2e
  40d81d:	cmp    DWORD PTR [rsi],ebp
  40d81f:	xor    al,0x0
	...
  40d82d:	add    BYTE PTR [rax],al
  40d82f:	add    BYTE PTR [rdi+0x43],al
  40d832:	rex.XB cmp spl,BYTE PTR [r8]
  40d835:	sub    BYTE PTR [rdi+0x4e],al
  40d838:	push   rbp
  40d839:	sub    DWORD PTR [rax],esp
  40d83b:	xor    al,0x2e
  40d83d:	cmp    DWORD PTR [rsi],ebp
  40d83f:	xor    al,0x0
	...
  40d84d:	add    BYTE PTR [rax],al
  40d84f:	add    BYTE PTR [rdi+0x43],al
  40d852:	rex.XB cmp spl,BYTE PTR [r8]
  40d855:	sub    BYTE PTR [rdi+0x4e],al
  40d858:	push   rbp
  40d859:	sub    DWORD PTR [rax],esp
  40d85b:	xor    al,0x2e
  40d85d:	cmp    DWORD PTR [rsi],ebp
  40d85f:	xor    al,0x0
	...
  40d86d:	add    BYTE PTR [rax],al
  40d86f:	add    BYTE PTR [rdi+0x43],al
  40d872:	rex.XB cmp spl,BYTE PTR [r8]
  40d875:	sub    BYTE PTR [rdi+0x4e],al
  40d878:	push   rbp
  40d879:	sub    DWORD PTR [rax],esp
  40d87b:	xor    al,0x2e
  40d87d:	cmp    DWORD PTR [rsi],ebp
  40d87f:	xor    al,0x0
	...
  40d88d:	add    BYTE PTR [rax],al
  40d88f:	add    BYTE PTR [rdi+0x43],al
  40d892:	rex.XB cmp spl,BYTE PTR [r8]
  40d895:	sub    BYTE PTR [rdi+0x4e],al
  40d898:	push   rbp
  40d899:	sub    DWORD PTR [rax],esp
  40d89b:	xor    al,0x2e
  40d89d:	cmp    DWORD PTR [rsi],ebp
  40d89f:	xor    al,0x0
	...
  40d8ad:	add    BYTE PTR [rax],al
  40d8af:	add    BYTE PTR [rdi+0x43],al
  40d8b2:	rex.XB cmp spl,BYTE PTR [r8]
  40d8b5:	sub    BYTE PTR [rdi+0x4e],al
  40d8b8:	push   rbp
  40d8b9:	sub    DWORD PTR [rax],esp
  40d8bb:	xor    al,0x2e
  40d8bd:	cmp    DWORD PTR [rsi],ebp
  40d8bf:	xor    al,0x0
	...
  40d8cd:	add    BYTE PTR [rax],al
  40d8cf:	add    BYTE PTR [rdi+0x43],al
  40d8d2:	rex.XB cmp spl,BYTE PTR [r8]
  40d8d5:	sub    BYTE PTR [rdi+0x4e],al
  40d8d8:	push   rbp
  40d8d9:	sub    DWORD PTR [rax],esp
  40d8db:	xor    al,0x2e
  40d8dd:	cmp    DWORD PTR [rsi],ebp
  40d8df:	xor    al,0x0
	...
  40d8ed:	add    BYTE PTR [rax],al
  40d8ef:	add    BYTE PTR [rdi+0x43],al
  40d8f2:	rex.XB cmp spl,BYTE PTR [r8]
  40d8f5:	sub    BYTE PTR [rdi+0x4e],al
  40d8f8:	push   rbp
  40d8f9:	sub    DWORD PTR [rax],esp
  40d8fb:	xor    al,0x2e
  40d8fd:	cmp    DWORD PTR [rsi],ebp
  40d8ff:	xor    al,0x0
	...
  40d90d:	add    BYTE PTR [rax],al
  40d90f:	add    BYTE PTR [rdi+0x43],al
  40d912:	rex.XB cmp spl,BYTE PTR [r8]
  40d915:	sub    BYTE PTR [rdi+0x4e],al
  40d918:	push   rbp
  40d919:	sub    DWORD PTR [rax],esp
  40d91b:	xor    al,0x2e
  40d91d:	cmp    DWORD PTR [rsi],ebp
  40d91f:	xor    al,0x0
	...
  40d92d:	add    BYTE PTR [rax],al
  40d92f:	add    BYTE PTR [rdi+0x43],al
  40d932:	rex.XB cmp spl,BYTE PTR [r8]
  40d935:	sub    BYTE PTR [rdi+0x4e],al
  40d938:	push   rbp
  40d939:	sub    DWORD PTR [rax],esp
  40d93b:	xor    al,0x2e
  40d93d:	cmp    DWORD PTR [rsi],ebp
  40d93f:	xor    al,0x0
	...
  40d94d:	add    BYTE PTR [rax],al
  40d94f:	add    BYTE PTR [rdi+0x43],al
  40d952:	rex.XB cmp spl,BYTE PTR [r8]
  40d955:	sub    BYTE PTR [rdi+0x4e],al
  40d958:	push   rbp
  40d959:	sub    DWORD PTR [rax],esp
  40d95b:	xor    al,0x2e
  40d95d:	cmp    DWORD PTR [rsi],ebp
  40d95f:	xor    al,0x0
	...
  40d96d:	add    BYTE PTR [rax],al
  40d96f:	add    BYTE PTR [rdi+0x43],al
  40d972:	rex.XB cmp spl,BYTE PTR [r8]
  40d975:	sub    BYTE PTR [rdi+0x4e],al
  40d978:	push   rbp
  40d979:	sub    DWORD PTR [rax],esp
  40d97b:	xor    al,0x2e
  40d97d:	cmp    DWORD PTR [rsi],ebp
  40d97f:	xor    al,0x0
	...
  40d98d:	add    BYTE PTR [rax],al
  40d98f:	add    BYTE PTR [rdi+0x43],al
  40d992:	rex.XB cmp spl,BYTE PTR [r8]
  40d995:	sub    BYTE PTR [rdi+0x4e],al
  40d998:	push   rbp
  40d999:	sub    DWORD PTR [rax],esp
  40d99b:	xor    al,0x2e
  40d99d:	cmp    DWORD PTR [rsi],ebp
  40d99f:	xor    al,0x0
	...
  40d9ad:	add    BYTE PTR [rax],al
  40d9af:	add    BYTE PTR [rdi+0x43],al
  40d9b2:	rex.XB cmp spl,BYTE PTR [r8]
  40d9b5:	sub    BYTE PTR [rdi+0x4e],al
  40d9b8:	push   rbp
  40d9b9:	sub    DWORD PTR [rax],esp
  40d9bb:	xor    al,0x2e
  40d9bd:	cmp    DWORD PTR [rsi],ebp
  40d9bf:	xor    al,0x0
	...
  40d9cd:	add    BYTE PTR [rax],al
  40d9cf:	add    BYTE PTR [rdi+0x43],al
  40d9d2:	rex.XB cmp spl,BYTE PTR [r8]
  40d9d5:	sub    BYTE PTR [rdi+0x4e],al
  40d9d8:	push   rbp
  40d9d9:	sub    DWORD PTR [rax],esp
  40d9db:	xor    al,0x2e
  40d9dd:	cmp    DWORD PTR [rsi],ebp
  40d9df:	xor    al,0x0
	...
  40d9ed:	add    BYTE PTR [rax],al
  40d9ef:	add    BYTE PTR [rdi+0x43],al
  40d9f2:	rex.XB cmp spl,BYTE PTR [r8]
  40d9f5:	sub    BYTE PTR [rdi+0x4e],al
  40d9f8:	push   rbp
  40d9f9:	sub    DWORD PTR [rax],esp
  40d9fb:	xor    al,0x2e
  40d9fd:	cmp    DWORD PTR [rsi],ebp
  40d9ff:	xor    al,0x0
	...
  40da0d:	add    BYTE PTR [rax],al
  40da0f:	add    BYTE PTR [rdi+0x43],al
  40da12:	rex.XB cmp spl,BYTE PTR [r8]
  40da15:	sub    BYTE PTR [rdi+0x4e],al
  40da18:	push   rbp
  40da19:	sub    DWORD PTR [rax],esp
  40da1b:	xor    al,0x2e
  40da1d:	cmp    DWORD PTR [rsi],ebp
  40da1f:	xor    al,0x0
	...
  40da2d:	add    BYTE PTR [rax],al
  40da2f:	add    BYTE PTR [rdi+0x43],al
  40da32:	rex.XB cmp spl,BYTE PTR [r8]
  40da35:	sub    BYTE PTR [rdi+0x4e],al
  40da38:	push   rbp
  40da39:	sub    DWORD PTR [rax],esp
  40da3b:	xor    al,0x2e
  40da3d:	cmp    DWORD PTR [rsi],ebp
  40da3f:	xor    al,0x0
	...
  40da4d:	add    BYTE PTR [rax],al
  40da4f:	add    BYTE PTR [rdi+0x43],al
  40da52:	rex.XB cmp spl,BYTE PTR [r8]
  40da55:	sub    BYTE PTR [rdi+0x4e],al
  40da58:	push   rbp
  40da59:	sub    DWORD PTR [rax],esp
  40da5b:	xor    al,0x2e
  40da5d:	cmp    DWORD PTR [rsi],ebp
  40da5f:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040e000 <.pdata>:
  40e000:	add    BYTE PTR [rax],dl
  40e002:	add    BYTE PTR [rax],al
  40e004:	add    DWORD PTR [rax],edx
  40e006:	add    BYTE PTR [rax],al
  40e008:	add    al,dh
  40e00a:	add    BYTE PTR [rax],al
  40e00c:	adc    BYTE PTR [rax],dl
  40e00e:	add    BYTE PTR [rax],al
  40e010:	push   rcx
  40e011:	adc    DWORD PTR [rax],eax
  40e013:	add    BYTE PTR [rax+rsi*8],al
  40e016:	add    BYTE PTR [rax],al
  40e018:	(bad)  
  40e019:	adc    DWORD PTR [rax],eax
  40e01b:	add    BYTE PTR [rsi+0xc000011],ch
  40e021:	lock add BYTE PTR [rax],al
  40e024:	mov    al,0x11
  40e026:	add    BYTE PTR [rax],al
  40e028:	(bad)  
  40e029:	adc    al,0x0
  40e02b:	add    BYTE PTR [rax+rsi*8],dl
  40e02e:	add    BYTE PTR [rax],al
  40e030:	rcl    BYTE PTR [rax+rax*1],1
  40e033:	add    dl,dh
  40e035:	adc    al,0x0
  40e037:	add    BYTE PTR [rax],ch
  40e039:	lock add BYTE PTR [rax],al
  40e03c:	add    BYTE PTR [rip+0x15220000],dl        # 0x1562e042
  40e042:	add    BYTE PTR [rax],al
  40e044:	rex.W
  40e045:	lock add BYTE PTR [rax],al
  40e048:	xor    BYTE PTR [rip+0x15b00000],dl        # 0x15f0e04e
  40e04e:	add    BYTE PTR [rax],al
  40e050:	push   0xffffffffb00000f0
  40e055:	adc    eax,0x163f0000
  40e05a:	add    BYTE PTR [rax],al
  40e05c:	je     0x40e04e
  40e05e:	add    BYTE PTR [rax],al
  40e060:	rex (bad) 
  40e062:	add    BYTE PTR [rax],al
  40e064:	je     0x40e07c
  40e066:	add    BYTE PTR [rax],al
  40e068:	xor    al,0x0
  40e06b:	add    BYTE PTR [rax+0x16],al
  40e071:	(bad)  
  40e072:	add    BYTE PTR [rax],al
  40e074:	mov    al,dh
  40e076:	add    BYTE PTR [rax],al
  40e078:	add    BYTE PTR [rdi],dl
  40e07a:	add    BYTE PTR [rax],al
  40e07c:	adc    BYTE PTR [rdi],0x0
  40e07f:	add    BYTE PTR [rax+rsi*8+0x17800000],dl
  40e086:	add    BYTE PTR [rax],al
  40e088:	add    BYTE PTR [rax],bl
  40e08a:	add    BYTE PTR [rax],al
  40e08c:	movabs al,ds:0xdc000018000000f0
  40e095:	sbb    al,BYTE PTR [rax]
  40e097:	add    BYTE PTR [rax+rsi*8+0x1ae00000],ch
  40e09e:	add    BYTE PTR [rax],al
  40e0a0:	rex.WRX sbb r8,QWORD PTR [rax]
  40e0a3:	add    ah,al
  40e0a5:	lock add BYTE PTR [rax],al
  40e0a8:	push   rax
  40e0a9:	sbb    eax,DWORD PTR [rax]
  40e0ab:	add    BYTE PTR [rbp-0x33ffffe5],dl
  40e0b1:	lock add BYTE PTR [rax],al
  40e0b4:	movabs al,ds:0xd800001be100001b
  40e0bd:	lock add BYTE PTR [rax],al
  40e0c0:	lock sbb eax,DWORD PTR [rax]
  40e0c3:	add    ch,dh
  40e0c5:	sbb    eax,DWORD PTR [rax]
  40e0c7:	add    ah,ah
  40e0c9:	lock add BYTE PTR [rax],al
  40e0cc:	add    BYTE PTR [rax+rax*1],bl
  40e0cf:	add    BYTE PTR [rcx+0x1c],al
  40e0d2:	add    BYTE PTR [rax],al
  40e0d4:	call   0x5040e1c9
  40e0d9:	sbb    al,0x0
  40e0db:	add    dh,ch
  40e0dd:	sbb    al,0x0
  40e0df:	add    ah,dh
  40e0e1:	lock add BYTE PTR [rax],al
  40e0e4:	lock sbb al,0x0
  40e0e7:	add    BYTE PTR [rdx],bl
  40e0e9:	and    BYTE PTR [rax],al
  40e0eb:	add    BYTE PTR [rcx+rsi*8],al
  40e0ee:	add    BYTE PTR [rax],al
  40e0f0:	and    BYTE PTR [rax],ah
  40e0f2:	add    BYTE PTR [rax],al
  40e0f4:	cmp    al,0x20
  40e0f6:	add    BYTE PTR [rax],al
  40e0f8:	sbb    cl,dh
  40e0fa:	add    BYTE PTR [rax],al
  40e0fc:	and    BYTE PTR [rax],al
  40e0ff:	add    BYTE PTR [rsi+0x20],ah
  40e102:	add    BYTE PTR [rax],al
  40e104:	and    cl,dh
  40e106:	add    BYTE PTR [rax],al
  40e108:	jo     0x40e12a
  40e10a:	add    BYTE PTR [rax],al
  40e10c:	lea    esp,[rax]
  40e10e:	add    BYTE PTR [rax],al
  40e110:	sub    cl,dh
  40e112:	add    BYTE PTR [rax],al
  40e114:	nop
  40e115:	and    BYTE PTR [rax],al
  40e117:	add    cl,ah
  40e119:	and    BYTE PTR [rax],al
  40e11b:	add    BYTE PTR [rax],dh
  40e11d:	icebp  
  40e11e:	add    BYTE PTR [rax],al
  40e120:	lock and BYTE PTR [rax],al
  40e123:	add    cl,cl
  40e125:	and    DWORD PTR [rax],eax
  40e127:	add    BYTE PTR [rax],bh
  40e129:	icebp  
  40e12a:	add    BYTE PTR [rax],al
  40e12c:	shl    BYTE PTR [rcx],1
  40e12e:	add    BYTE PTR [rax],al
  40e130:	xor    ah,BYTE PTR [rip+0xfffffffff1400000]        # 0xfffffffff180e136
  40e136:	add    BYTE PTR [rax],al
  40e138:	rex and eax,0x264b0000
  40e13e:	add    BYTE PTR [rax],al
  40e140:	pop    rax
  40e141:	icebp  
  40e142:	add    BYTE PTR [rax],al
  40e144:	push   rax
  40e145:	add    BYTE PTR es:[rax],al
  40e148:	pop    rbx
  40e149:	(bad)  
  40e14a:	add    BYTE PTR [rax],al
  40e14c:	push   0x600000f1
  40e151:	(bad)  
  40e152:	add    BYTE PTR [rax],al
  40e154:	imul   ebp,DWORD PTR [rax],0x0
  40e157:	add    BYTE PTR [rax-0xf],bh
  40e15a:	add    BYTE PTR [rax],al
  40e15c:	jo     0x40e186
  40e15e:	add    BYTE PTR [rax],al
  40e160:	jnp    0x40e18b
  40e162:	add    BYTE PTR [rax],al
  40e164:	mov    cl,dh
  40e166:	add    BYTE PTR [rax],al
  40e168:	sub    BYTE PTR [rcx],0x0
  40e16b:	add    BYTE PTR [rbp+0x41],dh
  40e16e:	add    BYTE PTR [rax],al
  40e170:	cwde   
  40e171:	icebp  
  40e172:	add    BYTE PTR [rax],al
  40e174:	add    BYTE PTR [rcx+0x0],0x0
  40e178:	(bad)  
  40e179:	add    BYTE PTR [rax],r8b
  40e17c:	mov    al,0xf1
  40e17e:	add    BYTE PTR [rax],al
  40e180:	rol    BYTE PTR [rax+rax*1+0x0],1
  40e184:	sbb    BYTE PTR [rbp+0x0],al
  40e187:	add    BYTE PTR [rax+0x200000f1],bh
  40e18d:	add    BYTE PTR [r8],r8b
  40e190:	pop    rdx
  40e191:	add    BYTE PTR [r8],r8b
  40e194:	(bad)  
  40e195:	icebp  
  40e196:	add    BYTE PTR [rax],al
  40e198:	(bad)  
  40e199:	add    BYTE PTR [r8],r8b
  40e19c:	movabs eax,ds:0xb00000f1cc000045
  40e1a5:	add    BYTE PTR [r8],r8b
  40e1a8:	(bad)  
  40e1a9:	rex.RX add BYTE PTR [rax],r8b
  40e1ac:	(bad)  
  40e1ad:	icebp  
  40e1ae:	add    BYTE PTR [rax],al
  40e1b0:	and    BYTE PTR [rsi+0x0],al
  40e1b3:	add    BYTE PTR [rcx-0x1fffffba],ah
  40e1b9:	icebp  
  40e1ba:	add    BYTE PTR [rax],al
  40e1bc:	mov    al,0x46
  40e1be:	add    BYTE PTR [rax],al
  40e1c0:	xor    DWORD PTR [rdi+0x0],eax
  40e1c3:	add    ah,ch
  40e1c5:	icebp  
  40e1c6:	add    BYTE PTR [rax],al
  40e1c8:	rex
  40e1c9:	rex.RXB add BYTE PTR [r8],r8b
  40e1cc:	add    DWORD PTR [rdi+0x0],0xf1f800
  40e1d3:	add    BYTE PTR [rax-0x2effffb9],dl
  40e1d9:	rex.RXB add BYTE PTR [r8],r8b
  40e1dc:	add    dl,dh
  40e1de:	add    BYTE PTR [rax],al
  40e1e0:	loopne 0x40e229
  40e1e2:	add    BYTE PTR [rax],al
  40e1e4:	sub    BYTE PTR [rax+0x0],cl
  40e1e7:	add    BYTE PTR [rax],cl
  40e1e9:	repnz add BYTE PTR [rax],al
  40e1ec:	xor    BYTE PTR [rax+0x0],cl
  40e1ef:	add    BYTE PTR [rbx+0x48],bh
  40e1f2:	add    BYTE PTR [rax],al
  40e1f4:	adc    al,0xf2
  40e1f6:	add    BYTE PTR [rax],al
  40e1f8:	or     BYTE PTR [rax+0x0],0x0
  40e1fc:	mov    edx,0x20000048
  40e201:	repnz add BYTE PTR [rax],al
  40e204:	ror    BYTE PTR [rax+0x0],0x0
  40e208:	xchg   DWORD PTR [rcx+0x0],ecx
  40e20b:	add    BYTE PTR [rax],ch
  40e20d:	repnz add BYTE PTR [rax],al
  40e210:	nop
  40e211:	rex.WB add BYTE PTR [r8],al
  40e214:	rex.RX
  40e215:	rex.WX add BYTE PTR [rax],al
  40e218:	cmp    dl,dh
  40e21a:	add    BYTE PTR [rax],al
  40e21c:	push   rax
  40e21d:	rex.WX add BYTE PTR [rax],al
  40e220:	xchg   ebp,eax
  40e221:	rex.WX add BYTE PTR [rax],al
  40e224:	rex.R
  40e225:	repnz add BYTE PTR [rax],al
  40e228:	movabs al,ds:0x4c00004ae500004a
  40e231:	repnz add BYTE PTR [rax],al
  40e234:	lock rex.WX add BYTE PTR [rax],al
  40e238:	xor    eax,0x5400004b
  40e23d:	repnz add BYTE PTR [rax],al
  40e240:	rex
  40e241:	rex.WXB add BYTE PTR [r8],al
  40e244:	jge    0x40e291
  40e246:	add    BYTE PTR [rax],al
  40e248:	pop    rsp
  40e249:	repnz add BYTE PTR [rax],al
  40e24c:	or     BYTE PTR [rbx+0x0],0x0
  40e250:	mov    ebp,0x6400004b
  40e255:	repnz add BYTE PTR [rax],al
  40e258:	ror    BYTE PTR [rbx+0x0],0x0
  40e25c:	std    
  40e25d:	rex.WXB add BYTE PTR [r8],al
  40e260:	ins    BYTE PTR es:[rdi],dx
  40e261:	repnz add BYTE PTR [rax],al
  40e264:	add    BYTE PTR [rax+rax*1+0x0],cl
  40e268:	(bad)  
  40e269:	rex.WR add BYTE PTR [rax],r8b
  40e26c:	je     0x40e260
  40e26e:	add    BYTE PTR [rax],al
  40e270:	ror    BYTE PTR [rax+rax*1+0x0],1
  40e274:	xchg   edi,eax
  40e275:	rex.WRB add BYTE PTR [r8],r8b
  40e278:	test   dl,dh
  40e27a:	add    BYTE PTR [rax],al
  40e27c:	movabs al,ds:0x940000501400004d
  40e285:	repnz add BYTE PTR [rax],al
  40e288:	and    BYTE PTR [rax+0x0],dl
  40e28b:	add    bh,dl
  40e28d:	push   rax
  40e28e:	add    BYTE PTR [rax],al
  40e290:	lods   al,BYTE PTR ds:[rsi]
  40e291:	repnz add BYTE PTR [rax],al
  40e294:	loopne 0x40e2e6
  40e296:	add    BYTE PTR [rax],al
  40e298:	xchg   edi,eax
  40e299:	push   rcx
  40e29a:	add    BYTE PTR [rax],al
  40e29c:	shl    dl,0x0
  40e29f:	add    BYTE PTR [rax-0x6ffffaf],ah
  40e2a5:	push   rcx
  40e2a6:	add    BYTE PTR [rax],al
  40e2a8:	int3   
  40e2a9:	repnz add BYTE PTR [rax],al
  40e2ac:	xor    BYTE PTR [rsi+0x0],dl
  40e2af:	add    bh,dl
  40e2b1:	push   rsi
  40e2b2:	add    BYTE PTR [rax],al
  40e2b4:	or     bl,dh
  40e2b6:	add    BYTE PTR [rax],al
  40e2b8:	loopne 0x40e310
  40e2ba:	add    BYTE PTR [rax],al
  40e2bc:	stc    
  40e2bd:	push   rsi
  40e2be:	add    BYTE PTR [rax],al
  40e2c0:	adc    bl,dh
  40e2c2:	add    BYTE PTR [rax],al
  40e2c4:	add    BYTE PTR [rdi+0x0],dl
  40e2c7:	add    BYTE PTR [rip+0x18000057],dh        # 0x1840e324
  40e2cd:	repz add BYTE PTR [rax],al
  40e2d0:	rex push rdi
  40e2d2:	add    BYTE PTR [rax],al
  40e2d4:	xchg   ebp,eax
  40e2d5:	push   rdi
  40e2d6:	add    BYTE PTR [rax],al
  40e2d8:	and    bl,dh
  40e2da:	add    BYTE PTR [rax],al
  40e2dc:	movabs al,ds:0x2c000057bc000057
  40e2e5:	repz add BYTE PTR [rax],al
  40e2e8:	rcl    BYTE PTR [rdi+0x0],0x0
  40e2ec:	retf   0x57
  40e2ef:	add    BYTE PTR [rax],dh
  40e2f1:	repz add BYTE PTR [rax],al
  40e2f4:	rcl    BYTE PTR [rdi+0x0],1
  40e2f7:	add    bl,dl
  40e2f9:	push   rdi
  40e2fa:	add    BYTE PTR [rax],al
  40e2fc:	xor    al,0xf3
  40e2fe:	add    BYTE PTR [rax],al
  40e300:	loopne 0x40e359
  40e302:	add    BYTE PTR [rax],al
  40e304:	mov    dh,0x58
  40e306:	add    BYTE PTR [rax],al
  40e308:	cmp    bl,dh
  40e30a:	add    BYTE PTR [rax],al
  40e30c:	rcr    BYTE PTR [rax+0x0],0x0
  40e310:	mov    ebx,0x48000059
  40e315:	repz add BYTE PTR [rax],al
  40e318:	rcr    BYTE PTR [rcx+0x0],0x0
  40e31c:	out    dx,eax
  40e31d:	pop    rcx
  40e31e:	add    BYTE PTR [rax],al
  40e320:	pop    rax
  40e321:	repz add BYTE PTR [rax],al
  40e324:	lock pop rcx
  40e326:	add    BYTE PTR [rax],al
  40e328:	pop    rcx
  40e329:	pop    rdx
  40e32a:	add    BYTE PTR [rax],al
  40e32c:	(bad)  
  40e32d:	repz add BYTE PTR [rax],al
  40e330:	(bad)  
  40e331:	pop    rdx
  40e332:	add    BYTE PTR [rax],al
  40e334:	movsxd ebx,DWORD PTR [rdx+0x0]
  40e337:	add    BYTE PTR [rbx+rsi*8+0x0],ch
  40e33b:	add    BYTE PTR [rax+0x5a],dh
  40e33e:	add    BYTE PTR [rax],al
  40e340:	mov    cl,0x5a
  40e342:	add    BYTE PTR [rax],al
  40e344:	jo     0x40e339
  40e346:	add    BYTE PTR [rax],al
  40e348:	rcr    BYTE PTR [rdx+0x0],0x0
  40e34c:	int3   
  40e34d:	pop    rdx
  40e34e:	add    BYTE PTR [rax],al
  40e350:	js     0x40e345
  40e352:	add    BYTE PTR [rax],al
  40e354:	rcr    BYTE PTR [rdx+0x0],1
  40e357:	add    ah,cl
  40e359:	pop    rbx
  40e35a:	add    BYTE PTR [rax],al
  40e35c:	jl     0x40e351
  40e35e:	add    BYTE PTR [rax],al
  40e360:	rcr    BYTE PTR [rbx+0x0],1
  40e363:	add    bl,dl
  40e365:	pop    rbx
  40e366:	add    BYTE PTR [rax],al
  40e368:	xchg   esp,eax
  40e369:	repz add BYTE PTR [rax],al
  40e36c:	loopne 0x40e3c9
  40e36e:	add    BYTE PTR [rax],al
  40e370:	in     al,0x5b
  40e372:	add    BYTE PTR [rax],al
  40e374:	cwde   
  40e375:	repz add BYTE PTR [rax],al
  40e378:	lock pop rbx
  40e37a:	add    BYTE PTR [rax],al
  40e37c:	hlt    
  40e37d:	pop    rbx
  40e37e:	add    BYTE PTR [rax],al
  40e380:	pushf  
  40e381:	repz add BYTE PTR [rax],al
  40e384:	add    BYTE PTR [rax+rax*1+0x0],bl
  40e388:	(bad)  
  40e389:	pop    rsp
  40e38a:	add    BYTE PTR [rax],al
  40e38c:	movabs al,ds:0xd200005c700000f3
  40e395:	pop    rbp
  40e396:	add    BYTE PTR [rax],al
  40e398:	lods   al,BYTE PTR ds:[rsi]
  40e399:	repz add BYTE PTR [rax],al
  40e39c:	loopne 0x40e3fb
  40e39e:	add    BYTE PTR [rax],al
  40e3a0:	fldenv [rax+0x0]
  40e3a3:	add    al,al
  40e3a5:	repz add BYTE PTR [rax],al
  40e3a8:	loopne 0x40e40a
  40e3aa:	add    BYTE PTR [rax],al
  40e3ac:	xchg   BYTE PTR [rdx+0x0],ah
  40e3af:	add    al,bl
  40e3b1:	repz add BYTE PTR [rax],al
  40e3b4:	nop
  40e3b5:	(bad)  
  40e3b6:	add    BYTE PTR [rax],al
  40e3b8:	jl     0x40e41d
  40e3ba:	add    BYTE PTR [rax],al
  40e3bc:	loopne 0x40e3b1
  40e3be:	add    BYTE PTR [rax],al
  40e3c0:	and    BYTE PTR [rbx+0x0],0x0
  40e3c4:	cmp    BYTE PTR [rbp+0x0],ah
  40e3c7:	add    al,dh
  40e3c9:	repz add BYTE PTR [rax],al
  40e3cc:	rex
  40e3cd:	add    BYTE PTR gs:[rax],al
  40e3d0:	lods   eax,DWORD PTR ds:[rsi]
  40e3d1:	add    BYTE PTR gs:[rax],al
  40e3d4:	clc    
  40e3d5:	repz add BYTE PTR [rax],al
  40e3d8:	mov    al,0x65
  40e3da:	add    BYTE PTR [rax],al
  40e3dc:	(bad)  
  40e3dd:	data16 add BYTE PTR [rax],al
  40e3e0:	or     ah,dh
  40e3e2:	add    BYTE PTR [rax],al
  40e3e4:	xor    BYTE PTR [rsi+0x0],ah
  40e3e7:	add    bh,cl
  40e3e9:	data16 add BYTE PTR [rax],al
  40e3ec:	adc    al,0xf4
  40e3ee:	add    BYTE PTR [rax],al
  40e3f0:	shl    BYTE PTR [rsi+0x0],1
  40e3f3:	add    BYTE PTR [rdx+0x1c000067],ch
  40e3f9:	hlt    
  40e3fa:	add    BYTE PTR [rax],al
  40e3fc:	mov    al,0x67
  40e3fe:	add    BYTE PTR [rax],al
  40e400:	iret   
  40e401:	add    BYTE PTR [eax],al
  40e404:	and    al,0xf4
  40e406:	add    BYTE PTR [rax],al
  40e408:	shl    BYTE PTR [rdi+0x0],1
  40e40b:	add    dl,ah
  40e40d:	add    BYTE PTR [eax],al
  40e410:	sub    ah,dh
  40e412:	add    BYTE PTR [rax],al
  40e414:	lock add BYTE PTR [eax],al
  40e418:	xor    eax,0x2c000068
  40e41d:	hlt    
  40e41e:	add    BYTE PTR [rax],al
  40e420:	rex push 0x68de0000
  40e426:	add    BYTE PTR [rax],al
  40e428:	xor    ah,dh
  40e42a:	add    BYTE PTR [rax],al
  40e42c:	loopne 0x40e496
  40e42e:	add    BYTE PTR [rax],al
  40e430:	and    ebp,DWORD PTR [rcx+0x0]
  40e433:	add    BYTE PTR [rsp+rsi*8],bh
  40e436:	add    BYTE PTR [rax],al
  40e438:	xor    BYTE PTR [rcx+0x0],ch
  40e43b:	add    BYTE PTR [rbx+0x69],ch
  40e43e:	add    BYTE PTR [rax],al
  40e440:	rex.W hlt 
  40e442:	add    BYTE PTR [rax],al
  40e444:	jo     0x40e4af
  40e446:	add    BYTE PTR [rax],al
  40e448:	(bad)  
  40e449:	imul   eax,DWORD PTR [rax],0xf45000
  40e44f:	add    BYTE PTR [rax],al
  40e451:	push   0x0
  40e453:	add    BYTE PTR [rax],bh
  40e455:	push   0x0
  40e457:	add    BYTE PTR [rsp+rsi*8+0x0],bl
  40e45b:	add    BYTE PTR [rax+0x6a],al
  40e45e:	add    BYTE PTR [rax],al
  40e460:	xchg   ebp,eax
  40e461:	push   0x0
  40e463:	add    BYTE PTR [rax-0xc],ch
  40e466:	add    BYTE PTR [rax],al
  40e468:	movabs al,ds:0x7400006b4e00006a
  40e471:	hlt    
  40e472:	add    BYTE PTR [rax],al
  40e474:	nop
  40e475:	imul   eax,DWORD PTR [rax],0x0
  40e478:	(bad)  
  40e479:	ins    BYTE PTR es:[rdi],dx
  40e47a:	add    BYTE PTR [rax],al
  40e47c:	test   ah,dh
  40e47e:	add    BYTE PTR [rax],al
  40e480:	xor    BYTE PTR [rax+rax*1+0x0],ch
  40e484:	jge    0x40e4f2
  40e486:	add    BYTE PTR [rax],al
  40e488:	nop
  40e489:	hlt    
  40e48a:	add    BYTE PTR [rax],al
  40e48c:	sub    BYTE PTR [rax+rax*1+0x0],0xcd
  40e491:	ins    BYTE PTR es:[rdi],dx
  40e492:	add    BYTE PTR [rax],al
  40e494:	cwde   
  40e495:	hlt    
  40e496:	add    BYTE PTR [rax],al
  40e498:	shr    BYTE PTR [rax+rax*1+0x0],1
  40e49c:	add    ebp,DWORD PTR [rsi+0x0]
  40e49f:	add    BYTE PTR [rax+0x100000f4],ah
  40e4a5:	outs   dx,BYTE PTR ds:[rsi]
  40e4a6:	add    BYTE PTR [rax],al
  40e4a8:	shr    BYTE PTR [rsi+0x0],1
  40e4ab:	add    BYTE PTR [rsp+rsi*8+0x6ed00000],dh
  40e4b2:	add    BYTE PTR [rax],al
  40e4b4:	(bad)  
  40e4b5:	outs   dx,BYTE PTR ds:[rsi]
  40e4b6:	add    BYTE PTR [rax],al
  40e4b8:	(bad)  
  40e4b9:	hlt    
  40e4ba:	add    BYTE PTR [rax],al
  40e4bc:	rex jo 0x40e4bf
  40e4bf:	add    BYTE PTR [rax+0x70],cl
  40e4c2:	add    BYTE PTR [rax],al
  40e4c4:	enter  0xf4,0x0
  40e4c8:	push   rax
  40e4c9:	jo     0x40e4cb
  40e4cb:	add    BYTE PTR [rbx+0x70],bl
  40e4ce:	add    BYTE PTR [rax],al
  40e4d0:	int3   
  40e4d1:	hlt    
  40e4d2:	add    BYTE PTR [rax],al
  40e4d4:	rex jno 0x40e4d7
  40e4d7:	add    BYTE PTR [rcx],ch
  40e4d9:	jne    0x40e4db
  40e4db:	add    ah,dl
  40e4dd:	repnz add BYTE PTR [rax],al
  40e4e0:	sub    DWORD PTR [rbp+0x0],esi
  40e4e3:	add    BYTE PTR [rcx],dl
  40e4e5:	ja     0x40e4e7
  40e4e7:	add    al,ah
  40e4e9:	repnz add BYTE PTR [rax],al
  40e4ec:	and    BYTE PTR [rdi+0x0],dh
  40e4ef:	add    bh,cl
  40e4f1:	fwait
  40e4f2:	add    BYTE PTR [rax],al
  40e4f4:	lock xacquire add BYTE PTR [rax],al

Disassembly of section .xdata:

000000000040f000 <.xdata>:
  40f000:	add    DWORD PTR [rax],eax
  40f002:	add    BYTE PTR [rax],al
  40f004:	add    DWORD PTR [rcx+rax*1],eax
  40f007:	add    BYTE PTR [rdx+rax*2],al
  40f00a:	add    BYTE PTR [rax],al
  40f00c:	add    DWORD PTR [rcx+rax*1],eax
  40f00f:	add    BYTE PTR [rdx+riz*2],al
  40f012:	add    BYTE PTR [rax],al
  40f014:	add    DWORD PTR [rdi],ecx
  40f016:	or     BYTE PTR [rax],al
  40f018:	lgdt   [rbx]
  40f01b:	add    BYTE PTR [rax],cl
  40f01d:	xor    BYTE PTR [rdi],al
  40f01f:	(bad)  
  40f020:	(bad)  
  40f021:	jo     0x40f028
  40f023:	push   rax
  40f024:	add    al,0xc0
  40f026:	add    dl,al
  40f028:	or     DWORD PTR [rcx+rax*1],eax
  40f02b:	add    BYTE PTR [rdx+rax*2],al
  40f02e:	add    BYTE PTR [rax],al
  40f030:	cmp    BYTE PTR [rax+0x0],dh
  40f033:	add    BYTE PTR [rcx],al
  40f035:	add    BYTE PTR [rax],al
  40f037:	add    ah,dl
  40f039:	adc    al,0x0
  40f03b:	add    ah,ch
  40f03d:	adc    al,0x0
  40f03f:	add    BYTE PTR [rax-0x13ffff9d],al
  40f045:	adc    al,0x0
  40f047:	add    BYTE PTR [rcx],cl
  40f049:	add    al,0x1
  40f04b:	add    BYTE PTR [rdx+rax*2],al
  40f04e:	add    BYTE PTR [rax],al
  40f050:	cmp    BYTE PTR [rax+0x0],dh
  40f053:	add    BYTE PTR [rcx],al
  40f055:	add    BYTE PTR [rax],al
  40f057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40f05e:	add    BYTE PTR [rax],al
  40f060:	and    BYTE PTR [rbx+0x0],0x0
  40f064:	sbb    al,0x15
  40f066:	add    BYTE PTR [rax],al
  40f068:	add    DWORD PTR [rsi],eax
  40f06a:	add    eax,DWORD PTR [rax]
  40f06c:	(bad)  
  40f06d:	(bad)  
  40f06e:	add    ah,BYTE PTR [rax+0x1]
  40f071:	jo     0x40f073
  40f073:	add    BYTE PTR [rcx],al
  40f075:	(bad)  
  40f076:	add    al,0x0
  40f078:	(bad)  
  40f079:	xchg   edx,eax
  40f07a:	add    esp,DWORD PTR [rax+0x2]
  40f07d:	jo     0x40f080
  40f07f:	push   rax
  40f080:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f088
  40f086:	add    DWORD PTR [rax],esi
  40f088:	add    DWORD PTR [rdi],eax
  40f08a:	add    al,0x0
  40f08c:	(bad)  
  40f08d:	push   rdx
  40f08e:	add    esi,DWORD PTR [rax]
  40f090:	add    ah,BYTE PTR [rax+0x1]
  40f093:	jo     0x40f096
  40f095:	(bad)  
  40f096:	add    al,0x0
  40f098:	(bad)  
  40f099:	push   rdx
  40f09a:	add    esi,DWORD PTR [rax]
  40f09c:	add    ah,BYTE PTR [rax+0x1]
  40f09f:	jo     0x40f0a2
  40f0a1:	(bad)  
  40f0a2:	add    al,0x0
  40f0a4:	(bad)  
  40f0a5:	push   rdx
  40f0a6:	add    esi,DWORD PTR [rax]
  40f0a8:	add    ah,BYTE PTR [rax+0x1]
  40f0ab:	jo     0x40f0ae
  40f0ad:	adc    BYTE PTR [rcx],cl
  40f0af:	add    BYTE PTR [rax],dl
  40f0b1:	(bad)  
  40f0b2:	or     al,0x30
  40f0b4:	or     esp,DWORD PTR [rax+0xa]
  40f0b7:	jo     0x40f0c2
  40f0b9:	push   rax
  40f0ba:	or     al,al
  40f0bc:	(bad)  
  40f0bd:	rol    BYTE PTR [rax+riz*8],1
  40f0c0:	add    dh,al
  40f0c2:	add    BYTE PTR [rax],al
  40f0c4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f0cc
  40f0ca:	add    DWORD PTR [rax],esi
  40f0cc:	add    DWORD PTR [rsi],eax
  40f0ce:	add    eax,DWORD PTR [rax]
  40f0d0:	(bad)  
  40f0d1:	rex.X add sil,BYTE PTR [rax]
  40f0d4:	add    DWORD PTR [rax+0x0],esp
  40f0d7:	add    BYTE PTR [rcx],al
  40f0d9:	(bad)  
  40f0da:	add    eax,DWORD PTR [rax]
  40f0dc:	(bad)  
  40f0dd:	rex.X add sil,BYTE PTR [rax]
  40f0e0:	add    DWORD PTR [rax+0x0],esp
  40f0e3:	add    BYTE PTR [rcx],al
  40f0e5:	add    BYTE PTR [rax],al
  40f0e7:	add    BYTE PTR [rcx],al
  40f0e9:	(bad)  
  40f0ea:	add    eax,DWORD PTR [rax]
  40f0ec:	(bad)  
  40f0ed:	rex.X add sil,BYTE PTR [rax]
  40f0f0:	add    DWORD PTR [rax+0x0],esp
  40f0f3:	add    BYTE PTR [rcx],al
  40f0f5:	or     BYTE PTR [rip+0x4620800],al        # 0x4a2f8fb
  40f0fb:	xor    BYTE PTR [rbx],al
  40f0fd:	(bad)  
  40f0fe:	add    dh,BYTE PTR [rax+0x1]
  40f101:	push   rax
  40f102:	add    BYTE PTR [rax],al
  40f104:	add    DWORD PTR [rdi+rax*1],ecx
  40f107:	add    BYTE PTR [rdx+riz*2],cl
  40f10a:	or     BYTE PTR [rax],dh
  40f10c:	(bad)  
  40f10d:	(bad)  
  40f10e:	(bad)  
  40f10f:	jo     0x40f116
  40f111:	push   rax
  40f112:	add    al,0xc0
  40f114:	add    dl,al
  40f116:	add    BYTE PTR [rax],al
  40f118:	add    DWORD PTR [rcx+rax*1],eax
  40f11b:	add    BYTE PTR [rdx+rax*2],al
  40f11e:	add    BYTE PTR [rax],al
  40f120:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f128
  40f126:	add    DWORD PTR [rax],esi
  40f128:	add    DWORD PTR [rcx+rax*1],eax
  40f12b:	add    BYTE PTR [rdx+riz*2],al
  40f12e:	add    BYTE PTR [rax],al
  40f130:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f138
  40f136:	add    DWORD PTR [rax],esi
  40f138:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245f140
  40f13e:	add    DWORD PTR [rax],esi
  40f140:	add    DWORD PTR [rax],edx
  40f142:	or     DWORD PTR [rax],eax
  40f144:	adc    BYTE PTR [rdx+0xc],al
  40f147:	xor    BYTE PTR [rbx],cl
  40f149:	(bad)  
  40f14a:	or     dh,BYTE PTR [rax+0x9]
  40f14d:	push   rax
  40f14e:	or     al,al
  40f150:	(bad)  
  40f151:	rol    BYTE PTR [rax+riz*8],1
  40f154:	add    dh,al
  40f156:	add    BYTE PTR [rax],al
  40f158:	add    DWORD PTR [rax],ecx
  40f15a:	add    eax,0x4620800
  40f15f:	xor    BYTE PTR [rbx],al
  40f161:	(bad)  
  40f162:	add    dh,BYTE PTR [rax+0x1]
  40f165:	push   rax
  40f166:	add    BYTE PTR [rax],al
  40f168:	add    DWORD PTR [rax],ecx
  40f16a:	add    eax,0x4620800
  40f16f:	xor    BYTE PTR [rbx],al
  40f171:	(bad)  
  40f172:	add    dh,BYTE PTR [rax+0x1]
  40f175:	push   rax
  40f176:	add    BYTE PTR [rax],al
  40f178:	add    DWORD PTR [rax],ecx
  40f17a:	add    eax,0x4620800
  40f17f:	xor    BYTE PTR [rbx],al
  40f181:	(bad)  
  40f182:	add    dh,BYTE PTR [rax+0x1]
  40f185:	push   rax
  40f186:	add    BYTE PTR [rax],al
  40f188:	add    DWORD PTR [rax],ecx
  40f18a:	add    eax,0x4620800
  40f18f:	xor    BYTE PTR [rbx],al
  40f191:	(bad)  
  40f192:	add    dh,BYTE PTR [rax+0x1]
  40f195:	push   rax
  40f196:	add    BYTE PTR [rax],al
  40f198:	add    DWORD PTR [rdi],edx
  40f19a:	or     DWORD PTR [rax],eax
  40f19c:	(bad)  
  40f19d:	add    DWORD PTR [rdx],ecx
  40f19f:	add    cl,BYTE PTR [rdi]
  40f1a1:	xor    BYTE PTR [rsi],cl
  40f1a3:	(bad)  
  40f1a4:	or     eax,0xb500c70
  40f1a9:	rol    BYTE PTR [rax+rdx*8],0x2
  40f1ad:	loopne 0x40f1af
  40f1af:	add    BYTE PTR [rcx],al
  40f1b1:	add    al,0x1
  40f1b3:	add    BYTE PTR [rdx+rax*2],al
  40f1b6:	add    BYTE PTR [rax],al
  40f1b8:	add    DWORD PTR [rsi],eax
  40f1ba:	add    eax,DWORD PTR [rax]
  40f1bc:	(bad)  
  40f1bd:	rex.X add sil,BYTE PTR [rax]
  40f1c0:	add    DWORD PTR [rax+0x0],esp
  40f1c3:	add    BYTE PTR [rcx],al
  40f1c5:	add    eax,0x32050002
  40f1ca:	add    DWORD PTR [rax],esi
  40f1cc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f1d4
  40f1d2:	add    DWORD PTR [rax],esi
  40f1d4:	add    DWORD PTR [rsi],eax
  40f1d6:	add    eax,DWORD PTR [rax]
  40f1d8:	(bad)  
  40f1d9:	rex.X add sil,BYTE PTR [rax]
  40f1dc:	add    DWORD PTR [rax+0x0],esp
  40f1df:	add    BYTE PTR [rcx],al
  40f1e1:	(bad)  
  40f1e2:	add    eax,DWORD PTR [rax]
  40f1e4:	(bad)  
  40f1e5:	movabs ds:0x601000060013002,al
  40f1ee:	add    eax,DWORD PTR [rax]
  40f1f0:	(bad)  
  40f1f1:	movabs ds:0x501000060013002,al
  40f1fa:	add    al,BYTE PTR [rax]
  40f1fc:	add    eax,0x1300132
  40f201:	add    eax,0x32050002
  40f206:	add    DWORD PTR [rax],esi
  40f208:	add    DWORD PTR [rsi],eax
  40f20a:	add    eax,DWORD PTR [rax]
  40f20c:	(bad)  
  40f20d:	rex.X add sil,BYTE PTR [rax]
  40f210:	add    DWORD PTR [rax+0x0],esp
  40f213:	add    BYTE PTR [rcx],al
  40f215:	(bad)  
  40f216:	add    al,0x0
  40f218:	(bad)  
  40f219:	push   rdx
  40f21a:	add    esi,DWORD PTR [rax]
  40f21c:	add    ah,BYTE PTR [rax+0x1]
  40f21f:	jo     0x40f222
  40f221:	add    eax,0x32050002
  40f226:	add    DWORD PTR [rax],esi
  40f228:	add    DWORD PTR [rax],ecx
  40f22a:	add    eax,0x4420800
  40f22f:	xor    BYTE PTR [rbx],al
  40f231:	(bad)  
  40f232:	add    dh,BYTE PTR [rax+0x1]
  40f235:	push   rax
  40f236:	add    BYTE PTR [rax],al
  40f238:	add    DWORD PTR [rdi],eax
  40f23a:	add    al,0x0
  40f23c:	(bad)  
  40f23d:	xor    al,BYTE PTR [rbx]
  40f23f:	xor    BYTE PTR [rdx],al
  40f241:	(bad)  
  40f242:	add    DWORD PTR [rax+0x1],esi
  40f245:	add    al,0x1
  40f247:	add    BYTE PTR [rdx+rax*2],al
  40f24a:	add    BYTE PTR [rax],al
  40f24c:	add    DWORD PTR [rcx+rax*1],eax
  40f24f:	add    BYTE PTR [rdx+rax*2],al
  40f252:	add    BYTE PTR [rax],al
  40f254:	add    DWORD PTR [rcx+rax*1],eax
  40f257:	add    BYTE PTR [rdx+rax*2],al
  40f25a:	add    BYTE PTR [rax],al
  40f25c:	add    DWORD PTR [rcx+rax*1],eax
  40f25f:	add    BYTE PTR [rdx+rax*2],al
  40f262:	add    BYTE PTR [rax],al
  40f264:	add    DWORD PTR [rcx+rax*1],eax
  40f267:	add    BYTE PTR [rdx+rax*2],al
  40f26a:	add    BYTE PTR [rax],al
  40f26c:	add    DWORD PTR [rcx+rax*1],eax
  40f26f:	add    BYTE PTR [rdx+rax*2],al
  40f272:	add    BYTE PTR [rax],al
  40f274:	add    DWORD PTR [rax],ecx
  40f276:	add    eax,0x4420800
  40f27b:	xor    BYTE PTR [rbx],al
  40f27d:	(bad)  
  40f27e:	add    dh,BYTE PTR [rax+0x1]
  40f281:	push   rax
  40f282:	add    BYTE PTR [rax],al
  40f284:	add    DWORD PTR [rax],ecx
  40f286:	add    eax,0x4420800
  40f28b:	xor    BYTE PTR [rbx],al
  40f28d:	(bad)  
  40f28e:	add    dh,BYTE PTR [rax+0x1]
  40f291:	push   rax
  40f292:	add    BYTE PTR [rax],al
  40f294:	add    DWORD PTR [rax],edx
  40f296:	or     DWORD PTR [rax],eax
  40f298:	adc    BYTE PTR [rdx+0xc],ah
  40f29b:	xor    BYTE PTR [rbx],cl
  40f29d:	(bad)  
  40f29e:	or     dh,BYTE PTR [rax+0x9]
  40f2a1:	push   rax
  40f2a2:	or     al,al
  40f2a4:	(bad)  
  40f2a5:	rol    BYTE PTR [rax+riz*8],1
  40f2a8:	add    dh,al
  40f2aa:	add    BYTE PTR [rax],al
  40f2ac:	add    DWORD PTR [rdi+rax*1],ecx
  40f2af:	add    BYTE PTR [rdx+rax*4],cl
  40f2b2:	or     BYTE PTR [rax],dh
  40f2b4:	(bad)  
  40f2b5:	(bad)  
  40f2b6:	(bad)  
  40f2b7:	jo     0x40f2be
  40f2b9:	push   rax
  40f2ba:	add    al,0xc0
  40f2bc:	add    dl,al
  40f2be:	add    BYTE PTR [rax],al
  40f2c0:	add    DWORD PTR [rdi],eax
  40f2c2:	add    al,0x0
  40f2c4:	(bad)  
  40f2c5:	xor    al,BYTE PTR [rbx]
  40f2c7:	xor    BYTE PTR [rdx],al
  40f2c9:	(bad)  
  40f2ca:	add    DWORD PTR [rax+0x1],esi
  40f2cd:	add    eax,0x32050002
  40f2d2:	add    DWORD PTR [rax],esi
  40f2d4:	add    DWORD PTR [rdi],eax
  40f2d6:	add    al,0x0
  40f2d8:	(bad)  
  40f2d9:	xor    al,BYTE PTR [rbx]
  40f2db:	xor    BYTE PTR [rdx],al
  40f2dd:	(bad)  
  40f2de:	add    DWORD PTR [rax+0x1],esi
  40f2e1:	or     al,BYTE PTR [rsi]
  40f2e3:	add    BYTE PTR [rdx],cl
  40f2e5:	push   rdx
  40f2e6:	(bad)  
  40f2e7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f74d
  40f2ed:	push   rax
  40f2ee:	add    al,al
  40f2f0:	add    DWORD PTR [rax],edx
  40f2f2:	or     DWORD PTR [rax],eax
  40f2f4:	adc    BYTE PTR [rdx+0x600b300c],al
  40f2fa:	or     dh,BYTE PTR [rax+0x9]
  40f2fd:	push   rax
  40f2fe:	or     al,al
  40f300:	(bad)  
  40f301:	rol    BYTE PTR [rax+riz*8],1
  40f304:	add    dh,al
  40f306:	add    BYTE PTR [rax],al
  40f308:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245f310
  40f30e:	add    DWORD PTR [rax],esi
  40f310:	add    DWORD PTR [rcx+rax*1],eax
  40f313:	add    BYTE PTR [rdx+rax*2],al
  40f316:	add    BYTE PTR [rax],al
  40f318:	add    DWORD PTR [rcx+rax*1],eax
  40f31b:	add    BYTE PTR [rdx+rax*2],al
  40f31e:	add    BYTE PTR [rax],al
  40f320:	add    DWORD PTR [rsi],eax
  40f322:	add    eax,DWORD PTR [rax]
  40f324:	(bad)  
  40f325:	rex.X add sil,BYTE PTR [rax]
  40f328:	add    DWORD PTR [rax+0x0],esp
  40f32b:	add    BYTE PTR [rcx],al
  40f32d:	add    BYTE PTR [rax],al
  40f32f:	add    BYTE PTR [rcx],al
  40f331:	add    BYTE PTR [rax],al
  40f333:	add    BYTE PTR [rcx],al
  40f335:	add    BYTE PTR [rax],al
  40f337:	add    BYTE PTR [rcx],al
  40f339:	or     al,BYTE PTR [rsi]
  40f33b:	add    BYTE PTR [rdx],cl
  40f33d:	jb     0x40f345
  40f33f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f7a5
  40f345:	push   rax
  40f346:	add    al,al
  40f348:	add    DWORD PTR [rdx],ecx
  40f34a:	add    eax,0x6d20a05
  40f34f:	add    eax,DWORD PTR [rbx]
  40f351:	xor    BYTE PTR [rdx],al
  40f353:	(bad)  
  40f354:	add    DWORD PTR [rax+0x0],edx
  40f357:	add    BYTE PTR [rcx],al
  40f359:	add    al,0x1
  40f35b:	add    BYTE PTR [rdx+rax*2],al
  40f35e:	add    BYTE PTR [rax],al
  40f360:	add    DWORD PTR [rsi],eax
  40f362:	add    eax,DWORD PTR [rax]
  40f364:	(bad)  
  40f365:	rex.X add sil,BYTE PTR [rax]
  40f368:	add    DWORD PTR [rax+0x0],esp
  40f36b:	add    BYTE PTR [rcx],al
  40f36d:	add    BYTE PTR [rax],al
  40f36f:	add    BYTE PTR [rcx],al
  40f371:	add    al,0x1
  40f373:	add    BYTE PTR [rdx+riz*4],al
  40f376:	add    BYTE PTR [rax],al
  40f378:	add    DWORD PTR [rax],eax
  40f37a:	add    BYTE PTR [rax],al
  40f37c:	add    DWORD PTR [rsi],edx
  40f37e:	or     DWORD PTR [rax],eax
  40f380:	(bad)  
  40f381:	mov    BYTE PTR [rsi],al
  40f383:	add    BYTE PTR [rax],dl
  40f385:	js     0x40f38c
  40f387:	add    BYTE PTR [rbx],cl
  40f389:	push   0xffffffffe2060004
  40f38e:	add    dh,BYTE PTR [rax]
  40f390:	add    DWORD PTR [rax+0x0],esp
  40f393:	add    BYTE PTR [rcx],al
  40f395:	add    BYTE PTR [rax],al
  40f397:	add    BYTE PTR [rcx],al
  40f399:	add    BYTE PTR [rax],al
  40f39b:	add    BYTE PTR [rcx],al
  40f39d:	add    BYTE PTR [rax],al
  40f39f:	add    BYTE PTR [rcx],al
  40f3a1:	(bad)  
  40f3a2:	add    eax,DWORD PTR [rax]
  40f3a4:	(bad)  
  40f3a5:	(bad)  
  40f3a7:	xor    BYTE PTR [rcx],al
  40f3a9:	(bad)  
  40f3aa:	add    BYTE PTR [rax],al
  40f3ac:	add    DWORD PTR [rdi+rax*1],ecx
  40f3af:	add    BYTE PTR [rdx+riz*4],cl
  40f3b2:	or     BYTE PTR [rax],dh
  40f3b4:	(bad)  
  40f3b5:	(bad)  
  40f3b6:	(bad)  
  40f3b7:	jo     0x40f3be
  40f3b9:	push   rax
  40f3ba:	add    al,0xc0
  40f3bc:	add    dl,al
  40f3be:	add    BYTE PTR [rax],al
  40f3c0:	add    DWORD PTR [rcx],edx
  40f3c2:	or     DWORD PTR [rip+0x30db211],eax        # 0x34ea5d9
  40f3c8:	or     dh,BYTE PTR [rax]
  40f3ca:	or     DWORD PTR [rax+0x8],esp
  40f3cd:	jo     0x40f3d6
  40f3cf:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220f7a6
  40f3d6:	add    BYTE PTR [rax],al
  40f3d8:	add    DWORD PTR [rcx+rax*1],eax
  40f3db:	add    BYTE PTR [rdx+rax*2],al
  40f3de:	add    BYTE PTR [rax],al
  40f3e0:	add    DWORD PTR [rdx],ecx
  40f3e2:	(bad)  
  40f3e3:	add    BYTE PTR [rdx],cl
  40f3e5:	xor    al,BYTE PTR [rsi]
  40f3e7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f84d
  40f3ed:	push   rax
  40f3ee:	add    al,al
  40f3f0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f3f8
  40f3f6:	add    DWORD PTR [rax],esi
  40f3f8:	add    DWORD PTR [rax],ecx
  40f3fa:	add    eax,0x4420800
  40f3ff:	xor    BYTE PTR [rbx],al
  40f401:	(bad)  
  40f402:	add    dh,BYTE PTR [rax+0x1]
  40f405:	push   rax
  40f406:	add    BYTE PTR [rax],al
  40f408:	add    DWORD PTR [rdi],eax
  40f40a:	add    al,0x0
  40f40c:	(bad)  
  40f40d:	xor    al,BYTE PTR [rbx]
  40f40f:	xor    BYTE PTR [rdx],al
  40f411:	(bad)  
  40f412:	add    DWORD PTR [rax+0x1],esi
  40f415:	add    eax,0x32050002
  40f41a:	add    DWORD PTR [rax],esi
  40f41c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f424
  40f422:	add    DWORD PTR [rax],esi
  40f424:	add    DWORD PTR [rax],eax
  40f426:	add    BYTE PTR [rax],al
  40f428:	add    DWORD PTR [rax],eax
  40f42a:	add    BYTE PTR [rax],al
  40f42c:	add    DWORD PTR [rax],eax
  40f42e:	add    BYTE PTR [rax],al
  40f430:	add    DWORD PTR [rdi],eax
  40f432:	add    al,0x0
  40f434:	(bad)  
  40f435:	xor    al,BYTE PTR [rbx]
  40f437:	xor    BYTE PTR [rdx],al
  40f439:	(bad)  
  40f43a:	add    DWORD PTR [rax+0x1],esi
  40f43d:	(bad)  
  40f43e:	add    eax,DWORD PTR [rax]
  40f440:	(bad)  
  40f441:	rex.X add sil,BYTE PTR [rax]
  40f444:	add    DWORD PTR [rax+0x0],esp
  40f447:	add    BYTE PTR [rcx],al
  40f449:	add    eax,0x32050002
  40f44e:	add    DWORD PTR [rax],esi
  40f450:	add    DWORD PTR [rdi],eax
  40f452:	add    al,0x0
  40f454:	(bad)  
  40f455:	xor    al,BYTE PTR [rbx]
  40f457:	xor    BYTE PTR [rdx],al
  40f459:	(bad)  
  40f45a:	add    DWORD PTR [rax+0x1],esi
  40f45d:	(bad)  
  40f45e:	add    eax,DWORD PTR [rax]
  40f460:	(bad)  
  40f461:	rex.X add sil,BYTE PTR [rax]
  40f464:	add    DWORD PTR [rax+0x0],esp
  40f467:	add    BYTE PTR [rcx],al
  40f469:	(bad)  
  40f46a:	add    eax,DWORD PTR [rax]
  40f46c:	(bad)  
  40f46d:	rex.X add sil,BYTE PTR [rax]
  40f470:	add    DWORD PTR [rax+0x0],esp
  40f473:	add    BYTE PTR [rcx],al
  40f475:	or     BYTE PTR [rip+0x4420800],al        # 0x482fc7b
  40f47b:	xor    BYTE PTR [rbx],al
  40f47d:	(bad)  
  40f47e:	add    dh,BYTE PTR [rax+0x1]
  40f481:	push   rax
  40f482:	add    BYTE PTR [rax],al
  40f484:	add    DWORD PTR [rcx],ecx
  40f486:	add    al,0x0
  40f488:	or     DWORD PTR [rcx],eax
  40f48a:	sbb    eax,0x1300200
  40f48f:	(bad)  
  40f490:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245f498
  40f496:	add    DWORD PTR [rax],esi
  40f498:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245f4a0
  40f49e:	add    DWORD PTR [rax],esi
  40f4a0:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14df4ad
  40f4a6:	rex.WX add BYTE PTR [rsi],al
  40f4a9:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f90f
  40f4af:	push   rax
  40f4b0:	add    al,al
  40f4b2:	add    BYTE PTR [rax],al
  40f4b4:	add    DWORD PTR [rax],ecx
  40f4b6:	add    eax,0x4620800
  40f4bb:	xor    BYTE PTR [rbx],al
  40f4bd:	(bad)  
  40f4be:	add    dh,BYTE PTR [rax+0x1]
  40f4c1:	push   rax
  40f4c2:	add    BYTE PTR [rax],al
  40f4c4:	add    DWORD PTR [rax],eax
  40f4c6:	add    BYTE PTR [rax],al
  40f4c8:	add    DWORD PTR [rax],eax
  40f4ca:	add    BYTE PTR [rax],al
  40f4cc:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000410000 <.bss>:
	...

Disassembly of section .idata:

000000000041e000 <.idata>:
  41e000:	fs loopne 0x41e004
	...
  41e00b:	add    BYTE PTR [rcx+rax*1],cl
  41e00e:	add    al,BYTE PTR [rax]
  41e010:	cmp    al,0xe7
  41e012:	add    DWORD PTR [rax],eax
  41e014:	fsubr  st(4),st
  41e016:	add    DWORD PTR [rax],eax
	...
  41e020:	add    BYTE PTR [rcx],0x2
  41e023:	add    BYTE PTR [rbx+rbp*8-0x1a53ffff],dh
  41e02a:	add    DWORD PTR [rax],eax
	...
  41e034:	rex.WR add r8b,BYTE PTR [rdx]
  41e037:	add    BYTE PTR [rsp+rbp*8-0x18d3ffff],al
  41e03e:	add    DWORD PTR [rax],eax
	...
  41e048:	pop    rsp
  41e049:	add    al,BYTE PTR [rdx]
  41e04b:	add    BYTE PTR [rsi+rbp*8],al
  41e04e:	add    DWORD PTR [rax],eax
	...
  41e064:	adc    al,0xee
  41e066:	add    DWORD PTR [rax],eax
  41e068:	add    BYTE PTR [rax],al
  41e06a:	add    BYTE PTR [rax],al
  41e06c:	xor    dh,ch
  41e06e:	add    DWORD PTR [rax],eax
  41e070:	add    BYTE PTR [rax],al
  41e072:	add    BYTE PTR [rax],al
  41e074:	out    dx,al
  41e076:	add    DWORD PTR [rax],eax
  41e078:	add    BYTE PTR [rax],al
  41e07a:	add    BYTE PTR [rax],al
  41e07c:	pop    rax
  41e07d:	out    dx,al
  41e07e:	add    DWORD PTR [rax],eax
  41e080:	add    BYTE PTR [rax],al
  41e082:	add    BYTE PTR [rax],al
  41e084:	ins    BYTE PTR es:[rdi],dx
  41e085:	out    dx,al
  41e086:	add    DWORD PTR [rax],eax
  41e088:	add    BYTE PTR [rax],al
  41e08a:	add    BYTE PTR [rax],al
  41e08c:	jl     0x41e07c
  41e08e:	add    DWORD PTR [rax],eax
  41e090:	add    BYTE PTR [rax],al
  41e092:	add    BYTE PTR [rax],al
  41e094:	mov    esi,gs
  41e096:	add    DWORD PTR [rax],eax
  41e098:	add    BYTE PTR [rax],al
  41e09a:	add    BYTE PTR [rax],al
  41e09c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41e09d:	out    dx,al
  41e09e:	add    DWORD PTR [rax],eax
  41e0a0:	add    BYTE PTR [rax],al
  41e0a2:	add    BYTE PTR [rax],al
  41e0a4:	mov    al,0xee
  41e0a6:	add    DWORD PTR [rax],eax
  41e0a8:	add    BYTE PTR [rax],al
  41e0aa:	add    BYTE PTR [rax],al
  41e0ac:	enter  0x1ee,0x0
  41e0b0:	add    BYTE PTR [rax],al
  41e0b2:	add    BYTE PTR [rax],al
  41e0b4:	loopne 0x41e0a4
  41e0b6:	add    DWORD PTR [rax],eax
  41e0b8:	add    BYTE PTR [rax],al
  41e0ba:	add    BYTE PTR [rax],al
  41e0bc:	hlt    
  41e0bd:	out    dx,al
  41e0be:	add    DWORD PTR [rax],eax
  41e0c0:	add    BYTE PTR [rax],al
  41e0c2:	add    BYTE PTR [rax],al
  41e0c4:	or     bh,ch
  41e0c6:	add    DWORD PTR [rax],eax
  41e0c8:	add    BYTE PTR [rax],al
  41e0ca:	add    BYTE PTR [rax],al
  41e0cc:	sbb    bh,ch
  41e0ce:	add    DWORD PTR [rax],eax
  41e0d0:	add    BYTE PTR [rax],al
  41e0d2:	add    BYTE PTR [rax],al
  41e0d4:	xor    al,0xef
  41e0d6:	add    DWORD PTR [rax],eax
  41e0d8:	add    BYTE PTR [rax],al
  41e0da:	add    BYTE PTR [rax],al
  41e0dc:	rex.W out dx,eax
  41e0de:	add    DWORD PTR [rax],eax
  41e0e0:	add    BYTE PTR [rax],al
  41e0e2:	add    BYTE PTR [rax],al
  41e0e4:	pop    rax
  41e0e5:	out    dx,eax
  41e0e6:	add    DWORD PTR [rax],eax
  41e0e8:	add    BYTE PTR [rax],al
  41e0ea:	add    BYTE PTR [rax],al
  41e0ec:	ins    BYTE PTR es:[rdi],dx
  41e0ed:	out    dx,eax
  41e0ee:	add    DWORD PTR [rax],eax
  41e0f0:	add    BYTE PTR [rax],al
  41e0f2:	add    BYTE PTR [rax],al
  41e0f4:	mov    bh,ch
  41e0f6:	add    DWORD PTR [rax],eax
  41e0f8:	add    BYTE PTR [rax],al
  41e0fa:	add    BYTE PTR [rax],al
  41e0fc:	lods   al,BYTE PTR ds:[rsi]
  41e0fd:	out    dx,eax
  41e0fe:	add    DWORD PTR [rax],eax
  41e100:	add    BYTE PTR [rax],al
  41e102:	add    BYTE PTR [rax],al
  41e104:	(bad)  
  41e105:	out    dx,eax
  41e106:	add    DWORD PTR [rax],eax
  41e108:	add    BYTE PTR [rax],al
  41e10a:	add    BYTE PTR [rax],al
  41e10c:	fsub   st(7),st
  41e10e:	add    DWORD PTR [rax],eax
  41e110:	add    BYTE PTR [rax],al
  41e112:	add    BYTE PTR [rax],al
  41e114:	cld    
  41e115:	out    dx,eax
  41e116:	add    DWORD PTR [rax],eax
  41e118:	add    BYTE PTR [rax],al
  41e11a:	add    BYTE PTR [rax],al
  41e11c:	or     al,dh
  41e11e:	add    DWORD PTR [rax],eax
  41e120:	add    BYTE PTR [rax],al
  41e122:	add    BYTE PTR [rax],al
  41e124:	sbb    al,dh
  41e126:	add    DWORD PTR [rax],eax
  41e128:	add    BYTE PTR [rax],al
  41e12a:	add    BYTE PTR [rax],al
  41e12c:	sub    al,dh
  41e12e:	add    DWORD PTR [rax],eax
  41e130:	add    BYTE PTR [rax],al
  41e132:	add    BYTE PTR [rax],al
  41e134:	rex
  41e135:	lock add DWORD PTR [rax],eax
  41e138:	add    BYTE PTR [rax],al
  41e13a:	add    BYTE PTR [rax],al
  41e13c:	push   rsp
  41e13d:	lock add DWORD PTR [rax],eax
  41e140:	add    BYTE PTR [rax],al
  41e142:	add    BYTE PTR [rax],al
  41e144:	jo     0x41e136
  41e146:	add    DWORD PTR [rax],eax
  41e148:	add    BYTE PTR [rax],al
  41e14a:	add    BYTE PTR [rax],al
  41e14c:	test   al,dh
  41e14e:	add    DWORD PTR [rax],eax
  41e150:	add    BYTE PTR [rax],al
  41e152:	add    BYTE PTR [rax],al
  41e154:	cwde   
  41e155:	lock add DWORD PTR [rax],eax
  41e158:	add    BYTE PTR [rax],al
  41e15a:	add    BYTE PTR [rax],al
  41e15c:	lods   al,BYTE PTR ds:[rsi]
  41e15d:	lock add DWORD PTR [rax],eax
  41e160:	add    BYTE PTR [rax],al
  41e162:	add    BYTE PTR [rax],al
  41e164:	shl    al,0x1
  41e167:	add    BYTE PTR [rax],al
  41e169:	add    BYTE PTR [rax],al
  41e16b:	add    ah,dl
  41e16d:	lock add DWORD PTR [rax],eax
  41e170:	add    BYTE PTR [rax],al
  41e172:	add    BYTE PTR [rax],al
  41e174:	lock lock add DWORD PTR [rax],eax
  41e178:	add    BYTE PTR [rax],al
  41e17a:	add    BYTE PTR [rax],al
  41e17c:	adc    cl,dh
  41e17e:	add    DWORD PTR [rax],eax
  41e180:	add    BYTE PTR [rax],al
  41e182:	add    BYTE PTR [rax],al
  41e184:	and    al,0xf1
  41e186:	add    DWORD PTR [rax],eax
  41e188:	add    BYTE PTR [rax],al
  41e18a:	add    BYTE PTR [rax],al
  41e18c:	cmp    cl,dh
  41e18e:	add    DWORD PTR [rax],eax
  41e190:	add    BYTE PTR [rax],al
  41e192:	add    BYTE PTR [rax],al
  41e194:	pop    rax
  41e195:	icebp  
  41e196:	add    DWORD PTR [rax],eax
  41e198:	add    BYTE PTR [rax],al
  41e19a:	add    BYTE PTR [rax],al
  41e19c:	push   0x1f1
  41e1a1:	add    BYTE PTR [rax],al
  41e1a3:	add    BYTE PTR [rax+0x1f1],al
  41e1a9:	add    BYTE PTR [rax],al
  41e1ab:	add    BYTE PTR [rax+0x1f1],bl
  41e1b1:	add    BYTE PTR [rax],al
  41e1b3:	add    BYTE PTR [rcx+rsi*8+0x1],ch
  41e1ba:	add    BYTE PTR [rax],al
  41e1bc:	enter  0x1f1,0x0
  41e1c0:	add    BYTE PTR [rax],al
  41e1c2:	add    BYTE PTR [rax],al
  41e1c4:	fdiv   st,st(1)
  41e1c6:	add    DWORD PTR [rax],eax
  41e1c8:	add    BYTE PTR [rax],al
  41e1ca:	add    BYTE PTR [rax],al
  41e1cc:	call   0x41e3c2
  41e1d1:	add    BYTE PTR [rax],al
  41e1d3:	add    al,bh
  41e1d5:	icebp  
  41e1d6:	add    DWORD PTR [rax],eax
  41e1d8:	add    BYTE PTR [rax],al
  41e1da:	add    BYTE PTR [rax],al
  41e1dc:	or     dl,dh
  41e1de:	add    DWORD PTR [rax],eax
  41e1e0:	add    BYTE PTR [rax],al
  41e1e2:	add    BYTE PTR [rax],al
  41e1e4:	sbb    dl,dh
  41e1e6:	add    DWORD PTR [rax],eax
  41e1e8:	add    BYTE PTR [rax],al
  41e1ea:	add    BYTE PTR [rax],al
  41e1ec:	sub    dl,dh
  41e1ee:	add    DWORD PTR [rax],eax
  41e1f0:	add    BYTE PTR [rax],al
  41e1f2:	add    BYTE PTR [rax],al
  41e1f4:	cmp    al,0xf2
  41e1f6:	add    DWORD PTR [rax],eax
  41e1f8:	add    BYTE PTR [rax],al
  41e1fa:	add    BYTE PTR [rax],al
  41e1fc:	rex.W
  41e1fd:	repnz add DWORD PTR [rax],eax
  41e200:	add    BYTE PTR [rax],al
  41e202:	add    BYTE PTR [rax],al
  41e204:	pop    rax
  41e205:	repnz add DWORD PTR [rax],eax
  41e208:	add    BYTE PTR [rax],al
  41e20a:	add    BYTE PTR [rax],al
  41e20c:	jo     0x41e200
  41e20e:	add    DWORD PTR [rax],eax
  41e210:	add    BYTE PTR [rax],al
  41e212:	add    BYTE PTR [rax],al
  41e214:	test   dl,dh
  41e216:	add    DWORD PTR [rax],eax
  41e218:	add    BYTE PTR [rax],al
  41e21a:	add    BYTE PTR [rax],al
  41e21c:	cwde   
  41e21d:	repnz add DWORD PTR [rax],eax
  41e220:	add    BYTE PTR [rax],al
  41e222:	add    BYTE PTR [rax],al
  41e224:	mov    eax,0x1f2
  41e229:	add    BYTE PTR [rax],al
  41e22b:	add    ah,cl
  41e22d:	repnz add DWORD PTR [rax],eax
  41e230:	add    BYTE PTR [rax],al
  41e232:	add    BYTE PTR [rax],al
  41e234:	fdivr  st(2),st
  41e236:	add    DWORD PTR [rax],eax
  41e238:	add    BYTE PTR [rax],al
  41e23a:	add    BYTE PTR [rax],al
  41e23c:	in     al,dx
  41e23d:	repnz add DWORD PTR [rax],eax
  41e240:	add    BYTE PTR [rax],al
  41e242:	add    BYTE PTR [rax],al
  41e244:	add    bl,dh
  41e246:	add    DWORD PTR [rax],eax
  41e248:	add    BYTE PTR [rax],al
  41e24a:	add    BYTE PTR [rax],al
  41e24c:	adc    bl,dh
  41e24e:	add    DWORD PTR [rax],eax
  41e250:	add    BYTE PTR [rax],al
  41e252:	add    BYTE PTR [rax],al
  41e254:	cmp    bl,dh
  41e256:	add    DWORD PTR [rax],eax
  41e258:	add    BYTE PTR [rax],al
  41e25a:	add    BYTE PTR [rax],al
  41e25c:	rex.WR
  41e25d:	repz add DWORD PTR [rax],eax
  41e260:	add    BYTE PTR [rax],al
  41e262:	add    BYTE PTR [rax],al
  41e264:	push   0x1f3
  41e269:	add    BYTE PTR [rax],al
  41e26b:	add    BYTE PTR [rbx+rsi*8+0x1],bh
  41e26f:	add    BYTE PTR [rax],al
  41e271:	add    BYTE PTR [rax],al
  41e273:	add    BYTE PTR [rax+0x1f3],dl
  41e279:	add    BYTE PTR [rax],al
  41e27b:	add    BYTE PTR [rbx+rsi*8+0x1],ch
  41e282:	add    BYTE PTR [rax],al
  41e284:	mov    eax,0x1f3
  41e289:	add    BYTE PTR [rax],al
  41e28b:	add    al,cl
  41e28d:	repz add DWORD PTR [rax],eax
  41e290:	add    BYTE PTR [rax],al
  41e292:	add    BYTE PTR [rax],al
  41e294:	(bad)  
  41e295:	repz add DWORD PTR [rax],eax
  41e298:	add    BYTE PTR [rax],al
  41e29a:	add    BYTE PTR [rax],al
  41e29c:	call   0x41e494
  41e2a1:	add    BYTE PTR [rax],al
  41e2a3:	add    ah,bh
  41e2a5:	repz add DWORD PTR [rax],eax
  41e2a8:	add    BYTE PTR [rax],al
  41e2aa:	add    BYTE PTR [rax],al
  41e2ac:	sbb    ah,dh
  41e2ae:	add    DWORD PTR [rax],eax
  41e2b0:	add    BYTE PTR [rax],al
  41e2b2:	add    BYTE PTR [rax],al
  41e2b4:	xor    al,0xf4
  41e2b6:	add    DWORD PTR [rax],eax
  41e2b8:	add    BYTE PTR [rax],al
  41e2ba:	add    BYTE PTR [rax],al
  41e2bc:	rex.W hlt 
  41e2be:	add    DWORD PTR [rax],eax
  41e2c0:	add    BYTE PTR [rax],al
  41e2c2:	add    BYTE PTR [rax],al
  41e2c4:	fs hlt 
  41e2c6:	add    DWORD PTR [rax],eax
  41e2c8:	add    BYTE PTR [rax],al
  41e2ca:	add    BYTE PTR [rax],al
  41e2cc:	xor    ah,0x1
  41e2cf:	add    BYTE PTR [rax],al
  41e2d1:	add    BYTE PTR [rax],al
  41e2d3:	add    BYTE PTR [rsp+rsi*8+0x1],bl
  41e2da:	add    BYTE PTR [rax],al
  41e2dc:	mov    eax,0x1f4
  41e2e1:	add    BYTE PTR [rax],al
  41e2e3:	add    ah,cl
  41e2e5:	hlt    
  41e2e6:	add    DWORD PTR [rax],eax
  41e2e8:	add    BYTE PTR [rax],al
  41e2ea:	add    BYTE PTR [rax],al
  41e2ec:	call   0x41e4e5
  41e2f1:	add    BYTE PTR [rax],al
  41e2f3:	add    BYTE PTR [rsi*8+0x1],al
  41e2fa:	add    BYTE PTR [rax],al
  41e2fc:	sbb    al,0xf5
  41e2fe:	add    DWORD PTR [rax],eax
  41e300:	add    BYTE PTR [rax],al
  41e302:	add    BYTE PTR [rax],al
  41e304:	xor    al,0xf5
  41e306:	add    DWORD PTR [rax],eax
  41e308:	add    BYTE PTR [rax],al
  41e30a:	add    BYTE PTR [rax],al
  41e30c:	rex.R cmc 
  41e30e:	add    DWORD PTR [rax],eax
  41e310:	add    BYTE PTR [rax],al
  41e312:	add    BYTE PTR [rax],al
  41e314:	push   rsp
  41e315:	cmc    
  41e316:	add    DWORD PTR [rax],eax
  41e318:	add    BYTE PTR [rax],al
  41e31a:	add    BYTE PTR [rax],al
  41e31c:	fs cmc 
  41e31e:	add    DWORD PTR [rax],eax
  41e320:	add    BYTE PTR [rax],al
  41e322:	add    BYTE PTR [rax],al
  41e324:	je     0x41e31b
  41e326:	add    DWORD PTR [rax],eax
  41e328:	add    BYTE PTR [rax],al
  41e32a:	add    BYTE PTR [rax],al
  41e32c:	mov    ch,dh
  41e32e:	add    DWORD PTR [rax],eax
  41e330:	add    BYTE PTR [rax],al
  41e332:	add    BYTE PTR [rax],al
  41e334:	cwde   
  41e335:	cmc    
  41e336:	add    DWORD PTR [rax],eax
  41e338:	add    BYTE PTR [rax],al
  41e33a:	add    BYTE PTR [rax],al
  41e33c:	test   al,0xf5
  41e33e:	add    DWORD PTR [rax],eax
  41e340:	add    BYTE PTR [rax],al
  41e342:	add    BYTE PTR [rax],al
  41e344:	(bad)  
  41e345:	cmc    
  41e346:	add    DWORD PTR [rax],eax
  41e348:	add    BYTE PTR [rax],al
  41e34a:	add    BYTE PTR [rax],al
  41e34c:	loopne 0x41e343
  41e34e:	add    DWORD PTR [rax],eax
  41e350:	add    BYTE PTR [rax],al
  41e352:	add    BYTE PTR [rax],al
  41e354:	cld    
  41e355:	cmc    
  41e356:	add    DWORD PTR [rax],eax
  41e358:	add    BYTE PTR [rax],al
  41e35a:	add    BYTE PTR [rax],al
  41e35c:	adc    al,0xf6
  41e35e:	add    DWORD PTR [rax],eax
  41e360:	add    BYTE PTR [rax],al
  41e362:	add    BYTE PTR [rax],al
  41e364:	sub    dh,dh
  41e366:	add    DWORD PTR [rax],eax
  41e368:	add    BYTE PTR [rax],al
  41e36a:	add    BYTE PTR [rax],al
  41e36c:	rex.R test BYTE PTR [rcx],0x0
  41e370:	add    BYTE PTR [rax],al
  41e372:	add    BYTE PTR [rax],al
  41e374:	(bad)  
  41e375:	test   BYTE PTR [rcx],0x0
  41e378:	add    BYTE PTR [rax],al
  41e37a:	add    BYTE PTR [rax],al
  41e37c:	js     0x41e374
  41e37e:	add    DWORD PTR [rax],eax
  41e380:	add    BYTE PTR [rax],al
  41e382:	add    BYTE PTR [rax],al
  41e384:	cwde   
  41e385:	test   BYTE PTR [rcx],0x0
  41e388:	add    BYTE PTR [rax],al
  41e38a:	add    BYTE PTR [rax],al
  41e38c:	mov    ah,0xf6
  41e38e:	add    DWORD PTR [rax],eax
  41e390:	add    BYTE PTR [rax],al
  41e392:	add    BYTE PTR [rax],al
  41e394:	enter  0x1f6,0x0
  41e398:	add    BYTE PTR [rax],al
  41e39a:	add    BYTE PTR [rax],al
  41e39c:	call   0x41e597
  41e3a1:	add    BYTE PTR [rax],al
  41e3a3:	add    BYTE PTR [rax],cl
  41e3a5:	test   DWORD PTR [rcx],0x0
  41e3ab:	add    BYTE PTR [rax],ch
  41e3ad:	test   DWORD PTR [rcx],0x0
  41e3b3:	add    BYTE PTR [rdi+rsi*8+0x1],al
  41e3b7:	add    BYTE PTR [rax],al
  41e3b9:	add    BYTE PTR [rax],al
  41e3bb:	add    BYTE PTR [rdi+rsi*8+0x1],bl
  41e3bf:	add    BYTE PTR [rax],al
  41e3c1:	add    BYTE PTR [rax],al
  41e3c3:	add    BYTE PTR [rax-0x9],bh
  41e3c6:	add    DWORD PTR [rax],eax
  41e3c8:	add    BYTE PTR [rax],al
  41e3ca:	add    BYTE PTR [rax],al
  41e3cc:	nop
  41e3cd:	test   DWORD PTR [rcx],0x0
  41e3d3:	add    BYTE PTR [rax+0x1f7],dh
  41e3d9:	add    BYTE PTR [rax],al
  41e3db:	add    BYTE PTR [rdi+rsi*8+0x1],bh
  41e3e2:	add    BYTE PTR [rax],al
  41e3e4:	enter  0x1f7,0x0
  41e3e8:	add    BYTE PTR [rax],al
  41e3ea:	add    BYTE PTR [rax],al
  41e3ec:	fdiv   st,st(7)
  41e3ee:	add    DWORD PTR [rax],eax
  41e3f0:	add    BYTE PTR [rax],al
  41e3f2:	add    BYTE PTR [rax],al
  41e3f4:	call   0x41e5f0
  41e3f9:	add    BYTE PTR [rax],al
  41e3fb:	add    al,bh
  41e3fd:	test   DWORD PTR [rcx],0x0
  41e403:	add    BYTE PTR [rax],bl
  41e405:	clc    
  41e406:	add    DWORD PTR [rax],eax
  41e408:	add    BYTE PTR [rax],al
  41e40a:	add    BYTE PTR [rax],al
  41e40c:	cmp    al,bh
  41e40e:	add    DWORD PTR [rax],eax
  41e410:	add    BYTE PTR [rax],al
  41e412:	add    BYTE PTR [rax],al
  41e414:	push   rsp
  41e415:	clc    
  41e416:	add    DWORD PTR [rax],eax
  41e418:	add    BYTE PTR [rax],al
  41e41a:	add    BYTE PTR [rax],al
  41e41c:	js     0x41e416
  41e41e:	add    DWORD PTR [rax],eax
  41e420:	add    BYTE PTR [rax],al
  41e422:	add    BYTE PTR [rax],al
  41e424:	xchg   esp,eax
  41e425:	clc    
  41e426:	add    DWORD PTR [rax],eax
  41e428:	add    BYTE PTR [rax],al
  41e42a:	add    BYTE PTR [rax],al
  41e42c:	mov    al,0xf8
  41e42e:	add    DWORD PTR [rax],eax
  41e430:	add    BYTE PTR [rax],al
  41e432:	add    BYTE PTR [rax],al
  41e434:	enter  0x1f8,0x0
  41e438:	add    BYTE PTR [rax],al
  41e43a:	add    BYTE PTR [rax],al
  41e43c:	loopne 0x41e436
  41e43e:	add    DWORD PTR [rax],eax
  41e440:	add    BYTE PTR [rax],al
  41e442:	add    BYTE PTR [rax],al
  41e444:	add    cl,bh
  41e446:	add    DWORD PTR [rax],eax
  41e448:	add    BYTE PTR [rax],al
  41e44a:	add    BYTE PTR [rax],al
  41e44c:	sbb    cl,bh
  41e44e:	add    DWORD PTR [rax],eax
  41e450:	add    BYTE PTR [rax],al
  41e452:	add    BYTE PTR [rax],al
  41e454:	xor    cl,bh
  41e456:	add    DWORD PTR [rax],eax
  41e458:	add    BYTE PTR [rax],al
  41e45a:	add    BYTE PTR [rax],al
  41e45c:	rex.R stc 
  41e45e:	add    DWORD PTR [rax],eax
  41e460:	add    BYTE PTR [rax],al
  41e462:	add    BYTE PTR [rax],al
  41e464:	fs stc 
  41e466:	add    DWORD PTR [rax],eax
  41e468:	add    BYTE PTR [rax],al
  41e46a:	add    BYTE PTR [rax],al
  41e46c:	test   cl,bh
  41e46e:	add    DWORD PTR [rax],eax
  41e470:	add    BYTE PTR [rax],al
  41e472:	add    BYTE PTR [rax],al
  41e474:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41e475:	stc    
  41e476:	add    DWORD PTR [rax],eax
  41e478:	add    BYTE PTR [rax],al
  41e47a:	add    BYTE PTR [rax],al
  41e47c:	mov    esp,0x1f9
  41e481:	add    BYTE PTR [rax],al
  41e483:	add    ah,cl
  41e485:	stc    
  41e486:	add    DWORD PTR [rax],eax
  41e488:	add    BYTE PTR [rax],al
  41e48a:	add    BYTE PTR [rax],al
  41e48c:	call   0x41e68a
  41e491:	add    BYTE PTR [rax],al
  41e493:	add    BYTE PTR [rax],al
  41e495:	cli    
  41e496:	add    DWORD PTR [rax],eax
  41e498:	add    BYTE PTR [rax],al
  41e49a:	add    BYTE PTR [rax],al
  41e49c:	adc    al,0xfa
  41e49e:	add    DWORD PTR [rax],eax
  41e4a0:	add    BYTE PTR [rax],al
  41e4a2:	add    BYTE PTR [rax],al
  41e4a4:	xor    dl,bh
  41e4a6:	add    DWORD PTR [rax],eax
  41e4a8:	add    BYTE PTR [rax],al
  41e4aa:	add    BYTE PTR [rax],al
  41e4ac:	rex cli 
  41e4ae:	add    DWORD PTR [rax],eax
  41e4b0:	add    BYTE PTR [rax],al
  41e4b2:	add    BYTE PTR [rax],al
  41e4b4:	pop    rax
  41e4b5:	cli    
  41e4b6:	add    DWORD PTR [rax],eax
  41e4b8:	add    BYTE PTR [rax],al
  41e4ba:	add    BYTE PTR [rax],al
  41e4bc:	jo     0x41e4b8
  41e4be:	add    DWORD PTR [rax],eax
  41e4c0:	add    BYTE PTR [rax],al
  41e4c2:	add    BYTE PTR [rax],al
  41e4c4:	cmp    dl,0x1
  41e4c7:	add    BYTE PTR [rax],al
  41e4c9:	add    BYTE PTR [rax],al
  41e4cb:	add    BYTE PTR [rax+0x1fa],dl
	...
  41e4d9:	add    BYTE PTR [rax],al
  41e4db:	add    BYTE PTR [rax+0x1fa],ch
  41e4e1:	add    BYTE PTR [rax],al
  41e4e3:	add    al,al
  41e4e5:	cli    
  41e4e6:	add    DWORD PTR [rax],eax
  41e4e8:	add    BYTE PTR [rax],al
  41e4ea:	add    BYTE PTR [rax],al
  41e4ec:	fdivr  st,st(2)
  41e4ee:	add    DWORD PTR [rax],eax
  41e4f0:	add    BYTE PTR [rax],al
  41e4f2:	add    BYTE PTR [rax],al
  41e4f4:	in     al,dx
  41e4f5:	cli    
  41e4f6:	add    DWORD PTR [rax],eax
  41e4f8:	add    BYTE PTR [rax],al
  41e4fa:	add    BYTE PTR [rax],al
  41e4fc:	add    bh,bl
  41e4fe:	add    DWORD PTR [rax],eax
  41e500:	add    BYTE PTR [rax],al
  41e502:	add    BYTE PTR [rax],al
  41e504:	sbb    bl,bh
  41e506:	add    DWORD PTR [rax],eax
  41e508:	add    BYTE PTR [rax],al
  41e50a:	add    BYTE PTR [rax],al
  41e50c:	sub    bl,bh
  41e50e:	add    DWORD PTR [rax],eax
  41e510:	add    BYTE PTR [rax],al
  41e512:	add    BYTE PTR [rax],al
  41e514:	ds sti 
  41e516:	add    DWORD PTR [rax],eax
  41e518:	add    BYTE PTR [rax],al
  41e51a:	add    BYTE PTR [rax],al
  41e51c:	push   rax
  41e51d:	sti    
  41e51e:	add    DWORD PTR [rax],eax
  41e520:	add    BYTE PTR [rax],al
  41e522:	add    BYTE PTR [rax],al
  41e524:	push   0xfffffffffffffffb
  41e526:	add    DWORD PTR [rax],eax
  41e528:	add    BYTE PTR [rax],al
  41e52a:	add    BYTE PTR [rax],al
  41e52c:	jp     0x41e529
  41e52e:	add    DWORD PTR [rax],eax
  41e530:	add    BYTE PTR [rax],al
  41e532:	add    BYTE PTR [rax],al
  41e534:	xchg   esp,eax
  41e535:	sti    
  41e536:	add    DWORD PTR [rax],eax
  41e538:	add    BYTE PTR [rax],al
  41e53a:	add    BYTE PTR [rax],al
  41e53c:	mov    al,0xfb
  41e53e:	add    DWORD PTR [rax],eax
  41e540:	add    BYTE PTR [rax],al
  41e542:	add    BYTE PTR [rax],al
  41e544:	enter  0x1fb,0x0
  41e548:	add    BYTE PTR [rax],al
  41e54a:	add    BYTE PTR [rax],al
  41e54c:	loop   0x41e549
  41e54e:	add    DWORD PTR [rax],eax
  41e550:	add    BYTE PTR [rax],al
  41e552:	add    BYTE PTR [rax],al
  41e554:	clc    
  41e555:	sti    
  41e556:	add    DWORD PTR [rax],eax
  41e558:	add    BYTE PTR [rax],al
  41e55a:	add    BYTE PTR [rax],al
  41e55c:	or     al,0xfc
  41e55e:	add    DWORD PTR [rax],eax
  41e560:	add    BYTE PTR [rax],al
  41e562:	add    BYTE PTR [rax],al
  41e564:	es cld 
  41e566:	add    DWORD PTR [rax],eax
  41e568:	add    BYTE PTR [rax],al
  41e56a:	add    BYTE PTR [rax],al
  41e56c:	cmp    bh,ah
  41e56e:	add    DWORD PTR [rax],eax
  41e570:	add    BYTE PTR [rax],al
  41e572:	add    BYTE PTR [rax],al
  41e574:	pop    rax
  41e575:	cld    
  41e576:	add    DWORD PTR [rax],eax
  41e578:	add    BYTE PTR [rax],al
  41e57a:	add    BYTE PTR [rax],al
  41e57c:	(bad)  
  41e57d:	cld    
  41e57e:	add    DWORD PTR [rax],eax
  41e580:	add    BYTE PTR [rax],al
  41e582:	add    BYTE PTR [rax],al
  41e584:	je     0x41e582
  41e586:	add    DWORD PTR [rax],eax
  41e588:	add    BYTE PTR [rax],al
  41e58a:	add    BYTE PTR [rax],al
  41e58c:	(bad)  
  41e58d:	cld    
  41e58e:	add    DWORD PTR [rax],eax
  41e590:	add    BYTE PTR [rax],al
  41e592:	add    BYTE PTR [rax],al
  41e594:	sahf   
  41e595:	cld    
  41e596:	add    DWORD PTR [rax],eax
  41e598:	add    BYTE PTR [rax],al
  41e59a:	add    BYTE PTR [rax],al
  41e59c:	mov    al,0xfc
  41e59e:	add    DWORD PTR [rax],eax
	...
  41e5ac:	sar    ah,0x1
  41e5af:	add    BYTE PTR [rax],al
  41e5b1:	add    BYTE PTR [rax],al
  41e5b3:	add    al,bl
  41e5b5:	cld    
  41e5b6:	add    DWORD PTR [rax],eax
  41e5b8:	add    BYTE PTR [rax],al
  41e5ba:	add    BYTE PTR [rax],al
  41e5bc:	out    0xfc,al
  41e5be:	add    DWORD PTR [rax],eax
  41e5c0:	add    BYTE PTR [rax],al
  41e5c2:	add    BYTE PTR [rax],al
  41e5c4:	idiv   ah
  41e5c6:	add    DWORD PTR [rax],eax
  41e5c8:	add    BYTE PTR [rax],al
  41e5ca:	add    BYTE PTR [rax],al
  41e5cc:	add    bh,ch
  41e5ce:	add    DWORD PTR [rax],eax
  41e5d0:	add    BYTE PTR [rax],al
  41e5d2:	add    BYTE PTR [rax],al
  41e5d4:	adc    ch,bh
  41e5d6:	add    DWORD PTR [rax],eax
  41e5d8:	add    BYTE PTR [rax],al
  41e5da:	add    BYTE PTR [rax],al
  41e5dc:	and    ch,bh
  41e5de:	add    DWORD PTR [rax],eax
  41e5e0:	add    BYTE PTR [rax],al
  41e5e2:	add    BYTE PTR [rax],al
  41e5e4:	xor    bh,ch
  41e5e6:	add    DWORD PTR [rax],eax
  41e5e8:	add    BYTE PTR [rax],al
  41e5ea:	add    BYTE PTR [rax],al
  41e5ec:	rex.RX std 
  41e5ee:	add    DWORD PTR [rax],eax
  41e5f0:	add    BYTE PTR [rax],al
  41e5f2:	add    BYTE PTR [rax],al
  41e5f4:	push   rax
  41e5f5:	std    
  41e5f6:	add    DWORD PTR [rax],eax
  41e5f8:	add    BYTE PTR [rax],al
  41e5fa:	add    BYTE PTR [rax],al
  41e5fc:	pop    rsi
  41e5fd:	std    
  41e5fe:	add    DWORD PTR [rax],eax
  41e600:	add    BYTE PTR [rax],al
  41e602:	add    BYTE PTR [rax],al
  41e604:	push   0x1fd
  41e609:	add    BYTE PTR [rax],al
  41e60b:	add    BYTE PTR [rax-0x3],dh
  41e60e:	add    DWORD PTR [rax],eax
  41e610:	add    BYTE PTR [rax],al
  41e612:	add    BYTE PTR [rax],al
  41e614:	jp     0x41e613
  41e616:	add    DWORD PTR [rax],eax
  41e618:	add    BYTE PTR [rax],al
  41e61a:	add    BYTE PTR [rax],al
  41e61c:	xchg   ch,bh
  41e61e:	add    DWORD PTR [rax],eax
  41e620:	add    BYTE PTR [rax],al
  41e622:	add    BYTE PTR [rax],al
  41e624:	mov    ?,ebp
  41e626:	add    DWORD PTR [rax],eax
  41e628:	add    BYTE PTR [rax],al
  41e62a:	add    BYTE PTR [rax],al
  41e62c:	cwde   
  41e62d:	std    
  41e62e:	add    DWORD PTR [rax],eax
  41e630:	add    BYTE PTR [rax],al
  41e632:	add    BYTE PTR [rax],al
  41e634:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e635:	std    
  41e636:	add    DWORD PTR [rax],eax
  41e638:	add    BYTE PTR [rax],al
  41e63a:	add    BYTE PTR [rax],al
  41e63c:	mov    al,0xfd
  41e63e:	add    DWORD PTR [rax],eax
  41e640:	add    BYTE PTR [rax],al
  41e642:	add    BYTE PTR [rax],al
  41e644:	mov    esi,0x1fd
  41e649:	add    BYTE PTR [rax],al
  41e64b:	add    dh,al
  41e64d:	std    
  41e64e:	add    DWORD PTR [rax],eax
  41e650:	add    BYTE PTR [rax],al
  41e652:	add    BYTE PTR [rax],al
  41e654:	(bad)  
  41e655:	std    
  41e656:	add    DWORD PTR [rax],eax
  41e658:	add    BYTE PTR [rax],al
  41e65a:	add    BYTE PTR [rax],al
  41e65c:	fdivr  st,st(5)
  41e65e:	add    DWORD PTR [rax],eax
  41e660:	add    BYTE PTR [rax],al
  41e662:	add    BYTE PTR [rax],al
  41e664:	loopne 0x41e663
  41e666:	add    DWORD PTR [rax],eax
  41e668:	add    BYTE PTR [rax],al
  41e66a:	add    BYTE PTR [rax],al
  41e66c:	(bad)  
  41e66d:	std    
  41e66e:	add    DWORD PTR [rax],eax
  41e670:	add    BYTE PTR [rax],al
  41e672:	add    BYTE PTR [rax],al
  41e674:	repnz std 
  41e676:	add    DWORD PTR [rax],eax
  41e678:	add    BYTE PTR [rax],al
  41e67a:	add    BYTE PTR [rax],al
  41e67c:	cld    
  41e67d:	std    
  41e67e:	add    DWORD PTR [rax],eax
  41e680:	add    BYTE PTR [rax],al
  41e682:	add    BYTE PTR [rax],al
  41e684:	add    al,0xfe
  41e686:	add    DWORD PTR [rax],eax
  41e688:	add    BYTE PTR [rax],al
  41e68a:	add    BYTE PTR [rax],al
  41e68c:	or     al,0xfe
  41e68e:	add    DWORD PTR [rax],eax
  41e690:	add    BYTE PTR [rax],al
  41e692:	add    BYTE PTR [rax],al
  41e694:	adc    al,0xfe
  41e696:	add    DWORD PTR [rax],eax
  41e698:	add    BYTE PTR [rax],al
  41e69a:	add    BYTE PTR [rax],al
  41e69c:	sbb    al,0xfe
  41e69e:	add    DWORD PTR [rax],eax
  41e6a0:	add    BYTE PTR [rax],al
  41e6a2:	add    BYTE PTR [rax],al
  41e6a4:	sub    dh,bh
  41e6a6:	add    DWORD PTR [rax],eax
  41e6a8:	add    BYTE PTR [rax],al
  41e6aa:	add    BYTE PTR [rax],al
  41e6ac:	xor    bh,dh
  41e6ae:	add    DWORD PTR [rax],eax
  41e6b0:	add    BYTE PTR [rax],al
  41e6b2:	add    BYTE PTR [rax],al
  41e6b4:	cmp    al,0xfe
  41e6b6:	add    DWORD PTR [rax],eax
  41e6b8:	add    BYTE PTR [rax],al
  41e6ba:	add    BYTE PTR [rax],al
  41e6bc:	rex.RX inc BYTE PTR [rcx]
  41e6bf:	add    BYTE PTR [rax],al
  41e6c1:	add    BYTE PTR [rax],al
  41e6c3:	add    BYTE PTR [rax-0x2],dl
  41e6c6:	add    DWORD PTR [rax],eax
  41e6c8:	add    BYTE PTR [rax],al
  41e6ca:	add    BYTE PTR [rax],al
  41e6cc:	pop    rdx
  41e6cd:	inc    BYTE PTR [rcx]
  41e6cf:	add    BYTE PTR [rax],al
  41e6d1:	add    BYTE PTR [rax],al
  41e6d3:	add    BYTE PTR [rsi+rdi*8+0x1],ah
  41e6d7:	add    BYTE PTR [rax],al
  41e6d9:	add    BYTE PTR [rax],al
  41e6db:	add    BYTE PTR [rsi+rdi*8+0x1],ch
  41e6df:	add    BYTE PTR [rax],al
  41e6e1:	add    BYTE PTR [rax],al
  41e6e3:	add    BYTE PTR [rsi+rdi*8+0x1],dh
  41e6e7:	add    BYTE PTR [rax],al
  41e6e9:	add    BYTE PTR [rax],al
  41e6eb:	add    BYTE PTR [rsi-0x2],bh
  41e6ee:	add    DWORD PTR [rax],eax
  41e6f0:	add    BYTE PTR [rax],al
  41e6f2:	add    BYTE PTR [rax],al
  41e6f4:	mov    dh,bh
  41e6f6:	add    DWORD PTR [rax],eax
  41e6f8:	add    BYTE PTR [rax],al
  41e6fa:	add    BYTE PTR [rax],al
  41e6fc:	xchg   edx,eax
  41e6fd:	inc    BYTE PTR [rcx]
  41e6ff:	add    BYTE PTR [rax],al
  41e701:	add    BYTE PTR [rax],al
  41e703:	add    BYTE PTR [rsi+rdi*8+0x1],bl
  41e70a:	add    BYTE PTR [rax],al
  41e70c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e70d:	inc    BYTE PTR [rcx]
  41e70f:	add    BYTE PTR [rax],al
  41e711:	add    BYTE PTR [rax],al
  41e713:	add    BYTE PTR [rdx+0x1fe],dh
  41e719:	add    BYTE PTR [rax],al
  41e71b:	add    BYTE PTR [rsi+rdi*8+0x1],bh
	...
  41e72a:	add    BYTE PTR [rax],al
  41e72c:	(bad)  
  41e72d:	inc    BYTE PTR [rcx]
	...
  41e73b:	add    BYTE PTR [rsi+rbp*8],dl
  41e73e:	add    DWORD PTR [rax],eax
  41e740:	add    BYTE PTR [rax],al
  41e742:	add    BYTE PTR [rax],al
  41e744:	xor    dh,ch
  41e746:	add    DWORD PTR [rax],eax
  41e748:	add    BYTE PTR [rax],al
  41e74a:	add    BYTE PTR [rax],al
  41e74c:	out    dx,al
  41e74e:	add    DWORD PTR [rax],eax
  41e750:	add    BYTE PTR [rax],al
  41e752:	add    BYTE PTR [rax],al
  41e754:	pop    rax
  41e755:	out    dx,al
  41e756:	add    DWORD PTR [rax],eax
  41e758:	add    BYTE PTR [rax],al
  41e75a:	add    BYTE PTR [rax],al
  41e75c:	ins    BYTE PTR es:[rdi],dx
  41e75d:	out    dx,al
  41e75e:	add    DWORD PTR [rax],eax
  41e760:	add    BYTE PTR [rax],al
  41e762:	add    BYTE PTR [rax],al
  41e764:	jl     0x41e754
  41e766:	add    DWORD PTR [rax],eax
  41e768:	add    BYTE PTR [rax],al
  41e76a:	add    BYTE PTR [rax],al
  41e76c:	mov    esi,gs
  41e76e:	add    DWORD PTR [rax],eax
  41e770:	add    BYTE PTR [rax],al
  41e772:	add    BYTE PTR [rax],al
  41e774:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41e775:	out    dx,al
  41e776:	add    DWORD PTR [rax],eax
  41e778:	add    BYTE PTR [rax],al
  41e77a:	add    BYTE PTR [rax],al
  41e77c:	mov    al,0xee
  41e77e:	add    DWORD PTR [rax],eax
  41e780:	add    BYTE PTR [rax],al
  41e782:	add    BYTE PTR [rax],al
  41e784:	enter  0x1ee,0x0
  41e788:	add    BYTE PTR [rax],al
  41e78a:	add    BYTE PTR [rax],al
  41e78c:	loopne 0x41e77c
  41e78e:	add    DWORD PTR [rax],eax
  41e790:	add    BYTE PTR [rax],al
  41e792:	add    BYTE PTR [rax],al
  41e794:	hlt    
  41e795:	out    dx,al
  41e796:	add    DWORD PTR [rax],eax
  41e798:	add    BYTE PTR [rax],al
  41e79a:	add    BYTE PTR [rax],al
  41e79c:	or     bh,ch
  41e79e:	add    DWORD PTR [rax],eax
  41e7a0:	add    BYTE PTR [rax],al
  41e7a2:	add    BYTE PTR [rax],al
  41e7a4:	sbb    bh,ch
  41e7a6:	add    DWORD PTR [rax],eax
  41e7a8:	add    BYTE PTR [rax],al
  41e7aa:	add    BYTE PTR [rax],al
  41e7ac:	xor    al,0xef
  41e7ae:	add    DWORD PTR [rax],eax
  41e7b0:	add    BYTE PTR [rax],al
  41e7b2:	add    BYTE PTR [rax],al
  41e7b4:	rex.W out dx,eax
  41e7b6:	add    DWORD PTR [rax],eax
  41e7b8:	add    BYTE PTR [rax],al
  41e7ba:	add    BYTE PTR [rax],al
  41e7bc:	pop    rax
  41e7bd:	out    dx,eax
  41e7be:	add    DWORD PTR [rax],eax
  41e7c0:	add    BYTE PTR [rax],al
  41e7c2:	add    BYTE PTR [rax],al
  41e7c4:	ins    BYTE PTR es:[rdi],dx
  41e7c5:	out    dx,eax
  41e7c6:	add    DWORD PTR [rax],eax
  41e7c8:	add    BYTE PTR [rax],al
  41e7ca:	add    BYTE PTR [rax],al
  41e7cc:	mov    bh,ch
  41e7ce:	add    DWORD PTR [rax],eax
  41e7d0:	add    BYTE PTR [rax],al
  41e7d2:	add    BYTE PTR [rax],al
  41e7d4:	lods   al,BYTE PTR ds:[rsi]
  41e7d5:	out    dx,eax
  41e7d6:	add    DWORD PTR [rax],eax
  41e7d8:	add    BYTE PTR [rax],al
  41e7da:	add    BYTE PTR [rax],al
  41e7dc:	(bad)  
  41e7dd:	out    dx,eax
  41e7de:	add    DWORD PTR [rax],eax
  41e7e0:	add    BYTE PTR [rax],al
  41e7e2:	add    BYTE PTR [rax],al
  41e7e4:	fsub   st(7),st
  41e7e6:	add    DWORD PTR [rax],eax
  41e7e8:	add    BYTE PTR [rax],al
  41e7ea:	add    BYTE PTR [rax],al
  41e7ec:	cld    
  41e7ed:	out    dx,eax
  41e7ee:	add    DWORD PTR [rax],eax
  41e7f0:	add    BYTE PTR [rax],al
  41e7f2:	add    BYTE PTR [rax],al
  41e7f4:	or     al,dh
  41e7f6:	add    DWORD PTR [rax],eax
  41e7f8:	add    BYTE PTR [rax],al
  41e7fa:	add    BYTE PTR [rax],al
  41e7fc:	sbb    al,dh
  41e7fe:	add    DWORD PTR [rax],eax
  41e800:	add    BYTE PTR [rax],al
  41e802:	add    BYTE PTR [rax],al
  41e804:	sub    al,dh
  41e806:	add    DWORD PTR [rax],eax
  41e808:	add    BYTE PTR [rax],al
  41e80a:	add    BYTE PTR [rax],al
  41e80c:	rex
  41e80d:	lock add DWORD PTR [rax],eax
  41e810:	add    BYTE PTR [rax],al
  41e812:	add    BYTE PTR [rax],al
  41e814:	push   rsp
  41e815:	lock add DWORD PTR [rax],eax
  41e818:	add    BYTE PTR [rax],al
  41e81a:	add    BYTE PTR [rax],al
  41e81c:	jo     0x41e80e
  41e81e:	add    DWORD PTR [rax],eax
  41e820:	add    BYTE PTR [rax],al
  41e822:	add    BYTE PTR [rax],al
  41e824:	test   al,dh
  41e826:	add    DWORD PTR [rax],eax
  41e828:	add    BYTE PTR [rax],al
  41e82a:	add    BYTE PTR [rax],al
  41e82c:	cwde   
  41e82d:	lock add DWORD PTR [rax],eax
  41e830:	add    BYTE PTR [rax],al
  41e832:	add    BYTE PTR [rax],al
  41e834:	lods   al,BYTE PTR ds:[rsi]
  41e835:	lock add DWORD PTR [rax],eax
  41e838:	add    BYTE PTR [rax],al
  41e83a:	add    BYTE PTR [rax],al
  41e83c:	shl    al,0x1
  41e83f:	add    BYTE PTR [rax],al
  41e841:	add    BYTE PTR [rax],al
  41e843:	add    ah,dl
  41e845:	lock add DWORD PTR [rax],eax
  41e848:	add    BYTE PTR [rax],al
  41e84a:	add    BYTE PTR [rax],al
  41e84c:	lock lock add DWORD PTR [rax],eax
  41e850:	add    BYTE PTR [rax],al
  41e852:	add    BYTE PTR [rax],al
  41e854:	adc    cl,dh
  41e856:	add    DWORD PTR [rax],eax
  41e858:	add    BYTE PTR [rax],al
  41e85a:	add    BYTE PTR [rax],al
  41e85c:	and    al,0xf1
  41e85e:	add    DWORD PTR [rax],eax
  41e860:	add    BYTE PTR [rax],al
  41e862:	add    BYTE PTR [rax],al
  41e864:	cmp    cl,dh
  41e866:	add    DWORD PTR [rax],eax
  41e868:	add    BYTE PTR [rax],al
  41e86a:	add    BYTE PTR [rax],al
  41e86c:	pop    rax
  41e86d:	icebp  
  41e86e:	add    DWORD PTR [rax],eax
  41e870:	add    BYTE PTR [rax],al
  41e872:	add    BYTE PTR [rax],al
  41e874:	push   0x1f1
  41e879:	add    BYTE PTR [rax],al
  41e87b:	add    BYTE PTR [rax+0x1f1],al
  41e881:	add    BYTE PTR [rax],al
  41e883:	add    BYTE PTR [rax+0x1f1],bl
  41e889:	add    BYTE PTR [rax],al
  41e88b:	add    BYTE PTR [rcx+rsi*8+0x1],ch
  41e892:	add    BYTE PTR [rax],al
  41e894:	enter  0x1f1,0x0
  41e898:	add    BYTE PTR [rax],al
  41e89a:	add    BYTE PTR [rax],al
  41e89c:	fdiv   st,st(1)
  41e89e:	add    DWORD PTR [rax],eax
  41e8a0:	add    BYTE PTR [rax],al
  41e8a2:	add    BYTE PTR [rax],al
  41e8a4:	call   0x41ea9a
  41e8a9:	add    BYTE PTR [rax],al
  41e8ab:	add    al,bh
  41e8ad:	icebp  
  41e8ae:	add    DWORD PTR [rax],eax
  41e8b0:	add    BYTE PTR [rax],al
  41e8b2:	add    BYTE PTR [rax],al
  41e8b4:	or     dl,dh
  41e8b6:	add    DWORD PTR [rax],eax
  41e8b8:	add    BYTE PTR [rax],al
  41e8ba:	add    BYTE PTR [rax],al
  41e8bc:	sbb    dl,dh
  41e8be:	add    DWORD PTR [rax],eax
  41e8c0:	add    BYTE PTR [rax],al
  41e8c2:	add    BYTE PTR [rax],al
  41e8c4:	sub    dl,dh
  41e8c6:	add    DWORD PTR [rax],eax
  41e8c8:	add    BYTE PTR [rax],al
  41e8ca:	add    BYTE PTR [rax],al
  41e8cc:	cmp    al,0xf2
  41e8ce:	add    DWORD PTR [rax],eax
  41e8d0:	add    BYTE PTR [rax],al
  41e8d2:	add    BYTE PTR [rax],al
  41e8d4:	rex.W
  41e8d5:	repnz add DWORD PTR [rax],eax
  41e8d8:	add    BYTE PTR [rax],al
  41e8da:	add    BYTE PTR [rax],al
  41e8dc:	pop    rax
  41e8dd:	repnz add DWORD PTR [rax],eax
  41e8e0:	add    BYTE PTR [rax],al
  41e8e2:	add    BYTE PTR [rax],al
  41e8e4:	jo     0x41e8d8
  41e8e6:	add    DWORD PTR [rax],eax
  41e8e8:	add    BYTE PTR [rax],al
  41e8ea:	add    BYTE PTR [rax],al
  41e8ec:	test   dl,dh
  41e8ee:	add    DWORD PTR [rax],eax
  41e8f0:	add    BYTE PTR [rax],al
  41e8f2:	add    BYTE PTR [rax],al
  41e8f4:	cwde   
  41e8f5:	repnz add DWORD PTR [rax],eax
  41e8f8:	add    BYTE PTR [rax],al
  41e8fa:	add    BYTE PTR [rax],al
  41e8fc:	mov    eax,0x1f2
  41e901:	add    BYTE PTR [rax],al
  41e903:	add    ah,cl
  41e905:	repnz add DWORD PTR [rax],eax
  41e908:	add    BYTE PTR [rax],al
  41e90a:	add    BYTE PTR [rax],al
  41e90c:	fdivr  st(2),st
  41e90e:	add    DWORD PTR [rax],eax
  41e910:	add    BYTE PTR [rax],al
  41e912:	add    BYTE PTR [rax],al
  41e914:	in     al,dx
  41e915:	repnz add DWORD PTR [rax],eax
  41e918:	add    BYTE PTR [rax],al
  41e91a:	add    BYTE PTR [rax],al
  41e91c:	add    bl,dh
  41e91e:	add    DWORD PTR [rax],eax
  41e920:	add    BYTE PTR [rax],al
  41e922:	add    BYTE PTR [rax],al
  41e924:	adc    bl,dh
  41e926:	add    DWORD PTR [rax],eax
  41e928:	add    BYTE PTR [rax],al
  41e92a:	add    BYTE PTR [rax],al
  41e92c:	cmp    bl,dh
  41e92e:	add    DWORD PTR [rax],eax
  41e930:	add    BYTE PTR [rax],al
  41e932:	add    BYTE PTR [rax],al
  41e934:	rex.WR
  41e935:	repz add DWORD PTR [rax],eax
  41e938:	add    BYTE PTR [rax],al
  41e93a:	add    BYTE PTR [rax],al
  41e93c:	push   0x1f3
  41e941:	add    BYTE PTR [rax],al
  41e943:	add    BYTE PTR [rbx+rsi*8+0x1],bh
  41e947:	add    BYTE PTR [rax],al
  41e949:	add    BYTE PTR [rax],al
  41e94b:	add    BYTE PTR [rax+0x1f3],dl
  41e951:	add    BYTE PTR [rax],al
  41e953:	add    BYTE PTR [rbx+rsi*8+0x1],ch
  41e95a:	add    BYTE PTR [rax],al
  41e95c:	mov    eax,0x1f3
  41e961:	add    BYTE PTR [rax],al
  41e963:	add    al,cl
  41e965:	repz add DWORD PTR [rax],eax
  41e968:	add    BYTE PTR [rax],al
  41e96a:	add    BYTE PTR [rax],al
  41e96c:	(bad)  
  41e96d:	repz add DWORD PTR [rax],eax
  41e970:	add    BYTE PTR [rax],al
  41e972:	add    BYTE PTR [rax],al
  41e974:	call   0x41eb6c
  41e979:	add    BYTE PTR [rax],al
  41e97b:	add    ah,bh
  41e97d:	repz add DWORD PTR [rax],eax
  41e980:	add    BYTE PTR [rax],al
  41e982:	add    BYTE PTR [rax],al
  41e984:	sbb    ah,dh
  41e986:	add    DWORD PTR [rax],eax
  41e988:	add    BYTE PTR [rax],al
  41e98a:	add    BYTE PTR [rax],al
  41e98c:	xor    al,0xf4
  41e98e:	add    DWORD PTR [rax],eax
  41e990:	add    BYTE PTR [rax],al
  41e992:	add    BYTE PTR [rax],al
  41e994:	rex.W hlt 
  41e996:	add    DWORD PTR [rax],eax
  41e998:	add    BYTE PTR [rax],al
  41e99a:	add    BYTE PTR [rax],al
  41e99c:	fs hlt 
  41e99e:	add    DWORD PTR [rax],eax
  41e9a0:	add    BYTE PTR [rax],al
  41e9a2:	add    BYTE PTR [rax],al
  41e9a4:	xor    ah,0x1
  41e9a7:	add    BYTE PTR [rax],al
  41e9a9:	add    BYTE PTR [rax],al
  41e9ab:	add    BYTE PTR [rsp+rsi*8+0x1],bl
  41e9b2:	add    BYTE PTR [rax],al
  41e9b4:	mov    eax,0x1f4
  41e9b9:	add    BYTE PTR [rax],al
  41e9bb:	add    ah,cl
  41e9bd:	hlt    
  41e9be:	add    DWORD PTR [rax],eax
  41e9c0:	add    BYTE PTR [rax],al
  41e9c2:	add    BYTE PTR [rax],al
  41e9c4:	call   0x41ebbd
  41e9c9:	add    BYTE PTR [rax],al
  41e9cb:	add    BYTE PTR [rsi*8+0x1],al
  41e9d2:	add    BYTE PTR [rax],al
  41e9d4:	sbb    al,0xf5
  41e9d6:	add    DWORD PTR [rax],eax
  41e9d8:	add    BYTE PTR [rax],al
  41e9da:	add    BYTE PTR [rax],al
  41e9dc:	xor    al,0xf5
  41e9de:	add    DWORD PTR [rax],eax
  41e9e0:	add    BYTE PTR [rax],al
  41e9e2:	add    BYTE PTR [rax],al
  41e9e4:	rex.R cmc 
  41e9e6:	add    DWORD PTR [rax],eax
  41e9e8:	add    BYTE PTR [rax],al
  41e9ea:	add    BYTE PTR [rax],al
  41e9ec:	push   rsp
  41e9ed:	cmc    
  41e9ee:	add    DWORD PTR [rax],eax
  41e9f0:	add    BYTE PTR [rax],al
  41e9f2:	add    BYTE PTR [rax],al
  41e9f4:	fs cmc 
  41e9f6:	add    DWORD PTR [rax],eax
  41e9f8:	add    BYTE PTR [rax],al
  41e9fa:	add    BYTE PTR [rax],al
  41e9fc:	je     0x41e9f3
  41e9fe:	add    DWORD PTR [rax],eax
  41ea00:	add    BYTE PTR [rax],al
  41ea02:	add    BYTE PTR [rax],al
  41ea04:	mov    ch,dh
  41ea06:	add    DWORD PTR [rax],eax
  41ea08:	add    BYTE PTR [rax],al
  41ea0a:	add    BYTE PTR [rax],al
  41ea0c:	cwde   
  41ea0d:	cmc    
  41ea0e:	add    DWORD PTR [rax],eax
  41ea10:	add    BYTE PTR [rax],al
  41ea12:	add    BYTE PTR [rax],al
  41ea14:	test   al,0xf5
  41ea16:	add    DWORD PTR [rax],eax
  41ea18:	add    BYTE PTR [rax],al
  41ea1a:	add    BYTE PTR [rax],al
  41ea1c:	(bad)  
  41ea1d:	cmc    
  41ea1e:	add    DWORD PTR [rax],eax
  41ea20:	add    BYTE PTR [rax],al
  41ea22:	add    BYTE PTR [rax],al
  41ea24:	loopne 0x41ea1b
  41ea26:	add    DWORD PTR [rax],eax
  41ea28:	add    BYTE PTR [rax],al
  41ea2a:	add    BYTE PTR [rax],al
  41ea2c:	cld    
  41ea2d:	cmc    
  41ea2e:	add    DWORD PTR [rax],eax
  41ea30:	add    BYTE PTR [rax],al
  41ea32:	add    BYTE PTR [rax],al
  41ea34:	adc    al,0xf6
  41ea36:	add    DWORD PTR [rax],eax
  41ea38:	add    BYTE PTR [rax],al
  41ea3a:	add    BYTE PTR [rax],al
  41ea3c:	sub    dh,dh
  41ea3e:	add    DWORD PTR [rax],eax
  41ea40:	add    BYTE PTR [rax],al
  41ea42:	add    BYTE PTR [rax],al
  41ea44:	rex.R test BYTE PTR [rcx],0x0
  41ea48:	add    BYTE PTR [rax],al
  41ea4a:	add    BYTE PTR [rax],al
  41ea4c:	(bad)  
  41ea4d:	test   BYTE PTR [rcx],0x0
  41ea50:	add    BYTE PTR [rax],al
  41ea52:	add    BYTE PTR [rax],al
  41ea54:	js     0x41ea4c
  41ea56:	add    DWORD PTR [rax],eax
  41ea58:	add    BYTE PTR [rax],al
  41ea5a:	add    BYTE PTR [rax],al
  41ea5c:	cwde   
  41ea5d:	test   BYTE PTR [rcx],0x0
  41ea60:	add    BYTE PTR [rax],al
  41ea62:	add    BYTE PTR [rax],al
  41ea64:	mov    ah,0xf6
  41ea66:	add    DWORD PTR [rax],eax
  41ea68:	add    BYTE PTR [rax],al
  41ea6a:	add    BYTE PTR [rax],al
  41ea6c:	enter  0x1f6,0x0
  41ea70:	add    BYTE PTR [rax],al
  41ea72:	add    BYTE PTR [rax],al
  41ea74:	call   0x41ec6f
  41ea79:	add    BYTE PTR [rax],al
  41ea7b:	add    BYTE PTR [rax],cl
  41ea7d:	test   DWORD PTR [rcx],0x0
  41ea83:	add    BYTE PTR [rax],ch
  41ea85:	test   DWORD PTR [rcx],0x0
  41ea8b:	add    BYTE PTR [rdi+rsi*8+0x1],al
  41ea8f:	add    BYTE PTR [rax],al
  41ea91:	add    BYTE PTR [rax],al
  41ea93:	add    BYTE PTR [rdi+rsi*8+0x1],bl
  41ea97:	add    BYTE PTR [rax],al
  41ea99:	add    BYTE PTR [rax],al
  41ea9b:	add    BYTE PTR [rax-0x9],bh
  41ea9e:	add    DWORD PTR [rax],eax
  41eaa0:	add    BYTE PTR [rax],al
  41eaa2:	add    BYTE PTR [rax],al
  41eaa4:	nop
  41eaa5:	test   DWORD PTR [rcx],0x0
  41eaab:	add    BYTE PTR [rax+0x1f7],dh
  41eab1:	add    BYTE PTR [rax],al
  41eab3:	add    BYTE PTR [rdi+rsi*8+0x1],bh
  41eaba:	add    BYTE PTR [rax],al
  41eabc:	enter  0x1f7,0x0
  41eac0:	add    BYTE PTR [rax],al
  41eac2:	add    BYTE PTR [rax],al
  41eac4:	fdiv   st,st(7)
  41eac6:	add    DWORD PTR [rax],eax
  41eac8:	add    BYTE PTR [rax],al
  41eaca:	add    BYTE PTR [rax],al
  41eacc:	call   0x41ecc8
  41ead1:	add    BYTE PTR [rax],al
  41ead3:	add    al,bh
  41ead5:	test   DWORD PTR [rcx],0x0
  41eadb:	add    BYTE PTR [rax],bl
  41eadd:	clc    
  41eade:	add    DWORD PTR [rax],eax
  41eae0:	add    BYTE PTR [rax],al
  41eae2:	add    BYTE PTR [rax],al
  41eae4:	cmp    al,bh
  41eae6:	add    DWORD PTR [rax],eax
  41eae8:	add    BYTE PTR [rax],al
  41eaea:	add    BYTE PTR [rax],al
  41eaec:	push   rsp
  41eaed:	clc    
  41eaee:	add    DWORD PTR [rax],eax
  41eaf0:	add    BYTE PTR [rax],al
  41eaf2:	add    BYTE PTR [rax],al
  41eaf4:	js     0x41eaee
  41eaf6:	add    DWORD PTR [rax],eax
  41eaf8:	add    BYTE PTR [rax],al
  41eafa:	add    BYTE PTR [rax],al
  41eafc:	xchg   esp,eax
  41eafd:	clc    
  41eafe:	add    DWORD PTR [rax],eax
  41eb00:	add    BYTE PTR [rax],al
  41eb02:	add    BYTE PTR [rax],al
  41eb04:	mov    al,0xf8
  41eb06:	add    DWORD PTR [rax],eax
  41eb08:	add    BYTE PTR [rax],al
  41eb0a:	add    BYTE PTR [rax],al
  41eb0c:	enter  0x1f8,0x0
  41eb10:	add    BYTE PTR [rax],al
  41eb12:	add    BYTE PTR [rax],al
  41eb14:	loopne 0x41eb0e
  41eb16:	add    DWORD PTR [rax],eax
  41eb18:	add    BYTE PTR [rax],al
  41eb1a:	add    BYTE PTR [rax],al
  41eb1c:	add    cl,bh
  41eb1e:	add    DWORD PTR [rax],eax
  41eb20:	add    BYTE PTR [rax],al
  41eb22:	add    BYTE PTR [rax],al
  41eb24:	sbb    cl,bh
  41eb26:	add    DWORD PTR [rax],eax
  41eb28:	add    BYTE PTR [rax],al
  41eb2a:	add    BYTE PTR [rax],al
  41eb2c:	xor    cl,bh
  41eb2e:	add    DWORD PTR [rax],eax
  41eb30:	add    BYTE PTR [rax],al
  41eb32:	add    BYTE PTR [rax],al
  41eb34:	rex.R stc 
  41eb36:	add    DWORD PTR [rax],eax
  41eb38:	add    BYTE PTR [rax],al
  41eb3a:	add    BYTE PTR [rax],al
  41eb3c:	fs stc 
  41eb3e:	add    DWORD PTR [rax],eax
  41eb40:	add    BYTE PTR [rax],al
  41eb42:	add    BYTE PTR [rax],al
  41eb44:	test   cl,bh
  41eb46:	add    DWORD PTR [rax],eax
  41eb48:	add    BYTE PTR [rax],al
  41eb4a:	add    BYTE PTR [rax],al
  41eb4c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41eb4d:	stc    
  41eb4e:	add    DWORD PTR [rax],eax
  41eb50:	add    BYTE PTR [rax],al
  41eb52:	add    BYTE PTR [rax],al
  41eb54:	mov    esp,0x1f9
  41eb59:	add    BYTE PTR [rax],al
  41eb5b:	add    ah,cl
  41eb5d:	stc    
  41eb5e:	add    DWORD PTR [rax],eax
  41eb60:	add    BYTE PTR [rax],al
  41eb62:	add    BYTE PTR [rax],al
  41eb64:	call   0x41ed62
  41eb69:	add    BYTE PTR [rax],al
  41eb6b:	add    BYTE PTR [rax],al
  41eb6d:	cli    
  41eb6e:	add    DWORD PTR [rax],eax
  41eb70:	add    BYTE PTR [rax],al
  41eb72:	add    BYTE PTR [rax],al
  41eb74:	adc    al,0xfa
  41eb76:	add    DWORD PTR [rax],eax
  41eb78:	add    BYTE PTR [rax],al
  41eb7a:	add    BYTE PTR [rax],al
  41eb7c:	xor    dl,bh
  41eb7e:	add    DWORD PTR [rax],eax
  41eb80:	add    BYTE PTR [rax],al
  41eb82:	add    BYTE PTR [rax],al
  41eb84:	rex cli 
  41eb86:	add    DWORD PTR [rax],eax
  41eb88:	add    BYTE PTR [rax],al
  41eb8a:	add    BYTE PTR [rax],al
  41eb8c:	pop    rax
  41eb8d:	cli    
  41eb8e:	add    DWORD PTR [rax],eax
  41eb90:	add    BYTE PTR [rax],al
  41eb92:	add    BYTE PTR [rax],al
  41eb94:	jo     0x41eb90
  41eb96:	add    DWORD PTR [rax],eax
  41eb98:	add    BYTE PTR [rax],al
  41eb9a:	add    BYTE PTR [rax],al
  41eb9c:	cmp    dl,0x1
  41eb9f:	add    BYTE PTR [rax],al
  41eba1:	add    BYTE PTR [rax],al
  41eba3:	add    BYTE PTR [rax+0x1fa],dl
	...
  41ebb1:	add    BYTE PTR [rax],al
  41ebb3:	add    BYTE PTR [rax+0x1fa],ch
  41ebb9:	add    BYTE PTR [rax],al
  41ebbb:	add    al,al
  41ebbd:	cli    
  41ebbe:	add    DWORD PTR [rax],eax
  41ebc0:	add    BYTE PTR [rax],al
  41ebc2:	add    BYTE PTR [rax],al
  41ebc4:	fdivr  st,st(2)
  41ebc6:	add    DWORD PTR [rax],eax
  41ebc8:	add    BYTE PTR [rax],al
  41ebca:	add    BYTE PTR [rax],al
  41ebcc:	in     al,dx
  41ebcd:	cli    
  41ebce:	add    DWORD PTR [rax],eax
  41ebd0:	add    BYTE PTR [rax],al
  41ebd2:	add    BYTE PTR [rax],al
  41ebd4:	add    bh,bl
  41ebd6:	add    DWORD PTR [rax],eax
  41ebd8:	add    BYTE PTR [rax],al
  41ebda:	add    BYTE PTR [rax],al
  41ebdc:	sbb    bl,bh
  41ebde:	add    DWORD PTR [rax],eax
  41ebe0:	add    BYTE PTR [rax],al
  41ebe2:	add    BYTE PTR [rax],al
  41ebe4:	sub    bl,bh
  41ebe6:	add    DWORD PTR [rax],eax
  41ebe8:	add    BYTE PTR [rax],al
  41ebea:	add    BYTE PTR [rax],al
  41ebec:	ds sti 
  41ebee:	add    DWORD PTR [rax],eax
  41ebf0:	add    BYTE PTR [rax],al
  41ebf2:	add    BYTE PTR [rax],al
  41ebf4:	push   rax
  41ebf5:	sti    
  41ebf6:	add    DWORD PTR [rax],eax
  41ebf8:	add    BYTE PTR [rax],al
  41ebfa:	add    BYTE PTR [rax],al
  41ebfc:	push   0xfffffffffffffffb
  41ebfe:	add    DWORD PTR [rax],eax
  41ec00:	add    BYTE PTR [rax],al
  41ec02:	add    BYTE PTR [rax],al
  41ec04:	jp     0x41ec01
  41ec06:	add    DWORD PTR [rax],eax
  41ec08:	add    BYTE PTR [rax],al
  41ec0a:	add    BYTE PTR [rax],al
  41ec0c:	xchg   esp,eax
  41ec0d:	sti    
  41ec0e:	add    DWORD PTR [rax],eax
  41ec10:	add    BYTE PTR [rax],al
  41ec12:	add    BYTE PTR [rax],al
  41ec14:	mov    al,0xfb
  41ec16:	add    DWORD PTR [rax],eax
  41ec18:	add    BYTE PTR [rax],al
  41ec1a:	add    BYTE PTR [rax],al
  41ec1c:	enter  0x1fb,0x0
  41ec20:	add    BYTE PTR [rax],al
  41ec22:	add    BYTE PTR [rax],al
  41ec24:	loop   0x41ec21
  41ec26:	add    DWORD PTR [rax],eax
  41ec28:	add    BYTE PTR [rax],al
  41ec2a:	add    BYTE PTR [rax],al
  41ec2c:	clc    
  41ec2d:	sti    
  41ec2e:	add    DWORD PTR [rax],eax
  41ec30:	add    BYTE PTR [rax],al
  41ec32:	add    BYTE PTR [rax],al
  41ec34:	or     al,0xfc
  41ec36:	add    DWORD PTR [rax],eax
  41ec38:	add    BYTE PTR [rax],al
  41ec3a:	add    BYTE PTR [rax],al
  41ec3c:	es cld 
  41ec3e:	add    DWORD PTR [rax],eax
  41ec40:	add    BYTE PTR [rax],al
  41ec42:	add    BYTE PTR [rax],al
  41ec44:	cmp    bh,ah
  41ec46:	add    DWORD PTR [rax],eax
  41ec48:	add    BYTE PTR [rax],al
  41ec4a:	add    BYTE PTR [rax],al
  41ec4c:	pop    rax
  41ec4d:	cld    
  41ec4e:	add    DWORD PTR [rax],eax
  41ec50:	add    BYTE PTR [rax],al
  41ec52:	add    BYTE PTR [rax],al
  41ec54:	(bad)  
  41ec55:	cld    
  41ec56:	add    DWORD PTR [rax],eax
  41ec58:	add    BYTE PTR [rax],al
  41ec5a:	add    BYTE PTR [rax],al
  41ec5c:	je     0x41ec5a
  41ec5e:	add    DWORD PTR [rax],eax
  41ec60:	add    BYTE PTR [rax],al
  41ec62:	add    BYTE PTR [rax],al
  41ec64:	(bad)  
  41ec65:	cld    
  41ec66:	add    DWORD PTR [rax],eax
  41ec68:	add    BYTE PTR [rax],al
  41ec6a:	add    BYTE PTR [rax],al
  41ec6c:	sahf   
  41ec6d:	cld    
  41ec6e:	add    DWORD PTR [rax],eax
  41ec70:	add    BYTE PTR [rax],al
  41ec72:	add    BYTE PTR [rax],al
  41ec74:	mov    al,0xfc
  41ec76:	add    DWORD PTR [rax],eax
	...
  41ec84:	sar    ah,0x1
  41ec87:	add    BYTE PTR [rax],al
  41ec89:	add    BYTE PTR [rax],al
  41ec8b:	add    al,bl
  41ec8d:	cld    
  41ec8e:	add    DWORD PTR [rax],eax
  41ec90:	add    BYTE PTR [rax],al
  41ec92:	add    BYTE PTR [rax],al
  41ec94:	out    0xfc,al
  41ec96:	add    DWORD PTR [rax],eax
  41ec98:	add    BYTE PTR [rax],al
  41ec9a:	add    BYTE PTR [rax],al
  41ec9c:	idiv   ah
  41ec9e:	add    DWORD PTR [rax],eax
  41eca0:	add    BYTE PTR [rax],al
  41eca2:	add    BYTE PTR [rax],al
  41eca4:	add    bh,ch
  41eca6:	add    DWORD PTR [rax],eax
  41eca8:	add    BYTE PTR [rax],al
  41ecaa:	add    BYTE PTR [rax],al
  41ecac:	adc    ch,bh
  41ecae:	add    DWORD PTR [rax],eax
  41ecb0:	add    BYTE PTR [rax],al
  41ecb2:	add    BYTE PTR [rax],al
  41ecb4:	and    ch,bh
  41ecb6:	add    DWORD PTR [rax],eax
  41ecb8:	add    BYTE PTR [rax],al
  41ecba:	add    BYTE PTR [rax],al
  41ecbc:	xor    bh,ch
  41ecbe:	add    DWORD PTR [rax],eax
  41ecc0:	add    BYTE PTR [rax],al
  41ecc2:	add    BYTE PTR [rax],al
  41ecc4:	rex.RX std 
  41ecc6:	add    DWORD PTR [rax],eax
  41ecc8:	add    BYTE PTR [rax],al
  41ecca:	add    BYTE PTR [rax],al
  41eccc:	push   rax
  41eccd:	std    
  41ecce:	add    DWORD PTR [rax],eax
  41ecd0:	add    BYTE PTR [rax],al
  41ecd2:	add    BYTE PTR [rax],al
  41ecd4:	pop    rsi
  41ecd5:	std    
  41ecd6:	add    DWORD PTR [rax],eax
  41ecd8:	add    BYTE PTR [rax],al
  41ecda:	add    BYTE PTR [rax],al
  41ecdc:	push   0x1fd
  41ece1:	add    BYTE PTR [rax],al
  41ece3:	add    BYTE PTR [rax-0x3],dh
  41ece6:	add    DWORD PTR [rax],eax
  41ece8:	add    BYTE PTR [rax],al
  41ecea:	add    BYTE PTR [rax],al
  41ecec:	jp     0x41eceb
  41ecee:	add    DWORD PTR [rax],eax
  41ecf0:	add    BYTE PTR [rax],al
  41ecf2:	add    BYTE PTR [rax],al
  41ecf4:	xchg   ch,bh
  41ecf6:	add    DWORD PTR [rax],eax
  41ecf8:	add    BYTE PTR [rax],al
  41ecfa:	add    BYTE PTR [rax],al
  41ecfc:	mov    ?,ebp
  41ecfe:	add    DWORD PTR [rax],eax
  41ed00:	add    BYTE PTR [rax],al
  41ed02:	add    BYTE PTR [rax],al
  41ed04:	cwde   
  41ed05:	std    
  41ed06:	add    DWORD PTR [rax],eax
  41ed08:	add    BYTE PTR [rax],al
  41ed0a:	add    BYTE PTR [rax],al
  41ed0c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41ed0d:	std    
  41ed0e:	add    DWORD PTR [rax],eax
  41ed10:	add    BYTE PTR [rax],al
  41ed12:	add    BYTE PTR [rax],al
  41ed14:	mov    al,0xfd
  41ed16:	add    DWORD PTR [rax],eax
  41ed18:	add    BYTE PTR [rax],al
  41ed1a:	add    BYTE PTR [rax],al
  41ed1c:	mov    esi,0x1fd
  41ed21:	add    BYTE PTR [rax],al
  41ed23:	add    dh,al
  41ed25:	std    
  41ed26:	add    DWORD PTR [rax],eax
  41ed28:	add    BYTE PTR [rax],al
  41ed2a:	add    BYTE PTR [rax],al
  41ed2c:	(bad)  
  41ed2d:	std    
  41ed2e:	add    DWORD PTR [rax],eax
  41ed30:	add    BYTE PTR [rax],al
  41ed32:	add    BYTE PTR [rax],al
  41ed34:	fdivr  st,st(5)
  41ed36:	add    DWORD PTR [rax],eax
  41ed38:	add    BYTE PTR [rax],al
  41ed3a:	add    BYTE PTR [rax],al
  41ed3c:	loopne 0x41ed3b
  41ed3e:	add    DWORD PTR [rax],eax
  41ed40:	add    BYTE PTR [rax],al
  41ed42:	add    BYTE PTR [rax],al
  41ed44:	(bad)  
  41ed45:	std    
  41ed46:	add    DWORD PTR [rax],eax
  41ed48:	add    BYTE PTR [rax],al
  41ed4a:	add    BYTE PTR [rax],al
  41ed4c:	repnz std 
  41ed4e:	add    DWORD PTR [rax],eax
  41ed50:	add    BYTE PTR [rax],al
  41ed52:	add    BYTE PTR [rax],al
  41ed54:	cld    
  41ed55:	std    
  41ed56:	add    DWORD PTR [rax],eax
  41ed58:	add    BYTE PTR [rax],al
  41ed5a:	add    BYTE PTR [rax],al
  41ed5c:	add    al,0xfe
  41ed5e:	add    DWORD PTR [rax],eax
  41ed60:	add    BYTE PTR [rax],al
  41ed62:	add    BYTE PTR [rax],al
  41ed64:	or     al,0xfe
  41ed66:	add    DWORD PTR [rax],eax
  41ed68:	add    BYTE PTR [rax],al
  41ed6a:	add    BYTE PTR [rax],al
  41ed6c:	adc    al,0xfe
  41ed6e:	add    DWORD PTR [rax],eax
  41ed70:	add    BYTE PTR [rax],al
  41ed72:	add    BYTE PTR [rax],al
  41ed74:	sbb    al,0xfe
  41ed76:	add    DWORD PTR [rax],eax
  41ed78:	add    BYTE PTR [rax],al
  41ed7a:	add    BYTE PTR [rax],al
  41ed7c:	sub    dh,bh
  41ed7e:	add    DWORD PTR [rax],eax
  41ed80:	add    BYTE PTR [rax],al
  41ed82:	add    BYTE PTR [rax],al
  41ed84:	xor    bh,dh
  41ed86:	add    DWORD PTR [rax],eax
  41ed88:	add    BYTE PTR [rax],al
  41ed8a:	add    BYTE PTR [rax],al
  41ed8c:	cmp    al,0xfe
  41ed8e:	add    DWORD PTR [rax],eax
  41ed90:	add    BYTE PTR [rax],al
  41ed92:	add    BYTE PTR [rax],al
  41ed94:	rex.RX inc BYTE PTR [rcx]
  41ed97:	add    BYTE PTR [rax],al
  41ed99:	add    BYTE PTR [rax],al
  41ed9b:	add    BYTE PTR [rax-0x2],dl
  41ed9e:	add    DWORD PTR [rax],eax
  41eda0:	add    BYTE PTR [rax],al
  41eda2:	add    BYTE PTR [rax],al
  41eda4:	pop    rdx
  41eda5:	inc    BYTE PTR [rcx]
  41eda7:	add    BYTE PTR [rax],al
  41eda9:	add    BYTE PTR [rax],al
  41edab:	add    BYTE PTR [rsi+rdi*8+0x1],ah
  41edaf:	add    BYTE PTR [rax],al
  41edb1:	add    BYTE PTR [rax],al
  41edb3:	add    BYTE PTR [rsi+rdi*8+0x1],ch
  41edb7:	add    BYTE PTR [rax],al
  41edb9:	add    BYTE PTR [rax],al
  41edbb:	add    BYTE PTR [rsi+rdi*8+0x1],dh
  41edbf:	add    BYTE PTR [rax],al
  41edc1:	add    BYTE PTR [rax],al
  41edc3:	add    BYTE PTR [rsi-0x2],bh
  41edc6:	add    DWORD PTR [rax],eax
  41edc8:	add    BYTE PTR [rax],al
  41edca:	add    BYTE PTR [rax],al
  41edcc:	mov    dh,bh
  41edce:	add    DWORD PTR [rax],eax
  41edd0:	add    BYTE PTR [rax],al
  41edd2:	add    BYTE PTR [rax],al
  41edd4:	xchg   edx,eax
  41edd5:	inc    BYTE PTR [rcx]
  41edd7:	add    BYTE PTR [rax],al
  41edd9:	add    BYTE PTR [rax],al
  41eddb:	add    BYTE PTR [rsi+rdi*8+0x1],bl
  41ede2:	add    BYTE PTR [rax],al
  41ede4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41ede5:	inc    BYTE PTR [rcx]
  41ede7:	add    BYTE PTR [rax],al
  41ede9:	add    BYTE PTR [rax],al
  41edeb:	add    BYTE PTR [rdx+0x1fe],dh
  41edf1:	add    BYTE PTR [rax],al
  41edf3:	add    BYTE PTR [rsi+rdi*8+0x1],bh
	...
  41ee02:	add    BYTE PTR [rax],al
  41ee04:	(bad)  
  41ee05:	inc    BYTE PTR [rcx]
	...
  41ee13:	add    BYTE PTR [rsi],bh
  41ee15:	add    BYTE PTR [rax+0x74],ch
  41ee18:	ins    DWORD PTR es:[rdi],dx
  41ee19:	ins    BYTE PTR es:[rdi],dx
  41ee1a:	rex.XB jb 0x41ee82
  41ee1d:	(bad)  
  41ee1e:	je     0x41ee85
  41ee20:	push   rax
  41ee21:	jne    0x41ee96
  41ee23:	push   0x73726150
  41ee28:	gs jb  0x41ee6e
  41ee2b:	je     0x41eea5
  41ee2d:	je     0x41ee2f
  41ee2f:	add    BYTE PTR [rdx+0x0],cl
  41ee32:	push   0x446c6d74
  41ee37:	outs   dx,DWORD PTR ds:[rsi]
  41ee38:	movsxd eax,DWORD PTR [rbp+rsi*2+0x6d]
  41ee3c:	jo     0x41ee3e
  41ee3e:	add    BYTE PTR [rax],al
  41ee40:	push   rdx
  41ee41:	add    BYTE PTR [rax+0x74],ch
  41ee44:	ins    DWORD PTR es:[rdi],dx
  41ee45:	ins    BYTE PTR es:[rdi],dx
  41ee46:	rex.RX jb 0x41eeae
  41ee49:	gs push rax
  41ee4b:	(bad)  
  41ee4c:	jb     0x41eec1
  41ee4e:	gs jb  0x41ee94
  41ee51:	je     0x41eecb
  41ee53:	je     0x41ee55
  41ee55:	add    BYTE PTR [rax],al
  41ee57:	add    BYTE PTR [rbx+0x0],ah
  41ee5a:	push   0x506c6d74
  41ee5f:	(bad)  
  41ee60:	jb     0x41eed5
  41ee62:	gs rex.XB push 0x6b6e75
  41ee69:	add    BYTE PTR [rax],al
  41ee6b:	add    BYTE PTR [rbx+0x0],ch
  41ee6e:	push   0x526c6d74
  41ee73:	gs (bad) 
  41ee75:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x68007000
  41ee7f:	je     0x41eeee
  41ee81:	ins    BYTE PTR es:[rdi],dx
  41ee82:	push   rbx
  41ee83:	(bad)  
  41ee84:	jbe    0x41eeeb
  41ee86:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x68007200
  41ee8f:	je     0x41eefe
  41ee91:	ins    BYTE PTR es:[rdi],dx
  41ee92:	push   rbx
  41ee93:	(bad)  
  41ee94:	jbe    0x41eefb
  41ee96:	imul   r13d,DWORD PTR [rbp+r12*2+0x46],0x616d726f
  41ee9f:	je     0x41eea1
  41eea1:	add    BYTE PTR [rax],al
  41eea3:	add    BYTE PTR [rbx+0x0],bh
  41eea6:	imul   ebp,DWORD PTR [rsi+0x70],0x75507475
  41eead:	jae    0x41ef17
  41eeaf:	add    BYTE PTR [rdx+0x6c6d7800],ah
  41eeb5:	rex.B
  41eeb6:	fs rex.RB outs dx,BYTE PTR fs:[rsi]
  41eeba:	movsxd ebp,DWORD PTR [rdi+0x64]
  41eebd:	imul   ebp,DWORD PTR [rsi+0x67],0x61696c41
  41eec4:	jae    0x41eec6
  41eec6:	add    BYTE PTR [rax],al
  41eec8:	fadd   QWORD PTR [rax]
  41eeca:	js     0x41ef39
  41eecc:	ins    BYTE PTR es:[rdi],dx
  41eecd:	xor    DWORD PTR [r14+r9*2],esi
  41eed1:	rex.R outs dx,DWORD PTR ds:[rsi]
  41eed3:	movsxd eax,DWORD PTR [rbp+rsi*2+0x6d]
  41eed7:	jo     0x41ef26
  41eed9:	gs ins DWORD PTR es:[rdi],dx
  41eedb:	outs   dx,DWORD PTR ds:[rsi]
  41eedc:	jb     0x41ef57
  41eede:	add    BYTE PTR [rax],al
  41eee0:	add    BYTE PTR [rcx],al
  41eee2:	js     0x41ef51
  41eee4:	ins    BYTE PTR es:[rdi],dx
  41eee5:	rex.XB push 0x566b6365
  41eeeb:	gs jb  0x41ef61
  41eeee:	imul   ebp,DWORD PTR [rdi+0x6e],0x8000000
  41eef5:	add    DWORD PTR [rax+0x6d],edi
  41eef8:	ins    BYTE PTR es:[rdi],dx
  41eef9:	rex.XB ins BYTE PTR es:[rdi],dx
  41eefb:	gs (bad) 
  41eefd:	outs   dx,BYTE PTR ds:[rsi]
  41eefe:	jne    0x41ef70
  41ef00:	push   rax
  41ef01:	(bad)  
  41ef02:	jb     0x41ef77
  41ef04:	gs jb  0x41ef07
  41ef07:	add    BYTE PTR [rcx],dl
  41ef09:	add    DWORD PTR [rax+0x6d],edi
  41ef0c:	ins    BYTE PTR es:[rdi],dx
  41ef0d:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41ef0f:	jo     0x41ef8a
  41ef11:	rex.R outs dx,DWORD PTR ds:[rsi]
  41ef13:	movsxd eax,DWORD PTR [rax]
  41ef15:	add    BYTE PTR [rax],al
  41ef17:	add    BYTE PTR [rax],ch
  41ef19:	add    DWORD PTR [rax+0x6d],edi
  41ef1c:	ins    BYTE PTR es:[rdi],dx
  41ef1d:	rex.XB jb 0x41ef85
  41ef20:	(bad)  
  41ef21:	je     0x41ef88
  41ef23:	push   rax
  41ef24:	jne    0x41ef99
  41ef26:	push   0x73726150
  41ef2b:	gs jb  0x41ef71
  41ef2e:	je     0x41efa8
  41ef30:	je     0x41ef32
  41ef32:	add    BYTE PTR [rax],al
  41ef34:	add    DWORD PTR cs:[rax+0x6d],edi
  41ef38:	ins    BYTE PTR es:[rdi],dx
  41ef39:	rex.XB je 0x41efb4
  41ef3c:	je     0x41ef90
  41ef3e:	gs (bad) 
  41ef40:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x12f0000
  41ef4a:	js     0x41efb9
  41ef4c:	ins    BYTE PTR es:[rdi],dx
  41ef4d:	rex.XB je 0x41efc8
  41ef50:	je     0x41efa4
  41ef52:	gs (bad) 
  41ef54:	fs rex.WB
  41ef56:	rex.WRXB add BYTE PTR [r9+r8*1],r14b
  41ef5a:	js     0x41efc9
  41ef5c:	ins    BYTE PTR es:[rdi],dx
  41ef5d:	rex.XB je 0x41efd8
  41ef60:	je     0x41efb7
  41ef62:	jae    0x41efc9
  41ef64:	rex.WRXB jo 0x41efdb
  41ef67:	imul   ebp,DWORD PTR [rdi+0x6e],0x1420073
  41ef6e:	js     0x41efdd
  41ef70:	ins    BYTE PTR es:[rdi],dx
  41ef71:	rex.R
  41ef72:	gs jb  0x41efda
  41ef75:	imul   esi,DWORD PTR [ebx+0x74],0x6f4e7265
  41ef7d:	fs gs rex.R
  41ef80:	gs data16 (bad) 
  41ef83:	jne    0x41eff1
  41ef85:	je     0x41ef87
  41ef87:	add    BYTE PTR [rcx+0x1],dl
  41ef8a:	js     0x41eff9
  41ef8c:	ins    BYTE PTR es:[rdi],dx
  41ef8d:	rex.R outs dx,DWORD PTR ds:[rsi]
  41ef8f:	push   rsi
  41ef90:	(bad)  
  41ef91:	ins    BYTE PTR es:[rdi],dx
  41ef92:	imul   esp,DWORD PTR [rcx+rbp*2+0x74],0x65684379
  41ef9a:	movsxd ebp,DWORD PTR [rbx+0x69]
  41ef9d:	outs   dx,BYTE PTR ds:[rsi]
  41ef9e:	addr32 rex.R
  41efa0:	gs data16 (bad) 
  41efa3:	jne    0x41f011
  41efa5:	je     0x41effd
  41efa7:	(bad)  
  41efa8:	ins    BYTE PTR es:[rdi],dx
  41efa9:	jne    0x41f010
  41efab:	add    BYTE PTR [rdx+0x1],bl
  41efae:	js     0x41f01d
  41efb0:	ins    BYTE PTR es:[rdi],dx
  41efb1:	rex.R outs dx,DWORD PTR ds:[rsi]
  41efb3:	movsxd eax,DWORD PTR [rdi+0x65]
  41efb6:	je     0x41f00a
  41efb8:	outs   dx,DWORD PTR ds:[rsi]
  41efb9:	outs   dx,DWORD PTR ds:[rsi]
  41efba:	je     0x41f001
  41efbc:	ins    BYTE PTR es:[rdi],dx
  41efbd:	gs ins DWORD PTR es:[rdi],dx
  41efbf:	outs   dx,BYTE PTR gs:[rsi]
  41efc1:	je     0x41efc3
  41efc3:	add    BYTE PTR [rbx+0x1],bl
  41efc6:	js     0x41f035
  41efc8:	ins    BYTE PTR es:[rdi],dx
  41efc9:	rex.R outs dx,DWORD PTR ds:[rsi]
  41efcb:	movsxd edx,DWORD PTR [rbx+0x65]
  41efce:	je     0x41f022
  41efd0:	outs   dx,DWORD PTR ds:[rsi]
  41efd1:	outs   dx,DWORD PTR ds:[rsi]
  41efd2:	je     0x41f019
  41efd4:	ins    BYTE PTR es:[rdi],dx
  41efd5:	gs ins DWORD PTR es:[rdi],dx
  41efd7:	outs   dx,BYTE PTR gs:[rsi]
  41efd9:	je     0x41efdb
  41efdb:	add    BYTE PTR [rsi+0x1],ah
  41efde:	js     0x41f04d
  41efe0:	ins    BYTE PTR es:[rdi],dx
  41efe1:	rex.RB outs dx,BYTE PTR ds:[rsi]
  41efe3:	movsxd ebp,DWORD PTR [rdi+0x64]
  41efe6:	rex.RB outs dx,BYTE PTR gs:[rsi]
  41efe9:	je     0x41f054
  41efeb:	je     0x41f056
  41efed:	gs jae 0x41f042
  41eff0:	gs outs dx,BYTE PTR gs:[rsi]
  41eff3:	je     0x41f067
  41eff5:	(bad)  
  41eff6:	outs   dx,BYTE PTR ds:[rsi]
  41eff7:	je     0x41eff9
  41eff9:	add    BYTE PTR [rax],al
  41effb:	add    BYTE PTR [rbx+0x6c6d7801],al
  41f001:	rex.RX jb 0x41f069
  41f004:	add    BYTE PTR gs:[rax],al
  41f007:	add    BYTE PTR [rdi+0x6c6d7801],al
  41f00d:	rex.RX jb 0x41f075
  41f010:	rex.R outs dx,DWORD PTR gs:[rsi]
  41f013:	movsxd eax,DWORD PTR [rax]
  41f015:	add    BYTE PTR [rax],al
  41f017:	add    BYTE PTR [rcx+0x6c6d7801],cl
  41f01d:	rex.RX jb 0x41f085
  41f020:	gs rex.R je 0x41f088
  41f024:	add    BYTE PTR [rax],al
  41f026:	add    BYTE PTR [rax],al
  41f028:	lea    eax,[rcx]
  41f02a:	js     0x41f099
  41f02c:	ins    BYTE PTR es:[rdi],dx
  41f02d:	rex.RX jb 0x41f095
  41f030:	rex.RB outs dx,BYTE PTR gs:[rsi]
  41f033:	jne    0x41f0a2
  41f035:	gs jb  0x41f099
  41f038:	je     0x41f0a3
  41f03a:	outs   dx,DWORD PTR ds:[rsi]
  41f03b:	outs   dx,BYTE PTR ds:[rsi]
  41f03c:	add    BYTE PTR [rax],al
  41f03e:	add    BYTE PTR [rax],al
  41f040:	xchg   esi,eax
  41f041:	add    DWORD PTR [rax+0x6d],edi
  41f044:	ins    BYTE PTR es:[rdi],dx
  41f045:	rex.RX jb 0x41f0ad
  41f048:	gs push rax
  41f04a:	(bad)  
  41f04b:	jb     0x41f0c0
  41f04d:	gs jb  0x41f093
  41f050:	je     0x41f0ca
  41f052:	je     0x41f054
  41f054:	xchg   edi,eax
  41f055:	add    DWORD PTR [rax+0x6d],edi
  41f058:	ins    BYTE PTR es:[rdi],dx
  41f059:	rex.RX jb 0x41f0c1
  41f05c:	gs push rax
  41f05e:	(bad)  
  41f05f:	jb     0x41f0d4
  41f061:	gs jb  0x41f0ad
  41f064:	outs   dx,BYTE PTR ds:[rsi]
  41f065:	jo     0x41f0dc
  41f067:	je     0x41f0ab
  41f069:	jne    0x41f0d1
  41f06b:	data16 gs jb 0x41f06f
  41f06f:	add    BYTE PTR [rax+0x6c6d7801],bl
  41f075:	rex.RX jb 0x41f0dd
  41f078:	gs push rax
  41f07a:	(bad)  
  41f07b:	je     0x41f0f1
  41f07d:	gs jb  0x41f0ee
  41f080:	add    BYTE PTR [rax],al
  41f082:	add    BYTE PTR [rax],al
  41f084:	sahf   
  41f085:	add    DWORD PTR [rax+0x6d],edi
  41f088:	ins    BYTE PTR es:[rdi],dx
  41f089:	rex.RX jb 0x41f0f1
  41f08c:	gs push rbx
  41f08e:	je     0x41f102
  41f090:	gs (bad) 
  41f092:	ins    DWORD PTR es:[rdi],dx
  41f093:	rex.XB je 0x41f10e
  41f096:	je     0x41f098
  41f098:	lahf   
  41f099:	add    DWORD PTR [rax+0x6d],edi
  41f09c:	ins    BYTE PTR es:[rdi],dx
  41f09d:	rex.RX jb 0x41f105
  41f0a0:	gs push rsp
  41f0a2:	gs js  0x41f119
  41f0a5:	push   rdx
  41f0a6:	gs (bad) 
  41f0a8:	fs gs jb 0x41f0ac
  41f0ac:	movabs ds:0x656572466c6d7801,al
  41f0b5:	push   rsi
  41f0b6:	(bad)  
  41f0b7:	ins    BYTE PTR es:[rdi],dx
  41f0b8:	imul   esp,DWORD PTR [rbx+rax*2+0x74],0x7478
  41f0c0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41f0c1:	add    DWORD PTR [rax+0x6d],edi
  41f0c4:	ins    BYTE PTR es:[rdi],dx
  41f0c5:	rex.RXB
  41f0c6:	outs   dx,BYTE PTR gs:[rsi]
  41f0c8:	gs jb  0x41f134
  41f0cb:	movsxd eax,DWORD PTR [rbp+0x72]
  41f0ce:	jb     0x41f13f
  41f0d0:	jb     0x41f0d2
  41f0d2:	add    BYTE PTR [rax],al
  41f0d4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f0d5:	add    DWORD PTR [rax+0x6d],edi
  41f0d8:	ins    BYTE PTR es:[rdi],dx
  41f0d9:	rex.RXB
  41f0da:	outs   dx,BYTE PTR gs:[rsi]
  41f0dc:	gs jb  0x41f148
  41f0df:	movsxd eax,DWORD PTR [rbp+0x72]
  41f0e2:	jb     0x41f153
  41f0e4:	jb     0x41f129
  41f0e6:	outs   dx,DWORD PTR ds:[rsi]
  41f0e7:	outs   dx,BYTE PTR ds:[rsi]
  41f0e8:	je     0x41f14f
  41f0ea:	js     0x41f160
  41f0ec:	add    BYTE PTR [rax],al
  41f0ee:	add    BYTE PTR [rax],al
  41f0f0:	mov    ah,0x1
  41f0f2:	js     0x41f161
  41f0f4:	ins    BYTE PTR es:[rdi],dx
  41f0f5:	rex.RXB
  41f0f6:	gs je  0x41f13e
  41f0f9:	js     0x41f16f
  41f0fb:	gs jb  0x41f16c
  41f0fe:	(bad)  
  41f0ff:	ins    BYTE PTR es:[rdi],dx
  41f100:	rex.RB outs dx,BYTE PTR ds:[rsi]
  41f102:	je     0x41f16d
  41f104:	je     0x41f17f
  41f106:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41f108:	(bad)  
  41f109:	fs gs jb 0x41f10d
  41f10d:	add    BYTE PTR [rax],al
  41f10f:	add    BYTE PTR [rcx+0x6c6d7801],bh
  41f115:	rex.RXB
  41f116:	gs je  0x41f162
  41f119:	outs   dx,BYTE PTR ds:[rsi]
  41f11a:	je     0x41f16f
  41f11c:	jne    0x41f180
  41f11e:	jae    0x41f185
  41f120:	je     0x41f122
  41f122:	add    BYTE PTR [rax],al
  41f124:	mov    esi,0x6c6d7801
  41f129:	rex.RXB
  41f12a:	gs je  0x41f17b
  41f12d:	outs   dx,DWORD PTR ds:[rsi]
  41f12e:	fs gs push rax
  41f131:	(bad)  
  41f132:	je     0x41f19c
  41f134:	add    BYTE PTR [rax],al
  41f136:	add    BYTE PTR [rax],al
  41f138:	mov    DWORD PTR [rcx],0x476c6d78
  41f13e:	gs je  0x41f198
  41f141:	(bad)  
  41f142:	jb     0x41f1b2
  41f144:	imul   ebp,DWORD PTR [rsi+0x67],0x66654473
  41f14b:	(bad)  
  41f14c:	jne    0x41f1ba
  41f14e:	je     0x41f1a6
  41f150:	(bad)  
  41f151:	ins    BYTE PTR es:[rdi],dx
  41f152:	jne    0x41f1b9
  41f154:	add    BYTE PTR [rax],al
  41f156:	add    BYTE PTR [rax],al
  41f158:	leave  
  41f159:	add    DWORD PTR [rax+0x6d],edi
  41f15c:	ins    BYTE PTR es:[rdi],dx
  41f15d:	rex.W (bad) 
  41f15f:	jae    0x41f1a7
  41f161:	gs (bad) 
  41f163:	je     0x41f1da
  41f165:	jb     0x41f1cc
  41f167:	add    BYTE PTR [rax],dl
  41f169:	add    bh,BYTE PTR [rax+0x6d]
  41f16c:	ins    BYTE PTR es:[rdi],dx
  41f16d:	rex.WXB
  41f16e:	gs gs jo 0x41f1b4
  41f172:	ins    BYTE PTR es:[rdi],dx
  41f173:	(bad)  
  41f174:	outs   dx,BYTE PTR ds:[rsi]
  41f175:	imul   esi,DWORD PTR [rbx+0x44],0x65
  41f179:	data16 (bad) 
  41f17b:	jne    0x41f1e9
  41f17d:	je     0x41f17f
  41f17f:	add    BYTE PTR [rdx+rax*1],dl
  41f182:	js     0x41f1f1
  41f184:	ins    BYTE PTR es:[rdi],dx
  41f185:	imul   r13,QWORD PTR [rsi+0x65],0x626d754e
  41f18d:	gs jb  0x41f203
  41f190:	rex.R
  41f191:	gs data16 (bad) 
  41f194:	jne    0x41f202
  41f196:	je     0x41f198
  41f198:	xor    al,BYTE PTR [rdx]
  41f19a:	js     0x41f209
  41f19c:	ins    BYTE PTR es:[rdi],dx
  41f19d:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41f19f:	(bad)  
  41f1a0:	fs rex.XB (bad) 
  41f1a3:	je     0x41f206
  41f1a5:	ins    BYTE PTR es:[rdi],dx
  41f1a6:	outs   dx,DWORD PTR ds:[rsi]
  41f1a7:	addr32 jae 0x41f1aa
  41f1aa:	add    BYTE PTR [rax],al
  41f1ac:	xor    eax,DWORD PTR [rdx]
  41f1ae:	js     0x41f21d
  41f1b0:	ins    BYTE PTR es:[rdi],dx
  41f1b1:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41f1b3:	(bad)  
  41f1b4:	fs rex.RB js 0x41f22c
  41f1b8:	rex.R je 0x41f21f
  41f1bb:	rex.R
  41f1bc:	gs data16 (bad) 
  41f1bf:	jne    0x41f22d
  41f1c1:	je     0x41f219
  41f1c3:	(bad)  
  41f1c4:	ins    BYTE PTR es:[rdi],dx
  41f1c5:	jne    0x41f22c
  41f1c7:	add    BYTE PTR [rsi],bh
  41f1c9:	add    bh,BYTE PTR [rax+0x6d]
  41f1cc:	ins    BYTE PTR es:[rdi],dx
  41f1cd:	rex.WRB
  41f1ce:	gs ins DWORD PTR es:[rdi],dx
  41f1d0:	rex.RX jb 0x41f238
  41f1d3:	add    BYTE PTR gs:[rax],al
  41f1d6:	add    BYTE PTR [rax],al
  41f1d8:	add    dil,BYTE PTR [rax+0x6d]
  41f1dc:	ins    BYTE PTR es:[rdi],dx
  41f1dd:	rex.WRB
  41f1de:	gs ins DWORD PTR es:[rdi],dx
  41f1e0:	rex.WRB (bad) 
  41f1e2:	ins    BYTE PTR es:[rdi],dx
  41f1e3:	ins    BYTE PTR es:[rdi],dx
  41f1e4:	outs   dx,DWORD PTR ds:[rsi]
  41f1e5:	movsxd eax,DWORD PTR [rax]
  41f1e7:	add    BYTE PTR [rcx+0x2],al
  41f1ea:	js     0x41f259
  41f1ec:	ins    BYTE PTR es:[rdi],dx
  41f1ed:	rex.WRB
  41f1ee:	gs ins DWORD PTR es:[rdi],dx
  41f1f0:	push   rdx
  41f1f1:	gs (bad) 
  41f1f3:	ins    BYTE PTR es:[rdi],dx
  41f1f4:	ins    BYTE PTR es:[rdi],dx
  41f1f5:	outs   dx,DWORD PTR ds:[rsi]
  41f1f6:	movsxd eax,DWORD PTR [rax]
  41f1f8:	rex.X add dil,BYTE PTR [rax+0x6d]
  41f1fc:	ins    BYTE PTR es:[rdi],dx
  41f1fd:	rex.WRB
  41f1fe:	gs ins DWORD PTR es:[rdi],dx
  41f200:	push   rbx
  41f201:	gs je  0x41f279
  41f204:	jo     0x41f206
  41f206:	add    BYTE PTR [rax],al
  41f208:	rex.RX add r15b,BYTE PTR [rax+0x6d]
  41f20c:	ins    BYTE PTR es:[rdi],dx
  41f20d:	rex.WRB
  41f20e:	gs ins DWORD PTR es:[rdi],dx
  41f210:	push   rbp
  41f211:	jae    0x41f278
  41f213:	add    BYTE PTR fs:[rax],al
  41f216:	add    BYTE PTR [rax],al
  41f218:	rex.RXB add r15b,BYTE PTR [r8+0x6d]
  41f21c:	ins    BYTE PTR es:[rdi],dx
  41f21d:	rex.WRB
  41f21e:	gs ins DWORD PTR es:[rdi],dx
  41f220:	outs   dx,DWORD PTR ds:[rsi]
  41f221:	jb     0x41f29c
  41f223:	rex.R jne 0x41f293
  41f226:	jo     0x41f228
  41f228:	rex.W add dil,BYTE PTR [rax+0x6d]
  41f22c:	ins    BYTE PTR es:[rdi],dx
  41f22d:	rex.WRB
  41f22e:	gs ins DWORD PTR es:[rdi],dx
  41f230:	outs   dx,DWORD PTR ds:[rsi]
  41f231:	jb     0x41f2ac
  41f233:	push   rbx
  41f234:	je     0x41f2a8
  41f236:	fs jne 0x41f2a9
  41f239:	add    BYTE PTR [rax],al
  41f23b:	add    BYTE PTR [rax+0x6c6d7802],al
  41f241:	rex.WRX
  41f242:	gs ja  0x41f289
  41f245:	outs   dx,DWORD PTR ds:[rsi]
  41f246:	movsxd eax,DWORD PTR [rax]
  41f248:	test   BYTE PTR [rdx],al
  41f24a:	js     0x41f2b9
  41f24c:	ins    BYTE PTR es:[rdi],dx
  41f24d:	rex.WRX
  41f24e:	gs ja  0x41f295
  41f251:	outs   dx,DWORD PTR ds:[rsi]
  41f252:	movsxd ecx,DWORD PTR [rsi+0x6f]
  41f255:	fs add BYTE PTR gs:[rax+0x6c6d7802],dl
  41f25d:	rex.WRX
  41f25e:	gs ja  0x41f2aa
  41f261:	rex.WRXB
  41f262:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41f264:	jo     0x41f2db
  41f266:	je     0x41f2bb
  41f268:	je     0x41f2dc
  41f26a:	gs (bad) 
  41f26c:	ins    DWORD PTR es:[rdi],dx
  41f26d:	add    BYTE PTR [rax],al
  41f26f:	add    BYTE PTR [rdx+0x6c6d7802],bl
  41f275:	rex.WRX
  41f276:	gs ja  0x41f2c9
  41f279:	(bad)  
  41f27a:	jb     0x41f2ef
  41f27c:	gs jb  0x41f2c2
  41f27f:	je     0x41f2f9
  41f281:	je     0x41f283
  41f283:	add    BYTE PTR [rdx+0x6c6d7802],ch
  41f289:	rex.WRX
  41f28a:	gs ja  0x41f2e3
  41f28d:	(bad)  
  41f28e:	ins    BYTE PTR es:[rdi],dx
  41f28f:	imul   esp,DWORD PTR [rbx+rax*2+0x74],0x7478
  41f297:	add    BYTE PTR [rbp+0x6c6d7802],ch
  41f29d:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  41f29f:	rex.WRX
  41f2a0:	gs je  0x41f2e8
  41f2a3:	js     0x41f319
  41f2a5:	gs jb  0x41f316
  41f2a8:	(bad)  
  41f2a9:	ins    BYTE PTR es:[rdi],dx
  41f2aa:	rex.RB outs dx,BYTE PTR ds:[rsi]
  41f2ac:	je     0x41f317
  41f2ae:	je     0x41f329
  41f2b0:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41f2b2:	(bad)  
  41f2b3:	fs gs jb 0x41f2b7
  41f2b7:	add    BYTE PTR [rbx+0x6c6d7802],bh
  41f2bd:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  41f2bf:	fs gs push rbx
  41f2c2:	gs je  0x41f308
  41f2c5:	outs   dx,DWORD PTR ds:[rsi]
  41f2c6:	outs   dx,BYTE PTR ds:[rsi]
  41f2c7:	je     0x41f32e
  41f2c9:	outs   dx,BYTE PTR ds:[rsi]
  41f2ca:	je     0x41f2cc
  41f2cc:	fild   DWORD PTR [rdx]
  41f2ce:	js     0x41f33d
  41f2d0:	ins    BYTE PTR es:[rdi],dx
  41f2d1:	push   rax
  41f2d2:	(bad)  
  41f2d3:	jb     0x41f348
  41f2d5:	gs rex.XB push 0x6b6e75
  41f2dc:	fild   WORD PTR [rdx]
  41f2de:	js     0x41f34d
  41f2e0:	ins    BYTE PTR es:[rdi],dx
  41f2e1:	push   rax
  41f2e2:	(bad)  
  41f2e3:	jb     0x41f358
  41f2e5:	gs rex.R push rsp
  41f2e8:	add    BYTE PTR [rax],r8b
  41f2eb:	add    bl,ah
  41f2ed:	add    bh,BYTE PTR [rax+0x6d]
  41f2f0:	ins    BYTE PTR es:[rdi],dx
  41f2f1:	push   rax
  41f2f2:	(bad)  
  41f2f3:	jb     0x41f368
  41f2f5:	rex.R outs dx,DWORD PTR gs:[rsi]
  41f2f8:	movsxd esi,DWORD PTR [rbp+0x6d]
  41f2fb:	outs   dx,BYTE PTR gs:[rsi]
  41f2fd:	je     0x41f2ff
  41f2ff:	add    dh,dh
  41f301:	add    bh,BYTE PTR [rax+0x6d]
  41f304:	ins    BYTE PTR es:[rdi],dx
  41f305:	push   rax
  41f306:	(bad)  
  41f307:	jb     0x41f37c
  41f309:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x0],0x78031a00
  41f313:	ins    DWORD PTR es:[rdi],dx
  41f314:	ins    BYTE PTR es:[rdi],dx
  41f315:	push   rax
  41f316:	(bad)  
  41f317:	jb     0x41f38c
  41f319:	gs jb  0x41f365
  41f31c:	outs   dx,BYTE PTR ds:[rsi]
  41f31d:	jo     0x41f394
  41f31f:	je     0x41f363
  41f321:	jne    0x41f389
  41f323:	data16 gs jb 0x41f36a
  41f327:	jb     0x41f38e
  41f329:	(bad)  
  41f32a:	je     0x41f391
  41f32c:	imul   r13d,DWORD PTR [rbp+r12*2+0x6e],0x656d61
  41f335:	add    BYTE PTR [rax],al
  41f337:	add    BYTE PTR [rbx],ch
  41f339:	add    edi,DWORD PTR [rax+0x6d]
  41f33c:	ins    BYTE PTR es:[rdi],dx
  41f33d:	push   rax
  41f33e:	(bad)  
  41f33f:	jb     0x41f3b4
  41f341:	gs jb  0x41f39a
  41f344:	gs jb  0x41f3ba
  41f347:	imul   ebp,DWORD PTR [rdi+0x6e],0x32f0000
  41f34e:	js     0x41f3bd
  41f350:	ins    BYTE PTR es:[rdi],dx
  41f351:	push   rax
  41f352:	(bad)  
  41f353:	je     0x41f3c9
  41f355:	gs jb  0x41f3c6
  41f358:	rex.RXB
  41f359:	gs je  0x41f3af
  41f35c:	je     0x41f3d0
  41f35e:	gs (bad) 
  41f360:	ins    DWORD PTR es:[rdi],dx
  41f361:	rex.XB je 0x41f3dc
  41f364:	je     0x41f366
  41f366:	add    BYTE PTR [rax],al
  41f368:	xor    BYTE PTR [rbx],al
  41f36a:	js     0x41f3d9
  41f36c:	ins    BYTE PTR es:[rdi],dx
  41f36d:	push   rax
  41f36e:	(bad)  
  41f36f:	je     0x41f3e5
  41f371:	gs jb  0x41f3e2
  41f374:	rex.WRB (bad) 
  41f376:	je     0x41f3db
  41f378:	push   0x34000000
  41f37d:	add    edi,DWORD PTR [rax+0x6d]
  41f380:	ins    BYTE PTR es:[rdi],dx
  41f381:	push   rax
  41f382:	(bad)  
  41f383:	je     0x41f3f9
  41f385:	gs jb  0x41f3f6
  41f388:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41f38b:	jo     0x41f3f6
  41f38d:	ins    BYTE PTR es:[rdi],dx
  41f38e:	add    BYTE PTR gs:[rip+0x6c6d7803],dh        # 0x6caf6b98
  41f395:	push   rax
  41f396:	gs fs (bad) 
  41f399:	outs   dx,BYTE PTR ds:[rsi]
  41f39a:	je     0x41f405
  41f39c:	movsxd edx,DWORD PTR [rax+0x61]
  41f39f:	jb     0x41f414
  41f3a1:	gs jb  0x41f3e8
  41f3a4:	gs data16 (bad) 
  41f3a7:	jne    0x41f415
  41f3a9:	je     0x41f3ab
  41f3ab:	add    BYTE PTR [rdi],bh
  41f3ad:	add    edi,DWORD PTR [rax+0x6d]
  41f3b0:	ins    BYTE PTR es:[rdi],dx
  41f3b1:	push   rdx
  41f3b2:	gs (bad) 
  41f3b4:	fs rex.RX
  41f3b6:	add    BYTE PTR fs:[rax+0x3],al
  41f3ba:	js     0x41f429
  41f3bc:	ins    BYTE PTR es:[rdi],dx
  41f3bd:	push   rdx
  41f3be:	gs (bad) 
  41f3c0:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x3410000
  41f3ca:	js     0x41f439
  41f3cc:	ins    BYTE PTR es:[rdi],dx
  41f3cd:	push   rdx
  41f3ce:	gs (bad) 
  41f3d0:	fs rex.WB
  41f3d2:	rex.WRXB add BYTE PTR [r13+0x3],r8b
  41f3d6:	js     0x41f445
  41f3d8:	ins    BYTE PTR es:[rdi],dx
  41f3d9:	push   rdx
  41f3da:	gs (bad) 
  41f3dc:	fs gs jb 0x41f426
  41f3e0:	outs   dx,DWORD PTR ds:[rsi]
  41f3e1:	jb     0x41f429
  41f3e3:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x78034e00
  41f3eb:	ins    DWORD PTR es:[rdi],dx
  41f3ec:	ins    BYTE PTR es:[rdi],dx
  41f3ed:	push   rdx
  41f3ee:	gs (bad) 
  41f3f0:	fs gs jb 0x41f44b
  41f3f4:	(bad)  
  41f3f5:	ins    BYTE PTR es:[rdi],dx
  41f3f6:	imul   esp,DWORD PTR [rbp+0x72],0x0
  41f3fa:	add    BYTE PTR [rax],al
  41f3fc:	add    edi,DWORD PTR gs:[rax+0x6d]
  41f400:	ins    BYTE PTR es:[rdi],dx
  41f401:	push   rdx
  41f402:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6f4e7265
  41f40b:	fs gs rex.R
  41f40e:	gs data16 (bad) 
  41f411:	jne    0x41f47f
  41f413:	je     0x41f415
  41f415:	add    BYTE PTR [rax],al
  41f417:	add    BYTE PTR [rax+0x3],ch
  41f41a:	js     0x41f489
  41f41c:	ins    BYTE PTR es:[rdi],dx
  41f41d:	push   rdx
  41f41e:	gs ins BYTE PTR es:[rdi],dx
  41f420:	(bad)  
  41f421:	js     0x41f471
  41f423:	rex.RXB
  41f424:	rex.XB ins BYTE PTR es:[rdi],dx
  41f426:	gs (bad) 
  41f428:	outs   dx,BYTE PTR ds:[rsi]
  41f429:	jne    0x41f49b
  41f42b:	push   rsp
  41f42c:	jns    0x41f49e
  41f42e:	gs jae 0x41f431
  41f431:	add    BYTE PTR [rax],al
  41f433:	add    BYTE PTR [rbx+0x3],ch
  41f436:	js     0x41f4a5
  41f438:	ins    BYTE PTR es:[rdi],dx
  41f439:	push   rdx
  41f43a:	gs ins BYTE PTR es:[rdi],dx
  41f43c:	(bad)  
  41f43d:	js     0x41f48d
  41f43f:	rex.RXB
  41f440:	rex.RX jb 0x41f4a8
  41f443:	add    BYTE PTR gs:[rax],al
  41f446:	add    BYTE PTR [rax],al
  41f448:	ins    BYTE PTR es:[rdi],dx
  41f449:	add    edi,DWORD PTR [rax+0x6d]
  41f44c:	ins    BYTE PTR es:[rdi],dx
  41f44d:	push   rdx
  41f44e:	gs ins BYTE PTR es:[rdi],dx
  41f450:	(bad)  
  41f451:	js     0x41f4a1
  41f453:	rex.RXB
  41f454:	rex.RX jb 0x41f4bc
  41f457:	gs push rax
  41f459:	(bad)  
  41f45a:	jb     0x41f4cf
  41f45c:	gs jb  0x41f4a2
  41f45f:	je     0x41f4d9
  41f461:	je     0x41f463
  41f463:	add    BYTE PTR [rbp+0x3],ch
  41f466:	js     0x41f4d5
  41f468:	ins    BYTE PTR es:[rdi],dx
  41f469:	push   rdx
  41f46a:	gs ins BYTE PTR es:[rdi],dx
  41f46c:	(bad)  
  41f46d:	js     0x41f4bd
  41f46f:	rex.RXB
  41f470:	rex.RX jb 0x41f4d8
  41f473:	gs push rsi
  41f475:	(bad)  
  41f476:	ins    BYTE PTR es:[rdi],dx
  41f477:	imul   esp,DWORD PTR [rbx+rax*2+0x74],0x7478
  41f47f:	add    BYTE PTR [rbx+0x3],dh
  41f482:	js     0x41f4f1
  41f484:	ins    BYTE PTR es:[rdi],dx
  41f485:	push   rdx
  41f486:	gs ins BYTE PTR es:[rdi],dx
  41f488:	(bad)  
  41f489:	js     0x41f4d9
  41f48b:	rex.RXB
  41f48c:	rex.WRX
  41f48d:	gs ja  0x41f4e0
  41f490:	(bad)  
  41f491:	jb     0x41f506
  41f493:	gs jb  0x41f4d9
  41f496:	je     0x41f510
  41f498:	je     0x41f49a
  41f49a:	add    BYTE PTR [rax],al
  41f49c:	je     0x41f4a1
  41f49e:	js     0x41f50d
  41f4a0:	ins    BYTE PTR es:[rdi],dx
  41f4a1:	push   rdx
  41f4a2:	gs ins BYTE PTR es:[rdi],dx
  41f4a4:	(bad)  
  41f4a5:	js     0x41f4f5
  41f4a7:	rex.RXB
  41f4a8:	rex.WRX
  41f4a9:	gs ja  0x41f502
  41f4ac:	(bad)  
  41f4ad:	ins    BYTE PTR es:[rdi],dx
  41f4ae:	imul   esp,DWORD PTR [rbx+rax*2+0x74],0x7478
  41f4b6:	add    BYTE PTR [rax],al
  41f4b8:	jne    0x41f4bd
  41f4ba:	js     0x41f529
  41f4bc:	ins    BYTE PTR es:[rdi],dx
  41f4bd:	push   rdx
  41f4be:	gs ins BYTE PTR es:[rdi],dx
  41f4c0:	(bad)  
  41f4c1:	js     0x41f511
  41f4c3:	rex.RXB push r8
  41f4c5:	(bad)  
  41f4c6:	jb     0x41f53b
  41f4c8:	add    BYTE PTR gs:[rax],al
  41f4cb:	add    BYTE PTR [rsi+0x3],dh
  41f4ce:	js     0x41f53d
  41f4d0:	ins    BYTE PTR es:[rdi],dx
  41f4d1:	push   rdx
  41f4d2:	gs ins BYTE PTR es:[rdi],dx
  41f4d4:	(bad)  
  41f4d5:	js     0x41f525
  41f4d7:	rex.RXB push r11
  41f4d9:	gs je  0x41f52c
  41f4dc:	(bad)  
  41f4dd:	jb     0x41f552
  41f4df:	gs jb  0x41f527
  41f4e2:	jb     0x41f556
  41f4e4:	outs   dx,DWORD PTR ds:[rsi]
  41f4e5:	jb     0x41f55a
  41f4e7:	add    BYTE PTR [rax+0x3],bh
  41f4ea:	js     0x41f559
  41f4ec:	ins    BYTE PTR es:[rdi],dx
  41f4ed:	push   rdx
  41f4ee:	gs ins BYTE PTR es:[rdi],dx
  41f4f0:	(bad)  
  41f4f1:	js     0x41f541
  41f4f3:	rex.RXB push r11
  41f4f5:	gs je  0x41f54e
  41f4f8:	(bad)  
  41f4f9:	ins    BYTE PTR es:[rdi],dx
  41f4fa:	imul   esp,DWORD PTR [rbp+rax*2+0x72],0x73726f72
  41f502:	add    BYTE PTR [rax],al
  41f504:	jp     0x41f509
  41f506:	js     0x41f575
  41f508:	ins    BYTE PTR es:[rdi],dx
  41f509:	push   rdx
  41f50a:	gs ins BYTE PTR es:[rdi],dx
  41f50c:	(bad)  
  41f50d:	js     0x41f55d
  41f50f:	rex.RXB push r14
  41f511:	(bad)  
  41f512:	ins    BYTE PTR es:[rdi],dx
  41f513:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x636f4465
  41f51b:	add    BYTE PTR [rdi+0x6c6d7803],ah
  41f521:	push   rbx
  41f522:	pop    r8
  41f524:	rex.R
  41f525:	gs data16 (bad) 
  41f528:	jne    0x41f596
  41f52a:	je     0x41f582
  41f52c:	gs jb  0x41f5a2
  41f52f:	imul   ebp,DWORD PTR [rdi+0x6e],0x3b20000
  41f536:	js     0x41f5a5
  41f538:	ins    BYTE PTR es:[rdi],dx
  41f539:	push   rbx
  41f53a:	(bad)  
  41f53b:	jbe    0x41f5a2
  41f53d:	rex.XB ins BYTE PTR es:[rdi],dx
  41f53f:	outs   dx,DWORD PTR ds:[rsi]
  41f540:	jae    0x41f5a7
  41f542:	add    BYTE PTR [rax],al
  41f544:	mov    bl,0x3
  41f546:	js     0x41f5b5
  41f548:	ins    BYTE PTR es:[rdi],dx
  41f549:	push   rbx
  41f54a:	(bad)  
  41f54b:	jbe    0x41f5b2
  41f54d:	rex.R outs dx,DWORD PTR ds:[rsi]
  41f54f:	movsxd eax,DWORD PTR [rax]
  41f551:	add    BYTE PTR [rax],al
  41f553:	add    BYTE PTR [rbx+rax*1+0x536c6d78],dh
  41f55a:	(bad)  
  41f55b:	jbe    0x41f5c2
  41f55d:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x3bf0000
  41f566:	js     0x41f5d5
  41f568:	ins    BYTE PTR es:[rdi],dx
  41f569:	push   rbx
  41f56a:	(bad)  
  41f56b:	jbe    0x41f5d2
  41f56d:	push   rsp
  41f56e:	outs   dx,DWORD PTR ds:[rsi]
  41f56f:	rex.RX
  41f570:	add    BYTE PTR fs:[rax],al
  41f573:	add    al,al
  41f575:	add    edi,DWORD PTR [rax+0x6d]
  41f578:	ins    BYTE PTR es:[rdi],dx
  41f579:	push   rbx
  41f57a:	(bad)  
  41f57b:	jbe    0x41f5e2
  41f57d:	push   rsp
  41f57e:	outs   dx,DWORD PTR ds:[rsi]
  41f57f:	imul   r13d,DWORD PTR [rbp+r12*2+0x6e],0x656d61
  41f588:	ret    0x7803
  41f58b:	ins    DWORD PTR es:[rdi],dx
  41f58c:	ins    BYTE PTR es:[rdi],dx
  41f58d:	push   rbx
  41f58e:	(bad)  
  41f58f:	jbe    0x41f5f6
  41f591:	push   rsp
  41f592:	jb     0x41f5f9
  41f594:	add    BYTE PTR gs:[rax],al
  41f597:	add    ah,cl
  41f599:	add    edi,DWORD PTR [rax+0x6d]
  41f59c:	ins    BYTE PTR es:[rdi],dx
  41f59d:	push   rbx
  41f59e:	movsxd ebp,DWORD PTR [rax+0x65]
  41f5a1:	ins    DWORD PTR es:[rdi],dx
  41f5a2:	(bad)  
  41f5a3:	rex.RX jb 0x41f60b
  41f5a6:	gs add dh,cl
  41f5a9:	add    edi,DWORD PTR [rax+0x6d]
  41f5ac:	ins    BYTE PTR es:[rdi],dx
  41f5ad:	push   rbx
  41f5ae:	movsxd ebp,DWORD PTR [rax+0x65]
  41f5b1:	ins    DWORD PTR es:[rdi],dx
  41f5b2:	(bad)  
  41f5b3:	rex.RX jb 0x41f61b
  41f5b6:	gs push rax
  41f5b8:	(bad)  
  41f5b9:	jb     0x41f62e
  41f5bb:	gs jb  0x41f601
  41f5be:	je     0x41f638
  41f5c0:	je     0x41f5c2
  41f5c2:	add    BYTE PTR [rax],al
  41f5c4:	rol    BYTE PTR [rbx],1
  41f5c6:	js     0x41f635
  41f5c8:	ins    BYTE PTR es:[rdi],dx
  41f5c9:	push   rbx
  41f5ca:	movsxd ebp,DWORD PTR [rax+0x65]
  41f5cd:	ins    DWORD PTR es:[rdi],dx
  41f5ce:	(bad)  
  41f5cf:	rex.RX jb 0x41f637
  41f5d2:	gs push rsi
  41f5d4:	(bad)  
  41f5d5:	ins    BYTE PTR es:[rdi],dx
  41f5d6:	imul   esp,DWORD PTR [rbx+rax*2+0x74],0x7478
  41f5de:	add    BYTE PTR [rax],al
  41f5e0:	jrcxz  0x41f5e5
  41f5e2:	js     0x41f651
  41f5e4:	ins    BYTE PTR es:[rdi],dx
  41f5e5:	push   rbx
  41f5e6:	movsxd ebp,DWORD PTR [rax+0x65]
  41f5e9:	ins    DWORD PTR es:[rdi],dx
  41f5ea:	(bad)  
  41f5eb:	rex.WRX
  41f5ec:	gs ja  0x41f63f
  41f5ef:	(bad)  
  41f5f0:	jb     0x41f665
  41f5f2:	gs jb  0x41f638
  41f5f5:	je     0x41f66f
  41f5f7:	je     0x41f5f9
  41f5f9:	add    BYTE PTR [rax],al
  41f5fb:	add    dh,ah
  41f5fd:	add    edi,DWORD PTR [rax+0x6d]
  41f600:	ins    BYTE PTR es:[rdi],dx
  41f601:	push   rbx
  41f602:	movsxd ebp,DWORD PTR [rax+0x65]
  41f605:	ins    DWORD PTR es:[rdi],dx
  41f606:	(bad)  
  41f607:	rex.WRX
  41f608:	gs ja  0x41f661
  41f60b:	(bad)  
  41f60c:	ins    BYTE PTR es:[rdi],dx
  41f60d:	imul   esp,DWORD PTR [rbx+rax*2+0x74],0xe7007478
  41f615:	add    edi,DWORD PTR [rax+0x6d]
  41f618:	ins    BYTE PTR es:[rdi],dx
  41f619:	push   rbx
  41f61a:	movsxd ebp,DWORD PTR [rax+0x65]
  41f61d:	ins    DWORD PTR es:[rdi],dx
  41f61e:	(bad)  
  41f61f:	push   rax
  41f620:	(bad)  
  41f621:	jb     0x41f696
  41f623:	add    BYTE PTR gs:[rax],al
  41f626:	add    BYTE PTR [rax],al
  41f628:	(bad)  
  41f629:	add    edi,DWORD PTR [rax+0x6d]
  41f62c:	ins    BYTE PTR es:[rdi],dx
  41f62d:	push   rbx
  41f62e:	movsxd ebp,DWORD PTR [rax+0x65]
  41f631:	ins    DWORD PTR es:[rdi],dx
  41f632:	(bad)  
  41f633:	push   rbx
  41f634:	gs je  0x41f687
  41f637:	(bad)  
  41f638:	jb     0x41f6ad
  41f63a:	gs jb  0x41f682
  41f63d:	jb     0x41f6b1
  41f63f:	outs   dx,DWORD PTR ds:[rsi]
  41f640:	jb     0x41f6b5
  41f642:	add    BYTE PTR [rax],al
  41f644:	in     al,dx
  41f645:	add    edi,DWORD PTR [rax+0x6d]
  41f648:	ins    BYTE PTR es:[rdi],dx
  41f649:	push   rbx
  41f64a:	movsxd ebp,DWORD PTR [rax+0x65]
  41f64d:	ins    DWORD PTR es:[rdi],dx
  41f64e:	(bad)  
  41f64f:	push   rbx
  41f650:	gs je  0x41f6a9
  41f653:	(bad)  
  41f654:	ins    BYTE PTR es:[rdi],dx
  41f655:	imul   esp,DWORD PTR [rbp+rax*2+0x72],0x73726f72
  41f65d:	add    BYTE PTR [rax],al
  41f65f:	add    bl,dh
  41f661:	add    edi,DWORD PTR [rax+0x6d]
  41f664:	ins    BYTE PTR es:[rdi],dx
  41f665:	push   rbx
  41f666:	movsxd ebp,DWORD PTR [rax+0x65]
  41f669:	ins    DWORD PTR es:[rdi],dx
  41f66a:	(bad)  
  41f66b:	push   rsi
  41f66c:	(bad)  
  41f66d:	ins    BYTE PTR es:[rdi],dx
  41f66e:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x636f4465
  41f676:	add    BYTE PTR [rax],al
  41f678:	cld    
  41f679:	add    edi,DWORD PTR [rax+0x6d]
  41f67c:	ins    BYTE PTR es:[rdi],dx
  41f67d:	push   rbx
  41f67e:	movsxd ebp,DWORD PTR [rax+0x65]
  41f681:	ins    DWORD PTR es:[rdi],dx
  41f682:	(bad)  
  41f683:	push   rsi
  41f684:	(bad)  
  41f685:	ins    BYTE PTR es:[rdi],dx
  41f686:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x74655365
  41f68e:	imul   r13d,DWORD PTR [rbp+r12*2+0x6e],0x656d61
  41f697:	add    dh,bh
  41f699:	add    edi,DWORD PTR [rax+0x6d]
  41f69c:	ins    BYTE PTR es:[rdi],dx
  41f69d:	push   rbx
  41f69e:	movsxd ebp,DWORD PTR [rax+0x65]
  41f6a1:	ins    DWORD PTR es:[rdi],dx
  41f6a2:	(bad)  
  41f6a3:	push   rsi
  41f6a4:	(bad)  
  41f6a5:	ins    BYTE PTR es:[rdi],dx
  41f6a6:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x72745365
  41f6ae:	gs (bad) 
  41f6b0:	ins    DWORD PTR es:[rdi],dx
  41f6b1:	add    BYTE PTR [rax],al
  41f6b3:	add    BYTE PTR [rsp+rax*1],al
  41f6b6:	js     0x41f725
  41f6b8:	ins    BYTE PTR es:[rdi],dx
  41f6b9:	push   rbx
  41f6ba:	movsxd ebp,DWORD PTR [rax+0x65]
  41f6bd:	ins    DWORD PTR es:[rdi],dx
  41f6be:	(bad)  
  41f6bf:	je     0x41f733
  41f6c1:	outs   dx,DWORD PTR ds:[rsi]
  41f6c2:	outs   dx,BYTE PTR ds:[rsi]
  41f6c3:	rex.RX jb 0x41f72b
  41f6c6:	add    BYTE PTR gs:[rip+0x6c6d7804],al        # 0x6caf6ed1
  41f6cd:	push   rbx
  41f6ce:	movsxd ebp,DWORD PTR [rax+0x65]
  41f6d1:	ins    DWORD PTR es:[rdi],dx
  41f6d2:	(bad)  
  41f6d3:	je     0x41f747
  41f6d5:	outs   dx,DWORD PTR ds:[rsi]
  41f6d6:	outs   dx,BYTE PTR ds:[rsi]
  41f6d7:	rex.RX jb 0x41f73f
  41f6da:	gs push rax
  41f6dc:	(bad)  
  41f6dd:	jb     0x41f752
  41f6df:	gs jb  0x41f725
  41f6e2:	je     0x41f75c
  41f6e4:	je     0x41f6e6
  41f6e6:	add    BYTE PTR [rax],al
  41f6e8:	(bad)  
  41f6e9:	add    al,0x78
  41f6eb:	ins    DWORD PTR es:[rdi],dx
  41f6ec:	ins    BYTE PTR es:[rdi],dx
  41f6ed:	push   rbx
  41f6ee:	movsxd ebp,DWORD PTR [rax+0x65]
  41f6f1:	ins    DWORD PTR es:[rdi],dx
  41f6f2:	(bad)  
  41f6f3:	je     0x41f767
  41f6f5:	outs   dx,DWORD PTR ds:[rsi]
  41f6f6:	outs   dx,BYTE PTR ds:[rsi]
  41f6f7:	rex.RX jb 0x41f75f
  41f6fa:	gs push rsi
  41f6fc:	(bad)  
  41f6fd:	ins    BYTE PTR es:[rdi],dx
  41f6fe:	imul   esp,DWORD PTR [rbx+rax*2+0x74],0x7478
  41f706:	add    BYTE PTR [rax],al
  41f708:	or     DWORD PTR [rax+rdi*2],eax
  41f70b:	ins    DWORD PTR es:[rdi],dx
  41f70c:	ins    BYTE PTR es:[rdi],dx
  41f70d:	push   rbx
  41f70e:	movsxd ebp,DWORD PTR [rax+0x65]
  41f711:	ins    DWORD PTR es:[rdi],dx
  41f712:	(bad)  
  41f713:	je     0x41f787
  41f715:	outs   dx,DWORD PTR ds:[rsi]
  41f716:	outs   dx,BYTE PTR ds:[rsi]
  41f717:	rex.WRX
  41f718:	gs ja  0x41f76b
  41f71b:	(bad)  
  41f71c:	jb     0x41f791
  41f71e:	gs jb  0x41f764
  41f721:	je     0x41f79b
  41f723:	je     0x41f725
  41f725:	add    BYTE PTR [rax],al
  41f727:	add    BYTE PTR [rdx],cl
  41f729:	add    al,0x78
  41f72b:	ins    DWORD PTR es:[rdi],dx
  41f72c:	ins    BYTE PTR es:[rdi],dx
  41f72d:	push   rbx
  41f72e:	movsxd ebp,DWORD PTR [rax+0x65]
  41f731:	ins    DWORD PTR es:[rdi],dx
  41f732:	(bad)  
  41f733:	je     0x41f7a7
  41f735:	outs   dx,DWORD PTR ds:[rsi]
  41f736:	outs   dx,BYTE PTR ds:[rsi]
  41f737:	rex.WRX
  41f738:	gs ja  0x41f791
  41f73b:	(bad)  
  41f73c:	ins    BYTE PTR es:[rdi],dx
  41f73d:	imul   esp,DWORD PTR [rbx+rax*2+0x74],0xb007478
  41f745:	add    al,0x78
  41f747:	ins    DWORD PTR es:[rdi],dx
  41f748:	ins    BYTE PTR es:[rdi],dx
  41f749:	push   rbx
  41f74a:	movsxd ebp,DWORD PTR [rax+0x65]
  41f74d:	ins    DWORD PTR es:[rdi],dx
  41f74e:	(bad)  
  41f74f:	je     0x41f7c3
  41f751:	outs   dx,DWORD PTR ds:[rsi]
  41f752:	outs   dx,BYTE PTR ds:[rsi]
  41f753:	push   rax
  41f754:	(bad)  
  41f755:	jb     0x41f7ca
  41f757:	add    BYTE PTR gs:[rax],al
  41f75a:	add    BYTE PTR [rax],al
  41f75c:	or     eax,0x6c6d7804
  41f761:	push   rbx
  41f762:	movsxd ebp,DWORD PTR [rax+0x65]
  41f765:	ins    DWORD PTR es:[rdi],dx
  41f766:	(bad)  
  41f767:	je     0x41f7db
  41f769:	outs   dx,DWORD PTR ds:[rsi]
  41f76a:	outs   dx,BYTE PTR ds:[rsi]
  41f76b:	push   rsi
  41f76c:	(bad)  
  41f76d:	ins    BYTE PTR es:[rdi],dx
  41f76e:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x636f4465
  41f776:	add    BYTE PTR [rax],al
  41f778:	adc    DWORD PTR [rax+rdi*2],eax
  41f77b:	ins    DWORD PTR es:[rdi],dx
  41f77c:	ins    BYTE PTR es:[rdi],dx
  41f77d:	push   rbx
  41f77e:	gs je  0x41f7c4
  41f781:	outs   dx,DWORD PTR ds:[rsi]
  41f782:	ins    DWORD PTR es:[rdi],dx
  41f783:	jo     0x41f7f7
  41f785:	gs jae 0x41f7fb
  41f788:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  41f78a:	fs add BYTE PTR gs:[rax],al
  41f78e:	add    BYTE PTR [rax],al
  41f790:	adc    al,0x4
  41f792:	js     0x41f801
  41f794:	ins    BYTE PTR es:[rdi],dx
  41f795:	push   rbx
  41f796:	gs je  0x41f7de
  41f799:	js     0x41f80f
  41f79b:	gs jb  0x41f80c
  41f79e:	(bad)  
  41f79f:	ins    BYTE PTR es:[rdi],dx
  41f7a0:	rex.RB outs dx,BYTE PTR ds:[rsi]
  41f7a2:	je     0x41f80d
  41f7a4:	je     0x41f81f
  41f7a6:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41f7a8:	(bad)  
  41f7a9:	fs gs jb 0x41f7ad
  41f7ad:	add    BYTE PTR [rax],al
  41f7af:	add    BYTE PTR [rbx],ch
  41f7b1:	add    al,0x78
  41f7b3:	ins    DWORD PTR es:[rdi],dx
  41f7b4:	ins    BYTE PTR es:[rdi],dx
  41f7b5:	push   rbx
  41f7b6:	je     0x41f82a
  41f7b8:	movsxd esp,DWORD PTR [rcx+0x74]
  41f7bb:	add    BYTE PTR [rsi],ch
  41f7bd:	add    al,0x78
  41f7bf:	ins    DWORD PTR es:[rdi],dx
  41f7c0:	ins    BYTE PTR es:[rdi],dx
  41f7c1:	push   rbx
  41f7c2:	je     0x41f836
  41f7c4:	fs jne 0x41f837
  41f7c7:	add    BYTE PTR [rdi],ch
  41f7c9:	add    al,0x78
  41f7cb:	ins    DWORD PTR es:[rdi],dx
  41f7cc:	ins    BYTE PTR es:[rdi],dx
  41f7cd:	push   rbx
  41f7ce:	je     0x41f842
  41f7d0:	gs (bad) 
  41f7d2:	ins    DWORD PTR es:[rdi],dx
  41f7d3:	push   rax
  41f7d4:	outs   dx,DWORD PTR ds:[rsi]
  41f7d5:	jo     0x41f7d7
  41f7d7:	add    BYTE PTR [rax],dh
  41f7d9:	add    al,0x78
  41f7db:	ins    DWORD PTR es:[rdi],dx
  41f7dc:	ins    BYTE PTR es:[rdi],dx
  41f7dd:	push   rbx
  41f7de:	je     0x41f852
  41f7e0:	gs (bad) 
  41f7e2:	ins    DWORD PTR es:[rdi],dx
  41f7e3:	push   rax
  41f7e4:	jne    0x41f859
  41f7e6:	push   0x78044100
  41f7eb:	ins    DWORD PTR es:[rdi],dx
  41f7ec:	ins    BYTE PTR es:[rdi],dx
  41f7ed:	push   rbx
  41f7ee:	je     0x41f862
  41f7f0:	outs   dx,BYTE PTR ds:[rsi]
  41f7f1:	fs jne 0x41f864
  41f7f4:	add    BYTE PTR [rax],al
  41f7f6:	add    BYTE PTR [rax],al
  41f7f8:	rex.RX add al,0x78
  41f7fb:	ins    DWORD PTR es:[rdi],dx
  41f7fc:	ins    BYTE PTR es:[rdi],dx
  41f7fd:	push   rbx
  41f7fe:	jne    0x41f862
  41f800:	jae    0x41f876
  41f802:	imul   esi,DWORD PTR [rbp+rsi*2+0x74],0x746e4565
  41f80a:	imul   esi,DWORD PTR [rcx+rbp*2+0x65],0x66654473
  41f812:	(bad)  
  41f813:	jne    0x41f881
  41f815:	je     0x41f817
  41f817:	add    BYTE PTR [rbx+0x4],dl
  41f81a:	js     0x41f889
  41f81c:	ins    BYTE PTR es:[rdi],dx
  41f81d:	push   rsp
  41f81e:	gs js  0x41f895
  41f821:	push   rdx
  41f822:	gs (bad) 
  41f824:	fs gs jb 0x41f86b
  41f828:	outs   dx,DWORD PTR ds:[rsi]
  41f829:	outs   dx,BYTE PTR ds:[rsi]
  41f82a:	jae    0x41f8a0
  41f82c:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41f82e:	movsxd esp,DWORD PTR [rcx+0x6c]
  41f831:	rex.WRX (bad) 
  41f833:	ins    DWORD PTR es:[rdi],dx
  41f834:	add    BYTE PTR gs:[rax],al
  41f837:	add    BYTE PTR [rsp+rax*1+0x78],dl
  41f83b:	ins    DWORD PTR es:[rdi],dx
  41f83c:	ins    BYTE PTR es:[rdi],dx
  41f83d:	push   rsp
  41f83e:	gs js  0x41f8b5
  41f841:	push   rdx
  41f842:	gs (bad) 
  41f844:	fs gs jb 0x41f88b
  41f848:	outs   dx,DWORD PTR ds:[rsi]
  41f849:	outs   dx,BYTE PTR ds:[rsi]
  41f84a:	jae    0x41f8c0
  41f84c:	rex.WRX (bad) 
  41f84e:	ins    DWORD PTR es:[rdi],dx
  41f84f:	add    BYTE PTR gs:[rax],al
  41f852:	add    BYTE PTR [rax],al
  41f854:	push   rbp
  41f855:	add    al,0x78
  41f857:	ins    DWORD PTR es:[rdi],dx
  41f858:	ins    BYTE PTR es:[rdi],dx
  41f859:	push   rsp
  41f85a:	gs js  0x41f8d1
  41f85d:	push   rdx
  41f85e:	gs (bad) 
  41f860:	fs gs jb 0x41f8a7
  41f864:	outs   dx,DWORD PTR ds:[rsi]
  41f865:	outs   dx,BYTE PTR ds:[rsi]
  41f866:	jae    0x41f8dc
  41f868:	rex.WRX (bad) 
  41f86a:	ins    DWORD PTR es:[rdi],dx
  41f86b:	gs jae 0x41f8de
  41f86e:	(bad)  
  41f86f:	movsxd esp,DWORD PTR [rbp+0x55]
  41f872:	jb     0x41f8dd
  41f874:	add    BYTE PTR [rax],al
  41f876:	add    BYTE PTR [rax],al
  41f878:	pop    rax
  41f879:	add    al,0x78
  41f87b:	ins    DWORD PTR es:[rdi],dx
  41f87c:	ins    BYTE PTR es:[rdi],dx
  41f87d:	push   rsp
  41f87e:	gs js  0x41f8f5
  41f881:	push   rdx
  41f882:	gs (bad) 
  41f884:	fs gs jb 0x41f8cb
  41f888:	outs   dx,DWORD PTR ds:[rsi]
  41f889:	outs   dx,BYTE PTR ds:[rsi]
  41f88a:	jae    0x41f900
  41f88c:	push   rsi
  41f88d:	(bad)  
  41f88e:	ins    BYTE PTR es:[rdi],dx
  41f88f:	jne    0x41f8f6
  41f891:	add    BYTE PTR [rax],al
  41f893:	add    BYTE PTR [rsp+rax*1+0x78],bl
  41f897:	ins    DWORD PTR es:[rdi],dx
  41f898:	ins    BYTE PTR es:[rdi],dx
  41f899:	push   rsp
  41f89a:	gs js  0x41f911
  41f89d:	push   rdx
  41f89e:	gs (bad) 
  41f8a0:	fs gs jb 0x41f8e7
  41f8a4:	jne    0x41f918
  41f8a6:	jb     0x41f90d
  41f8a8:	outs   dx,BYTE PTR ds:[rsi]
  41f8a9:	je     0x41f8f9
  41f8ab:	outs   dx,DWORD PTR ds:[rsi]
  41f8ac:	fs add BYTE PTR gs:[rax],al
  41f8b0:	pop    rbp
  41f8b1:	add    al,0x78
  41f8b3:	ins    DWORD PTR es:[rdi],dx
  41f8b4:	ins    BYTE PTR es:[rdi],dx
  41f8b5:	push   rsp
  41f8b6:	gs js  0x41f92d
  41f8b9:	push   rdx
  41f8ba:	gs (bad) 
  41f8bc:	fs gs jb 0x41f904
  41f8c0:	gs jo  0x41f937
  41f8c3:	push   0x0
  41f8c8:	push   0x6c6d7804
  41f8cd:	push   rsp
  41f8ce:	gs js  0x41f945
  41f8d1:	push   rdx
  41f8d2:	gs (bad) 
  41f8d4:	fs gs jb 0x41f920
  41f8d8:	(bad)  
  41f8d9:	jae    0x41f931
  41f8db:	(bad)  
  41f8dc:	ins    BYTE PTR es:[rdi],dx
  41f8dd:	jne    0x41f944
  41f8df:	add    BYTE PTR [rdx+0x4],ch
  41f8e2:	js     0x41f951
  41f8e4:	ins    BYTE PTR es:[rdi],dx
  41f8e5:	push   rsp
  41f8e6:	gs js  0x41f95d
  41f8e9:	push   rdx
  41f8ea:	gs (bad) 
  41f8ec:	fs gs jb 0x41f939
  41f8f0:	jae    0x41f937
  41f8f2:	ins    DWORD PTR es:[rdi],dx
  41f8f3:	jo     0x41f969
  41f8f5:	jns    0x41f93c
  41f8f7:	ins    BYTE PTR es:[rdi],dx
  41f8f8:	gs ins DWORD PTR es:[rdi],dx
  41f8fa:	outs   dx,BYTE PTR gs:[rsi]
  41f8fc:	je     0x41f8fe
  41f8fe:	add    BYTE PTR [rax],al
  41f900:	ins    BYTE PTR es:[rdi],dx
  41f901:	add    al,0x78
  41f903:	ins    DWORD PTR es:[rdi],dx
  41f904:	ins    BYTE PTR es:[rdi],dx
  41f905:	push   rsp
  41f906:	gs js  0x41f97d
  41f909:	push   rdx
  41f90a:	gs (bad) 
  41f90c:	fs gs jb 0x41f959
  41f910:	jae    0x41f968
  41f912:	(bad)  
  41f913:	ins    BYTE PTR es:[rdi],dx
  41f914:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6d78047b
  41f91c:	ins    BYTE PTR es:[rdi],dx
  41f91d:	push   rsp
  41f91e:	gs js  0x41f995
  41f921:	push   rdx
  41f922:	gs (bad) 
  41f924:	fs gs jb 0x41f976
  41f928:	outs   dx,DWORD PTR ds:[rsi]
  41f929:	fs gs push rsp
  41f92c:	jns    0x41f99e
  41f92e:	add    BYTE PTR gs:[rcx+0x6c6d7804],al
  41f935:	push   rsp
  41f936:	gs js  0x41f9ad
  41f939:	push   rdx
  41f93a:	gs (bad) 
  41f93c:	fs gs jb 0x41f992
  41f940:	gs (bad) 
  41f942:	add    BYTE PTR fs:[rax+0x6c6d7804],cl
  41f949:	push   rsp
  41f94a:	gs js  0x41f9c1
  41f94d:	push   rdx
  41f94e:	gs (bad) 
  41f950:	fs gs jb 0x41f9a6
  41f954:	gs ins BYTE PTR es:[rdi],dx
  41f956:	(bad)  
  41f957:	js     0x41f9a7
  41f959:	rex.RXB push r14
  41f95b:	(bad)  
  41f95c:	ins    BYTE PTR es:[rdi],dx
  41f95d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x8a000065
  41f965:	add    al,0x78
  41f967:	ins    DWORD PTR es:[rdi],dx
  41f968:	ins    BYTE PTR es:[rdi],dx
  41f969:	push   rsp
  41f96a:	gs js  0x41f9e1
  41f96d:	push   rdx
  41f96e:	gs (bad) 
  41f970:	fs gs jb 0x41f9c7
  41f974:	movsxd ebp,DWORD PTR [rax+0x65]
  41f977:	ins    DWORD PTR es:[rdi],dx
  41f978:	(bad)  
  41f979:	push   rsi
  41f97a:	(bad)  
  41f97b:	ins    BYTE PTR es:[rdi],dx
  41f97c:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x65
  41f984:	lea    eax,[rax+rdi*2]
  41f987:	ins    DWORD PTR es:[rdi],dx
  41f988:	ins    BYTE PTR es:[rdi],dx
  41f989:	push   rsp
  41f98a:	gs js  0x41fa01
  41f98d:	push   rdx
  41f98e:	gs (bad) 
  41f990:	fs gs jb 0x41f9e7
  41f994:	gs je  0x41f9e7
  41f997:	(bad)  
  41f998:	jb     0x41fa0d
  41f99a:	gs jb  0x41f9ed
  41f99d:	jb     0x41fa0e
  41f99f:	jo     0x41f9a1
  41f9a1:	add    BYTE PTR [rax],al
  41f9a3:	add    al,dh
  41f9a5:	add    al,0x78
  41f9a7:	ins    DWORD PTR es:[rdi],dx
  41f9a8:	ins    BYTE PTR es:[rdi],dx
  41f9a9:	push   rsp
  41f9aa:	jb     0x41fa11
  41f9ac:	rex.WB outs dx,BYTE PTR gs:[rsi]
  41f9af:	fs outs dx,BYTE PTR gs:[rsi]
  41f9b2:	je     0x41fa07
  41f9b4:	je     0x41fa28
  41f9b6:	imul   ebp,DWORD PTR [rsi+0x67],0xa2000000
  41f9bd:	add    eax,0x556c6d78
  41f9c2:	outs   dx,BYTE PTR ds:[rsi]
  41f9c3:	ins    BYTE PTR es:[rdi],dx
  41f9c4:	imul   ebp,DWORD PTR [rsi+0x6b],0x65646f4e
  41f9cb:	add    BYTE PTR [rcx+0x6c6d7805],ch
  41f9d1:	push   rsi
  41f9d2:	(bad)  
  41f9d3:	ins    BYTE PTR es:[rdi],dx
  41f9d4:	imul   esp,DWORD PTR [rdi+rax*2+0x65],0x6c615674
  41f9dc:	imul   esp,DWORD PTR [rbp+rax*2+0x6c],0x6e656d65
  41f9e4:	je     0x41fa59
  41f9e6:	add    BYTE PTR [rax],al
  41f9e8:	lods   eax,DWORD PTR ds:[rsi]
  41f9e9:	add    eax,0x566c6d78
  41f9ee:	(bad)  
  41f9ef:	ins    BYTE PTR es:[rdi],dx
  41f9f0:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x636f4465
  41f9f8:	jne    0x41fa67
  41f9fa:	outs   dx,BYTE PTR gs:[rsi]
  41f9fc:	je     0x41f9fe
  41f9fe:	add    BYTE PTR [rax],al
  41fa00:	scas   eax,DWORD PTR es:[rdi]
  41fa01:	add    eax,0x566c6d78
  41fa06:	(bad)  
  41fa07:	ins    BYTE PTR es:[rdi],dx
  41fa08:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x64744465
  41fa10:	add    BYTE PTR [rax],al
  41fa12:	add    BYTE PTR [rax],al
  41fa14:	mov    DWORD PTR [rip+0x586c6d78],0x6c636e49        # 0x58ae6796
  41fa1e:	jne    0x41fa84
  41fa20:	gs push rax
  41fa22:	jb     0x41fa93
  41fa24:	movsxd esp,DWORD PTR [rbp+0x73]
  41fa27:	jae    0x41fa6f
  41fa29:	ins    BYTE PTR es:[rdi],dx
  41fa2a:	(bad)  
  41fa2b:	addr32 jae 0x41fa2e
  41fa2e:	add    BYTE PTR [rax],al
  41fa30:	repnz add eax,0x586c6d78
  41fa36:	push   rax
  41fa37:	(bad)  
  41fa38:	je     0x41faa2
  41fa3a:	rex.RB jbe 0x41fa9e
  41fa3d:	ins    BYTE PTR es:[rdi],dx
  41fa3e:	add    BYTE PTR [rax],al
  41fa40:	cli    
  41fa41:	add    eax,0x586c6d78
  41fa46:	push   rax
  41fa47:	(bad)  
  41fa48:	je     0x41fab2
  41fa4a:	rex.RX jb 0x41fab2
  41fa4d:	rex.XB outs dx,DWORD PTR gs:[rsi]
  41fa50:	outs   dx,BYTE PTR ds:[rsi]
  41fa51:	je     0x41fab8
  41fa53:	js     0x41fac9
  41fa55:	add    BYTE PTR [rax],al
  41fa57:	add    ch,bh
  41fa59:	add    eax,0x586c6d78
  41fa5e:	push   rax
  41fa5f:	(bad)  
  41fa60:	je     0x41faca
  41fa62:	rex.RX jb 0x41faca
  41fa65:	gs rex.WRXB (bad) 
  41fa68:	push   0x65
  41fa6a:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  41fa6e:	add    BYTE PTR [rax],al
  41fa70:	add    eax,0x6c6d7806
  41fa75:	pop    rax
  41fa76:	push   rax
  41fa77:	(bad)  
  41fa78:	je     0x41fae2
  41fa7a:	rex.WB jae 0x41fac6
  41fa7d:	outs   dx,BYTE PTR ds:[rsi]
  41fa7e:	data16 add BYTE PTR [rsi],al
  41fa81:	(bad)  
  41fa82:	js     0x41faf1
  41fa84:	ins    BYTE PTR es:[rdi],dx
  41fa85:	pop    rax
  41fa86:	push   rax
  41fa87:	(bad)  
  41fa88:	je     0x41faf2
  41fa8a:	rex.WB jae 0x41fadb
  41fa8d:	(bad)  
  41fa8e:	rex.WRX add BYTE PTR [rsi+r8*1],r10b
  41fa92:	js     0x41fb01
  41fa94:	ins    BYTE PTR es:[rdi],dx
  41fa95:	pop    rax
  41fa96:	push   rax
  41fa97:	(bad)  
  41fa98:	je     0x41fb02
  41fa9a:	rex.WRX
  41fa9b:	gs ja  0x41fae1
  41fa9e:	outs   dx,DWORD PTR ds:[rsi]
  41fa9f:	outs   dx,BYTE PTR ds:[rsi]
  41faa0:	je     0x41fb07
  41faa2:	js     0x41fb18
  41faa4:	add    BYTE PTR [rax],al
  41faa6:	add    BYTE PTR [rax],al
  41faa8:	fadd   DWORD PTR [rax]
  41faaa:	rex.R
  41faab:	gs ins BYTE PTR es:[rdi],dx
  41faad:	gs je  0x41fb15
  41fab0:	rex.XB jb 0x41fb1c
  41fab3:	je     0x41fb1e
  41fab5:	movsxd esp,DWORD PTR [rcx+0x6c]
  41fab8:	push   rbx
  41fab9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41fabe:	outs   dx,BYTE PTR ds:[rsi]
  41fabf:	add    al,bh
  41fac1:	add    BYTE PTR [rbp+0x6e],al
  41fac4:	je     0x41fb2b
  41fac6:	jb     0x41fb0b
  41fac8:	jb     0x41fb33
  41faca:	je     0x41fb35
  41facc:	movsxd esp,DWORD PTR [rcx+0x6c]
  41facf:	push   rbx
  41fad0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41fad5:	outs   dx,BYTE PTR ds:[rsi]
  41fad6:	add    BYTE PTR [rax],al
  41fad8:	int    0x1
  41fada:	rex.RXB
  41fadb:	gs je  0x41fb21
  41fade:	jne    0x41fb52
  41fae0:	jb     0x41fb47
  41fae2:	outs   dx,BYTE PTR ds:[rsi]
  41fae3:	je     0x41fb35
  41fae5:	jb     0x41fb56
  41fae7:	movsxd esp,DWORD PTR [rbp+0x73]
  41faea:	jae    0x41faec
  41faec:	(bad)  
  41faed:	add    DWORD PTR [rdi+0x65],eax
  41faf0:	je     0x41fb35
  41faf2:	jne    0x41fb66
  41faf4:	jb     0x41fb5b
  41faf6:	outs   dx,BYTE PTR ds:[rsi]
  41faf7:	je     0x41fb49
  41faf9:	jb     0x41fb6a
  41fafb:	movsxd esp,DWORD PTR [rbp+0x73]
  41fafe:	jae    0x41fb49
  41fb00:	fs add dl,dl
  41fb03:	add    DWORD PTR [rdi+0x65],eax
  41fb06:	je     0x41fb4b
  41fb08:	jne    0x41fb7c
  41fb0a:	jb     0x41fb71
  41fb0c:	outs   dx,BYTE PTR ds:[rsi]
  41fb0d:	je     0x41fb63
  41fb0f:	push   0x64616572
  41fb14:	rex.WB
  41fb15:	add    BYTE PTR fs:[rax],al
  41fb18:	adc    BYTE PTR [rdx],al
  41fb1a:	rex.RXB
  41fb1b:	gs je  0x41fb6a
  41fb1e:	(bad)  
  41fb1f:	jae    0x41fb95
  41fb21:	rex.RB jb 0x41fb96
  41fb24:	outs   dx,DWORD PTR ds:[rsi]
  41fb25:	jb     0x41fb27
  41fb27:	add    BYTE PTR [rbx],ah
  41fb29:	add    al,BYTE PTR [rdi+0x65]
  41fb2c:	je     0x41fb7b
  41fb2e:	outs   dx,DWORD PTR ds:[rsi]
  41fb2f:	fs jne 0x41fb9e
  41fb32:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  41fb3c:	add    BYTE PTR [rax],al
  41fb3e:	jae    0x41fb42
  41fb40:	rex.RXB
  41fb41:	gs je  0x41fb97
  41fb44:	je     0x41fba7
  41fb46:	jb     0x41fbbc
  41fb48:	jne    0x41fbba
  41fb4a:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41fb4c:	outs   dx,WORD PTR ds:[rsi]
  41fb4e:	add    BYTE PTR [r10+0x74654702],cl
  41fb55:	push   rbx
  41fb56:	jns    0x41fbcb
  41fb58:	je     0x41fbbf
  41fb5a:	ins    DWORD PTR es:[rdi],dx
  41fb5b:	push   rsp
  41fb5c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  41fb63:	ins    BYTE PTR es:[rdi],dx
  41fb64:	gs push rsp
  41fb66:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  41fb6d:	gs je  0x41fbc4
  41fb70:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  41fb77:	je     0x41fb79
  41fb79:	add    BYTE PTR [rdx+0x74654702],ch
  41fb7f:	push   rsp
  41fb80:	imul   ebp,DWORD PTR [rbp+0x65],0x656e6f5a
  41fb87:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41fb89:	outs   dx,WORD PTR ds:[rsi]
  41fb8b:	jb     0x41fbfa
  41fb8d:	(bad)  
  41fb8e:	je     0x41fbf9
  41fb90:	outs   dx,DWORD PTR ds:[rsi]
  41fb91:	outs   dx,BYTE PTR ds:[rsi]
  41fb92:	add    BYTE PTR [rax],al
  41fb94:	stc    
  41fb95:	add    cl,BYTE PTR [rcx+0x6e]
  41fb98:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  41fba0:	rex.XB jb 0x41fc0c
  41fba3:	je     0x41fc0e
  41fba5:	movsxd esp,DWORD PTR [rcx+0x6c]
  41fba8:	push   rbx
  41fba9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41fbae:	outs   dx,BYTE PTR ds:[rsi]
  41fbaf:	add    BYTE PTR [rbx+0x3],cl
  41fbb2:	rex.WR
  41fbb3:	gs (bad) 
  41fbb5:	jbe    0x41fc1c
  41fbb7:	rex.XB jb 0x41fc23
  41fbba:	je     0x41fc25
  41fbbc:	movsxd esp,DWORD PTR [rcx+0x6c]
  41fbbf:	push   rbx
  41fbc0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41fbc5:	outs   dx,BYTE PTR ds:[rsi]
  41fbc6:	add    BYTE PTR [rax],al
  41fbc8:	mov    ebx,0x65755103
  41fbcd:	jb     0x41fc48
  41fbcf:	push   rax
  41fbd0:	gs jb  0x41fc39
  41fbd3:	outs   dx,DWORD PTR ds:[rsi]
  41fbd4:	jb     0x41fc43
  41fbd6:	(bad)  
  41fbd7:	outs   dx,BYTE PTR ds:[rsi]
  41fbd8:	movsxd esp,DWORD PTR [rbp+0x43]
  41fbdb:	outs   dx,DWORD PTR ds:[rsi]
  41fbdc:	jne    0x41fc4c
  41fbde:	je     0x41fc45
  41fbe0:	jb     0x41fbe2
  41fbe2:	add    DWORD PTR [rdx+rdx*2],eax
  41fbe5:	je     0x41fc53
  41fbe7:	rex.B
  41fbe8:	fs fs rex.RX jne 0x41fc5b
  41fbed:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41fbf1:	outs   dx,BYTE PTR ds:[rsi]
  41fbf2:	push   rsp
  41fbf3:	(bad)  
  41fbf4:	(bad)  
  41fbf5:	ins    BYTE PTR es:[rdi],dx
  41fbf6:	add    BYTE PTR gs:[rdx],al
  41fbf9:	add    al,0x52
  41fbfb:	je     0x41fc69
  41fbfd:	rex.XB (bad) 
  41fbff:	jo     0x41fc75
  41fc01:	jne    0x41fc75
  41fc03:	rex.XB outs dx,DWORD PTR gs:[rsi]
  41fc06:	outs   dx,BYTE PTR ds:[rsi]
  41fc07:	je     0x41fc6e
  41fc09:	js     0x41fc7f
  41fc0b:	add    BYTE PTR [rcx],cl
  41fc0d:	add    al,0x52
  41fc0f:	je     0x41fc7d
  41fc11:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41fc13:	outs   dx,DWORD PTR ds:[rsi]
  41fc14:	imul   esi,DWORD PTR [rbp+0x70],0x46
  41fc18:	jne    0x41fc88
  41fc1a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41fc1e:	outs   dx,BYTE PTR ds:[rsi]
  41fc1f:	rex.RB outs dx,BYTE PTR ds:[rsi]
  41fc21:	je     0x41fc95
  41fc23:	jns    0x41fc25
  41fc25:	add    BYTE PTR [rax],dl
  41fc27:	add    al,0x52
  41fc29:	je     0x41fc97
  41fc2b:	push   rsi
  41fc2c:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  41fc33:	outs   dx,BYTE PTR ds:[rsi]
  41fc34:	ja     0x41fc9f
  41fc36:	outs   dx,BYTE PTR ds:[rsi]
  41fc37:	add    BYTE PTR fs:[rax],al
  41fc3a:	lahf   
  41fc3b:	add    al,0x53
  41fc3d:	gs je  0x41fc95
  41fc40:	outs   dx,BYTE PTR ds:[rsi]
  41fc41:	push   0x6c646e61
  41fc46:	gs fs rex.RB js 0x41fcae
  41fc4b:	gs jo  0x41fcc2
  41fc4e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  41fc55:	gs jb  0x41fc58
  41fc58:	lods   al,BYTE PTR ds:[rsi]
  41fc59:	add    al,0x53
  41fc5b:	ins    BYTE PTR es:[rdi],dx
  41fc5c:	gs gs jo 0x41fc60
  41fc60:	mov    edx,0x72655404
  41fc65:	ins    DWORD PTR es:[rdi],dx
  41fc66:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  41fc6d:	outs   dx,DWORD PTR ds:[rsi]
  41fc6e:	movsxd esp,DWORD PTR [rbp+0x73]
  41fc71:	jae    0x41fc73
  41fc73:	add    cl,al
  41fc75:	add    al,0x54
  41fc77:	ins    BYTE PTR es:[rdi],dx
  41fc78:	jae    0x41fcc1
  41fc7a:	gs je  0x41fcd3
  41fc7d:	(bad)  
  41fc7e:	ins    BYTE PTR es:[rdi],dx
  41fc7f:	jne    0x41fce6
  41fc81:	add    dh,cl
  41fc83:	add    al,0x55
  41fc85:	outs   dx,BYTE PTR ds:[rsi]
  41fc86:	push   0x6c646e61
  41fc8b:	gs fs rex.RB js 0x41fcf3
  41fc90:	gs jo  0x41fd07
  41fc93:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  41fc9a:	gs jb  0x41fc9d
  41fc9d:	add    ah,ch
  41fc9f:	add    al,0x56
  41fca1:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  41fca8:	jb     0x41fd19
  41fcaa:	je     0x41fd11
  41fcac:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  41fcb0:	out    dx,al
  41fcb1:	add    al,0x56
  41fcb3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  41fcba:	jne    0x41fd21
  41fcbc:	jb     0x41fd37
  41fcbe:	add    BYTE PTR [rax],al
  41fcc0:	(bad)  
  41fcc1:	add    BYTE PTR [rdi+0x5f],bl
  41fcc4:	rex.XB pop r15
  41fcc6:	jae    0x41fd38
  41fcc8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  41fccc:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  41fcd3:	ins    BYTE PTR es:[rdi],dx
  41fcd4:	gs jb  0x41fcd7
  41fcd7:	add    BYTE PTR [rsi+0x0],cl
  41fcda:	pop    rdi
  41fcdb:	pop    rdi
  41fcdc:	fs ins BYTE PTR es:[rdi],dx
  41fcde:	ins    BYTE PTR es:[rdi],dx
  41fcdf:	outs   dx,DWORD PTR ds:[rsi]
  41fce0:	outs   dx,BYTE PTR ds:[rsi]
  41fce1:	gs js  0x41fd4d
  41fce4:	je     0x41fce6
  41fce6:	push   rcx
  41fce7:	add    BYTE PTR [rdi+0x5f],bl
  41fcea:	addr32 gs je 0x41fd5b
  41fcee:	(bad)  
  41fcef:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  41fcf6:	push   rdx
  41fcf7:	add    BYTE PTR [rdi+0x5f],bl
  41fcfa:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  41fd01:	add    BYTE PTR [rbx+0x0],dl
  41fd04:	pop    rdi
  41fd05:	pop    rdi
  41fd06:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  41fd0d:	movsxd eax,DWORD PTR [rax]
  41fd0f:	add    BYTE PTR [rdx+0x0],bl
  41fd12:	pop    rdi
  41fd13:	pop    rdi
  41fd14:	ins    BYTE PTR es:[rdi],dx
  41fd15:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41fd18:	jbe    0x41fd79
  41fd1a:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  41fd21:	add    BYTE PTR [rdi+0x5f],bl
  41fd24:	jae    0x41fd8b
  41fd26:	je     0x41fd87
  41fd28:	(bad)  
  41fd29:	jo     0x41fd9b
  41fd2b:	pop    rdi
  41fd2c:	je     0x41fda7
  41fd2e:	jo     0x41fd95
  41fd30:	add    BYTE PTR [rax],al
  41fd32:	(bad)  
  41fd33:	add    BYTE PTR [rdi+0x5f],bl
  41fd36:	jae    0x41fd9d
  41fd38:	je     0x41fdaf
  41fd3a:	jae    0x41fda1
  41fd3c:	jb     0x41fdab
  41fd3e:	(bad)  
  41fd3f:	je     0x41fda9
  41fd41:	gs jb  0x41fdb6
  41fd44:	add    BYTE PTR [rax],al
  41fd46:	jno    0x41fd48
  41fd48:	pop    rdi
  41fd49:	(bad)  
  41fd4a:	movsxd ebp,DWORD PTR [rbp+0x64]
  41fd4d:	ins    BYTE PTR es:[rdi],dx
  41fd4e:	outs   dx,BYTE PTR ds:[rsi]
  41fd4f:	add    BYTE PTR [rax+0x0],bh
  41fd52:	pop    rdi
  41fd53:	(bad)  
  41fd54:	ins    DWORD PTR es:[rdi],dx
  41fd55:	jae    0x41fdbe
  41fd57:	pop    rdi
  41fd58:	gs js  0x41fdc4
  41fd5b:	je     0x41fd5d
  41fd5d:	add    BYTE PTR [rdx+0x65635f00],cl
  41fd63:	js     0x41fdce
  41fd65:	je     0x41fd67
  41fd67:	add    bl,al
  41fd69:	add    BYTE PTR [rdi+0x65],bl
  41fd6c:	js     0x41fdd7
  41fd6e:	je     0x41fd70
  41fd70:	fiadd  DWORD PTR [rax]
  41fd72:	pop    rdi
  41fd73:	ins    WORD PTR es:[rdi],dx
  41fd75:	outs   dx,DWORD PTR ds:[rsi]
  41fd76:	fs add BYTE PTR gs:[rax],al
  41fd7a:	sbb    al,BYTE PTR [rcx]
  41fd7c:	pop    rdi
  41fd7d:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  41fd84:	ins    DWORD PTR es:[rdi],dx
  41fd85:	add    BYTE PTR [rax+0x6f6c5f01],al
  41fd8b:	movsxd ebp,DWORD PTR [rbx+0x0]
  41fd8e:	and    eax,0x6e6f5f02
  41fd93:	gs js  0x41fdff
  41fd96:	je     0x41fd98
  41fd98:	movsxd eax,DWORD PTR [rdx]
  41fd9a:	pop    rdi
  41fd9b:	jae    0x41fe0b
  41fd9d:	ja     0x41fe0f
  41fd9f:	jb     0x41fe0a
  41fda1:	outs   dx,BYTE PTR ds:[rsi]
  41fda2:	je     0x41fe0a
  41fda4:	add    BYTE PTR [rax],al
  41fda6:	(bad)
  41fdaa:	outs   dx,BYTE PTR ds:[rsi]
  41fdab:	ins    BYTE PTR es:[rdi],dx
  41fdac:	outs   dx,DWORD PTR ds:[rsi]
  41fdad:	movsxd ebp,DWORD PTR [rbx+0x0]
  41fdb0:	loope  0x41fdb4
  41fdb2:	pop    rdi
  41fdb3:	jbe    0x41fe28
  41fdb5:	outs   dx,BYTE PTR ds:[rsi]
  41fdb6:	jo     0x41fe2a
  41fdb8:	imul   ebp,DWORD PTR [rsi+0x74],0x7f000066
  41fdbf:	add    esp,DWORD PTR [rcx+0x62]
  41fdc2:	outs   dx,DWORD PTR ds:[rsi]
  41fdc3:	jb     0x41fe39
  41fdc5:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  41fdcc:	add    BYTE PTR [rax],al
  41fdce:	nop
  41fdcf:	add    esp,DWORD PTR [rbx+0x61]
  41fdd2:	ins    BYTE PTR es:[rdi],dx
  41fdd3:	ins    BYTE PTR es:[rdi],dx
  41fdd4:	outs   dx,DWORD PTR ds:[rsi]
  41fdd5:	movsxd eax,DWORD PTR [rax]
  41fdd7:	add    BYTE PTR [rbp+0x69786503],bl
  41fddd:	je     0x41fddf
  41fddf:	add    BYTE PTR [rcx+0x6c636603],ah
  41fde5:	outs   dx,DWORD PTR ds:[rsi]
  41fde6:	jae    0x41fe4d
  41fde8:	add    BYTE PTR [rax],al
  41fdea:	scas   al,BYTE PTR es:[rdi]
  41fdeb:	add    esp,DWORD PTR [rsi+0x6f]
  41fdee:	jo     0x41fe55
  41fdf0:	outs   dx,BYTE PTR ds:[rsi]
  41fdf1:	add    BYTE PTR [rax+0x72706603],dh
  41fdf7:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  41fdfe:	data16 jo 0x41fe76
  41fe01:	je     0x41fe66
  41fe03:	add    BYTE PTR [rbx+0x75706603],dh
  41fe09:	je     0x41fe7e
  41fe0b:	add    BYTE PTR [rsi+0x65726603],dh
  41fe11:	(bad)  
  41fe12:	add    BYTE PTR fs:[rdi+0x65726603],dh
  41fe19:	add    BYTE PTR gs:[rax],al
  41fe1c:	rol    BYTE PTR [rbx],0x66
  41fe1f:	ja     0x41fe91
  41fe21:	jb     0x41fe8c
  41fe23:	outs   dx,BYTE PTR ds:[rsi]
  41fe24:	je     0x41fe8c
  41fe26:	add    BYTE PTR [rax],al
  41fe28:	ret    0x6603
  41fe2b:	ja     0x41fe9f
  41fe2d:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  41fe35:	gs je  0x41fe9d
  41fe38:	outs   dx,BYTE PTR ds:[rsi]
  41fe39:	jbe    0x41fe3b
  41fe3b:	add    al,dh
  41fe3d:	add    ebp,DWORD PTR [rbp+0x61]
  41fe40:	ins    BYTE PTR es:[rdi],dx
  41fe41:	ins    BYTE PTR es:[rdi],dx
  41fe42:	outs   dx,DWORD PTR ds:[rsi]
  41fe43:	movsxd eax,DWORD PTR [rax]
  41fe45:	add    al,bh
  41fe47:	add    ebp,DWORD PTR [rbp+0x65]
  41fe4a:	ins    DWORD PTR es:[rdi],dx
  41fe4b:	movsxd esi,DWORD PTR [rax+0x79]
  41fe4e:	add    BYTE PTR [rax],al
  41fe50:	add    DWORD PTR [rax+rsi*2],eax
  41fe53:	jb     0x41febe
  41fe55:	outs   dx,BYTE PTR ds:[rsi]
  41fe56:	je     0x41febe
  41fe58:	add    BYTE PTR [rax],al
  41fe5a:	add    al,0x4
  41fe5c:	jo     0x41fed3
  41fe5e:	je     0x41fec3
  41fe60:	push   0x5007261
  41fe65:	add    al,0x70
  41fe67:	jne    0x41fedd
  41fe69:	jae    0x41fe6b
  41fe6b:	add    BYTE PTR [rdx],cl
  41fe6d:	add    al,0x72
  41fe6f:	(bad)  
  41fe70:	imul   esi,DWORD PTR [rbx+0x65],0x73041600
  41fe77:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  41fe7e:	(bad)  
  41fe7f:	add    al,0x73
  41fe81:	jae    0x41fee6
  41fe83:	(bad)  
  41fe84:	outs   dx,BYTE PTR ds:[rsi]
  41fe85:	data16 add BYTE PTR [rax],al
  41fe88:	and    al,0x4
  41fe8a:	jae    0x41ff00
  41fe8c:	jb     0x41fef1
  41fe8e:	ins    DWORD PTR es:[rdi],dx
  41fe8f:	jo     0x41fe91
  41fe91:	add    BYTE PTR [rbx],ch
  41fe93:	add    al,0x73
  41fe95:	je     0x41ff09
  41fe97:	ins    BYTE PTR es:[rdi],dx
  41fe98:	outs   dx,BYTE PTR gs:[rsi]
  41fe9a:	add    BYTE PTR [rax],al
  41fe9c:	cs add al,0x73
  41fe9f:	je     0x41ff13
  41fea1:	outs   dx,BYTE PTR ds:[rsi]
  41fea2:	movsxd ebp,DWORD PTR [rbp+0x70]
  41fea5:	add    BYTE PTR [rsi+0x4],cl
  41fea8:	jbe    0x41ff10
  41feaa:	jo     0x41ff1e
  41feac:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  41feb3:	add    al,0x77
  41feb5:	movsxd esi,DWORD PTR [rbx+0x63]
  41feb8:	jo     0x41ff33
  41feba:	add    BYTE PTR [rax],al
  41febc:	movabs ds:0x65746972775f04,eax
  41fec5:	add    al,dh
  41fec7:	add    DWORD PTR [rbp+0x65],ecx
  41feca:	jae    0x41ff3f
  41fecc:	(bad)  
  41fecd:	rex.X outs dx,DWORD PTR gs:[esi]
  41fed1:	js     0x41ff2a
  41fed3:	add    BYTE PTR [rax],al
  41fed5:	loopne 0x41fed8
  41fed7:	add    BYTE PTR [rax],al
  41fed9:	loopne 0x41fedc
  41fedb:	add    BYTE PTR [rax],al
  41fedd:	loopne 0x41fee0
  41fedf:	add    BYTE PTR [rax],al
  41fee1:	loopne 0x41fee4
  41fee3:	add    BYTE PTR [rax],al
  41fee5:	loopne 0x41fee8
  41fee7:	add    BYTE PTR [rax],al
  41fee9:	loopne 0x41feec
  41feeb:	add    BYTE PTR [rax],al
  41feed:	loopne 0x41fef0
  41feef:	add    BYTE PTR [rax],al
  41fef1:	loopne 0x41fef4
  41fef3:	add    BYTE PTR [rax],al
  41fef5:	loopne 0x41fef8
  41fef7:	add    BYTE PTR [rax],al
  41fef9:	loopne 0x41fefc
  41fefb:	add    BYTE PTR [rax],al
  41fefd:	loopne 0x41ff00
  41feff:	add    BYTE PTR [rax],al
  41ff01:	loopne 0x41ff04
  41ff03:	add    BYTE PTR [rax],al
  41ff05:	loopne 0x41ff08
  41ff07:	add    BYTE PTR [rax],al
  41ff09:	loopne 0x41ff0c
  41ff0b:	add    BYTE PTR [rax],al
  41ff0d:	loopne 0x41ff10
  41ff0f:	add    BYTE PTR [rax],al
  41ff11:	loopne 0x41ff14
  41ff13:	add    BYTE PTR [rax],al
  41ff15:	loopne 0x41ff18
  41ff17:	add    BYTE PTR [rax],al
  41ff19:	loopne 0x41ff1c
  41ff1b:	add    BYTE PTR [rax],al
  41ff1d:	loopne 0x41ff20
  41ff1f:	add    BYTE PTR [rax],al
  41ff21:	loopne 0x41ff24
  41ff23:	add    BYTE PTR [rax],al
  41ff25:	loopne 0x41ff28
  41ff27:	add    BYTE PTR [rax],al
  41ff29:	loopne 0x41ff2c
  41ff2b:	add    BYTE PTR [rax],al
  41ff2d:	loopne 0x41ff30
  41ff2f:	add    BYTE PTR [rax],al
  41ff31:	loopne 0x41ff34
  41ff33:	add    BYTE PTR [rax],al
  41ff35:	loopne 0x41ff38
  41ff37:	add    BYTE PTR [rax],al
  41ff39:	loopne 0x41ff3c
  41ff3b:	add    BYTE PTR [rax],al
  41ff3d:	loopne 0x41ff40
  41ff3f:	add    BYTE PTR [rax],al
  41ff41:	loopne 0x41ff44
  41ff43:	add    BYTE PTR [rax],al
  41ff45:	loopne 0x41ff48
  41ff47:	add    BYTE PTR [rax],al
  41ff49:	loopne 0x41ff4c
  41ff4b:	add    BYTE PTR [rax],al
  41ff4d:	loopne 0x41ff50
  41ff4f:	add    BYTE PTR [rax],al
  41ff51:	loopne 0x41ff54
  41ff53:	add    BYTE PTR [rax],al
  41ff55:	loopne 0x41ff58
  41ff57:	add    BYTE PTR [rax],al
  41ff59:	loopne 0x41ff5c
  41ff5b:	add    BYTE PTR [rax],al
  41ff5d:	loopne 0x41ff60
  41ff5f:	add    BYTE PTR [rax],al
  41ff61:	loopne 0x41ff64
  41ff63:	add    BYTE PTR [rax],al
  41ff65:	loopne 0x41ff68
  41ff67:	add    BYTE PTR [rax],al
  41ff69:	loopne 0x41ff6c
  41ff6b:	add    BYTE PTR [rax],al
  41ff6d:	loopne 0x41ff70
  41ff6f:	add    BYTE PTR [rax],al
  41ff71:	loopne 0x41ff74
  41ff73:	add    BYTE PTR [rax],al
  41ff75:	loopne 0x41ff78
  41ff77:	add    BYTE PTR [rax],al
  41ff79:	loopne 0x41ff7c
  41ff7b:	add    BYTE PTR [rax],al
  41ff7d:	loopne 0x41ff80
  41ff7f:	add    BYTE PTR [rax],al
  41ff81:	loopne 0x41ff84
  41ff83:	add    BYTE PTR [rax],al
  41ff85:	loopne 0x41ff88
  41ff87:	add    BYTE PTR [rax],al
  41ff89:	loopne 0x41ff8c
  41ff8b:	add    BYTE PTR [rax],al
  41ff8d:	loopne 0x41ff90
  41ff8f:	add    BYTE PTR [rax],al
  41ff91:	loopne 0x41ff94
  41ff93:	add    BYTE PTR [rax],al
  41ff95:	loopne 0x41ff98
  41ff97:	add    BYTE PTR [rax],al
  41ff99:	loopne 0x41ff9c
  41ff9b:	add    BYTE PTR [rax],al
  41ff9d:	loopne 0x41ffa0
  41ff9f:	add    BYTE PTR [rax],al
  41ffa1:	loopne 0x41ffa4
  41ffa3:	add    BYTE PTR [rax],al
  41ffa5:	loopne 0x41ffa8
  41ffa7:	add    BYTE PTR [rax],al
  41ffa9:	loopne 0x41ffac
  41ffab:	add    BYTE PTR [rax],al
  41ffad:	loopne 0x41ffb0
  41ffaf:	add    BYTE PTR [rax],al
  41ffb1:	loopne 0x41ffb4
  41ffb3:	add    BYTE PTR [rax],al
  41ffb5:	loopne 0x41ffb8
  41ffb7:	add    BYTE PTR [rax],al
  41ffb9:	loopne 0x41ffbc
  41ffbb:	add    BYTE PTR [rax],al
  41ffbd:	loopne 0x41ffc0
  41ffbf:	add    BYTE PTR [rax],al
  41ffc1:	loopne 0x41ffc4
  41ffc3:	add    BYTE PTR [rax],al
  41ffc5:	loopne 0x41ffc8
  41ffc7:	add    BYTE PTR [rax],al
  41ffc9:	loopne 0x41ffcc
  41ffcb:	add    BYTE PTR [rax],al
  41ffcd:	loopne 0x41ffd0
  41ffcf:	add    BYTE PTR [rax],al
  41ffd1:	loopne 0x41ffd4
  41ffd3:	add    BYTE PTR [rax],al
  41ffd5:	loopne 0x41ffd8
  41ffd7:	add    BYTE PTR [rax],al
  41ffd9:	loopne 0x41ffdc
  41ffdb:	add    BYTE PTR [rax],al
  41ffdd:	loopne 0x41ffe0
  41ffdf:	add    BYTE PTR [rax],al
  41ffe1:	loopne 0x41ffe4
  41ffe3:	add    BYTE PTR [rax],al
  41ffe5:	loopne 0x41ffe8
  41ffe7:	add    BYTE PTR [rax],al
  41ffe9:	loopne 0x41ffec
  41ffeb:	add    BYTE PTR [rax],al
  41ffed:	loopne 0x41fff0
  41ffef:	add    BYTE PTR [rax],al
  41fff1:	loopne 0x41fff4
  41fff3:	add    BYTE PTR [rax],al
  41fff5:	loopne 0x41fff8
  41fff7:	add    BYTE PTR [rax],al
  41fff9:	loopne 0x41fffc
  41fffb:	add    BYTE PTR [rax],al
  41fffd:	loopne 0x420000
  41ffff:	add    BYTE PTR [rax],al
  420001:	loopne 0x420004
  420003:	add    BYTE PTR [rax],al
  420005:	loopne 0x420008
  420007:	add    BYTE PTR [rax],al
  420009:	loopne 0x42000c
  42000b:	add    BYTE PTR [rax],al
  42000d:	loopne 0x420010
  42000f:	add    BYTE PTR [rax],al
  420011:	loopne 0x420014
  420013:	add    BYTE PTR [rax],al
  420015:	loopne 0x420018
  420017:	add    BYTE PTR [rax],al
  420019:	loopne 0x42001c
  42001b:	add    BYTE PTR [rax],al
  42001d:	loopne 0x420020
  42001f:	add    BYTE PTR [rax],al
  420021:	loopne 0x420024
  420023:	add    BYTE PTR [rax],al
  420025:	loopne 0x420028
  420027:	add    BYTE PTR [rax],al
  420029:	loopne 0x42002c
  42002b:	add    BYTE PTR [rax],al
  42002d:	loopne 0x420030
  42002f:	add    BYTE PTR [rax],al
  420031:	loopne 0x420034
  420033:	add    BYTE PTR [rax],al
  420035:	loopne 0x420038
  420037:	add    BYTE PTR [rax],al
  420039:	loopne 0x42003c
  42003b:	add    BYTE PTR [rax],al
  42003d:	loopne 0x420040
  42003f:	add    BYTE PTR [rax],al
  420041:	loopne 0x420044
  420043:	add    BYTE PTR [rax],al
  420045:	loopne 0x420048
  420047:	add    BYTE PTR [rax],al
  420049:	loopne 0x42004c
  42004b:	add    BYTE PTR [rax],al
  42004d:	loopne 0x420050
  42004f:	add    BYTE PTR [rax],al
  420051:	loopne 0x420054
  420053:	add    BYTE PTR [rax],al
  420055:	loopne 0x420058
  420057:	add    BYTE PTR [rax],al
  420059:	loopne 0x42005c
  42005b:	add    BYTE PTR [rax],al
  42005d:	loopne 0x420060
  42005f:	add    BYTE PTR [rax],al
  420061:	loopne 0x420064
  420063:	add    BYTE PTR [rax],al
  420065:	loopne 0x420068
  420067:	add    BYTE PTR [rax],al
  420069:	loopne 0x42006c
  42006b:	add    BYTE PTR [rax],al
  42006d:	loopne 0x420070
  42006f:	add    BYTE PTR [rax],al
  420071:	loopne 0x420074
  420073:	add    BYTE PTR [rax],al
  420075:	loopne 0x420078
  420077:	add    BYTE PTR [rax],al
  420079:	loopne 0x42007c
  42007b:	add    BYTE PTR [rax],al
  42007d:	loopne 0x420080
  42007f:	add    BYTE PTR [rax],al
  420081:	loopne 0x420084
  420083:	add    BYTE PTR [rax],al
  420085:	loopne 0x420088
  420087:	add    BYTE PTR [rax],al
  420089:	loopne 0x42008c
  42008b:	add    BYTE PTR [rax],al
  42008d:	loopne 0x420090
  42008f:	add    BYTE PTR [rax],al
  420091:	loopne 0x420094
  420093:	add    BYTE PTR [rax],al
  420095:	loopne 0x420098
  420097:	add    BYTE PTR [rax],al
  420099:	loopne 0x42009c
  42009b:	add    BYTE PTR [rax],al
  42009d:	loopne 0x4200a0
  42009f:	add    BYTE PTR [rax],al
  4200a1:	loopne 0x4200a4
  4200a3:	add    BYTE PTR [rax],al
  4200a5:	loopne 0x4200a8
  4200a7:	add    BYTE PTR [rax],al
  4200a9:	loopne 0x4200ac
  4200ab:	add    BYTE PTR [rax],al
  4200ad:	loopne 0x4200b0
  4200af:	add    BYTE PTR [rax],al
  4200b1:	loopne 0x4200b4
  4200b3:	add    BYTE PTR [rax],al
  4200b5:	loopne 0x4200b8
  4200b7:	add    BYTE PTR [rax],al
  4200b9:	loopne 0x4200bc
  4200bb:	add    BYTE PTR [rax],al
  4200bd:	loopne 0x4200c0
  4200bf:	add    BYTE PTR [rax],al
  4200c1:	loopne 0x4200c4
  4200c3:	add    BYTE PTR [rax],al
  4200c5:	loopne 0x4200c8
  4200c7:	add    BYTE PTR [rax],al
  4200c9:	loopne 0x4200cc
  4200cb:	add    BYTE PTR [rax],al
  4200cd:	loopne 0x4200d0
  4200cf:	add    BYTE PTR [rax],al
  4200d1:	loopne 0x4200d4
  4200d3:	add    BYTE PTR [rax],al
  4200d5:	loopne 0x4200d8
  4200d7:	add    BYTE PTR [rax],al
  4200d9:	loopne 0x4200dc
  4200db:	add    BYTE PTR [rax],al
  4200dd:	loopne 0x4200e0
  4200df:	add    BYTE PTR [rax],al
  4200e1:	loopne 0x4200e4
  4200e3:	add    BYTE PTR [rax],al
  4200e5:	loopne 0x4200e8
  4200e7:	add    BYTE PTR [rax],al
  4200e9:	loopne 0x4200ec
  4200eb:	add    BYTE PTR [rax],al
  4200ed:	loopne 0x4200f0
  4200ef:	add    BYTE PTR [rax],al
  4200f1:	loopne 0x4200f4
  4200f3:	add    BYTE PTR [rax],al
  4200f5:	loopne 0x4200f8
  4200f7:	add    BYTE PTR [rax],al
  4200f9:	loopne 0x4200fc
  4200fb:	add    BYTE PTR [rax],al
  4200fd:	loopne 0x420100
  4200ff:	add    BYTE PTR [rax],al
  420101:	loopne 0x420104
  420103:	add    BYTE PTR [rax],al
  420105:	loopne 0x420108
  420107:	add    BYTE PTR [rax],al
  420109:	loopne 0x42010c
  42010b:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  42010f:	js     0x42017e
  420111:	ins    BYTE PTR es:[rdi],dx
  420112:	xor    ch,BYTE PTR [rip+0x6c642e32]        # 0x6ca62f4a
  420118:	ins    BYTE PTR es:[rdi],dx
  420119:	add    BYTE PTR [rax],al
  42011b:	add    BYTE PTR [rax+riz*8],dl
  42011e:	add    DWORD PTR [rax],eax
  420120:	adc    al,0xe0
  420122:	add    DWORD PTR [rax],eax
  420124:	adc    al,0xe0
  420126:	add    DWORD PTR [rax],eax
  420128:	adc    al,0xe0
  42012a:	add    DWORD PTR [rax],eax
  42012c:	adc    al,0xe0
  42012e:	add    DWORD PTR [rax],eax
  420130:	adc    al,0xe0
  420132:	add    DWORD PTR [rax],eax
  420134:	adc    al,0xe0
  420136:	add    DWORD PTR [rax],eax
  420138:	adc    al,0xe0
  42013a:	add    DWORD PTR [rax],eax
  42013c:	adc    al,0xe0
  42013e:	add    DWORD PTR [rax],eax
  420140:	adc    al,0xe0
  420142:	add    DWORD PTR [rax],eax
  420144:	adc    al,0xe0
  420146:	add    DWORD PTR [rax],eax
  420148:	adc    al,0xe0
  42014a:	add    DWORD PTR [rax],eax
  42014c:	adc    al,0xe0
  42014e:	add    DWORD PTR [rax],eax
  420150:	adc    al,0xe0
  420152:	add    DWORD PTR [rax],eax
  420154:	adc    al,0xe0
  420156:	add    DWORD PTR [rax],eax
  420158:	adc    al,0xe0
  42015a:	add    DWORD PTR [rax],eax
  42015c:	adc    al,0xe0
  42015e:	add    DWORD PTR [rax],eax
  420160:	adc    al,0xe0
  420162:	add    DWORD PTR [rax],eax
  420164:	adc    al,0xe0
  420166:	add    DWORD PTR [rax],eax
  420168:	adc    al,0xe0
  42016a:	add    DWORD PTR [rax],eax
  42016c:	adc    al,0xe0
  42016e:	add    DWORD PTR [rax],eax
  420170:	adc    al,0xe0
  420172:	add    DWORD PTR [rax],eax
  420174:	adc    al,0xe0
  420176:	add    DWORD PTR [rax],eax
  420178:	adc    al,0xe0
  42017a:	add    DWORD PTR [rax],eax
  42017c:	adc    al,0xe0
  42017e:	add    DWORD PTR [rax],eax
  420180:	rex.WXB
  420181:	rex.RB push r10
  420183:	rex.WRX
  420184:	rex.RB
  420185:	xor    r14,QWORD PTR [rdx]
  420188:	cs fs ins BYTE PTR es:[rdi],dx
  42018b:	ins    BYTE PTR es:[rdi],dx
  42018c:	add    BYTE PTR [rax],al
  42018e:	add    BYTE PTR [rax],al
  420190:	sub    al,ah
  420192:	add    DWORD PTR [rax],eax
  420194:	sub    al,ah
  420196:	add    DWORD PTR [rax],eax
  420198:	sub    al,ah
  42019a:	add    DWORD PTR [rax],eax
  42019c:	sub    al,ah
  42019e:	add    DWORD PTR [rax],eax
  4201a0:	sub    al,ah
  4201a2:	add    DWORD PTR [rax],eax
  4201a4:	sub    al,ah
  4201a6:	add    DWORD PTR [rax],eax
  4201a8:	sub    al,ah
  4201aa:	add    DWORD PTR [rax],eax
  4201ac:	sub    al,ah
  4201ae:	add    DWORD PTR [rax],eax
  4201b0:	sub    al,ah
  4201b2:	add    DWORD PTR [rax],eax
  4201b4:	sub    al,ah
  4201b6:	add    DWORD PTR [rax],eax
  4201b8:	sub    al,ah
  4201ba:	add    DWORD PTR [rax],eax
  4201bc:	sub    al,ah
  4201be:	add    DWORD PTR [rax],eax
  4201c0:	sub    al,ah
  4201c2:	add    DWORD PTR [rax],eax
  4201c4:	sub    al,ah
  4201c6:	add    DWORD PTR [rax],eax
  4201c8:	sub    al,ah
  4201ca:	add    DWORD PTR [rax],eax
  4201cc:	sub    al,ah
  4201ce:	add    DWORD PTR [rax],eax
  4201d0:	sub    al,ah
  4201d2:	add    DWORD PTR [rax],eax
  4201d4:	sub    al,ah
  4201d6:	add    DWORD PTR [rax],eax
  4201d8:	sub    al,ah
  4201da:	add    DWORD PTR [rax],eax
  4201dc:	sub    al,ah
  4201de:	add    DWORD PTR [rax],eax
  4201e0:	sub    al,ah
  4201e2:	add    DWORD PTR [rax],eax
  4201e4:	sub    al,ah
  4201e6:	add    DWORD PTR [rax],eax
  4201e8:	sub    al,ah
  4201ea:	add    DWORD PTR [rax],eax
  4201ec:	sub    al,ah
  4201ee:	add    DWORD PTR [rax],eax
  4201f0:	sub    al,ah
  4201f2:	add    DWORD PTR [rax],eax
  4201f4:	sub    al,ah
  4201f6:	add    DWORD PTR [rax],eax
  4201f8:	sub    al,ah
  4201fa:	add    DWORD PTR [rax],eax
  4201fc:	sub    al,ah
  4201fe:	add    DWORD PTR [rax],eax
  420200:	sub    al,ah
  420202:	add    DWORD PTR [rax],eax
  420204:	sub    al,ah
  420206:	add    DWORD PTR [rax],eax
  420208:	sub    al,ah
  42020a:	add    DWORD PTR [rax],eax
  42020c:	sub    al,ah
  42020e:	add    DWORD PTR [rax],eax
  420210:	sub    al,ah
  420212:	add    DWORD PTR [rax],eax
  420214:	sub    al,ah
  420216:	add    DWORD PTR [rax],eax
  420218:	sub    al,ah
  42021a:	add    DWORD PTR [rax],eax
  42021c:	sub    al,ah
  42021e:	add    DWORD PTR [rax],eax
  420220:	sub    al,ah
  420222:	add    DWORD PTR [rax],eax
  420224:	sub    al,ah
  420226:	add    DWORD PTR [rax],eax
  420228:	sub    al,ah
  42022a:	add    DWORD PTR [rax],eax
  42022c:	sub    al,ah
  42022e:	add    DWORD PTR [rax],eax
  420230:	sub    al,ah
  420232:	add    DWORD PTR [rax],eax
  420234:	sub    al,ah
  420236:	add    DWORD PTR [rax],eax
  420238:	sub    al,ah
  42023a:	add    DWORD PTR [rax],eax
  42023c:	sub    al,ah
  42023e:	add    DWORD PTR [rax],eax
  420240:	sub    al,ah
  420242:	add    DWORD PTR [rax],eax
  420244:	sub    al,ah
  420246:	add    DWORD PTR [rax],eax
  420248:	sub    al,ah
  42024a:	add    DWORD PTR [rax],eax
  42024c:	ins    DWORD PTR es:[rdi],dx
  42024d:	jae    0x4202c5
  42024f:	movsxd esi,DWORD PTR [rdx+0x74]
  420252:	cs fs ins BYTE PTR es:[rdi],dx
  420255:	ins    BYTE PTR es:[rdi],dx
  420256:	add    BYTE PTR [rax],al
  420258:	cmp    al,0xe0
  42025a:	add    DWORD PTR [rax],eax
  42025c:	push   rbp
  42025d:	push   rbx
  42025e:	rex.RB push r10
  420260:	xor    esi,DWORD PTR [rdx]
  420262:	cs fs ins BYTE PTR es:[rdi],dx
  420265:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000421000 <.CRT>:
	...
  421008:	(bad)  
  421009:	adc    DWORD PTR [rax+0x0],eax
	...
  421020:	adc    BYTE PTR [rax],dl
  421022:	add    BYTE PTR [rax],al
  421025:	add    BYTE PTR [rax],al
  421027:	add    al,al
  421029:	push   rdi
  42102a:	add    BYTE PTR [rax],al
	...
  42103d:	add    BYTE PTR [rax],al
  42103f:	add    al,dh
  421041:	pop    rcx
  421042:	add    BYTE PTR [rax],al
  421045:	add    BYTE PTR [rax],al
  421047:	add    al,al
  421049:	pop    rcx
  42104a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000422000 <.tls>:
	...
  422020:	add    BYTE PTR [rax],ah
  422022:	rex.X add BYTE PTR [rax],al
  422025:	add    BYTE PTR [rax],al
  422027:	add    BYTE PTR [rax+0x20],ah
  42202a:	rex.X add BYTE PTR [rax],al
  42202d:	add    BYTE PTR [rax],al
  42202f:	add    BYTE PTR [rbp+rcx*8+0x41],bl
  422033:	add    BYTE PTR [rax],al
  422035:	add    BYTE PTR [rax],al
  422037:	add    BYTE PTR [rax+0x10],al
  42203a:	rex.X add BYTE PTR [rax],al
	...
