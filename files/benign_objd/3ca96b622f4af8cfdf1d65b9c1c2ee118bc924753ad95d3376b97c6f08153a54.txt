
3ca96b622f4af8cfdf1d65b9c1c2ee118bc924753ad95d3376b97c6f08153a54.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	rex push rdi
   140001002:	sub    rsp,0x20
   140001006:	xor    edx,edx
   140001008:	lea    rcx,[rip+0xc819]        # 0x14000d828
   14000100f:	lea    r8d,[rdx+0x28]
   140001013:	call   0x14000809c
   140001018:	and    DWORD PTR [rip+0xc7f9],0x0        # 0x14000d818
   14000101f:	lea    rdi,[rip+0xc7ea]        # 0x14000d810
   140001026:	and    QWORD PTR [rip+0xc7f2],0x0        # 0x14000d820
   14000102e:	lea    rcx,[rip+0xc7f3]        # 0x14000d828
   140001035:	and    DWORD PTR [rip+0xc7e0],0x0        # 0x14000d81c
   14000103c:	and    QWORD PTR [rip+0xc80c],0x0        # 0x14000d850
   140001044:	mov    QWORD PTR [rip+0xc74d],rdi        # 0x14000d798
   14000104b:	call   0x140003b6c
   140001050:	test   eax,eax
   140001052:	jns    0x14000105d
   140001054:	mov    BYTE PTR [rip+0xc729],0x1        # 0x14000d784
   14000105b:	jmp    0x140001067
   14000105d:	mov    DWORD PTR [rip+0xc7b1],0x38        # 0x14000d818
   140001067:	lea    rax,[rip+0x88a2]        # 0x140009910
   14000106e:	mov    QWORD PTR [rip+0xc73b],rdi        # 0x14000d7b0
   140001075:	lea    rcx,[rip+0x7a54]        # 0x140008ad0
   14000107c:	mov    QWORD PTR [rip+0xc78d],rax        # 0x14000d810
   140001083:	add    rsp,0x20
   140001087:	pop    rdi
   140001088:	jmp    0x140007fec
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	sub    rsp,0x28
   140001094:	call   0x14000646c
   140001099:	lea    rcx,[rip+0x7a50]        # 0x140008af0
   1400010a0:	add    rsp,0x28
   1400010a4:	jmp    0x140007fec
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	rex push rbx
   1400010b2:	sub    rsp,0x20
   1400010b6:	xor    edx,edx
   1400010b8:	lea    rcx,[rip+0xc819]        # 0x14000d8d8
   1400010bf:	lea    r8d,[rdx+0x28]
   1400010c3:	call   0x14000809c
   1400010c8:	and    QWORD PTR [rip+0xc830],0x0        # 0x14000d900
   1400010d0:	lea    rax,[rip+0xffffffffffffef29]        # 0x140000000
   1400010d7:	and    DWORD PTR [rip+0xc82a],0x0        # 0x14000d908
   1400010de:	lea    rcx,[rip+0xc7f3]        # 0x14000d8d8
   1400010e5:	and    DWORD PTR [rip+0xc820],0x0        # 0x14000d90c
   1400010ec:	mov    ebx,0x1
   1400010f1:	mov    QWORD PTR [rip+0xc7c8],rax        # 0x14000d8c0
   1400010f8:	mov    QWORD PTR [rip+0xc7b9],rax        # 0x14000d8b8
   1400010ff:	lea    rax,[rip+0x8efa]        # 0x14000a000
   140001106:	mov    QWORD PTR [rip+0xc7c3],rax        # 0x14000d8d0
   14000110d:	mov    DWORD PTR [rip+0xc799],0x60        # 0x14000d8b0
   140001117:	mov    BYTE PTR [rip+0xc7ab],bl        # 0x14000d8c8
   14000111d:	mov    DWORD PTR [rip+0xc7a5],0x800        # 0x14000d8cc
   140001127:	call   0x140003b6c
   14000112c:	movzx  ecx,BYTE PTR [rip+0xc651]        # 0x14000d784
   140001133:	test   eax,eax
   140001135:	cmovs  ecx,ebx
   140001138:	mov    BYTE PTR [rip+0xc646],cl        # 0x14000d784
   14000113e:	lea    rcx,[rip+0x79db]        # 0x140008b20
   140001145:	add    rsp,0x20
   140001149:	pop    rbx
   14000114a:	jmp    0x140007fec
   14000114f:	int3   
   140001150:	sub    rsp,0x28
   140001154:	xor    edx,edx
   140001156:	lea    rcx,[rip+0xc7bb]        # 0x14000d918
   14000115d:	lea    r8d,[rdx+0x28]
   140001161:	call   0x14000809c
   140001166:	and    QWORD PTR [rip+0xc7da],0x0        # 0x14000d948
   14000116e:	lea    rcx,[rip+0xc7a3]        # 0x14000d918
   140001175:	and    DWORD PTR [rip+0xc7d4],0x0        # 0x14000d950
   14000117c:	and    DWORD PTR [rip+0xc7d1],0x0        # 0x14000d954
   140001183:	and    QWORD PTR [rip+0xc7b5],0x0        # 0x14000d940
   14000118b:	mov    DWORD PTR [rip+0xc77b],0x48        # 0x14000d910
   140001195:	call   0x140003b6c
   14000119a:	test   eax,eax
   14000119c:	jns    0x1400011ac
   14000119e:	and    DWORD PTR [rip+0xc76b],0x0        # 0x14000d910
   1400011a5:	mov    BYTE PTR [rip+0xc5d8],0x1        # 0x14000d784
   1400011ac:	lea    rcx,[rip+0x79bd]        # 0x140008b70
   1400011b3:	add    rsp,0x28
   1400011b7:	jmp    0x140007fec
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	sub    rsp,0x28
   1400011c4:	xor    edx,edx
   1400011c6:	lea    rcx,[rip+0xc7b3]        # 0x14000d980
   1400011cd:	lea    r8d,[rdx+0x28]
   1400011d1:	call   0x14000809c
   1400011d6:	and    DWORD PTR [rip+0xc783],0x0        # 0x14000d960
   1400011dd:	lea    rax,[rip+0xffffffffffffee1c]        # 0x140000000
   1400011e4:	mov    QWORD PTR [rip+0xc77d],rax        # 0x14000d968
   1400011eb:	lea    rcx,[rip+0xc78e]        # 0x14000d980
   1400011f2:	lea    rax,[rip+0xa6bf]        # 0x14000b8b8
   1400011f9:	mov    QWORD PTR [rip+0xc770],rax        # 0x14000d970
   140001200:	lea    rax,[rip+0xa6b1]        # 0x14000b8b8
   140001207:	mov    QWORD PTR [rip+0xc76a],rax        # 0x14000d978
   14000120e:	call   0x140003b6c
   140001213:	test   eax,eax
   140001215:	jns    0x140001220
   140001217:	mov    BYTE PTR [rip+0xc566],0x1        # 0x14000d784
   14000121e:	jmp    0x14000122a
   140001220:	mov    DWORD PTR [rip+0xc736],0x48        # 0x14000d960
   14000122a:	lea    rcx,[rip+0x7a2f]        # 0x140008c60
   140001231:	add    rsp,0x28
   140001235:	jmp    0x140007fec
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	int3   
   140001241:	int3   
   140001242:	int3   
   140001243:	int3   
   140001244:	int3   
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    rcx,QWORD PTR [rcx]
   140001253:	rex.W jmp QWORD PTR [rip+0x7fa6]        # 0x140009200
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	xor    r9d,r9d
   140001263:	mov    r8d,ecx
   140001266:	lea    rcx,[rip+0xc5a3]        # 0x14000d810
   14000126d:	lea    edx,[r9+0x65]
   140001271:	jmp    0x1400061c0
   140001276:	int3   
   140001277:	int3   
   140001278:	int3   
   140001279:	int3   
   14000127a:	int3   
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	rex push rbx
   140001282:	sub    rsp,0x20
   140001286:	mov    rbx,rcx
   140001289:	mov    rcx,QWORD PTR [rbx+0x58]
   14000128d:	or     edx,0xffffffff
   140001290:	call   QWORD PTR [rip+0x7dd2]        # 0x140009068
   140001296:	mov    rcx,QWORD PTR [rbx+0x58]
   14000129a:	mov    edx,0x1388
   14000129f:	mov    BYTE PTR [rbx+0x60],0x0
   1400012a3:	call   QWORD PTR [rip+0x7dbf]        # 0x140009068
   1400012a9:	test   eax,eax
   1400012ab:	je     0x140001296
   1400012ad:	cmp    BYTE PTR [rbx+0x60],0x0
   1400012b1:	jne    0x140001289
   1400012b3:	cmp    DWORD PTR [rbx+0xc],0x0
   1400012b7:	jne    0x140001289
   1400012b9:	mov    rcx,QWORD PTR [rbx+0x58]
   1400012bd:	call   QWORD PTR [rip+0x7dad]        # 0x140009070
   1400012c3:	mov    ecx,DWORD PTR [rbx+0x50]
   1400012c6:	xor    r9d,r9d
   1400012c9:	xor    r8d,r8d
   1400012cc:	lea    edx,[r9+0x12]
   1400012d0:	call   QWORD PTR [rip+0x7f5a]        # 0x140009230
   1400012d6:	xor    eax,eax
   1400012d8:	add    rsp,0x20
   1400012dc:	pop    rbx
   1400012dd:	ret    
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	int3   
   1400012e1:	int3   
   1400012e2:	int3   
   1400012e3:	int3   
   1400012e4:	int3   
   1400012e5:	int3   
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	mov    eax,0x1
   1400012f5:	lock xadd DWORD PTR [rcx+0xc],eax
   1400012fa:	inc    eax
   1400012fc:	ret    
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	int3   
   140001301:	int3   
   140001302:	int3   
   140001303:	int3   
   140001304:	int3   
   140001305:	int3   
   140001306:	int3   
   140001307:	int3   
   140001308:	int3   
   140001309:	int3   
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	rex push rbx
   140001312:	sub    rsp,0x20
   140001316:	or     ebx,0xffffffff
   140001319:	lock xadd DWORD PTR [rcx+0xc],ebx
   14000131e:	sub    ebx,0x1
   140001321:	jne    0x140001331
   140001323:	mov    BYTE PTR [rcx+0x60],0x1
   140001327:	mov    rcx,QWORD PTR [rcx+0x58]
   14000132b:	call   QWORD PTR [rip+0x7d2f]        # 0x140009060
   140001331:	mov    eax,ebx
   140001333:	add    rsp,0x20
   140001337:	pop    rbx
   140001338:	ret    
   140001339:	int3   
   14000133a:	int3   
   14000133b:	int3   
   14000133c:	int3   
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	mov    QWORD PTR [rsp+0x8],rbx
   140001345:	push   rdi
   140001346:	sub    rsp,0x20
   14000134a:	lea    rax,[rip+0x860f]        # 0x140009960
   140001351:	mov    ebx,edx
   140001353:	mov    QWORD PTR [rcx],rax
   140001356:	mov    rdi,rcx
   140001359:	call   0x140003b94
   14000135e:	test   bl,0x1
   140001361:	je     0x14000136b
   140001363:	mov    rcx,rdi
   140001366:	call   0x140007618
   14000136b:	mov    rax,rdi
   14000136e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001373:	add    rsp,0x20
   140001377:	pop    rdi
   140001378:	ret    
   140001379:	int3   
   14000137a:	int3   
   14000137b:	int3   
   14000137c:	int3   
   14000137d:	int3   
   14000137e:	int3   
   14000137f:	int3   
   140001380:	mov    QWORD PTR [rsp+0x8],rbx
   140001385:	mov    QWORD PTR [rsp+0x10],rsi
   14000138a:	push   rdi
   14000138b:	sub    rsp,0x20
   14000138f:	xor    esi,esi
   140001391:	mov    rdi,rdx
   140001394:	test   rcx,rcx
   140001397:	mov    rbx,rcx
   14000139a:	je     0x1400013e0
   14000139c:	cmp    WORD PTR [rbx],si
   14000139f:	je     0x1400013e0
   1400013a1:	mov    rax,rdi
   1400013a4:	test   rdi,rdi
   1400013a7:	je     0x1400013c4
   1400013a9:	movzx  ecx,WORD PTR [rax]
   1400013ac:	test   cx,cx
   1400013af:	je     0x1400013c4
   1400013b1:	cmp    WORD PTR [rbx],cx
   1400013b4:	je     0x1400013d5
   1400013b6:	mov    rcx,rax
   1400013b9:	call   QWORD PTR [rip+0x7e79]        # 0x140009238
   1400013bf:	test   rax,rax
   1400013c2:	jne    0x1400013a9
   1400013c4:	mov    rcx,rbx
   1400013c7:	call   QWORD PTR [rip+0x7e6b]        # 0x140009238
   1400013cd:	mov    rbx,rax
   1400013d0:	test   rax,rax
   1400013d3:	jmp    0x14000139a
   1400013d5:	mov    rcx,rbx
   1400013d8:	call   QWORD PTR [rip+0x7e5a]        # 0x140009238
   1400013de:	jmp    0x1400013e2
   1400013e0:	xor    eax,eax
   1400013e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013e7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400013ec:	add    rsp,0x20
   1400013f0:	pop    rdi
   1400013f1:	ret    
   1400013f2:	int3   
   1400013f3:	int3   
   1400013f4:	int3   
   1400013f5:	int3   
   1400013f6:	int3   
   1400013f7:	int3   
   1400013f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400013fd:	mov    QWORD PTR [rsp+0x10],rbp
   140001402:	mov    QWORD PTR [rsp+0x18],rsi
   140001407:	push   rdi
   140001408:	push   r14
   14000140a:	push   r15
   14000140c:	sub    rsp,0xa0
   140001413:	mov    rax,QWORD PTR [rip+0xbc06]        # 0x14000d020
   14000141a:	xor    rax,rsp
   14000141d:	mov    QWORD PTR [rsp+0x90],rax
   140001425:	call   QWORD PTR [rip+0x7c6d]        # 0x140009098
   14000142b:	xor    ecx,ecx
   14000142d:	mov    rbp,rax
   140001430:	call   QWORD PTR [rip+0x7f7a]        # 0x1400093b0
   140001436:	xor    r15d,r15d
   140001439:	xor    r9d,r9d
   14000143c:	mov    QWORD PTR [rsp+0x40],r15
   140001441:	xor    r8d,r8d
   140001444:	mov    DWORD PTR [rsp+0x38],0x8
   14000144c:	or     edx,0xffffffff
   14000144f:	mov    QWORD PTR [rsp+0x30],r15
   140001454:	xor    ecx,ecx
   140001456:	mov    DWORD PTR [rsp+0x28],0x2
   14000145e:	mov    DWORD PTR [rsp+0x20],0x6
   140001466:	call   QWORD PTR [rip+0x7f3c]        # 0x1400093a8
   14000146c:	movups xmm0,XMMWORD PTR [rip+0x8a75]        # 0x140009ee8
   140001473:	lea    rdi,[rip+0xbbb6]        # 0x14000d030
   14000147a:	lea    esi,[r15+0x1]
   14000147e:	movdqu XMMWORD PTR [rip+0xc302],xmm0        # 0x14000d788
   140001486:	cmp    rdi,0xffffffffffffffff
   14000148a:	je     0x1400014b7
   14000148c:	cmp    QWORD PTR [rip+0xbb9d],r15        # 0x14000d030
   140001493:	mov    QWORD PTR [rip+0xc3be],rdi        # 0x14000d858
   14000149a:	je     0x1400014b7
   14000149c:	mov    rbx,QWORD PTR [rdi+0x40]
   1400014a0:	mov    rcx,rbx
   1400014a3:	call   QWORD PTR [rip+0x7f37]        # 0x1400093e0
   1400014a9:	mov    cl,sil
   1400014ac:	call   rbx
   1400014ae:	lea    rdi,[rdi+0x48]
   1400014b2:	cmp    QWORD PTR [rdi],r15
   1400014b5:	jne    0x14000149c
   1400014b7:	mov    rdi,QWORD PTR [rip+0xc4b2]        # 0x14000d970
   1400014be:	mov    rax,QWORD PTR [rip+0xc4b3]        # 0x14000d978
   1400014c5:	jmp    0x1400014ec
   1400014c7:	mov    rbx,QWORD PTR [rdi]
   1400014ca:	test   rbx,rbx
   1400014cd:	je     0x1400014e8
   1400014cf:	mov    rbx,QWORD PTR [rbx+0x40]
   1400014d3:	mov    rcx,rbx
   1400014d6:	call   QWORD PTR [rip+0x7f04]        # 0x1400093e0
   1400014dc:	mov    cl,sil
   1400014df:	call   rbx
   1400014e1:	mov    rax,QWORD PTR [rip+0xc490]        # 0x14000d978
   1400014e8:	add    rdi,0x8
   1400014ec:	cmp    rdi,rax
   1400014ef:	jb     0x1400014c7
   1400014f1:	call   QWORD PTR [rip+0x7ba9]        # 0x1400090a0
   1400014f7:	mov    DWORD PTR [rip+0xc363],eax        # 0x14000d860
   1400014fd:	mov    r14d,r15d
   140001500:	mov    eax,DWORD PTR [rip+0x84da]        # 0x1400099e0
   140001506:	mov    rcx,rbp
   140001509:	mov    DWORD PTR [rsp+0x88],eax
   140001510:	movzx  eax,WORD PTR [rip+0x84cd]        # 0x1400099e4
   140001517:	mov    WORD PTR [rsp+0x8c],ax
   14000151f:	jmp    0x140001554
   140001521:	lea    rdx,[rip+0x84c0]        # 0x1400099e8
   140001528:	mov    rcx,rbx
   14000152b:	call   QWORD PTR [rip+0x7c1f]        # 0x140009150
   140001531:	test   eax,eax
   140001533:	je     0x140001629
   140001539:	lea    rdx,[rip+0x84c0]        # 0x140009a00
   140001540:	mov    rcx,rbx
   140001543:	call   QWORD PTR [rip+0x7c07]        # 0x140009150
   140001549:	test   eax,eax
   14000154b:	je     0x1400015ff
   140001551:	mov    rcx,rbx
   140001554:	lea    rdx,[rsp+0x88]
   14000155c:	call   0x140001380
   140001561:	mov    rbx,rax
   140001564:	test   rax,rax
   140001567:	jne    0x140001521
   140001569:	xor    r9d,r9d
   14000156c:	xor    r8d,r8d
   14000156f:	xor    edx,edx
   140001571:	xor    ecx,ecx
   140001573:	call   QWORD PTR [rip+0x7aff]        # 0x140009078
   140001579:	mov    QWORD PTR [rip+0xc2e8],rax        # 0x14000d868
   140001580:	test   rax,rax
   140001583:	je     0x1400015ba
   140001585:	lea    rax,[rsp+0x50]
   14000158a:	xor    edx,edx
   14000158c:	mov    QWORD PTR [rsp+0x28],rax
   140001591:	lea    r9,[rip+0xc278]        # 0x14000d810
   140001598:	lea    r8,[rip+0xfffffffffffffce1]        # 0x140001280
   14000159f:	mov    DWORD PTR [rsp+0x20],r15d
   1400015a4:	xor    ecx,ecx
   1400015a6:	call   QWORD PTR [rip+0x7ad4]        # 0x140009080
   1400015ac:	test   rax,rax
   1400015af:	je     0x1400015ba
   1400015b1:	mov    rcx,rax
   1400015b4:	call   QWORD PTR [rip+0x7ab6]        # 0x140009070
   1400015ba:	mov    rbx,QWORD PTR [rip+0xc297]        # 0x14000d858
   1400015c1:	mov    eax,r15d
   1400015c4:	test   rbx,rbx
   1400015c7:	je     0x1400015ef
   1400015c9:	cmp    QWORD PTR [rbx],r15
   1400015cc:	je     0x1400015ef
   1400015ce:	test   eax,eax
   1400015d0:	jne    0x14000167d
   1400015d6:	mov    rcx,rbx
   1400015d9:	call   0x140002e8c
   1400015de:	add    rbx,0x48
   1400015e2:	cmp    QWORD PTR [rbx],r15
   1400015e5:	jne    0x1400015ce
   1400015e7:	test   eax,eax
   1400015e9:	jne    0x14000167d
   1400015ef:	mov    rbx,QWORD PTR [rip+0xc37a]        # 0x14000d970
   1400015f6:	mov    rax,QWORD PTR [rip+0xc37b]        # 0x14000d978
   1400015fd:	jmp    0x14000166b
   1400015ff:	xor    r9d,r9d
   140001602:	lea    rcx,[rip+0xc207]        # 0x14000d810
   140001609:	mov    r8d,esi
   14000160c:	lea    edx,[r9+0x64]
   140001610:	call   0x1400061c0
   140001615:	lea    rcx,[rip+0xc1f4]        # 0x14000d810
   14000161c:	call   0x140003138
   140001621:	mov    r14d,eax
   140001624:	jmp    0x140001719
   140001629:	xor    r9d,r9d
   14000162c:	lea    rcx,[rip+0xc1dd]        # 0x14000d810
   140001633:	xor    r8d,r8d
   140001636:	lea    edx,[r9+0x64]
   14000163a:	call   0x1400061c0
   14000163f:	lea    rcx,[rip+0xc1ca]        # 0x14000d810
   140001646:	call   0x140003984
   14000164b:	jmp    0x140001621
   14000164d:	test   esi,esi
   14000164f:	js     0x14000167d
   140001651:	mov    rcx,QWORD PTR [rbx]
   140001654:	test   rcx,rcx
   140001657:	je     0x140001667
   140001659:	call   0x140002e8c
   14000165e:	mov    esi,eax
   140001660:	mov    rax,QWORD PTR [rip+0xc311]        # 0x14000d978
   140001667:	add    rbx,0x8
   14000166b:	cmp    rbx,rax
   14000166e:	jb     0x14000164d
   140001670:	jmp    0x14000167d
   140001672:	lea    rcx,[rsp+0x58]
   140001677:	call   QWORD PTR [rip+0x7ba3]        # 0x140009220
   14000167d:	xor    r9d,r9d
   140001680:	lea    rcx,[rsp+0x58]
   140001685:	xor    r8d,r8d
   140001688:	xor    edx,edx
   14000168a:	call   QWORD PTR [rip+0x7b98]        # 0x140009228
   140001690:	test   eax,eax
   140001692:	jne    0x140001672
   140001694:	mov    rbx,QWORD PTR [rip+0xc1bd]        # 0x14000d858
   14000169b:	mov    eax,r15d
   14000169e:	test   rbx,rbx
   1400016a1:	je     0x1400016cb
   1400016a3:	cmp    QWORD PTR [rbx],r15
   1400016a6:	je     0x1400016cb
   1400016a8:	test   eax,eax
   1400016aa:	jne    0x14000170e
   1400016ac:	mov    ecx,DWORD PTR [rbx+0x28]
   1400016af:	test   ecx,ecx
   1400016b1:	jne    0x1400016b8
   1400016b3:	mov    eax,r15d
   1400016b6:	jmp    0x1400016be
   1400016b8:	call   QWORD PTR [rip+0x7cd2]        # 0x140009390
   1400016be:	add    rbx,0x48
   1400016c2:	cmp    QWORD PTR [rbx],r15
   1400016c5:	jne    0x1400016a8
   1400016c7:	test   eax,eax
   1400016c9:	jne    0x14000170e
   1400016cb:	mov    rbx,QWORD PTR [rip+0xc29e]        # 0x14000d970
   1400016d2:	mov    eax,r15d
   1400016d5:	mov    rcx,QWORD PTR [rip+0xc29c]        # 0x14000d978
   1400016dc:	jmp    0x140001709
   1400016de:	test   eax,eax
   1400016e0:	jne    0x14000170e
   1400016e2:	mov    rdx,QWORD PTR [rbx]
   1400016e5:	test   rdx,rdx
   1400016e8:	je     0x140001705
   1400016ea:	cmp    DWORD PTR [rdx+0x28],r15d
   1400016ee:	jne    0x1400016f5
   1400016f0:	mov    eax,r15d
   1400016f3:	jmp    0x140001705
   1400016f5:	mov    ecx,DWORD PTR [rdx+0x28]
   1400016f8:	call   QWORD PTR [rip+0x7c92]        # 0x140009390
   1400016fe:	mov    rcx,QWORD PTR [rip+0xc273]        # 0x14000d978
   140001705:	add    rbx,0x8
   140001709:	cmp    rbx,rcx
   14000170c:	jb     0x1400016de
   14000170e:	mov    ecx,0x3e8
   140001713:	call   QWORD PTR [rip+0x798f]        # 0x1400090a8
   140001719:	mov    rdi,QWORD PTR [rip+0xc138]        # 0x14000d858
   140001720:	test   rdi,rdi
   140001723:	je     0x140001763
   140001725:	jmp    0x14000175e
   140001727:	mov    rsi,QWORD PTR [rdi+0x20]
   14000172b:	test   rsi,rsi
   14000172e:	je     0x140001745
   140001730:	mov    rax,QWORD PTR [rsi]
   140001733:	mov    rbx,QWORD PTR [rax+0x10]
   140001737:	mov    rcx,rbx
   14000173a:	call   QWORD PTR [rip+0x7ca0]        # 0x1400093e0
   140001740:	mov    rcx,rsi
   140001743:	call   rbx
   140001745:	mov    rbx,QWORD PTR [rdi+0x40]
   140001749:	mov    rcx,rbx
   14000174c:	mov    QWORD PTR [rdi+0x20],r15
   140001750:	call   QWORD PTR [rip+0x7c8a]        # 0x1400093e0
   140001756:	xor    ecx,ecx
   140001758:	call   rbx
   14000175a:	add    rdi,0x48
   14000175e:	cmp    QWORD PTR [rdi],r15
   140001761:	jne    0x140001727
   140001763:	mov    rdi,QWORD PTR [rip+0xc206]        # 0x14000d970
   14000176a:	mov    rax,QWORD PTR [rip+0xc207]        # 0x14000d978
   140001771:	jmp    0x140001797
   140001773:	mov    rbx,QWORD PTR [rdi]
   140001776:	test   rbx,rbx
   140001779:	je     0x140001793
   14000177b:	mov    rbx,QWORD PTR [rbx+0x40]
   14000177f:	mov    rcx,rbx
   140001782:	call   QWORD PTR [rip+0x7c58]        # 0x1400093e0
   140001788:	xor    ecx,ecx
   14000178a:	call   rbx
   14000178c:	mov    rax,QWORD PTR [rip+0xc1e5]        # 0x14000d978
   140001793:	add    rdi,0x8
   140001797:	cmp    rdi,rax
   14000179a:	jb     0x140001773
   14000179c:	lea    rcx,[rip+0xc06d]        # 0x14000d810
   1400017a3:	call   0x140003b94
   1400017a8:	call   QWORD PTR [rip+0x7bda]        # 0x140009388
   1400017ae:	mov    eax,r14d
   1400017b1:	mov    rcx,QWORD PTR [rsp+0x90]
   1400017b9:	xor    rcx,rsp
   1400017bc:	call   0x140007b00
   1400017c1:	lea    r11,[rsp+0xa0]
   1400017c9:	mov    rbx,QWORD PTR [r11+0x20]
   1400017cd:	mov    rbp,QWORD PTR [r11+0x28]
   1400017d1:	mov    rsi,QWORD PTR [r11+0x30]
   1400017d5:	mov    rsp,r11
   1400017d8:	pop    r15
   1400017da:	pop    r14
   1400017dc:	pop    rdi
   1400017dd:	ret    
   1400017de:	int3   
   1400017df:	int3   
   1400017e0:	int3   
   1400017e1:	int3   
   1400017e2:	int3   
   1400017e3:	int3   
   1400017e4:	int3   
   1400017e5:	int3   
   1400017e6:	int3   
   1400017e7:	int3   
   1400017e8:	int3   
   1400017e9:	int3   
   1400017ea:	int3   
   1400017eb:	int3   
   1400017ec:	int3   
   1400017ed:	int3   
   1400017ee:	int3   
   1400017ef:	int3   
   1400017f0:	xor    eax,eax
   1400017f2:	ret    
   1400017f3:	int3   
   1400017f4:	int3   
   1400017f5:	int3   
   1400017f6:	int3   
   1400017f7:	int3   
   1400017f8:	int3   
   1400017f9:	int3   
   1400017fa:	int3   
   1400017fb:	int3   
   1400017fc:	int3   
   1400017fd:	int3   
   1400017fe:	int3   
   1400017ff:	int3   
   140001800:	test   rdx,rdx
   140001803:	jne    0x14000180b
   140001805:	mov    eax,0x80004003
   14000180a:	ret    
   14000180b:	mov    DWORD PTR [rdx],0x1
   140001811:	xor    eax,eax
   140001813:	ret    
   140001814:	int3   
   140001815:	int3   
   140001816:	int3   
   140001817:	int3   
   140001818:	int3   
   140001819:	int3   
   14000181a:	int3   
   14000181b:	int3   
   14000181c:	int3   
   14000181d:	int3   
   14000181e:	int3   
   14000181f:	int3   
   140001820:	mov    QWORD PTR [rsp+0x8],rbx
   140001825:	push   rdi
   140001826:	sub    rsp,0x20
   14000182a:	mov    rbx,r9
   14000182d:	test   edx,edx
   14000182f:	je     0x140001838
   140001831:	mov    eax,0x8002000b
   140001836:	jmp    0x140001887
   140001838:	test   rbx,rbx
   14000183b:	jne    0x140001844
   14000183d:	mov    eax,0x80004003
   140001842:	jmp    0x140001887
   140001844:	mov    rcx,QWORD PTR [rip+0xb88d]        # 0x14000d0d8
   14000184b:	xor    eax,eax
   14000184d:	test   rcx,rcx
   140001850:	jne    0x140001861
   140001852:	mov    edx,r8d
   140001855:	call   0x140002bc0
   14000185a:	mov    rcx,QWORD PTR [rip+0xb877]        # 0x14000d0d8
   140001861:	mov    QWORD PTR [rbx],rcx
   140001864:	mov    rdi,QWORD PTR [rip+0xb86d]        # 0x14000d0d8
   14000186b:	test   rdi,rdi
   14000186e:	je     0x140001887
   140001870:	mov    rax,QWORD PTR [rdi]
   140001873:	mov    rbx,QWORD PTR [rax+0x8]
   140001877:	mov    rcx,rbx
   14000187a:	call   QWORD PTR [rip+0x7b60]        # 0x1400093e0
   140001880:	mov    rcx,rdi
   140001883:	call   rbx
   140001885:	xor    eax,eax
   140001887:	mov    rbx,QWORD PTR [rsp+0x30]
   14000188c:	add    rsp,0x20
   140001890:	pop    rdi
   140001891:	ret    
   140001892:	int3   
   140001893:	int3   
   140001894:	int3   
   140001895:	int3   
   140001896:	int3   
   140001897:	int3   
   140001898:	int3   
   140001899:	int3   
   14000189a:	int3   
   14000189b:	int3   
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	mov    rax,rsp
   1400018a3:	mov    QWORD PTR [rax+0x8],rbx
   1400018a7:	mov    QWORD PTR [rax+0x10],rbp
   1400018ab:	mov    QWORD PTR [rax+0x20],rsi
   1400018af:	mov    QWORD PTR [rax+0x18],r8
   1400018b3:	push   rdi
   1400018b4:	push   r12
   1400018b6:	push   r13
   1400018b8:	push   r14
   1400018ba:	push   r15
   1400018bc:	sub    rsp,0x20
   1400018c0:	mov    r14,QWORD PTR [rip+0xb811]        # 0x14000d0d8
   1400018c7:	xor    edx,edx
   1400018c9:	mov    r13d,r9d
   1400018cc:	mov    eax,edx
   1400018ce:	test   r14,r14
   1400018d1:	je     0x1400018df
   1400018d3:	mov    rbx,QWORD PTR [rip+0xb80e]        # 0x14000d0e8
   1400018da:	test   rbx,rbx
   1400018dd:	jne    0x1400018fd
   1400018df:	mov    edx,DWORD PTR [rsp+0x70]
   1400018e3:	call   0x140002bc0
   1400018e8:	mov    r8,QWORD PTR [rsp+0x60]
   1400018ed:	xor    edx,edx
   1400018ef:	mov    rbx,QWORD PTR [rip+0xb7f2]        # 0x14000d0e8
   1400018f6:	mov    r14,QWORD PTR [rip+0xb7db]        # 0x14000d0d8
   1400018fd:	test   r14,r14
   140001900:	je     0x140001992
   140001906:	test   rbx,rbx
   140001909:	je     0x140001970
   14000190b:	cmp    r13d,0x1
   14000190f:	jne    0x140001970
   140001911:	mov    r12,QWORD PTR [r8]
   140001914:	test   r12,r12
   140001917:	jne    0x14000191d
   140001919:	mov    esi,edx
   14000191b:	jmp    0x14000192b
   14000191d:	or     rsi,0xffffffffffffffff
   140001921:	inc    rsi
   140001924:	cmp    WORD PTR [r12+rsi*2],dx
   140001929:	jne    0x140001921
   14000192b:	mov    edi,DWORD PTR [rip+0xb7bf]        # 0x14000d0f0
   140001931:	sub    edi,0x1
   140001934:	js     0x140001970
   140001936:	movsxd rbp,edi
   140001939:	mov    r15,rbp
   14000193c:	shl    r15,0x4
   140001940:	add    r15,0x8
   140001944:	add    r15,rbx
   140001947:	cmp    esi,DWORD PTR [r15]
   14000194a:	jne    0x140001964
   14000194c:	movsxd r8,DWORD PTR [r15]
   14000194f:	mov    rdx,r12
   140001952:	mov    rcx,QWORD PTR [r15-0x8]
   140001956:	add    r8,r8
   140001959:	call   0x140008646
   14000195e:	xor    edx,edx
   140001960:	test   eax,eax
   140001962:	je     0x1400019af
   140001964:	dec    edi
   140001966:	sub    r15,0x10
   14000196a:	sub    rbp,0x1
   14000196e:	jns    0x140001947
   140001970:	mov    rax,QWORD PTR [r14]
   140001973:	mov    rbx,QWORD PTR [rax+0x50]
   140001977:	mov    rcx,rbx
   14000197a:	call   QWORD PTR [rip+0x7a60]        # 0x1400093e0
   140001980:	mov    r9,QWORD PTR [rsp+0x78]
   140001985:	mov    r8d,r13d
   140001988:	mov    rdx,QWORD PTR [rsp+0x60]
   14000198d:	mov    rcx,r14
   140001990:	call   rbx
   140001992:	mov    rbx,QWORD PTR [rsp+0x50]
   140001997:	mov    rbp,QWORD PTR [rsp+0x58]
   14000199c:	mov    rsi,QWORD PTR [rsp+0x68]
   1400019a1:	add    rsp,0x20
   1400019a5:	pop    r15
   1400019a7:	pop    r14
   1400019a9:	pop    r13
   1400019ab:	pop    r12
   1400019ad:	pop    rdi
   1400019ae:	ret    
   1400019af:	movsxd rax,edi
   1400019b2:	add    rax,rax
   1400019b5:	mov    ecx,DWORD PTR [rbx+rax*8+0xc]
   1400019b9:	mov    rax,QWORD PTR [rsp+0x78]
   1400019be:	mov    DWORD PTR [rax],ecx
   1400019c0:	mov    eax,edx
   1400019c2:	jmp    0x140001992
   1400019c4:	int3   
   1400019c5:	int3   
   1400019c6:	int3   
   1400019c7:	int3   
   1400019c8:	int3   
   1400019c9:	int3   
   1400019ca:	int3   
   1400019cb:	int3   
   1400019cc:	int3   
   1400019cd:	int3   
   1400019ce:	int3   
   1400019cf:	int3   
   1400019d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400019d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400019da:	mov    QWORD PTR [rsp+0x18],rsi
   1400019df:	push   rdi
   1400019e0:	sub    rsp,0x40
   1400019e4:	mov    rdi,QWORD PTR [rip+0xb6ed]        # 0x14000d0d8
   1400019eb:	xor    eax,eax
   1400019ed:	mov    esi,edx
   1400019ef:	mov    rbp,rcx
   1400019f2:	test   rdi,rdi
   1400019f5:	je     0x140001a00
   1400019f7:	cmp    QWORD PTR [rip+0xb6ea],rax        # 0x14000d0e8
   1400019fe:	jne    0x140001a0f
   140001a00:	mov    edx,r9d
   140001a03:	call   0x140002bc0
   140001a08:	mov    rdi,QWORD PTR [rip+0xb6c9]        # 0x14000d0d8
   140001a0f:	test   rdi,rdi
   140001a12:	je     0x140001a66
   140001a14:	mov    rax,QWORD PTR [rdi]
   140001a17:	mov    rbx,QWORD PTR [rax+0x58]
   140001a1b:	mov    rcx,rbx
   140001a1e:	call   QWORD PTR [rip+0x79bc]        # 0x1400093e0
   140001a24:	mov    rax,QWORD PTR [rsp+0x90]
   140001a2c:	mov    r8d,esi
   140001a2f:	movzx  r9d,WORD PTR [rsp+0x70]
   140001a35:	mov    rdx,rbp
   140001a38:	mov    QWORD PTR [rsp+0x38],rax
   140001a3d:	mov    rcx,rdi
   140001a40:	mov    rax,QWORD PTR [rsp+0x88]
   140001a48:	mov    QWORD PTR [rsp+0x30],rax
   140001a4d:	mov    rax,QWORD PTR [rsp+0x80]
   140001a55:	mov    QWORD PTR [rsp+0x28],rax
   140001a5a:	mov    rax,QWORD PTR [rsp+0x78]
   140001a5f:	mov    QWORD PTR [rsp+0x20],rax
   140001a64:	call   rbx
   140001a66:	mov    rbx,QWORD PTR [rsp+0x50]
   140001a6b:	mov    rbp,QWORD PTR [rsp+0x58]
   140001a70:	mov    rsi,QWORD PTR [rsp+0x60]
   140001a75:	add    rsp,0x40
   140001a79:	pop    rdi
   140001a7a:	ret    
   140001a7b:	int3   
   140001a7c:	int3   
   140001a7d:	int3   
   140001a7e:	int3   
   140001a7f:	int3   
   140001a80:	int3   
   140001a81:	int3   
   140001a82:	int3   
   140001a83:	int3   
   140001a84:	int3   
   140001a85:	int3   
   140001a86:	int3   
   140001a87:	int3   
   140001a88:	int3   
   140001a89:	int3   
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	int3   
   140001a8d:	int3   
   140001a8e:	int3   
   140001a8f:	int3   
   140001a90:	mov    rax,rsp
   140001a93:	mov    QWORD PTR [rax+0x18],r8
   140001a97:	mov    QWORD PTR [rax+0x10],rdx
   140001a9b:	mov    QWORD PTR [rax+0x8],rcx
   140001a9f:	push   rbx
   140001aa0:	push   rsi
   140001aa1:	push   rdi
   140001aa2:	push   r12
   140001aa4:	push   r13
   140001aa6:	push   r14
   140001aa8:	push   r15
   140001aaa:	sub    rsp,0x30
   140001aae:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   140001ab6:	mov    r12,r8
   140001ab9:	mov    r13,rdx
   140001abc:	mov    r15,rcx
   140001abf:	xor    esi,esi
   140001ac1:	test   r8,r8
   140001ac4:	jne    0x140001ad0
   140001ac6:	mov    eax,0x80004003
   140001acb:	jmp    0x140001bf0
   140001ad0:	mov    QWORD PTR [r8],rsi
   140001ad3:	mov    r14d,0x8007000e
   140001ad9:	mov    DWORD PTR [rsp+0x88],r14d
   140001ae1:	mov    QWORD PTR [rsp+0x20],rsi
   140001ae6:	mov    ecx,0x58
   140001aeb:	call   0x140007598
   140001af0:	mov    rdi,rax
   140001af3:	test   rax,rax
   140001af6:	je     0x140001b21
   140001af8:	mov    DWORD PTR [rax+0x8],esi
   140001afb:	xor    edx,edx
   140001afd:	lea    r8d,[rdx+0x28]
   140001b01:	lea    rcx,[rax+0x10]
   140001b05:	call   0x14000809c
   140001b0a:	mov    BYTE PTR [rdi+0x38],sil
   140001b0e:	mov    DWORD PTR [rdi+0x48],esi
   140001b11:	mov    QWORD PTR [rdi+0x50],rsi
   140001b15:	lea    rax,[rip+0x7dcc]        # 0x1400098e8
   140001b1c:	mov    QWORD PTR [rdi],rax
   140001b1f:	jmp    0x140001b24
   140001b21:	mov    rdi,rsi
   140001b24:	mov    QWORD PTR [rsp+0x20],rdi
   140001b29:	jmp    0x140001b4c
   140001b2b:	xor    esi,esi
   140001b2d:	mov    r12,QWORD PTR [rsp+0x80]
   140001b35:	mov    r13,QWORD PTR [rsp+0x78]
   140001b3a:	mov    r15,QWORD PTR [rsp+0x70]
   140001b3f:	mov    r14d,DWORD PTR [rsp+0x88]
   140001b47:	mov    rdi,QWORD PTR [rsp+0x20]
   140001b4c:	test   rdi,rdi
   140001b4f:	je     0x140001bed
   140001b55:	mov    QWORD PTR [rdi+0x40],r15
   140001b59:	lea    rcx,[rdi+0x10]
   140001b5d:	call   0x140003b6c
   140001b62:	mov    r14d,eax
   140001b65:	test   eax,eax
   140001b67:	js     0x140001b6d
   140001b69:	mov    BYTE PTR [rdi+0x38],0x1
   140001b6d:	cmovns r14d,esi
   140001b71:	test   r14d,r14d
   140001b74:	jne    0x140001b97
   140001b76:	mov    rax,QWORD PTR [rdi]
   140001b79:	mov    rbx,QWORD PTR [rax]
   140001b7c:	mov    rcx,rbx
   140001b7f:	call   QWORD PTR [rip+0x785b]        # 0x1400093e0
   140001b85:	mov    r8,r12
   140001b88:	mov    rdx,r13
   140001b8b:	mov    rcx,rdi
   140001b8e:	call   rbx
   140001b90:	mov    r14d,eax
   140001b93:	test   eax,eax
   140001b95:	je     0x140001bed
   140001b97:	mov    DWORD PTR [rdi+0x8],0xc0000001
   140001b9e:	lea    rax,[rip+0x7cf3]        # 0x140009898
   140001ba5:	mov    QWORD PTR [rdi],rax
   140001ba8:	mov    r12,QWORD PTR [rdi+0x50]
   140001bac:	test   r12,r12
   140001baf:	je     0x140001bc7
   140001bb1:	mov    rdx,QWORD PTR [r12]
   140001bb5:	mov    rbx,QWORD PTR [rdx+0x10]
   140001bb9:	mov    rcx,rbx
   140001bbc:	call   QWORD PTR [rip+0x781e]        # 0x1400093e0
   140001bc2:	mov    rcx,r12
   140001bc5:	call   rbx
   140001bc7:	lea    rax,[rip+0x7cf2]        # 0x1400098c0
   140001bce:	mov    QWORD PTR [rdi],rax
   140001bd1:	cmp    BYTE PTR [rdi+0x38],sil
   140001bd5:	je     0x140001be5
   140001bd7:	mov    BYTE PTR [rdi+0x38],sil
   140001bdb:	lea    rcx,[rdi+0x10]
   140001bdf:	call   QWORD PTR [rip+0x74a3]        # 0x140009088
   140001be5:	mov    rcx,rdi
   140001be8:	call   0x140007618
   140001bed:	mov    eax,r14d
   140001bf0:	add    rsp,0x30
   140001bf4:	pop    r15
   140001bf6:	pop    r14
   140001bf8:	pop    r13
   140001bfa:	pop    r12
   140001bfc:	pop    rdi
   140001bfd:	pop    rsi
   140001bfe:	pop    rbx
   140001bff:	ret    
   140001c00:	int3   
   140001c01:	int3   
   140001c02:	int3   
   140001c03:	int3   
   140001c04:	int3   
   140001c05:	int3   
   140001c06:	int3   
   140001c07:	int3   
   140001c08:	int3   
   140001c09:	int3   
   140001c0a:	int3   
   140001c0b:	int3   
   140001c0c:	int3   
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	test   rcx,rcx
   140001c13:	je     0x140001e10
   140001c19:	jmp    0x140001f28
   140001c1e:	int3   
   140001c1f:	int3   
   140001c20:	int3   
   140001c21:	int3   
   140001c22:	int3   
   140001c23:	int3   
   140001c24:	int3   
   140001c25:	int3   
   140001c26:	int3   
   140001c27:	int3   
   140001c28:	int3   
   140001c29:	int3   
   140001c2a:	int3   
   140001c2b:	int3   
   140001c2c:	int3   
   140001c2d:	int3   
   140001c2e:	int3   
   140001c2f:	int3   
   140001c30:	mov    eax,0x1
   140001c35:	lock xadd DWORD PTR [rcx+0x8],eax
   140001c3a:	inc    eax
   140001c3c:	ret    
   140001c3d:	int3   
   140001c3e:	int3   
   140001c3f:	int3   
   140001c40:	int3   
   140001c41:	int3   
   140001c42:	int3   
   140001c43:	int3   
   140001c44:	int3   
   140001c45:	int3   
   140001c46:	int3   
   140001c47:	int3   
   140001c48:	int3   
   140001c49:	int3   
   140001c4a:	int3   
   140001c4b:	int3   
   140001c4c:	int3   
   140001c4d:	int3   
   140001c4e:	int3   
   140001c4f:	int3   
   140001c50:	mov    QWORD PTR [rsp+0x8],rbx
   140001c55:	mov    QWORD PTR [rsp+0x10],rsi
   140001c5a:	mov    QWORD PTR [rsp+0x18],rdi
   140001c5f:	push   r14
   140001c61:	sub    rsp,0x20
   140001c65:	mov    rdi,rcx
   140001c68:	or     esi,0xffffffff
   140001c6b:	lock xadd DWORD PTR [rcx+0x8],esi
   140001c70:	sub    esi,0x1
   140001c73:	jne    0x140001ccf
   140001c75:	test   rcx,rcx
   140001c78:	je     0x140001ccf
   140001c7a:	lea    rax,[rip+0x7c17]        # 0x140009898
   140001c81:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140001c88:	mov    QWORD PTR [rcx],rax
   140001c8b:	mov    r14,QWORD PTR [rcx+0x50]
   140001c8f:	test   r14,r14
   140001c92:	je     0x140001ca9
   140001c94:	mov    rax,QWORD PTR [r14]
   140001c97:	mov    rbx,QWORD PTR [rax+0x10]
   140001c9b:	mov    rcx,rbx
   140001c9e:	call   QWORD PTR [rip+0x773c]        # 0x1400093e0
   140001ca4:	mov    rcx,r14
   140001ca7:	call   rbx
   140001ca9:	lea    rax,[rip+0x7c10]        # 0x1400098c0
   140001cb0:	lea    rcx,[rdi+0x10]
   140001cb4:	mov    QWORD PTR [rdi],rax
   140001cb7:	cmp    BYTE PTR [rcx+0x28],0x0
   140001cbb:	je     0x140001cc7
   140001cbd:	mov    BYTE PTR [rcx+0x28],0x0
   140001cc1:	call   QWORD PTR [rip+0x73c1]        # 0x140009088
   140001cc7:	mov    rcx,rdi
   140001cca:	call   0x140007618
   140001ccf:	mov    rbx,QWORD PTR [rsp+0x30]
   140001cd4:	mov    eax,esi
   140001cd6:	mov    rsi,QWORD PTR [rsp+0x38]
   140001cdb:	mov    rdi,QWORD PTR [rsp+0x40]
   140001ce0:	add    rsp,0x20
   140001ce4:	pop    r14
   140001ce6:	ret    
   140001ce7:	int3   
   140001ce8:	int3   
   140001ce9:	int3   
   140001cea:	int3   
   140001ceb:	int3   
   140001cec:	int3   
   140001ced:	int3   
   140001cee:	int3   
   140001cef:	int3   
   140001cf0:	mov    r9,r8
   140001cf3:	mov    r8,rdx
   140001cf6:	lea    rdx,[rip+0x7d2b]        # 0x140009a28
   140001cfd:	jmp    0x140004024
   140001d02:	int3   
   140001d03:	int3   
   140001d04:	int3   
   140001d05:	int3   
   140001d06:	int3   
   140001d07:	int3   
   140001d08:	int3   
   140001d09:	int3   
   140001d0a:	int3   
   140001d0b:	int3   
   140001d0c:	int3   
   140001d0d:	int3   
   140001d0e:	int3   
   140001d0f:	int3   
   140001d10:	mov    QWORD PTR [rsp+0x10],rbx
   140001d15:	mov    QWORD PTR [rsp+0x18],rsi
   140001d1a:	mov    QWORD PTR [rsp+0x8],rcx
   140001d1f:	push   rdi
   140001d20:	push   r12
   140001d22:	push   r13
   140001d24:	push   r14
   140001d26:	push   r15
   140001d28:	sub    rsp,0x20
   140001d2c:	mov    r15,r9
   140001d2f:	mov    r13,r8
   140001d32:	mov    rdi,rcx
   140001d35:	mov    eax,0x80004003
   140001d3a:	xor    ebx,ebx
   140001d3c:	test   r9,r9
   140001d3f:	je     0x140001df1
   140001d45:	mov    QWORD PTR [r9],rbx
   140001d48:	test   rdx,rdx
   140001d4b:	je     0x140001d57
   140001d4d:	mov    eax,0x80040110
   140001d52:	jmp    0x140001df1
   140001d57:	cmp    DWORD PTR [rcx+0x48],ebx
   140001d5a:	jne    0x140001dcc
   140001d5c:	lea    rsi,[rcx+0x50]
   140001d60:	cmp    QWORD PTR [rsi],rbx
   140001d63:	jne    0x140001dcc
   140001d65:	add    rcx,0x10
   140001d69:	call   QWORD PTR [rip+0x7349]        # 0x1400090b8
   140001d6f:	cmp    DWORD PTR [rdi+0x48],ebx
   140001d72:	jne    0x140001dc2
   140001d74:	cmp    QWORD PTR [rsi],rbx
   140001d77:	jne    0x140001dc2
   140001d79:	lea    rcx,[rsp+0x68]
   140001d7e:	call   0x140002504
   140001d83:	mov    DWORD PTR [rdi+0x48],eax
   140001d86:	test   eax,eax
   140001d88:	js     0x140001dc2
   140001d8a:	mov    r14,QWORD PTR [rsp+0x68]
   140001d8f:	mov    rax,QWORD PTR [r14]
   140001d92:	mov    rbx,QWORD PTR [rax]
   140001d95:	mov    rcx,rbx
   140001d98:	call   QWORD PTR [rip+0x7642]        # 0x1400093e0
   140001d9e:	mov    r8,rsi
   140001da1:	lea    rdx,[rip+0x8288]        # 0x14000a030
   140001da8:	mov    rcx,r14
   140001dab:	call   rbx
   140001dad:	mov    DWORD PTR [rdi+0x48],eax
   140001db0:	test   eax,eax
   140001db2:	jns    0x140001dc2
   140001db4:	mov    rcx,r14
   140001db7:	call   0x14000204c
   140001dbc:	call   0x140007618
   140001dc1:	nop
   140001dc2:	lea    rcx,[rdi+0x10]
   140001dc6:	call   QWORD PTR [rip+0x73b4]        # 0x140009180
   140001dcc:	mov    eax,DWORD PTR [rdi+0x48]
   140001dcf:	test   eax,eax
   140001dd1:	jne    0x140001df1
   140001dd3:	mov    rdi,QWORD PTR [rdi+0x50]
   140001dd7:	mov    rax,QWORD PTR [rdi]
   140001dda:	mov    rbx,QWORD PTR [rax]
   140001ddd:	mov    rcx,rbx
   140001de0:	call   QWORD PTR [rip+0x75fa]        # 0x1400093e0
   140001de6:	mov    r8,r15
   140001de9:	mov    rdx,r13
   140001dec:	mov    rcx,rdi
   140001def:	call   rbx
   140001df1:	mov    rbx,QWORD PTR [rsp+0x58]
   140001df6:	mov    rsi,QWORD PTR [rsp+0x60]
   140001dfb:	add    rsp,0x20
   140001dff:	pop    r15
   140001e01:	pop    r14
   140001e03:	pop    r13
   140001e05:	pop    r12
   140001e07:	pop    rdi
   140001e08:	ret    
   140001e09:	int3   
   140001e0a:	int3   
   140001e0b:	int3   
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	mov    rax,rsp
   140001e13:	mov    QWORD PTR [rax+0x18],r8
   140001e17:	mov    QWORD PTR [rax+0x10],rdx
   140001e1b:	mov    QWORD PTR [rax+0x8],rcx
   140001e1f:	push   rbx
   140001e20:	push   rsi
   140001e21:	push   rdi
   140001e22:	push   r12
   140001e24:	push   r14
   140001e26:	push   r15
   140001e28:	sub    rsp,0x38
   140001e2c:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140001e34:	mov    r14,r8
   140001e37:	mov    r12,rdx
   140001e3a:	test   r8,r8
   140001e3d:	jne    0x140001e49
   140001e3f:	mov    eax,0x80004003
   140001e44:	jmp    0x140001f13
   140001e49:	and    QWORD PTR [r8],0x0
   140001e4d:	mov    r15d,0x8007000e
   140001e53:	mov    DWORD PTR [rsp+0x70],r15d
   140001e58:	and    QWORD PTR [rsp+0x88],0x0
   140001e61:	mov    ecx,0x10
   140001e66:	call   0x140007598
   140001e6b:	mov    rsi,rax
   140001e6e:	mov    QWORD PTR [rsp+0x28],rax
   140001e73:	test   rax,rax
   140001e76:	je     0x140001ea4
   140001e78:	and    DWORD PTR [rax+0x8],0x0
   140001e7c:	lea    rax,[rip+0x798d]        # 0x140009810
   140001e83:	mov    QWORD PTR [rsi],rax
   140001e86:	mov    rdi,QWORD PTR [rip+0xb90b]        # 0x14000d798
   140001e8d:	mov    rax,QWORD PTR [rdi]
   140001e90:	mov    rbx,QWORD PTR [rax+0x8]
   140001e94:	mov    rcx,rbx
   140001e97:	call   QWORD PTR [rip+0x7543]        # 0x1400093e0
   140001e9d:	mov    rcx,rdi
   140001ea0:	call   rbx
   140001ea2:	jmp    0x140001ea6
   140001ea4:	xor    esi,esi
   140001ea6:	mov    QWORD PTR [rsp+0x88],rsi
   140001eae:	jmp    0x140001eca
   140001eb0:	mov    r14,QWORD PTR [rsp+0x80]
   140001eb8:	mov    r12,QWORD PTR [rsp+0x78]
   140001ebd:	mov    r15d,DWORD PTR [rsp+0x70]
   140001ec2:	mov    rsi,QWORD PTR [rsp+0x88]
   140001eca:	test   rsi,rsi
   140001ecd:	je     0x140001f10
   140001ecf:	inc    DWORD PTR [rsi+0x8]
   140001ed2:	dec    DWORD PTR [rsi+0x8]
   140001ed5:	mov    rax,QWORD PTR [rsi]
   140001ed8:	mov    rbx,QWORD PTR [rax]
   140001edb:	mov    rcx,rbx
   140001ede:	call   QWORD PTR [rip+0x74fc]        # 0x1400093e0
   140001ee4:	mov    r8,r14
   140001ee7:	mov    rdx,r12
   140001eea:	mov    rcx,rsi
   140001eed:	call   rbx
   140001eef:	mov    r15d,eax
   140001ef2:	test   eax,eax
   140001ef4:	je     0x140001f10
   140001ef6:	mov    r8,QWORD PTR [rsi]
   140001ef9:	mov    rbx,QWORD PTR [r8+0x40]
   140001efd:	mov    rcx,rbx
   140001f00:	call   QWORD PTR [rip+0x74da]        # 0x1400093e0
   140001f06:	mov    edx,0x1
   140001f0b:	mov    rcx,rsi
   140001f0e:	call   rbx
   140001f10:	mov    eax,r15d
   140001f13:	add    rsp,0x38
   140001f17:	pop    r15
   140001f19:	pop    r14
   140001f1b:	pop    r12
   140001f1d:	pop    rdi
   140001f1e:	pop    rsi
   140001f1f:	pop    rbx
   140001f20:	ret    
   140001f21:	int3   
   140001f22:	int3   
   140001f23:	int3   
   140001f24:	int3   
   140001f25:	int3   
   140001f26:	int3   
   140001f27:	int3   
   140001f28:	mov    rax,rsp
   140001f2b:	mov    QWORD PTR [rax+0x18],r8
   140001f2f:	mov    QWORD PTR [rax+0x10],rdx
   140001f33:	push   rsi
   140001f34:	push   rdi
   140001f35:	push   r12
   140001f37:	push   r14
   140001f39:	push   r15
   140001f3b:	sub    rsp,0x40
   140001f3f:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   140001f47:	mov    QWORD PTR [rax+0x8],rbx
   140001f4b:	mov    r15,r8
   140001f4e:	mov    r12,rdx
   140001f51:	mov    rbx,rcx
   140001f54:	test   r8,r8
   140001f57:	jne    0x140001f63
   140001f59:	mov    eax,0x80004003
   140001f5e:	jmp    0x140002033
   140001f63:	and    QWORD PTR [r8],0x0
   140001f67:	mov    r14d,0x8007000e
   140001f6d:	mov    DWORD PTR [rsp+0x88],r14d
   140001f75:	and    QWORD PTR [rsp+0x20],0x0
   140001f7b:	mov    ecx,0x20
   140001f80:	call   0x140007598
   140001f85:	mov    rsi,rax
   140001f88:	mov    QWORD PTR [rsp+0x30],rax
   140001f8d:	test   rax,rax
   140001f90:	je     0x140001fcd
   140001f92:	and    DWORD PTR [rax+0x8],0x0
   140001f96:	lea    rax,[rip+0x7853]        # 0x1400097f0
   140001f9d:	mov    QWORD PTR [rsi],rax
   140001fa0:	lea    rax,[rip+0x7809]        # 0x1400097b0
   140001fa7:	mov    QWORD PTR [rsi+0x10],rax
   140001fab:	mov    QWORD PTR [rsi+0x18],rbx
   140001faf:	mov    rdi,QWORD PTR [rip+0xb7e2]        # 0x14000d798
   140001fb6:	mov    rax,QWORD PTR [rdi]
   140001fb9:	mov    rbx,QWORD PTR [rax+0x8]
   140001fbd:	mov    rcx,rbx
   140001fc0:	call   QWORD PTR [rip+0x741a]        # 0x1400093e0
   140001fc6:	mov    rcx,rdi
   140001fc9:	call   rbx
   140001fcb:	jmp    0x140001fcf
   140001fcd:	xor    esi,esi
   140001fcf:	mov    QWORD PTR [rsp+0x20],rsi
   140001fd4:	jmp    0x140001ff0
   140001fd6:	mov    r15,QWORD PTR [rsp+0x80]
   140001fde:	mov    r12,QWORD PTR [rsp+0x78]
   140001fe3:	mov    r14d,DWORD PTR [rsp+0x88]
   140001feb:	mov    rsi,QWORD PTR [rsp+0x20]
   140001ff0:	test   rsi,rsi
   140001ff3:	je     0x140002030
   140001ff5:	mov    rax,QWORD PTR [rsi]
   140001ff8:	mov    rbx,QWORD PTR [rax]
   140001ffb:	mov    rcx,rbx
   140001ffe:	call   QWORD PTR [rip+0x73dc]        # 0x1400093e0
   140002004:	mov    r8,r15
   140002007:	mov    rdx,r12
   14000200a:	mov    rcx,rsi
   14000200d:	call   rbx
   14000200f:	mov    r14d,eax
   140002012:	test   eax,eax
   140002014:	je     0x140002030
   140002016:	mov    rdx,QWORD PTR [rsi]
   140002019:	mov    rbx,QWORD PTR [rdx+0x18]
   14000201d:	mov    rcx,rbx
   140002020:	call   QWORD PTR [rip+0x73ba]        # 0x1400093e0
   140002026:	mov    edx,0x1
   14000202b:	mov    rcx,rsi
   14000202e:	call   rbx
   140002030:	mov    eax,r14d
   140002033:	mov    rbx,QWORD PTR [rsp+0x70]
   140002038:	add    rsp,0x40
   14000203c:	pop    r15
   14000203e:	pop    r14
   140002040:	pop    r12
   140002042:	pop    rdi
   140002043:	pop    rsi
   140002044:	ret    
   140002045:	int3   
   140002046:	int3   
   140002047:	int3   
   140002048:	int3   
   140002049:	int3   
   14000204a:	int3   
   14000204b:	int3   
   14000204c:	lea    rax,[rip+0x7805]        # 0x140009858
   140002053:	mov    DWORD PTR [rcx+0x8],0xc0000001
   14000205a:	mov    QWORD PTR [rcx],rax
   14000205d:	ret    
   14000205e:	int3   
   14000205f:	int3   
   140002060:	int3   
   140002061:	int3   
   140002062:	int3   
   140002063:	int3   
   140002064:	int3   
   140002065:	int3   
   140002066:	int3   
   140002067:	int3   
   140002068:	int3   
   140002069:	int3   
   14000206a:	int3   
   14000206b:	int3   
   14000206c:	int3   
   14000206d:	int3   
   14000206e:	int3   
   14000206f:	int3   
   140002070:	mov    QWORD PTR [rsp+0x8],rbx
   140002075:	mov    QWORD PTR [rsp+0x10],rsi
   14000207a:	push   rdi
   14000207b:	sub    rsp,0x20
   14000207f:	inc    DWORD PTR [rcx+0x8]
   140002082:	mov    esi,DWORD PTR [rcx+0x8]
   140002085:	cmp    esi,0x2
   140002088:	jne    0x1400020a6
   14000208a:	mov    rdi,QWORD PTR [rip+0xb707]        # 0x14000d798
   140002091:	mov    rdx,QWORD PTR [rdi]
   140002094:	mov    rbx,QWORD PTR [rdx+0x8]
   140002098:	mov    rcx,rbx
   14000209b:	call   QWORD PTR [rip+0x733f]        # 0x1400093e0
   1400020a1:	mov    rcx,rdi
   1400020a4:	call   rbx
   1400020a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020ab:	mov    eax,esi
   1400020ad:	mov    rsi,QWORD PTR [rsp+0x38]
   1400020b2:	add    rsp,0x20
   1400020b6:	pop    rdi
   1400020b7:	ret    
   1400020b8:	int3   
   1400020b9:	int3   
   1400020ba:	int3   
   1400020bb:	int3   
   1400020bc:	int3   
   1400020bd:	int3   
   1400020be:	int3   
   1400020bf:	int3   
   1400020c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400020ca:	push   rdi
   1400020cb:	sub    rsp,0x20
   1400020cf:	sub    DWORD PTR [rcx+0x8],0x1
   1400020d3:	mov    esi,DWORD PTR [rcx+0x8]
   1400020d6:	jne    0x1400020f5
   1400020d8:	test   rcx,rcx
   1400020db:	je     0x140002116
   1400020dd:	lea    rax,[rip+0x7774]        # 0x140009858
   1400020e4:	mov    DWORD PTR [rcx+0x8],0xc0000001
   1400020eb:	mov    QWORD PTR [rcx],rax
   1400020ee:	call   0x140007618
   1400020f3:	jmp    0x140002116
   1400020f5:	cmp    esi,0x1
   1400020f8:	jne    0x140002116
   1400020fa:	mov    rdi,QWORD PTR [rip+0xb697]        # 0x14000d798
   140002101:	mov    rdx,QWORD PTR [rdi]
   140002104:	mov    rbx,QWORD PTR [rdx+0x10]
   140002108:	mov    rcx,rbx
   14000210b:	call   QWORD PTR [rip+0x72cf]        # 0x1400093e0
   140002111:	mov    rcx,rdi
   140002114:	call   rbx
   140002116:	mov    rbx,QWORD PTR [rsp+0x30]
   14000211b:	mov    eax,esi
   14000211d:	mov    rsi,QWORD PTR [rsp+0x38]
   140002122:	add    rsp,0x20
   140002126:	pop    rdi
   140002127:	ret    
   140002128:	int3   
   140002129:	int3   
   14000212a:	int3   
   14000212b:	int3   
   14000212c:	int3   
   14000212d:	int3   
   14000212e:	int3   
   14000212f:	int3   
   140002130:	mov    r9,r8
   140002133:	mov    r8,rdx
   140002136:	lea    rdx,[rip+0x79f3]        # 0x140009b30
   14000213d:	jmp    0x140004024
   140002142:	int3   
   140002143:	int3   
   140002144:	int3   
   140002145:	int3   
   140002146:	int3   
   140002147:	int3   
   140002148:	int3   
   140002149:	int3   
   14000214a:	int3   
   14000214b:	int3   
   14000214c:	int3   
   14000214d:	int3   
   14000214e:	int3   
   14000214f:	int3   
   140002150:	inc    DWORD PTR [rcx+0x8]
   140002153:	mov    eax,DWORD PTR [rcx+0x8]
   140002156:	ret    
   140002157:	int3   
   140002158:	int3   
   140002159:	int3   
   14000215a:	int3   
   14000215b:	int3   
   14000215c:	int3   
   14000215d:	int3   
   14000215e:	int3   
   14000215f:	int3   
   140002160:	mov    QWORD PTR [rsp+0x8],rbx
   140002165:	mov    QWORD PTR [rsp+0x10],rbp
   14000216a:	mov    QWORD PTR [rsp+0x18],rsi
   14000216f:	push   rdi
   140002170:	sub    rsp,0x20
   140002174:	sub    DWORD PTR [rcx+0x8],0x1
   140002178:	mov    rsi,rcx
   14000217b:	mov    ebp,DWORD PTR [rcx+0x8]
   14000217e:	jne    0x1400021d7
   140002180:	mov    rdi,QWORD PTR [rip+0xb611]        # 0x14000d798
   140002187:	mov    rax,QWORD PTR [rdi]
   14000218a:	mov    rbx,QWORD PTR [rax+0x8]
   14000218e:	mov    rcx,rbx
   140002191:	call   QWORD PTR [rip+0x7249]        # 0x1400093e0
   140002197:	mov    rcx,rdi
   14000219a:	call   rbx
   14000219c:	test   rsi,rsi
   14000219f:	je     0x1400021bb
   1400021a1:	mov    rax,QWORD PTR [rsi]
   1400021a4:	mov    rbx,QWORD PTR [rax+0x40]
   1400021a8:	mov    rcx,rbx
   1400021ab:	call   QWORD PTR [rip+0x722f]        # 0x1400093e0
   1400021b1:	mov    edx,0x1
   1400021b6:	mov    rcx,rsi
   1400021b9:	call   rbx
   1400021bb:	mov    rdi,QWORD PTR [rip+0xb5d6]        # 0x14000d798
   1400021c2:	mov    rdx,QWORD PTR [rdi]
   1400021c5:	mov    rbx,QWORD PTR [rdx+0x10]
   1400021c9:	mov    rcx,rbx
   1400021cc:	call   QWORD PTR [rip+0x720e]        # 0x1400093e0
   1400021d2:	mov    rcx,rdi
   1400021d5:	call   rbx
   1400021d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400021dc:	mov    eax,ebp
   1400021de:	mov    rbp,QWORD PTR [rsp+0x38]
   1400021e3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400021e8:	add    rsp,0x20
   1400021ec:	pop    rdi
   1400021ed:	ret    
   1400021ee:	int3   
   1400021ef:	int3   
   1400021f0:	int3   
   1400021f1:	int3   
   1400021f2:	int3   
   1400021f3:	int3   
   1400021f4:	int3   
   1400021f5:	int3   
   1400021f6:	int3   
   1400021f7:	int3   
   1400021f8:	int3   
   1400021f9:	int3   
   1400021fa:	int3   
   1400021fb:	int3   
   1400021fc:	int3   
   1400021fd:	int3   
   1400021fe:	int3   
   1400021ff:	int3   
   140002200:	mov    QWORD PTR [rsp+0x8],rbx
   140002205:	mov    QWORD PTR [rsp+0x10],rbp
   14000220a:	mov    QWORD PTR [rsp+0x18],rsi
   14000220f:	push   rdi
   140002210:	sub    rsp,0x20
   140002214:	sub    DWORD PTR [rcx+0x8],0x1
   140002218:	mov    rsi,rcx
   14000221b:	mov    ebp,DWORD PTR [rcx+0x8]
   14000221e:	jne    0x140002277
   140002220:	mov    rdi,QWORD PTR [rip+0xb571]        # 0x14000d798
   140002227:	mov    rax,QWORD PTR [rdi]
   14000222a:	mov    rbx,QWORD PTR [rax+0x8]
   14000222e:	mov    rcx,rbx
   140002231:	call   QWORD PTR [rip+0x71a9]        # 0x1400093e0
   140002237:	mov    rcx,rdi
   14000223a:	call   rbx
   14000223c:	test   rsi,rsi
   14000223f:	je     0x14000225b
   140002241:	mov    rax,QWORD PTR [rsi]
   140002244:	mov    rbx,QWORD PTR [rax+0x18]
   140002248:	mov    rcx,rbx
   14000224b:	call   QWORD PTR [rip+0x718f]        # 0x1400093e0
   140002251:	mov    edx,0x1
   140002256:	mov    rcx,rsi
   140002259:	call   rbx
   14000225b:	mov    rdi,QWORD PTR [rip+0xb536]        # 0x14000d798
   140002262:	mov    rdx,QWORD PTR [rdi]
   140002265:	mov    rbx,QWORD PTR [rdx+0x10]
   140002269:	mov    rcx,rbx
   14000226c:	call   QWORD PTR [rip+0x716e]        # 0x1400093e0
   140002272:	mov    rcx,rdi
   140002275:	call   rbx
   140002277:	mov    rbx,QWORD PTR [rsp+0x30]
   14000227c:	mov    eax,ebp
   14000227e:	mov    rbp,QWORD PTR [rsp+0x38]
   140002283:	mov    rsi,QWORD PTR [rsp+0x40]
   140002288:	add    rsp,0x20
   14000228c:	pop    rdi
   14000228d:	ret    
   14000228e:	int3   
   14000228f:	int3   
   140002290:	int3   
   140002291:	int3   
   140002292:	int3   
   140002293:	int3   
   140002294:	int3   
   140002295:	int3   
   140002296:	int3   
   140002297:	int3   
   140002298:	int3   
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400022a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400022aa:	push   rdi
   1400022ab:	sub    rsp,0x20
   1400022af:	xor    edi,edi
   1400022b1:	mov    rsi,rcx
   1400022b4:	test   r8,r8
   1400022b7:	jne    0x1400022c0
   1400022b9:	mov    eax,0x80004003
   1400022be:	jmp    0x140002312
   1400022c0:	mov    QWORD PTR [r8],rdi
   1400022c3:	cmp    DWORD PTR [rdx],edi
   1400022c5:	jne    0x1400022f8
   1400022c7:	cmp    DWORD PTR [rdx+0x4],edi
   1400022ca:	jne    0x1400022f8
   1400022cc:	cmp    DWORD PTR [rdx+0x8],0xc0
   1400022d3:	jne    0x1400022f8
   1400022d5:	cmp    DWORD PTR [rdx+0xc],0x46000000
   1400022dc:	jne    0x1400022f8
   1400022de:	mov    QWORD PTR [r8],rcx
   1400022e1:	mov    rax,QWORD PTR [rcx]
   1400022e4:	mov    rbx,QWORD PTR [rax+0x8]
   1400022e8:	mov    rcx,rbx
   1400022eb:	call   QWORD PTR [rip+0x70ef]        # 0x1400093e0
   1400022f1:	mov    rcx,rsi
   1400022f4:	call   rbx
   1400022f6:	jmp    0x140002310
   1400022f8:	mov    r9,r8
   1400022fb:	add    rcx,0x10
   1400022ff:	mov    r8,rdx
   140002302:	lea    rdx,[rip+0x7827]        # 0x140009b30
   140002309:	call   0x140004024
   14000230e:	mov    edi,eax
   140002310:	mov    eax,edi
   140002312:	mov    rbx,QWORD PTR [rsp+0x30]
   140002317:	mov    rsi,QWORD PTR [rsp+0x38]
   14000231c:	add    rsp,0x20
   140002320:	pop    rdi
   140002321:	ret    
   140002322:	int3   
   140002323:	int3   
   140002324:	int3   
   140002325:	int3   
   140002326:	int3   
   140002327:	int3   
   140002328:	int3   
   140002329:	int3   
   14000232a:	int3   
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	mov    QWORD PTR [rsp+0x8],rbx
   140002335:	push   rdi
   140002336:	sub    rsp,0x20
   14000233a:	mov    rdi,QWORD PTR [rcx+0x8]
   14000233e:	mov    rax,QWORD PTR [rdi]
   140002341:	mov    rbx,QWORD PTR [rax+0x8]
   140002345:	mov    rcx,rbx
   140002348:	call   QWORD PTR [rip+0x7092]        # 0x1400093e0
   14000234e:	mov    rcx,rdi
   140002351:	mov    rax,rbx
   140002354:	mov    rbx,QWORD PTR [rsp+0x30]
   140002359:	add    rsp,0x20
   14000235d:	pop    rdi
   14000235e:	rex.W jmp rax
   140002361:	int3   
   140002362:	int3   
   140002363:	int3   
   140002364:	int3   
   140002365:	int3   
   140002366:	int3   
   140002367:	int3   
   140002368:	int3   
   140002369:	int3   
   14000236a:	int3   
   14000236b:	int3   
   14000236c:	int3   
   14000236d:	int3   
   14000236e:	int3   
   14000236f:	int3   
   140002370:	mov    QWORD PTR [rsp+0x8],rbx
   140002375:	push   rdi
   140002376:	sub    rsp,0x20
   14000237a:	mov    rdi,QWORD PTR [rcx+0x8]
   14000237e:	mov    rax,QWORD PTR [rdi]
   140002381:	mov    rbx,QWORD PTR [rax+0x10]
   140002385:	mov    rcx,rbx
   140002388:	call   QWORD PTR [rip+0x7052]        # 0x1400093e0
   14000238e:	mov    rcx,rdi
   140002391:	mov    rax,rbx
   140002394:	mov    rbx,QWORD PTR [rsp+0x30]
   140002399:	add    rsp,0x20
   14000239d:	pop    rdi
   14000239e:	rex.W jmp rax
   1400023a1:	int3   
   1400023a2:	int3   
   1400023a3:	int3   
   1400023a4:	int3   
   1400023a5:	int3   
   1400023a6:	int3   
   1400023a7:	int3   
   1400023a8:	int3   
   1400023a9:	int3   
   1400023aa:	int3   
   1400023ab:	int3   
   1400023ac:	int3   
   1400023ad:	int3   
   1400023ae:	int3   
   1400023af:	int3   
   1400023b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400023b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400023ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400023bf:	push   rdi
   1400023c0:	sub    rsp,0x20
   1400023c4:	mov    rdi,QWORD PTR [rcx+0x8]
   1400023c8:	mov    rsi,r8
   1400023cb:	mov    rbp,rdx
   1400023ce:	mov    rax,QWORD PTR [rdi]
   1400023d1:	mov    rbx,QWORD PTR [rax]
   1400023d4:	mov    rcx,rbx
   1400023d7:	call   QWORD PTR [rip+0x7003]        # 0x1400093e0
   1400023dd:	mov    r8,rsi
   1400023e0:	mov    rdx,rbp
   1400023e3:	mov    rcx,rdi
   1400023e6:	mov    rax,rbx
   1400023e9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400023ee:	mov    rbp,QWORD PTR [rsp+0x38]
   1400023f3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400023f8:	add    rsp,0x20
   1400023fc:	pop    rdi
   1400023fd:	rex.W jmp rax
   140002400:	int3   
   140002401:	int3   
   140002402:	int3   
   140002403:	int3   
   140002404:	int3   
   140002405:	int3   
   140002406:	int3   
   140002407:	int3   
   140002408:	int3   
   140002409:	int3   
   14000240a:	int3   
   14000240b:	int3   
   14000240c:	int3   
   14000240d:	int3   
   14000240e:	int3   
   14000240f:	int3   
   140002410:	mov    QWORD PTR [rsp+0x8],rbx
   140002415:	mov    QWORD PTR [rsp+0x10],rsi
   14000241a:	mov    QWORD PTR [rsp+0x18],rdi
   14000241f:	push   r14
   140002421:	sub    rsp,0x20
   140002425:	mov    rdi,QWORD PTR [rip+0xb36c]        # 0x14000d798
   14000242c:	lea    rax,[rip+0x73dd]        # 0x140009810
   140002433:	mov    QWORD PTR [rcx],rax
   140002436:	mov    r14,rcx
   140002439:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140002440:	mov    esi,edx
   140002442:	mov    rax,QWORD PTR [rdi]
   140002445:	mov    rbx,QWORD PTR [rax+0x10]
   140002449:	mov    rcx,rbx
   14000244c:	call   QWORD PTR [rip+0x6f8e]        # 0x1400093e0
   140002452:	mov    rcx,rdi
   140002455:	call   rbx
   140002457:	test   sil,0x1
   14000245b:	je     0x140002465
   14000245d:	mov    rcx,r14
   140002460:	call   0x140007618
   140002465:	mov    rbx,QWORD PTR [rsp+0x30]
   14000246a:	mov    rax,r14
   14000246d:	mov    rsi,QWORD PTR [rsp+0x38]
   140002472:	mov    rdi,QWORD PTR [rsp+0x40]
   140002477:	add    rsp,0x20
   14000247b:	pop    r14
   14000247d:	ret    
   14000247e:	int3   
   14000247f:	int3   
   140002480:	int3   
   140002481:	int3   
   140002482:	int3   
   140002483:	int3   
   140002484:	int3   
   140002485:	int3   
   140002486:	int3   
   140002487:	int3   
   140002488:	int3   
   140002489:	int3   
   14000248a:	int3   
   14000248b:	int3   
   14000248c:	int3   
   14000248d:	int3   
   14000248e:	int3   
   14000248f:	int3   
   140002490:	mov    QWORD PTR [rsp+0x8],rbx
   140002495:	mov    QWORD PTR [rsp+0x10],rsi
   14000249a:	mov    QWORD PTR [rsp+0x18],rdi
   14000249f:	push   r14
   1400024a1:	sub    rsp,0x20
   1400024a5:	mov    rdi,QWORD PTR [rip+0xb2ec]        # 0x14000d798
   1400024ac:	lea    rax,[rip+0x733d]        # 0x1400097f0
   1400024b3:	mov    QWORD PTR [rcx],rax
   1400024b6:	mov    r14,rcx
   1400024b9:	mov    DWORD PTR [rcx+0x8],0xc0000001
   1400024c0:	mov    esi,edx
   1400024c2:	mov    rax,QWORD PTR [rdi]
   1400024c5:	mov    rbx,QWORD PTR [rax+0x10]
   1400024c9:	mov    rcx,rbx
   1400024cc:	call   QWORD PTR [rip+0x6f0e]        # 0x1400093e0
   1400024d2:	mov    rcx,rdi
   1400024d5:	call   rbx
   1400024d7:	test   sil,0x1
   1400024db:	je     0x1400024e5
   1400024dd:	mov    rcx,r14
   1400024e0:	call   0x140007618
   1400024e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024ea:	mov    rax,r14
   1400024ed:	mov    rsi,QWORD PTR [rsp+0x38]
   1400024f2:	mov    rdi,QWORD PTR [rsp+0x40]
   1400024f7:	add    rsp,0x20
   1400024fb:	pop    r14
   1400024fd:	ret    
   1400024fe:	int3   
   1400024ff:	int3   
   140002500:	int3   
   140002501:	int3   
   140002502:	int3   
   140002503:	int3   
   140002504:	mov    QWORD PTR [rsp+0x8],rcx
   140002509:	push   rdi
   14000250a:	sub    rsp,0x30
   14000250e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002517:	mov    QWORD PTR [rsp+0x58],rbx
   14000251c:	mov    rbx,rcx
   14000251f:	test   rcx,rcx
   140002522:	jne    0x14000252b
   140002524:	mov    eax,0x80004003
   140002529:	jmp    0x140002582
   14000252b:	and    QWORD PTR [rcx],0x0
   14000252f:	mov    edi,0x8007000e
   140002534:	mov    DWORD PTR [rsp+0x48],edi
   140002538:	and    QWORD PTR [rsp+0x50],0x0
   14000253e:	mov    ecx,0x10
   140002543:	call   0x140007598
   140002548:	test   rax,rax
   14000254b:	je     0x14000255b
   14000254d:	and    DWORD PTR [rax+0x8],0x0
   140002551:	lea    rcx,[rip+0x7300]        # 0x140009858
   140002558:	mov    QWORD PTR [rax],rcx
   14000255b:	mov    QWORD PTR [rsp+0x50],rax
   140002560:	jmp    0x140002570
   140002562:	mov    rbx,QWORD PTR [rsp+0x40]
   140002567:	mov    edi,DWORD PTR [rsp+0x48]
   14000256b:	mov    rax,QWORD PTR [rsp+0x50]
   140002570:	test   rax,rax
   140002573:	je     0x14000257d
   140002575:	inc    DWORD PTR [rax+0x8]
   140002578:	xor    edi,edi
   14000257a:	dec    DWORD PTR [rax+0x8]
   14000257d:	mov    QWORD PTR [rbx],rax
   140002580:	mov    eax,edi
   140002582:	mov    rbx,QWORD PTR [rsp+0x58]
   140002587:	add    rsp,0x30
   14000258b:	pop    rdi
   14000258c:	ret    
   14000258d:	int3   
   14000258e:	int3   
   14000258f:	int3   
   140002590:	int3   
   140002591:	int3   
   140002592:	int3   
   140002593:	int3   
   140002594:	int3   
   140002595:	int3   
   140002596:	int3   
   140002597:	int3   
   140002598:	int3   
   140002599:	int3   
   14000259a:	int3   
   14000259b:	int3   
   14000259c:	int3   
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400025aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400025af:	push   rdi
   1400025b0:	sub    rsp,0x20
   1400025b4:	mov    rbp,rdx
   1400025b7:	mov    rsi,r9
   1400025ba:	xor    edx,edx
   1400025bc:	mov    rdi,r8
   1400025bf:	mov    eax,0x80004003
   1400025c4:	test   r9,r9
   1400025c7:	je     0x14000260f
   1400025c9:	mov    QWORD PTR [r9],rdx
   1400025cc:	test   rbp,rbp
   1400025cf:	je     0x1400025f7
   1400025d1:	cmp    DWORD PTR [r8],edx
   1400025d4:	jne    0x1400025f0
   1400025d6:	cmp    DWORD PTR [r8+0x4],edx
   1400025da:	jne    0x1400025f0
   1400025dc:	cmp    DWORD PTR [r8+0x8],0xc0
   1400025e4:	jne    0x1400025f0
   1400025e6:	cmp    DWORD PTR [r8+0xc],0x46000000
   1400025ee:	je     0x1400025f7
   1400025f0:	mov    eax,0x80040110
   1400025f5:	jmp    0x14000260f
   1400025f7:	mov    rbx,QWORD PTR [rcx+0x40]
   1400025fb:	mov    rcx,rbx
   1400025fe:	call   QWORD PTR [rip+0x6ddc]        # 0x1400093e0
   140002604:	mov    r8,rsi
   140002607:	mov    rdx,rdi
   14000260a:	mov    rcx,rbp
   14000260d:	call   rbx
   14000260f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002614:	mov    rbp,QWORD PTR [rsp+0x38]
   140002619:	mov    rsi,QWORD PTR [rsp+0x40]
   14000261e:	add    rsp,0x20
   140002622:	pop    rdi
   140002623:	ret    
   140002624:	int3   
   140002625:	int3   
   140002626:	int3   
   140002627:	int3   
   140002628:	int3   
   140002629:	int3   
   14000262a:	int3   
   14000262b:	int3   
   14000262c:	int3   
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	mov    QWORD PTR [rsp+0x8],rbx
   140002635:	push   rdi
   140002636:	sub    rsp,0x20
   14000263a:	mov    rdi,QWORD PTR [rip+0xb157]        # 0x14000d798
   140002641:	mov    rax,QWORD PTR [rdi]
   140002644:	test   edx,edx
   140002646:	je     0x14000264e
   140002648:	mov    rbx,QWORD PTR [rax+0x8]
   14000264c:	jmp    0x140002652
   14000264e:	mov    rbx,QWORD PTR [rax+0x10]
   140002652:	mov    rcx,rbx
   140002655:	call   QWORD PTR [rip+0x6d85]        # 0x1400093e0
   14000265b:	mov    rcx,rdi
   14000265e:	call   rbx
   140002660:	mov    rbx,QWORD PTR [rsp+0x30]
   140002665:	xor    eax,eax
   140002667:	add    rsp,0x20
   14000266b:	pop    rdi
   14000266c:	ret    
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	int3   
   140002671:	int3   
   140002672:	int3   
   140002673:	int3   
   140002674:	mov    QWORD PTR [rsp+0x8],rbx
   140002679:	push   rdi
   14000267a:	sub    rsp,0x20
   14000267e:	mov    rdi,QWORD PTR [rcx]
   140002681:	test   rdi,rdi
   140002684:	je     0x14000269b
   140002686:	mov    rax,QWORD PTR [rdi]
   140002689:	mov    rbx,QWORD PTR [rax+0x10]
   14000268d:	mov    rcx,rbx
   140002690:	call   QWORD PTR [rip+0x6d4a]        # 0x1400093e0
   140002696:	mov    rcx,rdi
   140002699:	call   rbx
   14000269b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400026a0:	add    rsp,0x20
   1400026a4:	pop    rdi
   1400026a5:	ret    
   1400026a6:	int3   
   1400026a7:	int3   
   1400026a8:	int3   
   1400026a9:	int3   
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	mov    QWORD PTR [rsp+0x18],rbx
   1400026b1:	push   rbp
   1400026b2:	push   rsi
   1400026b3:	push   rdi
   1400026b4:	push   r14
   1400026b6:	push   r15
   1400026b8:	sub    rsp,0x20
   1400026bc:	mov    r15,QWORD PTR [rcx]
   1400026bf:	mov    r14,rdx
   1400026c2:	mov    rdi,QWORD PTR [rdx]
   1400026c5:	mov    rsi,rcx
   1400026c8:	test   r15,r15
   1400026cb:	jne    0x140002735
   1400026cd:	test   rdi,rdi
   1400026d0:	je     0x140002721
   1400026d2:	xor    bpl,bpl
   1400026d5:	test   bpl,bpl
   1400026d8:	jne    0x140002721
   1400026da:	mov    r14,QWORD PTR [r14]
   1400026dd:	mov    rdi,QWORD PTR [rsi]
   1400026e0:	and    QWORD PTR [rsi],0x0
   1400026e4:	test   r14,r14
   1400026e7:	je     0x140002707
   1400026e9:	mov    rax,QWORD PTR [r14]
   1400026ec:	mov    rbx,QWORD PTR [rax]
   1400026ef:	mov    rcx,rbx
   1400026f2:	call   QWORD PTR [rip+0x6ce8]        # 0x1400093e0
   1400026f8:	mov    r8,rsi
   1400026fb:	lea    rdx,[rip+0x7366]        # 0x140009a68
   140002702:	mov    rcx,r14
   140002705:	call   rbx
   140002707:	test   rdi,rdi
   14000270a:	je     0x140002721
   14000270c:	mov    rax,QWORD PTR [rdi]
   14000270f:	mov    rbx,QWORD PTR [rax+0x10]
   140002713:	mov    rcx,rbx
   140002716:	call   QWORD PTR [rip+0x6cc4]        # 0x1400093e0
   14000271c:	mov    rcx,rdi
   14000271f:	call   rbx
   140002721:	mov    rax,QWORD PTR [rsi]
   140002724:	mov    rbx,QWORD PTR [rsp+0x60]
   140002729:	add    rsp,0x20
   14000272d:	pop    r15
   14000272f:	pop    r14
   140002731:	pop    rdi
   140002732:	pop    rsi
   140002733:	pop    rbp
   140002734:	ret    
   140002735:	test   rdi,rdi
   140002738:	je     0x1400026d2
   14000273a:	and    QWORD PTR [rsp+0x50],0x0
   140002740:	and    QWORD PTR [rsp+0x58],0x0
   140002746:	mov    rax,QWORD PTR [r15]
   140002749:	mov    rbx,QWORD PTR [rax]
   14000274c:	mov    rcx,rbx
   14000274f:	call   QWORD PTR [rip+0x6c8b]        # 0x1400093e0
   140002755:	lea    r8,[rsp+0x50]
   14000275a:	mov    rcx,r15
   14000275d:	lea    rdx,[rip+0x7434]        # 0x140009b98
   140002764:	call   rbx
   140002766:	mov    rax,QWORD PTR [rdi]
   140002769:	mov    rbx,QWORD PTR [rax]
   14000276c:	mov    rcx,rbx
   14000276f:	call   QWORD PTR [rip+0x6c6b]        # 0x1400093e0
   140002775:	lea    r8,[rsp+0x58]
   14000277a:	mov    rcx,rdi
   14000277d:	lea    rdx,[rip+0x7414]        # 0x140009b98
   140002784:	call   rbx
   140002786:	mov    rdi,QWORD PTR [rsp+0x58]
   14000278b:	mov    rbx,QWORD PTR [rsp+0x50]
   140002790:	cmp    rbx,rdi
   140002793:	sete   bpl
   140002797:	test   rdi,rdi
   14000279a:	je     0x1400027b6
   14000279c:	mov    rax,QWORD PTR [rdi]
   14000279f:	mov    rbx,QWORD PTR [rax+0x10]
   1400027a3:	mov    rcx,rbx
   1400027a6:	call   QWORD PTR [rip+0x6c34]        # 0x1400093e0
   1400027ac:	mov    rcx,rdi
   1400027af:	call   rbx
   1400027b1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400027b6:	test   rbx,rbx
   1400027b9:	je     0x1400026d5
   1400027bf:	mov    rax,QWORD PTR [rbx]
   1400027c2:	mov    rdi,QWORD PTR [rax+0x10]
   1400027c6:	mov    rcx,rdi
   1400027c9:	call   QWORD PTR [rip+0x6c11]        # 0x1400093e0
   1400027cf:	mov    rcx,rbx
   1400027d2:	call   rdi
   1400027d4:	jmp    0x1400026d5
   1400027d9:	int3   
   1400027da:	int3   
   1400027db:	int3   
   1400027dc:	int3   
   1400027dd:	int3   
   1400027de:	int3   
   1400027df:	int3   
   1400027e0:	rex push rbx
   1400027e2:	sub    rsp,0x20
   1400027e6:	cmp    BYTE PTR [rcx+0x8],0x0
   1400027ea:	mov    rbx,rcx
   1400027ed:	je     0x1400027fc
   1400027ef:	mov    rcx,QWORD PTR [rcx]
   1400027f2:	call   QWORD PTR [rip+0x6988]        # 0x140009180
   1400027f8:	mov    BYTE PTR [rbx+0x8],0x0
   1400027fc:	add    rsp,0x20
   140002800:	pop    rbx
   140002801:	ret    
   140002802:	int3   
   140002803:	int3   
   140002804:	int3   
   140002805:	int3   
   140002806:	int3   
   140002807:	int3   
   140002808:	mov    rax,rsp
   14000280b:	mov    QWORD PTR [rax+0x18],r8
   14000280f:	mov    QWORD PTR [rax+0x8],rcx
   140002813:	push   rsi
   140002814:	push   rdi
   140002815:	push   r14
   140002817:	sub    rsp,0x30
   14000281b:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140002823:	mov    QWORD PTR [rax+0x10],rbx
   140002827:	mov    r14,rcx
   14000282a:	xor    edi,edi
   14000282c:	test   rcx,rcx
   14000282f:	jne    0x140002838
   140002831:	mov    eax,0x80070057
   140002836:	jmp    0x1400028a0
   140002838:	mov    QWORD PTR [rsp+0x60],rdi
   14000283d:	mov    ecx,0x18
   140002842:	call   0x140007598
   140002847:	mov    rsi,rax
   14000284a:	mov    QWORD PTR [rsp+0x60],rax
   14000284f:	jmp    0x14000285d
   140002851:	xor    edi,edi
   140002853:	mov    r14,QWORD PTR [rsp+0x50]
   140002858:	mov    rsi,QWORD PTR [rsp+0x60]
   14000285d:	test   rsi,rsi
   140002860:	jne    0x140002869
   140002862:	mov    edi,0x8007000e
   140002867:	jmp    0x14000289e
   140002869:	lea    rax,[rip+0x50]        # 0x1400028c0
   140002870:	mov    QWORD PTR [rsi],rax
   140002873:	lea    rax,[rip+0xa846]        # 0x14000d0c0
   14000287a:	mov    QWORD PTR [rsi+0x8],rax
   14000287e:	lea    rcx,[r14+0x10]
   140002882:	call   QWORD PTR [rip+0x6830]        # 0x1400090b8
   140002888:	mov    rdx,QWORD PTR [r14+0x8]
   14000288c:	mov    QWORD PTR [rsi+0x10],rdx
   140002890:	mov    QWORD PTR [r14+0x8],rsi
   140002894:	lea    rcx,[r14+0x10]
   140002898:	call   QWORD PTR [rip+0x68e2]        # 0x140009180
   14000289e:	mov    eax,edi
   1400028a0:	mov    rbx,QWORD PTR [rsp+0x58]
   1400028a5:	add    rsp,0x30
   1400028a9:	pop    r14
   1400028ab:	pop    rdi
   1400028ac:	pop    rsi
   1400028ad:	ret    
   1400028ae:	int3   
   1400028af:	int3   
   1400028b0:	int3   
   1400028b1:	int3   
   1400028b2:	int3   
   1400028b3:	int3   
   1400028b4:	int3   
   1400028b5:	int3   
   1400028b6:	int3   
   1400028b7:	int3   
   1400028b8:	int3   
   1400028b9:	int3   
   1400028ba:	int3   
   1400028bb:	int3   
   1400028bc:	int3   
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	test   rcx,rcx
   1400028c3:	je     0x140002937
   1400028c5:	mov    QWORD PTR [rsp+0x8],rbx
   1400028ca:	mov    QWORD PTR [rsp+0x10],rsi
   1400028cf:	push   rdi
   1400028d0:	sub    rsp,0x20
   1400028d4:	mov    rsi,QWORD PTR [rcx+0x18]
   1400028d8:	mov    rdi,rcx
   1400028db:	test   rsi,rsi
   1400028de:	je     0x1400028f5
   1400028e0:	mov    rax,QWORD PTR [rsi]
   1400028e3:	mov    rbx,QWORD PTR [rax+0x10]
   1400028e7:	mov    rcx,rbx
   1400028ea:	call   QWORD PTR [rip+0x6af0]        # 0x1400093e0
   1400028f0:	mov    rcx,rsi
   1400028f3:	call   rbx
   1400028f5:	and    QWORD PTR [rdi+0x18],0x0
   1400028fa:	mov    rcx,QWORD PTR [rdi+0x28]
   1400028fe:	test   rcx,rcx
   140002901:	je     0x140002923
   140002903:	lea    rbx,[rcx-0x8]
   140002907:	mov    edx,0x10
   14000290c:	mov    r8d,DWORD PTR [rbx]
   14000290f:	lea    r9,[rip+0xffffffffffffe93a]        # 0x140001250
   140002916:	call   0x140007b24
   14000291b:	mov    rcx,rbx
   14000291e:	call   0x140007618
   140002923:	and    QWORD PTR [rdi+0x28],0x0
   140002928:	mov    rbx,QWORD PTR [rsp+0x30]
   14000292d:	mov    rsi,QWORD PTR [rsp+0x38]
   140002932:	add    rsp,0x20
   140002936:	pop    rdi
   140002937:	ret    
   140002938:	int3   
   140002939:	int3   
   14000293a:	int3   
   14000293b:	int3   
   14000293c:	int3   
   14000293d:	int3   
   14000293e:	int3   
   14000293f:	int3   
   140002940:	and    QWORD PTR [rcx],0x0
   140002944:	mov    rax,rcx
   140002947:	and    DWORD PTR [rcx+0x8],0x0
   14000294b:	or     DWORD PTR [rcx+0xc],0xffffffff
   14000294f:	ret    
   140002950:	int3   
   140002951:	int3   
   140002952:	int3   
   140002953:	int3   
   140002954:	int3   
   140002955:	int3   
   140002956:	int3   
   140002957:	int3   
   140002958:	mov    QWORD PTR [rsp+0x10],rdx
   14000295d:	mov    QWORD PTR [rsp+0x8],rcx
   140002962:	push   rbx
   140002963:	push   rsi
   140002964:	push   r12
   140002966:	push   r13
   140002968:	push   r14
   14000296a:	push   r15
   14000296c:	sub    rsp,0x48
   140002970:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140002979:	mov    r14,rdx
   14000297c:	mov    rax,QWORD PTR [rdx]
   14000297f:	mov    rbx,QWORD PTR [rax+0x18]
   140002983:	mov    rcx,rbx
   140002986:	call   QWORD PTR [rip+0x6a54]        # 0x1400093e0
   14000298c:	lea    rdx,[rsp+0x90]
   140002994:	mov    rcx,r14
   140002997:	call   rbx
   140002999:	test   eax,eax
   14000299b:	js     0x140002ba6
   1400029a1:	xor    esi,esi
   1400029a3:	mov    QWORD PTR [rsp+0x80],rsi
   1400029ab:	mov    rax,QWORD PTR [rsp+0x90]
   1400029b3:	movzx  ecx,WORD PTR [rax+0x30]
   1400029b7:	mov    DWORD PTR [rip+0xa733],ecx        # 0x14000d0f0
   1400029bd:	and    QWORD PTR [rip+0xa724],rsi        # 0x14000d0e8
   1400029c4:	test   ecx,ecx
   1400029c6:	je     0x140002a75
   1400029cc:	mov    ebx,ecx
   1400029ce:	lea    eax,[rsi+0x10]
   1400029d1:	mul    rcx
   1400029d4:	lea    rcx,[rsi-0x1]
   1400029d8:	cmovo  rax,rcx
   1400029dc:	add    rax,0x8
   1400029e0:	cmovb  rax,rcx
   1400029e4:	mov    rcx,rax
   1400029e7:	call   0x14000769c
   1400029ec:	mov    QWORD PTR [rsp+0x98],rax
   1400029f4:	test   rax,rax
   1400029f7:	je     0x140002a24
   1400029f9:	mov    DWORD PTR [rax],ebx
   1400029fb:	lea    rsi,[rax+0x8]
   1400029ff:	lea    rax,[rip+0xffffffffffffe84a]        # 0x140001250
   140002a06:	mov    QWORD PTR [rsp+0x20],rax
   140002a0b:	lea    r9,[rip+0xffffffffffffff2e]        # 0x140002940
   140002a12:	mov    r8d,ebx
   140002a15:	mov    edx,0x10
   140002a1a:	mov    rcx,rsi
   140002a1d:	call   0x14000800c
   140002a22:	jmp    0x140002a26
   140002a24:	xor    esi,esi
   140002a26:	mov    QWORD PTR [rsp+0x80],rsi
   140002a2e:	jmp    0x140002a40
   140002a30:	mov    r14,QWORD PTR [rsp+0x88]
   140002a38:	mov    rsi,QWORD PTR [rsp+0x80]
   140002a40:	test   rsi,rsi
   140002a43:	jne    0x140002a6f
   140002a45:	mov    rax,QWORD PTR [r14]
   140002a48:	mov    rbx,QWORD PTR [rax+0x98]
   140002a4f:	mov    rcx,rbx
   140002a52:	call   QWORD PTR [rip+0x6988]        # 0x1400093e0
   140002a58:	mov    rdx,QWORD PTR [rsp+0x90]
   140002a60:	mov    rcx,r14
   140002a63:	call   rbx
   140002a65:	mov    eax,0x8007000e
   140002a6a:	jmp    0x140002ba8
   140002a6f:	mov    ecx,DWORD PTR [rip+0xa67b]        # 0x14000d0f0
   140002a75:	xor    r12d,r12d
   140002a78:	test   ecx,ecx
   140002a7a:	jle    0x140002b7f
   140002a80:	mov    r15,rsi
   140002a83:	and    DWORD PTR [r15+0x8],0x0
   140002a88:	and    DWORD PTR [r15+0xc],0x0
   140002a8d:	mov    rax,QWORD PTR [r14]
   140002a90:	mov    rbx,QWORD PTR [rax+0x28]
   140002a94:	mov    rcx,rbx
   140002a97:	call   QWORD PTR [rip+0x6943]        # 0x1400093e0
   140002a9d:	lea    r8,[rsp+0x80]
   140002aa5:	mov    edx,r12d
   140002aa8:	mov    rcx,r14
   140002aab:	call   rbx
   140002aad:	test   eax,eax
   140002aaf:	js     0x140002b6b
   140002ab5:	and    QWORD PTR [rsp+0x88],0x0
   140002abe:	mov    rax,QWORD PTR [r14]
   140002ac1:	mov    rbx,QWORD PTR [rax+0x60]
   140002ac5:	mov    rcx,rbx
   140002ac8:	call   QWORD PTR [rip+0x6912]        # 0x1400093e0
   140002ace:	and    QWORD PTR [rsp+0x28],0x0
   140002ad4:	and    QWORD PTR [rsp+0x20],0x0
   140002ada:	xor    r9d,r9d
   140002add:	lea    r8,[rsp+0x88]
   140002ae5:	mov    rax,QWORD PTR [rsp+0x80]
   140002aed:	mov    edx,DWORD PTR [rax]
   140002aef:	mov    rcx,r14
   140002af2:	call   rbx
   140002af4:	test   eax,eax
   140002af6:	js     0x140002b39
   140002af8:	mov    rbx,QWORD PTR [rsp+0x88]
   140002b00:	and    QWORD PTR [rsp+0x88],0x0
   140002b09:	cmp    QWORD PTR [r15],rbx
   140002b0c:	je     0x140002b1a
   140002b0e:	mov    rcx,QWORD PTR [r15]
   140002b11:	call   QWORD PTR [rip+0x66e9]        # 0x140009200
   140002b17:	mov    QWORD PTR [r15],rbx
   140002b1a:	mov    rcx,QWORD PTR [r15]
   140002b1d:	call   QWORD PTR [rip+0x66d5]        # 0x1400091f8
   140002b23:	mov    DWORD PTR [r15+0x8],eax
   140002b27:	mov    r13,QWORD PTR [rsp+0x80]
   140002b2f:	mov    eax,DWORD PTR [r13+0x0]
   140002b33:	mov    DWORD PTR [r15+0xc],eax
   140002b37:	jmp    0x140002b41
   140002b39:	mov    r13,QWORD PTR [rsp+0x80]
   140002b41:	mov    rax,QWORD PTR [r14]
   140002b44:	mov    rbx,QWORD PTR [rax+0xa0]
   140002b4b:	mov    rcx,rbx
   140002b4e:	call   QWORD PTR [rip+0x688c]        # 0x1400093e0
   140002b54:	mov    rdx,r13
   140002b57:	mov    rcx,r14
   140002b5a:	call   rbx
   140002b5c:	nop
   140002b5d:	mov    rcx,QWORD PTR [rsp+0x88]
   140002b65:	call   QWORD PTR [rip+0x6695]        # 0x140009200
   140002b6b:	inc    r12d
   140002b6e:	add    r15,0x10
   140002b72:	cmp    r12d,DWORD PTR [rip+0xa577]        # 0x14000d0f0
   140002b79:	jl     0x140002a83
   140002b7f:	mov    QWORD PTR [rip+0xa562],rsi        # 0x14000d0e8
   140002b86:	mov    rax,QWORD PTR [r14]
   140002b89:	mov    rbx,QWORD PTR [rax+0x98]
   140002b90:	mov    rcx,rbx
   140002b93:	call   QWORD PTR [rip+0x6847]        # 0x1400093e0
   140002b99:	mov    rdx,QWORD PTR [rsp+0x90]
   140002ba1:	mov    rcx,r14
   140002ba4:	call   rbx
   140002ba6:	xor    eax,eax
   140002ba8:	add    rsp,0x48
   140002bac:	pop    r15
   140002bae:	pop    r14
   140002bb0:	pop    r13
   140002bb2:	pop    r12
   140002bb4:	pop    rsi
   140002bb5:	pop    rbx
   140002bb6:	ret    
   140002bb7:	int3   
   140002bb8:	int3   
   140002bb9:	int3   
   140002bba:	int3   
   140002bbb:	int3   
   140002bbc:	int3   
   140002bbd:	int3   
   140002bbe:	int3   
   140002bbf:	int3   
   140002bc0:	mov    rax,rsp
   140002bc3:	push   rbp
   140002bc4:	push   rdi
   140002bc5:	push   r14
   140002bc7:	lea    rbp,[rax-0x1a8]
   140002bce:	sub    rsp,0x290
   140002bd5:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140002bde:	mov    QWORD PTR [rax+0x8],rbx
   140002be2:	mov    QWORD PTR [rax+0x18],rsi
   140002be6:	mov    rax,QWORD PTR [rip+0xa433]        # 0x14000d020
   140002bed:	xor    rax,rsp
   140002bf0:	mov    QWORD PTR [rbp+0x180],rax
   140002bf7:	mov    ebx,edx
   140002bf9:	cmp    QWORD PTR [rip+0xa4d7],0x0        # 0x14000d0d8
   140002c01:	je     0x140002c14
   140002c03:	cmp    QWORD PTR [rip+0xa4dd],0x0        # 0x14000d0e8
   140002c0b:	je     0x140002c14
   140002c0d:	xor    eax,eax
   140002c0f:	jmp    0x140002e5f
   140002c14:	mov    r14,QWORD PTR [rip+0xab7d]        # 0x14000d798
   140002c1b:	add    r14,0x18
   140002c1f:	mov    QWORD PTR [rsp+0x50],r14
   140002c24:	mov    rcx,r14
   140002c27:	call   QWORD PTR [rip+0x648b]        # 0x1400090b8
   140002c2d:	mov    BYTE PTR [rsp+0x58],0x1
   140002c32:	mov    esi,0x80004005
   140002c37:	mov    rdx,QWORD PTR [rip+0xa49a]        # 0x14000d0d8
   140002c3e:	test   rdx,rdx
   140002c41:	jne    0x140002e3c
   140002c47:	and    QWORD PTR [rsp+0x30],rdx
   140002c4c:	mov    rcx,QWORD PTR [rip+0xa475]        # 0x14000d0c8
   140002c53:	movzx  r8d,WORD PTR [rip+0xa477]        # 0x14000d0d2
   140002c5b:	movzx  edx,WORD PTR [rip+0xa46e]        # 0x14000d0d0
   140002c62:	mov    eax,DWORD PTR [rcx]
   140002c64:	cmp    DWORD PTR [rip+0xab1e],eax        # 0x14000d788
   140002c6a:	jne    0x140002cd9
   140002c6c:	mov    eax,DWORD PTR [rcx+0x4]
   140002c6f:	cmp    DWORD PTR [rip+0xab17],eax        # 0x14000d78c
   140002c75:	jne    0x140002cd9
   140002c77:	mov    eax,DWORD PTR [rcx+0x8]
   140002c7a:	cmp    DWORD PTR [rip+0xab10],eax        # 0x14000d790
   140002c80:	jne    0x140002cd9
   140002c82:	mov    eax,DWORD PTR [rcx+0xc]
   140002c85:	cmp    DWORD PTR [rip+0xab09],eax        # 0x14000d794
   140002c8b:	jne    0x140002cd9
   140002c8d:	mov    eax,0xffff
   140002c92:	cmp    dx,ax
   140002c95:	jne    0x140002cd9
   140002c97:	cmp    r8w,ax
   140002c9b:	jne    0x140002cd9
   140002c9d:	mov    ebx,0x104
   140002ca2:	mov    r8d,ebx
   140002ca5:	lea    rdx,[rsp+0x70]
   140002caa:	mov    rcx,QWORD PTR [rip+0xac07]        # 0x14000d8b8
   140002cb1:	call   QWORD PTR [rip+0x6409]        # 0x1400090c0
   140002cb7:	test   eax,eax
   140002cb9:	je     0x140002e33
   140002cbf:	cmp    eax,ebx
   140002cc1:	je     0x140002e33
   140002cc7:	lea    rdx,[rsp+0x30]
   140002ccc:	lea    rcx,[rsp+0x70]
   140002cd1:	call   QWORD PTR [rip+0x6511]        # 0x1400091e8
   140002cd7:	jmp    0x140002cec
   140002cd9:	lea    rax,[rsp+0x30]
   140002cde:	mov    QWORD PTR [rsp+0x20],rax
   140002ce3:	mov    r9d,ebx
   140002ce6:	call   QWORD PTR [rip+0x64dc]        # 0x1400091c8
   140002cec:	mov    esi,eax
   140002cee:	test   eax,eax
   140002cf0:	js     0x140002e33
   140002cf6:	and    QWORD PTR [rsp+0x40],0x0
   140002cfc:	mov    rdi,QWORD PTR [rsp+0x30]
   140002d01:	mov    rax,QWORD PTR [rdi]
   140002d04:	mov    rbx,QWORD PTR [rax+0x30]
   140002d08:	mov    rcx,rbx
   140002d0b:	call   QWORD PTR [rip+0x66cf]        # 0x1400093e0
   140002d11:	lea    r8,[rsp+0x40]
   140002d16:	mov    rdx,QWORD PTR [rip+0xa3a3]        # 0x14000d0c0
   140002d1d:	mov    rcx,rdi
   140002d20:	call   rbx
   140002d22:	mov    esi,eax
   140002d24:	test   eax,eax
   140002d26:	js     0x140002df9
   140002d2c:	mov    rbx,QWORD PTR [rsp+0x40]
   140002d31:	mov    QWORD PTR [rsp+0x38],rbx
   140002d36:	test   rbx,rbx
   140002d39:	je     0x140002d55
   140002d3b:	mov    rax,QWORD PTR [rbx]
   140002d3e:	mov    rdi,QWORD PTR [rax+0x8]
   140002d42:	mov    rcx,rdi
   140002d45:	call   QWORD PTR [rip+0x6695]        # 0x1400093e0
   140002d4b:	mov    rcx,rbx
   140002d4e:	call   rdi
   140002d50:	mov    rbx,QWORD PTR [rsp+0x40]
   140002d55:	and    QWORD PTR [rsp+0x48],0x0
   140002d5b:	mov    rax,QWORD PTR [rbx]
   140002d5e:	mov    rdi,QWORD PTR [rax]
   140002d61:	mov    rcx,rdi
   140002d64:	call   QWORD PTR [rip+0x6676]        # 0x1400093e0
   140002d6a:	lea    r8,[rsp+0x48]
   140002d6f:	lea    rdx,[rip+0x6ce2]        # 0x140009a58
   140002d76:	mov    rcx,rbx
   140002d79:	call   rdi
   140002d7b:	test   eax,eax
   140002d7d:	js     0x140002d8e
   140002d7f:	lea    rdx,[rsp+0x48]
   140002d84:	lea    rcx,[rsp+0x38]
   140002d89:	call   0x1400026ac
   140002d8e:	mov    rax,QWORD PTR [rsp+0x38]
   140002d93:	and    QWORD PTR [rsp+0x38],0x0
   140002d99:	mov    QWORD PTR [rip+0xa338],rax        # 0x14000d0d8
   140002da0:	mov    rax,QWORD PTR [rip+0xa9f1]        # 0x14000d798
   140002da7:	test   rax,rax
   140002daa:	je     0x140002db2
   140002dac:	lea    rcx,[rax+0x8]
   140002db0:	jmp    0x140002db4
   140002db2:	xor    ecx,ecx
   140002db4:	call   0x140002808
   140002db9:	nop
   140002dba:	mov    rbx,QWORD PTR [rsp+0x48]
   140002dbf:	test   rbx,rbx
   140002dc2:	je     0x140002dda
   140002dc4:	mov    rax,QWORD PTR [rbx]
   140002dc7:	mov    rdi,QWORD PTR [rax+0x10]
   140002dcb:	mov    rcx,rdi
   140002dce:	call   QWORD PTR [rip+0x660c]        # 0x1400093e0
   140002dd4:	mov    rcx,rbx
   140002dd7:	call   rdi
   140002dd9:	nop
   140002dda:	mov    rbx,QWORD PTR [rsp+0x38]
   140002ddf:	test   rbx,rbx
   140002de2:	je     0x140002df9
   140002de4:	mov    rax,QWORD PTR [rbx]
   140002de7:	mov    rdi,QWORD PTR [rax+0x10]
   140002deb:	mov    rcx,rdi
   140002dee:	call   QWORD PTR [rip+0x65ec]        # 0x1400093e0
   140002df4:	mov    rcx,rbx
   140002df7:	call   rdi
   140002df9:	mov    rdi,QWORD PTR [rsp+0x30]
   140002dfe:	mov    rax,QWORD PTR [rdi]
   140002e01:	mov    rbx,QWORD PTR [rax+0x10]
   140002e05:	mov    rcx,rbx
   140002e08:	call   QWORD PTR [rip+0x65d2]        # 0x1400093e0
   140002e0e:	mov    rcx,rdi
   140002e11:	call   rbx
   140002e13:	nop
   140002e14:	mov    rbx,QWORD PTR [rsp+0x40]
   140002e19:	test   rbx,rbx
   140002e1c:	je     0x140002e33
   140002e1e:	mov    rax,QWORD PTR [rbx]
   140002e21:	mov    rdi,QWORD PTR [rax+0x10]
   140002e25:	mov    rcx,rdi
   140002e28:	call   QWORD PTR [rip+0x65b2]        # 0x1400093e0
   140002e2e:	mov    rcx,rbx
   140002e31:	call   rdi
   140002e33:	mov    rdx,QWORD PTR [rip+0xa29e]        # 0x14000d0d8
   140002e3a:	jmp    0x140002e3e
   140002e3c:	xor    esi,esi
   140002e3e:	test   rdx,rdx
   140002e41:	je     0x140002e54
   140002e43:	cmp    QWORD PTR [rip+0xa29d],0x0        # 0x14000d0e8
   140002e4b:	jne    0x140002e54
   140002e4d:	call   0x140002958
   140002e52:	mov    esi,eax
   140002e54:	mov    rcx,r14
   140002e57:	call   QWORD PTR [rip+0x6323]        # 0x140009180
   140002e5d:	mov    eax,esi
   140002e5f:	mov    rcx,QWORD PTR [rbp+0x180]
   140002e66:	xor    rcx,rsp
   140002e69:	call   0x140007b00
   140002e6e:	lea    r11,[rsp+0x290]
   140002e76:	mov    rbx,QWORD PTR [r11+0x20]
   140002e7a:	mov    rsi,QWORD PTR [r11+0x30]
   140002e7e:	mov    rsp,r11
   140002e81:	pop    r14
   140002e83:	pop    rdi
   140002e84:	pop    rbp
   140002e85:	ret    
   140002e86:	int3   
   140002e87:	int3   
   140002e88:	int3   
   140002e89:	int3   
   140002e8a:	int3   
   140002e8b:	int3   
   140002e8c:	mov    QWORD PTR [rsp+0x10],rbx
   140002e91:	mov    QWORD PTR [rsp+0x18],rsi
   140002e96:	push   rdi
   140002e97:	sub    rsp,0x30
   140002e9b:	and    QWORD PTR [rsp+0x40],0x0
   140002ea1:	mov    rbx,rcx
   140002ea4:	mov    rdi,QWORD PTR [rcx+0x10]
   140002ea8:	test   rdi,rdi
   140002eab:	jne    0x140002eb1
   140002ead:	xor    eax,eax
   140002eaf:	jmp    0x140002f16
   140002eb1:	mov    rcx,rdi
   140002eb4:	call   QWORD PTR [rip+0x6526]        # 0x1400093e0
   140002eba:	mov    rcx,QWORD PTR [rbx+0x18]
   140002ebe:	lea    r8,[rsp+0x40]
   140002ec3:	lea    rdx,[rip+0x6cce]        # 0x140009b98
   140002eca:	call   rdi
   140002ecc:	mov    esi,eax
   140002ece:	test   eax,eax
   140002ed0:	js     0x140002ef5
   140002ed2:	mov    rdx,QWORD PTR [rsp+0x40]
   140002ed7:	lea    rax,[rbx+0x28]
   140002edb:	mov    rcx,QWORD PTR [rbx]
   140002ede:	mov    r9d,0x1
   140002ee4:	mov    QWORD PTR [rsp+0x20],rax
   140002ee9:	lea    r8d,[r9+0x3]
   140002eed:	call   QWORD PTR [rip+0x64a5]        # 0x140009398
   140002ef3:	mov    esi,eax
   140002ef5:	mov    rdi,QWORD PTR [rsp+0x40]
   140002efa:	test   rdi,rdi
   140002efd:	je     0x140002f14
   140002eff:	mov    rax,QWORD PTR [rdi]
   140002f02:	mov    rbx,QWORD PTR [rax+0x10]
   140002f06:	mov    rcx,rbx
   140002f09:	call   QWORD PTR [rip+0x64d1]        # 0x1400093e0
   140002f0f:	mov    rcx,rdi
   140002f12:	call   rbx
   140002f14:	mov    eax,esi
   140002f16:	mov    rbx,QWORD PTR [rsp+0x48]
   140002f1b:	mov    rsi,QWORD PTR [rsp+0x50]
   140002f20:	add    rsp,0x30
   140002f24:	pop    rdi
   140002f25:	ret    
   140002f26:	int3   
   140002f27:	int3   
   140002f28:	int3   
   140002f29:	int3   
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	mov    QWORD PTR [rsp+0x10],rbx
   140002f31:	mov    QWORD PTR [rsp+0x18],rsi
   140002f36:	push   rbp
   140002f37:	push   r14
   140002f39:	push   r15
   140002f3b:	lea    rbp,[rsp-0x170]
   140002f43:	sub    rsp,0x270
   140002f4a:	mov    rax,QWORD PTR [rip+0xa0cf]        # 0x14000d020
   140002f51:	xor    rax,rsp
   140002f54:	mov    QWORD PTR [rbp+0x160],rax
   140002f5b:	xor    r15d,r15d
   140002f5e:	lea    r9,[rsp+0x38]
   140002f63:	lea    r8,[rsp+0x30]
   140002f68:	mov    QWORD PTR [rsp+0x30],r15
   140002f6d:	mov    QWORD PTR [rsp+0x38],r15
   140002f72:	call   0x1400037dc
   140002f77:	mov    r14d,eax
   140002f7a:	test   eax,eax
   140002f7c:	js     0x1400030b6
   140002f82:	mov    rbx,QWORD PTR [rsp+0x38]
   140002f87:	mov    QWORD PTR [rsp+0x40],r15
   140002f8c:	mov    rax,QWORD PTR [rbx]
   140002f8f:	mov    rsi,QWORD PTR [rax+0x48]
   140002f93:	mov    rcx,rsi
   140002f96:	call   QWORD PTR [rip+0x6444]        # 0x1400093e0
   140002f9c:	lea    rax,[rsp+0x40]
   140002fa1:	xor    r9d,r9d
   140002fa4:	mov    QWORD PTR [rsp+0x28],rax
   140002fa9:	xor    r8d,r8d
   140002fac:	or     edx,0xffffffff
   140002faf:	mov    QWORD PTR [rsp+0x20],r15
   140002fb4:	mov    rcx,rbx
   140002fb7:	call   rsi
   140002fb9:	test   eax,eax
   140002fbb:	js     0x140003095
   140002fc1:	cmp    QWORD PTR [rsp+0x40],r15
   140002fc6:	je     0x140003095
   140002fcc:	mov    rcx,QWORD PTR [rsp+0x30]
   140002fd1:	call   QWORD PTR [rip+0x6221]        # 0x1400091f8
   140002fd7:	mov    r8,QWORD PTR [rsp+0x30]
   140002fdc:	lea    rcx,[rsp+0x50]
   140002fe1:	mov    r14d,0x104
   140002fe7:	mov    r9d,eax
   140002fea:	mov    edx,r14d
   140002fed:	call   QWORD PTR [rip+0x634d]        # 0x140009340
   140002ff3:	test   eax,eax
   140002ff5:	je     0x14000301b
   140002ff7:	cmp    eax,0xc
   140002ffa:	je     0x140003121
   140003000:	cmp    eax,0x16
   140003003:	je     0x140003116
   140003009:	cmp    eax,0x22
   14000300c:	je     0x140003116
   140003012:	cmp    eax,0x50
   140003015:	jne    0x14000310b
   14000301b:	lea    rbx,[rsp+0x50]
   140003020:	mov    WORD PTR [rbp+0x156],r15w
   140003028:	lea    rsi,[rsp+0x50]
   14000302d:	cmp    WORD PTR [rsp+0x50],r15w
   140003033:	je     0x140003067
   140003035:	mov    rcx,rsi
   140003038:	call   QWORD PTR [rip+0x61fa]        # 0x140009238
   14000303e:	movzx  ecx,WORD PTR [rsi]
   140003041:	sub    cx,0x2f
   140003045:	cmp    cx,0x2d
   140003049:	ja     0x14000305e
   14000304b:	movabs rdx,0x200000000801
   140003055:	bt     rdx,rcx
   140003059:	jae    0x14000305e
   14000305b:	mov    rbx,rax
   14000305e:	mov    rsi,rax
   140003061:	cmp    WORD PTR [rax],r15w
   140003065:	jne    0x140003035
   140003067:	lea    rax,[rsp+0x50]
   14000306c:	sub    rbx,rax
   14000306f:	sar    rbx,1
   140003072:	cmp    ebx,r14d
   140003075:	jae    0x14000308e
   140003077:	mov    eax,ebx
   140003079:	add    rax,rax
   14000307c:	cmp    rax,0x208
   140003082:	jae    0x14000312c
   140003088:	mov    WORD PTR [rsp+rax*1+0x50],r15w
   14000308e:	lea    r8,[rsp+0x50]
   140003093:	jmp    0x140003098
   140003095:	xor    r8d,r8d
   140003098:	mov    rdx,QWORD PTR [rsp+0x30]
   14000309d:	mov    rcx,QWORD PTR [rsp+0x38]
   1400030a2:	call   QWORD PTR [rip+0x6148]        # 0x1400091f0
   1400030a8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400030ad:	mov    r14d,eax
   1400030b0:	call   QWORD PTR [rip+0x614a]        # 0x140009200
   1400030b6:	mov    rbx,QWORD PTR [rsp+0x38]
   1400030bb:	test   rbx,rbx
   1400030be:	je     0x1400030d5
   1400030c0:	mov    rax,QWORD PTR [rbx]
   1400030c3:	mov    rsi,QWORD PTR [rax+0x10]
   1400030c7:	mov    rcx,rsi
   1400030ca:	call   QWORD PTR [rip+0x6310]        # 0x1400093e0
   1400030d0:	mov    rcx,rbx
   1400030d3:	call   rsi
   1400030d5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400030da:	call   QWORD PTR [rip+0x6120]        # 0x140009200
   1400030e0:	mov    eax,r14d
   1400030e3:	mov    rcx,QWORD PTR [rbp+0x160]
   1400030ea:	xor    rcx,rsp
   1400030ed:	call   0x140007b00
   1400030f2:	lea    r11,[rsp+0x270]
   1400030fa:	mov    rbx,QWORD PTR [r11+0x28]
   1400030fe:	mov    rsi,QWORD PTR [r11+0x30]
   140003102:	mov    rsp,r11
   140003105:	pop    r15
   140003107:	pop    r14
   140003109:	pop    rbp
   14000310a:	ret    
   14000310b:	mov    ecx,0x80004005
   140003110:	call   0x140005180
   140003115:	int3   
   140003116:	mov    ecx,0x80070057
   14000311b:	call   0x140005180
   140003120:	int3   
   140003121:	mov    ecx,0x8007000e
   140003126:	call   0x140005180
   14000312b:	int3   
   14000312c:	call   0x140007e48
   140003131:	int3   
   140003132:	int3   
   140003133:	int3   
   140003134:	int3   
   140003135:	int3   
   140003136:	int3   
   140003137:	int3   
   140003138:	mov    QWORD PTR [rsp+0x8],rbx
   14000313d:	mov    QWORD PTR [rsp+0x10],rsi
   140003142:	push   rdi
   140003143:	sub    rsp,0x20
   140003147:	mov    rdi,QWORD PTR [rcx+0x48]
   14000314b:	test   rdi,rdi
   14000314e:	je     0x1400031ac
   140003150:	cmp    QWORD PTR [rdi],0x0
   140003154:	je     0x1400031ac
   140003156:	mov    rbx,QWORD PTR [rdi+0x8]
   14000315a:	mov    rcx,rbx
   14000315d:	call   QWORD PTR [rip+0x627d]        # 0x1400093e0
   140003163:	mov    ecx,0x1
   140003168:	call   rbx
   14000316a:	test   eax,eax
   14000316c:	js     0x140003247
   140003172:	mov    rbx,QWORD PTR [rdi+0x38]
   140003176:	mov    rcx,rbx
   140003179:	call   QWORD PTR [rip+0x6261]        # 0x1400093e0
   14000317f:	call   rbx
   140003181:	mov    rcx,QWORD PTR [rdi]
   140003184:	mov    rdx,rax
   140003187:	mov    r8d,0x1
   14000318d:	call   0x140003260
   140003192:	test   eax,eax
   140003194:	js     0x140003247
   14000319a:	add    rdi,0x48
   14000319e:	cmp    QWORD PTR [rdi],0x0
   1400031a2:	jne    0x140003156
   1400031a4:	test   eax,eax
   1400031a6:	js     0x140003247
   1400031ac:	mov    rdi,QWORD PTR [rip+0xa7bd]        # 0x14000d970
   1400031b3:	xor    eax,eax
   1400031b5:	mov    rcx,QWORD PTR [rip+0xa7bc]        # 0x14000d978
   1400031bc:	cmp    rdi,rcx
   1400031bf:	jae    0x140003219
   1400031c1:	mov    rsi,QWORD PTR [rdi]
   1400031c4:	test   rsi,rsi
   1400031c7:	je     0x14000320c
   1400031c9:	mov    rbx,QWORD PTR [rsi+0x8]
   1400031cd:	mov    rcx,rbx
   1400031d0:	call   QWORD PTR [rip+0x620a]        # 0x1400093e0
   1400031d6:	mov    ecx,0x1
   1400031db:	call   rbx
   1400031dd:	test   eax,eax
   1400031df:	js     0x140003247
   1400031e1:	mov    rbx,QWORD PTR [rsi+0x38]
   1400031e5:	mov    rcx,rbx
   1400031e8:	call   QWORD PTR [rip+0x61f2]        # 0x1400093e0
   1400031ee:	call   rbx
   1400031f0:	mov    rcx,QWORD PTR [rsi]
   1400031f3:	mov    rdx,rax
   1400031f6:	mov    r8d,0x1
   1400031fc:	call   0x140003260
   140003201:	test   eax,eax
   140003203:	js     0x140003247
   140003205:	mov    rcx,QWORD PTR [rip+0xa76c]        # 0x14000d978
   14000320c:	add    rdi,0x8
   140003210:	cmp    rdi,rcx
   140003213:	jb     0x1400031c1
   140003215:	test   eax,eax
   140003217:	js     0x140003247
   140003219:	mov    rcx,QWORD PTR [rip+0xa748]        # 0x14000d968
   140003220:	call   0x140002f2c
   140003225:	test   eax,eax
   140003227:	js     0x140003247
   140003229:	mov    rbx,QWORD PTR [rip+0xa570]        # 0x14000d7a0
   140003230:	test   rbx,rbx
   140003233:	je     0x140003247
   140003235:	mov    rcx,rbx
   140003238:	call   QWORD PTR [rip+0x61a2]        # 0x1400093e0
   14000323e:	mov    rcx,QWORD PTR [rip+0xa673]        # 0x14000d8b8
   140003245:	call   rbx
   140003247:	mov    rbx,QWORD PTR [rsp+0x30]
   14000324c:	mov    rsi,QWORD PTR [rsp+0x38]
   140003251:	add    rsp,0x20
   140003255:	pop    rdi
   140003256:	ret    
   140003257:	int3   
   140003258:	int3   
   140003259:	int3   
   14000325a:	int3   
   14000325b:	int3   
   14000325c:	int3   
   14000325d:	int3   
   14000325e:	int3   
   14000325f:	int3   
   140003260:	mov    QWORD PTR [rsp+0x18],rbx
   140003265:	push   rbp
   140003266:	push   rsi
   140003267:	push   rdi
   140003268:	push   r12
   14000326a:	push   r13
   14000326c:	push   r14
   14000326e:	push   r15
   140003270:	lea    rbp,[rsp-0x140]
   140003278:	sub    rsp,0x240
   14000327f:	mov    rax,QWORD PTR [rip+0x9d9a]        # 0x14000d020
   140003286:	xor    rax,rsp
   140003289:	mov    QWORD PTR [rbp+0x130],rax
   140003290:	xor    r13d,r13d
   140003293:	mov    r12d,r8d
   140003296:	mov    ebx,r13d
   140003299:	mov    rsi,rdx
   14000329c:	mov    QWORD PTR [rsp+0x68],rbx
   1400032a1:	mov    r14,rcx
   1400032a4:	test   rdx,rdx
   1400032a7:	je     0x1400036c4
   1400032ad:	cmp    DWORD PTR [rcx],r13d
   1400032b0:	jne    0x1400032d7
   1400032b2:	mov    eax,DWORD PTR [rip+0x6d6c]        # 0x14000a024
   1400032b8:	cmp    DWORD PTR [rcx+0x4],eax
   1400032bb:	jne    0x1400032d7
   1400032bd:	mov    eax,DWORD PTR [rip+0x6d65]        # 0x14000a028
   1400032c3:	cmp    DWORD PTR [rcx+0x8],eax
   1400032c6:	jne    0x1400032d7
   1400032c8:	mov    eax,DWORD PTR [rip+0x6d5e]        # 0x14000a02c
   1400032ce:	cmp    DWORD PTR [rcx+0xc],eax
   1400032d1:	je     0x1400036c4
   1400032d7:	lea    rax,[rsp+0x68]
   1400032dc:	mov    r15d,0x1
   1400032e2:	mov    r8d,r15d
   1400032e5:	mov    QWORD PTR [rsp+0x20],rax
   1400032ea:	lea    r9,[rip+0x6787]        # 0x140009a78
   1400032f1:	xor    edx,edx
   1400032f3:	lea    rcx,[rip+0x6d16]        # 0x14000a010
   1400032fa:	call   QWORD PTR [rip+0x60b8]        # 0x1400093b8
   140003300:	test   eax,eax
   140003302:	js     0x1400036bf
   140003308:	cmp    DWORD PTR [rsi],r13d
   14000330b:	je     0x14000339a
   140003311:	mov    rax,QWORD PTR [rsi+0x8]
   140003315:	mov    rbx,QWORD PTR [rsp+0x68]
   14000331a:	movups xmm0,XMMWORD PTR [rax]
   14000331d:	movdqu XMMWORD PTR [rbp-0x68],xmm0
   140003322:	mov    rax,QWORD PTR [rbx]
   140003325:	test   r12d,r12d
   140003328:	je     0x140003360
   14000332a:	cmp    DWORD PTR [rsi],r15d
   14000332d:	jne    0x140003335
   14000332f:	mov    rdi,QWORD PTR [rax+0x28]
   140003333:	jmp    0x140003339
   140003335:	mov    rdi,QWORD PTR [rax+0x38]
   140003339:	mov    rcx,rdi
   14000333c:	call   QWORD PTR [rip+0x609e]        # 0x1400093e0
   140003342:	lea    r9,[rbp-0x68]
   140003346:	mov    r8d,r15d
   140003349:	mov    rdx,r14
   14000334c:	mov    rcx,rbx
   14000334f:	call   rdi
   140003351:	mov    r15d,eax
   140003354:	test   eax,eax
   140003356:	js     0x140003390
   140003358:	mov    r15d,0x1
   14000335e:	jmp    0x140003387
   140003360:	cmp    DWORD PTR [rsi],r15d
   140003363:	jne    0x14000336b
   140003365:	mov    rdi,QWORD PTR [rax+0x30]
   140003369:	jmp    0x14000336f
   14000336b:	mov    rdi,QWORD PTR [rax+0x40]
   14000336f:	mov    rcx,rdi
   140003372:	call   QWORD PTR [rip+0x6068]        # 0x1400093e0
   140003378:	lea    r9,[rbp-0x68]
   14000337c:	mov    r8d,r15d
   14000337f:	mov    rdx,r14
   140003382:	mov    rcx,rbx
   140003385:	call   rdi
   140003387:	add    rsi,0x10
   14000338b:	jmp    0x140003308
   140003390:	mov    rbx,QWORD PTR [rsp+0x68]
   140003395:	jmp    0x1400036c7
   14000339a:	test   r12d,r12d
   14000339d:	jne    0x1400036bf
   1400033a3:	lea    r8d,[r12+0x40]
   1400033a8:	mov    rcx,r14
   1400033ab:	lea    rdx,[rbp+0xb0]
   1400033b2:	call   QWORD PTR [rip+0x5fe8]        # 0x1400093a0
   1400033b8:	mov    ebx,0x80
   1400033bd:	lea    r8,[rip+0x66f4]        # 0x140009ab8
   1400033c4:	mov    edx,ebx
   1400033c6:	lea    rcx,[rbp-0x50]
   1400033ca:	call   QWORD PTR [rip+0x5f50]        # 0x140009320
   1400033d0:	lea    r14d,[r12+0xc]
   1400033d5:	lea    r12d,[rbx-0x6a]
   1400033d9:	lea    r15d,[rbx-0x30]
   1400033dd:	test   eax,eax
   1400033df:	je     0x140003405
   1400033e1:	cmp    eax,r14d
   1400033e4:	je     0x140003724
   1400033ea:	cmp    eax,r12d
   1400033ed:	je     0x140003719
   1400033f3:	cmp    eax,0x22
   1400033f6:	je     0x140003719
   1400033fc:	cmp    eax,r15d
   1400033ff:	jne    0x14000370e
   140003405:	lea    r8,[rbp+0xb0]
   14000340c:	mov    rdx,rbx
   14000340f:	lea    rcx,[rbp-0x50]
   140003413:	call   QWORD PTR [rip+0x5eff]        # 0x140009318
   140003419:	test   eax,eax
   14000341b:	je     0x140003441
   14000341d:	cmp    eax,r14d
   140003420:	je     0x140003745
   140003426:	cmp    eax,r12d
   140003429:	je     0x14000373a
   14000342f:	cmp    eax,0x22
   140003432:	je     0x14000373a
   140003438:	cmp    eax,r15d
   14000343b:	jne    0x14000372f
   140003441:	lea    r8,[rip+0x6640]        # 0x140009a88
   140003448:	mov    rdx,rbx
   14000344b:	lea    rcx,[rbp-0x50]
   14000344f:	call   QWORD PTR [rip+0x5ec3]        # 0x140009318
   140003455:	test   eax,eax
   140003457:	je     0x14000347d
   140003459:	cmp    eax,r14d
   14000345c:	je     0x140003766
   140003462:	cmp    eax,r12d
   140003465:	je     0x14000375b
   14000346b:	cmp    eax,0x22
   14000346e:	je     0x14000375b
   140003474:	cmp    eax,r15d
   140003477:	jne    0x140003750
   14000347d:	mov    rdi,0xffffffff80000000
   140003484:	mov    QWORD PTR [rbp-0x78],r13
   140003488:	lea    rax,[rsp+0x78]
   14000348d:	mov    QWORD PTR [rbp-0x80],rdi
   140003491:	mov    rcx,rdi
   140003494:	mov    QWORD PTR [rbp-0x70],r13
   140003498:	mov    r9d,0x20019
   14000349e:	mov    DWORD PTR [rsp+0x60],r13d
   1400034a3:	xor    r8d,r8d
   1400034a6:	mov    QWORD PTR [rsp+0x78],r13
   1400034ab:	lea    rdx,[rbp-0x50]
   1400034af:	mov    QWORD PTR [rsp+0x20],rax
   1400034b4:	mov    rbx,r13
   1400034b7:	call   QWORD PTR [rip+0x5b5b]        # 0x140009018
   1400034bd:	test   eax,eax
   1400034bf:	jne    0x140003535
   1400034c1:	mov    rbx,QWORD PTR [rsp+0x78]
   1400034c6:	lea    rax,[rsp+0x60]
   1400034cb:	mov    QWORD PTR [rsp+0x58],r13
   1400034d0:	xor    r9d,r9d
   1400034d3:	mov    QWORD PTR [rsp+0x50],r13
   1400034d8:	xor    r8d,r8d
   1400034db:	mov    QWORD PTR [rsp+0x48],r13
   1400034e0:	xor    edx,edx
   1400034e2:	mov    QWORD PTR [rsp+0x40],r13
   1400034e7:	mov    rcx,rbx
   1400034ea:	mov    QWORD PTR [rsp+0x38],r13
   1400034ef:	mov    QWORD PTR [rsp+0x30],r13
   1400034f4:	mov    QWORD PTR [rsp+0x28],r13
   1400034f9:	mov    QWORD PTR [rsp+0x20],rax
   1400034fe:	call   QWORD PTR [rip+0x5b04]        # 0x140009008
   140003504:	movsxd rsi,eax
   140003507:	test   rbx,rbx
   14000350a:	je     0x140003518
   14000350c:	mov    rcx,rbx
   14000350f:	call   QWORD PTR [rip+0x5aeb]        # 0x140009000
   140003515:	mov    rbx,r13
   140003518:	test   rsi,rsi
   14000351b:	jne    0x140003535
   14000351d:	cmp    DWORD PTR [rsp+0x60],r13d
   140003522:	jne    0x140003535
   140003524:	lea    rdx,[rbp-0x50]
   140003528:	lea    rcx,[rbp-0x80]
   14000352c:	call   0x1400053c4
   140003531:	mov    rdi,QWORD PTR [rbp-0x80]
   140003535:	mov    esi,0x80
   14000353a:	lea    r8,[rip+0x6577]        # 0x140009ab8
   140003541:	mov    edx,esi
   140003543:	lea    rcx,[rbp-0x50]
   140003547:	call   QWORD PTR [rip+0x5dd3]        # 0x140009320
   14000354d:	test   eax,eax
   14000354f:	je     0x140003575
   140003551:	cmp    eax,r14d
   140003554:	je     0x140003787
   14000355a:	cmp    eax,r12d
   14000355d:	je     0x14000377c
   140003563:	cmp    eax,0x22
   140003566:	je     0x14000377c
   14000356c:	cmp    eax,r15d
   14000356f:	jne    0x140003771
   140003575:	lea    r8,[rbp+0xb0]
   14000357c:	mov    rdx,rsi
   14000357f:	lea    rcx,[rbp-0x50]
   140003583:	call   QWORD PTR [rip+0x5d8f]        # 0x140009318
   140003589:	test   eax,eax
   14000358b:	je     0x1400035b1
   14000358d:	cmp    eax,r14d
   140003590:	je     0x1400037a8
   140003596:	cmp    eax,r12d
   140003599:	je     0x14000379d
   14000359f:	cmp    eax,0x22
   1400035a2:	je     0x14000379d
   1400035a8:	cmp    eax,r15d
   1400035ab:	jne    0x140003792
   1400035b1:	lea    r8,[rip+0x6510]        # 0x140009ac8
   1400035b8:	mov    rdx,rsi
   1400035bb:	lea    rcx,[rbp-0x50]
   1400035bf:	call   QWORD PTR [rip+0x5d53]        # 0x140009318
   1400035c5:	test   eax,eax
   1400035c7:	je     0x1400035ed
   1400035c9:	cmp    eax,r14d
   1400035cc:	je     0x1400037c9
   1400035d2:	cmp    eax,r12d
   1400035d5:	je     0x1400037be
   1400035db:	cmp    eax,0x22
   1400035de:	je     0x1400037be
   1400035e4:	cmp    eax,r15d
   1400035e7:	jne    0x1400037b3
   1400035ed:	lea    rax,[rsp+0x70]
   1400035f2:	mov    QWORD PTR [rsp+0x70],r13
   1400035f7:	mov    r9d,0x20019
   1400035fd:	mov    QWORD PTR [rsp+0x20],rax
   140003602:	xor    r8d,r8d
   140003605:	lea    rdx,[rbp-0x50]
   140003609:	mov    rcx,rdi
   14000360c:	call   QWORD PTR [rip+0x5a06]        # 0x140009018
   140003612:	test   eax,eax
   140003614:	jne    0x1400036a3
   14000361a:	mov    eax,r13d
   14000361d:	test   rbx,rbx
   140003620:	je     0x14000362b
   140003622:	mov    rcx,rbx
   140003625:	call   QWORD PTR [rip+0x59d5]        # 0x140009000
   14000362b:	mov    rbx,QWORD PTR [rsp+0x70]
   140003630:	test   eax,eax
   140003632:	jne    0x1400036a3
   140003634:	mov    QWORD PTR [rsp+0x58],r13
   140003639:	lea    rax,[rsp+0x60]
   14000363e:	mov    QWORD PTR [rsp+0x50],r13
   140003643:	xor    r9d,r9d
   140003646:	mov    QWORD PTR [rsp+0x48],r13
   14000364b:	xor    r8d,r8d
   14000364e:	mov    QWORD PTR [rsp+0x40],r13
   140003653:	xor    edx,edx
   140003655:	mov    QWORD PTR [rsp+0x38],r13
   14000365a:	mov    rcx,rbx
   14000365d:	mov    QWORD PTR [rsp+0x30],r13
   140003662:	mov    QWORD PTR [rsp+0x28],r13
   140003667:	mov    QWORD PTR [rsp+0x20],rax
   14000366c:	call   QWORD PTR [rip+0x5996]        # 0x140009008
   140003672:	movsxd rsi,eax
   140003675:	test   rbx,rbx
   140003678:	je     0x140003686
   14000367a:	mov    rcx,rbx
   14000367d:	call   QWORD PTR [rip+0x597d]        # 0x140009000
   140003683:	mov    rbx,r13
   140003686:	test   rsi,rsi
   140003689:	jne    0x1400036a3
   14000368b:	cmp    DWORD PTR [rsp+0x60],r13d
   140003690:	jne    0x1400036a3
   140003692:	lea    rdx,[rbp-0x50]
   140003696:	lea    rcx,[rbp-0x80]
   14000369a:	call   0x1400053c4
   14000369f:	mov    rdi,QWORD PTR [rbp-0x80]
   1400036a3:	test   rbx,rbx
   1400036a6:	je     0x1400036b1
   1400036a8:	mov    rcx,rbx
   1400036ab:	call   QWORD PTR [rip+0x594f]        # 0x140009000
   1400036b1:	test   rdi,rdi
   1400036b4:	je     0x1400036bf
   1400036b6:	mov    rcx,rdi
   1400036b9:	call   QWORD PTR [rip+0x5941]        # 0x140009000
   1400036bf:	mov    rbx,QWORD PTR [rsp+0x68]
   1400036c4:	mov    r15d,r13d
   1400036c7:	test   rbx,rbx
   1400036ca:	je     0x1400036e1
   1400036cc:	mov    rcx,QWORD PTR [rbx]
   1400036cf:	mov    rdi,QWORD PTR [rcx+0x10]
   1400036d3:	mov    rcx,rdi
   1400036d6:	call   QWORD PTR [rip+0x5d04]        # 0x1400093e0
   1400036dc:	mov    rcx,rbx
   1400036df:	call   rdi
   1400036e1:	mov    eax,r15d
   1400036e4:	mov    rcx,QWORD PTR [rbp+0x130]
   1400036eb:	xor    rcx,rsp
   1400036ee:	call   0x140007b00
   1400036f3:	mov    rbx,QWORD PTR [rsp+0x290]
   1400036fb:	add    rsp,0x240
   140003702:	pop    r15
   140003704:	pop    r14
   140003706:	pop    r13
   140003708:	pop    r12
   14000370a:	pop    rdi
   14000370b:	pop    rsi
   14000370c:	pop    rbp
   14000370d:	ret    
   14000370e:	mov    ecx,0x80004005
   140003713:	call   0x140005180
   140003718:	int3   
   140003719:	mov    ecx,0x80070057
   14000371e:	call   0x140005180
   140003723:	int3   
   140003724:	mov    ecx,0x8007000e
   140003729:	call   0x140005180
   14000372e:	int3   
   14000372f:	mov    ecx,0x80004005
   140003734:	call   0x140005180
   140003739:	int3   
   14000373a:	mov    ecx,0x80070057
   14000373f:	call   0x140005180
   140003744:	int3   
   140003745:	mov    ecx,0x8007000e
   14000374a:	call   0x140005180
   14000374f:	int3   
   140003750:	mov    ecx,0x80004005
   140003755:	call   0x140005180
   14000375a:	int3   
   14000375b:	mov    ecx,0x80070057
   140003760:	call   0x140005180
   140003765:	int3   
   140003766:	mov    ecx,0x8007000e
   14000376b:	call   0x140005180
   140003770:	int3   
   140003771:	mov    ecx,0x80004005
   140003776:	call   0x140005180
   14000377b:	int3   
   14000377c:	mov    ecx,0x80070057
   140003781:	call   0x140005180
   140003786:	int3   
   140003787:	mov    ecx,0x8007000e
   14000378c:	call   0x140005180
   140003791:	int3   
   140003792:	mov    ecx,0x80004005
   140003797:	call   0x140005180
   14000379c:	int3   
   14000379d:	mov    ecx,0x80070057
   1400037a2:	call   0x140005180
   1400037a7:	int3   
   1400037a8:	mov    ecx,0x8007000e
   1400037ad:	call   0x140005180
   1400037b2:	int3   
   1400037b3:	mov    ecx,0x80004005
   1400037b8:	call   0x140005180
   1400037bd:	int3   
   1400037be:	mov    ecx,0x80070057
   1400037c3:	call   0x140005180
   1400037c8:	int3   
   1400037c9:	mov    ecx,0x8007000e
   1400037ce:	call   0x140005180
   1400037d3:	int3   
   1400037d4:	int3   
   1400037d5:	int3   
   1400037d6:	int3   
   1400037d7:	int3   
   1400037d8:	int3   
   1400037d9:	int3   
   1400037da:	int3   
   1400037db:	int3   
   1400037dc:	rex push rbx
   1400037de:	push   rbp
   1400037df:	push   rsi
   1400037e0:	push   rdi
   1400037e1:	push   r14
   1400037e3:	sub    rsp,0x260
   1400037ea:	mov    rax,QWORD PTR [rip+0x982f]        # 0x14000d020
   1400037f1:	xor    rax,rsp
   1400037f4:	mov    QWORD PTR [rsp+0x250],rax
   1400037fc:	xor    ebp,ebp
   1400037fe:	mov    rsi,r9
   140003801:	mov    r14,r8
   140003804:	test   r8,r8
   140003807:	je     0x140003938
   14000380d:	test   r9,r9
   140003810:	je     0x140003938
   140003816:	mov    QWORD PTR [r8],rbp
   140003819:	lea    rdx,[rsp+0x30]
   14000381e:	mov    r8d,0x104
   140003824:	mov    QWORD PTR [r9],rbp
   140003827:	call   QWORD PTR [rip+0x5893]        # 0x1400090c0
   14000382d:	test   eax,eax
   14000382f:	jne    0x14000383d
   140003831:	call   0x140004708
   140003836:	mov    ebx,eax
   140003838:	jmp    0x140003934
   14000383d:	cmp    eax,0x104
   140003842:	jne    0x14000384e
   140003844:	mov    ebx,0x8007007a
   140003849:	jmp    0x140003934
   14000384e:	movzx  eax,WORD PTR [rsp+0x30]
   140003853:	lea    rcx,[rsp+0x30]
   140003858:	mov    rdi,rbp
   14000385b:	jmp    0x14000387e
   14000385d:	movzx  edx,ax
   140003860:	cmp    edx,0x2e
   140003863:	je     0x14000386f
   140003865:	cmp    edx,0x5c
   140003868:	jne    0x140003872
   14000386a:	mov    rdi,rbp
   14000386d:	jmp    0x140003872
   14000386f:	mov    rdi,rcx
   140003872:	call   QWORD PTR [rip+0x59c0]        # 0x140009238
   140003878:	mov    rcx,rax
   14000387b:	movzx  eax,WORD PTR [rax]
   14000387e:	test   ax,ax
   140003881:	jne    0x14000385d
   140003883:	test   rdi,rdi
   140003886:	mov    rdx,rsi
   140003889:	cmove  rdi,rcx
   14000388d:	lea    rcx,[rsp+0x30]
   140003892:	call   QWORD PTR [rip+0x5950]        # 0x1400091e8
   140003898:	mov    ebx,eax
   14000389a:	test   eax,eax
   14000389c:	jns    0x14000391b
   14000389e:	movzx  eax,WORD PTR [rip+0x625b]        # 0x140009b00
   1400038a5:	mov    rcx,rdi
   1400038a8:	movsd  xmm0,QWORD PTR [rip+0x6248]        # 0x140009af8
   1400038b0:	mov    WORD PTR [rsp+0x28],ax
   1400038b5:	lea    rax,[rsp+0x30]
   1400038ba:	sub    rcx,rax
   1400038bd:	movsd  QWORD PTR [rsp+0x20],xmm0
   1400038c3:	sar    rcx,1
   1400038c6:	lea    rax,[rcx+0x5]
   1400038ca:	cmp    rax,0x104
   1400038d0:	jbe    0x1400038d9
   1400038d2:	mov    ebx,0x80004005
   1400038d7:	jmp    0x140003934
   1400038d9:	mov    edx,0x10e
   1400038de:	lea    r8,[rsp+0x20]
   1400038e3:	sub    rdx,rcx
   1400038e6:	mov    rcx,rdi
   1400038e9:	call   QWORD PTR [rip+0x5a31]        # 0x140009320
   1400038ef:	test   eax,eax
   1400038f1:	je     0x140003907
   1400038f3:	cmp    eax,0xc
   1400038f6:	je     0x140003971
   1400038f8:	cmp    eax,0x16
   1400038fb:	je     0x140003966
   1400038fd:	cmp    eax,0x22
   140003900:	je     0x140003966
   140003902:	cmp    eax,0x50
   140003905:	jne    0x14000395b
   140003907:	mov    rdx,rsi
   14000390a:	lea    rcx,[rsp+0x30]
   14000390f:	call   QWORD PTR [rip+0x58d3]        # 0x1400091e8
   140003915:	mov    ebx,eax
   140003917:	test   eax,eax
   140003919:	js     0x140003934
   14000391b:	lea    rcx,[rsp+0x30]
   140003920:	call   QWORD PTR [rip+0x58ba]        # 0x1400091e0
   140003926:	test   rax,rax
   140003929:	mov    QWORD PTR [r14],rax
   14000392c:	mov    ecx,0x8007000e
   140003931:	cmove  ebx,ecx
   140003934:	mov    eax,ebx
   140003936:	jmp    0x14000393d
   140003938:	mov    eax,0x80004003
   14000393d:	mov    rcx,QWORD PTR [rsp+0x250]
   140003945:	xor    rcx,rsp
   140003948:	call   0x140007b00
   14000394d:	add    rsp,0x260
   140003954:	pop    r14
   140003956:	pop    rdi
   140003957:	pop    rsi
   140003958:	pop    rbp
   140003959:	pop    rbx
   14000395a:	ret    
   14000395b:	mov    ecx,0x80004005
   140003960:	call   0x140005180
   140003965:	int3   
   140003966:	mov    ecx,0x80070057
   14000396b:	call   0x140005180
   140003970:	int3   
   140003971:	mov    ecx,0x8007000e
   140003976:	call   0x140005180
   14000397b:	int3   
   14000397c:	int3   
   14000397d:	int3   
   14000397e:	int3   
   14000397f:	int3   
   140003980:	int3   
   140003981:	int3   
   140003982:	int3   
   140003983:	int3   
   140003984:	mov    QWORD PTR [rsp+0x10],rbx
   140003989:	mov    QWORD PTR [rsp+0x18],r8
   14000398e:	push   rsi
   14000398f:	push   rdi
   140003990:	push   r14
   140003992:	sub    rsp,0x30
   140003996:	mov    rdi,QWORD PTR [rcx+0x48]
   14000399a:	test   rdi,rdi
   14000399d:	je     0x1400039f9
   14000399f:	cmp    QWORD PTR [rdi],0x0
   1400039a3:	je     0x1400039f9
   1400039a5:	mov    rbx,QWORD PTR [rdi+0x38]
   1400039a9:	mov    rcx,rbx
   1400039ac:	call   QWORD PTR [rip+0x5a2e]        # 0x1400093e0
   1400039b2:	call   rbx
   1400039b4:	mov    rcx,QWORD PTR [rdi]
   1400039b7:	mov    rdx,rax
   1400039ba:	xor    r8d,r8d
   1400039bd:	call   0x140003260
   1400039c2:	mov    esi,eax
   1400039c4:	test   eax,eax
   1400039c6:	js     0x140003b48
   1400039cc:	mov    rbx,QWORD PTR [rdi+0x8]
   1400039d0:	mov    rcx,rbx
   1400039d3:	call   QWORD PTR [rip+0x5a07]        # 0x1400093e0
   1400039d9:	xor    ecx,ecx
   1400039db:	call   rbx
   1400039dd:	mov    esi,eax
   1400039df:	test   eax,eax
   1400039e1:	js     0x140003b48
   1400039e7:	add    rdi,0x48
   1400039eb:	cmp    QWORD PTR [rdi],0x0
   1400039ef:	jne    0x1400039a5
   1400039f1:	test   eax,eax
   1400039f3:	js     0x140003b48
   1400039f9:	mov    rbx,QWORD PTR [rip+0x9da8]        # 0x14000d7a8
   140003a00:	test   rbx,rbx
   140003a03:	je     0x140003a1a
   140003a05:	mov    rcx,rbx
   140003a08:	call   QWORD PTR [rip+0x59d2]        # 0x1400093e0
   140003a0e:	call   rbx
   140003a10:	mov    esi,eax
   140003a12:	test   eax,eax
   140003a14:	js     0x140003b48
   140003a1a:	mov    rdi,QWORD PTR [rip+0x9f4f]        # 0x14000d970
   140003a21:	xor    esi,esi
   140003a23:	mov    rax,QWORD PTR [rip+0x9f4e]        # 0x14000d978
   140003a2a:	cmp    rdi,rax
   140003a2d:	jae    0x140003a91
   140003a2f:	mov    r14,QWORD PTR [rdi]
   140003a32:	test   r14,r14
   140003a35:	je     0x140003a80
   140003a37:	mov    rbx,QWORD PTR [r14+0x38]
   140003a3b:	mov    rcx,rbx
   140003a3e:	call   QWORD PTR [rip+0x599c]        # 0x1400093e0
   140003a44:	call   rbx
   140003a46:	mov    rcx,QWORD PTR [r14]
   140003a49:	mov    rdx,rax
   140003a4c:	xor    r8d,r8d
   140003a4f:	call   0x140003260
   140003a54:	mov    esi,eax
   140003a56:	test   eax,eax
   140003a58:	js     0x140003b48
   140003a5e:	mov    rbx,QWORD PTR [r14+0x8]
   140003a62:	mov    rcx,rbx
   140003a65:	call   QWORD PTR [rip+0x5975]        # 0x1400093e0
   140003a6b:	xor    ecx,ecx
   140003a6d:	call   rbx
   140003a6f:	mov    esi,eax
   140003a71:	test   eax,eax
   140003a73:	js     0x140003b48
   140003a79:	mov    rax,QWORD PTR [rip+0x9ef8]        # 0x14000d978
   140003a80:	add    rdi,0x8
   140003a84:	cmp    rdi,rax
   140003a87:	jb     0x140003a2f
   140003a89:	test   esi,esi
   140003a8b:	js     0x140003b48
   140003a91:	mov    rcx,QWORD PTR [rip+0x9ed0]        # 0x14000d968
   140003a98:	lea    r9,[rsp+0x60]
   140003a9d:	and    QWORD PTR [rsp+0x68],0x0
   140003aa3:	lea    r8,[rsp+0x68]
   140003aa8:	and    QWORD PTR [rsp+0x60],0x0
   140003aae:	call   0x1400037dc
   140003ab3:	mov    esi,eax
   140003ab5:	test   eax,eax
   140003ab7:	js     0x140003b1e
   140003ab9:	mov    rbx,QWORD PTR [rsp+0x60]
   140003abe:	mov    rax,QWORD PTR [rbx]
   140003ac1:	mov    rdi,QWORD PTR [rax+0x38]
   140003ac5:	mov    rcx,rdi
   140003ac8:	call   QWORD PTR [rip+0x5912]        # 0x1400093e0
   140003ace:	lea    rdx,[rsp+0x50]
   140003ad3:	mov    rcx,rbx
   140003ad6:	call   rdi
   140003ad8:	mov    esi,eax
   140003ada:	test   eax,eax
   140003adc:	js     0x140003b1e
   140003ade:	mov    rcx,QWORD PTR [rsp+0x50]
   140003ae3:	mov    eax,DWORD PTR [rcx+0x14]
   140003ae6:	mov    r9d,DWORD PTR [rcx+0x10]
   140003aea:	movzx  r8d,WORD PTR [rcx+0x1a]
   140003aef:	movzx  edx,WORD PTR [rcx+0x18]
   140003af3:	mov    DWORD PTR [rsp+0x20],eax
   140003af7:	call   QWORD PTR [rip+0x56db]        # 0x1400091d8
   140003afd:	mov    rbx,QWORD PTR [rsp+0x60]
   140003b02:	mov    esi,eax
   140003b04:	mov    rax,QWORD PTR [rbx]
   140003b07:	mov    rdi,QWORD PTR [rax+0x60]
   140003b0b:	mov    rcx,rdi
   140003b0e:	call   QWORD PTR [rip+0x58cc]        # 0x1400093e0
   140003b14:	mov    rdx,QWORD PTR [rsp+0x50]
   140003b19:	mov    rcx,rbx
   140003b1c:	call   rdi
   140003b1e:	mov    rbx,QWORD PTR [rsp+0x60]
   140003b23:	test   rbx,rbx
   140003b26:	je     0x140003b3d
   140003b28:	mov    rax,QWORD PTR [rbx]
   140003b2b:	mov    rdi,QWORD PTR [rax+0x10]
   140003b2f:	mov    rcx,rdi
   140003b32:	call   QWORD PTR [rip+0x58a8]        # 0x1400093e0
   140003b38:	mov    rcx,rbx
   140003b3b:	call   rdi
   140003b3d:	mov    rcx,QWORD PTR [rsp+0x68]
   140003b42:	call   QWORD PTR [rip+0x56b8]        # 0x140009200
   140003b48:	mov    eax,esi
   140003b4a:	mov    rbx,QWORD PTR [rsp+0x58]
   140003b4f:	add    rsp,0x30
   140003b53:	pop    r14
   140003b55:	pop    rdi
   140003b56:	pop    rsi
   140003b57:	ret    
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	ret    0x0
   140003b63:	int3   
   140003b64:	int3   
   140003b65:	int3   
   140003b66:	int3   
   140003b67:	int3   
   140003b68:	int3   
   140003b69:	int3   
   140003b6a:	int3   
   140003b6b:	int3   
   140003b6c:	sub    rsp,0x38
   140003b70:	call   QWORD PTR [rip+0x551a]        # 0x140009090
   140003b76:	xor    eax,eax
   140003b78:	mov    DWORD PTR [rsp+0x20],eax
   140003b7c:	jmp    0x140003b87
   140003b7e:	mov    eax,0x8007000e
   140003b83:	mov    DWORD PTR [rsp+0x20],eax
   140003b87:	add    rsp,0x38
   140003b8b:	ret    
   140003b8c:	int3   
   140003b8d:	int3   
   140003b8e:	int3   
   140003b8f:	int3   
   140003b90:	int3   
   140003b91:	int3   
   140003b92:	int3   
   140003b93:	int3   
   140003b94:	mov    QWORD PTR [rsp+0x8],rbx
   140003b99:	mov    QWORD PTR [rsp+0x10],rsi
   140003b9e:	mov    QWORD PTR [rsp+0x18],rdi
   140003ba3:	push   r14
   140003ba5:	sub    rsp,0x20
   140003ba9:	lea    rsi,[rcx+0x8]
   140003bad:	mov    rdi,rcx
   140003bb0:	cmp    DWORD PTR [rsi],0x0
   140003bb3:	je     0x140003c25
   140003bb5:	cmp    QWORD PTR [rcx+0x10],0x0
   140003bba:	je     0x140003bfa
   140003bbc:	test   rsi,rsi
   140003bbf:	je     0x140003c3b
   140003bc1:	mov    r14,QWORD PTR [rsi+0x8]
   140003bc5:	test   r14,r14
   140003bc8:	je     0x140003bf0
   140003bca:	mov    rbx,QWORD PTR [r14]
   140003bcd:	mov    rcx,rbx
   140003bd0:	call   QWORD PTR [rip+0x580a]        # 0x1400093e0
   140003bd6:	mov    rcx,QWORD PTR [r14+0x8]
   140003bda:	call   rbx
   140003bdc:	mov    rbx,QWORD PTR [r14+0x10]
   140003be0:	mov    rcx,r14
   140003be3:	call   0x140007618
   140003be8:	mov    r14,rbx
   140003beb:	test   rbx,rbx
   140003bee:	jne    0x140003bca
   140003bf0:	and    QWORD PTR [rsi+0x8],0x0
   140003bf5:	and    QWORD PTR [rdi+0x10],0x0
   140003bfa:	mov    r14,QWORD PTR [rdi+0x40]
   140003bfe:	test   r14,r14
   140003c01:	je     0x140003c18
   140003c03:	mov    rax,QWORD PTR [r14]
   140003c06:	mov    rbx,QWORD PTR [rax+0x10]
   140003c0a:	mov    rcx,rbx
   140003c0d:	call   QWORD PTR [rip+0x57cd]        # 0x1400093e0
   140003c13:	mov    rcx,r14
   140003c16:	call   rbx
   140003c18:	lea    rcx,[rdi+0x18]
   140003c1c:	call   QWORD PTR [rip+0x5466]        # 0x140009088
   140003c22:	and    DWORD PTR [rsi],0x0
   140003c25:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c2a:	mov    rsi,QWORD PTR [rsp+0x38]
   140003c2f:	mov    rdi,QWORD PTR [rsp+0x40]
   140003c34:	add    rsp,0x20
   140003c38:	pop    r14
   140003c3a:	ret    
   140003c3b:	mov    ecx,0xc0000005
   140003c40:	call   0x140004740
   140003c45:	int3   
   140003c46:	int3   
   140003c47:	int3   
   140003c48:	int3   
   140003c49:	int3   
   140003c4a:	int3   
   140003c4b:	int3   
   140003c4c:	int3   
   140003c4d:	int3   
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	mov    eax,DWORD PTR [rcx+0xc]
   140003c53:	ret    
   140003c54:	int3   
   140003c55:	int3   
   140003c56:	int3   
   140003c57:	int3   
   140003c58:	int3   
   140003c59:	int3   
   140003c5a:	int3   
   140003c5b:	int3   
   140003c5c:	int3   
   140003c5d:	int3   
   140003c5e:	int3   
   140003c5f:	int3   
   140003c60:	mov    QWORD PTR [rsp+0x8],rbx
   140003c65:	mov    QWORD PTR [rsp+0x10],rsi
   140003c6a:	push   rdi
   140003c6b:	sub    rsp,0x30
   140003c6f:	mov    rbx,rdx
   140003c72:	test   rdx,rdx
   140003c75:	jne    0x140003c7e
   140003c77:	mov    eax,0x80004003
   140003c7c:	jmp    0x140003cce
   140003c7e:	xor    esi,esi
   140003c80:	lea    rdi,[rcx+0x40]
   140003c84:	cmp    QWORD PTR [rdi],rsi
   140003c87:	jne    0x140003cae
   140003c89:	lea    r9,[rip+0x5e78]        # 0x140009b08
   140003c90:	mov    QWORD PTR [rsp+0x20],rdi
   140003c95:	xor    edx,edx
   140003c97:	lea    r8d,[rsi+0x1]
   140003c9b:	lea    rcx,[rip+0x5a9e]        # 0x140009740
   140003ca2:	call   QWORD PTR [rip+0x5710]        # 0x1400093b8
   140003ca8:	mov    esi,eax
   140003caa:	test   eax,eax
   140003cac:	js     0x140003ccc
   140003cae:	mov    rcx,QWORD PTR [rdi]
   140003cb1:	mov    QWORD PTR [rbx],rcx
   140003cb4:	mov    rdi,QWORD PTR [rdi]
   140003cb7:	mov    rdx,QWORD PTR [rdi]
   140003cba:	mov    rbx,QWORD PTR [rdx+0x8]
   140003cbe:	mov    rcx,rbx
   140003cc1:	call   QWORD PTR [rip+0x5719]        # 0x1400093e0
   140003cc7:	mov    rcx,rdi
   140003cca:	call   rbx
   140003ccc:	mov    eax,esi
   140003cce:	mov    rbx,QWORD PTR [rsp+0x40]
   140003cd3:	mov    rsi,QWORD PTR [rsp+0x48]
   140003cd8:	add    rsp,0x30
   140003cdc:	pop    rdi
   140003cdd:	ret    
   140003cde:	int3   
   140003cdf:	int3   
   140003ce0:	int3   
   140003ce1:	int3   
   140003ce2:	int3   
   140003ce3:	int3   
   140003ce4:	int3   
   140003ce5:	int3   
   140003ce6:	int3   
   140003ce7:	int3   
   140003ce8:	int3   
   140003ce9:	int3   
   140003cea:	int3   
   140003ceb:	int3   
   140003cec:	int3   
   140003ced:	int3   
   140003cee:	int3   
   140003cef:	int3   
   140003cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140003cf5:	push   rdi
   140003cf6:	sub    rsp,0x20
   140003cfa:	mov    rax,QWORD PTR [rdx]
   140003cfd:	mov    rdi,rdx
   140003d00:	mov    rbx,QWORD PTR [rax+0x18]
   140003d04:	mov    rcx,rbx
   140003d07:	call   QWORD PTR [rip+0x56d3]        # 0x1400093e0
   140003d0d:	lea    r8,[rip+0x5e04]        # 0x140009b18
   140003d14:	mov    rcx,rdi
   140003d17:	lea    rdx,[rip+0x5e02]        # 0x140009b20
   140003d1e:	mov    rax,rbx
   140003d21:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d26:	add    rsp,0x20
   140003d2a:	pop    rdi
   140003d2b:	rex.W jmp rax
   140003d2e:	int3   
   140003d2f:	int3   
   140003d30:	int3   
   140003d31:	int3   
   140003d32:	int3   
   140003d33:	int3   
   140003d34:	int3   
   140003d35:	int3   
   140003d36:	int3   
   140003d37:	int3   
   140003d38:	int3   
   140003d39:	int3   
   140003d3a:	int3   
   140003d3b:	int3   
   140003d3c:	int3   
   140003d3d:	int3   
   140003d3e:	int3   
   140003d3f:	int3   
   140003d40:	mov    eax,0x80004005
   140003d45:	ret    
   140003d46:	int3   
   140003d47:	int3   
   140003d48:	int3   
   140003d49:	int3   
   140003d4a:	int3   
   140003d4b:	int3   
   140003d4c:	mov    QWORD PTR [rsp+0x18],rbx
   140003d51:	push   rbp
   140003d52:	push   rsi
   140003d53:	push   rdi
   140003d54:	push   r14
   140003d56:	push   r15
   140003d58:	lea    rbp,[rsp-0x9b0]
   140003d60:	sub    rsp,0xab0
   140003d67:	mov    rax,QWORD PTR [rip+0x92b2]        # 0x14000d020
   140003d6e:	xor    rax,rsp
   140003d71:	mov    QWORD PTR [rbp+0x9a0],rax
   140003d78:	xor    r15d,r15d
   140003d7b:	lea    rax,[rip+0x5c2e]        # 0x1400099b0
   140003d82:	mov    QWORD PTR [rsp+0x30],rax
   140003d87:	xorps  xmm0,xmm0
   140003d8a:	mov    DWORD PTR [rsp+0x48],r15d
   140003d8f:	mov    rbx,r9
   140003d92:	mov    r14d,r8d
   140003d95:	mov    rsi,rdx
   140003d98:	mov    rdi,rcx
   140003d9b:	movdqu XMMWORD PTR [rsp+0x38],xmm0
   140003da1:	test   r9,r9
   140003da4:	je     0x140003dd2
   140003da6:	mov    rax,QWORD PTR [r9]
   140003da9:	jmp    0x140003dcd
   140003dab:	mov    r8,QWORD PTR [rbx+0x8]
   140003daf:	test   rax,rax
   140003db2:	je     0x140003dc6
   140003db4:	test   r8,r8
   140003db7:	je     0x140003dc6
   140003db9:	mov    rdx,rax
   140003dbc:	lea    rcx,[rsp+0x38]
   140003dc1:	call   0x1400043c4
   140003dc6:	add    rbx,0x10
   140003dca:	mov    rax,QWORD PTR [rbx]
   140003dcd:	test   rax,rax
   140003dd0:	jne    0x140003dab
   140003dd2:	mov    rax,QWORD PTR [rdi]
   140003dd5:	mov    rbx,QWORD PTR [rax+0x28]
   140003dd9:	mov    rcx,rbx
   140003ddc:	call   QWORD PTR [rip+0x55fe]        # 0x1400093e0
   140003de2:	lea    rdx,[rsp+0x30]
   140003de7:	mov    rcx,rdi
   140003dea:	call   rbx
   140003dec:	mov    ebx,eax
   140003dee:	test   eax,eax
   140003df0:	js     0x140003f7b
   140003df6:	mov    rbx,QWORD PTR [rip+0x9abb]        # 0x14000d8b8
   140003dfd:	lea    rdx,[rsp+0x60]
   140003e02:	mov    edi,0x104
   140003e07:	mov    rcx,rbx
   140003e0a:	mov    r8d,edi
   140003e0d:	call   QWORD PTR [rip+0x52ad]        # 0x1400090c0
   140003e13:	test   eax,eax
   140003e15:	jne    0x140003e23
   140003e17:	call   0x140004708
   140003e1c:	mov    ebx,eax
   140003e1e:	jmp    0x140003f7b
   140003e23:	cmp    eax,edi
   140003e25:	jne    0x140003e31
   140003e27:	mov    ebx,0x8007007a
   140003e2c:	jmp    0x140003f7b
   140003e31:	lea    rdx,[rsp+0x60]
   140003e36:	mov    ecx,r15d
   140003e39:	mov    r9d,0x27
   140003e3f:	movzx  r8d,WORD PTR [rdx]
   140003e43:	test   r8w,r8w
   140003e47:	je     0x140003e7b
   140003e49:	mov    eax,ecx
   140003e4b:	mov    WORD PTR [rbp+rax*2+0x170],r8w
   140003e54:	cmp    r8w,r9w
   140003e58:	jne    0x140003e6d
   140003e5a:	cmp    ecx,0x206
   140003e60:	jae    0x140003e6d
   140003e62:	inc    ecx
   140003e64:	mov    WORD PTR [rbp+rcx*2+0x170],r9w
   140003e6d:	add    rdx,0x2
   140003e71:	inc    ecx
   140003e73:	cmp    ecx,0x207
   140003e79:	jb     0x140003e3f
   140003e7b:	mov    eax,ecx
   140003e7d:	mov    WORD PTR [rbp+rax*2+0x170],r15w
   140003e86:	test   rbx,rbx
   140003e89:	je     0x140003ea4
   140003e8b:	xor    ecx,ecx
   140003e8d:	call   QWORD PTR [rip+0x52c5]        # 0x140009158
   140003e93:	cmp    rbx,rax
   140003e96:	je     0x140003ea4
   140003e98:	lea    r8,[rbp+0x170]
   140003e9f:	jmp    0x140003f37
   140003ea4:	mov    edi,0x22
   140003ea9:	lea    rcx,[rbp+0x170]
   140003eb0:	or     rbx,0xffffffffffffffff
   140003eb4:	mov    WORD PTR [rbp+0x580],di
   140003ebb:	mov    rax,rbx
   140003ebe:	inc    rax
   140003ec1:	cmp    WORD PTR [rcx+rax*2],r15w
   140003ec6:	jne    0x140003ebe
   140003ec8:	inc    eax
   140003eca:	lea    r8,[rbp+0x170]
   140003ed1:	movsxd r9,eax
   140003ed4:	lea    rcx,[rbp+0x582]
   140003edb:	add    r9,r9
   140003ede:	mov    edx,0x414
   140003ee3:	call   QWORD PTR [rip+0x543f]        # 0x140009328
   140003ee9:	test   eax,eax
   140003eeb:	je     0x140003ef7
   140003eed:	mov    ebx,0x80004005
   140003ef2:	jmp    0x140003f7b
   140003ef7:	lea    rax,[rbp+0x580]
   140003efe:	inc    rbx
   140003f01:	cmp    WORD PTR [rax+rbx*2],r15w
   140003f06:	jne    0x140003efe
   140003f08:	movsxd rax,ebx
   140003f0b:	mov    WORD PTR [rbp+rax*2+0x580],di
   140003f13:	lea    rax,[rax*2+0x2]
   140003f1b:	cmp    rax,0x418
   140003f21:	jae    0x140003ff0
   140003f27:	mov    WORD PTR [rbp+rax*1+0x580],r15w
   140003f30:	lea    r8,[rbp+0x580]
   140003f37:	lea    rdx,[rip+0x5c6a]        # 0x140009ba8
   140003f3e:	lea    rcx,[rsp+0x38]
   140003f43:	call   0x1400043c4
   140003f48:	neg    eax
   140003f4a:	mov    edi,0x8007000e
   140003f4f:	sbb    ebx,ebx
   140003f51:	not    ebx
   140003f53:	and    ebx,edi
   140003f55:	test   ebx,ebx
   140003f57:	js     0x140003f7b
   140003f59:	lea    r8,[rbp+0x170]
   140003f60:	lea    rdx,[rip+0x5c51]        # 0x140009bb8
   140003f67:	lea    rcx,[rsp+0x38]
   140003f6c:	call   0x1400043c4
   140003f71:	neg    eax
   140003f73:	sbb    ebx,ebx
   140003f75:	not    ebx
   140003f77:	and    ebx,edi
   140003f79:	jns    0x140003fad
   140003f7b:	lea    rcx,[rsp+0x30]
   140003f80:	call   0x140004330
   140003f85:	mov    eax,ebx
   140003f87:	mov    rcx,QWORD PTR [rbp+0x9a0]
   140003f8e:	xor    rcx,rsp
   140003f91:	call   0x140007b00
   140003f96:	mov    rbx,QWORD PTR [rsp+0xaf0]
   140003f9e:	add    rsp,0xab0
   140003fa5:	pop    r15
   140003fa7:	pop    r14
   140003fa9:	pop    rdi
   140003faa:	pop    rsi
   140003fab:	pop    rbp
   140003fac:	ret    
   140003fad:	test   r14d,r14d
   140003fb0:	je     0x140003fc1
   140003fb2:	test   rsi,rsi
   140003fb5:	je     0x140003fe9
   140003fb7:	mov    DWORD PTR [rsp+0x20],0x1
   140003fbf:	jmp    0x140003fcb
   140003fc1:	test   rsi,rsi
   140003fc4:	je     0x140003fe9
   140003fc6:	mov    DWORD PTR [rsp+0x20],r15d
   140003fcb:	lea    r9,[rip+0x5bfe]        # 0x140009bd0
   140003fd2:	mov    r8,rsi
   140003fd5:	lea    rdx,[rsp+0x60]
   140003fda:	lea    rcx,[rsp+0x30]
   140003fdf:	call   0x140005fd8
   140003fe4:	jmp    0x140003e1c
   140003fe9:	mov    ebx,0x80070057
   140003fee:	jmp    0x140003f7b
   140003ff0:	call   0x140007e48
   140003ff5:	int3   
   140003ff6:	int3   
   140003ff7:	int3   
   140003ff8:	int3   
   140003ff9:	int3   
   140003ffa:	int3   
   140003ffb:	int3   
   140003ffc:	int3   
   140003ffd:	int3   
   140003ffe:	int3   
   140003fff:	int3   
   140004000:	jmp    0x140003d4c
   140004005:	int3   
   140004006:	int3   
   140004007:	int3   
   140004008:	int3   
   140004009:	int3   
   14000400a:	int3   
   14000400b:	int3   
   14000400c:	int3   
   14000400d:	int3   
   14000400e:	int3   
   14000400f:	int3   
   140004010:	or     eax,0xffffffff
   140004013:	lock xadd DWORD PTR [rcx+0xc],eax
   140004018:	dec    eax
   14000401a:	ret    
   14000401b:	int3   
   14000401c:	int3   
   14000401d:	int3   
   14000401e:	int3   
   14000401f:	int3   
   140004020:	int3   
   140004021:	int3   
   140004022:	int3   
   140004023:	int3   
   140004024:	mov    rax,rsp
   140004027:	mov    QWORD PTR [rax+0x8],rbx
   14000402b:	mov    QWORD PTR [rax+0x10],rbp
   14000402f:	mov    QWORD PTR [rax+0x18],rsi
   140004033:	mov    QWORD PTR [rax+0x20],rdi
   140004037:	push   r12
   140004039:	push   r14
   14000403b:	push   r15
   14000403d:	sub    rsp,0x20
   140004041:	xor    esi,esi
   140004043:	mov    r14,r9
   140004046:	mov    rdi,r8
   140004049:	mov    rbx,rdx
   14000404c:	mov    r12,rcx
   14000404f:	test   rcx,rcx
   140004052:	je     0x14000413a
   140004058:	test   rdx,rdx
   14000405b:	je     0x14000413a
   140004061:	test   r9,r9
   140004064:	jne    0x140004070
   140004066:	mov    esi,0x80004003
   14000406b:	jmp    0x14000413f
   140004070:	mov    QWORD PTR [r9],rsi
   140004073:	cmp    DWORD PTR [r8],esi
   140004076:	jne    0x1400040b6
   140004078:	cmp    DWORD PTR [r8+0x4],esi
   14000407c:	jne    0x1400040b6
   14000407e:	cmp    DWORD PTR [r8+0x8],0xc0
   140004086:	jne    0x1400040b6
   140004088:	cmp    DWORD PTR [r8+0xc],0x46000000
   140004090:	jne    0x1400040b6
   140004092:	mov    rdi,QWORD PTR [rdx+0x8]
   140004096:	add    rdi,rcx
   140004099:	mov    rax,QWORD PTR [rdi]
   14000409c:	mov    rbx,QWORD PTR [rax+0x8]
   1400040a0:	mov    rcx,rbx
   1400040a3:	call   QWORD PTR [rip+0x5337]        # 0x1400093e0
   1400040a9:	mov    rcx,rdi
   1400040ac:	call   rbx
   1400040ae:	mov    QWORD PTR [r14],rdi
   1400040b1:	jmp    0x14000413f
   1400040b6:	cmp    QWORD PTR [rdx+0x10],rsi
   1400040ba:	je     0x140004123
   1400040bc:	mov    rcx,QWORD PTR [rbx]
   1400040bf:	mov    ebp,esi
   1400040c1:	test   rcx,rcx
   1400040c4:	sete   bpl
   1400040c8:	test   ebp,ebp
   1400040ca:	jne    0x1400040ea
   1400040cc:	mov    eax,DWORD PTR [rdi]
   1400040ce:	cmp    DWORD PTR [rcx],eax
   1400040d0:	jne    0x140004119
   1400040d2:	mov    eax,DWORD PTR [rdi+0x4]
   1400040d5:	cmp    DWORD PTR [rcx+0x4],eax
   1400040d8:	jne    0x140004119
   1400040da:	mov    eax,DWORD PTR [rdi+0x8]
   1400040dd:	cmp    DWORD PTR [rcx+0x8],eax
   1400040e0:	jne    0x140004119
   1400040e2:	mov    eax,DWORD PTR [rdi+0xc]
   1400040e5:	cmp    DWORD PTR [rcx+0xc],eax
   1400040e8:	jne    0x140004119
   1400040ea:	mov    r15,QWORD PTR [rbx+0x10]
   1400040ee:	cmp    r15,0x1
   1400040f2:	je     0x14000412e
   1400040f4:	mov    rcx,r15
   1400040f7:	call   QWORD PTR [rip+0x52e3]        # 0x1400093e0
   1400040fd:	mov    r9,QWORD PTR [rbx+0x8]
   140004101:	mov    r8,r14
   140004104:	mov    rdx,rdi
   140004107:	mov    rcx,r12
   14000410a:	call   r15
   14000410d:	test   eax,eax
   14000410f:	je     0x14000412a
   140004111:	test   ebp,ebp
   140004113:	jne    0x140004119
   140004115:	test   eax,eax
   140004117:	js     0x14000412a
   140004119:	add    rbx,0x18
   14000411d:	cmp    QWORD PTR [rbx+0x10],rsi
   140004121:	jne    0x1400040bc
   140004123:	mov    esi,0x80004002
   140004128:	jmp    0x14000413f
   14000412a:	mov    esi,eax
   14000412c:	jmp    0x14000413f
   14000412e:	mov    rdi,QWORD PTR [rbx+0x8]
   140004132:	add    rdi,r12
   140004135:	jmp    0x140004099
   14000413a:	mov    esi,0x80070057
   14000413f:	mov    rbx,QWORD PTR [rsp+0x40]
   140004144:	mov    eax,esi
   140004146:	mov    rsi,QWORD PTR [rsp+0x50]
   14000414b:	mov    rbp,QWORD PTR [rsp+0x48]
   140004150:	mov    rdi,QWORD PTR [rsp+0x58]
   140004155:	add    rsp,0x20
   140004159:	pop    r15
   14000415b:	pop    r14
   14000415d:	pop    r12
   14000415f:	ret    
   140004160:	int3   
   140004161:	int3   
   140004162:	int3   
   140004163:	int3   
   140004164:	int3   
   140004165:	int3   
   140004166:	int3   
   140004167:	int3   
   140004168:	int3   
   140004169:	int3   
   14000416a:	int3   
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	test   r8,r8
   140004173:	je     0x140004179
   140004175:	and    QWORD PTR [r8],0x0
   140004179:	mov    eax,0x80004001
   14000417e:	ret    
   14000417f:	int3   
   140004180:	int3   
   140004181:	int3   
   140004182:	int3   
   140004183:	int3   
   140004184:	int3   
   140004185:	int3   
   140004186:	int3   
   140004187:	int3   
   140004188:	int3   
   140004189:	int3   
   14000418a:	int3   
   14000418b:	int3   
   14000418c:	int3   
   14000418d:	int3   
   14000418e:	int3   
   14000418f:	int3   
   140004190:	mov    eax,0x1
   140004195:	ret    
   140004196:	int3   
   140004197:	int3   
   140004198:	int3   
   140004199:	int3   
   14000419a:	int3   
   14000419b:	int3   
   14000419c:	int3   
   14000419d:	int3   
   14000419e:	int3   
   14000419f:	int3   
   1400041a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400041a5:	push   rdi
   1400041a6:	sub    rsp,0x20
   1400041aa:	mov    ebx,edx
   1400041ac:	mov    rdi,rcx
   1400041af:	call   0x140004330
   1400041b4:	test   bl,0x1
   1400041b7:	je     0x1400041c1
   1400041b9:	mov    rcx,rdi
   1400041bc:	call   0x140007618
   1400041c1:	mov    rax,rdi
   1400041c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400041c9:	add    rsp,0x20
   1400041cd:	pop    rdi
   1400041ce:	ret    
   1400041cf:	int3   
   1400041d0:	int3   
   1400041d1:	int3   
   1400041d2:	int3   
   1400041d3:	int3   
   1400041d4:	int3   
   1400041d5:	int3   
   1400041d6:	int3   
   1400041d7:	int3   
   1400041d8:	rex push rbx
   1400041da:	sub    rsp,0x20
   1400041de:	mov    rbx,rcx
   1400041e1:	mov    rcx,QWORD PTR [rcx]
   1400041e4:	test   rcx,rcx
   1400041e7:	je     0x1400041f3
   1400041e9:	call   QWORD PTR [rip+0x5141]        # 0x140009330
   1400041ef:	and    QWORD PTR [rbx],0x0
   1400041f3:	mov    rcx,QWORD PTR [rbx+0x8]
   1400041f7:	test   rcx,rcx
   1400041fa:	je     0x140004207
   1400041fc:	call   QWORD PTR [rip+0x512e]        # 0x140009330
   140004202:	and    QWORD PTR [rbx+0x8],0x0
   140004207:	and    DWORD PTR [rbx+0x10],0x0
   14000420b:	add    rsp,0x20
   14000420f:	pop    rbx
   140004210:	ret    
   140004211:	int3   
   140004212:	int3   
   140004213:	int3   
   140004214:	int3   
   140004215:	int3   
   140004216:	int3   
   140004217:	int3   
   140004218:	mov    QWORD PTR [rsp+0x8],rcx
   14000421d:	push   rbx
   14000421e:	sub    rsp,0x30
   140004222:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000422b:	mov    rbx,rcx
   14000422e:	call   0x14000426c
   140004233:	nop
   140004234:	mov    rcx,QWORD PTR [rbx]
   140004237:	test   rcx,rcx
   14000423a:	je     0x140004246
   14000423c:	call   QWORD PTR [rip+0x50ee]        # 0x140009330
   140004242:	and    QWORD PTR [rbx],0x0
   140004246:	mov    rcx,QWORD PTR [rbx+0x8]
   14000424a:	test   rcx,rcx
   14000424d:	je     0x14000425a
   14000424f:	call   QWORD PTR [rip+0x50db]        # 0x140009330
   140004255:	and    QWORD PTR [rbx+0x8],0x0
   14000425a:	and    DWORD PTR [rbx+0x10],0x0
   14000425e:	add    rsp,0x30
   140004262:	pop    rbx
   140004263:	ret    
   140004264:	int3   
   140004265:	int3   
   140004266:	int3   
   140004267:	int3   
   140004268:	int3   
   140004269:	int3   
   14000426a:	int3   
   14000426b:	int3   
   14000426c:	mov    QWORD PTR [rsp+0x8],rbx
   140004271:	mov    QWORD PTR [rsp+0x10],rsi
   140004276:	push   rdi
   140004277:	sub    rsp,0x20
   14000427b:	xor    esi,esi
   14000427d:	mov    rbx,rcx
   140004280:	cmp    DWORD PTR [rcx+0x10],esi
   140004283:	jle    0x1400042ba
   140004285:	xor    edi,edi
   140004287:	test   rdi,rdi
   14000428a:	js     0x140004301
   14000428c:	cmp    esi,DWORD PTR [rbx+0x10]
   14000428f:	jge    0x140004301
   140004291:	mov    rcx,QWORD PTR [rbx]
   140004294:	mov    rcx,QWORD PTR [rdi+rcx*1]
   140004298:	call   0x140007618
   14000429d:	cmp    esi,DWORD PTR [rbx+0x10]
   1400042a0:	jge    0x1400042f6
   1400042a2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400042a6:	mov    rcx,QWORD PTR [rcx+rdi*1]
   1400042aa:	call   0x140007618
   1400042af:	inc    esi
   1400042b1:	add    rdi,0x8
   1400042b5:	cmp    esi,DWORD PTR [rbx+0x10]
   1400042b8:	jl     0x140004287
   1400042ba:	mov    rcx,QWORD PTR [rbx]
   1400042bd:	test   rcx,rcx
   1400042c0:	je     0x1400042cc
   1400042c2:	call   QWORD PTR [rip+0x5068]        # 0x140009330
   1400042c8:	and    QWORD PTR [rbx],0x0
   1400042cc:	mov    rcx,QWORD PTR [rbx+0x8]
   1400042d0:	test   rcx,rcx
   1400042d3:	je     0x1400042e0
   1400042d5:	call   QWORD PTR [rip+0x5055]        # 0x140009330
   1400042db:	and    QWORD PTR [rbx+0x8],0x0
   1400042e0:	and    DWORD PTR [rbx+0x10],0x0
   1400042e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400042e9:	xor    eax,eax
   1400042eb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400042f0:	add    rsp,0x20
   1400042f4:	pop    rdi
   1400042f5:	ret    
   1400042f6:	mov    ecx,0xc000008c
   1400042fb:	call   0x140004740
   140004300:	int3   
   140004301:	mov    ecx,0xc000008c
   140004306:	call   0x140004740
   14000430b:	int3   
   14000430c:	int3   
   14000430d:	int3   
   14000430e:	int3   
   14000430f:	int3   
   140004310:	int3   
   140004311:	int3   
   140004312:	int3   
   140004313:	int3   
   140004314:	int3   
   140004315:	int3   
   140004316:	int3   
   140004317:	int3   
   140004318:	int3   
   140004319:	int3   
   14000431a:	int3   
   14000431b:	int3   
   14000431c:	int3   
   14000431d:	int3   
   14000431e:	int3   
   14000431f:	int3   
   140004320:	add    rcx,0x8
   140004324:	jmp    0x14000426c
   140004329:	int3   
   14000432a:	int3   
   14000432b:	int3   
   14000432c:	int3   
   14000432d:	int3   
   14000432e:	int3   
   14000432f:	int3   
   140004330:	mov    QWORD PTR [rsp+0x8],rcx
   140004335:	push   rbx
   140004336:	sub    rsp,0x30
   14000433a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004343:	lea    rax,[rip+0x5666]        # 0x1400099b0
   14000434a:	mov    QWORD PTR [rcx],rax
   14000434d:	lea    rbx,[rcx+0x8]
   140004351:	mov    rcx,rbx
   140004354:	call   0x14000426c
   140004359:	nop
   14000435a:	mov    QWORD PTR [rsp+0x40],rbx
   14000435f:	mov    rcx,rbx
   140004362:	call   0x14000426c
   140004367:	nop
   140004368:	mov    rcx,QWORD PTR [rbx]
   14000436b:	test   rcx,rcx
   14000436e:	je     0x14000437a
   140004370:	call   QWORD PTR [rip+0x4fba]        # 0x140009330
   140004376:	and    QWORD PTR [rbx],0x0
   14000437a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000437e:	test   rcx,rcx
   140004381:	je     0x14000438e
   140004383:	call   QWORD PTR [rip+0x4fa7]        # 0x140009330
   140004389:	and    QWORD PTR [rbx+0x8],0x0
   14000438e:	and    DWORD PTR [rbx+0x10],0x0
   140004392:	add    rsp,0x30
   140004396:	pop    rbx
   140004397:	ret    
   140004398:	int3   
   140004399:	int3   
   14000439a:	int3   
   14000439b:	int3   
   14000439c:	int3   
   14000439d:	int3   
   14000439e:	int3   
   14000439f:	int3   
   1400043a0:	rex push rbx
   1400043a2:	sub    rsp,0x20
   1400043a6:	mov    rbx,rcx
   1400043a9:	mov    rcx,QWORD PTR [rcx]
   1400043ac:	call   0x140007618
   1400043b1:	and    QWORD PTR [rbx],0x0
   1400043b5:	add    rsp,0x20
   1400043b9:	pop    rbx
   1400043ba:	ret    
   1400043bb:	int3   
   1400043bc:	int3   
   1400043bd:	int3   
   1400043be:	int3   
   1400043bf:	int3   
   1400043c0:	int3   
   1400043c1:	int3   
   1400043c2:	int3   
   1400043c3:	int3   
   1400043c4:	mov    rax,rsp
   1400043c7:	mov    QWORD PTR [rax+0x18],r8
   1400043cb:	mov    QWORD PTR [rax+0x10],rdx
   1400043cf:	mov    QWORD PTR [rax+0x8],rcx
   1400043d3:	push   rbx
   1400043d4:	push   rsi
   1400043d5:	push   rdi
   1400043d6:	push   r12
   1400043d8:	push   r13
   1400043da:	push   r14
   1400043dc:	push   r15
   1400043de:	sub    rsp,0x60
   1400043e2:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   1400043ea:	mov    r13,r8
   1400043ed:	mov    r12,rdx
   1400043f0:	mov    r15,rcx
   1400043f3:	xor    esi,esi
   1400043f5:	test   rdx,rdx
   1400043f8:	je     0x140004644
   1400043fe:	test   r8,r8
   140004401:	je     0x140004644
   140004407:	mov    r14d,esi
   14000440a:	or     rbx,0xffffffffffffffff
   14000440e:	mov    rax,rbx
   140004411:	inc    rax
   140004414:	cmp    WORD PTR [rdx+rax*2],si
   140004418:	jne    0x140004411
   14000441a:	lea    rcx,[rax*2+0x2]
   140004422:	mov    QWORD PTR [rsp+0x48],rcx
   140004427:	mov    QWORD PTR [rsp+0x28],rsi
   14000442c:	mov    eax,0x2
   140004431:	mul    rcx
   140004434:	cmovo  rax,rbx
   140004438:	mov    rcx,rax
   14000443b:	call   0x14000769c
   140004440:	mov    QWORD PTR [rsp+0x20],rax
   140004445:	mov    QWORD PTR [rsp+0x28],rax
   14000444a:	jmp    0x140004477
   14000444c:	xor    esi,esi
   14000444e:	or     rbx,0xffffffffffffffff
   140004452:	mov    r15,QWORD PTR [rsp+0xa0]
   14000445a:	mov    r13,QWORD PTR [rsp+0xb0]
   140004462:	mov    r12,QWORD PTR [rsp+0xa8]
   14000446a:	mov    r14d,esi
   14000446d:	mov    rax,QWORD PTR [rsp+0x28]
   140004472:	mov    QWORD PTR [rsp+0x20],rax
   140004477:	mov    rdi,rax
   14000447a:	mov    QWORD PTR [rsp+0x40],rax
   14000447f:	mov    rax,rbx
   140004482:	inc    rax
   140004485:	cmp    WORD PTR [r13+rax*2+0x0],si
   14000448b:	jne    0x140004482
   14000448d:	inc    eax
   14000448f:	movsxd rcx,eax
   140004492:	add    rcx,rcx
   140004495:	mov    QWORD PTR [rsp+0x38],rcx
   14000449a:	mov    QWORD PTR [rsp+0x30],rsi
   14000449f:	mov    eax,0x2
   1400044a4:	mul    rcx
   1400044a7:	cmovo  rax,rbx
   1400044ab:	mov    rcx,rax
   1400044ae:	call   0x14000769c
   1400044b3:	mov    rbx,rax
   1400044b6:	mov    QWORD PTR [rsp+0x30],rax
   1400044bb:	mov    rax,QWORD PTR [rsp+0x20]
   1400044c0:	jmp    0x1400044f3
   1400044c2:	xor    esi,esi
   1400044c4:	mov    r15,QWORD PTR [rsp+0xa0]
   1400044cc:	mov    r13,QWORD PTR [rsp+0xb0]
   1400044d4:	mov    r12,QWORD PTR [rsp+0xa8]
   1400044dc:	mov    r14d,esi
   1400044df:	mov    rax,QWORD PTR [rsp+0x28]
   1400044e4:	mov    QWORD PTR [rsp+0x20],rax
   1400044e9:	mov    rdi,QWORD PTR [rsp+0x40]
   1400044ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400044f3:	mov    QWORD PTR [rsp+0xa8],rbx
   1400044fb:	test   rax,rax
   1400044fe:	je     0x140004622
   140004504:	test   rbx,rbx
   140004507:	je     0x140004622
   14000450d:	mov    rdx,QWORD PTR [rsp+0x48]
   140004512:	mov    r9,rdx
   140004515:	mov    r8,r12
   140004518:	mov    rcx,rax
   14000451b:	call   QWORD PTR [rip+0x4e07]        # 0x140009328
   140004521:	test   eax,eax
   140004523:	je     0x14000455a
   140004525:	cmp    eax,0xc
   140004528:	je     0x14000454f
   14000452a:	cmp    eax,0x16
   14000452d:	je     0x140004544
   14000452f:	cmp    eax,0x22
   140004532:	je     0x140004544
   140004534:	cmp    eax,0x50
   140004537:	je     0x14000455a
   140004539:	mov    ecx,0x80004005
   14000453e:	call   0x140005180
   140004543:	int3   
   140004544:	mov    ecx,0x80070057
   140004549:	call   0x140005180
   14000454e:	int3   
   14000454f:	mov    ecx,0x8007000e
   140004554:	call   0x140005180
   140004559:	int3   
   14000455a:	mov    r9,QWORD PTR [rsp+0x38]
   14000455f:	mov    r8,r13
   140004562:	mov    rdx,r9
   140004565:	mov    rcx,rbx
   140004568:	call   QWORD PTR [rip+0x4dba]        # 0x140009328
   14000456e:	test   eax,eax
   140004570:	je     0x1400045a7
   140004572:	cmp    eax,0xc
   140004575:	je     0x14000459c
   140004577:	cmp    eax,0x16
   14000457a:	je     0x140004591
   14000457c:	cmp    eax,0x22
   14000457f:	je     0x140004591
   140004581:	cmp    eax,0x50
   140004584:	je     0x1400045a7
   140004586:	mov    ecx,0x80004005
   14000458b:	call   0x140005180
   140004590:	int3   
   140004591:	mov    ecx,0x80070057
   140004596:	call   0x140005180
   14000459b:	int3   
   14000459c:	mov    ecx,0x8007000e
   1400045a1:	call   0x140005180
   1400045a6:	int3   
   1400045a7:	mov    eax,DWORD PTR [r15+0x10]
   1400045ab:	inc    eax
   1400045ad:	movsxd rdx,eax
   1400045b0:	mov    r12d,0x8
   1400045b6:	mov    r8d,r12d
   1400045b9:	mov    rcx,QWORD PTR [r15]
   1400045bc:	call   QWORD PTR [rip+0x8a4e]        # 0x14000d010
   1400045c2:	test   rax,rax
   1400045c5:	je     0x140004622
   1400045c7:	mov    QWORD PTR [r15],rax
   1400045ca:	mov    eax,DWORD PTR [r15+0x10]
   1400045ce:	inc    eax
   1400045d0:	movsxd rdx,eax
   1400045d3:	mov    r8d,r12d
   1400045d6:	mov    rcx,QWORD PTR [r15+0x8]
   1400045da:	call   QWORD PTR [rip+0x8a30]        # 0x14000d010
   1400045e0:	test   rax,rax
   1400045e3:	je     0x140004622
   1400045e5:	mov    QWORD PTR [r15+0x8],rax
   1400045e9:	movsxd rdx,DWORD PTR [r15+0x10]
   1400045ed:	mov    rax,QWORD PTR [r15]
   1400045f0:	lea    rcx,[rax+rdx*8]
   1400045f4:	test   rcx,rcx
   1400045f7:	je     0x140004601
   1400045f9:	mov    rax,QWORD PTR [rsp+0x20]
   1400045fe:	mov    QWORD PTR [rcx],rax
   140004601:	mov    rax,QWORD PTR [r15+0x8]
   140004605:	lea    rcx,[rax+rdx*8]
   140004609:	test   rcx,rcx
   14000460c:	je     0x140004611
   14000460e:	mov    QWORD PTR [rcx],rbx
   140004611:	inc    DWORD PTR [r15+0x10]
   140004615:	mov    rdi,rsi
   140004618:	mov    QWORD PTR [rsp+0x40],rsi
   14000461d:	mov    rbx,rsi
   140004620:	jmp    0x140004628
   140004622:	mov    r14d,0x8007000e
   140004628:	test   r14d,r14d
   14000462b:	setns  sil
   14000462f:	mov    rcx,rbx
   140004632:	call   0x140007618
   140004637:	nop
   140004638:	mov    rcx,rdi
   14000463b:	call   0x140007618
   140004640:	mov    eax,esi
   140004642:	jmp    0x140004646
   140004644:	xor    eax,eax
   140004646:	add    rsp,0x60
   14000464a:	pop    r15
   14000464c:	pop    r14
   14000464e:	pop    r13
   140004650:	pop    r12
   140004652:	pop    rdi
   140004653:	pop    rsi
   140004654:	pop    rbx
   140004655:	ret    
   140004656:	int3   
   140004657:	int3   
   140004658:	int3   
   140004659:	int3   
   14000465a:	int3   
   14000465b:	int3   
   14000465c:	int3   
   14000465d:	int3   
   14000465e:	int3   
   14000465f:	int3   
   140004660:	sub    rsp,0x38
   140004664:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000466d:	test   rdx,rdx
   140004670:	je     0x140004693
   140004672:	test   r8,r8
   140004675:	je     0x140004693
   140004677:	and    QWORD PTR [rsp+0x48],0x0
   14000467d:	add    rcx,0x8
   140004681:	call   0x1400043c4
   140004686:	neg    eax
   140004688:	sbb    eax,eax
   14000468a:	not    eax
   14000468c:	and    eax,0x8007000e
   140004691:	jmp    0x140004698
   140004693:	mov    eax,0x80070057
   140004698:	add    rsp,0x38
   14000469c:	ret    
   14000469d:	int3   
   14000469e:	int3   
   14000469f:	int3   
   1400046a0:	int3   
   1400046a1:	int3   
   1400046a2:	int3   
   1400046a3:	int3   
   1400046a4:	mov    rcx,QWORD PTR [rcx]
   1400046a7:	rex.W jmp QWORD PTR [rip+0x4c82]        # 0x140009330
   1400046ae:	int3   
   1400046af:	int3   
   1400046b0:	int3   
   1400046b1:	int3   
   1400046b2:	int3   
   1400046b3:	int3   
   1400046b4:	sub    rsp,0x28
   1400046b8:	lea    rax,[rcx+0x8]
   1400046bc:	cmp    QWORD PTR [rcx],rax
   1400046bf:	je     0x1400046c6
   1400046c1:	call   0x1400046a4
   1400046c6:	add    rsp,0x28
   1400046ca:	ret    
   1400046cb:	int3   
   1400046cc:	int3   
   1400046cd:	int3   
   1400046ce:	int3   
   1400046cf:	int3   
   1400046d0:	int3   
   1400046d1:	int3   
   1400046d2:	int3   
   1400046d3:	int3   
   1400046d4:	rex push rbx
   1400046d6:	sub    rsp,0x20
   1400046da:	mov    rbx,rcx
   1400046dd:	mov    rcx,rdx
   1400046e0:	call   QWORD PTR [rip+0x4c52]        # 0x140009338
   1400046e6:	test   rax,rax
   1400046e9:	je     0x1400046f4
   1400046eb:	mov    QWORD PTR [rbx],rax
   1400046ee:	add    rsp,0x20
   1400046f2:	pop    rbx
   1400046f3:	ret    
   1400046f4:	mov    ecx,0x8007000e
   1400046f9:	call   0x140005180
   1400046fe:	int3   
   1400046ff:	int3   
   140004700:	int3   
   140004701:	int3   
   140004702:	int3   
   140004703:	int3   
   140004704:	int3   
   140004705:	int3   
   140004706:	int3   
   140004707:	int3   
   140004708:	sub    rsp,0x28
   14000470c:	call   QWORD PTR [rip+0x4a5e]        # 0x140009170
   140004712:	mov    ecx,eax
   140004714:	movzx  eax,ax
   140004717:	or     eax,0x80070000
   14000471c:	test   ecx,ecx
   14000471e:	cmovle eax,ecx
   140004721:	add    rsp,0x28
   140004725:	ret    
   140004726:	int3   
   140004727:	int3   
   140004728:	int3   
   140004729:	int3   
   14000472a:	int3   
   14000472b:	int3   
   14000472c:	mov    rcx,QWORD PTR [rcx+0x8]
   140004730:	rex.W jmp QWORD PTR [rip+0x4c99]        # 0x1400093d0
   140004737:	int3   
   140004738:	int3   
   140004739:	int3   
   14000473a:	int3   
   14000473b:	int3   
   14000473c:	int3   
   14000473d:	int3   
   14000473e:	int3   
   14000473f:	int3   
   140004740:	xor    r9d,r9d
   140004743:	xor    r8d,r8d
   140004746:	lea    edx,[r9+0x1]
   14000474a:	rex.W jmp QWORD PTR [rip+0x49f7]        # 0x140009148
   140004751:	int3   
   140004752:	int3   
   140004753:	int3   
   140004754:	int3   
   140004755:	int3   
   140004756:	int3   
   140004757:	int3   
   140004758:	mov    rax,rsp
   14000475b:	mov    QWORD PTR [rax+0x8],rbx
   14000475f:	mov    QWORD PTR [rax+0x10],rbp
   140004763:	mov    QWORD PTR [rax+0x18],rsi
   140004767:	mov    QWORD PTR [rax+0x20],rdi
   14000476b:	push   r14
   14000476d:	sub    rsp,0x20
   140004771:	mov    rbx,rcx
   140004774:	mov    esi,r8d
   140004777:	lea    ecx,[r8+0x1]
   14000477b:	mov    rbp,rdx
   14000477e:	add    ecx,DWORD PTR [rbx]
   140004780:	cmp    ecx,DWORD PTR [rbx]
   140004782:	jle    0x140004835
   140004788:	cmp    ecx,r8d
   14000478b:	jle    0x140004835
   140004791:	mov    edi,DWORD PTR [rbx+0x4]
   140004794:	xor    r14d,r14d
   140004797:	cmp    ecx,edi
   140004799:	jl     0x1400047d4
   14000479b:	cmp    edi,0x3fffffff
   1400047a1:	jg     0x140004835
   1400047a7:	add    edi,edi
   1400047a9:	cmp    ecx,edi
   1400047ab:	jge    0x14000479b
   1400047ad:	mov    eax,edi
   1400047af:	mov    ecx,0xffffffff
   1400047b4:	add    rax,rax
   1400047b7:	cmp    rax,rcx
   1400047ba:	ja     0x140004835
   1400047bc:	mov    rcx,QWORD PTR [rbx+0x8]
   1400047c0:	mov    edx,eax
   1400047c2:	call   QWORD PTR [rip+0x4c00]        # 0x1400093c8
   1400047c8:	test   rax,rax
   1400047cb:	je     0x140004835
   1400047cd:	mov    QWORD PTR [rbx+0x8],rax
   1400047d1:	mov    DWORD PTR [rbx+0x4],edi
   1400047d4:	cmp    DWORD PTR [rbx],r14d
   1400047d7:	jl     0x140004835
   1400047d9:	mov    ecx,DWORD PTR [rbx+0x4]
   1400047dc:	cmp    DWORD PTR [rbx],ecx
   1400047de:	jge    0x140004835
   1400047e0:	mov    eax,ecx
   1400047e2:	sub    eax,DWORD PTR [rbx]
   1400047e4:	cmp    eax,ecx
   1400047e6:	jg     0x140004835
   1400047e8:	movsxd rcx,DWORD PTR [rbx]
   1400047eb:	mov    r8,rbp
   1400047ee:	movsxd rdx,eax
   1400047f1:	mov    rax,QWORD PTR [rbx+0x8]
   1400047f5:	add    rdx,rdx
   1400047f8:	lea    rcx,[rax+rcx*2]
   1400047fc:	lea    eax,[rsi+rsi*1]
   1400047ff:	movsxd r9,eax
   140004802:	call   QWORD PTR [rip+0x4b20]        # 0x140009328
   140004808:	test   eax,eax
   14000480a:	je     0x140004820
   14000480c:	cmp    eax,0xc
   14000480f:	je     0x140004868
   140004811:	cmp    eax,0x16
   140004814:	je     0x14000485d
   140004816:	cmp    eax,0x22
   140004819:	je     0x14000485d
   14000481b:	cmp    eax,0x50
   14000481e:	jne    0x140004852
   140004820:	add    DWORD PTR [rbx],esi
   140004822:	mov    rax,QWORD PTR [rbx+0x8]
   140004826:	movsxd rcx,DWORD PTR [rbx]
   140004829:	mov    WORD PTR [rax+rcx*2],r14w
   14000482e:	mov    eax,0x1
   140004833:	jmp    0x140004837
   140004835:	xor    eax,eax
   140004837:	mov    rbx,QWORD PTR [rsp+0x30]
   14000483c:	mov    rbp,QWORD PTR [rsp+0x38]
   140004841:	mov    rsi,QWORD PTR [rsp+0x40]
   140004846:	mov    rdi,QWORD PTR [rsp+0x48]
   14000484b:	add    rsp,0x20
   14000484f:	pop    r14
   140004851:	ret    
   140004852:	mov    ecx,0x80004005
   140004857:	call   0x140005180
   14000485c:	int3   
   14000485d:	mov    ecx,0x80070057
   140004862:	call   0x140005180
   140004867:	int3   
   140004868:	mov    ecx,0x8007000e
   14000486d:	call   0x140005180
   140004872:	int3   
   140004873:	int3   
   140004874:	int3   
   140004875:	int3   
   140004876:	int3   
   140004877:	int3   
   140004878:	int3   
   140004879:	int3   
   14000487a:	int3   
   14000487b:	int3   
   14000487c:	mov    rax,rsp
   14000487f:	push   rbp
   140004880:	push   rsi
   140004881:	push   rdi
   140004882:	push   r12
   140004884:	push   r13
   140004886:	push   r14
   140004888:	push   r15
   14000488a:	lea    rbp,[rax-0x5f]
   14000488e:	sub    rsp,0x90
   140004895:	mov    QWORD PTR [rbp-0x31],0xfffffffffffffffe
   14000489d:	mov    QWORD PTR [rax+0x10],rbx
   1400048a1:	mov    rax,QWORD PTR [rip+0x8778]        # 0x14000d020
   1400048a8:	xor    rax,rsp
   1400048ab:	mov    QWORD PTR [rbp+0x17],rax
   1400048af:	mov    r12,r8
   1400048b2:	mov    rdi,rdx
   1400048b5:	mov    rsi,rcx
   1400048b8:	xor    ebx,ebx
   1400048ba:	test   r8,r8
   1400048bd:	jne    0x1400048c9
   1400048bf:	mov    eax,0x80004003
   1400048c4:	jmp    0x140004b00
   1400048c9:	mov    QWORD PTR [r8],rbx
   1400048cc:	or     rax,0xffffffffffffffff
   1400048d0:	inc    rax
   1400048d3:	cmp    WORD PTR [rdx+rax*2],bx
   1400048d7:	jne    0x1400048d0
   1400048d9:	add    eax,eax
   1400048db:	mov    ecx,0x3e8
   1400048e0:	cmp    eax,0x64
   1400048e3:	cmovl  eax,ecx
   1400048e6:	mov    DWORD PTR [rbp-0x49],ebx
   1400048e9:	mov    DWORD PTR [rbp-0x45],eax
   1400048ec:	mov    ecx,eax
   1400048ee:	add    rcx,rcx
   1400048f1:	mov    eax,0xffffffff
   1400048f6:	cmp    rcx,rax
   1400048f9:	jbe    0x140004904
   1400048fb:	mov    rax,rbx
   1400048fe:	mov    QWORD PTR [rbp-0x41],rbx
   140004902:	jmp    0x140004918
   140004904:	mov    ecx,ecx
   140004906:	call   QWORD PTR [rip+0x4ab4]        # 0x1400093c0
   14000490c:	mov    QWORD PTR [rbp-0x41],rax
   140004910:	test   rax,rax
   140004913:	je     0x140004918
   140004915:	mov    WORD PTR [rax],bx
   140004918:	test   rax,rax
   14000491b:	jne    0x140004927
   14000491d:	mov    ebx,0x8007000e
   140004922:	jmp    0x140004af4
   140004927:	mov    QWORD PTR [rsi],rdi
   14000492a:	cmp    WORD PTR [rdi],bx
   14000492d:	je     0x140004ae8
   140004933:	mov    rdx,QWORD PTR [rsi]
   140004936:	cmp    WORD PTR [rdx],0x25
   14000493a:	jne    0x140004a83
   140004940:	mov    rcx,rdx
   140004943:	call   QWORD PTR [rip+0x48ef]        # 0x140009238
   140004949:	mov    rdi,rax
   14000494c:	mov    QWORD PTR [rsi],rax
   14000494f:	cmp    WORD PTR [rax],0x25
   140004953:	jne    0x14000495d
   140004955:	mov    rdx,rax
   140004958:	jmp    0x140004a83
   14000495d:	test   rax,rax
   140004960:	je     0x140004ae1
   140004966:	movzx  eax,WORD PTR [rax]
   140004969:	test   ax,ax
   14000496c:	je     0x140004ae1
   140004972:	cmp    ax,0x25
   140004976:	je     0x140004986
   140004978:	mov    rcx,rdi
   14000497b:	call   QWORD PTR [rip+0x48b7]        # 0x140009238
   140004981:	mov    rdi,rax
   140004984:	jmp    0x140004966
   140004986:	test   rdi,rdi
   140004989:	je     0x140004ae1
   14000498f:	mov    rax,rdi
   140004992:	sub    rax,QWORD PTR [rsi]
   140004995:	sar    rax,1
   140004998:	cmp    rax,0x1f
   14000499c:	jg     0x140004ada
   1400049a2:	movsxd r9,eax
   1400049a5:	mov    r8,QWORD PTR [rsi]
   1400049a8:	mov    edx,0x20
   1400049ad:	lea    rcx,[rbp-0x29]
   1400049b1:	call   QWORD PTR [rip+0x4989]        # 0x140009340
   1400049b7:	test   eax,eax
   1400049b9:	je     0x1400049df
   1400049bb:	cmp    eax,0xc
   1400049be:	je     0x140004ac4
   1400049c4:	cmp    eax,0x16
   1400049c7:	je     0x140004ab9
   1400049cd:	cmp    eax,0x22
   1400049d0:	je     0x140004ab9
   1400049d6:	cmp    eax,0x50
   1400049d9:	jne    0x140004aae
   1400049df:	mov    r13,QWORD PTR [rsi+0x8]
   1400049e3:	mov    r15d,ebx
   1400049e6:	mov    r14,rbx
   1400049e9:	cmp    DWORD PTR [r13+0x18],ebx
   1400049ed:	jle    0x140004a11
   1400049ef:	mov    rax,QWORD PTR [r13+0x8]
   1400049f3:	lea    rdx,[rbp-0x29]
   1400049f7:	mov    rcx,QWORD PTR [rax+r14*8]
   1400049fb:	call   QWORD PTR [rip+0x474f]        # 0x140009150
   140004a01:	test   eax,eax
   140004a03:	je     0x140004a19
   140004a05:	inc    r15d
   140004a08:	inc    r14
   140004a0b:	cmp    r15d,DWORD PTR [r13+0x18]
   140004a0f:	jl     0x1400049ef
   140004a11:	or     r15d,0xffffffff
   140004a15:	or     r14,0xffffffffffffffff
   140004a19:	cmp    r14,0xffffffffffffffff
   140004a1d:	je     0x140004ae1
   140004a23:	test   r14,r14
   140004a26:	js     0x140004acf
   140004a2c:	cmp    r15d,DWORD PTR [r13+0x18]
   140004a30:	jge    0x140004acf
   140004a36:	mov    rax,QWORD PTR [r13+0x10]
   140004a3a:	mov    rdx,QWORD PTR [rax+r14*8]
   140004a3e:	test   rdx,rdx
   140004a41:	je     0x140004ae1
   140004a47:	mov    QWORD PTR [rbp-0x39],rbx
   140004a4b:	or     r8,0xffffffffffffffff
   140004a4f:	inc    r8
   140004a52:	cmp    WORD PTR [rdx+r8*2],bx
   140004a57:	jne    0x140004a4f
   140004a59:	lea    rcx,[rbp-0x49]
   140004a5d:	call   0x140004758
   140004a62:	nop
   140004a63:	test   eax,eax
   140004a65:	je     0x14000491d
   140004a6b:	cmp    QWORD PTR [rsi],rdi
   140004a6e:	je     0x140004a9a
   140004a70:	mov    rcx,QWORD PTR [rsi]
   140004a73:	call   QWORD PTR [rip+0x47bf]        # 0x140009238
   140004a79:	mov    QWORD PTR [rsi],rax
   140004a7c:	cmp    rax,rdi
   140004a7f:	jne    0x140004a70
   140004a81:	jmp    0x140004a9a
   140004a83:	mov    r8d,0x1
   140004a89:	lea    rcx,[rbp-0x49]
   140004a8d:	call   0x140004758
   140004a92:	test   eax,eax
   140004a94:	je     0x14000491d
   140004a9a:	mov    rcx,QWORD PTR [rsi]
   140004a9d:	call   QWORD PTR [rip+0x4795]        # 0x140009238
   140004aa3:	mov    QWORD PTR [rsi],rax
   140004aa6:	cmp    WORD PTR [rax],bx
   140004aa9:	jmp    0x14000492d
   140004aae:	mov    ecx,0x80004005
   140004ab3:	call   0x140005180
   140004ab8:	int3   
   140004ab9:	mov    ecx,0x80070057
   140004abe:	call   0x140005180
   140004ac3:	int3   
   140004ac4:	mov    ecx,0x8007000e
   140004ac9:	call   0x140005180
   140004ace:	int3   
   140004acf:	mov    ecx,0xc000008c
   140004ad4:	call   0x140004740
   140004ad9:	int3   
   140004ada:	mov    ebx,0x80004005
   140004adf:	jmp    0x140004af4
   140004ae1:	mov    ebx,0x80020009
   140004ae6:	jmp    0x140004af4
   140004ae8:	mov    rcx,QWORD PTR [rbp-0x41]
   140004aec:	mov    QWORD PTR [rbp-0x41],rbx
   140004af0:	mov    QWORD PTR [r12],rcx
   140004af4:	mov    rcx,QWORD PTR [rbp-0x41]
   140004af8:	call   QWORD PTR [rip+0x48d2]        # 0x1400093d0
   140004afe:	mov    eax,ebx
   140004b00:	mov    rcx,QWORD PTR [rbp+0x17]
   140004b04:	xor    rcx,rsp
   140004b07:	call   0x140007b00
   140004b0c:	mov    rbx,QWORD PTR [rsp+0xd8]
   140004b14:	add    rsp,0x90
   140004b1b:	pop    r15
   140004b1d:	pop    r14
   140004b1f:	pop    r13
   140004b21:	pop    r12
   140004b23:	pop    rdi
   140004b24:	pop    rsi
   140004b25:	pop    rbp
   140004b26:	ret    
   140004b27:	int3   
   140004b28:	int3   
   140004b29:	int3   
   140004b2a:	int3   
   140004b2b:	int3   
   140004b2c:	int3   
   140004b2d:	int3   
   140004b2e:	int3   
   140004b2f:	int3   
   140004b30:	mov    rax,rsp
   140004b33:	mov    QWORD PTR [rax+0x8],rbx
   140004b37:	mov    QWORD PTR [rax+0x10],rbp
   140004b3b:	mov    QWORD PTR [rax+0x18],rsi
   140004b3f:	mov    QWORD PTR [rax+0x20],rdi
   140004b43:	push   r15
   140004b45:	sub    rsp,0x20
   140004b49:	mov    eax,DWORD PTR [rip+0x8c69]        # 0x14000d7b8
   140004b4f:	mov    rsi,rdx
   140004b52:	mov    rbp,rcx
   140004b55:	test   al,0x1
   140004b57:	jne    0x140004bca
   140004b59:	or     eax,0x1
   140004b5c:	mov    DWORD PTR [rip+0x8c56],eax        # 0x14000d7b8
   140004b62:	lea    rax,[rip+0x4a9b]        # 0x140009604
   140004b69:	mov    QWORD PTR [rip+0x8c50],rax        # 0x14000d7c0
   140004b70:	mov    eax,0x8
   140004b75:	mov    WORD PTR [rip+0x8c4c],ax        # 0x14000d7c8
   140004b7c:	lea    rax,[rip+0x4a85]        # 0x140009608
   140004b83:	mov    QWORD PTR [rip+0x8c46],rax        # 0x14000d7d0
   140004b8a:	mov    eax,0x4008
   140004b8f:	mov    WORD PTR [rip+0x8c42],ax        # 0x14000d7d8
   140004b96:	lea    rax,[rip+0x4a6f]        # 0x14000960c
   140004b9d:	mov    QWORD PTR [rip+0x8c3c],rax        # 0x14000d7e0
   140004ba4:	mov    eax,0x13
   140004ba9:	mov    WORD PTR [rip+0x8c38],ax        # 0x14000d7e8
   140004bb0:	lea    rax,[rip+0x4a59]        # 0x140009610
   140004bb7:	mov    QWORD PTR [rip+0x8c32],rax        # 0x14000d7f0
   140004bbe:	mov    eax,0x11
   140004bc3:	mov    WORD PTR [rip+0x8c2e],ax        # 0x14000d7f8
   140004bca:	lea    r15,[rip+0x8bef]        # 0x14000d7c0
   140004bd1:	xor    ebx,ebx
   140004bd3:	mov    rdi,r15
   140004bd6:	mov    rdx,QWORD PTR [rdi]
   140004bd9:	mov    rcx,rbp
   140004bdc:	call   QWORD PTR [rip+0x456e]        # 0x140009150
   140004be2:	test   eax,eax
   140004be4:	je     0x140004bf9
   140004be6:	inc    ebx
   140004be8:	add    rdi,0x10
   140004bec:	movsxd rax,ebx
   140004bef:	cmp    rax,0x4
   140004bf3:	jb     0x140004bd6
   140004bf5:	xor    eax,eax
   140004bf7:	jmp    0x140004c0d
   140004bf9:	movsxd rcx,ebx
   140004bfc:	mov    eax,0x1
   140004c01:	add    rcx,rcx
   140004c04:	movzx  ecx,WORD PTR [r15+rcx*8+0x8]
   140004c0a:	mov    WORD PTR [rsi],cx
   140004c0d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c12:	mov    rbp,QWORD PTR [rsp+0x38]
   140004c17:	mov    rsi,QWORD PTR [rsp+0x40]
   140004c1c:	mov    rdi,QWORD PTR [rsp+0x48]
   140004c21:	add    rsp,0x20
   140004c25:	pop    r15
   140004c27:	ret    
   140004c28:	int3   
   140004c29:	int3   
   140004c2a:	int3   
   140004c2b:	int3   
   140004c2c:	int3   
   140004c2d:	int3   
   140004c2e:	int3   
   140004c2f:	int3   
   140004c30:	rex push rbx
   140004c32:	sub    rsp,0x20
   140004c36:	cmp    QWORD PTR [rcx],0x0
   140004c3a:	mov    rbx,rcx
   140004c3d:	je     0x140004c54
   140004c3f:	mov    rcx,QWORD PTR [rbx]
   140004c42:	mov    rax,QWORD PTR [rcx]
   140004c45:	mov    QWORD PTR [rbx],rax
   140004c48:	call   QWORD PTR [rip+0x46e2]        # 0x140009330
   140004c4e:	cmp    QWORD PTR [rbx],0x0
   140004c52:	jne    0x140004c3f
   140004c54:	add    rsp,0x20
   140004c58:	pop    rbx
   140004c59:	ret    
   140004c5a:	int3   
   140004c5b:	int3   
   140004c5c:	int3   
   140004c5d:	int3   
   140004c5e:	int3   
   140004c5f:	int3   
   140004c60:	rex push rbx
   140004c62:	push   rsi
   140004c63:	push   rdi
   140004c64:	push   r12
   140004c66:	push   r13
   140004c68:	push   r14
   140004c6a:	push   r15
   140004c6c:	mov    eax,0x21a0
   140004c71:	call   0x140008680
   140004c76:	sub    rsp,rax
   140004c79:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   140004c82:	mov    rax,QWORD PTR [rip+0x8397]        # 0x14000d020
   140004c89:	xor    rax,rsp
   140004c8c:	mov    QWORD PTR [rsp+0x2190],rax
   140004c94:	mov    r15,r8
   140004c97:	mov    QWORD PTR [rsp+0x40],r8
   140004c9c:	mov    r13,rdx
   140004c9f:	mov    r12,rcx
   140004ca2:	mov    QWORD PTR [rsp+0x50],rcx
   140004ca7:	mov    QWORD PTR [rsp+0x48],rdx
   140004cac:	mov    QWORD PTR [rsp+0x60],r8
   140004cb1:	mov    QWORD PTR [rsp+0x70],r9
   140004cb6:	xor    ebx,ebx
   140004cb8:	mov    WORD PTR [rsp+0x30],bx
   140004cbd:	lea    rdx,[rsp+0x190]
   140004cc5:	call   0x1400054a8
   140004cca:	test   eax,eax
   140004ccc:	js     0x14000514b
   140004cd2:	lea    rdx,[rsp+0x30]
   140004cd7:	lea    rcx,[rsp+0x190]
   140004cdf:	call   0x140004b30
   140004ce4:	test   eax,eax
   140004ce6:	jne    0x140004cf2
   140004ce8:	mov    eax,0x80020009
   140004ced:	jmp    0x14000514b
   140004cf2:	mov    rcx,QWORD PTR [r12]
   140004cf6:	movzx  eax,WORD PTR [rcx]
   140004cf9:	cmp    eax,0x20
   140004cfc:	ja     0x140004d1a
   140004cfe:	movabs rdx,0x100002600
   140004d08:	bt     rdx,rax
   140004d0c:	jae    0x140004d1a
   140004d0e:	call   QWORD PTR [rip+0x4524]        # 0x140009238
   140004d14:	mov    QWORD PTR [r12],rax
   140004d18:	jmp    0x140004cf2
   140004d1a:	lea    rdx,[rsp+0x190]
   140004d22:	mov    rcx,r12
   140004d25:	call   0x1400054a8
   140004d2a:	test   eax,eax
   140004d2c:	js     0x14000514b
   140004d32:	movzx  eax,WORD PTR [rsp+0x30]
   140004d37:	cmp    eax,0x8
   140004d3a:	je     0x1400050e5
   140004d40:	cmp    eax,0x11
   140004d43:	je     0x140004f2a
   140004d49:	cmp    eax,0x13
   140004d4c:	je     0x140004ef2
   140004d52:	cmp    eax,0x4008
   140004d57:	jne    0x140005137
   140004d5d:	lea    rcx,[rsp+0x190]
   140004d65:	or     rsi,0xffffffffffffffff
   140004d69:	mov    rax,rsi
   140004d6c:	inc    rax
   140004d6f:	cmp    WORD PTR [rcx+rax*2],bx
   140004d73:	jne    0x140004d6c
   140004d75:	add    eax,0x2
   140004d78:	mov    QWORD PTR [rsp+0x80],rbx
   140004d80:	movsxd rcx,eax
   140004d83:	test   eax,eax
   140004d85:	je     0x140004dc3
   140004d87:	xor    edx,edx
   140004d89:	mov    rax,rsi
   140004d8c:	div    rcx
   140004d8f:	cmp    rax,0x2
   140004d93:	jb     0x140004db9
   140004d95:	lea    rdx,[rcx+rcx*1]
   140004d99:	cmp    rdx,0x100
   140004da0:	jbe    0x140004dc3
   140004da2:	lea    rcx,[rsp+0x80]
   140004daa:	call   0x1400046d4
   140004daf:	mov    rdi,QWORD PTR [rsp+0x80]
   140004db7:	jmp    0x140004dd3
   140004db9:	mov    ecx,0x80070057
   140004dbe:	call   0x140005180
   140004dc3:	lea    rdi,[rsp+0x88]
   140004dcb:	mov    QWORD PTR [rsp+0x80],rdi
   140004dd3:	jmp    0x140004df7
   140004dd5:	xor    ebx,ebx
   140004dd7:	or     rsi,0xffffffffffffffff
   140004ddb:	mov    rdi,QWORD PTR [rsp+0x80]
   140004de3:	mov    r12,QWORD PTR [rsp+0x50]
   140004de8:	mov    r13,QWORD PTR [rsp+0x48]
   140004ded:	mov    rax,QWORD PTR [rsp+0x60]
   140004df2:	mov    QWORD PTR [rsp+0x40],rax
   140004df7:	test   rdi,rdi
   140004dfa:	je     0x140004eca
   140004e00:	lea    r14,[rsp+0x190]
   140004e08:	cmp    WORD PTR [rsp+0x190],bx
   140004e10:	je     0x140004e57
   140004e12:	mov    r15d,0x30
   140004e18:	mov    rcx,r14
   140004e1b:	call   QWORD PTR [rip+0x4417]        # 0x140009238
   140004e21:	movzx  ecx,WORD PTR [r14]
   140004e25:	cmp    cx,0x5c
   140004e29:	jne    0x140004e46
   140004e2b:	cmp    WORD PTR [rax],r15w
   140004e2f:	jne    0x140004e46
   140004e31:	mov    WORD PTR [rdi],bx
   140004e34:	add    rdi,0x2
   140004e38:	mov    rcx,rax
   140004e3b:	call   QWORD PTR [rip+0x43f7]        # 0x140009238
   140004e41:	mov    r14,rax
   140004e44:	jmp    0x140004e51
   140004e46:	mov    WORD PTR [rdi],cx
   140004e49:	add    rdi,0x2
   140004e4d:	add    r14,0x2
   140004e51:	cmp    WORD PTR [r14],bx
   140004e55:	jne    0x140004e18
   140004e57:	mov    DWORD PTR [rdi],0x0
   140004e5d:	mov    eax,ebx
   140004e5f:	mov    rdx,QWORD PTR [rsp+0x80]
   140004e67:	test   rdx,rdx
   140004e6a:	setne  al
   140004e6d:	test   eax,eax
   140004e6f:	jne    0x140004e7c
   140004e71:	mov    ecx,0x80004005
   140004e76:	call   0x140005180
   140004e7b:	int3   
   140004e7c:	mov    r9d,ebx
   140004e7f:	mov    r8,rdx
   140004e82:	mov    rcx,rsi
   140004e85:	inc    rcx
   140004e88:	cmp    WORD PTR [r8+rcx*2],bx
   140004e8d:	jne    0x140004e85
   140004e8f:	inc    ecx
   140004e91:	lea    r8,[r8+rcx*2]
   140004e95:	lea    r9d,[r9+rcx*2]
   140004e99:	cmp    ecx,0x1
   140004e9c:	jne    0x140004e82
   140004e9e:	mov    DWORD PTR [rsp+0x28],r9d
   140004ea3:	mov    QWORD PTR [rsp+0x20],rdx
   140004ea8:	lea    r9d,[rcx+0x6]
   140004eac:	xor    r8d,r8d
   140004eaf:	mov    rdx,QWORD PTR [rsp+0x40]
   140004eb4:	mov    rcx,QWORD PTR [r13+0x0]
   140004eb8:	call   QWORD PTR [rip+0x4162]        # 0x140009020
   140004ebe:	mov    esi,eax
   140004ec0:	mov    rdi,QWORD PTR [rsp+0x80]
   140004ec8:	jmp    0x140004ecf
   140004eca:	mov    esi,0xe
   140004ecf:	lea    rax,[rsp+0x88]
   140004ed7:	cmp    rdi,rax
   140004eda:	je     0x14000512a
   140004ee0:	lea    rcx,[rsp+0x80]
   140004ee8:	call   0x1400046a4
   140004eed:	jmp    0x14000512a
   140004ef2:	lea    r9,[rsp+0x30]
   140004ef7:	xor    r8d,r8d
   140004efa:	xor    edx,edx
   140004efc:	lea    rcx,[rsp+0x190]
   140004f04:	call   QWORD PTR [rip+0x42c6]        # 0x1400091d0
   140004f0a:	mov    eax,DWORD PTR [rsp+0x30]
   140004f0e:	mov    DWORD PTR [rsp+0x38],eax
   140004f12:	mov    DWORD PTR [rsp+0x28],0x4
   140004f1a:	lea    rax,[rsp+0x38]
   140004f1f:	mov    r9d,0x4
   140004f25:	jmp    0x140005113
   140004f2a:	lea    rax,[rsp+0x190]
   140004f32:	or     rsi,0xffffffffffffffff
   140004f36:	mov    rdi,rsi
   140004f39:	inc    rdi
   140004f3c:	cmp    WORD PTR [rax+rdi*2],bx
   140004f40:	jne    0x140004f39
   140004f42:	mov    DWORD PTR [rsp+0x38],edi
   140004f46:	test   dil,0x1
   140004f4a:	je     0x140004f56
   140004f4c:	mov    eax,0x80004005
   140004f51:	jmp    0x14000514b
   140004f56:	mov    eax,edi
   140004f58:	cdq    
   140004f59:	sub    eax,edx
   140004f5b:	sar    eax,1
   140004f5d:	movsxd r14,eax
   140004f60:	mov    DWORD PTR [rsp+0x30],r14d
   140004f65:	mov    QWORD PTR [rsp+0x80],rbx
   140004f6d:	mov    rcx,r14
   140004f70:	test   eax,eax
   140004f72:	je     0x140004faf
   140004f74:	xor    edx,edx
   140004f76:	mov    rax,rsi
   140004f79:	div    rcx
   140004f7c:	cmp    rax,0x1
   140004f80:	jae    0x140004f8c
   140004f82:	mov    ecx,0x80070057
   140004f87:	call   0x140005180
   140004f8c:	cmp    rcx,0x100
   140004f93:	jbe    0x140004faf
   140004f95:	mov    rdx,rcx
   140004f98:	lea    rcx,[rsp+0x80]
   140004fa0:	call   0x1400046d4
   140004fa5:	mov    rcx,QWORD PTR [rsp+0x80]
   140004fad:	jmp    0x140004fbf
   140004faf:	lea    rcx,[rsp+0x88]
   140004fb7:	mov    QWORD PTR [rsp+0x80],rcx
   140004fbf:	mov    rsi,QWORD PTR [rsp+0x40]
   140004fc4:	jmp    0x140004fe8
   140004fc6:	xor    ebx,ebx
   140004fc8:	mov    edi,DWORD PTR [rsp+0x38]
   140004fcc:	mov    r14d,DWORD PTR [rsp+0x30]
   140004fd1:	mov    rcx,QWORD PTR [rsp+0x80]
   140004fd9:	mov    r12,QWORD PTR [rsp+0x50]
   140004fde:	mov    r13,QWORD PTR [rsp+0x48]
   140004fe3:	mov    rsi,QWORD PTR [rsp+0x60]
   140004fe8:	test   rcx,rcx
   140004feb:	jne    0x140005010
   140004fed:	lea    rax,[rsp+0x88]
   140004ff5:	test   rax,rax
   140004ff8:	je     0x140004f4c
   140004ffe:	lea    rcx,[rsp+0x80]
   140005006:	call   0x1400046a4
   14000500b:	jmp    0x140004f4c
   140005010:	movsxd r8,r14d
   140005013:	xor    edx,edx
   140005015:	call   0x14000809c
   14000501a:	mov    r8d,ebx
   14000501d:	mov    r9,rbx
   140005020:	movsxd r11,edi
   140005023:	test   edi,edi
   140005025:	jle    0x14000509a
   140005027:	mov    r15d,0x30
   14000502d:	mov    eax,r8d
   140005030:	cdq    
   140005031:	sub    eax,edx
   140005033:	sar    eax,1
   140005035:	movsxd r10,eax
   140005038:	add    r10,QWORD PTR [rsp+0x80]
   140005040:	movzx  edx,WORD PTR [rsp+r9*2+0x190]
   140005049:	mov    eax,edx
   14000504b:	cmp    edx,r15d
   14000504e:	jl     0x140005076
   140005050:	cmp    eax,0x39
   140005053:	jle    0x140005071
   140005055:	cmp    eax,0x40
   140005058:	jle    0x140005076
   14000505a:	cmp    eax,0x46
   14000505d:	jle    0x14000506c
   14000505f:	add    eax,0xffffff9f
   140005062:	cmp    eax,0x5
   140005065:	ja     0x140005076
   140005067:	sub    dl,0x57
   14000506a:	jmp    0x140005078
   14000506c:	sub    dl,0x37
   14000506f:	jmp    0x140005078
   140005071:	sub    dl,r15b
   140005074:	jmp    0x140005078
   140005076:	mov    dl,bl
   140005078:	mov    ecx,r8d
   14000507b:	and    ecx,0x1
   14000507e:	shl    ecx,0x2
   140005081:	mov    eax,0x4
   140005086:	sub    eax,ecx
   140005088:	mov    cl,al
   14000508a:	shl    dl,cl
   14000508c:	or     BYTE PTR [r10],dl
   14000508f:	inc    r8d
   140005092:	inc    r9
   140005095:	cmp    r9,r11
   140005098:	jl     0x14000502d
   14000509a:	mov    DWORD PTR [rsp+0x28],r14d
   14000509f:	mov    rax,QWORD PTR [rsp+0x80]
   1400050a7:	mov    QWORD PTR [rsp+0x20],rax
   1400050ac:	mov    r9d,0x3
   1400050b2:	xor    r8d,r8d
   1400050b5:	mov    rdx,rsi
   1400050b8:	mov    rcx,QWORD PTR [r13+0x0]
   1400050bc:	call   QWORD PTR [rip+0x3f5e]        # 0x140009020
   1400050c2:	mov    esi,eax
   1400050c4:	lea    rax,[rsp+0x88]
   1400050cc:	cmp    QWORD PTR [rsp+0x80],rax
   1400050d4:	je     0x14000512a
   1400050d6:	lea    rcx,[rsp+0x80]
   1400050de:	call   0x1400046a4
   1400050e3:	jmp    0x14000512a
   1400050e5:	lea    rax,[rsp+0x190]
   1400050ed:	or     rsi,0xffffffffffffffff
   1400050f1:	inc    rsi
   1400050f4:	cmp    WORD PTR [rax+rsi*2],bx
   1400050f8:	jne    0x1400050f1
   1400050fa:	lea    eax,[rsi*2+0x2]
   140005101:	mov    DWORD PTR [rsp+0x28],eax
   140005105:	lea    rax,[rsp+0x190]
   14000510d:	mov    r9d,0x1
   140005113:	mov    QWORD PTR [rsp+0x20],rax
   140005118:	xor    r8d,r8d
   14000511b:	mov    rdx,r15
   14000511e:	mov    rcx,QWORD PTR [r13+0x0]
   140005122:	call   QWORD PTR [rip+0x3ef8]        # 0x140009020
   140005128:	mov    esi,eax
   14000512a:	test   esi,esi
   14000512c:	je     0x140005137
   14000512e:	mov    ecx,esi
   140005130:	call   0x140005494
   140005135:	jmp    0x14000514b
   140005137:	mov    rdx,QWORD PTR [rsp+0x70]
   14000513c:	mov    rcx,r12
   14000513f:	call   0x1400054a8
   140005144:	test   eax,eax
   140005146:	cmovs  ebx,eax
   140005149:	mov    eax,ebx
   14000514b:	mov    rcx,QWORD PTR [rsp+0x2190]
   140005153:	xor    rcx,rsp
   140005156:	call   0x140007b00
   14000515b:	add    rsp,0x21a0
   140005162:	pop    r15
   140005164:	pop    r14
   140005166:	pop    r13
   140005168:	pop    r12
   14000516a:	pop    rdi
   14000516b:	pop    rsi
   14000516c:	pop    rbx
   14000516d:	ret    
   14000516e:	int3   
   14000516f:	int3   
   140005170:	int3   
   140005171:	int3   
   140005172:	int3   
   140005173:	int3   
   140005174:	mov    DWORD PTR [rcx],edx
   140005176:	mov    rax,rcx
   140005179:	ret    
   14000517a:	int3   
   14000517b:	int3   
   14000517c:	int3   
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	sub    rsp,0x28
   140005184:	mov    edx,ecx
   140005186:	lea    rcx,[rsp+0x40]
   14000518b:	call   0x140005174
   140005190:	lea    rdx,[rip+0x66a1]        # 0x14000b838
   140005197:	mov    ecx,DWORD PTR [rax]
   140005199:	mov    DWORD PTR [rsp+0x38],ecx
   14000519d:	lea    rcx,[rsp+0x38]
   1400051a2:	call   0x1400080e8
   1400051a7:	int3   
   1400051a8:	int3   
   1400051a9:	int3   
   1400051aa:	int3   
   1400051ab:	int3   
   1400051ac:	int3   
   1400051ad:	int3   
   1400051ae:	int3   
   1400051af:	int3   
   1400051b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400051b5:	push   rdi
   1400051b6:	mov    eax,0x2030
   1400051bb:	call   0x140008680
   1400051c0:	sub    rsp,rax
   1400051c3:	mov    rax,QWORD PTR [rip+0x7e56]        # 0x14000d020
   1400051ca:	xor    rax,rsp
   1400051cd:	mov    QWORD PTR [rsp+0x2020],rax
   1400051d5:	cmp    WORD PTR [rdx],0x3d
   1400051d9:	mov    rdi,rdx
   1400051dc:	mov    rbx,rcx
   1400051df:	jne    0x140005230
   1400051e1:	call   0x1400054a8
   1400051e6:	test   eax,eax
   1400051e8:	js     0x140005232
   1400051ea:	mov    rcx,QWORD PTR [rbx]
   1400051ed:	movzx  eax,WORD PTR [rcx]
   1400051f0:	cmp    eax,0x20
   1400051f3:	ja     0x140005210
   1400051f5:	movabs rdx,0x100002600
   1400051ff:	bt     rdx,rax
   140005203:	jae    0x140005210
   140005205:	call   QWORD PTR [rip+0x402d]        # 0x140009238
   14000520b:	mov    QWORD PTR [rbx],rax
   14000520e:	jmp    0x1400051ea
   140005210:	lea    rdx,[rsp+0x20]
   140005215:	mov    rcx,rbx
   140005218:	call   0x1400054a8
   14000521d:	test   eax,eax
   14000521f:	js     0x140005232
   140005221:	mov    rdx,rdi
   140005224:	mov    rcx,rbx
   140005227:	call   0x1400054a8
   14000522c:	test   eax,eax
   14000522e:	js     0x140005232
   140005230:	xor    eax,eax
   140005232:	mov    rcx,QWORD PTR [rsp+0x2020]
   14000523a:	xor    rcx,rsp
   14000523d:	call   0x140007b00
   140005242:	mov    rbx,QWORD PTR [rsp+0x2050]
   14000524a:	add    rsp,0x2030
   140005251:	pop    rdi
   140005252:	ret    
   140005253:	int3   
   140005254:	int3   
   140005255:	int3   
   140005256:	int3   
   140005257:	int3   
   140005258:	int3   
   140005259:	int3   
   14000525a:	int3   
   14000525b:	int3   
   14000525c:	mov    QWORD PTR [rsp+0x18],rbx
   140005261:	push   rbp
   140005262:	push   rsi
   140005263:	push   rdi
   140005264:	lea    rbp,[rsp-0x180]
   14000526c:	sub    rsp,0x280
   140005273:	mov    rax,QWORD PTR [rip+0x7da6]        # 0x14000d020
   14000527a:	xor    rax,rsp
   14000527d:	mov    QWORD PTR [rbp+0x170],rax
   140005284:	xor    eax,eax
   140005286:	mov    rdi,rcx
   140005289:	mov    rcx,QWORD PTR [rcx]
   14000528c:	mov    r9d,0x2001f
   140005292:	mov    QWORD PTR [rsp+0x48],rax
   140005297:	xor    r8d,r8d
   14000529a:	mov    QWORD PTR [rsp+0x50],rax
   14000529f:	mov    rsi,rdx
   1400052a2:	mov    QWORD PTR [rsp+0x58],rax
   1400052a7:	mov    QWORD PTR [rsp+0x60],rax
   1400052ac:	lea    rax,[rsp+0x60]
   1400052b1:	mov    QWORD PTR [rsp+0x20],rax
   1400052b6:	call   QWORD PTR [rip+0x3d5c]        # 0x140009018
   1400052bc:	mov    ebx,eax
   1400052be:	test   eax,eax
   1400052c0:	jne    0x14000535f
   1400052c6:	mov    rcx,QWORD PTR [rsp+0x48]
   1400052cb:	test   rcx,rcx
   1400052ce:	je     0x1400052d8
   1400052d0:	call   QWORD PTR [rip+0x3d2a]        # 0x140009000
   1400052d6:	mov    ebx,eax
   1400052d8:	mov    rcx,QWORD PTR [rsp+0x60]
   1400052dd:	mov    QWORD PTR [rsp+0x48],rcx
   1400052e2:	test   ebx,ebx
   1400052e4:	jne    0x14000535f
   1400052e6:	jmp    0x140005302
   1400052e8:	lea    rdx,[rsp+0x70]
   1400052ed:	lea    rcx,[rsp+0x48]
   1400052f2:	call   0x14000525c
   1400052f7:	mov    ebx,eax
   1400052f9:	test   eax,eax
   1400052fb:	jne    0x14000535f
   1400052fd:	mov    rcx,QWORD PTR [rsp+0x48]
   140005302:	lea    rax,[rsp+0x68]
   140005307:	mov    DWORD PTR [rsp+0x40],0x100
   14000530f:	mov    QWORD PTR [rsp+0x38],rax
   140005314:	lea    r9,[rsp+0x40]
   140005319:	and    QWORD PTR [rsp+0x30],0x0
   14000531f:	lea    r8,[rsp+0x70]
   140005324:	and    QWORD PTR [rsp+0x28],0x0
   14000532a:	xor    edx,edx
   14000532c:	and    QWORD PTR [rsp+0x20],0x0
   140005332:	call   QWORD PTR [rip+0x3cd8]        # 0x140009010
   140005338:	test   eax,eax
   14000533a:	je     0x1400052e8
   14000533c:	mov    rcx,QWORD PTR [rsp+0x48]
   140005341:	test   rcx,rcx
   140005344:	je     0x140005352
   140005346:	call   QWORD PTR [rip+0x3cb4]        # 0x140009000
   14000534c:	and    QWORD PTR [rsp+0x48],0x0
   140005352:	mov    rdx,rsi
   140005355:	mov    rcx,rdi
   140005358:	call   0x1400053c4
   14000535d:	mov    ebx,eax
   14000535f:	mov    rcx,QWORD PTR [rsp+0x48]
   140005364:	test   rcx,rcx
   140005367:	je     0x14000536f
   140005369:	call   QWORD PTR [rip+0x3c91]        # 0x140009000
   14000536f:	mov    eax,ebx
   140005371:	mov    rcx,QWORD PTR [rbp+0x170]
   140005378:	xor    rcx,rsp
   14000537b:	call   0x140007b00
   140005380:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140005388:	add    rsp,0x280
   14000538f:	pop    rdi
   140005390:	pop    rsi
   140005391:	pop    rbp
   140005392:	ret    
   140005393:	int3   
   140005394:	int3   
   140005395:	int3   
   140005396:	int3   
   140005397:	int3   
   140005398:	int3   
   140005399:	int3   
   14000539a:	int3   
   14000539b:	int3   
   14000539c:	rex push rbx
   14000539e:	sub    rsp,0x20
   1400053a2:	mov    rbx,rcx
   1400053a5:	mov    rcx,QWORD PTR [rcx]
   1400053a8:	test   rcx,rcx
   1400053ab:	je     0x1400053b7
   1400053ad:	call   QWORD PTR [rip+0x3c4d]        # 0x140009000
   1400053b3:	and    QWORD PTR [rbx],0x0
   1400053b7:	add    rsp,0x20
   1400053bb:	pop    rbx
   1400053bc:	ret    
   1400053bd:	int3   
   1400053be:	int3   
   1400053bf:	int3   
   1400053c0:	int3   
   1400053c1:	int3   
   1400053c2:	int3   
   1400053c3:	int3   
   1400053c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400053c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400053ce:	push   rdi
   1400053cf:	sub    rsp,0x20
   1400053d3:	cmp    QWORD PTR [rcx+0x8],0x0
   1400053d8:	mov    rsi,rdx
   1400053db:	mov    rbx,rcx
   1400053de:	jne    0x14000543a
   1400053e0:	cmp    QWORD PTR [rcx+0x10],0x0
   1400053e5:	jne    0x14000543a
   1400053e7:	lea    rcx,[rip+0x4a52]        # 0x140009e40
   1400053ee:	call   QWORD PTR [rip+0x3d64]        # 0x140009158
   1400053f4:	test   rax,rax
   1400053f7:	je     0x14000540f
   1400053f9:	lea    rdx,[rip+0x4a98]        # 0x140009e98
   140005400:	mov    rcx,rax
   140005403:	call   QWORD PTR [rip+0x3d5f]        # 0x140009168
   140005409:	mov    QWORD PTR [rbx+0x8],rax
   14000540d:	jmp    0x14000543a
   14000540f:	xor    r8d,r8d
   140005412:	lea    rcx,[rip+0x4a8f]        # 0x140009ea8
   140005419:	xor    edx,edx
   14000541b:	call   QWORD PTR [rip+0x3d3f]        # 0x140009160
   140005421:	test   rax,rax
   140005424:	je     0x14000543a
   140005426:	lea    rdx,[rip+0x4a9b]        # 0x140009ec8
   14000542d:	mov    rcx,rax
   140005430:	call   QWORD PTR [rip+0x3d32]        # 0x140009168
   140005436:	mov    QWORD PTR [rbx+0x10],rax
   14000543a:	mov    rdi,QWORD PTR [rbx+0x8]
   14000543e:	test   rdi,rdi
   140005441:	je     0x14000545c
   140005443:	mov    rcx,rdi
   140005446:	call   QWORD PTR [rip+0x3f94]        # 0x1400093e0
   14000544c:	mov    rcx,QWORD PTR [rbx]
   14000544f:	xor    r9d,r9d
   140005452:	xor    r8d,r8d
   140005455:	mov    rdx,rsi
   140005458:	call   rdi
   14000545a:	jmp    0x14000547e
   14000545c:	mov    rdi,QWORD PTR [rbx+0x10]
   140005460:	test   rdi,rdi
   140005463:	je     0x140005478
   140005465:	mov    rcx,rdi
   140005468:	call   QWORD PTR [rip+0x3f72]        # 0x1400093e0
   14000546e:	mov    rcx,QWORD PTR [rbx]
   140005471:	mov    rdx,rsi
   140005474:	call   rdi
   140005476:	jmp    0x14000547e
   140005478:	call   QWORD PTR [rip+0x3cf2]        # 0x140009170
   14000547e:	mov    rbx,QWORD PTR [rsp+0x30]
   140005483:	mov    rsi,QWORD PTR [rsp+0x38]
   140005488:	add    rsp,0x20
   14000548c:	pop    rdi
   14000548d:	ret    
   14000548e:	int3   
   14000548f:	int3   
   140005490:	int3   
   140005491:	int3   
   140005492:	int3   
   140005493:	int3   
   140005494:	movzx  eax,cx
   140005497:	or     eax,0x80070000
   14000549c:	test   ecx,ecx
   14000549e:	cmovle eax,ecx
   1400054a1:	ret    
   1400054a2:	int3   
   1400054a3:	int3   
   1400054a4:	int3   
   1400054a5:	int3   
   1400054a6:	int3   
   1400054a7:	int3   
   1400054a8:	mov    rax,rsp
   1400054ab:	mov    QWORD PTR [rax+0x8],rbx
   1400054af:	mov    QWORD PTR [rax+0x10],rbp
   1400054b3:	mov    QWORD PTR [rax+0x18],rsi
   1400054b7:	mov    QWORD PTR [rax+0x20],rdi
   1400054bb:	push   r12
   1400054bd:	push   r14
   1400054bf:	push   r15
   1400054c1:	sub    rsp,0x20
   1400054c5:	mov    rbx,rdx
   1400054c8:	mov    rdi,rcx
   1400054cb:	movabs r12,0x100002600
   1400054d5:	mov    rcx,QWORD PTR [rdi]
   1400054d8:	movzx  eax,WORD PTR [rcx]
   1400054db:	cmp    eax,0x20
   1400054de:	ja     0x1400054f1
   1400054e0:	bt     r12,rax
   1400054e4:	jae    0x1400054f1
   1400054e6:	call   QWORD PTR [rip+0x3d4c]        # 0x140009238
   1400054ec:	mov    QWORD PTR [rdi],rax
   1400054ef:	jmp    0x1400054d5
   1400054f1:	xor    r14d,r14d
   1400054f4:	cmp    r14w,WORD PTR [rcx]
   1400054f8:	je     0x14000560e
   1400054fe:	lea    r15d,[r14+0x27]
   140005502:	lea    rbp,[rbx+0x2000]
   140005509:	cmp    r15w,WORD PTR [rcx]
   14000550d:	jne    0x1400055ae
   140005513:	call   QWORD PTR [rip+0x3d1f]        # 0x140009238
   140005519:	mov    QWORD PTR [rdi],rax
   14000551c:	cmp    r14w,WORD PTR [rax]
   140005520:	je     0x14000558e
   140005522:	mov    rcx,QWORD PTR [rdi]
   140005525:	cmp    r15w,WORD PTR [rcx]
   140005529:	jne    0x140005537
   14000552b:	call   QWORD PTR [rip+0x3d07]        # 0x140009238
   140005531:	cmp    r15w,WORD PTR [rax]
   140005535:	jne    0x14000558e
   140005537:	mov    rcx,QWORD PTR [rdi]
   14000553a:	cmp    r15w,WORD PTR [rcx]
   14000553e:	jne    0x140005549
   140005540:	call   QWORD PTR [rip+0x3cf2]        # 0x140009238
   140005546:	mov    QWORD PTR [rdi],rax
   140005549:	mov    rsi,QWORD PTR [rdi]
   14000554c:	mov    rcx,rsi
   14000554f:	call   QWORD PTR [rip+0x3ce3]        # 0x140009238
   140005555:	mov    QWORD PTR [rdi],rax
   140005558:	sub    rax,rsi
   14000555b:	sar    rax,1
   14000555e:	lea    rcx,[rax+0x1]
   140005562:	lea    rcx,[rbx+rcx*2]
   140005566:	cmp    rcx,rbp
   140005569:	jae    0x14000560e
   14000556f:	test   eax,eax
   140005571:	jle    0x140005589
   140005573:	sub    rsi,rbx
   140005576:	mov    ecx,eax
   140005578:	movzx  eax,WORD PTR [rsi+rbx*1]
   14000557c:	mov    WORD PTR [rbx],ax
   14000557f:	add    rbx,0x2
   140005583:	sub    rcx,0x1
   140005587:	jne    0x140005578
   140005589:	mov    rax,QWORD PTR [rdi]
   14000558c:	jmp    0x14000551c
   14000558e:	mov    rax,QWORD PTR [rdi]
   140005591:	cmp    r14w,WORD PTR [rax]
   140005595:	je     0x14000560e
   140005597:	cmp    rbx,rbp
   14000559a:	jae    0x14000560e
   14000559c:	mov    WORD PTR [rbx],r14w
   1400055a0:	mov    rcx,QWORD PTR [rdi]
   1400055a3:	call   QWORD PTR [rip+0x3c8f]        # 0x140009238
   1400055a9:	mov    QWORD PTR [rdi],rax
   1400055ac:	jmp    0x14000560a
   1400055ae:	mov    rsi,QWORD PTR [rdi]
   1400055b1:	movzx  eax,WORD PTR [rsi]
   1400055b4:	cmp    eax,0x20
   1400055b7:	ja     0x1400055bf
   1400055b9:	bt     r12,rax
   1400055bd:	jb     0x140005601
   1400055bf:	mov    rcx,rsi
   1400055c2:	call   QWORD PTR [rip+0x3c70]        # 0x140009238
   1400055c8:	mov    QWORD PTR [rdi],rax
   1400055cb:	sub    rax,rsi
   1400055ce:	sar    rax,1
   1400055d1:	lea    rcx,[rax+0x1]
   1400055d5:	lea    rcx,[rbx+rcx*2]
   1400055d9:	cmp    rcx,rbp
   1400055dc:	jae    0x14000560e
   1400055de:	test   eax,eax
   1400055e0:	jle    0x1400055f8
   1400055e2:	sub    rsi,rbx
   1400055e5:	mov    ecx,eax
   1400055e7:	movzx  eax,WORD PTR [rsi+rbx*1]
   1400055eb:	mov    WORD PTR [rbx],ax
   1400055ee:	add    rbx,0x2
   1400055f2:	sub    rcx,0x1
   1400055f6:	jne    0x1400055e7
   1400055f8:	mov    rax,QWORD PTR [rdi]
   1400055fb:	cmp    r14w,WORD PTR [rax]
   1400055ff:	jne    0x1400055ae
   140005601:	cmp    rbx,rbp
   140005604:	jae    0x14000560e
   140005606:	mov    WORD PTR [rbx],r14w
   14000560a:	xor    eax,eax
   14000560c:	jmp    0x140005613
   14000560e:	mov    eax,0x80020009
   140005613:	mov    rbx,QWORD PTR [rsp+0x40]
   140005618:	mov    rbp,QWORD PTR [rsp+0x48]
   14000561d:	mov    rsi,QWORD PTR [rsp+0x50]
   140005622:	mov    rdi,QWORD PTR [rsp+0x58]
   140005627:	add    rsp,0x20
   14000562b:	pop    r15
   14000562d:	pop    r14
   14000562f:	pop    r12
   140005631:	ret    
   140005632:	int3   
   140005633:	int3   
   140005634:	int3   
   140005635:	int3   
   140005636:	int3   
   140005637:	int3   
   140005638:	rex push rbp
   14000563a:	push   rbx
   14000563b:	push   rsi
   14000563c:	push   rdi
   14000563d:	lea    rbp,[rsp-0x21f8]
   140005645:	mov    eax,0x22f8
   14000564a:	call   0x140008680
   14000564f:	sub    rsp,rax
   140005652:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   14000565a:	mov    rax,QWORD PTR [rip+0x79bf]        # 0x14000d020
   140005661:	xor    rax,rsp
   140005664:	mov    QWORD PTR [rbp+0x21e0],rax
   14000566b:	mov    DWORD PTR [rsp+0x78],r9d
   140005670:	mov    QWORD PTR [rbp-0x78],r8
   140005674:	mov    rdi,rdx
   140005677:	mov    rax,rcx
   14000567a:	mov    QWORD PTR [rsp+0x70],rcx
   14000567f:	xor    ecx,ecx
   140005681:	mov    esi,ecx
   140005683:	mov    QWORD PTR [rbp-0x70],rcx
   140005687:	mov    QWORD PTR [rbp-0x68],rcx
   14000568b:	mov    QWORD PTR [rbp-0x60],rcx
   14000568f:	mov    ecx,DWORD PTR [rbp+0x2240]
   140005695:	mov    DWORD PTR [rbp-0x40],ecx
   140005698:	mov    rcx,rax
   14000569b:	call   0x1400054a8
   1400056a0:	test   eax,eax
   1400056a2:	mov    ebx,eax
   1400056a4:	js     0x140005de4
   1400056aa:	cmp    WORD PTR [rdi],0x7d
   1400056ae:	je     0x140005de4
   1400056b4:	mov    eax,0x1
   1400056b9:	mov    DWORD PTR [rsp+0x68],eax
   1400056bd:	lea    rdx,[rip+0x3f8c]        # 0x140009650
   1400056c4:	mov    rcx,rdi
   1400056c7:	call   QWORD PTR [rip+0x3a83]        # 0x140009150
   1400056cd:	xor    ecx,ecx
   1400056cf:	mov    ebx,ecx
   1400056d1:	test   eax,eax
   1400056d3:	sete   bl
   1400056d6:	mov    DWORD PTR [rsp+0x60],ebx
   1400056da:	lea    rdx,[rip+0x3f3f]        # 0x140009620
   1400056e1:	mov    rcx,rdi
   1400056e4:	call   QWORD PTR [rip+0x3a66]        # 0x140009150
   1400056ea:	test   eax,eax
   1400056ec:	je     0x1400056f6
   1400056ee:	test   ebx,ebx
   1400056f0:	je     0x1400057bb
   1400056f6:	mov    rdx,rdi
   1400056f9:	mov    rcx,QWORD PTR [rsp+0x70]
   1400056fe:	call   0x1400054a8
   140005703:	mov    ebx,eax
   140005705:	xor    edx,edx
   140005707:	test   eax,eax
   140005709:	js     0x140005de4
   14000570f:	cmp    DWORD PTR [rsp+0x78],edx
   140005713:	je     0x1400057bb
   140005719:	mov    QWORD PTR [rbp-0x58],rdx
   14000571d:	mov    QWORD PTR [rbp-0x50],rdx
   140005721:	mov    QWORD PTR [rbp-0x48],rdx
   140005725:	mov    rcx,rdi
   140005728:	movzx  eax,WORD PTR [rdi]
   14000572b:	jmp    0x14000573f
   14000572d:	cmp    ax,0x5c
   140005731:	je     0x140005746
   140005733:	call   QWORD PTR [rip+0x3aff]        # 0x140009238
   140005739:	mov    rcx,rax
   14000573c:	movzx  eax,WORD PTR [rax]
   14000573f:	test   ax,ax
   140005742:	jne    0x14000572d
   140005744:	jmp    0x14000574f
   140005746:	test   rcx,rcx
   140005749:	jne    0x140005db3
   14000574f:	lea    rbx,[rip+0x3ffa]        # 0x140009750
   140005756:	mov    rdx,QWORD PTR [rbx]
   140005759:	mov    rcx,rdi
   14000575c:	call   QWORD PTR [rip+0x39ee]        # 0x140009150
   140005762:	test   eax,eax
   140005764:	je     0x14000578a
   140005766:	add    rbx,0x8
   14000576a:	lea    rax,[rip+0x403f]        # 0x1400097b0
   140005771:	cmp    rbx,rax
   140005774:	jl     0x140005756
   140005776:	mov    rax,QWORD PTR [rbp-0x78]
   14000577a:	mov    QWORD PTR [rbp-0x58],rax
   14000577e:	mov    rdx,rdi
   140005781:	lea    rcx,[rbp-0x58]
   140005785:	call   0x14000525c
   14000578a:	xor    eax,eax
   14000578c:	cmp    DWORD PTR [rsp+0x60],eax
   140005790:	je     0x1400057bb
   140005792:	mov    rdx,rdi
   140005795:	mov    rcx,QWORD PTR [rsp+0x70]
   14000579a:	call   0x1400054a8
   14000579f:	mov    ebx,eax
   1400057a1:	test   eax,eax
   1400057a3:	js     0x140005de4
   1400057a9:	mov    rdx,rdi
   1400057ac:	mov    rcx,QWORD PTR [rsp+0x70]
   1400057b1:	call   0x1400051b0
   1400057b6:	jmp    0x140005a64
   1400057bb:	lea    rdx,[rip+0x3e76]        # 0x140009638
   1400057c2:	mov    rcx,rdi
   1400057c5:	call   QWORD PTR [rip+0x3985]        # 0x140009150
   1400057cb:	xor    ecx,ecx
   1400057cd:	test   eax,eax
   1400057cf:	jne    0x1400057ec
   1400057d1:	mov    DWORD PTR [rsp+0x68],ecx
   1400057d5:	mov    rdx,rdi
   1400057d8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400057dd:	call   0x1400054a8
   1400057e2:	mov    ebx,eax
   1400057e4:	test   eax,eax
   1400057e6:	js     0x140005de4
   1400057ec:	lea    rdx,[rip+0x3e25]        # 0x140009618
   1400057f3:	mov    rcx,rdi
   1400057f6:	call   QWORD PTR [rip+0x3954]        # 0x140009150
   1400057fc:	xor    edx,edx
   1400057fe:	test   eax,eax
   140005800:	jne    0x1400058f7
   140005806:	lea    rdx,[rbp+0x1e0]
   14000580d:	mov    rcx,QWORD PTR [rsp+0x70]
   140005812:	call   0x1400054a8
   140005817:	mov    ebx,eax
   140005819:	test   eax,eax
   14000581b:	js     0x140005de4
   140005821:	mov    rdx,rdi
   140005824:	mov    rcx,QWORD PTR [rsp+0x70]
   140005829:	call   0x1400054a8
   14000582e:	mov    ebx,eax
   140005830:	xor    edx,edx
   140005832:	test   eax,eax
   140005834:	js     0x140005de4
   14000583a:	cmp    WORD PTR [rdi],0x3d
   14000583e:	jne    0x140005db3
   140005844:	cmp    DWORD PTR [rsp+0x78],edx
   140005848:	je     0x14000587b
   14000584a:	mov    QWORD PTR [rbp-0x50],rdx
   14000584e:	mov    QWORD PTR [rbp-0x48],rdx
   140005852:	mov    rax,QWORD PTR [rbp-0x78]
   140005856:	mov    QWORD PTR [rbp-0x58],rax
   14000585a:	mov    r9,rdi
   14000585d:	lea    r8,[rbp+0x1e0]
   140005864:	lea    rdx,[rbp-0x58]
   140005868:	mov    rcx,QWORD PTR [rsp+0x70]
   14000586d:	call   0x140004c60
   140005872:	mov    ebx,eax
   140005874:	xor    edx,edx
   140005876:	jmp    0x140005a68
   14000587b:	cmp    DWORD PTR [rbp+0x2240],edx
   140005881:	jne    0x1400058e5
   140005883:	cmp    DWORD PTR [rsp+0x68],edx
   140005887:	je     0x1400058e5
   140005889:	mov    QWORD PTR [rsp+0x68],rdx
   14000588e:	lea    rax,[rsp+0x68]
   140005893:	mov    QWORD PTR [rsp+0x20],rax
   140005898:	mov    r9d,0x20006
   14000589e:	xor    r8d,r8d
   1400058a1:	mov    rcx,QWORD PTR [rbp-0x78]
   1400058a5:	call   QWORD PTR [rip+0x376d]        # 0x140009018
   1400058ab:	test   eax,eax
   1400058ad:	jne    0x140005ddb
   1400058b3:	mov    rbx,QWORD PTR [rsp+0x68]
   1400058b8:	mov    QWORD PTR [rbp-0x80],rbx
   1400058bc:	lea    rdx,[rbp+0x1e0]
   1400058c3:	mov    rcx,rbx
   1400058c6:	call   QWORD PTR [rip+0x3764]        # 0x140009030
   1400058cc:	test   eax,0xfffffffd
   1400058d1:	jne    0x140005d99
   1400058d7:	test   rbx,rbx
   1400058da:	je     0x1400058e5
   1400058dc:	mov    rcx,rbx
   1400058df:	call   QWORD PTR [rip+0x371b]        # 0x140009000
   1400058e5:	mov    rdx,rdi
   1400058e8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400058ed:	call   0x1400051b0
   1400058f2:	jmp    0x1400056a0
   1400058f7:	mov    rcx,rdi
   1400058fa:	movzx  eax,WORD PTR [rdi]
   1400058fd:	jmp    0x140005913
   1400058ff:	cmp    ax,0x5c
   140005903:	je     0x14000591a
   140005905:	call   QWORD PTR [rip+0x392d]        # 0x140009238
   14000590b:	mov    rcx,rax
   14000590e:	movzx  eax,WORD PTR [rax]
   140005911:	xor    edx,edx
   140005913:	test   ax,ax
   140005916:	jne    0x1400058ff
   140005918:	jmp    0x140005923
   14000591a:	test   rcx,rcx
   14000591d:	jne    0x140005db3
   140005923:	cmp    DWORD PTR [rsp+0x78],edx
   140005927:	je     0x140005ac5
   14000592d:	mov    QWORD PTR [rsp+0x68],rdx
   140005932:	lea    rax,[rsp+0x68]
   140005937:	mov    QWORD PTR [rsp+0x20],rax
   14000593c:	mov    r9d,0x2001f
   140005942:	xor    r8d,r8d
   140005945:	mov    rdx,rdi
   140005948:	mov    rbx,QWORD PTR [rbp-0x78]
   14000594c:	mov    rcx,rbx
   14000594f:	call   QWORD PTR [rip+0x36c3]        # 0x140009018
   140005955:	xor    ecx,ecx
   140005957:	test   eax,eax
   140005959:	jne    0x14000597e
   14000595b:	mov    eax,ecx
   14000595d:	test   rsi,rsi
   140005960:	je     0x14000596d
   140005962:	mov    rcx,rsi
   140005965:	call   QWORD PTR [rip+0x3695]        # 0x140009000
   14000596b:	xor    ecx,ecx
   14000596d:	mov    rsi,QWORD PTR [rsp+0x68]
   140005972:	mov    QWORD PTR [rbp-0x70],rsi
   140005976:	test   eax,eax
   140005978:	je     0x140005a2d
   14000597e:	mov    QWORD PTR [rsp+0x68],rcx
   140005983:	lea    rax,[rsp+0x68]
   140005988:	mov    QWORD PTR [rsp+0x20],rax
   14000598d:	mov    r9d,0x20019
   140005993:	xor    r8d,r8d
   140005996:	mov    rdx,rdi
   140005999:	mov    rcx,rbx
   14000599c:	call   QWORD PTR [rip+0x3676]        # 0x140009018
   1400059a2:	xor    ecx,ecx
   1400059a4:	test   eax,eax
   1400059a6:	jne    0x1400059c7
   1400059a8:	mov    eax,ecx
   1400059aa:	test   rsi,rsi
   1400059ad:	je     0x1400059ba
   1400059af:	mov    rcx,rsi
   1400059b2:	call   QWORD PTR [rip+0x3648]        # 0x140009000
   1400059b8:	xor    ecx,ecx
   1400059ba:	mov    rsi,QWORD PTR [rsp+0x68]
   1400059bf:	mov    QWORD PTR [rbp-0x70],rsi
   1400059c3:	test   eax,eax
   1400059c5:	je     0x140005a2d
   1400059c7:	mov    QWORD PTR [rsp+0x68],rcx
   1400059cc:	lea    rax,[rbp-0x3c]
   1400059d0:	mov    QWORD PTR [rsp+0x40],rax
   1400059d5:	lea    rax,[rsp+0x68]
   1400059da:	mov    QWORD PTR [rsp+0x38],rax
   1400059df:	mov    QWORD PTR [rsp+0x30],rcx
   1400059e4:	mov    DWORD PTR [rsp+0x28],0x2001f
   1400059ec:	mov    DWORD PTR [rsp+0x20],ecx
   1400059f0:	xor    r9d,r9d
   1400059f3:	xor    r8d,r8d
   1400059f6:	mov    rdx,rdi
   1400059f9:	mov    rcx,rbx
   1400059fc:	call   QWORD PTR [rip+0x3626]        # 0x140009028
   140005a02:	xor    edx,edx
   140005a04:	test   eax,eax
   140005a06:	jne    0x140005ddb
   140005a0c:	mov    eax,edx
   140005a0e:	test   rsi,rsi
   140005a11:	je     0x140005a1c
   140005a13:	mov    rcx,rsi
   140005a16:	call   QWORD PTR [rip+0x35e4]        # 0x140009000
   140005a1c:	mov    rsi,QWORD PTR [rsp+0x68]
   140005a21:	mov    QWORD PTR [rbp-0x70],rsi
   140005a25:	test   eax,eax
   140005a27:	jne    0x140005ddb
   140005a2d:	mov    rdx,rdi
   140005a30:	mov    rcx,QWORD PTR [rsp+0x70]
   140005a35:	call   0x1400054a8
   140005a3a:	mov    ebx,eax
   140005a3c:	xor    edx,edx
   140005a3e:	test   eax,eax
   140005a40:	js     0x140005de4
   140005a46:	cmp    WORD PTR [rdi],0x3d
   140005a4a:	jne    0x140005a70
   140005a4c:	mov    r9,rdi
   140005a4f:	xor    r8d,r8d
   140005a52:	lea    rdx,[rbp-0x70]
   140005a56:	mov    rcx,QWORD PTR [rsp+0x70]
   140005a5b:	call   0x140004c60
   140005a60:	mov    rsi,QWORD PTR [rbp-0x70]
   140005a64:	xor    edx,edx
   140005a66:	mov    ebx,eax
   140005a68:	test   eax,eax
   140005a6a:	js     0x140005de4
   140005a70:	cmp    WORD PTR [rdi],0x7b
   140005a74:	jne    0x1400056aa
   140005a7a:	or     rax,0xffffffffffffffff
   140005a7e:	inc    rax
   140005a81:	cmp    WORD PTR [rdi+rax*2],dx
   140005a85:	jne    0x140005a7e
   140005a87:	mov    ecx,0x1
   140005a8c:	cmp    rax,rcx
   140005a8f:	jne    0x1400056aa
   140005a95:	mov    DWORD PTR [rsp+0x20],edx
   140005a99:	mov    r9d,DWORD PTR [rsp+0x78]
   140005a9e:	mov    r8,rsi
   140005aa1:	mov    rdx,rdi
   140005aa4:	mov    rcx,QWORD PTR [rsp+0x70]
   140005aa9:	call   0x140005638
   140005aae:	mov    ebx,eax
   140005ab0:	test   eax,eax
   140005ab2:	js     0x140005de4
   140005ab8:	mov    rdx,rdi
   140005abb:	mov    rcx,QWORD PTR [rsp+0x70]
   140005ac0:	jmp    0x14000569b
   140005ac5:	mov    ebx,DWORD PTR [rbp+0x2240]
   140005acb:	test   ebx,ebx
   140005acd:	jne    0x140005b1e
   140005acf:	mov    QWORD PTR [rbp-0x80],rdx
   140005ad3:	lea    rax,[rbp-0x80]
   140005ad7:	mov    QWORD PTR [rsp+0x20],rax
   140005adc:	mov    r9d,0x20019
   140005ae2:	xor    r8d,r8d
   140005ae5:	mov    rdx,rdi
   140005ae8:	mov    rcx,QWORD PTR [rbp-0x78]
   140005aec:	call   QWORD PTR [rip+0x3526]        # 0x140009018
   140005af2:	mov    DWORD PTR [rsp+0x60],eax
   140005af6:	xor    edx,edx
   140005af8:	test   eax,eax
   140005afa:	jne    0x140005b29
   140005afc:	mov    eax,edx
   140005afe:	mov    DWORD PTR [rsp+0x60],edx
   140005b02:	test   rsi,rsi
   140005b05:	je     0x140005b14
   140005b07:	mov    rcx,rsi
   140005b0a:	call   QWORD PTR [rip+0x34f0]        # 0x140009000
   140005b10:	mov    DWORD PTR [rsp+0x60],eax
   140005b14:	mov    rsi,QWORD PTR [rbp-0x80]
   140005b18:	mov    QWORD PTR [rbp-0x70],rsi
   140005b1c:	jmp    0x140005b27
   140005b1e:	mov    eax,0x2
   140005b23:	mov    DWORD PTR [rsp+0x60],eax
   140005b27:	test   eax,eax
   140005b29:	mov    eax,0x1
   140005b2e:	cmovne ebx,eax
   140005b31:	mov    DWORD PTR [rbp+0x2240],ebx
   140005b37:	or     r9,0xffffffffffffffff
   140005b3b:	mov    r8,rdi
   140005b3e:	mov    edx,0x104
   140005b43:	lea    rcx,[rbp-0x30]
   140005b47:	call   QWORD PTR [rip+0x37f3]        # 0x140009340
   140005b4d:	test   eax,eax
   140005b4f:	je     0x140005b75
   140005b51:	cmp    eax,0xc
   140005b54:	je     0x140005dd0
   140005b5a:	cmp    eax,0x16
   140005b5d:	je     0x140005dc5
   140005b63:	cmp    eax,0x22
   140005b66:	je     0x140005dc5
   140005b6c:	cmp    eax,0x50
   140005b6f:	jne    0x140005dba
   140005b75:	mov    rdx,rdi
   140005b78:	mov    rcx,QWORD PTR [rsp+0x70]
   140005b7d:	call   0x1400054a8
   140005b82:	mov    ebx,eax
   140005b84:	test   eax,eax
   140005b86:	js     0x140005de4
   140005b8c:	mov    rdx,rdi
   140005b8f:	mov    rcx,QWORD PTR [rsp+0x70]
   140005b94:	call   0x1400051b0
   140005b99:	mov    ebx,eax
   140005b9b:	xor    edx,edx
   140005b9d:	test   eax,eax
   140005b9f:	js     0x140005de4
   140005ba5:	cmp    WORD PTR [rdi],0x7b
   140005ba9:	jne    0x140005c0c
   140005bab:	or     rax,0xffffffffffffffff
   140005baf:	inc    rax
   140005bb2:	cmp    WORD PTR [rdi+rax*2],dx
   140005bb6:	jne    0x140005baf
   140005bb8:	mov    ecx,0x1
   140005bbd:	cmp    rax,rcx
   140005bc0:	jne    0x140005c0c
   140005bc2:	mov    eax,DWORD PTR [rbp+0x2240]
   140005bc8:	mov    DWORD PTR [rsp+0x20],eax
   140005bcc:	xor    r9d,r9d
   140005bcf:	mov    r8,rsi
   140005bd2:	mov    rdx,rdi
   140005bd5:	mov    rcx,QWORD PTR [rsp+0x70]
   140005bda:	call   0x140005638
   140005bdf:	mov    ebx,eax
   140005be1:	xor    edx,edx
   140005be3:	test   eax,eax
   140005be5:	jns    0x140005bf3
   140005be7:	cmp    DWORD PTR [rbp+0x2240],edx
   140005bed:	je     0x140005de4
   140005bf3:	mov    rdx,rdi
   140005bf6:	mov    rcx,QWORD PTR [rsp+0x70]
   140005bfb:	call   0x1400054a8
   140005c00:	mov    ebx,eax
   140005c02:	xor    edx,edx
   140005c04:	test   eax,eax
   140005c06:	js     0x140005de4
   140005c0c:	mov    eax,DWORD PTR [rbp-0x40]
   140005c0f:	mov    DWORD PTR [rbp+0x2240],eax
   140005c15:	mov    ecx,DWORD PTR [rsp+0x60]
   140005c19:	cmp    ecx,0x2
   140005c1c:	je     0x1400056aa
   140005c22:	test   ecx,ecx
   140005c24:	je     0x140005c33
   140005c26:	test   eax,eax
   140005c28:	je     0x140005ddd
   140005c2e:	jmp    0x1400056aa
   140005c33:	test   eax,eax
   140005c35:	je     0x140005cea
   140005c3b:	mov    DWORD PTR [rsp+0x60],edx
   140005c3f:	mov    QWORD PTR [rsp+0x58],rdx
   140005c44:	mov    QWORD PTR [rsp+0x50],rdx
   140005c49:	mov    QWORD PTR [rsp+0x48],rdx
   140005c4e:	mov    QWORD PTR [rsp+0x40],rdx
   140005c53:	mov    QWORD PTR [rsp+0x38],rdx
   140005c58:	mov    QWORD PTR [rsp+0x30],rdx
   140005c5d:	mov    QWORD PTR [rsp+0x28],rdx
   140005c62:	lea    rax,[rsp+0x60]
   140005c67:	mov    QWORD PTR [rsp+0x20],rax
   140005c6c:	xor    r9d,r9d
   140005c6f:	xor    r8d,r8d
   140005c72:	xor    edx,edx
   140005c74:	mov    rcx,rsi
   140005c77:	call   QWORD PTR [rip+0x338b]        # 0x140009008
   140005c7d:	xor    edx,edx
   140005c7f:	test   eax,eax
   140005c81:	jne    0x140005cea
   140005c83:	mov    eax,edx
   140005c85:	cmp    DWORD PTR [rsp+0x60],edx
   140005c89:	seta   al
   140005c8c:	test   eax,eax
   140005c8e:	je     0x140005cea
   140005c90:	lea    rax,[rip+0x3ab9]        # 0x140009750
   140005c97:	mov    QWORD PTR [rbp-0x80],rax
   140005c9b:	mov    rdx,QWORD PTR [rax]
   140005c9e:	lea    rcx,[rbp-0x30]
   140005ca2:	call   QWORD PTR [rip+0x34a8]        # 0x140009150
   140005ca8:	xor    edx,edx
   140005caa:	test   eax,eax
   140005cac:	je     0x1400056aa
   140005cb2:	mov    rax,QWORD PTR [rbp-0x80]
   140005cb6:	add    rax,0x8
   140005cba:	mov    QWORD PTR [rbp-0x80],rax
   140005cbe:	lea    rcx,[rip+0x3aeb]        # 0x1400097b0
   140005cc5:	cmp    rax,rcx
   140005cc8:	jl     0x140005c9b
   140005cca:	cmp    DWORD PTR [rsp+0x68],edx
   140005cce:	je     0x1400056aa
   140005cd4:	lea    rdx,[rbp-0x30]
   140005cd8:	lea    rcx,[rbp-0x70]
   140005cdc:	call   0x14000525c
   140005ce1:	mov    rsi,QWORD PTR [rbp-0x70]
   140005ce5:	jmp    0x1400056aa
   140005cea:	mov    DWORD PTR [rsp+0x60],edx
   140005cee:	mov    QWORD PTR [rsp+0x58],rdx
   140005cf3:	mov    QWORD PTR [rsp+0x50],rdx
   140005cf8:	mov    QWORD PTR [rsp+0x48],rdx
   140005cfd:	mov    QWORD PTR [rsp+0x40],rdx
   140005d02:	mov    QWORD PTR [rsp+0x38],rdx
   140005d07:	mov    QWORD PTR [rsp+0x30],rdx
   140005d0c:	mov    QWORD PTR [rsp+0x28],rdx
   140005d11:	lea    rax,[rsp+0x60]
   140005d16:	mov    QWORD PTR [rsp+0x20],rax
   140005d1b:	xor    r9d,r9d
   140005d1e:	xor    r8d,r8d
   140005d21:	xor    edx,edx
   140005d23:	mov    rcx,rsi
   140005d26:	call   QWORD PTR [rip+0x32dc]        # 0x140009008
   140005d2c:	xor    edx,edx
   140005d2e:	test   eax,eax
   140005d30:	je     0x140005d38
   140005d32:	mov    DWORD PTR [rsp+0x60],edx
   140005d36:	jmp    0x140005d45
   140005d38:	mov    eax,edx
   140005d3a:	cmp    DWORD PTR [rsp+0x60],edx
   140005d3e:	seta   al
   140005d41:	mov    DWORD PTR [rsp+0x60],eax
   140005d45:	test   rsi,rsi
   140005d48:	je     0x140005d5f
   140005d4a:	mov    rcx,rsi
   140005d4d:	call   QWORD PTR [rip+0x32ad]        # 0x140009000
   140005d53:	xor    edx,edx
   140005d55:	mov    esi,edx
   140005d57:	mov    QWORD PTR [rbp-0x70],rdx
   140005d5b:	test   eax,eax
   140005d5d:	jne    0x140005ddb
   140005d5f:	cmp    DWORD PTR [rsp+0x68],edx
   140005d63:	je     0x1400056aa
   140005d69:	cmp    DWORD PTR [rsp+0x60],edx
   140005d6d:	jne    0x1400056aa
   140005d73:	mov    QWORD PTR [rbp-0x50],rdx
   140005d77:	mov    QWORD PTR [rbp-0x48],rdx
   140005d7b:	mov    rax,QWORD PTR [rbp-0x78]
   140005d7f:	mov    QWORD PTR [rbp-0x58],rax
   140005d83:	lea    rdx,[rbp-0x30]
   140005d87:	lea    rcx,[rbp-0x58]
   140005d8b:	call   0x1400053c4
   140005d90:	test   eax,eax
   140005d92:	jne    0x140005ddb
   140005d94:	jmp    0x1400056aa
   140005d99:	mov    ecx,eax
   140005d9b:	call   0x140005494
   140005da0:	mov    ebx,eax
   140005da2:	mov    rcx,QWORD PTR [rbp-0x80]
   140005da6:	test   rcx,rcx
   140005da9:	je     0x140005de4
   140005dab:	call   QWORD PTR [rip+0x324f]        # 0x140009000
   140005db1:	jmp    0x140005de4
   140005db3:	mov    ebx,0x80020009
   140005db8:	jmp    0x140005de4
   140005dba:	mov    ecx,0x80004005
   140005dbf:	call   0x140005180
   140005dc4:	int3   
   140005dc5:	mov    ecx,0x80070057
   140005dca:	call   0x140005180
   140005dcf:	int3   
   140005dd0:	mov    ecx,0x8007000e
   140005dd5:	call   0x140005180
   140005dda:	int3   
   140005ddb:	mov    ecx,eax
   140005ddd:	call   0x140005494
   140005de2:	mov    ebx,eax
   140005de4:	test   rsi,rsi
   140005de7:	je     0x140005df2
   140005de9:	mov    rcx,rsi
   140005dec:	call   QWORD PTR [rip+0x320e]        # 0x140009000
   140005df2:	mov    eax,ebx
   140005df4:	mov    rcx,QWORD PTR [rbp+0x21e0]
   140005dfb:	xor    rcx,rsp
   140005dfe:	call   0x140007b00
   140005e03:	add    rsp,0x22f8
   140005e0a:	pop    rdi
   140005e0b:	pop    rsi
   140005e0c:	pop    rbx
   140005e0d:	pop    rbp
   140005e0e:	ret    
   140005e0f:	int3   
   140005e10:	int3   
   140005e11:	int3   
   140005e12:	int3   
   140005e13:	int3   
   140005e14:	int3   
   140005e15:	int3   
   140005e16:	int3   
   140005e17:	int3   
   140005e18:	mov    QWORD PTR [rsp+0x20],rbx
   140005e1d:	push   rbp
   140005e1e:	push   rsi
   140005e1f:	push   rdi
   140005e20:	push   r12
   140005e22:	push   r13
   140005e24:	push   r14
   140005e26:	push   r15
   140005e28:	mov    eax,0x2050
   140005e2d:	call   0x140008680
   140005e32:	sub    rsp,rax
   140005e35:	mov    rax,QWORD PTR [rip+0x71e4]        # 0x14000d020
   140005e3c:	xor    rax,rsp
   140005e3f:	mov    QWORD PTR [rsp+0x2040],rax
   140005e47:	xor    r12d,r12d
   140005e4a:	mov    r15d,r8d
   140005e4d:	mov    QWORD PTR [rsp+0x30],r12
   140005e52:	mov    rdi,rcx
   140005e55:	mov    ebp,r12d
   140005e58:	test   rdx,rdx
   140005e5b:	je     0x140005e70
   140005e5d:	lea    r8,[rsp+0x30]
   140005e62:	call   0x14000487c
   140005e67:	mov    rbp,QWORD PTR [rsp+0x30]
   140005e6c:	mov    ebx,eax
   140005e6e:	jmp    0x140005e75
   140005e70:	mov    ebx,0x80004003
   140005e75:	test   ebx,ebx
   140005e77:	js     0x140005fa3
   140005e7d:	mov    QWORD PTR [rdi],rbp
   140005e80:	cmp    r12w,WORD PTR [rbp+0x0]
   140005e85:	je     0x140005f9a
   140005e8b:	lea    r13,[rip+0x3ece]        # 0x140009d60
   140005e92:	lea    rdx,[rsp+0x40]
   140005e97:	mov    rcx,rdi
   140005e9a:	call   0x1400054a8
   140005e9f:	mov    ebx,eax
   140005ea1:	test   eax,eax
   140005ea3:	js     0x140005f9a
   140005ea9:	mov    esi,r12d
   140005eac:	mov    rbx,r12
   140005eaf:	mov    r14,r13
   140005eb2:	mov    rdx,QWORD PTR [r14]
   140005eb5:	lea    rcx,[rsp+0x40]
   140005eba:	call   QWORD PTR [rip+0x3290]        # 0x140009150
   140005ec0:	test   eax,eax
   140005ec2:	je     0x140005edb
   140005ec4:	inc    esi
   140005ec6:	inc    rbx
   140005ec9:	movsxd rax,esi
   140005ecc:	add    r14,0x10
   140005ed0:	cmp    rax,0xe
   140005ed4:	jb     0x140005eb2
   140005ed6:	mov    rsi,r12
   140005ed9:	jmp    0x140005ee3
   140005edb:	add    rbx,rbx
   140005ede:	mov    rsi,QWORD PTR [r13+rbx*8+0x8]
   140005ee3:	test   rsi,rsi
   140005ee6:	je     0x140005f95
   140005eec:	lea    rdx,[rsp+0x40]
   140005ef1:	mov    rcx,rdi
   140005ef4:	call   0x1400054a8
   140005ef9:	mov    ebx,eax
   140005efb:	test   eax,eax
   140005efd:	js     0x140005f9a
   140005f03:	mov    eax,0x7b
   140005f08:	cmp    ax,WORD PTR [rsp+0x40]
   140005f0d:	jne    0x140005f95
   140005f13:	mov    DWORD PTR [rsp+0x20],r12d
   140005f18:	mov    r8,rsi
   140005f1b:	lea    rdx,[rsp+0x40]
   140005f20:	mov    rcx,rdi
   140005f23:	test   r15d,r15d
   140005f26:	je     0x140005f56
   140005f28:	mov    r14,QWORD PTR [rdi]
   140005f2b:	mov    r9d,r15d
   140005f2e:	call   0x140005638
   140005f33:	mov    ebx,eax
   140005f35:	test   eax,eax
   140005f37:	jns    0x140005f64
   140005f39:	xor    r9d,r9d
   140005f3c:	mov    QWORD PTR [rdi],r14
   140005f3f:	mov    r8,rsi
   140005f42:	mov    DWORD PTR [rsp+0x20],r12d
   140005f47:	lea    rdx,[rsp+0x40]
   140005f4c:	mov    rcx,rdi
   140005f4f:	call   0x140005638
   140005f54:	jmp    0x140005f9a
   140005f56:	xor    r9d,r9d
   140005f59:	call   0x140005638
   140005f5e:	mov    ebx,eax
   140005f60:	test   eax,eax
   140005f62:	js     0x140005f9a
   140005f64:	mov    rcx,QWORD PTR [rdi]
   140005f67:	movzx  eax,WORD PTR [rcx]
   140005f6a:	cmp    eax,0x20
   140005f6d:	ja     0x140005f8a
   140005f6f:	movabs rdx,0x100002600
   140005f79:	bt     rdx,rax
   140005f7d:	jae    0x140005f8a
   140005f7f:	call   QWORD PTR [rip+0x32b3]        # 0x140009238
   140005f85:	mov    QWORD PTR [rdi],rax
   140005f88:	jmp    0x140005f64
   140005f8a:	cmp    r12w,WORD PTR [rcx]
   140005f8e:	je     0x140005f9a
   140005f90:	jmp    0x140005e92
   140005f95:	mov    ebx,0x80020009
   140005f9a:	mov    rcx,rbp
   140005f9d:	call   QWORD PTR [rip+0x342d]        # 0x1400093d0
   140005fa3:	mov    eax,ebx
   140005fa5:	mov    rcx,QWORD PTR [rsp+0x2040]
   140005fad:	xor    rcx,rsp
   140005fb0:	call   0x140007b00
   140005fb5:	mov    rbx,QWORD PTR [rsp+0x20a8]
   140005fbd:	add    rsp,0x2050
   140005fc4:	pop    r15
   140005fc6:	pop    r14
   140005fc8:	pop    r13
   140005fca:	pop    r12
   140005fcc:	pop    rdi
   140005fcd:	pop    rsi
   140005fce:	pop    rbp
   140005fcf:	ret    
   140005fd0:	int3   
   140005fd1:	int3   
   140005fd2:	int3   
   140005fd3:	int3   
   140005fd4:	int3   
   140005fd5:	int3   
   140005fd6:	int3   
   140005fd7:	int3   
   140005fd8:	mov    rax,rsp
   140005fdb:	push   rsi
   140005fdc:	push   rdi
   140005fdd:	push   r14
   140005fdf:	sub    rsp,0x490
   140005fe6:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140005fef:	mov    QWORD PTR [rax+0x8],rbx
   140005ff3:	mov    rax,QWORD PTR [rip+0x7026]        # 0x14000d020
   140005ffa:	xor    rax,rsp
   140005ffd:	mov    QWORD PTR [rsp+0x480],rax
   140006005:	mov    r14,r9
   140006008:	mov    rdi,r8
   14000600b:	mov    rax,rdx
   14000600e:	xor    ebx,ebx
   140006010:	mov    QWORD PTR [rsp+0x60],rbx
   140006015:	mov    QWORD PTR [rsp+0x50],rcx
   14000601a:	mov    QWORD PTR [rsp+0x48],rbx
   14000601f:	mov    QWORD PTR [rsp+0x70],rbx
   140006024:	xor    edx,edx
   140006026:	lea    r8d,[rbx+0x2]
   14000602a:	mov    rcx,rax
   14000602d:	call   QWORD PTR [rip+0x312d]        # 0x140009160
   140006033:	mov    rsi,rax
   140006036:	mov    QWORD PTR [rsp+0x38],rax
   14000603b:	test   rax,rax
   14000603e:	jne    0x14000604c
   140006040:	call   0x140004708
   140006045:	mov    ebx,eax
   140006047:	jmp    0x14000617c
   14000604c:	xor    r9d,r9d
   14000604f:	mov    r8,rdi
   140006052:	mov    rdx,r14
   140006055:	mov    rcx,rax
   140006058:	call   QWORD PTR [rip+0x30ca]        # 0x140009128
   14000605e:	mov    rdi,rax
   140006061:	test   rax,rax
   140006064:	jne    0x140006070
   140006066:	call   0x140004708
   14000606b:	jmp    0x140006170
   140006070:	mov    rdx,rax
   140006073:	mov    rcx,rsi
   140006076:	call   QWORD PTR [rip+0x30b4]        # 0x140009130
   14000607c:	mov    r14,rax
   14000607f:	mov    QWORD PTR [rsp+0x40],rax
   140006084:	test   rax,rax
   140006087:	je     0x140006066
   140006089:	mov    rdx,rdi
   14000608c:	mov    rcx,rsi
   14000608f:	call   QWORD PTR [rip+0x30a3]        # 0x140009138
   140006095:	mov    edi,eax
   140006097:	mov    DWORD PTR [rsp+0x30],eax
   14000609b:	inc    eax
   14000609d:	cmp    eax,edi
   14000609f:	jae    0x1400060c2
   1400060a1:	lea    rax,[rsp+0x78]
   1400060a6:	cmp    QWORD PTR [rsp+0x70],rax
   1400060ab:	je     0x1400060b8
   1400060ad:	lea    rcx,[rsp+0x70]
   1400060b2:	call   0x1400046a4
   1400060b7:	nop
   1400060b8:	mov    eax,0x8007000e
   1400060bd:	jmp    0x140006195
   1400060c2:	mov    ecx,eax
   1400060c4:	test   eax,eax
   1400060c6:	je     0x1400060ff
   1400060c8:	xor    edx,edx
   1400060ca:	or     rax,0xffffffffffffffff
   1400060ce:	div    rcx
   1400060d1:	cmp    rax,0x2
   1400060d5:	jb     0x1400060f5
   1400060d7:	lea    rdx,[rcx+rcx*1]
   1400060db:	cmp    rdx,0x400
   1400060e2:	jbe    0x1400060ff
   1400060e4:	lea    rcx,[rsp+0x70]
   1400060e9:	call   0x1400046d4
   1400060ee:	mov    rax,QWORD PTR [rsp+0x70]
   1400060f3:	jmp    0x140006109
   1400060f5:	mov    ecx,0x80070057
   1400060fa:	call   0x140005180
   1400060ff:	lea    rax,[rsp+0x78]
   140006104:	mov    QWORD PTR [rsp+0x70],rax
   140006109:	jmp    0x140006120
   14000610b:	xor    ebx,ebx
   14000610d:	mov    rax,QWORD PTR [rsp+0x70]
   140006112:	mov    rsi,QWORD PTR [rsp+0x38]
   140006117:	mov    r14,QWORD PTR [rsp+0x40]
   14000611c:	mov    edi,DWORD PTR [rsp+0x30]
   140006120:	test   rax,rax
   140006123:	jne    0x14000612c
   140006125:	mov    ebx,0x8007000e
   14000612a:	jmp    0x140006172
   14000612c:	mov    DWORD PTR [rsp+0x28],edi
   140006130:	mov    QWORD PTR [rsp+0x20],rax
   140006135:	mov    r9d,edi
   140006138:	mov    r8,r14
   14000613b:	xor    edx,edx
   14000613d:	lea    ecx,[rdx+0x3]
   140006140:	call   QWORD PTR [rip+0x2ffa]        # 0x140009140
   140006146:	test   eax,eax
   140006148:	je     0x140006066
   14000614e:	mov    ecx,eax
   140006150:	mov    rax,QWORD PTR [rsp+0x70]
   140006155:	mov    WORD PTR [rax+rcx*2],bx
   140006159:	mov    r8d,DWORD PTR [rsp+0x4d0]
   140006161:	mov    rdx,QWORD PTR [rsp+0x70]
   140006166:	lea    rcx,[rsp+0x48]
   14000616b:	call   0x140005e18
   140006170:	mov    ebx,eax
   140006172:	mov    rcx,rsi
   140006175:	call   QWORD PTR [rip+0x2ffd]        # 0x140009178
   14000617b:	nop
   14000617c:	lea    rax,[rsp+0x78]
   140006181:	cmp    QWORD PTR [rsp+0x70],rax
   140006186:	je     0x140006193
   140006188:	lea    rcx,[rsp+0x70]
   14000618d:	call   0x1400046a4
   140006192:	nop
   140006193:	mov    eax,ebx
   140006195:	mov    rcx,QWORD PTR [rsp+0x480]
   14000619d:	xor    rcx,rsp
   1400061a0:	call   0x140007b00
   1400061a5:	mov    rbx,QWORD PTR [rsp+0x4b0]
   1400061ad:	add    rsp,0x490
   1400061b4:	pop    r14
   1400061b6:	pop    rdi
   1400061b7:	pop    rsi
   1400061b8:	ret    
   1400061b9:	int3   
   1400061ba:	int3   
   1400061bb:	int3   
   1400061bc:	int3   
   1400061bd:	int3   
   1400061be:	int3   
   1400061bf:	int3   
   1400061c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400061c5:	push   rbp
   1400061c6:	push   rsi
   1400061c7:	push   rdi
   1400061c8:	push   r14
   1400061ca:	push   r15
   1400061cc:	lea    rbp,[rsp-0x9b0]
   1400061d4:	sub    rsp,0xab0
   1400061db:	mov    rax,QWORD PTR [rip+0x6e3e]        # 0x14000d020
   1400061e2:	xor    rax,rsp
   1400061e5:	mov    QWORD PTR [rbp+0x9a0],rax
   1400061ec:	xor    r15d,r15d
   1400061ef:	mov    esi,edx
   1400061f1:	mov    DWORD PTR [rsp+0x48],r15d
   1400061f6:	lea    rax,[rip+0x37b3]        # 0x1400099b0
   1400061fd:	mov    QWORD PTR [rsp+0x30],rax
   140006202:	xorps  xmm0,xmm0
   140006205:	mov    rbx,r9
   140006208:	mov    r14d,r8d
   14000620b:	mov    rdi,rcx
   14000620e:	movdqu XMMWORD PTR [rsp+0x38],xmm0
   140006214:	test   r9,r9
   140006217:	je     0x140006245
   140006219:	mov    rax,QWORD PTR [r9]
   14000621c:	jmp    0x140006240
   14000621e:	mov    r8,QWORD PTR [rbx+0x8]
   140006222:	test   rax,rax
   140006225:	je     0x140006239
   140006227:	test   r8,r8
   14000622a:	je     0x140006239
   14000622c:	mov    rdx,rax
   14000622f:	lea    rcx,[rsp+0x38]
   140006234:	call   0x1400043c4
   140006239:	add    rbx,0x10
   14000623d:	mov    rax,QWORD PTR [rbx]
   140006240:	test   rax,rax
   140006243:	jne    0x14000621e
   140006245:	mov    rax,QWORD PTR [rdi]
   140006248:	mov    rbx,QWORD PTR [rax+0x28]
   14000624c:	mov    rcx,rbx
   14000624f:	call   QWORD PTR [rip+0x318b]        # 0x1400093e0
   140006255:	lea    rdx,[rsp+0x30]
   14000625a:	mov    rcx,rdi
   14000625d:	call   rbx
   14000625f:	mov    ebx,eax
   140006261:	test   eax,eax
   140006263:	js     0x1400063ee
   140006269:	mov    rbx,QWORD PTR [rip+0x7648]        # 0x14000d8b8
   140006270:	lea    rdx,[rsp+0x60]
   140006275:	mov    edi,0x104
   14000627a:	mov    rcx,rbx
   14000627d:	mov    r8d,edi
   140006280:	call   QWORD PTR [rip+0x2e3a]        # 0x1400090c0
   140006286:	test   eax,eax
   140006288:	jne    0x140006296
   14000628a:	call   0x140004708
   14000628f:	mov    ebx,eax
   140006291:	jmp    0x1400063ee
   140006296:	cmp    eax,edi
   140006298:	jne    0x1400062a4
   14000629a:	mov    ebx,0x8007007a
   14000629f:	jmp    0x1400063ee
   1400062a4:	lea    rdx,[rsp+0x60]
   1400062a9:	mov    ecx,r15d
   1400062ac:	mov    r9d,0x27
   1400062b2:	movzx  r8d,WORD PTR [rdx]
   1400062b6:	test   r8w,r8w
   1400062ba:	je     0x1400062ee
   1400062bc:	mov    eax,ecx
   1400062be:	mov    WORD PTR [rbp+rax*2+0x170],r8w
   1400062c7:	cmp    r8w,r9w
   1400062cb:	jne    0x1400062e0
   1400062cd:	cmp    ecx,0x206
   1400062d3:	jae    0x1400062e0
   1400062d5:	inc    ecx
   1400062d7:	mov    WORD PTR [rbp+rcx*2+0x170],r9w
   1400062e0:	add    rdx,0x2
   1400062e4:	inc    ecx
   1400062e6:	cmp    ecx,0x207
   1400062ec:	jb     0x1400062b2
   1400062ee:	mov    eax,ecx
   1400062f0:	mov    WORD PTR [rbp+rax*2+0x170],r15w
   1400062f9:	test   rbx,rbx
   1400062fc:	je     0x140006317
   1400062fe:	xor    ecx,ecx
   140006300:	call   QWORD PTR [rip+0x2e52]        # 0x140009158
   140006306:	cmp    rbx,rax
   140006309:	je     0x140006317
   14000630b:	lea    r8,[rbp+0x170]
   140006312:	jmp    0x1400063aa
   140006317:	mov    edi,0x22
   14000631c:	lea    rcx,[rbp+0x170]
   140006323:	or     rbx,0xffffffffffffffff
   140006327:	mov    WORD PTR [rbp+0x580],di
   14000632e:	mov    rax,rbx
   140006331:	inc    rax
   140006334:	cmp    WORD PTR [rcx+rax*2],r15w
   140006339:	jne    0x140006331
   14000633b:	inc    eax
   14000633d:	lea    r8,[rbp+0x170]
   140006344:	movsxd r9,eax
   140006347:	lea    rcx,[rbp+0x582]
   14000634e:	add    r9,r9
   140006351:	mov    edx,0x416
   140006356:	call   QWORD PTR [rip+0x2fcc]        # 0x140009328
   14000635c:	test   eax,eax
   14000635e:	je     0x14000636a
   140006360:	mov    ebx,0x80004005
   140006365:	jmp    0x1400063ee
   14000636a:	lea    rax,[rbp+0x580]
   140006371:	inc    rbx
   140006374:	cmp    WORD PTR [rax+rbx*2],r15w
   140006379:	jne    0x140006371
   14000637b:	movsxd rax,ebx
   14000637e:	mov    WORD PTR [rbp+rax*2+0x580],di
   140006386:	lea    rax,[rax*2+0x2]
   14000638e:	cmp    rax,0x418
   140006394:	jae    0x140006453
   14000639a:	mov    WORD PTR [rbp+rax*1+0x580],r15w
   1400063a3:	lea    r8,[rbp+0x580]
   1400063aa:	lea    rdx,[rip+0x37f7]        # 0x140009ba8
   1400063b1:	lea    rcx,[rsp+0x38]
   1400063b6:	call   0x1400043c4
   1400063bb:	neg    eax
   1400063bd:	mov    edi,0x8007000e
   1400063c2:	sbb    ebx,ebx
   1400063c4:	not    ebx
   1400063c6:	and    ebx,edi
   1400063c8:	test   ebx,ebx
   1400063ca:	js     0x1400063ee
   1400063cc:	lea    r8,[rbp+0x170]
   1400063d3:	lea    rdx,[rip+0x37de]        # 0x140009bb8
   1400063da:	lea    rcx,[rsp+0x38]
   1400063df:	call   0x1400043c4
   1400063e4:	neg    eax
   1400063e6:	sbb    ebx,ebx
   1400063e8:	not    ebx
   1400063ea:	and    ebx,edi
   1400063ec:	jns    0x140006420
   1400063ee:	lea    rcx,[rsp+0x30]
   1400063f3:	call   0x140004330
   1400063f8:	mov    eax,ebx
   1400063fa:	mov    rcx,QWORD PTR [rbp+0x9a0]
   140006401:	xor    rcx,rsp
   140006404:	call   0x140007b00
   140006409:	mov    rbx,QWORD PTR [rsp+0xaf0]
   140006411:	add    rsp,0xab0
   140006418:	pop    r15
   14000641a:	pop    r14
   14000641c:	pop    rdi
   14000641d:	pop    rsi
   14000641e:	pop    rbp
   14000641f:	ret    
   140006420:	movzx  r8d,si
   140006424:	lea    r9,[rip+0x37a5]        # 0x140009bd0
   14000642b:	lea    rdx,[rsp+0x60]
   140006430:	lea    rcx,[rsp+0x30]
   140006435:	test   r14d,r14d
   140006438:	je     0x140006444
   14000643a:	mov    DWORD PTR [rsp+0x20],0x1
   140006442:	jmp    0x140006449
   140006444:	mov    DWORD PTR [rsp+0x20],r15d
   140006449:	call   0x140005fd8
   14000644e:	jmp    0x14000628f
   140006453:	call   0x140007e48
   140006458:	int3   
   140006459:	int3   
   14000645a:	int3   
   14000645b:	int3   
   14000645c:	int3   
   14000645d:	int3   
   14000645e:	int3   
   14000645f:	int3   
   140006460:	jmp    0x1400061c0
   140006465:	int3   
   140006466:	int3   
   140006467:	int3   
   140006468:	int3   
   140006469:	int3   
   14000646a:	int3   
   14000646b:	int3   
   14000646c:	mov    DWORD PTR [rsp+0x10],edx
   140006470:	sub    rsp,0x28
   140006474:	mov    DWORD PTR [rip+0x7422],0x1        # 0x14000d8a0
   14000647e:	mov    edx,0xfa0
   140006483:	lea    rcx,[rip+0x73ee]        # 0x14000d878
   14000648a:	call   QWORD PTR [rip+0x2c38]        # 0x1400090c8
   140006490:	mov    DWORD PTR [rip+0x740a],eax        # 0x14000d8a0
   140006496:	jmp    0x1400064a8
   140006498:	mov    ecx,eax
   14000649a:	call   QWORD PTR [rip+0x2c30]        # 0x1400090d0
   1400064a0:	xor    eax,eax
   1400064a2:	mov    DWORD PTR [rip+0x73f8],eax        # 0x14000d8a0
   1400064a8:	test   eax,eax
   1400064aa:	jne    0x1400064c8
   1400064ac:	call   QWORD PTR [rip+0x2cbe]        # 0x140009170
   1400064b2:	mov    DWORD PTR [rsp+0x38],eax
   1400064b6:	lea    rdx,[rip+0x53d3]        # 0x14000b890
   1400064bd:	lea    rcx,[rsp+0x38]
   1400064c2:	call   0x1400080e8
   1400064c7:	int3   
   1400064c8:	lea    rax,[rip+0x73a9]        # 0x14000d878
   1400064cf:	add    rsp,0x28
   1400064d3:	ret    
   1400064d4:	int3   
   1400064d5:	int3   
   1400064d6:	int3   
   1400064d7:	int3   
   1400064d8:	int3   
   1400064d9:	int3   
   1400064da:	int3   
   1400064db:	int3   
   1400064dc:	int3   
   1400064dd:	int3   
   1400064de:	int3   
   1400064df:	int3   
   1400064e0:	mov    rax,rsp
   1400064e3:	mov    QWORD PTR [rax+0x8],rbx
   1400064e7:	mov    QWORD PTR [rax+0x10],rbp
   1400064eb:	mov    QWORD PTR [rax+0x18],rsi
   1400064ef:	mov    QWORD PTR [rax+0x20],rdi
   1400064f3:	push   r14
   1400064f5:	sub    rsp,0x30
   1400064f9:	xor    edi,edi
   1400064fb:	lea    rcx,[rip+0x7376]        # 0x14000d878
   140006502:	and    QWORD PTR [rax-0x18],rdi
   140006506:	mov    esi,r9d
   140006509:	mov    r14d,r8d
   14000650c:	mov    ebp,edx
   14000650e:	call   QWORD PTR [rip+0x2ba4]        # 0x1400090b8
   140006514:	call   QWORD PTR [rip+0x2bbe]        # 0x1400090d8
   14000651a:	lea    r8,[rsp+0x20]
   14000651f:	mov    edx,0xf01ff
   140006524:	mov    rcx,rax
   140006527:	call   QWORD PTR [rip+0x2b0b]        # 0x140009038
   14000652d:	test   eax,eax
   14000652f:	jne    0x140006552
   140006531:	call   QWORD PTR [rip+0x2c39]        # 0x140009170
   140006537:	movzx  ebx,ax
   14000653a:	or     ebx,0x80070000
   140006540:	test   eax,eax
   140006542:	cmovle ebx,eax
   140006545:	test   ebx,ebx
   140006547:	jns    0x140006552
   140006549:	lea    rdx,[rip+0x39e8]        # 0x140009f38
   140006550:	jmp    0x140006586
   140006552:	test   ebp,ebp
   140006554:	jne    0x140006565
   140006556:	mov    r9d,esi
   140006559:	mov    edx,r14d
   14000655c:	call   0x140007148
   140006561:	mov    edi,eax
   140006563:	jmp    0x14000656d
   140006565:	mov    r8d,esi
   140006568:	call   0x140007388
   14000656d:	movzx  ebx,di
   140006570:	or     ebx,0x80070000
   140006576:	test   edi,edi
   140006578:	cmovle ebx,edi
   14000657b:	test   ebx,ebx
   14000657d:	jns    0x14000659a
   14000657f:	lea    rdx,[rip+0x39da]        # 0x140009f60
   140006586:	lea    r9,[rip+0x397b]        # 0x140009f08
   14000658d:	mov    r8d,ebx
   140006590:	mov    ecx,0x8
   140006595:	call   0x140006658
   14000659a:	mov    rcx,QWORD PTR [rsp+0x20]
   14000659f:	test   rcx,rcx
   1400065a2:	je     0x1400065aa
   1400065a4:	call   QWORD PTR [rip+0x2ac6]        # 0x140009070
   1400065aa:	lea    rcx,[rip+0x72c7]        # 0x14000d878
   1400065b1:	call   QWORD PTR [rip+0x2bc9]        # 0x140009180
   1400065b7:	mov    rbp,QWORD PTR [rsp+0x48]
   1400065bc:	mov    eax,ebx
   1400065be:	mov    rbx,QWORD PTR [rsp+0x40]
   1400065c3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400065c8:	mov    rdi,QWORD PTR [rsp+0x58]
   1400065cd:	add    rsp,0x30
   1400065d1:	pop    r14
   1400065d3:	ret    
   1400065d4:	int3   
   1400065d5:	int3   
   1400065d6:	int3   
   1400065d7:	int3   
   1400065d8:	int3   
   1400065d9:	int3   
   1400065da:	int3   
   1400065db:	int3   
   1400065dc:	mov    QWORD PTR [rsp+0x18],r8
   1400065e1:	mov    QWORD PTR [rsp+0x20],r9
   1400065e6:	push   rbx
   1400065e7:	push   rsi
   1400065e8:	push   rdi
   1400065e9:	sub    rsp,0x20
   1400065ed:	xor    edi,edi
   1400065ef:	lea    rax,[rdx-0x1]
   1400065f3:	cmp    rax,0x7ffffffe
   1400065f9:	mov    rsi,rcx
   1400065fc:	mov    ecx,0x80070057
   140006601:	cmova  edi,ecx
   140006604:	test   edi,edi
   140006606:	js     0x14000663d
   140006608:	lea    rbx,[rdx-0x1]
   14000660c:	mov    rcx,rsi
   14000660f:	mov    rdx,rbx
   140006612:	lea    r9,[rsp+0x58]
   140006617:	xor    edi,edi
   140006619:	call   QWORD PTR [rip+0x2ce9]        # 0x140009308
   14000661f:	test   eax,eax
   140006621:	js     0x140006632
   140006623:	cdqe   
   140006625:	cmp    rax,rbx
   140006628:	ja     0x140006632
   14000662a:	jne    0x140006645
   14000662c:	mov    BYTE PTR [rbx+rsi*1],dil
   140006630:	jmp    0x140006645
   140006632:	mov    BYTE PTR [rbx+rsi*1],dil
   140006636:	mov    edi,0x8007007a
   14000663b:	jmp    0x140006645
   14000663d:	test   rdx,rdx
   140006640:	je     0x140006645
   140006642:	mov    BYTE PTR [rsi],0x0
   140006645:	mov    eax,edi
   140006647:	add    rsp,0x20
   14000664b:	pop    rdi
   14000664c:	pop    rsi
   14000664d:	pop    rbx
   14000664e:	ret    
   14000664f:	int3   
   140006650:	int3   
   140006651:	int3   
   140006652:	int3   
   140006653:	int3   
   140006654:	int3   
   140006655:	int3   
   140006656:	int3   
   140006657:	int3   
   140006658:	mov    QWORD PTR [rsp+0x10],rdx
   14000665d:	mov    QWORD PTR [rsp+0x18],r8
   140006662:	mov    QWORD PTR [rsp+0x20],r9
   140006667:	push   rbx
   140006668:	push   rsi
   140006669:	sub    rsp,0x248
   140006670:	mov    rax,QWORD PTR [rip+0x69a9]        # 0x14000d020
   140006677:	xor    rax,rsp
   14000667a:	mov    QWORD PTR [rsp+0x230],rax
   140006682:	cmp    DWORD PTR [rip+0x7177],0x0        # 0x14000d800
   140006689:	jne    0x140006697
   14000668b:	cmp    ecx,0x80
   140006691:	jne    0x140006782
   140006697:	sub    ecx,0x1
   14000669a:	je     0x14000670d
   14000669c:	sub    ecx,0x1
   14000669f:	je     0x140006704
   1400066a1:	sub    ecx,0x2
   1400066a4:	je     0x1400066fb
   1400066a6:	sub    ecx,0x4
   1400066a9:	je     0x1400066f2
   1400066ab:	sub    ecx,0x38
   1400066ae:	je     0x1400066e9
   1400066b0:	sub    ecx,0x40
   1400066b3:	je     0x1400066e0
   1400066b5:	sub    ecx,0xf80
   1400066bb:	je     0x1400066d7
   1400066bd:	cmp    ecx,0x1000
   1400066c3:	je     0x1400066ce
   1400066c5:	lea    rbx,[rip+0x3910]        # 0x140009fdc
   1400066cc:	jmp    0x140006714
   1400066ce:	lea    rbx,[rip+0x38cb]        # 0x140009fa0
   1400066d5:	jmp    0x140006714
   1400066d7:	lea    rbx,[rip+0x38ba]        # 0x140009f98
   1400066de:	jmp    0x140006714
   1400066e0:	lea    rbx,[rip+0x38e1]        # 0x140009fc8
   1400066e7:	jmp    0x140006714
   1400066e9:	lea    rbx,[rip+0x38e4]        # 0x140009fd4
   1400066f0:	jmp    0x140006714
   1400066f2:	lea    rbx,[rip+0x38c7]        # 0x140009fc0
   1400066f9:	jmp    0x140006714
   1400066fb:	lea    rbx,[rip+0x38b6]        # 0x140009fb8
   140006702:	jmp    0x140006714
   140006704:	lea    rbx,[rip+0x389d]        # 0x140009fa8
   14000670b:	jmp    0x140006714
   14000670d:	lea    rbx,[rip+0x389c]        # 0x140009fb0
   140006714:	mov    r8,rdx
   140006717:	lea    r9,[rsp+0x270]
   14000671f:	mov    esi,0xff
   140006724:	lea    rcx,[rsp+0x30]
   140006729:	mov    edx,esi
   14000672b:	call   QWORD PTR [rip+0x2bd7]        # 0x140009308
   140006731:	test   eax,eax
   140006733:	js     0x14000673e
   140006735:	cdqe   
   140006737:	cmp    rax,rsi
   14000673a:	ja     0x14000673e
   14000673c:	jne    0x140006746
   14000673e:	mov    BYTE PTR [rsp+0x12f],0x0
   140006746:	lea    rax,[rsp+0x30]
   14000674b:	mov    r9,rbx
   14000674e:	lea    r8,[rip+0x3893]        # 0x140009fe8
   140006755:	mov    QWORD PTR [rsp+0x20],rax
   14000675a:	mov    edx,0x100
   14000675f:	lea    rcx,[rsp+0x130]
   140006767:	call   0x1400065dc
   14000676c:	lea    rcx,[rsp+0x130]
   140006774:	mov    BYTE PTR [rsp+0x22f],0x0
   14000677c:	call   QWORD PTR [rip+0x295e]        # 0x1400090e0
   140006782:	mov    rcx,QWORD PTR [rsp+0x230]
   14000678a:	xor    rcx,rsp
   14000678d:	call   0x140007b00
   140006792:	add    rsp,0x248
   140006799:	pop    rsi
   14000679a:	pop    rbx
   14000679b:	ret    
   14000679c:	int3   
   14000679d:	int3   
   14000679e:	int3   
   14000679f:	int3   
   1400067a0:	int3   
   1400067a1:	int3   
   1400067a2:	int3   
   1400067a3:	int3   
   1400067a4:	mov    QWORD PTR [rsp+0x18],r8
   1400067a9:	mov    QWORD PTR [rsp+0x20],r9
   1400067ae:	push   rbx
   1400067af:	push   rbp
   1400067b0:	push   rsi
   1400067b1:	push   rdi
   1400067b2:	sub    rsp,0x28
   1400067b6:	xor    ebp,ebp
   1400067b8:	lea    rax,[rdx-0x1]
   1400067bc:	cmp    rax,0x7ffffffe
   1400067c2:	mov    rsi,rcx
   1400067c5:	mov    edi,ebp
   1400067c7:	mov    ecx,0x80070057
   1400067cc:	cmova  edi,ecx
   1400067cf:	test   edi,edi
   1400067d1:	js     0x140006808
   1400067d3:	lea    rbx,[rdx-0x1]
   1400067d7:	mov    rcx,rsi
   1400067da:	mov    rdx,rbx
   1400067dd:	lea    r9,[rsp+0x68]
   1400067e2:	mov    edi,ebp
   1400067e4:	call   QWORD PTR [rip+0x2a86]        # 0x140009270
   1400067ea:	test   eax,eax
   1400067ec:	js     0x1400067fd
   1400067ee:	cdqe   
   1400067f0:	cmp    rax,rbx
   1400067f3:	ja     0x1400067fd
   1400067f5:	jne    0x140006810
   1400067f7:	mov    WORD PTR [rsi+rbx*2],bp
   1400067fb:	jmp    0x140006810
   1400067fd:	mov    WORD PTR [rsi+rbx*2],bp
   140006801:	mov    edi,0x8007007a
   140006806:	jmp    0x140006810
   140006808:	test   rdx,rdx
   14000680b:	je     0x140006810
   14000680d:	mov    WORD PTR [rsi],bp
   140006810:	mov    eax,edi
   140006812:	add    rsp,0x28
   140006816:	pop    rdi
   140006817:	pop    rsi
   140006818:	pop    rbp
   140006819:	pop    rbx
   14000681a:	ret    
   14000681b:	int3   
   14000681c:	int3   
   14000681d:	int3   
   14000681e:	int3   
   14000681f:	int3   
   140006820:	int3   
   140006821:	int3   
   140006822:	int3   
   140006823:	int3   
   140006824:	mov    QWORD PTR [rsp+0x8],rbx
   140006829:	push   rbp
   14000682a:	push   rsi
   14000682b:	push   rdi
   14000682c:	push   r12
   14000682e:	push   r13
   140006830:	push   r14
   140006832:	push   r15
   140006834:	sub    rsp,0x310
   14000683b:	mov    rax,QWORD PTR [rip+0x67de]        # 0x14000d020
   140006842:	xor    rax,rsp
   140006845:	mov    QWORD PTR [rsp+0x300],rax
   14000684d:	mov    rsi,QWORD PTR [rsp+0x370]
   140006855:	xor    ebx,ebx
   140006857:	xor    edi,edi
   140006859:	mov    QWORD PTR [rsp+0x58],rdx
   14000685e:	mov    r13d,r8d
   140006861:	cmp    edi,DWORD PTR [rsp+0x378]
   140006868:	jae    0x140006937
   14000686e:	lea    rcx,[rdi+rdi*4]
   140006872:	xor    ebx,ebx
   140006874:	and    QWORD PTR [rsp+0x50],rbx
   140006879:	mov    ebp,DWORD PTR [rsi+rcx*8+0x20]
   14000687d:	mov    r14,QWORD PTR [rsi+rcx*8+0x18]
   140006882:	mov    r15d,DWORD PTR [rsi+rcx*8+0x24]
   140006887:	mov    r12,QWORD PTR [rsi+rcx*8+0x10]
   14000688c:	cmp    DWORD PTR [rsi+rcx*8],ebx
   14000688f:	je     0x14000692d
   140006895:	mov    r8,QWORD PTR [rsi+rcx*8+0x8]
   14000689a:	mov    r9d,r13d
   14000689d:	lea    rcx,[rsp+0x70]
   1400068a2:	mov    edx,0x144
   1400068a7:	call   0x1400067a4
   1400068ac:	test   eax,eax
   1400068ae:	jns    0x1400068b5
   1400068b0:	movzx  ebx,ax
   1400068b3:	jmp    0x14000691d
   1400068b5:	mov    rcx,QWORD PTR [rsp+0x58]
   1400068ba:	lea    rax,[rsp+0x60]
   1400068bf:	mov    QWORD PTR [rsp+0x40],rax
   1400068c4:	lea    r9,[rip+0x324d]        # 0x140009b18
   1400068cb:	lea    rax,[rsp+0x50]
   1400068d0:	xor    r8d,r8d
   1400068d3:	mov    QWORD PTR [rsp+0x38],rax
   1400068d8:	lea    rdx,[rsp+0x70]
   1400068dd:	and    QWORD PTR [rsp+0x30],rbx
   1400068e2:	mov    DWORD PTR [rsp+0x28],0xf003f
   1400068ea:	mov    DWORD PTR [rsp+0x20],0x1
   1400068f2:	call   QWORD PTR [rip+0x2730]        # 0x140009028
   1400068f8:	mov    ebx,eax
   1400068fa:	test   eax,eax
   1400068fc:	jne    0x14000691d
   1400068fe:	mov    rcx,QWORD PTR [rsp+0x50]
   140006903:	mov    r9d,r15d
   140006906:	mov    DWORD PTR [rsp+0x28],ebp
   14000690a:	xor    r8d,r8d
   14000690d:	mov    rdx,r12
   140006910:	mov    QWORD PTR [rsp+0x20],r14
   140006915:	call   QWORD PTR [rip+0x2705]        # 0x140009020
   14000691b:	mov    ebx,eax
   14000691d:	mov    rcx,QWORD PTR [rsp+0x50]
   140006922:	test   rcx,rcx
   140006925:	je     0x14000692d
   140006927:	call   QWORD PTR [rip+0x26d3]        # 0x140009000
   14000692d:	inc    edi
   14000692f:	test   ebx,ebx
   140006931:	je     0x140006861
   140006937:	mov    eax,ebx
   140006939:	mov    rcx,QWORD PTR [rsp+0x300]
   140006941:	xor    rcx,rsp
   140006944:	call   0x140007b00
   140006949:	mov    rbx,QWORD PTR [rsp+0x350]
   140006951:	add    rsp,0x310
   140006958:	pop    r15
   14000695a:	pop    r14
   14000695c:	pop    r13
   14000695e:	pop    r12
   140006960:	pop    rdi
   140006961:	pop    rsi
   140006962:	pop    rbp
   140006963:	ret    
   140006964:	int3   
   140006965:	int3   
   140006966:	int3   
   140006967:	int3   
   140006968:	int3   
   140006969:	int3   
   14000696a:	int3   
   14000696b:	int3   
   14000696c:	mov    QWORD PTR [rsp+0x8],rbx
   140006971:	mov    QWORD PTR [rsp+0x20],r9
   140006976:	mov    QWORD PTR [rsp+0x18],r8
   14000697b:	push   rbp
   14000697c:	push   rsi
   14000697d:	push   rdi
   14000697e:	push   r12
   140006980:	push   r13
   140006982:	push   r14
   140006984:	push   r15
   140006986:	mov    rbp,rsp
   140006989:	sub    rsp,0x40
   14000698d:	mov    rsi,QWORD PTR [rbp+0x60]
   140006991:	xor    eax,eax
   140006993:	mov    r15d,edx
   140006996:	mov    QWORD PTR [rbp-0x8],rax
   14000699a:	mov    r12,rcx
   14000699d:	mov    DWORD PTR [rbp-0x10],eax
   1400069a0:	mov    edx,0x1b8
   1400069a5:	mov    rbx,r8
   1400069a8:	lea    ecx,[rax+0x40]
   1400069ab:	mov    QWORD PTR [rsi],rax
   1400069ae:	mov    r13d,eax
   1400069b1:	lea    edi,[rax+0x1]
   1400069b4:	mov    r14d,eax
   1400069b7:	call   QWORD PTR [rip+0x27f3]        # 0x1400091b0
   1400069bd:	mov    QWORD PTR [rbx],rax
   1400069c0:	mov    rcx,rax
   1400069c3:	test   rax,rax
   1400069c6:	jne    0x1400069d6
   1400069c8:	call   QWORD PTR [rip+0x27a2]        # 0x140009170
   1400069ce:	mov    r13d,eax
   1400069d1:	jmp    0x140006ead
   1400069d6:	mov    r11d,0x4
   1400069dc:	lea    r10,[rip+0x3885]        # 0x14000a268
   1400069e3:	mov    eax,r15d
   1400069e6:	lea    r9,[rip+0x3653]        # 0x14000a040
   1400069ed:	and    eax,edi
   1400069ef:	lea    rdx,[rip+0x3822]        # 0x14000a218
   1400069f6:	mov    DWORD PTR [rcx],eax
   1400069f8:	lea    r8,[rip+0x3791]        # 0x14000a190
   1400069ff:	mov    QWORD PTR [rcx+0x8],r9
   140006a03:	lea    ebx,[r11+0x4]
   140006a07:	mov    QWORD PTR [rcx+0x10],rdx
   140006a0b:	mov    r14d,edi
   140006a0e:	lea    rdx,[rip+0x3823]        # 0x14000a238
   140006a15:	mov    QWORD PTR [rcx+0x18],rdx
   140006a19:	mov    edx,r15d
   140006a1c:	mov    DWORD PTR [rcx+0x20],0x18
   140006a23:	and    edx,r11d
   140006a26:	mov    DWORD PTR [rcx+0x24],edi
   140006a29:	mov    DWORD PTR [rcx+0x28],edx
   140006a2c:	mov    QWORD PTR [rcx+0x30],r8
   140006a30:	lea    r8,[rip+0x3819]        # 0x14000a250
   140006a37:	mov    QWORD PTR [rcx+0x38],r8
   140006a3b:	lea    r8,[rip+0x382e]        # 0x14000a270
   140006a42:	mov    QWORD PTR [rcx+0x40],r10
   140006a46:	mov    DWORD PTR [rcx+0x48],r11d
   140006a4a:	mov    DWORD PTR [rcx+0x4c],edi
   140006a4d:	mov    DWORD PTR [rcx+0x50],edx
   140006a50:	mov    QWORD PTR [rcx+0x58],r9
   140006a54:	mov    QWORD PTR [rcx+0x60],r8
   140006a58:	lea    r8,[rip+0x39b5]        # 0x14000a414
   140006a5f:	mov    QWORD PTR [rcx+0x68],r8
   140006a63:	lea    r8,[rip+0x36e6]        # 0x14000a150
   140006a6a:	mov    DWORD PTR [rcx+0x70],r11d
   140006a6e:	mov    DWORD PTR [rcx+0x74],r11d
   140006a72:	mov    DWORD PTR [rcx+0x78],eax
   140006a75:	lea    rax,[rip+0x381c]        # 0x14000a298
   140006a7c:	mov    QWORD PTR [rcx+0x80],r8
   140006a83:	mov    QWORD PTR [rcx+0x88],rax
   140006a8a:	lea    rax,[rip+0x3087]        # 0x140009b18
   140006a91:	mov    QWORD PTR [rcx+0x90],rax
   140006a98:	mov    eax,r15d
   140006a9b:	mov    DWORD PTR [rcx+0x98],0x2
   140006aa5:	and    eax,ebx
   140006aa7:	mov    DWORD PTR [rcx+0x9c],edi
   140006aad:	mov    DWORD PTR [rcx+0xa0],eax
   140006ab3:	lea    rax,[rip+0x3606]        # 0x14000a0c0
   140006aba:	mov    QWORD PTR [rcx+0xa8],rax
   140006ac1:	lea    rax,[rip+0x37e8]        # 0x14000a2b0
   140006ac8:	mov    QWORD PTR [rcx+0xb0],rax
   140006acf:	mov    eax,r15d
   140006ad2:	mov    QWORD PTR [rcx+0xb8],r10
   140006ad9:	and    eax,0x2
   140006adc:	mov    DWORD PTR [rcx+0xc0],r11d
   140006ae3:	mov    DWORD PTR [rcx+0xc4],edi
   140006ae9:	mov    DWORD PTR [rcx+0xc8],eax
   140006aef:	lea    rax,[rip+0x37d2]        # 0x14000a2c8
   140006af6:	mov    QWORD PTR [rcx+0xd0],r8
   140006afd:	mov    QWORD PTR [rcx+0xd8],rax
   140006b04:	lea    rax,[rip+0x37dd]        # 0x14000a2e8
   140006b0b:	mov    QWORD PTR [rcx+0xe0],r10
   140006b12:	mov    DWORD PTR [rcx+0xe8],r11d
   140006b19:	mov    DWORD PTR [rcx+0xec],edi
   140006b1f:	mov    DWORD PTR [rcx+0xf0],edx
   140006b25:	mov    QWORD PTR [rcx+0xf8],r8
   140006b2c:	mov    QWORD PTR [rcx+0x100],rax
   140006b33:	lea    rax,[rip+0x37ca]        # 0x14000a304
   140006b3a:	mov    QWORD PTR [rcx+0x108],rax
   140006b41:	mov    eax,r15d
   140006b44:	and    eax,0x40
   140006b47:	mov    DWORD PTR [rbp+0x60],edx
   140006b4a:	lea    edx,[rbx-0x2]
   140006b4d:	mov    DWORD PTR [rcx+0x110],edx
   140006b53:	mov    DWORD PTR [rcx+0x114],edi
   140006b59:	mov    DWORD PTR [rcx+0x118],eax
   140006b5f:	lea    rax,[rip+0x37aa]        # 0x14000a310
   140006b66:	mov    QWORD PTR [rcx+0x120],r8
   140006b6d:	mov    QWORD PTR [rcx+0x128],rax
   140006b74:	lea    rax,[rip+0x37b5]        # 0x14000a330
   140006b7b:	mov    QWORD PTR [rcx+0x130],rax
   140006b82:	mov    DWORD PTR [rcx+0x138],edx
   140006b88:	mov    DWORD PTR [rcx+0x13c],edi
   140006b8e:	mov    eax,r15d
   140006b91:	lea    rdx,[rip+0x37a0]        # 0x14000a338
   140006b98:	shr    eax,0x7
   140006b9b:	lea    r14d,[r11+0x6]
   140006b9f:	not    eax
   140006ba1:	and    eax,edi
   140006ba3:	mov    DWORD PTR [rcx+0x140],eax
   140006ba9:	mov    QWORD PTR [rcx+0x148],r8
   140006bb0:	mov    QWORD PTR [rcx+0x150],rdx
   140006bb7:	lea    rdx,[rip+0x3852]        # 0x14000a410
   140006bbe:	mov    QWORD PTR [rcx+0x158],rdx
   140006bc5:	mov    DWORD PTR [rcx+0x160],r11d
   140006bcc:	mov    DWORD PTR [rcx+0x164],r11d
   140006bd3:	mov    DWORD PTR [rcx+0x168],eax
   140006bd9:	lea    rax,[rip+0x3780]        # 0x14000a360
   140006be0:	mov    QWORD PTR [rcx+0x170],r8
   140006be7:	mov    QWORD PTR [rcx+0x178],rax
   140006bee:	mov    QWORD PTR [rcx+0x180],r10
   140006bf5:	mov    DWORD PTR [rcx+0x188],r11d
   140006bfc:	mov    DWORD PTR [rcx+0x18c],edi
   140006c02:	test   r15b,0x24
   140006c06:	je     0x140006ead
   140006c0c:	lea    rax,[rbp-0x8]
   140006c10:	mov    r9d,0x20019
   140006c16:	xor    r8d,r8d
   140006c19:	mov    QWORD PTR [rsp+0x20],rax
   140006c1e:	lea    rdx,[rip+0x375b]        # 0x14000a380
   140006c25:	mov    rcx,r12
   140006c28:	call   QWORD PTR [rip+0x23ea]        # 0x140009018
   140006c2e:	lea    r12,[rip+0x377b]        # 0x14000a3b0
   140006c35:	test   eax,eax
   140006c37:	jne    0x140006c97
   140006c39:	mov    rcx,QWORD PTR [rbp-0x8]
   140006c3d:	lea    rax,[rbp-0x10]
   140006c41:	mov    QWORD PTR [rsp+0x28],rax
   140006c46:	xor    r9d,r9d
   140006c49:	and    QWORD PTR [rsp+0x20],r13
   140006c4e:	xor    r8d,r8d
   140006c51:	mov    rdx,r12
   140006c54:	call   QWORD PTR [rip+0x23e6]        # 0x140009040
   140006c5a:	test   eax,eax
   140006c5c:	jne    0x140006c97
   140006c5e:	mov    edx,DWORD PTR [rbp-0x10]
   140006c61:	lea    ecx,[rbx+0x38]
   140006c64:	call   QWORD PTR [rip+0x2546]        # 0x1400091b0
   140006c6a:	mov    QWORD PTR [rsi],rax
   140006c6d:	test   rax,rax
   140006c70:	je     0x140006cca
   140006c72:	lea    rcx,[rbp-0x10]
   140006c76:	xor    r9d,r9d
   140006c79:	mov    QWORD PTR [rsp+0x28],rcx
   140006c7e:	xor    r8d,r8d
   140006c81:	mov    rcx,QWORD PTR [rbp-0x8]
   140006c85:	mov    rdx,r12
   140006c88:	mov    QWORD PTR [rsp+0x20],rax
   140006c8d:	call   QWORD PTR [rip+0x23ad]        # 0x140009040
   140006c93:	test   eax,eax
   140006c95:	je     0x140006cca
   140006c97:	mov    rcx,QWORD PTR [rsi]
   140006c9a:	test   rcx,rcx
   140006c9d:	je     0x140006ca5
   140006c9f:	call   QWORD PTR [rip+0x240b]        # 0x1400090b0
   140006ca5:	xor    edi,edi
   140006ca7:	mov    rdx,rbx
   140006caa:	lea    ecx,[rdi+0x40]
   140006cad:	call   QWORD PTR [rip+0x24fd]        # 0x1400091b0
   140006cb3:	mov    QWORD PTR [rsi],rax
   140006cb6:	test   rax,rax
   140006cb9:	je     0x140006cca
   140006cbb:	mov    rcx,QWORD PTR [rip+0x6436]        # 0x14000d0f8
   140006cc2:	mov    QWORD PTR [rax],rcx
   140006cc5:	mov    DWORD PTR [rbp-0x10],ebx
   140006cc8:	jmp    0x140006ccd
   140006cca:	mov    ebx,DWORD PTR [rbp-0x10]
   140006ccd:	mov    rdx,QWORD PTR [rsi]
   140006cd0:	test   rdx,rdx
   140006cd3:	je     0x140006ead
   140006cd9:	test   r15b,0x20
   140006cdd:	je     0x140006d0e
   140006cdf:	mov    ecx,0xffffdfff
   140006ce4:	test   edi,edi
   140006ce6:	jne    0x140006cf4
   140006ce8:	lea    eax,[rbx*8-0x1]
   140006cef:	cmp    eax,0xd
   140006cf2:	jb     0x140006cfd
   140006cf4:	and    DWORD PTR [rdx],ecx
   140006cf6:	test   edi,edi
   140006cf8:	jne    0x140006d09
   140006cfa:	mov    ebx,DWORD PTR [rbp-0x10]
   140006cfd:	lea    eax,[rbx*8-0x1]
   140006d04:	cmp    eax,0xd
   140006d07:	jb     0x140006d0e
   140006d09:	and    DWORD PTR [rdx],ecx
   140006d0b:	mov    ebx,DWORD PTR [rbp-0x10]
   140006d0e:	mov    r14d,0xb
   140006d14:	cmp    DWORD PTR [rbp+0x60],r13d
   140006d18:	je     0x140006e6d
   140006d1e:	mov    esi,0xfffffff7
   140006d23:	mov    ecx,0xfffffffd
   140006d28:	mov    r11d,0xfffffffb
   140006d2e:	mov    r10d,0xffffefff
   140006d34:	mov    r9d,0xfffff7ff
   140006d3a:	mov    r8d,0xfffffdff
   140006d40:	test   edi,edi
   140006d42:	jne    0x140006d50
   140006d44:	lea    eax,[rbx*8-0x1]
   140006d4b:	cmp    eax,0x1
   140006d4e:	jb     0x140006d59
   140006d50:	and    DWORD PTR [rdx],ecx
   140006d52:	test   edi,edi
   140006d54:	jne    0x140006d65
   140006d56:	mov    ebx,DWORD PTR [rbp-0x10]
   140006d59:	lea    eax,[rbx*8-0x1]
   140006d60:	cmp    eax,0x1
   140006d63:	jb     0x140006d6e
   140006d65:	and    DWORD PTR [rdx],ecx
   140006d67:	test   edi,edi
   140006d69:	jne    0x140006d7a
   140006d6b:	mov    ebx,DWORD PTR [rbp-0x10]
   140006d6e:	lea    eax,[rbx*8-0x1]
   140006d75:	cmp    eax,0x9
   140006d78:	jb     0x140006d84
   140006d7a:	and    DWORD PTR [rdx],r8d
   140006d7d:	test   edi,edi
   140006d7f:	jne    0x140006d90
   140006d81:	mov    ebx,DWORD PTR [rbp-0x10]
   140006d84:	lea    eax,[rbx*8-0x1]
   140006d8b:	cmp    eax,0x9
   140006d8e:	jb     0x140006d9a
   140006d90:	and    DWORD PTR [rdx],r8d
   140006d93:	test   edi,edi
   140006d95:	jne    0x140006da6
   140006d97:	mov    ebx,DWORD PTR [rbp-0x10]
   140006d9a:	lea    eax,[rbx*8-0x1]
   140006da1:	cmp    eax,r14d
   140006da4:	jb     0x140006db0
   140006da6:	and    DWORD PTR [rdx],r9d
   140006da9:	test   edi,edi
   140006dab:	jne    0x140006dbc
   140006dad:	mov    ebx,DWORD PTR [rbp-0x10]
   140006db0:	lea    eax,[rbx*8-0x1]
   140006db7:	cmp    eax,r14d
   140006dba:	jb     0x140006dc6
   140006dbc:	and    DWORD PTR [rdx],r9d
   140006dbf:	test   edi,edi
   140006dc1:	jne    0x140006dd2
   140006dc3:	mov    ebx,DWORD PTR [rbp-0x10]
   140006dc6:	lea    eax,[rbx*8-0x1]
   140006dcd:	cmp    eax,0xc
   140006dd0:	jb     0x140006ddc
   140006dd2:	and    DWORD PTR [rdx],r10d
   140006dd5:	test   edi,edi
   140006dd7:	jne    0x140006de8
   140006dd9:	mov    ebx,DWORD PTR [rbp-0x10]
   140006ddc:	lea    eax,[rbx*8-0x1]
   140006de3:	cmp    eax,0xc
   140006de6:	jb     0x140006df2
   140006de8:	and    DWORD PTR [rdx],r10d
   140006deb:	test   edi,edi
   140006ded:	jne    0x140006dfe
   140006def:	mov    ebx,DWORD PTR [rbp-0x10]
   140006df2:	lea    eax,[rbx*8-0x1]
   140006df9:	cmp    eax,0x2
   140006dfc:	jb     0x140006e08
   140006dfe:	and    DWORD PTR [rdx],r11d
   140006e01:	test   edi,edi
   140006e03:	jne    0x140006e14
   140006e05:	mov    ebx,DWORD PTR [rbp-0x10]
   140006e08:	lea    eax,[rbx*8-0x1]
   140006e0f:	cmp    eax,0x2
   140006e12:	jb     0x140006e1e
   140006e14:	and    DWORD PTR [rdx],r11d
   140006e17:	test   edi,edi
   140006e19:	jne    0x140006e2a
   140006e1b:	mov    ebx,DWORD PTR [rbp-0x10]
   140006e1e:	lea    eax,[rbx*8-0x1]
   140006e25:	cmp    eax,0x3
   140006e28:	jb     0x140006e33
   140006e2a:	and    DWORD PTR [rdx],esi
   140006e2c:	test   edi,edi
   140006e2e:	jne    0x140006e3f
   140006e30:	mov    ebx,DWORD PTR [rbp-0x10]
   140006e33:	lea    eax,[rbx*8-0x1]
   140006e3a:	cmp    eax,0x3
   140006e3d:	jb     0x140006e48
   140006e3f:	and    DWORD PTR [rdx],esi
   140006e41:	test   edi,edi
   140006e43:	jne    0x140006e54
   140006e45:	mov    ebx,DWORD PTR [rbp-0x10]
   140006e48:	lea    eax,[rbx*8-0x1]
   140006e4f:	cmp    eax,0x21
   140006e52:	jb     0x140006e5e
   140006e54:	and    DWORD PTR [rdx+0x4],ecx
   140006e57:	test   edi,edi
   140006e59:	jne    0x140006e6a
   140006e5b:	mov    ebx,DWORD PTR [rbp-0x10]
   140006e5e:	lea    eax,[rbx*8-0x1]
   140006e65:	cmp    eax,0x21
   140006e68:	jb     0x140006e6d
   140006e6a:	and    DWORD PTR [rdx+0x4],ecx
   140006e6d:	mov    rcx,QWORD PTR [rbp+0x50]
   140006e71:	lea    rax,[rip+0x32d8]        # 0x14000a150
   140006e78:	mov    rcx,QWORD PTR [rcx]
   140006e7b:	mov    DWORD PTR [rcx+0x190],0x1
   140006e85:	mov    QWORD PTR [rcx+0x198],rax
   140006e8c:	mov    QWORD PTR [rcx+0x1a0],r12
   140006e93:	mov    QWORD PTR [rcx+0x1a8],rdx
   140006e9a:	mov    eax,DWORD PTR [rbp-0x10]
   140006e9d:	mov    DWORD PTR [rcx+0x1b0],eax
   140006ea3:	mov    DWORD PTR [rcx+0x1b4],0x3
   140006ead:	mov    rcx,QWORD PTR [rbp-0x8]
   140006eb1:	test   rcx,rcx
   140006eb4:	je     0x140006ebc
   140006eb6:	call   QWORD PTR [rip+0x2144]        # 0x140009000
   140006ebc:	mov    rax,QWORD PTR [rbp+0x58]
   140006ec0:	mov    rbx,QWORD PTR [rsp+0x80]
   140006ec8:	mov    DWORD PTR [rax],r14d
   140006ecb:	mov    eax,r13d
   140006ece:	add    rsp,0x40
   140006ed2:	pop    r15
   140006ed4:	pop    r14
   140006ed6:	pop    r13
   140006ed8:	pop    r12
   140006eda:	pop    rdi
   140006edb:	pop    rsi
   140006edc:	pop    rbp
   140006edd:	ret    
   140006ede:	int3   
   140006edf:	int3   
   140006ee0:	int3   
   140006ee1:	int3   
   140006ee2:	int3   
   140006ee3:	int3   
   140006ee4:	int3   
   140006ee5:	int3   
   140006ee6:	int3   
   140006ee7:	int3   
   140006ee8:	int3   
   140006ee9:	int3   
   140006eea:	int3   
   140006eeb:	int3   
   140006eec:	int3   
   140006eed:	int3   
   140006eee:	int3   
   140006eef:	int3   
   140006ef0:	mov    rax,rsp
   140006ef3:	mov    QWORD PTR [rax+0x10],rbx
   140006ef7:	mov    QWORD PTR [rax+0x18],rbp
   140006efb:	mov    QWORD PTR [rax+0x20],rsi
   140006eff:	push   rdi
   140006f00:	push   r14
   140006f02:	push   r15
   140006f04:	sub    rsp,0x50
   140006f08:	xor    r15d,r15d
   140006f0b:	mov    rbx,rcx
   140006f0e:	mov    QWORD PTR [rax+0x8],r15
   140006f12:	mov    esi,r15d
   140006f15:	test   rcx,rcx
   140006f18:	jne    0x140006f24
   140006f1a:	mov    esi,0x54f
   140006f1f:	jmp    0x140007049
   140006f24:	xor    ecx,ecx
   140006f26:	call   QWORD PTR [rip+0x2484]        # 0x1400093b0
   140006f2c:	test   BYTE PTR [rbx],0x2
   140006f2f:	mov    r14d,eax
   140006f32:	jne    0x140006f50
   140006f34:	mov    eax,DWORD PTR [rbx+0x4]
   140006f37:	neg    eax
   140006f39:	sbb    ecx,ecx
   140006f3b:	add    ecx,0x6
   140006f3e:	call   QWORD PTR [rip+0x22d4]        # 0x140009218
   140006f44:	test   eax,eax
   140006f46:	jne    0x140006f50
   140006f48:	call   QWORD PTR [rip+0x2222]        # 0x140009170
   140006f4e:	mov    esi,eax
   140006f50:	test   BYTE PTR [rbx],0x1
   140006f53:	jne    0x140006fb6
   140006f55:	lea    rcx,[rip+0x349c]        # 0x14000a3f8
   140006f5c:	mov    esi,r15d
   140006f5f:	call   QWORD PTR [rip+0x223b]        # 0x1400091a0
   140006f65:	mov    rdi,rax
   140006f68:	test   rax,rax
   140006f6b:	jne    0x140006f77
   140006f6d:	call   QWORD PTR [rip+0x21fd]        # 0x140009170
   140006f73:	mov    esi,eax
   140006f75:	jmp    0x140006fb2
   140006f77:	mov    edx,0x24
   140006f7c:	mov    rcx,rax
   140006f7f:	call   QWORD PTR [rip+0x21e3]        # 0x140009168
   140006f85:	mov    rbp,rax
   140006f88:	test   rax,rax
   140006f8b:	je     0x140006fa1
   140006f8d:	mov    rcx,rax
   140006f90:	call   QWORD PTR [rip+0x244a]        # 0x1400093e0
   140006f96:	call   rbp
   140006f98:	test   eax,eax
   140006f9a:	je     0x140006fa9
   140006f9c:	movzx  esi,ax
   140006f9f:	jmp    0x140006fa9
   140006fa1:	call   QWORD PTR [rip+0x21c9]        # 0x140009170
   140006fa7:	mov    esi,eax
   140006fa9:	mov    rcx,rdi
   140006fac:	call   QWORD PTR [rip+0x21c6]        # 0x140009178
   140006fb2:	test   esi,esi
   140006fb4:	jne    0x14000701e
   140006fb6:	test   BYTE PTR [rbx],0x4
   140006fb9:	jne    0x14000701e
   140006fbb:	xor    edx,edx
   140006fbd:	lea    rax,[rsp+0x70]
   140006fc2:	lea    r9,[rip+0x345f]        # 0x14000a428
   140006fc9:	mov    QWORD PTR [rsp+0x20],rax
   140006fce:	lea    rcx,[rip+0x3443]        # 0x14000a418
   140006fd5:	lea    r8d,[rdx+0x17]
   140006fd9:	call   QWORD PTR [rip+0x23d9]        # 0x1400093b8
   140006fdf:	test   eax,eax
   140006fe1:	je     0x140006fe8
   140006fe3:	movzx  esi,ax
   140006fe6:	jmp    0x14000701e
   140006fe8:	mov    rdi,QWORD PTR [rsp+0x70]
   140006fed:	mov    eax,0xb
   140006ff2:	mov    WORD PTR [rsp+0x30],ax
   140006ff7:	mov    WORD PTR [rsp+0x38],r15w
   140006ffd:	mov    rax,QWORD PTR [rdi]
   140007000:	mov    rbx,QWORD PTR [rax+0x20]
   140007004:	mov    rcx,rbx
   140007007:	call   QWORD PTR [rip+0x23d3]        # 0x1400093e0
   14000700d:	lea    r8,[rsp+0x30]
   140007012:	mov    rcx,rdi
   140007015:	lea    rdx,[rip+0x33bc]        # 0x14000a3d8
   14000701c:	call   rbx
   14000701e:	mov    rdi,QWORD PTR [rsp+0x70]
   140007023:	test   rdi,rdi
   140007026:	je     0x14000703d
   140007028:	mov    rax,QWORD PTR [rdi]
   14000702b:	mov    rbx,QWORD PTR [rax+0x10]
   14000702f:	mov    rcx,rbx
   140007032:	call   QWORD PTR [rip+0x23a8]        # 0x1400093e0
   140007038:	mov    rcx,rdi
   14000703b:	call   rbx
   14000703d:	cmp    r14d,0x1
   140007041:	ja     0x140007049
   140007043:	call   QWORD PTR [rip+0x233f]        # 0x140009388
   140007049:	lea    r11,[rsp+0x50]
   14000704e:	mov    eax,esi
   140007050:	mov    rbx,QWORD PTR [r11+0x28]
   140007054:	mov    rbp,QWORD PTR [r11+0x30]
   140007058:	mov    rsi,QWORD PTR [r11+0x38]
   14000705c:	mov    rsp,r11
   14000705f:	pop    r15
   140007061:	pop    r14
   140007063:	pop    rdi
   140007064:	ret    
   140007065:	int3   
   140007066:	int3   
   140007067:	int3   
   140007068:	int3   
   140007069:	int3   
   14000706a:	int3   
   14000706b:	int3   
   14000706c:	mov    rax,rsp
   14000706f:	mov    QWORD PTR [rax+0x18],rbx
   140007073:	mov    QWORD PTR [rax+0x20],rsi
   140007077:	mov    DWORD PTR [rax+0x8],ecx
   14000707a:	push   rdi
   14000707b:	sub    rsp,0x30
   14000707f:	xor    ebx,ebx
   140007081:	mov    esi,edx
   140007083:	mov    DWORD PTR [rax+0x8],ebx
   140007086:	mov    eax,edx
   140007088:	and    eax,0x7
   14000708b:	cmp    al,0x7
   14000708d:	je     0x140007130
   140007093:	lea    edx,[rbx+0x8]
   140007096:	lea    ecx,[rbx+0x40]
   140007099:	call   QWORD PTR [rip+0x2111]        # 0x1400091b0
   14000709f:	mov    rdi,rax
   1400070a2:	test   rax,rax
   1400070a5:	jne    0x1400070af
   1400070a7:	lea    ebx,[rax+0xe]
   1400070aa:	jmp    0x140007130
   1400070af:	mov    DWORD PTR [rax],esi
   1400070b1:	lea    r8,[rip+0xfffffffffffffe38]        # 0x140006ef0
   1400070b8:	mov    DWORD PTR [rax+0x4],ebx
   1400070bb:	mov    r9,rdi
   1400070be:	lea    rax,[rsp+0x48]
   1400070c3:	xor    edx,edx
   1400070c5:	mov    QWORD PTR [rsp+0x28],rax
   1400070ca:	xor    ecx,ecx
   1400070cc:	mov    DWORD PTR [rsp+0x20],ebx
   1400070d0:	call   QWORD PTR [rip+0x1faa]        # 0x140009080
   1400070d6:	mov    rsi,rax
   1400070d9:	test   rax,rax
   1400070dc:	je     0x140007128
   1400070de:	mov    edx,0x2710
   1400070e3:	mov    rcx,rax
   1400070e6:	call   QWORD PTR [rip+0x1f7c]        # 0x140009068
   1400070ec:	mov    DWORD PTR [rsp+0x40],eax
   1400070f0:	test   eax,eax
   1400070f2:	jne    0x140007119
   1400070f4:	lea    rdx,[rsp+0x40]
   1400070f9:	mov    rcx,rsi
   1400070fc:	call   QWORD PTR [rip+0x20b6]        # 0x1400091b8
   140007102:	test   eax,eax
   140007104:	jne    0x140007110
   140007106:	call   QWORD PTR [rip+0x2064]        # 0x140009170
   14000710c:	mov    DWORD PTR [rsp+0x40],eax
   140007110:	mov    rcx,rdi
   140007113:	call   QWORD PTR [rip+0x1f97]        # 0x1400090b0
   140007119:	mov    rcx,rsi
   14000711c:	call   QWORD PTR [rip+0x1f4e]        # 0x140009070
   140007122:	mov    ebx,DWORD PTR [rsp+0x40]
   140007126:	jmp    0x140007130
   140007128:	call   QWORD PTR [rip+0x2042]        # 0x140009170
   14000712e:	mov    ebx,eax
   140007130:	mov    rsi,QWORD PTR [rsp+0x58]
   140007135:	mov    eax,ebx
   140007137:	mov    rbx,QWORD PTR [rsp+0x50]
   14000713c:	add    rsp,0x30
   140007140:	pop    rdi
   140007141:	ret    
   140007142:	int3   
   140007143:	int3   
   140007144:	int3   
   140007145:	int3   
   140007146:	int3   
   140007147:	int3   
   140007148:	mov    rax,rsp
   14000714b:	mov    QWORD PTR [rax+0x8],rbx
   14000714f:	mov    QWORD PTR [rax+0x10],rsi
   140007153:	mov    QWORD PTR [rax+0x18],rdi
   140007157:	push   rbp
   140007158:	push   r14
   14000715a:	push   r15
   14000715c:	lea    rbp,[rax-0x218]
   140007163:	sub    rsp,0x300
   14000716a:	mov    rax,QWORD PTR [rip+0x5eaf]        # 0x14000d020
   140007171:	xor    rax,rsp
   140007174:	mov    QWORD PTR [rbp+0x1f0],rax
   14000717b:	and    QWORD PTR [rsp+0x50],0x0
   140007181:	xor    edi,edi
   140007183:	and    QWORD PTR [rsp+0x38],0x0
   140007189:	xor    ecx,ecx
   14000718b:	mov    QWORD PTR [rsp+0x40],rdi
   140007190:	mov    esi,r9d
   140007193:	mov    r15d,edx
   140007196:	call   QWORD PTR [rip+0x2214]        # 0x1400093b0
   14000719c:	mov    r14d,eax
   14000719f:	call   QWORD PTR [rip+0x1ff3]        # 0x140009198
   1400071a5:	mov    ecx,eax
   1400071a7:	lea    rdx,[rsp+0x30]
   1400071ac:	call   QWORD PTR [rip+0x1ff6]        # 0x1400091a8
   1400071b2:	test   eax,eax
   1400071b4:	jne    0x1400071c3
   1400071b6:	call   QWORD PTR [rip+0x1fb4]        # 0x140009170
   1400071bc:	mov    ebx,eax
   1400071be:	jmp    0x140007314
   1400071c3:	lea    rdx,[rsp+0x38]
   1400071c8:	mov    ecx,0xf003f
   1400071cd:	call   QWORD PTR [rip+0x1e7d]        # 0x140009050
   1400071d3:	mov    ebx,eax
   1400071d5:	test   eax,eax
   1400071d7:	jne    0x140007314
   1400071dd:	mov    r9d,DWORD PTR [rsp+0x30]
   1400071e2:	lea    r8,[rip+0x2e57]        # 0x14000a040
   1400071e9:	mov    ebx,0x144
   1400071ee:	lea    rcx,[rsp+0x60]
   1400071f3:	mov    edx,ebx
   1400071f5:	call   0x1400067a4
   1400071fa:	mov    rcx,QWORD PTR [rsp+0x38]
   1400071ff:	lea    rdx,[rsp+0x60]
   140007204:	call   QWORD PTR [rip+0x1e3e]        # 0x140009048
   14000720a:	mov    r9d,DWORD PTR [rsp+0x30]
   14000720f:	lea    r8,[rip+0x2f7a]        # 0x14000a190
   140007216:	mov    edx,ebx
   140007218:	lea    rcx,[rsp+0x60]
   14000721d:	call   0x1400067a4
   140007222:	mov    rcx,QWORD PTR [rsp+0x38]
   140007227:	lea    rdx,[rsp+0x60]
   14000722c:	call   QWORD PTR [rip+0x1e16]        # 0x140009048
   140007232:	mov    r9d,DWORD PTR [rsp+0x30]
   140007237:	lea    r8,[rip+0x2e82]        # 0x14000a0c0
   14000723e:	mov    edx,ebx
   140007240:	lea    rcx,[rsp+0x60]
   140007245:	call   0x1400067a4
   14000724a:	mov    rcx,QWORD PTR [rsp+0x38]
   14000724f:	lea    rdx,[rsp+0x60]
   140007254:	call   QWORD PTR [rip+0x1dee]        # 0x140009048
   14000725a:	mov    r9d,DWORD PTR [rsp+0x30]
   14000725f:	lea    r8,[rip+0x2eea]        # 0x14000a150
   140007266:	mov    edx,ebx
   140007268:	lea    rcx,[rsp+0x60]
   14000726d:	call   0x1400067a4
   140007272:	mov    rcx,QWORD PTR [rsp+0x38]
   140007277:	lea    rdx,[rsp+0x60]
   14000727c:	call   QWORD PTR [rip+0x1dc6]        # 0x140009048
   140007282:	mov    r9d,DWORD PTR [rsp+0x30]
   140007287:	lea    r8,[rip+0x2f62]        # 0x14000a1f0
   14000728e:	mov    edx,ebx
   140007290:	lea    rcx,[rsp+0x60]
   140007295:	call   0x1400067a4
   14000729a:	mov    rcx,QWORD PTR [rsp+0x38]
   14000729f:	lea    rdx,[rsp+0x60]
   1400072a4:	call   QWORD PTR [rip+0x1d9e]        # 0x140009048
   1400072aa:	mov    rcx,QWORD PTR [rsp+0x38]
   1400072af:	lea    rax,[rsp+0x40]
   1400072b4:	lea    r9,[rsp+0x48]
   1400072b9:	mov    QWORD PTR [rsp+0x20],rax
   1400072be:	lea    r8,[rsp+0x50]
   1400072c3:	mov    edx,r15d
   1400072c6:	call   0x14000696c
   1400072cb:	mov    rdi,QWORD PTR [rsp+0x50]
   1400072d0:	mov    ebx,eax
   1400072d2:	test   eax,eax
   1400072d4:	jne    0x140007301
   1400072d6:	mov    eax,DWORD PTR [rsp+0x48]
   1400072da:	mov    r8d,DWORD PTR [rsp+0x30]
   1400072df:	mov    rdx,QWORD PTR [rsp+0x38]
   1400072e4:	mov    DWORD PTR [rsp+0x28],eax
   1400072e8:	mov    QWORD PTR [rsp+0x20],rdi
   1400072ed:	call   0x140006824
   1400072f2:	mov    ebx,eax
   1400072f4:	test   eax,eax
   1400072f6:	jne    0x140007301
   1400072f8:	mov    edx,esi
   1400072fa:	call   0x14000706c
   1400072ff:	mov    ebx,eax
   140007301:	test   rdi,rdi
   140007304:	je     0x14000730f
   140007306:	mov    rcx,rdi
   140007309:	call   QWORD PTR [rip+0x1da1]        # 0x1400090b0
   14000730f:	mov    rdi,QWORD PTR [rsp+0x40]
   140007314:	mov    rcx,QWORD PTR [rsp+0x38]
   140007319:	test   rcx,rcx
   14000731c:	je     0x140007324
   14000731e:	call   QWORD PTR [rip+0x1cdc]        # 0x140009000
   140007324:	test   rdi,rdi
   140007327:	je     0x140007332
   140007329:	mov    rcx,rdi
   14000732c:	call   QWORD PTR [rip+0x1d7e]        # 0x1400090b0
   140007332:	test   ebx,ebx
   140007334:	je     0x140007346
   140007336:	cmp    ebx,0x102
   14000733c:	je     0x140007346
   14000733e:	mov    r8d,esi
   140007341:	call   0x140007388
   140007346:	cmp    r14d,0x1
   14000734a:	ja     0x140007352
   14000734c:	call   QWORD PTR [rip+0x2036]        # 0x140009388
   140007352:	mov    eax,ebx
   140007354:	mov    rcx,QWORD PTR [rbp+0x1f0]
   14000735b:	xor    rcx,rsp
   14000735e:	call   0x140007b00
   140007363:	lea    r11,[rsp+0x300]
   14000736b:	mov    rbx,QWORD PTR [r11+0x20]
   14000736f:	mov    rsi,QWORD PTR [r11+0x28]
   140007373:	mov    rdi,QWORD PTR [r11+0x30]
   140007377:	mov    rsp,r11
   14000737a:	pop    r15
   14000737c:	pop    r14
   14000737e:	pop    rbp
   14000737f:	ret    
   140007380:	int3   
   140007381:	int3   
   140007382:	int3   
   140007383:	int3   
   140007384:	int3   
   140007385:	int3   
   140007386:	int3   
   140007387:	int3   
   140007388:	mov    rax,rsp
   14000738b:	mov    QWORD PTR [rax+0x8],rbx
   14000738f:	mov    QWORD PTR [rax+0x10],rsi
   140007393:	mov    QWORD PTR [rax+0x18],rdi
   140007397:	push   rbp
   140007398:	lea    rbp,[rax-0x1d8]
   14000739f:	sub    rsp,0x2d0
   1400073a6:	mov    rax,QWORD PTR [rip+0x5c73]        # 0x14000d020
   1400073ad:	xor    rax,rsp
   1400073b0:	mov    QWORD PTR [rbp+0x1c0],rax
   1400073b7:	and    QWORD PTR [rsp+0x28],0x0
   1400073bd:	xor    ecx,ecx
   1400073bf:	mov    edi,r8d
   1400073c2:	call   QWORD PTR [rip+0x1fe8]        # 0x1400093b0
   1400073c8:	mov    ebx,eax
   1400073ca:	call   QWORD PTR [rip+0x1dc8]        # 0x140009198
   1400073d0:	mov    ecx,eax
   1400073d2:	lea    rdx,[rsp+0x20]
   1400073d7:	call   QWORD PTR [rip+0x1dcb]        # 0x1400091a8
   1400073dd:	test   eax,eax
   1400073df:	jne    0x1400073ec
   1400073e1:	call   QWORD PTR [rip+0x1d89]        # 0x140009170
   1400073e7:	jmp    0x1400074d8
   1400073ec:	lea    rdx,[rsp+0x28]
   1400073f1:	mov    ecx,0xf003f
   1400073f6:	call   QWORD PTR [rip+0x1c54]        # 0x140009050
   1400073fc:	test   eax,eax
   1400073fe:	jne    0x1400074d8
   140007404:	mov    r9d,DWORD PTR [rsp+0x20]
   140007409:	lea    r8,[rip+0x2c30]        # 0x14000a040
   140007410:	mov    esi,0x144
   140007415:	lea    rcx,[rsp+0x30]
   14000741a:	mov    edx,esi
   14000741c:	call   0x1400067a4
   140007421:	mov    rcx,QWORD PTR [rsp+0x28]
   140007426:	lea    rdx,[rsp+0x30]
   14000742b:	call   QWORD PTR [rip+0x1c17]        # 0x140009048
   140007431:	mov    r9d,DWORD PTR [rsp+0x20]
   140007436:	lea    r8,[rip+0x2d53]        # 0x14000a190
   14000743d:	mov    edx,esi
   14000743f:	lea    rcx,[rsp+0x30]
   140007444:	call   0x1400067a4
   140007449:	mov    rcx,QWORD PTR [rsp+0x28]
   14000744e:	lea    rdx,[rsp+0x30]
   140007453:	call   QWORD PTR [rip+0x1bef]        # 0x140009048
   140007459:	mov    r9d,DWORD PTR [rsp+0x20]
   14000745e:	lea    r8,[rip+0x2c5b]        # 0x14000a0c0
   140007465:	mov    edx,esi
   140007467:	lea    rcx,[rsp+0x30]
   14000746c:	call   0x1400067a4
   140007471:	mov    rcx,QWORD PTR [rsp+0x28]
   140007476:	lea    rdx,[rsp+0x30]
   14000747b:	call   QWORD PTR [rip+0x1bc7]        # 0x140009048
   140007481:	mov    r9d,DWORD PTR [rsp+0x20]
   140007486:	lea    r8,[rip+0x2cc3]        # 0x14000a150
   14000748d:	mov    edx,esi
   14000748f:	lea    rcx,[rsp+0x30]
   140007494:	call   0x1400067a4
   140007499:	mov    rcx,QWORD PTR [rsp+0x28]
   14000749e:	lea    rdx,[rsp+0x30]
   1400074a3:	call   QWORD PTR [rip+0x1b9f]        # 0x140009048
   1400074a9:	mov    r9d,DWORD PTR [rsp+0x20]
   1400074ae:	lea    r8,[rip+0x2d3b]        # 0x14000a1f0
   1400074b5:	mov    edx,esi
   1400074b7:	lea    rcx,[rsp+0x30]
   1400074bc:	call   0x1400067a4
   1400074c1:	mov    rcx,QWORD PTR [rsp+0x28]
   1400074c6:	lea    rdx,[rsp+0x30]
   1400074cb:	call   QWORD PTR [rip+0x1b77]        # 0x140009048
   1400074d1:	mov    edx,edi
   1400074d3:	call   0x14000706c
   1400074d8:	mov    rcx,QWORD PTR [rsp+0x28]
   1400074dd:	test   rcx,rcx
   1400074e0:	je     0x1400074e8
   1400074e2:	call   QWORD PTR [rip+0x1b18]        # 0x140009000
   1400074e8:	cmp    ebx,0x1
   1400074eb:	ja     0x1400074f3
   1400074ed:	call   QWORD PTR [rip+0x1e95]        # 0x140009388
   1400074f3:	mov    rcx,QWORD PTR [rbp+0x1c0]
   1400074fa:	xor    rcx,rsp
   1400074fd:	call   0x140007b00
   140007502:	lea    r11,[rsp+0x2d0]
   14000750a:	mov    rbx,QWORD PTR [r11+0x10]
   14000750e:	mov    rsi,QWORD PTR [r11+0x18]
   140007512:	mov    rdi,QWORD PTR [r11+0x20]
   140007516:	mov    rsp,r11
   140007519:	pop    rbp
   14000751a:	ret    
   14000751b:	int3   
   14000751c:	int3   
   14000751d:	int3   
   14000751e:	int3   
   14000751f:	int3   
   140007520:	int3   
   140007521:	int3   
   140007522:	int3   
   140007523:	int3   
   140007524:	rex push rbx
   140007526:	sub    rsp,0x20
   14000752a:	mov    rbx,rcx
   14000752d:	call   0x1400080b4
   140007532:	lea    rax,[rip+0x2047]        # 0x140009580
   140007539:	mov    QWORD PTR [rbx],rax
   14000753c:	mov    rax,rbx
   14000753f:	add    rsp,0x20
   140007543:	pop    rbx
   140007544:	ret    
   140007545:	int3   
   140007546:	int3   
   140007547:	int3   
   140007548:	int3   
   140007549:	int3   
   14000754a:	int3   
   14000754b:	int3   
   14000754c:	rex push rbx
   14000754e:	sub    rsp,0x20
   140007552:	mov    r8d,0x1
   140007558:	lea    rdx,[rip+0x5aa1]        # 0x14000d000
   14000755f:	mov    rbx,rcx
   140007562:	call   0x1400080a8
   140007567:	lea    rax,[rip+0x2012]        # 0x140009580
   14000756e:	mov    QWORD PTR [rbx],rax
   140007571:	mov    rax,rbx
   140007574:	add    rsp,0x20
   140007578:	pop    rbx
   140007579:	ret    
   14000757a:	int3   
   14000757b:	int3   
   14000757c:	int3   
   14000757d:	int3   
   14000757e:	int3   
   14000757f:	int3   
   140007580:	lea    rax,[rip+0x1ff9]        # 0x140009580
   140007587:	mov    QWORD PTR [rcx],rax
   14000758a:	jmp    0x1400080c0
   14000758f:	int3   
   140007590:	int3   
   140007591:	int3   
   140007592:	int3   
   140007593:	int3   
   140007594:	int3   
   140007595:	int3   
   140007596:	int3   
   140007597:	int3   
   140007598:	rex push rbx
   14000759a:	sub    rsp,0x40
   14000759e:	mov    rbx,rcx
   1400075a1:	jmp    0x1400075b2
   1400075a3:	mov    rcx,rbx
   1400075a6:	call   0x1400080dc
   1400075ab:	test   eax,eax
   1400075ad:	je     0x1400075c3
   1400075af:	mov    rcx,rbx
   1400075b2:	call   QWORD PTR [rip+0x1d80]        # 0x140009338
   1400075b8:	test   rax,rax
   1400075bb:	je     0x1400075a3
   1400075bd:	add    rsp,0x40
   1400075c1:	pop    rbx
   1400075c2:	ret    
   1400075c3:	mov    eax,DWORD PTR [rip+0x5bdf]        # 0x14000d1a8
   1400075c9:	test   al,0x1
   1400075cb:	jne    0x1400075ee
   1400075cd:	or     eax,0x1
   1400075d0:	lea    rcx,[rip+0x5bb9]        # 0x14000d190
   1400075d7:	mov    DWORD PTR [rip+0x5bcb],eax        # 0x14000d1a8
   1400075dd:	call   0x14000754c
   1400075e2:	lea    rcx,[rip+0x1717]        # 0x140008d00
   1400075e9:	call   0x140007fec
   1400075ee:	lea    rdx,[rip+0x5b9b]        # 0x14000d190
   1400075f5:	lea    rcx,[rsp+0x20]
   1400075fa:	call   0x140007524
   1400075ff:	lea    rdx,[rip+0x419a]        # 0x14000b7a0
   140007606:	lea    rcx,[rsp+0x20]
   14000760b:	call   0x1400080e8
   140007610:	int3   
   140007611:	int3   
   140007612:	int3   
   140007613:	int3   
   140007614:	int3   
   140007615:	int3   
   140007616:	int3   
   140007617:	int3   
   140007618:	rex.W jmp QWORD PTR [rip+0x1d11]        # 0x140009330
   14000761f:	int3   
   140007620:	int3   
   140007621:	int3   
   140007622:	int3   
   140007623:	int3   
   140007624:	int3   
   140007625:	int3   
   140007626:	int3   
   140007627:	int3   
   140007628:	int3   
   140007629:	int3   
   14000762a:	int3   
   14000762b:	int3   
   14000762c:	int3   
   14000762d:	int3   
   14000762e:	int3   
   14000762f:	int3   
   140007630:	mov    QWORD PTR [rsp+0x8],rbx
   140007635:	push   rdi
   140007636:	sub    rsp,0x20
   14000763a:	lea    rax,[rip+0x1f3f]        # 0x140009580
   140007641:	mov    ebx,edx
   140007643:	mov    QWORD PTR [rcx],rax
   140007646:	mov    rdi,rcx
   140007649:	call   0x1400080c0
   14000764e:	test   bl,0x1
   140007651:	je     0x14000765c
   140007653:	mov    rcx,rdi
   140007656:	call   QWORD PTR [rip+0x1cd4]        # 0x140009330
   14000765c:	mov    rax,rdi
   14000765f:	mov    rbx,QWORD PTR [rsp+0x30]
   140007664:	add    rsp,0x20
   140007668:	pop    rdi
   140007669:	ret    
   14000766a:	int3   
   14000766b:	int3   
   14000766c:	int3   
   14000766d:	int3   
   14000766e:	int3   
   14000766f:	int3   
   140007670:	sub    rsp,0x48
   140007674:	mov    rdx,rcx
   140007677:	lea    rcx,[rsp+0x20]
   14000767c:	call   0x140007524
   140007681:	lea    rdx,[rip+0x4118]        # 0x14000b7a0
   140007688:	lea    rcx,[rsp+0x20]
   14000768d:	call   0x1400080e8
   140007692:	int3   
   140007693:	int3   
   140007694:	int3   
   140007695:	int3   
   140007696:	int3   
   140007697:	int3   
   140007698:	int3   
   140007699:	int3   
   14000769a:	int3   
   14000769b:	int3   
   14000769c:	rex push rbx
   14000769e:	sub    rsp,0x40
   1400076a2:	mov    rbx,rcx
   1400076a5:	jmp    0x1400076b6
   1400076a7:	mov    rcx,rbx
   1400076aa:	call   0x1400080dc
   1400076af:	test   eax,eax
   1400076b1:	je     0x1400076c7
   1400076b3:	mov    rcx,rbx
   1400076b6:	call   QWORD PTR [rip+0x1c7c]        # 0x140009338
   1400076bc:	test   rax,rax
   1400076bf:	je     0x1400076a7
   1400076c1:	add    rsp,0x40
   1400076c5:	pop    rbx
   1400076c6:	ret    
   1400076c7:	mov    eax,DWORD PTR [rip+0x5afb]        # 0x14000d1c8
   1400076cd:	test   al,0x1
   1400076cf:	jne    0x1400076f2
   1400076d1:	or     eax,0x1
   1400076d4:	lea    rcx,[rip+0x5ad5]        # 0x14000d1b0
   1400076db:	mov    DWORD PTR [rip+0x5ae7],eax        # 0x14000d1c8
   1400076e1:	call   0x14000754c
   1400076e6:	lea    rcx,[rip+0x1633]        # 0x140008d20
   1400076ed:	call   0x140007fec
   1400076f2:	lea    rdx,[rip+0x5ab7]        # 0x14000d1b0
   1400076f9:	lea    rcx,[rsp+0x20]
   1400076fe:	call   0x140007524
   140007703:	lea    rdx,[rip+0x4096]        # 0x14000b7a0
   14000770a:	lea    rcx,[rsp+0x20]
   14000770f:	call   0x1400080e8
   140007714:	int3   
   140007715:	int3   
   140007716:	int3   
   140007717:	int3   
   140007718:	int3   
   140007719:	int3   
   14000771a:	int3   
   14000771b:	int3   
   14000771c:	int3   
   14000771d:	int3   
   14000771e:	int3   
   14000771f:	int3   
   140007720:	sub    rsp,0x28
   140007724:	mov    eax,0x5a4d
   140007729:	cmp    WORD PTR [rip+0xffffffffffff88d0],ax        # 0x140000000
   140007730:	je     0x140007736
   140007732:	xor    eax,eax
   140007734:	jmp    0x140007785
   140007736:	movsxd rcx,DWORD PTR [rip+0xffffffffffff88ff]        # 0x14000003c
   14000773d:	lea    rax,[rip+0xffffffffffff88bc]        # 0x140000000
   140007744:	add    rcx,rax
   140007747:	cmp    DWORD PTR [rcx],0x4550
   14000774d:	jne    0x140007732
   14000774f:	movzx  eax,WORD PTR [rcx+0x18]
   140007753:	cmp    eax,0x10b
   140007758:	je     0x140007774
   14000775a:	cmp    eax,0x20b
   14000775f:	jne    0x140007732
   140007761:	xor    eax,eax
   140007763:	cmp    DWORD PTR [rcx+0x84],0xe
   14000776a:	jbe    0x140007785
   14000776c:	cmp    DWORD PTR [rcx+0xf8],eax
   140007772:	jmp    0x140007782
   140007774:	xor    eax,eax
   140007776:	cmp    DWORD PTR [rcx+0x74],0xe
   14000777a:	jbe    0x140007785
   14000777c:	cmp    DWORD PTR [rcx+0xe8],eax
   140007782:	setne  al
   140007785:	mov    ecx,0x2
   14000778a:	mov    DWORD PTR [rip+0x5a60],eax        # 0x14000d1f0
   140007790:	call   0x1400081c8
   140007795:	mov    ecx,eax
   140007797:	call   QWORD PTR [rip+0x1b13]        # 0x1400092b0
   14000779d:	mov    rcx,QWORD PTR [rip+0x1af4]        # 0x140009298
   1400077a4:	or     rax,0xffffffffffffffff
   1400077a8:	mov    QWORD PTR [rip+0x6209],rax        # 0x14000d9b8
   1400077af:	mov    QWORD PTR [rip+0x620a],rax        # 0x14000d9c0
   1400077b6:	mov    eax,DWORD PTR [rip+0x5fc0]        # 0x14000d77c
   1400077bc:	mov    DWORD PTR [rcx],eax
   1400077be:	mov    rcx,QWORD PTR [rip+0x1b9b]        # 0x140009360
   1400077c5:	mov    eax,DWORD PTR [rip+0x5fa5]        # 0x14000d770
   1400077cb:	mov    DWORD PTR [rcx],eax
   1400077cd:	call   0x1400017f0
   1400077d2:	cmp    DWORD PTR [rip+0x583f],0x0        # 0x14000d018
   1400077d9:	jne    0x1400077e8
   1400077db:	lea    rcx,[rip+0xffffffffffffa00e]        # 0x1400017f0
   1400077e2:	call   QWORD PTR [rip+0x1a68]        # 0x140009250
   1400077e8:	xor    eax,eax
   1400077ea:	add    rsp,0x28
   1400077ee:	ret    
   1400077ef:	int3   
   1400077f0:	int3   
   1400077f1:	int3   
   1400077f2:	int3   
   1400077f3:	int3   
   1400077f4:	int3   
   1400077f5:	int3   
   1400077f6:	int3   
   1400077f7:	int3   
   1400077f8:	int3   
   1400077f9:	int3   
   1400077fa:	int3   
   1400077fb:	int3   
   1400077fc:	int3   
   1400077fd:	int3   
   1400077fe:	int3   
   1400077ff:	int3   
   140007800:	sub    rsp,0x38
   140007804:	mov    eax,DWORD PTR [rip+0x5f6e]        # 0x14000d778
   14000780a:	lea    r8,[rip+0x59d7]        # 0x14000d1e8
   140007811:	mov    r9d,DWORD PTR [rip+0x5f5c]        # 0x14000d774
   140007818:	lea    rdx,[rip+0x59c1]        # 0x14000d1e0
   14000781f:	mov    DWORD PTR [rip+0x59cf],eax        # 0x14000d1f4
   140007825:	lea    rcx,[rip+0x59ac]        # 0x14000d1d8
   14000782c:	lea    rax,[rip+0x59c1]        # 0x14000d1f4
   140007833:	mov    QWORD PTR [rsp+0x20],rax
   140007838:	call   QWORD PTR [rip+0x1a7a]        # 0x1400092b8
   14000783e:	mov    DWORD PTR [rip+0x5998],eax        # 0x14000d1dc
   140007844:	add    rsp,0x38
   140007848:	ret    
   140007849:	int3   
   14000784a:	int3   
   14000784b:	int3   
   14000784c:	int3   
   14000784d:	int3   
   14000784e:	int3   
   14000784f:	int3   
   140007850:	mov    QWORD PTR [rsp+0x8],rbx
   140007855:	mov    QWORD PTR [rsp+0x10],rsi
   14000785a:	mov    QWORD PTR [rsp+0x18],rdi
   14000785f:	push   r12
   140007861:	push   r14
   140007863:	push   r15
   140007865:	sub    rsp,0xb0
   14000786c:	xor    r15d,r15d
   14000786f:	mov    DWORD PTR [rsp+0x20],r15d
   140007874:	lea    rcx,[rsp+0x40]
   140007879:	call   QWORD PTR [rip+0x18a1]        # 0x140009120
   14000787f:	nop
   140007880:	mov    rax,QWORD PTR gs:0x30
   140007889:	mov    rbx,QWORD PTR [rax+0x8]
   14000788d:	mov    r14d,r15d
   140007890:	xor    eax,eax
   140007892:	lock cmpxchg QWORD PTR [rip+0x610d],rbx        # 0x14000d9a8
   14000789b:	je     0x1400078b9
   14000789d:	cmp    rax,rbx
   1400078a0:	jne    0x1400078ac
   1400078a2:	mov    edi,0x1
   1400078a7:	mov    r14d,edi
   1400078aa:	jmp    0x1400078be
   1400078ac:	mov    ecx,0x3e8
   1400078b1:	call   QWORD PTR [rip+0x17f1]        # 0x1400090a8
   1400078b7:	jmp    0x140007890
   1400078b9:	mov    edi,0x1
   1400078be:	mov    eax,DWORD PTR [rip+0x60ec]        # 0x14000d9b0
   1400078c4:	cmp    eax,edi
   1400078c6:	jne    0x1400078d6
   1400078c8:	mov    esi,0x1f
   1400078cd:	mov    ecx,esi
   1400078cf:	call   0x140008214
   1400078d4:	jmp    0x140007947
   1400078d6:	mov    eax,DWORD PTR [rip+0x60d4]        # 0x14000d9b0
   1400078dc:	test   eax,eax
   1400078de:	jne    0x14000793c
   1400078e0:	mov    DWORD PTR [rip+0x60ca],edi        # 0x14000d9b0
   1400078e6:	lea    r12,[rip+0x1b5b]        # 0x140009448
   1400078ed:	lea    rbx,[rip+0x1b3c]        # 0x140009430
   1400078f4:	mov    QWORD PTR [rsp+0x30],rbx
   1400078f9:	mov    eax,r15d
   1400078fc:	mov    DWORD PTR [rsp+0x24],eax
   140007900:	cmp    rbx,r12
   140007903:	jae    0x14000792e
   140007905:	test   eax,eax
   140007907:	jne    0x140007932
   140007909:	mov    rsi,QWORD PTR [rbx]
   14000790c:	test   rsi,rsi
   14000790f:	je     0x140007923
   140007911:	mov    rcx,rsi
   140007914:	mov    rax,QWORD PTR [rip+0x1ac5]        # 0x1400093e0
   14000791b:	call   rax
   14000791d:	call   rsi
   14000791f:	mov    DWORD PTR [rsp+0x24],eax
   140007923:	add    rbx,0x8
   140007927:	mov    QWORD PTR [rsp+0x30],rbx
   14000792c:	jmp    0x140007900
   14000792e:	test   eax,eax
   140007930:	je     0x140007942
   140007932:	mov    eax,0xff
   140007937:	jmp    0x140007aa3
   14000793c:	mov    DWORD PTR [rip+0x588e],edi        # 0x14000d1d0
   140007942:	mov    esi,0x1f
   140007947:	mov    eax,DWORD PTR [rip+0x6063]        # 0x14000d9b0
   14000794d:	cmp    eax,edi
   14000794f:	jne    0x14000796e
   140007951:	lea    rdx,[rip+0x1ad0]        # 0x140009428
   140007958:	lea    rcx,[rip+0x1a91]        # 0x1400093f0
   14000795f:	call   0x1400083da
   140007964:	mov    DWORD PTR [rip+0x6042],0x2        # 0x14000d9b0
   14000796e:	test   r14d,r14d
   140007971:	jne    0x14000797d
   140007973:	mov    rax,r15
   140007976:	xchg   QWORD PTR [rip+0x602b],rax        # 0x14000d9a8
   14000797d:	cmp    QWORD PTR [rip+0x6044],r15        # 0x14000d9c8
   140007984:	je     0x1400079b4
   140007986:	lea    rcx,[rip+0x603b]        # 0x14000d9c8
   14000798d:	call   0x140008270
   140007992:	test   eax,eax
   140007994:	je     0x1400079b4
   140007996:	mov    rbx,QWORD PTR [rip+0x602b]        # 0x14000d9c8
   14000799d:	mov    rcx,rbx
   1400079a0:	mov    rax,QWORD PTR [rip+0x1a39]        # 0x1400093e0
   1400079a7:	call   rax
   1400079a9:	xor    r8d,r8d
   1400079ac:	lea    edx,[r8+0x2]
   1400079b0:	xor    ecx,ecx
   1400079b2:	call   rbx
   1400079b4:	mov    rax,QWORD PTR [rip+0x18ad]        # 0x140009268
   1400079bb:	mov    rdx,QWORD PTR [rax]
   1400079be:	test   rdx,rdx
   1400079c1:	jne    0x1400079cd
   1400079c3:	mov    eax,0xff
   1400079c8:	jmp    0x140007aa3
   1400079cd:	mov    QWORD PTR [rsp+0x28],rdx
   1400079d2:	mov    ecx,DWORD PTR [rsp+0x20]
   1400079d6:	cmp    WORD PTR [rdx],0x20
   1400079da:	ja     0x140007a54
   1400079dc:	cmp    WORD PTR [rdx],r15w
   1400079e0:	je     0x1400079e6
   1400079e2:	test   ecx,ecx
   1400079e4:	jne    0x140007a54
   1400079e6:	movzx  eax,WORD PTR [rdx]
   1400079e9:	sub    ax,di
   1400079ec:	cmp    ax,si
   1400079ef:	ja     0x1400079fc
   1400079f1:	add    rdx,0x2
   1400079f5:	mov    QWORD PTR [rsp+0x28],rdx
   1400079fa:	jmp    0x1400079e6
   1400079fc:	mov    ecx,DWORD PTR [rsp+0x7c]
   140007a00:	movzx  eax,WORD PTR [rsp+0x80]
   140007a08:	mov    r9d,0xa
   140007a0e:	and    cl,dil
   140007a11:	cmovne r9d,eax
   140007a15:	mov    r8,rdx
   140007a18:	xor    edx,edx
   140007a1a:	lea    rcx,[rip+0xffffffffffff85df]        # 0x140000000
   140007a21:	call   0x1400013f8
   140007a26:	mov    DWORD PTR [rip+0x57a0],eax        # 0x14000d1cc
   140007a2c:	cmp    DWORD PTR [rip+0x57bd],r15d        # 0x14000d1f0
   140007a33:	jne    0x140007a3d
   140007a35:	mov    ecx,eax
   140007a37:	call   QWORD PTR [rip+0x192b]        # 0x140009368
   140007a3d:	cmp    DWORD PTR [rip+0x578c],r15d        # 0x14000d1d0
   140007a44:	jne    0x140007a52
   140007a46:	call   QWORD PTR [rip+0x1924]        # 0x140009370
   140007a4c:	mov    eax,DWORD PTR [rip+0x577a]        # 0x14000d1cc
   140007a52:	jmp    0x140007aa3
   140007a54:	cmp    WORD PTR [rdx],0x22
   140007a58:	jne    0x140007a68
   140007a5a:	mov    eax,r15d
   140007a5d:	test   ecx,ecx
   140007a5f:	sete   al
   140007a62:	mov    ecx,eax
   140007a64:	mov    DWORD PTR [rsp+0x20],eax
   140007a68:	add    rdx,0x2
   140007a6c:	mov    QWORD PTR [rsp+0x28],rdx
   140007a71:	jmp    0x1400079d6
   140007a76:	mov    DWORD PTR [rip+0x5750],eax        # 0x14000d1cc
   140007a7c:	cmp    DWORD PTR [rip+0x576d],0x0        # 0x14000d1f0
   140007a83:	jne    0x140007a8e
   140007a85:	mov    ecx,eax
   140007a87:	call   QWORD PTR [rip+0x17bb]        # 0x140009248
   140007a8d:	int3   
   140007a8e:	cmp    DWORD PTR [rip+0x573b],0x0        # 0x14000d1d0
   140007a95:	jne    0x140007aa3
   140007a97:	call   QWORD PTR [rip+0x18d3]        # 0x140009370
   140007a9d:	mov    eax,DWORD PTR [rip+0x5729]        # 0x14000d1cc
   140007aa3:	lea    r11,[rsp+0xb0]
   140007aab:	mov    rbx,QWORD PTR [r11+0x20]
   140007aaf:	mov    rsi,QWORD PTR [r11+0x28]
   140007ab3:	mov    rdi,QWORD PTR [r11+0x30]
   140007ab7:	mov    rsp,r11
   140007aba:	pop    r15
   140007abc:	pop    r14
   140007abe:	pop    r12
   140007ac0:	ret    
   140007ac1:	int3   
   140007ac2:	int3   
   140007ac3:	int3   
   140007ac4:	int3   
   140007ac5:	int3   
   140007ac6:	int3   
   140007ac7:	int3   
   140007ac8:	int3   
   140007ac9:	int3   
   140007aca:	int3   
   140007acb:	int3   
   140007acc:	int3   
   140007acd:	int3   
   140007ace:	int3   
   140007acf:	int3   
   140007ad0:	sub    rsp,0x28
   140007ad4:	call   0x140008304
   140007ad9:	add    rsp,0x28
   140007add:	jmp    0x140007850
   140007ae2:	int3   
   140007ae3:	int3   
   140007ae4:	int3   
   140007ae5:	int3   
   140007ae6:	int3   
   140007ae7:	int3   
   140007ae8:	int3   
   140007ae9:	int3   
   140007aea:	int3   
   140007aeb:	int3   
   140007aec:	int3   
   140007aed:	int3   
   140007aee:	int3   
   140007aef:	int3   
   140007af0:	int3   
   140007af1:	int3   
   140007af2:	int3   
   140007af3:	int3   
   140007af4:	int3   
   140007af5:	int3   
   140007af6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007b00:	cmp    rcx,QWORD PTR [rip+0x5519]        # 0x14000d020
   140007b07:	jne    0x140007b19
   140007b09:	rol    rcx,0x10
   140007b0d:	test   cx,0xffff
   140007b12:	jne    0x140007b15
   140007b14:	ret    
   140007b15:	ror    rcx,0x10
   140007b19:	jmp    0x140007cd0
   140007b1e:	int3   
   140007b1f:	int3   
   140007b20:	int3   
   140007b21:	int3   
   140007b22:	int3   
   140007b23:	int3   
   140007b24:	mov    rax,rsp
   140007b27:	mov    QWORD PTR [rax+0x20],r9
   140007b2b:	mov    DWORD PTR [rax+0x18],r8d
   140007b2f:	mov    QWORD PTR [rax+0x10],rdx
   140007b33:	push   rbx
   140007b34:	push   rsi
   140007b35:	push   rdi
   140007b36:	push   r14
   140007b38:	sub    rsp,0x38
   140007b3c:	mov    r14,r9
   140007b3f:	movsxd rbx,r8d
   140007b42:	mov    rsi,rdx
   140007b45:	and    DWORD PTR [rax-0x38],0x0
   140007b49:	mov    rdi,rbx
   140007b4c:	imul   rdi,rdx
   140007b50:	add    rdi,rcx
   140007b53:	mov    QWORD PTR [rax+0x8],rdi
   140007b57:	sub    ebx,0x1
   140007b5a:	mov    DWORD PTR [rsp+0x70],ebx
   140007b5e:	js     0x140007b7c
   140007b60:	sub    rdi,rsi
   140007b63:	mov    QWORD PTR [rsp+0x60],rdi
   140007b68:	mov    rcx,r14
   140007b6b:	mov    rax,QWORD PTR [rip+0x186e]        # 0x1400093e0
   140007b72:	call   rax
   140007b74:	mov    rcx,rdi
   140007b77:	call   r14
   140007b7a:	jmp    0x140007b57
   140007b7c:	mov    DWORD PTR [rsp+0x20],0x1
   140007b84:	add    rsp,0x38
   140007b88:	pop    r14
   140007b8a:	pop    rdi
   140007b8b:	pop    rsi
   140007b8c:	pop    rbx
   140007b8d:	ret    
   140007b8e:	int3   
   140007b8f:	int3   
   140007b90:	int3   
   140007b91:	int3   
   140007b92:	int3   
   140007b93:	int3   
   140007b94:	mov    QWORD PTR [rsp+0x10],rbx
   140007b99:	mov    DWORD PTR [rsp+0x18],r8d
   140007b9e:	mov    QWORD PTR [rsp+0x8],rcx
   140007ba3:	push   rsi
   140007ba4:	push   rdi
   140007ba5:	push   r14
   140007ba7:	sub    rsp,0x40
   140007bab:	mov    rsi,r9
   140007bae:	mov    ebx,r8d
   140007bb1:	mov    r14,rdx
   140007bb4:	mov    rdi,rcx
   140007bb7:	sub    ebx,0x1
   140007bba:	mov    DWORD PTR [rsp+0x70],ebx
   140007bbe:	js     0x140007bd8
   140007bc0:	sub    rdi,r14
   140007bc3:	mov    QWORD PTR [rsp+0x60],rdi
   140007bc8:	mov    rcx,rsi
   140007bcb:	call   QWORD PTR [rip+0x180f]        # 0x1400093e0
   140007bd1:	mov    rcx,rdi
   140007bd4:	call   rsi
   140007bd6:	jmp    0x140007bb7
   140007bd8:	jmp    0x140007bda
   140007bda:	mov    rbx,QWORD PTR [rsp+0x68]
   140007bdf:	add    rsp,0x40
   140007be3:	pop    r14
   140007be5:	pop    rdi
   140007be6:	pop    rsi
   140007be7:	ret    
   140007be8:	int3   
   140007be9:	int3   
   140007bea:	int3   
   140007beb:	int3   
   140007bec:	int3   
   140007bed:	int3   
   140007bee:	int3   
   140007bef:	int3   
   140007bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140007bf5:	push   rdi
   140007bf6:	sub    rsp,0x20
   140007bfa:	mov    ebx,edx
   140007bfc:	mov    rdi,rcx
   140007bff:	call   QWORD PTR [rip+0x174b]        # 0x140009350
   140007c05:	test   bl,0x1
   140007c08:	je     0x140007c12
   140007c0a:	mov    rcx,rdi
   140007c0d:	call   0x140007618
   140007c12:	mov    rax,rdi
   140007c15:	mov    rbx,QWORD PTR [rsp+0x30]
   140007c1a:	add    rsp,0x20
   140007c1e:	pop    rdi
   140007c1f:	ret    
   140007c20:	int3   
   140007c21:	int3   
   140007c22:	int3   
   140007c23:	int3   
   140007c24:	int3   
   140007c25:	int3   
   140007c26:	int3   
   140007c27:	int3   
   140007c28:	int3   
   140007c29:	int3   
   140007c2a:	int3   
   140007c2b:	int3   
   140007c2c:	int3   
   140007c2d:	int3   
   140007c2e:	int3   
   140007c2f:	int3   
   140007c30:	sub    rsp,0x38
   140007c34:	mov    r9,rdx
   140007c37:	test   rdx,rdx
   140007c3a:	je     0x140007c71
   140007c3c:	xor    edx,edx
   140007c3e:	lea    rax,[rdx-0x20]
   140007c42:	div    r9
   140007c45:	cmp    rax,r8
   140007c48:	jae    0x140007c71
   140007c4a:	call   0x1400083f2
   140007c4f:	and    QWORD PTR [rsp+0x20],0x0
   140007c55:	xor    r9d,r9d
   140007c58:	xor    r8d,r8d
   140007c5b:	xor    edx,edx
   140007c5d:	xor    ecx,ecx
   140007c5f:	mov    DWORD PTR [rax],0xc
   140007c65:	call   0x140008400
   140007c6a:	xor    eax,eax
   140007c6c:	add    rsp,0x38
   140007c70:	ret    
   140007c71:	imul   r9,r8
   140007c75:	mov    rdx,r9
   140007c78:	add    rsp,0x38
   140007c7c:	jmp    0x1400084d6
   140007c81:	int3   
   140007c82:	int3   
   140007c83:	int3   
   140007c84:	int3   
   140007c85:	int3   
   140007c86:	int3   
   140007c87:	int3   
   140007c88:	rex push rbx
   140007c8a:	sub    rsp,0x20
   140007c8e:	mov    rbx,rcx
   140007c91:	xor    ecx,ecx
   140007c93:	call   QWORD PTR [rip+0x145f]        # 0x1400090f8
   140007c99:	mov    rcx,rbx
   140007c9c:	call   QWORD PTR [rip+0x145e]        # 0x140009100
   140007ca2:	call   QWORD PTR [rip+0x1430]        # 0x1400090d8
   140007ca8:	mov    rcx,rax
   140007cab:	mov    edx,0xc0000409
   140007cb0:	add    rsp,0x20
   140007cb4:	pop    rbx
   140007cb5:	rex.W jmp QWORD PTR [rip+0x1434]        # 0x1400090f0
   140007cbc:	int3   
   140007cbd:	int3   
   140007cbe:	int3   
   140007cbf:	int3   
   140007cc0:	int3   
   140007cc1:	int3   
   140007cc2:	int3   
   140007cc3:	int3   
   140007cc4:	int3   
   140007cc5:	int3   
   140007cc6:	int3   
   140007cc7:	int3   
   140007cc8:	int3   
   140007cc9:	int3   
   140007cca:	int3   
   140007ccb:	int3   
   140007ccc:	int3   
   140007ccd:	int3   
   140007cce:	int3   
   140007ccf:	int3   
   140007cd0:	mov    QWORD PTR [rsp+0x8],rcx
   140007cd5:	sub    rsp,0x88
   140007cdc:	lea    rcx,[rip+0x55bd]        # 0x14000d2a0
   140007ce3:	call   QWORD PTR [rip+0x142f]        # 0x140009118
   140007ce9:	mov    rax,QWORD PTR [rip+0x56a8]        # 0x14000d398
   140007cf0:	mov    QWORD PTR [rsp+0x48],rax
   140007cf5:	xor    r8d,r8d
   140007cf8:	lea    rdx,[rsp+0x50]
   140007cfd:	mov    rcx,QWORD PTR [rsp+0x48]
   140007d02:	call   QWORD PTR [rip+0x1408]        # 0x140009110
   140007d08:	mov    QWORD PTR [rsp+0x40],rax
   140007d0d:	cmp    QWORD PTR [rsp+0x40],0x0
   140007d13:	je     0x140007d57
   140007d15:	mov    QWORD PTR [rsp+0x38],0x0
   140007d1e:	lea    rax,[rsp+0x58]
   140007d23:	mov    QWORD PTR [rsp+0x30],rax
   140007d28:	lea    rax,[rsp+0x60]
   140007d2d:	mov    QWORD PTR [rsp+0x28],rax
   140007d32:	lea    rax,[rip+0x5567]        # 0x14000d2a0
   140007d39:	mov    QWORD PTR [rsp+0x20],rax
   140007d3e:	mov    r9,QWORD PTR [rsp+0x40]
   140007d43:	mov    r8,QWORD PTR [rsp+0x48]
   140007d48:	mov    rdx,QWORD PTR [rsp+0x50]
   140007d4d:	xor    ecx,ecx
   140007d4f:	call   QWORD PTR [rip+0x13b3]        # 0x140009108
   140007d55:	jmp    0x140007d7a
   140007d57:	mov    rax,QWORD PTR [rip+0x55da]        # 0x14000d338
   140007d5e:	mov    rax,QWORD PTR [rax]
   140007d61:	mov    QWORD PTR [rip+0x5630],rax        # 0x14000d398
   140007d68:	mov    rax,QWORD PTR [rip+0x55c9]        # 0x14000d338
   140007d6f:	add    rax,0x8
   140007d73:	mov    QWORD PTR [rip+0x55be],rax        # 0x14000d338
   140007d7a:	mov    rax,QWORD PTR [rip+0x5617]        # 0x14000d398
   140007d81:	mov    QWORD PTR [rip+0x5488],rax        # 0x14000d210
   140007d88:	mov    rax,QWORD PTR [rsp+0x90]
   140007d90:	mov    QWORD PTR [rip+0x5589],rax        # 0x14000d320
   140007d97:	mov    DWORD PTR [rip+0x545f],0xc0000409        # 0x14000d200
   140007da1:	mov    DWORD PTR [rip+0x5459],0x1        # 0x14000d204
   140007dab:	mov    DWORD PTR [rip+0x5463],0x3        # 0x14000d218
   140007db5:	mov    eax,0x8
   140007dba:	imul   rax,rax,0x0
   140007dbe:	lea    rcx,[rip+0x545b]        # 0x14000d220
   140007dc5:	mov    QWORD PTR [rcx+rax*1],0x2
   140007dcd:	mov    eax,0x8
   140007dd2:	imul   rax,rax,0x1
   140007dd6:	lea    rcx,[rip+0x5443]        # 0x14000d220
   140007ddd:	mov    rdx,QWORD PTR [rip+0x523c]        # 0x14000d020
   140007de4:	mov    QWORD PTR [rcx+rax*1],rdx
   140007de8:	mov    eax,0x8
   140007ded:	imul   rax,rax,0x2
   140007df1:	lea    rcx,[rip+0x5428]        # 0x14000d220
   140007df8:	mov    rdx,QWORD PTR [rip+0x5229]        # 0x14000d028
   140007dff:	mov    QWORD PTR [rcx+rax*1],rdx
   140007e03:	mov    eax,0x8
   140007e08:	imul   rax,rax,0x0
   140007e0c:	mov    rcx,QWORD PTR [rip+0x520d]        # 0x14000d020
   140007e13:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140007e18:	mov    eax,0x8
   140007e1d:	imul   rax,rax,0x1
   140007e21:	mov    rcx,QWORD PTR [rip+0x5200]        # 0x14000d028
   140007e28:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140007e2d:	lea    rcx,[rip+0x176c]        # 0x1400095a0
   140007e34:	call   0x140007c88
   140007e39:	add    rsp,0x88
   140007e40:	ret    
   140007e41:	int3   
   140007e42:	int3   
   140007e43:	int3   
   140007e44:	int3   
   140007e45:	int3   
   140007e46:	int3   
   140007e47:	int3   
   140007e48:	sub    rsp,0x78
   140007e4c:	lea    rcx,[rip+0x544d]        # 0x14000d2a0
   140007e53:	call   QWORD PTR [rip+0x12bf]        # 0x140009118
   140007e59:	mov    rax,QWORD PTR [rip+0x5538]        # 0x14000d398
   140007e60:	mov    QWORD PTR [rsp+0x48],rax
   140007e65:	xor    r8d,r8d
   140007e68:	lea    rdx,[rsp+0x50]
   140007e6d:	mov    rcx,QWORD PTR [rsp+0x48]
   140007e72:	call   QWORD PTR [rip+0x1298]        # 0x140009110
   140007e78:	mov    QWORD PTR [rsp+0x40],rax
   140007e7d:	cmp    QWORD PTR [rsp+0x40],0x0
   140007e83:	je     0x140007ec7
   140007e85:	mov    QWORD PTR [rsp+0x38],0x0
   140007e8e:	lea    rax,[rsp+0x58]
   140007e93:	mov    QWORD PTR [rsp+0x30],rax
   140007e98:	lea    rax,[rsp+0x60]
   140007e9d:	mov    QWORD PTR [rsp+0x28],rax
   140007ea2:	lea    rax,[rip+0x53f7]        # 0x14000d2a0
   140007ea9:	mov    QWORD PTR [rsp+0x20],rax
   140007eae:	mov    r9,QWORD PTR [rsp+0x40]
   140007eb3:	mov    r8,QWORD PTR [rsp+0x48]
   140007eb8:	mov    rdx,QWORD PTR [rsp+0x50]
   140007ebd:	xor    ecx,ecx
   140007ebf:	call   QWORD PTR [rip+0x1243]        # 0x140009108
   140007ec5:	jmp    0x140007eea
   140007ec7:	mov    rax,QWORD PTR [rip+0x546a]        # 0x14000d338
   140007ece:	mov    rax,QWORD PTR [rax]
   140007ed1:	mov    QWORD PTR [rip+0x54c0],rax        # 0x14000d398
   140007ed8:	mov    rax,QWORD PTR [rip+0x5459]        # 0x14000d338
   140007edf:	add    rax,0x8
   140007ee3:	mov    QWORD PTR [rip+0x544e],rax        # 0x14000d338
   140007eea:	mov    rax,QWORD PTR [rip+0x54a7]        # 0x14000d398
   140007ef1:	mov    QWORD PTR [rip+0x5318],rax        # 0x14000d210
   140007ef8:	mov    DWORD PTR [rip+0x52fe],0xc0000409        # 0x14000d200
   140007f02:	mov    DWORD PTR [rip+0x52f8],0x1        # 0x14000d204
   140007f0c:	mov    DWORD PTR [rip+0x5302],0x1        # 0x14000d218
   140007f16:	mov    eax,0x8
   140007f1b:	imul   rax,rax,0x0
   140007f1f:	lea    rcx,[rip+0x52fa]        # 0x14000d220
   140007f26:	mov    QWORD PTR [rcx+rax*1],0x8
   140007f2e:	lea    rcx,[rip+0x166b]        # 0x1400095a0
   140007f35:	call   0x140007c88
   140007f3a:	add    rsp,0x78
   140007f3e:	ret    
   140007f3f:	int3   
   140007f40:	int3   
   140007f41:	int3   
   140007f42:	int3   
   140007f43:	int3   
   140007f44:	int3   
   140007f45:	int3   
   140007f46:	int3   
   140007f47:	int3   
   140007f48:	mov    QWORD PTR [rsp+0x8],rbx
   140007f4d:	push   rdi
   140007f4e:	sub    rsp,0x20
   140007f52:	mov    rdi,rcx
   140007f55:	mov    rax,QWORD PTR [rip+0x5a64]        # 0x14000d9c0
   140007f5c:	mov    QWORD PTR [rsp+0x38],rax
   140007f61:	cmp    rax,0xffffffffffffffff
   140007f65:	jne    0x140007f7e
   140007f67:	mov    rbx,QWORD PTR [rip+0x1312]        # 0x140009280
   140007f6e:	mov    rcx,rbx
   140007f71:	call   QWORD PTR [rip+0x1469]        # 0x1400093e0
   140007f77:	mov    rcx,rdi
   140007f7a:	call   rbx
   140007f7c:	jmp    0x140007fdb
   140007f7e:	mov    ecx,0x8
   140007f83:	call   0x1400084e2
   140007f88:	nop
   140007f89:	mov    rax,QWORD PTR [rip+0x5a30]        # 0x14000d9c0
   140007f90:	mov    QWORD PTR [rsp+0x38],rax
   140007f95:	mov    rax,QWORD PTR [rip+0x5a1c]        # 0x14000d9b8
   140007f9c:	mov    QWORD PTR [rsp+0x40],rax
   140007fa1:	lea    r8,[rsp+0x40]
   140007fa6:	lea    rdx,[rsp+0x38]
   140007fab:	mov    rcx,rdi
   140007fae:	call   0x1400084fa
   140007fb3:	mov    rbx,rax
   140007fb6:	mov    rdx,QWORD PTR [rsp+0x38]
   140007fbb:	mov    QWORD PTR [rip+0x59fe],rdx        # 0x14000d9c0
   140007fc2:	mov    rdx,QWORD PTR [rsp+0x40]
   140007fc7:	mov    QWORD PTR [rip+0x59ea],rdx        # 0x14000d9b8
   140007fce:	mov    ecx,0x8
   140007fd3:	call   0x1400084ee
   140007fd8:	mov    rax,rbx
   140007fdb:	mov    rbx,QWORD PTR [rsp+0x30]
   140007fe0:	add    rsp,0x20
   140007fe4:	pop    rdi
   140007fe5:	ret    
   140007fe6:	int3   
   140007fe7:	int3   
   140007fe8:	int3   
   140007fe9:	int3   
   140007fea:	int3   
   140007feb:	int3   
   140007fec:	sub    rsp,0x28
   140007ff0:	call   0x140007f48
   140007ff5:	neg    rax
   140007ff8:	sbb    eax,eax
   140007ffa:	neg    eax
   140007ffc:	dec    eax
   140007ffe:	add    rsp,0x28
   140008002:	ret    
   140008003:	int3   
   140008004:	int3   
   140008005:	int3   
   140008006:	int3   
   140008007:	int3   
   140008008:	int3   
   140008009:	int3   
   14000800a:	int3   
   14000800b:	int3   
   14000800c:	mov    rax,rsp
   14000800f:	mov    QWORD PTR [rax+0x18],rbx
   140008013:	mov    QWORD PTR [rax+0x20],rsi
   140008017:	mov    QWORD PTR [rax+0x10],rdx
   14000801b:	mov    QWORD PTR [rax+0x8],rcx
   14000801f:	push   rdi
   140008020:	push   r14
   140008022:	push   r15
   140008024:	sub    rsp,0x30
   140008028:	mov    r14,r9
   14000802b:	mov    r15d,r8d
   14000802e:	mov    rsi,rdx
   140008031:	mov    rdi,rcx
   140008034:	xor    ebx,ebx
   140008036:	mov    DWORD PTR [rax-0x28],ebx
   140008039:	mov    DWORD PTR [rax-0x24],ebx
   14000803c:	mov    DWORD PTR [rsp+0x20],ebx
   140008040:	cmp    ebx,r15d
   140008043:	jge    0x140008060
   140008045:	mov    rcx,r14
   140008048:	call   QWORD PTR [rip+0x1392]        # 0x1400093e0
   14000804e:	mov    rcx,rdi
   140008051:	call   r14
   140008054:	add    rdi,rsi
   140008057:	mov    QWORD PTR [rsp+0x50],rdi
   14000805c:	inc    ebx
   14000805e:	jmp    0x14000803c
   140008060:	mov    DWORD PTR [rsp+0x24],0x1
   140008068:	mov    rbx,QWORD PTR [rsp+0x60]
   14000806d:	mov    rsi,QWORD PTR [rsp+0x68]
   140008072:	add    rsp,0x30
   140008076:	pop    r15
   140008078:	pop    r14
   14000807a:	pop    rdi
   14000807b:	ret    
   14000807c:	int3   
   14000807d:	int3   
   14000807e:	int3   
   14000807f:	int3   
   140008080:	int3   
   140008081:	int3   
   140008082:	int3   
   140008083:	int3   
   140008084:	int3   
   140008085:	int3   
   140008086:	int3   
   140008087:	int3   
   140008088:	int3   
   140008089:	int3   
   14000808a:	int3   
   14000808b:	int3   
   14000808c:	int3   
   14000808d:	int3   
   14000808e:	int3   
   14000808f:	int3   
   140008090:	jmp    QWORD PTR [rip+0x127a]        # 0x140009310
   140008096:	int3   
   140008097:	int3   
   140008098:	int3   
   140008099:	int3   
   14000809a:	int3   
   14000809b:	int3   
   14000809c:	jmp    QWORD PTR [rip+0x125e]        # 0x140009300
   1400080a2:	int3   
   1400080a3:	int3   
   1400080a4:	int3   
   1400080a5:	int3   
   1400080a6:	int3   
   1400080a7:	int3   
   1400080a8:	jmp    QWORD PTR [rip+0x124a]        # 0x1400092f8
   1400080ae:	int3   
   1400080af:	int3   
   1400080b0:	int3   
   1400080b1:	int3   
   1400080b2:	int3   
   1400080b3:	int3   
   1400080b4:	jmp    QWORD PTR [rip+0x1236]        # 0x1400092f0
   1400080ba:	int3   
   1400080bb:	int3   
   1400080bc:	int3   
   1400080bd:	int3   
   1400080be:	int3   
   1400080bf:	int3   
   1400080c0:	jmp    QWORD PTR [rip+0x1222]        # 0x1400092e8
   1400080c6:	int3   
   1400080c7:	int3   
   1400080c8:	int3   
   1400080c9:	int3   
   1400080ca:	int3   
   1400080cb:	int3   
   1400080cc:	int3   
   1400080cd:	int3   
   1400080ce:	int3   
   1400080cf:	int3   
   1400080d0:	jmp    QWORD PTR [rip+0x120a]        # 0x1400092e0
   1400080d6:	int3   
   1400080d7:	int3   
   1400080d8:	int3   
   1400080d9:	int3   
   1400080da:	int3   
   1400080db:	int3   
   1400080dc:	jmp    QWORD PTR [rip+0x11f6]        # 0x1400092d8
   1400080e2:	int3   
   1400080e3:	int3   
   1400080e4:	int3   
   1400080e5:	int3   
   1400080e6:	int3   
   1400080e7:	int3   
   1400080e8:	jmp    QWORD PTR [rip+0x11e2]        # 0x1400092d0
   1400080ee:	int3   
   1400080ef:	int3   
   1400080f0:	int3   
   1400080f1:	int3   
   1400080f2:	int3   
   1400080f3:	int3   
   1400080f4:	int3   
   1400080f5:	int3   
   1400080f6:	int3   
   1400080f7:	int3   
   1400080f8:	int3   
   1400080f9:	int3   
   1400080fa:	int3   
   1400080fb:	int3   
   1400080fc:	int3   
   1400080fd:	int3   
   1400080fe:	int3   
   1400080ff:	int3   
   140008100:	sub    rsp,0x28
   140008104:	mov    rax,QWORD PTR [rcx]
   140008107:	cmp    DWORD PTR [rax],0xe06d7363
   14000810d:	jne    0x140008132
   14000810f:	cmp    DWORD PTR [rax+0x18],0x4
   140008113:	jne    0x140008132
   140008115:	mov    ecx,DWORD PTR [rax+0x20]
   140008118:	lea    eax,[rcx-0x19930520]
   14000811e:	cmp    eax,0x2
   140008121:	jbe    0x14000812b
   140008123:	cmp    ecx,0x1994000
   140008129:	jne    0x140008132
   14000812b:	call   QWORD PTR [rip+0x1227]        # 0x140009358
   140008131:	int3   
   140008132:	xor    eax,eax
   140008134:	add    rsp,0x28
   140008138:	ret    
   140008139:	int3   
   14000813a:	int3   
   14000813b:	int3   
   14000813c:	int3   
   14000813d:	int3   
   14000813e:	int3   
   14000813f:	int3   
   140008140:	sub    rsp,0x28
   140008144:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140008100
   14000814b:	call   QWORD PTR [rip+0xfa7]        # 0x1400090f8
   140008151:	xor    eax,eax
   140008153:	add    rsp,0x28
   140008157:	ret    
   140008158:	int3   
   140008159:	int3   
   14000815a:	int3   
   14000815b:	int3   
   14000815c:	int3   
   14000815d:	int3   
   14000815e:	jmp    QWORD PTR [rip+0x1164]        # 0x1400092c8
   140008164:	int3   
   140008165:	int3   
   140008166:	int3   
   140008167:	int3   
   140008168:	int3   
   140008169:	int3   
   14000816a:	int3   
   14000816b:	int3   
   14000816c:	sub    rsp,0x18
   140008170:	xor    edx,edx
   140008172:	lea    rax,[rcx-0x1]
   140008176:	cmp    rax,0xfffffffffffffffd
   14000817a:	ja     0x1400081b8
   14000817c:	mov    eax,0x5a4d
   140008181:	cmp    WORD PTR [rcx],ax
   140008184:	jne    0x1400081b0
   140008186:	cmp    DWORD PTR [rcx+0x3c],edx
   140008189:	jl     0x1400081b0
   14000818b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140008192:	jae    0x1400081b0
   140008194:	movsxd rax,DWORD PTR [rcx+0x3c]
   140008198:	add    rax,rcx
   14000819b:	mov    QWORD PTR [rsp],rax
   14000819f:	cmp    DWORD PTR [rax],0x4550
   1400081a5:	cmovne rax,rdx
   1400081a9:	mov    rdx,rax
   1400081ac:	mov    QWORD PTR [rsp],rax
   1400081b0:	jmp    0x1400081b8
   1400081b2:	xor    edx,edx
   1400081b4:	mov    QWORD PTR [rsp],rdx
   1400081b8:	mov    rax,rdx
   1400081bb:	add    rsp,0x18
   1400081bf:	ret    
   1400081c0:	int3   
   1400081c1:	int3   
   1400081c2:	int3   
   1400081c3:	int3   
   1400081c4:	int3   
   1400081c5:	int3   
   1400081c6:	int3   
   1400081c7:	int3   
   1400081c8:	rex push rbx
   1400081ca:	sub    rsp,0x20
   1400081ce:	mov    ebx,ecx
   1400081d0:	xor    ecx,ecx
   1400081d2:	call   QWORD PTR [rip+0xf80]        # 0x140009158
   1400081d8:	test   rax,rax
   1400081db:	je     0x140008205
   1400081dd:	mov    rcx,rax
   1400081e0:	call   0x14000816c
   1400081e5:	test   rax,rax
   1400081e8:	je     0x140008205
   1400081ea:	mov    ecx,0x2
   1400081ef:	cmp    WORD PTR [rax+0x5c],cx
   1400081f3:	jne    0x1400081f9
   1400081f5:	mov    eax,ecx
   1400081f7:	jmp    0x140008207
   1400081f9:	cmp    WORD PTR [rax+0x5c],0x3
   1400081fe:	mov    eax,0x1
   140008203:	je     0x140008207
   140008205:	mov    eax,ebx
   140008207:	add    rsp,0x20
   14000820b:	pop    rbx
   14000820c:	ret    
   14000820d:	int3   
   14000820e:	int3   
   14000820f:	int3   
   140008210:	int3   
   140008211:	int3   
   140008212:	int3   
   140008213:	int3   
   140008214:	jmp    QWORD PTR [rip+0x10a6]        # 0x1400092c0
   14000821a:	int3   
   14000821b:	int3   
   14000821c:	int3   
   14000821d:	int3   
   14000821e:	int3   
   14000821f:	int3   
   140008220:	movsxd r8,DWORD PTR [rcx+0x3c]
   140008224:	xor    r9d,r9d
   140008227:	add    r8,rcx
   14000822a:	mov    r10,rdx
   14000822d:	movzx  eax,WORD PTR [r8+0x14]
   140008232:	movzx  r11d,WORD PTR [r8+0x6]
   140008237:	add    rax,0x18
   14000823b:	add    rax,r8
   14000823e:	test   r11d,r11d
   140008241:	je     0x140008261
   140008243:	mov    edx,DWORD PTR [rax+0xc]
   140008246:	cmp    r10,rdx
   140008249:	jb     0x140008255
   14000824b:	mov    ecx,DWORD PTR [rax+0x8]
   14000824e:	add    ecx,edx
   140008250:	cmp    r10,rcx
   140008253:	jb     0x140008263
   140008255:	inc    r9d
   140008258:	add    rax,0x28
   14000825c:	cmp    r9d,r11d
   14000825f:	jb     0x140008243
   140008261:	xor    eax,eax
   140008263:	ret    
   140008264:	int3   
   140008265:	int3   
   140008266:	int3   
   140008267:	int3   
   140008268:	int3   
   140008269:	int3   
   14000826a:	int3   
   14000826b:	int3   
   14000826c:	int3   
   14000826d:	int3   
   14000826e:	int3   
   14000826f:	int3   
   140008270:	mov    QWORD PTR [rsp+0x8],rbx
   140008275:	push   rdi
   140008276:	sub    rsp,0x20
   14000827a:	mov    rbx,rcx
   14000827d:	lea    rdi,[rip+0xffffffffffff7d7c]        # 0x140000000
   140008284:	mov    rcx,rdi
   140008287:	call   0x1400082d0
   14000828c:	test   eax,eax
   14000828e:	je     0x1400082b2
   140008290:	sub    rbx,rdi
   140008293:	mov    rdx,rbx
   140008296:	mov    rcx,rdi
   140008299:	call   0x140008220
   14000829e:	test   rax,rax
   1400082a1:	je     0x1400082b2
   1400082a3:	mov    eax,DWORD PTR [rax+0x24]
   1400082a6:	shr    eax,0x1f
   1400082a9:	not    eax
   1400082ab:	and    eax,0x1
   1400082ae:	jmp    0x1400082b2
   1400082b0:	xor    eax,eax
   1400082b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400082b7:	add    rsp,0x20
   1400082bb:	pop    rdi
   1400082bc:	ret    
   1400082bd:	int3   
   1400082be:	int3   
   1400082bf:	int3   
   1400082c0:	int3   
   1400082c1:	int3   
   1400082c2:	int3   
   1400082c3:	int3   
   1400082c4:	int3   
   1400082c5:	int3   
   1400082c6:	int3   
   1400082c7:	int3   
   1400082c8:	int3   
   1400082c9:	int3   
   1400082ca:	int3   
   1400082cb:	int3   
   1400082cc:	int3   
   1400082cd:	int3   
   1400082ce:	int3   
   1400082cf:	int3   
   1400082d0:	mov    rax,rcx
   1400082d3:	mov    ecx,0x5a4d
   1400082d8:	cmp    WORD PTR [rax],cx
   1400082db:	je     0x1400082e0
   1400082dd:	xor    eax,eax
   1400082df:	ret    
   1400082e0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400082e4:	add    rcx,rax
   1400082e7:	xor    eax,eax
   1400082e9:	cmp    DWORD PTR [rcx],0x4550
   1400082ef:	jne    0x1400082fd
   1400082f1:	mov    edx,0x20b
   1400082f6:	cmp    WORD PTR [rcx+0x18],dx
   1400082fa:	sete   al
   1400082fd:	ret    
   1400082fe:	int3   
   1400082ff:	int3   
   140008300:	int3   
   140008301:	int3   
   140008302:	int3   
   140008303:	int3   
   140008304:	mov    QWORD PTR [rsp+0x20],rbx
   140008309:	push   rbp
   14000830a:	mov    rbp,rsp
   14000830d:	sub    rsp,0x20
   140008311:	and    QWORD PTR [rbp+0x18],0x0
   140008316:	movabs rbx,0x2b992ddfa232
   140008320:	mov    rax,QWORD PTR [rip+0x4cf9]        # 0x14000d020
   140008327:	cmp    rax,rbx
   14000832a:	jne    0x1400083bf
   140008330:	lea    rcx,[rbp+0x18]
   140008334:	call   QWORD PTR [rip+0xe4e]        # 0x140009188
   14000833a:	mov    rax,QWORD PTR [rbp+0x18]
   14000833e:	mov    QWORD PTR [rbp+0x10],rax
   140008342:	call   QWORD PTR [rip+0xe50]        # 0x140009198
   140008348:	mov    eax,eax
   14000834a:	xor    QWORD PTR [rbp+0x10],rax
   14000834e:	call   QWORD PTR [rip+0xd4c]        # 0x1400090a0
   140008354:	mov    eax,eax
   140008356:	xor    QWORD PTR [rbp+0x10],rax
   14000835a:	call   QWORD PTR [rip+0xe30]        # 0x140009190
   140008360:	mov    eax,eax
   140008362:	shl    rax,0x18
   140008366:	xor    QWORD PTR [rbp+0x10],rax
   14000836a:	call   QWORD PTR [rip+0xe20]        # 0x140009190
   140008370:	mov    eax,eax
   140008372:	lea    rcx,[rbp+0x10]
   140008376:	xor    rax,QWORD PTR [rbp+0x10]
   14000837a:	xor    rax,rcx
   14000837d:	lea    rcx,[rbp+0x20]
   140008381:	mov    QWORD PTR [rbp+0x10],rax
   140008385:	call   QWORD PTR [rip+0xd5d]        # 0x1400090e8
   14000838b:	mov    eax,DWORD PTR [rbp+0x20]
   14000838e:	movabs rcx,0xffffffffffff
   140008398:	shl    rax,0x20
   14000839c:	xor    rax,QWORD PTR [rbp+0x20]
   1400083a0:	xor    rax,QWORD PTR [rbp+0x10]
   1400083a4:	and    rax,rcx
   1400083a7:	movabs rcx,0x2b992ddfa233
   1400083b1:	cmp    rax,rbx
   1400083b4:	cmove  rax,rcx
   1400083b8:	mov    QWORD PTR [rip+0x4c61],rax        # 0x14000d020
   1400083bf:	mov    rbx,QWORD PTR [rsp+0x48]
   1400083c4:	not    rax
   1400083c7:	mov    QWORD PTR [rip+0x4c5a],rax        # 0x14000d028
   1400083ce:	add    rsp,0x20
   1400083d2:	pop    rbp
   1400083d3:	ret    
   1400083d4:	int3   
   1400083d5:	int3   
   1400083d6:	int3   
   1400083d7:	int3   
   1400083d8:	int3   
   1400083d9:	int3   
   1400083da:	jmp    QWORD PTR [rip+0xe78]        # 0x140009258
   1400083e0:	int3   
   1400083e1:	int3   
   1400083e2:	int3   
   1400083e3:	int3   
   1400083e4:	int3   
   1400083e5:	int3   
   1400083e6:	jmp    QWORD PTR [rip+0xe74]        # 0x140009260
   1400083ec:	int3   
   1400083ed:	int3   
   1400083ee:	int3   
   1400083ef:	int3   
   1400083f0:	int3   
   1400083f1:	int3   
   1400083f2:	jmp    QWORD PTR [rip+0xf50]        # 0x140009348
   1400083f8:	int3   
   1400083f9:	int3   
   1400083fa:	int3   
   1400083fb:	int3   
   1400083fc:	int3   
   1400083fd:	int3   
   1400083fe:	int3   
   1400083ff:	int3   
   140008400:	jmp    0x14000840c
   140008405:	int3   
   140008406:	int3   
   140008407:	int3   
   140008408:	int3   
   140008409:	int3   
   14000840a:	int3   
   14000840b:	int3   
   14000840c:	rex push rbx
   14000840e:	sub    rsp,0x540
   140008415:	mov    rax,QWORD PTR [rip+0x4c04]        # 0x14000d020
   14000841c:	xor    rax,rsp
   14000841f:	mov    QWORD PTR [rsp+0x530],rax
   140008427:	lea    rcx,[rsp+0x60]
   14000842c:	call   QWORD PTR [rip+0xce6]        # 0x140009118
   140008432:	mov    rbx,QWORD PTR [rsp+0x158]
   14000843a:	lea    rdx,[rsp+0x40]
   14000843f:	mov    rcx,rbx
   140008442:	xor    r8d,r8d
   140008445:	call   QWORD PTR [rip+0xcc5]        # 0x140009110
   14000844b:	test   rax,rax
   14000844e:	je     0x140008489
   140008450:	and    QWORD PTR [rsp+0x38],0x0
   140008456:	lea    rcx,[rsp+0x48]
   14000845b:	mov    rdx,QWORD PTR [rsp+0x40]
   140008460:	mov    r9,rax
   140008463:	mov    QWORD PTR [rsp+0x30],rcx
   140008468:	mov    r8,rbx
   14000846b:	lea    rcx,[rsp+0x50]
   140008470:	mov    QWORD PTR [rsp+0x28],rcx
   140008475:	lea    rcx,[rsp+0x60]
   14000847a:	mov    QWORD PTR [rsp+0x20],rcx
   14000847f:	xor    ecx,ecx
   140008481:	call   QWORD PTR [rip+0xc81]        # 0x140009108
   140008487:	jmp    0x1400084a9
   140008489:	mov    rax,QWORD PTR [rsp+0x548]
   140008491:	mov    QWORD PTR [rsp+0x158],rax
   140008499:	lea    rax,[rsp+0x548]
   1400084a1:	mov    QWORD PTR [rsp+0xf8],rax
   1400084a9:	lea    rcx,[rip+0x1100]        # 0x1400095b0
   1400084b0:	call   QWORD PTR [rip+0xc2a]        # 0x1400090e0
   1400084b6:	mov    rcx,QWORD PTR [rsp+0x530]
   1400084be:	xor    rcx,rsp
   1400084c1:	call   0x140007b00
   1400084c6:	add    rsp,0x540
   1400084cd:	pop    rbx
   1400084ce:	ret    
   1400084cf:	int3   
   1400084d0:	int3   
   1400084d1:	int3   
   1400084d2:	int3   
   1400084d3:	int3   
   1400084d4:	int3   
   1400084d5:	int3   
   1400084d6:	jmp    QWORD PTR [rip+0xdcc]        # 0x1400092a8
   1400084dc:	int3   
   1400084dd:	int3   
   1400084de:	int3   
   1400084df:	int3   
   1400084e0:	int3   
   1400084e1:	int3   
   1400084e2:	jmp    QWORD PTR [rip+0xdb8]        # 0x1400092a0
   1400084e8:	int3   
   1400084e9:	int3   
   1400084ea:	int3   
   1400084eb:	int3   
   1400084ec:	int3   
   1400084ed:	int3   
   1400084ee:	jmp    QWORD PTR [rip+0xd9c]        # 0x140009290
   1400084f4:	int3   
   1400084f5:	int3   
   1400084f6:	int3   
   1400084f7:	int3   
   1400084f8:	int3   
   1400084f9:	int3   
   1400084fa:	jmp    QWORD PTR [rip+0xd88]        # 0x140009288
   140008500:	int3   
   140008501:	int3   
   140008502:	int3   
   140008503:	int3   
   140008504:	int3   
   140008505:	int3   
   140008506:	int3   
   140008507:	int3   
   140008508:	sub    rsp,0x28
   14000850c:	mov    r8,QWORD PTR [r9+0x38]
   140008510:	mov    rcx,rdx
   140008513:	mov    rdx,r9
   140008516:	call   0x14000852c
   14000851b:	mov    eax,0x1
   140008520:	add    rsp,0x28
   140008524:	ret    
   140008525:	int3   
   140008526:	int3   
   140008527:	int3   
   140008528:	int3   
   140008529:	int3   
   14000852a:	int3   
   14000852b:	int3   
   14000852c:	rex push rbx
   14000852e:	sub    rsp,0x20
   140008532:	mov    r11d,DWORD PTR [r8]
   140008535:	mov    rbx,rdx
   140008538:	and    r11d,0xfffffff8
   14000853c:	mov    r9,rcx
   14000853f:	test   BYTE PTR [r8],0x4
   140008543:	mov    r10,rcx
   140008546:	je     0x14000855b
   140008548:	mov    eax,DWORD PTR [r8+0x8]
   14000854c:	movsxd r10,DWORD PTR [r8+0x4]
   140008550:	neg    eax
   140008552:	add    r10,rcx
   140008555:	movsxd rcx,eax
   140008558:	and    r10,rcx
   14000855b:	movsxd rax,r11d
   14000855e:	mov    rdx,QWORD PTR [rax+r10*1]
   140008562:	mov    rax,QWORD PTR [rbx+0x10]
   140008566:	mov    ecx,DWORD PTR [rax+0x8]
   140008569:	add    rcx,QWORD PTR [rbx+0x8]
   14000856d:	test   BYTE PTR [rcx+0x3],0xf
   140008571:	je     0x14000857f
   140008573:	movzx  eax,BYTE PTR [rcx+0x3]
   140008577:	and    eax,0xfffffff0
   14000857a:	cdqe   
   14000857c:	add    r9,rax
   14000857f:	xor    r9,rdx
   140008582:	mov    rcx,r9
   140008585:	add    rsp,0x20
   140008589:	pop    rbx
   14000858a:	jmp    0x140007b00
   14000858f:	int3   
   140008590:	int3   
   140008591:	int3   
   140008592:	int3   
   140008593:	int3   
   140008594:	int3   
   140008595:	int3   
   140008596:	jmp    QWORD PTR [rip+0xcdc]        # 0x140009278
   14000859c:	int3   
   14000859d:	int3   
   14000859e:	int3   
   14000859f:	int3   
   1400085a0:	int3   
   1400085a1:	int3   
   1400085a2:	int3   
   1400085a3:	int3   
   1400085a4:	mov    rax,rsp
   1400085a7:	mov    QWORD PTR [rax+0x8],rbx
   1400085ab:	mov    QWORD PTR [rax+0x10],rbp
   1400085af:	mov    QWORD PTR [rax+0x18],rsi
   1400085b3:	mov    QWORD PTR [rax+0x20],rdi
   1400085b7:	push   r14
   1400085b9:	sub    rsp,0x20
   1400085bd:	mov    rbx,QWORD PTR [r9+0x38]
   1400085c1:	mov    rsi,rdx
   1400085c4:	mov    r14,r8
   1400085c7:	mov    rbp,rcx
   1400085ca:	mov    rdx,r9
   1400085cd:	mov    rcx,rsi
   1400085d0:	mov    rdi,r9
   1400085d3:	lea    r8,[rbx+0x4]
   1400085d7:	call   0x14000852c
   1400085dc:	mov    r11d,DWORD PTR [rbx+0x4]
   1400085e0:	mov    r8d,0x1
   1400085e6:	mov    r10d,DWORD PTR [rbp+0x4]
   1400085ea:	mov    eax,r11d
   1400085ed:	and    eax,r8d
   1400085f0:	and    r11d,0x2
   1400085f4:	and    r10b,0x66
   1400085f8:	cmove  r11d,eax
   1400085fc:	test   r11d,r11d
   1400085ff:	je     0x140008615
   140008601:	mov    r9,rdi
   140008604:	mov    r8,r14
   140008607:	mov    rdx,rsi
   14000860a:	mov    rcx,rbp
   14000860d:	call   0x140008596
   140008612:	mov    r8d,eax
   140008615:	mov    rbx,QWORD PTR [rsp+0x30]
   14000861a:	mov    eax,r8d
   14000861d:	mov    rbp,QWORD PTR [rsp+0x38]
   140008622:	mov    rsi,QWORD PTR [rsp+0x40]
   140008627:	mov    rdi,QWORD PTR [rsp+0x48]
   14000862c:	add    rsp,0x20
   140008630:	pop    r14
   140008632:	ret    
   140008633:	int3   
   140008634:	int3   
   140008635:	int3   
   140008636:	int3   
   140008637:	int3   
   140008638:	int3   
   140008639:	int3   
   14000863a:	int3   
   14000863b:	int3   
   14000863c:	int3   
   14000863d:	int3   
   14000863e:	int3   
   14000863f:	int3   
   140008640:	int3   
   140008641:	int3   
   140008642:	int3   
   140008643:	int3   
   140008644:	int3   
   140008645:	int3   
   140008646:	jmp    QWORD PTR [rip+0xd2c]        # 0x140009378
   14000864c:	int3   
   14000864d:	int3   
   14000864e:	int3   
   14000864f:	int3   
   140008650:	int3   
   140008651:	int3   
   140008652:	int3   
   140008653:	int3   
   140008654:	int3   
   140008655:	int3   
   140008656:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008660:	jmp    rax
   140008662:	int3   
   140008663:	int3   
   140008664:	int3   
   140008665:	int3   
   140008666:	int3   
   140008667:	int3   
   140008668:	int3   
   140008669:	int3   
   14000866a:	int3   
   14000866b:	int3   
   14000866c:	int3   
   14000866d:	int3   
   14000866e:	int3   
   14000866f:	int3   
   140008670:	int3   
   140008671:	int3   
   140008672:	int3   
   140008673:	int3   
   140008674:	int3   
   140008675:	int3   
   140008676:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008680:	sub    rsp,0x10
   140008684:	mov    QWORD PTR [rsp],r10
   140008688:	mov    QWORD PTR [rsp+0x8],r11
   14000868d:	xor    r11,r11
   140008690:	lea    r10,[rsp+0x18]
   140008695:	sub    r10,rax
   140008698:	cmovb  r10,r11
   14000869c:	mov    r11,QWORD PTR gs:0x10
   1400086a5:	cmp    r10,r11
   1400086a8:	jae    0x1400086bf
   1400086aa:	and    r10w,0xf000
   1400086b0:	lea    r11,[r11-0x1000]
   1400086b7:	test   BYTE PTR [r11],r11b
   1400086ba:	cmp    r10,r11
   1400086bd:	jne    0x1400086b0
   1400086bf:	mov    r10,QWORD PTR [rsp]
   1400086c3:	mov    r11,QWORD PTR [rsp+0x8]
   1400086c8:	add    rsp,0x10
   1400086cc:	ret    
   1400086cd:	int3   
   1400086ce:	int3   
   1400086cf:	int3   
   1400086d0:	int3   
   1400086d1:	int3   
   1400086d2:	int3   
   1400086d3:	int3   
   1400086d4:	int3   
   1400086d5:	int3   
   1400086d6:	mov    QWORD PTR [rsp+0x10],rdx
   1400086db:	push   rbp
   1400086dc:	sub    rsp,0x20
   1400086e0:	mov    rbp,rdx
   1400086e3:	lea    rax,[rip+0xffffffffffff9441]        # 0x140001b2b
   1400086ea:	add    rsp,0x20
   1400086ee:	pop    rbp
   1400086ef:	ret    
   1400086f0:	int3   
   1400086f1:	int3   
   1400086f2:	int3   
   1400086f3:	int3   
   1400086f4:	int3   
   1400086f5:	int3   
   1400086f6:	int3   
   1400086f7:	rex push rbp
   1400086f9:	sub    rsp,0x20
   1400086fd:	mov    rbp,rdx
   140008700:	mov    rcx,QWORD PTR [rbp+0x50]
   140008704:	add    rcx,0x10
   140008708:	add    rsp,0x20
   14000870c:	pop    rbp
   14000870d:	rex.W jmp QWORD PTR [rip+0xa6c]        # 0x140009180
   140008714:	int3   
   140008715:	int3   
   140008716:	int3   
   140008717:	int3   
   140008718:	int3   
   140008719:	int3   
   14000871a:	int3   
   14000871b:	mov    rcx,QWORD PTR [rdx+0x28]
   140008722:	jmp    0x140007618
   140008727:	mov    QWORD PTR [rsp+0x10],rdx
   14000872c:	push   rbp
   14000872d:	sub    rsp,0x20
   140008731:	mov    rbp,rdx
   140008734:	lea    rax,[rip+0xffffffffffff9775]        # 0x140001eb0
   14000873b:	add    rsp,0x20
   14000873f:	pop    rbp
   140008740:	ret    
   140008741:	int3   
   140008742:	int3   
   140008743:	int3   
   140008744:	int3   
   140008745:	int3   
   140008746:	int3   
   140008747:	int3   
   140008748:	mov    rcx,QWORD PTR [rdx+0x30]
   14000874f:	jmp    0x140007618
   140008754:	mov    QWORD PTR [rsp+0x10],rdx
   140008759:	push   rbp
   14000875a:	sub    rsp,0x20
   14000875e:	mov    rbp,rdx
   140008761:	lea    rax,[rip+0xffffffffffff986e]        # 0x140001fd6
   140008768:	add    rsp,0x20
   14000876c:	pop    rbp
   14000876d:	ret    
   14000876e:	int3   
   14000876f:	int3   
   140008770:	int3   
   140008771:	int3   
   140008772:	int3   
   140008773:	int3   
   140008774:	int3   
   140008775:	mov    QWORD PTR [rsp+0x10],rdx
   14000877a:	push   rbp
   14000877b:	sub    rsp,0x20
   14000877f:	mov    rbp,rdx
   140008782:	lea    rax,[rip+0xffffffffffff9dd9]        # 0x140002562
   140008789:	add    rsp,0x20
   14000878d:	pop    rbp
   14000878e:	ret    
   14000878f:	int3   
   140008790:	int3   
   140008791:	int3   
   140008792:	int3   
   140008793:	int3   
   140008794:	int3   
   140008795:	int3   
   140008796:	mov    QWORD PTR [rsp+0x10],rdx
   14000879b:	push   rbp
   14000879c:	sub    rsp,0x20
   1400087a0:	mov    rbp,rdx
   1400087a3:	lea    rax,[rip+0xffffffffffffa0a7]        # 0x140002851
   1400087aa:	add    rsp,0x20
   1400087ae:	pop    rbp
   1400087af:	ret    
   1400087b0:	int3   
   1400087b1:	int3   
   1400087b2:	int3   
   1400087b3:	int3   
   1400087b4:	int3   
   1400087b5:	int3   
   1400087b6:	int3   
   1400087b7:	mov    rcx,QWORD PTR [rdx+0x98]
   1400087be:	jmp    0x140007618
   1400087c3:	mov    QWORD PTR [rsp+0x10],rdx
   1400087c8:	push   rbp
   1400087c9:	sub    rsp,0x30
   1400087cd:	mov    rbp,rdx
   1400087d0:	lea    rax,[rip+0xffffffffffffa259]        # 0x140002a30
   1400087d7:	add    rsp,0x30
   1400087db:	pop    rbp
   1400087dc:	ret    
   1400087dd:	int3   
   1400087de:	lea    rcx,[rdx+0x88]
   1400087e5:	jmp    0x140001250
   1400087ea:	int3   
   1400087eb:	int3   
   1400087ec:	int3   
   1400087ed:	int3   
   1400087ee:	int3   
   1400087ef:	int3   
   1400087f0:	lea    rcx,[rdx+0x50]
   1400087f7:	jmp    0x1400027e0
   1400087fc:	lea    rcx,[rdx+0x40]
   140008803:	jmp    0x140002674
   140008808:	lea    rcx,[rdx+0x38]
   14000880f:	jmp    0x140002674
   140008814:	lea    rcx,[rdx+0x48]
   14000881b:	jmp    0x140002674
   140008820:	int3   
   140008821:	int3   
   140008822:	int3   
   140008823:	int3   
   140008824:	int3   
   140008825:	int3   
   140008826:	rex push rbp
   140008828:	sub    rsp,0x20
   14000882c:	mov    rbp,rdx
   14000882f:	mov    rax,QWORD PTR [rcx]
   140008832:	xor    ecx,ecx
   140008834:	cmp    DWORD PTR [rax],0xc0000017
   14000883a:	sete   cl
   14000883d:	mov    eax,ecx
   14000883f:	add    rsp,0x20
   140008843:	pop    rbp
   140008844:	ret    
   140008845:	int3   
   140008846:	int3   
   140008847:	int3   
   140008848:	int3   
   140008849:	int3   
   14000884a:	int3   
   14000884b:	int3   
   14000884c:	mov    rcx,QWORD PTR [rdx+0x40]
   140008853:	jmp    0x1400041d8
   140008858:	int3   
   140008859:	int3   
   14000885a:	int3   
   14000885b:	int3   
   14000885c:	int3   
   14000885d:	int3   
   14000885e:	mov    rcx,QWORD PTR [rdx+0x40]
   140008865:	add    rcx,0x8
   140008869:	jmp    0x140004218
   14000886e:	mov    rcx,QWORD PTR [rdx+0x40]
   140008875:	jmp    0x1400041d8
   14000887a:	int3   
   14000887b:	int3   
   14000887c:	int3   
   14000887d:	int3   
   14000887e:	int3   
   14000887f:	int3   
   140008880:	mov    QWORD PTR [rsp+0x10],rdx
   140008885:	push   rbp
   140008886:	sub    rsp,0x20
   14000888a:	mov    rbp,rdx
   14000888d:	lea    rax,[rip+0xffffffffffffbbb8]        # 0x14000444c
   140008894:	add    rsp,0x20
   140008898:	pop    rbp
   140008899:	ret    
   14000889a:	int3   
   14000889b:	lea    rcx,[rdx+0x40]
   1400088a2:	jmp    0x1400043a0
   1400088a7:	mov    QWORD PTR [rsp+0x10],rdx
   1400088ac:	push   rbp
   1400088ad:	sub    rsp,0x20
   1400088b1:	mov    rbp,rdx
   1400088b4:	lea    rax,[rip+0xffffffffffffbc07]        # 0x1400044c2
   1400088bb:	add    rsp,0x20
   1400088bf:	pop    rbp
   1400088c0:	ret    
   1400088c1:	int3   
   1400088c2:	lea    rcx,[rdx+0xa8]
   1400088c9:	jmp    0x1400043a0
   1400088ce:	int3   
   1400088cf:	int3   
   1400088d0:	int3   
   1400088d1:	int3   
   1400088d2:	int3   
   1400088d3:	int3   
   1400088d4:	lea    rcx,[rdx+0x48]
   1400088db:	jmp    0x140004c30
   1400088e0:	int3   
   1400088e1:	int3   
   1400088e2:	int3   
   1400088e3:	int3   
   1400088e4:	int3   
   1400088e5:	int3   
   1400088e6:	lea    rcx,[rdx+0x20]
   1400088ed:	jmp    0x14000472c
   1400088f2:	lea    rcx,[rdx+0x30]
   1400088f9:	jmp    0x140004c30
   1400088fe:	int3   
   1400088ff:	int3   
   140008900:	int3   
   140008901:	int3   
   140008902:	int3   
   140008903:	int3   
   140008904:	lea    rcx,[rdx+0x80]
   14000890b:	jmp    0x1400046b4
   140008910:	mov    QWORD PTR [rsp+0x10],rdx
   140008915:	push   rbp
   140008916:	sub    rsp,0x30
   14000891a:	mov    rbp,rdx
   14000891d:	lea    rax,[rip+0xffffffffffffc4b1]        # 0x140004dd5
   140008924:	add    rsp,0x30
   140008928:	pop    rbp
   140008929:	ret    
   14000892a:	int3   
   14000892b:	lea    rcx,[rdx+0x80]
   140008932:	jmp    0x1400046b4
   140008937:	mov    QWORD PTR [rsp+0x10],rdx
   14000893c:	push   rbp
   14000893d:	sub    rsp,0x30
   140008941:	mov    rbp,rdx
   140008944:	lea    rax,[rip+0xffffffffffffc67b]        # 0x140004fc6
   14000894b:	add    rsp,0x30
   14000894f:	pop    rbp
   140008950:	ret    
   140008951:	int3   
   140008952:	int3   
   140008953:	int3   
   140008954:	int3   
   140008955:	int3   
   140008956:	int3   
   140008957:	int3   
   140008958:	lea    rcx,[rdx+0x90]
   14000895f:	jmp    0x14000539c
   140008964:	lea    rcx,[rdx+0xa8]
   14000896b:	jmp    0x14000539c
   140008970:	int3   
   140008971:	int3   
   140008972:	int3   
   140008973:	int3   
   140008974:	int3   
   140008975:	int3   
   140008976:	lea    rcx,[rdx+0x60]
   14000897d:	jmp    0x140004c30
   140008982:	lea    rcx,[rdx+0x70]
   140008989:	jmp    0x1400046b4
   14000898e:	mov    QWORD PTR [rsp+0x10],rdx
   140008993:	push   rbp
   140008994:	sub    rsp,0x30
   140008998:	mov    rbp,rdx
   14000899b:	lea    rax,[rip+0xffffffffffffd769]        # 0x14000610b
   1400089a2:	add    rsp,0x30
   1400089a6:	pop    rbp
   1400089a7:	ret    
   1400089a8:	int3   
   1400089a9:	int3   
   1400089aa:	int3   
   1400089ab:	int3   
   1400089ac:	int3   
   1400089ad:	int3   
   1400089ae:	int3   
   1400089af:	rex push rbp
   1400089b1:	sub    rsp,0x20
   1400089b5:	mov    rbp,rdx
   1400089b8:	mov    rax,QWORD PTR [rcx]
   1400089bb:	mov    rdx,rcx
   1400089be:	mov    ecx,DWORD PTR [rax]
   1400089c0:	call   0x14000815e
   1400089c5:	nop
   1400089c6:	add    rsp,0x20
   1400089ca:	pop    rbp
   1400089cb:	ret    
   1400089cc:	int3   
   1400089cd:	int3   
   1400089ce:	int3   
   1400089cf:	int3   
   1400089d0:	int3   
   1400089d1:	int3   
   1400089d2:	int3   
   1400089d3:	rex push rbp
   1400089d5:	sub    rsp,0x20
   1400089d9:	mov    rbp,rdx
   1400089dc:	cmp    DWORD PTR [rbp+0x20],0x0
   1400089e0:	jne    0x1400089f8
   1400089e2:	mov    r9,QWORD PTR [rbp+0x78]
   1400089e6:	mov    r8d,DWORD PTR [rbp+0x70]
   1400089ea:	mov    rdx,QWORD PTR [rbp+0x68]
   1400089ee:	mov    rcx,QWORD PTR [rbp+0x60]
   1400089f2:	call   0x140007b94
   1400089f7:	nop
   1400089f8:	add    rsp,0x20
   1400089fc:	pop    rbp
   1400089fd:	ret    
   1400089fe:	int3   
   1400089ff:	int3   
   140008a00:	int3   
   140008a01:	int3   
   140008a02:	int3   
   140008a03:	int3   
   140008a04:	int3   
   140008a05:	rex push rbp
   140008a07:	sub    rsp,0x20
   140008a0b:	mov    rbp,rdx
   140008a0e:	mov    QWORD PTR [rbp+0x38],rcx
   140008a12:	mov    QWORD PTR [rbp+0x28],rcx
   140008a16:	mov    rax,QWORD PTR [rbp+0x28]
   140008a1a:	mov    rcx,QWORD PTR [rax]
   140008a1d:	mov    QWORD PTR [rbp+0x30],rcx
   140008a21:	mov    rax,QWORD PTR [rbp+0x30]
   140008a25:	cmp    DWORD PTR [rax],0xe06d7363
   140008a2b:	je     0x140008a39
   140008a2d:	mov    DWORD PTR [rbp+0x20],0x0
   140008a34:	mov    eax,DWORD PTR [rbp+0x20]
   140008a37:	jmp    0x140008a40
   140008a39:	call   QWORD PTR [rip+0x919]        # 0x140009358
   140008a3f:	nop
   140008a40:	add    rsp,0x20
   140008a44:	pop    rbp
   140008a45:	ret    
   140008a46:	int3   
   140008a47:	int3   
   140008a48:	int3   
   140008a49:	int3   
   140008a4a:	int3   
   140008a4b:	int3   
   140008a4c:	int3   
   140008a4d:	rex push rbp
   140008a4f:	sub    rsp,0x20
   140008a53:	mov    rbp,rdx
   140008a56:	mov    ecx,0x8
   140008a5b:	call   0x1400084ee
   140008a60:	nop
   140008a61:	add    rsp,0x20
   140008a65:	pop    rbp
   140008a66:	ret    
   140008a67:	int3   
   140008a68:	int3   
   140008a69:	int3   
   140008a6a:	int3   
   140008a6b:	int3   
   140008a6c:	int3   
   140008a6d:	int3   
   140008a6e:	rex push rbp
   140008a70:	sub    rsp,0x20
   140008a74:	mov    rbp,rdx
   140008a77:	cmp    DWORD PTR [rbp+0x24],0x0
   140008a7b:	jne    0x140008a93
   140008a7d:	mov    r9,QWORD PTR [rbp+0x70]
   140008a81:	mov    r8d,DWORD PTR [rbp+0x20]
   140008a85:	mov    rdx,QWORD PTR [rbp+0x58]
   140008a89:	mov    rcx,QWORD PTR [rbp+0x50]
   140008a8d:	call   0x140007b94
   140008a92:	nop
   140008a93:	add    rsp,0x20
   140008a97:	pop    rbp
   140008a98:	ret    
   140008a99:	int3   
   140008a9a:	int3   
   140008a9b:	int3   
   140008a9c:	int3   
   140008a9d:	int3   
   140008a9e:	int3   
   140008a9f:	int3   
   140008aa0:	rex push rbp
   140008aa2:	sub    rsp,0x20
   140008aa6:	mov    rbp,rdx
   140008aa9:	mov    rax,QWORD PTR [rcx]
   140008aac:	xor    ecx,ecx
   140008aae:	cmp    DWORD PTR [rax],0xc0000005
   140008ab4:	sete   cl
   140008ab7:	mov    eax,ecx
   140008ab9:	add    rsp,0x20
   140008abd:	pop    rbp
   140008abe:	ret    
   140008abf:	int3   
   140008ac0:	int3   
   140008ac1:	int3   
   140008ac2:	int3   
   140008ac3:	int3   
   140008ac4:	int3   
   140008ac5:	int3   
   140008ac6:	int3   
   140008ac7:	int3   
   140008ac8:	int3   
   140008ac9:	int3   
   140008aca:	int3   
   140008acb:	int3   
   140008acc:	int3   
   140008acd:	int3   
   140008ace:	int3   
   140008acf:	int3   
   140008ad0:	lea    rax,[rip+0xe89]        # 0x140009960
   140008ad7:	lea    rcx,[rip+0x4d32]        # 0x14000d810
   140008ade:	mov    QWORD PTR [rip+0x4d2b],rax        # 0x14000d810
   140008ae5:	jmp    0x140003b94
   140008aea:	int3   
   140008aeb:	int3   
   140008aec:	int3   
   140008aed:	int3   
   140008aee:	int3   
   140008aef:	int3   
   140008af0:	sub    rsp,0x28
   140008af4:	cmp    DWORD PTR [rip+0x4da5],0x1        # 0x14000d8a0
   140008afb:	jne    0x140008b11
   140008afd:	lea    rcx,[rip+0x4d74]        # 0x14000d878
   140008b04:	call   QWORD PTR [rip+0x57e]        # 0x140009088
   140008b0a:	and    DWORD PTR [rip+0x4d8f],0x0        # 0x14000d8a0
   140008b11:	add    rsp,0x28
   140008b15:	ret    
   140008b16:	int3   
   140008b17:	int3   
   140008b18:	int3   
   140008b19:	int3   
   140008b1a:	int3   
   140008b1b:	int3   
   140008b1c:	int3   
   140008b1d:	int3   
   140008b1e:	int3   
   140008b1f:	int3   
   140008b20:	sub    rsp,0x28
   140008b24:	lea    rcx,[rip+0x4dad]        # 0x14000d8d8
   140008b2b:	call   QWORD PTR [rip+0x557]        # 0x140009088
   140008b31:	mov    rcx,QWORD PTR [rip+0x4dc8]        # 0x14000d900
   140008b38:	test   rcx,rcx
   140008b3b:	je     0x140008b4b
   140008b3d:	call   QWORD PTR [rip+0x7ed]        # 0x140009330
   140008b43:	and    QWORD PTR [rip+0x4db5],0x0        # 0x14000d900
   140008b4b:	and    DWORD PTR [rip+0x4db6],0x0        # 0x14000d908
   140008b52:	and    DWORD PTR [rip+0x4db3],0x0        # 0x14000d90c
   140008b59:	add    rsp,0x28
   140008b5d:	ret    
   140008b5e:	int3   
   140008b5f:	int3   
   140008b60:	int3   
   140008b61:	int3   
   140008b62:	int3   
   140008b63:	int3   
   140008b64:	int3   
   140008b65:	int3   
   140008b66:	int3   
   140008b67:	int3   
   140008b68:	int3   
   140008b69:	int3   
   140008b6a:	int3   
   140008b6b:	int3   
   140008b6c:	int3   
   140008b6d:	int3   
   140008b6e:	int3   
   140008b6f:	int3   
   140008b70:	mov    QWORD PTR [rsp+0x8],rbx
   140008b75:	mov    QWORD PTR [rsp+0x10],rsi
   140008b7a:	push   rdi
   140008b7b:	sub    rsp,0x20
   140008b7f:	cmp    DWORD PTR [rip+0x4d8a],0x48        # 0x14000d910
   140008b86:	mov    rsi,QWORD PTR [rip+0x4d2b]        # 0x14000d8b8
   140008b8d:	jne    0x140008c0e
   140008b8f:	mov    eax,DWORD PTR [rip+0x4dbb]        # 0x14000d950
   140008b95:	xor    ebx,ebx
   140008b97:	test   eax,eax
   140008b99:	jle    0x140008bd2
   140008b9b:	xor    edi,edi
   140008b9d:	test   rdi,rdi
   140008ba0:	js     0x140008c46
   140008ba6:	cmp    ebx,eax
   140008ba8:	jge    0x140008c46
   140008bae:	mov    rax,QWORD PTR [rip+0x4d93]        # 0x14000d948
   140008bb5:	mov    rdx,rsi
   140008bb8:	movzx  ecx,WORD PTR [rdi+rax*1]
   140008bbc:	call   QWORD PTR [rip+0x64e]        # 0x140009210
   140008bc2:	mov    eax,DWORD PTR [rip+0x4d88]        # 0x14000d950
   140008bc8:	inc    ebx
   140008bca:	add    rdi,0x2
   140008bce:	cmp    ebx,eax
   140008bd0:	jl     0x140008b9d
   140008bd2:	mov    rcx,QWORD PTR [rip+0x4d6f]        # 0x14000d948
   140008bd9:	test   rcx,rcx
   140008bdc:	je     0x140008bec
   140008bde:	call   QWORD PTR [rip+0x74c]        # 0x140009330
   140008be4:	and    QWORD PTR [rip+0x4d5c],0x0        # 0x14000d948
   140008bec:	and    DWORD PTR [rip+0x4d5d],0x0        # 0x14000d950
   140008bf3:	lea    rcx,[rip+0x4d1e]        # 0x14000d918
   140008bfa:	and    DWORD PTR [rip+0x4d53],0x0        # 0x14000d954
   140008c01:	call   QWORD PTR [rip+0x481]        # 0x140009088
   140008c07:	and    DWORD PTR [rip+0x4d02],0x0        # 0x14000d910
   140008c0e:	mov    rcx,QWORD PTR [rip+0x4d33]        # 0x14000d948
   140008c15:	test   rcx,rcx
   140008c18:	je     0x140008c28
   140008c1a:	call   QWORD PTR [rip+0x710]        # 0x140009330
   140008c20:	and    QWORD PTR [rip+0x4d20],0x0        # 0x14000d948
   140008c28:	and    DWORD PTR [rip+0x4d21],0x0        # 0x14000d950
   140008c2f:	and    DWORD PTR [rip+0x4d1e],0x0        # 0x14000d954
   140008c36:	mov    rbx,QWORD PTR [rsp+0x30]
   140008c3b:	mov    rsi,QWORD PTR [rsp+0x38]
   140008c40:	add    rsp,0x20
   140008c44:	pop    rdi
   140008c45:	ret    
   140008c46:	mov    ecx,0xc000008c
   140008c4b:	call   0x140004740
   140008c50:	int3   
   140008c51:	int3   
   140008c52:	int3   
   140008c53:	int3   
   140008c54:	int3   
   140008c55:	int3   
   140008c56:	int3   
   140008c57:	int3   
   140008c58:	int3   
   140008c59:	int3   
   140008c5a:	int3   
   140008c5b:	int3   
   140008c5c:	int3   
   140008c5d:	int3   
   140008c5e:	int3   
   140008c5f:	int3   
   140008c60:	mov    QWORD PTR [rsp+0x8],rbx
   140008c65:	mov    QWORD PTR [rsp+0x10],rsi
   140008c6a:	mov    QWORD PTR [rsp+0x18],rdi
   140008c6f:	push   r14
   140008c71:	sub    rsp,0x20
   140008c75:	cmp    DWORD PTR [rip+0x4ce4],0x0        # 0x14000d960
   140008c7c:	je     0x140008cdd
   140008c7e:	mov    rdi,QWORD PTR [rip+0x4ceb]        # 0x14000d970
   140008c85:	mov    rax,QWORD PTR [rip+0x4cec]        # 0x14000d978
   140008c8c:	jmp    0x140008cc4
   140008c8e:	mov    rsi,QWORD PTR [rdi]
   140008c91:	test   rsi,rsi
   140008c94:	je     0x140008cc0
   140008c96:	mov    r14,QWORD PTR [rsi+0x20]
   140008c9a:	test   r14,r14
   140008c9d:	je     0x140008cb4
   140008c9f:	mov    rax,QWORD PTR [r14]
   140008ca2:	mov    rbx,QWORD PTR [rax+0x10]
   140008ca6:	mov    rcx,rbx
   140008ca9:	call   QWORD PTR [rip+0x731]        # 0x1400093e0
   140008caf:	mov    rcx,r14
   140008cb2:	call   rbx
   140008cb4:	and    QWORD PTR [rsi+0x20],0x0
   140008cb9:	mov    rax,QWORD PTR [rip+0x4cb8]        # 0x14000d978
   140008cc0:	add    rdi,0x8
   140008cc4:	cmp    rdi,rax
   140008cc7:	jb     0x140008c8e
   140008cc9:	lea    rcx,[rip+0x4cb0]        # 0x14000d980
   140008cd0:	call   QWORD PTR [rip+0x3b2]        # 0x140009088
   140008cd6:	and    DWORD PTR [rip+0x4c83],0x0        # 0x14000d960
   140008cdd:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ce2:	mov    rsi,QWORD PTR [rsp+0x38]
   140008ce7:	mov    rdi,QWORD PTR [rsp+0x40]
   140008cec:	add    rsp,0x20
   140008cf0:	pop    r14
   140008cf2:	ret    
   140008cf3:	int3   
   140008cf4:	int3   
   140008cf5:	int3   
   140008cf6:	int3   
   140008cf7:	int3   
   140008cf8:	int3   
   140008cf9:	int3   
   140008cfa:	int3   
   140008cfb:	int3   
   140008cfc:	int3   
   140008cfd:	int3   
   140008cfe:	int3   
   140008cff:	int3   
   140008d00:	lea    rax,[rip+0x879]        # 0x140009580
   140008d07:	lea    rcx,[rip+0x4482]        # 0x14000d190
   140008d0e:	mov    QWORD PTR [rip+0x447b],rax        # 0x14000d190
   140008d15:	jmp    0x1400080c0
   140008d1a:	int3   
   140008d1b:	int3   
   140008d1c:	int3   
   140008d1d:	int3   
   140008d1e:	int3   
   140008d1f:	int3   
   140008d20:	lea    rax,[rip+0x859]        # 0x140009580
   140008d27:	lea    rcx,[rip+0x4482]        # 0x14000d1b0
   140008d2e:	mov    QWORD PTR [rip+0x447b],rax        # 0x14000d1b0
   140008d35:	jmp    0x1400080c0

Disassembly of section .rdata:

0000000140009000 <.rdata>:
   140009000:	xor    BYTE PTR [rbp+0x0],bh
   140009006:	add    BYTE PTR [rax],al
   140009008:	ds mov ebp,0x0
   14000900e:	add    BYTE PTR [rax],al
   140009010:	push   rdx
   140009011:	mov    ebp,0x0
   140009016:	add    BYTE PTR [rax],al
   140009018:	(bad)  
   140009019:	mov    ebp,0x0
   14000901e:	add    BYTE PTR [rax],al
   140009020:	jb     0x140008fdf
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    BYTE PTR [rax],al
   140009026:	add    BYTE PTR [rax],al
   140009028:	test   BYTE PTR [rbp+0x0],bh
   14000902e:	add    BYTE PTR [rax],al
   140009030:	xchg   esi,eax
   140009031:	mov    ebp,0x0
   140009036:	add    BYTE PTR [rax],al
   140009038:	test   al,0xbd
   14000903a:	add    BYTE PTR [rax],al
   14000903c:	add    BYTE PTR [rax],al
   14000903e:	add    BYTE PTR [rax],al
   140009040:	(bad)  
   140009042:	add    BYTE PTR [rax],al
   140009044:	add    BYTE PTR [rax],al
   140009046:	add    BYTE PTR [rax],al
   140009048:	jbe    0x14000900d
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	add    BYTE PTR [rax],al
   14000904e:	add    BYTE PTR [rax],al
   140009050:	xchg   bl,al
	...
   14000905e:	add    BYTE PTR [rax],al
   140009060:	sahf   
   140009061:	mov    esi,0x0
   140009066:	add    BYTE PTR [rax],al
   140009068:	stos   BYTE PTR es:[rdi],al
   140009069:	mov    esi,0x0
   14000906e:	add    BYTE PTR [rax],al
   140009070:	sar    BYTE PTR [rsi+0x0],0x0
   140009077:	add    dh,cl
   140009079:	mov    esi,0x0
   14000907e:	add    BYTE PTR [rax],al
   140009080:	fidivr WORD PTR [rsi+0x0]
   140009086:	add    BYTE PTR [rax],al
   140009088:	out    dx,al
   140009089:	mov    esi,0x0
   14000908e:	add    BYTE PTR [rax],al
   140009090:	(bad)  
   140009091:	mov    edi,0x0
   140009096:	add    BYTE PTR [rax],al
   140009098:	and    bh,BYTE PTR [rdi+0x0]
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	xor    al,0xbf
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	add    BYTE PTR [rax],al
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	rex.WX movabs rdi,0xbf52000000000000
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	add    BYTE PTR [rax],al
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	pop    rsi
   1400090b9:	mov    edi,0x0
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	mov    BYTE PTR [rsi+0x0],bh
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	mov    ?,WORD PTR [rdi+0x0]
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	mov    dh,0xbf
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	add    BYTE PTR [rax],al
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	(bad)  
   1400090d9:	mov    edi,0x0
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	fidivr DWORD PTR [rdi+0x0]
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	ds (bad) 
   1400090ea:	add    BYTE PTR [rax],al
   1400090ec:	add    BYTE PTR [rax],al
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	sub    al,ah
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	add    BYTE PTR [rax],al
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	or     al,0xc4
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	add    BYTE PTR [rax],al
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	lock ret 
   140009102:	add    BYTE PTR [rax],al
   140009104:	add    BYTE PTR [rax],al
   140009106:	add    BYTE PTR [rax],al
   140009108:	fadd   st(3),st
   14000910a:	add    BYTE PTR [rax],al
   14000910c:	add    BYTE PTR [rax],al
   14000910e:	add    BYTE PTR [rax],al
   140009110:	ret    0xc3
   140009113:	add    BYTE PTR [rax],al
   140009115:	add    BYTE PTR [rax],al
   140009117:	add    BYTE PTR [rsi+0xc3],ch
   14000911d:	add    BYTE PTR [rax],al
   14000911f:	add    BYTE PTR [rbx+rax*8+0x0],bl
   140009126:	add    BYTE PTR [rax],al
   140009128:	jbe    0x1400090e8
   14000912a:	add    BYTE PTR [rax],al
   14000912c:	add    BYTE PTR [rax],al
   14000912e:	add    BYTE PTR [rax],al
   140009130:	mov    si,0x0
   140009134:	add    BYTE PTR [rax],al
   140009136:	add    BYTE PTR [rax],al
   140009138:	push   rsp
   140009139:	mov    esi,0x0
   14000913e:	add    BYTE PTR [rax],al
   140009140:	ds mov esi,0x0
   140009146:	add    BYTE PTR [rax],al
   140009148:	sub    al,0xbe
   14000914a:	add    BYTE PTR [rax],al
   14000914c:	add    BYTE PTR [rax],al
   14000914e:	add    BYTE PTR [rax],al
   140009150:	and    BYTE PTR [rsi+0x0],bh
   140009156:	add    BYTE PTR [rax],al
   140009158:	or     al,0xbe
   14000915a:	add    BYTE PTR [rax],al
   14000915c:	add    BYTE PTR [rax],al
   14000915e:	add    BYTE PTR [rax],al
   140009160:	cli    
   140009161:	mov    ebp,0x0
   140009166:	add    BYTE PTR [rax],al
   140009168:	call   0x14000922a
   14000916d:	add    BYTE PTR [rax],al
   14000916f:	add    al,bl
   140009171:	mov    ebp,0x0
   140009176:	add    BYTE PTR [rax],al
   140009178:	retf   0xbd
   14000917b:	add    BYTE PTR [rax],al
   14000917d:	add    BYTE PTR [rax],al
   14000917f:	add    BYTE PTR [rsi-0x41],dh
   140009182:	add    BYTE PTR [rax],al
   140009184:	add    BYTE PTR [rax],al
   140009186:	add    BYTE PTR [rax],al
   140009188:	outs   dx,BYTE PTR ds:[rsi]
   140009189:	(bad)  
   14000918a:	add    BYTE PTR [rax],al
   14000918c:	add    BYTE PTR [rax],al
   14000918e:	add    BYTE PTR [rax],al
   140009190:	mov    ah,al
   140009192:	add    BYTE PTR [rax],al
   140009194:	add    BYTE PTR [rax],al
   140009196:	add    BYTE PTR [rax],al
   140009198:	pop    rax
   140009199:	(bad)  
   14000919a:	add    BYTE PTR [rax],al
   14000919c:	add    BYTE PTR [rax],al
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	cwde   
   1400091a1:	(bad)  
   1400091a2:	add    BYTE PTR [rax],al
   1400091a4:	add    BYTE PTR [rax],al
   1400091a6:	add    BYTE PTR [rax],al
   1400091a8:	test   al,0xc4
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	add    BYTE PTR [rax],al
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	rol    ah,0x0
   1400091b3:	add    BYTE PTR [rax],al
   1400091b5:	add    BYTE PTR [rax],al
   1400091b7:	add    dh,cl
   1400091b9:	(bad)  
	...
   1400091c6:	add    BYTE PTR [rax],al
   1400091c8:	movabs ds:0x1580000000000000,al
   1400091d1:	add    DWORD PTR [rax],eax
   1400091d3:	add    BYTE PTR [rax],al
   1400091d5:	add    BYTE PTR [rax],al
   1400091d7:	cmp    BYTE PTR [rdx+0x0],0x0
   1400091de:	add    BYTE PTR [rax+0x2],al
   1400091e4:	add    BYTE PTR [rax],al
   1400091e6:	add    BYTE PTR [rax+0xa1],al
   1400091ec:	add    BYTE PTR [rax],al
   1400091ee:	add    BYTE PTR [rax+0xa3],al
   1400091f4:	add    BYTE PTR [rax],al
   1400091f6:	add    BYTE PTR [rax+0x7],al
   1400091fc:	add    BYTE PTR [rax],al
   1400091fe:	add    BYTE PTR [rax+0x6],al
   140009204:	add    BYTE PTR [rax],al
   140009206:	add    BYTE PTR [rax+0x0],al
   14000920c:	add    BYTE PTR [rax],al
   14000920e:	add    BYTE PTR [rax],al
   140009210:	rex.WRX ret 
   140009212:	add    BYTE PTR [rax],al
   140009214:	add    BYTE PTR [rax],al
   140009216:	add    BYTE PTR [rax],al
   140009218:	lock (bad) 
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	add    BYTE PTR [rax],al
   14000921e:	add    BYTE PTR [rax],al
   140009220:	rol    BYTE PTR cs:[rax],0x0
   140009224:	add    BYTE PTR [rax],al
   140009226:	add    BYTE PTR [rax],al
   140009228:	and    al,al
   14000922a:	add    BYTE PTR [rax],al
   14000922c:	add    BYTE PTR [rax],al
   14000922e:	add    BYTE PTR [rax],al
   140009230:	or     al,al
   140009232:	add    BYTE PTR [rax],al
   140009234:	add    BYTE PTR [rax],al
   140009236:	add    BYTE PTR [rax],al
   140009238:	(bad)  
   140009239:	mov    edi,0x0
	...
   140009246:	add    BYTE PTR [rax],al
   140009248:	xchg   edx,eax
   140009249:	rol    DWORD PTR [rax],0x0
   14000924c:	add    BYTE PTR [rax],al
   14000924e:	add    BYTE PTR [rax],al
   140009250:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009251:	rol    DWORD PTR [rax],0x0
   140009254:	add    BYTE PTR [rax],al
   140009256:	add    BYTE PTR [rax],al
   140009258:	mov    eax,0xc1
   14000925d:	add    BYTE PTR [rax],al
   14000925f:	add    ah,al
   140009261:	rol    DWORD PTR [rax],0x0
   140009264:	add    BYTE PTR [rax],al
   140009266:	add    BYTE PTR [rax],al
   140009268:	fadd   st(1),st
   14000926a:	add    BYTE PTR [rax],al
   14000926c:	add    BYTE PTR [rax],al
   14000926e:	add    BYTE PTR [rax],al
   140009270:	loop   0x140009236
   140009272:	add    BYTE PTR [rax],al
   140009274:	add    BYTE PTR [rax],al
   140009276:	add    BYTE PTR [rax],al
   140009278:	adc    ch,al
   14000927a:	add    BYTE PTR [rax],al
   14000927c:	add    BYTE PTR [rax],al
   14000927e:	add    BYTE PTR [rax],al
   140009280:	push   0xc2
   140009285:	add    BYTE PTR [rax],al
   140009287:	add    BYTE PTR [rdx-0x3e],bl
   14000928a:	add    BYTE PTR [rax],al
   14000928c:	add    BYTE PTR [rax],al
   14000928e:	add    BYTE PTR [rax],al
   140009290:	push   rax
   140009291:	ret    0x0
   140009294:	add    BYTE PTR [rax],al
   140009296:	add    BYTE PTR [rax],al
   140009298:	out    0xc1,al
   14000929a:	add    BYTE PTR [rax],al
   14000929c:	add    BYTE PTR [rax],al
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	rex.W ret 0x0
   1400092a4:	add    BYTE PTR [rax],al
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	ds ret 0x0
   1400092ac:	add    BYTE PTR [rax],al
   1400092ae:	add    BYTE PTR [rax],al
   1400092b0:	js     0x140009273
   1400092b2:	add    BYTE PTR [rax],al
   1400092b4:	add    BYTE PTR [rax],al
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	rol    WORD PTR [rax],0x0
   1400092bc:	add    BYTE PTR [rax],al
   1400092be:	add    BYTE PTR [rax],al
   1400092c0:	pop    rax
   1400092c1:	rol    DWORD PTR [rax],0x0
   1400092c4:	add    BYTE PTR [rax],al
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	rex.WX rol QWORD PTR [rax],0x0
   1400092cc:	add    BYTE PTR [rax],al
   1400092ce:	add    BYTE PTR [rax],al
   1400092d0:	xor    al,0xc1
   1400092d2:	add    BYTE PTR [rax],al
   1400092d4:	add    BYTE PTR [rax],al
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	sub    cl,al
   1400092da:	add    BYTE PTR [rax],al
   1400092dc:	add    BYTE PTR [rax],al
   1400092de:	add    BYTE PTR [rax],al
   1400092e0:	or     al,cl
   1400092e2:	add    BYTE PTR [rax],al
   1400092e4:	add    BYTE PTR [rax],al
   1400092e6:	add    BYTE PTR [rax],al
   1400092e8:	repnz rol BYTE PTR [rax],0x0
   1400092ec:	add    BYTE PTR [rax],al
   1400092ee:	add    BYTE PTR [rax],al
   1400092f0:	(bad)  
   1400092f1:	rol    BYTE PTR [rax],0x0
   1400092f4:	add    BYTE PTR [rax],al
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	mov    ah,0xc0
   1400092fa:	add    BYTE PTR [rax],al
   1400092fc:	add    BYTE PTR [rax],al
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	stos   BYTE PTR es:[rdi],al
   140009301:	rol    BYTE PTR [rax],0x0
   140009304:	add    BYTE PTR [rax],al
   140009306:	add    BYTE PTR [rax],al
   140009308:	pushf  
   140009309:	rol    BYTE PTR [rax],0x0
   14000930c:	add    BYTE PTR [rax],al
   14000930e:	add    BYTE PTR [rax],al
   140009310:	nop
   140009311:	rol    BYTE PTR [rax],0x0
   140009314:	add    BYTE PTR [rax],al
   140009316:	add    BYTE PTR [rax],al
   140009318:	test   al,al
   14000931a:	add    BYTE PTR [rax],al
   14000931c:	add    BYTE PTR [rax],al
   14000931e:	add    BYTE PTR [rax],al
   140009320:	js     0x1400092e2
   140009322:	add    BYTE PTR [rax],al
   140009324:	add    BYTE PTR [rax],al
   140009326:	add    BYTE PTR [rax],al
   140009328:	ins    BYTE PTR es:[rdi],dx
   140009329:	rol    BYTE PTR [rax],0x0
   14000932c:	add    BYTE PTR [rax],al
   14000932e:	add    BYTE PTR [rax],al
   140009330:	rol    BYTE PTR fs:[rax],0x0
   140009334:	add    BYTE PTR [rax],al
   140009336:	add    BYTE PTR [rax],al
   140009338:	pop    rdx
   140009339:	rol    BYTE PTR [rax],0x0
   14000933c:	add    BYTE PTR [rax],al
   14000933e:	add    BYTE PTR [rax],al
   140009340:	rex.WRX rol BYTE PTR [rax],0x0
   140009344:	add    BYTE PTR [rax],al
   140009346:	add    BYTE PTR [rax],al
   140009348:	xor    al,0xc2
   14000934a:	add    BYTE PTR [rax],al
   14000934c:	add    BYTE PTR [rax],al
   14000934e:	add    BYTE PTR [rax],al
   140009350:	sbb    al,0xc2
   140009352:	add    BYTE PTR [rax],al
   140009354:	add    BYTE PTR [rax],al
   140009356:	add    BYTE PTR [rax],al
   140009358:	cld    
   140009359:	rol    DWORD PTR [rax],0x0
   14000935c:	add    BYTE PTR [rax],al
   14000935e:	add    BYTE PTR [rax],al
   140009360:	lock rol DWORD PTR [rax],0x0
   140009364:	add    BYTE PTR [rax],al
   140009366:	add    BYTE PTR [rax],al
   140009368:	mov    al,cl
   14000936a:	add    BYTE PTR [rax],al
   14000936c:	add    BYTE PTR [rax],al
   14000936e:	add    BYTE PTR [rax],al
   140009370:	(bad)  
   140009371:	rol    DWORD PTR [rax],0x0
   140009374:	add    BYTE PTR [rax],al
   140009376:	add    BYTE PTR [rax],al
   140009378:	(bad)
	...
   140009388:	and    al,0xc3
   14000938a:	add    BYTE PTR [rax],al
   14000938c:	add    BYTE PTR [rax],al
   14000938e:	add    BYTE PTR [rax],al
   140009390:	(bad)  
   140009391:	ret    
   140009392:	add    BYTE PTR [rax],al
   140009394:	add    BYTE PTR [rax],al
   140009396:	add    BYTE PTR [rax],al
   140009398:	test   dl,0x0
   14000939b:	add    BYTE PTR [rax],al
   14000939d:	add    BYTE PTR [rax],al
   14000939f:	add    ah,ah
   1400093a1:	ret    0x0
   1400093a4:	add    BYTE PTR [rax],al
   1400093a6:	add    BYTE PTR [rax],al
   1400093a8:	int3   
   1400093a9:	ret    0x0
   1400093ac:	add    BYTE PTR [rax],al
   1400093ae:	add    BYTE PTR [rax],al
   1400093b0:	mov    esp,0xc2
   1400093b5:	add    BYTE PTR [rax],al
   1400093b7:	add    BYTE PTR [rax+0xc2],ch
   1400093bd:	add    BYTE PTR [rax],al
   1400093bf:	add    BYTE PTR [rsi+0xc2],dl
   1400093c5:	add    BYTE PTR [rax],al
   1400093c7:	add    BYTE PTR [rdx+0xc2],al
   1400093cd:	add    BYTE PTR [rax],al
   1400093cf:	add    BYTE PTR [rdx-0x3e],dh
	...
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	(bad)  
   1400093e1:	cmp    eax,DWORD PTR [rax]
   1400093e3:	rex add DWORD PTR [rax],eax
   1400093e6:	add    BYTE PTR [rax],al
   1400093e8:	(bad)  
   1400093e9:	xchg   BYTE PTR [rax],al
   1400093eb:	rex add DWORD PTR [rax],eax
	...
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	add    BYTE PTR [rax+0x0],bh
   1400093fb:	rex add DWORD PTR [rax],eax
   1400093fe:	add    BYTE PTR [rax],al
   140009400:	mov    al,0x10
   140009402:	add    BYTE PTR [rax+0x1],al
   140009405:	add    BYTE PTR [rax],al
   140009407:	add    BYTE PTR [rax+0x11],dl
   14000940a:	add    BYTE PTR [rax+0x1],al
   14000940d:	add    BYTE PTR [rax],al
   14000940f:	add    al,al
   140009411:	adc    DWORD PTR [rax],eax
   140009413:	rex add DWORD PTR [rax],eax
   140009416:	add    BYTE PTR [rax],al
   140009418:	add    BYTE PTR [rax],dl
   14000941a:	add    BYTE PTR [rax+0x1],al
   14000941d:	add    BYTE PTR [rax],al
   14000941f:	add    BYTE PTR [rax+0x1400010],dl
	...
   140009435:	add    BYTE PTR [rax],al
   140009437:	add    BYTE PTR [rax],ah
   140009439:	ja     0x14000943b
   14000943b:	rex add DWORD PTR [rax],eax
   14000943e:	add    BYTE PTR [rax],al
   140009440:	rex add DWORD PTR [rax],0x140
	...
   14000944f:	add    BYTE PTR [rax],al
   140009451:	adc    BYTE PTR [rax],al
   140009453:	add    BYTE PTR [rax-0x4ffffff0],dl
   140009459:	adc    BYTE PTR [rax],al
   14000945b:	add    BYTE PTR [rax+0x11],dl
   14000945e:	add    BYTE PTR [rax],al
   140009460:	rcl    BYTE PTR [rcx],0x0
   140009463:	add    BYTE PTR [rax+0x12],dl
   140009466:	add    BYTE PTR [rax],al
   140009468:	(bad)  
   140009469:	adc    al,BYTE PTR [rax]
   14000946b:	add    BYTE PTR [rax-0xfffffee],al
   140009471:	adc    al,BYTE PTR [rax]
   140009473:	add    BYTE PTR [rax],dl
   140009475:	adc    eax,DWORD PTR [rax]
   140009477:	add    BYTE PTR [rax+0x13],al
   14000947a:	add    BYTE PTR [rax],al
   14000947c:	lock (bad) 
   14000947e:	add    BYTE PTR [rax],al
   140009480:	add    BYTE PTR [rax],bl
   140009482:	add    BYTE PTR [rax],al
   140009484:	and    BYTE PTR [rax],bl
   140009486:	add    BYTE PTR [rax],al
   140009488:	movabs al,ds:0x90000019d0000018
   140009491:	sbb    al,BYTE PTR [rax]
   140009493:	add    BYTE PTR [rax],dl
   140009495:	sbb    al,0x0
   140009497:	add    BYTE PTR [rax],dh
   140009499:	sbb    al,0x0
   14000949b:	add    BYTE PTR [rax+0x1c],dl
   14000949e:	add    BYTE PTR [rax],al
   1400094a0:	lock sbb al,0x0
   1400094a3:	add    BYTE PTR [rax],dl
   1400094a5:	sbb    eax,0x20700000
   1400094aa:	add    BYTE PTR [rax],al
   1400094ac:	shl    BYTE PTR [rax],0x0
   1400094af:	add    BYTE PTR [rax],dh
   1400094b1:	and    DWORD PTR [rax],eax
   1400094b3:	add    BYTE PTR [rax+0x21],dl
   1400094b6:	add    BYTE PTR [rax],al
   1400094b8:	(bad)  
   1400094b9:	and    DWORD PTR [rax],eax
   1400094bb:	add    BYTE PTR [rax],al
   1400094bd:	and    al,BYTE PTR [rax]
   1400094bf:	add    BYTE PTR [rax+0x30000022],ah
   1400094c5:	and    eax,DWORD PTR [rax]
   1400094c7:	add    BYTE PTR [rax+0x23],dh
   1400094ca:	add    BYTE PTR [rax],al
   1400094cc:	mov    al,0x23
   1400094ce:	add    BYTE PTR [rax],al
   1400094d0:	adc    BYTE PTR [rax+rax*1],ah
   1400094d3:	add    BYTE PTR [rax-0x5fffffdc],dl
   1400094d9:	and    eax,0x26300000
   1400094de:	add    BYTE PTR [rax],al
   1400094e0:	shr    BYTE PTR [rax],0x0
   1400094e3:	add    BYTE PTR [rax+0x29],al
   1400094e6:	add    BYTE PTR [rax],al
   1400094e8:	(bad)  
   1400094e9:	cmp    eax,DWORD PTR [rax]
   1400094eb:	add    BYTE PTR [rax+0x3c],dl
   1400094ee:	add    BYTE PTR [rax],al
   1400094f0:	(bad)  
   1400094f1:	cmp    al,0x0
   1400094f3:	add    al,dh
   1400094f5:	cmp    al,0x0
   1400094f7:	add    BYTE PTR [rax+0x3d],al
   1400094fa:	add    BYTE PTR [rax],al
   1400094fc:	add    BYTE PTR [rax+0x0],al
   1400094ff:	add    BYTE PTR [rax],dl
   140009501:	add    BYTE PTR [rax],al
   140009504:	jo     0x140009547
   140009506:	add    BYTE PTR [rax],al
   140009508:	nop
   140009509:	add    BYTE PTR [r8],al
   14000950c:	movabs al,ds:0x6000004320000041
   140009515:	rex.RX add BYTE PTR [rax],r8b
   140009518:	(bad)  
   140009519:	add    BYTE PTR fs:[rax],al
   14000951c:	loopne 0x140009582
   14000951e:	add    BYTE PTR [rax],al
   140009520:	lock outs dx,BYTE PTR ds:[rsi]
   140009522:	add    BYTE PTR [rax],al
   140009524:	xor    BYTE PTR [rsi+0x0],dh
   140009527:	add    BYTE PTR [rax+0x76],dh
   14000952a:	add    BYTE PTR [rax],al
   14000952c:	and    BYTE PTR [rdi+0x0],dh
   14000952f:	add    BYTE PTR [rax],al
   140009531:	js     0x140009533
   140009533:	add    al,dl
   140009535:	jp     0x140009537
   140009537:	add    al,dh
   140009539:	jnp    0x14000953b
   14000953b:	add    BYTE PTR [rax],dh
   14000953d:	jl     0x14000953f
   14000953f:	add    al,dl
   140009541:	jl     0x140009543
   140009543:	add    BYTE PTR [rax-0x2fffff80],dl
   140009549:	add    BYTE PTR [rax],0x0
   14000954c:	add    BYTE PTR [rcx-0x7ec00000],al
   140009552:	add    BYTE PTR [rax],al
   140009554:	ror    BYTE PTR [rdx-0x75100000],1
   14000955a:	add    BYTE PTR [rax],al
   14000955c:	and    BYTE PTR [rbx-0x74900000],cl
   140009562:	add    BYTE PTR [rax],al
   140009564:	(bad)  
   140009565:	mov    WORD PTR [rax],es
   140009567:	add    BYTE PTR [rax],al
   140009569:	lea    eax,[rax]
   14000956b:	add    BYTE PTR [rax],ah
   14000956d:	lea    eax,[rax]
   14000956f:	add    BYTE PTR [rdx+0x61],ah
   140009572:	and    BYTE PTR fs:[rcx+0x6c],ah
   140009576:	ins    BYTE PTR es:[rdi],dx
   140009577:	outs   dx,DWORD PTR ds:[rsi]
   140009578:	movsxd esp,DWORD PTR [rcx+0x74]
   14000957b:	imul   ebp,DWORD PTR [rdi+0x6e],0x76300000
   140009582:	add    BYTE PTR [rax+0x1],al
   140009585:	add    BYTE PTR [rax],al
   140009587:	add    al,dl
   140009589:	add    BYTE PTR [rax],0x40
   14000958c:	add    DWORD PTR [rax],eax
   14000958e:	add    BYTE PTR [rax],al
   140009590:	jo     0x140009608
   140009592:	add    BYTE PTR [rax+0x1],al
   140009595:	add    BYTE PTR [rax],al
   140009597:	add    al,dh
   140009599:	jnp    0x14000959b
   14000959b:	rex add DWORD PTR [rax],eax
   14000959e:	add    BYTE PTR [rax],al
   1400095a0:	add    dl,dl
   1400095a2:	add    BYTE PTR [rax+0x1],al
   1400095a5:	add    BYTE PTR [rax],al
   1400095a7:	add    BYTE PTR [rax+0x14000d2],ah
   1400095ad:	add    BYTE PTR [rax],al
   1400095af:	add    BYTE PTR [rcx+0x6e],cl
   1400095b2:	jbe    0x140009615
   1400095b4:	ins    BYTE PTR es:[rdi],dx
   1400095b5:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x6d617261
   1400095bd:	gs je  0x140009625
   1400095c0:	jb     0x1400095e2
   1400095c2:	jo     0x140009625
   1400095c4:	jae    0x140009639
   1400095c6:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   1400095cc:	rex.XB and BYTE PTR [r10+0x75],sil
   1400095d0:	outs   dx,BYTE PTR ds:[rsi]
   1400095d1:	je     0x14000963c
   1400095d3:	ins    DWORD PTR es:[rdi],dx
   1400095d4:	and    BYTE PTR gs:[rsi+0x75],ah
   1400095d8:	outs   dx,BYTE PTR ds:[rsi]
   1400095d9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400095dd:	outs   dx,BYTE PTR ds:[rsi]
   1400095de:	or     al,BYTE PTR cs:[rax]
   1400095e1:	add    BYTE PTR [rax],al
   1400095e3:	add    BYTE PTR [rax],al
   1400095e5:	add    BYTE PTR [rax],al
   1400095e7:	add    BYTE PTR [rbx+0x0],al
   1400095ea:	rex.WR add BYTE PTR [rbx+0x0],r10b
   1400095ee:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   1400095f3:	add    BYTE PTR [rax],al
   1400095f5:	add    BYTE PTR [rax],al
   1400095f7:	add    BYTE PTR [rcx+0x0],al
   1400095fa:	jo     0x1400095fc
   1400095fc:	jo     0x1400095fe
   1400095fe:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140009603:	add    BYTE PTR [rbx+0x0],dl
   140009606:	add    BYTE PTR [rax],al
   140009608:	rex.WRB add BYTE PTR [r8],r8b
   14000960b:	add    BYTE PTR [rax+rax*1+0x0],al
   14000960f:	add    BYTE PTR [rdx+0x0],al
   140009612:	add    BYTE PTR [rax],al
   140009614:	add    BYTE PTR [rax],al
   140009616:	add    BYTE PTR [rax],al
   140009618:	push   rsi
   140009619:	add    BYTE PTR [rcx+0x0],ah
   14000961c:	ins    BYTE PTR es:[rdi],dx
   14000961d:	add    BYTE PTR [rax],al
   14000961f:	add    BYTE PTR [rsi+0x0],al
   140009622:	outs   dx,DWORD PTR ds:[rsi]
   140009623:	add    BYTE PTR [rdx+0x0],dh
   140009626:	movsxd eax,DWORD PTR [rax]
   140009628:	add    BYTE PTR gs:[rdx+0x0],dl
   14000962c:	add    BYTE PTR gs:[rbp+0x0],ch
   140009630:	outs   dx,DWORD PTR ds:[rsi]
   140009631:	add    BYTE PTR [rsi+0x0],dh
   140009634:	add    BYTE PTR gs:[rax],al
   140009637:	add    BYTE PTR [rsi+0x0],cl
   14000963a:	outs   dx,DWORD PTR ds:[rsi]
   14000963b:	add    BYTE PTR [rdx+0x0],dl
   14000963e:	add    BYTE PTR gs:[rbp+0x0],ch
   140009642:	outs   dx,DWORD PTR ds:[rsi]
   140009643:	add    BYTE PTR [rsi+0x0],dh
   140009646:	add    BYTE PTR gs:[rax],al
   140009649:	add    BYTE PTR [rax],al
   14000964b:	add    BYTE PTR [rax],al
   14000964d:	add    BYTE PTR [rax],al
   14000964f:	add    BYTE PTR [rax+rax*1+0x65],al
   140009653:	add    BYTE PTR [rax+rax*1+0x65],ch
   140009657:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000965b:	add    BYTE PTR [rax],al
   14000965d:	add    BYTE PTR [rax],al
   14000965f:	add    BYTE PTR [rbx+0x0],al
   140009662:	outs   dx,DWORD PTR ds:[rsi]
   140009663:	add    BYTE PTR [rbp+0x0],ch
   140009666:	jo     0x140009668
   140009668:	outs   dx,DWORD PTR ds:[rsi]
   140009669:	add    BYTE PTR [rsi+0x0],ch
   14000966c:	add    BYTE PTR gs:[rsi+0x0],ch
   140009670:	je     0x140009672
   140009672:	and    BYTE PTR [rax],al
   140009674:	rex.XB add BYTE PTR [r9+0x0],spl
   140009678:	je     0x14000967a
   14000967a:	add    BYTE PTR gs:[rdi+0x0],ah
   14000967e:	outs   dx,DWORD PTR ds:[rsi]
   14000967f:	add    BYTE PTR [rdx+0x0],dh
   140009682:	imul   eax,DWORD PTR [rax],0x730065
	...
   140009690:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140009694:	ins    BYTE PTR es:[rdi],dx
   140009695:	add    BYTE PTR [rbp+0x0],ah
   140009698:	push   rsp
   140009699:	add    BYTE PTR [rcx+0x0],bh
   14000969c:	jo     0x14000969e
   14000969e:	add    BYTE PTR gs:[rax],al
   1400096a1:	add    BYTE PTR [rax],al
   1400096a3:	add    BYTE PTR [rax],al
   1400096a5:	add    BYTE PTR [rax],al
   1400096a7:	add    BYTE PTR [rcx+0x0],cl
   1400096aa:	outs   dx,BYTE PTR ds:[rsi]
   1400096ab:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400096af:	add    BYTE PTR [rdx+0x0],dh
   1400096b2:	data16 add BYTE PTR [rcx+0x0],ah
   1400096b6:	movsxd eax,DWORD PTR [rax]
   1400096b8:	add    BYTE PTR gs:[rax],al
   1400096bb:	add    BYTE PTR [rax],al
   1400096bd:	add    BYTE PTR [rax],al
   1400096bf:	add    BYTE PTR [rax+0x0],cl
   1400096c2:	(bad)  
   1400096c3:	add    BYTE PTR [rdx+0x0],dh
   1400096c6:	add    BYTE PTR fs:[rdi+0x0],dh
   1400096ca:	(bad)  
   1400096cb:	add    BYTE PTR [rdx+0x0],dh
   1400096ce:	add    BYTE PTR gs:[rax],al
   1400096d1:	add    BYTE PTR [rax],al
   1400096d3:	add    BYTE PTR [rax],al
   1400096d5:	add    BYTE PTR [rax],al
   1400096d7:	add    BYTE PTR [rbp+0x0],cl
   1400096da:	imul   eax,DWORD PTR [rax],0x65006d
	...
   1400096e8:	push   rbx
   1400096e9:	add    BYTE PTR [rcx+0x0],al
   1400096ec:	rex.WRB add BYTE PTR [r8],r8b
   1400096ef:	add    BYTE PTR [rbx+0x0],dl
   1400096f2:	add    BYTE PTR [r11+0x0],r8b
   1400096f6:	push   rbp
   1400096f7:	add    BYTE PTR [rdx+0x0],dl
   1400096fa:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   140009707:	add    BYTE PTR [rbx+0x0],dl
   14000970a:	pop    rcx
   14000970b:	add    BYTE PTR [rbx+0x0],dl
   14000970e:	push   rsp
   14000970f:	add    BYTE PTR [rbp+0x0],al
   140009712:	rex.WRB add BYTE PTR [r8],r8b
   140009715:	add    BYTE PTR [rax],al
   140009717:	add    BYTE PTR [rbx+0x0],dl
   14000971a:	outs   dx,DWORD PTR ds:[rsi]
   14000971b:	add    BYTE PTR [rsi+0x0],ah
   14000971e:	je     0x140009720
   140009720:	ja     0x140009722
   140009722:	(bad)  
   140009723:	add    BYTE PTR [rdx+0x0],dh
   140009726:	add    BYTE PTR gs:[rax],al
   140009729:	add    BYTE PTR [rax],al
   14000972b:	add    BYTE PTR [rax],al
   14000972d:	add    BYTE PTR [rax],al
   14000972f:	add    BYTE PTR [rax+rax*1+0x79],dl
   140009733:	add    BYTE PTR [rax+0x0],dh
   140009736:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   14000973b:	add    BYTE PTR [rdx+0x0],ah
   14000973e:	add    BYTE PTR [rax],al
   140009740:	and    eax,DWORD PTR [rbx]
   140009742:	add    BYTE PTR [rax],al
   140009744:	add    BYTE PTR [rax],al
   140009746:	add    BYTE PTR [rax],al
   140009748:	rol    BYTE PTR [rax],0x0
   14000974b:	add    BYTE PTR [rax],al
   14000974d:	add    BYTE PTR [rax],al
   14000974f:	rex.RX clc 
   140009751:	xchg   ebp,eax
   140009752:	add    BYTE PTR [rax+0x1],al
   140009755:	add    BYTE PTR [rax],al
   140009757:	add    al,ch
   140009759:	xchg   ebp,eax
   14000975a:	add    BYTE PTR [rax+0x1],al
   14000975d:	add    BYTE PTR [rax],al
   14000975f:	add    BYTE PTR [rax-0x6a],ah
   140009762:	add    BYTE PTR [rax+0x1],al
   140009765:	add    BYTE PTR [rax],al
   140009767:	add    BYTE PTR [rax+0x1400096],dl
   14000976d:	add    BYTE PTR [rax],al
   14000976f:	add    BYTE PTR [rax+0x1400096],ch
   140009775:	add    BYTE PTR [rax],al
   140009777:	add    al,al
   140009779:	xchg   esi,eax
   14000977a:	add    BYTE PTR [rax+0x1],al
   14000977d:	add    BYTE PTR [rax],al
   14000977f:	add    al,bl
   140009781:	xchg   esi,eax
   140009782:	add    BYTE PTR [rax+0x1],al
   140009785:	add    BYTE PTR [rax],al
   140009787:	add    al,ch
   140009789:	xchg   esi,eax
   14000978a:	add    BYTE PTR [rax+0x1],al
   14000978d:	add    BYTE PTR [rax],al
   14000978f:	add    al,dh
   140009791:	xchg   esi,eax
   140009792:	add    BYTE PTR [rax+0x1],al
   140009795:	add    BYTE PTR [rax],al
   140009797:	add    BYTE PTR [rax],cl
   140009799:	xchg   edi,eax
   14000979a:	add    BYTE PTR [rax+0x1],al
   14000979d:	add    BYTE PTR [rax],al
   14000979f:	add    BYTE PTR [rax],bl
   1400097a1:	xchg   edi,eax
   1400097a2:	add    BYTE PTR [rax+0x1],al
   1400097a5:	add    BYTE PTR [rax],al
   1400097a7:	add    BYTE PTR [rax],dh
   1400097a9:	xchg   edi,eax
   1400097aa:	add    BYTE PTR [rax+0x1],al
   1400097ad:	add    BYTE PTR [rax],al
   1400097af:	add    BYTE PTR [rax+0x1400023],dh
   1400097b5:	add    BYTE PTR [rax],al
   1400097b7:	add    BYTE PTR [rax],dh
   1400097b9:	and    eax,DWORD PTR [rax]
   1400097bb:	rex add DWORD PTR [rax],eax
   1400097be:	add    BYTE PTR [rax],al
   1400097c0:	jo     0x1400097e5
   1400097c2:	add    BYTE PTR [rax+0x1],al
   1400097c5:	add    BYTE PTR [rax],al
   1400097c7:	add    BYTE PTR [rax],al
   1400097c9:	sbb    BYTE PTR [rax],al
   1400097cb:	rex add DWORD PTR [rax],eax
   1400097ce:	add    BYTE PTR [rax],al
   1400097d0:	and    BYTE PTR [rax],bl
   1400097d2:	add    BYTE PTR [rax+0x1],al
   1400097d5:	add    BYTE PTR [rax],al
   1400097d7:	add    BYTE PTR [rax+0x1400018],ah
   1400097dd:	add    BYTE PTR [rax],al
   1400097df:	add    al,dl
   1400097e1:	sbb    DWORD PTR [rax],eax
   1400097e3:	rex add DWORD PTR [rax],eax
   1400097e6:	add    BYTE PTR [rax],al
   1400097e8:	loopne 0x14000984e
   1400097ea:	add    BYTE PTR [rax+0x1],al
   1400097ed:	add    BYTE PTR [rax],al
   1400097ef:	add    BYTE PTR [rax+0x1400022],ah
   1400097f5:	add    BYTE PTR [rax],al
   1400097f7:	add    BYTE PTR [rax+0x21],dl
   1400097fa:	add    BYTE PTR [rax+0x1],al
   1400097fd:	add    BYTE PTR [rax],al
   1400097ff:	add    BYTE PTR [rax],al
   140009801:	and    al,BYTE PTR [rax]
   140009803:	rex add DWORD PTR [rax],eax
   140009806:	add    BYTE PTR [rax],al
   140009808:	nop
   140009809:	and    al,0x0
   14000980b:	rex add DWORD PTR [rax],eax
   14000980e:	add    BYTE PTR [rax],al
   140009810:	xor    BYTE PTR [rcx],ah
   140009812:	add    BYTE PTR [rax+0x1],al
   140009815:	add    BYTE PTR [rax],al
   140009817:	add    BYTE PTR [rax+0x21],dl
   14000981a:	add    BYTE PTR [rax+0x1],al
   14000981d:	add    BYTE PTR [rax],al
   14000981f:	add    BYTE PTR [rax+0x21],ah
   140009822:	add    BYTE PTR [rax+0x1],al
   140009825:	add    BYTE PTR [rax],al
   140009827:	add    BYTE PTR [rax],al
   140009829:	sbb    BYTE PTR [rax],al
   14000982b:	rex add DWORD PTR [rax],eax
   14000982e:	add    BYTE PTR [rax],al
   140009830:	and    BYTE PTR [rax],bl
   140009832:	add    BYTE PTR [rax+0x1],al
   140009835:	add    BYTE PTR [rax],al
   140009837:	add    BYTE PTR [rax+0x1400018],ah
   14000983d:	add    BYTE PTR [rax],al
   14000983f:	add    al,dl
   140009841:	sbb    DWORD PTR [rax],eax
   140009843:	rex add DWORD PTR [rax],eax
   140009846:	add    BYTE PTR [rax],al
   140009848:	loopne 0x1400098ae
   14000984a:	add    BYTE PTR [rax+0x1],al
   14000984d:	add    BYTE PTR [rax],al
   14000984f:	add    BYTE PTR [rax],dl
   140009851:	and    al,0x0
   140009853:	rex add DWORD PTR [rax],eax
   140009856:	add    BYTE PTR [rax],al
   140009858:	xor    BYTE PTR [rcx],ah
   14000985a:	add    BYTE PTR [rax+0x1],al
   14000985d:	add    BYTE PTR [rax],al
   14000985f:	add    BYTE PTR [rax+0x20],dh
   140009862:	add    BYTE PTR [rax+0x1],al
   140009865:	add    BYTE PTR [rax],al
   140009867:	add    al,al
   140009869:	and    BYTE PTR [rax],al
   14000986b:	rex add DWORD PTR [rax],eax
   14000986e:	add    BYTE PTR [rax],al
   140009870:	add    BYTE PTR [rax],bl
   140009872:	add    BYTE PTR [rax+0x1],al
   140009875:	add    BYTE PTR [rax],al
   140009877:	add    BYTE PTR [rax],ah
   140009879:	sbb    BYTE PTR [rax],al
   14000987b:	rex add DWORD PTR [rax],eax
   14000987e:	add    BYTE PTR [rax],al
   140009880:	movabs al,ds:0xd000000001400018
   140009889:	sbb    DWORD PTR [rax],eax
   14000988b:	rex add DWORD PTR [rax],eax
   14000988e:	add    BYTE PTR [rax],al
   140009890:	loopne 0x1400098f6
   140009892:	add    BYTE PTR [rax+0x1],al
   140009895:	add    BYTE PTR [rax],al
   140009897:	add    BYTE PTR [rax+0x1400080],dl
   14000989d:	add    BYTE PTR [rax],al
   14000989f:	add    BYTE PTR [rax+0x1400080],dl
   1400098a5:	add    BYTE PTR [rax],al
   1400098a7:	add    BYTE PTR [rax+0x1400080],dl
   1400098ad:	add    BYTE PTR [rax],al
   1400098af:	add    BYTE PTR [rax],dl
   1400098b1:	sbb    eax,0x14000
   1400098b6:	add    BYTE PTR [rax],al
   1400098b8:	xor    BYTE PTR [rsi],ah
   1400098ba:	add    BYTE PTR [rax+0x1],al
   1400098bd:	add    BYTE PTR [rax],al
   1400098bf:	add    BYTE PTR [rax+0x1400080],dl
   1400098c5:	add    BYTE PTR [rax],al
   1400098c7:	add    BYTE PTR [rax+0x1400080],dl
   1400098cd:	add    BYTE PTR [rax],al
   1400098cf:	add    BYTE PTR [rax+0x1400080],dl
   1400098d5:	add    BYTE PTR [rax],al
   1400098d7:	add    BYTE PTR [rax+0x1400025],ah
   1400098dd:	add    BYTE PTR [rax],al
   1400098df:	add    BYTE PTR [rax],dh
   1400098e1:	add    BYTE PTR es:[rax+0x1],al
   1400098e5:	add    BYTE PTR [rax],al
   1400098e7:	add    al,dh
   1400098e9:	sbb    al,0x0
   1400098eb:	rex add DWORD PTR [rax],eax
   1400098ee:	add    BYTE PTR [rax],al
   1400098f0:	xor    BYTE PTR [rax+rax*1],bl
   1400098f3:	rex add DWORD PTR [rax],eax
   1400098f6:	add    BYTE PTR [rax],al
   1400098f8:	push   rax
   1400098f9:	sbb    al,0x0
   1400098fb:	rex add DWORD PTR [rax],eax
   1400098fe:	add    BYTE PTR [rax],al
   140009900:	adc    BYTE PTR [rip+0x14000],bl        # 0x14001d906
   140009906:	add    BYTE PTR [rax],al
   140009908:	xor    BYTE PTR [rsi],ah
   14000990a:	add    BYTE PTR [rax+0x1],al
   14000990d:	add    BYTE PTR [rax],al
   14000990f:	add    BYTE PTR [rax+0x13],al
   140009912:	add    BYTE PTR [rax+0x1],al
   140009915:	add    BYTE PTR [rax],al
   140009917:	add    al,dh
   140009919:	adc    al,BYTE PTR [rax]
   14000991b:	rex add DWORD PTR [rax],eax
   14000991e:	add    BYTE PTR [rax],al
   140009920:	adc    BYTE PTR [rbx],dl
   140009922:	add    BYTE PTR [rax+0x1],al
   140009925:	add    BYTE PTR [rax],al
   140009927:	add    BYTE PTR [rax+0x3c],dl
   14000992a:	add    BYTE PTR [rax+0x1],al
   14000992d:	add    BYTE PTR [rax],al
   14000992f:	add    BYTE PTR [rax+0x3c],ah
   140009932:	add    BYTE PTR [rax+0x1],al
   140009935:	add    BYTE PTR [rax],al
   140009937:	add    al,dh
   140009939:	cmp    al,0x0
   14000993b:	rex add DWORD PTR [rax],eax
   14000993e:	add    BYTE PTR [rax],al
   140009940:	rex cmp eax,0x14000
   140009946:	add    BYTE PTR [rax],al
   140009948:	rex cmp eax,0x14000
   14000994e:	add    BYTE PTR [rax],al
   140009950:	(bad)  
   140009951:	add    BYTE PTR fs:[rax+0x1],al
   140009955:	add    BYTE PTR [rax],al
   140009957:	add    BYTE PTR [rax],al
   140009959:	add    BYTE PTR [rax+0x1],al
   14000995d:	add    BYTE PTR [rax],al
   14000995f:	add    BYTE PTR [rax+0x13],al
   140009962:	add    BYTE PTR [rax+0x1],al
   140009965:	add    BYTE PTR [rax],al
   140009967:	add    al,dh
   140009969:	adc    al,BYTE PTR [rax]
   14000996b:	rex add DWORD PTR [rax],eax
   14000996e:	add    BYTE PTR [rax],al
   140009970:	adc    BYTE PTR [rax+0x0],al
   140009973:	rex add DWORD PTR [rax],eax
   140009976:	add    BYTE PTR [rax],al
   140009978:	push   rax
   140009979:	cmp    al,0x0
   14000997b:	rex add DWORD PTR [rax],eax
   14000997e:	add    BYTE PTR [rax],al
   140009980:	(bad)  
   140009981:	cmp    al,0x0
   140009983:	rex add DWORD PTR [rax],eax
   140009986:	add    BYTE PTR [rax],al
   140009988:	lock cmp al,0x0
   14000998b:	rex add DWORD PTR [rax],eax
   14000998e:	add    BYTE PTR [rax],al
   140009990:	rex cmp eax,0x14000
   140009996:	add    BYTE PTR [rax],al
   140009998:	rex cmp eax,0x14000
   14000999e:	add    BYTE PTR [rax],al
   1400099a0:	(bad)  
   1400099a1:	add    BYTE PTR fs:[rax+0x1],al
   1400099a5:	add    BYTE PTR [rax],al
   1400099a7:	add    BYTE PTR [rax],al
   1400099a9:	add    BYTE PTR [rax+0x1],al
   1400099ad:	add    BYTE PTR [rax],al
   1400099af:	add    BYTE PTR [rax+0x41],dh
   1400099b2:	add    BYTE PTR [rax+0x1],al
   1400099b5:	add    BYTE PTR [rax],al
   1400099b7:	add    BYTE PTR [rax+0x1400041],dl
   1400099bd:	add    BYTE PTR [rax],al
   1400099bf:	add    al,dh
   1400099c1:	(bad)  
   1400099c2:	add    BYTE PTR [rax+0x1],al
   1400099c5:	add    BYTE PTR [rax],al
   1400099c7:	add    BYTE PTR [rax+0x46],ah
   1400099ca:	add    BYTE PTR [rax+0x1],al
   1400099cd:	add    BYTE PTR [rax],al
   1400099cf:	add    BYTE PTR [rax],ah
   1400099d1:	rex.XB add BYTE PTR [r8+0x1],al
   1400099d5:	add    BYTE PTR [rax],al
   1400099d7:	add    BYTE PTR [rax+0x1400041],ah
   1400099dd:	add    BYTE PTR [rax],al
   1400099df:	add    BYTE PTR [rip+0x2f00],ch        # 0x14000c8e5
   1400099e5:	add    BYTE PTR [rax],al
   1400099e7:	add    BYTE PTR [rbp+0x0],dl
   1400099ea:	outs   dx,BYTE PTR ds:[rsi]
   1400099eb:	add    BYTE PTR [rdx+0x0],dh
   1400099ee:	add    BYTE PTR gs:[rdi+0x0],ah
   1400099f2:	push   rbx
   1400099f3:	add    BYTE PTR [rbp+0x0],ah
   1400099f6:	jb     0x1400099f8
   1400099f8:	jbe    0x1400099fa
   1400099fa:	add    BYTE PTR gs:[rdx+0x0],dh
   1400099fe:	add    BYTE PTR [rax],al
   140009a00:	push   rdx
   140009a01:	add    BYTE PTR [rbp+0x0],ah
   140009a04:	add    BYTE PTR [ebx+0x0],dl
   140009a08:	add    BYTE PTR gs:[rdx+0x0],dh
   140009a0c:	jbe    0x140009a0e
   140009a0e:	add    BYTE PTR gs:[rdx+0x0],dh
   140009a12:	add    BYTE PTR [rax],al
   140009a14:	add    BYTE PTR [rax],al
   140009a16:	add    BYTE PTR [rax],al
   140009a18:	add    DWORD PTR [rax],eax
   140009a1a:	add    BYTE PTR [rax],al
   140009a1c:	add    BYTE PTR [rax],al
   140009a1e:	add    BYTE PTR [rax],al
   140009a20:	rol    BYTE PTR [rax],0x0
   140009a23:	add    BYTE PTR [rax],al
   140009a25:	add    BYTE PTR [rax],al
   140009a27:	rex.RX sbb BYTE PTR [rdx+0x14000],r11b
	...
   140009a36:	add    BYTE PTR [rax],al
   140009a38:	add    DWORD PTR [rax],eax
	...
   140009a56:	add    BYTE PTR [rax],al
   140009a58:	adc    al,BYTE PTR [rdx+rax*1]
   140009a5b:	add    BYTE PTR [rax],al
   140009a5d:	add    BYTE PTR [rax],al
   140009a5f:	add    al,al
   140009a61:	add    BYTE PTR [rax],al
   140009a63:	add    BYTE PTR [rax],al
   140009a65:	add    BYTE PTR [rax],al
   140009a67:	add    DWORD PTR [rdx+r8*1],r8d
   140009a6b:	add    BYTE PTR [rax],al
   140009a6d:	add    BYTE PTR [rax],al
   140009a6f:	add    al,al
   140009a71:	add    BYTE PTR [rax],al
   140009a73:	add    BYTE PTR [rax],al
   140009a75:	add    BYTE PTR [rax],al
   140009a77:	rex.RX adc r12b,al
   140009a7a:	add    al,BYTE PTR [rax]
   140009a7c:	add    BYTE PTR [rax],al
   140009a7e:	add    BYTE PTR [rax],al
   140009a80:	rol    BYTE PTR [rax],0x0
   140009a83:	add    BYTE PTR [rax],al
   140009a85:	add    BYTE PTR [rax],al
   140009a87:	rex.RX pop rsp
   140009a89:	add    BYTE PTR [rdx+0x0],dl
   140009a8c:	add    BYTE PTR gs:[rcx+0x0],dh
   140009a90:	jne    0x140009a92
   140009a92:	imul   eax,DWORD PTR [rax],0x650072
   140009a98:	add    BYTE PTR fs:[rax],ah
   140009a9b:	add    BYTE PTR [rbx+0x0],al
   140009a9e:	(bad)  
   140009a9f:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009aa3:	add    BYTE PTR [rdi+0x0],ah
   140009aa6:	outs   dx,DWORD PTR ds:[rsi]
   140009aa7:	add    BYTE PTR [rdx+0x0],dh
   140009aaa:	imul   eax,DWORD PTR [rax],0x730065
	...
   140009ab8:	add    BYTE PTR [r8+r8*1+0x53],cl
   140009abd:	add    BYTE PTR [rcx+0x0],cl
   140009ac0:	add    BYTE PTR [rax+rax*1+0x0],r11b
   140009ac5:	add    BYTE PTR [rax],al
   140009ac7:	add    BYTE PTR [rax+rax*1+0x49],bl
   140009acb:	add    BYTE PTR [rbp+0x0],ch
   140009ace:	jo     0x140009ad0
   140009ad0:	ins    BYTE PTR es:[rdi],dx
   140009ad1:	add    BYTE PTR [rbp+0x0],ah
   140009ad4:	ins    DWORD PTR es:[rdi],dx
   140009ad5:	add    BYTE PTR [rbp+0x0],ah
   140009ad8:	outs   dx,BYTE PTR ds:[rsi]
   140009ad9:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009add:	add    BYTE PTR [rax+rax*1+0x20],ah
   140009ae1:	add    BYTE PTR [rbx+0x0],al
   140009ae4:	(bad)  
   140009ae5:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009ae9:	add    BYTE PTR [rdi+0x0],ah
   140009aec:	outs   dx,DWORD PTR ds:[rsi]
   140009aed:	add    BYTE PTR [rdx+0x0],dh
   140009af0:	imul   eax,DWORD PTR [rax],0x730065
   140009af6:	add    BYTE PTR [rax],al
   140009af8:	add    BYTE PTR cs:[rax+rax*1+0x6c],dh
   140009afd:	add    BYTE PTR [rdx+0x0],ah
	...
   140009b08:	rex.RX add DWORD PTR [rax],r8d
   140009b0b:	add    BYTE PTR [rax],al
   140009b0d:	add    BYTE PTR [rax],al
   140009b0f:	add    al,al
   140009b11:	add    BYTE PTR [rax],al
   140009b13:	add    BYTE PTR [rax],al
   140009b15:	add    BYTE PTR [rax],al
   140009b17:	rex.RX add BYTE PTR [rax],r8b
   140009b1a:	add    BYTE PTR [rax],al
   140009b1c:	add    BYTE PTR [rax],al
   140009b1e:	add    BYTE PTR [rax],al
   140009b20:	add    BYTE PTR [r8+0x0],dl
   140009b24:	push   rax
   140009b25:	add    BYTE PTR [rcx+0x0],cl
   140009b28:	add    BYTE PTR [rax],r8b
   140009b2b:	add    BYTE PTR [rax],al
   140009b2d:	add    BYTE PTR [rax],al
   140009b2f:	add    BYTE PTR [rax+0x140009b],cl
	...
   140009b3d:	add    BYTE PTR [rax],al
   140009b3f:	add    BYTE PTR [rcx],al
   140009b41:	add    BYTE PTR [rax],al
   140009b43:	add    BYTE PTR [rax],al
   140009b45:	add    BYTE PTR [rax],al
   140009b47:	add    BYTE PTR [rax-0x65],bh
   140009b4a:	add    BYTE PTR [rax+0x1],al
	...
   140009b55:	add    BYTE PTR [rax],al
   140009b57:	add    BYTE PTR [rcx],al
	...
   140009b79:	add    al,0x2
   140009b7b:	add    BYTE PTR [rax],al
   140009b7d:	add    BYTE PTR [rax],al
   140009b7f:	add    al,al
   140009b81:	add    BYTE PTR [rax],al
   140009b83:	add    BYTE PTR [rax],al
   140009b85:	add    BYTE PTR [rax],al
   140009b87:	rex.RX
   140009b88:	rex.WR (bad) 
   140009b8a:	xor    al,0x46
   140009b8c:	(bad)  
   140009b8d:	mov    bl,0xf9
   140009b8f:	rex.WX xchg rsp,rax
   140009b91:	mov    esp,0xb1a786fb
   140009b96:	mov    ?,edi
	...
   140009ba0:	rol    BYTE PTR [rax],0x0
   140009ba3:	add    BYTE PTR [rax],al
   140009ba5:	add    BYTE PTR [rax],al
   140009ba7:	rex.RX
   140009ba8:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140009bac:	add    BYTE PTR fs:[rbp+0x0],dh
   140009bb0:	ins    BYTE PTR es:[rdi],dx
   140009bb1:	add    BYTE PTR [rbp+0x0],ah
   140009bb4:	add    BYTE PTR [rax],al
   140009bb6:	add    BYTE PTR [rax],al
   140009bb8:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140009bbc:	add    BYTE PTR fs:[rbp+0x0],dh
   140009bc0:	ins    BYTE PTR es:[rdi],dx
   140009bc1:	add    BYTE PTR [rbp+0x0],ah
   140009bc4:	pop    rdi
   140009bc5:	add    BYTE PTR [rdx+0x0],dl
   140009bc8:	(bad)  
   140009bc9:	add    BYTE PTR [rdi+0x0],dh
   140009bcc:	add    BYTE PTR [rax],al
   140009bce:	add    BYTE PTR [rax],al
   140009bd0:	push   rdx
   140009bd1:	add    BYTE PTR [rbp+0x0],al
   140009bd4:	rex.RXB add BYTE PTR [r9+0x0],r9b
   140009bd8:	push   rbx
   140009bd9:	add    BYTE PTR [rax+rax*1+0x52],dl
   140009bdd:	add    BYTE PTR [rcx+0x0],bl
	...
   140009be8:	rex.W add BYTE PTR [rbx+0x0],cl
   140009bec:	rex.XB add BYTE PTR [r10+0x0],dl
	...
   140009bf8:	rex.W add BYTE PTR [rbx+0x0],cl
   140009bfc:	rex.XB add BYTE PTR [r13+0x0],dl
	...
   140009c08:	rex.W add BYTE PTR [rbx+0x0],cl
   140009c0c:	rex.WR add BYTE PTR [rbp+0x0],r9b
	...
   140009c18:	rex.W add BYTE PTR [rbx+0x0],cl
   140009c1c:	push   rbp
   140009c1d:	add    BYTE PTR [rax],al
   140009c1f:	add    BYTE PTR [rax+0x0],cl
   140009c22:	rex.WXB add BYTE PTR [r8+0x0],dl
   140009c26:	add    BYTE PTR [rax],r8b
   140009c29:	add    BYTE PTR [rax],al
   140009c2b:	add    BYTE PTR [rax],al
   140009c2d:	add    BYTE PTR [rax],al
   140009c2f:	add    BYTE PTR [rax+0x0],cl
   140009c32:	rex.WXB add BYTE PTR [r8+r8*1+0x44],al
	...
   140009c3f:	add    BYTE PTR [rax+0x0],cl
   140009c42:	rex.WXB add BYTE PTR [r11+0x0],al
   140009c46:	rex.XB add BYTE PTR [r8],al
   140009c49:	add    BYTE PTR [rax],al
   140009c4b:	add    BYTE PTR [rax],al
   140009c4d:	add    BYTE PTR [rax],al
   140009c4f:	add    BYTE PTR [rax+0x0],cl
   140009c52:	rex.WXB add BYTE PTR [r13+0x0],al
   140009c56:	pop    rcx
   140009c57:	add    BYTE PTR [rdi+0x0],bl
   140009c5a:	add    BYTE PTR [r8+r8*1+0x41],cl
   140009c5f:	add    BYTE PTR [rbx+0x0],dl
   140009c62:	push   rbx
   140009c63:	add    BYTE PTR [rbp+0x0],al
   140009c66:	push   rbx
   140009c67:	add    BYTE PTR [rdi+0x0],bl
   140009c6a:	push   rdx
   140009c6b:	add    BYTE PTR [rdi+0x0],cl
   140009c6e:	rex.WRXB add BYTE PTR [r8+r8*1+0x0],r10b
   140009c73:	add    BYTE PTR [rax],al
   140009c75:	add    BYTE PTR [rax],al
   140009c77:	add    BYTE PTR [rax+0x0],cl
   140009c7a:	rex.WXB add BYTE PTR [r13+0x0],al
   140009c7e:	pop    rcx
   140009c7f:	add    BYTE PTR [rdi+0x0],bl
   140009c82:	rex.XB add BYTE PTR [r13+0x0],dl
   140009c86:	push   rdx
   140009c87:	add    BYTE PTR [rdx+0x0],dl
   140009c8a:	add    BYTE PTR [r14+0x0],r9b
   140009c8e:	push   rsp
   140009c8f:	add    BYTE PTR [rdi+0x0],bl
   140009c92:	push   rbp
   140009c93:	add    BYTE PTR [rbx+0x0],dl
   140009c96:	add    BYTE PTR [r10+0x0],r10b
   140009c9a:	add    BYTE PTR [rax],al
   140009c9c:	add    BYTE PTR [rax],al
   140009c9e:	add    BYTE PTR [rax],al
   140009ca0:	rex.W add BYTE PTR [rbx+0x0],cl
   140009ca4:	add    BYTE PTR [r9+0x0],r11b
   140009ca8:	pop    rdi
   140009ca9:	add    BYTE PTR [rax+rax*1+0x4f],cl
   140009cad:	add    BYTE PTR [rbx+0x0],al
   140009cb0:	add    BYTE PTR [r8+rax*1+0x5f],cl
   140009cb5:	add    BYTE PTR [rbp+0x0],cl
   140009cb8:	add    BYTE PTR [r11+0x0],al
   140009cbc:	rex.W add BYTE PTR [rcx+0x0],cl
   140009cc0:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   140009cc4:	add    BYTE PTR [rax],al
   140009cc6:	add    BYTE PTR [rax],al
   140009cc8:	rex.W add BYTE PTR [rbx+0x0],cl
   140009ccc:	add    BYTE PTR [r9+0x0],r11b
   140009cd0:	pop    rdi
   140009cd1:	add    BYTE PTR [rbp+0x0],dl
   140009cd4:	push   rbx
   140009cd5:	add    BYTE PTR [rbp+0x0],al
   140009cd8:	push   rdx
   140009cd9:	add    BYTE PTR [rbx+0x0],dl
   140009cdc:	add    BYTE PTR [rax],al
   140009cde:	add    BYTE PTR [rax],al
   140009ce0:	rex.W add BYTE PTR [rbx+0x0],cl
   140009ce4:	add    BYTE PTR [r9+0x0],r11b
   140009ce8:	pop    rdi
   140009ce9:	add    BYTE PTR [rax+0x0],dl
   140009cec:	add    BYTE PTR [r10+0x0],r10b
   140009cf0:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140009cf4:	push   rdx
   140009cf5:	add    BYTE PTR [rbp+0x0],cl
   140009cf8:	add    BYTE PTR [r14+0x0],cl
   140009cfc:	rex.XB add BYTE PTR [r13+0x0],al
   140009d00:	pop    rdi
   140009d01:	add    BYTE PTR [rax+rax*1+0x41],al
   140009d05:	add    BYTE PTR [rax+rax*1+0x41],dl
   140009d09:	add    BYTE PTR [rax],al
   140009d0b:	add    BYTE PTR [rax],al
   140009d0d:	add    BYTE PTR [rax],al
   140009d0f:	add    BYTE PTR [rax+0x0],cl
   140009d12:	rex.WXB add BYTE PTR [r13+0x0],al
   140009d16:	pop    rcx
   140009d17:	add    BYTE PTR [rdi+0x0],bl
   140009d1a:	add    BYTE PTR [rcx+0x0],r11b
   140009d1e:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   140009d22:	add    BYTE PTR [rcx+0x0],r8b
   140009d26:	push   rsp
   140009d27:	add    BYTE PTR [rcx+0x0],al
   140009d2a:	add    BYTE PTR [rax],al
   140009d2c:	add    BYTE PTR [rax],al
   140009d2e:	add    BYTE PTR [rax],al
   140009d30:	rex.W add BYTE PTR [rbx+0x0],cl
   140009d34:	add    BYTE PTR [r9+0x0],r11b
   140009d38:	pop    rdi
   140009d39:	add    BYTE PTR [rbx+0x0],al
   140009d3c:	push   rbp
   140009d3d:	add    BYTE PTR [rdx+0x0],dl
   140009d40:	push   rdx
   140009d41:	add    BYTE PTR [rbp+0x0],al
   140009d44:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   140009d49:	add    BYTE PTR [rbx+0x0],al
   140009d4c:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140009d50:	rex.RX add BYTE PTR [rcx+0x0],r9b
   140009d54:	rex.RXB add BYTE PTR [r8],r8b
	...
   140009d5f:	add    al,ch
   140009d61:	fwait
   140009d62:	add    BYTE PTR [rax+0x1],al
   140009d65:	add    BYTE PTR [rax],al
   140009d67:	add    BYTE PTR [rax],al
   140009d69:	add    BYTE PTR [rax],al
   140009d6b:	cmp    bh,0xff
   140009d6e:	(bad)  
   140009d6f:	(bad)  
   140009d70:	clc    
   140009d71:	fwait
   140009d72:	add    BYTE PTR [rax+0x1],al
   140009d75:	add    BYTE PTR [rax],al
   140009d77:	add    BYTE PTR [rcx],al
   140009d79:	add    BYTE PTR [rax],al
   140009d7b:	cmp    bh,0xff
   140009d7e:	(bad)  
   140009d7f:	dec    DWORD PTR [rax]
   140009d81:	pushf  
   140009d82:	add    BYTE PTR [rax+0x1],al
   140009d85:	add    BYTE PTR [rax],al
   140009d87:	add    BYTE PTR [rdx],al
   140009d89:	add    BYTE PTR [rax],al
   140009d8b:	cmp    bh,0xff
   140009d8e:	(bad)  
   140009d8f:	call   FWORD PTR [rax]
   140009d91:	pushf  
   140009d92:	add    BYTE PTR [rax+0x1],al
   140009d95:	add    BYTE PTR [rax],al
   140009d97:	add    BYTE PTR [rbx],al
   140009d99:	add    BYTE PTR [rax],al
   140009d9b:	cmp    bh,0xff
   140009d9e:	(bad)  
   140009d9f:	jmp    QWORD PTR [rax]
   140009da1:	pushf  
   140009da2:	add    BYTE PTR [rax+0x1],al
   140009da5:	add    BYTE PTR [rax],al
   140009da7:	add    BYTE PTR [rax+rax*1],al
   140009daa:	add    BYTE PTR [rax-0x1],al
   140009db0:	xor    BYTE PTR [rax+rax*1+0x140],bl
   140009db7:	add    BYTE PTR [rsi],al
   140009db9:	add    BYTE PTR [rax],al
   140009dbb:	cmp    bh,0xff
   140009dbe:	(bad)  
   140009dbf:	inc    DWORD PTR [rax-0x64]
   140009dc2:	add    BYTE PTR [rax+0x1],al
   140009dc5:	add    BYTE PTR [rax],al
   140009dc7:	add    BYTE PTR [rip+0xffffffffff800000],al        # 0x13f809dcd
   140009dcd:	(bad)  
   140009dce:	(bad)  
   140009dcf:	call   QWORD PTR [rax-0x64]
   140009dd2:	add    BYTE PTR [rax+0x1],al
   140009dd5:	add    BYTE PTR [rax],al
   140009dd7:	add    BYTE PTR [rax],al
   140009dd9:	add    BYTE PTR [rax],al
   140009ddb:	cmp    bh,0xff
   140009dde:	(bad)  
   140009ddf:	(bad)  
   140009de0:	js     0x140009d7e
   140009de2:	add    BYTE PTR [rax+0x1],al
   140009de5:	add    BYTE PTR [rax],al
   140009de7:	add    BYTE PTR [rcx],al
   140009de9:	add    BYTE PTR [rax],al
   140009deb:	cmp    bh,0xff
   140009dee:	(bad)  
   140009def:	jmp    QWORD PTR [rax+0x140009c]
   140009df5:	add    BYTE PTR [rax],al
   140009df7:	add    BYTE PTR [rdx],al
   140009df9:	add    BYTE PTR [rax],al
   140009dfb:	cmp    bh,0xff
   140009dfe:	(bad)  
   140009dff:	dec    eax
   140009e01:	pushf  
   140009e02:	add    BYTE PTR [rax+0x1],al
   140009e05:	add    BYTE PTR [rax],al
   140009e07:	add    BYTE PTR [rbx],al
   140009e09:	add    BYTE PTR [rax],al
   140009e0b:	cmp    bh,0xff
   140009e0e:	(bad)  
   140009e0f:	jmp    rax
   140009e11:	pushf  
   140009e12:	add    BYTE PTR [rax+0x1],al
   140009e15:	add    BYTE PTR [rax],al
   140009e17:	add    BYTE PTR [rax+rax*1],al
   140009e1a:	add    BYTE PTR [rax-0x1],al
   140009e20:	adc    BYTE PTR [rbp+0x14000],bl
   140009e26:	add    BYTE PTR [rax],al
   140009e28:	(bad)  
   140009e29:	add    BYTE PTR [rax],al
   140009e2b:	cmp    bh,0xff
   140009e2e:	(bad)  
   140009e2f:	push   QWORD PTR [rax]
   140009e31:	popf   
   140009e32:	add    BYTE PTR [rax+0x1],al
   140009e35:	add    BYTE PTR [rax],al
   140009e37:	add    BYTE PTR [rip+0xffffffffff800000],al        # 0x13f809e3d
   140009e3d:	(bad)  
   140009e3e:	(bad)  
   140009e3f:	inc    DWORD PTR [rcx+0x0]
   140009e42:	push   rax
   140009e43:	add    BYTE PTR [rcx+0x0],cl
   140009e46:	sub    eax,0x53004d00
   140009e4b:	add    BYTE PTR [rip+0x69005700],ch        # 0x1a900f551
   140009e51:	add    BYTE PTR [rsi+0x0],ch
   140009e54:	sub    eax,0x6f004300
   140009e59:	add    BYTE PTR [rdx+0x0],dh
   140009e5c:	add    BYTE PTR gs:[rip+0x6f004c00],ch        # 0x1af00ea63
   140009e63:	add    BYTE PTR [rbx+0x0],ah
   140009e66:	(bad)  
   140009e67:	add    BYTE PTR [rax+rax*1+0x52],ch
   140009e6b:	add    BYTE PTR [rbp+0x0],ah
   140009e6e:	add    BYTE PTR [ecx+0x0],ch
   140009e72:	jae    0x140009e74
   140009e74:	je     0x140009e76
   140009e76:	jb     0x140009e78
   140009e78:	jns    0x140009e7a
   140009e7a:	sub    eax,0x31004c00
   140009e7f:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00cf85
   140009e85:	add    BYTE PTR [rax],dh
   140009e87:	add    BYTE PTR [rsi],ch
   140009e89:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140009e8d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140009e91:	add    BYTE PTR [rax],al
   140009e93:	add    BYTE PTR [rax],al
   140009e95:	add    BYTE PTR [rax],al
   140009e97:	add    BYTE PTR [rdx+0x65],dl
   140009e9a:	addr32 rex.R
   140009e9c:	gs ins BYTE PTR es:[rdi],dx
   140009e9e:	gs je  0x140009f06
   140009ea1:	rex.WXB
   140009ea2:	gs jns 0x140009eea
   140009ea5:	js     0x140009efe
   140009ea7:	add    BYTE PTR [rcx+0x0],ah
   140009eaa:	add    BYTE PTR fs:[rsi+0x0],dh
   140009eae:	(bad)  
   140009eaf:	add    BYTE PTR [rax+0x0],dh
   140009eb2:	imul   eax,DWORD PTR [rax],0x320033
   140009eb8:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140009ebd:	add    BYTE PTR [rax+rax*1+0x0],ch
   140009ec1:	add    BYTE PTR [rax],al
   140009ec3:	add    BYTE PTR [rax],al
   140009ec5:	add    BYTE PTR [rax],al
   140009ec7:	add    BYTE PTR [rdx+0x65],dl
   140009eca:	addr32 rex.R
   140009ecc:	gs ins BYTE PTR es:[rdi],dx
   140009ece:	gs je  0x140009f36
   140009ed1:	rex.WXB
   140009ed2:	gs jns 0x140009f2c
   140009ed5:	add    BYTE PTR [rax],al
   140009ed7:	add    BYTE PTR [rdi+0x33aac100],bl
   140009edd:	stos   DWORD PTR es:[rdi],eax
   140009ede:	stc    
   140009edf:	rex.W (bad) 
   140009ee1:	and    DWORD PTR [rdi+0x5b],edi
   140009ee4:	mov    BYTE PTR [rdx+0x6a],al
   140009ee7:	or     BYTE PTR cs:[rdi],cl
   140009eea:	movabs ds:0x8c35974bde4b8ab0,al
   140009ef3:	cld    
   140009ef4:	and    eax,0x4c4b6b0a
   140009ef9:	(bad)  
   140009efa:	xor    al,0x46
   140009efc:	(bad)  
   140009efd:	mov    bl,0xf9
   140009eff:	rex.WX xchg rsp,rax
   140009f01:	mov    esp,0xb1a786fb
   140009f06:	mov    ?,edi
   140009f08:	rex.XB push r12
   140009f0a:	push   rbx
   140009f0b:	push   rdx
   140009f0c:	rex.R push rbx
   140009f0e:	gs je  0x140009f85
   140009f11:	imul   ebp,DWORD PTR [rsi+0x67],0x543a3a73
   140009f18:	push   rbx
   140009f19:	push   rdx
   140009f1a:	rex.R
   140009f1b:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x70415f72
   140009f24:	jo     0x140009f92
   140009f26:	jns    0x140009f7a
   140009f28:	gs ins DWORD PTR es:[rdi],dx
   140009f2a:	outs   dx,DWORD PTR ds:[rsi]
   140009f2b:	je     0x140009f92
   140009f2d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x72
   140009f36:	add    BYTE PTR [rax],al
   140009f38:	rex.WRXB jo 0x140009fa0
   140009f3b:	outs   dx,BYTE PTR ds:[rsi]
   140009f3c:	push   rax
   140009f3d:	jb     0x140009fae
   140009f3f:	movsxd esp,DWORD PTR [rbp+0x73]
   140009f42:	jae    0x140009f98
   140009f44:	outs   dx,DWORD PTR ds:[rsi]
   140009f45:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   140009f49:	data16 (bad) 
   140009f4b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009f53:	and    eax,0x6e692078
   140009f58:	and    BYTE PTR [rip+0x73],ah        # 0x140009fd1
   140009f5e:	add    BYTE PTR [rax],al
   140009f60:	push   rdx
   140009f61:	rex.R
   140009f62:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x70415f72
   140009f6b:	jo     0x140009fd9
   140009f6d:	jns    0x140009fb5
   140009f6f:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x436f5472
   140009f77:	jne    0x140009feb
   140009f79:	jb     0x140009fe0
   140009f7b:	outs   dx,BYTE PTR ds:[rsi]
   140009f7c:	je     0x140009fd1
   140009f7e:	gs jae 0x140009ff4
   140009f81:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
   140009f88:	ins    BYTE PTR es:[rdi],dx
   140009f89:	gs cmp ah,BYTE PTR fs:[rax]
   140009f8d:	xor    BYTE PTR [rax+0x25],bh
   140009f90:	js     0x140009fb2
   140009f92:	imul   ebp,DWORD PTR [rsi+0x20],0x3e007325
   140009f99:	ds cmp al,BYTE PTR ds:[rax]
   140009f9d:	add    BYTE PTR [rax],al
   140009f9f:	add    BYTE PTR [rsp+rdi*1],bh
   140009fa2:	cmp    al,0x3a
   140009fa4:	add    BYTE PTR [rax],al
   140009fa6:	add    BYTE PTR [rax],al
   140009fa8:	rex.B
   140009fa9:	rex.WR push rsi
   140009fab:	cmp    al,BYTE PTR [rax]
   140009fad:	add    BYTE PTR [rax],al
   140009faf:	add    BYTE PTR [rcx+0x4e],cl
   140009fb2:	rex.RX cmp r8b,BYTE PTR [rax]
   140009fb5:	add    BYTE PTR [rax],al
   140009fb7:	add    BYTE PTR [rdi+0x52],dl
   140009fba:	rex.WRX cmp r8b,BYTE PTR [rax]
   140009fbd:	add    BYTE PTR [rax],al
   140009fbf:	add    BYTE PTR [rbp+0x52],al
   140009fc2:	push   rdx
   140009fc3:	cmp    al,BYTE PTR [rax]
   140009fc5:	add    BYTE PTR [rax],al
   140009fc7:	add    BYTE PTR [rcx],ah
   140009fc9:	rex.RX
   140009fca:	push   r12
   140009fcc:	rex.B
   140009fcd:	and    QWORD PTR [rdx],r15
   140009fd0:	add    BYTE PTR [rax],al
   140009fd2:	add    BYTE PTR [rax],al
   140009fd4:	rex.R push rbp
   140009fd6:	rex.WRB push r8
   140009fd8:	cmp    al,BYTE PTR [rax]
   140009fda:	add    BYTE PTR [rax],al
   140009fdc:	push   rbp
   140009fdd:	rex.WRX
   140009fde:	rex.WXB cmp al,BYTE PTR [r8]
   140009fe1:	add    BYTE PTR [rax],al
   140009fe3:	add    BYTE PTR [rax],al
   140009fe5:	add    BYTE PTR [rax],al
   140009fe7:	add    BYTE PTR [rbx+rdx*2+0x54],dl
   140009feb:	rex.W
   140009fec:	rex.RB
   140009fed:	rex.WRB
   140009fee:	rex.RB push r11
   140009ff0:	cmp    ah,BYTE PTR [rax]
   140009ff2:	and    eax,0x73253a73
   140009ff7:	or     al,BYTE PTR [rax]
   140009ff9:	add    BYTE PTR [rax],al
   140009ffb:	add    BYTE PTR [rax],al
   140009ffd:	add    BYTE PTR [rax],al
   140009fff:	add    al,ah
   14000a001:	cmp    eax,0x3c6f394c
   14000a006:	rcl    BYTE PTR [rcx],cl
   14000a008:	cmp    DWORD PTR [rbx+0x0],0x7a794fc0
   14000a00f:	mov    bh,0x5
   14000a011:	loopne 0x14000a015
   14000a013:	add    BYTE PTR [rax],al
   14000a015:	add    BYTE PTR [rax],al
   14000a017:	add    al,al
   14000a019:	add    BYTE PTR [rax],al
   14000a01b:	add    BYTE PTR [rax],al
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	rex.RX add BYTE PTR [rax],r8b
	...
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	rol    BYTE PTR [rax],0x0
   14000a03b:	add    BYTE PTR [rax],al
   14000a03d:	add    BYTE PTR [rax],al
   14000a03f:	rex.RX push rbx
   14000a041:	add    BYTE PTR [rdi+0x0],ch
   14000a044:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000a049:	add    BYTE PTR [rcx+0x0],ah
   14000a04c:	jb     0x14000a04e
   14000a04e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000a053:	add    BYTE PTR [rcx+0x0],ch
   14000a056:	movsxd eax,DWORD PTR [rax]
   14000a058:	jb     0x14000a05a
   14000a05a:	outs   dx,DWORD PTR ds:[rsi]
   14000a05b:	add    BYTE PTR [rbx+0x0],dh
   14000a05e:	outs   dx,DWORD PTR ds:[rsi]
   14000a05f:	add    BYTE PTR [rsi+0x0],ah
   14000a062:	je     0x14000a064
   14000a064:	pop    rsp
   14000a065:	add    BYTE PTR [rdi+0x0],dl
   14000a068:	imul   eax,DWORD PTR [rax],0x64006e
   14000a06e:	outs   dx,DWORD PTR ds:[rsi]
   14000a06f:	add    BYTE PTR [rdi+0x0],dh
   14000a072:	jae    0x14000a074
   14000a074:	pop    rsp
   14000a075:	add    BYTE PTR [rbx+0x0],al
   14000a078:	jne    0x14000a07a
   14000a07a:	jb     0x14000a07c
   14000a07c:	jb     0x14000a07e
   14000a07e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a082:	je     0x14000a084
   14000a084:	push   rsi
   14000a085:	add    BYTE PTR [rbp+0x0],ah
   14000a088:	jb     0x14000a08a
   14000a08a:	jae    0x14000a08c
   14000a08c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a092:	pop    rsp
   14000a093:	add    BYTE PTR [rbp+0x0],al
   14000a096:	js     0x14000a098
   14000a098:	jo     0x14000a09a
   14000a09a:	ins    BYTE PTR es:[rdi],dx
   14000a09b:	add    BYTE PTR [rdi+0x0],ch
   14000a09e:	jb     0x14000a0a0
   14000a0a0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a0a4:	pop    rsp
   14000a0a5:	add    BYTE PTR [rdx+0x0],dl
   14000a0a8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a0ac:	outs   dx,DWORD PTR ds:[rsi]
   14000a0ad:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a0b1:	add    BYTE PTR [rax+rax*1+0x25],bl
   14000a0b5:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000a0b9:	add    BYTE PTR [rax],al
   14000a0bb:	add    BYTE PTR [rax],al
   14000a0bd:	add    BYTE PTR [rax],al
   14000a0bf:	add    BYTE PTR [rbx+0x0],dl
   14000a0c2:	outs   dx,DWORD PTR ds:[rsi]
   14000a0c3:	add    BYTE PTR [rsi+0x0],ah
   14000a0c6:	je     0x14000a0c8
   14000a0c8:	ja     0x14000a0ca
   14000a0ca:	(bad)  
   14000a0cb:	add    BYTE PTR [rdx+0x0],dh
   14000a0ce:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000a0d3:	add    BYTE PTR [rcx+0x0],ch
   14000a0d6:	movsxd eax,DWORD PTR [rax]
   14000a0d8:	jb     0x14000a0da
   14000a0da:	outs   dx,DWORD PTR ds:[rsi]
   14000a0db:	add    BYTE PTR [rbx+0x0],dh
   14000a0de:	outs   dx,DWORD PTR ds:[rsi]
   14000a0df:	add    BYTE PTR [rsi+0x0],ah
   14000a0e2:	je     0x14000a0e4
   14000a0e4:	pop    rsp
   14000a0e5:	add    BYTE PTR [rdi+0x0],dl
   14000a0e8:	imul   eax,DWORD PTR [rax],0x64006e
   14000a0ee:	outs   dx,DWORD PTR ds:[rsi]
   14000a0ef:	add    BYTE PTR [rdi+0x0],dh
   14000a0f2:	jae    0x14000a0f4
   14000a0f4:	pop    rsp
   14000a0f5:	add    BYTE PTR [rbx+0x0],al
   14000a0f8:	jne    0x14000a0fa
   14000a0fa:	jb     0x14000a0fc
   14000a0fc:	jb     0x14000a0fe
   14000a0fe:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a102:	je     0x14000a104
   14000a104:	push   rsi
   14000a105:	add    BYTE PTR [rbp+0x0],ah
   14000a108:	jb     0x14000a10a
   14000a10a:	jae    0x14000a10c
   14000a10c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a112:	pop    rsp
   14000a113:	add    BYTE PTR [rax+rax*1+0x68],dl
   14000a117:	add    BYTE PTR [rbp+0x0],ah
   14000a11a:	ins    DWORD PTR es:[rdi],dx
   14000a11b:	add    BYTE PTR [rbp+0x0],ah
   14000a11e:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000a122:	outs   dx,BYTE PTR ds:[rsi]
   14000a123:	add    BYTE PTR [rcx+0x0],ah
   14000a126:	add    BYTE PTR [ebp+0x0],ah
   14000a12a:	jb     0x14000a12c
   14000a12c:	pop    rsp
   14000a12d:	add    BYTE PTR [rdx+0x0],dl
   14000a130:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a134:	outs   dx,DWORD PTR ds:[rsi]
   14000a135:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a139:	add    BYTE PTR [rax+rax*1+0x25],bl
   14000a13d:	add    BYTE PTR [rax+rax*1+0x0],ah
	...
   14000a14d:	add    BYTE PTR [rax],al
   14000a14f:	add    BYTE PTR [rdx+0x0],dl
   14000a152:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a156:	outs   dx,DWORD PTR ds:[rsi]
   14000a157:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a15b:	add    BYTE PTR [rax+rax*1+0x25],bl
   14000a15f:	add    BYTE PTR [rax+rax*1+0x5c],ah
   14000a163:	add    BYTE PTR [rbx+0x0],al
   14000a166:	outs   dx,DWORD PTR ds:[rsi]
   14000a167:	add    BYTE PTR [rsi+0x0],ch
   14000a16a:	je     0x14000a16c
   14000a16c:	jb     0x14000a16e
   14000a16e:	outs   dx,DWORD PTR ds:[rsi]
   14000a16f:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000a173:	add    BYTE PTR [rax+0x0],dl
   14000a176:	(bad)  
   14000a177:	add    BYTE PTR [rsi+0x0],ch
   14000a17a:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14000a17f:	add    BYTE PTR [rax+rax*1+0x65],al
   14000a183:	add    BYTE PTR [rbx+0x0],dh
   14000a186:	imul   eax,DWORD PTR [rax],0x74
   14000a189:	add    BYTE PTR [rdi+0x0],ch
   14000a18c:	jo     0x14000a18e
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	push   rdx
   14000a191:	add    BYTE PTR [rbp+0x0],ah
   14000a194:	ins    DWORD PTR es:[rdi],dx
   14000a195:	add    BYTE PTR [rdi+0x0],ch
   14000a198:	je     0x14000a19a
   14000a19a:	add    BYTE PTR gs:[rax+rax*1+0x25],bl
   14000a19f:	add    BYTE PTR [rax+rax*1+0x5c],ah
   14000a1a3:	add    BYTE PTR [rbx+0x0],al
   14000a1a6:	outs   dx,DWORD PTR ds:[rsi]
   14000a1a7:	add    BYTE PTR [rsi+0x0],ch
   14000a1aa:	je     0x14000a1ac
   14000a1ac:	jb     0x14000a1ae
   14000a1ae:	outs   dx,DWORD PTR ds:[rsi]
   14000a1af:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000a1b3:	add    BYTE PTR [rax+0x0],dl
   14000a1b6:	(bad)  
   14000a1b7:	add    BYTE PTR [rsi+0x0],ch
   14000a1ba:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14000a1bf:	add    BYTE PTR [rax+rax*1+0x65],al
   14000a1c3:	add    BYTE PTR [rbx+0x0],dh
   14000a1c6:	imul   eax,DWORD PTR [rax],0x74
   14000a1c9:	add    BYTE PTR [rdi+0x0],ch
   14000a1cc:	jo     0x14000a1ce
   14000a1ce:	pop    rsp
   14000a1cf:	add    BYTE PTR [rdi+0x0],dl
   14000a1d2:	imul   eax,DWORD PTR [rax],0x64006e
   14000a1d8:	outs   dx,DWORD PTR ds:[rsi]
   14000a1d9:	add    BYTE PTR [rdi+0x0],dh
   14000a1dc:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14000a1e0:	je     0x14000a1e2
   14000a1e2:	jb     0x14000a1e4
   14000a1e4:	imul   eax,DWORD PTR [rax],0x730063
   14000a1ea:	add    BYTE PTR [rax],al
   14000a1ec:	add    BYTE PTR [rax],al
   14000a1ee:	add    BYTE PTR [rax],al
   14000a1f0:	push   rdx
   14000a1f1:	add    BYTE PTR [rbp+0x0],ah
   14000a1f4:	ins    DWORD PTR es:[rdi],dx
   14000a1f5:	add    BYTE PTR [rdi+0x0],ch
   14000a1f8:	je     0x14000a1fa
   14000a1fa:	add    BYTE PTR gs:[rax+rax*1+0x25],bl
   14000a1ff:	add    BYTE PTR [rax+rax*1+0x5c],ah
   14000a203:	add    BYTE PTR [rdi+0x0],al
   14000a206:	add    BYTE PTR fs:[rcx+0x0],ch
   14000a20a:	push   rax
   14000a20b:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000a20f:	add    BYTE PTR [rbx+0x0],dh
   14000a212:	add    BYTE PTR [rax],al
   14000a214:	add    BYTE PTR [rax],al
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	add    BYTE PTR [r11+0x0],spl
   14000a21c:	je     0x14000a21e
   14000a21e:	imul   eax,DWORD PTR [rax],0x650076
   14000a224:	add    BYTE PTR [rbp+0x0],r12b
   14000a228:	jae    0x14000a22a
   14000a22a:	imul   eax,DWORD PTR [rax],0x74
   14000a22d:	add    BYTE PTR [rdi+0x0],ch
   14000a230:	jo     0x14000a232
   14000a232:	add    BYTE PTR [rax],al
   14000a234:	add    BYTE PTR [rax],al
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000a23c:	jb     0x14000a23e
   14000a23e:	movsxd eax,DWORD PTR [rax]
   14000a240:	add    BYTE PTR gs:[rax],ah
   14000a243:	add    BYTE PTR [rdx+0x0],al
   14000a246:	ins    BYTE PTR es:[rdi],dx
   14000a247:	add    BYTE PTR [rcx+0x0],ah
   14000a24a:	outs   dx,BYTE PTR ds:[rsi]
   14000a24b:	add    BYTE PTR [rbx+0x0],ch
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000a254:	outs   dx,BYTE PTR ds:[rsi]
   14000a255:	add    BYTE PTR [rcx+0x0],al
   14000a258:	outs   dx,BYTE PTR ds:[rsi]
   14000a259:	add    BYTE PTR [rcx+0x0],ch
   14000a25c:	ins    DWORD PTR es:[rdi],dx
   14000a25d:	add    BYTE PTR [rcx+0x0],ah
   14000a260:	je     0x14000a262
   14000a262:	add    BYTE PTR gs:[rax],al
   14000a265:	add    BYTE PTR [rax],al
   14000a267:	add    BYTE PTR [rax],dh
   14000a269:	add    BYTE PTR [rax],al
   14000a26b:	add    BYTE PTR [rax],al
   14000a26d:	add    BYTE PTR [rax],al
   14000a26f:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000a273:	add    BYTE PTR [rbx+0x0],dh
   14000a276:	imul   eax,DWORD PTR [rax],0x62
   14000a279:	add    BYTE PTR [rcx+0x0],ah
   14000a27c:	jb     0x14000a27e
   14000a27e:	add    BYTE PTR [r14+0x0],bpl
   14000a282:	imul   eax,DWORD PTR [rax],0x61006d
   14000a288:	je     0x14000a28a
   14000a28a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a290:	jae    0x14000a292
   14000a292:	add    BYTE PTR [rax],al
   14000a294:	add    BYTE PTR [rax],al
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	push   rdi
   14000a299:	add    BYTE PTR [rcx+0x0],ah
   14000a29c:	ins    BYTE PTR es:[rdi],dx
   14000a29d:	add    BYTE PTR [rax+rax*1+0x70],ch
   14000a2a1:	add    BYTE PTR [rcx+0x0],ah
   14000a2a4:	jo     0x14000a2a6
   14000a2a6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a2aa:	add    BYTE PTR [rax],al
   14000a2ac:	add    BYTE PTR [rax],al
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	push   rsp
   14000a2b1:	add    BYTE PTR [rax+0x0],ch
   14000a2b4:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a2b8:	add    BYTE PTR gs:[rcx+0x0],al
   14000a2bc:	movsxd eax,DWORD PTR [rax]
   14000a2be:	je     0x14000a2c0
   14000a2c0:	imul   eax,DWORD PTR [rax],0x650076
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	add    BYTE PTR [rdx+0x0],r14b
   14000a2cc:	(bad)  
   14000a2cd:	add    BYTE PTR [rdi+0x0],ah
   14000a2d0:	rex.RX add BYTE PTR [rbp+0x0],r14b
   14000a2d4:	ins    BYTE PTR es:[rdi],dx
   14000a2d5:	add    BYTE PTR [rax+rax*1+0x57],ch
   14000a2d9:	add    BYTE PTR [rcx+0x0],ch
   14000a2dc:	outs   dx,BYTE PTR ds:[rsi]
   14000a2dd:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000a2e1:	add    BYTE PTR [rdi+0x0],dh
   14000a2e4:	jae    0x14000a2e6
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	push   rbx
   14000a2e9:	add    BYTE PTR [rbp+0x0],ch
   14000a2ec:	outs   dx,DWORD PTR ds:[rsi]
   14000a2ed:	add    BYTE PTR [rdi+0x0],ch
   14000a2f0:	je     0x14000a2f2
   14000a2f2:	push   0x63005300
   14000a2f7:	add    BYTE PTR [rdx+0x0],dh
   14000a2fa:	outs   dx,DWORD PTR ds:[rsi]
   14000a2fb:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000a2ff:	add    BYTE PTR [rax],al
   14000a301:	add    BYTE PTR [rax],al
   14000a303:	add    BYTE PTR [rsi+0x0],cl
   14000a306:	outs   dx,DWORD PTR ds:[rsi]
	...
   14000a30f:	add    BYTE PTR [rbx+0x0],al
   14000a312:	jne    0x14000a314
   14000a314:	jb     0x14000a316
   14000a316:	jae    0x14000a318
   14000a318:	outs   dx,DWORD PTR ds:[rsi]
   14000a319:	add    BYTE PTR [rdx+0x0],dh
   14000a31c:	add    BYTE PTR [rax+r8*1+0x69],bpl
   14000a321:	add    BYTE PTR [rsi+0x0],ch
   14000a324:	imul   eax,DWORD PTR [rax],0x52
   14000a327:	add    BYTE PTR [rcx+0x0],ah
   14000a32a:	je     0x14000a32c
   14000a32c:	add    BYTE PTR gs:[rax],al
   14000a32f:	add    BYTE PTR [rip+0x3100],ch        # 0x14000d435
   14000a335:	add    BYTE PTR [rax],al
   14000a337:	add    BYTE PTR [rsi+0x0],al
   14000a33a:	outs   dx,DWORD PTR ds:[rsi]
   14000a33b:	add    BYTE PTR [rsi+0x0],ch
   14000a33e:	je     0x14000a340
   14000a340:	push   rbx
   14000a341:	add    BYTE PTR [rbp+0x0],ch
   14000a344:	outs   dx,DWORD PTR ds:[rsi]
   14000a345:	add    BYTE PTR [rdi+0x0],ch
   14000a348:	je     0x14000a34a
   14000a34a:	push   0x6e006900
   14000a34f:	add    BYTE PTR [rdi+0x0],ah
   14000a352:	push   rsp
   14000a353:	add    BYTE PTR [rcx+0x0],bh
   14000a356:	jo     0x14000a358
   14000a358:	add    BYTE PTR gs:[rax],al
   14000a35b:	add    BYTE PTR [rax],al
   14000a35d:	add    BYTE PTR [rax],al
   14000a35f:	add    BYTE PTR [rsi+0x0],al
   14000a362:	outs   dx,DWORD PTR ds:[rsi]
   14000a363:	add    BYTE PTR [rsi+0x0],ch
   14000a366:	je     0x14000a368
   14000a368:	push   rbx
   14000a369:	add    BYTE PTR [rbp+0x0],ch
   14000a36c:	outs   dx,DWORD PTR ds:[rsi]
   14000a36d:	add    BYTE PTR [rdi+0x0],ch
   14000a370:	je     0x14000a372
   14000a372:	push   0x6e006900
   14000a377:	add    BYTE PTR [rdi+0x0],ah
   14000a37a:	add    BYTE PTR [rax],al
   14000a37c:	add    BYTE PTR [rax],al
   14000a37e:	add    BYTE PTR [rax],al
   14000a380:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000a384:	outs   dx,BYTE PTR ds:[rsi]
   14000a385:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000a389:	add    BYTE PTR [rdi+0x0],ch
   14000a38c:	ins    BYTE PTR es:[rdi],dx
   14000a38d:	add    BYTE PTR [rax],ah
   14000a38f:	add    BYTE PTR [rax+0x0],dl
   14000a392:	(bad)  
   14000a393:	add    BYTE PTR [rsi+0x0],ch
   14000a396:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14000a39b:	add    BYTE PTR [rax+rax*1+0x65],al
   14000a39f:	add    BYTE PTR [rbx+0x0],dh
   14000a3a2:	imul   eax,DWORD PTR [rax],0x74
   14000a3a5:	add    BYTE PTR [rdi+0x0],ch
   14000a3a8:	jo     0x14000a3aa
   14000a3aa:	add    BYTE PTR [rax],al
   14000a3ac:	add    BYTE PTR [rax],al
   14000a3ae:	add    BYTE PTR [rax],al
   14000a3b0:	push   rbp
   14000a3b1:	add    BYTE PTR [rbx+0x0],dh
   14000a3b4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a3b8:	push   rax
   14000a3b9:	add    BYTE PTR [rdx+0x0],dh
   14000a3bc:	add    BYTE PTR gs:[rsi+0x0],ah
   14000a3c0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a3c4:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a3c8:	movsxd eax,DWORD PTR [rax]
   14000a3ca:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a3ce:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000a3d2:	jae    0x14000a3d4
   14000a3d4:	imul   eax,DWORD PTR [rax],0x0
   14000a3d7:	add    BYTE PTR [rax+rax*1+0x53],dl
   14000a3db:	add    BYTE PTR [rbx+0x0],al
   14000a3de:	outs   dx,DWORD PTR ds:[rsi]
   14000a3df:	add    BYTE PTR [rsi+0x0],ch
   14000a3e2:	outs   dx,BYTE PTR ds:[rsi]
   14000a3e3:	add    BYTE PTR [rbp+0x0],ah
   14000a3e6:	movsxd eax,DWORD PTR [rax]
   14000a3e8:	je     0x14000a3ea
   14000a3ea:	add    BYTE PTR [r14+0x0],r14b
   14000a3ee:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a3f2:	je     0x14000a3f4
   14000a3f4:	add    BYTE PTR [rax],al
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	jne    0x14000a3fa
   14000a3fa:	js     0x14000a3fc
   14000a3fc:	je     0x14000a3fe
   14000a3fe:	push   0x6d006500
   14000a403:	add    BYTE PTR [rbp+0x0],ah
   14000a406:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000a40b:	add    BYTE PTR [rax+rax*1+0x0],ch
	...
   14000a417:	add    BYTE PTR [rax],al
   14000a419:	xchg   DWORD PTR [rsi*2+0x11d0ef1f],eax
   14000a420:	cwde   
   14000a421:	mov    BYTE PTR [rax],al
   14000a423:	(bad)  
   14000a424:	xchg   edi,eax
   14000a425:	fisubr WORD PTR [rcx+rdi*8+0x55272a00]
   14000a42c:	retf   
   14000a42d:	rex.X (bad) 
   14000a42f:	adc    DWORD PTR [rcx+0xaa0035],eax
   14000a435:	rex.WXB movabs r8,0x41993052251
   14000a43f:	add    BYTE PTR [rsp+rsi*4],bh
   14000a442:	add    BYTE PTR [rax],al
   14000a444:	add    DWORD PTR [rax],eax
   14000a446:	add    BYTE PTR [rax],al
   14000a448:	pop    rsp
   14000a449:	mov    ah,0x0
   14000a44b:	add    BYTE PTR [rdx],cl
   14000a44d:	add    BYTE PTR [rax],al
   14000a44f:	add    BYTE PTR [rax+0x580000b4],dl
   14000a455:	add    BYTE PTR [rax],al
   14000a457:	add    BYTE PTR [rax],al
   14000a459:	add    BYTE PTR [rax],al
   14000a45b:	add    BYTE PTR [rcx],al
   14000a45d:	add    BYTE PTR [rax],al
   14000a45f:	add    BYTE PTR [rdx],ah
   14000a461:	add    eax,0x21993
   14000a466:	add    BYTE PTR [rax],al
   14000a468:	shl    BYTE PTR [rbx+0x0],0x0
   14000a46f:	add    BYTE PTR [rax],al
   14000a471:	add    BYTE PTR [rax],al
   14000a473:	add    BYTE PTR [rip+0xffffffffd0000000],al        # 0x11000a479
   14000a479:	mov    bl,0x0
   14000a47b:	add    al,cl
   14000a47d:	add    BYTE PTR [rax],al
   14000a47f:	add    BYTE PTR [rax],al
   14000a481:	add    BYTE PTR [rax],al
   14000a483:	add    BYTE PTR [rcx],al
   14000a485:	add    BYTE PTR [rax],al
   14000a487:	add    BYTE PTR [rdx],ah
   14000a489:	add    eax,0x61993
   14000a48e:	add    BYTE PTR [rax],al
   14000a490:	mov    WORD PTR [rdx+0x20000],?
   14000a496:	add    BYTE PTR [rax],al
   14000a498:	mov    esp,0xa0000b2
   14000a49d:	add    BYTE PTR [rax],al
   14000a49f:	add    BYTE PTR [rax],dl
   14000a4a1:	mov    bl,0x0
   14000a4a3:	add    BYTE PTR [rax+0x0],bh
   14000a4a6:	add    BYTE PTR [rax],al
   14000a4a8:	add    BYTE PTR [rax],al
   14000a4aa:	add    BYTE PTR [rax],al
   14000a4ac:	add    DWORD PTR [rax],eax
   14000a4ae:	add    BYTE PTR [rax],al
   14000a4b0:	and    al,BYTE PTR [rip+0x21993]        # 0x14002be49
   14000a4b6:	add    BYTE PTR [rax],al
   14000a4b8:	sbb    BYTE PTR [rdx+0x0],dh
   14000a4be:	add    BYTE PTR [rax],al
   14000a4c0:	add    BYTE PTR [rax],al
   14000a4c2:	add    BYTE PTR [rax],al
   14000a4c4:	add    eax,0x28000000
   14000a4c9:	mov    dl,0x0
   14000a4cb:	add    BYTE PTR [rax],bh
   14000a4cd:	add    BYTE PTR [rax],al
   14000a4cf:	add    BYTE PTR [rax],al
   14000a4d1:	add    BYTE PTR [rax],al
   14000a4d3:	add    BYTE PTR [rcx],al
   14000a4d5:	add    BYTE PTR [rax],al
   14000a4d7:	add    BYTE PTR [rdx],ah
   14000a4d9:	add    eax,0x11993
   14000a4de:	add    BYTE PTR [rax],al
   14000a4e0:	mov    al,0xb1
	...
   14000a4ea:	add    BYTE PTR [rax],al
   14000a4ec:	add    eax,DWORD PTR [rax]
   14000a4ee:	add    BYTE PTR [rax],al
   14000a4f0:	mov    eax,0x200000b1
   14000a4f5:	add    BYTE PTR [rax],al
   14000a4f7:	add    BYTE PTR [rax],al
   14000a4f9:	add    BYTE PTR [rax],al
   14000a4fb:	add    BYTE PTR [rcx],al
   14000a4fd:	add    BYTE PTR [rax],al
   14000a4ff:	add    BYTE PTR [rdx],ah
   14000a501:	add    eax,0x61993
   14000a506:	add    BYTE PTR [rax],al
   14000a508:	mov    esp,0x20000b0
   14000a50d:	add    BYTE PTR [rax],al
   14000a50f:	add    ah,ch
   14000a511:	mov    al,0x0
   14000a513:	add    BYTE PTR [rdx],cl
   14000a515:	add    BYTE PTR [rax],al
   14000a517:	add    BYTE PTR [rax-0x4f],al
   14000a51a:	add    BYTE PTR [rax],al
   14000a51c:	push   rax
   14000a51d:	add    BYTE PTR [rax],al
   14000a51f:	add    BYTE PTR [rax],al
   14000a521:	add    BYTE PTR [rax],al
   14000a523:	add    BYTE PTR [rcx],al
   14000a525:	add    BYTE PTR [rax],al
   14000a527:	add    BYTE PTR [rdx],ah
   14000a529:	add    eax,0x21993
   14000a52e:	add    BYTE PTR [rax],al
   14000a530:	push   0xb0
   14000a535:	add    BYTE PTR [rax],al
   14000a537:	add    BYTE PTR [rax],al
   14000a539:	add    BYTE PTR [rax],al
   14000a53b:	add    BYTE PTR [rip+0x78000000],al        # 0x1b800a541
   14000a541:	mov    al,0x0
   14000a543:	add    BYTE PTR [rax],ah
   14000a545:	add    BYTE PTR [rax],al
   14000a547:	add    BYTE PTR [rax],al
   14000a549:	add    BYTE PTR [rax],al
   14000a54b:	add    BYTE PTR [rcx],al
   14000a54d:	add    BYTE PTR [rax],al
   14000a54f:	add    BYTE PTR [rdx],ah
   14000a551:	add    eax,0x11993
   14000a556:	add    BYTE PTR [rax],al
   14000a558:	xor    al,0xb0
	...
   14000a562:	add    BYTE PTR [rax],al
   14000a564:	add    eax,DWORD PTR [rax]
   14000a566:	add    BYTE PTR [rax],al
   14000a568:	mov    al,0x0
   14000a56b:	add    BYTE PTR [rax],ah
   14000a56d:	add    BYTE PTR [rax],al
   14000a56f:	add    BYTE PTR [rax],al
   14000a571:	add    BYTE PTR [rax],al
   14000a573:	add    BYTE PTR [rcx],al
   14000a575:	add    BYTE PTR [rax],al
   14000a577:	add    BYTE PTR [rdx],ah
   14000a579:	add    eax,0x41993
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	(bad)  
   14000a581:	scas   al,BYTE PTR es:[rdi]
	...
   14000a58a:	add    BYTE PTR [rax],al
   14000a58c:	or     DWORD PTR [rax],eax
   14000a58e:	add    BYTE PTR [rax],al
   14000a590:	lock scas al,BYTE PTR es:[rdi]
   14000a592:	add    BYTE PTR [rax],al
   14000a594:	(bad)  
   14000a595:	add    BYTE PTR [rax],al
   14000a597:	add    BYTE PTR [rax],al
   14000a599:	add    BYTE PTR [rax],al
   14000a59b:	add    BYTE PTR [rcx],al
   14000a59d:	add    BYTE PTR [rax],al
   14000a59f:	add    BYTE PTR [rdx],ah
   14000a5a1:	add    eax,0x41993
   14000a5a6:	add    BYTE PTR [rax],al
   14000a5a8:	add    al,0xae
   14000a5aa:	add    BYTE PTR [rax],al
   14000a5ac:	add    DWORD PTR [rax],eax
   14000a5ae:	add    BYTE PTR [rax],al
   14000a5b0:	and    al,0xae
   14000a5b2:	add    BYTE PTR [rax],al
   14000a5b4:	or     BYTE PTR [rax],al
   14000a5b6:	add    BYTE PTR [rax],al
   14000a5b8:	push   rax
   14000a5b9:	scas   al,BYTE PTR es:[rdi]
   14000a5ba:	add    BYTE PTR [rax],al
   14000a5bc:	xor    BYTE PTR [rax],al
   14000a5be:	add    BYTE PTR [rax],al
   14000a5c0:	add    BYTE PTR [rax],al
   14000a5c2:	add    BYTE PTR [rax],al
   14000a5c4:	add    DWORD PTR [rax],eax
   14000a5c6:	add    BYTE PTR [rax],al
   14000a5c8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002bf61
   14000a5ce:	add    BYTE PTR [rax],al
   14000a5d0:	fsubr  QWORD PTR [rdx+0x10000]
   14000a5d6:	add    BYTE PTR [rax],al
   14000a5d8:	jl     0x14000a587
   14000a5da:	add    BYTE PTR [rax],al
   14000a5dc:	add    al,0x0
   14000a5de:	add    BYTE PTR [rax],al
   14000a5e0:	test   al,0xad
   14000a5e2:	add    BYTE PTR [rax],al
   14000a5e4:	and    BYTE PTR [rax],al
   14000a5e6:	add    BYTE PTR [rax],al
   14000a5e8:	add    BYTE PTR [rax],al
   14000a5ea:	add    BYTE PTR [rax],al
   14000a5ec:	add    DWORD PTR [rax],eax
   14000a5ee:	add    BYTE PTR [rax],al
   14000a5f0:	and    al,BYTE PTR [rip+0x21993]        # 0x14002bf89
   14000a5f6:	add    BYTE PTR [rax],al
   14000a5f8:	fsubr  QWORD PTR [rdx+0x10000]
   14000a5fe:	add    BYTE PTR [rax],al
   14000a600:	clc    
   14000a601:	lods   al,BYTE PTR ds:[rsi]
   14000a602:	add    BYTE PTR [rax],al
   14000a604:	add    al,0x0
   14000a606:	add    BYTE PTR [rax],al
   14000a608:	and    BYTE PTR [rbp+0x200000],ch
   14000a60e:	add    BYTE PTR [rax],al
   14000a610:	add    BYTE PTR [rax],al
   14000a612:	add    BYTE PTR [rax],al
   14000a614:	add    DWORD PTR [rax],eax
   14000a616:	add    BYTE PTR [rax],al
   14000a618:	and    al,BYTE PTR [rip+0x31993]        # 0x14003bfb1
   14000a61e:	add    BYTE PTR [rax],al
   14000a620:	rex.WR lods al,BYTE PTR ds:[rsi]
   14000a622:	add    BYTE PTR [rax],al
   14000a624:	add    DWORD PTR [rax],eax
   14000a626:	add    BYTE PTR [rax],al
   14000a628:	lods   al,BYTE PTR fs:[rsi]
   14000a62a:	add    BYTE PTR [rax],al
   14000a62c:	(bad)  
   14000a62d:	add    BYTE PTR [rax],al
   14000a62f:	add    BYTE PTR [rax+0x280000ac],dl
   14000a635:	add    BYTE PTR [rax],al
   14000a637:	add    BYTE PTR [rax],al
   14000a639:	add    BYTE PTR [rax],al
   14000a63b:	add    BYTE PTR [rcx],al
   14000a63d:	add    BYTE PTR [rax],al
   14000a63f:	add    BYTE PTR [rdx],ah
   14000a641:	add    eax,0x31993
   14000a646:	add    BYTE PTR [rax],al
   14000a648:	mov    al,0xab
   14000a64a:	add    BYTE PTR [rax],al
   14000a64c:	add    DWORD PTR [rax],eax
   14000a64e:	add    BYTE PTR [rax],al
   14000a650:	enter  0xab,0x0
   14000a654:	(bad)  
   14000a655:	add    BYTE PTR [rax],al
   14000a657:	add    al,dh
   14000a659:	stos   DWORD PTR es:[rdi],eax
   14000a65a:	add    BYTE PTR [rax],al
   14000a65c:	and    BYTE PTR [rax],al
   14000a65e:	add    BYTE PTR [rax],al
   14000a660:	add    BYTE PTR [rax],al
   14000a662:	add    BYTE PTR [rax],al
   14000a664:	add    DWORD PTR [rax],eax
   14000a666:	add    BYTE PTR [rax],al
   14000a668:	and    al,BYTE PTR [rip+0x21993]        # 0x14002c001
   14000a66e:	add    BYTE PTR [rax],al
   14000a670:	fsubr  QWORD PTR [rdx+0x10000]
   14000a676:	add    BYTE PTR [rax],al
   14000a678:	in     al,dx
   14000a679:	stos   BYTE PTR es:[rdi],al
   14000a67a:	add    BYTE PTR [rax],al
   14000a67c:	add    al,0x0
   14000a67e:	add    BYTE PTR [rax],al
   14000a680:	sbb    BYTE PTR [rbx+0x280000],ch
   14000a686:	add    BYTE PTR [rax],al
   14000a688:	add    BYTE PTR [rax],al
   14000a68a:	add    BYTE PTR [rax],al
   14000a68c:	add    DWORD PTR [rax],eax
   14000a68e:	add    BYTE PTR [rax],al
   14000a690:	add    BYTE PTR [rax],al
   14000a692:	add    BYTE PTR [rax],al
   14000a694:	adc    al,0x3b
   14000a696:	lahf   
   14000a697:	push   rbp
   14000a698:	add    BYTE PTR [rax],al
   14000a69a:	add    BYTE PTR [rax],al
   14000a69c:	add    al,BYTE PTR [rax]
   14000a69e:	add    BYTE PTR [rax],al
   14000a6a0:	and    al,0x0
   14000a6a2:	add    BYTE PTR [rax],al
   14000a6a4:	nop
   14000a6a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a6a6:	add    BYTE PTR [rax],al
   14000a6a8:	nop
   14000a6a9:	cdq    
   14000a6aa:	add    BYTE PTR [rax],al
   14000a6ac:	add    BYTE PTR [rax],al
   14000a6ae:	add    BYTE PTR [rax],al
   14000a6b0:	adc    al,0x3b
   14000a6b2:	lahf   
   14000a6b3:	push   rbp
   14000a6b4:	add    BYTE PTR [rax],al
   14000a6b6:	add    BYTE PTR [rax],al
   14000a6b8:	or     eax,0x74000000
   14000a6bd:	add    al,BYTE PTR [rax]
   14000a6bf:	add    al,cl
   14000a6c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a6c2:	add    BYTE PTR [rax],al
   14000a6c4:	enter  0x99,0x0
	...
   14000a6f0:	movabs al,ds:0x0
	...
   14000a745:	add    BYTE PTR [rax],al
   14000a747:	add    BYTE PTR [rax],ah
   14000a749:	rol    BYTE PTR [rax],1
   14000a74b:	rex add DWORD PTR [rax],eax
	...
   14000a75e:	add    BYTE PTR [rax],al
   14000a760:	loopne 0x14000a6f5
   14000a762:	add    BYTE PTR [rax+0x1],al
   14000a765:	add    BYTE PTR [rax],al
   14000a767:	add    al,ch
   14000a769:	xchg   ebx,eax
   14000a76a:	add    BYTE PTR [rax+0x1],al
   14000a76d:	add    BYTE PTR [rax],al
   14000a76f:	add    BYTE PTR [rax-0x6c],dl
   14000a772:	add    BYTE PTR [rax+0x1],al
   14000a775:	add    BYTE PTR [rax],al
   14000a777:	add    BYTE PTR [rax+0x0],cl
   14000a77a:	add    BYTE PTR [rax],al
   14000a77c:	add    BYTE PTR [rax],al
   14000a77e:	add    BYTE PTR [rax],al
   14000a780:	add    BYTE PTR [rip+0x0],dh        # 0x14000a786
	...
   14000a78e:	add    BYTE PTR [rax],al
   14000a790:	push   rdx
   14000a791:	push   rbx
   14000a792:	rex.R push rbx
   14000a794:	rex.W mov al,0xd8
   14000a797:	stos   DWORD PTR es:[rdi],eax
   14000a798:	cmp    bh,bh
   14000a79a:	xchg   ebx,eax
   14000a79b:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000a79d:	lods   al,BYTE PTR ds:[rsi]
   14000a79e:	sbb    al,0x8e
   14000a7a0:	xor    esi,edx
   14000a7a2:	jl     0x14000a729
   14000a7a4:	add    DWORD PTR [rax],eax
   14000a7a6:	add    BYTE PTR [rax],al
   14000a7a8:	push   rsp
   14000a7a9:	push   rbx
   14000a7aa:	push   rsp
   14000a7ab:	push   0x2e656d65
   14000a7b0:	jo     0x14000a816
   14000a7b2:	(bad)  
	...
   14000a7c7:	add    BYTE PTR [rdi+0x43],al
   14000a7ca:	push   rsp
   14000a7cb:	rex.WR add BYTE PTR [rax],r10b
   14000a7ce:	add    BYTE PTR [rax],al
   14000a7d0:	cmp    al,BYTE PTR [rdx]
   14000a7d2:	add    BYTE PTR [rax],al
   14000a7d4:	cs je  0x14000a83c
   14000a7d7:	js     0x14000a84d
   14000a7d9:	and    al,0x64
   14000a7db:	imul   eax,DWORD PTR [rax],0x40000000
   14000a7e1:	adc    al,BYTE PTR [rax]
   14000a7e3:	add    BYTE PTR [rsp+rsi*2],cl
   14000a7e6:	add    BYTE PTR [rax],al
   14000a7e8:	cs je  0x14000a850
   14000a7eb:	js     0x14000a861
   14000a7ed:	and    al,0x6d
   14000a7ef:	outs   dx,BYTE PTR ds:[rsi]
   14000a7f0:	add    BYTE PTR [rax],al
   14000a7f2:	add    BYTE PTR [rax],al
   14000a7f4:	push   rax
   14000a7f5:	xchg   BYTE PTR [rax],al
   14000a7f7:	add    BYTE PTR [rbp+0x0],bh
   14000a7fa:	add    BYTE PTR [rax],al
   14000a7fc:	cs je  0x14000a864
   14000a7ff:	js     0x14000a875
   14000a801:	and    al,0x6d
   14000a803:	outs   dx,BYTE PTR ds:[rsi]
   14000a804:	and    al,0x30
   14000a806:	xor    BYTE PTR [rax],al
   14000a808:	rol    BYTE PTR [rsi+0x3f00000],1
   14000a80e:	add    BYTE PTR [rax],al
   14000a810:	cs je  0x14000a878
   14000a813:	js     0x14000a889
   14000a815:	and    al,0x78
   14000a817:	add    al,al
   14000a819:	mov    al,BYTE PTR [rax]
   14000a81b:	add    BYTE PTR [rdx+0x2],bh
   14000a81e:	add    BYTE PTR [rax],al
   14000a820:	cs je  0x14000a888
   14000a823:	js     0x14000a899
   14000a825:	and    al,0x79
   14000a827:	add    BYTE PTR fs:[rax],al
   14000a82a:	add    BYTE PTR [rax],al
   14000a82c:	add    BYTE PTR [rax+0x3e00000],dl
   14000a832:	add    BYTE PTR [rax],al
   14000a834:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000a83d:	add    BYTE PTR [rax],al
   14000a83f:	add    al,ah
   14000a841:	xchg   ebx,eax
   14000a842:	add    BYTE PTR [rax],al
   14000a844:	adc    BYTE PTR [rax],al
   14000a846:	add    BYTE PTR [rax],al
   14000a848:	xor    BYTE PTR cs:[rax],dh
   14000a84b:	movsxd esp,DWORD PTR [rsi+0x67]
   14000a84e:	add    BYTE PTR [rax],al
   14000a850:	lock xchg ebx,eax
   14000a852:	add    BYTE PTR [rax],al
   14000a854:	or     BYTE PTR [rax],al
   14000a856:	add    BYTE PTR [rax],al
   14000a858:	cs rex.XB push r10
   14000a85b:	push   rsp
   14000a85c:	and    al,0x58
   14000a85e:	rex.XB
   14000a85f:	add    BYTE PTR [r8],al
   14000a862:	add    BYTE PTR [rax],al
   14000a864:	clc    
   14000a865:	xchg   ebx,eax
   14000a866:	add    BYTE PTR [rax],al
   14000a868:	or     BYTE PTR [rax],al
   14000a86a:	add    BYTE PTR [rax],al
   14000a86c:	cs rex.XB push r10
   14000a86f:	push   rsp
   14000a870:	and    al,0x58
   14000a872:	rex.XB
   14000a873:	rex.B
   14000a874:	add    BYTE PTR [r8],al
   14000a877:	add    BYTE PTR [rax],al
   14000a879:	xchg   esp,eax
   14000a87a:	add    BYTE PTR [rax],al
   14000a87c:	sbb    BYTE PTR [rax],al
   14000a87e:	add    BYTE PTR [rax],al
   14000a880:	cs rex.XB push r10
   14000a883:	push   rsp
   14000a884:	and    al,0x58
   14000a886:	rex.XB
   14000a887:	rex.WR add BYTE PTR [rax],r8b
   14000a88a:	add    BYTE PTR [rax],al
   14000a88c:	sbb    BYTE PTR [rax+rax*1+0x1000],dl
   14000a893:	add    BYTE PTR [rsi],ch
   14000a895:	rex.XB push r10
   14000a897:	push   rsp
   14000a898:	and    al,0x58
   14000a89a:	rex.XB push r13
   14000a89c:	add    BYTE PTR [rax],al
   14000a89e:	add    BYTE PTR [rax],al
   14000a8a0:	sub    BYTE PTR [rax+rax*1+0x800],dl
   14000a8a7:	add    BYTE PTR [rsi],ch
   14000a8a9:	rex.XB push r10
   14000a8ab:	push   rsp
   14000a8ac:	and    al,0x58
   14000a8ae:	rex.XB pop r10
   14000a8b0:	add    BYTE PTR [rax],al
   14000a8b2:	add    BYTE PTR [rax],al
   14000a8b4:	xor    BYTE PTR [rax+rax*1+0x800],dl
   14000a8bb:	add    BYTE PTR [rsi],ch
   14000a8bd:	rex.XB push r10
   14000a8bf:	push   rsp
   14000a8c0:	and    al,0x58
   14000a8c2:	rex.WB
   14000a8c3:	add    BYTE PTR [r8],al
   14000a8c6:	add    BYTE PTR [rax],al
   14000a8c8:	cmp    BYTE PTR [rax+rax*1+0x800],dl
   14000a8cf:	add    BYTE PTR [rsi],ch
   14000a8d1:	rex.XB push r10
   14000a8d3:	push   rsp
   14000a8d4:	and    al,0x58
   14000a8d6:	rex.WB
   14000a8d7:	rex.B
   14000a8d8:	add    BYTE PTR [r8],al
   14000a8db:	add    BYTE PTR [rax-0x6c],al
   14000a8de:	add    BYTE PTR [rax],al
   14000a8e0:	or     BYTE PTR [rax],al
   14000a8e2:	add    BYTE PTR [rax],al
   14000a8e4:	cs rex.XB push r10
   14000a8e7:	push   rsp
   14000a8e8:	and    al,0x58
   14000a8ea:	rex.WB pop r9
   14000a8ec:	add    BYTE PTR [rax],al
   14000a8ee:	add    BYTE PTR [rax],al
   14000a8f0:	xchg   rsp,rax
   14000a8f2:	add    BYTE PTR [rax],al
   14000a8f4:	or     BYTE PTR [rax],al
   14000a8f6:	add    BYTE PTR [rax],al
   14000a8f8:	cs rex.XB push r10
   14000a8fb:	push   rsp
   14000a8fc:	and    al,0x58
   14000a8fe:	rex.WB pop r10
   14000a900:	add    BYTE PTR [rax],al
   14000a902:	add    BYTE PTR [rax],al
   14000a904:	push   rax
   14000a905:	xchg   esp,eax
   14000a906:	add    BYTE PTR [rax],al
   14000a908:	and    BYTE PTR [rcx],al
   14000a90a:	add    BYTE PTR [rax],al
   14000a90c:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000a915:	add    BYTE PTR [rax],al
   14000a917:	add    BYTE PTR [rax-0x6b],dh
   14000a91a:	add    BYTE PTR [rax],al
   14000a91c:	and    BYTE PTR [rdx],dl
   14000a91e:	add    BYTE PTR [rax],al
   14000a920:	cs jb  0x14000a987
   14000a923:	(bad)  
   14000a924:	je     0x14000a987
   14000a926:	add    BYTE PTR [rax],al
   14000a928:	nop
   14000a929:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a92a:	add    BYTE PTR [rax],al
   14000a92c:	lods   al,BYTE PTR ds:[rsi]
   14000a92d:	add    al,BYTE PTR [rax]
   14000a92f:	add    BYTE PTR [rsi],ch
   14000a931:	jb     0x14000a997
   14000a933:	(bad)  
   14000a934:	je     0x14000a997
   14000a936:	and    al,0x7a
   14000a938:	jp     0x14000a9b4
   14000a93a:	fs (bad) 
   14000a93c:	add    BYTE PTR [eax],al
   14000a93f:	add    BYTE PTR [rax-0x56],al
   14000a942:	add    BYTE PTR [rax],al
   14000a944:	cmp    BYTE PTR [rip+0x782e0000],cl        # 0x1b82ea94a
   14000a94a:	fs (bad) 
   14000a94c:	je     0x14000a9af
   14000a94e:	add    BYTE PTR [rax],al
   14000a950:	js     0x14000a909
   14000a952:	add    BYTE PTR [rax],al
   14000a954:	xor    al,0x1
   14000a956:	add    BYTE PTR [rax],al
   14000a958:	cs js  0x14000a9bf
   14000a95b:	(bad)  
   14000a95c:	je     0x14000a9bf
   14000a95e:	and    al,0x78
   14000a960:	add    BYTE PTR [rax],al
   14000a962:	add    BYTE PTR [rax],al
   14000a964:	mov    al,0xb8
   14000a966:	add    BYTE PTR [rax],al
   14000a968:	or     BYTE PTR [rax],al
   14000a96a:	add    BYTE PTR [rax],al
   14000a96c:	push   r12
   14000a96e:	rex.WR and al,0x5f
   14000a971:	pop    rdi
   14000a972:	(bad)  
   14000a973:	add    BYTE PTR [rax+0x80000b8],bh
   14000a979:	add    BYTE PTR [rax],al
   14000a97b:	add    BYTE PTR [rcx+0x54],al
   14000a97e:	rex.WR and al,0x5f
   14000a981:	pop    rdi
   14000a982:	jp     0x14000a984
   14000a984:	sar    BYTE PTR [rax+0x780000],0x0
   14000a98b:	add    BYTE PTR [rsi],ch
   14000a98d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000a995:	add    BYTE PTR [rax],al
   14000a997:	add    BYTE PTR [rax],bh
   14000a999:	mov    ecx,0x140000
   14000a99e:	add    BYTE PTR [rax],al
   14000a9a0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000a9a9:	add    BYTE PTR [rax],al
   14000a9ab:	add    BYTE PTR [rax-0x47],dl
   14000a9ae:	add    BYTE PTR [rax],al
   14000a9b0:	loopne 0x14000a9b5
   14000a9b2:	add    BYTE PTR [rax],al
   14000a9b4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   14000a9bd:	add    BYTE PTR [rax],al
   14000a9bf:	add    BYTE PTR [rax],dh
   14000a9c1:	mov    ebp,0x8000000
   14000a9c6:	add    BYTE PTR [rax],al
   14000a9c8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   14000a9d1:	add    BYTE PTR [rax],al
   14000a9d3:	add    BYTE PTR [rax],al
   14000a9d5:	rol    BYTE PTR [rax],1
   14000a9d7:	add    BYTE PTR [rax],al
   14000a9d9:	add    DWORD PTR [rax],eax
   14000a9db:	add    BYTE PTR [rsi],ch
   14000a9dd:	fs (bad) 
   14000a9df:	je     0x14000aa42
   14000a9e1:	add    BYTE PTR [rax],al
   14000a9e3:	add    BYTE PTR [rax],al
   14000a9e5:	rol    DWORD PTR [rax],1
   14000a9e7:	add    BYTE PTR [rbx+0x2e000000],al
   14000a9ed:	fs (bad) 
   14000a9ef:	je     0x14000aa52
   14000a9f1:	and    al,0x72
   14000a9f3:	add    BYTE PTR [rax+0x400000d1],dl
   14000a9f9:	or     BYTE PTR [rax],al
   14000a9fb:	add    BYTE PTR [rsi],ch
   14000a9fd:	(bad)  
   14000a9ff:	jae    0x14000aa01
   14000aa01:	add    BYTE PTR [rax],al
   14000aa03:	add    BYTE PTR [rax],al
   14000aa05:	loopne 0x14000aa07
   14000aa07:	add    BYTE PTR [rsi+rax*1+0x702e0000],dh
   14000aa0e:	fs (bad) 
   14000aa10:	je     0x14000aa73
   14000aa12:	add    BYTE PTR [rax],al
   14000aa14:	add    al,dh
   14000aa16:	add    BYTE PTR [rax],al
   14000aa18:	(bad)  
   14000aa19:	add    DWORD PTR [rax],eax
   14000aa1b:	add    BYTE PTR [rsi],ch
   14000aa1d:	jb     0x14000aa92
   14000aa1f:	jb     0x14000aa84
   14000aa21:	and    al,0x30
   14000aa23:	xor    DWORD PTR [rax],eax
   14000aa25:	add    BYTE PTR [rax],al
   14000aa27:	add    al,ah
   14000aa29:	icebp  
   14000aa2a:	add    BYTE PTR [rax],al
   14000aa2c:	adc    BYTE PTR [rdx],dl
   14000aa2e:	add    BYTE PTR [rax],al
   14000aa30:	cs jb  0x14000aaa6
   14000aa33:	jb     0x14000aa98
   14000aa35:	and    al,0x30
   14000aa37:	xor    al,BYTE PTR [rax]
   14000aa39:	add    BYTE PTR [rax],al
   14000aa3b:	add    BYTE PTR [rax],al
   14000aa3d:	add    BYTE PTR [rax],al
   14000aa3f:	add    BYTE PTR [rcx],al
   14000aa41:	(bad)  
   14000aa42:	add    al,BYTE PTR [rax]
   14000aa44:	(bad)  
   14000aa45:	xor    al,BYTE PTR [rdx]
   14000aa47:	xor    BYTE PTR [rcx],al
   14000aa49:	(bad)  
   14000aa4a:	add    al,BYTE PTR [rax]
   14000aa4c:	(bad)  
   14000aa4d:	xor    al,BYTE PTR [rdx]
   14000aa4f:	jo     0x14000aa52
   14000aa51:	or     al,BYTE PTR [rax+rax*1]
   14000aa54:	or     dh,BYTE PTR [rsi+rax*1]
   14000aa57:	add    BYTE PTR [rdx],cl
   14000aa59:	xor    al,BYTE PTR [rsi]
   14000aa5b:	jo     0x14000aa5e
   14000aa5d:	clts   
   14000aa5f:	add    BYTE PTR [rdi],cl
   14000aa61:	fs (bad) 
   14000aa63:	add    BYTE PTR [rdi],cl
   14000aa65:	xor    al,0x6
   14000aa67:	add    BYTE PTR [rdi],cl
   14000aa69:	xor    cl,BYTE PTR [rbx]
   14000aa6b:	jo     0x14000aa86
   14000aa6d:	sub    eax,0x641b000b
   14000aa72:	sbb    al,BYTE PTR [rax]
   14000aa74:	sbb    edx,DWORD PTR [rcx+rbx*1+0x0]
   14000aa78:	sbb    esi,DWORD PTR [rax+rbx*1]
   14000aa7b:	add    BYTE PTR [rbx],bl
   14000aa7d:	add    DWORD PTR [rax+rax*1],edx
   14000aa80:	adc    al,0xf0
   14000aa82:	adc    ah,al
   14000aa84:	adc    BYTE PTR [rax+0x0],dh
   14000aa87:	add    BYTE PTR [rax],cl
   14000aa89:	test   DWORD PTR [rax],eax
   14000aa8b:	add    BYTE PTR [rax+0x1000000],dl
   14000aa91:	and    BYTE PTR [rax+rax*1],cl
   14000aa94:	and    BYTE PTR [rbp+rcx*1+0x0],ah
   14000aa98:	and    BYTE PTR [rbx+rcx*1+0x0],dl
   14000aa9c:	and    BYTE PTR [rdx+rcx*1],dh
   14000aa9f:	add    BYTE PTR [rax],ah
   14000aaa1:	xor    bl,BYTE PTR [rax+rsi*8]
   14000aaa4:	sbb    ah,al
   14000aaa6:	sbb    al,dl
   14000aaa8:	(bad)  
   14000aaa9:	rcl    BYTE PTR [rax+rsi*2],0x1
   14000aaad:	adc    al,0x8
   14000aaaf:	add    BYTE PTR [rsp+riz*2],dl
   14000aab2:	or     al,0x0
   14000aab4:	adc    al,0x54
   14000aab6:	or     eax,DWORD PTR [rax]
   14000aab8:	adc    al,0x34
   14000aaba:	or     al,BYTE PTR [rax]
   14000aabc:	adc    al,0x72
   14000aabe:	adc    BYTE PTR [rax+0x19],dh
   14000aac1:	or     BYTE PTR es:[rax],al
   14000aac4:	(bad)  
   14000aac5:	push   rdx
   14000aac6:	sbb    dh,al
   14000aac8:	sbb    al,ah
   14000aaca:	(bad)  
   14000aacb:	rcl    BYTE PTR [rax+rax*8],1
   14000aace:	adc    dh,BYTE PTR [rax+0x11]
   14000aad1:	(bad)  
   14000aad2:	adc    BYTE PTR [rax],dh
   14000aad4:	xchg   esi,eax
   14000aad5:	test   DWORD PTR [rax],eax
   14000aad7:	add    BYTE PTR [rax-0x5a],ch
   14000aada:	add    BYTE PTR [rax],al
   14000aadc:	(bad)  
   14000aadd:	(bad)  
   14000aade:	(bad)  
   14000aadf:	inc    DWORD PTR [rax]
   14000aae1:	add    BYTE PTR [rax],al
   14000aae3:	add    bh,bh
   14000aae5:	(bad)  
   14000aae6:	(bad)  
   14000aae7:	inc    DWORD PTR [rax]
	...
   14000aaf1:	add    BYTE PTR [rax],al
   14000aaf3:	add    BYTE PTR [rcx],al
   14000aaf5:	add    BYTE PTR [rax],al
   14000aaf7:	add    BYTE PTR [rcx],al
   14000aaf9:	add    BYTE PTR [rax],al
   14000aafb:	add    BYTE PTR [rax],al
   14000aafd:	stos   DWORD PTR es:[rdi],eax
   14000aafe:	add    BYTE PTR [rax],al
   14000ab00:	add    BYTE PTR [rax],al
	...
   14000ab0b:	add    dh,dl
   14000ab0d:	xchg   BYTE PTR [rax],al
   14000ab0f:	add    BYTE PTR [rax],bh
   14000ab11:	add    BYTE PTR [rax],al
   14000ab13:	add    BYTE PTR [rax],al
   14000ab15:	add    BYTE PTR [rax],al
   14000ab17:	add    BYTE PTR [rax-0xffffe6],dl
   14000ab1d:	(bad)  
   14000ab1e:	(bad)  
   14000ab1f:	jmp    rsi
   14000ab21:	sbb    al,BYTE PTR [rax]
   14000ab23:	add    BYTE PTR [rax],al
   14000ab25:	add    BYTE PTR [rax],al
   14000ab27:	add    BYTE PTR [rcx],ch
   14000ab29:	sbb    eax,DWORD PTR [rax]
   14000ab2b:	add    bh,bh
   14000ab2d:	(bad)  
   14000ab2e:	(bad)  
   14000ab2f:	call   rsi
   14000ab31:	xchg   BYTE PTR [rax],al
   14000ab33:	add    BYTE PTR [rax],al
   14000ab35:	add    BYTE PTR [rax],al
   14000ab37:	add    BYTE PTR [rcx],bl
   14000ab39:	or     al,BYTE PTR [rdx]
   14000ab3b:	add    BYTE PTR [rdx],cl
   14000ab3d:	xor    al,BYTE PTR [rsi]
   14000ab3f:	push   rax
   14000ab40:	xchg   esi,eax
   14000ab41:	test   DWORD PTR [rax],eax
   14000ab43:	add    BYTE PTR [rax-0x5a],ch
   14000ab46:	add    BYTE PTR [rax],al
   14000ab48:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415ab56
   14000ab4e:	or     BYTE PTR [rax],al
   14000ab50:	adc    eax,0x15000764
   14000ab55:	xor    al,0x6
   14000ab57:	add    BYTE PTR [rip+0x11e01132],dl        # 0x151e0bc8f
   14000ab5d:	sbb    al,0xa
   14000ab5f:	add    BYTE PTR [rsp+riz*2],bl
   14000ab62:	or     al,0x0
   14000ab64:	sbb    al,0x34
   14000ab66:	or     eax,DWORD PTR [rax]
   14000ab68:	sbb    al,0x32
   14000ab6a:	sbb    al,dh
   14000ab6c:	(bad)  
   14000ab6d:	loopne 0x14000ab83
   14000ab6f:	rcl    BYTE PTR [rdx],1
   14000ab71:	rcl    BYTE PTR [rax],0x70
   14000ab74:	out    0x83,al
   14000ab76:	add    BYTE PTR [rax],al
   14000ab78:	add    DWORD PTR [rax],eax
   14000ab7a:	add    BYTE PTR [rax],al
   14000ab7c:	gs sbb eax,0x1dc20000
   14000ab82:	add    BYTE PTR [rax],al
   14000ab84:	test   DWORD PTR [rsi+0x0],0x6010000
   14000ab8e:	add    al,BYTE PTR [rax]
   14000ab90:	(bad)  
   14000ab91:	xor    al,BYTE PTR [rdx]
   14000ab93:	push   rax
   14000ab94:	sbb    DWORD PTR [rdi+rax*1],esp
   14000ab97:	add    BYTE PTR [rdx+riz*2],bl
   14000ab9a:	sbb    al,dh
   14000ab9c:	(bad)  
   14000ab9d:	loopne 0x14000abb3
   14000ab9f:	rcl    BYTE PTR [rdx],0x70
   14000aba2:	adc    DWORD PTR [rax+0x10],esp
   14000aba5:	xor    BYTE PTR [rax],al
   14000aba7:	add    BYTE PTR [rsi+0x40000085],dl
   14000abad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000abae:	add    BYTE PTR [rax],al
   14000abb0:	(bad)  
   14000abb1:	(bad)  
   14000abb2:	(bad)  
   14000abb3:	inc    DWORD PTR [rax]
   14000abb5:	add    BYTE PTR [rax],al
   14000abb7:	add    BYTE PTR [rax],al
   14000abb9:	add    BYTE PTR [rax],al
   14000abbb:	add    BYTE PTR [rbx],bl
   14000abbd:	xchg   DWORD PTR [rax],eax
   14000abbf:	add    bh,bh
   14000abc1:	(bad)  
   14000abc2:	(bad)  
   14000abc3:	inc    DWORD PTR [rax]
   14000abc5:	add    BYTE PTR [rax],al
   14000abc7:	add    BYTE PTR [rax],al
   14000abc9:	add    BYTE PTR [rax],al
   14000abcb:	add    BYTE PTR [rcx],al
   14000abcd:	add    BYTE PTR [rax],al
   14000abcf:	add    BYTE PTR [rdx],al
   14000abd1:	add    BYTE PTR [rax],al
   14000abd3:	add    BYTE PTR [rcx],al
   14000abd5:	add    BYTE PTR [rax],al
   14000abd7:	add    ah,bl
   14000abd9:	stos   DWORD PTR es:[rdi],eax
   14000abda:	add    BYTE PTR [rax],al
   14000abdc:	add    BYTE PTR [rax],al
	...
   14000abe7:	add    BYTE PTR [rdi],ah
   14000abe9:	xchg   DWORD PTR [rax],eax
   14000abeb:	add    BYTE PTR [rax],bh
   14000abed:	add    BYTE PTR [rax],al
   14000abef:	add    BYTE PTR [rax],dl
   14000abf1:	(bad)  
   14000abf2:	add    BYTE PTR [rax],al
   14000abf4:	(bad)  
   14000abf5:	(bad)  
   14000abf6:	(bad)  
   14000abf7:	jmp    QWORD PTR [rcx+0x1e]
   14000abfa:	add    BYTE PTR [rax],al
   14000abfc:	add    BYTE PTR [rax],al
   14000abfe:	add    BYTE PTR [rax],al
   14000ac00:	jae    0x14000ac20
   14000ac02:	add    BYTE PTR [rax],al
   14000ac04:	add    DWORD PTR [rax],eax
   14000ac06:	add    BYTE PTR [rax],al
   14000ac08:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ac09:	(bad)  
   14000ac0a:	add    BYTE PTR [rax],al
   14000ac0c:	add    BYTE PTR [rax],al
   14000ac0e:	add    BYTE PTR [rax],al
   14000ac10:	scas   al,BYTE PTR es:[rdi]
   14000ac11:	(bad)  
   14000ac12:	add    BYTE PTR [rax],al
   14000ac14:	(bad)  
   14000ac15:	(bad)  
   14000ac16:	(bad)  
   14000ac17:	jmp    QWORD PTR [rdi]
   14000ac19:	xchg   DWORD PTR [rax],eax
   14000ac1b:	add    BYTE PTR [rax],al
   14000ac1d:	add    BYTE PTR [rax],al
   14000ac1f:	add    BYTE PTR [rcx],bl
   14000ac21:	or     al,BYTE PTR [rdx]
   14000ac23:	add    BYTE PTR [rdx],cl
   14000ac25:	xor    al,BYTE PTR [rsi]
   14000ac27:	push   rax
   14000ac28:	xchg   esi,eax
   14000ac29:	test   DWORD PTR [rax],eax
   14000ac2b:	add    BYTE PTR [rax-0x5a],al
   14000ac2e:	add    BYTE PTR [rax],al
   14000ac30:	sbb    DWORD PTR [rbx],esp
   14000ac32:	or     BYTE PTR [rax],al
   14000ac34:	and    esi,DWORD PTR [rsi+rcx*1]
   14000ac37:	add    BYTE PTR [rdi],dl
   14000ac39:	jb     0x14000ac4e
   14000ac3b:	lock adc eax,esp
   14000ac3e:	xadd   BYTE PTR [rip+0xffffffff96600c70],cl        # 0xd660b8b5
   14000ac45:	test   DWORD PTR [rax],eax
   14000ac47:	add    BYTE PTR [rax],bl
   14000ac49:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ac4a:	add    BYTE PTR [rax],al
   14000ac4c:	(bad)  
   14000ac4d:	(bad)  
   14000ac4e:	(bad)  
   14000ac4f:	inc    DWORD PTR [rax]
   14000ac51:	add    BYTE PTR [rax],al
   14000ac53:	add    BYTE PTR [rax],al
   14000ac55:	add    BYTE PTR [rax],al
   14000ac57:	add    BYTE PTR [rax-0x79],cl
   14000ac5a:	add    BYTE PTR [rax],al
   14000ac5c:	(bad)  
   14000ac5d:	(bad)  
   14000ac5e:	(bad)  
   14000ac5f:	inc    DWORD PTR [rax]
   14000ac61:	add    BYTE PTR [rax],al
   14000ac63:	add    BYTE PTR [rax],al
   14000ac65:	add    BYTE PTR [rax],al
   14000ac67:	add    BYTE PTR [rcx],al
   14000ac69:	add    BYTE PTR [rax],al
   14000ac6b:	add    BYTE PTR [rdx],al
   14000ac6d:	add    BYTE PTR [rax],al
   14000ac6f:	add    BYTE PTR [rcx],al
   14000ac71:	add    BYTE PTR [rax],al
   14000ac73:	add    BYTE PTR [rax-0x54],bh
   14000ac76:	add    BYTE PTR [rax],al
   14000ac78:	add    BYTE PTR [rax],al
	...
   14000ac83:	add    BYTE PTR [rdi+rax*4+0x0],dl
   14000ac87:	add    BYTE PTR [rax],bh
   14000ac89:	add    BYTE PTR [rax],al
   14000ac8b:	add    BYTE PTR [rax],al
   14000ac8d:	add    BYTE PTR [rax],al
   14000ac8f:	add    BYTE PTR [rax],ch
   14000ac91:	(bad)  
   14000ac92:	add    BYTE PTR [rax],al
   14000ac94:	(bad)  
   14000ac95:	(bad)  
   14000ac96:	(bad)  
   14000ac97:	(bad)  
   14000ac98:	jnp    0x14000acb9
   14000ac9a:	add    BYTE PTR [rax],al
   14000ac9c:	add    BYTE PTR [rax],al
   14000ac9e:	add    BYTE PTR [rax],al
   14000aca0:	lea    ebx,[rdi]
   14000aca2:	add    BYTE PTR [rax],al
   14000aca4:	add    DWORD PTR [rax],eax
   14000aca6:	add    BYTE PTR [rax],al
   14000aca8:	iret   
   14000aca9:	(bad)  
   14000acaa:	add    BYTE PTR [rax],al
   14000acac:	add    BYTE PTR [rax],al
   14000acae:	add    BYTE PTR [rax],al
   14000acb0:	(bad)  
   14000acb1:	(bad)  
   14000acb2:	add    BYTE PTR [rax],al
   14000acb4:	(bad)  
   14000acb5:	(bad)  
   14000acb6:	(bad)  
   14000acb7:	call   QWORD PTR [rdi+rax*4+0x0]
   14000acbb:	add    BYTE PTR [rax],al
   14000acbd:	add    BYTE PTR [rax],al
   14000acbf:	add    BYTE PTR [rcx],bl
   14000acc1:	or     al,BYTE PTR [rdx]
   14000acc3:	add    BYTE PTR [rdx],cl
   14000acc5:	xor    al,BYTE PTR [rsi]
   14000acc7:	push   rax
   14000acc8:	xchg   esi,eax
   14000acc9:	test   DWORD PTR [rax],eax
   14000accb:	add    BYTE PTR [rax],bl
   14000accd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000acce:	add    BYTE PTR [rax],al
   14000acd0:	add    DWORD PTR [rax+rcx*1],edx
   14000acd3:	add    BYTE PTR [rsp+riz*2],dl
   14000acd6:	or     BYTE PTR [rax],al
   14000acd8:	adc    al,0x54
   14000acda:	(bad)  
   14000acdb:	add    BYTE PTR [rsp+rsi*1],dl
   14000acde:	(bad)  
   14000acdf:	add    BYTE PTR [rdx+rsi*1],dl
   14000ace2:	adc    BYTE PTR [rax+0x19],dh
   14000ace5:	sbb    BYTE PTR [rax+rax*1],al
   14000ace8:	sbb    BYTE PTR [rbx+rcx*1],dh
   14000aceb:	add    BYTE PTR [rdx],cl
   14000aced:	push   rdx
   14000acee:	(bad)  
   14000acef:	jo     0x14000ac87
   14000acf1:	test   DWORD PTR [rax],eax
   14000acf3:	add    al,dh
   14000acf5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000acfe:	add    BYTE PTR [rax],al
   14000ad00:	add    DWORD PTR [rax],eax
   14000ad02:	add    BYTE PTR [rax],al
   14000ad04:	add    DWORD PTR [rax],eax
   14000ad06:	add    BYTE PTR [rax],al
   14000ad08:	or     al,0xad
   14000ad0a:	add    BYTE PTR [rax],al
   14000ad0c:	add    BYTE PTR [rax],al
	...
   14000ad17:	add    BYTE PTR [rbp-0x79],dh
   14000ad1a:	add    BYTE PTR [rax],al
   14000ad1c:	cmp    BYTE PTR [rax],al
   14000ad1e:	add    BYTE PTR [rax],al
   14000ad20:	add    al,0x25
   14000ad22:	add    BYTE PTR [rax],al
   14000ad24:	(bad)  
   14000ad25:	(bad)  
   14000ad26:	(bad)  
   14000ad27:	(bad)  
   14000ad28:	ds and eax,0x0
   14000ad2e:	add    BYTE PTR [rax],al
   14000ad30:	(bad)  
   14000ad31:	and    eax,0xffff0000
   14000ad36:	(bad)  
   14000ad37:	push   QWORD PTR [rbp-0x79]
   14000ad3a:	add    BYTE PTR [rax],al
   14000ad3c:	add    BYTE PTR [rax],al
   14000ad3e:	add    BYTE PTR [rax],al
   14000ad40:	sbb    DWORD PTR [rdx],ecx
   14000ad42:	add    al,BYTE PTR [rax]
   14000ad44:	or     dh,BYTE PTR [rdx]
   14000ad46:	(bad)  
   14000ad47:	push   rax
   14000ad48:	xchg   esi,eax
   14000ad49:	test   DWORD PTR [rax],eax
   14000ad4b:	add    al,dh
   14000ad4d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ad4e:	add    BYTE PTR [rax],al
   14000ad50:	add    DWORD PTR [rax],edx
   14000ad52:	or     BYTE PTR [rax],al
   14000ad54:	adc    BYTE PTR [rsp+rcx*1],dh
   14000ad57:	add    BYTE PTR [rax],dl
   14000ad59:	xor    cl,BYTE PTR [rax+rsi*8]
   14000ad5c:	or     ah,al
   14000ad5e:	or     BYTE PTR [rax+0x7],dh
   14000ad61:	(bad)  
   14000ad62:	(bad)  
   14000ad63:	push   rax
   14000ad64:	sbb    DWORD PTR [rdi],ebx
   14000ad66:	(bad)  
   14000ad67:	add    BYTE PTR [rdi],bl
   14000ad69:	xor    al,0xb
   14000ad6b:	add    BYTE PTR [rbx],dl
   14000ad6d:	push   rdx
   14000ad6e:	pavgb  mm1,QWORD PTR [rip+0xffffffff96600c70]        # 0xd660b9e5
   14000ad75:	test   DWORD PTR [rax],eax
   14000ad77:	add    al,cl
   14000ad79:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000ad82:	add    BYTE PTR [rax],al
   14000ad84:	add    DWORD PTR [rax],eax
   14000ad86:	add    BYTE PTR [rax],al
   14000ad88:	add    DWORD PTR [rax],eax
   14000ad8a:	add    BYTE PTR [rax],al
   14000ad8c:	nop
   14000ad8d:	lods   eax,DWORD PTR ds:[rsi]
   14000ad8e:	add    BYTE PTR [rax],al
   14000ad90:	add    BYTE PTR [rax],al
	...
   14000ad9b:	add    BYTE PTR [rsi+0x38000087],dl
   14000ada1:	add    BYTE PTR [rax],al
   14000ada3:	add    BYTE PTR [rax],al
   14000ada5:	add    BYTE PTR [rax],al
   14000ada7:	add    BYTE PTR [rax],cl
   14000ada9:	sub    BYTE PTR [rax],al
   14000adab:	add    bh,bh
   14000adad:	(bad)  
   14000adae:	(bad)  
   14000adaf:	(bad)  
   14000adb0:	cmp    eax,0x28
   14000adb5:	add    BYTE PTR [rax],al
   14000adb7:	add    BYTE PTR [rdi+0x28],cl
   14000adba:	add    BYTE PTR [rax],al
   14000adbc:	(bad)  
   14000adbd:	(bad)  
   14000adbe:	(bad)  
   14000adbf:	call   QWORD PTR [rsi+0x87]
   14000adc5:	add    BYTE PTR [rax],al
   14000adc7:	add    BYTE PTR [rcx],bl
   14000adc9:	or     al,BYTE PTR [rdx]
   14000adcb:	add    BYTE PTR [rdx],cl
   14000adcd:	xor    al,BYTE PTR [rsi]
   14000adcf:	push   rax
   14000add0:	xchg   esi,eax
   14000add1:	test   DWORD PTR [rax],eax
   14000add3:	add    al,cl
   14000add5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000add6:	add    BYTE PTR [rax],al
   14000add8:	add    DWORD PTR [rsi+rax*1],edx
   14000addb:	add    BYTE PTR [rsp+riz*2],dl
   14000adde:	(bad)  
   14000addf:	add    BYTE PTR [rsp+rsi*1],dl
   14000ade2:	(bad)  
   14000ade3:	add    BYTE PTR [rdx+rsi*1],dl
   14000ade6:	adc    BYTE PTR [rax+0x19],dh
   14000ade9:	and    DWORD PTR [rdi],eax
   14000adeb:	add    BYTE PTR [rax],bl
   14000aded:	(bad)  
   14000adee:	adc    al,0xf0
   14000adf0:	adc    ah,al
   14000adf2:	adc    al,dl
   14000adf4:	(bad)  
   14000adf5:	ror    BYTE PTR [rax+riz*2],0xb
   14000adf9:	xor    BYTE PTR [rax],al
   14000adfb:	add    BYTE PTR [rsi-0x5fffff7b],dl
   14000ae01:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ae02:	add    BYTE PTR [rax],al
   14000ae04:	(bad)  
   14000ae05:	(bad)  
   14000ae06:	(bad)  
   14000ae07:	inc    DWORD PTR [rax]
   14000ae09:	add    BYTE PTR [rax],al
   14000ae0b:	add    BYTE PTR [rax],al
   14000ae0d:	add    BYTE PTR [rax],al
   14000ae0f:	add    BYTE PTR [rdi-0xffff79],dh
   14000ae15:	(bad)  
   14000ae16:	(bad)  
   14000ae17:	inc    DWORD PTR [rax]
   14000ae19:	add    BYTE PTR [rax],al
   14000ae1b:	add    bh,bh
   14000ae1d:	(bad)  
   14000ae1e:	(bad)  
   14000ae1f:	(bad)  
   14000ae20:	fiadd  WORD PTR [rdi+0x0]
   14000ae26:	add    BYTE PTR [rax],al
   14000ae28:	add    DWORD PTR [rax],eax
   14000ae2a:	add    BYTE PTR [rax],al
   14000ae2c:	add    al,BYTE PTR [rax]
   14000ae2e:	add    BYTE PTR [rax],al
   14000ae30:	add    DWORD PTR [rax],eax
   14000ae32:	add    BYTE PTR [rax],al
   14000ae34:	cmp    BYTE PTR [rsi+0x400000],ch
	...
   14000ae42:	add    BYTE PTR [rax],al
   14000ae44:	ret    
   14000ae45:	xchg   DWORD PTR [rax],eax
   14000ae47:	add    BYTE PTR [rax+0x0],cl
   14000ae4a:	add    BYTE PTR [rax],al
   14000ae4c:	add    BYTE PTR [rax],al
   14000ae4e:	add    BYTE PTR [rax],al
   14000ae50:	pop    rax
   14000ae51:	sub    DWORD PTR [rax],eax
   14000ae53:	add    bh,bh
   14000ae55:	(bad)  
   14000ae56:	(bad)  
   14000ae57:	dec    esp
   14000ae59:	sub    DWORD PTR [rax],eax
   14000ae5b:	add    BYTE PTR [rax],al
   14000ae5d:	add    BYTE PTR [rax],al
   14000ae5f:	add    ah,dh
   14000ae61:	sub    DWORD PTR [rax],eax
   14000ae63:	add    BYTE PTR [rcx],al
   14000ae65:	add    BYTE PTR [rax],al
   14000ae67:	add    BYTE PTR [rsi],ah
   14000ae69:	sub    al,BYTE PTR [rax]
   14000ae6b:	add    BYTE PTR [rax],al
   14000ae6d:	add    BYTE PTR [rax],al
   14000ae6f:	add    BYTE PTR [rsi],ch
   14000ae71:	sub    al,BYTE PTR [rax]
   14000ae73:	add    bh,bh
   14000ae75:	(bad)  
   14000ae76:	(bad)  
   14000ae77:	(bad)  
   14000ae78:	mov    esi,0x300002a
   14000ae7d:	add    BYTE PTR [rax],al
   14000ae7f:	add    BYTE PTR [rbp+0x2b],bl
   14000ae82:	add    BYTE PTR [rax],al
   14000ae84:	(bad)  
   14000ae85:	(bad)  
   14000ae86:	(bad)  
   14000ae87:	inc    ebx
   14000ae89:	xchg   DWORD PTR [rax],eax
   14000ae8b:	add    BYTE PTR [rax],al
   14000ae8d:	add    BYTE PTR [rax],al
   14000ae8f:	add    BYTE PTR [rcx],bl
   14000ae91:	or     al,BYTE PTR [rdx]
   14000ae93:	add    BYTE PTR [rdx],cl
   14000ae95:	push   rdx
   14000ae96:	(bad)  
   14000ae97:	push   rax
   14000ae98:	xchg   esi,eax
   14000ae99:	test   DWORD PTR [rax],eax
   14000ae9b:	add    BYTE PTR [rax+0x190000a5],ah
   14000aea1:	(bad)  
   14000aea2:	or     DWORD PTR [rax],eax
   14000aea4:	es fs pop rax
   14000aea7:	add    BYTE PTR [rdx],ah
   14000aea9:	xor    al,0x56
   14000aeab:	add    BYTE PTR [rip+0x7005201],dl        # 0x1470100b2
   14000aeb1:	loopne 0x14000aeb8
   14000aeb3:	jo     0x14000aeb9
   14000aeb5:	push   rax
   14000aeb6:	add    BYTE PTR [rax],al
   14000aeb8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000aeb9:	test   DWORD PTR [rax],eax
   14000aebb:	add    BYTE PTR [rax-0x5b],bh
   14000aebe:	add    BYTE PTR [rax],al
   14000aec0:	(bad)  
   14000aec1:	add    al,BYTE PTR [rax]
   14000aec3:	add    bh,bh
   14000aec5:	(bad)  
   14000aec6:	(bad)  
   14000aec7:	push   rax
   14000aec9:	xchg   DWORD PTR [rax],eax
   14000aecb:	add    BYTE PTR [rax],al
   14000aecd:	add    BYTE PTR [rax],al
   14000aecf:	add    ah,bh
   14000aed1:	xchg   DWORD PTR [rax],eax
   14000aed3:	add    BYTE PTR [rcx],al
   14000aed5:	add    BYTE PTR [rax],al
   14000aed7:	add    BYTE PTR [rax],cl
   14000aed9:	mov    BYTE PTR [rax],al
   14000aedb:	add    BYTE PTR [rdx],al
   14000aedd:	add    BYTE PTR [rax],al
   14000aedf:	add    BYTE PTR [rax+rcx*4],dl
	...
   14000aeee:	add    BYTE PTR [rax],al
   14000aef0:	shr    BYTE PTR [rbx],0x0
   14000aef3:	add    bh,bh
   14000aef5:	(bad)  
   14000aef6:	(bad)  
   14000aef7:	jmp    QWORD PTR [rsp+rbp*1]
   14000aefa:	add    BYTE PTR [rax],al
   14000aefc:	add    BYTE PTR [rax],al
   14000aefe:	add    BYTE PTR [rax],al
   14000af00:	cld    
   14000af01:	sub    al,0x0
   14000af03:	add    BYTE PTR [rcx],al
   14000af05:	add    BYTE PTR [rax],al
   14000af07:	add    BYTE PTR [rbp+0x2d],dl
   14000af0a:	add    BYTE PTR [rax],al
   14000af0c:	add    al,BYTE PTR [rax]
   14000af0e:	add    BYTE PTR [rax],al
   14000af10:	pop    rbx
   14000af11:	sub    eax,0x30000
   14000af16:	add    BYTE PTR [rax],al
   14000af18:	mov    edx,0x200002d
   14000af1d:	add    BYTE PTR [rax],al
   14000af1f:	add    dl,bl
   14000af21:	sub    eax,0x10000
   14000af26:	add    BYTE PTR [rax],al
   14000af28:	adc    al,0x2e
   14000af2a:	add    BYTE PTR [rax],al
   14000af2c:	add    BYTE PTR [rax],al
   14000af2e:	add    BYTE PTR [rax],al
   14000af30:	push   rsp
   14000af31:	add    BYTE PTR cs:[rax],al
   14000af34:	(bad)  
   14000af35:	(bad)  
   14000af36:	(bad)  
   14000af37:	inc    DWORD PTR [rcx]
   14000af39:	clts   
   14000af3b:	add    BYTE PTR [rdi],cl
   14000af3d:	or     al,BYTE PTR fs:[rax]
   14000af40:	sysenter 
   14000af42:	or     DWORD PTR [rax],eax
   14000af44:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000af47:	jo     0x14000af62
   14000af49:	(bad)  
   14000af4a:	or     DWORD PTR [rax],eax
   14000af4c:	(bad)  
   14000af4d:	fs push rsp
   14000af4f:	add    BYTE PTR [rsi],bl
   14000af51:	xor    al,0x53
   14000af53:	add    BYTE PTR [rsi],bl
   14000af55:	add    DWORD PTR [rsi+0x0],ecx
   14000af58:	(bad)  
   14000af5a:	or     eax,0x500be0
   14000af5f:	add    BYTE PTR [rax],cl
   14000af61:	test   DWORD PTR [rax],eax
   14000af63:	add    BYTE PTR [rax+0x2],ah
   14000af66:	add    BYTE PTR [rax],al
   14000af68:	sbb    DWORD PTR [rax],esi
   14000af6a:	or     eax,DWORD PTR [rax]
   14000af6c:	(bad)  
   14000af6d:	xor    al,0x52
   14000af6f:	add    BYTE PTR [rdi],bl
   14000af71:	add    DWORD PTR [rax+0x0],ecx
   14000af74:	adc    al,dh
   14000af76:	(bad)  
   14000af77:	loopne 0x14000af85
   14000af79:	ror    BYTE PTR [rdx],1
   14000af7b:	ror    BYTE PTR [rax],0x70
   14000af7e:	(bad)  
   14000af7f:	(bad)  
   14000af80:	(bad)  
   14000af81:	push   rax
   14000af82:	add    BYTE PTR [rax],al
   14000af84:	or     BYTE PTR [rbp+0x2300000],al
   14000af8a:	add    BYTE PTR [rax],al
   14000af8c:	sbb    DWORD PTR [rax],esp
   14000af8e:	(bad)  
   14000af8f:	add    BYTE PTR [rsi],cl
   14000af91:	add    DWORD PTR [rax+rax*1+0x7],ecx
   14000af95:	loopne 0x14000af9c
   14000af97:	jo     0x14000af9d
   14000af99:	(bad)  
   14000af9a:	add    edx,DWORD PTR [rax+0x2]
   14000af9d:	xor    BYTE PTR [rax],al
   14000af9f:	add    BYTE PTR [rax],cl
   14000afa1:	test   DWORD PTR [rax],eax
   14000afa3:	add    BYTE PTR [rax+0x2],dl
   14000afa6:	add    BYTE PTR [rax],al
   14000afa8:	add    DWORD PTR [rdx],edx
   14000afaa:	(bad)  
   14000afab:	add    BYTE PTR [rdx],dl
   14000afad:	xor    al,0xb
   14000afaf:	add    BYTE PTR [rdx],dl
   14000afb1:	push   rdx
   14000afb2:	(bad)  
   14000afb3:	loopne 0x14000afc1
   14000afb5:	jo     0x14000afc2
   14000afb7:	(bad)  
   14000afb8:	or     DWORD PTR [rcx+rax*1],eax
   14000afbb:	add    BYTE PTR [rdx+riz*2],al
   14000afbe:	add    BYTE PTR [rax],al
   14000afc0:	out    0x83,al
   14000afc2:	add    BYTE PTR [rax],al
   14000afc4:	add    DWORD PTR [rax],eax
   14000afc6:	add    BYTE PTR [rax],al
   14000afc8:	jo     0x14000b005
   14000afca:	add    BYTE PTR [rax],al
   14000afcc:	jle    0x14000b009
   14000afce:	add    BYTE PTR [rax],al
   14000afd0:	mov    BYTE PTR es:[rax],al
   14000afd3:	add    BYTE PTR [rsi+0x3b],bh
   14000afd6:	add    BYTE PTR [rax],al
   14000afd8:	add    DWORD PTR [rdi],ecx
   14000afda:	(bad)  
   14000afdb:	add    BYTE PTR [rdi],cl
   14000afdd:	or     DWORD PTR fs:[rax],eax
   14000afe0:	sysenter 
   14000afe2:	or     BYTE PTR [rax],al
   14000afe4:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000afe7:	jo     0x14000b002
   14000afe9:	sub    al,0x9
   14000afeb:	add    BYTE PTR [rbx],bl
   14000afed:	xor    al,0x5e
   14000afef:	add    DWORD PTR [rbx],ebx
   14000aff1:	add    DWORD PTR [rsi+0x1],edx
   14000aff4:	or     al,0xf0
   14000aff6:	or     ah,al
   14000aff8:	or     BYTE PTR [rax+0x7],dh
   14000affb:	(bad)  
   14000affc:	(bad)  
   14000affd:	push   rax
   14000affe:	add    BYTE PTR [rax],al
   14000b000:	or     BYTE PTR [rbp+0xaa00000],al
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41db01a
   14000b00e:	or     eax,DWORD PTR [rax]
   14000b010:	sbb    eax,0x1d000a64
   14000b015:	push   rsp
   14000b016:	or     DWORD PTR [rax],eax
   14000b018:	sbb    eax,0x1d000834
   14000b01d:	xor    bl,BYTE PTR [rcx]
   14000b01f:	lock (bad) 
   14000b021:	loopne 0x14000b038
   14000b023:	rcl    BYTE PTR [rcx],0x13
   14000b026:	add    al,BYTE PTR [rax]
   14000b028:	or     dl,BYTE PTR [rdx+0x6]
   14000b02b:	xor    BYTE PTR [rsi+0x50000085],dl
   14000b031:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	(bad)  
   14000b035:	(bad)  
   14000b036:	(bad)  
   14000b037:	dec    DWORD PTR [rax+rcx*4+0x0]
   14000b03b:	add    BYTE PTR [rax],al
   14000b03d:	add    BYTE PTR [rax],al
   14000b03f:	add    BYTE PTR [rax],bl
   14000b041:	rex.X add BYTE PTR [rax],al
   14000b044:	(bad)  
   14000b045:	(bad)  
   14000b046:	(bad)  
   14000b047:	jmp    FWORD PTR [rsi]
   14000b049:	rex.X add BYTE PTR [rax],al
   14000b04c:	add    BYTE PTR [rax],al
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	xor    al,0x42
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	(bad)  
   14000b055:	(bad)  
   14000b056:	(bad)  
   14000b057:	call   QWORD PTR [rcx]
   14000b059:	adc    eax,DWORD PTR [rdx]
   14000b05b:	add    BYTE PTR [rdx],cl
   14000b05d:	push   rdx
   14000b05e:	(bad)  
   14000b05f:	xor    BYTE PTR [rsi+0x28000085],dl
   14000b065:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b066:	add    BYTE PTR [rax],al
   14000b068:	(bad)  
   14000b069:	(bad)  
   14000b06a:	(bad)  
   14000b06b:	call   FWORD PTR [rsi-0x78]
   14000b06e:	add    BYTE PTR [rax],al
   14000b070:	(bad)  
   14000b071:	(bad)  
   14000b072:	(bad)  
   14000b073:	jmp    FWORD PTR [rsi-0x78]
   14000b076:	add    BYTE PTR [rax],al
   14000b078:	xor    BYTE PTR [rbx+0x0],al
   14000b07b:	add    bh,bh
   14000b07d:	(bad)  
   14000b07e:	(bad)  
   14000b07f:	dec    DWORD PTR [rbp+0x43]
   14000b082:	add    BYTE PTR [rax],al
   14000b084:	add    BYTE PTR [rax],al
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	pop    rdx
   14000b089:	rex.XB add BYTE PTR [r8],al
   14000b08c:	(bad)  
   14000b08d:	(bad)  
   14000b08e:	(bad)  
   14000b08f:	call   FWORD PTR [rdi+0x43]
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	add    DWORD PTR [rax],eax
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	push   0xffffffffff000043
   14000b09d:	(bad)  
   14000b09e:	(bad)  
   14000b09f:	call   FWORD PTR [rcx]
   14000b0a1:	or     BYTE PTR es:[rax],al
   14000b0a4:	(bad)  
   14000b0a5:	mov    dl,0x1a
   14000b0a7:	lock sbb al,ah
   14000b0aa:	(bad)  
   14000b0ab:	rcl    BYTE PTR [rax+rax*8],1
   14000b0ae:	adc    dh,BYTE PTR [rax+0x11]
   14000b0b1:	(bad)  
   14000b0b2:	adc    BYTE PTR [rax],dh
   14000b0b4:	xchg   esi,eax
   14000b0b5:	test   DWORD PTR [rax],eax
   14000b0b7:	add    BYTE PTR [rax],al
   14000b0b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	(bad)  
   14000b0bd:	(bad)  
   14000b0be:	(bad)  
   14000b0bf:	inc    DWORD PTR [rax]
   14000b0c1:	add    BYTE PTR [rax],al
   14000b0c3:	add    bh,bh
   14000b0c5:	(bad)  
   14000b0c6:	(bad)  
   14000b0c7:	inc    DWORD PTR [rax]
   14000b0c9:	add    BYTE PTR [rax],al
   14000b0cb:	add    bh,bh
   14000b0cd:	(bad)  
   14000b0ce:	(bad)  
   14000b0cf:	call   FWORD PTR [rbx+0x2000088]
   14000b0d5:	add    BYTE PTR [rax],al
   14000b0d7:	add    BYTE PTR [rax],al
   14000b0d9:	add    BYTE PTR [rax],al
   14000b0db:	add    BYTE PTR [rdx],al
   14000b0dd:	add    BYTE PTR [rax],al
   14000b0df:	add    BYTE PTR [rax],al
   14000b0e1:	add    BYTE PTR [rax],al
   14000b0e3:	add    BYTE PTR [rdx],al
   14000b0e5:	add    BYTE PTR [rax],al
   14000b0e7:	add    dl,al
   14000b0e9:	mov    BYTE PTR [rax],al
	...
   14000b0f3:	add    BYTE PTR [rcx],al
   14000b0f5:	add    BYTE PTR [rax],al
   14000b0f7:	add    BYTE PTR [rcx],al
   14000b0f9:	add    BYTE PTR [rax],al
   14000b0fb:	add    BYTE PTR [rcx+rsi*4],dl
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	add    eax,DWORD PTR [rax]
   14000b102:	add    BYTE PTR [rax],al
   14000b104:	add    eax,DWORD PTR [rax]
   14000b106:	add    BYTE PTR [rax],al
   14000b108:	add    al,0x0
   14000b10a:	add    BYTE PTR [rax],al
   14000b10c:	add    DWORD PTR [rax],eax
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	sub    BYTE PTR [rcx+0x400000],dh
	...
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	or     BYTE PTR [rax+0x380000],0x0
   14000b127:	add    BYTE PTR [rax+0x0],al
	...
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b135:	mov    BYTE PTR [rax],al
   14000b137:	add    BYTE PTR [rax],bh
   14000b139:	add    BYTE PTR [rax],al
   14000b13b:	add    BYTE PTR [rax],al
   14000b13d:	add    BYTE PTR [rax],al
   14000b13f:	add    ah,al
   14000b141:	rex.XB add BYTE PTR [r8],al
   14000b144:	(bad)  
   14000b145:	(bad)  
   14000b146:	(bad)  
   14000b147:	jmp    FWORD PTR [rsp+rax*2]
   14000b14a:	add    BYTE PTR [rax],al
   14000b14c:	add    BYTE PTR [rax],al
   14000b14e:	add    BYTE PTR [rax],al
   14000b150:	rex.WX
   14000b151:	add    BYTE PTR [rax],r8b
   14000b154:	(bad)  
   14000b155:	(bad)  
   14000b156:	(bad)  
   14000b157:	push   QWORD PTR [rdi+0x44]
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	add    al,BYTE PTR [rax]
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	lahf   
   14000b161:	add    BYTE PTR [rax],r8b
   14000b164:	add    eax,DWORD PTR [rax]
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	mov    ebx,0x2000044
   14000b16d:	add    BYTE PTR [rax],al
   14000b16f:	add    bl,dh
   14000b171:	add    BYTE PTR [rax],r8b
   14000b174:	add    eax,0x2f000000
   14000b179:	rex.RX add BYTE PTR [rax],r8b
   14000b17c:	add    al,BYTE PTR [rax]
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	cmp    BYTE PTR [rsi+0x0],al
   14000b183:	add    bh,bh
   14000b185:	(bad)  
   14000b186:	(bad)  
   14000b187:	inc    DWORD PTR [rax+0x88]
   14000b18d:	add    BYTE PTR [rax],al
   14000b18f:	add    BYTE PTR [rcx],bl
   14000b191:	or     al,BYTE PTR [rdx]
   14000b193:	add    BYTE PTR [rdx],cl
   14000b195:	xor    al,BYTE PTR [rsi]
   14000b197:	push   rax
   14000b198:	xchg   esi,eax
   14000b199:	test   DWORD PTR [rax],eax
   14000b19b:	add    BYTE PTR [rax],al
   14000b19d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	adc    DWORD PTR [rip+0x62040001],ecx        # 0x1a204b1a7
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	xchg   esi,eax
   14000b1a9:	test   DWORD PTR [rax],eax
   14000b1ab:	add    al,bl
   14000b1ad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	(bad)  
   14000b1b1:	(bad)  
   14000b1b2:	(bad)  
   14000b1b3:	call   rsp
   14000b1b5:	mov    BYTE PTR [rax],al
   14000b1b7:	add    BYTE PTR [rax+0x46],ah
   14000b1ba:	add    BYTE PTR [rax],al
   14000b1bc:	(bad)  
   14000b1bd:	(bad)  
   14000b1be:	(bad)  
   14000b1bf:	(bad)  
   14000b1c0:	jge    0x14000b208
   14000b1c2:	add    BYTE PTR [rax],al
   14000b1c4:	add    BYTE PTR [rax],al
   14000b1c6:	add    BYTE PTR [rax],al
   14000b1c8:	xchg   ecx,eax
   14000b1c9:	rex.RX add BYTE PTR [rax],r8b
   14000b1cc:	(bad)  
   14000b1cd:	(bad)  
   14000b1ce:	(bad)  
   14000b1cf:	inc    DWORD PTR [rcx]
   14000b1d1:	add    al,0x1
   14000b1d3:	add    BYTE PTR [rdx+rax*2],al
   14000b1d6:	add    BYTE PTR [rax],al
   14000b1d8:	add    DWORD PTR [rcx],ebx
   14000b1da:	or     al,BYTE PTR [rax]
   14000b1dc:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14000b1e0:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14000b1e4:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000b1e8:	sbb    DWORD PTR [rsi+rax*1],esi
   14000b1eb:	add    BYTE PTR [rcx],bl
   14000b1ed:	xor    dl,BYTE PTR [rip+0xb3319e0]        # 0x14b33cbd3
   14000b1f3:	add    BYTE PTR [rip+0x19001b34],ah        # 0x15900cd2d
   14000b1f9:	add    DWORD PTR [rdx],edx
   14000b1fb:	add    BYTE PTR [rsi],cl
   14000b1fd:	lock or al,0xe0
   14000b200:	or     dl,al
   14000b202:	or     al,al
   14000b204:	(bad)  
   14000b205:	jo     0x14000b20c
   14000b207:	(bad)  
   14000b208:	add    al,0x50
   14000b20a:	add    BYTE PTR [rax],al
   14000b20c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b20d:	test   DWORD PTR [rax],eax
   14000b20f:	add    BYTE PTR [rax-0x7dffff5c],dh
   14000b215:	add    BYTE PTR [rax],al
   14000b217:	add    bh,bh
   14000b219:	(bad)  
   14000b21a:	(bad)  
   14000b21b:	jmp    rsi
   14000b21d:	mov    BYTE PTR [rax],al
   14000b21f:	add    BYTE PTR [rax],al
   14000b221:	add    BYTE PTR [rax],al
   14000b223:	add    dl,dh
   14000b225:	mov    BYTE PTR [rax],al
   14000b227:	add    BYTE PTR [rax+rcx*2+0x0],bh
   14000b22b:	add    bh,bh
   14000b22d:	(bad)  
   14000b22e:	(bad)  
   14000b22f:	call   FWORD PTR [rax]
   14000b231:	rex.WB add BYTE PTR [r8],al
   14000b234:	add    BYTE PTR [rax],al
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	rex.WXB
   14000b239:	rex.WX add BYTE PTR [rax],al
   14000b23c:	add    DWORD PTR [rax],eax
   14000b23e:	add    BYTE PTR [rax],al
   14000b240:	movsxd ecx,DWORD PTR [rdx+0x0]
   14000b243:	add    BYTE PTR [rax],al
   14000b245:	add    BYTE PTR [rax],al
   14000b247:	add    ah,dh
   14000b249:	rex.WX add BYTE PTR [rax],al
   14000b24c:	(bad)  
   14000b24d:	(bad)  
   14000b24e:	(bad)  
   14000b24f:	inc    DWORD PTR [rcx]
   14000b251:	sbb    DWORD PTR [rdx],ecx
   14000b253:	add    BYTE PTR [rcx],bl
   14000b255:	je     0x14000b260
   14000b257:	add    BYTE PTR [rcx],bl
   14000b259:	or     BYTE PTR fs:[rax],al
   14000b25c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000b260:	sbb    DWORD PTR [rsi+rax*1],esi
   14000b263:	add    BYTE PTR [rcx],bl
   14000b265:	xor    dl,BYTE PTR [rip+0x93419f0]        # 0x14934cc5b
   14000b26b:	add    BYTE PTR [rcx],bl
   14000b26d:	add    DWORD PTR [rsp+rax*1],esi
   14000b270:	or     al,0xf0
   14000b272:	or     ah,al
   14000b274:	or     al,dl
   14000b276:	(bad)  
   14000b277:	rol    BYTE PTR [rax+rsi*2],0x3
   14000b27b:	(bad)  
   14000b27c:	add    dh,BYTE PTR [rax]
   14000b27e:	add    BYTE PTR [rax],al
   14000b280:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b281:	test   DWORD PTR [rax],eax
   14000b283:	add    BYTE PTR [rax-0x6cffff5c],cl
   14000b289:	and    DWORD PTR [rax],eax
   14000b28b:	add    bh,bh
   14000b28d:	(bad)  
   14000b28e:	(bad)  
   14000b28f:	inc    DWORD PTR [rcx+rcx*4]
	...
   14000b2a2:	add    BYTE PTR [rax],al
   14000b2a4:	(bad)  
   14000b2a5:	(bad)  
   14000b2a6:	(bad)  
   14000b2a7:	jmp    FWORD PTR [rbx]
   14000b2a9:	mov    DWORD PTR [rax],eax
   14000b2ab:	add    BYTE PTR [rbx],al
   14000b2ad:	add    BYTE PTR [rax],al
   14000b2af:	add    BYTE PTR [rax],al
   14000b2b1:	add    BYTE PTR [rax],al
   14000b2b3:	add    BYTE PTR [rbx],al
   14000b2b5:	add    BYTE PTR [rax],al
   14000b2b7:	add    BYTE PTR [rax],al
   14000b2b9:	add    BYTE PTR [rax],al
   14000b2bb:	add    BYTE PTR [rcx],al
   14000b2bd:	add    BYTE PTR [rax],al
   14000b2bf:	add    BYTE PTR [rcx],al
   14000b2c1:	add    BYTE PTR [rax],al
   14000b2c3:	add    BYTE PTR [rdx],al
   14000b2c5:	add    BYTE PTR [rax],al
   14000b2c7:	add    BYTE PTR [rcx],al
   14000b2c9:	add    BYTE PTR [rax],al
   14000b2cb:	add    ah,ah
   14000b2cd:	mov    dl,0x0
   14000b2cf:	add    BYTE PTR [rax+rax*1],al
   14000b2d2:	add    BYTE PTR [rax],al
   14000b2d4:	add    al,0x0
   14000b2d6:	add    BYTE PTR [rax],al
   14000b2d8:	add    eax,0x1000000
   14000b2dd:	add    BYTE PTR [rax],al
   14000b2df:	add    al,bh
   14000b2e1:	mov    dl,0x0
   14000b2e3:	add    BYTE PTR [rax+0x0],al
	...
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	adc    BYTE PTR [rcx+0x480000],cl
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	add    BYTE PTR [rax],al
	...
   14000b303:	add    BYTE PTR [rdi],dh
   14000b305:	mov    DWORD PTR [rax],eax
   14000b307:	add    BYTE PTR [rax+0x0],cl
   14000b30a:	add    BYTE PTR [rax],al
   14000b30c:	add    BYTE PTR [rax],al
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	(bad)  
   14000b311:	rex.WR add BYTE PTR [rax],r8b
   14000b314:	(bad)  
   14000b315:	(bad)  
   14000b316:	(bad)  
   14000b317:	inc    DWORD PTR [rax+0x100004d]
   14000b31d:	add    BYTE PTR [rax],al
   14000b31f:	add    bl,dl
   14000b321:	rex.WRB add BYTE PTR [r8],r8b
   14000b324:	add    BYTE PTR [rax],al
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	iret   
   14000b329:	rex.WRX add BYTE PTR [rax],r8b
   14000b32c:	(bad)  
   14000b32d:	(bad)  
   14000b32e:	(bad)  
   14000b32f:	jmp    FWORD PTR [rbp+0x4f]
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	add    al,0x0
   14000b336:	add    BYTE PTR [rax],al
   14000b338:	mov    edi,0x300004f
   14000b33d:	add    BYTE PTR [rax],al
   14000b33f:	add    ch,ch
   14000b341:	rex.WRXB add BYTE PTR [r8],r8b
   14000b344:	(bad)  
   14000b345:	(bad)  
   14000b346:	(bad)  
   14000b347:	call   QWORD PTR [rax]
   14000b349:	push   rax
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	add    eax,DWORD PTR [rax]
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	(bad)  
   14000b351:	push   rax
   14000b352:	add    BYTE PTR [rax],al
   14000b354:	(bad)  
   14000b355:	(bad)  
   14000b356:	(bad)  
   14000b357:	call   QWORD PTR [rax]
   14000b359:	mov    DWORD PTR [rax],eax
   14000b35b:	add    BYTE PTR [rax],al
   14000b35d:	add    BYTE PTR [rax],al
   14000b35f:	add    BYTE PTR [rcx],bl
   14000b361:	or     al,BYTE PTR [rdx]
   14000b363:	add    BYTE PTR [rdx],cl
   14000b365:	push   rdx
   14000b366:	(bad)  
   14000b367:	push   rax
   14000b368:	xchg   esi,eax
   14000b369:	test   DWORD PTR [rax],eax
   14000b36b:	add    BYTE PTR [rax+0x190000a4],cl
   14000b371:	and    eax,0x34130005
   14000b376:	or     al,BYTE PTR [rbx+rdx*1]
   14000b379:	add    DWORD PTR [rsi],eax
   14000b37b:	add    al,0x6
   14000b37d:	jo     0x14000b37f
   14000b37f:	add    BYTE PTR [rax],cl
   14000b381:	test   DWORD PTR [rax],eax
   14000b383:	add    BYTE PTR [rax],ah
   14000b385:	and    BYTE PTR [rax],al
   14000b387:	add    BYTE PTR [rcx],bl
   14000b389:	sub    BYTE PTR [rdi],al
   14000b38b:	add    BYTE PTR [rdi],dl
   14000b38d:	xor    al,0x56
   14000b38f:	add    BYTE PTR [rdi],dl
   14000b391:	add    DWORD PTR [rax+0x0],edx
   14000b394:	or     BYTE PTR [rax+0x7],dh
   14000b397:	(bad)  
   14000b398:	(bad)  
   14000b399:	push   rax
   14000b39a:	add    BYTE PTR [rax],al
   14000b39c:	or     BYTE PTR [rbp+0x2700000],al
   14000b3a2:	add    BYTE PTR [rax],al
   14000b3a4:	sbb    DWORD PTR [rbx],esi
   14000b3a6:	(bad)  
   14000b3a7:	add    BYTE PTR [rdx],bl
   14000b3a9:	add    DWORD PTR [rdi+0x4],ebx
   14000b3ac:	add    eax,0x3600470
   14000b3b1:	xor    BYTE PTR [rdx],al
   14000b3b3:	push   rax
   14000b3b4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b3b5:	test   DWORD PTR [rax],eax
   14000b3b7:	add    BYTE PTR [rax-0x5c],ah
   14000b3ba:	add    BYTE PTR [rax],al
   14000b3bc:	loop   0x14000b3e0
   14000b3be:	add    BYTE PTR [rax],al
   14000b3c0:	(bad)  
   14000b3c1:	(bad)  
   14000b3c2:	(bad)  
   14000b3c3:	call   FWORD PTR [rax-0x77]
   14000b3c6:	add    BYTE PTR [rax],al
   14000b3c8:	add    BYTE PTR [rax],al
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cc:	mov    DWORD PTR fs:[rax],eax
   14000b3cf:	add    BYTE PTR [rax],bh
   14000b3d1:	push   rsi
   14000b3d2:	add    BYTE PTR [rax],al
   14000b3d4:	(bad)  
   14000b3d5:	(bad)  
   14000b3d6:	(bad)  
   14000b3d7:	dec    DWORD PTR [rdi+0x56]
   14000b3dd:	add    BYTE PTR [rax],al
   14000b3df:	add    BYTE PTR [rdx+0x58],dl
   14000b3e2:	add    BYTE PTR [rax],al
   14000b3e4:	add    DWORD PTR [rax],eax
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	jbe    0x14000b442
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	add    BYTE PTR [rax],al
   14000b3ee:	add    BYTE PTR [rax],al
   14000b3f0:	in     al,0x5d
   14000b3f2:	add    BYTE PTR [rax],al
   14000b3f4:	(bad)  
   14000b3f5:	(bad)  
   14000b3f6:	(bad)  
   14000b3f7:	call   FWORD PTR [rcx]
   14000b3f9:	(bad)  
   14000b3fa:	or     eax,DWORD PTR [rax]
   14000b3fc:	sbb    eax,0x1d041534
   14000b401:	add    DWORD PTR [rdx],ecx
   14000b403:	add    al,0x10
   14000b405:	lock (bad) 
   14000b407:	loopne 0x14000b415
   14000b409:	ror    BYTE PTR [rdx],1
   14000b40b:	ror    BYTE PTR [rax],0x70
   14000b40e:	(bad)  
   14000b40f:	(bad)  
   14000b410:	(bad)  
   14000b411:	push   rax
   14000b412:	add    BYTE PTR [rax],al
   14000b414:	or     BYTE PTR [rbp+0x20400000],al
   14000b41a:	add    BYTE PTR [rax],al
   14000b41c:	sbb    DWORD PTR [rip+0x341b0007],ebp        # 0x1741bb429
   14000b422:	xchg   esi,eax
   14000b423:	add    BYTE PTR [rsi],cl
   14000b425:	add    DWORD PTR [rdx+0x5e00700],edx
   14000b42b:	jo     0x14000b431
   14000b42d:	(bad)  
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b431:	test   DWORD PTR [rax],eax
   14000b433:	add    BYTE PTR [rax],bh
   14000b435:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b436:	add    BYTE PTR [rax],al
   14000b438:	add    DWORD PTR [rax+rax*1],0x0
   14000b43c:	(bad)  
   14000b43d:	(bad)  
   14000b43e:	(bad)  
   14000b43f:	push   QWORD PTR [rsi-0x77]
   14000b442:	add    BYTE PTR [rax],al
   14000b444:	add    BYTE PTR [rax],al
   14000b446:	add    BYTE PTR [rax],al
   14000b448:	(bad)  
   14000b449:	mov    DWORD PTR [rax],eax
   14000b44b:	add    BYTE PTR [rcx],al
   14000b44d:	add    BYTE PTR [rax],al
   14000b44f:	add    BYTE PTR [rax],al
   14000b451:	add    BYTE PTR [rax],al
   14000b453:	add    BYTE PTR [rcx],al
   14000b455:	add    BYTE PTR [rax],al
   14000b457:	add    BYTE PTR [rax],al
   14000b459:	add    BYTE PTR [rax],al
   14000b45b:	add    BYTE PTR [rdx],al
   14000b45d:	add    BYTE PTR [rax],al
   14000b45f:	add    BYTE PTR [rdx],al
   14000b461:	add    BYTE PTR [rax],al
   14000b463:	add    BYTE PTR [rbx],al
   14000b465:	add    BYTE PTR [rax],al
   14000b467:	add    BYTE PTR [rcx],al
   14000b469:	add    BYTE PTR [rax],al
   14000b46b:	add    BYTE PTR [rax-0x4c],dh
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	add    BYTE PTR [rax],al
	...
   14000b47b:	add    BYTE PTR [rsi+0x48000089],cl
	...
   14000b48d:	add    BYTE PTR [rax],al
   14000b48f:	add    al,bl
   14000b491:	pop    rdi
   14000b492:	add    BYTE PTR [rax],al
   14000b494:	(bad)  
   14000b495:	(bad)  
   14000b496:	(bad)  
   14000b497:	call   QWORD PTR [rip+0x60]        # 0x14000b4fd
   14000b49d:	add    BYTE PTR [rax],al
   14000b49f:	add    BYTE PTR [rax+riz*2],ah
   14000b4a2:	add    BYTE PTR [rax],al
   14000b4a4:	add    DWORD PTR [rax],eax
   14000b4a6:	add    BYTE PTR [rax],al
   14000b4a8:	movabs eax,ds:0xb800000000000060
   14000b4b1:	(bad)  
   14000b4b2:	add    BYTE PTR [rax],al
   14000b4b4:	(bad)  
   14000b4b5:	(bad)  
   14000b4b6:	(bad)  
   14000b4b7:	inc    edx
   14000b4b9:	(bad)  
   14000b4ba:	add    BYTE PTR [rax],al
   14000b4bc:	add    al,BYTE PTR [rax]
   14000b4be:	add    BYTE PTR [rax],al
   14000b4c0:	or     DWORD PTR [rcx+0x0],esp
   14000b4c3:	add    BYTE PTR [rcx],al
   14000b4c5:	add    BYTE PTR [rax],al
   14000b4c7:	add    BYTE PTR [rcx+riz*2+0x0],bh
   14000b4cb:	add    BYTE PTR [rax],al
   14000b4cd:	add    BYTE PTR [rax],al
   14000b4cf:	add    BYTE PTR [rbx-0xffff9f],dl
   14000b4d5:	(bad)  
   14000b4d6:	(bad)  
   14000b4d7:	dec    DWORD PTR [rsi+0x89]
   14000b4dd:	add    BYTE PTR [rax],al
   14000b4df:	add    BYTE PTR [rcx],bl
   14000b4e1:	or     al,BYTE PTR [rdx]
   14000b4e3:	add    BYTE PTR [rdx],cl
   14000b4e5:	push   rdx
   14000b4e6:	(bad)  
   14000b4e7:	push   rax
   14000b4e8:	xchg   esi,eax
   14000b4e9:	test   DWORD PTR [rax],eax
   14000b4eb:	add    BYTE PTR [rax],bh
   14000b4ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b4ee:	add    BYTE PTR [rax],al
   14000b4f0:	or     DWORD PTR [rax],ecx
   14000b4f2:	add    DWORD PTR [rax],eax
   14000b4f4:	or     BYTE PTR [rdx+0x0],al
   14000b4f7:	add    dh,ah
   14000b4f9:	add    DWORD PTR [rax],0x0
   14000b4fc:	add    DWORD PTR [rax],eax
   14000b4fe:	add    BYTE PTR [rax],al
   14000b500:	jle    0x14000b566
   14000b502:	add    BYTE PTR [rax],al
   14000b504:	cwde   
   14000b505:	add    BYTE PTR fs:[rax],al
   14000b508:	add    DWORD PTR [rax],eax
   14000b50a:	add    BYTE PTR [rax],al
   14000b50c:	cwde   
   14000b50d:	add    BYTE PTR fs:[rax],al
   14000b510:	add    DWORD PTR [rcx],ebx
   14000b512:	or     al,BYTE PTR [rax]
   14000b514:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   14000b518:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   14000b51c:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14000b520:	sbb    DWORD PTR [rax+rcx*1],esi
   14000b523:	add    BYTE PTR [rcx],bl
   14000b525:	push   rdx
   14000b526:	adc    eax,0x41101e0
   14000b52b:	add    BYTE PTR [rcx],dl
   14000b52d:	xor    cl,BYTE PTR [rip+0xb600c70]        # 0x14b60c1a3
   14000b533:	xor    BYTE PTR [rcx],bl
   14000b535:	sub    al,BYTE PTR [rax+rax*1]
   14000b538:	sbb    BYTE PTR [rcx],al
   14000b53a:	rex.WB add BYTE PTR [r9],dl
   14000b53d:	(bad)  
   14000b53e:	adc    BYTE PTR [rax],dh
   14000b540:	or     BYTE PTR [rbp+0x2300000],al
   14000b546:	add    BYTE PTR [rax],al
   14000b548:	add    DWORD PTR [rdx],edx
   14000b54a:	add    eax,0xe421200
   14000b54f:	jo     0x14000b55e
   14000b551:	(bad)  
   14000b552:	or     al,0x50
   14000b554:	or     esi,DWORD PTR [rax]
   14000b556:	add    BYTE PTR [rax],al
   14000b558:	sbb    DWORD PTR [rcx],ebp
   14000b55a:	or     eax,DWORD PTR [rax]
   14000b55c:	(bad)  
   14000b55d:	xor    al,0x6a
   14000b55f:	add    BYTE PTR [rdi],dl
   14000b561:	add    DWORD PTR [rdx+0x0],esp
   14000b564:	adc    al,dh
   14000b566:	(bad)  
   14000b567:	loopne 0x14000b575
   14000b569:	ror    BYTE PTR [rdx],1
   14000b56b:	ror    BYTE PTR [rax],0x70
   14000b56e:	(bad)  
   14000b56f:	(bad)  
   14000b570:	(bad)  
   14000b571:	push   rax
   14000b572:	add    BYTE PTR [rax],al
   14000b574:	or     BYTE PTR [rbp+0x3000000],al
   14000b57a:	add    BYTE PTR [rax],al
   14000b57c:	add    DWORD PTR [rcx],esp
   14000b57e:	or     al,BYTE PTR [rax]
   14000b580:	and    DWORD PTR [rax+rdx*1],esi
   14000b583:	add    BYTE PTR [rcx],ah
   14000b585:	jb     0x14000b5a1
   14000b587:	lock sbb al,ah
   14000b58a:	(bad)  
   14000b58b:	rcl    BYTE PTR [rax+rax*8],1
   14000b58e:	adc    dh,BYTE PTR [rax+0x11]
   14000b591:	(bad)  
   14000b592:	adc    BYTE PTR [rax+0x1],dl
   14000b595:	sbb    BYTE PTR [rdx],cl
   14000b597:	add    BYTE PTR [rax],bl
   14000b599:	adc    DWORD PTR fs:[rax],eax
   14000b59c:	sbb    BYTE PTR [rax+rdx*1+0x0],dl
   14000b5a0:	sbb    BYTE PTR [rdi+rcx*1],dh
   14000b5a3:	add    BYTE PTR [rax],bl
   14000b5a5:	xchg   edx,eax
   14000b5a6:	adc    al,0xf0
   14000b5a8:	adc    ah,al
   14000b5aa:	adc    BYTE PTR [rax+0x1],dh
   14000b5ad:	adc    eax,DWORD PTR [rsi]
   14000b5af:	add    BYTE PTR [rbx],dl
   14000b5b1:	or     eax,DWORD PTR fs:[rax]
   14000b5b4:	adc    esi,DWORD PTR [rdx+rcx*1]
   14000b5b7:	add    BYTE PTR [rbx],dl
   14000b5b9:	push   rdx
   14000b5ba:	pshufw mm3,QWORD PTR [rcx],0x33
   14000b5be:	or     eax,DWORD PTR [rax]
   14000b5c0:	and    dh,BYTE PTR [rsi+riz*2+0x0]
   14000b5c4:	and    ah,BYTE PTR [rbp+riz*2+0x0]
   14000b5c8:	and    dh,BYTE PTR [rsp+riz*2]
   14000b5cb:	add    BYTE PTR [rdx],ah
   14000b5cd:	add    DWORD PTR [rax+0x0],esp
   14000b5d0:	adc    al,0xf0
   14000b5d2:	adc    ah,al
   14000b5d4:	adc    BYTE PTR [rax+0x0],dl
   14000b5d7:	add    BYTE PTR [rax],cl
   14000b5d9:	test   DWORD PTR [rax],eax
   14000b5db:	add    al,dh
   14000b5dd:	add    al,BYTE PTR [rax]
   14000b5df:	add    BYTE PTR [rcx],bl
   14000b5e1:	(bad)  
   14000b5e2:	or     DWORD PTR [rax],eax
   14000b5e4:	(bad)  
   14000b5e5:	je     0x14000b645
   14000b5e7:	add    BYTE PTR [rsi],bl
   14000b5e9:	fs pop rbp
   14000b5eb:	add    BYTE PTR [rsi],bl
   14000b5ed:	xor    al,0x5c
   14000b5ef:	add    BYTE PTR [rsi],bl
   14000b5f1:	add    DWORD PTR [rdx+0x0],ebx
   14000b5f4:	adc    BYTE PTR [rax+0x0],dl
   14000b5f7:	add    BYTE PTR [rax],cl
   14000b5f9:	test   DWORD PTR [rax],eax
   14000b5fb:	add    al,al
   14000b5fd:	add    al,BYTE PTR [rax]
   14000b5ff:	add    BYTE PTR [rcx],al
   14000b601:	(bad)  
   14000b602:	add    al,BYTE PTR [rax]
   14000b604:	(bad)  
   14000b605:	jb     0x14000b609
   14000b607:	xor    BYTE PTR [rcx],al
   14000b609:	add    al,0x1
   14000b60b:	add    BYTE PTR [rdx+rax*4],al
   14000b60e:	add    BYTE PTR [rax],al
   14000b610:	or     DWORD PTR [rbx+rcx*1],ebx
   14000b613:	add    BYTE PTR [rsp+rsi*2],bl
   14000b616:	sbb    al,0x0
   14000b618:	sbb    al,0x64
   14000b61a:	sbb    eax,DWORD PTR [rax]
   14000b61c:	sbb    al,0x34
   14000b61e:	sbb    al,BYTE PTR [rax]
   14000b620:	sbb    al,0x1
   14000b622:	(bad)  
   14000b623:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0ca19
   14000b629:	rol    BYTE PTR [rax],0x0
   14000b62c:	out    0x83,al
   14000b62e:	add    BYTE PTR [rax],al
   14000b630:	add    DWORD PTR [rax],eax
   14000b632:	add    BYTE PTR [rax],al
   14000b634:	cmp    BYTE PTR [rax+0x0],0x0
   14000b638:	jbe    0x14000b6b4
   14000b63a:	add    BYTE PTR [rax],al
   14000b63c:	scas   eax,DWORD PTR es:[rdi]
   14000b63d:	mov    DWORD PTR [rax],eax
   14000b63f:	add    BYTE PTR [rsi+0x7a],dh
   14000b642:	add    BYTE PTR [rax],al
   14000b644:	add    BYTE PTR [rax],al
   14000b646:	add    BYTE PTR [rax],al
   14000b648:	add    DWORD PTR [rax],eax
   14000b64a:	add    BYTE PTR [rax],al
   14000b64c:	adc    DWORD PTR [rax],ebx
   14000b64e:	add    eax,0x14621800
   14000b653:	loopne 0x14000b667
   14000b655:	jo     0x14000b668
   14000b657:	(bad)  
   14000b658:	adc    BYTE PTR [rax],dh
   14000b65a:	add    BYTE PTR [rax],al
   14000b65c:	out    0x83,al
   14000b65e:	add    BYTE PTR [rax],al
   14000b660:	add    DWORD PTR [rax],eax
   14000b662:	add    BYTE PTR [rax],al
   14000b664:	push   rdi
   14000b665:	jnp    0x14000b667
   14000b667:	add    BYTE PTR [rbx+rdi*2-0x762d0000],al
   14000b66e:	add    BYTE PTR [rax],al
   14000b670:	add    BYTE PTR [rax],al
   14000b672:	add    BYTE PTR [rax],al
   14000b674:	or     DWORD PTR [rdi],edx
   14000b676:	(bad)  
   14000b677:	add    BYTE PTR [rdi],dl
   14000b679:	xor    al,0xd
   14000b67b:	add    BYTE PTR [rdi],dl
   14000b67d:	jb     0x14000b692
   14000b67f:	loopne 0x14000b692
   14000b681:	jo     0x14000b693
   14000b683:	(bad)  
   14000b684:	out    0x83,al
   14000b686:	add    BYTE PTR [rax],al
   14000b688:	add    DWORD PTR [rax],eax
   14000b68a:	add    BYTE PTR [rax],al
   14000b68c:	mov    bh,0x7b
   14000b68e:	add    BYTE PTR [rax],al
   14000b690:	fidivr DWORD PTR [rbx+0x0]
   14000b693:	add    BYTE PTR [rip+0xffffffffda00008a],al        # 0x11a00b723
   14000b699:	jnp    0x14000b69b
   14000b69b:	add    BYTE PTR [rcx],al
   14000b69d:	add    al,0x1
   14000b69f:	add    BYTE PTR [rdx+riz*2],al
   14000b6a2:	add    BYTE PTR [rax],al
   14000b6a4:	add    DWORD PTR [rcx+rax*1],eax
   14000b6a7:	add    BYTE PTR [rdx+riz*8],al
   14000b6aa:	add    BYTE PTR [rax],al
   14000b6ac:	add    DWORD PTR [rdx+rax*1],ecx
   14000b6af:	add    BYTE PTR [rcx+rax*1],cl
   14000b6b2:	adc    DWORD PTR [rax],eax
   14000b6b4:	adc    DWORD PTR [rdx],ecx
   14000b6b6:	add    al,0x0
   14000b6b8:	or     dh,BYTE PTR [rsi+rax*1]
   14000b6bb:	add    BYTE PTR [rdx],cl
   14000b6bd:	xor    al,BYTE PTR [rsi]
   14000b6bf:	jo     0x14000b6a7
   14000b6c1:	add    DWORD PTR [rax],0x0
   14000b6c4:	add    DWORD PTR [rax],eax
   14000b6c6:	add    BYTE PTR [rax],al
   14000b6c8:	mov    DWORD PTR [rdi+0x0],edi
   14000b6cb:	add    dh,cl
   14000b6cd:	jg     0x14000b6cf
   14000b6cf:	add    BYTE PTR [rbp-0x76],cl
   14000b6d2:	add    BYTE PTR [rax],al
   14000b6d4:	add    BYTE PTR [rax],al
   14000b6d6:	add    BYTE PTR [rax],al
   14000b6d8:	adc    DWORD PTR [rax+rcx*1],ebx
   14000b6db:	add    BYTE PTR [rsp+riz*2],bl
   14000b6de:	or     eax,0xc341c00
   14000b6e3:	add    BYTE PTR [rdx+rdx*2],bl
   14000b6e6:	sbb    al,dh
   14000b6e8:	(bad)  
   14000b6e9:	loopne 0x14000b6ff
   14000b6eb:	jo     0x14000b6d3
   14000b6ed:	add    DWORD PTR [rax],0x0
   14000b6f0:	add    DWORD PTR [rax],eax
   14000b6f2:	add    BYTE PTR [rax],al
   14000b6f4:	cmp    al,0x80
   14000b6f6:	add    BYTE PTR [rax],al
   14000b6f8:	push   0x6e000080
   14000b6fd:	mov    al,BYTE PTR [rax]
   14000b6ff:	add    BYTE PTR [rax],al
   14000b701:	add    BYTE PTR [rax],al
   14000b703:	add    BYTE PTR [rcx],cl
   14000b705:	add    al,0x1
   14000b707:	add    BYTE PTR [rdx+riz*1],al
   14000b70a:	add    BYTE PTR [rax],al
   14000b70c:	out    0x83,al
   14000b70e:	add    BYTE PTR [rax],al
   14000b710:	add    DWORD PTR [rax],eax
   14000b712:	add    BYTE PTR [rax],al
   14000b714:	jl     0x14000b697
   14000b716:	add    BYTE PTR [rax],al
   14000b718:	mov    dl,0x81
   14000b71a:	add    BYTE PTR [rax],al
   14000b71c:	add    DWORD PTR [rax],eax
   14000b71e:	add    BYTE PTR [rax],al
   14000b720:	mov    dl,0x81
   14000b722:	add    BYTE PTR [rax],al
   14000b724:	or     DWORD PTR [rdx],ecx
   14000b726:	add    al,0x0
   14000b728:	or     dh,BYTE PTR [rsi+rax*1]
   14000b72b:	add    BYTE PTR [rdx],cl
   14000b72d:	xor    al,BYTE PTR [rsi]
   14000b72f:	jo     0x14000b717
   14000b731:	add    DWORD PTR [rax],0x0
   14000b734:	add    DWORD PTR [rax],eax
   14000b736:	add    BYTE PTR [rax],al
   14000b738:	jge    0x14000b6bc
   14000b73a:	add    BYTE PTR [rax],al
   14000b73c:	mov    al,0x82
   14000b73e:	add    BYTE PTR [rax],al
   14000b740:	movabs al,ds:0x1000082b000008a
   14000b749:	or     eax,0x340d0004
   14000b74e:	or     DWORD PTR [rax],eax
   14000b750:	or     eax,0x19500632
   14000b755:	sbb    eax,DWORD PTR [rbx]
   14000b757:	add    BYTE PTR [rcx],cl
   14000b759:	add    DWORD PTR [rax+0x300200],ebp
   14000b75f:	add    BYTE PTR [rax],cl
   14000b761:	test   DWORD PTR [rax],eax
   14000b763:	add    BYTE PTR [rax],dh
   14000b765:	add    eax,0x10000
   14000b76a:	add    BYTE PTR [rax],al
   14000b76c:	add    BYTE PTR [rax],al
   14000b76e:	add    BYTE PTR [rax],al
   14000b770:	add    DWORD PTR [rcx+rax*1],eax
   14000b773:	add    BYTE PTR [rdx+rdx*1],al
   14000b776:	add    BYTE PTR [rax],al
   14000b778:	add    BYTE PTR [rax],al
   14000b77a:	add    BYTE PTR [rax],al
   14000b77c:	add    cl,dl
   14000b77e:	add    BYTE PTR [rax],al
   14000b780:	add    BYTE PTR [rax],al
   14000b782:	add    BYTE PTR [rax],al
   14000b784:	(bad)  
   14000b785:	(bad)  
   14000b786:	(bad)  
   14000b787:	inc    DWORD PTR [rax]
   14000b789:	add    BYTE PTR [rax],al
   14000b78b:	add    BYTE PTR [rax],bl
   14000b78d:	add    BYTE PTR [rax],al
   14000b78f:	add    BYTE PTR [rax+rax*4+0x0],dh
	...
   14000b7a2:	add    BYTE PTR [rax],al
   14000b7a4:	xor    BYTE PTR [rbp+0x0],0x0
   14000b7a8:	add    BYTE PTR [rax],al
   14000b7aa:	add    BYTE PTR [rax],al
   14000b7ac:	shl    BYTE PTR [rdi+0x0],0x0
	...
   14000b7bf:	add    BYTE PTR [rdx],al
   14000b7c1:	add    BYTE PTR [rax],al
   14000b7c3:	add    al,bl
   14000b7c5:	mov    bh,0x0
   14000b7c7:	add    BYTE PTR [rax-0x49],bh
	...
   14000b7d6:	add    BYTE PTR [rax],al
   14000b7d8:	adc    BYTE PTR [rax],al
   14000b7da:	add    BYTE PTR [rax],al
   14000b7dc:	and    cl,dl
   14000b7de:	add    BYTE PTR [rax],al
   14000b7e0:	add    BYTE PTR [rax],al
   14000b7e2:	add    BYTE PTR [rax],al
   14000b7e4:	(bad)  
   14000b7e5:	(bad)  
   14000b7e6:	(bad)  
   14000b7e7:	inc    DWORD PTR [rax]
   14000b7e9:	add    BYTE PTR [rax],al
   14000b7eb:	add    BYTE PTR [rax],bl
   14000b7ed:	add    BYTE PTR [rax],al
   14000b7ef:	add    BYTE PTR [rsi*2+0x0],ah
	...
   14000b802:	add    BYTE PTR [rax],al
   14000b804:	rol    QWORD PTR [rax],1
   14000b807:	add    BYTE PTR [rax],al
   14000b809:	add    BYTE PTR [rax],al
   14000b80b:	add    bh,bh
   14000b80d:	(bad)  
   14000b80e:	(bad)  
   14000b80f:	inc    DWORD PTR [rax]
   14000b811:	add    BYTE PTR [rax],al
   14000b813:	add    BYTE PTR [rax+rax*1],al
	...
   14000b826:	add    BYTE PTR [rax],al
   14000b828:	add    DWORD PTR [rax],eax
   14000b82a:	add    BYTE PTR [rax],al
   14000b82c:	add    BYTE PTR [rax+0x0],bh
	...
   14000b842:	add    BYTE PTR [rax],al
   14000b844:	sub    BYTE PTR [rax+0x0],bh
	...
   14000b856:	add    BYTE PTR [rax],al
   14000b858:	add    DWORD PTR [rax],eax
   14000b85a:	add    BYTE PTR [rax],al
   14000b85c:	push   0xb8
   14000b861:	add    BYTE PTR [rax],al
   14000b863:	add    BYTE PTR [rax],al
   14000b865:	add    BYTE PTR [rax],al
   14000b867:	add    BYTE PTR [rcx],al
   14000b869:	add    BYTE PTR [rax],al
   14000b86b:	add    BYTE PTR [rax-0x2f],dh
   14000b86e:	add    BYTE PTR [rax],al
   14000b870:	add    BYTE PTR [rax],al
   14000b872:	add    BYTE PTR [rax],al
   14000b874:	(bad)  
   14000b875:	(bad)  
   14000b876:	(bad)  
   14000b877:	inc    DWORD PTR [rax]
   14000b879:	add    BYTE PTR [rax],al
   14000b87b:	add    BYTE PTR [rax+rax*1],al
	...
   14000b89a:	add    BYTE PTR [rax],al
   14000b89c:	pop    rax
   14000b89d:	mov    eax,0x0
	...
   14000b8be:	add    BYTE PTR [rax],al
   14000b8c0:	push   rax
   14000b8c1:	mov    ecx,0x0
   14000b8c6:	add    BYTE PTR [rax],al
   14000b8c8:	add    BYTE PTR [rax],al
   14000b8ca:	add    BYTE PTR [rax],al
   14000b8cc:	mov    esp,0xbd
   14000b8d1:	nop
   14000b8d2:	add    BYTE PTR [rax],al
   14000b8d4:	mov    al,0xb9
	...
   14000b8de:	add    BYTE PTR [rax],al
   14000b8e0:	lock mov edi,0x90600000
   14000b8e6:	add    BYTE PTR [rax],al
   14000b8e8:	(bad)  
   14000b8e9:	mov    ebx,0x0
   14000b8ee:	add    BYTE PTR [rax],al
   14000b8f0:	add    BYTE PTR [rax],al
   14000b8f2:	add    BYTE PTR [rax],al
   14000b8f4:	rex.X rol BYTE PTR [rax],0x0
   14000b8f8:	adc    BYTE PTR [rdx-0x44680000],dl
	...
   14000b906:	add    BYTE PTR [rax],al
   14000b908:	adc    dl,al
   14000b90a:	add    BYTE PTR [rax],al
   14000b90c:	xchg   rdx,rax
   14000b90e:	add    BYTE PTR [rax],al
   14000b910:	fdivr  DWORD PTR [rax+rax*1+0x0]
   14000b917:	add    BYTE PTR [rax],al
   14000b919:	add    BYTE PTR [rax],al
   14000b91b:	add    BYTE PTR [rsi],dh
   14000b91d:	ret    
   14000b91e:	add    BYTE PTR [rax],al
   14000b920:	mov    BYTE PTR [rbx-0x44e80000],dl
	...
   14000b92e:	add    BYTE PTR [rax],al
   14000b930:	rex ret 
   14000b932:	add    BYTE PTR [rax],al
   14000b934:	enter  0x91,0x0
	...
   14000b950:	xor    BYTE PTR [rbp+0x0],bh
   14000b956:	add    BYTE PTR [rax],al
   14000b958:	ds mov ebp,0x0
   14000b95e:	add    BYTE PTR [rax],al
   14000b960:	push   rdx
   14000b961:	mov    ebp,0x0
   14000b966:	add    BYTE PTR [rax],al
   14000b968:	(bad)  
   14000b969:	mov    ebp,0x0
   14000b96e:	add    BYTE PTR [rax],al
   14000b970:	jb     0x14000b92f
   14000b972:	add    BYTE PTR [rax],al
   14000b974:	add    BYTE PTR [rax],al
   14000b976:	add    BYTE PTR [rax],al
   14000b978:	test   BYTE PTR [rbp+0x0],bh
   14000b97e:	add    BYTE PTR [rax],al
   14000b980:	xchg   esi,eax
   14000b981:	mov    ebp,0x0
   14000b986:	add    BYTE PTR [rax],al
   14000b988:	test   al,0xbd
   14000b98a:	add    BYTE PTR [rax],al
   14000b98c:	add    BYTE PTR [rax],al
   14000b98e:	add    BYTE PTR [rax],al
   14000b990:	(bad)  
   14000b992:	add    BYTE PTR [rax],al
   14000b994:	add    BYTE PTR [rax],al
   14000b996:	add    BYTE PTR [rax],al
   14000b998:	jbe    0x14000b95d
   14000b99a:	add    BYTE PTR [rax],al
   14000b99c:	add    BYTE PTR [rax],al
   14000b99e:	add    BYTE PTR [rax],al
   14000b9a0:	xchg   bl,al
	...
   14000b9ae:	add    BYTE PTR [rax],al
   14000b9b0:	sahf   
   14000b9b1:	mov    esi,0x0
   14000b9b6:	add    BYTE PTR [rax],al
   14000b9b8:	stos   BYTE PTR es:[rdi],al
   14000b9b9:	mov    esi,0x0
   14000b9be:	add    BYTE PTR [rax],al
   14000b9c0:	sar    BYTE PTR [rsi+0x0],0x0
   14000b9c7:	add    dh,cl
   14000b9c9:	mov    esi,0x0
   14000b9ce:	add    BYTE PTR [rax],al
   14000b9d0:	fidivr WORD PTR [rsi+0x0]
   14000b9d6:	add    BYTE PTR [rax],al
   14000b9d8:	out    dx,al
   14000b9d9:	mov    esi,0x0
   14000b9de:	add    BYTE PTR [rax],al
   14000b9e0:	(bad)  
   14000b9e1:	mov    edi,0x0
   14000b9e6:	add    BYTE PTR [rax],al
   14000b9e8:	and    bh,BYTE PTR [rdi+0x0]
   14000b9ee:	add    BYTE PTR [rax],al
   14000b9f0:	xor    al,0xbf
   14000b9f2:	add    BYTE PTR [rax],al
   14000b9f4:	add    BYTE PTR [rax],al
   14000b9f6:	add    BYTE PTR [rax],al
   14000b9f8:	rex.WX movabs rdi,0xbf52000000000000
   14000ba02:	add    BYTE PTR [rax],al
   14000ba04:	add    BYTE PTR [rax],al
   14000ba06:	add    BYTE PTR [rax],al
   14000ba08:	pop    rsi
   14000ba09:	mov    edi,0x0
   14000ba0e:	add    BYTE PTR [rax],al
   14000ba10:	mov    BYTE PTR [rsi+0x0],bh
   14000ba16:	add    BYTE PTR [rax],al
   14000ba18:	mov    ?,WORD PTR [rdi+0x0]
   14000ba1e:	add    BYTE PTR [rax],al
   14000ba20:	mov    dh,0xbf
   14000ba22:	add    BYTE PTR [rax],al
   14000ba24:	add    BYTE PTR [rax],al
   14000ba26:	add    BYTE PTR [rax],al
   14000ba28:	(bad)  
   14000ba29:	mov    edi,0x0
   14000ba2e:	add    BYTE PTR [rax],al
   14000ba30:	fidivr DWORD PTR [rdi+0x0]
   14000ba36:	add    BYTE PTR [rax],al
   14000ba38:	ds (bad) 
   14000ba3a:	add    BYTE PTR [rax],al
   14000ba3c:	add    BYTE PTR [rax],al
   14000ba3e:	add    BYTE PTR [rax],al
   14000ba40:	sub    al,ah
   14000ba42:	add    BYTE PTR [rax],al
   14000ba44:	add    BYTE PTR [rax],al
   14000ba46:	add    BYTE PTR [rax],al
   14000ba48:	or     al,0xc4
   14000ba4a:	add    BYTE PTR [rax],al
   14000ba4c:	add    BYTE PTR [rax],al
   14000ba4e:	add    BYTE PTR [rax],al
   14000ba50:	lock ret 
   14000ba52:	add    BYTE PTR [rax],al
   14000ba54:	add    BYTE PTR [rax],al
   14000ba56:	add    BYTE PTR [rax],al
   14000ba58:	fadd   st(3),st
   14000ba5a:	add    BYTE PTR [rax],al
   14000ba5c:	add    BYTE PTR [rax],al
   14000ba5e:	add    BYTE PTR [rax],al
   14000ba60:	ret    0xc3
   14000ba63:	add    BYTE PTR [rax],al
   14000ba65:	add    BYTE PTR [rax],al
   14000ba67:	add    BYTE PTR [rsi+0xc3],ch
   14000ba6d:	add    BYTE PTR [rax],al
   14000ba6f:	add    BYTE PTR [rbx+rax*8+0x0],bl
   14000ba76:	add    BYTE PTR [rax],al
   14000ba78:	jbe    0x14000ba38
   14000ba7a:	add    BYTE PTR [rax],al
   14000ba7c:	add    BYTE PTR [rax],al
   14000ba7e:	add    BYTE PTR [rax],al
   14000ba80:	mov    si,0x0
   14000ba84:	add    BYTE PTR [rax],al
   14000ba86:	add    BYTE PTR [rax],al
   14000ba88:	push   rsp
   14000ba89:	mov    esi,0x0
   14000ba8e:	add    BYTE PTR [rax],al
   14000ba90:	ds mov esi,0x0
   14000ba96:	add    BYTE PTR [rax],al
   14000ba98:	sub    al,0xbe
   14000ba9a:	add    BYTE PTR [rax],al
   14000ba9c:	add    BYTE PTR [rax],al
   14000ba9e:	add    BYTE PTR [rax],al
   14000baa0:	and    BYTE PTR [rsi+0x0],bh
   14000baa6:	add    BYTE PTR [rax],al
   14000baa8:	or     al,0xbe
   14000baaa:	add    BYTE PTR [rax],al
   14000baac:	add    BYTE PTR [rax],al
   14000baae:	add    BYTE PTR [rax],al
   14000bab0:	cli    
   14000bab1:	mov    ebp,0x0
   14000bab6:	add    BYTE PTR [rax],al
   14000bab8:	call   0x14000bb7a
   14000babd:	add    BYTE PTR [rax],al
   14000babf:	add    al,bl
   14000bac1:	mov    ebp,0x0
   14000bac6:	add    BYTE PTR [rax],al
   14000bac8:	retf   0xbd
   14000bacb:	add    BYTE PTR [rax],al
   14000bacd:	add    BYTE PTR [rax],al
   14000bacf:	add    BYTE PTR [rsi-0x41],dh
   14000bad2:	add    BYTE PTR [rax],al
   14000bad4:	add    BYTE PTR [rax],al
   14000bad6:	add    BYTE PTR [rax],al
   14000bad8:	outs   dx,BYTE PTR ds:[rsi]
   14000bad9:	(bad)  
   14000bada:	add    BYTE PTR [rax],al
   14000badc:	add    BYTE PTR [rax],al
   14000bade:	add    BYTE PTR [rax],al
   14000bae0:	mov    ah,al
   14000bae2:	add    BYTE PTR [rax],al
   14000bae4:	add    BYTE PTR [rax],al
   14000bae6:	add    BYTE PTR [rax],al
   14000bae8:	pop    rax
   14000bae9:	(bad)  
   14000baea:	add    BYTE PTR [rax],al
   14000baec:	add    BYTE PTR [rax],al
   14000baee:	add    BYTE PTR [rax],al
   14000baf0:	cwde   
   14000baf1:	(bad)  
   14000baf2:	add    BYTE PTR [rax],al
   14000baf4:	add    BYTE PTR [rax],al
   14000baf6:	add    BYTE PTR [rax],al
   14000baf8:	test   al,0xc4
   14000bafa:	add    BYTE PTR [rax],al
   14000bafc:	add    BYTE PTR [rax],al
   14000bafe:	add    BYTE PTR [rax],al
   14000bb00:	rol    ah,0x0
   14000bb03:	add    BYTE PTR [rax],al
   14000bb05:	add    BYTE PTR [rax],al
   14000bb07:	add    dh,cl
   14000bb09:	(bad)  
	...
   14000bb16:	add    BYTE PTR [rax],al
   14000bb18:	movabs ds:0x1580000000000000,al
   14000bb21:	add    DWORD PTR [rax],eax
   14000bb23:	add    BYTE PTR [rax],al
   14000bb25:	add    BYTE PTR [rax],al
   14000bb27:	cmp    BYTE PTR [rdx+0x0],0x0
   14000bb2e:	add    BYTE PTR [rax+0x2],al
   14000bb34:	add    BYTE PTR [rax],al
   14000bb36:	add    BYTE PTR [rax+0xa1],al
   14000bb3c:	add    BYTE PTR [rax],al
   14000bb3e:	add    BYTE PTR [rax+0xa3],al
   14000bb44:	add    BYTE PTR [rax],al
   14000bb46:	add    BYTE PTR [rax+0x7],al
   14000bb4c:	add    BYTE PTR [rax],al
   14000bb4e:	add    BYTE PTR [rax+0x6],al
   14000bb54:	add    BYTE PTR [rax],al
   14000bb56:	add    BYTE PTR [rax+0x0],al
   14000bb5c:	add    BYTE PTR [rax],al
   14000bb5e:	add    BYTE PTR [rax],al
   14000bb60:	rex.WRX ret 
   14000bb62:	add    BYTE PTR [rax],al
   14000bb64:	add    BYTE PTR [rax],al
   14000bb66:	add    BYTE PTR [rax],al
   14000bb68:	lock (bad) 
   14000bb6a:	add    BYTE PTR [rax],al
   14000bb6c:	add    BYTE PTR [rax],al
   14000bb6e:	add    BYTE PTR [rax],al
   14000bb70:	rol    BYTE PTR cs:[rax],0x0
   14000bb74:	add    BYTE PTR [rax],al
   14000bb76:	add    BYTE PTR [rax],al
   14000bb78:	and    al,al
   14000bb7a:	add    BYTE PTR [rax],al
   14000bb7c:	add    BYTE PTR [rax],al
   14000bb7e:	add    BYTE PTR [rax],al
   14000bb80:	or     al,al
   14000bb82:	add    BYTE PTR [rax],al
   14000bb84:	add    BYTE PTR [rax],al
   14000bb86:	add    BYTE PTR [rax],al
   14000bb88:	(bad)  
   14000bb89:	mov    edi,0x0
	...
   14000bb96:	add    BYTE PTR [rax],al
   14000bb98:	xchg   edx,eax
   14000bb99:	rol    DWORD PTR [rax],0x0
   14000bb9c:	add    BYTE PTR [rax],al
   14000bb9e:	add    BYTE PTR [rax],al
   14000bba0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bba1:	rol    DWORD PTR [rax],0x0
   14000bba4:	add    BYTE PTR [rax],al
   14000bba6:	add    BYTE PTR [rax],al
   14000bba8:	mov    eax,0xc1
   14000bbad:	add    BYTE PTR [rax],al
   14000bbaf:	add    ah,al
   14000bbb1:	rol    DWORD PTR [rax],0x0
   14000bbb4:	add    BYTE PTR [rax],al
   14000bbb6:	add    BYTE PTR [rax],al
   14000bbb8:	fadd   st(1),st
   14000bbba:	add    BYTE PTR [rax],al
   14000bbbc:	add    BYTE PTR [rax],al
   14000bbbe:	add    BYTE PTR [rax],al
   14000bbc0:	loop   0x14000bb86
   14000bbc2:	add    BYTE PTR [rax],al
   14000bbc4:	add    BYTE PTR [rax],al
   14000bbc6:	add    BYTE PTR [rax],al
   14000bbc8:	adc    ch,al
   14000bbca:	add    BYTE PTR [rax],al
   14000bbcc:	add    BYTE PTR [rax],al
   14000bbce:	add    BYTE PTR [rax],al
   14000bbd0:	push   0xc2
   14000bbd5:	add    BYTE PTR [rax],al
   14000bbd7:	add    BYTE PTR [rdx-0x3e],bl
   14000bbda:	add    BYTE PTR [rax],al
   14000bbdc:	add    BYTE PTR [rax],al
   14000bbde:	add    BYTE PTR [rax],al
   14000bbe0:	push   rax
   14000bbe1:	ret    0x0
   14000bbe4:	add    BYTE PTR [rax],al
   14000bbe6:	add    BYTE PTR [rax],al
   14000bbe8:	out    0xc1,al
   14000bbea:	add    BYTE PTR [rax],al
   14000bbec:	add    BYTE PTR [rax],al
   14000bbee:	add    BYTE PTR [rax],al
   14000bbf0:	rex.W ret 0x0
   14000bbf4:	add    BYTE PTR [rax],al
   14000bbf6:	add    BYTE PTR [rax],al
   14000bbf8:	ds ret 0x0
   14000bbfc:	add    BYTE PTR [rax],al
   14000bbfe:	add    BYTE PTR [rax],al
   14000bc00:	js     0x14000bbc3
   14000bc02:	add    BYTE PTR [rax],al
   14000bc04:	add    BYTE PTR [rax],al
   14000bc06:	add    BYTE PTR [rax],al
   14000bc08:	rol    WORD PTR [rax],0x0
   14000bc0c:	add    BYTE PTR [rax],al
   14000bc0e:	add    BYTE PTR [rax],al
   14000bc10:	pop    rax
   14000bc11:	rol    DWORD PTR [rax],0x0
   14000bc14:	add    BYTE PTR [rax],al
   14000bc16:	add    BYTE PTR [rax],al
   14000bc18:	rex.WX rol QWORD PTR [rax],0x0
   14000bc1c:	add    BYTE PTR [rax],al
   14000bc1e:	add    BYTE PTR [rax],al
   14000bc20:	xor    al,0xc1
   14000bc22:	add    BYTE PTR [rax],al
   14000bc24:	add    BYTE PTR [rax],al
   14000bc26:	add    BYTE PTR [rax],al
   14000bc28:	sub    cl,al
   14000bc2a:	add    BYTE PTR [rax],al
   14000bc2c:	add    BYTE PTR [rax],al
   14000bc2e:	add    BYTE PTR [rax],al
   14000bc30:	or     al,cl
   14000bc32:	add    BYTE PTR [rax],al
   14000bc34:	add    BYTE PTR [rax],al
   14000bc36:	add    BYTE PTR [rax],al
   14000bc38:	repnz rol BYTE PTR [rax],0x0
   14000bc3c:	add    BYTE PTR [rax],al
   14000bc3e:	add    BYTE PTR [rax],al
   14000bc40:	(bad)  
   14000bc41:	rol    BYTE PTR [rax],0x0
   14000bc44:	add    BYTE PTR [rax],al
   14000bc46:	add    BYTE PTR [rax],al
   14000bc48:	mov    ah,0xc0
   14000bc4a:	add    BYTE PTR [rax],al
   14000bc4c:	add    BYTE PTR [rax],al
   14000bc4e:	add    BYTE PTR [rax],al
   14000bc50:	stos   BYTE PTR es:[rdi],al
   14000bc51:	rol    BYTE PTR [rax],0x0
   14000bc54:	add    BYTE PTR [rax],al
   14000bc56:	add    BYTE PTR [rax],al
   14000bc58:	pushf  
   14000bc59:	rol    BYTE PTR [rax],0x0
   14000bc5c:	add    BYTE PTR [rax],al
   14000bc5e:	add    BYTE PTR [rax],al
   14000bc60:	nop
   14000bc61:	rol    BYTE PTR [rax],0x0
   14000bc64:	add    BYTE PTR [rax],al
   14000bc66:	add    BYTE PTR [rax],al
   14000bc68:	test   al,al
   14000bc6a:	add    BYTE PTR [rax],al
   14000bc6c:	add    BYTE PTR [rax],al
   14000bc6e:	add    BYTE PTR [rax],al
   14000bc70:	js     0x14000bc32
   14000bc72:	add    BYTE PTR [rax],al
   14000bc74:	add    BYTE PTR [rax],al
   14000bc76:	add    BYTE PTR [rax],al
   14000bc78:	ins    BYTE PTR es:[rdi],dx
   14000bc79:	rol    BYTE PTR [rax],0x0
   14000bc7c:	add    BYTE PTR [rax],al
   14000bc7e:	add    BYTE PTR [rax],al
   14000bc80:	rol    BYTE PTR fs:[rax],0x0
   14000bc84:	add    BYTE PTR [rax],al
   14000bc86:	add    BYTE PTR [rax],al
   14000bc88:	pop    rdx
   14000bc89:	rol    BYTE PTR [rax],0x0
   14000bc8c:	add    BYTE PTR [rax],al
   14000bc8e:	add    BYTE PTR [rax],al
   14000bc90:	rex.WRX rol BYTE PTR [rax],0x0
   14000bc94:	add    BYTE PTR [rax],al
   14000bc96:	add    BYTE PTR [rax],al
   14000bc98:	xor    al,0xc2
   14000bc9a:	add    BYTE PTR [rax],al
   14000bc9c:	add    BYTE PTR [rax],al
   14000bc9e:	add    BYTE PTR [rax],al
   14000bca0:	sbb    al,0xc2
   14000bca2:	add    BYTE PTR [rax],al
   14000bca4:	add    BYTE PTR [rax],al
   14000bca6:	add    BYTE PTR [rax],al
   14000bca8:	cld    
   14000bca9:	rol    DWORD PTR [rax],0x0
   14000bcac:	add    BYTE PTR [rax],al
   14000bcae:	add    BYTE PTR [rax],al
   14000bcb0:	lock rol DWORD PTR [rax],0x0
   14000bcb4:	add    BYTE PTR [rax],al
   14000bcb6:	add    BYTE PTR [rax],al
   14000bcb8:	mov    al,cl
   14000bcba:	add    BYTE PTR [rax],al
   14000bcbc:	add    BYTE PTR [rax],al
   14000bcbe:	add    BYTE PTR [rax],al
   14000bcc0:	(bad)  
   14000bcc1:	rol    DWORD PTR [rax],0x0
   14000bcc4:	add    BYTE PTR [rax],al
   14000bcc6:	add    BYTE PTR [rax],al
   14000bcc8:	(bad)
	...
   14000bcd8:	and    al,0xc3
   14000bcda:	add    BYTE PTR [rax],al
   14000bcdc:	add    BYTE PTR [rax],al
   14000bcde:	add    BYTE PTR [rax],al
   14000bce0:	(bad)  
   14000bce1:	ret    
   14000bce2:	add    BYTE PTR [rax],al
   14000bce4:	add    BYTE PTR [rax],al
   14000bce6:	add    BYTE PTR [rax],al
   14000bce8:	test   dl,0x0
   14000bceb:	add    BYTE PTR [rax],al
   14000bced:	add    BYTE PTR [rax],al
   14000bcef:	add    ah,ah
   14000bcf1:	ret    0x0
   14000bcf4:	add    BYTE PTR [rax],al
   14000bcf6:	add    BYTE PTR [rax],al
   14000bcf8:	int3   
   14000bcf9:	ret    0x0
   14000bcfc:	add    BYTE PTR [rax],al
   14000bcfe:	add    BYTE PTR [rax],al
   14000bd00:	mov    esp,0xc2
   14000bd05:	add    BYTE PTR [rax],al
   14000bd07:	add    BYTE PTR [rax+0xc2],ch
   14000bd0d:	add    BYTE PTR [rax],al
   14000bd0f:	add    BYTE PTR [rsi+0xc2],dl
   14000bd15:	add    BYTE PTR [rax],al
   14000bd17:	add    BYTE PTR [rdx+0xc2],al
   14000bd1d:	add    BYTE PTR [rax],al
   14000bd1f:	add    BYTE PTR [rdx-0x3e],dh
	...
   14000bd2e:	add    BYTE PTR [rax],al
   14000bd30:	push   rbp
   14000bd31:	add    dl,BYTE PTR [rdx+0x65]
   14000bd34:	rex.XB ins BYTE PTR es:[edi],dx
   14000bd37:	outs   dx,DWORD PTR ds:[rsi]
   14000bd38:	jae    0x14000bd9f
   14000bd3a:	rex.WXB
   14000bd3b:	gs jns 0x14000bd3e
   14000bd3e:	lea    eax,[rdx]
   14000bd40:	push   rdx
   14000bd41:	gs addr32 push rcx
   14000bd44:	jne    0x14000bdab
   14000bd46:	jb     0x14000bdc1
   14000bd48:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bd4a:	outs   dx,WORD PTR ds:[rsi]
   14000bd4c:	rex.WXB
   14000bd4d:	gs jns 0x14000bda7
   14000bd50:	add    BYTE PTR [rax],al
   14000bd52:	je     0x14000bd56
   14000bd54:	push   rdx
   14000bd55:	rex.RB outs dx,BYTE PTR gs:[esi]
   14000bd59:	jne    0x14000bdc8
   14000bd5b:	rex.WXB
   14000bd5c:	gs jns 0x14000bda4
   14000bd5f:	js     0x14000bdb8
   14000bd61:	add    BYTE PTR [rsi+0x67655202],al
   14000bd67:	rex.WRXB jo 0x14000bdcf
   14000bd6a:	outs   dx,BYTE PTR ds:[rsi]
   14000bd6b:	rex.WXB
   14000bd6c:	gs jns 0x14000bdb4
   14000bd6f:	js     0x14000bdc8
   14000bd71:	add    BYTE PTR [rbx+0x67655202],ah
   14000bd77:	push   rbx
   14000bd78:	gs je  0x14000bdd1
   14000bd7b:	(bad)  
   14000bd7c:	ins    BYTE PTR es:[rdi],dx
   14000bd7d:	jne    0x14000bde4
   14000bd7f:	rex.RB js 0x14000bdd9
   14000bd82:	add    BYTE PTR [rax],al
   14000bd84:	pop    rsi
   14000bd85:	add    dl,BYTE PTR [rdx+0x65]
   14000bd88:	addr32 rex.XB jb 0x14000bdf1
   14000bd8c:	(bad)  
   14000bd8d:	je     0x14000bdf4
   14000bd8f:	rex.WXB
   14000bd90:	gs jns 0x14000bdd8
   14000bd93:	js     0x14000bdec
   14000bd95:	add    BYTE PTR [rbp+0x2],ch
   14000bd98:	push   rdx
   14000bd99:	gs addr32 rex.R
   14000bd9c:	gs ins BYTE PTR es:[rdi],dx
   14000bd9e:	gs je  0x14000be06
   14000bda1:	push   rsi
   14000bda2:	(bad)  
   14000bda3:	ins    BYTE PTR es:[rdi],dx
   14000bda4:	jne    0x14000be0b
   14000bda6:	push   rdi
   14000bda7:	add    BYTE PTR [rbx],dl
   14000bda9:	add    cl,BYTE PTR [rdi+0x70]
   14000bdac:	outs   dx,BYTE PTR gs:[rsi]
   14000bdae:	push   rax
   14000bdaf:	jb     0x14000be20
   14000bdb1:	movsxd esp,DWORD PTR [rbp+0x73]
   14000bdb4:	jae    0x14000be0a
   14000bdb6:	outs   dx,DWORD PTR ds:[rsi]
   14000bdb7:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000bdbb:	add    BYTE PTR [rcx+0x44],al
   14000bdbe:	push   rsi
   14000bdbf:	push   r8
   14000bdc1:	xor    rsi,QWORD PTR [r10]
   14000bdc4:	cs fs ins BYTE PTR es:[rdi],dx
   14000bdc7:	ins    BYTE PTR es:[rdi],dx
   14000bdc8:	add    BYTE PTR [rax],al
   14000bdca:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bdcb:	add    DWORD PTR [rsi+0x72],eax
   14000bdce:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000bdd8:	push   rdi
   14000bdd9:	add    al,BYTE PTR [rdi+0x65]
   14000bddc:	je     0x14000be2a
   14000bdde:	(bad)  
   14000bddf:	jae    0x14000be55
   14000bde1:	rex.RB jb 0x14000be56
   14000bde4:	outs   dx,DWORD PTR ds:[rsi]
   14000bde5:	jb     0x14000bde7
   14000bde7:	add    BYTE PTR [rbp+0x74654702],ah
   14000bded:	push   rax
   14000bdee:	jb     0x14000be5f
   14000bdf0:	movsxd eax,DWORD PTR [rcx+0x64]
   14000bdf3:	fs jb  0x14000be5b
   14000bdf6:	jae    0x14000be6b
   14000bdf8:	add    BYTE PTR [rax],al
   14000bdfa:	scas   al,BYTE PTR es:[rdi]
   14000bdfb:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14000bdff:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000be08:	js     0x14000be61
   14000be0a:	add    BYTE PTR [rax],al
   14000be0c:	outs   dx,BYTE PTR ds:[rsi]
   14000be0d:	add    al,BYTE PTR [rdi+0x65]
   14000be10:	je     0x14000be5f
   14000be12:	outs   dx,DWORD PTR ds:[rsi]
   14000be13:	fs jne 0x14000be82
   14000be16:	gs rex.W (bad) 
   14000be19:	outs   dx,BYTE PTR ds:[rsi]
   14000be1a:	fs ins BYTE PTR es:[rdi],dx
   14000be1c:	gs push rdi
   14000be1e:	add    BYTE PTR [rax],al
   14000be20:	and    eax,0x74736c06
   14000be25:	jb     0x14000be8a
   14000be27:	ins    DWORD PTR es:[rdi],dx
   14000be28:	jo     0x14000be93
   14000be2a:	push   rdi
   14000be2b:	add    BYTE PTR [rsp+rax*1+0x52],cl
   14000be2f:	(bad)  
   14000be30:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14000be37:	jo     0x14000bead
   14000be39:	imul   ebp,DWORD PTR [rdi+0x6e],0x3d80000
   14000be40:	rex.WRB jne 0x14000beaf
   14000be43:	je     0x14000beae
   14000be45:	rex.X jns 0x14000bebc
   14000be48:	gs push rsp
   14000be4a:	outs   dx,DWORD PTR ds:[rsi]
   14000be4b:	push   rdi
   14000be4c:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14000be54:	ins    BYTE PTR es:[rdi],dx
   14000be55:	add    eax,0x657a6953
   14000be5a:	outs   dx,DWORD PTR ds:[rsi]
   14000be5b:	push   dx
   14000be5d:	gs jae 0x14000becf
   14000be60:	jne    0x14000bed4
   14000be62:	movsxd esp,DWORD PTR [rbp+0x0]
   14000be65:	add    BYTE PTR [rdx+0x616f4c03],dh
   14000be6b:	fs push rdx
   14000be6d:	gs jae 0x14000bedf
   14000be70:	jne    0x14000bee4
   14000be72:	movsxd esp,DWORD PTR [rbp+0x0]
   14000be75:	add    BYTE PTR [rsi+0x6e694601],cl
   14000be7b:	fs push rdx
   14000be7d:	gs jae 0x14000beef
   14000be80:	jne    0x14000bef4
   14000be82:	movsxd esp,DWORD PTR [rbp+0x45]
   14000be85:	js     0x14000bede
   14000be87:	add    BYTE PTR [rdx+0x2],ch
   14000be8a:	rex.RXB
   14000be8b:	gs je  0x14000bedb
   14000be8e:	outs   dx,DWORD PTR ds:[rsi]
   14000be8f:	fs jne 0x14000befe
   14000be92:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000be9c:	add    BYTE PTR [rax],al
   14000be9e:	or     BYTE PTR [rip+0x45746553],al        # 0x1857523f7
   14000bea4:	jbe    0x14000bf0b
   14000bea6:	outs   dx,BYTE PTR ds:[rsi]
   14000bea7:	je     0x14000bea9
   14000bea9:	add    al,cl
   14000beab:	add    eax,0x74696157
   14000beb0:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000beb2:	jb     0x14000bf07
   14000beb4:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   14000bebb:	push   0x65
   14000bebd:	movsxd esi,DWORD PTR [rax+rax*1+0x7d]
   14000bec1:	add    BYTE PTR [rbx+0x6c],al
   14000bec4:	outs   dx,DWORD PTR ds:[rsi]
   14000bec5:	jae    0x14000bf2c
   14000bec7:	rex.W (bad) 
   14000bec9:	outs   dx,BYTE PTR ds:[rsi]
   14000beca:	fs ins BYTE PTR es:[rdi],dx
   14000becc:	add    BYTE PTR gs:[rax+rax*1+0x61657243],dh
   14000bed4:	je     0x14000bf3b
   14000bed6:	rex.RB jbe 0x14000bf3e
   14000bed9:	outs   dx,BYTE PTR ds:[rsi]
   14000beda:	je     0x14000bf33
   14000bedc:	add    BYTE PTR [rax],al
   14000bede:	out    0x0,al
   14000bee0:	rex.XB jb 0x14000bf48
   14000bee3:	(bad)  
   14000bee4:	je     0x14000bf4b
   14000bee6:	push   rsp
   14000bee7:	push   0x64616572
   14000beec:	add    BYTE PTR [rax],al
   14000beee:	add    eax,0x6c654401
   14000bef3:	gs je  0x14000bf5b
   14000bef6:	rex.XB jb 0x14000bf62
   14000bef9:	je     0x14000bf64
   14000befb:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000befe:	push   rbx
   14000beff:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000bf04:	outs   dx,BYTE PTR ds:[rsi]
   14000bf05:	add    BYTE PTR [rbx+rax*1+0x49],dl
   14000bf09:	outs   dx,BYTE PTR ds:[rsi]
   14000bf0a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000bf12:	rex.XB jb 0x14000bf7e
   14000bf15:	je     0x14000bf80
   14000bf17:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000bf1a:	push   rbx
   14000bf1b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000bf20:	outs   dx,BYTE PTR ds:[rsi]
   14000bf21:	add    al,dl
   14000bf23:	add    DWORD PTR [rdi+0x65],eax
   14000bf26:	je     0x14000bf6b
   14000bf28:	outs   dx,DWORD PTR ds:[rsi]
   14000bf29:	ins    DWORD PTR es:[rdi],dx
   14000bf2a:	ins    DWORD PTR es:[rdi],dx
   14000bf2b:	(bad)  
   14000bf2c:	outs   dx,BYTE PTR ds:[rsi]
   14000bf2d:	imul   r13,QWORD PTR fs:[rsi+0x65],0x2150057
   14000bf36:	rex.RXB
   14000bf37:	gs je  0x14000bf7d
   14000bf3a:	jne    0x14000bfae
   14000bf3c:	jb     0x14000bfa3
   14000bf3e:	outs   dx,BYTE PTR ds:[rsi]
   14000bf3f:	je     0x14000bf95
   14000bf41:	push   0x64616572
   14000bf46:	rex.WB
   14000bf47:	add    BYTE PTR fs:[rax],al
   14000bf4a:	ins    DWORD PTR es:[rdi],dx
   14000bf4b:	add    eax,0x65656c53
   14000bf50:	jo     0x14000bf52
   14000bf52:	mov    ecx,0x636f4c03
   14000bf57:	(bad)  
   14000bf58:	ins    BYTE PTR es:[rdi],dx
   14000bf59:	rex.RX jb 0x14000bfc1
   14000bf5c:	add    BYTE PTR gs:[rcx],ch
   14000bf5f:	add    DWORD PTR [rbp+0x6e],eax
   14000bf62:	je     0x14000bfc9
   14000bf64:	jb     0x14000bfa9
   14000bf66:	jb     0x14000bfd1
   14000bf68:	je     0x14000bfd3
   14000bf6a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000bf6d:	push   rbx
   14000bf6e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000bf73:	outs   dx,BYTE PTR ds:[rsi]
   14000bf74:	add    BYTE PTR [rax],al
   14000bf76:	test   eax,0x61654c03
   14000bf7b:	jbe    0x14000bfe2
   14000bf7d:	rex.XB jb 0x14000bfe9
   14000bf80:	je     0x14000bfeb
   14000bf82:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000bf85:	push   rbx
   14000bf86:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000bf8b:	outs   dx,BYTE PTR ds:[rsi]
   14000bf8c:	add    BYTE PTR [rax],al
   14000bf8e:	push   rbp
   14000bf8f:	add    ecx,DWORD PTR [rcx+0x6e]
   14000bf92:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000bf9a:	rex.XB jb 0x14000c006
   14000bf9d:	je     0x14000c008
   14000bf9f:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000bfa2:	push   rbx
   14000bfa3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000bfa8:	outs   dx,BYTE PTR ds:[rsi]
   14000bfa9:	rex.B outs dx,BYTE PTR ds:[rsi]
   14000bfab:	fs push rbx
   14000bfad:	jo     0x14000c018
   14000bfaf:	outs   dx,BYTE PTR ds:[rsi]
   14000bfb0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bfb2:	jne    0x14000c022
   14000bfb4:	je     0x14000bfb6
   14000bfb6:	and    eax,DWORD PTR [rip+0x4c746553]        # 0x18c75250f
   14000bfbc:	(bad)  
   14000bfbd:	jae    0x14000c033
   14000bfbf:	rex.RB jb 0x14000c034
   14000bfc2:	outs   dx,DWORD PTR ds:[rsi]
   14000bfc3:	jb     0x14000bfc5
   14000bfc5:	add    BYTE PTR [rax],dl
   14000bfc7:	add    al,BYTE PTR [rdi+0x65]
   14000bfca:	je     0x14000c00f
   14000bfcc:	jne    0x14000c040
   14000bfce:	jb     0x14000c035
   14000bfd0:	outs   dx,BYTE PTR ds:[rsi]
   14000bfd1:	je     0x14000c023
   14000bfd3:	jb     0x14000c044
   14000bfd5:	movsxd esp,DWORD PTR [rbp+0x73]
   14000bfd8:	jae    0x14000bfda
   14000bfda:	add    DWORD PTR [rdi+rcx*2],eax
   14000bfdd:	jne    0x14000c053
   14000bfdf:	jo     0x14000c056
   14000bfe1:	je     0x14000c027
   14000bfe3:	gs (bad) 
   14000bfe5:	jne    0x14000c04e
   14000bfe7:	push   rbx
   14000bfe8:	je     0x14000c05c
   14000bfea:	imul   ebp,DWORD PTR [rsi+0x67],0x4b000041
   14000bff1:	rex.RB push r10
   14000bff3:	rex.WRX
   14000bff4:	rex.RB
   14000bff5:	xor    r14,QWORD PTR [rdx]
   14000bff8:	cs fs ins BYTE PTR es:[rdi],dx
   14000bffb:	ins    BYTE PTR es:[rdi],dx
   14000bffc:	add    BYTE PTR [rax],al
   14000bffe:	xor    DWORD PTR [rax],eax
   14000c000:	rex.XB push 0x654e7261
   14000c006:	js     0x14000c07c
   14000c008:	push   rdi
   14000c009:	add    BYTE PTR [rsi+0x736f5002],al
   14000c00f:	je     0x14000c065
   14000c011:	push   0x64616572
   14000c016:	rex.WRB
   14000c017:	gs jae 0x14000c08d
   14000c01a:	(bad)  
   14000c01b:	addr32 gs push rdi
   14000c01e:	add    BYTE PTR [rax],al
   14000c020:	js     0x14000c023
   14000c022:	rex.RXB
   14000c023:	gs je  0x14000c073
   14000c026:	gs jae 0x14000c09c
   14000c029:	(bad)  
   14000c02a:	addr32 gs push rdi
   14000c02d:	add    BYTE PTR [rsi+0x73694400],dh
   14000c033:	jo     0x14000c096
   14000c035:	je     0x14000c09a
   14000c037:	push   0x7373654d
   14000c03c:	(bad)  
   14000c03d:	addr32 gs push rdi
   14000c040:	add    BYTE PTR [rax],al
   14000c042:	push   rbp
   14000c043:	push   rbx
   14000c044:	rex.RB push r10
   14000c046:	xor    esi,DWORD PTR [rdx]
   14000c048:	cs fs ins BYTE PTR es:[rdi],dx
   14000c04b:	ins    BYTE PTR es:[rdi],dx
   14000c04c:	add    BYTE PTR [rax],al
   14000c04e:	or     eax,0x73637705
   14000c053:	outs   dx,BYTE PTR ds:[rsi]
   14000c054:	movsxd esi,DWORD PTR [rax+0x79]
   14000c057:	pop    rdi
   14000c058:	jae    0x14000c05a
   14000c05a:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000c061:	movsxd eax,DWORD PTR [rax]
   14000c063:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000c067:	jb     0x14000c0ce
   14000c069:	add    BYTE PTR gs:[rax],al
   14000c06c:	xchg   ebx,eax
   14000c06d:	add    al,0x6d
   14000c06f:	gs ins DWORD PTR es:[rdi],dx
   14000c071:	movsxd esi,DWORD PTR [rax+0x79]
   14000c074:	pop    rdi
   14000c075:	jae    0x14000c077
   14000c077:	add    BYTE PTR [rip+0x73637705],al        # 0x1b3643782
   14000c07d:	movsxd esi,DWORD PTR [rax+0x79]
   14000c080:	pop    rdi
   14000c081:	jae    0x14000c083
   14000c083:	add    BYTE PTR [rax],al
   14000c085:	add    eax,0x63736377
   14000c08a:	(bad)  
   14000c08b:	je     0x14000c0ec
   14000c08d:	jae    0x14000c08f
   14000c08f:	add    BYTE PTR [rsi+0x75705f02],bl
   14000c095:	jb     0x14000c0fc
   14000c097:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000c09a:	ins    BYTE PTR es:[rdi],dx
   14000c09b:	add    BYTE PTR [rbx+0x3],ah
   14000c09e:	pop    rdi
   14000c09f:	jbe    0x14000c114
   14000c0a1:	outs   dx,BYTE PTR ds:[rsi]
   14000c0a2:	jo     0x14000c116
   14000c0a4:	imul   ebp,DWORD PTR [rsi+0x74],0x96000066
   14000c0ab:	add    al,0x6d
   14000c0ad:	gs ins DWORD PTR es:[rdi],dx
   14000c0af:	jae    0x14000c116
   14000c0b1:	je     0x14000c0b3
   14000c0b3:	add    BYTE PTR [rbx],cl
   14000c0b5:	add    BYTE PTR [rdi],bh
   14000c0b7:	(bad)  
   14000c0b8:	xor    BYTE PTR [rbp+0x78],ah
   14000c0bb:	movsxd esp,DWORD PTR [rbp+0x70]
   14000c0be:	je     0x14000c129
   14000c0c0:	outs   dx,DWORD PTR ds:[rsi]
   14000c0c1:	outs   dx,BYTE PTR ds:[rsi]
   14000c0c2:	rex
   14000c0c3:	rex push rcx
   14000c0c5:	rex.RB
   14000c0c6:	rex.B
   14000c0c7:	rex.B
   14000c0c8:	rex
   14000c0c9:	rex.B
   14000c0ca:	rex.RB
   14000c0cb:	rex.X push rcx
   14000c0cd:	rex.RB
   14000c0ce:	rex.X
   14000c0cf:	rex.R
   14000c0d0:	rex.W
   14000c0d1:	rex pop rdx
   14000c0d3:	add    BYTE PTR [rax+rax*1],cl
   14000c0d6:	(bad)  
   14000c0d7:	(bad)  
   14000c0d8:	xor    BYTE PTR [rbp+0x78],ah
   14000c0db:	movsxd esp,DWORD PTR [rbp+0x70]
   14000c0de:	je     0x14000c149
   14000c0e0:	outs   dx,DWORD PTR ds:[rsi]
   14000c0e1:	outs   dx,BYTE PTR ds:[rsi]
   14000c0e2:	rex
   14000c0e3:	rex push rcx
   14000c0e5:	rex.RB
   14000c0e6:	rex.B
   14000c0e7:	rex.B
   14000c0e8:	rex
   14000c0e9:	rex.B
   14000c0ea:	rex.RB
   14000c0eb:	rex.X push rsi
   14000c0ed:	xor    BYTE PTR [rax+0x40],al
   14000c0f0:	pop    rdx
   14000c0f1:	add    BYTE PTR [rcx],dl
   14000c0f3:	add    BYTE PTR [rdi],bh
   14000c0f5:	(bad)  
   14000c0f6:	xor    DWORD PTR [rbp+0x78],esp
   14000c0f9:	movsxd esp,DWORD PTR [rbp+0x70]
   14000c0fc:	je     0x14000c167
   14000c0fe:	outs   dx,DWORD PTR ds:[rsi]
   14000c0ff:	outs   dx,BYTE PTR ds:[rsi]
   14000c100:	rex
   14000c101:	rex push rbp
   14000c103:	rex.RB
   14000c104:	rex.B
   14000c105:	rex.B
   14000c106:	rex pop rax
   14000c108:	pop    rdx
   14000c109:	add    BYTE PTR [rcx],dh
   14000c10b:	add    BYTE PTR [rdi],bh
   14000c10d:	ja     0x14000c177
   14000c10f:	(bad)  
   14000c110:	je     0x14000c152
   14000c112:	gs js  0x14000c178
   14000c115:	gs jo  0x14000c18c
   14000c118:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000c11f:	rex.X
   14000c120:	push   r8
   14000c122:	rex.RB
   14000c123:	rex.X
   14000c124:	rex.R pop rax
   14000c126:	pop    rdx
   14000c127:	add    BYTE PTR [rdi+0x61635f00],bh
   14000c12d:	ins    BYTE PTR es:[rdi],dx
   14000c12e:	ins    BYTE PTR es:[rdi],dx
   14000c12f:	outs   dx,BYTE PTR ds:[rsi]
   14000c130:	gs ja  0x14000c19b
   14000c133:	add    BYTE PTR [rbx+0x0],cl
   14000c136:	pop    rdi
   14000c137:	rex.XB js 0x14000c1b2
   14000c13a:	push   rsp
   14000c13b:	push   0x45776f72
   14000c140:	js     0x14000c1a5
   14000c142:	gs jo  0x14000c1b9
   14000c145:	imul   ebp,DWORD PTR [rdi+0x6e],0x550000
   14000c14c:	pop    rdi
   14000c14d:	pop    rax
   14000c14e:	movsxd esi,DWORD PTR [rax+0x74]
   14000c151:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000c15a:	pop    rdi
   14000c15b:	(bad)  
   14000c15c:	ins    DWORD PTR es:[rdi],dx
   14000c15d:	jae    0x14000c1c6
   14000c15f:	pop    rdi
   14000c160:	gs js  0x14000c1cc
   14000c163:	je     0x14000c165
   14000c165:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000c16b:	addr32 gs je 0x14000c1dc
   14000c16f:	(bad)  
   14000c170:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000c177:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000c17d:	gs je  0x14000c1df
   14000c180:	(bad)  
   14000c181:	jo     0x14000c1f3
   14000c183:	pop    rdi
   14000c184:	je     0x14000c1ff
   14000c186:	jo     0x14000c1ed
   14000c188:	add    BYTE PTR [rax],al
   14000c18a:	xor    al,BYTE PTR [riz*2+0x746978]
   14000c191:	add    BYTE PTR [rsi],cl
   14000c193:	add    DWORD PTR [rdi+0x65],ebx
   14000c196:	js     0x14000c201
   14000c198:	je     0x14000c19a
   14000c19a:	rol    DWORD PTR [rax],0x5f
   14000c19d:	movsxd esp,DWORD PTR [rbp+0x78]
   14000c1a0:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000c1a8:	jae    0x14000c20f
   14000c1aa:	je     0x14000c221
   14000c1ac:	jae    0x14000c213
   14000c1ae:	jb     0x14000c21d
   14000c1b0:	(bad)  
   14000c1b1:	je     0x14000c21b
   14000c1b3:	gs jb  0x14000c228
   14000c1b6:	add    BYTE PTR [rax],al
   14000c1b8:	jge    0x14000c1bb
   14000c1ba:	pop    rdi
   14000c1bb:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000c1c2:	ins    DWORD PTR es:[rdi],dx
   14000c1c3:	add    BYTE PTR [rdi+0x0],dl
   14000c1c6:	pop    rdi
   14000c1c7:	pop    rdi
   14000c1c8:	rex.XB pop r15
   14000c1ca:	jae    0x14000c23c
   14000c1cc:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000c1d0:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000c1d7:	ins    BYTE PTR es:[rdi],dx
   14000c1d8:	gs jb  0x14000c1db
   14000c1db:	add    BYTE PTR [rdx+0x63775f03],al
   14000c1e1:	ins    DWORD PTR es:[rdi],dx
   14000c1e2:	fs ins BYTE PTR es:[rdi],dx
   14000c1e4:	outs   dx,BYTE PTR ds:[rsi]
   14000c1e5:	add    BYTE PTR [rdi],ah
   14000c1e7:	add    DWORD PTR [rdi+0x66],ebx
   14000c1ea:	ins    DWORD PTR es:[rdi],dx
   14000c1eb:	outs   dx,DWORD PTR ds:[rsi]
   14000c1ec:	fs add BYTE PTR gs:[rax],al
   14000c1f0:	rol    BYTE PTR [rax],cl
   14000c1f2:	pop    rdi
   14000c1f3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c1f6:	ins    DWORD PTR es:[rdi],dx
   14000c1f7:	outs   dx,DWORD PTR ds:[rsi]
   14000c1f8:	fs add BYTE PTR gs:[rax],al
   14000c1fc:	(bad)  
   14000c1fd:	add    BYTE PTR [rdi],bh
   14000c1ff:	je     0x14000c266
   14000c201:	jb     0x14000c270
   14000c203:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000c20a:	pop    rcx
   14000c20b:	pop    r8
   14000c20d:	pop    rax
   14000c20e:	pop    rdx
   14000c20f:	add    BYTE PTR [rbp+0x73],ch
   14000c212:	jbe    0x14000c277
   14000c214:	jb     0x14000c28a
   14000c216:	cs fs ins BYTE PTR es:[rdi],dx
   14000c219:	ins    BYTE PTR es:[rdi],dx
   14000c21a:	add    BYTE PTR [rax],al
   14000c21c:	adc    al,BYTE PTR [rax]
   14000c21e:	(bad)  
   14000c21f:	(bad)  
   14000c220:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000c224:	gs pop rdi
   14000c226:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000c22d:	rex.RB
   14000c22e:	rex.B
   14000c22f:	rex.B
   14000c230:	rex pop rax
   14000c232:	pop    rdx
   14000c233:	add    BYTE PTR [rip+0x72655f01],al        # 0x1b266213a
   14000c239:	jb     0x14000c2a9
   14000c23b:	outs   dx,DWORD PTR ds:[rsi]
   14000c23c:	add    BYTE PTR [rax],al
   14000c23e:	test   eax,0x61657204
   14000c243:	ins    BYTE PTR es:[rdi],dx
   14000c244:	ins    BYTE PTR es:[rdi],dx
   14000c245:	outs   dx,DWORD PTR ds:[rsi]
   14000c246:	movsxd eax,DWORD PTR [rax]
   14000c248:	out    0x1,al
   14000c24a:	pop    rdi
   14000c24b:	ins    BYTE PTR es:[rdi],dx
   14000c24c:	outs   dx,DWORD PTR ds:[rsi]
   14000c24d:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000c250:	add    ebx,DWORD PTR [r15+0x75]
   14000c254:	outs   dx,BYTE PTR ds:[rsi]
   14000c255:	ins    BYTE PTR es:[rdi],dx
   14000c256:	outs   dx,DWORD PTR ds:[rsi]
   14000c257:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000c25a:	jnp    0x14000c25c
   14000c25c:	pop    rdi
   14000c25d:	pop    rdi
   14000c25e:	fs ins BYTE PTR es:[rdi],dx
   14000c260:	ins    BYTE PTR es:[rdi],dx
   14000c261:	outs   dx,DWORD PTR ds:[rsi]
   14000c262:	outs   dx,BYTE PTR ds:[rsi]
   14000c263:	gs js  0x14000c2cf
   14000c266:	je     0x14000c268
   14000c268:	nop
   14000c269:	add    bl,BYTE PTR [rdi+0x6f]
   14000c26c:	outs   dx,BYTE PTR ds:[rsi]
   14000c26d:	gs js  0x14000c2d9
   14000c270:	je     0x14000c272
   14000c272:	mov    WORD PTR [rax],es
   14000c274:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c276:	push   rsp
   14000c277:	(bad)  
   14000c278:	jae    0x14000c2e5
   14000c27a:	rex.WRB
   14000c27b:	gs ins DWORD PTR es:[rdi],dx
   14000c27d:	rex.RX jb 0x14000c2e5
   14000c280:	add    BYTE PTR gs:[rbp+0x546f4300],cl
   14000c287:	(bad)  
   14000c288:	jae    0x14000c2f5
   14000c28a:	rex.WRB
   14000c28b:	gs ins DWORD PTR es:[rdi],dx
   14000c28d:	push   rdx
   14000c28e:	gs (bad) 
   14000c290:	ins    BYTE PTR es:[rdi],dx
   14000c291:	ins    BYTE PTR es:[rdi],dx
   14000c292:	outs   dx,DWORD PTR ds:[rsi]
   14000c293:	movsxd eax,DWORD PTR [rax]
   14000c295:	add    BYTE PTR [rbx+0x546f4300],cl
   14000c29b:	(bad)  
   14000c29c:	jae    0x14000c309
   14000c29e:	rex.WRB
   14000c29f:	gs ins DWORD PTR es:[rdi],dx
   14000c2a1:	rex.B ins BYTE PTR es:[rdi],dx
   14000c2a3:	ins    BYTE PTR es:[rdi],dx
   14000c2a4:	outs   dx,DWORD PTR ds:[rsi]
   14000c2a5:	movsxd eax,DWORD PTR [rax]
   14000c2a7:	add    BYTE PTR [rbx],ch
   14000c2a9:	add    BYTE PTR [rbx+0x6f],al
   14000c2ac:	rex.XB jb 0x14000c314
   14000c2af:	(bad)  
   14000c2b0:	je     0x14000c317
   14000c2b2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c2b4:	jae    0x14000c32a
   14000c2b6:	(bad)  
   14000c2b7:	outs   dx,BYTE PTR ds:[rsi]
   14000c2b8:	movsxd esp,DWORD PTR [rbp+0x0]
   14000c2bb:	add    BYTE PTR [rax+0x0],ah
   14000c2be:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c2c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c2c2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000c2ca:	add    BYTE PTR [rax],al
   14000c2cc:	(bad)  
   14000c2cd:	add    BYTE PTR [rbx+0x6f],al
   14000c2d0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c2d2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000c2da:	push   rbx
   14000c2db:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c2df:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x53020b00
   14000c2e7:	je     0x14000c35b
   14000c2e9:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f7246
   14000c2f0:	rex.RXB push r13
   14000c2f2:	rex.WB
   14000c2f3:	xor    r8b,BYTE PTR [rax]
   14000c2f6:	jbe    0x14000c2f8
   14000c2f8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c2fa:	push   rdx
   14000c2fb:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   14000c304:	(bad)  
   14000c305:	jae    0x14000c37a
   14000c307:	rex.WRXB (bad) 
   14000c309:	push   0x65
   14000c30b:	movsxd esi,DWORD PTR [rax+rax*1-0x7e]
   14000c30f:	add    BYTE PTR [rbx+0x6f],al
   14000c312:	push   rdx
   14000c313:	gs jbe 0x14000c385
   14000c316:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14000c31a:	(bad)  
   14000c31b:	jae    0x14000c390
   14000c31d:	rex.WRXB (bad) 
   14000c31f:	push   0x65
   14000c321:	movsxd esi,DWORD PTR [rax+rax*1-0x70]
   14000c325:	add    BYTE PTR [rbx+0x6f],al
   14000c328:	push   rbp
   14000c329:	outs   dx,BYTE PTR ds:[rsi]
   14000c32a:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000c331:	imul   edi,DWORD PTR [rdx+0x65],0x6c6f0000
   14000c338:	xor    esi,DWORD PTR gs:[rdx]
   14000c33b:	cs fs ins BYTE PTR es:[rdi],dx
   14000c33e:	ins    BYTE PTR es:[rdi],dx
   14000c33f:	add    BYTE PTR [rdi+0x4c],cl
   14000c342:	rex.RB
   14000c343:	push   r13
   14000c345:	push   rsp
   14000c346:	xor    esi,DWORD PTR [rdx]
   14000c348:	cs fs ins BYTE PTR es:[rdi],dx
   14000c34b:	ins    BYTE PTR es:[rdi],dx
   14000c34c:	add    BYTE PTR [rax],al
   14000c34e:	je     0x14000c353
   14000c350:	push   rbp
   14000c351:	outs   dx,BYTE PTR ds:[rsi]
   14000c352:	jb     0x14000c3b9
   14000c354:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   14000c35c:	(bad)  
   14000c35d:	jae    0x14000c3d2
   14000c35f:	add    BYTE PTR [r8],al
   14000c362:	xchg   ebx,eax
   14000c363:	add    dl,BYTE PTR [rdx+0x65]
   14000c366:	addr32 push rcx
   14000c368:	jne    0x14000c3cf
   14000c36a:	jb     0x14000c3e5
   14000c36c:	push   rsi
   14000c36d:	(bad)  
   14000c36e:	ins    BYTE PTR es:[rdi],dx
   14000c36f:	jne    0x14000c3d6
   14000c371:	rex.RB js 0x14000c3cb
   14000c374:	add    BYTE PTR [rax],al
   14000c376:	imul   eax,DWORD PTR [rdx],0x44676552
   14000c37c:	gs ins BYTE PTR es:[rdi],dx
   14000c37e:	gs je  0x14000c3e6
   14000c381:	rex.WXB
   14000c382:	gs jns 0x14000c3dc
   14000c385:	add    BYTE PTR [rbx+0x67655202],al
   14000c38b:	rex.WRXB jo 0x14000c3f3
   14000c38e:	outs   dx,BYTE PTR ds:[rsi]
   14000c38f:	rex.XB jne 0x14000c404
   14000c392:	jb     0x14000c3f9
   14000c394:	outs   dx,BYTE PTR ds:[rsi]
   14000c395:	je     0x14000c3ec
   14000c397:	jae    0x14000c3fe
   14000c399:	jb     0x14000c39b
   14000c39b:	add    bh,al
   14000c39d:	add    al,BYTE PTR [rdi+0x65]
   14000c3a0:	je     0x14000c3f5
   14000c3a2:	je     0x14000c405
   14000c3a4:	jb     0x14000c41a
   14000c3a6:	jne    0x14000c418
   14000c3a8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c3aa:	outs   dx,WORD PTR ds:[rsi]
   14000c3ac:	push   rdi
   14000c3ad:	add    BYTE PTR [rdi+0x6c745204],dh
   14000c3b3:	rex.XB (bad) 
   14000c3b5:	jo     0x14000c42b
   14000c3b7:	jne    0x14000c42b
   14000c3b9:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000c3bc:	outs   dx,BYTE PTR ds:[rsi]
   14000c3bd:	je     0x14000c424
   14000c3bf:	js     0x14000c435
   14000c3c1:	add    BYTE PTR [rsi+0x6c745204],bh
   14000c3c7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c3c9:	outs   dx,DWORD PTR ds:[rsi]
   14000c3ca:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000c3ce:	jne    0x14000c43e
   14000c3d0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000c3d4:	outs   dx,BYTE PTR ds:[rsi]
   14000c3d5:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c3d7:	je     0x14000c44b
   14000c3d9:	jns    0x14000c3db
   14000c3db:	add    ch,al
   14000c3dd:	add    al,0x52
   14000c3df:	je     0x14000c44d
   14000c3e1:	push   rsi
   14000c3e2:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000c3e9:	outs   dx,BYTE PTR ds:[rsi]
   14000c3ea:	ja     0x14000c455
   14000c3ec:	outs   dx,BYTE PTR ds:[rsi]
   14000c3ed:	add    BYTE PTR fs:[rax],al
   14000c3f0:	sahf   
   14000c3f1:	add    eax,0x61686e55
   14000c3f6:	outs   dx,BYTE PTR ds:[rsi]
   14000c3f7:	fs ins BYTE PTR es:[rdi],dx
   14000c3f9:	gs fs rex.RB js 0x14000c461
   14000c3fe:	gs jo  0x14000c475
   14000c401:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000c408:	gs jb  0x14000c40b
   14000c40b:	add    BYTE PTR [rsi+0x5],bl
   14000c40e:	push   rbx
   14000c40f:	gs je  0x14000c467
   14000c412:	outs   dx,BYTE PTR ds:[rsi]
   14000c413:	push   0x6c646e61
   14000c418:	gs fs rex.RB js 0x14000c480
   14000c41d:	gs jo  0x14000c494
   14000c420:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000c427:	gs jb  0x14000c42a
   14000c42a:	jl     0x14000c431
   14000c42c:	push   rsp
   14000c42d:	gs jb  0x14000c49d
   14000c430:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000c437:	outs   dx,DWORD PTR ds:[rsi]
   14000c438:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c43b:	jae    0x14000c43d
   14000c43d:	add    BYTE PTR [rsi],dh
   14000c43f:	add    al,0x51
   14000c441:	jne    0x14000c4a8
   14000c443:	jb     0x14000c4be
   14000c445:	push   rax
   14000c446:	gs jb  0x14000c4af
   14000c449:	outs   dx,DWORD PTR ds:[rsi]
   14000c44a:	jb     0x14000c4b9
   14000c44c:	(bad)  
   14000c44d:	outs   dx,BYTE PTR ds:[rsi]
   14000c44e:	movsxd esp,DWORD PTR [rbp+0x43]
   14000c451:	outs   dx,DWORD PTR ds:[rsi]
   14000c452:	jne    0x14000c4c2
   14000c454:	je     0x14000c4bb
   14000c456:	jb     0x14000c458
   14000c458:	adc    DWORD PTR [rdx],eax
   14000c45a:	rex.RXB
   14000c45b:	gs je  0x14000c4a1
   14000c45e:	jne    0x14000c4d2
   14000c460:	jb     0x14000c4c7
   14000c462:	outs   dx,BYTE PTR ds:[rsi]
   14000c463:	je     0x14000c4b5
   14000c465:	jb     0x14000c4d6
   14000c467:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c46a:	jae    0x14000c4b5
   14000c46c:	fs add al,ah
   14000c46f:	add    al,BYTE PTR [rdi+0x65]
   14000c472:	je     0x14000c4c7
   14000c474:	jns    0x14000c4e9
   14000c476:	je     0x14000c4dd
   14000c478:	ins    DWORD PTR es:[rdi],dx
   14000c479:	push   rsp
   14000c47a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000c481:	ins    BYTE PTR es:[rdi],dx
   14000c482:	gs push rsp
   14000c484:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000c48b:	gs je  0x14000c4e2
   14000c48e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000c495:	je     0x14000c497
   14000c497:	add    BYTE PTR [rdi+0x616f4c03],ch
   14000c49d:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14000c4a6:	add    BYTE PTR [rax],al
   14000c4a8:	sbb    BYTE PTR [rax+rdx*2],al
   14000c4ab:	jb     0x14000c51c
   14000c4ad:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c4b0:	jae    0x14000c4fb
   14000c4b2:	fs push rsp
   14000c4b4:	outs   dx,DWORD PTR ds:[rsi]
   14000c4b5:	push   rbx
   14000c4b6:	gs jae 0x14000c52c
   14000c4b9:	imul   ebp,DWORD PTR [rdi+0x6e],0x6449
   14000c4c0:	mov    ch,0x3
   14000c4c2:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c4c4:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000c4c7:	rex.B ins BYTE PTR es:[rdi],dx
   14000c4c9:	ins    BYTE PTR es:[rdi],dx
   14000c4ca:	outs   dx,DWORD PTR ds:[rsi]
   14000c4cb:	movsxd eax,DWORD PTR [rax]
   14000c4cd:	add    BYTE PTR [rip+0x74654702],dh        # 0x1b4660bd5
   14000c4d3:	rex.RB js 0x14000c53f
   14000c4d6:	je     0x14000c51b
   14000c4d8:	outs   dx,DWORD PTR ds:[rsi]
   14000c4d9:	fs gs push rsp
   14000c4dc:	push   0x64616572
   14000c4e1:	add    BYTE PTR [rcx+0x3],ch
   14000c4e4:	pop    rdi
   14000c4e5:	jbe    0x14000c55a
   14000c4e7:	outs   dx,BYTE PTR ds:[rsi]
   14000c4e8:	ja     0x14000c55a
   14000c4ea:	jb     0x14000c555
   14000c4ec:	outs   dx,BYTE PTR ds:[rsi]
   14000c4ed:	je     0x14000c555
   14000c4ef:	add    BYTE PTR [rdx+0x64705503],al
   14000c4f5:	(bad)  
   14000c4f6:	je     0x14000c55d
   14000c4f8:	push   rax
   14000c4f9:	gs jb  0x14000c551
   14000c4fc:	jae    0x14000c563
   14000c4fe:	jb     0x14000c553
   14000c500:	jns    0x14000c575
   14000c502:	je     0x14000c569
   14000c504:	ins    DWORD PTR es:[rdi],dx
   14000c505:	push   rax
   14000c506:	(bad)  
   14000c507:	jb     0x14000c56a
   14000c509:	ins    DWORD PTR es:[rdi],dx
   14000c50a:	gs je  0x14000c572
   14000c50d:	jb     0x14000c582
   14000c50f:	add    BYTE PTR [rbx+0x0],bl
   14000c512:	pop    rdi
   14000c513:	pop    rdi
   14000c514:	rex.XB js 0x14000c58f
   14000c517:	rex.RX jb 0x14000c57b
   14000c51a:	ins    DWORD PTR es:[rdi],dx
   14000c51b:	gs rex.W (bad) 
   14000c51e:	outs   dx,BYTE PTR ds:[rsi]
   14000c51f:	fs ins BYTE PTR es:[rdi],dx
   14000c521:	gs jb  0x14000c557
   14000c524:	add    BYTE PTR [rax],al
   14000c526:	xchg   ecx,eax
   14000c527:	add    al,0x6d
   14000c529:	gs ins DWORD PTR es:[rdi],dx
   14000c52b:	movsxd ebp,DWORD PTR [rbp+0x70]
	...

Disassembly of section .data:

000000014000d000 <.data>:
   14000d000:	jo     0x14000cf97
   14000d002:	add    BYTE PTR [rax+0x1],al
	...
   14000d00d:	add    BYTE PTR [rax],al
   14000d00f:	add    BYTE PTR [rax],dh
   14000d011:	jl     0x14000d013
   14000d013:	rex add DWORD PTR [rax],eax
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	add    DWORD PTR [rax],eax
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	add    BYTE PTR [rax],al
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	int    0x5d
   14000d02a:	and    dl,dl
   14000d02c:	data16 (bad) 
   14000d02e:	(bad)  
   14000d02f:	(bad)  
   14000d030:	fcomp  DWORD PTR [rsi+0x14000]
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	(bad)  
   14000d039:	adc    al,BYTE PTR [rax]
   14000d03b:	rex add DWORD PTR [rax],eax
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	nop
   14000d041:	sbb    al,BYTE PTR [rax]
   14000d043:	rex add DWORD PTR [rax],eax
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	adc    BYTE PTR [rax+rax*1],bl
   14000d04b:	rex add DWORD PTR [rax],eax
	...
   14000d05e:	add    BYTE PTR [rax],al
   14000d060:	lock (bad) 
   14000d062:	add    BYTE PTR [rax+0x1],al
   14000d065:	add    BYTE PTR [rax],al
   14000d067:	add    al,dh
   14000d069:	(bad)  
   14000d06a:	add    BYTE PTR [rax+0x1],al
   14000d06d:	add    BYTE PTR [rax],al
   14000d06f:	add    BYTE PTR [rax+0x3b],ah
   14000d072:	add    BYTE PTR [rax+0x1],al
	...
   14000d0bd:	add    BYTE PTR [rax],al
   14000d0bf:	add    al,bh
   14000d0c1:	sahf   
   14000d0c2:	add    BYTE PTR [rax+0x1],al
   14000d0c5:	add    BYTE PTR [rax],al
   14000d0c7:	add    al,ch
   14000d0c9:	sahf   
   14000d0ca:	add    BYTE PTR [rax+0x1],al
   14000d0cd:	add    BYTE PTR [rax],al
   14000d0cf:	add    BYTE PTR [rcx],al
	...
   14000d0f5:	add    BYTE PTR [rax],al
   14000d0f7:	add    BYTE PTR [rsi+0x1280033e],bl
   14000d0fd:	add    BYTE PTR [rax],al
   14000d0ff:	add    BYTE PTR [rax+0x1400095],bl
	...
   14000d10d:	add    BYTE PTR [rax],al
   14000d10f:	add    BYTE PTR [rsi],ch
   14000d111:	(bad)  
   14000d112:	push   r14
   14000d114:	gs js  0x14000d17a
   14000d117:	gs jo  0x14000d18e
   14000d11a:	imul   ebp,DWORD PTR [rdi+0x6e],0x98004040
   14000d121:	xchg   ebp,eax
   14000d122:	add    BYTE PTR [rax+0x1],al
	...
   14000d12d:	add    BYTE PTR [rax],al
   14000d12f:	add    BYTE PTR [rsi],ch
   14000d131:	(bad)  
   14000d132:	push   r14
   14000d134:	(bad)
   14000d139:	ins    BYTE PTR es:[rdi],dx
   14000d13a:	ins    BYTE PTR es:[rdi],dx
   14000d13b:	outs   dx,DWORD PTR ds:[rsi]
   14000d13c:	movsxd eax,DWORD PTR [rax+0x73]
   14000d13f:	je     0x14000d1a5
   14000d141:	rex
   14000d142:	add    BYTE PTR [rax],al
   14000d145:	add    BYTE PTR [rax],al
   14000d147:	add    BYTE PTR [rax+0x1400095],bl
	...
   14000d155:	add    BYTE PTR [rax],al
   14000d157:	add    BYTE PTR [rsi],ch
   14000d159:	(bad)  
   14000d15a:	push   r14
   14000d15c:	rex.XB
   14000d15d:	rex.B je 0x14000d1cc
   14000d160:	rex.RB js 0x14000d1c6
   14000d163:	gs jo  0x14000d1da
   14000d166:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14000d16d:	rex
   14000d16e:	add    BYTE PTR [rax+0x1400095],bl
	...
   14000d17d:	add    BYTE PTR [rax],al
   14000d17f:	add    BYTE PTR [rsi],ch
   14000d181:	rex.WXB add BYTE PTR [r8],al
	...

Disassembly of section .pdata:

000000014000e000 <.pdata>:
   14000e000:	add    BYTE PTR [rax],dl
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	lea    edx,[rax]
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	rex.W stos BYTE PTR es:[rdi],al
   14000e00a:	add    BYTE PTR [rax],al
   14000e00c:	nop
   14000e00d:	adc    BYTE PTR [rax],al
   14000e00f:	add    BYTE PTR [rcx-0x2ffffff0],ch
   14000e015:	mov    cl,0x0
   14000e017:	add    BYTE PTR [rax+0x4f000010],dh
   14000e01d:	adc    DWORD PTR [rax],eax
   14000e01f:	add    BYTE PTR [rax-0x56],al
   14000e022:	add    BYTE PTR [rax],al
   14000e024:	push   rax
   14000e025:	adc    DWORD PTR [rax],eax
   14000e027:	add    BYTE PTR [rcx+rdx*1-0x4e300000],bh
   14000e02e:	add    BYTE PTR [rax],al
   14000e030:	rcl    BYTE PTR [rcx],0x0
   14000e033:	add    BYTE PTR [rdx],bh
   14000e035:	adc    al,BYTE PTR [rax]
   14000e037:	add    al,dl
   14000e039:	mov    cl,0x0
   14000e03b:	add    BYTE PTR [rax-0x21ffffee],al
   14000e041:	adc    al,BYTE PTR [rax]
   14000e043:	add    BYTE PTR [rax-0x56],al
   14000e046:	add    BYTE PTR [rax],al
   14000e048:	adc    BYTE PTR [rbx],dl
   14000e04a:	add    BYTE PTR [rax],al
   14000e04c:	cmp    DWORD PTR [rbx],edx
   14000e04e:	add    BYTE PTR [rax],al
   14000e050:	stos   BYTE PTR es:[rdi],al
   14000e052:	add    BYTE PTR [rax],al
   14000e054:	rex adc eax,DWORD PTR [rax]
   14000e057:	add    BYTE PTR [rcx+0x13],bh
   14000e05a:	add    BYTE PTR [rax],al
   14000e05c:	push   rax
   14000e05d:	stos   BYTE PTR es:[rdi],al
   14000e05e:	add    BYTE PTR [rax],al
   14000e060:	adc    BYTE PTR [rbx],0x0
   14000e063:	add    dl,dh
   14000e065:	adc    eax,DWORD PTR [rax]
   14000e067:	add    BYTE PTR [rdx+rbp*4+0x0],bl
   14000e06b:	add    al,bh
   14000e06d:	adc    eax,DWORD PTR [rax]
   14000e06f:	add    dh,bl
   14000e071:	(bad)  
   14000e072:	add    BYTE PTR [rax],al
   14000e074:	ins    BYTE PTR es:[rdi],dx
   14000e075:	stos   BYTE PTR es:[rdi],al
   14000e076:	add    BYTE PTR [rax],al
   14000e078:	and    BYTE PTR [rax],bl
   14000e07a:	add    BYTE PTR [rax],al
   14000e07c:	xchg   edx,eax
   14000e07d:	sbb    BYTE PTR [rax],al
   14000e07f:	add    BYTE PTR [rax-0x56],dl
   14000e082:	add    BYTE PTR [rax],al
   14000e084:	movabs al,ds:0x90000019c4000018
   14000e08d:	stos   BYTE PTR es:[rdi],al
   14000e08e:	add    BYTE PTR [rax],al
   14000e090:	rcr    BYTE PTR [rcx],1
   14000e092:	add    BYTE PTR [rax],al
   14000e094:	jnp    0x14000e0b0
   14000e096:	add    BYTE PTR [rax],al
   14000e098:	lods   al,BYTE PTR ds:[rsi]
   14000e099:	stos   BYTE PTR es:[rdi],al
   14000e09a:	add    BYTE PTR [rax],al
   14000e09c:	nop
   14000e09d:	sbb    al,BYTE PTR [rax]
   14000e09f:	add    BYTE PTR [rax],al
   14000e0a1:	sbb    al,0x0
   14000e0a3:	add    al,al
   14000e0a5:	stos   BYTE PTR es:[rdi],al
   14000e0a6:	add    BYTE PTR [rax],al
   14000e0a8:	push   rax
   14000e0a9:	sbb    al,0x0
   14000e0ab:	add    bh,ah
   14000e0ad:	sbb    al,0x0
   14000e0af:	add    BYTE PTR [rax-0x55],cl
   14000e0b2:	add    BYTE PTR [rax],al
   14000e0b4:	adc    BYTE PTR [rip+0x1e090000],bl        # 0x15e09e0ba
   14000e0ba:	add    BYTE PTR [rax],al
   14000e0bc:	pop    rsp
   14000e0bd:	stos   DWORD PTR es:[rdi],eax
   14000e0be:	add    BYTE PTR [rax],al
   14000e0c0:	adc    BYTE PTR [rsi],bl
   14000e0c2:	add    BYTE PTR [rax],al
   14000e0c4:	and    DWORD PTR [rdi],ebx
   14000e0c6:	add    BYTE PTR [rax],al
   14000e0c8:	xchg   esp,eax
   14000e0c9:	stos   DWORD PTR es:[rdi],eax
   14000e0ca:	add    BYTE PTR [rax],al
   14000e0cc:	sub    BYTE PTR [rdi],bl
   14000e0ce:	add    BYTE PTR [rax],al
   14000e0d0:	and    BYTE PTR [r8],r8b
   14000e0d3:	add    BYTE PTR [rax],dh
   14000e0d5:	lods   al,BYTE PTR ds:[rsi]
   14000e0d6:	add    BYTE PTR [rax],al
   14000e0d8:	jo     0x14000e0fa
   14000e0da:	add    BYTE PTR [rax],al
   14000e0dc:	mov    eax,0x5c000020
   14000e0e1:	stos   BYTE PTR es:[rdi],al
   14000e0e2:	add    BYTE PTR [rax],al
   14000e0e4:	shl    BYTE PTR [rax],0x0
   14000e0e7:	add    BYTE PTR [rax],ch
   14000e0e9:	and    DWORD PTR [rax],eax
   14000e0eb:	add    BYTE PTR [rdx+rbp*4+0x0],bl
   14000e0ef:	add    BYTE PTR [rax+0x21],ah
   14000e0f2:	add    BYTE PTR [rax],al
   14000e0f4:	out    dx,al
   14000e0f5:	and    DWORD PTR [rax],eax
   14000e0f7:	add    al,dl
   14000e0f9:	lods   al,BYTE PTR ds:[rsi]
   14000e0fa:	add    BYTE PTR [rax],al
   14000e0fc:	add    BYTE PTR [rdx],ah
   14000e0fe:	add    BYTE PTR [rax],al
   14000e100:	mov    fs,WORD PTR [rdx]
   14000e102:	add    BYTE PTR [rax],al
   14000e104:	shr    BYTE PTR [rax+rax*1+0x22a000],1
   14000e10b:	add    BYTE PTR [rdx],ah
   14000e10d:	and    eax,DWORD PTR [rax]
   14000e10f:	add    BYTE PTR [rdx+rbp*4+0x0],bl
   14000e113:	add    BYTE PTR [rax],dh
   14000e115:	and    eax,DWORD PTR [rax]
   14000e117:	add    BYTE PTR [rcx+0x23],ah
   14000e11a:	add    BYTE PTR [rax],al
   14000e11c:	push   rax
   14000e11d:	stos   BYTE PTR es:[rdi],al
   14000e11e:	add    BYTE PTR [rax],al
   14000e120:	jo     0x14000e145
   14000e122:	add    BYTE PTR [rax],al
   14000e124:	movabs eax,ds:0xb00000aa50000023
   14000e12d:	and    eax,DWORD PTR [rax]
   14000e12f:	add    BYTE PTR [rax],al
   14000e131:	and    al,0x0
   14000e133:	add    al,dl
   14000e135:	lods   al,BYTE PTR ds:[rsi]
   14000e136:	add    BYTE PTR [rax],al
   14000e138:	adc    BYTE PTR [rax+rax*1],ah
   14000e13b:	add    BYTE PTR [rsi+0x24],bh
   14000e13e:	add    BYTE PTR [rax],al
   14000e140:	stos   QWORD PTR es:[rdi],rax
   14000e142:	add    BYTE PTR [rax],al
   14000e144:	nop
   14000e145:	and    al,0x0
   14000e147:	add    dh,bh
   14000e149:	and    al,0x0
   14000e14b:	add    BYTE PTR [rax-0x55],cl
   14000e14e:	add    BYTE PTR [rax],al
   14000e150:	add    al,0x25
   14000e152:	add    BYTE PTR [rax],al
   14000e154:	lea    esp,[rip+0xfffffffface40000]        # 0xece4e15a
   14000e15a:	add    BYTE PTR [rax],al
   14000e15c:	movabs al,ds:0xd000002624000025
   14000e165:	lods   al,BYTE PTR ds:[rsi]
   14000e166:	add    BYTE PTR [rax],al
   14000e168:	xor    BYTE PTR [rsi],ah
   14000e16a:	add    BYTE PTR [rax],al
   14000e16c:	ins    DWORD PTR es:[rdi],dx
   14000e16d:	add    BYTE PTR es:[rax],al
   14000e170:	push   rax
   14000e171:	stos   BYTE PTR es:[rdi],al
   14000e172:	add    BYTE PTR [rax],al
   14000e174:	je     0x14000e19c
   14000e176:	add    BYTE PTR [rax],al
   14000e178:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e179:	add    BYTE PTR es:[rax],al
   14000e17c:	push   rax
   14000e17d:	stos   BYTE PTR es:[rdi],al
   14000e17e:	add    BYTE PTR [rax],al
   14000e180:	lods   al,BYTE PTR ds:[rsi]
   14000e181:	add    BYTE PTR es:[rax],al
   14000e184:	fldenv [rdi]
   14000e186:	add    BYTE PTR [rax],al
   14000e188:	push   rax
   14000e189:	lods   eax,DWORD PTR ds:[rsi]
   14000e18a:	add    BYTE PTR [rax],al
   14000e18c:	loopne 0x14000e1b5
   14000e18e:	add    BYTE PTR [rax],al
   14000e190:	add    ch,BYTE PTR [rax]
   14000e192:	add    BYTE PTR [rax],al
   14000e194:	stos   BYTE PTR es:[rdi],al
   14000e196:	add    BYTE PTR [rax],al
   14000e198:	or     BYTE PTR [rax],ch
   14000e19a:	add    BYTE PTR [rax],al
   14000e19c:	scas   al,BYTE PTR es:[rdi]
   14000e19d:	sub    BYTE PTR [rax],al
   14000e19f:	add    BYTE PTR [rbp+rbp*4+0x0],ah
   14000e1a3:	add    al,al
   14000e1a5:	sub    BYTE PTR [rax],al
   14000e1a7:	add    BYTE PTR [rax],bh
   14000e1a9:	sub    DWORD PTR [rax],eax
   14000e1ab:	add    al,bl
   14000e1ad:	lods   eax,DWORD PTR ds:[rsi]
   14000e1ae:	add    BYTE PTR [rax],al
   14000e1b0:	pop    rax
   14000e1b1:	sub    DWORD PTR [rax],eax
   14000e1b3:	add    BYTE PTR [rdi-0x17ffffd5],dh
   14000e1b9:	lods   eax,DWORD PTR ds:[rsi]
   14000e1ba:	add    BYTE PTR [rax],al
   14000e1bc:	shr    BYTE PTR [rbx],0x0
   14000e1bf:	add    BYTE PTR [rsi-0x5fffffd2],al
   14000e1c5:	scas   al,BYTE PTR es:[rdi]
   14000e1c6:	add    BYTE PTR [rax],al
   14000e1c8:	mov    WORD PTR [rsi],gs
   14000e1ca:	add    BYTE PTR [rax],al
   14000e1cc:	es (bad) 
   14000e1ce:	add    BYTE PTR [rax],al
   14000e1d0:	cmp    BYTE PTR [rdi+0x2f2c0000],ch
   14000e1d6:	add    BYTE PTR [rax],al
   14000e1d8:	xor    dh,BYTE PTR [rcx]
   14000e1da:	add    BYTE PTR [rax],al
   14000e1dc:	scas   rax,QWORD PTR es:[rdi]
   14000e1de:	add    BYTE PTR [rax],al
   14000e1e0:	cmp    BYTE PTR [rcx],dh
   14000e1e2:	add    BYTE PTR [rax],al
   14000e1e4:	push   rdi
   14000e1e5:	xor    al,BYTE PTR [rax]
   14000e1e7:	add    BYTE PTR [rdx+rbp*4+0x0],bl
   14000e1eb:	add    BYTE PTR [rax+0x32],ah
   14000e1ee:	add    BYTE PTR [rax],al
   14000e1f0:	(bad)  
   14000e1f1:	(bad)  
   14000e1f2:	add    BYTE PTR [rax],al
   14000e1f4:	push   0xffffffffdc0000af
   14000e1f9:	(bad)  
   14000e1fa:	add    BYTE PTR [rax],al
   14000e1fc:	jl     0x14000e237
   14000e1fe:	add    BYTE PTR [rax],al
   14000e200:	mov    WORD PTR [rdi+0x39840000],gs
   14000e206:	add    BYTE PTR [rax],al
   14000e208:	pop    rax
   14000e209:	cmp    eax,DWORD PTR [rax]
   14000e20b:	add    BYTE PTR [rax+0x6c0000af],ch
   14000e211:	cmp    eax,DWORD PTR [rax]
   14000e213:	add    BYTE PTR [rbx+rdi*1-0x50480000],cl
   14000e21a:	add    BYTE PTR [rax],al
   14000e21c:	xchg   esp,eax
   14000e21d:	cmp    eax,DWORD PTR [rax]
   14000e21f:	add    BYTE PTR [rsi+0x3c],al
   14000e222:	add    BYTE PTR [rax],al
   14000e224:	stos   QWORD PTR es:[rdi],rax
   14000e226:	add    BYTE PTR [rax],al
   14000e228:	(bad)  
   14000e229:	cmp    al,0x0
   14000e22b:	add    dh,bl
   14000e22d:	cmp    al,0x0
   14000e22f:	add    al,bl
   14000e231:	scas   eax,DWORD PTR es:[rdi]
   14000e232:	add    BYTE PTR [rax],al
   14000e234:	lock cmp al,0x0
   14000e237:	add    BYTE PTR [rsi],ch
   14000e239:	cmp    eax,0xaa500000
   14000e23e:	add    BYTE PTR [rax],al
   14000e240:	rex.WR cmp rax,0x3ff60000
   14000e246:	add    BYTE PTR [rax],al
   14000e248:	call   0x16400e2fc
   14000e24d:	add    BYTE PTR [rax],al
   14000e250:	(bad)  
   14000e251:	add    BYTE PTR [r8],al
   14000e254:	or     BYTE PTR [rax+0x41a00000],dh
   14000e25a:	add    BYTE PTR [rax],al
   14000e25c:	iret   
   14000e25d:	add    BYTE PTR [r8],al
   14000e260:	push   rax
   14000e261:	stos   BYTE PTR es:[rdi],al
   14000e262:	add    BYTE PTR [rax],al
   14000e264:	fadd   DWORD PTR [rcx+0x0]
   14000e267:	add    BYTE PTR [rcx],dl
   14000e269:	rex.X add BYTE PTR [rax],al
   14000e26c:	stos   BYTE PTR es:[rdi],al
   14000e26e:	add    BYTE PTR [rax],al
   14000e270:	sbb    BYTE PTR [rdx+0x0],al
   14000e273:	add    BYTE PTR [rdx+rax*2+0x0],ah
   14000e277:	add    BYTE PTR [rax+rsi*4],ah
   14000e27a:	add    BYTE PTR [rax],al
   14000e27c:	ins    BYTE PTR es:[rdi],dx
   14000e27d:	rex.X add BYTE PTR [rax],al
   14000e280:	or     al,0x43
   14000e282:	add    BYTE PTR [rax],al
   14000e284:	pop    rsp
   14000e285:	stos   BYTE PTR es:[rdi],al
   14000e286:	add    BYTE PTR [rax],al
   14000e288:	xor    BYTE PTR [rbx+0x0],al
   14000e28b:	add    BYTE PTR [rax+0x58000043],bl
   14000e291:	mov    al,0x0
   14000e293:	add    BYTE PTR [rax-0x44ffffbd],ah
   14000e299:	rex.XB add BYTE PTR [r8],al
   14000e29c:	stos   BYTE PTR es:[rdi],al
   14000e29e:	add    BYTE PTR [rax],al
   14000e2a0:	(bad)
   14000e2a4:	push   rsi
   14000e2a5:	rex.RX add BYTE PTR [rax],r8b
   14000e2a8:	movabs al,ds:0x9d000046600000b0
   14000e2b1:	rex.RX add BYTE PTR [rax],r8b
   14000e2b4:	movabs al,ds:0xcb000046b40000b1
   14000e2bd:	rex.RX add BYTE PTR [rax],r8b
   14000e2c0:	shl    BYTE PTR [rcx+0x46d40000],1
   14000e2c6:	add    BYTE PTR [rax],al
   14000e2c8:	inc    DWORD PTR [rsi+0x0]
   14000e2cb:	add    BYTE PTR [rax-0x56],al
   14000e2ce:	add    BYTE PTR [rax],al
   14000e2d0:	or     BYTE PTR [rdi+0x0],al
   14000e2d3:	add    BYTE PTR [rsi],ah
   14000e2d5:	rex.RXB add BYTE PTR [r8],r8b
   14000e2d8:	shl    BYTE PTR [rcx+0x47580000],1
   14000e2de:	add    BYTE PTR [rax],al
   14000e2e0:	jae    0x14000e32a
   14000e2e2:	add    BYTE PTR [rax],al
   14000e2e4:	fdiv   DWORD PTR [rcx+0x487c0000]
   14000e2ea:	add    BYTE PTR [rax],al
   14000e2ec:	(bad)  
   14000e2ed:	rex.WXB add BYTE PTR [r8],al
   14000e2f0:	lock mov cl,0x0
   14000e2f3:	add    BYTE PTR [rax],dh
   14000e2f5:	rex.WXB add BYTE PTR [r8],al
   14000e2f8:	sub    BYTE PTR [rax+rax*1+0x0],cl
   14000e2fc:	push   rax
   14000e2fd:	mov    dl,0x0
   14000e2ff:	add    BYTE PTR [rax],dh
   14000e301:	rex.WR add BYTE PTR [rax],r8b
   14000e304:	pop    rdx
   14000e305:	rex.WR add BYTE PTR [rax],r8b
   14000e308:	stos   BYTE PTR es:[rdi],al
   14000e30a:	add    BYTE PTR [rax],al
   14000e30c:	(bad)  
   14000e30d:	rex.WR add BYTE PTR [rax],r8b
   14000e310:	outs   dx,BYTE PTR ds:[rsi]
   14000e311:	push   rcx
   14000e312:	add    BYTE PTR [rax],al
   14000e314:	push   0xffffffff800000b2
   14000e319:	push   rcx
   14000e31a:	add    BYTE PTR [rax],al
   14000e31c:	test   al,0x51
   14000e31e:	add    BYTE PTR [rax],al
   14000e320:	shl    BYTE PTR [rcx+0x51b00000],1
   14000e326:	add    BYTE PTR [rax],al
   14000e328:	push   rbx
   14000e329:	push   rdx
   14000e32a:	add    BYTE PTR [rax],al
   14000e32c:	jo     0x14000e2e1
   14000e32e:	add    BYTE PTR [rax],al
   14000e330:	pop    rsp
   14000e331:	push   rdx
   14000e332:	add    BYTE PTR [rax],al
   14000e334:	xchg   ebx,eax
   14000e335:	push   rbx
   14000e336:	add    BYTE PTR [rax],al
   14000e338:	mov    BYTE PTR [rbx+0x539c0000],dh
   14000e33e:	add    BYTE PTR [rax],al
   14000e340:	mov    ebp,0x40000053
   14000e345:	stos   BYTE PTR es:[rdi],al
   14000e346:	add    BYTE PTR [rax],al
   14000e348:	(bad)  
   14000e349:	push   rbx
   14000e34a:	add    BYTE PTR [rax],al
   14000e34c:	mov    ss,WORD PTR [rax+rax*1+0x0]
   14000e350:	pop    rsp
   14000e351:	stos   BYTE PTR es:[rdi],al
   14000e352:	add    BYTE PTR [rax],al
   14000e354:	test   al,0x54
   14000e356:	add    BYTE PTR [rax],al
   14000e358:	xor    dl,BYTE PTR [rsi+0x0]
   14000e35b:	add    BYTE PTR [rax],cl
   14000e35d:	mov    al,0x0
   14000e35f:	add    BYTE PTR [rax],bh
   14000e361:	push   rsi
   14000e362:	add    BYTE PTR [rax],al
   14000e364:	divps  xmm0,XMMWORD PTR [rax]
   14000e367:	add    BYTE PTR [rbx+rsi*4+0x5e180000],ah
   14000e36e:	add    BYTE PTR [rax],al
   14000e370:	rcr    BYTE PTR [rdi+0x0],1
   14000e373:	add    al,bh
   14000e375:	mov    bl,0x0
   14000e377:	add    al,bl
   14000e379:	pop    rdi
   14000e37a:	add    BYTE PTR [rax],al
   14000e37c:	mov    ecx,0x1c000061
   14000e381:	mov    ah,0x0
   14000e383:	add    al,al
   14000e385:	(bad)  
   14000e386:	add    BYTE PTR [rax],al
   14000e388:	pop    rcx
   14000e389:	add    BYTE PTR fs:[rax],al
   14000e38c:	call   0x1ac00e440
   14000e391:	add    BYTE PTR fs:[rax],al
   14000e394:	(bad)  
   14000e395:	add    BYTE PTR fs:[rax],al
   14000e398:	lock mov ah,0x0
   14000e39b:	add    al,ah
   14000e39d:	add    BYTE PTR fs:[rax],al
   14000e3a0:	(bad)  
   14000e3a1:	add    BYTE PTR gs:[rax],al
   14000e3a4:	adc    BYTE PTR [rbp+0x65dc0000],dh
   14000e3aa:	add    BYTE PTR [rax],al
   14000e3ac:	rex.WRXB
   14000e3ad:	data16 add BYTE PTR [rax],al
   14000e3b0:	sub    BYTE PTR [rbp+0x66580000],dh
   14000e3b6:	add    BYTE PTR [rax],al
   14000e3b8:	pushf  
   14000e3b9:	add    BYTE PTR [eax],al
   14000e3bc:	xor    al,0xb5
   14000e3be:	add    BYTE PTR [rax],al
   14000e3c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e3c1:	add    BYTE PTR [eax],al
   14000e3c4:	sbb    ebp,DWORD PTR [rax+0x0]
   14000e3c7:	add    BYTE PTR [rax-0x4b],cl
   14000e3ca:	add    BYTE PTR [rax],al
   14000e3cc:	and    al,0x68
   14000e3ce:	add    BYTE PTR [rax],al
   14000e3d0:	imul   eax,DWORD PTR fs:[rax],0xb55800
   14000e3d7:	add    BYTE PTR [rcx+rbp*2+0x0],ch
   14000e3db:	add    dh,bl
   14000e3dd:	outs   dx,BYTE PTR ds:[rsi]
   14000e3de:	add    BYTE PTR [rax],al
   14000e3e0:	jl     0x14000e397
   14000e3e2:	add    BYTE PTR [rax],al
   14000e3e4:	lock outs dx,BYTE PTR ds:[rsi]
   14000e3e6:	add    BYTE PTR [rax],al
   14000e3e8:	gs jo  0x14000e3eb
   14000e3eb:	add    BYTE PTR [rbp+rsi*4+0x706c0000],dl
   14000e3f2:	add    BYTE PTR [rax],al
   14000e3f4:	rex.X jno 0x14000e3f7
   14000e3f7:	add    BYTE PTR [rbp+rsi*4+0x71480000],ch
   14000e3fe:	add    BYTE PTR [rax],al
   14000e400:	xor    BYTE PTR [rbx+0x0],0x0
   14000e404:	mov    esp,0x880000b5
   14000e409:	jae    0x14000e40b
   14000e40b:	add    BYTE PTR [rbx],bl
   14000e40d:	jne    0x14000e40f
   14000e40f:	add    al,ah
   14000e411:	mov    ch,0x0
   14000e413:	add    BYTE PTR [rsi*2+0x75450000],ah
   14000e41a:	add    BYTE PTR [rax],al
   14000e41c:	stos   BYTE PTR es:[rdi],al
   14000e41e:	add    BYTE PTR [rax],al
   14000e420:	rex.WR jne 0x14000e423
   14000e423:	add    BYTE PTR [rdx+0x75],bh
   14000e426:	add    BYTE PTR [rax],al
   14000e428:	stos   BYTE PTR es:[rdi],al
   14000e42a:	add    BYTE PTR [rax],al
   14000e42c:	cwde   
   14000e42d:	jne    0x14000e42f
   14000e42f:	add    BYTE PTR [rcx],dl
   14000e431:	jbe    0x14000e433
   14000e433:	add    BYTE PTR [rax],al
   14000e435:	mov    dh,0x0
   14000e437:	add    BYTE PTR [rax],dh
   14000e439:	jbe    0x14000e43b
   14000e43b:	add    BYTE PTR [rdx+0x76],ch
   14000e43e:	add    BYTE PTR [rax],al
   14000e440:	push   rax
   14000e441:	stos   BYTE PTR es:[rdi],al
   14000e442:	add    BYTE PTR [rax],al
   14000e444:	jo     0x14000e4bc
   14000e446:	add    BYTE PTR [rax],al
   14000e448:	xchg   ebx,eax
   14000e449:	jbe    0x14000e44b
   14000e44b:	add    BYTE PTR [rax],cl
   14000e44d:	mov    dh,0x0
   14000e44f:	add    BYTE PTR [rsi+rsi*2+0x77150000],bl
   14000e456:	add    BYTE PTR [rax],al
   14000e458:	add    BYTE PTR [rsi+0x77200000],dh
   14000e45e:	add    BYTE PTR [rax],al
   14000e460:	out    dx,eax
   14000e461:	ja     0x14000e463
   14000e463:	add    al,dl
   14000e465:	mov    cl,0x0
   14000e467:	add    BYTE PTR [rax],al
   14000e469:	js     0x14000e46b
   14000e46b:	add    BYTE PTR [rcx+0x78],cl
   14000e46e:	add    BYTE PTR [rax],al
   14000e470:	pushf  
   14000e471:	mov    dh,0x0
   14000e473:	add    BYTE PTR [rax+0x78],dl
   14000e476:	add    BYTE PTR [rax],al
   14000e478:	sar    DWORD PTR [rdx+0x0],0x0
   14000e47c:	adc    BYTE PTR [rsi+0x7ad00000],dh
   14000e482:	add    BYTE PTR [rax],al
   14000e484:	loop   0x14000e500
   14000e486:	add    BYTE PTR [rax],al
   14000e488:	shl    BYTE PTR [rcx+0x7b000000],1
   14000e48e:	add    BYTE PTR [rax],al
   14000e490:	(bad)  
   14000e491:	jnp    0x14000e493
   14000e493:	add    BYTE PTR [rax-0x4a],cl
   14000e496:	add    BYTE PTR [rax],al
   14000e498:	and    al,0x7b
   14000e49a:	add    BYTE PTR [rax],al
   14000e49c:	mov    ?,WORD PTR [rbx+0x0]
   14000e49f:	add    BYTE PTR [rsi+rsi*4+0x0],cl
   14000e4a3:	add    BYTE PTR [rbx+rdi*2+0x7be80000],dl
   14000e4aa:	add    BYTE PTR [rax],al
   14000e4ac:	je     0x14000e464
   14000e4ae:	add    BYTE PTR [rax],al
   14000e4b0:	lock jnp 0x14000e4b3
   14000e4b3:	add    BYTE PTR [rax],ah
   14000e4b5:	jl     0x14000e4b7
   14000e4b7:	add    BYTE PTR [rax-0x56],dl
   14000e4ba:	add    BYTE PTR [rax],al
   14000e4bc:	xor    BYTE PTR [rax+rax*1+0x0],bh
   14000e4c0:	cmp    DWORD PTR [rax+rax*1+0x0],0xb69c
   14000e4c8:	mov    BYTE PTR [rax+rax*1+0x0],bh
   14000e4cc:	mov    esp,0x4000007c
   14000e4d1:	stos   BYTE PTR es:[rdi],al
   14000e4d2:	add    BYTE PTR [rax],al
   14000e4d4:	sar    BYTE PTR [rax+rax*1+0x0],1
   14000e4d8:	rex.B jle 0x14000e4db
   14000e4db:	add    BYTE PTR [rsi+rsi*4+0x7e480000],ch
   14000e4e2:	add    BYTE PTR [rax],al
   14000e4e4:	(bad)  
   14000e4e5:	jg     0x14000e4e7
   14000e4e7:	add    BYTE PTR [rsi+rsi*4+0x7f480000],ah
   14000e4ee:	add    BYTE PTR [rax],al
   14000e4f0:	out    0x7f,al
   14000e4f2:	add    BYTE PTR [rax],al
   14000e4f4:	mov    ah,0xb6
   14000e4f6:	add    BYTE PTR [rax],al
   14000e4f8:	in     al,dx
   14000e4f9:	jg     0x14000e4fb
   14000e4fb:	add    BYTE PTR [rbx],al
   14000e4fd:	add    BYTE PTR [rax],0x0
   14000e500:	shl    BYTE PTR [rcx-0x7ff40000],1
   14000e506:	add    BYTE PTR [rax],al
   14000e508:	jl     0x14000e48a
   14000e50a:	add    BYTE PTR [rax],al
   14000e50c:	fdiv   DWORD PTR [rsi-0x7f000000]
   14000e512:	add    BYTE PTR [rax],al
   14000e514:	cmp    DWORD PTR [rcx-0x4e300000],eax
   14000e51a:	add    BYTE PTR [rax],al
   14000e51c:	rex add DWORD PTR [rax],0x815800
   14000e523:	add    al,dl
   14000e525:	mov    cl,0x0
   14000e527:	add    BYTE PTR [rcx+rax*4+0x0],ch
   14000e52b:	add    al,al
   14000e52d:	add    DWORD PTR [rax],0xb70400
   14000e533:	add    al,cl
   14000e535:	add    DWORD PTR [rax],0x820d00
   14000e53b:	add    BYTE PTR [rax-0x56],al
   14000e53e:	add    BYTE PTR [rax],al
   14000e540:	jo     0x14000e4c4
   14000e542:	add    BYTE PTR [rax],al
   14000e544:	mov    ebp,0x24000082
   14000e549:	mov    bh,0x0
   14000e54b:	add    BYTE PTR [rbx+rax*4],al
   14000e54e:	add    BYTE PTR [rax],al
   14000e550:	(bad)  
   14000e551:	add    DWORD PTR [rax],0x0
   14000e554:	rex.W mov dil,0x0
   14000e557:	add    BYTE PTR [rsp+rax*4],cl
   14000e55a:	add    BYTE PTR [rax],al
   14000e55c:	iret   
   14000e55d:	test   BYTE PTR [rax],al
   14000e55f:	add    BYTE PTR [rdi+rsi*4+0x0],dl
   14000e563:	add    BYTE PTR [rax],cl
   14000e565:	test   DWORD PTR [rax],eax
   14000e567:	add    BYTE PTR [rip+0xffffffffd0000085],ah        # 0x11000e5f2
   14000e56d:	mov    cl,0x0
   14000e56f:	add    BYTE PTR [rax*4-0x7a710000],ch
   14000e576:	add    BYTE PTR [rax],al
   14000e578:	stos   BYTE PTR es:[rdi],al
   14000e57a:	add    BYTE PTR [rax],al
   14000e57c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e57d:	test   DWORD PTR [rax],eax
   14000e57f:	add    BYTE PTR [rbx],dh
   14000e581:	xchg   BYTE PTR [rax],al
   14000e583:	add    al,bl
   14000e585:	mov    cl,0x0
   14000e587:	add    BYTE PTR [rax-0x7a],ah
   14000e58a:	add    BYTE PTR [rax],al
   14000e58c:	(bad)  
   14000e58d:	xchg   BYTE PTR [rax],al
   14000e58f:	add    BYTE PTR [rax-0x49],ch
   14000e592:	add    BYTE PTR [rax],al
   14000e594:	add    BYTE PTR [rsi-0x79330000],0x0
   14000e59b:	add    BYTE PTR [rax-0x49],dh
   14000e59e:	add    BYTE PTR [rax],al
   14000e5a0:	(bad)  
   14000e5a1:	xchg   BYTE PTR [rax],al
   14000e5a3:	add    cl,dh
   14000e5a5:	xchg   BYTE PTR [rax],al
   14000e5a7:	add    BYTE PTR [rax],bh
   14000e5a9:	stos   DWORD PTR es:[rdi],eax
   14000e5aa:	add    BYTE PTR [rax],al
   14000e5ac:	test   DWORD PTR [rsi-0x78eb0000],0xab8c0000
   14000e5b6:	add    BYTE PTR [rax],al
   14000e5b8:	(bad)  
   14000e5b9:	xchg   DWORD PTR [rax],eax
   14000e5bb:	add    BYTE PTR [rdx-0x79],al
   14000e5be:	add    BYTE PTR [rax],al
   14000e5c0:	and    BYTE PTR [rax+rax*1+0x875400],ch
   14000e5c7:	add    BYTE PTR [rdi-0x79],ch
   14000e5ca:	add    BYTE PTR [rax],al
   14000e5cc:	shr    BYTE PTR [rax+rax*1+0x877500],0x0
   14000e5d4:	nop
   14000e5d5:	xchg   DWORD PTR [rax],eax
   14000e5d7:	add    BYTE PTR [rax-0x53],al
   14000e5da:	add    BYTE PTR [rax],al
   14000e5dc:	xchg   esi,eax
   14000e5dd:	xchg   DWORD PTR [rax],eax
   14000e5df:	add    BYTE PTR [rcx-0x37ffff79],dh
   14000e5e5:	lods   eax,DWORD PTR ds:[rsi]
   14000e5e6:	add    BYTE PTR [rax],al
   14000e5e8:	ret    
   14000e5e9:	xchg   DWORD PTR [rax],eax
   14000e5eb:	add    dh,bl
   14000e5ed:	xchg   DWORD PTR [rax],eax
   14000e5ef:	add    BYTE PTR [rax+0x260000ae],dl
   14000e5f5:	mov    BYTE PTR [rax],al
   14000e5f7:	add    BYTE PTR [rsi-0x78],al
   14000e5fa:	add    BYTE PTR [rax],al
   14000e5fc:	mov    WORD PTR [rbx-0x77800000],gs
   14000e602:	add    BYTE PTR [rax],al
   14000e604:	fwait
   14000e605:	mov    BYTE PTR [rax],al
   14000e607:	add    BYTE PTR [rax-0x58ffff4f],dl
   14000e60d:	mov    BYTE PTR [rax],al
   14000e60f:	add    dl,al
   14000e611:	mov    BYTE PTR [rax],al
   14000e613:	add    BYTE PTR [rax+0x100000b1],dl
   14000e619:	mov    DWORD PTR [rax],eax
   14000e61b:	add    BYTE PTR [rbx],ch
   14000e61d:	mov    DWORD PTR [rax],eax
   14000e61f:	add    BYTE PTR [rax-0x4d],ah
   14000e622:	add    BYTE PTR [rax],al
   14000e624:	(bad)  
   14000e625:	mov    DWORD PTR [rax],eax
   14000e627:	add    BYTE PTR [rdx-0x77],dl
   14000e62a:	add    BYTE PTR [rax],al
   14000e62c:	(bad)  
   14000e62d:	mov    bl,0x0
   14000e62f:	add    BYTE PTR [rsi-0x56ffff77],cl
   14000e635:	mov    DWORD PTR [rax],eax
   14000e637:	add    al,ah
   14000e639:	mov    ah,0x0
   14000e63b:	add    BYTE PTR [rdi-0x32ffff77],ch
   14000e641:	mov    DWORD PTR [rax],eax
   14000e643:	add    BYTE PTR [rbx+rbp*4-0x762d0000],cl
   14000e64a:	add    BYTE PTR [rax],al
   14000e64c:	dec    DWORD PTR [rcx-0x54740000]
   14000e652:	add    BYTE PTR [rax],al
   14000e654:	add    eax,0x4700008a
   14000e659:	mov    al,BYTE PTR [rax]
   14000e65b:	add    BYTE PTR [rbx+rbp*4-0x75b30000],cl
   14000e662:	add    BYTE PTR [rax],al
   14000e664:	push   0xffffffff8c00008a
   14000e669:	stos   DWORD PTR es:[rdi],eax
   14000e66a:	add    BYTE PTR [rax],al
   14000e66c:	outs   dx,BYTE PTR ds:[rsi]
   14000e66d:	mov    al,BYTE PTR [rax]
   14000e66f:	add    BYTE PTR [rdx-0x73ffff76],bl
   14000e675:	stos   DWORD PTR es:[rdi],eax
   14000e676:	add    BYTE PTR [rax],al
   14000e678:	movabs al,ds:0x8c00008ac000008a
   14000e681:	stos   DWORD PTR es:[rdi],eax
   14000e682:	add    BYTE PTR [rax],al
   14000e684:	lock mov al,BYTE PTR [rax]
   14000e687:	add    BYTE PTR [rsi],dl
   14000e689:	mov    eax,DWORD PTR [rax]
   14000e68b:	add    al,dl
   14000e68d:	mov    cl,0x0
   14000e68f:	add    BYTE PTR [rax],ah
   14000e691:	mov    eax,DWORD PTR [rax]
   14000e693:	add    BYTE PTR [rsi-0x75],bl
   14000e696:	add    BYTE PTR [rax],al
   14000e698:	shl    BYTE PTR [rcx-0x74900000],1
   14000e69e:	add    BYTE PTR [rax],al
   14000e6a0:	push   rcx
   14000e6a1:	mov    WORD PTR [rax],es
   14000e6a3:	add    BYTE PTR [rdx+rbp*4+0x0],bl
   14000e6a7:	add    BYTE PTR [rax-0x74],ah
   14000e6aa:	add    BYTE PTR [rax],al
   14000e6ac:	repz mov WORD PTR [rax],es
   14000e6af:	add    BYTE PTR [rax-0x55],cl
	...

Disassembly of section .rsrc:

000000014000f000 <.rsrc>:
	...
   14000f00c:	add    eax,DWORD PTR [rax]
   14000f00e:	add    al,BYTE PTR [rax]
   14000f010:	retf   0x1
   14000f013:	cmp    BYTE PTR [rax],0x0
   14000f016:	add    BYTE PTR [rax-0x7ffffe58],al
   14000f01c:	push   rax
   14000f01d:	add    BYTE PTR [rax],al
   14000f01f:	cmp    BYTE PTR [rdx+0x70800001],0x0
   14000f026:	add    BYTE PTR [rax+0x10],al
   14000f02c:	mov    BYTE PTR [rax],al
   14000f02e:	add    BYTE PTR [rax+0x18],al
   14000f034:	movabs al,ds:0x800000
	...
   14000f045:	add    BYTE PTR [rcx],al
   14000f047:	add    BYTE PTR [rcx],al
   14000f049:	add    BYTE PTR [rax],al
   14000f04b:	add    BYTE PTR [rax+0x800000],bh
	...
   14000f05d:	add    BYTE PTR [rdx],al
   14000f05f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000f063:	add    al,dl
   14000f065:	add    BYTE PTR [rax],al
   14000f067:	and    BYTE PTR [rbp+0x0],0x0
   14000f06b:	add    al,ch
   14000f06d:	add    BYTE PTR [rax],al
   14000f06f:	add    BYTE PTR [rax],0x0
	...
   14000f07e:	add    DWORD PTR [rax],eax
   14000f080:	add    DWORD PTR [rax],eax
   14000f082:	add    BYTE PTR [rax],al
   14000f084:	add    BYTE PTR [rcx],al
   14000f086:	add    BYTE PTR [rax+0x0],al
	...
   14000f094:	add    BYTE PTR [rax],al
   14000f096:	add    DWORD PTR [rax],eax
   14000f098:	add    DWORD PTR [rax],eax
   14000f09a:	add    BYTE PTR [rax],al
   14000f09c:	sbb    BYTE PTR [rcx],al
   14000f09e:	add    BYTE PTR [rax+0x0],al
	...
   14000f0ac:	add    BYTE PTR [rax],al
   14000f0ae:	add    DWORD PTR [rax],eax
   14000f0b0:	add    DWORD PTR [rax],eax
   14000f0b2:	add    BYTE PTR [rax],al
   14000f0b4:	xor    BYTE PTR [rcx],al
   14000f0b6:	add    BYTE PTR [rax+0x0],al
	...
   14000f0c4:	add    BYTE PTR [rax],al
   14000f0c6:	add    DWORD PTR [rax],eax
   14000f0c8:	or     DWORD PTR [rax+rax*1],eax
   14000f0cb:	add    BYTE PTR [rax+0x1],cl
	...
   14000f0de:	add    DWORD PTR [rax],eax
   14000f0e0:	or     DWORD PTR [rax+rax*1],eax
   14000f0e3:	add    BYTE PTR [rax+0x1],bl
	...
   14000f0f6:	add    DWORD PTR [rax],eax
   14000f0f8:	or     DWORD PTR [rax+rax*1],eax
   14000f0fb:	add    BYTE PTR [rax+0x1],ch
	...
   14000f10e:	add    DWORD PTR [rax],eax
   14000f110:	or     DWORD PTR [rax+rax*1],eax
   14000f113:	add    BYTE PTR [rax+0x1],bh
	...
   14000f126:	add    DWORD PTR [rax],eax
   14000f128:	or     DWORD PTR [rax+rax*1],eax
   14000f12b:	add    BYTE PTR [rax+0x1],cl
	...
   14000f13d:	add    BYTE PTR [rcx],al
   14000f13f:	add    BYTE PTR [rcx],cl
   14000f141:	add    al,0x0
   14000f143:	add    BYTE PTR [rax+0x8000001],bl
   14000f149:	add    eax,DWORD PTR [rcx]
   14000f14b:	add    al,ch
	...
   14000f155:	add    BYTE PTR [rax],al
   14000f157:	add    BYTE PTR [rax],ch
   14000f159:	clc    
   14000f15a:	add    BYTE PTR [rax],al
   14000f15c:	ins    DWORD PTR es:[rdi],dx
   14000f15d:	add    DWORD PTR [rax],eax
	...
   14000f167:	add    BYTE PTR [rax-0x60ffff07],bl
   14000f16d:	add    al,BYTE PTR [rax]
	...
   14000f177:	add    BYTE PTR [rax],bh
   14000f179:	cld    
   14000f17a:	add    BYTE PTR [rax],al
   14000f17c:	rol    BYTE PTR [rsi],1
	...
   14000f186:	add    BYTE PTR [rax],al
   14000f188:	nop
   14000f189:	hlt    
   14000f18a:	add    BYTE PTR [rax],al
   14000f18c:	cwde   
   14000f18d:	add    eax,DWORD PTR [rax]
	...
   14000f197:	add    al,ah
   14000f199:	icebp  
   14000f19a:	add    BYTE PTR [rax],al
   14000f19c:	lods   al,BYTE PTR ds:[rsi]
   14000f19d:	add    al,BYTE PTR [rax]
	...
   14000f1a7:	add    BYTE PTR [rax],cl
   14000f1a9:	add    BYTE PTR [rdx+0x0],dl
   14000f1ac:	add    BYTE PTR [r15+0x0],r8b
   14000f1b0:	rex.WB add BYTE PTR [r11+0x0],dl
   14000f1b4:	push   rsp
   14000f1b5:	add    BYTE PTR [rdx+0x0],dl
   14000f1b8:	pop    rcx
   14000f1b9:	add    BYTE PTR [rdi],al
   14000f1bb:	add    BYTE PTR [rax+rax*1+0x59],dl
   14000f1bf:	add    BYTE PTR [rax+0x0],dl
   14000f1c2:	add    BYTE PTR [r8+rax*1+0x49],r9b
   14000f1c7:	add    BYTE PTR [rdx+0x0],al
   14000f1ca:	add    eax,DWORD PTR [rax]
   14000f1cc:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000f1d0:	rex.WB add BYTE PTR [r8],al
	...
   14000f1df:	add    BYTE PTR [rdi+rdi*1],bh
   14000f1e2:	js     0x14000f251
   14000f1e4:	ins    BYTE PTR es:[rdi],dx
   14000f1e5:	and    BYTE PTR [rsi+0x65],dh
   14000f1e8:	jb     0x14000f25d
   14000f1ea:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f1f1:	xor    BYTE PTR [rdx],ah
   14000f1f3:	and    BYTE PTR [rbp+0x6e],ah
   14000f1f6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000f1f9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000f200:	rex.RX sub eax,0x73202238
   14000f206:	je     0x14000f269
   14000f208:	outs   dx,BYTE PTR ds:[rsi]
   14000f209:	fs (bad) 
   14000f20b:	ins    BYTE PTR es:[rdi],dx
   14000f20c:	outs   dx,DWORD PTR ds:[rsi]
   14000f20d:	outs   dx,BYTE PTR ds:[rsi]
   14000f20e:	gs cmp eax,0x73657922
   14000f214:	and    bh,BYTE PTR [rdi]
   14000f216:	ds or  eax,0x2d213c0a
   14000f21c:	sub    eax,0x706f4320
   14000f221:	jns    0x14000f295
   14000f223:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000f22a:	sub    DWORD PTR [rax],esp
   14000f22c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000f234:	je     0x14000f256
   14000f236:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f238:	jb     0x14000f2aa
   14000f23a:	outs   dx,DWORD PTR ds:[rsi]
   14000f23b:	jb     0x14000f29e
   14000f23d:	je     0x14000f2a8
   14000f23f:	outs   dx,DWORD PTR ds:[rsi]
   14000f240:	outs   dx,BYTE PTR ds:[rsi]
   14000f241:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e3074
   14000f247:	cmp    al,0x61
   14000f249:	jae    0x14000f2be
   14000f24b:	gs ins DWORD PTR es:[rdi],dx
   14000f24d:	(bad)  
   14000f24e:	ins    BYTE PTR es:[rdi],dx
   14000f24f:	jns    0x14000f271
   14000f251:	js     0x14000f2c0
   14000f253:	ins    BYTE PTR es:[rdi],dx
   14000f254:	outs   dx,BYTE PTR ds:[rsi]
   14000f255:	jae    0x14000f294
   14000f257:	and    dh,BYTE PTR [rbp+0x72]
   14000f25a:	outs   dx,BYTE PTR ds:[rsi]
   14000f25b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f25e:	push   0x73616d65
   14000f263:	sub    eax,0x7263696d
   14000f268:	outs   dx,DWORD PTR ds:[rsi]
   14000f269:	jae    0x14000f2da
   14000f26b:	data16 je 0x14000f29b
   14000f26e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f271:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f274:	ins    DWORD PTR es:[rdi],dx
   14000f275:	cs jbe 0x14000f2a9
   14000f278:	and    ah,BYTE PTR [rax]
   14000f27a:	ins    DWORD PTR es:[rdi],dx
   14000f27b:	(bad)  
   14000f27c:	outs   dx,BYTE PTR ds:[rsi]
   14000f27d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000f284:	jb     0x14000f2f9
   14000f286:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f28d:	xor    BYTE PTR [rdx],ah
   14000f28f:	ds or  eax,0x73613c0a
   14000f295:	jae    0x14000f2fc
   14000f297:	ins    DWORD PTR es:[rdi],dx
   14000f298:	(bad)  
   14000f299:	ins    BYTE PTR es:[rdi],dx
   14000f29a:	jns    0x14000f2e5
   14000f29c:	fs outs dx,BYTE PTR gs:[rsi]
   14000f29f:	je     0x14000f30a
   14000f2a1:	je     0x14000f31c
   14000f2a3:	or     eax,0x2020200a
   14000f2a8:	and    BYTE PTR [rsi+0x65],dh
   14000f2ab:	jb     0x14000f320
   14000f2ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000f2b4:	xor    DWORD PTR [rsi],ebp
   14000f2b6:	xor    BYTE PTR [rsi],ch
   14000f2b8:	xor    BYTE PTR [rdx],ah
   14000f2ba:	or     eax,0x2020200a
   14000f2bf:	and    BYTE PTR [rax+0x72],dh
   14000f2c2:	outs   dx,DWORD PTR ds:[rsi]
   14000f2c3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f2c6:	jae    0x14000f337
   14000f2c8:	jb     0x14000f30b
   14000f2ca:	jb     0x14000f32f
   14000f2cc:	push   0x63657469
   14000f2d1:	je     0x14000f348
   14000f2d3:	jb     0x14000f33a
   14000f2d5:	cmp    eax,0x646d6122
   14000f2da:	ss xor al,0x22
   14000f2dd:	or     eax,0x2020200a
   14000f2e2:	and    BYTE PTR [rsi+0x61],ch
   14000f2e5:	ins    DWORD PTR es:[rdi],dx
   14000f2e6:	gs cmp eax,0x63694d22
   14000f2ec:	jb     0x14000f35d
   14000f2ee:	jae    0x14000f35f
   14000f2f0:	data16 je 0x14000f321
   14000f2f3:	push   rdi
   14000f2f4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000f2fb:	push   rsp
   14000f2fc:	gs jb  0x14000f36c
   14000f2ff:	imul   ebp,DWORD PTR [rsi+0x61],0x7265536c
   14000f306:	jbe    0x14000f371
   14000f308:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f30b:	cs push rsp
   14000f30d:	push   rbx
   14000f30e:	push   rsp
   14000f30f:	push   0x22656d65
   14000f314:	or     eax,0x2020200a
   14000f319:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000f31d:	gs cmp eax,0x6e697722
   14000f323:	xor    esi,DWORD PTR [rdx]
   14000f325:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f2235
   14000f32b:	or     bh,BYTE PTR [rsp+riz*2]
   14000f32e:	gs jae 0x14000f394
   14000f331:	jb     0x14000f39c
   14000f333:	jo     0x14000f3a9
   14000f335:	imul   ebp,DWORD PTR [rdi+0x6e],0x5453543e
   14000f33c:	push   0x20656d65
   14000f341:	push   rbx
   14000f342:	gs jb  0x14000f3bb
   14000f345:	gs jb  0x14000f368
   14000f348:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000f34a:	fs jne 0x14000f3b9
   14000f34d:	gs cmp al,0x2f
   14000f350:	fs gs jae 0x14000f3b7
   14000f354:	jb     0x14000f3bf
   14000f356:	jo     0x14000f3cc
   14000f358:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000f35f:	or     bh,BYTE PTR [rsp+rsi*2]
   14000f362:	jb     0x14000f3d9
   14000f364:	jae    0x14000f3da
   14000f366:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000f368:	outs   dx,WORD PTR ds:[rsi]
   14000f36a:	and    BYTE PTR [rax+0x6d],bh
   14000f36d:	ins    BYTE PTR es:[rdi],dx
   14000f36e:	outs   dx,BYTE PTR ds:[rsi]
   14000f36f:	jae    0x14000f3ae
   14000f371:	and    dh,BYTE PTR [rbp+0x72]
   14000f374:	outs   dx,BYTE PTR ds:[rsi]
   14000f375:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f378:	push   0x73616d65
   14000f37d:	sub    eax,0x7263696d
   14000f382:	outs   dx,DWORD PTR ds:[rsi]
   14000f383:	jae    0x14000f3f4
   14000f385:	data16 je 0x14000f3b5
   14000f388:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f38b:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f38e:	ins    DWORD PTR es:[rdi],dx
   14000f38f:	cs jbe 0x14000f3c5
   14000f392:	and    bh,BYTE PTR [rsi]
   14000f394:	or     eax,0x2020200a
   14000f399:	and    BYTE PTR [rbx+rsi*2],bh
   14000f39c:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000f3a0:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000f3a8:	and    BYTE PTR [rax],ah
   14000f3aa:	and    BYTE PTR [rax],ah
   14000f3ac:	and    BYTE PTR [rax],ah
   14000f3ae:	cmp    al,0x72
   14000f3b0:	gs jno 0x14000f428
   14000f3b3:	gs jae 0x14000f42a
   14000f3b6:	gs fs push rax
   14000f3b9:	jb     0x14000f424
   14000f3bb:	jbe    0x14000f426
   14000f3bd:	ins    BYTE PTR es:[rdi],dx
   14000f3be:	gs addr32 gs jae 0x14000f401
   14000f3c3:	or     eax,0x2020200a
   14000f3c8:	and    BYTE PTR [rax],ah
   14000f3ca:	and    BYTE PTR [rax],ah
   14000f3cc:	and    BYTE PTR [rax],ah
   14000f3ce:	and    BYTE PTR [rax],ah
   14000f3d0:	and    BYTE PTR [rdx+rsi*2],bh
   14000f3d3:	gs jno 0x14000f44b
   14000f3d6:	gs jae 0x14000f44d
   14000f3d9:	gs fs rex.RB js 0x14000f443
   14000f3de:	movsxd esi,DWORD PTR [rbp+0x74]
   14000f3e1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000f3e8:	ins    BYTE PTR es:[rdi],dx
   14000f3e9:	or     eax,0x2020200a
   14000f3ee:	and    BYTE PTR [rax],ah
   14000f3f0:	and    BYTE PTR [rax],ah
   14000f3f2:	and    BYTE PTR [rax],ah
   14000f3f4:	and    BYTE PTR [rax],ah
   14000f3f6:	and    BYTE PTR [rax],ah
   14000f3f8:	and    BYTE PTR [rax],ah
   14000f3fa:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000f3fe:	gs ins BYTE PTR es:[rdi],dx
   14000f400:	cmp    eax,0x49736122
   14000f405:	outs   dx,BYTE PTR ds:[rsi]
   14000f406:	jbe    0x14000f477
   14000f408:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000f40c:	or     eax,0x2020200a
   14000f411:	and    BYTE PTR [rax],ah
   14000f413:	and    BYTE PTR [rax],ah
   14000f415:	and    BYTE PTR [rax],ah
   14000f417:	and    BYTE PTR [rax],ah
   14000f419:	and    BYTE PTR [rax],ah
   14000f41b:	and    BYTE PTR [rax],ah
   14000f41d:	and    BYTE PTR [rbp+0x69],dh
   14000f420:	movsxd esp,DWORD PTR [r11+0x65]
   14000f424:	jae    0x14000f499
   14000f426:	cmp    eax,0x6c616622
   14000f42b:	jae    0x14000f492
   14000f42d:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021143d
   14000f433:	and    BYTE PTR [rax],ah
   14000f435:	and    BYTE PTR [rax],ah
   14000f437:	and    BYTE PTR [rax],ah
   14000f439:	and    BYTE PTR [rax],ah
   14000f43b:	and    BYTE PTR [rdi],ch
   14000f43d:	ds or  eax,0x2020200a
   14000f443:	and    BYTE PTR [rax],ah
   14000f445:	and    BYTE PTR [rax],ah
   14000f447:	and    BYTE PTR [rdi+rbp*1],bh
   14000f44a:	jb     0x14000f4b1
   14000f44c:	jno    0x14000f4c3
   14000f44e:	gs jae 0x14000f4c5
   14000f451:	gs fs push rax
   14000f454:	jb     0x14000f4bf
   14000f456:	jbe    0x14000f4c1
   14000f458:	ins    BYTE PTR es:[rdi],dx
   14000f459:	gs addr32 gs jae 0x14000f49c
   14000f45e:	or     eax,0x2020200a
   14000f463:	and    BYTE PTR [rdi+rbp*1],bh
   14000f466:	jae    0x14000f4cd
   14000f468:	movsxd esi,DWORD PTR [rbp+0x72]
   14000f46b:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000f473:	je     0x14000f4e7
   14000f475:	jne    0x14000f4ea
   14000f477:	je     0x14000f4c2
   14000f479:	outs   dx,BYTE PTR ds:[rsi]
   14000f47a:	outs   dx,WORD PTR ds:[rsi]
   14000f47c:	ds or  eax,0x612f3c0a
   14000f482:	jae    0x14000f4f7
   14000f484:	gs ins DWORD PTR es:[rdi],dx
   14000f486:	(bad)  
   14000f487:	ins    BYTE PTR es:[rdi],dx
   14000f488:	jns    0x14000f4c8
   14000f48a:	or     eax,0xa
   14000f48f:	add    BYTE PTR [rax+0x3403],bl
   14000f495:	add    BYTE PTR [rsi+0x0],dl
   14000f498:	push   rbx
   14000f499:	add    BYTE PTR [rdi+0x0],bl
   14000f49c:	push   rsi
   14000f49d:	add    BYTE PTR [rbp+0x0],al
   14000f4a0:	push   rdx
   14000f4a1:	add    BYTE PTR [rbx+0x0],dl
   14000f4a4:	rex.WB add BYTE PTR [r15+0x0],cl
   14000f4a8:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000f4ac:	rex.WB add BYTE PTR [r14+0x0],cl
   14000f4b0:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000f4b4:	add    BYTE PTR [rax],al
   14000f4b6:	add    BYTE PTR [rax],al
   14000f4b8:	mov    ebp,0xfeef04
   14000f4bd:	add    BYTE PTR [rcx],al
   14000f4bf:	add    BYTE PTR [rax],al
   14000f4c1:	add    BYTE PTR [rdx],cl
   14000f4c3:	add    BYTE PTR [rax],al
   14000f4c5:	add    BYTE PTR [rax],bpl
   14000f4c8:	add    BYTE PTR [rax],al
   14000f4ca:	or     al,BYTE PTR [rax]
   14000f4cc:	add    BYTE PTR [rax+0x0],al
   14000f4cf:	sub    BYTE PTR [rdi],bh
   14000f4d1:	add    BYTE PTR [rax],al
   14000f4d3:	add    BYTE PTR [rax],al
   14000f4d5:	add    BYTE PTR [rax],al
   14000f4d7:	add    BYTE PTR [rax+rax*1],al
   14000f4da:	add    al,0x0
   14000f4dc:	add    DWORD PTR [rax],eax
	...
   14000f4ea:	add    BYTE PTR [rax],al
   14000f4ec:	test   BYTE PTR [rdx],0x0
   14000f4ef:	add    BYTE PTR [rcx],al
   14000f4f1:	add    BYTE PTR [rbx+0x0],dl
   14000f4f4:	je     0x14000f4f6
   14000f4f6:	jb     0x14000f4f8
   14000f4f8:	imul   eax,DWORD PTR [rax],0x67006e
   14000f4fe:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f502:	ins    BYTE PTR es:[rdi],dx
   14000f503:	add    BYTE PTR [rbp+0x0],ah
   14000f506:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f50a:	data16 add BYTE PTR [rdi+0x0],ch
   14000f50e:	add    BYTE PTR [rax],al
   14000f510:	rol    BYTE PTR [rdx],cl
   14000f512:	add    BYTE PTR [rax],al
   14000f514:	add    DWORD PTR [rax],eax
   14000f516:	xor    BYTE PTR [rax],al
   14000f518:	xor    al,0x0
   14000f51a:	xor    BYTE PTR [rax],al
   14000f51c:	cmp    DWORD PTR [rax],eax
   14000f51e:	xor    BYTE PTR [rax],al
   14000f520:	xor    al,0x0
   14000f522:	rex.X add BYTE PTR [rax],sil
   14000f525:	add    BYTE PTR [rax],al
   14000f527:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000f52b:	add    BYTE PTR [rcx],al
   14000f52d:	add    BYTE PTR [rbx+0x0],al
   14000f530:	outs   dx,DWORD PTR ds:[rsi]
   14000f531:	add    BYTE PTR [rbp+0x0],ch
   14000f534:	jo     0x14000f536
   14000f536:	(bad)  
   14000f537:	add    BYTE PTR [rsi+0x0],ch
   14000f53a:	jns    0x14000f53c
   14000f53c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000f540:	ins    DWORD PTR es:[rdi],dx
   14000f541:	add    BYTE PTR [rbp+0x0],ah
   14000f544:	add    BYTE PTR [rax],al
   14000f546:	add    BYTE PTR [rax],al
   14000f548:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000f54c:	movsxd eax,DWORD PTR [rax]
   14000f54e:	jb     0x14000f550
   14000f550:	outs   dx,DWORD PTR ds:[rsi]
   14000f551:	add    BYTE PTR [rbx+0x0],dh
   14000f554:	outs   dx,DWORD PTR ds:[rsi]
   14000f555:	add    BYTE PTR [rsi+0x0],ah
   14000f558:	je     0x14000f55a
   14000f55a:	and    BYTE PTR [rax],al
   14000f55c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000f560:	jb     0x14000f562
   14000f562:	jo     0x14000f564
   14000f564:	outs   dx,DWORD PTR ds:[rsi]
   14000f565:	add    BYTE PTR [rdx+0x0],dh
   14000f568:	(bad)  
   14000f569:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f56d:	add    BYTE PTR [rdi+0x0],ch
   14000f570:	outs   dx,BYTE PTR ds:[rsi]
   14000f571:	add    BYTE PTR [rax],al
   14000f573:	add    BYTE PTR [rax+rax*1+0x16],dl
   14000f577:	add    BYTE PTR [rcx],al
   14000f579:	add    BYTE PTR [rsi+0x0],al
   14000f57c:	imul   eax,DWORD PTR [rax],0x65006c
   14000f582:	add    BYTE PTR [rbp+0x0],r12b
   14000f586:	jae    0x14000f588
   14000f588:	movsxd eax,DWORD PTR [rax]
   14000f58a:	jb     0x14000f58c
   14000f58c:	imul   eax,DWORD PTR [rax],0x740070
   14000f592:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f598:	add    BYTE PTR [rax],al
   14000f59a:	add    BYTE PTR [rax],al
   14000f59c:	push   rsp
   14000f59d:	add    BYTE PTR [rbx+0x0],dl
   14000f5a0:	push   rsp
   14000f5a1:	add    BYTE PTR [rax+0x0],ch
   14000f5a4:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f5a8:	add    BYTE PTR gs:[rax],ah
   14000f5ab:	add    BYTE PTR [rbx+0x0],dl
   14000f5ae:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f5b2:	jbe    0x14000f5b4
   14000f5b4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f5b8:	and    BYTE PTR [rax],al
   14000f5ba:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000f5be:	add    BYTE PTR fs:[rbp+0x0],dh
   14000f5c2:	ins    BYTE PTR es:[rdi],dx
   14000f5c3:	add    BYTE PTR [rbp+0x0],ah
   14000f5c6:	add    BYTE PTR [rax],al
   14000f5c8:	data16 add BYTE PTR [rbx],ah
   14000f5cb:	add    BYTE PTR [rcx],al
   14000f5cd:	add    BYTE PTR [rsi+0x0],al
   14000f5d0:	imul   eax,DWORD PTR [rax],0x65006c
   14000f5d6:	push   rsi
   14000f5d7:	add    BYTE PTR [rbp+0x0],ah
   14000f5da:	jb     0x14000f5dc
   14000f5dc:	jae    0x14000f5de
   14000f5de:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f5e4:	add    BYTE PTR [rax],al
   14000f5e6:	add    BYTE PTR [rax],al
   14000f5e8:	xor    DWORD PTR [rax],eax
   14000f5ea:	xor    BYTE PTR [rax],al
   14000f5ec:	add    BYTE PTR cs:[rax],dh
   14000f5ef:	add    BYTE PTR [rsi],ch
   14000f5f1:	add    BYTE PTR [rcx],dh
   14000f5f3:	add    BYTE PTR [rax],dh
   14000f5f5:	add    BYTE PTR [rdx],dh
   14000f5f7:	add    BYTE PTR [rax+rax*1],dh
   14000f5fa:	xor    BYTE PTR [rax],al
   14000f5fc:	add    BYTE PTR cs:[rcx],dh
   14000f5ff:	add    BYTE PTR [rsi],dh
   14000f601:	add    BYTE PTR [rbx],dh
   14000f603:	add    BYTE PTR [rax],bh
   14000f605:	add    BYTE PTR [rax+rax*1],dh
   14000f608:	and    BYTE PTR [rax],al
   14000f60a:	sub    BYTE PTR [rax],al
   14000f60c:	je     0x14000f60e
   14000f60e:	push   0x2e003100
   14000f613:	add    BYTE PTR [rcx],dh
   14000f615:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701261b
   14000f61b:	add    BYTE PTR [rax],dh
   14000f61d:	add    BYTE PTR [rcx],bh
   14000f61f:	add    BYTE PTR [rip+0x37003100],ch        # 0x177012725
   14000f625:	add    BYTE PTR [rax],dh
   14000f627:	add    BYTE PTR [rax],dh
   14000f629:	add    BYTE PTR [rcx],ch
   14000f62b:	add    BYTE PTR [rax],al
   14000f62d:	add    BYTE PTR [rax],al
   14000f62f:	add    BYTE PTR [rdx],bh
   14000f631:	add    BYTE PTR [rip+0x49000100],cl        # 0x18900f737
   14000f637:	add    BYTE PTR [rsi+0x0],ch
   14000f63a:	je     0x14000f63c
   14000f63c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f640:	outs   dx,BYTE PTR ds:[rsi]
   14000f641:	add    BYTE PTR [rcx+0x0],ah
   14000f644:	ins    BYTE PTR es:[rdi],dx
   14000f645:	add    BYTE PTR [rsi+0x0],cl
   14000f648:	(bad)  
   14000f649:	add    BYTE PTR [rbp+0x0],ch
   14000f64c:	add    BYTE PTR gs:[rax],al
   14000f64f:	add    BYTE PTR [rax+rax*1+0x53],dl
   14000f653:	add    BYTE PTR [rax+rax*1+0x68],dl
   14000f657:	add    BYTE PTR [rbp+0x0],ah
   14000f65a:	ins    DWORD PTR es:[rdi],dx
   14000f65b:	add    BYTE PTR [rbp+0x0],ah
   14000f65e:	push   rbx
   14000f65f:	add    BYTE PTR [rsi],ch
   14000f661:	add    BYTE PTR [rbp+0x0],ah
   14000f664:	js     0x14000f666
   14000f666:	add    BYTE PTR gs:[rax],al
   14000f669:	add    BYTE PTR [rax],al
   14000f66b:	add    BYTE PTR [rax+0x1002e00],al
   14000f671:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000f675:	add    BYTE PTR [rdi+0x0],ah
   14000f678:	(bad)  
   14000f679:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000f67d:	add    BYTE PTR [rdi+0x0],ch
   14000f680:	jo     0x14000f682
   14000f682:	jns    0x14000f684
   14000f684:	jb     0x14000f686
   14000f686:	imul   eax,DWORD PTR [rax],0x680067
   14000f68c:	je     0x14000f68e
   14000f68e:	add    BYTE PTR [rax],al
   14000f690:	test   eax,0x4d002000
   14000f695:	add    BYTE PTR [rcx+0x0],ch
   14000f698:	movsxd eax,DWORD PTR [rax]
   14000f69a:	jb     0x14000f69c
   14000f69c:	outs   dx,DWORD PTR ds:[rsi]
   14000f69d:	add    BYTE PTR [rbx+0x0],dh
   14000f6a0:	outs   dx,DWORD PTR ds:[rsi]
   14000f6a1:	add    BYTE PTR [rsi+0x0],ah
   14000f6a4:	je     0x14000f6a6
   14000f6a6:	and    BYTE PTR [rax],al
   14000f6a8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000f6ac:	jb     0x14000f6ae
   14000f6ae:	jo     0x14000f6b0
   14000f6b0:	outs   dx,DWORD PTR ds:[rsi]
   14000f6b1:	add    BYTE PTR [rdx+0x0],dh
   14000f6b4:	(bad)  
   14000f6b5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f6b9:	add    BYTE PTR [rdi+0x0],ch
   14000f6bc:	outs   dx,BYTE PTR ds:[rsi]
   14000f6bd:	add    BYTE PTR [rsi],ch
   14000f6bf:	add    BYTE PTR [rax],ah
   14000f6c1:	add    BYTE PTR [rcx+0x0],al
   14000f6c4:	ins    BYTE PTR es:[rdi],dx
   14000f6c5:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000f6c9:	add    BYTE PTR [rdx+0x0],dh
   14000f6cc:	imul   eax,DWORD PTR [rax],0x680067
   14000f6d2:	je     0x14000f6d4
   14000f6d4:	jae    0x14000f6d6
   14000f6d6:	and    BYTE PTR [rax],al
   14000f6d8:	jb     0x14000f6da
   14000f6da:	add    BYTE PTR gs:[rbx+0x0],dh
   14000f6de:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f6e2:	jbe    0x14000f6e4
   14000f6e4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000f6e9:	add    BYTE PTR [rax],al
   14000f6eb:	add    BYTE PTR [rdx+0x0],al
   14000f6ee:	or     eax,0x4f000100
   14000f6f3:	add    BYTE PTR [rdx+0x0],dh
   14000f6f6:	imul   eax,DWORD PTR [rax],0x690067
   14000f6fc:	outs   dx,BYTE PTR ds:[rsi]
   14000f6fd:	add    BYTE PTR [rcx+0x0],ah
   14000f700:	ins    BYTE PTR es:[rdi],dx
   14000f701:	add    BYTE PTR [rsi+0x0],al
   14000f704:	imul   eax,DWORD PTR [rax],0x65006c
   14000f70a:	outs   dx,BYTE PTR ds:[rsi]
   14000f70b:	add    BYTE PTR [rcx+0x0],ah
   14000f70e:	ins    DWORD PTR es:[rdi],dx
   14000f70f:	add    BYTE PTR [rbp+0x0],ah
   14000f712:	add    BYTE PTR [rax],al
   14000f714:	push   rsp
   14000f715:	add    BYTE PTR [rbx+0x0],dl
   14000f718:	push   rsp
   14000f719:	add    BYTE PTR [rax+0x0],ch
   14000f71c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f720:	add    BYTE PTR gs:[rbx+0x0],dl
   14000f724:	add    BYTE PTR cs:[rbp+0x0],ah
   14000f728:	js     0x14000f72a
   14000f72a:	add    BYTE PTR gs:[rax],al
   14000f72d:	add    BYTE PTR [rax],al
   14000f72f:	add    BYTE PTR [rdx+0x0],ch
   14000f732:	and    eax,0x50000100
   14000f737:	add    BYTE PTR [rdx+0x0],dh
   14000f73a:	outs   dx,DWORD PTR ds:[rsi]
   14000f73b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000f73f:	add    BYTE PTR [rbx+0x0],ah
   14000f742:	je     0x14000f744
   14000f744:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000f748:	ins    DWORD PTR es:[rdi],dx
   14000f749:	add    BYTE PTR [rbp+0x0],ah
   14000f74c:	add    BYTE PTR [rax],al
   14000f74e:	add    BYTE PTR [rax],al
   14000f750:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000f754:	movsxd eax,DWORD PTR [rax]
   14000f756:	jb     0x14000f758
   14000f758:	outs   dx,DWORD PTR ds:[rsi]
   14000f759:	add    BYTE PTR [rbx+0x0],dh
   14000f75c:	outs   dx,DWORD PTR ds:[rsi]
   14000f75d:	add    BYTE PTR [rsi+0x0],ah
   14000f760:	je     0x14000f762
   14000f762:	scas   al,BYTE PTR es:[rdi]
   14000f763:	add    BYTE PTR [rax],ah
   14000f765:	add    BYTE PTR [rdi+0x0],dl
   14000f768:	imul   eax,DWORD PTR [rax],0x64006e
   14000f76e:	outs   dx,DWORD PTR ds:[rsi]
   14000f76f:	add    BYTE PTR [rdi+0x0],dh
   14000f772:	jae    0x14000f774
   14000f774:	scas   al,BYTE PTR es:[rdi]
   14000f775:	add    BYTE PTR [rax],ah
   14000f777:	add    BYTE PTR [rdi+0x0],cl
   14000f77a:	jo     0x14000f77c
   14000f77c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f780:	(bad)  
   14000f781:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f785:	add    BYTE PTR [rsi+0x0],ch
   14000f788:	add    BYTE PTR [eax],ah
   14000f78b:	add    BYTE PTR [rbx+0x0],dl
   14000f78e:	jns    0x14000f790
   14000f790:	jae    0x14000f792
   14000f792:	je     0x14000f794
   14000f794:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f798:	add    BYTE PTR [rax],al
   14000f79a:	add    BYTE PTR [rax],al
   14000f79c:	rex.RX add BYTE PTR [rcx],r10b
   14000f79f:	add    BYTE PTR [rcx],al
   14000f7a1:	add    BYTE PTR [rax+0x0],dl
   14000f7a4:	jb     0x14000f7a6
   14000f7a6:	outs   dx,DWORD PTR ds:[rsi]
   14000f7a7:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000f7ab:	add    BYTE PTR [rbx+0x0],ah
   14000f7ae:	je     0x14000f7b0
   14000f7b0:	push   rsi
   14000f7b1:	add    BYTE PTR [rbp+0x0],ah
   14000f7b4:	jb     0x14000f7b6
   14000f7b6:	jae    0x14000f7b8
   14000f7b8:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f7be:	add    BYTE PTR [rax],al
   14000f7c0:	xor    DWORD PTR [rax],eax
   14000f7c2:	xor    BYTE PTR [rax],al
   14000f7c4:	add    BYTE PTR cs:[rax],dh
   14000f7c7:	add    BYTE PTR [rsi],ch
   14000f7c9:	add    BYTE PTR [rcx],dh
   14000f7cb:	add    BYTE PTR [rax],dh
   14000f7cd:	add    BYTE PTR [rdx],dh
   14000f7cf:	add    BYTE PTR [rax+rax*1],dh
   14000f7d2:	xor    BYTE PTR [rax],al
   14000f7d4:	add    BYTE PTR cs:[rcx],dh
   14000f7d7:	add    BYTE PTR [rsi],dh
   14000f7d9:	add    BYTE PTR [rbx],dh
   14000f7db:	add    BYTE PTR [rax],bh
   14000f7dd:	add    BYTE PTR [rax+rax*1],dh
   14000f7e0:	add    BYTE PTR [rax],al
   14000f7e2:	add    BYTE PTR [rax],al
   14000f7e4:	add    BYTE PTR [rax],r8b
   14000f7e7:	add    BYTE PTR [rcx],al
   14000f7e9:	add    BYTE PTR [rsi+0x0],dl
   14000f7ec:	(bad)  
   14000f7ed:	add    BYTE PTR [rdx+0x0],dh
   14000f7f0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f7f4:	ins    BYTE PTR es:[rdi],dx
   14000f7f5:	add    BYTE PTR [rbp+0x0],ah
   14000f7f8:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f7fc:	data16 add BYTE PTR [rdi+0x0],ch
   14000f800:	add    BYTE PTR [rax],al
   14000f802:	add    BYTE PTR [rax],al
   14000f804:	and    al,0x0
   14000f806:	add    al,0x0
   14000f808:	add    BYTE PTR [rax],al
   14000f80a:	push   rsp
   14000f80b:	add    BYTE PTR [rdx+0x0],dh
   14000f80e:	(bad)  
   14000f80f:	add    BYTE PTR [rsi+0x0],ch
   14000f812:	jae    0x14000f814
   14000f814:	ins    BYTE PTR es:[rdi],dx
   14000f815:	add    BYTE PTR [rcx+0x0],ah
   14000f818:	je     0x14000f81a
   14000f81a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f820:	add    BYTE PTR [rax],al
   14000f822:	add    BYTE PTR [rax],al
   14000f824:	or     DWORD PTR [rax+rsi*4],eax
   14000f827:	add    al,0x48
   14000f829:	rex.WXB
   14000f82a:	rex.XB push r10
   14000f82c:	or     eax,0xa0d7b0a
   14000f831:	or     DWORD PTR [rsi+0x6f],ecx
   14000f834:	push   rdx
   14000f835:	gs ins DWORD PTR es:[rdi],dx
   14000f837:	outs   dx,DWORD PTR ds:[rsi]
   14000f838:	jbe    0x14000f89f
   14000f83a:	and    BYTE PTR [rcx+0x70],al
   14000f83d:	jo     0x14000f888
   14000f83f:	rex.R or eax,0xd7b090a
   14000f845:	or     cl,BYTE PTR [rcx]
   14000f847:	or     DWORD PTR [rbx+0x38],edi
   14000f84a:	(bad)  
   14000f84b:	xor    BYTE PTR gs:[rbx],dh
   14000f84e:	ss movsxd ebp,DWORD PTR ss:[rip+0x32323538]        # 0x172332d8e
   14000f856:	sub    eax,0x65623034
   14000f85b:	sub    eax,0x38306238
   14000f860:	sub    eax,0x36326263
   14000f865:	xor    eax,0x32663735
   14000f86a:	cmp    BYTE PTR [rip+0x3d207d34],dh        # 0x17d2175a4
   14000f870:	and    BYTE PTR [rbx+0x20],dh
   14000f873:	(bad)  
   14000f874:	push   rsp
   14000f875:	push   rbx
   14000f876:	push   rsp
   14000f877:	push   0x27656d65
   14000f87c:	or     eax,0x2709090a
   14000f881:	push   rsp
   14000f882:	push   rbx
   14000f883:	push   rsp
   14000f884:	push   0x2e656d65
   14000f889:	rex.RB pop r8
   14000f88b:	rex.RB (bad) 
   14000f88d:	or     eax,0x7b09090a
   14000f892:	or     eax,0x909090a
   14000f897:	jbe    0x14000f8fa
   14000f899:	ins    BYTE PTR es:[rdi],dx
   14000f89a:	and    BYTE PTR [rcx+0x70],al
   14000f89d:	jo     0x14000f8e8
   14000f89f:	and    BYTE PTR [rip+0x7b207320],r15b        # 0x1bb216bc6
   14000f8a6:	cmp    BYTE PTR [rdx+0x65],ah
   14000f8a9:	xor    BYTE PTR [rbx],dh
   14000f8ab:	ss movsxd ebp,DWORD PTR ss:[rip+0x32323538]        # 0x172332deb
   14000f8b3:	sub    eax,0x65623034
   14000f8b8:	sub    eax,0x38306238
   14000f8bd:	sub    eax,0x36326263
   14000f8c2:	xor    eax,0x32663735
   14000f8c7:	cmp    BYTE PTR [rip+0xa0d7d34],dh        # 0x14a0e7601
   14000f8cd:	or     DWORD PTR [rcx],ecx
   14000f8cf:	jge    0x14000f8de
   14000f8d1:	or     cl,BYTE PTR [rcx]
   14000f8d3:	jge    0x14000f8e2
   14000f8d5:	or     bh,BYTE PTR [rbp+0xd]
   14000f8d8:	or     cl,BYTE PTR [rip+0x434b480a]        # 0x1834c40e8
   14000f8de:	push   rdx
   14000f8df:	or     eax,0xa0d7b0a
   14000f8e4:	and    BYTE PTR [rax],ah
   14000f8e6:	and    BYTE PTR [rax],ah
   14000f8e8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000f8ea:	push   rdx
   14000f8eb:	gs ins DWORD PTR es:[rdi],dx
   14000f8ed:	outs   dx,DWORD PTR ds:[rsi]
   14000f8ee:	jbe    0x14000f955
   14000f8f0:	and    BYTE PTR [rcx+0x70],al
   14000f8f3:	jo     0x14000f93e
   14000f8f5:	rex.R or eax,0x2020200a
   14000f8fb:	and    BYTE PTR [rbx+0xd],bh
   14000f8fe:	or     ah,BYTE PTR [rax]
   14000f900:	and    BYTE PTR [rax],ah
   14000f902:	and    BYTE PTR [rax],ah
   14000f904:	and    BYTE PTR [rax],ah
   14000f906:	and    BYTE PTR [rsi+0x6f],al
   14000f909:	jb     0x14000f96e
   14000f90b:	gs push rdx
   14000f90d:	gs ins DWORD PTR es:[rdi],dx
   14000f90f:	outs   dx,DWORD PTR ds:[rsi]
   14000f910:	jbe    0x14000f977
   14000f912:	and    BYTE PTR [rbx+0x38],bh
   14000f915:	(bad)  
   14000f916:	xor    BYTE PTR gs:[rbx],dh
   14000f919:	ss movsxd ebp,DWORD PTR ss:[rip+0x32323538]        # 0x172332e59
   14000f921:	sub    eax,0x65623034
   14000f926:	sub    eax,0x38306238
   14000f92b:	sub    eax,0x36326263
   14000f930:	xor    eax,0x32663735
   14000f935:	cmp    BYTE PTR [rip+0x3d207d34],dh        # 0x17d21766f
   14000f93b:	and    BYTE PTR [rbx+0x20],dh
   14000f93e:	(bad)  
   14000f93f:	push   rsp
   14000f940:	push   rbx
   14000f941:	push   rsp
   14000f942:	push   0x27656d65
   14000f947:	or     eax,0x2020200a
   14000f94c:	and    BYTE PTR [rax],ah
   14000f94e:	and    BYTE PTR [rax],ah
   14000f950:	and    BYTE PTR [rbx+0xd],bh
   14000f953:	or     ah,BYTE PTR [rax]
   14000f955:	and    BYTE PTR [rax],ah
   14000f957:	and    BYTE PTR [rax],ah
   14000f959:	and    BYTE PTR [rax],ah
   14000f95b:	and    BYTE PTR [rax],ah
   14000f95d:	and    BYTE PTR [rax],ah
   14000f95f:	and    BYTE PTR [rsi+0x61],dh
   14000f962:	ins    BYTE PTR es:[rdi],dx
   14000f963:	and    BYTE PTR [rdx+0x75],dl
   14000f966:	outs   dx,BYTE PTR ds:[rsi]
   14000f967:	rex.B jae 0x14000f98a
   14000f96a:	cmp    eax,0x27207320
   14000f96f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000f971:	je     0x14000f9d8
   14000f973:	jb     0x14000f9d6
   14000f975:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000f979:	and    BYTE PTR gs:[rbp+0x73],dl
   14000f97d:	gs jb  0x14000f9a7
   14000f980:	or     eax,0x2020200a
   14000f985:	and    BYTE PTR [rax],ah
   14000f987:	and    BYTE PTR [rax],ah
   14000f989:	and    BYTE PTR [rbp+0xd],bh
   14000f98c:	or     ah,BYTE PTR [rax]
   14000f98e:	and    BYTE PTR [rax],ah
   14000f990:	and    BYTE PTR [rbp+0xd],bh
   14000f993:	or     bh,BYTE PTR [rbp+0x0]
   14000f996:	add    BYTE PTR [rax],al
   14000f998:	rex.W
   14000f999:	rex.WXB
   14000f99a:	rex.XB push r10
   14000f99c:	or     eax,0xa0d7b0a
   14000f9a1:	or     DWORD PTR [rbx+rdx*2+0x54],edx
   14000f9a5:	push   0x2e656d65
   14000f9aa:	push   rsp
   14000f9ab:	push   rbx
   14000f9ac:	push   rdx
   14000f9ad:	rex.R push rbx
   14000f9af:	gs je  0x14000fa26
   14000f9b2:	imul   ebp,DWORD PTR [rsi+0x67],0x20312e73
   14000f9b9:	cmp    eax,0x27207320
   14000f9be:	push   rsp
   14000f9bf:	push   rbx
   14000f9c0:	push   rdx
   14000f9c1:	rex.R push rbx
   14000f9c3:	gs je  0x14000fa3a
   14000f9c6:	imul   ebp,DWORD PTR [rsi+0x67],0x6c432073
   14000f9cd:	(bad)  
   14000f9ce:	jae    0x14000fa43
   14000f9d0:	(bad)  
   14000f9d1:	or     eax,0xd7b090a
   14000f9d6:	or     cl,BYTE PTR [rcx]
   14000f9d8:	or     DWORD PTR [rbx+0x4c],eax
   14000f9db:	push   rbx
   14000f9dc:	rex.WB
   14000f9dd:	and    BYTE PTR [rip+0x27207320],r15b        # 0x167216d04
   14000f9e4:	jnp    0x14000fa47
   14000f9e6:	(bad)  
   14000f9e7:	movsxd esi,DWORD PTR [rcx]
   14000f9e9:	xor    BYTE PTR [rax],dh
   14000f9eb:	cmp    DWORD PTR [rsi+0x2d],esp
   14000f9ee:	(bad)  
   14000f9ef:	(bad)  
   14000f9f1:	xor    ebp,DWORD PTR [rip+0x39663834]        # 0x17967322b
   14000f9f7:	sub    eax,0x31326139
   14000f9fc:	sub    eax,0x62356637
   14000fa01:	cmp    BYTE PTR [rax],bh
   14000fa03:	xor    al,0x32
   14000fa05:	ss (bad) 
   14000fa07:	xor    ah,BYTE PTR [rbp+0x7d]
   14000fa0a:	(bad)  
   14000fa0b:	or     eax,0xd7d090a
   14000fa10:	or     cl,BYTE PTR [rcx]
   14000fa12:	push   rsp
   14000fa13:	push   rbx
   14000fa14:	push   rsp
   14000fa15:	push   0x2e656d65
   14000fa1a:	push   rsp
   14000fa1b:	push   rbx
   14000fa1c:	push   rdx
   14000fa1d:	rex.R push rbx
   14000fa1f:	gs je  0x14000fa96
   14000fa22:	imul   ebp,DWORD PTR [rsi+0x67],0x203d2073
   14000fa29:	jae    0x14000fa4b
   14000fa2b:	(bad)  
   14000fa2c:	push   rsp
   14000fa2d:	push   rbx
   14000fa2e:	push   rdx
   14000fa2f:	rex.R push rbx
   14000fa31:	gs je  0x14000faa8
   14000fa34:	imul   ebp,DWORD PTR [rsi+0x67],0x6c432073
   14000fa3b:	(bad)  
   14000fa3c:	jae    0x14000fab1
   14000fa3e:	(bad)  
   14000fa3f:	or     eax,0xd7b090a
   14000fa44:	or     cl,BYTE PTR [rcx]
   14000fa46:	or     DWORD PTR [rbx+0x4c],eax
   14000fa49:	push   rbx
   14000fa4a:	rex.WB
   14000fa4b:	and    BYTE PTR [rip+0x27207320],r15b        # 0x167216d72
   14000fa52:	jnp    0x14000fab5
   14000fa54:	(bad)  
   14000fa55:	movsxd esi,DWORD PTR [rcx]
   14000fa57:	xor    BYTE PTR [rax],dh
   14000fa59:	cmp    DWORD PTR [rsi+0x2d],esp
   14000fa5c:	(bad)  
   14000fa5d:	(bad)  
   14000fa5f:	xor    ebp,DWORD PTR [rip+0x39663834]        # 0x179673299
   14000fa65:	sub    eax,0x31326139
   14000fa6a:	sub    eax,0x62356637
   14000fa6f:	cmp    BYTE PTR [rax],bh
   14000fa71:	xor    al,0x32
   14000fa73:	ss (bad) 
   14000fa75:	xor    ah,BYTE PTR [rbp+0x7d]
   14000fa78:	(bad)  
   14000fa79:	or     eax,0x4309090a
   14000fa7e:	jne    0x14000faf2
   14000fa80:	push   rsi
   14000fa81:	gs jb  0x14000faa4
   14000fa84:	cmp    eax,0x27207320
   14000fa89:	push   rsp
   14000fa8a:	push   rbx
   14000fa8b:	push   rsp
   14000fa8c:	push   0x2e656d65
   14000fa91:	push   rsp
   14000fa92:	push   rbx
   14000fa93:	push   rdx
   14000fa94:	rex.R push rbx
   14000fa96:	gs je  0x14000fb0d
   14000fa99:	imul   ebp,DWORD PTR [rsi+0x67],0x27312e73
   14000faa0:	or     eax,0xd7d090a
   14000faa5:	or     cl,BYTE PTR [rcx]
   14000faa7:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000faa9:	push   rdx
   14000faaa:	gs ins DWORD PTR es:[rdi],dx
   14000faac:	outs   dx,DWORD PTR ds:[rsi]
   14000faad:	jbe    0x14000fb14
   14000faaf:	and    BYTE PTR [rbx+0x4c],al
   14000fab2:	push   rbx
   14000fab3:	rex.WB
   14000fab4:	rex.R or eax,0xd7b090a
   14000faba:	or     cl,BYTE PTR [rcx]
   14000fabc:	or     DWORD PTR [rsi+0x6f],eax
   14000fabf:	jb     0x14000fb24
   14000fac1:	gs push rdx
   14000fac3:	gs ins DWORD PTR es:[rdi],dx
   14000fac5:	outs   dx,DWORD PTR ds:[rsi]
   14000fac6:	jbe    0x14000fb2d
   14000fac8:	and    BYTE PTR [rbx+0x61],bh
   14000facb:	(bad)  
   14000facc:	movsxd esi,DWORD PTR [rcx]
   14000face:	xor    BYTE PTR [rax],dh
   14000fad0:	cmp    DWORD PTR [rsi+0x2d],esp
   14000fad3:	(bad)  
   14000fad4:	(bad)  
   14000fad6:	xor    ebp,DWORD PTR [rip+0x39663834]        # 0x179673310
   14000fadc:	sub    eax,0x31326139
   14000fae1:	sub    eax,0x62356637
   14000fae6:	cmp    BYTE PTR [rax],bh
   14000fae8:	xor    al,0x32
   14000faea:	ss (bad) 
   14000faec:	xor    ah,BYTE PTR [rbp+0x7d]
   14000faef:	and    BYTE PTR [rip+0x27207320],bh        # 0x167216e15
   14000faf5:	push   rsp
   14000faf6:	push   rbx
   14000faf7:	push   rdx
   14000faf8:	rex.R push rbx
   14000fafa:	gs je  0x14000fb71
   14000fafd:	imul   ebp,DWORD PTR [rsi+0x67],0x6c432073
   14000fb04:	(bad)  
   14000fb05:	jae    0x14000fb7a
   14000fb07:	(bad)  
   14000fb08:	or     eax,0x7b09090a
   14000fb0d:	or     eax,0x909090a
   14000fb12:	push   rax
   14000fb13:	jb     0x14000fb84
   14000fb15:	addr32 rex.WB
   14000fb17:	and    BYTE PTR [rip+0x27207320],r15b        # 0x167216e3e
   14000fb1e:	push   rsp
   14000fb1f:	push   rbx
   14000fb20:	push   rsp
   14000fb21:	push   0x2e656d65
   14000fb26:	push   rsp
   14000fb27:	push   rbx
   14000fb28:	push   rdx
   14000fb29:	rex.R push rbx
   14000fb2b:	gs je  0x14000fba2
   14000fb2e:	imul   ebp,DWORD PTR [rsi+0x67],0x27312e73
   14000fb35:	or     eax,0x909090a
   14000fb3a:	push   rsi
   14000fb3b:	gs jb  0x14000fbb1
   14000fb3e:	imul   ebp,DWORD PTR [rdi+0x6e],0x65646e49
   14000fb45:	jo     0x14000fbac
   14000fb47:	outs   dx,BYTE PTR ds:[rsi]
   14000fb48:	fs outs dx,BYTE PTR gs:[rsi]
   14000fb4b:	je     0x14000fb9d
   14000fb4d:	jb     0x14000fbbe
   14000fb4f:	addr32 rex.WB
   14000fb51:	and    BYTE PTR [rip+0x27207320],r15b        # 0x167216e78
   14000fb58:	push   rsp
   14000fb59:	push   rbx
   14000fb5a:	push   rsp
   14000fb5b:	push   0x2e656d65
   14000fb60:	push   rsp
   14000fb61:	push   rbx
   14000fb62:	push   rdx
   14000fb63:	rex.R push rbx
   14000fb65:	gs je  0x14000fbdc
   14000fb68:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d2773
   14000fb6f:	or     DWORD PTR [rcx],ecx
   14000fb71:	or     DWORD PTR [rsi+0x6f],eax
   14000fb74:	jb     0x14000fbd9
   14000fb76:	gs push rdx
   14000fb78:	gs ins DWORD PTR es:[rdi],dx
   14000fb7a:	outs   dx,DWORD PTR ds:[rsi]
   14000fb7b:	jbe    0x14000fbe2
   14000fb7d:	and    BYTE PTR [rdi],ah
   14000fb7f:	push   rax
   14000fb80:	jb     0x14000fbf1
   14000fb82:	addr32 jb 0x14000fbe6
   14000fb85:	ins    DWORD PTR es:[rdi],dx
   14000fb86:	ins    DWORD PTR es:[rdi],dx
   14000fb87:	(bad)  
   14000fb88:	(bad)  
   14000fb89:	ins    BYTE PTR es:[rdi],dx
   14000fb8a:	gs (bad) 
   14000fb8c:	or     eax,0x909090a
   14000fb91:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000fb93:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000fb96:	push   rbx
   14000fb97:	gs jb  0x14000fc10
   14000fb9a:	gs jb  0x14000fbd0
   14000fb9d:	xor    ah,BYTE PTR [rax]
   14000fb9f:	cmp    eax,0x27207320
   14000fba4:	and    eax,0x55444f4d
   14000fba9:	rex.WR
   14000fbaa:	rex.RB and eax,0x90a0d27
   14000fbb0:	or     DWORD PTR [rcx],ecx
   14000fbb2:	jbe    0x14000fc15
   14000fbb4:	ins    BYTE PTR es:[rdi],dx
   14000fbb5:	and    BYTE PTR [rcx+0x70],al
   14000fbb8:	jo     0x14000fc03
   14000fbba:	and    BYTE PTR [rip+0x27207320],r15b        # 0x167216ee1
   14000fbc1:	jnp    0x14000fbfb
   14000fbc3:	(bad)  
   14000fbc4:	xor    BYTE PTR gs:[rbx],dh
   14000fbc7:	ss movsxd ebp,DWORD PTR ss:[rip+0x32323538]        # 0x172333107
   14000fbcf:	sub    eax,0x65623034
   14000fbd4:	sub    eax,0x38306238
   14000fbd9:	sub    eax,0x36326263
   14000fbde:	xor    eax,0x32663735
   14000fbe3:	cmp    BYTE PTR [rip+0xd277d34],dh        # 0x14d28791d
   14000fbe9:	or     cl,BYTE PTR [rcx]
   14000fbeb:	or     DWORD PTR [rcx],ecx
   14000fbed:	(bad)  
   14000fbee:	push   rsp
   14000fbef:	jns    0x14000fc61
   14000fbf1:	imul   r12,QWORD PTR gs:[rdx+0x27],0x73203d20
   14000fbfa:	and    BYTE PTR [rdi],ah
   14000fbfc:	jnp    0x14000fc60
   14000fbfe:	xor    BYTE PTR [rcx+0x32],ah
   14000fc01:	xor    BYTE PTR [rsi+0x30],ah
   14000fc04:	cmp    BYTE PTR [rip+0x61386234],ch        # 0x1a1395e3e
   14000fc0a:	sub    eax,0x65646234
   14000fc0f:	sub    eax,0x35333739
   14000fc14:	sub    eax,0x63666338
   14000fc19:	xor    dh,BYTE PTR [rip+0x62366130]        # 0x1a2375d4f
   14000fc1f:	xor    al,0x62
   14000fc21:	jge    0x14000fc4a
   14000fc23:	or     eax,0x7d09090a
   14000fc28:	or     eax,0xd7d090a
   14000fc2d:	or     bh,BYTE PTR [rbp+0xd]
   14000fc30:	or     cl,BYTE PTR [rip+0xd0a0d0a]        # 0x14d0b0940
   14000fc36:	or     al,BYTE PTR [rax]
   14000fc38:	rex.WRB push r11
   14000fc3a:	rex.RX push rsp
   14000fc3c:	add    al,BYTE PTR [rax]
   14000fc3e:	add    DWORD PTR [rax],eax
   14000fc40:	add    BYTE PTR [rax],al
   14000fc42:	add    BYTE PTR [rax],al
   14000fc44:	or     DWORD PTR [rax+rax*1],eax
   14000fc47:	add    BYTE PTR [rax],al
   14000fc49:	add    BYTE PTR [rax],al
   14000fc4b:	add    BYTE PTR [rbx+0x0],al
   14000fc4e:	add    BYTE PTR [rax],al
   14000fc50:	add    DWORD PTR [rax],eax
   14000fc52:	add    BYTE PTR [rax],al
   14000fc54:	add    BYTE PTR [rax],al
   14000fc56:	add    BYTE PTR [rax],al
   14000fc58:	add    al,BYTE PTR [rax]
	...
   14000fc66:	add    BYTE PTR [rax],al
   14000fc68:	(bad)  
   14000fc69:	add    BYTE PTR [rax],al
   14000fc6b:	add    BYTE PTR [rdi+0x0],ah
   14000fc6e:	add    BYTE PTR [rax],al
   14000fc70:	add    BYTE PTR [rax],al
   14000fc72:	add    BYTE PTR [rax],al
   14000fc74:	(bad)  
   14000fc75:	(bad)  
   14000fc76:	(bad)  
   14000fc77:	(bad)  
   14000fc78:	(bad)  
   14000fc79:	(bad)  
   14000fc7a:	(bad)  
   14000fc7b:	jmp    QWORD PTR [rax]
   14000fc7d:	add    BYTE PTR [rax],al
   14000fc7f:	add    BYTE PTR [rax+0x1000000],al
   14000fc85:	add    BYTE PTR [rax],al
   14000fc87:	add    BYTE PTR [rcx],al
   14000fc89:	add    BYTE PTR [rax],al
   14000fc8b:	add    BYTE PTR [rax],al
   14000fc8d:	add    BYTE PTR [rax],al
   14000fc8f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000fc93:	add    BYTE PTR [rcx+rax*1+0x0],cl
   14000fc97:	add    al,cl
   14000fc99:	add    BYTE PTR [rax],al
   14000fc9b:	add    bh,bh
   14000fc9d:	(bad)  
   14000fc9e:	(bad)  
   14000fc9f:	dec    DWORD PTR [rdi]
   14000fca1:	add    BYTE PTR [rax],al
   14000fca3:	add    BYTE PTR [rbx+rax*1],bl
   14000fca6:	add    BYTE PTR [rax],al
   14000fca8:	or     al,0x0
   14000fcaa:	add    BYTE PTR [rax],al
   14000fcac:	(bad)  
   14000fcad:	(bad)  
   14000fcae:	(bad)  
   14000fcaf:	dec    DWORD PTR [rdi]
   14000fcb1:	add    BYTE PTR [rax],al
   14000fcb3:	add    BYTE PTR [rax],ch
   14000fcb5:	add    eax,DWORD PTR [rax]
   14000fcb7:	add    BYTE PTR [rax+rax*1],bl
   14000fcba:	add    BYTE PTR [rax],al
   14000fcbc:	(bad)  
   14000fcbd:	(bad)  
   14000fcbe:	(bad)  
   14000fcbf:	dec    DWORD PTR [rdi]
   14000fcc1:	add    BYTE PTR [rax],al
   14000fcc3:	add    BYTE PTR [rbx+rax*1],cl
   14000fcc6:	add    BYTE PTR [rax],al
   14000fcc8:	adc    BYTE PTR [rax],al
   14000fcca:	add    BYTE PTR [rax],al
   14000fccc:	(bad)  
   14000fccd:	(bad)  
   14000fcce:	(bad)  
   14000fccf:	dec    DWORD PTR [rdi]
   14000fcd1:	add    BYTE PTR [rax],al
   14000fcd3:	add    BYTE PTR [rdx+rax*1],dl
   14000fcd6:	add    BYTE PTR [rax],al
   14000fcd8:	add    BYTE PTR [rax],0x0
   14000fcdb:	add    bh,bh
   14000fcdd:	(bad)  
   14000fcde:	(bad)  
   14000fcdf:	dec    DWORD PTR [rdi]
   14000fce1:	add    BYTE PTR [rax],al
   14000fce3:	add    BYTE PTR [rdx+rax*1+0x780000],dl
   14000fcea:	add    BYTE PTR [rax],al
   14000fcec:	(bad)  
   14000fced:	(bad)  
   14000fcee:	(bad)  
   14000fcef:	dec    DWORD PTR [rdi]
   14000fcf1:	add    BYTE PTR [rax],al
   14000fcf3:	add    BYTE PTR [rbx+rax*1+0x0],al
   14000fcf7:	add    BYTE PTR [rax],al
   14000fcf9:	add    al,BYTE PTR [rax]
   14000fcfb:	add    bh,bh
   14000fcfd:	(bad)  
   14000fcfe:	(bad)  
   14000fcff:	dec    DWORD PTR [rdi]
   14000fd01:	add    BYTE PTR [rax],al
   14000fd03:	add    BYTE PTR [rbp+rax*1+0x0],al
   14000fd07:	add    al,cl
   14000fd09:	add    BYTE PTR [rax],al
   14000fd0b:	add    bh,bh
   14000fd0d:	(bad)  
   14000fd0e:	(bad)  
   14000fd0f:	dec    DWORD PTR [rdi]
   14000fd11:	add    BYTE PTR [rax],al
   14000fd13:	add    BYTE PTR [rsi+rax*1],cl
   14000fd16:	add    BYTE PTR [rax],al
   14000fd18:	jo     0x14000fd1a
   14000fd1a:	add    BYTE PTR [rax],al
   14000fd1c:	(bad)  
   14000fd1d:	(bad)  
   14000fd1e:	(bad)  
   14000fd1f:	dec    DWORD PTR [rdi]
   14000fd21:	add    BYTE PTR [rax],al
   14000fd23:	add    bh,bh
   14000fd25:	(bad)  
   14000fd26:	(bad)  
   14000fd27:	inc    DWORD PTR [rax]
   14000fd29:	add    BYTE PTR [rax],al
   14000fd2b:	add    bh,bh
   14000fd2d:	(bad)  
   14000fd2e:	(bad)  
   14000fd2f:	dec    DWORD PTR [rdi]
   14000fd31:	add    BYTE PTR [rax],al
   14000fd33:	add    bh,bh
   14000fd35:	(bad)  
   14000fd36:	(bad)  
   14000fd37:	inc    DWORD PTR [rax]
   14000fd39:	add    BYTE PTR [rax],al
   14000fd3b:	add    bh,bh
   14000fd3d:	(bad)  
   14000fd3e:	(bad)  
   14000fd3f:	dec    DWORD PTR [rdi]
   14000fd41:	add    BYTE PTR [rax],al
   14000fd43:	add    bh,bh
   14000fd45:	(bad)  
   14000fd46:	(bad)  
   14000fd47:	inc    DWORD PTR [rax]
   14000fd49:	add    BYTE PTR [rax],al
   14000fd4b:	add    bh,bh
   14000fd4d:	(bad)  
   14000fd4e:	(bad)  
   14000fd4f:	dec    DWORD PTR [rdi]
   14000fd51:	add    BYTE PTR [rax],al
   14000fd53:	add    bh,bh
   14000fd55:	(bad)  
   14000fd56:	(bad)  
   14000fd57:	inc    DWORD PTR [rax]
   14000fd59:	add    BYTE PTR [rax],al
   14000fd5b:	add    bh,bh
   14000fd5d:	(bad)  
   14000fd5e:	(bad)  
   14000fd5f:	dec    DWORD PTR [rdi]
   14000fd61:	add    BYTE PTR [rax],al
   14000fd63:	add    bh,bh
   14000fd65:	(bad)  
   14000fd66:	(bad)  
   14000fd67:	inc    DWORD PTR [rax]
   14000fd69:	add    BYTE PTR [rax],al
   14000fd6b:	add    bh,bh
   14000fd6d:	(bad)  
   14000fd6e:	(bad)  
   14000fd6f:	dec    DWORD PTR [rdi]
   14000fd71:	add    BYTE PTR [rax],al
   14000fd73:	add    bh,bh
   14000fd75:	(bad)  
   14000fd76:	(bad)  
   14000fd77:	inc    DWORD PTR [rax]
   14000fd79:	add    BYTE PTR [rax],al
   14000fd7b:	add    bh,bh
   14000fd7d:	(bad)  
   14000fd7e:	(bad)  
   14000fd7f:	dec    DWORD PTR [rdi]
   14000fd81:	add    BYTE PTR [rax],al
   14000fd83:	add    BYTE PTR [rip+0x7c000042],ah        # 0x1bc00fdcb
   14000fd89:	(bad)  
	...
   14000fd92:	add    BYTE PTR [rax],al
   14000fd94:	add    eax,DWORD PTR [rax]
	...
   14000fdae:	add    BYTE PTR [rax],al
   14000fdb0:	sbb    BYTE PTR [rax],al
   14000fdb2:	add    BYTE PTR [rax],al
   14000fdb4:	add    al,BYTE PTR [rax]
   14000fdb6:	add    BYTE PTR [rax],al
   14000fdb8:	sbb    al,0x0
   14000fdba:	add    BYTE PTR [rax],al
   14000fdbc:	add    BYTE PTR [rax],al
   14000fdbe:	add    BYTE PTR [rax],al
   14000fdc0:	and    BYTE PTR [rax],al
	...
   14000fdca:	add    BYTE PTR [rax],al
   14000fdcc:	(bad)  
   14000fdcd:	(bad)  
   14000fdce:	(bad)  
   14000fdcf:	inc    DWORD PTR [rcx]
   14000fdd1:	add    BYTE PTR [rax],al
   14000fdd3:	add    BYTE PTR [rax],cl
	...
   14000fde1:	add    BYTE PTR [rax],al
   14000fde3:	add    bh,bh
   14000fde5:	(bad)  
   14000fde6:	(bad)  
   14000fde7:	push   QWORD PTR [rdx+rax*2]
   14000fdea:	add    DWORD PTR [rax],eax
   14000fdec:	jl     0x14000fdf4
	...
   14000fdf6:	add    BYTE PTR [rax],al
   14000fdf8:	add    eax,DWORD PTR [rax]
   14000fdfa:	add    BYTE PTR [rax],al
   14000fdfc:	add    BYTE PTR [rax],al
   14000fdfe:	add    BYTE PTR [rax],al
   14000fe00:	add    DWORD PTR [rax],eax
	...
   14000fe12:	add    BYTE PTR [rax],al
   14000fe14:	(bad)  
   14000fe15:	add    BYTE PTR [rax],al
   14000fe17:	add    BYTE PTR [rax+0x11],al
   14000fe1a:	add    BYTE PTR [rax],al
   14000fe1c:	xor    al,0x0
   14000fe1e:	add    BYTE PTR [rax],al
   14000fe20:	add    BYTE PTR [rax],al
   14000fe22:	add    BYTE PTR [rax],al
   14000fe24:	xor    al,0x0
	...
   14000fe2e:	add    BYTE PTR [rax],al
   14000fe30:	(bad)  
   14000fe31:	(bad)  
   14000fe32:	(bad)  
   14000fe33:	inc    DWORD PTR [rcx]
   14000fe35:	add    BYTE PTR [rax+0x0],al
   14000fe38:	or     BYTE PTR [rax],al
   14000fe3a:	add    BYTE PTR [rax],al
   14000fe3c:	add    DWORD PTR [rax],eax
   14000fe3e:	add    BYTE PTR [rax],al
   14000fe40:	add    al,BYTE PTR [rax]
   14000fe42:	(bad)  
   14000fe43:	add    BYTE PTR [rax],al
   14000fe45:	add    BYTE PTR [rax],al
   14000fe47:	add    bh,bh
   14000fe49:	(bad)  
   14000fe4a:	(bad)  
   14000fe4b:	(bad)  
   14000fe4c:	(bad)  
   14000fe4d:	(bad)  
   14000fe4e:	(bad)  
   14000fe4f:	(bad)  
   14000fe50:	(bad)  
   14000fe51:	(bad)  
   14000fe52:	(bad)  
   14000fe53:	dec    DWORD PTR [rax+0x0]
   14000fe56:	add    BYTE PTR [rax],al
   14000fe58:	(bad)  
   14000fe59:	(bad)  
   14000fe5a:	(bad)  
   14000fe5b:	(bad)  
   14000fe5c:	(bad)  
   14000fe5d:	(bad)  
   14000fe5e:	(bad)  
   14000fe5f:	(bad)  
   14000fe60:	(bad)  
   14000fe61:	(bad)  
   14000fe62:	(bad)  
   14000fe63:	jmp    QWORD PTR [rax+0x0]
   14000fe66:	add    BYTE PTR [rax],al
   14000fe68:	(bad)  
   14000fe69:	(bad)  
   14000fe6a:	(bad)  
   14000fe6b:	(bad)  
   14000fe6c:	(bad)  
   14000fe6d:	(bad)  
   14000fe6e:	(bad)  
   14000fe6f:	(bad)  
   14000fe70:	(bad)  
   14000fe71:	(bad)  
   14000fe72:	(bad)  
   14000fe73:	(bad)  
   14000fe74:	(bad)  
   14000fe75:	(bad)  
   14000fe76:	(bad)  
   14000fe77:	inc    DWORD PTR [rax]
   14000fe79:	add    BYTE PTR [rax],al
   14000fe7b:	add    bh,bh
   14000fe7d:	(bad)  
   14000fe7e:	(bad)  
   14000fe7f:	(bad)  
   14000fe80:	(bad)  
   14000fe81:	(bad)  
   14000fe82:	(bad)  
   14000fe83:	(bad)  
   14000fe84:	(bad)  
   14000fe85:	(bad)  
   14000fe86:	(bad)  
   14000fe87:	(bad)  
   14000fe88:	(bad)  
   14000fe89:	(bad)  
   14000fe8a:	(bad)  
   14000fe8b:	(bad)  
   14000fe8c:	(bad)  
   14000fe8d:	(bad)  
   14000fe8e:	(bad)  
   14000fe8f:	(bad)  
   14000fe90:	(bad)  
   14000fe91:	(bad)  
   14000fe92:	(bad)  
   14000fe93:	push   QWORD PTR [rax]
   14000fe95:	add    BYTE PTR [rax],al
   14000fe97:	add    BYTE PTR [rax],bl
   14000fe99:	add    BYTE PTR [rax],al
   14000fe9b:	add    bh,bh
   14000fe9d:	(bad)  
   14000fe9e:	(bad)  
   14000fe9f:	(bad)  
   14000fea0:	(bad)  
   14000fea1:	(bad)  
   14000fea2:	(bad)  
   14000fea3:	(bad)  
   14000fea4:	(bad)  
   14000fea5:	(bad)  
   14000fea6:	(bad)  
   14000fea7:	(bad)  
   14000fea8:	(bad)  
   14000fea9:	(bad)  
   14000feaa:	(bad)  
   14000feab:	(bad)  
   14000feac:	(bad)  
   14000fead:	(bad)  
   14000feae:	(bad)  
   14000feaf:	(bad)  
   14000feb0:	(bad)  
   14000feb1:	(bad)  
   14000feb2:	(bad)  
   14000feb3:	(bad)  
   14000feb4:	(bad)  
   14000feb5:	(bad)  
   14000feb6:	(bad)  
   14000feb7:	(bad)  
   14000feb8:	(bad)  
   14000feb9:	(bad)  
   14000feba:	(bad)  
   14000febb:	(bad)  
   14000febc:	(bad)  
   14000febd:	(bad)  
   14000febe:	(bad)  
   14000febf:	(bad)  
   14000fec0:	(bad)  
   14000fec1:	(bad)  
   14000fec2:	(bad)  
   14000fec3:	(bad)  
   14000fec4:	(bad)  
   14000fec5:	(bad)  
   14000fec6:	(bad)  
   14000fec7:	(bad)  
   14000fec8:	(bad)  
   14000fec9:	(bad)  
   14000feca:	(bad)  
   14000fecb:	dec    DWORD PTR [rax]
   14000fecd:	cpuid  
   14000fecf:	mov    al,0x8a
   14000fed1:	rex.WXB fimul WORD PTR [r11-0x69]
   14000fed5:	xor    eax,0xa25fc8c
   14000feda:	imul   ecx,DWORD PTR [rbx-0x2],0xffffffff
   14000fede:	(bad)  
   14000fedf:	(bad)  
   14000fee0:	(bad)  
   14000fee1:	(bad)  
   14000fee2:	(bad)  
   14000fee3:	call   FWORD PTR [rdi+0x33aac100]
   14000fee9:	stos   DWORD PTR es:[rdi],eax
   14000feea:	stc    
   14000feeb:	rex.W (bad) 
   14000feed:	and    DWORD PTR [rdi+0x5b],edi
   14000fef0:	mov    BYTE PTR [rdx+0x6a],al
   14000fef3:	add    BYTE PTR cs:[rax],al
   14000fef6:	add    BYTE PTR [rax],al
   14000fef8:	(bad)  
   14000fef9:	(bad)  
   14000fefa:	(bad)  
   14000fefb:	push   QWORD PTR [rax]
   14000fefd:	add    al,0x2
   14000feff:	add    BYTE PTR [rax],al
   14000ff01:	add    BYTE PTR [rax],al
   14000ff03:	add    al,al
   14000ff05:	add    BYTE PTR [rax],al
   14000ff07:	add    BYTE PTR [rax],al
   14000ff09:	add    BYTE PTR [rax],al
   14000ff0b:	rex.RX add r8b,BYTE PTR [rax]
   14000ff0e:	add    BYTE PTR [rax],al
   14000ff10:	(bad)  
   14000ff11:	(bad)  
   14000ff12:	(bad)  
   14000ff13:	inc    DWORD PTR [rax]
   14000ff15:	add    al,0x2
   14000ff17:	add    BYTE PTR [rax],al
   14000ff19:	add    BYTE PTR [rax],al
   14000ff1b:	add    al,al
   14000ff1d:	add    BYTE PTR [rax],al
   14000ff1f:	add    BYTE PTR [rax],al
   14000ff21:	add    BYTE PTR [rax],al
   14000ff23:	rex.RX add DWORD PTR [rax],r8d
   14000ff26:	add    BYTE PTR [rax],al
   14000ff28:	(bad)  
   14000ff29:	(bad)  
   14000ff2a:	(bad)  
   14000ff2b:	dec    DWORD PTR [rsi+rdx*8+0x34]
   14000ff2f:	rex.RX (bad) 
   14000ff31:	mov    bl,0xf9
   14000ff33:	rex.WX xchg rsp,rax
   14000ff35:	mov    esp,0xb1a786fb
   14000ff3a:	mov    ?,edi
   14000ff3c:	add    BYTE PTR fs:[rax],al
   14000ff3f:	add    bh,bh
   14000ff41:	(bad)  
   14000ff42:	(bad)  
   14000ff43:	jmp    QWORD PTR [rax+rax*1+0x0]
   14000ff47:	add    BYTE PTR [rcx],al
   14000ff49:	add    BYTE PTR [rax],al
   14000ff4b:	add    bh,bh
   14000ff4d:	(bad)  
   14000ff4e:	(bad)  
   14000ff4f:	(bad)  
   14000ff50:	(bad)  
   14000ff51:	(bad)  
   14000ff52:	(bad)  
   14000ff53:	inc    DWORD PTR [rax]
   14000ff55:	add    BYTE PTR [rcx],al
   14000ff57:	add    eax,DWORD PTR [rax]
   14000ff59:	add    BYTE PTR [rax],al
   14000ff5b:	add    BYTE PTR [rax+0x0],cl
   14000ff5e:	add    BYTE PTR [rax],al
   14000ff60:	xor    BYTE PTR [rax],al
   14000ff62:	add    BYTE PTR [rax],al
   14000ff64:	add    BYTE PTR [rax],al
   14000ff66:	add    BYTE PTR [rax],al
   14000ff68:	add    al,BYTE PTR [rax]
   14000ff6a:	add    BYTE PTR [rax],al
   14000ff6c:	(bad)  
   14000ff6d:	add    BYTE PTR [rbx+0x74],dh
   14000ff70:	outs   dx,DWORD PTR fs:[rsi]
   14000ff72:	ins    BYTE PTR es:[rdi],dx
   14000ff73:	xor    ch,BYTE PTR gs:[rsi]
   14000ff76:	je     0x14000ffe4
   14000ff78:	(bad)  
   14000ff79:	push   rdi
   14000ff7a:	push   rdi
   14000ff7b:	push   rdi
   14000ff7c:	(bad)  
   14000ff7d:	(bad)  
   14000ff7e:	(bad)  
   14000ff7f:	(bad)  
   14000ff80:	(bad)  
   14000ff81:	(bad)  
   14000ff82:	(bad)  
   14000ff83:	(bad)  
   14000ff84:	(bad)  
   14000ff85:	(bad)  
   14000ff86:	(bad)  
   14000ff87:	(bad)  
   14000ff88:	(bad)  
   14000ff89:	(bad)  
   14000ff8a:	(bad)  
   14000ff8b:	(bad)  
   14000ff8c:	(bad)  
   14000ff8d:	(bad)  
   14000ff8e:	(bad)  
   14000ff8f:	(bad)  
   14000ff90:	(bad)  
   14000ff91:	(bad)  
   14000ff92:	(bad)  
   14000ff93:	(bad)  
   14000ff94:	(bad)  
   14000ff95:	(bad)  
   14000ff96:	(bad)  
   14000ff97:	(bad)  
   14000ff98:	(bad)  
   14000ff99:	(bad)  
   14000ff9a:	(bad)  
   14000ff9b:	(bad)  
   14000ff9c:	(bad)  
   14000ff9d:	(bad)  
   14000ff9e:	(bad)  
   14000ff9f:	(bad)  
   14000ffa0:	(bad)  
   14000ffa1:	(bad)  
   14000ffa2:	(bad)  
   14000ffa3:	(bad)  
   14000ffa4:	(bad)  
   14000ffa5:	(bad)  
   14000ffa6:	(bad)  
   14000ffa7:	(bad)  
   14000ffa8:	(bad)  
   14000ffa9:	(bad)  
   14000ffaa:	(bad)  
   14000ffab:	(bad)  
   14000ffac:	(bad)  
   14000ffad:	(bad)  
   14000ffae:	(bad)  
   14000ffaf:	(bad)  
   14000ffb0:	(bad)  
   14000ffb1:	(bad)  
   14000ffb2:	(bad)  
   14000ffb3:	(bad)  
   14000ffb4:	(bad)  
   14000ffb5:	(bad)  
   14000ffb6:	(bad)  
   14000ffb7:	(bad)  
   14000ffb8:	(bad)  
   14000ffb9:	(bad)  
   14000ffba:	(bad)  
   14000ffbb:	(bad)  
   14000ffbc:	(bad)  
   14000ffbd:	(bad)  
   14000ffbe:	(bad)  
   14000ffbf:	(bad)  
   14000ffc0:	(bad)  
   14000ffc1:	(bad)  
   14000ffc2:	(bad)  
   14000ffc3:	(bad)  
   14000ffc4:	(bad)  
   14000ffc5:	(bad)  
   14000ffc6:	(bad)  
   14000ffc7:	(bad)  
   14000ffc8:	(bad)  
   14000ffc9:	(bad)  
   14000ffca:	(bad)  
   14000ffcb:	(bad)  
   14000ffcc:	(bad)  
   14000ffcd:	(bad)  
   14000ffce:	(bad)  
   14000ffcf:	(bad)  
   14000ffd0:	(bad)  
   14000ffd1:	(bad)  
   14000ffd2:	(bad)  
   14000ffd3:	(bad)  
   14000ffd4:	(bad)  
   14000ffd5:	(bad)  
   14000ffd6:	(bad)  
   14000ffd7:	(bad)  
   14000ffd8:	(bad)  
   14000ffd9:	(bad)  
   14000ffda:	(bad)  
   14000ffdb:	(bad)  
   14000ffdc:	(bad)  
   14000ffdd:	(bad)  
   14000ffde:	(bad)  
   14000ffdf:	(bad)  
   14000ffe0:	(bad)  
   14000ffe1:	(bad)  
   14000ffe2:	(bad)  
   14000ffe3:	(bad)  
   14000ffe4:	(bad)  
   14000ffe5:	(bad)  
   14000ffe6:	(bad)  
   14000ffe7:	(bad)  
   14000ffe8:	(bad)  
   14000ffe9:	(bad)  
   14000ffea:	(bad)  
   14000ffeb:	(bad)  
   14000ffec:	(bad)  
   14000ffed:	(bad)  
   14000ffee:	(bad)  
   14000ffef:	(bad)  
   14000fff0:	(bad)  
   14000fff1:	(bad)  
   14000fff2:	(bad)  
   14000fff3:	(bad)  
   14000fff4:	(bad)  
   14000fff5:	(bad)  
   14000fff6:	(bad)  
   14000fff7:	(bad)  
   14000fff8:	(bad)  
   14000fff9:	(bad)  
   14000fffa:	(bad)  
   14000fffb:	(bad)  
   14000fffc:	(bad)  
   14000fffd:	(bad)  
   14000fffe:	(bad)  
   14000ffff:	(bad)  
   140010000:	(bad)  
   140010001:	(bad)  
   140010002:	(bad)  
   140010003:	call   QWORD PTR [rax+0x0]
   140010006:	add    BYTE PTR [rax],al
   140010008:	(bad)  
   140010009:	(bad)  
   14001000a:	(bad)  
   14001000b:	(bad)  
   14001000c:	(bad)  
   14001000d:	(bad)  
   14001000e:	(bad)  
   14001000f:	(bad)  
   140010010:	(bad)  
   140010011:	(bad)  
   140010012:	(bad)  
   140010013:	(bad)  
   140010014:	(bad)  
   140010015:	(bad)  
   140010016:	(bad)  
   140010017:	(bad)  
   140010018:	(bad)  
   140010019:	(bad)  
   14001001a:	(bad)  
   14001001b:	(bad)  
   14001001c:	(bad)  
   14001001d:	(bad)  
   14001001e:	(bad)  
   14001001f:	(bad)  
   140010020:	(bad)  
   140010021:	(bad)  
   140010022:	(bad)  
   140010023:	inc    DWORD PTR [rax]
   140010025:	add    BYTE PTR [rax],al
   140010027:	add    bh,bh
   140010029:	(bad)  
   14001002a:	(bad)  
   14001002b:	(bad)  
   14001002c:	(bad)  
   14001002d:	(bad)  
   14001002e:	(bad)  
   14001002f:	(bad)  
   140010030:	(bad)  
   140010031:	(bad)  
   140010032:	(bad)  
   140010033:	(bad)  
   140010034:	(bad)  
   140010035:	(bad)  
   140010036:	(bad)  
   140010037:	(bad)  
   140010038:	(bad)  
   140010039:	(bad)  
   14001003a:	(bad)  
   14001003b:	(bad)  
   14001003c:	(bad)  
   14001003d:	(bad)  
   14001003e:	(bad)  
   14001003f:	(bad)  
   140010040:	(bad)  
   140010041:	(bad)  
   140010042:	(bad)  
   140010043:	(bad)  
   140010044:	(bad)  
   140010045:	(bad)  
   140010046:	(bad)  
   140010047:	(bad)  
   140010048:	(bad)  
   140010049:	(bad)  
   14001004a:	(bad)  
   14001004b:	(bad)  
   14001004c:	(bad)  
   14001004d:	(bad)  
   14001004e:	(bad)  
   14001004f:	(bad)  
   140010050:	(bad)  
   140010051:	(bad)  
   140010052:	(bad)  
   140010053:	(bad)  
   140010054:	(bad)  
   140010055:	(bad)  
   140010056:	(bad)  
   140010057:	(bad)  
   140010058:	(bad)  
   140010059:	(bad)  
   14001005a:	(bad)  
   14001005b:	(bad)  
   14001005c:	(bad)  
   14001005d:	(bad)  
   14001005e:	(bad)  
   14001005f:	(bad)  
   140010060:	(bad)  
   140010061:	(bad)  
   140010062:	(bad)  
   140010063:	(bad)  
   140010064:	(bad)  
   140010065:	(bad)  
   140010066:	(bad)  
   140010067:	(bad)  
   140010068:	(bad)  
   140010069:	(bad)  
   14001006a:	(bad)  
   14001006b:	(bad)  
   14001006c:	(bad)  
   14001006d:	(bad)  
   14001006e:	(bad)  
   14001006f:	(bad)  
   140010070:	(bad)  
   140010071:	(bad)  
   140010072:	(bad)  
   140010073:	(bad)  
   140010074:	(bad)  
   140010075:	(bad)  
   140010076:	(bad)  
   140010077:	(bad)  
   140010078:	js     0x14001007a
   14001007a:	add    BYTE PTR [rax],al
   14001007c:	(bad)  
   14001007d:	(bad)  
   14001007e:	(bad)  
   14001007f:	(bad)  
   140010080:	(bad)  
   140010081:	(bad)  
   140010082:	(bad)  
   140010083:	(bad)  
   140010084:	(bad)  
   140010085:	(bad)  
   140010086:	(bad)  
   140010087:	(bad)  
   140010088:	(bad)  
   140010089:	(bad)  
   14001008a:	(bad)  
   14001008b:	(bad)  
   14001008c:	(bad)  
   14001008d:	(bad)  
   14001008e:	(bad)  
   14001008f:	(bad)  
   140010090:	(bad)  
   140010091:	(bad)  
   140010092:	(bad)  
   140010093:	(bad)  
   140010094:	(bad)  
   140010095:	(bad)  
   140010096:	(bad)  
   140010097:	(bad)  
   140010098:	(bad)  
   140010099:	(bad)  
   14001009a:	(bad)  
   14001009b:	dec    DWORD PTR [rax+rax*1-0x10000]
   1400100a2:	(bad)  
   1400100a3:	(bad)  
   1400100a4:	(bad)  
   1400100a5:	(bad)  
   1400100a6:	(bad)  
   1400100a7:	(bad)  
   1400100a8:	(bad)  
   1400100a9:	(bad)  
   1400100aa:	(bad)  
   1400100ab:	(bad)  
   1400100ac:	(bad)  
   1400100ad:	(bad)  
   1400100ae:	(bad)  
   1400100af:	push   QWORD PTR [rax+rax*1]
   1400100b2:	add    BYTE PTR [rax],al
   1400100b4:	(bad)  
   1400100b5:	(bad)  
   1400100b6:	(bad)  
   1400100b7:	(bad)  
   1400100b8:	(bad)  
   1400100b9:	(bad)  
   1400100ba:	(bad)  
   1400100bb:	(bad)  
   1400100bc:	(bad)  
   1400100bd:	(bad)  
   1400100be:	(bad)  
   1400100bf:	(bad)  
   1400100c0:	(bad)  
   1400100c1:	(bad)  
   1400100c2:	(bad)  
   1400100c3:	(bad)  
   1400100c4:	(bad)  
   1400100c5:	(bad)  
   1400100c6:	(bad)  
   1400100c7:	(bad)  
   1400100c8:	(bad)  
   1400100c9:	(bad)  
   1400100ca:	(bad)  
   1400100cb:	(bad)  
   1400100cc:	(bad)  
   1400100cd:	(bad)  
   1400100ce:	(bad)  
   1400100cf:	(bad)  
   1400100d0:	(bad)  
   1400100d1:	(bad)  
   1400100d2:	(bad)  
   1400100d3:	(bad)  
   1400100d4:	(bad)  
   1400100d5:	(bad)  
   1400100d6:	(bad)  
   1400100d7:	(bad)  
   1400100d8:	(bad)  
   1400100d9:	(bad)  
   1400100da:	(bad)  
   1400100db:	(bad)  
   1400100dc:	(bad)  
   1400100dd:	(bad)  
   1400100de:	(bad)  
   1400100df:	(bad)  
   1400100e0:	(bad)  
   1400100e1:	(bad)  
   1400100e2:	(bad)  
   1400100e3:	(bad)  
   1400100e4:	(bad)  
   1400100e5:	(bad)  
   1400100e6:	(bad)  
   1400100e7:	(bad)  
   1400100e8:	(bad)  
   1400100e9:	(bad)  
   1400100ea:	(bad)  
   1400100eb:	(bad)  
   1400100ec:	(bad)  
   1400100ed:	(bad)  
   1400100ee:	(bad)  
   1400100ef:	(bad)  
   1400100f0:	(bad)  
   1400100f1:	(bad)  
   1400100f2:	(bad)  
   1400100f3:	(bad)  
   1400100f4:	(bad)  
   1400100f5:	(bad)  
   1400100f6:	(bad)  
   1400100f7:	(bad)  
   1400100f8:	(bad)  
   1400100f9:	(bad)  
   1400100fa:	(bad)  
   1400100fb:	(bad)  
   1400100fc:	(bad)  
   1400100fd:	(bad)  
   1400100fe:	(bad)  
   1400100ff:	(bad)  
   140010100:	(bad)  
   140010101:	(bad)  
   140010102:	(bad)  
   140010103:	(bad)  
   140010104:	(bad)  
   140010105:	(bad)  
   140010106:	(bad)  
   140010107:	(bad)  
   140010108:	(bad)  
   140010109:	(bad)  
   14001010a:	(bad)  
   14001010b:	(bad)  
   14001010c:	(bad)  
   14001010d:	(bad)  
   14001010e:	(bad)  
   14001010f:	(bad)  
   140010110:	(bad)  
   140010111:	(bad)  
   140010112:	(bad)  
   140010113:	(bad)  
   140010114:	(bad)  
   140010115:	(bad)  
   140010116:	(bad)  
   140010117:	(bad)  
   140010118:	(bad)  
   140010119:	(bad)  
   14001011a:	(bad)  
   14001011b:	(bad)  
   14001011c:	(bad)  
   14001011d:	(bad)  
   14001011e:	(bad)  
   14001011f:	(bad)  
   140010120:	(bad)  
   140010121:	(bad)  
   140010122:	(bad)  
   140010123:	jmp    FWORD PTR [rax-0x1000000]
   140010129:	(bad)  
   14001012a:	(bad)  
   14001012b:	(bad)  
   14001012c:	(bad)  
   14001012d:	(bad)  
   14001012e:	(bad)  
   14001012f:	(bad)  
   140010130:	(bad)  
   140010131:	(bad)  
   140010132:	(bad)  
   140010133:	(bad)  
   140010134:	(bad)  
   140010135:	(bad)  
   140010136:	(bad)  
   140010137:	(bad)  
   140010138:	(bad)  
   140010139:	(bad)  
   14001013a:	(bad)  
   14001013b:	(bad)  
   14001013c:	(bad)  
   14001013d:	(bad)  
   14001013e:	(bad)  
   14001013f:	(bad)  
   140010140:	(bad)  
   140010141:	(bad)  
   140010142:	(bad)  
   140010143:	(bad)  
   140010144:	(bad)  
   140010145:	(bad)  
   140010146:	(bad)  
   140010147:	call   FWORD PTR [rax+rax*1]
   14001014a:	add    BYTE PTR [rax],al
   14001014c:	(bad)  
   14001014d:	(bad)  
   14001014e:	(bad)  
   14001014f:	(bad)  
   140010150:	(bad)  
   140010151:	(bad)  
   140010152:	(bad)  
   140010153:	(bad)  
   140010154:	(bad)  
   140010155:	(bad)  
   140010156:	(bad)  
   140010157:	(bad)  
   140010158:	(bad)  
   140010159:	(bad)  
   14001015a:	(bad)  
   14001015b:	(bad)  
   14001015c:	(bad)  
   14001015d:	(bad)  
   14001015e:	(bad)  
   14001015f:	(bad)  
   140010160:	(bad)  
   140010161:	(bad)  
   140010162:	(bad)  
   140010163:	(bad)  
   140010164:	(bad)  
   140010165:	(bad)  
   140010166:	(bad)  
   140010167:	(bad)  
   140010168:	(bad)  
   140010169:	(bad)  
   14001016a:	(bad)  
   14001016b:	(bad)  
   14001016c:	(bad)  
   14001016d:	(bad)  
   14001016e:	(bad)  
   14001016f:	(bad)  
   140010170:	(bad)  
   140010171:	(bad)  
   140010172:	(bad)  
   140010173:	(bad)  
   140010174:	(bad)  
   140010175:	(bad)  
   140010176:	(bad)  
   140010177:	(bad)  
   140010178:	(bad)  
   140010179:	(bad)  
   14001017a:	(bad)  
   14001017b:	(bad)  
   14001017c:	(bad)  
   14001017d:	(bad)  
   14001017e:	(bad)  
   14001017f:	(bad)  
   140010180:	(bad)  
   140010181:	(bad)  
   140010182:	(bad)  
   140010183:	dec    DWORD PTR [rip+0x54a52a00]        # 0x194a62b89
   140010189:	push   rbx
   14001018a:	push   rdx
   14001018b:	rex.R
   14001018c:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x62694c72
   140010195:	push   rdi
   140010196:	push   rdi
   140010197:	push   rdi
   140010198:	add    BYTE PTR [rax],al
   14001019a:	add    BYTE PTR [rax],al
   14001019c:	(bad)  
   14001019d:	(bad)  
   14001019e:	(bad)  
   14001019f:	dec    DWORD PTR [rax+rdi*1]
   1400101a2:	jae    0x140010184
   1400101a4:	push   rsp
   1400101a5:	push   rbx
   1400101a6:	push   rdx
   1400101a7:	rex.R push rbx
   1400101a9:	gs je  0x140010220
   1400101ac:	imul   ebp,DWORD PTR [rsi+0x67],0x6473
   1400101b3:	add    bh,bh
   1400101b5:	(bad)  
   1400101b6:	(bad)  
   1400101b7:	dec    DWORD PTR [rip+0x49b7cd38]        # 0x189b8cef5
   1400101bd:	push   rsp
   1400101be:	push   rbx
   1400101bf:	push   rdx
   1400101c0:	rex.R push rbx
   1400101c2:	gs je  0x140010239
   1400101c5:	imul   ebp,DWORD PTR [rsi+0x67],0x57575773
   1400101cc:	add    BYTE PTR fs:[rax],al
   1400101cf:	add    bh,bh
   1400101d1:	(bad)  
   1400101d2:	(bad)  
   1400101d3:	call   FWORD PTR [rax+rax*1]
   1400101d6:	movabs ds:0x6c6946445253549d,al
   1400101df:	je     0x140010246
   1400101e1:	jb     0x140010242
   1400101e3:	rex.B jo 0x140010256
   1400101e6:	ins    BYTE PTR es:[rdi],dx
   1400101e7:	jns    0x14001023b
   1400101e9:	gs ins DWORD PTR es:[rdi],dx
   1400101eb:	outs   dx,DWORD PTR ds:[rsi]
   1400101ec:	je     0x140010253
   1400101ee:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xffffff72
   1400101f7:	(bad)  
   1400101f8:	(bad)  
   1400101f9:	(bad)  
   1400101fa:	(bad)  
   1400101fb:	inc    DWORD PTR [rsi]
   1400101fd:	add    BYTE PTR [rdi+0x6c436224],bh
   140010203:	gs (bad) 
   140010205:	jb     0x14001025e
   140010207:	push   rdi
   140010208:	(bad)  
   140010209:	(bad)  
   14001020a:	(bad)  
   14001020b:	(bad)  
   14001020c:	(bad)  
   14001020d:	(bad)  
   14001020e:	(bad)  
   14001020f:	dec    DWORD PTR [rsi]
   140010211:	add    al,cl
   140010213:	je     0x140010265
   140010215:	jb     0x14001027c
   140010217:	data16 gs jb 0x140010280
   14001021b:	outs   dx,BYTE PTR ds:[rsi]
   14001021c:	movsxd esp,DWORD PTR [rbp+0x46]
   14001021f:	ins    BYTE PTR es:[rdi],dx
   140010220:	(bad)  
   140010221:	addr32 push rdi
   140010223:	push   rdi
   140010224:	(bad)  
   140010225:	(bad)  
   140010226:	(bad)  
   140010227:	(bad)  
   140010228:	(bad)  
   140010229:	(bad)  
   14001022a:	(bad)  
   14001022b:	call   QWORD PTR [rcx]
   14001022d:	add    dl,ch
   14001022f:	xor    BYTE PTR [rsi+0x6f],cl
   140010232:	je     0x14001029d
   140010234:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14001023a:	outs   dx,DWORD PTR ds:[rsi]
   14001023b:	outs   dx,BYTE PTR ds:[rsi]
   14001023c:	rex.RX ins BYTE PTR es:[rdi],dx
   14001023e:	(bad)  
   14001023f:	addr32 jae 0x140010299
   140010242:	push   rdi
   140010243:	push   rdi
   140010244:	(bad)  
   140010245:	add    BYTE PTR [rbx+rdx*2+0x52],dl
   140010249:	rex.R
   14001024a:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x62694c72
   140010253:	and    BYTE PTR [rcx],dh
   140010255:	xor    BYTE PTR cs:[rax],ah
   140010258:	push   rsp
   140010259:	jns    0x1400102cb
   14001025b:	and    BYTE PTR gs:[rcx+rbp*2+0x62],cl
   140010260:	jb     0x1400102c3
   140010262:	jb     0x1400102dd
   140010264:	adc    BYTE PTR [rax],al
   140010266:	push   rsp
   140010267:	push   rbx
   140010268:	push   rdx
   140010269:	rex.R
   14001026a:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6c432072
   140010273:	(bad)  
   140010274:	jae    0x1400102e9
   140010276:	push   rdi
   140010277:	push   rdi
   140010278:	(bad)  
   140010279:	add    BYTE PTR [rcx+0x54],cl
   14001027c:	push   rbx
   14001027d:	push   rdx
   14001027e:	rex.R push rbx
   140010280:	gs je  0x1400102f7
   140010283:	imul   ebp,DWORD PTR [rsi+0x67],0x6e492073
   14001028a:	je     0x1400102f1
   14001028c:	jb     0x1400102f4
   14001028e:	(bad)  
   14001028f:	movsxd esp,DWORD PTR [rbp+0x57]
   140010292:	push   rdi
   140010293:	push   rdi
   140010294:	sbb    al,0x0
   140010296:	push   rsp
   140010297:	push   rbx
   140010298:	push   rdx
   140010299:	rex.R
   14001029a:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x70415f72
   1400102a3:	jo     0x140010311
   1400102a5:	jns    0x1400102f9
   1400102a7:	gs ins DWORD PTR es:[rdi],dx
   1400102a9:	outs   dx,DWORD PTR ds:[rsi]
   1400102aa:	je     0x140010311
   1400102ac:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x44575772
   1400102b5:	add    BYTE PTR [rax],al
   1400102b7:	add    BYTE PTR [rax+rax*1+0x0],al
   1400102bb:	add    BYTE PTR [rcx],bl
   1400102bd:	add    BYTE PTR [rcx],bl
   1400102bf:	add    BYTE PTR [rax],0x0
   1400102c2:	add    BYTE PTR [rax],al
   1400102c4:	cmp    BYTE PTR [rax],al
   1400102c6:	add    BYTE PTR fs:[rcx],cl
   1400102c9:	add    al,0x0
   1400102cb:	add    BYTE PTR [rbx],al
   1400102cd:	add    BYTE PTR [rax],al
   1400102cf:	add    BYTE PTR [rax],al
   1400102d1:	add    BYTE PTR [rax],al
   1400102d3:	add    BYTE PTR [rax+0x0],dl
   1400102d6:	add    BYTE PTR [rax],al
   1400102d8:	add    eax,DWORD PTR [rax]
   1400102da:	add    eax,DWORD PTR [rax+0x78]
   1400102e0:	add    BYTE PTR [rax],al
   1400102e2:	add    BYTE PTR [rax],al
   1400102e4:	adc    eax,DWORD PTR [rax]
   1400102e6:	adc    eax,DWORD PTR [rax+0x8c]
   1400102ec:	add    BYTE PTR [rax],al
   1400102ee:	add    BYTE PTR [rax],al
   1400102f0:	adc    eax,DWORD PTR [rax]
   1400102f2:	adc    eax,DWORD PTR [rax+0xa8]
   1400102f8:	add    BYTE PTR [rax],al
   1400102fa:	add    BYTE PTR [rax],al
   1400102fc:	add    BYTE PTR [rax],al
   1400102fe:	add    ah,BYTE PTR [rax+0x50]
   140010301:	add    BYTE PTR [rax],al
   140010303:	add    BYTE PTR [rax],al
   140010305:	add    BYTE PTR [rax],al
   140010307:	add    ch,cl
   140010309:	dec    ch
   14001030b:	(bad)  
   14001030c:	call   0x140010311
   140010311:	add    BYTE PTR [rcx],al
   140010313:	add    BYTE PTR [rax],al
   140010315:	add    BYTE PTR [rax],al
   140010317:	add    BYTE PTR [rcx],dl
   140010319:	add    BYTE PTR [rax],al
   14001031b:	add    BYTE PTR [rax],al
   14001031d:	add    BYTE PTR [rax],al
   14001031f:	add    BYTE PTR [rdx],al
   140010321:	add    BYTE PTR [rax],al
   140010323:	add    BYTE PTR [rdx-0x3e8b2512],dh
   140010329:	movabs ds:0xa1540b954345d044,eax
   140010332:	cmp    bh,BYTE PTR [rbp+rbp*1+0x55]
   140010336:	mov    BYTE PTR [rcx-0x6a],al
   140010339:	rex.WRB or BYTE PTR [r9-0x3f5ff5c5],r9b
   140010340:	sub    DWORD PTR [rax+0x6d],ebx
   140010343:	add    BYTE PTR [eax],al
	...
   14001035a:	add    BYTE PTR [rax],al
   14001035c:	mov    BYTE PTR [rax],al
   14001035e:	add    BYTE PTR [rax],al
   140010360:	xor    BYTE PTR [rax],al
   140010362:	add    BYTE PTR [rax],al
   140010364:	mov    eax,0x8000000
   140010369:	add    BYTE PTR [rax],al
   14001036b:	add    al,al
   14001036d:	add    BYTE PTR [rax],al
   14001036f:	add    BYTE PTR [rsi],cl
   140010371:	add    BYTE PTR [rax],al
   140010373:	add    al,dl
   140010375:	add    BYTE PTR [rax],al
   140010377:	add    BYTE PTR [rax],cl
	...
   140010381:	add    BYTE PTR [rax],al
   140010383:	add    al,bl
   140010385:	add    BYTE PTR [rax],al
   140010387:	add    BYTE PTR [rax+rax*1],cl
   14001038a:	add    BYTE PTR [rax],al
   14001038c:	add    BYTE PTR [rax],al
   14001038e:	add    BYTE PTR [rax],al
   140010390:	push   rdx
   140010391:	add    BYTE PTR [rbp+0x0],al
   140010394:	rex.RXB add BYTE PTR [r9+0x0],r9b
   140010398:	push   rbx
   140010399:	add    BYTE PTR [rax+rax*1+0x52],dl
   14001039d:	add    BYTE PTR [rcx+0x0],bl
   1400103a0:	add    BYTE PTR [rax],al
   1400103a2:	push   rsp
   1400103a3:	add    BYTE PTR [rcx+0x0],bl
   1400103a6:	push   rax
   1400103a7:	add    BYTE PTR [rbp+0x0],al
   1400103aa:	rex.WR add BYTE PTR [rcx+0x0],r9b
   1400103ae:	rex.X add BYTE PTR [rax],al
   1400103b1:	add    BYTE PTR [rbp+0x0],cl
   1400103b4:	push   rbp
   1400103b5:	add    BYTE PTR [rcx+0x0],cl
	...
   1400103c0:	adc    BYTE PTR [rax],al
   1400103c2:	add    BYTE PTR [rax],al
   1400103c4:	sbb    BYTE PTR [rax],al
   1400103c6:	add    BYTE PTR [rax],al
   1400103c8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400103cc:	rex.WB add BYTE PTR [r8],al
	...
   1400103d7:	add    BYTE PTR [rsi],al
   1400103d9:	add    BYTE PTR [rax],al
   1400103db:	add    BYTE PTR [rax],dl
   1400103dd:	add    BYTE PTR [rax],al
   1400103df:	add    BYTE PTR [rbp+0x0],ah
   1400103e2:	outs   dx,BYTE PTR ds:[rsi]
   1400103e3:	add    BYTE PTR [rip+0x53005500],ch        # 0x1930158e9
   1400103e9:	add    BYTE PTR [rax],al
   1400103eb:	add    BYTE PTR [rax],al
   1400103ed:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140011000 <.reloc>:
   140011000:	add    BYTE PTR [rax+0xf00000],dl
   140011006:	add    BYTE PTR [rax],al
   140011008:	loopne 0x140010fad
   14001100a:	call   0x140a508b2
   14001100f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011010:	or     BYTE PTR [rax+rdx*1+0x20a418a4],ah
   140011017:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011018:	cmp    BYTE PTR [rax+rax*2-0x775a7f5c],ah
   14001101f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011020:	nop
   140011021:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011022:	cwde   
   140011023:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011024:	movabs al,ds:0x60a758a750a5a8a5
   14001102d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001102e:	push   0x78a770a7
   140011033:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011034:	and    BYTE PTR [rdi-0x586f5878],0x98
   14001103b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001103c:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140011045:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011046:	enter  0xd0a7,0xa7
   14001104a:	fsub   DWORD PTR [rdi-0x58175820]
   140011050:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011052:	clc    
   140011053:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011054:	add    BYTE PTR [rax-0x57ef57f8],ch
   14001105a:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140011060:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140011066:	rex.W test al,0x50
   140011069:	test   al,0x58
   14001106b:	test   al,0x60
   14001106d:	test   al,0x68
   14001106f:	test   al,0x70
   140011071:	test   al,0x78
   140011073:	test   al,0x80
   140011075:	test   al,0x88
   140011077:	test   al,0x90
   140011079:	test   al,0x98
   14001107b:	test   al,0xa0
   14001107d:	test   al,0xa8
   14001107f:	test   al,0xb0
   140011081:	test   al,0xb8
   140011083:	test   al,0xc0
   140011085:	test   al,0xc8
   140011087:	test   al,0xd0
   140011089:	test   al,0xd8
   14001108b:	test   al,0xe0
   14001108d:	test   al,0xe8
   14001108f:	test   al,0xf0
   140011091:	test   al,0xf8
   140011093:	test   al,0x0
   140011095:	test   eax,0xa910a908
   14001109a:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   1400110a0:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   1400110a6:	test   rax,0xffffffffa958a950
   1400110ac:	(bad)  
   1400110ad:	test   eax,0xa970a968
   1400110b2:	js     0x14001105d
   1400110b4:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400110bb:	test   eax,0xa9a8a9a0
   1400110c0:	mov    al,0xa9
   1400110c2:	mov    eax,0xc8a9c0a9
   1400110c7:	test   eax,0xa9d8a9d0
   1400110cc:	sub    BYTE PTR [rdx-0x54b754d0],ch
   1400110d2:	(bad)  
   1400110d3:	lods   eax,DWORD PTR ds:[rsi]
   1400110d4:	jo     0x140011083
   1400110d6:	sub    BYTE PTR [rbp-0x525f5270],0xb0
   1400110dd:	lods   eax,DWORD PTR ds:[rsi]
   1400110de:	shr    BYTE PTR [rbp-0x521f5230],0xf0
   1400110e5:	lods   eax,DWORD PTR ds:[rsi]
   1400110e6:	add    BYTE PTR [rsi-0x51df51f0],ch
   1400110ec:	xor    BYTE PTR [rsi-0x60000000],ch
   1400110f2:	add    BYTE PTR [rax],al
   1400110f4:	adc    BYTE PTR [rax],al
   1400110f6:	add    BYTE PTR [rax],al
   1400110f8:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400110fa:	(bad)  
   1400110fb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400110fc:	push   0xa770a7
   140011101:	rol    BYTE PTR [rax],1
   140011103:	add    BYTE PTR [rax],ch
   140011105:	add    BYTE PTR [rax],al
   140011107:	add    BYTE PTR [rax],al
   140011109:	movabs al,ds:0xa040a038a030a010
   140011112:	rex.W movabs al,ds:0xa0c0a070a068a060
   14001111c:	enter  0xa0,0xa1
   140011120:	and    BYTE PTR [rcx-0x5e8f5eb8],ah
	...
