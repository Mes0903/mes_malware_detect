
4197fc76b3e00145191b260c9ae8e98531d966202669ad39d34137ce303d3566.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x35a5]        # 0x4045c0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x35a6]        # 0x4045d0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x35a9]        # 0x4045e0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x356c]        # 0x4045b0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x341f]        # 0x404470
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x3541]        # 0x4045a0
  40105f:	mov    DWORD PTR [rip+0x5fa3],edx        # 0x407008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402b90
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401b40
  401081:	mov    rdx,QWORD PTR [rip+0x3478]        # 0x404500
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x345e]        # 0x4044f0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x34c4]        # 0x404560
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x33fb]        # 0x4044a0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401720
  4010af:	mov    rax,QWORD PTR [rip+0x336a]        # 0x404420
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402b90
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x8f9]        # 0x401a20
  401127:	call   0x401a10
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x3425]        # 0x404590
  40116b:	lea    r8,[rip+0x5ea6]        # 0x407018
  401172:	lea    rdx,[rip+0x5ea7]        # 0x407020
  401179:	lea    rcx,[rip+0x5ea8]        # 0x407028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x5e78],eax        # 0x407000
  401188:	lea    rax,[rip+0x5e71]        # 0x407000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x33b5]        # 0x404550
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402ba8
  4011a3:	mov    DWORD PTR [rip+0x5e67],eax        # 0x407010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x33da]        # 0x4045a0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x32db]        # 0x4044d0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x713a]        # 0x40833c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x32b7]        # 0x4044e0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x5dba],0x1        # 0x407004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x31fc]        # 0x404460
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401d30
  40127d:	lea    rcx,[rip+0x104c]        # 0x4022d0
  401284:	call   QWORD PTR [rip+0x70aa]        # 0x408334
  40128a:	mov    rdx,QWORD PTR [rip+0x322f]        # 0x4044c0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4021e0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402bd0
  4012a5:	call   0x401b20
  4012aa:	mov    rax,QWORD PTR [rip+0x31bf]        # 0x404470
  4012b1:	mov    QWORD PTR [rip+0x6750],rax        # 0x407a08
  4012b8:	mov    rax,QWORD PTR [rip+0x31d1]        # 0x404490
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x66e9],rax        # 0x407a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x1cca],eax        # 0x403000
  401336:	mov    r12d,DWORD PTR [rip+0x5ceb]        # 0x407028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402b10
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x5cc2]        # 0x407020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402af0
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402b10
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402b08
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x5c6a],rbp        # 0x407020
  4013b6:	call   0x4016f0
  4013bb:	mov    rax,QWORD PTR [rip+0x30be]        # 0x404480
  4013c2:	mov    rdx,QWORD PTR [rip+0x5c4f]        # 0x407018
  4013c9:	mov    ecx,DWORD PTR [rip+0x5c59]        # 0x407028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x5c3c]        # 0x407018
  4013dc:	mov    rdx,QWORD PTR [rip+0x5c3d]        # 0x407020
  4013e3:	call   0x402ca0
  4013e8:	mov    ecx,DWORD PTR [rip+0x5c1a]        # 0x407008
  4013ee:	mov    DWORD PTR [rip+0x5c18],eax        # 0x40700c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x5c02]        # 0x407004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402b78
  40140b:	mov    eax,DWORD PTR [rip+0x5bfb]        # 0x40700c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x30a9]        # 0x4044e0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402b80
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x30bd]        # 0x404520
  401463:	mov    rcx,QWORD PTR [rip+0x30a6]        # 0x404510
  40146a:	call   0x402b70
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x6e4b]        # 0x4082e4
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x3099]        # 0x404540
  4014a7:	mov    rcx,QWORD PTR [rip+0x3082]        # 0x404530
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402b70
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402b40
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x30c5]        # 0x4045a0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401730
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x3095]        # 0x4045a0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401730
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	jmp    QWORD PTR [rip+0x6d6e]        # 0x4082a4
  401536:	nop
  401537:	nop
  401538:	jmp    QWORD PTR [rip+0x6d5e]        # 0x40829c
  40153e:	nop
  40153f:	nop
  401540:	jmp    QWORD PTR [rip+0x6d4e]        # 0x408294
  401546:	nop
  401547:	nop
  401548:	jmp    QWORD PTR [rip+0x6d3e]        # 0x40828c
  40154e:	nop
  40154f:	nop
  401550:	jmp    QWORD PTR [rip+0x6d2e]        # 0x408284
  401556:	nop
  401557:	nop
  401558:	jmp    QWORD PTR [rip+0x6d1e]        # 0x40827c
  40155e:	nop
  40155f:	nop
  401560:	jmp    QWORD PTR [rip+0x6f1e]        # 0x408484
  401566:	nop
  401567:	nop
  401568:	jmp    QWORD PTR [rip+0x6f0e]        # 0x40847c
  40156e:	nop
  40156f:	nop
  401570:	jmp    QWORD PTR [rip+0x6efe]        # 0x408474
  401576:	nop
  401577:	nop
  401578:	nop    DWORD PTR [rax+rax*1+0x0]
  401580:	push   rbx
  401581:	sub    rsp,0x30
  401585:	mov    rbx,rcx
  401588:	mov    rcx,QWORD PTR [rip+0x6481]        # 0x407a10
  40158f:	call   0x401b30
  401594:	cmp    rax,0xffffffffffffffff
  401598:	mov    QWORD PTR [rsp+0x20],rax
  40159d:	je     0x401615
  40159f:	mov    ecx,0x8
  4015a4:	call   0x402b68
  4015a9:	mov    rcx,QWORD PTR [rip+0x6460]        # 0x407a10
  4015b0:	call   0x401b30
  4015b5:	mov    rcx,QWORD PTR [rip+0x645c]        # 0x407a18
  4015bc:	mov    QWORD PTR [rsp+0x20],rax
  4015c1:	call   0x401b30
  4015c6:	lea    rdx,[rsp+0x20]
  4015cb:	lea    r8,[rsp+0x28]
  4015d0:	mov    rcx,rbx
  4015d3:	mov    QWORD PTR [rsp+0x28],rax
  4015d8:	call   0x402bb0
  4015dd:	mov    rcx,QWORD PTR [rsp+0x20]
  4015e2:	mov    rbx,rax
  4015e5:	call   0x401b40
  4015ea:	mov    rcx,QWORD PTR [rsp+0x28]
  4015ef:	mov    QWORD PTR [rip+0x641a],rax        # 0x407a10
  4015f6:	call   0x401b40
  4015fb:	mov    ecx,0x8
  401600:	mov    QWORD PTR [rip+0x6411],rax        # 0x407a18
  401607:	call   0x402b58
  40160c:	mov    rax,rbx
  40160f:	add    rsp,0x30
  401613:	pop    rbx
  401614:	ret    
  401615:	mov    rax,QWORD PTR [rip+0x2e94]        # 0x4044b0
  40161c:	mov    rcx,rbx
  40161f:	call   QWORD PTR [rax]
  401621:	add    rsp,0x30
  401625:	pop    rbx
  401626:	ret    
  401627:	nop    WORD PTR [rax+rax*1+0x0]
  401630:	sub    rsp,0x28
  401634:	call   0x401580
  401639:	test   rax,rax
  40163c:	sete   al
  40163f:	movzx  eax,al
  401642:	neg    eax
  401644:	add    rsp,0x28
  401648:	ret    
  401649:	nop
  40164a:	nop
  40164b:	nop
  40164c:	nop
  40164d:	nop
  40164e:	nop
  40164f:	nop
  401650:	sub    rsp,0x28
  401654:	mov    rax,QWORD PTR [rip+0x19b5]        # 0x403010
  40165b:	mov    rax,QWORD PTR [rax]
  40165e:	test   rax,rax
  401661:	je     0x401680
  401663:	call   rax
  401665:	mov    rax,QWORD PTR [rip+0x19a4]        # 0x403010
  40166c:	lea    rdx,[rax+0x8]
  401670:	mov    rax,QWORD PTR [rax+0x8]
  401674:	mov    QWORD PTR [rip+0x1995],rdx        # 0x403010
  40167b:	test   rax,rax
  40167e:	jne    0x401663
  401680:	add    rsp,0x28
  401684:	ret    
  401685:	nop
  401686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401690:	push   rsi
  401691:	push   rbx
  401692:	sub    rsp,0x28
  401696:	mov    rsi,QWORD PTR [rip+0x2d93]        # 0x404430
  40169d:	mov    rax,QWORD PTR [rsi]
  4016a0:	cmp    eax,0xffffffff
  4016a3:	mov    ebx,eax
  4016a5:	je     0x4016d0
  4016a7:	test   ebx,ebx
  4016a9:	je     0x4016ba
  4016ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4016b0:	mov    eax,ebx
  4016b2:	call   QWORD PTR [rsi+rax*8]
  4016b5:	sub    ebx,0x1
  4016b8:	jne    0x4016b0
  4016ba:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401650
  4016c1:	add    rsp,0x28
  4016c5:	pop    rbx
  4016c6:	pop    rsi
  4016c7:	jmp    0x401630
  4016cc:	nop    DWORD PTR [rax+0x0]
  4016d0:	xor    ebx,ebx
  4016d2:	jmp    0x4016d6
  4016d4:	mov    ebx,eax
  4016d6:	lea    edx,[rbx+0x1]
  4016d9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4016de:	mov    rax,rdx
  4016e1:	jne    0x4016d4
  4016e3:	jmp    0x4016a7
  4016e5:	nop
  4016e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016f0:	mov    eax,DWORD PTR [rip+0x593a]        # 0x407030
  4016f6:	test   eax,eax
  4016f8:	je     0x401700
  4016fa:	repz ret 
  4016fc:	nop    DWORD PTR [rax+0x0]
  401700:	mov    DWORD PTR [rip+0x5926],0x1        # 0x407030
  40170a:	jmp    0x401690
  40170c:	nop
  40170d:	nop
  40170e:	nop
  40170f:	nop
  401710:	mov    rax,QWORD PTR [rip+0x6c85]        # 0x40839c
  401717:	rex.W jmp rax
  40171a:	nop
  40171b:	nop
  40171c:	nop
  40171d:	nop
  40171e:	nop
  40171f:	nop
  401720:	xor    eax,eax
  401722:	ret    
  401723:	nop
  401724:	nop
  401725:	nop
  401726:	nop
  401727:	nop
  401728:	nop
  401729:	nop
  40172a:	nop
  40172b:	nop
  40172c:	nop
  40172d:	nop
  40172e:	nop
  40172f:	nop
  401730:	push   r12
  401732:	push   rbp
  401733:	push   rdi
  401734:	push   rsi
  401735:	push   rbx
  401736:	sub    rsp,0x40
  40173a:	mov    rbx,QWORD PTR [rip+0x192f]        # 0x403070
  401741:	movabs rax,0x2b992ddfa232
  40174b:	mov    QWORD PTR [rsp+0x20],0x0
  401754:	cmp    rbx,rax
  401757:	je     0x401770
  401759:	not    rbx
  40175c:	mov    QWORD PTR [rip+0x191d],rbx        # 0x403080
  401763:	add    rsp,0x40
  401767:	pop    rbx
  401768:	pop    rsi
  401769:	pop    rdi
  40176a:	pop    rbp
  40176b:	pop    r12
  40176d:	ret    
  40176e:	xchg   ax,ax
  401770:	lea    rcx,[rsp+0x20]
  401775:	call   QWORD PTR [rip+0x6b71]        # 0x4082ec
  40177b:	mov    r12,QWORD PTR [rsp+0x20]
  401780:	call   QWORD PTR [rip+0x6b46]        # 0x4082cc
  401786:	mov    ebp,eax
  401788:	call   QWORD PTR [rip+0x6b46]        # 0x4082d4
  40178e:	mov    edi,eax
  401790:	call   QWORD PTR [rip+0x6b5e]        # 0x4082f4
  401796:	lea    rcx,[rsp+0x30]
  40179b:	mov    esi,eax
  40179d:	call   QWORD PTR [rip+0x6b69]        # 0x40830c
  4017a3:	xor    r12,QWORD PTR [rsp+0x30]
  4017a8:	mov    edx,edi
  4017aa:	movabs rax,0xffffffffffff
  4017b4:	xor    rbp,r12
  4017b7:	mov    rdi,rbp
  4017ba:	xor    rdi,rdx
  4017bd:	mov    edx,esi
  4017bf:	xor    rdi,rdx
  4017c2:	mov    rsi,rdi
  4017c5:	and    rsi,rax
  4017c8:	cmp    rsi,rbx
  4017cb:	je     0x4017f0
  4017cd:	mov    rax,rsi
  4017d0:	not    rax
  4017d3:	mov    QWORD PTR [rip+0x1896],rsi        # 0x403070
  4017da:	mov    QWORD PTR [rip+0x189f],rax        # 0x403080
  4017e1:	add    rsp,0x40
  4017e5:	pop    rbx
  4017e6:	pop    rsi
  4017e7:	pop    rdi
  4017e8:	pop    rbp
  4017e9:	pop    r12
  4017eb:	ret    
  4017ec:	nop    DWORD PTR [rax+0x0]
  4017f0:	movabs rax,0xffffd466d2205dcc
  4017fa:	movabs rsi,0x2b992ddfa233
  401804:	jmp    0x4017d3
  401806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401810:	push   rbp
  401811:	push   rsi
  401812:	push   rbx
  401813:	mov    rbp,rsp
  401816:	sub    rsp,0x70
  40181a:	mov    rsi,rcx
  40181d:	lea    rcx,[rip+0x585c]        # 0x407080
  401824:	call   QWORD PTR [rip+0x6af2]        # 0x40831c
  40182a:	mov    rbx,QWORD PTR [rip+0x5947]        # 0x407178
  401831:	xor    r8d,r8d
  401834:	lea    rdx,[rbp-0x28]
  401838:	mov    rcx,rbx
  40183b:	call   QWORD PTR [rip+0x6ae3]        # 0x408324
  401841:	test   rax,rax
  401844:	mov    r9,rax
  401847:	je     0x4018f0
  40184d:	lea    rax,[rbp-0x20]
  401851:	mov    QWORD PTR [rsp+0x38],0x0
  40185a:	mov    r8,rbx
  40185d:	mov    rdx,QWORD PTR [rbp-0x28]
  401861:	xor    ecx,ecx
  401863:	mov    QWORD PTR [rsp+0x30],rax
  401868:	lea    rax,[rbp-0x18]
  40186c:	mov    QWORD PTR [rsp+0x28],rax
  401871:	lea    rax,[rip+0x5808]        # 0x407080
  401878:	mov    QWORD PTR [rsp+0x20],rax
  40187d:	call   QWORD PTR [rip+0x6aa9]        # 0x40832c
  401883:	mov    rax,QWORD PTR [rip+0x58ee]        # 0x407178
  40188a:	xor    ecx,ecx
  40188c:	mov    QWORD PTR [rip+0x586d],rsi        # 0x407100
  401893:	mov    DWORD PTR [rip+0x5ce3],0xc0000409        # 0x407580
  40189d:	mov    DWORD PTR [rip+0x5cdd],0x1        # 0x407584
  4018a7:	mov    QWORD PTR [rip+0x5ce2],rax        # 0x407590
  4018ae:	mov    rax,QWORD PTR [rip+0x17bb]        # 0x403070
  4018b5:	mov    QWORD PTR [rbp-0x10],rax
  4018b9:	mov    rax,QWORD PTR [rip+0x17c0]        # 0x403080
  4018c0:	mov    QWORD PTR [rbp-0x8],rax
  4018c4:	call   QWORD PTR [rip+0x6a6a]        # 0x408334
  4018ca:	lea    rcx,[rip+0x28bf]        # 0x404190
  4018d1:	call   QWORD PTR [rip+0x6a7d]        # 0x408354
  4018d7:	call   QWORD PTR [rip+0x69e7]        # 0x4082c4
  4018dd:	mov    edx,0xc0000409
  4018e2:	mov    rcx,rax
  4018e5:	call   QWORD PTR [rip+0x6a59]        # 0x408344
  4018eb:	call   0x402b50
  4018f0:	mov    rax,QWORD PTR [rbp+0x18]
  4018f4:	mov    QWORD PTR [rip+0x587d],rax        # 0x407178
  4018fb:	lea    rax,[rbp+0x8]
  4018ff:	mov    QWORD PTR [rip+0x5812],rax        # 0x407118
  401906:	jmp    0x401883
  40190b:	nop
  40190c:	nop
  40190d:	nop
  40190e:	nop
  40190f:	nop
  401910:	sub    rsp,0x28
  401914:	test   edx,edx
  401916:	je     0x401930
  401918:	cmp    edx,0x3
  40191b:	je     0x401930
  40191d:	mov    eax,0x1
  401922:	add    rsp,0x28
  401926:	ret    
  401927:	nop    WORD PTR [rax+rax*1+0x0]
  401930:	call   0x402620
  401935:	mov    eax,0x1
  40193a:	add    rsp,0x28
  40193e:	ret    
  40193f:	nop
  401940:	push   rsi
  401941:	push   rbx
  401942:	sub    rsp,0x28
  401946:	mov    rax,QWORD PTR [rip+0x2ac3]        # 0x404410
  40194d:	cmp    DWORD PTR [rax],0x2
  401950:	je     0x401958
  401952:	mov    DWORD PTR [rax],0x2
  401958:	cmp    edx,0x2
  40195b:	je     0x401970
  40195d:	cmp    edx,0x1
  401960:	je     0x4019a2
  401962:	mov    eax,0x1
  401967:	add    rsp,0x28
  40196b:	pop    rbx
  40196c:	pop    rsi
  40196d:	ret    
  40196e:	xchg   ax,ax
  401970:	lea    rbx,[rip+0x76e9]        # 0x409060
  401977:	lea    rsi,[rip+0x76e2]        # 0x409060
  40197e:	cmp    rbx,rsi
  401981:	je     0x401962
  401983:	mov    rax,QWORD PTR [rbx]
  401986:	test   rax,rax
  401989:	je     0x40198d
  40198b:	call   rax
  40198d:	add    rbx,0x8
  401991:	cmp    rbx,rsi
  401994:	jne    0x401983
  401996:	mov    eax,0x1
  40199b:	add    rsp,0x28
  40199f:	pop    rbx
  4019a0:	pop    rsi
  4019a1:	ret    
  4019a2:	call   0x402620
  4019a7:	jmp    0x401962
  4019a9:	nop    DWORD PTR [rax+0x0]
  4019b0:	xor    eax,eax
  4019b2:	ret    
  4019b3:	nop
  4019b4:	nop
  4019b5:	nop
  4019b6:	nop
  4019b7:	nop
  4019b8:	nop
  4019b9:	nop
  4019ba:	nop
  4019bb:	nop
  4019bc:	nop
  4019bd:	nop
  4019be:	nop
  4019bf:	nop
  4019c0:	sub    rsp,0x58
  4019c4:	mov    rax,QWORD PTR [rip+0x5c95]        # 0x407660
  4019cb:	test   rax,rax
  4019ce:	je     0x4019fc
  4019d0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4019d9:	mov    DWORD PTR [rsp+0x20],ecx
  4019dd:	lea    rcx,[rsp+0x20]
  4019e2:	mov    QWORD PTR [rsp+0x28],rdx
  4019e7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4019ed:	movsd  QWORD PTR [rsp+0x38],xmm3
  4019f3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4019f9:	call   rax
  4019fb:	nop
  4019fc:	add    rsp,0x58
  401a00:	ret    
  401a01:	nop    DWORD PTR [rax+rax*1+0x0]
  401a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a10:	mov    QWORD PTR [rip+0x5c49],rcx        # 0x407660
  401a17:	jmp    0x402b88
  401a1c:	nop    DWORD PTR [rax+0x0]
  401a20:	push   rsi
  401a21:	push   rbx
  401a22:	sub    rsp,0x78
  401a26:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401a2b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401a30:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401a36:	cmp    DWORD PTR [rcx],0x6
  401a39:	ja     0x401b10
  401a3f:	mov    edx,DWORD PTR [rcx]
  401a41:	lea    rax,[rip+0x288c]        # 0x4042d4
  401a48:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401a4c:	add    rax,rdx
  401a4f:	jmp    rax
  401a51:	lea    rbx,[rip+0x2758]        # 0x4041b0
  401a58:	nop    DWORD PTR [rax+rax*1+0x0]
  401a60:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401a66:	mov    rsi,QWORD PTR [rcx+0x8]
  401a6a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401a6f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401a74:	call   0x402ba0
  401a79:	movsd  QWORD PTR [rsp+0x30],xmm8
  401a80:	lea    rcx,[rax+0x60]
  401a84:	lea    rdx,[rip+0x281d]        # 0x4042a8
  401a8b:	movsd  QWORD PTR [rsp+0x28],xmm7
  401a91:	mov    r9,rsi
  401a94:	mov    r8,rbx
  401a97:	movsd  QWORD PTR [rsp+0x20],xmm6
  401a9d:	call   0x402b28
  401aa2:	nop
  401aa3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401aa8:	xor    eax,eax
  401aaa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401aaf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401ab5:	add    rsp,0x78
  401ab9:	pop    rbx
  401aba:	pop    rsi
  401abb:	ret    
  401abc:	nop    DWORD PTR [rax+0x0]
  401ac0:	lea    rbx,[rip+0x2708]        # 0x4041cf
  401ac7:	jmp    0x401a60
  401ac9:	nop    DWORD PTR [rax+0x0]
  401ad0:	lea    rbx,[rip+0x2719]        # 0x4041f0
  401ad7:	jmp    0x401a60
  401ad9:	nop    DWORD PTR [rax+0x0]
  401ae0:	lea    rbx,[rip+0x2779]        # 0x404260
  401ae7:	jmp    0x401a60
  401aec:	nop    DWORD PTR [rax+0x0]
  401af0:	lea    rbx,[rip+0x2741]        # 0x404238
  401af7:	jmp    0x401a60
  401afc:	nop    DWORD PTR [rax+0x0]
  401b00:	lea    rbx,[rip+0x2709]        # 0x404210
  401b07:	jmp    0x401a60
  401b0c:	nop    DWORD PTR [rax+0x0]
  401b10:	lea    rbx,[rip+0x277f]        # 0x404296
  401b17:	jmp    0x401a60
  401b1c:	nop
  401b1d:	nop
  401b1e:	nop
  401b1f:	nop
  401b20:	fninit 
  401b22:	ret    
  401b23:	nop
  401b24:	nop
  401b25:	nop
  401b26:	nop
  401b27:	nop
  401b28:	nop
  401b29:	nop
  401b2a:	nop
  401b2b:	nop
  401b2c:	nop
  401b2d:	nop
  401b2e:	nop
  401b2f:	nop
  401b30:	mov    rax,rcx
  401b33:	ret    
  401b34:	xchg   ax,ax
  401b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b40:	mov    rax,rcx
  401b43:	ret    
  401b44:	nop
  401b45:	nop
  401b46:	nop
  401b47:	nop
  401b48:	nop
  401b49:	nop
  401b4a:	nop
  401b4b:	nop
  401b4c:	nop
  401b4d:	nop
  401b4e:	nop
  401b4f:	nop
  401b50:	push   rsi
  401b51:	push   rbx
  401b52:	sub    rsp,0x38
  401b56:	lea    rax,[rsp+0x58]
  401b5b:	mov    rbx,rcx
  401b5e:	mov    QWORD PTR [rsp+0x58],rdx
  401b63:	mov    QWORD PTR [rsp+0x60],r8
  401b68:	mov    QWORD PTR [rsp+0x68],r9
  401b6d:	mov    QWORD PTR [rsp+0x28],rax
  401b72:	call   0x402ba0
  401b77:	lea    rcx,[rip+0x2772]        # 0x4042f0
  401b7e:	lea    r9,[rax+0x60]
  401b82:	mov    r8d,0x1b
  401b88:	mov    edx,0x1
  401b8d:	call   0x402b18
  401b92:	mov    rsi,QWORD PTR [rsp+0x28]
  401b97:	call   0x402ba0
  401b9c:	lea    rcx,[rax+0x60]
  401ba0:	mov    rdx,rbx
  401ba3:	mov    r8,rsi
  401ba6:	call   0x402ae0
  401bab:	call   0x402b50
  401bb0:	nop
  401bb1:	nop    DWORD PTR [rax+rax*1+0x0]
  401bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bc0:	push   r13
  401bc2:	push   r12
  401bc4:	push   rbp
  401bc5:	push   rdi
  401bc6:	push   rsi
  401bc7:	push   rbx
  401bc8:	sub    rsp,0x58
  401bcc:	movsxd rbp,DWORD PTR [rip+0x5ab1]        # 0x407684
  401bd3:	mov    rbx,rcx
  401bd6:	mov    rsi,rdx
  401bd9:	mov    rdi,r8
  401bdc:	test   ebp,ebp
  401bde:	jle    0x401cda
  401be4:	mov    rax,QWORD PTR [rip+0x5a9d]        # 0x407688
  401beb:	xor    r9d,r9d
  401bee:	add    rax,0x8
  401bf2:	mov    r10,QWORD PTR [rax]
  401bf5:	cmp    rbx,r10
  401bf8:	jb     0x401c0e
  401bfa:	mov    rdx,QWORD PTR [rax+0x8]
  401bfe:	mov    r11d,DWORD PTR [rdx+0x8]
  401c02:	add    r10,r11
  401c05:	cmp    rbx,r10
  401c08:	jb     0x401cc0
  401c0e:	add    r9d,0x1
  401c12:	add    rax,0x18
  401c16:	cmp    r9d,ebp
  401c19:	jne    0x401bf2
  401c1b:	mov    rcx,rbx
  401c1e:	call   0x402830
  401c23:	test   rax,rax
  401c26:	mov    r12,rax
  401c29:	je     0x401d12
  401c2f:	lea    rbp,[rbp+rbp*2+0x0]
  401c34:	shl    rbp,0x3
  401c38:	mov    r13,rbp
  401c3b:	add    r13,QWORD PTR [rip+0x5a46]        # 0x407688
  401c42:	mov    QWORD PTR [r13+0x10],rax
  401c46:	mov    DWORD PTR [r13+0x0],0x0
  401c4e:	call   0x402950
  401c53:	mov    edx,DWORD PTR [r12+0xc]
  401c58:	mov    r8d,0x30
  401c5e:	add    rax,rdx
  401c61:	lea    rdx,[rsp+0x20]
  401c66:	mov    QWORD PTR [r13+0x8],rax
  401c6a:	mov    rax,QWORD PTR [rip+0x5a17]        # 0x407688
  401c71:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401c76:	call   QWORD PTR [rip+0x66e8]        # 0x408364
  401c7c:	test   rax,rax
  401c7f:	je     0x401cf5
  401c81:	mov    eax,DWORD PTR [rsp+0x44]
  401c85:	lea    edx,[rax-0x4]
  401c88:	and    edx,0xfffffffb
  401c8b:	je     0x401cb9
  401c8d:	sub    eax,0x40
  401c90:	and    eax,0xffffffbf
  401c93:	je     0x401cb9
  401c95:	mov    r9,rbp
  401c98:	add    r9,QWORD PTR [rip+0x59e9]        # 0x407688
  401c9f:	mov    r8d,0x40
  401ca5:	mov    rdx,QWORD PTR [rsp+0x38]
  401caa:	mov    rcx,QWORD PTR [rsp+0x20]
  401caf:	call   QWORD PTR [rip+0x66a7]        # 0x40835c
  401cb5:	test   eax,eax
  401cb7:	je     0x401ce1
  401cb9:	add    DWORD PTR [rip+0x59c4],0x1        # 0x407684
  401cc0:	mov    r8,rdi
  401cc3:	mov    rdx,rsi
  401cc6:	mov    rcx,rbx
  401cc9:	add    rsp,0x58
  401ccd:	pop    rbx
  401cce:	pop    rsi
  401ccf:	pop    rdi
  401cd0:	pop    rbp
  401cd1:	pop    r12
  401cd3:	pop    r13
  401cd5:	jmp    0x402b08
  401cda:	xor    ebp,ebp
  401cdc:	jmp    0x401c1b
  401ce1:	call   QWORD PTR [rip+0x65f5]        # 0x4082dc
  401ce7:	lea    rcx,[rip+0x267a]        # 0x404368
  401cee:	mov    edx,eax
  401cf0:	call   0x401b50
  401cf5:	mov    rax,QWORD PTR [rip+0x598c]        # 0x407688
  401cfc:	mov    edx,DWORD PTR [r12+0x8]
  401d01:	lea    rcx,[rip+0x2628]        # 0x404330
  401d08:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401d0d:	call   0x401b50
  401d12:	lea    rcx,[rip+0x25f7]        # 0x404310
  401d19:	mov    rdx,rbx
  401d1c:	call   0x401b50
  401d21:	nop
  401d22:	nop    DWORD PTR [rax+0x0]
  401d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d30:	push   rbp
  401d31:	push   r14
  401d33:	push   r13
  401d35:	push   r12
  401d37:	push   rdi
  401d38:	push   rsi
  401d39:	push   rbx
  401d3a:	mov    rbp,rsp
  401d3d:	sub    rsp,0x60
  401d41:	mov    ebx,DWORD PTR [rip+0x5939]        # 0x407680
  401d47:	test   ebx,ebx
  401d49:	je     0x401d60
  401d4b:	mov    rsp,rbp
  401d4e:	pop    rbx
  401d4f:	pop    rsi
  401d50:	pop    rdi
  401d51:	pop    r12
  401d53:	pop    r13
  401d55:	pop    r14
  401d57:	pop    rbp
  401d58:	ret    
  401d59:	nop    DWORD PTR [rax+0x0]
  401d60:	mov    DWORD PTR [rip+0x5916],0x1        # 0x407680
  401d6a:	call   0x402880
  401d6f:	cdqe   
  401d71:	lea    rax,[rax+rax*2]
  401d75:	lea    rax,[rax*8+0x1e]
  401d7d:	and    rax,0xfffffffffffffff0
  401d81:	call   0x402aa0
  401d86:	mov    rsi,QWORD PTR [rip+0x26b3]        # 0x404440
  401d8d:	mov    rbx,QWORD PTR [rip+0x26bc]        # 0x404450
  401d94:	sub    rsp,rax
  401d97:	mov    DWORD PTR [rip+0x58e3],0x0        # 0x407684
  401da1:	lea    rax,[rsp+0x20]
  401da6:	mov    QWORD PTR [rip+0x58db],rax        # 0x407688
  401dad:	mov    rax,rsi
  401db0:	sub    rax,rbx
  401db3:	cmp    rax,0x7
  401db7:	jle    0x401d4b
  401db9:	cmp    rax,0xb
  401dbd:	jle    0x401de5
  401dbf:	mov    r11d,DWORD PTR [rbx]
  401dc2:	test   r11d,r11d
  401dc5:	jne    0x401f10
  401dcb:	mov    r10d,DWORD PTR [rbx+0x4]
  401dcf:	test   r10d,r10d
  401dd2:	jne    0x401f10
  401dd8:	mov    r9d,DWORD PTR [rbx+0x8]
  401ddc:	test   r9d,r9d
  401ddf:	jne    0x401dfc
  401de1:	add    rbx,0xc
  401de5:	mov    r8d,DWORD PTR [rbx]
  401de8:	test   r8d,r8d
  401deb:	jne    0x401f10
  401df1:	mov    ecx,DWORD PTR [rbx+0x4]
  401df4:	test   ecx,ecx
  401df6:	jne    0x401f10
  401dfc:	mov    edx,DWORD PTR [rbx+0x8]
  401dff:	cmp    edx,0x1
  401e02:	jne    0x40201c
  401e08:	add    rbx,0xc
  401e0c:	cmp    rbx,rsi
  401e0f:	jae    0x401d4b
  401e15:	mov    r12,QWORD PTR [rip+0x2654]        # 0x404470
  401e1c:	lea    r13,[rbp-0x30]
  401e20:	movabs r14,0xffffffff00000000
  401e2a:	mov    ecx,DWORD PTR [rbx+0x4]
  401e2d:	mov    eax,DWORD PTR [rbx]
  401e2f:	movzx  edx,BYTE PTR [rbx+0x8]
  401e33:	add    rax,r12
  401e36:	add    rcx,r12
  401e39:	cmp    edx,0x10
  401e3c:	mov    r8,QWORD PTR [rax]
  401e3f:	je     0x401f86
  401e45:	jbe    0x401f4d
  401e4b:	cmp    edx,0x20
  401e4e:	je     0x401fcf
  401e54:	cmp    edx,0x40
  401e57:	jne    0x401fbb
  401e5d:	sub    r8,rax
  401e60:	mov    rdx,r13
  401e63:	mov    rdi,r13
  401e66:	mov    rax,r8
  401e69:	add    rax,QWORD PTR [rcx]
  401e6c:	mov    r8d,0x8
  401e72:	mov    QWORD PTR [rbp-0x30],rax
  401e76:	call   0x401bc0
  401e7b:	add    rbx,0xc
  401e7f:	cmp    rbx,rsi
  401e82:	jb     0x401e2a
  401e84:	mov    eax,DWORD PTR [rip+0x57fa]        # 0x407684
  401e8a:	xor    ebx,ebx
  401e8c:	xor    esi,esi
  401e8e:	test   eax,eax
  401e90:	jle    0x401d4b
  401e96:	mov    r14,QWORD PTR [rip+0x64c7]        # 0x408364
  401e9d:	lea    r13,[rbp-0x34]
  401ea1:	mov    r12,QWORD PTR [rip+0x64b4]        # 0x40835c
  401ea8:	jmp    0x401ec3
  401eaa:	nop    WORD PTR [rax+rax*1+0x0]
  401eb0:	add    esi,0x1
  401eb3:	add    rbx,0x18
  401eb7:	cmp    esi,DWORD PTR [rip+0x57c7]        # 0x407684
  401ebd:	jge    0x401d4b
  401ec3:	mov    rax,rbx
  401ec6:	add    rax,QWORD PTR [rip+0x57bb]        # 0x407688
  401ecd:	mov    edx,DWORD PTR [rax]
  401ecf:	test   edx,edx
  401ed1:	je     0x401eb0
  401ed3:	mov    rcx,QWORD PTR [rax+0x8]
  401ed7:	mov    r8d,0x30
  401edd:	mov    rdx,rdi
  401ee0:	call   r14
  401ee3:	test   rax,rax
  401ee6:	je     0x401ffe
  401eec:	mov    rax,QWORD PTR [rip+0x5795]        # 0x407688
  401ef3:	mov    r9,r13
  401ef6:	mov    rdx,QWORD PTR [rbp-0x18]
  401efa:	mov    rcx,QWORD PTR [rbp-0x30]
  401efe:	mov    r8d,DWORD PTR [rax+rbx*1]
  401f02:	call   r12
  401f05:	jmp    0x401eb0
  401f07:	nop    WORD PTR [rax+rax*1+0x0]
  401f10:	cmp    rbx,rsi
  401f13:	jae    0x401d4b
  401f19:	mov    r12,QWORD PTR [rip+0x2550]        # 0x404470
  401f20:	lea    rdi,[rbp-0x30]
  401f24:	mov    ecx,DWORD PTR [rbx+0x4]
  401f27:	mov    eax,DWORD PTR [rbx]
  401f29:	mov    r8d,0x4
  401f2f:	mov    rdx,rdi
  401f32:	add    rbx,0x8
  401f36:	add    rcx,r12
  401f39:	add    eax,DWORD PTR [rcx]
  401f3b:	mov    DWORD PTR [rbp-0x30],eax
  401f3e:	call   0x401bc0
  401f43:	cmp    rbx,rsi
  401f46:	jb     0x401f24
  401f48:	jmp    0x401e84
  401f4d:	cmp    edx,0x8
  401f50:	jne    0x401fbb
  401f52:	movzx  edx,BYTE PTR [rcx]
  401f55:	mov    rdi,r13
  401f58:	mov    r10,rdx
  401f5b:	or     r10,0xffffffffffffff00
  401f62:	test   dl,dl
  401f64:	cmovs  rdx,r10
  401f68:	sub    rdx,rax
  401f6b:	lea    rax,[r8+rdx*1]
  401f6f:	mov    r8d,0x1
  401f75:	mov    rdx,r13
  401f78:	mov    QWORD PTR [rbp-0x30],rax
  401f7c:	call   0x401bc0
  401f81:	jmp    0x401e7b
  401f86:	movzx  edx,WORD PTR [rcx]
  401f89:	mov    rdi,r13
  401f8c:	mov    r10,rdx
  401f8f:	or     r10,0xffffffffffff0000
  401f96:	test   dx,dx
  401f99:	cmovs  rdx,r10
  401f9d:	sub    rdx,rax
  401fa0:	lea    rax,[r8+rdx*1]
  401fa4:	mov    r8d,0x2
  401faa:	mov    rdx,r13
  401fad:	mov    QWORD PTR [rbp-0x30],rax
  401fb1:	call   0x401bc0
  401fb6:	jmp    0x401e7b
  401fbb:	lea    rcx,[rip+0x2406]        # 0x4043c8
  401fc2:	mov    QWORD PTR [rbp-0x30],0x0
  401fca:	call   0x401b50
  401fcf:	mov    edx,DWORD PTR [rcx]
  401fd1:	mov    rdi,r13
  401fd4:	mov    r10,rdx
  401fd7:	or     r10,r14
  401fda:	test   edx,edx
  401fdc:	cmovs  rdx,r10
  401fe0:	sub    rdx,rax
  401fe3:	lea    rax,[r8+rdx*1]
  401fe7:	mov    r8d,0x4
  401fed:	mov    rdx,r13
  401ff0:	mov    QWORD PTR [rbp-0x30],rax
  401ff4:	call   0x401bc0
  401ff9:	jmp    0x401e7b
  401ffe:	add    rbx,QWORD PTR [rip+0x5683]        # 0x407688
  402005:	lea    rcx,[rip+0x2324]        # 0x404330
  40200c:	mov    rax,QWORD PTR [rbx+0x10]
  402010:	mov    r8,QWORD PTR [rbx+0x8]
  402014:	mov    edx,DWORD PTR [rax+0x8]
  402017:	call   0x401b50
  40201c:	lea    rcx,[rip+0x236d]        # 0x404390
  402023:	call   0x401b50
  402028:	nop
  402029:	nop
  40202a:	nop
  40202b:	nop
  40202c:	nop
  40202d:	nop
  40202e:	nop
  40202f:	nop
  402030:	sub    rsp,0x28
  402034:	mov    eax,DWORD PTR [rcx]
  402036:	cmp    eax,0xc0000091
  40203b:	ja     0x4020a0
  40203d:	cmp    eax,0xc000008d
  402042:	jae    0x4020bf
  402044:	cmp    eax,0xc0000008
  402049:	je     0x402160
  40204f:	ja     0x402130
  402055:	cmp    eax,0x80000002
  40205a:	je     0x402160
  402060:	cmp    eax,0xc0000005
  402065:	jne    0x40213e
  40206b:	xor    edx,edx
  40206d:	mov    ecx,0xb
  402072:	call   0x402af8
  402077:	cmp    rax,0x1
  40207b:	je     0x4021c0
  402081:	test   rax,rax
  402084:	je     0x4021a0
  40208a:	mov    ecx,0xb
  40208f:	call   rax
  402091:	xor    eax,eax
  402093:	add    rsp,0x28
  402097:	ret    
  402098:	nop    DWORD PTR [rax+rax*1+0x0]
  4020a0:	cmp    eax,0xc0000094
  4020a5:	je     0x402170
  4020ab:	ja     0x4020f0
  4020ad:	cmp    eax,0xc0000092
  4020b2:	je     0x402160
  4020b8:	cmp    eax,0xc0000093
  4020bd:	jne    0x40213e
  4020bf:	xor    edx,edx
  4020c1:	mov    ecx,0x8
  4020c6:	call   0x402af8
  4020cb:	cmp    rax,0x1
  4020cf:	mov    rdx,rax
  4020d2:	je     0x402148
  4020d4:	test   rdx,rdx
  4020d7:	mov    eax,0x1
  4020dc:	je     0x402093
  4020de:	mov    ecx,0x8
  4020e3:	call   rdx
  4020e5:	xor    eax,eax
  4020e7:	add    rsp,0x28
  4020eb:	ret    
  4020ec:	nop    DWORD PTR [rax+0x0]
  4020f0:	cmp    eax,0xc0000095
  4020f5:	je     0x402160
  4020f7:	cmp    eax,0xc0000096
  4020fc:	jne    0x40213e
  4020fe:	xor    edx,edx
  402100:	mov    ecx,0x4
  402105:	call   0x402af8
  40210a:	cmp    rax,0x1
  40210e:	je     0x4021aa
  402114:	test   rax,rax
  402117:	je     0x4021a0
  40211d:	mov    ecx,0x4
  402122:	call   rax
  402124:	xor    eax,eax
  402126:	jmp    0x402093
  40212b:	nop    DWORD PTR [rax+rax*1+0x0]
  402130:	cmp    eax,0xc000001d
  402135:	je     0x4020fe
  402137:	cmp    eax,0xc000008c
  40213c:	je     0x402160
  40213e:	mov    eax,0x1
  402143:	add    rsp,0x28
  402147:	ret    
  402148:	mov    edx,0x1
  40214d:	mov    ecx,0x8
  402152:	call   0x402af8
  402157:	call   0x401b20
  40215c:	nop    DWORD PTR [rax+0x0]
  402160:	xor    eax,eax
  402162:	add    rsp,0x28
  402166:	ret    
  402167:	nop    WORD PTR [rax+rax*1+0x0]
  402170:	xor    edx,edx
  402172:	mov    ecx,0x8
  402177:	call   0x402af8
  40217c:	cmp    rax,0x1
  402180:	mov    rdx,rax
  402183:	jne    0x4020d4
  402189:	mov    edx,0x1
  40218e:	mov    ecx,0x8
  402193:	call   0x402af8
  402198:	xor    eax,eax
  40219a:	jmp    0x402093
  40219f:	nop
  4021a0:	mov    eax,0x4
  4021a5:	add    rsp,0x28
  4021a9:	ret    
  4021aa:	mov    edx,0x1
  4021af:	mov    ecx,0x4
  4021b4:	call   0x402af8
  4021b9:	xor    eax,eax
  4021bb:	jmp    0x402093
  4021c0:	mov    edx,0x1
  4021c5:	mov    ecx,0xb
  4021ca:	call   0x402af8
  4021cf:	xor    eax,eax
  4021d1:	jmp    0x402093
  4021d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021e0:	push   r12
  4021e2:	push   rbp
  4021e3:	push   rdi
  4021e4:	push   rsi
  4021e5:	push   rbx
  4021e6:	sub    rsp,0x20
  4021ea:	call   0x402950
  4021ef:	mov    rbp,rax
  4021f2:	mov    eax,DWORD PTR [rip+0x54d0]        # 0x4076c8
  4021f8:	test   eax,eax
  4021fa:	jne    0x402221
  4021fc:	test   rbp,rbp
  4021ff:	je     0x402221
  402201:	lea    rcx,[rip+0x21f8]        # 0x404400
  402208:	mov    DWORD PTR [rip+0x54b6],0x1        # 0x4076c8
  402212:	call   0x402790
  402217:	test   rax,rax
  40221a:	je     0x402230
  40221c:	mov    eax,0x1
  402221:	add    rsp,0x20
  402225:	pop    rbx
  402226:	pop    rsi
  402227:	pop    rdi
  402228:	pop    rbp
  402229:	pop    r12
  40222b:	ret    
  40222c:	nop    DWORD PTR [rax+0x0]
  402230:	lea    rbx,[rip+0x55c9]        # 0x407800
  402237:	mov    ecx,0x30
  40223c:	lea    rdx,[rip+0x54bd]        # 0x407700
  402243:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402030
  40224a:	xor    esi,esi
  40224c:	mov    rdi,rbx
  40224f:	rep stos QWORD PTR es:[rdi],rax
  402252:	mov    rdi,rdx
  402255:	sub    r12,rbp
  402258:	mov    cl,0x20
  40225a:	rep stos QWORD PTR es:[rdi],rax
  40225d:	mov    rdi,rdx
  402260:	jmp    0x402290
  402262:	mov    BYTE PTR [rdi],0x9
  402265:	mov    DWORD PTR [rdi+0x4],r12d
  402269:	add    rsi,0x1
  40226d:	mov    edx,DWORD PTR [rax+0xc]
  402270:	add    rbx,0xc
  402274:	mov    DWORD PTR [rbx-0xc],edx
  402277:	add    edx,DWORD PTR [rax+0x8]
  40227a:	mov    rax,rdi
  40227d:	sub    rax,rbp
  402280:	add    rdi,0x8
  402284:	mov    DWORD PTR [rbx-0x4],eax
  402287:	mov    DWORD PTR [rbx-0x8],edx
  40228a:	cmp    rsi,0x20
  40228e:	je     0x4022c5
  402290:	mov    rcx,rsi
  402293:	call   0x4028c0
  402298:	test   rax,rax
  40229b:	jne    0x402262
  40229d:	test   rsi,rsi
  4022a0:	je     0x40221c
  4022a6:	mov    edx,esi
  4022a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022b0:	mov    r8,rbp
  4022b3:	lea    rcx,[rip+0x5546]        # 0x407800
  4022ba:	call   QWORD PTR [rip+0x6054]        # 0x408314
  4022c0:	jmp    0x40221c
  4022c5:	mov    edx,0x20
  4022ca:	jmp    0x4022b0
  4022cc:	nop    DWORD PTR [rax+0x0]
  4022d0:	push   rbx
  4022d1:	sub    rsp,0x20
  4022d5:	mov    rdx,QWORD PTR [rcx]
  4022d8:	mov    eax,DWORD PTR [rdx]
  4022da:	mov    r8d,eax
  4022dd:	and    r8d,0x20ffffff
  4022e4:	cmp    r8d,0x20474343
  4022eb:	je     0x4023f0
  4022f1:	cmp    eax,0xc0000091
  4022f6:	mov    rbx,rcx
  4022f9:	ja     0x402380
  4022ff:	cmp    eax,0xc000008d
  402304:	jae    0x402397
  40230a:	cmp    eax,0xc0000008
  40230f:	je     0x402343
  402311:	ja     0x402350
  402313:	cmp    eax,0x80000002
  402318:	je     0x402343
  40231a:	cmp    eax,0xc0000005
  40231f:	jne    0x402362
  402321:	xor    edx,edx
  402323:	mov    ecx,0xb
  402328:	call   0x402af8
  40232d:	cmp    rax,0x1
  402331:	je     0x402460
  402337:	test   rax,rax
  40233a:	je     0x402362
  40233c:	mov    ecx,0xb
  402341:	call   rax
  402343:	mov    eax,0xffffffff
  402348:	add    rsp,0x20
  40234c:	pop    rbx
  40234d:	ret    
  40234e:	xchg   ax,ax
  402350:	cmp    eax,0xc000001d
  402355:	je     0x402416
  40235b:	cmp    eax,0xc000008c
  402360:	je     0x402343
  402362:	mov    rax,QWORD PTR [rip+0x5357]        # 0x4076c0
  402369:	test   rax,rax
  40236c:	je     0x402348
  40236e:	mov    rcx,rbx
  402371:	add    rsp,0x20
  402375:	pop    rbx
  402376:	rex.W jmp rax
  402379:	nop    DWORD PTR [rax+0x0]
  402380:	cmp    eax,0xc0000094
  402385:	je     0x4023c2
  402387:	ja     0x402400
  402389:	cmp    eax,0xc0000092
  40238e:	je     0x402343
  402390:	cmp    eax,0xc0000093
  402395:	jne    0x402362
  402397:	xor    edx,edx
  402399:	mov    ecx,0x8
  40239e:	call   0x402af8
  4023a3:	cmp    rax,0x1
  4023a7:	jne    0x4023d4
  4023a9:	mov    edx,0x1
  4023ae:	mov    ecx,0x8
  4023b3:	call   0x402af8
  4023b8:	call   0x401b20
  4023bd:	jmp    0x402343
  4023c2:	xor    edx,edx
  4023c4:	mov    ecx,0x8
  4023c9:	call   0x402af8
  4023ce:	cmp    rax,0x1
  4023d2:	je     0x402442
  4023d4:	test   rax,rax
  4023d7:	je     0x402362
  4023d9:	mov    ecx,0x8
  4023de:	call   rax
  4023e0:	mov    eax,0xffffffff
  4023e5:	jmp    0x402348
  4023ea:	nop    WORD PTR [rax+rax*1+0x0]
  4023f0:	test   BYTE PTR [rdx+0x4],0x1
  4023f4:	jne    0x4022f1
  4023fa:	jmp    0x402343
  4023ff:	nop
  402400:	cmp    eax,0xc0000095
  402405:	je     0x402343
  40240b:	cmp    eax,0xc0000096
  402410:	jne    0x402362
  402416:	xor    edx,edx
  402418:	mov    ecx,0x4
  40241d:	call   0x402af8
  402422:	cmp    rax,0x1
  402426:	je     0x402474
  402428:	test   rax,rax
  40242b:	je     0x402362
  402431:	mov    ecx,0x4
  402436:	call   rax
  402438:	mov    eax,0xffffffff
  40243d:	jmp    0x402348
  402442:	mov    edx,0x1
  402447:	mov    ecx,0x8
  40244c:	call   0x402af8
  402451:	jmp    0x402343
  402456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402460:	mov    edx,0x1
  402465:	mov    ecx,0xb
  40246a:	call   0x402af8
  40246f:	jmp    0x402343
  402474:	mov    edx,0x1
  402479:	mov    ecx,0x4
  40247e:	call   0x402af8
  402483:	jmp    0x402343
  402488:	nop
  402489:	nop
  40248a:	nop
  40248b:	nop
  40248c:	nop
  40248d:	nop
  40248e:	nop
  40248f:	nop
  402490:	push   rbp
  402491:	push   rdi
  402492:	push   rsi
  402493:	push   rbx
  402494:	sub    rsp,0x28
  402498:	lea    rcx,[rip+0x5501]        # 0x4079a0
  40249f:	call   QWORD PTR [rip+0x5e17]        # 0x4082bc
  4024a5:	mov    rbx,QWORD PTR [rip+0x54d4]        # 0x407980
  4024ac:	test   rbx,rbx
  4024af:	je     0x4024e4
  4024b1:	mov    rbp,QWORD PTR [rip+0x5e94]        # 0x40834c
  4024b8:	mov    rdi,QWORD PTR [rip+0x5e1d]        # 0x4082dc
  4024bf:	nop
  4024c0:	mov    ecx,DWORD PTR [rbx]
  4024c2:	call   rbp
  4024c4:	mov    rsi,rax
  4024c7:	call   rdi
  4024c9:	test   eax,eax
  4024cb:	jne    0x4024db
  4024cd:	test   rsi,rsi
  4024d0:	je     0x4024db
  4024d2:	mov    rax,QWORD PTR [rbx+0x8]
  4024d6:	mov    rcx,rsi
  4024d9:	call   rax
  4024db:	mov    rbx,QWORD PTR [rbx+0x10]
  4024df:	test   rbx,rbx
  4024e2:	jne    0x4024c0
  4024e4:	mov    rax,QWORD PTR [rip+0x5e19]        # 0x408304
  4024eb:	lea    rcx,[rip+0x54ae]        # 0x4079a0
  4024f2:	add    rsp,0x28
  4024f6:	pop    rbx
  4024f7:	pop    rsi
  4024f8:	pop    rdi
  4024f9:	pop    rbp
  4024fa:	rex.W jmp rax
  4024fd:	nop    DWORD PTR [rax]
  402500:	push   rdi
  402501:	push   rsi
  402502:	push   rbx
  402503:	sub    rsp,0x20
  402507:	mov    eax,DWORD PTR [rip+0x547b]        # 0x407988
  40250d:	test   eax,eax
  40250f:	jne    0x402520
  402511:	add    rsp,0x20
  402515:	pop    rbx
  402516:	pop    rsi
  402517:	pop    rdi
  402518:	ret    
  402519:	nop    DWORD PTR [rax+0x0]
  402520:	mov    rsi,rdx
  402523:	mov    edi,ecx
  402525:	mov    edx,0x18
  40252a:	mov    ecx,0x1
  40252f:	call   0x402b48
  402534:	test   rax,rax
  402537:	mov    rbx,rax
  40253a:	je     0x402578
  40253c:	mov    DWORD PTR [rax],edi
  40253e:	mov    QWORD PTR [rax+0x8],rsi
  402542:	lea    rcx,[rip+0x5457]        # 0x4079a0
  402549:	call   QWORD PTR [rip+0x5d6d]        # 0x4082bc
  40254f:	mov    rax,QWORD PTR [rip+0x542a]        # 0x407980
  402556:	lea    rcx,[rip+0x5443]        # 0x4079a0
  40255d:	mov    QWORD PTR [rip+0x541c],rbx        # 0x407980
  402564:	mov    QWORD PTR [rbx+0x10],rax
  402568:	call   QWORD PTR [rip+0x5d96]        # 0x408304
  40256e:	xor    eax,eax
  402570:	add    rsp,0x20
  402574:	pop    rbx
  402575:	pop    rsi
  402576:	pop    rdi
  402577:	ret    
  402578:	mov    eax,0xffffffff
  40257d:	jmp    0x402511
  40257f:	nop
  402580:	push   rbx
  402581:	sub    rsp,0x20
  402585:	mov    eax,DWORD PTR [rip+0x53fd]        # 0x407988
  40258b:	test   eax,eax
  40258d:	jne    0x4025a0
  40258f:	xor    eax,eax
  402591:	add    rsp,0x20
  402595:	pop    rbx
  402596:	ret    
  402597:	nop    WORD PTR [rax+rax*1+0x0]
  4025a0:	mov    ebx,ecx
  4025a2:	lea    rcx,[rip+0x53f7]        # 0x4079a0
  4025a9:	call   QWORD PTR [rip+0x5d0d]        # 0x4082bc
  4025af:	mov    rdx,QWORD PTR [rip+0x53ca]        # 0x407980
  4025b6:	test   rdx,rdx
  4025b9:	je     0x4025d7
  4025bb:	mov    eax,DWORD PTR [rdx]
  4025bd:	cmp    eax,ebx
  4025bf:	jne    0x4025ce
  4025c1:	jmp    0x40260f
  4025c3:	mov    r8d,DWORD PTR [rax]
  4025c6:	cmp    r8d,ebx
  4025c9:	je     0x4025f0
  4025cb:	mov    rdx,rax
  4025ce:	mov    rax,QWORD PTR [rdx+0x10]
  4025d2:	test   rax,rax
  4025d5:	jne    0x4025c3
  4025d7:	lea    rcx,[rip+0x53c2]        # 0x4079a0
  4025de:	call   QWORD PTR [rip+0x5d20]        # 0x408304
  4025e4:	xor    eax,eax
  4025e6:	add    rsp,0x20
  4025ea:	pop    rbx
  4025eb:	ret    
  4025ec:	nop    DWORD PTR [rax+0x0]
  4025f0:	mov    rcx,rax
  4025f3:	mov    rax,QWORD PTR [rax+0x10]
  4025f7:	mov    QWORD PTR [rdx+0x10],rax
  4025fb:	call   0x402b20
  402600:	lea    rcx,[rip+0x5399]        # 0x4079a0
  402607:	call   QWORD PTR [rip+0x5cf7]        # 0x408304
  40260d:	jmp    0x4025e4
  40260f:	mov    rax,QWORD PTR [rdx+0x10]
  402613:	mov    rcx,rdx
  402616:	mov    QWORD PTR [rip+0x5363],rax        # 0x407980
  40261d:	jmp    0x4025fb
  40261f:	nop
  402620:	push   rbx
  402621:	sub    rsp,0x20
  402625:	cmp    edx,0x1
  402628:	je     0x4026c0
  40262e:	jb     0x402660
  402630:	cmp    edx,0x2
  402633:	je     0x402650
  402635:	cmp    edx,0x3
  402638:	jne    0x402655
  40263a:	mov    eax,DWORD PTR [rip+0x5348]        # 0x407988
  402640:	test   eax,eax
  402642:	je     0x402655
  402644:	call   0x402490
  402649:	jmp    0x402655
  40264b:	nop    DWORD PTR [rax+rax*1+0x0]
  402650:	call   0x401b20
  402655:	mov    eax,0x1
  40265a:	add    rsp,0x20
  40265e:	pop    rbx
  40265f:	ret    
  402660:	mov    eax,DWORD PTR [rip+0x5322]        # 0x407988
  402666:	test   eax,eax
  402668:	jne    0x4026f0
  40266e:	mov    eax,DWORD PTR [rip+0x5314]        # 0x407988
  402674:	cmp    eax,0x1
  402677:	jne    0x402655
  402679:	mov    rcx,QWORD PTR [rip+0x5300]        # 0x407980
  402680:	test   rcx,rcx
  402683:	je     0x402696
  402685:	mov    rbx,QWORD PTR [rcx+0x10]
  402689:	call   0x402b20
  40268e:	test   rbx,rbx
  402691:	mov    rcx,rbx
  402694:	jne    0x402685
  402696:	lea    rcx,[rip+0x5303]        # 0x4079a0
  40269d:	mov    QWORD PTR [rip+0x52d8],0x0        # 0x407980
  4026a8:	mov    DWORD PTR [rip+0x52d6],0x0        # 0x407988
  4026b2:	call   QWORD PTR [rip+0x5bfc]        # 0x4082b4
  4026b8:	jmp    0x402655
  4026ba:	nop    WORD PTR [rax+rax*1+0x0]
  4026c0:	mov    eax,DWORD PTR [rip+0x52c2]        # 0x407988
  4026c6:	test   eax,eax
  4026c8:	je     0x4026e0
  4026ca:	mov    eax,0x1
  4026cf:	mov    DWORD PTR [rip+0x52af],0x1        # 0x407988
  4026d9:	add    rsp,0x20
  4026dd:	pop    rbx
  4026de:	ret    
  4026df:	nop
  4026e0:	lea    rcx,[rip+0x52b9]        # 0x4079a0
  4026e7:	call   QWORD PTR [rip+0x5c0f]        # 0x4082fc
  4026ed:	jmp    0x4026ca
  4026ef:	nop
  4026f0:	call   0x402490
  4026f5:	jmp    0x40266e
  4026fa:	nop
  4026fb:	nop
  4026fc:	nop
  4026fd:	nop
  4026fe:	nop
  4026ff:	nop
  402700:	movsxd rax,DWORD PTR [rcx+0x3c]
  402704:	add    rcx,rax
  402707:	xor    eax,eax
  402709:	cmp    DWORD PTR [rcx],0x4550
  40270f:	je     0x402713
  402711:	repz ret 
  402713:	xor    eax,eax
  402715:	cmp    WORD PTR [rcx+0x18],0x20b
  40271b:	sete   al
  40271e:	ret    
  40271f:	nop
  402720:	cmp    WORD PTR [rcx],0x5a4d
  402725:	je     0x402730
  402727:	xor    eax,eax
  402729:	ret    
  40272a:	nop    WORD PTR [rax+rax*1+0x0]
  402730:	jmp    0x402700
  402732:	nop    DWORD PTR [rax+0x0]
  402736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402740:	movsxd rax,DWORD PTR [rcx+0x3c]
  402744:	add    rcx,rax
  402747:	movzx  eax,WORD PTR [rcx+0x14]
  40274b:	lea    rax,[rcx+rax*1+0x18]
  402750:	movzx  ecx,WORD PTR [rcx+0x6]
  402754:	test   ecx,ecx
  402756:	je     0x402781
  402758:	sub    ecx,0x1
  40275b:	lea    rcx,[rcx+rcx*4]
  40275f:	lea    r9,[rax+rcx*8+0x28]
  402764:	mov    r8d,DWORD PTR [rax+0xc]
  402768:	cmp    r8,rdx
  40276b:	mov    rcx,r8
  40276e:	ja     0x402778
  402770:	add    ecx,DWORD PTR [rax+0x8]
  402773:	cmp    rdx,rcx
  402776:	jb     0x402783
  402778:	add    rax,0x28
  40277c:	cmp    rax,r9
  40277f:	jne    0x402764
  402781:	xor    eax,eax
  402783:	repz ret 
  402785:	nop
  402786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402790:	push   rdi
  402791:	push   rsi
  402792:	push   rbx
  402793:	sub    rsp,0x20
  402797:	mov    rsi,rcx
  40279a:	call   0x402af0
  40279f:	cmp    rax,0x8
  4027a3:	ja     0x4027c0
  4027a5:	mov    rbx,QWORD PTR [rip+0x1cc4]        # 0x404470
  4027ac:	xor    edi,edi
  4027ae:	cmp    WORD PTR [rbx],0x5a4d
  4027b3:	je     0x4027d0
  4027b5:	mov    rax,rdi
  4027b8:	add    rsp,0x20
  4027bc:	pop    rbx
  4027bd:	pop    rsi
  4027be:	pop    rdi
  4027bf:	ret    
  4027c0:	xor    edi,edi
  4027c2:	mov    rax,rdi
  4027c5:	add    rsp,0x20
  4027c9:	pop    rbx
  4027ca:	pop    rsi
  4027cb:	pop    rdi
  4027cc:	ret    
  4027cd:	nop    DWORD PTR [rax]
  4027d0:	mov    rcx,rbx
  4027d3:	call   0x402700
  4027d8:	test   eax,eax
  4027da:	je     0x4027b5
  4027dc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4027e0:	add    rdx,rbx
  4027e3:	movzx  eax,WORD PTR [rdx+0x14]
  4027e7:	lea    rbx,[rdx+rax*1+0x18]
  4027ec:	movzx  eax,WORD PTR [rdx+0x6]
  4027f0:	test   eax,eax
  4027f2:	je     0x4027b5
  4027f4:	sub    eax,0x1
  4027f7:	lea    rax,[rax+rax*4]
  4027fb:	lea    rdi,[rbx+rax*8+0x28]
  402800:	jmp    0x40280b
  402802:	add    rbx,0x28
  402806:	cmp    rbx,rdi
  402809:	je     0x4027c0
  40280b:	mov    r8d,0x8
  402811:	mov    rdx,rsi
  402814:	mov    rcx,rbx
  402817:	call   0x402ae8
  40281c:	test   eax,eax
  40281e:	jne    0x402802
  402820:	mov    rdi,rbx
  402823:	mov    rax,rdi
  402826:	add    rsp,0x20
  40282a:	pop    rbx
  40282b:	pop    rsi
  40282c:	pop    rdi
  40282d:	ret    
  40282e:	xchg   ax,ax
  402830:	push   rsi
  402831:	push   rbx
  402832:	sub    rsp,0x28
  402836:	mov    rbx,QWORD PTR [rip+0x1c33]        # 0x404470
  40283d:	cmp    WORD PTR [rbx],0x5a4d
  402842:	je     0x402850
  402844:	xor    eax,eax
  402846:	add    rsp,0x28
  40284a:	pop    rbx
  40284b:	pop    rsi
  40284c:	ret    
  40284d:	nop    DWORD PTR [rax]
  402850:	mov    rsi,rcx
  402853:	mov    rcx,rbx
  402856:	call   0x402700
  40285b:	test   eax,eax
  40285d:	je     0x402844
  40285f:	sub    rsi,rbx
  402862:	mov    rcx,rbx
  402865:	mov    rdx,rsi
  402868:	add    rsp,0x28
  40286c:	pop    rbx
  40286d:	pop    rsi
  40286e:	jmp    0x402740
  402873:	nop    DWORD PTR [rax]
  402876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402880:	push   rbx
  402881:	sub    rsp,0x20
  402885:	mov    rbx,QWORD PTR [rip+0x1be4]        # 0x404470
  40288c:	xor    eax,eax
  40288e:	cmp    WORD PTR [rbx],0x5a4d
  402893:	je     0x4028a0
  402895:	add    rsp,0x20
  402899:	pop    rbx
  40289a:	ret    
  40289b:	nop    DWORD PTR [rax+rax*1+0x0]
  4028a0:	mov    rcx,rbx
  4028a3:	call   0x402700
  4028a8:	test   eax,eax
  4028aa:	je     0x402895
  4028ac:	movsxd rax,DWORD PTR [rbx+0x3c]
  4028b0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4028b5:	add    rsp,0x20
  4028b9:	pop    rbx
  4028ba:	ret    
  4028bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4028c0:	push   rdi
  4028c1:	push   rsi
  4028c2:	push   rbx
  4028c3:	sub    rsp,0x20
  4028c7:	mov    rsi,QWORD PTR [rip+0x1ba2]        # 0x404470
  4028ce:	xor    edi,edi
  4028d0:	mov    rbx,rcx
  4028d3:	cmp    WORD PTR [rsi],0x5a4d
  4028d8:	je     0x4028e5
  4028da:	mov    rax,rdi
  4028dd:	add    rsp,0x20
  4028e1:	pop    rbx
  4028e2:	pop    rsi
  4028e3:	pop    rdi
  4028e4:	ret    
  4028e5:	mov    rcx,rsi
  4028e8:	call   0x402700
  4028ed:	test   eax,eax
  4028ef:	je     0x4028da
  4028f1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4028f5:	add    rsi,rax
  4028f8:	movzx  eax,WORD PTR [rsi+0x14]
  4028fc:	lea    rdx,[rsi+rax*1+0x18]
  402901:	movzx  eax,WORD PTR [rsi+0x6]
  402905:	test   eax,eax
  402907:	je     0x4028da
  402909:	sub    eax,0x1
  40290c:	lea    rax,[rax+rax*4]
  402910:	lea    rax,[rdx+rax*8+0x28]
  402915:	test   BYTE PTR [rdx+0x27],0x20
  402919:	je     0x402924
  40291b:	test   rbx,rbx
  40291e:	je     0x402940
  402920:	sub    rbx,0x1
  402924:	add    rdx,0x28
  402928:	cmp    rdx,rax
  40292b:	jne    0x402915
  40292d:	xor    edi,edi
  40292f:	mov    rax,rdi
  402932:	add    rsp,0x20
  402936:	pop    rbx
  402937:	pop    rsi
  402938:	pop    rdi
  402939:	ret    
  40293a:	nop    WORD PTR [rax+rax*1+0x0]
  402940:	mov    rdi,rdx
  402943:	mov    rax,rdi
  402946:	add    rsp,0x20
  40294a:	pop    rbx
  40294b:	pop    rsi
  40294c:	pop    rdi
  40294d:	ret    
  40294e:	xchg   ax,ax
  402950:	push   rsi
  402951:	push   rbx
  402952:	sub    rsp,0x28
  402956:	mov    rsi,QWORD PTR [rip+0x1b13]        # 0x404470
  40295d:	xor    ebx,ebx
  40295f:	cmp    WORD PTR [rsi],0x5a4d
  402964:	je     0x402970
  402966:	mov    rax,rbx
  402969:	add    rsp,0x28
  40296d:	pop    rbx
  40296e:	pop    rsi
  40296f:	ret    
  402970:	mov    rcx,rsi
  402973:	call   0x402700
  402978:	test   eax,eax
  40297a:	cmovne rbx,rsi
  40297e:	mov    rax,rbx
  402981:	add    rsp,0x28
  402985:	pop    rbx
  402986:	pop    rsi
  402987:	ret    
  402988:	nop    DWORD PTR [rax+rax*1+0x0]
  402990:	push   rsi
  402991:	push   rbx
  402992:	sub    rsp,0x28
  402996:	mov    rbx,QWORD PTR [rip+0x1ad3]        # 0x404470
  40299d:	xor    eax,eax
  40299f:	cmp    WORD PTR [rbx],0x5a4d
  4029a4:	je     0x4029b0
  4029a6:	add    rsp,0x28
  4029aa:	pop    rbx
  4029ab:	pop    rsi
  4029ac:	ret    
  4029ad:	nop    DWORD PTR [rax]
  4029b0:	mov    rsi,rcx
  4029b3:	mov    rcx,rbx
  4029b6:	call   0x402700
  4029bb:	test   eax,eax
  4029bd:	je     0x4029a6
  4029bf:	sub    rsi,rbx
  4029c2:	mov    rcx,rbx
  4029c5:	mov    rdx,rsi
  4029c8:	call   0x402740
  4029cd:	test   rax,rax
  4029d0:	je     0x4029e1
  4029d2:	mov    eax,DWORD PTR [rax+0x24]
  4029d5:	not    eax
  4029d7:	shr    eax,0x1f
  4029da:	add    rsp,0x28
  4029de:	pop    rbx
  4029df:	pop    rsi
  4029e0:	ret    
  4029e1:	xor    eax,eax
  4029e3:	jmp    0x4029a6
  4029e5:	nop
  4029e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029f0:	push   rbp
  4029f1:	push   rdi
  4029f2:	push   rsi
  4029f3:	push   rbx
  4029f4:	sub    rsp,0x28
  4029f8:	mov    rdi,QWORD PTR [rip+0x1a71]        # 0x404470
  4029ff:	xor    ebp,ebp
  402a01:	mov    esi,ecx
  402a03:	cmp    WORD PTR [rdi],0x5a4d
  402a08:	je     0x402a20
  402a0a:	mov    rax,rbp
  402a0d:	add    rsp,0x28
  402a11:	pop    rbx
  402a12:	pop    rsi
  402a13:	pop    rdi
  402a14:	pop    rbp
  402a15:	ret    
  402a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a20:	mov    rcx,rdi
  402a23:	call   0x402700
  402a28:	test   eax,eax
  402a2a:	je     0x402a0a
  402a2c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402a30:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402a37:	test   edx,edx
  402a39:	je     0x402a0a
  402a3b:	mov    ebx,edx
  402a3d:	mov    rcx,rdi
  402a40:	mov    rdx,rbx
  402a43:	call   0x402740
  402a48:	test   rax,rax
  402a4b:	je     0x402a0a
  402a4d:	add    rbx,rdi
  402a50:	mov    rdx,rbx
  402a53:	jne    0x402a67
  402a55:	jmp    0x402a0a
  402a57:	nop    WORD PTR [rax+rax*1+0x0]
  402a60:	sub    esi,0x1
  402a63:	add    rdx,0x14
  402a67:	mov    ecx,DWORD PTR [rdx+0x4]
  402a6a:	test   ecx,ecx
  402a6c:	jne    0x402a75
  402a6e:	mov    eax,DWORD PTR [rdx+0xc]
  402a71:	test   eax,eax
  402a73:	je     0x402a90
  402a75:	test   esi,esi
  402a77:	jg     0x402a60
  402a79:	mov    ebp,DWORD PTR [rdx+0xc]
  402a7c:	add    rbp,rdi
  402a7f:	mov    rax,rbp
  402a82:	add    rsp,0x28
  402a86:	pop    rbx
  402a87:	pop    rsi
  402a88:	pop    rdi
  402a89:	pop    rbp
  402a8a:	ret    
  402a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a90:	xor    ebp,ebp
  402a92:	mov    rax,rbp
  402a95:	add    rsp,0x28
  402a99:	pop    rbx
  402a9a:	pop    rsi
  402a9b:	pop    rdi
  402a9c:	pop    rbp
  402a9d:	ret    
  402a9e:	nop
  402a9f:	nop
  402aa0:	push   rcx
  402aa1:	push   rax
  402aa2:	cmp    rax,0x1000
  402aa8:	lea    rcx,[rsp+0x18]
  402aad:	jb     0x402ac8
  402aaf:	sub    rcx,0x1000
  402ab6:	or     QWORD PTR [rcx],0x0
  402aba:	sub    rax,0x1000
  402ac0:	cmp    rax,0x1000
  402ac6:	ja     0x402aaf
  402ac8:	sub    rcx,rax
  402acb:	or     QWORD PTR [rcx],0x0
  402acf:	pop    rax
  402ad0:	pop    rcx
  402ad1:	ret    
  402ad2:	nop
  402ad3:	nop
  402ad4:	nop
  402ad5:	nop
  402ad6:	nop
  402ad7:	nop
  402ad8:	nop
  402ad9:	nop
  402ada:	nop
  402adb:	nop
  402adc:	nop
  402add:	nop
  402ade:	nop
  402adf:	nop
  402ae0:	jmp    QWORD PTR [rip+0x597e]        # 0x408464
  402ae6:	nop
  402ae7:	nop
  402ae8:	jmp    QWORD PTR [rip+0x596e]        # 0x40845c
  402aee:	nop
  402aef:	nop
  402af0:	jmp    QWORD PTR [rip+0x595e]        # 0x408454
  402af6:	nop
  402af7:	nop
  402af8:	jmp    QWORD PTR [rip+0x594e]        # 0x40844c
  402afe:	nop
  402aff:	nop
  402b00:	jmp    QWORD PTR [rip+0x593e]        # 0x408444
  402b06:	nop
  402b07:	nop
  402b08:	jmp    QWORD PTR [rip+0x592e]        # 0x40843c
  402b0e:	nop
  402b0f:	nop
  402b10:	jmp    QWORD PTR [rip+0x591e]        # 0x408434
  402b16:	nop
  402b17:	nop
  402b18:	jmp    QWORD PTR [rip+0x590e]        # 0x40842c
  402b1e:	nop
  402b1f:	nop
  402b20:	jmp    QWORD PTR [rip+0x58fe]        # 0x408424
  402b26:	nop
  402b27:	nop
  402b28:	jmp    QWORD PTR [rip+0x58ee]        # 0x40841c
  402b2e:	nop
  402b2f:	nop
  402b30:	jmp    QWORD PTR [rip+0x58de]        # 0x408414
  402b36:	nop
  402b37:	nop
  402b38:	jmp    QWORD PTR [rip+0x58ce]        # 0x40840c
  402b3e:	nop
  402b3f:	nop
  402b40:	jmp    QWORD PTR [rip+0x58be]        # 0x408404
  402b46:	nop
  402b47:	nop
  402b48:	jmp    QWORD PTR [rip+0x58ae]        # 0x4083fc
  402b4e:	nop
  402b4f:	nop
  402b50:	jmp    QWORD PTR [rip+0x589e]        # 0x4083f4
  402b56:	nop
  402b57:	nop
  402b58:	jmp    QWORD PTR [rip+0x588e]        # 0x4083ec
  402b5e:	nop
  402b5f:	nop
  402b60:	jmp    QWORD PTR [rip+0x587e]        # 0x4083e4
  402b66:	nop
  402b67:	nop
  402b68:	jmp    QWORD PTR [rip+0x586e]        # 0x4083dc
  402b6e:	nop
  402b6f:	nop
  402b70:	jmp    QWORD PTR [rip+0x585e]        # 0x4083d4
  402b76:	nop
  402b77:	nop
  402b78:	jmp    QWORD PTR [rip+0x5846]        # 0x4083c4
  402b7e:	nop
  402b7f:	nop
  402b80:	jmp    QWORD PTR [rip+0x5836]        # 0x4083bc
  402b86:	nop
  402b87:	nop
  402b88:	jmp    QWORD PTR [rip+0x581e]        # 0x4083ac
  402b8e:	nop
  402b8f:	nop
  402b90:	jmp    QWORD PTR [rip+0x580e]        # 0x4083a4
  402b96:	nop
  402b97:	nop
  402b98:	jmp    QWORD PTR [rip+0x57fe]        # 0x40839c
  402b9e:	nop
  402b9f:	nop
  402ba0:	jmp    QWORD PTR [rip+0x57ee]        # 0x408394
  402ba6:	nop
  402ba7:	nop
  402ba8:	jmp    QWORD PTR [rip+0x57d6]        # 0x408384
  402bae:	nop
  402baf:	nop
  402bb0:	jmp    QWORD PTR [rip+0x57c6]        # 0x40837c
  402bb6:	nop
  402bb7:	nop
  402bb8:	jmp    QWORD PTR [rip+0x57b6]        # 0x408374
  402bbe:	nop
  402bbf:	nop
  402bc0:	mov    rax,QWORD PTR [rip+0x4e29]        # 0x4079f0
  402bc7:	ret    
  402bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bd0:	mov    rax,rcx
  402bd3:	xchg   QWORD PTR [rip+0x4e16],rax        # 0x4079f0
  402bda:	ret    
  402bdb:	nop
  402bdc:	nop
  402bdd:	nop
  402bde:	nop
  402bdf:	nop
  402be0:	jmp    QWORD PTR [rip+0x577e]        # 0x408364
  402be6:	nop
  402be7:	nop
  402be8:	jmp    QWORD PTR [rip+0x576e]        # 0x40835c
  402bee:	nop
  402bef:	nop
  402bf0:	jmp    QWORD PTR [rip+0x575e]        # 0x408354
  402bf6:	nop
  402bf7:	nop
  402bf8:	jmp    QWORD PTR [rip+0x574e]        # 0x40834c
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0x573e]        # 0x408344
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0x572e]        # 0x40833c
  402c0e:	nop
  402c0f:	nop
  402c10:	jmp    QWORD PTR [rip+0x571e]        # 0x408334
  402c16:	nop
  402c17:	nop
  402c18:	jmp    QWORD PTR [rip+0x570e]        # 0x40832c
  402c1e:	nop
  402c1f:	nop
  402c20:	jmp    QWORD PTR [rip+0x56fe]        # 0x408324
  402c26:	nop
  402c27:	nop
  402c28:	jmp    QWORD PTR [rip+0x56ee]        # 0x40831c
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0x56de]        # 0x408314
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0x56ce]        # 0x40830c
  402c3e:	nop
  402c3f:	nop
  402c40:	jmp    QWORD PTR [rip+0x56be]        # 0x408304
  402c46:	nop
  402c47:	nop
  402c48:	jmp    QWORD PTR [rip+0x56ae]        # 0x4082fc
  402c4e:	nop
  402c4f:	nop
  402c50:	jmp    QWORD PTR [rip+0x569e]        # 0x4082f4
  402c56:	nop
  402c57:	nop
  402c58:	jmp    QWORD PTR [rip+0x568e]        # 0x4082ec
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0x567e]        # 0x4082e4
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0x566e]        # 0x4082dc
  402c6e:	nop
  402c6f:	nop
  402c70:	jmp    QWORD PTR [rip+0x565e]        # 0x4082d4
  402c76:	nop
  402c77:	nop
  402c78:	jmp    QWORD PTR [rip+0x564e]        # 0x4082cc
  402c7e:	nop
  402c7f:	nop
  402c80:	jmp    QWORD PTR [rip+0x563e]        # 0x4082c4
  402c86:	nop
  402c87:	nop
  402c88:	jmp    QWORD PTR [rip+0x562e]        # 0x4082bc
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0x561e]        # 0x4082b4
  402c96:	nop
  402c97:	nop
  402c98:	nop    DWORD PTR [rax+rax*1+0x0]
  402ca0:	push   r13
  402ca2:	push   r12
  402ca4:	push   rbp
  402ca5:	push   rdi
  402ca6:	push   rsi
  402ca7:	push   rbx
  402ca8:	sub    rsp,0x68
  402cac:	mov    rbx,rdx
  402caf:	call   0x4016f0
  402cb4:	mov    r12,QWORD PTR [rbx+0x10]
  402cb8:	mov    r13,QWORD PTR [rbx]
  402cbb:	mov    rbp,QWORD PTR [rbx+0x8]
  402cbf:	test   r12,r12
  402cc2:	je     0x402ec8
  402cc8:	test   rbp,rbp
  402ccb:	je     0x402ec8
  402cd1:	lea    rdx,[rip+0x13ac]        # 0x404084
  402cd8:	mov    rcx,r12
  402cdb:	mov    QWORD PTR [rsp+0x58],0x0
  402ce4:	call   0x401530
  402ce9:	test   rax,rax
  402cec:	mov    rbx,rax
  402cef:	je     0x402e46
  402cf5:	lea    r9,[rsp+0x58]
  402cfa:	lea    r8,[rsp+0x3e]
  402cff:	mov    edx,0x87af
  402d04:	mov    rcx,rax
  402d07:	call   0x401570
  402d0c:	test   eax,eax
  402d0e:	jne    0x402d8b
  402d10:	mov    rcx,rbx
  402d13:	call   0x401548
  402d18:	test   rax,rax
  402d1b:	mov    rsi,rax
  402d1e:	je     0x402e9a
  402d24:	lea    rdx,[rip+0x13bc]        # 0x4040e7
  402d2b:	mov    rcx,rbp
  402d2e:	call   0x402b30
  402d33:	test   rax,rax
  402d36:	mov    rdi,rax
  402d39:	je     0x402e6f
  402d3f:	xor    edx,edx
  402d41:	mov    r8,rax
  402d44:	mov    rcx,rsi
  402d47:	call   0x401550
  402d4c:	test   eax,eax
  402d4e:	je     0x402df9
  402d54:	mov    rcx,rdi
  402d57:	call   0x402b38
  402d5c:	mov    rcx,rsi
  402d5f:	call   0x401540
  402d64:	mov    rcx,rsi
  402d67:	call   0x401558
  402d6c:	mov    rcx,rbx
  402d6f:	call   0x401568
  402d74:	mov    rcx,rbx
  402d77:	call   0x401538
  402d7c:	xor    eax,eax
  402d7e:	add    rsp,0x68
  402d82:	pop    rbx
  402d83:	pop    rsi
  402d84:	pop    rdi
  402d85:	pop    rbp
  402d86:	pop    r12
  402d88:	pop    r13
  402d8a:	ret    
  402d8b:	lea    r9,[rsp+0x40]
  402d90:	mov    rcx,rbx
  402d93:	mov    r8d,0x4
  402d99:	mov    edx,0x87af
  402d9e:	mov    WORD PTR [rsp+0x40],0x1
  402da5:	mov    WORD PTR [rsp+0x42],0x1
  402dac:	mov    WORD PTR [rsp+0x44],0x0
  402db3:	mov    WORD PTR [rsp+0x46],0x0
  402dba:	mov    QWORD PTR [rsp+0x50],0x0
  402dc3:	call   0x401560
  402dc8:	lea    r9,[rsp+0x50]
  402dcd:	mov    rcx,rbx
  402dd0:	mov    r8d,0x1
  402dd6:	mov    edx,0x87b0
  402ddb:	call   0x401560
  402de0:	lea    r8,[rip+0x12e5]        # 0x4040cc
  402de7:	mov    edx,0x87b1
  402dec:	mov    rcx,rbx
  402def:	call   0x401560
  402df4:	jmp    0x402d10
  402df9:	mov    rbx,QWORD PTR [rip+0x5594]        # 0x408394
  402e00:	mov    esi,0xfffffffc
  402e05:	call   rbx
  402e07:	lea    rdx,[rip+0x1312]        # 0x404120
  402e0e:	lea    rcx,[rax+0x60]
  402e12:	mov    r8,rbp
  402e15:	call   0x402b28
  402e1a:	call   rbx
  402e1c:	lea    rdx,[rip+0x132d]        # 0x404150
  402e23:	lea    rcx,[rax+0x60]
  402e27:	mov    QWORD PTR [rsp+0x28],r12
  402e2c:	mov    QWORD PTR [rsp+0x20],rbp
  402e31:	mov    r9d,esi
  402e34:	mov    r8,r13
  402e37:	call   0x402b28
  402e3c:	mov    ecx,0x2
  402e41:	call   0x402b40
  402e46:	mov    rcx,r12
  402e49:	or     esi,0xffffffff
  402e4c:	call   0x402b00
  402e51:	mov    rbx,QWORD PTR [rip+0x553c]        # 0x408394
  402e58:	call   rbx
  402e5a:	lea    rdx,[rip+0x1227]        # 0x404088
  402e61:	lea    rcx,[rax+0x60]
  402e65:	mov    r8,r12
  402e68:	call   0x402b28
  402e6d:	jmp    0x402e1a
  402e6f:	mov    rcx,rbp
  402e72:	mov    esi,0xfffffffd
  402e77:	call   0x402b00
  402e7c:	mov    rbx,QWORD PTR [rip+0x5511]        # 0x408394
  402e83:	call   rbx
  402e85:	lea    rdx,[rip+0x1264]        # 0x4040f0
  402e8c:	lea    rcx,[rax+0x60]
  402e90:	mov    r8,rbp
  402e93:	call   0x402b28
  402e98:	jmp    0x402e1a
  402e9a:	mov    rbx,QWORD PTR [rip+0x54f3]        # 0x408394
  402ea1:	mov    esi,0xfffffffe
  402ea6:	call   rbx
  402ea8:	lea    rcx,[rip+0x121e]        # 0x4040cd
  402eaf:	lea    r9,[rax+0x60]
  402eb3:	mov    r8d,0x19
  402eb9:	mov    edx,0x1
  402ebe:	call   0x402b18
  402ec3:	jmp    0x402e1a
  402ec8:	call   QWORD PTR [rip+0x54c6]        # 0x408394
  402ece:	lea    rdx,[rip+0x112b]        # 0x404000
  402ed5:	lea    rcx,[rax+0x60]
  402ed9:	mov    r8,r13
  402edc:	call   0x402b28
  402ee1:	mov    ecx,0x1
  402ee6:	call   0x402b40
  402eeb:	nop
  402eec:	nop
  402eed:	nop
  402eee:	nop
  402eef:	nop
  402ef0:	(bad)  
  402ef1:	(bad)  
  402ef2:	(bad)  
  402ef3:	(bad)  
  402ef4:	(bad)  
  402ef5:	(bad)  
  402ef6:	(bad)  
  402ef7:	inc    DWORD PTR [rax]
  402ef9:	add    BYTE PTR [rax],al
  402efb:	add    BYTE PTR [rax],al
  402efd:	add    BYTE PTR [rax],al
  402eff:	add    bh,bh
  402f01:	(bad)  
  402f02:	(bad)  
  402f03:	(bad)  
  402f04:	(bad)  
  402f05:	(bad)  
  402f06:	(bad)  
  402f07:	inc    DWORD PTR [rax]
  402f09:	add    BYTE PTR [rax],al
  402f0b:	add    BYTE PTR [rax],al
  402f0d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000403000 <.data>:
  403000:	or     al,BYTE PTR [rax]
	...
  40300e:	add    BYTE PTR [rax],al
  403010:	or     BYTE PTR [rdi],ch
  403012:	add    BYTE PTR [rax],al
	...
  40301d:	add    BYTE PTR [rax],al
  40301f:	add    bh,bh
  403021:	(bad)  
  403022:	(bad)  
  403023:	(bad)  
  403024:	(bad)  
  403025:	(bad)  
  403026:	(bad)  
  403027:	inc    DWORD PTR [rax]
  403029:	add    BYTE PTR [rax],al
  40302b:	add    BYTE PTR [rax],al
  40302d:	add    BYTE PTR [rax],al
  40302f:	add    bh,bh
	...
  40303d:	add    BYTE PTR [rax],al
  40303f:	add    BYTE PTR [rdx],al
	...
  40304d:	add    BYTE PTR [rax],al
  40304f:	add    bh,bh
  403051:	(bad)  
  403052:	(bad)  
  403053:	inc    DWORD PTR [rax]
	...
  40305d:	add    BYTE PTR [rax],al
  40305f:	add    al,al
  403061:	sub    eax,DWORD PTR [rax+0x0]
  403064:	add    BYTE PTR [rax],al
  403066:	add    BYTE PTR [rax],al
  403068:	shr    BYTE PTR [rbx],1
  40306a:	add    BYTE PTR [rax],al
  40306d:	add    BYTE PTR [rax],al
  40306f:	add    BYTE PTR [rdx],dh
  403071:	movabs ds:0x2b992ddf,al
  40307a:	add    BYTE PTR [rax],al
  40307c:	add    BYTE PTR [rax],al
  40307e:	add    BYTE PTR [rax],al
  403080:	int    0x5d
  403082:	and    dl,dl
  403084:	data16 (bad) 
  403086:	(bad)  
  403087:	inc    DWORD PTR [rax]
  403089:	add    BYTE PTR [rax],al
  40308b:	add    BYTE PTR [rax],al
  40308d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000404000 <.rdata>:
  404000:	jne    0x404075
  404002:	(bad)  
  404003:	cmp    ah,BYTE PTR gs:[eax]
  404007:	and    eax,0x69662073
  40400c:	ins    BYTE PTR es:[rdi],dx
  40400d:	gs cs outs dx,DWORD PTR gs:[esi]
  404012:	and    BYTE PTR [rsi+0x69],ah
  404015:	ins    BYTE PTR es:[rdi],dx
  404016:	gs cs je 0x404083
  40401a:	data16 data16 or ah,BYTE PTR [rdi+0x65]
  40401f:	outs   dx,DWORD PTR ds:[rsi]
  404020:	or     DWORD PTR [rsi+0x69],esp
  404023:	ins    BYTE PTR es:[rdi],dx
  404024:	and    BYTE PTR gs:[rbx+0x6f],ah
  404028:	outs   dx,BYTE PTR ds:[rsi]
  404029:	je     0x40408c
  40402b:	imul   ebp,DWORD PTR [rsi+0x69],0x7020676e
  404032:	jb     0x4040a3
  404034:	push   0x65
  404036:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40403a:	outs   dx,BYTE PTR ds:[rsi]
  40403b:	and    BYTE PTR [rax],ch
  40403d:	gs and BYTE PTR cs:[esi+0x72],ah
  404043:	outs   dx,DWORD PTR ds:[rsi]
  404044:	ins    DWORD PTR es:[rdi],dx
  404045:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  404049:	je     0x4040b2
  40404b:	outs   dx,DWORD PTR gs:[rsi]
  40404d:	sub    DWORD PTR [rdx],ecx
  40404f:	je     0x4040ba
  404051:	data16 or WORD PTR [rcx+rcx*2+0x46],dx
  404057:	rex.RX and BYTE PTR [rsi+0x69],r12b
  40405b:	ins    BYTE PTR es:[rdi],dx
  40405c:	and    BYTE PTR gs:[rcx+0x6e],ch
  404060:	je     0x4040d1
  404062:	and    BYTE PTR [rdi+0x68],dh
  404065:	imul   esp,DWORD PTR [rbx+0x68],0x65687420
  40406c:	and    BYTE PTR [rax+0x72],dh
  40406f:	outs   dx,DWORD PTR ds:[rsi]
  404070:	push   0x65
  404072:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  404076:	outs   dx,BYTE PTR ds:[rsi]
  404077:	and    BYTE PTR [rcx+0x73],ch
  40407a:	and    BYTE PTR [rdi+0x72],dh
  40407d:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x72000a6e
  404085:	sub    eax,DWORD PTR [rax]
  404087:	add    BYTE PTR [rbx+0x61],al
  40408a:	outs   dx,BYTE PTR ds:[rsi]
  40408b:	outs   dx,BYTE PTR ds:[rsi]
  40408c:	outs   dx,DWORD PTR ds:[rsi]
  40408d:	je     0x4040af
  40408f:	outs   dx,DWORD PTR ds:[rsi]
  404090:	jo     0x4040f7
  404092:	outs   dx,BYTE PTR ds:[rsi]
  404093:	and    BYTE PTR [rcx+rcx*2+0x46],dl
  404097:	rex.RX and BYTE PTR [rsi+0x69],r12b
  40409b:	ins    BYTE PTR es:[rdi],dx
  40409c:	and    BYTE PTR gs:[rip+0x64282073],ah        # 0x64686116
  4040a3:	outs   dx,DWORD PTR ds:[rsi]
  4040a4:	gs jae 0x4040c7
  4040a7:	outs   dx,BYTE PTR ds:[rsi]
  4040a8:	outs   dx,DWORD PTR ds:[rsi]
  4040a9:	je     0x4040cb
  4040ab:	gs js  0x404117
  4040ae:	jae    0x404124
  4040b0:	and    BYTE PTR [rdi+0x72],ch
  4040b3:	and    BYTE PTR [rsi+0x6f],ch
  4040b6:	je     0x4040d8
  4040b8:	(bad)  
  4040b9:	and    BYTE PTR [rsi+0x61],dh
  4040bc:	ins    BYTE PTR es:[rdi],dx
  4040bd:	imul   esp,DWORD PTR [rax+riz*1+0x54],0x20464649
  4040c5:	imul   bp,WORD PTR [rbp+riz*2+0x29],0xa
  4040cc:	add    BYTE PTR [rcx+0x6e],cl
  4040cf:	je     0x404136
  4040d1:	jb     0x404141
  4040d3:	(bad)  
  4040d4:	ins    BYTE PTR es:[rdi],dx
  4040d5:	and    BYTE PTR [rbp+0x72],ah
  4040d8:	jb     0x404149
  4040da:	jb     0x4040fc
  4040dc:	sub    BYTE PTR [rdi+0x54],al
  4040df:	rex.WB
  4040e0:	rex.RX
  4040e1:	rex.WRX
  4040e2:	gs ja  0x40410e
  4040e5:	or     al,BYTE PTR [rax]
  4040e7:	jb     0x4040e9
  4040e9:	add    BYTE PTR [rax],al
  4040eb:	add    BYTE PTR [rax],al
  4040ed:	add    BYTE PTR [rax],al
  4040ef:	add    BYTE PTR [rbx+0x61],al
  4040f2:	outs   dx,BYTE PTR ds:[rsi]
  4040f3:	outs   dx,BYTE PTR ds:[rsi]
  4040f4:	outs   dx,DWORD PTR ds:[rsi]
  4040f5:	je     0x404117
  4040f7:	outs   dx,DWORD PTR ds:[rsi]
  4040f8:	jo     0x40415f
  4040fa:	outs   dx,BYTE PTR ds:[rsi]
  4040fb:	and    BYTE PTR [rax+0x72],dh
  4040fe:	outs   dx,DWORD PTR ds:[rsi]
  4040ff:	push   0x65
  404101:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  404105:	outs   dx,BYTE PTR ds:[rsi]
  404106:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40410a:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  404111:	and    BYTE PTR [rsi+0x69],ah
  404114:	ins    BYTE PTR es:[rdi],dx
  404115:	and    BYTE PTR gs:[rip+0xa73],ah        # 0x404b8f
  40411c:	add    BYTE PTR [rax],al
  40411e:	add    BYTE PTR [rax],al
  404120:	push   rax
  404121:	jb     0x404192
  404123:	push   0x65
  404125:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  404129:	outs   dx,BYTE PTR ds:[rsi]
  40412a:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40412e:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  404135:	and    BYTE PTR [rsi+0x69],ah
  404138:	ins    BYTE PTR es:[rdi],dx
  404139:	and    BYTE PTR gs:[rcx+0x73],ch
  40413d:	and    BYTE PTR [rsi+0x6f],ch
  404140:	je     0x404162
  404142:	jbe    0x4041a5
  404144:	ins    BYTE PTR es:[rdi],dx
  404145:	imul   esp,DWORD PTR [rax+riz*1+0x28],0xa297325
  40414d:	add    BYTE PTR [rax],al
  40414f:	add    BYTE PTR [rip+0x65203a73],ah        # 0x65607bc8
  404155:	jb     0x4041c9
  404157:	outs   dx,DWORD PTR ds:[rsi]
  404158:	jb     0x40417a
  40415a:	and    eax,0x70612064
  40415f:	jo     0x4041cd
  404161:	jns    0x4041cc
  404163:	outs   dx,BYTE PTR ds:[rsi]
  404164:	and    BYTE PTR [eax+0x72],dh
  404168:	outs   dx,DWORD PTR ds:[rsi]
  404169:	push   0x65
  40416b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40416f:	outs   dx,BYTE PTR ds:[rsi]
  404170:	and    BYTE PTR [rsi+0x72],ah
  404173:	outs   dx,DWORD PTR ds:[rsi]
  404174:	ins    DWORD PTR es:[rdi],dx
  404175:	and    BYTE PTR [rip+0x6e692073],ah        # 0x6ea961ee
  40417b:	je     0x4041ec
  40417d:	and    BYTE PTR [rcx+rcx*2+0x46],dl
  404181:	rex.RX and BYTE PTR [rip+0xa73],r12b        # 0x404bfb
	...
  404190:	xor    BYTE PTR [rbp+0x40],0x0
  404194:	add    BYTE PTR [rax],al
  404196:	add    BYTE PTR [rax],al
  404198:	xor    BYTE PTR [rax+0x40],0x0
  40419c:	add    BYTE PTR [rax],al
  40419e:	add    BYTE PTR [rax],al
  4041a0:	rex sbb DWORD PTR [rax+0x0],eax
	...
  4041b0:	rex.B jb 0x40421a
  4041b3:	jne    0x404222
  4041b5:	outs   dx,BYTE PTR gs:[rsi]
  4041b7:	je     0x4041d9
  4041b9:	outs   dx,DWORD PTR fs:[rsi]
  4041bb:	ins    DWORD PTR es:[rdi],dx
  4041bc:	(bad)  
  4041bd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4041c4:	jb     0x4041e6
  4041c6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4041ca:	rex.B
  4041cb:	rex.WB
  4041cc:	rex.WRX sub QWORD PTR [rax],r8
  4041cf:	rex.B jb 0x404239
  4041d2:	jne    0x404241
  4041d4:	outs   dx,BYTE PTR gs:[rsi]
  4041d6:	je     0x4041f8
  4041d8:	jae    0x404243
  4041da:	outs   dx,BYTE PTR ds:[rsi]
  4041db:	addr32 jne 0x40424a
  4041de:	(bad)  
  4041df:	jb     0x40424a
  4041e1:	je     0x40425c
  4041e3:	and    BYTE PTR [rax],ch
  4041e5:	push   rbx
  4041e6:	rex.WB
  4041e7:	rex.RXB
  4041e8:	rex.WRX sub QWORD PTR [rax],r8
  4041eb:	add    BYTE PTR [rax],al
  4041ed:	add    BYTE PTR [rax],al
  4041ef:	add    BYTE PTR [rdi+0x76],cl
  4041f2:	gs jb  0x40425b
  4041f5:	ins    BYTE PTR es:[rdi],dx
  4041f6:	outs   dx,DWORD PTR ds:[rsi]
  4041f7:	ja     0x404219
  4041f9:	jb     0x40425c
  4041fb:	outs   dx,BYTE PTR ds:[rsi]
  4041fc:	and    BYTE PTR gs:[ebp+0x72],ah
  404201:	jb     0x404272
  404203:	jb     0x404225
  404205:	sub    BYTE PTR [rdi+0x56],cl
  404208:	rex.RB push r10
  40420a:	rex.RX
  40420b:	rex.WR
  40420c:	rex.WRXB push r15
  40420e:	sub    DWORD PTR [rax],eax
  404210:	push   rax
  404211:	(bad)  
  404212:	jb     0x404288
  404214:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40421b:	jae    0x40423d
  40421d:	outs   dx,DWORD PTR ds:[rsi]
  40421e:	data16 and BYTE PTR [rbx+0x69],dh
  404222:	outs   dx,BYTE PTR ds:[esi]
  404224:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40422b:	and    BYTE PTR gs:[rax],ch
  40422e:	push   rax
  40422f:	rex.WR
  404230:	rex.WRXB push r11
  404232:	push   rbx
  404233:	sub    DWORD PTR [rax],eax
  404235:	add    BYTE PTR [rax],al
  404237:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40423b:	(bad)  
  40423c:	ins    BYTE PTR es:[rdi],dx
  40423d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  404241:	jae    0x404263
  404243:	outs   dx,DWORD PTR ds:[rsi]
  404244:	data16 and BYTE PTR [rbx+0x69],dh
  404248:	outs   dx,BYTE PTR ds:[esi]
  40424a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  404251:	and    BYTE PTR gs:[rax],ch
  404254:	push   rsp
  404255:	rex.WR
  404256:	rex.WRXB push r11
  404258:	push   rbx
  404259:	sub    DWORD PTR [rax],eax
  40425b:	add    BYTE PTR [rax],al
  40425d:	add    BYTE PTR [rax],al
  40425f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  404263:	and    BYTE PTR [rdx+0x65],dh
  404266:	jae    0x4042dd
  404268:	ins    BYTE PTR es:[rdi],dx
  404269:	je     0x40428b
  40426b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  404272:	jae    0x4042e1
  404274:	(bad)  
  404275:	ins    BYTE PTR es:[rdi],dx
  404276:	ins    BYTE PTR es:[rdi],dx
  404277:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40427b:	(bad)  
  40427c:	and    BYTE PTR gs:[rdx+0x65],dh
  404280:	jo     0x4042f4
  404282:	gs jae 0x4042ea
  404285:	outs   dx,BYTE PTR ds:[rsi]
  404286:	je     0x4042ed
  404288:	and    BYTE PTR fs:[rax],ch
  40428b:	push   rbp
  40428c:	rex.WRX
  40428d:	rex.R
  40428e:	rex.RB push r10
  404290:	rex.RX
  404291:	rex.WR
  404292:	rex.WRXB push r15
  404294:	sub    DWORD PTR [rax],eax
  404296:	push   rbp
  404297:	outs   dx,BYTE PTR ds:[rsi]
  404298:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40429c:	outs   dx,BYTE PTR ds:[rsi]
  40429d:	and    BYTE PTR [rbp+0x72],ah
  4042a0:	jb     0x404311
  4042a2:	jb     0x4042a4
  4042a4:	add    BYTE PTR [rax],al
  4042a6:	add    BYTE PTR [rax],al
  4042a8:	pop    rdi
  4042a9:	ins    DWORD PTR es:[rdi],dx
  4042aa:	(bad)  
  4042ab:	je     0x404315
  4042ad:	gs jb  0x404322
  4042b0:	sub    BYTE PTR [rcx],ch
  4042b2:	cmp    ah,BYTE PTR [rax]
  4042b4:	and    eax,0x6e692073
  4042b9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67656b32
  4042bf:	sub    al,0x20
  4042c1:	and    eax,0x20202967
  4042c6:	sub    BYTE PTR [rdx+0x65],dh
  4042c9:	je     0x404341
  4042cb:	(bad)  
  4042cc:	ins    BYTE PTR es:[rdi],dx
  4042cd:	cmp    eax,0xa296725
  4042d2:	add    BYTE PTR [rax],al
  4042d4:	cmp    al,0xd8
  4042d6:	(bad)  
  4042d7:	(bad)  
  4042d8:	jge    0x4042b1
  4042da:	(bad)  
  4042db:	(bad)  
  4042dc:	in     al,dx
  4042dd:	xlat   BYTE PTR ds:[rbx]
  4042de:	(bad)  
  4042df:	(bad)  
  4042e0:	cld    
  4042e1:	xlat   BYTE PTR ds:[rbx]
  4042e2:	(bad)  
  4042e3:	dec    DWORD PTR [rax+rbx*8]
  4042e6:	(bad)  
  4042e7:	call   FWORD PTR [rax+rbx*8]
  4042ea:	(bad)  
  4042eb:	jmp    FWORD PTR [rax+rbx*8]
  4042ee:	(bad)  
  4042ef:	dec    DWORD PTR [rbp+0x69]
  4042f2:	outs   dx,BYTE PTR ds:[rsi]
  4042f3:	addr32 ja 0x404323
  4042f6:	ja     0x40432e
  4042f8:	xor    al,0x20
  4042fa:	jb     0x404371
  4042fc:	outs   dx,BYTE PTR ds:[rsi]
  4042fd:	je     0x404368
  4042ff:	ins    DWORD PTR es:[rdi],dx
  404300:	and    BYTE PTR gs:[rsi+0x61],ah
  404304:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40430c:	add    BYTE PTR [rax],al
  40430e:	add    BYTE PTR [rax],al
  404310:	rex.B
  404311:	fs fs jb 0x40437a
  404315:	jae    0x40438a
  404317:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8638d
  40431d:	jae    0x40433f
  40431f:	outs   dx,BYTE PTR ds:[rsi]
  404320:	outs   dx,DWORD PTR ds:[rsi]
  404321:	and    BYTE PTR [rcx+0x6d],ch
  404324:	(bad)  
  404325:	addr32 gs sub eax,0x74636573
  40432c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  404333:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40433a:	jne    0x4043a1
  40433c:	jb     0x4043b7
  40433e:	and    BYTE PTR [rsi+0x61],ah
  404341:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  404349:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a263b3
  40434f:	je     0x4043b6
  404351:	jae    0x404373
  404353:	(bad)  
  404354:	je     0x404376
  404356:	(bad)  
  404357:	fs fs jb 0x4043c0
  40435b:	jae    0x4043d0
  40435d:	and    BYTE PTR [rip+0x70],ah        # 0x4043d3
  404363:	add    BYTE PTR [rax],al
  404365:	add    BYTE PTR [rax],al
  404367:	add    BYTE PTR [rax],ah
  404369:	and    BYTE PTR [rsi+0x69],dl
  40436c:	jb     0x4043e2
  40436e:	jne    0x4043d1
  404370:	ins    BYTE PTR es:[rdi],dx
  404371:	push   rax
  404372:	jb     0x4043e3
  404374:	je     0x4043db
  404376:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40437a:	(bad)  
  40437b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  404383:	push   0x646f6320
  404388:	and    BYTE PTR gs:[rax],dh
  40438b:	js     0x4043b2
  40438d:	js     0x40438f
  40438f:	add    BYTE PTR [rax],ah
  404391:	and    BYTE PTR [rbp+0x6e],dl
  404394:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  404398:	outs   dx,BYTE PTR ds:[rsi]
  404399:	and    BYTE PTR [rax+0x73],dh
  40439c:	gs jne 0x404403
  40439f:	outs   dx,DWORD PTR ds:[rsi]
  4043a0:	and    BYTE PTR [rdx+0x65],dh
  4043a3:	ins    BYTE PTR es:[rdi],dx
  4043a4:	outs   dx,DWORD PTR ds:[rsi]
  4043a5:	movsxd esp,DWORD PTR [rcx+0x74]
  4043a8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4043af:	je     0x404420
  4043b1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4043b4:	and    BYTE PTR [rsi+0x65],dh
  4043b7:	jb     0x40442c
  4043b9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4043c0:	or     al,BYTE PTR [rax]
  4043c2:	add    BYTE PTR [rax],al
  4043c4:	add    BYTE PTR [rax],al
  4043c6:	add    BYTE PTR [rax],al
  4043c8:	and    BYTE PTR [rax],ah
  4043ca:	push   rbp
  4043cb:	outs   dx,BYTE PTR ds:[rsi]
  4043cc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4043d0:	outs   dx,BYTE PTR ds:[rsi]
  4043d1:	and    BYTE PTR [rax+0x73],dh
  4043d4:	gs jne 0x40443b
  4043d7:	outs   dx,DWORD PTR ds:[rsi]
  4043d8:	and    BYTE PTR [rdx+0x65],dh
  4043db:	ins    BYTE PTR es:[rdi],dx
  4043dc:	outs   dx,DWORD PTR ds:[rsi]
  4043dd:	movsxd esp,DWORD PTR [rcx+0x74]
  4043e0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4043e7:	and    BYTE PTR [rbx+0x69],dh
  4043ea:	jp     0x404451
  4043ec:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a7256
	...
  4043fe:	add    BYTE PTR [rax],al
  404400:	cs jo  0x404467
  404403:	(bad)  
  404404:	je     0x404467
	...
  40440e:	add    BYTE PTR [rax],al
  404410:	xor    BYTE PTR [rax+0x0],al
	...
  404420:	push   rax
  404421:	xor    BYTE PTR [rax+0x0],al
	...
  404430:	lock add BYTE PTR cs:[rax],al
	...
  40443d:	add    BYTE PTR [rax],al
  40443f:	add    BYTE PTR [rax+0x49],dl
  404442:	add    BYTE PTR [rax],al
	...
  40444d:	add    BYTE PTR [rax],al
  40444f:	add    BYTE PTR [rax+0x49],dl
  404452:	add    BYTE PTR [rax],al
	...
  40445d:	add    BYTE PTR [rax],al
  40445f:	add    BYTE PTR [rax+0x4041],ah
	...
  404471:	add    BYTE PTR [rax+0x0],al
	...
  404480:	mov    WORD PTR [rbx+0x40],es
	...
  40448e:	add    BYTE PTR [rax],al
  404490:	mov    ah,0x83
  404492:	add    BYTE PTR [rax],al
	...
  40449d:	add    BYTE PTR [rax],al
  40449f:	add    ah,cl
  4044a1:	add    DWORD PTR [rax+0x0],0x0
	...
  4044ad:	add    BYTE PTR [rax],al
  4044af:	add    ah,ah
  4044b1:	add    DWORD PTR [rax+0x0],0x0
	...
  4044bd:	add    BYTE PTR [rax],al
  4044bf:	add    al,al
  4044c1:	jbe    0x404503
	...
  4044cf:	add    BYTE PTR [rax],ch
  4044d1:	jp     0x404513
	...
  4044df:	add    BYTE PTR [rax],ah
  4044e1:	jp     0x404523
	...
  4044ef:	add    BYTE PTR [rax],dl
  4044f1:	jp     0x404533
	...
  4044ff:	add    BYTE PTR [rax],bl
  404501:	jp     0x404543
	...
  40450f:	add    BYTE PTR [rax],al
  404511:	nop
  404512:	add    BYTE PTR [rax],al
	...
  40451d:	add    BYTE PTR [rax],al
  40451f:	add    BYTE PTR [rax],dl
  404521:	nop
  404522:	add    BYTE PTR [rax],al
	...
  40452d:	add    BYTE PTR [rax],al
  40452f:	add    BYTE PTR [rax],bl
  404531:	nop
  404532:	add    BYTE PTR [rax],al
	...
  40453d:	add    BYTE PTR [rax],al
  40453f:	add    BYTE PTR [rax],dh
  404541:	nop
  404542:	add    BYTE PTR [rax],al
	...
  40454d:	add    BYTE PTR [rax],al
  40454f:	add    BYTE PTR [rax+0x70],al
  404552:	add    BYTE PTR [rax],al
	...
  40455d:	add    BYTE PTR [rax],al
  40455f:	add    BYTE PTR [rax+0x4076],dl
	...
  40456d:	add    BYTE PTR [rax],al
  40456f:	add    al,dl
  404571:	and    al,BYTE PTR [rax+0x0]
	...
  404580:	and    BYTE PTR [rdx],bl
  404582:	add    BYTE PTR [rax],al
	...
  40458d:	add    BYTE PTR [rax],al
  40458f:	add    BYTE PTR [rax+0x76],al
  404592:	add    BYTE PTR [rax],al
	...
  40459d:	add    BYTE PTR [rax],al
  40459f:	add    BYTE PTR [rax+0x76],dh
  4045a2:	add    BYTE PTR [rax],al
	...
  4045ad:	add    BYTE PTR [rax],al
  4045af:	add    BYTE PTR [rax+0x70],dl
  4045b2:	add    BYTE PTR [rax],al
	...
  4045bd:	add    BYTE PTR [rax],al
  4045bf:	add    BYTE PTR [rax+0x76],bl
  4045c2:	add    BYTE PTR [rax],al
	...
  4045cd:	add    BYTE PTR [rax],al
  4045cf:	add    BYTE PTR [rsi+rsi*2+0x40],dl
	...
  4045df:	add    BYTE PTR [rax+0x76],dl
  4045e2:	add    BYTE PTR [rax],al
	...
  4045ed:	add    BYTE PTR [rax],al
  4045ef:	add    BYTE PTR [rdi+0x43],al
  4045f2:	rex.XB cmp spl,BYTE PTR [r8]
  4045f5:	sub    BYTE PTR [rdi+0x4e],al
  4045f8:	push   rbp
  4045f9:	sub    DWORD PTR [rax],esp
  4045fb:	xor    al,0x2e
  4045fd:	cmp    DWORD PTR [rsi],ebp
  4045ff:	xor    al,0x0
	...
  40460d:	add    BYTE PTR [rax],al
  40460f:	add    BYTE PTR [rdi+0x43],al
  404612:	rex.XB cmp spl,BYTE PTR [r8]
  404615:	sub    BYTE PTR [rdi+0x4e],al
  404618:	push   rbp
  404619:	sub    DWORD PTR [rax],esp
  40461b:	xor    al,0x2e
  40461d:	cmp    DWORD PTR [rsi],ebp
  40461f:	xor    al,0x0
	...
  40462d:	add    BYTE PTR [rax],al
  40462f:	add    BYTE PTR [rdi+0x43],al
  404632:	rex.XB cmp spl,BYTE PTR [r8]
  404635:	sub    BYTE PTR [rdi+0x4e],al
  404638:	push   rbp
  404639:	sub    DWORD PTR [rax],esp
  40463b:	xor    al,0x2e
  40463d:	cmp    DWORD PTR [rsi],ebp
  40463f:	xor    al,0x0
	...
  40464d:	add    BYTE PTR [rax],al
  40464f:	add    BYTE PTR [rdi+0x43],al
  404652:	rex.XB cmp spl,BYTE PTR [r8]
  404655:	sub    BYTE PTR [rdi+0x4e],al
  404658:	push   rbp
  404659:	sub    DWORD PTR [rax],esp
  40465b:	xor    al,0x2e
  40465d:	cmp    DWORD PTR [rsi],ebp
  40465f:	xor    al,0x0
	...
  40466d:	add    BYTE PTR [rax],al
  40466f:	add    BYTE PTR [rdi+0x43],al
  404672:	rex.XB cmp spl,BYTE PTR [r8]
  404675:	sub    BYTE PTR [rdi+0x4e],al
  404678:	push   rbp
  404679:	sub    DWORD PTR [rax],esp
  40467b:	xor    al,0x2e
  40467d:	cmp    DWORD PTR [rsi],ebp
  40467f:	xor    al,0x0
	...
  40468d:	add    BYTE PTR [rax],al
  40468f:	add    BYTE PTR [rdi+0x43],al
  404692:	rex.XB cmp spl,BYTE PTR [r8]
  404695:	sub    BYTE PTR [rdi+0x4e],al
  404698:	push   rbp
  404699:	sub    DWORD PTR [rax],esp
  40469b:	xor    al,0x2e
  40469d:	cmp    DWORD PTR [rsi],ebp
  40469f:	xor    al,0x0
	...
  4046ad:	add    BYTE PTR [rax],al
  4046af:	add    BYTE PTR [rdi+0x43],al
  4046b2:	rex.XB cmp spl,BYTE PTR [r8]
  4046b5:	sub    BYTE PTR [rdi+0x4e],al
  4046b8:	push   rbp
  4046b9:	sub    DWORD PTR [rax],esp
  4046bb:	xor    al,0x2e
  4046bd:	cmp    DWORD PTR [rsi],ebp
  4046bf:	xor    al,0x0
	...
  4046cd:	add    BYTE PTR [rax],al
  4046cf:	add    BYTE PTR [rdi+0x43],al
  4046d2:	rex.XB cmp spl,BYTE PTR [r8]
  4046d5:	sub    BYTE PTR [rdi+0x4e],al
  4046d8:	push   rbp
  4046d9:	sub    DWORD PTR [rax],esp
  4046db:	xor    al,0x2e
  4046dd:	cmp    DWORD PTR [rsi],ebp
  4046df:	xor    al,0x0
	...
  4046ed:	add    BYTE PTR [rax],al
  4046ef:	add    BYTE PTR [rdi+0x43],al
  4046f2:	rex.XB cmp spl,BYTE PTR [r8]
  4046f5:	sub    BYTE PTR [rdi+0x4e],al
  4046f8:	push   rbp
  4046f9:	sub    DWORD PTR [rax],esp
  4046fb:	xor    al,0x2e
  4046fd:	cmp    DWORD PTR [rsi],ebp
  4046ff:	xor    al,0x0
	...
  40470d:	add    BYTE PTR [rax],al
  40470f:	add    BYTE PTR [rdi+0x43],al
  404712:	rex.XB cmp spl,BYTE PTR [r8]
  404715:	sub    BYTE PTR [rdi+0x4e],al
  404718:	push   rbp
  404719:	sub    DWORD PTR [rax],esp
  40471b:	xor    al,0x2e
  40471d:	cmp    DWORD PTR [rsi],ebp
  40471f:	xor    al,0x0
	...
  40472d:	add    BYTE PTR [rax],al
  40472f:	add    BYTE PTR [rdi+0x43],al
  404732:	rex.XB cmp spl,BYTE PTR [r8]
  404735:	sub    BYTE PTR [rdi+0x4e],al
  404738:	push   rbp
  404739:	sub    DWORD PTR [rax],esp
  40473b:	xor    al,0x2e
  40473d:	cmp    DWORD PTR [rsi],ebp
  40473f:	xor    al,0x0
	...
  40474d:	add    BYTE PTR [rax],al
  40474f:	add    BYTE PTR [rdi+0x43],al
  404752:	rex.XB cmp spl,BYTE PTR [r8]
  404755:	sub    BYTE PTR [rdi+0x4e],al
  404758:	push   rbp
  404759:	sub    DWORD PTR [rax],esp
  40475b:	xor    al,0x2e
  40475d:	cmp    DWORD PTR [rsi],ebp
  40475f:	xor    al,0x0
	...
  40476d:	add    BYTE PTR [rax],al
  40476f:	add    BYTE PTR [rdi+0x43],al
  404772:	rex.XB cmp spl,BYTE PTR [r8]
  404775:	sub    BYTE PTR [rdi+0x4e],al
  404778:	push   rbp
  404779:	sub    DWORD PTR [rax],esp
  40477b:	xor    al,0x2e
  40477d:	cmp    DWORD PTR [rsi],ebp
  40477f:	xor    al,0x0
	...
  40478d:	add    BYTE PTR [rax],al
  40478f:	add    BYTE PTR [rdi+0x43],al
  404792:	rex.XB cmp spl,BYTE PTR [r8]
  404795:	sub    BYTE PTR [rdi+0x4e],al
  404798:	push   rbp
  404799:	sub    DWORD PTR [rax],esp
  40479b:	xor    al,0x2e
  40479d:	cmp    DWORD PTR [rsi],ebp
  40479f:	xor    al,0x0
	...
  4047ad:	add    BYTE PTR [rax],al
  4047af:	add    BYTE PTR [rdi+0x43],al
  4047b2:	rex.XB cmp spl,BYTE PTR [r8]
  4047b5:	sub    BYTE PTR [rdi+0x4e],al
  4047b8:	push   rbp
  4047b9:	sub    DWORD PTR [rax],esp
  4047bb:	xor    al,0x2e
  4047bd:	cmp    DWORD PTR [rsi],ebp
  4047bf:	xor    al,0x0
	...
  4047cd:	add    BYTE PTR [rax],al
  4047cf:	add    BYTE PTR [rdi+0x43],al
  4047d2:	rex.XB cmp spl,BYTE PTR [r8]
  4047d5:	sub    BYTE PTR [rdi+0x4e],al
  4047d8:	push   rbp
  4047d9:	sub    DWORD PTR [rax],esp
  4047db:	xor    al,0x2e
  4047dd:	cmp    DWORD PTR [rsi],ebp
  4047df:	xor    al,0x0
	...
  4047ed:	add    BYTE PTR [rax],al
  4047ef:	add    BYTE PTR [rdi+0x43],al
  4047f2:	rex.XB cmp spl,BYTE PTR [r8]
  4047f5:	sub    BYTE PTR [rdi+0x4e],al
  4047f8:	push   rbp
  4047f9:	sub    DWORD PTR [rax],esp
  4047fb:	xor    al,0x2e
  4047fd:	cmp    DWORD PTR [rsi],ebp
  4047ff:	xor    al,0x0
	...
  40480d:	add    BYTE PTR [rax],al
  40480f:	add    BYTE PTR [rdi+0x43],al
  404812:	rex.XB cmp spl,BYTE PTR [r8]
  404815:	sub    BYTE PTR [rdi+0x4e],al
  404818:	push   rbp
  404819:	sub    DWORD PTR [rax],esp
  40481b:	xor    al,0x2e
  40481d:	cmp    DWORD PTR [rsi],ebp
  40481f:	xor    al,0x0
	...
  40482d:	add    BYTE PTR [rax],al
  40482f:	add    BYTE PTR [rdi+0x43],al
  404832:	rex.XB cmp spl,BYTE PTR [r8]
  404835:	sub    BYTE PTR [rdi+0x4e],al
  404838:	push   rbp
  404839:	sub    DWORD PTR [rax],esp
  40483b:	xor    al,0x2e
  40483d:	cmp    DWORD PTR [rsi],ebp
  40483f:	xor    al,0x0
	...
  40484d:	add    BYTE PTR [rax],al
  40484f:	add    BYTE PTR [rdi+0x43],al
  404852:	rex.XB cmp spl,BYTE PTR [r8]
  404855:	sub    BYTE PTR [rdi+0x4e],al
  404858:	push   rbp
  404859:	sub    DWORD PTR [rax],esp
  40485b:	xor    al,0x2e
  40485d:	cmp    DWORD PTR [rsi],ebp
  40485f:	xor    al,0x0
	...
  40486d:	add    BYTE PTR [rax],al
  40486f:	add    BYTE PTR [rdi+0x43],al
  404872:	rex.XB cmp spl,BYTE PTR [r8]
  404875:	sub    BYTE PTR [rdi+0x4e],al
  404878:	push   rbp
  404879:	sub    DWORD PTR [rax],esp
  40487b:	xor    al,0x2e
  40487d:	cmp    DWORD PTR [rsi],ebp
  40487f:	xor    al,0x0
	...
  40488d:	add    BYTE PTR [rax],al
  40488f:	add    BYTE PTR [rdi+0x43],al
  404892:	rex.XB cmp spl,BYTE PTR [r8]
  404895:	sub    BYTE PTR [rdi+0x4e],al
  404898:	push   rbp
  404899:	sub    DWORD PTR [rax],esp
  40489b:	xor    al,0x2e
  40489d:	cmp    DWORD PTR [rsi],ebp
  40489f:	xor    al,0x0
	...
  4048ad:	add    BYTE PTR [rax],al
  4048af:	add    BYTE PTR [rdi+0x43],al
  4048b2:	rex.XB cmp spl,BYTE PTR [r8]
  4048b5:	sub    BYTE PTR [rdi+0x4e],al
  4048b8:	push   rbp
  4048b9:	sub    DWORD PTR [rax],esp
  4048bb:	xor    al,0x2e
  4048bd:	cmp    DWORD PTR [rsi],ebp
  4048bf:	xor    al,0x0
	...
  4048cd:	add    BYTE PTR [rax],al
  4048cf:	add    BYTE PTR [rdi+0x43],al
  4048d2:	rex.XB cmp spl,BYTE PTR [r8]
  4048d5:	sub    BYTE PTR [rdi+0x4e],al
  4048d8:	push   rbp
  4048d9:	sub    DWORD PTR [rax],esp
  4048db:	xor    al,0x2e
  4048dd:	cmp    DWORD PTR [rsi],ebp
  4048df:	xor    al,0x0
	...
  4048ed:	add    BYTE PTR [rax],al
  4048ef:	add    BYTE PTR [rdi+0x43],al
  4048f2:	rex.XB cmp spl,BYTE PTR [r8]
  4048f5:	sub    BYTE PTR [rdi+0x4e],al
  4048f8:	push   rbp
  4048f9:	sub    DWORD PTR [rax],esp
  4048fb:	xor    al,0x2e
  4048fd:	cmp    DWORD PTR [rsi],ebp
  4048ff:	xor    al,0x0
	...
  40490d:	add    BYTE PTR [rax],al
  40490f:	add    BYTE PTR [rdi+0x43],al
  404912:	rex.XB cmp spl,BYTE PTR [r8]
  404915:	sub    BYTE PTR [rdi+0x4e],al
  404918:	push   rbp
  404919:	sub    DWORD PTR [rax],esp
  40491b:	xor    al,0x2e
  40491d:	cmp    DWORD PTR [rsi],ebp
  40491f:	xor    al,0x0
	...
  40492d:	add    BYTE PTR [rax],al
  40492f:	add    BYTE PTR [rdi+0x43],al
  404932:	rex.XB cmp spl,BYTE PTR [r8]
  404935:	sub    BYTE PTR [rdi+0x4e],al
  404938:	push   rbp
  404939:	sub    DWORD PTR [rax],esp
  40493b:	xor    al,0x2e
  40493d:	cmp    DWORD PTR [rsi],ebp
  40493f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000405000 <.pdata>:
  405000:	add    BYTE PTR [rax],dl
  405002:	add    BYTE PTR [rax],al
  405004:	add    DWORD PTR [rax],edx
  405006:	add    BYTE PTR [rax],al
  405008:	add    BYTE PTR [rax+0x0],ah
  40500b:	add    BYTE PTR [rax],dl
  40500d:	adc    BYTE PTR [rax],al
  40500f:	add    BYTE PTR [rcx+0x11],dl
  405012:	add    BYTE PTR [rax],al
  405014:	add    al,0x60
  405016:	add    BYTE PTR [rax],al
  405018:	(bad)  
  405019:	adc    DWORD PTR [rax],eax
  40501b:	add    BYTE PTR [rsi+0xc000011],ch
  405021:	(bad)  
  405022:	add    BYTE PTR [rax],al
  405024:	mov    al,0x11
  405026:	add    BYTE PTR [rax],al
  405028:	(bad)  
  405029:	adc    al,0x0
  40502b:	add    BYTE PTR [rax+riz*2],dl
  40502e:	add    BYTE PTR [rax],al
  405030:	rcl    BYTE PTR [rax+rax*1],1
  405033:	add    dl,dh
  405035:	adc    al,0x0
  405037:	add    BYTE PTR [rax],ch
  405039:	(bad)  
  40503a:	add    BYTE PTR [rax],al
  40503c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15625042
  405042:	add    BYTE PTR [rax],al
  405044:	rex.W (bad) 
  405046:	add    BYTE PTR [rax],al
  405048:	adc    BYTE PTR [rip+0x16270000],0x0        # 0x1667504f
  40504f:	add    BYTE PTR [rax+riz*2+0x0],bh
  405053:	add    BYTE PTR [rax],dh
  405055:	(bad)  
  405056:	add    BYTE PTR [rax],al
  405058:	rex.WB (bad) 
  40505a:	add    BYTE PTR [rax],al
  40505c:	test   BYTE PTR [rax+0x0],ah
  40505f:	add    BYTE PTR [rax+0x16],dl
  405062:	add    BYTE PTR [rax],al
  405064:	test   DWORD PTR [rsi],edx
  405066:	add    BYTE PTR [rax],al
  405068:	mov    WORD PTR [rax+0x0],fs
  40506b:	add    BYTE PTR [rax-0x1affffea],dl
  405071:	(bad)  
  405072:	add    BYTE PTR [rax],al
  405074:	xchg   esp,eax
  405075:	(bad)  
  405076:	add    BYTE PTR [rax],al
  405078:	lock (bad) 
  40507a:	add    BYTE PTR [rax],al
  40507c:	or     al,0x17
  40507e:	add    BYTE PTR [rax],al
  405080:	movabs al,ds:0x1a00001710000060
  405089:	(bad)  
  40508a:	add    BYTE PTR [rax],al
  40508c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40508d:	(bad)  
  40508e:	add    BYTE PTR [rax],al
  405090:	and    BYTE PTR [rdi],dl
  405092:	add    BYTE PTR [rax],al
  405094:	and    edx,DWORD PTR [rdi]
  405096:	add    BYTE PTR [rax],al
  405098:	test   al,0x60
  40509a:	add    BYTE PTR [rax],al
  40509c:	xor    BYTE PTR [rdi],dl
  40509e:	add    BYTE PTR [rax],al
  4050a0:	(bad)  
  4050a1:	sbb    BYTE PTR [rax],al
  4050a3:	add    BYTE PTR [rax+riz*2+0x18100000],ch
  4050aa:	add    BYTE PTR [rax],al
  4050ac:	or     ebx,DWORD PTR [rcx]
  4050ae:	add    BYTE PTR [rax],al
  4050b0:	mov    esp,0x10000060
  4050b5:	sbb    DWORD PTR [rax],eax
  4050b7:	add    BYTE PTR [rdi],bh
  4050b9:	sbb    DWORD PTR [rax],eax
  4050bb:	add    ah,cl
  4050bd:	(bad)  
  4050be:	add    BYTE PTR [rax],al
  4050c0:	rex sbb DWORD PTR [rax],eax
  4050c3:	add    BYTE PTR [rcx-0x2bffffe7],ch
  4050c9:	(bad)  
  4050ca:	add    BYTE PTR [rax],al
  4050cc:	mov    al,0x19
  4050ce:	add    BYTE PTR [rax],al
  4050d0:	mov    bl,0x19
  4050d2:	add    BYTE PTR [rax],al
  4050d4:	loopne 0x405136
  4050d6:	add    BYTE PTR [rax],al
  4050d8:	rcr    BYTE PTR [rcx],0x0
  4050db:	add    BYTE PTR [rcx],al
  4050dd:	sbb    al,BYTE PTR [rax]
  4050df:	add    ah,ah
  4050e1:	(bad)  
  4050e2:	add    BYTE PTR [rax],al
  4050e4:	adc    BYTE PTR [rdx],bl
  4050e6:	add    BYTE PTR [rax],al
  4050e8:	sbb    al,0x1a
  4050ea:	add    BYTE PTR [rax],al
  4050ec:	in     al,dx
  4050ed:	(bad)  
  4050ee:	add    BYTE PTR [rax],al
  4050f0:	and    BYTE PTR [rdx],bl
  4050f2:	add    BYTE PTR [rax],al
  4050f4:	sbb    al,0x1b
  4050f6:	add    BYTE PTR [rax],al
  4050f8:	lock (bad) 
  4050fa:	add    BYTE PTR [rax],al
  4050fc:	and    BYTE PTR [rbx],bl
  4050fe:	add    BYTE PTR [rax],al
  405100:	and    ebx,DWORD PTR [rbx]
  405102:	add    BYTE PTR [rax],al
  405104:	or     BYTE PTR [rcx+0x0],ah
  405107:	add    BYTE PTR [rax],dh
  405109:	sbb    eax,DWORD PTR [rax]
  40510b:	add    BYTE PTR [rbx+rbx*1],dh
  40510e:	add    BYTE PTR [rax],al
  405110:	or     al,0x61
  405112:	add    BYTE PTR [rax],al
  405114:	rex sbb eax,DWORD PTR [rax]
  405117:	add    BYTE PTR [rbx+rbx*1+0x0],al
  40511b:	add    BYTE PTR [rax],dl
  40511d:	(bad)  
  40511e:	add    BYTE PTR [rax],al
  405120:	push   rax
  405121:	sbb    eax,DWORD PTR [rax]
  405123:	add    BYTE PTR [rcx+0x1400001b],dh
  405129:	(bad)  
  40512a:	add    BYTE PTR [rax],al
  40512c:	rcr    BYTE PTR [rbx],0x0
  40512f:	add    BYTE PTR [rdx],ah
  405131:	sbb    eax,0x61200000
  405136:	add    BYTE PTR [rax],al
  405138:	xor    BYTE PTR [rip+0x20290000],bl        # 0x2069513e
  40513e:	add    BYTE PTR [rax],al
  405140:	xor    al,0x61
  405142:	add    BYTE PTR [rax],al
  405144:	xor    BYTE PTR [rax],ah
  405146:	add    BYTE PTR [rax],al
  405148:	(bad)  
  405149:	and    DWORD PTR [rax],eax
  40514b:	add    BYTE PTR [rcx+riz*2+0x0],cl
  40514f:	add    al,ah
  405151:	and    DWORD PTR [rax],eax
  405153:	add    ah,cl
  405155:	and    al,BYTE PTR [rax]
  405157:	add    BYTE PTR [rcx+riz*2+0x0],dl
  40515b:	add    al,dl
  40515d:	and    al,BYTE PTR [rax]
  40515f:	add    BYTE PTR [rax+0x64000024],cl
  405165:	(bad)  
  405166:	add    BYTE PTR [rax],al
  405168:	nop
  405169:	and    al,0x0
  40516b:	add    ch,bh
  40516d:	and    al,0x0
  40516f:	add    BYTE PTR [rcx+riz*2+0x0],ch
  405173:	add    BYTE PTR [rax],al
  405175:	and    eax,0x257f0000
  40517a:	add    BYTE PTR [rax],al
  40517c:	jl     0x4051df
  40517e:	add    BYTE PTR [rax],al
  405180:	and    BYTE PTR [rip+0x261f0000],0x0        # 0x265f5187
  405187:	add    BYTE PTR [rax+0x20000061],cl
  40518d:	add    BYTE PTR es:[rax],al
  405190:	cli    
  405191:	add    BYTE PTR es:[rax],al
  405194:	nop
  405195:	(bad)  
  405196:	add    BYTE PTR [rax],al
  405198:	add    BYTE PTR [rdi],ah
  40519a:	add    BYTE PTR [rax],al
  40519c:	(bad)  
  40519d:	(bad)  
  40519e:	add    BYTE PTR [rax],al
  4051a0:	cwde   
  4051a1:	(bad)  
  4051a2:	add    BYTE PTR [rax],al
  4051a4:	and    BYTE PTR [rdi],ah
  4051a6:	add    BYTE PTR [rax],al
  4051a8:	xor    ah,BYTE PTR [rdi]
  4051aa:	add    BYTE PTR [rax],al
  4051ac:	pushf  
  4051ad:	(bad)  
  4051ae:	add    BYTE PTR [rax],al
  4051b0:	rex (bad) 
  4051b2:	add    BYTE PTR [rax],al
  4051b4:	test   DWORD PTR [rdi],esp
  4051b6:	add    BYTE PTR [rax],al
  4051b8:	movabs al,ds:0x2e00002790000061
  4051c1:	sub    BYTE PTR [rax],al
  4051c3:	add    BYTE PTR [rcx+riz*2+0x28300000],ah
  4051ca:	add    BYTE PTR [rax],al
  4051cc:	jae    0x4051f6
  4051ce:	add    BYTE PTR [rax],al
  4051d0:	mov    al,0x61
  4051d2:	add    BYTE PTR [rax],al
  4051d4:	sub    BYTE PTR [rax],0x0
  4051d7:	add    BYTE PTR [rbx-0x43ffffd8],bh
  4051dd:	(bad)  
  4051de:	add    BYTE PTR [rax],al
  4051e0:	shr    BYTE PTR [rax],0x0
  4051e3:	add    BYTE PTR [rsi+0x29],cl
  4051e6:	add    BYTE PTR [rax],al
  4051e8:	(bad)
  4051ec:	push   rax
  4051ed:	sub    DWORD PTR [rax],eax
  4051ef:	add    BYTE PTR [rax-0x2fffffd7],cl
  4051f5:	(bad)  
  4051f6:	add    BYTE PTR [rax],al
  4051f8:	nop
  4051f9:	sub    DWORD PTR [rax],eax
  4051fb:	add    ch,ah
  4051fd:	sub    DWORD PTR [rax],eax
  4051ff:	add    ah,bl
  405201:	(bad)  
  405202:	add    BYTE PTR [rax],al
  405204:	lock sub DWORD PTR [rax],eax
  405207:	add    BYTE PTR [rsi-0x17ffffd6],bl
  40520d:	(bad)  
  40520e:	add    BYTE PTR [rax],al
  405210:	shr    BYTE PTR [rbx],0x0
  405213:	add    al,cl
  405215:	sub    eax,DWORD PTR [rax]
  405217:	add    al,bh
  405219:	(bad)  
  40521a:	add    BYTE PTR [rax],al
  40521c:	shr    BYTE PTR [rbx],1
  40521e:	add    BYTE PTR [rax],al
  405220:	fld    TBYTE PTR [rbx]
  405222:	add    BYTE PTR [rax],al
  405224:	cld    
  405225:	(bad)  
  405226:	add    BYTE PTR [rax],al
  405228:	movabs al,ds:0x6800002eec00002c
  405231:	(bad)  
	...

Disassembly of section .xdata:

0000000000406000 <.xdata>:
  406000:	add    DWORD PTR [rax],eax
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rcx+rax*1],eax
  406007:	add    BYTE PTR [rdx+rax*2],al
  40600a:	add    BYTE PTR [rax],al
  40600c:	add    DWORD PTR [rcx+rax*1],eax
  40600f:	add    BYTE PTR [rdx+riz*2],al
  406012:	add    BYTE PTR [rax],al
  406014:	add    DWORD PTR [rdi],ecx
  406016:	or     BYTE PTR [rax],al
  406018:	lgdt   [rbx]
  40601b:	add    BYTE PTR [rax],cl
  40601d:	xor    BYTE PTR [rdi],al
  40601f:	(bad)  
  406020:	(bad)  
  406021:	jo     0x406028
  406023:	push   rax
  406024:	add    al,0xc0
  406026:	add    dl,al
  406028:	or     DWORD PTR [rcx+rax*1],eax
  40602b:	add    BYTE PTR [rdx+rax*2],al
  40602e:	add    BYTE PTR [rax],al
  406030:	mov    eax,0x100002b
  406035:	add    BYTE PTR [rax],al
  406037:	add    ah,dl
  406039:	adc    al,0x0
  40603b:	add    ah,ch
  40603d:	adc    al,0x0
  40603f:	add    al,dl
  406041:	and    al,BYTE PTR [rax]
  406043:	add    ah,ch
  406045:	adc    al,0x0
  406047:	add    BYTE PTR [rcx],cl
  406049:	add    al,0x1
  40604b:	add    BYTE PTR [rdx+rax*2],al
  40604e:	add    BYTE PTR [rax],al
  406050:	mov    eax,0x100002b
  406055:	add    BYTE PTR [rax],al
  406057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40605e:	add    BYTE PTR [rax],al
  406060:	shl    BYTE PTR [rdx],1
  406062:	add    BYTE PTR [rax],al
  406064:	sbb    al,0x15
  406066:	add    BYTE PTR [rax],al
  406068:	add    DWORD PTR [rdi+rax*1],ecx
  40606b:	add    BYTE PTR [rdx+rax*8],cl
  40606e:	or     BYTE PTR [rax],dh
  406070:	(bad)  
  406071:	(bad)  
  406072:	(bad)  
  406073:	jo     0x40607a
  406075:	push   rax
  406076:	add    al,0xc0
  406078:	add    dl,al
  40607a:	add    BYTE PTR [rax],al
  40607c:	add    DWORD PTR [rip+0x52050002],eax        # 0x52456084
  406082:	add    DWORD PTR [rax],esi
  406084:	add    DWORD PTR [rcx+rax*1],eax
  406087:	add    BYTE PTR [rdx+rax*2],al
  40608a:	add    BYTE PTR [rax],al
  40608c:	add    DWORD PTR [rcx+rax*1],eax
  40608f:	add    BYTE PTR [rdx+rax*2],al
  406092:	add    BYTE PTR [rax],al
  406094:	add    DWORD PTR [rsi],eax
  406096:	add    eax,DWORD PTR [rax]
  406098:	(bad)  
  406099:	rex.X add sil,BYTE PTR [rax]
  40609c:	add    DWORD PTR [rax+0x0],esp
  40609f:	add    BYTE PTR [rcx],al
  4060a1:	add    BYTE PTR [rax],al
  4060a3:	add    BYTE PTR [rcx],al
  4060a5:	add    BYTE PTR [rax],al
  4060a7:	add    BYTE PTR [rcx],al
  4060a9:	add    BYTE PTR [rax],al
  4060ab:	add    BYTE PTR [rcx],al
  4060ad:	or     al,BYTE PTR [rsi]
  4060af:	add    BYTE PTR [rdx],cl
  4060b1:	jb     0x4060b9
  4060b3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b06519
  4060b9:	push   rax
  4060ba:	add    al,al
  4060bc:	add    DWORD PTR [rdx],ecx
  4060be:	add    eax,0x6d20a05
  4060c3:	add    eax,DWORD PTR [rbx]
  4060c5:	xor    BYTE PTR [rdx],al
  4060c7:	(bad)  
  4060c8:	add    DWORD PTR [rax+0x0],edx
  4060cb:	add    BYTE PTR [rcx],al
  4060cd:	add    al,0x1
  4060cf:	add    BYTE PTR [rdx+rax*2],al
  4060d2:	add    BYTE PTR [rax],al
  4060d4:	add    DWORD PTR [rsi],eax
  4060d6:	add    eax,DWORD PTR [rax]
  4060d8:	(bad)  
  4060d9:	rex.X add sil,BYTE PTR [rax]
  4060dc:	add    DWORD PTR [rax+0x0],esp
  4060df:	add    BYTE PTR [rcx],al
  4060e1:	add    BYTE PTR [rax],al
  4060e3:	add    BYTE PTR [rcx],al
  4060e5:	add    al,0x1
  4060e7:	add    BYTE PTR [rdx+riz*4],al
  4060ea:	add    BYTE PTR [rax],al
  4060ec:	add    DWORD PTR [rax],eax
  4060ee:	add    BYTE PTR [rax],al
  4060f0:	add    DWORD PTR [rsi],edx
  4060f2:	or     DWORD PTR [rax],eax
  4060f4:	(bad)  
  4060f5:	mov    BYTE PTR [rsi],al
  4060f7:	add    BYTE PTR [rax],dl
  4060f9:	js     0x406100
  4060fb:	add    BYTE PTR [rbx],cl
  4060fd:	push   0xffffffffe2060004
  406102:	add    dh,BYTE PTR [rax]
  406104:	add    DWORD PTR [rax+0x0],esp
  406107:	add    BYTE PTR [rcx],al
  406109:	add    BYTE PTR [rax],al
  40610b:	add    BYTE PTR [rcx],al
  40610d:	add    BYTE PTR [rax],al
  40610f:	add    BYTE PTR [rcx],al
  406111:	add    BYTE PTR [rax],al
  406113:	add    BYTE PTR [rcx],al
  406115:	(bad)  
  406116:	add    eax,DWORD PTR [rax]
  406118:	(bad)  
  406119:	(bad)  
  40611b:	xor    BYTE PTR [rcx],al
  40611d:	(bad)  
  40611e:	add    BYTE PTR [rax],al
  406120:	add    DWORD PTR [rdi+rax*1],ecx
  406123:	add    BYTE PTR [rdx+riz*4],cl
  406126:	or     BYTE PTR [rax],dh
  406128:	(bad)  
  406129:	(bad)  
  40612a:	(bad)  
  40612b:	jo     0x406132
  40612d:	push   rax
  40612e:	add    al,0xc0
  406130:	add    dl,al
  406132:	add    BYTE PTR [rax],al
  406134:	add    DWORD PTR [rcx],edx
  406136:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e134d
  40613c:	or     dh,BYTE PTR [rax]
  40613e:	or     DWORD PTR [rax+0x8],esp
  406141:	jo     0x40614a
  406143:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220651a
  40614a:	add    BYTE PTR [rax],al
  40614c:	add    DWORD PTR [rcx+rax*1],eax
  40614f:	add    BYTE PTR [rdx+rax*2],al
  406152:	add    BYTE PTR [rax],al
  406154:	add    DWORD PTR [rdx],ecx
  406156:	(bad)  
  406157:	add    BYTE PTR [rdx],cl
  406159:	xor    al,BYTE PTR [rsi]
  40615b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b065c1
  406161:	push   rax
  406162:	add    al,al
  406164:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245616c
  40616a:	add    DWORD PTR [rax],esi
  40616c:	add    DWORD PTR [rax],ecx
  40616e:	add    eax,0x4420800
  406173:	xor    BYTE PTR [rbx],al
  406175:	(bad)  
  406176:	add    dh,BYTE PTR [rax+0x1]
  406179:	push   rax
  40617a:	add    BYTE PTR [rax],al
  40617c:	add    DWORD PTR [rdi],eax
  40617e:	add    al,0x0
  406180:	(bad)  
  406181:	xor    al,BYTE PTR [rbx]
  406183:	xor    BYTE PTR [rdx],al
  406185:	(bad)  
  406186:	add    DWORD PTR [rax+0x1],esi
  406189:	add    eax,0x32050002
  40618e:	add    DWORD PTR [rax],esi
  406190:	add    DWORD PTR [rip+0x32050002],eax        # 0x32456198
  406196:	add    DWORD PTR [rax],esi
  406198:	add    DWORD PTR [rax],eax
  40619a:	add    BYTE PTR [rax],al
  40619c:	add    DWORD PTR [rax],eax
  40619e:	add    BYTE PTR [rax],al
  4061a0:	add    DWORD PTR [rax],eax
  4061a2:	add    BYTE PTR [rax],al
  4061a4:	add    DWORD PTR [rdi],eax
  4061a6:	add    al,0x0
  4061a8:	(bad)  
  4061a9:	xor    al,BYTE PTR [rbx]
  4061ab:	xor    BYTE PTR [rdx],al
  4061ad:	(bad)  
  4061ae:	add    DWORD PTR [rax+0x1],esi
  4061b1:	(bad)  
  4061b2:	add    eax,DWORD PTR [rax]
  4061b4:	(bad)  
  4061b5:	rex.X add sil,BYTE PTR [rax]
  4061b8:	add    DWORD PTR [rax+0x0],esp
  4061bb:	add    BYTE PTR [rcx],al
  4061bd:	add    eax,0x32050002
  4061c2:	add    DWORD PTR [rax],esi
  4061c4:	add    DWORD PTR [rdi],eax
  4061c6:	add    al,0x0
  4061c8:	(bad)  
  4061c9:	xor    al,BYTE PTR [rbx]
  4061cb:	xor    BYTE PTR [rdx],al
  4061cd:	(bad)  
  4061ce:	add    DWORD PTR [rax+0x1],esi
  4061d1:	(bad)  
  4061d2:	add    eax,DWORD PTR [rax]
  4061d4:	(bad)  
  4061d5:	rex.X add sil,BYTE PTR [rax]
  4061d8:	add    DWORD PTR [rax+0x0],esp
  4061db:	add    BYTE PTR [rcx],al
  4061dd:	(bad)  
  4061de:	add    eax,DWORD PTR [rax]
  4061e0:	(bad)  
  4061e1:	rex.X add sil,BYTE PTR [rax]
  4061e4:	add    DWORD PTR [rax+0x0],esp
  4061e7:	add    BYTE PTR [rcx],al
  4061e9:	or     BYTE PTR [rip+0x4420800],al        # 0x48269ef
  4061ef:	xor    BYTE PTR [rbx],al
  4061f1:	(bad)  
  4061f2:	add    dh,BYTE PTR [rax+0x1]
  4061f5:	push   rax
  4061f6:	add    BYTE PTR [rax],al
  4061f8:	add    DWORD PTR [rax],eax
  4061fa:	add    BYTE PTR [rax],al
  4061fc:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000407000 <.bss>:
	...

Disassembly of section .idata:

0000000000408000 <.idata>:
  408000:	add    BYTE PTR fs:[rax],0x0
	...
  40800c:	mov    WORD PTR [rax-0x7d840000],cs
  408012:	add    BYTE PTR [rax],al
  408014:	pushf  
  408015:	add    BYTE PTR [rax],0x0
	...
  408020:	cld    
  408021:	mov    BYTE PTR [rax],al
  408023:	add    BYTE PTR [rdx+rax*4-0x7ea40000],dh
	...
  408032:	add    BYTE PTR [rax],al
  408034:	mov    BYTE PTR [rcx-0x7c8c0000],cl
  40803a:	add    BYTE PTR [rax],al
  40803c:	pop    rsp
  40803d:	(bad)  
	...
  408046:	add    BYTE PTR [rax],al
  408048:	movabs al,ds:0x8474000089
	...
  408061:	add    BYTE PTR [rax],al
  408063:	add    BYTE PTR [rsp+rax*4+0x0],dl
  40806a:	add    BYTE PTR [rax],al
  40806c:	movabs al,ds:0xb000000000000084
  408075:	test   BYTE PTR [rax],al
  408077:	add    BYTE PTR [rax],al
  408079:	add    BYTE PTR [rax],al
  40807b:	add    BYTE PTR [rsp+rax*4+0x0],bh
  408082:	add    BYTE PTR [rax],al
  408084:	int3   
  408085:	test   BYTE PTR [rax],al
  408087:	add    BYTE PTR [rax],al
  408089:	add    BYTE PTR [rax],al
  40808b:	add    ah,bl
  40808d:	test   BYTE PTR [rax],al
	...
  40809b:	add    al,ch
  40809d:	test   BYTE PTR [rax],al
  40809f:	add    BYTE PTR [rax],al
  4080a1:	add    BYTE PTR [rax],al
  4080a3:	add    BYTE PTR [rax],al
  4080a5:	test   DWORD PTR [rax],eax
  4080a7:	add    BYTE PTR [rax],al
  4080a9:	add    BYTE PTR [rax],al
  4080ab:	add    BYTE PTR [rax],bl
  4080ad:	test   DWORD PTR [rax],eax
  4080af:	add    BYTE PTR [rax],al
  4080b1:	add    BYTE PTR [rax],al
  4080b3:	add    BYTE PTR [rax*4+0x0],ch
  4080ba:	add    BYTE PTR [rax],al
  4080bc:	rex.X test DWORD PTR [rax],eax
  4080bf:	add    BYTE PTR [rax],al
  4080c1:	add    BYTE PTR [rax],al
  4080c3:	add    BYTE PTR [rax-0x7b],bl
  4080c6:	add    BYTE PTR [rax],al
  4080c8:	add    BYTE PTR [rax],al
  4080ca:	add    BYTE PTR [rax],al
  4080cc:	push   0x85
  4080d1:	add    BYTE PTR [rax],al
  4080d3:	add    BYTE PTR [rdx-0x7b],bh
  4080d6:	add    BYTE PTR [rax],al
  4080d8:	add    BYTE PTR [rax],al
  4080da:	add    BYTE PTR [rax],al
  4080dc:	xchg   esp,eax
  4080dd:	test   DWORD PTR [rax],eax
  4080df:	add    BYTE PTR [rax],al
  4080e1:	add    BYTE PTR [rax],al
  4080e3:	add    BYTE PTR [rbp+rax*4+0x0],ah
  4080ea:	add    BYTE PTR [rax],al
  4080ec:	rol    BYTE PTR [rbp+0x0],0x0
  4080f3:	add    al,bl
  4080f5:	test   DWORD PTR [rax],eax
  4080f7:	add    BYTE PTR [rax],al
  4080f9:	add    BYTE PTR [rax],al
  4080fb:	add    dl,dh
  4080fd:	test   DWORD PTR [rax],eax
  4080ff:	add    BYTE PTR [rax],al
  408101:	add    BYTE PTR [rax],al
  408103:	add    BYTE PTR [rax],cl
  408105:	xchg   BYTE PTR [rax],al
  408107:	add    BYTE PTR [rax],al
  408109:	add    BYTE PTR [rax],al
  40810b:	add    BYTE PTR [rsi+rax*4],bl
  40810e:	add    BYTE PTR [rax],al
  408110:	add    BYTE PTR [rax],al
  408112:	add    BYTE PTR [rax],al
  408114:	xchg   BYTE PTR ss:[rax],al
  408117:	add    BYTE PTR [rax],al
  408119:	add    BYTE PTR [rax],al
  40811b:	add    BYTE PTR [rdx-0x7a],cl
  40811e:	add    BYTE PTR [rax],al
  408120:	add    BYTE PTR [rax],al
  408122:	add    BYTE PTR [rax],al
  408124:	push   0x86
  408129:	add    BYTE PTR [rax],al
  40812b:	add    BYTE PTR [rax-0x7a],dh
  40812e:	add    BYTE PTR [rax],al
  408130:	add    BYTE PTR [rax],al
  408132:	add    BYTE PTR [rax],al
  408134:	test   BYTE PTR [rsi+0x0],al
  40813a:	add    BYTE PTR [rax],al
  40813c:	xchg   edx,eax
  40813d:	xchg   BYTE PTR [rax],al
  40813f:	add    BYTE PTR [rax],al
  408141:	add    BYTE PTR [rax],al
  408143:	add    BYTE PTR [rsi+0x86],ch
  408149:	add    BYTE PTR [rax],al
  40814b:	add    al,al
  40814d:	xchg   BYTE PTR [rax],al
	...
  40815b:	add    al,dl
  40815d:	xchg   BYTE PTR [rax],al
  40815f:	add    BYTE PTR [rax],al
  408161:	add    BYTE PTR [rax],al
  408163:	add    al,ch
  408165:	xchg   BYTE PTR [rax],al
  408167:	add    BYTE PTR [rax],al
  408169:	add    BYTE PTR [rax],al
  40816b:	add    dh,dh
  40816d:	xchg   BYTE PTR [rax],al
  40816f:	add    BYTE PTR [rax],al
  408171:	add    BYTE PTR [rax],al
  408173:	add    BYTE PTR [rsi],al
  408175:	xchg   DWORD PTR [rax],eax
  408177:	add    BYTE PTR [rax],al
  408179:	add    BYTE PTR [rax],al
  40817b:	add    BYTE PTR [rdx],dl
  40817d:	xchg   DWORD PTR [rax],eax
  40817f:	add    BYTE PTR [rax],al
  408181:	add    BYTE PTR [rax],al
  408183:	add    BYTE PTR [rax],ah
  408185:	xchg   DWORD PTR [rax],eax
  408187:	add    BYTE PTR [rax],al
  408189:	add    BYTE PTR [rax],al
  40818b:	add    BYTE PTR [rax],dh
  40818d:	xchg   DWORD PTR [rax],eax
  40818f:	add    BYTE PTR [rax],al
  408191:	add    BYTE PTR [rax],al
  408193:	add    BYTE PTR [rdx-0x79],al
  408196:	add    BYTE PTR [rax],al
  408198:	add    BYTE PTR [rax],al
  40819a:	add    BYTE PTR [rax],al
  40819c:	push   rsi
  40819d:	xchg   DWORD PTR [rax],eax
  40819f:	add    BYTE PTR [rax],al
  4081a1:	add    BYTE PTR [rax],al
  4081a3:	add    BYTE PTR [rax-0x79],ah
  4081a6:	add    BYTE PTR [rax],al
  4081a8:	add    BYTE PTR [rax],al
  4081aa:	add    BYTE PTR [rax],al
  4081ac:	outs   dx,BYTE PTR ds:[rsi]
  4081ad:	xchg   DWORD PTR [rax],eax
  4081af:	add    BYTE PTR [rax],al
  4081b1:	add    BYTE PTR [rax],al
  4081b3:	add    BYTE PTR [rax-0x79],bh
  4081b6:	add    BYTE PTR [rax],al
  4081b8:	add    BYTE PTR [rax],al
  4081ba:	add    BYTE PTR [rax],al
  4081bc:	(bad)  
  4081bd:	xchg   DWORD PTR [rax],eax
  4081bf:	add    BYTE PTR [rax],al
  4081c1:	add    BYTE PTR [rax],al
  4081c3:	add    BYTE PTR [rsi+0x87],cl
  4081c9:	add    BYTE PTR [rax],al
  4081cb:	add    BYTE PTR [rsi+0x87],dl
  4081d1:	add    BYTE PTR [rax],al
  4081d3:	add    BYTE PTR [rax+0x87],ah
  4081d9:	add    BYTE PTR [rax],al
  4081db:	add    BYTE PTR [rdx+0x87],ch
  4081e1:	add    BYTE PTR [rax],al
  4081e3:	add    BYTE PTR [rdx+0x87],dh
  4081e9:	add    BYTE PTR [rax],al
  4081eb:	add    BYTE PTR [rdi+rax*4+0x0],bh
  4081f2:	add    BYTE PTR [rax],al
  4081f4:	(bad)  
  4081f5:	xchg   DWORD PTR [rax],eax
  4081f7:	add    BYTE PTR [rax],al
  4081f9:	add    BYTE PTR [rax],al
  4081fb:	add    dh,cl
  4081fd:	xchg   DWORD PTR [rax],eax
  4081ff:	add    BYTE PTR [rax],al
  408201:	add    BYTE PTR [rax],al
  408203:	add    dh,dl
  408205:	xchg   DWORD PTR [rax],eax
  408207:	add    BYTE PTR [rax],al
  408209:	add    BYTE PTR [rax],al
  40820b:	add    al,ah
  40820d:	xchg   DWORD PTR [rax],eax
  40820f:	add    BYTE PTR [rax],al
  408211:	add    BYTE PTR [rax],al
  408213:	add    al,ch
  408215:	xchg   DWORD PTR [rax],eax
  408217:	add    BYTE PTR [rax],al
  408219:	add    BYTE PTR [rax],al
  40821b:	add    dl,dh
  40821d:	xchg   DWORD PTR [rax],eax
  40821f:	add    BYTE PTR [rax],al
  408221:	add    BYTE PTR [rax],al
  408223:	add    ah,bh
  408225:	xchg   DWORD PTR [rax],eax
  408227:	add    BYTE PTR [rax],al
  408229:	add    BYTE PTR [rax],al
  40822b:	add    BYTE PTR [rsi],al
  40822d:	mov    BYTE PTR [rax],al
  40822f:	add    BYTE PTR [rax],al
  408231:	add    BYTE PTR [rax],al
  408233:	add    BYTE PTR [rax],dl
  408235:	mov    BYTE PTR [rax],al
  408237:	add    BYTE PTR [rax],al
  408239:	add    BYTE PTR [rax],al
  40823b:	add    BYTE PTR [rdx],bl
  40823d:	mov    BYTE PTR [rax],al
  40823f:	add    BYTE PTR [rax],al
  408241:	add    BYTE PTR [rax],al
  408243:	add    BYTE PTR [rax+rcx*4],ah
  408246:	add    BYTE PTR [rax],al
  408248:	add    BYTE PTR [rax],al
  40824a:	add    BYTE PTR [rax],al
  40824c:	mov    BYTE PTR cs:[rax],al
	...
  40825b:	add    BYTE PTR [rax+rcx*4],bh
  40825e:	add    BYTE PTR [rax],al
  408260:	add    BYTE PTR [rax],al
  408262:	add    BYTE PTR [rax],al
  408264:	rex.WR mov BYTE PTR [rax],r8b
  408267:	add    BYTE PTR [rax],al
  408269:	add    BYTE PTR [rax],al
  40826b:	add    BYTE PTR [rax+rcx*4+0x0],ah
	...
  40827b:	add    BYTE PTR [rsp+rax*4+0x0],dl
  408282:	add    BYTE PTR [rax],al
  408284:	movabs al,ds:0xb000000000000084
  40828d:	test   BYTE PTR [rax],al
  40828f:	add    BYTE PTR [rax],al
  408291:	add    BYTE PTR [rax],al
  408293:	add    BYTE PTR [rsp+rax*4+0x0],bh
  40829a:	add    BYTE PTR [rax],al
  40829c:	int3   
  40829d:	test   BYTE PTR [rax],al
  40829f:	add    BYTE PTR [rax],al
  4082a1:	add    BYTE PTR [rax],al
  4082a3:	add    ah,bl
  4082a5:	test   BYTE PTR [rax],al
	...
  4082b3:	add    al,ch
  4082b5:	test   BYTE PTR [rax],al
  4082b7:	add    BYTE PTR [rax],al
  4082b9:	add    BYTE PTR [rax],al
  4082bb:	add    BYTE PTR [rax],al
  4082bd:	test   DWORD PTR [rax],eax
  4082bf:	add    BYTE PTR [rax],al
  4082c1:	add    BYTE PTR [rax],al
  4082c3:	add    BYTE PTR [rax],bl
  4082c5:	test   DWORD PTR [rax],eax
  4082c7:	add    BYTE PTR [rax],al
  4082c9:	add    BYTE PTR [rax],al
  4082cb:	add    BYTE PTR [rax*4+0x0],ch
  4082d2:	add    BYTE PTR [rax],al
  4082d4:	rex.X test DWORD PTR [rax],eax
  4082d7:	add    BYTE PTR [rax],al
  4082d9:	add    BYTE PTR [rax],al
  4082db:	add    BYTE PTR [rax-0x7b],bl
  4082de:	add    BYTE PTR [rax],al
  4082e0:	add    BYTE PTR [rax],al
  4082e2:	add    BYTE PTR [rax],al
  4082e4:	push   0x85
  4082e9:	add    BYTE PTR [rax],al
  4082eb:	add    BYTE PTR [rdx-0x7b],bh
  4082ee:	add    BYTE PTR [rax],al
  4082f0:	add    BYTE PTR [rax],al
  4082f2:	add    BYTE PTR [rax],al
  4082f4:	xchg   esp,eax
  4082f5:	test   DWORD PTR [rax],eax
  4082f7:	add    BYTE PTR [rax],al
  4082f9:	add    BYTE PTR [rax],al
  4082fb:	add    BYTE PTR [rbp+rax*4+0x0],ah
  408302:	add    BYTE PTR [rax],al
  408304:	rol    BYTE PTR [rbp+0x0],0x0
  40830b:	add    al,bl
  40830d:	test   DWORD PTR [rax],eax
  40830f:	add    BYTE PTR [rax],al
  408311:	add    BYTE PTR [rax],al
  408313:	add    dl,dh
  408315:	test   DWORD PTR [rax],eax
  408317:	add    BYTE PTR [rax],al
  408319:	add    BYTE PTR [rax],al
  40831b:	add    BYTE PTR [rax],cl
  40831d:	xchg   BYTE PTR [rax],al
  40831f:	add    BYTE PTR [rax],al
  408321:	add    BYTE PTR [rax],al
  408323:	add    BYTE PTR [rsi+rax*4],bl
  408326:	add    BYTE PTR [rax],al
  408328:	add    BYTE PTR [rax],al
  40832a:	add    BYTE PTR [rax],al
  40832c:	xchg   BYTE PTR ss:[rax],al
  40832f:	add    BYTE PTR [rax],al
  408331:	add    BYTE PTR [rax],al
  408333:	add    BYTE PTR [rdx-0x7a],cl
  408336:	add    BYTE PTR [rax],al
  408338:	add    BYTE PTR [rax],al
  40833a:	add    BYTE PTR [rax],al
  40833c:	push   0x86
  408341:	add    BYTE PTR [rax],al
  408343:	add    BYTE PTR [rax-0x7a],dh
  408346:	add    BYTE PTR [rax],al
  408348:	add    BYTE PTR [rax],al
  40834a:	add    BYTE PTR [rax],al
  40834c:	test   BYTE PTR [rsi+0x0],al
  408352:	add    BYTE PTR [rax],al
  408354:	xchg   edx,eax
  408355:	xchg   BYTE PTR [rax],al
  408357:	add    BYTE PTR [rax],al
  408359:	add    BYTE PTR [rax],al
  40835b:	add    BYTE PTR [rsi+0x86],ch
  408361:	add    BYTE PTR [rax],al
  408363:	add    al,al
  408365:	xchg   BYTE PTR [rax],al
	...
  408373:	add    al,dl
  408375:	xchg   BYTE PTR [rax],al
  408377:	add    BYTE PTR [rax],al
  408379:	add    BYTE PTR [rax],al
  40837b:	add    al,ch
  40837d:	xchg   BYTE PTR [rax],al
  40837f:	add    BYTE PTR [rax],al
  408381:	add    BYTE PTR [rax],al
  408383:	add    dh,dh
  408385:	xchg   BYTE PTR [rax],al
  408387:	add    BYTE PTR [rax],al
  408389:	add    BYTE PTR [rax],al
  40838b:	add    BYTE PTR [rsi],al
  40838d:	xchg   DWORD PTR [rax],eax
  40838f:	add    BYTE PTR [rax],al
  408391:	add    BYTE PTR [rax],al
  408393:	add    BYTE PTR [rdx],dl
  408395:	xchg   DWORD PTR [rax],eax
  408397:	add    BYTE PTR [rax],al
  408399:	add    BYTE PTR [rax],al
  40839b:	add    BYTE PTR [rax],ah
  40839d:	xchg   DWORD PTR [rax],eax
  40839f:	add    BYTE PTR [rax],al
  4083a1:	add    BYTE PTR [rax],al
  4083a3:	add    BYTE PTR [rax],dh
  4083a5:	xchg   DWORD PTR [rax],eax
  4083a7:	add    BYTE PTR [rax],al
  4083a9:	add    BYTE PTR [rax],al
  4083ab:	add    BYTE PTR [rdx-0x79],al
  4083ae:	add    BYTE PTR [rax],al
  4083b0:	add    BYTE PTR [rax],al
  4083b2:	add    BYTE PTR [rax],al
  4083b4:	push   rsi
  4083b5:	xchg   DWORD PTR [rax],eax
  4083b7:	add    BYTE PTR [rax],al
  4083b9:	add    BYTE PTR [rax],al
  4083bb:	add    BYTE PTR [rax-0x79],ah
  4083be:	add    BYTE PTR [rax],al
  4083c0:	add    BYTE PTR [rax],al
  4083c2:	add    BYTE PTR [rax],al
  4083c4:	outs   dx,BYTE PTR ds:[rsi]
  4083c5:	xchg   DWORD PTR [rax],eax
  4083c7:	add    BYTE PTR [rax],al
  4083c9:	add    BYTE PTR [rax],al
  4083cb:	add    BYTE PTR [rax-0x79],bh
  4083ce:	add    BYTE PTR [rax],al
  4083d0:	add    BYTE PTR [rax],al
  4083d2:	add    BYTE PTR [rax],al
  4083d4:	(bad)  
  4083d5:	xchg   DWORD PTR [rax],eax
  4083d7:	add    BYTE PTR [rax],al
  4083d9:	add    BYTE PTR [rax],al
  4083db:	add    BYTE PTR [rsi+0x87],cl
  4083e1:	add    BYTE PTR [rax],al
  4083e3:	add    BYTE PTR [rsi+0x87],dl
  4083e9:	add    BYTE PTR [rax],al
  4083eb:	add    BYTE PTR [rax+0x87],ah
  4083f1:	add    BYTE PTR [rax],al
  4083f3:	add    BYTE PTR [rdx+0x87],ch
  4083f9:	add    BYTE PTR [rax],al
  4083fb:	add    BYTE PTR [rdx+0x87],dh
  408401:	add    BYTE PTR [rax],al
  408403:	add    BYTE PTR [rdi+rax*4+0x0],bh
  40840a:	add    BYTE PTR [rax],al
  40840c:	(bad)  
  40840d:	xchg   DWORD PTR [rax],eax
  40840f:	add    BYTE PTR [rax],al
  408411:	add    BYTE PTR [rax],al
  408413:	add    dh,cl
  408415:	xchg   DWORD PTR [rax],eax
  408417:	add    BYTE PTR [rax],al
  408419:	add    BYTE PTR [rax],al
  40841b:	add    dh,dl
  40841d:	xchg   DWORD PTR [rax],eax
  40841f:	add    BYTE PTR [rax],al
  408421:	add    BYTE PTR [rax],al
  408423:	add    al,ah
  408425:	xchg   DWORD PTR [rax],eax
  408427:	add    BYTE PTR [rax],al
  408429:	add    BYTE PTR [rax],al
  40842b:	add    al,ch
  40842d:	xchg   DWORD PTR [rax],eax
  40842f:	add    BYTE PTR [rax],al
  408431:	add    BYTE PTR [rax],al
  408433:	add    dl,dh
  408435:	xchg   DWORD PTR [rax],eax
  408437:	add    BYTE PTR [rax],al
  408439:	add    BYTE PTR [rax],al
  40843b:	add    ah,bh
  40843d:	xchg   DWORD PTR [rax],eax
  40843f:	add    BYTE PTR [rax],al
  408441:	add    BYTE PTR [rax],al
  408443:	add    BYTE PTR [rsi],al
  408445:	mov    BYTE PTR [rax],al
  408447:	add    BYTE PTR [rax],al
  408449:	add    BYTE PTR [rax],al
  40844b:	add    BYTE PTR [rax],dl
  40844d:	mov    BYTE PTR [rax],al
  40844f:	add    BYTE PTR [rax],al
  408451:	add    BYTE PTR [rax],al
  408453:	add    BYTE PTR [rdx],bl
  408455:	mov    BYTE PTR [rax],al
  408457:	add    BYTE PTR [rax],al
  408459:	add    BYTE PTR [rax],al
  40845b:	add    BYTE PTR [rax+rcx*4],ah
  40845e:	add    BYTE PTR [rax],al
  408460:	add    BYTE PTR [rax],al
  408462:	add    BYTE PTR [rax],al
  408464:	mov    BYTE PTR cs:[rax],al
	...
  408473:	add    BYTE PTR [rax+rcx*4],bh
  408476:	add    BYTE PTR [rax],al
  408478:	add    BYTE PTR [rax],al
  40847a:	add    BYTE PTR [rax],al
  40847c:	rex.WR mov BYTE PTR [rax],r8b
  40847f:	add    BYTE PTR [rax],al
  408481:	add    BYTE PTR [rax],al
  408483:	add    BYTE PTR [rax+rcx*4+0x0],ah
	...
  408493:	add    BYTE PTR [rsi],al
  408495:	add    BYTE PTR [rdi+0x54],al
  408498:	rex.WB
  408499:	rex.RX
  40849a:	rex.RX jb 0x408502
  40849d:	add    BYTE PTR gs:[rax],al
  4084a0:	adc    al,0x0
  4084a2:	rex.RXB push r12
  4084a4:	rex.WB
  4084a5:	rex.RX
  4084a6:	rex.WB ins DWORD PTR es:[rdi],dx
  4084a8:	jo     0x408519
  4084aa:	jb     0x408520
  4084ac:	add    BYTE PTR [rax],al
  4084ae:	add    BYTE PTR [rax],al
  4084b0:	sbb    al,0x0
  4084b2:	rex.RXB push r12
  4084b4:	rex.WB
  4084b5:	rex.RX
  4084b6:	rex.WRX
  4084b7:	gs ja  0x4084ba
  4084ba:	add    BYTE PTR [rax],al
  4084bc:	(bad)  
  4084bd:	add    BYTE PTR [rdi+0x54],al
  4084c0:	rex.WB
  4084c1:	rex.RX push rdi
  4084c3:	jb     0x40852e
  4084c5:	je     0x40852c
  4084c7:	rex.WXB
  4084c8:	gs jns 0x40853e
  4084cb:	add    BYTE PTR [rsi],dh
  4084cd:	add    BYTE PTR [rax+0x54],bl
  4084d0:	rex.WB
  4084d1:	rex.RX
  4084d2:	rex.RX
  4084d3:	rex.XB ins BYTE PTR es:[rdi],dx
  4084d5:	outs   dx,DWORD PTR ds:[rsi]
  4084d6:	jae    0x40853d
  4084d8:	add    BYTE PTR [rax],al
  4084da:	add    BYTE PTR [rax],al
  4084dc:	cmp    DWORD PTR [rax],eax
  4084de:	pop    rax
  4084df:	push   rsp
  4084e0:	rex.WB
  4084e1:	rex.RX
  4084e2:	rex.RX
  4084e3:	rex.WRXB jo 0x40854b
  4084e6:	outs   dx,BYTE PTR ds:[rsi]
  4084e7:	add    al,bl
  4084e9:	add    BYTE PTR [rbp+riz*2+0x6c],al
  4084ed:	gs je  0x408555
  4084f0:	rex.XB jb 0x40855c
  4084f3:	je     0x40855e
  4084f5:	movsxd esp,DWORD PTR [rcx+0x6c]
  4084f8:	push   rbx
  4084f9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4084fe:	outs   dx,BYTE PTR ds:[rsi]
  4084ff:	add    al,bh
  408501:	add    BYTE PTR [rbp+0x6e],al
  408504:	je     0x40856b
  408506:	jb     0x40854b
  408508:	jb     0x408573
  40850a:	je     0x408575
  40850c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40850f:	push   rbx
  408510:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  408515:	outs   dx,BYTE PTR ds:[rsi]
  408516:	add    BYTE PTR [rax],al
  408518:	int    0x1
  40851a:	rex.RXB
  40851b:	gs je  0x408561
  40851e:	jne    0x408592
  408520:	jb     0x408587
  408522:	outs   dx,BYTE PTR ds:[rsi]
  408523:	je     0x408575
  408525:	jb     0x408596
  408527:	movsxd esp,DWORD PTR [rbp+0x73]
  40852a:	jae    0x40852c
  40852c:	(bad)  
  40852d:	add    DWORD PTR [rdi+0x65],eax
  408530:	je     0x408575
  408532:	jne    0x4085a6
  408534:	jb     0x40859b
  408536:	outs   dx,BYTE PTR ds:[rsi]
  408537:	je     0x408589
  408539:	jb     0x4085aa
  40853b:	movsxd esp,DWORD PTR [rbp+0x73]
  40853e:	jae    0x408589
  408540:	fs add dl,dl
  408543:	add    DWORD PTR [rdi+0x65],eax
  408546:	je     0x40858b
  408548:	jne    0x4085bc
  40854a:	jb     0x4085b1
  40854c:	outs   dx,BYTE PTR ds:[rsi]
  40854d:	je     0x4085a3
  40854f:	push   0x64616572
  408554:	rex.WB
  408555:	add    BYTE PTR fs:[rax],al
  408558:	adc    BYTE PTR [rdx],al
  40855a:	rex.RXB
  40855b:	gs je  0x4085aa
  40855e:	(bad)  
  40855f:	jae    0x4085d5
  408561:	rex.RB jb 0x4085d6
  408564:	outs   dx,DWORD PTR ds:[rsi]
  408565:	jb     0x408567
  408567:	add    BYTE PTR [rbx+0x2],dh
  40856a:	rex.RXB
  40856b:	gs je  0x4085c1
  40856e:	je     0x4085d1
  408570:	jb     0x4085e6
  408572:	jne    0x4085e4
  408574:	rex.WB outs dx,BYTE PTR ds:[rsi]
  408576:	outs   dx,WORD PTR ds:[rsi]
  408578:	add    BYTE PTR [r10+0x74654702],cl
  40857f:	push   rbx
  408580:	jns    0x4085f5
  408582:	je     0x4085e9
  408584:	ins    DWORD PTR es:[rdi],dx
  408585:	push   rsp
  408586:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40858d:	ins    BYTE PTR es:[rdi],dx
  40858e:	gs push rsp
  408590:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  408597:	gs je  0x4085ee
  40859a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4085a1:	je     0x4085a3
  4085a3:	add    cl,bh
  4085a5:	add    cl,BYTE PTR [rcx+0x6e]
  4085a8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4085b0:	rex.XB jb 0x40861c
  4085b3:	je     0x40861e
  4085b5:	movsxd esp,DWORD PTR [rcx+0x6c]
  4085b8:	push   rbx
  4085b9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4085be:	outs   dx,BYTE PTR ds:[rsi]
  4085bf:	add    BYTE PTR [rbx+0x3],cl
  4085c2:	rex.WR
  4085c3:	gs (bad) 
  4085c5:	jbe    0x40862c
  4085c7:	rex.XB jb 0x408633
  4085ca:	je     0x408635
  4085cc:	movsxd esp,DWORD PTR [rcx+0x6c]
  4085cf:	push   rbx
  4085d0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4085d5:	outs   dx,BYTE PTR ds:[rsi]
  4085d6:	add    BYTE PTR [rax],al
  4085d8:	mov    ebx,0x65755103
  4085dd:	jb     0x408658
  4085df:	push   rax
  4085e0:	gs jb  0x408649
  4085e3:	outs   dx,DWORD PTR ds:[rsi]
  4085e4:	jb     0x408653
  4085e6:	(bad)  
  4085e7:	outs   dx,BYTE PTR ds:[rsi]
  4085e8:	movsxd esp,DWORD PTR [rbp+0x43]
  4085eb:	outs   dx,DWORD PTR ds:[rsi]
  4085ec:	jne    0x40865c
  4085ee:	je     0x408655
  4085f0:	jb     0x4085f2
  4085f2:	add    DWORD PTR [rdx+rdx*2],eax
  4085f5:	je     0x408663
  4085f7:	rex.B
  4085f8:	fs fs rex.RX jne 0x40866b
  4085fd:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  408601:	outs   dx,BYTE PTR ds:[rsi]
  408602:	push   rsp
  408603:	(bad)  
  408604:	(bad)  
  408605:	ins    BYTE PTR es:[rdi],dx
  408606:	add    BYTE PTR gs:[rdx],al
  408609:	add    al,0x52
  40860b:	je     0x408679
  40860d:	rex.XB (bad) 
  40860f:	jo     0x408685
  408611:	jne    0x408685
  408613:	rex.XB outs dx,DWORD PTR gs:[rsi]
  408616:	outs   dx,BYTE PTR ds:[rsi]
  408617:	je     0x40867e
  408619:	js     0x40868f
  40861b:	add    BYTE PTR [rcx],cl
  40861d:	add    al,0x52
  40861f:	je     0x40868d
  408621:	rex.WR outs dx,DWORD PTR ds:[rsi]
  408623:	outs   dx,DWORD PTR ds:[rsi]
  408624:	imul   esi,DWORD PTR [rbp+0x70],0x46
  408628:	jne    0x408698
  40862a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40862e:	outs   dx,BYTE PTR ds:[rsi]
  40862f:	rex.RB outs dx,BYTE PTR ds:[rsi]
  408631:	je     0x4086a5
  408633:	jns    0x408635
  408635:	add    BYTE PTR [rax],dl
  408637:	add    al,0x52
  408639:	je     0x4086a7
  40863b:	push   rsi
  40863c:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  408643:	outs   dx,BYTE PTR ds:[rsi]
  408644:	ja     0x4086af
  408646:	outs   dx,BYTE PTR ds:[rsi]
  408647:	add    BYTE PTR fs:[rax],al
  40864a:	lahf   
  40864b:	add    al,0x53
  40864d:	gs je  0x4086a5
  408650:	outs   dx,BYTE PTR ds:[rsi]
  408651:	push   0x6c646e61
  408656:	gs fs rex.RB js 0x4086be
  40865b:	gs jo  0x4086d2
  40865e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  408665:	gs jb  0x408668
  408668:	lods   al,BYTE PTR ds:[rsi]
  408669:	add    al,0x53
  40866b:	ins    BYTE PTR es:[rdi],dx
  40866c:	gs gs jo 0x408670
  408670:	mov    edx,0x72655404
  408675:	ins    DWORD PTR es:[rdi],dx
  408676:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40867d:	outs   dx,DWORD PTR ds:[rsi]
  40867e:	movsxd esp,DWORD PTR [rbp+0x73]
  408681:	jae    0x408683
  408683:	add    cl,al
  408685:	add    al,0x54
  408687:	ins    BYTE PTR es:[rdi],dx
  408688:	jae    0x4086d1
  40868a:	gs je  0x4086e3
  40868d:	(bad)  
  40868e:	ins    BYTE PTR es:[rdi],dx
  40868f:	jne    0x4086f6
  408691:	add    dh,cl
  408693:	add    al,0x55
  408695:	outs   dx,BYTE PTR ds:[rsi]
  408696:	push   0x6c646e61
  40869b:	gs fs rex.RB js 0x408703
  4086a0:	gs jo  0x408717
  4086a3:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4086aa:	gs jb  0x4086ad
  4086ad:	add    ah,ch
  4086af:	add    al,0x56
  4086b1:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  4086b8:	jb     0x408729
  4086ba:	je     0x408721
  4086bc:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  4086c0:	out    dx,al
  4086c1:	add    al,0x56
  4086c3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4086ca:	jne    0x408731
  4086cc:	jb     0x408747
  4086ce:	add    BYTE PTR [rax],al
  4086d0:	(bad)  
  4086d1:	add    BYTE PTR [rdi+0x5f],bl
  4086d4:	rex.XB pop r15
  4086d6:	jae    0x408748
  4086d8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4086dc:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  4086e3:	ins    BYTE PTR es:[rdi],dx
  4086e4:	gs jb  0x4086e7
  4086e7:	add    BYTE PTR [rsi+0x0],cl
  4086ea:	pop    rdi
  4086eb:	pop    rdi
  4086ec:	fs ins BYTE PTR es:[rdi],dx
  4086ee:	ins    BYTE PTR es:[rdi],dx
  4086ef:	outs   dx,DWORD PTR ds:[rsi]
  4086f0:	outs   dx,BYTE PTR ds:[rsi]
  4086f1:	gs js  0x40875d
  4086f4:	je     0x4086f6
  4086f6:	push   rcx
  4086f7:	add    BYTE PTR [rdi+0x5f],bl
  4086fa:	addr32 gs je 0x40876b
  4086fe:	(bad)  
  4086ff:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  408706:	push   rdx
  408707:	add    BYTE PTR [rdi+0x5f],bl
  40870a:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  408711:	add    BYTE PTR [rbx+0x0],dl
  408714:	pop    rdi
  408715:	pop    rdi
  408716:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40871d:	movsxd eax,DWORD PTR [rax]
  40871f:	add    BYTE PTR [rdx+0x0],bl
  408722:	pop    rdi
  408723:	pop    rdi
  408724:	ins    BYTE PTR es:[rdi],dx
  408725:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408728:	jbe    0x408789
  40872a:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  408731:	add    BYTE PTR [rdi+0x5f],bl
  408734:	jae    0x40879b
  408736:	je     0x408797
  408738:	(bad)  
  408739:	jo     0x4087ab
  40873b:	pop    rdi
  40873c:	je     0x4087b7
  40873e:	jo     0x4087a5
  408740:	add    BYTE PTR [rax],al
  408742:	(bad)  
  408743:	add    BYTE PTR [rdi+0x5f],bl
  408746:	jae    0x4087ad
  408748:	je     0x4087bf
  40874a:	jae    0x4087b1
  40874c:	jb     0x4087bb
  40874e:	(bad)  
  40874f:	je     0x4087b9
  408751:	gs jb  0x4087c6
  408754:	add    BYTE PTR [rax],al
  408756:	jno    0x408758
  408758:	pop    rdi
  408759:	(bad)  
  40875a:	movsxd ebp,DWORD PTR [rbp+0x64]
  40875d:	ins    BYTE PTR es:[rdi],dx
  40875e:	outs   dx,BYTE PTR ds:[rsi]
  40875f:	add    BYTE PTR [rax+0x0],bh
  408762:	pop    rdi
  408763:	(bad)  
  408764:	ins    DWORD PTR es:[rdi],dx
  408765:	jae    0x4087ce
  408767:	pop    rdi
  408768:	gs js  0x4087d4
  40876b:	je     0x40876d
  40876d:	add    BYTE PTR [rdx+0x65635f00],cl
  408773:	js     0x4087de
  408775:	je     0x408777
  408777:	add    dl,bl
  408779:	add    BYTE PTR [rdi+0x66],bl
  40877c:	ins    DWORD PTR es:[rdi],dx
  40877d:	outs   dx,DWORD PTR ds:[rsi]
  40877e:	fs add BYTE PTR gs:[rax],al
  408782:	sbb    al,BYTE PTR [rcx]
  408784:	pop    rdi
  408785:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40878c:	ins    DWORD PTR es:[rdi],dx
  40878d:	add    BYTE PTR [rax+0x6f6c5f01],al
  408793:	movsxd ebp,DWORD PTR [rbx+0x0]
  408796:	and    eax,0x6e6f5f02
  40879b:	gs js  0x408807
  40879e:	je     0x4087a0
  4087a0:	(bad)
  4087a4:	outs   dx,BYTE PTR ds:[rsi]
  4087a5:	ins    BYTE PTR es:[rdi],dx
  4087a6:	outs   dx,DWORD PTR ds:[rsi]
  4087a7:	movsxd ebp,DWORD PTR [rbx+0x0]
  4087aa:	jg     0x4087af
  4087ac:	(bad)  
  4087ad:	(bad)  
  4087ae:	outs   dx,DWORD PTR ds:[rsi]
  4087af:	jb     0x408825
  4087b1:	add    BYTE PTR [rax+0x6c616303],dl
  4087b7:	ins    BYTE PTR es:[rdi],dx
  4087b8:	outs   dx,DWORD PTR ds:[rsi]
  4087b9:	movsxd eax,DWORD PTR [rax]
  4087bb:	add    BYTE PTR [rbp+0x69786503],bl
  4087c1:	je     0x4087c3
  4087c3:	add    BYTE PTR [rcx+0x6c636603],ah
  4087c9:	outs   dx,DWORD PTR ds:[rsi]
  4087ca:	jae    0x408831
  4087cc:	add    BYTE PTR [rax],al
  4087ce:	scas   al,BYTE PTR es:[rdi]
  4087cf:	add    esp,DWORD PTR [rsi+0x6f]
  4087d2:	jo     0x408839
  4087d4:	outs   dx,BYTE PTR ds:[rsi]
  4087d5:	add    BYTE PTR [rax+0x72706603],dh
  4087db:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  4087e2:	data16 jb 0x40884a
  4087e5:	add    BYTE PTR gs:[rax],al
  4087e8:	ret    0x6603
  4087eb:	ja     0x40885f
  4087ed:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  4087f5:	(bad)  
  4087f6:	ins    BYTE PTR es:[rdi],dx
  4087f7:	ins    BYTE PTR es:[rdi],dx
  4087f8:	outs   dx,DWORD PTR ds:[rsi]
  4087f9:	movsxd eax,DWORD PTR [rax]
  4087fb:	add    al,bh
  4087fd:	add    ebp,DWORD PTR [rbp+0x65]
  408800:	ins    DWORD PTR es:[rdi],dx
  408801:	movsxd esi,DWORD PTR [rax+0x79]
  408804:	add    BYTE PTR [rax],al
  408806:	inc    BYTE PTR [rbx]
  408808:	jo     0x40886f
  40880a:	jb     0x40887e
  40880c:	outs   dx,DWORD PTR ds:[rsi]
  40880d:	jb     0x40880f
  40880f:	add    BYTE PTR [rsi],dl
  408811:	add    al,0x73
  408813:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40881a:	sub    eax,DWORD PTR [rbx+rsi*2]
  40881d:	je     0x408891
  40881f:	ins    BYTE PTR es:[rdi],dx
  408820:	outs   dx,BYTE PTR gs:[rsi]
  408822:	add    BYTE PTR [rax],al
  408824:	cs add al,0x73
  408827:	je     0x40889b
  408829:	outs   dx,BYTE PTR ds:[rsi]
  40882a:	movsxd ebp,DWORD PTR [rbp+0x70]
  40882d:	add    BYTE PTR [rsi+0x4],cl
  408830:	jbe    0x408898
  408832:	jo     0x4088a6
  408834:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40883b:	add    BYTE PTR [rip+0x46495400],bh        # 0x4689dc41
  408841:	rex.RX
  408842:	rex.RXB
  408843:	gs je  0x40888c
  408846:	imul   esp,DWORD PTR [rbp+0x6c],0x80000064
  40884d:	add    BYTE PTR [rcx+rcx*2+0x46],dl
  408851:	rex.RX push rdx
  408853:	gs ja  0x4088c8
  408856:	imul   esi,DWORD PTR [rbp+riz*2+0x44],0x63657269
  40885e:	je     0x4088cf
  408860:	jb     0x4088db
  408862:	add    BYTE PTR [rax],al
  408864:	mov    DWORD PTR [rax],eax
  408866:	push   rsp
  408867:	rex.WB
  408868:	rex.RX
  408869:	rex.RX push rbx
  40886b:	gs je  0x4088b4
  40886e:	imul   esp,DWORD PTR [rbp+0x6c],0x64
  408875:	add    BYTE PTR [rax],0x0
  408878:	add    BYTE PTR [rax-0x80000000],al
  40887e:	add    BYTE PTR [rax],al
  408880:	add    BYTE PTR [rax-0x80000000],al
  408886:	add    BYTE PTR [rax],al
  408888:	add    BYTE PTR [rax+0x696c0000],al
  40888e:	(bad)  
  40888f:	outs   dx,DWORD PTR gs:[esi]
  408892:	je     0x4088fd
  408894:	data16 sub ax,0x2e32
  408899:	fs ins BYTE PTR es:[rdi],dx
  40889b:	ins    BYTE PTR es:[rdi],dx
  40889c:	add    BYTE PTR [rax],al
  40889e:	add    BYTE PTR [rax],al
  4088a0:	adc    al,0x80
  4088a2:	add    BYTE PTR [rax],al
  4088a4:	adc    al,0x80
  4088a6:	add    BYTE PTR [rax],al
  4088a8:	adc    al,0x80
  4088aa:	add    BYTE PTR [rax],al
  4088ac:	adc    al,0x80
  4088ae:	add    BYTE PTR [rax],al
  4088b0:	adc    al,0x80
  4088b2:	add    BYTE PTR [rax],al
  4088b4:	adc    al,0x80
  4088b6:	add    BYTE PTR [rax],al
  4088b8:	adc    al,0x80
  4088ba:	add    BYTE PTR [rax],al
  4088bc:	adc    al,0x80
  4088be:	add    BYTE PTR [rax],al
  4088c0:	adc    al,0x80
  4088c2:	add    BYTE PTR [rax],al
  4088c4:	adc    al,0x80
  4088c6:	add    BYTE PTR [rax],al
  4088c8:	adc    al,0x80
  4088ca:	add    BYTE PTR [rax],al
  4088cc:	adc    al,0x80
  4088ce:	add    BYTE PTR [rax],al
  4088d0:	adc    al,0x80
  4088d2:	add    BYTE PTR [rax],al
  4088d4:	adc    al,0x80
  4088d6:	add    BYTE PTR [rax],al
  4088d8:	adc    al,0x80
  4088da:	add    BYTE PTR [rax],al
  4088dc:	adc    al,0x80
  4088de:	add    BYTE PTR [rax],al
  4088e0:	adc    al,0x80
  4088e2:	add    BYTE PTR [rax],al
  4088e4:	adc    al,0x80
  4088e6:	add    BYTE PTR [rax],al
  4088e8:	adc    al,0x80
  4088ea:	add    BYTE PTR [rax],al
  4088ec:	adc    al,0x80
  4088ee:	add    BYTE PTR [rax],al
  4088f0:	adc    al,0x80
  4088f2:	add    BYTE PTR [rax],al
  4088f4:	adc    al,0x80
  4088f6:	add    BYTE PTR [rax],al
  4088f8:	adc    al,0x80
  4088fa:	add    BYTE PTR [rax],al
  4088fc:	rex.WXB
  4088fd:	rex.RB push r10
  4088ff:	rex.WRX
  408900:	rex.RB
  408901:	xor    r14,QWORD PTR [rdx]
  408904:	cs fs ins BYTE PTR es:[rdi],dx
  408907:	ins    BYTE PTR es:[rdi],dx
  408908:	add    BYTE PTR [rax],al
  40890a:	add    BYTE PTR [rax],al
  40890c:	sub    BYTE PTR [rax-0x7fd80000],al
  408912:	add    BYTE PTR [rax],al
  408914:	sub    BYTE PTR [rax-0x7fd80000],al
  40891a:	add    BYTE PTR [rax],al
  40891c:	sub    BYTE PTR [rax-0x7fd80000],al
  408922:	add    BYTE PTR [rax],al
  408924:	sub    BYTE PTR [rax-0x7fd80000],al
  40892a:	add    BYTE PTR [rax],al
  40892c:	sub    BYTE PTR [rax-0x7fd80000],al
  408932:	add    BYTE PTR [rax],al
  408934:	sub    BYTE PTR [rax-0x7fd80000],al
  40893a:	add    BYTE PTR [rax],al
  40893c:	sub    BYTE PTR [rax-0x7fd80000],al
  408942:	add    BYTE PTR [rax],al
  408944:	sub    BYTE PTR [rax-0x7fd80000],al
  40894a:	add    BYTE PTR [rax],al
  40894c:	sub    BYTE PTR [rax-0x7fd80000],al
  408952:	add    BYTE PTR [rax],al
  408954:	sub    BYTE PTR [rax-0x7fd80000],al
  40895a:	add    BYTE PTR [rax],al
  40895c:	sub    BYTE PTR [rax-0x7fd80000],al
  408962:	add    BYTE PTR [rax],al
  408964:	sub    BYTE PTR [rax-0x7fd80000],al
  40896a:	add    BYTE PTR [rax],al
  40896c:	sub    BYTE PTR [rax-0x7fd80000],al
  408972:	add    BYTE PTR [rax],al
  408974:	sub    BYTE PTR [rax-0x7fd80000],al
  40897a:	add    BYTE PTR [rax],al
  40897c:	sub    BYTE PTR [rax-0x7fd80000],al
  408982:	add    BYTE PTR [rax],al
  408984:	sub    BYTE PTR [rax+0x736d0000],al
  40898a:	jbe    0x4089ef
  40898c:	jb     0x408a02
  40898e:	cs fs ins BYTE PTR es:[rdi],dx
  408991:	ins    BYTE PTR es:[rdi],dx
  408992:	add    BYTE PTR [rax],al
  408994:	cmp    al,0x80
  408996:	add    BYTE PTR [rax],al
  408998:	cmp    al,0x80
  40899a:	add    BYTE PTR [rax],al
  40899c:	cmp    al,0x80
  40899e:	add    BYTE PTR [rax],al
  4089a0:	ins    BYTE PTR es:[rdi],dx
  4089a1:	imul   esp,DWORD PTR [rdx+0x74],0x2d666669
  4089a8:	xor    eax,0x6c6c642e
  4089ad:	add    BYTE PTR [rax],al
	...

Disassembly of section .CRT:

0000000000409000 <.CRT>:
	...
  409008:	(bad)  
  409009:	adc    DWORD PTR [rax+0x0],eax
	...
  409020:	adc    BYTE PTR [rax],dl
  409022:	add    BYTE PTR [rax],al
  409025:	add    BYTE PTR [rax],al
  409027:	add    BYTE PTR [rax],dl
  409029:	(bad)  
  40902a:	add    BYTE PTR [rax],al
	...
  40903d:	add    BYTE PTR [rax],al
  40903f:	add    BYTE PTR [rax+0x19],al
  409042:	add    BYTE PTR [rax],al
  409045:	add    BYTE PTR [rax],al
  409047:	add    BYTE PTR [rax],dl
  409049:	sbb    DWORD PTR [rax+0x0],eax
	...

Disassembly of section .tls:

000000000040a000 <.tls>:
	...
  40a020:	add    BYTE PTR [rax+0x40],ah
  40a026:	add    BYTE PTR [rax],al
  40a028:	(bad)  
  40a029:	movabs al,ds:0x765c000000000040
  40a032:	add    BYTE PTR [rax],al
  40a035:	add    BYTE PTR [rax],al
  40a037:	add    BYTE PTR [rax-0x70],al
  40a03a:	add    BYTE PTR [rax],al
	...
