
f076d0a36e3db1217453392b669d735ff20dfd4ff52778287a4e4a0676f207a0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	xor    eax,eax
   140001002:	lea    rcx,[rip+0x6427]        # 0x140007430
   140001009:	mov    QWORD PTR [rip+0xa610],rax        # 0x14000b620
   140001010:	mov    QWORD PTR [rip+0xa611],rax        # 0x14000b628
   140001017:	jmp    0x140006d98
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	int3   
   140001021:	int3   
   140001022:	int3   
   140001023:	int3   
   140001024:	int3   
   140001025:	int3   
   140001026:	int3   
   140001027:	int3   
   140001028:	int3   
   140001029:	int3   
   14000102a:	int3   
   14000102b:	int3   
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	mov    QWORD PTR [rsp+0x8],rbx
   140001035:	push   rdi
   140001036:	sub    rsp,0x20
   14000103a:	mov    rdi,QWORD PTR [rcx+0x28]
   14000103e:	mov    rax,QWORD PTR [rdi]
   140001041:	mov    rbx,QWORD PTR [rax+0x8]
   140001045:	mov    rcx,rbx
   140001048:	call   QWORD PTR [rip+0x7382]        # 0x1400083d0
   14000104e:	mov    rcx,rdi
   140001051:	mov    rax,rbx
   140001054:	mov    rbx,QWORD PTR [rsp+0x30]
   140001059:	add    rsp,0x20
   14000105d:	pop    rdi
   14000105e:	rex.W jmp rax
   140001061:	int3   
   140001062:	int3   
   140001063:	int3   
   140001064:	int3   
   140001065:	int3   
   140001066:	int3   
   140001067:	int3   
   140001068:	int3   
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	mov    QWORD PTR [rsp+0x8],rbx
   140001075:	push   rdi
   140001076:	sub    rsp,0x20
   14000107a:	mov    rdi,QWORD PTR [rcx+0x28]
   14000107e:	mov    rax,QWORD PTR [rdi]
   140001081:	mov    rbx,QWORD PTR [rax+0x10]
   140001085:	mov    rcx,rbx
   140001088:	call   QWORD PTR [rip+0x7342]        # 0x1400083d0
   14000108e:	mov    rcx,rdi
   140001091:	mov    rax,rbx
   140001094:	mov    rbx,QWORD PTR [rsp+0x30]
   140001099:	add    rsp,0x20
   14000109d:	pop    rdi
   14000109e:	rex.W jmp rax
   1400010a1:	int3   
   1400010a2:	int3   
   1400010a3:	int3   
   1400010a4:	int3   
   1400010a5:	int3   
   1400010a6:	int3   
   1400010a7:	int3   
   1400010a8:	mov    r11,rsp
   1400010ab:	mov    DWORD PTR [r11+0x20],r9d
   1400010af:	sub    rsp,0x58
   1400010b3:	and    QWORD PTR [r11-0x18],0x0
   1400010b8:	lea    rax,[r11+0x28]
   1400010bc:	mov    r9d,0x4
   1400010c2:	mov    QWORD PTR [r11-0x20],r9
   1400010c6:	mov    QWORD PTR [r11-0x28],rax
   1400010ca:	lea    rax,[r11+0x20]
   1400010ce:	mov    QWORD PTR [r11-0x30],r9
   1400010d2:	movzx  r9d,dx
   1400010d6:	mov    edx,0x2b
   1400010db:	mov    QWORD PTR [r11-0x38],rax
   1400010df:	call   QWORD PTR [rip+0x6f1b]        # 0x140008000
   1400010e5:	add    rsp,0x58
   1400010e9:	ret    
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	mov    DWORD PTR [rsp+0x20],r9d
   1400010f5:	sub    rsp,0x68
   1400010f9:	mov    r10,QWORD PTR [rsp+0x90]
   140001101:	test   r10,r10
   140001104:	je     0x140001119
   140001106:	or     r9,0xffffffffffffffff
   14000110a:	inc    r9
   14000110d:	cmp    BYTE PTR [r10+r9*1],0x0
   140001112:	jne    0x14000110a
   140001114:	inc    r9
   140001117:	jmp    0x14000111f
   140001119:	mov    r9d,0x5
   14000111f:	mov    r11d,0x4
   140001125:	lea    rax,[rip+0x778c]        # 0x1400088b8
   14000112c:	test   r10,r10
   14000112f:	cmovne rax,r10
   140001133:	and    QWORD PTR [rsp+0x50],0x0
   140001139:	mov    QWORD PTR [rsp+0x48],r11
   14000113e:	lea    r10,[rsp+0x98]
   140001146:	mov    QWORD PTR [rsp+0x40],r10
   14000114b:	mov    QWORD PTR [rsp+0x38],r9
   140001150:	mov    QWORD PTR [rsp+0x30],rax
   140001155:	lea    rax,[rsp+0x88]
   14000115d:	movzx  r9d,dx
   140001161:	lea    edx,[r11+0x27]
   140001165:	mov    QWORD PTR [rsp+0x28],r11
   14000116a:	mov    QWORD PTR [rsp+0x20],rax
   14000116f:	call   QWORD PTR [rip+0x6e8b]        # 0x140008000
   140001175:	add    rsp,0x68
   140001179:	ret    
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	mov    rax,rsp
   140001183:	mov    QWORD PTR [rax+0x8],rbx
   140001187:	mov    QWORD PTR [rax+0x10],rbp
   14000118b:	mov    QWORD PTR [rax+0x18],rsi
   14000118f:	mov    QWORD PTR [rax+0x20],rdi
   140001193:	push   r14
   140001195:	sub    rsp,0x20
   140001199:	xor    ebp,ebp
   14000119b:	mov    rdi,rcx
   14000119e:	cmp    QWORD PTR [rcx+0x18],rbp
   1400011a2:	jbe    0x1400011fc
   1400011a4:	xor    esi,esi
   1400011a6:	mov    rax,QWORD PTR [rdi+0x10]
   1400011aa:	mov    r14,QWORD PTR [rsi+rax*1]
   1400011ae:	test   r14,r14
   1400011b1:	je     0x1400011d1
   1400011b3:	mov    rax,QWORD PTR [r14]
   1400011b6:	mov    rbx,QWORD PTR [rax+0x10]
   1400011ba:	mov    rcx,rbx
   1400011bd:	call   QWORD PTR [rip+0x720d]        # 0x1400083d0
   1400011c3:	mov    rcx,r14
   1400011c6:	call   rbx
   1400011c8:	mov    rax,QWORD PTR [rdi+0x10]
   1400011cc:	and    QWORD PTR [rsi+rax*1],0x0
   1400011d1:	mov    rax,QWORD PTR [rdi+0x10]
   1400011d5:	mov    rcx,QWORD PTR [rax+rsi*1+0x8]
   1400011da:	test   rcx,rcx
   1400011dd:	je     0x1400011ef
   1400011df:	call   QWORD PTR [rip+0x6fcb]        # 0x1400081b0
   1400011e5:	mov    rax,QWORD PTR [rdi+0x10]
   1400011e9:	and    QWORD PTR [rax+rsi*1+0x8],0x0
   1400011ef:	inc    rbp
   1400011f2:	add    rsi,0x10
   1400011f6:	cmp    rbp,QWORD PTR [rdi+0x18]
   1400011fa:	jb     0x1400011a6
   1400011fc:	mov    rbx,QWORD PTR [rdi+0x10]
   140001200:	test   rbx,rbx
   140001203:	je     0x140001219
   140001205:	call   QWORD PTR [rip+0x6f35]        # 0x140008140
   14000120b:	mov    r8,rbx
   14000120e:	xor    edx,edx
   140001210:	mov    rcx,rax
   140001213:	call   QWORD PTR [rip+0x6f1f]        # 0x140008138
   140001219:	mov    rbx,QWORD PTR [rsp+0x30]
   14000121e:	mov    rbp,QWORD PTR [rsp+0x38]
   140001223:	mov    rsi,QWORD PTR [rsp+0x40]
   140001228:	mov    rdi,QWORD PTR [rsp+0x48]
   14000122d:	add    rsp,0x20
   140001231:	pop    r14
   140001233:	ret    
   140001234:	int3   
   140001235:	int3   
   140001236:	int3   
   140001237:	int3   
   140001238:	int3   
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	mov    rax,rsp
   14000123f:	mov    QWORD PTR [rax+0x8],rbx
   140001243:	mov    QWORD PTR [rax+0x10],rbp
   140001247:	mov    QWORD PTR [rax+0x18],rsi
   14000124b:	push   rdi
   14000124c:	sub    rsp,0xb0
   140001253:	xor    ebx,ebx
   140001255:	mov    rbp,r8
   140001258:	mov    rdi,rdx
   14000125b:	mov    DWORD PTR [rax-0x58],ebx
   14000125e:	mov    rsi,rcx
   140001261:	xor    edx,edx
   140001263:	lea    rcx,[rax-0x54]
   140001267:	lea    r8d,[rbx+0x4c]
   14000126b:	call   0x140007382
   140001270:	mov    QWORD PTR [rsi+0x18],0x8
   140001278:	call   QWORD PTR [rip+0x6ec2]        # 0x140008140
   14000127e:	lea    edx,[rbx+0x8]
   140001281:	mov    rcx,rax
   140001284:	lea    r8d,[rdx+0x78]
   140001288:	call   QWORD PTR [rip+0x6eba]        # 0x140008148
   14000128e:	mov    QWORD PTR [rsi+0x10],rax
   140001292:	test   rax,rax
   140001295:	jne    0x1400012ea
   140001297:	mov    rcx,QWORD PTR [rip+0x9d82]        # 0x14000b020
   14000129e:	lea    rax,[rip+0x9d7b]        # 0x14000b020
   1400012a5:	cmp    rcx,rax
   1400012a8:	je     0x1400012e0
   1400012aa:	test   BYTE PTR [rcx+0x1c],0x8
   1400012ae:	je     0x1400012e0
   1400012b0:	cmp    BYTE PTR [rcx+0x19],0x2
   1400012b4:	jb     0x1400012e0
   1400012b6:	call   0x140002118
   1400012bb:	mov    rcx,QWORD PTR [rip+0x9d5e]        # 0x14000b020
   1400012c2:	lea    edx,[rbx+0xa]
   1400012c5:	mov    r9d,eax
   1400012c8:	mov    DWORD PTR [rsp+0x20],0x8007000e
   1400012d0:	lea    r8,[rip+0x7719]        # 0x1400089f0
   1400012d7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400012db:	call   0x1400010a8
   1400012e0:	mov    ebx,0x8007000e
   1400012e5:	jmp    0x140001454
   1400012ea:	mov    QWORD PTR [rsi+0x28],rbp
   1400012ee:	lea    rax,[rip+0x18b]        # 0x140001480
   1400012f5:	lea    rbp,[rip+0x76a4]        # 0x1400089a0
   1400012fc:	mov    QWORD PTR [rsi+0x8],rdi
   140001300:	lea    rcx,[rsp+0x60]
   140001305:	mov    QWORD PTR [rsp+0xa0],rbp
   14000130d:	mov    DWORD PTR [rsp+0x60],0x50
   140001315:	mov    QWORD PTR [rsp+0x68],rax
   14000131a:	mov    QWORD PTR [rsp+0x78],rdi
   14000131f:	mov    QWORD PTR [rsp+0x88],rbx
   140001327:	mov    QWORD PTR [rsp+0x90],rbx
   14000132f:	call   QWORD PTR [rip+0x6eab]        # 0x1400081e0
   140001335:	test   ax,ax
   140001338:	jne    0x1400013a7
   14000133a:	call   QWORD PTR [rip+0x6e40]        # 0x140008180
   140001340:	mov    edi,eax
   140001342:	cmp    eax,0x582
   140001347:	je     0x1400013a7
   140001349:	test   eax,eax
   14000134b:	je     0x1400013a7
   14000134d:	mov    rcx,QWORD PTR [rip+0x9ccc]        # 0x14000b020
   140001354:	lea    rax,[rip+0x9cc5]        # 0x14000b020
   14000135b:	cmp    rcx,rax
   14000135e:	je     0x140001394
   140001360:	test   BYTE PTR [rcx+0x1c],0x8
   140001364:	je     0x140001394
   140001366:	cmp    BYTE PTR [rcx+0x19],0x2
   14000136a:	jb     0x140001394
   14000136c:	call   0x140002118
   140001371:	mov    rcx,QWORD PTR [rip+0x9ca8]        # 0x14000b020
   140001378:	lea    r8,[rip+0x7671]        # 0x1400089f0
   14000137f:	mov    r9d,eax
   140001382:	mov    DWORD PTR [rsp+0x20],edi
   140001386:	mov    edx,0xb
   14000138b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000138f:	call   0x1400010a8
   140001394:	movzx  ebx,di
   140001397:	or     ebx,0x80070000
   14000139d:	test   edi,edi
   14000139f:	cmovle ebx,edi
   1400013a2:	jmp    0x140001454
   1400013a7:	mov    rax,QWORD PTR [rsi+0x8]
   1400013ab:	xor    r9d,r9d
   1400013ae:	mov    QWORD PTR [rsp+0x58],rsi
   1400013b3:	xor    r8d,r8d
   1400013b6:	mov    QWORD PTR [rsp+0x50],rax
   1400013bb:	mov    rdx,rbp
   1400013be:	mov    QWORD PTR [rsp+0x48],rbx
   1400013c3:	xor    ecx,ecx
   1400013c5:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffd
   1400013ce:	mov    DWORD PTR [rsp+0x38],ebx
   1400013d2:	mov    DWORD PTR [rsp+0x30],ebx
   1400013d6:	mov    DWORD PTR [rsp+0x28],ebx
   1400013da:	mov    DWORD PTR [rsp+0x20],ebx
   1400013de:	call   QWORD PTR [rip+0x6df4]        # 0x1400081d8
   1400013e4:	mov    QWORD PTR [rsi],rax
   1400013e7:	test   rax,rax
   1400013ea:	jne    0x140001454
   1400013ec:	call   QWORD PTR [rip+0x6d8e]        # 0x140008180
   1400013f2:	mov    edi,eax
   1400013f4:	mov    rcx,QWORD PTR [rip+0x9c25]        # 0x14000b020
   1400013fb:	lea    rax,[rip+0x9c1e]        # 0x14000b020
   140001402:	cmp    rcx,rax
   140001405:	je     0x14000143b
   140001407:	test   BYTE PTR [rcx+0x1c],0x8
   14000140b:	je     0x14000143b
   14000140d:	cmp    BYTE PTR [rcx+0x19],0x2
   140001411:	jb     0x14000143b
   140001413:	call   0x140002118
   140001418:	mov    rcx,QWORD PTR [rip+0x9c01]        # 0x14000b020
   14000141f:	lea    r8,[rip+0x75ca]        # 0x1400089f0
   140001426:	mov    r9d,eax
   140001429:	mov    DWORD PTR [rsp+0x20],edi
   14000142d:	mov    edx,0xc
   140001432:	mov    rcx,QWORD PTR [rcx+0x10]
   140001436:	call   0x1400010a8
   14000143b:	movzx  eax,di
   14000143e:	mov    ecx,0x80004005
   140001443:	or     eax,0x80070000
   140001448:	test   edi,edi
   14000144a:	cmovle eax,edi
   14000144d:	test   eax,eax
   14000144f:	cmovns eax,ecx
   140001452:	mov    ebx,eax
   140001454:	lea    r11,[rsp+0xb0]
   14000145c:	mov    eax,ebx
   14000145e:	mov    rbx,QWORD PTR [r11+0x10]
   140001462:	mov    rbp,QWORD PTR [r11+0x18]
   140001466:	mov    rsi,QWORD PTR [r11+0x20]
   14000146a:	mov    rsp,r11
   14000146d:	pop    rdi
   14000146e:	ret    
   14000146f:	int3   
   140001470:	int3   
   140001471:	int3   
   140001472:	int3   
   140001473:	int3   
   140001474:	int3   
   140001475:	int3   
   140001476:	int3   
   140001477:	int3   
   140001478:	int3   
   140001479:	int3   
   14000147a:	int3   
   14000147b:	int3   
   14000147c:	int3   
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	mov    rax,rsp
   140001483:	mov    QWORD PTR [rax+0x8],rbx
   140001487:	mov    QWORD PTR [rax+0x10],rbp
   14000148b:	mov    QWORD PTR [rax+0x18],rsi
   14000148f:	mov    QWORD PTR [rax+0x20],rdi
   140001493:	push   r14
   140001495:	sub    rsp,0x30
   140001499:	mov    edi,edx
   14000149b:	cmp    edx,0x81
   1400014a1:	mov    edx,0xffffffeb
   1400014a6:	mov    r14,r9
   1400014a9:	mov    rbp,r8
   1400014ac:	mov    rbx,rcx
   1400014af:	jne    0x1400014bc
   1400014b1:	mov    r8,QWORD PTR [r9]
   1400014b4:	call   QWORD PTR [rip+0x6d36]        # 0x1400081f0
   1400014ba:	jmp    0x1400014ce
   1400014bc:	call   QWORD PTR [rip+0x6d36]        # 0x1400081f8
   1400014c2:	or     rsi,0xffffffffffffffff
   1400014c6:	cmp    edi,0x113
   1400014cc:	je     0x1400014e4
   1400014ce:	mov    r9,r14
   1400014d1:	mov    r8,rbp
   1400014d4:	mov    edx,edi
   1400014d6:	mov    rcx,rbx
   1400014d9:	call   QWORD PTR [rip+0x6d21]        # 0x140008200
   1400014df:	mov    rsi,rax
   1400014e2:	jmp    0x140001548
   1400014e4:	mov    rdx,rbp
   1400014e7:	mov    rcx,rax
   1400014ea:	call   0x14000156c
   1400014ef:	mov    ebx,eax
   1400014f1:	test   eax,eax
   1400014f3:	jns    0x140001548
   1400014f5:	mov    rcx,QWORD PTR [rip+0x9b24]        # 0x14000b020
   1400014fc:	lea    rax,[rip+0x9b1d]        # 0x14000b020
   140001503:	cmp    rcx,rax
   140001506:	je     0x140001548
   140001508:	test   BYTE PTR [rcx+0x1c],0x8
   14000150c:	je     0x140001548
   14000150e:	cmp    BYTE PTR [rcx+0x19],0x2
   140001512:	jb     0x140001548
   140001514:	call   0x140002118
   140001519:	mov    rcx,QWORD PTR [rip+0x9b00]        # 0x14000b020
   140001520:	lea    r8,[rip+0x74c9]        # 0x1400089f0
   140001527:	mov    r9d,eax
   14000152a:	mov    DWORD PTR [rsp+0x28],ebx
   14000152e:	lea    rax,[rip+0x738b]        # 0x1400088c0
   140001535:	mov    edx,0xd
   14000153a:	mov    QWORD PTR [rsp+0x20],rax
   14000153f:	mov    rcx,QWORD PTR [rcx+0x10]
   140001543:	call   0x1400010f0
   140001548:	mov    rbx,QWORD PTR [rsp+0x40]
   14000154d:	mov    rax,rsi
   140001550:	mov    rsi,QWORD PTR [rsp+0x50]
   140001555:	mov    rbp,QWORD PTR [rsp+0x48]
   14000155a:	mov    rdi,QWORD PTR [rsp+0x58]
   14000155f:	add    rsp,0x30
   140001563:	pop    r14
   140001565:	ret    
   140001566:	int3   
   140001567:	int3   
   140001568:	int3   
   140001569:	int3   
   14000156a:	int3   
   14000156b:	int3   
   14000156c:	mov    rax,rsp
   14000156f:	mov    QWORD PTR [rax+0x8],rbx
   140001573:	mov    QWORD PTR [rax+0x10],rsi
   140001577:	mov    QWORD PTR [rax+0x18],rdi
   14000157b:	mov    QWORD PTR [rax+0x20],r14
   14000157f:	push   r15
   140001581:	sub    rsp,0x30
   140001585:	xor    esi,esi
   140001587:	mov    r14,rcx
   14000158a:	cmp    rdx,QWORD PTR [rcx+0x18]
   14000158e:	jb     0x1400015e3
   140001590:	mov    rcx,QWORD PTR [rip+0x9a89]        # 0x14000b020
   140001597:	lea    rax,[rip+0x9a82]        # 0x14000b020
   14000159e:	cmp    rcx,rax
   1400015a1:	je     0x1400015d9
   1400015a3:	test   BYTE PTR [rcx+0x1c],0x8
   1400015a7:	je     0x1400015d9
   1400015a9:	cmp    BYTE PTR [rcx+0x19],0x2
   1400015ad:	jb     0x1400015d9
   1400015af:	call   0x140002118
   1400015b4:	mov    rcx,QWORD PTR [rip+0x9a65]        # 0x14000b020
   1400015bb:	lea    edx,[rsi+0xe]
   1400015be:	mov    r9d,eax
   1400015c1:	mov    DWORD PTR [rsp+0x20],0x8000ffff
   1400015c9:	lea    r8,[rip+0x7420]        # 0x1400089f0
   1400015d0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400015d4:	call   0x1400010a8
   1400015d9:	mov    esi,0x8000ffff
   1400015de:	jmp    0x140001762
   1400015e3:	mov    rax,QWORD PTR [rcx+0x10]
   1400015e7:	mov    r15,rdx
   1400015ea:	add    r15,r15
   1400015ed:	cmp    QWORD PTR [rax+r15*8],rsi
   1400015f1:	je     0x140001762
   1400015f7:	mov    rcx,QWORD PTR [rcx]
   1400015fa:	call   QWORD PTR [rip+0x6c20]        # 0x140008220
   140001600:	test   eax,eax
   140001602:	jne    0x140001673
   140001604:	call   QWORD PTR [rip+0x6b76]        # 0x140008180
   14000160a:	mov    ebx,eax
   14000160c:	mov    rcx,QWORD PTR [rip+0x9a0d]        # 0x14000b020
   140001613:	lea    rax,[rip+0x9a06]        # 0x14000b020
   14000161a:	cmp    rcx,rax
   14000161d:	je     0x140001653
   14000161f:	test   BYTE PTR [rcx+0x1c],0x8
   140001623:	je     0x140001653
   140001625:	cmp    BYTE PTR [rcx+0x19],0x2
   140001629:	jb     0x140001653
   14000162b:	call   0x140002118
   140001630:	mov    rcx,QWORD PTR [rip+0x99e9]        # 0x14000b020
   140001637:	lea    r8,[rip+0x73b2]        # 0x1400089f0
   14000163e:	mov    r9d,eax
   140001641:	mov    DWORD PTR [rsp+0x20],ebx
   140001645:	mov    edx,0xf
   14000164a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000164e:	call   0x1400010a8
   140001653:	movzx  esi,bx
   140001656:	or     esi,0x80070000
   14000165c:	test   ebx,ebx
   14000165e:	cmovle esi,ebx
   140001661:	test   esi,esi
   140001663:	js     0x140001762
   140001669:	mov    esi,0x80004005
   14000166e:	jmp    0x140001762
   140001673:	mov    rax,QWORD PTR [r14+0x10]
   140001677:	or     esi,0xffffffff
   14000167a:	mov    rdi,QWORD PTR [rax+r15*8]
   14000167e:	mov    rax,QWORD PTR [rdi]
   140001681:	mov    rbx,QWORD PTR [rax+0x68]
   140001685:	mov    rcx,rbx
   140001688:	call   QWORD PTR [rip+0x6d42]        # 0x1400083d0
   14000168e:	movzx  edx,si
   140001691:	mov    rcx,rdi
   140001694:	call   rbx
   140001696:	mov    rax,QWORD PTR [r14+0x10]
   14000169a:	xor    esi,esi
   14000169c:	mov    rdi,QWORD PTR [rax+r15*8]
   1400016a0:	mov    rax,QWORD PTR [rdi]
   1400016a3:	mov    rbx,QWORD PTR [rax+0x10]
   1400016a7:	mov    rcx,rbx
   1400016aa:	call   QWORD PTR [rip+0x6d20]        # 0x1400083d0
   1400016b0:	mov    rcx,rdi
   1400016b3:	call   rbx
   1400016b5:	mov    rax,QWORD PTR [r14+0x10]
   1400016b9:	and    QWORD PTR [rax+r15*8],rsi
   1400016bd:	mov    rax,QWORD PTR [r14+0x10]
   1400016c1:	mov    rcx,QWORD PTR [rax+r15*8+0x8]
   1400016c6:	test   rcx,rcx
   1400016c9:	je     0x1400016da
   1400016cb:	call   QWORD PTR [rip+0x6adf]        # 0x1400081b0
   1400016d1:	mov    rax,QWORD PTR [r14+0x10]
   1400016d5:	and    QWORD PTR [rax+r15*8+0x8],rsi
   1400016da:	add    DWORD PTR [r14+0x20],0xffffffff
   1400016df:	jne    0x140001745
   1400016e1:	mov    rcx,QWORD PTR [r14+0x28]
   1400016e5:	call   0x1400034a8
   1400016ea:	mov    esi,eax
   1400016ec:	test   eax,eax
   1400016ee:	jns    0x140001745
   1400016f0:	mov    rcx,QWORD PTR [rip+0x9929]        # 0x14000b020
   1400016f7:	lea    rax,[rip+0x9922]        # 0x14000b020
   1400016fe:	cmp    rcx,rax
   140001701:	je     0x140001762
   140001703:	test   BYTE PTR [rcx+0x1c],0x8
   140001707:	je     0x140001762
   140001709:	cmp    BYTE PTR [rcx+0x19],0x2
   14000170d:	jb     0x140001762
   14000170f:	call   0x140002118
   140001714:	mov    rcx,QWORD PTR [rip+0x9905]        # 0x14000b020
   14000171b:	lea    r8,[rip+0x72ce]        # 0x1400089f0
   140001722:	mov    r9d,eax
   140001725:	mov    DWORD PTR [rsp+0x28],esi
   140001729:	lea    rax,[rip+0x71a0]        # 0x1400088d0
   140001730:	mov    edx,0x10
   140001735:	mov    QWORD PTR [rsp+0x20],rax
   14000173a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000173e:	call   0x1400010f0
   140001743:	jmp    0x140001762
   140001745:	mov    rax,QWORD PTR [r14+0x28]
   140001749:	mov    rdi,QWORD PTR [rax+0x28]
   14000174d:	mov    rax,QWORD PTR [rdi]
   140001750:	mov    rbx,QWORD PTR [rax+0x10]
   140001754:	mov    rcx,rbx
   140001757:	call   QWORD PTR [rip+0x6c73]        # 0x1400083d0
   14000175d:	mov    rcx,rdi
   140001760:	call   rbx
   140001762:	mov    rbx,QWORD PTR [rsp+0x40]
   140001767:	mov    eax,esi
   140001769:	mov    rsi,QWORD PTR [rsp+0x48]
   14000176e:	mov    rdi,QWORD PTR [rsp+0x50]
   140001773:	mov    r14,QWORD PTR [rsp+0x58]
   140001778:	add    rsp,0x30
   14000177c:	pop    r15
   14000177e:	ret    
   14000177f:	int3   
   140001780:	int3   
   140001781:	int3   
   140001782:	int3   
   140001783:	int3   
   140001784:	int3   
   140001785:	int3   
   140001786:	int3   
   140001787:	int3   
   140001788:	mov    QWORD PTR [rsp+0x8],rbx
   14000178d:	mov    QWORD PTR [rsp+0x10],rbp
   140001792:	mov    QWORD PTR [rsp+0x18],rsi
   140001797:	push   rdi
   140001798:	push   r14
   14000179a:	push   r15
   14000179c:	sub    rsp,0x30
   1400017a0:	mov    r14,rcx
   1400017a3:	xor    edi,edi
   1400017a5:	mov    rcx,QWORD PTR [rcx+0x18]
   1400017a9:	mov    rbp,r8
   1400017ac:	mov    r15,rdx
   1400017af:	test   rcx,rcx
   1400017b2:	je     0x1400017ca
   1400017b4:	mov    rax,QWORD PTR [r14+0x10]
   1400017b8:	cmp    QWORD PTR [rax],0x0
   1400017bc:	je     0x1400017ca
   1400017be:	inc    rdi
   1400017c1:	add    rax,0x10
   1400017c5:	cmp    rdi,rcx
   1400017c8:	jb     0x1400017b8
   1400017ca:	cmp    rdi,rcx
   1400017cd:	jb     0x1400018bb
   1400017d3:	lea    rsi,[rcx+0x8]
   1400017d7:	mov    rbx,rsi
   1400017da:	shl    rbx,0x4
   1400017de:	call   QWORD PTR [rip+0x695c]        # 0x140008140
   1400017e4:	mov    r8,QWORD PTR [r14+0x10]
   1400017e8:	mov    r9,rbx
   1400017eb:	mov    rcx,rax
   1400017ee:	mov    edx,0x8
   1400017f3:	call   QWORD PTR [rip+0x697f]        # 0x140008178
   1400017f9:	test   rax,rax
   1400017fc:	jne    0x1400018b3
   140001802:	mov    rax,QWORD PTR [rip+0x9817]        # 0x14000b020
   140001809:	lea    rbx,[rip+0x9810]        # 0x14000b020
   140001810:	cmp    rax,rbx
   140001813:	je     0x140001854
   140001815:	test   BYTE PTR [rax+0x1c],0x8
   140001819:	je     0x140001854
   14000181b:	cmp    BYTE PTR [rax+0x19],0x2
   14000181f:	jb     0x140001854
   140001821:	call   0x140002118
   140001826:	mov    rcx,QWORD PTR [rip+0x97f3]        # 0x14000b020
   14000182d:	lea    r8,[rip+0x71bc]        # 0x1400089f0
   140001834:	mov    r9d,eax
   140001837:	mov    DWORD PTR [rsp+0x20],0x8007000e
   14000183f:	mov    edx,0x1d
   140001844:	mov    rcx,QWORD PTR [rcx+0x10]
   140001848:	call   0x1400010a8
   14000184d:	mov    rax,QWORD PTR [rip+0x97cc]        # 0x14000b020
   140001854:	mov    esi,0x8007000e
   140001859:	cmp    rax,rbx
   14000185c:	je     0x140001a41
   140001862:	test   BYTE PTR [rax+0x1c],0x8
   140001866:	je     0x140001a41
   14000186c:	cmp    BYTE PTR [rax+0x19],0x2
   140001870:	jb     0x140001a41
   140001876:	call   0x140002118
   14000187b:	mov    rcx,QWORD PTR [rip+0x979e]        # 0x14000b020
   140001882:	lea    r8,[rip+0x7167]        # 0x1400089f0
   140001889:	mov    r9d,eax
   14000188c:	mov    DWORD PTR [rsp+0x28],0x8007000e
   140001894:	lea    rax,[rip+0x7065]        # 0x140008900
   14000189b:	mov    edx,0x11
   1400018a0:	mov    QWORD PTR [rsp+0x20],rax
   1400018a5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400018a9:	call   0x1400010f0
   1400018ae:	jmp    0x140001a41
   1400018b3:	mov    QWORD PTR [r14+0x10],rax
   1400018b7:	mov    QWORD PTR [r14+0x18],rsi
   1400018bb:	mov    rcx,QWORD PTR [r14]
   1400018be:	xor    r9d,r9d
   1400018c1:	mov    r8d,0x7530
   1400018c7:	mov    rdx,rdi
   1400018ca:	xor    esi,esi
   1400018cc:	call   QWORD PTR [rip+0x6936]        # 0x140008208
   1400018d2:	test   rax,rax
   1400018d5:	jne    0x140001944
   1400018d7:	call   QWORD PTR [rip+0x68a3]        # 0x140008180
   1400018dd:	mov    edi,eax
   1400018df:	mov    rax,QWORD PTR [rip+0x973a]        # 0x14000b020
   1400018e6:	lea    rbx,[rip+0x9733]        # 0x14000b020
   1400018ed:	cmp    rax,rbx
   1400018f0:	je     0x140001924
   1400018f2:	test   BYTE PTR [rax+0x1c],0x8
   1400018f6:	je     0x140001924
   1400018f8:	cmp    BYTE PTR [rax+0x19],0x2
   1400018fc:	jb     0x140001924
   1400018fe:	call   0x140002118
   140001903:	mov    rcx,QWORD PTR [rip+0x9716]        # 0x14000b020
   14000190a:	lea    edx,[rsi+0x12]
   14000190d:	mov    r9d,eax
   140001910:	mov    DWORD PTR [rsp+0x20],edi
   140001914:	lea    r8,[rip+0x70d5]        # 0x1400089f0
   14000191b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000191f:	call   0x1400010a8
   140001924:	movzx  esi,di
   140001927:	or     esi,0x80070000
   14000192d:	test   edi,edi
   14000192f:	cmovle esi,edi
   140001932:	test   esi,esi
   140001934:	js     0x140001a41
   14000193a:	mov    esi,0x80004005
   14000193f:	jmp    0x140001a41
   140001944:	mov    rax,QWORD PTR [r15]
   140001947:	mov    rbx,QWORD PTR [rax+0x8]
   14000194b:	mov    rcx,rbx
   14000194e:	call   QWORD PTR [rip+0x6a7c]        # 0x1400083d0
   140001954:	mov    rcx,r15
   140001957:	call   rbx
   140001959:	mov    rax,QWORD PTR [r14+0x10]
   14000195d:	add    rdi,rdi
   140001960:	mov    rcx,rbp
   140001963:	mov    QWORD PTR [rax+rdi*8],r15
   140001967:	call   QWORD PTR [rip+0x683b]        # 0x1400081a8
   14000196d:	mov    rcx,QWORD PTR [r14+0x10]
   140001971:	mov    QWORD PTR [rcx+rdi*8+0x8],rax
   140001976:	mov    rax,QWORD PTR [r14+0x10]
   14000197a:	cmp    QWORD PTR [rax+rdi*8+0x8],rsi
   14000197f:	jne    0x140001a20
   140001985:	mov    rax,QWORD PTR [rip+0x9694]        # 0x14000b020
   14000198c:	lea    rbx,[rip+0x968d]        # 0x14000b020
   140001993:	cmp    rax,rbx
   140001996:	je     0x1400019d0
   140001998:	test   BYTE PTR [rax+0x1c],0x8
   14000199c:	je     0x1400019d0
   14000199e:	cmp    BYTE PTR [rax+0x19],0x2
   1400019a2:	jb     0x1400019d0
   1400019a4:	call   0x140002118
   1400019a9:	mov    rcx,QWORD PTR [rip+0x9670]        # 0x14000b020
   1400019b0:	lea    r8,[rip+0x7039]        # 0x1400089f0
   1400019b7:	mov    r9d,eax
   1400019ba:	mov    DWORD PTR [rsp+0x20],0x8007000e
   1400019c2:	mov    edx,0x13
   1400019c7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400019cb:	call   0x1400010a8
   1400019d0:	mov    rax,QWORD PTR [r14+0x10]
   1400019d4:	mov    esi,0x8007000e
   1400019d9:	mov    rcx,QWORD PTR [rax+rdi*8+0x8]
   1400019de:	test   rcx,rcx
   1400019e1:	je     0x1400019f3
   1400019e3:	call   QWORD PTR [rip+0x67c7]        # 0x1400081b0
   1400019e9:	mov    rax,QWORD PTR [r14+0x10]
   1400019ed:	and    QWORD PTR [rax+rdi*8+0x8],0x0
   1400019f3:	mov    rax,QWORD PTR [r14+0x10]
   1400019f7:	mov    r15,QWORD PTR [rax+rdi*8]
   1400019fb:	test   r15,r15
   1400019fe:	je     0x140001a41
   140001a00:	mov    rax,QWORD PTR [r15]
   140001a03:	mov    rbx,QWORD PTR [rax+0x10]
   140001a07:	mov    rcx,rbx
   140001a0a:	call   QWORD PTR [rip+0x69c0]        # 0x1400083d0
   140001a10:	mov    rcx,r15
   140001a13:	call   rbx
   140001a15:	mov    rax,QWORD PTR [r14+0x10]
   140001a19:	and    QWORD PTR [rax+rdi*8],0x0
   140001a1e:	jmp    0x140001a41
   140001a20:	mov    rcx,QWORD PTR [r14+0x28]
   140001a24:	mov    rdi,QWORD PTR [rcx+0x28]
   140001a28:	mov    rdx,QWORD PTR [rdi]
   140001a2b:	mov    rbx,QWORD PTR [rdx+0x8]
   140001a2f:	mov    rcx,rbx
   140001a32:	call   QWORD PTR [rip+0x6998]        # 0x1400083d0
   140001a38:	mov    rcx,rdi
   140001a3b:	call   rbx
   140001a3d:	inc    DWORD PTR [r14+0x20]
   140001a41:	mov    rbx,QWORD PTR [rsp+0x50]
   140001a46:	mov    eax,esi
   140001a48:	mov    rsi,QWORD PTR [rsp+0x60]
   140001a4d:	mov    rbp,QWORD PTR [rsp+0x58]
   140001a52:	add    rsp,0x30
   140001a56:	pop    r15
   140001a58:	pop    r14
   140001a5a:	pop    rdi
   140001a5b:	ret    
   140001a5c:	int3   
   140001a5d:	int3   
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	int3   
   140001a61:	int3   
   140001a62:	int3   
   140001a63:	int3   
   140001a64:	mov    rax,rsp
   140001a67:	mov    QWORD PTR [rax+0x8],rbx
   140001a6b:	mov    QWORD PTR [rax+0x10],rbp
   140001a6f:	mov    QWORD PTR [rax+0x18],rsi
   140001a73:	push   rdi
   140001a74:	push   r14
   140001a76:	push   r15
   140001a78:	sub    rsp,0x30
   140001a7c:	and    QWORD PTR [rax+0x20],0x0
   140001a81:	mov    rbp,r8
   140001a84:	lea    r8,[rax+0x20]
   140001a88:	mov    r15,rcx
   140001a8b:	call   0x140001eb4
   140001a90:	mov    esi,eax
   140001a92:	test   eax,eax
   140001a94:	jns    0x140001ada
   140001a96:	mov    rcx,QWORD PTR [rip+0x9583]        # 0x14000b020
   140001a9d:	lea    rax,[rip+0x957c]        # 0x14000b020
   140001aa4:	cmp    rcx,rax
   140001aa7:	je     0x140001d12
   140001aad:	test   BYTE PTR [rcx+0x1c],0x8
   140001ab1:	je     0x140001d12
   140001ab7:	cmp    BYTE PTR [rcx+0x19],0x2
   140001abb:	jb     0x140001d12
   140001ac1:	call   0x140002118
   140001ac6:	mov    r9d,eax
   140001ac9:	mov    edx,0x14
   140001ace:	lea    rax,[rip+0x6e43]        # 0x140008918
   140001ad5:	jmp    0x140001c06
   140001ada:	mov    r14,QWORD PTR [rsp+0x68]
   140001adf:	mov    rcx,QWORD PTR [r15]
   140001ae2:	mov    rdx,r14
   140001ae5:	call   QWORD PTR [rip+0x6735]        # 0x140008220
   140001aeb:	test   eax,eax
   140001aed:	jne    0x140001b5e
   140001aef:	call   QWORD PTR [rip+0x668b]        # 0x140008180
   140001af5:	mov    ebx,eax
   140001af7:	mov    rcx,QWORD PTR [rip+0x9522]        # 0x14000b020
   140001afe:	lea    rax,[rip+0x951b]        # 0x14000b020
   140001b05:	cmp    rcx,rax
   140001b08:	je     0x140001b3e
   140001b0a:	test   BYTE PTR [rcx+0x1c],0x8
   140001b0e:	je     0x140001b3e
   140001b10:	cmp    BYTE PTR [rcx+0x19],0x2
   140001b14:	jb     0x140001b3e
   140001b16:	call   0x140002118
   140001b1b:	mov    rcx,QWORD PTR [rip+0x94fe]        # 0x14000b020
   140001b22:	lea    r8,[rip+0x6ec7]        # 0x1400089f0
   140001b29:	mov    r9d,eax
   140001b2c:	mov    DWORD PTR [rsp+0x20],ebx
   140001b30:	mov    edx,0x15
   140001b35:	mov    rcx,QWORD PTR [rcx+0x10]
   140001b39:	call   0x1400010a8
   140001b3e:	movzx  esi,bx
   140001b41:	or     esi,0x80070000
   140001b47:	test   ebx,ebx
   140001b49:	cmovle esi,ebx
   140001b4c:	test   esi,esi
   140001b4e:	js     0x140001d12
   140001b54:	mov    esi,0x80004005
   140001b59:	jmp    0x140001d12
   140001b5e:	mov    rax,QWORD PTR [r15+0x10]
   140001b62:	add    r14,r14
   140001b65:	mov    rdi,QWORD PTR [rax+r14*8]
   140001b69:	test   rdi,rdi
   140001b6c:	jne    0x140001ba6
   140001b6e:	mov    rcx,QWORD PTR [rip+0x94ab]        # 0x14000b020
   140001b75:	lea    rax,[rip+0x94a4]        # 0x14000b020
   140001b7c:	cmp    rcx,rax
   140001b7f:	je     0x140001ca5
   140001b85:	test   BYTE PTR [rcx+0x1c],0x8
   140001b89:	je     0x140001ca5
   140001b8f:	cmp    BYTE PTR [rcx+0x19],0x2
   140001b93:	jb     0x140001ca5
   140001b99:	call   0x140002118
   140001b9e:	lea    edx,[rdi+0x16]
   140001ba1:	jmp    0x140001c83
   140001ba6:	mov    rax,QWORD PTR [rdi]
   140001ba9:	or     esi,0xffffffff
   140001bac:	mov    rbx,QWORD PTR [rax+0x68]
   140001bb0:	mov    rcx,rbx
   140001bb3:	call   QWORD PTR [rip+0x6817]        # 0x1400083d0
   140001bb9:	movzx  edx,si
   140001bbc:	mov    rcx,rdi
   140001bbf:	call   rbx
   140001bc1:	mov    esi,eax
   140001bc3:	test   eax,eax
   140001bc5:	jns    0x140001c2b
   140001bc7:	mov    rcx,QWORD PTR [rip+0x9452]        # 0x14000b020
   140001bce:	lea    rax,[rip+0x944b]        # 0x14000b020
   140001bd5:	cmp    rcx,rax
   140001bd8:	je     0x140001d12
   140001bde:	test   BYTE PTR [rcx+0x1c],0x8
   140001be2:	je     0x140001d12
   140001be8:	cmp    BYTE PTR [rcx+0x19],0x2
   140001bec:	jb     0x140001d12
   140001bf2:	call   0x140002118
   140001bf7:	mov    r9d,eax
   140001bfa:	mov    edx,0x17
   140001bff:	lea    rax,[rip+0x6d32]        # 0x140008938
   140001c06:	mov    rcx,QWORD PTR [rip+0x9413]        # 0x14000b020
   140001c0d:	lea    r8,[rip+0x6ddc]        # 0x1400089f0
   140001c14:	mov    DWORD PTR [rsp+0x28],esi
   140001c18:	mov    QWORD PTR [rsp+0x20],rax
   140001c1d:	mov    rcx,QWORD PTR [rcx+0x10]
   140001c21:	call   0x1400010f0
   140001c26:	jmp    0x140001d12
   140001c2b:	mov    rax,QWORD PTR [r15+0x28]
   140001c2f:	mov    rdi,QWORD PTR [rax+0x28]
   140001c33:	mov    rax,QWORD PTR [rdi]
   140001c36:	mov    rbx,QWORD PTR [rax+0x10]
   140001c3a:	mov    rcx,rbx
   140001c3d:	call   QWORD PTR [rip+0x678d]        # 0x1400083d0
   140001c43:	mov    rcx,rdi
   140001c46:	call   rbx
   140001c48:	dec    DWORD PTR [r15+0x20]
   140001c4c:	mov    rax,QWORD PTR [r15+0x10]
   140001c50:	mov    rcx,QWORD PTR [rax+r14*8+0x8]
   140001c55:	test   rcx,rcx
   140001c58:	jne    0x140001cac
   140001c5a:	mov    rcx,QWORD PTR [rip+0x93bf]        # 0x14000b020
   140001c61:	lea    rax,[rip+0x93b8]        # 0x14000b020
   140001c68:	cmp    rcx,rax
   140001c6b:	je     0x140001ca5
   140001c6d:	test   BYTE PTR [rcx+0x1c],0x8
   140001c71:	je     0x140001ca5
   140001c73:	cmp    BYTE PTR [rcx+0x19],0x2
   140001c77:	jb     0x140001ca5
   140001c79:	call   0x140002118
   140001c7e:	mov    edx,0x18
   140001c83:	mov    rcx,QWORD PTR [rip+0x9396]        # 0x14000b020
   140001c8a:	lea    r8,[rip+0x6d5f]        # 0x1400089f0
   140001c91:	mov    r9d,eax
   140001c94:	mov    DWORD PTR [rsp+0x20],0x8000ffff
   140001c9c:	mov    rcx,QWORD PTR [rcx+0x10]
   140001ca0:	call   0x1400010a8
   140001ca5:	mov    esi,0x8000ffff
   140001caa:	jmp    0x140001d12
   140001cac:	call   QWORD PTR [rip+0x64f6]        # 0x1400081a8
   140001cb2:	mov    QWORD PTR [rbp+0x0],rax
   140001cb6:	mov    rax,QWORD PTR [r15+0x10]
   140001cba:	cmp    QWORD PTR [rax+r14*8+0x8],0x0
   140001cc0:	jne    0x140001d12
   140001cc2:	mov    rcx,QWORD PTR [rip+0x9357]        # 0x14000b020
   140001cc9:	lea    rax,[rip+0x9350]        # 0x14000b020
   140001cd0:	cmp    rcx,rax
   140001cd3:	je     0x140001d0d
   140001cd5:	test   BYTE PTR [rcx+0x1c],0x8
   140001cd9:	je     0x140001d0d
   140001cdb:	cmp    BYTE PTR [rcx+0x19],0x2
   140001cdf:	jb     0x140001d0d
   140001ce1:	call   0x140002118
   140001ce6:	mov    rcx,QWORD PTR [rip+0x9333]        # 0x14000b020
   140001ced:	lea    r8,[rip+0x6cfc]        # 0x1400089f0
   140001cf4:	mov    r9d,eax
   140001cf7:	mov    DWORD PTR [rsp+0x20],0x8007000e
   140001cff:	mov    edx,0x19
   140001d04:	mov    rcx,QWORD PTR [rcx+0x10]
   140001d08:	call   0x1400010a8
   140001d0d:	mov    esi,0x8007000e
   140001d12:	mov    rbx,QWORD PTR [rsp+0x50]
   140001d17:	mov    eax,esi
   140001d19:	mov    rsi,QWORD PTR [rsp+0x60]
   140001d1e:	mov    rbp,QWORD PTR [rsp+0x58]
   140001d23:	add    rsp,0x30
   140001d27:	pop    r15
   140001d29:	pop    r14
   140001d2b:	pop    rdi
   140001d2c:	ret    
   140001d2d:	int3   
   140001d2e:	int3   
   140001d2f:	int3   
   140001d30:	int3   
   140001d31:	int3   
   140001d32:	int3   
   140001d33:	int3   
   140001d34:	mov    rax,rsp
   140001d37:	mov    QWORD PTR [rax+0x8],rbx
   140001d3b:	mov    QWORD PTR [rax+0x10],rbp
   140001d3f:	mov    QWORD PTR [rax+0x18],rsi
   140001d43:	push   rdi
   140001d44:	push   r14
   140001d46:	push   r15
   140001d48:	sub    rsp,0x30
   140001d4c:	and    QWORD PTR [rax+0x20],0x0
   140001d51:	mov    r15,r8
   140001d54:	lea    r8,[rax+0x20]
   140001d58:	mov    rbp,rcx
   140001d5b:	call   0x140001eb4
   140001d60:	mov    edi,eax
   140001d62:	test   eax,eax
   140001d64:	jns    0x140001dca
   140001d66:	mov    rcx,QWORD PTR [rip+0x92b3]        # 0x14000b020
   140001d6d:	lea    rax,[rip+0x92ac]        # 0x14000b020
   140001d74:	cmp    rcx,rax
   140001d77:	je     0x140001e93
   140001d7d:	test   BYTE PTR [rcx+0x1c],0x8
   140001d81:	je     0x140001e93
   140001d87:	cmp    BYTE PTR [rcx+0x19],0x2
   140001d8b:	jb     0x140001e93
   140001d91:	call   0x140002118
   140001d96:	mov    rcx,QWORD PTR [rip+0x9283]        # 0x14000b020
   140001d9d:	lea    r8,[rip+0x6c4c]        # 0x1400089f0
   140001da4:	mov    r9d,eax
   140001da7:	mov    DWORD PTR [rsp+0x28],edi
   140001dab:	lea    rax,[rip+0x6b66]        # 0x140008918
   140001db2:	mov    edx,0x1a
   140001db7:	mov    QWORD PTR [rsp+0x20],rax
   140001dbc:	mov    rcx,QWORD PTR [rcx+0x10]
   140001dc0:	call   0x1400010f0
   140001dc5:	jmp    0x140001e93
   140001dca:	mov    rsi,QWORD PTR [rsp+0x68]
   140001dcf:	mov    rax,QWORD PTR [rbp+0x10]
   140001dd3:	add    rsi,rsi
   140001dd6:	mov    r14,QWORD PTR [rax+rsi*8]
   140001dda:	test   r14,r14
   140001ddd:	jne    0x140001e09
   140001ddf:	mov    rcx,QWORD PTR [rip+0x923a]        # 0x14000b020
   140001de6:	lea    rax,[rip+0x9233]        # 0x14000b020
   140001ded:	cmp    rcx,rax
   140001df0:	je     0x140001e5c
   140001df2:	test   BYTE PTR [rcx+0x1c],0x8
   140001df6:	je     0x140001e5c
   140001df8:	cmp    BYTE PTR [rcx+0x19],0x2
   140001dfc:	jb     0x140001e5c
   140001dfe:	call   0x140002118
   140001e03:	lea    edx,[r14+0x1b]
   140001e07:	jmp    0x140001e3a
   140001e09:	cmp    QWORD PTR [rax+rsi*8+0x8],0x0
   140001e0f:	jne    0x140001e63
   140001e11:	mov    rcx,QWORD PTR [rip+0x9208]        # 0x14000b020
   140001e18:	lea    rax,[rip+0x9201]        # 0x14000b020
   140001e1f:	cmp    rcx,rax
   140001e22:	je     0x140001e5c
   140001e24:	test   BYTE PTR [rcx+0x1c],0x8
   140001e28:	je     0x140001e5c
   140001e2a:	cmp    BYTE PTR [rcx+0x19],0x2
   140001e2e:	jb     0x140001e5c
   140001e30:	call   0x140002118
   140001e35:	mov    edx,0x1c
   140001e3a:	mov    rcx,QWORD PTR [rip+0x91df]        # 0x14000b020
   140001e41:	lea    r8,[rip+0x6ba8]        # 0x1400089f0
   140001e48:	mov    r9d,eax
   140001e4b:	mov    DWORD PTR [rsp+0x20],0x8000ffff
   140001e53:	mov    rcx,QWORD PTR [rcx+0x10]
   140001e57:	call   0x1400010a8
   140001e5c:	mov    edi,0x8000ffff
   140001e61:	jmp    0x140001e93
   140001e63:	mov    rax,QWORD PTR [r14]
   140001e66:	mov    rbx,QWORD PTR [rax+0x10]
   140001e6a:	mov    rcx,rbx
   140001e6d:	call   QWORD PTR [rip+0x655d]        # 0x1400083d0
   140001e73:	mov    rcx,r14
   140001e76:	call   rbx
   140001e78:	mov    rax,QWORD PTR [rbp+0x10]
   140001e7c:	and    QWORD PTR [rax+rsi*8],0x0
   140001e81:	mov    rcx,QWORD PTR [rbp+0x10]
   140001e85:	mov    rax,QWORD PTR [rcx+rsi*8+0x8]
   140001e8a:	and    QWORD PTR [rcx+rsi*8+0x8],0x0
   140001e90:	mov    QWORD PTR [r15],rax
   140001e93:	mov    rbx,QWORD PTR [rsp+0x50]
   140001e98:	mov    eax,edi
   140001e9a:	mov    rbp,QWORD PTR [rsp+0x58]
   140001e9f:	mov    rsi,QWORD PTR [rsp+0x60]
   140001ea4:	add    rsp,0x30
   140001ea8:	pop    r15
   140001eaa:	pop    r14
   140001eac:	pop    rdi
   140001ead:	ret    
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	int3   
   140001eb1:	int3   
   140001eb2:	int3   
   140001eb3:	int3   
   140001eb4:	mov    rax,rsp
   140001eb7:	mov    QWORD PTR [rax+0x8],rbx
   140001ebb:	mov    QWORD PTR [rax+0x18],rbp
   140001ebf:	push   rsi
   140001ec0:	push   rdi
   140001ec1:	push   r12
   140001ec3:	push   r14
   140001ec5:	push   r15
   140001ec7:	sub    rsp,0x30
   140001ecb:	and    QWORD PTR [rax+0x20],0x0
   140001ed0:	mov    rsi,rcx
   140001ed3:	and    QWORD PTR [rax+0x10],0x0
   140001ed8:	mov    r12,r8
   140001edb:	mov    rax,QWORD PTR [rdx]
   140001ede:	mov    rdi,rdx
   140001ee1:	mov    rbx,QWORD PTR [rax+0x38]
   140001ee5:	mov    rcx,rbx
   140001ee8:	call   QWORD PTR [rip+0x64e2]        # 0x1400083d0
   140001eee:	lea    rdx,[rsp+0x78]
   140001ef3:	mov    rcx,rdi
   140001ef6:	call   rbx
   140001ef8:	mov    ebx,eax
   140001efa:	test   eax,eax
   140001efc:	jns    0x140001f38
   140001efe:	mov    rax,QWORD PTR [rip+0x911b]        # 0x14000b020
   140001f05:	lea    rcx,[rip+0x9114]        # 0x14000b020
   140001f0c:	cmp    rax,rcx
   140001f0f:	je     0x1400020e3
   140001f15:	test   BYTE PTR [rax+0x1c],0x8
   140001f19:	je     0x1400020e3
   140001f1f:	cmp    BYTE PTR [rax+0x19],0x2
   140001f23:	jb     0x1400020e3
   140001f29:	call   0x140002118
   140001f2e:	mov    edx,0x1e
   140001f33:	jmp    0x14000205b
   140001f38:	mov    rcx,QWORD PTR [rsp+0x78]
   140001f3d:	call   QWORD PTR [rip+0x625d]        # 0x1400081a0
   140001f43:	mov    ebp,eax
   140001f45:	test   eax,eax
   140001f47:	jne    0x140001f9e
   140001f49:	mov    rax,QWORD PTR [rip+0x90d0]        # 0x14000b020
   140001f50:	lea    rcx,[rip+0x90c9]        # 0x14000b020
   140001f57:	cmp    rax,rcx
   140001f5a:	je     0x140001f94
   140001f5c:	test   BYTE PTR [rax+0x1c],0x8
   140001f60:	je     0x140001f94
   140001f62:	cmp    BYTE PTR [rax+0x19],0x2
   140001f66:	jb     0x140001f94
   140001f68:	call   0x140002118
   140001f6d:	mov    rcx,QWORD PTR [rip+0x90ac]        # 0x14000b020
   140001f74:	lea    r8,[rip+0x6a75]        # 0x1400089f0
   140001f7b:	mov    r9d,eax
   140001f7e:	mov    DWORD PTR [rsp+0x20],0x8000ffff
   140001f86:	mov    edx,0x1f
   140001f8b:	mov    rcx,QWORD PTR [rcx+0x10]
   140001f8f:	call   0x1400010a8
   140001f94:	mov    ebx,0x8000ffff
   140001f99:	jmp    0x1400020e3
   140001f9e:	xor    edi,edi
   140001fa0:	cmp    rdi,QWORD PTR [rsi+0x18]
   140001fa4:	jae    0x14000208d
   140001faa:	xor    r14d,r14d
   140001fad:	mov    rax,QWORD PTR [rsi+0x10]
   140001fb1:	mov    r15,QWORD PTR [r14+rax*1]
   140001fb5:	test   r15,r15
   140001fb8:	je     0x140002017
   140001fba:	mov    rax,QWORD PTR [r15]
   140001fbd:	mov    rbx,QWORD PTR [rax+0x38]
   140001fc1:	mov    rcx,rbx
   140001fc4:	call   QWORD PTR [rip+0x6406]        # 0x1400083d0
   140001fca:	lea    rdx,[rsp+0x68]
   140001fcf:	mov    rcx,r15
   140001fd2:	call   rbx
   140001fd4:	mov    ebx,eax
   140001fd6:	test   eax,eax
   140001fd8:	js     0x140002026
   140001fda:	mov    rcx,QWORD PTR [rsp+0x68]
   140001fdf:	call   QWORD PTR [rip+0x61bb]        # 0x1400081a0
   140001fe5:	cmp    ebp,eax
   140001fe7:	jne    0x140002006
   140001fe9:	mov    rdx,QWORD PTR [rsp+0x68]
   140001fee:	mov    r8,rbp
   140001ff1:	mov    rcx,QWORD PTR [rsp+0x78]
   140001ff6:	add    r8,r8
   140001ff9:	call   0x140007376
   140001ffe:	test   eax,eax
   140002000:	je     0x140002087
   140002006:	mov    rcx,QWORD PTR [rsp+0x68]
   14000200b:	call   QWORD PTR [rip+0x619f]        # 0x1400081b0
   140002011:	and    QWORD PTR [rsp+0x68],0x0
   140002017:	inc    rdi
   14000201a:	add    r14,0x10
   14000201e:	cmp    rdi,QWORD PTR [rsi+0x18]
   140002022:	jae    0x14000208d
   140002024:	jmp    0x140001fad
   140002026:	mov    rax,QWORD PTR [rip+0x8ff3]        # 0x14000b020
   14000202d:	lea    rcx,[rip+0x8fec]        # 0x14000b020
   140002034:	cmp    rax,rcx
   140002037:	je     0x1400020e3
   14000203d:	test   BYTE PTR [rax+0x1c],0x8
   140002041:	je     0x1400020e3
   140002047:	cmp    BYTE PTR [rax+0x19],0x2
   14000204b:	jb     0x1400020e3
   140002051:	call   0x140002118
   140002056:	mov    edx,0x20
   14000205b:	mov    rcx,QWORD PTR [rip+0x8fbe]        # 0x14000b020
   140002062:	lea    r8,[rip+0x6987]        # 0x1400089f0
   140002069:	mov    r9d,eax
   14000206c:	mov    DWORD PTR [rsp+0x28],ebx
   140002070:	lea    rax,[rip+0x68e1]        # 0x140008958
   140002077:	mov    QWORD PTR [rsp+0x20],rax
   14000207c:	mov    rcx,QWORD PTR [rcx+0x10]
   140002080:	call   0x1400010f0
   140002085:	jmp    0x1400020e3
   140002087:	cmp    rdi,QWORD PTR [rsi+0x18]
   14000208b:	jb     0x1400020df
   14000208d:	mov    rax,QWORD PTR [rip+0x8f8c]        # 0x14000b020
   140002094:	lea    rcx,[rip+0x8f85]        # 0x14000b020
   14000209b:	cmp    rax,rcx
   14000209e:	je     0x1400020d8
   1400020a0:	test   BYTE PTR [rax+0x1c],0x8
   1400020a4:	je     0x1400020d8
   1400020a6:	cmp    BYTE PTR [rax+0x19],0x2
   1400020aa:	jb     0x1400020d8
   1400020ac:	call   0x140002118
   1400020b1:	mov    rcx,QWORD PTR [rip+0x8f68]        # 0x14000b020
   1400020b8:	lea    r8,[rip+0x6931]        # 0x1400089f0
   1400020bf:	mov    r9d,eax
   1400020c2:	mov    DWORD PTR [rsp+0x20],0x80070490
   1400020ca:	mov    edx,0x21
   1400020cf:	mov    rcx,QWORD PTR [rcx+0x10]
   1400020d3:	call   0x1400010a8
   1400020d8:	mov    ebx,0x80070490
   1400020dd:	jmp    0x1400020e3
   1400020df:	mov    QWORD PTR [r12],rdi
   1400020e3:	mov    rcx,QWORD PTR [rsp+0x78]
   1400020e8:	call   QWORD PTR [rip+0x60c2]        # 0x1400081b0
   1400020ee:	mov    rcx,QWORD PTR [rsp+0x68]
   1400020f3:	call   QWORD PTR [rip+0x60b7]        # 0x1400081b0
   1400020f9:	mov    rbp,QWORD PTR [rsp+0x70]
   1400020fe:	mov    eax,ebx
   140002100:	mov    rbx,QWORD PTR [rsp+0x60]
   140002105:	add    rsp,0x30
   140002109:	pop    r15
   14000210b:	pop    r14
   14000210d:	pop    r12
   14000210f:	pop    rdi
   140002110:	pop    rsi
   140002111:	ret    
   140002112:	int3   
   140002113:	int3   
   140002114:	int3   
   140002115:	int3   
   140002116:	int3   
   140002117:	int3   
   140002118:	rex push rbx
   14000211a:	sub    rsp,0x40
   14000211e:	mov    rax,QWORD PTR [rip+0x8ee3]        # 0x14000b008
   140002125:	xor    rax,rsp
   140002128:	mov    QWORD PTR [rsp+0x38],rax
   14000212d:	xor    eax,eax
   14000212f:	mov    DWORD PTR [rsp+0x28],0xf4e10000
   140002137:	lea    r8,[rsp+0x20]
   14000213c:	mov    QWORD PTR [rsp+0x2c],rax
   140002141:	lea    rdx,[rip+0x6830]        # 0x140008978
   140002148:	mov    DWORD PTR [rsp+0x34],eax
   14000214c:	xor    ecx,ecx
   14000214e:	call   QWORD PTR [rip+0x6034]        # 0x140008188
   140002154:	test   eax,eax
   140002156:	je     0x140002192
   140002158:	mov    rcx,QWORD PTR [rsp+0x20]
   14000215d:	lea    rdx,[rip+0x6824]        # 0x140008988
   140002164:	call   QWORD PTR [rip+0x5fee]        # 0x140008158
   14000216a:	mov    rbx,rax
   14000216d:	test   rax,rax
   140002170:	je     0x140002187
   140002172:	mov    rcx,rax
   140002175:	call   QWORD PTR [rip+0x6255]        # 0x1400083d0
   14000217b:	lea    rdx,[rsp+0x28]
   140002180:	mov    ecx,0x1
   140002185:	call   rbx
   140002187:	mov    rcx,QWORD PTR [rsp+0x20]
   14000218c:	call   QWORD PTR [rip+0x5fbe]        # 0x140008150
   140002192:	mov    eax,DWORD PTR [rsp+0x28]
   140002196:	mov    rcx,QWORD PTR [rsp+0x38]
   14000219b:	xor    rcx,rsp
   14000219e:	call   0x140006cd0
   1400021a3:	add    rsp,0x40
   1400021a7:	pop    rbx
   1400021a8:	ret    
   1400021a9:	int3   
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	int3   
   1400021ad:	int3   
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400021b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400021ba:	push   rdi
   1400021bb:	sub    rsp,0x20
   1400021bf:	and    DWORD PTR [r8],0x0
   1400021c3:	mov    rbx,rdx
   1400021c6:	sub    ecx,0x4
   1400021c9:	je     0x1400021e0
   1400021cb:	cmp    ecx,0x1
   1400021ce:	je     0x1400021d7
   1400021d0:	mov    eax,0x57
   1400021d5:	jmp    0x14000221f
   1400021d7:	xor    edi,edi
   1400021d9:	xor    eax,eax
   1400021db:	xor    sil,sil
   1400021de:	jmp    0x140002201
   1400021e0:	mov    rcx,r9
   1400021e3:	call   QWORD PTR [rip+0x5e1f]        # 0x140008008
   1400021e9:	mov    rcx,rax
   1400021ec:	mov    rdi,rax
   1400021ef:	call   QWORD PTR [rip+0x5e1b]        # 0x140008010
   1400021f5:	mov    rcx,rdi
   1400021f8:	mov    sil,al
   1400021fb:	call   QWORD PTR [rip+0x5e17]        # 0x140008018
   140002201:	test   BYTE PTR [rbx+0x1a],0x2
   140002205:	je     0x140002212
   140002207:	mov    rcx,QWORD PTR [rbx+0x10]
   14000220b:	test   rcx,rcx
   14000220e:	cmovne rbx,rcx
   140002212:	mov    QWORD PTR [rbx+0x10],rdi
   140002216:	mov    BYTE PTR [rbx+0x19],sil
   14000221a:	mov    DWORD PTR [rbx+0x1c],eax
   14000221d:	xor    eax,eax
   14000221f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002224:	mov    rsi,QWORD PTR [rsp+0x38]
   140002229:	add    rsp,0x20
   14000222d:	pop    rdi
   14000222e:	ret    
   14000222f:	int3   
   140002230:	int3   
   140002231:	int3   
   140002232:	int3   
   140002233:	int3   
   140002234:	int3   
   140002235:	int3   
   140002236:	int3   
   140002237:	int3   
   140002238:	mov    rax,rsp
   14000223b:	mov    QWORD PTR [rax+0x8],rbx
   14000223f:	mov    QWORD PTR [rax+0x10],rsi
   140002243:	mov    QWORD PTR [rax+0x18],rdi
   140002247:	push   rbp
   140002248:	push   r12
   14000224a:	push   r13
   14000224c:	push   r14
   14000224e:	push   r15
   140002250:	lea    rbp,[rax-0x5f]
   140002254:	sub    rsp,0xa0
   14000225b:	xor    r12d,r12d
   14000225e:	mov    r14,rcx
   140002261:	xor    edx,edx
   140002263:	mov    QWORD PTR [rbp-0x19],r12
   140002267:	lea    rcx,[rbp+0x7]
   14000226b:	mov    QWORD PTR [rbp-0x1],r12
   14000226f:	lea    r8d,[r12+0x28]
   140002274:	call   0x140007382
   140002279:	mov    r15d,r12d
   14000227c:	mov    esi,r12d
   14000227f:	lea    r13d,[r12+0x1]
   140002284:	mov    QWORD PTR [rip+0x9375],r12        # 0x14000b600
   14000228b:	lea    rax,[rip+0x629e]        # 0x140008530
   140002292:	mov    QWORD PTR [rip+0x936f],r13        # 0x14000b608
   140002299:	lea    rbx,[rip+0x9350]        # 0x14000b5f0
   1400022a0:	mov    QWORD PTR [rip+0x9371],rax        # 0x14000b618
   1400022a7:	mov    QWORD PTR [rip+0x8d72],rbx        # 0x14000b020
   1400022ae:	lea    rdi,[rip+0x9363]        # 0x14000b618
   1400022b5:	mov    QWORD PTR [rip+0x9334],r12        # 0x14000b5f0
   1400022bc:	mov    r8,QWORD PTR [rdi]
   1400022bf:	lea    rax,[rbx+0x8]
   1400022c3:	mov    QWORD PTR [rsp+0x38],rax
   1400022c8:	lea    rcx,[rip+0xfffffffffffffee1]        # 0x1400021b0
   1400022cf:	mov    QWORD PTR [rsp+0x30],r12
   1400022d4:	lea    rax,[rbp-0x11]
   1400022d8:	mov    QWORD PTR [rbp-0x11],r8
   1400022dc:	lea    rdi,[rdi+0x8]
   1400022e0:	mov    QWORD PTR [rbp-0x9],r12
   1400022e4:	mov    r9d,r13d
   1400022e7:	mov    QWORD PTR [rsp+0x28],r12
   1400022ec:	mov    rdx,rbx
   1400022ef:	mov    QWORD PTR [rsp+0x20],rax
   1400022f4:	mov    QWORD PTR [rbx+0x20],r8
   1400022f8:	call   QWORD PTR [rip+0x5d22]        # 0x140008020
   1400022fe:	mov    rbx,QWORD PTR [rbx]
   140002301:	test   rbx,rbx
   140002304:	jne    0x1400022bc
   140002306:	mov    rcx,QWORD PTR [rip+0x9363]        # 0x14000b670
   14000230d:	test   rcx,rcx
   140002310:	je     0x14000231f
   140002312:	call   QWORD PTR [rip+0x6070]        # 0x140008388
   140002318:	mov    QWORD PTR [rip+0x9351],r12        # 0x14000b670
   14000231f:	movups xmm0,XMMWORD PTR [rip+0x623a]        # 0x140008560
   140002326:	lea    r9,[rip+0x9343]        # 0x14000b670
   14000232d:	xor    r8d,r8d
   140002330:	xor    edx,edx
   140002332:	lea    rcx,[rip+0x92e7]        # 0x14000b620
   140002339:	movdqu XMMWORD PTR [rip+0x92df],xmm0        # 0x14000b620
   140002341:	call   QWORD PTR [rip+0x6039]        # 0x140008380
   140002347:	movzx  ecx,BYTE PTR [rip+0x932a]        # 0x14000b678
   14000234e:	mov    edx,r13d
   140002351:	test   eax,eax
   140002353:	mov    BYTE PTR [rip+0x931f],r13b        # 0x14000b679
   14000235a:	lea    rax,[rip+0x618f]        # 0x1400084f0
   140002361:	mov    QWORD PTR [rip+0x92d0],rax        # 0x14000b638
   140002368:	cmove  ecx,r13d
   14000236c:	mov    BYTE PTR [rip+0x9306],cl        # 0x14000b678
   140002372:	lea    rax,[rip+0x61c7]        # 0x140008540
   140002379:	mov    QWORD PTR [rip+0x92c0],rax        # 0x14000b640
   140002380:	lea    rcx,[rip+0x61c9]        # 0x140008550
   140002387:	lea    rax,[rip+0x6182]        # 0x140008510
   14000238e:	mov    QWORD PTR [rip+0x929b],rcx        # 0x14000b630
   140002395:	mov    QWORD PTR [rip+0x92ac],rax        # 0x14000b648
   14000239c:	xor    r9d,r9d
   14000239f:	lea    rax,[rip+0x617a]        # 0x140008520
   1400023a6:	mov    QWORD PTR [rip+0x92a3],rcx        # 0x14000b650
   1400023ad:	mov    QWORD PTR [rip+0x92a4],rax        # 0x14000b658
   1400023b4:	xor    r8d,r8d
   1400023b7:	lea    rax,[rip+0x61d2]        # 0x140008590
   1400023be:	xor    ecx,ecx
   1400023c0:	mov    QWORD PTR [rip+0x9299],rax        # 0x14000b660
   1400023c7:	lea    rax,[rip+0x61a2]        # 0x140008570
   1400023ce:	mov    QWORD PTR [rip+0x9293],rax        # 0x14000b668
   1400023d5:	call   QWORD PTR [rip+0x5d95]        # 0x140008170
   1400023db:	lea    r13,[rip+0x8c3e]        # 0x14000b020
   1400023e2:	test   eax,eax
   1400023e4:	jne    0x14000242e
   1400023e6:	mov    rax,QWORD PTR [rip+0x8c33]        # 0x14000b020
   1400023ed:	cmp    rax,r13
   1400023f0:	je     0x14000242e
   1400023f2:	test   BYTE PTR [rax+0x1c],0x1
   1400023f6:	je     0x14000242e
   1400023f8:	cmp    BYTE PTR [rax+0x19],0x2
   1400023fc:	jb     0x14000242e
   1400023fe:	call   QWORD PTR [rip+0x5d7c]        # 0x140008180
   140002404:	mov    ebx,eax
   140002406:	call   0x140002118
   14000240b:	mov    rcx,QWORD PTR [rip+0x8c0e]        # 0x14000b020
   140002412:	lea    r8,[rip+0x6677]        # 0x140008a90
   140002419:	mov    r9d,eax
   14000241c:	mov    DWORD PTR [rsp+0x20],ebx
   140002420:	mov    edx,0xa
   140002425:	mov    rcx,QWORD PTR [rcx+0x10]
   140002429:	call   0x1400010a8
   14000242e:	call   QWORD PTR [rip+0x5d34]        # 0x140008168
   140002434:	lea    r8,[rbp-0x19]
   140002438:	mov    edx,0x60008
   14000243d:	mov    rcx,rax
   140002440:	mov    rbx,rax
   140002443:	call   QWORD PTR [rip+0x5be7]        # 0x140008030
   140002449:	test   eax,eax
   14000244b:	jne    0x1400024c1
   14000244d:	call   QWORD PTR [rip+0x5d2d]        # 0x140008180
   140002453:	mov    r14d,eax
   140002456:	mov    rbx,QWORD PTR [rip+0x8bc3]        # 0x14000b020
   14000245d:	cmp    rbx,r13
   140002460:	je     0x14000249e
   140002462:	test   BYTE PTR [rbx+0x1c],0x8
   140002466:	je     0x14000249e
   140002468:	cmp    BYTE PTR [rbx+0x19],0x2
   14000246c:	jb     0x14000249e
   14000246e:	call   0x140002118
   140002473:	mov    rcx,QWORD PTR [rip+0x8ba6]        # 0x14000b020
   14000247a:	lea    r8,[rip+0x660f]        # 0x140008a90
   140002481:	mov    r9d,eax
   140002484:	mov    DWORD PTR [rsp+0x20],r14d
   140002489:	mov    edx,0xb
   14000248e:	mov    rcx,QWORD PTR [rcx+0x10]
   140002492:	call   0x1400010a8
   140002497:	mov    rbx,QWORD PTR [rip+0x8b82]        # 0x14000b020
   14000249e:	movzx  edi,r14w
   1400024a2:	or     edi,0x80070000
   1400024a8:	test   r14d,r14d
   1400024ab:	cmovle edi,r14d
   1400024af:	test   edi,edi
   1400024b1:	js     0x1400027a6
   1400024b7:	mov    edi,0x80004005
   1400024bc:	jmp    0x1400027a6
   1400024c1:	mov    rdx,QWORD PTR [rbp-0x19]
   1400024c5:	mov    rcx,rbx
   1400024c8:	call   0x14000604c
   1400024cd:	mov    edi,eax
   1400024cf:	test   eax,eax
   1400024d1:	jns    0x140002530
   1400024d3:	mov    rbx,QWORD PTR [rip+0x8b46]        # 0x14000b020
   1400024da:	cmp    rbx,r13
   1400024dd:	je     0x1400027a6
   1400024e3:	test   BYTE PTR [rbx+0x1c],0x8
   1400024e7:	je     0x1400027a6
   1400024ed:	cmp    BYTE PTR [rbx+0x19],0x2
   1400024f1:	jb     0x1400027a6
   1400024f7:	call   0x140002118
   1400024fc:	mov    r9d,eax
   1400024ff:	mov    edx,0xc
   140002504:	lea    rax,[rip+0x64f5]        # 0x140008a00
   14000250b:	mov    rcx,QWORD PTR [rip+0x8b0e]        # 0x14000b020
   140002512:	lea    r8,[rip+0x6577]        # 0x140008a90
   140002519:	mov    DWORD PTR [rsp+0x28],edi
   14000251d:	mov    QWORD PTR [rsp+0x20],rax
   140002522:	mov    rcx,QWORD PTR [rcx+0x10]
   140002526:	call   0x1400010f0
   14000252b:	jmp    0x14000279f
   140002530:	mov    edx,0x2
   140002535:	xor    ecx,ecx
   140002537:	call   QWORD PTR [rip+0x5e6b]        # 0x1400083a8
   14000253d:	mov    edi,eax
   14000253f:	test   eax,eax
   140002541:	jns    0x14000257d
   140002543:	mov    rbx,QWORD PTR [rip+0x8ad6]        # 0x14000b020
   14000254a:	cmp    rbx,r13
   14000254d:	je     0x1400027a6
   140002553:	test   BYTE PTR [rbx+0x1c],0x8
   140002557:	je     0x1400027a6
   14000255d:	cmp    BYTE PTR [rbx+0x19],0x2
   140002561:	jb     0x1400027a6
   140002567:	call   0x140002118
   14000256c:	mov    r9d,eax
   14000256f:	mov    edx,0xd
   140002574:	lea    rax,[rip+0x64a5]        # 0x140008a20
   14000257b:	jmp    0x14000250b
   14000257d:	mov    QWORD PTR [rsp+0x40],r12
   140002582:	mov    ebx,0x1
   140002587:	mov    DWORD PTR [rsp+0x38],0x2000
   14000258f:	xor    r9d,r9d
   140002592:	mov    QWORD PTR [rsp+0x30],r12
   140002597:	xor    r8d,r8d
   14000259a:	mov    DWORD PTR [rsp+0x28],ebx
   14000259e:	or     edx,0xffffffff
   1400025a1:	xor    ecx,ecx
   1400025a3:	mov    DWORD PTR [rsp+0x20],0x6
   1400025ab:	mov    r15d,ebx
   1400025ae:	call   QWORD PTR [rip+0x5dec]        # 0x1400083a0
   1400025b4:	mov    edi,eax
   1400025b6:	test   eax,eax
   1400025b8:	jns    0x1400025f6
   1400025ba:	mov    rbx,QWORD PTR [rip+0x8a5f]        # 0x14000b020
   1400025c1:	cmp    rbx,r13
   1400025c4:	je     0x1400027a6
   1400025ca:	test   BYTE PTR [rbx+0x1c],0x8
   1400025ce:	je     0x1400027a6
   1400025d4:	cmp    BYTE PTR [rbx+0x19],0x2
   1400025d8:	jb     0x1400027a6
   1400025de:	call   0x140002118
   1400025e3:	mov    r9d,eax
   1400025e6:	lea    edx,[r15+0xd]
   1400025ea:	lea    rax,[rip+0x6447]        # 0x140008a38
   1400025f1:	jmp    0x14000250b
   1400025f6:	mov    rcx,QWORD PTR [rbp-0x19]
   1400025fa:	call   QWORD PTR [rip+0x5ae8]        # 0x1400080e8
   140002600:	mov    ecx,0xc0
   140002605:	mov    QWORD PTR [rbp-0x19],r12
   140002609:	call   0x140006898
   14000260e:	mov    rsi,rax
   140002611:	test   rax,rax
   140002614:	je     0x1400026d8
   14000261a:	lea    rax,[rip+0x5fd7]        # 0x1400085f8
   140002621:	mov    QWORD PTR [rsi+0x8],rax
   140002625:	lea    rcx,[rip+0x6254]        # 0x140008880
   14000262c:	lea    rax,[rsi+0x10]
   140002630:	mov    DWORD PTR [rax+0x10],0xdbcaabcd
   140002637:	mov    DWORD PTR [rax+0x14],ebx
   14000263a:	mov    QWORD PTR [rax],rcx
   14000263d:	lea    rcx,[rip+0x6254]        # 0x140008898
   140002644:	mov    QWORD PTR [rax+0x8],rcx
   140002648:	lea    rcx,[rip+0x61f1]        # 0x140008840
   14000264f:	mov    DWORD PTR [rax+0x20],r12d
   140002653:	mov    QWORD PTR [rax+0x18],rax
   140002657:	mov    QWORD PTR [rsi],rcx
   14000265a:	lea    rcx,[rip+0x60d7]        # 0x140008738
   140002661:	mov    QWORD PTR [rsi+0x8],rcx
   140002665:	lea    rcx,[rip+0x60b4]        # 0x140008720
   14000266c:	mov    QWORD PTR [rax],rcx
   14000266f:	lea    rax,[rip+0x608a]        # 0x140008700
   140002676:	mov    QWORD PTR [rsi+0x18],rax
   14000267a:	mov    QWORD PTR [rsi+0x38],r12
   14000267e:	mov    QWORD PTR [rsi+0x40],r12
   140002682:	mov    QWORD PTR [rsi+0x48],r12
   140002686:	mov    DWORD PTR [rsi+0x50],r12d
   14000268a:	mov    QWORD PTR [rsi+0x58],r12
   14000268e:	mov    DWORD PTR [rsi+0x60],r12d
   140002692:	mov    QWORD PTR [rsi+0x68],r12
   140002696:	mov    QWORD PTR [rsi+0x70],r12
   14000269a:	mov    QWORD PTR [rsi+0x78],r12
   14000269e:	mov    QWORD PTR [rsi+0x80],r12
   1400026a5:	mov    DWORD PTR [rsi+0x88],r12d
   1400026ac:	mov    QWORD PTR [rsi+0x90],r12
   1400026b3:	mov    DWORD PTR [rsi+0x98],r12d
   1400026ba:	mov    QWORD PTR [rsi+0xa0],r12
   1400026c1:	mov    QWORD PTR [rsi+0xa8],r12
   1400026c8:	mov    DWORD PTR [rsi+0xb0],r12d
   1400026cf:	mov    QWORD PTR [rsi+0xb8],r12
   1400026d6:	jmp    0x1400026db
   1400026d8:	mov    rsi,r12
   1400026db:	test   rsi,rsi
   1400026de:	jne    0x140002730
   1400026e0:	mov    rbx,QWORD PTR [rip+0x8939]        # 0x14000b020
   1400026e7:	cmp    rbx,r13
   1400026ea:	je     0x140002729
   1400026ec:	test   BYTE PTR [rbx+0x1c],0x8
   1400026f0:	je     0x140002729
   1400026f2:	cmp    BYTE PTR [rbx+0x19],0x2
   1400026f6:	jb     0x140002729
   1400026f8:	call   0x140002118
   1400026fd:	mov    rcx,QWORD PTR [rip+0x891c]        # 0x14000b020
   140002704:	lea    edx,[rsi+0xf]
   140002707:	mov    r9d,eax
   14000270a:	mov    DWORD PTR [rsp+0x20],0x8007000e
   140002712:	lea    r8,[rip+0x6377]        # 0x140008a90
   140002719:	mov    rcx,QWORD PTR [rcx+0x10]
   14000271d:	call   0x1400010a8
   140002722:	mov    rbx,QWORD PTR [rip+0x88f7]        # 0x14000b020
   140002729:	mov    edi,0x8007000e
   14000272e:	jmp    0x1400027a6
   140002730:	mov    rdx,r14
   140002733:	mov    rcx,rsi
   140002736:	call   0x140002b48
   14000273b:	mov    edi,eax
   14000273d:	test   eax,eax
   14000273f:	jns    0x140002786
   140002741:	mov    rbx,QWORD PTR [rip+0x88d8]        # 0x14000b020
   140002748:	cmp    rbx,r13
   14000274b:	je     0x1400027a6
   14000274d:	test   BYTE PTR [rbx+0x1c],0x8
   140002751:	je     0x1400027a6
   140002753:	cmp    BYTE PTR [rbx+0x19],0x2
   140002757:	jb     0x1400027a6
   140002759:	call   0x140002118
   14000275e:	mov    r9d,eax
   140002761:	mov    edx,0x10
   140002766:	lea    rax,[rip+0x62eb]        # 0x140008a58
   14000276d:	jmp    0x14000250b
   140002772:	lea    rcx,[rbp-0x1]
   140002776:	call   QWORD PTR [rip+0x5ab4]        # 0x140008230
   14000277c:	lea    rcx,[rbp-0x1]
   140002780:	call   QWORD PTR [rip+0x5aa2]        # 0x140008228
   140002786:	xor    r9d,r9d
   140002789:	lea    rcx,[rbp-0x1]
   14000278d:	xor    r8d,r8d
   140002790:	xor    edx,edx
   140002792:	call   QWORD PTR [rip+0x5a78]        # 0x140008210
   140002798:	test   eax,eax
   14000279a:	jne    0x140002772
   14000279c:	mov    rsi,r12
   14000279f:	mov    rbx,QWORD PTR [rip+0x887a]        # 0x14000b020
   1400027a6:	mov    rcx,QWORD PTR [rbp-0x19]
   1400027aa:	test   rcx,rcx
   1400027ad:	je     0x1400027bc
   1400027af:	call   QWORD PTR [rip+0x5933]        # 0x1400080e8
   1400027b5:	mov    rbx,QWORD PTR [rip+0x8864]        # 0x14000b020
   1400027bc:	test   rsi,rsi
   1400027bf:	je     0x1400027d8
   1400027c1:	mov    rcx,rsi
   1400027c4:	call   0x140002994
   1400027c9:	mov    rcx,rsi
   1400027cc:	call   0x1400068d8
   1400027d1:	mov    rbx,QWORD PTR [rip+0x8848]        # 0x14000b020
   1400027d8:	test   r15d,r15d
   1400027db:	je     0x1400027ea
   1400027dd:	call   QWORD PTR [rip+0x5bb5]        # 0x140008398
   1400027e3:	mov    rbx,QWORD PTR [rip+0x8836]        # 0x14000b020
   1400027ea:	cmp    rbx,r13
   1400027ed:	je     0x140002813
   1400027ef:	jmp    0x140002807
   1400027f1:	mov    rcx,QWORD PTR [rbx+0x8]
   1400027f5:	test   rcx,rcx
   1400027f8:	je     0x140002804
   1400027fa:	call   QWORD PTR [rip+0x5828]        # 0x140008028
   140002800:	mov    QWORD PTR [rbx+0x8],r12
   140002804:	mov    rbx,QWORD PTR [rbx]
   140002807:	test   rbx,rbx
   14000280a:	jne    0x1400027f1
   14000280c:	mov    QWORD PTR [rip+0x880d],r13        # 0x14000b020
   140002813:	lea    r11,[rsp+0xa0]
   14000281b:	mov    eax,edi
   14000281d:	mov    rbx,QWORD PTR [r11+0x30]
   140002821:	mov    rsi,QWORD PTR [r11+0x38]
   140002825:	mov    rdi,QWORD PTR [r11+0x40]
   140002829:	mov    rsp,r11
   14000282c:	pop    r15
   14000282e:	pop    r14
   140002830:	pop    r13
   140002832:	pop    r12
   140002834:	pop    rbp
   140002835:	ret    
   140002836:	int3   
   140002837:	int3   
   140002838:	int3   
   140002839:	int3   
   14000283a:	int3   
   14000283b:	int3   
   14000283c:	mov    QWORD PTR [rsp+0x8],rbx
   140002841:	push   rdi
   140002842:	sub    rsp,0x20
   140002846:	mov    ebx,edx
   140002848:	mov    rdi,rcx
   14000284b:	call   0x140002994
   140002850:	test   bl,0x1
   140002853:	je     0x14000285d
   140002855:	mov    rcx,rdi
   140002858:	call   0x1400068d8
   14000285d:	mov    rax,rdi
   140002860:	mov    rbx,QWORD PTR [rsp+0x30]
   140002865:	add    rsp,0x20
   140002869:	pop    rdi
   14000286a:	ret    
   14000286b:	int3   
   14000286c:	int3   
   14000286d:	int3   
   14000286e:	int3   
   14000286f:	int3   
   140002870:	int3   
   140002871:	int3   
   140002872:	int3   
   140002873:	int3   
   140002874:	int3   
   140002875:	int3   
   140002876:	int3   
   140002877:	int3   
   140002878:	int3   
   140002879:	int3   
   14000287a:	int3   
   14000287b:	int3   
   14000287c:	int3   
   14000287d:	int3   
   14000287e:	int3   
   14000287f:	int3   
   140002880:	mov    QWORD PTR [rsp+0x8],rbx
   140002885:	mov    QWORD PTR [rsp+0x10],rbp
   14000288a:	mov    QWORD PTR [rsp+0x18],rsi
   14000288f:	push   rdi
   140002890:	sub    rsp,0x20
   140002894:	mov    rdi,QWORD PTR [rcx+0x28]
   140002898:	mov    rsi,r8
   14000289b:	mov    rbp,rdx
   14000289e:	mov    rax,QWORD PTR [rdi]
   1400028a1:	mov    rbx,QWORD PTR [rax]
   1400028a4:	mov    rcx,rbx
   1400028a7:	call   QWORD PTR [rip+0x5b23]        # 0x1400083d0
   1400028ad:	mov    r8,rsi
   1400028b0:	mov    rdx,rbp
   1400028b3:	mov    rcx,rdi
   1400028b6:	mov    rax,rbx
   1400028b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028be:	mov    rbp,QWORD PTR [rsp+0x38]
   1400028c3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400028c8:	add    rsp,0x20
   1400028cc:	pop    rdi
   1400028cd:	rex.W jmp rax
   1400028d0:	int3   
   1400028d1:	int3   
   1400028d2:	int3   
   1400028d3:	int3   
   1400028d4:	int3   
   1400028d5:	int3   
   1400028d6:	int3   
   1400028d7:	int3   
   1400028d8:	int3   
   1400028d9:	int3   
   1400028da:	int3   
   1400028db:	int3   
   1400028dc:	int3   
   1400028dd:	int3   
   1400028de:	int3   
   1400028df:	int3   
   1400028e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400028ea:	push   rdi
   1400028eb:	sub    rsp,0x20
   1400028ef:	mov    rsi,rcx
   1400028f2:	mov    rcx,QWORD PTR [rip+0x6717]        # 0x140009010
   1400028f9:	cmp    QWORD PTR [rdx],rcx
   1400028fc:	jne    0x140002937
   1400028fe:	mov    rax,QWORD PTR [rip+0x6713]        # 0x140009018
   140002905:	cmp    QWORD PTR [rdx+0x8],rax
   140002909:	jne    0x140002937
   14000290b:	xor    edi,edi
   14000290d:	cmp    QWORD PTR [rdx],rcx
   140002910:	jne    0x140002932
   140002912:	cmp    QWORD PTR [rdx+0x8],rax
   140002916:	jne    0x140002932
   140002918:	mov    QWORD PTR [r8],rsi
   14000291b:	mov    rax,QWORD PTR [rsi]
   14000291e:	mov    rbx,QWORD PTR [rax+0x8]
   140002922:	mov    rcx,rbx
   140002925:	call   QWORD PTR [rip+0x5aa5]        # 0x1400083d0
   14000292b:	mov    rcx,rsi
   14000292e:	call   rbx
   140002930:	jmp    0x140002979
   140002932:	mov    QWORD PTR [r8],rdi
   140002935:	jmp    0x140002979
   140002937:	mov    rax,QWORD PTR [rdx]
   14000293a:	cmp    rax,QWORD PTR [rip+0x615f]        # 0x140008aa0
   140002941:	jne    0x140002974
   140002943:	mov    rax,QWORD PTR [rdx+0x8]
   140002947:	cmp    rax,QWORD PTR [rip+0x615a]        # 0x140008aa8
   14000294e:	jne    0x140002974
   140002950:	lea    rax,[rsi-0x10]
   140002954:	mov    QWORD PTR [r8],rax
   140002957:	mov    rdi,QWORD PTR [rsi+0x18]
   14000295b:	mov    rax,QWORD PTR [rdi]
   14000295e:	mov    rbx,QWORD PTR [rax+0x8]
   140002962:	mov    rcx,rbx
   140002965:	call   QWORD PTR [rip+0x5a65]        # 0x1400083d0
   14000296b:	mov    rcx,rdi
   14000296e:	call   rbx
   140002970:	xor    edi,edi
   140002972:	jmp    0x140002979
   140002974:	mov    edi,0x80004002
   140002979:	mov    rbx,QWORD PTR [rsp+0x30]
   14000297e:	mov    eax,edi
   140002980:	mov    rsi,QWORD PTR [rsp+0x38]
   140002985:	add    rsp,0x20
   140002989:	pop    rdi
   14000298a:	ret    
   14000298b:	int3   
   14000298c:	int3   
   14000298d:	int3   
   14000298e:	int3   
   14000298f:	int3   
   140002990:	int3   
   140002991:	int3   
   140002992:	int3   
   140002993:	int3   
   140002994:	mov    QWORD PTR [rsp+0x8],rbx
   140002999:	mov    QWORD PTR [rsp+0x10],rbp
   14000299e:	mov    QWORD PTR [rsp+0x18],rsi
   1400029a3:	push   rdi
   1400029a4:	push   r14
   1400029a6:	push   r15
   1400029a8:	sub    rsp,0x20
   1400029ac:	mov    rbx,QWORD PTR [rcx+0x58]
   1400029b0:	lea    rax,[rip+0x5e89]        # 0x140008840
   1400029b7:	mov    QWORD PTR [rcx],rax
   1400029ba:	lea    rax,[rip+0x5d77]        # 0x140008738
   1400029c1:	mov    QWORD PTR [rcx+0x8],rax
   1400029c5:	lea    rax,[rip+0x5d54]        # 0x140008720
   1400029cc:	mov    QWORD PTR [rcx+0x10],rax
   1400029d0:	lea    rax,[rip+0x5d29]        # 0x140008700
   1400029d7:	mov    QWORD PTR [rcx+0x18],rax
   1400029db:	mov    rsi,rcx
   1400029de:	test   rbx,rbx
   1400029e1:	je     0x140002a02
   1400029e3:	lea    rax,[rip+0x5bc6]        # 0x1400085b0
   1400029ea:	mov    rcx,rbx
   1400029ed:	mov    QWORD PTR [rbx],rax
   1400029f0:	call   0x140005850
   1400029f5:	mov    rcx,rbx
   1400029f8:	call   0x1400068d8
   1400029fd:	and    QWORD PTR [rsi+0x58],0x0
   140002a02:	lea    r14,[rsi+0x68]
   140002a06:	xor    ebp,ebp
   140002a08:	cmp    QWORD PTR [r14+0x18],rbp
   140002a0c:	jbe    0x140002a79
   140002a0e:	xor    r15d,r15d
   140002a11:	mov    rax,QWORD PTR [r14+0x10]
   140002a15:	cmp    QWORD PTR [r15+rax*1],0x0
   140002a1a:	je     0x140002a4e
   140002a1c:	mov    rcx,QWORD PTR [r14]
   140002a1f:	mov    rdx,rbp
   140002a22:	call   QWORD PTR [rip+0x57f8]        # 0x140008220
   140002a28:	mov    rax,QWORD PTR [r14+0x10]
   140002a2c:	mov    rdi,QWORD PTR [r15+rax*1]
   140002a30:	mov    rax,QWORD PTR [rdi]
   140002a33:	mov    rbx,QWORD PTR [rax+0x10]
   140002a37:	mov    rcx,rbx
   140002a3a:	call   QWORD PTR [rip+0x5990]        # 0x1400083d0
   140002a40:	mov    rcx,rdi
   140002a43:	call   rbx
   140002a45:	mov    rax,QWORD PTR [r14+0x10]
   140002a49:	and    QWORD PTR [r15+rax*1],0x0
   140002a4e:	mov    rax,QWORD PTR [r14+0x10]
   140002a52:	mov    rcx,QWORD PTR [r15+rax*1+0x8]
   140002a57:	test   rcx,rcx
   140002a5a:	je     0x140002a6c
   140002a5c:	call   QWORD PTR [rip+0x574e]        # 0x1400081b0
   140002a62:	mov    rax,QWORD PTR [r14+0x10]
   140002a66:	and    QWORD PTR [r15+rax*1+0x8],0x0
   140002a6c:	inc    rbp
   140002a6f:	add    r15,0x10
   140002a73:	cmp    rbp,QWORD PTR [r14+0x18]
   140002a77:	jb     0x140002a11
   140002a79:	mov    rcx,QWORD PTR [r14]
   140002a7c:	test   rcx,rcx
   140002a7f:	je     0x140002a8b
   140002a81:	call   QWORD PTR [rip+0x5749]        # 0x1400081d0
   140002a87:	and    QWORD PTR [r14],0x0
   140002a8b:	mov    rcx,QWORD PTR [rsi+0xa8]
   140002a92:	call   0x1400068d8
   140002a97:	mov    rcx,QWORD PTR [rsi+0xb8]
   140002a9e:	and    QWORD PTR [rsi+0xa8],0x0
   140002aa6:	test   rcx,rcx
   140002aa9:	je     0x140002ab9
   140002aab:	call   QWORD PTR [rip+0x56ff]        # 0x1400081b0
   140002ab1:	and    QWORD PTR [rsi+0xb8],0x0
   140002ab9:	xor    ecx,ecx
   140002abb:	call   QWORD PTR [rip+0x5757]        # 0x140008218
   140002ac1:	mov    rcx,r14
   140002ac4:	call   0x140001180
   140002ac9:	mov    rdi,QWORD PTR [rsi+0x40]
   140002acd:	test   rdi,rdi
   140002ad0:	je     0x140002aec
   140002ad2:	and    QWORD PTR [rsi+0x40],0x0
   140002ad7:	mov    rax,QWORD PTR [rdi]
   140002ada:	mov    rbx,QWORD PTR [rax+0x10]
   140002ade:	mov    rcx,rbx
   140002ae1:	call   QWORD PTR [rip+0x58e9]        # 0x1400083d0
   140002ae7:	mov    rcx,rdi
   140002aea:	call   rbx
   140002aec:	mov    rdi,QWORD PTR [rsi+0x38]
   140002af0:	test   rdi,rdi
   140002af3:	je     0x140002b0f
   140002af5:	and    QWORD PTR [rsi+0x38],0x0
   140002afa:	mov    rax,QWORD PTR [rdi]
   140002afd:	mov    rbx,QWORD PTR [rax+0x10]
   140002b01:	mov    rcx,rbx
   140002b04:	call   QWORD PTR [rip+0x58c6]        # 0x1400083d0
   140002b0a:	mov    rcx,rdi
   140002b0d:	call   rbx
   140002b0f:	mov    rbx,QWORD PTR [rsp+0x40]
   140002b14:	lea    rax,[rip+0x5d65]        # 0x140008880
   140002b1b:	mov    rbp,QWORD PTR [rsp+0x48]
   140002b20:	mov    QWORD PTR [rsi+0x10],rax
   140002b24:	lea    rax,[rip+0x5d35]        # 0x140008860
   140002b2b:	or     DWORD PTR [rsi+0x24],0x8
   140002b2f:	mov    QWORD PTR [rsi+0x18],rax
   140002b33:	mov    rsi,QWORD PTR [rsp+0x50]
   140002b38:	add    rsp,0x20
   140002b3c:	pop    r15
   140002b3e:	pop    r14
   140002b40:	pop    rdi
   140002b41:	ret    
   140002b42:	int3   
   140002b43:	int3   
   140002b44:	int3   
   140002b45:	int3   
   140002b46:	int3   
   140002b47:	int3   
   140002b48:	mov    QWORD PTR [rsp+0x18],rbx
   140002b4d:	push   rbp
   140002b4e:	push   rsi
   140002b4f:	push   rdi
   140002b50:	push   r12
   140002b52:	push   r13
   140002b54:	push   r14
   140002b56:	push   r15
   140002b58:	lea    rbp,[rsp-0x27]
   140002b5d:	sub    rsp,0x90
   140002b64:	mov    rax,QWORD PTR [rip+0x849d]        # 0x14000b008
   140002b6b:	xor    rax,rsp
   140002b6e:	mov    QWORD PTR [rbp+0x17],rax
   140002b72:	xor    ebx,ebx
   140002b74:	mov    QWORD PTR [rcx+0xa0],rdx
   140002b7b:	xor    eax,eax
   140002b7d:	mov    QWORD PTR [rbp-0x21],rbx
   140002b81:	mov    r13,rdx
   140002b84:	mov    QWORD PTR [rbp-0x11],rbx
   140002b88:	mov    rsi,rcx
   140002b8b:	mov    WORD PTR [rbp-0x9],bx
   140002b8f:	lea    r12d,[rbx+0x1]
   140002b93:	mov    QWORD PTR [rbp-0x7],rax
   140002b97:	mov    QWORD PTR [rbp+0x1],rax
   140002b9b:	lea    r14,[rcx+0xb0]
   140002ba2:	mov    QWORD PTR [rbp+0x9],rax
   140002ba6:	mov    r15d,ebx
   140002ba9:	mov    DWORD PTR [rbp+0x11],eax
   140002bac:	mov    WORD PTR [rbp+0x15],ax
   140002bb0:	mov    QWORD PTR [rbp-0x19],rbx
   140002bb4:	mov    DWORD PTR [rbp-0x29],ebx
   140002bb7:	call   QWORD PTR [rip+0x551b]        # 0x1400080d8
   140002bbd:	mov    ecx,eax
   140002bbf:	mov    rdx,r14
   140002bc2:	call   QWORD PTR [rip+0x5518]        # 0x1400080e0
   140002bc8:	test   eax,eax
   140002bca:	jne    0x140002c39
   140002bcc:	call   QWORD PTR [rip+0x55ae]        # 0x140008180
   140002bd2:	mov    edi,eax
   140002bd4:	mov    rax,QWORD PTR [rip+0x8445]        # 0x14000b020
   140002bdb:	lea    rcx,[rip+0x843e]        # 0x14000b020
   140002be2:	cmp    rax,rcx
   140002be5:	je     0x140002c19
   140002be7:	test   BYTE PTR [rax+0x1c],0x8
   140002beb:	je     0x140002c19
   140002bed:	cmp    BYTE PTR [rax+0x19],0x2
   140002bf1:	jb     0x140002c19
   140002bf3:	call   0x140002118
   140002bf8:	lea    edx,[rbx+0xa]
   140002bfb:	mov    rcx,QWORD PTR [rip+0x841e]        # 0x14000b020
   140002c02:	lea    r8,[rip+0x63f7]        # 0x140009000
   140002c09:	mov    r9d,eax
   140002c0c:	mov    DWORD PTR [rsp+0x20],edi
   140002c10:	mov    rcx,QWORD PTR [rcx+0x10]
   140002c14:	call   0x1400010a8
   140002c19:	movzx  ebx,di
   140002c1c:	or     ebx,0x80070000
   140002c22:	test   edi,edi
   140002c24:	cmovle ebx,edi
   140002c27:	test   ebx,ebx
   140002c29:	js     0x1400031ea
   140002c2f:	mov    ebx,0x80004005
   140002c34:	jmp    0x1400031ea
   140002c39:	mov    r9d,DWORD PTR [r14]
   140002c3c:	lea    r8,[rip+0x5e6d]        # 0x140008ab0
   140002c43:	mov    edx,0x10
   140002c48:	lea    rcx,[rbp-0x9]
   140002c4c:	call   0x140005360
   140002c51:	mov    ebx,eax
   140002c53:	test   eax,eax
   140002c55:	jns    0x140002c91
   140002c57:	mov    rax,QWORD PTR [rip+0x83c2]        # 0x14000b020
   140002c5e:	lea    rcx,[rip+0x83bb]        # 0x14000b020
   140002c65:	cmp    rax,rcx
   140002c68:	je     0x1400031d7
   140002c6e:	test   BYTE PTR [rax+0x1c],0x8
   140002c72:	je     0x1400031d7
   140002c78:	cmp    BYTE PTR [rax+0x19],0x2
   140002c7c:	jb     0x1400031d7
   140002c82:	call   0x140002118
   140002c87:	mov    edx,0xb
   140002c8c:	jmp    0x1400030fe
   140002c91:	xor    r9d,r9d
   140002c94:	xor    r8d,r8d
   140002c97:	mov    edx,r12d
   140002c9a:	xor    ecx,ecx
   140002c9c:	call   QWORD PTR [rip+0x53f6]        # 0x140008098
   140002ca2:	mov    QWORD PTR [rbp-0x11],rax
   140002ca6:	mov    rbx,rax
   140002ca9:	test   rax,rax
   140002cac:	jne    0x140002cee
   140002cae:	call   QWORD PTR [rip+0x54cc]        # 0x140008180
   140002cb4:	mov    edi,eax
   140002cb6:	mov    rdx,QWORD PTR [rip+0x8363]        # 0x14000b020
   140002cbd:	lea    rcx,[rip+0x835c]        # 0x14000b020
   140002cc4:	cmp    rdx,rcx
   140002cc7:	je     0x140002c19
   140002ccd:	test   BYTE PTR [rdx+0x1c],0x8
   140002cd1:	je     0x140002c19
   140002cd7:	cmp    BYTE PTR [rdx+0x19],0x2
   140002cdb:	jb     0x140002c19
   140002ce1:	call   0x140002118
   140002ce6:	lea    edx,[rbx+0xc]
   140002ce9:	jmp    0x140002bfb
   140002cee:	mov    rcx,QWORD PTR [rbp-0x21]
   140002cf2:	test   rcx,rcx
   140002cf5:	jne    0x140002d3f
   140002cf7:	lea    rax,[rbp-0x21]
   140002cfb:	xor    r8d,r8d
   140002cfe:	lea    r9d,[rcx+0x11]
   140002d02:	mov    QWORD PTR [rsp+0x20],rax
   140002d07:	mov    rcx,0xffffffff80000002
   140002d0e:	lea    rdx,[rip+0x61cb]        # 0x140008ee0
   140002d15:	call   QWORD PTR [rip+0x531d]        # 0x140008038
   140002d1b:	mov    edi,eax
   140002d1d:	test   eax,0xfffffffd
   140002d22:	jne    0x140002e8e
   140002d28:	cmp    eax,0x2
   140002d2b:	jne    0x140002d3b
   140002d2d:	lea    ecx,[rax+0x30]
   140002d30:	call   QWORD PTR [rip+0x536a]        # 0x1400080a0
   140002d36:	jmp    0x140002e19
   140002d3b:	mov    rcx,QWORD PTR [rbp-0x21]
   140002d3f:	mov    edx,0x1
   140002d44:	mov    DWORD PTR [rsp+0x20],0x1
   140002d4c:	mov    r9,rbx
   140002d4f:	lea    r8d,[rdx+0x3]
   140002d53:	call   QWORD PTR [rip+0x52e7]        # 0x140008040
   140002d59:	mov    edi,eax
   140002d5b:	test   eax,eax
   140002d5d:	jne    0x140003174
   140002d63:	mov    rcx,QWORD PTR [rbp-0x21]
   140002d67:	lea    rax,[rbp-0x29]
   140002d6b:	mov    QWORD PTR [rsp+0x30],rax
   140002d70:	lea    r9d,[rdi+0x40]
   140002d74:	lea    rax,[rbp-0x19]
   140002d78:	mov    DWORD PTR [rbp-0x29],0x8
   140002d7f:	mov    QWORD PTR [rsp+0x28],rax
   140002d84:	lea    r8,[rbp-0x9]
   140002d88:	and    QWORD PTR [rsp+0x20],r15
   140002d8d:	xor    edx,edx
   140002d8f:	call   QWORD PTR [rip+0x52b3]        # 0x140008048
   140002d95:	mov    edi,eax
   140002d97:	test   eax,0xfffffffd
   140002d9c:	jne    0x14000313b
   140002da2:	cmp    eax,0x2
   140002da5:	jne    0x140002e16
   140002da7:	or     edi,0xffffffff
   140002daa:	mov    rcx,rbx
   140002dad:	mov    edx,edi
   140002daf:	call   QWORD PTR [rip+0x52f3]        # 0x1400080a8
   140002db5:	cmp    eax,edi
   140002db7:	je     0x140002ed6
   140002dbd:	test   eax,eax
   140002dbf:	je     0x140002e19
   140002dc1:	mov    rax,QWORD PTR [rip+0x8258]        # 0x14000b020
   140002dc8:	lea    rcx,[rip+0x8251]        # 0x14000b020
   140002dcf:	cmp    rax,rcx
   140002dd2:	je     0x140002e0c
   140002dd4:	test   BYTE PTR [rax+0x1c],0x8
   140002dd8:	je     0x140002e0c
   140002dda:	cmp    BYTE PTR [rax+0x19],0x2
   140002dde:	jb     0x140002e0c
   140002de0:	call   0x140002118
   140002de5:	mov    rcx,QWORD PTR [rip+0x8234]        # 0x14000b020
   140002dec:	lea    r8,[rip+0x620d]        # 0x140009000
   140002df3:	mov    r9d,eax
   140002df6:	mov    DWORD PTR [rsp+0x20],0x8000ffff
   140002dfe:	mov    edx,0x11
   140002e03:	mov    rcx,QWORD PTR [rcx+0x10]
   140002e07:	call   0x1400010a8
   140002e0c:	mov    ebx,0x8000ffff
   140002e11:	jmp    0x1400031ea
   140002e16:	xor    r12d,r12d
   140002e19:	test   r12d,r12d
   140002e1c:	jne    0x140002cee
   140002e22:	mov    rcx,QWORD PTR [rbp-0x19]
   140002e26:	lea    edx,[r12+0x4]
   140002e2b:	xor    r9d,r9d
   140002e2e:	mov    QWORD PTR [rsp+0x20],0x50
   140002e37:	xor    r8d,r8d
   140002e3a:	call   QWORD PTR [rip+0x5270]        # 0x1400080b0
   140002e40:	mov    r15,rax
   140002e43:	test   rax,rax
   140002e46:	jne    0x140002f18
   140002e4c:	call   QWORD PTR [rip+0x532e]        # 0x140008180
   140002e52:	mov    edi,eax
   140002e54:	mov    rdx,QWORD PTR [rip+0x81c5]        # 0x14000b020
   140002e5b:	lea    rcx,[rip+0x81be]        # 0x14000b020
   140002e62:	cmp    rdx,rcx
   140002e65:	je     0x140002c19
   140002e6b:	test   BYTE PTR [rdx+0x1c],0x8
   140002e6f:	je     0x140002c19
   140002e75:	cmp    BYTE PTR [rdx+0x19],0x2
   140002e79:	jb     0x140002c19
   140002e7f:	call   0x140002118
   140002e84:	lea    edx,[r12+0x12]
   140002e89:	jmp    0x140002bfb
   140002e8e:	mov    rax,QWORD PTR [rip+0x818b]        # 0x14000b020
   140002e95:	lea    rcx,[rip+0x8184]        # 0x14000b020
   140002e9c:	cmp    rax,rcx
   140002e9f:	je     0x1400031c9
   140002ea5:	test   BYTE PTR [rax+0x1c],0x8
   140002ea9:	je     0x1400031c9
   140002eaf:	cmp    BYTE PTR [rax+0x19],0x2
   140002eb3:	jb     0x1400031c9
   140002eb9:	movzx  ebx,di
   140002ebc:	or     ebx,0x80070000
   140002ec2:	test   edi,edi
   140002ec4:	cmovle ebx,edi
   140002ec7:	call   0x140002118
   140002ecc:	mov    edx,0xd
   140002ed1:	jmp    0x1400031ab
   140002ed6:	call   QWORD PTR [rip+0x52a4]        # 0x140008180
   140002edc:	mov    edi,eax
   140002ede:	mov    rax,QWORD PTR [rip+0x813b]        # 0x14000b020
   140002ee5:	lea    rcx,[rip+0x8134]        # 0x14000b020
   140002eec:	cmp    rax,rcx
   140002eef:	je     0x140002c19
   140002ef5:	test   BYTE PTR [rax+0x1c],0x8
   140002ef9:	je     0x140002c19
   140002eff:	cmp    BYTE PTR [rax+0x19],0x2
   140002f03:	jb     0x140002c19
   140002f09:	call   0x140002118
   140002f0e:	mov    edx,0x10
   140002f13:	jmp    0x140002bfb
   140002f18:	or     DWORD PTR [rsi+0x24],0x2
   140002f1c:	lea    rdi,[rsi+0x38]
   140002f20:	mov    ecx,DWORD PTR [r14]
   140002f23:	mov    QWORD PTR [rsp+0x20],rdi
   140002f28:	call   0x140006514
   140002f2d:	mov    ebx,eax
   140002f2f:	test   eax,eax
   140002f31:	jns    0x140002f77
   140002f33:	mov    rax,QWORD PTR [rip+0x80e6]        # 0x14000b020
   140002f3a:	lea    rcx,[rip+0x80df]        # 0x14000b020
   140002f41:	cmp    rax,rcx
   140002f44:	je     0x1400031d7
   140002f4a:	test   BYTE PTR [rax+0x1c],0x8
   140002f4e:	je     0x1400031d7
   140002f54:	cmp    BYTE PTR [rax+0x19],0x2
   140002f58:	jb     0x1400031d7
   140002f5e:	call   0x140002118
   140002f63:	mov    r9d,eax
   140002f66:	mov    edx,0x14
   140002f6b:	lea    rax,[rip+0x5b76]        # 0x140008ae8
   140002f72:	jmp    0x140003108
   140002f77:	mov    ecx,0x20
   140002f7c:	call   0x140006898
   140002f81:	test   rax,rax
   140002f84:	je     0x140002fa1
   140002f86:	and    QWORD PTR [rax+0x10],0x0
   140002f8b:	lea    rcx,[rsi+0x8]
   140002f8f:	and    DWORD PTR [rax+0x18],0x0
   140002f93:	lea    rdx,[rip+0x5616]        # 0x1400085b0
   140002f9a:	mov    QWORD PTR [rax],rdx
   140002f9d:	mov    QWORD PTR [rax+0x8],rcx
   140002fa1:	mov    QWORD PTR [rsi+0x58],rax
   140002fa5:	test   rax,rax
   140002fa8:	jne    0x140002fff
   140002faa:	mov    rax,QWORD PTR [rip+0x806f]        # 0x14000b020
   140002fb1:	lea    rcx,[rip+0x8068]        # 0x14000b020
   140002fb8:	cmp    rax,rcx
   140002fbb:	je     0x140002ff5
   140002fbd:	test   BYTE PTR [rax+0x1c],0x8
   140002fc1:	je     0x140002ff5
   140002fc3:	cmp    BYTE PTR [rax+0x19],0x2
   140002fc7:	jb     0x140002ff5
   140002fc9:	call   0x140002118
   140002fce:	mov    edx,0x15
   140002fd3:	mov    rcx,QWORD PTR [rip+0x8046]        # 0x14000b020
   140002fda:	lea    r8,[rip+0x601f]        # 0x140009000
   140002fe1:	mov    r9d,eax
   140002fe4:	mov    DWORD PTR [rsp+0x20],0x8007000e
   140002fec:	mov    rcx,QWORD PTR [rcx+0x10]
   140002ff0:	call   0x1400010a8
   140002ff5:	mov    ebx,0x8007000e
   140002ffa:	jmp    0x1400031db
   140002fff:	lea    rcx,[rsi+0x68]
   140003003:	mov    r8,rsi
   140003006:	mov    rdx,r13
   140003009:	call   0x14000123c
   14000300e:	mov    ebx,eax
   140003010:	test   eax,eax
   140003012:	jns    0x14000304e
   140003014:	mov    rax,QWORD PTR [rip+0x8005]        # 0x14000b020
   14000301b:	lea    rcx,[rip+0x7ffe]        # 0x14000b020
   140003022:	cmp    rax,rcx
   140003025:	je     0x1400031d7
   14000302b:	test   BYTE PTR [rax+0x1c],0x8
   14000302f:	je     0x1400031d7
   140003035:	cmp    BYTE PTR [rax+0x19],0x2
   140003039:	jb     0x1400031d7
   14000303f:	call   0x140002118
   140003044:	mov    edx,0x16
   140003049:	jmp    0x1400030fe
   14000304e:	lea    rcx,[r15+0x10]
   140003052:	mov    edx,0x40
   140003057:	call   QWORD PTR [rip+0x513b]        # 0x140008198
   14000305d:	mov    QWORD PTR [rsi+0xb8],rax
   140003064:	mov    r14,rax
   140003067:	test   rax,rax
   14000306a:	jne    0x1400030a5
   14000306c:	mov    rax,QWORD PTR [rip+0x7fad]        # 0x14000b020
   140003073:	lea    rcx,[rip+0x7fa6]        # 0x14000b020
   14000307a:	cmp    rax,rcx
   14000307d:	je     0x140002ff5
   140003083:	test   BYTE PTR [rax+0x1c],0x8
   140003087:	je     0x140002ff5
   14000308d:	cmp    BYTE PTR [rax+0x19],0x2
   140003091:	jb     0x140002ff5
   140003097:	call   0x140002118
   14000309c:	lea    edx,[r14+0x17]
   1400030a0:	jmp    0x140002fd3
   1400030a5:	mov    rdi,QWORD PTR [rdi]
   1400030a8:	mov    rax,QWORD PTR [rdi]
   1400030ab:	mov    rbx,QWORD PTR [rax+0x28]
   1400030af:	mov    rcx,rbx
   1400030b2:	call   QWORD PTR [rip+0x5318]        # 0x1400083d0
   1400030b8:	mov    r8,rsi
   1400030bb:	mov    rdx,r14
   1400030be:	mov    rcx,rdi
   1400030c1:	call   rbx
   1400030c3:	mov    ebx,eax
   1400030c5:	test   eax,eax
   1400030c7:	jns    0x14000312d
   1400030c9:	mov    rax,QWORD PTR [rip+0x7f50]        # 0x14000b020
   1400030d0:	lea    rcx,[rip+0x7f49]        # 0x14000b020
   1400030d7:	cmp    rax,rcx
   1400030da:	je     0x1400031d7
   1400030e0:	test   BYTE PTR [rax+0x1c],0x8
   1400030e4:	je     0x1400031d7
   1400030ea:	cmp    BYTE PTR [rax+0x19],0x2
   1400030ee:	jb     0x1400031d7
   1400030f4:	call   0x140002118
   1400030f9:	mov    edx,0x18
   1400030fe:	mov    r9d,eax
   140003101:	lea    rax,[rip+0x59b8]        # 0x140008ac0
   140003108:	mov    rcx,QWORD PTR [rip+0x7f11]        # 0x14000b020
   14000310f:	lea    r8,[rip+0x5eea]        # 0x140009000
   140003116:	mov    DWORD PTR [rsp+0x28],ebx
   14000311a:	mov    QWORD PTR [rsp+0x20],rax
   14000311f:	mov    rcx,QWORD PTR [rcx+0x10]
   140003123:	call   0x1400010f0
   140003128:	jmp    0x1400031d7
   14000312d:	mov    rcx,QWORD PTR [r15]
   140003130:	call   QWORD PTR [rip+0x4f82]        # 0x1400080b8
   140003136:	jmp    0x1400031d7
   14000313b:	mov    rax,QWORD PTR [rip+0x7ede]        # 0x14000b020
   140003142:	lea    rcx,[rip+0x7ed7]        # 0x14000b020
   140003149:	cmp    rax,rcx
   14000314c:	je     0x1400031c9
   14000314e:	test   BYTE PTR [rax+0x1c],0x8
   140003152:	je     0x1400031c9
   140003154:	cmp    BYTE PTR [rax+0x19],0x2
   140003158:	jb     0x1400031c9
   14000315a:	movzx  ebx,di
   14000315d:	or     ebx,0x80070000
   140003163:	test   edi,edi
   140003165:	cmovle ebx,edi
   140003168:	call   0x140002118
   14000316d:	mov    edx,0xf
   140003172:	jmp    0x1400031ab
   140003174:	mov    rax,QWORD PTR [rip+0x7ea5]        # 0x14000b020
   14000317b:	lea    rcx,[rip+0x7e9e]        # 0x14000b020
   140003182:	cmp    rax,rcx
   140003185:	je     0x1400031c9
   140003187:	test   BYTE PTR [rax+0x1c],0x8
   14000318b:	je     0x1400031c9
   14000318d:	cmp    BYTE PTR [rax+0x19],0x2
   140003191:	jb     0x1400031c9
   140003193:	movzx  ebx,di
   140003196:	or     ebx,0x80070000
   14000319c:	test   edi,edi
   14000319e:	cmovle ebx,edi
   1400031a1:	call   0x140002118
   1400031a6:	mov    edx,0xe
   1400031ab:	mov    rcx,QWORD PTR [rip+0x7e6e]        # 0x14000b020
   1400031b2:	lea    r8,[rip+0x5e47]        # 0x140009000
   1400031b9:	mov    r9d,eax
   1400031bc:	mov    DWORD PTR [rsp+0x20],ebx
   1400031c0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400031c4:	call   0x1400010a8
   1400031c9:	movzx  ebx,di
   1400031cc:	or     ebx,0x80070000
   1400031d2:	test   edi,edi
   1400031d4:	cmovle ebx,edi
   1400031d7:	test   ebx,ebx
   1400031d9:	jns    0x1400031ea
   1400031db:	test   r15,r15
   1400031de:	je     0x1400031ea
   1400031e0:	mov    rcx,QWORD PTR [r15+0x8]
   1400031e4:	call   QWORD PTR [rip+0x4ece]        # 0x1400080b8
   1400031ea:	xor    edi,edi
   1400031ec:	mov    rcx,QWORD PTR [r15+rdi*8]
   1400031f0:	test   rcx,rcx
   1400031f3:	je     0x1400031fb
   1400031f5:	call   QWORD PTR [rip+0x4eed]        # 0x1400080e8
   1400031fb:	inc    rdi
   1400031fe:	cmp    rdi,0x2
   140003202:	jb     0x1400031ec
   140003204:	mov    rcx,QWORD PTR [rbp-0x21]
   140003208:	test   rcx,rcx
   14000320b:	je     0x140003213
   14000320d:	call   QWORD PTR [rip+0x4ed5]        # 0x1400080e8
   140003213:	mov    rax,QWORD PTR [rbp-0x11]
   140003217:	test   rax,rax
   14000321a:	je     0x140003225
   14000321c:	mov    rcx,rax
   14000321f:	call   QWORD PTR [rip+0x4ec3]        # 0x1400080e8
   140003225:	test   r15,r15
   140003228:	je     0x140003233
   14000322a:	mov    rcx,r15
   14000322d:	call   QWORD PTR [rip+0x4e8d]        # 0x1400080c0
   140003233:	mov    rcx,QWORD PTR [rbp-0x19]
   140003237:	test   rcx,rcx
   14000323a:	je     0x140003242
   14000323c:	call   QWORD PTR [rip+0x4ea6]        # 0x1400080e8
   140003242:	mov    eax,ebx
   140003244:	mov    rcx,QWORD PTR [rbp+0x17]
   140003248:	xor    rcx,rsp
   14000324b:	call   0x140006cd0
   140003250:	mov    rbx,QWORD PTR [rsp+0xe0]
   140003258:	add    rsp,0x90
   14000325f:	pop    r15
   140003261:	pop    r14
   140003263:	pop    r13
   140003265:	pop    r12
   140003267:	pop    rdi
   140003268:	pop    rsi
   140003269:	pop    rbp
   14000326a:	ret    
   14000326b:	int3   
   14000326c:	int3   
   14000326d:	int3   
   14000326e:	int3   
   14000326f:	int3   
   140003270:	int3   
   140003271:	int3   
   140003272:	int3   
   140003273:	int3   
   140003274:	mov    rax,rsp
   140003277:	mov    QWORD PTR [rax+0x8],rbx
   14000327b:	mov    QWORD PTR [rax+0x10],rbp
   14000327f:	mov    QWORD PTR [rax+0x18],rsi
   140003283:	mov    QWORD PTR [rax+0x20],rdi
   140003287:	push   r14
   140003289:	sub    rsp,0x30
   14000328d:	xor    esi,esi
   14000328f:	lea    r14,[rcx+0x40]
   140003293:	mov    rbp,rcx
   140003296:	cmp    QWORD PTR [r14],rsi
   140003299:	jne    0x140003393
   14000329f:	lea    r9,[rip+0x5c12]        # 0x140008eb8
   1400032a6:	mov    QWORD PTR [rax-0x18],r14
   1400032aa:	xor    edx,edx
   1400032ac:	lea    r8d,[rsi+0x1]
   1400032b0:	lea    rcx,[rip+0x5d81]        # 0x140009038
   1400032b7:	call   QWORD PTR [rip+0x5103]        # 0x1400083c0
   1400032bd:	mov    esi,eax
   1400032bf:	test   eax,eax
   1400032c1:	jns    0x140003304
   1400032c3:	mov    rax,QWORD PTR [rip+0x7d56]        # 0x14000b020
   1400032ca:	lea    rcx,[rip+0x7d4f]        # 0x14000b020
   1400032d1:	cmp    rax,rcx
   1400032d4:	je     0x140003393
   1400032da:	test   BYTE PTR [rax+0x1c],0x8
   1400032de:	je     0x140003393
   1400032e4:	cmp    BYTE PTR [rax+0x19],0x2
   1400032e8:	jb     0x140003393
   1400032ee:	call   0x140002118
   1400032f3:	mov    r9d,eax
   1400032f6:	mov    edx,0x19
   1400032fb:	lea    rax,[rip+0x5806]        # 0x140008b08
   140003302:	jmp    0x140003355
   140003304:	mov    rdi,QWORD PTR [r14]
   140003307:	mov    rax,QWORD PTR [rdi]
   14000330a:	mov    rbx,QWORD PTR [rax+0x38]
   14000330e:	mov    rcx,rbx
   140003311:	call   QWORD PTR [rip+0x50b9]        # 0x1400083d0
   140003317:	mov    rcx,rdi
   14000331a:	call   rbx
   14000331c:	mov    esi,eax
   14000331e:	test   eax,eax
   140003320:	jns    0x140003377
   140003322:	mov    rax,QWORD PTR [rip+0x7cf7]        # 0x14000b020
   140003329:	lea    rcx,[rip+0x7cf0]        # 0x14000b020
   140003330:	cmp    rax,rcx
   140003333:	je     0x140003393
   140003335:	test   BYTE PTR [rax+0x1c],0x8
   140003339:	je     0x140003393
   14000333b:	cmp    BYTE PTR [rax+0x19],0x2
   14000333f:	jb     0x140003393
   140003341:	call   0x140002118
   140003346:	mov    r9d,eax
   140003349:	mov    edx,0x1a
   14000334e:	lea    rax,[rip+0x57db]        # 0x140008b30
   140003355:	mov    rcx,QWORD PTR [rip+0x7cc4]        # 0x14000b020
   14000335c:	lea    r8,[rip+0x5c9d]        # 0x140009000
   140003363:	mov    DWORD PTR [rsp+0x28],esi
   140003367:	mov    QWORD PTR [rsp+0x20],rax
   14000336c:	mov    rcx,QWORD PTR [rcx+0x10]
   140003370:	call   0x1400010f0
   140003375:	jmp    0x140003393
   140003377:	mov    rdi,QWORD PTR [rbp+0x58]
   14000337b:	mov    rax,QWORD PTR [rdi]
   14000337e:	mov    rbx,QWORD PTR [rax+0x38]
   140003382:	mov    rcx,rbx
   140003385:	call   QWORD PTR [rip+0x5045]        # 0x1400083d0
   14000338b:	mov    rdx,QWORD PTR [r14]
   14000338e:	mov    rcx,rdi
   140003391:	call   rbx
   140003393:	mov    rbx,QWORD PTR [rsp+0x40]
   140003398:	mov    eax,esi
   14000339a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000339f:	mov    rbp,QWORD PTR [rsp+0x48]
   1400033a4:	mov    rdi,QWORD PTR [rsp+0x58]
   1400033a9:	add    rsp,0x30
   1400033ad:	pop    r14
   1400033af:	ret    
   1400033b0:	int3   
   1400033b1:	int3   
   1400033b2:	int3   
   1400033b3:	int3   
   1400033b4:	int3   
   1400033b5:	int3   
   1400033b6:	int3   
   1400033b7:	int3   
   1400033b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400033bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400033c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400033c7:	push   rdi
   1400033c8:	sub    rsp,0x30
   1400033cc:	xor    ebp,ebp
   1400033ce:	mov    rsi,rcx
   1400033d1:	cmp    QWORD PTR [rcx+0x40],rbp
   1400033d5:	je     0x14000348b
   1400033db:	mov    rdi,QWORD PTR [rcx+0x58]
   1400033df:	mov    rax,QWORD PTR [rdi]
   1400033e2:	mov    rbx,QWORD PTR [rax+0x40]
   1400033e6:	mov    rcx,rbx
   1400033e9:	call   QWORD PTR [rip+0x4fe1]        # 0x1400083d0
   1400033ef:	mov    rcx,rdi
   1400033f2:	call   rbx
   1400033f4:	mov    rdi,QWORD PTR [rsi+0x40]
   1400033f8:	mov    rax,QWORD PTR [rdi]
   1400033fb:	mov    rbx,QWORD PTR [rax+0x40]
   1400033ff:	mov    rcx,rbx
   140003402:	call   QWORD PTR [rip+0x4fc8]        # 0x1400083d0
   140003408:	mov    rcx,rdi
   14000340b:	call   rbx
   14000340d:	mov    ebp,eax
   14000340f:	test   eax,eax
   140003411:	jns    0x140003468
   140003413:	mov    rcx,QWORD PTR [rip+0x7c06]        # 0x14000b020
   14000341a:	lea    rax,[rip+0x7bff]        # 0x14000b020
   140003421:	cmp    rcx,rax
   140003424:	je     0x14000348b
   140003426:	test   BYTE PTR [rcx+0x1c],0x8
   14000342a:	je     0x14000348b
   14000342c:	cmp    BYTE PTR [rcx+0x19],0x2
   140003430:	jb     0x14000348b
   140003432:	call   0x140002118
   140003437:	mov    rcx,QWORD PTR [rip+0x7be2]        # 0x14000b020
   14000343e:	lea    r8,[rip+0x5bbb]        # 0x140009000
   140003445:	mov    r9d,eax
   140003448:	mov    DWORD PTR [rsp+0x28],ebp
   14000344c:	lea    rax,[rip+0x5705]        # 0x140008b58
   140003453:	mov    edx,0x1d
   140003458:	mov    QWORD PTR [rsp+0x20],rax
   14000345d:	mov    rcx,QWORD PTR [rcx+0x10]
   140003461:	call   0x1400010f0
   140003466:	jmp    0x14000348b
   140003468:	mov    rdi,QWORD PTR [rsi+0x40]
   14000346c:	test   rdi,rdi
   14000346f:	je     0x14000348b
   140003471:	and    QWORD PTR [rsi+0x40],0x0
   140003476:	mov    rax,QWORD PTR [rdi]
   140003479:	mov    rbx,QWORD PTR [rax+0x10]
   14000347d:	mov    rcx,rbx
   140003480:	call   QWORD PTR [rip+0x4f4a]        # 0x1400083d0
   140003486:	mov    rcx,rdi
   140003489:	call   rbx
   14000348b:	mov    rbx,QWORD PTR [rsp+0x40]
   140003490:	mov    eax,ebp
   140003492:	mov    rbp,QWORD PTR [rsp+0x48]
   140003497:	mov    rsi,QWORD PTR [rsp+0x50]
   14000349c:	add    rsp,0x30
   1400034a0:	pop    rdi
   1400034a1:	ret    
   1400034a2:	int3   
   1400034a3:	int3   
   1400034a4:	int3   
   1400034a5:	int3   
   1400034a6:	int3   
   1400034a7:	int3   
   1400034a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400034ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400034b2:	mov    QWORD PTR [rsp+0x18],rdi
   1400034b7:	push   r14
   1400034b9:	sub    rsp,0x30
   1400034bd:	xor    esi,esi
   1400034bf:	mov    rdi,rcx
   1400034c2:	cmp    DWORD PTR [rcx+0x98],esi
   1400034c8:	jne    0x1400035e9
   1400034ce:	cmp    DWORD PTR [rcx+0x88],esi
   1400034d4:	jne    0x1400035e9
   1400034da:	call   QWORD PTR [rip+0x4d68]        # 0x140008248
   1400034e0:	lea    r14,[rip+0x7b39]        # 0x14000b020
   1400034e7:	test   al,al
   1400034e9:	jne    0x14000353d
   1400034eb:	call   QWORD PTR [rip+0x4c8f]        # 0x140008180
   1400034f1:	mov    ebx,eax
   1400034f3:	mov    rcx,QWORD PTR [rip+0x7b26]        # 0x14000b020
   1400034fa:	cmp    rcx,r14
   1400034fd:	je     0x14000353d
   1400034ff:	test   BYTE PTR [rcx+0x1c],0x8
   140003503:	je     0x14000353d
   140003505:	cmp    BYTE PTR [rcx+0x19],0x2
   140003509:	jb     0x14000353d
   14000350b:	call   0x140002118
   140003510:	mov    rcx,QWORD PTR [rip+0x7b09]        # 0x14000b020
   140003517:	lea    edx,[rsi+0x1e]
   14000351a:	mov    r9d,eax
   14000351d:	mov    DWORD PTR [rsp+0x28],ebx
   140003521:	lea    rax,[rip+0x5658]        # 0x140008b80
   140003528:	lea    r8,[rip+0x5ad1]        # 0x140009000
   14000352f:	mov    QWORD PTR [rsp+0x20],rax
   140003534:	mov    rcx,QWORD PTR [rcx+0x10]
   140003538:	call   0x1400010f0
   14000353d:	mov    rcx,rdi
   140003540:	call   0x1400033b8
   140003545:	mov    esi,eax
   140003547:	test   eax,eax
   140003549:	jns    0x1400035a1
   14000354b:	mov    rax,QWORD PTR [rip+0x7ace]        # 0x14000b020
   140003552:	cmp    rax,r14
   140003555:	je     0x1400035e9
   14000355b:	test   BYTE PTR [rax+0x1c],0x8
   14000355f:	je     0x1400035e9
   140003565:	cmp    BYTE PTR [rax+0x19],0x2
   140003569:	jb     0x1400035e9
   14000356b:	call   0x140002118
   140003570:	mov    rcx,QWORD PTR [rip+0x7aa9]        # 0x14000b020
   140003577:	lea    r8,[rip+0x5a82]        # 0x140009000
   14000357e:	mov    r9d,eax
   140003581:	mov    DWORD PTR [rsp+0x28],esi
   140003585:	lea    rax,[rip+0x5614]        # 0x140008ba0
   14000358c:	mov    edx,0x1f
   140003591:	mov    QWORD PTR [rsp+0x20],rax
   140003596:	mov    rcx,QWORD PTR [rcx+0x10]
   14000359a:	call   0x1400010f0
   14000359f:	jmp    0x1400035e9
   1400035a1:	mov    r14,QWORD PTR [rdi+0x38]
   1400035a5:	test   r14,r14
   1400035a8:	je     0x1400035e9
   1400035aa:	mov    rax,QWORD PTR [r14]
   1400035ad:	mov    rbx,QWORD PTR [rax+0x30]
   1400035b1:	mov    rcx,rbx
   1400035b4:	call   QWORD PTR [rip+0x4e16]        # 0x1400083d0
   1400035ba:	mov    rdx,QWORD PTR [rdi+0xb8]
   1400035c1:	mov    rcx,r14
   1400035c4:	call   rbx
   1400035c6:	mov    r14,QWORD PTR [rdi+0x38]
   1400035ca:	test   r14,r14
   1400035cd:	je     0x1400035e9
   1400035cf:	and    QWORD PTR [rdi+0x38],0x0
   1400035d4:	mov    rax,QWORD PTR [r14]
   1400035d7:	mov    rbx,QWORD PTR [rax+0x10]
   1400035db:	mov    rcx,rbx
   1400035de:	call   QWORD PTR [rip+0x4dec]        # 0x1400083d0
   1400035e4:	mov    rcx,r14
   1400035e7:	call   rbx
   1400035e9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400035ee:	mov    eax,esi
   1400035f0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400035f5:	mov    rdi,QWORD PTR [rsp+0x50]
   1400035fa:	add    rsp,0x30
   1400035fe:	pop    r14
   140003600:	ret    
   140003601:	int3   
   140003602:	int3   
   140003603:	int3   
   140003604:	int3   
   140003605:	int3   
   140003606:	int3   
   140003607:	int3   
   140003608:	int3   
   140003609:	int3   
   14000360a:	int3   
   14000360b:	int3   
   14000360c:	int3   
   14000360d:	int3   
   14000360e:	int3   
   14000360f:	int3   
   140003610:	rex push rbp
   140003612:	push   rbx
   140003613:	push   rsi
   140003614:	push   rdi
   140003615:	push   r12
   140003617:	push   r13
   140003619:	push   r14
   14000361b:	push   r15
   14000361d:	lea    rbp,[rsp-0xf]
   140003622:	sub    rsp,0xc8
   140003629:	mov    rax,QWORD PTR [rip+0x79d8]        # 0x14000b008
   140003630:	xor    rax,rsp
   140003633:	mov    QWORD PTR [rbp-0x9],rax
   140003637:	mov    rax,QWORD PTR [rbp+0x77]
   14000363b:	mov    r14d,r8d
   14000363e:	mov    QWORD PTR [rbp-0x61],rax
   140003642:	mov    r15,rdx
   140003645:	mov    rax,QWORD PTR [rbp+0x7f]
   140003649:	mov    rsi,rcx
   14000364c:	mov    QWORD PTR [rbp-0x69],rax
   140003650:	lea    rcx,[rbp-0x57]
   140003654:	xor    eax,eax
   140003656:	xor    edx,edx
   140003658:	mov    ebx,r9d
   14000365b:	mov    QWORD PTR [rsp+0x38],rax
   140003660:	mov    edi,eax
   140003662:	mov    QWORD PTR [rbp-0x71],rax
   140003666:	mov    QWORD PTR [rbp-0x79],rax
   14000366a:	mov    r12d,eax
   14000366d:	lea    r8d,[rax+0x4c]
   140003671:	mov    WORD PTR [rbp-0x59],ax
   140003675:	mov    r13d,eax
   140003678:	call   0x140007382
   14000367d:	xor    eax,eax
   14000367f:	cmp    DWORD PTR [rsi+0x4c],0x1
   140003683:	mov    DWORD PTR [rsp+0x30],eax
   140003687:	je     0x14000368f
   140003689:	cmp    r14d,0x1
   14000368d:	jne    0x1400036a7
   14000368f:	cmp    DWORD PTR [rsi+0x98],eax
   140003695:	jne    0x140003ba1
   14000369b:	cmp    DWORD PTR [rsi+0x88],eax
   1400036a1:	jne    0x140003ba1
   1400036a7:	lea    r9,[rsp+0x30]
   1400036ac:	mov    r8d,ebx
   1400036af:	mov    edx,r14d
   1400036b2:	call   0x1400041a4
   1400036b7:	mov    edi,eax
   1400036b9:	test   eax,eax
   1400036bb:	jns    0x140003721
   1400036bd:	mov    rcx,QWORD PTR [rip+0x795c]        # 0x14000b020
   1400036c4:	lea    rax,[rip+0x7955]        # 0x14000b020
   1400036cb:	cmp    rcx,rax
   1400036ce:	je     0x140003ba9
   1400036d4:	test   BYTE PTR [rcx+0x1c],0x8
   1400036d8:	je     0x140003ba9
   1400036de:	cmp    BYTE PTR [rcx+0x19],0x2
   1400036e2:	jb     0x140003ba9
   1400036e8:	call   0x140002118
   1400036ed:	mov    rcx,QWORD PTR [rip+0x792c]        # 0x14000b020
   1400036f4:	lea    r8,[rip+0x5905]        # 0x140009000
   1400036fb:	mov    r9d,eax
   1400036fe:	mov    DWORD PTR [rsp+0x28],edi
   140003702:	lea    rax,[rip+0x54af]        # 0x140008bb8
   140003709:	mov    edx,0x21
   14000370e:	mov    QWORD PTR [rsp+0x20],rax
   140003713:	mov    rcx,QWORD PTR [rcx+0x10]
   140003717:	call   0x1400010f0
   14000371c:	jmp    0x140003ba9
   140003721:	cmp    DWORD PTR [rsp+0x30],r12d
   140003726:	jne    0x140003ba9
   14000372c:	test   r15,r15
   14000372f:	jne    0x14000380b
   140003735:	mov    rcx,QWORD PTR [rip+0x78e4]        # 0x14000b020
   14000373c:	lea    rax,[rip+0x78dd]        # 0x14000b020
   140003743:	cmp    rcx,rax
   140003746:	je     0x14000377f
   140003748:	test   BYTE PTR [rcx+0x1c],0x8
   14000374c:	je     0x14000377f
   14000374e:	cmp    BYTE PTR [rcx+0x19],0x2
   140003752:	jb     0x14000377f
   140003754:	call   0x140002118
   140003759:	mov    rcx,QWORD PTR [rip+0x78c0]        # 0x14000b020
   140003760:	lea    edx,[r15+0x22]
   140003764:	mov    r9d,eax
   140003767:	mov    DWORD PTR [rsp+0x20],0x80070057
   14000376f:	lea    r8,[rip+0x588a]        # 0x140009000
   140003776:	mov    rcx,QWORD PTR [rcx+0x10]
   14000377a:	call   0x1400010a8
   14000377f:	mov    edi,0x80070057
   140003784:	xor    ebx,ebx
   140003786:	mov    rcx,QWORD PTR [rsp+0x38]
   14000378b:	call   QWORD PTR [rip+0x4a1f]        # 0x1400081b0
   140003791:	mov    rcx,r13
   140003794:	call   QWORD PTR [rip+0x4a16]        # 0x1400081b0
   14000379a:	mov    rcx,r12
   14000379d:	call   QWORD PTR [rip+0x4a0d]        # 0x1400081b0
   1400037a3:	mov    rsi,QWORD PTR [rbp-0x79]
   1400037a7:	test   rsi,rsi
   1400037aa:	je     0x1400037c7
   1400037ac:	mov    QWORD PTR [rbp-0x79],rbx
   1400037b0:	mov    rax,QWORD PTR [rsi]
   1400037b3:	mov    rbx,QWORD PTR [rax+0x10]
   1400037b7:	mov    rcx,rbx
   1400037ba:	call   QWORD PTR [rip+0x4c10]        # 0x1400083d0
   1400037c0:	mov    rcx,rsi
   1400037c3:	call   rbx
   1400037c5:	xor    ebx,ebx
   1400037c7:	mov    rsi,QWORD PTR [rbp-0x71]
   1400037cb:	test   rsi,rsi
   1400037ce:	je     0x1400037e9
   1400037d0:	mov    QWORD PTR [rbp-0x71],rbx
   1400037d4:	mov    rax,QWORD PTR [rsi]
   1400037d7:	mov    rbx,QWORD PTR [rax+0x10]
   1400037db:	mov    rcx,rbx
   1400037de:	call   QWORD PTR [rip+0x4bec]        # 0x1400083d0
   1400037e4:	mov    rcx,rsi
   1400037e7:	call   rbx
   1400037e9:	mov    eax,edi
   1400037eb:	mov    rcx,QWORD PTR [rbp-0x9]
   1400037ef:	xor    rcx,rsp
   1400037f2:	call   0x140006cd0
   1400037f7:	add    rsp,0xc8
   1400037fe:	pop    r15
   140003800:	pop    r14
   140003802:	pop    r13
   140003804:	pop    r12
   140003806:	pop    rdi
   140003807:	pop    rsi
   140003808:	pop    rbx
   140003809:	pop    rbp
   14000380a:	ret    
   14000380b:	cmp    ebx,0x1
   14000380e:	jne    0x14000389d
   140003814:	lea    r9,[rsp+0x30]
   140003819:	mov    r8d,r14d
   14000381c:	mov    rdx,r15
   14000381f:	mov    rcx,rsi
   140003822:	call   0x140003c04
   140003827:	xor    ebx,ebx
   140003829:	mov    edi,eax
   14000382b:	test   eax,eax
   14000382d:	jns    0x140003891
   14000382f:	mov    rcx,QWORD PTR [rip+0x77ea]        # 0x14000b020
   140003836:	lea    rax,[rip+0x77e3]        # 0x14000b020
   14000383d:	cmp    rcx,rax
   140003840:	je     0x140003bab
   140003846:	test   BYTE PTR [rcx+0x1c],0x8
   14000384a:	je     0x140003bab
   140003850:	cmp    BYTE PTR [rcx+0x19],0x2
   140003854:	jb     0x140003bab
   14000385a:	call   0x140002118
   14000385f:	mov    r9d,eax
   140003862:	lea    edx,[rbx+0x23]
   140003865:	lea    rax,[rip+0x534c]        # 0x140008bb8
   14000386c:	mov    rcx,QWORD PTR [rip+0x77ad]        # 0x14000b020
   140003873:	lea    r8,[rip+0x5786]        # 0x140009000
   14000387a:	mov    DWORD PTR [rsp+0x28],edi
   14000387e:	mov    QWORD PTR [rsp+0x20],rax
   140003883:	mov    rcx,QWORD PTR [rcx+0x10]
   140003887:	call   0x1400010f0
   14000388c:	jmp    0x140003bab
   140003891:	cmp    DWORD PTR [rsp+0x30],ebx
   140003895:	jne    0x140003bab
   14000389b:	jmp    0x14000389f
   14000389d:	xor    ebx,ebx
   14000389f:	mov    rcx,rsi
   1400038a2:	call   0x140003274
   1400038a7:	mov    edi,eax
   1400038a9:	test   eax,eax
   1400038ab:	jns    0x1400038f1
   1400038ad:	mov    rcx,QWORD PTR [rip+0x776c]        # 0x14000b020
   1400038b4:	lea    rax,[rip+0x7765]        # 0x14000b020
   1400038bb:	cmp    rcx,rax
   1400038be:	je     0x140003bab
   1400038c4:	test   BYTE PTR [rcx+0x1c],0x8
   1400038c8:	je     0x140003bab
   1400038ce:	cmp    BYTE PTR [rcx+0x19],0x2
   1400038d2:	jb     0x140003bab
   1400038d8:	call   0x140002118
   1400038dd:	mov    r9d,eax
   1400038e0:	mov    edx,0x24
   1400038e5:	lea    rax,[rip+0x52ec]        # 0x140008bd8
   1400038ec:	jmp    0x14000386c
   1400038f1:	lea    rcx,[rip+0x5738]        # 0x140009030
   1400038f8:	call   QWORD PTR [rip+0x48aa]        # 0x1400081a8
   1400038fe:	mov    r12,rax
   140003901:	test   rax,rax
   140003904:	jne    0x14000395b
   140003906:	mov    rcx,QWORD PTR [rip+0x7713]        # 0x14000b020
   14000390d:	lea    rax,[rip+0x770c]        # 0x14000b020
   140003914:	cmp    rcx,rax
   140003917:	je     0x140003951
   140003919:	test   BYTE PTR [rcx+0x1c],0x8
   14000391d:	je     0x140003951
   14000391f:	cmp    BYTE PTR [rcx+0x19],0x2
   140003923:	jb     0x140003951
   140003925:	call   0x140002118
   14000392a:	lea    edx,[r12+0x25]
   14000392f:	mov    rcx,QWORD PTR [rip+0x76ea]        # 0x14000b020
   140003936:	lea    r8,[rip+0x56c3]        # 0x140009000
   14000393d:	mov    r9d,eax
   140003940:	mov    DWORD PTR [rsp+0x20],0x8007000e
   140003948:	mov    rcx,QWORD PTR [rcx+0x10]
   14000394c:	call   0x1400010a8
   140003951:	mov    edi,0x8007000e
   140003956:	jmp    0x140003786
   14000395b:	mov    r9d,DWORD PTR [rsi+0x60]
   14000395f:	lea    r8,[rip+0x5672]        # 0x140008fd8
   140003966:	mov    edx,0x27
   14000396b:	lea    rcx,[rbp-0x59]
   14000396f:	lea    eax,[r9+0x1]
   140003973:	mov    DWORD PTR [rsi+0x60],eax
   140003976:	call   0x140005360
   14000397b:	mov    edi,eax
   14000397d:	test   eax,eax
   14000397f:	jns    0x1400039c5
   140003981:	mov    rcx,QWORD PTR [rip+0x7698]        # 0x14000b020
   140003988:	lea    rax,[rip+0x7691]        # 0x14000b020
   14000398f:	cmp    rcx,rax
   140003992:	je     0x140003bab
   140003998:	test   BYTE PTR [rcx+0x1c],0x8
   14000399c:	je     0x140003bab
   1400039a2:	cmp    BYTE PTR [rcx+0x19],0x2
   1400039a6:	jb     0x140003bab
   1400039ac:	call   0x140002118
   1400039b1:	mov    r9d,eax
   1400039b4:	mov    edx,0x26
   1400039b9:	lea    rax,[rip+0x5230]        # 0x140008bf0
   1400039c0:	jmp    0x14000386c
   1400039c5:	lea    rcx,[rbp-0x59]
   1400039c9:	call   QWORD PTR [rip+0x47d9]        # 0x1400081a8
   1400039cf:	mov    r13,rax
   1400039d2:	test   rax,rax
   1400039d5:	jne    0x140003a10
   1400039d7:	mov    rcx,QWORD PTR [rip+0x7642]        # 0x14000b020
   1400039de:	lea    rax,[rip+0x763b]        # 0x14000b020
   1400039e5:	cmp    rcx,rax
   1400039e8:	je     0x140003951
   1400039ee:	test   BYTE PTR [rcx+0x1c],0x8
   1400039f2:	je     0x140003951
   1400039f8:	cmp    BYTE PTR [rcx+0x19],0x2
   1400039fc:	jb     0x140003951
   140003a02:	call   0x140002118
   140003a07:	lea    edx,[r13+0x27]
   140003a0b:	jmp    0x14000392f
   140003a10:	mov    rdi,QWORD PTR [rsi+0x40]
   140003a14:	mov    rax,QWORD PTR [rdi]
   140003a17:	mov    rbx,QWORD PTR [rax+0x68]
   140003a1b:	mov    rcx,rbx
   140003a1e:	call   QWORD PTR [rip+0x49ac]        # 0x1400083d0
   140003a24:	lea    rdx,[rbp-0x71]
   140003a28:	mov    rcx,rdi
   140003a2b:	call   rbx
   140003a2d:	xor    ebx,ebx
   140003a2f:	mov    edi,eax
   140003a31:	test   eax,eax
   140003a33:	jns    0x140003a77
   140003a35:	mov    rcx,QWORD PTR [rip+0x75e4]        # 0x14000b020
   140003a3c:	lea    rax,[rip+0x75dd]        # 0x14000b020
   140003a43:	cmp    rcx,rax
   140003a46:	je     0x140003bab
   140003a4c:	test   BYTE PTR [rcx+0x1c],0x8
   140003a50:	je     0x140003bab
   140003a56:	cmp    BYTE PTR [rcx+0x19],0x2
   140003a5a:	jb     0x140003bab
   140003a60:	call   0x140002118
   140003a65:	mov    r9d,eax
   140003a68:	lea    edx,[rbx+0x28]
   140003a6b:	lea    rax,[rip+0x5196]        # 0x140008c08
   140003a72:	jmp    0x14000386c
   140003a77:	mov    rbx,QWORD PTR [rbp-0x71]
   140003a7b:	mov    rax,QWORD PTR [rbx]
   140003a7e:	mov    rdi,QWORD PTR [rax+0x50]
   140003a82:	mov    rcx,rdi
   140003a85:	call   QWORD PTR [rip+0x4945]        # 0x1400083d0
   140003a8b:	lea    rax,[rbp-0x79]
   140003a8f:	mov    r9,r12
   140003a92:	mov    QWORD PTR [rsp+0x28],rax
   140003a97:	mov    r8,r13
   140003a9a:	xor    edx,edx
   140003a9c:	mov    DWORD PTR [rsp+0x20],0x7fffffff
   140003aa4:	mov    rcx,rbx
   140003aa7:	call   rdi
   140003aa9:	xor    ebx,ebx
   140003aab:	mov    edi,eax
   140003aad:	test   eax,eax
   140003aaf:	jns    0x140003af3
   140003ab1:	mov    rcx,QWORD PTR [rip+0x7568]        # 0x14000b020
   140003ab8:	lea    rax,[rip+0x7561]        # 0x14000b020
   140003abf:	cmp    rcx,rax
   140003ac2:	je     0x140003bab
   140003ac8:	test   BYTE PTR [rcx+0x1c],0x8
   140003acc:	je     0x140003bab
   140003ad2:	cmp    BYTE PTR [rcx+0x19],0x2
   140003ad6:	jb     0x140003bab
   140003adc:	call   0x140002118
   140003ae1:	mov    r9d,eax
   140003ae4:	lea    edx,[rbx+0x29]
   140003ae7:	lea    rax,[rip+0x5132]        # 0x140008c20
   140003aee:	jmp    0x14000386c
   140003af3:	mov    rbx,QWORD PTR [rbp-0x79]
   140003af7:	mov    rax,QWORD PTR [rbx]
   140003afa:	mov    rdi,QWORD PTR [rax+0x38]
   140003afe:	mov    rcx,rdi
   140003b01:	call   QWORD PTR [rip+0x48c9]        # 0x1400083d0
   140003b07:	lea    rdx,[rsp+0x38]
   140003b0c:	mov    rcx,rbx
   140003b0f:	call   rdi
   140003b11:	xor    ebx,ebx
   140003b13:	mov    edi,eax
   140003b15:	test   eax,eax
   140003b17:	jns    0x140003b4f
   140003b19:	mov    rcx,QWORD PTR [rip+0x7500]        # 0x14000b020
   140003b20:	lea    rax,[rip+0x74f9]        # 0x14000b020
   140003b27:	cmp    rcx,rax
   140003b2a:	je     0x140003bab
   140003b2c:	test   BYTE PTR [rcx+0x1c],0x8
   140003b30:	je     0x140003bab
   140003b32:	cmp    BYTE PTR [rcx+0x19],0x2
   140003b36:	jb     0x140003bab
   140003b38:	call   0x140002118
   140003b3d:	mov    r9d,eax
   140003b40:	lea    edx,[rbx+0x2a]
   140003b43:	lea    rax,[rip+0x50f6]        # 0x140008c40
   140003b4a:	jmp    0x14000386c
   140003b4f:	mov    rdx,QWORD PTR [rbp-0x79]
   140003b53:	lea    rcx,[rsi+0x68]
   140003b57:	mov    r8,r15
   140003b5a:	mov    DWORD PTR [rsi+0x4c],r14d
   140003b5e:	call   0x140001788
   140003b63:	mov    edi,eax
   140003b65:	test   eax,eax
   140003b67:	jns    0x140003bb3
   140003b69:	mov    rcx,QWORD PTR [rip+0x74b0]        # 0x14000b020
   140003b70:	lea    rax,[rip+0x74a9]        # 0x14000b020
   140003b77:	cmp    rcx,rax
   140003b7a:	je     0x140003bab
   140003b7c:	test   BYTE PTR [rcx+0x1c],0x8
   140003b80:	je     0x140003bab
   140003b82:	cmp    BYTE PTR [rcx+0x19],0x2
   140003b86:	jb     0x140003bab
   140003b88:	call   0x140002118
   140003b8d:	mov    r9d,eax
   140003b90:	mov    edx,0x2b
   140003b95:	lea    rax,[rip+0x50c4]        # 0x140008c60
   140003b9c:	jmp    0x14000386c
   140003ba1:	mov    DWORD PTR [rsp+0x30],0x6
   140003ba9:	xor    ebx,ebx
   140003bab:	test   edi,edi
   140003bad:	js     0x140003786
   140003bb3:	cmp    QWORD PTR [rsp+0x38],rbx
   140003bb8:	jne    0x140003bdb
   140003bba:	lea    rcx,[rip+0x52f3]        # 0x140008eb4
   140003bc1:	call   QWORD PTR [rip+0x45e1]        # 0x1400081a8
   140003bc7:	mov    ecx,edi
   140003bc9:	mov    edi,0x8007000e
   140003bce:	test   rax,rax
   140003bd1:	mov    QWORD PTR [rsp+0x38],rax
   140003bd6:	cmove  ecx,edi
   140003bd9:	mov    edi,ecx
   140003bdb:	test   edi,edi
   140003bdd:	js     0x140003786
   140003be3:	mov    rcx,QWORD PTR [rbp-0x61]
   140003be7:	mov    eax,DWORD PTR [rsp+0x30]
   140003beb:	mov    DWORD PTR [rcx],eax
   140003bed:	mov    rcx,QWORD PTR [rbp-0x69]
   140003bf1:	mov    rax,QWORD PTR [rsp+0x38]
   140003bf6:	mov    QWORD PTR [rcx],rax
   140003bf9:	jmp    0x140003791
   140003bfe:	int3   
   140003bff:	int3   
   140003c00:	int3   
   140003c01:	int3   
   140003c02:	int3   
   140003c03:	int3   
   140003c04:	rex push rbp
   140003c06:	push   rbx
   140003c07:	push   rsi
   140003c08:	push   rdi
   140003c09:	push   r14
   140003c0b:	mov    rbp,rsp
   140003c0e:	sub    rsp,0x70
   140003c12:	and    DWORD PTR [rbp+0x30],0x0
   140003c16:	mov    rsi,r9
   140003c19:	and    QWORD PTR [rbp-0x20],0x0
   140003c1e:	mov    ebx,r8d
   140003c21:	and    QWORD PTR [rbp+0x38],0x0
   140003c26:	mov    rdi,rcx
   140003c29:	and    QWORD PTR [rbp-0x18],0x0
   140003c2e:	mov    rcx,QWORD PTR [rcx+0xa0]
   140003c35:	cmp    r8d,0x1
   140003c39:	mov    QWORD PTR [rbp-0x10],rdx
   140003c3d:	lea    r8,[rbp-0x18]
   140003c41:	mov    edx,0x3eb
   140003c46:	mov    DWORD PTR [rbp+0x40],0x1e
   140003c4d:	lea    eax,[rdx-0x2]
   140003c50:	cmove  edx,eax
   140003c53:	xor    r9d,r9d
   140003c56:	call   QWORD PTR [rip+0x458c]        # 0x1400081e8
   140003c5c:	mov    r14d,eax
   140003c5f:	test   eax,eax
   140003c61:	jne    0x140003cd1
   140003c63:	call   QWORD PTR [rip+0x4517]        # 0x140008180
   140003c69:	mov    edi,eax
   140003c6b:	mov    rax,QWORD PTR [rip+0x73ae]        # 0x14000b020
   140003c72:	lea    rcx,[rip+0x73a7]        # 0x14000b020
   140003c79:	cmp    rax,rcx
   140003c7c:	je     0x140003cb1
   140003c7e:	test   BYTE PTR [rax+0x1c],0x8
   140003c82:	je     0x140003cb1
   140003c84:	cmp    BYTE PTR [rax+0x19],0x2
   140003c88:	jb     0x140003cb1
   140003c8a:	call   0x140002118
   140003c8f:	lea    edx,[r14+0x2c]
   140003c93:	mov    rcx,QWORD PTR [rip+0x7386]        # 0x14000b020
   140003c9a:	lea    r8,[rip+0x535f]        # 0x140009000
   140003ca1:	mov    r9d,eax
   140003ca4:	mov    DWORD PTR [rsp+0x20],edi
   140003ca8:	mov    rcx,QWORD PTR [rcx+0x10]
   140003cac:	call   0x1400010a8
   140003cb1:	movzx  ebx,di
   140003cb4:	or     ebx,0x80070000
   140003cba:	test   edi,edi
   140003cbc:	cmovle ebx,edi
   140003cbf:	test   ebx,ebx
   140003cc1:	js     0x140003e3a
   140003cc7:	mov    ebx,0x80004005
   140003ccc:	jmp    0x140003e3a
   140003cd1:	mov    rcx,QWORD PTR [rdi+0xa0]
   140003cd8:	lea    r8,[rbp-0x20]
   140003cdc:	mov    edx,0x3ec
   140003ce1:	cmp    ebx,0x1
   140003ce4:	lea    eax,[rdx-0x2]
   140003ce7:	cmove  edx,eax
   140003cea:	xor    r9d,r9d
   140003ced:	call   QWORD PTR [rip+0x44f5]        # 0x1400081e8
   140003cf3:	test   eax,eax
   140003cf5:	jne    0x140003d2d
   140003cf7:	call   QWORD PTR [rip+0x4483]        # 0x140008180
   140003cfd:	mov    edi,eax
   140003cff:	mov    rax,QWORD PTR [rip+0x731a]        # 0x14000b020
   140003d06:	lea    rcx,[rip+0x7313]        # 0x14000b020
   140003d0d:	cmp    rax,rcx
   140003d10:	je     0x140003cb1
   140003d12:	test   BYTE PTR [rax+0x1c],0x8
   140003d16:	je     0x140003cb1
   140003d18:	cmp    BYTE PTR [rax+0x19],0x2
   140003d1c:	jb     0x140003cb1
   140003d1e:	call   0x140002118
   140003d23:	mov    edx,0x2d
   140003d28:	jmp    0x140003c93
   140003d2d:	mov    rdx,QWORD PTR [rbp-0x20]
   140003d31:	lea    rax,[rbp-0x10]
   140003d35:	mov    QWORD PTR [rsp+0x30],rax
   140003d3a:	xor    r9d,r9d
   140003d3d:	and    DWORD PTR [rsp+0x28],0x0
   140003d42:	lea    rax,[rbp+0x38]
   140003d46:	xor    r8d,r8d
   140003d49:	mov    QWORD PTR [rsp+0x20],rax
   140003d4e:	mov    ecx,0x2500
   140003d53:	call   QWORD PTR [rip+0x436f]        # 0x1400080c8
   140003d59:	mov    edi,eax
   140003d5b:	test   eax,eax
   140003d5d:	jne    0x140003da1
   140003d5f:	call   QWORD PTR [rip+0x441b]        # 0x140008180
   140003d65:	mov    edi,eax
   140003d67:	mov    rax,QWORD PTR [rip+0x72b2]        # 0x14000b020
   140003d6e:	lea    rcx,[rip+0x72ab]        # 0x14000b020
   140003d75:	cmp    rax,rcx
   140003d78:	je     0x140003cb1
   140003d7e:	test   BYTE PTR [rax+0x1c],0x8
   140003d82:	je     0x140003cb1
   140003d88:	cmp    BYTE PTR [rax+0x19],0x2
   140003d8c:	jb     0x140003cb1
   140003d92:	call   0x140002118
   140003d97:	mov    edx,0x2e
   140003d9c:	jmp    0x140003c93
   140003da1:	lea    rdx,[rbp+0x40]
   140003da5:	call   0x140003e5c
   140003daa:	mov    r8,QWORD PTR [rbp-0x18]
   140003dae:	lea    rax,[rbp+0x30]
   140003db2:	lea    ecx,[rdi+rdi*1]
   140003db5:	xor    ebx,ebx
   140003db7:	mov    BYTE PTR [rsp+0x48],bl
   140003dbb:	lea    r9d,[r14+r14*1]
   140003dbf:	mov    QWORD PTR [rsp+0x40],rax
   140003dc4:	or     edx,0xffffffff
   140003dc7:	mov    eax,DWORD PTR [rbp+0x40]
   140003dca:	mov    DWORD PTR [rsp+0x38],eax
   140003dce:	mov    rax,QWORD PTR [rbp+0x38]
   140003dd2:	mov    DWORD PTR [rsp+0x30],0x4
   140003dda:	mov    DWORD PTR [rsp+0x28],ecx
   140003dde:	xor    ecx,ecx
   140003de0:	mov    QWORD PTR [rsp+0x20],rax
   140003de5:	call   QWORD PTR [rip+0x4455]        # 0x140008240
   140003deb:	test   al,al
   140003ded:	jne    0x140003e2f
   140003def:	call   QWORD PTR [rip+0x438b]        # 0x140008180
   140003df5:	mov    edi,eax
   140003df7:	mov    rax,QWORD PTR [rip+0x7222]        # 0x14000b020
   140003dfe:	lea    rcx,[rip+0x721b]        # 0x14000b020
   140003e05:	cmp    rax,rcx
   140003e08:	je     0x140003cb1
   140003e0e:	test   BYTE PTR [rax+0x1c],0x8
   140003e12:	je     0x140003cb1
   140003e18:	cmp    BYTE PTR [rax+0x19],0x2
   140003e1c:	jb     0x140003cb1
   140003e22:	call   0x140002118
   140003e27:	lea    edx,[rbx+0x2f]
   140003e2a:	jmp    0x140003c93
   140003e2f:	xor    ecx,ecx
   140003e31:	cmp    DWORD PTR [rbp+0x30],0x6
   140003e35:	setne  cl
   140003e38:	mov    DWORD PTR [rsi],ecx
   140003e3a:	mov    rcx,QWORD PTR [rbp+0x38]
   140003e3e:	test   rcx,rcx
   140003e41:	je     0x140003e49
   140003e43:	call   QWORD PTR [rip+0x4287]        # 0x1400080d0
   140003e49:	mov    eax,ebx
   140003e4b:	add    rsp,0x70
   140003e4f:	pop    r14
   140003e51:	pop    rdi
   140003e52:	pop    rsi
   140003e53:	pop    rbx
   140003e54:	pop    rbp
   140003e55:	ret    
   140003e56:	int3   
   140003e57:	int3   
   140003e58:	int3   
   140003e59:	int3   
   140003e5a:	int3   
   140003e5b:	int3   
   140003e5c:	mov    r11,rsp
   140003e5f:	mov    QWORD PTR [r11+0x10],rbx
   140003e63:	mov    QWORD PTR [r11+0x20],rsi
   140003e67:	mov    QWORD PTR [r11+0x8],rcx
   140003e6b:	push   rdi
   140003e6c:	sub    rsp,0x40
   140003e70:	lea    rax,[r11+0x18]
   140003e74:	mov    DWORD PTR [rsp+0x50],0x1e
   140003e7c:	mov    QWORD PTR [r11-0x18],rax
   140003e80:	lea    r8,[rip+0x4e09]        # 0x140008c90
   140003e87:	xor    ebx,ebx
   140003e89:	mov    DWORD PTR [rsp+0x60],0x4
   140003e91:	lea    rax,[r11+0x8]
   140003e95:	mov    rsi,rdx
   140003e98:	mov    QWORD PTR [r11-0x20],rax
   140003e9c:	lea    rdx,[rip+0x50bd]        # 0x140008f60
   140003ea3:	and    QWORD PTR [r11-0x28],rbx
   140003ea7:	mov    rcx,0xffffffff80000002
   140003eae:	lea    r9d,[rbx+0x10]
   140003eb2:	call   QWORD PTR [rip+0x4190]        # 0x140008048
   140003eb8:	mov    edi,eax
   140003eba:	cmp    eax,0x2
   140003ebd:	jne    0x140003f15
   140003ebf:	mov    rcx,QWORD PTR [rip+0x715a]        # 0x14000b020
   140003ec6:	lea    rax,[rip+0x7153]        # 0x14000b020
   140003ecd:	cmp    rcx,rax
   140003ed0:	je     0x140003fdf
   140003ed6:	test   BYTE PTR [rcx+0x1c],0x8
   140003eda:	je     0x140003fdf
   140003ee0:	cmp    BYTE PTR [rcx+0x19],dil
   140003ee4:	jb     0x140003fdf
   140003eea:	call   0x140002118
   140003eef:	mov    rcx,QWORD PTR [rip+0x712a]        # 0x14000b020
   140003ef6:	lea    edx,[rbx+0x30]
   140003ef9:	and    DWORD PTR [rsp+0x20],ebx
   140003efd:	lea    r8,[rip+0x50fc]        # 0x140009000
   140003f04:	mov    r9d,eax
   140003f07:	mov    rcx,QWORD PTR [rcx+0x10]
   140003f0b:	call   0x1400010a8
   140003f10:	jmp    0x140003fdf
   140003f15:	test   eax,eax
   140003f17:	je     0x140003f7e
   140003f19:	mov    rcx,QWORD PTR [rip+0x7100]        # 0x14000b020
   140003f20:	lea    rax,[rip+0x70f9]        # 0x14000b020
   140003f27:	cmp    rcx,rax
   140003f2a:	je     0x140003f6e
   140003f2c:	test   BYTE PTR [rcx+0x1c],0x8
   140003f30:	je     0x140003f6e
   140003f32:	cmp    BYTE PTR [rcx+0x19],0x2
   140003f36:	jb     0x140003f6e
   140003f38:	movzx  ebx,di
   140003f3b:	or     ebx,0x80070000
   140003f41:	test   edi,edi
   140003f43:	cmovle ebx,edi
   140003f46:	call   0x140002118
   140003f4b:	mov    rcx,QWORD PTR [rip+0x70ce]        # 0x14000b020
   140003f52:	lea    r8,[rip+0x50a7]        # 0x140009000
   140003f59:	mov    r9d,eax
   140003f5c:	mov    DWORD PTR [rsp+0x20],ebx
   140003f60:	mov    edx,0x31
   140003f65:	mov    rcx,QWORD PTR [rcx+0x10]
   140003f69:	call   0x1400010a8
   140003f6e:	movzx  ebx,di
   140003f71:	or     ebx,0x80070000
   140003f77:	test   edi,edi
   140003f79:	cmovle ebx,edi
   140003f7c:	jmp    0x140003fdb
   140003f7e:	mov    eax,DWORD PTR [rsp+0x50]
   140003f82:	dec    eax
   140003f84:	cmp    eax,0x270e
   140003f89:	jbe    0x140003fdf
   140003f8b:	mov    rcx,QWORD PTR [rip+0x708e]        # 0x14000b020
   140003f92:	lea    rax,[rip+0x7087]        # 0x14000b020
   140003f99:	cmp    rcx,rax
   140003f9c:	je     0x140003fd6
   140003f9e:	test   BYTE PTR [rcx+0x1c],0x8
   140003fa2:	je     0x140003fd6
   140003fa4:	cmp    BYTE PTR [rcx+0x19],0x2
   140003fa8:	jb     0x140003fd6
   140003faa:	call   0x140002118
   140003faf:	mov    rcx,QWORD PTR [rip+0x706a]        # 0x14000b020
   140003fb6:	lea    r8,[rip+0x5043]        # 0x140009000
   140003fbd:	mov    r9d,eax
   140003fc0:	mov    DWORD PTR [rsp+0x20],0x80070057
   140003fc8:	mov    edx,0x32
   140003fcd:	mov    rcx,QWORD PTR [rcx+0x10]
   140003fd1:	call   0x1400010a8
   140003fd6:	mov    ebx,0x80070057
   140003fdb:	test   ebx,ebx
   140003fdd:	js     0x140003fe5
   140003fdf:	mov    ecx,DWORD PTR [rsp+0x50]
   140003fe3:	mov    DWORD PTR [rsi],ecx
   140003fe5:	mov    rsi,QWORD PTR [rsp+0x68]
   140003fea:	mov    eax,ebx
   140003fec:	mov    rbx,QWORD PTR [rsp+0x58]
   140003ff1:	add    rsp,0x40
   140003ff5:	pop    rdi
   140003ff6:	ret    
   140003ff7:	int3   
   140003ff8:	int3   
   140003ff9:	int3   
   140003ffa:	int3   
   140003ffb:	int3   
   140003ffc:	int3   
   140003ffd:	int3   
   140003ffe:	int3   
   140003fff:	int3   
   140004000:	mov    r11,rsp
   140004003:	mov    QWORD PTR [r11+0x10],rbx
   140004007:	mov    QWORD PTR [r11+0x8],rcx
   14000400b:	push   rsi
   14000400c:	push   rdi
   14000400d:	push   r14
   14000400f:	sub    rsp,0x40
   140004013:	xor    ebx,ebx
   140004015:	mov    DWORD PTR [rsp+0x78],0x4
   14000401d:	and    DWORD PTR [rsp+0x60],ebx
   140004021:	lea    rcx,[r11+0x20]
   140004025:	mov    QWORD PTR [r11-0x28],rcx
   140004029:	mov    rax,rdx
   14000402c:	lea    rcx,[r11+0x8]
   140004030:	mov    r14,r8
   140004033:	mov    QWORD PTR [r11-0x30],rcx
   140004037:	lea    r9d,[rbx+0x10]
   14000403b:	and    QWORD PTR [r11-0x38],rbx
   14000403f:	lea    r8,[rip+0x4c6a]        # 0x140008cb0
   140004046:	mov    rcx,rax
   140004049:	lea    rdx,[rip+0x4f10]        # 0x140008f60
   140004050:	lea    esi,[rbx+0x5]
   140004053:	call   QWORD PTR [rip+0x3fef]        # 0x140008048
   140004059:	mov    edi,eax
   14000405b:	cmp    eax,0x2
   14000405e:	jne    0x1400040b6
   140004060:	mov    rcx,QWORD PTR [rip+0x6fb9]        # 0x14000b020
   140004067:	lea    rax,[rip+0x6fb2]        # 0x14000b020
   14000406e:	cmp    rcx,rax
   140004071:	je     0x140004189
   140004077:	test   BYTE PTR [rcx+0x1c],0x8
   14000407b:	je     0x140004189
   140004081:	cmp    BYTE PTR [rcx+0x19],dil
   140004085:	jb     0x140004189
   14000408b:	call   0x140002118
   140004090:	mov    rcx,QWORD PTR [rip+0x6f89]        # 0x14000b020
   140004097:	lea    edx,[rbx+0x33]
   14000409a:	and    DWORD PTR [rsp+0x20],ebx
   14000409e:	lea    r8,[rip+0x4f5b]        # 0x140009000
   1400040a5:	mov    r9d,eax
   1400040a8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400040ac:	call   0x1400010a8
   1400040b1:	jmp    0x140004189
   1400040b6:	test   eax,eax
   1400040b8:	je     0x14000411f
   1400040ba:	mov    rcx,QWORD PTR [rip+0x6f5f]        # 0x14000b020
   1400040c1:	lea    rax,[rip+0x6f58]        # 0x14000b020
   1400040c8:	cmp    rcx,rax
   1400040cb:	je     0x14000410f
   1400040cd:	test   BYTE PTR [rcx+0x1c],0x8
   1400040d1:	je     0x14000410f
   1400040d3:	cmp    BYTE PTR [rcx+0x19],0x2
   1400040d7:	jb     0x14000410f
   1400040d9:	movzx  ebx,di
   1400040dc:	or     ebx,0x80070000
   1400040e2:	test   edi,edi
   1400040e4:	cmovle ebx,edi
   1400040e7:	call   0x140002118
   1400040ec:	mov    rcx,QWORD PTR [rip+0x6f2d]        # 0x14000b020
   1400040f3:	lea    r8,[rip+0x4f06]        # 0x140009000
   1400040fa:	mov    r9d,eax
   1400040fd:	mov    DWORD PTR [rsp+0x20],ebx
   140004101:	mov    edx,0x34
   140004106:	mov    rcx,QWORD PTR [rcx+0x10]
   14000410a:	call   0x1400010a8
   14000410f:	movzx  ebx,di
   140004112:	or     ebx,0x80070000
   140004118:	test   edi,edi
   14000411a:	cmovle ebx,edi
   14000411d:	jmp    0x140004185
   14000411f:	cmp    DWORD PTR [rsp+0x60],esi
   140004123:	jb     0x140004177
   140004125:	mov    rcx,QWORD PTR [rip+0x6ef4]        # 0x14000b020
   14000412c:	lea    rax,[rip+0x6eed]        # 0x14000b020
   140004133:	cmp    rcx,rax
   140004136:	je     0x140004170
   140004138:	test   BYTE PTR [rcx+0x1c],0x8
   14000413c:	je     0x140004170
   14000413e:	cmp    BYTE PTR [rcx+0x19],0x2
   140004142:	jb     0x140004170
   140004144:	call   0x140002118
   140004149:	mov    rcx,QWORD PTR [rip+0x6ed0]        # 0x14000b020
   140004150:	lea    r8,[rip+0x4ea9]        # 0x140009000
   140004157:	mov    r9d,eax
   14000415a:	mov    DWORD PTR [rsp+0x20],0x8000ffff
   140004162:	mov    edx,0x35
   140004167:	mov    rcx,QWORD PTR [rcx+0x10]
   14000416b:	call   0x1400010a8
   140004170:	mov    ebx,0x8000ffff
   140004175:	jmp    0x14000418c
   140004177:	mov    ecx,DWORD PTR [rsp+0x60]
   14000417b:	lea    rax,[rip+0x4d1e]        # 0x140008ea0
   140004182:	mov    esi,DWORD PTR [rax+rcx*4]
   140004185:	test   ebx,ebx
   140004187:	js     0x14000418c
   140004189:	mov    DWORD PTR [r14],esi
   14000418c:	mov    eax,ebx
   14000418e:	mov    rbx,QWORD PTR [rsp+0x68]
   140004193:	add    rsp,0x40
   140004197:	pop    r14
   140004199:	pop    rdi
   14000419a:	pop    rsi
   14000419b:	ret    
   14000419c:	int3   
   14000419d:	int3   
   14000419e:	int3   
   14000419f:	int3   
   1400041a0:	int3   
   1400041a1:	int3   
   1400041a2:	int3   
   1400041a3:	int3   
   1400041a4:	mov    rax,rsp
   1400041a7:	mov    QWORD PTR [rax+0x10],rbx
   1400041ab:	mov    QWORD PTR [rax+0x18],rbp
   1400041af:	mov    QWORD PTR [rax+0x20],rsi
   1400041b3:	mov    QWORD PTR [rax+0x8],rcx
   1400041b7:	push   rdi
   1400041b8:	push   r12
   1400041ba:	push   r13
   1400041bc:	push   r14
   1400041be:	push   r15
   1400041c0:	sub    rsp,0x30
   1400041c4:	movsxd r15,r8d
   1400041c7:	mov    ebp,0x5
   1400041cc:	movsxd r12,edx
   1400041cf:	lea    r8,[rax+0x8]
   1400041d3:	mov    rdx,0xffffffff80000002
   1400041da:	mov    DWORD PTR [rax+0x8],ebp
   1400041dd:	mov    r13,r9
   1400041e0:	xor    r14d,r14d
   1400041e3:	call   0x140004000
   1400041e8:	mov    ebx,eax
   1400041ea:	test   eax,eax
   1400041ec:	jns    0x140004226
   1400041ee:	mov    rax,QWORD PTR [rip+0x6e2b]        # 0x14000b020
   1400041f5:	lea    rdi,[rip+0x6e24]        # 0x14000b020
   1400041fc:	cmp    rax,rdi
   1400041ff:	je     0x140004301
   140004205:	test   BYTE PTR [rax+0x1c],0x8
   140004209:	je     0x140004301
   14000420f:	cmp    BYTE PTR [rax+0x19],0x2
   140004213:	jb     0x140004301
   140004219:	call   0x140002118
   14000421e:	lea    edx,[rbp+0x31]
   140004221:	jmp    0x1400042c1
   140004226:	mov    esi,DWORD PTR [rsp+0x60]
   14000422a:	lea    rdi,[rip+0x6def]        # 0x14000b020
   140004231:	cmp    esi,ebp
   140004233:	je     0x140004281
   140004235:	mov    rax,QWORD PTR [rip+0x6de4]        # 0x14000b020
   14000423c:	cmp    rax,rdi
   14000423f:	je     0x14000427d
   140004241:	test   BYTE PTR [rax+0x1c],0x8
   140004245:	je     0x14000427d
   140004247:	cmp    BYTE PTR [rax+0x19],0x2
   14000424b:	jb     0x14000427d
   14000424d:	call   0x140002118
   140004252:	mov    rcx,QWORD PTR [rip+0x6dc7]        # 0x14000b020
   140004259:	lea    r8,[rip+0x4da0]        # 0x140009000
   140004260:	and    DWORD PTR [rsp+0x20],r14d
   140004265:	mov    r9d,eax
   140004268:	mov    edx,0x37
   14000426d:	mov    rcx,QWORD PTR [rcx+0x10]
   140004271:	call   0x1400010a8
   140004276:	mov    rax,QWORD PTR [rip+0x6da3]        # 0x14000b020
   14000427d:	xor    ebx,ebx
   14000427f:	jmp    0x1400042ff
   140004281:	lea    r8,[rsp+0x60]
   140004286:	mov    rdx,0xffffffff80000001
   14000428d:	call   0x140004000
   140004292:	mov    ebx,eax
   140004294:	test   eax,eax
   140004296:	jns    0x1400042f4
   140004298:	mov    rax,QWORD PTR [rip+0x6d81]        # 0x14000b020
   14000429f:	lea    rdi,[rip+0x6d7a]        # 0x14000b020
   1400042a6:	cmp    rax,rdi
   1400042a9:	je     0x140004301
   1400042ab:	test   BYTE PTR [rax+0x1c],0x8
   1400042af:	je     0x140004301
   1400042b1:	cmp    BYTE PTR [rax+0x19],0x2
   1400042b5:	jb     0x140004301
   1400042b7:	call   0x140002118
   1400042bc:	mov    edx,0x38
   1400042c1:	mov    rcx,QWORD PTR [rip+0x6d58]        # 0x14000b020
   1400042c8:	lea    r8,[rip+0x4d31]        # 0x140009000
   1400042cf:	mov    r9d,eax
   1400042d2:	mov    DWORD PTR [rsp+0x28],ebx
   1400042d6:	lea    rax,[rip+0x49e3]        # 0x140008cc0
   1400042dd:	mov    QWORD PTR [rsp+0x20],rax
   1400042e2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400042e6:	call   0x1400010f0
   1400042eb:	mov    rax,QWORD PTR [rip+0x6d2e]        # 0x14000b020
   1400042f2:	jmp    0x140004301
   1400042f4:	mov    esi,DWORD PTR [rsp+0x60]
   1400042f8:	mov    rax,QWORD PTR [rip+0x6d21]        # 0x14000b020
   1400042ff:	mov    ebp,esi
   140004301:	test   ebx,ebx
   140004303:	jns    0x14000435b
   140004305:	cmp    rax,rdi
   140004308:	je     0x140004400
   14000430e:	test   BYTE PTR [rax+0x1c],0x8
   140004312:	je     0x140004400
   140004318:	cmp    BYTE PTR [rax+0x19],0x2
   14000431c:	jb     0x140004400
   140004322:	call   0x140002118
   140004327:	mov    rcx,QWORD PTR [rip+0x6cf2]        # 0x14000b020
   14000432e:	lea    r8,[rip+0x4ccb]        # 0x140009000
   140004335:	mov    r9d,eax
   140004338:	mov    DWORD PTR [rsp+0x28],ebx
   14000433c:	lea    rax,[rip+0x49a5]        # 0x140008ce8
   140004343:	mov    edx,0x39
   140004348:	mov    QWORD PTR [rsp+0x20],rax
   14000434d:	mov    rcx,QWORD PTR [rcx+0x10]
   140004351:	call   0x1400010f0
   140004356:	jmp    0x140004400
   14000435b:	cmp    ebp,0x6
   14000435e:	jl     0x1400043a4
   140004360:	cmp    rax,rdi
   140004363:	je     0x14000439d
   140004365:	test   BYTE PTR [rax+0x1c],0x8
   140004369:	je     0x14000439d
   14000436b:	cmp    BYTE PTR [rax+0x19],0x2
   14000436f:	jb     0x14000439d
   140004371:	call   0x140002118
   140004376:	mov    edx,0x3a
   14000437b:	mov    rcx,QWORD PTR [rip+0x6c9e]        # 0x14000b020
   140004382:	lea    r8,[rip+0x4c77]        # 0x140009000
   140004389:	mov    r9d,eax
   14000438c:	mov    DWORD PTR [rsp+0x20],0x8000ffff
   140004394:	mov    rcx,QWORD PTR [rcx+0x10]
   140004398:	call   0x1400010a8
   14000439d:	mov    ebx,0x8000ffff
   1400043a2:	jmp    0x140004408
   1400043a4:	cmp    r12d,0x2
   1400043a8:	jl     0x1400043c7
   1400043aa:	cmp    rax,rdi
   1400043ad:	je     0x14000439d
   1400043af:	test   BYTE PTR [rax+0x1c],0x8
   1400043b3:	je     0x14000439d
   1400043b5:	cmp    BYTE PTR [rax+0x19],0x2
   1400043b9:	jb     0x14000439d
   1400043bb:	call   0x140002118
   1400043c0:	mov    edx,0x3b
   1400043c5:	jmp    0x14000437b
   1400043c7:	cmp    r15d,0x2
   1400043cb:	jl     0x1400043ea
   1400043cd:	cmp    rax,rdi
   1400043d0:	je     0x14000439d
   1400043d2:	test   BYTE PTR [rax+0x1c],0x8
   1400043d6:	je     0x14000439d
   1400043d8:	cmp    BYTE PTR [rax+0x19],0x2
   1400043dc:	jb     0x14000439d
   1400043de:	call   0x140002118
   1400043e3:	mov    edx,0x3c
   1400043e8:	jmp    0x14000437b
   1400043ea:	movsxd rdx,ebp
   1400043ed:	lea    rax,[rip+0x4a4c]        # 0x140008e40
   1400043f4:	lea    r8,[r12+rdx*2]
   1400043f8:	lea    rdx,[r15+r8*2]
   1400043fc:	mov    r14d,DWORD PTR [rax+rdx*4]
   140004400:	test   ebx,ebx
   140004402:	js     0x140004408
   140004404:	mov    DWORD PTR [r13+0x0],r14d
   140004408:	mov    rbp,QWORD PTR [rsp+0x70]
   14000440d:	mov    eax,ebx
   14000440f:	mov    rbx,QWORD PTR [rsp+0x68]
   140004414:	mov    rsi,QWORD PTR [rsp+0x78]
   140004419:	add    rsp,0x30
   14000441d:	pop    r15
   14000441f:	pop    r14
   140004421:	pop    r13
   140004423:	pop    r12
   140004425:	pop    rdi
   140004426:	ret    
   140004427:	int3   
   140004428:	int3   
   140004429:	int3   
   14000442a:	int3   
   14000442b:	int3   
   14000442c:	int3   
   14000442d:	int3   
   14000442e:	int3   
   14000442f:	int3   
   140004430:	mov    rax,rsp
   140004433:	mov    QWORD PTR [rax+0x10],rbx
   140004437:	mov    QWORD PTR [rax+0x18],rsi
   14000443b:	push   rdi
   14000443c:	sub    rsp,0x30
   140004440:	xor    ebx,ebx
   140004442:	mov    rdi,rcx
   140004445:	cmp    QWORD PTR [rcx+0xa8],rbx
   14000444c:	jne    0x140004598
   140004452:	and    DWORD PTR [rax+0x8],ebx
   140004455:	lea    r8,[rax+0x8]
   140004459:	xor    edx,edx
   14000445b:	lea    ecx,[rbx+0x2]
   14000445e:	call   QWORD PTR [rip+0x3d5c]        # 0x1400081c0
   140004464:	movzx  eax,al
   140004467:	test   eax,eax
   140004469:	jne    0x140004598
   14000446f:	call   QWORD PTR [rip+0x3d0b]        # 0x140008180
   140004475:	cmp    eax,0xea
   14000447a:	jne    0x14000451d
   140004480:	mov    eax,DWORD PTR [rsp+0x40]
   140004484:	test   eax,eax
   140004486:	je     0x14000451d
   14000448c:	mov    ecx,eax
   14000448e:	lea    eax,[rbx+0x2]
   140004491:	mul    rcx
   140004494:	lea    rcx,[rbx-0x1]
   140004498:	cmovo  rax,rcx
   14000449c:	mov    rcx,rax
   14000449f:	call   0x140006898
   1400044a4:	mov    QWORD PTR [rdi+0xa8],rax
   1400044ab:	test   rax,rax
   1400044ae:	jne    0x140004503
   1400044b0:	mov    rax,QWORD PTR [rip+0x6b69]        # 0x14000b020
   1400044b7:	lea    rcx,[rip+0x6b62]        # 0x14000b020
   1400044be:	cmp    rax,rcx
   1400044c1:	je     0x1400044f9
   1400044c3:	test   BYTE PTR [rax+0x1c],0x8
   1400044c7:	je     0x1400044f9
   1400044c9:	cmp    BYTE PTR [rax+0x19],0x2
   1400044cd:	jb     0x1400044f9
   1400044cf:	call   0x140002118
   1400044d4:	mov    rcx,QWORD PTR [rip+0x6b45]        # 0x14000b020
   1400044db:	lea    edx,[rbx+0x3d]
   1400044de:	mov    r9d,eax
   1400044e1:	mov    DWORD PTR [rsp+0x20],0x8007000e
   1400044e9:	lea    r8,[rip+0x4b10]        # 0x140009000
   1400044f0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400044f4:	call   0x1400010a8
   1400044f9:	mov    ebx,0x8007000e
   1400044fe:	jmp    0x140004584
   140004503:	lea    r8,[rsp+0x40]
   140004508:	mov    rdx,rax
   14000450b:	mov    ecx,0x2
   140004510:	call   QWORD PTR [rip+0x3caa]        # 0x1400081c0
   140004516:	movzx  eax,al
   140004519:	test   eax,eax
   14000451b:	jne    0x140004598
   14000451d:	call   QWORD PTR [rip+0x3c5d]        # 0x140008180
   140004523:	mov    esi,eax
   140004525:	mov    rdx,QWORD PTR [rip+0x6af4]        # 0x14000b020
   14000452c:	lea    rcx,[rip+0x6aed]        # 0x14000b020
   140004533:	cmp    rdx,rcx
   140004536:	je     0x14000456c
   140004538:	test   BYTE PTR [rdx+0x1c],0x8
   14000453c:	je     0x14000456c
   14000453e:	cmp    BYTE PTR [rdx+0x19],0x2
   140004542:	jb     0x14000456c
   140004544:	call   0x140002118
   140004549:	mov    rcx,QWORD PTR [rip+0x6ad0]        # 0x14000b020
   140004550:	lea    r8,[rip+0x4aa9]        # 0x140009000
   140004557:	mov    r9d,eax
   14000455a:	mov    DWORD PTR [rsp+0x20],esi
   14000455e:	mov    edx,0x3e
   140004563:	mov    rcx,QWORD PTR [rcx+0x10]
   140004567:	call   0x1400010a8
   14000456c:	movzx  ebx,si
   14000456f:	mov    eax,0x80004005
   140004574:	or     ebx,0x80070000
   14000457a:	test   esi,esi
   14000457c:	cmovle ebx,esi
   14000457f:	test   ebx,ebx
   140004581:	cmovns ebx,eax
   140004584:	mov    rcx,QWORD PTR [rdi+0xa8]
   14000458b:	call   0x1400068d8
   140004590:	and    QWORD PTR [rdi+0xa8],0x0
   140004598:	mov    rsi,QWORD PTR [rsp+0x50]
   14000459d:	mov    eax,ebx
   14000459f:	mov    rbx,QWORD PTR [rsp+0x48]
   1400045a4:	add    rsp,0x30
   1400045a8:	pop    rdi
   1400045a9:	ret    
   1400045aa:	int3   
   1400045ab:	int3   
   1400045ac:	int3   
   1400045ad:	int3   
   1400045ae:	int3   
   1400045af:	int3   
   1400045b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400045b5:	mov    QWORD PTR [rsp+0x20],rsi
   1400045ba:	mov    QWORD PTR [rsp+0x8],rcx
   1400045bf:	push   rbp
   1400045c0:	push   rdi
   1400045c1:	push   r14
   1400045c3:	mov    rbp,rsp
   1400045c6:	sub    rsp,0x40
   1400045ca:	mov    rax,QWORD PTR [rdx]
   1400045cd:	xor    r14d,r14d
   1400045d0:	mov    rsi,r9
   1400045d3:	mov    QWORD PTR [rbp+0x20],r14
   1400045d7:	mov    rdi,rdx
   1400045da:	mov    QWORD PTR [rbp-0x10],r14
   1400045de:	mov    QWORD PTR [rbp+0x28],r14
   1400045e2:	mov    rbx,QWORD PTR [rax+0x70]
   1400045e6:	mov    rcx,rbx
   1400045e9:	call   QWORD PTR [rip+0x3de1]        # 0x1400083d0
   1400045ef:	lea    rdx,[rbp-0x10]
   1400045f3:	mov    rcx,rdi
   1400045f6:	call   rbx
   1400045f8:	mov    edi,eax
   1400045fa:	test   eax,eax
   1400045fc:	jns    0x140004641
   1400045fe:	mov    rcx,QWORD PTR [rip+0x6a1b]        # 0x14000b020
   140004605:	lea    rax,[rip+0x6a14]        # 0x14000b020
   14000460c:	cmp    rcx,rax
   14000460f:	je     0x1400047c5
   140004615:	test   BYTE PTR [rcx+0x1c],0x8
   140004619:	je     0x1400047c5
   14000461f:	cmp    BYTE PTR [rcx+0x19],0x2
   140004623:	jb     0x1400047c5
   140004629:	call   0x140002118
   14000462e:	mov    r9d,eax
   140004631:	lea    edx,[r14+0x3f]
   140004635:	lea    rax,[rip+0x46cc]        # 0x140008d08
   14000463c:	jmp    0x1400047a5
   140004641:	mov    rbx,QWORD PTR [rbp-0x10]
   140004645:	mov    rax,QWORD PTR [rbx]
   140004648:	mov    rdi,QWORD PTR [rax]
   14000464b:	mov    rcx,rdi
   14000464e:	call   QWORD PTR [rip+0x3d7c]        # 0x1400083d0
   140004654:	lea    r8,[rbp+0x28]
   140004658:	mov    rcx,rbx
   14000465b:	lea    rdx,[rip+0x47ce]        # 0x140008e30
   140004662:	call   rdi
   140004664:	mov    edi,eax
   140004666:	test   eax,eax
   140004668:	jns    0x1400046ae
   14000466a:	mov    rcx,QWORD PTR [rip+0x69af]        # 0x14000b020
   140004671:	lea    rax,[rip+0x69a8]        # 0x14000b020
   140004678:	cmp    rcx,rax
   14000467b:	je     0x1400047c5
   140004681:	test   BYTE PTR [rcx+0x1c],0x8
   140004685:	je     0x1400047c5
   14000468b:	cmp    BYTE PTR [rcx+0x19],0x2
   14000468f:	jb     0x1400047c5
   140004695:	call   0x140002118
   14000469a:	mov    r9d,eax
   14000469d:	mov    edx,0x40
   1400046a2:	lea    rax,[rip+0x467f]        # 0x140008d28
   1400046a9:	jmp    0x1400047a5
   1400046ae:	mov    rbx,QWORD PTR [rbp+0x28]
   1400046b2:	mov    rax,QWORD PTR [rbx]
   1400046b5:	mov    rdi,QWORD PTR [rax+0x58]
   1400046b9:	mov    rcx,rdi
   1400046bc:	call   QWORD PTR [rip+0x3d0e]        # 0x1400083d0
   1400046c2:	lea    rdx,[rbp+0x20]
   1400046c6:	mov    rcx,rbx
   1400046c9:	call   rdi
   1400046cb:	mov    edi,eax
   1400046cd:	test   eax,eax
   1400046cf:	jns    0x140004715
   1400046d1:	mov    rcx,QWORD PTR [rip+0x6948]        # 0x14000b020
   1400046d8:	lea    rax,[rip+0x6941]        # 0x14000b020
   1400046df:	cmp    rcx,rax
   1400046e2:	je     0x1400047c5
   1400046e8:	test   BYTE PTR [rcx+0x1c],0x8
   1400046ec:	je     0x1400047c5
   1400046f2:	cmp    BYTE PTR [rcx+0x19],0x2
   1400046f6:	jb     0x1400047c5
   1400046fc:	call   0x140002118
   140004701:	mov    r9d,eax
   140004704:	mov    edx,0x41
   140004709:	lea    rax,[rip+0x4630]        # 0x140008d40
   140004710:	jmp    0x1400047a5
   140004715:	mov    rdx,QWORD PTR [rbp+0x20]
   140004719:	mov    r9,rsi
   14000471c:	call   0x140004830
   140004721:	mov    edi,eax
   140004723:	test   eax,eax
   140004725:	jns    0x1400047c5
   14000472b:	mov    rdx,QWORD PTR [rbp+0x20]
   14000472f:	mov    ecx,0x401
   140004734:	sub    rdx,rsi
   140004737:	mov    edi,r14d
   14000473a:	lea    rax,[rcx+0x7ffffbfd]
   140004741:	test   rax,rax
   140004744:	je     0x14000475c
   140004746:	movzx  eax,WORD PTR [rdx+rsi*1]
   14000474a:	test   ax,ax
   14000474d:	je     0x14000475c
   14000474f:	mov    WORD PTR [rsi],ax
   140004752:	add    rsi,0x2
   140004756:	sub    rcx,0x1
   14000475a:	jne    0x14000473a
   14000475c:	test   rcx,rcx
   14000475f:	jne    0x14000476a
   140004761:	sub    rsi,0x2
   140004765:	mov    edi,0x8007007a
   14000476a:	mov    WORD PTR [rsi],r14w
   14000476e:	test   edi,edi
   140004770:	jns    0x1400047c5
   140004772:	mov    rcx,QWORD PTR [rip+0x68a7]        # 0x14000b020
   140004779:	lea    rax,[rip+0x68a0]        # 0x14000b020
   140004780:	cmp    rcx,rax
   140004783:	je     0x1400047c5
   140004785:	test   BYTE PTR [rcx+0x1c],0x8
   140004789:	je     0x1400047c5
   14000478b:	cmp    BYTE PTR [rcx+0x19],0x2
   14000478f:	jb     0x1400047c5
   140004791:	call   0x140002118
   140004796:	mov    r9d,eax
   140004799:	mov    edx,0x42
   14000479e:	lea    rax,[rip+0x45b3]        # 0x140008d58
   1400047a5:	mov    rcx,QWORD PTR [rip+0x6874]        # 0x14000b020
   1400047ac:	lea    r8,[rip+0x484d]        # 0x140009000
   1400047b3:	mov    DWORD PTR [rsp+0x28],edi
   1400047b7:	mov    QWORD PTR [rsp+0x20],rax
   1400047bc:	mov    rcx,QWORD PTR [rcx+0x10]
   1400047c0:	call   0x1400010f0
   1400047c5:	mov    rcx,QWORD PTR [rbp+0x20]
   1400047c9:	call   QWORD PTR [rip+0x39e1]        # 0x1400081b0
   1400047cf:	mov    rsi,QWORD PTR [rbp+0x28]
   1400047d3:	test   rsi,rsi
   1400047d6:	je     0x1400047f1
   1400047d8:	mov    QWORD PTR [rbp+0x28],r14
   1400047dc:	mov    rax,QWORD PTR [rsi]
   1400047df:	mov    rbx,QWORD PTR [rax+0x10]
   1400047e3:	mov    rcx,rbx
   1400047e6:	call   QWORD PTR [rip+0x3be4]        # 0x1400083d0
   1400047ec:	mov    rcx,rsi
   1400047ef:	call   rbx
   1400047f1:	mov    rsi,QWORD PTR [rbp-0x10]
   1400047f5:	test   rsi,rsi
   1400047f8:	je     0x140004813
   1400047fa:	mov    QWORD PTR [rbp-0x10],r14
   1400047fe:	mov    rax,QWORD PTR [rsi]
   140004801:	mov    rbx,QWORD PTR [rax+0x10]
   140004805:	mov    rcx,rbx
   140004808:	call   QWORD PTR [rip+0x3bc2]        # 0x1400083d0
   14000480e:	mov    rcx,rsi
   140004811:	call   rbx
   140004813:	mov    rbx,QWORD PTR [rsp+0x70]
   140004818:	mov    eax,edi
   14000481a:	mov    rsi,QWORD PTR [rsp+0x78]
   14000481f:	add    rsp,0x40
   140004823:	pop    r14
   140004825:	pop    rdi
   140004826:	pop    rbp
   140004827:	ret    
   140004828:	int3   
   140004829:	int3   
   14000482a:	int3   
   14000482b:	int3   
   14000482c:	int3   
   14000482d:	int3   
   14000482e:	int3   
   14000482f:	int3   
   140004830:	mov    rax,rsp
   140004833:	mov    QWORD PTR [rax+0x10],rbx
   140004837:	mov    QWORD PTR [rax+0x18],rbp
   14000483b:	mov    QWORD PTR [rax+0x20],rsi
   14000483f:	mov    QWORD PTR [rax+0x8],rcx
   140004843:	push   rdi
   140004844:	sub    rsp,0x70
   140004848:	xor    edi,edi
   14000484a:	lea    rcx,[rax-0x34]
   14000484e:	and    DWORD PTR [rax-0x38],edi
   140004851:	mov    rbx,rdx
   140004854:	xor    edx,edx
   140004856:	mov    rbp,r9
   140004859:	lea    r8d,[rdi+0x2c]
   14000485d:	call   0x140007382
   140004862:	and    QWORD PTR [rsp+0x80],rdi
   14000486a:	lea    r9,[rsp+0x80]
   140004872:	lea    r8,[rsp+0x40]
   140004877:	xor    edx,edx
   140004879:	mov    rcx,rbx
   14000487c:	call   QWORD PTR [rip+0x39de]        # 0x140008260
   140004882:	mov    esi,eax
   140004884:	test   eax,eax
   140004886:	je     0x1400048cd
   140004888:	mov    rax,QWORD PTR [rip+0x6791]        # 0x14000b020
   14000488f:	lea    rcx,[rip+0x678a]        # 0x14000b020
   140004896:	cmp    rax,rcx
   140004899:	je     0x140004960
   14000489f:	test   BYTE PTR [rax+0x1c],0x8
   1400048a3:	je     0x140004960
   1400048a9:	lea    ebx,[rdi+0x2]
   1400048ac:	cmp    BYTE PTR [rax+0x19],bl
   1400048af:	jb     0x140004960
   1400048b5:	movzx  ebx,si
   1400048b8:	or     ebx,0x80070000
   1400048be:	test   esi,esi
   1400048c0:	cmovle ebx,esi
   1400048c3:	call   0x140002118
   1400048c8:	lea    edx,[rdi+0x43]
   1400048cb:	jmp    0x140004942
   1400048cd:	mov    rax,QWORD PTR [rsp+0x80]
   1400048d5:	mov    ebx,0x2
   1400048da:	mov    r9d,0x401
   1400048e0:	mov    r8,rbp
   1400048e3:	mov    rcx,QWORD PTR [rax+0x20]
   1400048e7:	lea    edx,[rbx+0x1a]
   1400048ea:	lea    eax,[rbx+0xe]
   1400048ed:	cmp    bx,WORD PTR [rcx]
   1400048f0:	cmove  edx,eax
   1400048f3:	and    DWORD PTR [rsp+0x30],edi
   1400048f7:	and    DWORD PTR [rsp+0x28],edi
   1400048fb:	and    QWORD PTR [rsp+0x20],rdi
   140004900:	call   QWORD PTR [rip+0x3952]        # 0x140008258
   140004906:	mov    esi,eax
   140004908:	test   eax,eax
   14000490a:	je     0x14000496e
   14000490c:	mov    rax,QWORD PTR [rip+0x670d]        # 0x14000b020
   140004913:	lea    rcx,[rip+0x6706]        # 0x14000b020
   14000491a:	cmp    rax,rcx
   14000491d:	je     0x140004960
   14000491f:	test   BYTE PTR [rax+0x1c],0x8
   140004923:	je     0x140004960
   140004925:	cmp    BYTE PTR [rax+0x19],bl
   140004928:	jb     0x140004960
   14000492a:	movzx  ebx,si
   14000492d:	or     ebx,0x80070000
   140004933:	test   esi,esi
   140004935:	cmovle ebx,esi
   140004938:	call   0x140002118
   14000493d:	mov    edx,0x44
   140004942:	mov    rcx,QWORD PTR [rip+0x66d7]        # 0x14000b020
   140004949:	lea    r8,[rip+0x46b0]        # 0x140009000
   140004950:	mov    r9d,eax
   140004953:	mov    DWORD PTR [rsp+0x20],ebx
   140004957:	mov    rcx,QWORD PTR [rcx+0x10]
   14000495b:	call   0x1400010a8
   140004960:	movzx  edi,si
   140004963:	or     edi,0x80070000
   140004969:	test   esi,esi
   14000496b:	cmovle edi,esi
   14000496e:	mov    rcx,QWORD PTR [rsp+0x80]
   140004976:	test   rcx,rcx
   140004979:	je     0x140004981
   14000497b:	call   QWORD PTR [rip+0x38e7]        # 0x140008268
   140004981:	lea    r11,[rsp+0x70]
   140004986:	mov    eax,edi
   140004988:	mov    rbx,QWORD PTR [r11+0x18]
   14000498c:	mov    rbp,QWORD PTR [r11+0x20]
   140004990:	mov    rsi,QWORD PTR [r11+0x28]
   140004994:	mov    rsp,r11
   140004997:	pop    rdi
   140004998:	ret    
   140004999:	int3   
   14000499a:	int3   
   14000499b:	int3   
   14000499c:	int3   
   14000499d:	int3   
   14000499e:	int3   
   14000499f:	int3   
   1400049a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400049a5:	push   rbp
   1400049a6:	push   rsi
   1400049a7:	push   rdi
   1400049a8:	push   r14
   1400049aa:	push   r15
   1400049ac:	lea    rbp,[rsp-0x780]
   1400049b4:	sub    rsp,0x880
   1400049bb:	mov    rax,QWORD PTR [rip+0x6646]        # 0x14000b008
   1400049c2:	xor    rax,rsp
   1400049c5:	mov    QWORD PTR [rbp+0x770],rax
   1400049cc:	mov    rsi,rdx
   1400049cf:	mov    r14,rcx
   1400049d2:	xor    r15d,r15d
   1400049d5:	lea    rcx,[rsp+0x62]
   1400049da:	xor    edx,edx
   1400049dc:	mov    WORD PTR [rsp+0x60],r15w
   1400049e2:	mov    r8d,0x800
   1400049e8:	call   0x140007382
   1400049ed:	movups xmm0,XMMWORD PTR [rip+0x3aec]        # 0x1400084e0
   1400049f4:	mov    rdi,QWORD PTR [r14+0x20]
   1400049f8:	mov    QWORD PTR [rsp+0x30],r15
   1400049fd:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   140004a03:	mov    QWORD PTR [rsp+0x38],r15
   140004a08:	mov    rax,QWORD PTR [rdi]
   140004a0b:	mov    QWORD PTR [rsp+0x40],r15
   140004a10:	mov    rbx,QWORD PTR [rax+0x8]
   140004a14:	mov    rcx,rbx
   140004a17:	call   QWORD PTR [rip+0x39b3]        # 0x1400083d0
   140004a1d:	mov    rcx,rdi
   140004a20:	call   rbx
   140004a22:	test   rsi,rsi
   140004a25:	jne    0x140004a7a
   140004a27:	mov    rcx,QWORD PTR [rip+0x65f2]        # 0x14000b020
   140004a2e:	lea    rax,[rip+0x65eb]        # 0x14000b020
   140004a35:	cmp    rcx,rax
   140004a38:	je     0x140004a70
   140004a3a:	test   BYTE PTR [rcx+0x1c],0x8
   140004a3e:	je     0x140004a70
   140004a40:	cmp    BYTE PTR [rcx+0x19],0x2
   140004a44:	jb     0x140004a70
   140004a46:	call   0x140002118
   140004a4b:	mov    rcx,QWORD PTR [rip+0x65ce]        # 0x14000b020
   140004a52:	lea    edx,[rsi+0x45]
   140004a55:	mov    r9d,eax
   140004a58:	mov    DWORD PTR [rsp+0x20],0x80004003
   140004a60:	lea    r8,[rip+0x4599]        # 0x140009000
   140004a67:	mov    rcx,QWORD PTR [rcx+0x10]
   140004a6b:	call   0x1400010a8
   140004a70:	mov    edi,0x80004003
   140004a75:	jmp    0x140004d24
   140004a7a:	mov    rax,QWORD PTR [rsi]
   140004a7d:	mov    rbx,QWORD PTR [rax]
   140004a80:	mov    rcx,rbx
   140004a83:	call   QWORD PTR [rip+0x3947]        # 0x1400083d0
   140004a89:	lea    r8,[rsp+0x30]
   140004a8e:	mov    rcx,rsi
   140004a91:	lea    rdx,[rip+0x4388]        # 0x140008e20
   140004a98:	call   rbx
   140004a9a:	mov    edi,eax
   140004a9c:	test   eax,eax
   140004a9e:	jns    0x140004b04
   140004aa0:	mov    rcx,QWORD PTR [rip+0x6579]        # 0x14000b020
   140004aa7:	lea    rax,[rip+0x6572]        # 0x14000b020
   140004aae:	cmp    rcx,rax
   140004ab1:	je     0x140004d24
   140004ab7:	test   BYTE PTR [rcx+0x1c],0x8
   140004abb:	je     0x140004d24
   140004ac1:	cmp    BYTE PTR [rcx+0x19],0x2
   140004ac5:	jb     0x140004d24
   140004acb:	call   0x140002118
   140004ad0:	mov    r9d,eax
   140004ad3:	mov    edx,0x46
   140004ad8:	lea    rax,[rip+0x4249]        # 0x140008d28
   140004adf:	mov    rcx,QWORD PTR [rip+0x653a]        # 0x14000b020
   140004ae6:	lea    r8,[rip+0x4513]        # 0x140009000
   140004aed:	mov    DWORD PTR [rsp+0x28],edi
   140004af1:	mov    QWORD PTR [rsp+0x20],rax
   140004af6:	mov    rcx,QWORD PTR [rcx+0x10]
   140004afa:	call   0x1400010f0
   140004aff:	jmp    0x140004d24
   140004b04:	mov    eax,DWORD PTR [r14+0x44]
   140004b08:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b0d:	dec    eax
   140004b0f:	neg    eax
   140004b11:	sbb    edi,edi
   140004b13:	mov    rsi,QWORD PTR [rbx]
   140004b16:	mov    rcx,QWORD PTR [rsi+0x50]
   140004b1a:	call   QWORD PTR [rip+0x38b0]        # 0x1400083d0
   140004b20:	lea    edx,[rdi+0x3]
   140004b23:	mov    rcx,rbx
   140004b26:	call   QWORD PTR [rsi+0x50]
   140004b29:	mov    edi,eax
   140004b2b:	test   eax,eax
   140004b2d:	jns    0x140004b73
   140004b2f:	mov    rcx,QWORD PTR [rip+0x64ea]        # 0x14000b020
   140004b36:	lea    rax,[rip+0x64e3]        # 0x14000b020
   140004b3d:	cmp    rcx,rax
   140004b40:	je     0x140004d24
   140004b46:	test   BYTE PTR [rcx+0x1c],0x8
   140004b4a:	je     0x140004d24
   140004b50:	cmp    BYTE PTR [rcx+0x19],0x2
   140004b54:	jb     0x140004d24
   140004b5a:	call   0x140002118
   140004b5f:	mov    r9d,eax
   140004b62:	mov    edx,0x47
   140004b67:	lea    rax,[rip+0x4202]        # 0x140008d70
   140004b6e:	jmp    0x140004adf
   140004b73:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b78:	mov    rax,QWORD PTR [rbx]
   140004b7b:	mov    rdi,QWORD PTR [rax+0x58]
   140004b7f:	mov    rcx,rdi
   140004b82:	call   QWORD PTR [rip+0x3848]        # 0x1400083d0
   140004b88:	lea    rdx,[rsp+0x38]
   140004b8d:	mov    rcx,rbx
   140004b90:	call   rdi
   140004b92:	mov    edi,eax
   140004b94:	test   eax,eax
   140004b96:	jns    0x140004bdc
   140004b98:	mov    rcx,QWORD PTR [rip+0x6481]        # 0x14000b020
   140004b9f:	lea    rax,[rip+0x647a]        # 0x14000b020
   140004ba6:	cmp    rcx,rax
   140004ba9:	je     0x140004d24
   140004baf:	test   BYTE PTR [rcx+0x1c],0x8
   140004bb3:	je     0x140004d24
   140004bb9:	cmp    BYTE PTR [rcx+0x19],0x2
   140004bbd:	jb     0x140004d24
   140004bc3:	call   0x140002118
   140004bc8:	mov    r9d,eax
   140004bcb:	mov    edx,0x48
   140004bd0:	lea    rax,[rip+0x41b1]        # 0x140008d88
   140004bd7:	jmp    0x140004adf
   140004bdc:	mov    rdx,QWORD PTR [rsp+0x38]
   140004be1:	lea    rcx,[r14+0x60]
   140004be5:	lea    r8,[rsp+0x40]
   140004bea:	call   0x140001a64
   140004bef:	mov    edi,eax
   140004bf1:	test   eax,eax
   140004bf3:	jns    0x140004c39
   140004bf5:	mov    rcx,QWORD PTR [rip+0x6424]        # 0x14000b020
   140004bfc:	lea    rax,[rip+0x641d]        # 0x14000b020
   140004c03:	cmp    rcx,rax
   140004c06:	je     0x140004d24
   140004c0c:	test   BYTE PTR [rcx+0x1c],0x8
   140004c10:	je     0x140004d24
   140004c16:	cmp    BYTE PTR [rcx+0x19],0x2
   140004c1a:	jb     0x140004d24
   140004c20:	call   0x140002118
   140004c25:	mov    r9d,eax
   140004c28:	mov    edx,0x49
   140004c2d:	lea    rax,[rip+0x416c]        # 0x140008da0
   140004c34:	jmp    0x140004adf
   140004c39:	inc    DWORD PTR [r14+0x90]
   140004c40:	lea    rcx,[r14-0x8]
   140004c44:	call   0x140004430
   140004c49:	mov    rdx,QWORD PTR [rsp+0x30]
   140004c4e:	lea    r9,[rsp+0x60]
   140004c53:	call   0x1400045b0
   140004c58:	cmp    DWORD PTR [r14+0x44],0x1
   140004c5d:	lea    rcx,[rip+0x387c]        # 0x1400084e0
   140004c64:	mov    r8,QWORD PTR [rsp+0x40]
   140004c69:	lea    rax,[rip+0x3910]        # 0x140008580
   140004c70:	cmove  rax,rcx
   140004c74:	lea    r9,[rsp+0x60]
   140004c79:	lea    rcx,[rip+0x4234]        # 0x140008eb4
   140004c80:	mov    edi,r15d
   140004c83:	lea    rdx,[rsp+0x48]
   140004c88:	movups xmm0,XMMWORD PTR [rax]
   140004c8b:	mov    rax,QWORD PTR [r14+0xa0]
   140004c92:	test   rax,rax
   140004c95:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   140004c9b:	cmovne rcx,rax
   140004c9f:	mov    eax,DWORD PTR [r14+0xa8]
   140004ca6:	mov    DWORD PTR [rsp+0x28],eax
   140004caa:	mov    QWORD PTR [rsp+0x20],rcx
   140004caf:	lea    rcx,[rip+0x696a]        # 0x14000b620
   140004cb6:	call   0x14000522c
   140004cbb:	mov    esi,eax
   140004cbd:	test   eax,eax
   140004cbf:	je     0x140004d24
   140004cc1:	mov    rcx,QWORD PTR [rip+0x6358]        # 0x14000b020
   140004cc8:	lea    rax,[rip+0x6351]        # 0x14000b020
   140004ccf:	cmp    rcx,rax
   140004cd2:	je     0x140004d16
   140004cd4:	test   BYTE PTR [rcx+0x1c],0x8
   140004cd8:	je     0x140004d16
   140004cda:	cmp    BYTE PTR [rcx+0x19],0x2
   140004cde:	jb     0x140004d16
   140004ce0:	movzx  ebx,si
   140004ce3:	or     ebx,0x80070000
   140004ce9:	test   esi,esi
   140004ceb:	cmovle ebx,esi
   140004cee:	call   0x140002118
   140004cf3:	mov    rcx,QWORD PTR [rip+0x6326]        # 0x14000b020
   140004cfa:	lea    r8,[rip+0x42ff]        # 0x140009000
   140004d01:	mov    r9d,eax
   140004d04:	mov    DWORD PTR [rsp+0x20],ebx
   140004d08:	mov    edx,0x4a
   140004d0d:	mov    rcx,QWORD PTR [rcx+0x10]
   140004d11:	call   0x1400010a8
   140004d16:	movzx  edi,si
   140004d19:	or     edi,0x80070000
   140004d1f:	test   esi,esi
   140004d21:	cmovle edi,esi
   140004d24:	mov    rcx,QWORD PTR [rsp+0x40]
   140004d29:	call   QWORD PTR [rip+0x3481]        # 0x1400081b0
   140004d2f:	mov    rsi,QWORD PTR [rsp+0x38]
   140004d34:	test   rsi,rsi
   140004d37:	je     0x140004d53
   140004d39:	mov    QWORD PTR [rsp+0x38],r15
   140004d3e:	mov    rax,QWORD PTR [rsi]
   140004d41:	mov    rbx,QWORD PTR [rax+0x10]
   140004d45:	mov    rcx,rbx
   140004d48:	call   QWORD PTR [rip+0x3682]        # 0x1400083d0
   140004d4e:	mov    rcx,rsi
   140004d51:	call   rbx
   140004d53:	mov    rsi,QWORD PTR [rsp+0x30]
   140004d58:	test   rsi,rsi
   140004d5b:	je     0x140004d77
   140004d5d:	mov    QWORD PTR [rsp+0x30],r15
   140004d62:	mov    rax,QWORD PTR [rsi]
   140004d65:	mov    rbx,QWORD PTR [rax+0x10]
   140004d69:	mov    rcx,rbx
   140004d6c:	call   QWORD PTR [rip+0x365e]        # 0x1400083d0
   140004d72:	mov    rcx,rsi
   140004d75:	call   rbx
   140004d77:	mov    eax,edi
   140004d79:	mov    rcx,QWORD PTR [rbp+0x770]
   140004d80:	xor    rcx,rsp
   140004d83:	call   0x140006cd0
   140004d88:	mov    rbx,QWORD PTR [rsp+0x8c0]
   140004d90:	add    rsp,0x880
   140004d97:	pop    r15
   140004d99:	pop    r14
   140004d9b:	pop    rdi
   140004d9c:	pop    rsi
   140004d9d:	pop    rbp
   140004d9e:	ret    
   140004d9f:	int3   
   140004da0:	int3   
   140004da1:	int3   
   140004da2:	int3   
   140004da3:	int3   
   140004da4:	int3   
   140004da5:	int3   
   140004da6:	int3   
   140004da7:	int3   
   140004da8:	int3   
   140004da9:	int3   
   140004daa:	int3   
   140004dab:	int3   
   140004dac:	int3   
   140004dad:	int3   
   140004dae:	int3   
   140004daf:	int3   
   140004db0:	xor    eax,eax
   140004db2:	ret    
   140004db3:	int3   
   140004db4:	int3   
   140004db5:	int3   
   140004db6:	int3   
   140004db7:	int3   
   140004db8:	int3   
   140004db9:	int3   
   140004dba:	int3   
   140004dbb:	int3   
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	mov    QWORD PTR [rsp+0x18],rbx
   140004dc5:	push   rbp
   140004dc6:	push   rsi
   140004dc7:	push   rdi
   140004dc8:	push   r14
   140004dca:	push   r15
   140004dcc:	lea    rbp,[rsp-0x780]
   140004dd4:	sub    rsp,0x880
   140004ddb:	mov    rax,QWORD PTR [rip+0x6226]        # 0x14000b008
   140004de2:	xor    rax,rsp
   140004de5:	mov    QWORD PTR [rbp+0x770],rax
   140004dec:	mov    rdi,rdx
   140004def:	mov    r14,rcx
   140004df2:	xor    r15d,r15d
   140004df5:	lea    rcx,[rsp+0x62]
   140004dfa:	xor    edx,edx
   140004dfc:	mov    WORD PTR [rsp+0x60],r15w
   140004e02:	mov    r8d,0x800
   140004e08:	call   0x140007382
   140004e0d:	mov    QWORD PTR [rsp+0x30],r15
   140004e12:	mov    QWORD PTR [rsp+0x38],r15
   140004e17:	mov    QWORD PTR [rsp+0x40],r15
   140004e1c:	mov    QWORD PTR [rsp+0x48],r15
   140004e21:	movups xmm0,XMMWORD PTR [rip+0x36b8]        # 0x1400084e0
   140004e28:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140004e2e:	test   rdi,rdi
   140004e31:	jne    0x140004e86
   140004e33:	mov    rcx,QWORD PTR [rip+0x61e6]        # 0x14000b020
   140004e3a:	lea    rax,[rip+0x61df]        # 0x14000b020
   140004e41:	cmp    rcx,rax
   140004e44:	je     0x140004e7c
   140004e46:	test   BYTE PTR [rcx+0x1c],0x8
   140004e4a:	je     0x140004e7c
   140004e4c:	cmp    BYTE PTR [rcx+0x19],0x2
   140004e50:	jb     0x140004e7c
   140004e52:	call   0x140002118
   140004e57:	mov    rcx,QWORD PTR [rip+0x61c2]        # 0x14000b020
   140004e5e:	lea    edx,[rdi+0x4b]
   140004e61:	mov    r9d,eax
   140004e64:	mov    DWORD PTR [rsp+0x20],0x80004003
   140004e6c:	lea    r8,[rip+0x418d]        # 0x140009000
   140004e73:	mov    rcx,QWORD PTR [rcx+0x10]
   140004e77:	call   0x1400010a8
   140004e7c:	mov    esi,0x80004003
   140004e81:	jmp    0x14000516b
   140004e86:	mov    rax,QWORD PTR [rdi]
   140004e89:	mov    rbx,QWORD PTR [rax]
   140004e8c:	mov    rcx,rbx
   140004e8f:	call   QWORD PTR [rip+0x353b]        # 0x1400083d0
   140004e95:	lea    r8,[rsp+0x40]
   140004e9a:	mov    rcx,rdi
   140004e9d:	lea    rdx,[rip+0x3f6c]        # 0x140008e10
   140004ea4:	call   rbx
   140004ea6:	mov    esi,eax
   140004ea8:	test   eax,eax
   140004eaa:	jns    0x140004ef0
   140004eac:	mov    rcx,QWORD PTR [rip+0x616d]        # 0x14000b020
   140004eb3:	lea    rax,[rip+0x6166]        # 0x14000b020
   140004eba:	cmp    rcx,rax
   140004ebd:	je     0x14000516b
   140004ec3:	test   BYTE PTR [rcx+0x1c],0x8
   140004ec7:	je     0x14000516b
   140004ecd:	cmp    BYTE PTR [rcx+0x19],0x2
   140004ed1:	jb     0x14000516b
   140004ed7:	call   0x140002118
   140004edc:	mov    r9d,eax
   140004edf:	mov    edx,0x4c
   140004ee4:	lea    rax,[rip+0x3e3d]        # 0x140008d28
   140004eeb:	jmp    0x14000514b
   140004ef0:	mov    rbx,QWORD PTR [rsp+0x40]
   140004ef5:	mov    rax,QWORD PTR [rbx]
   140004ef8:	mov    rdi,QWORD PTR [rax+0x38]
   140004efc:	mov    rcx,rdi
   140004eff:	call   QWORD PTR [rip+0x34cb]        # 0x1400083d0
   140004f05:	lea    rdx,[rsp+0x30]
   140004f0a:	mov    rcx,rbx
   140004f0d:	call   rdi
   140004f0f:	mov    esi,eax
   140004f11:	test   eax,eax
   140004f13:	jns    0x140004f59
   140004f15:	mov    rcx,QWORD PTR [rip+0x6104]        # 0x14000b020
   140004f1c:	lea    rax,[rip+0x60fd]        # 0x14000b020
   140004f23:	cmp    rcx,rax
   140004f26:	je     0x14000516b
   140004f2c:	test   BYTE PTR [rcx+0x1c],0x8
   140004f30:	je     0x14000516b
   140004f36:	cmp    BYTE PTR [rcx+0x19],0x2
   140004f3a:	jb     0x14000516b
   140004f40:	call   0x140002118
   140004f45:	mov    r9d,eax
   140004f48:	mov    edx,0x4d
   140004f4d:	lea    rax,[rip+0x3e6c]        # 0x140008dc0
   140004f54:	jmp    0x14000514b
   140004f59:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f5e:	mov    rax,QWORD PTR [rbx]
   140004f61:	mov    rdi,QWORD PTR [rax+0x58]
   140004f65:	mov    rcx,rdi
   140004f68:	call   QWORD PTR [rip+0x3462]        # 0x1400083d0
   140004f6e:	lea    rdx,[rsp+0x38]
   140004f73:	mov    rcx,rbx
   140004f76:	call   rdi
   140004f78:	mov    esi,eax
   140004f7a:	test   eax,eax
   140004f7c:	jns    0x140004fc2
   140004f7e:	mov    rcx,QWORD PTR [rip+0x609b]        # 0x14000b020
   140004f85:	lea    rax,[rip+0x6094]        # 0x14000b020
   140004f8c:	cmp    rcx,rax
   140004f8f:	je     0x14000516b
   140004f95:	test   BYTE PTR [rcx+0x1c],0x8
   140004f99:	je     0x14000516b
   140004f9f:	cmp    BYTE PTR [rcx+0x19],0x2
   140004fa3:	jb     0x14000516b
   140004fa9:	call   0x140002118
   140004fae:	mov    r9d,eax
   140004fb1:	mov    edx,0x4e
   140004fb6:	lea    rax,[rip+0x3dcb]        # 0x140008d88
   140004fbd:	jmp    0x14000514b
   140004fc2:	mov    rdx,QWORD PTR [rsp+0x38]
   140004fc7:	lea    rcx,[r14+0x60]
   140004fcb:	lea    r8,[rsp+0x48]
   140004fd0:	call   0x140001d34
   140004fd5:	mov    esi,eax
   140004fd7:	test   eax,eax
   140004fd9:	jns    0x14000501f
   140004fdb:	mov    rcx,QWORD PTR [rip+0x603e]        # 0x14000b020
   140004fe2:	lea    rax,[rip+0x6037]        # 0x14000b020
   140004fe9:	cmp    rcx,rax
   140004fec:	je     0x14000516b
   140004ff2:	test   BYTE PTR [rcx+0x1c],0x8
   140004ff6:	je     0x14000516b
   140004ffc:	cmp    BYTE PTR [rcx+0x19],0x2
   140005000:	jb     0x14000516b
   140005006:	call   0x140002118
   14000500b:	mov    r9d,eax
   14000500e:	mov    edx,0x4f
   140005013:	lea    rax,[rip+0x3dbe]        # 0x140008dd8
   14000501a:	jmp    0x14000514b
   14000501f:	lea    rcx,[r14-0x8]
   140005023:	call   0x140004430
   140005028:	mov    rdx,QWORD PTR [rsp+0x30]
   14000502d:	lea    r9,[rsp+0x60]
   140005032:	call   0x1400045b0
   140005037:	cmp    DWORD PTR [r14+0x44],0x1
   14000503c:	lea    rcx,[rip+0x355d]        # 0x1400085a0
   140005043:	mov    r8,QWORD PTR [rsp+0x48]
   140005048:	lea    rax,[rip+0x34b1]        # 0x140008500
   14000504f:	cmove  rax,rcx
   140005053:	lea    r9,[rsp+0x60]
   140005058:	lea    rcx,[rip+0x3e55]        # 0x140008eb4
   14000505f:	lea    rdx,[rsp+0x50]
   140005064:	movups xmm0,XMMWORD PTR [rax]
   140005067:	mov    rax,QWORD PTR [r14+0xa0]
   14000506e:	test   rax,rax
   140005071:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140005077:	cmovne rcx,rax
   14000507b:	mov    eax,DWORD PTR [r14+0xa8]
   140005082:	mov    DWORD PTR [rsp+0x28],eax
   140005086:	mov    QWORD PTR [rsp+0x20],rcx
   14000508b:	lea    rcx,[rip+0x658e]        # 0x14000b620
   140005092:	call   0x14000522c
   140005097:	mov    edi,eax
   140005099:	test   eax,eax
   14000509b:	je     0x140005102
   14000509d:	mov    rcx,QWORD PTR [rip+0x5f7c]        # 0x14000b020
   1400050a4:	lea    rax,[rip+0x5f75]        # 0x14000b020
   1400050ab:	cmp    rcx,rax
   1400050ae:	je     0x1400050f2
   1400050b0:	test   BYTE PTR [rcx+0x1c],0x8
   1400050b4:	je     0x1400050f2
   1400050b6:	cmp    BYTE PTR [rcx+0x19],0x2
   1400050ba:	jb     0x1400050f2
   1400050bc:	movzx  ebx,di
   1400050bf:	or     ebx,0x80070000
   1400050c5:	test   edi,edi
   1400050c7:	cmovle ebx,edi
   1400050ca:	call   0x140002118
   1400050cf:	mov    rcx,QWORD PTR [rip+0x5f4a]        # 0x14000b020
   1400050d6:	lea    r8,[rip+0x3f23]        # 0x140009000
   1400050dd:	mov    r9d,eax
   1400050e0:	mov    DWORD PTR [rsp+0x20],ebx
   1400050e4:	mov    edx,0x50
   1400050e9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400050ed:	call   0x1400010a8
   1400050f2:	movzx  esi,di
   1400050f5:	or     esi,0x80070000
   1400050fb:	test   edi,edi
   1400050fd:	cmovle esi,edi
   140005100:	jmp    0x14000516b
   140005102:	dec    DWORD PTR [r14+0x90]
   140005109:	lea    rcx,[r14-0x8]
   14000510d:	call   0x1400034a8
   140005112:	mov    esi,eax
   140005114:	test   eax,eax
   140005116:	jns    0x14000516b
   140005118:	mov    rcx,QWORD PTR [rip+0x5f01]        # 0x14000b020
   14000511f:	lea    rax,[rip+0x5efa]        # 0x14000b020
   140005126:	cmp    rcx,rax
   140005129:	je     0x14000516b
   14000512b:	test   BYTE PTR [rcx+0x1c],0x8
   14000512f:	je     0x14000516b
   140005131:	cmp    BYTE PTR [rcx+0x19],0x2
   140005135:	jb     0x14000516b
   140005137:	call   0x140002118
   14000513c:	mov    r9d,eax
   14000513f:	mov    edx,0x51
   140005144:	lea    rax,[rip+0x3cad]        # 0x140008df8
   14000514b:	mov    rcx,QWORD PTR [rip+0x5ece]        # 0x14000b020
   140005152:	lea    r8,[rip+0x3ea7]        # 0x140009000
   140005159:	mov    DWORD PTR [rsp+0x28],esi
   14000515d:	mov    QWORD PTR [rsp+0x20],rax
   140005162:	mov    rcx,QWORD PTR [rcx+0x10]
   140005166:	call   0x1400010f0
   14000516b:	mov    rdi,QWORD PTR [r14+0x20]
   14000516f:	mov    rax,QWORD PTR [rdi]
   140005172:	mov    rbx,QWORD PTR [rax+0x10]
   140005176:	mov    rcx,rbx
   140005179:	call   QWORD PTR [rip+0x3251]        # 0x1400083d0
   14000517f:	mov    rcx,rdi
   140005182:	call   rbx
   140005184:	mov    rcx,QWORD PTR [rsp+0x48]
   140005189:	call   QWORD PTR [rip+0x3021]        # 0x1400081b0
   14000518f:	mov    rdi,QWORD PTR [rsp+0x40]
   140005194:	test   rdi,rdi
   140005197:	je     0x1400051b3
   140005199:	mov    QWORD PTR [rsp+0x40],r15
   14000519e:	mov    rax,QWORD PTR [rdi]
   1400051a1:	mov    rbx,QWORD PTR [rax+0x10]
   1400051a5:	mov    rcx,rbx
   1400051a8:	call   QWORD PTR [rip+0x3222]        # 0x1400083d0
   1400051ae:	mov    rcx,rdi
   1400051b1:	call   rbx
   1400051b3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400051b8:	test   rdi,rdi
   1400051bb:	je     0x1400051d7
   1400051bd:	mov    QWORD PTR [rsp+0x38],r15
   1400051c2:	mov    rax,QWORD PTR [rdi]
   1400051c5:	mov    rbx,QWORD PTR [rax+0x10]
   1400051c9:	mov    rcx,rbx
   1400051cc:	call   QWORD PTR [rip+0x31fe]        # 0x1400083d0
   1400051d2:	mov    rcx,rdi
   1400051d5:	call   rbx
   1400051d7:	mov    rdi,QWORD PTR [rsp+0x30]
   1400051dc:	test   rdi,rdi
   1400051df:	je     0x1400051fb
   1400051e1:	mov    QWORD PTR [rsp+0x30],r15
   1400051e6:	mov    rax,QWORD PTR [rdi]
   1400051e9:	mov    rbx,QWORD PTR [rax+0x10]
   1400051ed:	mov    rcx,rbx
   1400051f0:	call   QWORD PTR [rip+0x31da]        # 0x1400083d0
   1400051f6:	mov    rcx,rdi
   1400051f9:	call   rbx
   1400051fb:	mov    eax,esi
   1400051fd:	mov    rcx,QWORD PTR [rbp+0x770]
   140005204:	xor    rcx,rsp
   140005207:	call   0x140006cd0
   14000520c:	mov    rbx,QWORD PTR [rsp+0x8c0]
   140005214:	add    rsp,0x880
   14000521b:	pop    r15
   14000521d:	pop    r14
   14000521f:	pop    rdi
   140005220:	pop    rsi
   140005221:	pop    rbp
   140005222:	ret    
   140005223:	int3   
   140005224:	int3   
   140005225:	int3   
   140005226:	int3   
   140005227:	int3   
   140005228:	int3   
   140005229:	int3   
   14000522a:	int3   
   14000522b:	int3   
   14000522c:	rex push rbp
   14000522e:	lea    rbp,[rsp-0x47]
   140005233:	sub    rsp,0xa0
   14000523a:	mov    rax,QWORD PTR [rip+0x5dc7]        # 0x14000b008
   140005241:	xor    rax,rsp
   140005244:	mov    QWORD PTR [rbp+0x37],rax
   140005248:	mov    r10,rcx
   14000524b:	mov    QWORD PTR [rbp-0x9],r8
   14000524f:	or     rcx,0xffffffffffffffff
   140005253:	mov    rax,rcx
   140005256:	xor    r11d,r11d
   140005259:	inc    rax
   14000525c:	cmp    WORD PTR [r8+rax*2],r11w
   140005261:	jne    0x140005259
   140005263:	lea    eax,[rax*2+0x2]
   14000526a:	mov    DWORD PTR [rbp+0x3],r11d
   14000526e:	mov    DWORD PTR [rbp-0x1],eax
   140005271:	mov    rax,rcx
   140005274:	mov    QWORD PTR [rbp+0x7],r9
   140005278:	inc    rax
   14000527b:	cmp    WORD PTR [r9+rax*2],r11w
   140005280:	jne    0x140005278
   140005282:	lea    eax,[rax*2+0x2]
   140005289:	mov    DWORD PTR [rbp+0x13],r11d
   14000528d:	mov    DWORD PTR [rbp+0xf],eax
   140005290:	mov    rax,QWORD PTR [rbp+0x77]
   140005294:	mov    QWORD PTR [rbp+0x17],rax
   140005298:	inc    rcx
   14000529b:	cmp    WORD PTR [rax+rcx*2],r11w
   1400052a0:	jne    0x140005298
   1400052a2:	lea    eax,[rcx*2+0x2]
   1400052a9:	mov    ecx,0x4
   1400052ae:	mov    DWORD PTR [rbp+0x1f],eax
   1400052b1:	lea    rax,[rbp+0x7f]
   1400052b5:	mov    QWORD PTR [rbp+0x27],rax
   1400052b9:	mov    DWORD PTR [rbp+0x23],r11d
   1400052bd:	mov    QWORD PTR [rbp+0x2f],rcx
   1400052c1:	cmp    BYTE PTR [r10+0x58],r11b
   1400052c5:	jne    0x1400052cc
   1400052c7:	lea    eax,[rcx+0x2]
   1400052ca:	jmp    0x1400052f8
   1400052cc:	xor    eax,eax
   1400052ce:	xor    r8d,r8d
   1400052d1:	mov    QWORD PTR [rbp-0x19],rax
   1400052d5:	xor    r9d,r9d
   1400052d8:	mov    QWORD PTR [rbp-0x11],rax
   1400052dc:	lea    rax,[rbp-0x9]
   1400052e0:	mov    QWORD PTR [rsp+0x30],rax
   1400052e5:	mov    DWORD PTR [rsp+0x28],ecx
   1400052e9:	mov    rcx,QWORD PTR [r10+0x50]
   1400052ed:	mov    QWORD PTR [rsp+0x20],r11
   1400052f2:	call   QWORD PTR [rip+0x3080]        # 0x140008378
   1400052f8:	mov    rcx,QWORD PTR [rbp+0x37]
   1400052fc:	xor    rcx,rsp
   1400052ff:	call   0x140006cd0
   140005304:	add    rsp,0xa0
   14000530b:	pop    rbp
   14000530c:	ret    
   14000530d:	int3   
   14000530e:	int3   
   14000530f:	int3   
   140005310:	int3   
   140005311:	int3   
   140005312:	int3   
   140005313:	int3   
   140005314:	int3   
   140005315:	int3   
   140005316:	int3   
   140005317:	int3   
   140005318:	int3   
   140005319:	int3   
   14000531a:	int3   
   14000531b:	int3   
   14000531c:	int3   
   14000531d:	int3   
   14000531e:	int3   
   14000531f:	int3   
   140005320:	sub    rcx,0x18
   140005324:	jmp    0x14000283c
   140005329:	int3   
   14000532a:	int3   
   14000532b:	int3   
   14000532c:	int3   
   14000532d:	int3   
   14000532e:	int3   
   14000532f:	int3   
   140005330:	sub    rcx,0x8
   140005334:	jmp    0x140001070
   140005339:	int3   
   14000533a:	int3   
   14000533b:	int3   
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	sub    rcx,0x8
   140005344:	jmp    0x140001030
   140005349:	int3   
   14000534a:	int3   
   14000534b:	int3   
   14000534c:	int3   
   14000534d:	int3   
   14000534e:	int3   
   14000534f:	int3   
   140005350:	sub    rcx,0x8
   140005354:	jmp    0x140002880
   140005359:	int3   
   14000535a:	int3   
   14000535b:	int3   
   14000535c:	int3   
   14000535d:	int3   
   14000535e:	int3   
   14000535f:	int3   
   140005360:	mov    QWORD PTR [rsp+0x18],r8
   140005365:	mov    QWORD PTR [rsp+0x20],r9
   14000536a:	push   rbx
   14000536b:	push   rbp
   14000536c:	push   rsi
   14000536d:	push   rdi
   14000536e:	sub    rsp,0x28
   140005372:	xor    ebp,ebp
   140005374:	lea    rax,[rdx-0x1]
   140005378:	cmp    rax,0x7ffffffe
   14000537e:	mov    rsi,rcx
   140005381:	mov    edi,ebp
   140005383:	mov    ecx,0x80070057
   140005388:	cmova  edi,ecx
   14000538b:	test   edi,edi
   14000538d:	js     0x1400053c4
   14000538f:	lea    rbx,[rdx-0x1]
   140005393:	mov    rcx,rsi
   140005396:	mov    rdx,rbx
   140005399:	lea    r9,[rsp+0x68]
   14000539e:	mov    edi,ebp
   1400053a0:	call   QWORD PTR [rip+0x2f8a]        # 0x140008330
   1400053a6:	test   eax,eax
   1400053a8:	js     0x1400053b9
   1400053aa:	cdqe   
   1400053ac:	cmp    rax,rbx
   1400053af:	ja     0x1400053b9
   1400053b1:	jne    0x1400053cc
   1400053b3:	mov    WORD PTR [rsi+rbx*2],bp
   1400053b7:	jmp    0x1400053cc
   1400053b9:	mov    WORD PTR [rsi+rbx*2],bp
   1400053bd:	mov    edi,0x8007007a
   1400053c2:	jmp    0x1400053cc
   1400053c4:	test   rdx,rdx
   1400053c7:	je     0x1400053cc
   1400053c9:	mov    WORD PTR [rsi],bp
   1400053cc:	mov    eax,edi
   1400053ce:	add    rsp,0x28
   1400053d2:	pop    rdi
   1400053d3:	pop    rsi
   1400053d4:	pop    rbp
   1400053d5:	pop    rbx
   1400053d6:	ret    
   1400053d7:	int3   
   1400053d8:	int3   
   1400053d9:	int3   
   1400053da:	int3   
   1400053db:	int3   
   1400053dc:	int3   
   1400053dd:	int3   
   1400053de:	int3   
   1400053df:	int3   
   1400053e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400053e5:	push   rdi
   1400053e6:	sub    rsp,0x20
   1400053ea:	mov    rdi,QWORD PTR [rcx+0x8]
   1400053ee:	mov    rax,QWORD PTR [rdi]
   1400053f1:	mov    rbx,QWORD PTR [rax+0x8]
   1400053f5:	mov    rcx,rbx
   1400053f8:	call   QWORD PTR [rip+0x2fd2]        # 0x1400083d0
   1400053fe:	mov    rcx,rdi
   140005401:	mov    rax,rbx
   140005404:	mov    rbx,QWORD PTR [rsp+0x30]
   140005409:	add    rsp,0x20
   14000540d:	pop    rdi
   14000540e:	rex.W jmp rax
   140005411:	int3   
   140005412:	int3   
   140005413:	int3   
   140005414:	int3   
   140005415:	int3   
   140005416:	int3   
   140005417:	int3   
   140005418:	int3   
   140005419:	int3   
   14000541a:	int3   
   14000541b:	int3   
   14000541c:	int3   
   14000541d:	int3   
   14000541e:	int3   
   14000541f:	int3   
   140005420:	mov    QWORD PTR [rsp+0x8],rbx
   140005425:	push   rdi
   140005426:	sub    rsp,0x20
   14000542a:	mov    rdi,QWORD PTR [rcx+0x8]
   14000542e:	mov    rax,QWORD PTR [rdi]
   140005431:	mov    rbx,QWORD PTR [rax+0x10]
   140005435:	mov    rcx,rbx
   140005438:	call   QWORD PTR [rip+0x2f92]        # 0x1400083d0
   14000543e:	mov    rcx,rdi
   140005441:	mov    rax,rbx
   140005444:	mov    rbx,QWORD PTR [rsp+0x30]
   140005449:	add    rsp,0x20
   14000544d:	pop    rdi
   14000544e:	rex.W jmp rax
   140005451:	int3   
   140005452:	int3   
   140005453:	int3   
   140005454:	int3   
   140005455:	int3   
   140005456:	int3   
   140005457:	int3   
   140005458:	int3   
   140005459:	int3   
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	int3   
   14000545d:	int3   
   14000545e:	int3   
   14000545f:	int3   
   140005460:	xor    eax,eax
   140005462:	test   rdx,rdx
   140005465:	je     0x14000546a
   140005467:	mov    DWORD PTR [rdx],eax
   140005469:	ret    
   14000546a:	mov    eax,0x80004003
   14000546f:	ret    
   140005470:	int3   
   140005471:	int3   
   140005472:	int3   
   140005473:	int3   
   140005474:	int3   
   140005475:	int3   
   140005476:	int3   
   140005477:	int3   
   140005478:	int3   
   140005479:	int3   
   14000547a:	int3   
   14000547b:	int3   
   14000547c:	int3   
   14000547d:	int3   
   14000547e:	int3   
   14000547f:	int3   
   140005480:	mov    eax,0x80004001
   140005485:	test   r9,r9
   140005488:	je     0x14000548f
   14000548a:	and    QWORD PTR [r9],0x0
   14000548e:	ret    
   14000548f:	mov    eax,0x80004003
   140005494:	ret    
   140005495:	int3   
   140005496:	int3   
   140005497:	int3   
   140005498:	int3   
   140005499:	int3   
   14000549a:	int3   
   14000549b:	int3   
   14000549c:	int3   
   14000549d:	int3   
   14000549e:	int3   
   14000549f:	int3   
   1400054a0:	mov    eax,0x80004001
   1400054a5:	ret    
   1400054a6:	int3   
   1400054a7:	int3   
   1400054a8:	int3   
   1400054a9:	int3   
   1400054aa:	int3   
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	lea    rdx,[rcx+0x20]
   1400054b4:	mov    ecx,0x1
   1400054b9:	test   rdx,rdx
   1400054bc:	jne    0x1400054c3
   1400054be:	or     eax,0xffffffff
   1400054c1:	jmp    0x1400054cb
   1400054c3:	mov    eax,ecx
   1400054c5:	lock xadd DWORD PTR [rdx],eax
   1400054c9:	add    eax,ecx
   1400054cb:	cmp    eax,ecx
   1400054cd:	cmovg  ecx,eax
   1400054d0:	mov    eax,ecx
   1400054d2:	ret    
   1400054d3:	int3   
   1400054d4:	int3   
   1400054d5:	int3   
   1400054d6:	int3   
   1400054d7:	int3   
   1400054d8:	int3   
   1400054d9:	int3   
   1400054da:	int3   
   1400054db:	int3   
   1400054dc:	int3   
   1400054dd:	int3   
   1400054de:	int3   
   1400054df:	int3   
   1400054e0:	rex push rbx
   1400054e2:	sub    rsp,0x20
   1400054e6:	or     DWORD PTR [rcx+0xc],0x8
   1400054ea:	lea    rax,[rip+0x336f]        # 0x140008860
   1400054f1:	mov    QWORD PTR [rcx],rax
   1400054f4:	mov    rbx,rcx
   1400054f7:	test   dl,0x1
   1400054fa:	je     0x140005501
   1400054fc:	call   0x1400068d8
   140005501:	mov    rax,rbx
   140005504:	add    rsp,0x20
   140005508:	pop    rbx
   140005509:	ret    
   14000550a:	int3   
   14000550b:	int3   
   14000550c:	int3   
   14000550d:	int3   
   14000550e:	int3   
   14000550f:	int3   
   140005510:	rex push rbx
   140005512:	sub    rsp,0x20
   140005516:	lea    rax,[rip+0x3363]        # 0x140008880
   14000551d:	mov    rbx,rcx
   140005520:	mov    QWORD PTR [rcx],rax
   140005523:	lea    rax,[rip+0x3336]        # 0x140008860
   14000552a:	or     DWORD PTR [rcx+0x14],0x8
   14000552e:	mov    QWORD PTR [rcx+0x8],rax
   140005532:	test   dl,0x1
   140005535:	je     0x14000553c
   140005537:	call   0x1400068d8
   14000553c:	mov    rax,rbx
   14000553f:	add    rsp,0x20
   140005543:	pop    rbx
   140005544:	ret    
   140005545:	int3   
   140005546:	int3   
   140005547:	int3   
   140005548:	int3   
   140005549:	int3   
   14000554a:	int3   
   14000554b:	int3   
   14000554c:	int3   
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	mov    QWORD PTR [rsp+0x8],rbx
   140005555:	mov    QWORD PTR [rsp+0x10],rsi
   14000555a:	push   rdi
   14000555b:	sub    rsp,0x20
   14000555f:	lea    rdx,[rcx+0x20]
   140005563:	mov    rdi,rcx
   140005566:	or     ecx,0xffffffff
   140005569:	test   rdx,rdx
   14000556c:	je     0x140005599
   14000556e:	mov    eax,ecx
   140005570:	lock xadd DWORD PTR [rdx],eax
   140005574:	add    ecx,eax
   140005576:	jne    0x140005599
   140005578:	lea    esi,[rcx+0x1]
   14000557b:	add    DWORD PTR [rdx],esi
   14000557d:	mov    rax,QWORD PTR [rdi+0x8]
   140005581:	mov    rbx,QWORD PTR [rax]
   140005584:	mov    rcx,rbx
   140005587:	call   QWORD PTR [rip+0x2e43]        # 0x1400083d0
   14000558d:	mov    edx,esi
   14000558f:	lea    rcx,[rdi+0x8]
   140005593:	call   rbx
   140005595:	xor    eax,eax
   140005597:	jmp    0x1400055a5
   140005599:	mov    esi,0x1
   14000559e:	cmp    ecx,esi
   1400055a0:	cmovg  esi,ecx
   1400055a3:	mov    eax,esi
   1400055a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400055aa:	mov    rsi,QWORD PTR [rsp+0x38]
   1400055af:	add    rsp,0x20
   1400055b3:	pop    rdi
   1400055b4:	ret    
   1400055b5:	int3   
   1400055b6:	int3   
   1400055b7:	int3   
   1400055b8:	int3   
   1400055b9:	int3   
   1400055ba:	int3   
   1400055bb:	int3   
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	sub    rcx,0x8
   1400055c4:	jmp    0x140005510
   1400055c9:	int3   
   1400055ca:	int3   
   1400055cb:	int3   
   1400055cc:	int3   
   1400055cd:	int3   
   1400055ce:	int3   
   1400055cf:	int3   
   1400055d0:	mov    eax,DWORD PTR [rcx+0xc]
   1400055d3:	and    eax,0x1
   1400055d6:	ret    
   1400055d7:	int3   
   1400055d8:	int3   
   1400055d9:	int3   
   1400055da:	int3   
   1400055db:	int3   
   1400055dc:	int3   
   1400055dd:	int3   
   1400055de:	int3   
   1400055df:	int3   
   1400055e0:	or     DWORD PTR [rcx+0xc],0x2
   1400055e4:	xor    eax,eax
   1400055e6:	ret    
   1400055e7:	int3   
   1400055e8:	int3   
   1400055e9:	int3   
   1400055ea:	int3   
   1400055eb:	int3   
   1400055ec:	int3   
   1400055ed:	int3   
   1400055ee:	int3   
   1400055ef:	int3   
   1400055f0:	or     DWORD PTR [rcx+0xc],0x4
   1400055f4:	xor    eax,eax
   1400055f6:	ret    
   1400055f7:	int3   
   1400055f8:	int3   
   1400055f9:	int3   
   1400055fa:	int3   
   1400055fb:	int3   
   1400055fc:	int3   
   1400055fd:	int3   
   1400055fe:	int3   
   1400055ff:	int3   
   140005600:	mov    QWORD PTR [rsp+0x8],rbx
   140005605:	push   rdi
   140005606:	sub    rsp,0x20
   14000560a:	mov    rax,QWORD PTR [rdx]
   14000560d:	mov    rdi,rcx
   140005610:	cmp    rax,QWORD PTR [rip+0x39f9]        # 0x140009010
   140005617:	jne    0x140005642
   140005619:	mov    rax,QWORD PTR [rdx+0x8]
   14000561d:	cmp    rax,QWORD PTR [rip+0x39f4]        # 0x140009018
   140005624:	jne    0x140005642
   140005626:	mov    QWORD PTR [r8],rcx
   140005629:	mov    rax,QWORD PTR [rcx]
   14000562c:	mov    rbx,QWORD PTR [rax+0x8]
   140005630:	mov    rcx,rbx
   140005633:	call   QWORD PTR [rip+0x2d97]        # 0x1400083d0
   140005639:	mov    rcx,rdi
   14000563c:	call   rbx
   14000563e:	xor    eax,eax
   140005640:	jmp    0x14000564b
   140005642:	and    QWORD PTR [r8],0x0
   140005646:	mov    eax,0x80004002
   14000564b:	mov    rbx,QWORD PTR [rsp+0x30]
   140005650:	add    rsp,0x20
   140005654:	pop    rdi
   140005655:	ret    
   140005656:	int3   
   140005657:	int3   
   140005658:	int3   
   140005659:	int3   
   14000565a:	int3   
   14000565b:	int3   
   14000565c:	int3   
   14000565d:	int3   
   14000565e:	int3   
   14000565f:	int3   
   140005660:	mov    QWORD PTR [rsp+0x8],rbx
   140005665:	mov    QWORD PTR [rsp+0x10],rsi
   14000566a:	push   rdi
   14000566b:	sub    rsp,0x30
   14000566f:	xor    esi,esi
   140005671:	test   r8,r8
   140005674:	jne    0x1400056c6
   140005676:	mov    rax,QWORD PTR [rip+0x59a3]        # 0x14000b020
   14000567d:	lea    rcx,[rip+0x599c]        # 0x14000b020
   140005684:	cmp    rax,rcx
   140005687:	je     0x1400056bf
   140005689:	test   BYTE PTR [rax+0x1c],0x8
   14000568d:	je     0x1400056bf
   14000568f:	cmp    BYTE PTR [rax+0x19],0x2
   140005693:	jb     0x1400056bf
   140005695:	call   0x140002118
   14000569a:	mov    rcx,QWORD PTR [rip+0x597f]        # 0x14000b020
   1400056a1:	lea    edx,[rsi+0xa]
   1400056a4:	mov    r9d,eax
   1400056a7:	mov    DWORD PTR [rsp+0x20],0x80004003
   1400056af:	lea    r8,[rip+0x39c2]        # 0x140009078
   1400056b6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400056ba:	call   0x1400010a8
   1400056bf:	mov    esi,0x80004003
   1400056c4:	jmp    0x140005737
   1400056c6:	mov    rax,QWORD PTR [rip+0x399b]        # 0x140009068
   1400056cd:	cmp    rax,QWORD PTR [rdx]
   1400056d0:	jne    0x1400056df
   1400056d2:	mov    rax,QWORD PTR [rip+0x3997]        # 0x140009070
   1400056d9:	cmp    rax,QWORD PTR [rdx+0x8]
   1400056dd:	je     0x140005711
   1400056df:	mov    rax,QWORD PTR [rip+0x3972]        # 0x140009058
   1400056e6:	cmp    rax,QWORD PTR [rdx]
   1400056e9:	jne    0x1400056f8
   1400056eb:	mov    rax,QWORD PTR [rip+0x396e]        # 0x140009060
   1400056f2:	cmp    rax,QWORD PTR [rdx+0x8]
   1400056f6:	je     0x140005711
   1400056f8:	mov    rax,QWORD PTR [rip+0x3949]        # 0x140009048
   1400056ff:	cmp    rax,QWORD PTR [rdx]
   140005702:	jne    0x14000572f
   140005704:	mov    rax,QWORD PTR [rip+0x3945]        # 0x140009050
   14000570b:	cmp    rax,QWORD PTR [rdx+0x8]
   14000570f:	jne    0x14000572f
   140005711:	mov    QWORD PTR [r8],rcx
   140005714:	mov    rdi,QWORD PTR [rcx+0x8]
   140005718:	mov    rax,QWORD PTR [rdi]
   14000571b:	mov    rbx,QWORD PTR [rax+0x8]
   14000571f:	mov    rcx,rbx
   140005722:	call   QWORD PTR [rip+0x2ca8]        # 0x1400083d0
   140005728:	mov    rcx,rdi
   14000572b:	call   rbx
   14000572d:	jmp    0x140005737
   14000572f:	mov    QWORD PTR [r8],rsi
   140005732:	mov    esi,0x80004002
   140005737:	mov    rbx,QWORD PTR [rsp+0x40]
   14000573c:	mov    eax,esi
   14000573e:	mov    rsi,QWORD PTR [rsp+0x48]
   140005743:	add    rsp,0x30
   140005747:	pop    rdi
   140005748:	ret    
   140005749:	int3   
   14000574a:	int3   
   14000574b:	int3   
   14000574c:	int3   
   14000574d:	int3   
   14000574e:	int3   
   14000574f:	int3   
   140005750:	mov    QWORD PTR [rsp+0x8],rbx
   140005755:	mov    QWORD PTR [rsp+0x18],rbp
   14000575a:	push   rsi
   14000575b:	push   rdi
   14000575c:	push   r14
   14000575e:	sub    rsp,0x20
   140005762:	mov    rax,QWORD PTR [rdx]
   140005765:	mov    rbp,rcx
   140005768:	and    QWORD PTR [rsp+0x48],0x0
   14000576e:	mov    rdi,rdx
   140005771:	mov    rbx,QWORD PTR [rax]
   140005774:	mov    rcx,rbx
   140005777:	call   QWORD PTR [rip+0x2c53]        # 0x1400083d0
   14000577d:	lea    r8,[rsp+0x48]
   140005782:	mov    rcx,rdi
   140005785:	lea    rdx,[rip+0x39c4]        # 0x140009150
   14000578c:	call   rbx
   14000578e:	mov    esi,eax
   140005790:	test   eax,eax
   140005792:	js     0x14000580f
   140005794:	mov    rdi,QWORD PTR [rsp+0x48]
   140005799:	lea    r14,[rbp+0x10]
   14000579d:	mov    rax,QWORD PTR [rdi]
   1400057a0:	mov    rbx,QWORD PTR [rax+0x20]
   1400057a4:	mov    rcx,rbx
   1400057a7:	call   QWORD PTR [rip+0x2c23]        # 0x1400083d0
   1400057ad:	mov    r8,r14
   1400057b0:	lea    rdx,[rip+0x3891]        # 0x140009048
   1400057b7:	mov    rcx,rdi
   1400057ba:	call   rbx
   1400057bc:	mov    esi,eax
   1400057be:	test   eax,eax
   1400057c0:	js     0x14000580f
   1400057c2:	mov    rsi,QWORD PTR [r14]
   1400057c5:	test   rsi,rsi
   1400057c8:	je     0x14000580a
   1400057ca:	mov    rax,QWORD PTR [rsi]
   1400057cd:	mov    rdi,QWORD PTR [rax+0x28]
   1400057d1:	mov    rcx,rdi
   1400057d4:	call   QWORD PTR [rip+0x2bf6]        # 0x1400083d0
   1400057da:	lea    r8,[rbp+0x18]
   1400057de:	mov    rdx,rbp
   1400057e1:	mov    rcx,rsi
   1400057e4:	call   rdi
   1400057e6:	mov    esi,eax
   1400057e8:	test   eax,eax
   1400057ea:	jns    0x14000580f
   1400057ec:	mov    rdi,QWORD PTR [r14]
   1400057ef:	mov    rax,QWORD PTR [rdi]
   1400057f2:	mov    rbx,QWORD PTR [rax+0x10]
   1400057f6:	mov    rcx,rbx
   1400057f9:	call   QWORD PTR [rip+0x2bd1]        # 0x1400083d0
   1400057ff:	mov    rcx,rdi
   140005802:	call   rbx
   140005804:	and    QWORD PTR [r14],0x0
   140005808:	jmp    0x14000580f
   14000580a:	mov    esi,0x8000ffff
   14000580f:	mov    rdi,QWORD PTR [rsp+0x48]
   140005814:	test   rdi,rdi
   140005817:	je     0x14000582e
   140005819:	mov    rax,QWORD PTR [rdi]
   14000581c:	mov    rbx,QWORD PTR [rax+0x10]
   140005820:	mov    rcx,rbx
   140005823:	call   QWORD PTR [rip+0x2ba7]        # 0x1400083d0
   140005829:	mov    rcx,rdi
   14000582c:	call   rbx
   14000582e:	mov    rbx,QWORD PTR [rsp+0x40]
   140005833:	mov    eax,esi
   140005835:	mov    rbp,QWORD PTR [rsp+0x50]
   14000583a:	add    rsp,0x20
   14000583e:	pop    r14
   140005840:	pop    rdi
   140005841:	pop    rsi
   140005842:	ret    
   140005843:	int3   
   140005844:	int3   
   140005845:	int3   
   140005846:	int3   
   140005847:	int3   
   140005848:	int3   
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	mov    QWORD PTR [rsp+0x8],rbx
   140005855:	mov    QWORD PTR [rsp+0x10],rbp
   14000585a:	mov    QWORD PTR [rsp+0x18],rsi
   14000585f:	push   rdi
   140005860:	sub    rsp,0x20
   140005864:	mov    rdi,QWORD PTR [rcx+0x10]
   140005868:	mov    rsi,rcx
   14000586b:	mov    ebp,0x1
   140005870:	test   rdi,rdi
   140005873:	je     0x1400058ad
   140005875:	mov    rax,QWORD PTR [rdi]
   140005878:	mov    rbx,QWORD PTR [rax+0x30]
   14000587c:	mov    rcx,rbx
   14000587f:	call   QWORD PTR [rip+0x2b4b]        # 0x1400083d0
   140005885:	mov    edx,DWORD PTR [rsi+0x18]
   140005888:	mov    rcx,rdi
   14000588b:	call   rbx
   14000588d:	mov    rdi,QWORD PTR [rsi+0x10]
   140005891:	mov    ebp,eax
   140005893:	mov    rdx,QWORD PTR [rdi]
   140005896:	mov    rbx,QWORD PTR [rdx+0x10]
   14000589a:	mov    rcx,rbx
   14000589d:	call   QWORD PTR [rip+0x2b2d]        # 0x1400083d0
   1400058a3:	mov    rcx,rdi
   1400058a6:	call   rbx
   1400058a8:	and    QWORD PTR [rsi+0x10],0x0
   1400058ad:	and    DWORD PTR [rsi+0x18],0x0
   1400058b1:	mov    eax,ebp
   1400058b3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400058b8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400058bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400058c2:	add    rsp,0x20
   1400058c6:	pop    rdi
   1400058c7:	ret    
   1400058c8:	int3   
   1400058c9:	int3   
   1400058ca:	int3   
   1400058cb:	int3   
   1400058cc:	int3   
   1400058cd:	int3   
   1400058ce:	int3   
   1400058cf:	int3   
   1400058d0:	mov    rax,rsp
   1400058d3:	mov    QWORD PTR [rax+0x8],rbx
   1400058d7:	mov    QWORD PTR [rax+0x10],rbp
   1400058db:	mov    QWORD PTR [rax+0x18],rsi
   1400058df:	mov    QWORD PTR [rax+0x20],rdi
   1400058e3:	push   r14
   1400058e5:	sub    rsp,0x50
   1400058e9:	mov    eax,0x13b
   1400058ee:	mov    rdi,rcx
   1400058f1:	mov    esi,0x80004001
   1400058f6:	cmp    edx,eax
   1400058f8:	jg     0x140005c75
   1400058fe:	je     0x140005bfe
   140005904:	mov    eax,0x133
   140005909:	cmp    edx,eax
   14000590b:	jg     0x140005ad0
   140005911:	je     0x140005ac0
   140005917:	sub    edx,0x12d
   14000591d:	je     0x140005a88
   140005923:	sub    edx,0x1
   140005926:	je     0x140005a5a
   14000592c:	sub    edx,0x1
   14000592f:	je     0x140005a17
   140005935:	sub    edx,0x1
   140005938:	je     0x1400059b7
   14000593a:	sub    edx,0x1
   14000593d:	je     0x1400059a7
   14000593f:	cmp    edx,0x1
   140005942:	jne    0x140006029
   140005948:	mov    rax,QWORD PTR [rsp+0x88]
   140005950:	test   rax,rax
   140005953:	je     0x140005ab6
   140005959:	cmp    DWORD PTR [rax+0x10],0x2
   14000595d:	jne    0x140005ab6
   140005963:	mov    r14,QWORD PTR [rax]
   140005966:	mov    al,BYTE PTR [r14]
   140005969:	and    al,0x3
   14000596b:	cmp    al,0x3
   14000596d:	jne    0x140005ab6
   140005973:	mov    al,BYTE PTR [r14+0x18]
   140005977:	and    al,0x3
   140005979:	cmp    al,0x3
   14000597b:	jne    0x140005ab6
   140005981:	mov    rdi,QWORD PTR [rcx+0x8]
   140005985:	mov    rax,QWORD PTR [rdi]
   140005988:	mov    rbx,QWORD PTR [rax+0x40]
   14000598c:	mov    rcx,rbx
   14000598f:	call   QWORD PTR [rip+0x2a3b]        # 0x1400083d0
   140005995:	mov    r8d,DWORD PTR [r14+0x8]
   140005999:	mov    rcx,rdi
   14000599c:	mov    edx,DWORD PTR [r14+0x20]
   1400059a0:	call   rbx
   1400059a2:	jmp    0x140006029
   1400059a7:	mov    rdi,QWORD PTR [rcx+0x8]
   1400059ab:	mov    rax,QWORD PTR [rdi]
   1400059ae:	mov    rbx,QWORD PTR [rax+0x30]
   1400059b2:	jmp    0x14000601b
   1400059b7:	mov    rax,QWORD PTR [rsp+0x88]
   1400059bf:	test   rax,rax
   1400059c2:	je     0x140005ab6
   1400059c8:	cmp    DWORD PTR [rax+0x10],0x1
   1400059cc:	jne    0x140005ab6
   1400059d2:	mov    rcx,QWORD PTR [rax]
   1400059d5:	mov    al,BYTE PTR [rcx]
   1400059d7:	and    al,0x3
   1400059d9:	cmp    al,0x3
   1400059db:	jne    0x140005ab6
   1400059e1:	movups xmm0,XMMWORD PTR [rcx]
   1400059e4:	mov    rdi,QWORD PTR [rdi+0x8]
   1400059e8:	movsd  xmm1,QWORD PTR [rcx+0x10]
   1400059ed:	movaps XMMWORD PTR [rsp+0x30],xmm0
   1400059f2:	movsd  QWORD PTR [rsp+0x40],xmm1
   1400059f8:	mov    rax,QWORD PTR [rdi]
   1400059fb:	mov    rbx,QWORD PTR [rax+0x50]
   1400059ff:	mov    rcx,rbx
   140005a02:	call   QWORD PTR [rip+0x29c8]        # 0x1400083d0
   140005a08:	lea    rdx,[rsp+0x30]
   140005a0d:	mov    rcx,rdi
   140005a10:	call   rbx
   140005a12:	jmp    0x140006029
   140005a17:	mov    rax,QWORD PTR [rsp+0x88]
   140005a1f:	test   rax,rax
   140005a22:	je     0x140005ab6
   140005a28:	cmp    DWORD PTR [rax+0x10],0x1
   140005a2c:	jne    0x140005ab6
   140005a32:	mov    r14,QWORD PTR [rax]
   140005a35:	mov    cl,0x9
   140005a37:	mov    al,BYTE PTR [r14]
   140005a3a:	and    al,cl
   140005a3c:	cmp    al,cl
   140005a3e:	jne    0x140005ab6
   140005a40:	mov    rdi,QWORD PTR [rdi+0x8]
   140005a44:	mov    rax,QWORD PTR [rdi]
   140005a47:	mov    rbx,QWORD PTR [rax+0x28]
   140005a4b:	mov    rcx,rbx
   140005a4e:	call   QWORD PTR [rip+0x297c]        # 0x1400083d0
   140005a54:	mov    rdx,QWORD PTR [r14+0x8]
   140005a58:	jmp    0x140005a0d
   140005a5a:	mov    rax,QWORD PTR [rsp+0x88]
   140005a62:	test   rax,rax
   140005a65:	je     0x140005ab6
   140005a67:	cmp    DWORD PTR [rax+0x10],0x1
   140005a6b:	jne    0x140005ab6
   140005a6d:	mov    r14,QWORD PTR [rax]
   140005a70:	mov    cl,0x9
   140005a72:	mov    al,BYTE PTR [r14]
   140005a75:	and    al,cl
   140005a77:	cmp    al,cl
   140005a79:	jne    0x140005ab6
   140005a7b:	mov    rdi,QWORD PTR [rdi+0x8]
   140005a7f:	mov    rax,QWORD PTR [rdi]
   140005a82:	mov    rbx,QWORD PTR [rax+0x20]
   140005a86:	jmp    0x140005a4b
   140005a88:	mov    rax,QWORD PTR [rsp+0x88]
   140005a90:	test   rax,rax
   140005a93:	je     0x140005ab6
   140005a95:	cmp    DWORD PTR [rax+0x10],0x1
   140005a99:	jne    0x140005ab6
   140005a9b:	mov    r14,QWORD PTR [rax]
   140005a9e:	mov    cl,0x9
   140005aa0:	mov    al,BYTE PTR [r14]
   140005aa3:	and    al,cl
   140005aa5:	cmp    al,cl
   140005aa7:	jne    0x140005ab6
   140005aa9:	mov    rdi,QWORD PTR [rdi+0x8]
   140005aad:	mov    rax,QWORD PTR [rdi]
   140005ab0:	mov    rbx,QWORD PTR [rax+0x18]
   140005ab4:	jmp    0x140005a4b
   140005ab6:	mov    esi,0x80070057
   140005abb:	jmp    0x140006029
   140005ac0:	mov    rdi,QWORD PTR [rcx+0x8]
   140005ac4:	mov    rax,QWORD PTR [rdi]
   140005ac7:	mov    rbx,QWORD PTR [rax+0x48]
   140005acb:	jmp    0x14000601b
   140005ad0:	sub    edx,0x134
   140005ad6:	je     0x140005bee
   140005adc:	sub    edx,0x1
   140005adf:	je     0x140005b7c
   140005ae5:	sub    edx,0x1
   140005ae8:	je     0x140005b69
   140005aea:	sub    edx,0x1
   140005aed:	je     0x140005b56
   140005aef:	cmp    edx,0x3
   140005af2:	jne    0x140006029
   140005af8:	mov    rbp,QWORD PTR [rsp+0x88]
   140005b00:	test   rbp,rbp
   140005b03:	je     0x140005ab6
   140005b05:	cmp    DWORD PTR [rbp+0x10],edx
   140005b08:	jne    0x140005ab6
   140005b0a:	mov    rbp,QWORD PTR [rbp+0x0]
   140005b0e:	lea    eax,[rdx+0x5]
   140005b11:	cmp    ax,WORD PTR [rbp+0x0]
   140005b15:	jne    0x140005ab6
   140005b17:	mov    al,BYTE PTR [rbp+0x18]
   140005b1a:	and    al,dl
   140005b1c:	cmp    al,dl
   140005b1e:	jne    0x140005ab6
   140005b20:	lea    eax,[rdx+0xa]
   140005b23:	cmp    ax,WORD PTR [rbp+0x30]
   140005b27:	jne    0x140005ab6
   140005b29:	mov    rdi,QWORD PTR [rcx+0x8]
   140005b2d:	mov    rax,QWORD PTR [rdi]
   140005b30:	mov    rbx,QWORD PTR [rax+0xd0]
   140005b37:	mov    rcx,rbx
   140005b3a:	call   QWORD PTR [rip+0x2890]        # 0x1400083d0
   140005b40:	mov    r9,QWORD PTR [rbp+0x8]
   140005b44:	mov    r8d,DWORD PTR [rbp+0x20]
   140005b48:	mov    rdx,QWORD PTR [rbp+0x38]
   140005b4c:	mov    rcx,rdi
   140005b4f:	call   rbx
   140005b51:	jmp    0x140006029
   140005b56:	mov    rdi,QWORD PTR [rcx+0x8]
   140005b5a:	mov    rax,QWORD PTR [rdi]
   140005b5d:	mov    rbx,QWORD PTR [rax+0xc8]
   140005b64:	jmp    0x14000601b
   140005b69:	mov    rdi,QWORD PTR [rcx+0x8]
   140005b6d:	mov    rax,QWORD PTR [rdi]
   140005b70:	mov    rbx,QWORD PTR [rax+0xc0]
   140005b77:	jmp    0x14000601b
   140005b7c:	mov    r14,QWORD PTR [rsp+0x88]
   140005b84:	test   r14,r14
   140005b87:	je     0x140005ab6
   140005b8d:	cmp    DWORD PTR [r14+0x10],0x3
   140005b92:	jne    0x140005ab6
   140005b98:	mov    r14,QWORD PTR [r14]
   140005b9b:	mov    al,BYTE PTR [r14+0x18]
   140005b9f:	and    al,0x3
   140005ba1:	cmp    al,0x3
   140005ba3:	jne    0x140005ab6
   140005ba9:	mov    al,BYTE PTR [r14+0x30]
   140005bad:	mov    cl,0x9
   140005baf:	and    al,cl
   140005bb1:	cmp    al,cl
   140005bb3:	jne    0x140005ab6
   140005bb9:	mov    al,BYTE PTR [r14]
   140005bbc:	and    al,cl
   140005bbe:	cmp    al,cl
   140005bc0:	jne    0x140005ab6
   140005bc6:	mov    rdi,QWORD PTR [rdi+0x8]
   140005bca:	mov    rax,QWORD PTR [rdi]
   140005bcd:	mov    rbx,QWORD PTR [rax+0xa8]
   140005bd4:	mov    rcx,rbx
   140005bd7:	call   QWORD PTR [rip+0x27f3]        # 0x1400083d0
   140005bdd:	mov    r9,QWORD PTR [r14+0x8]
   140005be1:	mov    r8d,DWORD PTR [r14+0x20]
   140005be5:	mov    rdx,QWORD PTR [r14+0x38]
   140005be9:	jmp    0x140005b4c
   140005bee:	mov    rdi,QWORD PTR [rcx+0x8]
   140005bf2:	mov    rax,QWORD PTR [rdi]
   140005bf5:	mov    rbx,QWORD PTR [rax+0x38]
   140005bf9:	jmp    0x14000601b
   140005bfe:	mov    r14,QWORD PTR [rsp+0x88]
   140005c06:	test   r14,r14
   140005c09:	je     0x140005ab6
   140005c0f:	cmp    DWORD PTR [r14+0x10],0x3
   140005c14:	jne    0x140005ab6
   140005c1a:	mov    r14,QWORD PTR [r14]
   140005c1d:	mov    al,BYTE PTR [r14]
   140005c20:	and    al,0x3
   140005c22:	cmp    al,0x3
   140005c24:	jne    0x140005ab6
   140005c2a:	mov    al,BYTE PTR [r14+0x18]
   140005c2e:	and    al,0x3
   140005c30:	cmp    al,0x3
   140005c32:	jne    0x140005ab6
   140005c38:	mov    eax,0xd
   140005c3d:	cmp    ax,WORD PTR [r14+0x30]
   140005c42:	jne    0x140005ab6
   140005c48:	mov    rdi,QWORD PTR [rcx+0x8]
   140005c4c:	mov    rax,QWORD PTR [rdi]
   140005c4f:	mov    rbx,QWORD PTR [rax+0xd8]
   140005c56:	mov    rcx,rbx
   140005c59:	call   QWORD PTR [rip+0x2771]        # 0x1400083d0
   140005c5f:	mov    r9d,DWORD PTR [r14+0x8]
   140005c63:	mov    rcx,rdi
   140005c66:	mov    r8d,DWORD PTR [r14+0x20]
   140005c6a:	mov    rdx,QWORD PTR [r14+0x38]
   140005c6e:	call   rbx
   140005c70:	jmp    0x140006029
   140005c75:	mov    eax,0x141
   140005c7a:	cmp    edx,eax
   140005c7c:	jg     0x140005e24
   140005c82:	je     0x140005de4
   140005c88:	sub    edx,0x13c
   140005c8e:	je     0x140005da7
   140005c94:	sub    edx,0x1
   140005c97:	je     0x140005d6a
   140005c9d:	sub    edx,0x1
   140005ca0:	je     0x140005d2d
   140005ca6:	sub    edx,0x1
   140005ca9:	je     0x140005cf0
   140005cab:	cmp    edx,0x1
   140005cae:	jne    0x140006029
   140005cb4:	mov    rax,QWORD PTR [rsp+0x88]
   140005cbc:	test   rax,rax
   140005cbf:	je     0x140005ab6
   140005cc5:	cmp    DWORD PTR [rax+0x10],edx
   140005cc8:	jne    0x140005ab6
   140005cce:	mov    r14,QWORD PTR [rax]
   140005cd1:	mov    cl,0x9
   140005cd3:	mov    al,BYTE PTR [r14]
   140005cd6:	and    al,cl
   140005cd8:	cmp    al,cl
   140005cda:	jne    0x140005ab6
   140005ce0:	mov    rdi,QWORD PTR [rdi+0x8]
   140005ce4:	mov    rax,QWORD PTR [rdi]
   140005ce7:	mov    rbx,QWORD PTR [rax+0x78]
   140005ceb:	jmp    0x140005a4b
   140005cf0:	mov    rax,QWORD PTR [rsp+0x88]
   140005cf8:	test   rax,rax
   140005cfb:	je     0x140005ab6
   140005d01:	cmp    DWORD PTR [rax+0x10],0x1
   140005d05:	jne    0x140005ab6
   140005d0b:	mov    r14,QWORD PTR [rax]
   140005d0e:	mov    cl,0x9
   140005d10:	mov    al,BYTE PTR [r14]
   140005d13:	and    al,cl
   140005d15:	cmp    al,cl
   140005d17:	jne    0x140005ab6
   140005d1d:	mov    rdi,QWORD PTR [rdi+0x8]
   140005d21:	mov    rax,QWORD PTR [rdi]
   140005d24:	mov    rbx,QWORD PTR [rax+0x70]
   140005d28:	jmp    0x140005a4b
   140005d2d:	mov    rax,QWORD PTR [rsp+0x88]
   140005d35:	test   rax,rax
   140005d38:	je     0x140005ab6
   140005d3e:	cmp    DWORD PTR [rax+0x10],0x1
   140005d42:	jne    0x140005ab6
   140005d48:	mov    r14,QWORD PTR [rax]
   140005d4b:	mov    cl,0x9
   140005d4d:	mov    al,BYTE PTR [r14]
   140005d50:	and    al,cl
   140005d52:	cmp    al,cl
   140005d54:	jne    0x140005ab6
   140005d5a:	mov    rdi,QWORD PTR [rdi+0x8]
   140005d5e:	mov    rax,QWORD PTR [rdi]
   140005d61:	mov    rbx,QWORD PTR [rax+0x68]
   140005d65:	jmp    0x140005a4b
   140005d6a:	mov    rax,QWORD PTR [rsp+0x88]
   140005d72:	test   rax,rax
   140005d75:	je     0x140005ab6
   140005d7b:	cmp    DWORD PTR [rax+0x10],0x1
   140005d7f:	jne    0x140005ab6
   140005d85:	mov    r14,QWORD PTR [rax]
   140005d88:	mov    cl,0x9
   140005d8a:	mov    al,BYTE PTR [r14]
   140005d8d:	and    al,cl
   140005d8f:	cmp    al,cl
   140005d91:	jne    0x140005ab6
   140005d97:	mov    rdi,QWORD PTR [rdi+0x8]
   140005d9b:	mov    rax,QWORD PTR [rdi]
   140005d9e:	mov    rbx,QWORD PTR [rax+0x60]
   140005da2:	jmp    0x140005a4b
   140005da7:	mov    rax,QWORD PTR [rsp+0x88]
   140005daf:	test   rax,rax
   140005db2:	je     0x140005ab6
   140005db8:	cmp    DWORD PTR [rax+0x10],0x1
   140005dbc:	jne    0x140005ab6
   140005dc2:	mov    r14,QWORD PTR [rax]
   140005dc5:	mov    cl,0x9
   140005dc7:	mov    al,BYTE PTR [r14]
   140005dca:	and    al,cl
   140005dcc:	cmp    al,cl
   140005dce:	jne    0x140005ab6
   140005dd4:	mov    rdi,QWORD PTR [rdi+0x8]
   140005dd8:	mov    rax,QWORD PTR [rdi]
   140005ddb:	mov    rbx,QWORD PTR [rax+0x58]
   140005ddf:	jmp    0x140005a4b
   140005de4:	mov    rax,QWORD PTR [rsp+0x88]
   140005dec:	test   rax,rax
   140005def:	je     0x140005ab6
   140005df5:	cmp    DWORD PTR [rax+0x10],0x1
   140005df9:	jne    0x140005ab6
   140005dff:	mov    r14,QWORD PTR [rax]
   140005e02:	mov    cl,0x9
   140005e04:	mov    al,BYTE PTR [r14]
   140005e07:	and    al,cl
   140005e09:	cmp    al,cl
   140005e0b:	jne    0x140005ab6
   140005e11:	mov    rdi,QWORD PTR [rdi+0x8]
   140005e15:	mov    rax,QWORD PTR [rdi]
   140005e18:	mov    rbx,QWORD PTR [rax+0x80]
   140005e1f:	jmp    0x140005a4b
   140005e24:	sub    edx,0x142
   140005e2a:	je     0x14000600d
   140005e30:	sub    edx,0x1
   140005e33:	je     0x140005fa4
   140005e39:	sub    edx,0x1
   140005e3c:	je     0x140005f54
   140005e42:	sub    edx,0x1
   140005e45:	je     0x140005edf
   140005e4b:	cmp    edx,0xf
   140005e4e:	jne    0x140006029
   140005e54:	mov    r14,QWORD PTR [rsp+0x88]
   140005e5c:	test   r14,r14
   140005e5f:	je     0x140005ab6
   140005e65:	cmp    DWORD PTR [r14+0x10],0x4
   140005e6a:	jne    0x140005ab6
   140005e70:	mov    r14,QWORD PTR [r14]
   140005e73:	mov    al,BYTE PTR [r14]
   140005e76:	and    al,0x3
   140005e78:	cmp    al,0x3
   140005e7a:	jne    0x140005ab6
   140005e80:	mov    al,BYTE PTR [r14+0x18]
   140005e84:	and    al,0x3
   140005e86:	cmp    al,0x3
   140005e88:	jne    0x140005ab6
   140005e8e:	mov    al,BYTE PTR [r14+0x30]
   140005e92:	and    al,0x3
   140005e94:	cmp    al,0x3
   140005e96:	jne    0x140005ab6
   140005e9c:	mov    al,BYTE PTR [r14+0x48]
   140005ea0:	and    al,0x3
   140005ea2:	cmp    al,0x3
   140005ea4:	jne    0x140005ab6
   140005eaa:	mov    rdi,QWORD PTR [rcx+0x8]
   140005eae:	mov    rax,QWORD PTR [rdi]
   140005eb1:	mov    rbx,QWORD PTR [rax+0x100]
   140005eb8:	mov    rcx,rbx
   140005ebb:	call   QWORD PTR [rip+0x250f]        # 0x1400083d0
   140005ec1:	mov    eax,DWORD PTR [r14+0x8]
   140005ec5:	mov    rcx,rdi
   140005ec8:	mov    r9d,DWORD PTR [r14+0x20]
   140005ecc:	mov    r8d,DWORD PTR [r14+0x38]
   140005ed0:	mov    edx,DWORD PTR [r14+0x50]
   140005ed4:	mov    DWORD PTR [rsp+0x20],eax
   140005ed8:	call   rbx
   140005eda:	jmp    0x140006029
   140005edf:	mov    r14,QWORD PTR [rsp+0x88]
   140005ee7:	test   r14,r14
   140005eea:	je     0x140005ab6
   140005ef0:	cmp    DWORD PTR [r14+0x10],0x3
   140005ef5:	jne    0x140005ab6
   140005efb:	mov    r14,QWORD PTR [r14]
   140005efe:	mov    al,BYTE PTR [r14]
   140005f01:	and    al,0x3
   140005f03:	cmp    al,0x3
   140005f05:	jne    0x140005ab6
   140005f0b:	mov    al,BYTE PTR [r14+0x18]
   140005f0f:	and    al,0x3
   140005f11:	cmp    al,0x3
   140005f13:	jne    0x140005ab6
   140005f19:	mov    al,BYTE PTR [r14+0x30]
   140005f1d:	and    al,0x3
   140005f1f:	cmp    al,0x3
   140005f21:	jne    0x140005ab6
   140005f27:	mov    rdi,QWORD PTR [rcx+0x8]
   140005f2b:	mov    rax,QWORD PTR [rdi]
   140005f2e:	mov    rbx,QWORD PTR [rax+0x88]
   140005f35:	mov    rcx,rbx
   140005f38:	call   QWORD PTR [rip+0x2492]        # 0x1400083d0
   140005f3e:	mov    r9d,DWORD PTR [r14+0x8]
   140005f42:	mov    rcx,rdi
   140005f45:	mov    r8d,DWORD PTR [r14+0x20]
   140005f49:	mov    edx,DWORD PTR [r14+0x38]
   140005f4d:	call   rbx
   140005f4f:	jmp    0x140006029
   140005f54:	mov    rax,QWORD PTR [rsp+0x88]
   140005f5c:	test   rax,rax
   140005f5f:	je     0x140005ab6
   140005f65:	cmp    DWORD PTR [rax+0x10],0x1
   140005f69:	jne    0x140005ab6
   140005f6f:	mov    r14,QWORD PTR [rax]
   140005f72:	mov    al,BYTE PTR [r14]
   140005f75:	and    al,0x3
   140005f77:	cmp    al,0x3
   140005f79:	jne    0x140005ab6
   140005f7f:	mov    rdi,QWORD PTR [rcx+0x8]
   140005f83:	mov    rax,QWORD PTR [rdi]
   140005f86:	mov    rbx,QWORD PTR [rax+0xe8]
   140005f8d:	mov    rcx,rbx
   140005f90:	call   QWORD PTR [rip+0x243a]        # 0x1400083d0
   140005f96:	mov    edx,DWORD PTR [r14+0x8]
   140005f9a:	mov    rcx,rdi
   140005f9d:	call   rbx
   140005f9f:	jmp    0x140006029
   140005fa4:	mov    r14,QWORD PTR [rsp+0x88]
   140005fac:	test   r14,r14
   140005faf:	je     0x140005ab6
   140005fb5:	cmp    DWORD PTR [r14+0x10],0x4
   140005fba:	jne    0x140005ab6
   140005fc0:	mov    r14,QWORD PTR [r14]
   140005fc3:	mov    al,BYTE PTR [r14]
   140005fc6:	and    al,0x3
   140005fc8:	cmp    al,0x3
   140005fca:	jne    0x140005ab6
   140005fd0:	mov    al,BYTE PTR [r14+0x18]
   140005fd4:	and    al,0x3
   140005fd6:	cmp    al,0x3
   140005fd8:	jne    0x140005ab6
   140005fde:	mov    al,BYTE PTR [r14+0x30]
   140005fe2:	and    al,0x3
   140005fe4:	cmp    al,0x3
   140005fe6:	jne    0x140005ab6
   140005fec:	mov    al,BYTE PTR [r14+0x48]
   140005ff0:	and    al,0x3
   140005ff2:	cmp    al,0x3
   140005ff4:	jne    0x140005ab6
   140005ffa:	mov    rdi,QWORD PTR [rcx+0x8]
   140005ffe:	mov    rax,QWORD PTR [rdi]
   140006001:	mov    rbx,QWORD PTR [rax+0xe0]
   140006008:	jmp    0x140005eb8
   14000600d:	mov    rdi,QWORD PTR [rcx+0x8]
   140006011:	mov    rdx,QWORD PTR [rdi]
   140006014:	mov    rbx,QWORD PTR [rdx+0xb8]
   14000601b:	mov    rcx,rbx
   14000601e:	call   QWORD PTR [rip+0x23ac]        # 0x1400083d0
   140006024:	mov    rcx,rdi
   140006027:	call   rbx
   140006029:	mov    rbx,QWORD PTR [rsp+0x60]
   14000602e:	mov    eax,esi
   140006030:	mov    rsi,QWORD PTR [rsp+0x70]
   140006035:	mov    rbp,QWORD PTR [rsp+0x68]
   14000603a:	mov    rdi,QWORD PTR [rsp+0x78]
   14000603f:	add    rsp,0x50
   140006043:	pop    r14
   140006045:	ret    
   140006046:	int3   
   140006047:	int3   
   140006048:	int3   
   140006049:	int3   
   14000604a:	int3   
   14000604b:	int3   
   14000604c:	mov    QWORD PTR [rsp+0x8],rbx
   140006051:	mov    QWORD PTR [rsp+0x10],rsi
   140006056:	push   rbp
   140006057:	push   rdi
   140006058:	push   r12
   14000605a:	push   r14
   14000605c:	push   r15
   14000605e:	mov    rbp,rsp
   140006061:	sub    rsp,0x60
   140006065:	xor    r12d,r12d
   140006068:	lea    rax,[rbp+0x40]
   14000606c:	mov    rbx,rdx
   14000606f:	mov    QWORD PTR [rbp-0x20],r12
   140006073:	mov    rsi,rcx
   140006076:	mov    QWORD PTR [rbp-0x10],r12
   14000607a:	xor    r9d,r9d
   14000607d:	mov    QWORD PTR [rbp-0x18],r12
   140006081:	lea    edx,[r12+0x1]
   140006086:	mov    DWORD PTR [rbp+0x40],r12d
   14000608a:	xor    r8d,r8d
   14000608d:	mov    DWORD PTR [rbp+0x48],r12d
   140006091:	mov    rcx,rbx
   140006094:	mov    QWORD PTR [rsp+0x20],rax
   140006099:	mov    edi,r12d
   14000609c:	mov    r15d,r12d
   14000609f:	mov    r14d,r12d
   1400060a2:	call   QWORD PTR [rip+0x1fc0]        # 0x140008068
   1400060a8:	call   QWORD PTR [rip+0x20d2]        # 0x140008180
   1400060ae:	cmp    eax,0x7a
   1400060b1:	je     0x1400060f5
   1400060b3:	call   QWORD PTR [rip+0x20c7]        # 0x140008180
   1400060b9:	mov    ebx,eax
   1400060bb:	mov    rcx,QWORD PTR [rip+0x4f5e]        # 0x14000b020
   1400060c2:	lea    rax,[rip+0x4f57]        # 0x14000b020
   1400060c9:	cmp    rcx,rax
   1400060cc:	je     0x1400064bb
   1400060d2:	test   BYTE PTR [rcx+0x1c],0x8
   1400060d6:	je     0x1400064bb
   1400060dc:	cmp    BYTE PTR [rcx+0x19],0x2
   1400060e0:	jb     0x1400064bb
   1400060e6:	call   0x140002118
   1400060eb:	lea    edx,[r12+0xa]
   1400060f0:	jmp    0x14000649d
   1400060f5:	mov    edx,DWORD PTR [rbp+0x40]
   1400060f8:	mov    ecx,0x40
   1400060fd:	call   QWORD PTR [rip+0x1fed]        # 0x1400080f0
   140006103:	mov    r14,rax
   140006106:	test   rax,rax
   140006109:	jne    0x140006144
   14000610b:	mov    rcx,QWORD PTR [rip+0x4f0e]        # 0x14000b020
   140006112:	lea    rax,[rip+0x4f07]        # 0x14000b020
   140006119:	cmp    rcx,rax
   14000611c:	je     0x140006290
   140006122:	test   BYTE PTR [rcx+0x1c],0x8
   140006126:	je     0x140006290
   14000612c:	cmp    BYTE PTR [rcx+0x19],0x2
   140006130:	jb     0x140006290
   140006136:	call   0x140002118
   14000613b:	lea    edx,[r14+0xb]
   14000613f:	jmp    0x14000626e
   140006144:	mov    r9d,DWORD PTR [rbp+0x40]
   140006148:	lea    rax,[rbp+0x48]
   14000614c:	mov    r8,r14
   14000614f:	mov    QWORD PTR [rsp+0x20],rax
   140006154:	mov    edx,0x1
   140006159:	mov    rcx,rbx
   14000615c:	call   QWORD PTR [rip+0x1f06]        # 0x140008068
   140006162:	test   eax,eax
   140006164:	jne    0x1400061a8
   140006166:	call   QWORD PTR [rip+0x2014]        # 0x140008180
   14000616c:	mov    ebx,eax
   14000616e:	mov    rcx,QWORD PTR [rip+0x4eab]        # 0x14000b020
   140006175:	lea    rax,[rip+0x4ea4]        # 0x14000b020
   14000617c:	cmp    rcx,rax
   14000617f:	je     0x1400064bb
   140006185:	test   BYTE PTR [rcx+0x1c],0x8
   140006189:	je     0x1400064bb
   14000618f:	cmp    BYTE PTR [rcx+0x19],0x2
   140006193:	jb     0x1400064bb
   140006199:	call   0x140002118
   14000619e:	mov    edx,0xc
   1400061a3:	jmp    0x14000649d
   1400061a8:	xor    r9d,r9d
   1400061ab:	lea    rax,[rbp-0x10]
   1400061af:	mov    QWORD PTR [rsp+0x38],rax
   1400061b4:	mov    rcx,rsi
   1400061b7:	lea    rax,[rbp-0x20]
   1400061bb:	mov    QWORD PTR [rsp+0x30],r12
   1400061c0:	mov    QWORD PTR [rsp+0x28],rax
   1400061c5:	lea    edx,[r9+0x6]
   1400061c9:	mov    QWORD PTR [rsp+0x20],r12
   1400061ce:	lea    r8d,[r9+0x4]
   1400061d2:	call   QWORD PTR [rip+0x1e88]        # 0x140008060
   1400061d8:	test   eax,eax
   1400061da:	je     0x14000621e
   1400061dc:	call   QWORD PTR [rip+0x1f9e]        # 0x140008180
   1400061e2:	mov    ebx,eax
   1400061e4:	mov    rcx,QWORD PTR [rip+0x4e35]        # 0x14000b020
   1400061eb:	lea    rax,[rip+0x4e2e]        # 0x14000b020
   1400061f2:	cmp    rcx,rax
   1400061f5:	je     0x1400064bb
   1400061fb:	test   BYTE PTR [rcx+0x1c],0x8
   1400061ff:	je     0x1400064bb
   140006205:	cmp    BYTE PTR [rcx+0x19],0x2
   140006209:	jb     0x1400064bb
   14000620f:	call   0x140002118
   140006214:	mov    edx,0xd
   140006219:	jmp    0x14000649d
   14000621e:	mov    rax,QWORD PTR [rbp-0x20]
   140006222:	mov    rcx,QWORD PTR [r14]
   140006225:	movzx  ebx,WORD PTR [rax+0x2]
   140006229:	call   QWORD PTR [rip+0x1e29]        # 0x140008058
   14000622f:	add    ebx,0x8
   140006232:	xor    ecx,ecx
   140006234:	add    ebx,eax
   140006236:	mov    edx,ebx
   140006238:	call   QWORD PTR [rip+0x1eb2]        # 0x1400080f0
   14000623e:	mov    r15,rax
   140006241:	test   rax,rax
   140006244:	jne    0x14000629a
   140006246:	mov    rcx,QWORD PTR [rip+0x4dd3]        # 0x14000b020
   14000624d:	lea    rax,[rip+0x4dcc]        # 0x14000b020
   140006254:	cmp    rcx,rax
   140006257:	je     0x140006290
   140006259:	test   BYTE PTR [rcx+0x1c],0x8
   14000625d:	je     0x140006290
   14000625f:	cmp    BYTE PTR [rcx+0x19],0x2
   140006263:	jb     0x140006290
   140006265:	call   0x140002118
   14000626a:	lea    edx,[r15+0xe]
   14000626e:	mov    rcx,QWORD PTR [rip+0x4dab]        # 0x14000b020
   140006275:	lea    r8,[rip+0x2e0c]        # 0x140009088
   14000627c:	mov    r9d,eax
   14000627f:	mov    DWORD PTR [rsp+0x20],0x8007000e
   140006287:	mov    rcx,QWORD PTR [rcx+0x10]
   14000628b:	call   0x1400010a8
   140006290:	mov    edi,0x8007000e
   140006295:	jmp    0x140006435
   14000629a:	mov    r8d,0x2
   1400062a0:	mov    edx,ebx
   1400062a2:	mov    rcx,rax
   1400062a5:	call   QWORD PTR [rip+0x1da5]        # 0x140008050
   1400062ab:	test   eax,eax
   1400062ad:	jne    0x1400062f1
   1400062af:	call   QWORD PTR [rip+0x1ecb]        # 0x140008180
   1400062b5:	mov    ebx,eax
   1400062b7:	mov    rcx,QWORD PTR [rip+0x4d62]        # 0x14000b020
   1400062be:	lea    rax,[rip+0x4d5b]        # 0x14000b020
   1400062c5:	cmp    rcx,rax
   1400062c8:	je     0x1400064bb
   1400062ce:	test   BYTE PTR [rcx+0x1c],0x8
   1400062d2:	je     0x1400064bb
   1400062d8:	cmp    BYTE PTR [rcx+0x19],0x2
   1400062dc:	jb     0x1400064bb
   1400062e2:	call   0x140002118
   1400062e7:	mov    edx,0xf
   1400062ec:	jmp    0x14000649d
   1400062f1:	mov    r9,QWORD PTR [r14]
   1400062f4:	mov    edx,0x2
   1400062f9:	mov    r8d,0x111fffff
   1400062ff:	mov    rcx,r15
   140006302:	call   QWORD PTR [rip+0x1d80]        # 0x140008088
   140006308:	test   eax,eax
   14000630a:	jne    0x14000634e
   14000630c:	call   QWORD PTR [rip+0x1e6e]        # 0x140008180
   140006312:	mov    ebx,eax
   140006314:	mov    rcx,QWORD PTR [rip+0x4d05]        # 0x14000b020
   14000631b:	lea    rax,[rip+0x4cfe]        # 0x14000b020
   140006322:	cmp    rcx,rax
   140006325:	je     0x1400064bb
   14000632b:	test   BYTE PTR [rcx+0x1c],0x8
   14000632f:	je     0x1400064bb
   140006335:	cmp    BYTE PTR [rcx+0x19],0x2
   140006339:	jb     0x1400064bb
   14000633f:	call   0x140002118
   140006344:	mov    edx,0x10
   140006349:	jmp    0x14000649d
   14000634e:	mov    rcx,QWORD PTR [rbp-0x20]
   140006352:	mov    ebx,r12d
   140006355:	cmp    r12w,WORD PTR [rcx+0x4]
   14000635a:	jae    0x1400063a5
   14000635c:	lea    r8,[rbp-0x18]
   140006360:	mov    edx,ebx
   140006362:	call   QWORD PTR [rip+0x1d08]        # 0x140008070
   140006368:	test   eax,eax
   14000636a:	je     0x1400064db
   140006370:	mov    r9,QWORD PTR [rbp-0x18]
   140006374:	or     r8d,0xffffffff
   140006378:	mov    edx,0x2
   14000637d:	mov    rcx,r15
   140006380:	movzx  eax,WORD PTR [r9+0x2]
   140006385:	mov    DWORD PTR [rsp+0x20],eax
   140006389:	call   QWORD PTR [rip+0x1ce9]        # 0x140008078
   14000638f:	test   eax,eax
   140006391:	je     0x14000646c
   140006397:	mov    rcx,QWORD PTR [rbp-0x20]
   14000639b:	inc    ebx
   14000639d:	movzx  eax,WORD PTR [rcx+0x4]
   1400063a1:	cmp    ebx,eax
   1400063a3:	jb     0x14000635c
   1400063a5:	xor    r9d,r9d
   1400063a8:	mov    QWORD PTR [rsp+0x30],r12
   1400063ad:	mov    QWORD PTR [rsp+0x28],r15
   1400063b2:	mov    rcx,rsi
   1400063b5:	mov    QWORD PTR [rsp+0x20],r12
   1400063ba:	lea    edx,[r9+0x6]
   1400063be:	lea    r8d,[r9+0x4]
   1400063c2:	call   QWORD PTR [rip+0x1cb8]        # 0x140008080
   1400063c8:	test   eax,eax
   1400063ca:	je     0x140006435
   1400063cc:	call   QWORD PTR [rip+0x1dae]        # 0x140008180
   1400063d2:	mov    ebx,eax
   1400063d4:	mov    rcx,QWORD PTR [rip+0x4c45]        # 0x14000b020
   1400063db:	lea    rax,[rip+0x4c3e]        # 0x14000b020
   1400063e2:	cmp    rcx,rax
   1400063e5:	je     0x14000641b
   1400063e7:	test   BYTE PTR [rcx+0x1c],0x8
   1400063eb:	je     0x14000641b
   1400063ed:	cmp    BYTE PTR [rcx+0x19],0x2
   1400063f1:	jb     0x14000641b
   1400063f3:	call   0x140002118
   1400063f8:	mov    rcx,QWORD PTR [rip+0x4c21]        # 0x14000b020
   1400063ff:	lea    r8,[rip+0x2c82]        # 0x140009088
   140006406:	mov    r9d,eax
   140006409:	mov    DWORD PTR [rsp+0x20],ebx
   14000640d:	mov    edx,0x13
   140006412:	mov    rcx,QWORD PTR [rcx+0x10]
   140006416:	call   0x1400010a8
   14000641b:	mov    edi,0x80004005
   140006420:	movzx  ecx,bx
   140006423:	or     ecx,0x80070000
   140006429:	test   ebx,ebx
   14000642b:	cmovle ecx,ebx
   14000642e:	test   ecx,ecx
   140006430:	cmovns ecx,edi
   140006433:	mov    edi,ecx
   140006435:	mov    rcx,QWORD PTR [rbp-0x10]
   140006439:	call   QWORD PTR [rip+0x1c91]        # 0x1400080d0
   14000643f:	mov    rcx,r15
   140006442:	call   QWORD PTR [rip+0x1c88]        # 0x1400080d0
   140006448:	mov    rcx,r14
   14000644b:	call   QWORD PTR [rip+0x1c7f]        # 0x1400080d0
   140006451:	lea    r11,[rsp+0x60]
   140006456:	mov    eax,edi
   140006458:	mov    rbx,QWORD PTR [r11+0x30]
   14000645c:	mov    rsi,QWORD PTR [r11+0x38]
   140006460:	mov    rsp,r11
   140006463:	pop    r15
   140006465:	pop    r14
   140006467:	pop    r12
   140006469:	pop    rdi
   14000646a:	pop    rbp
   14000646b:	ret    
   14000646c:	call   QWORD PTR [rip+0x1d0e]        # 0x140008180
   140006472:	mov    ebx,eax
   140006474:	mov    rcx,QWORD PTR [rip+0x4ba5]        # 0x14000b020
   14000647b:	lea    rax,[rip+0x4b9e]        # 0x14000b020
   140006482:	cmp    rcx,rax
   140006485:	je     0x1400064bb
   140006487:	test   BYTE PTR [rcx+0x1c],0x8
   14000648b:	je     0x1400064bb
   14000648d:	cmp    BYTE PTR [rcx+0x19],0x2
   140006491:	jb     0x1400064bb
   140006493:	call   0x140002118
   140006498:	mov    edx,0x12
   14000649d:	mov    rcx,QWORD PTR [rip+0x4b7c]        # 0x14000b020
   1400064a4:	lea    r8,[rip+0x2bdd]        # 0x140009088
   1400064ab:	mov    r9d,eax
   1400064ae:	mov    DWORD PTR [rsp+0x20],ebx
   1400064b2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400064b6:	call   0x1400010a8
   1400064bb:	movzx  edi,bx
   1400064be:	or     edi,0x80070000
   1400064c4:	test   ebx,ebx
   1400064c6:	cmovle edi,ebx
   1400064c9:	test   edi,edi
   1400064cb:	js     0x140006435
   1400064d1:	mov    edi,0x80004005
   1400064d6:	jmp    0x140006435
   1400064db:	call   QWORD PTR [rip+0x1c9f]        # 0x140008180
   1400064e1:	mov    ebx,eax
   1400064e3:	mov    rcx,QWORD PTR [rip+0x4b36]        # 0x14000b020
   1400064ea:	lea    rax,[rip+0x4b2f]        # 0x14000b020
   1400064f1:	cmp    rcx,rax
   1400064f4:	je     0x1400064bb
   1400064f6:	test   BYTE PTR [rcx+0x1c],0x8
   1400064fa:	je     0x1400064bb
   1400064fc:	cmp    BYTE PTR [rcx+0x19],0x2
   140006500:	jb     0x1400064bb
   140006502:	call   0x140002118
   140006507:	mov    edx,0x11
   14000650c:	jmp    0x14000649d
   14000650e:	int3   
   14000650f:	int3   
   140006510:	int3   
   140006511:	int3   
   140006512:	int3   
   140006513:	int3   
   140006514:	mov    QWORD PTR [rsp+0x10],rbx
   140006519:	mov    QWORD PTR [rsp+0x18],rsi
   14000651e:	push   rbp
   14000651f:	push   rdi
   140006520:	push   r14
   140006522:	lea    rbp,[rsp-0x170]
   14000652a:	sub    rsp,0x270
   140006531:	mov    rax,QWORD PTR [rip+0x4ad0]        # 0x14000b008
   140006538:	xor    rax,rsp
   14000653b:	mov    QWORD PTR [rbp+0x160],rax
   140006542:	mov    rsi,QWORD PTR [rbp+0x1b0]
   140006549:	xor    r14d,r14d
   14000654c:	mov    ebx,ecx
   14000654e:	mov    QWORD PTR [rsp+0x30],r14
   140006553:	lea    rcx,[rsp+0x62]
   140006558:	mov    QWORD PTR [rsp+0x40],r14
   14000655d:	xor    edx,edx
   14000655f:	mov    QWORD PTR [rsp+0x48],r14
   140006564:	mov    r8d,0x1fe
   14000656a:	mov    WORD PTR [rsp+0x60],r14w
   140006570:	call   0x140007382
   140006575:	lea    rdx,[rsp+0x30]
   14000657a:	mov    DWORD PTR [rsp+0x50],r14d
   14000657f:	xor    ecx,ecx
   140006581:	mov    QWORD PTR [rsp+0x38],r14
   140006586:	call   QWORD PTR [rip+0x1e24]        # 0x1400083b0
   14000658c:	mov    edi,eax
   14000658e:	test   eax,eax
   140006590:	jns    0x1400065d5
   140006592:	mov    rax,QWORD PTR [rip+0x4a87]        # 0x14000b020
   140006599:	lea    rcx,[rip+0x4a80]        # 0x14000b020
   1400065a0:	cmp    rax,rcx
   1400065a3:	je     0x1400067fb
   1400065a9:	test   BYTE PTR [rax+0x1c],0x8
   1400065ad:	je     0x1400067fb
   1400065b3:	cmp    BYTE PTR [rax+0x19],0x2
   1400065b7:	jb     0x1400067fb
   1400065bd:	call   0x140002118
   1400065c2:	mov    r9d,eax
   1400065c5:	lea    edx,[r14+0xa]
   1400065c9:	lea    rax,[rip+0x2ac8]        # 0x140009098
   1400065d0:	jmp    0x1400067db
   1400065d5:	lea    rdx,[rsp+0x48]
   1400065da:	lea    rcx,[rip+0x249f]        # 0x140008a80
   1400065e1:	call   QWORD PTR [rip+0x1c99]        # 0x140008280
   1400065e7:	mov    edi,eax
   1400065e9:	test   eax,eax
   1400065eb:	jns    0x140006631
   1400065ed:	mov    rax,QWORD PTR [rip+0x4a2c]        # 0x14000b020
   1400065f4:	lea    rcx,[rip+0x4a25]        # 0x14000b020
   1400065fb:	cmp    rax,rcx
   1400065fe:	je     0x1400067fb
   140006604:	test   BYTE PTR [rax+0x1c],0x8
   140006608:	je     0x1400067fb
   14000660e:	cmp    BYTE PTR [rax+0x19],0x2
   140006612:	jb     0x1400067fb
   140006618:	call   0x140002118
   14000661d:	mov    r9d,eax
   140006620:	mov    edx,0xb
   140006625:	lea    rax,[rip+0x2a7c]        # 0x1400090a8
   14000662c:	jmp    0x1400067db
   140006631:	mov    rax,QWORD PTR [rsp+0x48]
   140006636:	lea    r8,[rip+0x2a7b]        # 0x1400090b8
   14000663d:	mov    r9d,ebx
   140006640:	mov    QWORD PTR [rsp+0x20],rax
   140006645:	mov    edx,0x100
   14000664a:	lea    rcx,[rsp+0x60]
   14000664f:	call   0x140005360
   140006654:	mov    edi,eax
   140006656:	test   eax,eax
   140006658:	jns    0x14000669e
   14000665a:	mov    rax,QWORD PTR [rip+0x49bf]        # 0x14000b020
   140006661:	lea    rcx,[rip+0x49b8]        # 0x14000b020
   140006668:	cmp    rax,rcx
   14000666b:	je     0x1400067fb
   140006671:	test   BYTE PTR [rax+0x1c],0x8
   140006675:	je     0x1400067fb
   14000667b:	cmp    BYTE PTR [rax+0x19],0x2
   14000667f:	jb     0x1400067fb
   140006685:	call   0x140002118
   14000668a:	mov    r9d,eax
   14000668d:	mov    edx,0xc
   140006692:	lea    rax,[rip+0x2a47]        # 0x1400090e0
   140006699:	jmp    0x1400067db
   14000669e:	mov    rcx,QWORD PTR [rsp+0x30]
   1400066a3:	lea    r9,[rsp+0x40]
   1400066a8:	lea    r8,[rsp+0x50]
   1400066ad:	lea    rdx,[rsp+0x60]
   1400066b2:	call   QWORD PTR [rip+0x1d00]        # 0x1400083b8
   1400066b8:	mov    edi,eax
   1400066ba:	test   eax,eax
   1400066bc:	jns    0x140006702
   1400066be:	mov    rax,QWORD PTR [rip+0x495b]        # 0x14000b020
   1400066c5:	lea    rcx,[rip+0x4954]        # 0x14000b020
   1400066cc:	cmp    rax,rcx
   1400066cf:	je     0x1400067fb
   1400066d5:	test   BYTE PTR [rax+0x1c],0x8
   1400066d9:	je     0x1400067fb
   1400066df:	cmp    BYTE PTR [rax+0x19],0x2
   1400066e3:	jb     0x1400067fb
   1400066e9:	call   0x140002118
   1400066ee:	mov    r9d,eax
   1400066f1:	mov    edx,0xd
   1400066f6:	lea    rax,[rip+0x29f3]        # 0x1400090f0
   1400066fd:	jmp    0x1400067db
   140006702:	mov    rdi,QWORD PTR [rsp+0x40]
   140006707:	mov    rax,QWORD PTR [rdi]
   14000670a:	mov    rbx,QWORD PTR [rax+0x40]
   14000670e:	mov    rcx,rbx
   140006711:	call   QWORD PTR [rip+0x1cb9]        # 0x1400083d0
   140006717:	mov    rdx,QWORD PTR [rsp+0x30]
   14000671c:	lea    rax,[rsp+0x38]
   140006721:	lea    r9,[rip+0x28f8]        # 0x140009020
   140006728:	mov    QWORD PTR [rsp+0x20],rax
   14000672d:	xor    r8d,r8d
   140006730:	mov    rcx,rdi
   140006733:	call   rbx
   140006735:	mov    edi,eax
   140006737:	test   eax,eax
   140006739:	jns    0x14000677c
   14000673b:	mov    rax,QWORD PTR [rip+0x48de]        # 0x14000b020
   140006742:	lea    rcx,[rip+0x48d7]        # 0x14000b020
   140006749:	cmp    rax,rcx
   14000674c:	je     0x1400067fb
   140006752:	test   BYTE PTR [rax+0x1c],0x8
   140006756:	je     0x1400067fb
   14000675c:	cmp    BYTE PTR [rax+0x19],0x2
   140006760:	jb     0x1400067fb
   140006766:	call   0x140002118
   14000676b:	mov    r9d,eax
   14000676e:	mov    edx,0xe
   140006773:	lea    rax,[rip+0x298e]        # 0x140009108
   14000677a:	jmp    0x1400067db
   14000677c:	mov    rdi,QWORD PTR [rsp+0x38]
   140006781:	mov    rax,QWORD PTR [rdi]
   140006784:	mov    rbx,QWORD PTR [rax+0x18]
   140006788:	mov    rcx,rbx
   14000678b:	call   QWORD PTR [rip+0x1c3f]        # 0x1400083d0
   140006791:	mov    r9,rsi
   140006794:	lea    r8,[rip+0x272d]        # 0x140008ec8
   14000679b:	xor    edx,edx
   14000679d:	mov    rcx,rdi
   1400067a0:	call   rbx
   1400067a2:	mov    edi,eax
   1400067a4:	test   eax,eax
   1400067a6:	jns    0x1400067fb
   1400067a8:	mov    rax,QWORD PTR [rip+0x4871]        # 0x14000b020
   1400067af:	lea    rcx,[rip+0x486a]        # 0x14000b020
   1400067b6:	cmp    rax,rcx
   1400067b9:	je     0x1400067fb
   1400067bb:	test   BYTE PTR [rax+0x1c],0x8
   1400067bf:	je     0x1400067fb
   1400067c1:	cmp    BYTE PTR [rax+0x19],0x2
   1400067c5:	jb     0x1400067fb
   1400067c7:	call   0x140002118
   1400067cc:	mov    r9d,eax
   1400067cf:	mov    edx,0xf
   1400067d4:	lea    rax,[rip+0x2945]        # 0x140009120
   1400067db:	mov    rcx,QWORD PTR [rip+0x483e]        # 0x14000b020
   1400067e2:	lea    r8,[rip+0x2957]        # 0x140009140
   1400067e9:	mov    DWORD PTR [rsp+0x28],edi
   1400067ed:	mov    QWORD PTR [rsp+0x20],rax
   1400067f2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400067f6:	call   0x1400010f0
   1400067fb:	mov    rsi,QWORD PTR [rsp+0x38]
   140006800:	test   rsi,rsi
   140006803:	je     0x14000681a
   140006805:	mov    rax,QWORD PTR [rsi]
   140006808:	mov    rbx,QWORD PTR [rax+0x10]
   14000680c:	mov    rcx,rbx
   14000680f:	call   QWORD PTR [rip+0x1bbb]        # 0x1400083d0
   140006815:	mov    rcx,rsi
   140006818:	call   rbx
   14000681a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000681f:	test   rsi,rsi
   140006822:	je     0x140006839
   140006824:	mov    rax,QWORD PTR [rsi]
   140006827:	mov    rbx,QWORD PTR [rax+0x10]
   14000682b:	mov    rcx,rbx
   14000682e:	call   QWORD PTR [rip+0x1b9c]        # 0x1400083d0
   140006834:	mov    rcx,rsi
   140006837:	call   rbx
   140006839:	mov    rsi,QWORD PTR [rsp+0x30]
   14000683e:	test   rsi,rsi
   140006841:	je     0x140006858
   140006843:	mov    rax,QWORD PTR [rsi]
   140006846:	mov    rbx,QWORD PTR [rax+0x10]
   14000684a:	mov    rcx,rbx
   14000684d:	call   QWORD PTR [rip+0x1b7d]        # 0x1400083d0
   140006853:	mov    rcx,rsi
   140006856:	call   rbx
   140006858:	mov    rcx,QWORD PTR [rsp+0x48]
   14000685d:	test   rcx,rcx
   140006860:	je     0x140006868
   140006862:	call   QWORD PTR [rip+0x1a10]        # 0x140008278
   140006868:	mov    eax,edi
   14000686a:	mov    rcx,QWORD PTR [rbp+0x160]
   140006871:	xor    rcx,rsp
   140006874:	call   0x140006cd0
   140006879:	lea    r11,[rsp+0x270]
   140006881:	mov    rbx,QWORD PTR [r11+0x28]
   140006885:	mov    rsi,QWORD PTR [r11+0x30]
   140006889:	mov    rsp,r11
   14000688c:	pop    r14
   14000688e:	pop    rdi
   14000688f:	pop    rbp
   140006890:	ret    
   140006891:	int3   
   140006892:	int3   
   140006893:	int3   
   140006894:	int3   
   140006895:	int3   
   140006896:	int3   
   140006897:	int3   
   140006898:	mov    QWORD PTR [rsp+0x8],rbx
   14000689d:	push   rdi
   14000689e:	sub    rsp,0x20
   1400068a2:	mov    rdi,rcx
   1400068a5:	jmp    0x1400068b6
   1400068a7:	mov    rcx,rdi
   1400068aa:	call   0x140006dd8
   1400068af:	test   eax,eax
   1400068b1:	je     0x1400068c3
   1400068b3:	mov    rcx,rdi
   1400068b6:	call   0x140006dcc
   1400068bb:	mov    rbx,rax
   1400068be:	test   rax,rax
   1400068c1:	je     0x1400068a7
   1400068c3:	mov    rax,rbx
   1400068c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400068cb:	add    rsp,0x20
   1400068cf:	pop    rdi
   1400068d0:	ret    
   1400068d1:	int3   
   1400068d2:	int3   
   1400068d3:	int3   
   1400068d4:	int3   
   1400068d5:	int3   
   1400068d6:	int3   
   1400068d7:	int3   
   1400068d8:	jmp    0x140006de4
   1400068dd:	int3   
   1400068de:	int3   
   1400068df:	int3   
   1400068e0:	int3   
   1400068e1:	int3   
   1400068e2:	int3   
   1400068e3:	int3   
   1400068e4:	int3   
   1400068e5:	int3   
   1400068e6:	int3   
   1400068e7:	int3   
   1400068e8:	int3   
   1400068e9:	int3   
   1400068ea:	int3   
   1400068eb:	int3   
   1400068ec:	int3   
   1400068ed:	int3   
   1400068ee:	int3   
   1400068ef:	int3   
   1400068f0:	sub    rsp,0x28
   1400068f4:	mov    eax,0x5a4d
   1400068f9:	cmp    WORD PTR [rip+0xffffffffffff9700],ax        # 0x140000000
   140006900:	je     0x140006906
   140006902:	xor    eax,eax
   140006904:	jmp    0x140006955
   140006906:	movsxd rcx,DWORD PTR [rip+0xffffffffffff972f]        # 0x14000003c
   14000690d:	lea    rax,[rip+0xffffffffffff96ec]        # 0x140000000
   140006914:	add    rcx,rax
   140006917:	cmp    DWORD PTR [rcx],0x4550
   14000691d:	jne    0x140006902
   14000691f:	movzx  eax,WORD PTR [rcx+0x18]
   140006923:	cmp    eax,0x10b
   140006928:	je     0x140006944
   14000692a:	cmp    eax,0x20b
   14000692f:	jne    0x140006902
   140006931:	xor    eax,eax
   140006933:	cmp    DWORD PTR [rcx+0x84],0xe
   14000693a:	jbe    0x140006955
   14000693c:	cmp    DWORD PTR [rcx+0xf8],eax
   140006942:	jmp    0x140006952
   140006944:	xor    eax,eax
   140006946:	cmp    DWORD PTR [rcx+0x74],0xe
   14000694a:	jbe    0x140006955
   14000694c:	cmp    DWORD PTR [rcx+0xe8],eax
   140006952:	setne  al
   140006955:	mov    ecx,0x2
   14000695a:	mov    DWORD PTR [rip+0x46f0],eax        # 0x14000b050
   140006960:	call   0x140006eb8
   140006965:	mov    ecx,eax
   140006967:	call   QWORD PTR [rip+0x1983]        # 0x1400082f0
   14000696d:	mov    rcx,QWORD PTR [rip+0x193c]        # 0x1400082b0
   140006974:	or     rax,0xffffffffffffffff
   140006978:	mov    QWORD PTR [rip+0x4d21],rax        # 0x14000b6a0
   14000697f:	mov    QWORD PTR [rip+0x4d22],rax        # 0x14000b6a8
   140006986:	mov    eax,DWORD PTR [rip+0x46d8]        # 0x14000b064
   14000698c:	mov    DWORD PTR [rcx],eax
   14000698e:	mov    rcx,QWORD PTR [rip+0x1913]        # 0x1400082a8
   140006995:	mov    eax,DWORD PTR [rip+0x46bd]        # 0x14000b058
   14000699b:	mov    DWORD PTR [rcx],eax
   14000699d:	call   0x140004db0
   1400069a2:	cmp    DWORD PTR [rip+0x4657],0x0        # 0x14000b000
   1400069a9:	jne    0x1400069b8
   1400069ab:	lea    rcx,[rip+0xffffffffffffe3fe]        # 0x140004db0
   1400069b2:	call   QWORD PTR [rip+0x1918]        # 0x1400082d0
   1400069b8:	xor    eax,eax
   1400069ba:	add    rsp,0x28
   1400069be:	ret    
   1400069bf:	int3   
   1400069c0:	int3   
   1400069c1:	int3   
   1400069c2:	int3   
   1400069c3:	int3   
   1400069c4:	int3   
   1400069c5:	int3   
   1400069c6:	int3   
   1400069c7:	int3   
   1400069c8:	int3   
   1400069c9:	int3   
   1400069ca:	int3   
   1400069cb:	int3   
   1400069cc:	int3   
   1400069cd:	int3   
   1400069ce:	int3   
   1400069cf:	int3   
   1400069d0:	sub    rsp,0x38
   1400069d4:	mov    eax,DWORD PTR [rip+0x4686]        # 0x14000b060
   1400069da:	lea    r8,[rip+0x4667]        # 0x14000b048
   1400069e1:	mov    r9d,DWORD PTR [rip+0x4674]        # 0x14000b05c
   1400069e8:	lea    rdx,[rip+0x4651]        # 0x14000b040
   1400069ef:	mov    DWORD PTR [rip+0x465f],eax        # 0x14000b054
   1400069f5:	lea    rcx,[rip+0x463c]        # 0x14000b038
   1400069fc:	lea    rax,[rip+0x4651]        # 0x14000b054
   140006a03:	mov    QWORD PTR [rsp+0x20],rax
   140006a08:	call   QWORD PTR [rip+0x18ea]        # 0x1400082f8
   140006a0e:	mov    DWORD PTR [rip+0x4628],eax        # 0x14000b03c
   140006a14:	add    rsp,0x38
   140006a18:	ret    
   140006a19:	int3   
   140006a1a:	int3   
   140006a1b:	int3   
   140006a1c:	int3   
   140006a1d:	int3   
   140006a1e:	int3   
   140006a1f:	int3   
   140006a20:	mov    QWORD PTR [rsp+0x8],rbx
   140006a25:	mov    QWORD PTR [rsp+0x10],rsi
   140006a2a:	mov    QWORD PTR [rsp+0x18],rdi
   140006a2f:	push   r12
   140006a31:	push   r14
   140006a33:	push   r15
   140006a35:	sub    rsp,0xb0
   140006a3c:	xor    r15d,r15d
   140006a3f:	mov    DWORD PTR [rsp+0x20],r15d
   140006a44:	lea    rcx,[rsp+0x40]
   140006a49:	call   QWORD PTR [rip+0x1711]        # 0x140008160
   140006a4f:	nop
   140006a50:	mov    rax,QWORD PTR gs:0x30
   140006a59:	mov    rbx,QWORD PTR [rax+0x8]
   140006a5d:	mov    r14d,r15d
   140006a60:	xor    eax,eax
   140006a62:	lock cmpxchg QWORD PTR [rip+0x4c25],rbx        # 0x14000b690
   140006a6b:	je     0x140006a89
   140006a6d:	cmp    rax,rbx
   140006a70:	jne    0x140006a7c
   140006a72:	mov    edi,0x1
   140006a77:	mov    r14d,edi
   140006a7a:	jmp    0x140006a8e
   140006a7c:	mov    ecx,0x3e8
   140006a81:	call   QWORD PTR [rip+0x1619]        # 0x1400080a0
   140006a87:	jmp    0x140006a60
   140006a89:	mov    edi,0x1
   140006a8e:	mov    eax,DWORD PTR [rip+0x4c04]        # 0x14000b698
   140006a94:	cmp    eax,edi
   140006a96:	jne    0x140006aa6
   140006a98:	mov    esi,0x1f
   140006a9d:	mov    ecx,esi
   140006a9f:	call   0x140006f04
   140006aa4:	jmp    0x140006b17
   140006aa6:	mov    eax,DWORD PTR [rip+0x4bec]        # 0x14000b698
   140006aac:	test   eax,eax
   140006aae:	jne    0x140006b0c
   140006ab0:	mov    DWORD PTR [rip+0x4be2],edi        # 0x14000b698
   140006ab6:	lea    r12,[rip+0x195b]        # 0x140008418
   140006abd:	lea    rbx,[rip+0x193c]        # 0x140008400
   140006ac4:	mov    QWORD PTR [rsp+0x30],rbx
   140006ac9:	mov    eax,r15d
   140006acc:	mov    DWORD PTR [rsp+0x24],eax
   140006ad0:	cmp    rbx,r12
   140006ad3:	jae    0x140006afe
   140006ad5:	test   eax,eax
   140006ad7:	jne    0x140006b02
   140006ad9:	mov    rsi,QWORD PTR [rbx]
   140006adc:	test   rsi,rsi
   140006adf:	je     0x140006af3
   140006ae1:	mov    rcx,rsi
   140006ae4:	mov    rax,QWORD PTR [rip+0x18e5]        # 0x1400083d0
   140006aeb:	call   rax
   140006aed:	call   rsi
   140006aef:	mov    DWORD PTR [rsp+0x24],eax
   140006af3:	add    rbx,0x8
   140006af7:	mov    QWORD PTR [rsp+0x30],rbx
   140006afc:	jmp    0x140006ad0
   140006afe:	test   eax,eax
   140006b00:	je     0x140006b12
   140006b02:	mov    eax,0xff
   140006b07:	jmp    0x140006c73
   140006b0c:	mov    DWORD PTR [rip+0x4522],edi        # 0x14000b034
   140006b12:	mov    esi,0x1f
   140006b17:	mov    eax,DWORD PTR [rip+0x4b7b]        # 0x14000b698
   140006b1d:	cmp    eax,edi
   140006b1f:	jne    0x140006b3e
   140006b21:	lea    rdx,[rip+0x18d0]        # 0x1400083f8
   140006b28:	lea    rcx,[rip+0x18b1]        # 0x1400083e0
   140006b2f:	call   0x1400070ca
   140006b34:	mov    DWORD PTR [rip+0x4b5a],0x2        # 0x14000b698
   140006b3e:	test   r14d,r14d
   140006b41:	jne    0x140006b4d
   140006b43:	mov    rax,r15
   140006b46:	xchg   QWORD PTR [rip+0x4b43],rax        # 0x14000b690
   140006b4d:	cmp    QWORD PTR [rip+0x4b5c],r15        # 0x14000b6b0
   140006b54:	je     0x140006b84
   140006b56:	lea    rcx,[rip+0x4b53]        # 0x14000b6b0
   140006b5d:	call   0x140006f60
   140006b62:	test   eax,eax
   140006b64:	je     0x140006b84
   140006b66:	mov    rbx,QWORD PTR [rip+0x4b43]        # 0x14000b6b0
   140006b6d:	mov    rcx,rbx
   140006b70:	mov    rax,QWORD PTR [rip+0x1859]        # 0x1400083d0
   140006b77:	call   rax
   140006b79:	xor    r8d,r8d
   140006b7c:	lea    edx,[r8+0x2]
   140006b80:	xor    ecx,ecx
   140006b82:	call   rbx
   140006b84:	mov    rax,QWORD PTR [rip+0x172d]        # 0x1400082b8
   140006b8b:	mov    rdx,QWORD PTR [rax]
   140006b8e:	test   rdx,rdx
   140006b91:	jne    0x140006b9d
   140006b93:	mov    eax,0xff
   140006b98:	jmp    0x140006c73
   140006b9d:	mov    QWORD PTR [rsp+0x28],rdx
   140006ba2:	mov    ecx,DWORD PTR [rsp+0x20]
   140006ba6:	cmp    WORD PTR [rdx],0x20
   140006baa:	ja     0x140006c24
   140006bac:	cmp    WORD PTR [rdx],r15w
   140006bb0:	je     0x140006bb6
   140006bb2:	test   ecx,ecx
   140006bb4:	jne    0x140006c24
   140006bb6:	movzx  eax,WORD PTR [rdx]
   140006bb9:	sub    ax,di
   140006bbc:	cmp    ax,si
   140006bbf:	ja     0x140006bcc
   140006bc1:	add    rdx,0x2
   140006bc5:	mov    QWORD PTR [rsp+0x28],rdx
   140006bca:	jmp    0x140006bb6
   140006bcc:	mov    ecx,DWORD PTR [rsp+0x7c]
   140006bd0:	movzx  eax,WORD PTR [rsp+0x80]
   140006bd8:	mov    r9d,0xa
   140006bde:	and    cl,dil
   140006be1:	cmovne r9d,eax
   140006be5:	mov    r8,rdx
   140006be8:	xor    edx,edx
   140006bea:	lea    rcx,[rip+0xffffffffffff940f]        # 0x140000000
   140006bf1:	call   0x140002238
   140006bf6:	mov    DWORD PTR [rip+0x4434],eax        # 0x14000b030
   140006bfc:	cmp    DWORD PTR [rip+0x444d],r15d        # 0x14000b050
   140006c03:	jne    0x140006c0d
   140006c05:	mov    ecx,eax
   140006c07:	call   QWORD PTR [rip+0x16db]        # 0x1400082e8
   140006c0d:	cmp    DWORD PTR [rip+0x4420],r15d        # 0x14000b034
   140006c14:	jne    0x140006c22
   140006c16:	call   QWORD PTR [rip+0x16bc]        # 0x1400082d8
   140006c1c:	mov    eax,DWORD PTR [rip+0x440e]        # 0x14000b030
   140006c22:	jmp    0x140006c73
   140006c24:	cmp    WORD PTR [rdx],0x22
   140006c28:	jne    0x140006c38
   140006c2a:	mov    eax,r15d
   140006c2d:	test   ecx,ecx
   140006c2f:	sete   al
   140006c32:	mov    ecx,eax
   140006c34:	mov    DWORD PTR [rsp+0x20],eax
   140006c38:	add    rdx,0x2
   140006c3c:	mov    QWORD PTR [rsp+0x28],rdx
   140006c41:	jmp    0x140006ba6
   140006c46:	mov    DWORD PTR [rip+0x43e4],eax        # 0x14000b030
   140006c4c:	cmp    DWORD PTR [rip+0x43fd],0x0        # 0x14000b050
   140006c53:	jne    0x140006c5e
   140006c55:	mov    ecx,eax
   140006c57:	call   QWORD PTR [rip+0x1683]        # 0x1400082e0
   140006c5d:	int3   
   140006c5e:	cmp    DWORD PTR [rip+0x43cf],0x0        # 0x14000b034
   140006c65:	jne    0x140006c73
   140006c67:	call   QWORD PTR [rip+0x166b]        # 0x1400082d8
   140006c6d:	mov    eax,DWORD PTR [rip+0x43bd]        # 0x14000b030
   140006c73:	lea    r11,[rsp+0xb0]
   140006c7b:	mov    rbx,QWORD PTR [r11+0x20]
   140006c7f:	mov    rsi,QWORD PTR [r11+0x28]
   140006c83:	mov    rdi,QWORD PTR [r11+0x30]
   140006c87:	mov    rsp,r11
   140006c8a:	pop    r15
   140006c8c:	pop    r14
   140006c8e:	pop    r12
   140006c90:	ret    
   140006c91:	int3   
   140006c92:	int3   
   140006c93:	int3   
   140006c94:	int3   
   140006c95:	int3   
   140006c96:	int3   
   140006c97:	int3   
   140006c98:	int3   
   140006c99:	int3   
   140006c9a:	int3   
   140006c9b:	int3   
   140006c9c:	int3   
   140006c9d:	int3   
   140006c9e:	int3   
   140006c9f:	int3   
   140006ca0:	sub    rsp,0x28
   140006ca4:	call   0x140006ff4
   140006ca9:	add    rsp,0x28
   140006cad:	jmp    0x140006a20
   140006cb2:	int3   
   140006cb3:	int3   
   140006cb4:	int3   
   140006cb5:	int3   
   140006cb6:	int3   
   140006cb7:	int3   
   140006cb8:	int3   
   140006cb9:	int3   
   140006cba:	int3   
   140006cbb:	int3   
   140006cbc:	int3   
   140006cbd:	int3   
   140006cbe:	int3   
   140006cbf:	int3   
   140006cc0:	int3   
   140006cc1:	int3   
   140006cc2:	int3   
   140006cc3:	int3   
   140006cc4:	int3   
   140006cc5:	int3   
   140006cc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006cd0:	cmp    rcx,QWORD PTR [rip+0x4331]        # 0x14000b008
   140006cd7:	jne    0x140006ce9
   140006cd9:	rol    rcx,0x10
   140006cdd:	test   cx,0xffff
   140006ce2:	jne    0x140006ce5
   140006ce4:	ret    
   140006ce5:	ror    rcx,0x10
   140006ce9:	jmp    0x140007140
   140006cee:	int3   
   140006cef:	int3   
   140006cf0:	int3   
   140006cf1:	int3   
   140006cf2:	int3   
   140006cf3:	int3   
   140006cf4:	mov    QWORD PTR [rsp+0x8],rbx
   140006cf9:	push   rdi
   140006cfa:	sub    rsp,0x20
   140006cfe:	mov    rdi,rcx
   140006d01:	mov    rax,QWORD PTR [rip+0x49a0]        # 0x14000b6a8
   140006d08:	mov    QWORD PTR [rsp+0x38],rax
   140006d0d:	cmp    rax,0xffffffffffffffff
   140006d11:	jne    0x140006d2a
   140006d13:	mov    rbx,QWORD PTR [rip+0x15e6]        # 0x140008300
   140006d1a:	mov    rcx,rbx
   140006d1d:	call   QWORD PTR [rip+0x16ad]        # 0x1400083d0
   140006d23:	mov    rcx,rdi
   140006d26:	call   rbx
   140006d28:	jmp    0x140006d87
   140006d2a:	mov    ecx,0x8
   140006d2f:	call   0x1400072b8
   140006d34:	nop
   140006d35:	mov    rax,QWORD PTR [rip+0x496c]        # 0x14000b6a8
   140006d3c:	mov    QWORD PTR [rsp+0x38],rax
   140006d41:	mov    rax,QWORD PTR [rip+0x4958]        # 0x14000b6a0
   140006d48:	mov    QWORD PTR [rsp+0x40],rax
   140006d4d:	lea    r8,[rsp+0x40]
   140006d52:	lea    rdx,[rsp+0x38]
   140006d57:	mov    rcx,rdi
   140006d5a:	call   0x1400072d0
   140006d5f:	mov    rbx,rax
   140006d62:	mov    rdx,QWORD PTR [rsp+0x38]
   140006d67:	mov    QWORD PTR [rip+0x493a],rdx        # 0x14000b6a8
   140006d6e:	mov    rdx,QWORD PTR [rsp+0x40]
   140006d73:	mov    QWORD PTR [rip+0x4926],rdx        # 0x14000b6a0
   140006d7a:	mov    ecx,0x8
   140006d7f:	call   0x1400072c4
   140006d84:	mov    rax,rbx
   140006d87:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d8c:	add    rsp,0x20
   140006d90:	pop    rdi
   140006d91:	ret    
   140006d92:	int3   
   140006d93:	int3   
   140006d94:	int3   
   140006d95:	int3   
   140006d96:	int3   
   140006d97:	int3   
   140006d98:	sub    rsp,0x28
   140006d9c:	call   0x140006cf4
   140006da1:	neg    rax
   140006da4:	sbb    eax,eax
   140006da6:	neg    eax
   140006da8:	dec    eax
   140006daa:	add    rsp,0x28
   140006dae:	ret    
   140006daf:	int3   
   140006db0:	int3   
   140006db1:	int3   
   140006db2:	int3   
   140006db3:	int3   
   140006db4:	int3   
   140006db5:	int3   
   140006db6:	int3   
   140006db7:	int3   
   140006db8:	int3   
   140006db9:	int3   
   140006dba:	int3   
   140006dbb:	int3   
   140006dbc:	int3   
   140006dbd:	int3   
   140006dbe:	int3   
   140006dbf:	int3   
   140006dc0:	jmp    QWORD PTR [rip+0x1562]        # 0x140008328
   140006dc6:	int3   
   140006dc7:	int3   
   140006dc8:	int3   
   140006dc9:	int3   
   140006dca:	int3   
   140006dcb:	int3   
   140006dcc:	jmp    QWORD PTR [rip+0x154e]        # 0x140008320
   140006dd2:	int3   
   140006dd3:	int3   
   140006dd4:	int3   
   140006dd5:	int3   
   140006dd6:	int3   
   140006dd7:	int3   
   140006dd8:	jmp    QWORD PTR [rip+0x153a]        # 0x140008318
   140006dde:	int3   
   140006ddf:	int3   
   140006de0:	int3   
   140006de1:	int3   
   140006de2:	int3   
   140006de3:	int3   
   140006de4:	jmp    QWORD PTR [rip+0x1526]        # 0x140008310
   140006dea:	int3   
   140006deb:	int3   
   140006dec:	int3   
   140006ded:	int3   
   140006dee:	int3   
   140006def:	int3   
   140006df0:	sub    rsp,0x28
   140006df4:	mov    rax,QWORD PTR [rcx]
   140006df7:	cmp    DWORD PTR [rax],0xe06d7363
   140006dfd:	jne    0x140006e22
   140006dff:	cmp    DWORD PTR [rax+0x18],0x4
   140006e03:	jne    0x140006e22
   140006e05:	mov    ecx,DWORD PTR [rax+0x20]
   140006e08:	lea    eax,[rcx-0x19930520]
   140006e0e:	cmp    eax,0x2
   140006e11:	jbe    0x140006e1b
   140006e13:	cmp    ecx,0x1994000
   140006e19:	jne    0x140006e22
   140006e1b:	call   QWORD PTR [rip+0x1517]        # 0x140008338
   140006e21:	int3   
   140006e22:	xor    eax,eax
   140006e24:	add    rsp,0x28
   140006e28:	ret    
   140006e29:	int3   
   140006e2a:	int3   
   140006e2b:	int3   
   140006e2c:	int3   
   140006e2d:	int3   
   140006e2e:	int3   
   140006e2f:	int3   
   140006e30:	sub    rsp,0x28
   140006e34:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140006df0
   140006e3b:	call   QWORD PTR [rip+0x12ef]        # 0x140008130
   140006e41:	xor    eax,eax
   140006e43:	add    rsp,0x28
   140006e47:	ret    
   140006e48:	int3   
   140006e49:	int3   
   140006e4a:	int3   
   140006e4b:	int3   
   140006e4c:	int3   
   140006e4d:	int3   
   140006e4e:	jmp    QWORD PTR [rip+0x14b4]        # 0x140008308
   140006e54:	int3   
   140006e55:	int3   
   140006e56:	int3   
   140006e57:	int3   
   140006e58:	int3   
   140006e59:	int3   
   140006e5a:	int3   
   140006e5b:	int3   
   140006e5c:	sub    rsp,0x18
   140006e60:	xor    edx,edx
   140006e62:	lea    rax,[rcx-0x1]
   140006e66:	cmp    rax,0xfffffffffffffffd
   140006e6a:	ja     0x140006ea8
   140006e6c:	mov    eax,0x5a4d
   140006e71:	cmp    WORD PTR [rcx],ax
   140006e74:	jne    0x140006ea0
   140006e76:	cmp    DWORD PTR [rcx+0x3c],edx
   140006e79:	jl     0x140006ea0
   140006e7b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140006e82:	jae    0x140006ea0
   140006e84:	movsxd rax,DWORD PTR [rcx+0x3c]
   140006e88:	add    rax,rcx
   140006e8b:	mov    QWORD PTR [rsp],rax
   140006e8f:	cmp    DWORD PTR [rax],0x4550
   140006e95:	cmovne rax,rdx
   140006e99:	mov    rdx,rax
   140006e9c:	mov    QWORD PTR [rsp],rax
   140006ea0:	jmp    0x140006ea8
   140006ea2:	xor    edx,edx
   140006ea4:	mov    QWORD PTR [rsp],rdx
   140006ea8:	mov    rax,rdx
   140006eab:	add    rsp,0x18
   140006eaf:	ret    
   140006eb0:	int3   
   140006eb1:	int3   
   140006eb2:	int3   
   140006eb3:	int3   
   140006eb4:	int3   
   140006eb5:	int3   
   140006eb6:	int3   
   140006eb7:	int3   
   140006eb8:	rex push rbx
   140006eba:	sub    rsp,0x20
   140006ebe:	mov    ebx,ecx
   140006ec0:	xor    ecx,ecx
   140006ec2:	call   QWORD PTR [rip+0x1260]        # 0x140008128
   140006ec8:	test   rax,rax
   140006ecb:	je     0x140006ef5
   140006ecd:	mov    rcx,rax
   140006ed0:	call   0x140006e5c
   140006ed5:	test   rax,rax
   140006ed8:	je     0x140006ef5
   140006eda:	mov    ecx,0x2
   140006edf:	cmp    WORD PTR [rax+0x5c],cx
   140006ee3:	jne    0x140006ee9
   140006ee5:	mov    eax,ecx
   140006ee7:	jmp    0x140006ef7
   140006ee9:	cmp    WORD PTR [rax+0x5c],0x3
   140006eee:	mov    eax,0x1
   140006ef3:	je     0x140006ef7
   140006ef5:	mov    eax,ebx
   140006ef7:	add    rsp,0x20
   140006efb:	pop    rbx
   140006efc:	ret    
   140006efd:	int3   
   140006efe:	int3   
   140006eff:	int3   
   140006f00:	int3   
   140006f01:	int3   
   140006f02:	int3   
   140006f03:	int3   
   140006f04:	jmp    QWORD PTR [rip+0x143e]        # 0x140008348
   140006f0a:	int3   
   140006f0b:	int3   
   140006f0c:	int3   
   140006f0d:	int3   
   140006f0e:	int3   
   140006f0f:	int3   
   140006f10:	movsxd r8,DWORD PTR [rcx+0x3c]
   140006f14:	xor    r9d,r9d
   140006f17:	add    r8,rcx
   140006f1a:	mov    r10,rdx
   140006f1d:	movzx  eax,WORD PTR [r8+0x14]
   140006f22:	movzx  r11d,WORD PTR [r8+0x6]
   140006f27:	add    rax,0x18
   140006f2b:	add    rax,r8
   140006f2e:	test   r11d,r11d
   140006f31:	je     0x140006f51
   140006f33:	mov    edx,DWORD PTR [rax+0xc]
   140006f36:	cmp    r10,rdx
   140006f39:	jb     0x140006f45
   140006f3b:	mov    ecx,DWORD PTR [rax+0x8]
   140006f3e:	add    ecx,edx
   140006f40:	cmp    r10,rcx
   140006f43:	jb     0x140006f53
   140006f45:	inc    r9d
   140006f48:	add    rax,0x28
   140006f4c:	cmp    r9d,r11d
   140006f4f:	jb     0x140006f33
   140006f51:	xor    eax,eax
   140006f53:	ret    
   140006f54:	int3   
   140006f55:	int3   
   140006f56:	int3   
   140006f57:	int3   
   140006f58:	int3   
   140006f59:	int3   
   140006f5a:	int3   
   140006f5b:	int3   
   140006f5c:	int3   
   140006f5d:	int3   
   140006f5e:	int3   
   140006f5f:	int3   
   140006f60:	mov    QWORD PTR [rsp+0x8],rbx
   140006f65:	push   rdi
   140006f66:	sub    rsp,0x20
   140006f6a:	mov    rbx,rcx
   140006f6d:	lea    rdi,[rip+0xffffffffffff908c]        # 0x140000000
   140006f74:	mov    rcx,rdi
   140006f77:	call   0x140006fc0
   140006f7c:	test   eax,eax
   140006f7e:	je     0x140006fa2
   140006f80:	sub    rbx,rdi
   140006f83:	mov    rdx,rbx
   140006f86:	mov    rcx,rdi
   140006f89:	call   0x140006f10
   140006f8e:	test   rax,rax
   140006f91:	je     0x140006fa2
   140006f93:	mov    eax,DWORD PTR [rax+0x24]
   140006f96:	shr    eax,0x1f
   140006f99:	not    eax
   140006f9b:	and    eax,0x1
   140006f9e:	jmp    0x140006fa2
   140006fa0:	xor    eax,eax
   140006fa2:	mov    rbx,QWORD PTR [rsp+0x30]
   140006fa7:	add    rsp,0x20
   140006fab:	pop    rdi
   140006fac:	ret    
   140006fad:	int3   
   140006fae:	int3   
   140006faf:	int3   
   140006fb0:	int3   
   140006fb1:	int3   
   140006fb2:	int3   
   140006fb3:	int3   
   140006fb4:	int3   
   140006fb5:	int3   
   140006fb6:	int3   
   140006fb7:	int3   
   140006fb8:	int3   
   140006fb9:	int3   
   140006fba:	int3   
   140006fbb:	int3   
   140006fbc:	int3   
   140006fbd:	int3   
   140006fbe:	int3   
   140006fbf:	int3   
   140006fc0:	mov    rax,rcx
   140006fc3:	mov    ecx,0x5a4d
   140006fc8:	cmp    WORD PTR [rax],cx
   140006fcb:	je     0x140006fd0
   140006fcd:	xor    eax,eax
   140006fcf:	ret    
   140006fd0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140006fd4:	add    rcx,rax
   140006fd7:	xor    eax,eax
   140006fd9:	cmp    DWORD PTR [rcx],0x4550
   140006fdf:	jne    0x140006fed
   140006fe1:	mov    edx,0x20b
   140006fe6:	cmp    WORD PTR [rcx+0x18],dx
   140006fea:	sete   al
   140006fed:	ret    
   140006fee:	int3   
   140006fef:	int3   
   140006ff0:	int3   
   140006ff1:	int3   
   140006ff2:	int3   
   140006ff3:	int3   
   140006ff4:	mov    QWORD PTR [rsp+0x20],rbx
   140006ff9:	push   rbp
   140006ffa:	mov    rbp,rsp
   140006ffd:	sub    rsp,0x20
   140007001:	and    QWORD PTR [rbp+0x18],0x0
   140007006:	movabs rbx,0x2b992ddfa232
   140007010:	mov    rax,QWORD PTR [rip+0x3ff1]        # 0x14000b008
   140007017:	cmp    rax,rbx
   14000701a:	jne    0x1400070af
   140007020:	lea    rcx,[rbp+0x18]
   140007024:	call   QWORD PTR [rip+0x10e6]        # 0x140008110
   14000702a:	mov    rax,QWORD PTR [rbp+0x18]
   14000702e:	mov    QWORD PTR [rbp+0x10],rax
   140007032:	call   QWORD PTR [rip+0x10a0]        # 0x1400080d8
   140007038:	mov    eax,eax
   14000703a:	xor    QWORD PTR [rbp+0x10],rax
   14000703e:	call   QWORD PTR [rip+0x10d4]        # 0x140008118
   140007044:	mov    eax,eax
   140007046:	xor    QWORD PTR [rbp+0x10],rax
   14000704a:	call   QWORD PTR [rip+0x10b8]        # 0x140008108
   140007050:	mov    eax,eax
   140007052:	shl    rax,0x18
   140007056:	xor    QWORD PTR [rbp+0x10],rax
   14000705a:	call   QWORD PTR [rip+0x10a8]        # 0x140008108
   140007060:	mov    eax,eax
   140007062:	lea    rcx,[rbp+0x10]
   140007066:	xor    rax,QWORD PTR [rbp+0x10]
   14000706a:	xor    rax,rcx
   14000706d:	lea    rcx,[rbp+0x20]
   140007071:	mov    QWORD PTR [rbp+0x10],rax
   140007075:	call   QWORD PTR [rip+0x10a5]        # 0x140008120
   14000707b:	mov    eax,DWORD PTR [rbp+0x20]
   14000707e:	movabs rcx,0xffffffffffff
   140007088:	shl    rax,0x20
   14000708c:	xor    rax,QWORD PTR [rbp+0x20]
   140007090:	xor    rax,QWORD PTR [rbp+0x10]
   140007094:	and    rax,rcx
   140007097:	movabs rcx,0x2b992ddfa233
   1400070a1:	cmp    rax,rbx
   1400070a4:	cmove  rax,rcx
   1400070a8:	mov    QWORD PTR [rip+0x3f59],rax        # 0x14000b008
   1400070af:	mov    rbx,QWORD PTR [rsp+0x48]
   1400070b4:	not    rax
   1400070b7:	mov    QWORD PTR [rip+0x3f52],rax        # 0x14000b010
   1400070be:	add    rsp,0x20
   1400070c2:	pop    rbp
   1400070c3:	ret    
   1400070c4:	int3   
   1400070c5:	int3   
   1400070c6:	int3   
   1400070c7:	int3   
   1400070c8:	int3   
   1400070c9:	int3   
   1400070ca:	jmp    QWORD PTR [rip+0x11f8]        # 0x1400082c8
   1400070d0:	int3   
   1400070d1:	int3   
   1400070d2:	int3   
   1400070d3:	int3   
   1400070d4:	int3   
   1400070d5:	int3   
   1400070d6:	jmp    QWORD PTR [rip+0x11e4]        # 0x1400082c0
   1400070dc:	int3   
   1400070dd:	int3   
   1400070de:	int3   
   1400070df:	int3   
   1400070e0:	int3   
   1400070e1:	int3   
   1400070e2:	int3   
   1400070e3:	int3   
   1400070e4:	int3   
   1400070e5:	int3   
   1400070e6:	int3   
   1400070e7:	int3   
   1400070e8:	int3   
   1400070e9:	int3   
   1400070ea:	int3   
   1400070eb:	int3   
   1400070ec:	int3   
   1400070ed:	int3   
   1400070ee:	int3   
   1400070ef:	int3   
   1400070f0:	ret    0x0
   1400070f3:	int3   
   1400070f4:	int3   
   1400070f5:	int3   
   1400070f6:	int3   
   1400070f7:	int3   
   1400070f8:	int3   
   1400070f9:	int3   
   1400070fa:	int3   
   1400070fb:	int3   
   1400070fc:	rex push rbx
   1400070fe:	sub    rsp,0x20
   140007102:	mov    rbx,rcx
   140007105:	xor    ecx,ecx
   140007107:	call   QWORD PTR [rip+0x1023]        # 0x140008130
   14000710d:	mov    rcx,rbx
   140007110:	call   QWORD PTR [rip+0xfea]        # 0x140008100
   140007116:	call   QWORD PTR [rip+0x104c]        # 0x140008168
   14000711c:	mov    rcx,rax
   14000711f:	mov    edx,0xc0000409
   140007124:	add    rsp,0x20
   140007128:	pop    rbx
   140007129:	rex.W jmp QWORD PTR [rip+0xfc8]        # 0x1400080f8
   140007130:	int3   
   140007131:	int3   
   140007132:	int3   
   140007133:	int3   
   140007134:	int3   
   140007135:	int3   
   140007136:	int3   
   140007137:	int3   
   140007138:	int3   
   140007139:	int3   
   14000713a:	int3   
   14000713b:	int3   
   14000713c:	int3   
   14000713d:	int3   
   14000713e:	int3   
   14000713f:	int3   
   140007140:	mov    QWORD PTR [rsp+0x8],rcx
   140007145:	sub    rsp,0x88
   14000714c:	lea    rcx,[rip+0x3fbd]        # 0x14000b110
   140007153:	call   QWORD PTR [rip+0x1217]        # 0x140008370
   140007159:	mov    rax,QWORD PTR [rip+0x40a8]        # 0x14000b208
   140007160:	mov    QWORD PTR [rsp+0x48],rax
   140007165:	xor    r8d,r8d
   140007168:	lea    rdx,[rsp+0x50]
   14000716d:	mov    rcx,QWORD PTR [rsp+0x48]
   140007172:	call   QWORD PTR [rip+0x11f0]        # 0x140008368
   140007178:	mov    QWORD PTR [rsp+0x40],rax
   14000717d:	cmp    QWORD PTR [rsp+0x40],0x0
   140007183:	je     0x1400071c7
   140007185:	mov    QWORD PTR [rsp+0x38],0x0
   14000718e:	lea    rax,[rsp+0x58]
   140007193:	mov    QWORD PTR [rsp+0x30],rax
   140007198:	lea    rax,[rsp+0x60]
   14000719d:	mov    QWORD PTR [rsp+0x28],rax
   1400071a2:	lea    rax,[rip+0x3f67]        # 0x14000b110
   1400071a9:	mov    QWORD PTR [rsp+0x20],rax
   1400071ae:	mov    r9,QWORD PTR [rsp+0x40]
   1400071b3:	mov    r8,QWORD PTR [rsp+0x48]
   1400071b8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400071bd:	xor    ecx,ecx
   1400071bf:	call   QWORD PTR [rip+0x119b]        # 0x140008360
   1400071c5:	jmp    0x1400071ea
   1400071c7:	mov    rax,QWORD PTR [rip+0x3fda]        # 0x14000b1a8
   1400071ce:	mov    rax,QWORD PTR [rax]
   1400071d1:	mov    QWORD PTR [rip+0x4030],rax        # 0x14000b208
   1400071d8:	mov    rax,QWORD PTR [rip+0x3fc9]        # 0x14000b1a8
   1400071df:	add    rax,0x8
   1400071e3:	mov    QWORD PTR [rip+0x3fbe],rax        # 0x14000b1a8
   1400071ea:	mov    rax,QWORD PTR [rip+0x4017]        # 0x14000b208
   1400071f1:	mov    QWORD PTR [rip+0x3e88],rax        # 0x14000b080
   1400071f8:	mov    rax,QWORD PTR [rsp+0x90]
   140007200:	mov    QWORD PTR [rip+0x3f89],rax        # 0x14000b190
   140007207:	mov    DWORD PTR [rip+0x3e5f],0xc0000409        # 0x14000b070
   140007211:	mov    DWORD PTR [rip+0x3e59],0x1        # 0x14000b074
   14000721b:	mov    DWORD PTR [rip+0x3e63],0x3        # 0x14000b088
   140007225:	mov    eax,0x8
   14000722a:	imul   rax,rax,0x0
   14000722e:	lea    rcx,[rip+0x3e5b]        # 0x14000b090
   140007235:	mov    QWORD PTR [rcx+rax*1],0x2
   14000723d:	mov    eax,0x8
   140007242:	imul   rax,rax,0x1
   140007246:	lea    rcx,[rip+0x3e43]        # 0x14000b090
   14000724d:	mov    rdx,QWORD PTR [rip+0x3db4]        # 0x14000b008
   140007254:	mov    QWORD PTR [rcx+rax*1],rdx
   140007258:	mov    eax,0x8
   14000725d:	imul   rax,rax,0x2
   140007261:	lea    rcx,[rip+0x3e28]        # 0x14000b090
   140007268:	mov    rdx,QWORD PTR [rip+0x3da1]        # 0x14000b010
   14000726f:	mov    QWORD PTR [rcx+rax*1],rdx
   140007273:	mov    eax,0x8
   140007278:	imul   rax,rax,0x0
   14000727c:	mov    rcx,QWORD PTR [rip+0x3d85]        # 0x14000b008
   140007283:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140007288:	mov    eax,0x8
   14000728d:	imul   rax,rax,0x1
   140007291:	mov    rcx,QWORD PTR [rip+0x3d78]        # 0x14000b010
   140007298:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000729d:	lea    rcx,[rip+0x122c]        # 0x1400084d0
   1400072a4:	call   0x1400070fc
   1400072a9:	add    rsp,0x88
   1400072b0:	ret    
   1400072b1:	int3   
   1400072b2:	int3   
   1400072b3:	int3   
   1400072b4:	int3   
   1400072b5:	int3   
   1400072b6:	int3   
   1400072b7:	int3   
   1400072b8:	jmp    QWORD PTR [rip+0xfe2]        # 0x1400082a0
   1400072be:	int3   
   1400072bf:	int3   
   1400072c0:	int3   
   1400072c1:	int3   
   1400072c2:	int3   
   1400072c3:	int3   
   1400072c4:	jmp    QWORD PTR [rip+0xfce]        # 0x140008298
   1400072ca:	int3   
   1400072cb:	int3   
   1400072cc:	int3   
   1400072cd:	int3   
   1400072ce:	int3   
   1400072cf:	int3   
   1400072d0:	jmp    QWORD PTR [rip+0xfba]        # 0x140008290
   1400072d6:	int3   
   1400072d7:	int3   
   1400072d8:	int3   
   1400072d9:	int3   
   1400072da:	int3   
   1400072db:	int3   
   1400072dc:	int3   
   1400072dd:	int3   
   1400072de:	int3   
   1400072df:	int3   
   1400072e0:	int3   
   1400072e1:	int3   
   1400072e2:	int3   
   1400072e3:	int3   
   1400072e4:	int3   
   1400072e5:	int3   
   1400072e6:	int3   
   1400072e7:	int3   
   1400072e8:	sub    rsp,0x28
   1400072ec:	mov    r8,QWORD PTR [r9+0x38]
   1400072f0:	mov    rcx,rdx
   1400072f3:	mov    rdx,r9
   1400072f6:	call   0x14000730c
   1400072fb:	mov    eax,0x1
   140007300:	add    rsp,0x28
   140007304:	ret    
   140007305:	int3   
   140007306:	int3   
   140007307:	int3   
   140007308:	int3   
   140007309:	int3   
   14000730a:	int3   
   14000730b:	int3   
   14000730c:	rex push rbx
   14000730e:	sub    rsp,0x20
   140007312:	mov    r11d,DWORD PTR [r8]
   140007315:	mov    rbx,rdx
   140007318:	and    r11d,0xfffffff8
   14000731c:	mov    r9,rcx
   14000731f:	test   BYTE PTR [r8],0x4
   140007323:	mov    r10,rcx
   140007326:	je     0x14000733b
   140007328:	mov    eax,DWORD PTR [r8+0x8]
   14000732c:	movsxd r10,DWORD PTR [r8+0x4]
   140007330:	neg    eax
   140007332:	add    r10,rcx
   140007335:	movsxd rcx,eax
   140007338:	and    r10,rcx
   14000733b:	movsxd rax,r11d
   14000733e:	mov    rdx,QWORD PTR [rax+r10*1]
   140007342:	mov    rax,QWORD PTR [rbx+0x10]
   140007346:	mov    ecx,DWORD PTR [rax+0x8]
   140007349:	add    rcx,QWORD PTR [rbx+0x8]
   14000734d:	test   BYTE PTR [rcx+0x3],0xf
   140007351:	je     0x14000735f
   140007353:	movzx  eax,BYTE PTR [rcx+0x3]
   140007357:	and    eax,0xfffffff0
   14000735a:	cdqe   
   14000735c:	add    r9,rax
   14000735f:	xor    r9,rdx
   140007362:	mov    rcx,r9
   140007365:	add    rsp,0x20
   140007369:	pop    rbx
   14000736a:	jmp    0x140006cd0
   14000736f:	int3   
   140007370:	int3   
   140007371:	int3   
   140007372:	int3   
   140007373:	int3   
   140007374:	int3   
   140007375:	int3   
   140007376:	jmp    QWORD PTR [rip+0xfc4]        # 0x140008340
   14000737c:	int3   
   14000737d:	int3   
   14000737e:	int3   
   14000737f:	int3   
   140007380:	int3   
   140007381:	int3   
   140007382:	jmp    QWORD PTR [rip+0xfc8]        # 0x140008350
   140007388:	int3   
   140007389:	int3   
   14000738a:	int3   
   14000738b:	int3   
   14000738c:	int3   
   14000738d:	int3   
   14000738e:	int3   
   14000738f:	int3   
   140007390:	int3   
   140007391:	int3   
   140007392:	int3   
   140007393:	int3   
   140007394:	int3   
   140007395:	int3   
   140007396:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400073a0:	jmp    rax
   1400073a2:	int3   
   1400073a3:	int3   
   1400073a4:	int3   
   1400073a5:	int3   
   1400073a6:	int3   
   1400073a7:	int3   
   1400073a8:	int3   
   1400073a9:	int3   
   1400073aa:	int3   
   1400073ab:	int3   
   1400073ac:	int3   
   1400073ad:	int3   
   1400073ae:	int3   
   1400073af:	int3   
   1400073b0:	int3   
   1400073b1:	int3   
   1400073b2:	int3   
   1400073b3:	int3   
   1400073b4:	int3   
   1400073b5:	int3   
   1400073b6:	rex push rbp
   1400073b8:	sub    rsp,0x20
   1400073bc:	mov    rbp,rdx
   1400073bf:	mov    rax,QWORD PTR [rcx]
   1400073c2:	mov    rdx,rcx
   1400073c5:	mov    ecx,DWORD PTR [rax]
   1400073c7:	call   0x140006e4e
   1400073cc:	nop
   1400073cd:	add    rsp,0x20
   1400073d1:	pop    rbp
   1400073d2:	ret    
   1400073d3:	int3   
   1400073d4:	int3   
   1400073d5:	int3   
   1400073d6:	int3   
   1400073d7:	int3   
   1400073d8:	int3   
   1400073d9:	int3   
   1400073da:	rex push rbp
   1400073dc:	sub    rsp,0x20
   1400073e0:	mov    rbp,rdx
   1400073e3:	mov    ecx,0x8
   1400073e8:	call   0x1400072c4
   1400073ed:	nop
   1400073ee:	add    rsp,0x20
   1400073f2:	pop    rbp
   1400073f3:	ret    
   1400073f4:	int3   
   1400073f5:	int3   
   1400073f6:	int3   
   1400073f7:	int3   
   1400073f8:	int3   
   1400073f9:	int3   
   1400073fa:	int3   
   1400073fb:	int3   
   1400073fc:	int3   
   1400073fd:	int3   
   1400073fe:	int3   
   1400073ff:	int3   
   140007400:	rex push rbp
   140007402:	sub    rsp,0x20
   140007406:	mov    rbp,rdx
   140007409:	mov    rax,QWORD PTR [rcx]
   14000740c:	xor    ecx,ecx
   14000740e:	cmp    DWORD PTR [rax],0xc0000005
   140007414:	sete   cl
   140007417:	mov    eax,ecx
   140007419:	add    rsp,0x20
   14000741d:	pop    rbp
   14000741e:	ret    
   14000741f:	int3   
   140007420:	int3   
   140007421:	int3   
   140007422:	int3   
   140007423:	int3   
   140007424:	int3   
   140007425:	int3   
   140007426:	int3   
   140007427:	int3   
   140007428:	int3   
   140007429:	int3   
   14000742a:	int3   
   14000742b:	int3   
   14000742c:	int3   
   14000742d:	int3   
   14000742e:	int3   
   14000742f:	int3   
   140007430:	sub    rsp,0x28
   140007434:	cmp    BYTE PTR [rip+0x423d],0x0        # 0x14000b678
   14000743b:	je     0x14000744a
   14000743d:	mov    rcx,QWORD PTR [rip+0x422c]        # 0x14000b670
   140007444:	call   QWORD PTR [rip+0xf3e]        # 0x140008388
   14000744a:	add    rsp,0x28
   14000744e:	ret    

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	sbb    BYTE PTR [rbp+0x0],bl
   140008006:	add    BYTE PTR [rax],al
   140008008:	sub    BYTE PTR [rbp+0x0],bl
   14000800e:	add    BYTE PTR [rax],al
   140008010:	rex popf 
   140008012:	add    BYTE PTR [rax],al
   140008014:	add    BYTE PTR [rax],al
   140008016:	add    BYTE PTR [rax],al
   140008018:	push   rsi
   140008019:	popf   
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	add    BYTE PTR [rax],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	ins    BYTE PTR es:[rdi],dx
   140008021:	popf   
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	(bad)  
   140008029:	popf   
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	add    BYTE PTR [rax],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	(bad)  
   140008031:	popf   
   140008032:	add    BYTE PTR [rax],al
   140008034:	add    BYTE PTR [rax],al
   140008036:	add    BYTE PTR [rax],al
   140008038:	scas   al,BYTE PTR es:[rdi]
   140008039:	popf   
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	add    BYTE PTR [rax],al
   14000803e:	add    BYTE PTR [rax],al
   140008040:	mov    esi,0x9d
   140008045:	add    BYTE PTR [rax],al
   140008047:	add    al,bl
   140008049:	popf   
   14000804a:	add    BYTE PTR [rax],al
   14000804c:	add    BYTE PTR [rax],al
   14000804e:	add    BYTE PTR [rax],al
   140008050:	test   BYTE PTR [rbx+0x0],ah
   140008056:	add    BYTE PTR [rax],al
   140008058:	je     0x140007ffd
   14000805a:	add    BYTE PTR [rax],al
   14000805c:	add    BYTE PTR [rax],al
   14000805e:	add    BYTE PTR [rax],al
   140008060:	(bad)  
   140008062:	add    BYTE PTR [rax],al
   140008064:	add    BYTE PTR [rax],al
   140008066:	add    BYTE PTR [rax],al
   140008068:	rex.WR movabs ds:0xa3aa000000000000,rax
   140008072:	add    BYTE PTR [rax],al
   140008074:	add    BYTE PTR [rax],al
   140008076:	add    BYTE PTR [rax],al
   140008078:	mov    ah,0xa3
   14000807a:	add    BYTE PTR [rax],al
   14000807c:	add    BYTE PTR [rax],al
   14000807e:	add    BYTE PTR [rax],al
   140008080:	mov    esi,0xa3
   140008085:	add    BYTE PTR [rax],al
   140008087:	add    BYTE PTR [rbx+riz*4+0x0],dl
	...
   140008096:	add    BYTE PTR [rax],al
   140008098:	ficomp DWORD PTR [rsi+0x0]
   14000809e:	add    BYTE PTR [rax],al
   1400080a0:	(bad)  
   1400080a1:	sahf   
   1400080a2:	add    BYTE PTR [rax],al
   1400080a4:	add    BYTE PTR [rax],al
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	repnz sahf 
   1400080aa:	add    BYTE PTR [rax],al
   1400080ac:	add    BYTE PTR [rax],al
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	or     BYTE PTR [rdi+0x0],bl
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	sbb    BYTE PTR [rdi+0x0],bl
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	and    al,0x9f
   1400080c2:	add    BYTE PTR [rax],al
   1400080c4:	add    BYTE PTR [rax],al
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	ss lahf 
   1400080ca:	add    BYTE PTR [rax],al
   1400080cc:	add    BYTE PTR [rax],al
   1400080ce:	add    BYTE PTR [rax],al
   1400080d0:	rex.W lahf 
   1400080d2:	add    BYTE PTR [rax],al
   1400080d4:	add    BYTE PTR [rax],al
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	(bad)  
   1400080d9:	sahf   
   1400080da:	add    BYTE PTR [rax],al
   1400080dc:	add    BYTE PTR [rax],al
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	lods   al,BYTE PTR ds:[rsi]
   1400080e1:	sahf   
   1400080e2:	add    BYTE PTR [rax],al
   1400080e4:	add    BYTE PTR [rax],al
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	sahf   
   1400080e9:	sahf   
   1400080ea:	add    BYTE PTR [rax],al
   1400080ec:	add    BYTE PTR [rax],al
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	sahf   
   1400080f1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400080f2:	add    BYTE PTR [rax],al
   1400080f4:	add    BYTE PTR [rax],al
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	mov    ah,BYTE PTR [rax+rax*1+0x0]
   1400080ff:	add    BYTE PTR [rsi-0x5c],ch
   140008102:	add    BYTE PTR [rax],al
   140008104:	add    BYTE PTR [rax],al
   140008106:	add    BYTE PTR [rax],al
   140008108:	pop    rsi
   140008109:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	add    BYTE PTR [rax],al
   14000810e:	add    BYTE PTR [rax],al
   140008110:	rex.R movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008112:	add    BYTE PTR [rax],al
   140008114:	add    BYTE PTR [rax],al
   140008116:	add    BYTE PTR [rax],al
   140008118:	movs   BYTE PTR es:[rdi],BYTE PTR cs:[rsi]
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	add    BYTE PTR [rax],al
   14000811e:	add    BYTE PTR [rax],al
   140008120:	adc    al,0xa4
   140008122:	add    BYTE PTR [rax],al
   140008124:	add    BYTE PTR [rax],al
   140008126:	add    BYTE PTR [rax],al
   140008128:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000812f:	add    dl,ah
   140008131:	movabs ds:0x9df6000000000000,eax
   14000813a:	add    BYTE PTR [rax],al
   14000813c:	add    BYTE PTR [rax],al
   14000813e:	add    BYTE PTR [rax],al
   140008140:	add    bl,BYTE PTR [rsi+0x0]
   140008146:	add    BYTE PTR [rax],al
   140008148:	adc    al,0x9e
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	add    BYTE PTR [rax],al
   14000814e:	add    BYTE PTR [rax],al
   140008150:	and    BYTE PTR [rsi+0x0],bl
   140008156:	add    BYTE PTR [rax],al
   140008158:	cs sahf 
   14000815a:	add    BYTE PTR [rax],al
   14000815c:	add    BYTE PTR [rax],al
   14000815e:	add    BYTE PTR [rax],al
   140008160:	shl    BYTE PTR [rbx+0x0],1
   140008166:	add    BYTE PTR [rax],al
   140008168:	mov    bl,BYTE PTR [rsi+0x0]
   14000816e:	add    BYTE PTR [rax],al
   140008170:	je     0x140008110
   140008172:	add    BYTE PTR [rax],al
   140008174:	add    BYTE PTR [rax],al
   140008176:	add    BYTE PTR [rax],al
   140008178:	data16 sahf 
   14000817a:	add    BYTE PTR [rax],al
   14000817c:	add    BYTE PTR [rax],al
   14000817e:	add    BYTE PTR [rax],al
   140008180:	push   rsi
   140008181:	sahf   
   140008182:	add    BYTE PTR [rax],al
   140008184:	add    BYTE PTR [rax],al
   140008186:	add    BYTE PTR [rax],al
   140008188:	rex sahf 
	...
   140008196:	add    BYTE PTR [rax],al
   140008198:	xchg   esi,eax
   140008199:	add    BYTE PTR [rax],al
   14000819b:	add    BYTE PTR [rax],al
   14000819d:	add    BYTE PTR [rax],al
   14000819f:	add    BYTE PTR [rdi],0x0
   1400081a2:	add    BYTE PTR [rax],al
   1400081a4:	add    BYTE PTR [rax],al
   1400081a6:	add    BYTE PTR [rax+0x2],al
   1400081ac:	add    BYTE PTR [rax],al
   1400081ae:	add    BYTE PTR [rax+0x6],al
   1400081b4:	add    BYTE PTR [rax],al
   1400081b6:	add    BYTE PTR [rax+0x0],al
   1400081bc:	add    BYTE PTR [rax],al
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	movabs cs:0x0,eax
   1400081ca:	add    BYTE PTR [rax],al
   1400081cc:	add    BYTE PTR [rax],al
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	xchg   esp,eax
   1400081d1:	lahf   
   1400081d2:	add    BYTE PTR [rax],al
   1400081d4:	add    BYTE PTR [rax],al
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	jbe    0x140008179
   1400081da:	add    BYTE PTR [rax],al
   1400081dc:	add    BYTE PTR [rax],al
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	(bad)  
   1400081e1:	lahf   
   1400081e2:	add    BYTE PTR [rax],al
   1400081e4:	add    BYTE PTR [rax],al
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	xor    ah,BYTE PTR [rax+0x0]
   1400081ee:	add    BYTE PTR [rax],al
   1400081f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400081f1:	lahf   
   1400081f2:	add    BYTE PTR [rax],al
   1400081f4:	add    BYTE PTR [rax],al
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	mov    eax,0x9f
   1400081fd:	add    BYTE PTR [rax],al
   1400081ff:	add    ah,cl
   140008201:	lahf   
   140008202:	add    BYTE PTR [rax],al
   140008204:	add    BYTE PTR [rax],al
   140008206:	add    BYTE PTR [rax],al
   140008208:	ficomp WORD PTR [rdi+0x0]
   14000820e:	add    BYTE PTR [rax],al
   140008210:	(bad)  
   140008211:	lahf   
   140008212:	add    BYTE PTR [rax],al
   140008214:	add    BYTE PTR [rax],al
   140008216:	add    BYTE PTR [rax],al
   140008218:	and    BYTE PTR [rax+0x0],ah
   14000821e:	add    BYTE PTR [rax],al
   140008220:	mov    BYTE PTR [rdi+0x0],bl
   140008226:	add    BYTE PTR [rax],al
   140008228:	or     al,0xa0
   14000822a:	add    BYTE PTR [rax],al
   14000822c:	add    BYTE PTR [rax],al
   14000822e:	add    BYTE PTR [rax],al
   140008230:	clc    
   140008231:	lahf   
	...
   14000823e:	add    BYTE PTR [rax],al
   140008240:	(bad)  
   140008241:	movabs ds:0xa2ae000000000000,al
	...
   140008256:	add    BYTE PTR [rax],al
   140008258:	nop
   140008259:	movabs eax,ds:0xa180000000000000
   140008262:	add    BYTE PTR [rax],al
   140008264:	add    BYTE PTR [rax],al
   140008266:	add    BYTE PTR [rax],al
   140008268:	movabs al,ds:0xa1
   140008271:	add    BYTE PTR [rax],al
   140008273:	add    BYTE PTR [rax],al
   140008275:	add    BYTE PTR [rax],al
   140008277:	add    dh,bh
   140008279:	movabs ds:0xa2ec000000000000,al
	...
   14000828e:	add    BYTE PTR [rax],al
   140008290:	movabs rax,ds:0xa13e000000000000
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	movabs eax,ss:0xa12a000000000000
   1400082aa:	add    BYTE PTR [rax],al
   1400082ac:	add    BYTE PTR [rax],al
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	and    BYTE PTR [rcx+0x0],ah
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	(bad)  
   1400082b9:	movabs eax,ds:0xa0fe000000000000
   1400082c2:	add    BYTE PTR [rax],al
   1400082c4:	add    BYTE PTR [rax],al
   1400082c6:	add    BYTE PTR [rax],al
   1400082c8:	repnz movabs al,ds:0xa0de000000000000
   1400082d2:	add    BYTE PTR [rax],al
   1400082d4:	add    BYTE PTR [rax],al
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	(bad)  
   1400082d9:	movabs al,ds:0xa0cc000000000000
   1400082e2:	add    BYTE PTR [rax],al
   1400082e4:	add    BYTE PTR [rax],al
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	(bad)  
   1400082e9:	movabs al,ds:0xa0b2000000000000
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	add    BYTE PTR [rax],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	movabs al,ds:0x56000000000000a0
   140008301:	movabs eax,ds:0xa084000000000000
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	add    BYTE PTR [rax],al
   14000830e:	add    BYTE PTR [rax],al
   140008310:	jl     0x1400082b2
   140008312:	add    BYTE PTR [rax],al
   140008314:	add    BYTE PTR [rax],al
   140008316:	add    BYTE PTR [rax],al
   140008318:	jo     0x1400082ba
   14000831a:	add    BYTE PTR [rax],al
   14000831c:	add    BYTE PTR [rax],al
   14000831e:	add    BYTE PTR [rax],al
   140008320:	data16 movabs al,ds:0xa05a000000000000
   14000832a:	add    BYTE PTR [rax],al
   14000832c:	add    BYTE PTR [rax],al
   14000832e:	add    BYTE PTR [rax],al
   140008330:	rex.WR movabs al,ds:0xa16c000000000000
   14000833a:	add    BYTE PTR [rax],al
   14000833c:	add    BYTE PTR [rax],al
   14000833e:	add    BYTE PTR [rax],al
   140008340:	shl    BYTE PTR [rax+rax*1+0x0],cl
   140008347:	add    BYTE PTR [rdx+0xa0],dl
   14000834d:	add    BYTE PTR [rax],al
   14000834f:	add    ah,bl
   140008351:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000835e:	add    BYTE PTR [rax],al
   140008360:	(bad)  
   140008361:	movabs ds:0xa268000000000000,al
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	add    BYTE PTR [rax],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	push   rsp
   140008371:	movabs ds:0xa240000000000000,al
   14000837a:	add    BYTE PTR [rax],al
   14000837c:	add    BYTE PTR [rax],al
   14000837e:	add    BYTE PTR [rax],al
   140008380:	sub    al,0xa2
   140008382:	add    BYTE PTR [rax],al
   140008384:	add    BYTE PTR [rax],al
   140008386:	add    BYTE PTR [rax],al
   140008388:	(bad)  
   140008389:	movabs ds:0x0,al
   140008392:	add    BYTE PTR [rax],al
   140008394:	add    BYTE PTR [rax],al
   140008396:	add    BYTE PTR [rax],al
   140008398:	out    0xa1,al
   14000839a:	add    BYTE PTR [rax],al
   14000839c:	add    BYTE PTR [rax],al
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	(bad)  
   1400083a1:	movabs eax,ds:0xa1bc000000000000
   1400083aa:	add    BYTE PTR [rax],al
   1400083ac:	add    BYTE PTR [rax],al
   1400083ae:	add    BYTE PTR [rax],al
   1400083b0:	lods   al,BYTE PTR ds:[rsi]
   1400083b1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400083b2:	add    BYTE PTR [rax],al
   1400083b4:	add    BYTE PTR [rax],al
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	mov    esp,0xa4
   1400083bd:	add    BYTE PTR [rax],al
   1400083bf:	add    al,bh
   1400083c1:	movabs eax,ds:0x0
   1400083ca:	add    BYTE PTR [rax],al
   1400083cc:	add    BYTE PTR [rax],al
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	lock jo 0x1400083d3
   1400083d3:	rex add DWORD PTR [rax],eax
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	movabs al,ds:0x1400073
   1400083e1:	add    BYTE PTR [rax],al
   1400083e3:	add    BYTE PTR [rax],al
   1400083e5:	add    BYTE PTR [rax],al
   1400083e7:	add    al,dl
   1400083e9:	imul   eax,DWORD PTR [rax],0x140
   1400083ef:	add    BYTE PTR [rax],al
   1400083f1:	adc    BYTE PTR [rax],al
   1400083f3:	rex add DWORD PTR [rax],eax
	...
   140008406:	add    BYTE PTR [rax],al
   140008408:	lock push 0x14000
   14000840e:	add    BYTE PTR [rax],al
   140008410:	xor    BYTE PTR [rsi+0x0],ch
   140008413:	rex add DWORD PTR [rax],eax
	...
   14000841e:	add    BYTE PTR [rax],al
   140008420:	add    BYTE PTR [rax],dl
   140008422:	add    BYTE PTR [rax],al
   140008424:	xor    BYTE PTR [rax],dl
   140008426:	add    BYTE PTR [rax],al
   140008428:	jo     0x14000843a
   14000842a:	add    BYTE PTR [rax],al
   14000842c:	adc    BYTE PTR [rax+rax*1],0x0
   140008430:	mov    al,0x21
   140008432:	add    BYTE PTR [rax],al
   140008434:	sub    BYTE PTR [rax],0x0
   140008437:	add    al,ah
   140008439:	sub    BYTE PTR [rax],al
   14000843b:	add    BYTE PTR [rax],dl
   14000843d:	add    BYTE PTR ss:[rax],al
   140008440:	movabs al,ds:0xc000004db0000049
   140008449:	rex.WRB add BYTE PTR [r8],r8b
   14000844c:	and    BYTE PTR [rbx+0x0],dl
   14000844f:	add    BYTE PTR [rax],dh
   140008451:	push   rbx
   140008452:	add    BYTE PTR [rax],al
   140008454:	rex push rbx
   140008456:	add    BYTE PTR [rax],al
   140008458:	push   rax
   140008459:	push   rbx
   14000845a:	add    BYTE PTR [rax],al
   14000845c:	loopne 0x1400084b1
   14000845e:	add    BYTE PTR [rax],al
   140008460:	and    BYTE PTR [rax+rax*1+0x0],dl
   140008464:	(bad)  
   140008465:	push   rsp
   140008466:	add    BYTE PTR [rax],al
   140008468:	adc    BYTE PTR [rax+rax*1+0x0],0xa0
   14000846d:	push   rsp
   14000846e:	add    BYTE PTR [rax],al
   140008470:	mov    al,0x54
   140008472:	add    BYTE PTR [rax],al
   140008474:	loopne 0x1400084ca
   140008476:	add    BYTE PTR [rax],al
   140008478:	push   rax
   140008479:	push   rbp
   14000847a:	add    BYTE PTR [rax],al
   14000847c:	rcl    BYTE PTR [rbp+0x0],0x0
   140008480:	rcl    BYTE PTR [rbp+0x0],1
   140008483:	add    al,ah
   140008485:	push   rbp
   140008486:	add    BYTE PTR [rax],al
   140008488:	lock push rbp
   14000848a:	add    BYTE PTR [rax],al
   14000848c:	add    BYTE PTR [rsi+0x0],dl
   14000848f:	add    BYTE PTR [rax+0x56],ah
   140008492:	add    BYTE PTR [rax],al
   140008494:	push   rax
   140008495:	push   rdi
   140008496:	add    BYTE PTR [rax],al
   140008498:	push   rax
   140008499:	pop    rax
   14000849a:	add    BYTE PTR [rax],al
   14000849c:	rcr    BYTE PTR [rax+0x0],1
   14000849f:	add    al,dh
   1400084a1:	push   0x69d00000
   1400084a6:	add    BYTE PTR [rax],al
   1400084a8:	movabs al,ds:0xf000006dc000006c
   1400084b1:	ins    DWORD PTR es:[rdi],dx
   1400084b2:	add    BYTE PTR [rax],al
   1400084b4:	xor    BYTE PTR [rsi+0x0],ch
   1400084b7:	add    al,dh
   1400084b9:	jo     0x1400084bb
   1400084bb:	add    BYTE PTR [rax+0x71],al
   1400084be:	add    BYTE PTR [rax],al
   1400084c0:	xor    BYTE PTR [rax+rax*1+0x0],dh
	...
   1400084d0:	jo     0x140008482
   1400084d2:	add    BYTE PTR [rax+0x1],al
   1400084d5:	add    BYTE PTR [rax],al
   1400084d7:	add    BYTE PTR [rax],dl
   1400084d9:	mov    cl,0x0
   1400084db:	rex add DWORD PTR [rax],eax
   1400084de:	add    BYTE PTR [rax],al
   1400084e0:	sbb    dl,BYTE PTR [rax+0x0]
   1400084e3:	adc    al,BYTE PTR [rax+rax*1]
	...
   1400084ee:	add    BYTE PTR [rax],dl
   1400084f0:	add    al,0x0
   1400084f2:	add    BYTE PTR [rbx],dl
   1400084f4:	add    eax,DWORD PTR [rax]
	...
   1400084fe:	add    BYTE PTR [rax],cl
   140008500:	sbb    BYTE PTR [rax+0x0],dl
   140008503:	adc    al,BYTE PTR [rax+rax*1]
	...
   14000850e:	add    BYTE PTR [rax],dl
   140008510:	or     DWORD PTR [rax],eax
   140008512:	add    BYTE PTR [rbx],dl
   140008514:	add    al,BYTE PTR [rax]
	...
   14000851e:	add    BYTE PTR [rax],cl
   140008520:	(bad)  
   140008521:	add    BYTE PTR [rax],al
   140008523:	adc    eax,DWORD PTR [rip+0x0]        # 0x140008529
   140008529:	add    BYTE PTR [rax],al
   14000852b:	add    BYTE PTR [rax],al
   14000852d:	add    BYTE PTR [rax],al
   14000852f:	or     BYTE PTR [rax-0x68],ch
   140008532:	(bad)  [rax]
   140008534:	call   0xff4f776d
   140008539:	jns    0x140008559
   14000853b:	repz repz int 0x20
   14000853f:	loopne 0x140008546
   140008541:	add    BYTE PTR [rax],al
   140008543:	adc    eax,DWORD PTR [rdx]
	...
   14000854d:	add    BYTE PTR [rax],al
   14000854f:	or     BYTE PTR [rbx],al
   140008551:	add    BYTE PTR [rax],al
   140008553:	adc    eax,DWORD PTR [rip+0x0]        # 0x140008559
   140008559:	add    BYTE PTR [rax],al
   14000855b:	add    BYTE PTR [rax],al
   14000855d:	add    BYTE PTR [rax],al
   14000855f:	or     BYTE PTR [rbx-0x56],ah
   140008562:	imul   eax,edi,0xffffff81
   140008565:	scas   al,BYTE PTR es:[rdi]
   140008566:	sbb    al,0x42
   140008568:	mov    ah,0x25
   14000856a:	xor    al,0xb
   14000856c:	rex.WXB and al,0x15
   14000856f:	jg     0x140008579
   140008571:	add    BYTE PTR [rax],al
   140008573:	adc    eax,DWORD PTR [rdx]
	...
   14000857d:	add    BYTE PTR [rax],al
   14000857f:	or     BYTE PTR [rdi],dl
   140008581:	push   rax
   140008582:	add    BYTE PTR [rdx],dl
   140008584:	add    al,0x0
	...
   14000858e:	add    BYTE PTR [rax],dl
   140008590:	(bad)  
   140008591:	add    BYTE PTR [rax],al
   140008593:	adc    eax,DWORD PTR [rip+0x0]        # 0x140008599
   140008599:	add    BYTE PTR [rax],al
   14000859b:	add    BYTE PTR [rax],al
   14000859d:	add    BYTE PTR [rax],al
   14000859f:	or     BYTE PTR [rbx],bl
   1400085a1:	push   rax
   1400085a2:	add    BYTE PTR [rdx],dl
   1400085a4:	add    al,0x0
	...
   1400085ae:	add    BYTE PTR [rax],dl
   1400085b0:	(bad)  
   1400085b1:	push   rsi
   1400085b2:	add    BYTE PTR [rax+0x1],al
   1400085b5:	add    BYTE PTR [rax],al
   1400085b7:	add    al,ah
   1400085b9:	push   rbx
   1400085ba:	add    BYTE PTR [rax+0x1],al
   1400085bd:	add    BYTE PTR [rax],al
   1400085bf:	add    BYTE PTR [rax],ah
   1400085c1:	push   rsp
   1400085c2:	add    BYTE PTR [rax+0x1],al
   1400085c5:	add    BYTE PTR [rax],al
   1400085c7:	add    BYTE PTR [rax+0x54],ah
   1400085ca:	add    BYTE PTR [rax+0x1],al
   1400085cd:	add    BYTE PTR [rax],al
   1400085cf:	add    BYTE PTR [rax+0x1400054],al
   1400085d5:	add    BYTE PTR [rax],al
   1400085d7:	add    BYTE PTR [rax+0x1400054],ah
   1400085dd:	add    BYTE PTR [rax],al
   1400085df:	add    al,dl
   1400085e1:	pop    rax
   1400085e2:	add    BYTE PTR [rax+0x1],al
   1400085e5:	add    BYTE PTR [rax],al
   1400085e7:	add    BYTE PTR [rax+0x57],dl
   1400085ea:	add    BYTE PTR [rax+0x1],al
   1400085ed:	add    BYTE PTR [rax],al
   1400085ef:	add    BYTE PTR [rax+0x58],dl
   1400085f2:	add    BYTE PTR [rax+0x1],al
   1400085f5:	add    BYTE PTR [rax],al
   1400085f7:	add    al,al
   1400085f9:	ins    DWORD PTR es:[rdi],dx
   1400085fa:	add    BYTE PTR [rax+0x1],al
   1400085fd:	add    BYTE PTR [rax],al
   1400085ff:	add    al,al
   140008601:	ins    DWORD PTR es:[rdi],dx
   140008602:	add    BYTE PTR [rax+0x1],al
   140008605:	add    BYTE PTR [rax],al
   140008607:	add    al,al
   140008609:	ins    DWORD PTR es:[rdi],dx
   14000860a:	add    BYTE PTR [rax+0x1],al
   14000860d:	add    BYTE PTR [rax],al
   14000860f:	add    al,al
   140008611:	ins    DWORD PTR es:[rdi],dx
   140008612:	add    BYTE PTR [rax+0x1],al
   140008615:	add    BYTE PTR [rax],al
   140008617:	add    al,al
   140008619:	ins    DWORD PTR es:[rdi],dx
   14000861a:	add    BYTE PTR [rax+0x1],al
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    al,al
   140008621:	ins    DWORD PTR es:[rdi],dx
   140008622:	add    BYTE PTR [rax+0x1],al
   140008625:	add    BYTE PTR [rax],al
   140008627:	add    al,al
   140008629:	ins    DWORD PTR es:[rdi],dx
   14000862a:	add    BYTE PTR [rax+0x1],al
   14000862d:	add    BYTE PTR [rax],al
   14000862f:	add    al,al
   140008631:	ins    DWORD PTR es:[rdi],dx
   140008632:	add    BYTE PTR [rax+0x1],al
   140008635:	add    BYTE PTR [rax],al
   140008637:	add    al,al
   140008639:	ins    DWORD PTR es:[rdi],dx
   14000863a:	add    BYTE PTR [rax+0x1],al
   14000863d:	add    BYTE PTR [rax],al
   14000863f:	add    al,al
   140008641:	ins    DWORD PTR es:[rdi],dx
   140008642:	add    BYTE PTR [rax+0x1],al
   140008645:	add    BYTE PTR [rax],al
   140008647:	add    al,al
   140008649:	ins    DWORD PTR es:[rdi],dx
   14000864a:	add    BYTE PTR [rax+0x1],al
   14000864d:	add    BYTE PTR [rax],al
   14000864f:	add    al,al
   140008651:	ins    DWORD PTR es:[rdi],dx
   140008652:	add    BYTE PTR [rax+0x1],al
   140008655:	add    BYTE PTR [rax],al
   140008657:	add    al,al
   140008659:	ins    DWORD PTR es:[rdi],dx
   14000865a:	add    BYTE PTR [rax+0x1],al
   14000865d:	add    BYTE PTR [rax],al
   14000865f:	add    al,al
   140008661:	ins    DWORD PTR es:[rdi],dx
   140008662:	add    BYTE PTR [rax+0x1],al
   140008665:	add    BYTE PTR [rax],al
   140008667:	add    al,al
   140008669:	ins    DWORD PTR es:[rdi],dx
   14000866a:	add    BYTE PTR [rax+0x1],al
   14000866d:	add    BYTE PTR [rax],al
   14000866f:	add    al,al
   140008671:	ins    DWORD PTR es:[rdi],dx
   140008672:	add    BYTE PTR [rax+0x1],al
   140008675:	add    BYTE PTR [rax],al
   140008677:	add    al,al
   140008679:	ins    DWORD PTR es:[rdi],dx
   14000867a:	add    BYTE PTR [rax+0x1],al
   14000867d:	add    BYTE PTR [rax],al
   14000867f:	add    al,al
   140008681:	ins    DWORD PTR es:[rdi],dx
   140008682:	add    BYTE PTR [rax+0x1],al
   140008685:	add    BYTE PTR [rax],al
   140008687:	add    al,al
   140008689:	ins    DWORD PTR es:[rdi],dx
   14000868a:	add    BYTE PTR [rax+0x1],al
   14000868d:	add    BYTE PTR [rax],al
   14000868f:	add    al,al
   140008691:	ins    DWORD PTR es:[rdi],dx
   140008692:	add    BYTE PTR [rax+0x1],al
   140008695:	add    BYTE PTR [rax],al
   140008697:	add    al,al
   140008699:	ins    DWORD PTR es:[rdi],dx
   14000869a:	add    BYTE PTR [rax+0x1],al
   14000869d:	add    BYTE PTR [rax],al
   14000869f:	add    al,al
   1400086a1:	ins    DWORD PTR es:[rdi],dx
   1400086a2:	add    BYTE PTR [rax+0x1],al
   1400086a5:	add    BYTE PTR [rax],al
   1400086a7:	add    al,al
   1400086a9:	ins    DWORD PTR es:[rdi],dx
   1400086aa:	add    BYTE PTR [rax+0x1],al
   1400086ad:	add    BYTE PTR [rax],al
   1400086af:	add    al,al
   1400086b1:	ins    DWORD PTR es:[rdi],dx
   1400086b2:	add    BYTE PTR [rax+0x1],al
   1400086b5:	add    BYTE PTR [rax],al
   1400086b7:	add    al,al
   1400086b9:	ins    DWORD PTR es:[rdi],dx
   1400086ba:	add    BYTE PTR [rax+0x1],al
   1400086bd:	add    BYTE PTR [rax],al
   1400086bf:	add    al,al
   1400086c1:	ins    DWORD PTR es:[rdi],dx
   1400086c2:	add    BYTE PTR [rax+0x1],al
   1400086c5:	add    BYTE PTR [rax],al
   1400086c7:	add    al,al
   1400086c9:	ins    DWORD PTR es:[rdi],dx
   1400086ca:	add    BYTE PTR [rax+0x1],al
   1400086cd:	add    BYTE PTR [rax],al
   1400086cf:	add    al,al
   1400086d1:	ins    DWORD PTR es:[rdi],dx
   1400086d2:	add    BYTE PTR [rax+0x1],al
   1400086d5:	add    BYTE PTR [rax],al
   1400086d7:	add    al,al
   1400086d9:	ins    DWORD PTR es:[rdi],dx
   1400086da:	add    BYTE PTR [rax+0x1],al
   1400086dd:	add    BYTE PTR [rax],al
   1400086df:	add    al,al
   1400086e1:	ins    DWORD PTR es:[rdi],dx
   1400086e2:	add    BYTE PTR [rax+0x1],al
   1400086e5:	add    BYTE PTR [rax],al
   1400086e7:	add    al,al
   1400086e9:	ins    DWORD PTR es:[rdi],dx
   1400086ea:	add    BYTE PTR [rax+0x1],al
   1400086ed:	add    BYTE PTR [rax],al
   1400086ef:	add    al,al
   1400086f1:	ins    DWORD PTR es:[rdi],dx
   1400086f2:	add    BYTE PTR [rax+0x1],al
   1400086f5:	add    BYTE PTR [rax],al
   1400086f7:	add    al,al
   1400086f9:	ins    DWORD PTR es:[rdi],dx
   1400086fa:	add    BYTE PTR [rax+0x1],al
   1400086fd:	add    BYTE PTR [rax],al
   1400086ff:	add    BYTE PTR [rax],ah
   140008701:	push   rbx
   140008702:	add    BYTE PTR [rax+0x1],al
   140008705:	add    BYTE PTR [rax],al
   140008707:	add    al,dl
   140008709:	push   rbp
   14000870a:	add    BYTE PTR [rax+0x1],al
   14000870d:	add    BYTE PTR [rax],al
   14000870f:	add    al,ah
   140008711:	push   rbp
   140008712:	add    BYTE PTR [rax+0x1],al
   140008715:	add    BYTE PTR [rax],al
   140008717:	add    al,dh
   140008719:	push   rbp
   14000871a:	add    BYTE PTR [rax+0x1],al
   14000871d:	add    BYTE PTR [rax],al
   14000871f:	add    al,ah
   140008721:	sub    BYTE PTR [rax],al
   140008723:	rex add DWORD PTR [rax],eax
   140008726:	add    BYTE PTR [rax],al
   140008728:	mov    al,0x54
   14000872a:	add    BYTE PTR [rax+0x1],al
   14000872d:	add    BYTE PTR [rax],al
   14000872f:	add    BYTE PTR [rax+0x55],dl
   140008732:	add    BYTE PTR [rax+0x1],al
   140008735:	add    BYTE PTR [rax],al
   140008737:	add    BYTE PTR [rax+0x53],dl
   14000873a:	add    BYTE PTR [rax+0x1],al
   14000873d:	add    BYTE PTR [rax],al
   14000873f:	add    BYTE PTR [rax+0x53],al
   140008742:	add    BYTE PTR [rax+0x1],al
   140008745:	add    BYTE PTR [rax],al
   140008747:	add    BYTE PTR [rax],dh
   140008749:	push   rbx
   14000874a:	add    BYTE PTR [rax+0x1],al
   14000874d:	add    BYTE PTR [rax],al
   14000874f:	add    BYTE PTR [rax+0x1400049],ah
   140008755:	add    BYTE PTR [rax],al
   140008757:	add    al,al
   140008759:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000875d:	add    BYTE PTR [rax],al
   14000875f:	add    BYTE PTR [rax+0x140004d],dh
   140008765:	add    BYTE PTR [rax],al
   140008767:	add    BYTE PTR [rax+0x140004d],dh
   14000876d:	add    BYTE PTR [rax],al
   14000876f:	add    BYTE PTR [rax+0x140004d],dh
   140008775:	add    BYTE PTR [rax],al
   140008777:	add    BYTE PTR [rax+0x140004d],dh
   14000877d:	add    BYTE PTR [rax],al
   14000877f:	add    BYTE PTR [rax+0x140004d],dh
   140008785:	add    BYTE PTR [rax],al
   140008787:	add    BYTE PTR [rax+0x140004d],dh
   14000878d:	add    BYTE PTR [rax],al
   14000878f:	add    BYTE PTR [rax+0x140004d],dh
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    BYTE PTR [rax+0x140004d],dh
   14000879d:	add    BYTE PTR [rax],al
   14000879f:	add    BYTE PTR [rax+0x140004d],dh
   1400087a5:	add    BYTE PTR [rax],al
   1400087a7:	add    BYTE PTR [rax+0x140004d],dh
   1400087ad:	add    BYTE PTR [rax],al
   1400087af:	add    BYTE PTR [rax+0x140004d],dh
   1400087b5:	add    BYTE PTR [rax],al
   1400087b7:	add    BYTE PTR [rax+0x140004d],dh
   1400087bd:	add    BYTE PTR [rax],al
   1400087bf:	add    BYTE PTR [rax+0x140004d],dh
   1400087c5:	add    BYTE PTR [rax],al
   1400087c7:	add    BYTE PTR [rax+0x140004d],dh
   1400087cd:	add    BYTE PTR [rax],al
   1400087cf:	add    BYTE PTR [rax+0x140004d],dh
   1400087d5:	add    BYTE PTR [rax],al
   1400087d7:	add    BYTE PTR [rax+0x140004d],dh
   1400087dd:	add    BYTE PTR [rax],al
   1400087df:	add    BYTE PTR [rax+0x140004d],dh
   1400087e5:	add    BYTE PTR [rax],al
   1400087e7:	add    BYTE PTR [rax+0x140004d],dh
   1400087ed:	add    BYTE PTR [rax],al
   1400087ef:	add    BYTE PTR [rax+0x140004d],dh
   1400087f5:	add    BYTE PTR [rax],al
   1400087f7:	add    BYTE PTR [rax+0x140004d],dh
   1400087fd:	add    BYTE PTR [rax],al
   1400087ff:	add    BYTE PTR [rax+0x140004d],dh
   140008805:	add    BYTE PTR [rax],al
   140008807:	add    BYTE PTR [rax+0x140004d],dh
   14000880d:	add    BYTE PTR [rax],al
   14000880f:	add    BYTE PTR [rax+0x140004d],dh
   140008815:	add    BYTE PTR [rax],al
   140008817:	add    BYTE PTR [rax+0x140004d],dh
   14000881d:	add    BYTE PTR [rax],al
   14000881f:	add    BYTE PTR [rax+0x140004d],dh
   140008825:	add    BYTE PTR [rax],al
   140008827:	add    BYTE PTR [rax+0x140004d],dh
   14000882d:	add    BYTE PTR [rax],al
   14000882f:	add    BYTE PTR [rax+0x140004d],dh
   140008835:	add    BYTE PTR [rax],al
   140008837:	add    BYTE PTR [rax+0x140004d],dh
   14000883d:	add    BYTE PTR [rax],al
   14000883f:	add    BYTE PTR [rax+0x1400028],al
   140008845:	add    BYTE PTR [rax],al
   140008847:	add    BYTE PTR [rax],dh
   140008849:	adc    BYTE PTR [rax],al
   14000884b:	rex add DWORD PTR [rax],eax
   14000884e:	add    BYTE PTR [rax],al
   140008850:	jo     0x140008862
   140008852:	add    BYTE PTR [rax+0x1],al
   140008855:	add    BYTE PTR [rax],al
   140008857:	add    BYTE PTR [rax],dl
   140008859:	add    BYTE PTR ss:[rax+0x1],al
   14000885d:	add    BYTE PTR [rax],al
   14000885f:	add    al,ah
   140008861:	push   rsp
   140008862:	add    BYTE PTR [rax+0x1],al
   140008865:	add    BYTE PTR [rax],al
   140008867:	add    al,dl
   140008869:	push   rbp
   14000886a:	add    BYTE PTR [rax+0x1],al
   14000886d:	add    BYTE PTR [rax],al
   14000886f:	add    al,ah
   140008871:	push   rbp
   140008872:	add    BYTE PTR [rax+0x1],al
   140008875:	add    BYTE PTR [rax],al
   140008877:	add    al,dh
   140008879:	push   rbp
   14000887a:	add    BYTE PTR [rax+0x1],al
   14000887d:	add    BYTE PTR [rax],al
   14000887f:	add    BYTE PTR [rax],al
   140008881:	push   rsi
   140008882:	add    BYTE PTR [rax+0x1],al
   140008885:	add    BYTE PTR [rax],al
   140008887:	add    BYTE PTR [rax+0x1400054],dh
   14000888d:	add    BYTE PTR [rax],al
   14000888f:	add    BYTE PTR [rax+0x55],dl
   140008892:	add    BYTE PTR [rax+0x1],al
   140008895:	add    BYTE PTR [rax],al
   140008897:	add    al,al
   140008899:	push   rbp
   14000889a:	add    BYTE PTR [rax+0x1],al
   14000889d:	add    BYTE PTR [rax],al
   14000889f:	add    al,dl
   1400088a1:	push   rbp
   1400088a2:	add    BYTE PTR [rax+0x1],al
   1400088a5:	add    BYTE PTR [rax],al
   1400088a7:	add    al,ah
   1400088a9:	push   rbp
   1400088aa:	add    BYTE PTR [rax+0x1],al
   1400088ad:	add    BYTE PTR [rax],al
   1400088af:	add    al,dh
   1400088b1:	push   rbp
   1400088b2:	add    BYTE PTR [rax+0x1],al
   1400088b5:	add    BYTE PTR [rax],al
   1400088b7:	add    BYTE PTR [rsi+0x55],cl
   1400088ba:	rex.WR
   1400088bb:	rex.WR add BYTE PTR [rax],r8b
   1400088be:	add    BYTE PTR [rax],al
   1400088c0:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   1400088c2:	push   rsp
   1400088c3:	imul   ebp,DWORD PTR [rbp+0x65],0x61662072
   1400088ca:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x5f6d0000
   1400088d2:	jo     0x140008926
   1400088d4:	fs jo  0x14000892a
   1400088d7:	gs jae 0x14000894d
   1400088da:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e656741
   1400088e1:	je     0x140008910
   1400088e3:	ds rex.XB push 0x416b6365
   1400088ea:	je     0x140008960
   1400088ec:	outs   dx,BYTE PTR gs:[rsi]
   1400088ee:	fs gs gs jae 0x140008913
   1400088f3:	data16 (bad) 
   1400088f5:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   1400088fd:	add    BYTE PTR [rax],al
   1400088ff:	add    BYTE PTR [rsi+0x69],al
   140008902:	outs   dx,BYTE PTR ds:[rsi]
   140008903:	fs rex.RB ins DWORD PTR es:[rdi],dx
   140008906:	jo     0x14000897c
   140008908:	jns    0x14000895d
   14000890a:	ins    BYTE PTR es:[rdi],dx
   14000890b:	outs   dx,DWORD PTR ds:[rsi]
   14000890c:	je     0x14000892e
   14000890e:	data16 (bad) 
   140008910:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   140008918:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000891a:	and    BYTE PTR [rbp+0x61],ch
   14000891d:	je     0x140008982
   14000891f:	push   0x20676e69
   140008924:	imul   ebp,DWORD PTR [rsi+0x76],0x74617469
   14000892b:	imul   ebp,DWORD PTR [rdi+0x6e],0x756f6620
   140008932:	outs   dx,BYTE PTR ds:[rsi]
   140008933:	add    BYTE PTR fs:[rax],al
   140008936:	add    BYTE PTR [rax],al
   140008938:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000893a:	jbe    0x1400089a5
   14000893c:	je     0x14000899f
   14000893e:	je     0x1400089a9
   140008940:	outs   dx,DWORD PTR ds:[rsi]
   140008941:	outs   dx,BYTE PTR ds:[rsi]
   140008942:	and    BYTE PTR [rbx+0x6f],ah
   140008945:	jne    0x1400089b3
   140008947:	and    BYTE PTR fs:[rsi+0x6f],ch
   14000894b:	je     0x14000896d
   14000894d:	(bad)  
   14000894e:	and    BYTE PTR gs:[rdx+0x65],dh
   140008952:	jbe    0x1400089c3
   140008954:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140008958:	addr32 gs je 0x1400089bb
   14000895c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000895e:	outs   dx,BYTE PTR ds:[rsi]
   14000895f:	outs   dx,BYTE PTR ds:[rsi]
   140008960:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008965:	outs   dx,BYTE PTR ds:[rsi]
   140008966:	push   rbx
   140008967:	je     0x1400089db
   140008969:	imul   ebp,DWORD PTR [rsi+0x67],0x69616620
   140008970:	ins    BYTE PTR es:[rdi],dx
   140008971:	gs add BYTE PTR fs:[rax],al
   140008975:	add    BYTE PTR [rax],al
   140008977:	add    BYTE PTR [rcx+0x64],al
   14000897a:	jbe    0x1400089dd
   14000897c:	jo     0x1400089e7
   14000897e:	xor    esi,DWORD PTR [rdx]
   140008980:	cs fs ins BYTE PTR es:[rdi],dx
   140008983:	ins    BYTE PTR es:[rdi],dx
   140008984:	add    BYTE PTR [rax],al
   140008986:	add    BYTE PTR [rax],al
   140008988:	rex.RB jbe 0x1400089f0
   14000898b:	outs   dx,BYTE PTR ds:[rsi]
   14000898c:	je     0x1400089cf
   14000898e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140008992:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6e6f4364
   14000899a:	je     0x140008a0e
   14000899c:	outs   dx,DWORD PTR ds:[rsi]
   14000899d:	ins    BYTE PTR es:[rdi],dx
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	push   rdx
   1400089a1:	add    BYTE PTR [rax+rax*1+0x70],ah
   1400089a5:	add    BYTE PTR [rbx+0x0],dl
   1400089a8:	(bad)  
   1400089a9:	add    BYTE PTR [rcx+0x0],cl
   1400089ac:	outs   dx,BYTE PTR ds:[rsi]
   1400089ad:	add    BYTE PTR [rsi+0x0],dh
   1400089b0:	imul   eax,DWORD PTR [rax],0x610074
   1400089b6:	je     0x1400089b8
   1400089b8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400089be:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400089c2:	outs   dx,BYTE PTR ds:[rsi]
   1400089c3:	add    BYTE PTR [rcx+0x0],ah
   1400089c6:	add    BYTE PTR [ebp+0x0],ah
   1400089ca:	jb     0x1400089cc
   1400089cc:	rex.W add BYTE PTR [rcx+0x0],bpl
   1400089d0:	add    BYTE PTR fs:[rax+rax*1+0x65],ah
   1400089d5:	add    BYTE PTR [rsi+0x0],ch
   1400089d8:	push   rdi
   1400089d9:	add    BYTE PTR [rcx+0x0],ch
   1400089dc:	outs   dx,BYTE PTR ds:[rsi]
   1400089dd:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400089e1:	add    BYTE PTR [rdi+0x0],dh
   1400089e4:	add    BYTE PTR [r8+r8*1+0x61],bpl
   1400089e9:	add    BYTE PTR [rbx+0x0],dh
   1400089ec:	jae    0x1400089ee
   1400089ee:	add    BYTE PTR [rax],al
   1400089f0:	jl     0x1400089ce
   1400089f2:	sar    DWORD PTR [rip+0x27b0d553],cl        # 0x167b15f4b
   1400089f8:	and    ch,BYTE PTR [rbx+rbp*4-0x8]
   1400089fc:	(bad)  
   1400089fd:	pop    rsi
   1400089fe:	pop    rdi
   1400089ff:	mov    ebx,0x65525f73
   140008a04:	jae    0x140008a7a
   140008a06:	jb     0x140008a71
   140008a08:	movsxd esi,DWORD PTR [rax+rdx*2+0x72]
   140008a0c:	outs   dx,DWORD PTR ds:[rsi]
   140008a0d:	movsxd esp,DWORD PTR [rbp+0x73]
   140008a10:	jae    0x140008a56
   140008a12:	(bad)  
   140008a13:	movsxd ebp,DWORD PTR [rax+riz*1+0x66]
   140008a17:	(bad)  
   140008a18:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   140008a20:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008a22:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008a24:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008a2c:	rex.RB js 0x140008a4f
   140008a2f:	data16 (bad) 
   140008a31:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x43000021
   140008a39:	outs   dx,DWORD PTR ds:[rsi]
   140008a3a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008a3c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008a44:	push   rbx
   140008a45:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140008a49:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x6c696166
   140008a51:	gs and DWORD PTR fs:[rax],eax
   140008a55:	add    BYTE PTR [rax],al
   140008a57:	add    BYTE PTR [rax+0x53],dh
   140008a5a:	gs jae 0x140008ad0
   140008a5d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e656741
   140008a64:	je     0x140008a93
   140008a66:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008a69:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008a71:	and    BYTE PTR [rsi+0x61],ah
   140008a74:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   140008a7c:	add    BYTE PTR [rax],al
   140008a7e:	add    BYTE PTR [rax],al
   140008a80:	iret   
   140008a81:	adc    ebx,DWORD PTR [rsi+0x11]
   140008a84:	call   0xf048ac58
   140008a89:	(bad)  
   140008a8b:	push   0xffffffffffffffa4
   140008a8d:	(bad)  
   140008a8e:	adc    al,0x26
   140008a90:	(bad)  
   140008a91:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008a92:	cld    
   140008a93:	mov    ecx,0x504ddfa7
   140008a98:	sbb    al,0x81
   140008a9a:	fs and eax,0xdca5299b
   140008aa0:	and    DWORD PTR [rdi+riz*1+0x56],0x2d
   140008aa5:	pop    rsp
   140008aa6:	sub    al,0x47
   140008aa8:	mov    bl,0x75
   140008aaa:	and    ecx,esi
   140008aac:	rex.WRX mov sil,0xa4
   140008aaf:	stc    
   140008ab0:	and    eax,0x2e003800
   140008ab5:	add    BYTE PTR [rax],bh
   140008ab7:	add    BYTE PTR [rax+0x0],bh
   140008aba:	add    BYTE PTR [rax],al
   140008abc:	add    BYTE PTR [rax],al
   140008abe:	add    BYTE PTR [rax],al
   140008ac0:	ins    DWORD PTR es:[rdi],dx
   140008ac1:	pop    rdi
   140008ac2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008ac4:	jbe    0x140008b2f
   140008ac6:	je     0x140008b29
   140008ac8:	je     0x140008b33
   140008aca:	outs   dx,DWORD PTR ds:[rsi]
   140008acb:	outs   dx,BYTE PTR ds:[rsi]
   140008acc:	rex.WRB (bad) 
   140008ace:	outs   dx,BYTE PTR ds:[rsi]
   140008acf:	(bad)  
   140008ad0:	addr32 gs jb 0x140008b02
   140008ad4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008ad6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008ade:	and    BYTE PTR [rsi+0x61],ah
   140008ae1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x43000021
   140008ae9:	outs   dx,DWORD PTR ds:[rsi]
   140008aea:	rex.XB jb 0x140008b52
   140008aed:	(bad)  
   140008aee:	je     0x140008b55
   140008af0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008af2:	push   rbx
   140008af3:	gs jae 0x140008b69
   140008af6:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
   140008afd:	ins    BYTE PTR es:[rdi],dx
   140008afe:	gs and DWORD PTR fs:[rax],eax
   140008b02:	add    BYTE PTR [rax],al
   140008b04:	add    BYTE PTR [rax],al
   140008b06:	add    BYTE PTR [rax],al
   140008b08:	rex.XB jb 0x140008b70
   140008b0b:	(bad)  
   140008b0c:	je     0x140008b73
   140008b0e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008b10:	jae    0x140008b86
   140008b12:	(bad)  
   140008b13:	outs   dx,BYTE PTR ds:[rsi]
   140008b14:	movsxd esp,DWORD PTR [rbp+0x20]
   140008b17:	rex.XB
   140008b18:	rex.WR push rbx
   140008b1a:	rex.WB
   140008b1b:	rex.R pop rdi
   140008b1d:	push   rdx
   140008b1e:	rex.R push rax
   140008b20:	push   rbx
   140008b21:	gs jae 0x140008b97
   140008b24:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
   140008b2b:	ins    BYTE PTR es:[rdi],dx
   140008b2c:	gs and DWORD PTR fs:[rax],eax
   140008b30:	rex.WB push r10
   140008b32:	rex.R push rax
   140008b34:	push   rbx
   140008b35:	push   rdx
   140008b36:	push   r8
   140008b38:	rex.WB push r11
   140008b3a:	push   0x6e697261
   140008b3f:	addr32 push rbx
   140008b41:	gs jae 0x140008bb7
   140008b44:	imul   ebp,DWORD PTR [rdi+0x6e],0x704f3a3a
   140008b4b:	outs   dx,BYTE PTR gs:[rsi]
   140008b4d:	and    BYTE PTR [rsi+0x61],ah
   140008b50:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   140008b58:	rex.WB push r10
   140008b5a:	rex.R push rax
   140008b5c:	push   rbx
   140008b5d:	push   rdx
   140008b5e:	push   r8
   140008b60:	rex.WB push r11
   140008b62:	push   0x6e697261
   140008b67:	addr32 push rbx
   140008b69:	gs jae 0x140008bdf
   140008b6c:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c433a3a
   140008b73:	outs   dx,DWORD PTR ds:[rsi]
   140008b74:	jae    0x140008bdb
   140008b76:	and    BYTE PTR [rsi+0x61],ah
   140008b79:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x57000021
   140008b81:	imul   ebp,DWORD PTR [rsi+0x53],0x69746174
   140008b88:	outs   dx,DWORD PTR ds:[rsi]
   140008b89:	outs   dx,BYTE PTR ds:[rsi]
   140008b8a:	push   rbx
   140008b8b:	push   0x776f6461
   140008b90:	push   rbx
   140008b91:	je     0x140008c02
   140008b93:	jo     0x140008bc7
   140008b95:	and    BYTE PTR [rsi+0x61],ah
   140008b98:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   140008ba0:	push   rdx
   140008ba1:	gs ins BYTE PTR es:[rdi],dx
   140008ba3:	gs (bad) 
   140008ba5:	jae    0x140008c0c
   140008ba7:	push   rbx
   140008ba8:	push   0x72657261
   140008bad:	and    BYTE PTR [rsi+0x61],ah
   140008bb0:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   140008bb8:	push   rdx
   140008bb9:	gs jno 0x140008c31
   140008bbc:	gs jae 0x140008c33
   140008bbf:	push   rax
   140008bc0:	gs jb  0x140008c30
   140008bc3:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   140008bca:	data16 (bad) 
   140008bcc:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   140008bd4:	add    BYTE PTR [rax],al
   140008bd6:	add    BYTE PTR [rax],al
   140008bd8:	rex.XB jb 0x140008c40
   140008bdb:	(bad)  
   140008bdc:	je     0x140008c43
   140008bde:	push   rbx
   140008bdf:	push   0x72657261
   140008be4:	and    BYTE PTR [rsi+0x61],ah
   140008be7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   140008bef:	add    BYTE PTR [rbx+0x74],dl
   140008bf2:	jb     0x140008c5d
   140008bf4:	outs   dx,BYTE PTR ds:[rsi]
   140008bf5:	rex.XB movsxd ebp,DWORD PTR [r8d+0x50]
   140008bfa:	jb     0x140008c65
   140008bfc:	outs   dx,BYTE PTR ds:[rsi]
   140008bfd:	je     0x140008c65
   140008bff:	and    BYTE PTR [rsi+0x61],ah
   140008c02:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x65670021
   140008c0a:	je     0x140008c6b
   140008c0c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008c0e:	jbe    0x140008c79
   140008c10:	je     0x140008c73
   140008c12:	je     0x140008c7d
   140008c14:	outs   dx,DWORD PTR ds:[rsi]
   140008c15:	outs   dx,BYTE PTR ds:[rsi]
   140008c16:	jae    0x140008c38
   140008c18:	data16 (bad) 
   140008c1a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x72430021
   140008c22:	gs (bad) 
   140008c24:	je     0x140008c8b
   140008c26:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008c28:	jbe    0x140008c93
   140008c2a:	je     0x140008c8d
   140008c2c:	je     0x140008c97
   140008c2e:	outs   dx,DWORD PTR ds:[rsi]
   140008c2f:	outs   dx,BYTE PTR ds:[rsi]
   140008c30:	and    BYTE PTR [rsi+0x61],ah
   140008c33:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   140008c3b:	add    BYTE PTR [rax],al
   140008c3d:	add    BYTE PTR [rax],al
   140008c3f:	add    BYTE PTR [rdi+0x65],ah
   140008c42:	je     0x140008ca3
   140008c44:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008c46:	outs   dx,BYTE PTR ds:[rsi]
   140008c47:	outs   dx,BYTE PTR ds:[rsi]
   140008c48:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008c4d:	outs   dx,BYTE PTR ds:[rsi]
   140008c4e:	push   rbx
   140008c4f:	je     0x140008cc3
   140008c51:	imul   ebp,DWORD PTR [rsi+0x67],0x69616620
   140008c58:	ins    BYTE PTR es:[rdi],dx
   140008c59:	gs and DWORD PTR fs:[rax],eax
   140008c5d:	add    BYTE PTR [rax],al
   140008c5f:	add    BYTE PTR [rbp+0x5f],ch
   140008c62:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008c64:	jbe    0x140008ccf
   140008c66:	je     0x140008cc9
   140008c68:	je     0x140008cd3
   140008c6a:	outs   dx,DWORD PTR ds:[rsi]
   140008c6b:	outs   dx,BYTE PTR ds:[rsi]
   140008c6c:	rex.WRB (bad) 
   140008c6e:	outs   dx,BYTE PTR ds:[rsi]
   140008c6f:	(bad)  
   140008c70:	addr32 gs jb 0x140008ca2
   140008c74:	rex.B
   140008c75:	fs rex.WB outs dx,BYTE PTR fs:[rsi]
   140008c79:	jbe    0x140008ce4
   140008c7b:	je     0x140008cde
   140008c7d:	je     0x140008ce8
   140008c7f:	outs   dx,DWORD PTR ds:[rsi]
   140008c80:	outs   dx,BYTE PTR ds:[rsi]
   140008c81:	and    BYTE PTR [rsi+0x61],ah
   140008c84:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   140008c8c:	add    BYTE PTR [rax],al
   140008c8e:	add    BYTE PTR [rax],al
   140008c90:	push   rbx
   140008c91:	add    BYTE PTR [rax+0x0],ch
   140008c94:	(bad)  
   140008c95:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140008c99:	add    BYTE PTR [rdi+0x0],dh
   140008c9c:	push   rsp
   140008c9d:	add    BYTE PTR [rcx+0x0],ch
   140008ca0:	ins    DWORD PTR es:[rdi],dx
   140008ca1:	add    BYTE PTR [rbp+0x0],ah
   140008ca4:	outs   dx,DWORD PTR ds:[rsi]
   140008ca5:	add    BYTE PTR [rbp+0x0],dh
   140008ca8:	je     0x140008caa
   140008caa:	add    BYTE PTR [rax],al
   140008cac:	add    BYTE PTR [rax],al
   140008cae:	add    BYTE PTR [rax],al
   140008cb0:	push   rbx
   140008cb1:	add    BYTE PTR [rax+0x0],ch
   140008cb4:	(bad)  
   140008cb5:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140008cb9:	add    BYTE PTR [rdi+0x0],dh
   140008cbc:	add    BYTE PTR [rax],al
   140008cbe:	add    BYTE PTR [rax],al
   140008cc0:	rex.RXB
   140008cc1:	gs je  0x140008d0b
   140008cc4:	jb     0x140008d35
   140008cc6:	jne    0x140008d38
   140008cc8:	push   rax
   140008cc9:	outs   dx,DWORD PTR ds:[rsi]
   140008cca:	ins    BYTE PTR es:[rdi],dx
   140008ccb:	imul   esp,DWORD PTR [rbx+0x79],0x53676552
   140008cd2:	gs je  0x140008d49
   140008cd5:	imul   ebp,DWORD PTR [rsi+0x67],0x69616620
   140008cdc:	ins    BYTE PTR es:[rdi],dx
   140008cdd:	gs and DWORD PTR fs:[rax],eax
   140008ce1:	add    BYTE PTR [rax],al
   140008ce3:	add    BYTE PTR [rax],al
   140008ce5:	add    BYTE PTR [rax],al
   140008ce7:	add    BYTE PTR [rdi+0x65],al
   140008cea:	je     0x140008d33
   140008cec:	jb     0x140008d5d
   140008cee:	jne    0x140008d60
   140008cf0:	push   rax
   140008cf1:	outs   dx,DWORD PTR ds:[rsi]
   140008cf2:	ins    BYTE PTR es:[rdi],dx
   140008cf3:	imul   esp,DWORD PTR [rbx+0x79],0x74746553
   140008cfa:	imul   ebp,DWORD PTR [rsi+0x67],0x69616620
   140008d01:	ins    BYTE PTR es:[rdi],dx
   140008d02:	gs and DWORD PTR fs:[rax],eax
   140008d06:	add    BYTE PTR [rax],al
   140008d08:	addr32 gs je 0x140008d6b
   140008d0c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008d0e:	outs   dx,BYTE PTR ds:[rsi]
   140008d0f:	outs   dx,BYTE PTR ds:[rsi]
   140008d10:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x76]
   140008d15:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x206f666e
   140008d1d:	data16 (bad) 
   140008d1f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   140008d27:	add    BYTE PTR [rcx+0x75],dl
   140008d2a:	gs jb  0x140008da6
   140008d2d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008d2f:	je     0x140008d96
   140008d31:	jb     0x140008d99
   140008d33:	(bad)  
   140008d34:	movsxd esp,DWORD PTR [rbp+0x20]
   140008d37:	data16 (bad) 
   140008d39:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x67000000
   140008d41:	gs je  0x140008da3
   140008d44:	push   rax
   140008d45:	gs gs jb 0x140008d92
   140008d49:	push   rax
   140008d4a:	and    BYTE PTR [rsi+0x61],ah
   140008d4d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   140008d55:	add    BYTE PTR [rax],al
   140008d57:	add    BYTE PTR [rbx+0x74],dl
   140008d5a:	jb     0x140008dc5
   140008d5c:	outs   dx,BYTE PTR ds:[rsi]
   140008d5d:	rex.XB movsxd ebp,DWORD PTR [r8d+0x43]
   140008d62:	outs   dx,DWORD PTR ds:[rsi]
   140008d63:	jo     0x140008dde
   140008d65:	push   rdi
   140008d66:	and    BYTE PTR [rsi+0x61],ah
   140008d69:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x70000000
   140008d71:	jne    0x140008de7
   140008d73:	pop    rdi
   140008d74:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008d76:	outs   dx,BYTE PTR ds:[rsi]
   140008d77:	je     0x140008deb
   140008d79:	outs   dx,DWORD PTR ds:[rsi]
   140008d7a:	ins    BYTE PTR es:[rdi],dx
   140008d7b:	rex.WR
   140008d7c:	gs jbe 0x140008de4
   140008d7f:	ins    BYTE PTR es:[rdi],dx
   140008d80:	and    BYTE PTR [rsi+0x61],ah
   140008d83:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74656700
   140008d8b:	pop    rdi
   140008d8c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008d8e:	jbe    0x140008df9
   140008d90:	je     0x140008df3
   140008d92:	je     0x140008dfd
   140008d94:	outs   dx,DWORD PTR ds:[rsi]
   140008d95:	outs   dx,BYTE PTR ds:[rsi]
   140008d96:	and    BYTE PTR [rsi+0x61],ah
   140008d99:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4f000000
   140008da1:	outs   dx,BYTE PTR ds:[rsi]
   140008da2:	rex.B je 0x140008e19
   140008da5:	outs   dx,BYTE PTR gs:[rsi]
   140008da7:	fs gs rex.XB outs dx,DWORD PTR gs:[rsi]
   140008dac:	outs   dx,BYTE PTR ds:[rsi]
   140008dad:	outs   dx,BYTE PTR ds:[rsi]
   140008dae:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140008db3:	and    BYTE PTR [rsi+0x61],ah
   140008db6:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   140008dbe:	add    BYTE PTR [rax],al
   140008dc0:	addr32 gs je 0x140008e23
   140008dc4:	rex.B je 0x140008e3b
   140008dc7:	outs   dx,BYTE PTR gs:[rsi]
   140008dc9:	fs gs and BYTE PTR gs:[rsi+0x61],ah
   140008dcf:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   140008dd7:	add    BYTE PTR [rdi+0x6e],cl
   140008dda:	rex.B je 0x140008e51
   140008ddd:	outs   dx,BYTE PTR gs:[rsi]
   140008ddf:	fs gs imul r14d,DWORD PTR gs:[rbx+0x63],0x656e6e6f
   140008dea:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140008dee:	and    BYTE PTR [rsi+0x61],ah
   140008df1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x43000000
   140008df9:	push   0x416b6365
   140008dfe:	je     0x140008e74
   140008e00:	outs   dx,BYTE PTR gs:[rsi]
   140008e02:	fs gs gs jae 0x140008e27
   140008e07:	data16 (bad) 
   140008e09:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x9f000021
   140008e11:	push   0x447cc187
   140008e16:	movabs eax,ds:0xecb7b3fbff149c44
   140008e1f:	(bad)  
   140008e20:	mov    bl,0x71
   140008e22:	(bad)  
   140008e23:	in     al,dx
   140008e24:	js     0x140008e41
   140008e26:	or     BYTE PTR [rbx-0x5c],0x64
   140008e2a:	xchg   ecx,eax
   140008e2b:	xor    ah,BYTE PTR [rsi*2+0x49a4e343]
   140008e32:	rex test DWORD PTR [rsi],0x8140283d
   140008e39:	xchg   ebx,eax
   140008e3a:	or     cl,BYTE PTR [rcx+rbp*1+0x35224bc]
   140008e41:	add    BYTE PTR [rax],al
   140008e43:	add    BYTE PTR [rbx],al
   140008e45:	add    BYTE PTR [rax],al
   140008e47:	add    BYTE PTR [rbx],al
   140008e49:	add    BYTE PTR [rax],al
   140008e4b:	add    BYTE PTR [rbx],al
   140008e4d:	add    BYTE PTR [rax],al
   140008e4f:	add    BYTE PTR [rdx],al
   140008e51:	add    BYTE PTR [rax],al
   140008e53:	add    BYTE PTR [rax],al
   140008e55:	add    BYTE PTR [rax],al
   140008e57:	add    BYTE PTR [rdx],al
	...
   140008e6d:	add    BYTE PTR [rax],al
   140008e6f:	add    BYTE PTR [rdx],al
   140008e71:	add    BYTE PTR [rax],al
   140008e73:	add    BYTE PTR [rax],al
   140008e75:	add    BYTE PTR [rax],al
   140008e77:	add    BYTE PTR [rip+0x4000000],al        # 0x144008e7d
	...
   140008e85:	add    BYTE PTR [rax],al
   140008e87:	add    BYTE PTR [rax+rax*1],al
   140008e8a:	add    BYTE PTR [rax],al
   140008e8c:	add    al,0x0
   140008e8e:	add    BYTE PTR [rax],al
   140008e90:	add    al,BYTE PTR [rax]
   140008e92:	add    BYTE PTR [rax],al
   140008e94:	add    BYTE PTR [rax],al
   140008e96:	add    BYTE PTR [rax],al
   140008e98:	add    al,BYTE PTR [rax]
	...
   140008ea2:	add    BYTE PTR [rax],al
   140008ea4:	add    DWORD PTR [rax],eax
   140008ea6:	add    BYTE PTR [rax],al
   140008ea8:	add    al,BYTE PTR [rax]
   140008eaa:	add    BYTE PTR [rax],al
   140008eac:	add    eax,DWORD PTR [rax]
   140008eae:	add    BYTE PTR [rax],al
   140008eb0:	add    al,0x0
   140008eb2:	add    BYTE PTR [rax],al
   140008eb4:	add    BYTE PTR [rax],al
   140008eb6:	add    BYTE PTR [rax],al
   140008eb8:	xchg   BYTE PTR [rax],cl
   140008eba:	mov    dl,0xee
   140008ebc:	jo     0x140008ea2
   140008ebe:	test   BYTE PTR [rsp+rax*4+0x2b],0x27
   140008ec3:	cmp    eax,eax
   140008ec5:	in     al,dx
   140008ec6:	pop    rsp
   140008ec7:	sti    
   140008ec8:	cwde   
   140008ec9:	(bad)  
   140008eca:	adc    DWORD PTR [rsi+0x4ab18458],eax
   140008ed0:	nop
   140008ed1:	or     DWORD PTR [rax-0x58],ebp
   140008ed4:	in     al,dx
   140008ed5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008ed6:	push   rbx
   140008ed7:	(bad)  
	...
   140008ee0:	push   rbx
   140008ee1:	add    BYTE PTR [rdi+0x0],ch
   140008ee4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   140008ee9:	add    BYTE PTR [rcx+0x0],ah
   140008eec:	jb     0x140008eee
   140008eee:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140008ef3:	add    BYTE PTR [rcx+0x0],ch
   140008ef6:	movsxd eax,DWORD PTR [rax]
   140008ef8:	jb     0x140008efa
   140008efa:	outs   dx,DWORD PTR ds:[rsi]
   140008efb:	add    BYTE PTR [rbx+0x0],dh
   140008efe:	outs   dx,DWORD PTR ds:[rsi]
   140008eff:	add    BYTE PTR [rsi+0x0],ah
   140008f02:	je     0x140008f04
   140008f04:	pop    rsp
   140008f05:	add    BYTE PTR [rax+rax*1+0x65],dl
   140008f09:	add    BYTE PTR [rdx+0x0],dh
   140008f0c:	ins    DWORD PTR es:[rdi],dx
   140008f0d:	add    BYTE PTR [rcx+0x0],ch
   140008f10:	outs   dx,BYTE PTR ds:[rsi]
   140008f11:	add    BYTE PTR [rcx+0x0],ah
   140008f14:	ins    BYTE PTR es:[rdi],dx
   140008f15:	add    BYTE PTR [rax],ah
   140008f17:	add    BYTE PTR [rbx+0x0],dl
   140008f1a:	add    BYTE PTR gs:[rdx+0x0],dh
   140008f1e:	jbe    0x140008f20
   140008f20:	imul   eax,DWORD PTR [rax],0x650063
   140008f26:	jae    0x140008f28
   140008f28:	pop    rsp
   140008f29:	add    BYTE PTR [rbx+0x0],dl
   140008f2c:	add    BYTE PTR gs:[rbx+0x0],dh
   140008f30:	jae    0x140008f32
   140008f32:	imul   eax,DWORD PTR [rax],0x6e006f
   140008f38:	add    BYTE PTR [r15+0x0],spl
   140008f3c:	add    BYTE PTR gs:[rsi+0x0],ch
   140008f40:	je     0x140008f42
   140008f42:	pop    rsp
   140008f43:	add    BYTE PTR [rax+0x0],cl
   140008f46:	(bad)  
   140008f47:	add    BYTE PTR [rsi+0x0],ch
   140008f4a:	add    BYTE PTR fs:[rax+rax*1+0x65],ch
   140008f4f:	add    BYTE PTR [rbx+0x0],dh
	...
   140008f5e:	add    BYTE PTR [rax],al
   140008f60:	push   rbx
   140008f61:	add    BYTE PTR [rdi+0x0],ch
   140008f64:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   140008f69:	add    BYTE PTR [rcx+0x0],ah
   140008f6c:	jb     0x140008f6e
   140008f6e:	add    BYTE PTR gs:[rax+rax*1+0x50],bl
   140008f73:	add    BYTE PTR [rdi+0x0],ch
   140008f76:	ins    BYTE PTR es:[rdi],dx
   140008f77:	add    BYTE PTR [rcx+0x0],ch
   140008f7a:	movsxd eax,DWORD PTR [rax]
   140008f7c:	imul   eax,DWORD PTR [rax],0x730065
   140008f82:	pop    rsp
   140008f83:	add    BYTE PTR [rbp+0x0],cl
   140008f86:	imul   eax,DWORD PTR [rax],0x720063
   140008f8c:	outs   dx,DWORD PTR ds:[rsi]
   140008f8d:	add    BYTE PTR [rbx+0x0],dh
   140008f90:	outs   dx,DWORD PTR ds:[rsi]
   140008f91:	add    BYTE PTR [rsi+0x0],ah
   140008f94:	je     0x140008f96
   140008f96:	pop    rsp
   140008f97:	add    BYTE PTR [rdi+0x0],dl
   140008f9a:	imul   eax,DWORD PTR [rax],0x64006e
   140008fa0:	outs   dx,DWORD PTR ds:[rsi]
   140008fa1:	add    BYTE PTR [rdi+0x0],dh
   140008fa4:	jae    0x140008fa6
   140008fa6:	and    BYTE PTR [rax],al
   140008fa8:	rex.WRX add BYTE PTR [rax+r8*1+0x5c],r10b
   140008fad:	add    BYTE PTR [rax+rax*1+0x65],dl
   140008fb1:	add    BYTE PTR [rdx+0x0],dh
   140008fb4:	ins    DWORD PTR es:[rdi],dx
   140008fb5:	add    BYTE PTR [rcx+0x0],ch
   140008fb8:	outs   dx,BYTE PTR ds:[rsi]
   140008fb9:	add    BYTE PTR [rcx+0x0],ah
   140008fbc:	ins    BYTE PTR es:[rdi],dx
   140008fbd:	add    BYTE PTR [rax],ah
   140008fbf:	add    BYTE PTR [rbx+0x0],dl
   140008fc2:	add    BYTE PTR gs:[rdx+0x0],dh
   140008fc6:	jbe    0x140008fc8
   140008fc8:	imul   eax,DWORD PTR [rax],0x650063
   140008fce:	jae    0x140008fd0
	...
   140008fd8:	push   rdx
   140008fd9:	add    BYTE PTR [rax+rax*1+0x70],ah
   140008fdd:	add    BYTE PTR [rbx+0x0],dl
   140008fe0:	push   0x72006100
   140008fe5:	add    BYTE PTR [rcx+0x0],ch
   140008fe8:	outs   dx,BYTE PTR ds:[rsi]
   140008fe9:	add    BYTE PTR [rdi+0x0],ah
   140008fec:	rex.RXB add BYTE PTR [r10+0x0],r14b
   140008ff0:	outs   dx,DWORD PTR ds:[rsi]
   140008ff1:	add    BYTE PTR [rbp+0x0],dh
   140008ff4:	jo     0x140008ff6
   140008ff6:	and    eax,0x75006c00
   140008ffb:	add    BYTE PTR [rax],al
   140008ffd:	add    BYTE PTR [rax],al
   140008fff:	add    dl,bl
   140009001:	cmp    ebx,DWORD PTR [rbx]
   140009003:	xchg   ebx,eax
   140009004:	fistp  DWORD PTR [rbp+0x27]
   140009007:	(bad)  
   140009008:	je     0x140009053
   14000900a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000900b:	in     eax,0xcd
   14000900d:	adc    al,0xbd
   14000900f:	add    eax,DWORD PTR [rax]
   140009011:	add    BYTE PTR [rax],al
   140009013:	add    BYTE PTR [rax],al
   140009015:	add    BYTE PTR [rax],al
   140009017:	add    al,al
   140009019:	add    BYTE PTR [rax],al
   14000901b:	add    BYTE PTR [rax],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	rex.RX add DWORD PTR [rax],r8d
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    BYTE PTR [rax],al
   140009026:	add    BYTE PTR [rax],al
   140009028:	rol    BYTE PTR [rax],0x0
   14000902b:	add    BYTE PTR [rax],al
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	rex.RX add BYTE PTR [rax],r8b
   140009032:	add    BYTE PTR [rax],al
   140009034:	add    BYTE PTR [rax],al
   140009036:	add    BYTE PTR [rax],al
   140009038:	out    0xf0,al
   14000903a:	js     0x140008fd7
   14000903c:	add    eax,0xb24a5b3e
   140009041:	call   0xd5a8d42d
   140009046:	imul   esp,DWORD PTR [rbp+0x42],0x70
   14000904a:	test   eax,0xe9669898
   14000904f:	rex mov ?,ebp
   140009052:	mov    bl,0x20
   140009054:	or     DWORD PTR [rax+0x4004b00],edx
   14000905a:	add    al,BYTE PTR [rax]
   14000905c:	add    BYTE PTR [rax],al
   14000905e:	add    BYTE PTR [rax],al
   140009060:	rol    BYTE PTR [rax],0x0
   140009063:	add    BYTE PTR [rax],al
   140009065:	add    BYTE PTR [rax],al
   140009067:	rex.RX add BYTE PTR [rax],r8b
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	add    BYTE PTR [rax],al
   14000906e:	add    BYTE PTR [rax],al
   140009070:	rol    BYTE PTR [rax],0x0
   140009073:	add    BYTE PTR [rax],al
   140009075:	add    BYTE PTR [rax],al
   140009077:	rex.RX (bad) 
   14000907b:	mov    dh,0xcd
   14000907d:	repnz mov ch,BYTE PTR [rax]
   140009080:	jg     0x1400090a9
   140009082:	mov    dl,0xd3
   140009084:	(bad)  
   140009085:	cmp    al,BYTE PTR [rbx-0x17]
   140009088:	clc    
   140009089:	mov    esp,0xc0945ce9
   14000908e:	imul   ebp,DWORD PTR [rsi-0x32f68c1e],0xa354ba01
   140009098:	rex.XB jb 0x140009100
   14000909b:	(bad)  
   14000909c:	je     0x140009103
   14000909e:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x787443
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	push   rbx
   1400090a9:	je     0x14000911d
   1400090ab:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f7246
   1400090b2:	rex.XB
   1400090b3:	rex.WR push rbx
   1400090b5:	rex.WB
   1400090b6:	add    BYTE PTR [rbx+0x0],r10b
   1400090ba:	add    BYTE PTR gs:[rbx+0x0],dh
   1400090be:	jae    0x1400090c0
   1400090c0:	imul   eax,DWORD PTR [rax],0x6e006f
   1400090c6:	cmp    al,BYTE PTR [rax]
   1400090c8:	and    eax,0x21006400
   1400090cd:	add    BYTE PTR [rbx+0x0],ah
   1400090d0:	ins    BYTE PTR es:[rdi],dx
   1400090d1:	add    BYTE PTR [rbx+0x0],dh
   1400090d4:	imul   eax,DWORD PTR [rax],0x3a0064
   1400090da:	and    eax,0x7300
   1400090df:	add    BYTE PTR [rbx+0x74],dl
   1400090e2:	jb     0x14000914d
   1400090e4:	outs   dx,BYTE PTR ds:[rsi]
   1400090e5:	rex.XB movsxd ebp,DWORD PTR [r8d+0x50]
   1400090ea:	jb     0x140009155
   1400090ec:	outs   dx,BYTE PTR ds:[rsi]
   1400090ed:	je     0x140009155
   1400090ef:	add    BYTE PTR [rbp+0x6b],cl
   1400090f2:	push   rax
   1400090f3:	(bad)  
   1400090f4:	jb     0x140009169
   1400090f6:	imul   r14d,DWORD PTR gs:[rbx+0x70],0x4e79616c
   1400090ff:	(bad)  
   140009100:	ins    DWORD PTR es:[rdi],dx
   140009101:	add    BYTE PTR gs:[rax],al
   140009104:	add    BYTE PTR [rax],al
   140009106:	add    BYTE PTR [rax],al
   140009108:	jo     0x140009157
   14000910a:	outs   dx,DWORD PTR ds:[rsi]
   14000910b:	outs   dx,BYTE PTR ds:[rsi]
   14000910c:	imul   ebp,DWORD PTR [rbx+0x65],0x423e2d72
   140009113:	imul   ebp,DWORD PTR [rsi+0x64],0x624f6f54
   14000911a:	push   0x65
   14000911c:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140009120:	jo     0x140009165
   140009122:	ins    BYTE PTR es:[rdi],dx
   140009123:	(bad)  
   140009124:	jae    0x140009199
   140009126:	rex.RX (bad) 
   140009128:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000912c:	jns    0x14000915b
   14000912e:	ds rex.XB jb 0x140009197
   140009132:	(bad)  
   140009133:	je     0x14000919a
   140009135:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009137:	jae    0x1400091ad
   140009139:	(bad)  
   14000913a:	outs   dx,BYTE PTR ds:[rsi]
   14000913b:	movsxd esp,DWORD PTR [rbp+0x0]
   14000913e:	add    BYTE PTR [rax],al
   140009140:	(bad)  
   140009141:	sbb    ecx,DWORD PTR [rax-0x1f]
   140009144:	int3   
   140009145:	rex.WRX fcom DWORD PTR [rdi+0x25032cf9]
   14000914c:	loop   0x1400091a1
   14000914e:	enter  0x843d,0xb2
   140009152:	xchg   esi,eax
   140009153:	mov    cl,0xb4
   140009155:	mov    edx,0x9cb6101a
   14000915a:	add    BYTE PTR [rdx+0x71d3400],ch
   140009160:	add    BYTE PTR [rax],al
   140009162:	add    BYTE PTR [rax],al
   140009164:	adc    BYTE PTR [rbx],bh
   140009166:	lahf   
   140009167:	push   rbp
   140009168:	add    BYTE PTR [rax],al
   14000916a:	add    BYTE PTR [rax],al
   14000916c:	add    al,BYTE PTR [rax]
   14000916e:	add    BYTE PTR [rax],al
   140009170:	and    al,BYTE PTR [rax]
   140009172:	add    BYTE PTR [rax],al
   140009174:	(bad)  
   140009175:	xchg   edx,eax
   140009176:	add    BYTE PTR [rax],al
   140009178:	(bad)  
   140009179:	jl     0x14000917b
   14000917b:	add    BYTE PTR [rax],al
   14000917d:	add    BYTE PTR [rax],al
   14000917f:	add    BYTE PTR [rax],dl
   140009181:	cmp    ebx,DWORD PTR [rdi+0x55]
   140009187:	add    BYTE PTR [rip+0x1c000000],cl        # 0x15c00918d
   14000918d:	add    al,BYTE PTR [rax]
   14000918f:	add    BYTE PTR [rax-0x67ffff6e],bl
   140009195:	jl     0x140009197
	...
   1400091bf:	add    BYTE PTR [rax+0x0],ah
	...
   140009215:	add    BYTE PTR [rax],al
   140009217:	add    BYTE PTR [rax],cl
   140009219:	mov    al,0x0
   14000921b:	rex add DWORD PTR [rax],eax
	...
   14000922e:	add    BYTE PTR [rax],al
   140009230:	rol    BYTE PTR [rbx+0x14000],1
   140009236:	add    BYTE PTR [rax],al
   140009238:	fadd   DWORD PTR [rbx+0x14000]
   14000923e:	add    BYTE PTR [rax],al
   140009240:	and    BYTE PTR [rax+rax*1+0x140],al
   140009247:	add    BYTE PTR [rcx],ch
	...
   140009251:	xor    eax,0x0
	...
   14000925e:	add    BYTE PTR [rax],al
   140009260:	push   rdx
   140009261:	push   rbx
   140009262:	rex.R push rbx
   140009264:	cli    
   140009265:	pop    rdx
   140009266:	repnz mov ecx,eax
   140009269:	rex.WRXB pop r13
   14000926b:	xchg   rsp,rax
   14000926d:	in     al,0x14
   14000926f:	mov    ah,0x4e
   140009271:	and    DWORD PTR [rbp-0x7e],0x1
   140009275:	add    BYTE PTR [rax],al
   140009277:	add    BYTE PTR [rdx+0x64],dl
   14000927a:	jo     0x1400092cf
   14000927c:	(bad)  
   14000927d:	cs jo  0x1400092e4
   140009280:	(bad)  
	...
   140009295:	add    BYTE PTR [rax],al
   140009297:	add    BYTE PTR [rdi+0x43],al
   14000929a:	push   rsp
   14000929b:	rex.WR add BYTE PTR [rax],r10b
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	sbb    al,0x0
   1400092a2:	add    BYTE PTR [rax],al
   1400092a4:	cs je  0x14000930c
   1400092a7:	js     0x14000931d
   1400092a9:	and    al,0x64
   1400092ab:	imul   eax,DWORD PTR [rax],0x20000000
   1400092b1:	adc    BYTE PTR [rax],al
   1400092b3:	add    BYTE PTR [rax+0x63],ch
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	cs je  0x140009320
   1400092bb:	js     0x140009331
   1400092bd:	and    al,0x6d
   1400092bf:	outs   dx,BYTE PTR ds:[rsi]
   1400092c0:	add    BYTE PTR [rax],al
   1400092c2:	add    BYTE PTR [rax],al
   1400092c4:	nop
   1400092c5:	jae    0x1400092c7
   1400092c7:	add    BYTE PTR [rdx],dl
   1400092c9:	add    BYTE PTR [rax],al
   1400092cb:	add    BYTE PTR [rsi],ch
   1400092cd:	je     0x140009334
   1400092cf:	js     0x140009345
   1400092d1:	and    al,0x6d
   1400092d3:	outs   dx,BYTE PTR ds:[rsi]
   1400092d4:	and    al,0x30
   1400092d6:	xor    BYTE PTR [rax],al
   1400092d8:	mov    al,0x73
   1400092da:	add    BYTE PTR [rax],al
   1400092dc:	jo     0x1400092de
   1400092de:	add    BYTE PTR [rax],al
   1400092e0:	cs je  0x140009348
   1400092e3:	js     0x140009359
   1400092e5:	and    al,0x78
   1400092e7:	add    BYTE PTR [rax],ah
   1400092e9:	je     0x1400092eb
   1400092eb:	add    BYTE PTR [rdi],ch
   1400092ed:	add    BYTE PTR [rax],al
   1400092ef:	add    BYTE PTR [rsi],ch
   1400092f1:	je     0x140009358
   1400092f3:	js     0x140009369
   1400092f5:	and    al,0x79
   1400092f7:	add    BYTE PTR fs:[rax],al
   1400092fa:	add    BYTE PTR [rax],al
   1400092fc:	add    BYTE PTR [rax+0x3d00000],al
   140009302:	add    BYTE PTR [rax],al
   140009304:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000930d:	add    BYTE PTR [rax],al
   14000930f:	add    al,dl
   140009311:	add    DWORD PTR [rax],0x0
   140009314:	adc    BYTE PTR [rax],al
   140009316:	add    BYTE PTR [rax],al
   140009318:	xor    BYTE PTR cs:[rax],dh
   14000931b:	movsxd esp,DWORD PTR [rsi+0x67]
   14000931e:	add    BYTE PTR [rax],al
   140009320:	loopne 0x1400092a5
   140009322:	add    BYTE PTR [rax],al
   140009324:	or     BYTE PTR [rax],al
   140009326:	add    BYTE PTR [rax],al
   140009328:	cs rex.XB push r10
   14000932b:	push   rsp
   14000932c:	and    al,0x58
   14000932e:	rex.XB
   14000932f:	add    BYTE PTR [r8],al
   140009332:	add    BYTE PTR [rax],al
   140009334:	call   0x1480093bc
   140009339:	add    BYTE PTR [rax],al
   14000933b:	add    BYTE PTR [rsi],ch
   14000933d:	rex.XB push r10
   14000933f:	push   rsp
   140009340:	and    al,0x58
   140009342:	rex.XB
   140009343:	rex.B
   140009344:	add    BYTE PTR [r8],al
   140009347:	add    al,dh
   140009349:	add    DWORD PTR [rax],0x0
   14000934c:	or     BYTE PTR [rax],al
   14000934e:	add    BYTE PTR [rax],al
   140009350:	cs rex.XB push r10
   140009353:	push   rsp
   140009354:	and    al,0x58
   140009356:	rex.XB push r13
   140009358:	add    BYTE PTR [rax],al
   14000935a:	add    BYTE PTR [rax],al
   14000935c:	clc    
   14000935d:	add    DWORD PTR [rax],0x0
   140009360:	or     BYTE PTR [rax],al
   140009362:	add    BYTE PTR [rax],al
   140009364:	cs rex.XB push r10
   140009367:	push   rsp
   140009368:	and    al,0x58
   14000936a:	rex.XB pop r10
   14000936c:	add    BYTE PTR [rax],al
   14000936e:	add    BYTE PTR [rax],al
   140009370:	add    BYTE PTR [rax+rax*1+0x800],al
   140009377:	add    BYTE PTR [rsi],ch
   140009379:	rex.XB push r10
   14000937b:	push   rsp
   14000937c:	and    al,0x58
   14000937e:	rex.WB
   14000937f:	add    BYTE PTR [r8],al
   140009382:	add    BYTE PTR [rax],al
   140009384:	or     BYTE PTR [rax+rax*1+0x800],al
   14000938b:	add    BYTE PTR [rsi],ch
   14000938d:	rex.XB push r10
   14000938f:	push   rsp
   140009390:	and    al,0x58
   140009392:	rex.WB
   140009393:	rex.B
   140009394:	add    BYTE PTR [r8],al
   140009397:	add    BYTE PTR [rax],dl
   140009399:	test   BYTE PTR [rax],al
   14000939b:	add    BYTE PTR [rax],cl
   14000939d:	add    BYTE PTR [rax],al
   14000939f:	add    BYTE PTR [rsi],ch
   1400093a1:	rex.XB push r10
   1400093a3:	push   rsp
   1400093a4:	and    al,0x58
   1400093a6:	rex.WB pop r9
   1400093a8:	add    BYTE PTR [rax],al
   1400093aa:	add    BYTE PTR [rax],al
   1400093ac:	sbb    BYTE PTR [rax+rax*1+0x800],al
   1400093b3:	add    BYTE PTR [rsi],ch
   1400093b5:	rex.XB push r10
   1400093b7:	push   rsp
   1400093b8:	and    al,0x58
   1400093ba:	rex.WB pop r10
   1400093bc:	add    BYTE PTR [rax],al
   1400093be:	add    BYTE PTR [rax],al
   1400093c0:	and    BYTE PTR [rax+rax*1+0xa400],al
   1400093c7:	add    BYTE PTR [rsi],ch
   1400093c9:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   1400093d1:	add    BYTE PTR [rax],al
   1400093d3:	add    al,dl
   1400093d5:	test   BYTE PTR [rax],al
   1400093d7:	add    BYTE PTR [rax+0x2e00000d],dl
   1400093dd:	jb     0x140009443
   1400093df:	(bad)  
   1400093e0:	je     0x140009443
   1400093e2:	add    BYTE PTR [rax],al
   1400093e4:	(bad)  
   1400093e5:	xchg   edx,eax
   1400093e6:	add    BYTE PTR [rax],al
   1400093e8:	push   rsp
   1400093e9:	add    al,BYTE PTR [rax]
   1400093eb:	add    BYTE PTR [rsi],ch
   1400093ed:	jb     0x140009453
   1400093ef:	(bad)  
   1400093f0:	je     0x140009453
   1400093f2:	and    al,0x7a
   1400093f4:	jp     0x140009470
   1400093f6:	fs (bad) 
   1400093f8:	add    BYTE PTR [eax],al
   1400093fb:	add    BYTE PTR [rax-0x63ffff6c],bh
   140009401:	add    eax,DWORD PTR [rax]
   140009403:	add    BYTE PTR [rsi],ch
   140009405:	js     0x14000946b
   140009407:	(bad)  
   140009408:	je     0x14000946b
   14000940a:	add    BYTE PTR [rax],al
   14000940c:	pop    rax
   14000940d:	cwde   
   14000940e:	add    BYTE PTR [rax],al
   140009410:	fadd   QWORD PTR [rax]
   140009412:	add    BYTE PTR [rax],al
   140009414:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   14000941d:	add    BYTE PTR [rax],al
   14000941f:	add    BYTE PTR [rcx+rbx*4],dh
   140009422:	add    BYTE PTR [rax],al
   140009424:	adc    al,0x0
   140009426:	add    BYTE PTR [rax],al
   140009428:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140009431:	add    BYTE PTR [rax],al
   140009433:	add    BYTE PTR [rax-0x67],cl
   140009436:	add    BYTE PTR [rax],al
   140009438:	rol    BYTE PTR [rbx],1
   14000943a:	add    BYTE PTR [rax],al
   14000943c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140009445:	add    BYTE PTR [rax],al
   140009447:	add    BYTE PTR [rax],bl
   140009449:	popf   
   14000944a:	add    BYTE PTR [rax],al
   14000944c:	(bad)  
   14000944d:	(bad)  
   14000944e:	add    BYTE PTR [rax],al
   140009450:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   140009459:	add    BYTE PTR [rax],al
   14000945b:	add    BYTE PTR [rax],al
   14000945d:	mov    al,0x0
   14000945f:	add    BYTE PTR [rax],ch
   140009461:	add    BYTE PTR [rax],al
   140009463:	add    BYTE PTR [rsi],ch
   140009465:	fs (bad) 
   140009467:	je     0x1400094ca
   140009469:	add    BYTE PTR [rax],al
   14000946b:	add    BYTE PTR [rax],dh
   14000946d:	mov    al,0x0
   14000946f:	add    BYTE PTR [rax+0x2e000006],cl
   140009475:	(bad)  
   140009477:	jae    0x140009479
   140009479:	add    BYTE PTR [rax],al
   14000947b:	add    BYTE PTR [rax],al
   14000947d:	rol    BYTE PTR [rax],0x0
   140009480:	add    rax,QWORD PTR [rax]
   140009483:	add    BYTE PTR [rsi],ch
   140009485:	jo     0x1400094eb
   140009487:	(bad)  
   140009488:	je     0x1400094eb
   14000948a:	add    BYTE PTR [rax],al
   14000948c:	add    al,dl
   14000948e:	add    BYTE PTR [rax],al
   140009490:	lock add BYTE PTR [rax],al
   140009493:	add    BYTE PTR [rsi],ch
   140009495:	jb     0x14000950a
   140009497:	jb     0x1400094fc
   140009499:	and    al,0x30
   14000949b:	xor    DWORD PTR [rax],eax
   14000949d:	add    BYTE PTR [rax],al
   14000949f:	add    al,dh
   1400094a1:	rol    BYTE PTR [rax],1
   1400094a3:	add    al,bl
   1400094a5:	or     BYTE PTR [rax],al
   1400094a7:	add    BYTE PTR [rsi],ch
   1400094a9:	jb     0x14000951e
   1400094ab:	jb     0x140009510
   1400094ad:	and    al,0x30
   1400094af:	xor    al,BYTE PTR [rax]
   1400094b1:	add    BYTE PTR [rax],al
   1400094b3:	add    BYTE PTR [rax],al
   1400094b5:	add    BYTE PTR [rax],al
   1400094b7:	add    BYTE PTR [rcx],al
   1400094b9:	or     al,BYTE PTR [rax+rax*1]
   1400094bc:	or     dh,BYTE PTR [rsi+rax*1]
   1400094bf:	add    BYTE PTR [rdx],cl
   1400094c1:	xor    al,BYTE PTR [rsi]
   1400094c3:	jo     0x1400094c6
   1400094c5:	or     eax,DWORD PTR [rcx]
   1400094c7:	add    BYTE PTR [rbx],cl
   1400094c9:	movabs ds:0xc209000109010000,al
   1400094d2:	add    BYTE PTR [rax],al
   1400094d4:	add    DWORD PTR [rcx],ebx
   1400094d6:	or     al,BYTE PTR [rax]
   1400094d8:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   1400094dc:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   1400094e0:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400094e4:	sbb    DWORD PTR [rsi+rax*1],esi
   1400094e7:	add    BYTE PTR [rcx],bl
   1400094e9:	xor    dl,BYTE PTR [rip+0x91701e0]        # 0x1491796cf
   1400094ef:	add    BYTE PTR [rdi],dl
   1400094f1:	sbb    al,BYTE PTR fs:[rax]
   1400094f4:	(bad)  
   1400094f5:	push   rsp
   1400094f6:	sbb    DWORD PTR [rax],eax
   1400094f8:	(bad)  
   1400094f9:	xor    al,0x18
   1400094fb:	add    BYTE PTR [rdi],dl
   1400094fd:	add    DWORD PTR [rsi],edx
   1400094ff:	add    BYTE PTR [rax],dl
   140009501:	jo     0x140009503
   140009503:	add    BYTE PTR [rcx],al
   140009505:	sbb    DWORD PTR [rdx],ecx
   140009507:	add    BYTE PTR [rcx],bl
   140009509:	je     0x140009516
   14000950b:	add    BYTE PTR [rcx],bl
   14000950d:	or     al,BYTE PTR fs:[rax]
   140009510:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140009514:	sbb    DWORD PTR [rax+rcx*1],esi
   140009517:	add    BYTE PTR [rcx],bl
   140009519:	push   rdx
   14000951a:	adc    eax,0xa1901e0
   14000951f:	add    BYTE PTR [rcx],bl
   140009521:	in     al,0xb
   140009523:	add    BYTE PTR [rcx],bl
   140009525:	je     0x140009531
   140009527:	add    BYTE PTR [rcx],bl
   140009529:	or     DWORD PTR fs:[rax],eax
   14000952c:	sbb    DWORD PTR [rax+rcx*1],esi
   14000952f:	add    BYTE PTR [rcx],bl
   140009531:	push   rdx
   140009532:	adc    eax,0xa1801f0
   140009537:	add    BYTE PTR [rax],bl
   140009539:	fs or  al,0x0
   14000953c:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140009540:	sbb    BYTE PTR [rdx+rcx*1],dh
   140009543:	add    BYTE PTR [rax],bl
   140009545:	push   rdx
   140009546:	adc    al,0xf0
   140009548:	adc    ah,al
   14000954a:	adc    BYTE PTR [rax+0x1],dh
   14000954d:	(bad)  
   14000954e:	or     al,BYTE PTR [rax]
   140009550:	(bad)  
   140009551:	push   rsp
   140009552:	(bad)  
   140009553:	add    BYTE PTR [rdi],dl
   140009555:	xor    al,0xc
   140009557:	add    BYTE PTR [rdi],dl
   140009559:	push   rdx
   14000955a:	adc    esi,eax
   14000955c:	adc    eax,esp
   14000955e:	xadd   BYTE PTR [rip+0x19600c70],cl        # 0x15960a1d5
   140009565:	adc    eax,0x72060002
   14000956a:	add    dh,BYTE PTR [rax]
   14000956c:	call   0x1780095e3
   140009571:	add    BYTE PTR [rax],al
   140009573:	add    BYTE PTR [rcx],al
   140009575:	clts   
   140009577:	add    BYTE PTR [rdi],cl
   140009579:	fs (bad) 
   14000957b:	add    BYTE PTR [rdi],cl
   14000957d:	xor    al,0x6
   14000957f:	add    BYTE PTR [rdi],cl
   140009581:	xor    cl,BYTE PTR [rbx]
   140009583:	jo     0x140009586
   140009585:	add    al,0x1
   140009587:	add    BYTE PTR [rdx+rax*2],al
   14000958a:	add    BYTE PTR [rax],al
   14000958c:	add    DWORD PTR [rbx],esp
   14000958e:	or     eax,0x1c742300
   140009593:	add    BYTE PTR [rbx],ah
   140009595:	sbb    eax,DWORD PTR fs:[rax]
   140009598:	and    esi,DWORD PTR [rdx+rbx*1]
   14000959b:	add    BYTE PTR [rbx],ah
   14000959d:	add    DWORD PTR [rax+rax*1],edx
   1400095a0:	sbb    al,dh
   1400095a2:	(bad)  
   1400095a3:	loopne 0x1400095b9
   1400095a5:	rcl    BYTE PTR [rdx],1
   1400095a7:	rcl    BYTE PTR [rax],0x50
   1400095aa:	add    BYTE PTR [rax],al
   1400095ac:	add    DWORD PTR [rax+rcx*1],edx
   1400095af:	add    BYTE PTR [rsp+riz*2],dl
   1400095b2:	or     BYTE PTR [rax],al
   1400095b4:	adc    al,0x54
   1400095b6:	(bad)  
   1400095b7:	add    BYTE PTR [rsp+rsi*1],dl
   1400095ba:	(bad)  
   1400095bb:	add    BYTE PTR [rdx+rsi*1],dl
   1400095be:	adc    BYTE PTR [rax+0x1],dh
   1400095c1:	sbb    BYTE PTR [rdx],cl
   1400095c3:	add    BYTE PTR [rax],bl
   1400095c5:	or     al,BYTE PTR fs:[rax]
   1400095c8:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400095cc:	sbb    BYTE PTR [rax+rcx*1],dh
   1400095cf:	add    BYTE PTR [rax],bl
   1400095d1:	xor    dl,BYTE PTR [rax+rsi*8]
   1400095d4:	adc    ah,al
   1400095d6:	adc    BYTE PTR [rax+0x19],dh
   1400095d9:	sub    cl,BYTE PTR [rbx]
   1400095db:	add    BYTE PTR [rsp+rsi*1],bl
   1400095de:	sbb    al,0x0
   1400095e0:	sbb    al,0x1
   1400095e2:	adc    al,BYTE PTR [rax]
   1400095e4:	adc    al,dh
   1400095e6:	(bad)  
   1400095e7:	loopne 0x1400095f5
   1400095e9:	ror    BYTE PTR [rdx],1
   1400095eb:	ror    BYTE PTR [rax],0x70
   1400095ee:	(bad)  
   1400095ef:	(bad)  
   1400095f0:	(bad)  
   1400095f1:	push   rax
   1400095f2:	add    BYTE PTR [rax],al
   1400095f4:	call   0xc000966b
   1400095f9:	add    BYTE PTR [rax],al
   1400095fb:	add    BYTE PTR [rcx],al
   1400095fd:	adc    al,0x8
   1400095ff:	add    BYTE PTR [rsp+riz*2],dl
   140009602:	or     al,BYTE PTR [rax]
   140009604:	adc    al,0x54
   140009606:	or     DWORD PTR [rax],eax
   140009608:	adc    al,0x34
   14000960a:	or     BYTE PTR [rax],al
   14000960c:	adc    al,0x52
   14000960e:	adc    BYTE PTR [rax+0x1],dh
   140009611:	adc    eax,0x74150008
   140009616:	or     al,BYTE PTR [rax]
   140009618:	adc    eax,0x15000964
   14000961d:	xor    al,0x8
   14000961f:	add    BYTE PTR [rip+0x19e01152],dl        # 0x159e0a777
   140009625:	(bad)  
   140009626:	or     al,BYTE PTR [rax]
   140009628:	sbb    DWORD PTR [rcx],eax
   14000962a:	sbb    DWORD PTR [rax],eax
   14000962c:	or     eax,0x9e00bf0
   140009631:	rol    BYTE PTR [rdi],1
   140009633:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143609aaa
   14000963a:	add    dl,BYTE PTR [rax-0x18]
   14000963d:	jb     0x14000963f
   14000963f:	add    BYTE PTR [rax+0x1000000],dh
   140009645:	(bad)  
   140009646:	(bad)  
   140009647:	add    BYTE PTR [rsi],cl
   140009649:	rol    BYTE PTR [rdi],cl
   14000964b:	loopne 0x140009652
   14000964d:	jo     0x140009653
   14000964f:	(bad)  
   140009650:	add    esi,DWORD PTR [rax]
   140009652:	add    dl,BYTE PTR [rax+0x1]
   140009655:	adc    al,0x6
   140009657:	add    BYTE PTR [rsp+riz*2],dl
   14000965a:	or     eax,0xb341400
   14000965f:	add    BYTE PTR [rdx+rsi*2],dl
   140009662:	adc    BYTE PTR [rax+0x1],dh
   140009665:	adc    eax,DWORD PTR [rsi]
   140009667:	add    BYTE PTR [rbx],dl
   140009669:	xor    al,0xd
   14000966b:	add    BYTE PTR [rbx],dl
   14000966d:	jb     0x14000967e
   14000966f:	loopne 0x14000967e
   140009671:	jo     0x14000967f
   140009673:	(bad)  
   140009674:	add    DWORD PTR [rax],esp
   140009676:	or     al,0x0
   140009678:	and    BYTE PTR [rdi+rcx*1+0x0],ah
   14000967c:	and    BYTE PTR [rsi+rcx*1+0x0],dl
   140009680:	and    BYTE PTR [rcx*1+0x1c522000],dh
   140009687:	lock sbb ah,al
   14000968a:	sbb    al,dl
   14000968c:	(bad)  
   14000968d:	rcl    BYTE PTR [rax+rsi*2],0x1
   140009691:	adc    BYTE PTR [rsi],al
   140009693:	add    BYTE PTR [rax],dl
   140009695:	or     al,BYTE PTR fs:[rax]
   140009698:	adc    BYTE PTR [rcx+rcx*1],dh
   14000969b:	add    BYTE PTR [rax],dl
   14000969d:	push   rdx
   14000969e:	or     al,0x70
   1400096a0:	add    DWORD PTR [rdx],ebx
   1400096a2:	or     BYTE PTR [rax],al
   1400096a4:	sbb    ah,BYTE PTR [rdi+rcx*1+0x0]
   1400096a8:	sbb    dh,BYTE PTR [rsi+rcx*1]
   1400096ab:	add    BYTE PTR [rdx],bl
   1400096ad:	jb     0x1400096c2
   1400096af:	loopne 0x1400096c2
   1400096b1:	jo     0x1400096c3
   1400096b3:	push   rax
   1400096b4:	add    DWORD PTR [rax],ebx
   1400096b6:	or     BYTE PTR [rax],al
   1400096b8:	sbb    BYTE PTR [rbx+rdx*1+0x0],ah
   1400096bc:	sbb    BYTE PTR [rdx+rdx*1+0x0],dl
   1400096c0:	sbb    BYTE PTR [rcx+rdx*1],dh
   1400096c3:	add    BYTE PTR [rax],bl
   1400096c5:	rcl    BYTE PTR [rax+rsi*2],cl
   1400096c8:	sbb    DWORD PTR [rcx+rcx*1],ebp
   1400096cb:	add    BYTE PTR [rbx],bl
   1400096cd:	xor    al,0x18
   1400096cf:	add    DWORD PTR [rbx],ebx
   1400096d1:	add    DWORD PTR [rax],edx
   1400096d3:	add    DWORD PTR [rax+rsi*8],ecx
   1400096d6:	or     ah,al
   1400096d8:	or     BYTE PTR [rax+0x7],dh
   1400096db:	(bad)  
   1400096dc:	(bad)  
   1400096dd:	push   rax
   1400096de:	add    BYTE PTR [rax],al
   1400096e0:	call   0x1b0009757
   1400096e5:	or     BYTE PTR [rax],al
   1400096e7:	add    BYTE PTR [rcx],bl
   1400096e9:	sbb    al,0x3
   1400096eb:	add    BYTE PTR [rsi],cl
   1400096ed:	add    DWORD PTR [rax+rax*1],edx
   1400096f0:	add    dl,BYTE PTR [rax+0x0]
   1400096f3:	add    al,ch
   1400096f5:	jb     0x1400096f7
   1400096f7:	add    BYTE PTR [rax+0x1000000],dl
   1400096fd:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e42a903
   140009703:	jo     0x140009712
   140009705:	(bad)  
   140009706:	or     al,0x50
   140009708:	or     esi,DWORD PTR [rax]
   14000970a:	add    BYTE PTR [rax],al
   14000970c:	add    DWORD PTR [rsi],eax
   14000970e:	add    al,BYTE PTR [rax]
   140009710:	(bad)  
   140009711:	xor    al,BYTE PTR [rdx]
   140009713:	xor    BYTE PTR [rcx],al
   140009715:	clts   
   140009717:	add    BYTE PTR [rdi],cl
   140009719:	or     DWORD PTR fs:[rax],eax
   14000971c:	sysenter 
   14000971e:	or     BYTE PTR [rax],al
   140009720:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140009723:	jo     0x140009726
   140009725:	adc    cl,BYTE PTR [rax]
   140009727:	add    BYTE PTR [rdx],dl
   140009729:	push   rsp
   14000972a:	or     al,BYTE PTR [rax]
   14000972c:	adc    dh,BYTE PTR [rax+rcx*1]
   14000972f:	add    BYTE PTR [rdx],dl
   140009731:	xor    cl,BYTE PTR [rsi]
   140009733:	loopne 0x140009741
   140009735:	jo     0x140009742
   140009737:	(bad)  
   140009738:	add    DWORD PTR [rcx],ebx
   14000973a:	or     al,BYTE PTR [rax]
   14000973c:	sbb    DWORD PTR [rdi+rcx*1+0x0],esi
   140009740:	sbb    DWORD PTR [rsi+rcx*1+0x0],esp
   140009744:	sbb    DWORD PTR [rbp+rcx*1+0x0],edx
   140009748:	sbb    DWORD PTR [rsp+rcx*1],esi
   14000974b:	add    BYTE PTR [rcx],bl
   14000974d:	xchg   edx,eax
   14000974e:	adc    eax,0xa1901e0
   140009753:	add    BYTE PTR [rcx],bl
   140009755:	adc    eax,DWORD PTR fs:[rax]
   140009758:	sbb    DWORD PTR [rdx+rdx*1],esi
   14000975b:	add    BYTE PTR [rcx],bl
   14000975d:	mov    dl,0x12
   14000975f:	lock adc al,ah
   140009762:	(bad)  
   140009763:	ror    BYTE PTR [rax+rsi*2],0xb
   140009767:	push   rax
   140009768:	sbb    DWORD PTR [rsi],ebp
   14000976a:	or     DWORD PTR [rax],eax
   14000976c:	sbb    eax,0x1d005464
   140009771:	xor    al,0x53
   140009773:	add    BYTE PTR [rip+0xe004e01],bl        # 0x14e00e57a
   140009779:	loopne 0x140009787
   14000977b:	jo     0x140009788
   14000977d:	push   rax
   14000977e:	add    BYTE PTR [rax],al
   140009780:	call   0x1a00097f7
   140009785:	add    al,BYTE PTR [rax]
   140009787:	add    BYTE PTR [rcx],al
   140009789:	add    al,0x1
   14000978b:	add    BYTE PTR [rdx+riz*2],al
   14000978e:	add    BYTE PTR [rax],al
   140009790:	or     DWORD PTR [rbx+rcx*1],ebx
   140009793:	add    BYTE PTR [rsp+rsi*2],bl
   140009796:	sbb    al,0x0
   140009798:	sbb    al,0x64
   14000979a:	sbb    eax,DWORD PTR [rax]
   14000979c:	sbb    al,0x34
   14000979e:	sbb    al,BYTE PTR [rax]
   1400097a0:	sbb    al,0x1
   1400097a2:	(bad)  
   1400097a3:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0ab99
   1400097a9:	rol    BYTE PTR [rax],0x0
   1400097ac:	(bad)  
   1400097ad:	jo     0x1400097af
   1400097af:	add    BYTE PTR [rcx],al
   1400097b1:	add    BYTE PTR [rax],al
   1400097b3:	add    BYTE PTR [rax+0x6a],dl
   1400097b6:	add    BYTE PTR [rax],al
   1400097b8:	rex.RX ins BYTE PTR es:[rdi],dx
   1400097ba:	add    BYTE PTR [rax],al
   1400097bc:	mov    dh,0x73
   1400097be:	add    BYTE PTR [rax],al
   1400097c0:	rex.RX ins BYTE PTR es:[rdi],dx
   1400097c2:	add    BYTE PTR [rax],al
   1400097c4:	add    DWORD PTR [rsi],eax
   1400097c6:	add    al,BYTE PTR [rax]
   1400097c8:	(bad)  
   1400097c9:	xor    al,BYTE PTR [rdx]
   1400097cb:	push   rax
   1400097cc:	add    BYTE PTR [rax],al
   1400097ce:	add    BYTE PTR [rax],al
   1400097d0:	add    DWORD PTR [rax],eax
   1400097d2:	add    BYTE PTR [rax],al
   1400097d4:	adc    DWORD PTR [rdx],ecx
   1400097d6:	add    al,0x0
   1400097d8:	or     dh,BYTE PTR [rsi+rax*1]
   1400097db:	add    BYTE PTR [rdx],cl
   1400097dd:	xor    al,BYTE PTR [rsi]
   1400097df:	jo     0x1400097b7
   1400097e1:	jo     0x1400097e3
   1400097e3:	add    BYTE PTR [rcx],al
   1400097e5:	add    BYTE PTR [rax],al
   1400097e7:	add    BYTE PTR [rip+0x7a00006d],dh        # 0x1ba00985a
   1400097ed:	ins    DWORD PTR es:[rdi],dx
   1400097ee:	add    BYTE PTR [rax],al
   1400097f0:	fidiv  DWORD PTR [rbx+0x0]
   1400097f3:	add    BYTE PTR [rax],al
   1400097f5:	add    BYTE PTR [rax],al
   1400097f7:	add    BYTE PTR [rcx],cl
   1400097f9:	add    al,0x1
   1400097fb:	add    BYTE PTR [rdx+riz*1],al
   1400097fe:	add    BYTE PTR [rax],al
   140009800:	(bad)  
   140009801:	jo     0x140009803
   140009803:	add    BYTE PTR [rcx],al
   140009805:	add    BYTE PTR [rax],al
   140009807:	add    BYTE PTR [rsi+rbp*2+0x0],ch
   14000980b:	add    BYTE PTR [rdx+0x100006e],ah
   140009811:	add    BYTE PTR [rax],al
   140009813:	add    BYTE PTR [rdx+0x900006e],ah
   140009819:	or     al,BYTE PTR [rax+rax*1]
   14000981c:	or     dh,BYTE PTR [rsi+rax*1]
   14000981f:	add    BYTE PTR [rdx],cl
   140009821:	xor    al,BYTE PTR [rsi]
   140009823:	jo     0x1400097fb
   140009825:	jo     0x140009827
   140009827:	add    BYTE PTR [rcx],al
   140009829:	add    BYTE PTR [rax],al
   14000982b:	add    BYTE PTR [rbp+0x6f],ch
   14000982e:	add    BYTE PTR [rax],al
   140009830:	movabs al,ds:0xa00000740000006f
   140009839:	outs   dx,DWORD PTR ds:[rsi]
   14000983a:	add    BYTE PTR [rax],al
   14000983c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d9846
   140009842:	or     DWORD PTR [rax],eax
   140009844:	or     eax,0x1500632
   140009849:	or     al,0x2
   14000984b:	add    BYTE PTR [rcx+rax*1],cl
   14000984e:	adc    DWORD PTR [rax],eax
   140009850:	add    DWORD PTR [rax],eax
   140009852:	add    BYTE PTR [rax],al
   140009854:	add    BYTE PTR [rax],al
   140009856:	add    BYTE PTR [rax],al
   140009858:	cqo    
	...
   140009862:	add    BYTE PTR [rax],al
   140009864:	call   0x140009906
   140009869:	add    BYTE PTR [rax],0x0
   14000986c:	loopne 0x140009807
	...
   140009876:	add    BYTE PTR [rax],al
   140009878:	push   rsp
   140009879:	lahf   
   14000987a:	add    BYTE PTR [rax],al
   14000987c:	cwde   
   14000987d:	add    BYTE PTR [rax],0x0
   140009880:	sbb    BYTE PTR [rbx+0x0],bl
   140009886:	add    BYTE PTR [rax],al
   140009888:	add    BYTE PTR [rax],al
   14000988a:	add    BYTE PTR [rax],al
   14000988c:	movabs al,ds:0x9bd8000081d00000
	...
   14000989e:	add    BYTE PTR [rax],al
   1400098a0:	(bad)  
   1400098a1:	movabs eax,ds:0x9ba0000082900000
	...
   1400098b2:	add    BYTE PTR [rax],al
   1400098b4:	mov    al,0xa1
   1400098b6:	add    BYTE PTR [rax],al
   1400098b8:	pop    rax
   1400098b9:	(bad)  
   1400098ba:	add    BYTE PTR [rax],al
   1400098bc:	loopne 0x14000985a
	...
   1400098c6:	add    BYTE PTR [rax],al
   1400098c8:	or     al,0xa2
   1400098ca:	add    BYTE PTR [rax],al
   1400098cc:	cwde   
   1400098cd:	add    DWORD PTR [rax],0x0
   1400098d0:	test   al,0x9c
	...
   1400098da:	add    BYTE PTR [rax],al
   1400098dc:	xchg   esi,eax
   1400098dd:	movabs ds:0x9ae0000083600000,al
	...
   1400098ee:	add    BYTE PTR [rax],al
   1400098f0:	movabs al,ds:0x88000081980000a2
   1400098f9:	fwait
	...
   140009902:	add    BYTE PTR [rax],al
   140009904:	loopne 0x1400098a8
   140009906:	add    BYTE PTR [rax],al
   140009908:	rex (bad) 
   14000990a:	add    BYTE PTR [rax],al
   14000990c:	rcr    BYTE PTR [rbx+0x0],0x0
   140009913:	add    BYTE PTR [rax],al
   140009915:	add    BYTE PTR [rax],al
   140009917:	add    BYTE PTR [rsi],cl
   140009919:	movabs ds:0x9b08000082780000,eax
	...
   14000992a:	add    BYTE PTR [rax],al
   14000992c:	rex movabs ds:0x81c00000,eax
	...
   140009946:	add    BYTE PTR [rax],al
   140009948:	sbb    BYTE PTR [rbp+0x0],bl
   14000994e:	add    BYTE PTR [rax],al
   140009950:	sub    BYTE PTR [rbp+0x0],bl
   140009956:	add    BYTE PTR [rax],al
   140009958:	rex popf 
   14000995a:	add    BYTE PTR [rax],al
   14000995c:	add    BYTE PTR [rax],al
   14000995e:	add    BYTE PTR [rax],al
   140009960:	push   rsi
   140009961:	popf   
   140009962:	add    BYTE PTR [rax],al
   140009964:	add    BYTE PTR [rax],al
   140009966:	add    BYTE PTR [rax],al
   140009968:	ins    BYTE PTR es:[rdi],dx
   140009969:	popf   
   14000996a:	add    BYTE PTR [rax],al
   14000996c:	add    BYTE PTR [rax],al
   14000996e:	add    BYTE PTR [rax],al
   140009970:	(bad)  
   140009971:	popf   
   140009972:	add    BYTE PTR [rax],al
   140009974:	add    BYTE PTR [rax],al
   140009976:	add    BYTE PTR [rax],al
   140009978:	(bad)  
   140009979:	popf   
   14000997a:	add    BYTE PTR [rax],al
   14000997c:	add    BYTE PTR [rax],al
   14000997e:	add    BYTE PTR [rax],al
   140009980:	scas   al,BYTE PTR es:[rdi]
   140009981:	popf   
   140009982:	add    BYTE PTR [rax],al
   140009984:	add    BYTE PTR [rax],al
   140009986:	add    BYTE PTR [rax],al
   140009988:	mov    esi,0x9d
   14000998d:	add    BYTE PTR [rax],al
   14000998f:	add    al,bl
   140009991:	popf   
   140009992:	add    BYTE PTR [rax],al
   140009994:	add    BYTE PTR [rax],al
   140009996:	add    BYTE PTR [rax],al
   140009998:	test   BYTE PTR [rbx+0x0],ah
   14000999e:	add    BYTE PTR [rax],al
   1400099a0:	je     0x140009945
   1400099a2:	add    BYTE PTR [rax],al
   1400099a4:	add    BYTE PTR [rax],al
   1400099a6:	add    BYTE PTR [rax],al
   1400099a8:	(bad)  
   1400099aa:	add    BYTE PTR [rax],al
   1400099ac:	add    BYTE PTR [rax],al
   1400099ae:	add    BYTE PTR [rax],al
   1400099b0:	rex.WR movabs ds:0xa3aa000000000000,rax
   1400099ba:	add    BYTE PTR [rax],al
   1400099bc:	add    BYTE PTR [rax],al
   1400099be:	add    BYTE PTR [rax],al
   1400099c0:	mov    ah,0xa3
   1400099c2:	add    BYTE PTR [rax],al
   1400099c4:	add    BYTE PTR [rax],al
   1400099c6:	add    BYTE PTR [rax],al
   1400099c8:	mov    esi,0xa3
   1400099cd:	add    BYTE PTR [rax],al
   1400099cf:	add    BYTE PTR [rbx+riz*4+0x0],dl
	...
   1400099de:	add    BYTE PTR [rax],al
   1400099e0:	ficomp DWORD PTR [rsi+0x0]
   1400099e6:	add    BYTE PTR [rax],al
   1400099e8:	(bad)  
   1400099e9:	sahf   
   1400099ea:	add    BYTE PTR [rax],al
   1400099ec:	add    BYTE PTR [rax],al
   1400099ee:	add    BYTE PTR [rax],al
   1400099f0:	repnz sahf 
   1400099f2:	add    BYTE PTR [rax],al
   1400099f4:	add    BYTE PTR [rax],al
   1400099f6:	add    BYTE PTR [rax],al
   1400099f8:	or     BYTE PTR [rdi+0x0],bl
   1400099fe:	add    BYTE PTR [rax],al
   140009a00:	sbb    BYTE PTR [rdi+0x0],bl
   140009a06:	add    BYTE PTR [rax],al
   140009a08:	and    al,0x9f
   140009a0a:	add    BYTE PTR [rax],al
   140009a0c:	add    BYTE PTR [rax],al
   140009a0e:	add    BYTE PTR [rax],al
   140009a10:	ss lahf 
   140009a12:	add    BYTE PTR [rax],al
   140009a14:	add    BYTE PTR [rax],al
   140009a16:	add    BYTE PTR [rax],al
   140009a18:	rex.W lahf 
   140009a1a:	add    BYTE PTR [rax],al
   140009a1c:	add    BYTE PTR [rax],al
   140009a1e:	add    BYTE PTR [rax],al
   140009a20:	(bad)  
   140009a21:	sahf   
   140009a22:	add    BYTE PTR [rax],al
   140009a24:	add    BYTE PTR [rax],al
   140009a26:	add    BYTE PTR [rax],al
   140009a28:	lods   al,BYTE PTR ds:[rsi]
   140009a29:	sahf   
   140009a2a:	add    BYTE PTR [rax],al
   140009a2c:	add    BYTE PTR [rax],al
   140009a2e:	add    BYTE PTR [rax],al
   140009a30:	sahf   
   140009a31:	sahf   
   140009a32:	add    BYTE PTR [rax],al
   140009a34:	add    BYTE PTR [rax],al
   140009a36:	add    BYTE PTR [rax],al
   140009a38:	sahf   
   140009a39:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009a3a:	add    BYTE PTR [rax],al
   140009a3c:	add    BYTE PTR [rax],al
   140009a3e:	add    BYTE PTR [rax],al
   140009a40:	mov    ah,BYTE PTR [rax+rax*1+0x0]
   140009a47:	add    BYTE PTR [rsi-0x5c],ch
   140009a4a:	add    BYTE PTR [rax],al
   140009a4c:	add    BYTE PTR [rax],al
   140009a4e:	add    BYTE PTR [rax],al
   140009a50:	pop    rsi
   140009a51:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009a52:	add    BYTE PTR [rax],al
   140009a54:	add    BYTE PTR [rax],al
   140009a56:	add    BYTE PTR [rax],al
   140009a58:	rex.R movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009a5a:	add    BYTE PTR [rax],al
   140009a5c:	add    BYTE PTR [rax],al
   140009a5e:	add    BYTE PTR [rax],al
   140009a60:	movs   BYTE PTR es:[rdi],BYTE PTR cs:[rsi]
   140009a62:	add    BYTE PTR [rax],al
   140009a64:	add    BYTE PTR [rax],al
   140009a66:	add    BYTE PTR [rax],al
   140009a68:	adc    al,0xa4
   140009a6a:	add    BYTE PTR [rax],al
   140009a6c:	add    BYTE PTR [rax],al
   140009a6e:	add    BYTE PTR [rax],al
   140009a70:	add    BYTE PTR [rax+rax*1+0x0],ah
   140009a77:	add    dl,ah
   140009a79:	movabs ds:0x9df6000000000000,eax
   140009a82:	add    BYTE PTR [rax],al
   140009a84:	add    BYTE PTR [rax],al
   140009a86:	add    BYTE PTR [rax],al
   140009a88:	add    bl,BYTE PTR [rsi+0x0]
   140009a8e:	add    BYTE PTR [rax],al
   140009a90:	adc    al,0x9e
   140009a92:	add    BYTE PTR [rax],al
   140009a94:	add    BYTE PTR [rax],al
   140009a96:	add    BYTE PTR [rax],al
   140009a98:	and    BYTE PTR [rsi+0x0],bl
   140009a9e:	add    BYTE PTR [rax],al
   140009aa0:	cs sahf 
   140009aa2:	add    BYTE PTR [rax],al
   140009aa4:	add    BYTE PTR [rax],al
   140009aa6:	add    BYTE PTR [rax],al
   140009aa8:	shl    BYTE PTR [rbx+0x0],1
   140009aae:	add    BYTE PTR [rax],al
   140009ab0:	mov    bl,BYTE PTR [rsi+0x0]
   140009ab6:	add    BYTE PTR [rax],al
   140009ab8:	je     0x140009a58
   140009aba:	add    BYTE PTR [rax],al
   140009abc:	add    BYTE PTR [rax],al
   140009abe:	add    BYTE PTR [rax],al
   140009ac0:	data16 sahf 
   140009ac2:	add    BYTE PTR [rax],al
   140009ac4:	add    BYTE PTR [rax],al
   140009ac6:	add    BYTE PTR [rax],al
   140009ac8:	push   rsi
   140009ac9:	sahf   
   140009aca:	add    BYTE PTR [rax],al
   140009acc:	add    BYTE PTR [rax],al
   140009ace:	add    BYTE PTR [rax],al
   140009ad0:	rex sahf 
	...
   140009ade:	add    BYTE PTR [rax],al
   140009ae0:	xchg   esi,eax
   140009ae1:	add    BYTE PTR [rax],al
   140009ae3:	add    BYTE PTR [rax],al
   140009ae5:	add    BYTE PTR [rax],al
   140009ae7:	add    BYTE PTR [rdi],0x0
   140009aea:	add    BYTE PTR [rax],al
   140009aec:	add    BYTE PTR [rax],al
   140009aee:	add    BYTE PTR [rax+0x2],al
   140009af4:	add    BYTE PTR [rax],al
   140009af6:	add    BYTE PTR [rax+0x6],al
   140009afc:	add    BYTE PTR [rax],al
   140009afe:	add    BYTE PTR [rax+0x0],al
   140009b04:	add    BYTE PTR [rax],al
   140009b06:	add    BYTE PTR [rax],al
   140009b08:	movabs cs:0x0,eax
   140009b12:	add    BYTE PTR [rax],al
   140009b14:	add    BYTE PTR [rax],al
   140009b16:	add    BYTE PTR [rax],al
   140009b18:	xchg   esp,eax
   140009b19:	lahf   
   140009b1a:	add    BYTE PTR [rax],al
   140009b1c:	add    BYTE PTR [rax],al
   140009b1e:	add    BYTE PTR [rax],al
   140009b20:	jbe    0x140009ac1
   140009b22:	add    BYTE PTR [rax],al
   140009b24:	add    BYTE PTR [rax],al
   140009b26:	add    BYTE PTR [rax],al
   140009b28:	(bad)  
   140009b29:	lahf   
   140009b2a:	add    BYTE PTR [rax],al
   140009b2c:	add    BYTE PTR [rax],al
   140009b2e:	add    BYTE PTR [rax],al
   140009b30:	xor    ah,BYTE PTR [rax+0x0]
   140009b36:	add    BYTE PTR [rax],al
   140009b38:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009b39:	lahf   
   140009b3a:	add    BYTE PTR [rax],al
   140009b3c:	add    BYTE PTR [rax],al
   140009b3e:	add    BYTE PTR [rax],al
   140009b40:	mov    eax,0x9f
   140009b45:	add    BYTE PTR [rax],al
   140009b47:	add    ah,cl
   140009b49:	lahf   
   140009b4a:	add    BYTE PTR [rax],al
   140009b4c:	add    BYTE PTR [rax],al
   140009b4e:	add    BYTE PTR [rax],al
   140009b50:	ficomp WORD PTR [rdi+0x0]
   140009b56:	add    BYTE PTR [rax],al
   140009b58:	(bad)  
   140009b59:	lahf   
   140009b5a:	add    BYTE PTR [rax],al
   140009b5c:	add    BYTE PTR [rax],al
   140009b5e:	add    BYTE PTR [rax],al
   140009b60:	and    BYTE PTR [rax+0x0],ah
   140009b66:	add    BYTE PTR [rax],al
   140009b68:	mov    BYTE PTR [rdi+0x0],bl
   140009b6e:	add    BYTE PTR [rax],al
   140009b70:	or     al,0xa0
   140009b72:	add    BYTE PTR [rax],al
   140009b74:	add    BYTE PTR [rax],al
   140009b76:	add    BYTE PTR [rax],al
   140009b78:	clc    
   140009b79:	lahf   
	...
   140009b86:	add    BYTE PTR [rax],al
   140009b88:	(bad)  
   140009b89:	movabs ds:0xa2ae000000000000,al
	...
   140009b9e:	add    BYTE PTR [rax],al
   140009ba0:	nop
   140009ba1:	movabs eax,ds:0xa180000000000000
   140009baa:	add    BYTE PTR [rax],al
   140009bac:	add    BYTE PTR [rax],al
   140009bae:	add    BYTE PTR [rax],al
   140009bb0:	movabs al,ds:0xa1
   140009bb9:	add    BYTE PTR [rax],al
   140009bbb:	add    BYTE PTR [rax],al
   140009bbd:	add    BYTE PTR [rax],al
   140009bbf:	add    dh,bh
   140009bc1:	movabs ds:0xa2ec000000000000,al
	...
   140009bd6:	add    BYTE PTR [rax],al
   140009bd8:	movabs rax,ds:0xa13e000000000000
   140009be2:	add    BYTE PTR [rax],al
   140009be4:	add    BYTE PTR [rax],al
   140009be6:	add    BYTE PTR [rax],al
   140009be8:	movabs eax,ss:0xa12a000000000000
   140009bf2:	add    BYTE PTR [rax],al
   140009bf4:	add    BYTE PTR [rax],al
   140009bf6:	add    BYTE PTR [rax],al
   140009bf8:	and    BYTE PTR [rcx+0x0],ah
   140009bfe:	add    BYTE PTR [rax],al
   140009c00:	(bad)  
   140009c01:	movabs eax,ds:0xa0fe000000000000
   140009c0a:	add    BYTE PTR [rax],al
   140009c0c:	add    BYTE PTR [rax],al
   140009c0e:	add    BYTE PTR [rax],al
   140009c10:	repnz movabs al,ds:0xa0de000000000000
   140009c1a:	add    BYTE PTR [rax],al
   140009c1c:	add    BYTE PTR [rax],al
   140009c1e:	add    BYTE PTR [rax],al
   140009c20:	(bad)  
   140009c21:	movabs al,ds:0xa0cc000000000000
   140009c2a:	add    BYTE PTR [rax],al
   140009c2c:	add    BYTE PTR [rax],al
   140009c2e:	add    BYTE PTR [rax],al
   140009c30:	(bad)  
   140009c31:	movabs al,ds:0xa0b2000000000000
   140009c3a:	add    BYTE PTR [rax],al
   140009c3c:	add    BYTE PTR [rax],al
   140009c3e:	add    BYTE PTR [rax],al
   140009c40:	movabs al,ds:0x56000000000000a0
   140009c49:	movabs eax,ds:0xa084000000000000
   140009c52:	add    BYTE PTR [rax],al
   140009c54:	add    BYTE PTR [rax],al
   140009c56:	add    BYTE PTR [rax],al
   140009c58:	jl     0x140009bfa
   140009c5a:	add    BYTE PTR [rax],al
   140009c5c:	add    BYTE PTR [rax],al
   140009c5e:	add    BYTE PTR [rax],al
   140009c60:	jo     0x140009c02
   140009c62:	add    BYTE PTR [rax],al
   140009c64:	add    BYTE PTR [rax],al
   140009c66:	add    BYTE PTR [rax],al
   140009c68:	data16 movabs al,ds:0xa05a000000000000
   140009c72:	add    BYTE PTR [rax],al
   140009c74:	add    BYTE PTR [rax],al
   140009c76:	add    BYTE PTR [rax],al
   140009c78:	rex.WR movabs al,ds:0xa16c000000000000
   140009c82:	add    BYTE PTR [rax],al
   140009c84:	add    BYTE PTR [rax],al
   140009c86:	add    BYTE PTR [rax],al
   140009c88:	shl    BYTE PTR [rax+rax*1+0x0],cl
   140009c8f:	add    BYTE PTR [rdx+0xa0],dl
   140009c95:	add    BYTE PTR [rax],al
   140009c97:	add    ah,bl
   140009c99:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   140009ca6:	add    BYTE PTR [rax],al
   140009ca8:	(bad)  
   140009ca9:	movabs ds:0xa268000000000000,al
   140009cb2:	add    BYTE PTR [rax],al
   140009cb4:	add    BYTE PTR [rax],al
   140009cb6:	add    BYTE PTR [rax],al
   140009cb8:	push   rsp
   140009cb9:	movabs ds:0xa240000000000000,al
   140009cc2:	add    BYTE PTR [rax],al
   140009cc4:	add    BYTE PTR [rax],al
   140009cc6:	add    BYTE PTR [rax],al
   140009cc8:	sub    al,0xa2
   140009cca:	add    BYTE PTR [rax],al
   140009ccc:	add    BYTE PTR [rax],al
   140009cce:	add    BYTE PTR [rax],al
   140009cd0:	(bad)  
   140009cd1:	movabs ds:0x0,al
   140009cda:	add    BYTE PTR [rax],al
   140009cdc:	add    BYTE PTR [rax],al
   140009cde:	add    BYTE PTR [rax],al
   140009ce0:	out    0xa1,al
   140009ce2:	add    BYTE PTR [rax],al
   140009ce4:	add    BYTE PTR [rax],al
   140009ce6:	add    BYTE PTR [rax],al
   140009ce8:	(bad)  
   140009ce9:	movabs eax,ds:0xa1bc000000000000
   140009cf2:	add    BYTE PTR [rax],al
   140009cf4:	add    BYTE PTR [rax],al
   140009cf6:	add    BYTE PTR [rax],al
   140009cf8:	lods   al,BYTE PTR ds:[rsi]
   140009cf9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009cfa:	add    BYTE PTR [rax],al
   140009cfc:	add    BYTE PTR [rax],al
   140009cfe:	add    BYTE PTR [rax],al
   140009d00:	mov    esp,0xa4
   140009d05:	add    BYTE PTR [rax],al
   140009d07:	add    al,bh
   140009d09:	movabs eax,ds:0x0
   140009d12:	add    BYTE PTR [rax],al
   140009d14:	add    BYTE PTR [rax],al
   140009d16:	add    BYTE PTR [rax],al
   140009d18:	and    BYTE PTR [rbx],al
   140009d1a:	push   rsp
   140009d1b:	jb     0x140009d7e
   140009d1d:	movsxd esp,DWORD PTR [rbp+0x4d]
   140009d20:	gs jae 0x140009d96
   140009d23:	(bad)  
   140009d24:	add    BYTE PTR gs:[eax],al
   140009d28:	jb     0x140009d2b
   140009d2a:	rex.RXB
   140009d2b:	gs je  0x140009d82
   140009d2e:	jb     0x140009d91
   140009d30:	movsxd esp,DWORD PTR [rbp+0x4c]
   140009d33:	outs   dx,DWORD PTR ds:[rsi]
   140009d34:	addr32 addr32 gs jb 0x140009d81
   140009d39:	(bad)  
   140009d3a:	outs   dx,BYTE PTR ds:[rsi]
   140009d3b:	fs ins BYTE PTR es:[rdi],dx
   140009d3d:	add    BYTE PTR gs:[rax],al
   140009d40:	jno    0x140009d43
   140009d42:	rex.RXB
   140009d43:	gs je  0x140009d9a
   140009d46:	jb     0x140009da9
   140009d48:	movsxd esp,DWORD PTR [rbp+0x45]
   140009d4b:	outs   dx,BYTE PTR ds:[rsi]
   140009d4c:	(bad)  
   140009d4d:	(bad)  
   140009d4e:	ins    BYTE PTR es:[rdi],dx
   140009d4f:	gs rex.WR
   140009d51:	gs jbe 0x140009db9
   140009d54:	ins    BYTE PTR es:[rdi],dx
   140009d55:	add    BYTE PTR [rax+0x1],dh
   140009d58:	rex.RXB
   140009d59:	gs je  0x140009db0
   140009d5c:	jb     0x140009dbf
   140009d5e:	movsxd esp,DWORD PTR [rbp+0x45]
   140009d61:	outs   dx,BYTE PTR ds:[rsi]
   140009d62:	(bad)  
   140009d63:	(bad)  
   140009d64:	ins    BYTE PTR es:[rdi],dx
   140009d65:	gs rex.RX ins BYTE PTR es:[rdi],dx
   140009d68:	(bad)  
   140009d69:	addr32 jae 0x140009d6c
   140009d6c:	scas   eax,DWORD PTR es:[rdi]
   140009d6d:	add    dl,BYTE PTR [rdx+0x65]
   140009d70:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   140009d78:	(bad)  
   140009d79:	movsxd esp,DWORD PTR [rbp+0x47]
   140009d7c:	jne    0x140009de7
   140009d7e:	fs jae 0x140009dd8
   140009d81:	add    BYTE PTR [rip+0x726e5503],ch        # 0x1b26ef28a
   140009d87:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   140009d90:	(bad)  
   140009d91:	movsxd esp,DWORD PTR [rbp+0x47]
   140009d94:	jne    0x140009dff
   140009d96:	fs jae 0x140009d99
   140009d99:	add    BYTE PTR [rbx],dl
   140009d9b:	add    cl,BYTE PTR [rdi+0x70]
   140009d9e:	outs   dx,BYTE PTR gs:[rsi]
   140009da0:	push   rax
   140009da1:	jb     0x140009e12
   140009da3:	movsxd esp,DWORD PTR [rbp+0x73]
   140009da6:	jae    0x140009dfc
   140009da8:	outs   dx,DWORD PTR ds:[rsi]
   140009da9:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140009dad:	add    BYTE PTR [rsi+0x67655202],al
   140009db3:	rex.WRXB jo 0x140009e1b
   140009db6:	outs   dx,BYTE PTR ds:[rsi]
   140009db7:	rex.WXB
   140009db8:	gs jns 0x140009e00
   140009dbb:	js     0x140009e14
   140009dbd:	add    BYTE PTR [rdx+0x67655202],al
   140009dc3:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140009dc5:	je     0x140009e30
   140009dc7:	data16 jns 0x140009e0d
   140009dca:	push   0x65676e61
   140009dcf:	rex.WXB
   140009dd0:	gs jns 0x140009e29
   140009dd3:	(bad)  
   140009dd4:	ins    BYTE PTR es:[rdi],dx
   140009dd5:	jne    0x140009e3c
   140009dd7:	add    BYTE PTR [rbx+0x2],bh
   140009dda:	push   rdx
   140009ddb:	gs addr32 rex.RXB
   140009dde:	gs je  0x140009e37
   140009de1:	(bad)  
   140009de2:	ins    BYTE PTR es:[rdi],dx
   140009de3:	jne    0x140009e4a
   140009de5:	push   rdi
   140009de6:	add    BYTE PTR [rax],al
   140009de8:	rex.B
   140009de9:	rex.R push rsi
   140009deb:	push   r8
   140009ded:	xor    rsi,QWORD PTR [r10]
   140009df0:	cs fs ins BYTE PTR es:[rdi],dx
   140009df3:	ins    BYTE PTR es:[rdi],dx
   140009df4:	add    BYTE PTR [rax],al
   140009df6:	rex add ecx,DWORD PTR [rax+0x65]
   140009dfa:	(bad)  
   140009dfb:	jo     0x140009e43
   140009dfd:	jb     0x140009e64
   140009dff:	add    BYTE PTR gs:[rax],al
   140009e02:	stos   DWORD PTR es:[rdi],eax
   140009e03:	add    al,BYTE PTR [rdi+0x65]
   140009e06:	je     0x140009e58
   140009e08:	jb     0x140009e79
   140009e0a:	movsxd esp,DWORD PTR [rbp+0x73]
   140009e0d:	jae    0x140009e57
   140009e0f:	gs (bad) 
   140009e11:	jo     0x140009e13
   140009e13:	add    BYTE PTR [rbx+rax*1],bh
   140009e16:	rex.W
   140009e17:	gs (bad) 
   140009e19:	jo     0x140009e5c
   140009e1b:	ins    BYTE PTR es:[rdi],dx
   140009e1c:	ins    BYTE PTR es:[rdi],dx
   140009e1d:	outs   dx,DWORD PTR ds:[rsi]
   140009e1e:	movsxd eax,DWORD PTR [rax]
   140009e20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009e21:	add    DWORD PTR [rsi+0x72],eax
   140009e24:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140009e2e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009e2f:	add    al,BYTE PTR [rdi+0x65]
   140009e32:	je     0x140009e84
   140009e34:	jb     0x140009ea5
   140009e36:	movsxd eax,DWORD PTR [rcx+0x64]
   140009e39:	fs jb  0x140009ea1
   140009e3c:	jae    0x140009eb1
   140009e3e:	add    BYTE PTR [rax],al
   140009e40:	ins    BYTE PTR es:[rdi],dx
   140009e41:	add    al,BYTE PTR [rdi+0x65]
   140009e44:	je     0x140009e93
   140009e46:	outs   dx,DWORD PTR ds:[rsi]
   140009e47:	fs jne 0x140009eb6
   140009e4a:	gs rex.W (bad) 
   140009e4d:	outs   dx,BYTE PTR ds:[rsi]
   140009e4e:	fs ins BYTE PTR es:[rdi],dx
   140009e50:	gs rex.RB js 0x140009e95
   140009e54:	add    BYTE PTR [rax],al
   140009e56:	push   rdi
   140009e57:	add    al,BYTE PTR [rdi+0x65]
   140009e5a:	je     0x140009ea8
   140009e5c:	(bad)  
   140009e5d:	jae    0x140009ed3
   140009e5f:	rex.RB jb 0x140009ed4
   140009e62:	outs   dx,DWORD PTR ds:[rsi]
   140009e63:	jb     0x140009e65
   140009e65:	add    BYTE PTR [rbx+0x3],al
   140009e68:	rex.W
   140009e69:	gs (bad) 
   140009e6b:	jo     0x140009ebf
   140009e6d:	gs rex.B ins BYTE PTR es:[rdi],dx
   140009e70:	ins    BYTE PTR es:[rdi],dx
   140009e71:	outs   dx,DWORD PTR ds:[rsi]
   140009e72:	movsxd eax,DWORD PTR [rax]
   140009e74:	add    r9d,DWORD PTR [rax+0x65]
   140009e78:	(bad)  
   140009e79:	jo     0x140009ece
   140009e7b:	gs je  0x140009ec7
   140009e7e:	outs   dx,BYTE PTR ds:[rsi]
   140009e7f:	outs   dx,WORD PTR ds:[rsi]
   140009e81:	jb     0x140009ef0
   140009e83:	(bad)  
   140009e84:	je     0x140009eef
   140009e86:	outs   dx,DWORD PTR ds:[rsi]
   140009e87:	outs   dx,BYTE PTR ds:[rsi]
   140009e88:	add    BYTE PTR [rax],al
   140009e8a:	adc    BYTE PTR [rdx],al
   140009e8c:	rex.RXB
   140009e8d:	gs je  0x140009ed3
   140009e90:	jne    0x140009f04
   140009e92:	jb     0x140009ef9
   140009e94:	outs   dx,BYTE PTR ds:[rsi]
   140009e95:	je     0x140009ee7
   140009e97:	jb     0x140009f08
   140009e99:	movsxd esp,DWORD PTR [rbp+0x73]
   140009e9c:	jae    0x140009e9e
   140009e9e:	jge    0x140009ea0
   140009ea0:	rex.XB ins BYTE PTR es:[rdi],dx
   140009ea2:	outs   dx,DWORD PTR ds:[rsi]
   140009ea3:	jae    0x140009f0a
   140009ea5:	rex.W (bad) 
   140009ea7:	outs   dx,BYTE PTR ds:[rsi]
   140009ea8:	fs ins BYTE PTR es:[rdi],dx
   140009eaa:	add    BYTE PTR gs:[rax],bl
   140009ead:	add    al,0x50
   140009eaf:	jb     0x140009f20
   140009eb1:	movsxd esp,DWORD PTR [rbp+0x73]
   140009eb4:	jae    0x140009eff
   140009eb6:	fs push rsp
   140009eb8:	outs   dx,DWORD PTR ds:[rsi]
   140009eb9:	push   rbx
   140009eba:	gs jae 0x140009f30
   140009ebd:	imul   ebp,DWORD PTR [rdi+0x6e],0x6449
   140009ec4:	adc    DWORD PTR [rdx],eax
   140009ec6:	rex.RXB
   140009ec7:	gs je  0x140009f0d
   140009eca:	jne    0x140009f3e
   140009ecc:	jb     0x140009f33
   140009ece:	outs   dx,BYTE PTR ds:[rsi]
   140009ecf:	je     0x140009f21
   140009ed1:	jb     0x140009f42
   140009ed3:	movsxd esp,DWORD PTR [rbp+0x73]
   140009ed6:	jae    0x140009f21
   140009ed8:	add    BYTE PTR fs:[rax+rax*1+0x61657243],dh
   140009ee0:	je     0x140009f47
   140009ee2:	rex.RB jbe 0x140009f4a
   140009ee5:	outs   dx,BYTE PTR ds:[rsi]
   140009ee6:	je     0x140009f3f
   140009ee8:	add    BYTE PTR [rax],al
   140009eea:	ins    DWORD PTR es:[rdi],dx
   140009eeb:	add    eax,0x65656c53
   140009ef0:	jo     0x140009ef2
   140009ef2:	enter  0x5705,0x61
   140009ef6:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   140009efe:	ins    BYTE PTR es:[edi],dx
   140009f00:	gs rex.WRXB (bad) 
   140009f03:	push   0x65
   140009f05:	movsxd esi,DWORD PTR [rax+rax*1-0x39]
   140009f09:	add    ecx,DWORD PTR [rbp+0x61]
   140009f0c:	jo     0x140009f64
   140009f0e:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140009f15:	ins    BYTE PTR es:[rdi],dx
   140009f16:	add    BYTE PTR gs:[rax],cl
   140009f19:	add    eax,0x45746553
   140009f1e:	jbe    0x140009f85
   140009f20:	outs   dx,BYTE PTR ds:[rsi]
   140009f21:	je     0x140009f23
   140009f23:	add    BYTE PTR [rcx+0x6d6e5505],ah
   140009f29:	(bad)  
   140009f2a:	jo     0x140009f82
   140009f2c:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140009f33:	ins    BYTE PTR es:[rdi],dx
   140009f34:	add    BYTE PTR gs:[rax+0x726f4601],ah
   140009f3b:	ins    DWORD PTR es:[rdi],dx
   140009f3c:	(bad)  
   140009f3d:	je     0x140009f8c
   140009f3f:	gs jae 0x140009fb5
   140009f42:	(bad)  
   140009f43:	addr32 gs push rdi
   140009f46:	add    BYTE PTR [rax],al
   140009f48:	mov    ecx,0x636f4c03
   140009f4d:	(bad)  
   140009f4e:	ins    BYTE PTR es:[rdi],dx
   140009f4f:	rex.RX jb 0x140009fb7
   140009f52:	add    BYTE PTR gs:[rbx+0x45],cl
   140009f56:	push   rdx
   140009f57:	rex.WRX
   140009f58:	rex.RB
   140009f59:	xor    r14,QWORD PTR [rdx]
   140009f5c:	cs fs ins BYTE PTR es:[rdi],dx
   140009f5f:	ins    BYTE PTR es:[rdi],dx
   140009f60:	add    BYTE PTR [rax],al
   140009f62:	lods   al,BYTE PTR ds:[rsi]
   140009f63:	add    dl,BYTE PTR [rdx+0x65]
   140009f66:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   140009f6e:	(bad)  
   140009f6f:	jae    0x140009fe4
   140009f71:	rex.RB js 0x140009fcb
   140009f74:	add    BYTE PTR [rax],al
   140009f76:	jno    0x140009f78
   140009f78:	rex.XB jb 0x140009fe0
   140009f7b:	(bad)  
   140009f7c:	je     0x140009fe3
   140009f7e:	push   rdi
   140009f7f:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   140009f86:	push   rdi
   140009f87:	add    BYTE PTR [rdx+rax*1],ch
   140009f8a:	imul   rbp,QWORD PTR [r12+r13*2+0x54],0x72656d69
   140009f93:	add    BYTE PTR [rsi+0x73654400],ch
   140009f99:	je     0x14000a00d
   140009f9b:	outs   dx,DWORD PTR ds:[rsi]
   140009f9c:	jns    0x140009ff5
   140009f9e:	imul   ebp,DWORD PTR [rsi+0x64],0x3800776f
   140009fa5:	add    edx,DWORD PTR [rbx+0x65]
   140009fa8:	je     0x14000a001
   140009faa:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   140009fb1:	outs   dx,BYTE PTR ds:[rsi]
   140009fb2:	addr32 push rax
   140009fb4:	je     0x14000a028
   140009fb6:	push   rdi
   140009fb7:	add    ch,cl
   140009fb9:	add    DWORD PTR [rdi+0x65],eax
   140009fbc:	je     0x14000a015
   140009fbe:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   140009fc5:	outs   dx,BYTE PTR ds:[rsi]
   140009fc6:	addr32 push rax
   140009fc8:	je     0x14000a03c
   140009fca:	push   rdi
   140009fcb:	add    BYTE PTR [rdx+0x66654400],ah
   140009fd1:	push   rdi
   140009fd2:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   140009fd9:	outs   dx,DWORD PTR ds:[rsi]
   140009fda:	movsxd edx,DWORD PTR [rdi+0x0]
   140009fdd:	add    BYTE PTR [rbx],ch
   140009fdf:	add    edx,DWORD PTR [rbx+0x65]
   140009fe2:	je     0x14000a038
   140009fe4:	imul   ebp,DWORD PTR [rbp+0x65],0x78000072
   140009feb:	add    DWORD PTR [rdi+0x65],eax
   140009fee:	je     0x14000a03d
   140009ff0:	gs jae 0x14000a066
   140009ff3:	(bad)  
   140009ff4:	addr32 gs push rdi
   140009ff7:	add    BYTE PTR [rbx+0x3],ch
   140009ffa:	push   rsp
   140009ffb:	jb     0x14000a05e
   140009ffd:	outs   dx,BYTE PTR ds:[rsi]
   140009ffe:	jae    0x14000a06c
   14000a000:	(bad)  
   14000a001:	je     0x14000a068
   14000a003:	rex.WRB
   14000a004:	gs jae 0x14000a07a
   14000a007:	(bad)  
   14000a008:	add    BYTE PTR gs:[eax],al
   14000a00c:	mov    dh,0x0
   14000a00e:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14000a016:	rex.WRB
   14000a017:	gs jae 0x14000a08d
   14000a01a:	(bad)  
   14000a01b:	addr32 gs push rdi
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	test   BYTE PTR [rdx],al
   14000a022:	push   rax
   14000a023:	outs   dx,DWORD PTR ds:[rsi]
   14000a024:	jae    0x14000a09a
   14000a026:	push   rcx
   14000a027:	jne    0x14000a092
   14000a029:	je     0x14000a078
   14000a02b:	gs jae 0x14000a0a1
   14000a02e:	(bad)  
   14000a02f:	add    BYTE PTR gs:[ebx+0x2],al
   14000a034:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000a036:	(bad)  
   14000a037:	fs push rbx
   14000a039:	je     0x14000a0ad
   14000a03b:	imul   ebp,DWORD PTR [rsi+0x67],0x53550057
   14000a042:	rex.RB push r10
   14000a044:	xor    esi,DWORD PTR [rdx]
   14000a046:	cs fs ins BYTE PTR es:[rdi],dx
   14000a049:	ins    BYTE PTR es:[rdi],dx
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	imul   eax,DWORD PTR [rbx],0x6e73765f
   14000a052:	ja     0x14000a0c4
   14000a054:	jb     0x14000a0bf
   14000a056:	outs   dx,BYTE PTR ds:[rsi]
   14000a057:	je     0x14000a0bf
   14000a059:	add    BYTE PTR [rsi+0x75705f02],bl
   14000a05f:	jb     0x14000a0c6
   14000a061:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a064:	ins    BYTE PTR es:[rdi],dx
   14000a065:	add    BYTE PTR [rsi+0x6c616d04],al
   14000a06b:	ins    BYTE PTR es:[rdi],dx
   14000a06c:	outs   dx,DWORD PTR ds:[rsi]
   14000a06d:	movsxd eax,DWORD PTR [rax]
   14000a06f:	add    BYTE PTR [rdi+0x61635f00],bh
   14000a075:	ins    BYTE PTR es:[rdi],dx
   14000a076:	ins    BYTE PTR es:[rdi],dx
   14000a077:	outs   dx,BYTE PTR ds:[rsi]
   14000a078:	gs ja  0x14000a0e3
   14000a07b:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000a07f:	jb     0x14000a0e6
   14000a081:	add    BYTE PTR gs:[rax],al
   14000a084:	push   rbp
   14000a085:	add    BYTE PTR [rdi+0x58],bl
   14000a088:	movsxd esi,DWORD PTR [rax+0x74]
   14000a08b:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000a094:	pop    rdi
   14000a095:	(bad)  
   14000a096:	ins    DWORD PTR es:[rdi],dx
   14000a097:	jae    0x14000a100
   14000a099:	pop    rdi
   14000a09a:	gs js  0x14000a106
   14000a09d:	je     0x14000a09f
   14000a09f:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000a0a5:	addr32 gs je 0x14000a116
   14000a0a9:	(bad)  
   14000a0aa:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000a0b1:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000a0b7:	gs je  0x14000a119
   14000a0ba:	(bad)  
   14000a0bb:	jo     0x14000a12d
   14000a0bd:	pop    rdi
   14000a0be:	je     0x14000a139
   14000a0c0:	jo     0x14000a127
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	xor    al,BYTE PTR [riz*2+0x746978]
   14000a0cb:	add    BYTE PTR [rsi],cl
   14000a0cd:	add    DWORD PTR [rdi+0x65],ebx
   14000a0d0:	js     0x14000a13b
   14000a0d2:	je     0x14000a0d4
   14000a0d4:	rol    DWORD PTR [rax],0x5f
   14000a0d7:	movsxd esp,DWORD PTR [rbp+0x78]
   14000a0da:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000a0e2:	jae    0x14000a149
   14000a0e4:	je     0x14000a15b
   14000a0e6:	jae    0x14000a14d
   14000a0e8:	jb     0x14000a157
   14000a0ea:	(bad)  
   14000a0eb:	je     0x14000a155
   14000a0ed:	gs jb  0x14000a162
   14000a0f0:	add    BYTE PTR [rax],al
   14000a0f2:	jge    0x14000a0f5
   14000a0f4:	pop    rdi
   14000a0f5:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000a0fc:	ins    DWORD PTR es:[rdi],dx
   14000a0fd:	add    BYTE PTR [rdi+0x0],dl
   14000a100:	pop    rdi
   14000a101:	pop    rdi
   14000a102:	rex.XB pop r15
   14000a104:	jae    0x14000a176
   14000a106:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000a10a:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000a111:	ins    BYTE PTR es:[rdi],dx
   14000a112:	gs jb  0x14000a115
   14000a115:	add    BYTE PTR [rdx+0x63775f03],al
   14000a11b:	ins    DWORD PTR es:[rdi],dx
   14000a11c:	fs ins BYTE PTR es:[rdi],dx
   14000a11e:	outs   dx,BYTE PTR ds:[rsi]
   14000a11f:	add    BYTE PTR [rdi],ah
   14000a121:	add    DWORD PTR [rdi+0x66],ebx
   14000a124:	ins    DWORD PTR es:[rdi],dx
   14000a125:	outs   dx,DWORD PTR ds:[rsi]
   14000a126:	fs add BYTE PTR gs:[rax],al
   14000a12a:	rol    BYTE PTR [rax],cl
   14000a12c:	pop    rdi
   14000a12d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a130:	ins    DWORD PTR es:[rdi],dx
   14000a131:	outs   dx,DWORD PTR ds:[rsi]
   14000a132:	fs add BYTE PTR gs:[rax],al
   14000a136:	out    0x1,al
   14000a138:	pop    rdi
   14000a139:	ins    BYTE PTR es:[rdi],dx
   14000a13a:	outs   dx,DWORD PTR ds:[rsi]
   14000a13b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a13e:	add    ebx,DWORD PTR [r15+0x75]
   14000a142:	outs   dx,BYTE PTR ds:[rsi]
   14000a143:	ins    BYTE PTR es:[rdi],dx
   14000a144:	outs   dx,DWORD PTR ds:[rsi]
   14000a145:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a148:	jnp    0x14000a14a
   14000a14a:	pop    rdi
   14000a14b:	pop    rdi
   14000a14c:	fs ins BYTE PTR es:[rdi],dx
   14000a14e:	ins    BYTE PTR es:[rdi],dx
   14000a14f:	outs   dx,DWORD PTR ds:[rsi]
   14000a150:	outs   dx,BYTE PTR ds:[rsi]
   14000a151:	gs js  0x14000a1bd
   14000a154:	je     0x14000a156
   14000a156:	nop
   14000a157:	add    bl,BYTE PTR [rdi+0x6f]
   14000a15a:	outs   dx,BYTE PTR ds:[rsi]
   14000a15b:	gs js  0x14000a1c7
   14000a15e:	je     0x14000a160
   14000a160:	ins    DWORD PTR es:[rdi],dx
   14000a161:	jae    0x14000a1d9
   14000a163:	movsxd esi,DWORD PTR [rdx+0x74]
   14000a166:	cs fs ins BYTE PTR es:[rdi],dx
   14000a169:	ins    BYTE PTR es:[rdi],dx
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	(bad)  
   14000a16d:	add    BYTE PTR [rdi],bh
   14000a16f:	je     0x14000a1d6
   14000a171:	jb     0x14000a1e0
   14000a173:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000a17a:	pop    rcx
   14000a17b:	pop    r8
   14000a17d:	pop    rax
   14000a17e:	pop    rdx
   14000a17f:	add    BYTE PTR [rdi],al
   14000a181:	add    BYTE PTR [rdi+0x65],al
   14000a184:	je     0x14000a1c7
   14000a186:	fs fs jb 0x14000a1d3
   14000a18a:	outs   dx,BYTE PTR ds:[rsi]
   14000a18b:	outs   dx,WORD PTR ds:[rsi]
   14000a18d:	push   rdi
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	or     DWORD PTR [rax],eax
   14000a192:	rex.RXB
   14000a193:	gs je  0x14000a1e4
   14000a196:	(bad)  
   14000a197:	ins    DWORD PTR es:[rdi],dx
   14000a198:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14000a19b:	outs   dx,WORD PTR ds:[rsi]
   14000a19d:	push   rdi
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	add    al,BYTE PTR [rax]
   14000a1a2:	rex.RX jb 0x14000a20a
   14000a1a5:	gs rex.B
   14000a1a7:	fs fs jb 0x14000a1f4
   14000a1ab:	outs   dx,BYTE PTR ds:[rsi]
   14000a1ac:	outs   dx,WORD PTR ds:[rsi]
   14000a1ae:	push   rdi
   14000a1af:	add    BYTE PTR [rdi+0x53],dl
   14000a1b2:	xor    bl,BYTE PTR [rdi+0x33]
   14000a1b5:	xor    ch,BYTE PTR [rsi]
   14000a1b7:	fs ins BYTE PTR es:[rdi],dx
   14000a1b9:	ins    BYTE PTR es:[rdi],dx
   14000a1ba:	add    BYTE PTR [rax],al
   14000a1bc:	(bad)  
   14000a1bd:	add    BYTE PTR [rbx+0x6f],al
   14000a1c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a1c2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000a1ca:	rex.RB js 0x14000a1cd
   14000a1cd:	add    BYTE PTR [rdx+0x0],ah
   14000a1d0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a1d2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a1d4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000a1dc:	push   rbx
   14000a1dd:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000a1e1:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43009000
   14000a1e9:	outs   dx,DWORD PTR ds:[rsi]
   14000a1ea:	push   rbp
   14000a1eb:	outs   dx,BYTE PTR ds:[rsi]
   14000a1ec:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000a1f3:	imul   edi,DWORD PTR [rdx+0x65],0x2b0000
   14000a1fa:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a1fc:	rex.XB jb 0x14000a264
   14000a1ff:	(bad)  
   14000a200:	je     0x14000a267
   14000a202:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a204:	jae    0x14000a27a
   14000a206:	(bad)  
   14000a207:	outs   dx,BYTE PTR ds:[rsi]
   14000a208:	movsxd esp,DWORD PTR [rbp+0x0]
   14000a20b:	add    BYTE PTR [rdi+0x6c],ch
   14000a20e:	xor    esi,DWORD PTR gs:[rdx]
   14000a211:	cs fs ins BYTE PTR es:[rdi],dx
   14000a214:	ins    BYTE PTR es:[rdi],dx
   14000a215:	add    BYTE PTR [rbx],bh
   14000a217:	add    BYTE PTR [rbp+0x74],al
   14000a21a:	ja     0x14000a261
   14000a21c:	jbe    0x14000a283
   14000a21e:	outs   dx,BYTE PTR ds:[rsi]
   14000a21f:	je     0x14000a276
   14000a221:	outs   dx,BYTE PTR ds:[rsi]
   14000a222:	jb     0x14000a289
   14000a224:	imul   esi,DWORD PTR [ebx+0x74],0x7265
   14000a22c:	cmp    DWORD PTR [rax],eax
   14000a22e:	rex.RB je 0x14000a2a8
   14000a231:	rex.RB jbe 0x14000a299
   14000a234:	outs   dx,BYTE PTR ds:[rsi]
   14000a235:	je     0x14000a289
   14000a237:	imul   esi,DWORD PTR gs:[ebx+0x74],0x7265
   14000a240:	(bad)  
   14000a241:	add    BYTE PTR [rbp+0x74],al
   14000a244:	ja     0x14000a28b
   14000a246:	jbe    0x14000a2ad
   14000a248:	outs   dx,BYTE PTR ds:[rsi]
   14000a249:	je     0x14000a2a2
   14000a24b:	jb     0x14000a2b6
   14000a24d:	je     0x14000a2b4
   14000a24f:	rex.RX jne 0x14000a2be
   14000a252:	ins    BYTE PTR es:[rdi],dx
   14000a253:	add    dh,al
   14000a255:	add    dl,BYTE PTR [rdx+0x74]
   14000a258:	ins    BYTE PTR es:[rdi],dx
   14000a259:	rex.XB (bad) 
   14000a25b:	jo     0x14000a2d1
   14000a25d:	jne    0x14000a2d1
   14000a25f:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000a262:	outs   dx,BYTE PTR ds:[rsi]
   14000a263:	je     0x14000a2ca
   14000a265:	js     0x14000a2db
   14000a267:	add    BYTE PTR [rdi+0x4],dh
   14000a26a:	push   rdx
   14000a26b:	je     0x14000a2d9
   14000a26d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000a26f:	outs   dx,DWORD PTR ds:[rsi]
   14000a270:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000a274:	jne    0x14000a2e4
   14000a276:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000a27a:	outs   dx,BYTE PTR ds:[rsi]
   14000a27b:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000a27d:	je     0x14000a2f1
   14000a27f:	jns    0x14000a281
   14000a281:	add    BYTE PTR [rbx+0x6c745205],cl
   14000a287:	push   rsi
   14000a288:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000a28f:	outs   dx,BYTE PTR ds:[rsi]
   14000a290:	ja     0x14000a2fb
   14000a292:	outs   dx,BYTE PTR ds:[rsi]
   14000a293:	add    BYTE PTR fs:[rax],al
   14000a296:	outs   dx,BYTE PTR ds:[rsi]
   14000a297:	je     0x14000a2fd
   14000a299:	ins    BYTE PTR es:[rdi],dx
   14000a29a:	ins    BYTE PTR es:[rdi],dx
   14000a29b:	cs fs ins BYTE PTR es:[rdi],dx
   14000a29e:	ins    BYTE PTR es:[rdi],dx
   14000a29f:	add    BYTE PTR [rdi+0x4c],cl
   14000a2a2:	rex.RB
   14000a2a3:	push   r13
   14000a2a5:	push   rsp
   14000a2a6:	xor    esi,DWORD PTR [rdx]
   14000a2a8:	cs fs ins BYTE PTR es:[rdi],dx
   14000a2ab:	ins    BYTE PTR es:[rdi],dx
   14000a2ac:	add    BYTE PTR [rax],al
   14000a2ae:	add    BYTE PTR [rax],0x57
   14000a2b1:	imul   ebp,DWORD PTR [rsi+0x53],0x69746174
   14000a2b8:	outs   dx,DWORD PTR ds:[rsi]
   14000a2b9:	outs   dx,BYTE PTR ds:[rsi]
   14000a2ba:	push   rbx
   14000a2bb:	push   0x776f6461
   14000a2c0:	push   rbx
   14000a2c1:	je     0x14000a332
   14000a2c3:	jo     0x14000a2f7
   14000a2c5:	add    BYTE PTR [rbp+0x0],dh
   14000a2c8:	push   rdi
   14000a2c9:	imul   ebp,DWORD PTR [rsi+0x53],0x69746174
   14000a2d0:	outs   dx,DWORD PTR ds:[rsi]
   14000a2d1:	outs   dx,BYTE PTR ds:[rsi]
   14000a2d2:	push   rbx
   14000a2d3:	outs   dx,BYTE PTR gs:[rsi]
   14000a2d5:	fs rex.WRB
   14000a2d7:	gs jae 0x14000a34d
   14000a2da:	(bad)  
   14000a2db:	addr32 gs push rdi
   14000a2de:	add    BYTE PTR [rax],al
   14000a2e0:	push   rdi
   14000a2e1:	rex.WB
   14000a2e2:	rex.WRX push rbx
   14000a2e4:	push   rsp
   14000a2e5:	rex.B
   14000a2e6:	cs fs ins BYTE PTR es:[rdi],dx
   14000a2e9:	ins    BYTE PTR es:[rdi],dx
   14000a2ea:	add    BYTE PTR [rax],al
   14000a2ec:	rex.WRXB add BYTE PTR [r11+0x74],r10b
   14000a2f0:	jb     0x14000a35b
   14000a2f2:	outs   dx,BYTE PTR ds:[rsi]
   14000a2f3:	addr32 rex.RX jb 0x14000a366
   14000a2f7:	ins    DWORD PTR es:[rdi],dx
   14000a2f8:	rex.XB
   14000a2f9:	rex.WR push rbx
   14000a2fb:	rex.WB
   14000a2fc:	add    BYTE PTR [rdi],r15b
   14000a2ff:	add    BYTE PTR [rbx+0x6f],al
   14000a302:	push   rsp
   14000a303:	(bad)  
   14000a304:	jae    0x14000a371
   14000a306:	rex.WRB
   14000a307:	gs ins DWORD PTR es:[rdi],dx
   14000a309:	rex.RX jb 0x14000a371
   14000a30c:	add    BYTE PTR gs:[rcx+0x70],ah
   14000a310:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e1687
   14000a31a:	outs   dx,DWORD PTR ds:[rsi]
   14000a31b:	jb     0x14000a382
   14000a31d:	sub    eax,0x2d6d6f63
   14000a322:	ins    BYTE PTR es:[rdi],dx
   14000a323:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31d05a
   14000a329:	fs ins BYTE PTR es:[rdi],dx
   14000a32b:	ins    BYTE PTR es:[rdi],dx
   14000a32c:	add    BYTE PTR [rax],al
   14000a32e:	sbb    DWORD PTR [rax],eax
   14000a330:	rex.RXB
   14000a331:	gs je  0x14000a389
   14000a334:	jae    0x14000a39b
   14000a336:	jb     0x14000a386
   14000a338:	(bad)  
   14000a339:	ins    DWORD PTR es:[rdi],dx
   14000a33a:	gs rex.RB js 0x14000a395
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	push   rbx
   14000a341:	jae    0x14000a3b3
   14000a343:	imul   eax,DWORD PTR [rbx+0x6c],0x6c642e69
   14000a34a:	ins    BYTE PTR es:[rdi],dx
   14000a34b:	add    BYTE PTR [rdi+0x1],ch
   14000a34e:	rex.RXB
   14000a34f:	gs je  0x14000a3a6
   14000a352:	outs   dx,DWORD PTR ds:[rsi]
   14000a353:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14000a357:	outs   dx,BYTE PTR ds:[rsi]
   14000a358:	outs   dx,WORD PTR ds:[rsi]
   14000a35a:	jb     0x14000a3c9
   14000a35c:	(bad)  
   14000a35d:	je     0x14000a3c8
   14000a35f:	outs   dx,DWORD PTR ds:[rsi]
   14000a360:	outs   dx,BYTE PTR ds:[rsi]
   14000a361:	add    BYTE PTR [rdx+0x1],ah
   14000a364:	rex.RXB
   14000a365:	gs je  0x14000a3bb
   14000a368:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000a36c:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6f666e
   14000a374:	rex.WX add QWORD PTR [rdi+0x65],rax
   14000a378:	je     0x14000a3c6
   14000a37a:	outs   dx,BYTE PTR gs:[rsi]
   14000a37c:	addr32 je 0x14000a3e7
   14000a37f:	push   rbx
   14000a380:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6e49018c
   14000a388:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000a390:	movsxd ebp,DWORD PTR [r8+rax*1+0x13]
   14000a395:	add    BYTE PTR [rcx+0x64],al
   14000a398:	movsxd esp,DWORD PTR fs:[r11+0x65]
   14000a39d:	jae    0x14000a412
   14000a39f:	rex.R
   14000a3a0:	outs   dx,BYTE PTR gs:[rsi]
   14000a3a2:	imul   esp,DWORD PTR [rbp+0x64],0x656341
   14000a3a9:	add    BYTE PTR [rsi],dh
   14000a3ab:	add    DWORD PTR [rdi+0x65],eax
   14000a3ae:	je     0x14000a3f1
   14000a3b0:	movsxd esp,DWORD PTR [rbp+0x0]
   14000a3b3:	add    BYTE PTR [rsi],dl
   14000a3b5:	add    BYTE PTR [rcx+0x64],al
   14000a3b8:	movsxd esp,DWORD PTR fs:[r13+0x0]
   14000a3bd:	add    ch,ah
   14000a3bf:	add    dl,BYTE PTR [rbx+0x65]
   14000a3c2:	je     0x14000a417
   14000a3c4:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000a3c8:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6f666e
   14000a3d0:	mov    DWORD PTR [rdx],0x53746547
   14000a3d6:	je     0x14000a439
   14000a3d8:	jb     0x14000a44e
   14000a3da:	jne    0x14000a44c
   14000a3dc:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a3de:	outs   dx,WORD PTR ds:[rsi]
   14000a3e0:	push   rdi
   14000a3e1:	add    BYTE PTR [rsi+0x5],bl
   14000a3e4:	push   rbx
   14000a3e5:	gs je  0x14000a43d
   14000a3e8:	outs   dx,BYTE PTR ds:[rsi]
   14000a3e9:	push   0x6c646e61
   14000a3ee:	gs fs rex.RB js 0x14000a456
   14000a3f3:	gs jo  0x14000a46a
   14000a3f6:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000a3fd:	gs jb  0x14000a400
   14000a400:	outs   dx,BYTE PTR ds:[rsi]
   14000a401:	add    al,BYTE PTR [rdi+0x65]
   14000a404:	je     0x14000a453
   14000a406:	outs   dx,DWORD PTR ds:[rsi]
   14000a407:	fs jne 0x14000a476
   14000a40a:	gs rex.W (bad) 
   14000a40d:	outs   dx,BYTE PTR ds:[rsi]
   14000a40e:	fs ins BYTE PTR es:[rdi],dx
   14000a410:	gs push rdi
   14000a412:	add    BYTE PTR [rax],al
   14000a414:	ss add al,0x51
   14000a417:	jne    0x14000a47e
   14000a419:	jb     0x14000a494
   14000a41b:	push   rax
   14000a41c:	gs jb  0x14000a485
   14000a41f:	outs   dx,DWORD PTR ds:[rsi]
   14000a420:	jb     0x14000a48f
   14000a422:	(bad)  
   14000a423:	outs   dx,BYTE PTR ds:[rsi]
   14000a424:	movsxd esp,DWORD PTR [rbp+0x43]
   14000a427:	outs   dx,DWORD PTR ds:[rsi]
   14000a428:	jne    0x14000a498
   14000a42a:	je     0x14000a491
   14000a42c:	jb     0x14000a42e
   14000a42e:	adc    eax,0x74654702
   14000a433:	rex.XB jne 0x14000a4a8
   14000a436:	jb     0x14000a49d
   14000a438:	outs   dx,BYTE PTR ds:[rsi]
   14000a439:	je     0x14000a48f
   14000a43b:	push   0x64616572
   14000a440:	rex.WB
   14000a441:	add    BYTE PTR fs:[rax],al
   14000a444:	loopne 0x14000a448
   14000a446:	rex.RXB
   14000a447:	gs je  0x14000a49d
   14000a44a:	jns    0x14000a4bf
   14000a44c:	je     0x14000a4b3
   14000a44e:	ins    DWORD PTR es:[rdi],dx
   14000a44f:	push   rsp
   14000a450:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000a457:	ins    BYTE PTR es:[rdi],dx
   14000a458:	gs push rsp
   14000a45a:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000a461:	gs je  0x14000a4b8
   14000a464:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000a46b:	je     0x14000a46d
   14000a46d:	add    BYTE PTR [rsi+0x686e5505],bl
   14000a473:	(bad)  
   14000a474:	outs   dx,BYTE PTR ds:[rsi]
   14000a475:	fs ins BYTE PTR es:[rdi],dx
   14000a477:	gs fs rex.RB js 0x14000a4df
   14000a47c:	gs jo  0x14000a4f3
   14000a47f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000a486:	gs jb  0x14000a489
   14000a489:	add    BYTE PTR [rbp+rax*1+0x54],bh
   14000a48d:	gs jb  0x14000a4fd
   14000a490:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000a497:	outs   dx,DWORD PTR ds:[rsi]
   14000a498:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a49b:	jae    0x14000a49d
   14000a49d:	add    BYTE PTR [rbp+0x636f4c03],dh
   14000a4a3:	(bad)  
   14000a4a4:	ins    BYTE PTR es:[rdi],dx
   14000a4a5:	rex.B ins BYTE PTR es:[rdi],dx
   14000a4a7:	ins    BYTE PTR es:[rdi],dx
   14000a4a8:	outs   dx,DWORD PTR ds:[rsi]
   14000a4a9:	movsxd eax,DWORD PTR [rax]
   14000a4ab:	add    BYTE PTR [rsi+0x65724300],bl
   14000a4b1:	(bad)  
   14000a4b2:	je     0x14000a519
   14000a4b4:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x787443
   14000a4bc:	add    DWORD PTR [r13+0x6b],r9d
   14000a4c0:	push   rax
   14000a4c1:	(bad)  
   14000a4c2:	jb     0x14000a537
   14000a4c4:	imul   r14d,DWORD PTR gs:[rbx+0x70],0x4e79616c
   14000a4cd:	(bad)  
   14000a4ce:	ins    DWORD PTR es:[rdi],dx
   14000a4cf:	add    BYTE PTR gs:[rax],al
   14000a4d2:	xchg   ecx,eax
   14000a4d3:	add    al,0x6d
   14000a4d5:	gs ins DWORD PTR es:[rdi],dx
   14000a4d7:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000a4da:	add    BYTE PTR [rax],al
   14000a4dc:	xchg   esi,eax
   14000a4dd:	add    al,0x6d
   14000a4df:	gs ins DWORD PTR es:[rdi],dx
   14000a4e1:	jae    0x14000a548
   14000a4e3:	je     0x14000a4e5
	...

Disassembly of section .data:

000000014000b000 <.data>:
   14000b000:	add    DWORD PTR [rax],eax
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	add    BYTE PTR [rax],al
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	int    0x5d
   14000b012:	and    dl,dl
   14000b014:	data16 (bad) 
   14000b016:	(bad)  
   14000b017:	inc    DWORD PTR [rax]
   14000b019:	add    BYTE PTR [rax],al
   14000b01b:	add    BYTE PTR [rax],al
   14000b01d:	add    BYTE PTR [rax],al
   14000b01f:	add    BYTE PTR [rax],ah
   14000b021:	mov    al,0x0
   14000b023:	rex add DWORD PTR [rax],eax
	...

Disassembly of section .pdata:

000000014000c000 <.pdata>:
   14000c000:	xor    BYTE PTR [rax],dl
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	(bad)  
   14000c005:	adc    BYTE PTR [rax],al
   14000c007:	add    BYTE PTR [rax+0x70000094],bh
   14000c00d:	adc    BYTE PTR [rax],al
   14000c00f:	add    BYTE PTR [rcx-0x47fffff0],ah
   14000c015:	xchg   esp,eax
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	test   al,0x10
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	(bad)  
   14000c01d:	adc    BYTE PTR [rax],al
   14000c01f:	add    ah,al
   14000c021:	xchg   esp,eax
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	lock adc BYTE PTR [rax],al
   14000c027:	add    BYTE PTR [rdx+0x11],bh
   14000c02a:	add    BYTE PTR [rax],al
   14000c02c:	int3   
   14000c02d:	xchg   esp,eax
   14000c02e:	add    BYTE PTR [rax],al
   14000c030:	adc    BYTE PTR [rcx],0x0
   14000c033:	add    BYTE PTR [rdx+rdx*1],dh
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	(bad)  
   14000c039:	xchg   esp,eax
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	cmp    al,0x12
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	outs   dx,DWORD PTR ds:[rsi]
   14000c041:	adc    al,0x0
   14000c043:	add    ah,ch
   14000c045:	xchg   esp,eax
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	adc    BYTE PTR [rax+rax*1],0x0
   14000c04c:	adc    ax,0x0
   14000c050:	add    al,0x95
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	ins    BYTE PTR es:[rdi],dx
   14000c055:	adc    eax,0x177f0000
   14000c05a:	add    BYTE PTR [rax],al
   14000c05c:	sbb    al,0x95
   14000c05e:	add    BYTE PTR [rax],al
   14000c060:	mov    BYTE PTR [rdi],dl
   14000c062:	add    BYTE PTR [rax],al
   14000c064:	pop    rsp
   14000c065:	sbb    al,BYTE PTR [rax]
   14000c067:	add    BYTE PTR [rdx*4+0x1a640000],dh
   14000c06e:	add    BYTE PTR [rax],al
   14000c070:	sub    eax,0x3400001d
   14000c075:	xchg   ebp,eax
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	xor    al,0x1d
   14000c07a:	add    BYTE PTR [rax],al
   14000c07c:	scas   al,BYTE PTR es:[rdi]
   14000c07d:	(bad)  
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	xor    al,0x95
   14000c082:	add    BYTE PTR [rax],al
   14000c084:	mov    ah,0x1e
   14000c086:	add    BYTE PTR [rax],al
   14000c088:	adc    ah,BYTE PTR [rcx]
   14000c08a:	add    BYTE PTR [rax],al
   14000c08c:	rex.WR xchg rbp,rax
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	sbb    BYTE PTR [rcx],ah
   14000c092:	add    BYTE PTR [rax],al
   14000c094:	test   eax,0x64000021
   14000c099:	xchg   ebp,eax
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	mov    al,0x21
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	(bad)  
   14000c0a1:	and    al,BYTE PTR [rax]
   14000c0a3:	add    BYTE PTR [rbp+rdx*4+0x0],dh
   14000c0a7:	add    BYTE PTR [rax],bh
   14000c0a9:	and    al,BYTE PTR [rax]
   14000c0ab:	add    BYTE PTR [rsi],dh
   14000c0ad:	sub    BYTE PTR [rax],al
   14000c0af:	add    BYTE PTR [rbp+rdx*4+0x283c0000],cl
   14000c0b6:	add    BYTE PTR [rax],al
   14000c0b8:	imul   ebp,DWORD PTR [rax],0x0
   14000c0bb:	add    BYTE PTR [rax-0x7fffff6c],bh
   14000c0c1:	sub    BYTE PTR [rax],al
   14000c0c3:	add    al,dl
   14000c0c5:	sub    BYTE PTR [rax],al
   14000c0c7:	add    BYTE PTR [rbp+rdx*4+0x28e00000],ch
   14000c0ce:	add    BYTE PTR [rax],al
   14000c0d0:	mov    ebp,DWORD PTR [rcx]
   14000c0d2:	add    BYTE PTR [rax],al
   14000c0d4:	je     0x14000c06b
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	xchg   esp,eax
   14000c0d9:	sub    DWORD PTR [rax],eax
   14000c0db:	add    BYTE PTR [rdx+0x2b],al
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	rcl    BYTE PTR [rbp+0x2b480000],0x0
   14000c0e7:	add    BYTE PTR [rbx+0x32],ch
   14000c0ea:	add    BYTE PTR [rax],al
   14000c0ec:	fcom   DWORD PTR [rbp+0x32740000]
   14000c0f2:	add    BYTE PTR [rax],al
   14000c0f4:	mov    al,0x33
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	add    al,0x95
   14000c0fa:	add    BYTE PTR [rax],al
   14000c0fc:	mov    eax,0xa2000033
   14000c101:	xor    al,0x0
   14000c103:	add    ah,bh
   14000c105:	xchg   ebp,eax
   14000c106:	add    BYTE PTR [rax],al
   14000c108:	test   al,0x34
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	add    DWORD PTR [rsi],esi
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	adc    BYTE PTR [rsi+0x36100000],dl
   14000c116:	add    BYTE PTR [rax],al
   14000c118:	(bad)  
   14000c119:	cmp    eax,DWORD PTR [rax]
   14000c11b:	add    BYTE PTR [rsi+rdx*4],ah
   14000c11e:	add    BYTE PTR [rax],al
   14000c120:	add    al,0x3c
   14000c122:	add    BYTE PTR [rax],al
   14000c124:	push   rsi
   14000c125:	add    BYTE PTR ds:[rax],al
   14000c128:	rex.R xchg esi,eax
   14000c12a:	add    BYTE PTR [rax],al
   14000c12c:	pop    rsp
   14000c12d:	add    BYTE PTR ds:[rax],al
   14000c130:	idiv   DWORD PTR [rdi]
   14000c132:	add    BYTE PTR [rax],al
   14000c134:	push   rsp
   14000c135:	xchg   esi,eax
   14000c136:	add    BYTE PTR [rax],al
   14000c138:	add    BYTE PTR [rax+0x0],al
   14000c13b:	add    BYTE PTR [rcx+rax*2-0x699c0000],bl
   14000c142:	add    BYTE PTR [rax],al
   14000c144:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c145:	add    BYTE PTR [r8],al
   14000c148:	(bad)  
   14000c149:	add    BYTE PTR [rax],r8b
   14000c14c:	je     0x14000c0e4
   14000c14e:	add    BYTE PTR [rax],al
   14000c150:	xor    BYTE PTR [rax+rax*1+0x0],al
   14000c154:	stos   BYTE PTR es:[rdi],al
   14000c155:	add    BYTE PTR [r8],r8b
   14000c158:	nop
   14000c159:	xchg   esi,eax
   14000c15a:	add    BYTE PTR [rax],al
   14000c15c:	mov    al,0x45
   14000c15e:	add    BYTE PTR [rax],al
   14000c160:	sub    BYTE PTR [rax+0x0],cl
   14000c163:	add    BYTE PTR [rax+0x30000096],ah
   14000c169:	rex.W add BYTE PTR [rax],al
   14000c16c:	cdq    
   14000c16d:	rex.WB add BYTE PTR [r8],al
   14000c170:	mov    ah,0x96
   14000c172:	add    BYTE PTR [rax],al
   14000c174:	movabs al,ds:0xc800004d9f000049
   14000c17d:	xchg   esi,eax
   14000c17e:	add    BYTE PTR [rax],al
   14000c180:	ror    BYTE PTR [rbp+0x0],0x0
   14000c184:	and    edx,DWORD PTR [rdx+0x0]
   14000c187:	add    al,cl
   14000c189:	xchg   esi,eax
   14000c18a:	add    BYTE PTR [rax],al
   14000c18c:	sub    al,0x52
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	or     eax,0xe8000053
   14000c195:	xchg   esi,eax
   14000c196:	add    BYTE PTR [rax],al
   14000c198:	(bad)  
   14000c199:	push   rbx
   14000c19a:	add    BYTE PTR [rax],al
   14000c19c:	xlat   BYTE PTR ds:[rbx]
   14000c19d:	push   rbx
   14000c19e:	add    BYTE PTR [rax],al
   14000c1a0:	cld    
   14000c1a1:	xchg   esi,eax
   14000c1a2:	add    BYTE PTR [rax],al
   14000c1a4:	loopne 0x14000c1f9
   14000c1a6:	add    BYTE PTR [rax],al
   14000c1a8:	adc    DWORD PTR [rax+rax*1+0x0],edx
   14000c1ac:	mov    eax,0x20000094
   14000c1b1:	push   rsp
   14000c1b2:	add    BYTE PTR [rax],al
   14000c1b4:	push   rcx
   14000c1b5:	push   rsp
   14000c1b6:	add    BYTE PTR [rax],al
   14000c1b8:	mov    eax,0xe0000094
   14000c1bd:	push   rsp
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	or     dl,BYTE PTR [rbp+0x0]
   14000c1c3:	add    BYTE PTR [rdi+rdx*4],cl
   14000c1c6:	add    BYTE PTR [rax],al
   14000c1c8:	adc    BYTE PTR [rbp+0x0],dl
   14000c1cb:	add    BYTE PTR [rbp+0x55],al
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	or     al,0x97
   14000c1d2:	add    BYTE PTR [rax],al
   14000c1d4:	push   rax
   14000c1d5:	push   rbp
   14000c1d6:	add    BYTE PTR [rax],al
   14000c1d8:	mov    ch,0x55
   14000c1da:	add    BYTE PTR [rax],al
   14000c1dc:	je     0x14000c173
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	add    BYTE PTR [rsi+0x0],dl
   14000c1e3:	add    BYTE PTR [rsi+0x56],dl
   14000c1e6:	add    BYTE PTR [rax],al
   14000c1e8:	mov    eax,0x60000094
   14000c1ed:	push   rsi
   14000c1ee:	add    BYTE PTR [rax],al
   14000c1f0:	rex.WB push r15
   14000c1f2:	add    BYTE PTR [rax],al
   14000c1f4:	adc    al,0x97
   14000c1f6:	add    BYTE PTR [rax],al
   14000c1f8:	push   rax
   14000c1f9:	push   rdi
   14000c1fa:	add    BYTE PTR [rax],al
   14000c1fc:	rex.XB pop r8
   14000c1fe:	add    BYTE PTR [rax],al
   14000c200:	and    al,0x97
   14000c202:	add    BYTE PTR [rax],al
   14000c204:	push   rax
   14000c205:	pop    rax
   14000c206:	add    BYTE PTR [rax],al
   14000c208:	enter  0x58,0x0
   14000c20c:	lods   al,BYTE PTR ds:[rsi]
   14000c20d:	xchg   ebp,eax
   14000c20e:	add    BYTE PTR [rax],al
   14000c210:	rcr    BYTE PTR [rax+0x0],1
   14000c213:	add    BYTE PTR [rsi+0x60],al
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	cmp    BYTE PTR [rdi+0x604c0000],dl
   14000c21e:	add    BYTE PTR [rax],al
   14000c220:	(bad)  
   14000c221:	add    BYTE PTR gs:[rax],al
   14000c224:	push   rax
   14000c225:	xchg   edi,eax
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	adc    al,0x65
   14000c22a:	add    BYTE PTR [rax],al
   14000c22c:	xchg   ecx,eax
   14000c22d:	push   0xffffffff97680000
   14000c232:	add    BYTE PTR [rax],al
   14000c234:	cwde   
   14000c235:	push   0x68d10000
   14000c23a:	add    BYTE PTR [rax],al
   14000c23c:	mov    eax,0xf0000094
   14000c241:	push   0x69bf0000
   14000c246:	add    BYTE PTR [rax],al
   14000c248:	test   BYTE PTR [rbp+0x69d00000],dl
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	sbb    DWORD PTR [rdx+0x0],ebp
   14000c253:	add    BYTE PTR [rax+0x20000097],cl
   14000c259:	push   0x0
   14000c25b:	add    BYTE PTR [rcx-0x6fffff94],dl
   14000c261:	xchg   edi,eax
   14000c262:	add    BYTE PTR [rax],al
   14000c264:	movabs al,ds:0x8400006cb200006c
   14000c26d:	xchg   ebp,eax
   14000c26e:	add    BYTE PTR [rax],al
   14000c270:	shr    BYTE PTR [rax+rax*1+0x0],1
   14000c274:	out    dx,al
   14000c275:	ins    BYTE PTR es:[rdi],dx
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	rcl    BYTE PTR [rdi+0x6cf40000],1
   14000c27e:	add    BYTE PTR [rax],al
   14000c280:	xchg   edx,eax
   14000c281:	ins    DWORD PTR es:[rdi],dx
   14000c282:	add    BYTE PTR [rax],al
   14000c284:	(bad)  
   14000c285:	xchg   edi,eax
   14000c286:	add    BYTE PTR [rax],al
   14000c288:	cwde   
   14000c289:	ins    DWORD PTR es:[rdi],dx
   14000c28a:	add    BYTE PTR [rax],al
   14000c28c:	scas   eax,DWORD PTR es:[rdi]
   14000c28d:	ins    DWORD PTR es:[rdi],dx
   14000c28e:	add    BYTE PTR [rax],al
   14000c290:	test   BYTE PTR [rbp+0x6df00000],dl
   14000c296:	add    BYTE PTR [rax],al
   14000c298:	sub    DWORD PTR [rsi+0x0],ebp
   14000c29b:	add    BYTE PTR [rbp+rdx*4+0x6e300000],al
   14000c2a2:	add    BYTE PTR [rax],al
   14000c2a4:	rex.W outs dx,BYTE PTR ds:[rsi]
   14000c2a6:	add    BYTE PTR [rax],al
   14000c2a8:	test   BYTE PTR [rbp+0x6e5c0000],dl
   14000c2ae:	add    BYTE PTR [rax],al
   14000c2b0:	mov    al,0x6e
   14000c2b2:	add    BYTE PTR [rax],al
   14000c2b4:	clc    
   14000c2b5:	xchg   edi,eax
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	mov    eax,0xfd00006e
   14000c2bd:	outs   dx,BYTE PTR ds:[rsi]
   14000c2be:	add    BYTE PTR [rax],al
   14000c2c0:	or     al,0x97
   14000c2c2:	add    BYTE PTR [rax],al
   14000c2c4:	(bad)  
   14000c2c5:	outs   dx,DWORD PTR ds:[rsi]
   14000c2c6:	add    BYTE PTR [rax],al
   14000c2c8:	lods   eax,DWORD PTR ds:[rsi]
   14000c2c9:	outs   dx,DWORD PTR ds:[rsi]
   14000c2ca:	add    BYTE PTR [rax],al
   14000c2cc:	sbb    BYTE PTR [rax+0x6ff40000],bl
   14000c2d2:	add    BYTE PTR [rax],al
   14000c2d4:	(bad)  
   14000c2d5:	jo     0x14000c2d7
   14000c2d7:	add    BYTE PTR [rax+rbx*4],bh
   14000c2da:	add    BYTE PTR [rax],al
   14000c2dc:	cld    
   14000c2dd:	jo     0x14000c2df
   14000c2df:	add    BYTE PTR [rax],dh
   14000c2e1:	jno    0x14000c2e3
   14000c2e3:	add    BYTE PTR [rdi+rdx*4],cl
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	rex jno 0x14000c2eb
   14000c2eb:	add    BYTE PTR [rcx+0x48000072],dh
   14000c2f1:	cwde   
   14000c2f2:	add    BYTE PTR [rax],al
   14000c2f4:	call   0x14500c36b
   14000c2f9:	jae    0x14000c2fb
   14000c2fb:	add    BYTE PTR [rbp+rdx*4+0x730c0000],al
   14000c302:	add    BYTE PTR [rax],al
   14000c304:	outs   dx,DWORD PTR ds:[rsi]
   14000c305:	jae    0x14000c307
   14000c307:	add    BYTE PTR [rdi+rdx*4],cl
   14000c30a:	add    BYTE PTR [rax],al
   14000c30c:	movabs al,ds:0x50000073a2000073
   14000c315:	cwde   
   14000c316:	add    BYTE PTR [rax],al
   14000c318:	mov    dh,0x73
   14000c31a:	add    BYTE PTR [rax],al
   14000c31c:	(bad)  
   14000c31d:	jae    0x14000c31f
   14000c31f:	add    ah,al
   14000c321:	xchg   edi,eax
   14000c322:	add    BYTE PTR [rax],al
   14000c324:	fidiv  DWORD PTR [rbx+0x0]
   14000c327:	add    ch,dh
   14000c329:	jae    0x14000c32b
   14000c32b:	add    ah,al
   14000c32d:	xchg   edi,eax
   14000c32e:	add    BYTE PTR [rax],al
   14000c330:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000c334:	and    BYTE PTR [rax+rax*1+0x0],dh
   14000c338:	(bad)  
   14000c339:	xchg   edi,eax
   14000c33a:	add    BYTE PTR [rax],al
   14000c33c:	xor    BYTE PTR [rax+rax*1+0x0],dh
   14000c340:	rex.WRXB je 0x14000c343
   14000c343:	.byte 0x0
   14000c344:	.byte 0x84
   14000c345:	xchg   ebp,eax
	...

Disassembly of section .rsrc:

000000014000d000 <.rsrc>:
	...
   14000d00c:	add    DWORD PTR [rax],eax
   14000d00e:	add    al,BYTE PTR [rax]
   14000d010:	call   0x16880d015
   14000d015:	add    BYTE PTR [rax],al
   14000d017:	adc    BYTE PTR [rax],0x0
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	add    BYTE PTR [rax],al
   14000d01f:	sbb    BYTE PTR [rax],0x0
   14000d022:	add    BYTE PTR [rax],al
   14000d024:	pop    rax
   14000d025:	add    BYTE PTR [rax],al
   14000d027:	add    BYTE PTR [rax],0x0
	...
   14000d036:	add    DWORD PTR [rax],eax
   14000d038:	add    DWORD PTR [rax],eax
   14000d03a:	add    BYTE PTR [rax],al
   14000d03c:	jo     0x14000d03e
   14000d03e:	add    BYTE PTR [rax+0x0],al
	...
   14000d04c:	add    BYTE PTR [rax],al
   14000d04e:	add    DWORD PTR [rax],eax
   14000d050:	add    DWORD PTR [rax],eax
   14000d052:	add    BYTE PTR [rax],al
   14000d054:	mov    BYTE PTR [rax],al
   14000d056:	add    BYTE PTR [rax+0x0],al
	...
   14000d064:	add    BYTE PTR [rax],al
   14000d066:	add    DWORD PTR [rax],eax
   14000d068:	add    DWORD PTR [rax],eax
   14000d06a:	add    BYTE PTR [rax],al
   14000d06c:	movabs al,ds:0x800000
	...
   14000d07d:	add    BYTE PTR [rcx],al
   14000d07f:	add    BYTE PTR [rcx],cl
   14000d081:	add    al,0x0
   14000d083:	add    BYTE PTR [rax+0x0],bh
	...
   14000d095:	add    BYTE PTR [rcx],al
   14000d097:	add    BYTE PTR [rcx],cl
   14000d099:	add    al,0x0
   14000d09b:	add    al,cl
	...
   14000d0ad:	add    BYTE PTR [rcx],al
   14000d0af:	add    BYTE PTR [rcx],cl
   14000d0b1:	add    al,0x0
   14000d0b3:	add    al,bl
   14000d0b5:	add    BYTE PTR [rax],al
   14000d0b7:	add    BYTE PTR [rax],al
   14000d0b9:	fld    DWORD PTR [rax]
   14000d0bb:	add    al,cl
	...
   14000d0c5:	add    BYTE PTR [rax],al
   14000d0c7:	add    BYTE PTR [rax-0x7fffff2b],al
   14000d0cd:	add    eax,DWORD PTR [rax]
	...
   14000d0d7:	add    al,dh
   14000d0d9:	rol    BYTE PTR [rax],1
   14000d0db:	add    BYTE PTR [rsi+0x4],cl
   14000d0e1:	add    BYTE PTR [rax],al
   14000d0e3:	add    BYTE PTR [rax],al
   14000d0e5:	add    BYTE PTR [rax],al
   14000d0e7:	add    BYTE PTR [rbx],al
   14000d0e9:	add    BYTE PTR [rbp+0x0],cl
   14000d0ec:	push   rbp
   14000d0ed:	add    BYTE PTR [rcx+0x0],cl
   14000d0f0:	cmp    al,0x3f
   14000d0f2:	js     0x14000d161
   14000d0f4:	ins    BYTE PTR es:[rdi],dx
   14000d0f5:	and    BYTE PTR [rsi+0x65],dh
   14000d0f8:	jb     0x14000d16d
   14000d0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000d101:	xor    BYTE PTR [rdx],ah
   14000d103:	and    BYTE PTR [rbp+0x6e],ah
   14000d106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000d109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000d110:	rex.RX sub eax,0x73202238
   14000d116:	je     0x14000d179
   14000d118:	outs   dx,BYTE PTR ds:[rsi]
   14000d119:	fs (bad) 
   14000d11b:	ins    BYTE PTR es:[rdi],dx
   14000d11c:	outs   dx,DWORD PTR ds:[rsi]
   14000d11d:	outs   dx,BYTE PTR ds:[rsi]
   14000d11e:	gs cmp eax,0x73657922
   14000d124:	and    bh,BYTE PTR [rdi]
   14000d126:	ds or  eax,0x2d213c0a
   14000d12c:	sub    eax,0x706f4320
   14000d131:	jns    0x14000d1a5
   14000d133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000d13a:	sub    DWORD PTR [rax],esp
   14000d13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000d144:	je     0x14000d166
   14000d146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d148:	jb     0x14000d1ba
   14000d14a:	outs   dx,DWORD PTR ds:[rsi]
   14000d14b:	jb     0x14000d1ae
   14000d14d:	je     0x14000d1b8
   14000d14f:	outs   dx,DWORD PTR ds:[rsi]
   14000d150:	outs   dx,BYTE PTR ds:[rsi]
   14000d151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e0f84
   14000d157:	cmp    al,0x61
   14000d159:	jae    0x14000d1ce
   14000d15b:	gs ins DWORD PTR es:[rdi],dx
   14000d15d:	(bad)  
   14000d15e:	ins    BYTE PTR es:[rdi],dx
   14000d15f:	jns    0x14000d181
   14000d161:	js     0x14000d1d0
   14000d163:	ins    BYTE PTR es:[rdi],dx
   14000d164:	outs   dx,BYTE PTR ds:[rsi]
   14000d165:	jae    0x14000d1a4
   14000d167:	and    dh,BYTE PTR [rbp+0x72]
   14000d16a:	outs   dx,BYTE PTR ds:[rsi]
   14000d16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000d16e:	push   0x73616d65
   14000d173:	sub    eax,0x7263696d
   14000d178:	outs   dx,DWORD PTR ds:[rsi]
   14000d179:	jae    0x14000d1ea
   14000d17b:	data16 je 0x14000d1ab
   14000d17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d181:	cmp    ah,BYTE PTR [rcx+0x73]
   14000d184:	ins    DWORD PTR es:[rdi],dx
   14000d185:	cs jbe 0x14000d1b9
   14000d188:	and    ah,BYTE PTR [rax]
   14000d18a:	ins    DWORD PTR es:[rdi],dx
   14000d18b:	(bad)  
   14000d18c:	outs   dx,BYTE PTR ds:[rsi]
   14000d18d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000d194:	jb     0x14000d209
   14000d196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000d19d:	xor    BYTE PTR [rdx],ah
   14000d19f:	and    BYTE PTR [rax+0x6d],bh
   14000d1a2:	ins    BYTE PTR es:[rdi],dx
   14000d1a3:	outs   dx,BYTE PTR ds:[rsi]
   14000d1a4:	jae    0x14000d1e0
   14000d1a6:	(bad)  
   14000d1a7:	jae    0x14000d216
   14000d1a9:	jbe    0x14000d1de
   14000d1ab:	cmp    eax,0x6e727522
   14000d1b0:	cmp    dh,BYTE PTR [rbx+0x63]
   14000d1b3:	push   0x73616d65
   14000d1b8:	sub    eax,0x7263696d
   14000d1bd:	outs   dx,DWORD PTR ds:[rsi]
   14000d1be:	jae    0x14000d22f
   14000d1c0:	data16 je 0x14000d1f0
   14000d1c3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d1c6:	cmp    ah,BYTE PTR [rcx+0x73]
   14000d1c9:	ins    DWORD PTR es:[rdi],dx
   14000d1ca:	cs jbe 0x14000d200
   14000d1cd:	and    bh,BYTE PTR [rsi]
   14000d1cf:	or     eax,0x73613c0a
   14000d1d4:	jae    0x14000d23b
   14000d1d6:	ins    DWORD PTR es:[rdi],dx
   14000d1d7:	(bad)  
   14000d1d8:	ins    BYTE PTR es:[rdi],dx
   14000d1d9:	jns    0x14000d224
   14000d1db:	fs outs dx,BYTE PTR gs:[rsi]
   14000d1de:	je     0x14000d249
   14000d1e0:	je     0x14000d25b
   14000d1e2:	or     eax,0x2020200a
   14000d1e7:	and    BYTE PTR [rsi+0x65],dh
   14000d1ea:	jb     0x14000d25f
   14000d1ec:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000d1f3:	xor    DWORD PTR [rsi],ebp
   14000d1f5:	xor    BYTE PTR [rsi],ch
   14000d1f7:	xor    BYTE PTR [rdx],ah
   14000d1f9:	or     eax,0x2020200a
   14000d1fe:	and    BYTE PTR [rax+0x72],dh
   14000d201:	outs   dx,DWORD PTR ds:[rsi]
   14000d202:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d205:	jae    0x14000d276
   14000d207:	jb     0x14000d24a
   14000d209:	jb     0x14000d26e
   14000d20b:	push   0x63657469
   14000d210:	je     0x14000d287
   14000d212:	jb     0x14000d279
   14000d214:	cmp    eax,0x646d6122
   14000d219:	ss xor al,0x22
   14000d21c:	or     eax,0x2020200a
   14000d221:	and    BYTE PTR [rsi+0x61],ch
   14000d224:	ins    DWORD PTR es:[rdi],dx
   14000d225:	gs cmp eax,0x63694d22
   14000d22b:	jb     0x14000d29c
   14000d22d:	jae    0x14000d29e
   14000d22f:	data16 je 0x14000d260
   14000d232:	push   rdi
   14000d233:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000d23a:	push   rsp
   14000d23b:	gs jb  0x14000d2ab
   14000d23e:	imul   ebp,DWORD PTR [rsi+0x61],0x7265536c
   14000d245:	jbe    0x14000d2b0
   14000d247:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d24a:	cs push rdx
   14000d24c:	fs jo  0x14000d2a4
   14000d24f:	(bad)  
   14000d250:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020f260
   14000d256:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000d25a:	gs cmp eax,0x6e697722
   14000d260:	xor    esi,DWORD PTR [rdx]
   14000d262:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f0172
   14000d268:	or     bh,BYTE PTR [rsp+riz*2]
   14000d26b:	gs jae 0x14000d2d1
   14000d26e:	jb     0x14000d2d9
   14000d270:	jo     0x14000d2e6
   14000d272:	imul   ebp,DWORD PTR [rdi+0x6e],0x5044523e
   14000d279:	and    BYTE PTR [rbx+0x65],dl
   14000d27c:	jae    0x14000d2f1
   14000d27e:	imul   ebp,DWORD PTR [rdi+0x6e],0x65674120
   14000d285:	outs   dx,BYTE PTR ds:[rsi]
   14000d286:	je     0x14000d2c4
   14000d288:	(bad)  
   14000d289:	fs gs jae 0x14000d2f0
   14000d28d:	jb     0x14000d2f8
   14000d28f:	jo     0x14000d305
   14000d291:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14000d298:	je     0x14000d30c
   14000d29a:	jne    0x14000d30f
   14000d29c:	je     0x14000d2e7
   14000d29e:	outs   dx,BYTE PTR ds:[rsi]
   14000d29f:	outs   dx,WORD PTR ds:[rsi]
   14000d2a1:	and    BYTE PTR [rax+0x6d],bh
   14000d2a4:	ins    BYTE PTR es:[rdi],dx
   14000d2a5:	outs   dx,BYTE PTR ds:[rsi]
   14000d2a6:	jae    0x14000d2e5
   14000d2a8:	and    dh,BYTE PTR [rbp+0x72]
   14000d2ab:	outs   dx,BYTE PTR ds:[rsi]
   14000d2ac:	cmp    dh,BYTE PTR [rbx+0x63]
   14000d2af:	push   0x73616d65
   14000d2b4:	sub    eax,0x7263696d
   14000d2b9:	outs   dx,DWORD PTR ds:[rsi]
   14000d2ba:	jae    0x14000d32b
   14000d2bc:	data16 je 0x14000d2ec
   14000d2bf:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d2c2:	cmp    ah,BYTE PTR [rcx+0x73]
   14000d2c5:	ins    DWORD PTR es:[rdi],dx
   14000d2c6:	cs jbe 0x14000d2fc
   14000d2c9:	and    bh,BYTE PTR [rsi]
   14000d2cb:	or     eax,0x2020200a
   14000d2d0:	and    BYTE PTR [rbx+rsi*2],bh
   14000d2d3:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000d2d7:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000d2df:	and    BYTE PTR [rax],ah
   14000d2e1:	and    BYTE PTR [rax],ah
   14000d2e3:	and    BYTE PTR [rax],ah
   14000d2e5:	cmp    al,0x72
   14000d2e7:	gs jno 0x14000d35f
   14000d2ea:	gs jae 0x14000d361
   14000d2ed:	gs fs push rax
   14000d2f0:	jb     0x14000d35b
   14000d2f2:	jbe    0x14000d35d
   14000d2f4:	ins    BYTE PTR es:[rdi],dx
   14000d2f5:	gs addr32 gs jae 0x14000d338
   14000d2fa:	or     eax,0x2020200a
   14000d2ff:	and    BYTE PTR [rax],ah
   14000d301:	and    BYTE PTR [rax],ah
   14000d303:	and    BYTE PTR [rax],ah
   14000d305:	and    BYTE PTR [rax],ah
   14000d307:	and    BYTE PTR [rdx+rsi*2],bh
   14000d30a:	gs jno 0x14000d382
   14000d30d:	gs jae 0x14000d384
   14000d310:	gs fs rex.RB js 0x14000d37a
   14000d315:	movsxd esi,DWORD PTR [rbp+0x74]
   14000d318:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000d31f:	ins    BYTE PTR es:[rdi],dx
   14000d320:	or     eax,0x2020200a
   14000d325:	and    BYTE PTR [rax],ah
   14000d327:	and    BYTE PTR [rax],ah
   14000d329:	and    BYTE PTR [rax],ah
   14000d32b:	and    BYTE PTR [rax],ah
   14000d32d:	and    BYTE PTR [rax],ah
   14000d32f:	and    BYTE PTR [rax],ah
   14000d331:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000d335:	gs ins BYTE PTR es:[rdi],dx
   14000d337:	cmp    eax,0x49736122
   14000d33c:	outs   dx,BYTE PTR ds:[rsi]
   14000d33d:	jbe    0x14000d3ae
   14000d33f:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000d343:	or     eax,0x2020200a
   14000d348:	and    BYTE PTR [rax],ah
   14000d34a:	and    BYTE PTR [rax],ah
   14000d34c:	and    BYTE PTR [rax],ah
   14000d34e:	and    BYTE PTR [rax],ah
   14000d350:	and    BYTE PTR [rax],ah
   14000d352:	and    BYTE PTR [rax],ah
   14000d354:	and    BYTE PTR [rbp+0x69],dh
   14000d357:	movsxd esp,DWORD PTR [r11+0x65]
   14000d35b:	jae    0x14000d3d0
   14000d35d:	cmp    eax,0x75727422
   14000d362:	and    cl,BYTE PTR gs:[rip+0x2020200a]        # 0x16020f373
   14000d369:	and    BYTE PTR [rax],ah
   14000d36b:	and    BYTE PTR [rax],ah
   14000d36d:	and    BYTE PTR [rax],ah
   14000d36f:	and    BYTE PTR [rax],ah
   14000d371:	and    BYTE PTR [rdi],ch
   14000d373:	ds or  eax,0x2020200a
   14000d379:	and    BYTE PTR [rax],ah
   14000d37b:	and    BYTE PTR [rax],ah
   14000d37d:	and    BYTE PTR [rdi+rbp*1],bh
   14000d380:	jb     0x14000d3e7
   14000d382:	jno    0x14000d3f9
   14000d384:	gs jae 0x14000d3fb
   14000d387:	gs fs push rax
   14000d38a:	jb     0x14000d3f5
   14000d38c:	jbe    0x14000d3f7
   14000d38e:	ins    BYTE PTR es:[rdi],dx
   14000d38f:	gs addr32 gs jae 0x14000d3d2
   14000d394:	or     eax,0x2020200a
   14000d399:	and    BYTE PTR [rdi+rbp*1],bh
   14000d39c:	jae    0x14000d403
   14000d39e:	movsxd esi,DWORD PTR [rbp+0x72]
   14000d3a1:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000d3a9:	je     0x14000d41d
   14000d3ab:	jne    0x14000d420
   14000d3ad:	je     0x14000d3f8
   14000d3af:	outs   dx,BYTE PTR ds:[rsi]
   14000d3b0:	outs   dx,WORD PTR ds:[rsi]
   14000d3b2:	ds or  eax,0x70613c0a
   14000d3b8:	jo     0x14000d426
   14000d3ba:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d3c1:	and    BYTE PTR [rax+0x6d],bh
   14000d3c4:	ins    BYTE PTR es:[rdi],dx
   14000d3c5:	outs   dx,BYTE PTR ds:[rsi]
   14000d3c6:	jae    0x14000d405
   14000d3c8:	and    dh,BYTE PTR [rbp+0x72]
   14000d3cb:	outs   dx,BYTE PTR ds:[rsi]
   14000d3cc:	cmp    dh,BYTE PTR [rbx+0x63]
   14000d3cf:	push   0x73616d65
   14000d3d4:	sub    eax,0x7263696d
   14000d3d9:	outs   dx,DWORD PTR ds:[rsi]
   14000d3da:	jae    0x14000d44b
   14000d3dc:	data16 je 0x14000d40c
   14000d3df:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d3e2:	cmp    ah,BYTE PTR [rcx+0x73]
   14000d3e5:	ins    DWORD PTR es:[rdi],dx
   14000d3e6:	cs jbe 0x14000d41c
   14000d3e9:	and    bh,BYTE PTR [rsi]
   14000d3eb:	or     eax,0x2020200a
   14000d3f0:	and    BYTE PTR [rdi+rsi*2],bh
   14000d3f3:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   14000d3fa:	gs je  0x14000d471
   14000d3fd:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000d404:	and    BYTE PTR [rax],ah
   14000d406:	and    BYTE PTR [rax],ah
   14000d408:	and    BYTE PTR [rax],ah
   14000d40a:	and    BYTE PTR [rsp+riz*2],bh
   14000d40d:	imul   esi,DWORD PTR [rbx+0x61],0x57656c62
   14000d414:	imul   ebp,DWORD PTR [rsi+0x64],0x6946776f
   14000d41b:	ins    BYTE PTR es:[rdi],dx
   14000d41c:	je     0x14000d483
   14000d41e:	jb     0x14000d489
   14000d420:	outs   dx,BYTE PTR ds:[rsi]
   14000d421:	and    BYTE PTR [eax+0x6d],bh
   14000d425:	ins    BYTE PTR es:[rdi],dx
   14000d426:	outs   dx,BYTE PTR ds:[rsi]
   14000d427:	jae    0x14000d466
   14000d429:	and    ch,BYTE PTR [rax+0x74]
   14000d42c:	je     0x14000d49e
   14000d42e:	cmp    ch,BYTE PTR [rdi]
   14000d430:	(bad)  
   14000d431:	jae    0x14000d496
   14000d433:	push   0x73616d65
   14000d438:	cs ins DWORD PTR es:[rdi],dx
   14000d43a:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000d441:	je     0x14000d471
   14000d443:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d446:	(bad)  
   14000d447:	push   rbx
   14000d448:	rex.WRB
   14000d449:	rex.WB (bad) 
   14000d44b:	xor    dh,BYTE PTR [rax]
   14000d44d:	xor    DWORD PTR [rcx],esi
   14000d44f:	(bad)  
   14000d450:	push   rdi
   14000d451:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   14000d458:	gs je  0x14000d4cf
   14000d45b:	imul   ebp,DWORD PTR [rsi+0x67],0x743e2273
   14000d462:	jb     0x14000d4d9
   14000d464:	gs cmp al,0x2f
   14000d467:	imul   esi,DWORD PTR fs:[rbx+0x61],0x57656c62
   14000d46f:	imul   ebp,DWORD PTR [rsi+0x64],0x6946776f
   14000d476:	ins    BYTE PTR es:[rdi],dx
   14000d477:	je     0x14000d4de
   14000d479:	jb     0x14000d4e4
   14000d47b:	outs   dx,BYTE PTR ds:[rsi]
   14000d47c:	addr32 ds or eax,0x2020200a
   14000d483:	and    BYTE PTR [rdi+rbp*1],bh
   14000d486:	ja     0x14000d4f1
   14000d488:	outs   dx,BYTE PTR ds:[rsi]
   14000d489:	outs   dx,DWORD PTR fs:[rsi]
   14000d48b:	ja     0x14000d500
   14000d48d:	push   rbx
   14000d48e:	gs je  0x14000d505
   14000d491:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000d498:	cmp    al,0x2f
   14000d49a:	(bad)  
   14000d49b:	jo     0x14000d50d
   14000d49d:	ins    BYTE PTR es:[rdi],dx
   14000d49e:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d4a5:	ds or  eax,0x73613c0a
   14000d4ab:	ins    DWORD PTR es:[rdi],dx
   14000d4ac:	jbe    0x14000d4e1
   14000d4ae:	cmp    ah,BYTE PTR [rcx+0x70]
   14000d4b1:	jo     0x14000d51f
   14000d4b3:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d4ba:	ds or  eax,0x2020200a
   14000d4c0:	and    BYTE PTR [rcx+riz*2],bh
   14000d4c3:	jae    0x14000d532
   14000d4c5:	jbe    0x14000d4fa
   14000d4c7:	cmp    dh,BYTE PTR [rdi+0x69]
   14000d4ca:	outs   dx,BYTE PTR ds:[rsi]
   14000d4cb:	outs   dx,DWORD PTR fs:[rsi]
   14000d4cd:	ja     0x14000d542
   14000d4cf:	push   rbx
   14000d4d0:	gs je  0x14000d547
   14000d4d3:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   14000d4da:	ins    BYTE PTR es:[rdi],dx
   14000d4db:	outs   dx,BYTE PTR ds:[rsi]
   14000d4dc:	jae    0x14000d51b
   14000d4de:	and    ch,BYTE PTR [rax+0x74]
   14000d4e1:	je     0x14000d553
   14000d4e3:	cmp    ch,BYTE PTR [rdi]
   14000d4e5:	(bad)  
   14000d4e6:	jae    0x14000d54b
   14000d4e8:	push   0x73616d65
   14000d4ed:	cs ins DWORD PTR es:[rdi],dx
   14000d4ef:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000d4f6:	je     0x14000d526
   14000d4f8:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d4fb:	(bad)  
   14000d4fc:	push   rbx
   14000d4fd:	rex.WRB
   14000d4fe:	rex.WB (bad) 
   14000d500:	xor    dh,BYTE PTR [rax]
   14000d502:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a2c37
   14000d508:	outs   dx,DWORD PTR fs:[rsi]
   14000d50a:	ja     0x14000d57f
   14000d50c:	push   rbx
   14000d50d:	gs je  0x14000d584
   14000d510:	imul   ebp,DWORD PTR [rsi+0x67],0xd3e2273
   14000d517:	or     ah,BYTE PTR [rax]
   14000d519:	and    BYTE PTR [rax],ah
   14000d51b:	and    BYTE PTR [rax],ah
   14000d51d:	and    BYTE PTR [rax],ah
   14000d51f:	and    BYTE PTR [rsp+riz*2],bh
   14000d522:	jo     0x14000d58d
   14000d524:	rex.B ja 0x14000d588
   14000d527:	jb     0x14000d58e
   14000d529:	ds je  0x14000d59e
   14000d52c:	jne    0x14000d593
   14000d52e:	cmp    al,0x2f
   14000d530:	fs jo  0x14000d59c
   14000d533:	rex.B ja 0x14000d597
   14000d536:	jb     0x14000d59d
   14000d538:	ds or  eax,0x2020200a
   14000d53e:	and    BYTE PTR [rdi+rbp*1],bh
   14000d541:	(bad)  
   14000d542:	jae    0x14000d5b1
   14000d544:	jbe    0x14000d579
   14000d546:	cmp    dh,BYTE PTR [rdi+0x69]
   14000d549:	outs   dx,BYTE PTR ds:[rsi]
   14000d54a:	outs   dx,DWORD PTR fs:[rsi]
   14000d54c:	ja     0x14000d5c1
   14000d54e:	push   rbx
   14000d54f:	gs je  0x14000d5c6
   14000d552:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000d559:	cmp    al,0x2f
   14000d55b:	(bad)  
   14000d55c:	jae    0x14000d5cb
   14000d55e:	jbe    0x14000d593
   14000d560:	cmp    ah,BYTE PTR [rcx+0x70]
   14000d563:	jo     0x14000d5d1
   14000d565:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d56c:	ds or  eax,0x612f3c0a
   14000d572:	jae    0x14000d5e7
   14000d574:	gs ins DWORD PTR es:[rdi],dx
   14000d576:	(bad)  
   14000d577:	ins    BYTE PTR es:[rdi],dx
   14000d578:	jns    0x14000d5b8
   14000d57a:	or     eax,0xa0d0a
   14000d57f:	add    BYTE PTR [rax+0x3403],al
   14000d585:	add    BYTE PTR [rsi+0x0],dl
   14000d588:	push   rbx
   14000d589:	add    BYTE PTR [rdi+0x0],bl
   14000d58c:	push   rsi
   14000d58d:	add    BYTE PTR [rbp+0x0],al
   14000d590:	push   rdx
   14000d591:	add    BYTE PTR [rbx+0x0],dl
   14000d594:	rex.WB add BYTE PTR [r15+0x0],cl
   14000d598:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000d59c:	rex.WB add BYTE PTR [r14+0x0],cl
   14000d5a0:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000d5a4:	add    BYTE PTR [rax],al
   14000d5a6:	add    BYTE PTR [rax],al
   14000d5a8:	mov    ebp,0xfeef04
   14000d5ad:	add    BYTE PTR [rcx],al
   14000d5af:	add    BYTE PTR [rax],al
   14000d5b1:	add    BYTE PTR [rdx],cl
   14000d5b3:	add    BYTE PTR [rax],al
   14000d5b5:	add    BYTE PTR [rax],bpl
   14000d5b8:	add    BYTE PTR [rax],al
   14000d5ba:	or     al,BYTE PTR [rax]
   14000d5bc:	add    BYTE PTR [rax+0x0],al
   14000d5bf:	sub    BYTE PTR [rdi],bh
   14000d5c1:	add    BYTE PTR [rax],al
   14000d5c3:	add    BYTE PTR [rax],al
   14000d5c5:	add    BYTE PTR [rax],al
   14000d5c7:	add    BYTE PTR [rax+rax*1],al
   14000d5ca:	add    al,0x0
   14000d5cc:	add    DWORD PTR [rax],eax
	...
   14000d5da:	add    BYTE PTR [rax],al
   14000d5dc:	fiadd  WORD PTR [rdx]
   14000d5de:	add    BYTE PTR [rax],al
   14000d5e0:	add    DWORD PTR [rax],eax
   14000d5e2:	push   rbx
   14000d5e3:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000d5e7:	add    BYTE PTR [rcx+0x0],ch
   14000d5ea:	outs   dx,BYTE PTR ds:[rsi]
   14000d5eb:	add    BYTE PTR [rdi+0x0],ah
   14000d5ee:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d5f2:	ins    BYTE PTR es:[rdi],dx
   14000d5f3:	add    BYTE PTR [rbp+0x0],ah
   14000d5f6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d5fa:	data16 add BYTE PTR [rdi+0x0],ch
   14000d5fe:	add    BYTE PTR [rax],al
   14000d600:	mov    edx,0x1000002
   14000d605:	add    BYTE PTR [rax],dh
   14000d607:	add    BYTE PTR [rax+rax*1],dh
   14000d60a:	xor    BYTE PTR [rax],al
   14000d60c:	cmp    DWORD PTR [rax],eax
   14000d60e:	xor    BYTE PTR [rax],al
   14000d610:	xor    al,0x0
   14000d612:	rex.X add BYTE PTR [rax],sil
   14000d615:	add    BYTE PTR [rax],al
   14000d617:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000d61b:	add    BYTE PTR [rcx],al
   14000d61d:	add    BYTE PTR [rbx+0x0],al
   14000d620:	outs   dx,DWORD PTR ds:[rsi]
   14000d621:	add    BYTE PTR [rbp+0x0],ch
   14000d624:	jo     0x14000d626
   14000d626:	(bad)  
   14000d627:	add    BYTE PTR [rsi+0x0],ch
   14000d62a:	jns    0x14000d62c
   14000d62c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000d630:	ins    DWORD PTR es:[rdi],dx
   14000d631:	add    BYTE PTR [rbp+0x0],ah
   14000d634:	add    BYTE PTR [rax],al
   14000d636:	add    BYTE PTR [rax],al
   14000d638:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000d63c:	movsxd eax,DWORD PTR [rax]
   14000d63e:	jb     0x14000d640
   14000d640:	outs   dx,DWORD PTR ds:[rsi]
   14000d641:	add    BYTE PTR [rbx+0x0],dh
   14000d644:	outs   dx,DWORD PTR ds:[rsi]
   14000d645:	add    BYTE PTR [rsi+0x0],ah
   14000d648:	je     0x14000d64a
   14000d64a:	and    BYTE PTR [rax],al
   14000d64c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d650:	jb     0x14000d652
   14000d652:	jo     0x14000d654
   14000d654:	outs   dx,DWORD PTR ds:[rsi]
   14000d655:	add    BYTE PTR [rdx+0x0],dh
   14000d658:	(bad)  
   14000d659:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d65d:	add    BYTE PTR [rdi+0x0],ch
   14000d660:	outs   dx,BYTE PTR ds:[rsi]
   14000d661:	add    BYTE PTR [rax],al
   14000d663:	add    BYTE PTR [rax+rax*1+0x12],cl
   14000d667:	add    BYTE PTR [rcx],al
   14000d669:	add    BYTE PTR [rsi+0x0],al
   14000d66c:	imul   eax,DWORD PTR [rax],0x65006c
   14000d672:	add    BYTE PTR [rbp+0x0],r12b
   14000d676:	jae    0x14000d678
   14000d678:	movsxd eax,DWORD PTR [rax]
   14000d67a:	jb     0x14000d67c
   14000d67c:	imul   eax,DWORD PTR [rax],0x740070
   14000d682:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d688:	add    BYTE PTR [rax],al
   14000d68a:	add    BYTE PTR [rax],al
   14000d68c:	push   rdx
   14000d68d:	add    BYTE PTR [rax+rax*1+0x50],al
   14000d691:	add    BYTE PTR [rax],ah
   14000d693:	add    BYTE PTR [rbx+0x0],dl
   14000d696:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d69a:	jae    0x14000d69c
   14000d69c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d6a2:	and    BYTE PTR [rax],al
   14000d6a4:	add    BYTE PTR [r15+0x0],spl
   14000d6a8:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d6ac:	je     0x14000d6ae
   14000d6ae:	add    BYTE PTR [rax],al
   14000d6b0:	data16 add BYTE PTR [rbx],ah
   14000d6b3:	add    BYTE PTR [rcx],al
   14000d6b5:	add    BYTE PTR [rsi+0x0],al
   14000d6b8:	imul   eax,DWORD PTR [rax],0x65006c
   14000d6be:	push   rsi
   14000d6bf:	add    BYTE PTR [rbp+0x0],ah
   14000d6c2:	jb     0x14000d6c4
   14000d6c4:	jae    0x14000d6c6
   14000d6c6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d6cc:	add    BYTE PTR [rax],al
   14000d6ce:	add    BYTE PTR [rax],al
   14000d6d0:	xor    DWORD PTR [rax],eax
   14000d6d2:	xor    BYTE PTR [rax],al
   14000d6d4:	add    BYTE PTR cs:[rax],dh
   14000d6d7:	add    BYTE PTR [rsi],ch
   14000d6d9:	add    BYTE PTR [rcx],dh
   14000d6db:	add    BYTE PTR [rax],dh
   14000d6dd:	add    BYTE PTR [rdx],dh
   14000d6df:	add    BYTE PTR [rax+rax*1],dh
   14000d6e2:	xor    BYTE PTR [rax],al
   14000d6e4:	add    BYTE PTR cs:[rcx],dh
   14000d6e7:	add    BYTE PTR [rsi],dh
   14000d6e9:	add    BYTE PTR [rbx],dh
   14000d6eb:	add    BYTE PTR [rax],bh
   14000d6ed:	add    BYTE PTR [rax+rax*1],dh
   14000d6f0:	and    BYTE PTR [rax],al
   14000d6f2:	sub    BYTE PTR [rax],al
   14000d6f4:	je     0x14000d6f6
   14000d6f6:	push   0x2e003100
   14000d6fb:	add    BYTE PTR [rcx],dh
   14000d6fd:	add    BYTE PTR [rip+0x37003000],dh        # 0x177010703
   14000d703:	add    BYTE PTR [rax],dh
   14000d705:	add    BYTE PTR [rcx],bh
   14000d707:	add    BYTE PTR [rip+0x37003100],ch        # 0x17701080d
   14000d70d:	add    BYTE PTR [rax],dh
   14000d70f:	add    BYTE PTR [rax],dh
   14000d711:	add    BYTE PTR [rcx],ch
   14000d713:	add    BYTE PTR [rax],al
   14000d715:	add    BYTE PTR [rax],al
   14000d717:	add    BYTE PTR [rax+rax*1],dh
   14000d71a:	or     al,BYTE PTR [rax]
   14000d71c:	add    DWORD PTR [rax],eax
   14000d71e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d722:	je     0x14000d724
   14000d724:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d728:	outs   dx,BYTE PTR ds:[rsi]
   14000d729:	add    BYTE PTR [rcx+0x0],ah
   14000d72c:	ins    BYTE PTR es:[rdi],dx
   14000d72d:	add    BYTE PTR [rsi+0x0],cl
   14000d730:	(bad)  
   14000d731:	add    BYTE PTR [rbp+0x0],ch
   14000d734:	add    BYTE PTR gs:[rax],al
   14000d737:	add    BYTE PTR [rdx+0x0],dl
   14000d73a:	add    BYTE PTR fs:[rax+0x0],dh
   14000d73e:	push   rbx
   14000d73f:	add    BYTE PTR [rcx+0x0],ah
   14000d742:	add    BYTE PTR cs:[rbp+0x0],ah
   14000d746:	js     0x14000d748
   14000d748:	add    BYTE PTR gs:[rax],al
   14000d74b:	add    BYTE PTR [rax+0x1002e00],al
   14000d751:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000d755:	add    BYTE PTR [rdi+0x0],ah
   14000d758:	(bad)  
   14000d759:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000d75d:	add    BYTE PTR [rdi+0x0],ch
   14000d760:	jo     0x14000d762
   14000d762:	jns    0x14000d764
   14000d764:	jb     0x14000d766
   14000d766:	imul   eax,DWORD PTR [rax],0x680067
   14000d76c:	je     0x14000d76e
   14000d76e:	add    BYTE PTR [rax],al
   14000d770:	test   eax,0x4d002000
   14000d775:	add    BYTE PTR [rcx+0x0],ch
   14000d778:	movsxd eax,DWORD PTR [rax]
   14000d77a:	jb     0x14000d77c
   14000d77c:	outs   dx,DWORD PTR ds:[rsi]
   14000d77d:	add    BYTE PTR [rbx+0x0],dh
   14000d780:	outs   dx,DWORD PTR ds:[rsi]
   14000d781:	add    BYTE PTR [rsi+0x0],ah
   14000d784:	je     0x14000d786
   14000d786:	and    BYTE PTR [rax],al
   14000d788:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d78c:	jb     0x14000d78e
   14000d78e:	jo     0x14000d790
   14000d790:	outs   dx,DWORD PTR ds:[rsi]
   14000d791:	add    BYTE PTR [rdx+0x0],dh
   14000d794:	(bad)  
   14000d795:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d799:	add    BYTE PTR [rdi+0x0],ch
   14000d79c:	outs   dx,BYTE PTR ds:[rsi]
   14000d79d:	add    BYTE PTR [rsi],ch
   14000d79f:	add    BYTE PTR [rax],ah
   14000d7a1:	add    BYTE PTR [rcx+0x0],al
   14000d7a4:	ins    BYTE PTR es:[rdi],dx
   14000d7a5:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000d7a9:	add    BYTE PTR [rdx+0x0],dh
   14000d7ac:	imul   eax,DWORD PTR [rax],0x680067
   14000d7b2:	je     0x14000d7b4
   14000d7b4:	jae    0x14000d7b6
   14000d7b6:	and    BYTE PTR [rax],al
   14000d7b8:	jb     0x14000d7ba
   14000d7ba:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d7be:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d7c2:	jbe    0x14000d7c4
   14000d7c4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000d7c9:	add    BYTE PTR [rax],al
   14000d7cb:	add    BYTE PTR [rax+rax*1],bh
   14000d7ce:	or     al,BYTE PTR [rax]
   14000d7d0:	add    DWORD PTR [rax],eax
   14000d7d2:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000d7d6:	imul   eax,DWORD PTR [rax],0x690067
   14000d7dc:	outs   dx,BYTE PTR ds:[rsi]
   14000d7dd:	add    BYTE PTR [rcx+0x0],ah
   14000d7e0:	ins    BYTE PTR es:[rdi],dx
   14000d7e1:	add    BYTE PTR [rsi+0x0],al
   14000d7e4:	imul   eax,DWORD PTR [rax],0x65006c
   14000d7ea:	outs   dx,BYTE PTR ds:[rsi]
   14000d7eb:	add    BYTE PTR [rcx+0x0],ah
   14000d7ee:	ins    DWORD PTR es:[rdi],dx
   14000d7ef:	add    BYTE PTR [rbp+0x0],ah
   14000d7f2:	add    BYTE PTR [rax],al
   14000d7f4:	push   rdx
   14000d7f5:	add    BYTE PTR [rax+rax*1+0x70],ah
   14000d7f9:	add    BYTE PTR [rbx+0x0],dl
   14000d7fc:	(bad)  
   14000d7fd:	add    BYTE PTR [rsi],ch
   14000d7ff:	add    BYTE PTR [rbp+0x0],ah
   14000d802:	js     0x14000d804
   14000d804:	add    BYTE PTR gs:[rax],al
   14000d807:	add    BYTE PTR [rdx+0x0],ch
   14000d80a:	and    eax,0x50000100
   14000d80f:	add    BYTE PTR [rdx+0x0],dh
   14000d812:	outs   dx,DWORD PTR ds:[rsi]
   14000d813:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000d817:	add    BYTE PTR [rbx+0x0],ah
   14000d81a:	je     0x14000d81c
   14000d81c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000d820:	ins    DWORD PTR es:[rdi],dx
   14000d821:	add    BYTE PTR [rbp+0x0],ah
   14000d824:	add    BYTE PTR [rax],al
   14000d826:	add    BYTE PTR [rax],al
   14000d828:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000d82c:	movsxd eax,DWORD PTR [rax]
   14000d82e:	jb     0x14000d830
   14000d830:	outs   dx,DWORD PTR ds:[rsi]
   14000d831:	add    BYTE PTR [rbx+0x0],dh
   14000d834:	outs   dx,DWORD PTR ds:[rsi]
   14000d835:	add    BYTE PTR [rsi+0x0],ah
   14000d838:	je     0x14000d83a
   14000d83a:	scas   al,BYTE PTR es:[rdi]
   14000d83b:	add    BYTE PTR [rax],ah
   14000d83d:	add    BYTE PTR [rdi+0x0],dl
   14000d840:	imul   eax,DWORD PTR [rax],0x64006e
   14000d846:	outs   dx,DWORD PTR ds:[rsi]
   14000d847:	add    BYTE PTR [rdi+0x0],dh
   14000d84a:	jae    0x14000d84c
   14000d84c:	scas   al,BYTE PTR es:[rdi]
   14000d84d:	add    BYTE PTR [rax],ah
   14000d84f:	add    BYTE PTR [rdi+0x0],cl
   14000d852:	jo     0x14000d854
   14000d854:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d858:	(bad)  
   14000d859:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d85d:	add    BYTE PTR [rsi+0x0],ch
   14000d860:	add    BYTE PTR [eax],ah
   14000d863:	add    BYTE PTR [rbx+0x0],dl
   14000d866:	jns    0x14000d868
   14000d868:	jae    0x14000d86a
   14000d86a:	je     0x14000d86c
   14000d86c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000d870:	add    BYTE PTR [rax],al
   14000d872:	add    BYTE PTR [rax],al
   14000d874:	rex.RX add BYTE PTR [rcx],r10b
   14000d877:	add    BYTE PTR [rcx],al
   14000d879:	add    BYTE PTR [rax+0x0],dl
   14000d87c:	jb     0x14000d87e
   14000d87e:	outs   dx,DWORD PTR ds:[rsi]
   14000d87f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000d883:	add    BYTE PTR [rbx+0x0],ah
   14000d886:	je     0x14000d888
   14000d888:	push   rsi
   14000d889:	add    BYTE PTR [rbp+0x0],ah
   14000d88c:	jb     0x14000d88e
   14000d88e:	jae    0x14000d890
   14000d890:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d896:	add    BYTE PTR [rax],al
   14000d898:	xor    DWORD PTR [rax],eax
   14000d89a:	xor    BYTE PTR [rax],al
   14000d89c:	add    BYTE PTR cs:[rax],dh
   14000d89f:	add    BYTE PTR [rsi],ch
   14000d8a1:	add    BYTE PTR [rcx],dh
   14000d8a3:	add    BYTE PTR [rax],dh
   14000d8a5:	add    BYTE PTR [rdx],dh
   14000d8a7:	add    BYTE PTR [rax+rax*1],dh
   14000d8aa:	xor    BYTE PTR [rax],al
   14000d8ac:	add    BYTE PTR cs:[rcx],dh
   14000d8af:	add    BYTE PTR [rsi],dh
   14000d8b1:	add    BYTE PTR [rbx],dh
   14000d8b3:	add    BYTE PTR [rax],bh
   14000d8b5:	add    BYTE PTR [rax+rax*1],dh
   14000d8b8:	add    BYTE PTR [rax],al
   14000d8ba:	add    BYTE PTR [rax],al
   14000d8bc:	add    BYTE PTR [rax],r8b
   14000d8bf:	add    BYTE PTR [rcx],al
   14000d8c1:	add    BYTE PTR [rsi+0x0],dl
   14000d8c4:	(bad)  
   14000d8c5:	add    BYTE PTR [rdx+0x0],dh
   14000d8c8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d8cc:	ins    BYTE PTR es:[rdi],dx
   14000d8cd:	add    BYTE PTR [rbp+0x0],ah
   14000d8d0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d8d4:	data16 add BYTE PTR [rdi+0x0],ch
   14000d8d8:	add    BYTE PTR [rax],al
   14000d8da:	add    BYTE PTR [rax],al
   14000d8dc:	and    al,0x0
   14000d8de:	add    al,0x0
   14000d8e0:	add    BYTE PTR [rax],al
   14000d8e2:	push   rsp
   14000d8e3:	add    BYTE PTR [rdx+0x0],dh
   14000d8e6:	(bad)  
   14000d8e7:	add    BYTE PTR [rsi+0x0],ch
   14000d8ea:	jae    0x14000d8ec
   14000d8ec:	ins    BYTE PTR es:[rdi],dx
   14000d8ed:	add    BYTE PTR [rcx+0x0],ah
   14000d8f0:	je     0x14000d8f2
   14000d8f2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d8f8:	add    BYTE PTR [rax],al
   14000d8fa:	add    BYTE PTR [rax],al
   14000d8fc:	or     DWORD PTR [rax+rsi*4],eax
   14000d8ff:	add    al,0xcd
   14000d901:	dec    ch
   14000d903:	dec    al
   14000d905:	add    BYTE PTR [rax],al
   14000d907:	add    BYTE PTR [rax],al
   14000d909:	add    BYTE PTR [rcx],al
   14000d90b:	add    BYTE PTR [rax],al
   14000d90d:	add    BYTE PTR [rax],al
   14000d90f:	add    BYTE PTR [rcx],dl
   14000d911:	add    BYTE PTR [rax],al
   14000d913:	add    BYTE PTR [rax],al
   14000d915:	add    BYTE PTR [rax],al
   14000d917:	add    BYTE PTR [rdx],al
   14000d919:	add    BYTE PTR [rax],al
   14000d91b:	add    BYTE PTR [rbx+0x7c],bl
   14000d91e:	lods   eax,DWORD PTR ds:[rsi]
   14000d91f:	(bad)  
   14000d920:	pop    rdi
   14000d921:	(bad)  
   14000d922:	sbb    eax,0x160f5f11
   14000d927:	(bad)
   14000d92a:	(bad)  
   14000d92c:	leave  
   14000d92d:	adc    dh,BYTE PTR [rdi]
   14000d92f:	mov    bl,0xd
   14000d931:	iret   
   14000d932:	sub    DWORD PTR [rdx-0x1b],ebp
   14000d935:	rex.RB rcl BYTE PTR [r8-0x70d64e81],cl
	...
   14000d954:	mov    BYTE PTR [rax],al
   14000d956:	add    BYTE PTR [rax],al
   14000d958:	(bad)  
   14000d959:	add    BYTE PTR [rax],al
   14000d95b:	add    BYTE PTR [rax+0x8000000],bl
   14000d961:	add    BYTE PTR [rax],al
   14000d963:	add    BYTE PTR [rax+0xe000000],ah
   14000d969:	add    BYTE PTR [rax],al
   14000d96b:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000d979:	add    BYTE PTR [rax],al
   14000d97b:	add    BYTE PTR [rax+0xc000000],bh
   14000d981:	add    BYTE PTR [rax],al
   14000d983:	add    BYTE PTR [rax],al
   14000d985:	add    BYTE PTR [rax],al
   14000d987:	add    BYTE PTR [rbp+0x0],cl
   14000d98a:	push   rbp
   14000d98b:	add    BYTE PTR [rcx+0x0],cl
	...
   14000d996:	add    BYTE PTR [rax],al
   14000d998:	adc    BYTE PTR [rax],al
   14000d99a:	add    BYTE PTR [rax],al
   14000d99c:	sbb    BYTE PTR [rax],al
   14000d99e:	add    BYTE PTR [rax],al
   14000d9a0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000d9a4:	rex.WB add BYTE PTR [r8],al
	...
   14000d9af:	add    BYTE PTR [rsi],al
   14000d9b1:	add    BYTE PTR [rax],al
   14000d9b3:	add    BYTE PTR [rax],dl
   14000d9b5:	add    BYTE PTR [rax],al
   14000d9b7:	add    BYTE PTR [rbp+0x0],ah
   14000d9ba:	outs   dx,BYTE PTR ds:[rsi]
   14000d9bb:	add    BYTE PTR [rip+0x53005500],ch        # 0x193012ec1
   14000d9c1:	add    BYTE PTR [rax],al
   14000d9c3:	add    BYTE PTR [rax],al
   14000d9c5:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000e000 <.reloc>:
   14000e000:	add    BYTE PTR [rax+0xdc0000],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	shl    BYTE PTR [rbx-0x5c175c28],1
   14000e00e:	lock movabs ds:0xa4d8a4d0a410a408,eax
   14000e018:	mov    al,0xa5
   14000e01a:	mov    eax,0xc8a5c0a5
   14000e01f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e020:	shl    BYTE PTR [rbp-0x5a1f5a28],1
   14000e026:	call   0x138a6d0d0
   14000e02b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e02c:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14000e032:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   14000e038:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   14000e03e:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e040:	push   rax
   14000e041:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e042:	pop    rax
   14000e043:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e044:	(bad)  
   14000e045:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e046:	push   0x78a670a6
   14000e04b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e04c:	and    BYTE PTR [rsi-0x596f5978],0x98
   14000e053:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e054:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14000e05d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e05e:	enter  0xd0a6,0xa6
   14000e062:	fsub   DWORD PTR [rsi-0x59175920]
   14000e068:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e06a:	clc    
   14000e06b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e06c:	add    BYTE PTR [rdi-0x58ef58f8],ah
   14000e072:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14000e078:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   14000e07e:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000e080:	push   rax
   14000e081:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e082:	pop    rax
   14000e083:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e084:	(bad)  
   14000e085:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e086:	push   0x78a770a7
   14000e08b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e08c:	and    BYTE PTR [rdi-0x586f5878],0x98
   14000e093:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e094:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14000e09d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e09e:	enter  0xd0a7,0xa7
   14000e0a2:	fsub   DWORD PTR [rdi-0x58175820]
   14000e0a8:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e0aa:	clc    
   14000e0ab:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e0ac:	add    BYTE PTR [rax-0x57ef57f8],ch
   14000e0b2:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14000e0b8:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14000e0be:	rex.W test al,0x50
   14000e0c1:	test   al,0x58
   14000e0c3:	test   al,0x60
   14000e0c5:	test   al,0x68
   14000e0c7:	test   al,0x70
   14000e0c9:	test   al,0x78
   14000e0cb:	test   al,0x80
   14000e0cd:	test   al,0x88
   14000e0cf:	test   al,0x90
   14000e0d1:	test   al,0x98
   14000e0d3:	test   al,0xa0
   14000e0d5:	test   al,0xa8
   14000e0d7:	test   al,0xb0
   14000e0d9:	test   al,0x0
   14000e0db:	add    BYTE PTR [rax],al
   14000e0dd:	nop
   14000e0de:	add    BYTE PTR [rax],al
   14000e0e0:	adc    BYTE PTR [rax],al
   14000e0e2:	add    BYTE PTR [rax],al
   14000e0e4:	sbb    BYTE PTR [rdx-0x5dc75dd0],ah
   14000e0ea:	movabs ds:0xc0000b000,al
   14000e0f4:	.byte 0x20
   14000e0f5:	.byte 0xa0
	...
